push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
jmp
mov
pop
ret
int3
push
mov
mov
add
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
movl
movl
movl
push
call
test
jne
xor
jmp
mov
mov
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
jne
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
call
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
call
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
push
push
call
mov
push
push
call
push
push
push
push
push
push
push
call
mov
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
sub
mov
mov
push
push
mov
push
call
add
mov
add
mov
popa
pushl
xor
dec
jne
ret
xor
je
jmp
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmpl
jne
mov
mov
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
push
dec
inc
push
push
push
dec
dec
add
add
add
add
inc
add
add
data16
data16
add
add
gs
jo
outsb
dec
gs
add
dec
add
outsb
add
add
xor
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
xor
inc
add
add
jge
pop
add
add
jae
imul
dec
add
add
jo
add
add
outsb
add
add
outsl
add
dec
add
add
add
add
jae
jns
jae
je
add
xor
xor
pop
add
inc
add
jb
imul
add
js
add
add
add
add
add
or
add
js
nop
xor
cwtl
xor
mov
xor
add
cld
adc
add
sbb
daa
sub
daa
cmp
daa
arpl
sub
js
mov
cmp
sub
lock
shrl
gs
nop
sub
add
add
inc
adc
add
and
mov
nop
and
xor
shll
and
xor
and
xor
and
xor
xor
jp
xchg
and
jmp
xor
daa
adc
xor
xor
sti
es
xor
xor
daa
jnp
lea
xchg
xor
fdivs
mov
in
xchg
es
xor
and
fcompl
gs
pop
jnp
add
pop
sahf
xor
pop
lods
xor
pop
les
pop
iret
xor
pop
fnstenv
pop
in
ss
clc
xor
pop
add
mov
pop
xor
jb
mov
xor
in
pop
add
std
and
add
sub
cmp
pop
bound
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
je
jbe
arpl
jo
gs
add
inc
jnp
cmp
jb
data16
cmp
add
inc
jnp
cmp
jb
data16
sbb
add
dec
jno
dec
sbb
insb
jmp
ja
inc
add
add
gs
fdivs
imul
data16
out
je
add
add
ret
jo
push
add
inc
imul
adc
add
jo
dec
jae
jne
popa
pop
popa
outsb
push
adc
add
pop
inc
add
push
inc
add
pop
inc
add
pop
inc
add
add
inc
add
inc
add
inc
add
je
push
jnp
inc
sub
gs
add
sarb
fs
in
jns
add
push
add
out
jo
outsb
loope
xor
and
insb
add
add
mov
jbe
mov
cs
jo
jae
pop
add
test
pop
cs
ja
add
insl
arpl
add
jb
jno
insb
inc
jo
outsl
arpl
add
cmp
je
jae
inc
xor
arpl
add
pop
jp
popa
xor
imul
sub
jnp
je
jae
push
idivb
gs
add
mov
ja
outsl
out
add
out
outsb
jb
jmp
jo
insb
add
add
ret
outsb
je
mov
arpl
fs
movsl
arpl
add
incb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
cltd
inc
adc
lods
or
add
pop
adc
jmp
or
add
push
sbb
jmp
push
adc
jmp
sbb
add
cmpsl
adc
jmp
notl
add
add
adc
in
pop
adc
add
pop
adc
add
verw
push
out
jmp
pop
adc
add
add
add
add
add
adc
add
adc
add
mov
add
fstl
add
in
adc
add
adc
add
adc
add
adc
add
lods
add
jge
add
popf
adc
add
adc
add
adc
add
add
insl
adc
add
add
pop
adc
add
add
insl
adc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsl
gs
add
add
les
add
adc
add
mov
add
add
add
add
add
add
add
and
pop
popa
cmp
add
and
add
jecxz
add
or
add
lret
add
add
add
add
add
add
add
add
inc
int3
jno
lock
add
lods
sub
jmp
daa
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
jmp
pop
adc
jmp
pop
adc
add
add
pop
push
add
insl
push
add
insl
push
add
pop
push
add
pop
push
add
sub
push
add
sbb
push
add
sub
push
add
sbb
push
add
in
adc
add
fstl
add
in
adc
add
add
adc
add
lods
adc
add
popf
adc
add
lods
adc
add
popf
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
lret
add
mov
add
mov
add
mov
add
ja
pop
adc
mov
pop
adc
mov
pop
adc
mov
pop
adc
mov
pop
adc
mov
mov
pop
adc
mov
pop
adc
mov
pop
adc
mov
pop
adc
mov
add
dec
ret
pop
adc
ret
pop
adc
ret
ret
sub
ret
pop
adc
ret
movsl
ret
jmp
ret
add
lds
add
adc
gs
adc
loope
inc
adc
lea
jnp
adc
xchg
lahf
inc
adc
mov
inc
adc
aad
adc
add
inc
adc
jmp
cmp
add
pop
adc
in
arpl
add
mov
add
mov
adc
push
mov
add
stos
adc
and
adc
aad
adc
jecxz
adc
repz
add
add
scas
add
repz
add
fldcw
add
test
add
cmpsl
scas
add
jg
add
add
cmp
add
mov
add
aas
movsb
add
push
movsb
add
push
movsb
add
mov
add
xor
add
sub
mov
mov
add
loope
add
lret
movsb
add
daa
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
ret
add
ret
add
ret
add
ret
add
ret
add
ret
add
ret
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
scas
add
scas
add
lods
add
lods
add
xchg
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
add
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
stos
pop
adc
test
pop
adc
test
pop
adc
stos
pop
adc
stos
pop
adc
test
pop
adc
lods
pop
adc
scas
pop
adc
lods
pop
adc
lods
pop
adc
inc
mov
pop
add
pop
add
pop
add
pop
add
pop
pop
add
jno
add
push
popa
pop
add
pop
pop
add
mov
add
lahf
pop
add
scas
pop
add
pop
add
pop
add
cwtl
pop
add
outsl
pop
add
pusha
pop
add
pop
pop
add
outsl
pop
add
push
pop
add
pop
pop
add
push
pop
add
push
add
push
add
mov
add
xchg
mov
add
xchg
mov
mov
add
mov
mov
add
lods
push
add
mov
les
add
add
insl
push
add
arpl
add
gs
add
insl
push
add
pop
aam
add
aam
add
pushf
add
ret
pushf
add
add
add
lea
add
jnp
add
insl
fwait
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
add
rolb
rol
add
rolb
mov
add
rolb
adc
roll
arpl
pop
adc
rolb
aaa
rolb
or
pop
adc
mov
pop
adc
movl
adc
rolb
dec
rolb
imul
pop
adc
rolb
jge
pop
adc
movl
adc
rolb
adc
rolb
ret
rolb
adc
roll
or
pop
adc
rolb
imul
adc
roll
ja
pop
adc
roll
sub
pop
adc
ret
add
inc
adc
or
adc
sti
adc
pop
adc
sbb
adc
or
adc
pop
ret
adc
dec
lret
adc
inc
ret
adc
pop
les
add
lds
add
mov
adc
xchg
adc
add
adc
xchg
inc
adc
mov
add
inc
adc
in
dec
adc
xlat
inc
adc
mov
inc
adc
insl
dec
adc
push
inc
adc
cmp
inc
adc
and
add
fwait
rolb
add
add
mov
add
popa
roll
add
rolb
add
movsl
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
add
inc
rolb
add
add
dec
rolb
add
roll
add
add
push
aam
add
add
gs
add
add
mov
add
add
add
rolb
add
sub
add
ret
add
add
ret
add
lds
add
add
add
aam
add
aam
add
add
add
add
roll
add
roll
add
roll
add
rolb
add
roll
add
roll
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
mov
add
leave
roll
add
roll
add
roll
add
int
pop
adc
roll
adc
add
cmc
add
faddl
add
xlat
add
out
add
popa
mov
pop
adc
add
lcall
adc
add
or
pop
adc
mov
add
stc
add
jmp
add
testb
xchg
aas
mov
adc
add
add
ljmp
xchg
out
add
in
add
or
pop
adc
add
push
add
xchg
add
jp
add
pop
adc
fwait
jp
add
pop
adc
jmp
xor
adc
mov
aad
add
pop
add
pop
add
mov
add
mov
add
mov
add
add
pop
add
pop
add
aad
add
pop
adc
minps
add
dec
pop
add
dec
pop
add
mov
pop
add
mov
pop
add
pop
add
pop
add
pop
pop
add
pop
pop
add
xchg
xchg
mov
mov
testb
out
inc
inc
lahf
cmp
lods
and
dec
mov
push
jae
aam
push
ret
sbb
inc
adc
cs
push
mov
scas
sbb
inc
cs
cs
and
xchg
insb
pop
iret
enter
mov
jno
sub
xor
repz
adc
lret
ficompl
xor
jae
rclb
iret
leave
mov
add
je
push
or
add
daa
push
imul
dec
or
mov
pop
sbb
call
push
dec
sub
xor
push
adc
sbb
push
pop
sub
and
ja
sub
mov
popf
xlat
fiaddl
fcoms
sbb
push
sub
ds
jns
fimull
push
fadd
adc
add
call
in
xor
aam
int3
inc
shrl
push
lock
jo
and
add
jmp
daa
rcrl
push
xor
aam
lods
mov
push
jo
and
add
jmp
xor
dec
gs
jmp
popf
push
lock
jo
and
add
jmp
out
orl
push
add
jmp
iret
dec
add
scas
loope
dec
das
adc
jmp
scas
jg
lea
adc
adc
cs
fwait
and
insl
jg
insl
and
adc
jge
and
int
or
adc
scas
mov
inc
xor
movsb
mov
sub
xchg
jmp
stc
loope
push
mov
pushf
and
adc
adc
adc
xchg
add
lds
cli
lahf
or
pop
add
jbe
cs
adc
jl
shlb
mov
in
add
adc
pop
add
out
xorl
or
adc
lods
mov
sbb
nop
inc
add
adc
adc
cs
cmp
rclb
push
push
std
inc
repnz
adc
jo
shlb
ljmp
and
xchg
leave
rcll
mov
add
addr16
add
jns
and
xor
cmc
cmpsb
lret
add
mov
jecxz
pop
leave
adc
add
mov
push
sahf
dec
xor
mov
addl
push
dec
fidivrs
rcll
jge
std
sbb
sbb
insb
mov
stos
jp
fwait
mov
call
add
hlt
rolb
push
loope,pt
mov
cmc
pop
std
call
jno
push
pop
jne
scas
and
xchg
lret
cs
jmp
std
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
jns
adc
add
adc
add
adc
adc
add
imul
inc
adc
add
imul
inc
adc
add
pop
add
leave
add
push
adc
jmp
adc
pop
add
add
pop
adc
jmp
or
jmp
add
cmovno
fisttpl
sub
add
add
or
add
or
add
pushl
add
pmuludq
call
call
add
call
add
or
jmp
cvttps2pi
jmp
add
verw
decl
jmp
or
add
or
add
lods
pop
sub
lods
sbb
add
pop
dec
add
adc
popf
pop
push
add
adc
push
pop
jecxz
dec
adc
add
je
insl
pop
xor
insl
sbb
add
add
add
sbb
add
sbb
pop
inc
add
adc
add
push
sbb
in
pop
cwtl
add
adc
fstpl
jl
in
push
cmp
in
pop
fadds
add
push
pop
add
or
or
mov
or
mov
or
or
add
add
add
or
mov
or
add
or
add
or
add
or
add
add
add
or
mov
or
mov
or
mov
add
add
or
mov
or
mov
jmp
or
adc
or
adc
or
adc
or
jmp
or
dec
adc
or
adc
or
adc
or
adc
or
adc
add
adc
or
adc
or
adc
or
clc
add
adc
or
adc
or
jmp
or
adc
or
adc
add
adc
or
jmp
or
xor
add
add
add
out
sti
add
add
psubd
call
lcall
add
setp
jmp
add
add
adc
jmp
mov
aam
xchg
add
push
sub
jmp
lsl
jmp
push
push
add
rdpmc
add
psllq
call
call
add
setae
jmp
add
adc
jmp
in
sbb
add
sbb
add
sbb
in
sbb
add
sbb
add
adc
add
sbb
add
sbb
add
sbb
popf
sbb
add
sbb
insl
sbb
add
sub
insl
sbb
insl
sbb
add
add
sub
sbb
add
sbb
add
int
or
or
add
add
mov
or
add
add
add
or
mov
or
add
or
add
or
mov
add
add
or
add
or
add
or
add
add
add
or
mov
or
add
add
add
or
mov
or
add
or
adc
or
adc
add
adc
or
jmp
or
adc
or
jmp
or
adc
or
adc
or
fists
jmp
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
add
adc
or
adc
or
adc
or
adc
add
adc
or
adc
or
add
prefetch
jmp
decl
mov
stc
add
add
pcmpgtw
jmp
add
movsl
add
add
add
cmovne
jmp
in
sti
add
add
sysexit
add
push
call
unpckhps
jmp
call
clc
lds
dec
add
jmp
jmp
add
incl
add
cmove
jmp
clc
rolb
stc
inc
sbb
jmp
sbb
pop
mov
add
sub
sbb
sbb
ret
in
addps
fisttpll
sbb
fstl
xchg
add
vmread
fisttpll
cmp
fstl
roll
mov
punpckhbw
popf
movaps
popf
adc
add
cmovs
popf
adc
add
add
insl
andps
pop
unpcklps
push
pavgw
ds
add
je
pop
sysenter
add
leave
add
decb
lods
or
or
lods
or
add
or
lods
or
lods
or
add
incb
add
or
or
lods
or
add
push
add
or
or
lods
or
add
push
add
or
or
lods
or
add
or
lods
or
add
or
add
cld
add
or
add
or
add
or
adc
or
adc
or
clc
cld
push
adc
or
adc
or
jmp
or
adc
or
adc
cld
add
or
jmp
or
inc
adc
or
jmp
jmp
cld
push
adc
or
adc
or
adc
or
jmp
or
jmp
or
stc
cld
add
or
adc
or
adc
or
adc
ficompl
add
decl
jmp
push
iret
add
cmp
add
cmp
jmp
push
outsl
add
bndldx
jmp
lcall
jmp
stc
clc
or
jmp
jmp
add
push
lahf
add
fdivs
add
incl
add
push
filds
sti
mov
xor
jmp
push
jg
jmp
call
add
cmpb
jmp
pop
mov
addb
or
jo
pop
mov
ret
cmp
mov
and
sub
mov
addb
mov
loop
std
or
add
mov
sbb
in
rclb
fnstsw
cmp
lods
rcl
mov
mov
sub
lods
shlb
popf
mov
dec
add
repnz
lods
sti
push
add
sti
adc
add
lods
sti
je
lods
sti
xor
lods
cld
lret
or
add
sti
and
lods
cld
stos
add
sti
add
lods
sti
test
cld
ljmp
sti
pop
add
sti
sbb
lods
cld
lcall
sti
jl
lods
sti
cmp
lods
cld
fiaddl
or
add
sti
insb
add
cld
mov
add
sti
mov
jmp
cli
jle
stc
or
adc
sti
adc
sti
notb
aam
inc
adc
or
adc
sti
adc
sti
notb
jmp
or
adc
sti
cmpsb
adc
sti
out
jmp
sti
push
adc
sti
xchg
jmp
cli
loop
stc
or
adc
sti
dec
adc
sti
add
adc
cli
jb
fisttpll
inc
adc
sti
dec
adc
sti
adc
cli
rclb
or
adc
sti
push
adc
sti
out
adc
cli
push
adc
jmp
jg
add
jle
add
cld
push
add
outsl
data16
pop
add
pop
mov
add
dec
inc
add
aas
push
add
ds
add
cld
or
jmp
pop
idiv
call
jmp
setbe
jmp
lods
add
cld
or
jmp
fistps
add
cld
xor
jmp
mov
fldl
sti
cld
sbb
jmp
lods
mov
mov
add
mov
incb
insl
or
add
add
or
add
add
add
add
add
or
cmp
add
or
add
or
add
or
and
or
add
or
or
or
add
in
or
add
or
add
or
sbb
add
rorb
mov
mov
or
pop
xor
or
aam
or
add
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
ljmp
adc
add
ljmp
adc
add
in
add
in
add
in
add
in
add
in
add
in
add
jmp
repnz
adc
push
movups
add
push
out
add
adc
add
jmp
add
add
jmp
add
call
add
jmp
add
add
pop
adc
ljmp
add
pop
adc
in
pop
adc
in
adc
out
pop
adc
out
adc
out
pop
adc
out
adc
icebp
pop
adc
icebp
pop
adc
loopne
adc
loopne
adc
repz
adc
repz
adc
loop
adc
loop
adc
cmc
pop
adc
in
add
adc
in
adc
faddl
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
jno
or
loope
or
add
adc
add
invd
add
invd
add
adc
add
invd
add
or
inc
adc
add
invd
add
adc
add
or
out
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
adc
cld
adc
add
or
cld
adc
add
inc
add
incl
cld
adc
cld
adc
add
mov
add
adc
or
testl
cld
adc
cld
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
cld
adc
add
adc
add
adc
add
cld
adc
add
adc
testl
or
call
add
test
or
sub
or
or
or
mov
or
enter
dec
add
clc
pop
or
js
or
mov
add
mov
add
js
or
clc
pop
or
lock
or
jo
or
and
or
mov
or
nop
add
or
inc
or
rolb
add
or
addb
add
or
mov
or
add
add
adc
add
adc
add
add
adc
add
or
mov
or
and
or
add
or
adcb
add
adc
add
or
mov
or
xor
or
pusha
adc
add
adc
add
or
rclb
or
add
adc
add
or
js
or
fmuls
or
sub
or
js
or
clc
invd
add
or
enter
js
or
or
or
test
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
std
adc
add
adc
add
adc
add
adc
add
or
std
adc
add
adc
add
or
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sbb
add
add
sbb
add
sbb
add
add
add
pop
sbb
incb
sbb
testb
add
sbb
jbe
sbb
sahf
pop
sbb
xchg
push
sbb
push
add
add
pop
sbb
fiadds
sbb
push
sbb
pop
add
add
sbb
jle
sbb
jbe
sbb
incb
sbb
testb
add
pop
sbb
out
add
sbb
popw
sbb
pop
push
sbb
add
sbb
add
adc
add
or
xchg
push
or
push
adc
or
ret
add
adc
or
adc
or
jb
or
add
or
loop
or
push
adc
or
mov
adc
or
add
or
mov
adc
adc
or
adcb
add
or
jb
or
bound
or
pop
adc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
add
add
out
pop
pop
loope
sbb
loope
sbb
lock
sbb
or
add
or
stc
sbb
repz
or
or
or
add
or
clc
sbb
repnz
or
or
or
add
or
sti
pop
or
adc
or
or
or
add
or
sti
pop
or
adc
or
or
or
add
or
hlt
adc
or
in
pop
or
add
or
or
push
dec
add
push
pop
add
push
imul
push
imul
push
sub
push
push
cmp
push
push
sub
push
push
sub
push
push
dec
add
push
sbb
push
push
sub
push
push
sub
push
push
sub
push
push
sti
add
push
jmp
push
push
ljmp
pminub
pminsw
pminsw
rsm
add
add
rsm
add
verw
add
setp
pfrcpit2
adc
sti
int
movlps
adc
add
adc
adc
cmpsl
sbb
repnz
adc
pop
adc
push
pop
sbb
sbb
or
sbb
cld
adc
cld
adc
in
mov
sbb
sbb
mov
sbb
push
sbb
push
sbb
push
sbb
out
cmpsb
sbb
out
cmpsb
sbb
push
mov
sbb
mov
sbb
sbb
shufps
call
add
decl
add
out
push
repnz
push
repnz
psrad
pop
psrad
pmullw
or
int
add
add
pop
lock
cmc
pop
call
or
pop
sbb
fstpl
adc
aad
or
int
add
or
pop
lock
cmc
pop
call
or
pop
sbb
fstpl
adc
aam
or
int3
and
or
stc
or
and
or
and
or
and
or
and
or
and
or
aam
or
add
or
hlt
in
sbb
in
or
jmp
or
pop
icebp
add
sbb
or
sti
pop
or
adc
or
out
add
psubusw
add
fincstp
add
clc
testb
testb
cmc
add
adc
adc
adc
adc
adc
adc
adc
sti
call
std
repz
cmc
sti
call
cld
repnz
adc
sbb
adc
fadds
adc
adc
mov
call
adc
pop
jp
pop
pop
pop
add
pop
pop
add
pop
push
or
sbb
add
or
sbb
sbb
xor
or
sbb
push
push
sbb
xor
sbb
add
sbb
add
sbb
adc
sbb
hlt
or
sbb
in
sbb
xlat
or
sbb
push
sbb
pop
push
sbb
add
sbb
push
mov
sbb
mov
sbb
sbb
inc
sbb
call
sbb
out
movsl
sbb
pop
cmpsb
sbb
pop
mov
sbb
mov
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
adc
add
adc
add
mov
add
mov
add
adc
add
adc
add
adc
add
adc
add
jmp
add
call
add
ljmp
adc
add
loope
add
fldl
add
flds
add
loope
add
or
adc
add
sub
adc
add
adc
add
test
add
adc
add
adc
jmp
add
jmp
add
adc
jmp
pop
adc
jmp
cmpsl
cmpsb
jmp
inc
adc
jmp
pop
adc
ja
or
push
out
inc
rcrb
shlb
cmp
mov
jmp
sbb
jns
pop
shl
dec
rcll
fsubl
sub
js
xchg
or
loopne
push
xor
push
mov
sbb
ss
and
insb
adc
aaa
imul
std
add
fldenv
push
add
sti
add
cli
lock
lea
add
add
aad
loope
mov
mov
es
movsl
push
cmp
inc
xchg
fidivrl
lods
dec
in
xlat
xor
dec
filds
push
fadd
pushf
shrb
and
add
push
cmp
mov
mov
fidivrl
mov
jl
jnp
in
mov
add
ret
or
aaa
outsl
jmp
inc
push
vcvtpd2dqy
sub
repnz
xor
add
rclb
jae
jle
aad
outsb
mov
cwtl
mov
mov
mov
sbb
fwait
push
and
fwait
cmpsl
clc
insb
cld
adc
mov
mov
or
pusha
cltd
das
add
cmpsb
test
add
xchg
mov
adc
mov
jl
mov
sbb
or
cmp
lahf
mov
mov
pop
push
mov
ja
hlt
sahf
enter
dec
push
xchg
add
push
shlb
inc
lods
lods
push
int
mov
jo
jnp
mov
inc
in
push
xor
or
fst
xor
push
inc
dec
push
daa
fsts
movsbl
push
leave
int3
push
sub
cmp
mov
out
rcrl
mov
mov
das
lret
ficomps
loop,pn
xor
dec
sub
leave
xchg
push
mulb
cmc
movsl
imul
mov
leave
ljmp
mov
jae
or
jecxz
sub
out
insb
or
xlat
push
in
push
add
pop
mov
jge
orl
scas
xor
xchg
push
imul
jmp
scas
imul
dec
mov
sar
cmp
fcmovnu
adc
dec
frstor
enter
jbe
mov
mov
cmp
addl
jg
fisttps
add
cmpsb
inc
lahf
mov
divb
call
or
dec
add
dec
cmp
or
addr16
mov
imul
mov
dec
shrl
imul
or
adc
add
mov
mov
jbe
pop
mov
mov
mov
xchg
mov
fwait
rclb
xchg
fnstenv
mov
shll
arpl
pusha
push
movsb
nop
insl
push
push
std
or
in
or
or
cli
pop
add
imul
jae
cmc
sub
push
sbb
rsqrtps
push
xorb
fdivl
mov
mov
fisttps
mov
cmpsb
shlb
ja
xchg
xchg
adc
mov
dec
jae
dec
dec
cld
mov
sbb
or
popf
incb
shlb
cmp
call
jae
aad
stc
popf
xchg
dec
sub
xchg
cmpsl
imul
xor
xor
sub
ret
and
lds
dec
and
aaa
sbb
pop
fisubs
popa
inc
nop
mov
xor
mov
pop
lret
bound
bound
in
int
mov
adc
push
sahf
out
mov
mov
jmp
adc
adc
movnti
push
sbb
cmpsb
adc
test
stc
sbb
out
clc
xor
sub
insb
mov
sub
push
bound
dec
and
xor
rcll
lret
sub
lods
call
mov
cwtl
xchg
ret
mov
repz
aas
push
out
popa
lock
mov
add
addl
cmp
fwait
out
sub
test
mov
mov
pop
int
dec
call
lahf
nop
lret
dec
mov
mov
test
push
push
aam
sub
test
inc
pop
jbe
dec
xchg
popa
pop
leave
rcll
imul
xchg
sbb
int
dec
sub
cli
push
movups
sbb
jp
inc
lret
cmp
pop
lret
jo
pop
es
mov
in
xor
xchg
sbb
push
fs
xchg
inc
outsl
lahf
adc
shrl
shl
sub
pop
sub
movsb
or
push
fstp
push
cmp
inc
in
mov
outsb
fmulp
shll
mov
xchg
pushf
out
stos
int
pop
in
fistpl
pop
bnd
jb
scas
xchg
addl
and
ficoml
and
sub
push
scas
pop
hlt
pop
movsb
ja
out
mov
mov
sarl
stos
movsl
test
mov
es
movsl
sbb
push
pop
mov
add
add
cmovae
fsubl
or
cmp
setns
into
mov
int3
pop
into
push
test
dec
dec
stos
test
or
jae
dec
jne
sub
aaa
dec
xchg
or
andb
leave
ret
sbb
rcl
inc
sbb
adc
xor
lahf
sbb
cs
pop
lock
mov
add
jnp
inc
dec
cmp
xor
xchg
sbb
jbe
out
lds
rcl
nop
ss
int3
xlat
mov
xchg
lcall
cmpsb
test
mov
and
scas
adc
cli
repz
jo
fsubrs
cltd
shll
repz
mov
ljmp
ja
fcmovb
ss
jmp
sub
movsl
add
sbb
sub
gs
inc
movsb
int
pop
mov
sub
adc
xor
daa
lock
ds
add
cmp
scas
jg
push
mov
mov
mov
inc
pop
gs
xchg
fnstenv
jo
mov
jg
xchg
xchg
xor
pushf
sub
xlat
cmp
inc
or
or
inc
add
mov
mov
mov
push
pop
test
xor
arpl
call
aam
repz
ficoms
test
popf
adc
sti
xchg
gs
xchg
jmp
push
push
add
cli
inc
fdivrp
mov
mov
out
inc
filds
leave
xor
aam
pop
int3
fisubs
inc
lcall
lcall
xor
jbe
inc
outsl
das
dec
out
out
fdivr
lods
jmp
loop
cli
stc
jmp
mov
ljmp
inc
push
rcrb
arpl
arpl
rolb
inc
in
mov
cld
sub
xlat
inc
push
sbb
dec
mov
in
cltd
push
pop
lods
mov
fiaddl
mov
js
pop
pop
cmp
je
add
inc
xor
js
insb
into
out
jne
ss
and
out
pop
adc
adc
lock
xchg
test
push
dec
add
mov
mov
or
lods
fsts
adc
mov
or
mov
lret
and
jo
add
imul
loope
pop
xor
fdivl
dec
jle
xchg
xchg
push
out
push
stos
inc
idiv
cmp
mov
dec
pop
aas
mov
adc
add
clc
roll
movb
cmp
pop
push
ror
push
jmp
add
add
jne
adc
mov
push
xchg
or
or
imul
or
mov
pop
or
fs
in
mov
mov
and
cs
inc
and
push
jmp
outsl
imul
inc
mov
testl
cmp
or
std
sbb
mov
sti
or
sbb
xlat
mov
push
lods
or
pop
cltd
inc
sti
mov
xchg
fsubr
mov
loope
adc
aad
pushf
fistl
sbb
daa
push
xchg
xor
xchg
sbb
loope
add
loopne
sahf
outsl
lock
js
out
xchg
scas
dec
icebp
in
and
es
icebp
loopne
icebp
or
call
ljmp
mov
mov
inc
in
cmp
add
out
xor
in
gs
sub
and
mov
ljmp
ficoms
sbb
and
cmp
push
enter
outsb
mov
push
or
rcll
add
or
ja
pusha
sbb
sahf
pop
jnp
mov
insb
inc
adc
sahf
dec
outsl
nop
cwtl
mov
cmp
imul
mov
push
push
inc
push
loope
ret
cmc
add
cs
popa
cwtl
dec
jge
sbb
arpl
ss
add
sahf
imul
sub
add
dec
xor
dec
cmc
out
dec
and
das
dec
jnp
in
dec
test
jno
pop
inc
jle
sbb
dec
dec
inc
inc
lods
jb
inc
sub
push
inc
add
mov
inc
loopne
mov
xor
push
or
xor
cli
je
mov
mov
and
push
imul
cmp
and
cmp
pop
loop
pop
pop
sbb
pop
jns
jmp
pop
mov
outsb
pop
nop
imul
repz
mov
in
jb
xchg
add
out
xor
jns
add
cmp
and
jecxz
xor
pusha
jmp
scas
jl
fldl
inc
imul
mov
pop
xchg
ret
push
mov
sub
scas
mov
push
pop
pushf
mov
add
and
xorl
jne
inc
or
fxch
jno
lea
movsl
dec
add
inc
js
lret
sub
jp
pop
push
mov
jno
testb
outsl
les
shrl
negl
push
lret
repz
pop
data16
mov
bound
xor
fs
and
movsl
xor
fcmovu
pop
xor
movsl
dec
pop
push
jb
nop
push
mov
cmc
push
adcl
pop
das
sub
cmp
cvtdq2ps
push
sbbb
inc
pusha
int3
push
bound
cmpsl
fldenv
loopne
sub
add
mov
inc
mov
xor
xchg
sarl
iret
lahf
sahf
xchg
adc
mov
mov
push
cltd
xor
fwait
sbb
sbbl
add
mov
imul
popl
rorb
xchg
mov
test
orl
jo
popf
inc
mov
test
pop
es
icebp
push
test
add
sbb
add
movsb
stos
mov
mov
scas
pop
ljmp
add
lods
adc
mov
dec
jne
sub
mov
mov
aad
mov
pop
or
mov
popl
mov
xorb
out
mov
and
push
cmp
mov
jae
push
mov
icebp
mov
sbb
aam
mov
add
add
add
sub
outsb
push
jb
push
scas
jp
jnp
xchg
pop
inc
imul
jno
in
mov
repnz
or
jl
add
add
mov
sbb
in
hlt
bound
cmp
xor
aam
lods
outsl
adcb
mov
jnp
push
imul
adc
and
xor
pop
movsb
cmp
mov
add
mov
push
in
les
dec
into
sbb
jo
mov
lret
xchg
sub
sub
sbb
add
ret
mov
movsl
lret
xchg
mov
dec
mov
mov
mov
ss
lret
loop
mov
xor
test
shl
jmp
jg
add
push
in
inc
addr16
nop
cmpsb
mov
inc
add
lahf
sub
xchg
lods
mov
push
xor
mov
jnp
xchg
push
lahf
mov
mov
aas
mov
xor
mov
adc
scas
pop
lods
enter
gs
mov
xchg
sti
das
out
pop
mov
dec
insb
mov
mov
imul
inc
add
dec
sti
sbb
cmpsb
lock
ret
sub
sub
inc
pop
andl
xlat
icebp
in
add
int3
push
add
adc
movsb
jle
or
push
out
xorl
mov
pop
mov
lcall
dec
xchg
sub
adc
or
inc
decl
pop
icebp
cmpsb
inc
lret
fs
sub
push
fbld
daa
in
jbe
out
jno
jns
leave
mov
mov
arpl
imul
shrl
pop
in
inc
loope
insl
test
call
mov
aad
orb
in
test
call
jge
mov
add
push
pop
pop
push
pop
xor
sbb
jmp
nop
in
cmpsb
jae
xchg
pop
stos
xor
lea
sub
fwait
push
xchg
xor
in
adc
or
sti
add
add
data16
mov
ljmp
push
push
and
loopne
popf
mov
pop
fildll
xor
lret
ljmp
push
sub
jno
test
vpaddq
sub
out
xchg
daa
outsl
in
cli
scas
mov
cmpsb
jo
push
dec
jmp
mov
push
push
rolb
pushf
loop
fs
shl
fwait
pop
xor
fidivl
je
mov
leave
fildll
cld
push
jae
add
daa
mov
leave
scas
fadds
ret
sbb
movsb
pop
and
scas
xchg
sub
or
scas
sbb
push
fdivr
push
push
pusha
inc
loope
jb
ds
or
push
cmpsb
shrl
out
push
cs
sub
jno
jne
mov
fistl
mov
cmp
mov
movsl
inc
ret
mov
lods
jmp
lea
or
sbbl
sbb
mov
xchg
mov
test
push
mov
jo,pn
loopne
lea
sahf
add
and
mov
loopne
imul
inc
add
nop
cmpl
movsl
pop
pop
enter
in
push
icebp
or
subb
aam
pop
mov
sbb
ss
sarb
push
out
cwtl
jbe
adc
sbb
loope
lea
repz
daa
test
ret
adc
icebp
sarl
lods
test
and
fs
ss
inc
sbb
add
lock
outsl
fadds
sarl
test
jno
or
pop
mov
rol
xchg
outsl
cmp
je
mov
insb
mov
ret
fmuls
and
loop
add
add
add
lcall
push
pop
jne
std
or
hlt
andl
roll
and
ss
mov
or
mov
mov
das
xor
mov
jns
and
add
jp
xor
inc
sarw
test
pop
mov
jecxz
mov
dec
cli
daa
pushf
faddp
sub
push
inc
es
or
dec
js
add
push
or
icebp
imul
shrb
in
popf
sub
sbb
add
pushl
int
push
addl
sub
mull
push
fst
cli
add
out
lds
inc
pop
iret
jle
lods
cmp
cmp
push
repnz
pop
cmp
sub
sgdtl
int3
sahf
scas
jb
or
add
js
jnp
push
sub
fcoms
sub
daa
stos
push
in
cmp
call
jno
mov
js
mov
pop
xchg
push
mov
add
test
int3
sbb
mov
dec
xor
xchg
mov
pop
add
das
push
hlt
mov
xor
add
adcb
adc
rcr
les
out
outsl
shr
push
imul
mov
and
xchg
sbb
dec
add
jl
out
dec
gs
in
pop
push
in
into
mov
fisubrs
loop
lret
pusha
mov
les
mov
sti
add
sub
fld1
cmpsl
push
mov
and
push
jle
sbb
arpl
or
add
pop
add
fimull
adc
ret
pop
and
dec
test
sbb
and
fwait
lret
add
cwtl
cmp
cmp
test
push
pop
ljmp
insb
imul
push
mov
insl
dec
loop
or
push
mov
int
mov
pop
adc
mov
adc
jne
das
cwtl
hlt
outsb
inc
inc
sub
lods
int
ret
or
repz
sbb
add
fsubs
addr16
xchg
in
paddd
cmpb
fildll
and
sub
add
sub
jns
mov
or
pop
je
mov
into
dec
xor
icebp
pop
push
pop
jnp
dec
adc
push
mov
scas
insb
dec
mov
add
mov
push
out
pop
lods
clc
lock
lods
call
fnsave
push
dec
dec
mov
or
dec
incl
cmc
sub
pop
xchg
daa
jno
sub
xchg
out
daa
out
sarl
les
call
jne
movsl
or
xchg
xor
fadds
or
sub
sub
cmp
fwait
rorb
adc
add
mov
push
xor
jle
mov
jno
sbb
std
add
xchg
add
cmp
test
pop
or
loopne
push
adc
dec
cmpb
sub
das
mov
jmp
scas
fbld
and
rcl
mov
clc
mov
loop
int
shll
loope
fildl
in
pop
out
adc
add
cmp
cmp
or
sahf
call
push
call
xor
iret
inc
add
std
loope
inc
add
xor
pop
xorl
sub
movsl
sbb
push
sti
inc
sbb
ja
xchg
mov
les
or
stos
cmp
xchg
dec
scas
aaa
dec
sahf
leave
sub
pop
lcall
mov
ret
push
xchg
add
pop
push
mov
add
mov
sub
cltd
sub
cmp
pushf
mov
sbb
and
sub
mov
gs
or
int3
add
add
lock
aam
mov
loopne
push
lea
inc
pop
insb
sbb
xlat
ds
push
mov
lahf
lret
ret
mov
cwtl
add
adc
iret
xchg
adc
push
jecxz
stos
out
add
inc
mov
mov
push
add
test
lods
sbb
fistps
nop
fidivrl
lcall
in
sbb
loop
sahf
jl
cmp
dec
mov
pop
aas
scas
add
clc
add
cmpsb
add
nop
and
lret
xor
scas
stos
and
stc
dec
sub
clc
jle
lock
lods
or
repnz
sub
mov
inc
repz
repnz
xchg
mul
jo
lock
xor
push
mov
imul
hlt
mov
mov
jns
out
cmp
inc
cwtl
dec
mov
inc
ret
or
aaa
jle
out
shrl
out
sbb
test
adc
out
xchg
dec
fadd
adc
iret
repz
xlat
add
into
icebp
push
add
call
mov
sbb
pop
push
dec
lock
add
xchg
jae
cwtl
push
stos
push
test
cli
rcr
lret
xchg
add
and
rclb
stc
lods
aaa
mov
mov
test
std
adc
pop
clc
and
pop
loop
imul
or
stos
mov
mov
fs
out
addr16
and
nop
out
mov
into
iret
ljmp
mov
mov
and
pushf
xor
add
mov
ja
push
into
js
out
push
outsl
cld
sbb
jno
sub
xor
cmp
mov
loopne
push
add
or
push
jns
nop
inc
mov
sub
movsb
cmp
cli
jge
je
mov
push
mov
into
lret
or
fstps
mov
xchg
push
inc
push
ret
xchg
sub
aam
inc
daa
push
test
push
push
mov
fcmovbe
pop
fbld
dec
pop
jmp
mov
add
pop
adc
lods
pop
add
lret
push
negl
pop
sub
lock
mov
cmc
pop
mov
rclb
dec
push
and
inc
mov
pop
pop
mov
mov
test
aaa
push
imul
and
int3
stos
loope
sbb
cs
mov
loope
ret
adc
sub
out
and
push
test
rcrb
movsb
mov
lret
mov
stc
add
int3
cmp
std
jnp
aam
pop
std
out
ds
nop
cmp
test
mov
lock
adc
xor
jbe
gs
mov
sbb
cmc
addr16
xorb
sub
dec
fbstp
mov
std
mov
adc
mulb
or
movl
xlat
dec
imul
test
cmc
jns
test
cwtl
inc
jmp
test
rcr
lret
addl
out
add
cmp
cmpsb
imul
xor
pop
jmp
bound
mov
dec
repz
mov
jno
mov
pop
adc
pop
xorl
xchg
outsl
arpl
xor
or
sub
cmp
xor
cmc
xor
popf
test
push
pop
jl
fs
mull
loopne
inc
dec
test
clc
jl
jmp
mov
lea
test
mov
movsl
mov
iret
jge
ss
mov
mov
stos
mov
xor
out
shlb
jg
ss
ds
std
jo
imul
jae
aas
inc
jp
and
jmp
lds
in
inc
add
fucomi
cld
mov
imul
cmp
mov
hlt
xor
fidivs
sbbl
loopne
jl
loope
mov
or
jmp
cmp
movsl
mov
in
jae
inc
out
std
sbb
rcrb
rcrl
push
ret
mov
enter
fdivs
enter
inc
fistl
aad
inc
and
mov
jo
rcl
int
rorb
mov
add
mov
data16
test
push
sbb
in
pop
cs
outsb
add
cmpsb
ret
ss
inc
mov
mov
mov
add
leave
pop
in
enter
mov
pop
pop
leave
dec
cs
dec
add
lock
mov
and
repnz
push
fstpl
hlt
mov
adc
and
xor
jne
push
test
lcall
mov
insb
sub
testl
call
dec
sub
lock
movsl
fwait
inc
add
jl
dec
loop
mov
fdivr
pop
sbb
mov
in
test
inc
push
add
ss
cs
jo
inc
orl
stc
bound
mov
loopne
paddsb
inc
aam
push
inc
xchg
cmp
pop
push
jg
pop
sbb
stos
pop
pushf
rcl
pop
xlat
pop
pop
pop
mov
pop
lcall
in
lock
push
cmpsl
je
jge
movsl
arpl
xchg
out
mov
fwait
test
mov
mov
fcmovnb
sub
push
push
and
sub
push
out
cmp
mov
cmp
roll
xor
dec
push
sbb
mov
lret
mov
inc
fimull
mov
mov
mov
pop
andl
cs
push
leave
int
pop
add
add
shr
xchg
or
roll
add
lret
cmpsb
pop
push
orl
lds
pop
add
mov
es
push
int3
loopne
popa
rcr
in
xchg
pushf
rcll
dec
mov
lea
movl
pop
and
cwtl
out
sbb
push
inc
popa
sub
jne
add
jnp
pop
inc
xchg
jg
test
es
enter
aam
xor
cmp
cli
pop
shll
xor
iret
pop
xor
pushf
mov
es
loop
sbb
sahf
mov
mov
dec
in
or
xchg
int
out
mov
dec
mov
lea
movsb
add
hlt
int
pop
mov
pop
push
sbb
ss
adc
popa
clc
xchg
daa
mov
sub
jl
dec
lahf
aas
push
int3
sahf
add
sub
andb
sub
lahf
cmc
lods
jnp
hlt
imul
jmp
out
insb
inc
ficoml
jmp
mov
xchg
ljmp
sub
cltd
sub
push
push
scas
lock
or
mov
lods
add
stc
cmp
xchg
sarb
lds
add
xchg
xor
rcll
clc
mov
or
adc
push
mov
repnz
in
dec
xchg
dec
and
sti
fisttpl
and
pop
ficoml
xchg
int3
shl
aam
cmpsl
adc
cld
sub
xchg
and
xor
inc
and
xchg
add
pop
push
test
insl
inc
outsl
insb
lock
repnz
add
je
or
clc
push
out
mov
fstl
cmp
cwtl
mov
pop
inc
pop
inc
push
or
lods
test
cmp
pop
cmp
xchg
sub
mov
enter
cld
xchg
sbb
into
adc
adc
and
jne
cltd
mov
add
cmp
fstps
daa
in
jmp
ret
cmc
fs
or
lods
mov
push
mov
xor
into
fstpt
mov
dec
adc
mov
je
xchg
pop
xchg
add
dec
lods
mov
mov
sbb
sahf
subl
insb
jno
add
enter
lods
fcoml
inc
sub
cld
and
cld
push
or
add
mov
rcrb
mov
fstps
lods
adc
and
enter
addr16
fwait
add
ret
imul
dec
out
loop
hlt
xchg
xchg
lcall
jb
dec
pop
cli
sub
hlt
jbe
jecxz
cld
xlat
or
insl
aas
clc
mov
daa
xor
jg
push
dec
jb
outsb
imulb
push
cmpsb
jge
in
mov
rcl
iret
and
dec
adc
jge
std
js
pop
cwtl
push
jbe
lret
loope
pop
inc
pop
stos
aas
pop
lods
push
nop
mov
dec
stc
into
outsb
sub
add
mov
push
in
inc
pusha
andb
jo
push
and
jae
lods
mov
call
aam
jg
ss
das
add
adc
cmpsb
push
mov
inc
sbb
sbb
cmp
xchg
pop
stc
push
pushl
out
jmp
out
jmp
xchg
or
cmp
mov
pop
push
push
lock
jmp
push
add
shlb
xchg
icebp
push
das
xor
enter
jnp
and
xchg
xlat
xchg
jecxz
daa
jl,pn
sbb
es
cmp
mov
jl
and
leave
mov
xchg
xor
sti
in
mov
or
cmp
push
add
mov
div
jp
in
test
idivl
xor
push
cmp
inc
jb
inc
scas
fisubrl
mov
cmp
out
pop
or
mov
xor
rorb
mov
jnp
pop
jp
addb
mov
jns
insb
mov
sbb
pop
add
and
mov
stc
in
mov
push
into
mov
push
add
movsb
in
xchg
roll
pop
sub
mov
xor
out
adc
std
jle
sbb
in
push
lods
psubsw
rclb
movsl
loop
pop
sbb
cmp
jns
mov
repnz
sbb
add
mov
sbb
jmp
enter
sbb
sar
daa
jnp
add
test
rcr
mov
or
pusha
icebp
dec
sahf
iret
dec
sub
clc
test
int3
adc
dec
push
scas
mov
ret
jbe
and
mov
stc
add
lock
icebp
out
sbb
pop
scas
adc
xchg
in
add
jb
add
and
in
sub
mov
and
orl
mov
es
enter
sahf
push
pop
icebp
and
scas
adc
xchg
insl
and
sub
lea
push
push
mov
cli
fidivrs
xor
push
fmuls
mov
fs
fidivs
insb
add
push
lds
movsl
iret
cs
cmp
aas
sti
inc
sub
inc
sub
test
jl
and
sbb
sbb
pminsw
lods
cmp
aas
xor
mov
out
leave
sub
push
push
mov
fbld
or
lds
add
aad
dec
sub
add
xchg
lock
fdivrl
jns
push
stos
shll
sub
lret
cwtl
andl
or
aas
add
icebp
ljmp
add
pop
sbb
lock
sbb
loop
pop
add
pop
add
cli
pop
std
incl
or
add
or
add
fimuls
push
add
jae
add
adc
add
adc
add
adc
insl
adc
add
adc
cmp
adc
add
adc
dec
adc
add
adc
add
adc
add
adc
add
adc
cmp
adc
cmp
adc
add
adc
add
adc
add
adc
fcoms
pop
add
adc
add
mov
adc
sub
roll
jl
addl
jl
add
jl
add
jnp
add
jnp
add
jp
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jne
loope
arpl
fidivs
fbld
jo
fdivp
fs
adc
lock
and
jmp
inc
and
jmp
dec
out
or
mov
insb
adc
add
out
addl
adc
lcall
or
and
sbbb
sbb
les
add
jmp
into
mov
and
rol
mov
add
roll
add
mov
push
in
sub
or
sti
jae
jne
imul
pop
adc
jmp
pop
adc
mov
xchg
sar
scas
xchg
sar
and
mov
sar
cmpsb
xchg
sar
sahf
mov
pushl
add
call
jnp
mov
jg
decl
mulb
pop
in
push
sub
outsl
fdivs
ljmp
and
cmpsb
pop
lock
pop
idiv
movl
adc
lods
pop
icebp
decl
pop
sar
in
adc
inc
add
inc
add
inc
add
addl
add
lods
inc
add
addb
addb
addl
cmp
add
inc
add
lods
inc
add
jae
pop
adc
add
sbb
adc
or
add
adc
ljmp
or
add
xor
add
dec
adc
fadds
add
add
add
roll
pop
add
aad
pop
add
xchg
jns
xchg
add
lcall
add
fiadds
inc
add
jmp
add
push
hlt
add
lds
pop
add
xlat
add
and
fldl
sub
jle
xor
jl
sub
push
add
xor
cmp
add
and
add
add
adc
add
cmp
inc
adc
and
cmp
and
bound
lar
adc
lret
adc
movl
in
adc
add
adc
cwtl
add
mov
adc
add
add
aad
outsl
add
pop
adc
push
loopne
addb
adc
push
cli
adc
push
fcoms
js
aaa
add
cmp
pusha
add
add
sub
and
or
das
add
adc
xor
adc
add
or
lock
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
or
add
xor
dec
or
add
add
add
sub
add
add
add
adcb
add
adc
add
push
push
add
push
sub
sub
inc
add
push
dec
add
adc
jb
add
adc
push
int
add
lret
add
pop
pop
add
sub
pop
pop
inc
add
dec
add
aaa
add
imul
adc
and
or
xor
or
mov
or
xor
or
xor
or
xor
or
aam
or
aam
or
add
pop
in
lds
out
into
pop
ret
xor
pop
cld
adc
pop
mov
adc
or
hlt
daa
or
hlt
test
lods
hlt
addb
aam
pop
mov
nop
pop
mov
xchg
pop
mov
out
mov
lock
mov
xor
push
mov
adc
pop
rcll
les
pop
adc
pop
enter
lret
adc
pop
aas
and
pop
cmp
and
push
and
pop
dec
and
pop
inc
and
pop
and
pop
fsubl
pop
iret
and
pop
lret
pop
ret
and
pop
in
sbb
in
sbb
out
sbb
pop
mov
and
or
and
or
and
or
and
or
or
and
or
adc
call
inc
or
adc
stos
or
aaa
push
sub
std
xor
das
or
xor
xor
sub
xor
sub
and
das
push
xor
std
sub
daa
or
sub
sbb
and
sbb
and
sbb
daa
push
mov
add
and
mov
or
push
mov
cld
sbb
xchg
or
push
leave
or
add
mov
aad
mov
add
add
or
xchg
or
test
dec
push
aam
dec
push
xlat
or
or
dec
push
mov
or
dec
or
push
cmp
or
push
push
push
add
add
rcpps
sqrtps
andps
andnps
orps
adc
xchg
adc
test
pop
add
adc
jbe
pop
add
adc
adc
add
adc
int
push
and
add
add
push
push
add
pop
push
add
sbb
add
or
pop
add
push
or
add
push
or
xlat
add
nop
add
add
verw
push
dec
or
xor
sub
push
inc
add
push
xor
sub
xor
or
add
cmp
mov
cmp
cmpsb
add
cmp
mov
cmp
jns
cmp
sub
mov
add
add
setp
setl
cli
add
rorb
xor
fisttpl
and
push
adc
dec
adc
adc
add
hlt
ud2
add
and
add
add
call
adc
add
xadd
cld
movnti
in
psrld
add
bswap
add
adc
les
clc
add
push
testb
push
testl
fwait
push
xor
jp
xor
add
push
xor
push
incb
pop
push
add
push
sub
push
sub
push
incl
inc
push
sub
cmp
push
sub
add
push
sub
pop
mov
dec
pop
mov
dec
pop
lea
dec
pop
mov
inc
add
stos
add
mov
inc
pop
xchg
nop
push
stos
add
push
xchg
add
add
add
lods
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
fistl
xchg
add
adc
cwtl
add
cltd
add
adc
add
adc
adc
sahf
add
adc
add
mov
add
movsb
add
add
pop
jbe
cmpsl
pop
mov
test
test
test
pop
mov
mov
mov
mov
xchg
mov
nop
add
pop
mov
mov
xchg
add
mov
pop
ret
pop
iret
add
mov
add
pop
sbb
roll
add
pop
cli
add
pop
testl
lds
push
add
pop
pop
add
pop
arpl
enter
leave
pop
adc
sti
pop
xor
sti
xchg
das
test
jmp
mov
and
xchg
add
xor
push
sti
cmpsl
xor
mov
xor
sti
mov
xor
imul
sti
pop
xor
sti
mov
xor
sti
aaa
mulb
sti
sbb
sub
adc
and
add
xor
pop
imulb
sti
inc
mulb
sti
mov
push
sti
mov
xor
sti
sbb
xchg
and
scas
xchg
and
add
std
and
mov
and
adcb
mov
mov
and
cmpsb
and
dec
pop
and
mov
sbb
mov
pop
and
sub
and
and
and
push
and
or
and
dec
stc
push
and
aas
jmp
mov
sbb
and
leave
mov
add
dec
sbb
mov
xor
movsl
dec
add
jg
add
mov
orl
orl
dec
or
mov
or
les
dec
adc
lret
dec
and
and
dec
push
and
and
push
and
outsb
dec
push
and
push
and
dec
pop
and
pop
and
add
dec
adc
cmp
and
clc
sub
out
clc
pop
in
clc
pop
in
clc
pop
in
clc
pop
in
cli
and
test
adc
jbe
shl
cli
mov
mov
lret
cli
scas
sub
cli
sbb
cli
sbb
cli
sbb
xor
mov
xor
jae
sbb
movsl
cli
stos
loope
cli
mov
loope
cli
into
jmp
in
fdivr
stos
and
stc
lods
sub
stc
mov
xlat
stc
mov
add
push
cli
and
testb
jne
psubd
adc
psubd
cli
or
cld
stc
es
sar
and
into
stc
sub
fdivr
jmp
xlat
stc
add
hlt
mov
stc
push
stc
mov
stc
repnz
sahf
stc
call
stc
nop
stc
or
stc
adc
cmp
cmc
cmp
repz
repz
stc
repz
iret
adc
clc
sub
clc
and
sub
mov
js
sub
cld
and
int3
out
jmp
int3
daa
and
add
and
pop
pushf
std
and
or
and
adc
cmpsb
adc
and
adc
add
lret
hlt
popa
add
test
addr16
xchg
add
xchg
adc
add
xor
add
dec
hlt
outsl
add
aas
adc
add
add
add
pop
and
add
stc
and
add
sbb
add
add
push
jmp
add
jg
add
jle
add
mov
add
mov
add
push
jp
pop
push
test
or
mov
or
mov
or
and
push
add
push
shlb
or
push
add
and
push
frstor
adc
jl
adc
outsl
and
push
add
adc
adc
unpckhps
lds
push
cli
int
pop
adc
prefetcht0
mov
sbb
mov
sbb
loope
sbb
fisttps
sbb
fmuls
sbb
cli
add
mov
jl
and
jns
and
jns
and
ja
and
orb
add
es
jge
daa
add
jae
sub
test
sub
orl
sub
scas
cvttps2pi
mov
sub
cli
jne
das
adc
cmp
aad
cmp
sbb
xor
push
pop
rdmsr
push
push
bndstx
adc
sbb
inc
prefetch
inc
femms
push
aaa
lar
psubq
or
inc
push
or
inc
push
or
add
int
dec
push
les
inc
push
iret
push
lret
push
ret
sbb
rorb
mov
sbb
xchg
push
rcrb
push
aam
cwtl
push
aad
jnp
sbb
add
call
or
push
cli
in
push
adc
or
mov
push
xor
cmc
pushl
dec
add
add
inc
cmc
add
dec
adc
or
push
adc
push
xor
push
xor
add
xor
adc
xor
add
xor
aad
jp
xlat
xor
shlb
pop
add
xor
shll
pop
adc
xor
fdivl
add
sbb
sbb
sbb
jmp
sbb
add
dec
xor
sbb
sbb
push
xor
sbb
sbb
and
push
xor
sbb
and
push
xor
sbb
in
pop
xor
sbb
negl
pop
xor
sbb
stc
sbb
sbb
pop
sbb
stos
sbb
mov
sbb
sbb
jle
arpl
jno
test
nop
sbb
adc
add
or
lods
adc
ja
scas
cmc
movsl
or
mov
iret
or
cmc
or
mov
fisttpl
adc
fisttpll
cmc
fisttpll
cmc
into
or
cmc
pop
or
mov
adc
and
mov
cmc
adc
or
cmc
pop
push
shl
push
ret
push
insl
add
mov
js
lea
jg
mov
adcl
add
push
mov
xchg
push
pop
and
push
sbb
hlt
inc
icebp
pop
hlt
movsb
icebp
mov
pushf
icebp
push
adc
and
xrelease
xrelease
repz
repz
and
repz
and
repz
and
repz
and
pop
repz
and
repz
and
repz
and
repz
pusha
repz
add
icebp
add
loopne
add
loopne
add
repnz
add
in
add
add
mov
adc
cli
test
add
pop
adc
repnz
add
pop
adc
xchg
adc
iret
push
adc
sbb
adc
mov
pop
adc
mov
pop
adc
lcall
adc
popf
cmp
add
adc
mov
push
adc
mov
push
adc
sahf
dec
adc
lret
add
pop
adc
dec
das
adc
or
fists
add
or
add
adc
add
ljmp
imul
ljmp
adc
add
adc
add
adc
add
adc
add
add
jg
dec
adc
add
lcall
jmp
decl
jmp
dec
adc
add
jmp
dec
adc
add
dec
adc
add
adc
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
lcall
adc
pop
add
inc
add
adc
pop
add
inc
add
adc
pop
add
inc
add
adc
pop
add
push
add
adc
pop
add
add
adc
pop
add
adc
adc
pop
add
stc
add
cmpsb
pop
add
fadds
add
sub
adc
add
sub
adc
add
sub
adc
add
add
sub
adc
add
sub
add
sub
add
jbe
add
add
sub
adc
scas
fcoml
add
adc
mov
add
mov
adc
inc
add
mov
add
mov
adc
sbb
adc
movsl
int3
adc
lldt
mov
adc
incb
adc
cmpsl
lods
adc
imul
pop
adc
push
dec
adc
imul
add
cmp
add
adc
sbb
add
adc
cmp
fs
adc
cmp
pop
adc
add
fdivr
jmp
pop
add
cld
cmp
jmp
decl
jg
add
push
jmp
decl
jmp
incl
jmp
incl
rcrb
add
pop
add
jns
stc
pop
add
add
clc
pop
add
in
push
add
in
push
add
fstl
add
fcoml
add
cmp
push
add
fcoml
add
pop
leave
aas
add
push
add
add
je
add
add
add
add
add
je
add
add
add
add
add
jne
add
add
add
je
add
add
add
add
add
add
add
xchg
jle
or
add
add
xchg
out
add
aad
inc
add
add
add
xchg
and
add
xchg
ljmp
add
add
add
xchg
dec
add
add
add
jmp
std
xchg
add
add
add
adc
xchg
add
adc
test
adc
les
fadds
adc
xchg
adc
add
adc
xchg
adc
add
adc
xchg
adc
pop
adc
xchg
adc
add
adc
xchg
adc
add
adc
xchg
add
adc
xchg
add
adc
add
add
adc
xchg
sub
mov
incl
mov
decl
mov
incl
add
add
pop
or
popf
mov
jmp
mov
in
pop
sbb
stc
mov
jmp
add
mov
call
add
add
add
add
add
ljmp
add
sbb
inc
mov
call
mov
decl
aam
sbb
repnz
aam
cld
adc
add
sbb
fstl
ltr
adc
add
xchg
inc
add
add
add
adc
add
sbb
lods
xchg
inc
add
xchg
inc
add
sbb
add
jne
inc
add
pop
pop
add
sbb
add
adc
lods
xchg
inc
add
adc
add
adc
add
mov
or
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
jle
add
add
add
jge
add
add
aad
inc
add
add
add
jge
add
add
add
jge
add
xchg
add
adc
jle
adc
add
test
add
adc
jl
adc
add
in
adc
inc
adc
add
adc
inc
adc
add
adc
add
adc
jl
adc
add
adc
jnp
adc
add
adc
jnp
adc
jl
adc
jl
adc
add
adc
jl
adc
add
adc
jl
adc
jl
adc
pop
or
call
aam
outsl
or
add
aam
pop
adc
decl
or
add
aam
jne
and
jmp
das
aam
movb
add
or
add
paddq
push
or
add
call
pushl
out
sar
filds
and
int
sar
sahf
pop
push
add
or
add
add
in
ljmp
pop
and
call
adc
add
pop
verw
mov
ret
pop
adc
rorl
mov
pop
and
test
pop
or
fisttpll
add
pop
add
lods
mov
int
or
lea
add
lea
outsb
pop
push
add
cltd
xchg
inc
add
or
mov
adc
jne
inc
add
add
adc
add
xchg
inc
add
add
add
test
std
add
push
test
push
add
add
test
ret
add
add
xchg
insb
add
xor
add
sub
add
add
add
sbb
lret
add
add
mov
loopne
or
cmc
mov
mov
add
sbb
add
add
mov
add
add
mov
movl
inc
add
add
add
xchg
adc
add
adc
mov
adc
add
adc
mov
adc
add
adc
mov
add
adc
mov
add
adc
mov
add
or
mov
add
adc
mov
add
adc
add
adc
mov
add
adc
mov
add
adc
mov
adc
adc
xchg
adc
mov
adc
add
adc
add
adc
jle
or
dec
jl
decl
add
add
aam
into
pop
or
aam
movsb
add
add
mov
ljmp
add
or
add
decl
add
add
jl
call
add
add
add
mov
jmp
and
jmp
add
add
test
pushl
add
add
pop
and
sub
pop
and
test
add
sar
incl
repnz
stc
xchg
inc
add
xchg
inc
add
and
cmp
and
add
bndstx
jge
inc
add
add
jno
inc
add
sysret
add
inc
add
xchg
inc
add
nopl
inc
xchg
inc
add
adc
add
xchg
inc
add
adc
add
adc
xchg
inc
add
adc
add
mov
adc
add
inc
add
add
gs
inc
add
add
add
test
pushf
add
add
test
sub
push
add
test
test
sbb
add
add
add
test
xlat
add
add
add
add
test
cld
add
add
add
add
test
or
add
addl
stos
add
add
add
add
addl
add
add
addl
add
add
addl
add
add
addl
ret
add
adc
add
cmp
adc
lret
stos
add
adc
lret
xor
lret
adc
adc
lret
mov
hlt
adc
lret
adc
unpcklps
cmp
add
call
in
lret
cmpsb
add
adc
lret
add
notb
leave
lret
sbb
ljmp
add
adc
lret
jmp
sbb
stc
adc
lret
sbb
add
lret
pop
add
adc
clc
push
or
or
adc
push
pop
or
xchg
ds
jmp
pop
adc
jns
cmc
call
add
adc
push
adc
mov
sar
insb
or
jb
sar
imul
add
out
sar
outsb
or
popa
ljmp
adc
stos
jmp
adc
popf
ljmp
adc
lods
test
adc
pushf
fwait
sar
jno
adc
lea
adc
bound
add
flds
add
sldt
nop
es
add
ficoml
add
scas
es
add
adc
add
adc
add
sub
add
adc
add
sub
add
and
add
inc
inc
add
add
fbld
add
shlb
add
es
add
add
mov
pop
add
pop
and
add
jl
inc
add
data16
add
add
add
out
inc
add
add
add
out
inc
add
js
add
add
add
add
add
test
dec
xchg
cmp
xchg
loop
inc
add
add
add
cmp
add
ds
add
cmp
add
aas
add
push
aas
incl
or
add
add
add
add
aas
add
cmp
add
inc
add
push
aas
add
or
add
aas
incl
add
adc
call
add
pop
ljmp
sbb
add
pop
ljmp
pop
call
add
adc
add
jmp
add
jmp
add
call
add
jmp
add
out
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
and
clc
call
cld
add
f2xm1
in
aad
jmp
add
pop
adc
jmp
fs
orl
outsb
pop
aaa
mov
jbe
aas
stos
call
dec
daa
mov
inc
push
mov
inc
dec
mov
outsb
sbb
mov
jbe
aas
stos
decl
mov
call
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
adc
add
adc
add
adc
add
insl
adc
add
add
pop
adc
add
add
insl
adc
add
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
fdivr
pushl
pushl
jmp
pushl
fdivr
incl
inc
inc
fiadds
mov
mov
inc
ljmp
incb
fwait
cmp
incb
sbbl
jnp
stc
or
inc
cmc
push
imul
jmp
inc
lcall
inc
call
inc
decl
inc
incl
inc
cmp
or
inc
adc
sub
jmp
jle
lcall
jbe
call
mov
or
inc
sti
cmp
add
cmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
adc
call
push
adc
call
push
adc
call
push
adc
call
push
adc
call
push
adc
call
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
popf
adc
add
adc
add
add
pop
adc
add
add
insl
adc
add
add
pop
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
add
add
cmp
pop
xchg
pop
mov
cmp
mov
mov
dec
sbb
or
mov
mov
and
lods
out
or
cmpsl
sub
imul
mov
jbe
popf
and
test
ljmp
jg
jns
fwait
cli
lds
push
shrl
scas
add
mov
das
and
cmp
adc
sti
jl
cli
roll
sbbb
adc
dec
shlb
or
in
in
xchg
ds
into
in
cmp
jo
dec
adc
pop
sub
shr
sbb
rolb
and
insb
lcall
pop
jge
test
or
cwtl
push
ficoml
lods
sbb
and
adc
mov
in
pop
add
mov
jp
stos
addr16
add
ret
mov
decl
aam
lea
adc
in
add
xor
out
push
subb
adc
nop
pop
adc
imul
adc
dec
or
add
adc
bound
adc
or
adc
int3
pop
adc
dec
add
adc
imul
adc
imul
adc
imul
adc
add
pop
add
or
add
sbb
push
add
jmp
sbb
push
bswap
add
push
pop
mov
sbb
rorl
pop
std
xor
and
xor
sub
lods
and
xor
cmp
jne
arpl
jge
imul
insl
outsl
in
gs
fldenv
ja
insl
jns
orl
arpl
jo
addr16
stos
imul
fidivs
jns
idivb
addb
mov
jnp
xchg
xchg
add
xchg
xchg
jae
cltd
lcall
bound
arpl
insl
scas
pop
lods
jno
push
mov
jns
dec
mov
inc
ret
inc
movb
lret
dec
into
cmp
push
xor
pop
fisubrs
adc
and
and
shrl
aaa
mov
xor
adc
mov
push
sub
add
adc
add
psraw
sbb
or
push
fsts
add
adc
rcrb
or
sbb
push
or
in
add
loope
add
cld
call
aad
hlt
lock
lock
int
in
clc
leave
out
movsb
in
test
fnstsw
js
aad
je
rcrl
lods
pop
lea
pop
dec
dec
aam
and
inc
fmull
cmp
les
xor
int3
jp
dec
test
imul
lcall
js
xchg
push
je
xchg
push
jo
fwait
dec
insb
xchg
test
cmpsl
andl
jbe
jns
bound
jno
push
insl
add
mov
and
rcrb
mov
mov
aad
cmc
stc
lret
fstp
dec
icebp
loope
inc
add
jmp
out
pop
loope
repz
cmc
cmc
notl
stc
sti
pop
in
sub
in
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
lods
adc
add
adc
add
adc
add
adc
add
adc
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
or
add
add
add
add
add
add
add
add
add
pop
lret
aaa
incl
sub
add
add
add
add
add
add
jmp
cmp
push
cmp
push
cmp
call
add
jmp
add
jmp
aaa
add
and
aaa
sub
into
aaa
and
jmp
add
jmp
add
lahf
aaa
add
call
add
call
add
jmp
add
data16
mov
adc
add
jmp
add
jmp
jmp
pop
adc
imul
adc
jmp
call
pop
adc
jmp
pop
adc
jmp
pop
adc
imul
xchg
sub
xchg
add
repz
lcall
aad
adc
jmp
sbb
adc
adc
add
adc
cmc
add
subb
adc
sbb
adc
adc
cmc
add
adc
scas
add
adc
adc
add
add
pop
adc
add
insl
adc
add
pop
adc
add
sub
adc
add
sbb
adc
add
sbb
adc
add
in
adc
add
adc
add
adc
add
adc
add
in
adc
add
adc
add
adc
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
cmp
push
and
jno
bound
adc
stc
jle
mov
add
fisubl
adc
add
xchg
sysret
outsl
mov
imul
insl
fbld
adc
or
je
aad
stos
in
daa
adc
add
sarl
push
push
inc
js
xchg
xor
sub
idiv
int
or
mov
pop
ja
or
or
xchg
xchg
xchg
pop
and
inc
cmp
sahf
adc
pop
dec
push
out
dec
and
and
jo
out
lods
mov
in
jbe
aad
ret
ljmp
inc
iret
mov
dec
or
icebp
das
jb
xor
inc
imul
cpuid
clc
jp
loop
insl
add
lcall
loop
add
test
and
sub
sti
daa
add
mov
fwait
jb
sahf
fs
cmp
dec
cld
add
dec
or
stos
outsb
and
and
sbb
test
jne
mov
xchg
cmp
into
cmc
sbb
mov
test
aad
inc
xchg
ss
sbb
xchg
lea
xchg
or
cmp
push
push
xchg
shr
fldl
cmp
sub
mov
jns
leave
rcll
xor
mov
addl
pushf
jecxz
popf
es
jo
mov
shlb
pop
inc
mov
xor
daa
adc
jmp
icebp
es
xor
xchg
std
push
push
push
lods
sub
ljmp
fadd
pop
jo
fnstsw
mov
xor
es
xor
daa
jl
add
pop
mov
das
pop
add
fst
clc
and
subl
lock
clc
outsb
testl
dec
imull
push
dec
pusha
inc
mov
lods
sub
mov
dec
stos
mov
daa
ret
aad
fistpl
psubb
adc
clc
sti
sbb
testb
inc
negb
stc
or
incl
mov
sahf
add
iret
jo
ret
mov
xor
xlat
jbe
xchg
sarl
divb
cmp
pop
push
lahf
dec
push
shrb
int3
stc
mov
push
inc
mov
addl
inc
add
cmp
clc
stos
jecxz
clc
fwait
jecxz
clc
stc
ret
dec
adc
test
cwtl
jl
fbstp
stc
add
cli
aam
sbb
push
jmp
fcompl
xchg
fcoml
cltd
ds
clc
insl
rorl
push
mov
dec
or
adc
rcl
jg
jmp
repnz
fstl
lods
out
or
mov
leave
aaa
push
out
jae
je
flds
loope
and
enter
pop
lret
add
cmp
xchg
mov
cmp
xor
jl
cs
int
xchg
lods
in
mov
mov
inc
rorb
ds
sub
cmp
cmp
xor
lods
lret
in
add
inc
sbb
pop
fmull
and
xor
and
xor
leave
and
xor
and
out
pop
stos
repnz
test
cmp
xor
aam
jo
xchg
xor
sub
sub
cmp
sarb
sub
clc
cmp
xor
xchg
sbb
clc
mov
mov
cmp
inc
mov
hlt
sub
cmp
and
cmp
and
cmp
rcll
insb
cwtl
add
xchg
jae
xlat
sbb
ljmp
mov
sub
fs
sbb
in
push
adc
or
add
in
vcvtsi2sdl
add
sub
mov
es
sub
mov
aam
push
fidivrl
fbstp
testl
ret
xor
testb
bound
inc
lret
fwait
jecxz
add
xor
cmc
dec
scas
pop
enter
jg
adc
add
jmp
fisubl
jno
xchg
ljmp
das
ljmp
es
jle
pop
in
rcl
in
enter
mov
jae
adc
add
or
in
repz
in
repz
in
repnz
in
icebp
test
out
xor
mov
insb
lock
jecxz
lock
cmpsl
test
fbstp
not
filds
mull
cmp
pop
xor
xor
xor
adc
xor
adc
xor
adc
xor
lock
cmp
call
test
xor
xchg
cmp
outsl
cmp
push
cmp
fxch
cmp
mov
cmp
add
jbe
sub
jo
pop
nop
inc
pushf
daa
ljmp
pop
call
aam
test
xor
dec
jae
mov
add
gs
sbb
pop
inc
mov
aad
cmp
pop
shr
xor
subb
dec
mov
push
jecxz
pop
push
add
adc
out
icebp
push
aas
mov
push
fsubr
in
push
hlt
scas
sbb
mov
sahf
scas
push
or
pop
push
arpl
dec
push
arpl
mov
push
add
push
cmp
sub
mov
lods
sub
mov
pushf
sub
mov
mov
pushf
mov
aad
sub
inc
insb
adc
insb
sub
shl
pop
sub
and
insb
sub
loopne
pop
sub
add
add
mov
add
add
add
add
add
scas
call
sti
scas
incl
inc
add
pop
add
push
add
fiaddl
add
adc
add
adc
add
mov
shlb
cwtl
cmpsb
scas
jns
and
add
adc
out
jmp
add
adc
add
adc
add
adc
add
adc
mov
xchg
push
inc
add
mov
jne
lahf
dec
cmp
xor
cmp
pop
orl
mov
mov
cwtl
add
mov
xchg
scas
lds
movsb
ficoms
add
pop
addb
pop
inc
add
pop
inc
add
pop
adc
ret
fwait
and
test
xchg
fsubl
jl
or
imul
xor
outsl
or
add
movsl
jne
push
loopne
popw
int
and
fs
xor
das
mov
pop
or
pop
adc
mov
add
add
xchg
or
adc
stos
pop
addl
push
push
push
add
push
add
dec
mov
jo
ret
jno
mov
addr16
ret
jno
mov
lcall
addr16
ret
jno
mov
jb
ret
add
mov
jo
cs
arpl
mov
imul
insl
insl
and
xlat
dec
add
mov
jo
scas
jno
ret
dec
adc
add
fidivl
jb
mov
gs
fistps
jns
cli
add
add
sahf
push
int
mov
xlat
cli
add
add
sahf
push
jne
ret
xchg
pusha
mov
xchg
add
pop
pop
jmp
jg
pop
mov
jmp
fbld
push
cmp
add
add
mov
push
xor
icebp
sub
add
mov
sub
sbb
sbb
add
adc
xchg
sbb
mov
xchg
add
test
idiv
adc
sub
xchg
push
adc
xchg
fadds
xchg
mov
jne
pushf
orl
add
cmp
add
and
add
adc
add
adc
add
adc
add
adc
add
sub
add
cmp
adc
add
adc
add
out
adc
mov
dec
add
or
ficompl
push
add
std
push
add
pop
adc
aas
std
push
add
push
add
sti
push
add
repnz
add
adc
sbb
adc
clc
push
add
push
add
add
push
add
xor
sub
and
or
mov
xor
adc
add
push
add
add
add
add
add
je
loope
push
add
pop
add
lods
adc
add
pop
insl
add
sbb
add
sbb
add
jo
adc
jae
insl
adc
add
insl
add
add
out
inc
add
sbb
sti
sbb
fistpl
inc
add
sbb
add
sbb
push
sbb
add
adc
add
adc
add
adc
add
adc
add
out
add
add
pop
pop
inc
add
cmc
inc
add
hlt
inc
add
sti
inc
add
push
dec
xchg
int3
cmc
iret
cmc
jnp
add
cmp
jl
inc
cmpl
add
inc
sar
das
filds
js
incl
xchg
cmp
int3
test
jge
iret
adc
cmp
sub
test
jge
iret
cmc
js
call
cmp
push
movsb
jne
jmp
int3
rclb
inc
pop
push
mull
int3
shl
jo
add
adc
pop
xor
adc
sbb
adc
sub
inc
adc
sbb
les
add
scas
mov
or
rolb
adc
lret
orl
in
lret
add
adc
add
adc
add
adc
les
mov
add
cmpsl
les
lea
int3
push
jge
xchg
jnp
mov
ja
das
lds
xchg
ja
push
fwait
jmp
dec
sbb
adc
les
push
add
in
push
add
add
inc
add
lcall
jb
xchg
push
push
jns
addr16
std
push
js
pop
adc
mov
stos
jo
mov
cmpsb
xchg
xchg
push
jns
cmpsb
jns
mov
pop
push
add
vcvtsd2ss
adc
lea
jge
jp
test
test
jne
jo
pop
add
jns
inc
or
jmp
jne
push
add
push
mov
add
mov
popa
inc
stc
mov
jmp
mov
pusha
jb
movsl
ja
lods
push
add
jecxz
inc
jb
mov
gs
mov
jmp
scas
jb
mov
insl
arpl
jno
jae
dec
jne
movsb
ja
xchg
mov
jb
scas
jb
add
mov
jae
push
add
jg
push
mov
arpl
lds
add
cwtl
push
daa
test
cmp
arpl
mov
fldt
test
dec
push
cwtl
inc
pop
pop
int3
pusha
xor
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
int
inc
add
add
aam
arpl
add
add
into
add
flds
je
xchg
add
movsb
add
popl
outsl
add
add
fildl
dec
add
add
add
lea
jb
nop
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jmp
xchg
sbb
fiaddl
mov
inc
push
mov
loopne
mov
lret
lret
enter
lods
leave
js
cmpsl
mov
test
pop
adc
push
pushf
xorl
ss
cltd
cmp
lcall
jmp
inc
insb
xorl
ss
cltd
cmp
imul
cld
cwtl
pop
cmp
popa
jl
add
pop
gs
and
adc
mov
pop
adc
mov
mov
push
mov
push
add
xchg
pop
inc
movsb
pop
adc
mov
arpl
jle
jmp
push
dec
add
into
push
inc
add
add
pop
fildl
fistl
in
adc
add
xlat
aas
inc
xor
push
dec
add
call
dec
dec
out
ret
push
out
aam
push
in
mov
push
inc
aad
add
in
mov
dec
inc
insl
adc
add
adc
add
adc
add
adc
add
sahf
sub
sarb
add
add
add
mov
int
enter
leave
dec
ret
push
add
scas
push
add
roll
add
add
rorl
sar
pop
stos
insl
push
cmpsl
jae
dec
stos
dec
dec
xchg
outsb
cmp
jmp
fs
daa
lods
outsb
sbb
add
add
stos
insl
adc
stos
jae
push
mov
incl
and
pusha
ljmp
insl
out
sahf
push
add
xchg
data16
fistpl
je
adc
mov
lahf
jp
mov
stos
addb
adc
jnp
adc
add
scas
add
cmpsl
add
lahf
add
mov
inc
adc
add
add
adc
add
mov
add
adc
inc
adc
push
inc
adc
push
inc
adc
pop
inc
adc
roll
lds
push
add
adc
add
adc
add
mov
xor
adc
xor
adc
in
adc
iret
add
add
push
add
jmp
push
add
push
push
add
push
add
lret
cmpsb
inc
push
add
add
push
add
push
add
sbb
push
add
out
add
push
or
xchg
das
add
std
pop
jns
xor
jb
pop
or
adc
pop
jne
xlat
pop
xchg
int
jne
fldl
insl
add
insl
pop
add
jno
push
add
pop
outsb
add
pop
insb
add
js
dec
add
pop
pop
add
xor
dec
pop
js
enter
sbb
js
xor
and
add
sbb
in
push
add
add
je
adc
push
add
sbb
inc
add
ret
aas
add
and
dec
and
cmc
lea
cmc
lea
fildll
inc
add
cmp
xor
cmp
add
daa
inc
add
daa
inc
add
sbb
push
sub
in
or
inc
add
add
mov
add
test
je
xchg
add
mov
outsb
add
add
xchg
add
fs
add
add
add
add
add
jecxz
add
add
add
add
add
xchg
insb
add
stos
js
and
jl
ss
add
xor
mov
int3
mov
aas
in
mov
rorl
lds
cs
pop
shlb
jp
js
test
arpl
adc
cmp
sub
push
sub
out
xor
sti
or
add
dec
pop
fs
mov
add
dec
pop
movsb
enter
movsb
jno
andl
test
adc
rolb
sbb
stc
jmp
orl
xor
add
imul
ret
insl
stos
jno
insl
mov
push
imul
xor
mov
scas
push
xchg
add
inc
dec
pop
scas
dec
pop
dec
rcrb
dec
xchg
dec
add
and
jmp
ljmp
jbe
pop
mov
add
mov
movsb
ss
jmp
scas
xchg
pop
les
mov
add
add
sbb
add
adc
aad
sub
iret
aaa
ds
push
adc
cltd
adc
jecxz
inc
cmp
pushf
add
sub
out
push
mov
sbb
sub
fdivl
cmp
add
sbbl
jne
mov
lods
add
into
pop
xor
call
cmp
mov
mov
mov
pop
add
sbb
lock
sbb
mov
xorl
add
mov
movsb
xchg
add
lret
in
aam
add
out
add
sub
movsl
lds
lahf
xchg
and
cmpsl
xchg
int
xchg
add
sbb
out
insl
das
cmp
dec
aas
cmp
dec
aaa
sbb
xor
add
add
cld
inc
int
stos
and
mov
sarl
movb
in
sbb
mov
ret
mul
sub
xchg
add
mov
add
and
jae
push
and
movsb
jbe
lock
add
mov
nop
addl
add
pop
add
jmp
repz
adc
aam
jecxz
or
or
jae
sbb
jmp
xor
testb
fxch
out
sbb
or
div
push
push
jecxz
push
or
cld
std
adc
cli
or
cltd
call
cmc
pop
orb
andb
pop
incb
stc
pop
push
mov
dec
inc
sbb
adc
jnp
mov
call
cmpsl
push
dec
mov
pop
and
in
cmp
rcll
fwait
shrl
ret
sub
lret
loop
lahf
mov
adc
lds
imul
test
or
insb
outsb
dec
stos
add
dec
mov
cmp
inc
jmp
inc
iret
ret
mov
cmp
fld
lods
dec
leave
loop
div
not
or
in
cld
add
rorl
jmp
and
inc
dec
pusha
or
bound
popf
jge
add
mov
mov
pop
mov
jns
mov
lock
add
jl
mov
mov
pop
mov
mov
mov
imul
sub
data16
mov
jno
jne
jp
jge
jno
arpl
movsl
push
pop
sub
dec
jg
rolb
add
mov
cmp
jl
inc
jmp
fcmovnb
gs
lret
sarl
mov
flds
push
inc
jp
mov
mov
movl
add
add
idivl
repnz
mov
test
sahf
addr16
mov
cmp
iret
test
sub
lea
fdivl
dec
int3
mov
stc
repnz
push
idiv
xor
and
add
add
sub
dec
dec
xor
push
cs
sub
ffree
inc
ret
aaa
push
sub
xor
sub
stc
or
add
imul
decb
mov
adc
fsubl
sub
adc
sarb
add
adc
in
sti
or
ljmp
and
clc
call
pop
adc
pushf
gs
orl
xorb
xorb
jbe
push
mov
data16
jbe
sub
pop
adc
inc
les
xor
or
add
sub
adc
pop
pop
push
loope
pop
push
sbb
pop
or
loopne
xor
roll
xor
xchg
sbb
aad
and
jmp
adc
lods
push
inc
ret
dec
mov
cmp
pop
adc
pop
push
dec
add
adc
add
mov
cmp
test
cmpsb
je
mov
add
into
ret
faddp
fs
iret
fld
push
rcr
lret
add
inc
pop
lock
dec
sarb
inc
push
or
push
dec
add
add
sbb
mov
je
mov
mov
xchg
mov
add
outsb
mov
movsl
int
mov
enter
add
adc
adc
adc
out
push
push
in
or
in
jmp
popf
mov
cmp
push
dec
pop
mov
dec
subl
jne
popf
pop
jb
cltd
addr16
add
cmp
inc
cmp
je
xor
incl
adcl
cmp
sahf
imul
lahf
push
movsl
add
aad
push
add
out
daa
cld
in
add
add
pop
mov
bound
pop
fs
add
mov
mov
dec
adc
out
add
sti
std
push
aam
add
sbb
add
mov
xor
in
sub
loopne
add
jne
cmpl
popaw
mov
cmpl
ja
push
jae
xchg
lods
popa
outsl
nop
imul
adc
dec
stos
mov
xchg
mov
pop
test
xchg
add
cs
dec
add
sub
aam
sbb
add
test
cmp
adc
loop
adc
sbb
in
or
pop
adc
cld
daa
sti
rcl
fucomp
lret
add
lret
repz
adc
fnstenv
adc
pusha
xor
xchg
xchg
je
lods
mov
mov
std
xchg
jbe
xor
addr16
pop
adc
push
repz
idivl
add
clc
loop
pop
adc
test
cmpsb
scas
add
pop
mov
add
gs
xchg
push
add
and
mov
push
in
adc
pop
add
das
pop
mov
add
adc
out
pop
loop
stos
or
out
les
ljmp
xchg
add
fmull
pop
pop
ret
test
sub
popa
int3
fcomps
addb
dec
sbb
adc
add
lds
lret
push
ret
jbe
filds
add
add
js
cmp
add
jge
jns
add
add
cmp
add
notb
add
rcrl
adc
pop
sub
in
sub
int
adc
add
add
pop
roll
loope
or
add
cmp
into
mov
cld
add
add
inc
in
stos
mov
sub
cld
add
add
adc
push
popf
adc
fs
add
pusha
out
cmp
inc
test
cli
push
push
outsl
testb
test
xchg
dec
mov
push
cld
sbb
xchg
sub
loope
cld
add
add
or
pop
mov
xor
mov
frstor
mov
dec
xchg
mov
and
adc
inc
iret
rclb
sbb
xchg
push
add
xor
std
inc
pop
movsb
ljmp
in
add
js
push
icebp
mov
fsubrs
pop
fmul
sub
rorl
outsb
add
fmul
push
pop
adc
dec
out
iret
adc
xchg
sbb
jmp
pop
ret
pop
adc
shl
or
jmp
inc
iret
rcrb
clc
xlat
mov
addr16
lods
jb
shlb
dec
xchg
mov
scas
mov
cmp
xchg
arpl
out
dec
adc
add
jb
adc
dec
out
adc
decb
cmp
sub
or
adc
pop
in
push
xor
and
add
sbb
inc
add
ljmp
sbb
push
in
hlt
sbb
or
loop
push
out
adc
sbb
out
or
or
pop
pop
repz
add
or
and
mov
jne
testl
imul
cmpsb
aaa
inc
mov
add
pop
movsl
test
andl
sub
cwtl
inc
inc
js
inc
mov
xchg
inc
mov
jp
insl
mov
mov
fwait
add
stos
dec
add
adc
sub
jno
add
mov
jnp
mov
fwait
jb
std
add
add
repz
add
mov
aam
mov
mov
sti
mov
add
mov
std
ror
mov
int
mov
adc
jbe
je
lret
pop
xchg
xchg
xchg
jbe
test
push
test
adc
add
push
daa
add
adc
sbb
sbb
adc
loop
push
dec
hlt
sbb
adc
jecxz
fstl
aas
iret
push
fldt
or
jne
inc
loopne
rcr
adc
push
push
adc
inc
pop
inc
testl
fsubrp
cld
add
mov
push
sbb
adc
push
push
or
add
das
or
fists
decb
in
cmp
add
sti
or
add
push
call
sbb
sub
adc
clc
shrl
and
cmp
add
sbb
adc
sub
inc
rol
jmp
dec
xlat
aam
cmp
aam
sbb
dec
stc
in
xor
fnstenv
icebp
stc
xor
add
sti
jmp
add
out
loop
in
mov
sti
fldl
les
jmp
out
jle
fidivs
jno
push
add
sbb
cmpsl
sahf
mov
xchg
mov
mov
movsl
mov
mov
mov
test
mov
xchg
and
and
xor
adc
add
sahf
xchg
xorl
stos
cmpsl
sub
mov
inc
mov
mov
hlt
dec
mov
xchg
addb
cmpsl
xchg
pop
inc
push
dec
xor
bound
push
pop
add
pushf
nop
xchg
sbbb
cwtl
xchg
xchg
mov
je
mov
mov
sahf
mov
mov
add
dec
pop
ror
dec
dec
mov
mov
pop
add
dec
pop
pop
scas
push
or
inc
mov
push
xchg
jp
and
xor
gs
adcl
or
je
sbb
or
icebp
push
or
push
sub
inc
add
adc
ss
xor
xor
aas
sbb
into
ds
scas
ds
and
and
push
add
add
add
push
mov
ud0
add
sbb
adc
or
jl
fs
popa
inc
jb
jg
outsl
add
dec
insb
jnp
xor
xor
cmp
aas
dec
sbb
xor
pop
and
inc
push
and
push
pop
pop
xor
outsl
dec
inc
test
scas
mov
fwait
mov
stos
cmp
pop
xlat
xchg
jb
stos
outsl
mov
xchg
xchg
insl
jg
mov
addl
xchg
dec
cwtl
jle
jge
mov
fdivr
fmul
out
cmp
imul
sbb
hlt
loopne
jecxz
sti
ficompl
rcl
gs
fmuls
push
lret
jne
shr
leave
mov
fildl
cmp
and
daa
sub
sub
das
mov
and
and
es
sub
adc
sbb
sbb
pop
or
pcmpeqd
pop
sbb
aaa
sbb
or
pop
push
les
sbb
add
popa
cs
or
add
into
xlat
sar
add
add
mov
mov
mov
push
insl
gs
add
add
sahf
orb
mov
add
add
add
ja
cmc
or
les
jns
shr
jns
add
aad
lcall
add
pop
or
enter
leave
and
pop
jo
out
inc
inc
add
mov
add
sbbl
adc
icebp
out
lock
neg
and
rol
or
mov
out
jne
jne
push
sub
pop
adc
xor
and
adc
call
arpl
test
je
mov
mov
lods
fisttpll
jp
mov
jle
insb
notl
add
or
shrl
pop
or
add
cmp
out
sti
inc
in
adc
xor
or
call
ret
fs
inc
push
pop
sahf
inc
dec
add
cmp
adc
inc
adcl
sbbb
cmc
cmp
sbb
and
xchg
sahf
cmpsb
gs
andl
pop
adc
xchg
dec
xchg
lock
cmp
cwtl
mov
shlb
xchg
out
xor
mov
jae
cmc
outsb
arpl
enter
add
ljmp
add
jo
add
pop
jge
xchg
je
mov
cmpsl
ja
insl
xchg
data16
outsl
outsb
cmpl
lods
push
xor
leave
das
jnp
sbb
xor
cmp
cmp
es
and
xor
loop
mov
in
cld
scas
insl
adc
add
jae
popa
imul
pop
dec
push
dec
cli
dec
pop
dec
push
pop
dec
add
dec
inc
call
adc
add
add
repz
sbb
xor
int3
mov
sub
fst
xchg
cmp
aad
and
mov
lock
out
fildll
lods
scas
int3
and
sub
loopne
cmp
das
push
jns
jmp
gs
adc
fs
sub
fimuls
and
add
mov
add
sub
xor
cmp
leave
and
sub
sub
lret
out
and
mov
push
das
lock
ss
jmp
adc
repz
adc
inc
push
or
push
sbb
arpl
cwtl
jge
add
adc
pop
hlt
jne
adc
lret
lret
push
rol
enter
adc
inc
dec
dec
xchg
pop
in
adc
dec
or
sbb
cmp
pop
loopne
lock
jnp
dec
and
inc
pop
push
push
aad
ljmp
inc
xor
pusha
pop
fdivs
lock
adc
add
mov
leave
hlt
daa
das
movl
mov
jmp
or
add
pop
in
mov
dec
mov
fsubp
pop
in
cli
scas
jmp
sti
pop
ja
pop
adc
test
addr16
test
pop
adc
cmpl
adc
adc
cs
aaa
or
cmp
out
add
add
sub
adc
xchg
jno
stc
scas
jne
mov
inc
mov
dec
daa
xor
add
cs
inc
adc
sti
jmp
icebp
aam
mov
mov
add
xchg
out
lds
cmpsb
mov
shl
fstl
add
into
roll
repz
incl
loope
cmp
insl
push
dec
loop
add
push
jo
outsb
inc
ss
or
jb
iret
push
jbe
cmp
cmp
insl
push
dec
bound
adc
insb
add
dec
push
lret
pop
mov
push
sbb
add
add
dec
push
xlat
mov
inc
dec
ret
inc
mov
mov
sbb
leave
jp
add
pop
push
dec
aam
arpl
push
insb
sub
and
pop
xchg
jp
dec
addr16
jle
sahf
add
add
mov
jg
mov
sbbl
or
in
add
add
pushf
pushl
mov
inc
fld1
add
mov
inc
aam
shll
adc
mov
cmpsl
inc
mov
xchg
xor
test
xchg
jl
jg
imul
inc
mov
outsl
dec
outsb
iret
fs
pop
and
leave
add
lea
adc
sub
add
xchg
das
add
xchg
xor
xorl
add
dec
pop
xor
jbe
adc
jbe
adc
jbe
adc
add
add
add
add
adc
repz
jecxz
or
sbb
popa
imul
stos
bound
pop
adc
sub
adc
jmp
rcll
mov
dec
dec
lods
inc
dec
push
cwtl
push
inc
push
xchg
dec
inc
pop
sarb
bound
aas
imul
outsl
outsb
xchg
push
arpl
cmp
jle
pop
jp
clc
and
sbb
and
sub
jmp
pop
adc
add
and
inc
data16
cmp
js
outsb
jnp
cmp
ds
sub
dec
inc
inc
adc
push
dec
dec
sbb
cmp
stc
sub
or
pop
push
dec
pop
pop
arpl
popa
aas
jbe
gs
imul
mov
jo
fstl
add
add
bound
mov
jns
dec
adc
adc
cmp
push
add
xor
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
sbb
add
add
int
jae
add
add
add
les
outsb
add
add
lcall
add
add
in
add
add
add
add
add
add
add
add
add
add
add
pop
add
adc
add
adc
add
adc
add
adc
cmp
sub
add
push
loope
adc
lcall
cmp
xor
xor
sub
xor
pop
push
jmp
dec
xor
add
int
aam
push
dec
int
mov
push
mov
cmp
popa
outsb
jno
ja
adc
add
adc
add
adc
add
add
adc
add
les
push
adc
add
adc
add
add
pop
adc
xor
push
add
or
add
or
add
push
add
pop
push
add
push
add
cmp
sub
inc
outsl
or
adc
cmp
gs
add
cmp
movsb
add
cmp
test
add
mov
gs
call
lcall
add
pop
inc
add
pop
imul
pop
outsl
add
add
adc
add
adc
add
es
or
pop
popa
pop
push
dec
cld
movups
pop
mov
pop
aas
mov
jne
test
insl
xchg
mov
jle
pop
push
test
pop
push
mov
jae
jae
inc
push
aaa
adc
add
xor
sbb
add
adc
fstl
sbb
and
jmp
movsb
lcall
rolb
add
jns
xor
sub
add
add
mov
ja
push
jmp
dec
mov
sbb
xor
push
or
sub
stc
xchg
pop
jne
jbe
clc
pushf
icebp
jbe
pop
stos
mov
inc
addb
inc
pop
jns
xlat
gs
mov
pushf
incb
xor
fdivs
cwtl
push
push
sbb
add
jg
xchg
jns
xor
out
lods
jge
adc
jns
das
sbb
clc
jnp
or
jl
arpl
push
popa
adc
sbb
jb
push
pop
add
jge
push
ds
je
xlat
sti
pop
hlt
push
jmp
enter
out
inc
in
xor
rcl
adc
add
adc
add
adc
add
adc
add
pusha
int
dec
add
adc
adc
loopne
jo
or
mov
ret
inc
or
mov
shr
add
push
or
repnz
cmp
pop
in
in
int
leave
cmp
in
pop
mov
add
and
sbb
dec
pop
pop
sbb
in
xor
xor
or
add
adc
xor
adc
test
jmp
cmp
shl
push
push
push
call
jns
rcll
push
aad
cmp
fwait
call
lds
adc
out
xchg
jmp
data16
call
add
push
jb
xchg
jecxz
sub
push
add
pop
jnp
in
push
fsubr
clc
pop
add
add
and
leave
xchg
ljmp
adc
add
and
sub
mov
popf
adc
add
push
add
sbb
push
out
add
call
inc
and
adc
push
imul
add
inc
push
pop
ud0
out
fimull
add
add
pop
mov
jge
and
sti
fidivrl
fsub
jmp
fiaddl
adc
add
add
cmpb
cmp
loopne
mov
mov
outsl
add
mov
jmp
mov
add
scas
decl
jmp
lea
jmp
arpl
ljmp
and
out
sub
push
mov
inc
sbb
call
sbb
mov
add
rclb
stos
clc
xchg
inc
adc
jl
int
add
ljmp
movsl
call
sub
add
sub
outsl
add
fcoml
push
jmp
or
clc
fsubr
sbb
bound
divl
stos
enter
cwtl
test
add
fisubl
or
sarl
xlat
test
add
insl
add
fisubl
jmp
sub
call
arpl
xchg
jmp
mov
jmp
xchg
sar
jmp
mov
adc
ficomps
add
pop
xchg
push
pop
adc
scas
lods
inc
and
add
xchg
and
or
cltd
xor
xorl
mov
cmp
or
push
and
and
je
and
pop
adc
jmp
inc
sar
jmp
pop
and
mov
push
lea
push
push
mov
dec
add
push
and
mov
and
adc
sbb
punpcklbw
in
mov
and
push
push
adc
in
adc
test
mov
mov
mov
lcall
adc
and
imul
fnstenv
test
insl
adc
lcall
mov
adc
add
jnp
sub
scas
add
repz
xor
push
mov
cmp
repnz
jne
inc
cmp
jg
dec
call
xor
fmul
jmp
fimull
jmp
add
push
test
inc
add
push
add
inc
lea
inc
call
cmp
in
scas
pop
add
lds
add
jns
and
lods
movl
hlt
mov
inc
xchg
lret
sbb
add
cmp
dec
shlb
add
xchg
subl
call
sahf
and
jmp
dec
jg
mov
in
clc
faddl
jmp
add
add
iret
flds
add
sub
add
sub
bnd
mov
scas
rorl
pushf
js
arpl
adc
popa
fstp
in
out
iret
rcrb
aaa
aam
pop
xlat
into
outsb
adc
sbb
lock
sbb
fcomps
add
or
ret
daa
fs
stc
test
or
mov
push
shlb
imul
iret
push
bound
lcall
call
int
loope
mov
inc
loopne
mull
add
mov
mov
mov
inc
leave
jae
cmp
adc
xor
xor
jge
int
mov
inc
or
cwtl
out
in
pop
add
ret
inc
cmc
jl
jae
pop
lahf
push
mov
aad
add
sahf
ljmp
and
pushf
jo
add
pop
mov
push
push
xchg
insb
or
sbb
mov
adc
jge
adc
jo
inc
data16
outsl
incb
cltd
pop
cmp
xor
xor
cmp
add
ljmp
adc
jne
es
sbb
call
mov
es
adc
xor
xor
add
mov
inc
hlt
and
push
or
sub
jecxz
cmp
push
mov
lahf
add
das
stos
lds
mov
mov
testb
dec
jnp
test
out
call
popl
add
dec
pop
adc
push
mov
add
std
inc
pop
mov
push
jg
xor
cmp
mov
testl
lock
push
cld
pusha
cmp
cmp
jmp
aad
dec
dec
sbb
and
pusha
cmp
adc
inc
add
movsb
adc
push
and
imul
lock
push
bound
popf
cmpsb
dec
bound
sar
mov
xor
lret
shrl
push
jmp
clc
push
xor
add
push
dec
icebp
xor
fdivs
sub
add
add
cmp
push
push
testl
fbld
inc
jmp
lds
pop
bound
pop
jmp
negl
mov
sbb
adcb
lret
mov
mov
jne
jle
clc
jo
enter
and
fdiv
fs
add
lret
in
cld
ds
out
pop
adc
and
sbb
mov
or
arpl
pop
adc
add
xor
loope
popf
xchg
out
xor
divl
xorl
imul
insl
xor
inc
icebp
sahf
cld
test
push
sbbb
pushl
aaa
enter
call
add
cs
xor
xor
enter
mov
loop
ja
pushf
hlt
je
sahf
cmc
call
popa
shlb
ss
jo
xor
add
les
pop
push
inc
iret
hlt
ret
cmpsb
lret
shl
mov
mov
add
sbb
clc
sub
lret
lock
add
add
inc
sarl
cmp
or
or
jno
cmp
sub
ret
push
pop
jnp
add
add
add
push
and
jmp
stc
inc
and
mov
add
bound
ret
sub
inc
adc
inc
ret
dec
fcompl
dec
xor
mov
sub
xchg
fwait
or
jmp
ficoms
sbb
inc
add
divb
add
jmp
fdivr
pop
fs
shlb
mov
iret
hlt
pop
jae
hlt
enter
push
scas
push
call
sub
subl
test
inc
in
fwait
sub
jbe
adc
mov
shrl
orl
fstpl
imul
cmp
lcall
add
jge
add
int3
pop
push
negl
fildl
pop
adc
cmpl
jmp
adc
neg
push
out
mov
add
mov
push
ja
dec
je
mov
pop
pushw
pop
jne
inc
cwtl
inc
sub
mov
add
dec
pop
mov
jb
jb
cltd
icebp
sub
sub
pop
pop
mov
add
sbb
outsb
add
roll
inc
rcl
repnz
lods
data16
mov
repnz
popf
or
mov
shlb
add
adc
push
push
sarb
not
mov
ret
jmp
lea
inc
add
shlb
add
mov
not
inc
mov
add
pop
mov
xor
fwait
inc
icebp
out
cmovb
fimuls
cmp
icebp
iret
jg
rorb
add
rcrb
lea
dec
hlt
ljmp
and
lret
int3
cmp
add
jp
xor
stos
or
xor
cmp
mov
or
mov
in
inc
add
lds
inc
sub
mov
andb
add
sub
inc
add
pop
add
ficompl
repz
mov
jg
das
cli
add
mov
rcrb
enter
lods
pop
adc
fcmovnb
mov
push
mov
in
fcmovb
mov
push
mov
and
pop
out
arpl
fiaddl
adc
cli
inc
add
mov
or
push
jmp
ficompl
adc
inc
add
jmp
stos
imul
test
add
push
mov
test
pop
mov
add
cmp
add
ds
loopne
cli
inc
add
xlat
cltd
jae
sub
lcall
inc
adc
fdiv
mov
subl
xor
in
leave
inc
jmp
lds
dec
cmp
adc
xchg
fsub
mov
mov
ljmp
mov
sbb
cmp
sub
in
xor
pop
xor
cmp
cli
cltd
lret
inc
push
inc
or
pop
push
lahf
push
dec
and
aad
push
out
aas
and
add
jnp
add
jmp
and
gs
or
es
iret
mov
pop
das
sbb
push
mov
mov
pushl
scas
fwait
cli
fisttpl
call
push
pop
add
lods
push
adc
pusha
mov
movl
scas
or
mov
sbb
inc
dec
xchg
add
sti
mov
sub
cmp
pop
inc
sbb
sub
xchg
ficoms
mov
hlt
push
sahf
pop
adc
add
es
pop
lods
add
add
repnz
dec
xchg
mov
inc
stos
mov
inc
add
push
dec
push
loopne
inc
stos
mov
inc
add
popa
adc
pop
hlt
add
and
out
cld
xchg
add
call
adc
add
add
lret
inc
icebp
mov
fisubrs
int3
push
lea
int
cmp
insl
inc
add
add
aas
or
adc
leave
mov
jae
rcrb
xor
imul
ret
imul
pop
xchg
rorl
jge
push
adc
lea
cmp
dec
lods
leave
mov
bound
scas
popa
inc
add
addr16
rcll
add
cmpsl
sub
dec
push
stc
xchg
sub
lods
push
lcall
xchg
pop
add
mov
inc
int
rorb
dec
add
and
ljmp
add
shlb
roll
sar
push
loopne
jmp
mov
sub
push
adc
pop
adc
push
rcrb
flds
cmp
sbb
adc
lods
aaa
mov
je
test
ljmp
inc
loope
cmp
out
nop
pop
adcl
inc
or
cmp
filds
xor
rcr
sub
call
cmp
aas
xor
push
add
adc
add
cmpsb
mov
in
push
add
mov
fisubrl
add
scas
push
fstl
add
xchg
inc
add
mov
mov
pushl
pop
mov
adc
add
adc
xlat
ljmp
loopne
std
push
xchg
dec
fdivs
inc
popl
lods
adc
inc
fcos
incl
std
add
add
vpshufb
add
add
pop
std
push
int
mov
rol
mov
add
add
add
std
sub
mov
and
nop
sar
or
cltd
mov
adcb
pop
mov
inc
loopne
xor
cmp
lcall
xchg
decl
inc
maxps
xchg
addb
ret
adc
shrb
push
les
repnz
adc
addl
adc
add
stos
cmp
pop
add
cmp
cmp
test
add
pop
mov
adc
add
scas
add
jmp
xor
adc
rcrb
add
outsb
add
adc
xor
inc
push
add
cltd
fistpl
xchg
aam
add
mov
add
xchg
adc
pop
add
mov
ljmp
dec
fmull
pusha
mov
aad
dec
xor
out
jl
and
pop
mov
adc
jmp
pop
adc
push
adc
jmp
shll
add
arpl
aam
dec
xor
mov
cmp
jmp
pop
adc
stc
push
xchg
jg
pop
adc
je
sar
call
push
push
add
pop
mov
mov
pop
adc
push
dec
xchg
ret
add
mov
cmpsb
cmp
sbb
add
mov
mov
or
lea
sbb
in
or
push
add
test
pop
xor
jae
pop
lds
pop
shlb
mov
push
ljmp
nop
movsb
add
push
push
lea
mov
add
rorl
lea
mov
lods
push
test
add
adc
add
add
xor
sub
xor
xchg
add
stc
shl
add
les
das
addb
add
stos
sub
std
cmp
or
inc
push
jge
sub
jnp
cld
stos
add
sahf
mov
or
add
push
sub
push
jmp
add
inc
jnp
add
mov
add
push
roll
cmp
cmp
xor
push
cs
pop
add
repz
push
jmp
cmpb
popl
std
cld
sub
add
jb
insl
adc
add
adc
xor
jb
test
push
xor
jns
add
cmp
or
push
or
in
cmp
mov
mov
sub
lret
sub
lret
pop
filds
jmp
add
add
psubsb
adc
test
push
lock
jmp
or
cltd
test
dec
push
int3
call
lea
inc
add
pop
adc
bound
push
ret
lea
cld
fs
add
lods
jg
pop
adc
ret
jnp
aad
push
cmp
and
push
sbb
and
fiaddl
cmp
idiv
pop
pop
sub
adcl
sub
sub
and
and
push
mov
cmp
and
cmp
subl
mov
mov
and
dec
and
imul
lcall
pop
rcrb
fistl
aad
dec
push
add
pushl
push
push
jb
push
adc
ret
repz
pop
lcall
adc
mov
pop
or
jmp
sar
in
add
adc
add
inc
and
xor
enter
dec
mov
ret
xchg
inc
aas
and
jp
lea
add
pand
ljmp
mov
or
repnz
lods
or
or
adc
mov
add
xchg
cmp
pop
mov
insb
fdivp
jg
jg
js
xor
adc
cmc
aas
add
and
jmp
push
add
loopne
adc
addb
aas
in
les
out
pop
adc
jle
xchg
dec
hlt
push
pop
bound
add
test
js
mov
mov
sti
adcl
add
fisubrs
fsubs
jle
sbb
inc
add
cmp
fisttpll
push
adc
in
add
sub
ret
sbb
mov
cmp
mov
adc
add
aas
xchg
lret
test
sti
iret
repnz
hlt
adc
std
loop
inc
loope
aaa
or
cmp
ljmp
aas
clc
dec
jbe
mov
or
pushf
sbb
and
subb
mov
add
fs
jo
push
dec
arpl
shr
dec
mov
pop
hlt
jmp
aas
jae
add
adc
add
mov
cmp
mov
and
dec
in
mov
scas
shlb
imul
push
mov
xor
movsb
pop
push
push
push
push
pop
xor
push
xor
jge
pusha
jne
fisubl
xor
xor
inc
rorb
les
sub
rorb
push
fdivl
add
cld
pop
mov
outsb
rolb
sbb
sbb
push
adc
loopne
mov
mov
popa
fadds
sbb
and
inc
lock
punpckhdq
aaa
xor
pop
jge
push
add
adc
inc
or
testl
iret
fstpt
add
int
and
mov
fwait
xor
out
jecxz
add
lods
sub
icebp
or
test
pop
lcall
lock
jae
in
or
inc
out
xor
inc
add
fdivs
pop
mov
mov
jge
adc
js
adc
lahf
sub
dec
mov
ret
sbb
add
mov
adc
inc
and
call
repz
test
fistl
fisubl
jp
inc
lcall
sbb
daa
repnz
jp
pop
pusha
add
or
sub
or
sub
sbb
mov
fiaddl
in
inc
pop
stc
jnp
fs
inc
and
xor
imul
les
inc
push
bound
dec
lea
cmp
jb
fwait
jae
out
mov
test
jecxz
jp
ret
mov
and
jb
and
ja
mov
daa
repz
call
popa
push
and
pop
popf
inc
fldl
scas
push
jne
pusha
call
imul
push
mov
or
call
jb
sbb
jmpw
ss
add
lods
mov
add
add
fwait
push
add
inc
push
push
add
sub
or
in
adc
rcl
setne
push
and
test
pop
add
cmp
fsts
movzbl
call
fsts
rcr
adc
std
pop
ret
mov
add
decb
adcl
in
mov
mov
pop
xchg
out
jp
jae
xor
dec
fmuls
push
jo
and
scas
incl
ljmp
daa
mov
mov
ljmp
xor
and
xor
and
add
pop
out
mov
ljmp
lret
cmp
call
movsb
fnstcw
add
and
dec
lods
dec
pop
add
ret
jae
fiaddl
mov
add
lock
xchg
cs
add
test
decl
inc
sahf
call
jne
and
lret
stc
add
cld
add
cmp
mov
dec
push
add
or
push
fcoml
negb
cmpl
add
mov
lods
pop
add
add
fs
sub
xor
adc
cmpl
stc
add
adc
call
call
ret
cwtl
or
push
adc
out
push
jmp
add
and
enter
daa
push
jmp
add
movsb
out
lahf
ljmp
clc
xor
add
push
add
mov
dec
fsts
mov
sub
fwait
daa
enter
repnz
xchg
pusha
lods
adc
adc
push
sbb
mov
bnd
addb
adc
xor
inc
clc
daa
pusha
dec
clc
aas
pop
inc
clc
and
into
push
and
cwtl
pop
inc
jmp
pop
aad
lds
dec
test
incl
xchg
mov
adc
mov
push
add
mov
and
jae
cmpsb
pop
and
in
shlb
int3
sub
js
inc
sbb
adc
test
std
cmp
pop
mov
cltd
out
push
lcall
and
push
movl
rcrl
incl
pop
cwtl
les
sbb
push
push
fs
push
jae
push
push
aam
fsubrl
add
add
mov
pop
push
push
mov
mov
add
add
mov
shr
sub
sbb
mov
jmp
mov
xlat
test
pushf
add
add
out
sub
sbb
pop
or
shrl
ret
push
add
sub
sbb
fimuls
inc
mov
jae
jge
mov
mov
push
pop
jp
idivl
push
or
add
jecxz
sbb
and
loope
shr
sub
push
out
fwait
push
in
jae
jg
and
stos
jmp
inc
adc
inc
add
pushf
push
adc
scas
cmp
jge
lods
cmp
sbb
sti
pop
stc
push
pop
test
push
adc
adc
dec
fsubr
test
cmp
inc
andl
or
or
pop
cmc
mov
add
stos
mov
lds
jmp
cmp
out
jnp
inc
jmp
pop
popf
int
ret
jmp
add
and
lahf
lahf
xor
jmp
inc
adc
add
inc
xor
movsb
test
sbb
in
pop
in
sub
or
mov
or
add
popf
inc
in
fstpt
aaa
xchg
inc
xchg
add
mov
fwait
pop
pop
xchg
add
pop
test
or
inc
loop
push
xor
popf
pushf
inc
and
aad
push
and
pop
lea
inc
add
aam
sti
xor
add
leave
adc
inc
xor
sub
lcall
push
dec
or
xchg
dec
mov
inc
pop
leave
scas
sbb
push
jbe
dec
push
into
int3
aaa
pop
in
call
mov
push
dec
add
and
cli
push
push
add
cmpsl
push
adc
push
push
outsb
inc
pushl
lods
mov
jmp
mov
pop
in
mov
mov
add
jge
mov
push
mov
push
call
int3
mov
jmp
pop
les
scas
xor
ljmp
or
ljmp
or
jg
adc
add
lret
sar
xchg
mov
lock
add
les
out
mov
mov
sub
add
bound
lahf
pop
call
add
adc
push
cmp
cmpsb
xchg
or
mov
imul
push
and
andb
pop
xchg
movsl
in
add
sbb
add
dec
cwtl
arpl
iret
out
test
sub
pop
dec
xor
arpl
or
cmp
mov
xor
dec
icebp
incb
add
test
cmc
call
push
sbb
mov
push
or
add
call
filds
sub
adc
add
add
pop
adc
stc
jp
gs
pop
add
inc
mov
dec
fdivp
sbb
pop
xor
notl
add
dec
rorl
scas
das
lods
add
pop
xchg
inc
icebp
push
cmp
setno
mov
add
movl
and
outsl
lods
adc
and
subb
add
adc
pushl
incl
insl
adc
call
and
pop
fwait
xlat
rorb
inc
mov
fsubrl
pop
adc
lods
incb
sub
fwait
push
add
std
mov
shlb
sahf
faddl
add
in
pushl
adc
fstpl
mov
ret
pop
add
lock
mov
lods
cmpl
sbb
adc
push
lea
mov
lock
add
pop
xchg
mov
je
jae
je
mov
jnp
leave
inc
mov
mov
mov
ds
and
sbb
xor
aad
mov
push
mov
xor
hlt
in
and
je
in
inc
adc
in
push
or
push
in
sub
shl
stc
test
inc
mov
cmc
cmc
jno
mov
mov
or
mov
stos
mov
add
inc
xchg
fwait
mov
or
or
sub
cmp
iret
out
jle
rorb
adc
push
ret
or
sbb
into
cmpsb
cmp
int3
inc
in
xor
jle
mov
daa
mull
push
bound
or
stos
xchg
add
adc
stc
jge
call
scas
pop
add
gs
pop
sub
push
aam
psrlq
lods
mov
add
add
adc
xor
adc
cmc
adc
pop
dec
mov
or
pop
imul
notl
xchg
jp
and
jae
fdivr
adc
out
adc
add
push
pop
pop
scas
add
test
mov
mov
mov
lods
repz
fstpl
add
add
jo
push
int
ret
push
or
cmc
outsb
adc
push
pop
xchg
lret
decl
adc
add
iret
jb
out
es
sahf
adc
out
lcall
xlat
jo
notb
mov
xchg
imul
xor
in
enter
add
add
adc
add
jle
js
mov
pusha
inc
add
repz
xchg
insl
jle
fldt
inc
add
dec
push
lods
dec
xor
sbb
inc
push
lods
test
and
mov
mov
subb
cli
out
push
add
fildl
rolb
and
mov
in
jle
fsubrs
into
cmc
push
stos
sub
das
out
jmp
repz
adc
sub
mov
les
mov
stos
mov
call
sbb
push
fisubrs
add
or
sub
mov
ds
rcrl
adc
sarl
mov
bound
mov
cli
or
adc
das
or
and
xor
sub
rclb
test
mov
imul
out
mov
or
insb
inc
and
cltd
pop
movsl
daa
jmp
fimuls
mov
clc
stos
sbb
add
aas
or
ret
pushf
add
pop
call
adc
pop
mov
mov
add
mov
add
out
or
push
adc
inc
mov
popf
xchg
add
adc
adc
test
jmp
iret
mov
push
cli
iret
call
adc
call
pop
adc
sahf
inc
popf
fidivrl
fsubrl
pop
fistl
mov
repnz
lcall
push
add
lods
pop
adc
jns
int
adc
mov
mov
sub
dec
mov
adc
lea
imul
cmpl
xchg
sbb
lcall
push
jae
pop
js
int
adc
cmp
push
mov
push
pop
xchg
pop
adc
call
aam
sub
add
add
outsl
dec
ret
fldenv
lahf
subb
sti
pushl
jl
inc
jns
jmp
mov
call
subl
int
push
lds
mov
add
jnp
xor
xchg
jp
dec
xor
mov
add
test
add
sbb
sbbl
lret
xor
sti
xchg
inc
push
lea
jge
dec
lods
add
add
adc
stos
pop
fwait
mov
inc
add
adc
add
adc
inc
andl
push
add
sub
pushf
in
out
sahf
push
pop
ss
cmp
sbb
push
mov
push
or
jecxz
je
int3
inc
adc
mov
shl
mov
and
jns
jmp
stos
mov
mov
push
mov
and
add
cmp
pop
adc
rcrl
call
jmp
decb
xlat
out
lahf
mov
dec
fcompl
adc
fs
loop
mov
mov
cmp
shll
push
inc
push
cmp
loopne
mov
adc
xchg
call
in
incb
add
sbb
lcall
jl
jae
test
ljmp
imul
sbb
add
push
jge
insl
or
jmp
pop
leave
fisttps
add
jae
in
mov
inc
push
mov
cmp
mov
jl
xchg
in
adc
or
dec
imul
leave
in
adc
shl
mov
fstl
idiv
idivl
lods
adc
add
incb
push
inc
mov
lcall
stos
jnp
subb
pushl
push
push
das
jo
jmp
fwait
jbe
add
mov
adc
stos
jg
cmp
insl
inc
add
daa
std
add
test
lods
aad
push
xor
aas
lods
je
sub
hlt
add
loopne
jns
lods
adc
mov
ja
mov
stos
dec
cmp
hlt
lret
clc
scas
fidivl
les
aam
clc
cmp
lock
adc
aaa
mov
jmp
incl
xchg
cwtl
fwait
and
add
mov
shll
sbb
push
fidivrl
jb
cli
lea
adc
inc
lret
push
jmp
inc
add
test
xchg
aaa
jb
push
jmp
xor
add
pop
mov
jmp
adc
mov
test
sub
call
out
adc
push
sbb
lock
dec
xchg
out
ficoms
mov
mov
and
mov
stos
xchg
pop
push
adc
pushf
xchg
mov
mov
lahf
jbe
call
mov
pop
inc
scas
jno
adc
adc
cld
pop
pop
scas
out
pop
xchg
pop
lods
lods
shll
adc
xchg
pushf
xchg
push
dec
cmp
stos
xor
std
push
aaa
add
loope
add
mov
test
repz
popf
sbb
and
pushl
push
inc
or
repz
insl
push
inc
or
push
inc
adc
repnz
insl
push
inc
adc
movsb
repz
pop
push
inc
sbb
mov
lea
adc
inc
sbb
adc
xor
sub
push
repnz
in
sbb
js
nop
fcoml
mov
std
push
add
xchg
idivb
mov
add
sub
pop
xchg
mov
push
push
lock
adc
mov
jns
lcall
xor
dec
jae
add
stos
test
inc
add
pop
lock
imul
or
imul
pop
in
cmp
je
in
incl
sbb
add
jmp
add
stos
inc
pop
pop
mov
adc
jge
xchg
push
push
out
push
in
or
mov
pop
dec
fsub
js
add
fnstenv
push
xor
or
jl
and
in
push
cmp
push
cmpsb
fs
insl
enter
sbb
aas
mov
mov
stc
mov
add
mov
push
sarl
arpl
jo
push
cltd
sub
xchg
ljmp
and
add
jl
push
add
xor
add
lods
jle
and
insl
push
adc
call
jmp
adc
sub
loop
and
loop
push
add
popf
inc
xchg
sbb
push
gs
adc
lock
pop
adc
movsb
xchg
loop
ljmp
add
pop
test
dec
xchg
inc
jmp
adc
test
push
mov
xchg
mov
pop
mov
cltd
mov
je
outsl
aaa
mov
push
inc
xchg
jl
add
test
add
cmp
or
repnz
add
adc
mov
mov
insl
lods
adc
aad
fbld
jne
es
cmp
ret
or
add
repz
xchg
jnp
pop
mov
mov
adc
adc
rolb
and
xchg
mov
adc
adc
test
jb
xchg
jne
out
jae
add
std
cmc
mov
add
jae
inc
in
add
add
jp
mov
cmp
or
lods
add
out
or
mov
jnp
cld
test
hlt
insl
push
add
add
stos
mov
ficompl
mov
dec
jp
or
movsl
je
sub
mov
jge
mul
cld
cmp
add
inc
cmpl
add
jns
or
decl
jecxz
inc
or
adc
push
in
cmp
adc
cld
push
jl
mov
adc
loopne
sbb
sti
lret
mov
jbe,pn
adc
aas
lods
in
mov
mov
scas
out
mov
add
popa
jg
or
push
push
inc
xchg
adc
jp
and
clc
lcall
fstps
push
pop
sbb
das
es
add
imul
rorl
roll
cli
xor
push
rcll
fdiv
cmp
dec
xor
xor
jbe
push
push
adc
test
add
cmc
adc
dec
insb
call
push
add
jb
ja
and
clc
outsb
pusha
sbb
dec
xor
fldenv
pusha
les
push
repz
mov
cltd
mov
pop
call
bound
cmc
xchg
dec
xchg
jl
add
shrl
push
test
sub
inc
clc
mov
in
adc
aad
call
mov
insb
out
in
push
add
mov
inc
add
or
lcall
ror
ret
push
mov
pushf
mov
xchg
ret
ret
and
jmp
cmpsl
xor
sbb
shlb
xor
xor
pop
lds
inc
cld
jge
lds
add
mov
popf
add
clc
ret
jae
nop
or
rorl
adc
test
xchg
xor
stc
mov
aas
add
cmp
pop
xor
lret
inc
or
lods
xor
mov
dec
xchg
or
dec
lods
insb
leave
jp
fdivrs
inc
nop
push
mov
clc
xlat
lret
cmp
stos
push
dec
jp
lea
rcr
push
jp
push
mov
push
sahf
add
jo
call
add
sub
sub
fnsave
sub
sub
add
mov
lret
in
add
pop
pop
stos
hlt
repz
mov
js
test
call
mov
sbb
imul
adc
fisttpl
sbb
notl
movb
adc
mov
clc
das
jl
add
jo
mov
in
adc
pop
and
arpl
xchg
popa
incl
aam
and
pop
adc
mov
xor
mov
lds
xchg
addb
in
mov
fwait
aad
jno
jmp
ret
test
adc
in
addl
das
cmp
and
and
jecxz
hlt
fwait
and
jmp
fs
testl
gs
clc
fcmovnb
adc
mov
sub
ja
pop
add
aas
dec
jl
or
dec
lea
dec
jl
and
dec
jne
push
lcall
push
lcall
js
gs
and
addb
sub
je
ds
scas
adc
ds
push
push
je
sahf
cs
pop
test
je
mov
jmp
fstpt
push
push
test
adc
inc
mov
inc
push
push
add
push
test
add
stc
inc
mov
bnd
js
add
jne
cmp
sarl
enter
setl
add
xor
xchg
jb
inc
or
xor
sbb
lock
add
inc
and
testb
call
imul
out
and
shrl
lea
out
mov
pop
cld
sub
shl
ds
and
push
and
adc
and
das
add
into
lock
pop
jb
hlt
lcall
negl
insl
xor
adc
nop
das
icebp
xor
int
add
sub
mov
add
lds
in
add
add
movsl
xor
inc
jmp
imul
xchg
mov
xchg
dec
add
out
cmp
adc
inc
add
movsb
adc
inc
je
call
cltd
jmp
pop
cltd
inc
lds
in
cmp
adc
sub
dec
lea
push
imul
pop
fwait
ljmp
test
stc
adc
movsl
and
dec
jb
xlat
mov
adcl
rcrl
jl
fisttps
inc
lea
push
shll
shlb
dec
clc
cwtl
inc
add
idiv
sub
jnp
and
adc
andl
push
jb
out
and
out
mov
test
adc
mov
test
xor
mov
mov
adc
dec
xor
adc
test
fstpl
dec
mov
adc
push
cmp
pop
adc
inc
push
jmp
addl
adc
push
ljmp
ret
add
sub
call
js
int3
pushf
adc
mov
xchg
inc
sub
or
mov
add
add
cmp
movsl
jnp
mov
mov
cmp
nop
cmp
or
mov
cmpsl
arpl
mov
lea
sbb
cmpsb
or
pop
or
leave
cs
adc
add
mov
adc
cmp
push
call
xchg
xchg
ffreep
push
in
dec
mov
add
inc
aam
paddb
mov
into
push
adc
aaa
pushf
leave
addl
cwtl
lcall
mov
sbb
rcl
js
inc
cmp
add
cli
sbb
imul
mov
push
cwtl
mov
outsl
mov
adc
adc
mov
inc
cwtl
cs
in
sbb
xchg
mov
add
cltd
test
pop
in
xor
adc
add
das
xchg
sub
cltd
ljmp
add
sti
fisubl
sbb
mov
outsl
pusha
fadds
mov
call
popl
inc
or
sahf
pop
call
scas
icebp
push
jge
pop
stc
pop
adc
inc
cmp
sbbb
lea
clc
pop
adc
stos
add
adcb
sbb
push
adc
insb
flds
or
cli
and
pop
in
dec
dec
aam
cmp
push
mov
scas
dec
bnd
mov
fwait
ds
xor
jne
icebp
push
pop
sbbl
sub
add
cmp
or
sbb
mov
je
fwait
jae
ror
add
sbb
fdivrs
or
inc
or
sub
ljmp
mov
push
add
pop
fwait
inc
or
inc
or
jne
mov
popl
dec
sarl
add
add
mov
sub
push
mov
inc
cld
add
stos
push
les
idivl
ret
and
push
add
cmc
xchg
mov
bound
push
pop
add
cld
xorl
add
stos
sub
mov
sahf
push
sbb
jge
add
dec
inc
idivb
xor
stos
pop
adc
in
mov
add
mov
adc
mov
mov
insb
insl
xchg
rolb
push
ret
sub
cmp
adc
rorb
sub
sub
out
stos
dec
dec
add
test
pop
mov
cwtl
mov
in
xchg
clc
jnp
cmp
pop
test
add
mov
xchg
push
xchg
sub
inc
inc
sub
loop
das
roll
lcall
fldlg2
mov
xchg
nop
testl
sahf
mov
xchg
adc
call
add
mov
mov
popf
daa
mov
add
push
in
fldl2e
mov
roll
jae
mov
pop
cmp
push
add
jl
pop
push
pop
add
mov
in
mov
jmp
mov
dec
in
sub
xor
sarb
push
push
inc
shrb
adc
jle
daa
mov
add
adc
xchg
pop
lcall
mov
frstor
dec
adc
adc
lea
call
xor
xchg
ljmp
pop
add
xor
test
adc
add
cmp
mov
add
pop
test
add
jmp
add
pop
mov
mov
mov
decb
pop
adc
add
inc
call
ljmp
icebp
out
add
sub
mov
add
js
hlt
inc
imul
imul
push
jnp
je
sbb
test
inc
fs
add
jge
jg
jl
cwtl
push
insb
out
mov
pop
ret
jge
cwtl
mov
jl
aam
dec
lock
add
cwtl
incl
clc
dec
arpl
out
repnz
decb
imul
ljmp
xchg
sub
fstpl
and
inc
mov
mov
add
cmp
mov
add
adc
dec
call
jl
into
add
xchg
call
push
mov
popa
dec
cwtl
mov
mov
mov
xchg
jl
xor
psllw
imul
jnp
jno
pusha
push
sub
jl
mov
shr
xchg
fsubs
push
sbb
jl
sti
inc
es
cwtl
adc
xchg
in
pop
push
popa
xlat
adc
jmp
in
or
inc
fs
bound
mov
jp
out
mov
jmp
push
xor
jae
call
into
inc
xchg
call
and
mov
rorb
nop
pop
adc
jb
in
mov
ljmp
push
xchg
or
xadd
call
jb
mov
cmp
mov
in
inc
out
sbb
add
adc
mov
mov
push
mov
add
add
xchg
mov
inc
in
data16
addb
push
test
cmp
pop
pop
add
pusha
adcl
ss
out
xor
add
sarl
iret
fsubl
call
out
jmp
in
incl
pop
pop
hlt
mov
dec
jb
es
jl
mov
or
add
fiadds
js
add
add
cmp
jl
pop
cwtl
gs
xchg
push
xor
add
enter
add
add
mov
cmp
adc
xor
and
rcrl
inc
aam
inc
sub
cmp
mov
inc
sub
jg
mov
inc
test
adc
jg
mov
mov
test
or
ret
xchg
ja
inc
je
adc
xor
xchg
orb
xchg
cmp
pushf
cmpb
mov
inc
sbbb
jp
adcl
in
ljmp
bnd
inc
fadds
dec
lret
add
leave
incl
test
cmpsb
rorb
aam
sub
xchg
mov
lds
fists
loopne
fdivrl
sub
hlt
mov
xchg
mov
aam
shlb
lock
sub
jmp
testl
aaa
inc
movsb
mov
lods
xchg
mov
scas
out
inc
and
add
cld
orb
push
xchg
out
or
adc
fdivrl
inc
jmp
incl
cmc
stos
pop
ja
loope
aaa
add
out
pop
xchg
jbe
hlt
mov
faddl
sbb
adc
sbb
jbe
in
js
or
add
pop
pop
mov
mov
inc
push
push
out
pop
push
add
pop
pop
mov
adcb
aam
adc
dec
sar
push
xchg
cld
jb
cmp
adc
xchg
cmpsl
add
mov
sahf
adc
lcall
ficompl
nop
call
stos
jge
cmc
out
mulps
bound
xor
or
cmp
rolb
outsb
pop
add
out
add
add
out
jl
call
pop
addl
in
cmp
aas
push
push
ja
adc
insb
sub
icebp
mov
push
fiaddl
xchg
jg
dec
add
ret
xlat
fwait
xlat
ret
sbb
or
andb
push
jmp
mov
inc
imul
inc
imul
icebp
jb
aas
add
adc
movsb
cli
inc
mov
mov
jb
jae
bound
push
mov
jb
xchg
xchg
sbb
shlb
adc
imul
imul
loopne
je
gs
pop
pop
icebp
or
add
fiaddl
pushf
push
jo
add
ljmp
fcmovnb
xor
pop
and
lret
adc
lds
add
jle
nop
or
test
add
adc
mov
paddusb
add
call
add
adc
add
jmp
sahf
nop
fwait
jmp
nop
add
add
or
xorl
je
jmp
or
cld
jnp
inc
jmp
mov
xor
push
jne
sahf
add
jmp
das
jg
jmp
sti
jb
loope
pop
out
jge
adc
sub
mov
pop
pop
enter
lea
sub
fdivl
dec
add
and
fsubrs
icebp
ret
mov
jae
andl
xor
shll
sbb
icebp
shr
sbb
pushf
adc
aas
xlat
pop
addr16
jne
pushf
jae
loop
repnz
outsb
pop
add
cmp
pop
mov
pop
ret
loop
pop
xor
pop
pop
and
insb
addb
add
add
in
inc
and
into
pushl
jmp
hlt
fists
push
dec
sahf
adc
daa
push
mov
cli
hlt
inc
jge
pop
add
repz
repz
les
mov
add
add
test
mov
xchg
jg
jge
adc
dec
lcall
cmpl
jl
test
clc
fidivrs
jge
subl
add
add
ds
iret
push
and
add
cmp
jnp
mov
sti
add
add
ds
out
and
add
push
and
adc
testb
aad
aaa
cmp
inc
add
xor
jecxz
lods
dec
xchg
jno
adc
and
add
lock
xlat
mov
jg
adc
add
sub
hlt
jle
or
dec
aad
add
adc
les
mov
jnp
xor
fadds
mov
cmp
xorb
imul
pushf
call
mov
jno
jmp
add
push
jmp
pop
shl
into
add
sbb
pop
bound
xor
mov
jl
add
jo
jmp
jo
jnp
dec
enter
adc
add
lahf
jnp
add
enter
adc
jb
loopne
lods
push
sub
adc
mov
xchg
adc
ret
cmp
sbb
lahf
lahf
jge
pop
fwait
mov
out
insl
add
add
ljmp
add
in
lds
cwtl
jb
std
push
xchg
pushf
adc
inc
add
je
in
jp
mov
std
jne
jne
jnp
divb
adc
popa
in
pop
and
out
and
and
je
pop
mov
fiaddl
and
repnz
out
lock
cwtl
std
je
or
inc
add
add
push
push
dec
mov
push
mov
dec
adc
negb
or
xchg
cld
push
fmull
pop
and
testl
push
jge
inc
add
jo
gs
jns
sbb
ds
jecxz
pop
aaa
hlt
lds
add
call
lea
sub
add
leave
dec
inc
jge
sbb
ret
jmp
shl
xchg
jg
orb
shll
stos
iret
dec
add
idivb
adc
add
mov
mov
clc
test
pop
std
lock
push
add
stos
lea
in
cmp
jb
mov
insl
imul
call
sub
call
and
add
mov
imul
inc
xlat
push
jg
add
out
in
mov
fdivrl
adc
cmp
test
addb
pop
mov
sbb
call
jl
jmp
pop
and
test
push
cltd
adc
jne
lcall
inc
in
clc
adc
pop
push
iret
jns
imul
xor
shr
adc
sbb
outsl
rcrb
mov
xchg
adc
nop
enter
xchg
call
into
dec
mov
pop
cli
pop
rol
mov
test
ja
fisubl
add
addl
and
add
cmp
cmp
outsb
test
adc
sbb
push
mov
pop
ficoml
repz
or
dec
push
out
std
jg
and
push
cwtl
les
pop
out
ret
sbb
add
lods
jne
pop
scas
sbb
push
dec
cmp
push
adc
shrb
add
sub
sub
jbe
and
pop
out
cmpsb
or
ljmp
testb
adc
add
adc
jae
pop
std
inc
pop
jno
movzbl
in
sub
mov
addl
add
add
cmp
repz
int
mov
clc
push
das
and
or
ds
jae
cmp
ja
cmp
jae
inc
push
inc
sbbb
mov
xor
stos
add
sub
adc
movb
pop
sbb
mov
xlat
cmp
adc
inc
insb
mov
icebp
add
push
ds
sub
add
cli
adcb
mov
xor
imul
repnz
popf
sub
in
xchg
and
cmp
push
mov
cmc
and
movsb
sub
fdivl
insb
xchg
jg
imul
cmp
addr16
cli
add
jno
jne
adc
aam
popf
mull
jo
mov
adc
hlt
adc
insb
or
in
add
ss
mov
in
sub
jb
cs
out
pop
cmp
insb
dec
jb
fsts
scas
pop
call
pop
adc
movsl
xadd
ds
push
out
push
push
sub
adc
pusha
call
xor
jl
aas
jne
pop
cmp
incl
push
sbb
test
sbb
in
jne
jne
cld
out
sbb
fidivs
scas
adc
push
xor
inc
leave
inc
push
push
out
or
or
adc
sbb
movsb
decl
out
adc
push
decb
add
xchg
ljmp
jns
pushl
pushf
out
andl
lea
inc
push
and
sbb
add
add
icebp
sub
inc
add
pop
mov
in
cmp
push
push
movsb
push
mov
push
sbb
adc
jl
stos
xchg
or
mov
stc
outsl
pop
push
loopne
testl
outsb
pop
jnp
nop
push
incl
pop
and
mov
adc
inc
shrb
ret
adc
inc
add
inc
je
or
loopne
jmp
cmpsb
cmc
pop
dec
aaa
insb
add
sub
add
add
adc
adc
xor
shll
ret
xor
cmp
call
jl
clc
mov
ret
sbb
out
nop
imul
mov
dec
lds
jmp
shlb
xchg
stos
jnp
cli
loopne
shlb
and
fld
ret
nop
sub
sub
add
jno
fadds
sub
iret
aam
roll
ffreep
jnp
fs
pop
jns
addr16
add
insl
sbbb
mov
popa
jae
sar
sbb
or
fsubrl
loopne
push
fs
clc
sar
add
loopne
jae
sub
mov
rcl
fildll
and
cmp
aam
mov
or
and
pop
loope
cmp
jns
mov
and
jmp
add
aaa
pop
loopne
into
add
call
add
maxps
sbb
cli
add
jmp
incb
arpl
add
push
incb
fmull
ret
test
arpl
xor
xlat
roll
xlat
mov
xor
push
xor
mulb
dec
cli
cmp
sbb
mov
add
std
adc
and
push
pop
lea
fwait
dec
cld
add
out
pop
sbb
dec
cld
out
jmp
cld
js
or
in
pushl
push
shlb
rcll
push
jge
fcoms
jne
pusha
adc
lock
nopl
adc
cltd
mov
ret
sub
sbb
push
mov
dec
sub
aaa
sub
add
or
xor
out
mov
jne
adc
pop
pop
cmc
out
aas
add
push
pop
insb
add
stos
adc
call
sub
insb
flds
push
adc
cmpsl
stc
push
arpl
sbb
fcom
js
add
js
bound
imul
add
inc
pop
jmp
addr16
jns
cmpsl
rol
sbb
insl
adc
negl
call
mov
pop
cli
ret
jecxz
sub
sbb
js
in
xor
or
out
mov
and
mov
stos
sub
sub
out
sbb
push
clc
mov
mov
inc
test
sub
ljmp
mov
sti
fs
mov
roll
insb
filds
mov
xchg
ret
in
call
cmp
adc
popl
nop
inc
jno
mov
shl
and
push
and
repz
faddl
adc
in
mov
push
mov
leave
pushf
jmp
fincstp
sar
pushl
fdivs
mov
adc
inc
add
mov
loop
loopne
aaa
jge
jo
incl
std
push
dec
jmp
mov
pop
push
out
pop
xchg
rolb
add
sahf
add
sbb
in
pop
test
xor
add
pop
jo
push
stos
shrl
push
in
or
sbb
ljmp
out
adc
fs
mov
push
add
add
adc
addl
adc
inc
adc
add
les
mov
test
add
ja
mov
stc
fs
lods
dec
ret
lock
imul
aas
add
out
add
test
rcl
add
aas
or
push
jg
stos
dec
test
mov
add
mov
out
push
ror
add
pop
repnz
std
jmp
adc
ja
pop
mov
add
sub
add
arpl
cwtl
xchg
jbe
pop
cmp
stos
hlt
ret
orl
shll
loopne
rorb
xor
shr
shll
cmp
add
lods
adc
stos
call
out
or
insl
shrl
stc
sbb
add
rorl
jle
inc
or
fimuls
call
xor
dec
rcl
aas
jmp
pop
mov
add
mov
subl
pop
dec
push
pushf
out
jmp
sti
inc
pop
inc
add
adc
jmp
xor
and
dec
cmpsb
std
out
adc
in
push
gs
dec
imul
test
dec
pop
lea
movsb
arpl
call
or
add
mov
cmc
fcom
shl
fadds
lea
lea
xor
add
mov
add
push
mov
xor
mov
pop
add
movsb
je
insl
loope
mov
out
decb
add
xchg
inc
cld
or
pop
std
shrl
pop
or
test
add
sub
dec
idiv
fcmovnu
inc
clc
add
int
jne
push
add
jle
mov
sub
imull
aas
add
cmp
inc
adc
add
stc
aas
add
cmp
or
ret
cli
jp
xchg
cmp
xchg
hlt
out
stos
add
and
pop
add
add
dec
push
orb
add
repz
sti
aam
div
lea
mov
mov
lods
add
adc
ja
push
in
xchg
adc
add
imul
lahf
jmp
popa
dec
push
cmp
xchg
pop
xchg
ja
loopne
jno
arpl
shl
loope
jle
and
cmp
jnp
ret
xchg
shrl
iret
push
push
jo
imul
fbld
fiadds
sti
push
mov
shll
push
add
add
and
cmp
outsl
add
add
dec
mov
xchg
mov
sub
fistpll
aam
in
jo
mov
aaa
ret
imul
sbb
mov
pop
lret
sub
push
inc
in
push
adc
inc
xor
rcrb
jb
mov
dec
lds
int
mov
iret
mov
cmp
inc
dec
mov
popa
xor
pop
push
xchg
jge
mov
in
bound
cmp
mov
mov
push
xor
sar
aas
std
push
adc
inc
clc
mov
xor
mov
pop
push
jbe
push
mov
ffree
mov
mov
add
adc
shlb
rolb
push
call
pop
push
pushl
pop
push
inc
cmp
inc
lods
xchg
ret
dec
add
xlat
pop
add
into
pop
pop
sub
or
adc
out
push
push
inc
push
jbe
fisttpll
dec
std
test
xor
jns
das
insb
jns
fildl
xchg
or
add
add
popf
aad
lret
sti
insl
jns
cld
pop
dec
xor
adc
or
daa
add
insl
jns
aaa
lcall
sbb
pop
inc
add
jnp
pushf
cwtl
ljmp
fwait
inc
ljmp
inc
inc
cld
jo
add
pop
ret
jo
cmp
call
jge
inc
add
inc
pop
pop
clc
sti
je
adc
roll
fstl
cmp
inc
loope
insb
mov
mov
xor
mov
les
jo
pop
sbb
pop
std
adc
add
mov
mov
or
aam
arpl
add
jmp
das
pushf
add
add
push
xor
js
xchg
sub
or
add
int3
inc
push
popa
movb
sub
inc
in
dec
add
add
xchg
loopne
inc
shlb
loopnew
add
sbb
mov
pushl
mov
popw
push
or
movswl
test
addl
add
imul
push
cmpsb
call
adc
add
push
push
fstl
sarl
data16
fcoms
push
fsts
cld
xor
inc
jmp
add
test
adc
xchg
add
dec
cltd
inc
rolb
call
cmc
inc
adc
or
add
or
aas
add
ljmp
cmp
pop
out
sbb
add
adc
call
out
incl
adc
add
push
incb
adc
add
push
ltr
adc
and
decb
inc
std
adc
xor
push
test
arpl
push
fildl
push
jge
adc
push
decb
jno
push
add
add
mov
std
imul
stc
push
adc
pop
mov
inc
adc
imul
jmp
pop
adc
scas
cmp
pop
xchg
sub
lcall
jne
repnz
psubq
imul
imul
add
inc
ljmp
xor
enter
push
jg
aam
aaa
stos
jge
xor
jo
add
aas
imul
xchg
lods
clc
xchg
flds
add
rcrb
cmp
call
adc
enter
push
adc
sub
add
movsl
mov
stos
sti
pop
out
hlt
add
sub
inc
adc
inc
push
fnsave
fistps
movsb
imul
sub
orl
add
cmp
mov
pop
stc
push
mov
fiaddl
cmp
adc
push
aam
popa
mov
andb
mov
call
xor
aas
push
pop
adc
xchg
sub
pop
test
pop
push
shlb
in
enter
push
bound
jmp
jg
pop
adc
jmp
mov
add
ret
faddl
or
andb
and
pop
push
push
jmp
fidivl
call
repnz
inc
jae
js
aaa
pop
jge
rcpps
push
pushl
adc
cld
add
insl
adc
out
push
out
push
push
lcall
adc
mov
push
out
cmp
sub
loopne
jg
xchg
pop
add
push
js
ljmp
mov
incb
les
inc
dec
inc
mov
adc
jecxz
std
add
icebp
repz
lods
popf
jmp
insl
ret
add
adc
gs
arpl
inc
jae
lret
enter
push
sub
into
fldcw
je
push
jl
add
or
xchg
and
das
andl
out
pop
or
jns
gs
in
cli
repz
mov
cld
sarl
ret
out
fcoml
insl
inc
aaa
sbb
lahf
adc
dec
stos
leave
cld
pop
xchg
jbe
add
jbe
add
mov
dec
push
add
add
lcall
sub
jo
fld
jg
leave
ljmp
sub
add
ret
sub
sub
pop
and
add
adc
add
sub
adc
insb
mov
sbb
mov
or
fwait
mov
dec
enter
dec
cmp
add
pop
add
mov
dec
lahf
sub
div
cli
adc
dec
pop
ret
cmp
dec
dec
pushl
fldl
mov
inc
dec
push
insb
xchg
dec
dec
inc
add
mov
sti
sbb
cmc
sar
imul
add
jns
dec
jb
cwtl
aad
lahf
inc
push
add
out
or
pop
add
cmp
cwtl
inc
add
dec
mov
leave
push
mov
jmp
push
add
add
pop
arpl
rorl
pop
mov
insb
xchg
arpl
insl
pop
mov
cmp
mov
mov
test
mov
cmp
sahf
adc
pop
cmp
push
mov
mov
rolb
gs
call
dec
mov
mov
fcomps
jne
mov
addl
jne
mov
ljmp
add
les
add
es
xchg
mov
adc
push
testb
mov
mov
ss
stc
mov
push
arpl
or
add
mov
negl
cmp
fsts
lcall
dec
cmp
lret
fadds
add
inc
sbb
mov
xlat
or
mov
adc
add
shl
inc
dec
mov
bound
inc
cmp
sahf
stos
xrelease
fldenv
or
push
fcomps
dec
mov
mov
mov
movntq
lea
xor
imul
or
cwtl
sub
mov
pusha
mov
clc
mov
ret
xor
add
xchg
hlt
pop
iret
pop
in
iret
pop
in
idivl
popf
pop
insl
gs
fdivr
pushf
inc
popa
bound
xor
call
add
pop
rorb
jmp
or
rclb
xchg
adc
out
pop
mov
dec
fs
dec
dec
out
push
push
lcall
aad
mov
adc
add
mov
or
and
jmp
lock
sub
add
adc
dec
je
adc
adc
push
push
test
in
xchg
jbe
jmp
movsb
in
adc
mov
dec
nop
ljmp
xchg
out
cmp
cmp
pushl
lcall
insl
sahf
inc
hlt
mov
or
add
pop
cli
xorl
add
mov
xor
and
out
cmp
sub
add
cmp
jne
movsb
pop
clc
add
enter
aam
add
and
pushf
mov
add
inc
xchg
cmp
lea
mov
jl
add
fcoml
add
pop
test
xor
xorl
adc
xchg
add
enter
jg
add
xchg
add
cmpl
bound
cmp
negb
push
out
popf
add
mov
enter
mov
sub
adc
fdivs
pushf
and
mov
adc
mov
add
mov
hlt
paddusb
mov
add
mov
or
scas
push
cltd
cmpsb
pop
aaa
inc
rcll
aam
mov
cmp
add
jb
add
rcll
inc
cld
popa
enter
das
pushf
repnz
add
push
lock
popa
enter
fimuls
popf
es
ficomps
pop
lock
cli
ret
push
add
sbb
or
fcmovnu
lcall
ss
add
cmp
jb
call
add
jg
cmp
testl
push
add
add
or
inc
adc
mov
add
adc
push
add
pop
adc
repz
add
cld
xchg
and
jle
cmp
mov
mov
mov
call
pop
fisubrs
add
push
rclb
add
mov
call
push
mov
out
mov
sub
add
sub
inc
std
jne
mov
push
call
pop
fscale
pop
ret
mov
ret
push
mov
dec
push
lcall
clc
add
repnz
xor
mov
and
inc
sub
xchg
jbe
call
xor
loopne
sub
jle
imul
add
xchg
clc
cmp
sbb
pop
lock
idiv
add
ret
inc
pop
loopne
das
add
jle
sti
jg
push
cmp
aam
and
pop
ljmp
mov
rol
outsl
jnp
add
in
push
push
mov
pop
jmp
ljmp
not
aas
pop
adc
add
add
aas
add
inc
pop
dec
add
add
jmp
push
hlt
push
cmp
sar
add
icebp
add
jnp
mov
add
mov
out
imul
dec
cmc
shr
push
aas
lcall
lret
or
push
in
sarb
mov
sahf
and
pop
nop
aas
xchg
lock
sbb
hlt
add
and
rorb
jmp
add
hlt
push
int
lock
pusha
lret
or
add
add
adc
mov
adc
aad
inc
test
sub
cld
mov
fildl
lea
jecxz
adc
das
inc
inc
add
stos
dec
mov
xchg
inc
icebp
add
daa
pop
addl
frstor
clc
fildl
mov
sbb
cmp
das
addb
push
mov
adc
jmp
add
popl
mov
inc
int
xchg
lods
ljmp
notb
mov
scas
and
jmp
pop
enter
adc
fs
jmp
pop
pop
shlb
inc
adc
add
push
decb
icebp
clc
mov
ret
je
xchg
mov
fimuls
and
sar
add
pushf
jle
dec
push
jmp
xchg
push
or
adc
adc
adc
ret
imul
cmp
mov
fwait
in
adc
pushl
inc
push
xor
in
add
sti
sbb
sub
sahf
add
add
add
push
fwait
sub
jmp
add
gs
mov
decb
or
inc
testb
push
scas
mov
mov
push
adc
cmp
and
rcll
push
jne
mov
call
decl
iret
clc
xchg
idiv
sbb
insl
sahf
add
call
incl
iret
clc
push
or
notl
imul
add
ret
lea
add
mov
mov
push
adc
mov
add
mov
fs
mov
imul
int
xchg
jg
adc
add
int3
imul
call
push
add
sub
adc
outsb
and
imul
dec
jmp
outsl
es
in
fnstsw
lds
enter
sub
test
jmp
imul
mov
test
push
sbb
inc
popa
mov
je,pt
push
push
mov
xchg
jmp
call
mov
stc
and
jb
ss
or
test
arpl
jb
ss
add
push
inc
popf
xchg
aas
jmp
pop
ds
jbe
mov
aas
xor
xor
cltd
loopne
and
add
popf
mov
call
inc
cld
cmpl
dec
testb
adc
mov
jbe
lcall
cmc
jmp
xchg
mov
jp
out
enter
add
dec
or
inc
sub
out
out
jmp
mov
call
cmc
ljmp
jb
repnz
inc
mov
test
shlb
mov
add
mov
dec
mov
out
inc
add
mov
into
push
jns
mov
mov
mov
mov
decb
subl
push
jae
push
je
mov
int
pop
std
mov
js
add
jns
stos
std
inc
dec
jge
sub
push
pushl
ret
sahf
sub
and
pop
inc
sbb
mov
aas
add
inc
sub
jl
push
jmp
jg
test
jmp
pop
not
call
leave
add
fwait
out
add
fwait
pop
sub
add
in
stos
stos
daa
fadds
add
sub
or
sub
adc
add
fadds
mov
add
jmp
xorb
jmp
push
mov
jno
aaa
sub
sub
cs
rorb
or
cmpsl
adc
orb
push
add
jno
add
scas
out
orb
cmp
int3
inc
sub
adc
push
adc
jae
cmp
mov
cli
shr
mov
ss
mov
pop
jecxz
int
adc
rol
movb
pcmpeqw
mov
arpl
pop
inc
pop
pop
cld
push
in
xor
push
into
xor
rcl
cmp
jb
mov
cmp
scas
cmp
jmp
fcoml
cmp
mov
rolb
xor
add
lret
inc
clc
in
push
add
push
call
push
xor
jecxz
lock
ret
popf
mov
pushl
mov
mov
subb
ljmp
pop
sete
or
push
rolb
push
push
lea
dec
adc
pop
pop
or
jb
pop
shl
sbb
dec
sbb
and
push
ret
or
je
mov
pop
data16
sbbl
dec
and
add
mov
or
push
and
add
in
mov
mov
jae
scas
inc
add
das
mov
dec
arpl
clc
aas
add
inc
or
lods
inc
pop
aas
jns
aam
and
add
pushl
loop
inc
jae
lds
gs
stos
in
add
xlat
inc
sahf
sub
adc
sub
mov
push
jae
inc
sbb
loop
je
pop
xchg
and
and
test
sbb
sbb
lock
ret
add
xchg
sub
adcl
cld
jmp
jne
stos
cmp
inc
inc
xlat
xchg
inc
pop
adc
pop
test
push
fmuls
cld
repz
mov
mov
add
dec
fimull
mov
dec
lods
inc
fistpll
lods
in
cmpb
ret
or
push
xchg
sub
enter
sarl
jmp
out
mov
call
test
psubsw
adc
out
pop
dec
jg
loop
out
xchg
test
pfpnacc
or
push
push
cmp
into
mov
fdivrs
push
inc
push
inc
aas
je
jp
ret
add
jb
punpckhdq
mulb
mov
ret
dec
add
add
adc
add
stos
push
sub
mov
push
push
and
pop
pop
loope
rcr
aaa
lds
lcall
add
lcall
adc
insl
subb
xor
add
cmc
test
pop
push
lods
push
jo
lods
fistl
imulb
pushl
ljmp
pop
ljmp
jg
adc
mov
into
add
add
rcrl
rolb
dec
push
jp
inc
call
pop
adc
add
add
stos
and
out
inc
jge
sub
dec
adc
pop
ret
add
testl
add
pop
add
xlat
pop
jecxz
adc
psrlq
icebp
loop
aas
add
add
add
aad
add
dec
xor
xchg
pop
add
push
lock
mov
mov
dec
incb
xchg
jmp
fsts
int
cmp
arpl
mov
inc
dec
adc
leave
cmp
add
mov
inc
aad
cmp
add
mov
mov
pop
mov
xchg
dec
mov
out
add
adc
mov
xchg
mov
push
sub
add
adc
inc
pop
sbb
cld
add
into
loopne
lret
js
cmp
mov
sub
xchg
mov
mov
add
push
push
or
xchg
stos
sbbb
aaa
push
xchg
cwtl
xor
xchg
mov
xor
ljmp
add
pop
sarl
scas
mov
inc
mov
push
iret
adc
xorl
rorl
xchg
lret
add
in
or
ss
adc
jmp
test
push
xor
and
ljmp
pop
shl
leave
mov
les
movsb
aas
les
test
pushf
inc
and
repz
cmpsl
sbb
adcl
add
das
dec
call
sub
add
cwtl
lcall
push
inc
or
adc
inc
pop
out
rorb
orl
adc
std
jmp
sub
pop
arpl
call
push
and
adc
mov
push
inc
popf
scas
lds
fmuls
add
ljmp
sub
push
mov
addr16
jne
xor
orb
inc
icebp
cmp
aas
add
inc
je
inc
int
inc
iret
out
mov
mov
mov
popa
in
inc
hlt
cld
add
add
inc
ljmp
fs
adc
jl
xchg
inc
push
xor
add
xor
outsb
inc
je
movsb
movsl
sti
push
lret
stos
or
mov
int
js
cmp
jo
mov
jecxz
xchg
ds
xchg
or
add
mov
pop
mov
cld
mov
xor
mov
jae
inc
jmp
push
hlt
jle
clc
jp
daa
pop
cld
mov
les
sub
cld
adc
call
movsl
icebp
adc
add
nop
cmpsb
dec
pop
stos
clc
jecxz
mov
mov
cmpsl
int3
jmp
jmp
test
sub
dec
repnz
add
inc
pop
adc
pushf
push
cmp
mov
call
jmp
call
xchg
aad
jne
lahf
dec
inc
xchg
mov
push
roll
mov
add
test
out
dec
sub
test
adc
push
and
xchg
xor
jmp
arpl
pushl
pop
and
add
aas
in
lods
or
cmp
sub
xorb
testb
dec
adc
aas
cmc
ds
mov
in
xlat
out
push
jmp
jmp
xchg
or
data16
inc
jno
jb
add
ds
push
sbb
bndldx
jmp
es
xor
sub
cli
push
add
or
or
add
push
ljmp
into
jmp
sub
add
xor
call
fs
movsb
aam
std
jbe
push
and
into
add
ds
int
add
int
add
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
ja
xchg
mov
shr
adc
pushf
enter
mov
out
daa
adc
cmp
inc
cmp
inc
push
sub
add
xorl
mov
sbb
aas
add
mov
add
clc
cmp
mov
aas
push
mov
add
add
mov
jbe
dec
mov
rcll
out
add
cltd
mov
js
ret
subl
das
or
call
arpl
sub
jg
adc
add
aam
jp
sub
add
push
les
mov
call
fistpl
shr
mov
daa
icebp
inc
ja
pop
shrl
fs
ret
jmp
test
adc
fldt
shr
mov
iret
repz
mov
imul
inc
inc
dec
inc
dec
cmp
movsb
jecxz
fsubrl
sbb
jmp
lret
jb
inc
pop
pop
xchg
pop
cs
add
into
addr16
pop
pusha
aas
lcall
je
push
sar
loopne
adc
not
ljmp
mov
jae
xchg
fmul
add
mov
pop
sub
fmul
ret
push
and
push
add
mov
jae
pop
push
sar
sar
out
inc
std
mov
jae
dec
insb
idiv
add
aad
in
cmp
adc
adc
insl
push
push
cli
or
adc
bound
push
cmp
call
adc
sub
je
aam
fdivrs
sar
push
aad
mov
loopne
pop
pop
push
ffreep
add
inc
mov
pop
in
push
pop
pop
push
incl
lret
cmp
cmc
fidivl
push
scas
add
pop
mov
add
jns
ds
cs
mov
jge
stc
mov
inc
add
inc
jae
mov
repz
not
lahf
out
aam
mov
lea
icebp
pusha
adc
mov
mov
inc
cmpsl
cmp
mov
xlat
sbb
adc
mov
je
inc
mov
sbb
stos
adc
cmp
dec
or
bnd
inc
add
add
daa
or
lock
addl
xor
jno
out
add
add
xchg
and
mov
out
sbb
pop
adcb
decl
cmp
sahf
add
inc
idiv
adc
jmp
mov
xchg
mov
aas
mov
out
mov
push
je
add
rorl
cmp
xchg
and
sbb
lahf
inc
pop
adc
mov
sar
dec
sub
jl
je
xchg
xchg
adc
sub
popf
imull
setno
push
mov
jmp
pop
push
sub
mov
jae
mov
adc
out
adc
cli
mov
mov
mov
lea
je
push
push
jae
insl
sub
cmp
jmp
adcb
jno
sub
cli
xor
push
in
out
shl
inc
lcall
std
add
sbb
into
jb
mov
inc
mov
jle
rcll
push
sbb
ljmp
adc
adc
es
decl
mov
push
adc
movl
adc
inc
dec
sbb
je
inc
out
scas
adc
mov
dec
rolb
lock
jne
or
movsl
pop
add
mov
add
adc
int
jge
add
mov
xor
xor
aad
pop
push
pop
mov
sbb
adc
jae
ja
add
cld
sub
xor
sbb
fucomip
jl
call
in
std
stc
xor
mov
fnstcw
cmp
sub
jle
mov
pxor
pop
idiv
fcomps
repz
pop
add
je
pop
les
mov
ds
add
pushf
sub
or
sbb
jmp
sbb
pop
inc
fbstp
cmp
push
stos
or
pushl
adc
jle
fs
cltd
lock
cltd
fwait
or
lock
cmp
ficoms
xchg
inc
call
mov
jne
adc
aam
jle
mov
add
pushl
call
sbb
out
ja
shlb
aas
adc
push
outsl
cwtl
mov
repz
jmp
jmp
imul
dec
and
out
and
inc
sti
push
orb
mov
sub
adc
sub
hlt
ss
pop
bound
or
popf
inc
or
call
aad
divb
jmp
addb
ljmp
xchg
xchg
out
mov
popa
add
punpckhdq
cmp
lea
out
push
add
pop
testb
jecxz
jne
in
jae
push
jne
popl
fstl
decb
add
lock
pushf
pop
test
mov
std
je
or
out
sbb
mov
xchg
fnstenv
std
adc
notb
lea
add
pop
pop
lea
inc
out
fstl
add
jp
mov
movsb
push
cmpl
push
or
push
xchg
jmp
incl
mov
push
adc
pop
outsb
into
mov
lods
pop
testl
cmc
mov
and
mov
mov
and
roll
movsb
mov
or
add
dec
adc
sbb
add
fdivrl
pop
sub
les
cmp
add
push
mov
add
fimuls
mov
incl
cmpsl
int3
pop
add
les
xchg
iret
or
xlat
add
sbb
bound
add
nop
or
adc
mov
adc
sub
jno
cmp
and
inc
jecxz
call
scas
xchg
shll
jle
sub
lea
add
les
adc
mov
pop
out
adc
call
add
push
mov
je
movb
test
shlb
and
out
lods
sbb
add
imul
scas
dec
lahf
pop
fwait
in
sar
cmp
jmp
pop
adc
sub
addl
pop
or
and
mov
mov
add
xor
pop
lea
xchg
mov
lret
xchg
into
and
jmp
pop
lds
jb
fstpl
jbe
jg
or
cld
add
cli
jb
adc
sbb
or
add
push
jb
dec
push
mov
lock
pop
das
adc
mov
testl
push
lea
sbb
jb
mov
fucomip
pushf
nop
sbb
xlat
add
pop
decl
mov
pushf
repz
rorb
jmp
insb
jmp
pushl
hlt
inc
leave
or
je
push
out
and
add
lods
push
push
mov
xchg
fnstenv
in
outsl
pop
sbb
push
mov
push
lea
scas
and
cmp
decl
mov
sub
out
add
mov
scas
or
adc
lea
mov
push
sub
sbb
pushf
cld
scas
incl
out
jae
inc
sub
inc
sub
test
mov
push
jns
xor
pop
cmp
push
jg
sub
stos
mov
add
mov
mov
add
pop
mov
mov
fistpl
mov
mov
ret
sub
push
xchg
fadds
pop
test
sub
push
pushf
push
add
ds
push
jae
sub
out
adcb
push
sub
add
adc
shl
in
add
pop
sub
mov
add
popa
daa
xor
jg,pt
cmpsl
lret
loope
mov
aaa
sarl
adc
jmp
pop
out
push
stc
call
rsm
add
sbb
test
ds
cmpsl
lods
daa
add
push
fucomip
aaa
xor
mov
mov
sbb
call
push
fnstcw
add
sub
fnop
sbb
ljmp
sub
rorl
add
sbb
jb
les
mov
adc
hlt
arpl
inc
add
popf
popf
inc
clc
ss
cli
push
or
subb
adc
dec
fildl
call
xor
add
nop
popf
ljmp
sbb
dec
sbb
lea
cmp
fidivs
fisubrl
loopne,pt
push
cwtl
dec
ficoml
pop
bnd
xchg
fucom
xchg
push
push
add
out
push
jb
lcall
add
dec
cli
jmp
xchg
mov
mov
sbb
add
rorb
mov
ret
ljmp
movsb
cmpsb
leave
pop
jge
dec
sbb
adc
add
jns
mov
lds
je
push
inc
ljmp
test
test
add
add
decl
test
sub
push
cmp
and
inc
mov
popf
adc
xchg
pop
sub
int
cmpsl
pop
sbb
push
push
xchg
mov
loopne
repz
add
nop
notb
sbb
pop
in
pop
add
mov
les
and
or
xchg
shll
cmp
add
or
push
arpl
add
adc
adc
jge
mov
lock
mov
das
mov
xchg
jl
ret
and
imul
repz
fwait
psubsw
xchg
call
sbb
inc
or
lds
sahf
pop
sub
jno
adc
sub
xchg
ret
cmc
sbbb
mov
out
roll
das
add
add
push
mov
push
outsb
clc
sbb
jmp
adcl
aaa
push
cltd
clc
call
dec
mov
jb
mov
jmp
loope
cwtl
stos
xchg
fs
out
ljmp
jb
sbb
mov
sbb
xlat
add
aam
dec
mov
push
or
sbb
xchg
xchg
rolb
xchg
nop
xchg
call
add
jne
movsl
call
popf
test
pop
mov
mov
aad
add
icebp
mov
push
add
pop
aam
pop
jbe
rolb
repnz
sbb
push
es
lea
sahf
add
pusha
les
add
mov
jae
stos
sbb
pop
cs
add
movl
jl
add
jg
sbb
pop
sub
add
xchg
and
mov
lds
xorl
mov
aad
sbb
sub
mov
insb
jle
call
xor
lea
js
testb
inc
gs
mov
dec
inc
idivb
test
or
insl
adc
mov
nop
mov
mov
jno
jecxz
popf
add
mov
add
fldt
sbb
or
and
push
add
adc
jle
add
cmpb
scas
add
repz
adc
call
dec
bswap
pop
dec
fwait
mov
das
mov
add
xchg
hlt
xor
jae
or
outsl
daa
sub
mov
rcrb
out
popf
adc
scas
jb
out
ror
call
clc
mov
mov
call
outsl
add
fldl
call
push
mov
adc
imull
fldl
lods
adc
pop
adc
push
pop
mov
call
int3
iret
out
jo
sbb
scas
iret
or
sbb
mov
xchg
jmp
xor
or
lea
in
arpl
push
jbe
push
lds
loope
add
add
inc
add
jnp
jmp
std
incl
xchg
inc
push
push
push
cli
cmp
shrl
call
arpl
inc
jge
sbb
int3
inc
setb
decl
inc
mov
outsl
lea
push
clc
xor
mov
xor
mov
add
jnp
adc
in
or
jmp
aad
std
jnp
fadd
jl
add
mov
in
inc
jnp
shll
ljmp
pop
cli
mov
mov
pop
add
jge
test
mov
cmc
iret
push
jg
jle
subl
push
js
add
xor
fdivr
cld
add
add
rorl
add
xchg
decl
mov
xchg
insb
inc
xchg
sub
lcall
mov
inc
add
pop
jg
adc
sub
mov
pop
sub
add
adc
add
xchg
pop
call
xor
addr16
xchg
sbb
push
inc
sahf
ds
outsb
sub
and
adc
mov
adc
psubusb
cmpsl
add
jmp
sub
shr
jmp
rolb
pop
adc
ljmp
mov
sbb
movsb
pop
and
add
or
jmp
pop
adc
sub
arpl
inc
enter
push
xor
call
aaa
test
push
test
cmp
fdivr
hlt
jecxz
adc
test
pop
adc
in
repnz
hlt
mov
sbb
push
add
movsb
xor
cmp
add
push
add
test
cld
call
sub
push
push
mov
xchg
xor
adc
in
xchg
adc
std
push
add
std
fstl
mov
adc
xor
lret
shr
popf
das
std
jmp
xor
ljmp
lret
mov
xchg
mov
add
es
sub
les
das
les
pop
les
add
mov
xchg
jae
and
inc
je
jne
pop
cli
into
je
add
add
sub
sub
sbb
lahf
push
inc
cld
test
push
jle
add
sbb
das
add
jg
jp
je
add
xor
and
lret
shl
subb
add
add
sti
sub
sub
mov
add
cld
adc
into
out
lahf
add
fistl
shl
add
rcrl
imul
mov
mov
push
push
cmp
jae
or
pusha
mov
pop
bound
adc
lahf
testl
pop
in
jnp
cmp
js
fwait
daa
adc
push
or
fdivl
jle
inc
add
and
loopne
sti
arpl
stos
push
ds
pop
xchg
out
mov
xchg
inc
add
adc
mov
cmp
push
fstl
add
out
inc
jp
pop
fwait
add
call
or
adc
notb
bound
xchg
sarb
jbe
test
jge
or
add
mov
or
sub
xchg
jnp
add
add
mov
cwtl
cmp
jnp
xchg
or
or
xchg
notb
xrelease
mov
js
add
push
addr16
adc
add
pushl
insl
lea
or
adc
test
mov
lret
cmp
ret
push
mov
jmp
fistl
mov
mov
push
xchg
aas
adc
fs
push
mov
add
lds
lock
push
push
push
inc
leave
mov
cmpsb
sub
xchg
setnp
sub
mov
xchg
ffree
add
fcompl
fisttps
pop
inc
cmc
add
out
mov
ljmp
mov
call
outsb
repz
and
mov
add
and
jmp
add
mov
in
push
xchg
add
enter
mov
push
vphsubdq
jle
sbb
adc
mov
call
mov
add
or
dec
inc
xor
add
ret
repz
ret
adc
in
jg
dec
mov
fwait
sbb
push
or
lods
add
in
das
pushl
xor
lods
pop
cld
in
and
arpl
addb
xchg
adc
add
mov
add
imul
mov
sub
add
mov
lea
adc
dec
add
call
inc
in
or
xchg
dec
add
mov
xchg
imul
push
or
push
and
xchg
sbb
or
inc
lods
or
jmp
pop
sbb
push
ss
xchg
sbb
das
adc
push
in
mov
adcl
mov
out
je
into
daa
jae
mov
pop
mov
cmp
ss
notb
mov
scas
push
cmp
test
mov
push
icebp
sti
adc
call
imulb
je
stos
shll
push
pop
cwtl
sbb
rclb
inc
and
jns
xor
jns
and
mov
or
add
icebp
adc
xchg
mov
orb
aad
addl
add
sub
xchg
add
in
push
mov
mov
push
jmp
add
cmpb
jl
and
add
sub
inc
decb
push
jb
sti
add
lcall
sbb
push
cs
xor
mov
jbe
xchg
add
add
scas
or
add
in
add
mov
mov
add
jmp
ret
add
pop
and
divl
sar
lret
pop
insb
inc
cmp
bound
push
adc
fiaddl
scas
adc
xor
dec
lds
out
mov
sbb
ficompl
pop
xchg
adc
jecxz
mov
sub
and
add
mov
add
adc
arpl
jle
push
cwtl
pop
adc
test
mov
xchg
adc
pop
mov
mov
fldl
add
add
add
negl
adc
test
stos
cld
adc
in
inc
mov
fdivr
mov
or
mov
jp
incb
cld
imul
jp
rclb
fs
xor
jae
std
dec
dec
push
mov
adc
add
add
mov
ficomps
sub
aam
in
pop
xchg
movl
rorl
and
ret
and
add
push
sub
or
jle
mull
mov
and
add
loopne
jmp
push
es
xor
shr
xor
lock
sbb
inc
push
sar
out
out
add
aam
cmp
xor
xor
les
add
add
sub
mov
pushf
add
and
add
mov
sbb
sbb
add
stc
mov
pop
stos
sbb
adc
add
stc
mov
mov
adc
sub
aas
add
sbb
mov
xor
inc
sbb
adc
cmc
aas
add
or
rcl
mov
add
stc
xchg
mov
sub
stos
jge
addl
leave
lea
xchg
mov
idivl
sub
movsb
cmp
add
mov
or
and
mov
sbb
inc
cli
ret
or
mov
xchg
sbb
pop
fcmovb
rep
fistpll
mov
sbb
push
cli
ret
rorl
jg
add
sbb
sub
cmp
jle
pop
enter
daa
or
dec
pusha
pusha
addr16
sbb
out
in
mov
nop
sbb
aad
sbb
je
call
mov
divl
ret
inc
cwtl
cmp
cwtl
das
add
mov
repnz
sub
pop
xor
sbb
mov
add
push
sarb
xchg
arpl
push
popl
aas
std
push
or
inc
stos
fwait
in
cmp
push
sbb
or
sbb
xchg
shlb
mov
data16
sbb
arpl
cmp
cld
or
std
jbe
mov
bound
add
sbb
and
push
add
push
addl
mov
sbb
data16
push
mov
test
jno
dec
sbb
push
std
or
shrl
add
xchg
lods
lea
sub
xor
push
lret
adc
add
mov
mov
xor
popf
sar
jb
xor
mov
cmpb
outsb
adc
push
push
lock
repnz
or
test
std
inc
insl
scas
incl
sbb
xor
add
add
push
into
fildl
add
sbb
repnz
add
sbb
nop
cs
add
add
mov
ret
mov
das
cld
ljmp
jecxz
xchg
cmp
jmp
mov
mov
jbe
fisttpl
int3
sbb
stos
shlb
testb
mov
add
xchg
ja
sti
jnp
pushl
lret
je
mov
iret
bound
add
out
popl
add
dec
pop
cmp
icebp
xchg
add
and
mov
add
sahf
or
add
cmpsl
sbb
adc
push
adc
jecxz
and
xchg
push
fisubs
sbb
shll
stos
and
add
xor
mov
cmp
push
in
cs
mov
in
mov
or
bound
test
mov
scas
add
sbb
add
mov
add
jle
push
ja
adc
repz
cli
ss
xchg
sub
rcll
scas
xchg
stos
pop
in
outsl
jbe
adc
and
loopne
jmp
adc
or
fwait
and
mov
adc
test
push
adc
add
jle
mov
bound
push
pop
data16
or
hlt
repz
pop
jge
jne
xchg
push
add
cmpsb
aad
mov
std
jmp
push
je
mov
add
sarl
add
stc
sub
aas
sar
subb
push
mov
xchg
jl
or
test
fldl
incl
adc
test
adc
push
inc
sbb
push
adc
push
push
rclb
inc
lods
mov
push
jno
push
sahf
stc
add
stos
adc
ret
clc
xorl
xchg
xor
mov
arpl
dec
cmp
or
jg
sub
cltd
and
xor
out
pop
imull
add
cmp
sahf
mov
xchg
add
xchg
out
fidivl
icebp
cli
aas
add
dec
or
mov
add
xorb
icebp
out
aas
add
push
add
imul
add
mov
stos
imul
jle
jns
les
dec
xchg
mov
cmp
test
add
and
jle
addr16
arpl
or
popa
test
mov
or
and
insb
andl
add
jecxz
xchg
pop
xchg
xchg
jae
mov
frstor
test
nop
test
cmpsb
sub
add
int3
pusha
add
adc
iret
call
or
mov
push
test
mov
test
sub
nop
adc
in
sub
mov
pop
stos
xchg
fbld
sbb
add
mov
inc
rclb
push
sub
dec
xchg
cmp
mov
xchg
dec
add
xlat
fs
adc
lret
test
fs
sub
jns
and
js
adc
or
andb
mov
stos
inc
mov
xchg
pop
xor
xchg
or
add
mov
sub
inc
js
push
mov
jns
ljmp
mov
sub
stos
leave
xor
adc
clc
or
push
jmp
adc
es
sub
cmp
in
pop
sbb
push
add
sahf
or
aam
call
mov
decl
jmp
push
jge
or
add
scas
adc
add
incl
cmp
stc
mov
mov
imul
add
dec
clc
jmp
testl
popf
fwait
add
imulb
int3
ret
jge
clc
and
clc
adc
inc
cltd
lods
enter
mov
adc
add
cmp
lahf
mov
pop
insb
aas
mov
adc
orl
in
imul
inc
insl
daa
or
and
add
cmpsl
jge
out
fs
imul
enter
shlb
cltd
add
lcall
arpl
cltd
or
movsb
jae
adc
add
and
add
adc
inc
js
pop
cltd
imul
pop
or
divl
in
jl
testb
std
je
mov
ja
call
test
or
adc
xchg
aaa
add
divb
adc
xor
mov
std
jbe
add
add
jmp
jb
movq
xchg
popa
push
mov
cmp
call
add
aaa
add
pop
adc
mov
or
jb
jl
jne
or
jle
mov
adc
sub
add
sub
idiv
je
xchg
cmp
popa
and
jne
jnp
or
aad
add
fisttpll
pop
mov
std
lds
stc
std
out
push
add
loope
jno
add
lds
std
pop
mov
rclb
ds
xchg
shrb
mov
std
mov
add
push
lea
mov
add
mov
add
ja
sti
movsl
stos
pop
int
cld
pushl
andb
loopne
add
add
js
or
mov
adc
push
add
aam
add
add
dec
das
or
add
jmp
icebp
idivb
add
mov
sub
jp
clc
push
ret
or
and
pop
mov
mov
mov
jmp
inc
sti
add
lods
enter
jle
ret
mov
mov
pop
xchg
jmp
mov
adc
into
arpl
cmpsl
add
sub
add
xor
add
xchg
jle
lret
out
add
out
xor
adc
add
adc
jns
add
mov
dec
pop
adc
add
adc
jns
xlat
call
sbb
sub
adc
jbe
fstl
pop
push
adc
or
pop
orb
mov
add
nop
daa
xchg
idivb
adc
into
add
pop
jae
sbb
std
push
lcall
clc
ljmp
add
mov
adc
xchg
jne
mov
arpl
xchg
repz
cld
mov
inc
jmp
sbb
jno
jmp
mov
movsl
pushf
push
jb
roll
jmp
push
arpl
jmp
add
xor
push
push
mov
or
test
decb
flds
add
jno
or
push
push
lea
add
fnsave
call
push
sbb
cld
pop
fstl
xchg
popf
push
pop
pop
je
add
xchg
or
test
ret
sbb
popf
push
inc
dec
enter
add
loopne
je
in
mov
sti
loopne
je
cmpsb
xor
out
push
sub
dec
pop
xchg
clc
js
icebp
cmp
mov
add
add
clc
mov
push
test
or
mov
iret
out
sbb
mov
mov
add
js
lock
testl
icebp
jbe
mov
add
push
movb
js
jae
jle
add
jecxz
push
sub
jl
in
jne
call
cmp
cmpl
add
or
cmp
xchg
cmp
roll
out
mov
jecxz
mov
lock
fisubrl
add
sub
add
mov
pop
popf
mov
add
mov
cmp
sahf
test
lds
out
cmp
bound
ret
inc
xlat
aam
xchg
cmpsl
negl
aam
nop
out
bound
xchg
inc
rcl
mov
rcrb
aad
add
jp
icebp
aaa
in
push
or
stos
scas
mov
flds
jo
sbb
data16
cmp
cmpsb
aaa
mov
inc
cmc
ret
jmp
add
sub
in
out
scas
and
test
xlat
inc
lods
out
aas
jmp
rcll
push
rcr
xor
pop
lcall
add
pop
lock
jne
pop
fwait
pop
adc
scas
mov
or
std
adc
add
call
add
push
lods
add
std
gs
push
jb
daa
mov
xor
je
clc
mov
cwtl
out
les
mov
mov
pop
and
into
push
cmp
xchg
out
data16
sbb
or
push
lods
add
pop
addr16
ljmp
lahf
adc
idiv
sahf
stc
mov
fildl
ret
pop
inc
adc
lods
add
lcall
je
mov
pop
add
cmc
jae
insl
jo
add
js
lods
push
add
lret
mov
je
jns
sti
sub
ljmp
popf
out
cmpsl
add
inc
mov
add
outsb
lret
cltd
testl
shl
jb
pop
add
mov
addb
add
mov
or
add
out
mov
add
lea
cld
mov
adc
or
or
cli
pop
cmp
clc
jle
xlat
add
adc
xchg
out
xlat
cwtl
mov
xchg
lret
or
int3
pop
add
lcall
or
insb
xor
push
add
add
xor
inc
out
xchg
icebp
xchg
daa
popl
sub
mov
cltd
insb
neg
sub
add
outsb
testl
add
nop
sub
andb
test
pop
xchg
dec
popf
pop
and
adc
pop
add
in
jnp
pop
add
adc
rorl
fnstenv
out
mov
mov
pop
inc
mov
adc
xchg
pop
jmp
cmp
inc
adc
lods
out
rcll
addr16
sbb
mov
sub
push
lahf
mov
add
ljmp
cmp
pop
movsb
jmp
or
ret
adc
push
xlat
repz
pop
jecxz
or
call
cmp
pushl
add
inc
sti
jne
push
je
mov
inc
adc
jne
cld
ret
loopne
add
rcrb
gs
dec
cld
inc
and
call
pop
adc
push
js
scas
push
call
mov
xchg
popa
cld
fstpl
jg
sub
mov
sbb
jbe
adc
mov
faddl
jg
adc
dec
or
push
or
inc
loopne
mov
add
xor
inc
jae
in
aaa
loopne
pop
js
je
adc
and
popa
add
pop
out
add
xchg
push
and
xchg
cwtl
push
mov
arpl
add
imul
rolb
mov
dec
add
or
roll
gs
idivb
in
and
cli
imul
adc
nop
inc
adc
faddl
pushf
sub
addl
inc
sub
or
out
add
lcall
adc
add
popa
sub
jbe
popf
in
cmp
pusha
rorl
adc
jo
add
ja
pushf
mov
or
repz
movsb
call
test
jecxz
lret
pop
in
fcmovnu
ret
inc
aad
data16
movsb
call
rcrl
insl
or
loope
inc
mov
xchg
clc
push
pop
popf
add
xor
pop
adc
aam
add
jp
sbb
inc
out
add
repnz
add
add
jmp
push
out
pop
notb
imul
adc
repz
mov
inc
add
add
in
push
add
std
add
or
out
push
in
jmp
test
jno
add
imul
addl
mov
mov
lcall
mov
testb
jae
inc
call
mov
dec
xchg
fdiv
js
pop
adc
push
add
add
lldt
and
push
mov
adc
add
imul
add
sti
jmp
je
and
cmc
scas
adc
or
clc
inc
add
push
std
sbb
dec
cld
push
jo
mov
stc
and
add
sti
std
add
cld
jae
xchg
js
cmp
jnp
movsl
adc
addl
xchg
ja
pop
test
mov
adc
orl
sti
std
or
ja
xchg
call
or
call
push
or
add
add
repz
cmpsl
jmp
andb
out
inc
sbb
cld
lcall
or
mov
push
out
sub
add
push
add
push
add
or
dec
fmull
push
das
js
and
push
clc
in
dec
push
adc
mov
pop
pop
pop
call
push
inc
dec
adc
lret
jbe
ret
xchg
inc
shrl
or
roll
testl
cmp
inc
add
movsl
or
aas
push
cs
adc
cld
roll
inc
jmp
jle
adc
sar
jg
out
cltd
sbb
and
mov
add
clc
ficoms
imul
adc
paddw
add
aas
jmp
xchg
dec
or
or
dec
add
adc
sbb
testl
mull
out
push
cmc
push
add
push
bound
jp
pop
dec
hlt
dec
add
sti
push
jmp
fs
mov
sbb
daa
fstl
jno
test
and
lods
mov
popf
xchg
inc
or
fwait
pop
add
call
and
sub
testb
je
out
pop
mov
jne
fstl
sub
push
add
lods
cmp
mov
xchg
sti
jne
repnz
sbb
add
xchg
mov
mov
aaa
add
add
cli
std
add
cli
jae
xor
js
add
jmp
cmp
add
rclb
cmpl
add
add
add
les
ret
add
repnz
sarb
dec
sbb
ss
addps
inc
push
pop
xor
je
outsb
in
adc
in
xor
inc
pop
push
shll
dec
shl
dec
je
mov
pop
shrl
add
mov
mov
ret
push
clc
adc
les
fidivrl
lret
stc
loope
push
pop
adc
outsl
cld
mov
inc
adc
rolb
movsb
divl
pushf
or
push
clc
pop
in
inc
add
pop
sbb
or
mov
test
clc
mov
andl
push
loopne
daa
add
fsub
xchg
fists
stc
xlat
or
hlt
dec
repnz
out
pop
std
cmpsb
inc
inc
jmp
xor
ljmp
fs
sbb
add
or
adc
inc
push
ret
inc
mov
push
inc
mov
js
call
gs
addr16
sbb
call
insl
addr16
je
addl
pop
cmp
out
fadds
test
and
push
mov
imul
or
cmp
dec
lcall
dec
sbb
sbb
xor
std
add
call
inc
add
and
or
out
mov
rclb
loopne
sti
jne
mov
lea
call
test
xchg
jns
incl
mov
adc
outsl
rcrl
data16
or
roll
movups
mov
xchg
jecxz
fsubs
out
out
jmp
shlb
xor
ljmp
pop
mov
add
lock
xchg
add
cmp
inc
les
clc
cld
push
std
lcall
add
test
or
js
divb
divb
adc
lods
add
add
mov
stc
call
push
fimuls
xor
lea
or
dec
mov
in
add
push
jbe
jg
test
out
in
push
call
jle
or
loopne
cmc
cmp
pop
add
fiadds
xchg
cwtl
fisubrs
jge
int
push
pop
pop
cmc
add
add
stc
add
dec
xor
out
add
shll
popf
hlt
leave
fstl
jp
adc
aas
cld
mov
jmp
fcomip
hlt
and
out
hlt
xor
add
movb
jo
jo
pop
jbe
bound
fsubl
inc
or
jo
gs
sahf
cmp
mov
std
xchg
sar
jle
cwtl
sar
ficoms
sbb
shlb
jmp
lcall
aaa
popa
add
pop
pop
lds
filds
xor
pop
jbe
movsb
mov
lods
fcmovnb
cmp
sub
out
jb
stos
dec
push
jmp
in
xchg
fiadds
icebp
jle
sbb
dec
inc
std
add
loopne
jno
loope
dec
cmp
mov
xor
add
sbb
cmp
adc
cmp
xchg
xchg
imul
cmp
imul
mov
and
jmp
and
push
push
xor
mov
sti
incl
imul
out
ja
pop
push
ds
adc
jp
adc
lret
push
add
mov
push
add
pushf
pop
into
jge
sti
adc
add
ret
pop
lret
ret
pop
add
sub
and
or
cld
pop
std
sbb
pop
inc
add
stc
fdivs
sbbl
gs
jmp
push
mov
mov
sarb
fcomps
inc
fidivrs
jo
repnz
inc
add
fisubrs
add
inc
push
xchg
scas
aad
cmpsl
stc
imul
in
mov
sbb
testl
scas
fnsave
adc
inc
pop
adc
or
xor
icebp
jmp
cmp
mov
xlat
xor
add
dec
add
sbb
adc
ret
sub
out
cwtl
icebp
mov
xchg
loopne
mov
iret
or
xlat
jb
or
aas
or
and
or
add
pop
xlat
lock
or
jae
out
notl
mov
add
fwait
daa
add
xchg
daa
clc
fdivrs
mov
adc
sub
xchg
in
adc
jb
mov
bound
dec
bound
adc
roll
sbb
pop
subl
fsubr
mov
add
repnz
jbe
or
lods
add
push
mov
shll
in
push
aam
pop
adc
aam
mov
push
aaa
pop
ret
or
add
shr
sbb
fmull
adc
push
add
out
push
call
push
lcall
je
or
je
or
jno
jmp
add
xchg
xchg
clc
ljmp
rol
adc
mov
pop
lock
jmp
add
adc
shlb
adc
loopne
push
mov
pop
add
add
mov
jne
loope
aam
pop
add
mov
pop
adc
ss
sti
jne
out
adc
les
add
femms
ja
fwait
rcrb
sub
adc
jns
xchg
std
sub
add
lds
adc
adc
in
out
jbe
jno
std
shl
out
aad
lods
jne
xchg
add
add
sti
scas
add
mov
add
in
incb
rorb
addb
add
mov
cmovo
leave
subl
jp
lods
adc
ret
cmp
out
ja
ljmp
test
call
out
gs
add
push
add
push
cmpsb
inc
add
push
add
xlat
xor
in
rorb
scas
aad
rcrl
add
xlat
out
add
adc
and
rcll
inc
cmp
jns
xchg
push
add
inc
fists
inc
sar
dec
cmp
out
insb
aad
mov
pop
adc
jmp
call
fmuls
faddl
dec
aas
jmp
inc
int
in
inc
mov
imul
push
push
inc
or
jae
ficoms
mov
add
fcom
inc
push
stos
add
xor
mov
push
push
xchg
and
pop
sbb
hlt
fildl
andb
inc
jmp
ss
dec
mov
je
mov
sbb
out
add
lods
ds
adc
daa
dec
and
add
pop
xor
push
add
pop
clc
push
lcall
push
divb
jg
push
arpl
addl
add
xchg
sbb
push
pop
pop
lock
mov
push
cmpsb
mov
das
daa
sbb
mov
mov
pop
push
clc
ret
adc
mov
inc
add
fldcw
les
lock
add
sti
ds
addr16
add
cmp
psubb
jl
mov
push
push
adc
push
std
adc
adc
inc
inc
clc
xchg
ljmp
inc
xor
cld
add
sub
sub
mov
test
push
xlat
jno
add
cld
xchg
xchg
ljmp
std
add
sbb
add
dec
adc
pop
add
lret
out
inc
sbb
push
negl
push
mov
sbb
push
push
rcrl
adc
push
jo
mov
pusha
dec
or
je
add
pop
adc
adc
cld
jb
dec
dec
aad
add
pop
sbb
add
scas
jmp
jge
cmpsb
aas
xor
filds
add
and
add
cld
out
jg
jg
fdivrs
add
pop
fwait
jnp
test
je
jnp
hlt
mov
std
std
hlt
mov
inc
jmp
sub
iret
subb
pop
push
cmp
push
add
xlat
and
pop
vprotw
icebp
mov
repz
adc
adc
adc
cli
adc
or
jmp
xor
std
insl
inc
dec
sbb
cmp
fcoml
movb
sti
adc
add
mov
or
roll
int
add
inc
addr16
ljmp
inc
mov
add
cmp
inc
or
mov
or
jmp
test
enter
push
imul
dec
push
fcoml
cmc
sbb
push
sbb
lret
ja
inc
sub
and
push
sbb
add
shl
sbb
mov
add
mov
add
mov
add
jmp
jmp
cmp
inc
add
mov
mov
push
sar
cld
cmp
jl
test
int
les
push
std
sbb
jl
mov
cmc
cld
push
cmp
je
sqrtps
icebp
out
lock
inc
add
xchg
xor
scas
add
jnp
call
xor
andl
sbb
add
push
add
popf
and
xchg
cld
negb
es
add
aam
lret
repz
out
jge
out
xor
gs
inc
int3
adc
push
lea
jl
lock
adc
movsb
filds
adc
add
mov
mov
add
imulb
xchg
test
add
out
jmp
in
mov
aas
pop
adc
bswap
and
add
adc
add
add
into
std
jmp
sub
je
test
fstl
popf
cmc
jo
mov
or
mov
clc
insb
and
std
xlat
rcl
adc
sti
push
add
orl
adc
aaa
repz
cmc
sub
pop
sbb
or
jmp
jg
std
imul
ret
mov
imul
out
cmp
stos
rcl
je
hlt
dec
std
mov
in
push
clc
sti
jne
pop
sti
push
sbb
pop
jecxz
add
lods
add
sbb
push
int3
sbb
jmp
adc
xor
sti
test
adc
mov
adc
jne
dec
into
lcall
xchg
dec
sarb
sarb
adc
add
clc
testb
jae
pop
les
or
pop
adc
jmp
add
cmp
in
adc
mov
lret
cmp
add
mov
push
adc
sub
divl
jge
cmp
mov
mov
rcrl
inc
rolb
sub
data16
int3
subl
add
xchg
or
lea
jmp
add
adc
imul
ss
lods
aas
loopne
xlat
mov
daa
add
push
mov
inc
and
cmp
scas
or
add
cli
cltd
add
ret
cld
adc
or
shrb
adc
leave
push
jecxz
push
lahf
push
test
pop
call
cmp
push
sbb
imul
mov
pop
mov
add
out
aas
sbb
mov
add
adc
sbb
mov
pop
add
jl
out
gs
pop
xchg
std
push
cmc
pushf
aad
ss
adc
enter
pusha
call
clc
sbb
mov
test
add
pop
mov
mov
ret
out
arpl
call
fstpt
add
xor
sbb
pusha
std
mov
mov
test
adc
cmpsl
mov
rcrb
into
push
cwtl
add
scas
inc
imul
das
sbb
mov
xchg
xlat
je
cmp
mov
cmp
push
cmp
imul
xor
dec
out
jp
sti
jne
add
xlat
scas
rorb
add
jno
test
push
push
jp
jg
stc
xchg
jmp
add
adc
mov
xor
xchg
inc
adc
addr16
popf
adc
inc
fnstsw
xchg
cmp
adc
adc
inc
adc
xor
jns
dec
push
aam
mov
inc
movsb
sub
jbe
ds
push
mov
gs
add
ss
icebp
push
idivb
add
enter
aas
pop
inc
int
push
xor
push
pop
xor
out
jmp
jns
mov
push
xlat
inc
add
xor
mov
xchg
inc
cmp
add
imul
jecxz
push
lahf
ficoms
and
inc
add
adc
adc
rcll
lds
pop
xchg
or
out
out
loop
out
xor
cmpsl
fadd
adc
pop
pop
pop
sahf
mov
dec
and
icebp
add
and
shrb
add
fsubrp
scas
scas
fimuls
icebp
and
lds
out
pop
push
xchg
inc
add
push
fists
int3
flds
addr16
vminpd
lea
dec
dec
inc
cld
mov
insb
ret
push
movzwl
add
and
inc
add
cmc
mov
adc
cs
xor
test
jle
dec
mov
leave
sbb
xor
adc
shll
cmc
shr
mov
sbb
pushf
inc
loope
aam
cmc
iret
inc
adc
add
out
push
cld
ljmp
std
sbb
enter
sub
xchg
shl
lea
hlt
adc
jae
mov
and
jmp
push
jmp
xor
and
cmp
std
pop
int3
push
xor
nop
loop
popf
adc
roll
icebp
inc
pop
push
aaa
dec
popa
arpl
mov
std
pop
ret
or
ret
push
mov
xchg
xchg
dec
push
std
jae
add
pop
jno
push
cld
adc
adc
jmp
rolb
or
push
add
clc
in
sar
add
cld
push
cli
cmp
push
bound
jg
add
push
add
je
lret
add
shr
xor
cmc
mov
add
add
inc
in
sbbl
or
std
jae
or
push
or
std
pop
les
ret
fstp
std
mov
add
mov
xchg
sarb
and
mov
lret
ret
xor
push
lods
add
jbe
inc
push
sbb
mov
xor
std
in
adc
sub
ret
push
rclb
popa
rclb
inc
enter
xchg
fildl
mov
ret
pushf
iret
push
adc
imul
dec
add
ret
jl
pop
xor
popa
ret
adc
cmp
cmp
pusha
xchg
ret
fcmovne
scas
adc
add
cmp
rcll
mov
orl
sub
movb
cwtl
cmpsl
or
lods
and
add
bound
mov
repz
add
xor
call
add
fistpll
jmp
mov
sbb
lcall
jns
pop
adc
movsl
repz
rclb
add
ret
push
aam
jge
lods
loop
pop
adc
or
sub
inc
pop
je
pop
dec
call
xor
imulb
aam
pop
shll
call
pop
into
push
inc
push
call
sarb
clc
unpckhps
mov
lds
fsubrl
add
fs
and
test
call
and
lods
pop
out
adc
push
mov
ret
xchg
cmp
push
add
push
and
scas
fcoml
push
sub
push
push
or
xchg
inc
in
pop
test
sti
adc
add
aam
or
push
sti
adc
adc
adc
push
add
push
mov
in
xor
xor
lock
add
sub
sti
xchg
dec
or
jmp
pop
mov
sbb
fisttps
std
push
ret
jmp
add
xor
push
add
ljmp
test
test
sub
push
fidivs
dec
and
sub
sub
xchg
into
add
pop
pop
mov
inc
and
cli
jmp
cmp
aad
inc
sbb
xchg
out
pop
push
negb
adc
mov
and
lods
xor
pop
ret
repz
push
adc
add
pop
lret
and
mov
or
push
adc
add
pop
mov
adc
mov
movups
dec
loop
mov
mov
imul
subl
sub
add
dec
cmp
push
or
push
xlat
sahf
adc
mov
rcll
aam
insb
push
adc
jmp
fmuls
sbb
cld
sub
inc
adc
clc
pcmpgtd
sbb
xchg
rcr
test
jmp
mov
mov
and
xor
add
pop
xchg
sarb
call
jb
scas
mov
ret
push
push
sbb
adc
ljmp
inc
cmpl
push
pop
xor
pop
mov
insb
push
inc
and
daa
push
add
sahf
iret
sti
call
test
push
adc
pop
das
cmp
sub
adc
cmp
sti
inc
popa
mov
outsb
roll
sub
lock
xchg
and
out
insl
call
testl
es
cld
jne
mov
push
call
push
push
fcom
or
push
dec
or
lds
push
push
stos
sub
aam
jle
mov
sbb
std
cmp
mov
shll
cli
rclb
cmp
jae
xor
mov
xor
xchg
dec
add
xor
subl
mov
pop
sub
cmp
icebp
out
dec
aam
jg
icebp
mov
aam
add
add
xchg
push
mov
addl
icebp
mov
add
or
cmp
inc
fiaddl
push
push
sub
stos
add
mov
cmp
inc
add
repz
les
mov
jle
add
addl
ss
inc
rorb
or
xor
jg
xor
fisttpl
pop
enter
sub
filds
lods
dec
add
in
mov
cmp
xchg
dec
rclb
test
mov
mov
out
add
insb
insb
bound
add
das
mov
add
jb
mov
dec
loope
adc
xlat
or
in
mov
cmp
add
jnp
rorl
call
cs
stos
sbb
in
push
pop
gs
push
jnp
call
cmpl
les
aad
shll
ss
stos
and
test
push
addl
ja
push
mov
mov
jle
mov
bound
push
add
call
xor
shlb
sbb
lcall
pop
in
push
inc
clc
jb
pop
ds
sbb
dec
lea
cld
lcall
sti
cli
push
rcll
lea
cld
lcall
push
call
ss
stc
sti
push
cmp
push
dec
add
test
pop
add
ror
mov
in
adc
mov
push
adc
les
gs
add
push
mov
cs
adc
inc
jle
sub
fsubl
loopne
add
lods
ljmp
roll
orl
mov
aaa
or
pop
lret
xor
mov
stc
mov
xor
cli
xor
and
imul
add
xor
add
xchg
in
cld
adc
add
adc
fcos
fists
out
shrl
mov
int
sub
arpl
cmpsl
arpl
mov
or
adc
mov
adc
add
sbb
adc
mov
call
int3
stc
fs
mov
pop
insb
lods
add
mov
jp
mov
dec
sub
xor
les
fs
fcompl
push
push
jnp
mov
fcoml
add
pop
adc
mov
test
mov
adc
call
xorb
ljmp
subl
lods
adc
mov
std
sbb
stos
iret
xor
mov
inc
lods
jle
push
je
xchg
sti
sahf
ret
cltd
push
add
roll
insb
aas
add
ret
add
mov
lahf
aam
mov
mov
mov
add
hlt
cld
incl
cmp
cmp
pop
add
negb
cmp
mov
enter
or
mov
push
je
mov
popf
adc
popf
xchg
inc
test
std
cli
adc
cmpsb
mov
xlat
xor
les
fucomip
les
adc
push
xchg
xchg
fstl
gs
testb
je
testl
insl
iret
adc
lea
push
push
add
roll
jge
pop
repz
sub
stos
outsb
adc
xchg
push
xor
push
mov
push
push
js
cmp
decl
inc
clc
aam
roll
inc
mov
lock
lods
roll
mull
add
js
mov
inc
cld
in
fcmovne
std
sti
xchg
inc
hlt
cld
push
punpckhdq
push
fdivrl
enter
jle
int3
sbb
pop
shl
addr16
sbb
adc
add
pop
iret
fiaddl
adc
testl
ss
stos
cli
test
dec
and
arpl
xor
mov
pop
popa
xchg
int3
ret
pop
fs
stc
mov
inc
sub
out
jle
pop
xor
mov
scas
das
pop
faddl
mov
adc
fdivrs
jae
add
cmp
push
mov
enter
cld
idivl
pop
sbb
add
std
outsb
iret
mov
push
rolb
bound
pushf
aad
xlat
mov
pop
or
fs
daa
or
pop
call
add
in
scas
sub
mov
jb
xor
sub
add
dec
mov
mov
cmc
cmp
std
into
dec
dec
push
push
mov
inc
int
mov
push
pop
pop
sub
sbb
jno,pt
inc
mov
sti
decl
push
push
das
inc
fcoml
fisubrs
fnsetpm(287
cld
jmp
jo
or
dec
scas
xorl
cwtl
mov
pop
rcrl
call
push
adc
inc
or
insl
das
pop
hlt
inc
sti
out
je
push
push
shlb
stc
idiv
ljmp
lock
imul
pop
push
add
mov
xlat
lds
add
or
call
loopne
cmp
add
scas
aaa
cmp
add
es
add
leave
aas
add
fsubrl
in
lret
xchg
dec
add
cli
fiaddl
pushf
jae
add
cmp
inc
jg
jp
insb
add
add
lret
jbe
cmp
xor
mov
dec
or
xorb
adc
add
and
mov
jb
sbb
mov
jp
clc
imul
std
jns
mov
add
outsb
and
mov
enter
call
es
sub
mov
or
imul
mov
xor
inc
faddl
daa
push
pushf
mov
aad
mov
divl
push
enter
xlat
sbb
jl
pushf
sub
add
cmpsl
iret
stos
mov
xchg
mov
daa
add
leave
mov
lahf
ret
and
scas
mov
std
adc
mov
arpl
pop
das
pop
xlat
ret
inc
mov
pop
adc
and
xchg
arpl
xchg
rorb
xchg
dec
dec
lret
mov
jo
mov
add
test
adc
je
pop
sti
push
dec
inc
push
fcoml
add
sti
ret
test
or
jmp
scas
adc
push
ficoms
xchg
rcr
arpl
lcall
sub
lea
mov
push
mov
movsl
adcb
imul
ss
pop
push
sub
push
pop
cmpsb
push
call
inc
inc
or
popf
sub
testl
sbb
mov
lcall
popa
or
outsb
lea
pop
call
out
or
push
sub
lahf
sub
push
popf
aad
xchg
sbb
pop
or
add
ret
std
jge
iret
jmp
add
push
mov
sub
sbb
clc
mov
sub
push
xor
jno
add
add
mov
fsubrl
inc
xor
add
fmul
add
lret
jbe
xor
ret
std
sub
sub
add
xor
xorl
js
mov
mov
enter
add
shlb
dec
add
and
adc
xor
lods
into
xor
out
xor
jecxz,pn
add
stos
out
lock
hlt
lods
mov
lods
xchg
arpl
add
adc
mov
test
fmuls
adc
js
movsb
insb
ds
push
cld
inc
bound
imul
dec
push
scas
sub
sahf
pushf
fistpll
fs
inc
mov
inc
inc
jb
adc
insl
add
add
imul
je
mov
shll
push
or
scas
lcall
pop
test
mov
aam
jmp
aad
ret
std
adc
popf
dec
mov
fdivr
orl
inc
add
es
mov
popf
or
frstor
push
loope
mov
subl
adc
loope
jb
sub
adc
jb
sub
jno
adc
fiaddl
inc
add
dec
push
lock
lcall
fiadds
in
call
callw
cld
inc
testl
mov
xlat
sti
lcall
xchg
mov
data16
bound
sti
xor
stos
les
and
add
popf
xchg
clc
incl
lcall
imul
push
in
call
call
rcpps
sub
mov
or
adc
lods
inc
add
outsl
mov
mov
std
xlat
leave
stos
add
int3
cmp
jmp
inc
lock
or
add
popa
cmp
sbb
mov
mov
inc
aam
test
mov
inc
pushf
and
faddl
pop
push
mov
or
inc
pop
mov
add
inc
loopne
mov
lods
cmpsl
push
adc
add
add
mov
les
cmpsb
out
rol
inc
lret
inc
adc
push
add
push
add
push
cs
xchg
xor
dec
mov
cli
fdivl
popw
mov
add
stos
and
stos
jle
mov
add
jmp
push
xchg
jle
inc
adc
inc
push
in
sub
cmpb
xchg
jp
les
pop
fwait
lds
add
iret
adc
or
call
mov
mov
out
xchg
shr
call
sbb
sbb
inc
mov
inc
push
pusha
lods
std
sbb
shl
sub
call
jg
mov
inc
mov
inc
push
push
test
int3
sbb
cmp
subl
aam
fiadds
mov
ljmp
xchg
fwait
or
insl
adc
add
iret
or
cmpsb
pop
call
enter
decl
add
sub
lcall
shr
push
ret
test
adc
mov
mov
pop
jge
adc
add
xchg
pop
in
inc
in
add
insb
xor
cwtl
lods
adc
mov
jbe
jle
adc
add
pop
lods
xor
mov
mov
inc
mov
pop
test
jl
addl
shll
clc
sub
mov
jmp
scas
jl
std
icebp
xchg
cmovo
les
mov
add
pop
sub
mov
push
xchg
mov
lods
add
mov
stos
mov
mov
adc
les
add
mov
lods
in
adc
add
mov
adc
adc
ds
dec
cltd
lods
mov
or
es
in
movsb
movsb
mov
dec
xor
and
ret
xchg
mov
add
movsl
bound
cltd
fcoms
movsb
cmp
inc
push
or
and
lea
pop
mov
call
sbb
mov
in
out
push
leave
inc
fisttps
push
movsl
sbb
dec
add
pop
and
data16
adc
pop
mov
rclb
stos
and
sub
sarl
push
add
pop
aas
jmp
pop
fwait
clc
pusha
add
call
jp
rclb
pop
cmp
aad
pop
shll
sbb
mov
dec
cltd
push
dec
std
sbb
rcr
add
call
cmp
inc
and
addl
sbb
add
stc
mov
add
outsl
push
pushf
pop
xchg
xchg
or
dec
or
xor
add
clc
inc
in
push
lea
adc
xlat
or
push
in
mov
push
lock
pop
pop
insl
pop
push
decl
push
xor
add
push
mov
sub
test
repnz
sbb
dec
pop
call
pop
hlt
xchg
sarb
inc
lock
repz
lea
jo
push
add
nop
inc
mov
lods
mov
push
and
call
xor
imulb
incb
xchg
push
inc
add
shll
inc
jmp
mov
inc
push
lods
add
xchg
cmc
jbe
lods
inc
mov
lods
add
push
cs
clc
add
lret
sti
ret
repz
or
push
or
adc
cld
inc
sahf
push
or
sub
lea
mov
jge
jg
or
imul
inc
out
mov
dec
pop
push
or
mov
out
inc
scas
stos
push
mov
mov
inc
inc
aas
dec
std
adc
testl
lods
and
pop
cmp
subb
mov
out
mov
push
mov
bound
add
and
fwait
add
sub
andl
outsl
xor
mov
xchg
stc
adc
jmp
pop
or
sub
fcmovbe
aad
push
mov
add
jecxz
push
in
jb
xor
pop
inc
hlt
xchg
testl
and
add
pop
or
mov
mov
push
sbb
or
jecxz
xchg
fdivs
lret
call
shrb
xchg
ljmp
inc
in
push
das
sar
lds
cmp
jp
xor
add
mov
jne
xchg
lcall
adc
add
mov
add
inc
rorl
or
inc
push
aas
add
das
decl
or
movsl
pusha
aas
add
in
inc
pushf
pop
or
sub
out
test
or
sbb
pop
jno
add
sub
cld
mov
add
stos
xchg
mov
dec
add
jge
pop
or
inc
add
lods
mov
fadds
jns
inc
lods
sub
or
mov
sub
mov
test
aaa
shll
mov
dec
ror
or
lods
add
inc
std
xorl
sbb
data16
add
adc
sbb
mov
add
push
out
adc
add
adc
push
lds
test
pop
jae
inc
adc
mov
cmpsl
stc
inc
add
sbb
mov
adc
subb
out
mov
out
add
hlt
adc
out
testl
push
jg
daa
divl
popf
jg,pt
inc
or
out
movl
in
xchg
add
push
incb
adc
test
jg
mov
adc
add
adc
xchg
pop
adc
jmp
add
mov
lock
mov
or
ljmp
cmp
adc
add
ljmp
add
add
addr16
sbb
or
rolb
rcll
iret
push
push
jmp
div
or
push
inc
lds
jmp
pop
inc
call
insb
inc
and
call
push
and
inc
sbb
add
dec
inc
out
ds
out
push
add
rclb
add
xchg
jle
mov
sub
add
add
push
mov
mov
add
cld
adc
push
bnd
dec
popf
pop
or
lods
stc
cld
push
test
xchg
lcall
shlb
mov
inc
pop
ds
adc
out
jecxz
or
fcoml
call
mov
je
jae
lock
sub
std
stc
adc
inc
add
ret
add
adc
test
add
pop
push
mov
fidivl
add
fsub
or
push
scas
std
shll
push
call
xchg
jnp
add
xchg
or
add
std
and
clc
push
insl
add
cmp
das
sbb
push
jg
push
std
fnstcw
aaa
or
push
stc
cld
icebp
mov
jb
add
sahf
rolb
add
daa
aaa
adc
call
mov
or
sbb
lcall
adc
xor
loopne
bound
adc
aaa
and
inc
add
pop
push
add
mov
or
pop
adc
daa
add
dec
repz
pop
daa
xchg
fucom
add
loop
cmc
pop
pop
cmp
fnstsw
popa
or
movsb
jecxz
sarb
push
push
lcall
or
jae
lahf
insl
sti
push
jne
sub
push
sbb
mov
ret
inc
mov
mov
adc
xor
std
push
lock
adc
or
xchg
testb
dec
add
adc
test
cli
or
pushf
lahf
je
jmp
push
mov
pop
std
cld
lahf
mov
jl
xchg
mov
pop
inc
mov
inc
mov
sbb
std
fsubl
jnp
xchg
and
add
loope
push
adc
xorps
loop
lcall
push
inc
sub
aam
inc
cwtl
pop
je
add
nop
shlb
xor
xchg
divb
pop
adc
xchg
sbb
push
into
jb
add
push
data16
xchg
add
fldl
call
out
mov
out
push
push
adc
add
mov
call
test
fwait
in
add
lods
std
jo
pop
mov
lods
push
push
fidivs
adc
lods
jp
adc
insb
or
sar
xchg
mov
inc
adc
xor
or
popf
and
add
xor
mov
adc
std
icebp
les
inc
add
shll
mov
add
push
cmp
loope
or
sbb
in
add
add
sbb
sbb
add
add
jp
xchg
inc
lgs
inc
scas
add
pushl
jge
sbb
cmpsl
add
or
add
pop
xor
out
sbb
jo
or
fmull
push
push
out
inc
lods
aaa
lods
ja
ficoms
cld
es
aam
xchg
adc
add
cmp
push
pop
aam
cmp
outsb
add
out
fnsave
add
call
mov
das
mov
pop
add
xchg
clc
fsubrl
clc
jae
das
dec
je
das
dec
je
test
loop
and
push
sub
out
addb
push
mov
std
inc
xchg
sub
jae
sahf
cmp
pusha
jmp
jmp
jo
stos
jmp
add
lea
outsb
cmp
insb
inc
lods
push
cli
pop
adc
add
lock
add
inc
jmp
inc
and
adc
mov
aaa
xchg
jae
push
push
add
psubq
out
hlt
sub
adc
push
out
lock
je
jne
cli
incb
std
aas
add
push
leave
fidivrs
inc
or
xor
add
cli
pop
push
je
add
push
je
sbb
cld
fldl
sub
subb
mov
xor
insl
les
push
add
popf
mov
movl
add
sahf
ret
pop
jge
add
ret
fildl
add
add
shl
add
std
adc
jl
clc
jg
stc
mov
add
cmp
add
cmp
addr16
out
repnz
call
jge
negl
add
jnp
jge
jno
sbb
push
jp
push
or
or
repz
add
fadds
add
jle
add
adc
sahf
or
loopne
jl
sti
out
add
inc
pop
mov
out
add
and
shr
das
lds
cld
adc
mov
int3
subl
adc
add
push
out
mov
push
out
xchg
out
add
imul
fildl
lahf
pop
out
mov
or
jbe
nop
aaa
push
push
push
test
hlt
sbb
push
xor
sbb
mov
xor
sub
xchg
rcrb
or
test
push
adc
push
popl
or
call
push
adc
fdivp
in
psadbw
push
mov
and
jmp
dec
in
mov
and
mov
push
sbb
mov
js
dec
call
or
rcrb
sbb
test
int
jmp
add
std
add
or
or
and
std
lcall
adc
andl
test
adc
pushl
xchg
testl
jp
cmp
or
lahf
add
je
add
lcall
sub
jns
cmp
jns
pop
add
cs
imul
add
mov
call
dec
sbb
or
movsw
std
adc
imul
lcall
xor
imul
bound
add
xor
dec
sbb
das
and
dec
les
push
add
or
inc
pop
mov
and
add
add
stc
fwait
add
add
cmpb
jge
add
jge
or
add
add
stc
imul
sub
pushf
leave
mov
cmpsb
add
add
out
xchg
cmpsb
mov
and
mov
lret
adc
das
jp
mov
adc
jge
mov
das
add
insl
cmp
mov
insl
and
jno
mov
das
add
sbb
bound
out
xchg
cmpsb
cmp
addr16
adc
push
sub
out
or
add
or
out
aas
mov
jmp
outsb
rorl
jb
cmp
out
inc
std
into
mov
mulb
mov
mov
add
cwtl
enter
dec
mov
fs
mov
xchg
int3
fs
pop
test
test
std
pop
pop
into
or
pop
mov
sbb
shrb
incb
loope
dec
test
lock
ljmp
adc
push
adc
xchg
sub
adc
dec
adc
add
xchg
popa
or
cmp
push
fists
data16
cli
jp
out
es
or
popf
adc
jne
or
xchg
push
xor
into
call
push
mov
inc
dec
or
aad
mov
adc
lcall
inc
adc
inc
adc
sub
add
add
sub
add
adc
cmc
inc
jbe
or
add
add
sbb
push
data16
cmp
or
add
es
add
lea
mov
jge
inc
adc
push
add
jge
mov
add
mov
add
add
out
push
cmp
fwait
dec
add
jg
mov
inc
testb
sbb
dec
cmp
stc
adc
clc
fistl
push
add
adc
pop
loopne
out
les
jb
and
and
add
addr16
loop
clc
imul
add
push
pop
or
nop
pop
out
loop
xchg
inc
adc
or
push
sbbb
add
sti
inc
add
out
add
jno
insb
test
sub
imul
inc
push
nop
inc
pop
movntq
repz
incl
push
mov
push
add
jo
xchg
movsb
outsl
mov
jmp
std
or
add
call
mov
xchg
add
adc
pop
dec
mov
cmpsl
std
pop
adc
mov
std
adc
or
call
nop
sbb
insb
cmp
sub
dec
and
adc
or
jns
lods
push
cmp
sub
rorb
sub
mov
shlb
out
xchg
sub
xorl
je
and
push
xchg
adc
adc
cwtl
sbb
je
aas
push
push
xor
mov
clc
pusha
shlb
mov
sub
jb
jg
popa
adc
push
fimuls
cmpsl
popf
adc
push
xchg
inc
jne
jae
push
dec
push
push
loop
clc
lea
push
rclb
jnp
jp
push
xlat
test
add
jge
add
mov
sbb
sub
or
add
or
std
push
jno
fsubrl
inc
or
in
add
add
sbb
popl
dec
popf
jae
add
call
jnp
or
add
add
inc
repnz
or
sahf
push
clc
push
xchg
les
pop
mov
add
add
lahf
pop
and
inc
add
mov
inc
push
testl
lds
jmp
and
xchg
js
jb
xchg
adc
or
xchg
push
cltd
pushf
out
add
test
adc
test
mov
repz
add
add
stos
inc
inc
out
mov
out
jl
lret
push
adc
mov
push
add
adc
add
add
pop
mov
xchg
add
pusha
iret
rdtsc
sub
push
add
push
jmp
ffree
adc
in
jle
jmp
fs
mov
pusha
movsb
add
add
lea
bound
or
movsb
add
push
adc
sbb
aam
icebp
pop
xchg
dec
mov
add
add
push
aas
fcos
inc
xchg
sub
je
mov
and
dec
repz
ds
fldt
nop
incl
mov
pop
pop
jbe
add
lret
adc
push
push
mov
sti
adc
add
test
push
jmp
bound
pop
or
adc
in
test
cmp
jmp
je
stos
jge
adc
ja
add
or
popf
adc
cmp
push
xor
out
add
psubsb
aaa
mov
daa
add
rcll
les
mov
lret
clc
mov
cltd
inc
add
xor
cmc
cs
test
mov
pushf
adc
push
jno
enter
clc
jnp
add
mov
mov
repz
stc
lods
add
xor
xor
scas
mov
test
pop
imull
roll
arpl
sub
addl
mov
loopne
add
jmp
lock
fs
clc
xor
je
sub
or
stos
lods
inc
out
mov
push
ljmp
and
lret
je
fsub
mov
movsl
sti
inc
sbb
xor
ret
or
fists
adcl
adc
std
lock
stos
jo
out
add
ds
and
xor
cmpl
adc
add
xchg
push
adc
add
std
xchg
sahf
mov
cs
adc
xor
in
pop
xchg
push
or
jg
sbb
daa
std
fcoml
jae
cmc
adcb
xor
add
call
std
jb
loopne
xchg
inc
daa
add
or
add
std
pushf
jmp
jae
mov
push
aam
adc
icebp
adc
jg
scas
or
andl
add
mov
call
ret
inc
test
or
inc
add
out
jg
outsl
or
sbbb
orl
add
pop
or
outsb
andb
jne
inc
lcall
decl
std
pushl
adc
push
cmpsb
push
push
cmp
push
inc
sbb
pop
jno
pusha
xlat
cld
dec
add
lock
xor
pop
or
push
inc
lods
xchg
les
mov
sbb
stos
and
mov
imul
movsl
out
xor
mov
xchg
cwtl
jae
push
imul
lea
add
movsl
subl
mov
sbb
movsb
add
mov
add
imul
outsb
push
cwtl
jae
pop
cwtl
push
jge
frstor
in
std
cmp
fcomi
nop
cmp
pop
jge
add
out
inc
loopne
mov
add
iret
loope
out
mov
cmp
fcmovb
packssdw
jg
mov
xchg
xor
add
adc
mov
insb
sti
decb
jb
aam
rcr
pop
insb
xor
xor
adc
sbb
adc
jle
add
mov
out
je
adc
add
adc
adc
inc
add
pop
cmp
lcall
mov
je
cwtl
mov
jbe
ja
addb
nop
jmp
cmc
sub
sub
mov
push
insb
or
adc
sbb
push
je
lcall
or
mov
or
add
aaa
and
add
je
mov
jg
jb
in
popf
shll
call
add
je
push
cmp
mov
dec
jmp
adc
add
push
or
rcrl
cmpsl
sti
mov
inc
and
mov
push
stos
inc
or
lods
fdivrs
xchg
and
push
xorb
cmp
ss
add
jno
pop
jle
je
inc
pop
call
cmpsb
lret
and
push
ret
sbb
jns
adc
inc
in
push
and
inc
or
pop
sbb
mov
sub
add
add
insb
in
add
xchg
clc
mov
xchg
cmp
sub
in
stos
push
stos
les
ss
jg
xor
add
pop
test
mov
hlt
cld
lock
icebp
cld
stc
push
lock
add
mov
cli
push
dec
sbb
rorb
aam
hlt
enter
sub
iret
icebp
popf
pop
inc
outsb
add
into
jg
shr
xchg
test
mov
mov
mov
inc
add
les
push
sbb
fidivs
add
in
jg
xlat
out
out
aam
leave
pop
mov
inc
add
sbb
inc
add
mov
into
pop
mov
add
insb
nop
add
out
sarb
test
scas
lds
xchg
mov
hlt
lahf
cmp
jg
jnp
aam
jle
aas
pop
add
loop
and
adc
jle
xchg
add
pop
nop
mov
pop
adc
mov
push
in
cli
adc
rclb
repnz
insb
insb
mov
add
pop
dec
jl
je
adcb
aas
jmp
and
lock
pushf
add
sub
cmp
inc
mov
adc
repnz
repz
adc
add
jbe
std
std
sub
mov
std
pop
sbb
mov
lahf
jno
call
adc
mov
jge
xor
mov
mov
shlb
aam
cli
call
push
dec
jb
dec
mov
sarl
je
push
push
xchg
xchg
or
mov
ljmp
call
in
call
testb
movsb
iret
decl
push
push
pop
and
jmp
out
cmp
jne
pusha
fcoms
pop
add
sbb
loop
scas
imulb
mov
xor
xchg
outsb
cltd
pushf
imul
hlt
jne
je
pushw
add
lods
add
mov
add
sahf
cmp
icebp
inc
or
lods
adc
ljmp
lods
jl
add
pop
hlt
aas
add
inc
std
add
jmp
add
inc
aaa
std
adc
idivb
add
adc
pop
inc
add
and
mov
adc
aam
out
aad
hlt
div
shl
cmp
js
jp
jg
push
cld
ffreep
add
xor
inc
hlt
lea
add
mov
ja
xor
add
movl
ja
div
shl
pushf
cltd
adc
add
jg
mov
mov
add
loop
call
mov
ret
adc
jle
testb
imul
jmp
mov
imul
jg
mov
mov
xchg
js
xchg
pop
adc
jmp
divb
add
cmp
fiadds
mov
adc
out
aas
jns
xchg
jl,pt
mov
das
shl
adc
add
ja
cmp
jl
sub
add
sahf
xchg
js
jmp
insb
not
pop
adc
add
sbb
add
sub
cmp
sbb
sti
push
clc
cmpsb
mov
dec
roll
idiv
mov
xchg
call
popa
push
je
and
cli
add
in
lods
adc
ljmp
cmc
xorb
sbb
cmovo
mov
incl
mov
ret
xor
mov
xchg
incl
cwtl
call
jle
mov
xor
add
leave
pushl
sub
xchg
fisubrs
shll
std
push
mov
pop
add
mov
cs
filds
jge
inc
hlt
out
or
add
add
add
add
mov
ret
scas
lea
add
shr
scas
inc
cld
add
add
insl
les
push
add
add
add
ret
adc
add
test
sub
fiadds
push
adc
add
and
stc
ss
add
fsubl
adc
scas
lss
add
mov
add
pop
leave
vdivpd
add
xlat
nop
sti
dec
lret
push
test
aam
adc
xrelease
mov
adc
push
sbb
dec
repz
add
jmp
or
ret
push
jb
clc
push
rolb
test
call
add
rcrb
inc
stc
test
fldcw
jmp
jmp
mov
sti
jbe
sbb
cmc
xor
insl
add
add
jge
bound
sbb
fsubl
sbb
fdivl
call
mov
ljmp
shlb
mov
lahf
repnz
ret
xchg
shlb
clc
out
sub
add
xchg
jl
nop
jb
add
lahf
adc
pop
ljmp
je
add
call
test
and
pop
notb
inc
sub
xchg
divb
push
push
sub
popf
ret
and
lock
aaa
repz
and
shrb
in
add
out
add
call
ss
push
lea
dec
push
mov
fwait
adc
lahf
aad
test
add
adc
int
sti
jae
in
or
scas
adc
jnp
popa
adc
jp
push
pop
insb
jl
outsl
imul
les
add
add
add
fnstcw
dec
aad
jl
mov
cmovge
std
fwait
add
mov
sub
or
inc
fistpll
xor
cmp
jge
xor
push
add
jge
cmp
ss
mov
jb
add
popf
and
lods
or
mov
or
out
imul
std
xchg
add
push
add
adc
mov
add
xchg
fdivs
mov
in
lea
mov
jne
add
dec
jmp
sub
add
daa
sub
inc
xchg
daa
push
out
add
out
mov
subb
adc
add
outsl
mov
push
or
ds
int3
add
call
mov
std
fiadds
sub
into
adcl
lds
subl
adc
jmp
inc
popf
inc
lds
cld
sbb
fs
std
std
add
call
pop
inc
popf
inc
lds
enter
add
fnsave
pop
call
cmpsb
pushf
inc
add
rcll
call
mov
fwait
dec
int
cld
xchg
stos
sbb
call
lcall
or
fwait
stc
mov
jmp
cld
incl
insl
out
mov
clc
cwtl
xchg
sti
push
jne
or
insl
out
mov
leave
sahf
xchg
enter
push
mov
adc
push
adc
push
cwtl
add
pop
aaa
aaa
push
push
mov
mov
xchg
movb
add
xor
ljmp
loope
jno
add
adc
fistpll
cmc
xchg
add
call
std
push
sarb
clc
xor
mov
push
xchg
jo
adc
sar
je
je
cmp
movsl
in
pop
cmp
dec
call
addl
sub
adc
or
xchg
cltd
arpl
jnp
cmp
ret
push
mov
sub
push
icebp
push
mov
in
movhps
xlat
cmp
movsb
repz
clc
push
push
jecxz
fwait
std
sbb
pushf
jmp
pop
enter
insl
jl
mov
adc
inc
lods
adc
les
into
inc
mov
lds
cmpsl
rcl
roll
jge
shrb
out
sbb
out
xlat
sbb
js
nop
mov
adc
insl
jle
sahf
cwtl
in
jbe
push
sbb
jmp
aam
jle
out
js
or
lods
ljmp
or
push
cmp
pushl
aaa
lahf
inc
adc
imul
fs
loopne
push
cli
add
cmc
imull
in
mov
add
dec
mov
xchg
ljmp
adc
pop
std
pushf
jge
repnz
adc
insb
adc
imul
imul
stos
sub
sbb
jmp
pop
add
clc
add
aas
jmp
shl
jb
adc
jmp
adc
add
or
fdivrs
adc
cmpsb
std
call
jne
jbe
fisttpll
pop
shlb
es
add
rcr
xlat
push
jle
jns
push
push
lcall
popf
fwait
shlb
ret
add
adc
add
pop
sldt
sti
test
push
or
adc
adc
test
jge
mov
xchg
sti
data16
addr16
add
pop
aaa
xor
das
rolb
call
rcl
mov
mov
ja
add
jnp
cld
push
pop
imul
add
jb
imul
mov
mov
add
add
mov
and
ret
decl
jp
push
aas
mov
add
faddl
or
add
or
adc
inc
add
adc
xchg
jb
shll
push
inc
add
cld
jbe
jp
sbb
ret
xchg
inc
adc
stc
inc
jb
or
push
sti
sub
ret
or
xorb
mov
xadd
push
pop
fldz
mov
add
add
scas
fildl
loopne
cmp
pop
push
fcmovne
ljmp
sbb
inc
les
pop
insb
ret
pop
out
mov
fiadds
not
out
ljmp
or
rorl
int
add
pop
roll
add
pop
mov
inc
jmp
rcll
push
pop
adc
aad
mov
inc
push
add
pop
jl
std
push
adc
sub
jne
scas
ljmp
xchg
or
pop
jo
and
jmp
mov
fnstenv
sub
jmp
nop
mov
pop
adc
das
add
cwtl
sub
adc
bound
lds
adc
jmp
jle
pop
pusha
mov
popf
inc
add
xchg
push
push
sub
fwait
cwtl
push
and
add
aam
std
add
or
adc
std
mov
dec
jbe
fstpl
push
or
adc
rclb
or
mov
faddl
lods
jp
inc
fmull
push
addr16
dec
ds
inc
inc
inc
pop
jp
inc
sbb
push
addr16
push
ds
push
inc
inc
pop
orl
adc
aam
aam
mov
jecxz
mov
je
shrb
push
xchg
inc
movsl
aas
add
bnd
aas
add
inc
mov
stc
cmp
add
jle
fisttpl
andb
push
inc
push
jb
cld
cmp
adc
dec
sar
arpl
inc
mov
or
add
or
xchg
jnp
add
or
shll
add
cmp
call
add
fs
iret
xchg
aam
js
jge
nop
cmpsl
clc
lods
xchg
hlt
jg
add
out
nop
mov
shr
jecxz
jl
cwtl
dec
mov
outsl
fcoml
jns
mov
call
dec
cmpsl
pop
shrl
and
and
jg
inc
shl
jmp
int3
cmpsl
add
popf
jmp
jmp
add
xchg
mov
xchg
inc
sub
or
out
popa
fdivrp
mov
add
lcall
scas
sbb
jmp
dec
dec
ret
rorl
stos
sbb
jmp
fcmovnb
cld
aam
popl
mov
aaa
adc
fs
call
push
fcoms
mov
imul
inc
les
push
xlat
jnp
pop
sub
gs
call
xor
mov
ret
pop
mov
mov
cmp
flds
mov
mov
enter
xchg
pop
fsubs
sbb
xor
call
cltd
xlat
or
fs
lcall
sbb
add
add
cwtl
cli
stos
jns
push
test
xchg
pop
hlt
and
test
in
mov
jl
fcompl
cltd
push
xchg
fbstp
and
mov
nop
add
jnp
std
jmp
mov
aam
inc
lds
lret
sub
pop
pop
jp
add
cmp
inc
das
or
add
inc
inc
sbb
aas
add
or
sbb
lea
xor
add
push
add
push
sbb
push
jmp
push
std
stc
ficoms
inc
add
mov
jae
add
ret
add
add
or
xor
imul
cmp
in
push
xchg
call
mov
inc
fidivrl
lea
sub
test
aam
enter
out
frstor
cmpb
sahf
cmp
add
xlat
out
in
or
rcrl
xchg
iret
jno
or
out
xchg
mov
jp
jns
pop
mov
add
jge
sbb
imulb
add
xchg
pop
test
adc
fiaddl
loope
pop
mov
ljmp
jge
popa
imul
stos
unpcklps
daa
pop
mov
jmp
mov
out
cmp
pusha
ret
outsl
orl
pop
lea
sbb
insb
cld
aam
jmp
std
mov
popa
jae
dec
add
pop
andb
jecxz
fildl
and
jb
add
xchg
add
scas
outsl
adc
lcall
push
and
cltd
inc
and
inc
dec
push
xlat
pop
call
mov
cmp
add
mov
push
in
mov
in
mov
push
sti
adc
mov
shl
or
and
add
in
inc
mov
outsb
in
jae
push
fsubrs
pop
pop
cmc
stos
add
icebp
push
sbb
mov
out
pushl
insl
add
jns
shrb
std
mov
mov
sbb
std
jp
pop
or
insb
jbe
and
je
cmp
add
les
out
lods
outsb
fadds
add
nop
out
subb
push
sub
adc
leave
fs
or
xor
add
je
inc
add
inc
jae
ljmp
adc
aas
or
lcall
inc
imul
cmp
mov
cld
sbb
adc
sbb
add
sti
pop
sbb
sbb
pusha
sbb
stos
add
aas
outsl
lds
call
adc
adc
add
push
xor
fsubr
cmp
add
aam
push
aam
cmp
repz
add
pop
hlt
aas
not
out
cmp
add
push
cld
call
push
orb
iret
or
sub
lock
add
je
pop
aaa
insl
mov
mov
stc
sub
sbb
jmp
sar
mov
pop
xor
jmp
daa
gs
jmp
loopne
pop
mov
pop
popa
inc
jmp
inc
pop
add
roll
clc
fildl
pop
mov
fs
jmp
das
call
adc
out
adc
adc
arpl
cmp
jae
xor
enter
xor
add
es
rorb
mov
push
ret
pop
push
mov
xchg
in
sub
dec
mov
mov
test
imul
call
outsl
pop
loopne
rcll
mov
add
or
rolb
jge
pop
xchg
push
pop
je
mov
inc
cld
jne
out
sbbl
jge
pop
je
cli
xchg
inc
fsubr
out
or
mov
xlat
je
cmp
inc
push
incl
test
adc
jb
hlt
sbb
sbb
dec
mov
cmp
rclb
mov
stc
cld
repnz
adc
lods
add
xchg
loopne
subl
adc
sbb
out
inc
or
imul
dec
scas
std
pushl
cltd
clc
pop
dec
aaa
push
adc
insb
xchg
cmp
mov
addl
stc
sbb
add
insb
cmp
add
xchg
loopne
fsubrp
jmp
jb
or
dec
iret
inc
pop
add
jb
push
mov
pop
jns
es
adc
std
jle
adc
pop
push
jb
push
mov
fdivrs
addr16
sti
push
test
cli
add
fistps
lea
add
and
pop
hlt
mov
or
ret
into
mov
pop
mov
inc
loopne
test
jmp
ret
sub
in
or
cld
mov
lret
pop
xchg
test
add
or
cmc
add
pop
data16
or
movsl
and
dec
push
ds
fldl
pop
push
push
in
fs
xor
cltd
xor
subl
jmp
push
push
add
xchg
cmc
adc
and
mov
out
repz
std
add
in
fidivs
std
sbb
add
clc
inc
pop
mulb
xor
add
inc
adcb
jmp
mov
clc
stc
inc
pop
adc
xor
or
sbb
adc
pop
nop
in
adc
xchg
stc
lcall
adc
push
fidivrs
add
adc
cmp
add
shl
jecxz
test
pop
pop
lea
dec
lea
out
or
cli
test
pop
dec
xor
sub
repnz
mov
bound
orl
cmp
sub
jb
push
jecxz
inc
repz
sub
shlb
out
xchg
dec
or
cmp
outsl
std
icebp
je
inc
add
inc
je
clc
loope
pop
aas
cmpsl
testl
adc
xor
mov
add
xchg
cmpsl
insl
call
push
sub
or
lea
sti
pushf
outsl
push
stos
mov
jp
test
add
outsl
std
adcl
jnp
addb
ret
sbb
testl
inc
jae
xstore-rng
cmpsl
add
les
div
notb
cmpsl
pop
rorb
int3
sbb
scas
push
add
ljmp
push
ljmp
add
imul
insb
enter
mov
test
sbb
push
add
shl
sbb
out
loopne
mov
mov
inc
aaa
mov
andl
std
pop
or
cmpsl
add
lea
ja
lods
ja
out
add
cld
outsl
lock
xchg
js
sub
mov
pushl
dec
inc
push
scas
inc
xor
std
cld
dec
add
xchg
ror
sbb
lea
jnp
sbb
popa
push
push
adc
adc
push
push
xchg
xor
add
and
pop
xor
mov
mov
in
push
add
xchg
out
call
inc
push
andb
lea
loop
out
cmp
or
add
pop
outsb
mov
outsb
xchg
outsb
mov
outsb
xchg
aad
cld
fnsave
mov
test
jnp
loop
int3
push
or
dec
or
push
and
add
rolb
popf
out
popf
mov
mov
lret
adc
and
or
loop
add
xor
push
add
lcall
popf
push
inc
jge
cmp
sub
mov
push
add
pop
jg
add
jle
mov
dec
repz
or
cmp
movl
lret
add
sti
cmp
mov
mov
jmp
inc
xor
inc
cmp
sar
jg
add
push
mov
stos
js
shlb
xlat
add
jge
adc
fisttpl
xorl
aad
clc
idiv
adc
jae
imul
pop
not
out
add
push
xor
mov
add
imul
inc
clc
jl
adc
push
mov
inc
pop
rcrb
pop
sbbb
push
mov
jbe
aam
daa
add
push
fistl
xchg
mov
push
mov
inc
dec
pop
lock
cmp
push
add
arpl
pop
shl
xlat
inc
pop
jmp
inc
pusha
mov
add
mov
inc
nop
xchg
js
xchg
fcompl
and
test
sbb
or
aam
bound
push
jge
and
cwtl
out
popa
scas
push
loope
jge
adc
dec
orl
insl
mov
push
add
addb
call
bound
std
aad
fsts
call
pop
cltd
inc
call
pop
popf
pop
sti
pop
xlat
add
or
pop
pop
mov
jne
jne
mov
iret
xor
push
std
gs
or
xchg
icebp
data16
or
xchg
in
in
or
push
jp
rcll
loop
mov
dec
add
sbb
or
jp
jmp
mov
xor
jg
jmp
dec
cld
jne
sbb
pop
gs
les
ds
cs
cmp
jmp
ljmp
ds
ds
call
mov
pop
add
int3
mov
add
lods
aas
push
add
cmp
sar
push
jl
add
cmp
sbb
mov
push
adc
add
push
pop
out
add
jge
nop
aas
jl
js
sar
cmp
push
sti
imul
cmp
add
fwait
jb
add
mov
repz
cmp
dec
cmp
in
outsb
inc
add
or
mov
cwtl
daa
lock
pushf
hlt
xchg
shl
cmp
jnp
xchg
data16
dec
fld
imul
fldl
inc
out
adc
popw
clc
xlat
ret
cmp
sbb
mov
loope
inc
call
lahf
test
cmpsl
jmp
iret
or
mov
dec
sbb
das
sub
push
subb
adc
fstpt
sbb
xor
fmuls
and
adc
add
adc
jmp
or
popf
dec
cltd
test
ja
add
mov
push
andl
push
add
pop
fiaddl
test
and
add
pop
in
hlt
mov
xlat
and
dec
inc
ja
add
cld
cld
repz
lcall
jmp
add
cmpsl
xor
and
push
push
inc
lds
push
call
in
xchg
pop
or
mov
sub
rcrb
test
xor
sub
lcall
mov
add
push
and
lds
pop
notl
pmulhw
mov
outsb
add
outsb
xchg
mov
push
jmp
sbb
dec
dec
and
roll
adc
add
mov
mov
inc
adcl
fstl
movb
mov
or
pop
test
add
jge
add
add
cmp
add
cmp
rclb
sarb
dec
sar
std
repz
fiaddl
add
jbe
and
add
add
sar
stc
daa
xor
jne
inc
call
cmp
ret
mov
add
dec
adc
shlb
fnstcw
cmp
inc
mov
push
dec
dec
lock
repz
sub
outsb
adc
daa
call
push
adc
iret
or
push
cmp
sub
adc
bound
sbb
daa
cli
repz
inc
insl
mov
or
ret
cwtl
and
or
cmp
cmp
daa
cmc
repz
daa
out
pusha
leave
add
pushf
and
ret
mov
loopne
inc
lock
daa
sbb
jecxz
cmc
or
cmc
mov
sub
in
add
xchg
mov
pop
inc
inc
add
imull
std
es
and
pop
fwait
inc
loope
fsubs
cmc
mov
lock
and
fbstp
and
pop
fwait
lds
xchg
push
add
xchg
pushf
in
push
dec
cmpl
inc
pushf
fs
cmc
sbb
cmc
sbb
cmc
pop
jo
cmc
and
add
adc
add
xchg
dec
and
nop
shlb
and
push
mov
cmp
pusha
or
ret
popf
pop
shr
push
add
sahf
aam
jl
inc
test
ss
inc
roll
iret
cmpsb
sti
jmp
filds
pop
nop
sbb
insl
adc
sbb
pop
cmp
test
add
or
and
fistpl
push
mov
mov
cmp
add
or
inc
gs
xchg
add
test
cmp
add
pop
std
ljmp
orl
pop
ret
scas
cmpsb
mov
mov
je
ret
xchg
lock
xchg
test
push
mov
adc
add
push
adc
xor
add
and
mov
xor
inc
call
insb
add
adc
hlt
mov
in
xor
sbb
pop
ja
add
lea
mov
pop
add
out
int3
sub
push
lret
icebp
push
mov
outsl
shl
cmc
jg
add
xlat
add
int
sahf
or
popf
mov
nop
shr
mov
mov
ret
pop
jle
pop
nop
daa
fadds
inc
sub
repz
ss
into
pop
xor
or
add
xchg
sub
dec
std
jb
or
adc
idiv
sbb
in
xchg
add
mov
mov
fstl
subl
jmp
mov
jecxz
out
fimull
insb
inc
rolb
lret
icebp
sbb
ret
icebp
punpckldq
icebp
punpckhdq
cmp
arpl
xor
adc
jmp
add
mov
mov
mov
cmp
adcl
adc
push
xchg
rorb
out
and
add
mov
add
sbb
inc
leave
dec
cld
inc
mov
inc
add
sub
jl
and
push
xor
cmp
push
outsb
xchg
jl
adc
mov
xchg
xchg
addl
insl
fwait
inc
and
xchg
imulb
mov
xchg
in
jo
jle
adc
mov
push
cmp
inc
add
add
call
add
dec
out
stos
inc
add
add
stc
inc
repnz
add
inc
je
mov
clc
xchg
or
fsubl
rcrb
neg
inc
add
mov
mov
lret
decb
dec
std
push
inc
sub
add
inc
sub
cmc
mov
fildl
ljmp
add
mov
aad
add
add
mov
out
sbb
pop
pop
sub
out
lret
mov
add
push
lret
icebp
pop
fisubrl
mov
pop
jmp
lret
xor
mov
pop
or
lea
adc
mov
mov
mov
pop
sub
sti
add
adc
mov
pop
daa
pop
lods
mov
pop
shrb
pop
inc
mov
pop
int3
outsb
push
shl
push
inc
nop
add
mov
pop
xor
aaa
jo
imulb
xchg
scas
inc
jmp
test
add
jg
add
pop
pop
inc
or
add
pop
lds
pop
adc
push
or
jmp
pop
adc
jns
adc
bound
mov
jbe
std
push
xor
jl
and
pop
adc
cltd
mov
and
push
cmp
pop
cs
test
push
cwtl
inc
call
inc
and
jmp
xchg
nop
inc
and
mov
nop
inc
and
mov
mov
cltd
inc
and
mov
xor
inc
and
adc
inc
and
pop
add
sbb
mov
push
adc
call
les
gs
jb
inc
and
pop
mov
lcall
pop
add
jge
pop
and
fcmovnbe
mov
push
out
je
popl
and
push
add
jmp
rclb
shlb
add
mov
je
mov
and
test
adc
ds
negb
adc
pop
sbb
insl
or
inc
xchg
mov
mov
sbb
outsb
sub
mov
add
cld
repz
mov
push
sub
or
sbb
push
sub
fstpt
add
pop
dec
adc
inc
jae
dec
test
jl
jae
mov
and
inc
je
adc
sbb
in
mov
fmul
sti
jl
push
popa
sub
dec
add
insb
mov
test
sub
lock
mov
in
mov
imul
mov
lds
lock
out
jecxz
push
clc
rolb
xchg
push
icebp
nop
sbb
sub
mov
shlb
hlt
mov
mov
clc
mov
pop
in
loopne
mov
xchg
add
arpl
jno
out
jno
jg
decl
in
cs
or
dec
add
shrb
pop
es
repnz
call
push
repnz
shll
add
jle
and
shlb
sub
lock
roll
test
push
aas
jmp
icebp
cli
cmp
std
adc
testl
ret
out
mov
xchg
inc
in
fsubs
mov
xlat
add
add
jle
push
rorb
loopne
add
mov
adc
xlat
bound
jae
mov
inc
pop
insl
push
mov
add
out
and
adc
pop
stc
sbb
or
test
sbb
and
mov
hlt
pop
call
data16
mov
mov
pop
and
in
roll
add
or
jne
test
stos
mov
or
into
pop
sub
jp
mov
js
cmp
pop
cmpb
ljmp
psubusw
mov
pop
jmp
and
pop
inc
mov
push
or
arpl
pop
or
push
or
add
inc
std
nop
push
or
rcrb
insl
jecxz
out
add
or
mov
add
add
outsb
push
out
roll
push
adc
sar
adc
iret
add
push
cmpsl
and
cmpsl
add
aam
sahf
xor
out
jge
insb
inc
clc
lock
lds
int
or
shr
arpl
xor
add
in
arpl
mov
arpl
out
test
out
mov
mov
xchg
or
pop
adc
jmp
jl
iret
jp
cmp
fmuls
adc
inc
cmp
add
shr
jl
popl
sub
xchg
inc
in
xlat
pshufw
push
pusha
mov
push
add
pop
xchg
inc
fldcw
ljmp
clc
or
adc
sbb
pop
pop
cmp
cmp
jb
fcomps
lret
xchg
mov
mov
dec
jmp
add
dec
xor
adc
scas
mov
add
mov
cmp
ret
in
arpl
xor
jmp
adc
ss
push
xchg
popf
adc
jnp
add
cmp
adc
push
push
xchg
jle
std
gs
mov
pop
push
movb
icebp
call
ja
mov
push
out
movsl
cmp
je
adc
rcl
dec
call
push
aad
or
fwait
enter
and
scas
pop
adc
out
inc
inc
pop
or
cs
dec
or
xor
sbb
rcll
std
add
ds
mov
add
and
sar
add
or
rorl
jnp
inc
sub
mov
movsl
mov
inc
test
mov
adc
les
xor
and
out
daa
or
add
or
cwtl
js
adc
pop
push
push
push
ror
adc
mov
daa
and
add
and
out
mov
test
aaa
push
jle
add
inc
mov
cmpsl
fldcw
pop
add
jno
pushf
and
add
stos
daa
or
mov
fisubrl
es
imul
dec
ret
add
call
daa
xlat
or
in
test
sub
cmp
sub
aaa
orl
call
add
push
inc
js
inc
jmp
or
cltd
jge
je
dec
push
addl
push
outsb
js
subl
hlt
mov
mov
pop
dec
ds
cltd
cmp
sbb
add
add
cmp
icebp
fimuls
mov
adc
mov
xchg
scas
daa
dec
jb
push
addl
sti
cmp
dec
add
mov
je
xchg
popa
cld
in
mov
push
push
cmc
outsl
adc
flds
lock
fbstp
sbb
jae
mov
push
std
mov
mov
dec
and
shll
xchg
sahf
dec
and
mov
dec
cmp
call
pop
and
push
push
lcall
xor
push
lcall
cmp
or
ficoms
sbb
js
mov
inc
or
sbb
push
ret
push
push
pop
pop
repz
mov
cmpsl
push
je
stos
in
add
add
cld
push
push
cld
mov
pop
mov
mov
ds
add
or
sti
jg
test
adc
or
cmc
mov
aad
js
jg
mov
aam
adc
mov
mov
jae
or
dec
std
cmp
add
inc
adc
adc
inc
aad
adc
ljmp
lret
sbb
push
hlt
popa
sub
cmp
sub
mov
mov
sahf
stos
test
shrb
out
adc
xor
fiadds
cltd
out
or
or
daa
jg
outsb
add
mov
dec
jns
or
add
push
imul
inc
shlb
stos
or
push
movsl
test
sbb
js
idiv
popa
jno
mov
pop
and
push
ljmp
sub
add
mov
mov
mov
push
jb
lahf
inc
stc
xchg
das
jae
cmpsl
movlps
fs
test
ljmp
inc
stc
push
ret
cld
aam
das
adc
lcall
jns
cmp
push
sahf
mov
jae
mov
out
mov
add
mov
mov
add
add
sub
imul
sbb
or
lods
stc
cmp
or
mov
loop
cwtl
sti
pop
jns
mov
sub
pop
scas
fs
pop
leave
adc
ss
decl
testl
pop
shr
sbb
add
add
fmuls
mov
addr16
jmp
std
test
pop
cmp
sar
mov
stc
stc
cmp
jmp
sti
inc
std
xor
add
push
mov
jae
or
add
pop
test
jmp
addb
push
ja
add
jl
xor
xor
fcmovnu
idiv
inc
cmp
add
jl
rorb
or
aas
add
inc
sub
lret
aas
add
or
mov
mov
adcb
jae
jp
std
cmp
dec
inc
add
lock
adc
dec
xor
push
psubb
add
cmp
adc
add
out
dec
lds
mov
sbb
mov
into
push
adc
sub
movsl
hlt
rol
cs
movsb
and
sub
icebp
testb
adc
sbb
cli
dec
inc
adc
in
cli
lock
adc
repz
lock
dec
inc
adc
sti
fcoml
ljmp
push
add
sub
sub
add
sub
cmp
jne
xor
gs
cmpsl
add
push
aas
imull
jl
stc
stos
pop
outsb
sub
inc
das
in
add
fdivr
stos
pop
into
subb
push
xorl
aad
rolb
cld
mov
pop
lock
gs
or
xor
insb
inc
mov
add
add
jno
cwtl
adc
arpl
mov
mov
roll
inc
jmp
popf
dec
cld
jle
hlt
inc
add
shlb
xor
and
push
mov
int3
ret
hlt
inc
sub
fistpll
add
cmp
jge
pop
ret
out
xlat
mov
in
in
add
mov
hlt
addr16
mov
std
imul
adc
xchg
push
imul
lds
add
clc
pushl
popa
add
out
das
adc
roll
jae
pop
aam
cmp
addl
cmp
xchg
inc
in
add
jo
in
test
push
add
dec
inc
cld
cmp
xchg
add
add
hlt
test
add
aaa
bound
std
bound
add
jecxz
ja
add
jbe
int3
popl
xor
inc
push
push
sahf
mov
cs
add
inc
test
rcrb
js
xor
je
mov
pop
inc
xor
xor
adc
jle
cmpsl
fldl
inc
shrl
dec
pop
sub
mov
push
jg
adc
inc
rcrb
push
adc
imul
mov
or
jecxz
loopne
sub
sub
sbb
sub
add
test
orb
rol
dec
out
add
adc
jecxz
lahf
inc
add
jns
xchg
mov
add
mov
ret
popa
push
mov
mov
add
hlt
push
push
cmpsl
xchg
push
inc
jmp
add
inc
movsb
mov
lods
pop
mov
leave
add
lcall
out
movsl
pop
sub
xchg
popa
jmp
imul
lock
mov
int
std
adc
sarl
notl
inc
jmp
pop
popf
jno
roll
inc
lahf
mov
cmp
std
shll
arpl
lahf
sub
call
mov
pop
dec
cmp
ret
push
add
getsec
ret
fwait
and
cmp
aam
or
call
and
inc
or
push
std
mov
xlat
clc
ljmp
inc
in
dec
push
add
push
shll
pop
mov
cmpsl
in
add
ljmp
mov
rclb
mov
clc
dec
inc
cld
adc
outsb
inc
cmc
incb
add
jp
fstl
add
add
clc
aas
incb
ds
inc
add
xor
aaa
mov
mov
mov
rclb
inc
or
les
mov
shlb
mov
movsb
divl
jnp
mov
add
test
lahf
add
inc
or
xor
mov
mov
aas
call
add
imul
cwtl
arpl
jl
add
rcl
out
pop
inc
nop
lds
or
add
sub
pop
not
out
les
daa
arpl
push
adc
adc
adc
mov
mov
mov
mov
jae
add
pushf
fadds
jl
out
hlt
cmp
push
add
adc
push
xlat
cmp
mov
cmp
cmp
daa
imul
stc
inc
jmp
jmp
pop
adc
inc
or
jmp
pop
aam
dec
pop
adc
jmp
inc
add
daa
mov
pusha
repnz
stos
pop
cmp
rep
pop
daa
addr16
jmp
stos
pop
mov
push
or
adc
inc
jmp
pop
sub
cmp
cmp
push
xchg
or
add
mov
adc
dec
daa
cld
pop
aas
jmp
inc
sub
je
pop
sub
jne
inc
push
push
jp
cli
push
adc
adc
cs
sti
mov
rorl
test
out
incl
test
cld
jmp
pushf
rorb
push
cld
jmp
out
or
sub
inc
fwait
rorb
es
jmp
out
pusha
cmp
std
mov
jmpw
mov
add
outsb
adc
xchg
push
test
sub
cli
inc
sbb
getsec
sti
pop
xor
fs
cmp
out
pop
cmp
push
xchg
scas
in
add
shll
cmp
js
out
add
jge
jnp
xchg
xchg
addb
jae
xchg
ljmp
mov
incb
cmp
std
imul
scas
add
sti
fstpl
mov
pop
inc
aaa
add
pop
and
mov
add
lahf
jl
movsb
cmp
add
add
add
mov
add
and
call
mov
jbe
add
sbb
daa
add
lods
leave
shl
sub
xor
movsl
inc
add
daa
lret
push
sub
sbb
stos
xchg
lods
mov
pop
mov
cmpsl
add
std
dec
pop
movsb
add
add
push
rclb
les
fidivl
fimuls
mov
sbb
lret
push
add
add
fbld
jae
mov
or
push
cmp
out
rol
mov
lods
addr16
and
ror
std
inc
lea
pop
stos
or
shlb
jae
xchg
xlat
xchg
sbb
cmpsb
pop
andl
xlat
xchg
mov
add
aad
push
sbb
pop
lock
sbb
cld
fcompl
push
inc
jmp
inc
mov
or
cli
inc
and
add
inc
mov
pop
xchg
push
call
dec
mov
and
inc
in
dec
push
call
push
ret
test
and
jne
sub
add
dec
push
cmp
push
repnz
add
ficoms
dec
mov
fs
loopne
cld
mov
out
notl
or
and
inc
pop
dec
mov
les
sub
testl
fimuls
push
sbb
add
addb
rcll
mov
pop
aaa
std
stc
sub
add
js
mov
aam
push
inc
dec
pop
mov
add
ljmp
inc
add
inc
add
cmp
or
mov
or
xor
sub
inc
add
scas
idivl
xchg
lret
mov
sar
aaa
inc
jnp
cld
clc
pop
test
push
arpl
push
pop
dec
rcll
sub
leave
adc
fiadds
out
add
adc
add
and
unpckhps
adc
pop
in
push
pop
inc
pop
cmpsl
daa
nop
push
add
sub
cmp
sub
and
add
push
pop
adc
inc
aaa
pcmpeqb
add
jg
rcll
out
xlat
scas
fadd
fwait
lds
add
mov
mov
pop
xchg
sub
jg
xlat
cmp
xchg
mov
jg
cmp
push
and
fdivrl
adc
ret
lock
lea
add
stos
jmp
pop
adc
insb
test
std
xor
cld
pop
adcl
test
call
mov
add
das
push
fsubr
pop
sbb
adc
jmp
shrb
pop
pop
jb
mov
pop
adc
xchg
add
dec
add
adc
sbb
mov
push
enter
xchg
jnp
mov
inc
adc
or
lea
dec
lea
fdivr
jmp
cwtl
enter
cli
je
and
jbe
inc
cld
jne
xchg
jns
push
adc
lods
cli
call
fs
push
push
imul
add
pop
add
xchg
jo
xchg
out
push
mov
in
test
adc
imul
pop
adc
pushf
and
incl
movsl
mov
aam
jae
jl
jg
mov
fisubrs
fimull
add
add
pop
mov
popa
cmp
nop
pop
mov
sbb
dec
add
add
js
inc
add
fnsave
or
add
ret
movsb
aas
add
xor
insb
cmp
dec
add
add
or
incl
inc
inc
mov
sub
cmove
scas
hlt
cmp
mov
sub
push
in
push
add
add
iret
mov
xchg
push
ss
sub
ss
jb
mov
movsb
or
ss
push
in
add
adc
addb
jg
adc
rorl
sbb
idivb
cmpsl
fidivl
xor
in
add
jmp
inc
add
mov
xchg
lret
cld
lret
rcrb
jno
mov
sbb
dec
and
out
xchg
xor
fwait
sbb
mov
adc
mov
add
clc
sbb
push
sbb
inc
push
sbb
push
pop
inc
add
rorl
push
stc
push
addl
mov
adc
repz
decb
push
call
jb
xchg
jae
push
jle
fstpl
jbe
in
sbb
mov
sub
cmp
test
add
lahf
out
pop
hlt
cld
mov
push
je
cltd
mov
call
out
cmc
jmp
xchg
jno
aad
and
lret
push
call
fildll
insl
loopne
insb
xor
xor
pop
mov
inc
pop
leave
fistps
std
push
mov
jl
cmp
dec
push
push
out
enter
das
out
fmull
add
fbld
mov
ds
rorb
test
sldt
jl
hlt
inc
lods
mov
shrd
or
adc
add
add
add
orb
sub
xor
dec
sub
jle
sbb
sub
mov
xor
and
sub
or
fnstenv
testb
sub
or
push
cli
sub
sbb
and
xor
add
std
sub
sub
adc
inc
add
addr16
ret
inc
scas
incb
aaa
add
inc
call
xlat
mov
or
jb
dec
jmp
cmp
adc
add
mov
cld
mov
add
xchg
aad
sbb
jg
call
out
inc
mov
cmpsl
pop
pop
mov
push
add
cmp
out
sbbb
sub
adc
push
sub
mov
sbb
rorb
mov
add
add
sub
pop
sti
aam
jl
fsubrl
add
sbb
add
mov
add
rorb
add
pop
lea
mov
jae
dec
aad
jmp
add
sbb
xor
sbb
jmp
pop
lea
inc
push
pop
add
roll
push
ret
mov
pop
adc
adc
je
mov
std
jge
mov
cltd
xor
pusha
fcmovb
pop
push
out
mov
sbb
dec
cli
sar
and
cld
adc
cli
mov
inc
add
addr16
cvtdq2ps
dec
cld
leave
outsl
sbb
push
idivl
jne
add
xor
cli
jmp
adc
and
jecxz
call
jge
out
dec
xchg
mov
jecxz
test
pop
and
in
fmuls
std
mov
mov
add
cmp
decb
adc
jne
xchg
dec
add
lds
enter
mov
inc
and
push
jg
sub
fbld
addb
jle
jno
test
out
test
push
pushf
sbb
add
inc
jae
adc
mov
sar
xor
in
arpl
sbb
sub
test
std
inc
lods
sub
mov
int
add
hlt
mov
test
call
push
mov
testl
inc
or
add
adc
and
arpl
out
daa
clc
int
daa
cld
jae
out
outsl
out
mov
jp
mov
call
pop
repz
add
sarl
adc
lret
xchg
ret
pop
adc
add
popl
add
pop
jbe
add
adc
add
scas
xchg
fildl
ja
sub
stos
out
ret
addb
add
add
aam
or
call
jmp
adc
hlt
add
dec
stc
adc
adc
jle
adc
xor
mov
xorl
pop
adc
mov
test
add
mov
sub
add
gs
dec
add
pop
out
mov
add
mov
jmp
sbb
push
and
add
add
jnp
imul
add
lock
add
call
shl
adc
push
push
dec
jmp
lods
cld
xor
lods
lods
out
movsl
inc
repz
dec
add
aam
psllw
add
inc
adc
xchg
xlat
cld
imul
es
call
scas
cld
imul
cld
mov
call
inc
add
das
add
fidivrl
push
jno
monitorx
arpl
adc
xchg
sti
add
xchg
xchg
std
add
xchg
cmpsl
xor
icebp
sub
icebp
jl
add
sbb
add
shlb
iret
aam
mov
jmp
shll
inc
add
adc
xor
push
je
cmp
scas
or
arpl
call
cmp
add
or
add
pushl
adc
call
sbb
xchg
sti
jle
lret
adc
js
cmp
push
add
jge
negb
sbb
pusha
sub
adc
or
mov
pushf
jmp
mov
sbb
adc
out
enter
mov
out
mov
pop
ret
cli
add
adc
adcb
lret
fistpll
arpl
pop
data16
jg
sbb
add
aas
js
adc
inc
and
and
icebp
inc
xor
pushl
xor
push
stos
sub
jp
jnp,pn
lcall
add
adc
jae
in
inc
or
or
std
add
inc
test
pop
frstor
fcmovnb
adc
fistpll
pusha
push
fsubl
sti
adc
jmp
mov
sub
xchg
sub
out
pop
mov
jnp
hlt
push
je
sbb
inc
add
pop
add
cmp
dec
xlat
cld
out
fdivr
lcall
jne
sbb
or
pop
cmpsb
nop
loope
add
adc
push
data16
push
jnp
repz
jmp
fsubrl
or
fildll
adc
adc
cld
mov
cmp
cmp
push
sar
dec
jb
push
adc
cmp
clc
jle
xchg
add
call
cwtl
aaa
sub
add
add
xchg
jmp
mov
mov
add
fldl
cmp
add
jge
inc
std
leave
mov
fdivp
or
adc
iret
add
cmp
cmpsl
mov
out
push
mov
add
dec
or
std
sbb
cld
add
add
jbe
adc
xchg
mov
movsl
in
or
mov
xchg
adc
insl
inc
aam
add
sub
and
push
orb
sub
sbb
negl
and
inc
xor
test
aam
daa
lahf
adc
adc
rorl
sbb
popa
cmp
mov
pop
sbb
nopl
aam
jg
pop
adc
add
lahf
adc
jnp
sbbl
sbb
outsl
add
adc
xchg
jge
mov
out
push
cs
test
jmp
gs
inc
xor
pop
sbb
and
divb
adc
adcb
mov
subl
fiadds
add
add
or
mov
xchg
inc
or
stc
sti
outsl
sahf
jmp
push
subl
rclb
jmp
mov
orb
jbe
divl
inc
sub
ss
out
sti
jne
das
cmp
stos
ss
popa
and
aaa
lret
adc
add
adc
rorb
cmp
ljmp
push
or
int3
adc
call
in
jecxz
add
adc
std
jmp
push
je
ss
and
paddb
in
cld
cmp
add
add
or
je
xor
sub
into
inc
jmp
hlt
jne
xchg
gs
add
pop
and
sub
or
ja
xchg
push
mov
sub
cld
jno
sbb
fdivr
add
adc
add
cmp
ret
js
or
add
jae
in
aad
roll
in
adc
enter
daa
push
push
out
add
jmp
sbb
leave
jae
and
mov
in
nop
call
and
or
xchg
pop
leave
das
arpl
add
mov
and
cmp
push
out
fadd
pop
xchg
add
inc
clc
ret
scas
jmp
pop
sub
and
cwtl
paddb
add
xor
and
clc
popa
dec
mov
mov
inc
mov
sub
pop
jae
fisttps
jmp
ret
rol
loope
mov
clc
bndldx
adc
xchg
mov
cmpb
add
push
mov
out
imul
pushf
inc
mov
pop
cld
sti
xor
xchg
jp
or
xchg
repz
shr
nop
push
clc
popa
aam
imulb
or
test
xchg
pop
arpl
dec
cld
adcl
test
lds
stos
mov
mov
sub
adc
adc
push
fildl
xor
rorb
dec
push
fisubrs
sti
je
mov
shrl
dec
mov
xor
cmp
inc
add
lds
add
sub
stos
cmp
fldt
xor
sar
andb
push
call
pop
jno
xchg
sti
je
or
ret
add
jge
test
xor
push
ljmp
stc
add
mov
or
flds
sub
dec
mov
flds
xchg
je
add
lea
gs
inc
test
mov
fistpl
ficoms
pop
fildll
cmpsb
out
add
cmpsb
repz
add
jns
mov
sti
cmpsl
adc
cwtl
inc
and
cmpb
fsubrl
std
xchg
fisttps
aaa
push
jb
mov
pop
cld
jge
out
roll
jb
or
mov
adc
add
add
pop
xchg
mov
xor
cltd
or
repz
std
pushf
sub
push
jnp
pop
testb
mov
rorl
jle
sarb
mov
inc
sbb
adc
adc
lcall
xchg
sbb
setnp
inc
push
cltd
cli
mov
jb
setns
jecxz
xchg
incl
xchg
stc
out
add
push
js
mov
adc
add
push
pop
call
xchg
mul
insb
pusha
mov
xorb
xchg
push
pop
hlt
arpl
lcall
add
in
add
jbe
xor
lcall
adc
add
add
push
je
hlt
cltd
cli
cmp
inc
jmp
add
pop
std
fists
push
sub
in
fcoms
add
push
xor
and
push
mov
ret
add
aas
add
mov
push
lret
adc
pabsw
add
add
add
cmc
push
adc
add
insb
mov
cmp
sub
pushf
and
add
inc
je
fmuls
test
sldt
mov
adc
mov
lock
pop
adc
push
mov
imul
cld
call
inc
in
cmpsb
sbb
pop
xlat
shlb
lods
out
cmp
out
aas
add
aas
je
test
in
mov
icebp
mov
cmp
shr
rolb
stc
jg
imul
enter
movsl
mov
inc
add
sbb
shrb
xlat
sarb
scas
addr16
add
rcll
addl
mov
mov
aad
decl
in
sub
adc
add
mov
mov
add
push
adc
aam
lret
sbb
adc
cmc
xchg
cmpsl
add
repz
adc
add
cmp
add
mov
out
mov
mov
xlat
mov
add
adc
sti
jns
fdivrl
and
mov
mov
or
call
stos
pop
sbb
push
add
cs
or
in
xchg
add
pop
lea
das
inc
imul
pop
cltd
inc
sbb
pop
adc
jmp
icebp
test
or
dec
adc
jmp
loop
or
mov
inc
add
fs
pop
cld
imul
jmp
out
and
fcmovb
add
jmp
and
mov
lea
loop
xchg
jnp
in
pop
or
test
mov
add
orb
je
add
ret
dec
lcall
sti
adc
outsb
inc
or
cwtl
or
jge
adc
or
test
add
mov
jo
data16
lea
add
nop
or
shl
fs
fstl
jg
rol
adc
push
push
out
mov
push
dec
ret
add
call
out
cmc
cld
ljmp
adc
popf
nop
or
and
sar
cmp
or
shll
add
add
in
arpl
stos
add
les
mov
mov
inc
subl
pop
ss
cmpsb
add
add
loop
fidivrs
fldl
subl
add
stc
push
icebp
aas
add
pop
push
push
in
pop
xor
test
mov
push
in
jge
stc
clc
sarb
xchg
in
inc
add
push
add
and
add
out
addr16
xchg
fcmovu
pop
adc
call
roll
sbb
ds
das
adc
add
sub
push
xchg
lcall
xchg
ljmp
push
into
scas
adc
repnz
adc
mov
push
out
xchg
adc
jecxz
pop
xchg
cwtl
mov
xchg
mov
lods
mov
gs
xchg
out
jl
lret
repz
sti
push
mov
mov
shr
add
push
mov
std
sub
mov
mov
out
and
push
aam
jmp
cld
jmp
ss
mov
add
mov
mov
adc
inc
adc
jmp
adc
leave
sarl
cld
fisubrs
aam
lock
push
push
add
gs
aam
daa
inc
jmp
jb
lds
pop
add
mov
std
shlb
or
push
add
icebp
and
cmp
or
pop
fidivrl
sbb
pop
ret
or
notb
icebp
cmp
sti
je
adc
adc
outsb
cmp
push
push
les
or
repnz
jmp
and
push
hlt
adc
in
js
in
pop
jg
mov
mov
or
loop
pop
or
add
cmp
mov
idivl
dec
and
inc
push
mov
nop
and
xchg
adc
add
dec
push
push
lcall
call
add
jg,pt
hlt
cltd
iret
fdivs
scas
add
imul
stos
cld
adc
repnz
add
cmc
outsl
shrl
std
add
lret
call
dec
jns
in
mov
xor
mov
nop
repnz
in
add
fcomps
adc
pop
je
mov
lea
sbb
rcll
cmpsb
add
push
sahf
mov
hlt
out
pop
data16
jg
ja
shr
cwtl
lods
cmp
bound
push
gs
push
xchg
sub
out
movl
cmp
dec
lds
daa
test
cli
mov
fbstp
add
jg
push
movsb
add
movhps
push
test
mov
pop
adc
mov
adc
add
jle
add
sbb
sbb
adc
scas
or
sti
push
cmpsb
insl
add
sub
outsb
adc
out
xchg
xchg
pop
jge
pop
std
pop
pop
ret
mov
cli
push
mov
mov
call
cld
insl
sarb
test
cltd
push
test
pusha
lea
push
push
jge
std
cld
inc
and
jl
testl
xchg
mov
or
lods
insl
push
sub
xchg
ret
in
adc
in
add
ret
xchg
push
aaa
ret
xchg
jnp
pop
orps
clc
repz
addr16
add
ret
xchg
ja
daa
pushf
add
lods
out
decb
mov
sbb
pop
adc
add
in
stc
out
xor
pop
or
je
nop
hlt
test
adc
je
hlt
daa
mov
hlt
sub
adc
jg
dec
add
popf
adc
jmp
fidivrs
add
sarl
inc
insl
nop
and
in
pushl
pop
add
push
pop
stos
xor
and
add
scas
cmpb
xor
lock
outsl
add
add
call
decl
shl
jle
and
sti
mov
add
add
loop
hlt
les
or
jne
inc
adc
les
in
add
add
out
xor
les
jmp
jne
adc
mov
adc
sbb
adcb
inc
shr
add
pop
fimuls
popa
xor
push
out
pop
daa
adc
lret
cld
rclb
mov
jo
add
pop
lea
pop
add
shl
adc
icebp
mov
jo
test
push
test
je
cli
add
mov
adcb
add
pop
int
xchg
fldl
add
xor
icebp
push
fnstsw
and
xchg
sub
mov
call
inc
xchg
divb
insl
adc
scas
rorl
dec
xchg
adc
xchg
push
andb
aas
jle
xchg
sub
aam
xchg
jmp
pop
adc
rcrb
mov
enter
jecxz
out
push
cmp
imul
std
sub
add
fnstcw
lret
or
or
je
xchg
cmp
jl
ljmp
push
push
xchg
push
cmp
pushf
add
test
andb
jle
jnp
or
in
jb
lds
fs
hlt
cmp
jl
add
push
lds
stc
dec
testb
test
jo
lods
pop
xor
pop
add
sbb
andb
inc
sbb
pop
pop
jne
fwait
sbb
rcrl
push
icebp
lcall
add
and
xor
push
enter
add
out
xchg
and
xor
out
in
lea
cli
mov
push
enter
add
out
xor
aas
cld
jg
in
xchg
add
stos
ret
rolb
add
test
add
xchg
add
xchg
add
xchg
add
xchg
add
stos
add
stos
add
xchg
fadds
mov
test
add
xchg
cmpsl
add
lahf
cli
subb
stos
repz
lahf
xchg
sti
push
lahf
not
arpl
and
add
and
pop
sahf
sub
sbbl
repz
stc
call
push
sbb
push
repz
pop
popa
mov
call
cld
data16
push
fldt
in
sbb
add
loope
xor
pop
add
jecxz
or
pop
pop
adc
in
iret
lcall
aam
add
cmp
gs
jnp
sbb
mov
add
mov
adc
xchg
cs
pop
add
jnp
push
outsl
and
lock
and
cmp
or
jg
add
xchg
loopne
adc
pop
add
add
adc
mov
outsb
or
mov
pushl
xchg
adc
pop
icebp
and
ds
xchg
testb
adc
adcb
adc
jg
in
jg
loope
mov
sub
sub
lcall
push
inc
add
or
and
verw
sub
add
inc
add
popf
adcb
cld
frstor
or
fsubs
or
sub
adc
jo
cmpsb
aad
test
sub
popa
rorl
add
mov
shlb
add
cli
mov
faddl
sti
je
adc
mov
cli
addb
fcoml
add
ret
mov
cmp
adc
add
xchg
in
add
inc
add
insl
out
pop
std
jnp
or
add
add
jp
inc
rolb
call
ret
cmpsl
adc
jg
sar
jae
scas
inc
jmp
inc
lcall
mov
jl
add
add
stc
les
add
icebp
mov
cli
jecxz
data16
pop
lcall
daa
pop
out
shr
or
repz
sbb
out
lea
faddl
idivl
ljmp
pop
add
mov
int3
inc
xlat
xchg
add
sub
sub
jl
popf
xor
pop
sti
out
jl
aaa
mov
test
sbb
out
add
mov
sbb
rorl
xor
inc
icebp
mov
stc
jp
adc
pop
and
jo
or
inc
xchg
dec
in
xchg
cltd
faddl
adc
scas
push
cs
movsl
stos
push
or
push
cmp
jb
add
popf
ret
push
mov
leave
pop
mov
xchg
sbb
daa
imul
cmc
jno
inc
in
push
adc
add
xor
icebp
cld
push
xor
jmp
add
inc
sbb
add
push
jmp
call
jmp
jmp
and
cmp
in
adc
shlb
inc
ror
jge
lods
imul
mov
and
out
test
int
sub
loopne
cmp
or
cld
in
sbb
imul
dec
in
xchg
dec
adcb
cld
clc
and
inc
add
add
inc
xor
hlt
ljmp
jnp
add
or
divl
jnp
or
cmp
add
add
inc
cld
jmp
pop
es
std
test
lods
or
data16
add
jne
add
cmp
out
jp
sti
add
dec
cld
std
out
iret
add
test
mov
addl
incb
aam
or
cmp
jge
add
sti
stc
out
adc
add
sub
sbb
mov
sbb
inc
stos
nop
mov
mov
push
call
add
popa
xchg
sbb
inc
fmuls
adc
sub
ret
fldcw
incl
jb
inc
jno
inc
mov
xchg
shll
popf
movsb
repz
jmp
inc
adc
pusha
mov
cld
cld
into
testl
jb
inc
inc
jb
sbb
add
add
out
dec
jmp
imul
push
fisttpl
rorl
jmp
mov
jg
dec
push
adc
insb
stos
or
clc
test
iret
add
gs
and
jo
add
pusha
pop
push
shl
ficomps
fsubrs
das
xchg
push
adc
jns
or
das
sbb
pop
out
and
jmp
mov
or
cwtl
jl
jmp
les
jne
add
pushf
inc
add
rclb
mov
lret
xchg
in
in
ljmp
jl
rcrl
in
ss
add
lods
ljmp
sub
in
out
add
sbb
sysenter
xor
add
xchg
testl
fstl
in
cmpsb
adc
je
add
pop
adc
add
jmp
sbb
loope
add
testl
cli
add
or
test
mov
inc
pop
sti
jl
or
cmp
or
or
adc
add
inc
add
xor
xchg
je
mov
push
je
mov
sbb
adc
add
lret
or
rol
inc
sbb
in
push
ret
add
cld
in
dec
lret
add
out
in
ds
sbb
std
and
mov
pop
out
fadds
das
js
pop
out
inc
sbb
std
adc
adc
sbb
add
fldl
adc
or
out
mov
pop
arpl
push
in
mov
inc
out
test
jbe
lcall
out
push
out
add
lods
add
cld
roll
add
add
adc
sbb
adc
sbb
pop
adc
rorb
arpl
imul
inc
xor
into
inc
filds
stc
out
add
pop
adc
mov
or
imul
sbb
push
icebp
cs
call
xchg
aas
andb
xor
clc
push
jae
mov
aad
call
push
pop
xorb
arpl
daa
cmp
out
jmp
adc
shufps
or
jmp
sbb
and
add
testl
adc
inc
jae
in
insl
adc
addb
fucomp
std
push
loopne
or
sub
fwait
inc
or
sbb
jae
jmp
cmc
add
cmp
mov
or
mov
shufps
out
insl
jmp
or
inc
push
mov
inc
addb
adc
sub
repnz
xorb
dec
lds
jmp
sbb
cmp
pusha
sub
lret
jmp
add
pop
add
xor
fiadds
orb
cmpl
push
or
mov
int3
pop
add
cmp
fldl
nop
and
xchg
repnz
jmp
inc
add
sbb
ret
adc
lea
jmp
xchg
cmp
adc
xchg
add
mov
lret
adc
out
pushf
sbb
adc
jecxz
sahf
xchg
icebp
and
out
ror
sti
call
rorl
lock
add
mov
or
sti
and
imul
outsb
jo
add
adc
pop
inc
and
cwtl
or
add
in
pop
xchg
fisubrl
lea
adc
mov
mov
push
add
inc
or
jno
cmp
push
test
adc
in
unpcklps
imul
faddl
cmpb
call
out
adc
ret
andl
loop
rcrb
jmp
mov
sti
xchg
sub
inc
call
pop
adc
xorb
cld
cmpsl
dec
jecxz
push
mov
add
xchg
sub
xorb
in
cs
ljmp
or
xchg
xchg
sti
loop
bound
push
aam
addl
push
movb
in
stos
push
add
mov
push
std
sub
add
aas
rclb
adc
xchg
push
mov
xor
nop
inc
adc
std
sub
testl
sub
add
iret
jmp
idiv
push
cwtl
testl
loopne
stc
mov
inc
ret
add
jmp
cld
ljmp
adc
add
add
mov
les
insb
add
add
js
call
jg
adc
add
inc
pop
jmp
inc
add
ret
pop
je
insl
jmp
or
add
ds
xchg
les
push
bnd
add
jmp
mov
jmp
mov
adc
add
out
les
out
xchg
adc
lret
loopne
or
jmp
or
loope
mov
mov
aaa
and
push
ret
mov
lret
inc
jmp
add
stos
loope
and
adc
inc
add
cli
pop
cmp
xchg
shrl
push
adc
rol
jmp
int3
sbb
add
pop
ljmp
adc
outsb
ret
jmp
mov
sbbl
push
or
jmp
scas
cld
add
ljmp
or
jmp
mov
subl
adc
imul
add
adc
rorb
into
cmp
pop
inc
jmp
or
adcl
adc
nop
push
adc
jmp
int
addb
add
sbb
js
in
insl
aas
andb
mov
cld
pushl
push
add
inc
stos
add
fstp
inc
add
jg
adc
add
movsb
int
pop
idivl
popf
insl
pop
xor
or
jecxz
add
xchg
add
insl
xchg
mull
pop
pop
je
pop
adc
inc
pop
adc
outsb
jo
add
mov
inc
and
mov
or
data16
add
and
out
stos
push
mov
int3
addb
dec
mov
mov
sbb
adc
sub
add
cld
xchg
sbb
add
and
add
cmp
test
lds
cs
adc
add
mov
sahf
test
and
mov
cld
jnp
stc
push
add
add
xor
sbb
repnz
mov
mov
inc
pop
imul
mov
inc
push
call
and
or
lret
pop
adc
mov
xor
and
bound
sub
ret
sub
mov
mov
adcl
dec
add
add
add
imul
pop
out
test
lock
movsb
add
jmp
jmp
andl
or
add
mov
xchg
add
jmp
hlt
pop
in
adc
or
cmpl
mov
aas
adc
jmp
call
or
mov
pop
adc
ret
cmpsl
add
adc
std
and
xchg
sub
push
add
adc
add
test
std
add
rolb
aad
test
mov
cld
jb
pop
xor
and
out
js
mov
push
mov
in
daa
xchg
mul
add
or
ljmp
pop
fadds
sbb
adc
stc
or
test
out
test
in
push
cmp
je
andb
mov
adc
add
xor
add
fisttpll
or
jnp
jg
int
dec
mov
mov
call
sahf
fimuls
fcmovb
inc
or
out
flds
add
add
andb
add
into
pop
ret
add
in
cld
add
add
push
or
incl
add
dec
add
add
test
jg
cld
add
cmp
xchg
inc
add
xchg
stc
add
lret
adc
adc
or
adc
test
push
mov
icebp
gs
mov
xor
add
add
out
inc
pop
gs
add
out
cld
jae
mov
cs
sti
ficoms
add
xchg
iret
pop
stc
mov
add
dec
push
push
ror
adc
icebp
rcll
add
xchg
cmp
adc
fnstsw
jg
out
xchg
repnz
outsl
cld
clc
mov
dec
push
add
add
or
cmp
add
inc
adc
ja
dec
xchg
add
jg
adc
cmp
adc
add
or
add
adc
add
fcoml
incl
pop
mov
roll
cwtl
jae
mov
and
add
mov
push
jecxz
test
inc
sbb
loope
fmuls
push
xchg
or
and
cld
push
push
push
adc
push
sbb
cld
ds
out
mov
gs
pop
fiadds
xchg
addl
add
mov
add
pop
adc
pop
adc
negb
mov
fadds
or
push
add
icebp
jns
jecxz
adc
ret
inc
xchg
pop
shrl
inc
add
mov
and
pop
adc
pop
sldt
pusha
shll
add
lahf
std
in
push
ret
call
pusha
rorl
test
sti
mov
jge
dec
push
repz
cli
jecxz
addl
sbb
clc
mov
enter
rorb
mov
enter
mov
adc
add
add
mov
jle
mov
std
adc
add
jnp
cld
jae
or
dec
add
insl
jmp
inc
add
jmp
or
mov
jno
jb
push
cmp
cmp
mov
or
inc
in
aaa
out
in
add
jg
cld
mov
out
jp
add
push
or
adc
sarl
adc
cld
sbb
out
incb
test
add
test
out
adc
jo
cld
mov
and
mov
add
addb
xchg
jnp
clc
mov
test
add
dec
fstpt
xchg
hlt
and
js
out
ror
lods
add
jmp
add
jb
or
jmp
dec
add
sbb
jb
fidivrs
mov
xchg
loope
popa
add
fldt
sbb
dec
mov
push
cli
leave
bound
mov
aaa
add
arpl
mov
xchg
dec
pushf
sub
sbbb
aam
adc
adc
int
addr16
insb
push
and
cld
aad
jb
rcl
fs
add
and
add
mov
imul
inc
jp
pop
sti
or
sub
out
jmp
xchg
pusha
and
sbb
adc
shl
add
inc
add
dec
inc
and
dec
cmc
cmp
cld
and
fsubrs
pop
or
rolb
mov
iret
add
sbb
and
and
sbb
lret
decl
dec
inc
pop
leave
xchg
or
push
pop
adc
stos
daa
jnp
add
mov
ret
mov
repnz
mov
inc
adc
lods
insb
add
add
inc
adc
popf
inc
add
add
inc
adc
pop
xchg
jbe
adc
xchg
or
adc
sbb
add
frstor
add
and
lock
push
xor
aam
add
jp
call
mov
sbb
ds
xchg
jmp
jl
add
or
xor
rcrl
mov
and
mov
inc
jle
sub
cmp
pop
inc
stc
mov
jo
stc
divl
lock
ret
mov
sub
add
sahf
movsb
adc
in
ljmp
imul
pushf
sub
xchg
cmp
jge
add
jge
add
call
shll
jge
sub
jg
sbb
adc
sub
jno
fs
pushl
dec
and
pop
dec
jb,pn
sbb
mov
sbb
or
int
add
xchg
mov
sti
xchg
or
xorps
out
out
std
push
outsb
xchg
jnp
call
je
ljmp
lret
notl
jb
sti
leave
cmp
fdivrp
mov
mov
sbb
jno
imulb
cmc
dec
or
cmpsb
xchg
push
adc
mov
rorb
jmp
sbb
test
mov
int3
xchg
out
xchg
adc
insb
adc
xchg
xchg
xchg
xchg
xchg
mov
mov
xchg
mov
rorl
adc
mov
add
mov
pop
add
mov
pop
sbb
add
pop
sbb
fcoml
sbb
sti
add
jg
add
jg
add
sti
add
jg
add
jnp
in
jnp
or
js
add
nop
jnp
pop
mov
cltd
mov
loopne
jnp
mov
jnp
or
jnp
sbb
jnp
inc
jbe
add
ret
add
mov
add
sti
add
xchg
sti
add
xchg
sti
add
cmp
sub
movsb
daa
add
lahf
daa
add
lahf
daa
add
lahf
daa
add
lahf
daa
add
lahf
daa
add
lahf
daa
add
lahf
cmpsl
add
lahf
cmpsl
add
sahf
cmpsl
add
sahf
cmpsl
add
sahf
cmpsl
add
popf
cmpsl
add
adc
xor
mov
js
push
jb
stos
aas
adc
add
or
jo
xchg
es
ljmp
ret
sub
jg
mov
jg
mov
jb
cld
lock
test
pushl
push
fiaddl
shll
mov
add
sbb
addl
icebp
push
adc
fadds
rorb
movb
add
sub
test
and
or
adc
ss
aas
push
test
lret
notl
push
sbb
aaa
push
orl
add
setno
push
xor
xchg
in
push
pop
xchg
test
xchg
adc
lcall
add
lods
mov
je
nop
negb
call
lret
cld
push
add
cli
lret
pop
xor
out
push
mov
dec
jmp
push
shlb
or
push
jnp
sti
xor
adc
inc
and
popf
pop
jno
sbb
clc
add
jne
sub
in
or
cmp
cmp
sub
mov
push
pop
leave
sahf
pop
xchg
scas
loop
push
add
out
mov
inc
xor
clc
sbb
jecxz
and
jmp
call
mov
pop
inc
outsb
lret
dec
push
mov
add
add
add
xor
aam
insl
push
std
icebp
loopne
inc
add
mov
mov
push
push
push
push
in
call
cld
repz
add
inc
data16
inc
mov
out
xchg
add
add
hlt
jg
adc
test
fnstenv
adc
push
inc
out
mov
adc
push
call
or
fistps
add
mov
sub
jg
in
jecxz
jo
pop
fists
jecxz
sbb
testb
inc
add
push
jecxz
es
fistpl
imul
xchg
iret
mov
mov
or
addl
cmp
pop
leave
lcall
jge
jae
js
clc
inc
xchg
push
cld
cmp
inc
cld
inc
push
arpl
es
adc
stos
add
bound
xchg
jecxz
mov
aas
das
popf
mov
jmp
add
xchg
dec
int
mov
cmp
mov
pop
icebp
cmpsb
inc
or
outsb
cmp
mov
mov
cld
movl
jecxz
call
es
out
inc
icebp
in
add
out
ljmp
jnp
mov
and
inc
inc
enter
mov
or
rolb
add
add
incl
sbb
aam
in
add
fldl
mov
call
cmp
cld
push
ficompl
cmp
pop
lret
cmp
insb
dec
mov
adc
ljmp
incl
mov
mov
jns
mov
dec
jae
add
add
jp
pop
dec
ja
mov
and
fisttpl
std
cmp
rorl
sub
push
std
and
cwtl
movl
fidivrs
sti
inc
push
and
xor
add
mov
lock
inc
push
or
mov
mov
je
push
lea
les
call
cs
push
add
inc
and
out
insb
and
add
sub
add
adc
mov
cld
push
icebp
pop
enter
sub
out
aam
jne
add
xor
fisttps
out
or
mov
fidivs
cmp
arpl
outsb
push
lock
add
daa
in
out
add
daa
inc
add
insb
add
lahf
es
push
imul
aaa
cltd
push
test
popa
add
gs
adc
push
pop
jmp
lods
xchg
push
xchg
push
jo
lret
xchg
adc
and
xorl
push
mov
xchg
push
hlt
cmp
and
cmp
jb
sub
roll
call
add
out
out
cld
pusha
inc
rolb
je
ret
je
dec
pop
dec
rorb
adc
pop
mov
dec
cmp
out
or
shrb
mov
in
into
in
mov
test
cwtl
pop
cld
adc
mov
pushl
mov
or
jnp
adc
mov
out
jns
sbb
adc
lock
inc
dec
inc
lock
out
cmp
out
mov
mov
add
cld
lcall
adc
or
xchg
test
jno
jne
fdivrp
push
jmp
shlb
fsubrs
add
les
cld
mov
pop
das
hlt
mov
jmp
cs
add
xchg
xor
or
xchg
inc
add
add
gs
add
data16
lods
add
lea
mov
scas
inc
clc
sbb
push
add
shll
inc
hlt
jg
call
std
push
mov
dec
hlt
jecxz
in
sbb
ss
lock
neg
cmp
pop
sbb
add
push
lods
or
adc
mov
out
xor
adc
add
cltd
es
add
imul
mov
sbb
sbb
jecxz
inc
ret
jl
jecxz
mov
xor
fcomi
inc
fisttpl
cmpb
fldt
pop
ss
imul
pop
adc
jg
inc
aad
dec
or
in
mov
out
xchg
pop
cmc
push
lea
add
adc
add
push
bound
inc
pop
lock
rcr
adc
push
repz
cmp
add
call
outsl
fbld
dec
cld
lds
mov
jae
cmp
lahf
dec
mov
subb
jnp
dec
pop
call
aas
xor
mov
mov
repnz
fld
bound
mov
cmp
fs
inc
sub
add
mov
xor
push
notb
xor
in
lds
push
pop
jge
or
fdivrp
mov
mov
push
sub
add
das
rclb
pop
pop
cs
add
data16
or
sti
lock
xchg
bnd
push
sbbl
data16
popa
add
mov
xchg
jp
fnop
adc
subl
pop
pop
sahf
out
xchg
sub
push
xor
adc
lea
fdivs
push
mov
sub
add
sub
pop
xor
stc
imul
dec
or
lods
add
xor
jb
cmp
sub
cld
jnp
inc
cmp
rorl
mov
mov
inc
sbb
dec
fdivr
inc
xor
jl
sub
and
inc
dec
and
in
cld
and
jge
fwait
mov
adc
les
movb
xor
and
adc
inc
add
sbb
xchg
xchg
xchg
or
adc
test
add
scas
fadds
and
adc
sub
les
mov
cld
gs
sub
adc
aam
jmp
adc
add
jmp
mov
or
xchg
mov
sub
xlat
sbb
out
add
and
push
add
xchg
mov
pusha
sub
add
jae
sbb
fimull
jo
shlb
fdivrs
sub
mov
ljmp
adc
jl
or
inc
adc
and
into
mov
cld
push
add
fdivrs
cmp
cld
insl
inc
inc
sbb
pop
mov
aaa
ljmp
xchg
sbb
ljmp
arpl
std
sub
mov
jle
hlt
add
std
add
dec
add
iret
xor
and
push
pop
adc
mov
cld
pop
shll
sbb
inc
adc
add
adc
push
pop
mov
mov
sti
call
add
xor
add
mov
xchg
push
addr16
add
out
ror
xchg
mov
add
in
mov
inc
lods
fs
add
add
stos
hlt
roll
and
push
sub
add
add
mov
cld
sub
mov
sar
jge
cld
mov
gs
bound
addr16
punpckhdq
sub
adc
ljmp
lods
xor
addb
fucomip
sbb
add
lods
das
push
and
dec
pop
sahf
adc
xchg
popa
aaa
aad
aaa
cmc
inc
add
stos
pop
xchg
xor
lea
mov
stos
sbb
call
fwait
cmpsb
jg
inc
fcomps
inc
or
add
je
and
aad
sub
inc
add
mov
add
andl
sbb
addr16
clc
adc
inc
push
ss
xchg
lods
inc
les
mov
sub
repnz
out
inc
pop
fs
mov
lcall
out
cld
out
jp
jle
xchg
mov
push
and
test
xlat
es
lods
add
inc
sahf
add
mov
in
xor
sub
aas
push
imul
xchg
or
inc
outsb
add
sub
bound
fisttpll
mov
fcmovbe
aaa
ljmp
dec
loope
lods
mov
jmp
roll
add
xchg
and
cmp
add
dec
adc
cld
mov
fildl
add
out
and
mov
cmp
pop
push
add
push
adc
mov
add
inc
gs
adc
push
rorl
test
dec
adc
into
xor
pop
adc
jge
pop
cmpsb
ja
add
cmp
jmp
xor
das
fistl
jmp
call
or
add
inc
add
call
loopne
add
ds
inc
xchg
cmp
jb
pop
scas
insb
pop
add
fwait
or
stc
es
jae
pop
or
and
xor
sbb
or
cld
and
or
cmp
jne
inc
ljmp
xchg
shl
sub
add
adc
clc
add
lret
xchg
push
adc
jge
pop
push
sub
or
decl
dec
sub
sub
lret
mov
lods
ret
mov
dec
repnz
out
movl
adc
fists
cmp
cmp
popf
aam
jg
rorb
xchg
jne
test
outsb
mul
and
jle
or
mov
leave
imul
js
inc
add
adc
insl
inc
inc
cmp
push
mov
mov
mov
inc
sub
scas
mov
rcrl
mov
aas
jge
out
dec
jge
call
cld
mov
into
lret
sub
inc
idivl
stos
cmp
sub
push
shll
insb
incl
push
test
dec
shll
push
movsl
mov
cmp
sarl
call
cld
mov
push
ret
test
jg
pop
pop
xor
jl
fstp
aas
add
xor
outsl
icebp
inc
add
cli
adc
lods
and
jne
fsts
pushl
movb
test
iret
add
cmp
adc
fists
pop
test
adc
fwait
sti
jmp
mov
adc
cs
mull
mov
push
pop
or
cli
les
insb
fwait
push
add
add
push
adc
insb
add
gs
dec
jae
add
cmc
add
xlat
scas
ret
lods
bound
pause
add
lret
mov
scas
xor
push
mov
or
xor
adc
jge
stos
push
adc
pop
or
lret
shlb
inc
sub
add
pop
out
pop
sub
xor
add
mov
aas
add
in
addr16
add
cmp
xor
inc
decl
data16
fdivr
orl
out
add
xchg
lds
add
pop
add
movsb
test
cmp
pop
movl
mov
xlat
jle
notl
int3
xor
jb
fcoms
jmp
sub
lds
pop
sub
out
jge
mov
outsl
or
add
pop
idivl
cmp
inc
add
scas
call
in
imul
jg
add
xlat
mov
pop
inc
pop
or
add
movsb
or
add
push
xchg
out
rcrb
pop
or
inc
ret
gs
adc
data16
sbb
or
mov
hlt
imul
lea
cmp
ret
bound
or
test
sbb
test
cltd
inc
or
dec
sarl
jle
sbb
fdivs
or
add
int
jg
adc
jno
xor
xor
cmp
inc
pop
mov
nop
cli
incl
sub
sbb
mov
cmpsb
popf
add
mov
jge
les
push
adc
adc
lcall
mov
sti
jne
xor
mov
jg
faddl
mov
jno
lds
ljmp
pop
add
pop
int
lock
aad
cwtl
roll
or
xor
aas
add
dec
insl
xchg
hlt
xor
ror
add
std
daa
dec
ror
push
jne
ss
mov
pop
or
xor
add
mov
dec
cmp
sbb
add
xchg
push
faddl
les
xorl
add
add
imul
rclb
leave
jl
repz
sub
pop
add
adc
sbb
filds
pop
ljmp
or
or
subl
leave
stc
sbb
sti
mov
push
call
repz
jmp
add
pushf
sti
lods
sbb
leave
enter
pop
adc
jl
xchg
add
add
cmp
add
cmpsb
dec
jo
sub
clc
inc
push
in
mov
or
adc
adc
mov
es
push
clc
adc
inc
push
addl
out
inc
les
std
aad
hlt
out
mov
xchg
fdivrs
aas
push
ss
xchg
mov
in
add
push
add
and
adc
adc
adc
jge
fwait
dec
cs
pop
adc
pushf
sub
add
lret
add
inc
adc
push
and
jb
std
aam
sbb
inc
sbb
inc
adc
sbb
adc
add
sub
pop
pop
clc
call
jge
jno
add
aam
xor
sti
pop
ljmp
adc
inc
and
pop
mov
jne
jno
and
lcall
mov
inc
sub
xlat
or
sbb
add
sub
sbb
sbb
adc
test
shrl
repz
ds
jecxz
lds
fcmovne
je
inc
mov
xchg
inc
mov
jle
cld
jge
adc
add
add
xor
push
or
aaa
shll
and
dec
dec
jle
or
cli
mov
xorb
in
dec
push
movsl
add
mov
dec
aaa
or
add
lret
inc
add
aas
aad
adc
loope
add
sbb
push
movsb
iret
inc
add
push
xor
lret
stos
imul
mov
inc
stos
cmc
jp
mov
arpl
mov
adc
xlat
inc
add
cmpsb
dec
idivb
out
xchg
stos
add
and
lds
repz
push
push
out
mul
dec
out
pop
pop
cmpsl
add
dec
jb
sub
ret
xchg
js
mov
les
repz
add
popf
js
call
fldcw
test
or
shll
ffree
and
cli
sub
popf
xlat
insb
enter
pushf
and
shll
dec
push
adc
test
mov
pop
roll
in
test
and
cmp
jmp
adc
mov
clc
pusha
call
inc
xchg
mov
stc
push
push
add
loope
adc
xor
lock
data16
rcll
sub
sub
dec
and
dec
xchg
sti
ss
rorb
push
pop
iret
or
pop
addr16
ljmp
add
sti
ljmp
cltd
aas
dec
mov
mov
inc
push
push
add
jmp
loopne
std
nop
sbb
add
gs
inc
or
arpl
out
iret
int3
push
jb
mov
xchg
adc
add
sti
pop
push
imul
sbb
pop
inc
add
enter
adc
inc
dec
std
jmp
dec
clc
xchg
imull
jb
aam
shll
mov
jb
into
shr
ss
in
xchg
sbb
sub
addl
cmp
xlat
xor
jl
jnp
orl
inc
jg
cmc
add
add
mov
addr16
add
ljmp
mov
mov
xchg
pminsw
add
fs
ja
and
push
in
mov
add
push
data16
cmp
cmp
adc
fcoms
popa
loope
lret
roll
adc
int3
adc
mov
aam
sbb
shrb
and
sbb
add
aam
popa
int
sub
add
stos
mov
fmul
jmp
pop
adc
jmp
xchg
sbb
push
adc
sbb
xor
aam
lods
pop
roll
pop
popl
js
or
les
or
push
pop
push
sbb
adc
sub
xchg
ret
cmc
andb
mov
cmpsl
mov
aas
push
xchg
movsl
cld
sahf
mov
std
mov
adc
adc
test
jne
xchg
xor
lds
jl
add
adc
out
shrl
in
clc
add
lcall
lret
pop
add
data16
out
sar
lea
adc
mov
jns
call
push
mov
inc
dec
lea
repnz
ljmp
jno
lea
js
rol
gs
xchg
sbb
xchg
popf
xlat
mov
in
mov
and
push
test
hlt
mov
insb
cmp
xchg
xchg
cwtl
inc
adc
fs
addl
pop
inc
js
add
jbe
xchg
loop
jb
sahf
jne
std
and
aam
ss
scas
mov
lods
std
adc
mov
adc
sbb
aaa
int3
test
and
add
dec
stos
add
mov
out
cld
cmp
ret
pop
sarl
sarl
out
pop
mov
xor
pop
hlt
cld
mov
xchg
jl
notb
adc
add
adc
dec
pop
mov
int3
sbbb
pop
push
aam
inc
xchg
mov
sbb
stos
or
adc
and
movsb
add
mov
enter
mov
pushf
out
or
sub
adc
xor
jecxz
mov
cmp
sbb
add
lcall
les
add
push
shll
outsl
dec
adc
in
adc
movsb
add
mov
add
xlat
mov
shl
inc
mov
pop
adc
mov
mov
testb
mov
hlt
je
out
rcr
push
add
jl
fcoms
shll
les
xchg
fcmovnb
cmp
dec
call
xchg
rcrl
push
mov
lods
filds
add
pop
add
call
push
clc
pop
cwtl
push
lods
pop
adc
add
xchg
adc
and
jb
imul
push
out
lret
add
inc
sti
decl
outsl
frstor
push
mov
mov
out
aad
test
sti
jmp
roll
in
nop
inc
int3
fs
cmp
ficoms
pop
fsubs
push
aam
loopne
das
rclb
adc
addr16
sbbl
insl
mov
mov
add
push
mov
mov
dec
sub
shl
aaa
lret
or
addl
add
sti
dec
std
mov
add
adc
jg
push
stos
add
or
push
call
add
dec
cmc
cld
sub
cs
mov
sub
out
push
ret
mov
test
add
ret
aaa
adc
test
mov
or
and
ljmp
push
push
sub
mov
sub
add
dec
dec
mov
es
jnp
fstpt
sbb
rclb
push
sub
ss
and
xchg
add
bound
jecxz
mov
int3
and
push
out
dec
jg
packsswb
rcrb
inc
mov
jmp
xor
push
and
pop
adc
pusha
fldt
daa
test
push
mov
outsb
cmp
gs
popf
cld
jmp
mov
out
pop
cmp
adcb
inc
mov
gs
sti
insl
mov
adcb
pop
add
adc
sub
lea
std
testb
cltd
mov
out
xlat
sahf
cld
bound
or
sbb
sbb
inc
mov
pushl
dec
in
lahf
sub
jno
xor
stos
push
es
in
std
pop
sti
test
add
push
push
mov
fadds
pushl
pop
sti
call
test
in
jnp
push
xchg
sub
pop
sti
push
repnz
add
fisttpll
addl
js
pushl
cmp
rcrb
roll
fstl
call
sti
test
add
lret
stos
add
jns
mov
ret
sti
mov
hlt
pushf
call
add
fdivrl
ret
pop
xor
sbb
data16
sub
mov
push
std
adc
rorb
jmp
push
lret
sub
cmp
cmp
ficomps
mov
or
or
pop
loop
xor
add
add
mov
mov
sar
shrb
add
pop
ljmp
push
adc
rep
test
jg
daa
ljmp
inc
mov
push
lods
dec
scas
mov
mov
mov
aad
add
xchg
or
dec
lods
lea
adc
ret
pop
adc
andl
push
mov
and
inc
add
sub
xchg
rorl
mov
int
add
cmp
data16
fcoms
out
stos
jno
sub
stos
movl
pushf
punpcklbw
pushf
out
inc
add
mov
add
and
ffree
pop
aas
jecxz
stc
sbb
mov
out
push
adc
inc
out
inc
std
aam
add
test
or
push
sub
pop
adc
and
es
or
outsb
sbb
lods
not
inc
icebp
pop
lods
data16
adc
aam
stos
aaa
jns
mov
adc
add
pop
inc
std
hlt
jecxz
inc
jmp
inc
jno
adc
xchg
inc
cwtl
lea
push
mov
mov
inc
call
lea
clc
incl
lret
sti
lods
outsb
es
popf
push
sti
jne
outsb
cmp
jne
outsb
xor
inc
jbe
pop
pop
mov
or
adc
add
repz
or
push
mov
int
mov
fwait
cld
push
mov
jno
fnclex
xchg
xor
pop
push
xor
push
xchg
out
add
jg
add
mov
lcall
mov
lahf
cwtl
fcmove
mov
fstpt
sub
cmp
ret
repnz
inc
xor
add
sarb
inc
push
dec
shll
mov
orl
jge
add
in
push
adc
or
inc
inc
jl
pop
stos
cmc
ljmp
dec
adc
push
mov
add
add
jae
mov
adc
sbb
adc
bound
or
push
pop
lods
je
add
bound
aam
cmp
in
push
add
cltd
sti
pop
repnz
out
jmp
xchg
mov
std
test
add
dec
adc
push
mov
sbb
adc
sete
mov
and
sub
jge
fldt
mov
sub
push
or
lods
mov
lea
add
jbe
jp
push
nop
xchg
jmp
testl
add
pop
inc
std
aam
aas
jmp
sbb
xorl
outsl
mov
jb
ds
fsubrl
cwtl
out
repnz
pusha
add
ss
pop
adc
dec
and
subl
in
cmp
mov
mov
or
adc
or
jp
or
mov
aas
mov
in
jg
sub
add
cmpxchg
testb
int3
repnz
jne
js
int3
add
jne
js
int3
repnz
rclb
cmp
adc
sub
lds
jg
jns
mov
inc
call
test
xor
clc
decl
je
sti
test
fstl
js
sti
jne
arpl
test
sti
jmp
arpl
xlat
lret
add
scas
cld
inc
mov
scas
cld
jle
dec
jmp
sub
mov
call
cld
or
add
jae
push
call
subb
pop
imul
add
or
inc
mov
add
pop
aaa
and
sti
lods
adc
decl
out
push
add
in
jp
cld
hlt
roll
xor
or
sbb
sub
mov
sti
add
sar
cmpb
jmp
cli
jle
call
iret
sbb
push
nop
es
xchg
movsl
sti
mov
sbb
jmp
fwait
jecxz
std
scas
dec
sub
add
mov
cld
push
add
cld
sub
xor
lods
cwtl
mov
pop
adc
jnp
nop
ret
cmpsl
or
mov
adc
add
cmp
mov
push
push
out
add
std
adc
jns
cld
jmp
arpl
push
inc
loopne
call
or
out
das
inc
outsb
sbb
jmp
loop
xor
lods
ret
jmp
push
inc
imulb
inc
cmp
cltd
cmp
xchg
dec
xchg
dec
xchg
push
call
cld
insl
enter
adc
test
adc
scas
xchg
sti
leave
cmc
pop
adc
insb
cmp
and
mov
jae
outsb
shlb
or
and
scas
into
mov
add
aaa
sub
xchg
push
push
push
imul
jl
jne
push
jns
sub
or
jno
adc
inc
and
shrb
stc
out
or
inc
and
xchg
ret
push
and
push
mov
call
icebp
jnp
call
scas
push
xor
xchg
insl
stos
adc
sarl
call
sbb
and
xchg
mov
mov
inc
mov
mov
jmp
jp
add
aam
xchg
repz
xchg
mov
jp
dec
repz
dec
add
mov
or
push
test
sti
cmpb
add
or
mov
cltd
icebp
in
subb
jg
add
add
ss
pusha
subb
ss
xor
adc
inc
fs
adc
fcmovb
stos
js
ss
test
push
pusha
xchg
arpl
mov
dec
xlat
push
adc
out
jle
push
stos
cmp
xor
imul
jl
popf
sbb
mov
xchg
jb
fildl
adc
js
orl
lock
out
jmp
adc
rorb
cmc
sbb
cmp
ljmp
push
mov
cmp
add
lock
cmpsb
xor
xor
pop
cltd
jb
call
jge
jbe
aad
push
adc
mov
adc
dec
inc
push
js
dec
xchg
and
xlat
pushf
inc
insl
mov
adc
cmc
sar
imul
ret
jnp
jp
repz
cli
add
adc
ss
and
add
jl
ficoms
jp
aas
add
ret
testb
aas
rorb
xor
inc
or
fadds
call
jmp
adc
lret
add
enter
sbb
test
test
inc
and
mov
pop
push
jge
adc
incl
pop
sti
inc
aad
inc
clc
sahf
push
adc
add
outsb
fidivs
call
test
movsb
cld
in
mov
out
adc
lea
mov
stos
xchg
loop
add
icebp
or
lock
or
faddl
mov
std
icebp
aam
inc
add
mov
orb
jp
imull
or
out
sub
out
mov
testl
add
jl
or
mov
xor
aam
out
aad
cld
cmpb
dec
jnp
add
mov
xor
cmpsl
jb
repnz
cld
lea
js
add
adc
jp
sbb
cmp
out
pushf
sbb
cmpsb
test
cltd
insl
sbbl
adc
add
cmpsl
and
jb
andl
add
decl
psubd
sbb
sub
dec
rolb
das
insb
subl
cli
call
mov
xchg
jg
adc
add
aad
mov
mov
ljmp
mov
dec
fwait
dec
jns
dec
adc
add
push
add
aas
call
divb
int
mov
inc
push
xchg
bound
push
xchg
rcrl
pop
mov
jbe
shrb
mov
jle
mov
jbe
cli
popa
mov
in
bound
not
pusha
fwait
lock
xchg
push
call
push
or
jmp
cld
test
push
outsb
out
pop
fiaddl
test
mov
mov
adcb
xor
clc
pushl
xchg
jp
popf
cmp
orl
loopne
std
jbe
leave
inc
lcall
es
add
xor
add
dec
clc
psllw
test
cld
jo
out
add
in
std
ljmp
pop
sti
jne
mov
fadd
sahf
cmp
add
or
mov
dec
fadds
sbb
dec
loopne
lcall
lods
add
add
mov
cld
mov
es
push
lds
add
cmp
mov
mov
pop
cwtl
or
jns
std
dec
test
cmp
add
call
mov
xchg
mov
jb
push
movsb
lds
js
xchg
cmc
cmp
xchg
movsb
jne
pop
into
sbb
mov
push
xchg
dec
jp
sbb
sub
lds
push
add
adc
add
sub
test
or
cmpsl
fmuls
or
fwait
loop
in
mov
dec
aad
test
lods
rorb
mov
add
adc
or
fbstp
test
xchg
cmp
shl
popa
lods
mov
jmp
sbb
mov
jl
loop
lahf
adc
add
cmp
add
inc
cmpsl
and
mov
sahf
adc
pushf
xor
out
mov
add
sarb
subl
and
push
add
adc
add
xchg
sarl
add
into
pop
xchg
inc
or
xchg
jo
xchg
orb
pushf
xchg
fisubl
nop
pop
lds
cmp
xchg
lods
and
call
add
mov
or
and
xchg
fildl
call
add
or
push
jae
mov
cmpsl
hlt
mov
test
outsl
adc
sub
fsubl
and
and
shlb
mov
pop
mov
xchg
jge
test
ljmp
ss
push
test
cmp
xchg
mov
lcall
inc
and
xchg
js
pop
adc
add
push
call
fwait
mov
inc
and
inc
add
out
xlat
sahf
cld
dec
cli
das
and
jne
inc
sub
addl
add
inc
jge
cmp
jno
mov
scas
add
add
lods
repz
test
call
cli
sbb
out
add
adc
xorl
cld
add
dec
add
movsb
sarb
cli
cwtl
push
fsts
aad
xor
sbb
std
scas
xor
rcll
roll
jnp
lcall
roll
inc
daa
stos
xor
or
adc
sub
cli
test
out
test
stos
ljmp
enter
or
dec
add
aaa
lahf
push
mov
inc
add
sub
int3
outsb
add
movsl
xchg
sbb
mov
cli
push
es
or
pop
jg
and
les
in
popf
push
test
mov
or
inc
push
or
pop
mov
sarl
adc
ljmp
jecxz
mov
stos
aas
jmp
add
push
cld
push
jg
pop
sub
adc
je
in
jmp
cli
fisubrs
filds
test
mov
xchg
clc
dec
shl
push
call
xchg
xchg
xchg
lods
jo
xchg
mov
int
mov
cld
add
add
jne
pop
push
jg
push
inc
push
push
adc
add
mov
mov
mov
lret
psllw
in
movsb
inc
cld
lods
movsb
jno
adc
lcall
frstor
hlt
push
adc
mov
and
mov
mov
xchg
mov
adc
jne
mov
incl
mov
jle
mov
add
add
test
pop
xchg
lcall
dec
cmpsb
sub
jb
out
dec
cld
xor
lcall
mov
add
inc
cld
sbb
outsb
cld
add
sti
insb
lea
jl
inc
inc
pop
daa
cmpsl
lea
lods
sub
fwait
mov
imul
mov
add
mov
mov
inc
inc
adc
sbb
fistps
add
add
test
jns
fwait
xchg
daa
dec
idivl
ret
shl
lret
inc
pop
out
jge
scas
push
adc
add
inc
xchg
xor
fstpt
les
mov
insb
push
adc
dec
popf
adc
mov
fimull
fmuls
mov
push
insb
jmp
loopne
fnstcw
add
imul
cmp
lahf
push
mov
test
pushf
or
ud2
sub
jno
cmp
stos
adc
push
xchg
adc
pop
aaa
sbb
in
in
xchg
subl
pop
push
pop
mov
jle
data16
pop
jo
psubsb
arpl
pop
mov
mov
push
cs
call
mov
sub
mov
jecxz
cld
add
inc
jmp
jl
inc
and
dec
push
testl
std
cmp
shl
call
call
lea
inc
call
test
pop
jno
dec
push
bound
insl
adc
test
jl
dec
cmp
outsb
push
bound
pop
xchg
call
in
sbb
roll
xor
or
sbb
add
cmc
mov
push
mov
fisttpll
and
adc
jg
pushf
sti
mov
call
test
pop
mov
insl
xor
pop
scas
pop
cld
add
ret
jae
add
and
clc
pop
and
repz
movsb
rclb
mov
jge
mov
xchg
ret
cld
and
test
inc
out
subb
mov
clc
ret
jae
repnz
or
mov
xchg
add
pop
or
jge
cld
call
adc
xchg
jae
pop
mov
pushf
mov
mov
out
inc
cmp
rcll
jno
sub
push
cmp
adc
lea
mov
mov
jle
xor
xor
add
sahf
jle
push
imul
jle
xchg
aaa
imull
xchg
jg
adc
add
mov
lock
xor
fstpt
ret
add
jb
push
insb
clc
outsb
mov
adc
hlt
aaa
adc
gs
fimuls
mov
mov
mov
pop
cwtl
mov
call
push
int
mov
js
cmc
adc
aaa
out
push
imull
bound
adc
popa
les
adc
mov
and
add
je
imul
int3
out
outsl
cmp
js
cmc
xchg
sarl
int
out
jg
insb
mov
push
xor
push
mov
and
adc
and
cwtl
mov
inc
push
push
mov
mov
test
xor
inc
push
orb
sti
jmp
mov
test
je
adcb
inc
call
push
movsl
cmp
adc
nop
js
sub
je
cmpsb
push
out
dec
data16
jp
sti
push
inc
jns
lcall
mov
ds
cwtl
push
add
add
mov
xchg
cltd
jle
dec
cld
mov
insl
pusha
call
sub
add
xor
mov
mov
cld
aas
lcall
jns
loopne
mov
cmp
movsb
rclb
lock
inc
loopne
xor
and
xchg
cld
jg
hlt
cwtl
push
xchg
jae
jl
push
mov
add
test
adc
add
pop
and
insb
add
mov
outsb
enter
lea
sub
das
out
jbe
adc
jg
or
mov
in
ds
inc
adc
sysexit
insb
mov
nop
test
add
inc
add
fidivs
out
add
lods
ljmp
jg
adc
add
clc
fimuls
xor
fldt
mov
jle
mov
out
pop
or
adc
fimull
add
sub
dec
push
add
add
imul
popf
add
stc
sbb
mov
call
cmp
shll
and
pop
insb
sub
ja
imul
cmpb
rolb
jmp
adc
inc
mov
cld
bound
xor
mov
push
cmp
mov
ja
inc
lds
shr
pop
adc
cmpsl
jns,pt
sub
jmp
lea
and
bound
cld
sbb
mov
add
sti
pushl
and
inc
adc
mov
jl
movsl
sti
xor
stos
pop
ret
push
mov
stc
add
xchg
mov
aas
push
xor
movsl
dec
xor
push
jno
out
mov
insl
adc
add
arpl
push
add
lret
imul
add
sti
call
mov
sti
jmp
shl
push
sbbb
push
sbb
jno
mov
clc
push
mov
push
call
cld
mov
call
push
add
pop
mov
repnz
sub
test
insl
xor
std
cmp
jg
mov
cwtl
aad
insl
add
add
bound
mov
fiaddl
ljmp
add
mov
inc
nop
mov
push
xor
add
xchg
cld
pop
sbb
mov
mov
mov
xor
jb
xchg
data16
sbb
jle
ja
lahf
and
sub
fists
xor
xchg
adc
push
sub
je
sbb
nop
ss
or
xchg
jl
out
nop
ss
inc
inc
or
nop
jbe
push
nop
mov
nop
fmuls
ljmp
pop
jecxz
add
cmp
lahf
dec
jbe
xor
mov
inc
add
pushl
cld
fmuls
pop
add
in
mov
aam
pop
subb
xchg
add
inc
jmp
pop
xchg
repz
js
adc
mov
push
mov
repz
js
adc
mov
enter
jb
adc
jge
cli
xchg
vmovaps
mov
sbb
fmuls
in
loope
test
mov
jmp
adc
add
cwtl
stos
test
pop
ret
push
negl
inc
je
dec
inc
clc
repz
add
ret
inc
inc
or
add
cltd
add
mov
in
adc
pop
lret
in
ja
push
jne
pop
fisttpl
test
gs
xchg
sbb
es
testl
cmp
adc
pop
cwtl
imul
xchg
lock
pop
push
out
fmul
out
push
adc
lea
cld
incl
sahf
push
std
stc
push
idivb
add
les
adc
mov
fidivl
push
scas
fisttpll
roll
xor
xor
dec
mov
jnp
add
xchg
cmp
lea
add
xchg
and
fwait
jge
ret
xor
testl
movb
cwtl
mov
rorl
out
test
mov
inc
push
inc
adc
lcall
mov
out
jae
addl
fadds
rcr
pop
imul
pop
outsl
inc
in
sahf
stos
fwait
mov
bound
sahf
sahf
add
fistpl
lock
xchg
js
jle
pop
xchg
sbb
out
sub
in
add
pop
or
fadd
pop
add
out
push
sub
inc
add
cmpsb
push
pop
mov
ds
outsl
adc
push
xor
insb
inc
pop
andl
add
subb
ret
aaa
add
jo
andl
jb
loop
cmp
add
xor
sub
decb
jb
jmp
jo,pt
insb
in
jb
push
mov
add
jb
jns
cmpsl
nop
jo
stc
jae
xor
mov
insl
fdivl
jmp
lds
arpl
sub
notb
dec
jge
push
incl
std
inc
add
and
add
xchg
pop
popf
push
decl
push
cli
shlb
or
in
adc
cmp
sbb
mov
push
adc
adc
add
and
out
popf
sti
test
add
mov
pushf
or
or
add
add
xchg
or
mov
mov
addl
mov
hlt
cld
arpl
test
stc
daa
add
inc
xchg
push
mov
xor
daa
lock
xchg
add
pop
mulb
lock
pushf
mov
dec
movsb
gs
jp
xchg
jecxz
add
decb
rorl
nop
in
xchg
sarb
mov
mov
addl
mov
jno
mov
mov
push
cmp
pop
cmp
or
add
fistps
or
add
data16
pop
pop
add
scas
pop
xor
cmpl
adc
sub
outsb
sti
lahf
jl
jbe
push
adc
jl
enter
rol
lds
push
popw
ficoms
mov
mov
xchg
iret
jl
out
mov
imul
movsb
adc
mov
addr16
mov
out
test
fwait
inc
or
add
push
fidivs
sbb
dec
pushf
outsb
mov
insl
cld
jmp
pop
adc
stos
inc
xchg
aaa
call
or
jmp
repz
adc
adc
jb
lret
pop
xchg
mov
insl
cld
jmp
pop
adc
lods
mov
outsb
subl
push
or
call
dec
xchg
mov
pop
adc
daa
mov
mov
imul
jb
or
cs
sub
mov
lcall
les
inc
mov
sub
cmp
test
sbb
lea
movsb
in
mov
sti
pop
sti
cmp
ret
push
push
mov
das
call
add
cmp
js
fstl
test
lods
jno
pop
pop
out
lea
pop
pop
push
and
push
push
rolb
fs
mov
insb
std
ljmp
pop
ja
add
jnp
add
stos
mov
out
les
add
add
jnp
insb
jne
repz
cmp
stc
inc
lret
mov
jnp
add
std
sbb
pop
jp
cmpb
mov
cmp
cmc
add
sub
inc
or
shll
add
adc
adc
jp
mov
sti
jge
inc
icebp
jge
inc
jmp
cmc
mov
dec
rol
filds
out
add
psadbw
add
test
jl
pop
xlat
push
jl
fs
nop
push
add
out
cmp
bound
aam
push
xchg
jl
aad
adc
cmpsb
adc
xchg
dec
nop
pop
push
and
not
aam
add
daa
fnstsw
imul
mov
sbb
jge
addr16
xor
add
nop
xlat
imul
ljmp
cmc
mov
jl
mov
push
fwait
lods
outsb
cmp
xchg
push
adc
cs
adc
inc
xor
jmp
shrb
xchg
sub
je
ret
jmp
add
push
insb
push
inc
xlat
push
xchg
inc
aad
adc
sub
push
in
cld
jmp
xchg
sub
and
adc
stc
lods
rolb
insb
inc
out
cmpsb
loope
cmp
int3
xchg
std
jmp
pop
adc
std
lahf
mov
jmp
push
adc
bound
insb
addb
call
inc
or
jo
es
mov
dec
mov
nop
inc
clc
es
cmp
cmp
jle
add
mov
insl
adc
adc
outsl
push
cld
pop
xor
ret
clc
cwtl
call
push
out
xchg
pushf
mov
lcall
push
test
sub
push
jg
test
dec
movsl
pop
sti
lea
cld
in
inc
test
xchg
adc
add
sar
cltd
fstpt
or
add
mov
add
xor
repz
or
add
adcl
mov
divl
cmp
xchg
dec
xchg
hlt
cmc
xrelease
jbe
push
aam
mov
outsb
rorb
sbb
sbb
incb
mov
xorl
or
jl
dec
in
test
pop
adc
add
jns
xor
dec
popa
dec
jecxz
xchg
adc
movsb
or
out
fiaddl
push
addr16
mov
pusha
incb
push
adc
mov
fwait
stos
jnp
xor
shr
cmp
add
jecxz
mov
loope
xor
jp
js
cltd
and
sbb
fsubr
addl
and
add
push
pop
les
xchg
call
fsubs
imul
das
std
pop
jl
jae
mov
adc
jmp
adc
sbb
cwtl
push
call
int
mov
push
adc
mov
ja
jo
orb
jo
fwait
ds
inc
adcl
push
sub
push
add
mov
pop
adc
inc
iret
loop
je
addr16
pop
rol
bound
clc
adc
adc
fwait
test
push
adc
scas
or
lds
xchg
mov
add
adc
add
data16
adc
fstl
dec
push
cmp
data16
fwait
sbb
fstl
dec
push
or
jg
adc
mov
std
lcall
xchg
dec
lea
jae
call
mov
in
inc
popf
xchg
cmpb
add
mov
add
sub
adc
mov
inc
std
lcall
lcall
cltd
inc
and
cwtl
sbbb
mov
incl
rolb
add
popf
addl
add
add
popf
mov
ljmp
add
lods
mov
das
cmp
add
jp
pop
jnp
add
jg
push
lods
test
pop
jbe
push
xor
aas
add
mov
add
je
fdivs
in
jnp
ja
push
cmp
mov
mov
xchg
loop
test
out
add
mov
pop
fildl
fs
in
mov
adc
and
add
push
push
fsubrs
dec
or
mov
out
add
testl
pop
cmpsl
add
adc
jle
xchg
insl
lahf
mov
roll
adc
add
jge
ret
inc
jmp
add
push
xor
add
mov
mov
xchg
mov
loop
pop
subl
dec
out
mov
out
xchg
xchg
std
jbe
mov
sub
cmp
pop
adc
das
ret
pop
lcall
push
fcoml
inc
jmp
pop
adc
or
arpl
pusha
cld
insl
inc
out
bound
and
add
ds
popa
cld
jmp
call
popl
aaa
pop
adc
xchg
push
add
add
mov
filds
lcall
mov
inc
sbb
inc
sti
jne
loopne
clc
fists
mov
ffreep
ret
test
call
inc
in
push
mov
call
clc
lea
cs
lcall
adc
test
or
adc
das
notb
hlt
cmp
cmp
push
fimuls
lcall
add
add
shll
jb
pop
jg
adc
inc
dec
jno
pop
stos
and
sahf
inc
test
stc
adc
out
aas
or
out
iret
incb
imul
add
lea
in
push
add
repz
dec
rolb
mov
mov
jb
adc
add
ljmp
lahf
add
fwait
or
cwtl
adc
clc
imulb
fstps
sub
add
cmc
sbbb
xlat
mov
pusha
aad
cmp
cmp
notb
mov
pusha
out
scas
add
mov
lods
pop
lods
shlb
adc
mov
xchg
call
mov
jb
add
adc
pop
add
adc
add
adc
sbb
mov
mov
jno
add
pop
mov
jp
or
lock
pop
lods
adc
jns
mov
adcb
jb
arpl
subl
adc
sub
fstpl
dec
xchg
pop
cld
bound
outsl
andb
std
xor
loope
mov
lods
pop
push
rol
cld
cmpsb
xchg
sar
ds
push
bound
sti
jmp
decl
call
mov
pop
pusha
xchg
out
push
pusha
cld
insl
dec
jecxz
ds
or
jmp
xor
imul
adc
jecxz
push
or
add
push
xchg
out
add
mov
popf
lock
mov
sti
xlat
clc
adc
add
aaa
daa
lds
shll
movsb
push
clc
push
xchg
inc
add
add
popf
clc
pop
lret
in
dec
xchg
outsb
cmc
cmp
adc
repz
fmuls
push
add
adc
inc
lret
dec
fnstsw
push
adc
add
mov
aad
add
pusha
call
pop
add
xor
imul
ljmp
rorl
shl
jmp
pop
or
jno
int
dec
xor
mov
mov
xchg
lods
mov
testb
sub
les
inc
incb
mov
addl
dec
dec
jg
imul
push
rorl
pop
cmpb
xchg
adc
imul
jbe
mov
inc
pop
cmc
mov
lret
pop
outsb
rcrb
push
sarl
add
pop
jno
add
test
nop
xor
fiadds
inc
jl
jle
xor
lea
loopne
mov
insb
orb
push
ja
movsl
rcr
data16
clc
lea
ds
ds
out
push
mov
mov
call
cmc
sar
push
xchg
stos
decl
pop
cld
jmp
add
nop
stc
push
mov
pop
cld
jmp
rolb
mov
lea
lea
xlat
push
cld
insb
shl
bound
and
jp
cwtl
and
mov
inc
subb
jle
xchg
inc
in
jl
out
dec
pop
cld
push
sti
in
imul
int3
dec
cmp
mov
mov
fs
das
rclb
in
int
sti
ljmp
sti
adc
negl
vmulss
push
mov
call
lock
add
push
call
adc
cmpsb
andb
push
inc
setne
ret
push
add
sbb
lock
fimuls
mov
jno
mov
jae
out
sbb
cld
subl
add
xor
lds
cmpsb
out
jle
mov
ret
stos
cld
incb
and
sub
sub
xchg
divb
push
xor
out
mov
cld
mov
jno
jle
or
stos
data16
add
lea
or
shll
rcrb
cld
add
fdivp
cmp
jmp
push
out
jmp
push
inc
fistl
push
out
add
push
mov
adc
add
adc
dec
or
cmp
fidivs
imul
adc
rol
mov
jb
fcomi
cmc
shl
addb
das
jg
add
iret
stos
imul
jle
mov
jo
aam
jl
jg
add
push
lods
adc
add
cmp
jge
das
outsl
add
adc
daa
mov
add
push
mov
ljmp
or
add
adc
jmp
add
mov
sbb
xor
adc
outsb
and
jmp
add
adc
push
ffree
xchg
cmp
and
xchg
hlt
out
add
push
or
add
rorb
ljmp
xchg
push
cld
jmp
sahf
jg
pop
adc
and
adcb
jp
and
mov
push
test
test
sti
push
pop
insb
push
add
leave
mov
dec
push
dec
mov
or
jno
inc
push
jge
rolb
popa
and
test
pop
sti
fmuls
sbb
flds
call
mov
in
mov
sti
cmp
or
sbb
fnstenv
loop
add
fmull
lcall
add
outsl
add
sti
mov
adcl
pop
mov
pop
out
imul
and
rorb
out
mov
push
adc
ljmp
add
pop
mov
int3
imul
aas
sub
adc
adc
out
jae
jle
and
add
add
jl
add
pop
mov
add
jecxz
add
add
test
imul
xor
add
cmp
bound
std
adc
and
xchg
outsl
add
inc
inc
xor
add
sahf
sub
adc
bound
sbb
int3
out
idiv
push
mov
daa
adc
fldenv
xor
add
bound
add
sbb
xchg
push
mov
aam
jl
push
pop
fcmovnb
pop
incl
pop
bound
adcb
add
and
add
out
cwtl
arpl
enter
jmp
xchg
pop
adc
cmp
xchg
jb
outsb
cwtl
jg
pop
adc
addl
adc
mov
cmc
push
cld
bound
xchg
fdivrs
push
push
cld
jmp
arpl
mov
out
pushf
xchg
subl
rorb
jmp
jae
add
xor
cld
jmp
pop
sbb
adc
sbb
add
pushf
mov
and
sbb
add
pop
add
sub
pop
sti
incl
push
enter
push
xchg
data16
int
sar
push
lods
cld
lcall
test
test
lcall
sar
xchg
mov
add
or
add
lcall
dec
es
adc
addr16
add
sti
xor
out
xor
bound
cld
incl
add
enter
add
inc
add
push
std
cwtl
sbb
cld
aaa
mov
hlt
add
repz
and
pop
popa
push
shrb
sbb
push
inc
add
les
and
imul
addr16
lods
push
add
add
hlt
and
lret
mov
mov
imul
ja
pop
add
add
lock
int3
cld
push
lock
fdivrl
add
mov
push
cld
nop
pop
test
add
inc
andl
imul
adc
jns
clc
pop
add
adc
sub
out
mov
popa
popa
scas
push
cmp
xchg
mov
adc
rcrl
neg
jmp
jno
loopne
or
inc
adc
inc
call
sbb
loopne
push
lock
shl
jl
dec
scas
jge
cmp
inc
adc
xchg
push
push
and
pop
stos
push
sbb
testl
push
out
xchg
jmp
pop
or
sub
loopne
mov
adc
ret
inc
fstl
leave
jmp
rclb
add
xchg
cmc
xor
aad
subw
sub
xchg
mov
adcb
scas
lcall
sahf
cmpsb
cld
data16
dec
mov
cld
push
xlat
pushf
inc
fisttpll
sar
jb
ss
pop
adc
xor
lret
push
ret
int
insb
pop
add
popf
aas
cmc
lock
pop
call
pushl
in
pop
mov
push
lea
outsb
cld
dec
cmp
insb
push
in
pop
xchg
cwtl
rorb
add
es
mov
push
dec
in
and
pop
pop
xchg
aad
add
or
inc
mov
incl
sub
cmpl
and
mov
or
mov
lea
dec
mov
push
call
ret
ljmp
add
inc
add
jnp
mov
jnp
mov
rcll
clc
mov
xor
sub
insl
addl
lock
lds
cld
xchg
inc
pop
int
cmp
jnp
in
ss
cld
sti
ret
inc
xor
test
add
mov
xor
mov
negl
inc
add
filds
xlat
sti
movsb
inc
inc
cmp
mov
sti
push
sar
vmovlpd
fucomi
adc
out
outsl
lahf
stos
push
add
adc
pusha
sbb
out
add
out
mov
pop
out
add
pop
xor
insb
xchg
adc
dec
mov
lcall
cmp
out
add
sbb
push
lahf
xor
dec
dec
repz
inc
lcall
xchg
or
dec
push
cmp
add
add
inc
icebp
add
incl
js
fisttps
xor
adc
mov
lock
jmp
ss
push
sbb
addl
pop
or
stos
dec
xchg
adc
xorl
call
out
and
bound
hlt
sti
dec
or
adc
add
or
int
les
mov
mov
adc
and
inc
dec
add
or
lods
out
sub
mov
sbb
inc
in
aas
pop
add
inc
xchg
outsl
movb
pop
call
test
adc
inc
pop
mov
push
push
add
push
fldt
or
mov
clc
out
push
cld
imul
push
jg
leave
sbb
addl
add
mov
and
je
and
bound
arpl
scas
xor
loopne
pop
fstl
sbb
cld
cmp
andl
jns
sbb
insb
pop
sbb
add
ds
mov
ja
add
add
inc
mov
mov
pop
pop
cmp
cmp
dec
inc
call
mov
in
and
or
mov
das
rep
lret
jae
mov
sbb
jae
into
adc
jo
pop
adc
shll
add
sub
cmpsl
add
xchg
add
inc
add
adc
js
jecxz
hlt
mov
mov
lahf
out
add
daa
pop
test
out
jg
into
pop
add
jbe
mov
jmp
jl
outsb
add
jecxz
vmovhpd
daa
add
shl
mov
mov
aaa
insb
sbb
popf
arpl
sbb
leave
test
pushl
fwait
dec
loope
jle
push
gs
add
mov
in
out
icebp
inc
cld
sti
inc
cmp
ja
mov
imul
or
insl
enter
dec
dec
mov
fsubp
negb
inc
cld
gs
jb
adc
cld
jmp
cmp
cmp
adc
cmp
mov
push
pop
adc
dec
shr
pop
xchg
jmp
mov
push
bound
je
popf
pushf
xlat
add
adc
dec
lock
ja
or
sub
inc
add
std
mov
ja
adc
shll
mov
push
jmp
push
inc
insl
hlt
add
pop
adc
dec
push
cld
je
inc
sti
adc
xlat
int
pop
cmpsb
mov
or
sbb
mov
es
sbb
sbb
inc
add
and
sti
adc
psrlq
fimuls
sti
adc
outsb
cli
jmp
sldt
xchg
lds
out
sbbl
and
ret
addr16
inc
call
cmp
ljmp
dec
sbb
icebp
pop
idivb
add
iret
and
mov
fcomps
mov
cmpsl
mov
xchg
jns
data16
or
sbb
psubq
mov
gs
sub
les
in
inc
out
sub
mov
mov
icebp
in
aas
add
xchg
inc
and
ret
add
fcoms
fcoml
cmc
imul
rcrb
adc
or
inc
ljmp
cltd
data16
inc
out
popa
popf
out
add
or
out
aad
mov
jmp
inc
out
add
add
push
xlat
or
add
add
dec
fimuls
insl
fs
cmc
and
add
in
sub
add
rorb
or
fbld
dec
push
cmp
lret
adc
push
pop
cmp
lods
cmpsl
inc
cld
bound
shr
add
sub
push
push
push
jb
xchg
jge
pop
rcrl
scas
adc
mov
inc
std
or
push
cmp
fs
ret
inc
out
rorl
cltd
dec
fld
into
dec
in
adc
adc
inc
pop
sub
aam
sahf
xor
inc
mov
or
xchg
push
andl
mov
std
mov
add
pop
int
push
out
pop
add
aas
xchg
push
jo
or
sub
inc
sbb
scas
pop
mov
leave
inc
mov
jecxz
and
loop
add
repz
aam
in
jmp
add
imul
dec
lcall
push
xchg
addr16
inc
insl
loop
add
xor
mov
jmp
dec
fiaddl
cs
add
and
adc
jmp
incl
pop
call
adc
mov
xor
push
jg
imul
jp
xor
jns
test
add
sub
ret
stc
jecxz
add
adc
add
add
inc
pop
movl
enter
aam
add
aam
mov
lret
add
mov
add
shlb
test
pop
add
xchg
mov
and
xchg
sbb
mov
jecxz
insb
int3
shl
cmp
leave
or
notl
sub
mov
lods
pushf
je
mov
pop
test
mov
out
outsl
dec
lea
mov
lds
sbb
pop
mov
popl
push
mov
adc
push
pop
inc
out
and
add
mov
loopne
push
out
fnstsw
cld
divb
and
mov
dec
sbb
test
call
sub
xor
xchg
fiadds
imul
pop
mov
enter
rcr
fs
cld
jmp
cmp
call
jb,pt
ds
lods
mov
adc
in
mov
aad
aas
cld
rorb
jns
adc
xchg
add
jp
pop
aas
je
xor
shlb
inc
pop
add
imul
inc
stos
xor
cmp
mov
add
mov
mov
adc
jmp
popl
push
test
lahf
dec
push
out
or
or
mov
cld
mov
in
addr16
test
or
mov
pop
push
xorl
adc
gs
pushf
pop
add
aaa
inc
add
cli
mov
filds
inc
jnp
call
aad
mov
inc
enter
aaa
aam
les
or
dec
push
xor
mov
faddl
mov
inc
hlt
sub
out
out
xchg
int3
sbb
pop
or
or
xor
test
in
cmpsb
add
imul
inc
adc
int
jge
arpl
imul
dec
adc
mov
mov
adc
add
xlat
lret
ret
sub
and
mov
repnz
or
push
les
cmp
adc
add
dec
mov
call
push
mov
iret
dec
aam
mov
addr16
jecxz
psraw
stos
adc
add
sbb
mov
lahf
sub
jo
cmp
mov
scas
mov
idiv
jle
fdivl
lahf
cld
fstpt
lods
sar
call
add
inc
cmp
jnp
rol
testl
rcll
push
ficoml
jnp
add
sbb
xrelease
push
adc
out
jmp
jo
and
call
aam
mov
pop
inc
xor
dec
xchg
inc
fnstsw
pop
fidivs
jge
pop
push
shr
out
pop
xchg
jmp
adc
add
adc
call
in
and
insl
adc
or
inc
sub
insl
adc
rolb
shrl
test
in
and
test
sub
in
rcrb
jge
adc
sbb
pop
add
in
mov
mov
imul
and
adc
test
lahf
xor
xchg
ret
aad
add
mov
add
xlat
aas
add
add
int
fldenv
add
cmpsl
jge
add
sbb
dec
xchg
sub
int3
daa
jg
sbb
mov
int3
or
xor
add
out
ds
imul
jmp
add
lea
mov
add
and
mov
push
push
mov
pop
jle
adc
clc
jle
mov
repnz
pop
jb
arpl
push
add
and
add
and
inc
mov
lret
jle
push
sub
mov
sub
push
sub
adc
add
push
mov
sub
test
cmp
add
daa
and
jl
mov
mov
mov
adc
mov
lea
jmp
push
fisttps
pusha
cmp
lcall
cmp
cld
jmp
jecxz
cld
jmp
mov
lds
push
aaa
call
jmp
adc
xor
cld
jmp
add
xchg
call
pop
adc
jmp
pop
or
imul
sbb
pop
ror
call
aaa
andb
pop
adc
sahf
pop
add
add
or
je
in
clc
es
or
fsts
add
pop
aas
xchg
negb
mov
str
add
jne
fdiv
xor
in
pop
in
add
nop
mov
push
mov
fiaddl
add
bnd
mov
call
popa
shll
push
adc
add
push
lock
add
fstl
dec
lock
jle
sbb
add
mov
out
scas
add
mov
push
add
add
or
adc
cmp
jb
ret
insb
cmp
pop
mov
idivl
push
push
dec
pop
push
jb
adc
scas
call
clc
xor
adc
sbb
add
dec
and
stc
mov
push
roll
push
fsubl
pop
sub
add
adc
mov
push
sbb
cs
divl
daa
add
aaa
shll
aam
jl
sub
ret
xchg
jns
cmc
mov
mov
jnp
xor
add
add
xor
add
adc
cmp
xchg
popa
sub
int
flds
aad
lods
jl
fwait
inc
pop
adc
jle
out
pop
sbbl
ljmp
xor
aam
mov
pop
pop
repnz
add
cmp
push
cmp
jo
test
xor
pop
adc
sbb
rolb
lret
xor
stos
pusha
xor
mov
cmpb
push
adc
jb
sub
pop
pop
adc
sub
imul
xchg
fists
aam
or
inc
xor
add
shrb
jecxz
cmp
rorb
mov
les
dec
aam
pop
jge
cli
add
les
stos
sti
ljmp
or
aam
shlb
js
xchg
les
lea
mov
jmp
mov
testb
cmp
cmc
inc
cmp
loopne
js
ret
incl
dec
in
adc
mov
jo
mov
jmp
mov
adc
adc
cmp
push
mov
add
hlt
cld
inc
sbb
push
aaa
movl
jle
add
jnp
push
jb
outsl
mov
int3
cli
roll
movl
mov
mov
icebp
push
mov
cmp
xor
pop
xchg
sub
out
xor
stos
pop
xchg
aad
inc
cmp
push
jg
mov
mov
in
call
push
mov
fcoml
arpl
add
jns
sub
jge
xor
addr16
sbb
pushl
xor
scas
cld
xchg
adc
or
test
adc
ds
scas
dec
pop
test
pusha
add
adc
add
lahf
imul
popf
mov
neg
and
xor
jnp
ds
adc
frstor
jb
add
imul
mov
inc
negl
push
mov
add
sti
xlat
adc
das
mov
xor
mov
mov
dec
not
fadds
inc
xor
insb
pop
das
cld
fidivs
xchg
add
cmp
sti
inc
xchg
mov
imul
pop
inc
insl
pop
rcrb
hlt
cmp
cmp
jmp
push
cmpsb
push
aas
and
js
or
test
jp
pop
mov
dec
ret
adc
xor
push
or
lods
push
loope
movsb
add
mov
xor
push
cmp
testl
pusha
xor
add
vmovaps
push
mov
stos
inc
cld
sub
push
clc
add
adc
pushl
mov
je
mov
cld
xor
jo
fsubrp
bound
add
push
je
sub
sub
cmc
pop
nop
adc
add
or
xlat
ficomps
add
rolb
dec
jl
push
dec
adc
pop
and
push
mov
cltd
loopne
lods
lret
jo
sub
jb
fstps
js
loopne
dec
adc
jl
sbb
aas
jp
addl
add
js
inc
cmp
dec
aad
jp
sysenter
data16
and
cmc
dec
aad
jns
repz
jno
or
add
or
mov
sub
sub
movsb
and
mov
and
lds
add
fiaddl
xlat
mov
mov
cltd
lock
add
ja
and
and
xor
inc
add
jb
out
rolb
pop
fiaddl
sbb
mov
std
jnp
test
mov
das
out
pop
ret
imul
daa
clc
ss
clc
push
mov
cmpsl
or
inc
arpl
push
add
adc
and
out
ret
cs
scas
jle
ljmp
out
stos
pop
daa
add
xlat
lret
das
rcl
adc
mov
ds
xchg
mov
lahf
push
pushl
and
or
inc
repnz
int
adc
xchg
call
in
call
mov
imul
roll
call
inc
scas
pop
mov
inc
xor
lods
frstor
int
call
or
mov
xor
sub
loopne
jae
lahf
xor
push
dec
icebp
adc
orl
add
add
jle
in
fmulp
hlt
addl
push
push
decl
arpl
adc
xchg
insb
and
cwtl
rorb
test
adc
add
push
or
fstl
adc
pop
adc
in
xchg
repnz
fdivr
fstl
out
add
adc
test
cmp
xchg
mov
cld
lcall
pusha
sti
adc
push
pop
mov
cmp
add
push
ja
sub
test
mov
add
xchg
mov
add
cmovne
sti
int
and
push
mov
pop
sbb
out
and
mov
push
enter
cmp
add
and
cmp
add
pop
add
pusha
mov
pop
mov
jno
clc
sti
cld
hlt
mov
add
mov
mov
imul
jae
mov
or
mov
and
clc
fsubrs
daa
aam
inc
imul
clc
ret
pop
mov
cmpsb
add
stos
mov
cmp
fnstcw
pushf
scas
sti
rcrl
push
inc
and
add
es
add
sub
and
pop
and
xor
sub
inc
adc
js
lock
movsb
sub
popa
pop
pop
push
fiaddl
push
ret
out
psubd
stos
popf
xchg
inc
mov
adc
add
adc
jbe
push
std
xchg
sbb
mov
std
sbb
sub
rolb
jmp
adc
mov
xchg
rorb
sub
jge
pop
xchg
xchg
sbb
maskmovq
testl
fdivl
sub
mov
sub
jmp
push
ret
or
inc
aaa
enter
imul
mov
jno
imul
ljmp
cli
iret
jb
add
iret
xor
push
mov
add
mov
pop
push
fs
pop
insl
dec
cmp
ds
push
mov
call
cmp
test
jne
sub
outsl
sbb
shrl
inc
adc
aam
sub
push
cld
mov
mov
in
adc
call
push
insl
and
xor
cld
movb
das
add
out
push
popl
add
inc
dec
or
idivl
mov
stc
loopne
add
xlat
mov
roll
rcrl
add
xor
jge
cmp
pop
jg
cmp
lock
cli
push
or
sbb
add
imul
push
inc
cld
sti
mov
orl
aad
jb
mov
adc
pop
std
pop
cmp
sub
ret
ljmp
ljmp
ds
adc
inc
test
lcall
mov
loop
fcomi
out
sbbl
dec
and
rcl
ret
pop
leave
pop
inc
mov
push
aam
pop
dec
sub
jnp
flds
lret
sbb
dec
add
lret
xchg
ret
sbb
test
adc
sar
popf
mov
fwait
movsl
movq
insb
or
out
pop
sbb
sub
or
xchg
lock
push
or
fwait
inc
fldl
add
mov
hlt
pushf
or
cmc
xchg
xchg
adc
std
add
and
subb
add
filds
add
lods
inc
out
push
jbe
cld
ds
xchg
daa
xor
es
sarb
dec
in
rclb
call
dec
sbb
lret
or
or
jmp
fsubs
add
cmpsl
stos
push
inc
cmpsl
call
clc
movsb
mov
mov
inc
ljmp
popf
adc
jne
cwtl
inc
clc
xchg
fidivs
dec
loop
jo
test
test
adc
mov
mov
add
jo
fs
sub
lock
mov
add
add
rorb
jmp
or
jnp,pn
add
cli
ss
lock
adc
or
cmc
cld
stc
inc
pop
inc
add
mov
cld
repz
mov
mov
cmp
incl
pop
paddw
xchg
jno
mov
in
jns
cmp
icebp
mov
or
arpl
or
add
add
loopne
mov
push
push
rcl
dec
sahf
cmp
push
jno
cmp
mov
jg
mov
add
cli
sub
jg
add
adc
in
dec
orl
dec
mov
aad
dec
aas
sub
sbb
and
stos
mov
or
lea
xchg
jmp
push
pop
and
adc
mov
or
out
mov
mov
rorb
stos
xchg
mov
mov
les
xchg
and
add
rcll
lods
or
les
add
out
mov
scas
das
mov
push
adc
icebp
fwait
push
mov
sub
mov
cmp
test
inc
sbb
inc
in
pop
pop
lds
in
and
push
ljmp
inc
jmp
sbb
in
or
adc
sub
mov
jno
aad
sbb
lcall
lcall
or
lahf
and
jmp
test
call
or
push
add
pop
ljmp
adc
jp
ljmp
inc
jmp
loopne
rolb
xchg
sbb
add
xor
inc
or
pop
jp
mov
mov
pop
loopne
mov
out
or
testl
jecxz
jl
jns
xor
mov
inc
mov
xchg
out
jae
ljmp
faddl
or
add
or
xor
sub
xor
push
mov
imul
mov
lret
insb
pop
add
daa
subb
aad
push
jb
or
or
call
xchg
add
add
mov
push
add
jg
sti
mov
jmp
mov
mov
mov
mov
sti
mov
lods
push
add
jg
or
lea
mov
roll
sbb
sbb
inc
clc
cwtl
imul
sbb
jle
jle
ljmp
cltd
cmpsb
mov
pop
pop
push
jecxz
ja
rorb
cs
popa
ss
xlat
add
sahf
mov
aaa
or
sarb
mov
imul
mov
adc
cmp
outsb
cld
sbb
incl
sbb
sbb
push
addb
mov
sbb
pushl
out
pop
xchg
and
insb
inc
sbb
rol
call
mov
mov
push
cld
fs
adc
fwait
sbb
pop
decl
sti
sbb
adc
and
sub
push
sbb
xor
mov
mov
out
or
test
mov
mov
orb
pop
push
push
mov
push
roll
call
add
xchg
inc
out
adc
movsb
pop
lock
jo
pop
xchg
inc
hlt
dec
ljmp
cwtl
push
sti
jne
fcoml
adc
push
cld
cmp
jo
repnz
clc
fdivs
cmovo
sbb
sub
sti
jne
aad
adc
push
cld
cmp
jecxz
nopl
sti
jne
fcoml
adc
push
cld
xor
pop
pop
movsb
xlat
add
notb
mov
mov
xchg
data16
je
fdivl
mov
sti
jne
aaa
iret
push
scas
ss
jb
or
xchg
out
les
pop
aaa
jb
add
cli
or
cmp
mov
cld
add
mov
add
imul
cmp
mov
mov
pop
and
add
das
cld
shlb
int
mov
push
sub
ljmp
ljmp
ljmp
xchg
dec
loop
or
stc
dec
adc
adc
cmp
test
adcl
pop
test
call
adc
scas
add
adc
xlat
mov
loop
jge
lret
lret
inc
adc
out
sub
add
mov
push
adc
imull
add
int3
or
mov
popf
cli
in
incl
out
mov
mov
xchg
es
idivb
lret
jmp
add
push
add
sbb
add
daa
jmp
add
mov
xchg
dec
or
jns
cmp
pop
je
mov
fdivrp
out
adc
rorl
cli
inc
sbb
mov
mov
mov
and
xlat
xor
xor
subb
int3
mov
das
jp
jmp
lcall
sarl
add
ret
adc
flds
mov
jae
lock
movsl
fsts
call
stc
push
pop
jae
pop
lds
xchg
fdivr
ljmp
inc
inc
or
mov
sar
stos
inc
pop
mov
cmp
add
sbb
mov
sbb
addb
inc
and
sbb
or
or
mov
in
in
add
loopne
ret
xchg
push
imul
mov
mov
push
rcrb
adc
rclb
pop
push
jne
mov
add
daa
add
imul
xor
mov
out
mov
test
push
push
rol
add
xchg
idivl
or
adc
movsb
adc
xchg
sub
add
add
adc
inc
add
inc
cmpb
add
out
jae
imul
testb
lods
cmp
fst
mov
sldt
push
cmpsb
sub
scas
xor
add
add
mov
shll
out
jne
fdivl
and
cmpsl
mov
sub
jle
pop
lods
push
faddl
popa
sub
in
cmpsl
sahf
dec
jmp
aam
aam
sbb
xor
les
add
adc
or
stos
add
adc
sub
cltd
xor
mov
sbb
daa
add
repnz
or
sti
mov
mov
pop
pusha
mov
mov
add
adc
aas
sti
es
sbb
sar
adc
insl
pop
std
aam
add
jmp
adc
punpckldq
push
cld
ds
jmp
out
test
cld
bound
sbbb
adc
pop
sub
push
pusha
ret
movsb
pop
imull
inc
jb
ret
lods
pop
movl
or
out
dec
push
sti
fcomi
add
sub
fcoms
push
call
cld
es
add
movntq
not
addr16
inc
movsb
dec
add
adc
out
mul
sti
mov
inc
pop
ret
clc
cwtl
call
js
push
cld
std
lcall
ret
or
sldt
cmpsb
dec
or
in
jo
outsb
call
hlt
add
pop
insb
mov
adc
in
mov
inc
mov
inc
sti
jne
and
out
aaa
add
subl
sub
inc
aaa
outsb
aaa
add
and
les
sbb
jb
das
xor
sub
fdivs
jnp
mov
fisubrs
aaa
test
add
adc
adc
incb
inc
jbe
adc
sar
cmpsb
dec
pop
cwtl
sub
jp
xchg
jno
das
jb
push
mov
push
push
testl
rcll
add
ljmp
cmpsb
sbb
sbb
call
aaa
cmc
shl
inc
inc
lock
cli
add
adc
or
mov
out
push
mov
rolb
enter
or
bound
adc
stos
add
push
and
jmp
hlt
adc
incl
aam
inc
xchg
daa
xchg
cmp
ljmp
push
jmp
das
xchg
xacquire
dec
add
lret
adc
jmp
adc
cmpsl
lcall
lret
adc
add
shll
dec
std
sbb
sub
call
out
add
jl
cmp
jo
insl
adc
ret
jo
adc
cmpsl
or
ret
scas
or
test
fiaddl
cli
cmpsb
test
jbe
movsl
and
adc
fadds
adc
neg
jl
push
in
add
mov
std
aad
lods
sti
incb
nop
repnz
inc
fldl
mov
fistps
mov
inc
add
pop
xchg
push
pop
hlt
push
dec
mov
out
ds
xor
xchg
out
inc
shl
imul
fisubrl
shlb
dec
rcrl
test
shlb
inc
xchg
out
adc
cld
sub
rclb
add
std
jne
imul
pop
out
mov
xor
jp
call
cld
call
jns
test
sar
push
sub
jle
jbe
xor
ret
decl
sub
aam
adc
ret
mov
cmp
dec
not
cld
xor
pop
add
decb
jns
xor
sbb
sub
cs
ret
jp
mov
pop
int
cli
ljmp
adc
mov
imul
inc
adc
shr
lds
inc
adc
fistl
cltd
rcrb
fs
cmp
push
cld
cmp
jle
lods
int3
mov
jle
jns
push
jmp
mov
insb
xchg
addl
adc
js
addr16
shl
mov
mov
fsubs
add
xor
jns
xlat
mov
cmpl
sbb
dec
andl
jmp
lods
push
pusha
in
lcall
push
adc
xchg
xchg
fsubl
pop
adc
out
inc
push
jmp
jne
pop
shll
sub
je
mov
das
mov
lcall
push
adc
sub
push
add
or
adc
testl
stos
and
and
pop
lea
pop
xchg
out
xchg
rcl
jns
fs
jg
ret
and
xchg
loop
pop
dec
sub
xor
imul
push
dec
add
fnsave
push
call
ja
xchg
lods
popf
adc
call
nop
lds
cmp
jo
adc
add
outsl
fdivs
push
loope
mov
xchg
mov
add
push
test
test
pause
sbb
loopne
mov
dec
mov
aad
in
incb
jnp
add
cld
popf
add
add
mov
lret
pop
in
jecxz
sub
int
mov
jb
scas
leave
pop
xchg
mov
jl
test
lahf
pop
add
test
sti
sar
sbb
jb
mov
sti
jnp
sti
jle
incb
dec
lcall
js
rep
sub
incl
pop
subb
leave
xchg
jbe
dec
xchg
fimuls
add
adc
jg
adc
add
jns
hlt
xor
add
add
mov
lret
jecxz
mov
add
mov
outsb
in
mov
mov
adc
dec
div
sub
pushf
sti
mov
jnp
fwait
jo
fwait
xchg
fcomi
xchg
jmp
add
add
pop
test
pop
pusha
test
xchg
rolb
adc
outsb
enter
dec
clc
xchg
add
adc
imul
or
jmp
xor
inc
add
test
je
mov
lcall
lea
cld
push
or
jmp
sub
jne
dec
fsts
add
or
gs
xchg
je
xchg
push
fs
scas
adc
jmp
loop
jmp
push
pop
jg
sub
lea
repz
pop
adc
add
or
mov
pop
mov
jbe
repz
cld
dec
sub
jecxz
mov
xor
mov
mov
inc
das
sbb
jbe
negl
push
jmp
add
aad
add
jb
mov
or
repz
stos
xor
movsb
daa
jne
xor
je
sbb
dec
call
hlt
lret
popf
ret
aaa
push
add
aam
icebp
mov
mov
jg
jae
or
cmp
add
outsl
and
adc
or
and
or
and
pushf
ljmp
out
and
or
test
xor
pop
repnz
push
out
jb
fcompl
and
pop
lret
or
mov
add
aas
aas
call
xlat
and
jl
dec
push
sti
call
sub
loopne
enter
add
mov
dec
add
adc
roll
aam
aam
xor
cmp
leave
push
jmp
jp
das
lds
das
adc
and
mov
xchg
das
std
lret
and
lods
add
lods
filds
fwait
movsl
fistps
xchg
lods
filds
movsl
xchg
lods
filds
fwait
movsl
fbld
xchg
lods
filds
insb
mov
daa
sub
add
stos
enter
call
enter
add
sar
or
mov
add
dec
sbb
or
sub
xor
sbb
cmp
and
sbb
fwait
inc
or
nop
or
pushf
add
pop
sub
adc
lods
jecxz
add
jmp
inc
jmp
add
sti
push
adc
sub
adc
hlt
xchg
in
lea
push
pop
mov
add
or
pop
cld
sbb
cmp
dec
movaps
out
lea
jo
call
pop
int
jge
lret
jecxz
and
add
pop
xchg
rclb
fwait
push
pop
adc
pop
adc
sbb
xor
sub
push
call
jmp
pop
leave
fmulp
mov
outsb
aaa
xor
leave
arpl
xchg
adc
sti
or
data16
in
xlat
add
cmp
es
sbbb
fdivs
loopne
jmp
add
xchg
or
std
lods
daa
loop
mov
push
add
dec
das
sbb
adc
dec
jns
or
jge
and
add
incl
mov
sub
cld
mov
and
repz
call
jns
dec
imul
xchg
jecxz
loopne
adc
mov
movsb
or
call
adc
mov
scas
out
pushf
lcall
adc
cmp
and
xchg
xchg
cltd
sub
stos
cli
and
mov
and
jnp
cmp
and
and
arpl
xchg
shrl
and
sub
loopne
push
dec
inc
and
mov
clc
data16
xor
add
pop
and
fildl
push
jmp
mov
cld
out
call
adc
add
adc
mov
arpl
lret
jns
jmp
mov
icebp
aam
dec
add
push
adc
push
and
push
xchg
fwait
inc
stc
mov
add
lcall
add
bound
adc
sahf
or
xchg
clc
int
in
or
cmp
inc
add
pusha
cmp
sbb
sub
pop
jbe
jne
and
repz
xchg
push
and
add
dec
call
xchg
jg
and
add
xchg
das
mov
push
repz
push
decl
add
movsb
cli
ljmp
pop
or
add
sub
add
cli
inc
popf
movsb
aas
and
enter
pop
std
aaa
push
xlat
mov
enter
sti
mov
negl
push
call
in
pop
sub
jmp
mov
jecxz
xor
movsb
ficompl
cmp
rcrl
and
fwait
movsb
add
clc
dec
call
popa
push
or
push
pop
add
idiv
aaa
cmc
push
xlat
cli
repz
xchg
push
in
jae
sbb
and
mov
call
jle
fwait
loope
and
jmp
sub
mov
sbb
cmp
mov
add
call
cld
push
jne
cmp
mov
sar
dec
roll
add
cld
stc
xor
add
inc
jae
jne
pop
iret
sub
cld
jae
inc
cwtl
and
dec
cwtl
and
fwait
daa
js
adc
add
in
sahf
adc
sbb
xchg
test
add
sub
stos
je
sbb
lea
cld
jl
add
mov
pop
sbb
sbb
shll
sbb
cmp
add
bnd
stc
add
jmp
inc
lcall
sahf
call
daa
lahf
setne
or
testb
push
push
leave
test
cmp
jb
add
adc
loope
inc
push
and
push
adc
jmp
pop
call
jb
xor
xchg
imul
jmp
pop
mov
je
xor
cmp
sti
xor
stos
add
jo
inc
out
pop
add
fs
add
add
push
es
inc
add
xor
fcoml
dec
add
inc
call
out
mov
push
add
pop
adc
add
out
ret
fsubl
sbb
add
outsl
adc
imul
lods
nop
pop
or
cwtl
mov
adc
jmp
call
jmp
mov
cmp
jecxz
cmpsl
sbb
jg
sub
rolb
insl
mov
or
fdivs
ljmp
xchg
cld
jne
sub
mov
pop
xchg
ret
lods
ret
add
nop
pop
lret
mov
push
add
cld
sbb
lock
add
pop
pop
jmp
push
adcb
jb
push
sti
or
mov
pushf
cmpsl
stos
in
jg
sbb
daa
push
mov
add
cld
add
in
nop
or
or
rcrb
xchg
and
cld
flds
enter
mov
jae
push
test
add
mov
or
cmp
sbb
insb
inc
xchg
aas
ret
test
adc
rorl
inc
dec
fdivp
xchg
sub
push
flds
sbb
sub
xchg
pushf
adc
insb
out
std
or
or
stos
sti
mov
std
cmp
xchg
ficompl
xor
cmp
adc
mov
push
jns
int
cmpsl
pop
add
pop
daa
test
mov
mov
inc
inc
pop
mov
mov
xchg
add
mov
dec
jo
xor
push
arpl
sti
push
cmpl
jmp
push
movb
ss
push
and
mov
push
adc
add
jle
and
das
outsl
hlt
outsl
test
jmp
mov
add
xor
out
jmp
in
or
fs
mov
inc
add
fs
and
test
jnp
lea
and
call
incl
mov
rcrl
xor
das
out
pop
sbb
lock
fisubl
cld
call
fldt
call
jmp
inc
fisttpll
aas
and
xchg
mov
and
cs
sbbb
lds
add
xchg
lods
and
add
mov
fcoms
pop
add
dec
movsb
add
xchg
lods
sub
pop
inc
inc
inc
add
sti
lcall
push
push
mov
nop
pop
xor
mov
in
scas
imul
loopne
std
fisubrl
cld
mov
lcall
arpl
fisttpl
add
decl
mov
adc
lahf
or
fcoms
stos
aad
jae
jbe
sahf
add
mov
cld
adc
lock
movl
add
nop
add
pop
test
sub
sti
inc
mov
add
adc
or
bound
push
jmp
jp
call
fists
mov
add
pop
enter
enter
mov
push
jmp
mov
aas
adc
sub
clc
xchg
fistpll
lea
cmp
add
jge
adc
rep
add
mov
out
jnp
sub
push
jmp
call
pusha
add
xor
mov
jl
and
lea
ds
cli
cli
hlt
add
inc
jmp
cs
jne
popa
icebp
inc
pop
add
divl
sub
dec
add
adc
jp
lock
mov
jo
push
or
adc
clc
sti
xbegin
call
bound
adc
pop
pop
xchg
push
rclb
jmp
sub
into
jl
je
sbb
fwait
or
outsb
or
ljmp
add
add
jne
and
xchg
cmp
lret
mov
dec
and
jecxz
push
and
pop
pop
or
jne
cld
and
jo
js
out
pop
mov
ljmp
push
outsl
inc
jnp
cmc
cmp
pushf
pop
je
fwait
sti
ljmp
and
mov
sub
inc
add
cwtl
or
in
dec
xchg
xor
dec
mov
cwtl
pop
pop
mov
testb
pop
xchg
mov
add
dec
stos
repz
mov
test
and
loopne
xor
rcl
mov
add
jno
cltd
adc
popf
push
adc
mov
les
mull
add
call
add
jp
or
xchg
and
js
xchg
decl
jg
in
js
or
adc
mov
ret
arpl
cmp
call
out
cmp
dec
jmp
movaps
data16
sbb
das
loope
add
and
or
pop
xchg
or
or
hlt
pop
add
push
jmp
inc
notl
pushf
jl
xchg
inc
or
call
mov
mov
inc
adc
je
push
pop
add
lea
ret
and
pop
adc
sbb
mov
cmp
and
jae
adc
pop
mov
sbb
sbb
sti
cld
add
clc
adc
pusha
jnp
adc
xor
lret
xor
mov
mov
inc
leave
push
dec
cld
sti
ds
mov
enter
lret
xchg
scas
divl
adc
adc
or
cmpsl
adc
add
push
mov
jmp
push
pop
cli
mov
sbb
cmp
dec
mov
mov
push
lcall
mov
xchg
add
add
mov
add
movsl
mov
notb
inc
outsb
out
jnp
cld
jmp
outsl
sub
pop
xor
mov
cmp
fmull
je
cmpsl
dec
jmp
and
add
cltd
or
or
adc
mov
add
cmp
aas
add
inc
xor
rol
mov
jae
jbe
clc
js
jae
adcb
mov
in
mov
cmp
adc
scas
dec
dec
enter
adc
sbb
cld
cltd
int3
or
sbbl
adc
pop
in
call
dec
pop
movd
or
add
addb
popl
mov
jl
sbb
add
jae
test
add
sahf
aad
pop
jl
or
rorl
int3
bound
mov
or
xchg
add
cmpsl
and
data16
addr16
cwtl
jae
out
aam
and
add
xchg
lock
add
jecxz
add
jo
add
idiv
push
test
or
fcomp
ret
imul
or
xor
sti
push
add
nop
cld
icebp
jecxz
jle
sti
insl
inc
or
xor
sti
out
adc
movsb
cld
inc
icebp
push
jb
xchg
jge
push
adc
add
dec
push
add
test
cmp
push
xchg
add
lock
sahf
sub
adc
jge
std
inc
jmp
adc
pop
pop
jns
jmp
mov
pop
call
cli
jl
test
jge
push
add
or
addr16
xchg
adc
jb
shrb
lret
adc
ret
adc
push
cmp
push
loop
adc
les
cmp
outsl
or
pop
add
push
xchg
pop
lds
sbb
pop
add
imul
ljmp
or
sub
mov
incb
dec
in
add
cmp
cld
lret
jne
aas
dec
test
pop
pop
dec
add
add
push
xor
loope
add
andb
lock
xchg
inc
add
pop
adc
mov
repnz
cld
pushl
hlt
cld
dec
cmpsb
jnp
mov
pop
pushl
mov
js
cmp
mov
cmp
push
popf
cld
xchg
daa
cmp
xor
adc
insl
out
mov
idiv
xlat
ret
rcll
imul
push
out
cld
out
adc
jmp
inc
pop
push
pop
mov
pop
jo
push
adc
add
pop
xor
inc
outsb
sbb
fadd
arpl
xor
push
push
jmp
testb
imul
add
repnz
rcll
add
inc
push
insb
add
add
or
in
imul
add
adc
icebp
rcrb
out
adc
bound
cmp
xor
mov
stos
lock
je
jmp
adc
or
adc
mov
adc
push
sbb
movb
dec
pop
mov
sbb
sbb
clc
cmpl
inc
in
add
push
dec
xchg
pop
or
add
adc
xchg
push
les
push
dec
call
pusha
inc
outsb
sub
lds
cli
lcall
call
sbb
or
out
pushf
adc
mov
fistl
ljmp
sti
lcall
sahf
enter
add
xchg
pop
decb
dec
loopne
idiv
mov
cmc
push
pop
imul
decl
sti
jle
cli
aaa
call
in
add
push
pop
pop
aaa
mov
clc
add
jo
pop
jmp
sub
push
xchg
ficompl
mov
aad
aas
add
add
add
in
inc
or
js
les
add
push
data16
mov
jl
les
add
pushf
jg
decl
push
incl
lret
arpl
in
push
shlb
clc
arpl
mov
mov
push
aam
adc
lret
int3
into
nop
lcall
lods
and
repnz
add
adc
add
bound
rcll
ret
dec
popa
push
jns
dec
stos
stos
lret
add
lahf
dec
andb
jmp
js
das
mov
adc
je
jmp
in
mov
jp
inc
add
jp
ljmp
adc
sub
inc
lods
push
push
jmp
loopne
inc
add
add
sub
insb
shlb
inc
ss
xchg
push
and
push
popf
inc
int
pop
std
jecxz
call
addb
and
test
sti
out
sahf
add
pop
sub
jmp
test
je
ja
je
mov
pop
lds
adc
jmp
add
add
pop
adc
add
gs
add
clc
call
pusha
mov
test
stc
stc
ljmp
mov
jecxz
cli
str
jle
or
icebp
repz
mov
aas
and
or
inc
rcr
shlb
mov
pusha
imul
mov
aam
jne
insb
aas
and
or
mov
xor
pusha
add
inc
jne
ret
mov
in
push
add
cwtl
imul
fwait
popa
ds
sub
adc
les
cmp
hlt
or
leave
mov
incl
sbb
jns
and
mov
xchg
sub
jns
add
sti
out
cli
pop
incl
or
cld
lods
cld
js
add
loopne
call
add
pop
call
je
ljmp
push
xor
cmp
pop
xchg
sbb
add
stc
hlt
out
imul
mov
push
xor
push
inc
add
xor
xchg
push
add
bound
adc
imul
jmp
verw
ja
inc
add
movsl
maxps
jmp
push
ss
add
inc
push
push
out
nop
inc
call
aas
add
fnsave
mov
xchg
mov
ss
or
xchg
sbb
adc
push
pop
push
add
sti
out
adc
mov
cmp
notl
add
inc
push
sarl
scas
jns
test
add
add
or
add
nop
in
test
adc
sahf
pusha
sti
outsb
jns
pop
into
movsl
push
jb
gs
pop
push
jne
pop
adc
xor
adc
cli
cld
cmp
clc
jp
or
add
or
imul
jmp
add
shr
adc
or
stc
push
cld
push
cld
jne
xchg
fsubr
adc
out
push
pop
outsl
or
push
push
cmp
pop
pop
or
and
inc
sub
dec
cld
push
pop
jp
pop
mov
cld
mov
out
jne
push
shr
xchg
inc
cld
outsb
jmp
and
lea
jne
adc
push
add
adc
call
sub
or
push
push
cmc
jnp
add
test
cli
jae
out
add
js
fstl
jle
ficoms
ficoms
pop
out
push
add
stos
jmp
sti
sti
cmp
rolb
push
and
mov
mov
push
sbb
or
push
sahf
push
push
je
cld
sbb
or
mov
push
fcompl
idiv
ret
jno
or
jbe
or
je
or
mov
imul
mov
in
jl
jmp
or
jecxz
mulb
jecxz
les
mov
out
jo
xor
sbb
sti
out
adc
push
les
inc
add
and
cmpsb
jle
loop
adc
sbb
add
push
bound
jmp
stc
iret
loop
fstpt
inc
jmp
pop
jmp
jmp
faddl
ss
cltd
mov
cmc
aaa
fists
insb
ficompl
jmp
pop
push
adc
ret
loop
mov
jne
add
call
pusha
dec
stc
dec
xor
loop,pn
leave
stos
or
sbb
inc
lea
inc
push
xchg
pop
ljmp
add
xchg
jp
mov
fxam
test
push
xor
adc
jno
ret
sbb
jne
mov
aas
add
loopne
jl
push
add
add
jnp
add
ljmp
adc
mov
xchg
aas
push
leave
das
or
push
lock
push
adc
jnp
popa
adc
or
clc
psubsb
pop
lcall
xor
outsl
cwtl
add
adc
in
fcomip
push
ja
call
mov
insb
cwtl
add
fstl
rolb
stc
ret
push
pop
push
pop
sub
jmp
push
orl
out
xor
sti
jg
or
out
mov
test
push
xor
cmp
sti
outsb
or
in
mov
pop
repnz
call
imull
call
and
add
dec
push
nop
rolb
add
jne
push
add
and
in
clc
jne
repz
hlt
test
loopne
sub
insb
adc
add
adc
ret
fcoml
sti
mov
test
out
imul
add
rcll
aaa
fistps
pop
cmp
mov
fwait
push
sbbl
add
xchg
std
pop
fildll
mov
push
and
pop
aad
add
jmp
cld
aaa
out
aad
or
loopne
leave
or
mov
mov
mov
fidivl
ret
pop
ds
or
xchg
add
pop
dec
push
push
push
sbb
imul
xchg
fistl
sub
sbb
gs
jp,pt
test
adc
sub
adc
jmp
jg
sti
mov
mov
sti
jae
testb
pop
insb
xchg
jmp
pusha
clc
fimuls
pop
xor
popf
add
lret
sbb
inc
lea
inc
push
rcll
cmpsb
or
xchg
jbe
fcmovbe
cmp
add
lret
sbb
fisttps
adcl
cli
mov
or
jle
lcall
rcrb
add
add
inc
lea
inc
bound
stc
ljmp
mov
push
divl
lret
sbb
fisttps
adcl
cli
mov
jo
pop
sub
pop
xlat
add
adc
push
sbb
add
inc
je
mov
xlat
xor
jno
out
je
clc
xchg
hlt
ja
jne
cltd
mov
fs
out
sarl
out
xor
clc
xchg
inc
or
add
pop
das
les
repz
sub
ficompl
idiv
dec
aaa
and
sbb
repnz
jb
add
imul
sbb
xacquire
push
mov
mov
ljmp
push
adc
je
imul
mov
adc
rcll
js
sbb
or
rorl
adc
push
imul
cmp
loop
les
stc
inc
jecxz
push
les
popa
lods
xchg
pushf
imull
xchg
call
xor
sbb
mov
faddp
clc
not
int3
cmp
xchg
pop
sub
call
inc
sub
jge
add
out
cld
xor
inc
arpl
outsb
inc
or
in
add
popa
icebp
mov
add
popl
cmp
fs
cmc
and
aaa
ja
xchg
dec
lea
imul
ja
add
dec
fstl
aam
push
or
jb
or
out
shr
jb
adc
lcall
add
xchg
ret
xor
mov
xchg
aas
jmp
jmp
xchg
mov
test
je
mov
je
sbb
scas
add
or
mov
add
adc
sbb
inc
pcmpgtd
bound
shr
mov
call
adc
dec
flds
leave
add
push
inc
fstl
add
push
orb
adc
add
add
pop
flds
add
push
add
pushf
aas
push
ret
push
mov
nop
aaa
add
jne
call
out
idiv
push
mov
mov
or
imulb
dec
dec
push
add
or
push
sub
mov
push
xorb
add
or
add
adc
es
or
add
cmpsb
add
xchg
je
bound
sti
xchg
add
push
out
call
sti
mov
pop
dec
sub
sub
lock
call
in
hlt
je
call
or
xor
aas
push
jmp
addl
pop
xor
loop
sti
fsts
push
pop
inc
adc
add
mov
xchg
and
data16
inc
xor
pop
cmc
jle
fdivs
mov
sub
add
sbb
int3
cmpl
xor
nop
push
lds
xor
std
daa
clc
push
xor
imul
les
pop
mov
add
xlat
fmull
stc
push
jmp
ss
xor
xchg
inc
andl
sbb
les
jg
mov
xlat
adc
in
add
adc
cmp
jecxz
ficomps
jne
mov
and
aaa
popa
or
das
sbb
mov
jecxz
xor
test
sahf
neg
repz
sti
adc
ret
ja
mov
cmp
leave
or
mov
call
in
adc
cli
xchg
push
jge
add
jle
add
je
das
sbb
jbe
rcr
cmp
add
sub
lods
push
inc
and
daa
inc
adc
mov
sub
std
aas
add
in
xor
cmp
movsb
mov
pop
je
std
sub
sub
add
xchg
jge
fstpl
push
jp
or
add
mov
add
pop
inc
or
pop
inc
and
push
inc
and
inc
mov
call
test
adc
popa
sub
and
adc
jl
and
jbe
sub
dec
and
jmp
inc
and
fdivrl
lock
jg
jmp
push
dec
daa
sub
add
aam
subl
sub
lea
sub
cmp
sti
repz
aaa
repz
fs
jecxz
jl
and
dec
push
rcl
and
stos
xlat
adc
ljmp
cmp
adc
sub
cmp
xchg
dec
lock
subb
or
scas
and
add
dec
lds
outsl
pop
int
jns
lds
insb
insl
add
sub
push
pop
cmp
enter
mov
sbb
call
xor
xchg
aam
adcl
pop
add
out
call
adc
pop
out
rcrl
sub
sub
clc
les
dec
sub
add
dec
or
out
scas
test
fiaddl
mov
fdiv
lahf
shl
ret
das
jb
xchg
add
mov
push
jb
push
in
mov
test
pop
adc
mov
add
lcall
add
das
adc
out
inc
or
imull
cmp
test
xor
sub
jo
divl
sbb
xor
jo
clc
das
loopne
clc
pop
out
xor
jmp
lcall
test
or
mov
push
test
add
adc
and
je
mov
inc
and
rorb
add
or
add
push
call
mov
std
repnz
daa
add
pop
shll
pop
and
shll
shll
push
xorl
or
add
jmp
leave
pop
test
add
inc
lret
add
enter
imul
add
pop
mov
cld
adc
dec
test
sbb
add
cltd
shlb
inc
sbb
test
sub
mov
mov
les
es
cmp
pop
rcr
push
ljmp
mov
sub
icebp
testb
or
dec
and
stos
jbe
loopne
in
adc
add
daa
xor
mull
inc
inc
jmp
push
or
push
add
mov
and
sub
adc
js
outsb
outsl
lcall
sub
mov
cmp
adc
jmp
push
or
daa
cld
pushf
lods
daa
call
adc
sub
testl
in
add
xchg
daa
unpcklps
subps
adc
inc
add
in
mov
add
push
cmp
jmp
inc
or
jmp
sarb
pop
mov
sub
rol
iret
mov
fldt
outsb
pop
xor
jmp
push
int3
jg
mov
sbb
cli
push
add
xchg
in
leave
sbb
xchg
or
jg
jo
jge
jnp
mov
adc
sti
push
inc
into
xor
fstpt
sti
jne
pop
dec
orl
add
ret
iret
sti
out
sbb
ficomps
adc
aas
sti
push
mov
mov
in
push
pop
pop
das
ret
or
push
xchg
mulb
lret
or
adc
dec
aas
add
add
rdtsc
xor
add
xchg
or
xchg
clc
add
adc
ja
dec
jne
push
mov
call
loope
pop
test
add
fcoms
push
call
loope
je
dec
ds
inc
stc
jmp
bound
mov
addr16
call
add
push
in
and
dec
push
je
lock
les
pusha
lds
push
sti
adc
inc
add
jnp
mov
sub
pushf
fidivrs
sti
mov
call
xor
push
pusha
push
bound
add
fsubl
fdivl
jnp
pop
push
jmp
cli
add
sahf
adc
incb
pushl
jl
sti
add
pop
jge
or
out
jg
mov
jmp
push
in
xor
add
outsb
repz
adc
mov
fcoml
cmp
push
ss
insb
leave
int3
jp
push
popa
jb
push
and
add
int3
or
mov
sub
fcoml
dec
popa
mov
adcl
test
call
leave
int3
mov
call
mov
adc
imul
shr
add
cmp
xor
cmp
inc
sbb
enter
cmpsb
dec
pop
pop
jmp
out
pop
jmp
or
or
cmpsb
adc
xchg
clc
insb
jecxz
xor
dec
stc
mov
inc
adc
adc
mov
pop
add
adc
sub
push
pop
cmc
cmpsl
adc
mov
lock
lcall
ss
outsb
pop
in
mov
add
sti
popf
sti
cmovle
adc
sti
incb
add
stos
out
add
dec
push
neg
sub
in
push
sbb
dec
mov
mov
testl
mov
adc
add
call
xor
insl
adc
loopne
push
push
sbb
ljmp
std
mov
inc
aad
cmp
cmp
add
jge
jle
pop
mov
fsubrs
push
lea
out
sub
add
sarb
inc
or
test
insl
mov
jmp
add
in
jl
aas
dec
jns
pop
sarb
lea
or
adc
xchg
cld
add
js
add
daa
sbb
mov
sti
adc
adc
mov
sti
mov
mov
mov
jnp
orl
sub
jae
inc
push
cmp
mov
and
mov
jb
and
xlat
push
push
mov
mov
add
jnp
mov
adc
sbb
pop
add
inc
mov
push
jns
cmpsw
push
add
std
fmulp
pop
add
adc
inc
pop
outsb
xlat
cmp
call
dec
mov
test
add
bnd
adc
add
adc
add
add
adc
cmp
leave
add
ds
pop
adc
add
ror
sti
mov
aas
adc
popa
hlt
aam
in
movl
inc
dec
adc
jmp
aam
mov
clc
sbb
adc
mov
call
jb
xchg
vpmacsdqh
outsl
cmpsl
xchg
rcr
sub
sti
push
add
push
sub
mov
setge
dec
push
add
in
add
incb
dec
test
lretw
mov
sub
ljmp
push
push
sub
jp
push
leave
outsl
lldt
mov
in
nop
in
mov
sbb
sbb
push
adc
xor
call
cmp
pop
pop
cmp
cli
mov
cld
jns
mov
push
and
test
jge
scas
insb
or
arpl
lea
jecxz
mov
push
lea
push
call
loope
je
sub
adc
push
and
add
push
and
adc
fnsave
cmp
mov
out
mov
in
jp
add
call
cmp
mov
shrb
pop
or
inc
inc
hlt
jge
fbstp
xchg
push
adc
int3
jne
mov
les
ss
hlt
lods
mov
fwait
sub
pop
xor
roll
loopne
js
push
or
jnp
add
cld
push
and
arpl
loope
mov
loopne
lcall
sub
pop
cld
adc
lea
adc
adc
or
decl
dec
hlt
jecxz
inc
loope
or
or
adc
popa
inc
adc
dec
or
sub
in
call
subl
mov
daa
xchg
add
xchg
in
add
adc
cld
andb
leave
push
xchg
or
cmp
xor
rolb
call
mov
jmp
sbb
mov
das
mov
inc
cmc
psrlw
scas
shr
ljmp
movsl
mov
pop
sbb
std
daa
movaps
test
ret
lcall
shl
mov
stos
cld
adc
test
lds
add
xchg
add
fcompl
push
push
or
mov
pop
jae
imul
and
sbb
add
add
repnz
je
mov
call
push
push
sub
mov
add
fstpl
mov
mov
call
test
ret
pop
cmp
push
divl
scas
mov
cmp
adc
cmp
in
lahf
sbb
push
es
in
mov
add
push
insl
adc
dec
adc
leave
add
mov
mov
incl
aas
or
decb
sub
fadds
data16
and
pop
dec
sub
inc
add
repz
mov
inc
pushl
lods
lds
stos
xchg
ss
push
mov
lea
sbb
in
cmpl
test
sub
dec
cs
add
xchg
insl
lret
lcall
out
xor
adc
add
outsb
push
ljmp
ret
mov
adc
mov
add
add
or
fwait
mov
mul
push
pop
push
sub
sbb
add
and
push
or
hlt
outsl
or
les
mov
or
es
inc
sub
cmp
add
mov
push
xrelease
jmp
std
negb
out
iret
test
sub
xchg
xor
inc
dec
pop
movl
imul
js
or
xor
das
sub
testl
jmp
pop
popl
xlat
cwtl
ret
lea
add
fs
roll
adc
test
scas
mov
pop
push
clc
sbb
popf
mov
nop
inc
and
mov
bound
mov
loopne
jne
mov
xchg
sar
xchg
rorl
push
and
vsubsd
insl
mov
lea
movsl
add
fildl
mov
pop
ret
pop
andl
add
sti
gs
mov
fadds
dec
add
mov
add
mov
lea
pusha
shlb
sbb
add
out
jle
mov
mov
cwtl
fs
xchg
push
jg
out
fsubrl
stc
add
sti
xor
andb
andb
mov
inc
mov
aaa
mov
xchg
add
ljmp
inc
inc
inc
clc
in
ja
or
idivb
lock
imul
bound
cmp
inc
faddl
hlt
mov
sbbb
jmp
cmp
adc
mov
xor
mov
xchg
mov
add
mov
adc
add
insb
mov
add
push
test
bound
push
jmp
fstps
popf
sub
outsb
ret
or
leave
pop
mov
insl
rolb
inc
cmpsb
nop
repnz
test
adc
mov
mov
or
dec
in
test
fisttpll
add
lock
xchg
js
daa
mov
dec
sbb
and
add
jg
or
jno
xchg
shrl
xchg
mov
hlt
jo
mov
sti
insl
inc
inc
push
fs
adc
mov
xlat
add
adc
sub
xchg
mov
mov
adc
cld
out
cli
mov
cmp
and
pop
xorb
ljmp
cld
pushl
jecxz
sahf
lods
pop
add
and
push
cld
lea
in
enter
jmp
adc
cmp
push
add
mov
jecxz
test
out
dec
popa
jp
clc
add
add
aam
pop
andl
je
cmpsb
push
lock
ja
add
mov
ret
add
xchg
inc
call
add
inc
lock
inc
cld
sti
cs
cli
jecxz
out
ret
out
lcall
xchg
movsb
sub
xchg
out
insb
dec
incl
xor
outsb
pop
add
ss
add
inc
adc
insl
ljmp
inc
repnz
aam
inc
pop
aad
movsl
cmpsb
cmpsl
loop
imul
jns
stos
push
inc
add
sub
in
aam
jg
and
mov
adc
in
adc
pushf
movsl
adc
add
lahf
call
mov
lods
ret
mov
fs
loopne
and
iret
mov
adc
ljmp
cltd
add
dec
jns
lods
cli
adc
nop
test
rcrl
sbb
add
mov
xor
dec
sub
loop
rorb
xorl
sub
add
add
mov
jl
mov
ljmp
xchg
pop
cmc
popf
sbb
mov
add
mov
out
imul
jno
adc
push
adc
jmp
add
lret
sbb
arpl
aam
es
jmp
ds
jb
js
out
dec
pop
call
or
mov
jge
int3
xorl
mov
sub
inc
lock
adc
popf
sbb
cmp
dec
call
sub
inc
sbb
test
sub
fsubl
fadds
enter
popl
in
mov
mov
add
adc
inc
sub
bound
inc
xchg
jge
sub
call
xor
jne
sbb
call
test
idiv
ljmp
push
jmp
mov
mov
add
cli
js
testl
ljmp
hlt
add
push
xchg
add
jmp
jmp
inc
lods
call
jns
iret
call
adc
or
leave
into
sti
pushf
cs
incl
std
mov
xlat
ret
out
into
das
les
push
int
add
pop
xor
test
and
or
pop
les
int
and
jl
adc
xchg
inc
je
sub
pop
stc
movsl
xlat
adc
inc
inc
scas
call
mov
adc
fidivs
xor
outsb
rorl
jle
imul
mov
xor
xchg
loopne
jo
lretw
dec
aas
in
pop
add
push
add
pop
cltd
push
mov
xchg
jg
jecxz
fucom
xchg
es
mov
aaa
or
mov
dec
cwtl
mov
outsl
cs
cmp
mov
lods
add
out
inc
pop
ret
xchg
out
dec
adc
jp
push
add
icebp
shll
lods
mov
shl
test
int3
popa
or
xor
sub
or
nop
sub
jg
and
ljmp
mov
sbb
lods
cmovg
sub
or
shll
fsts
bound
ljmp
adc
push
lds
cld
or
adc
wbinvd
pop
stos
sbb
data16
in
mov
rorl
ret
pop
roll
test
mov
mov
pop
aaa
mov
call
sbb
or
push
add
cmp
push
cmpsb
loope
inc
jmp
pop
add
aad
jne
shrb
jnp
jmp
pop
add
insl
dec
pop
andl
or
sbb
add
xlat
sub
in
push
mov
sbb
divb
dec
add
bound
add
pop
or
adc
mov
jbe
dec
inc
les
scas
mov
push
jg
xor
jne
ss
xchg
jl
xchg
or
xchg
js
std
mov
iret
orl
test
test
jmp
iret
call
add
pop
add
xchg
mov
clc
jnp
cld
add
iret
inc
push
sar
sub
insb
sahf
jecxz
cmp
sahf
and
pop
xchg
xor
scas
push
sahf
mov
xlat
mov
daa
or
testl
adc
add
jmp
add
testb
add
mov
sub
pop
sub
dec
lret
pop
inc
icebp
adc
les
cmp
ret
lds
sbb
fsubrs
push
cmpsl
cld
fwait
inc
outsl
mov
mov
add
jg
and
loope
in
add
loop
test
xor
add
or
jmp
xor
out
test
movl
mov
push
lods
jne
dec
sub
adc
sub
lods
je
incl
sbbb
mov
divl
jmp
into
lods
je
cld
lods
adc
sbb
daa
and
stc
mov
ret
adc
in
xor
sbb
jne
add
jmp
xchg
clc
pushl
divb
notl
add
push
cli
test
idiv
mov
je
xchg
fbstp
in
cmp
negl
sbb
orl
lock
add
jmp
xchg
idiv
jo
divb
notb
enterw
xchg
shlb
pop
mov
test
add
or
ficomps
mov
mov
push
add
inc
into
je
and
and
std
add
ds
or
sbb
imul
clc
arpl
iret
in
or
sub
or
inc
mov
shlb
jp
sub
daa
push
sub
sub
adc
add
push
imul
add
dec
and
mov
cmpsl
xchg
push
or
aas
add
lret
movsl
je
int3
rorl
adc
jmp
mov
gs
sbb
outsb
add
scas
cmc
pop
sbb
stos
xor
lret
outsl
arpl
fisubrs
sub
mov
inc
dec
lock
add
push
roll
mov
scas
repnz
xchg
adc
data16
daa
std
xchg
sbb
add
add
add
mov
lret
daa
jecxz
inc
jmp
cmpsl
ja
pop
fs
xchg
mov
adc
mov
push
sbb
mov
sti
jmp
mov
add
iret
sub
daa
ftst
shl
jl
shl
mov
push
push
lcall
pusha
pop
push
mov
fcmovnb
adc
dec
lahf
adc
das
aaa
subl
adc
xchg
div
ret
push
addb
sub
out
fnsave
sbb
inc
das
stc
mov
lea
push
fstpt
loopne
adc
sub
nop
repnz
lods
jnp
mov
decl
inc
addr16
clc
adc
hlt
mov
testl
sbb
popa
pop
loop
push
pop
sbb
pop
cs
lock
adc
cli
xor
add
push
shl
mov
sahf
fiadds
ljmp
loopne
data16
fiadds
in
pop
test
jns
or
sbb
shr
ljmp
scas
add
xchg
pop
test
loopne
sbb
ljmp
sub
cmp
fdivrs
lods
jbe
cld
cmp
pop
add
aaa
adc
shll
push
clc
das
jae
jle
mov
repz
mov
cli
xchg
movsb
jbe
cmp
dec
hlt
add
inc
lock
cli
dec
or
lods
or
mov
inc
iret
or
jg
pop
clc
inc
and
or
mov
lea
xlat
iret
add
adc
add
cwtl
in
or
add
stos
mov
subl
dec
pushf
lahf
sahf
fidivrs
test
pushl
dec
xor
fnstsw
popf
sbb
jns
jno
sbb
aad
sub
inc
dec
stos
dec
jp
sbb
inc
out
mov
das
stos
pop
inc
sub
mov
jp
cmpsl
pop
lret
mov
setbe
jmp
xchg
jp
xchg
add
push
pop
push
jb
sub
jmp
dec
dec
cld
pusha
sbb
shr
pop
adc
loope
stos
and
dec
jo
out
fildl
jmp
cmp
aaa
stos
jno
cmpsl
jmp
add
sub
imul
lcall
xchg
stc
lock
push
andb
sub
out
fildl
add
pop
add
fbld
and
push
or
pop
inc
mov
imul
fists
xor
jae
adc
je
out
cli
out
mov
cli
lock
dec
imul
orl
and
xchg
inc
push
cli
sub
je
sub
jne
add
push
lods
lret
add
ret
lds
push
mov
sub
je
iret
inc
clc
xchg
stc
repz
xchg
push
cld
mov
aad
or
les
jo
xchg
adc
jnp
jecxz
pop
push
int
pop
xchg
cmp
mov
out
xchg
add
adc
push
mov
lea
mov
or
scas
jbe
xchg
or
scas
cmp
cmpsl
or
ljmp
jl
mov
aaa
inc
sahf
xorb
mov
js
cmp
xchg
lds
or
push
mov
fiadds
imul
add
inc
dec
pop
ljmp
leave
outsb
loop
lret
into
repnz
jecxz
nop
inc
cmpsb
mov
inc
xchg
xchg
add
adc
ljmp
lds
xor
outsb
loop
dec
pop
mov
stos
vmwrite
jmp
stos
add
aas
cmp
mov
add
adc
mov
jmp
int3
cmpsl
xchg
scas
push
or
lods
mov
nop
pop
jne
test
loope
inc
hlt
push
cmpsb
mov
ret
rclb
clc
rolb
lea
jns
out
cmp
sti
push
test
mov
jge
push
push
mov
add
hlt
pusha
lret
stos
cmp
sbb
jb
stos
xchg
add
add
add
repnz
adc
outsl
and
sbb
cmc
adc
pop
push
roll
add
cli
xor
jns
jnp
filds
scas
add
ja
sub
add
std
and
in
jge
or
and
lock
sub
je
push
out
add
inc
hlt
jbe
negb
pop
or
jge
pop
faddl
push
dec
pop
mov
mov
xor
xchg
cmp
xchg
push
sar
push
jae
shl
push
mov
leave
mov
sti
dec
add
inc
or
das
dec
sti
jmp
xchg
leave
movsl
cli
pop
leave
lods
fnstenv
lret
mov
jg
xchg
xor
jne
mov
lods
incl
in
lods
nop
add
ljmp
inc
xchg
lea
add
dec
xchg
adc
les
mov
sbb
sbb
jmp
cmp
inc
sub
jge
fsub
jge
out
push
cmp
scas
test
out
outsb
push
cld
mov
andb
cmp
push
icebp
mov
pop
pop
adc
cmp
cwtl
mov
aaa
or
and
push
pop
in
jge
out
xchg
cmp
push
sub
or
mov
int
mov
addb
mov
repz
rcll
add
or
or
pop
mov
or
mov
scas
push
sahf
jle
xchg
sub
pop
daa
adc
aas
sahf
jmp
insb
ret
fcmovb
push
jmp
mov
pop
adc
bound
or
ficoms
in
jle
adc
jne
or
idivb
jecxz
mov
ljmp
jmp
gs
add
call
in
add
sti
add
addr16
imul
mov
mov
push
data16
mov
lds
aad
rcrb
push
mov
adc
setle
cli
xorb
inc
cmp
push
jecxz
fildll
out
add
mov
dec
or
sti
inc
mov
in
or
inc
or
cld
test
add
gs
leave
ret
rcll
call
sti
mov
jae
mov
jl
ljmp
adc
pop
jg
inc
xor
fisttpl
and
imul
inc
popf
bound
inc
leave
inc
jge
pop
loopne
cmp
scas
or
aad
push
pop
adc
push
mov
dec
dec
push
xchg
ret
cli
add
mov
sti
sbb
inc
add
ret
popf
call
or
cld
add
mov
adc
mov
xchg
push
xchg
lods
xor
insb
mov
or
pusha
lods
dec
push
pop
lahf
jle
mov
mov
mov
jnp
pop
test
aad
outsb
mov
mov
mov
setns
mov
adc
dec
mov
out
sbb
hlt
sub
lock
fistps
incb
mov
mov
push
sub
mov
sub
inc
sti
xor
nop
inc
movsl
pop
out
icebp
sahf
mov
sbb
mov
call
sti
xchg
seta
mov
pusha
or
sti
pop
jo
push
push
jle
or
pop
adc
outsb
pop
push
jb
push
sti
ss
sti
mov
push
sti
cld
sub
inc
jmp
cmp
cltd
je
pop
sub
cld
push
adc
sub
rcrb
mov
cltd
adc
pusha
inc
or
add
cmp
pushw
pusha
sbb
jp
dec
in
add
pop
pop
je
repz
push
repnz
out
aad
gs
pop
mov
mov
push
lcall
xor
icebp
mov
out
mov
jo
mov
or
call
popa
add
fsubl
add
lret
jo
add
add
out
adcb
jne
pop
inc
add
or
cwtl
sub
icebp
xchg
in
pop
adc
out
data16
addb
stos
jne
test
das
dec
pop
mov
push
in
pop
decl
cmp
jg
dec
das
inc
rorb
dec
mov
or
adc
adc
clc
xor
pop
imul
cltd
xchg
cmp
mov
adc
push
or
out
inc
lea
lea
pop
inc
add
xor
rcrl
flds
mov
jmp
sbb
aam
push
ror
cmpsb
cli
int
fidivrl
adc
add
sbb
das
insb
and
mov
fimull
push
aas
mov
pop
in
mov
pop
imul
dec
xchg
xor
and
les
lcall
push
out
add
adc
fmull
pop
add
aas
jmp
inc
movsb
xchg
loope
push
push
cmpsb
inc
in
and
or
repz
dec
mov
out
xchg
sti
xchg
mov
ds
or
inc
jbe
fwait
out
xchg
sti
pop
jb
mul
or
xchg
sbb
sahf
xchg
or
sti
test
mov
clc
add
push
lock
idiv
push
shr
inc
add
jmp
pop
xchg
insl
insl
push
lcall
sbbl
inc
add
dec
add
data16
pop
gs
jae
fwait
mov
adc
pop
push
call
ret
stos
adc
aam
mov
loop
cmpsb
add
mov
xchg
sub
nop
dec
shlb
idiv
jbe
call
xchg
das
les
mov
clc
jns
sbb
jmp
inc
les
mov
fisttpl
dec
mov
push
rolb
dec
mov
rorl
mov
add
inc
lds
jno
xor
hlt
adc
xor
sbb
jae
sub
or
dec
clc
mov
and
or
test
jne
cld
xor
add
mov
xchg
add
jmp
test
testl
sbb
or
std
mov
add
xor
and
sti
rclb
mov
in
insl
dec
or
fdivrl
pushf
out
mov
jo,pn
sti
int
xchg
fisubl
adc
adc
not
imul
pop
shr
pop
dec
or
jle
fwait
out
sub
pop
adc
gs
sub
rcl
mov
adc
add
lret
push
aas
leave
sub
adc
movsb
xchg
in
dec
or
lcall
clc
add
dec
add
push
arpl
jo
mov
mov
mov
call
add
push
hlt
jmp
adc
int3
lahf
cmp
or
and
int3
mov
add
mov
or
lahf
lea
sti
jbe
lcall
aam
mov
nop
pusha
dec
push
lcall
cmp
adc
sbb
lahf
mov
add
fists
popf
adc
push
inc
lea
sub
pop
roll
xchg
out
sbb
out
je
ss
add
sbb
idiv
shlb
rorb
lea
arpl
shll
and
hlt
dec
in
mov
pop
jnp
outsl
sbb
pop
aad
inc
jmp
fldl
adc
loop
jp
test
notl
xor
mov
test
inc
notl
dec
lldt
xor
aaa
lds
daa
lds
inc
in
mov
test
mov
paddsb
push
pop
in
jbe
lods
adc
pop
scas
aas
divl
dec
lcall
aaa
into
adc
clc
ljmp
mov
mov
mov
aas
add
fnstcw
lahf
mov
out
add
jecxz
dec
sbb
cmp
adc
dec
add
in
bound
fstpl
xor
les
push
pop
sete
leave
dec
icebp
add
lahf
lods
decl
into
inc
mov
fnstcw
jl
je
inc
fcompl
insb
add
fstps
rcll
sbb
jge
test
add
and
add
aam
cmp
mov
sub
mov
aam
sti
sar
call
rorb
ljmp
xchg
mov
or
divl
or
lahf
mov
loopne
inc
adc
lods
out
loope
lods
ret
jnp
adc
mov
add
test
pop
adc
je
lcall
mov
adc
push
out
testb
add
fcompl
sti
hlt
outsl
and
push
flds
push
add
cld
scas
stos
mov
ljmp
and
fimuls
cmp
dec
or
orl
push
lret
adc
mov
jle
adc
dec
call
divl
out
adc
jbe
pop
push
add
shr
push
shl
sahf
out
adc
dec
or
repnz
pop
adc
insl
out
inc
gs
pushl
fsubs
je
fidivrs
call
adc
mov
jne
or
cmp
pop
xor
out
jbe
push
dec
mov
cli
sbb
adc
testb
jnp
dec
push
jecxz
sti
add
ljmp
add
adc
dec
push
inc
hlt
add
dec
cmp
xor
adc
lods
jne
and
in
cmp
adc
hlt
mov
ret
xchg
adc
cld
mov
sbb
push
jecxz
jmp
bound
clc
idivl
add
add
rcll
stc
adc
adc
adc
lods
add
pop
stc
inc
add
sub
scas
icebp
sbb
mov
xchg
aaa
dec
dec
les
adc
jecxz
pop
push
pop
lods
cltd
jg
lods
icebp
jae
inc
add
arpl
rcrb
lods
cmp
sbb
adc
call
jnp
mov
pop
mov
stc
test
mov
or
push
out
sub
daa
pop
cmp
cwtl
test
xor
mov
cld
sti
mov
jmp
adc
push
add
stc
aas
push
push
xchg
inc
loope
adc
in
or
cs
out
rorl
ret
ja
sahf
push
mov
lds
addb
xor
iret
add
adc
push
je
pop
dec
test
jmp
sti
hlt
mov
jmp
mov
adc
shrb
pop
push
mov
sbb
push
adc
add
incl
jmp
cmpb
das
call
test
cmpl
adc
adc
cmpsb
ret
dec
push
xor
jmp
and
je
mov
fcoml
lods
adc
add
mov
jne
mov
adc
pop
sbb
or
ret
add
add
sub
pushf
test
ret
je
jmp
pop
aaa
add
adc
ret
je
bound
add
jb
add
jbe
sti
add
fwait
adc
sbb
cli
out
sbb
icebp
das
and
data16
ja
test
mov
xor
inc
jnp
adc
mov
xor
cld
xor
add
mul
or
aas
add
add
mov
in
mov
shr
pushl
pop
push
pushf
xor
test
push
xor
add
enter
mov
sub
push
adc
or
inc
arpl
sbb
adc
inc
add
cmpsb
sti
sub
insl
xchg
push
push
pop
stos
fistl
in
push
mov
loopne
nop
cld
push
adc
mov
jg
add
test
nop
out
add
cld
xchg
shr
jl
xchg
sbb
cmp
call
gs
fs
sbb
add
pop
push
rorl
fdivr
fiadds
cmp
ficompl
sti
faddl
inc
jmp
jo
clc
inc
adc
cli
cld
lahf
and
stos
insb
pop
test
pushf
inc
in
and
fld
adc
inc
aam
out
sbb
fdiv
mov
mov
adc
scas
mov
loope
dec
stos
adc
xor
add
outsb
jmp
add
lahf
jmp
jmp
aad
pushl
notl
rolb
mov
push
pushl
sbb
jbe
mov
adc
mov
adc
fidivrs
adc
xor
incl
mov
adc
pop
adc
jbe
or
notb
mov
adc
adc
ds
mov
push
push
push
enter
scas
or
jne
out
adc
lret
ficomps
adc
jbe
test
test
lahf
add
jnp
das
iret
test
dec
push
mov
jnp
std
add
decl
addb
jl
jnp
out
ljmp
arpl
movsl
lea
xchg
or
mov
cwtl
push
mov
jb
cmp
push
push
mov
movsb
adc
iret
cmp
cmp
push
inc
cli
jo
cmp
shl
les
add
cld
mov
jg
xchg
movsl
push
jl
inc
mov
sahf
sub
push
fcomip
arpl
outsl
jle
xchg
movsb
dec
jns
add
add
fs
mov
jnp
aam
das
jp
arpl
mov
cmp
cmp
sbb
jmp
push
push
aas
push
or
mov
nop
mov
movsl
pop
mov
test
jno
inc
adc
ds
in
ds
lcall
pop
cltd
test
mov
add
xchg
add
cmp
adc
adcl
or
jmp
dec
mov
push
pusha
xchg
jmp
jge
push
sub
xchg
shlb
and
fimuls
add
or
xor
js
lea
loop
call
adc
sbb
mov
popa
in
push
add
lods
adc
xlat
jbe
pop
adc
push
fsubl
adc
sbb
xor
add
inc
add
xchg
lods
adc
push
call
or
xchg
outsb
add
pop
mov
mov
lcall
lea
jl
push
xchg
int3
jnp
subb
xor
je
rcrb
mov
ret
pop
xchg
in
add
jge
push
add
xchg
jecxz
inc
add
push
mov
hlt
inc
hlt
lods
jl
test
incl
test
sti
sbb
repnz
add
mov
lea
das
sti
sbb
lea
clc
mov
pop
mov
sti
mov
sbb
jae
xor
add
add
mov
mov
sti
add
sbb
add
rclb
int
inc
hlt
adc
inc
sti
mov
mov
or
adc
dec
cld
push
dec
hlt
add
pop
or
fstps
adc
movsb
adc
sub
cld
loopne
pop
sbb
div
push
test
hlt
popa
lock
adc
call
push
add
jmp
ljmp
int3
clc
sub
add
jmp
mov
outsl
pop
mov
or
lods
mov
jl
jmp
hlt
add
ret
mov
adc
pop
add
insb
push
sub
pop
fcoml
lea
xchg
and
pop
adc
aam
cltd
inc
inc
mov
jl
pop
adc
testl
inc
adc
sub
sti
bound
repz
inc
or
cltd
xchg
cltd
fs
cli
inc
adc
out
cmp
adc
faddl
pcmpgtd
je
jecxz
jnp
push
call
jg
inc
jmp
dec
ret
sbb
stos
clc
orl
addl
dec
mov
add
adc
cltd
jp
push
dec
jge
adc
ljmp
inc
rorl
add
lods
jae
pop
and
mov
imul
lods
push
add
adc
sbbb
xchg
rclb
not
loopne
pop
xchg
popf
lcall
out
push
adc
stos
jnp
adc
sbb
and
xchg
mov
jg
jo
rcrb
and
mov
test
cli
jp
xchg
sti
jcxz
jg
cmpsl
out
inc
lcall
hlt
inc
and
add
jecxz
ret
xorb
cmp
repz
lods
and
mov
mov
sub
in
scas
adc
imul
rcll
sarb
or
sub
mov
push
push
adc
or
sbb
notb
lahf
das
sbbl
pop
cld
imul
mov
clc
add
push
pop
adc
aam
out
es
les
xor
lock
pop
adc
add
sbbb
scas
xchg
sub
adc
call
add
enter
pop
loop
ret
xchg
into
daa
ljmp
stos
add
mov
pop
sbb
out
xchg
push
jecxz
jmp
pop
insb
enter
mov
jb
test
pusha
ret
jmp
imul
mov
fincstp
ret
add
cmovge
and
jmp
int3
in
jmp
add
leave
sub
and
adc
and
mov
sbb
test
dec
mov
in
push
inc
dec
add
inc
lea
dec
lea
dec
lea
dec
addl
pop
fcoml
xchg
rorb
pushf
add
add
jg
js
mov
aas
mov
adc
cmp
adc
jne
es
cwtl
mov
in
adc
dec
call
push
push
sub
sub
test
add
ss
xor
shl
jb
and
adc
cltd
jne
add
les
push
aaa
sti
imul
add
rorb
inc
fs
jb
je
fdivl
imul
sub
add
mov
xchg
add
push
jnp
fdivl
repnz
pop
xor
out
fcmovnb
stos
pextrw
fwait
xor
add
xchg
sti
scas
imul
push
jg
out
test
std
jle
jle
dec
add
xchg
lahf
mov
je
js
jae
jg
popw
adc
push
repz
outsb
ret
xor
pop
daa
inc
repnz
sar
inc
or
xlat
xchg
xor
jecxz
lods
inc
and
lret
bound
jmp
test
adc
add
adc
jle
cltd
out
push
loope
fmull
cltd
fisttps
insl
roll
adc
and
jmp
add
movsb
pop
scas
inc
or
push
fadds
lahf
jecxz
cmc
mov
xchg
rcrb
add
pop
jle
inc
or
add
adc
sub
js
adc
call
insl
inc
pop
js
cli
xchg
mov
sub
or
out
jle
sti
insl
inc
pop
pusha
push
repnz
fdiv
cli
jl
pushf
add
push
aaa
jg
cmc
jl
adc
inc
adc
sub
in
mov
add
sti
push
xor
mov
or
or
adc
jnp
test
imul
rcl
pop
sbbl
pop
test
mov
or
aam
idiv
int
jecxz
test
or
add
adc
lcall
push
pop
testb
sbb
sub
shlb
xor
adc
je
aam
shl
shlb
mov
adc
mov
lods
clc
push
push
lods
sub
jae
icebp
mov
xor
xchg
lret
jp
add
adc
pop
insl
push
xchg
mov
decl
addb
mov
inc
out
inc
clc
daa
lods
das
push
mov
mov
xor
test
decl
xor
add
sbb
adc
mov
adc
push
or
adc
sarl
inc
add
sub
jle
cmp
add
push
mov
subl
add
lea
add
insb
lcall
push
popw
or
mov
stos
or
shll
jns
loopne
jns
loopne
js
loopne
jns
iret
adc
das
in
nop
push
cmpsl
or
cmp
mov
loop
add
and
add
andl
incl
shll
jmp
xchg
dec
nop
pop
push
fnsave
aaa
loop
xor
pop
pop
popf
or
and
test
bound
mov
cwtl
aam
popa
sub
or
shrb
je
or
and
loope
idiv
pusha
cli
jnp
fcompl
inc
jmp
test
rolb
jne
pop
sub
imul
add
and
call
jge
loope
movsb
cmp
mov
lods
pop
jg
call
and
fucomip
outsl
jle
jns
mov
test
xorl
out
jne
mov
pop
push
insl
adc
call
mov
pop
mov
call
mov
lahf
je
out
mov
mov
fwait
and
push
mov
sbb
idiv
xchg
sbb
idiv
mov
push
pop
mov
dec
mov
scas
pop
testl
adc
mov
idiv
fxch
sub
lret
lea
add
js
dec
ljmp
cmp
aas
add
insb
cmp
sbb
aas
add
ret
je
add
call
jg
adc
sub
sub
xchg
ret
push
xchg
cmp
mov
insl
cmp
jg
adc
insb
shl
das
pop
jge
mov
pop
sub
inc
jo
call
lea
inc
ja
xchg
jl
push
xlat
int3
cmp
add
pop
daa
shll
xor
jne
out
add
shr
jl
in
mov
xchg
jne
xor
aas
fildl
cmp
hlt
mov
outsl
jne
push
iret
push
cmp
jne
cmp
jne
cmp
inc
xchg
aas
jne
add
jo
pushf
je
xchg
pop
pop
data16
jne
xor
sbb
mov
push
xchg
call
xor
bound
inc
cmc
push
lret
jg
outsb
mov
push
je
rolb
adc
adc
push
xchg
mov
incb
ljmp
push
std
jmp
jnp
out
xchg
jecxz
je
jns
fimuls
mov
push
push
ret
jne
mov
xchg
jns
scas
add
imul
das
test
loop
pop
test
testl
hlt
jp
push
push
test
test
jl
decl
daa
push
popf
pop
jnp
or
sti
xor
je
into
divl
repnz
sti
xor
enter
and
or
testb
mov
out
stos
jmp
mov
sub
or
add
mov
cmp
mull
divl
dec
or
push
add
fisttpll
sbbb
aaa
adc
jl
mov
or
gs
adc
add
clc
das
adc
add
insb
sbb
inc
and
mov
mov
xor
iret
mov
add
out
dec
xchg
jg
subb
cmp
stc
pop
repnz
clc
push
jnp
iret
adc
jl
lret
imul
pop
inc
in
cmp
add
pop
or
test
sbb
cmpsl
add
push
cld
xchg
or
call
inc
add
rcrb
adcb
bsr
add
cmpsb
add
push
test
orb
fwait
repnz
call
xor
and
add
push
test
rcrb
jl
mov
inc
jo
push
les
jl
cmp
sti
lock
jmp
pop
adc
inc
xchg
adc
sub
outsb
xor
add
test
push
cwtl
inc
loope
xor
andl
pop
add
jecxz
cmpsl
inc
adc
cmc
or
add
jo
jb
sbb
stc
lahf
jns
out
fwait
inc
or
dec
mov
mov
inc
add
test
sti
cld
jecxz
data16
jmp
add
xchg
outsb
les
call
push
sub
add
flds
cmp
adc
inc
dec
mov
xor
mov
inc
mov
idiv
adcb
in
mov
add
pop
adc
jb
jmp
popa
sub
or
inc
ljmp
lcall
inc
movsl
mov
add
adc
jecxz
pusha
lahf
imul
fwait
inc
mov
fs
test
jnp
popa
fwait
sub
testb
stos
imul
inc
testl
cmp
adc
jl
clc
push
jnp
mov
jge
mov
repz
nop
push
cmp
xchg
push
cmp
mov
jp
movsb
repz
mov
jp
add
sbb
popa
and
dec
pop
and
dec
pop
and
lret
xchg
sub
mov
push
and
aad
jg
push
pusha
inc
and
cmp
xor
push
shl
outsb
aam
stc
shr
arpl
cmp
adc
sti
adc
fcompl
mov
xor
mov
call
shr
repz
add
fwait
lods
lahf
jmp
push
les
and
xor
adc
fwait
pop
add
jmp
jp
adc
sbb
adc
xchg
outsl
add
repnz
pop
out
push
jne
icebp
push
adc
and
jne
sbb
mov
sub
mov
mov
add
inc
lds
scas
add
stc
pop
push
xorl
idiv
jmp
add
xchg
imul
jmp
push
fists
pusha
pop
in
fs
or
jo
ja
out
lods
inc
sub
mul
jecxz,pn
cwtl
push
lea
movsb
mov
movsb
imul
mov
add
pop
adc
mov
in
lds
sub
movsl
sub
ret
pop
dec
add
adc
mov
out
adc
aas
pusha
sub
ds
pop
inc
add
mov
mov
stc
lds
pop
sti
ret
mov
pop
sub
mov
imul
and
js
insb
mov
ljmp
psrlq
mov
lcall
cwtl
cmp
adc
dec
data16
daa
cli
jno
and
push
sti
sarl
ss
mov
mov
xchg
lods
rcrl
jmp
add
inc
out
andl
movsl
adc
mov
call
mov
das
xchg
mul
dec
mov
aas
mov
sti
les
sub
incb
ja
xlat
xchg
ja
add
lds
rol
jbe
cld
repz
movsl
mul
fwait
sub
or
xrelease
push
or
pop
push
add
cmp
push
icebp
outsl
or
xor
adc
sbb
bound
mov
je
cli
xor
outsl
sub
cli
sahf
mov
mov
je
cli
push
icebp
pop
sub
clc
sahf
mov
mov
inc
je
cli
xor
pop
sub
push
popf
cwtl
ljmp
cli
mov
outsl
sub
in
pushf
cmp
loop
push
mov
jae
cli
aam
outsl
sub
out
add
lret
loope
mov
flds
or
or
sub
jae
loop
testb
cmp
adc
xchg
jns
jb
jno
mov
xor
mov
rorb
xchg
sub
das
fcoms
ret
mov
push
test
mov
aam
lods
pop
mov
inc
push
add
adc
test
pop
jg
lods
adc
push
cmp
inc
add
jmp
mov
xor
pop
add
cmc
inc
add
adc
push
push
inc
add
push
jne
imul
jmp
xchg
clc
add
adc
sar
mov
xchg
jnp
jmp
pop
mov
push
jne
fwait
xor
sub
add
cltd
xchg
clc
add
add
cwtl
inc
add
cmp
add
jns
cmp
add
xchg
cmp
cmp
adc
add
pop
add
jle
outsl
or
movsl
mov
inc
add
shll
or
push
xor
add
adc
movsb
dec
push
cmp
and
sbb
sbb
add
lea
add
or
add
stc
push
cmp
rcr
in
mov
mov
jns
mov
sub
stos
xchg
lods
pop
xor
aam
cmc
shr
jmp
push
out
xorl
aaa
inc
sti
faddl
adc
cmpsb
sbb
movsl
add
stos
loop
add
xor
mov
aas
cmp
call
movl
cmc
shr
xchg
xlat
inc
scas
pop
cmpsb
or
pushf
movb
adc
push
cmpsb
dec
js
adc
adcl
add
gs
ja
aas
jmp
int3
imul
mov
subb
cmp
gs
daa
cld
xor
pop
adc
cld
imul
pop
lret
add
ljmp
xchg
nop
adc
gs
jl
ret
in
and
lahf
add
gs
js
aas
jmp
imull
into
mov
mov
xchg
mov
gs
scas
or
cmpsb
sti
imul
add
lahf
aad
sar
test
or
sub
lds
jne
repz
mov
call
fmull
inc
lods
sub
je
clc
out
ljmp
sbb
add
or
cmc
pop
adc
push
sbb
notl
lods
adc
cltd
pop
cmp
hlt
inc
idiv
inc
enter
daa
mov
sbb
int3
or
daa
mov
cld
or
scas
or
cld
add
add
xchg
xor
cli
dec
ret
std
inc
insl
adc
lods
repnz
fcmovne
add
mov
or
add
flds
add
push
shll
pop
xchg
movsb
sbb
movsl
gs
lea
xchg
jns
jbe
arpl
test
sti
add
clc
add
inc
dec
or
add
addr16
insb
lcall
scas
or
mov
movsl
aad
xchg
adc
add
mov
xor
test
jg
adc
flds
iret
rclb
mov
pusha
sbb
mov
out
mov
fsts
mov
jo
add
mov
loope
lret
jae
sti
imul
jg
pop
loope
mov
mov
hlt
mov
fldlg2
add
jmp
push
lret
push
stc
add
int3
pop
cltd
add
adc
sbb
adc
jmp
loop
fnsave
pop
jne
je
repz
mov
mov
pop
gs
xchg
shl
pop
jne
outsl
aaa
das
outsb
push
lcall
inc
out
push
mov
pop
jne
pop
sar
and
shlb
inc
fwait
sub
mov
xchg
pop
cltd
adc
cmp
bound
sub
pop
std
lds
adc
push
mov
pop
xchg
rdpmc
dec
or
jne
cmpsb
dec
incl
sbb
push
add
cmp
idiv
push
add
push
data16
mov
fdivs
cs
dec
add
sub
mov
test
pop
cmp
inc
test
push
call
mov
fildll
jne
in
cmp
fcomip
jne
mov
or
add
xorl
jl
mov
pop
jl
xchg
and
or
adc
jns
xor
ss
jl
fmul
jno
cli
sbb
icebp
pop
fdivr
jns
ret
loop
or
jne
xchg
imul
mov
sbb
das
mov
repz
repnz
adc
mov
sbbl
or
cmpsb
jl
push
bnd
dec
adc
or
adc
mov
mov
add
mov
adc
add
and
add
loopne
or
and
jp
pop
outsb
je
gs
stc
lcall
add
repnz
ret
jmp
fneni(8087
pop
inc
je
mov
sar
and
mov
ds
jmp
dec
cmp
fdiv
jmp
jmp
jmp
add
add
push
adc
push
fdivrs
rclb
push
adc
jmp
add
or
cmpsb
nop
int3
add
adcb
pop
sub
xchg
lock
out
add
pop
outsb
adc
add
adc
jmp
mov
test
cmc
adc
jmp
add
xchg
or
add
or
stc
mov
leave
loop
out
sbb
je
mov
or
or
cmp
or
xor
fildl
pop
lret
lcall
add
or
decl
in
dec
or
pop
mov
je
scas
inc
mov
inc
jp
mov
add
push
aam
mov
add
push
push
add
fcmovu
cmp
fidivl
push
add
lcall
inc
cli
rorl
dec
xor
pop
mov
inc
out
je,pt
rolb
sbb
insb
adc
dec
js
mov
inc
jmp
dec
out
push
or
outsb
jp
jo
mov
jg
addb
sbb
ja
ljmp
mov
insl
jp
xor
mov
push
addb
out
sbb
adc
outsl
icebp
aam
pop
ret
daa
sub
mov
adc
sub
fs
mov
add
fldcw
fildl
xlat
in
lock
aaa
jmp
jmp
shr
mov
xchg
test
and
push
sub
xor
jmp
int3
decl
sbbb
mov
ja
es
jno
jmp
push
ss
cmp
mov
insb
sbb
test
or
je
dec
cmp
add
ljmp
cmc
xchg
jo
push
jne
cmp
out
jmp
sti
jb
nop
repnz
mov
add
pop
fstpt
loopne
adc
jg
lahf
pop
sti
mov
mov
xchg
out
stc
call
jle
xchg
push
pop
call
scas
test
cmp
add
pop
sti
aad
xchg
shll
inc
xchg
add
mov
adc
sbb
out
aam
push
lock
sub
pop
jmp
sbb
loop
rcr
bound
loopne
sbb
sbb
pop
popa
adc
xchg
les
iret
je
adc
mov
loopne
test
add
std
pavgw
push
aad
sarb
mov
xchg
adc
loope
jne
sub
mov
add
inc
enter
push
push
ljmp
and
push
sti
mov
imul
mov
outsb
mov
hlt
imulb
add
repnz
andb
cmp
push
adc
sub
add
add
in
addr16
das
add
adc
adc
cmp
incl
jp
pop
pop
daa
add
loope
leave
mov
fdivl
sti
jmp
je,pt
lods
or
jle
sub
pop
mov
adc
int3
sar
inc
adc
roll
insb
mov
lahf
push
out
cmp
lods
add
loopne
sbb
imul
jg
mov
imul
adc
add
sub
jg
inc
loopne
mov
mov
mov
aam
lcall
loopne
or
adc
aam
or
jae
out
outsl
adc
in
in
sti
push
cld
imul
call
inc
or
mov
adc
ja
sar
call
std
pop
lods
pop
repnz
leave
add
incl
sub
dec
rcll
lods
jmp
je
add
or
bswap
stc
es
jne
jmp
push
cli
cld
out
add
add
sub
in
push
pop
addl
xor
test
push
nop
cmp
pop
adc
aaa
hlt
pop
sti
insl
or
into
adc
idivb
jmp
lret
push
cli
hlt
push
push
inc
add
imul
or
add
lods
adc
lods
adc
mov
ret
adc
mov
adc
add
mov
sub
inc
and
mov
je
xchg
je
dec
test
call
shrl
lds
add
push
stos
hlt
decl
xor
icebp
jne
lock
std
add
fisttpll
push
incl
insl
stc
inc
add
aad
and
cmp
loope
add
add
scas
and
imul
fdivl
dec
sti
lret
loope
and
ljmp
jecxz
jo
jg
fsqrt
xor
jl
or
xlat
incb
jo
mov
mov
add
jmp
jecxz
enter
pop
pop
sti
adc
push
rcl
lods
jae
inc
loopne
iret
mov
mov
mov
add
iret
or
and
push
pushl
add
cmp
test
add
shl
sti
pop
sbb
call
jmp
in
xlat
xor
mov
je
out
mov
jo
push
hlt
adc
shr
shrb
push
in
add
sahf
cmp
fadds
aad
hlt
sti
not
call
sti
imul
dec
cwtl
sub
push
lahf
sub
adc
add
adc
add
xchg
lret
add
leave
xor
push
push
add
lahf
and
jmp
in
mov
cmpsl
mov
push
je
xchg
add
clc
lcall
ficoms
call
jb
cmp
roll
xor
gs
xchg
sti
mov
dec
push
push
ss
mov
jecxz
aam
sti
mov
jecxz
cli
and
out
dec
je
push
cmp
dec
sti
pop
sub
clc
sar
xor
out
mov
mov
push
add
sub
adc
xchg
aaa
add
pcmpeqb
pop
test
leave
xor
divl
ljmp
sub
jae
mov
add
mov
shrl
out
dec
add
sbb
jne
xchg
xor
mov
push
jg
mov
pcmpeqb
pop
testl
nop
dec
outsl
push
lods
aas
mulb
mov
sbb
jmp
adc
push
push
sti
test
repz
mov
cli
add
push
es
xchg
jbe
jg
pop
ss
push
int
cld
pushl
mov
jg
pop
rclb
push
int3
push
divl
inc
shrb
inc
add
inc
inc
xchg
decl
cwtl
mov
sti
jns
inc
push
xlat
lods
insb
jne
mov
ret
jae
ja
les
add
cmp
shrb
add
sahf
sbb
inc
push
repnz
sub
jge
jmp
arpl
enter
sub
test
cli
testb
xor
fnstcw
pop
mov
lods
js
dec
je
or
cmpsb
testb
test
sbb
or
pop
in
popa
insb
stos
jne
notb
in
mov
add
dec
outsb
lds
fwait
movsb
ja
leave
xor
sbb
shrl
iret
insb
pop
fwait
stos
pop
inc
adc
js
pop
jno
pop
fwait
movsb
ja
pushf
add
mov
xchg
inc
mov
push
xlat
jae
vphaddubd
push
inc
out
add
add
sbb
jns
jmp
mov
sbb
xor
inc
jg
clc
ficoms
pop
leave
pop
je
ds
mov
sbbb
sti
gs
enter
inc
xchg
xor
dec
xchg
inc
sti
fdivl
je
pop
in
add
out
cmp
and
je
das
dec
sti
add
dec
push
xchg
mov
sti
test
inc
push
push
fs
cmp
add
pop
push
stc
jmp
das
idiv
mov
and
idiv
lcall
call
push
pop
push
add
arpl
jne
push
jnp
lret
inc
adc
notb
and
je
daa
dec
cmp
inc
fs
cmp
pop
cmp
cmp
cmp
lock
enter
rolb
add
repz
and
mov
mov
mov
and
pop
adc
shl
push
dec
cmp
xchg
or
push
add
jb
and
std
cmp
cmp
incl
cwtl
mov
add
add
ljmp
cmp
sbb
xor
and
add
imul
adc
fcmovnb
mov
test
push
xchg
sub
add
xchg
add
aas
add
mov
rorl
out
dec
mov
rcr
dec
dec
call
add
rcll
imul
aam
sub
ret
lock
test
mov
or
dec
gs
stc
push
inc
mov
add
call
enter
mov
movsb
inc
jmp
fcmovnb
dec
imul
prefetch
clts
jge
wbinvd
jne
pop
and
inc
icebp
out
push
jg
add
mov
mov
adc
xchg
rcrb
shr
in
or
sbb
pop
sbb
out
ds
jno
sub
jge
arpl
pop
out
test
push
and
xchg
push
add
add
mov
out
push
pop
sub
mov
adc
jle
pop
push
dec
mov
inc
jnp
cmp
push
and
mov
jnp
add
add
jne
insl
mov
stc
cmp
lea
xchg
repnz
inc
inc
add
movsb
cmp
loopnew
ljmp
or
push
cmc
lret
sbb
add
or
adc
cmc
lret
pusha
add
and
push
ret
ret
mov
das
push
mov
ja
adc
mov
or
xchg
ret
xor
pop
inc
xor
xchg
dec
mull
ds
mov
hlt
scas
imul
lock
push
sub
jecxz
jns
out
cmp
shlb
cld
pushl
mov
jg
data16
in
or
lahf
push
inc
add
mov
subb
jmp
mov
in
jbe
xor
mov
xchg
or
imul
jmp
mov
rorl
pop
xor
jns
add
sub
mov
je
in
out
mov
insb
adc
and
out
rorb
jbe
lret
jecxz
out
add
sti
shr
jle
rcr
inc
dec
imul
jl
jmp
sub
ret
add
out
leave
mov
jl
add
lock
aas
xchg
das
jecxz
jnp
xchg
sbb
outsl
sbb
daa
rclb
sbb
in
xchg
lahf
dec
sbb
jmp
test
jns
pushf
je
mov
inc
mov
mov
push
inc
jno
or
jmp
lock
enter
int3
sbb
fisttpll
ds
xchg
add
adc
inc
popf
add
xchg
idiv
cli
sbb
daa
and
push
cmp
stos
sbb
mov
insl
adc
sahf
mov
mov
daa
add
jge
ljmp
lea
push
sbb
pushl
push
or
xchg
jne
mov
repz
jo
lea
and
add
out
notb
pop
int
mov
mov
shlb
mov
mov
and
addl
je
mov
jg
stc
lds
add
mov
sub
fst
inc
jae
les
mov
icebp
data16
cmpsb
pop
jne
pop
popf
pop
adc
sbb
or
or
loopne
pop
cmp
outsb
mov
ror
aas
call
test
adc
mov
jno
mov
ljmp
sti
fistpl
fistpl
loopne
fcompl
repnz
loope
fists
popl
xchg
mov
adc
cltd
int3
push
cmp
loopne
xlat
adc
ja
aam
xchg
orl
movsl
cwtl
movsb
pop
cmp
sub
mov
outsb
dec
mov
pop
mov
roll
fcmovne
loopne
clc
loop
negl
mov
pusha
jmp
ss
push
in
inc
xor
add
aas
sti
push
aas
add
add
jne,pt
dec
sbb
leave
and
adc
sbbl
sbb
lods
and
inc
jl
mov
pop
ret
repnz
leave
or
xlat
adc
push
and
add
push
jle
in
sti
xchg
mov
or
pop
jmp
push
bound
pusha
push
test
sti
ds
cmp
xchg
mov
mov
test
add
pop
std
stos
movaps
cltd
rolb
jl
push
push
dec
add
jnp
inc
cld
xor
pop
fdivs
xchg
lcall
jbe
cs
sbbb
mov
lcall
inc
cmp
loop
add
ret
iret
and
lock
add
nop
add
pop
scas
and
and
add
push
divl
and
idiv
bound
add
ret
sub
pop
add
into
mov
jmp
lock
add
enter
leave
pop
sti
mov
add
scas
addr16
mov
insb
mov
xor
mov
mov
test
or
xor
add
push
or
test
subl
push
sub
push
push
push
inc
nop
pop
or
scas
mov
cli
xchg
dec
cli
pop
incl
jmp
push
inc
jg
mov
mov
jmp
xchg
imull
xchg
pop
je
adc
inc
push
in
imul
jmp
pop
out
mov
push
and
dec
ljmp
mov
in
xchg
adc
mov
inc
cmp
cmpsl
adc
pop
jo
xor
mov
lea
sbb
call
or
mov
or
adc
div
daa
test
orl
mov
add
mov
testl
inc
inc
mov
and
in
adc
aas
mov
cmp
insb
add
rcl
jbe
je
cld
cmp
movsl
ljmp
int
mov
add
adc
jmp
aas
test
xchg
and
test
add
adc
fnsetpm(287
push
push
inc
add
inc
dec
xchg
jl
and
inc
aas
mov
cmp
add
loopne
test
in
gs
rclb
pop
call
data16
call
mov
xor
lds
add
jae
shlb
jecxz
int3
fdecstp
xor
sarb
call
scas
mov
sbb
cmp
fidivl
mov
jae
jno
jl
mov
loope
adc
xor
cmp
loopne
je
jmp
dec
call
add
addr16
or
inc
push
inc
inc
cli
cwtl
push
sti
cli
icebp
jl
aas
add
imul
loopne
sti
jo
add
stc
ljmp
pop
cmp
inc
aaa
call
sub
stc
lods
cs
decb
add
xchg
mov
xchg
add
add
out
push
xlat
roll
dec
repz
sub
sti
cltd
scas
dec
cmc
scas
cli
stc
fsubrp
aas
add
mov
or
cmp
call
rclb
jnp
insl
inc
call
outsb
mov
cmp
idivb
mov
dec
or
push
pushf
jne
add
pop
insb
iret
cmp
mov
push
cmp
int
repz
repz
adc
push
in
mov
cmp
sub
push
cmp
adc
or
xor
pop
adc
cmc
ret
arpl
cwtl
imul
cmp
push
add
sub
fdivrp
fs
imul
mov
es
inc
cmp
pushf
lods
or
push
inc
je
pop
shl
add
sti
fimuls
fiaddl
adc
or
push
mov
adc
sbb
sub
jmp
je
adc
imul
and
lock
push
add
sarb
shrl
jmp
shlb
adc
pop
pop
lea
jge
adc
add
push
sti
mov
pop
add
lds
jecxz
adc
dec
push
xchg
std
shl
dec
call
xchg
shlb
lea
bnd
sahf
adc
mov
push
test
ljmp
add
jae
add
push
inc
adc
cmp
dec
adc
add
sbb
add
lock
insb
stc
inc
jecxz
cli
dec
add
ficoml
mov
sbb
decl
cltd
push
xor
js
dec
call
subb
lcall
add
lock
add
push
jne
lret
clc
dec
sti
cmp
repnz
lcall
add
data16
adc
xchg
inc
dec
call
mov
push
cld
xchg
adc
xorb
jmp
psubsw
in
mov
imul
imul
aam
xor
sub
jmp
mov
add
cmp
sub
add
xchg
std
cmp
js
fcmove
sti
loopne
xlat
psrad
jge
fidivrs
ret
cmp
insb
mov
into
test
inc
add
mov
adc
sbbb
addb
inc
add
mov
jecxz
insb
mov
sti
pop
mov
jne
and
sti
imul
cmp
ljmp
mov
jmp
push
sbb
adc
xchg
cmp
jae
mov
fs
out
push
in
sub
in
and
adc
sti
inc
push
mov
sbb
xchg
sbb
test
sahf
push
cmp
sbb
scas
subps
mov
add
scas
dec
xor
add
or
idiv
push
adc
idiv
popf
mov
popf
stos
dec
push
lret
adc
inc
int
jecxz
dec
loopne
mulb
add
inc
rdtsc
clc
inc
cld
pop
adc
add
or
inc
stc
aaa
sti
in
mov
jne
or
loope
inc
or
xchg
inc
fcompl
int3
inc
push
fstp
add
jp
addb
rolb
je
add
push
leave
mov
knotb
add
call
test
je
call
jle
jne
jbe
out
mov
adc
cli
loopne
das
pop
cltd
fldl
mov
push
jg
jl
and
pop
frstor
sbb
sar
sub
pop
cmpl
sub
or
rolb
in
data16
fldt
add
inc
mov
cld
movb
mov
mov
inc
sbb
inc
xchg
pop
out
inc
jmp
jne
push
add
out
test
add
mov
lods
xor
gs
decl
ret
or
das
mov
aaa
add
pcmpeqw
xor
in
leave
dec
cltd
jle
mov
decl
sub
add
pop
dec
or
jmp
xlat
sti
dec
and
pop
adc
jmp
or
jmp
nop
xor
inc
dec
lea
jmp
rorb
pop
mov
adc
jmp
lahf
or
jb
or
shll
xchg
cltd
iret
inc
fsubl
add
pop
out
mov
add
pop
scas
pop
orl
xor
std
cmp
jae
gs
adc
jmp
pop
sbb
stc
pop
mov
jg
popf
das
call
mov
das
dec
push
mov
imul
iret
lods
faddl
fwait
add
pop
or
cld
insl
pop
add
cmp
push
or
ret
notb
mov
mov
rorb
mov
scas
inc
sti
scas
fwait
add
rcrb
push
outsb
push
idiv
pop
scas
pop
enter
adc
jns
roll
jmp
xor
xlat
jae
add
xchg
jg
cmpl
jge
repz
test
push
ret
or
add
jne
adc
sahf
and
adc
rcll
insb
dec
jmp
jae
enter
fadds
dec
ja
add
loope
or
fcom
jge
out
fdivrl
push
lret
testl
insb
push
in
aas
adc
inc
nop
mov
cli
sar
add
xor
mov
repz
pop
stc
mov
loope
add
lahf
sbb
dec
push
in
mov
cmp
ljmp
add
test
stos
cmpb
hlt
xor
pushf
in
dec
jg
test
lahf
inc
or
enter
mov
and
adc
in
xlat
sub
dec
lret
jl
adc
mov
add
icebp
xchg
pop
jmp
inc
leave
sub
pop
add
pop
jmp
add
add
scas
cmp
sub
dec
sub
lock
xor
pop
adc
sub
ret
mov
sti
cmpsb
pop
push
add
mov
fs
add
imul
test
arpl
sti
pusha
jecxz
cli
dec
mov
shrl
push
fimull
ss
out
mov
pop
add
aas
xor
call
repz
add
mov
notl
data16
sti
jo
roll
jmp
pushl
mov
divb
imul
xorl
test
push
jecxz
call
repz
jp
mov
stos
pop
faddl
hlt
jge
loopne
stc
ficoml
add
mov
mov
ds
mov
adc
jne
scas
test
fcomip
call
mov
jae
pop
dec
idiv
add
call
mov
cli
sbb
cmc
aas
add
or
ds
xchg
mov
aas
inc
aam
add
add
call
rorb
movsb
incb
mov
js
mov
jns
lock
sti
xor
xchg
cmp
push
mov
pop
sti
sbb
push
mov
nop
or
sti
into
jnp
arpl
cli
add
test
cmp
pop
sti
inc
aad
cmp
xor
jmp
adc
push
xchg
sbb
adc
cwtl
sub
add
js
jg
add
mov
fildll
fimull
pxor
xchg
test
add
cmp
add
insb
call
fmull
xor
jmp
rcr
sub
push
xchg
xchg
aad
jg
sbb
mov
les
loope
outsb
jne
dec
sub
insb
xchg
inc
sub
cmp
das
cltd
add
aas
lods
call
mov
sub
cmc
xchg
sar
imul
sub
jmp
or
or
add
subb
fidivrs
mov
and
sub
inc
cwtl
lahf
inc
in
push
lahf
test
cmp
sti
cmp
out
in
pop
adc
xchg
fimull
sti
jle
add
lea
adc
arpl
test
add
outsl
call
rcrb
add
pusha
mov
popa
mov
pop
enter
fidivrl
call
adc
lea
scas
inc
int3
inc
stos
xchg
cld
loop
dec
fsubrs
adc
stos
mov
add
test
int3
mov
jae
ret
mov
mov
adc
push
pop
cmp
xchg
repnz
call
mov
divb
mov
inc
sti
aam
mov
jle
sbb
sub
or
bnd
aam
dec
sti
or
icebp
aas
add
sbb
es
mov
aas
cmpsl
popa
lea
add
jns
decl
scas
adc
mov
insl
hlt
ljmp
jns
data16
flds
push
mov
jge
sub
fstpt
cmp
dec
sti
pop
adc
add
call
inc
aas
sub
jl
cmp
sbb
mov
jmp
inc
setl
add
fwait
movsb
push
jnp
add
xchg
out
add
sub
jo
xor
add
mov
loop
jp
loopne
mov
sar
sub
mov
cmp
inc
incl
sub
jns
or
inc
stc
aaa
jp
addr16
ljmp
or
test
xor
lea
sti
dec
add
rcl
lret
out
stos
jnp
jmp
pushf
into
out
mov
ret
fisubrl
fnstenv
shlb
les
cmp
jmp
inc
lods
or
js
sub
dec
sub
jae
out
mov
out
das
dec
test
scas
inc
sub
cli
mov
xor
xchg
test
lods
imul
mov
imul
cmp
inc
push
mov
notb
pop
call
in
or
mov
mov
push
call
sbb
lea
cld
decl
arpl
and
jmp
notb
mov
sub
push
out
fs
clc
fidivl
cmc
incl
push
roll
sahf
adc
push
orb
mov
imul
mov
pop
mov
or
stc
arpl
notl
les
sar
cmc
sti
inc
mov
xor
push
or
idivl
xchg
and
xchg
icebp
cmp
dec
ja
add
sub
incl
add
aas
bound
testb
stc
ret
dec
xor
ds
lahf
cmp
adc
lea
adc
push
mov
jmp
fcmovbe
cmp
outsl
outsb
cmp
es
or
cwtl
lods
push
mov
mov
mov
mov
push
pusha
dec
cmp
add
outsb
leave
sub
mov
ja
and
cli
add
sbb
mov
fmull
push
pop
lods
outsb
mov
mov
push
inc
scas
and
lcall
dec
iret
imul
loop
xchg
mov
push
sub
mov
loop
xchg
int3
insl
cli
jbe
sahf
fistps
add
sub
pop
lret
movsb
imul
jl
xchg
sub
push
cmc
movsb
divl
pop
adc
movsb
into
adc
ljmp
sti
push
inc
lahf
xlat
add
add
push
jns
idivb
sbb
sti
imul
js
fiadds
jne
inc
lahf
repnz
inc
sub
mov
add
shlb
idiv
add
xchg
in
adcl
jae
fwait
dec
lar
dec
notl
dec
fists
pop
pop
sub
ltr
je
loop
push
push
insl
adc
enter
cmp
adc
sub
clc
mov
jns
inc
or
std
orb
mov
xchg
inc
adc
hlt
push
xchg
inc
hlt
insl
aam
or
aad
aad
add
hlt
enter
xchg
lds
call
jle
int3
sub
pushl
cmpsb
flds
fucompp
aam
add
inc
sti
aaa
je
std
cli
sarb
mov
daa
push
jg
test
lds
shlb
incl
adc
cmpl
sti
add
adc
mov
and
dec
shr
or
jg
jge
add
loop
add
enter
test
cld
push
or
push
xor
sub
add
lcall
ljmp
cmp
aas
outsl
xchg
test
cmp
push
inc
cmpsl
repnz
rcll
sbb
nop
lods
xor
insb
push
push
and
aam
mov
repz
sti
cwtl
sub
push
sub
push
or
add
std
fidivrs
sti
mov
pop
inc
cld
mov
inc
into
mov
mov
ficompl
cmp
sbb
sar
loope
test
imul
fiadds
jl
add
pop
mov
jmpw
adc
imul
mov
lods
xlat
or
movsb
jecxz
or
adc
jmp
cmp
push
inc
lret
adc
jmp
movl
xchg
aaa
mov
in
push
icebp
popa
pop
jae
jecxz
fcmovnu
testb
dec
mov
inc
mov
inc
jecxz
add
out
clc
and
fucomi
lods
idiv
out
fdivp
jne
mov
mov
mov
jecxz
mov
testb
xchg
enter
push
push
jle
int
fcmovu
cmp
fiadds
jne
fbstp
and
fimull
int
sub
incw
cmp
add
jo
add
mov
pop
xor
movsl
xchg
movsl
mov
mov
mov
push
call
pop
cmp
xorl
outsb
cmp
insb
push
fs
jnp
mov
fsubp
rorl
std
cmp
arpl
aad
inc
cmpl
inc
inc
add
out
out
shl
aad
shll
jle
pop
sub
fwait
add
cmp
adc
mov
test
adc
cwtl
sub
push
push
xchg
mov
cmp
adc
leave
mov
adc
mov
push
fs
sbb
insl
leave
add
test
lea
or
cmp
push
bnd
push
outsl
adc
adc
cmp
gs
mov
out
clc
adc
cmp
add
rdpmc
push
inc
dec
outsb
shll
xchg
dec
cmp
jmp
or
mov
ret
lock
mov
cli
popa
nop
adc
jmp
orb
dec
sbb
sahf
mov
das
xor
ret
xchg
mov
xchg
add
out
adc
rclb
cmp
in
enter
loop
stos
mov
movl
adc
adc
addr16
add
xor
lds
jnp
ljmpw
mov
idivl
jne
xchg
push
sbb
adc
inc
call
pop
add
arpl
cvtdq2ps
sub
loope
addr16
nop
lods
adc
mov
fistpll
fimuls
shr
or
js
inc
popf
xchg
mov
add
or
subps
stc
rolb
testl
jnp
xchg
adc
dec
cli
fdivp
ss
ja
inc
sub
xchg
jge
sbb
jge
bound
fisttps
mov
sub
mov
imul
or
adc
add
mov
jg
sub
cld
xor
sti
push
fcmovnu
es
xor
lret
scas
and
add
pop
popl
or
fcomi
icebp
pop
pop
cld
fcmovbe
loop
enter
test
add
mov
stos
add
adc
add
add
inc
adc
jno
mov
adc
sub
in
jg
lahf
fildl
mov
jne
out
dec
dec
sbb
xchg
orb
sbb
mov
add
les
in
insl
nop
adc
mov
sbb
roll
or
leave
xchg
mov
mov
push
push
xor
inc
xor
filds
mov
mov
jl
jnp
cmp
repz
inc
es
test
dec
loope
int
loop
testb
xchg
ret
add
jb
xchg
add
cltd
cmc
call
or
lock
mov
out
out
popl
xor
pop
stos
test
and
jae
push
into
add
pop
pop
xlat
sbb
or
je
jge
das
sahf
ja
xor
xchg
and
add
dec
xor
xchg
jbe
mov
in
add
inc
pushw
into
imul
ljmp
mov
testl
dec
or
push
testb
cmpsb
dec
pushl
pop
jne
inc
lcall
ds
pop
fs
add
fbstp
gs
rolb
sti
andb
cmpsl
std
add
jle
es
cli
rorb
sti
sbb
or
scas
aas
or
incl
cwtl
xor
je
mov
add
pop
mov
add
aad
cli
sti
out
xchg
test
jae
test
icebp
mov
ret
cli
ret
push
sub
mov
cs
add
mov
lods
dec
xor
fwait
push
or
sub
xchg
pop
outsl
add
sub
pop
adc
inc
stos
mov
subb
clc
int3
lahf
ret
das
mov
int3
repz
mov
pop
inc
adcl
cs
bound
hlt
test
out
mov
push
sub
inc
xor
pop
mov
mov
mov
mov
sub
out
push
push
push
arpl
cmpb
xor
mov
inc
mov
int3
incl
mov
xor
leave
mov
push
sub
adc
add
adc
cli
add
mov
inc
and
test
pop
dec
xchg
xchg
or
xchg
fistpl
test
pop
or
add
rcrb
insb
jmp
pop
inc
sbb
out
add
mov
push
bound
lea
push
adc
shrb
adc
pop
sub
or
idivb
pop
bound
repnz
sub
mov
xor
sub
push
adc
push
shl
pop
inc
loop
mov
inc
mov
and
xchg
lock
testb
jmp
je
pop
outsl
adc
pop
add
clc
dec
call
mov
gs
push
bound
pop
xchg
mov
cld
inc
loop
and
popa
add
add
out
es
jmp
jp,pt
jmp
stc
sti
cli
ret
xchg
inc
mov
mov
sub
dec
aad
std
rolb
fsts
jns
sti
mov
adc
lock
add
cmp
xor
subl
std
jl
jl
das
and
out
cs
imull
mov
add
pop
xor
ljmp
dec
add
xlat
xchg
push
xor
sub
das
xor
sub
adc
mov
mov
ret
mov
call
xchg
add
adc
xor
push
jmp
aad
lahf
fdivrs
and
jnp
aaa
in
xor
or
ret
jae
mov
int
sbb
mov
std
mov
fmuls
xchg
les
mov
popf
cmp
mov
adc
mov
mov
adc
adc
adc
pop
xchg
add
add
jmp
call
xchg
mov
pop
cmp
hlt
out
pop
adc
or
cli
int
xchg
int
or
add
imul
add
bound
mov
push
add
mov
xchg
mov
pop
adc
cmp
pop
test
add
lahf
jb
test
in
adc
pusha
insl
push
call
insl
enter
jge
sti
fdiv
push
jne
fimull
nop
fcmovnb
adc
stc
fdivs
popf
in
ja
mov
insl
push
push
addl
or
inc
add
pop
jne
mov
adc
sub
in
pop
dec
call
mov
mov
shl
sub
jecxz
out
orl
or
adc
dec
dec
aad
mov
inc
jne
mov
pop
push
mov
mov
xchg
and
adc
push
push
test
push
push
add
testl
and
out
xor
cmp
sub
xchg
mov
push
pop
add
xchg
add
mov
sti
add
inc
fisubrl
in
ret
std
fcmove
push
sti
mov
mov
inc
add
enter
lret
push
lods
mov
aad
add
decl
lods
mov
pop
sbb
dec
mov
mov
int3
cld
mov
mov
add
iret
mov
std
add
fimuls
adc
xor
sub
inc
adc
dec
adc
outsb
add
xchg
arpl
push
inc
pop
sbb
xor
sbb
lcall
sub
sub
xchg
in
cmp
out
js
aaa
in
xchg
imul
or
push
aad
or
aad
inc
call
call
dec
mov
imul
daa
lret
ljmp
add
pop
arpl
out
testb
push
add
push
push
push
xchg
xor
jbe
dec
lahf
rorb
adc
push
inc
and
jae
adc
and
add
xchg
out
ret
fdivr
jno
in
lahf
cmp
jmp
pop
rorl
jb
xor
or
push
stos
cmp
test
fisttps
jnp
mov
dec
add
adc
cwtl
int
add
push
add
adc
test
rolb
add
ljmp
push
jmp
jns
add
adc
es
push
test
sbb
mov
mov
popa
sub
cmp
aaa
je
xchg
rolb
ret
repz
sbb
jg
inc
je
call
push
mov
xchg
jnp
sub
adc
push
sbb
sar
fwait
mov
sbb
je
cmc
cmpl
pop
es
std
push
add
jle
sub
clc
lret
sti
jmp
add
jmp
cli
je
aam
and
xchg
subb
idiv
mov
mov
decl
jnp
or
into
push
out
sub
aaa
mov
das
lea
ja
je
adcl
scas
add
shll
sbb
cmp
add
push
stos
incl
jnp
add
mov
cmp
insl
scas
inc
or
jl
gs
out
adc
roll
add
imull
or
loop
sbb
cmpl
out
mov
stos
push
cmpsb
mov
xchg
sub
inc
add
dec
add
xchg
adc
jl
sbb
adc
lods
leave
mov
cmpsb
sti
push
pusha
outsb
pop
mov
lahf
scas
pop
inc
test
scas
das
cld
cmpsb
sub
or
pop
mov
fdivr
xor
xchg
inc
pop
into
lret
sbb
and
lret
push
insb
lcall
pop
aam
in
mov
cli
xor
inc
adc
bound
pcmpeqw
bnd
push
test
outsl
inc
test
push
mov
pusha
dec
add
inc
dec
inc
loope
bound
push
andb
shll
push
sub
imul
adc
xchg
jmp
jnp
psubq
mov
mov
in
cld
flds
or
icebp
push
xchg
aam
call
add
js
js
testb
xor
test
ret
push
cmp
je
es
add
clc
outsb
sub
push
sub
lea
fsqrt
push
sub
or
pop
mov
mov
xor
or
xor
dec
pop
mov
iret
mov
inc
add
cmp
loopne
add
loopne
sbb
and
and
ja
call
push
clc
xchg
clc
out
push
and
cmpsl
jne
push
lods
jge
or
scas
add
scas
xchg
or
out
and
sti
popl
xlat
sub
bnd
inc
jle
testl
jg
add
mov
and
dec
ret
leave
decb
ret
or
and
jle,pt
js
and
sub
fcoml
jns
xchg
push
adc
imul
jno
inc
xchg
push
pop
inc
jns
data16
cmp
adc
sub
imul
icebp
insl
mov
lea
inc
stos
repz
js
gs
addb
sbb
scas
push
int3
xchg
add
xchg
int
sbbb
imul
jg
mov
pop
ljmp
add
jmp
xchg
jmp
pop
adc
mov
jno
push
pop
sbb
jle
or
pop
or
sbb
adc
pop
adc
sbb
adcl
repz
iret
out
add
sti
bound
xchg
stc
mov
or
push
out
stos
or
jb
imul
pop
push
add
cld
test
popf
out
xchg
dec
loope
adc
add
cld
or
stos
push
adc
stos
push
adc
dec
push
mov
adc
push
xchg
aam
push
cli
mov
nop
add
cmovnp
rolb
inc
fwait
mov
push
xor
in
movsb
test
fwait
mov
mov
cwtl
inc
or
sub
jne
mov
ljmp
std
jmp
adc
add
incb
jns
pop
sti
pop
sub
rolb
add
add
sbb
adc
addb
add
out
mov
or
push
in
add
add
aas
je
jb
xchg
inc
push
dec
aaa
ds
pop
mov
cwtl
mov
cmp
push
sti
push
lret
pusha
adc
sti
xor
call
rcrb
lods
sub
add
xchg
mov
ds
out
and
outsb
sbb
add
iret
fiaddl
xchg
loopne
test
adc
mov
and
popa
ss
pop
data16
cmpb
cmpsl
add
and
dec
loope
nop
xor
add
push
in
push
add
gs
jo
outsb
adc
add
and
sub
xchg
arpl
mov
mov
and
fcom
ret
mov
adc
mul
out
mov
jle
or
xchg
test
jge
jp
or
insb
and
or
adc
pop
pop
scas
jb
sti
cld
and
jmp
cmp
bound
add
or
in
es
adc
push
mov
nop
dec
and
mov
cs
es
call
pop
addr16
ds
push
sub
imul
int
xchg
shlb
jb
testl
push
pushl
mov
jle
movsb
loopne
mov
push
jmp
cmc
je
and
adc
mov
jne
mov
push
call
add
jne
jbe
mov
cli
push
add
lock
orl
pop
mov
das
add
idiv
mov
and
pop
sub
cltd
lods
and
add
and
fildl
leave
imul
sub
lcall
xor
fdiv
sbb
jnp
fdiv
jae
aad
call
xchg
dec
pop
push
mov
mov
lret
mov
sbb
lods
pushf
sub
mov
add
clc
lock
inc
adc
push
insb
rcrl
aas
add
mov
fsubl
aas
or
fnstcw
bound
mov
xchg
sbbb
add
ret
mov
adc
mov
sbb
leave
jmp
add
into
stc
lods
icebp
out
add
arpl
ret
push
xor
sub
jmp
mov
xchg
stos
pop
pop
pop
lahf
xchg
jmp
push
pop
add
add
dec
add
adc
inc
push
xchg
arpl
push
mov
cltd
js
cwtl
sub
adc
sbb
in
xchg
call
outsl
jg
jmp
je
add
pop
aam
insb
adc
cli
push
cli
adc
xchg
aas
add
jg
out
sbb
hlt
out
inc
jmp
cwtl
cli
inc
lds
adc
cmp
bound
sti
dec
adc
in
inc
incl
and
adc
hlt
add
xchg
pusha
ret
repnz
pop
sti
cld
repz
pop
add
sbb
ljmp
mov
repz
divl
sub
add
and
lea
jae
incl
pop
add
pop
leave
jae
daa
add
mov
push
mov
jmp
adc
push
sbb
mov
xor
mov
call
dec
cmp
fs
int3
cmpsb
push
std
mov
out
cmc
adc
es
jbe
pusha
int3
inc
lods
add
fistpl
out
jg
fists
mov
shll
test
adc
mov
pusha
inc
ss
mov
les
push
sti
add
fisubrs
aas
add
pop
jp
adc
shrl
xor
xchg
repz
fildl
mov
xlat
push
adc
sti
sti
outsb
mov
add
mov
push
adc
addb
imul
dec
mov
dec
inc
sbb
xchg
sub
sbbb
add
arpl
mov
and
sbb
cld
mov
ret
fwait
xchg
mov
add
mov
or
xchg
xor
mov
jbe
shll
cld
sbb
dec
arpl
add
std
test
push
add
jmp
add
adc
add
pushl
mov
push
addr16
imul
nop
mov
loop
jge
cli
insl
dec
andb
testl
add
xchg
setne
jmp
les
jae
das
cs
or
mull
xor
or
stc
pop
cmp
push
out
jne
lea
fs
loop
sbbb
mov
jne
and
mov
xchg
pusha
add
rcrb
notl
outsb
shl
jmp
je
pop
jp
stc
or
call
mov
mov
cs
iret
sti
sbb
ljmp
jne
mov
mov
rcrb
push
jecxz
xor
fcos
cmp
jecxz
add
push
idiv
mov
inc
sub
push
lea
add
add
les
xchg
clc
jg
adc
lock
and
add
xchg
lret
aas
cmp
ret
int
add
fisubl
test
lret
jmp
mov
pop
and
ret
add
xor
add
xor
icebp
lret
cmc
stos
incb
or
je
test
gs
jne
pop
inc
inc
xchg
test
cli
std
dec
jmp
push
fistl
add
xchg
das
fs
push
jmp
xchg
loop
jp
cmc
clc
cmp
jle
ret
ret
jmp
arpl
loope
push
mov
aam
sbb
les
add
stos
cmpb
shll
insl
adc
lea
sub
pop
outsb
daa
test
pop
jnp
xchg
scas
jmp
out
add
roll
stc
rcll
push
mov
popl
inc
add
pop
sub
aas
orl
jo
cltd
popa
test
cmp
cli
cld
mov
arpl
aam
xchg
and
mov
or
push
mov
outsl
push
jo
nop
out
sub
cli
je
xchg
dec
xchg
insl
adc
add
aaa
add
testl
pop
push
xchg
dec
xchg
movsl
das
js
das
out
notl
mov
gs
out
cmpsl
adc
or
jae
popf
adc
add
xchg
dec
push
add
jecxz
bound
and
sub
or
mov
cmp
and
push
sbb
adc
cmp
adc
sahf
add
lods
adc
push
and
adc
push
xor
lods
mov
cmp
test
add
push
fmulp
adc
mov
add
mov
add
mov
adc
sarl
loopne
mov
cwtl
repz
aam
adc
repz
add
dec
je
cmp
in
mov
adc
adc
sbb
in
adc
out
jmp
adc
adc
aas
add
xchg
sbb
addr16
add
jns
aam
jns
adc
inc
call
add
or
pop
stos
fimull
pop
in
loopne
push
add
test
xor
cli
jnp
xchg
pop
add
adc
mov
jmp
or
cmc
mov
push
xor
mov
adc
adc
arpl
adcb
adc
in
lcall
adc
add
adc
add
add
mov
fsubrl
add
adc
mov
movsl
mov
in
movsl
adc
dec
insl
mov
xor
cld
jmp
sbb
xchg
adc
imul
cmp
idivb
adc
pop
adc
and
or
cmc
push
loopne
inc
hlt
test
outsb
stc
adc
xor
jo
pop
add
add
cmp
add
pop
sti
fsubrl
add
jmp
pop
adc
cmpsb
mov
push
cmp
jmp
fdivs
add
dec
add
pop
sub
mov
inc
xor
inc
push
cs
adc
push
dec
leave
sub
adc
fwait
iret
verw
jo
sbb
lcall
faddl
mov
jmp
inc
add
mov
xlat
mov
incb
or
xlat
cli
mov
jmp
shl
push
call
adc
add
cli
mov
cltd
mov
xlat
insl
mov
ja
arpl
mov
mov
adc
rclb
pop
push
addl
push
je
add
bswap
add
mov
add
add
sbb
out
aas
add
mov
std
incb
mov
addb
sbb
sbb
in
aas
add
add
add
xchg
or
popf
out
or
add
sbb
inc
sti
add
cld
fcoml
sar
fisubrl
cmp
sti
incb
jg
pop
or
push
cli
jb
push
inc
aaa
or
sbb
mov
cld
std
sub
dec
int
divb
lds
adc
jne
adc
add
pop
insl
je
adc
add
pop
push
inc
arpl
pop
inc
mov
sbb
xchg
push
popa
add
jmp
bound
jmp
sbb
sahf
cmpsb
jnp
add
xchg
adc
incl
adc
pop
xor
dec
add
and
aad
inc
cwtl
xchg
add
adc
call
filds
test
iret
pop
test
aas
sbb
in
pop
inc
xchg
or
call
addr16
inc
jmp
dec
xor
fs
inc
xor
sbb
mov
sbb
push
inc
push
inc
sti
cld
daa
add
jmp
test
in
push
inc
vmaxsd
scas
and
cmpl
sbb
mov
ljmp
lea
pop
adc
xchg
and
test
mov
andl
jecxz
xchg
add
push
std
pushl
and
add
insb
inc
and
pop
cli
mov
or
and
imul
sbb
and
imul
xchg
push
add
cmpsb
sub
pop
outsb
dec
lods
pop
call
push
and
outsl
dec
in
or
inc
call
bound
push
add
repz
add
cli
sbb
repz
add
aas
je
push
lea
lods
lods
push
in
jg
or
scas
mov
jne
lds
jnp
add
add
ja
add
pushl
or
pop
pop
bnd
dec
jg
je
fimuls
ret
sbb
jge
add
cmpsb
mov
loopne
jns
adc
loopne
or
loopne
push
xchg
in
cli
xchg
inc
or
or
xchg
sub
mov
xchg
pusha
or
xchg
aad
add
fiaddl
xor
cmp
xchg
call
sti
sahf
pop
dec
lock
outsb
or
in
loope
loope
jmp
out
outsb
inc
cli
lock
push
test
shlb
mov
addb
rolb
repz
sub
aam
hlt
aad
sbb
cltd
sbb
add
jge
sub
fs
adc
add
adc
jbe
adc
jmp
iret
jmp
add
insb
testl
adc
lcall
add
xor
loopne
xor
jae
add
mov
jmp
add
sbb
not
call
or
lret
jmp
aaa
pusha
inc
sbb
adc
adc
add
xchg
icebp
out
mov
inc
dec
add
sbb
and
mov
pop
bound
sub
es
lret
push
push
xchg
sbb
sub
xlat
cli
ljmp
or
popf
fwait
xor
sub
sbb
js
xlat
cli
addb
pop
mov
mov
add
mov
cmc
adc
inc
rolb
adc
shrl
jne
xchg
stos
push
sub
push
add
mov
and
fs
adc
pop
cmpsb
fstpt
or
pop
je
inc
std
pop
adc
add
std
pop
adc
inc
adc
aas
jbe
pop
in
push
jg
test
call
mov
push
lock
ljmp
add
mov
dec
adc
pop
sub
add
mov
ja
nop
rcll
dec
and
rclb
cld
adc
hlt
push
pusha
in
push
jns
xchg
icebp
lahf
add
add
mov
vmwrite
push
cld
inc
push
into
jmp
push
inc
inc
in
add
adc
popf
push
jmp
notl
xor
test
pusha
icebp
lret
in
jae
flds
icebp
add
imul
jnp
arpl
clc
push
sar
fsts
add
repz
push
jmp
fadds
mov
mov
jmp
or
jmp
in
subl
jmp
sti
cld
xlat
xchg
dec
aad
pop
or
out
pop
push
add
fsubrl
in
je
add
cmp
call
add
ljmp
jae
and
adc
stc
push
jmp
jae
add
mov
fwait
call
adc
add
push
inc
lock
add
out
or
add
or
cwtl
add
cmp
inc
sbb
adc
mov
aad
add
insl
jne
jmp
push
testl
xchg
or
fsub
orl
xor
adc
pop
div
jne
mov
adc
pop
rclb
mov
add
inc
pop
out
mov
loop
and
shlb
xor
add
add
jb
pop
sub
cld
out
test
add
mov
adc
add
cli
adc
mov
xchg
pop
cli
out
fnstsw
add
add
jb
sbb
and
enter
je
inc
add
out
cli
sbb
ja
cld
sbb
add
mov
lock
stc
adc
jne
cmpsl
add
push
mov
imul
adc
cld
movsb
pop
inc
enter
call
loopne
add
xor
sbb
les
das
sub
mov
push
jmp
adc
sbbl
jns
xchg
psubb
xchg
out
add
adc
out
pop
fstps
pop
icebp
add
push
faddl
inc
or
sti
adc
mov
cltd
rorl
xor
push
xchg
cmpsl
out
mov
sarl
fstps
stc
add
add
adc
fwait
or
add
fadds
fcos
stc
js
cmp
sti
aam
aas
jmp
stc
pop
aas
xchg
sub
adc
xchg
pusha
adc
add
or
fmull
add
sbb
lea
pop
or
xchg
cli
jle
adc
je
sub
pop
or
inc
adc
pop
dec
pop
sub
adc
jb
loop
cmp
lea
xor
jmp
ljmp
shrb
movsb
pop
pop
adc
or
test
divl
clc
xor
pop
adc
adc
pop
sbb
rorb
dec
call
add
jne
adc
pop
clc
int
add
or
jne
gs
inc
in
fdivs
add
adc
mov
ret
sbb
sbb
or
add
add
adc
push
enter
pop
add
jo
out
dec
xor
add
jno
xorl
es
imul
sub
jae
inc
add
dec
add
dec
js
jae
inc
sub
mov
fcoml
pop
repz
sub
xchg
xor
dec
das
in
pop
sti
stc
dec
sbb
adc
mov
call
out
out
clc
add
add
filds
je
test
imul
inc
add
sti
mov
cmpb
push
dec
hlt
xchg
sub
fcom
adc
add
loop
dec
sbb
cmp
mov
outsl
and
add
add
jbe
push
xchg
pop
sub
mov
mov
or
loopne
decl
cwtl
test
sbb
push
mov
push
fsubr
xchg
out
mov
fcoml
adc
clc
aaa
faddl
inc
mov
mov
pop
pop
std
ljmp
ja
jmp
loop
loope
insb
shlb
jp
and
and
enter
add
mov
and
mov
push
add
pop
fdivs
dec
rorb
inc
sti
cld
mov
inc
jmp
pop
inc
xchg
mov
mov
in
into
arpl
fldl
cmp
mov
mov
jle
adc
lret
in
mov
jb
or
cs
in
lcall
pop
pushl
incl
sub
xchg
iret
mov
in
xchg
sbb
scas
loope
insb
pop
push
add
popa
push
lea
lock
ljmp
lds
xchg
aaa
jb
sub
out
in
jmp
leave
add
andb
add
and
fs
cs
mov
ss
push
test
add
sub
mov
cmp
addr16
jne
jb
out
in
lcall
jb
out
hlt
fildl
add
cmp
mov
test
sbbb
push
test
das
shrb
dec
call
stos
arpl
leave
stos
push
add
aad
jmp
stc
pushl
dec
sub
ret
cli
jmp
push
lea
sub
ror
jae
xor
into
call
shlb
add
dec
mov
or
or
mov
cmp
lea
sbb
int
out
adc
add
cld
pop
mov
mov
add
add
add
xor
mov
dec
aad
dec
mov
ficomps
loopne
inc
xchg
push
push
add
sbb
arpl
int
faddl
cli
out
mov
icebp
jecxz
adc
out
shll
test
sbb
jae
pop
movsb
shlb
insl
enter
add
jb
or
or
xchg
iret
addr16
es
aaa
adc
int3
aaa
adc
std
cmpsl
cli
push
imul
jae
divl
orl
inc
lds
inc
xchg
pop
shlb
pop
cld
xchg
jnp
movhps
mov
sahf
lcall
and
sti
add
loopne
fistpl
fcompp
jle
and
sti
add
jmp
lods
or
lods
inc
notl
add
adc
ljmp
and
call
call
adc
push
adc
pop
mov
add
add
pop
adc
clc
cmp
cmc
test
or
xor
inc
sub
push
and
push
mov
pop
test
add
lea
pop
call
add
andb
out
pushl
add
mov
cli
mov
push
lea
in
dec
push
lods
pop
out
fwait
jo
jae
cmp
push
dec
sti
adc
rorb
jno
nop
add
decb
enter
jns
sbb
push
lea
in
dec
mov
add
cli
add
fs
add
push
and
add
js
int
andl
adc
adc
rcr
pop
lds
iret
shrl
push
inc
add
sbb
inc
add
fcompl
unpckhps
pop
lahf
lahf
add
xchg
xchg
adc
scas
daa
fsubr
add
movsb
pop
adc
adc
clc
and
add
sbb
or
aas
call
adc
aas
call
adc
sbb
mov
jg
adc
cld
jnp
add
xchg
add
insl
adc
call
mov
xchg
jae
pop
in
jmp
aad
add
dec
push
fdivrp
mov
add
inc
xchg
add
aam
jmp
pop
and
call
aad
out
data16
jb
or
mov
fdivr
fnsave
xchg
add
pusha
call
add
repnz
fdivrs
mov
sysret
test
sldt
add
loope
int3
fstpl
add
add
in
or
lods
sbb
add
adc
push
xor
dec
call
lea
int
incl
sahf
adc
loop
test
fdiv
ljmp
int3
cmc
call
in
testb
jae
cmpsb
arpl
and
adc
shlb
push
push
push
jmp
adc
mov
aad
pushf
repz
mov
add
movsl
repnz
imul
and
or
adc
add
cmp
push
cli
ret
out
jl
cli
fbld
add
add
jae
in
fsubrl
add
stc
mov
sbb
call
mov
jae
or
lock
xchg
js
out
jge
cli
add
push
out
adc
les
sahf
sub
lret
dec
push
or
mov
xorl
sub
imul
xlat
lret
push
jmp
inc
add
js
mov
rorb
cli
mov
adc
add
jmp
cmp
outsb
fs
add
or
sbb
pop
pusha
add
hlt
lret
pop
add
seto
popa
mov
fsqrt
imul
xchg
jne
pop
fstps
jge
out
loop
cli
mov
inc
call
cmp
cwtl
in
lahf
xlat
mov
xor
and
add
pop
jmp
movsb
popa
dec
pop
dec
outsb
push
je
sbb
lahf
cli
push
adc
push
fdivr
ds
adc
lret
ret
pop
xchg
xlat
xchg
xchg
out
fcmovu
cli
fs
sti
push
push
in
mov
add
push
push
test
hlt
mov
mov
mov
loop
repz
add
cmp
jae
js
int3
pushl
fmull
cld
or
mov
lea
punpcklbw
mov
sub
dec
add
shlb
inc
or
roll
add
cld
lahf
adc
adc
jne
loope
or
cld
adc
lods
adc
push
adc
add
jae
nop
inc
data16
cmp
add
cli
sbb
out
and
dec
xchg
inc
push
inc
add
adc
ret
lea
dec
sti
xlat
inc
push
data16
jg
jmp
push
sti
mov
inc
or
and
lea
push
je
cmp
sbb
punpckldq
adc
inc
add
insl
cmp
lock
push
call
arpl
sti
arpl
das
icebp
dec
push
sub
scas
outsb
and
pop
adc
jl
xchg
add
mov
test
jg
lods
hlt
sti
das
nop
mov
pop
inc
loopne
fs
js
sub
outsb
adc
mov
mov
sub
sar
xchg
hlt
push
jmp
lock
flds
lods
cli
out
add
and
adc
adc
clc
mov
outsl
inc
call
and
add
testl
fs
mull
ret
pop
fs
jb
negl
push
push
jg
jmp
add
test
lock
leave
lcall
add
test
imul
out
test
imul
repz
imul
jnp
mov
adc
add
xchg
or
fucomip
das
adc
call
rorb
mov
clc
pop
call
ret
mov
xchg
push
and
in
jne
and
mov
dec
call
cmpsb
pop
and
adc
xchg
ds
gs
test
xorl
ret
fsincos
pop
push
lds
roll
mov
cld
pop
test
xchg
pop
and
adc
push
pusha
pop
and
pop
sbb
pop
lret
push
flds
push
xchg
ds
push
lcall
xchg
mov
and
mov
pop
jns
ljmp
lods
add
add
addr16
call
mov
adc
int3
ds
mov
xorb
leave
in
cli
cwtl
or
ja
in
cli
xlat
jp
pop
scas
xor
push
dec
sub
jmp
add
or
hlt
out
cmpsb
in
cli
xchg
in
call
mov
int3
mov
adc
pop
adc
xor
push
push
inc
adc
push
jp
mov
mov
jns
imul
add
adc
ja
xchg
mov
push
cwtl
adc
mov
sub
xor
cmp
sti
in
adc
adc
pop
xlat
jbe
outsb
inc
or
push
inc
clc
inc
sbb
inc
and
cmp
cmp
mov
cmp
dec
adcl
inc
unpcklps
mov
into
arpl
aaa
and
bound
cs
add
mov
loopne
leave
xchg
and
inc
pusha
cwtl
pop
out
dec
inc
sti
ss
call
fstpt
arpl
pop
leave
push
bound
xchg
icebp
fiadds
xchg
adc
inc
jl
aam
cs
xchg
das
pop
sti
xchg
push
call
add
adc
mov
std
sbb
push
in
mov
inc
adc
add
mov
test
adc
xorl
sub
cmp
addb
mov
gs
pusha
xorl
push
call
adc
inc
lret
sbb
outsb
pusha
add
pop
mov
push
jecxz
inc
dec
int
cs
lds
adcl
loop
push
ret
outsb
nop
or
adc
arpl
outsb
dec
push
fdivrs
clc
inc
add
add
in
push
dec
xor
pushl
test
data16
test
and
or
inc
xchg
cmp
das
sbb
add
lods
mov
in
add
pusha
mov
lods
shrl
shl
popa
lea
sarl
lret
add
dec
cli
cmp
out
sub
mov
pop
les
adc
ja
adc
leave
addl
loope
inc
add
cmp
enter
ds
xor
cltd
jo
xchg
xchg
outsl
sbb
loope
or
sbb
jne
popf
and
jl
popa
inc
or
in
sub
inc
ss
jne
movb
inc
hlt
jl
mov
pop
aaa
push
or
and
unpcklps
inc
add
stos
clc
into
imul
cmp
xchg
daa
mov
ret
sbb
leave
mov
les
sbb
sub
mov
leave
pushl
push
or
jb
xor
in
or
sbb
inc
adc
aas
mov
ljmp
pusha
inc
adc
jo
sbb
sahf
fsubs
push
or
or
cli
pop
add
stc
or
lock
lock
sub
loope
sti
popf
sbb
cmp
cltd
inc
mov
stos
and
or
pop
negb
and
das
int3
insl
cmpsl
jle
and
fdivp
outsb
add
in
mov
mov
in
sbb
mov
adc
outsb
pop
mov
and
pop
shll
sbb
leave
adc
sbb
je
and
js
push
inc
pop
xchg
mov
ret
out
and
jnp
lret
dec
clc
mov
popa
shlb
outsb
add
sar
push
shlb
roll
lahf
int
dec
and
movsl
add
add
test
repnz
xchg
push
sti
clc
sub
iret
ljmp
jle
pop
add
cld
sti
outsb
adc
jnp
push
push
push
mov
xor
add
lock
std
clc
mov
leave
loop
stc
out
cmp
add
mov
aaa
xor
mov
ss
add
aam
imul
xor
sbb
mov
xor
testb
cs
sti
adc
mov
jbe
cmc
sahf
icebp
lods
rcrl
in
pop
jp
clc
push
pop
leave
ret
mov
pop
fistpl
lods
pop
cmp
fcmovbe
jmp
add
jle
jnp
and
inc
sbb
xor
es
stos
testl
insl
sub
dec
pop
pop
cmp
push
jle
xor
pop
mov
jns
sub
arpl
push
lcall
adc
xchg
out
insl
push
mov
inc
pop
aaa
mov
sub
jae
dec
push
adc
add
lods
add
pushf
adc
inc
call
sbb
aas
adc
and
test
inc
sub
jmp
pop
cld
push
clc
ljmp
leave
fsubrp
cmp
inc
push
sbb
pushf
int3
mov
push
mov
clc
idivb
mov
fwait
push
add
dec
jl
inc
push
adc
stos
dec
add
sbb
je
fmull
in
cwtl
push
clc
push
add
add
in
mov
out
or
cltd
dec
jmp
repnz
popf
movsb
dec
jmp
loopne
lods
adc
mov
pop
cmpl
jnp
notb
mov
xor
imul
sbb
sbbl
or
nop
sbb
cmp
es
and
popa
lock
xchg
into
jl
inc
popa
lock
call
aaa
add
out
mov
fs
mov
pop
hlt
inc
and
pusha
sahf
mov
push
call
mov
inc
mov
mov
aaa
clc
jg
out
mov
lods
fadds
pop
aam
push
aad
mov
push
xchg
mov
or
add
sbb
push
cmp
add
or
add
cmc
add
lcall
mov
ret
mov
sbb
mov
in
mov
ret
fmulp
loop
jo
pop
adc
xor
jl
mov
pusha
in
les
push
outsb
aaa
movsb
and
add
sbb
mov
in
stc
mov
fsubl
ret
fdiv
subb
clc
or
or
cmp
out
jmp
fs
hlt
call
push
or
movsb
jecxz
lods
dec
lcall
mov
int
mov
add
sub
or
cli
bound
xchg
mov
pop
pop
and
shl
mov
lcall
add
mov
cltd
dec
fisttpll
rol
test
sar
ret
outsl
ret
aam
mov
aad
add
mov
push
in
int3
jmp
push
adc
mov
shlb
xchg
xchg
sub
xchg
pop
shr
push
popl
xchg
push
mov
sbb
inc
hlt
dec
int3
cmp
sbbl
adc
or
loopne
hlt
xchg
pop
lock
ret
hlt
push
arpl
call
sbb
lea
lea
push
mov
mov
lea
rol
add
add
jmp
add
test
xor
push
add
add
xchg
je
ret
pop
loopne
jl
stos
push
add
out
mov
repnz
jecxz
jecxz
inc
sbb
lods
ljmp
int3
icebp
out
jno
aam
inc
dec
in
out
jecxz
or
dec
sti
mov
repz
inc
dec
adc
jle
fstpt
xor
xchg
adc
push
or
mov
push
bound
inc
add
push
and
add
xchg
bound
add
imul
sub
mov
sbb
mov
invd
mov
mov
push
stos
inc
out
adc
mov
inc
ficoms
add
pop
push
mov
add
mov
popf
xor
dec
cltd
in
pop
rclb
adc
adcb
xor
mov
mov
je
je
jge
mov
aam
mov
pop
cli
push
test
cli
jge,pt
or
pusha
dec
lock
cli
ljmp
inc
std
test
rcr
in
pop
shr
inc
cli
mul
cmp
xchg
inc
roll
mov
into
mov
pop
leave
stos
xlat
mov
in
std
hlt
popa
push
fidivl
cli
es
mov
faddl
adc
call
mov
adc
add
dec
or
int
dec
adc
add
xchg
adc
mov
adc
mov
cmp
cmp
add
add
lea
loop
in
in
adc
mov
and
orl
dec
clc
dec
fmuls
jmp
pop
cld
mov
dec
adc
or
sbb
incb
loop
adc
pushf
inc
aaa
xchg
rolb
or
push
hlt
stc
test
pop
in
add
push
aaa
loope
pop
inc
push
add
dec
add
mov
js
inc
incl
pop
call
shll
sub
lds
push
sbb
xor
fbld
sub
or
mov
or
mov
pop
in
xor
fildll
in
pop
clc
decl
adc
dec
add
insl
cmp
lcall
add
jp
pusha
xchg
repz
repz
stc
push
outsb
dec
push
mov
adc
out
sarb
mov
add
pop
ret
and
je
das
or
push
cmp
movsb
adc
adc
jmp
fisttps
lea
mov
add
mov
clc
mov
in
notb
add
mov
inc
addl
mov
lea
cmp
dec
mov
mov
xor
mov
in
ret
mov
lret
mov
dec
push
or
mov
loopne
dec
adc
cmp
add
cld
xchg
dec
mov
dec
xor
add
pop
push
xor
add
mov
dec
icebp
js
sbb
adc
inc
adc
mov
push
add
pop
out
call
fdivr
mov
lahf
xchg
mov
mov
add
add
enter
jmp
xchg
pop
rorb
lock
ljmp
mov
add
stc
lret
push
std
mov
lea
ss
add
xor
jo
mov
xchg
adc
push
lock
push
loop
clc
decl
loop
in
cmc
xchg
cmp
jg
or
loopne
jge
movsb
stos
jge
pushf
stos
jge
mov
icebp
mov
mov
call
mov
mov
repnz
jg
pop
stos
dec
add
mov
add
sub
cli
leave
out
xchg
test
inc
push
fisubs
fidivs
or
jg
mov
mov
add
inc
les
movsl
ljmp
sub
sbb
dec
add
jp
loopne
jb
add
leave
push
ja
lds
xor
sbb
and
push
imul
jno
popa
aas
adc
inc
pop
adc
inc
xchg
sub
test
repnz
mov
add
imul
xor
mov
pop
sbbl
fistpl
dec
fisttpll
cmp
loopne
in
push
mov
stos
add
scas
pop
jno
or
cmpsl
sbb
jle
push
scas
pop
cmc
mov
inc
mov
inc
in
in
mov
fcomps
inc
shl
lods
mov
mov
xchg
or
clc
notb
mov
add
jl
or
mov
xchg
ds
mov
mov
mov
pop
inc
call
ljmp
addl
sbb
lret
ljmp
inc
leave
xchg
imul
sbb
mov
fists
es
leave
pop
ret
push
scas
jns
leave
add
scas
test
jmp
and
mov
loopne
push
icebp
mov
in
in
cmp
les
add
dec
or
mov
in
cmp
jbe
mov
rcr
add
pop
aaa
mov
lods
decl
mov
incl
aam
inc
mov
stos
xchg
or
psubb
xchg
ja
lret
repz
xor
fnstsw
out
or
push
rorb
lcall
stc
or
rolb
jmp
stos
push
or
fmul
jnp
imul
decl
test
push
adc
nop
jp
xor
inc
adc
stos
iret
ljmp
jle
ror
clc
mov
mov
mov
pop
cld
add
lods
mov
jl
lods
push
inc
stos
aas
out
dec
push
outsb
cmp
add
cmp
rolb
adcb
add
popf
xor
jmp
out
mov
jnp
std
outsb
inc
pop
mov
sbb
mov
push
mov
in
test
adc
xor
stos
stc
and
inc
mov
pop
cmp
xchg
add
clc
jo
enter
xrelease
lcall
push
dec
call
lods
rorl
and
scas
jae
adc
bound
or
sub
mov
jo
mov
jnp
jmp
stos
add
popa
aam
xchg
scas
inc
dec
add
pop
adc
add
sti
pop
cltd
clc
push
or
add
push
dec
loopne
and
and
push
adc
addl
mov
xchg
in
leave
das
sar
lods
iret
repz
push
sarl
or
out
sbb
das
dec
lock
scas
outsb
stc
stc
mov
push
mov
dec
pop
call
out
push
add
movsl
sub
adcl
inc
rolb
in
in
decl
jne
cmp
xchg
adc
mov
jg
ss
xchg
mov
jl
int3
mov
clc
jmp
or
iret
cli
mov
je
ss
or
dec
clc
add
mov
lods
incl
and
incl
lock
mov
dec
mov
add
ret
testb
fidivrl
mov
push
and
out
mov
dec
and
roll
pop
fisubl
scas
cmp
pop
adc
pop
adc
push
mov
pop
stos
dec
mov
outsb
dec
loopne
sub
xor
pushf
xor
enter
and
stos
add
pop
fimuls
daa
rolb
push
popf
mov
aaa
push
adc
inc
mov
les
popa
scas
andb
adc
add
mov
adc
imul
push
mov
out
mov
mov
in
push
popa
mov
jno
pushf
or
outsb
aam
add
xchg
inc
iret
add
mov
aam
icebp
aas
push
sbb
aas
pop
sbb
leave
pop
sti
call
mov
stos
pushl
stos
je
or
sbb
dec
stos
je
icebp
out
jne
iret
arpl
stc
out
add
xlat
jae
ljmp
jmp
add
jne
sub
mov
pop
stos
addb
inc
push
xchg
jmp
mov
mov
lock
stc
rorb
jp
out
ret
fldenv
imul
sbb
stos
cs
dec
fistpll
aad
addl
sbb
mov
push
push
mov
leave
ret
push
xor
add
inc
adc
xor
das
push
movsl
repnz
fsubrs
bnd
xor
or
std
fnsave
in
lret
or
cmp
mov
int3
call
iret
outsl
repnz
in
inc
sbb
jl
inc
clc
mov
enter
pop
out
push
sbb
jl
inc
inc
pushl
repnz
adc
mov
out
std
xor
aas
inc
mov
mov
or
xchg
push
add
sub
inc
and
enter
or
stc
cli
test
pop
lret
ds
scas
movsb
movhps
add
cwtl
dec
jg
pop
loop
mov
data16
inc
mov
int3
add
xor
add
mov
push
add
ficoml
fs
pop
fmull
push
adc
sbb
mov
inc
movsl
jl
sar
pop
in
mov
iret
jb
fsubl
stos
jle
mov
xor
xor
jns
push
mov
aaa
mov
out
insb
mov
xor
mov
or
iret
add
nop
jae
pop
adc
jbe
mov
or
fwait
inc
adc
popa
inc
ljmp
xchg
or
xor
gs
jp
popf
push
pushf
inc
frstor
jecxz
movsl
lods
sub
add
push
hlt
add
pop
pop
mov
ret
add
mov
lods
lods
jne
jge
push
adc
mov
mov
pop
sti
inc
in
pop
clc
xor
scas
jecxz
dec
or
push
add
xchg
lods
jle
sbb
pop
cmp
pop
aaa
mov
lcall
push
jecxz
add
adc
mov
xor
cs
enter
jl
add
sbbl
sbb
or
adc
test
mov
or
add
jnp
cld
xor
add
ud0
pop
ljmp
cld
jnp
inc
fidivrl
or
or
xchg
test
insl
sbb
push
lret
std
incl
movb
aaa
adc
add
jnp
pop
testl
mov
roll
lds
out
jp
add
aam
movsb
outsl
push
les
loop
aam
testb
mov
popf
dec
push
mov
ljmp
cmc
call
add
jne
add
adc
cli
adcb
adc
jl
shlb
js
call
fdivl
rcr
jg
adc
add
enter
inc
loopne
shlb
inc
sbb
hlt
scas
popa
test
adc
imull
popa
test
adc
xlat
punpckldq
lahf
popa
test
adc
aaa
push
xchg
cmp
dec
in
fcoml
cmc
push
lods
je
add
lods
je
adc
mov
out
pop
cmp
rcll
in
dec
pop
fsubs
mov
inc
cmp
fadds
popa
mov
cli
add
adcl
push
rclb
lret
jo
stos
shl
adc
push
fmuls
aad
inc
sar
clc
out
pop
shl
mov
fildl
orl
push
add
out
mov
incl
dec
or
out
lret
jmp
out
filds
add
pop
fcom
cmc
test
push
add
cmp
shll
pusha
lahf
fs
out
push
ficoml
data16
add
out
add
cli
jmp
les
or
mov
mov
ret
addl
dec
sti
cs
fdivr
test
je
aam
shlb
mov
sub
mov
sub
insb
xchg
xchg
sar
popa
lea
jbe
inc
mov
push
jg
sub
push
push
scas
aam
or
pop
test
mov
ret
adc
lret
add
jns
sti
xor
add
jmp
jmp
cld
gs
mov
inc
dec
cli
add
stos
stc
decb
bnd
sbb
push
inc
movsl
sti
cmpsl
sti
push
jmp
push
sub
out
add
cmp
dec
aad
xchg
dec
icebp
push
lret
mov
jge
sbb
pop
dec
hlt
mov
add
repz
cwtl
and
minps
pop
add
adc
fnstenv
fwait
stos
adc
xor
add
sbb
leave
jg
mov
int
push
jmp
lcall
xchg
sub
pop
lods
or
data16
push
or
adc
mov
adc
scas
dec
lods
fucomip
pop
adc
sub
or
jmp
mov
dec
or
add
test
incl
mov
inc
ret
xlat
xchg
inc
or
pop
sar
inc
xchg
inc
add
inc
addl
mov
inc
add
inc
aad
addl
scas
adc
adc
outsl
daa
aad
aad
inc
lea
inc
or
dec
xor
sbb
outsb
add
inc
popl
sub
outsb
push
push
fimuls
jnp
adc
jge
add
or
inc
xchg
pop
dec
call
fucom
testb
push
divl
aam
fdivrl
or
icebp
sti
pusha
pop
mov
loop
add
mov
ds
orb
sbb
adc
or
sbb
jge
stc
add
sbb
sbb
test
stc
lret
test
sar
mov
ret
push
ss
push
cmp
xor
mov
mov
loope
cli
add
rol
insl
pushf
or
jg
jge
add
decl
movsl
int3
rcrb
cld
mov
mov
xor
mov
sbb
jl
push
xchg
sub
cld
cwtl
cmp
add
dec
cmp
clc
mov
push
sar
sub
or
jmp
loopne
xor
out
add
pop
pop
adc
mov
or
adc
ja
add
rorl
mov
insl
mov
inc
sub
add
subps
inc
xchg
out
xchg
mov
insl
cmpsl
push
adc
sub
cmp
xchg
ror
jge
inc
cmp
or
sub
xchg
int3
out
adc
lods
push
cltd
inc
cmp
sti
je
iret
out
add
fs
mov
movsb
xlat
mov
or
mov
pop
xor
sbb
enter
std
sahf
sti
testb
bound
leave
or
add
and
pop
icebp
cli
je
lods
inc
sbb
in
pusha
add
scas
cli
sbb
inc
xchg
jle
xchg
test
cli
mov
sbb
add
les
and
les
dec
loopne
aam
shl
inc
divl
or
loop
mov
cmc
test
outsl
cmc
mov
push
test
repnz
dec
mov
adc
push
cli
call
push
or
call
and
add
add
or
dec
or
xlat
add
add
or
gs
lea
xor
mov
test
lods
cli
mov
mov
xor
sub
mov
mov
or
inc
mov
call
pusha
sahf
cli
icebp
add
inc
add
je
or
jg
push
lds
bound
in
and
inc
mov
and
movsb
mov
pop
lds
les
lods
mov
call
ret
imul
mov
pop
call
test
shlb
xchg
push
leave
push
mov
push
pop
das
xchg
mov
push
jne
and
add
inc
push
ss
cmpsl
nop
push
sahf
insb
ret
xchg
adc
add
insb
mov
js
and
cld
stos
iret
nop
ficomps
clc
add
pop
push
test
add
jmp
int3
push
ss
mov
popf
leave
cs
stos
inc
lods
adc
sarb
das
mov
cwtl
xchg
lahf
ret
clc
mov
sub
push
pushf
in
test
add
add
jl
or
je
cli
push
lcall
mov
adc
popf
out
cli
testb
std
pop
sub
orl
call
lods
add
xchg
gs
pop
xchg
cli
pop
add
sbb
roll
sti
add
call
andl
add
bnd
push
outsb
inc
sbb
or
aad
lahf
lret
addl
add
test
add
add
lea
pop
popf
inc
clc
dec
push
testl
into
mov
outsl
xor
or
dec
call
add
push
adc
adc
loopne
andl
add
sbb
jae
add
or
in
add
jmp
fmuls
push
fisubrs
stos
sub
jp
addl
or
mov
test
test
or
test
incb
xor
add
add
inc
or
jne
test
das
pop
add
add
call
in
or
insl
das
pop
add
cli
mov
lods
push
lods
js
sahf
xor
add
xor
mov
add
fwait
call
adc
insl
rolb
andb
add
mov
movsl
add
xcrypt-ecb
cmpsl
mov
iret
sub
mov
in
add
push
enter
mov
mov
jmp
sbb
cltd
mov
push
lods
mov
ret
decb
insl
or
mov
cmp
lcall
idivb
xchg
inc
pop
call
data16
push
lock
nop
into
push
xchg
mov
call
sub
adc
lds
cli
pop
add
hlt
adc
mov
adc
inc
js
adc
and
test
in
cltd
adc
and
sbb
call
mov
and
fcmove
loopne
cli
or
add
cs
cld
ljmp
add
jnp
cltd
xchg
mov
dec
lods
mov
cmpb
je
xchg
je
movsl
cmp
add
jnp
cmpsl
xchg
mov
leave
xor
iret
inc
orl
mov
pusha
jp
das
mov
rdpmc
fstpl
enter
inc
orl
shrb
add
in
ja
sbb
or
in
ds
inc
add
push
je
xchg
xchg
add
sub
jns
dec
lods
adc
stc
fwait
cmpsb
imul
or
scas
dec
vpmacssdql
cli
aam
movsl
or
loope
es
rcll
add
or
cmp
mov
or
push
xor
add
mov
jg
mov
inc
push
adc
out
cli
add
int
mov
lods
mov
jecxz
out
lret
adcb
in
sub
or
cld
mov
mov
sbb
jb
add
lock
cmp
rcr
jg
adc
add
aam
or
test
aas
or
enter
add
mov
test
movsl
add
subb
rol
inc
sub
iret
mov
cmpsl
gs
push
and
in
int
fisttpll
xchg
sub
cmp
inc
xor
fnstcw
xor
lahf
cs
lock
adc
enter
push
or
adc
jmp
cli
cmpsl
gs
push
int3
cltd
push
lods
sbb
add
inc
inc
and
jmp
js
lds
lcall
pop
adc
and
sub
data16
push
in
mov
xchg
mov
jmp
insb
push
pop
mov
rolb
cli
jmp
mov
ljmp
loop
mov
in
adc
mov
iret
fldl
pusha
fldl
add
js
int3
adc
shlb
push
push
mov
cmpl
popa
jle
mov
adc
pop
adc
rolb
xor
fisttpll
imul
dec
dec
iret
filds
in
call
mov
push
add
out
iret
loop
push
pop
sbb
add
scas
mov
xor
rclb
or
rolb
mov
lods
inc
hlt
mov
jmp
out
out
cli
add
jns
inc
push
mov
movsl
insl
jns
out
cld
leave
insl
mov
or
inc
shll
leave
vmptrld
aam
stos
add
pop
test
jge
test
mov
cli
fdivrl
add
cld
cli
stc
rolb
add
adc
cmp
cmpl
pop
adc
add
pop
cmc
fwait
cwtl
pop
dec
mov
mul
add
insb
ds
sti
test
sti
adc
fwait
pop
mov
loope
test
jmp
sbb
add
and
inc
pop
jecxz
xchg
loope
push
pop
dec
test
enter
xchg
dec
js
or
addl
lock
xchg
xor
push
pop
sub
pusha
sti
in
and
cli
cmpsl
inc
sbbb
jbe,pn
unpcklps
test
jnp
leave
jmp
dec
pop
rolb
movb
lods
pop
stc
push
sbb
subb
mov
sti
adc
or
cli
das
push
test
pop
jl
and
xchg
mov
repnz
pop
mov
js
out
imul
push
jns
pop
mov
loop
or
into
cmp
mov
push
mov
adc
nop
cwtl
icebp
sbb
inc
add
sub
jmp
lods
cmp
add
xchg
sub
lods
mov
jg
in
adc
sub
sub
xchg
jp
in
inc
jecxz
add
outsb
add
decl
xor
ret
push
lods
or
mov
loope
push
fdivrl
push
es
and
rorb
adc
or
adcl
ds
lods
lods
and
and
push
dec
sub
add
hlt
es
push
adc
jle
std
dec
incb
nop
pusha
xchg
xchg
in
mov
jne
test
mov
xchg
arpl
pop
cmp
fwait
sbb
add
add
push
xchg
mov
scas
add
call
pop
loop
inc
jne
jle
adc
in
mov
mov
push
aaa
or
adc
dec
hlt
dec
int3
lea
adc
daa
push
adc
daa
xor
jne
popf
and
xchg
iret
add
cmp
cmp
shr
cld
mov
out
mov
out
rcrl
out
ret
out
fcomp
cld
subb
jnp
fsubr
add
cwtl
imul
fidivl
sbb
sbb
in
inc
mov
inc
sbb
mov
add
mov
mov
mov
push
jae
or
enter
jns
les
dec
push
or
sbb
sub
sbb
icebp
sub
mov
xchg
inc
fwait
inc
popf
mov
lods
outsl
xchg
xorl
lods
ret
adc
jmp
mov
adc
sub
rcrb
popa
jns
add
test
insb
cmp
dec
stc
adc
jmp
jg
fucomip
pop
adc
add
pop
out
mov
imull
and
mov
pop
pop
mov
adc
mov
add
rorl
sub
add
sbb
or
mov
or
add
mov
nop
inc
mov
pop
test
pop
outsb
or
sbb
jmp
mov
add
adc
por
add
fneni(8087
add
or
push
xor
cmp
cmp
stc
decb
cmp
pop
hlt
add
stos
or
add
dec
sbb
pop
adc
int3
cmpsb
jle
pop
decb
dec
sbb
or
cmc
mov
jnp
jno
ss
adc
mov
jns
sbb
aaa
in
das
mov
inc
adc
mov
incl
inc
in
lea
xor
scas
es
pop
jnp
xchg
mov
in
xchg
cld
adcl
test
and
shl
xchg
in
ret
faddp
push
lret
in
ds
or
jl
pop
callw
loop
add
jmp
add
fnop
xor
sub
rolb
jecxz
jecxz
aas
loopne
sub
jge
push
jge
test
inc
and
out
iret
add
inc
add
scas
jle
add
jl
test
jno
add
xor
add
adc
ljmp
xchg
jl
cmp
pop
pop
lea
adc
push
cmp
sbb
xchg
inc
inc
or
or
adc
push
cld
mov
ljmp
or
out
insb
rorl
imul
loopne
jmp
inc
in
jmp
add
add
je
dec
push
cli
pushf
mov
cmp
pop
jl
movl
cltd
cli
ljmp
jbe
lcall
xorb
push
xchg
jnp
ljmp
pop
test
adc
add
add
loope
ljmp
xchg
jnp
add
cmc
mov
addr16
xor
adc
sbb
mov
xadd
in
les
mov
jmp
pop
inc
in
and
inc
adc
inc
and
add
in
cli
stos
sbb
mov
inc
lock
inc
lock
jge
push
dec
ja
pusha
std
mov
cmp
add
mov
divb
lock
add
jp
add
mov
sub
cmp
inc
cmp
sbb
sub
inc
cmpl
das
scas
fimuls
xchg
inc
movsl
cli
fildl
inc
in
xchg
jbe
mov
out
loopne
mov
push
scas
add
movsl
clc
xchg
fiaddl
in
lahf
adcb
popa
lea
xor
les
insl
cld
push
cld
add
jbe
adc
add
aad
lods
cmp
test
das
pop
xchg
adc
xor
movsl
push
dec
sub
stos
adc
fwait
popf
test
push
mov
test
clc
les
cmp
dec
add
add
add
adc
dec
pop
adc
push
popf
push
fstpl
adc
rclb
pusha
adc
xchg
jl
adc
cld
mov
cwtl
dec
inc
fsts
jg
pop
adc
test
sahf
incl
jmp
pop
adc
fisubrl
stc
fisubs
dec
dec
in
pop
adc
fidivrs
xchg
jmp
add
push
fucomip
push
mov
test
or
inc
push
cwtl
push
popf
adc
or
adc
mov
xor
adc
inc
sbb
enter
mov
and
cmp
mov
sbb
dec
sti
push
push
sub
mov
sub
call
scas
cmpsl
pushl
je
cld
xchg
mov
and
or
cld
incl
adc
bswap
fadds
loope
rorb
rcr
jp
add
adc
push
add
or
add
add
dec
and
jnp
or
add
pop
movsl
add
movsb
orb
pop
adc
mov
add
add
das
hlt
call
add
loopne
data16
pop
sbb
add
aas
hlt
xchg
pop
or
pop
or
lock
add
sub
call
sti
sti
or
or
cmp
sub
push
mov
icebp
jg
mov
push
pmuludq
rolb
add
push
dec
add
push
or
add
push
in
adc
pop
jo
fcoml
mov
out
mov
out
push
or
ret
push
lcall
faddl
add
test
mov
add
push
mov
push
mov
adc
aas
add
and
pusha
inc
cld
out
mov
mov
inc
adc
out
test
call
add
fwait
dec
int
xchg
imul
jge
cmpsl
or
cli
jb
in
and
jge
mov
cmp
jo
push
sti
mulb
cli
jb
cmp
out
int
std
cmpsl
cmpsl
sbb
or
shr
int
pusha
lret
ja
pop
rorl
cmpsl
xchg
fwait
es
push
mov
xchg
mov
fiaddl
fstl
cmc
jo
idiv
dec
push
add
fisttpll
addb
movsb
mov
mov
ja
ljmp
dec
add
pop
sahf
cmc
call
adc
push
aad
push
mov
sbb
dec
sti
sarb
lret
and
or
adc
call
addl
pop
je
mov
jg
decl
dec
decl
jmp
dec
incb
pop
lds
jg
daa
sbb
je
dec
or
jae
push
add
or
add
or
dec
insl
ret
test
mov
ficoml
pop
test
xor
cmpl
pop
mov
sbbb
rcrl
test
jg
test
xchg
outsb
jge
cmp
ret
mov
adc
mov
aaa
sub
adc
adc
mov
or
sahf
jo
adc
clc
jle
or
sub
ficomps
pop
add
mov
add
jae
add
push
or
or
fwait
sbb
mov
mov
jg
dec
sub
test
loop
ljmp
sbb
mov
pop
hlt
pop
or
pushf
fmuls
ror
push
jg
xchg
xor
jmp
clc
rorl
pop
pop
loop
jle
imul
je
jle
roll
call
add
jae
repnz
mov
cmp
push
idiv
cmp
add
je
jl
push
adc
xchg
adc
loope
add
push
jno
mov
jmp
cwtl
jns
fcompp
roll
not
leave
std
cmpsl
cmpsl
push
pop
test
jl
push
or
in
add
sti
incl
fxsave
push
fisttps
ss
add
cmp
inc
adc
xchg
add
or
sbb
adc
orb
lcall
fstl
mov
lods
adc
mov
adc
and
pop
test
cli
ljmp
cmc
adc
popf
xchg
negl
or
fwait
pop
adc
jnp
fadds
roll
dec
or
cmp
out
or
nop
mov
xorb
mov
mov
incl
in
ret
lds
hlt
es
mov
xchg
add
xchg
push
inc
push
scas
mov
dec
add
push
outsb
xchg
add
incb
outsl
sysenter
xor
incl
xchg
push
inc
hlt
sub
jnp
add
sbb
outsb
inc
clc
mov
clc
mov
imul
mov
cld
sub
mov
mov
lock
adc
mov
or
sub
jl
fidivs
jg
lcall
mov
jecxz,pn
inc
and
fs
lock
mov
test
inc
adc
mov
adc
sbb
adc
adc
nop
adc
mov
inc
and
adcl
clc
adc
popa
and
jmp
or
test
dec
jnp
mov
ljmp
or
mov
xchg
inc
icebp
xchg
mov
or
cld
and
jmp
mov
sbb
jb
sub
test
or
adc
cld
js
sbb
iret
inc
fldz
addl
adc
aad
or
add
mov
inc
add
sub
pop
push
aas
jmp
es
mov
add
and
xor
push
mov
pop
add
ja
jae
mov
es
pop
test
pop
push
inc
lea
mov
incl
push
jg
rclb
dec
sub
cli
jne
lods
adc
fwait
mov
jecxz
push
sbb
idiv
jns
insl
adc
out
decl
clc
sbb
fadds
clc
jmp
inc
or
mov
or
aad
push
jns
clc
xchg
mov
add
iret
adc
movsl
sub
jbe
or
cmc
push
ss
pop
add
xchg
add
add
test
jmp
insb
pop
mov
call
lcall
ljmp
mov
call
loop
mov
ds
sub
and
call
mov
js
ret
fsubs
push
les
xchg
call
divb
js
cmp
cmp
mov
cwtl
jae
fwait
add
loope
inc
adc
xchg
mov
mov
adc
int
lcall
add
sarb
mov
mov
jmp
cmp
sti
bound
or
or
adc
jns
inc
test
pop
jg
daa
into
stos
nop
in
and
mov
inc
outsb
pmaxub
jne
pop
push
or
in
test
arpl
sarb
add
add
ficoml
shl
mov
ss
mov
mov
outsb
jns
inc
data16
xchg
dec
mov
repnz
add
sub
push
and
sbb
fisubs
add
cmc
sbb
repnz
sbb
and
mov
cmp
xchg
decl
jmp
mov
add
daa
ss
call
mov
setg
inc
jl
push
add
jmp
cmp
clc
call
iret
pop
cmp
cmc
push
cmp
arpl
imul
outsb
dec
decb
addr16
add
rclb
pop
out
mov
add
inc
sbb
outsb
jp
addb
call
das
xchg
and
outsb
dec
decb
testb
mov
cs
mov
mov
add
xor
mov
mov
jle
lods
mov
add
add
or
call
das
adc
cli
jecxz
pop
decb
jle
sti
sti
push
call
stos
xchg
scas
je
pop
stos
shll
or
and
xchg
sbb
divb
data16
add
rorb
sbb
jmp
xchg
dec
ss
dec
je
mov
jbe
xchg
ljmp
xchg
sub
aas
ja
xchg
rcrb
xchg
ja
xchg
mov
filds
mov
xchg
add
xlat
jns
dec
add
out
dec
stc
outsb
jbe
mov
inc
sbb
aaa
sub
inc
or
jo
inc
mov
out
cmpl
or
cwtl
movsb
and
outsb
cmp
pop
adc
out
mov
push
xchg
xor
stc
xchg
outsb
cli
mov
xor
jmp
jne
cmp
addr16
out
jmp
sub
add
adc
gs
cli
mov
into
pop
jmp
subl
pop
and
jmp
xchg
sub
sbb
cmc
mov
mov
inc
es
insl
sub
pop
test
movsb
adc
inc
js
test
idiv
lcall
test
cmp
add
cld
decl
arpl
pop
add
pop
subb
ljmp
adc
xor
or
lcall
loop
dec
cmpl
std
pop
add
mov
icebp
ljmp
cli
das
sbb
xor
add
and
xchg
incb
xchg
fildl
test
add
mov
mov
decl
notl
mov
leave
and
jp
or
mov
mov
fwait
adc
add
incl
insl
stc
mov
jnp
xor
cld
imul
pop
mov
test
dec
cmp
mov
mov
stc
testl
arpl
mov
cmp
sbb
or
and
adc
rcr
xor
add
cltd
xor
jo
cmp
mov
out
xchg
loopne
les
mov
mov
lret
xchg
cli
clc
adc
popf
lcall
xchg
das
or
popf
cwtl
pop
jecxz
cmp
xor
aad
mov
jl
les
xchg
push
add
adc
cmp
xlat
lods
inc
lcall
ljmp
fcompp
push
adc
sub
add
loope
push
pop
or
jo
mov
push
mov
and
call
cli
pusha
fdiv
bound
jle
cld
jbe
divb
scas
mov
cmp
jmp
inc
xchg
or
jg
or
pop
rorl
and
icebp
iret
imul
adc
insl
dec
jg
xor
or
and
cmp
pop
add
push
aad
call
mov
jnp
add
mov
add
xlat
adc
mov
test
mulps
jnp
in
outsl
jle
mov
sahf
xchg
jmp
and
jmp
adcb
push
hlt
rolb
lock
in
shr
cmc
incl
call
gs
lcall
hlt
jmp
lock
subl
xchg
in
std
cmp
add
testb
add
lret
out
decb
sarl
mov
jnp
loopne
bound
shl
idivl
dec
xchg
adc
pushf
out
cli
push
hlt
inc
clc
xchg
add
sti
jge
mov
jle
jl
dec
cwtl
dec
xchg
mov
add
in
adc
jge
mov
icebp
push
or
cld
test
jbe
pop
hlt
inc
clc
pop
or
mov
std
into
dec
lock
loope
mov
mov
movsl
in
dec
and
mov
cltd
sbb
pop
sbb
or
insl
das
add
insb
mov
loopne
sub
pop
pop
pop
inc
int3
sub
mov
fwait
mov
lock
insb
insl
inc
call
ret
aas
jno
adc
jle
add
mov
inc
sbb
int3
sbb
jge
rol
inc
add
insb
push
jo
out
out
jle
inc
push
pop
pop
es
shlb
mov
pop
sbb
out
mov
add
outsb
cmp
mov
movsl
dec
jmp
dec
pop
loop
pushf
inc
test
push
inc
jns
adc
jmp
mov
lock
jmp
sarl
imul
inc
jle
subl
xchg
adc
jmp
pop
stos
aas
pusha
les
add
mov
loope
out
xor
add
xchg
loope
mov
mov
mov
inc
sub
cmp
dec
cld
movsb
sub
test
pushf
cmc
jg
sub
rcpps
divb
js
mov
addl
data16
mov
out
dec
hlt
es
inc
and
adc
xlat
sbb
int3
inc
xchg
cmp
nopl
adc
insl
imul
add
testl
pop
imul
jns
xor
xchg
cli
xor
add
add
jns
clc
jl
mov
pusha
jne
lock
stc
mov
out
xor
leave
repnz
sub
mov
cmp
push
sahf
fwait
adc
les
ss
arpl
or
xor
mov
mov
rclb
mov
jl
jnp
test
daa
mov
aas
adc
xchg
xchg
dec
mov
pop
ds
pop
sub
filds
jl
imul
ds
xchg
imul
xorb
add
mov
add
jnp
mov
push
and
add
jmp
pop
and
xchg
pop
into
push
scas
cmp
push
pop
cmp
dec
std
mov
mov
imul
add
insb
stos
sbb
jmp
scas
out
shrb
clc
outsb
ficoml
push
rorb
int3
insb
inc
aad
push
iret
adc
jno
jb
out
test
and
or
pop
rorl
out
pop
stc
scas
mov
jl
pop
sbb
rcrb
or
cli
xchg
and
push
shlb
jbe
das
xchg
mov
or
push
adc
sti
aam
push
add
lea
fstpl
or
add
add
imul
adc
insb
inc
xchg
popf
clc
add
in
inc
xor
sub
setnp
add
pop
pop
push
add
push
in
inc
xchg
out
pop
xchg
cmc
jnp
adc
rcll
pop
mov
adc
loopne
imul
fimuls
pop
mov
adc
mov
adc
add
shl
jne
mov
xlat
pop
push
jge
xchg
out
stc
sbb
add
cmp
add
add
das
inc
mov
cmp
outsl
push
fs
jl
mov
lret
adc
or
decl
jp
jle
inc
inc
and
mov
incl
mov
aam
pop
std
mov
repz
add
inc
jg
xor
xor
jge
mov
testb
popf
icebp
cmp
iret
lock
jo
add
stos
sar
popf
in
xor
ss
mov
xor
xchg
push
mov
sub
repnz
gs
adc
hlt
or
decb
gs
leave
negl
aam
xor
mov
cmp
and
fwait
sub
decl
pusha
loope
sub
lock
or
out
adc
mov
add
dec
push
lods
das
aas
push
int
cmp
mov
jl
jae
inc
movl
test
ficompl
rcrb
cmpsb
fisubrs
push
add
lods
in
xchg
or
xchg
sub
rorl
or
xchg
sbb
imul
call
call
fs
push
test
sti
adc
and
sar
into
lret
out
push
xchg
cmc
mov
xchg
mov
add
cmp
pop
leave
push
jnp
xor
adc
cmp
add
ljmp
dec
push
mov
adc
test
pop
xchg
cmc
orl
pop
test
pop
add
movsb
jae
cmp
sub
jmp
imul
clc
fldt
ficoms
jl
lock
and
pop
cmc
pop
or
add
mov
roll
test
add
loope
jl
insb
jne
out
push
jp
xchg
and
and
inc
cli
stc
dec
mov
jnp
push
push
jae
push
sti
icebp
jo
je
adc
cmpl
insl
lret
ss
repz
imul
pop
lgs
add
cmpsl
add
push
nop
push
adc
adc
leave
out
in
fimuls
iret
xorb
pop
mov
pop
in
cmp
into
fwait
insl
mov
add
testb
cmp
push
cmc
inc
cmp
aad
les
mov
arpl
pop
fscale
sar
mov
ljmp
loopne
add
jae
adc
add
dec
int
nop
int3
test
add
dec
xchg
and
inc
adc
out
mov
enter
mov
cwtl
enter
cli
mov
mov
push
mov
lret
jge
mov
cli
jmp
push
push
or
adc
jmp
sub
add
aad
aaa
sub
nop
dec
ljmp
jns
fnstenv
sub
fiadds
loope
loope
call
jno
xchg
ret
js
xchg
mov
xchg
clc
ficoml
xchg
loope
jbe
push
sub
lea
cmp
and
adc
imul
sub
sub
jmp
clc
inc
adc
in
push
jle
lock
lods
adc
cmp
or
cmc
add
adc
add
repnz
mov
pop
adc
pop
jno
jnp
cmp
cmc
psubq
cmp
xor
jns
add
cld
adc
jmp
test
jo
repz
sbbl
inc
popa
xor
call
out
outsb
stos
in
cmp
cmp
adc
decb
andb
adc
ret
repz
or
cmc
std
sbbb
dec
or
adc
or
cli
xor
std
std
push
insb
or
add
stos
notl
add
rolb
nop
fadds
add
out
fstpl
data16
pop
mov
adc
pop
enter
jle
ret
pop
call
jl
pop
and
in
cld
std
mov
adc
notl
jmp
add
nop
sbb
add
out
fstp
or
mov
xchg
add
push
add
pop
fisttpl
xchg
jnp
xchg
incb
add
cli
sub
sbb
sbb
adc
cmpsb
inc
add
jmp
add
mov
adc
repnz
or
insl
cli
sahf
cpuid
push
sub
ret
aas
fdivp
in
mov
pop
cli
jmp
pop
pop
cli
movsb
or
inc
std
lea
mov
add
cli
fstps
mov
add
pop
jne
fnstcw
or
cld
adc
ficoms
sub
or
push
jp
and
test
das
fprem1
push
add
inc
adc
jmp
out
lds
and
ret
or
fstl
jecxz
out
sarl
insb
add
add
movsl
add
add
push
jp
mov
fdivp
jmp
add
inc
mov
push
add
out
sarl
or
ret
int3
add
jecxz
outsb
sarl
jae
add
add
push
add
clc
pop
sarl
add
cli
xor
clc
fsubrs
push
cmp
inc
cmp
out
pop
pop
push
cmp
xchg
pop
add
mov
and
xchg
pop
ret
jg
imul
pop
fdivrl
mov
cmp
fcomps
in
adc
cs
pusha
lahf
insl
xor
inc
push
imul
out
add
pop
mov
cmc
int
jle
or
adc
xchg
enter
adc
mov
inc
cmpsb
mov
fdivr
lods
inc
scas
daa
incb
inc
es
xlat
pop
jmp
mov
outsl
pop
adc
or
fistpl
js
add
mov
inc
pop
int
decb
imulb
pop
jmp
test
outsl
lahf
xchg
pop
or
nop
iret
push
add
dec
pop
cltd
jno
lds
mov
mov
outsl
xchg
inc
mov
sbb
jmp
int3
loop
iret
xchg
mov
cli
insb
fists
dec
popa
out
pop
sbb
and
pop
hlt
xchg
adc
sub
hlt
xchg
xor
sub
sbb
sub
sbb
fldt
xchg
lods
xchg
iret
rclb
not
xchg
xlat
bound
test
les
out
sbb
mov
mov
lock
loopne
jge
adc
test
hlt
cmc
call
testb
xor
push
mov
popf
xchg
adc
mov
outsb
cli
mov
arpl
push
xor
mov
in
push
in
loope
test
adc
cmp
fsubrl
ljmp
add
inc
adc
sarb
cwtd
cmp
xchg
sti
add
mov
mov
add
jmp
andl
je
add
hlt
pop
add
jp
jle
ljmp
jmp
test
jno
push
stos
jno
lock
adc
imul
jb
rorb
je
adc
push
jg
add
xchg
or
jmp
lahf
add
decb
adcb
jecxz
les
lds
push
call
nop
or
pop
lods
push
xchg
jne
sbb
jge
fs
add
or
sbb
clc
push
insb
inc
jbe
push
std
aad
push
pop
pop
push
sub
or
imul
push
adc
pop
push
add
pop
in
add
bnd
xchg
out
push
seto
jns
adc
add
nop
cmpsb
jne
push
and
mov
popf
mov
ficomps
or
push
xchg
jl
into
push
jmp
or
stc
gs
loopne
cmpb
jmp
mov
xorl
popl
test
pop
out
aam
inc
clc
mov
push
or
cli
cs
imul
stc
push
rorb
mov
mov
xor
cmp
stc
mov
sti
lods
adc
dec
aad
cmp
aaa
xchg
pop
cli
jo
add
test
xchg
iret
ja
ss
in
jg
jbe
cli
out
push
test
sbb
add
or
test
push
pop
cli
sub
rclb
rolb
les
jl
imul
inc
shll
ljmp
and
call
mov
aad
xor
or
add
repnz
sbb
cmp
mov
fs
mul
cmc
jmp
fisttps
loope
cmp
loop
cmp
out
add
sysret
test
movl
jl
lock
lcall
addps
push
push
insb
add
addl
lock
hlt
cmp
ds
adcb
cmp
fldcw
outsl
cli
jnp
adc
cld
std
mov
movd
pop
stos
fimull
xchg
mov
repnz
or
jle
inc
add
push
mov
push
sbb
or
or
push
add
shl
sti
rorb
pushl
push
aas
cmp
fistl
imul
xchg
aaa
xchg
jno
mov
add
lds
cld
leave
pushf
and
pop
lods
shl
jne
mov
test
aam
inc
fmuls
push
add
jmp
and
add
lahf
jl
imull
add
and
jmp
test
das
enter
jmp
sbb
testb
cmp
inc
ja
adc
clc
push
leave
add
and
add
add
dec
mov
ljmp
mov
add
loope
push
jg
jae
mov
pop
jmp
ljmp
mov
aaa
mov
jmp
lock
roll
dec
je
aam
pop
lahf
aam
ucomiss
sti
pushf
dec
cmp
or
mul
pop
adc
test
cmp
jb
cmc
xchg
sbb
dec
je
fimull
stc
push
or
in
sbb
add
fadds
incl
pop
fyl2xp1
cmp
decl
xchg
sbb
subb
call
shl
xchg
adc
push
out
mov
dec
stc
push
mov
insb
push
dec
lcall
mov
shll
pop
push
lcall
shll
push
mov
push
xchg
mov
cwtl
dec
stc
push
in
insb
std
shl
add
shl
inc
shll
and
clc
xchg
adc
cmp
testl
dec
mov
push
cmp
incl
decl
add
inc
call
clc
daa
inc
xor
negl
add
add
adc
sti
mov
sub
notl
pop
push
aad
icebp
insb
jne
arpl
push
add
test
add
push
cmp
push
sbb
ret
les
add
enter
adc
xor
aam
insb
jo
out
push
dec
push
adc
pop
shl
dec
xor
jecxz
xchg
insl
into
cwtl
test
adcb
add
std
outsl
mov
dec
mov
clc
icebp
mov
adc
enter
push
out
push
fwait
test
mov
add
jg
lock
dec
idiv
adc
insl
fcomps
outsb
cmp
loopne
test
insl
adcb
test
add
insl
cs
and
jge
fs
adc
fimuls
add
mov
and
add
lahf
xchg
std
popa
sub
dec
je
add
push
mov
pusha
enter
adc
cli
fs
sbb
cli
pusha
mov
dec
cli
nop
ss
cli
jbe
fsubs
ficoms
add
jns
add
sub
xchg
xchg
popa
test
add
push
ss
sbb
or
dec
je
filds
push
mov
dec
pop
add
lret
aad
cld
lcall
jmp
or
adc
call
push
mov
loop
jae
fiaddl
cli
adc
sti
repz
divb
mov
fdivr
jp
mov
add
mov
cmc
mov
pop
inc
push
fiaddl
setae
divl
dec
mov
pop
xor
add
inc
adc
and
jne
adc
or
sbb
dec
cli
add
mov
idiv
adc
push
cld
or
xchg
inc
loopne
mov
add
adc
dec
pop
jns
hlt
adc
je
or
jns
clc
imul
mov
out
xchg
dec
sub
out
es
je
jno
pop
push
cmp
andl
jnp
sub
out
and
or
std
cli
fstps
mov
dec
loopne
add
and
pop
pop
xor
sub
aad
xchg
adc
shl
nop
sbb
popa
xor
jg
rcr
push
dec
loope
push
xchg
mov
mov
pushf
pop
and
call
clc
xchg
loop
inc
in
fidivrs
push
rorb
sbb
pop
lahf
or
fdivrs
outsb
out
lahf
pushf
hlt
adc
lahf
sbb
fstps
pop
outsb
out
pushf
adc
sub
dec
imul
jo
outsl
adc
jmp
xchg
and
sub
add
xor
or
jo
popa
test
add
out
repnz
fsubp
adc
cmp
cli
fs
push
test
add
xor
mov
sbb
pop
xor
or
stos
jnp
das
rol
bound
dec
inc
adc
into
pop
cmc
adcb
jmp
jg
inc
f2xm1
iret
or
lods
call
rol
sbb
mov
out
sub
out
sbb
decl
mov
mov
add
sub
inc
and
iret
jae
pop
xor
add
pop
pop
mov
adc
shl
dec
ret
in
xchg
add
xor
lret
filds
add
mov
subl
jge
movb
mov
mov
jecxz
cmc
mov
mov
shlb
adc
fnstcw
test
gs
jne
and
arpl
mov
lahf
inc
cli
icebp
mov
rorb
outsl
sbb
and
jle
cmp
popa
divps
loop
cmp
inc
les
or
dec
fdivrl
add
iret
pop
pop
cmpsb
out
sbb
popa
je
bound
out
or
mov
movq
testb
mov
lock
inc
fnstcw
adc
add
es
js
arpl
xchg
adc
add
adc
in
incl
fcomi
shr
jp
hlt
fldcw
inc
adc
add
pushf
and
adc
incl
adc
gs
fadd
jnp
lahf
call
imul
sub
push
insl
shll
xchg
lea
out
jb
push
fs
cli
push
sub
pop
mov
movsb
sti
cmp
in
pop
adc
movsb
xlat
lea
xchg
xchg
jmp
cwtl
dec
cli
push
in
pop
jae
test
mov
sub
cmp
push
popa
dec
xchg
lea
aad
pop
add
dec
je
pusha
shl
xchg
imul
dec
rorb
pusha
inc
pop
lea
jmp
jo
mov
cmpsl
sbb
not
pop
and
add
in
decl
mov
sbb
push
out
pushl
add
scas
cmc
test
adc
add
mov
and
adc
jne
int3
int
nop
sbb
adc
xor
dec
loop
out
cmc
test
xor
jmp
fs
testb
cmc
jne
xchg
push
hlt
lret
mov
push
idiv
xor
outsb
adc
dec
addl
pop
inc
out
mov
jnp
adc
iret
and
insl
pop
cmpb
das
add
mov
aad
cli
pop
js
or
xchg
cli
dec
ror
les
and
mov
mov
and
out
cli
cltd
ds
je
and
aad
dec
xchg
add
sub
test
push
jg
cmc
loope
pop
xchg
mov
sti
mov
sbb
bound
repnz
adc
pop
test
pop
add
pop
enter
clc
nop
sub
outsb
inc
sbb
dec
gs
dec
adc
gs
adc
inc
sub
outsl
pop
cld
xor
cwtl
je
push
inc
or
testl
xlat
pop
sbb
sbb
dec
push
inc
pop
hlt
out
enter
or
ss
mov
push
jmp
pushl
fisubrs
fmuls
mov
nop
pop
cs
fldenv
xor
push
out
xchg
push
or
daa
sub
xlat
adc
es
movsb
mov
cltd
inc
int
xorb
loopne
mov
repz
pop
repnz
or
cli
loop
or
aaa
cli
push
adc
and
xchg
add
inc
stc
je
lcall
mov
cmp
loope
rcr
add
mov
shlb
inc
cmp
mov
aam
mov
inc
jl
aad
test
cmc
inc
addb
jmp
fdivrp
repnz
in
in
mov
inc
popa
lcall
mov
pop
or
mov
push
mov
mov
pop
push
inc
mov
push
mov
dec
jmp
nop
inc
clc
xor
push
seto
fdivrp
add
xchg
in
loopne
mov
lea
repnz
incb
add
sbb
fsubs
jno
pop
pop
cli
dec
addr16
je
aam
sti
cmp
shrb
or
hlt
test
or
pop
jb
cli
mov
lods
insl
aad
incl
enter
ret
enter
sub
clc
popa
xor
pop
ss
or
iret
pop
cli
add
ds
outsl
push
or
sub
adc
cmpsl
and
sbb
sbb
mov
push
repz
adc
pop
pop
or
mov
aas
rorl
xor
jmp
les
pop
enter
clc
add
xchg
mov
aas
int
pop
pcmpgtd
aas
orl
sub
cmp
cld
shrb
inc
inc
aas
pop
pop
shlb
fsubs
stos
call
ss
loopne
inc
out
fadds
aas
mov
das
leave
lock
pop
adcb
cmp
add
stos
daa
inc
lea
sarb
mov
and
je
pop
cli
fiadds
std
fldcw
test
mov
sti
inc
mov
cwtl
insb
lret
cli
and
cmp
ds
adc
xchg
rclb
push
cmp
or
push
call
fs
push
cmpsb
adc
jmp
pop
adc
bound
mov
mov
sub
pop
adc
lods
mov
xchg
sbb
add
add
sbb
cli
loopne
jge
or
adc
in
orl
pushl
roll
inc
testb
les
mov
inc
jns
pushf
adc
adc
inc
dec
adc
cwtl
in
mov
xchg
mov
verw
cwtl
imul
test
inc
sbb
xchg
int
sub
mov
incl
push
or
mov
incl
mov
fucomp
sub
jecxz
subl
sbb
inc
sbbl
mov
incl
outsl
lcall
xor
push
jle
jl
add
cli
xor
add
add
sarb
inc
lret
mov
je
daa
movsb
decl
add
cli
das
push
xor
sub
add
pop
push
arpl
adc
int3
mov
fimuls
andb
pop
xchg
add
jbe
mov
jmp
call
adc
adc
ljmp
or
das
push
popl
dec
add
xchg
or
push
pop
or
outsb
or
loope
mov
inc
in
or
gs
cmp
rcrb
shlb
scas
call
xor
lock
dec
rclb
cmp
imul
pushl
mov
xor
xchg
mov
pop
mov
dec
mov
sarl
cmp
leave
cmp
sub
cmp
cmpsl
ret
sahf
lret
xchg
ret
test
ret
test
ret
outsb
lret
retw
test
ret
test
cmp
stos
dec
cmp
inc
cmp
dec
cmp
mov
dec
cmp
and
jmp
push
cli
sbb
fcoms
aam
push
cli
mov
jmp
push
cli
or
push
cli
int
push
cli
scas
sub
push
sbb
cmp
push
cli
outsl
stos
dec
cli
jge
dec
cli
mov
dec
cli
sbb
je
cli
xchg
fs
cli
loopne
dec
cli
out
push
dec
cli
notl
add
scas
dec
cli
dec
scas
dec
cli
add
dec
cli
repnz
dec
cli
lods
cmpsb
dec
cli
adc
mov
incl
xchg
call
sbb
inc
sbb
inc
mov
inc
mov
pushl
inc
incl
sbb
push
ja
mov
mov
mov
ljmp
sub
incl
das
incl
add
inc
or
jmp
add
xor
adc
lret
or
sbb
sti
adc
gs
sbb
adc
div
repnz
and
and
add
out
adc
jmp
sub
ljmp
int3
lret
mov
lret
xor
aad
xor
mov
sbb
sti
scas
sbb
int
int3
dec
int
sbb
push
imull
lds
shrl
inc
adc
int3
mov
shrl
pushf
rcrl
stos
rorl
sahf
sarl
shll
shrl
xchg
inc
aaa
hlt
mov
inc
aaa
lcall
aaa
push
sbb
inc
aaa
push
sbb
dec
sbb
jp
inc
aaa
mov
inc
aaa
fidivrs
add
in
lds
aas
pop
lds
aas
aaa
lds
pop
and
ss
adc
ss
lds
xor
ss
scas
ss
fistps
ss
ss
ss
ss
mov
ss
lods
inc
ss
add
push
cli
pop
jbe
cli
lock
cli
cmp
push
cli
push
or
insb
add
push
cli
sub
stos
jg
xor
add
scas
dec
out
ljmp
dec
decl
pop
or
and
push
data16
loopne
gs
std
xchg
mov
push
jbe
mov
adc
rorb
and
push
adc
or
push
mov
xchg
mov
inc
jnp
add
dec
call
incl
idivb
test
mov
cli
dec
add
enter
insb
imul
add
jns
and
push
mov
ret
jge
mov
sbb
in
push
out
add
adc
push
jae
fdivrs
shrb
jg
mov
mov
out
or
dec
cli
jg
mov
sbb
fdivr
lods
flds
xor
dec
push
xor
sub
xchg
data16
and
push
jge
out
mov
nop
add
adc
add
arpl
aas
xor
add
in
pop
dec
jmp
mov
adc
jl
insb
jge
fs
mov
lahf
mov
push
add
cltd
jo
fidivs
pop
lret
sar
ljmp
fistpll
sbb
pop
or
cmpsl
jl
test
mov
xchg
nop
push
out
jecxz
mov
cli
xchg
cli
xlat
mull
lret
cli
xchg
pop
inc
ljmp
cli
outsb
rolb
mov
cli
push
mov
ja
pushf
sbbl
pusha
mov
cli
cs
inc
icebp
mov
or
adc
call
out
adc
jo
lcall
int
and
push
add
jae
adc
stc
pop
test
or
adc
add
push
xor
fldcw
cmp
popf
push
cli
jae
and
add
iret
out
push
xor
call
stos
cmp
add
les
lcall
add
mov
shll
jmp
les
inc
cli
popa
or
shrl
iret
testl
push
pop
cmc
incl
iret
push
mov
cmc
call
lods
adcl
mov
xor
pop
add
sbbl
ret
mov
cmp
inc
or
repnz
ss
jp
pushf
out
imulb
jae
sub
adc
data16
jnp
inc
pushf
add
stc
loop
ds
mov
shrb
or
call
dec
js
add
out
mov
rclb
add
jl
mov
setns
movsl
repnz
mov
dec
incl
incl
sti
add
adc
jge
out
and
add
fwait
sub
aam
lcall
sbb
push
aad
push
sub
cmp
pop
pop
subl
jmp
xchg
jg
adc
mov
rcrl
aam
ss
add
pop
pop
cmp
xor
add
adc
pop
add
xchg
or
dec
pop
xchg
add
das
jmp
pusha
mov
adc
bound
ds
rol
xchg
loopne
pop
adc
push
adc
and
xchg
inc
mov
gs
adc
out
jo
pop
xchg
xchg
push
call
mov
mov
xchg
fdivr
dec
test
enter
add
cmp
mov
pop
subl
jo
cs
sub
loopne
push
mov
cli
push
cmp
cmc
call
loop
cmp
cmc
mov
add
add
mov
and
mov
lods
std
cmp
insb
cmc
lcall
push
sbbl
cmc
ljmp
pop
cmp
loopne
cmc
jp
add
pop
mov
stos
jnp
mov
aaa
inc
roll
cmp
outsb
ss
cmp
pop
mov
sbb
cmp
add
add
push
cld
out
push
jb
leave
mov
or
subb
nop
dec
xor
out
lahf
incl
andb
inc
dec
or
andb
or
push
pop
xchg
mov
jae
xor
je
mov
sti
arpl
outsb
mov
dec
cli
push
cmpsb
xchg
aas
dec
mov
dec
cli
inc
push
push
out
mov
inc
and
dec
xchg
lret
iret
or
sbb
mov
add
js
clc
and
cld
cmpsb
clc
sub
xchg
testl
fisubrs
mov
jl
in
pop
pop
and
cmp
gs
sub
dec
add
out
xchg
mov
cli
rol
or
fdivrp
lock
daa
jge
das
pop
leave
jae
lahf
jge
pop
sarb
and
test
add
push
inc
ljmp
call
xlat
mov
cli
push
or
adc
jmp
add
out
popf
and
dec
sbb
mov
out
add
push
adc
jmp
or
out
push
push
jecxz
pop
push
xor
and
push
or
adc
iret
bound
mov
push
daa
das
cli
xchg
in
xchg
daa
mov
sub
push
jb
push
pushf
jl
enter
test
cli
data16
xor
das
mov
inc
cmp
insl
loop
sub
loop
ss
jmp
jle,pn
fstl
add
adc
mov
outsb
push
loop
aam
lods
push
cmp
push
sub
fldenv
push
cmpl
sub
add
into
je
inc
test
cmp
mov
imul
lcall
push
cmc
call
mov
cmc
call
test
add
add
or
mov
dec
data16
movsl
mov
fildll
or
jae
jl
pop
or
sub
leave
adc
adc
jae
movsl
jp
lret
and
add
push
inc
add
inc
add
and
push
test
dec
or
sbb
addb
and
stc
negl
stc
sub
cli
add
sti
dec
cli
push
cmp
mov
jne
adc
jp
daa
pop
cmpsl
inc
popf
jae
pop
sub
xor
inc
dec
loop
dec
repnz
inc
in
or
add
sbb
iret
cmp
fdivrl
add
sub
xchg
aam
fnsave
sbb
outsb
inc
pushf
jp
add
cmp
adc
push
add
adc
mov
jl
outsb
mov
mov
in
fsts
jmp
pop
enter
xor
dec
mov
add
test
insb
add
notl
sub
cli
inc
lret
test
inc
flds
add
daa
jge
in
in
je
lret
dec
loopne
cli
push
dec
cwtl
xor
inc
sub
fmull
push
call
mov
subl
cmpsb
stc
jmp
adc
test
call
xlat
pshufw
mov
rorb
pop
dec
clc
pop
ljmp
jo
add
xchg
lret
int
rorb
es
and
ret
out
cmp
mov
test
fimuls
add
insb
out
adc
dec
mov
mov
xlat
loop
jecxz
cmc
leave
add
cli
push
es
jns
mov
arpl
popf
xchg
jnp
gs
mov
sub
inc
stos
pcmpeqw
imulb
addl
incl
xchg
xchg
cmpl
popa
lret
out
dec
cmp
mov
ljmp
xor
inc
orb
dec
or
mov
pop
inc
clc
push
jnp
add
incb
add
inc
jp
add
repnz
inc
jp,pn
add
jg
cs
jae
cmp
mov
incl
sub
incl
ja
add
rol
fistl
int3
fistpl
fstpt
in
daa
xchg
nop
sti
xlat
cld
gs
adc
call
add
int
into
cltd
mov
pop
stos
cwtl
mov
fcompl
cwtl
mov
pop
xor
movsl
pop
mov
rcrb
cltd
movsl
repz
cld
pop
and
movsl
jmp
push
jnp
push
call
idiv
adc
push
call
decl
sbb
adc
hlt
mov
nop
mov
imul
lahf
and
push
xchg
inc
in
aaa
cmc
cli
adcl
rcrb
pop
xchg
jae
mov
adc
movsb
or
mov
inc
movsb
jl
or
inc
cmp
mov
add
inc
cmp
mov
das
adcb
lds
lds
xchg
push
mov
jmp
imull
add
lock
call
in
mov
popf
imul
add
add
decb
add
jbe
addl
add
push
or
add
inc
out
stos
push
ljmp
xchg
out
xorl
adc
mov
jne
nop
inc
call
add
stc
fst
jae
push
mov
call
cmc
test
add
add
cmp
adc
add
cmp
mov
mov
jnp
aas
je
mov
add
add
push
insb
adc
stc
ja
xor
pop
js
cld
inc
adc
push
mov
lcall
cs
sbb
add
dec
incl
jl
inc
push
jg
inc
inc
les
test
xchg
and
adc
je
add
je
mov
out
adc
mov
mov
adc
fsubrl
lret
add
and
xor
and
pop
add
call
lea
fdivrs
pop
and
add
sub
out
and
subb
pop
sub
mov
imul
push
and
sbb
call
ud0
inc
notl
push
repnz
mov
sbb
and
jecxz
cwtl
xor
add
cmp
adc
add
jmp
out
dec
add
pop
lcall
rclb
clc
pop
adc
cmc
mov
or
add
xor
or
fsts
add
add
xchg
fsubrp
pop
adc
ljmp
cli
xchg
dec
addr16
jbe
xor
add
sbb
rolb
adc
jmp
mov
cli
cli
cmp
ret
call
jne
cli
push
sbb
dec
mov
sti
push
inc
add
test
incl
or
add
jns
add
je
test
mov
inc
or
stos
test
push
out
dec
jmp
xchg
icebp
add
mov
cmc
aad
lcall
fisttpll
decl
shr
addl
cmp
pusha
jg
lcall
inc
loop
pop
loope
test
add
je,pt
cmp
popa
lea
jbe
add
fidivrs
cli
mov
in
clc
jg
xor
inc
inc
incb
aam
rorb
mov
aaa
insl
sub
adc
cmp
inc
sub
cs
mov
cmp
xor
sub
jle
xor
hlt
cmp
inc
dec
test
add
push
push
outsb
sub
mov
mov
into
dec
lret
adc
pop
pop
adc
add
or
inc
add
add
xlat
adc
js
xor
lds
xchg
push
fnstcw
sbb
or
mov
xchg
test
enter
adc
fadd
arpl
fistpll
add
rcll
cmpl
lock
pop
lods
dec
xchg
ja
add
outsb
mov
inc
xlat
dec
add
adc
cmpb
mov
jmp
test
inc
or
lahf
sbb
jmp
pop
sbb
out
xchg
pusha
mov
cwtl
mov
pop
adc
cmp
out
mov
hlt
xchg
add
add
scas
sbb
add
cmc
aad
leave
popf
mul
lcall
pusha
inc
and
cmp
and
or
push
cmpsb
loope
pop
sbb
xlat
mov
add
dec
lock
stos
mov
push
mov
dec
cmp
pop
movsb
push
gs
cmp
fs
add
mov
inc
int
add
pop
sbb
cmp
dec
icebp
push
popa
leave
xchg
mov
inc
xchg
je
mov
out
popa
shlb
ss
lea
or
loop
mov
mov
mov
fimuls
sub
fiadds
sahf
out
incl
sub
inc
testb
sub
mov
lahf
xor
aad
in
jg
stc
shll
stos
add
jno
out
lahf
scas
lahf
pushf
out
add
lea
int
mov
sub
mov
push
inc
or
fdivrs
jae
ja
cmp
xor
inc
sbb
inc
repnz
aad
cmp
mov
jle
hlt
aam
jg
push
xchg
in
rolb
push
adc
add
push
push
add
roll
adc
stos
idivl
xchg
pop
jmp
mov
ficoms
and
into
push
mov
inc
jl
sbb
hlt
icebp
cmp
adc
add
push
arpl
pop
or
andl
add
adc
sub
add
das
incl
ret
xchg
mov
adc
fs
add
jmp
sub
xchg
dec
sub
cmp
mov
sub
mov
jmp
js
sbb
xlat
bswap
cli
push
xlat
jmp
cld
xor
subl
or
leave
or
xchg
inc
inc
je
out
popf
add
pop
xchg
dec
rcrl
gs
mov
out
add
cmp
cmp
test
adc
push
outsl
scas
std
mov
sbb
xchg
adc
fidivrs
adc
inc
push
and
add
mov
test
stos
xchg
push
mov
jnp
cli
xchg
add
fstl
mov
sbb
mov
adc
inc
lock
add
xchg
stos
add
mov
test
push
test
mov
add
push
xor
outsb
roll
in
inc
orl
sbb
jae
mov
jg
inc
jae
mov
out
jg
jnp
mov
push
mov
paddusb
insb
decb
mov
xlat
mov
aas
jbe
dec
jmp
es
and
xor
pop
xor
inc
loopne
mov
cmp
cli
jmp
and
push
or
je
xor
mov
into
out
movsl
xor
pop
test
pop
push
adc
adc
stc
enter
add
push
mov
jecxz
out
xor
pop
sbbb
imul
add
shrl
jmp
bound
decb
cmp
inc
lock
sub
cmp
mov
sub
xchg
xor
cmp
xchg
add
std
adc
mov
std
or
neg
xor
push
xor
rorb
incl
jae
insl
daa
test
or
adc
push
sbb
addr16
dec
sar
cmpsb
andb
xchg
or
or
in
imul
jmp
iret
or
sbb
adc
or
jb
and
add
fwait
cld
xchg
rorb
cs
or
es
mov
cli
sbb
sahf
iret
out
ljmp
mov
push
xchg
adc
hlt
das
pop
inc
jmp
enter
jbe
add
mov
add
cmp
adc
rcl
mov
loopne
mov
sarl
gs
enter
add
idiv
cltd
iret
add
add
add
xchg
mov
sub
movl
in
pop
call
mov
das
ss
and
add
push
mov
add
pop
add
mov
pop
push
mov
push
add
add
sbb
imul
mov
out
mov
js
mov
outsl
inc
mov
popa
std
and
jae
jge
adc
addl
cltd
mov
jne
outsl
js
or
mov
cld
std
in
pop
sar
rep
mov
pop
cs
cmp
out
jle
out
pop
enter
jo
cli
ret
je
mov
and
mov
lods
jp
scas
sub
cli
xor
loop
or
rcl
imul
xor
cmpsl
add
arpl
testb
pushf
fs
push
adc
add
adc
mov
sahf
and
sbbb
sbb
xchg
cmpsl
add
inc
daa
sbb
ds
xor
lahf
mov
ficoms
idivl
sbbl
xor
pop
inc
pop
xchg
sbb
add
inc
and
adc
popf
pop
lahf
add
or
push
insb
sub
xor
call
shrl
cli
mov
adc
add
test
inc
test
mov
stc
push
cmp
stc
add
or
cmp
push
test
decl
or
adc
inc
lcall
mov
je
add
pop
adc
js
test
push
adc
mov
lods
adc
dec
adc
dec
jne
xchg
dec
clc
pushf
pop
inc
imull
add
adc
sbb
inc
cmp
inc
je
call
sbb
jmp
loop
div
aas
add
mov
lea
cmpsb
aam
mov
jne
pushl
pusha
or
jmp
call
lea
xor
dec
aas
orb
fs
nop
dec
fsubrs
jo
stc
mov
loope
add
sub
cmpb
decl
loop
cli
popf
dec
add
add
lock
sarl
xor
sub
dec
sub
out
mov
mov
je
inc
inc
mov
mov
xor
ljmp
daa
add
sbb
mov
or
add
mov
or
jns
inc
fisttpl
incl
jg
cli
lret
cmp
and
mov
movlps
push
or
lds
add
gs
addr16
inc
cmpsl
jns
sti
mov
fs
fsubs
je
aaa
sti
xor
sub
push
xor
sub
sub
in
sub
xchg
sbb
add
jecxz
or
jo
push
imul
inc
mov
cltd
punpckhdq
pop
inc
sbb
aad
push
inc
xchg
xor
cmc
faddl
add
jnp
adc
cmp
rolb
dec
xorl
mov
inc
andl
or
cmp
aas
cmc
sbb
xor
cli
cmp
ret
cmp
inc
stc
push
shll
test
adc
sbb
je
mov
std
xor
insb
lcall
jge
or
data16
test
xlat
lahf
inc
inc
xlat
hlt
inc
adc
or
add
or
sti
mov
pusha
mov
loope
lret
mov
cmp
sbb
divl
sub
mov
adc
or
lret
jle
add
notl
or
je
xchg
jb
pop
roll
call
sub
add
xchg
dec
clc
and
or
add
add
out
add
and
pusha
mov
fistl
pop
jns
xor
out
inc
mov
cli
aaa
adc
jmp
and
out
orl
call
cmp
faddl
jge
sub
cld
out
jl
es
clc
aas
add
sbb
ss
and
ficomps
xorl
stos
sti
std
ljmp
push
sbb
aam
xchg
lcall
mov
jle
out
add
jns
add
jno
add
pusha
dec
adc
and
ret
push
inc
adc
addb
out
mov
xor
xor
dec
fstps
ds
addl
sar
push
imull
pop
mov
jle
into
in
fstpt
dec
push
out
cli
fnsave
sub
push
out
lcall
sbb
mov
sub
popl
cmp
in
imul
jmp
add
or
int3
cwtl
orl
cli
cltd
mov
mov
mov
fimuls
stc
cld
pop
and
addb
jl
outsl
sbb
sti
imulb
call
push
push
push
cli
xor
sub
sub
jnp
pop
xchg
push
ror
push
adc
addl
arpl
cmpl
jg
push
jg
inc
add
mov
cmc
ljmp
je
add
addl
cmp
idiv
loope
stc
push
popa
push
dec
sub
dec
call
push
dec
and
xchg
idiv
or
idiv
jp
jmp
fnstsw
jns
xor
daa
rolb
inc
push
jae
push
sub
push
jge
adc
dec
add
out
inc
add
adc
stc
jge
cmp
sarb
or
mov
push
xchg
push
icebp
rep
cmpb
stc
and
sub
cli
jg
and
mov
mov
sbb
dec
cmp
xchg
jbe
cmp
fiaddl
add
jge
and
sbbb
std
std
test
sti
jge
add
jg
add
adc
addb
std
decl
or
lret
sbb
xchg
fnstsw
cwtl
or
adc
adc
out
out
add
insl
repz
mov
ljmp
mov
pushf
mov
add
dec
cltd
and
sets
rolb
data16
stos
push
call
incl
les
into
sub
push
ror
aam
pushf
jle
push
popa
sarb
mov
xchg
cmpsl
cmc
xchg
pop
dec
imul
and
mov
add
lea
lods
push
lea
adc
lret
and
rcl
fwait
dec
jne
xor
stos
sbb
fisubrl
test
xchg
js
das
pop
xor
xchg
jmp
pop
stc
mov
xchg
inc
jmp
cwtl
add
xlat
in
mov
clc
jno
test
cwtl
adc
out
les
jl
arpl
aam
and
test
or
mov
call
bound
mov
adc
jl
xor
cmp
xor
mov
rclb
fs
adc
add
loop
xorb
incl
xchg
in
push
movb
in
jecxz
mov
adc
push
and
icebp
sub
loope
adc
lods
sub
xchg
das
sbb
pop
push
test
adc
add
lods
add
je
stos
push
loopne
push
call
add
out
shlb
dec
int
mov
mov
into
mov
dec
sub
cmpsl
sub
sar
sbb
or
mov
std
orb
fucomp
mov
aas
add
mov
sbb
incl
mov
mull
lods
std
xchg
add
sub
add
ja
clc
movsb
sub
dec
add
push
fsubp
mov
add
jnp
and
scas
mov
adc
add
enter
ror
movsl
or
pop
das
stos
out
divl
mov
mov
adc
adc
xor
idiv
cmp
outsb
mov
pop
mov
in
pop
or
dec
or
cmp
mov
add
xor
loope
lods
cs
mov
popa
mov
or
jmp
and
add
or
insb
and
or
pop
pop
popl
nop
popl
js
mov
xor
cwtl
stc
xor
or
test
push
adc
bound
mov
push
mov
push
stc
cli
idiv
jae
lods
jae
add
sub
and
out
subl
call
sbb
xchg
sbb
insb
push
add
jmp
pop
std
jae
call
cmp
add
sub
lcall
inc
or
cwtl
flds
insl
adc
sub
add
push
jnp
cmp
add
pop
mov
mov
push
test
fcomi
jae
vunpckhps
or
inc
int
mov
inc
sbb
call
lods
cmovo
aas
add
rorb
or
popl
sahf
dec
addb
stos
or
repz
inc
hlt
pop
notb
add
inc
or
insl
pop
cli
jge
in
mov
out
inc
arpl
es
add
adc
xchg
not
in
inc
push
sbb
cmp
mov
cmp
ds
sbb
jge
sbb
sbb
aaa
add
jbe
mov
pop
ljmp
sbb
repz
add
xchg
push
or
stc
add
dec
adc
fistpl
or
adc
sbbl
inc
pop
adc
mov
add
mov
mov
pop
ret
mov
jmp
out
push
popa
xor
out
shr
xchg
sbb
cmp
fcmovu
stos
xchg
or
xor
out
xchg
push
xchg
fiaddl
incl
std
repz
in
push
xor
imul
jo
add
pop
lds
divl
adc
pusha
cmp
scas
xchg
add
add
jle
pop
adc
jb
jg
out
jle
jmp
and
subl
push
add
and
repz
mov
icebp
rorb
enter
or
ret
jo
fidivrs
add
cmp
push
mov
jno
mov
or
jno
jp
clc
cmp
xor
sbb
call
clc
mov
xchg
nop
dec
pop
xchg
cli
jae
jge
push
push
jae
xchg
pop
testb
divb
pop
stc
jg
adc
jl
push
testb
cmc
add
adc
jb
testb
push
outsb
add
call
add
jne
cld
incl
mov
test
stc
clc
divb
and
pop
dec
push
jne
mov
xor
pop
idiv
clc
and
sub
pop
div
fistl
add
add
pop
adc
add
mov
cli
mov
pushf
add
notl
mov
adc
inc
mov
adc
add
std
pop
add
mov
idiv
jl
icebp
inc
jmp
xor
enter
mov
incl
shl
cmpb
cmpb
mul
add
ljmp
mov
adc
decl
in
add
xor
imul
sbb
mov
cwtd
iret
or
jnp
and
mov
or
dec
in
outsb
roll
xchg
lods
daa
sti
mov
sbb
push
or
push
pop
xor
adc
mov
jns
insb
jo
sbb
pop
hlt
imul
dec
sti
pop
clc
sub
sbb
sti
cmp
sub
sbb
sti
cmp
sub
sbb
sti
sbb
sub
push
les
inc
jp
jecxz
add
std
std
pop
stos
incb
pop
out
test
inc
mov
cli
dec
push
test
push
std
xchg
cli
ds
test
test
je
push
xchg
icebp
xchg
cmc
and
xchg
stos
push
jge
jg
lret
decb
adc
pop
adc
jnp
divb
add
cmp
cwtl
push
mov
inc
call
rorb
cli
add
je
sub
jg
and
das
in
mov
pop
cmp
inc
icebp
jmp
dec
call
popa
adc
ffree
mov
loope
sub
fsts
mov
add
lods
rorb
rorb
jno
inc
jmp
dec
adc
pop
mov
psllw
add
insl
mov
adc
js
adc
stc
jae
pop
xor
movaps
popf
mov
push
xchg
insb
into
and
adc
stc
testb
push
push
mov
aas
add
mov
push
sbb
jae
sub
adc
idivl
out
adc
mov
into
flds
arpl
mov
ljmp
add
sbb
xlat
sbb
xchg
and
adc
sbb
repnz
sbb
loopne
aam
shlb
cmp
loop
adc
out
mov
sbb
pop
adc
mov
pop
sbb
cld
ret
sti
notb
loopne
in
push
xchg
in
imull
fiadds
mov
idiv
aaa
lock
out
add
mov
shl
xchg
stos
adc
jecxz
iret
mov
add
cld
aas
adc
jnp
jl
test
jecxz
adc
add
dec
xchg
push
clc
mov
push
loopne
idiv
pop
adc
mov
fists
adc
sub
and
cmc
test
sahf
sbb
je
add
out
xor
sbb
stc
std
lret
ds
push
xchg
and
pop
sub
idiv
aad
inc
call
dec
xorl
push
add
ds
adc
jl
mov
stc
stc
insb
ret
xor
mov
leave
mov
rcrl
out
pop
adc
stc
test
sub
dec
and
insl
sub
push
and
adc
cli
and
push
xchg
aaa
loope
rcrl
insl
aaa
cs
test
sbb
addb
add
xchg
xor
jmp
in
adc
hlt
adc
icebp
cmpsl
and
inc
push
sbb
es
sbb
test
pop
testb
aam
and
cmp
call
out
test
add
and
push
out
push
push
outsb
cmpsl
mov
out
cmp
add
fimuls
cli
sub
sti
cli
icebp
sahf
out
aas
add
mov
dec
pop
mov
mov
jg
sbb
pop
leave
mov
xor
in
cld
inc
jmp
dec
lret
imull
inc
jmp
inc
or
aas
jae
fwait
out
dec
lret
out
adc
mov
mov
mov
movsl
jg
jmp
gs
mov
std
inc
cmc
mov
pop
xlat
icebp
push
ljmp
mov
and
shlb
push
cli
mov
hlt
xor
push
jle
mov
lret
adc
push
push
add
add
repnz
out
sbb
cmp
adc
repz
dec
mov
dec
push
adc
mov
fwait
mov
imul
ret
mov
cwtl
jmp
movsb
or
inc
or
incl
add
jno
cmc
insb
bound
in
push
jae
mov
pop
push
sbb
adc
adc
add
std
sub
xor
add
or
stc
pop
lock
adc
lock
insb
inc
addr16
int3
sbb
cmp
sti
pop
roll
xchg
add
jle
xor
into
pop
pop
out
jb
testb
fcmovb
repnz
sub
mov
sbb
adc
push
addl
stc
add
adc
jno
or
or
pop
add
adc
ds
stc
pop
outsb
stos
sub
xor
add
push
dec
push
add
lock
add
push
lds
adc
cld
aad
inc
fmuls
stc
fisttpll
or
xchg
std
pop
test
js
aad
addr16
cmp
data16
ljmp
add
call
cs
or
es
dec
lea
or
incl
sub
lods
jp
or
test
gs
jge
pop
sti
fwait
add
cli
fwait
add
cli
std
incl
or
call
test
sub
inc
test
xor
xchg
mov
inc
pop
add
unpcklps
out
mov
jmp
lock
add
mov
cmpl
addr16
mov
sti
mov
mov
std
lcall
nop
aam
lods
mov
xchg
ja
mov
jne
jnp
jecxz
add
fs
jae
or
imul
call
jmp
xchg
and
xlat
or
lock
sbb
mov
repnz
sbb
xor
push
push
cmc
lret
adc
pop
sub
add
aam
scas
push
frstor
sbb
cltd
cmpsl
cwtl
out
jne
int3
sbb
pop
in
sbb
pushl
in
add
pop
adc
pop
jmp
cmpsl
inc
loop
add
push
dec
test
mov
jae
test
cli
addr16
jno
sbb
jge
outsb
clc
mov
addr16
cmp
pushf
add
sbb
push
sub
outsl
clc
mov
dec
ljmp
inc
idiv
push
mull
jmp
cmp
icebp
out
ss
pop
xchg
cwtl
mov
mov
call
add
cmp
cmpsb
mov
dec
call
call
xchg
sbb
push
add
sbb
mov
dec
xchg
idiv
mov
sti
lcall
and
mov
sti
lcall
sti
or
sbb
mov
and
adc
add
test
lea
cld
add
push
pop
idiv
xchg
mov
dec
call
and
pushl
int3
mov
mov
adc
sti
std
fisttpl
std
push
arpl
and
cli
cmpb
jno
pop
inc
mov
test
pop
std
xor
mov
dec
notb
and
xchg
add
incl
sarl
repz
xor
dec
pop
icebp
lea
mov
or
xchg
or
add
lods
mov
lods
adc
in
inc
sti
xchg
daa
xchg
adc
dec
imul
or
mov
push
in
mov
std
pop
sbb
data16
add
mov
add
movsb
lcall
aam
lret
pop
mov
sbb
fistpl
rcll
mov
push
out
add
out
jmp
mov
xorb
push
clc
imul
add
mov
or
jno
pop
vmovmskps
icebp
ljmp
gs
sub
mov
lcall
fsubrl
sbb
mov
adcl
stc
mov
pop
out
xor
out
stc
push
test
adc
add
adc
test
test
je
and
ds
in
stc
aaa
clc
inc
ja
cmp
push
pop
inc
stos
sti
ljmp
jae
push
jb
push
shr
cwtl
inc
jmp
fcomps
idiv
and
and
sub
out
inc
add
add
mov
lcall
dec
mov
std
push
ja
xchg
out
push
push
mov
xchg
fiadds
xor
inc
inc
repnz
mov
ljmp
mov
addr16
and
push
cmp
inc
sub
jae
inc
sbb
clc
mov
mov
call
orl
or
add
jnp
scas
xchg
cmp
lret
push
xlat
mov
mov
add
push
pop
popa
lea
fldcw
sub
je
mov
push
hlt
dec
mov
add
imul
lea
jnp
addl
add
add
jbe
call
scas
fldcw
aam
mov
shrl
cli
sbb
sahf
mov
push
fsub
mov
es
in
cmpsb
out
cli
repz
ret
out
push
xchg
sbb
pop
cld
outsl
jb
call
jns
repnz
pop
mov
pop
popf
sub
cmc
mov
shr
fidivrl
jmp
add
adc
jbe
das
xlat
mov
inc
lret
out
arpl
daa
pop
cld
filds
jmp
mov
fists
inc
jge
stos
sbb
call
pop
or
and
hlt
adc
out
imul
pop
xchg
data16
dec
and
add
hlt
cmc
out
sbb
or
stc
xchg
in
lds
aam
jmp
cwtl
out
pop
subb
pop
cld
push
and
jmp
addr16
sbb
call
mov
stc
hlt
mov
inc
jmp
movsl
xor
add
outsl
add
pop
xchg
data16
add
aad
out
pop
and
out
xor
stc
bound
test
pop
cmpsb
dec
add
push
push
push
or
cmp
inc
xlat
cmp
je
imul
incl
jne
inc
add
mov
lods
testb
xchg
idiv
push
add
repz
inc
add
mov
jmp
sarl
dec
imul
clc
jnp
divb
add
bnd
les
call
jbe
insl
or
adc
in
ja
std
mov
add
in
mov
sbb
jp
add
aad
adc
lea
nop
or
std
cli
add
lock
add
aas
pop
pop
add
push
jg
jg
adc
mov
jae
stos
stos
push
add
ja
lea
lahf
xchg
and
mov
idivb
dec
mov
jmp
jae
push
jp
sbb
mov
inc
cmp
xchg
aas
scas
mov
ljmp
aam
shlb
inc
lret
ds
add
icebp
cmp
inc
ja
mov
mov
sarl
lods
imul
daa
add
data16
xor
test
cmp
in
prefetcht1
lods
add
sub
adc
adc
lods
imul
lret
sbb
jp
add
inc
ljmp
xchg
les
test
jne
push
jb
pop
sub
fimull
data16
cmp
xor
cmp
push
add
mov
out
test
bound
pop
adc
sbb
stc
jle
and
sub
cltd
clc
mov
push
xor
fdivr
pusha
ret
ds
shrl
cmp
xor
das
pop
cwtl
rcrb
fldl
adcb
mov
pop
xor
imul
inc
sbb
sub
push
xor
add
cmp
divb
lods
jne
pop
mov
or
jl
repnz
fisttpll
std
arpl
pop
add
stos
mov
cli
out
pop
mov
add
cmp
add
ja
inc
lods
mov
cli
outsb
push
fwait
jo
pop
add
mov
fcoml
mov
sti
aas
add
mov
inc
add
movsb
lods
icebp
lods
std
pushf
je
inc
add
sbb
dec
mov
sar
add
xor
inc
add
adc
mov
fldl
sahf
mov
hlt
into
inc
add
add
add
inc
jmp
nop
stc
sub
gs
adc
dec
and
inc
jmp
rclb
sub
gs
adc
in
jmp
xor
stos
std
pushf
aam
inc
add
mov
adc
mov
jno
or
mov
sbb
adc
and
mov
mov
pop
add
adc
mov
mov
mov
push
inc
adc
ret
loopne
out
mov
daa
add
ret
addl
pop
inc
adc
jecxz
push
out
push
or
add
jecxz
inc
add
dec
pop
inc
adc
add
pop
cmpsl
add
inc
inc
add
iret
pop
les
xchg
addr16
add
cmpsb
inc
adc
pop
jg
or
adc
add
hlt
cmp
test
enter
adc
cmpsl
hlt
cmp
sub
jg
int3
adc
mov
sub
add
lahf
jmp
test
cmp
sub
xorl
dec
shl
jmp
pop
adc
dec
add
push
add
insl
mov
fwait
lock
add
into
pop
fiadds
mov
fwait
adc
push
add
mov
mov
fwait
xor
add
jle
fiadds
mov
adc
sbb
mov
mov
inc
in
mov
adc
jnp
add
add
fiadds
mov
adc
mov
mov
jle
fiadds
in
movsb
adc
lods
std
pushf
mov
add
mov
nop
hlt
lods
std
pushf
xor
add
dec
fucom
in
movsb
fcoms
lods
std
gs
xchg
pop
ffree
in
sahf
lock
add
pop
sar
inc
sbb
cmp
inc
xor
rclb
mov
popf
add
aas
add
movsl
insb
dec
jbe
add
addr16
cmp
pop
cmp
dec
and
inc
jmp
shrb
ret
xchg
inc
adc
mov
jge
mov
inc
add
cmpsl
in
adc
lahf
pusha
mov
js,pt
fst
dec
gs
out
inc
fst
cmp
imull
add
fnstsw
xlat
or
inc
add
je
paddusw
mov
cmp
push
mov
mov
pusha
inc
hlt
mov
push
sub
aaa
lds
call
add
mov
sbb
adc
push
jne
pop
lahf
push
add
pop
loop
or
shr
adc
add
popf
add
mov
add
pop
xchg
rclb
cmovo
cmp
adc
insb
cli
incb
add
adc
pop
divb
push
add
inc
or
adc
push
add
or
test
push
mov
push
sub
adc
mov
push
shlb
jns
in
and
add
clc
pop
xlat
inc
lea
call
in
cld
lea
ud2
inc
insl
xchg
shlb
cmp
adc
push
call
lea
sbb
je
imul
loopne
call
test
mov
in
push
push
incb
stos
pop
shlb
in
mov
jns
xor
imul
dec
stc
adc
push
inc
add
or
inc
pop
dec
jge
loopne
stc
icebp
les
inc
add
mov
call
lret
jp
mov
insb
jecxz
sti
push
loope
shrb
add
idivl
xchg
xlat
testl
sbb
and
add
push
dec
in
mov
test
pusha
ds
lods
cmpl
xchg
in
imul
push
xor
push
mov
in
in
add
cmp
add
push
sbb
iret
push
shll
cmp
stc
and
in
insl
pop
mov
clc
pop
fldenv
mov
shll
lea
inc
das
out
add
aam
add
call
icebp
jae
out
add
jmp
jae
and
ja
sbb
push
add
push
cmp
into
push
add
popl
dec
dec
inc
jmp
mov
fldt
out
xchg
rorl
pop
adc
test
rorb
xor
ds
jno
push
add
mov
imul
adc
nop
jmp
add
push
popf
cmp
or
jno
sahf
sub
insb
aad
adc
aaa
inc
cwtl
loopne
clc
push
cld
jb
add
sub
xchg
je
loop
ltr
sbb
pop
rolb
mov
aam
pop
sbb
aam
pop
add
divps
jl
pop
or
scas
fnstenv
sub
pop
enter
addr16
test
push
shl
test
insb
adc
jmp
push
rorb
rolb
ljmp
insl
cld
jp
divl
fimuls
div
cli
mov
addb
adc
pop
mov
xor
orb
cmp
add
imul
add
dec
push
fildll
lret
mov
test
loope
push
in
std
mov
cld
imul
data16
push
jmp
repnz
add
cmp
dec
repnz
arpl
add
lock
rcrb
jae
push
icebp
push
add
add
repz
adc
or
cmpsl
lret
ret
dec
sub
lret
aam
or
aam
pop
xor
test
jg
pusha
es
aaa
add
sub
inc
adc
les
es
pop
add
add
faddl
inc
dec
leave
sbb
push
orl
inc
outsl
add
dec
fs
xlat
xor
xlat
or
sbb
and
jmp
gs
outsl
add
hlt
psubw
push
mov
mov
add
andb
iret
adc
jmp
clc
mov
cmp
add
and
nop
shl
mov
push
je
movsb
mov
cmpl
adc
cmpsb
add
cwtl
roll
dec
adc
jmp
js
sarl
mov
sbbb
cmp
add
pop
jg
cmp
cld
push
inc
repnz
push
fiaddl
mov
outsl
cmp
imul
inc
add
insb
mov
fcmovb
or
mov
mov
clc
lret
call
adc
jne
in
dec
call
cmp
push
sub
push
pop
sbb
jp
jge
mov
dec
clc
jbe
push
cmp
mov
jnp
popa
dec
adc
pop
add
jne
insl
or
call
inc
scas
fisttpll
js
push
add
ja
sub
in
adc
cmp
movl
jecxz
cld
sub
jl
xchg
push
dec
pop
xchg
push
lods
add
enter
inc
jns
cwtl
in
push
jl
mov
push
jl
or
lahf
or
pop
clc
cld
jmp
jge
enter
cs
les
subb
xor
dec
sti
jns
cmp
ja
cwtl
mov
xor
outsl
adc
cmp
movsl
loop
pop
sub
sub
lea
inc
push
mov
fsubr
rcll
lret
jmp
and
xor
adc
jge
push
pop
rolb
jle
imul
test
jmp
jnp
add
sbb
imul
rolb
jp
jecxz
dec
jmp
mov
mov
loop
and
jae
adc
push
sbb
dec
hlt
jnp
mov
rcl
fs
rorb
jns
xchg
lods
xlat
movsl
ja
nop
lock
cmp
test
shl
mov
mov
push
test
add
int3
insb
add
mov
les
lahf
jo
ljmp
xor
mov
fxch
lods
mov
arpl
or
int3
mov
call
ficompl
push
add
sub
popf
adc
les
lods
in
ret
imul
mov
and
test
insb
testb
cmpsb
insb
adc
jge
jns
add
sbb
inc
and
xor
popf
icebp
xchg
add
adc
pushl
popf
sarb
adc
lock
push
and
push
push
insl
add
mov
pushf
sarb
dec
inc
cltd
ss
jecxz
je
fidivrs
sub
mov
xor
push
cmp
cmc
inc
push
call
mov
clc
xchg
inc
inc
les
or
inc
shl
adc
ljmp
aaa
shl
sti
mov
stc
sbb
mov
stc
fistl
add
add
cmp
addr16
jge
ret
cmp
decl
mov
test
mov
push
xchg
mov
add
mov
out
pop
lcall
adc
adc
push
or
incb
mov
out
add
pop
xor
into
jl
or
adc
inc
cld
arpl
iret
cmp
sub
or
out
fucom
data16
rorl
jg
lods
scas
in
mov
int
add
stc
push
out
les
jg
je
in
add
and
sub
xchg
cltd
addl
nop
mov
dec
repz
test
cli
xchg
inc
xor
xchg
inc
push
sub
fdivr
insb
jae
cmc
push
xor
lods
and
cli
je
lret
adc
dec
lret
jae
xor
adc
popa
push
lret
xchg
mov
add
arpl
cmpsb
xor
cmp
dec
cmp
imul
add
pop
addl
std
loope
insl
adc
test
adc
add
add
insl
add
cmp
adc
add
push
clc
push
mov
or
test
iret
jle
sbb
les
ret
add
xchg
addb
pop
test
sub
jo
vorps
lret
je
dec
jge
mov
mov
push
xchg
mov
shlb
andl
xor
and
mov
sar
jbe
xchg
inc
in
aam
jge
add
dec
mov
lea
xchg
sbb
stc
cmp
jg
add
and
inc
sub
add
lret
je
in
mov
aas
hlt
or
ret
add
repz
out
repz
adc
sub
jmp
out
push
aad
adc
in
cmp
out
adc
add
mov
popf
lret
jl
mov
xor
call
addl
jmp
insb
inc
add
daa
jo
cltd
fs
pop
lret
in
xchg
out
or
subb
aam
aas
sbb
lret
inc
aas
stc
push
jg
ja
sbb
inc
mov
outsl
add
movsb
ljmp
mov
mov
ss
xor
leave
ret
sahf
mov
jnp
lret
stc
shll
cmpsb
add
add
sub
and
and
insb
add
jbe
fs
sbb
xor
lods
and
jecxz
int3
adc
and
mov
lods
mov
pop
add
icebp
push
sub
int
fs
sbb
lock
bound
adc
out
fmull
add
adc
in
arpl
mov
popf
into
add
mov
idiv
mov
jl
inc
and
dec
lds
lea
fcomip
pushl
dec
push
and
ret
add
test
pop
cmp
je
fidivrs
data16
test
gs
fsubs
incl
gs
test
lret
mov
daa
iret
insl
or
aam
mov
test
repnz
inc
jge
pop
mov
divl
pop
mov
cli
fmuls
inc
add
movsb
rolb
add
into
jo
xchg
aad
inc
add
hlt
int3
stos
outsb
ja
add
loope
lods
dec
fdivr
xchg
push
loope
lea
out
cli
jae
faddl
inc
jmp
aaa
mov
mov
js
push
dec
loope
aam
dec
stc
push
ret
les
inc
je
sub
and
push
xchg
loop
ret
fmull
je
xchg
arpl
xor
insb
jmp
lret
lcall
xchg
shr
ret
test
popf
insb
jmp
lcall
arpl
add
add
addr16
adc
add
mov
js
sbb
pop
arpl
mov
xor
sub
cmp
lret
aam
adc
and
out
mov
add
jnp
or
sub
out
fs
orb
imul
mov
stc
out
cltd
xor
lret
stc
cmp
push
mov
jmp
mov
adc
stc
push
and
cmpsl
xor
int3
mov
inc
jmp
popa
and
adc
je
repz
pop
popa
pushf
sbb
roll
sub
lods
push
xchg
aam
ret
mov
or
add
pop
inc
pushl
jge
add
addl
inc
or
pusha
dec
call
in
aaa
or
cs
jbe
sub
test
and
es
outsb
jl
int3
imul
es
insl
adc
mov
sbb
rorb
add
dec
mov
jl
pop
inc
sub
mov
scas
inc
je
xchg
negl
jno
jnp
inc
xor
sub
je
lods
scas
xchg
add
std
jae
jne
cli
add
in
pop
out
clc
jle
cmc
add
repnz
xor
inc
and
enter
add
xor
mov
sbb
iret
xchg
test
rorl
stc
xor
inc
sub
inc
mov
dec
mov
push
add
ss
cmp
jae
push
jg
and
les
ss
jnp
test
adc
push
sub
les
ret
cltd
ret
ja
mov
pop
out
add
mov
inc
mov
out
out
ret
ds
movsl
pop
add
stos
iret
ror
dec
add
mov
fs
sbb
ret
dec
xlat
dec
add
imul
pushf
loopne
add
sbb
mov
inc
pcmpgtd
jae
fimull
shrb
call
mov
add
fst
data16
inc
jmp
sahf
repnz
popa
jecxz
add
add
fimuls
or
pop
mov
xor
ret
ror
pushf
jp
dec
lcall
pop
cld
rorb
xchg
stc
bound
rolb
mov
jb
lock
leave
cli
scas
movsl
imul
loop
xor
cmp
sbb
jo
pop
jmp
adcl
push
aam
cmc
cs
pop
insb
hlt
arpl
push
ret
out
imul
fstl
mov
loope
push
push
adc
mov
pushf
cmp
outsb
lods
cli
cmp
push
sub
scas
cli
xor
imul
andb
mulps
push
je
push
insb
mov
push
cmp
in
jmp
ljmp
mov
adc
lea
jnp
outsb
insw
mov
inc
sbbl
inc
pop
inc
jp
mov
movl
dec
or
ret
sahf
xchg
aaa
xlat
je
xor
xor
mov
mov
mov
sahf
inc
sub
jg
adc
or
bound
jg
dec
test
popa
xchg
cmc
fmuls
jg
cwtl
adc
lds
xchg
or
les
sub
je
or
adc
das
test
add
stos
pop
adc
mov
add
in
or
adc
add
mov
in
push
call
push
adc
or
out
dec
lea
notb
out
cmpl
push
ret
std
roll
cmp
in
add
push
int3
icebp
les
add
adc
cmp
data16
or
push
ret
push
adc
cmp
test
scas
dec
pop
popl
jb
sub
shrl
clc
inc
pop
adc
ljmp
jge
add
jb
stos
nopl
mov
rcr
insb
add
add
mov
pop
bound
xchg
imul
pop
or
jmp
or
rcrb
test
daa
xor
xor
xchg
push
icebp
add
in
hlt
int
jmp
cmp
add
inc
cmpl
lret
adc
jmp
xchg
jb
pop
gs
mov
adcb
ds
andl
jp
ljmp
mov
sti
rolb
sub
xchg
dec
push
xchg
test
push
fstl
orl
andl
orb
lret
filds
add
xchg
ds
fists
pop
incb
inc
mov
xlat
jle
xchg
adc
add
std
incl
inc
dec
pop
addl
xchg
ljmp
inc
xor
sub
jp
call
jg
imul
popf
add
stc
jg
adc
int
in
pop
adc
mov
test
jo
test
mov
xchg
js
inc
inc
cmp
xchg
divb
add
outsb
xor
pop
in
dec
add
mov
ss
jge
rcr
push
xor
pop
xchg
mov
pmuludq
arpl
mov
out
add
pop
loope
fwait
enter
enter
enter
mov
addr16
mov
lcall
mov
loopne
add
xchg
cmpl
int3
add
mov
jl
add
imul
addb
or
lret
xchg
pop
ds
outsb
xor
cmp
shll
or
or
fld
sbb
xchg
dec
inc
lret
push
sub
pop
xchg
pcmpeqd
daa
sbb
test
xchg
dec
dec
cmc
dec
bound
daa
bound
push
subl
sbb
cmpsl
mov
lret
jg
add
shlb
aaa
callw
adc
push
or
cmpsl
addr16
jp
add
jle
or
dec
jns
insb
inc
icebp
dec
jo
ss
jmp
cmp
adc
pop
mov
stc
push
popf
mov
add
adc
add
outsl
push
add
scas
shlb
adc
add
inc
mov
lea
adc
add
test
stc
ljmp
adc
mov
or
add
adc
mov
aad
pop
repnz
add
inc
jle
in
add
lods
pop
shrl
outsb
push
andb
jg
arpl
js
es
adc
test
sbb
sti
add
xor
lock
leave
push
mov
inc
aaa
dec
lock
shrb
imul
and
xor
inc
or
ds
stos
xor
push
sti
pop
aas
insb
addr16
test
pop
xchg
jae
dec
fs
incl
std
incl
aas
insb
jg
cmp
popa
dec
mov
stos
add
out
add
jns
mov
mov
pop
jns
xchg
add
ds
stos
cmp
daa
pop
ds
jecxz
addl
out
and
outsb
outsb
fs
out
addl
popa
movsb
notb
out
push
aam
add
mov
add
outsb
xchg
adc
adc
mov
jae
add
add
mov
incl
xchg
stc
out
cmp
sti
ficoml
js
mov
ljmp
push
cmp
xor
dec
add
jle
insb
bound
cmp
fsts
mov
jge
push
mov
insb
mov
stc
pop
repnz
sub
jmp
xchg
call
add
xchg
and
jmp
cmp
dec
add
adc
jmp
and
push
rcll
jae
cs
lods
adc
andl
push
fldenv
addl
lret
lods
add
xchg
pop
push
lea
push
ret
out
popf
mov
je
mov
lock
add
sub
sub
decl
aad
inc
add
sbb
dec
pop
mov
out
fimull
stc
push
jno
idiv
sbb
push
mov
ss
push
enter
int3
enter
rclb
jae
notb
test
jecxz
mov
je
pop
add
jl
or
jnp
stos
add
sbb
add
xor
xor
mov
mov
inc
sub
or
and
inc
cmp
xor
mov
dec
rorb
test
cmpsl
mov
orl
jo
mov
orl
mov
ds
pop
sub
sub
jo
dec
lahf
and
push
xchg
mov
bound
jge
cmp
and
cmpsl
pop
lret
test
out
xor
mov
or
out
inc
sub
cmp
enterw
arpl
in
push
push
or
add
aas
and
imul
divl
jp
push
js
shlb
stc
jmp
jle
call
and
and
inc
sub
inc
add
test
add
or
flds
jmp
jmp
mov
pop
out
add
sub
xchg
mov
jmp
mov
adcl
enter
sub
mov
cltd
sub
add
adc
add
gs
xor
jle
or
lods
adc
push
adc
mov
fsub
pop
mov
jp
pop
pop
add
inc
jle
movsb
adc
push
add
sbb
add
add
dec
je
xlat
testb
xor
pop
jecxz
mov
xor
xlat
pop
add
pop
add
cs
pop
jnp
fsubrl
adc
out
xor
dec
stos
cwtl
add
fisubrs
xchg
add
cmp
ss
bound
inc
jg
std
incl
aas
js
mov
pop
add
ds
or
inc
insb
ret
add
mov
add
add
add
call
pop
test
ret
outsl
mov
sbb
mov
ss
adc
adc
mov
rcrb
add
add
dec
mov
dec
les
popl
std
xchg
jbe
add
pop
dec
push
pop
out
rolb
scas
pop
andl
inc
jge
inc
pop
jbe
push
out
sbbl
push
movsb
push
adc
mov
or
add
mov
out
add
imul
in
ljmp
add
jmp
jecxz
loope
cltd
inc
adc
outsl
in
add
roll
adc
push
lahf
ffreep
inc
jmp
outsb
ljmp
mov
cwtl
or
and
scas
xor
ja
pop
mov
out
lret
inc
and
dec
push
sub
ror
stc
into
xchg
push
pop
and
inc
icebp
std
push
lods
cltd
mov
ja
add
jmp
or
add
mov
push
add
xchg
and
stc
lcall
mov
data16
jle
sub
cwtl
xchg
add
sub
insb
imul
std
mov
outsb
inc
or
fs
mov
fstl
insl
cmp
pop
pop
decl
adc
leave
out
or
sub
pop
add
add
fcoml
mov
in
cmp
add
cmp
test
xor
pop
mov
jns
mov
add
add
into
lods
mov
mov
push
or
push
mov
aad
mov
xlat
js
xchg
xrelease
aad
testl
andl
and
mov
int3
shlb
mov
out
jbe
paddb
insb
or
adc
aas
and
dec
sbb
adc
clc
andb
jp
or
or
mov
push
xchg
test
addl
mov
jmp
add
mov
mov
jo
clc
lcall
xchg
out
and
adc
add
scas
pop
mov
add
add
out
jmp
out
lds
int3
int
mov
cs
and
lret
mov
adc
mov
fsubrs
jg
lahf
sbb
loopne
mov
and
ljmp
cmp
xchg
or
push
fnstcw
dec
stc
xchg
dec
dec
mov
xchg
lods
pop
stos
add
int3
sbb
mov
sbb
xor
aam
test
sub
push
bound
adc
in
jp
mov
daa
adc
std
imul
push
jge
shrb
add
sbb
in
in
inc
mov
mov
imul
fs
pop
sbb
aaa
lock
xlat
nop
aas
add
sub
sbb
test
les
aas
xor
pop
push
add
sbb
push
or
inc
and
adc
sti
push
pop
outsl
scas
stc
mov
incl
std
mov
int3
icebp
int3
int3
pop
sub
mov
dec
xor
sbb
add
sbb
jne
in
js
push
inc
or
pop
pop
mov
sbb
and
stos
push
mov
inc
icebp
mov
inc
sub
pop
int3
out
mov
rorb
cmpsb
int3
jae
sbb
mov
mov
sub
xor
mov
daa
xor
mov
lods
orl
test
add
call
rorb
jno
decl
mov
ret
push
pop
std
repz
mov
aad
mov
add
stc
inc
dec
and
cmp
pop
add
std
rolb
inc
mov
in
add
cmpsb
mov
xlat
cmp
mov
or
cmp
jge
push
jl
out
pop
xor
insb
call
jecxz
pop
mov
leave
cmp
jle
push
fisubrs
insb
adc
add
outsb
fidivrs
push
decl
add
out
add
inc
jp
in
inc
and
idivl
push
pop
cmp
fwait
mov
xor
xor
push
cmp
add
cld
jl
mov
inc
adc
add
jmp
movsl
dec
mov
and
loope
aas
add
aam
xor
aad
inc
xor
out
fmull
add
inc
dec
jmp
xchg
or
inc
and
pop
test
rclb
adc
jl
cld
lea
and
pop
in
mov
scas
neg
inc
fnstenv
add
lods
adc
jae
adc
mov
lock
ror
int3
shrb
in
mov
cmpsl
jl
add
jl
push
mov
pop
adc
psllw
js
pop
popf
jge
dec
adc
addl
or
xchg
xchg
adc
inc
inc
and
dec
or
mov
dec
adc
add
data16
aaa
mov
sub
push
push
push
cmp
add
int
xor
jl
movsb
idivb
fadds
add
std
incl
sbb
jmp
icebp
add
sti
add
test
add
mov
add
cmp
ljmp
andb
decb
enter
in
xchg
xchg
and
xlat
xchg
cmp
push
mov
js
add
or
sar
add
repz
add
jbe
or
decl
addl
xor
stos
pushf
add
pushf
lret
jmp
loope
mov
add
cmp
fwait
movsb
outsb
cmp
int3
sub
mov
std
inc
push
test
lds
call
add
fistpll
rolb
mov
add
add
push
bnd
xchg
inc
hlt
fwait
test
lods
sti
cmpb
mov
inc
adc
int
adc
jmp
mov
ret
or
sbb
iret
xchg
rclb
stc
jmp
movsl
cmp
addl
push
std
outsl
repnz
jmp
jp
clc
test
or
lcall
xchg
or
std
sub
push
movsl
out
clc
adc
sarb
es
fstpl
add
or
sub
hlt
jne
or
adc
pop
and
stc
rolb
jge
ret
adc
add
adc
fldl
cld
mov
lret
loopne
outsb
into
or
pop
adc
nop
push
adc
inc
adc
popf
pop
mov
je
xchg
xchg
cmp
and
pop
add
adc
add
testb
popf
ljmp
out
ja
mov
aas
adc
add
jmp
xlat
jecxz
pop
sbb
in
cmpsb
dec
sbb
outsl
sahf
dec
sub
aas
sbb
fsubrs
sti
stos
std
in
cs
jnp
stos
push
test
std
incl
add
stc
cmp
mov
xlat
or
ret
push
lods
scas
aad
stos
lret
xor
jp
add
add
hlt
stos
add
add
out
xchg
mov
jg
mov
adc
sbb
add
inc
in
jl
test
mov
mov
ss
sbb
sti
stos
shrb
inc
cld
pop
fsubrl
adc
pop
retw
add
adc
adc
fisttpll
into
les
inc
push
mov
pushf
out
inc
mov
stos
jecxz
shll
or
out
orl
cmp
stos
fisttps
adc
in
add
or
in
mov
outsl
pop
pop
mov
sbb
inc
jg
add
adc
mov
fwait
jo
or
popf
hlt
xor
adc
jmp
or
aad
push
cli
stc
cmp
jl
mov
or
xor
mov
ds
or
mov
mov
outsb
das
mov
jo
push
subl
mov
inc
flds
sahf
stc
jmp
push
pop
in
sub
mov
pop
aam
inc
sbb
stos
dec
and
adc
adc
xchg
inc
add
sub
sub
inc
add
add
sbb
adc
mul
pop
add
pop
add
push
inc
mov
fwait
mov
mov
xchg
imul
adc
je
mov
and
aam
add
mov
test
sbb
out
outsb
add
scas
mov
or
dec
in
std
outsl
loop
insl
adc
clc
or
add
adc
push
lods
std
jae
and
jg
mov
push
mov
bound
lods
xchg
and
jo
daa
inc
dec
dec
sbb
push
push
jle
inc
stos
or
lret
outsb
cmp
rorb
std
incl
inc
adc
std
sti
addb
stos
jle
cwtl
stos
or
push
inc
add
jae
adc
test
and
jge
cmpsl
addl
int3
into
xchg
adc
lret
rolb
dec
fcomps
in
or
push
pop
mov
jl
in
mov
push
sbb
in
cmpsl
add
out
mov
cmpsl
push
inc
add
xchg
mov
add
add
mov
mov
pushf
pop
inc
cld
inc
xchg
push
fcoml
lods
add
mov
mov
inc
test
inc
mov
pop
subl
pushf
loop
push
push
out
test
xchg
cmpsl
aaa
add
adc
add
daa
add
adc
les
pop
adc
es
adc
jmp
pop
adc
push
lahf
add
mov
jmp
jmp
jmp
xchg
movups
jg
hlt
jb
xrelease
nop
dec
add
mov
push
xor
bound
rolb
adcb
push
pushf
jge
imul
jl
hlt
ret
outsb
ss
push
adc
add
nop
dec
aad
inc
clc
sti
dec
cmp
stos
push
add
add
xor
push
cld
add
mov
and
push
mov
and
in
mov
lcall
pop
add
pop
push
adc
out
push
add
notb
scas
scas
xchg
outsb
add
fstl
pop
mov
pop
inc
cld
es
lret
loopne
xchg
mov
add
xchg
notb
pop
mov
xor
xchg
xchg
repz
bound
fildl
lods
test
or
shl
mov
imul
cwtl
mov
push
xor
lods
sub
sahf
lods
movsl
mov
lods
std
test
movsb
mov
xor
sbb
repz
std
incl
add
add
stos
cmp
mov
std
or
mov
sarb
test
icebp
add
push
add
fadds
es
in
pushf
adc
stos
add
jg
cmpsb
ret
insb
or
mov
add
out
addl
les
in
fcompl
mov
out
add
adc
add
adc
add
lea
adcl
inc
in
dec
cld
shr
or
adc
test
in
or
xchg
mov
push
or
add
test
lea
test
adc
lods
loope
sub
cli
adc
add
adc
out
add
rolb
adc
push
cmp
add
jmp
dec
cld
bound
aad
jo
fwait
std
rolb
lds
cbtw
jle
add
std
cmc
mov
and
mov
mov
sub
pop
sbb
ljmp
roll
stc
sbbb
out
les
jae
mov
imul
lret
add
addr16
mov
nop
out
push
rolb
insl
mov
and
dec
add
jb
ljmp
jecxz
fisubrs
call
mov
jnp
and
mulb
push
mov
jge
adc
test
sub
call
jo
andl
adcl
mov
fiadds
push
lret
add
rcrl
inc
add
sarl
sub
add
stos
jge
mov
mov
incl
sub
add
mov
decl
mov
adc
dec
pop
adc
jb
xor
xchg
mov
jb
and
xchg
js
sar
jg
add
xchg
adc
push
clc
jg
stos
dec
mov
stos
ret
std
test
add
in
adc
cld
sbb
inc
xchg
sub
out
mov
incl
out
imul
adc
test
fidivrl
or
add
cwtl
pop
lds
or
dec
jl
mov
or
into
fcmovbe
call
pop
roll
outsb
leave
mov
add
test
or
pop
push
adc
pusha
inc
pusha
add
pop
sub
fwait
dec
mov
dec
iret
add
out
add
adc
sahf
out
fimuls
hlt
inc
in
mov
jb
outsb
lret
test
cld
jmp
pop
adc
aas
add
fwait
dec
in
mov
int
lds
ret
inc
clc
ljmp
test
sub
mov
adc
add
bound
push
jo
lock
ljmp
outsb
cmp
fldl
xor
mov
add
cld
or
psubusb
xor
xor
inc
add
mov
lahf
mov
xchg
xchg
stc
jmp
fsubrs
lods
sahf
aas
dec
adc
dec
lea
dec
push
sub
ljmp
bound
loopne
outsl
push
pop
call
mov
mov
cmp
test
fisubs
sub
add
sbb
ficomps
ljmp
add
push
add
add
mov
sbb
add
jle
cmp
call
jge
mov
ret
jl
inc
add
orb
mov
ja
stos
mov
test
dec
movsb
test
inc
jge
test
fmuls
incl
movsb
test
dec
jnp
insb
inc
loope
jg
test
or
mov
rcl
jp
inc
push
or
jge
sub
xor
inc
xchg
cmc
or
shl
out
or
pushf
sbb
mov
xchg
cmp
sti
adc
cmp
sub
fcompl
jns
xchg
daa
add
jle
out
add
data16
adc
xchg
out
std
leave
in
aas
nop
pop
rcl
pop
inc
nop
gs
cld
adc
add
retw
sbbb
mov
dec
add
mov
mov
sub
js
add
ljmp
xchg
movl
and
in
addr16
add
and
aas
ret
cwtl
dec
lea
rorl
fcmove
xchg
stc
push
nop
add
xorl
pop
sbb
pop
loopne
sti
outsl
ds
sbb
inc
sub
pop
add
mov
adc
iret
jge
std
push
shr
aam
sub
mov
rol
pushf
aas
out
jo
insl
push
orl
out
adc
jg
mov
mov
sub
pushf
aas
out
in
add
push
outsb
scas
add
mov
subl
jecxz
movsl
mov
mov
cmp
add
adc
mov
sti
fsubl
bound
xor
lcall
jge
adc
jecxz
sahf
push
inc
add
shll
cwtl
pop
mov
dec
jo
and
jnp
inc
sbb
out
arpl
and
xor
mov
jnp
testl
add
std
incl
orl
add
cmp
jl
inc
or
dec
int
mov
dec
dec
lret
jl
dec
jl
mov
dec
add
dec
add
jle
or
inc
fmuls
daa
test
mov
mov
nop
lock
jge
dec
cmpl
add
add
jbe
call
mov
push
cmpsb
inc
add
jle
or
jo
dec
cwtl
cmpsl
incb
xchg
or
push
fwait
sbb
inc
push
add
loop
ja
out
lds
data16
push
aad
pop
xorps
rorl
movsb
sti
mov
jp,pt
test
add
outsb
inc
movsb
fwait
mov
and
ljmp
cmc
dec
ljmp
sbb
clc
cwtl
das
adc
in
push
jns
dec
pusha
push
pop
cltd
xlat
js
pop
enterw
idivb
dec
mov
ret
adc
jmp
pop
adc
xchg
out
or
bound
call
add
mov
adc
jmp
in
test
dec
rorl
or
test
add
je
fidivrs
push
xchg
xchg
stc
push
popl
fimuls
sbb
bound
call
std
shr
stc
jmp
adc
xchg
call
or
cmpsb
enter
scas
leave
mov
repz
mov
rcrb
jle
in
pop
add
add
jnp
mov
mov
pop
add
dec
or
in
je
roll
inc
hlt
fsubrl
enter
addl
cmp
push
sti
shlb
test
add
es
add
jns
add
or
jp
push
pop
jns
push
mov
jge
or
jnp
and
movl
jge
int3
in
aaa
in
mov
cmp
dec
pushf
or
cmc
xor
jg
test
or
outsl
rolb
cltd
xor
jb
enter
shl
out
sub
enter
jg
ret
out
jp
movl
adc
jl
iret
outsl
outsb
mov
mov
push
stos
add
adc
add
dec
jmp
add
pop
xor
push
push
stc
adc
stos
sbb
pop
out
add
enter
dec
inc
jo
pop
inc
cld
push
daa
or
push
cmpsl
add
sbb
add
cltd
mov
cmp
adc
add
add
js
xor
add
add
data16
movntq
or
xchg
bound
push
or
mov
shrb
pop
ds
mov
jmp
ja
sbb
pop
sarl
lcall
add
roll
jmp
pop
adc
cs
int3
call
sub
mov
mov
add
ret
add
add
sub
call
insb
fdivr
bound
loopne
int
cmp
add
adc
loopne
dec
push
mov
mov
add
out
mov
leave
mov
hlt
cmp
mov
mov
adc
mov
loope
xchg
inc
aam
mov
orl
out
ds
and
fstl
add
jge
inc
in
jo
shll
stos
adc
sbb
enter
addb
cmp
cmovae
shlb
and
add
jns
pop
jge
or
sbb
xor
jns
or
outsb
imul
mov
incl
inc
jge
int3
and
aaa
in
mov
xchg
les
push
cmp
std
inc
repnz
jno
xchg
ret
call
pop
cmp
or
loope
in
in
add
popl
or
imul
out
mov
in
adc
jge
jo
inc
sbb
pop
inc
cld
dec
cmpsl
or
cmpsl
add
arpl
in
add
pop
divl
xchg
testb
test
add
jmp
jmp
add
testb
push
add
bound
jl
mov
lret
cmp
push
xor
cltd
sbb
adc
add
inc
faddl
shrb
adc
mov
jmp
push
adc
insl
roll
ffreep
int3
addl
cmp
mov
scas
push
add
push
push
adc
faddl
adc
or
inc
pusha
jmp
and
ss
enter
test
lea
jge
aas
jo
push
test
sbb
cs
xchg
shl
sti
xorl
fmull
cmp
dec
fisttpll
inc
fdivl
or
es
orl
std
inc
add
cmp
mov
addl
or
cmp
insl
in
scas
das
inc
add
add
mov
add
inc
je
ljmp
jg
mov
add
sub
dec
lock
mov
add
xor
stc
fstl
xorl
xchg
fsubrl
sbb
out
and
add
jns
add
outsl
movsb
dec
mov
mov
fs
add
add
clc
pop
xor
ret
or
inc
add
or
mov
in
add
cld
dec
fbstp
dec
nop
jno
shrl
add
mov
push
aaa
clc
jge
cld
xchg
cmpb
mov
adc
in
es
cmp
mov
jnp
xlat
push
jae
lds
and
pop
jae
push
add
lds
fucomi
pop
or
fsubp
icebp
shl
scas
mov
pop
ljmp
or
adc
xchg
inc
hlt
xor
arpl
push
xor
out
add
add
loop
add
xchg
mov
and
jo
pop
jge
out
fldenv
inc
and
jp
pop
cs
sbb
roll
shr
adc
jmp
add
jnp
popa
gs
push
inc
out
bound
inc
icebp
or
jo
jne
bound
xchg
pop
lcall
xor
cmp
jmp
or
cmp
mov
adc
pop
adc
and
cmp
add
mov
orl
dec
or
shr
mov
dec
cld
push
rorb
mov
jnp
add
lea
jo
test
pop
inc
adc
test
push
mov
clc
sbb
sbb
fcomp
mov
mov
test
adc
add
push
mov
add
mov
pop
pop
or
mov
jae
add
inc
loopne
lret
xchg
inc
adc
insb
inc
sbb
push
or
jge
mov
xor
ljmp
jg
or
push
mov
std
in
add
jg
cmc
and
pushf
xor
cmp
scas
cmc
xchg
mov
xchg
inc
or
add
std
incl
cs
or
std
jg
or
sub
ljmp
cltd
stos
std
dec
cld
inc
sbb
insl
std
incl
pushf
std
push
rclb
and
jo
xor
jmp
roll
loope
outsl
adc
sbb
mov
xchg
mov
fistpl
aas
mov
rorl
dec
int3
fstpl
pushf
rorl
sahf
popf
jle
aas
mov
sar
cli
out
adc
jmp
adc
jmp
adc
in
sub
in
and
jmp
adc
ljmp
enter
or
lock
adc
loopne
add
sub
add
add
icebp
inc
add
jmp
add
fadds
lahf
aad
add
xchg
inc
add
flds
nop
rolb
sub
inc
add
add
roll
mov
inc
add
add
je
add
imul
xor
push
push
int3
pushf
mov
in
or
daa
add
rcrb
dec
add
adc
je
add
mov
sub
sahf
leave
sbbl
dec
add
push
das
lahf
rolb
rcll
add
arpl
add
ds
ret
int3
int3
adc
icebp
arpl
int3
icebp
arpl
int3
js
in
push
es
sbb
lock
push
mov
dec
adc
jb
cmp
out
pop
mov
pop
arpl
mov
adc
dec
xor
mov
inc
add
in
mov
xor
mov
inc
add
mov
sub
out
xchg
pushf
stc
sbb
rcrb
dec
enter
ret
ficompl
sarb
mov
push
dec
or
lahf
or
push
cmp
add
mov
mov
std
incl
mov
leave
sub
leave
int3
dec
cwtl
mov
mov
xor
adc
mov
ja
xchg
aam
sub
add
out
sbb
rcrl
dec
jmp
cmp
xor
push
insb
xlat
lcall
mov
cmpsb
or
popf
add
js
lods
idivb
fwait
add
movaps
les
or
sahf
jns
fwait
adc
add
sti
mov
ja
dec
or
daa
cmpsb
or
cmp
fsubs
xchg
or
adc
inc
xchg
jbe
stos
inc
inc
int3
cmp
addr16
add
push
push
xchg
jnp
and
nop
out
sbb
sti
jmp
pop
jle
sahf
add
mov
fdivs
jl
mov
or
out
insl
jnp
push
adc
jo
scas
mov
sub
add
out
in
fwait
pop
push
cli
es
test
lods
fwait
mov
pop
add
or
test
push
lea
sahf
idiv
scas
push
add
add
cmp
ret
dec
clc
insb
mov
or
shlb
inc
cld
cmp
sub
lcall
mov
pushf
xchg
or
cwtl
jge
rorb
test
inc
call
xor
or
cmp
cltd
fsubrl
jge
pusha
or
std
fcomps
or
cmp
cltd
sub
adc
add
xchg
addl
lahf
aam
rorl
sub
stc
jg
add
lock
add
lods
test
jb
icebp
lcall
fdivrp
test
clc
mov
sbb
test
mov
popa
stos
mov
ss
add
insl
std
decl
and
int3
mov
inc
ror
sub
int3
sarb
dec
add
add
or
ss
xor
lods
jge
out
mov
jp
insb
insb
sbb
add
mov
daa
enclu
mov
addl
xorl
sti
adc
mov
xchg
stos
or
pop
jo
xor
xor
jno
push
add
pusha
cmp
mov
mov
add
add
sub
in
out
imull
inc
add
sub
adc
add
mov
inc
or
adc
bound
outsb
int3
pop
inc
or
adc
jmp
sub
nop
push
adc
in
jae
lods
jnp
mov
push
adc
in
dec
inc
jb
nop
shr
jo
and
add
addl
adc
test
rcrl
fs
out
decb
cmc
mul
shll
dec
rolb
pop
test
adc
xlat
out
lcall
mov
test
and
cwtl
popf
addl
dec
push
not
pop
mov
inc
not
out
mov
cmp
and
lea
sahf
pushf
jge
mov
test
enter
inc
insl
adc
out
push
add
cli
add
jbe
jl
adc
jae
cmc
mov
cltd
fidivs
in
scas
mov
fdivrs
inc
test
lock
and
xor
repz
pop
addb
stc
mov
popa
std
clc
stc
loop
cmp
add
xorb
add
in
xchg
dec
scas
add
or
jne
fstps
stc
xor
xchg
repz
sub
inc
add
mov
add
aaa
scas
cmp
push
xchg
sbb
or
mov
xor
scas
jno
outsl
add
bound
rcrl
aaa
insb
pop
xchg
sub
jmp
add
out
add
fcompl
inc
and
jo
daa
cmpxchg
and
adc
add
out
sbb
pop
add
jg
add
cmc
add
pop
xor
push
mov
arpl
adc
out
lret
adc
roll
and
or
inc
sbb
mov
jp
push
mov
mov
mov
add
je
and
cwtl
in
adc
in
out
add
or
rolb
mov
add
mov
pop
adc
jmp
dec
test
adc
mov
jecxz
popf
leave
adc
push
pop
subl
add
cmc
cli
loope
jb
mov
xchg
push
in
insb
into
push
add
sub
cwtl
dec
movsl
das
xchg
cmp
aaa
in
imul
sbb
sti
add
movsl
sbb
jae
pushf
sarb
pop
cltd
sahf
pop
or
and
jecxz
out
out
dec
call
inc
pusha
ds
and
sub
repz
pop
xchg
jmp
add
jo
dec
push
xchg
mov
orl
iret
andl
shrl
cltd
test
dec
addl
in
sub
mov
ljmp
adc
popf
adc
mov
nop
push
mov
mov
lret
std
movl
add
dec
jg
jnp
lods
xchg
mov
add
cmp
addb
stc
cmp
gs
stc
jae
xor
in
test
jmp
pop
and
or
testl
inc
inc
adc
sub
les
add
stc
adc
or
add
cmpsl
nop
test
jl
rclb
xor
aam
add
xrelease
les
insb
test
push
jo
jge
fwait
cltd
fwait
imulb
nop
sub
xchg
pop
insb
rcrl
xchg
cmp
push
ljmp
xor
lcall
push
pusha
mov
sti
rol
push
clc
insl
leave
mov
pop
inc
add
mov
jl
jl
sbb
std
pushf
sub
pop
sub
std
fisubrs
adc
add
sbb
adcl
fsts
test
xchg
pusha
inc
sbb
test
mov
add
sub
jge
ret
out
fsubp
push
push
pop
jo
pop
xchg
cs
mov
xor
inc
pop
int3
mov
sti
loopne
sahf
into
arpl
xor
cmpsb
popf
int3
pop
inc
scas
jb
stos
sahf
rcll
rcr
pop
aam
dec
add
ljmp
sbb
jnp
jmp
xchg
ret
incl
and
call
cs
add
pop
add
jecxz
sub
hlt
push
data16
jae
ficoml
inc
jge
inc
mov
pushf
ljmp
ficoms
sub
sahf
addl
dec
nop
outsl
ljmp
scas
push
add
fldl
xorb
inc
cltd
daa
addl
ja
sbb
mov
or
movl
mov
test
jp
mov
ja
in
or
mov
mov
cwtl
or
add
movl
xor
push
jns
mov
stc
mov
sub
clc
arpl
les
mov
jg
int
fldcw
test
pop
clc
xor
les
adc
ret
cwtl
adc
sbb
fmulp
jp
mov
inc
xor
insl
mov
pop
insb
stos
mov
imul
add
pop
rcrb
sub
mov
ss
dec
jb
lods
xchg
sub
xchg
sbb
js
and
ds
lds
insb
push
xor
push
mov
jmp
and
pop
mov
dec
xchg
sub
xchg
mov
mov
jb
pop
jl
insl
jge
add
rclb
movb
dec
bound
insb
jge
add
rclb
das
pop
adc
jnp
jbe
insb
jge
add
shl
jmp
sti
mov
dec
jnp
push
jg
jge
add
shlb
fdivrp
pusha
std
jnp
movsb
rcll
out
sti
insb
mov
adc
add
add
mov
xor
scas
outsb
sbbl
adc
je
xchg
shll
cld
jbe
xor
and
rolw
push
pop
popf
rolb
jns
sti
andb
je
and
sbb
mov
addl
je
out
imul
es
jnp
cmp
sti
mov
push
push
push
xchg
fidivrs
push
xchg
shlb
jl
dec
push
add
adc
es
loopne
mov
jp
cld
in
xor
cmc
sub
into
xchg
mov
xor
iret
mov
inc
pushf
in
and
add
jb
push
jl
sub
mov
mov
stos
jp
rclb
fdivr
fwait
jp
inc
nop
repz
adc
jnp
xor
call
mov
mov
call
xchg
sub
fcomps
jg
fsubrp
jp
incb
mov
add
scas
stos
out
test
add
sub
mov
xor
push
adc
adc
mov
divb
insb
adc
mov
addr16
cmpsl
bswap
lcall
ds
pushw
je
hlt
lock
xchg
xor
jl
xchg
lea
mov
jp
sbb
out
scas
add
jecxz
jb
and
daa
outsl
jle
push
mov
ret
in
add
dec
aaa
je
jecxz
push
jl
pop
sub
jecxz
pop
call
push
jae
xchg
mov
cltd
inc
xchg
adc
call
push
pmulhw
ds
jb
and
or
jnp
and
xchg
xchg
rcr
xchg
fldenv
pop
test
mov
test
data16
ds
and
pushf
add
jnp
dec
adc
sbb
mov
xor
scas
pop
test
test
pop
sub
adc
cld
in
adc
xchg
push
and
sbb
push
lds
add
xchg
les
push
je
pop
stos
testl
aad
je
add
sub
mov
aas
test
xor
dec
push
add
mov
dec
imul
lock
and
and
sarl
aad
push
jle
cld
jp
or
cmc
mov
jnp
decl
loop
or
cmp
add
leave
inc
jne
jge
add
icebp
mov
mov
shlb
in
add
pop
js
lock
in
sub
sbb
ja
adc
ja
add
data16
ja
or
fcomi
fwait
adc
enter
in
mov
cmp
cld
xchg
mov
add
mov
sbb
out
add
out
add
mov
outsb
dec
adc
add
adc
xor
orl
xor
adc
add
fidivl
add
adc
fwait
ret
test
pop
pop
jg
adc
jnp
and
lret
add
ret
mov
rclb
mov
jo
bound
or
pop
add
cmpsl
sbb
arpl
int
sbb
xchg
sub
aaa
mov
push
pop
out
fs
jb
ret
test
test
mov
out
and
cmp
xchg
test
adc
jmp
pop
adc
push
test
add
loope
addr16
or
push
add
cli
lcall
ds
add
dec
dec
add
sbb
cs
add
xchg
add
popf
push
dec
lea
cwtl
add
insl
dec
test
aad
repnz
xchg
enter
les
loopne
push
xchg
sbb
jbe
push
xchg
xchg
mov
add
ret
lret
int3
fld
lret
int3
adcb
dec
or
sub
mov
sbb
xor
jne
add
dec
inc
adc
fstl
and
dec
push
sub
push
jl
inc
mov
sbb
enter
jecxz
mov
out
xlat
sti
cmc
dec
call
xchg
add
push
sub
test
add
fwait
stc
inc
or
inc
hlt
in
call
xchg
add
inc
jp
inc
aam
enter
dec
call
stc
xchg
add
test
sar
ss
push
fsub
xchg
cmpl
push
subb
jp
std
mov
add
out
inc
pusha
fcoml
xchg
adc
pop
jecxz
add
sbbb
pop
xchg
mov
and
pop
xchg
or
push
or
iret
das
les
jne
pusha
pop
fistps
xchg
stos
pop
xchg
pop
orl
notb
mov
xor
add
ficoml
mov
insb
lret
int
test
test
ret
in
push
je
orb
fistps
stc
aad
xchg
stc
fcompl
xor
adc
pop
jecxz
add
call
jae
inc
xchg
push
test
sti
mov
mov
stc
push
pop
subl
adc
test
jb
pop
jge
sub
insb
jnp
sbb
dec
sub
add
adc
xchg
or
ret
aad
mov
es
sub
jae
pop
icebp
add
filds
add
fdivs
push
iret
imul
jl
divl
sbb
je
popf
xchg
jmp
filds
lea
and
call
xchg
les
xlat
jae
sahf
into
testb
and
add
mov
xchg
in
adc
addl
jge
imul
push
xchg
or
incb
test
sub
addr16
scas
dec
int3
enter
xchg
adc
lea
xorb
roll
lods
loopne
imul
jbe
or
ret
pop
inc
ja
ss
cmpsl
or
loop
addr16
inc
ja
dec
jg
or
push
xlat
sub
test
mov
or
add
or
sub
mov
out
add
in
hlt
add
popa
test
out
or
pop
dec
add
out
add
out
dec
or
mov
or
inc
orl
roll
adc
push
add
xchg
dec
adc
add
or
sti
adc
mov
pop
data16
notl
ljmp
fstp
add
std
xchg
jle
add
outsb
mov
push
xchg
or
adc
add
add
adc
insl
repnz
ja
jo
test
adc
jb
push
add
pop
pop
inc
sub
jmp
int3
nop
xchg
push
pop
adc
add
lret
dec
cmp
mov
pop
adc
xchg
or
adc
inc
or
adc
jb
xchg
xchg
popf
pop
adc
bound
lds
mov
dec
cs
ret
stc
cld
push
or
stc
jmp
push
fidivrs
add
or
jbe,pn
xor
jne
jae
add
in
xchg
rorb
mov
add
xchg
mov
in
push
add
adc
clc
jmp
push
add
add
adc
loopne
orb
dec
ficompl
filds
js
xchg
jbe
insl
push
mov
fiadds
mov
sub
adc
pop
pop
popa
mov
addb
ds
mov
or
popf
aam
sub
rolb
push
adc
mov
add
sub
out
pop
add
insb
jmp
jne
mov
out
jae
cmc
ja
and
jae
out
adc
xor
jle
xor
mov
mov
test
jle
or
adc
stos
cmp
not
mov
test
mov
inc
int
cmc
and
jge
add
in
adc
add
out
jecxz
cltd
add
fldz
sub
jmp
stc
add
jno
or
into
add
pop
data16
pop
adc
adcb
or
insl
pop
aas
push
jmp
sub
xlat
addl
scas
jns
lea
rolb
dec
enter
rolb
cwtl
les
decl
push
pop
xchg
or
xchg
add
add
insl
mov
adc
add
mov
pop
mov
add
xchg
add
pop
jb
jl
and
jl
mov
inc
lret
add
dec
inc
add
rcrl
push
or
aas
rorb
out
pop
adc
jmp
add
out
sub
aas
lcall
jmp
xchg
push
sbb
push
or
test
pop
adc
jmp
dec
mov
int3
add
iret
lret
int3
and
lret
int3
push
psubw
sub
loopne
or
out
incl
loopne
mov
bound
repz
push
push
mov
idiv
lds
add
and
subl
fcomip
call
adc
add
std
mov
xchg
fdivp
push
test
jmp
mov
les
xchg
rolb
xchg
insb
adc
mov
xor
call
inc
dec
push
add
mov
mov
mov
lcall
add
aas
adc
sub
cld
xchg
jno
orl
sti
mov
xchg
adc
call
stc
xchg
add
mov
jb,pt
xchg
and
mov
push
ljmp
add
push
lds
bnd
mov
xlat
jb
xchg
adcl
fidivrs
or
cmp
pop
adc
dec
insl
mov
push
push
mov
arpl
jbe
insb
daa
addr16
push
data16
add
daa
out
cmp
ret
jbe
push
shlb
ret
adc
jbe
adc
or
push
jae
jns
loop
inc
pusha
aaa
mov
xchg
push
ret
addr16
jle
add
outsb
jg
push
lcall
push
cmp
lea
lea
push
jae
jle
stc
mov
fs
pop
dec
pop
sbbl
fldcw
dec
rcrl
sub
add
les
jge
mul
stos
daa
stc
push
cltd
loopne
bound
xor
sbb
aaa
je
movl
in
lods
stos
stc
fidivs
orl
mov
mov
stc
mov
cmp
scas
xor
ret
in
add
push
je
test
fs
clc
mov
in
add
xor
decl
lcall
movsl
mov
add
sbb
enter
enter
mov
test
notb
mov
dec
call
cmpsb
les
or
popf
cmp
lret
cli
lcall
xor
lea
pusha
int3
cmc
mov
out
lods
xor
push
jnp
mov
shlb
jmp
popf
and
push
test
push
outsb
stc
fwait
xchg
inc
in
cltd
add
pop
mov
daa
stc
jae
jle
je
orb
je
stc
push
mov
idiv
xchg
insb
mov
or
test
mov
sub
in
adc
or
iret
dec
jp
and
stc
orl
jo
jecxz
push
push
out
bound
enter
push
ds
mov
sti
mov
outsl
push
jg
insb
daa
lods
push
lcall
fwait
je
lea
jl
add
jb
cmp
pop
jge
inc
or
jb,pn
xlat
push
add
fs
dec
push
inc
clc
stc
or
xor
or
sbb
jecxz
jnp
adc
xchg
ret
jb
push
je
pavgw
clc
push
bnd
dec
std
jno
xchg
stos
or
pop
sarb
push
pop
iret
jecxz
xchg
push
mov
mov
fwait
mov
cmpsb
xor
dec
stc
sbb
mov
insb
inc
enter
dec
test
xchg
add
dec
stc
je
pop
stc
pop
aad
mov
aam
stc
mov
aad
xchg
stc
fmuls
out
mov
ret
in
adcb
mov
bound
clc
push
xchg
xchg
mov
jb
clc
divb
ljmp
stc
and
or
xor
and
or
cmp
mov
div
jmp
test
notb
les
imul
mov
xor
mov
ret
imulb
and
lea
ret
imulb
adc
add
adc
loopne
idiv
repnz
mov
ret
testb
lret
bnd
testb
ret
or
add
stc
mov
loopne
adc
in
xchg
lods
hlt
add
imul
mov
leave
pop
jns
test
mov
rolb
jne
xchg
pop
push
jg
stc
sub
push
insl
je
cs
or
insl
mov
shr
inc
cld
mov
mov
sub
aas
add
lret
pop
iret
mov
or
movsl
call
cmp
sub
and
hlt
add
les
movsl
jbe
push
stc
sti
mov
pusha
stos
aas
enter
loopne
pop
clc
add
and
add
imul
push
xor
xchg
outsb
mov
jp
xor
pop
in
outsl
dec
out
add
insl
daa
jg
sub
inc
hlt
add
int
push
jmp
inc
pusha
sbb
cmp
aas
push
pusha
sub
dec
pusha
pushf
jp
xchg
cmp
aam
and
sub
into
mov
lods
inc
lock
jbe
sbb
leave
in
add
jecxz
or
movsl
stc
fisubrs
test
ret
mov
push
mov
jmp
shll
mov
dec
mov
clc
fmull
and
in
and
cmp
subl
dec
stc
jbe
xchg
jecxz
daa
add
pop
mov
mov
inc
dec
xchg
test
add
cmp
pop
aam
call
sti
aaa
imull
loopne
pusha
dec
faddl
xchg
int3
dec
adc
fmull
mov
into
inc
pop
add
mov
adcb
shrb
popa
clc
adc
push
roll
pop
sti
ja
ljmp
push
mov
int3
cmp
and
inc
cmp
lret
pop
into
pop
mov
and
iret
inc
add
add
nop
mov
pop
pop
jnp
xor
call
lds
incl
sub
cli
std
std
or
std
push
add
std
test
mov
outsl
lea
jp
pop
mov
mov
add
add
mov
add
jnp
add
lods
add
popa
mov
inc
lds
add
jp
rorb
add
call
add
add
xor
pop
xlat
xor
xchg
rolb
std
incl
jnp
add
out
sbb
jle
cmpsl
out
add
mov
mov
jg
adc
add
adc
mov
add
out
mov
adc
push
xchg
push
test
stc
pusha
pusha
out
or
and
xor
add
add
pop
stos
push
add
lret
adc
adc
insb
or
jge
xor
das
push
dec
mov
xchg
aad
fistl
into
ljmp
popf
push
add
nop
jecxz
mov
sbb
call
jb
push
je
popl
inc
pop
dec
loope
adc
shlb
jecxz
cld
das
inc
cmp
or
cmp
push
xor
int3
popf
fcoml
mov
push
int3
lods
int3
push
int3
cmp
cmp
icebp
push
scas
call
or
sti
outsb
in
in
mov
sub
enter
ror
add
sldt
sbb
adc
add
pop
rolb
adc
add
adc
add
in
pop
outsb
adc
adc
add
xchg
mov
add
adc
stos
roll
je
aam
ljmp
adc
add
dec
insl
or
adc
add
adc
add
ror
int3
mov
lret
int3
mov
sarl
add
loop
and
fwait
imul
aad
in
jp
test
xor
cmp
pop
ljmp
jl
test
int3
mov
inc
ja
mov
sar
int3
mov
lahf
or
push
sub
jae
dec
popa
ja
mov
test
jg
idivl
add
push
jne
nop
scas
inc
je
mov
neg
or
jo
jne
je
into
dec
add
mov
add
dec
inc
pop
lods
lcall
dec
push
xor
inc
push
sub
cmp
jp
in
jp
pop
inc
mov
sbb
push
and
and
movsb
addr16
cltd
lods
adc
xchg
negw
clc
ret
rcll
cld
mov
mov
push
jo
pop
cltd
sub
add
cltd
enter
aaa
rcrb
mov
jecxz
jnp
pop
mov
mov
jp
jbe
pushl
imul
mov
jecxz
test
and
fildl
test
xor
stc
fsubl
inc
jmp
add
adc
add
xchg
xor
xor
pushf
pop
cmp
add
loop
pop
int3
jecxz
fiadds
dec
xor
neg
pop
je
int
mov
in
sbb
leave
divl
dec
stc
hlt
pop
push
inc
jmp
call
lret
xor
dec
push
stc
incb
scas
into
mov
scas
jp
fimull
in
roll
cld
mov
in
ror
int3
stc
or
int3
add
or
int3
int3
int3
sarb
setne
jmp
jae
data16
add
and
je
jle
xor
add
adc
jae
cld
mov
or
adc
add
fs
stc
dec
adc
jl
mov
pop
inc
push
inc
pop
add
cmpb
mov
add
jmp
rclb
adc
pop
imul
fs
and
incl
cli
ret
lahf
js
lahf
icebp
jl
cmp
aas
or
inc
int3
enter
rorb
int3
rcrb
mov
testl
mov
add
les
jnp
daa
or
jmp
ljmp
and
adc
divl
mov
inc
pop
cmpsl
sti
or
movsl
add
loop
add
out
popa
pop
out
dec
dec
sbb
dec
xor
dec
sub
push
xchg
and
add
imul
adc
pop
mov
mov
adc
pushf
add
adc
add
dec
dec
hlt
xchg
cmpsl
pop
dec
mov
pop
adc
cli
pop
adc
insb
imul
mov
inc
mov
jns
adc
sub
stos
testl
es
add
filds
adc
imul
jmp
ret
dec
int3
xor
push
push
int3
mov
add
adc
pop
iret
push
jb
sbb
jmp
jg
sti
and
mov
sbb
add
lods
pushf
mov
push
add
mov
adc
xchg
fwait
sbb
or
lret
jb
imul
adc
adc
mov
push
add
insl
push
xchg
push
cmc
cmp
ljmp
adc
pop
or
and
scas
sbb
sub
outsb
adc
sbb
in
adc
pushf
jmp
or
mov
push
add
in
nop
nop
push
mov
sbb
mov
xor
add
addl
add
mov
test
jno
dec
cld
test
add
pushf
mov
or
add
mov
int3
inc
mov
dec
int3
push
icebp
dec
int3
dec
orb
xor
lea
mov
jg
add
xchg
push
xor
adc
jge
popa
or
or
add
mov
cmp
adc
add
adc
mov
out
orl
mov
dec
or
add
adc
mov
or
add
adc
mov
daa
out
mov
out
dec
mov
sarb
outsb
mov
daa
out
jmp
pop
pusha
loope
mov
add
loop
mov
cmpsl
outsl
rorb
out
push
dec
dec
and
cmp
sub
shr
movsb
add
mov
test
cli
orb
mov
ds
adc
add
jg
xchg
mov
sub
and
bound
pop
adc
lahf
push
arpl
cs
jb
orb
repz
sahf
cli
push
call
pop
xchg
dec
xor
cli
adcb
shr
push
lcall
and
jmp
jb
inc
jge
push
sbb
movsb
arpl
mov
test
xor
add
push
adc
mov
inc
data16
cmp
adc
add
mov
add
lea
push
stos
stc
dec
inc
xchg
xor
and
pop
and
aaa
or
cli
mov
adc
xchg
dec
cltd
or
add
leave
pop
add
xchg
out
add
test
test
pop
mov
lods
push
mov
mov
mov
dec
jmp
or
pop
test
add
leave
sti
jmp
dec
jge
sub
out
push
or
dec
mov
mov
xor
loope
test
push
cmp
adc
push
lcall
repz
add
add
mov
pop
jae
mov
jmp
mov
imul
nop
mov
int3
dec
jmp
mov
xchg
in
dec
mov
cmc
or
inc
jo
stc
add
pop
adc
mov
roll
xchg
daa
or
add
insb
rcl
xor
add
orl
add
out
lds
lea
cmp
add
mov
dec
mov
or
gs
cmp
loop
bound
out
pop
sbb
out
imul
scas
sarb
out
loope
fmuls
adc
loope
xchg
mov
add
dec
icebp
cwtl
cmp
pushl
pop
das
add
pop
adc
cmp
jns
mull
add
jmp
add
jmp
dec
das
or
mov
add
mov
fistl
fdivrl
lret
inc
int3
cmp
sub
pop
enter
or
push
jnp
shll
stc
data16
add
inc
inc
add
add
adc
add
arpl
add
push
icebp
add
adc
test
push
mov
sbb
aas
mov
cmpb
stc
fstl
jmp
jmp
jne
push
lret
mov
cmpb
dec
cld
testb
pop
adc
add
cwtl
add
insl
xchg
movsb
and
adc
add
mov
add
xchg
pop
adc
sub
or
add
filds
addb
add
or
sti
ret
jl
out
clc
inc
cmp
mov
in
fcmovnb
lret
adc
add
nop
sbbb
jne
pushf
pushl
cmp
sub
mov
push
bound
jge
xchg
adc
jmp
jl
sub
popa
push
mov
push
je
out
lcall
dec
daa
mov
test
adc
bound
adc
add
adc
push
or
pop
jp
mov
faddl
add
testl
or
mov
xor
imul
outsl
add
xchg
addr16
mov
jo
cmpsl
lods
fbstp
sbb
fimull
add
jmp
mov
ret
pop
outsb
fcoml
mov
or
mov
pop
lock
push
cwtl
notb
out
iret
daa
add
jg
scas
fldln2
dec
bound
stos
nop
dec
popa
jge
add
testl
mov
subl
adc
jl
pop
adc
cmp
mov
xor
mov
stos
das
lea
ret
push
in
orl
xchg
xor
xchg
xor
pusha
fimuls
adc
xor
mov
mov
xor
push
shll
popa
mov
add
rorl
adc
pop
or
nop
test
stc
call
popf
push
add
mov
fdivrl
mov
ljmp
cmc
mov
mov
mov
cwtl
push
add
cwtl
mov
rol
push
add
sahf
dec
icebp
mov
fwait
push
add
mov
lahf
fdivrl
add
rcrl
jmp
aaa
mov
jecxz
xor
adc
std
test
xchg
mov
out
test
into
cld
push
clc
rcr
jle
xchg
adc
out
or
xchg
adc
mov
xchg
sub
arpl
das
xchg
and
out
push
aas
std
ljmp
outsb
pop
bound
cmp
adc
adc
in
add
or
pop
mov
sub
outsl
xchg
push
adc
sbb
add
add
jo
das
mov
fimuls
je
roll
add
xchg
out
adcl
movsb
pop
add
lret
pop
or
or
out
sbb
pop
jae
or
add
or
aaa
lods
sahf
sbb
jg
in
push
addl
bound
imul
pop
cmp
pop
jecxz
shl
adc
mov
dec
xor
pop
inc
push
filds
adc
sbb
lcall
mov
pop
mov
dec
mov
or
pop
cltd
push
dec
out
pusha
fisubs
sbb
jns
push
add
les
arpl
pushf
add
dec
aad
call
mov
nop
xor
sbb
xchg
popf
xor
bound
stos
adc
repnz
roll
mov
push
pop
adc
push
add
and
add
pop
sarl
add
scas
xlat
cli
call
xor
add
mov
inc
clc
cmpsb
lods
mov
iret
ret
cmp
add
or
add
push
gs
add
pop
fldl
inc
sub
js
scas
inc
or
std
xchg
lock
dec
std
decl
inc
mov
push
gs
jae
mov
out
jge
adc
jl
inc
sbb
jl
std
lcall
pop
out
insb
stc
jmp
pop
xor
mov
adc
out
dec
xchg
idiv
add
mov
adc
std
incl
xor
push
jge
pop
bound
or
shl
xor
mov
push
adc
jge
insb
icebp
add
jmp
mov
ret
or
pop
lcall
mov
lcall
fistpll
call
sbb
rcll
xchg
jo
add
pop
mov
add
add
xor
mov
jae
push
out
mov
mov
add
add
movsb
push
and
fistps
insl
add
sub
fistl
out
add
loope
mov
call
jmp
pop
adc
jmp
pop
adc
scas
mov
adc
sub
pop
daa
sbb
sbb
xchg
mov
movl
iret
aas
dec
bound
add
jmp
add
sub
xor
adc
jmp
push
mov
cmp
pop
fisubs
add
push
mov
add
outsb
ret
subb
pushf
add
add
adc
gs
pop
xchg
jp
loope
inc
or
pop
cmc
mov
test
lods
jg
mov
or
dec
leave
jp
mov
lea
xchg
mov
adc
ret
loopne
push
xchg
mov
shll
mov
lock
jmp
nop
icebp
or
addr16
mov
ss
loop
outsb
or
or
test
mov
add
pop
push
adc
cmpsl
mov
in
adc
dec
cld
mov
sti
mov
test
cmp
movb
push
jge
inc
jne
push
sub
jmp
mov
mov
pop
aad
loopne
xor
jl
aas
jbe
cwtl
and
jg
repz
icebp
incl
inc
cld
xchg
ja
mov
jbe,pn
sbb
dec
sub
jg
cmc
test
movsl
pop
syscall
xor
xchg
movsb
icebp
jmp
adc
into
add
sahf
test
jl
sbb
addb
add
sbb
mov
popf
jns
notb
out
mov
mov
in
xchg
jg
jae
inc
add
out
pop
in
sbb
cld
cltd
jno
add
pop
jge
add
add
sbb
je
mulb
add
arpl
sahf
sbb
sahf
aaa
in
ss
mov
mov
popa
add
add
pop
jno
sbb
cmpsl
fistpl
mov
jle
add
cmp
adc
adc
xor
xchg
lock
cmp
call
add
lock
pop
fs
sarl
pop
add
stc
pop
sti
dec
lock
adc
pop
test
mov
popa
or
clc
push
mov
sahf
xchg
add
add
jbe
out
xor
and
pop
test
add
stos
mov
pushl
test
pusha
ror
int3
loope
lret
int3
mov
dec
mov
sub
jge
stc
incl
bound
jecxz
loopne
sbb
mov
cs
pop
test
add
fistpl
sub
imul
mov
push
add
fiadds
test
adc
add
xchg
cmp
std
and
adc
mov
pop
jp
push
arpl
je
out
dec
xor
incl
adc
adc
cwtl
pop
inc
std
decl
and
cmc
mov
mov
les
pop
cld
stos
repz
xchg
push
or
loop
xchg
mov
hlt
sbb
ja
xor
mov
cmp
cld
cmp
std
test
adc
jl
icebp
add
gs
mov
in
add
daa
outsb
jl
out
lcall
or
lret
clc
je
out
mov
scas
adc
loope
test
repnz
daa
repnz
insb
insb
icebp
add
aaa
lock
clc
dec
push
xchg
mov
add
pop
lock
fidivrs
add
jae
out
dec
aam
xchg
adc
pushf
loope
ss
stc
and
jnp
jl
add
pop
adc
pusha
ja
adc
pop
lret
stos
lret
xchg
imul
jle
popa
add
pop
adc
flds
adc
add
push
and
pop
loop
stos
pop
out
jg
in
es
jo
bound
and
nop
xor
mov
cmp
clc
ret
testb
test
add
loope
pop
fsubs
jmp
lret
rcll
pop
xor
lds
add
loop
fcom
test
adcb
cmpsl
xchg
mov
testb
xchg
adc
add
inc
int3
loop
sub
add
orb
cmp
enter
mov
sbbb
shll
xor
mov
es
push
popf
adc
sub
jle
inc
test
ret
loopne
mov
cwtl
push
add
scas
cwtl
in
stc
call
pop
or
stc
les
repnz
aam
ljmp
mov
jmp
cwtl
push
and
jmp
xlat
in
dec
hlt
lahf
mov
hlt
dec
jl
pushf
inc
std
out
inc
fcmovne
add
xchg
cld
scas
mov
mov
std
movsb
scas
sti
test
std
mov
fisttpll
in
mov
hlt
mov
sub
inc
add
mov
sti
popf
scas
push
mov
mov
hlt
adc
add
mov
cmp
adc
or
insl
sub
int3
sbb
sti
subl
add
out
add
inc
les
scas
out
or
dec
mov
adc
js
or
call
push
adc
inc
inc
or
jmp
lods
push
addl
mov
out
popa
std
pop
cmpsb
mov
xchg
pusha
out
add
push
add
add
xchg
push
add
add
jmp
sbb
jl
sbb
fisttpll
cltd
mov
mull
stc
jmp
clc
mov
inc
sbb
int3
dec
pop
int3
pop
into
jb
incl
adc
push
das
pop
adc
pop
cltd
jo
das
add
push
movl
adc
pop
cltd
jo
or
pop
jno
or
add
add
rcll
cwtl
sbb
les
mov
xchg
push
push
out
pop
push
nop
mov
aas
shl
decl
xchg
mov
sbb
add
stc
pop
or
sbb
pop
inc
adc
push
ret
adc
lret
int3
xor
lret
int3
xor
lret
int3
push
push
mov
lea
add
lods
test
sbb
clc
jae
stos
imul
aas
inc
xlat
add
pop
cltd
clc
pop
and
pop
andl
ljmp
insl
xor
roll
incl
jmp
add
std
jb
mov
nop
mov
sub
call
push
inc
xchg
add
std
lcall
jecxz
add
inc
int3
shr
dec
int3
enter
jg
and
inc
mov
add
cmp
fidivrs
out
dec
int3
enter
sbb
std
dec
xchg
or
cwtl
pop
inc
std
jg
adc
and
fcmovb
pop
adc
add
or
or
daa
sbb
dec
inc
mov
add
outsl
adcb
out
jo
nop
or
clc
insl
aam
or
das
sbb
pop
and
adc
add
aam
test
leave
mov
add
and
push
mov
push
sub
push
pop
mov
out
cmp
jmp
filds
adc
cltd
repz
dec
icebp
popl
pmaxub
test
or
push
loope
bound
rolb
notl
dec
loope
les
jae
pop
adc
pop
mov
rcll
fidivrl
add
jmp
pop
adc
stos
mov
push
int3
sub
subb
mov
inc
test
das
mov
ds
mov
cmp
mov
inc
aam
xlat
push
push
bound
test
shl
or
pop
push
cmpl
push
or
lret
cmc
add
lcall
mov
lret
lods
lock
mov
testl
cmp
add
cmovae
xchg
repz
xor
fneni(8087
notl
mov
mov
subl
dec
lea
pop
add
iret
lea
rcll
mov
call
or
dec
or
jl
cs
aad
push
or
push
adc
mov
jae
popa
out
fildll
stc
push
int
add
cmc
hlt
in
ret
test
loopne
int3
inc
loopne
in
xchg
into
push
push
xchg
mov
or
jle
add
cli
inc
xchg
mov
in
adcb
std
incl
std
rolb
incl
dec
jp
adc
mov
sbb
out
jbe
fiaddl
add
arpl
adc
inc
mov
sbb
out
cmp
ljmp
adc
stc
sbb
dec
rcrl
sbb
in
rclb
push
sub
imul
notl
out
jbe
rolb
add
imul
adc
outsl
sbb
add
add
jno
notb
out
mov
fs
push
repz
les
jmp
iret
sti
jb
adc
cltd
repz
push
insl
pop
test
and
add
cwtl
push
cmp
call
xor
sbb
xlat
mull
and
out
mov
jmp
add
mov
adc
jmp
pop
adc
pusha
mov
adc
pop
mov
jno
xchg
mov
cld
adc
inc
clc
cs
add
jle
push
add
cltd
add
add
mov
push
sbbl
mov
inc
or
mov
mov
lret
adc
out
icebp
data16
xchg
pop
push
orb
les
mov
cld
push
lret
rolb
mov
push
pop
mov
jne
push
push
pop
mov
jo
add
les
add
shrl
mov
fidivl
push
aas
std
incl
and
stc
jp
or
add
jge
lock
test
or
add
movb
mov
std
test
imul
imul
pusha
mov
std
out
pop
ss
stos
add
inc
int3
dec
pop
inc
int3
inc
addr16
int3
cmp
mov
mov
add
mov
std
pushl
stos
mov
add
imul
fldl
out
jecxz
xor
mov
add
out
inc
adc
jno
xlat
scas
gs
cltd
in
add
jl
or
push
sbb
out
lock
jno
add
add
fcmovnu
jno
fldl
gs
cltd
faddl
add
xor
or
ja
adc
out
test
jns
or
add
xchg
jg
arpl
fs
xlat
push
call
pop
mov
aas
clc
push
mov
sub
xlat
push
call
pop
mov
mov
xor
add
mov
dec
int3
sub
pushf
nop
sub
movsl
adc
or
cmp
test
test
aas
punpckldq
xchg
pop
adc
pop
or
add
js
adc
push
or
pop
adc
sbb
mov
inc
add
test
push
or
pushw
in
orb
mov
push
add
je
mov
add
arpl
add
nop
les
iret
pop
mov
pop
rorl
nop
mov
push
pop
adc
nop
jne
add
out
add
sti
mov
jp
xor
mov
int3
jns
lret
int3
pop
lret
lret
int3
add
test
out
or
fdivs
int3
sar
test
add
test
push
xchg
test
std
pushl
out
mov
decl
xchg
xchg
std
xor
and
xchg
mov
xor
jmp
mov
and
call
adc
sti
jnp
jle
cld
mov
xor
xchg
adc
xchg
xchg
jge
xor
insb
sub
add
cmp
dec
adc
sub
fs
mov
inc
xchg
clc
insl
rorb
cmpsl
scas
pop
mov
andnps
mov
jecxz
pop
fstl
out
add
orl
add
out
dec
std
push
add
outsb
test
out
adcl
xchg
popf
mov
push
mov
jl
push
adc
add
jne
push
add
pop
mov
dec
int
add
jne
jo
adc
bound
test
clc
mov
mov
stc
daa
hlt
fs
mov
aam
pusha
jp
adc
pop
jbe
jg
es
sub
bound
es
ja
es
test
cld
outsl
mov
adc
pop
cltd
inc
sub
pop
adc
ja
cld
sbb
jmp
lds
cmp
add
pop
xchg
adc
jmp
sub
stc
test
adc
jge
add
pop
pushf
test
and
or
pop
mov
loop
fmuls
and
mov
sbb
push
add
fwait
dec
or
or
fwait
and
mov
mov
add
in
fwait
inc
adc
loope
mov
and
add
repnz
int
ret
jnp,pt
popf
lea
xchg
mov
adc
nop
mov
rcrl
mov
add
fdivrl
add
or
cld
jns
sub
cmp
cmp
or
sbb
mov
add
testb
mov
daa
pop
mov
jns
jg
cld
dec
jg
or
je
jmp
sar
cld
jl
cld
mov
mov
add
test
add
mov
test
stc
add
add
test
xor
add
mov
test
xor
add
jns
inc
sbb
call
test
mov
pushf
pop
add
jle
call
inc
or
cs
mov
cmc
subb
add
loop
push
adc
cs
std
adc
mov
xchg
jg
in
adc
imul
adc
daa
sbb
in
push
inc
rcr
inc
movsb
and
inc
clc
adc
push
es
or
adc
bound
mov
or
andb
mov
scas
aam
adc
inc
pop
adc
insb
lods
xor
out
and
push
call
add
or
mov
or
std
mov
push
in
or
std
mov
or
std
mov
ret
or
std
mov
or
std
xor
pop
std
and
pop
std
xor
add
pop
std
and
pop
std
xor
pop
std
and
sbb
add
adc
icebp
add
adc
icebp
add
and
loopne
idiv
dec
jnp
andb
out
loope
xor
imul
xchg
jg
cmp
ljmp
testl
add
xchg
xor
pop
inc
jge
ficoml
jnp
int
jp
fstl
add
sub
push
add
adc
add
adc
testl
stc
add
pop
inc
add
pop
xor
mov
std
testb
clc
mov
std
testb
clc
mov
std
std
testb
clc
mov
hlt
std
testb
mov
mov
add
testb
clc
mov
repnz
testb
clc
mov
add
testb
clc
mov
idiv
testb
clc
mov
or
testb
stc
mov
cmc
std
testb
stc
mov
push
testb
jge
adc
sub
jmp
or
or
loop
push
adc
movb
ja
add
cli
fstps
pop
adc
adcl
sbb
push
mov
int
hlt
into
or
cmp
aas
inc
loopne
jnp
add
int3
andb
jns
jmp
and
push
pop
repnz
add
sub
cld
inc
jecxz
add
cmpsl
add
pop
mov
inc
add
xor
imul
or
fiaddl
xchg
iret
sub
testb
or
jmp
push
adc
jb
mov
cs
jp
xor
or
sub
sub
xor
jmp
adcb
sub
aas
dec
in
mov
mov
jmp
mov
sub
xchg
aad
std
sbb
sub
jmp
jmp
dec
lret
in
movsl
add
pushf
popf
ljmp
lods
pop
sub
adc
inc
popf
add
or
pusha
mov
rcll
jp
jb
add
fdivl
adcl
sub
add
popf
pop
add
add
add
popf
sbb
cmp
add
cmp
cs
mov
pop
push
call
add
mov
pop
mov
in
push
add
jmp
mov
sbb
idiv
mov
loope
cld
jle
inc
std
incl
add
mov
pop
adc
jl
stc
add
cld
test
push
jge
pop
cld
cld
call
add
test
pop
mov
xchg
loope
add
sub
cld
call
loopne
add
cmp
sub
inc
xchg
adc
add
cld
decl
cmp
test
out
pop
cmpsl
out
or
dec
cmp
testb
out
repz
lods
adc
add
andps
push
out
push
xor
les
in
dec
add
sbb
es
adc
add
push
out
xor
out
add
sti
mov
daa
add
in
cmpsl
push
or
rorl
out
out
add
sti
addb
add
bound
adc
or
add
add
or
jg
push
adc
jmp
mov
add
leave
in
add
dec
add
or
jmp
pop
inc
inc
jmp
sub
stc
push
adc
repnz
adc
clc
mov
fimull
mov
fiadds
adc
bound
xchg
loope
add
pop
aaa
cmp
add
jmp
clc
ss
or
inc
jmp
fstl
sub
pusha
adc
inc
in
nop
in
daa
mov
test
les
nop
stos
test
xor
xchg
fcos
popf
adc
rcll
add
adc
jne
inc
rcrb
dec
int3
int3
rorb
leave
lock
rorb
or
push
clc
lret
add
or
fadds
test
sub
rorb
leave
insl
test
dec
jnp
daa
clc
cmpb
jb
add
cld
incl
divb
cmp
int3
mov
iret
push
push
jp
and
test
aaa
jg
fdivrs
mov
std
incl
inc
test
jnp
add
mov
xlat
jge
fadds
add
lret
jae
aad
std
jle
jp
call
jae
and
adcb
mov
pop
lods
sub
xchg
xchg
orl
mov
fadds
cld
add
sbb
insl
ret
sub
call
ja
pop
xor
notb
loop
pop
dec
dec
jge
xor
jp
push
outsb
adc
clc
sarl
adc
cmp
std
mov
jmp
add
stc
out
jae
bnd
adc
add
dec
es
cltd
sub
pop
adc
sub
or
jl
xor
out
outsb
cmpsl
out
add
rorb
mull
out
or
call
out
add
cs
pop
push
cs
push
ss
add
out
jo
mov
jmp
inc
push
rolb
ljmp
adc
in
popf
jnp
addr16
rcl
add
test
inc
sub
jne
or
arpl
pop
add
pop
pop
stc
into
jmp
pop
addl
mov
and
adc
mov
sbb
add
pop
int3
xor
data16
cmp
mov
cmp
mov
repz
cltd
jecxz
add
adcl
pop
stc
or
jg
jl
sub
push
pop
ret
ret
xor
int3
insl
mov
pop
mov
pop
mov
insl
mov
insl
pop
add
pop
pop
add
pop
pop
add
sub
add
add
cld
incl
cld
incl
add
add
add
add
cld
incl
std
incl
incl
sti
sti
test
add
add
jecxz
jecxz
movsb
fisttpl
and
lret
jns
std
ret
popa
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
adc
or
and
and
sbb
stc
push
test
addl
aaa
das
scas
pop
pop
mov
xor
int3
jae
addr16
subb
mov
mov
mov
cs
add
adc
dec
andl
mov
jmp
push
or
mov
mov
pusha
enter
rolb
out
jg
add
out
dec
push
loop
push
adc
add
sahf
mov
aaa
jecxz
lds
outsb
shll
lea
int
lcall
pusha
cwtl
push
bound
xor
push
push
push
and
jmp
mov
xchg
fiaddl
movsl
pop
xchg
xor
jo
jnp
adc
filds
ret
adc
cmc
xlat
das
shlb
test
cmpb
inc
fists
cmp
notb
jno
mov
dec
mov
mov
jmp
call
test
xor
lret
loopne
xor
leave
test
adcl
and
add
jbe
call
outsb
and
je
sbb
add
xchg
pushl
or
lock
inc
in
sbb
add
xor
loopne
fadds
sbb
add
xor
sbb
call
ret
pop
int3
loopne
sub
and
clc
int
add
insl
xchg
sarl
int
jno
jae
sub
add
fldl
ss
clc
jo
aam
add
in
test
or
insl
push
or
fcmovbe
ja
mov
aaa
lods
cmpsb
stos
jle
jl
hlt
cltd
sbb
in
orb
in
cld
pushl
or
test
adc
jg
fstl
stos
mov
mov
add
outsb
iret
daa
adc
mov
js
push
aam
repnz
int3
aas
dec
lock
dec
pushf
and
xchg
hlt
icebp
xchg
cmpsb
cmp
xchg
add
jl
dec
xchg
movsl
hlt
dec
repz
sub
adc
xor
dec
int
sbb
mov
icebp
int
add
mov
out
mov
int
daa
sub
inc
std
xchg
pop
add
adc
rolb
out
outsb
pop
loope
sub
call
add
in
adc
xchg
xchg
lcall
push
mov
out
adc
clc
push
std
jae
inc
jns
shll
dec
jb
xor
arpl
jg
ljmp
andb
jg
in
push
mov
roll
clc
xchg
inc
or
out
push
adc
jno
adc
jmp
add
jb
xor
bound
jle
push
add
clc
push
or
xor
adc
jmp
dec
mov
bound
jle
lock
clc
add
dec
addl
fldenv
movsl
sbb
jbe
pop
add
add
pop
dec
jnp
cmp
clc
je
jmp
inc
and
fnstcw
repz
mov
sub
dec
cmp
pop
movsl
dec
sub
mov
ljmp
or
adc
adc
sub
adc
pushf
mov
movsb
mov
repz
pushf
mov
movsb
mov
ljmp
pop
xchg
fdivrs
xchg
xchg
xchg
fistpll
xchg
ja
xchg
and
test
imul
or
das
xchg
or
and
ficoml
daa
or
les
jnp
das
mov
testb
repnz
jl
jmp
inc
and
cmpsb
inc
or
mov
jp
icebp
fisttpl
rorb
mov
div
mov
cmp
hlt
cld
xchg
cli
add
adc
pop
mov
push
inc
mov
nop
inc
add
and
jg
or
aam
lods
dec
or
ja
adc
gs
in
cmc
or
xchg
test
or
xor
cs
mov
loopne
or
or
insl
add
push
dec
sbb
orb
outsb
lret
dec
hlt
cld
adc
push
or
mov
filds
call
ret
pop
addl
xor
jmp
jnp
and
bound
mov
jae
cli
xchg
push
jmp
idivl
or
mov
bound
or
sub
clc
movb
push
add
clc
jae
loopne
and
xchg
cmpsb
dec
jb
xchg
add
testl
lcall
add
aaa
mov
movsl
daa
add
sub
cmp
aam
test
adc
add
xor
pop
jle
icebp
add
sub
inc
addl
int3
sub
cmp
aam
test
adc
add
xor
pmaxsw
jle
sbb
add
frstor
sbb
push
inc
addl
cmp
inc
addl
fsts
push
pop
orb
jnp
shl
je
int
mov
pop
xor
mov
out
jns
dec
lcall
adc
lods
mov
fcmovnb
sbb
add
add
cmp
aas
sbb
and
jg
fdivs
mov
das
pop
cmp
adc
jg
jmp
das
fldl
lock
sti
fcmovne
mov
xchg
mov
out
je
and
and
mov
ret
ljmp
adc
out
xor
or
mov
mov
jp
stc
les
mov
adc
repz
pop
xchg
les
adc
add
int3
mov
mov
pop
jo
pusha
adc
and
movsl
add
in
das
mov
mov
pop
sub
cmp
clc
inc
push
adc
cmp
mov
push
add
ficoml
lock
pop
push
adc
xor
add
push
in
xchg
add
fwait
xor
mov
call
mov
ss
xchg
or
jp
add
cmp
xor
fiaddl
mov
inc
push
das
in
cmp
bnd
add
pushf
xor
rclb
orb
sbb
call
addb
push
mov
out
pop
adc
popa
sbb
sub
mov
int3
int3
mov
int3
int3
sbb
adcl
mov
shrl
inc
cmp
movsb
mov
pop
addl
aam
mov
sub
pop
mov
inc
je
testl
inc
dec
sbb
dec
dec
add
shlb
ret
xorl
add
cvtps2pi
add
leave
adc
cmc
xchg
testl
add
lcall
add
in
inc
roll
aas
add
in
test
xchg
clc
test
jae
jge
add
add
cmp
jg
mov
push
mov
incl
clc
lcall
add
xor
scas
sysexit
dec
scas
incl
imul
test
mov
je
pop
dec
pop
adc
mov
xchg
ja
jp
adc
or
sbb
mov
scas
sahf
lret
mov
cmpsl
popf
sbbb
repnz
loope
je
sub
add
or
popf
enter
inc
aam
popf
sbbb
xor
enter
mov
xor
inc
leave
adc
out
jmp
jp
lds
jb
into
xchg
pop
mov
jp
mov
jns
mov
or
mov
cmp
into
in
clc
out
pop
push
shll
dec
sub
aad
leave
add
pop
inc
jmp
shrb
sub
add
jo
int
sub
xor
les
repnz
jmp
or
xchg
add
push
fsubl
pop
adc
movsb
out
push
std
adc
sub
jo
in
lods
aaa
xchg
dec
xor
pop
jo
stc
test
test
jne
xchg
stc
cwtl
cmc
add
adc
cmc
add
lock
setle
stc
lcall
lods
call
add
int3
mov
or
dec
jge
insl
in
pop
and
fmull
rdmsr
sbb
or
or
add
adc
fsubr
adc
dec
cmp
in
orb
inc
faddl
inc
jno
or
cmp
leave
xor
or
outsl
inc
adc
cmp
rcll
cmp
cld
int3
es
repz
icebp
jp
sub
rol
push
jno
add
cld
cld
adc
mov
pop
hlt
mov
adc
and
fsubrl
clc
pushf
cld
cld
incl
and
cmp
jns
loopne
cld
incl
add
sbb
sar
mov
jecxz
pop
sub
pop
ror
add
add
addl
inc
stc
imul
popa
add
imul
xchg
out
mov
add
outsb
lcall
cmp
mov
xchg
cli
adc
xor
imul
adc
mov
lock
mov
inc
cld
pop
mov
mov
int
sbbl
mov
out
test
dec
push
xchg
mov
loope
into
cmp
xchg
lds
xchg
and
mov
insl
inc
loopne
les
movb
adc
push
or
xchg
jmp
jnp
insl
notb
rcrb
outsl
clc
jmp
push
jg
push
lock
jmp
jg
adc
or
and
fwait
inc
js
xchg
add
cmc
and
inc
in
pop
jge
popa
jo
popf
std
data16
jbe
push
clc
fs
push
sub
push
push
sti
push
inc
call
add
mov
orl
stos
hlt
lea
push
pushf
lcall
addl
or
mov
sub
xchg
push
pop
fidivrs
add
ret
push
int3
int3
enter
sub
orl
xor
lods
or
clc
adc
mov
mov
adcl
orl
adcl
not
push
push
or
outsb
sub
int3
shrl
int3
add
sub
int3
add
jne
hlt
test
lret
clc
icebp
jne
or
mov
adc
popa
mov
rolb
popa
enter
mov
clc
data16
cmc
test
jg
in
dec
jg
lock
xor
push
cmp
dec
repz
adc
aas
int3
rorb
aas
int3
sarb
ja
xor
jl
int
test
ja
or
jae
jbe
or
sbb
inc
adcl
clc
jmp
xchg
add
daa
addl
mov
jmp
js
xchg
or
jmp
enter
jmp
popf
arpl
jmp
jp
enter
popf
jnp
por
jp
rcl
add
pushf
xchg
xor
ljmp
in
jno
jbe
call
jae
iret
ljmp
mov
iret
orl
pushl
jbe
cmp
out
clc
and
clc
bound
xchg
clc
inc
repnz
add
andb
ss
clc
call
add
clc
jb
out
addr16
add
in
adc
xor
out
sub
incl
mov
lds
jmp
mov
fmul
lods
sub
lret
repnz
sub
gs
stos
or
ret
push
adc
bound
inc
test
rclb
jmp
testl
test
sub
mov
sub
int3
add
sub
int3
sbb
int3
out
dec
mov
lahf
adcl
cmp
pop
outsb
outsb
cmpsb
stos
add
and
dec
mov
dec
jmp
insb
inc
add
fsubr
ja
imul
lods
or
xor
ret
or
push
jbe
cmp
je
jbe
imul
add
jns
mov
mov
jg
fxch
je
in
lock
je
add
jo
jae
jne
or
adc
test
mov
inc
push
xor
cmp
xor
push
jne
push
out
in
add
cld
call
gs
mov
add
and
fistps
ljmp
lcall
std
out
incl
jecxz
adc
fidivl
sti
test
fwait
andl
xchg
nop
xchg
add
pusha
les
imull
ret
fwait
jge
popf
xchg
jge
popf
mov
inc
add
out
add
xchg
or
gs
adc
lods
mov
xchg
inc
in
push
push
repnz
dec
adc
inc
add
pusha
cmpsl
das
popf
orl
mov
add
pop
inc
add
shlb
test
push
jmp
push
out
jl
add
mov
inc
outsb
inc
mov
lods
xlat
in
cltd
call
fcom
out
pop
sar
test
jp
push
fldl
push
bound
test
std
in
clc
jb
push
mov
mov
or
or
mov
test
fsubrs
in
clc
jb
push
mov
jmp
std
or
fs
imul
mov
in
clc
mov
popa
adc
mov
call
inc
adc
pop
push
or
lods
mov
cmp
loopne
pop
movsl
xchg
or
push
std
or
adc
push
or
pop
mov
jmp
insb
inc
add
pushf
or
and
stc
dec
push
mov
push
or
sbb
xchg
xor
cltd
repnz
sbb
pop
mov
adc
adc
mov
dec
lock
xchg
leave
jne
fsubr
sets
jmp
add
add
repz
xchg
das
cmpsb
lea
out
stc
ja
add
xchg
lgs
push
add
add
jp
or
mov
sbb
rolb
xor
rcll
stos
push
aad
mov
xchg
icebp
addb
leave
es
pop
jno
test
xor
jl
icebp
cmp
jb
repz
js
sub
std
clc
sbb
mov
aad
adc
jns
fsubrl
add
lea
or
insl
leave
add
testb
mov
jecxz
jnp
xchg
out
mov
call
pop
cmpsl
scas
sti
repz
sbb
loope
add
inc
call
mov
add
xchg
pop
bound
jecxz
add
fldt
mov
pmaddwd
inc
shlb
fists
mov
movsb
xor
push
fwait
push
push
dec
push
hlt
lcall
pop
adc
mov
xchg
mov
clc
jmp
xlat
xchg
push
icebp
cmp
and
aam
test
lods
pop
cli
xchg
es
or
mov
sub
mov
out
dec
or
add
mov
pop
adc
stos
dec
cli
movsl
in
adc
call
inc
sbb
push
xor
clc
add
ja
add
push
add
sub
mov
sbb
loop
add
in
adc
add
push
sub
dec
aad
enter
idiv
lock
pusha
sbb
or
sbb
in
ss
jp
jnp
add
or
addl
insl
fimull
test
adc
sbb
pushf
sub
testl
orb
pop
aad
fildl
shrb
mov
pop
pop
mov
fmull
add
jmp
sub
std
fsubrs
shl
push
pop
push
push
add
inc
add
add
mov
call
pop
and
pop
mov
repnz
dec
mov
es
clc
xchg
insl
rorl
lods
add
push
es
lret
dec
cs
lret
inc
jne
push
jg
sub
gs
or
jne
or
fistl
or
dec
cmp
adc
add
lea
mov
lea
mov
int3
loopne
jns
or
shlb
adc
inc
hlt
in
or
fs
rcr
out
ds
pop
dec
rorb
lea
pop
inc
cwtl
xchg
lea
sbb
jnp
add
sbb
mov
lcall
mov
inc
insb
cltd
pop
js
mov
in
add
cmp
inc
pop
add
add
xchg
mov
jb
fildl
push
pop
jnp
or
jb
popa
clc
lcall
loope
mov
adc
dec
in
addb
das
or
add
call
loop
rcl
mov
adc
jmp
sbb
or
imul
out
pusha
cmp
pop
add
sbb
add
addl
adc
fs
bound
bound
fcoml
add
adc
add
repz
mov
xor
or
cmpsb
movl
adc
dec
clc
mov
loopne
je
mov
fmulp
sub
dec
or
sti
psubq
into
or
addl
mov
ss
xchg
mov
les
movaps
call
mov
sbb
or
jo
call
out
push
incl
stc
clc
sub
daa
jo
stos
cld
lret
cmp
dec
imull
add
test
into
or
cmp
jl
jmp
inc
call
mov
add
test
pop
pop
sbb
int3
mov
mov
testl
dec
call
fisubrs
xlat
jg
sub
fwait
jnp
int3
scas
sub
sbb
daa
adc
sub
push
adc
pop
ret
push
or
js
in
mov
lret
mov
mov
aaa
iret
mulb
sbb
jno
add
gs
lds
push
sbb
mov
testb
mov
xchg
ret
mov
mov
lret
in
or
pop
lods
in
and
in
lock
movsb
in
and
in
fcoms
or
add
add
fsub
sub
jbe
add
repz
loope
add
mov
rclb
adc
sbb
out
pop
js
in
repz
jl
add
repz
mov
dec
sbb
cmp
adcb
cld
repnz
mov
shr
in
cmp
push
adc
call
add
into
inc
adc
in
repz
push
adc
test
inc
adc
call
test
add
add
add
push
add
ljmp
inc
pop
outsb
xor
lods
push
notl
xor
fmuls
push
ljmp
ret
fxch
int3
arpl
shlb
inc
and
mov
jmp
xchg
rorb
int3
mov
mov
mov
mov
mov
adc
jmp
mov
mov
xor
mov
xor
loope
or
add
rcl
mov
rcl
jmp
mov
jnp
and
mov
inc
sub
in
loope
sbb
or
xchg
sbb
bnd
xcrypt-ctr
cmpsl
sbb
shl
inc
and
rorb
adc
cld
adc
f2xm1
cmp
jle
mov
add
mov
adc
ror
sbb
inc
add
cmc
push
dec
lahf
sbb
cmp
inc
and
arpl
lea
dec
dec
push
adc
pop
dec
cmp
movb
xchg
rcrl
lcall
stos
dec
pop
cli
mov
mov
adc
popa
sbb
sub
stos
mov
pop
mov
adc
jo
and
mov
cmpsb
sbb
mov
es
aas
xor
aas
sub
iret
enter
mov
lea
outsb
dec
sub
scas
or
pop
xchg
jae
and
sbb
xchg
jp
orb
scas
imul
scas
fchs
insl
jecxz
pop
rcl
shrl
aam
pop
add
cmp
jbe
adc
jne
adc
push
xlat
decl
mov
pop
ds
arpl
or
jns
fdivr
mov
xchg
mov
int
out
sbb
xlat
push
loopne
les
out
in
shlb
xchg
inc
int
test
adc
cmp
pop
adc
add
xchg
gs
cld
add
idiv
into
shl
jp
adc
ret
es
and
es
and
xchg
lret
dec
push
insl
or
push
and
cli
icebp
mov
loope
mov
out
or
xlat
push
and
cli
icebp
sti
rclb
dec
xchg
divl
cmpsb
push
and
movsb
outsb
and
nop
outsb
and
icebp
dec
push
lcall
inc
add
and
incl
cld
test
mov
clc
ret
fs
clc
mov
hlt
arpl
cld
incl
test
jnp
ljmp
fistps
test
call
jb
outsb
outsl
or
rolb
addr16
cmp
inc
insl
testb
ret
sbb
mov
inc
add
mov
les
add
cld
pushl
push
and
rcr
dec
push
adc
mov
outsl
pusha
in
inc
pop
inc
ror
and
int3
aam
testb
dec
mov
imul
out
sub
roll
add
adc
sbb
aam
sbb
orl
hlt
cmpb
hlt
add
inc
mov
pop
push
loopne
insl
dec
call
pop
cmp
inc
mov
in
int3
jbe
icebp
icebp
add
std
push
clc
pop
bound
inc
or
xor
orps
inc
add
inc
clc
or
pop
pop
sub
adc
and
cmpsl
cltd
int3
clc
jmp
add
adc
xchg
clc
arpl
adc
jmp
pop
int3
clc
fcomps
adc
fcoml
adc
jmp
cmp
clc
or
adc
or
pop
adc
es
clc
add
les
add
pop
adc
add
leave
idiv
loopne
cmp
in
cmp
fstl
add
ljmp
add
cmp
add
push
add
lret
incl
cmp
cli
push
cmp
popf
push
add
push
idiv
out
push
cmp
loop
cmp
popf
push
add
mov
idiv
sbb
cmp
std
sbb
add
add
ljmp
add
cmp
pop
push
add
lret
ljmp
sbb
add
ljmp
add
add
add
cld
incl
add
hlt
clc
sti
fwait
sti
ds
sti
ds
cld
incl
in
clc
fcmovne
fdivrs
add
fdivrs
add
cld
incl
in
clc
mov
loope
ds
cld
incl
in
clc
fwait
mov
inc
ds
cld
incl
in
clc
jnp
das
aas
add
das
aas
add
cld
incl
in
clc
pop
pop
in
aas
add
in
aas
add
cld
incl
in
clc
add
outsl
out
aas
add
in
aas
add
cld
incl
out
add
out
add
mov
jmp
jnp
out
fs
add
out
cmp
out
xor
out
push
and
add
out
inc
and
add
and
add
and
add
and
add
out
or
out
in
and
add
cs
add
out
or
out
cld
and
add
and
add
and
add
and
add
and
add
add
pop
rorb
jmp
pop
enter
sbb
jmp
pop
cld
push
jmp
pop
mov
jmp
pop
in
psubsw
call
psubsw
xor
jmp
pop
sbb
jmp
add
nop
psubsw
mov
jmp
pop
fmuls
jmp
pop
xchg
push
jmp
pop
je
jmp
pop
lods
psubsw
test
jmp
pop
lock
xor
add
adc
adc
adc
adc
in
adc
adc
adc
fstl
or
add
adc
adc
adc
fstl
add
fstl
cld
adc
adc
adc
adc
adc
adc
adc
adc
pop
adc
adc
sub
insl
adc
adc
and
pop
adc
adc
cld
pop
adc
cld
adc
cld
or
mov
mov
cld
push
mov
cld
testl
mov
cld
jmp
mov
cld
roll
mov
cld
movsl
adc
cld
mov
sbb
cld
mov
or
cld
mov
adc
cld
mov
mov
cld
scas
adc
out
add
out
fs
out
mov
out
je
out
mov
out
sbbb
add
out
insb
sbb
out
out
out
enter
mov
sbb
out
dec
sbb
out
inc
sbb
out
fcompl
add
sbb
add
aam
out
xor
out
mov
sbb
or
pop
cld
or
pop
clc
or
pop
hlt
or
pop
xor
jmp
pop
sub
jmp
pop
and
jmp
pop
sbb
jmp
pop
enter
int3
or
pop
rorb
pop
push
adc
pop
fs
pop
or
jmp
pop
mov
jmp
jmp
pop
loopne
jmp
pop
sbb
jmp
pop
rorb
jmp
pop
mov
jmp
pop
pop
mov
pop
pop
mov
insl
pop
mov
insl
pop
lods
push
pop
pop
test
pop
pop
movsb
push
sub
pop
pushf
push
sbb
pop
loopne
sub
pop
fmuls
sbb
pop
rorb
in
push
int3
push
add
push
enter
les
fstl
rorl
in
push
iret
push
in
push
scas
paddusw
fs
fstl
jle
lods
push
jp
lods
push
mov
setge
insb
shrd
dec
push
lods
push
setge
inc
push
popf
push
inc
push
add
cld
aas
or
cld
xor
mov
cld
sbb
mov
cld
adc
mov
cld
and
mov
mov
cld
test
mov
cld
dec
in
mov
cld
and
sbb
mov
cld
repz
cld
jmp
mov
cld
jecxz
mov
cld
fildl
mov
cld
movlps
cld
roll
out
mov
pop
out
mov
pop
out
add
sbb
add
pop
out
push
and
add
add
and
add
and
add
add
pop
out
adcb
add
out
pushf
and
add
and
add
and
add
and
add
out
xor
out
jle
out
pop
pop
out
dec
pop
out
push
pop
out
add
add
pop
pop
or
pop
jbe
jmp
pop
scas
or
pop
clc
or
pop
or
jmp
pop
hlt
or
pop
sub
jmp
pop
and
jmp
pop
sbb
jmp
pop
adc
jmp
pop
enter
int3
or
pop
rorb
pop
les
jmp
pop
mov
or
pop
cld
or
add
lock
pop
hlt
or
pop
sub
jmp
pop
decb
jmp
popf
adc
shrd
rorb
mov
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
push
sbb
adc
add
adc
push
in
adc
push
in
adc
push
fstl
into
push
fstl
lret
adc
in
adc
adc
fstl
push
or
adc
add
cld
dec
add
cld
inc
adc
cld
cmp
mov
cld
xor
mov
cld
sub
mov
cld
and
mov
cld
sbb
mov
mov
cld
invd
mov
cld
pop
clc
mov
cld
decl
mov
cld
idiv
mov
cld
out
btc
jmp
mov
cld
jecxz
mov
cld
mov
out
fcomps
out
aam
out
rcrb
add
out
les
out
push
sbb
add
add
mov
sbb
add
out
pushf
sbb
add
sbb
add
out
mull
out
mov
sbb
add
sbb
add
out
test
out
nop
sbb
add
pop
out
loop
out
je
out
pusha
sbb
add
add
out
xchg
sbb
jmp
pop
lea
jmp
add
inc
or
pop
dec
or
pop
lods
add
pop
mov
add
pop
cwtl
add
pop
pushf
add
pop
nop
add
pop
xchg
add
pop
dec
add
jmp
pop
hlt
add
pop
sub
jmp
pop
and
jmp
pop
sbb
jmp
pop
adc
jmp
pop
int3
add
jmp
add
mov
jmp
in
pop
in
in
pop
lock
pop
in
or
pop
call
or
pop
int3
or
pop
sub
popf
pop
int3
or
pop
mov
insl
pop
and
pop
pop
lods
or
push
or
mov
or
cwtl
or
pop
nop
or
sbb
pop
test
sub
pop
mov
sbb
push
je
in
push
jo
add
cld
imul
cld
addr16
lods
cld
arpl
lods
cld
pop
lods
cld
pop
lods
cld
push
push
lods
cld
push
push
lods
cld
dec
lods
cld
dec
lods
cld
inc
push
lods
cld
or
cld
dec
lods
cld
inc
push
lods
cld
inc
push
lods
cld
aas
lods
cld
cmp
lods
cld
aaa
add
lods
cld
xor
lods
cld
pop
lods
cld
sbb
lods
cld
pop
push
lods
cld
adc
lods
cld
paddd
cmpsb
shrd
add
lods
cld
lods
cld
sti
std
lods
cld
testl
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
or
add
or
add
out
mov
or
add
out
lods
or
add
or
out
pushf
or
add
or
add
out
mov
out
orb
add
pop
jmp
pop
dec
pop
jmp
pop
xor
jmp
pop
rolb
add
xor
jmp
pop
pop
pop
jmp
pop
fs
jmp
pop
dec
pop
jmp
pop
push
pop
jmp
pop
cld
push
jmp
pop
sahf
add
pop
stos
add
pop
cmpsb
add
pop
xchg
add
pop
or
jmp
pop
xchg
add
pop
inc
add
jmp
pop
inc
add
or
sbb
adc
in
adc
fstl
lock
adc
or
adc
or
adc
fstl
icebp
or
adc
or
adc
or
adc
or
adc
or
adc
or
leave
or
lds
pop
adc
or
adc
insl
adc
or
or
pop
adc
or
sub
adc
or
cld
icebp
push
lods
cld
lcall
cld
xchg
or
cld
mov
cld
xchg
lods
cld
orb
jp
lods
cld
jbe
lods
cld
jb
lods
cld
rorl
cld
mov
lods
cld
mov
lods
cld
mov
lods
cld
lods
lods
cld
test
push
lods
cld
mov
popf
lods
cld
cltd
lods
cld
xchg
push
lods
cld
xchg
push
lods
cld
lods
cld
mov
lods
cld
test
lods
cld
orl
or
add
or
add
or
add
or
add
out
push
or
add
out
cmp
out
ss
add
out
ds
add
out
inc
or
add
repnz
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
jmp
pop
adc
jmp
pop
mov
push
jmp
pop
scas
push
jmp
pop
mov
jmp
pop
fiadds
jmp
jmp
pop
loop
jmp
pop
lret
pop
push
jmp
pop
jle
jmp
pop
xchg
jmp
pop
outsb
push
jmp
pop
jbe
jmp
pop
sahf
push
jmp
pop
cmpsb
push
jmp
pop
adc
or
adc
sbb
adc
add
adc
sbb
adc
in
pop
bound
in
pop
pop
or
pop
pop
or
pop
push
or
pop
push
or
pop
dec
or
pop
dec
or
pop
inc
or
pop
or
pop
or
pop
or
pop
or
and
insl
pop
push
or
sbb
pop
pop
push
or
lods
cld
adc
lods
cld
or
or
lods
cld
add
lods
cld
std
cld
lods
cld
stc
or
cld
cmc
or
cld
icebp
cld
lods
cld
in
cld
lods
cld
jmp
or
cld
loope
lods
cld
lods
cld
cld
sar
lods
cld
int
lods
cld
leave
or
cld
lds
cld
mov
or
cld
mov
lods
cld
mov
cld
lods
cld
lods
cld
lods
cld
test
or
cld
mov
mov
out
jle
out
jb
out
jbe
out
jp
out
mov
out
orb
add
or
add
or
add
or
add
out
bound
add
out
dec
or
add
or
add
or
add
or
add
cmp
add
out
inc
or
add
out
ljmp
add
or
add
or
add
or
add
or
jmp
pop
testb
pop
sbb
jmp
pop
and
jmp
pop
or
jmp
pop
out
add
pop
push
or
pop
mov
add
pop
ret
pop
movb
pop
stos
add
add
scas
add
pop
mov
jmp
pop
fiaddl
jmp
pop
loop
jmp
pop
lret
pop
into
add
pop
rolb
jmp
pop
jp
jmp
pop
addb
pop
xchg
add
adc
add
pop
adc
add
insl
adc
add
pop
adc
add
sub
sub
adc
pop
sbb
adc
add
sbb
adc
add
in
adc
fstl
pop
pop
fstl
pop
pop
in
adc
in
adc
fstl
dec
pop
fstl
dec
pop
lods
adc
add
popf
adc
add
adc
pop
lods
adc
pop
add
cld
xor
add
cld
sub
lods
cld
and
and
lods
cld
sbb
add
cld
adc
lods
cld
or
add
cld
add
lods
cld
std
or
cld
cmc
or
cld
in
or
cld
in
lods
cld
loope
lods
cld
fisttpll
lods
cld
flds
lods
cld
aad
lods
cld
roll
lods
cld
int
lods
cld
test
lods
cld
orb
cld
jl
add
add
out
pop
or
out
push
or
out
scas
or
out
cmpsb
or
out
jle
out
jp
out
jbe
out
xchg
or
out
mov
out
mov
or
out
xchg
or
out
outsb
push
out
push
out
pushw
out
add
out
ds
out
cmp
out
ss
out
push
push
out
add
add
pop
adc
pop
mov
call
pop
cli
add
pop
incb
jmp
pop
out
jmp
pop
out
add
pop
repnz
pop
push
add
pop
sbb
jmp
pop
and
jmp
pop
or
jmp
pop
adc
jmp
add
mov
add
pop
ret
pop
cmpsb
add
pop
stos
add
pop
scas
add
pop
mov
jmp
pop
fiaddl
jmp
pop
loop
add
adc
add
popf
adc
add
popf
adc
add
insl
adc
add
insl
adc
add
add
sub
adc
add
sub
adc
sbb
adc
in
pop
push
in
pop
add
bound
in
pop
pop
add
add
cld
push
add
cld
dec
add
cld
inc
add
cld
cmp
or
mov
cld
sub
or
cld
and
mov
cld
sbb
mov
cld
adc
mov
cld
or
mov
cld
add
mov
cld
stc
or
cld
icebp
or
cld
jmp
add
out
mov
pop
out
mov
out
add
pop
out
lret
add
pop
out
pop
out
pop
pop
out
dec
pop
out
push
pop
out
mov
out
stos
pop
out
sahf
pop
out
mov
pop
out
jp
out
outsb
pop
out
jb
out
xchg
pop
out
mov
out
jle
out
adcb
add
pop
out
mov
out
xchg
pop
out
jbe
out
add
out
pop
sbb
jmp
pop
ss
pop
push
add
pop
dec
add
pop
dec
add
pop
inc
add
pop
bound
pop
pop
add
pop
pop
add
pop
push
add
pop
repnz
pop
out
add
pop
ljmp
pop
add
pop
incb
jmp
pop
testb
pop
adc
pop
push
add
pop
or
pop
push
add
pop
and
add
push
add
pop
sbb
pop
push
add
pop
mov
call
pop
stos
cld
call
in
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xor
add
stc
add
pop
adc
add
icebp
add
in
add
ljmp
adc
add
adc
add
adc
add
adc
add
cld
lret
cld
movb
mov
add
cld
mov
mov
cld
scas
add
cld
stos
add
cld
cmpsb
add
cld
mov
stos
xor
mov
dec
fcmovb
inc
out
movl
jle
add
adc
mov
inc
add
add
add
inc
sbb
or
add
xchg
stc
push
cmp
clc
mov
jnp
out
inc
sub
add
mov
or
add
pop
inc
and
xchg
inc
sti
imull
add
adc
inc
add
out
shlb
sbb
shlb
jecxz
inc
or
test
pop
fldl
mov
ret
call
add
ljmp
scas
mov
mov
add
jmp
fldt
sub
mov
hlt
and
rcrl
add
push
in
pop
push
jo
add
add
mov
push
jmp
add
adc
aad
das
inc
repz
std
add
adcb
enter
mov
test
push
sbb
lret
inc
lret
jl
add
out
mov
jo
sub
xchg
clc
fcoml
mov
mov
scas
clc
jmp
and
xchg
daa
scas
clc
jmp
lret
jnp
out
add
sahf
pop
sbb
sarb
das
push
insl
add
ficoms
std
andb
sbb
push
sarb
sbb
testl
push
insl
and
pop
cli
aas
lods
adc
jmp
addb
scas
or
sbb
add
pusha
mov
lcall
push
sarl
push
pop
insl
and
sbb
and
jg
shrd
inc
jne
lcall
addl
scas
or
add
or
sbb
inc
and
sbb
jb
inc
dec
incl
mov
stc
mov
pop
add
or
lods
mov
push
cmpsl
aam
lret
jl
fiadds
mov
clc
mov
dec
sbb
xlat
jl
add
jle
out
mov
mov
inc
ds
sub
xor
stc
push
adc
shll
int
xchg
adc
cmp
loope
imul
add
cmpsb
add
sub
inc
xchg
adc
and
jecxz
add
jmp
inc
add
sbbl
stos
and
xlat
gs
and
call
int
stos
and
add
imul
pop
jmp
int3
rclb
fcmovne
test
cmp
hlt
and
out
aas
out
stc
scas
inc
addr16
pop
adc
stos
test
call
stos
add
jge
in
mov
sub
jmp
and
clc
dec
insb
push
push
call
and
mov
cs
push
push
call
in
mov
xchg
or
push
stos
sbb
inc
lret
jl
jecxz
mov
subl
jmp
fcomi
incl
scas
enter
adc
inc
jne
xchg
cmp
jge
cmc
insb
add
pop
xchg
cmp
jge
adc
test
idiv
mov
adc
ret
xchg
fdiv
incl
jnp
out
push
insl
push
xor
shl
jnp
sbbl
cli
pop
xchg
cmpsb
loopne
add
testl
add
shl
mov
outsl
fcomi
incl
dec
adc
stc
test
mov
inc
daa
ds
sbb
cli
mov
xabort
jge
inc
push
mov
and
inc
cmp
adc
sbbb
clc
sbb
sar
cmp
stc
test
add
cmp
add
cmpl
rol
clc
add
cli
jns
out
mov
and
adc
aad
test
jl
mov
inc
push
add
adc
add
xchg
pop
bnd
jmp
leave
test
sub
bound
test
repnz
imul
leave
dec
mov
gs
push
adc
mov
sub
insl
aas
cli
adc
and
push
mov
cmpsl
gs
push
push
flds
in
test
leave
in
sarb
aam
cmpsb
inc
jge
or
ds
xchg
stos
and
sarl
in
cmpsb
and
out
sbb
cmp
stc
sub
cmpsb
add
mov
add
ljmp
or
sub
scas
cld
fmull
push
jbe
jae
subb
ljmp
jge
dec
adc
pop
mov
pop
mov
sahf
dec
addr16
movsl
jae
subb
ljmp
jge
or
cmpsb
clc
jmp
int3
push
jae
subb
ljmp
call
sub
sbb
mov
aas
cli
push
mov
mov
jne
sahf
push
dec
call
scas
xchg
jne
add
out
into
idiv
sahf
xchg
jne
jae
or
sbb
and
lcall
je
xchg
jne
push
inc
sbb
sbb
or
sub
idiv
pop
enter
int
mov
nop
cmp
out
inc
int
call
pop
pop
push
add
cmpsb
loopne
call
push
adc
add
sbb
mov
fwait
add
hlt
xchg
popf
jge
repnz
xbegin
sbb
xbegin
repnz
xbegin
sbb
enter
jge
adc
enter
jge
cli
mov
add
enter
jne
push
lods
aas
sbb
add
push
mov
jecxz
jle
repnz
dec
add
fld
clc
lret
out
jge
sbb
push
push
lods
xchg
lods
mov
in
adc
dec
or
jnp
pushf
dec
in
lds
inc
push
pop
push
imul
lds
inc
notb
cmp
arpl
mov
cli
dec
daa
cli
frstpm(287
mov
sbb
push
sub
fistl
mov
xchg
add
add
sahf
jno
mov
fldl
js
dec
add
mov
push
pop
aas
cli
adc
and
push
add
fwait
clc
push
push
add
fwait
mov
xchg
mov
fwait
mov
jnp
mov
jl
jle
insb
cmp
sti
inc
pop
jl
jb
jae
add
jo
mov
pop
push
jae
pop
jnp
cmpsb
inc
pop
jnp
add
sub
inc
pop
jnp
sbb
clc
jbe
pop
jnp
add
sqrtps
clc
pop
test
push
ljmp
clc
add
mov
mov
inc
push
xchg
cmp
mov
nop
scas
clc
je
mov
mov
stc
je
mov
mov
je
insl
das
stc
push
aad
jge
sbb
test
pop
add
xor
fnstcw
pop
sbb
scas
push
cli
prefetchnta
call
adcl
sti
jae
outsl
or
xchg
aam
call
scas
cwtl
jne
jmp
pusha
idiv
add
cmpb
aaa
add
fidivrs
jp
repnz
shrd
mov
xchg
out
add
aas
adc
and
jge
lods
or
cmc
adc
testl
push
clc
imul
pop
sarl
dec
or
shl
bound
add
mov
or
orl
add
adc
aas
in
lahf
pop
xchg
out
xchg
mov
xchg
in
pop
lods
mov
or
ljmp
cmp
gs
notb
je
pushf
push
out
sarl
jns
lods
xor
push
sbb
sub
stos
adc
xchg
cmp
pop
sub
stos
and
in
add
jecxz
and
lahf
xchg
lds
add
adc
jns
mov
add
cmp
call
sub
adc
clc
inc
push
lods
repnz
lds
ljmp
add
iret
outsl
fwait
clc
push
add
pushf
imulb
jl
add
cmc
testb
sbb
lahf
lock
jnp
or
ss
clc
dec
pop
jnp
add
xadd
sbb
ljmp
clc
stos
mov
adc
rorb
call
lcall
push
call
ret
push
cwtl
repnz
addl
cmp
add
aam
and
push
cli
shrd
add
pusha
mov
jge
add
push
add
xlat
addl
scas
or
adc
mov
inc
outsl
mov
lcall
testl
push
sbb
mov
call
ret
inc
rolb
push
cmpsb
dec
sbb
rorl
test
adc
addl
stc
xor
pop
add
push
inc
daa
and
fimuls
jns
movsb
std
in
cmp
outsl
fisttpll
xchg
stos
clc
mov
push
lods
clc
test
xor
movsl
add
ja
decb
mov
add
mov
iret
dec
outsl
cld
incl
inc
sbb
jmp
shll
pop
int
test
or
mov
lahf
mov
cmpsl
pusha
jae
scas
addr16
adc
gs
fisubl
in
shrb
xchg
jmp
ret
icebp
mov
insl
ja
stos
outsb
ja
and
jo
sbb
pop
or
cs
push
or
pop
adc
push
dec
pop
push
call
pcmpeqd
pop
jle
out
arpl
adc
lds
add
stos
loop
push
lds
push
lods
sahf
mov
imul
jne
mov
pop
pop
out
add
les
fwait
xchg
sarl
or
push
imul
lods
push
mov
ret
clc
or
popl
jmp
or
iret
stos
mov
sbb
fsub
or
scas
mov
test
xchg
mov
or
ljmp
mov
jmp
movsb
or
mov
fsubrs
pop
jnp
add
add
loopne
clc
inc
mov
aam
fwait
test
sbb
clc
inc
push
xchg
cmp
inc
push
push
add
sbb
and
add
pop
stc
lcall
popa
idiv
outsb
fimull
jge
adc
push
xchg
lock
xor
jl
mov
roll
jbe
xor
insl
or
pop
clc
jae
insl
pop
clc
add
xor
insl
aaa
push
pop
cli
je
insl
dec
clc
sbbb
je
insl
push
add
sarl
imul
out
mov
testb
std
out
shlb
mov
jb
mov
sbb
aas
push
add
int
mov
add
cld
test
add
mov
cmc
push
div
rorl
jp
test
lods
clc
mov
stos
cld
jnp
and
mov
xchg
add
add
adc
mov
das
add
mov
cwtl
movsl
stos
xchg
lahf
sarl
hlt
gs
and
cmpsb
ret
out
add
pop
inc
or
pop
inc
and
pop
add
adc
sbb
xchg
mov
or
jmp
das
cld
xchg
jmp
add
lods
data16
xchg
and
add
outsl
lds
xchg
inc
or
lcall
pop
hlt
gs
lcall
mov
or
add
mov
lods
inc
ficomps
mov
push
call
sub
call
and
sub
fstpt
clc
pop
cmp
mov
jnp
add
push
xchg
or
fnstcw
cld
mov
push
add
mov
push
add
add
movsb
clc
shrl
movsb
or
push
sbb
repz
adc
jmp
jp
cmp
mov
fistl
call
out
fisttpll
jge
adc
inc
mov
test
sbb
shl
add
sarl
sub
jnp
and
arpl
ljmp
adc
mov
test
add
mov
andl
adc
lods
adc
mov
pop
mov
adc
jg
imul
jns
add
xchg
mov
call
sar
inc
sub
jae
sub
sub
sbb
lods
clc
sub
aas
push
add
leave
mov
add
cld
test
add
add
cld
js
xchg
dec
in
jecxz
jge
repnz
xor
ds
clc
lret
jmp
cld
jnp
and
mov
xchg
jge
adc
xor
lods
push
mov
xchg
and
std
imul
mov
jb
jae
loope
out
cmp
stos
cmpsb
mov
xchg
movsl
addb
add
or
lcall
sub
movsl
stos
mov
std
add
lock
icebp
adc
je
xchg
out
add
out
add
push
ret
call
adc
jb
xchg
out
add
out
add
lds
add
fbstp
xchg
call
pop
adc
mov
notl
add
add
adc
jmp
dec
nop
clc
mov
adc
adc
adc
jmp
cmp
clc
cmp
clc
jmp
pop
adc
push
dec
nop
clc
mov
mov
adc
jmp
ret
clc
inc
add
lods
jo
clc
jmp
pop
adc
test
lock
dec
xor
push
add
popf
push
add
popf
push
sti
decl
add
dec
or
lcall
push
add
xor
push
daa
add
mov
push
add
insl
push
add
inc
gs
call
and
add
add
add
sub
gs
pushl
and
add
add
ljmp
push
add
inc
fs
inc
and
add
push
cld
incl
fstl
add
std
gs
pushl
and
sti
incl
cld
incl
cld
incl
into
cld
mov
or
add
imul
add
cld
incl
iret
cld
mov
cld
incl
cld
incl
cld
incl
cld
incl
cld
incl
cld
dec
add
cld
inc
add
cld
xor
sub
cld
and
cld
sbb
mov
or
cld
add
mov
cld
xrelease
jecxz
mov
mov
enter
rclb
mov
test
ret
nop
pop
mov
nop
nop
push
mov
adcb
mov
push
pusha
nop
mov
mov
add
test
inc
nop
cmp
sbb
sub
add
sbb
mov
add
mov
lock
aam
call
nop
clc
les
clc
pop
les
clc
inc
les
clc
xor
nop
clc
jae
nop
clc
mov
les
clc
ret
les
add
push
nop
clc
jmp
fisttpl
clc
jge
clc
gs
clc
jns
clc
ja
clc
xorl
mov
clc
lahf
xchg
clc
mov
clc
repz
clc
shll
clc
sbb
sub
sti
push
std
sti
ljmp
sti
pushl
jno
sti
call
sti
decl
sti
lcall
sti
lcall
add
call
add
lcall
add
call
cld
decl
add
incl
add
decl
sti
jmp
sti
sti
lcall
add
incl
cld
decl
cld
cmp
cld
incl
add
cld
jmp
add
call
add
incl
add
outsl
cld
sti
cmc
outsl
cld
repz
outsl
cld
jmp
outsl
cld
jecxz
jo
fstpt
jo
lret
fldt
ret
jmp
cld
mov
sbb
cld
stos
pop
cld
mov
mov
cld
xchg
push
mov
cld
andl
cld
jae
sar
imul
cld
arpl
aam
pop
mov
int
dec
jnp
cld
add
push
cld
xor
fs
and
fs
adc
imul
sbb
cld
push
mov
imul
xor
mov
push
mov
push
mov
enter
rorb
mov
jl
test
mov
mov
nop
mov
imul
jo
into
imul
call
insb
push
mov
insb
dec
mov
mov
insb
xor
insb
and
aaa
mov
clc
aaa
jno
clc
das
imul
clc
aad
mov
jmp
mov
jne
mov
inc
pop
mov
xor
mov
cltd
das
mov
insl
add
mov
outsl
pop
mov
shrl
mov
lahf
das
mov
mov
pop
mov
int
xchg
out
xchg
sbb
xchg
and
xchg
sub
xchg
inc
rolb
clc
int
xchg
pop
mov
xchg
pop
mov
add
push
add
cmp
cld
ljmp
add
ljmp
cld
call
sti
in
push
add
loope
sti
incl
cmc
fs
lcall
sti
in
push
add
jmp
add
mov
add
popf
push
add
pop
lret
adc
mov
sti
lcall
int3
sti
decl
int
cmp
sti
ljmp
int
ljmp
int3
sti
jmp
int3
sti
sti
ljmp
int
incl
mov
sub
cld
add
outsb
mov
sbb
adc
mov
add
mov
repz
mov
jecxz
mov
fcmovnu
mov
shrl
incl
mov
mov
jnp
incl
mov
cld
xchg
jnp
incl
mov
cld
jnp
mov
cld
imul
arpl
cld
add
mov
cld
dec
adc
movl
xor
in
mov
sbb
sbb
or
data16
jp
lock
call
mov
fmuls
push
enter
rorb
shll
mov
mov
roll
mov
mov
push
sarl
shll
ret
ret
mov
ret
fiaddl
clc
out
inc
xchg
flds
clc
lret
inc
xchg
jge
xchg
mov
clc
xchg
dec
xchg
scas
pop
xchg
fwait
inc
xchg
outsl
inc
xchg
push
lds
clc
inc
mov
push
mov
mov
mov
xchg
mov
mov
mov
jns
mov
cmc
enter
rorb
xadd
clc
cmp
leave
mov
or
dec
mov
xor
clc
pop
dec
mov
inc
inc
mov
add
push
sti
jmp
push
sti
incl
dec
sti
push
dec
sti
call
dec
sti
ljmp
push
sti
ljmp
push
sti
in
push
sti
stc
push
sti
incl
pop
push
sti
ljmp
sti
call
push
sti
incl
push
sti
lcall
push
sti
lcall
push
sti
mov
push
sti
jmp
sti
push
sti
ljmp
push
sti
aas
push
sti
jg
sti
decl
push
sti
aas
push
sti
incl
mov
cld
pop
jl
incl
sar
inc
jb
cld
add
jl
incl
into
cld
and
int
sbb
int3
cld
adc
int3
cld
or
int
add
sti
mov
cld
repz
int3
cld
jmp
int3
cld
jecxz
int3
cld
fcmovnbe
int3
cld
rcr
int3
cld
lret
jmp
mov
mov
insl
int3
cld
stos
sbb
cld
mov
stos
int3
cld
xchg
push
int3
cld
mov
out
add
repz
add
sti
add
lock
call
mov
dec
test
add
push
add
xchg
aam
xor
les
sbb
cmp
xchg
add
in
add
icebp
add
sbb
add
in
add
aad
add
jmp
add
mov
test
add
mov
mov
test
add
jp
xchg
in
adc
jmp
push
xchg
adcl
clc
test
xchg
addr16
push
push
xchg
mov
clc
lea
clc
popf
push
xchg
xor
xchg
xchg
xor
xchg
mov
pop
adc
fildll
clc
cmc
add
clc
jns
cmp
xchg
cmp
jnp
clc
fwait
jae
clc
mov
clc
jmp
push
iret
pop
add
pusha
gs
dec
pop
inc
les
pop
add
orl
cmp
xchg
xor
dec
jnp
popa
insb
mov
xchg
scas
inc
pop
popa
fnstenv
imul
ss
jmp
insb
gs
jo
les
pop
push
add
sbb
mov
sbb
add
orl
cld
inc
push
outsl
add
insb
je
aad
je
sbb
and
insb
je
jo
enter
aam
pop
inc
add
sbb
dec
adc
ja
pop
bound
mov
sbb
jmp
mov
je
xchg
pop
gs
test
insb
cld
fldl
mov
addr16
negb
cmp
cmpsl
lret
pop
dec
test
ljmp
xchg
iret
outsb
insl
inc
adc
arpl
adc
jmp
popa
jge
outsb
pop
xchg
arpl
xchg
add
adc
push
sbb
ficompl
loope
shrb
cmc
pop
inc
test
rolb
push
mov
pop
imul
xorl
add
xchg
push
mov
jecxz
sbb
sbb
and
lcall
push
mov
adc
mov
inc
sbb
aas
xor
xchg
or
adc
ja
add
icebp
adc
cmp
out
aas
pop
or
push
push
add
jmp
faddl
dec
into
jecxz
insb
int3
dec
loope
push
jmp
faddl
push
mov
sub
insl
xchg
sbb
or
adc
jp
lods
sbb
inc
nop
sbb
jge,pt
repnz
arpl
adc
ss
imul
inc
aam
cmp
cmp
adc
cmc
or
bound
pop
sub
arpl
adc
popa
add
inc
push
in
jmp
push
aas
roll
outsl
push
fldenv
mov
adc
add
je
lret
sbb
gs
xor
dec
sub
add
jb,pt
sub
imul
test
scas
sub
shrl
push
jb
ss
jae
cmp
add
pop
aas
gs
fsubrs
ss
das
push
int3
sub
add
inc
push
jb
cmp
sbb
gs
sub
xor
and
cmp
dec
das
pop
pusha
xor
ja
insl
cld
ret
or
and
and
mov
js
insl
cld
std
add
dec
adc
adc
insb
cld
cmp
leave
das
pop
add
mov
pop
mov
ja
insb
cld
inc
or
sub
popf
cld
mov
movsl
loopne
push
fwait
int
push
cmp
pop
xchg
cmp
nop
insb
cld
mov
sub
arpl
and
adc
add
add
pop
out
daa
add
pop
or
xor
out
pop
sbb
add
or
add
mov
daa
out
mov
add
repnz
movl
lcall
into
jnp
mov
jbe
cmpsl
int3
inc
sub
adc
or
out
inc
sub
xor
jnp
add
xor
shll
sub
arpl
sub
sbb
ljmp
adc
jecxz
and
shrb
loopne
inc
fucomi
lock
sti
lock
fsubr
bound
sub
mov
add
sbb
push
sbb
jmp
pop
jne
ljmp
faddl
dec
push
out
imul
cmp
pop
outsb
add
pop
inc
add
ds
jo
sbb
jg
sub
gs
shll
dec
imul
pop
inc
jne
sub
cld
sbb
mov
pop
or
sub
jne
sub
push
insl
pop
out
add
pop
popa
jns
je
insl
pop
in
fwait
sub
js
insb
inc
add
sub
test
loop
fwait
sub
mov
inc
addr16
pop
add
add
add
rcll
arpl
cmovnp
sub
insl
cld
clc
add
or
fs
jp
imul
imul
push
and
pcmpeqb
push
imul
push
pcmpeqb
dec
or
xor
mov
outsb
jmp
dec
xor
xchg
insb
xlat
cwtl
push
insb
jmp
sub
inc
test
and
mov
dec
sub
out
out
adc
xor
adc
cld
out
mov
repz
cmp
adc
push
pop
sub
jno
xor
adc
daa
add
sar
adc
add
add
adc
ret
adc
inc
adc
xor
adc
add
ljmp
fsubr
mov
pop
out
cs
add
out
xchg
aaa
out
jbe
stos
out
dec
decl
pop
shrb
fdivs
aam
push
aam
inc
inc
fdiv
push
push
sub
shll
add
jae
pop
adc
lds
add
data16
and
push
or
hlt
lock
add
add
jecxz
fldl
ljmp
ss
lcall
arpl
and
add
test
jmp
add
sbb
add
mov
pusha
insb
rolb
insl
rorb
add
xor
jecxz
insb
gs
adc
add
xor
pop
push
inc
push
pop
inc
and
xor
pop
push
add
pop
add
xor
insb
adc
in
add
je
mov
pop
dec
lret
xor
je
pop
sub
fs
xor
add
push
aas
add
and
adc
dec
push
popf
cld
int3
add
cli
sub
mov
add
push
sbb
adc
inc
arpl
or
inc
dec
gs
push
jae
into
sbb
add
add
and
imul
pop
xor
cmp
adc
add
add
jns
outsb
sbb
sbb
mov
pop
cld
adc
cmpsb
sbb
sbb
inc
ds
inc
das
add
stc
imul
fwait
adc
add
daa
push
and
scas
out
sbb
incl
sbb
addl
cmpsl
in
inc
pshufw
dec
dec
repz
and
dec
pop
add
cltd
add
sbb
add
inc
add
or
inc
cld
sbb
fiadds
sub
out
dec
cs
rcll
sbb
adc
in
lock
adc
adc
xchg
imul
mov
out
xchg
icebp
enter
adc
pushw
shll
enter
or
arpl
aam
mov
adc
inc
or
bound
lock
pop
loope
imul
add
xlat
pop
xor
pop
lret
outsl
inc
sub
jno
and
push
jmp
and
out
pop
adc
insl
push
out
insb
cli
cmp
lcall
test
push
mov
lods
sub
outsl
ds
add
and
insl
adc
stos
xor
sub
and
mov
add
loopne
dec
gs
cmp
das
je
sub
es
test
insb
push
pop
xor
add
sahf
push
dec
gs
push
jb
aaa
pop
jae
fcompl
push
jno
insl
jae
imul
sub
mov
sldt
sub
push
inc
add
and
or
add
clc
dec
jmp
pop
and
and
or
add
incb
nop
sub
mov
pop
insl
mov
sbb
add
stc
push
mov
aas
push
xchg
push
cmp
cmpsl
dec
mov
xor
add
sbb
or
outsb
insl
xor
addr16
xor
or
das
sbb
adc
jb
jae
add
call
and
arpl
adc
enter
daa
and
ret
cmc
ret
adc
add
clc
mov
jmp
enter
mov
sar
adc
popa
add
decl
and
out
inc
adc
xchg
xlat
add
add
adc
call
out
jg
xor
add
add
cs
dec
add
pop
inc
sti
or
inc
in
cmp
adc
sub
clc
sub
and
repnz
icebp
adc
mov
rep
into
hlt
hlt
ljmp
sbb
add
data16
ret
incl
fldcw
cli
add
mull
mov
std
bound
adc
adc
add
in
bound
bound
adc
lods
or
imul
insb
push
sub
cmpsl
cld
imul
add
add
ljmp
cli
hlt
pop
adc
in
into
jae
adc
push
add
punpckhdq
insb
inc
lahf
cmp
xor
dec
imul
cmp
add
dec
cmp
push
add
addr16
sub
dec
push
jle
pop
je
cmp
cmp
outsl
jnp
insb
nop
sub
sahf
packuswb
cmp
add
fimull
xor
sub
sti
aaa
insb
insb
fstl
cmp
push
adc
add
inc
sbb
add
mov
insb
jb
or
add
add
imul
push
outsb
cld
rolb
rcll
adc
roll
pop
adc
lods
adc
mov
xor
jno
test
arpl
cltd
daa
insl
mov
and
add
add
lock
arpl
sub
insl
add
add
int
addr16
push
jno
adc
jo
add
push
or
push
adc
insl
push
adc
sub
addr16
out
sub
xor
adc
xor
hlt
es
mov
inc
jecxz
sbb
clc
rcrl
add
fiadds
iret
clc
aad
shl
lret
aaa
jecxz
les
xlat
out
add
xchg
es
and
xchg
xor
adc
es
loop
sub
adc
daa
cltd
loop
sub
addr16
add
and
js
push
and
jb
add
shll
or
jecxz
push
out
push
jmp
jmp
cmp
adc
push
jmp
jmp
cmp
mul
jb
sub
stc
push
shll
enter
adc
push
pop
push
shll
or
imul
add
shll
test
pushl
repz
clc
int3
pusha
dec
rcll
add
fbld
inc
int
push
or
adc
sub
je
dec
add
dec
cmp
adcl
popa
outsb
or
je
in
aas
gs
rcrl
aaa
pop
fcoml
jbe
pop
cmp
add
rcrl
dec
cvtdq2ps
adc
dec
dec
add
add
xchg
push
pop
outsl
sub
or
js
jo
scas
and
cmp
imul
adc
push
arpl
outsb
push
jge
mov
aam
arpl
add
push
cs
je
add
sub
inc
imul
add
decb
sbb
pop
pop
sbb
add
add
dec
inc
cmp
in
push
and
mov
imul
mov
sbb
mov
pop
jecxz
xor
add
add
mov
imul
cld
cmp
fwait
push
dec
mov
adc
add
ret
aas
push
push
sti
inc
xor
add
aas
push
pop
ret
aas
push
pusha
sti
sbb
adc
aaa
cmc
add
daa
notl
add
adc
adc
icebp
pop
sub
icebp
cmc
adc
repz
xor
adc
add
lock
ror
add
lock
out
mov
add
rclb
cmpsl
notb
movsl
cld
mov
add
adc
sub
shrb
sbb
arpl
adc
filds
cmp
bound
adc
pop
push
shll
sbb
imul
pushf
and
fmul
jae
div
imul
cli
out
dec
or
std
jae
pop
ja
mov
and
arpl
pop
push
jmp
jecxz
into
es
arpl
jmp
ljmp
mov
fbld
sub
add
mov
pop
je
sub
pop
das
pop
gs
adc
add
pop
imul
pop
push
dec
xor
sbb
call
pop
je
or
inc
jne
add
jo
xor
divl
pop
je
adc
add
lcall
repnz
fs
add
popa
outsl
dec
and
aas
mov
sub
je
mov
addr16
das
je
mov
dec
add
sub
xchg
and
adc
xchg
or
add
cld
cmp
mov
adc
into
adc
add
add
fcoms
je
sub
add
sub
xor
sub
pop
insl
aaa
sbb
or
sbb
sub
add
add
adc
popa
pop
push
in
sbb
test
adc
dec
add
adc
dec
sub
jno
mov
xchg
sbb
gs
lock
iret
mov
mov
adc
add
jb
inc
pop
add
xor
pop
lock
adc
loopne
adc
push
add
adc
push
addr16
cmp
inc
icebp
xor
xor
and
inc
icebp
sbb
xor
add
adc
movntq
out
movsl
pop
fnclex
aad
add
jp
shl
inc
repnz
rcrl
mov
leave
and
adc
xlat
pop
sub
sbb
xchg
sbb
jo
add
std
pop
mov
std
out
dec
mov
loop
fildl
sub
repz
and
jo
adc
pop
sub
cmp
repz
hlt
lock
sub
les
adc
addl
cmp
bound
cli
jb
adc
push
pop
mov
and
repnz
sub
in
out
dec
sti
in
ds
sbb
inc
int
les
add
and
bound
cltd
push
pop
outsb
cwtl
sub
shlb
adcl
ja
adc
imul
jo
movsb
adc
push
inc
dec
pop
or
mov
push
dec
xor
inc
cmp
outsb
push
pop
std
pop
inc
fstl
dec
add
xor
insb
push
sbb
je
popf
adc
add
xor
mov
cs
paddsb
out
push
imul
popa
pop
das
gs
xor
add
adc
popf
cld
lock
xchg
pop
out
sub
aam
or
test
jp
push
add
xchg
adc
jle
imul
decb
xchg
sbb
cwtl
push
cmp
dec
cmc
sub
add
add
leave
arpl
push
add
push
xor
push
xor
arpl
cmp
imul
or
push
cmp
xor
jo
popa
cmp
push
adc
insl
cld
xchg
add
pop
adc
and
clc
mov
cmpsl
add
mov
push
mov
leave
and
clc
mov
mov
mov
sahf
call
mov
cwtl
into
orl
xchg
add
clc
out
push
adc
dec
push
ja
push
pop
pop
int
add
push
xor
adc
adc
pop
clc
inc
or
pop
sti
or
cmp
or
xor
add
pop
adc
fsin
inc
add
add
add
sti
insl
fldl
ret
imul
dec
movsb
adc
lock
pop
inc
ljmp
jmp
jmp
nop
or
pop
popf
adc
bound
cmc
ljmp
and
dec
mov
pop
ljmp
push
jmp
outsl
ds
inc
dec
call
add
pop
outsb
xor
call
insl
push
call
bound
add
outsl
adc
xchg
add
aad
imul
adc
pop
inc
dec
add
inc
sbb
jns
or
dec
gs
aam
outsl
mov
inc
gs
out
add
add
addb
mov
pop
outsb
sub
add
add
aad
je
pop
push
push
pop
clc
dec
push
inc
jo
dec
push
icebp
arpl
sbb
repnz
push
add
jne
push
insl
je
gs
add
cli
cmp
or
jae
xor
shrb
pmaxsw
sbb
insl
loope
lock
jnp
scas
repnz
in
out
dec
loope
xlat
popf
ret
insb
fstps
cld
nop
add
xchg
dec
xchg
xchg
mulb
xchg
in
mov
mov
sbb
loopne
jno
lock
add
out
push
mov
out
popa
mov
out
xor
jmp
imul
ja
adc
add
xor
jmp
inc
fcompl
add
adc
clc
aad
cli
clc
out
imul
lret
in
mov
in
fprem
xchg
call
mov
stos
call
mov
sub
add
cmpsb
repnz
cmc
stos
out
cmpsb
loop
cmc
push
jp
imul
push
add
out
dec
cli
data16
aad
loop
bnd
dec
in
loop
clc
cmp
decl
mov
push
add
loope
add
insl
adc
pop
clc
and
aad
cmc
pop
icebp
pop
fdivl
jae
add
insb
lret
outsl
aad
lock
enter
orb
bound
cmp
jae
inc
icebp
insb
mov
cmc
outsl
popf
adc
dec
mov
ljmp
mul
inc
mov
aad
jp
int
pop
out
call
shl
ds
xlat
loop
add
jne
outsl
push
pop
pop
js
cmp
jmp
cmp
insb
push
or
add
je
outsl
xchg
gs
js
adc
jo
pop
push
cld
pop
pop
dec
cmp
pusha
add
popa
insb
dec
cmp
pusha
inc
cmp
pop
add
adc
gs
pop
outsb
dec
gs
push
xchg
jne
ljmp
jbe
insb
data16
jae
popa
fs
adc
arpl
mov
push
push
insb
dec
outsl
push
pop
push
add
loopne
add
sar
lret
xlat
add
mull
pop
out
sub
sbb
jb
pop
jmp
push
add
add
pusha
jecxz
xlat
add
jnp
enter
lret
add
cld
test
jecxz
fcompl
out
lods
dec
out
mov
fstl
pop
cld
dec
movsl
jle
ds
mov
imul
lock
loope
dec
popa
nop
jmp
pop
pop
adc
lock
out
xlat
fistpl
add
and
pop
icebp
cmp
push
cmc
dec
stc
es
out
popa
adc
int3
inc
icebp
adc
pop
icebp
sub
add
adc
clc
sbb
and
add
adc
sti
repz
add
adc
imul
mov
add
fbstp
les
pop
pop
add
sahf
jecxz
int3
mov
lds
fists
or
add
loopne
ret
jmp
repz
inc
sub
sar
cmp
out
daa
fucomip
arpl
scas
out
bound
cmpsl
in
bound
or
lcall
cmpsl
out
cs
out
sbb
in
pop
add
ret
incl
add
jb
insb
cmc
dec
stc
data16
fidivrl
pop
clc
cmpsb
pop
les
pop
aam
mov
sub
insb
shrb
in
push
jmp
es
mov
lds
xor
cltd
push
in
jg
ljmp
xchg
adc
data16
arpl
inc
jb
add
push
popa
xor
jae
insl
push
dec
pop
addr16
aas
clc
incl
scas
adc
cmp
jo
add
imul
adc
data16
pop
jo
push
clc
pushl
push
popa
inc
insl
inc
popa
xor
sub
adc
insb
push
xchg
adc
insb
push
add
lock
sti
jge
dec
pop
lods
int3
inc
add
scas
add
xor
jae
shl
arpl
rcrl
ret
int3
mov
shl
pop
sbb
data16
shrb
std
fdivl
imul
add
mov
jae
stc
add
das
enter
and
cmpsl
fistps
in
jae
inc
icebp
insb
movsl
push
xor
cld
inc
lcall
fwait
enter
in
out
out
out
adc
loopne
movb
jmp
xchg
loopne
loope
aaa
sub
inc
call
or
xor
jmp
ret
xor
sub
dec
add
adc
adc
inc
loop
jmp
fsts
popa
add
or
div
adc
jmp
out
out
in
out
adc
add
out
loopne
ret
aam
mov
in
loopne
adc
roll
imul
and
clc
pop
sbb
stc
icebp
pop
jge
int
jp
mov
mov
push
clc
jge
sbb
out
in
imul
loopne
jmp
lods
int
push
mov
pop
inc
lahf
loopne
sbb
mov
sbb
pop
sbb
imul
outsl
loopne
and
push
clc
push
pop
icebp
sub
sub
sub
pop
pop
imul
imul
cmove
xor
bound
data16
jmp
adc
gs
inc
inc
xchg
imul
adc
jb
jb
sub
push
dec
outsl
insb
imul
sbb
jno
fisubrs
jo
fs
lods
adc
into
xor
gs
arpl
pop
xor
sub
push
pop
pop
popa
imul
ret
add
arpl
add
ret
pop
mov
cld
faddl
fldcw
sahf
flds
push
or
test
call
dec
mov
jbe
mov
dec
gs
inc
inc
imul
push
jp
jae
enter
into
loope
lret
mov
inc
sub
mov
pushl
pop
lret
push
hlt
push
sub
cld
decl
cmp
fs
dec
xlat
push
out
repnz
lds
lret
out
aad
mov
loope
aad
cmpsl
les
cmpsl
out
mov
mov
fbstp
in
mov
loopne
fisttps
out
sti
push
int3
add
cmpsl
shlb
out
push
mov
out
and
flds
loop,pn
lock
xor
inc
lret
aaa
out
adc
rcr
fcoml
jecxz
shl
icebp
adc
roll
cli
out
mov
shl
ret
adc
push
aaa
adc
bound
dec
test
mov
filds
pushf
inc
xor
mov
shlb
mov
jmp
and
pop
lea
shll
mov
pop
fidivl
push
clc
and
adc
xlat
push
jg
shrb
out
jae
out
pop
jmp
fcmovnb
jae
sarl
packsswb
xchg
mov
jae
push
shrb
push
xor
adc
outsl
inc
inc
jo
cmp
pop
inc
pop
insl
incb
jb
pop
clc
decl
cmp
inc
cmp
pop
push
jno
push
sbb
nop
push
dec
pop
inc
addr16
push
pop
jb
arpl
jb
mov
inc
cmp
add
popa
data16
je
inc
inc
outsb
push
inc
addr16
sbb
je
inc
push
je
push
pop
jb
cmp
imul
ss
and
jae
dec
std
dec
lret
ja
and
jae
pop
out
jae
inc
jecxz
jmp
jle
push
aam
das
cs
inc
lcall
dec
add
cmpsb
fcos
or
js
in
dec
jno
out
jbe
test
cld
outsb
add
loop
popa
int
bound
fsubrl
fsub
jae
cmp
cltd
add
fnsave
or
mull
add
outsl
adc
fsubrl
adc
add
xor
divl
xor
mul
rorb
arpl
add
repnz
xlat
clc
cmpsb
fcmovb
cmp
add
ret
ret
test
sahf
call
cwtl
shl
add
lahf
divl
mov
pop
mov
xor
aad
add
mov
loop
enter
mov
and
aaa
mov
and
dec
pop
out
imul
pop
xlat
imul
jp
dec
stc
jae
push
dec
pop
xlat
imul
push
loopne
aad
mov
ds
xor
outsl
lcall
jb
sbb
inc
mov
pop
fdivl
neg
bound
loopne
js
mov
jne
push
jmp
in
bound
mov
cmp
stos
ret
cmpsl
ret
leave
in
imul
ss
arpl
push
clc
pushl
sbb
fnstenv
push
clc
dec
dec
jne
inc
jno
or
pop
inc
sbb
popa
insb
cld
xor
mov
gs
xor
je
xor
fs
adc
imul
gs
inc
pop
jae
imul
pop
adc
gs
pushw
add
push
data16
cmp
mov
add
sbb
pop
ss
cmp
pop
insb
popa
add
lock
inc
imul
loop
cmp
cld
dec
add
divl
cld
out
ss
jb
sub
inc
loope
call
ljmp
cld
inc
repnz
loope
ljmp
fs
fdivrs
add
mov
int
rcll
push
fsubrs
xchg
sub
adc
imul
loope
pop
stos
loope
inc
mov
jmp
cld
dec
imul
icebp
popa
push
repnz
push
adc
jmp
dec
mov
fldenv
mov
leave
sbb
xlat
adc
dec
fcomi
xor
mov
loopne
dec
loopne
lds
push
clc
out
adc
hlt
call
pop
dec
pop
aam
fists
lds
add
adc
fisubrs
dec
dec
or
lret
push
pop
mov
testl
les
fistps
jp
inc
mov
add
add
loopne
clc
rorb
mov
outsl
jmp
lods
mov
dec
clc
push
or
jo
mov
decl
in
jb
jl
jo
pop
cmp
add
mov
clc
mov
in
jno
cmp
outsl
sti
xor
cld
lds
mov
imul
add
jno
pop
mov
jae
and
add
shll
data16
inc
outsb
add
push
dec
gs
pusha
insl
gs
aas
dec
popa
dec
inc
pop
push
popf
push
std
jmp
xor
xor
push
inc
inc
imul
inc
outsb
inc
imul
xor
push
and
inc
add
add
sbb
gs
push
popa
insb
add
imul
addl
push
inc
cmp
aas
inc
pop
push
popa
inc
popa
outsb
inc
push
clc
incl
xor
popa
data16
addr16
add
cmpsl
mov
imul
out
insb
add
or
xchg
fnstsw
arpl
fisubs
out
push
sbb
in
lcall
pop
shrl
arpl
pop
call
outsl
clc
adc
imul
dec
cld
push
add
pop
hlt
jae
stos
adc
imul
cmp
incl
cld
incl
cld
incl
cld
incl
cld
incl
cld
incl
out
add
out
add
out
daa
inc
adc
and
add
flds
add
loop
add
dec
sbb
daa
inc
adc
add
icebp
add
fiaddl
add
out
add
scas
daa
inc
adc
add
add
add
ljmp
adc
add
sbb
lea
or
add
movl
add
out
add
out
add
out
sub
addr16
sti
add
out
add
add
or
imul
dec
clc
icebp
pop
adc
loope
adc
leave
pop
adc
jle
adc
jmp
pop
adc
jmp
jmp
pop
adc
jmp
pop
adc
jmp
sbb
inc
jmp
pop
adc
sub
jmp
pop
adc
sbb
sbb
pop
adc
jmp
mov
inc
jmp
pop
adc
jg
and
add
sub
jl
inc
sbb
inc
mov
push
lret
add
adc
mov
das
fiadds
int
xchg
mov
es
sbb
and
add
jnp
dec
mov
std
mov
lods
xchg
inc
les
rclb
inc
loop
int3
cmpsb
mov
into
lret
inc
aam
mov
inc
mov
arpl
stc
test
pop
mov
inc
xchg
into
xchg
add
xor
push
lcall
clc
jno
fstpt
adc
scas
repz
movntq
out
aas
cmc
inc
adc
fimuls
mov
dec
nop
xor
jne
sahf
test
inc
inc
fsts
add
jl
xor
xor
push
add
jecxz
ljmp
aaa
lock
loop
aaa
cmp
ret
into
movsl
shll
mov
stos
popa
test
mov
aam
rorb
test
stos
mov
cmp
push
jle
jecxz
aas
out
out
add
and
into
push
sbb
iret
push
xor
clc
add
add
repz
sbb
movsb
roll
jbe
mov
test
scas
jmp
sbb
mov
add
js
lahf
popf
add
sahf
push
mov
icebp
jge
add
sub
lahf
push
dec
fs
imul
stos
fwait
addr16
jnp
ficomps
mov
jnp
xlat
xor
arpl
mov
daa
xor
add
sbb
cmpsl
cmp
sahf
or
mov
cmp
nop
sarb
add
in
mov
imul
out
gs
in
cmp
dec
jl
jecxz
mov
inc
cltd
cmp
cmp
adc
jl
cwtl
ret
fisttpll
pop
adc
cmp
outsb
cmp
cmp
leave
cmp
orl
or
mov
jecxz
mov
cmp
jne
into
cmp
push
dec
adc
push
iret
sub
movsb
cmpsb
push
cmp
mov
mov
popf
adcb
xor
pop
stos
adc
xchg
inc
movsb
jno
sub
jg
sub
fwait
or
dec
cld
mov
mov
mov
pop
repnz
xor
sbb
jge
bound
xchg
jne
add
adc
jnp
dec
or
xlat
sub
incl
add
cld
incl
mov
lea
jmp
add
cld
incl
cld
incl
cld
incl
cld
incl
fwait
ds
cld
incl
cld
incl
cld
incl
cld
cmp
add
cld
incl
cld
incl
cld
cmp
add
cld
incl
cld
incl
cld
cmp
add
cld
incl
cld
incl
add
cld
cmp
add
out
add
out
add
hlt
add
adc
add
out
add
out
add
lar
adc
add
out
add
out
add
outsl
add
adc
add
out
add
out
add
inc
add
adc
add
out
add
out
add
icebp
add
adc
add
out
add
out
add
jle
add
adc
add
out
add
out
add
popw
rclb
out
add
out
add
add
pop
adc
push
or
add
pop
adc
jmp
pop
adc
jns
add
jmp
pop
adc
jmp
sbb
add
pop
adc
jmp
pop
adc
in
clc
add
jmp
pop
adc
jmp
sbb
call
jmp
pop
adc
aaa
stc
call
pop
adc
jmp
jl
add
pop
adc
jmp
pop
adc
and
add
popf
adc
add
add
insl
adc
add
mov
add
add
insl
adc
add
add
adc
add
sub
adc
add
adc
add
sub
adc
add
mov
add
adc
add
adc
add
cmp
fstl
add
in
adc
add
adc
add
cmp
fstl
add
lods
adc
add
mov
add
adc
add
mov
add
cld
incl
mov
add
cld
incl
add
cld
incl
mov
add
cld
incl
test
add
cld
incl
test
add
cld
incl
cld
incl
cld
incl
cld
incl
cld
incl
mov
add
cld
incl
cld
incl
out
add
out
add
out
add
dec
sbb
adc
add
out
add
out
add
imul
add
out
add
out
add
lock
or
add
out
add
out
add
ljmp
add
out
add
jb
lret
add
out
add
out
add
adc
sub
add
out
add
out
add
jge
add
adc
add
out
add
add
pop
adc
jae
std
call
pop
adc
jmp
out
cld
call
pop
adc
jmp
push
std
call
pop
adc
jmp
out
cld
call
pop
adc
jmp
paddw
call
pop
adc
jmp
out
cld
call
jmp
pop
adc
mov
sti
call
pop
adc
jmp
and
ljmp
pop
add
popf
pop
add
in
cmp
lods
pop
add
lods
pop
add
popf
pop
add
mov
cmp
insl
pop
add
insl
pop
add
pop
pop
add
in
cmp
insl
pop
add
insl
pop
add
pop
pop
add
outsl
cmpb
sub
sub
pop
add
test
cmp
sub
pop
add
sbb
imul
add
push
add
fstl
add
arpl
add
push
add
in
push
add
add
cld
incl
cld
incl
cld
incl
fwait
aas
add
cld
incl
cld
incl
inc
aas
add
cld
incl
sub
lcall
sub
cld
incl
inc
aas
add
cld
incl
fistpll
add
sarl
add
fistpll
add
sarl
add
fistpll
add
fistpll
add
fistpll
add
fdivrs
add
fdivrs
add
fdivrs
add
mov
sbb
fists
adc
fisttps
adc
filds
adc
adc
filds
jmp
adc
adc
adc
adc
fadds
rcr
cmp
fdivs
adc
fsubrs
adc
fsubs
adc
insb
sbb
insb
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
mov
adc
jmp
add
adc
jmp
pop
adc
jmp
pop
adc
push
push
xorb
push
dec
adc
xor
stc
std
aaa
ss
stc
pop
ss
add
adc
push
je
test
insb
cmp
jnp
gs
push
cmp
out
pop
cmp
push
and
loope
sbb
leave
push
lock
push
call
cmp
add
idivl
test
push
cmp
roll
add
aad
je
pop
sbb
pop
sbb
sbb
fdivrl
stc
sbb
sbb
cld
ds
sbb
mov
sbb
jmp
sbb
sbb
sbb
sbb
jns
lods
aas
fstps
mov
aas
add
sbb
aas
cltd
sbb
aas
sub
sldt
sbb
or
cmp
sbb
or
sub
stc
pop
cmp
add
or
xor
or
xor
or
xor
or
xor
or
adc
or
adc
or
adc
or
adc
or
hlt
add
in
hlt
inc
or
or
pusha
adc
and
or
xor
leave
or
xor
test
or
adc
loope
mov
cmc
orb
mov
cmc
rorb
sub
or
pusha
adc
adc
push
loopne
adc
enter
push
add
adc
push
add
js
dec
push
mov
add
push
add
add
push
fadds
or
mov
add
adc
add
adc
add
adc
enter
rolb
xor
loopne
xor
nop
add
js
dec
adc
add
mov
stos
adc
add
adc
add
sub
add
adc
xor
or
xor
hlt
out
adc
adc
xor
int
test
mov
mov
insl
adc
xor
push
xor
or
or
cli
aaa
xor
adc
xor
or
xor
cmc
iret
xor
adc
shlb
adc
lahf
xor
outsl
xor
jg
pop
cmc
dec
xor
adc
cltd
and
xor
sub
adc
dec
push
and
cmc
add
clc
pushl
and
aaa
inc
and
aaa
xor
clc
aaa
sbb
add
loope
or
adc
rorl
sbb
mov
movaps
xor
jno
cmp
sub
adc
test
pushf
cmp
xadd
mov
sbb
adc
cmpxchg
mov
mov
cmp
push
enter
adc
push
pop
sbb
push
pop
and
pusha
pop
sub
jo
xor
adc
cmp
adc
inc
inc
adcl
push
xor
pop
insb
and
js
adcl
mov
rcll
add
pop
mov
jmp
loope
pop
cmp
adcb
rolb
adc
add
push
inc
icebp
adc
add
pusha
xor
adc
loope
jo
icebp
adc
adc
add
out
jo
push
adc
repnz
loop
in
ret
in
adc
cwtl
adc
in
adc
and
in
in
movd
les
into
in
stc
sbb
mov
add
out
mov
shr
xor
mov
in
out
pop
lock
out
mov
pop
inc
lock
xor
xchg
pop
pop
lock
pop
ret
pop
jae
leave
pop
or
aad
es
or
xor
push
repnz
cmp
sti
fidivrs
or
mov
cmp
adc
cmp
adc
cmp
cli
mov
cmp
clc
push
cmp
addr16
fldl
adc
ret
das
mov
jg
loope
lods
sub
jg
dec
sub
add
xor
add
repz
xor
add
xor
adc
xor
out
aaa
xchg
clc
outsl
aaa
rcll
aaa
xlat
or
aaa
push
add
add
push
mov
jl
sarb
sub
pop
cmp
and
dec
cmp
or
adc
xchg
ds
mov
ds
add
cmp
sbb
pop
add
int3
add
xor
divb
ret
xor
push
daa
xor
pop
xor
lea
xchg
mov
insb
pop
inc
xor
pop
dec
xor
pop
pop
xor
pop
insl
xor
pop
xorl
mov
iret
xor
push
adc
cmp
cli
xor
pop
or
xor
mov
ret
or
or
push
pop
or
mov
mov
in
mov
push
fidivs
inc
fimuls
or
or
inc
movsl
push
cmp
lgs
push
or
jmp
cmp
cld
incl
or
adc
or
hlt
adc
dec
add
rcll
std
divb
adc
divl
and
imul
popa
xlat
test
adc
adcl
pop
call
sub
mov
out
sbb
sbb
xor
fsubrp
jg
addr16
xchg
sub
out
or
jmp
or
jmp
or
jmp
or
jmp
or
pop
jmp
insb
or
mov
adc
repnz
xlat
movaps
popf
pcmpgtd
dec
adc
push
adc
out
cltd
push
mov
call
inc
cmp
adc
cmp
push
cwtl
cmp
jle
cmpsl
adc
idivb
add
lods
cmp
hlt
adc
jmp
pop
adc
hlt
pop
wrmsr
roll
pop
lahf
das
popa
testl
push
testb
push
popf
sub
add
adc
sub
lock
sub
clc
add
xor
adc
xor
adc
xor
push
add
jmp
ss
js
testb
aaa
sbb
mov
add
sbb
cmp
pop
nop
cmp
pop
into
cmp
pop
das
cmp
sbb
cmp
pop
cmp
sbb
mov
out
aas
sbb
cmp
add
cmp
add
cmp
add
cmp
and
into
adc
cmp
lcall
pop
push
xor
push
test
xlat
js
enter
pop
dec
fstps
push
mov
arpl
ss
adc
mov
sbb
in
adc
adc
adc
adc
adc
adc
adc
mov
adc
xor
int3
gs
cmp
add
cmp
add
sub
add
sub
add
sbb
or
sbb
or
push
or
in
sub
in
ja
mov
xor
movsb
in
fmuls
out
out
stos
or
out
mov
or
out
aaa
adc
out
adc
call
jnp
inc
call
out
dec
sub
add
adc
adc
jecxz
adc
jecxz
adc
fisttps
pop
mov
loopne
adc
adc
pushf
in
sub
shr
adc
call
insl
adc
inc
adc
pushl
adc
cmp
cmp
cli
das
cmp
adc
cmp
or
cmp
push
cmp
adc
jmp
pop
adc
cmc
pop
loopne
popa
testl
mov
pop
cs
add
ds
adc
test
inc
adc
pop
sub
hlt
mov
xchg
sti
mov
xor
sbb
xor
mov
inc
adc
xor
xchg
sbb
cmp
lret
sbb
cmp
outsl
sbb
insb
sbb
jae
jo
jns
jb
das
sbb
cmp
sbb
cmp
sbb
cmp
repnz
insl
sbb
cmp
sbb
cmp
sbb
cmp
icebp
cmp
and
add
cmp
sbb
mov
sbb
xlat
sbb
ds
sbb
add
and
stc
incl
add
add
cmp
add
adc
adc
adc
adc
adc
mov
ret
cmc
adc
idivb
mov
test
call
xlat
out
mov
xlat
repz
xlat
or
adc
cmp
cvtdq2ps
fimull
je
lds
jp
mov
cwtl
sbb
packsswb
setp
aad
stos
stc
rorb
icebp
jb
rcr
fs
cmp
or
dec
push
sub
push
or
adc
lds
add
fistpll
or
in
mov
xchg
jmp
or
in
test
in
lret
ljmp
push
jmp
add
fucomip
pop
push
push
ljmp
mov
mov
test
out
or
out
dec
es
adc
adc
jecxz
adc
jecxz
adc
cli
adc
push
push
jecxz
adc
loopne
cvtps2pd
decl
push
popf
xor
divb
dec
ss
or
cmp
and
or
cmp
add
cmp
std
mov
popf
std
jnp
pop
push
cmp
push
dec
cmp
cld
cmp
cld
jecxz
mov
pop
and
add
pop
add
div
enter
lock
das
testl
mov
and
sbb
sub
fwait
icebp
adc
add
add
xor
add
xor
adc
add
pop
add
push
sbb
cmp
pop
test
cmp
enter
out
adc
cmp
pop
dec
cmp
adcl
cmp
sbb
aaa
sbb
cmp
sbb
cmp
adc
cmp
sbb
cmp
sbb
cmp
adc
xchg
cmp
add
add
fistl
mov
add
or
xor
or
xor
adc
xor
adc
adc
adc
adc
or
adc
adc
and
cmc
jb
xor
adc
aad
adc
aad
adc
push
push
jl
into
or
mov
cmp
comiss
xchg
nopl
decl
bound
scas
or
cmp
cld
sti
or
adc
or
fdivrl
dec
fsubr
or
fmul
or
fdivl
or
add
in
or
fcoml
or
or
or
xchg
cmpsl
fisttpll
jnp
daa
or
fbld
xchg
insl
or
rolb
sub
cwtl
pop
fistpll
pop
mov
loopne
or
cmc
pop
cmp
imul
loope
push
pop
loope
push
push
jecxz
add
jecxz
add
jecxz
add
add
fidivrs
and
fidivrl
sbb
or
cmp
cmp
jae
inc
or
add
or
jmp
or
add
clc
jo
add
jle
jle
pop
lods
adc
loope
ret
adc
sub
adc
xor
hlt
adc
xchg
cli
mov
jg
mov
fimull
std
xor
add
out
xor
cli
aam
sub
iret
xor
xor
xchg
xor
rorb
lea
mov
les
dec
ss
adc
aaa
mov
divl
adc
xchg
cmp
or
cmp
sbb
cmp
sbb
push
fdivrl
and
stos
aas
jnp
mov
aas
push
sbb
aas
inc
sbb
add
pop
adc
xchg
xor
push
pushl
mov
add
xor
xor
adc
xor
sbb
xor
sbb
xor
xor
or
adc
notb
add
pop
icebp
aam
outsl
stc
out
jnp
lods
testb
mov
mulb
insl
test
jge
cmc
cmp
testb
sbb
and
sbb
testb
imulb
inc
idivb
mov
mov
cmc
mov
cli
inc
cmc
and
fildl
hlt
xchg
fldt
hlt
les
hlt
hlt
fbstp
pmaddwd
cmp
cmc
divl
adc
sti
leave
fisttpl
jl
cmp
fdivrl
cld
cli
fdivr
cld
rcr
std
test
frstor
mov
cld
push
fnstsw
fst
std
adc
mov
cmp
test
inc
fcmovbe
std
push
fcmovu
std
mov
js
xchg
push
fistpl
fidivrl
iret
fiaddl
mov
in
repnz
jmp
xchg
incl
incl
pop
cmp
imul
jmp
push
cmp
pop
sarl
pop
add
cmp
push
jno
mov
add
sbb
add
pop
jmp
das
sbb
xchg
das
pop
clc
test
dec
lock
das
mov
lock
cld
aam
ret
lods
data16
jns
fwait
xlat
xor
add
or
cmpsl
mov
sub
cltd
push
sub
fwait
xlat
xor
add
sbb
xor
lcall
xor
pusha
sbb
lcall
xor
icebp
sbb
sti
sbb
aaa
sbb
test
mov
pop
cmp
and
cmp
sub
lds
cmp
pop
inc
cmp
push
negb
jl
pop
and
mov
lods
cmp
cmp
stc
pop
stc
cmp
sbb
cmp
sbb
cmp
pop
sbb
stc
cltd
leave
stc
test
loopne
iret
cmp
cli
add
and
stc
dec
adc
clc
jb
iret
clc
jge
mov
clc
xchg
repz
cmpsb
jmp
clc
clc
jecxz
jl
sbb
add
add
in
or
sbb
adc
dec
in
and
xor
in
sub
xor
repz
adc
repnz
mov
in
cmp
mull
dec
testl
in
xlat
adc
repnz
nop
repnz
cld
add
or
jp
pushf
add
add
out
pop
sbb
hlt
jb
lahf
repz
adc
stc
add
loopne
stc
mov
loopne
stc
popf
loopne
stc
xchg
loopne
stc
jge
fs
test
insb
clc
jge
push
clc
xchg
loopne
clc
jge
test
movsl
loopne
clc
popf
loopne
clc
xchg
loopne
clc
jge
and
clc
mov
inc
xor
pushf
cmp
or
xor
mov
adc
jmp
adc
repz
xor
add
xor
pop
cld
xor
push
hlt
xor
pop
in
xor
push
in
adc
fdivl
sub
aam
xor
int3
xor
xor
xor
sbb
adc
sub
add
pop
xor
clc
je
jmp
in
cmp
jecxz
cmp
flds
cmp
daa
sbb
add
add
test
sub
or
mov
das
xor
push
xor
and
lahf
xor
and
aad
test
and
xor
and
xor
and
xor
clc
and
sub
getsec
add
aas
aaa
rcrb
pop
aaa
sahf
pop
nop
aaa
inc
and
aaa
mov
int
nop
pop
jno
cld
aaa
sbb
jo
jg
iret
cmp
imull
cli
std
cli
xor
push
sti
mov
fdivr
jmp
cs
incl
in
sahf
aam
in
or
sbb
pop
cmp
icebp
inc
xor
aaa
sbb
sti
fwait
or
cli
adc
jmp
pusha
inc
stc
and
stos
negl
sub
cmp
and
add
add
repnz
aad
repnz
pop
icebp
cmp
adc
pushf
aaa
f2xm1
adc
out
xchg
xor
sbb
in
cli
adc
cld
sub
imul
in
xchg
std
jns
out
std
sbb
mov
sar
sub
cmp
call
fcoms
cli
adc
push
lahf
xlat
out
push
jle
add
cwtl
repz
ja
cmpsb
in
repz
sub
push
mov
testb
out
mov
loopne
icebp
in
repnz
int3
sti
rcr
sti
repnz
cld
daa
fnsave
std
lahf
fdivr
mov
fld
xor
pop
lret
xchg
xor
ret
imul
cmp
lods
cwtl
cmp
out
clc
addl
leave
cs
xchg
jo
cs
js
cs
jno
sub
push
push
dec
sub
out
mov
push
cmp
sub
xor
xor
jne
int
loope
and
shll
and
icebp
adc
das
xor
hlt
iret
xor
cld
and
jmp
mov
dec
and
aaa
imul
cmp
int3
cmp
pop
idivl
add
sbb
sbb
cmp
pop
cli
cmp
sbb
mov
sub
sub
xchg
sbb
ds
loope
jmp
and
and
pop
jo
fistpl
xorl
nop
and
xor
and
xor
and
mulb
scas
xor
and
xor
repnz
repnz
ss
push
ss
jp
scas
repnz
push
ret
push
jge
mov
mulb
push
mull
repz
testl
movsb
xlat
cltd
repz
jmp
repz
mov
out
xor
out
jbe
and
cmc
ss
cmpsb
cmc
fisttpll
loop
push
lahf
cmc
push
ljmp
lock
lock
testl
loop
icebp
xchg
fimull
in
adc
mul
aam
testb
testl
pop
mull
push
jno
fistl
ljmp
adc
repz
inc
mov
hlt
pushf
inc
push
cmc
es
dec
cmc
iret
inc
jecxz
std
inc
div
aad
lods
icebp
jnp
xor
or
inc
stos
repnz
xchg
in
inc
dec
repz
inc
add
in
inc
dec
lock
sub
je
xchg
inc
dec
mov
cmp
out
and
add
adc
pop
sub
jne
sub
adc
leave
cs
repnz
das
scas
fistps
cmp
shl
cmp
int
cmp
mov
xor
mov
mov
aaa
jmp
add
adc
icebp
xchg
jns
imul
jmp
sub
ret
jno
cs
jecxz,pn
cmp
and
bound
or
xor
pop
xor
cmp
or
cmp
or
cmp
or
ret
or
aas
in
cmc
cmc
jmp
add
adc
lret
add
add
mov
xor
add
xor
add
in
out
cmp
or
cmp
or
cmp
or
cmp
or
aas
pop
add
add
add
cli
xor
add
xor
push
and
add
repnz
das
repnz
testb
mov
into
icebp
adc
adc
dec
add
push
icebp
gs
test
mov
aaa
xchg
lock
aaa
jmp
cs
out
adc
nop
sbb
mov
ds
clc
pop
out
lock
out
stc
sub
aaa
icebp
stos
out
fxch
out
sarl
xchg
out
cmp
out
xor
in
cmp
in
sbb
stos
adc
lret
sbb
in
adc
sti
add
dec
push
sti
dec
dec
dec
jmp
dec
sbb
mov
dec
aas
in
lea
in
outsl
dec
inc
in
mov
fucomp
cmp
in
xchg
in
mov
dec
shr
push
dec
add
jnp
xor
lret
out
mov
icebp
mov
icebp
or
icebp
imul
repnz
repnz
das
repz
ljmp
add
sahf
repz
repz
jne
cmp
outsb
inc
add
pop
in
pop
push
dec
xor
cmp
push
xor
xor
sbb
xor
sbb
xor
adc
sub
repz
in
in
dec
sub
daa
fbstp
push
fisttps
das
dec
into
mov
das
cmp
scas
pop
xor
lahf
push
cmp
scas
cmp
test
cmp
lahf
outsl
cmp
outsl
mov
cmp
mov
mov
cmp
sti
jmp
cmp
stc
or
ds
push
cmp
sti
and
cmp
cli
push
cmp
cli
push
cmp
cli
insl
cmp
stc
lea
dec
stc
cmpsl
cmp
mov
sarl
add
cmp
mov
push
aas
add
push
loope
jns
xor
mov
aaa
add
aas
repnz
aas
inc
add
aas
popf
loope
lcall
sbb
add
push
xor
and
inc
xor
repz
adc
repz
jl
mov
adc
in
sbb
and
cs
push
repz
jg
stos
cmc
mov
xlat
repnz
popa
out
insl
dec
out
xchg
pop
in
mov
adc
and
inc
in
jb
adc
mov
mov
out
adc
stc
sub
sti
jg
mov
in
sbb
in
fidivs
in
iret
aam
mov
arpl
mov
adc
in
inc
dec
das
in
je
cltd
out
xchg
dec
inc
out
ds
stc
out
add
mov
ret
dec
out
test
insb
out
test
icebp
jnp
loop
adc
out
movsl
dec
out
and
dec
out
popf
dec
jmp
add
adc
cmc
mov
icebp
cmp
repnz
repnz
repz
clc
pop
inc
push
stc
pop
inc
or
mov
inc
xor
pop
dec
in
cmp
ljmp
add
dec
dec
push
icebp
add
add
lcall
jno
adc
mov
jno
xor
push
aas
xor
push
mov
xor
xor
arpl
popa
push
in
xor
adc
sub
push
lock
call
ret
cmp
out
lods
cmp
fisubs
cld
add
stos
xor
mov
xor
sbb
leave
cmp
stc
adc
pusha
stc
addr16
dec
stc
lea
sub
int3
aas
and
idiv
pop
xchg
cmc
decl
pop
add
addr16
sub
movsl
push
test
popa
incl
xor
xor
push
xorb
push
movsl
xor
out
sbb
add
das
xor
add
xor
push
add
xor
or
xor
or
xor
or
xor
add
xor
add
xorl
dec
add
xor
fidivrl
push
jge
mov
cmp
divb
add
cs
in
push
xor
in
mov
sbb
adc
jmp
cld
xchg
jmp
add
xchg
pushf
in
mov
fldlg2
into
jmp
fcoml
jmp
fstl
jmp
int
jmp
int
jmp
cmp
imul
sub
xor
pop
push
pop
jmp
into
adc
out
add
out
stc
adc
in
add
out
or
out
repz
adc
les
in
dec
xor
stos
dec
jmp
add
repz
inc
sub
gs
pop
repz
repnz
repnz
inc
adc
ds
ljmp
ds
cmc
inc
inc
repnz
ljmp
adc
lock
inc
enter
or
xor
ss
pusha
dec
adc
in
dec
dec
cmc
out
add
call
or
jmp
pop
adc
lods
mov
mov
xor
xchg
push
sub
out
icebp
das
xchg
jo
cmp
pop
clc
jmp
pop
adc
push
pop
std
xor
push
stc
xor
push
cmp
lds
cmp
subl
or
adc
adc
imul
xor
stos
xor
adc
sub
hlt
add
jno
ret
add
pop
das
push
xlat
das
add
add
fdivrp
adc
cld
and
cld
xor
pop
sti
inc
cmp
sahf
sti
push
cmp
jle
pusha
cmp
jle
jo
jbe
js
fdivrp
cmpb
sti
nop
cmp
jle
mov
cmp
add
mov
cmp
sahf
in
sarb
jle
loopne
xchg
in
call
lock
jmp
or
ljmp
repnz
and
and
mov
fisubrl
ljmp
xor
enter
shlb
push
ljmp
adc
call
add
adc
clc
or
call
or
jmp
jmp
and
adc
sub
sub
xor
adc
cmp
cmp
inc
inc
xor
dec
cmp
jmp
jmp
jecxz
ljmp
adc
repz
in
xor
pop
icebp
cmp
push
icebp
aad
scas
ljmp
jge
pusha
dec
push
out
mov
loopne
mov
inc
adc
jae
ljmp
adc
repz
repz
cmc
movsb
inc
and
adc
inc
push
out
and
aas
out
out
ds
mov
movsb
icebp
jbe
cmp
cmp
lcall
flds
cmp
out
ljmp
jmp
xor
jecxz
xor
add
xor
popf
push
mov
movsb
mov
mov
sbb
aaa
jmp
add
clc
push
inc
xor
pop
scas
xor
cmp
xor
xor
cmp
test
enter
icebp
xor
adc
xor
mov
add
add
pop
jp
push
add
xor
repnz
mov
pop
ss
test
cmpsl
icebp
aas
aaa
pop
repnz
aaa
imul
aaa
es
aaa
jae
pop
cmp
cmp
out
cmp
out
int
adc
jecxz
out
jmp
cmp
out
cmc
cmp
or
dec
out
adc
out
pop
cmp
sbb
cmp
je
cmp
fsubrp
aas
cmp
out
inc
cmp
jmp
int
jmp
int
jmp
cmp
dec
jmp
sub
jle
xchg
sbb
push
jmp
or
push
jmp
std
mov
jmp
in
mov
jmp
fisttpll
in
frstor
sti
int
jmp
call
jmp
sub
cs
aaa
push
loopne
cmp
push
mov
jmp
gs
cltd
jmp
jns
adc
mov
fs
outsl
ds
gs
jmp
mov
outsb
jmp
mov
cmp
xchg
fistpll
sub
cmp
fsubr
adc
cmp
jmp
jmp
inc
cmp
call
xchg
call
test
cmp
out
inc
aas
xchg
out
aas
sbb
out
add
sub
ss
cmp
bound
in
ss
es
aaa
ds
xchg
aaa
xchg
shll
jmp
add
fst
sbb
shl
xor
mov
mov
xor
mov
xor
fimull
in
cmp
pop
shll
jns
mov
daa
mov
xor
lods
sub
lods
dec
sub
dec
pop
ucomiss
dec
sbb
or
xor
into
movsb
ds
das
mov
gs
add
adc
add
out
xor
je
pushf
fisttpl
xor
lcall
aas
shl
idiv
in
loop
lcall
sbb
add
fcmovnbe
cmp
fnsave
popa
loope
cmp
loope
cmp
cmp
xchg
cmp
lahf
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loope
cmp
loope
cmp
loopne
cmp
loope
cmp
loope
cmp
loopne
cmp
dec
add
and
cld
cmp
add
add
int3
mov
and
mov
sbb
cld
incl
int
dec
int
aaa
cmpsl
int
xor
fsubr
cmp
loope
sbb
sahf
adc
fadds
fld
sti
xchg
frndint
repz
cmp
sub
dec
in
es
fmul
fwait
jmp
cld
xchg
paddb
add
int
add
dec
iret
js
pop
ficoml
cmp
fnstcw
and
fisubs
loopne
push
std
jmp
add
leave
shl
inc
call
sbb
aam
inc
mov
int
dec
aad
inc
pusha
aad
inc
mov
pop
inc
xchg
aam
inc
lahf
aam
inc
scas
aam
dec
iret
xlat
and
xlat
dec
dec
cmp
fdivs
dec
xlat
popf
inc
push
xlat
int
mov
add
inc
mov
ljmp
fildl
lods
fimull
inc
lret
aas
stc
fidivs
ds
fidivrs
push
addl
xor
into
aaa
cmp
imul
xor
pop
cs
push
dec
sub
cmp
cmp
ds
cmp
jbe
pop
das
sub
sbb
inc
cmp
fists
xor
dec
cmp
add
pop
cmp
insl
cmp
jle
insb
mov
cltd
cmp
scas
cmp
mov
cmp
iret
add
xor
movsb
jbe
push
movsl
or
mov
ja
aad
jle
add
fimull
ficompl
cmp
fidivrl
in
fimull
aas
mov
fidivrl
aas
or
std
aas
sbb
xchg
push
sldt
sbb
out
xor
out
xor
fistps
or
fcomip
fnsave
hlt
decl
out
xor
out
xor
out
xor
out
xor
ret
xor
shl
aaa
popa
rolb
xor
iret
and
add
inc
xor
ror
adc
mov
adc
iret
jecxz
and
add
fcomp
and
rcr
icebp
cwtl
fsubs
sbb
sarl
mov
sarl
iret
add
xlat
int
cmp
int
xor
into
arpl
aas
into
adcl
into
mov
adc
into
add
int3
and
mov
int
int
add
adc
aam
inc
rcl
pop
inc
testl
aad
inc
jno
jg
pop
aad
inc
push
aad
inc
dec
aad
inc
push
aad
inc
pop
aad
inc
push
aad
inc
sub
inc
inc
xor
aas
inc
sbb
aaa
inc
adc
aas
inc
leave
aam
inc
rcl
pop
inc
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
adc
add
adc
add
adc
add
add
insl
adc
add
add
pop
adc
add
add
insl
adc
add
add
pop
adc
add
sub
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
add
pop
add
in
pop
add
in
pop
add
fstl
add
fstl
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
add
add
pop
pop
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
add
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
jmp
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
insl
adc
add
pop
adc
add
add
insl
adc
add
add
pop
adc
add
add
sub
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
insl
adc
add
pop
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
pop
add
in
pop
add
fstl
add
fstl
add
in
pop
add
in
pop
add
fstl
add
fstl
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
add
pop
add
insl
pop
add
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
popf
adc
add
adc
add
add
pop
adc
add
pop
adc
add
add
insl
adc
add
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
fstl
add
lods
adc
add
adc
add
adc
add
adc
add
insl
adc
add
add
pop
adc
add
add
insl
adc
add
add
pop
adc
add
add
sub
adc
add
adc
add
adc
add
adc
add
pop
add
in
pop
add
fstl
add
fstl
add
in
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
jmp
add
jmp
add
add
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
add
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
pop
adc
jmp
in
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
lods
adc
add
adc
add
add
insl
adc
add
add
pop
adc
add
add
insl
adc
add
add
pop
adc
add
adc
add
adc
add
adc
add
push
popf
lret
shrl
mov
hlt
les
xor
lods
inc
loope
xchg
lods
sti
icebp
in
pusha
rorl
lret
rcrb
out
inc
add
jns
insl
imul
mov
cmp
std
pusha
adc
gs
push
mov
pusha
xchg
mov
test
inc
sub
push
dec
cs
xchg
sub
test
adc
dec
jge,pt
test
and
cld
aas
mov
cmp
mov
clc
add
mov
xchg
pop
in
sub
aaa
xchg
inc
pinsrw
cli
and
or
ret
push
fildl
gs
ret
je
cmc
subb
pop
mov
out
and
jb
mov
cli
scas
out
mov
cmp
sub
cmpsl
cmp
sbb
hlt
push
and
pop
pop
sbb
add
add
cmp
mov
adc
fcoms
scas
sub
sti
scas
inc
mov
push
fisttpll
ret
add
push
push
and
dec
cmp
push
iret
push
add
lods
shlb
js
sbb
mov
movsl
sub
xor
insl
jl
xchg
nop
bndstx
nop
push
fcoml
adc
loopne
cmp
xchg
les
adc
mov
or
and
sbb
lods
adc
ds
pop
repnz
cli
rol
jge
out
jb
std
call
int
imul
aas
out
fimull
mov
jb
fbld
std
shl
or
fwait
test
int
xchg
into
push
test
xor
push
inc
xor
test
push
xor
pop
sbb
lret
pop
mov
imul
dec
pop
sub
jg
push
loop
and
mov
js
push
aad
mov
and
stos
jge
cmpsl
stc
cmp
gs
mov
enter
in
jg
or
decl
in
cmp
leave
pusha
jno
bound
xor
mov
mov
mov
xchg
aaa
imul
cmpb
pusha
add
popf
cmp
imul
in
pusha
xor
loopne
dec
loopne
mov
add
lea
jg
fmull
or
inc
clc
jg
clc
mov
das
add
or
cmp
mov
mov
push
clc
mov
dec
cld
mov
ret
push
in
add
add
or
aad
mov
loopne
inc
mov
dec
sbb
dec
lock
add
lea
lods
pop
push
add
aam
add
xchg
add
inc
pusha
sbb
insb
or
inc
in
jg
in
rcl
add
push
cmp
dec
xor
roll
rorb
mov
int3
ror
int3
push
in
loopne
out
jmp
testl
rcr
testl
js
inc
add
call
push
dec
adc
mov
dec
add
add
add
adc
xchg
rclb
inc
pop
sarl
add
mov
xchg
ret
aas
hlt
or
or
mov
mov
push
add
aas
call
push
rclb
dec
adc
cmp
out
ret
mov
pop
aad
int3
rol
int3
mov
mov
mov
add
lea
popl
lea
pop
mov
int3
rol
int3
xor
push
mov
or
lcall
nop
push
inc
add
ret
int3
inc
mov
int3
push
mov
andl
add
adc
pop
push
add
adc
clc
pushf
jmp
inc
add
cmp
call
fadds
cld
add
inc
add
jg
or
inc
hlt
mov
cmp
int3
xor
hlt
add
add
or
aam
mov
mov
sbb
pop
testl
mov
or
dec
addb
adc
shrb
adc
cld
ljmp
ret
int3
inc
enter
enter
enter
rorl
add
mov
hlt
push
inc
add
ret
int3
inc
enter
enter
mov
and
mov
xchg
js
add
jl
add
add
add
mov
mov
mov
mov
add
or
add
inc
hlt
cmp
fbstp
add
hlt
mov
push
sar
xchg
cli
add
and
lock
testl
sub
cmp
add
dec
clc
jg
adc
roll
dec
or
dec
or
add
or
stos
mov
mov
mov
jmp
mov
mov
andl
mov
mov
lock
mov
jg
call
add
inc
lock
add
sti
add
mov
adc
jge
loopne
shl
js
adc
test
adc
add
inc
loopne
mov
inc
notl
jge
hlt
mov
cmpl
pusha
sbb
cld
adc
mov
cmp
mov
mov
pop
dec
adc
loopne,pt
inc
or
inc
adc
cmp
mov
or
adc
faddl
add
mov
nop
js
add
pop
mov
repz
pusha
inc
leave
fildl
add
mov
nop
cmp
shlb
inc
cmp
add
test
mov
fisttps
incl
fwait
inc
mov
inc
call
or
mov
mov
mov
jg
or
pop
hlt
push
fsubrl
mov
mov
mov
popf
adc
or
in
lds
mov
mov
add
popf
dec
loopne
and
ljmp
fstpl
loopne
int3
mov
in
add
push
lcall
movsb
push
inc
add
cmp
inc
add
cmp
std
sbb
add
pushf
cmp
push
pop
or
push
ret
int3
rcr
int3
xor
cmp
ret
mov
mov
push
add
mov
jno
int3
rcr
int3
xor
mov
add
push
xor
jg
add
ss
inc
hlt
pop
in
mov
dec
clc
lea
mov
mov
insb
inc
xchg
add
jnp
sbb
push
cmp
mov
mov
popf
cmp
mov
fildll
dec
int3
popf
adc
inc
mov
sbb
rcrb
mov
cmp
int3
shl
int3
mov
loopne
int3
rcrl
inc
insb
adc
add
cld
add
adc
push
pop
gs
incl
mov
push
pushf
inc
clc
aad
or
mov
arpl
add
dec
hlt
addr16
inc
add
xor
add
jns
mov
jmp
popf
add
mov
push
push
es
push
dec
adc
ret
add
ss
add
mov
add
add
adc
mov
js
inc
add
mov
out
inc
add
or
push
movsl
ja
inc
add
mov
call
addl
pop
mov
pop
or
mov
shl
mov
outsb
ret
int3
shl
int3
push
fwait
in
dec
sbb
inc
clc
inc
decl
out
adc
int3
mov
loopne
int3
push
fwait
in
mov
adc
add
fwait
cmp
mov
mov
adc
lea
mov
mov
mov
daa
mov
mov
cmp
aas
add
add
push
sub
sti
cmp
lock
cmp
xor
push
push
iret
dec
lock
fmull
push
mov
mov
popa
call
add
mov
add
or
add
pusha
loopne
jae
cmp
cmp
jae
pop
call
je
fwait
inc
call
lock
adc
loopne
mov
test
mov
add
not
jnp
inc
clc
arpl
or
pop
or
shll
push
or
testl
jge
call
in
mov
int
les
cmp
add
adc
int3
sbb
push
lods
cltd
cli
pushl
push
aam
loope
push
inc
add
insl
or
rclb
adc
cmpl
inc
adc
les
add
add
mov
bound
xor
int3
dec
lock
inc
add
or
xor
mov
bound
sbb
mov
add
adc
jne
cmp
add
add
jg
hlt
push
outsb
adc
push
aam
pushf
push
dec
adc
dec
loopne
inc
fmuls
in
add
lcall
xor
mov
push
inc
add
call
addl
push
fs
mov
add
or
fadds
pushf
mov
mov
cwtl
dec
loopne
ja
inc
add
inc
xor
out
inc
add
add
push
jg
pushf
push
rclb
mov
push
call
xchg
add
cmp
add
sub
add
xor
add
clc
mov
push
jg
fcoml
dec
adc
mov
rorl
inc
add
call
addl
sbb
push
pop
push
stc
ljmp
mov
xor
push
add
add
call
addl
inc
pop
lahf
or
push
push
loopne
or
inc
add
dec
sub
push
add
repz
xchg
mov
inc
add
and
adc
in
cli
dec
add
inc
decb
inc
add
notl
mov
mov
mov
fadd
int3
push
xlat
int3
rcrl
mov
push
int3
mov
in
mov
and
rclb
xor
lret
imul
mov
in
pushf
dec
cld
aas
add
les
dec
adc
call
add
enter
arpl
pop
call
pushl
enter
aad
int3
push
popf
in
mov
adc
add
cmp
add
dec
in
add
add
leave
movl
inc
push
popf
inc
or
adc
test
inc
and
jmp
inc
add
or
push
inc
add
add
add
or
add
push
inc
add
add
add
xor
add
mov
add
add
xchg
enter
add
ds
icebp
mov
rclb
adc
or
jge
call
inc
add
cmp
mov
mov
lcall
aam
inc
add
nop
push
add
adc
or
push
inc
add
cld
aas
add
pusha
add
adc
add
mov
add
jne
push
enter
sub
cmp
cmpsl
mov
aam
dec
adc
call
xchg
cld
mov
mov
gs
or
mov
mov
push
push
jne
push
dec
adc
call
incl
les
cld
aas
popa
lock
lcall
mov
cmpsb
sti
pop
movl
adc
je
push
enter
and
dec
push
cmp
pop
pop
hlt
push
sbb
stc
decl
xchg
mov
add
add
pushf
dec
in
push
hlt
add
mov
lcall
push
inc
adc
dec
movsb
mov
add
add
jmp
jg
clc
add
mov
lcall
int3
lcall
leave
lret
mov
pop
popa
clc
mov
pop
push
clc
mov
lcall
add
mov
pop
popa
clc
xor
je
push
rclb
inc
sbb
or
push
pushf
and
mov
leave
orl
add
leave
mov
jl
inc
add
leave
mov
mov
inc
add
inc
neg
lds
add
clc
mov
test
mov
stc
rorb
add
mov
call
xchg
cld
mov
rorb
inc
add
call
test
xor
mov
orb
add
mov
enter
add
pushf
push
rclb
inc
call
stc
scas
push
inc
add
ret
xor
cwtl
fstpl
xlat
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
frstor
out
dec
adc
sbb
pushf
rcl
pusha
scas
adc
repnz
jns
pop
pop
dec
test
mov
in
push
cmp
mov
iret
shll
loop
and
mov
in
add
fisttpl
add
lahf
sahf
sti
push
dec
xchg
in
stc
decl
lods
pop
outsl
inc
jp
push
fs
xchg
jne
cld
and
test
adc
mov
subb
adc
int3
push
repnz
rolb
lahf
in
pop
aad
pop
sub
dec
js
xchg
stos
lea
cli
add
mov
sbb
cli
jbe
out
pop
rolb
lret
and
jo
jno
addr16
shll
testb
mov
or
test
iret
mov
and
and
mov
inc
mov
push
fstp
movl
mov
mov
pushl
pop
mov
sub
nop
and
inc
jno
cmp
cmpsl
rorl
xor
push
push
jmp
and
aas
xor
add
stos
sub
jae
xor
loop
dec
je
int3
rcpps
incl
in
mov
adc
sbb
push
cmpsl
pop
shll
imul
xor
add
mov
jno
int
fst
jnp
lret
sahf
lock
cltd
aas
mov
shl
mov
fcoms
scas
repz
lods
mov
stos
loop
shl
push
cmpsb
sub
mov
push
scas
fwait
mov
jle
push
notb
push
sbb
xor
pop
add
outsl
and
scas
je
out
mov
jp
fcmovnb
lds
xor
je
push
add
mov
xor
adc
lahf
jp
shr
ds
pop
add
add
in
add
in
add
in
add
out
add
out
add
in
add
out
add
out
add
out
add
add
inc
out
add
add
outsb
out
add
add
mov
add
xchg
out
add
add
add
add
add
out
add
add
add
out
add
add
inc
out
add
add
outsb
out
add
add
mov
add
xchg
out
add
add
add
add
add
out
add
add
add
push
gs
fs
imul
outsl
popa
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
add
push
imul
insb
insb
outsl
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
inc
inc
dec
xor
cs
insb
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
cwtl
add
add
xor
sub
inc
xor
dec
xor
jae
jnp
xorl
stos
xor
xor
xor
xor
imul
clc
xor
xor
xor
ljmp
xor
out
xor
adc
xor
ss
ss
mov
les
leave
loope
out
in
ss
sub
push
aaa
xchg
aaa
lods
aaa
fnstenv
std
aaa
sub
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
add
add
dec
xor
pusha
xor
jb
js
jle
test
or
add
adc
