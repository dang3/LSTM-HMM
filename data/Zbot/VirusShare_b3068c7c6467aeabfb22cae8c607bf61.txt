push
mov
sub
push
push
push
xor
xor
mov
mov
inc
cmp
jl
xor
xor
mov
divl
mov
lea
movzbl
add
add
and
jns
dec
or
inc
mov
mov
lea
mov
mov
movzbl
inc
mov
cmp
jl
xor
cmp
jbe
add
and
jns
dec
or
inc
lea
mov
add
and
jns
dec
or
inc
lea
mov
mov
mov
movzbl
mov
mov
mov
add
and
jns
dec
or
inc
mov
xor
inc
cmp
jb
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
andl
add
cmpl
push
push
jbe
mov
add
mov
test
je
mov
mov
lea
test
jne
test
jne
mov
mov
mov
lea
movzwl
lea
mov
add
jmp
test
je
mov
movsbl
mov
movsbl
sub
jne
sub
mov
jmp
mov
test
je
inc
mov
movsbl
movsbl
sub
je
xor
test
setg
mov
neg
sbb
lea
and
je
mov
incl
mov
add
mov
cmp
jb
xor
pop
pop
leave
ret
push
xor
mov
mov
mov
lods
mov
pop
ret
push
mov
sub
movl
movl
movl
movw
movb
movl
movl
movl
movw
movb
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
push
call
mov
lea
push
call
mov
lea
push
call
mov
xor
pop
leave
ret
push
mov
sub
push
xor
mov
movl
movl
movl
mov
movl
movl
movw
movl
movl
movl
movw
mov
movl
movl
movl
mov
movl
movl
movl
movl
movw
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movw
mov
movl
movl
movl
movl
movw
mov
movl
movl
movl
movl
mov
movl
movl
movl
mov
movl
movl
movl
cmp
jne
mov
add
cmpl
mov
jne
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
push
lea
push
push
push
lea
push
call
push
call
push
mov
lea
push
push
call
xor
lea
stos
stos
add
stos
stos
lea
push
lea
push
push
push
push
push
push
push
push
pushl
call
test
je
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
push
push
push
call
mov
mov
movl
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
pushl
call
test
je
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
push
lea
push
mov
add
push
pushl
call
mov
mov
cmp
jne
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
pushl
pushl
call
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
push
pushl
pushl
pushl
call
mov
cmp
je
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
pushl
mov
push
pushl
pushl
call
xor
mov
cmp
jae
mov
mov
mov
add
lea
mov
push
pushl
mov
add
add
push
push
pushl
call
movzwl
incl
addl
cmp
jl
push
push
lea
push
mov
mov
add
push
pushl
call
mov
add
mov
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
pushl
call
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
pushl
call
pop
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
push
push
call
xor
inc
pop
leave
ret
push
mov
pushl
push
call
push
call
test
jne
push
call
jmp
pop
ret
push
mov
cmpl
je
mov
sub
mov
decl
mov
inc
cmpl
jne
mov
pop
ret
push
push
mov
cmp
jbe
lea
cmp
jae
dec
lea
test
je
mov
mov
dec
dec
dec
jne
jmp
test
je
mov
sub
mov
mov
inc
dec
jne
mov
pop
pop
ret
push
mov
mov
cmpl
jne
mov
push
mov
call
pop
mov
mov
test
jne
or
pop
ret
push
push
mov
lea
push
cmp
jle
imul
cltd
sub
mov
sar
add
push
call
mov
pop
test
jne
or
jmp
pushl
mov
mov
push
call
pop
pop
pushl
push
call
push
call
mov
mov
mov
mov
mov
add
push
push
mov
call
mov
inc
mov
pop
xor
pop
mov
inc
pop
pop
pop
pop
ret
push
mov
push
push
mov
push
xor
mov
cmp
jne
push
lea
push
push
lea
push
pushl
mov
call
mov
jmp
cmp
jne
mov
push
mov
xor
lea
inc
cmp
jle
sub
mov
mov
lea
push
add
push
call
pop
add
pop
mov
pop
cmp
pop
je
or
leave
ret
mov
leave
ret
push
mov
push
mov
test
jne
and
push
lea
push
push
lea
push
pushl
call
mov
jmp
cmp
jne
lea
push
call
pop
jmp
xor
dec
neg
sbb
leave
ret
jmp
call
movzwl
mov
cmp
jne
xor
movzbl
push
pop
sub
shl
or
addb
cmpb
jbe
movzwl
shlw
decb
shr
ret
xor
inc
push
movzwl
mov
shl
push
or
mov
mov
rep
xor
xor
mov
lea
mov
mov
inc
add
cmp
jl
xor
xor
movswl
add
mov
add
mov
mov
mov
add
mov
inc
mov
add
cmp
jle
mov
mov
xor
pop
mov
pop
ret
push
mov
sub
push
push
xor
mov
push
mov
mov
movzwl
cmp
jl
movswl
movzwl
add
inc
cltd
sub
sar
incl
mov
mov
add
decl
jne
andl
movl
mov
mov
lea
movswl
movzwl
cwtl
movzwl
add
movswl
mov
lea
movzwl
movzwl
movswl
jmp
dec
movswl
cmp
jb
inc
sub
movswl
add
movzwl
add
lea
lea
mov
call
mov
lea
lea
mov
call
mov
addl
incl
mov
mov
cmp
jl
xor
mov
movzwl
mov
cmp
cwtl
jl
mov
jmp
add
mov
mov
inc
add
cmp
jl
pop
pop
pop
leave
ret
push
mov
push
mov
cmp
jne
call
movswl
movzwl
push
push
mov
push
movswl
lea
add
incw
movzwl
movzwl
movswl
cmp
jbe
inc
movswl
cmp
ja
movzwl
dec
movswl
add
mov
mov
movswl
mov
mov
add
mov
mov
cmp
jge
mov
mov
lea
movzwl
mov
mov
movswl
add
mov
mov
cmp
jge
mov
mov
movzwl
movswl
movzwl
mov
test
jne
pop
pop
pop
leave
ret
push
push
push
push
pop
jmp
call
movzwl
mov
cmp
jne
xor
movzbl
mov
sub
shl
or
add
cmp
jbe
movzwl
shlw
addb
shr
movzwl
mov
movzbl
movzbl
shl
sub
movzwl
movzwl
jmp
add
call
lea
add
movzwl
test
jne
mov
pop
and
pop
or
pop
ret
push
mov
sub
push
xor
mov
call
mov
call
shl
or
call
shl
or
call
shl
or
je
push
call
mov
push
push
push
call
add
mov
mov
cmp
jbe
add
push
movzwl
mov
jmp
call
add
movzwl
movzwl
mov
cmp
jb
add
push
mov
call
mov
pop
cmp
jge
movswl
push
call
pop
cmp
je
mov
mov
movswl
inc
and
incl
mov
mov
jmp
call
mov
sub
add
movzwl
dec
and
xor
xor
movzwl
mov
cmp
jge
movswl
mov
mov
add
and
movzbl
movswl
push
call
pop
cmp
je
mov
movswl
inc
and
incl
inc
mov
mov
cmp
jl
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
movl
call
xor
pop
ret
push
mov
sub
push
xor
push
push
movl
movl
movl
mov
movl
movl
movl
movw
mov
movl
movl
movl
movw
movl
movl
movl
mov
movl
movl
movl
movw
mov
movl
movl
movl
mov
movl
movl
movl
movl
movw
mov
movl
movl
movl
movl
mov
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
mov
call
push
mov
push
push
call
push
push
mov
call
push
call
pushl
mov
push
call
push
push
push
mov
call
mov
push
push
call
mov
cmp
jne
push
mov
push
push
push
call
push
call
push
push
call
push
call
push
pushl
push
pushl
call
pushl
mov
lea
lea
call
add
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
lea
push
push
call
mov
lea
push
call
pop
jmp
push
mov
push
xor
call
push
call
call
xor
inc
cmp
jl
jg
cmp
jbe
pop
xor
pop
ret
push
mov
push
xor
call
call
push
call
xor
inc
cmp
jl
jg
cmp
jbe
pop
pop
ret
push
mov
sub
push
push
xor
mov
push
lea
push
push
movl
movl
movl
mov
movl
movl
movl
mov
movl
movl
movl
movw
call
add
mov
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
push
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
lea
push
call
mov
call
mov
push
mov
call
call
sub
cmp
jb
mov
call
call
call
dec
jne
cmpl
pop
je
pop
pop
leave
ret
cmpl
jne
lea
push
push
push
push
push
push
call
call
int3
call
ret
push
mov
sub
push
xor
movl
movl
movl
mov
movl
movl
movw
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
push
push
push
push
call
push
call
xor
pop
leave
ret
push
mov
sub
push
xor
push
movl
movl
movl
mov
movl
movl
movl
mov
xor
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
push
push
push
call
lea
push
push
push
push
push
push
call
pop
pop
leave
ret
push
push
mov
push
call
pop
pop
test
jne
push
push
call
pop
pop
test
jne
push
push
call
pop
pop
test
jne
mov
push
push
call
pop
pop
test
jne
push
push
call
pop
pop
test
jne
push
push
call
pop
pop
test
jne
push
call
pop
xor
pop
ret
push
mov
push
push
call
xor
xor
call
call
push
call
push
xor
push
push
call
call
lea
push
push
push
push
push
push
call
pop
leave
ret
mov
push
mov
push
andl
push
lea
push
pushl
pushl
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
mov
push
mov
push
cmpl
jne
call
movl
call
xor
leave
ret
push
mov
cmp
jbe
call
movl
xor
jmp
test
jne
inc
push
push
pushl
push
pushl
call
push
pushl
mov
push
pushl
call
mov
test
jne
cmp
ja
cmp
ja
orl
push
push
lea
push
push
pushl
call
test
je
cmpl
jne
mov
jmp
call
mov
call
push
call
pop
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
andl
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
int3
int3
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
movsb
pop
inc
add
pop
inc
add
pop
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
ja
inc
add
add
add
add
add
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
pop
inc
add
pop
inc
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
xor
push
pop
inc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
rcrb
fcomps
loopne
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
push
mov
add
add
insb
mov
add
add
xchg
add
sahf
mov
add
add
int3
mov
add
mov
add
mov
add
add
orb
add
add
push
popl
add
mov
add
add
dec
mov
add
add
insb
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
dec
lea
add
add
outsb
lea
add
add
mov
add
into
lea
add
lea
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
js
add
mov
add
mov
add
rorb
add
add
add
xor
add
dec
popl
add
popl
add
add
add
mov
add
add
push
inc
add
pop
inc
add
add
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
inc
add
add
add
jns
add
add
add
js
add
add
add
add
add
js
add
add
add
ja
add
add
add
add
add
ja
add
add
add
add
add
inc
add
add
add
jne
add
add
add
add
add
jne
add
add
add
je
add
add
add
je
add
add
add
jae
add
add
add
jno
add
add
mov
add
add
add
xorb
cld
add
add
inc
add
add
add
inc
add
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
cmpsb
inc
add
cmpsl
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
jb
jb
add
outsl
jo
outsb
add
add
dec
add
add
xchg
inc
add
inc
add
add
add
push
add
pusha
add
incl
add
add
add
add
decl
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
sub
add
incl
add
add
incl
add
add
incl
add
add
cmp
incl
add
add
cmp
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
ljmp
aas
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
inc
add
add
add
incl
add
add
incl
add
add
ljmp
inc
inc
add
inc
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
mov
add
mov
add
jo
add
add
add
hlt
jo
add
add
add
insb
mov
add
add
xchg
add
sahf
mov
add
add
int3
mov
add
mov
add
mov
add
add
orb
add
add
push
popl
add
mov
add
add
dec
mov
add
add
insb
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
dec
lea
add
add
outsb
lea
add
add
mov
add
into
lea
add
lea
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
js
add
mov
add
mov
add
rorb
add
add
add
xor
add
dec
popl
add
popl
add
add
add
mov
add
add
add
add
popa
jo
insb
insb
outsl
arpl
iret
add
popa
jo
jb
add
dec
add
je
jb
arpl
jae
gs
jo
add
gs
rolb
gs
fs
imul
jb
je
inc
imul
imul
jae
xchg
add
je
imul
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
imul
add
je
dec
jo
outsb
inc
jbe
outsb
je
add
mov
inc
jb
popa
je
push
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
roll
dec
gs
jo
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
aam
dec
gs
jo
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
popa
jo
jb
popa
je
add
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
ljmp
gs
outsl
imul
add
outsl
fs
outsl
imul
add
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
inc
add
je
jb
arpl
fs
jae
add
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
jmp
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
roll
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
sub
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
incl
add
add
decl
inc
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
xchg
inc
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
clc
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
add
jg
add
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
jg
add
jg
add
jg
add
inc
add
inc
add
jg
add
inc
add
jg
add
jle
add
jle
add
jle
add
jle
add
add
add
add
add
add
add
jle
add
jle
add
jle
add
jle
add
jle
add
inc
add
inc
add
add
inc
add
jle
add
inc
add
inc
add
inc
add
inc
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
inc
add
jge
add
jge
add
add
inc
add
inc
add
add
inc
add
inc
add
jl
add
jl
add
jl
add
add
add
add
inc
cwtl
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
addl
adc
inc
add
add
add
add
add
incl
add
add
add
add
add
add
test
inc
add
test
inc
add
test
inc
add
test
inc
add
test
jg
jg
jg
lods
lcall
add
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
addl
add
add
and
add
add
add
add
add
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
add
xor
pop
pusha
push
nop
xchg
cwtl
pushf
mov
mov
mov
enter
rcl
aam
fcomp
loopne
in
call
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
pop
and
and
and
and
and
and
daa
sub
sub
sub
sub
sub
sub
das
xor
xor
xor
ss
cmp
cmp
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
add
add
add
add
add
add
xor
add
push
add
orb
add
js
add
nop
add
addb
add
add
add
add
add
add
add
pop
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
fadds
add
lock
orb
add
or
add
add
add
add
add
add
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
or
add
jo
add
add
add
add
add
or
add
addb
add
add
add
add
add
add
nop
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
or
add
mov
add
rolb
je
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
enter
and
add
in
add
add
add
in
mov
add
in
add
add
add
mov
aas
inc
add
lds
xor
cs
adc
ret
xchg
lock
clc
and
jecxz
xchg
enter
jns
das
sbb
orl
in
in
scas
cmp
add
retw
mov
leave
push
ficompl
icebp
mov
sbb
pop
in
or
insl
loop
mov
push
adcb
jae
pushf
lcall
movsl
leave
cmp
xor
das
xor
mul
les
loope
pop
icebp
cmp
dec
mov
adc
scas
pop
popf
sbb
in
mov
rol
out
lock
jmp
mov
xor
and
movsb
dec
cmc
sbb
sub
add
ja
mov
xchg
pmaxsw
mov
push
ret
aad
int
push
sub
push
or
mov
mov
imulb
loope
lds
aad
push
mov
rclb
outsb
push
mov
clc
pop
jne
lcall
mov
add
cmp
or
pop
or
pop
movsl
add
sub
push
jae
mov
cmp
dec
jp
mov
js
loope
and
pop
cmp
fsubrs
fisubs
cmp
movsl
jg
scas
dec
dec
sub
or
punpckhwd
fsubs
mov
hlt
add
xlat
pop
fwait
adc
addr16
pushf
icebp
xor
push
pop
sub
loope
mov
xor
inc
movsb
mov
adc
or
lret
push
neg
mov
and
popa
enter
je
push
ror
fisubl
mov
jb
sub
sbb
ret
rcll
ja
sub
lea
sarl
notb
pusha
adc
fistpll
add
test
sub
and
les
outsb
mov
das
xchg
push
lods
add
lret
in
xor
adc
mov
lret
inc
pop
out
scas
out
push
mov
adc
inc
inc
push
mov
adc
int
pop
mov
push
dec
lahf
xorb
bound
cld
sub
mov
das
pop
rcrb
sub
popa
mov
and
fsubrs
cmp
adc
mov
cmpsb
idivb
nop
mov
xor
xor
ror
and
xor
mov
lds
in
ficoml
mov
pop
lret
movsl
test
fidivl
sub
fsubs
repnz
dec
in
sub
jmp
and
mov
push
pop
mov
movzwl
or
xor
ja
sahf
xchg
mov
mov
idivb
dec
push
jge
fstps
sti
sbb
mov
mov
pop
pop
or
cld
mov
xor
popa
jnp
pop
insb
sub
cmc
cmc
jo
insl
fisubrl
push
mov
dec
pop
push
dec
orb
sahf
in
lret
int
ss
push
sub
lods
and
add
mov
fbld
lahf
in
jp
inc
mov
adc
fldt
ja
aas
pop
fcmovnu
sub
mov
jne
outsl
mov
cmp
out
cli
pusha
push
sbb
push
bound
sub
sahf
jp
push
fisttpll
jb
xor
dec
dec
and
ret
or
jmp
jg
adc
cmp
pop
xlat
sahf
push
pop
and
mov
inc
lods
and
cmp
divb
mov
mov
fs
movsl
xor
lock
sub
cmpsl
aaa
jmp
jmp
popf
sahf
jae
dec
sub
into
aaa
repz
sbb
ret
insl
outsb
test
in
in
mov
mov
sub
and
and
cmp
mov
sub
jg
into
jns
pop
and
jbe
push
in
ja
xor
test
xchg
cmc
ret
pop
les
mov
ljmp
pop
stos
mov
adc
pop
out
and
jns
test
jmp
mov
loopne
jo
nop
xor
loopne
xor
xor
lahf
and
inc
push
cld
pop
cmp
mov
sbb
aaa
mov
fisubs
sbbb
add
and
ret
push
xchg
jl
test
mov
push
xchg
xchg
push
mov
testl
out
scas
jno
addb
fstl
jle
ja
lret
sub
jge
dec
mov
repz
xchg
loopne
pop
xlat
lret
sbb
mov
dec
data16
push
sub
mov
push
adc
mov
mov
push
out
insl
dec
mov
test
adc
push
push
and
mov
push
stos
and
add
cli
jae
das
pop
mov
mov
and
and
xchg
xor
inc
cmpsl
loopne
sub
push
jo
in
push
pop
sub
push
fimuls
cmp
fists
cmp
mov
in
ds
fs
xchg
jbe
inc
sahf
sub
fxch
aas
lock
cwtl
cmpl
mov
jmp
fcomip
add
cli
mov
or
inc
push
imul
mov
or
push
out
push
inc
cmpsl
cmp
pop
pusha
add
or
mov
jmp
or
dec
pop
xchg
cs
in
call
ss
sar
push
adc
mov
fdivrl
xor
mov
ret
out
sub
shll
mov
decl
dec
mov
mov
aad
mov
lods
jmp
into
addr16
cmp
scas
sub
xor
out
test
xor
lret
imul
cli
mov
cltd
add
in
ljmp
sub
cld
cltd
cmp
imul
std
mov
inc
mov
jge
and
sar
icebp
mov
decb
jmp
fistpll
shll
jg
stos
pop
movsl
add
in
sbb
addr16
add
loop
js
xchg
dec
add
int
arpl
jb
in
inc
jmp
inc
push
pushf
sbb
outsb
or
fwait
ds
cld
adcb
jae
outsb
xor
or
stos
push
sub
mov
js
call
stc
inc
stc
fists
cld
pop
dec
ret
xor
add
push
leave
add
push
data16
add
xchg
dec
mov
sbb
cs
sar
cli
mov
push
frstor
and
xchg
loope
push
mov
fbstp
dec
icebp
loopne
jle
sbb
or
sub
into
pushf
aaa
aad
mov
push
mov
inc
clc
popf
xor
push
stos
into
sbb
sbb
jbe
jle
fcompl
sub
mov
adc
in
xchg
lds
lock
aam
inc
cmpsl
mov
xchg
data16
test
xchg
cld
repnz
mov
xchg
mov
outsl
fwait
add
jo
mov
push
pushf
or
cmp
xchg
sarl
mov
cmpsl
xchg
shl
xor
dec
jnp
mov
cs
sahf
and
out
lret
and
mov
fidivrs
cmp
dec
repnz
or
and
lcall
dec
jns
rclb
mov
cmpsb
inc
jnp
data16
andb
xchg
bndstx
mov
test
inc
fsubrs
icebp
repz
imulb
aas
icebp
sti
cs
sbb
and
push
and
sub
mov
dec
loope
ss
fstl
lret
push
inc
lcall
or
push
cwtl
js
add
mov
add
sbb
xor
sub
sub
inc
lcall
or
mov
sub
push
ret
add
pop
pop
pop
negl
mov
testb
and
dec
and
test
test
xor
pop
sbb
aam
fldl
adc
dec
pusha
sbb
jg
mov
popa
mov
lock
adc
sub
push
fstpl
ja
pop
pop
adc
and
push
aaa
lcall
mov
testl
arpl
add
add
sbb
xadd
cmp
dec
fdivrl
pop
fsts
mov
push
adc
lods
push
adc
lret
pop
rcl
or
int3
fs
int3
mov
hlt
or
mov
or
fdivs
mov
lods
nop
inc
inc
rorb
inc
stos
aas
cld
xchg
cmp
repz
add
xor
pop
std
movsl
jb
xchg
pusha
clc
lahf
jle
adc
loop
icebp
out
sbb
mov
cmp
sub
jecxz
and
jne
jmp
rorb
in
pop
sub
lahf
sbb
inc
pop
cs
imul
outsl
scas
inc
pop
pop
push
pop
outsb
ljmp
fcoms
fwait
sbb
mov
push
jnp
ljmp
std
jge
clc
sahf
negl
dec
mov
fsubs
shlb
daa
fimull
ret
pusha
ja
pushf
push
mov
shl
test
sti
and
and
and
mov
stos
pop
fnstsw
aas
call
ret
mov
sub
stos
jne
dec
test
aaa
sub
dec
lock
jmp
dec
dec
inc
xorb
add
cmpsl
imul
jmp
ret
leave
pop
ret
sub
fsubr
jns
fs
xor
jbe
in
and
shll
aaa
push
cmp
jae
das
xchg
add
mov
pop
inc
idivl
call
das
lea
push
xor
mov
add
xchg
loop
jmp
outsl
push
repnz
sti
mov
sbb
test
int3
daa
call
cmp
cltd
pop
testb
inc
movsl
ret
movsb
inc
lods
push
cmpsl
icebp
subl
cmp
mov
sub
adc
adc
pop
pop
pusha
pop
xor
fisttps
inc
pop
mov
and
enter
dec
mov
mov
aad
cmc
insl
dec
rorl
lcall
add
mov
xchg
test
mov
pop
pop
mov
and
jecxz
in
jns
std
fbld
decl
cmp
sub
xchg
or
sahf
mov
aad
shlb
add
mov
inc
inc
dec
jmp
and
cmp
mov
mov
push
or
aas
push
lahf
stos
sbb
sbb
mov
jbe
or
bound
mov
xchg
cmpsb
or
mov
enter
dec
push
in
jecxz
xchg
dec
mov
inc
mov
push
jo
mov
mov
dec
push
sti
add
cli
push
jo
popa
adc
fildll
stos
insl
xor
push
arpl
ficompl
stos
enter
insl
lret
add
cmp
adc
popf
mov
aas
push
cwtl
mov
out
ljmp
orl
add
scas
dec
imul
mov
stos
sysexit
fstp
in
leave
fmul
aam
add
std
dec
pusha
pop
push
ficoml
push
add
push
fcmovnbe
ljmp
scas
test
cmpsb
jp
js
and
lea
clc
cmp
jno
mov
fmul
repz
roll
or
adc
adc
and
jbe
imul
loope
test
cs
mov
fimull
cmp
mov
sbb
inc
cmp
jb
mov
mov
aaa
xor
push
sub
ljmp
jb
cmp
sbb
les
addb
aad
dec
test
xor
icebp
lods
sbb
out
push
lahf
movsl
jcxz
cmpsb
or
arpl
lods
out
mov
sti
inc
arpl
dec
out
inc
push
pusha
mov
inc
jns
push
push
add
push
sub
jg
mov
xor
sub
cmc
mov
ret
aaa
fcmovnb
push
test
jmp
loop
ja
mov
inc
jne
or
fldl
add
jp
inc
das
or
cmp
cmpsb
das
jo
pop
sti
mov
pop
sub
pop
imul
xchg
sbb
mov
stos
icebp
push
xor
outsb
pop
jbe
and
jns
es
repnz
in
shlb
or
test
sub
xchg
dec
ret
mov
xchg
rcll
pop
jle
add
xor
cmp
mov
das
or
sbb
push
mov
mov
xor
inc
les
xchg
into
inc
xchg
cwtl
lahf
mov
cmp
clc
loop
test
insl
fwait
test
pop
cmpsb
mov
cmp
cmc
aam
int
mov
mov
xorb
out
ja
lret
daa
add
mov
adc
cli
sub
mov
out
imul
scas
imul
jb
pop
dec
pop
xchg
lods
lret
lds
cltd
inc
inc
test
xchg
lret
mov
enter
mov
pop
in
jge
pop
sbb
fisubl
mov
xchg
pop
mov
ja
loope
cltd
popa
fbstp
sub
mov
push
xor
ret
rcr
mov
pop
pop
jns
adc
push
enter
push
shrb
pop
pop
js
push
sti
sub
sbb
adc
addl
fwait
add
in
and
or
xchg
or
push
jbe
cmpsl
jmp
dec
mov
movsl
inc
push
aam
insl
addr16
push
leave
push
inc
rcll
adc
movsl
and
push
push
loop
pop
gs
ljmp
and
jle
fsts
pop
stos
enter
dec
inc
out
cmp
push
pop
xor
aad
out
or
cltd
mov
popa
jns
ss
xchg
xchg
dec
lahf
jge
rorl
jno
das
or
stc
add
adc
push
imul
hlt
push
pop
xchg
pusha
xchg
adc
xor
dec
push
ds
sbb
or
mull
add
aam
add
scas
bound
pop
and
cmpsb
popa
dec
lcall
mov
nop
mov
dec
lods
shlb
jno
loope
mov
ds
fmull
lret
pop
mov
pop
lds
aad
test
iret
fwait
xor
jmp
in
sbb
sahf
addl
jmp
out
push
insl
sti
insb
cvttps2pi
push
lcall
imull
nop
pop
cltd
loop
outsb
push
repz
sbb
gs
pop
aas
and
rol
pop
and
and
sub
mov
test
xchg
mov
mov
cmp
or
nop
data16
sub
cmc
sbb
lcall
xor
in
sarl
jle
add
hlt
subb
sbb
ss
jb
shl
jmp
pop
mov
dec
add
fldcw
pop
movsl
jg
gs
mov
imul
insl
sti
dec
pop
in
and
add
push
mov
jo
andl
ss
cmpsb
movsl
adc
lret
and
lret
mov
ret
xchg
push
roll
test
fistpl
jo
ret
adc
les
sbb
sbb
jnp
orb
mov
clc
fistl
push
fwait
xchg
xchg
and
lods
pusha
or
pusha
xchg
adc
je
loopne
dec
cmp
xchg
sbb
aas
call
add
rep
insl
mov
cmpsl
ja
dec
test
jns
js
lock
jecxz
gs
rclb
jno
inc
and
pop
sbb
pop
add
fcoms
sub
inc
fwait
divb
push
sub
hlt
mov
sub
rcll
mov
dec
add
jae
push
sub
xor
mov
pop
insb
mov
pop
and
out
mov
dec
lods
pop
mov
or
sub
daa
push
or
ficoml
pop
outsb
sbb
sub
cld
push
mov
push
in
jns
mov
pushf
mov
mov
inc
lret
daa
add
inc
nop
push
add
cmp
fwait
pop
ljmp
loop
int
popa
sbb
pop
dec
cmpsb
dec
xchg
inc
leave
enter
ficomps
sbb
lretw
xchg
sub
add
loop
or
pusha
inc
pop
inc
mov
sbb
xlat
pushf
iret
mov
dec
into
rcll
repnz
cli
dec
mov
fucomip
pop
mov
sbb
push
fwait
divl
dec
imul
ljmp
or
out
sahf
dec
scas
jmp
dec
bound
xchg
cs
fstl
mov
orb
enter
mov
pop
mov
lret
and
xchg
cmp
adc
lea
and
divb
cmp
adc
mov
das
mov
cli
mov
adc
mov
or
sahf
and
mov
scas
cmp
lods
andb
mov
dec
scas
insl
inc
dec
cwtl
cli
pop
add
pushf
jmp
sahf
loopne
inc
shrb
std
xor
push
jecxz
es
sbb
cmc
rcr
out
adc
pop
pop
push
add
enter
sbb
lahf
sbb
imul
jecxz
adc
xchg
loopne
push
mov
mov
mov
fisttpll
or
add
cmpsb
and
dec
xor
popf
rorb
daa
cmc
cmp
or
inc
pop
jp
cmp
repz
cli
sbb
add
iret
inc
dec
in
or
aas
or
mov
in
loope,pt
mov
mov
mov
sub
xlat
jmp
mov
xchg
loopne
pop
push
outsl
pop
loope
fildl
pop
and
dec
dec
xchg
sub
or
cmp
pop
jmp
xor
outsl
add
mov
andb
xor
subl
sarl
test
jne
call
ljmp
sbb
ret
or
pop
jp
mov
sbb
sarb
test
movsb
xor
mov
dec
pusha
cmp
dec
pushf
pop
ficoml
dec
loopne
mov
mov
cwtl
ret
cmp
and
in
mov
jns
dec
bound
stc
sbb
cmp
jb
dec
roll
push
movsb
faddl
lahf
push
aad
push
push
arpl
in
pusha
pop
cmp
popa
shrb
mov
jbe
pop
push
xchg
xchg
dec
loop
test
lahf
dec
scas
sahf
pop
sbb
jp
add
addb
mov
mov
addr16
cmp
das
or
push
stos
dec
xchg
fisttpl
cmpsl
cmp
or
aaa
and
icebp
sub
sbb
dec
and
fs
inc
or
dec
imul
xor
mov
jmp
mov
int
sbb
inc
mov
in
nop
pop
jl
test
inc
andb
push
jns
popf
lods
mov
cmpsl
mov
xor
xor
cwtl
pop
adc
push
add
pushf
sub
lds
mov
dec
lods
mov
mov
aas
fimull
fisubrl
dec
cld
add
xchg
ss
push
pop
cwtd
cltd
cmp
insb
movsl
cmpsb
jg
mov
jmp
xor
push
pop
pop
adc
mov
test
ljmp
mov
inc
sub
mov
es
push
insb
jecxz
sub
xchg
shlb
adc
adc
adc
cmp
jns
in
xchg
popl
xchg
pop
dec
xor
sbb
pop
xor
sbb
lea
ljmp
or
or
inc
mov
fwait
into
in
bound
or
hlt
add
test
loop
cmpsb
lock
xchg
enter
das
or
dec
nop
push
jl
xchg
fwait
xchg
xor
mov
dec
ficompl
out
shrl
loope
in
or
adcb
jge
clc
xchg
mov
push
pop
outsb
lods
inc
sbbl
movsl
cld
ljmp
icebp
bound
and
notl
dec
into
and
stos
dec
or
js
adc
enter
cmp
dec
cmp
pop
jno
aaa
in
imul
gs
movsl
pop
mov
jmp
inc
push
inc
outsb
xor
es
je
idivb
dec
test
in
mov
aaa
bound
push
sub
pop
push
sub
pop
inc
add
aas
mov
stc
cltd
mov
push
int
xchg
inc
fisttpll
insl
andb
jl
dec
test
sbb
std
arpl
ljmp
pop
and
and
out
push
adc
fsubr
inc
in
pushf
add
push
push
in
shr
cmp
sub
aad
scas
pop
mov
cmp
pop
jg
xor
cmp
iret
pop
arpl
push
fstpt
lcall
push
sub
or
in
adcb
loop
rclb
cltd
inc
test
cltd
xor
fldcw
rclb
push
mov
jo
xor
jnp
inc
lods
mov
xchg
mov
mov
les
jl
jns
test
add
stos
daa
gs
xchg
push
add
sbb
mov
rcrb
jg
jae,pt
adc
test
adc
adc
rorb
xor
adc
dec
insl
jle
sti
movsl
cmp
add
add
dec
scas
mov
fcmovnu
out
in
lods
into
cmc
adc
addr16
iret
add
aad
cmc
imul
xchg
fcom
std
cmpsb
adc
test
rorl
inc
lock
fnsave
mov
push
ret
dec
scas
or
fildll
xchg
les
add
out
stc
aad
in
mov
pop
jle
shl
rorb
lock
mov
stos
hlt
or
stc
daa
sub
je
pop
mov
mov
adc
daa
ss
inc
mov
nop
nop
jge
mov
cmp
shrl
fimull
or
daa
mov
sti
sbb
mov
out
in
cmp
pop
bound
fnstcw
iret
xchg
cltd
pop
pop
mov
shr
es
sub
mov
les
sub
jno
lahf
mov
dec
leave
shlb
xchg
cmp
inc
or
cmc
adc
aam
loop
jb
sbb
cli
jmp
lahf
pop
addr16
mov
rcrb
inc
inc
push
divb
sub
jl
jecxz
leave
in
in
mov
lods
sub
dec
xor
icebp
sub
add
ss
cmp
repnz
stos
aam
idivl
int
rol
pop
fs
xlat
test
push
es
cmpsl
inc
stos
pop
pop
mov
xor
in
hlt
fs
and
xor
xchg
imul
sub
enter
lahf
cmp
jnp
mov
jo
mov
dec
add
xlat
jns
add
insl
add
hlt
scas
sbb
jge
and
jecxz
arpl
mov
add
cltd
sbbb
sbb
pop
inc
adcb
lea
ret
cmpsb
loop
flds
sub
add
into
add
jle
cmp
cmc
lods
fs
ljmp
mov
ret
dec
xchg
jecxz
ss
pop
iret
add
aam
loope
pop
cmpsb
xor
shrl
adc
xor
out
xor
out
xchg
js
mov
xchg
clc
out
lock
hlt
and
enter
mov
sub
mov
loop
mov
mov
in
lret
push
xchg
mov
rcrb
mov
insb
cmp
xor
subl
inc
jmp
jne
sbb
jnp
push
shll
push
inc
dec
jg
cli
push
xchg
dec
dec
mov
dec
out
sbb
adc
sub
mov
aaa
nop
jne
enter
xor
push
push
mov
mov
mulb
dec
push
notl
aaa
out
ss
fwait
sub
stos
jle
add
je
pusha
lock
adc
xor
ljmp
jmp
je
in
in
inc
outsl
sub
pop
add
push
std
in
xor
xchg
push
adc
adc
lcall
and
push
mov
in
dec
jmp
xchg
or
adc
push
jmp
test
jmp
mov
ljmp
shl
jmp
pushf
int3
movsl
test
int
dec
dec
jle
hlt
std
push
loop
and
outsl
push
jecxz
dec
cmp
call
add
xor
cltd
xchg
adc
mov
test
cmp
sub
push
test
cmp
mov
adc
cmp
inc
movsb
mov
dec
imul
cmpsl
sbb
lods
movhps
mov
fldl
pop
dec
mov
xor
mov
pop
push
jb
push
cmp
push
dec
ja
push
enter
pop
in
insb
jns
pop
mov
dec
sbb
push
in
xlat
gs
bound
and
push
dec
xchg
aas
xor
adc
lds
shll
xchg
adc
push
sub
aas
lret
xchg
xchg
popf
mov
into
enter
loope
adc
sbb
mov
add
fs
shr
cwtl
push
push
adcl
jle
les
push
data16
adc
shlb
sti
or
or
mov
sub
stos
push
sbb
test
jnp
fistps
pop
dec
test
repz
daa
test
mov
mov
inc
shl
lods
jg
mov
mull
xchg
iret
cmpsb
sbb
inc
popf
xor
shll
mov
inc
arpl
aaa
pop
pop
xchg
sub
and
pop
pop
fcom
and
xchg
push
xchg
mov
jns
mov
shr
fsubs
fistpl
fidivrl
pop
inc
daa
jmp
xor
cld
ret
std
lods
and
daa
adc
push
adc
rorl
popa
jbe
in
lea
mov
sub
jecxz
add
fidivrl
or
cltd
add
lods
cmp
dec
icebp
orb
sub
and
in
jb
add
inc
repz
mov
cmc
dec
cmp
pop
or
inc
loop
sub
inc
push
out
lea
xchg
dec
mulb
adc
and
imul
push
cli
jno
stos
and
push
sub
mov
jnp
sbb
or
jae
rorb
scas
vpshufhw
pop
xlat
xchg
xor
jp
cli
push
add
xor
addr16
lahf
cmpsl
pop
cltd
lock
popf
aaa
push
aad
loope
xor
and
add
cmpl
aas
in
es
notl
iret
mov
lret
movsb
stos
negl
inc
jp
cmp
xchg
aad
mov
adc
jmp
jnp
add
lret
mov
je
cmpsl
mov
jno
gs
fucomi
inc
addl
test
inc
mov
mov
sbb
orb
sub
lock
pop
xchg
cmp
sub
outsb
test
lret
shrb
jnp
sub
and
int
sti
mov
xor
into
mov
jae
push
fisttpll
push
outsl
adc
jmp
ljmp
push
jg
add
cli
dec
sbb
lret
and
stos
inc
cli
imul
mov
out
fnsave
xor
lock
movsl
fwait
out
or
jmp
mov
or
cs
or
lock
mov
ja
jge
and
xor
xlat
inc
imul
mov
cmp
mov
xchg
aam
and
jge
and
lret
pop
pop
sti
xchg
or
aam
cmp
mov
cmp
hlt
rcr
mov
mov
mulb
jno
xor
pop
fstpl
jo
pusha
test
jo
mov
mov
lods
enter
pop
orl
call
ret
jae
and
imul
sub
pop
loope
inc
dec
mov
dec
je
and
andl
std
flds
sbb
in
push
rcrb
mov
sub
lods
dec
adc
nop
popa
xlat
xchg
movsb
cmc
push
js
xor
mov
loop
and
lret
fbstp
mov
imul
out
inc
sbb
inc
sahf
adc
mov
stos
xchg
dec
imul
lret
out
aad
rol
push
fbld
ret
add
out
lret
xchg
pop
out
adc
adc
jnp
ljmp
into
jnp
add
dec
jne
sub
out
xchg
ret
mov
pop
mov
mov
cld
icebp
add
cmp
sti
jae
mov
mov
mov
loopne
psllw
dec
lahf
sarb
add
cs
aas
mov
xor
adc
xchg
fsubs
cmp
pushf
push
movsb
aas
es
adc
dec
shl
pop
nop
lods
clc
jne
scas
stos
xor
jno
jne
sti
adc
fxch
push
mov
xchg
xchg
filds
addb
mov
pop
pusha
push
leave
pop
adc
push
xchg
sub
mov
and
stc
xlat
xchg
data16
pop
rorl
das
testl
call
cmp
mov
dec
jb
and
outsl
push
stos
mov
push
ljmp
adc
lahf
roll
or
mov
add
mov
sbb
mov
nop
cmp
inc
fisubrl
jmp
sahf
and
push
sub
stos
mov
push
pushf
push
cmp
jg
jge
pop
pushf
sbb
jno
and
xchg
push
inc
lea
test
and
cmc
and
jecxz
int3
in
adc
adc
test
dec
out
movb
daa
mov
jg
iret
test
adc
xchg
push
jbe
xchg
popa
pop
rclb
push
dec
xor
jne
scas
int3
xchg
std
jecxz
jne
decl
xchg
cmc
lds
sub
lock
daa
lods
addr16
cmc
cmp
push
inc
inc
bound
lret
mov
pop
push
lds
mov
pop
aaa
mov
ja
test
and
lock
adc
incb
xchg
add
lret
xchg
arpl
lock
push
insl
and
ret
icebp
mov
jae
leave
pop
cli
dec
fnstenv
pop
cmp
xchg
repnz
adc
xor
cs
shll
xchg
xchg
frstor
sbb
sbb
aam
mov
mov
dec
out
jnp
nop
movsl
sub
jb
adc
cmp
xchg
ja
push
lds
push
fcoml
iret
negl
adcb
js
fneni(8087
insl
int
shlb
cmc
imul
loopne
fldl
jo
jecxz
addr16
inc
sbb
dec
sbbb
mov
ja
pop
push
cmpsl
pushf
cmp
loop
mov
bound
and
adc
popa
pop
rcll
fwait
imul
xor
jb
addr16
push
scas
and
xor
pop
outsl
fldt
dec
jecxz
inc
sbb
push
cmpsb
jle
xchg
pop
in
insl
sub
xchg
sti
mov
cmp
cmp
xor
movsl
jecxz
lods
sub
ror
push
mov
push
imulb
aam
push
or
push
dec
jns
sar
ror
jle
sbb
pop
lods
xchg
mov
sarb
insb
mov
stos
lods
aas
js
adc
mov
xor
movsb
cmp
hlt
pop
stos
dec
inc
call
cmp
xchg
mov
adc
inc
std
notl
popa
mov
pop
mov
aam
dec
adc
aaa
jecxz
push
leave
test
xchg
into
mov
in
lcall
cld
bound
in
xchg
cmp
inc
cmp
and
mov
aam
push
nop
jp
jecxz
lods
cld
addr16
sti
lea
cmpsl
pop
mov
mov
repnz
push
shll
mov
iret
nop
repnz
mov
or
jbe
cmpsl
xchg
ja
xchg
bound
sub
test
pop
ljmp
dec
pop
push
pusha
pop
push
inc
sbb
inc
aaa
jge
jns
jo
jo
mov
push
push
outsl
or
cmp
mov
hlt
cmp
inc
lods
push
je
adc
jae
mov
jecxz
xchg
loop
xor
sarb
mov
jb
movsl
data16
das
pusha
and
bound
mov
pusha
rolb
xor
ljmp
push
ja
lcall
jns
dec
fstl
mov
into
and
push
insl
popf
pop
cs
repz
in
out
mov
std
imul
xchg
out
pop
xor
xor
nop
xor
pop
push
mov
insl
cmpsb
pop
aad
aam
idivl
and
mov
dec
dec
andb
in
imul
cmp
xchg
and
or
xor
mov
or
arpl
cmp
aam
and
js
xchg
adc
xchg
ljmp
jb
in
iret
ds
pop
cmp
inc
fistl
sti
cld
or
shll
popa
jecxz
mov
popf
fists
sub
push
and
adc
dec
mov
add
shll
mov
or
lods
ret
lret
insb
push
test
and
je
in
movsl
lods
mov
jl
mov
movsl
xchg
pop
subl
data16
mov
test
mov
pushf
int
repnz
frstor
into
dec
xchg
andl
mov
xchg
dec
mov
bound
ja
jl
popa
sub
aaa
std
movsb
ljmp
mov
inc
and
xchg
addb
and
fcompl
addr16
and
ljmp
cwtl
fnstcw
dec
dec
into
arpl
jne
mov
push
cltd
sbb
push
rolb
jge
notb
sbb
push
xor
pop
lahf
xchg
mov
roll
mov
adc
jnp
ret
fsub
mov
dec
adc
loop
sub
mov
loop
test
aam
mov
or
adc
pop
mov
pop
cmp
aas
and
in
out
xor
orb
inc
jb
lock
dec
or
mov
fldenv
jnp
int
xor
lods
fcoms
int
dec
test
insb
lock
dec
pusha
mov
aam
or
lea
add
cmp
into
push
fsubrl
stos
xor
fistpll
xchg
pop
pop
jl
int
rorl
pop
lahf
mov
adc
pop
stc
insb
push
ficoms
cmp
fsubrl
jo
leave
mov
or
and
sahf
mov
test
pop
cmp
xchg
cmp
aaa
xchg
jp
movsb
mov
push
mov
jnp
mov
push
popa
int3
push
std
lret
leave
lods
mov
imul
dec
add
jbe
lock
enter
add
sub
cltd
clc
xchg
sbb
xor
loope
out
and
out
dec
dec
jae
cmp
shll
js
xor
xlat
inc
bound
sub
ret
or
mov
je
test
xchg
mov
int
jge
pop
data16
cmpsl
or
push
xchg
pop
mov
ret
pop
shrl
mov
mov
mov
adc
dec
outsb
mov
jbe
cmp
ret
enter
xchg
push
sbb
dec
arpl
inc
xchg
cmp
in
bound
mov
ret
sub
add
sbb
jl
inc
mov
xor
inc
mov
mov
cmpsb
daa
fidivl
sbb
cmp
xchg
rep
inc
jns
sbb
push
and
cwtl
shl
inc
xchg
mov
hlt
daa
push
add
scas
sub
mov
mov
int
dec
popf
pop
nop
mov
add
pop
pop
sti
loop
push
out
scas
and
adc
jp
mov
into
mov
and
std
lock
xchg
imul
push
or
and
cmpsb
or
shlb
fldcw
aaa
xor
bound
test
rorl
add
xor
pushfw
scas
mov
push
pop
inc
jecxz
nop
push
push
xchg
add
mov
insl
inc
mov
sub
enter
es
lock
mov
mov
and
js
adc
xchg
pusha
inc
bound
sarb
xchg
mov
int
pop
sarb
mov
cltd
xchg
push
pushf
mov
dec
test
push
subb
and
fsubr
test
xchg
jns
int3
xchg
fcomps
xor
adc
lcall
ds
cmc
or
cli
cmp
into
stos
jae
fs
movsb
and
push
pop
aaa
ret
js
mov
dec
adc
fadds
clc
push
jmp
rorb
push
xor
std
cltd
adc
jae
adc
push
mov
gs
test
dec
sbb
jnp
shrl
jle
pop
call
fildll
and
mov
stos
dec
cld
jbe
cld
inc
push
adc
popa
in
push
add
lods
jns
push
push
les
mov
mov
adc
jo
push
das
addb
add
imul
mov
sub
cmp
cmp
outsb
fs
sbb
and
pop
insl
push
jnp
loopne
daa
popa
and
je
imul
aas
bound
pop
dec
addb
subl
mov
jle
cmp
cmp
aaa
stos
orl
out
out
sub
enter
and
aas
sbb
std
aas
mov
test
imul
insb
pusha
stc
push
jns
mov
mov
test
jbe
out
jp
xor
lock
pop
push
sbb
fidivl
pop
jno
shll
cmp
js
push
inc
jle
add
mov
imul
cmp
jmp
mov
loopne
cwtl
adc
imul
mov
pop
pop
imull
mov
icebp
sbb
mov
add
jns
fidivs
pop
sub
in
loopne
inc
cmp
pusha
and
jbe
xor
pop
sti
push
pop
fs
lods
repz
out
jo
gs
int
and
add
imulb
fldenv
ret
daa
jno
or
loope
je
xor
jp
add
pop
dec
jge
icebp
cs
fs
dec
sub
xorb
sbb
jle
push
inc
ret
xchg
jae
dec
push
in
pop
mov
arpl
jle
fmull
cmp
xchg
push
push
mov
repnz
jle
sub
mov
xor
xchg
mov
and
idivl
ffree
jns
xchg
dec
xchg
push
pusha
fs
gs
ja,pt
jecxz
fisubrl
pop
loopne
subl
shlb
lcall
mov
adc
insl
xor
rol
push
aaa
lds
in
outsb
rorb
clc
dec
js
and
outsl
jmp
mov
in
clc
sbb
fimull
sbb
lods
jle
mov
dec
jo
out
push
add
xor
sbb
iret
pop
jg
ja
adc
pusha
add
push
xor
loope
push
pushf
add
push
js
call
mov
iret
data16
sbb
mov
jge
js
xor
aad
xor
lods
shl
addr16
pop
scas
stos
into
outsb
push
clc
cmpb
shl
cli
add
cmp
mov
arpl
add
addr16
bound
fisubrs
or
cwtl
movsb
sbb
fildl
outsb
dec
jl
cmp
mov
and
push
push
dec
and
pop
add
fistpl
sar
pop
cmc
outsl
testb
cwtl
stos
push
movsb
cmp
ds
push
fcoms
lock
lock
ds
lods
sarl
push
xor
fmuls
stos
push
sbb
xchg
or
mov
mov
jno
ret
inc
rcrb
lcall
pop
jb
fiadds
dec
outsl
adc
cmpsl
imul
call
xor
shr
jle
sub
add
jge
xchg
inc
adc
pushf
xchg
jnp
fcmove
mull
fiaddl
cmc
movsb
push
enter
scas
push
jno
icebp
jbe
pushf
jno
add
test
repnz
push
iretw
inc
std
adc
inc
test
add
or
inc
cld
xor
clc
adc
inc
mov
cmp
push
cmp
pop
out
push
movsl
mov
jns
test
xchg
jae
pop
push
movsb
or
mov
cmp
cltd
cmp
scas
out
sub
roll
in
adc
mulb
mov
pop
in
lea
lods
xchg
ja
sub
popf
mov
jle
mov
adc
aam
adc
mov
es
jbe
mov
icebp
fstpt
sub
xchg
and
sub
cli
xor
sub
dec
mov
jg
xor
fcoml
mov
icebp
maxps
dec
sbb
in
inc
lret
les
xchg
mov
and
lds
lea
mov
sbb
leave
shlb
mov
movsl
mov
ja
jb
je
or
stos
or
or
or
add
jbe
inc
aaa
mov
ss
and
and
les
and
call
pop
les
stc
inc
mov
inc
test
jg
imul
pushf
loope
sub
sbb
bound
push
adc
and
and
inc
dec
rcrl
xor
and
lea
ret
ja
xchg
das
rcr
mov
insb
and
cmpsb
push
and
fwait
mov
daa
mov
call
push
les
cltd
sbb
adc
mov
jecxz
xchg
jno
and
sub
jae
les
and
mov
repz
jmp
iret
fcomi
push
test
pop
lahf
stc
sub
sbb
shrb
xchg
jbe
aas
jno
orb
nop
cwtl
sub
jle
cwtl
sarb
fcompl
add
movsb
and
scas
pusha
mov
xor
push
pop
das
clc
sub
sub
ss
xor
and
ret
jg
mov
xor
jb
add
daa
aas
mov
test
std
push
sub
and
gs
mov
xchg
in
inc
pop
mov
negb
sbb
out
aad
ret
inc
mov
andb
in
data16
mov
sub
sub
cmpb
shl
cmpsl
xchg
repz
sbb
out
outsb
aas
subl
push
push
sbb
imulb
adc
push
add
sbb
jno
js
in
cmp
scas
lods
cmp
pop
insb
sahf
fildl
xor
push
adc
xchg
test
xor
shr
xchg
je
pop
sbb
sub
cs
pop
dec
jmp
inc
dec
add
syscall
jns
loope
inc
mov
ret
icebp
push
test
xor
scas
mov
mov
mov
lcall
orb
scas
stos
pop
cld
push
sbb
stc
xor
call
shll
rorb
or
ja
fistpll
add
dec
cltd
pop
xchg
push
mov
mov
jl
aaa
fwait
mov
pushf
cmpsl
xor
popa
sbb
movsl
push
data16
mov
push
shlb
fmull
movsb
ret
pop
cmpsb
daa
inc
mov
insb
inc
jmp
dec
mov
pop
sbb
mov
dec
dec
pop
test
fnstenv
dec
stos
add
std
bound
dec
mov
sub
repz
out
jbe
dec
dec
cmp
les
bound
inc
pushf
imul
add
into
into
stos
cmc
les
addr16
and
ret
inc
cmpsl
lahf
loop
insl
adc
insl
addr16
jno
xchg
sbb
sti
jb
push
push
xor
scas
fstpt
and
xchg
popa
pop
fs
adc
aam
xchg
mov
lcall
dec
xor
movsl
gs
out
pop
sbb
dec
adc
sbb
dec
mov
test
loop
fiadds
add
lds
mov
pop
sbb
rcrl
pop
out
mov
aaa
inc
fdivrs
cmpsb
inc
lods
sub
adc
dec
loopne
push
mov
insb
mov
or
test
dec
mov
add
ficomps
or
out
add
out
ret
mov
dec
call
cmp
call
add
in
arpl
ret
loopne
mov
les
inc
pushf
enter
mov
push
lock
jo
cmp
pop
repz
loop
jae
mov
cmp
cmp
or
test
int3
sbb
and
pop
add
xchg
mov
testb
icebp
aaa
or
fxch
pop
push
stc
push
lret
push
bswap
sbb
push
xor
aam
mov
push
call
adc
sbb
out
call
mov
cmovg
shrl
stos
cmp
arpl
sahf
ror
out
sub
into
jmp
jecxz
xchg
add
or
aam
push
imul
mov
jbe
adc
pop
cmp
fcoml
fwait
repz
stc
jmp
inc
cmp
jbe
add
fs
xchg
pop
xchg
mov
mov
dec
or
mov
jo
xorb
adc
pusha
adc
lock
insb
push
insl
xchg
std
mov
daa
cmp
jbe
jle
mov
inc
push
pop
jo
in
fisubl
xchg
and
scas
movsl
jl
fs
cmc
clc
lret
add
xlat
or
push
or
faddl
cld
jo
mov
push
aas
inc
pop
lods
sbbl
push
test
inc
jmp
or
xchg
or
xor
mov
push
push
daa
inc
loop
cli
or
dec
sbb
int
xchg
in
mov
xor
lcall
jmp
aam
cmp
icebp
jg
mov
pop
ss
mov
test
sbb
repz
push
scas
xor
dec
data16
or
fistl
cmpsb
mov
arpl
inc
or
ss
push
and
shll
or
mov
lods
or
mov
movsl
adc
out
addb
xchg
mov
sbb
out
scas
adc
xchg
repz
xor
cwtl
lret
pop
adc
xor
gs
lods
loopne
sarl
notl
mov
in
bound
out
jge
movsl
mov
sti
pop
lret
inc
out
pop
inc
fildl
adc
or
imul
ja
push
jl
sbb
repnz
mov
test
push
add
jle
flds
xlat
ss
mov
push
inc
lds
inc
jmp
jle
ja
insl
cltd
or
ss
jmp
or
mov
rclb
adc
dec
imul
lahf
push
iret
popf
imul
mov
testl
cltd
push
jbe
frstor
mov
aaa
jg
ljmp
cmp
and
or
pop
xchg
cmp
repnz
sbb
sub
xor
jg
inc
lcall
add
popf
scas
dec
or
cmp
sbb
mov
iret
jge
insb
test
popa
sub
lret
jl
dec
dec
insl
mov
in
cmpsl
data16
pop
push
les
jg
shll
mov
or
stc
sub
sahf
test
mov
sub
lods
pop
in
push
inc
push
movsl
fiadds
test
je
repz
sahf
rorb
jns
jp
decb
rcrb
xor
jbe
loopne
int3
push
pop
stc
sub
andb
xlat
test
stos
xor
adc
cmp
repz
stos
fwait
cld
fimuls
stc
mov
push
orl
dec
ret
lret
scas
adc
addb
jmp
jns
inc
inc
ret
scas
xchg
pusha
enter
dec
pop
add
iret
iret
cmc
shll
pop
adc
data16
mov
bound
enter
inc
je
xchg
push
bound
xchg
clc
lahf
popa
inc
mov
xchg
fidivrl
xchg
or
fcoms
and
add
mov
cmpsl
mov
popl
mov
rcrb
fidivrl
ds
scas
ret
and
fistpl
inc
daa
or
sar
or
push
mov
jle
shlb
adc
and
fwait
push
jg
out
dec
lcall
cmp
mov
in
negl
adcb
adc
mov
xchg
repnz
pop
sbb
ss
xchg
test
mov
or
stc
scas
pop
pop
orl
dec
fidivl
out
repnz
lret
lods
fimull
ret
imul
jmp
sbb
int
inc
loopne
lea
push
sbb
lret
lret
enter
cmp
add
outsl
xchg
cmpsb
mov
mov
xchg
mov
je
add
insb
xor
or
pop
mov
lock
scas
les
or
cld
inc
mov
cmpsb
cli
sub
cltd
pop
adc
sub
pop
clc
cmp
int
int3
ret
push
xor
lahf
push
mov
mov
je
fwait
mov
cmp
or
arpl
jcxz
insb
pop
and
xchg
xchg
add
or
pop
or
outsl
pop
bound
ljmp
dec
mov
cmp
dec
outsl
pusha
push
jo
jnp
sub
fistps
aad
mov
and
ffree
jae
pop
sub
cmpl
pusha
cmpsb
popf
push
fistl
mov
mov
dec
rcll
mov
add
rorb
and
or
sahf
mov
mov
test
sarl
cltd
xor
test
pop
pop
movsl
sub
or
mov
out
or
sub
push
out
xorb
shlb
push
jo
dec
xchg
dec
cmp
adc
mov
mov
and
push
ror
push
xchg
mov
es
adc
js
push
int
test
add
loope
and
inc
xlat
enter
sar
mov
enter
push
xchg
mov
in
and
jecxz
xchg
sbb
adc
mov
push
icebp
push
scas
sbb
lock
jns
pop
pop
or
cld
addr16
out
fnstcw
jmp
lods
test
jmp
loop
sbb
mov
xchg
test
orb
jbe
in
pusha
push
cltd
setne
hlt
mov
mov
cltd
mov
stos
ljmp
jmp
push
mov
xchg
and
lock
pop
inc
push
daa
inc
jae
mov
je
sub
out
or
test
or
adc
xchg
jecxz
cmp
stc
ja
xchg
mov
mov
shlb
lcall
mov
cmpsb
push
lods
mov
aaa
mov
scas
mov
popf
shrl
insl
arpl
sub
mov
push
divb
ds
nop
repnz
ficomps
mov
pop
sahf
cmp
push
pop
test
sahf
adc
cmpb
and
sub
xor
fsubrp
rclb
push
lret
cmp
xchg
xor
les
lahf
cmp
jno
in
xchg
sti
xor
dec
sar
cli
xor
add
cld
pop
xchg
and
aas
lret
cmpb
and
cmpsb
cmp
dec
popa
sbb
pop
imulb
test
arpl
mov
lcall
mov
es
cmpsb
ja
stc
cmp
push
scas
xor
pop
out
and
mov
add
xor
push
adc
xor
xchg
icebp
jbe
adc
jne
cmpb
dec
xchg
test
rcl
stc
adc
xor
arpl
inc
xchg
xchg
add
ljmp
std
push
dec
mov
lods
and
or
in
mov
push
addr16
cmp
dec
mov
add
mov
stos
mov
add
add
inc
sar
mov
mov
xlat
sbb
sti
lret
sarb
pop
and
mov
inc
jle
loopne
push
xor
push
mov
dec
push
popa
jbe
jns
outsl
or
hlt
push
imull
jae
fidivrs
test
inc
es
or
adc
es
imul
insb
fiadds
faddl
jo
stos
jnp
mov
outsb
fwait
sub
push
xchg
xchg
pushf
repz
cmpsb
dec
mov
iret
addr16
fistps
push
shl
bswap
push
cmp
push
sbb
aas
inc
pop
int
cs
popf
adc
out
jge
sub
sub
jmp
or
out
imull
pop
cwtl
lock
push
sbb
cmc
push
mov
shrb
dec
lret
mov
mov
test
lds
scas
xchg
dec
je
sub
or
test
dec
dec
pop
adc
add
lahf
jg
adc
imull
out
jno
loop
cmc
xor
aaa
movl
in
xchg
adcl
adc
mov
scas
sbb
inc
arpl
push
add
fcoms
daa
mov
push
xchg
push
cmp
popf
sub
popf
arpl
adc
fidivrs
outsb
pop
stos
jge
and
jmp
out
push
xchg
in
sbb
add
jo
dec
mov
inc
iret
xchg
push
xlat
pop
jl
aam
xchg
repnz
icebp
stc
mov
fistpll
add
adc
js
xor
cmc
push
fcompl
pop
movsb
insb
mov
out
clc
fs
or
xchg
xor
outsl
inc
cmpsl
lea
je
dec
lea
lret
inc
loop
or
int3
adc
fcmovnu
pop
xor
ja
inc
pop
lea
mov
repz
lea
aas
pushf
cmp
arpl
or
cs
xorl
mov
cld
fildll
push
lock
aam
icebp
xchg
ds
into
mov
xor
push
dec
lods
out
mov
and
into
lahf
dec
lods
js
sbb
clc
jno
jne
syscall
sub
jl
into
cs
stos
jl
mov
rcrb
pop
xchg
add
imul
dec
loope
shrb
daa
push
dec
mov
jns
int
cli
ja
rol
ret
cmpsl
in
pop
mov
cmp
mov
cli
xchg
or
imulb
in
push
pop
ret
cs
push
lock
push
push
jg
es
lahf
test
adc
data16
dec
jge
arpl
inc
xor
ds
in
xlat
mov
mov
xchg
mov
out
mov
inc
divb
inc
scas
and
xchg
add
inc
out
push
syscall
and
xchg
mov
insl
xor
xchg
jno
xor
cmpsb
pop
mov
in
fcoms
fdivl
cmc
mov
pop
lcall
pop
stos
push
inc
cmpsl
mov
icebp
mov
jecxz
dec
adc
push
dec
cli
fwait
xor
adcl
push
fnstcw
notl
mov
push
xchg
lods
push
push
ficoml
mov
sub
mov
je
in
inc
daa
aam
and
xchg
ret
mov
roll
rcrl
bswap
jo
pextrw
mov
dec
inc
scas
nop
inc
cld
mov
adc
loopne
mov
outsb
adc
add
add
in
insl
lret
dec
popa
jns
test
cmp
jp
sub
orl
inc
and
popa
ljmp
lods
add
dec
push
insb
pop
dec
stos
pushf
pop
push
out
cwtl
cmp
lock
je
pop
decl
sbb
outsb
fistpll
push
mov
and
or
dec
cmp
jg
repnz
test
repnz
pushf
dec
or
pop
daa
or
dec
jo
cmp
arpl
std
insb
into
and
push
push
pop
sar
xchg
cmp
inc
loop
das
das
enter
jmp
mov
and
fnstcw
scas
test
test
push
adc
outsb
push
or
sahf
mov
outsb
jae
std
xchg
jle
dec
scas
out
testb
movsl
dec
in
in
inc
aaa
or
sub
dec
or
icebp
sbb
or
sahf
nop
jg
adc
pop
mov
out
dec
pusha
test
pop
std
push
push
mov
xchg
mov
add
jo
rorb
loop
insl
mov
xchg
lret
pop
movsl
pusha
movsl
hlt
adc
lods
pop
add
lcall
pusha
test
les
movsl
add
mov
cld
mov
in
sub
fsts
push
xor
dec
adc
mov
push
cmc
xor
push
cmc
adc
mov
jl
add
data16
pop
mov
jns
xor
pop
test
pop
mov
push
rclb
or
ds
jg
cld
rcll
mov
jp
cmpsl
or
mov
and
out
push
hlt
cmp
scas
cmpsl
xor
stc
test
inc
push
cwtl
loop
push
or
cwtl
inc
jb
out
adc
in
jbe
enter
scas
sbb
inc
pop
pop
addl
outsl
mov
push
insb
mov
pop
mov
pop
js
mull
push
jbe
sbb
hlt
outsb
fsubs
cmp
rolb
lret
hlt
cwtl
mov
inc
sar
or
enter
popa
push
or
gs
sti
rcrl
jb
add
test
in
sbb
pop
xor
sub
test
xlat
daa
mov
sbb
adc
jp
cmp
dec
loop
gs
mov
sub
or
mov
mov
cmp
sub
adc
cmp
jb
or
popf
repnz
in
cmp
cmc
xlat
ljmp
xchg
mov
mov
cmp
movsl
mov
adc
jo
rorl
lret
inc
adc
addb
cmp
jne
xchg
enter
sti
add
stc
mov
jo
inc
pop
pushf
mov
xor
inc
xchg
and
add
xchg
dec
mov
xchg
negb
cltd
loop
lods
or
xor
jl
cmc
and
mov
cwtl
cwtl
push
scas
cmp
hlt
out
pop
dec
inc
push
mov
sahf
jmp
pop
cld
push
scas
adc
add
xchg
cmpsb
mov
sarb
mov
fnstsw
xlat
les
dec
in
bound
sub
xor
push
dec
aaa
fdivr
xchg
ja
add
stos
out
cli
mov
fistpll
fidivl
adc
call
mov
jmp
mov
mov
mov
lea
mov
std
mov
sub
es
mov
xor
xchg
inc
fld
pop
fmulp
das
jmp
filds
inc
or
jle
sub
out
andl
xchg
jns
stc
mov
lahf
ret
sbb
adc
cwtl
adc
test
test
dec
mov
cwtl
xchg
out
adc
lahf
ja
sbb
aaa
int
mov
xor
sub
cltd
das
rorb
lahf
jp
and
cmp
mov
nop
jno
fwait
pop
sahf
das
sub
loope
aaa
xchg
stos
pop
push
stos
mov
or
dec
add
inc
jg
jle
in
fnstcw
jae
js
sbb
jnp
daa
xchg
sbb
test
push
in
xor
mov
push
fwait
int3
and
push
cmp
inc
push
flds
popf
mov
or
fwait
pop
push
hlt
xchg
pop
mov
cmc
gs
out
jge
std
arpl
adc
xlat
stos
lahf
xor
fdivrl
insl
in
add
lahf
js
insb
mov
jne
xchg
inc
int3
lods
and
xorb
cli
or
xchg
imul
push
mov
pop
adc
je
cmc
inc
sahf
out
push
pop
pop
xchg
pop
cltd
dec
lods
in
stos
cmp
mov
into
cmpsb
push
daa
jno
lds
movsb
push
out
clc
mov
jl
scas
adc
lds
jno
mov
xchg
mov
shll
inc
test
inc
push
push
dec
scas
cmp
rcll
addr16
popa
mov
mov
imul
or
mov
push
clc
xchg
dec
pusha
jmp
sub
cmp
pop
push
mov
ljmp
push
into
add
js
lods
mov
lock
sahf
xor
insb
lahf
push
sahf
pop
dec
jns
mov
lcall
dec
push
mov
andl
inc
gs
sub
faddp
dec
jno
jo
lds
mov
push
leave
test
inc
pop
jge
push
test
clc
sbb
stos
pop
push
dec
xor
pop
fnsave
movsb
pop
subl
cmp
int3
xor
jnp
std
loopne
test
outsb
inc
jbe
add
fistpll
or
bound
jne
insl
mov
lds
pop
lret
pop
sahf
clc
stos
cmp
inc
repz
pop
movsb
push
cli
orl
pushf
in
jmp
sbb
dec
xor
mov
pusha
into
jl
fistl
mov
int
or
or
adc
pop
and
cli
adc
mov
shr
jmp
ss
aas
pop
jb
mov
sbb
inc
fpatan
jno
mov
jp
test
test
xor
enter
addb
or
inc
adc
int3
or
adc
push
cwtl
rol
lahf
inc
mov
outsl
add
jns
scas
jg
jle
mov
cli
js
stc
mull
loopne
adc
adc
ficoms
dec
outsb
sub
lret
xor
mov
stos
adc
in
ljmp
mov
aam
xor
out
xchg
inc
pop
fcmovb
inc
outsl
imul
xchg
outsb
mov
js
mov
into
push
jb
and
in
je
int3
pop
addr16
out
jg
call
dec
cld
cmp
xchg
inc
ret
dec
xchg
inc
sbbb
repnz
ljmp
xchg
ds
xchg
cmpb
push
cli
aas
or
ret
ja
dec
mov
out
sbb
and
imul
je
jp
pop
push
sub
fs
or
insl
mov
into
xlat
scas
sub
jg
mov
adc
aaa
test
jne
gs
fisttps
or
ss
mov
clc
mov
fdivl
add
icebp
cmpb
cs
lret
test
and
mov
pop
or
fadds
pop
add
push
mov
pop
push
imul
push
out
mov
mov
mov
cmpsb
lcall
inc
mov
pop
push
addb
mov
das
pmovmskb
jmp
sub
inc
aam
push
ds
scas
xchg
add
mov
push
test
lods
pop
scas
jp
ja
sbb
xor
cmp
or
nop
lcall
adc
lcall
outsl
add
add
push
mov
repnz
mov
mov
mov
in
jmp
aaa
icebp
sub
sbb
add
sbb
out
inc
push
cmp
fsts
ds
repnz
orb
in
stos
cltd
fildl
enter
add
cmp
or
cmp
sub
lcall
xorb
lea
data16
or
cmpsl
cmc
adcl
sbb
mov
repnz
insb
cmpsb
ds
test
mov
sti
jge
dec
sbb
jb
xlat
push
sub
pop
cmp
push
pop
ljmp
popa
jns
popa
stos
pop
push
sbb
clc
fmull
push
adc
clc
mov
inc
push
mov
jl
mov
push
imul
push
fwait
mov
push
mov
dec
xchg
jns
jl
xor
in
adc
lock
ja
fs
push
or
mov
adc
xor
jnp
inc
test
pusha
cmp
fimull
into
mov
addr16
push
sbb
rcrl
test
dec
sbb
pop
fsubrs
and
mov
out
xchg
gs
mov
xor
jne
sarb
sub
sar
push
nop
cmp
jns
popf
push
xor
push
pop
mov
add
movsb
stos
jno
out
xchg
adc
cld
dec
lahf
mov
lahf
insb
xchg
shl
fldl
sub
fistpll
fldl2t
stc
loope
mov
int3
sbb
es
scas
fidivl
cwtl
sub
inc
stos
adc
ret
xchg
popf
gs
push
lods
mov
xchg
mov
push
out
rorl
cld
push
pop
int3
in
imul
push
bnd
aam
fldcw
sub
push
xor
sahf
xlat
pop
lods
fstps
dec
sub
mov
sub
pop
sarl
mov
cmpsb
dec
stos
mov
in
push
je
ja
mov
cmp
repnz
adc
in
lods
das
inc
rclb
test
cmp
repnz
fnsave
scas
push
mov
das
outsb
aad
inc
in
mov
pop
cs
dec
fsubrs
cmp
jmp
out
shrl
and
xorb
xchg
pop
pop
rcrl
mov
insb
mov
and
shrl
inc
rcr
in
inc
lahf
or
fsubs
fcomp
adc
add
dec
in
push
or
mov
push
jb
in
sbb
and
jb
xchg
jmp
mov
add
mov
nop
loopne
mov
jae
daa
test
dec
mov
xchg
into
lcall
mov
aas
adc
call
movsl
and
inc
test
mov
push
sbb
cmp
jl
bound
dec
and
adcb
mov
in
lods
pop
cmp
mov
loop
loope
lods
dec
pop
xchg
pop
jnp
test
inc
xchg
add
lods
pop
and
in
in
lods
mov
sti
pusha
xchg
int3
adc
movl
fidivl
bound
fmul
pop
xchg
clc
xchg
adc
idivb
jmp
or
loope
cmpsb
mov
rcl
mov
data16
and
out
cmpsl
mov
mov
inc
sbb
or
mov
test
lods
mov
sub
inc
test
test
cmp
les
push
cmp
je
js
sbb
adc
mov
jle
mov
and
mov
rcr
incl
cmp
push
and
add
stos
mov
pop
push
addr16
stos
sub
adc
dec
mov
je
inc
movsl
push
jns
stc
fisttpll
xor
mov
or
pop
mov
test
sar
mov
push
fnstsw
rcr
pushf
mov
out
jle
aam
arpl
rorb
mov
lcall
jmp
loope
fadd
sarl
xchg
dec
sarl
push
sub
stc
cmp
mov
jmp
push
mov
fisttps
test
inc
out
shlb
and
push
mov
inc
call
xchg
inc
test
cld
arpl
xchg
mov
ret
cmp
dec
orl
dec
aas
push
mov
movsb
adc
or
leave
sbb
adc
cltd
dec
inc
pop
push
adc
movsl
orl
sub
cmc
inc
and
jne
aas
push
mov
ss
icebp
xor
add
int3
mov
adc
xor
std
cmp
cltd
or
mov
and
cmp
lock
fwait
pop
fwait
in
lret
fstps
mov
inc
insb
ja
rcl
dec
sbb
inc
dec
dec
jecxz
jb
hlt
xchg
dec
and
pop
ror
fsubrp
icebp
xchg
int3
aam
lret
mov
fld
pop
lea
shll
pop
aas
pop
cmp
push
aad
adc
das
sbb
test
dec
dec
jg
shlb
mov
push
and
add
pop
in
test
jmp
push
xlat
jl
aam
je
aad
add
push
iret
scas
shl
call
inc
popf
mov
and
ss
adc
popf
xor
popa
sub
scas
outsb
jge
out
push
aas
push
cli
divb
cmp
add
pop
fs
jb
sbb
das
rcll
mov
enter
mov
movsb
mov
or
sbb
mov
ds
rcll
push
jl
hlt
sbb
lea
push
xor
or
jge
fmull
shlb
xor
pop
mov
xchg
xchg
outsb
outsb
sbb
inc
and
ret
sarl
sti
inc
dec
push
lods
xor
stos
sbb
mov
sti
shrl
dec
sbb
sub
xor
std
rclb
add
push
xor
inc
cltd
cmp
cmp
pusha
jge
push
fisubrl
out
out
orl
jne
inc
pop
pushf
repz
inc
cmp
fmuls
test
decl
sub
in
fcomi
aas
int
inc
arpl
mov
outsl
sub
shl
imul
repnz
out
or
test
jo
pop
shrl
push
lret
inc
mov
mov
xchg
imul
daa
add
jo
xchg
or
inc
mov
mov
push
mov
loopne
xchg
repz
lea
jbe
pop
xlat
test
inc
pop
jp
aaa
push
outsb
xchg
movsl
test
sbb
imul
xchg
or
aam
ficoms
mov
rorl
in
push
gs
mov
mov
rcrb
rcll
jp
jo
sbb
test
fdivrl
icebp
or
push
mov
sbb
cs
mov
dec
aas
dec
test
jns
push
mov
lods
hlt
lods
add
fsubr
mov
fsubs
cmpsb
sub
jno
rcrl
push
mov
jp
inc
fwait
ja
pop
testb
int
inc
and
adc
cmpsl
mov
shll
xchg
call
fwait
cs
fistpll
cmp
jnp
push
jmp
call
jmp
xchg
dec
or
ficompl
int
test
popf
jp
mov
std
dec
xor
mov
fsubl
outsl
clc
popa
mov
cmp
notb
fistps
call
sbb
loope
push
and
or
cmp
sarb
jae
shlb
sub
lock
enter
push
adc
mov
test
jae,pt
sar
arpl
popf
test
push
addr16
mov
adc
fdivrs
add
mov
int3
adc
outsb
daa
push
mov
push
add
test
jbe
mov
mov
lods
xchg
aad
mov
or
mov
je
pop
sub
push
fldt
bound
adc
cmp
aad
scas
sub
std
lret
out
iret
repz
xchg
push
je
fs
mov
push
and
std
xchg
mov
or
mov
sub
mov
in
pop
das
mov
mov
fistl
mov
ja
shrb
shll
dec
loope
shlb
mov
xor
mov
xchg
cwtl
sub
jo
or
mov
mov
jae
mov
mov
add
dec
test
call
dec
mov
inc
movsb
mul
mov
xchg
shll
inc
incl
outsl
jbe
inc
dec
ds
jne
out
and
dec
push
mov
cltd
pop
sub
add
ret
lea
sbb
mov
cmp
iret
inc
mov
push
in
negb
ret
jno
push
jbe
or
jle
mov
bound
cmpsl
mov
pop
mov
sub
clc
xchg
rolb
add
fsubp
es
push
push
mov
testb
adc
dec
sub
dec
xlat
in
and
inc
in
cmp
push
xchg
inc
xchg
and
data16
and
mov
jp
test
push
scas
pop
sub
push
xchg
or
lds
sbb
xchg
and
sbb
or
shr
adc
mov
dec
jae
or
dec
cli
roll
pop
xchg
cmp
flds
bound
insl
divb
xor
pop
push
jae
xorl
pop
cmp
movsl
into
add
leave
xchg
sbb
or
cmpsb
test
adc
sub
enter
add
aaa
cmpsb
xor
loope
add
daa
aad
pop
test
mov
in
and
push
mov
bound
inc
adc
add
mov
jecxz
lcall
xchg
into
in
pop
icebp
out
scas
imul
jno
lret
and
mov
and
mov
pop
popf
repz
inc
fwait
test
shlb
sub
scas
in
xchg
scas
das
adc
adc
outsl
pop
dec
or
jg
cld
lahf
lds
adc
inc
rcll
repz
push
cmp
xchg
xchg
fildll
inc
popa
add
sub
enter
jge
in
lret
lcall
orb
ds
mov
sbb
mov
inc
fldenv
fs
or
or
sbb
inc
aam
sbb
inc
inc
stc
ds
xor
stc
test
divl
sti
out
les
mov
jb
lret
outsb
int3
pusha
xchg
pop
cwtl
sbb
daa
and
jns
and
cld
lods
xor
outsl
fldt
fsubrl
lods
jle
shlb
mov
jmp
lea
push
lds
cld
mov
sub
aad
dec
lret
fcoms
fs
or
sub
out
ljmp
lds
mov
or
push
xchg
dec
push
push
enter
mov
jnp
test
in
push
clc
js
pop
ret
mov
xor
cmpsb
and
aad
je
cmp
lea
pop
adc
push
mov
popl
pop
or
xchg
dec
jne
adc
lods
mulb
jge
dec
mov
adc
dec
cmp
repz
pop
inc
mov
sub
rcrl
xchg
sbb
push
jle
inc
pop
in
push
jnp
xchg
sub
scas
mov
aaa
std
mov
movsl
dec
sbb
insb
repnz
jmp
arpl
lahf
adc
das
or
cwtl
push
aas
inc
sbb
inc
loope
mov
add
xchg
nop
insb
pop
push
je
inc
std
mov
ret
jle
arpl
lds
jecxz
jne
sub
push
ja
aad
loope
add
dec
lods
sub
inc
ror
jecxz
or
push
mov
dec
lcall
and
mov
imul
rol
push
sub
inc
push
xor
popf
inc
int
mov
call
pusha
std
in
cmp
out
ljmp
mov
push
mov
imul
rcll
pop
stc
jmp
stos
xchg
shlb
xlat
test
push
iret
pop
add
push
pop
inc
push
dec
mov
mov
pop
pop
jmp
adc
in
jp
popa
mov
fcomps
lret
xchg
push
push
test
add
inc
push
add
sbb
leave
emms
mov
mov
sbb
clc
jmp
xchg
dec
mov
scas
jne
mov
xchg
in
cmp
ds
dec
mov
xchg
push
dec
test
push
lods
jns
je
jge
xchg
jno
js
jae
mov
or
idivl
sub
jp
or
jl
ljmp
dec
test
cmpsl
inc
sub
add
imul
in
jae
xor
xchg
or
push
iret
dec
leave
sbb
outsl
or
xlat
out
pop
js
xor
lret
adc
lret
sbb
dec
test
pusha
out
xchg
jo
dec
or
stos
or
js
sahf
test
or
cmp
hlt
add
fucom
lcall
sbb
rcrl
cld
xor
test
pop
std
test
mov
cltd
bswap
adcb
loopne
cltd
and
lods
decb
std
pop
ljmp
int
sub
push
push
sub
pop
sarl
inc
xlat
aam
adc
ljmp
lcall
jmp
int3
xchg
push
lock
mov
fprem
cmc
stos
and
xchg
push
jbe
pop
and
push
insl
dec
xchg
inc
das
in
xor
loop
sti
fsub
xchg
jae
push
inc
std
jno
rclb
dec
and
test
mov
out
loop
cmp
iret
out
andb
xchg
push
mov
std
ss
insl
popf
inc
aas
loope
stos
pop
lcall
lods
out
cwtl
daa
sub
ja
daa
std
lret
cltd
pop
mov
fsubrl
popa
je
test
xor
mov
dec
xor
cli
mov
mov
subl
mov
test
jo
or
notl
andl
ret
or
inc
mov
inc
mov
mov
and
rcll
jb
mov
sub
in
jge
daa
dec
xchg
sub
loopne
sub
dec
adc
push
pop
sbb
dec
mov
jns
cli
and
ss
and
in
fdivl
push
pop
dec
lret
test
add
fwait
aam
cmp
mov
xchg
hlt
inc
popa
lcall
push
dec
das
sahf
xchg
jno
rorl
pop
add
mov
fnstsw
xor
ljmp
sub
add
fcomps
inc
jge
pop
dec
inc
inc
aaa
stc
pushf
mov
addb
xorb
mov
or
call
je
in
mov
mov
sbb
dec
sbb
scas
ficompl
adc
adc
filds
lods
mov
sub
pop
jge
mov
ret
out
push
jge
pop
mov
pop
aaa
test
test
inc
or
push
repz
mov
mov
xor
mov
adc
stos
scas
adc
test
inc
lcall
xchg
sahf
sbb
xlat
or
push
sbb
inc
mov
push
jno
cltd
pop
jno
jecxz
adc
sbb
inc
sub
out
add
decb
arpl
cmp
cli
inc
in
and
or
mov
pop
mov
mov
divb
icebp
je
outsl
icebp
adc
lods
sarl
out
mov
sbb
jle
fldcw
push
adc
push
xlat
fldt
sbb
icebp
pop
mov
or
repz
mov
sub
stos
add
mov
push
clc
lcall
rcl
in
data16
mov
ds
push
or
enter
xlat
fbstp
push
loope
scas
mov
scas
mov
cmp
push
and
xlat
mov
stc
leave
adc
ja
inc
cld
sbb
push
cs
fs
inc
in
lods
ret
lods
imul
sub
cmp
mov
cmp
pop
mov
pop
fs
inc
jle
dec
cmpsl
gs
cmp
daa
mov
fbstp
mov
imul
cmp
arpl
insl
insl
xchg
sub
xor
int
inc
adc
bound
mov
sub
or
mov
fsts
inc
adcl
les
gs
pop
jno
rorl
push
dec
add
xor
scas
test
inc
adc
cwtl
movsb
fnsave
jae
sbb
test
sbb
pop
push
mov
push
and
stc
orb
inc
dec
mov
scas
xchg
jle
and
cmp
jnp
aaa
sbb
iret
xchg
mov
sbb
dec
cltd
test
in
push
dec
adc
mov
and
lcall
push
xlat
sahf
lds
cmp
loop
xorl
mov
xchg
mov
mov
push
or
mov
loope
loopne
ret
xchg
in
into
jb
sbb
mov
lahf
add
inc
dec
imul
mov
adc
dec
pushf
stos
mov
inc
aaa
hlt
adc
test
cmc
push
aas
clc
fdivrs
sub
xchg
sbb
mov
dec
sbb
push
aad
std
std
sub
sti
call
add
pop
mov
mov
adc
bound
pop
js
pop
mov
jbe
xor
sub
push
shlb
in
lods
push
pushf
hlt
enter
pop
or
xor
pop
xor
dec
stos
or
aaa
popa
dec
push
sub
xchg
push
dec
call
jl
fiadds
and
sbbl
mov
push
ret
xor
cmp
cmpsb
xchg
adc
fdivrs
sbbb
sub
jmp
xchg
std
cmp
enter
cli
xrelease
dec
cmp
test
inc
cmpsl
ret
aas
adc
push
adc
movsl
pop
shrb
test
test
push
rcl
jae
xor
and
jecxz
fwait
imul
jp
xor
fs
inc
nop
lods
sub
ljmp
inc
aad
jnp
pop
jns
rclb
pop
addl
dec
cld
fwait
cmp
and
rclb
sbb
daa
rcrb
clc
pop
scas
cltd
lcall
add
filds
push
fsubl
mov
popa
mov
in
push
jl
mov
loope
xchg
mov
ds
mov
inc
movsl
fwait
jne
mov
and
pop
rcrl
aas
push
jne
cmp
lcall
daa
mov
fidivs
je
in
mov
mov
sti
push
sbb
sbb
mov
inc
pushf
test
pop
jecxz
cs
inc
jmp
pop
call
mov
add
shrb
xor
out
xchg
ja
lret
sahf
and
mov
repz
nop
dec
push
scas
popa
fdivrl
stos
mov
and
loopne
rclb
imul
sbb
cltd
aam
mov
mov
popa
fneni(8087
adc
mov
push
mov
mov
jo
xchg
mov
fisubs
in
pusha
jb
cmc
mov
orl
lret
stos
sarl
popa
shll
out
xchg
mov
cltd
sarb
mov
loopne
push
lret
icebp
push
push
ss
pop
dec
xchg
or
fldt
loop
andl
aam
mov
cmpsb
sub
mov
das
sbb
add
lds
imul
shll
lds
jbe
mov
mov
aam
or
sbb
cmp
imul
out
jmp
fsub
adc
mov
out
fisubs
das
adc
mov
ss
xor
shll
mov
cli
jmp
jns
push
mov
mov
xchg
ljmp
push
ret
push
mov
adcb
stos
ss
mov
popa
dec
dec
mov
inc
pop
sbb
mov
push
stc
test
call
scas
jle
in
rolb
mov
negb
mov
rorb
push
sub
lea
fstl
lods
pop
dec
xchg
sub
rcrb
adc
decl
push
push
xchg
loopne
cmpsb
call
sub
stos
jge
pushf
xchg
sbb
sub
cmp
jb
insb
and
test
icebp
repnz
outsb
mov
dec
clc
lock
xchg
fists
push
scas
loope
out
rclb
cmp
scas
test
insl
and
sahf
int3
and
inc
aaa
push
jb
int
fwait
or
neg
add
mov
cmp
cmp
xor
sahf
movsl
sub
dec
test
dec
scas
imulb
mov
inc
inc
xchg
fs
fstl
jp
xor
lahf
sub
movsl
hlt
xorl
xchg
push
int
push
or
bound
xorl
add
rorb
fimuls
push
test
pop
lods
mov
xor
pop
mov
call
mov
xchg
pop
pop
lret
xchg
rcr
push
jmp
fs
mov
pop
jmp
mov
and
fmuls
add
int
jp
sub
pop
add
xchg
cmp
pop
adc
test
jmp
jno
clc
push
and
fcompl
je
add
jno
js
negl
push
loope
push
pusha
scas
testb
sub
inc
std
jmp
aad
mov
rolb
inc
or
cmpsl
xchg
repnz
push
inc
xor
inc
lea
enter
shr
push
daa
test
adc
jne
push
dec
js
push
dec
ljmp
nop
mov
call
mov
mov
adc
ret
push
and
cmc
xor
cmp
mov
mov
in
xlat
jae
ljmp
sarb
js
addr16
push
fidivrl
dec
lret
push
add
js
xchg
cmp
aad
cmpsl
lds
or
and
lret
sbb
xlat
movsl
mov
test
ret
shlb
sbb
mov
inc
stos
test
cmp
cmc
mov
les
roll
je
mov
shll
push
popa
sub
push
imul
jmp
pop
sarb
mov
jne
pusha
mov
fnstenv
inc
pop
jo
imul
out
jae
mov
loope
sbb
mov
inc
cmpsb
aam
mov
push
jge
and
stos
mov
push
adc
add
lock
movsl
sti
int3
sub
dec
jge
jb
cmp
dec
add
push
mov
das
cmc
fcmovbe
testb
les
cmp
shr
mov
ljmp
lret
jns
scas
push
call
or
out
mov
or
ja
fcoml
sbbl
test
pop
and
inc
dec
fadd
subl
xchg
add
ds
sti
inc
sarl
fcoml
and
sti
xchg
jge
sub
cmp
and
sbb
dec
dec
dec
jnp
sbb
mov
jae
push
lahf
inc
lds
aad
stc
mov
mov
jo
lret
shrl
gs
aas
sbb
in
or
inc
cmp
mov
dec
or
cld
lea
nop
and
push
xor
repnz
push
rclb
test
or
sbb
jmp
out
mov
mov
dec
das
push
fstps
cltd
xor
inc
push
jne
int3
jo
rorb
jns
sub
xchg
dec
rcrl
fisttpl
hlt
imul
add
and
push
test
cltd
xor
pop
les
stos
loopne
fldt
shlb
push
sarb
jo
fdivp
shrb
and
xor
daa
xor
data16
xchg
lcall
or
dec
les
fnsave
rclb
filds
pop
scas
clc
or
mov
fisubl
mov
stc
adc
movb
es
jp
push
leave
xlat
pop
xor
mov
push
out
or
ret
mov
das
adc
or
sbb
cmp
fdivrs
ror
and
and
fcom
pop
mov
bound
hlt
test
mov
daa
push
and
cmpsb
xchg
sbb
xchg
jnp
pusha
dec
mov
movsb
sar
iret
idivl
mov
je
popf
jae
dec
pop
out
pusha
add
or
popa
test
sarb
cmpsb
add
jb
in
dec
inc
hlt
xchg
rcrb
out
dec
xchg
jne
push
jl
jo
mov
int
xor
jb
mov
mov
push
mov
or
pusha
add
subl
test
repnz
cmp
fstps
stos
jae
jmp
jns
sub
pop
mov
adc
sbb
std
sub
fcoms
cli
xchg
stos
scas
movl
cmp
sbb
push
lahf
jg
ds
lods
or
pop
stos
dec
roll
stos
jns
xchg
jmp
lds
mov
leave
adc
cmp
addr16
fs
cmp
pop
mov
popf
repnz
cmc
mov
in
xor
add
and
int
in
pop
orb
mov
push
pop
outsb
cmpsl
lahf
cwtl
cmp
loopne
mov
add
pop
mov
test
mov
mov
mov
mov
dec
jno
pushf
jnp
sub
adc
movb
and
xor
cmp
test
stos
add
rorl
test
and
bound
sbb
jb
je
insb
mov
inc
sub
mov
das
mov
adcl
lods
adc
enter
mov
in
add
xor
xor
das
or
inc
or
fxch
mov
cmp
js
imul
nop
inc
fs
and
mov
pop
addr16
aas
inc
mov
dec
or
add
iret
jecxz
movsl
lret
or
je
dec
into
push
and
mov
int
subl
cmp
mov
shrl
mov
or
mov
daa
cmp
out
pop
rcll
mov
cmpb
inc
pop
push
mov
sar
addr16
sarl
fldl
pop
aas
cmp
out
xor
xor
jecxz
movsb
dec
fwait
int3
ja
sbb
stos
out
pop
or
insb
stos
icebp
pushf
xor
cmp
in
pop
imul
ss
jb
and
lret
mov
mov
and
ds
pop
or
mov
jge
xlat
xchg
push
mov
shlb
std
sti
subb
data16
je
fidivs
add
add
add
scas
jmp
sub
pop
mov
scas
cmp
and
inc
adcl
test
bound
or
in
call
sub
push
mov
mov
adc
or
jns
aad
and
call
adcb
outsb
lahf
int3
out
fwait
or
mov
push
push
jl
inc
or
hlt
xor
xchg
loop
pop
lods
sarb
jns
inc
out
jno
cli
mov
inc
pop
loop
push
xchg
andl
bound
pop
js
dec
mov
xorb
add
and
pop
xchg
or
add
dec
xchg
pop
mov
jecxz
outsl
ljmp
nop
sub
nop
cmpsl
mov
mov
daa
call
cltd
add
push
mov
cmpl
lcall
xor
mov
or
leave
cmp
fsubrl
mov
enter
xor
or
cmp
cli
sahf
cmp
adc
or
adc
add
or
inc
js
test
jle
fdivs
or
cmc
sbb
inc
or
out
push
push
mov
sub
xchg
movsl
popf
jne
add
pop
insl
mov
push
ja
test
adcb
sbb
and
mov
jmp
lods
pop
cmpsl
adc
loopne
addb
leave
push
mov
out
outsl
mov
and
mov
push
sub
in
adc
mov
cmp
jmp
dec
cltd
enter
xchg
mov
in
scas
test
mov
pusha
loopne
jp
aad
ljmp
fmuls
daa
jns
pop
xchg
cmp
mov
pop
and
xchg
out
fs
hlt
sbb
jno
fildl
mov
lcall
je
lcall
test
or
fidivrs
ret
inc
arpl
or
jl
xchg
adc
mov
inc
add
jnp
test
pop
pop
inc
les
cmc
out
pop
and
jne
mov
mov
inc
jle
sub
lcall
xchg
scas
std
aas
jl
movsl
adc
mov
int
jne
add
sub
mov
out
or
jp
scas
add
aad
cmp
sub
xor
out
sbb
pop
cmp
hlt
pop
or
movsb
push
pop
and
add
jnp
movsb
das
pop
mov
adc
pop
adc
gs
aas
push
cmp
inc
pushf
inc
popa
jl
es
mov
or
dec
in
and
shll
cli
rclb
and
lahf
xchg
pop
leave
out
fdivrp
and
push
or
jae
in
lret
sub
or
or
js
lea
cltd
aas
push
inc
lock
push
adc
arpl
jns
dec
and
or
cmpsb
jecxz
sbb
xor
pop
scas
test
dec
jmp
insb
inc
sub
sub
sbb
fmull
jg
or
and
pushf
sub
xchg
pop
mov
mov
std
add
push
adc
pop
adc
ja
ret
mov
dec
fwait
imul
mov
cmp
cmpsl
mov
dec
sub
inc
mov
dec
pop
or
mov
dec
nop
fnstsw
popl
negl
or
push
pushf
dec
es
or
push
sahf
cmp
iret
je
xor
cmc
sbb
mov
stc
aad
les
arpl
insb
mov
outsb
dec
jecxz
in
imul
cmpsl
cmp
int
sbb
mov
lods
addr16
dec
adc
fiaddl
pop
sub
daa
fyl2x
jne
dec
mov
aaa
das
pop
xchg
adc
mov
sub
xchg
push
mov
mov
arpl
xchg
adc
sub
or
scas
inc
ficoml
jl
cmp
xchg
hlt
cmovl
mov
inc
out
push
xor
adc
dec
test
call
insb
cmp
jae
test
les
or
jns
daa
mov
out
test
xorb
cmp
sub
loopne
cmc
imul
inc
push
lods
adc
roll
fdivs
push
adc
xchg
inc
fistpll
sub
call
sbb
clc
insl
cmp
pop
test
jne
rcrb
stos
bound
aad
mov
xchg
stos
lds
mov
sub
lcall
and
push
adc
cmp
mov
shlb
and
addr16
pop
xchg
int
mov
xchg
scas
mov
push
iret
cmpl
mov
fisubl
jecxz
stos
dec
pop
push
jle
mov
jle
push
xchg
filds
jge
popf
xor
iret
xchg
aam
loopne
mov
or
stos
sti
mov
pop
cmpsb
cltd
push
fwait
xor
mov
push
dec
loop
insb
xchg
inc
idiv
push
les
sti
rcrl
xchg
dec
lock
stc
cmp
push
mov
stos
scas
add
adc
in
add
adc
fsubs
dec
aas
push
cmpsb
jmp
les
pop
loop
mov
cli
and
sub
fildll
out
push
test
dec
dec
mov
and
inc
mov
out
and
pop
xor
stos
cltd
std
push
shll
sti
jns
jb
dec
loope
rcrb
lods
pop
or
insl
fisubrs
mov
xchg
xchg
xchg
enter
sub
cmp
xlat
pop
orl
xchg
jb
mov
push
xchg
mov
adc
pop
in
push
inc
sbb
insb
enter
int3
ljmp
sub
push
sub
mov
sbb
mov
adc
jle
jle
subl
insb
movb
shll
add
arpl
push
dec
jb
mov
inc
andl
push
pop
sub
jbe
xchg
fwait
stc
ja
je
pop
mov
cmp
cltd
sub
std
inc
dec
adc
pop
js
lcall
repz
jge
das
movsb
in
sarl
stos
push
repz
cmpsb
add
jae
pop
add
lret
js
loop
mov
mov
imul
inc
mov
jl
mov
fwait
mov
sub
push
xor
mov
xorb
neg
repz
fwait
sti
mov
mov
ljmp
inc
cld
dec
test
movsl
aaa
cmp
mov
add
fdivrp
fcomps
mov
xorb
mov
ja
add
pop
mov
xchg
fisubrs
adc
and
cmc
mov
jns
idivb
push
sub
test
loopne
sub
scas
nop
out
lods
add
test
push
and
int3
into
leave
dec
mov
or
mov
popa
mov
pop
mov
cmp
mov
in
jmp
mov
mov
jne
xor
jmp
rclb
icebp
lret
mov
mov
fwait
paddusb
test
rorl
stos
lock
or
icebp
push
dec
ret
jp
icebp
cwtl
xchg
out
ss
lods
dec
adc
pop
adc
push
jmp
mov
mov
xchg
lea
push
push
loop
add
scas
fs
pop
out
sbb
dec
iret
mov
sbb
sahf
pop
hlt
mov
jecxz
cmc
sbb
dec
mov
outsl
xchg
popf
mov
out
out
ror
sbb
in
cltd
inc
into
push
test
push
push
xor
dec
and
push
sbb
rol
xchg
sbb
dec
sbb
pop
push
dec
lock
jo
xchg
or
adc
into
test
mov
dec
aam
pushf
dec
jg
xchg
lds
add
dec
ficomps
jge
push
in
sbb
sbb
out
enter
ja
mov
or
stc
pop
xchg
stc
in
adc
lret
xchg
jne
clc
xlat
sbb
fdivr
aas
add
or
cli
adc
daa
pop
fwait
aam
pop
dec
icebp
push
push
xchg
scas
shrb
cld
out
push
bnd
mov
testb
jae
xor
iret
jp
sti
fcmove
mov
add
iret
int3
fiaddl
lds
mov
fisttpll
sub
adc
hlt
adc
jns
or
mov
adc
jns
cwtl
or
push
xchg
pop
adc
dec
sahf
mov
lss
out
mov
adc
mov
xor
aas
ret
out
sub
mov
cwtl
sbb
jecxz
cmp
xchg
movsb
mov
loop
jbe
mov
jbe
es
dec
lret
inc
ret
fistpl
mov
cwtl
aam
fcompl
cs
ret
jl
pop
out
mov
jno
daa
mov
pusha
out
lds
push
jge
mov
arpl
jecxz
inc
mov
inc
movsb
nop
jo
lods
scas
xor
iret
mov
movsb
pop
leave
pop
dec
and
addr16
jg
aas
jno
sub
fldt
push
test
icebp
in
and
mov
outsl
clc
mov
jb
lods
imul
ret
sub
in
dec
sub
clc
ljmp
sub
fdivl
xchg
ds
lea
mov
lcall
andb
xchg
call
mov
stc
xor
sbb
arpl
mull
and
int
sbb
les
fnstenv
shll
in
enter
loopne
in
outsl
icebp
je
lock
xor
notl
jecxz
das
loopne
adc
pushl
stos
mov
lahf
xor
daa
adcl
test
dec
or
sbb
and
maskmovq
imull
add
rcrl
pop
mov
ljmp
ficompl
fwait
fwait
dec
xchg
shll
call
or
xchg
mov
cmpsb
mulb
mov
scas
ja
enter
dec
xchg
sbb
shlb
jbe
pop
mov
xor
insb
or
mov
lcall
rcpps
aam
nop
pop
clc
test
ret
xchg
std
scas
adc
rcrb
bnd
jnp
jmp
je
mov
and
xorb
mov
enter
ffree
cmp
jl
inc
mov
sub
mov
jl
and
mov
push
cwtl
pushf
js
mov
aam
movsl
mov
dec
sbb
add
dec
cmp
pop
jb
xchg
mov
nop
in
lea
inc
insl
pop
fistpl
mov
lock
aas
sbb
cld
jne
and
dec
jge
add
imul
aaa
push
mov
jnp
leave
sbb
mov
dec
repnz
add
fmuls
push
mov
in
sub
adcl
sahf
dec
or
or
data16
cmc
cld
jecxz
mov
cmc
aas
bswap
push
jbe
sbb
je
dec
movl
and
xorl
push
ss
push
out
xor
or
fsubrs
xor
out
arpl
test
outsl
cmp
addr16
into
movsl
push
push
and
stos
mov
xor
aad
leave
jae
push
cmp
dec
int
lds
sbb
push
add
mov
xor
or
lds
mov
xchg
and
cwtl
sahf
push
pop
ljmp
or
or
push
push
pop
inc
out
cmp
scas
xlat
das
jecxz
xor
or
push
test
cmc
xor
mov
jae
fldcw
or
or
and
mov
imul
enter
imul
pop
dec
icebp
popa
xchg
insl
pop
sahf
inc
pop
adc
and
or
cld
jl
sbb
mul
insl
incl
lahf
jae
lcall
aaa
loopne
pusha
int3
mov
push
outsl
and
int3
lock
dec
testl
loope
cmp
scas
imul
js
pop
pop
jns
adc
jge
lock
test
ds
push
mov
xor
lcall
mov
cwtl
outsl
xlat
dec
pusha
mov
fildll
sarb
sub
xchg
dec
imul
push
orl
xchg
and
lret
adc
push
lods
movsb
mov
pop
inc
push
mov
xchg
pushf
cltd
outsb
test
add
push
sub
mov
mov
xchg
jl
and
mov
ret
jae
mov
or
hlt
xchg
mov
push
fdivrs
idivb
mov
iret
mov
dec
je
mov
fsubrp
rcl
es
cmp
cmc
xchg
vpcmpgtw
push
cmp
jne
jnp
inc
and
in
stc
int3
enter
faddp
or
movsb
sub
jb
movsl
mov
loop
and
push
dec
icebp
pop
shlb
pop
in
jne
mov
hlt
popa
sahf
inc
stc
add
loopne
cmp
inc
pop
mov
jl
inc
jl
jl
adc
ret
mov
adc
lods
mov
cmp
sbb
movsb
dec
es
jg
je
pusha
mov
pop
notb
xchg
mov
clc
xor
or
popa
jle
mov
and
xchg
jp
nop
mov
leave
push
cmp
sub
lret
bound
div
mov
not
clc
gs
ljmp
ds
cld
cld
jbe
add
fdivrs
inc
push
pop
jge
adc
xchg
jb
fwait
mov
pop
mov
pushw
shl
pop
dec
xor
leave
add
xor
lahf
dec
in
shrl
and
stc
and
adc
jl
stos
mov
sub
dec
iret
frstor
xchg
dec
test
test
fnsave
fs
and
repnz
divb
mov
adc
mov
sbb
loopne
jb
adc
inc
cwtl
mov
sahf
or
scas
popf
sbb
fdivs
sub
lea
jle
sbb
cmp
add
jb
int3
jmp
lods
cmpsl
test
push
hlt
xor
dec
push
mov
cli
test
or
out
xor
adc
js
fstps
dec
or
mov
xor
lea
dec
shll
dec
jg
cltd
pushf
fdiv
xor
sub
roll
fwait
inc
frstor
lods
mov
lock
cmp
aam
imul
popf
in
bound
dec
inc
mov
cmpsl
lret
xchg
jo
bound
cli
movsl
iret
sub
shrb
add
sbb
call
scas
mov
js
ljmp
ret
aas
shll
mov
push
outsb
sub
outsb
fisttpl
dec
ret
jg
xchg
push
rclb
push
out
xchg
inc
out
notb
add
shlb
push
out
mov
out
cmp
clc
jnp
imul
sarb
cmpsl
pop
pop
mov
mov
js
sub
mov
or
int3
cmpsl
sbb
in
lretw
roll
mov
inc
sbb
js
sbb
mov
cwtl
scas
xchg
jbe
and
cmp
inc
cli
out
inc
mov
mov
cmp
ss
xchg
adc
push
mov
push
sbb
mov
and
mov
cwtl
xor
or
cmp
cmp
pop
out
fildl
lret
mov
ror
ficoml
push
cmpsb
push
int3
mov
pop
fmull
or
jo
jle
movb
push
and
mov
ret
mov
mov
sbb
mov
data16
clc
shrl
roll
fwait
lds
lock
add
cwtl
dec
aaa
es
repz
fs
rcl
gs
xlat
xchg
cltd
jecxz
or
rclb
cmp
rolb
jl
data16
add
enter
js
inc
or
iret
jl
cmp
push
in
mov
adcl
stos
das
cmp
cmp
push
adc
cs
push
shll
mov
orb
push
gs
adc
or
or
ds
rcrb
xchg
cmp
dec
fnstsw
push
adc
mov
leave
jmp
leave
dec
lahf
mov
mov
or
fstpt
sbbl
lret
jmp
xchg
mov
in
iret
and
out
into
xor
lods
out
hlt
gs
arpl
push
mov
ljmp
push
mov
nop
clc
xor
sahf
inc
mov
daa
cmpsl
sub
pop
xchg
and
jle
stos
lds
pop
or
pusha
mov
in
sub
adc
sbb
loope
js
and
jne
jnp
mov
test
in
cwtl
pop
and
cmc
mov
sbbl
jb
lret
ljmp
jo
mov
in
xchg
mov
inc
and
andb
lcall
sbb
lret
mov
jae
sbb
mov
xor
push
push
lock
scas
call
test
sbb
fsub
out
sbb
inc
lcall
adc
movsb
insl
mov
pop
pop
adc
jae
dec
ljmp
jb
and
popa
sub
adc
fnsave
jae
xor
fmul
popf
pop
mov
and
loop
ret
out
scas
jno
stc
ljmp
mov
fiadds
inc
adc
jle
inc
mov
les
fwait
and
scas
loope
sbb
mov
call
jge
and
adc
in
push
jb
xchg
mov
stos
jbe
stc
mov
scas
xchg
add
xorb
inc
std
bndldx
lcall
push
cmpsl
mov
andl
sub
and
dec
pop
call
gs
jno
xchg
lret
xchg
jg
es
jge
clc
adcb
mov
adc
jl
xchg
adc
dec
lret
pop
pop
cwtl
clc
aas
leave
xor
ds
pushf
mov
xchg
jmp
cmp
dec
rorb
sbb
add
lret
stc
push
clc
ret
mov
test
mov
xchg
out
cmc
test
xchg
mov
lock
jno
cmp
jg
icebp
jle
lods
cli
pusha
mov
cmp
push
mov
out
add
jae
dec
fldt
enter
rcrl
dec
mov
mov
std
iret
repz
jmp
int3
sub
test
or
addr16
test
fstpt
xchg
or
test
mov
aad
xchg
lret
scas
inc
push
enter
xor
jb
push
mov
insb
leave
mov
fistps
repnz
movsl
clc
ljmp
inc
mov
loope
movsl
in
cmp
mov
push
mov
inc
les
jg
std
xor
aaa
fnstenv
fmuls
xchg
scas
fwait
mov
lea
push
mov
xchg
enter
cmovge
xor
push
pop
test
int
aam
jge
in
out
lahf
fwait
pop
out
dec
pop
xchg
in
jmp
cmovnp
xchg
xor
cltd
xor
pop
dec
push
pop
sbb
std
adc
js
jecxz
xor
lahf
jge
dec
xor
adc
sbb
sub
icebp
mov
imul
add
sbb
xchg
ds
sub
mov
aaa
push
xlat
repz
mov
jno
dec
xchg
jnp
mov
inc
jb
es
ror
repnz
aaa
fsubp
jg
add
es
sub
pop
push
push
xor
fnsave
cs
fistl
dec
enter
mov
jnp
rorl
int
stos
sub
aad
push
stos
adc
cmpsb
test
int3
mov
push
dec
dec
loope
adc
cmp
aaa
cmpl
rol
sbb
add
repz
lahf
out
push
movsb
jge
ror
pop
pop
test
xchg
mov
fstpt
pop
insb
dec
mov
lahf
sub
stos
jae
lock
cmp
bound
call
xchg
mov
nop
in
mov
add
add
rcl
and
dec
pop
incb
mov
test
sub
pop
sbb
test
in
mov
aas
mov
fcoml
jmp
cmpsl
push
or
inc
inc
push
loope
push
cs
xchg
mov
adc
add
xor
test
sbb
and
adc
ret
xchg
pop
sarb
adc
inc
fsubs
mov
push
and
outsl
mov
xchg
inc
push
sarl
dec
jle
and
mov
loope
adc
dec
js
call
in
test
push
loop
xchg
in
push
pop
addr16
inc
jnp
and
rcrl
je
test
and
and
adc
clc
mov
ror
push
sbb
mov
pop
ficoms
mov
jmp
inc
aam
adc
or
scas
sub
pop
add
jb
dec
aam
loope
push
pop
cs
cwtl
fmul
adc
mov
lcall
sbb
inc
cli
mov
mov
ds
cmpsl
dec
sahf
adc
inc
loope
mov
add
pop
dec
xchg
lret
lret
fisubrs
mov
mov
push
dec
lcall
cmpsb
mov
test
mov
xor
stc
lret
hlt
sbb
outsl
pop
sbb
cwtl
bound
in
add
aas
test
jae
lock
push
gs
xor
div
mov
dec
xchg
jmp
jb
movsb
lock
inc
push
cmpsb
aad
mov
mov
mov
jo
xor
cwtl
push
xchg
sbb
or
imul
pop
cmp
cmpsb
aam
je
mov
out
sub
push
xchg
scas
xor
jge
call
adc
mov
cwtl
shr
add
shll
pushf
hlt
dec
dec
mov
jg
clc
xchg
xchg
mov
mov
xor
lea
sbb
mov
aam
mov
cmp
adc
adc
and
cmpb
push
out
shrl
push
js
dec
loope
shll
dec
mov
rorl
cmp
sbbl
inc
insl
nop
ja
lock
push
push
repnz
lds
push
sti
iret
pop
cmpsl
xor
sub
inc
movsb
ljmp
repz
daa
and
outsl
cltd
mov
dec
jnp
fnstsw
fistpl
lods
cmp
mul
mov
repnz
jp
mov
pusha
fisubrs
ss
test
lods
push
dec
pusha
mov
cli
xchg
or
xor
bound
add
popa
stos
cmp
cmp
sahf
xchg
es
nop
mov
shll
fdivrl
xor
or
push
test
jo
xlat
scas
mov
ror
sbb
aam
pop
and
pop
sti
addr16
pop
sub
xchg
and
mov
call
or
stos
sub
jecxz
push
rcrb
sub
dec
xchg
icebp
loope
pop
movsb
xor
rclb
leave
rol
jecxz
pop
and
into
inc
cltd
sbb
jns
or
clc
adc
std
mov
out
cli
xchg
mov
mov
jp
pop
mov
cmp
jbe
dec
lret
in
fs
pop
sbb
and
push
ret
imul
sbb
in
cs
bound
rsm
outsl
insl
mov
loope
les
jns
int
in
data16
pop
xchg
mov
xchg
gs
lea
in
ffreep
pop
pop
push
outsb
sbb
in
xor
lcall
xor
mov
ret
xor
jmp
pop
add
cmp
sub
fsubrs
pop
xchg
xlat
or
sub
inc
in
test
cmpsb
jecxz
xor
mov
adc
add
adc
shrl
divb
push
xor
in
or
loope
sarl
jmp
dec
iret
out
js
dec
cwtl
fstl
adc
xor
or
adc
aam
ja
dec
outsl
gs
cs
mov
std
imulb
sbb
movsb
xor
cmpsb
cmp
or
mov
es
pop
and
cmp
dec
sbb
scas
mov
push
push
in
cmpb
sbb
dec
leave
inc
adc
add
cmpsl
jl
subl
loope
sarb
ja
fistpl
repz
int
push
sarl
xor
inc
xchg
mov
push
aas
and
lea
inc
push
ja
pop
xor
bound
cmpsb
iret
adc
inc
ds
pop
fwait
aaa
cmpsb
divl
pop
out
pop
scas
jmp
cmp
xchg
adc
cmpsl
jno
or
pop
loope
mov
xchg
jmp
cmp
adc
pop
xlat
imul
aas
call
cli
repnz
cmp
daa
adc
lcall
cmp
xor
lcall
std
loope
sbbb
negw
out
fiaddl
mov
cmp
stos
mov
adc
int3
imul
fdivr
jl
test
push
stos
rcrb
mov
aaa
mov
bound
xor
push
rcll
int3
in
xlat
xor
cmp
rclb
cmpb
and
shll
lods
pop
leave
push
popf
in
push
lret
adc
sti
out
imul
out
negl
dec
mov
inc
jo
adc
sti
mov
adc
xor
icebp
pushf
lret
mov
lods
fists
pop
scas
inc
scas
mov
xor
nop
inc
in
in
pop
out
jecxz
pusha
push
sbb
fstpt
pop
lock
sbb
mov
add
sbb
adc
pop
std
out
das
addr16
mov
dec
mov
sub
into
out
loop
scas
daa
lcall
das
pop
clc
outsb
cmp
pop
dec
dec
pusha
add
test
inc
int3
fstpl
scas
cltd
jmp
push
fs
data16
dec
jge
out
ret
fnstenv
lahf
sbb
mov
enter
test
xor
and
movl
or
loopne
loop
arpl
gs
push
pop
and
cmpsb
hlt
jmp
cmp
inc
push
std
stos
scas
outsl
mov
mov
xor
outsb
add
sbb
hlt
lret
movsl
rorl
out
or
jmp
jmp
adc
xor
xchg
jl
hlt
or
mov
and
mov
push
pop
fwait
push
push
daa
jecxz
add
ret
sbb
fcoms
xchg
add
sub
mov
sgdtl
stos
inc
popa
shl
add
inc
insl
test
mov
add
jnp
loop
adc
push
adc
scas
xchg
fldenv
aaa
cli
cmpsl
pop
pop
dec
push
cmp
cmpsl
aam
and
jb
lea
xor
jl
mov
aaa
inc
xor
xchg
push
cltd
imul
or
inc
iret
cld
and
les
mov
loopne
shll
hlt
inc
data16
xchg
add
scas
mov
imul
les
jb
sub
push
clc
je
shrb
aaa
out
lods
nop
lret
shlb
int3
adc
push
mul
test
xor
ljmp
leave
dec
aad
pop
cmpsl
xlat
test
je
add
xchg
adc
fbstp
xchg
out
mov
mov
lcall
pop
mov
push
test
pop
or
test
lahf
jle
mov
dec
push
xorl
xchg
ljmp
ret
mov
and
push
es
cli
jbe
shrl
mov
jecxz
sbb
xlat
ret
dec
push
push
dec
push
cld
cmp
xlat
loop
add
scas
xchg
push
lods
sub
shll
xor
lcall
cwtl
ret
std
ss
xor
sbb
ffree
or
cltd
ret
aas
subb
jp
int
clc
icebp
cltd
inc
js
adc
imul
xchg
pop
mov
insl
sub
adc
pop
je
mov
pop
ret
cmc
mov
mov
adc
test
jl
rcl
cwtl
cmp
bound
xchg
fisttpll
imul
fisubl
jae
dec
sbb
movsb
inc
hlt
mov
or
cmp
popa
jmp
ficoml
and
rcrl
mov
into
lret
aas
cmpsl
lds
xor
in
push
test
xor
scas
jne
mov
jns
std
loope
jns
mov
inc
outsl
ljmp
out
outsb
cmp
leave
and
insl
addr16
mov
jo
repnz
sub
push
scas
push
dec
adc
iret
gs
loopne
pop
outsb
xchg
je
cmp
inc
sbb
imul
mov
stos
push
movsb
add
mov
aam
fimuls
dec
jmp
fists
fs
inc
pop
xchg
test
jg
and
shrb
add
sub
test
rolb
outsb
fisubrl
fsubrs
mov
fldl
rolb
jnp
popf
test
fistps
mov
cmp
mov
mov
stos
push
mov
icebp
rcll
mov
xor
gs
xchg
fsubr
push
test
xchg
ret
mov
xor
rorb
sbb
fisubrs
xlat
or
cwtl
shll
xchg
cmova
mov
sbb
ret
mov
pop
push
ret
outsb
xchg
pop
popa
inc
dec
arpl
ror
out
lcall
inc
mov
adc
xchg
fcoml
test
stos
add
stos
and
ss
mov
aad
das
aaa
mov
xor
mov
pusha
addb
pop
jecxz
mov
cmpsb
outsb
push
decb
push
sub
dec
cli
cmp
pop
xchg
pop
scas
stc
jl
mov
int
pop
adc
xchg
and
bound
sbb
outsl
pop
aam
fsubrl
xor
push
in
sarl
and
sub
and
loope
mov
mov
xor
lret
push
inc
sti
push
nop
cwtl
xorb
jnp
enter
pop
je
jle
mov
je
loop
addr16
push
test
shlb
inc
push
push
adc
adc
push
sub
test
fisubs
test
dec
add
imul
sub
mov
jmp
mov
cli
push
cmp
sbb
adc
mov
test
stos
xchg
int
mov
sahf
out
cmp
clc
cmp
pop
cmp
leave
icebp
xchg
mov
scas
inc
cwtl
jmp
shlb
sbb
xlat
insb
loope
rorl
in
shll
mov
xor
stos
nop
sub
fwait
lock
or
cmp
test
jge
jmp
dec
loop
sbb
decl
xor
push
lret
mov
outsl
cmp
sti
in
mov
fdivl
xchg
and
push
inc
jne
add
add
xor
sbb
ljmp
push
push
cmp
je
gs
imul
roll
pop
or
addb
rcll
dec
test
lods
cltd
cmp
int
xchg
xchg
or
cmc
rcrb
mov
and
push
mov
cmpsl
and
lock
adc
inc
loop
iret
scas
xchg
lret
imul
fs
addr16
into
icebp
inc
ret
push
mov
lds
loopne
mov
sub
data16
leave
cld
in
lea
cmp
testb
idiv
pop
dec
in
and
push
rorb
xchg
popa
scas
adc
ljmp
push
sbb
loope
lods
xor
loop
mov
movsl
fwait
out
loopne
loopne
sub
fmuls
xchg
cmpsb
adc
ret
adc
lea
cmpsb
jg
cwtl
push
pop
outsl
fimull
enter
push
xchg
mov
rcl
popa
adc
xchg
shlb
js
sub
jne
pop
mov
xor
subl
pusha
pop
jno
add
xchg
mov
push
mov
sbb
cmp
jle
insb
ss
stc
push
jns
xchg
sbb
out
repz
jmp
mov
mov
movsl
push
mov
cltd
xorl
mov
enter
dec
jbe
cli
pop
imul
mov
jbe
push
inc
movsb
mov
xor
jnp
outsl
iret
int
cmp
out
les
cmp
push
dec
fmul
lret
adc
mov
cmc
ret
scas
or
mov
int3
sub
bound
push
add
pop
dec
out
scas
sbb
or
stc
lods
inc
xchg
jnp
int3
jo
add
ror
add
dec
fsts
dec
sbb
pop
xor
ja
pop
push
loop
xchg
clc
shll
imulb
popf
pop
mov
adc
sub
xor
sbb
push
and
jl
inc
daa
sub
add
imul
jo
aas
les
fdecstp
pop
adc
and
stos
fnstcw
mov
mov
mov
pop
mov
sub
jge
fcomi
aas
scas
roll
mov
push
or
and
mov
mov
stc
mov
sub
sub
mov
out
or
orl
sub
xlat
outsb
in
aad
jbe
jl
scas
jne
test
cli
pusha
lahf
xor
orl
cli
sub
daa
jge
jnp
inc
and
flds
clc
addr16
cltd
gs
push
sub
lods
gs
shrl
dec
sbb
inc
adc
scas
call
and
jbe
push
adc
out
rcrl
inc
out
xchg
cld
mov
mov
clc
xchg
test
orl
loope
insb
pop
xor
fstps
sub
adcl
add
and
and
scas
lods
push
dec
rolb
addr16
mov
popa
inc
pop
fucom
mov
cmp
cmp
loop
outsb
cmpsb
add
xchg
ffreep
aaa
std
insb
jge
mov
and
push
mov
xor
adc
enter
stc
leave
iret
out
inc
outsb
aam
dec
dec
or
xchg
push
lods
sub
leave
sub
into
sub
fdivl
mov
xor
jns
out
push
mov
adc
inc
dec
mov
ja
arpl
ds
mull
push
sbb
push
mov
xchg
ret
inc
pop
cmc
insb
ds
pop
mov
pop
mov
fucomip
pop
mov
fmuls
ret
loope
pop
iret
push
inc
mov
mov
push
xor
pop
imul
mov
jbe
out
lret
inc
pop
orl
scas
dec
rclb
xor
test
mov
daa
adc
imul
jg
jne
jmp
adc
and
daa
rcll
or
ret
push
lret
jl
jnp
les
pushf
mov
movsl
arpl
pop
outsl
test
push
mov
jle,pt
dec
movsb
pop
dec
pop
xchg
adc
popf
adc
adc
pop
fsubrl
dec
std
adc
or
xchg
cmp
lods
mov
xor
and
test
mov
ss
filds
cmp
sub
lods
xor
jns
jnp
push
xchg
mov
add
nop
cli
mov
pushf
movl
mov
jle
mov
out
aaa
sub
cmp
push
push
dec
jmp
scas
adc
adc
test
cli
mov
out
mov
fucom
add
and
inc
ret
sarb
dec
jl
inc
or
ja
jbe
mov
xchg
pop
icebp
nop
xchg
inc
sbb
add
cwtl
cltd
jmp
jbe
cld
dec
sub
dec
inc
lea
cltd
ds
into
push
sahf
sbb
add
push
sahf
ret
adc
jmp
mov
push
jge
jmp
push
sarb
push
sbb
add
iret
mov
loope
bound
call
inc
push
jle
data16
push
lea
movsb
mov
and
adc
jae
gs
das
push
fiadds
aam
daa
arpl
lret
mov
mov
xor
jns
mov
jl
and
push
mov
lcall
push
mov
sbb
adc
mov
adc
lea
mov
jne
inc
in
mov
xchg
dec
jge
ficomps
xchg
leave
pop
cs
dec
aas
js
push
cmp
iret
cmp
mov
jp
fisttpll
and
xor
adc
jae
movsb
divb
xchg
bound
ljmp
inc
inc
cmp
jnp
in
cli
xchg
call
out
xchg
or
jnp
jbe
xchg
cmp
push
dec
push
test
popf
sahf
adc
lods
or
imul
dec
in
jmp
iret
out
add
pop
pop
rorb
mov
dec
pop
fidivs
mov
arpl
mov
xchg
dec
push
mov
cwtl
add
notb
lret
dec
movsl
test
sahf
dec
mov
divl
clc
leave
jg
lds
xlat
jb
mov
insl
jo
mov
xchg
lock
scas
js
lea
sbb
sub
stc
pop
push
mov
push
xor
or
cltd
inc
lret
adc
lds
leave
bound
stos
icebp
dec
lcall
cli
daa
sub
in
dec
mov
push
fwait
cltd
test
xchg
icebp
out
cli
mov
dec
dec
lea
and
cmp
movsl
mov
mov
sbb
aas
adc
jg
mov
or
and
cmp
sub
cmpsl
jp
popa
inc
stos
xchg
pop
scas
inc
inc
fists
mov
imul
cmp
jne
jb
jecxz
cwtl
inc
sub
jns
or
sbb
or
and
cmpsl
sbb
jg
xchg
nop
and
cmp
cs
rolb
jo
mov
repz
mov
adc
mov
pop
push
hlt
push
pop
mov
ja
mov
add
shll
dec
outsl
dec
es
out
aad
cs
xor
jge
sbb
les
imul
push
in
rep
jle
jo
mov
pop
mov
cmp
jmp
inc
jns
pop
outsl
jb
adc
mov
aad
sbb
lret
clc
ljmp
inc
out
mov
mov
jae
fs
pop
fidivrl
pop
sbb
aaa
push
push
shlb
dec
fisubrl
cltd
rcr
mov
int
xchg
ret
ret
xchg
loope
movsl
lret
or
int3
sbb
and
scas
sbb
rcl
xchg
push
cmp
insb
aad
and
cmp
mov
pop
aas
in
jle
add
pop
xchg
ret
in
or
sub
mov
mov
ror
push
addr16
bound
push
in
and
or
dec
jp
dec
mov
test
mov
stos
jne
sub
cld
outsl
push
xchg
cmp
or
mov
adc
sbb
aad
mov
xchg
xlat
pop
push
push
cmp
push
bound
cmp
inc
jbe
xor
pushf
in
xchg
push
pusha
movsl
and
push
mov
jne
xchg
dec
sub
test
lret
add
shlb
scas
stc
ss
popa
pop
push
es
jle
jne
std
pop
or
and
fsts
jg
sti
xor
ret
bound
xchg
xchg
sbb
not
test
xchg
lds
sbb
adc
xchg
insb
cmp
cs
sahf
jnp
pop
mov
lcall
subl
clc
outsb
daa
xor
fwait
jnp
idivl
incl
and
negl
ds
pop
cltd
mov
mov
push
push
les
pop
int3
fisubs
inc
adc
or
je
xchg
flds
addr16
push
pop
popa
sub
test
je
sbb
fxch
push
adc
xor
dec
aas
or
pop
rorl
dec
call
inc
pop
shrl
xor
pop
xor
jg
je
jae
das
in
inc
inc
pop
daa
cmpl
sbb
movsl
lods
and
jl
lcall
addr16
cmpsb
cmpsl
sub
add
xchg
call
adc
xchg
je
test
add
lret
test
int3
adc
or
sbb
mov
add
adc
mov
mov
inc
fs
xorb
xchg
mov
jnp
fimuls
test
cmpsl
call
cmp
sub
push
dec
xchg
push
xor
repnz
xor
push
mov
mulb
sbb
pop
add
xor
sub
adc
clc
xlat
jmp
aas
dec
sbb
and
ret
xchg
sahf
outsl
xor
dec
pushf
jbe
loope
movsl
ficoms
jecxz
sub
pop
inc
rorl
out
pushf
in
add
insl
xor
out
cld
negb
les
clc
sti
stos
cli
icebp
ds
scas
fwait
push
sub
ss
adc
ljmp
loopne
negb
lods
inc
lods
and
cmpsb
mov
jmp
adc
jbe
out
sub
mov
adc
addl
leave
insl
stos
xlat
mov
dec
hlt
sub
jmp
mov
xlat
in
cmp
jge
cs
call
lock
cmpl
mov
dec
mov
pop
in
adc
sub
cwtl
dec
test
cmp
mov
or
pop
cmpsl
nop
jmp
pop
lret
mov
ret
jno
mov
fiadds
loop
test
int
dec
dec
mov
ljmp
pop
jne
mov
adc
jmp
add
xchg
jmp
mov
mov
cmpsb
lahf
xor
xchg
and
insl
bound
push
pop
or
push
mov
and
int
jp
dec
xor
lods
mov
push
dec
rolb
push
decl
cld
push
add
mov
lock
cwtl
ljmp
daa
in
leave
inc
sbb
roll
cmc
mov
mov
jp
push
pop
ds
sbb
pop
and
dec
ss
mov
push
lret
mov
cmc
pop
outsl
imul
mov
stc
js
mov
loope
sarb
xchg
test
sbb
cmp
lcall
mov
mov
jg
dec
fisttpl
mov
xor
push
sub
inc
dec
inc
leave
xchg
jo
cltd
outsl
push
sbb
out
outsb
es
pop
sbb
rclb
cmpsl
xchg
enter
mov
mov
or
cwtl
outsb
aam
fnstenv
and
add
xor
jmp
cmpsb
sbb
xor
mov
divb
push
aaa
scas
cmpsl
lahf
aas
adc
cmpsb
inc
and
insl
add
lahf
pop
jnp
sub
test
inc
out
sub
fwait
mov
pop
sbb
push
cmp
jmp
rorl
jp
fldl
je
jmp
lds
sbb
fisttpl
clc
lock
stos
xchg
mov
sub
add
dec
icebp
xchg
xchg
lods
imul
cltd
mov
out
lret
scas
push
lods
jle
mov
sub
outsb
mov
push
repnz
fs
add
xchg
mov
inc
popf
xorl
inc
jbe
lds
loope
jge
mov
ret
out
push
test
lods
sbb
jmp
mov
cwtl
mov
testl
adc
mov
jno
xorb
mov
sbb
pusha
push
adc
jle
mov
adc
sahf
ljmp
fmuls
aaa
into
push
add
pushf
loop
pusha
xchg
enter
out
sbbl
lret
cmp
mov
cmpsb
vpabsw
dec
adc
int3
scas
jl
movsl
mov
push
out
mov
mov
pop
loope
mov
cmpsb
icebp
push
xchg
sahf
sbb
mov
subb
icebp
and
mov
push
lret
std
push
mov
jbe
push
sub
cmp
scas
dec
ja
dec
cmp
jecxz
outsl
jmp
adc
and
pop
jbe
sub
xchg
cmp
mov
repz
movsb
mov
xor
mov
mov
lahf
mov
pop
xor
pop
or
out
add
mov
lds
sbb
pop
std
mov
fidivrs
js
jnp
imul
dec
jp
sub
jecxz
cmp
aas
xor
push
test
ret
dec
push
ja
sahf
add
jg
cs
xchg
stos
out
add
fsubl
xchg
test
aaa
mov
xchg
pop
add
dec
xor
int3
mov
xor
xor
dec
loop
mov
xchg
jno
and
xchg
or
ja
adc
fildl
sbb
xchg
inc
aam
push
mov
mov
cmp
xchg
jbe
iret
repz
xor
mov
lcall
xor
in
insb
and
out
add
jae
xchg
mov
aas
daa
sbb
daa
test
mov
mov
loop
movl
sbb
adc
adc
jle
aas
divb
sub
xor
sbb
loope
call
popa
andb
sbb
sub
add
dec
fwait
push
stos
push
dec
dec
mov
jl
sub
daa
jg
fistpll
xchg
push
xor
hlt
mov
ljmp
sbb
fdivs
lahf
and
shr
push
sub
and
inc
and
pushf
stos
cmpsb
je
or
test
stos
nop
inc
cmp
cli
outsl
testl
lock
push
ja
mov
adc
test
stc
xor
dec
adc
daa
xor
sbb
iret
arpl
out
in
jp
rol
cs
or
push
or
sbb
pusha
sub
fistl
call
xchg
ret
jne
outsb
insl
pop
dec
loop
shlb
lret
nop
mov
cmp
inc
ss
xor
mov
dec
lahf
repz
mov
inc
push
movsb
mov
push
lcall
sarb
mov
pop
push
in
or
pusha
lock
xor
movsl
cmp
xchg
cmp
xchg
gs
pop
add
aas
rcrb
ljmp
scas
lods
jmp
dec
mov
int3
lcall
aas
push
sbb
imulb
out
je
jp
cmp
sub
jle
insl
stc
test
bound
fwait
sub
test
stos
sti
cmp
add
xchg
es
jmp
pop
mov
pop
out
xlat
lahf
daa
mov
daa
adc
xlat
or
xlat
packuswb
cmp
subb
jmp
adc
adc
in
out
xchg
pop
and
scas
cmp
in
sbb
loop
mov
adc
lret
mov
dec
jl
xor
xor
jb
lock
sbb
lret
gs
stos
std
cmpsb
xchg
nop
call
jnp
sub
mov
cwtl
cmp
loop
call
dec
adc
mov
adc
fwait
jnp
pushf
call
cwtl
mov
scas
popa
mov
mov
push
cmp
push
xor
mov
jmp
push
xor
mov
mov
stc
jle
int
cmp
stos
fisubrs
xchg
jnp
icebp
popa
jge
aaa
and
jl
rol
rcll
push
pop
cltd
adc
ffree
mov
rcrl
lds
cmp
sti
les
dec
out
in
and
fldenv
add
xchg
leave
and
push
adcl
pop
inc
scas
adc
cltd
lods
lret
push
in
pop
icebp
ror
jp
inc
xor
sti
jo
xlat
inc
insl
mov
iret
test
jp
cmp
subl
inc
out
jle
rclb
sub
aam
sti
push
pop
add
sbb
out
add
mov
test
je
cmc
dec
in
into
lds
arpl
adc
cli
mov
int3
popa
xor
adc
pop
cwtl
sbb
cmpsb
mov
push
mov
pusha
or
dec
loope
pop
mov
icebp
push
adc
pminub
push
gs
scas
fwait
mov
bound
ret
testb
setge
test
xchg
in
inc
xchg
dec
sbb
fucomp
in
push
xchg
mov
enter
shl
sub
xor
xchg
mov
shll
mull
mull
jb
ss
repnz
xorl
mov
push
loope
push
mov
mov
jmp
imul
cltd
fsubp
mov
mov
xor
mov
inc
cmp
adc
jae
dec
popf
jno
or
stos
cwtl
cmpsl
sbb
ds
pop
loope
push
push
inc
out
mov
add
adc
and
pop
mov
or
pop
cmp
sbb
xchg
pop
jns
adc
fldenv
mov
scas
bound
or
mov
add
xor
sub
lcall
cld
sbb
push
dec
jp
out
mov
mov
test
ror
addr16
push
dec
mov
mov
adc
iret
nop
push
sbb
mov
ljmp
xor
cmpsl
pop
subb
adc
or
scas
mov
cmpb
int
lcall
je
adc
cmp
or
test
mov
mov
fdivrl
push
add
mov
popa
xchg
add
or
js
flds
pop
or
cmp
jbe
cld
pop
jmp
in
sbb
sbb
add
push
repnz
pop
or
mov
fisubs
movsb
push
xchg
and
out
imul
fidivl
in
xchg
xchg
nop
mov
inc
lret
cli
push
mov
mov
scas
cwtl
cmp
mov
push
xchg
cwtl
pop
push
jmp
cmp
iret
xchg
movsb
shll
mov
hlt
scas
pop
decl
mov
cmp
xchg
popf
divl
inc
sbb
and
and
cld
push
add
pusha
jecxz
lret
sub
sub
sti
call
cli
loope
cmp
xchg
lcall
lret
jae
daa
pop
sarb
cmpsl
dec
insl
jnp
xor
rorl
aas
int
movb
lcall
in
inc
enter
xchg
push
inc
dec
test
adc
movzwl
dec
jns
cmpsl
out
cmpsl
bound
mov
cltd
pop
sbb
jnp,pt
cmp
push
mov
push
jbe
lahf
aad
push
add
add
das
int3
pop
pop
ss
adc
addl
sub
xchg
push
dec
idivb
mov
and
push
orl
xor
adc
add
mov
mov
addr16
std
js
ss
jg
leave
mov
mov
push
sub
repnz
outsb
or
adc
and
insb
ja
mov
gs
xchg
xchg
shrl
pop
or
jne
jp
out
repnz
push
lods
mov
mov
ficompl
scas
adc
out
cli
adc
jns
arpl
popa
sbb
adc
pop
mov
insb
lock
jo
dec
pop
and
rcl
mov
stc
mov
cld
jns
shrb
xor
sti
sub
pusha
jle
add
imul
mov
insb
pushf
test
xchg
adc
xchg
xor
push
popl
ss
mov
jp
mov
push
adc
mov
ds
jae
adc
lea
insl
push
xchg
scas
ss
mov
insl
mov
sarb
xlat
and
mov
in
scas
bnd
dec
cmp
cmp
jg
test
orb
das
inc
leave
mov
aam
repnz
clc
inc
pop
lret
pop
mov
xor
pop
or
imul
or
xchg
lods
je
loope
mov
sbb
addr16
pop
negb
call
clc
jmp
jne
inc
arpl
pop
hlt
stos
hlt
shlb
mov
int
push
je
ss
scas
mov
stos
push
and
jge
pop
jmp
lods
xchg
xchg
xlat
sub
push
dec
push
mov
testb
pop
push
push
lahf
fndisi(8087
ss
mov
nop
inc
mov
jo
aad
ljmp
cmp
pushf
pop
jbe
sbb
fists
xchg
cmc
loope
push
test
outsb
clc
push
jno
inc
push
cld
je
sbb
test
inc
ret
or
cwtl
push
movsl
cmp
lods
adc
jb
data16
out
mov
xchg
pop
sti
dec
aad
cmp
adc
inc
lret
std
push
mov
sarl
mov
test
sti
pop
cmp
jno
xor
scas
in
mov
mov
pop
pushf
jne
xchg
fcmovbe
rorl
jne
and
xchg
push
cmp
dec
daa
xchg
out
mov
cltd
mov
jp
jp
adc
cmp
imul
adc
loop
add
cmp
xor
shl
lahf
pop
xchg
mov
ja
hlt
adc
addr16
cmc
ret
add
jb
pusha
jae
in
cmp
jnp
xchg
mov
xchg
dec
sub
jge
rol
jno
pop
cmp
mov
jns
das
or
daa
mov
or
inc
xchg
aad
jle
insb
call
pop
or
repnz
dec
mov
xor
pop
jmp
jle
std
outsl
fists
mov
mov
cli
jp
add
mov
cwtl
outsb
mov
lods
dec
or
imul
xchg
push
and
mov
repnz
out
jmp
ljmp
jecxz
out
add
mov
popf
mov
aad
outsb
adc
enter
add
shlb
sbb
sbb
add
ja
push
push
adc
lcall
mov
push
pop
mov
sbb
jecxz
cld
or
int
mov
aas
fisubrl
cwtl
adcb
pop
jno
mul
xor
adc
repnz
movsb
fwait
and
sub
pop
jle
lahf
in
lock
lods
into
int
adc
into
insb
pushf
mov
add
mov
dec
mov
adc
pop
iretw
cmp
push
mov
jl
xor
sbb
call
inc
xor
imul
lret
fs
test
sub
mov
insb
mov
add
mov
inc
and
dec
fs
adcb
insb
nop
out
in
sub
adc
sub
dec
sbb
push
xor
imul
idivb
xlat
sbb
test
pop
mov
mov
test
adc
sbb
jl
out
sbb
orb
add
sbb
push
or
push
lock
scas
and
dec
xchg
xchg
adc
mov
inc
in
cmp
leave
cld
xrelease
or
fldcw
mov
xor
jle
cs
mov
sub
mov
aam
dec
test
call
xor
mov
ds
and
scas
fisubrl
add
push
stos
and
jae
fimull
or
xor
jo
xor
cmp
push
bound
cmc
mov
adc
ds
shl
es
in
pop
pusha
jae
jmp
adcl
gs
fdivs
xchg
sbb
aas
out
or
lea
repnz
fldl
xor
hlt
mov
push
stos
mov
je
pushf
test
lret
push
pop
daa
call
pop
add
cmpsb
pushf
into
pop
xor
leave
or
fs
mov
js
loopne
stc
mov
mov
pusha
lods
push
insb
scas
outsl
aad
push
int
cltd
lcall
in
cltd
mov
pop
jmp
sti
repnz
xchg
pop
inc
lds
int3
jne
jmp
fidivrl
mov
mull
push
sub
lret
push
stos
and
das
mov
xor
mov
push
popf
mov
inc
jnp
in
mov
loopne
loope
es
andb
hlt
add
rol
dec
mov
popa
clc
cs
es
inc
lea
adcb
fcmovb
mov
dec
jmp
imul
lds
mov
clc
cmc
std
adcl
jle
fdivrs
dec
mov
mov
test
and
jp
mov
cmp
jno
dec
aad
xchg
out
xchg
add
imul
or
jnp
addl
cmpsb
cmpsl
into
adc
ror
rcl
xchg
lret
testl
sbb
mov
pop
cld
fsubrl
xchg
jle
rcr
out
cmp
dec
mov
movsb
mov
dec
sbbl
decl
jo
or
faddl
push
leave
pop
mov
stc
mov
cmp
stos
add
sub
out
cmp
loope
mov
hlt
aad
sub
fbld
mov
sub
sbb
dec
cs
scas
out
mov
shlb
pminub
dec
ja
out
inc
out
loopne
cmpsl
jl
inc
insb
js
fwait
adc
fmull
jmp
test
inc
sub
mov
and
jno
sub
mov
or
cmc
cmc
sbb
popa
push
test
sti
pop
mov
popa
shrl
cmp
jne
loope
fcoml
inc
cmp
pop
mov
lea
sbb
cmp
imul
mov
xchg
jp
lods
daa
lock
xchg
xchg
xchg
add
cmpsb
clc
in
cmpsl
cmc
imul
xor
sub
or
fsts
xchg
cmp
ret
or
mov
and
cmpsb
lds
dec
add
outsl
xchg
cmp
xor
call
push
push
dec
mov
in
inc
fnstenv
jae
sub
or
and
xor
icebp
pusha
inc
cmp
xor
in
clc
fdivr
fildll
insl
sub
ljmp
cmpl
dec
es
out
jo
enter
mov
loope
cmp
push
mov
jle
cmp
int
push
dec
mov
pop
inc
fnstenv
mov
inc
pop
ret
stos
aas
ljmp
mov
push
icebp
sti
push
cmc
push
repnz
jne
sub
shll
jge
fmul
cmp
loopne
or
data16
test
data16
jae
or
sti
sub
lcall
lahf
push
mov
push
in
dec
push
test
addr16
adc
in
movsb
insb
mov
imul
aaa
xor
shld
rcrl
or
imul
adcb
push
filds
imul
add
jmp
adcb
xchg
cmc
bound
daa
adc
dec
es
fldenv
imul
in
lret
inc
push
sub
add
shr
cwtl
push
pop
addb
inc
rcll
in
push
fs
cmp
sbbb
mov
xor
mov
std
jne
mov
fcoms
cmp
hlt
and
call
in
cld
ja
outsl
push
mov
fs
enter
cmpsb
mov
sbb
dec
out
enter
clc
hlt
jmp
fldl
xchg
sti
jle
lret
inc
pop
mov
xor
mov
lahf
xor
cmpsb
neg
sbbb
xor
aas
mov
fdivrs
jecxz
jge
fs
sarb
es
xchg
pop
add
pusha
add
mov
xchg
sbb
imul
add
bound
cwtl
inc
shl
dec
mov
sub
push
mov
int3
popf
push
mulb
sub
test
push
cmpsl
pop
xor
orl
xor
fdivl
cmc
ss
mov
mov
jmp
bound
in
fdivl
rcll
jne
into
dec
shl
mov
test
sub
outsl
shl
sbb
pop
iret
les
inc
mov
enter
push
add
fists
rclb
sarb
leave
push
test
xlat
push
fldt
mov
jns
mov
lret
push
sub
mov
lds
add
movsb
jmp
cs
xlat
mov
jge
jb
jno
hlt
gs
mov
mov
xor
adcb
imull
mov
popf
cwtl
push
scas
cmc
pop
mov
and
cmp
dec
mov
sarb
mov
cmpsl
xchg
ret
xchg
addr16
lods
jb
sbb
sbbl
and
in
fcmovbe
nop
aaa
ds
lret
sub
gs
test
mov
mov
inc
jb
sub
cmpsb
test
sub
add
inc
ljmp
pop
jle
out
call
push
sub
and
push
pop
push
pop
loope
lret
out
mov
repnz
xor
ja
pop
push
loop
shll
push
mov
sub
add
divl
gs
scas
insl
mov
nop
je
add
add
aam
test
into
cmpsb
jecxz
mov
dec
xchg
xchg
int
cmp
iret
fmull
push
aaa
data16
in
rol
xor
push
lcall
pop
mov
fwait
lret
or
repnz
push
bound
ret
fidivrl
rdtsc
push
xchg
imul
test
lret
ljmp
js
dec
jb
add
arpl
dec
cmp
pop
loopne
data16
xorl
inc
sti
iret
icebp
pusha
fsubrs
popa
iret
orl
bsr
xlat
out
ss
out
cmp
adc
sbb
push
add
stc
xchg
dec
sub
push
and
fstl
and
or
inc
out
xor
fnclex
sti
dec
popf
int
add
or
inc
cwtl
and
movsb
sbb
jb
call
pusha
xor
mov
cld
dec
aam
cmp
lahf
fiadds
test
sub
shrl
push
inc
jns
xor
daa
cwtl
into
mov
cmp
out
inc
fsubr
push
es
push
pop
jae
push
xchg
shll
adc
pop
cltd
cmp
mov
inc
xchg
push
pop
mov
sbb
cmp
aad
iret
push
fs
pop
push
outsb
push
add
xchg
test
mov
mov
lods
xchg
shlb
in
jl
push
dec
dec
out
push
loope
lock
xchg
popa
push
in
mov
fdivrs
mov
out
pop
scas
loope
sub
repz
sbb
dec
xchg
mov
and
pusha
pop
imul
mov
aam
aas
fimuls
vmread
fnsave
lock
xor
insl
inc
sti
mov
xor
ljmp
imul
notl
or
or
ss
addr16
pop
daa
dec
dec
mov
ds
lret
jae
arpl
adc
jl
int
push
or
movsl
iret
jae
jecxz
cwtl
ficompl
mov
int3
call
cmp
out
dec
lods
adc
jmp
adc
out
cltd
rcl
mov
and
pop
inc
cs
xchg
ret
sbb
mov
push
in
das
jo
rcl
xchg
stos
push
icebp
push
jle
lds
out
or
pushf
jae
jle
cmp
orl
add
jbe
lret
lretw
out
and
push
call
sbb
cmp
and
push
loope
stos
adc
pop
and
cmp
ficoml
dec
lods
ret
mul
faddl
sub
inc
cmc
xchg
sbb
and
push
pop
dec
mov
push
out
push
ja
jae
sbb
cld
pushf
cwtl
inc
ja
scas
out
and
adc
push
stc
ljmp
fsub
lock
jbe
jge
imulb
jb
ja
sub
insl
fcmovnb
xlat
ret
pop
mov
add
test
jnp
insb
mov
pop
jmp
mov
jl
mov
xor
sbb
sbb
addb
and
dec
shll
adc
test
mov
xor
fwait
sub
push
iret
jno
xchg
out
sarl
push
mov
push
mov
loopne
mov
dec
pop
std
shll
mov
mov
aas
mov
in
into
xorb
ja
ss
cmp
mov
shlb
add
stos
shlb
adc
jne
mov
inc
jae
and
or
jmp
mull
es
ss
add
dec
cwtl
ret
sub
push
push
push
ror
xchg
jns
fmulp
subl
movsb
inc
fs
arpl
pop
xchg
lock
insl
xor
testb
mov
stos
sbb
cmp
jge
bound
rolb
insl
movsl
xchg
dec
pop
repz
and
rcll
xor
dec
jmp
scas
mov
sbb
cmp
sti
cmc
int
push
xor
ret
dec
out
aam
in
mov
test
call
bswap
leave
cmp
xor
mov
push
cmp
fs
mov
lock
add
sub
in
jmp
xor
dec
cli
jecxz
pop
stc
sbb
stos
test
mov
je,pt
sub
and
je
push
ja
dec
rorl
push
adc
cmpsl
ljmp
mov
add
xor
je
loopne
andb
mov
jb
mov
xor
sub
aas
push
icebp
test
inc
sbb
clc
aam
aas
cmp
in
and
gs
in
inc
push
xor
inc
fcmovb
leave
mov
and
xchg
and
jecxz
daa
xchg
int3
lds
daa
pop
fcoms
push
bound
je
add
mov
sahf
sarl
sub
std
stc
out
pop
and
mov
jge
pop
xlat
nop
jge
jp
movsb
outsb
jl
push
inc
jnp
sub
insb
das
mov
xor
orb
jmp
or
insl
mov
jecxz
stos
insb
nop
or
cmp
sbb
inc
outsl
into
inc
jbe
push
in
mov
dec
jo
inc
sbb
add
fnclex
fwait
cs
sti
mov
xor
jno
psubb
pusha
xor
cmp
popf
and
dec
mov
or
cmp
stos
and
out
out
imul
les
sarb
loope
leave
hlt
loopne
mov
aam
add
and
and
inc
cmp
das
push
into
cmp
in
imul
mov
mov
inc
daa
add
mov
sti
mov
or
mov
pop
sbb
sub
cmpsl
inc
push
movsl
mov
or
push
popf
or
mov
xchg
lds
xchg
xchg
xchg
andl
arpl
or
fdivrl
pop
mov
mov
push
push
jb
lahf
insb
aas
inc
dec
notb
mov
jge
adcl
dec
lahf
pop
jnp
mov
mov
push
rolb
in
and
xor
bound
fistpl
ret
push
push
xchg
inc
insl
adc
pop
jle
dec
in
mov
daa
ret
xor
jbe
lret
sub
femms
xchg
jg
leave
mov
test
cld
popa
dec
inc
xor
pop
or
clc
push
icebp
sbb
add
fwait
push
icebp
jl
mov
outsb
scas
xor
pop
mov
aam
out
pop
int3
jge
mov
mov
adc
dec
out
dec
cmpsb
inc
adc
mov
cmpsb
sti
push
push
int
xlat
and
inc
lret
sub
pop
mov
adc
stos
mov
in
testl
jl
lahf
cmc
xor
xor
ljmp
pop
fs
leave
push
outsb
jecxz
mov
inc
sbb
stos
movsl
cmp
dec
cli
push
xchg
jno
mov
xchg
jbe
pop
xchg
pop
mov
sub
leave
pop
int
imul
mov
out
xor
iret
jb
notl
push
mov
into
icebp
lea
fistl
cmp
cld
leave
inc
adc
loopne
arpl
lahf
pop
mov
xchg
fnstenv
popf
mov
jge
cmp
inc
push
mov
push
fadd
and
in
mov
dec
push
hlt
lock
mov
mov
movsb
pop
fimuls
dec
push
sbb
in
repz
adc
push
inc
dec
jle
cmp
and
xor
jle
cmp
minps
or
rorb
loopne
mov
js
mov
in
cmpsb
cmp
mov
sub
repz
and
jo
fisttpl
mov
xchg
hlt
jmp
pop
mov
ja
pop
add
enter
and
inc
lret
mov
cltd
push
in
mov
mov
clc
and
or
ja
or
cmp
cli
xor
or
mov
hlt
adc
and
xchg
js
mov
dec
mov
xchg
je
ficoml
insb
sahf
fdivrs
xor
fcomip
cmp
sbb
repz
out
stos
xchg
push
mov
xchg
push
arpl
pop
mov
add
test
add
push
in
pop
icebp
rcr
ljmp
jl
cmp
fldl
mov
scas
addr16
mov
call
xor
lret
push
ficoms
stc
daa
and
in
push
pop
mov
fst
gs
lods
lods
test
inc
bound
xchg
sbb
dec
pusha
pop
divb
aas
push
pop
stc
ds
mov
xchg
imul
fwait
ret
push
lods
jae
out
xchg
jo
dec
sbb
scas
pop
push
int
and
test
mov
in
cmc
inc
and
mov
inc
mov
out
dec
or
or
mov
jo
xor
das
cmp
add
jp
or
test
icebp
insl
aam
sbb
mov
adc
sti
mov
xchg
xor
and
je
jbe
push
into
jg
iret
test
addr16
dec
jb
lea
into
fwait
dec
jl
sbb
jmp
into
aad
or
outsb
and
loop
movsl
or
mov
stc
outsl
add
push
stos
sahf
push
fsubs
and
and
mov
cmp
push
in
mov
icebp
push
ljmp
pushf
stc
xchg
repnz
fstl
sub
es
test
je
push
out
add
test
sbb
mov
fnstcw
cs
test
shl
xchg
cmpsb
enter
mov
cmp
cmc
lock
mov
lret
sub
cmp
jmp
mov
xchg
mov
gs
push
and
or
nop
mov
mov
cmp
pop
adc
jbe
xor
movsl
pop
pop
sub
cmpsl
cmc
sbb
pop
push
dec
mov
pop
sub
call
insl
add
xchg
inc
test
rcll
push
jns
popf
dec
int3
jne
mov
jp
out
pop
jne
mov
jnp
adc
mov
mov
insl
lods
and
sti
mov
xor
arpl
ljmp
sub
mov
and
mov
les
fnsave
inc
cwtl
jbe
pop
sub
ret
mov
push
ja
jnp
jae
notl
inc
loop
daa
inc
mov
push
popf
loopne
pop
mov
push
mov
imul
stos
or
loop
popf
pop
jge
xchg
cpuid
pop
cmpsb
fimull
loope
or
pop
sub
dec
inc
out
popf
sub
jmp
rolb
mov
sub
mov
pop
fstl
mov
fisttps
js
rcr
push
repz
je
or
popa
xchg
push
shrl
out
jnp
out
push
cli
pop
or
icebp
xchg
enter
inc
sub
cwtl
pusha
xchg
adc
jnp
jnp
dec
fistps
mov
mov
mov
daa
push
hlt
push
ds
lds
sub
shrb
mov
add
sbb
mov
lret
movsb
inc
ss
les
leave
js
mov
xor
stc
std
jb
ror
std
push
in
push
dec
xorb
sbb
sub
or
ljmp
lcall
scas
jg
in
xchg
clc
std
sbbl
xchg
xchg
push
add
inc
inc
push
xchg
xor
iret
mov
popa
in
addr16
mov
js
rolb
out
js
cmp
ljmp
mov
cmp
test
dec
cmp
mov
push
ret
mov
mov
and
xchg
mov
adc
aam
dec
inc
fwait
mov
or
inc
adc
push
cli
xor
cli
std
mov
inc
std
jmp
lcall
mov
scas
outsl
lods
outsl
dec
lock
mov
dec
inc
mov
jl
inc
daa
inc
push
dec
cli
add
and
and
cmpsb
sbb
sbb
test
lret
mov
in
pop
pop
out
xor
scas
xor
dec
xchg
inc
inc
movsl
adc
mov
mov
sub
mov
call
lods
pop
xor
cmp
xchg
cwtl
dec
push
sub
or
jg
sub
sub
dec
orl
lods
mov
out
in
add
cmp
addr16
loopne
jecxz
inc
xor
adc
mov
mov
mov
add
pop
call
iret
ja
xlat
addr16
arpl
ds
or
push
enter
and
xor
mov
cs
ret
add
xchg
icebp
sbb
lods
pop
xchg
lcall
incb
push
mov
dec
insl
jecxz
mov
cmpsb
fs
mov
inc
push
and
enter
cmpsb
xchg
lahf
icebp
sub
mov
fucomp
es
mov
and
cmpsl
movsl
and
and
mov
ret
pop
mov
sub
cmp
mov
je
sub
mov
dec
movsb
insl
xor
cld
nop
loopne
repz
or
int3
cmc
jle
add
daa
imul
movsl
pop
sub
adc
mov
jnp
lret
out
sahf
jo
sbb
xchg
inc
pop
and
out
pop
lret
xor
mov
add
imul
cmpb
dec
xchg
shl
jae
push
pop
adc
xchg
sub
cltd
ljmp
hlt
aaa
inc
ljmp
enter
arpl
stc
popf
mov
ror
aam
pop
mov
jecxz
mov
push
xchg
sub
scas
rolb
cmc
subb
mov
fwait
pop
stc
dec
cli
ja
sar
stos
test
inc
test
jbe
out
lea
das
push
clc
fsqrt
mov
clc
mov
push
shll
xchg
or
mov
mov
imul
pop
push
stc
mov
xor
pop
mov
mov
xchg
pop
xchg
add
mov
cld
cmp
mov
bsf
pop
insl
xor
fs
push
sahf
mov
pushf
push
repnz
sub
mov
call
notb
cmp
out
sbb
mov
inc
or
dec
push
pop
adc
pop
inc
xchg
dec
mov
jnp
int
mov
lcall
sub
xchg
ffreep
push
push
push
xchg
ljmp
mov
cmp
out
pop
in
das
push
cmp
add
mov
cmp
subb
mov
push
mov
adc
iret
adcb
inc
in
mov
lret
and
hlt
cmp
jae
or
lods
dec
sbb
xor
push
shrb
cmp
push
mov
stos
loop
inc
mul
pop
jecxz
nop
xchg
dec
push
not
stos
pusha
mov
xchg
daa
ljmp
cmp
mov
daa
or
pop
popf
xor
ljmp
xchg
call
sub
stc
mov
dec
pop
scas
and
add
xchg
adc
dec
dec
sub
jmp
cltd
out
repz
out
mulps
mov
negb
xor
mov
or
sub
mov
fisubrs
mov
xor
dec
sub
jl
or
or
push
add
in
repnz
inc
push
pop
movsl
iret
lea
cmpb
add
cmp
jb
and
inc
fstp
iret
mov
mov
imul
xor
sbb
and
outsb
cmp
xchg
jecxz
in
mov
mov
cmp
iret
stc
shll
cmp
stos
movsl
pop
fisubl
aam
fisubrl
clc
adc
pop
repz
nop
js
std
pop
ffreep
fildl
cs
mov
cmp
subb
hlt
stc
das
xlat
mov
les
mov
xchg
adc
mov
cmp
pusha
xchg
inc
sub
int3
clc
icebp
std
sbb
bound
add
cmpsl
jb
jbe
mov
repnz
fimuls
xchg
bswap
fld
jecxz
pushf
jne
xor
adc
les
pop
sub
dec
test
jbe
daa
out
jns
mov
popf
mov
insl
repnz
std
sbb
jae
inc
test
lret
add
loope
pop
leave
test
popf
push
push
les
push
pop
stos
push
loopne
les
shrl
fstps
mov
push
xor
push
jb
pushf
inc
push
sti
cli
xchg
sub
mov
xor
sarl
pop
pop
pop
ret
test
stos
mov
in
leave
pushf
jno
call
cmp
cmp
aas
mov
xor
pop
ljmp
ja
xchg
mov
mov
shrl
sbb
aad
loop
out
jl
adc
jo
cli
int3
rcll
fisubrs
sarl
mov
cmp
mov
add
in
push
gs
inc
loop
lcall
jnp
jge
dec
movsb
and
sbb
jno
cltd
mov
int
inc
add
cs
jle
loop
mov
aaa
lret
leave
lds
xchg
dec
test
add
je
ds
clc
cmpsb
mov
divl
pop
mov
cs
mov
jmp
xor
add
aam
arpl
shll
cmpsl
es
ret
push
cmpsl
xchg
adc
jnp
dec
stc
fldenv
lock
lock
dec
fisubrs
scas
aas
mov
sbb
cmc
cmp
xchg
add
sbb
imul
xor
xchg
lock
movsl
cld
sbb
cmp
daa
sbbl
loope
insb
shrb
popa
xchg
sbb
and
mov
cs
jbe
pop
test
orl
into
jge
sbb
jno
or
xor
daa
in
push
clc
pop
shr
mov
mov
dec
lock
test
sub
add
pop
push
adc
lock
xchg
push
jg
adc
lcall
lods
movsl
movsl
cltd
dec
add
lds
cmpsb
ja
ret
sarb
es
sub
notb
mov
stos
jae
adc
es
and
mov
jmp
push
nop
sarb
repz
sarb
rcll
ss
add
sahf
push
adc
push
fucomp
mov
sub
stos
shrb
int
mov
cmp
xor
mov
mov
dec
push
sbb
mov
push
loop
push
mov
inc
xor
cld
jb
sbb
cltd
jg
pop
push
bound
cmp
push
int
out
arpl
outsb
rorb
out
hlt
ret
cmp
inc
sbb
jmp
das
nop
mov
dec
dec
ljmp
adc
cmpsb
add
lcall
sub
imul
into
ljmp
adc
cwtl
mov
mov
lods
and
inc
mov
mov
inc
in
in
lods
mov
jl
pushf
fidivs
mov
pop
adc
test
aam
aas
xor
stos
mov
jle
rcrl
mov
cmpsl
cmp
xor
pop
and
cmp
test
push
clc
mov
jae
test
mov
std
test
test
mov
sbb
and
decl
outsl
pop
ret
jg
add
outsb
in
xchg
add
je
repz
imul
jl
test
adc
adc
adcl
js
lahf
out
into
aaa
push
xlat
fwait
pop
movsb
adc
pop
cld
fstps
shlb
xchg
cmp
inc
jbe
xchg
nop
aas
dec
dec
and
rcll
mov
cwtl
push
data16
inc
popa
jle
add
mull
xor
sti
mov
pop
lcall
cmp
jo
jb
sbb
cld
popa
xchg
mov
out
jecxz
dec
xchg
adc
test
mov
pop
sarb
mov
outsl
or
dec
int3
and
pop
cmp
loopne
outsl
in
jecxz
sbb
jb
mov
cmp
std
add
cwtl
cltd
ja
mov
popf
xor
dec
js
fs
loope
in
stc
jecxz
fisttpll
dec
xchg
ds
imul
push
dec
jbe
loop
sbb
ret
in
mov
repz
sub
mov
inc
sub
sbb
aaa
xchg
pop
ds
sbb
cmc
pop
push
outsb
ljmp
cmp
ljmp
dec
fwait
fwait
hlt
mov
stos
sti
and
hlt
xor
adc
sbb
jge
xchg
sbb
cmpsl
or
addr16
and
lods
jns
mov
cmpsb
cmp
adc
cmpsl
push
je
gs
hlt
mov
xor
mov
pushf
jge
pushf
sahf
inc
add
mov
adc
mov
insb
out
lret
push
sub
scas
sub
add
mov
loopne
mov
fwait
pushf
sub
or
mov
and
jno
adc
or
cmpsb
and
mov
stos
mov
cmp
out
add
in
test
lods
stc
mov
into
out
test
shlb
outsb
fimull
ficoms
jmp
hlt
fistpl
xchg
and
dec
pop
lds
mov
cmpsl
rcll
mov
nop
stos
pushl
or
adc
xor
out
adc
jl
or
ror
sbbl
xchg
shrl
dec
cli
int
insb
cmp
jns
push
popf
mov
mov
add
ljmp
and
sub
cli
cmp
idivl
movsl
xchg
fnstcw
sbb
pushf
cmp
ret
inc
and
arpl
pop
aad
rorb
es
lahf
add
pop
mov
stos
push
bound
lock
dec
mov
jmp
cmp
or
int3
sbb
xor
dec
push
mov
inc
pop
fstpl
xlat
ret
jo
push
sbb
sub
sub
sub
ffreep
rcll
xchg
daa
mov
adc
xchg
jnp
push
lods
hlt
mov
jle
sub
insl
xchg
inc
fistl
jo
shrl
push
xchg
mov
adc
lods
jp
or
push
bound
jmp
inc
xor
mov
mov
je
out
out
pop
aas
fsts
insl
out
shl
lods
sub
mov
and
adc
jns
rclb
and
sahf
cmp
stc
rep
mov
pop
jmp
movlhps
mov
lock
out
aas
mul
aaa
scas
dec
push
mull
pop
aam
xchg
and
xchg
dec
sbb
jge
pandn
lcall
cmc
gs
dec
sbb
mov
test
pop
int3
push
repnz
xchg
outsb
adcb
pushf
fstl
dec
adc
xchg
push
xor
pop
subl
and
sbb
mov
popf
shlb
push
cmpsb
xchg
ja
testb
orl
push
sub
nop
cmp
add
push
mov
cltd
adc
pop
bound
xchg
adc
les
popf
xchg
stc
cltd
cmpsl
inc
push
outsl
ffree
out
shl
pop
pop
lret
int
scas
popa
push
repz
sbb
lahf
jg
lret
push
ret
fcmove
xchg
into
adc
out
rorl
loopne
dec
mov
push
mov
enter
push
mov
xor
shr
pop
adc
pop
push
inc
push
inc
test
mov
aas
mov
shl
imul
mov
popf
repnz
adc
xor
cwtl
outsl
cmc
jae
dec
xchg
jnp
outsl
mov
sbb
xchg
mov
cmpsb
cmp
push
sub
jp
mov
in
sub
jmp
int3
sti
dec
sbb
lret
rcll
aaa
mov
cmp
sbb
xchg
jo
dec
pop
or
loop
push
xor
add
mov
stos
lret
orl
jns
lcall
mov
pop
jp
gs
rorl
and
daa
jns
mov
mov
push
loope
push
add
xchg
lods
shlb
and
push
int3
mov
cli
mov
add
shll
ret
xchg
aad
ficompl
or
ficoml
rcll
adc
sbb
push
adc
lds
out
test
push
push
pusha
sahf
xlat
jo
push
mov
cmp
leave
fs
cmc
mov
lret
xchg
aad
das
cmp
pop
pushf
pop
xor
pop
dec
cmp
sahf
repnz
and
orl
push
push
dec
push
xor
push
in
sahf
push
js,pt
fwait
inc
sar
lret
dec
xchg
push
fbld
cli
lds
add
pushf
add
push
ds
cmpsl
fldl
jge
push
out
mov
push
insb
add
add
mov
mov
shll
mov
xchg
dec
loop
pop
shll
ja
sub
daa
add
mov
adc
shl
sti
dec
jle
add
cmp
xor
add
jmp
pop
pop
xor
int3
mov
sbb
incl
inc
fldcw
es
xchg
scas
stos
into
mov
jbe
xchg
push
and
fsubs
pushf
mov
xchg
jo
jnp
cmpl
int
lret
fisubs
ss
fimull
sti
imul
test
or
sbb
mov
xchg
adc
adc
in
mov
add
or
dec
ret
pop
xchg
jle
and
loope
adc
xor
mov
movsb
xor
sub
cmp
and
or
nop
mov
sbb
or
lds
ss
and
dec
cmc
sub
cmp
xchg
pushf
in
pop
push
inc
into
subl
scas
jle
add
ret
loop
outsb
push
jbe
fwait
ja
cmp
mov
aad
mov
test
fcoml
jl
dec
insb
fdivrs
decb
jns
jne
adc
sbb
dec
mov
movb
mov
and
or
sub
and
and
popa
jae
or
mov
xchg
fs
mov
or
xchg
pop
push
frstor
push
push
rorl
out
xchg
dec
jle
roll
out
aas
es
flds
int
ljmp
inc
adc
loop
rorb
movsl
je
mov
pop
movsb
dec
je
shl
psadbw
inc
inc
mov
dec
scas
dec
cmp
test
rorl
xchg
sbb
imul
mov
jo
fdivr
and
in
mov
inc
mov
pop
push
cs
sbb
xchg
jns
dec
xchg
loopne
stc
inc
negb
sub
xchg
push
into
add
sub
pop
mov
shll
lret
shl
cltd
cld
sub
test
xchg
xor
rorb
xlat
scas
imul
mov
jecxz
xchg
fsub
mov
mov
mov
push
in
shrl
stos
rcl
movsl
cmp
inc
rorl
and
aaa
test
mov
inc
adc
jl
adc
xor
stc
dec
sbb
push
inc
cmp
xchg
and
lcall
sub
lds
and
push
xchg
cmp
xchg
fidivrs
insl
lret
add
dec
stos
xchg
sbb
dec
loop
dec
cmp
mov
arpl
scas
push
loop
push
mov
les
idivl
jbe
cmp
add
daa
out
lea
ds
sub
fsts
xchg
or
loopne
outsl
popf
outsl
into
xor
xchg
dec
inc
inc
in
daa
sbb
hlt
sub
sub
push
mov
or
roll
fwait
push
jecxz
rcrl
out
stos
mov
cmp
xor
js
inc
les
lods
or
insl
stc
push
and
nop
add
sub
inc
fdivrs
test
shlb
aas
sub
imul
loop
xor
add
pop
es
outsb
notl
push
ret
sbb
imul
inc
or
mov
xchg
aad
lret
std
adc
push
mov
add
leave
add
lods
mov
pushf
outsl
mov
xor
into
dec
inc
out
orb
xchg
xchg
cmpsb
pop
iret
sbb
dec
out
mov
or
add
movsb
andb
sub
fwait
inc
outsb
cli
inc
insl
xchg
ss
xchg
fdivp
pop
cwtl
fst
xchg
jne
cs
mov
adc
pop
sbb
stos
into
cwtl
adc
mov
add
lahf
out
xor
ficoms
sbb
faddl
pop
shll
jmp
xor
std
sub
push
addr16
into
sahf
test
pop
sbb
mov
cmp
xchg
dec
fcoml
insl
adcb
sub
push
adc
stc
xchg
pop
scas
sti
inc
cmp
clc
movl
add
stos
and
scas
sbb
inc
imul
stc
gs
loope
jge
jne
loopne
in
rolb
add
arpl
lahf
pop
cmp
cmc
pushf
adc
sbb
xor
pop
or
in
mov
push
insb
or
out
aad
call
sub
sub
and
mov
test
loopne
cmp
inc
jp
iret
cli
fdivr
mov
push
xchg
pop
cmp
int3
lods
stos
pop
mov
jmp
ret
imul
sbb
testb
jne
or
in
push
fnsave
adc
jae
fdivs
dec
icebp
mov
xchg
dec
jle
cld
rcll
inc
adc
call
pushf
mov
xor
inc
mov
sbb
cmp
push
cmp
orl
jo
dec
add
hlt
lahf
in
sub
jl
jge
pop
in
cld
fildl
test
xchg
mov
add
sbb
adc
or
pop
subb
inc
xchg
pop
add
and
push
out
push
aaa
and
popf
mov
test
or
cs
gs
pop
and
sbb
xchg
bound
pop
push
adc
aad
jg
mov
imul
lea
pop
cmp
add
mov
dec
sbb
lock
aas
shl
xchg
pop
adc
cmp
jg
mov
sub
xchg
push
mov
int
testb
mov
rclb
jp
jle
addr16
lock
pushf
bound
jmp
lret
cwtl
ja
push
sub
mov
cltd
mov
aas
loope
idivl
popf
mov
roll
sub
arpl
inc
out
repz
test
jp
lds
test
xor
icebp
add
leavew
loopne
test
dec
int3
lods
xchg
leave
lock
pop
xchg
and
cmp
lods
mov
mov
jmp
sbb
pop
scas
push
mov
cmpsl
pushf
inc
int
add
neg
push
push
cmpl
iret
mov
dec
cmp
xor
xchg
cmpb
pop
xchg
das
sbb
daa
ret
call
mov
cwtl
cmp
out
dec
sahf
addl
mov
lods
mov
popa
sub
mov
cmp
rcrb
push
xor
push
inc
pusha
aas
mov
inc
stos
scas
ja
pop
es
vzeroupper
push
enter
inc
xchg
testw
inc
xchg
test
inc
arpl
xchg
mov
xor
jl
push
push
out
movsl
icebp
fwait
jb
rclb
out
mov
push
or
mov
mov
inc
mov
or
scas
fwait
xchg
cmp
and
pop
ds
sub
add
jl
sub
dec
mov
or
cwtl
test
cmp
sbb
adc
mov
inc
aam
push
xchg
fdecstp
stc
mov
push
mov
mov
stc
mov
inc
push
cmc
mov
push
adcl
xor
push
iret
sub
inc
enter
mov
cmp
rorl
pop
negb
fisubl
ret
mov
xor
pushf
lret
ret
sub
jg
int
mov
jno
fsubl
int
out
cmp
xchg
pop
xor
scas
xchg
jns
jl
hlt
lahf
cmp
idiv
sbb
sbb
je
pop
mov
ja
push
test
imul
push
xor
mov
cmp
and
add
sbb
sbb
push
fldl2t
rcrb
outsl
loop
testb
fmul
test
outsb
aas
and
push
pop
lea
dec
jmp
cli
sub
pop
or
ljmp
test
stos
push
incl
xchg
dec
xchg
mov
enter
pushf
sbbl
push
pop
loope
mov
or
cmpsl
jne
cld
inc
dec
repnz
xchg
pop
xlat
adc
mov
icebp
into
mov
mull
pop
sti
jge
cli
jbe
flds
hlt
dec
sub
fisubs
iret
lock
jnp
or
pop
push
into
and
je
rolb
dec
xor
ss
sub
xchg
xchg
cmp
jmp
in
dec
gs
imul
fstpl
stos
addb
cmp
outsl
inc
rcll
mov
insl
mov
sahf
mov
bound
pusha
xchg
roll
sahf
jb
push
cmp
les
push
adcb
and
cmpb
and
rorl
and
dec
es
leave
outsl
xor
sub
cmp
push
dec
pop
jl
cmpsb
xchg
cmpsb
popa
jns
inc
push
sub
jo
mov
dec
outsl
cmc
fldcw
xchg
jae
xor
je
frstors
cmpsl
add
jmp
inc
incl
lcall
jge
aaa
mov
daa
push
mov
pushf
les
cld
add
fnsave
dec
dec
aad
popf
xchg
mov
mov
jmp
mov
in
adc
jl
inc
xor
insb
adc
cmp
test
mov
fsubl
and
pop
mov
dec
jp
fstpl
mov
into
jnp
pop
adc
mov
in
xchg
dec
push
mov
pop
insl
adc
cmp
shrb
sbb
xor
and
jge
pop
add
mov
jecxz
xorl
dec
test
xor
insl
fdiv
push
jno
or
sbb
add
and
into
lods
cmova
imul
mov
pop
movsl
xor
jl
jne
ljmp
jnp
xor
cltd
fnstcw
or
dec
pop
sub
jno
pop
mov
cmp
dec
aam
ljmp
les
imul
cwtl
push
pushf
mov
push
push
dec
sbb
pop
pop
ljmp
push
jmp
sbb
fwait
adc
ljmp
inc
mov
inc
in
pop
pop
shl
negb
xor
subl
inc
xchg
xchg
cs
out
ja
outsb
pop
pop
mov
jno
push
outsl
test
call
jg
push
push
addb
nop
mov
imul
jecxz
sbb
push
xchg
and
jecxz
sbb
inc
dec
test
adc
xor
out
mov
push
ljmp
test
mov
pop
pop
movsl
sub
push
mov
mov
addl
lods
pop
inc
ror
and
xchg
pop
xchg
mov
fwait
pop
inc
push
pop
lahf
sub
or
shl
das
push
ljmp
fwait
pop
inc
mulb
mov
inc
dec
rol
shll
jecxz
dec
mov
aam
rorl
movsb
push
sti
pop
test
fisubl
pop
mov
or
stos
jl
and
push
pop
pop
push
lcall
dec
add
out
xchg
je
sarl
je
fisubrs
pusha
push
popf
faddl
xlat
sub
sub
lods
inc
mov
push
das
mov
sub
and
cli
aaa
in
test
inc
cmp
jmp
data16
mov
fwait
cmp
lea
movsl
pmaxsw
imul
ret
and
inc
out
sbb
fcompl
mov
push
add
inc
xchg
int
dec
add
pop
dec
mov
sbb
scas
lret
ja
insb
cmp
int
dec
mov
test
or
outsl
push
xchg
push
pop
je
loope
sahf
sbb
stc
or
aam
cmovae
xchg
mov
je
addr16
inc
jmp
fldt
pop
pop
mov
fistl
sub
in
sbb
inc
rcrl
inc
in
aad
and
cwtl
sub
mov
dec
pop
sbb
xor
dec
sub
dec
jae
adc
pop
movsl
mov
xchg
jno
movsl
lahf
inc
inc
notb
jmp
xchg
mov
ds
hlt
xor
jl
and
les
test
test
lret
sub
inc
and
push
mov
cmp
dec
dec
fldl
sub
mov
xlat
jp
pop
add
rcrb
pop
jl
icebp
mov
mov
push
lods
div
inc
mov
mov
jno
sub
mov
cmp
xchg
dec
iret
in
stos
fsubrs
pop
std
movsl
std
inc
inc
sub
cmp
xchg
pop
mov
inc
xor
or
push
inc
je
sub
and
cmpsl
daa
into
inc
cmpsl
fldl
cld
out
jnp
inc
jae
xchg
xchg
aaa
xlat
ljmp
push
pop
push
cld
popa
addr16
das
ret
jg
sub
mov
xchg
pop
imul
iret
pop
sbb
dec
sub
xor
or
ljmp
xchg
or
xor
arpl
push
test
sbb
cmp
addr16
xchg
pop
stc
pusha
test
mov
mov
popf
test
orb
leave
and
mov
push
imul
xor
mov
mov
or
xor
jg
test
adc
or
or
xchg
in
mov
cli
pop
ja
push
lods
stos
sbb
xor
xor
fisttpll
pop
xchg
sbb
or
lret
push
mov
sub
loope
cmp
xchg
xchg
pop
loop
or
xchg
sub
cmp
cmp
sbb
adc
sbbl
in
and
jl
xchg
into
test
lock
pop
lcall
dec
inc
addr16
or
fsubrs
jg
push
in
jb
aam
fidivl
fists
mov
or
add
mov
outsl
test
in
popa
and
je
aas
fcoml
fs
repnz
sbb
push
in
fisubl
aaa
inc
xchg
std
scas
jg
xchg
dec
lock
push
mov
jns
cltd
scas
js
jg
loopne
cmpsb
call
aad
and
aas
cmp
rcl
mov
sbb
xor
lea
nop
push
bound
enter
push
jp
mov
insl
rol
mov
add
inc
ljmp
and
adc
fcompl
iret
mov
arpl
sar
add
add
and
test
pop
loopne
or
es
sbb
xchg
enter
scas
loope
pushf
ret
test
jnp
pop
mov
sbb
aam
pop
ja
insl
lods
adc
mov
and
xor
dec
jbe
popa
outsb
sahf
or
mov
loop
daa
mov
lret
pop
mov
fcmovnu
xchg
mov
cmpsl
cltd
int3
test
jb
xchg
or
adc
repz
imul
xchg
popf
cmp
lahf
jbe
mov
and
mov
or
sub
add
pop
pmulhuw
jno
imul
push
test
mov
int3
bound
add
mov
lcall
insl
add
cmp
push
aas
enter
aad
popa
clc
or
aad
scas
mov
jle
sar
and
repz
outsl
leave
es
lods
sbb
into
add
test
mov
lods
xchg
rorl
inc
faddl
or
add
lret
sub
pop
or
sub
sub
in
mov
outsl
and
inc
xor
in
sub
lods
repz
gs
push
aaa
fsts
insl
cmp
jbe
mov
inc
ds
gs
add
jb
sahf
pop
in
mov
js
sub
pop
xlat
mov
lahf
scas
aad
push
loope
jae
or
lcall
enter
pop
es
and
mov
cmpsb
stos
std
subb
jg
adc
mov
xor
outsl
out
ja
bound
loope
cmp
push
cmpsl
sbb
ss
movsl
fldl
repnz
lret
outsl
clc
mov
add
jbe
mov
das
sub
mov
dec
push
rcrb
fcoms
or
sbb
xorb
jbe
push
mov
sbb
sarl
lret
pop
dec
inc
fdivs
sbbl
mov
sbbb
scas
cwtl
popf
inc
adc
in
mov
test
xchg
add
fisubl
adc
mov
imul
cmp
lahf
out
lcall
test
fiadds
test
test
mov
leave
in
jb
iret
movsl
loope
jecxz
xchg
inc
xchg
xchg
push
ss
jne
mov
inc
add
ja
jo
adc
add
outsl
adc
mov
aam
rcr
cmp
mov
scas
pop
jnp
push
inc
sbb
fildll
rcll
mov
addr16
cld
jbe
aad
jbe
jecxz
repz
adc
push
test
jp
inc
outsl
push
xchg
jg
jnp
jno
rcl
loope
subb
ljmp
sub
cmp
in
xchg
rcll
out
in
lahf
stos
dec
lods
lcall
push
mul
fidivl
insl
into
shll
xor
fs
cmp
adc
jbe
dec
in
cmp
ja
push
divl
stos
and
sbb
xchg
pop
mov
insb
add
outsb
mov
xchg
cmpl
pop
insl
stos
in
call
xchg
jnp
jle
popf
outsl
pop
lahf
and
ret
mov
imul
or
or
hlt
jge
inc
or
xor
popa
mov
ret
xor
and
jecxz
lahf
xor
and
out
xchg
xor
xchg
call
daa
push
fisttpl
sbb
mov
inc
mov
lcall
repnz
hlt
sub
jns
push
inc
mov
mov
adcb
enter
lahf
push
js
jp
jb
adc
jg
and
sub
push
and
pop
imul
sub
sbb
pusha
mov
add
cmp
cmp
and
sub
adc
pop
jp
push
and
sahf
dec
les
fiadds
fs
mov
insb
push
mov
fwait
mov
cmpl
inc
daa
or
mov
mov
sub
mov
rcl
pop
or
lret
jo
sub
fbld
push
sar
push
lods
or
iret
daa
xchg
push
mov
les
call
insl
jne
mov
dec
xchg
enter
cmp
push
and
jae
ret
cmp
int
inc
pop
test
mov
xor
mov
mov
inc
pop
pop
jge
add
xchg
pop
sbb
fistl
cmp
push
ret
jns
pop
mov
lods
pop
cmpsb
scas
lahf
movsb
pop
sub
scas
roll
cld
negb
adc
or
cmp
dec
and
adc
add
mov
call
jg
lret
xor
out
fcmovb
xchg
in
cmc
test
jp
into
mov
sbb
pop
lock
push
push
pop
dec
and
dec
mov
inc
add
test
xlat
and
data16
dec
xchg
or
in
or
test
push
test
inc
xor
out
insl
in
adc
adc
fisubrl
push
cmp
into
inc
test
lret
ffreep
insl
loopne
pop
lea
dec
and
jl
jne
mov
sub
mov
clc
cmp
test
pushf
rclb
jge
pop
dec
dec
bound
adc
test
mov
sub
push
or
jae
push
sahf
mov
repz
add
mov
jae
xor
mov
xor
mov
jae
mov
add
sti
shrl
dec
lcall
pop
scas
adc
sub
push
or
sub
jl
clc
mov
rolb
sub
outsb
mov
jbe
mov
jns
outsl
jbe
mov
and
test
or
and
movsl
cmpsl
or
sti
push
xchg
imul
sysexit
jb
test
pop
loop
or
enter
scas
xchg
std
or
push
push
push
mov
or
sbb
or
xchg
mov
incb
sbb
fidivs
out
lds
sub
mov
sbb
mov
imul
rcl
mov
xchg
mov
push
pop
inc
mov
pop
sub
shrl
les
pop
xor
xor
stos
jne
mov
adc
jp
pop
sbb
je
les
push
cmc
ja
push
aaa
mov
fidivs
mov
cmpl
loop
cmp
ja
fwait
das
lea
arpl
cmp
mov
cld
add
mov
sub
insb
clc
lea
std
push
insl
push
sbb
ret
push
xchg
sub
aas
jnp
lock
mov
js
enter
jl
mov
out
lds
mov
pop
push
movl
ljmp
or
and
xchg
or
stos
lea
aam
inc
mov
pusha
rcr
into
xchg
cli
test
stos
mov
stos
jnp
aad
cmp
es
lea
inc
in
in
test
ficoms
outsb
fists
iret
pop
add
xchg
insl
mov
mov
xchg
fidivrl
adc
lods
loope
jno
inc
popa
pop
test
add
pop
testb
cmp
adc
movsb
loop
sub
mov
rcr
inc
fisttpl
popa
xor
mov
pop
lcall
ret
adc
loopne
xlat
cli
pop
cmp
xor
push
rcl
inc
fbld
repz
or
arpl
dec
imul
jo
push
test
pop
or
stos
xchg
into
nop
int3
das
imul
or
push
aad
or
and
and
add
sar
and
and
xor
push
jl
loopne
imul
cltd
mov
cld
jne
add
mov
movb
mov
aad
sbb
lcall
je
or
je
test
aaa
cmp
push
jnp
xchg
or
push
cltd
sub
mov
loop
push
mov
sub
loopne
sar
mov
mov
out
fstl
bnd
cld
movsl
pop
jo
xor
popa
psrlw
test
cmp
push
test
int3
imulb
outsb
subb
and
and
scas
mov
mov
icebp
sub
jne
cmpsb
stos
shll
lahf
jle
jb
pop
mov
sbb
dec
enter
int
or
cmp
push
adc
arpl
mov
cltd
jns
lods
jne
inc
adc
and
pop
icebp
sub
inc
and
sbb
sbb
dec
inc
test
cmp
jo
adc
sub
push
in
inc
add
mov
pop
sbb
int
sub
bswap
adc
jbe
xchg
mov
mov
cltd
loope
jge
jnp
rep
dec
jb
ja
nop
movsb
fwait
xor
imul
fwait
jge
lcall
xchg
scas
mov
fcoml
pop
idivb
aas
lock
ljmp
ss
mov
dec
shll
into
inc
inc
sub
addr16
sbb
jb
outsl
loop
sbb
mov
imul
mov
outsl
pop
xor
jmp
movsb
mov
cmp
dec
and
sbb
outsb
mov
cmpsl
cmpsl
dec
cmpsb
pop
fldl
cs
scas
scas
in
jmp
sub
jp
add
pop
cltd
clc
retw
push
and
stos
jg
or
in
ror
aad
push
and
sahf
int
shlb
jne
xchg
dec
out
or
out
jbe
xchg
jns
cmp
cmp
loop
mov
push
mov
and
cmp
jae
dec
or
dec
and
aas
test
jo
inc
mov
aas
cmpsl
mull
xchg
cltd
outsl
shrb
cmp
and
mov
ja
xchg
repnz
test
mov
imull
mov
in
mov
sarl
jo
pop
xchg
sbb
mov
pop
cwtl
fidivrl
in
cmp
cmpb
xchg
dec
sahf
cmc
push
add
push
out
dec
add
sub
insb
dec
push
jmp
jae
pop
in
sbb
or
push
add
jae
sub
mov
in
cltd
pop
sub
sbb
mov
inc
vdivss
jge
addr16
repnz
inc
sub
movsb
shrb
sbb
mov
lods
pop
mov
scas
cmp
push
addr16
push
dec
fst
add
fstpt
cmp
pusha
mov
sub
mov
fadd
movsl
push
cmp
test
jno
and
leave
out
and
add
out
or
jle
stos
clc
add
xchg
aas
pop
push
rorb
loop
cmp
dec
nop
add
adc
data16
in
mov
sub
push
js
push
in
jns
out
addl
aad
add
mov
and
ret
iret
pusha
test
inc
xchg
mov
lahf
inc
push
jge
test
popf
inc
addb
insl
jae
adc
fs
push
sub
sbb
lahf
jbe
fisttpl
sub
push
mov
xlat
movsb
stc
xchg
scas
aaa
pop
into
scas
cmp
sbb
roll
sub
inc
loopne
dec
in
rcrl
data16
and
scas
jbe
jg
js
add
out
ret
stos
push
cmp
adc
inc
xchg
cmp
cmp
xor
push
aas
stos
push
and
iret
gs
test
dec
and
inc
ss
popf
push
mov
sbb
inc
pop
or
enter
sub
mov
add
iret
es
lods
or
clc
push
push
es
xchg
jecxz
daa
out
xchg
dec
push
cmp
leave
cli
lret
or
sahf
clc
int3
xchg
add
cmp
sub
sbb
inc
or
call
adcl
std
stos
ds
icebp
xchg
and
adc
lret
and
cwtl
and
push
shlb
xchg
cli
arpl
in
in
shl
inc
xor
xorl
jno
or
movl
mov
cmp
pop
adc
push
or
pop
jl
jle
insl
or
js
dec
push
add
inc
pop
scas
fisubrs
notl
cs
loop
cmp
jge
jbe
movsl
data16
sbb
adc
dec
fists
mov
adc
xchg
pop
int
cmp
data16
scas
mov
push
hlt
cld
mov
lret
call
and
pop
movsb
cli
mov
gs
test
jnp
jmp
int3
ficomps
add
adc
mov
out
xchg
lock
mov
faddl
pop
jle
dec
sbb
enter
add
cmp
jnp
sbb
fs
mov
shlb
xor
mov
test
cmpsl
xchg
mov
mov
jae
mov
ret
and
bound
out
pop
ret
mov
push
rcl
push
fninit
ror
add
pop
mov
inc
stc
inc
mov
push
mov
mov
ret
cmp
pop
mov
leave
dec
or
lock
push
fisttpll
lods
cmp
xor
mov
arpl
arpl
es
cmp
mov
int3
push
xchg
ss
rol
ret
mov
add
ja
or
mov
ds
mov
cmp
add
xchg
cs
ss
cs
push
out
add
dec
mov
sbb
ss
push
cmp
dec
loop
mov
insb
loope
in
mov
xchg
and
mov
adc
inc
adc
pop
add
clc
out
rclb
pop
arpl
cmpsb
add
ret
or
dec
pop
movsl
push
stc
or
push
clc
data16
pop
inc
and
jge
pushf
mov
insl
mov
lret
inc
mov
jecxz
shlb
leave
or
dec
mov
ds
addr16
xchg
out
xchg
adc
fisttps
rcll
loopne
dec
andl
fisubs
cmp
das
push
jg
ja
sahf
ret
mov
pop
into
mov
mov
ljmp
movsl
fcmovne
push
push
jp
pop
insb
cmpsb
es
and
decb
xor
xchg
and
lahf
popf
fdivl
jmp
popa
pop
dec
jle
mov
sub
ds
int
test
mov
xchg
lock
sbbb
rcll
push
fcomps
mov
mov
cwtl
mov
or
xchg
push
push
cmp
ljmp
fnstcw
pop
rorl
or
dec
ret
adc
aas
clc
dec
mov
and
test
sbb
packsswb
lret
movsl
lahf
mov
sub
xchg
mov
push
ljmp
pop
ret
andb
repnz
lds
mov
push
ja
jmp
movsb
movsl
cmp
inc
add
in
sar
out
xchg
or
push
cmpsb
into
test
cmpsb
xor
inc
mov
or
and
mov
cmp
fistl
jp
cltd
loop
lock
jbe
fdivrp
xlat
pop
dec
test
dec
adc
shrl
push
leave
push
divl
push
jg
xchg
shlb
mov
sbb
sub
ja
adc
lock
jle
lcall
add
inc
dec
xchg
test
sub
pop
in
cmp
mov
add
cmp
adc
mov
adc
cwtl
adc
cmpb
int
mov
into
iret
pop
mov
sarl
rolb
dec
jne
out
mov
cmp
and
out
jne
bound
mov
ljmp
out
sub
call
enter
ljmp
xor
add
mov
movsl
adc
fmuls
sbb
enter
clc
fimuls
jmp
cmp
lahf
lock
fiaddl
mov
dec
pop
inc
rcll
push
sbb
xchg
sbb
data16
pushf
imul
adc
push
lret
in
add
xchg
mov
addr16
or
mov
and
and
in
lods
or
ficoms
xchg
pushf
loopne
xor
pop
mov
xchg
xchg
aad
stos
dec
sbb
push
xor
mov
mov
mov
pop
inc
outsb
outsl
mov
lea
aam
jecxz
add
xchg
loop
push
insb
pop
push
loope
jge
mov
loopne
xchg
jo
cmp
data16
mov
mov
mov
jno
push
mov
xchg
jl
popf
ja
lret
sbb
mov
mov
push
mov
add
test
dec
pop
loopne
repnz
pop
mov
mov
subb
lds
push
mov
pop
push
push
xor
cmp
pop
les
clc
xor
js
push
iret
and
enter
std
or
fucomi
bound
fistl
sahf
out
adc
inc
mov
xchg
test
ja
addb
dec
loopne
pop
roll
lret
pop
icebp
pop
ret
mov
inc
mov
scas
push
and
out
mov
sbb
pop
flds
add
lret
sub
push
outsb
pop
cld
int
pop
das
inc
mov
and
inc
and
sbb
aas
sbb
jl
cmpb
test
icebp
iret
jle
mov
into
cltd
xchg
or
push
inc
stc
icebp
mov
jne
stc
shrb
pop
clc
lods
adc
mov
push
movsb
in
adc
enter
adc
orb
mov
add
push
add
mov
pop
rolb
loop
mov
inc
mov
xlat
sbb
loop
mov
add
xor
dec
pop
or
xlat
arpl
jge
xchg
cltd
movsl
adc
shll
rolb
dec
aam
dec
ret
sub
icebp
sbb
xor
rolb
mov
pop
fdivl
inc
sti
roll
mov
xor
adc
push
ljmp
stc
call
lret
mov
jnp
rolb
xchg
fiaddl
daa
sub
pusha
adc
cli
xchg
call
xchg
js
cltd
xor
loopne
cmc
mov
pop
rep
mov
cmp
jp
pop
rorl
hlt
ficoml
mov
jno
flds
xor
fidivs
ret
bound
les
fucomip
adc
dec
pop
push
adc
icebp
stos
pop
push
add
into
push
xor
cmpsb
enter
add
dec
pop
xchg
iret
lea
adc
jg
daa
or
add
hlt
push
js
ret
dec
xchg
pop
sub
std
mov
aad
mov
jb
add
and
jo
jbe
stos
enter
shll
or
clc
loop
dec
fs
das
test
lods
aaa
add
hlt
pop
xchg
insl
add
or
nop
xchg
sbb
xor
or
test
push
aad
icebp
ret
jne
bound
sarb
and
sbb
jp
adcb
mov
scas
fwait
outsb
out
icebp
dec
mov
shlb
jle
int
pop
adc
adc
add
mov
sbb
hlt
je
add
inc
push
mov
fs
dec
push
sbb
add
or
sub
or
mov
cltd
es
mov
xor
mov
movsl
fldl
push
fs
scas
add
jo
test
cli
iret
add
nop/reserved
cmp
mov
not
negb
ret
mov
insl
cld
stos
sub
or
test
sub
push
push
xchg
int
cmp
pop
dec
pop
xor
imul
mov
imul
xchg
lock
jno
fsubs
jns
cld
and
mov
es
mov
outsb
sbbb
cmp
push
iret
jmp
orb
adc
or
test
inc
push
hlt
push
stos
or
lea
shl
je
repz
push
fldl
cmp
add
sub
mov
sub
ljmp
lcall
out
add
inc
lret
jl
cltd
mov
add
imul
daa
cmp
loope
mov
cmpsb
and
add
push
cli
push
aam
fists
inc
in
vunpcklps
mov
sub
lock
adc
sub
dec
cmpsb
decb
pushf
scas
test
push
arpl
in
mov
add
loop
aaa
dec
push
xlat
jmp
push
mov
jmp
arpl
cli
jbe
jb
add
test
popf
lret
test
sbb
pop
repnz
cmc
xchg
sub
imul
jecxz
idiv
cwtl
mov
mov
lods
mov
cli
pushf
jmp
fbld
mov
cld
outsb
ret
add
jg
loope
outsl
xchg
cmp
xchg
fcoml
into
test
inc
scas
pushf
fnstcw
adc
add
pushf
push
pop
cmp
xchg
or
adc
call
bound
sub
cmpb
mov
pop
cltd
clc
mov
in
xorl
test
stc
xchg
sub
in
mov
push
inc
pop
xchg
xor
push
hlt
jne
dec
xor
mov
or
pop
xlat
mov
mov
xlat
outsl
dec
insb
repnz
fistl
mov
sbbl
inc
arpl
mov
movsl
lods
xor
mov
ret
leave
test
dec
add
jle
clc
test
push
xchg
ret
lahf
dec
xorl
jle
fldenv
inc
pop
cmc
or
push
xor
cmp
pop
jns
inc
push
pop
nop
fidivrs
leave
adc
arpl
push
cs
lock
roll
mov
adc
les
push
in
ret
push
mov
inc
xchg
bound
lea
push
cmp
sub
xchg
push
notl
aas
js
add
jl
mov
pusha
call
mov
cmp
sub
inc
xorb
push
cli
or
ja
mov
test
push
inc
aas
adc
stos
jge
insb
rolb
fidivrl
pop
inc
push
movsl
lret
xor
out
out
push
insl
pushf
jne
xor
mov
test
pushf
jno,pn
cmp
movsl
cmp
pop
xor
dec
inc
popa
mov
enter
je
leave
mov
ret
and
enter
notb
adc
mov
cmp
add
pop
push
and
ds
push
popf
ljmp
xor
mov
or
push
ret
int3
jmp
out
stos
xor
filds
cs
sbb
jp
es
enter
cmp
jmp
rcrl
stc
aam
mov
out
cwtl
xor
pop
loope
cltd
cs
in
adcb
xor
jns
pop
push
sbb
in
xor
and
pop
rcll
inc
call
clc
pop
imul
jns
lahf
pop
mov
xchg
sbb
jge
inc
mov
js
jno
or
pop
jae
shl
adc
mov
daa
cmpsl
adc
fiadds
push
push
and
dec
cmp
sarb
test
cwtl
pop
gs
hlt
notb
xor
xor
mov
gs
cld
mov
ljmp
or
lods
inc
push
adc
insl
mov
das
adc
es
add
cmpsb
jmp
sbb
data16
mov
push
sbb
xor
call
and
sbb
mov
push
cmp
lods
fisubrl
cmp
pop
push
pop
gs
jno
jno
pop
pop
lcall
fmuls
sbb
or
inc
jae
dec
addr16
sub
dec
jp
pop
dec
sub
mov
cs
adc
in
xor
xchg
ficomps
xor
add
daa
int3
push
add
dec
mov
push
outsl
rcl
test
aam
push
lret
mov
jl
ret
mov
mov
ja
add
push
xor
lock
pop
sbbl
dec
je
dec
add
add
or
mov
pop
adc
push
mov
sub
adc
loop
call
jge
ret
cmp
ljmp
mov
dec
frstor
pop
and
push
sbb
shrl
fildl
orb
push
ret
out
incl
sub
stos
mov
fildll
cltd
jbe
jg
lret
and
sbbl
jp
pusha
sub
adc
stc
fwait
adc
insb
mov
xchg
add
xchg
jmp
aad
lea
fs
dec
cmc
sbb
je
inc
mov
pop
fsts
adc
xchg
mov
push
mov
imul
mov
push
lahf
adc
cltd
gs
xchg
sbb
bound
sub
movsl
mov
int
push
xor
sub
jno
inc
lret
sbb
push
add
pop
popf
push
pop
mov
flds
and
bnd
idivb
test
sahf
or
push
xchg
pop
mov
es
and
adcl
test
push
dec
iret
ret
iret
push
dec
lds
dec
out
push
nop
in
sbb
cmp
pop
test
mov
mov
or
cld
add
rcrb
push
and
mov
push
jecxz
fwait
jmp
sarl
xchg
js
xchg
push
clc
test
repnz
outsl
sahf
dec
ja
adc
imul
out
sbb
or
push
xor
movsb
lret
jb
sub
movsb
cltd
cmp
mov
mov
sub
shr
xor
imul
jl
push
add
call
fisubrl
xchg
sbb
cmpl
push
or
js
movsb
dec
add
mov
add
sbb
mov
incb
fstpl
jp
mov
xchg
add
mov
fistps
cmc
xor
sti
cld
xchg
shlb
cwtl
jb
int3
daa
or
pop
dec
mov
xor
test
aam
sbb
cltd
adc
cmp
mov
mov
movsb
pop
cmp
mov
scas
cmpsb
push
or
lods
mov
lcall
mov
test
adc
iret
push
or
dec
in
test
xchg
sahf
push
loope
test
push
mov
ds
add
pushf
xchg
ds
stos
xor
mov
xor
inc
addr16
aad
mov
xchg
popf
adc
insl
js
xor
imul
jmp
pop
in
mov
fbld
cmp
jg
test
xchg
lcall
push
in
mov
push
int3
cli
loope
ljmp
inc
in
dec
mov
dec
xor
in
add
jne
mov
cmp
dec
push
int3
stos
fdivp
lods
in
cmpsl
mov
mov
shr
xchg
dec
and
imul
pusha
pop
ss
scas
cmp
pop
icebp
out
mov
hlt
jmp
mov
mov
xor
push
popf
adc
aaa
imul
outsb
mov
xchg
or
enter
mov
in
das
and
cmp
and
sahf
cmp
popa
cmc
psrlq
push
sbb
jb
inc
xchg
mov
lods
stos
cltd
popa
mov
movsb
int3
add
jp
repnz
mov
jne
push
push
sub
popl
push
ret
sbb
icebp
cltd
sti
stos
add
pop
and
pop
call
jp
sti
shll
push
push
mov
inc
adc
mov
out
sub
mov
scas
sub
sbbb
jae
aad
pop
pushf
mov
iret
ret
jecxz
negl
test
dec
pop
cli
mov
add
sbb
test
xchg
cltd
jae
dec
cmp
pop
cmpsl
movsb
js
cmpsb
mov
js
cli
insl
aad
enter
push
iretw
in
ss
insl
and
ljmp
leave
orl
jp
push
test
push
dec
sub
loopne
rorl
xor
add
dec
sbb
rol
push
add
push
rclb
jnp
sbb
push
mov
pop
idiv
sbb
jmp
cwtl
lcall
mov
add
xchg
movsl
enter
lods
arpl
xchg
cmp
or
adc
out
lret
pop
adc
adc
or
in
dec
scas
arpl
cltd
push
dec
test
out
pop
popf
stos
dec
inc
mov
add
pminsw
lahf
mov
int3
outsl
xlat
jge
add
mov
mov
dec
lcall
in
aam
sub
or
lock
pop
pushf
pushf
cld
or
cmp
pushf
pop
jecxz
jae
inc
ficompl
push
bound
and
mov
cli
test
fldt
xchg
pop
in
fdivl
add
lea
xchg
mov
pop
cmp
les
sub
sub
test
int
xor
je
loop
push
daa
es
mov
lock
mov
adc
or
mov
fstps
out
or
cmpsb
jo
cmpsl
adc
xchg
dec
cwtl
ja
push
mov
dec
jge
jge
es
add
xchg
int3
cli
cmpsl
and
pop
pop
fdivl
cmp
dec
mov
fnstcw
xchg
mov
cltd
loope
jp
sbb
movsl
mov
mov
jne
das
dec
and
sahf
int3
xchg
jmp
mov
ds
sbb
test
js
sub
jl
inc
fiadds
dec
sti
add
add
andl
push
push
push
pushf
dec
cltd
or
jmp
out
or
or
xchg
mov
sub
adcb
stos
cltd
cld
push
shl
mov
fdivr
pop
out
imul
pop
jb
shlb
and
and
cmpsl
daa
xchg
fdivrp
mov
dec
sbb
or
xchg
js
add
cmpsl
clc
out
and
jle
test
inc
pop
push
in
sub
add
jae
out
fwait
lock
dec
sbb
jo
inc
xlat
out
rorl
decl
aas
lret
ficoms
lahf
dec
loop
inc
push
pop
mov
sub
enter
dec
pop
shll
mov
xor
jl
push
or
imul
jno
fcompl
insl
movsl
adc
loope
sub
stos
or
jg
sbb
fistl
out
inc
cmpsb
adc
inc
sarl
inc
cmp
adc
add
push
dec
in
decb
in
stc
adc
mov
or
mov
shrl
ret
and
bound
ret
jmp
jg
cld
imul
mov
and
clc
lock
out
push
shrb
shlb
xor
ja
bnd
xlat
scas
sub
xchg
xlat
xchg
in
jb
jmp
adc
dec
sbb
nop
xchg
sbb
mov
cmp
push
adc
ss
jnp
sti
mov
inc
dec
data16
mov
jb
mov
mov
xchg
mov
pop
nop
sub
clc
fdivl
stos
push
notb
testb
xor
push
nop
in
push
jmp
add
outsl
outsl
inc
cmp
ss
sub
hlt
inc
icebp
insl
jb
jbe
ret
xor
push
setbe
pop
push
mov
negl
iret
inc
popf
ds
sub
jecxz
fmulp
add
pop
xor
adc
adc
mov
cltd
push
xchg
and
daa
jno
ss
in
test
inc
bound
outsb
jnp
push
aaa
pop
or
popf
mov
push
hlt
push
add
xchg
call
mov
icebp
pop
scas
out
sbb
icebp
stc
jne
aad
bound
xchg
pop
adc
ror
pop
movsb
mov
xor
imul
mov
mov
cmpsb
int3
jle
mov
repz
fisttps
push
notl
adc
repnz
jno
data16
push
add
adc
or
ljmpw
push
xor
adc
cltd
sbb
xorb
shll
pop
enter
push
jbe
outsl
xchg
ficompl
scas
out
je
cmc
test
stos
or
sti
repnz
jle
sahf
mov
and
icebp
jp
xor
nop
call
outsl
int
lret
test
sub
daa
js
push
shll
in
cmp
add
inc
andb
outsl
inc
jnp
cmpsl
fcompl
lock
push
mov
mov
mov
lods
mov
push
ret
xorl
cli
add
dec
sbbl
fnstsw
sub
filds
push
and
mov
pop
mov
test
pushf
lods
mov
ret
dec
mov
dec
lea
iret
add
dec
inc
bound
icebp
ss
pop
scas
nop
add
jl
sbb
clc
mov
je
insb
lods
sub
sub
rolb
inc
outsl
or
pop
ror
sarl
fsts
sub
out
dec
inc
cs
adc
xchg
cmp
and
stc
add
mov
cmpsb
ret
adcb
insl
pop
into
pusha
sti
gs
inc
mov
loop
shll
push
xor
cltd
pop
ds
jo
mov
push
shlb
mov
jg
xchg
mov
mov
add
nop
pop
daa
fistl
sbb
pop
fsincos
int3
loop
movsb
out
cmpsb
lds
loop
push
lods
jo
fisubrs
pusha
adc
dec
sarl
shrb
iret
sbb
lock
add
and
or
cld
pop
jo
dec
pop
push
fstpt
xchg
in
xchg
jle
mov
lea
adc
jle
pop
pushf
das
in
push
dec
test
xchg
mov
push
mov
cmp
stc
jmp
push
pop
cmpsl
push
es
add
xor
cmp
stos
push
sub
icebp
test
or
jo
lods
mov
adc
inc
cmc
insb
add
mov
xor
fldt
bnd
arpl
mov
lods
sbb
inc
outsl
sbb
and
adc
inc
xor
arpl
xchg
adcb
in
cmp
pop
mov
xor
daa
or
daa
pusha
push
adc
scas
cwtl
jo
pop
sub
cmp
dec
jo
xlat
sub
inc
imul
ret
dec
insb
and
aad
sub
lahf
aam
push
jns
or
dec
cmp
outsb
popf
pop
sbb
mov
mov
adc
sub
dec
lock
das
jmp
clc
test
mov
ret
fisubrs
movl
fwait
lods
mov
sbb
fldcw
or
and
mov
popa
dec
push
inc
xchg
mov
or
notl
outsb
data16
cmpsb
lock
insl
xor
je
es
dec
sub
adc
mov
das
push
paddd
ljmp
xchg
add
lods
ret
rorb
clc
stos
jbe
dec
push
jge
jmp
jo
je
sub
test
arpl
ret
mov
movsb
xchg
fwait
xchg
repz
inc
pop
adc
add
and
loope
mov
movsb
mov
sbb
xor
mov
push
aaa
xor
jg
cld
pop
addl
or
xchg
cmp
inc
test
jb
adc
imul
cmp
into
popa
xchg
xchg
or
les
jbe
ret
mov
hlt
add
mov
xchg
lret
jno
cmpsb
mov
jns
and
adcl
test
subl
enter
lds
daa
and
sbb
fwait
dec
mov
inc
loop
adc
jo
ret
dec
std
loop
pop
dec
jb
mov
aad
sbb
mov
mov
js
xchg
adc
popf
out
pop
rclb
das
cltd
mov
xor
adc
fcomps
rcl
xchg
sub
loop
scas
scas
sub
mov
jbe
or
sbb
cmp
cmp
ds
add
add
dec
outsb
mov
aam
xor
inc
inc
and
push
in
test
cwtl
test
inc
sarl
sbb
adc
fs
push
inc
mov
ret
inc
mov
dec
cmp
in
adc
ja
dec
inc
and
mov
mov
cmc
and
mov
xchg
pusha
fildll
mov
mov
add
inc
shrb
xchg
arpl
fdivs
test
cltd
cmp
cmpsl
mov
cmp
ficomps
mov
imul
je
jno
in
jnp
cmp
mov
adc
mov
ljmp
or
hlt
idiv
out
jae
enter
data16
push
loope
adc
lret
pop
push
enter
sbb
loop
adc
into
push
mov
pop
mov
push
mov
fdivl
push
push
int3
mov
mov
insl
mov
addr16
pop
imul
mov
dec
mov
dec
test
lods
btr
pop
test
fimull
pop
push
add
xchg
in
mov
dec
sub
enter
push
and
push
inc
jno
sahf
xchg
ss
lds
test
int3
icebp
mov
sbb
ja
inc
arpl
idiv
repz
out
loope
dec
jg
stos
dec
pop
xchg
jle
inc
pop
add
push
and
jb
jl
stos
or
sti
dec
dec
mov
popf
movsb
cmc
lods
test
cmc
push
xchg
push
insl
repz
test
adc
push
dec
lahf
pushf
in
rcr
mov
test
and
ss
xlat
lahf
bound
pop
and
adc
push
addr16
and
inc
pop
sbb
mov
jge
shrl
jg
jns
add
inc
leave
mov
dec
insb
push
mov
andb
sbb
les
push
xor
das
and
aaa
dec
imul
aaa
push
loop
loop
sbb
cmc
push
fwait
mov
aas
pop
push
lea
jno
cli
nop
sbb
cmc
add
jmp
dec
mov
mov
cld
add
fadds
insl
inc
pop
data16
out
mov
mov
pop
inc
inc
mov
jge
stos
nop
sub
cmp
fs
cmp
stos
push
cmpb
fcompl
test
bound
push
xchg
inc
mov
mov
in
ret
push
inc
cld
xchg
in
insb
cwtl
jne
bound
fistps
mov
dec
sub
imul
leave
cli
popa
pop
dec
stc
xchg
xor
sub
dec
jecxz
mov
ja
push
daa
out
repnz
mov
ret
mov
call
neg
inc
mov
mov
stc
push
pop
test
dec
jmp
or
in
cmpsl
arpl
xor
cmp
xor
lret
mov
sbb
xchg
orl
xchg
scas
cmpsb
inc
xchg
cmp
fxtract
daa
out
repnz
je
push
mov
or
cmpsl
pop
xchg
subb
adc
lea
pop
test
rclb
into
pop
std
and
add
cmp
sbb
int
insb
aas
adc
jno
xchg
insl
sub
fwait
into
ljmp
jle
cli
mov
inc
mov
sbb
rorb
leave
xchg
icebp
or
xor
cmpsl
sbb
xor
dec
mov
push
mov
loope
nop
and
lret
and
pushw
lret
out
lea
fimuls
daa
xor
pop
pop
inc
add
dec
add
jns
inc
sub
mov
dec
add
out
aaa
in
sbb
push
jno
sbb
movaps
dec
icebp
push
sbb
test
out
xor
js
add
inc
loop
sbb
sbb
jne
test
lds
rol
dec
ret
adc
jne
push
inc
outsl
adc
xor
mov
push
popa
sbb
lret
insb
bound
pop
je
cmp
xchg
es
pop
dec
push
inc
icebp
inc
xor
sub
mov
jl
loop
xchg
scas
daa
jne
in
mov
inc
adc
pop
adc
xchg
insl
mov
pcmpgtd
or
xchg
icebp
xor
add
arpl
insl
leave
rcr
outsl
sub
cmp
push
clc
lea
jnp
xor
fwait
cmpsl
in
push
outsl
ret
dec
fsubs
in
adcl
pusha
rorb
int
call
mov
xchg
mov
pop
mov
imul
cmp
fldl
mov
jo
push
test
movsb
enter
cmp
cmpb
mov
ret
mov
arpl
mov
fsts
push
lods
daa
or
iret
jno
lahf
pop
gs
jg
sti
lret
icebp
stc
sbb
mov
lret
jb
push
inc
jmp
xchg
sbb
mov
adc
xlat
sbb
mov
push
push
rcr
mov
push
pop
stos
in
push
xor
inc
aam
inc
xor
sbb
aad
ljmp
mov
aad
das
dec
loop
mov
clc
and
cld
mov
pop
mov
mov
movsb
cmp
jmp
mov
jbe
mov
popf
sbb
mov
push
jbe
lahf
in
jg
scas
lea
mov
xchg
in
xorl
ja
in
enter
fdivr
out
adc
jne
mov
xrelease
mov
dec
cmpsl
inc
or
adc
loopne
cmp
mov
push
push
pop
mov
sub
push
lret
fisttpll
sbb
data16
sub
test
icebp
aad
lds
pop
adc
lods
push
pop
mov
test
xchg
das
and
adc
decb
in
mov
jo
push
add
pmaxsw
dec
out
sbb
daa
cmovbe
sub
std
mov
pop
lret
into
mov
ret
movb
fdivp
out
add
insb
sbb
test
push
divl
repnz
lret
bnd
push
or
mov
negl
int
sub
push
push
and
jge
cmp
addb
stos
push
and
lret
dec
mov
push
or
push
lret
aas
inc
inc
mov
add
adc
sbb
adc
jne
sub
testl
mov
lds
loope
shrb
lock
jg
jg
xchg
fsubr
pop
mov
fisubl
fcmovne
pop
xchg
pushf
mov
imul
les
add
retw
das
test
aas
sub
inc
pop
push
mov
stos
pop
in
add
sbb
leave
cmp
fwait
inc
insl
test
out
xor
icebp
lcall
or
shrb
jne
rorl
or
push
subl
jo
cmp
lcall
ss
paddq
fst
jbe
sub
fdivl
shlb
dec
adc
gs
sbbl
rcrb
jle
std
fidivs
jp
xor
mov
addr16
mov
mov
ret
loopne
and
lea
xor
push
xchg
xchg
or
jns
test
jae
sub
dec
dec
jne
imul
sub
popf
stos
repz
cmp
dec
popf
mov
dec
jae
inc
loope
flds
aaa
add
xchg
mov
in
subb
ljmp
adcl
xchg
dec
xchg
mov
add
aam
cmc
inc
ljmp
mov
lahf
lods
scas
testl
sbbb
das
mov
lret
sub
iret
fcoms
jne
xchg
inc
incb
mov
dec
push
push
cmp
sub
hlt
imul
add
ja
xchg
mov
pop
popa
xor
in
divl
fidivl
in
movsl
enter
add
orb
loopne
sti
outsl
fs
add
ficoml
jno
rcr
clc
mov
mov
mov
inc
pop
scas
and
or
adc
mov
pop
dec
mov
inc
sub
iret
mov
rcl
aam
xchg
pushf
mov
sub
or
lahf
or
cmpl
repnz
jb
xchg
adc
dec
push
push
test
ss
out
in
push
fmuls
outsb
stos
shll
fmull
lea
jmp
sub
repnz
xchg
push
out
das
and
lock
shll
loopne
xchg
dec
add
in
xchg
in
dec
dec
dec
loopne
rclb
cmp
cmp
jg
loop
xor
mov
cmc
out
stc
mov
inc
pop
mov
pop
add
adc
fdivs
lock
ja
pop
xor
rcrl
mov
sbb
scas
rol
xor
mov
mov
dec
in
xchg
mov
loopne
loopne
pop
cmp
mov
mov
std
popa
rol
add
mov
lods
in
cmpsb
imul
lods
xchg
and
mov
mov
adc
and
push
mov
loop
sub
dec
xor
and
xchg
or
inc
mov
lcall
sub
dec
push
icebp
jns
cmpsl
pop
imul
xor
push
mov
sbb
jno
dec
xor
cmp
cmp
test
xor
in
movl
sub
gs
aas
and
das
push
stc
mov
popa
pop
icebp
jmp
or
out
out
and
jge
cwtl
out
cmp
ficoms
lods
dec
xor
stos
ret
jge
fidivrl
push
pop
adc
aas
pop
int3
movsb
cld
lock
fdiv
sub
sahf
inc
add
lret
mov
je
call
push
pop
lret
lds
pop
test
jp
push
out
rcrl
into
leave
pushw
stos
jb
es
cld
sub
add
inc
adc
arpl
xchg
js
adc
mov
rolb
cwtl
sub
sbb
mov
sub
and
cwtl
xchg
push
xchg
jne
pushf
cmp
jnp
out
push
pusha
jo
dec
dec
xlat
cwtl
jmp
pop
push
call
pop
fisttpll
test
cmc
es
cmp
test
mov
mov
outsb
sbb
mov
dec
cmp
repz
fwait
insl
xchg
push
pop
mov
popf
in
jle
subl
scas
push
xchg
sbb
jle
insl
inc
xchg
jno
add
idivl
icebp
out
sti
xchg
xlat
push
mov
ds
sbb
pop
fistl
push
and
movsb
aad
rol
xlat
dec
hlt
sbb
pop
mov
dec
xor
mov
adc
jae
sarl
jmp
push
aaa
dec
mov
addr16
sub
insb
dec
loopne
dec
mov
lds
js
popf
or
mov
mov
mov
jle
into
dec
les
jbe
adc
and
xor
nop
lods
sbb
fstpl
jbe
sbb
or
loopne
cmp
jo
dec
and
imul
cwtl
mov
bnd
ret
jge
xchg
dec
sbb
cmp
scas
aad
imul
lds
repnz
in
mov
mov
adc
ret
sbb
test
cmp
cmp
call
xchg
push
jbe
jo
nop
fisubrs
xchg
inc
loope
das
call
outsb
lods
dec
add
push
call
mov
scas
rorb
adc
dec
xchg
gs
jb
insl
in
aam
imul
into
fisubrs
sub
mov
xchg
jno
fcomps
repnz
subb
adc
mov
push
ss
cmpsb
in
fadd
cmp
push
out
dec
rcr
subl
das
cli
pusha
aam
push
sub
test
sbb
mov
test
arpl
loopne
xor
shr
fcompl
imul
push
xchg
push
or
or
dec
ja
in
cmp
gs
or
test
andb
std
gs
or
scas
mov
int
mov
sub
xchg
aaa
es
in
aas
inc
into
ret
pop
adc
sar
inc
imul
add
jno
mov
mov
gs
jle
scas
test
ret
js
arpl
push
adc
je
shrb
scas
inc
inc
dec
mov
cmp
es
sub
fistl
leave
mov
inc
sahf
sub
repnz
jle
sub
mov
pop
rcrl
rep
mov
vphaddwq
mov
and
scas
pop
das
cmpsb
outsl
jae
sbb
out
or
jge
cwtl
shl
cmc
or
xlat
xchg
out
ret
push
sbb
inc
sub
lret
xchg
mov
mov
pop
int3
fisubrs
dec
rcl
and
jno
xchg
pop
mov
sub
pop
les
jb
fstps
cltd
xorl
jge
xchg
repnz
mov
dec
sahf
xchg
leave
sbb
mov
inc
xchg
rcl
push
or
jno
push
inc
addr16
lock
es
inc
cwtl
mov
imul
leave
or
sbb
push
into
scas
inc
push
xchg
movsb
pop
or
xorl
push
and
jmp
fildl
add
insl
mov
pop
mov
jae
xchg
ljmp
sub
test
mov
inc
or
pop
add
int
dec
cmpsb
adc
loope
mov
movsl
cltd
mov
add
push
jbe
sbb
lret
mov
call
outsb
inc
mov
dec
inc
inc
sbb
adc
in
xchg
loop,pt
das
sbb
mov
stos
mov
sbbl
and
pop
imulb
js
int
lret
cld
inc
or
cmp
ja
push
push
data16
mov
test
and
lret
xchg
repz
or
aas
std
loop
sub
in
or
in
push
sbb
xor
in
imul
es
xor
pxor
pushf
dec
cmp
mov
stos
push
int
ja
gs
adc
mov
xchg
fldcw
pop
or
cltd
pop
ret
test
and
pop
aad
loopne
scas
mov
add
and
cmpsl
leave
mov
or
pop
mov
xor
push
aam
ret
pushf
sti
xchg
inc
inc
lret
mov
aam
popf
mov
inc
pop
insl
jno
push
fwait
and
cs
jnp
stos
pop
adc
aad
sub
outsl
cmpsb
stc
mov
popf
adc
cmp
mov
jmp
mov
das
pop
loope
jno,pt
ds
adcl
mov
pop
xchg
add
add
and
jb
or
adc
sub
imul
shll
mov
push
cmp
ret
rclb
les
lahf
push
xchg
dec
fistpll
fiadds
dec
popf
fsub
mov
dec
or
mov
push
cmp
xchg
lahf
mov
pop
jo
push
fsubrs
pop
or
mov
nop
ficompl
call
aad
out
jnp
inc
push
adc
push
test
arpl
ss
call
jg
shlb
rol
inc
push
dec
push
mov
out
lds
xchg
inc
dec
jns
xor
sti
ljmp
repz
mov
mov
dec
pop
lret
dec
sub
addb
push
sti
mov
arpl
scas
mov
add
clc
xlat
and
daa
jmp
arpl
jge
xchg
add
or
mov
jb
das
inc
mov
out
sarb
dec
add
movsb
mov
test
cld
popa
dec
add
fdivrl
cmpb
bound
dec
adc
xlat
fxch
test
pop
lret
push
js
jbe
pop
movsb
jecxz
xor
rolb
lods
jbe
pop
stc
ljmp
mov
call
add
mov
mov
cmp
dec
sahf
mov
punpcklwd
or
lods
movlps
mov
and
not
sub
xchg
xlat
push
sub
push
loopne
ficompl
adc
sbb
pop
cli
inc
test
mov
ret
dec
call
mov
fadds
mov
inc
mov
jg
jl
cmp
leave
popf
push
nop
sbb
sbb
mov
addb
sbb
insb
inc
out
push
lret
cmc
fadds
out
int3
out
mov
movb
cmp
lds
adc
rol
jmp
aaa
mov
mov
push
add
test
sahf
push
js
inc
cmp
cld
push
sub
addl
mov
inc
adc
xchg
inc
lea
lcall
cs
in
sti
push
imul
xor
jecxz
insb
cmp
lods
lcall
jo
addb
lock
mov
dec
mov
mov
mov
stos
repnz
sbb
dec
inc
adc
dec
iret
push
inc
mov
dec
inc
jmp
xchg
cmp
imul
loop
jb
cmp
pop
lds
lds
sub
gs
and
das
mov
repz
pop
mov
sbb
pop
mov
rorb
xchg
adc
fstpl
ljmp
adc
inc
jge
imul
mov
loopne
into
aad
jns
pop
mov
addr16
fists
adc
mov
addr16
sbb
mov
adcb
cmp
test
leave
pusha
fidivrl
hlt
lret
in
jl
pop
insb
mov
icebp
pop
sub
mov
inc
dec
stos
orb
jb
sub
cmp
jb
iret
mov
jno
push
push
push
cs
lret
or
push
mov
adc
cs
subb
pop
outsb
mov
mov
ficompl
rorl
out
enter
sub
movl
aaa
and
add
sbb
push
lea
mov
cmp
ja
inc
loopne
pop
out
sbb
adc
mov
and
int3
mov
push
push
into
dec
loope
daa
push
enter
stos
lds
mov
out
sub
roll
jmp
adc
dec
mov
or
int
into
push
xchg
cmc
sbb
jne
cmp
imul
jns
loope
cmp
sbb
push
insl
jmp
addb
pushf
mov
jge
cmp
inc
push
jmp
sub
mov
cli
ds
xor
and
push
xlat
mov
mov
int
lret
push
test
aad
or
cmp
xor
mov
loope
mov
popa
mulb
lock
in
inc
mov
in
xchg
push
sub
cmpsb
cld
jecxz
int
lock
subl
push
jnp
cwtl
aas
popa
lods
jae
pop
inc
fwait
mov
test
mov
clc
subb
lcall
or
sub
ret
xchg
and
or
in
xor
jno
mov
nop
xchg
loopne
ljmp
cwtl
das
xor
sti
test
out
pop
loope
pop
jp
mov
pop
leave
jbe
outsl
push
scas
xor
add
push
or
das
and
int3
push
mov
push
pusha
adcl
ja
mov
fstps
xor
fldt
daa
ja
insb
pop
repnz
mov
cmp
mov
mov
call
ret
dec
inc
jo
cmp
push
add
enter
cmp
xor
mov
test
or
lods
dec
cmc
icebp
in
jl
dec
test
sbb
jo
push
mov
cltd
sub
test
xor
mov
xor
sahf
inc
pop
dec
shll
push
out
outsb
jbe
jno
mov
add
mov
add
bound
mov
pop
imul
or
bound
cwtl
adc
pusha
icebp
fisttpll
test
xchg
jo
shlb
fs
imul
push
sbb
xchg
stos
cmp
jno
add
mov
fwait
dec
and
scas
fldt
jb
pop
sub
lret
push
in
mov
ja
xchg
add
jecxz
rolb
cltd
xlat
dec
inc
ljmp
cld
pop
jb,pt
push
pusha
inc
pushf
cs
and
xchg
push
test
fsub
sbbl
adc
jecxz
or
scas
popf
mov
int3
and
and
loopne
adc
jno
cmp
xchg
xchg
mov
mov
fcoml
jb
or
outsb
imul
in
hlt
test
repnz
int
mov
lds
adc
pop
push
fprem
inc
mov
lds
fnstenv
movsb
pop
repz
sub
test
sbb
push
ftst
mov
test
fcoml
pop
and
mull
push
adc
scas
xor
mov
mov
inc
mov
jmp
lcall
xchg
push
jo
inc
aad
mov
ret
push
out
aaa
mov
ds
mov
out
jns
aaa
sub
icebp
sbb
ja
xor
cmp
cwtl
gs
fsts
sti
add
inc
add
mov
dec
jo
or
push
flds
add
ds
pop
rcll
shlb
push
jle
or
pop
and
fistps
add
add
loop
repz
inc
add
or
mov
sbb
inc
add
pop
scas
fldl2t
into
xchg
xchg
xchg
mov
fisubs
test
mov
mov
das
jnp
aam
out
les
add
add
inc
sub
push
inc
data16
mov
sbb
mov
test
test
add
dec
xor
inc
out
add
nop
stos
adc
mov
and
ljmp
xor
xchg
les
negl
es
addr16
bnd
jb
loope
movsl
mov
or
jg
fwait
xorl
cmp
ficoml
addr16
movsb
rol
hlt
sahf
movsl
mov
mov
pushf
das
sub
addl
loope
aad
or
add
xor
fists
or
je
lcall
mov
insb
or
imul
fs
lahf
insl
xchg
mov
dec
sbb
inc
sub
popf
push
xchg
xchg
lcall
ret
fwait
xchg
inc
ds
push
pusha
dec
cli
push
push
fwait
mov
dec
and
mov
stos
lret
outsb
and
mov
inc
xchg
mov
inc
insl
mov
jno
andb
push
or
add
in
sub
lods
push
sub
mov
inc
movb
mov
popl
mov
arpl
das
fsubr
jno
fwait
das
dec
pop
mov
out
and
fidivs
jmp
cltd
into
jp
sub
push
mov
fmulp
fldcw
pop
cmp
sub
jp
mov
dec
lock
subb
mov
gs
lret
sub
pop
and
movsb
and
xchg
in
icebp
rolb
rcl
cmp
mov
xor
mov
fcoms
lds
and
daa
aad
in
pop
ret
mov
pusha
mov
test
lret
pop
sahf
cltd
cmpsl
sbb
mov
cmp
pop
mov
add
sbb
les
push
mov
out
adcb
inc
jbe
lds
popa
ss
cli
mov
lcall
fsubs
push
insl
dec
repnz
push
jnp
imul
pop
inc
fdivrp
leave
mulb
adc
out
and
xorb
adc
pop
inc
subb
push
xchg
inc
push
sbbl
dec
movsl
idivb
enter
lods
adc
addr16
or
fmulp
dec
adc
jb
scas
cmp
mov
shr
and
lods
ficompl
xchg
popa
pop
loopne
popa
data16
std
das
jecxz
lret
xor
andb
mov
js
mov
jge
push
lds
outsb
xor
and
pop
je
sub
inc
cmp
add
aaa
out
cmp
insl
xchg
subb
mov
mov
jge
loop
out
adc
sub
mov
cmpb
mov
cli
push
mov
jmp
mov
inc
push
mov
int3
mov
xchg
js
sub
hlt
add
stos
aad
xchg
jg
pop
push
into
gs
cli
data16
pushf
cltd
mov
lock
jle
shr
fiadds
mov
jbe
mov
jno
pop
sbb
loope
push
sbb
lahf
cmp
imul
pop
xorl
js
sti
fwait
dec
or
rol
and
ret
mov
push
adc
dec
mulb
jnp
gs
imul
das
enter
sbb
mov
ret
in
xor
cmc
loop
div
mov
xor
sbb
push
mov
xchg
cmp
out
inc
mov
fs
sbb
aam
mov
pusha
in
and
xlat
pusha
sub
add
inc
cmc
faddl
push
fistl
inc
repnz
stc
icebp
adc
shlb
xchg
or
pop
xchg
scas
scas
or
inc
and
ret
dec
dec
push
negb
out
inc
sti
mov
scas
scas
push
cli
inc
pop
cmpsb
cmp
or
xchg
mov
adc
cltd
cmpl
mov
xchg
push
nop
push
arpl
imul
mov
cmp
and
pop
cwtl
inc
add
push
int3
cmp
in
icebp
aam
mov
pop
fst
int3
mov
fstl
and
or
xchg
sarl
push
subb
fwait
mov
jl
push
push
nop
mov
stos
lret
inc
jg
jg
cltd
mov
pop
bound
add
pop
insl
adc
xor
mov
push
jle
add
push
cmp
mov
mov
jge
pop
cmp
lret
mov
push
sub
int
and
jmp
ljmp
xchg
jg
gs
in
mov
jl
addb
sub
cmp
pop
pop
or
icebp
fwait
dec
pop
arpl
inc
hlt
scas
popa
das
stc
sbb
xchg
lods
fsubl
jl
mov
mov
loop
out
mulb
fnstenv
adc
xor
lods
ret
lods
aad
jg
jae
mov
xchg
xlat
xlat
jmp
push
or
adcb
pop
xchg
pop
jge
mov
int3
das
mull
repz
lods
mov
je
dec
ja
fistps
inc
push
add
add
fcmovnu
insl
hlt
mov
lds
icebp
les
and
mov
shll
shl
pushf
repz
js
cmpb
ret
lret
out
int
inc
adc
test
iret
enter
sti
mov
loop
cmp
and
dec
es
mov
sbb
pop
maskmovq
push
mov
mov
into
imul
mov
call
push
lret
cli
iret
adc
mov
push
sbb
insb
jg
je
add
xorb
aad
jmp
pop
pop
fwait
cmp
fsincos
dec
lds
out
ja
jmp
std
insb
push
adcb
ljmp
adc
pop
scas
iret
dec
data16
dec
xchg
int3
cmp
sbb
pop
mov
aad
int
bound
mov
xchg
dec
or
and
xchg
fsubp
mov
cmp
loop
daa
mov
subl
aas
or
or
sbb
lods
pop
repnz
arpl
iret
repnz
cmpb
fidivs
inc
xor
pop
jge
inc
mov
push
fcomip
jmp
jnp
fbstp
repz
mov
add
out
cli
push
inc
pop
mov
out
cmp
adc
add
lcall
and
ljmp
mov
xor
add
cmc
leave
mov
aas
push
jp
push
push
ret
push
xor
jns
jle
push
dec
enter
inc
or
jmp
aaa
mov
xor
aas
inc
out
stc
xor
outsl
dec
sub
push
js
stos
lods
dec
jo
dec
pop
mov
jge
ja
inc
sub
rorb
adc
pop
add
or
mov
sbb
popa
lods
pop
sub
leave
ljmp
in
mov
add
mov
add
repnz
and
ficoml
outsl
loope
adc
mov
out
imul
inc
sbb
mov
mov
out
incb
pusha
jle
xchg
jmp
mov
and
add
cld
je
popa
sbb
in
in
xor
and
jmp
lock
in
out
ret
in
sbb
insl
lea
pop
jl
inc
ljmp
repz
cmp
fistps
shlb
sti
add
dec
outsl
es
xchg
testb
jnp
repnz
dec
mov
sub
fisttpl
int
dec
push
test
ret
daa
push
push
movsb
sbb
fdivr
push
and
jne
push
fisttps
mov
outsb
shlb
dec
sbbb
scas
hlt
and
sub
faddl
dec
cmp
lret
lods
test
cmpl
in
lcall
jnp
mov
cmp
mov
push
mov
std
mov
cmp
mov
popa
and
inc
jmp
inc
cmc
pop
mov
and
and
mov
and
push
adcl
test
adc
pop
test
fnstenv
mov
xor
in
arpl
cmp
outsl
imul
cmp
pop
fstpl
mov
in
or
adc
push
push
test
sub
cmpsl
je
and
pop
aam
adc
in
add
xchg
and
andl
rcrb
cmp
dec
scas
push
mov
cli
int
mov
xchg
cmpsl
outsb
insl
std
out
ror
in
repz
addr16
cmpb
pop
loope
add
pop
es
push
int3
pop
ss
xor
imul
xchg
pop
sar
push
and
lock
jp
dec
xchg
cli
dec
loope
xchg
xchg
test
arpl
sahf
int3
sti
mov
or
jmp
inc
les
add
xchg
cvttps2pi
repnz
test
jge
nop
push
or
xchg
jecxz
js
push
ret
lret
xor
cmc
dec
mov
pop
mov
cmp
and
lret
lods
aaa
test
xchg
movb
pusha
xchg
mov
call
popf
push
cmpsl
mov
mov
pusha
push
push
xchg
dec
cmp
mov
orb
dec
or
cmp
pop
out
mov
jbe
movsl
mov
in
fcomip
adc
adc
in
rcrb
call
sti
mov
mov
dec
xchg
rorb
inc
push
cmpsl
inc
insl
or
xchg
jo
clc
pushf
inc
dec
mov
jp
cwtl
sbb
out
mov
xor
and
mov
inc
daa
xchg
xor
xor
push
cmp
fisttpl
inc
mov
inc
mov
mov
adc
push
pop
mov
in
dec
sub
add
dec
ljmp
mov
fld
clc
add
or
aas
cmp
scas
cmc
popf
lea
cli
mov
inc
jnp
sub
mov
mov
aad
inc
cmp
pop
fwait
popa
stos
icebp
nop
jmp
lret
enter
mov
xor
in
js
adc
loop
xchg
outsb
dec
push
cmp
popa
pop
xor
divl
lahf
sbb
inc
dec
repz
mov
stos
jle
jbe
inc
inc
push
int
inc
roll
cmpsl
xchg
jnp
dec
mov
aaa
sub
test
ret
push
adc
popa
aaa
xor
in
outsb
sub
test
icebp
jp
xor
adc
rcrb
and
stos
xchg
and
lahf
jg,pn
dec
orl
jae
mov
test
xchg
add
jg
loope
cmp
xchg
ljmp
outsl
jnp
push
cmp
cltd
ljmp
fimull
xchg
or
sub
popf
lods
repnz
orl
xchg
aad
inc
dec
test
adc
mov
int
dec
out
sbb
pop
popa
mov
jns
mov
push
repz
sbb
fdivr
mov
xor
bound
stos
stc
faddl
insl
sbb
sub
sar
cmp
xchg
iret
dec
fldl
rcrb
pop
push
mov
mov
aad
push
jle
pop
cmp
pop
cmp
or
pop
inc
push
jmp
imul
movl
add
push
cwtl
stos
fs
js
out
insl
stc
mov
test
jnp
aam
pop
out
xchg
leave
pop
cltd
xor
test
and
movsb
and
lods
iret
lods
adc
int3
mov
sub
lret
jnp
mov
push
fistpl
std
xchg
rsqrtps
mov
pop
leave
add
cmp
aaa
jge
push
enter
mull
jle
cmp
sarl
fists
sahf
jge
xchg
andl
je
xchg
dec
iret
xorb
add
std
add
push
adc
shr
jg
cmp
xor
mov
xchg
pop
xchg
add
or
jmp
movsb
xor
dec
inc
adc
sahf
cmp
out
mov
cs
notl
pop
fwait
mov
pop
clc
jne
lcall
insb
lock
lret
jle
pop
sub
hlt
sbb
cmpsl
in
insl
fs
faddl
int
fstpl
ljmp
sbb
mov
cmp
push
cmp
loop
andl
xor
and
or
adc
and
rclb
push
mov
nop
in
push
gs
xor
ja
jns
mov
mov
addr16
push
jl
cmc
sarl
cmp
dec
in
mov
add
push
and
aaa
add
mov
cmpsb
xor
addr16
xlat
mov
fnstenv
add
jns
add
movsb
pop
loope
or
aam
cmp
insb
xor
mov
insl
test
ja
xchg
data16
and
mov
call
in
daa
rorl
xorl
jno
ja
sbb
lcall
mov
iret
int
repnz
push
jl
daa
mov
mov
inc
jmp
dec
loope
jnp
xor
sahf
jecxz
in
mov
cld
push
shl
aam
call
leave
cmc
adc
aaa
mov
das
jb
cwtl
js
lahf
push
outsb
imul
dec
inc
adc
ficomps
popa
aaa
add
cmpsb
mov
mov
inc
xtest
mov
sub
inc
push
ljmp
push
popa
aas
out
scas
test
bound
mov
push
push
fldl
push
push
addr16
adc
scas
pusha
sahf
in
xorl
sub
jmp
pop
icebp
imul
loop
lcall
inc
into
inc
or
add
test
xchg
sahf
pop
sarl
fisubrs
inc
push
enter
mov
js
or
ss
push
fwait
xchg
dec
jmp
in
leave
gs
and
popf
mov
and
aam
jae
test
in
pop
insl
mov
arpl
mov
mov
jae
aaa
fucomi
sub
repnz
sbb
push
popa
mov
sbb
pusha
fld
mov
push
mov
sahf
bound
push
push
fsubr
xor
inc
es
pop
call
add
xorl
jmp
fwait
mov
jno
xor
mov
push
mov
divl
push
mov
xchg
xor
popf
pushf
adc
mov
cmpsb
test
push
fdivp
sbb
lret
adc
mov
dec
jmp
jge
outsb
mov
or
sub
add
xor
pop
ret
stc
cmc
lahf
insb
int
jno
mov
jmp
cmpsl
es
lahf
adc
sbb
pop
cmp
movl
xor
jmp
push
sbb
dec
scas
and
out
pop
jnp
aaa
sub
aas
jnp
lock
pop
mov
out
sub
ss
dec
or
or
ss
ja
sbb
dec
fscale
sbb
insl
adc
lcall
sbb
and
insl
mov
sbb
cmc
stos
mov
cmpsb
mov
int
jle
mov
mov
pop
fsubrl
notl
mov
xchg
mov
mov
mov
xor
push
loop
mov
mov
lret
inc
pop
jo
in
sarb
out
outsl
call
inc
out
mov
es
mov
dec
inc
pushf
leave
adc
lods
loop
lret
cltd
cmc
inc
cmc
lods
and
jle
pop
jl
adc
mov
sub
dec
or
mov
loop
sbb
adc
add
divl
imull
sub
push
mov
loope
push
inc
out
xchg
mov
adc
js
pop
ja
mov
adc
jae
xor
mov
and
push
mull
or
sti
lret
adc
xchg
call
lret
outsl
repnz
fbld
fisubrs
lcall
pop
pop
pop
loope
pusha
sbb
clc
out
stos
lods
imul
cmp
push
mov
jno
xor
cmpsl
xor
out
outsb
addr16
pop
test
or
dec
pop
lea
or
retw
adc
mov
and
push
cmpb
inc
mov
adc
push
lea
sbb
pop
fs
pop
push
bound
dec
clc
pop
xor
sbb
and
ljmp
je
jle
push
aad
idiv
jbe
jl
ja
mov
inc
pop
imul
dec
lods
loope
js
cmp
inc
dec
sbb
in
roll
and
test
nop
mov
xor
adc
pop
in
cld
inc
lds
sub
inc
rcl
adc
jl
jmp
inc
jne
or
jbe
stc
or
sbb
gs
xchg
call
cltd
or
jg
sbb
jns
insl
mov
push
mov
jp
ret
or
and
adc
sahf
jbe
out
notw
sub
out
add
push
push
and
stos
xchg
and
pop
std
leave
in
lret
lods
stos
dec
lret
movsb
pop
jns
and
cmp
xchg
out
jno
push
xor
lods
shr
loop
std
inc
out
cmp
fwait
aad
in
lds
sbb
sbb
push
ret
adc
push
mov
iret
pop
push
inc
cli
pop
fadd
sbbb
and
xchg
fiaddl
mov
or
shlb
aad
xor
xchg
cli
pop
stos
clc
xor
mov
xor
sub
and
jb
or
out
insb
lcall
xchg
xchg
jne
mov
mov
jl
sub
cs
inc
call
and
adc
test
sbb
outsl
fwait
std
sbb
mov
jmp
ds
mov
test
push
adc
mov
stos
jbe
sub
sub
xchg
cmp
sbb
ror
xchg
jae
and
mov
sarb
sub
dec
and
cmp
pop
mov
dec
loope
scas
push
xchg
jle
mov
xor
fcomip
xor
gs
pop
or
rcrb
mov
mov
and
adc
push
sahf
lock
adc
mov
xorl
xchg
lods
subb
jp
fisubrs
stos
push
xchg
dec
cmp
and
fwait
insb
push
inc
fisttps
pusha
outsl
push
les
pusha
mov
rcrl
cmp
lds
or
repz
ficomps
cltd
jae
jne
xlat
inc
sbb
jns
xorb
inc
push
sbb
jge
in
or
bound
push
jg
or
clc
jne
mov
push
loope
fsubs
xor
mov
push
lahf
ds
mov
rcrl
sbb
cwtl
mov
pusha
repnz
aad
cmpsl
dec
testb
lds
sub
roll
call
fucomip
cmp
inc
cmc
std
fldl
test
cmp
repnz
mov
pop
inc
out
stc
mov
pop
inc
test
add
or
pop
mov
fnsave
push
mov
jbe
mov
jne
adc
jp
jno
sub
add
xchg
repz
dec
andl
xchg
add
jo,pn
stc
cmp
inc
call
dec
mov
mov
ja
jecxz
mov
imul
push
pop
sub
rorl
insl
stc
mov
shll
and
fsub
dec
pop
inc
pop
lret
push
pop
movsl
mov
sbb
mov
jecxz
xor
cltd
mov
push
out
lcall
loope
sub
int3
testl
or
aaa
mov
pop
in
mov
mov
inc
loop
fstps
cmpsb
push
bound
dec
mov
popa
idivb
jnp
lret
dec
cli
xchg
sti
jge
mov
shlb
xchg
movsl
push
ret
rclb
arpl
clc
sub
fcmovne
imul
bound
fstpt
gs
nop
aas
xchg
or
push
mov
int3
stc
mov
test
test
mov
inc
push
int3
fldcw
dec
fdivl
lds
fadds
adc
inc
fwait
lea
mov
jo
cmc
arpl
xchg
out
fldl
in
aaa
mov
cmpb
out
add
outsl
out
inc
imul
ficompl
and
lea
jno
push
cmp
lods
jbe
sub
cwtl
loop
mov
arpl
pop
pop
add
insl
jge
mov
movsb
adc
cs
ret
fimuls
mov
repz
cmp
arpl
lret
arpl
repz
stc
mov
adc
out
mov
cwtl
push
repnz
pop
mov
push
rcll
sub
daa
xorb
daa
ret
cmc
ror
ljmp
cwtl
dec
lret
sti
cld
sub
ja,pn
jecxz
pop
sbb
xor
outsb
aas
push
cmpsl
jbe
test
push
and
cmp
lret
in
inc
adc
mov
push
cltd
iret
fdivl
push
loop
mov
cmp
push
push
lret
mov
mov
lods
subb
lea
mov
lock
clc
add
lods
sbb
sbb
lods
sbb
push
xor
jbe
xor
cltd
pop
push
jo
mov
mov
lret
mov
pusha
mov
sub
mov
enter
adc
push
xchg
mov
sbb
lock
fdivr
nop
jae
lahf
cli
fdivrs
test
insl
mov
or
inc
adc
xor
movb
sub
gs
cli
stos
ljmp
lret
out
pop
and
loopne
and
fiadds
gs
out
jno
lret
orl
shl
add
rcl
movsl
out
or
lahf
mov
divl
clc
dec
adc
or
fcomps
fistps
pop
or
jo
jae
je
sub
lret
push
sarl
dec
rorl
test
clc
in
mov
insb
loope
stos
fs
lock
insb
sub
xchg
jbe
mov
test
jecxz
int
inc
test
enterw
or
jmp
push
jp
mov
sarb
ja
ret
mov
cmpsb
or
imul
xor
imul
ljmp
aaa
xor
fildl
test
mov
mov
inc
or
add
xor
fsubl
jp
lds
sbb
fmull
daa
push
call
pop
aad
imul
scas
mov
cltd
fs
xor
les
ljmp
mov
xor
nop
push
xor
cmp
xchg
push
xchg
push
adc
std
sub
jb
and
sub
ds
stos
pop
xchg
xor
mov
ljmp
pop
cmp
call
mov
mov
mov
lcall
pop
inc
xchg
mov
in
add
fsubl
sub
dec
mov
icebp
dec
and
jns
scas
scas
movsb
inc
mov
inc
push
outsl
xchg
data16
aam
sub
loope
insl
cmp
or
fimuls
cmc
mov
popf
mov
ss
and
jno
mov
les
mov
push
xchg
xchg
in
xchg
movsl
leave
xor
shlb
ficompl
add
push
lret
testl
stos
fstpt
repz
sbb
dec
or
adc
out
aaa
mov
cmpsb
mov
jns
jge
mov
mov
dec
out
inc
cmp
sbb
mov
and
sub
xchg
pop
adc
loopne
lea
add
xchg
sbb
or
xor
sbb
adc
mov
iret
xchg
xchg
jl
or
dec
push
scas
add
repnz
cmp
add
stc
cwtl
cwtl
jno
mov
jmp
adcb
xor
mov
arpl
or
inc
mov
push
xchg
inc
sbb
sub
add
rorl
les
out
push
ljmp
loop
fsubrs
add
scas
fs
rolb
xor
lds
dec
xlat
rorl
jmp
dec
fistps
sbb
adc
gs
sub
adc
pop
xor
jns
jb
out
int3
mov
xor
jae
mov
push
inc
pop
push
in
add
aad
out
push
dec
xor
mov
mov
add
push
fcmovnb
push
shr
test
lret
cmp
and
out
stos
mov
aaa
mov
jp
add
insl
mov
lret
inc
pop
mov
jg
mov
in
dec
pop
or
mov
popf
mov
imul
je,pt
test
push
pavgw
out
lret
les
pop
lret
out
stos
lods
pop
or
cwtl
and
push
loope
jl
enter
or
sbb
ja
es
or
mov
dec
add
rcrb
shl
adc
mov
adc
sub
lods
push
int3
arpl
or
mov
jo
sub
push
mov
sub
dec
mov
sub
loope
cmp
out
cwtl
out
xor
lods
sbb
lcall
push
mov
pop
mov
bound
jle
std
push
stos
repz
adc
cmpsl
xchg
int3
cli
cltd
cmp
mov
dec
xchg
adc
movsb
fiaddl
pusha
mov
mov
loop
imulb
jns
rorl
in
xor
push
cltd
lock
dec
je
sub
pop
add
fists
loope
xchg
test
in
js
xlat
sarl
push
pushf
lock
jnp
fdivs
xchg
dec
dec
ja
dec
in
inc
sahf
mov
sub
sahf
nop
fldt
push
das
cmpsb
leave
mov
or
push
int3
fisubrl
aam
mov
adc
aam
cmp
stc
or
cmpb
enter
data16
in
int3
sub
popa
in
push
shlb
outsl
cmp
shrb
push
sbb
or
in
stos
sti
mov
push
in
push
jbe
jmp
fsubs
cld
cs
inc
inc
pop
jle
mov
neg
retw
inc
dec
or
mov
js
dec
rcrl
pop
loop
sti
pop
std
xchg
jle
push
jmp
cs
roll
out
rclb
mov
cmp
mov
jne
adc
inc
fdivrs
cmc
rclb
sub
inc
lds
out
ffree
fistpl
and
scas
mov
push
inc
sub
sub
imul
inc
or
jg
inc
mov
pusha
das
xchg
popf
jns
out
test
push
and
js
cmc
push
inc
cli
dec
add
cli
sub
inc
mov
stos
cmpsl
addr16
jmp
xchg
sub
icebp
addl
sti
pusha
push
out
xlat
xor
into
jmp
sub
ds
push
xchg
test
out
fbld
sub
stos
cmp
and
add
mov
and
ljmp
in
jp
push
sub
imul
xor
lret
out
test
nop
cmpb
movsb
aaa
rcl
push
add
xchg
push
sarb
cmp
movsl
pop
in
fwait
jne
adc
decl
shll
repz
or
fistpll
lcall
jecxz
or
and
dec
sbb
inc
pop
pop
lret
adc
push
sbb
push
cli
sub
mov
pop
add
in
out
sub
fcompl
out
ljmp
lods
push
popf
add
cltd
insb
or
cli
aaa
cli
imul
sub
jecxz
and
mov
mov
add
add
xlat
sarb
push
inc
xor
mov
sarl
sbb
adc
in
aas
mov
mov
faddl
sbb
lods
xchg
add
in
jnp
rcll
inc
lret
xchg
sbb
cmpsl
push
lods
xadd
outsl
imul
ror
fs
push
dec
loopne
xor
add
xchg
mov
fsubrs
sbb
add
scas
cltd
das
rorl
in
adcb
push
hlt
outsl
mov
pusha
jno
xchg
pop
test
rclb
inc
jae
dec
dec
mov
ret
sub
and
leave
into
pop
sbb
adc
out
mov
or
cltd
rorb
mov
mov
sbb
mov
std
int3
mov
xor
movsl
add
mov
cmp
in
shrb
hlt
add
inc
aam
dec
rclb
outsl
imul
or
add
insb
rcr
xchg
loopne
xor
lods
test
mov
movsl
cli
gs
cmp
fidivs
add
mov
lock
xor
loope
push
pop
push
in
and
fnstcw
shll
sbb
xchg
fistps
jg
mov
and
pop
add
jmp
jp
iret
lret
xor
ljmp
xor
imul
add
jmp
je
mov
cwtl
fwait
aam
pushf
fdivr
mov
inc
in
xchg
and
xchg
idiv
adc
in
ljmp
mov
and
xor
rclb
jecxz
sub
outsb
mov
cli
inc
pop
or
xor
sub
inc
or
das
sahf
data16
inc
fwait
insl
into
pop
inc
xor
and
pop
xor
pop
jg
dec
orl
stos
out
sub
lret
xlat
xor
jp
rcrl
insb
pop
adc
mov
xchg
sub
int3
mov
or
sub
aad
cmp
call
repz
aad
adc
inc
mov
adc
mov
mov
testl
mov
pop
js
mov
int3
and
xchg
mov
pop
xchg
xchg
push
push
lods
add
in
cmp
jp
mov
cmpsl
test
les
jns
adc
mov
inc
out
mov
mov
xor
fst
into
ljmp
sahf
mov
adc
outsb
loop
mov
dec
insb
stc
mov
test
subl
es
inc
ljmp
addb
sahf
sub
lds
push
mov
xchg
ljmp
mov
inc
or
mov
jmp
out
aam
cmp
pop
in
shll
idivb
mov
dec
add
ret
test
mov
insb
xchg
pop
mov
shlb
jecxz
ficomps
mov
sub
mov
addr16
sub
mov
ljmp
jne
sub
pop
sub
jns
mov
popf
test
jecxz
sub
cmpsb
or
dec
cmp
mov
mov
loope
inc
xor
insl
scas
xchg
cli
xor
xchg
pusha
je,pn
mov
jecxz
into
adc
int
mov
fimull
jne
cmp
repz
pop
fs
lret
adc
stc
aam
sub
push
ror
fdivrp
fdiv
lea
adc
push
int3
js
push
lcall
push
mov
popl
mov
dec
movsb
mov
subl
and
sub
enter
pop
push
push
insl
and
out
jbe
ret
pop
jp
mov
mov
clc
inc
cmp
inc
inc
sbb
pop
sub
push
jb
and
std
sahf
dec
add
jns
xor
mov
cmp
sub
jb
and
rcrl
jmp
aas
dec
mov
inc
cmp
push
push
jns
dec
mov
mov
sub
das
lcall
sub
addb
jmp
push
lea
mov
cmc
sub
mov
cltd
lods
daa
lahf
pop
roll
dec
inc
mov
or
jae
jle
stos
push
loopne
mov
fcmove
loope
clc
pop
xchg
imul
lret
fcompl
lret
leave
pusha
repnz
sbb
sti
aas
sbb
push
push
cmp
push
pop
movsb
cmpsb
sbbl
movsb
jecxz
cli
mov
fcoms
xchg
sub
or
push
cmp
imul
repnz
cmpsl
or
imul
dec
mov
leave
push
push
in
xchg
xchg
push
add
into
add
out
push
icebp
mov
icebp
clc
push
insl
movsl
inc
dec
push
and
or
push
shr
scas
sub
xor
adc
shlb
cld
xor
mov
cmpsb
push
jbe
cmp
je
imul
cwtl
frstor
mov
dec
add
push
mov
push
dec
mov
xlat
orl
scas
jl
loop
jge
dec
sbb
jo
xchg
cwtl
sbb
mov
pop
xchg
cmc
mov
insb
push
std
mov
test
mov
cmpsl
inc
xor
lock
leavew
mov
xchg
ja
sub
and
cmpsl
mov
testl
xchg
push
iret
bound
add
mov
sbb
mov
cmc
jno
test
sbb
sub
imul
lret
inc
push
shl
jo
push
mov
popa
cmp
incb
jne
not
sub
lret
loopne
mov
out
in
and
std
hlt
pop
mov
test
adc
dec
ljmp
mov
sbb
cmpb
rorl
push
cmpsl
outsl
jnp
testb
jle
icebp
aad
es
jl
jb
pop
sahf
insl
xchg
imul
lahf
inc
cmp
sub
filds
pop
or
sub
jp
adc
iret
imul
adc
xchg
push
or
pop
xchg
loope
add
lock
popf
xchg
decl
lcall
or
and
mov
fisubrs
xchg
mov
sub
cltd
insb
repz
push
jle
dec
lds
xchg
faddl
pop
cli
cltd
xchg
mov
insb
test
test
inc
add
xor
pushf
arpl
repz
lock
pop
in
insl
cmp
lahf
push
mov
jge
push
test
xor
and
sbb
lcall
inc
jb
jb
jae
xorb
fsubl
daa
hlt
movsl
les
sbb
xor
push
scas
ret
xchg
mov
daa
div
add
mov
cmpsl
dec
lret
arpl
mov
xor
and
addb
mov
in
jns
in
pop
mov
enter
add
fisubrs
out
mov
pop
scas
popa
dec
adc
xchg
cwtl
mov
sahf
aam
push
loopne
xor
in
sbb
pop
mov
shrl
cmp
mov
out
push
cmpsb
into
mov
out
push
push
ret
cmpsl
cld
mov
fmuls
adc
andl
aas
sbb
pop
adcl
aas
sbb
xchg
inc
pop
mov
mov
sbb
imul
adc
or
in
shl
jbe
jns
push
aas
out
insl
dec
pop
in
xchg
mov
mov
mov
out
mov
repz
andb
adc
mov
unpckhps
add
imul
lods
in
jle
gs
mov
and
jnp
mov
add
xchg
and
adc
mov
stos
inc
xchg
or
dec
sbb
fs
ret
push
lcall
std
mov
fists
divb
test
arpl
cmp
dec
mov
push
jle
push
xchg
jne
into
leave
sti
in
xchg
mov
mov
inc
mull
sub
mov
or
dec
xor
xor
xchg
ljmp
jmp
or
out
ret
je
mov
jo
cmp
aad
lods
adc
ret
dec
dec
mov
lock
mov
mov
or
xor
pop
les
lcall
stos
add
push
das
clc
pusha
add
clc
sub
int
shl
int3
inc
sub
lret
jno
shl
sti
push
test
fs
loope
mov
inc
cmp
sbb
lret
sti
mov
stos
fadds
sub
add
lods
xchg
lock
push
fsubrl
push
jmp
int
xchg
inc
dec
sub
add
mov
pop
rclb
jg
enter
xor
push
fnstcw
mov
scas
movsb
in
xchg
mov
cwtl
mov
loop
push
add
jnp
data16
lods
je
stc
mov
fists
cmpsl
loop
cltd
cmpsl
and
rorl
add
sbb
sbb
xor
sahf
das
cmpsb
scas
pop
mov
pop
xchg
sbb
inc
jg
xchg
addr16
mov
push
imul
mov
mov
pop
push
out
sbb
insb
mov
jmp
fbstp
pop
inc
mov
sti
jmp
pusha
add
pop
inc
push
pusha
push
jge
jmp
push
std
sub
xchg
hlt
arpl
fincstp
jl
jecxz
loope
aad
xor
xchg
js
out
sbb
pop
loop
rorb
dec
cli
cmpsb
push
fstpt
addb
test
jns
fwait
jle
jle
xor
jge
jns
fdivs
fidivrl
aam
pop
and
arpl
jae
or
jns
vunpckhpd
pop
push
lret
pop
test
daa
lcall
fbld
es
out
mov
notl
repz
dec
sub
addr16
pop
out
fidivs
int
popa
or
inc
xchg
xchg
mov
xlat
and
cmpsl
les
mov
bnd
cmc
cli
cmp
mov
fstps
mov
sub
cli
call
mov
mov
adc
lcall
ja
mov
insl
int
clc
lock
sub
pop
aad
and
je
sub
popa
and
mov
jbe
pusha
and
mov
push
int
pop
cs
addr16
mov
inc
rolb
mov
add
pop
cmp
scas
mov
and
mov
insl
cmp
sbb
fbld
inc
xchg
cmpsb
and
stos
push
sbb
fs
in
fcompl
jl
push
and
add
jnp
jge
daa
adc
es
in
or
mov
mov
inc
mov
lahf
gs
jbe
in
out
sub
jg
lahf
xchg
cli
jp
cwtl
add
cmp
rcr
cld
push
je
push
fsubrp
cmp
jmp
push
dec
adc
sbb
leave
ds
stos
xchg
push
fsubrs
mov
fdivl
sbb
mov
push
and
cli
mov
popa
dec
cs
in
pop
fcmovne
xchg
pop
rcll
insb
inc
cmc
pop
data16
fcoml
scas
in
ja
mov
aad
inc
mov
push
sbb
jae
in
rorl
in
sub
sub
out
jle
inc
cli
xchg
xlat
jo
pop
inc
xchg
movsb
fisubrl
arpl
bnd
push
out
hlt
icebp
in
push
jp
notb
mov
lock
cmp
mov
inc
add
sub
ret
jmp
loopne
frstor
fwait
cmp
add
test
and
mov
dec
or
popa
adc
jo
jnp
aas
inc
cld
rorl
add
pop
cltd
pushf
mov
push
data16
stos
repz
in
jmp
inc
js
push
mov
sbbb
shll
ret
lcall
jo
je
loop
mov
bswap
in
sbb
mov
scas
es
faddp
popa
add
jne
jle
jg
out
das
jb
pusha
cmpl
adc
loopne
jno
mov
and
sahf
adc
mov
stos
gs
inc
das
icebp
mov
lds
or
or
out
pop
in
mov
ja
popa
or
std
adc
out
aas
push
push
jne
pop
adc
rorl
filds
push
stc
pusha
fistpll
lock
mov
lret
pop
imul
test
sbb
add
fisubrs
or
cmpsl
or
push
mov
jb
and
mov
fdivrs
xor
lods
cwtl
jge
js
mov
mov
test
cmp
jmp
scas
imul
add
add
or
test
adc
or
push
mov
es
pushf
cwtl
add
sub
addl
jno
push
sub
push
and
sahf
ret
imul
push
mov
lahf
lahf
xchg
mov
push
shll
fdivl
imul
mov
xchg
sub
sub
popa
std
or
daa
xchg
fistl
sbb
lods
aam
mov
sahf
stc
adc
mov
xchg
jne
out
xchg
push
ret
jbe
mov
mov
lahf
fisubrl
lods
push
mov
jp
add
rorb
sub
and
in
sahf
cmp
ds
xor
sbbb
es
cmpsb
cltd
imul
jne
adc
rorb
adc
addr16
inc
push
scas
testb
enter
mov
data16
mov
push
dec
pop
mov
je
in
sub
dec
pusha
mov
and
and
iret
fs
arpl
das
cmpl
inc
xlat
and
mov
ret
xchg
and
xchg
xchg
lea
mov
jl
xor
movsb
out
repnz
mov
cmp
pop
rcrb
aam
cmpsl
mov
stos
push
andb
mov
je
ljmp
xchg
cmp
pusha
popf
jnp
dec
push
dec
ds
sbb
sbb
xchg
imul
mov
repz
push
scas
hlt
cmp
pop
jo
rcrb
push
add
hlt
fwait
test
in
push
dec
inc
enter
dec
nop
daa
add
pop
test
mov
or
cwtl
dec
fsts
mov
loop
shl
rclb
bound
add
jae
and
outsb
jmp
out
xchg
inc
stos
dec
shll
xchg
cld
mov
cli
scas
jbe
enter
lods
jns
and
int3
push
pop
xor
or
les
into
mov
pop
jl
lcall
add
jo
in
jne
hlt
mov
loop
or
mov
fwait
insl
add
adc
lahf
sub
mov
pop
test
dec
pushf
and
aas
add
out
jo
adc
jp
rorl
xlat
in
adc
sub
aad
jne
jo
lahf
aam
xor
jp
rclb
lds
into
cs
push
das
shlb
mov
out
jmp
cwtl
adc
xor
mov
push
sbb
dec
in
mov
and
or
adc
shll
jecxz
in
aaa
xor
cmpsl
out
data16
addr16
add
into
xchg
cld
sbb
pop
cmpsb
insl
sub
inc
sub
xchg
movsb
pop
pop
sub
add
je
rcrl
and
add
cmp
add
fbstp
jno
or
adc
inc
jl,pt
mov
sub
pusha
fcomps
jno
repnz
mov
pop
push
mov
rcrl
xchg
imul
aaa
imulb
jno
jns
dec
roll
outsb
int3
stc
fwait
in
sub
add
les
jno
dec
loop
xrelease
mov
inc
add
mov
pop
mov
push
test
dec
out
adc
js
enter
push
push
addl
loop
repz
pop
ljmp
push
out
pusha
popf
cmc
xor
lahf
mov
mov
ret
repnz
mov
mov
shl
lock
add
sti
jns
mov
movsb
push
jle
das
repnz
sub
mov
mov
hlt
aad
or
into
jo
add
push
in
repnz
mov
aam
call
sub
add
push
bound
inc
in
xchg
dec
rorb
movsl
sub
jns
mov
or
adc
aas
mov
sahf
xor
pushf
je
lock
out
xorl
addl
dec
push
push
inc
js
mov
xor
mov
ja
sub
mov
sbb
push
rolb
xlat
fnstenv
icebp
loop
iret
lret
pop
or
mov
test
cltd
clc
pushf
test
mov
inc
gs
leave
das
stos
mov
int3
rolb
test
shl
and
jbe
hlt
jo
das
out
mov
jle
js
std
sbb
xor
mov
imul
insb
xor
lds
pop
xchg
fiaddl
fs
sahf
ljmp
repz
inc
adc
fsts
sub
mov
xor
inc
jmp
jl
inc
add
sub
xor
xchg
add
insb
adc
push
pusha
dec
mov
ret
inc
jns
mov
ret
push
mov
and
ret
cli
sbb
popf
mov
mov
negb
arpl
jge
in
fwait
xor
mov
and
jge
sub
mov
fs
cmp
mov
xchg
sbb
addr16
imul
int
outsl
xchg
push
dec
pop
popa
loope
jne
test
dec
mov
fisubrl
inc
cmp
push
out
cmp
lock
mov
pop
sbb
or
push
push
out
inc
inc
test
xchg
add
cmp
clc
fnstsw
mov
subb
add
adc
xchg
jns
pop
aad
pop
lock
mov
popa
mov
or
cmp
out
xor
and
scas
iret
pop
das
cmp
adc
mov
pop
add
jg
cmp
repnz
xchg
mov
imul
adc
and
xchg
xchg
std
push
ret
loopne
sub
push
xchg
out
jae
sub
pusha
xchg
sbb
inc
jp
es
mov
xchg
data16
sub
pop
into
or
pop
ss
jno
ret
mov
or
imul
xlat
test
sar
jecxz
inc
fcmovnu
mov
out
push
xor
mov
jno
pop
sbbb
addb
sahf
pop
inc
test
xchg
pop
cmpsb
add
cmp
sahf
jo
xor
std
sub
and
cmp
pop
xlat
fcoml
in
adc
inc
movsb
sahf
outsl
adc
xchg
xchg
push
imul
test
inc
fsubp
in
aam
xchg
mov
loop
jmp
and
xor
cli
cmc
out
push
mov
mov
out
xchg
sbb
out
incl
ja
push
lods
icebp
mov
mov
cmp
rclb
fldenv
push
add
arpl
scas
mov
rorl
flds
fimull
adc
cmp
js
mov
sbb
dec
enter
add
jo
in
adc
iret
fadd
jne
mov
inc
test
aas
stos
repz
mov
icebp
arpl
sub
dec
jae
testl
add
xor
add
mov
pushf
mov
sbb
mov
mov
es
fcomps
jb
mov
mov
xor
sti
data16
popf
jnp
xchg
push
add
addr16
mov
sbb
xchg
repnz
mov
dec
jge
data16
mov
cli
dec
shll
dec
add
xchg
movsl
xor
ret
pop
sub
mov
or
xchg
inc
or
pop
and
inc
mov
xchg
inc
lahf
imul
push
xchg
pusha
sub
jne
push
sahf
jns
xor
ds
aaa
sub
int3
push
jge
push
sbb
add
sub
subb
lea
imul
stos
sarl
mov
ss
shlb
or
pop
jo
stc
unpckhps
out
enter
cmc
mov
dec
imull
jecxz
jno
add
clc
stos
xor
mov
hlt
adc
out
mov
cmp
cmpsl
pop
sti
adc
inc
jns
fldl2t
xchg
xlat
inc
mov
mov
movsl
clc
inc
in
enter
jmp
jmp
jecxz
mov
movsl
mov
dec
push
and
das
sahf
in
lcall
mov
mov
or
stc
in
and
inc
inc
loope
push
adc
mov
jb
push
movsb
lahf
ds
xchg
aaa
int3
cmpsb
xchg
fildl
cmp
dec
popf
pop
pop
loope
sub
mov
jmp
or
cmp
icebp
jecxz
xlat
insl
jmp
gs
das
inc
aam
lret
cs
add
lcall
add
imul
lock
movsb
jae
gs
repz
scas
xchg
push
pop
call
mov
lock
add
cmpsb
aam
clc
mov
fldl
imul
pushf
iret
lea
or
pusha
sub
ljmp
into
lahf
xchg
ss
inc
inc
sbb
lahf
aad
mov
jae
in
fs
adc
dec
pop
cmpb
sub
mull
popf
push
fstpl
xchg
xor
inc
mov
mov
aaa
test
xchg
push
dec
rcrb
sahf
shll
outsb
add
lret
pop
cmpl
mov
sbb
fldt
dec
cltd
je
test
fldenv
lods
int
lret
mov
jno
jg
hlt
add
dec
cmp
mov
pop
hlt
xor
out
pop
jge
push
push
mov
xor
imul
pop
sbb
fsubs
outsl
fcoms
dec
or
xor
mov
mov
fidivrl
imull
push
sarl
mov
lahf
aam
movsb
pop
lds
sbb
nop
mov
adc
test
es
stos
sub
sbb
inc
push
xchg
cli
and
sub
cmpsl
into
add
scas
repnz
pop
fchs
imul
cmp
out
mov
pop
jbe
cltd
cltd
mov
loope
js
fisubrl
pop
adc
jb
mov
inc
daa
inc
mov
sar
roll
adc
sbb
test
xchg
ret
daa
pop
inc
jmp
sarl
movsl
clc
cmp
xchg
lock
lods
pop
xacquire
push
xchg
sub
and
inc
loope
in
mov
xor
fisubl
lods
push
xor
fidivs
mov
add
jg
les
cwtl
outsb
outsb
push
mov
mov
mov
in
icebp
cmp
push
loop
lock
push
jl
mov
add
adc
add
js
andl
and
jns
stc
dec
xchg
mov
in
mov
pop
inc
ss
mov
inc
ljmp
int3
pop
xchg
pop
mov
jmp
mov
pop
xchg
aaa
nop
inc
jge
or
and
add
mov
xor
stc
ja
test
add
jmp
or
add
int
or
xor
gs
push
inc
movsb
push
in
loop
arpl
ret
pop
aad
xchg
xchg
cmpb
dec
jne
xor
lret
ret
push
inc
and
xchg
mov
jns
xchg
inc
pop
push
mov
inc
cmp
and
in
mov
ds
arpl
fsubrl
movsl
in
cmp
pop
push
pop
test
mov
pop
cmp
inc
xor
stos
or
shl
out
pop
mov
sbb
xchg
mov
lock
mov
aas
stos
lret
gs
lock
mov
mov
les
sarl
fwait
cmp
shl
jge
mov
and
lret
stos
jle
sbb
jge
shrb
sub
dec
inc
inc
call
ret
or
mov
in
mov
rclb
pop
mov
pop
inc
mov
fisubl
loopne
pop
dec
or
fstl
inc
lock
adc
cmp
cmpsl
jmp
enter
mov
arpl
lret
in
inc
lea
lock
lock
mov
mov
xlat
cmp
add
pop
mov
xor
sub
xor
cltd
dec
dec
push
ds
mov
jne
xor
imull
repnz
daa
std
leave
push
repz
sub
adc
ret
cmp
mov
inc
cmp
enter
clc
imul
pop
daa
jmp
jp
fwait
and
sub
mov
outsl
cmp
xor
inc
ss
or
mov
das
xor
sbb
aas
movsb
loopne
inc
test
dec
and
outsb
mov
sbb
jge
mov
test
push
repz
push
sub
cmp
mov
incl
push
adc
sub
ficomps
cmp
fcoms
insb
psubq
pushw
aam
sub
mov
out
push
lock
cmp
mov
out
sub
notb
xor
or
lahf
add
xchg
dec
in
push
xchg
pop
or
stos
iret
push
push
test
mov
call
sub
out
test
pop
js
add
xchg
and
das
cltd
adc
jb
and
loopne
jge
pop
sub
push
xor
imul
sub
mov
stos
ljmp
ja
loop
insl
adc
sbb
ret
ja
cmp
sub
fcompl
xor
push
cmpsl
movsl
test
movlps
inc
rcr
cmp
and
lcall
mov
insl
push
ja
sub
sbb
outsl
mov
ljmp
jnp
mov
mov
jne
aam
jae
call
in
popf
mov
inc
lret
jp
add
inc
pop
cmpsl
inc
outsl
test
rcrb
test
je
cmpsl
adc
sbb
cltd
in
test
stos
mov
dec
cmp
mov
movsb
mov
jmp
cmp
pop
hlt
shlb
lret
jne
imul
cmp
xchg
sbb
lret
in
and
sub
adc
repnz
xchg
imul
shlb
xchg
mov
ljmp
xchg
fdivr
leave
out
setp
ja
scas
inc
inc
pop
int3
rcrl
mov
add
pop
sub
add
into
adc
xchg
mov
enter
sti
or
inc
mov
dec
and
js
int
xchg
pop
lret
mov
pop
testl
pop
mov
inc
pop
xchg
shll
stos
adc
mov
xor
jmp
lahf
pop
insb
js
push
xchg
adc
fsubrl
add
sbb
test
lods
pop
cmpsl
lret
ljmp
pop
jne
adc
cmp
dec
in
pop
push
adc
test
ljmp
loopne
test
xor
sub
jecxz
stos
inc
mov
sub
and
jl
int
inc
stos
sbb
cmp
jmp
adc
inc
mov
inc
int
and
jmp
repnz
dec
jns
or
dec
mov
orl
jnp
mov
xor
sub
mov
mov
repz
sti
inc
dec
lret
out
push
scas
test
xor
pop
out
sub
out
adc
ss
decb
inc
and
test
mov
out
xor
pop
add
daa
xor
and
addr16
iret
pop
dec
jb
pop
fsubs
push
xor
mov
add
jecxz
and
mov
fmuls
sub
cs
movsl
mov
test
popa
mov
sub
mov
jb
inc
mov
cltd
mov
dec
sbb
push
in
sub
pop
in
mov
dec
pop
mov
and
mov
sbb
cli
outsl
sbb
sbb
loop
inc
int
popa
lods
and
insb
lret
in
mov
popf
scas
sarl
mov
addr16
dec
cmp
fldenv
dec
push
fmuls
add
or
fnstcw
popa
dec
rclb
shrd
out
inc
mov
pop
add
or
pop
outsl
sub
addr16
incl
sub
add
xor
out
lds
sub
icebp
xchg
pushf
fs
add
sbb
pop
fwait
bound
stos
outsl
rcrl
decl
jp
xor
lret
mov
lahf
add
in
clc
dec
mov
and
int3
lock
cmpsb
lcall
ja
cmp
cltd
int3
inc
ret
inc
sbb
cmp
mov
inc
movsl
jne
ss
lret
and
pop
mov
mov
mov
lods
in
mov
addb
adc
or
xlat
push
push
adc
xchg
mov
and
push
stos
imul
xchg
sbb
mov
pop
xorb
jno
ja
jmp
stc
loop
mov
loopne
nop
jg
pop
jns
js
jg
push
lods
ljmp
or
inc
or
js
cltd
sbb
das
aaa
jo
add
cmpsl
sbb
inc
movsb
xlat
movsb
dec
loope
in
and
out
outsl
sahf
insl
sub
stos
pop
adc
mov
js
fmull
pop
repz
enter
shlb
inc
push
inc
mov
pop
std
xchg
jl
jo
ljmp
clc
adc
dec
sarl
dec
cmp
sahf
fdiv
dec
stos
adc
loopne
pop
sub
push
adcb
sbb
push
sub
or
add
sub
jb
cmp
xchg
sbb
outsb
sub
xchg
inc
cmp
mov
xchg
jl
or
scas
push
dec
outsb
cmp
lret
call
cs
sti
dec
scas
int3
adc
push
call
push
movsb
cmp
bound
call
inc
insl
hlt
add
push
imul
notl
push
test
pop
arpl
add
les
push
pop
jb
jmp
or
lahf
inc
inc
dec
add
jecxz
and
push
push
cmpl
fidivs
mov
shll
test
nop
add
pop
push
xchg
mov
gs
xchg
cmp
pop
xchg
push
lds
dec
adcl
mov
xor
adc
arpl
fwait
ret
fwait
push
xchg
out
fs
cld
xor
addb
cmp
xlat
mov
daa
cmpsl
xor
inc
mov
xor
in
xor
loop
jg
in
pop
cmpl
cmp
xlat
enter
inc
or
jge
imul
push
fimull
outsb
shlb
mov
sub
dec
ja
sub
adc
iret
insb
xchg
xor
jle
lret
out
and
push
xchg
pop
jp
lret
ror
adc
dec
ret
and
test
mov
cmp
xchg
in
cmp
sahf
pop
cmp
adc
rcrl
jp
bound
andb
mov
push
mov
add
mov
cmp
bound
mov
je
cli
aaa
daa
fistpl
sub
rcll
or
mov
mov
mov
cmp
cmpsb
jb
push
or
or
filds
popf
push
in
enter
aad
les
js
adc
inc
ja
fnclex
and
out
in
dec
push
mov
cwtl
out
iret
cli
dec
sub
outsb
jnp
xchg
outsl
adc
insb
fwait
std
add
push
dec
cs
lahf
testb
mov
jg
movsl
sahf
ja
outsl
mov
imul
xor
sbb
out
cmp
mov
lcall
jmp
and
cltd
imul
test
xor
push
sbbb
sub
xlat
pushf
arpl
test
aam
mov
roll
insb
and
sbb
scas
push
push
stos
addl
cld
sub
vmwrite
roll
sti
cwtl
adc
push
sbb
sub
push
and
push
jle
mov
xchg
mov
add
jl
mov
icebp
ds
adcb
sub
cmc
out
daa
sti
dec
adc
jge
push
push
or
push
push
jne
jmp
icebp
fisttpll
sub
xor
inc
pop
push
inc
add
call
insb
ja
sub
aas
push
cmp
dec
fistps
fists
hlt
hlt
mov
sub
rolb
mov
cmp
add
es
repnz
mov
dec
mov
mov
sub
icebp
aad
fs
std
icebp
inc
mov
insb
movb
into
cmp
add
adc
inc
insl
enter
testb
jg
xor
jecxz
or
cmp
mov
cmpsb
scas
fnstcw
repz
adc
fwait
ret
xor
mov
dec
jns
neg
ds
inc
aam
jge
and
aam
loope
xor
dec
repz
outsl
or
jp
icebp
inc
or
push
inc
inc
pop
inc
ffree
frstor
jp
test
push
jmp
mov
cmpsl
add
push
or
push
insb
pop
mov
es
and
fcompl
jge
sub
inc
inc
pop
ret
cmp
lret
adc
sub
jmp
pop
into
addr16
xor
xor
dec
push
call
cmp
int3
in
rcrl
xchg
mov
jg
dec
gs
sbb
push
mov
in
lods
shrb
daa
ret
or
xor
pop
scas
inc
enter
sub
imull
leave
cmp
cli
fdivl
fmull
aam
sbb
push
leave
movsb
stos
je
push
push
clc
rcrb
in
and
test
mov
push
mov
push
lock
test
pop
push
int
add
shlb
out
bound
push
scas
sbb
loopne
int3
xchg
imul
cld
push
pop
cltd
test
arpl
cltd
movsb
hlt
insl
dec
out
xlat
mov
imul
cwtl
or
jmp
imul
cs
ss
inc
iret
shr
loope
loop
push
daa
mov
add
mov
mov
pop
call
pushf
pop
sub
sti
andb
pop
cmpsb
fld
pop
in
jno
testb
aam
xchg
push
mov
cmp
inc
mov
repnz
jge
ret
sbb
ds
lret
dec
dec
push
xor
sub
bnd
mov
pop
leave
aas
jg
aaa
jl
sub
lea
xlat
mov
insb
movsb
fs
aas
push
adc
jne
push
cmp
dec
jb
push
test
les
sub
jmp
in
rclb
mov
inc
push
add
cmp
xorb
popf
inc
jp
xor
mov
repnz
mov
rcr
sub
out
or
inc
push
inc
cmp
icebp
sbb
xchg
into
sbb
cmp
xor
sub
fimull
xchg
lea
aaa
add
lods
and
adc
jae
imul
fstpl
inc
mov
outsb
sbb
popa
xor
loope
mov
sbb
les
pop
mov
mov
xchg
add
mov
decb
mov
fistpll
adc
jge
loope
out
iret
ss
push
cmp
in
cmp
enter
sti
push
jne
das
mov
out
sub
mov
stos
adc
push
jne
push
and
jge
sub
xor
mov
in
paddsw
cs
sbb
les
subl
test
sbb
xor
pop
mov
mov
sbbb
loop
fs
rcll
xlat
push
outsl
fwait
sbb
std
adc
mov
ror
fsubr
into
cmp
xor
mov
aaa
loop
adc
dec
int
xor
fmuls
pop
dec
mov
or
arpl
inc
adc
jp
mov
or
sub
mov
fdivrp
sahf
js
sarl
xchg
ja
in
insl
push
mov
jl
jle
out
adc
stc
out
sbb
sub
movsl
xchg
out
mov
and
cmp
insl
movsl
adc
movsb
jbe
addr16
cmpsb
inc
adc
inc
or
aas
repz
mov
in
pop
pop
mov
mov
pusha
lea
mov
loopne
or
jl
enter
or
mov
push
stc
test
movsl
push
push
lahf
int3
mov
mov
lret
mov
test
test
divl
stos
lcall
fwait
dec
sbb
pop
sub
adc
andl
test
les
lret
mov
mov
ds
sub
mov
jg
or
call
out
js
bound
jns
in
call
roll
fistps
push
into
add
or
add
adc
outsl
sbb
pusha
lcall
pop
inc
jmp
repz
into
dec
pop
scas
imul
inc
es
mov
jbe
xchg
movsb
out
call
jle
test
imull
or
xor
or
pop
and
fcomi
dec
aaa
xchg
and
rorl
sub
push
push
cmp
inc
inc
mov
sub
dec
arpl
loope
inc
js
std
xchg
push
popa
and
mov
sbb
pusha
lret
mov
into
flds
sbb
mov
cmp
sbb
fnstsw
pusha
adc
dec
xor
xor
dec
sti
ljmp
jno
fwait
add
sahf
mov
cld
cs
rorl
es
xchg
jle
lods
mov
loope
dec
stc
xor
mov
jl
pusha
dec
cmp
sbb
repz
scas
push
test
add
push
push
fimull
insl
loop
xchg
lock
int
cmc
mov
mov
mov
in
lock
mov
stc
mov
adc
jl
mov
push
xor
mov
hlt
sbbb
fmulp
cmp
dec
cli
or
test
add
test
sbb
jns
ljmp
cwtl
mov
mov
and
repz
add
xchg
push
push
into
inc
inc
mov
not
insl
cli
add
pop
add
aam
add
hlt
std
loope
jl
xchg
xor
outsl
cs
hlt
nop
mov
test
xor
inc
pop
cmpsb
fwait
insl
imul
mov
js
fs
test
enter
cmp
dec
or
and
dec
dec
jae
ljmp
addr16
loopne
dec
jno
js
mov
outsl
insb
cmp
push
inc
lahf
repnz
inc
add
stc
fstpt
lret
test
sub
cmp
testl
inc
fistps
and
lcall
inc
call
loope
xlat
cmc
stos
add
inc
jl
xchg
jb
and
scas
sbbl
sub
test
pop
cwtl
cmp
scas
push
fidivrs
stos
add
xchg
xchg
imul
sub
sarb
jl
adc
cld
pusha
push
cli
mov
sub
clc
pushf
cmp
adcb
jno
mov
adc
push
and
out
lahf
add
adc
rol
gs
pop
jle
imul
mov
bound
sub
jne
or
mov
cmp
xchg
push
sahf
es
sub
inc
inc
rol
aad
arpl
push
jmp
xchg
adc
sub
jns
inc
sbb
sbb
lods
cs
sbb
mov
fisubs
pop
mov
or
movsb
mov
inc
or
ljmp
test
in
push
mov
ss
push
dec
cltd
pop
shll
xor
pop
or
repz
jo
data16
int3
mov
ror
jbe
push
lret
xadd
inc
sarb
nop
outsb
movsb
iret
test
cmp
cmp
and
sub
imul
or
jl
mov
js
push
into
inc
fs
mov
lods
in
xchg
loopne
xor
data16
stos
repnz
popa
mov
sub
lcall
aaa
popa
sbb
sbb
loope
adc
fisubl
pop
add
lods
std
push
pop
int3
jne
xlat
inc
cmp
mov
ficoml
xchg
icebp
stos
push
jns
hlt
mov
mov
mov
jnp
cmp
pop
dec
inc
xor
mov
leave
inc
mov
sarb
xchg
in
cmc
or
dec
aas
mov
adc
dec
mov
pop
aam
ds
mov
out
xchg
fdivs
cmpsl
int3
ds
inc
cmp
push
fistl
ja
jb
cltd
cmp
adc
xchg
std
or
sarb
lret
out
pop
dec
xchg
sbb
scas
push
add
xchg
cltd
aaa
and
test
loopne
fwait
sbb
dec
ja
sbb
das
and
sub
insb
jae
enter
leave
xchg
pusha
jae
mov
sbb
orb
push
je
hlt
push
adc
rolb
test
xchg
ret
mov
adc
lret
mov
cmp
inc
arpl
stos
inc
xor
cmp
cmp
sbb
add
mov
cmp
xor
and
add
je
jbe
adc
dec
pop
adc
mov
sub
bound
jg
flds
mov
sbb
clc
xchg
fsubrl
push
sub
push
gs
xchg
lds
mov
dec
adc
loopne
cmp
into
and
add
pop
pushf
inc
cmpsb
loop
cwtl
fisubl
or
mov
rclb
push
stos
cwtl
imul
jmp
sub
test
aaa
fs
xchg
daa
aam
mov
jnp
jle
cmc
dec
jl
inc
xor
adc
push
movsl
gs
repnz
rclb
push
mov
rcl
leave
in
xchg
sub
cmc
fldt
repz
push
cmp
xor
loopne
fidivs
mov
mov
xchg
xchg
pop
xchg
lock
pop
and
in
add
int
mov
xchg
leave
sahf
sub
jne
mov
in
inc
arpl
ljmp
test
or
sarl
xchg
jmp
lcall
test
fwait
movsl
push
inc
mov
and
rcr
adc
ja
dec
out
icebp
add
psubb
sbb
or
pop
xchg
ljmp
decl
pop
dec
and
hlt
pushf
ss
insl
filds
mov
push
xor
stc
fmull
pop
xchg
mov
fcoms
loop
inc
leave
out
jb
push
ret
push
pop
pop
push
push
inc
popa
out
mov
xchg
sbb
rol
push
aaa
leave
dec
push
xchg
pop
mov
xor
dec
dec
cwtl
mov
adc
out
into
pop
inc
push
ss
cmc
insl
in
pop
test
jp
mov
int3
aad
mov
jmp
dec
loopne
cld
xchg
add
pop
inc
clc
or
enter
adc
cmp
popf
mov
and
adc
fimull
xlat
add
ss
mov
jle
std
test
mov
das
inc
sbb
scas
xchg
cmpsl
fwait
lahf
cld
movsb
stc
jmp
fbstp
popf
in
mov
adc
dec
cli
or
pusha
daa
mov
jns
pushf
cs
push
push
xchg
jns
or
push
cmpsl
inc
and
xchg
out
sub
ljmp
adc
or
add
stos
cmp
mov
or
push
daa
pop
add
daa
cmp
xchg
jnp
pop
bound
popf
dec
or
and
mov
adc
pop
inc
test
lcall
push
enter
cmc
pop
and
mov
sub
popa
jno
dec
adc
add
cmc
loop
push
loop
mov
out
shl
lock
mov
push
dec
xor
push
jp
ret
dec
shll
aam
mov
ss
lods
fiaddl
fsubr
outsb
nop
mov
dec
leave
test
or
and
mov
ja
jns
or
xchg
or
add
mov
lahf
orb
jb
cmp
dec
nop
jne
xor
xor
addl
cmp
jbe
int
push
add
lea
push
dec
out
jne
jne
jl
and
ss
mov
xchg
test
sbb
loop
add
jg
sub
in
sbb
sub
sub
push
repz
pop
aaa
call
xor
es
loope
mov
data16
lcall
test
xor
xlat
ss
gs
xor
pop
mov
push
jo
cmp
cmpsl
xchg
xchg
in
pop
pop
inc
mov
js
mov
mov
daa
imul
or
pop
data16
sbb
lret
jge
sub
test
ret
testb
in
sbb
rclb
cmp
sub
push
arpl
add
sbb
out
in
pop
sub
mov
jnp
icebp
ljmp
xchg
test
test
xchg
add
mov
repnz
inc
clc
shll
dec
jns
mov
and
xor
add
shlb
test
int3
mov
xor
inc
out
movsb
sar
cmc
xchg
mov
cld
push
imull
push
and
or
xchg
xchg
fldenv
cwtl
in
cmp
aad
pop
leave
push
cltd
mov
imul
sarl
pop
popf
lock
xlat
pop
mov
dec
je
sub
packssdw
xchg
mov
push
hlt
fstpt
insb
sub
lods
sub
xor
iret
jo
push
daa
sahf
xchg
scas
adc
js
inc
adc
mov
stc
pop
mov
lock
lock
inc
stc
cmp
jae
mov
sbb
jne
lds
fsubrl
xchg
mov
pop
and
aad
inc
mov
or
mov
xor
xor
add
dec
jge
push
popa
and
or
add
clc
lea
adcl
or
inc
mov
xor
xchg
pop
je
mov
pop
jnp
fdivr
int3
bound
pop
xchg
fisttps
fisttpl
mov
scas
sub
xor
adc
jae
aam
add
adc
sbb
sbb
dec
out
mov
push
popa
inc
jle
sub
push
add
cmp
movsb
push
push
aas
and
test
ljmp
push
pushf
andl
ljmp
andl
inc
cmp
add
push
push
xchg
sub
shrl
aam
mov
or
fsubrl
pusha
push
jnp
jbe
je
mulb
in
xchg
fwait
xchg
lahf
mov
test
pop
add
push
adc
imul
jns
sub
aaa
xchg
fwait
pop
or
mov
sub
fstl
push
mov
mov
mov
mov
out
in
cmp
call
mov
arpl
aad
hlt
rorb
jl
out
push
mov
aas
jp
cmp
jl
sub
ss
and
imul
jo
js
es
adc
lcall
ja
or
outsb
iret
jae
fldt
repz
pop
jbe
aam
mov
or
aaa
cmp
out
call
mov
orl
and
mov
or
ds
xchg
inc
push
xor
inc
leave
adc
bound
cmp
sub
lcall
mov
mov
inc
adc
xor
fcoms
aam
sahf
inc
outsb
pop
nop
and
mov
push
std
cmp
jb
add
mov
lret
xchg
rcll
bound
or
out
and
adc
out
ds
push
inc
lret
test
outsl
or
lea
mov
sub
pop
ret
push
and
mov
cmp
incb
or
and
mov
test
and
mov
outsl
sbb
es
sub
xchg
xchg
cmp
test
hlt
adc
cmp
pop
stc
lds
xchg
fcomp
add
push
or
jbe
mov
aad
jns
ret
out
leave
inc
out
lahf
lock
lock
and
mov
mov
push
std
hlt
cmp
jmp
inc
repnz
mov
in
push
jecxz
movsl
mov
pop
and
je
data16
mov
mov
pop
loop
andl
add
int3
mov
push
cmc
sub
lret
insl
int3
push
mov
mov
dec
xchg
aad
xchg
mov
add
lret
sbb
mov
fdiv
lods
ljmp
sub
push
ljmp
cmc
aas
add
ja
cli
dec
mov
inc
repnz
mov
inc
xchg
bound
mov
jmp
xchg
out
lret
push
fdivl
inc
int3
fisttpll
inc
pop
jl
pop
xchg
cmp
fmull
and
rcrl
popa
or
outsl
stos
and
pop
dec
jb,pt
fisttps
inc
mov
mov
out
lret
add
mov
sbb
add
mov
fsts
jge
lods
fmul
jp
popf
daa
or
out
enter
or
pop
mov
outsb
jg
test
sbb
out
stos
sub
aam
dec
into
cwtl
out
dec
jge
ja
mov
in
repnz
mov
pusha
cwtl
xor
lods
or
fcomip
js
ficomps
and
fimuls
or
ljmp
xchg
loopne
mov
addl
stos
fstpl
jns
clc
xchg
repnz
mov
push
jecxz
xor
jne
in
jge
fidivrl
push
jmp
mov
push
xchg
ja
mov
enter
loope
push
fldcw
mov
jb
test
xchg
jle
out
lahf
out
pop
sub
xor
sub
inc
xchg
out
jns
jge
sbb
jmp
addr16
push
out
int
push
push
xchg
aam
sub
lods
xorb
push
pop
jnp
push
xchg
cmpsl
jecxz
lret
sub
inc
jle
push
mov
pop
pop
ja
mov
mov
or
mov
stc
inc
xchg
cmp
mov
fcomps
stc
or
push
je
inc
outsb
sub
cli
add
test
mov
imul
push
imul
adc
mov
sub
mov
iret
leave
push
sub
adc
cmp
rcr
out
inc
addl
jl
ss
mov
rcll
fs
aad
aas
and
cmpsb
jp
dec
mov
repz
cmc
mov
push
flds
pop
bound
sub
insl
cmp
dec
inc
fdiv
mov
scas
push
jb
roll
subl
pop
subb
in
stos
xor
daa
jmp
nop
imul
loop
mov
push
idivb
or
test
jl
jge
sub
and
int
dec
cmp
test
inc
mov
pusha
in
fidivrl
adc
mov
adc
mov
push
dec
inc
ss
dec
cmp
cmp
push
cmp
push
outsl
popf
inc
sbb
popa
lret
out
or
ljmp
mov
je
jno
test
hlt
add
adc
pop
bound
cld
adc
xchg
out
pop
mov
iret
icebp
xor
push
iret
cmp
daa
inc
insb
icebp
and
cmc
sub
roll
add
or
jle
jo
mov
repnz
test
stos
inc
ror
dec
es
aad
and
xchg
into
popa
out
mov
add
jbe
decl
mov
scas
mov
les
mov
or
rcll
scas
mov
xor
sub
xor
cli
fldl
add
pop
mov
push
shl
ficomps
loope
clc
ss
repnz
out
xor
lea
push
loopne
jmp
call
lret
push
ss
mov
xchg
or
je
push
inc
mov
lea
jne,pt
scas
out
mov
push
push
cmpl
push
cli
push
mov
mov
mov
fsubs
xchg
dec
sbb
jno
ret
push
or
movsb
dec
adc
and
sbb
aad
push
pop
mov
adc
push
imulb
push
aaa
int3
jle
fisttpll
sub
lds
dec
inc
fnstsw
and
push
adc
mov
test
pop
xchg
push
fisubrl
inc
inc
hlt
fadds
fisttps
fdivl
test
and
xchg
sub
ds
mov
movl
sbb
pmulhuw
fadd
pop
mov
push
jnp
add
inc
xor
adc
rolb
add
cmp
pop
mov
mov
sbb
xlat
fcom
push
pop
inc
push
mov
aad
cltd
pop
loopne
sbb
sbb
mov
mov
outsb
adc
xchg
mov
lds
icebp
jno
arpl
and
add
test
shrl
loop
shll
and
xor
call
mov
xor
mov
jl
xor
repnz
mov
pop
sti
add
stos
jbe
push
cmp
cmp
xchg
hlt
aaa
nop
inc
stc
mov
pop
mov
call
push
push
cli
dec
sub
ljmp
lahf
cli
test
xor
adc
scas
push
and
int
fcoml
push
cmpsb
sarl
pop
push
in
adc
dec
push
outsl
call
mov
xchg
sti
test
test
cwtl
shl
mulb
cmp
fdivrp
sub
pop
outsl
mov
mov
jb
mov
testl
fnstsw
rolb
test
sub
js
orb
add
adc
add
loope
inc
inc
shr
out
cmp
and
loope
rcrb
or
add
push
pop
cmpb
loope
mov
cwtl
mov
movsb
popa
add
int
cmpsl
test
pusha
in
push
lock
pushw
xchg
jg
test
addr16
mov
cmpsl
movsb
pop
addr16
mov
xchg
iret
pop
pop
mov
inc
push
mov
cmp
jecxz
pushf
dec
xchg
dec
dec
movl
cld
jbe
cs
rcr
adc
sub
mov
daa
fmuls
iret
aas
sub
shl
insb
dec
test
inc
shrb
mov
or
dec
imul
fsts
fs
leave
mov
test
xchg
pop
lock
or
lock
loop
sub
stos
push
daa
push
imul
loope
sub
loop
push
pusha
cmc
fbld
insb
fbld
or
add
mov
in
xor
pop
jnp
popw
call
aad
ss
inc
repz
out
or
push
push
lahf
adc
and
xchg
mov
rcrl
imul
mov
mov
sub
jnp
jle
stc
or
rorl
dec
push
fcmovu
cwtl
push
mov
push
notl
add
aaa
inc
dec
jne
popa
pop
or
pop
push
sub
je
add
add
je
xchg
lea
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
or
testl
add
add
xchg
ja
add
add
add
add
sti
sti
sti
sti
add
add
add
add
mov
add
addb
incl
incl
dec
int3
int3
inc
ja
cmpb
add
add
inc
ja
mov
mov
add
dec
int3
int3
inc
inc
orb
js
add
dec
int3
int3
inc
inc
orb
js
addb
int3
int3
add
inc
mov
ja
ja
mov
add
clc
mov
pop
add
mov
xchg
mov
inc
add
add
add
mov
xchg
add
js
xchg
mov
js
mov
pushl
mov
add
add
jo
int3
int3
int3
js
add
add
lock
int3
int3
js
add
add
addb
or
int3
int3
int3
js
add
add
add
popl
int3
js
add
add
add
popl
int3
js
add
add
add
popl
int3
js
add
add
add
popl
int3
js
add
add
add
popl
add
add
add
mov
add
add
add
ja
ja
ja
ja
addb
add
add
or
clc
addb
add
add
add
ja
jg
add
add
add
add
mov
mov
add
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ud0
add
js
add
ja
add
add
or
ja
clc
mov
or
inc
or
js
orb
or
js
pushl
mov
or
mov
js
or
add
add
add
int3
int3
iret
addb
add
in
int3
iret
addb
add
add
jo
ja
ja
add
add
ja
ja
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
or
ss
cmp
sahf
inc
mov
outsl
test
mov
imull
loop
dec
pop
push
popf
jne
out
es
sub
leave
cs
mov
pop
out
add
push
fcmovnb
dec
and
pop
cld
and
xor
mov
cmp
xchg
jl
adc
push
and
enter
repnz
rcrl
sbb
outsl
mov
jns
jne
inc
jo
cmp
iret
add
adc
lds
push
adc
cmpsl
pop
test
insb
aaa
sti
xorb
frstor
sbb
dec
sub
fs
mov
mov
test
xchg
movb
fcomp
test
and
bnd
sti
jns
mov
or
dec
and
subl
movsl
cmp
imul
jno
jmp
ljmp
pop
jge
jle
mov
cmp
enter
xor
mov
mov
push
mov
and
std
int3
xchg
push
cmp
cli
cmp
outsb
push
ret
push
adc
mov
pop
movsl
hlt
add
dec
and
inc
cmpsb
in
jns
shlb
cld
cmp
aaa
or
push
insl
out
pop
mov
cmp
idiv
into
arpl
cli
jne
orb
lahf
lret
xor
jmp
pop
jb
pop
push
ja
test
and
push
or
jg
adc
push
jo
jo
xchg
sub
or
pop
aaa
fisttpl
cmp
fcmovne
lock
pop
mov
jno
je
jbe
mov
dec
jmp
inc
lea
mov
mov
int
pop
sahf
push
test
repnz
push
clc
inc
push
cmp
mov
mov
push
or
in
or
inc
int3
jne
push
or
decl
jp
dec
xor
and
jbe
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
push
inc
pusha
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
lcall
add
add
add
add
add
bound
xor
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
jae
je
jb
jns
and
inc
add
add
add
and
push
add
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jb
add
add
add
add
add
add
js
add
add
add
and
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
mov
add
add
sbb
add
sbb
sub
and
xor
xor
xor
xor
xor
jb
popf
xor
icebp
xor
loop
jmp
aaa
xor
cmp
dec
aaa
mov
shll
aaa
loopne
ljmp
cmp
cmp
pop
cmp
jp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insl
cmp
jle
test
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
imul
cmpsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
insb
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
xchg
cmp
inc
ds
ds
jns
cmpl
ds
ds
ds
mov
fidivrs
in
add
add
add
or
add
add
or
sub
das
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
xor
xor
xor
xor
xor
xor
mov
xor
adc
and
cmp
pusha
outsl
ss
test
nop
ss
mov
ss
ss
aaa
adc
sbb
aaa
std
aaa
and
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
enter
icebp
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarb
cmp
push
ds
bound
jo
movsb
ds
idivl
adc
pusha
aas
mov
add
add
cmp
add
xor
xor
push
xor
sahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
jbe
xchg
xor
xor
xor
push
xor
xor
sub
xor
pop
ss
xchg
ss
sub
dec
aaa
push
aaa
data16
imul
aaa
xchg
aaa
mov
mov
aaa
xlat
aaa
fnsave
out
in
aaa
cmc
aaa
add
pop
cmp
cmp
cmp
cmp
cmp
test
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
test
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
push
sub
dec
ds
ds
je,pt
cmpb
ds
ret
sarb
ds
xor
lea
les
lret
aas
fnstsw
in
out
aas
add
add
add
add
xor
xor
xor
outsb
xor
xor
pop
xor
xor
xor
xor
xor
xor
outsb
xor
jp
jg
xchg
mov
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fnsave
hlt
ss
aaa
and
sub
cmp
cmp
aaa
pop
aaa
data16
insb
aaa
jbe
jl
xchg
aaa
lcall
aaa
mov
cmp
cmp
cmp
cmp
cmp
jg
mov
cmp
icebp
cmp
cmp
push
ds
jo,pt
xchg
ds
add
adc
cmpl
aas
jmp
push
add
or
add
pop
xor
in
xor
xor
xor
xor
pop
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
mov
xor
xor
xor
sub
lds
shll
fdivl
push
cmp
sbb
and
cmp
xor
cmp
inc
cmp
dec
cmp
pop
cmp
insl
cmp
cmpl
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
cmp
and
and
sub
sub
xor
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
cmp
mov
add
add
add
xor
xor
push
xor
xor
xor
xor
ljmp
xor
pop
ss
jl
mov
mov
ss
ss
aaa
push
aaa
xor
dec
aaa
mov
mov
cmp
fidivrs
add
add
add
add
or
or
adc
adc
fdivrl
in
in
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
aas
add
add
add
add
pop
cmp
movsb
cmp
cmp
cmp
cmp
xor
cmp
pop
cmp
cwtl
cmp
clc
cmp
cmp
nop
add
or
add
lock
xor
xor
xor
xor
or
or
adc
adc
dec
aaa
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
insb
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
