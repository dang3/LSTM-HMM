in
or
jbe
jp
add
add
insb
fbstp
adc
xor
sub
sub
mov
mov
pusha
call
add
pop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
jo
push
cmp
dec
pop
cmpl
jbe
rol
or
das
int
jbe
sbb
data16
cmp
xchg
lods
jmp
pop
nop
cmovge
insb
push
mov
arpl
bound
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
sub
rclb
loopne
mov
int3
jle
andb
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
xor
bound
addr16
aam
jnp
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
rolb
leave
pop
or
icebp
loop
cmp
push
sub
cld
add
cmp
pop
push
add
pop
and
adc
and
movsl
dec
out
push
aad
sahf
push
mov
out
lds
lock
xor
xor
dec
add
mov
movsb
in
test
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
mov
add
push
pop
push
pop
test
je
add
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
jmp
mov
pop
ret
add
bound
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
mov
mov
imul
outsl
xchg
movsb
test
in
mov
out
fiaddl
roll
out
jp
addl
fdivl
rol
cmp
pop
out
js
invd
repnz
js
xor
adc
stos
or
and
loope
xor
sub
shlb
jmp
ret
push
pop
clc
sbb
sub
pushl
pop
lods
mov
shl
lea
mov
.byte
inc
.byte
inc
sbb
add
fisubl
add
push
and
add
and
add
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
add
jl
add
sub
add
cmp
add
bound
add
and
add
and
add
add
inc
and
add
add
add
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
in
add
nop
and
add
and
add
and
add
add
andb
add
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
add
jl
add
sub
add
cmp
add
bound
add
and
add
and
add
add
inc
and
add
add
add
add
and
add
and
add
and
add
add
add
add
imul
jb
je
arpl
add
add
je
imul
bound
gs
add
jae
inc
outsl
jo
inc
imul
gs
jo
imul
dec
gs
jo
gs
jb
jns
add
inc
gs
outsl
imul
jbe
jae
add
fs
outsl
outsb
jae
insb
gs
add
fwait
add
je
jbe
outsb
je
add
insb
outsl
jae
dec
popa
outsb
fs
add
gs
imul
je
imul
push
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
push
jns
gs
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
fs
outsl
outsb
jae
insb
gs
add
sti
add
insb
gs
jae
dec
jne
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
outsb
fs
je
insl
push
add
insb
jae
jb
outsb
push
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
push
dec
push
cs
insb
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
outsl
ja
gs
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsl
movsb
pop
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jnp
jp
stos
stos
stos
add
test
mov
mov
mov
ret
lret
lret
int3
rcl
in
rcl
shl
iret
iret
shl
int3
int
hlt
enter
enter
mov
mov
mov
mov
lods
lods
lea
fwait
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
rcl
sar
fcomp
std
xlat
xlat
xlat
xlat
xlat
aad
ror
sar
into
into
into
aad
rcl
sar
ret
ret
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
stos
add
scas
sbb
mov
jnp
mov
sar
dec
leave
leave
call
rcl
aad
aad
xlat
fdivr
xlat
fcom
call
aad
dec
int
dec
int
call
aam
dec
int3
int
rol
mov
mov
scas
std
cmpsl
cmpsl
cmpsl
ljmp
push
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
push
add
push
or
or
sbb
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
into
int3
call
rcl
call
xlat
xlat
call
call
aam
int3
int
dec
lret
leave
dec
int3
int
mov
inc
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
push
das
or
sbb
xor
cmp
aaa
cmp
cmp
adc
push
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
inc
leave
call
rcl
call
call
aad
rcl
sar
enter
inc
mov
mov
lods
scas
lods
jmp
popf
pushf
cwtl
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
outsl
xor
jle
jge
jle
jno
jb
popa
arpl
push
dec
dec
xchg
cmp
cmp
pop
pop
pop
stos
outsb
outsl
outsl
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
lret
lret
inc
leave
enter
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fwait
lcall
cmp
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
jo
pop
pop
pop
or
jp
nop
lea
incb
jl
idivb
jnp
outsl
outsb
jo
data16
fdivs
jne
jle
jg
jp
jp
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsb
lcall
nop
incl
addb
xchg
xchg
mov
mov
xchg
mov
jp
jns
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
mov
std
xchg
jg
jno
jb
jne
jne
jle
jg
addl
xchg
push
cmp
ss
and
jg
jge
fwait
cltd
cltd
lea
test
icebp
lods
stos
stos
sti
lods
stos
stos
lods
lods
stos
test
movsl
movsl
std
lcall
decl
jle
jp
jp
jnp
jns
mov
xchg
movsb
movsb
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
nop
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
rdmsr
inc
inc
inc
dec
insl
imul
xchg
leave
cltd
lcall
cltd
fwait
lcall
mov
decl
mov
fwait
lcall
scas
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
scas
call
lcall
incl
xchg
xchg
xchg
xchg
popf
sahf
popf
std
movsb
mov
mov
in
nop
nop
xchg
in
xchg
jne
push
cmovp
add
inc
or
or
sub
push
dec
dec
dec
data16
jno
xchg
xchg
rclb
xchg
std
lea
call
sahf
sahf
jmp
stos
pushl
cmpsb
scas
mov
xchg
test
std
ret
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
xchg
lcall
mov
xchg
xchg
nop
call
xchg
xchg
sahf
pushf
pushf
mov
test
mov
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pop
bound
jb
jne
jl
jg
addl
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
ja
mov
movsl
mov
mov
mov
lods
lods
lods
mov
movsl
add
mov
add
pop
adc
mov
ljmp
sahf
decl
xchg
nop
call
xchg
xchg
call
xchg
xchg
cltd
cltd
lcall
sahf
sahf
mov
movsl
mov
out
xchg
xchg
nop
nop
xchg
les
xchg
lcall
xchg
cmc
nop
mov
cld
xchg
adcb
lcall
jmp
inc
jge
mov
jp
mov
jb
mov
insl
ljmp
adc
lods
or
ljmp
inc
jle
mov
mov
lods
pushf
mov
movsb
movsb
add
pop
pop
adc
mov
lcall
nop
xchg
call
cltd
lcall
sahf
lcall
cltd
lcall
xchg
xchg
decb
xchg
xchg
xchg
xchg
lcall
cltd
mov
cld
popf
mov
xchg
imul
xchg
dec
js
fwait
cmp
push
sahf
pop
addr16
sahf
pop
jmp
arpl
stos
adc
adc
lods
adc
lods
adc
mov
push
mov
push
mov
imul
inc
cmp
mov
scas
scas
scas
movsb
mov
mov
add
pop
pop
adc
mov
mov
pushf
call
pushf
popf
jmp
movsl
movsb
jmp
mov
xchg
decl
mov
xchg
xchg
js
cltd
jb
fwait
fs
xchg
dec
jnp
xchg
cmp
insb
decl
adc
nop
or
call
add
lcall
ljmp
sbb
mov
outsb
pushl
jo
mov
and
and
shll
inc
inc
cmp
xchg
scas
mov
lods
scas
mov
mov
movsb
mov
add
add
add
pop
pop
adc
scas
mov
shlb
lcall
mov
test
cmpsl
cmpsb
cmpsb
ljmp
test
lcall
mov
mov
mov
decl
popa
decl
pop
incl
push
push
incl
add
mov
push
call
add
lcall
ljmp
and
mov
ja
mov
sub
mov
sub
inc
sub
cmp
movl
mov
mov
lret
movsb
dec
mov
movsl
movsb
add
push
push
adc
test
ljmp
lahf
jmp
test
stos
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
addl
incl
push
decl
add
add
xchg
add
lcall
jmp
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
mov
mov
lahf
fwait
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
mov
rorl
call
dec
xchg
call
dec
xchg
fimull
fmull
fistl
call
test
std
mov
mov
movsb
mov
mov
add
dec
inc
adc
jl
movsl
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsl
mov
decl
sbb
pop
pusha
decl
pop
decl
push
call
add
sahf
add
mov
add
test
add
jns
int
nop
call
push
cltd
call
push
cltd
ficoml
fstl
ficoms
fists
jmp
pop
lahf
jmp
pop
mov
fadds
mov
cmpsb
jne
lahf
lahf
or
cwtl
xchg
cwtl
add
adc
jns
lahf
cltd
sahf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
xchg
and
xchg
and
callw
sbb
xchg
or
call
add
lcall
jmp
add
mov
fs
mov
xor
call
pop
lcall
bound
jmp
cmpsw
jmp
cmpsl
call
push
ljmp
fildl
mov
cmpsb
cmpsb
mov
sahf
lahf
add
inc
aas
adc
jae
fwait
xchg
cwtl
call
sahf
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
lcall
sbb
pop
call
add
mov
add
lods
add
mov
pushl
adc
roll
frstor
jmp
outsl
lods
jmp
jo
jmp
jb
call
jne
in
je
out
je
in
je
out
je
jmp
mov
mov
cmpsb
test
sahf
mov
lahf
add
jge
ds
outsb
js
mov
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
outsb
lcall
cmp
xor
fwait
push
callw
pop
lcall
add
add
mov
popa
pushl
add
sbb
fsts
jmp
js
ljmp
in
jg
out
cmpb
icebp
xchg
push
test
jmp
mov
mov
test
cmpsl
popf
sahf
pushf
daa
sahf
mov
lahf
add
add
add
add
aaa
cmp
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
mov
jmp
cmp
movsb
inc
jl
movsb
inc
jge
movsb
cmp
cltd
sbb
xchg
add
pushf
add
add
add
scas
add
mov
fs
mov
add
dec
es
movsl
call
mov
push
pop
push
pop
push
pop
push
xchg
xchg
xchg
stc
in
mov
fidivl
stos
test
xor
popf
sahf
add
add
add
inc
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
inc
mov
mov
jl
lcall
dec
cmp
mov
adc
lcall
jmp
add
mov
fs
mov
add
movl
mov
in
xchg
ret
push
lcall
hlt
cltd
push
pushf
lret
pushf
lret
pushf
int3
cld
sahf
int
sti
popf
int
sti
cwtl
leave
push
xchg
sar
mov
enter
mov
lahf
mov
popl
cltd
lcall
xor
xor
or
cmp
outsb
push
dec
dec
jecxz
pusha
call
mov
mov
mov
sar
ret
enter
mov
mov
ljmp
dec
xchg
mov
pop
pop
lcall
pop
ljmp
arpl
mov
add
leave
add
rorl
filds
out
lea
push
movsb
into
push
cmpsb
into
stc
cmpsb
iret
cld
test
sti
cmpsl
sar
cli
test
sar
cld
test
iret
push
popf
mov
dec
lret
mov
mov
sahf
mov
xchg
add
cltd
lcall
xor
sub
inc
inc
inc
bound
pop
xlat
je
jb
mov
sarl
mov
ret
inc
ret
mov
inc
enter
rol
mov
cmpsl
jmp
push
mov
lods
dec
xchg
lahf
sbb
sahf
add
mov
add
mov
mov
add
into
add
xlat
add
ficoms
jl
out
pop
cmpsl
push
lahf
lret
lods
sar
cld
mov
sti
scas
aam
sti
scas
sar
std
mov
mov
std
mov
mov
mov
mov
push
cmpsb
jmp
mov
call
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
ss
outsl
mov
xlat
jmp
test
into
int3
dec
lret
leave
dec
leave
lret
lret
enter
lahf
lods
jmp
push
mov
lods
jg,pt
lahf
packsswb
mov
add
mov
arpl
mov
add
roll
outsl
call
add
filds
jne
ljmp
cli
lods
aam
mov
cld
mov
cld
mov
fdivr
mov
xlat
std
rcr
mov
lret
call
lret
int
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
leave
movb
in
out
call
test
jecxz
leave
fsub
fdiv
xlat
fcmovu
cli
aam
xlat
std
int3
rcl
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
aam
jae
fldl
jbe
in
ja
out
xor
sti
mov
loope
inc
loopne
inc
loopne
std
inc
fdivrp
std
enter
dec
dec
dec
loope
cld
mov
lret
lret
sar
mov
mov
xchg
adc
add
add
std
add
incb
incl
hlt
cmc
testb
out
in
pop
in
out
in
sub
in
in
dec
jmp
ljmp
in
out
fucomp
les
xchg
test
jns
movsl
adc
jmp
popa
pushl
add
les
imul
add
xlat
add
add
ljmp
cld
mov
in
cld
int3
in
dec
out
std
int3
in
dec
jecxz
dec
loope
dec
loopne
call
in
shl
std
shl
shl
cli
out
mov
xlat
inc
cmpsb
cmpsl
mov
xchg
xchg
add
add
add
std
incl
std
std
std
add
stc
clc
add
hlt
lock
hlt
repnz
in
icebp
out
pop
in
repnz
cmp
out
in
pop
fsubp
loopne
mov
xchg
sti
lahf
and
pop
jmp
pop
pushl
add
leave
add
rolb
jno
fiaddl
je
in
jp
in
adc
negl
sti
mov
shl
dec
in
shr
std
shr
shl
call
out
std
fsub
std
out
std
fld1
fld1
dec
loop
repnz
aam
in
fcos
lret
leave
leave
repz
xchg
xchg
and
xchg
xchg
add
cld
add
std
testl
repnz
or
shlb
sarl
fwait
sbb
add
cmpsb
add
scas
add
mov
add
lret
call
add
fldl
ja
out
jns
in
sbb
cli
std
fldl2t
fucompp
fucomi
std
fsubr
fsubr
std
fucomi
fucomip
std
loopne
fsubrp
std
shl
push
aam
out
iret
rcl
clc
lods
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loopne
add
mov
xchg
lods
jnp
repnz
and
lahf
add
cmpsb
add
mov
popa
mov
add
int
outsl
call
add
loopne
jae
call
sub
std
aam
fdivp
fucomp
fucompp
call
call
aam
cli
iret
loopne
cld
shl
stc
into
fdivrp
test
in
mov
jmp
rcr
fcom
xlat
sti
mov
mov
fwait
fwait
cltd
cmp
lcall
mov
mov
add
leave
lds
scas
xchg
lcall
add
mov
arpl
mov
add
rolb
jo
add
add
ljmp
sti
xchg
cld
leave
cld
int3
loop
cli
clc
rcl
cmc
mov
sar
lock
sar
out
mov
int
call
ret
sar
call
vmaskmovdqu
cmc
fnstsw
fucomip
mov
mov
xchg
add
add
add
int3
int3
add
shrb
loopne
ss
mov
add
mov
data16
mov
add
dec
pop
jno
rorl
jne
fimull
ja
loop
cmp
dec
cwtl
call
scas
int3
jmp
scas
leave
std
loopne
cld
fidivs
neg
mov
enter
into
in
enter
iret
xlat
shl
xlat
fcmovb
out
loop
in
in
test
out
out
popf
jmp
lret
lods
stos
lods
adc
cmpsb
cmpsl
cmpsb
add
ret
rolb
popf
lods
aam
dec
cmp
cmpsb
push
insb
scas
es
mov
js
mov
inc
xchg
ret
push
mov
lret
fs
test
mov
out
mov
mov
lret
rol
int
aad
shll
xlat
rcl
jg
jb
loopne
gs
in
call
in
jmp
lock
hlt
sub
div
and
icebp
lock
fcmovnu
or
mov
int
mov
add
mov
sarl
mov
xchg
lock
xchg
ljmp
mov
sarb
stos
mov
ret
mov
cmpsl
leave
mov
mov
leave
int3
jp
into
into
addr16
iret
push
rcl
rorb
xlat
aad
rcl
xor
fcmovu
daa
fcomp
fcompl
fcoml
fsubp
loope
loopne
in
out
ljmp
sti
cmc
add
std
add
std
incb
std
incl
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
int3
lret
daa
int
shlb
rcl
aam
iret
aad
adc
rorb
aam
push
rcr
xlat
add
add
loopne
add
in
add
jmp
add
aam
std
add
mov
add
rol
mov
mov
mov
mov
push
rol
or
mov
add
into
lret
add
aad
add
xlat
aam
aam
add
fcom
add
aam
add
fsub
add
aad
add
loope
add
fsubp
add
out
add
lock
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
mov
mov
mov
stos
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
into
shr
aad
aam
aam
sar
into
rcl
cli
int
int
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
into
iret
xlat
xlat
call
aad
iret
rcl
dec
iret
int
lret
mov
mov
cld
stos
lods
lods
icebp
cwtl
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jae
jne
data16
dec
dec
dec
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
int3
lret
call
rcl
call
aam
dec
int3
int3
inc
rol
pushl
test
sahf
xchg
xchg
xchg
jmp
outsl
jno
push
pop
push
dec
add
add
add
add
add
add
jg
jg
jp
jnp
test
jnp
imul
pop
pop
pop
movsb
push
push
push
stos
push
insb
insl
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
mov
sar
mov
mov
mov
ljmp
fwait
lcall
xchg
xchg
fwait
cltd
lcall
dec
dec
dec
movups
add
add
add
add
add
pop
lcall
pop
pushf
xchg
cwtl
fcoml
addb
jnp
jge
js
jns
jnp
jp
jns
jnp
jae
jae
push
push
push
cmp
jae
popf
popf
pushf
mov
scas
scas
repz
scas
scas
sti
lods
scas
scas
std
test
test
popf
sahf
sahf
call
test
call
mov
scas
jmp
scas
scas
leave
movsl
cmpsb
movsl
cltd
jae
jae
adc
adc
add
add
add
add
outsl
outsl
outsl
pop
xchg
mov
loop
cltd
sahf
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
call
lahf
ljmp
test
mov
mov
mov
xlat
cmpsb
mov
addb
add
add
add
add
pusha
or
scas
mov
movsl
sahf
mov
decl
nop
nop
call
lahf
mov
negl
jle
stos
push
push
push
jo
pop
push
outsl
insb
outsb
outsb
xchg
subl
mov
lcall
popf
pushl
outsl
xchg
mov
push
mov
mov
mov
out
scas
lods
insl
stos
test
add
add
add
popa
popa
pop
or
mov
in
mov
nop
call
xchg
xchg
call
cwtl
lcall
sahf
popf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
out
xchg
ja
notb
pop
jle
popf
dec
jp
mov
aaa
jbe
mov
jb
mov
outsb
pushl
sbb
pop
mov
mov
scas
scas
jle
mov
add
add
add
popa
popa
pop
or
mov
in
movsl
test
lcall
mov
lahf
call
mov
mov
mov
xchg
jno
cld
cwtl
popa
cmp
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
cltd
maxps
mov
pop
imul
mov
insl
pushl
pop
jae
mov
pop
mov
scas
scas
xchg
lahf
popf
sahf
adc
add
add
pusha
popa
popa
or
lods
mov
stos
mov
lahf
jmp
stos
stos
ljmp
xchg
cltd
decl
cmp
mov
arpl
mov
pop
incl
push
push
decl
add
pushf
add
or
pushl
jp
mov
jle,pn
enter
leave
xor
xchg
inc
test
imull
test
sbb
add
add
popa
pop
pop
or
cmpsb
test
test
cmpsl
test
scas
scas
scas
pushl
mov
jmp
inc
jno
mov
pop
decl
or
add
push
call
add
sahf
add
movsl
add
mov
outsb
inc
ss
inc
mov
rolb
rolb
call
inc
nop
flds
call
popa
sahf
dec
test
stc
mov
mov
mov
std
incl
add
add
pop
popa
pusha
or
mov
ljmp
mov
mov
mov
ljmp
push
jge
sbb
pusha
decl
or
nop
add
xchg
add
sahf
add
cmpsl
add
scas
add
mov
dec
xchg
call
pop
fwait
fcompl
ficomps
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsl
lods
cmpsb
xor
jg
add
add
dec
dec
dec
pop
jle
jnp
fwait
cwtl
lcall
lods
scas
pushl
mov
mov
jmp
sub
insl
call
subps
xchg
add
lahf
add
cmpsb
add
mov
fs
mov
xor
loope
stos
jmp
jo
ljmp
in
jb
jmp
jp
call
cmpsl
mov
shrl
addl
pop
outsl
outsb
insb
bound
cltd
xchg
pushl
mov
mov
mov
jbe
lcall
cmp
sahf
sub
call
add
mov
add
mov
gs
or
call
inc
xchg
jmp
jp
ljmp
push
test
push
xchg
fldt
mov
push
lcall
add
sub
push
push
push
dec
pop
pushw
mov
mov
mov
mov
mov
mov
ljmp
sub
cltd
pop
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
push
cltd
cwtl
stc
fwait
lret
fwait
lret
xchg
lods
mov
stos
popa
lahf
lahf
lahf
or
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
pushl
push
mov
lods
dec
cmp
pop
insb
jmp
add
mov
mov
add
fisubl
cmp
jp
push
movsb
lret
push
test
clc
stos
iret
cld
test
iret
stos
sar
sti
cmpsb
int
call
mov
stos
jne
sahf
popf
or
add
add
dec
dec
dec
aaa
jae
jae
test
int
out
int
cmc
lret
sti
lret
std
enter
mov
mov
lods
inc
cmp
adc
cmpsl
add
mov
arpl
roll
dec
add
flds
ljmp
std
mov
cld
mov
fcos
std
mov
xlat
std
mov
sar
ljmp
repz
lods
scas
mov
add
add
add
add
pop
or
aam
dec
jecxz
fsubp
loopne
fadd
fcmovnu
fcmovnu
fcom
out
shlb
test
jae
movsb
or
scas
add
mov
add
xlat
add
loop
jnp
icebp
push
mov
cld
loopne
std
inc
dec
fdivrp
dec
loopne
dec
loopne
cld
out
mov
lret
divb
sahf
sbb
add
add
incb
std
incb
jmp
out
sbb
jmp
xor
loopne
jecxz
lds
mov
mov
add
mov
arpl
ret
dec
add
faddl
jbe
ljmp
sti
ret
std
iret
out
shl
call
out
shl
out
fsub
cld
shl
push
xlat
fcmovne
sar
mov
mov
and
add
add
std
incb
std
incb
cld
std
pop
aam
aam
mov
pop
xchg
popf
or
test
add
add
rolb
jno
loopne
jne
out
and
shl
fldpi
std
fsubr
cld
fsubr
sti
xlat
out
cld
fld1
cld
aam
push
fdivr
aad
mov
popf
lahf
das
add
add
into
into
int3
or
bound
ljmp
add
movb
call
add
loope
ja
out
xor
cli
lret
loopne
cli
lret
test
repz
repnz
lock
sar
in
sar
in
aam
ljmp
ljmp
test
add
add
add
aad
mov
jae
or
imul
sbb
int3
and
aad
test
fists
in
mov
out
loop
lret
mov
leave
fadd
lret
iret
mov
in
fistpl
in
call
rorl
mov
add
stos
stos
lods
add
xchg
movsb
les
pop
xchg
mov
nop
fidivrl
andb
int
mov
shll
jge
int3
insl
aad
iret
pop
rcl
rorl
xlat
fdivrs
loopne
in
fsubl
in
lock
in
in
or
std
add
add
add
std
add
mov
jns
mov
mov
mov
mov
xor
enter
rcl
pop
mov
rcl
or
loope
or
int
add
std
incb
std
std
add
add
add
int3
int
mov
int
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
fwait
add
rol
mov
xchg
enter
mov
mov
scas
mov
insb
stos
stos
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
std
rcl
sar
int
int
mov
stc
mov
mov
sarl
gs
sbb
add
add
add
add
add
add
add
add
jb
jb
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int
call
aad
dec
into
iret
dec
enter
mov
lcall
mov
push
add
add
add
add
je
jae
test
aad
outsb
outsb
ret
popa
mov
pushw
outsl
outsb
jb
bound
pusha
pusha
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
xchg
cltd
lds
jae
and
add
pop
add
add
je
je
popf
xchg
fwait
mov
test
clc
mov
or
addl
push
push
push
inc
mov
pushf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
lods
mov
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
popf
popf
cmc
lcall
mov
push
push
imul
jg
mov
testl
mov
mov
jb
mov
mov
stos
scas
lods
push
lods
stos
stos
add
add
add
mov
mov
scas
cld
xchg
xchg
xchg
call
cltd
lcall
fwait
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
fs
push
jnp
lcall
ljmp
and
mov
outsb
pushl
pushf
lods
lock
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
popf
sahf
lahf
jmp
movsb
movsb
call
jge
mov
xchg
inc
je
mov
imul
xchg
adc
xchg
or
or
ljmp
and
mov
sub
les
mov
scas
mov
stos
stos
stos
or
add
add
jne
mov
movsb
test
cmpsl
cmpsb
test
scas
scas
scas
ljmp
xchg
decl
or
mov
decl
add
mov
adc
ret
dec
inc
mov
rolb
call
inc
mov
aam
xchg
dec
cwtl
mov
mov
mov
movsb
movsb
movsl
push
add
add
imul
test
mov
lods
pushl
mov
movsl
call
push
decl
or
xchg
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsw
call
fwait
mov
mov
cmpsl
cmpsl
pop
add
add
arpl
adc
popf
pushf
lcall
mov
mov
lcall
xor
cwtl
and
xchg
pop
pop
lcall
add
mov
dec
xor
jmp
js
jmp
mov
lock
push
jge
fistpl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
sar
mov
jmp
inc
jle
lahf
and
pop
jmp
add
ret
or
fmull
out
lea
cmc
xchg
cwtl
enter
jmp
cmpsl
mov
cmpsb
movsb
sub
aas
inc
inc
adc
push
xchg
xchg
cld
ret
inc
ret
vcmpsd
ljmp
sbb
cmpsb
add
mov
arpl
ret
call
adc
in
insb
lods
push
cmpsb
iret
cli
stos
sar
sti
lods
sar
cld
scas
sar
scas
iret
ljmp
fldenv
incb
xor
xor
scas
mov
mov
aad
mov
aam
fnop
rcl
out
lret
cli
mov
mov
jmp
add
les
imul
add
out
test
clc
nop
ret
mov
std
ret
cld
ret
inc
icebp
mov
ret
cmpsl
test
addb
add
jmp
call
call
in
fcomp
fldenv
mov
add
mov
add
fiadds
push
cmp
dec
in
shl
call
out
call
out
call
out
test
call
into
in
scas
scas
scas
popa
cmpb
incb
std
push
int3
lret
shrl
sahf
sbb
lods
add
mov
add
jecxz
js
cmc
push
cmpsb
std
enter
xlat
jmp
std
aad
sti
aam
sti
shl
push
leave
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
adc
mov
add
insb
dec
or
cmp
insb
lods
cld
out
mov
shl
ljmp
jmp
in
rcl
call
fcmovu
scas
ret
lds
fwait
cltd
add
sarl
xchg
dec
and
push
mov
shlb
int3
jbe
mov
mov
int3
adc
into
outsl
xlat
int
pop
dec
jecxz
loope
call
out
out
sbb
rol
add
mov
lods
arpl
stos
mov
les
lds
ret
ret
int3
sbb
bswap
int3
into
or
push
std
incb
addb
add
add
add
roll
incl
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
insb
ja
shll
sbb
cld
insl
jne
ss
into
and
xor
loop
in
dec
and
jne
push
movsl
ret
ljmp
or
mov
in
push
xchg
sbb
xor
out
daa
and
imul
push
pop
ficomps
mov
lock
push
push
cmpsl
ds
mov
cli
js
adc
fistpll
imul
addr16
inc
jb
stos
ffreep
je
push
ja
mov
test
jg
mov
add
and
shll
xchg
sarl
adc
pop
adcl
cli
xchg
xchg
out
xchg
pop
add
xchg
xor
and
mov
popf
lods
movsl
xor
mov
inc
sub
push
aam
fstl
cld
add
rorl
mov
cltd
or
mov
jp
stos
sub
jno
int3
or
xchg
pop
push
int
out
push
int3
lds
mov
sub
dec
xchg
adc
mov
or
xchg
imul
imul
orl
mov
push
jno
mov
add
xchg
fldcw
fstpt
and
add
push
test
dec
or
lock
jbe
out
and
mov
imul
imul
mov
xchg
js
xchg
dec
pop
sbb
dec
rol
xchg
push
shrl
mov
push
push
in
sub
jg
loop
push
adc
popa
pop
mov
jo
bound
aam
ja
pop
inc
push
jge
stos
sub
push
in
and
repz
inc
fidivrs
push
shlb
lahf
aad
jne
adc
mov
add
cmp
add
inc
pop
ret
xor
lock
xchg
jns
push
or
pop
shlb
sti
pop
cmp
push
iret
aas
sub
xchg
imul
bound
or
mov
mov
jns
int
xor
and
in
cltd
dec
dec
inc
hlt
sbb
dec
lret
int
fdivrs
fs
ljmp
cs
mov
das
insb
or
cmpsl
xor
adc
fidivrs
jo
stos
sub
and
mov
and
jne
ret
mov
addr16
jmp
mov
mov
mov
add
dec
dec
jns
or
add
push
and
mov
in
mov
xor
sti
incb
je
cmpsb
push
mov
lods
movsb
lock
insb
std
mov
lahf
fnsave
mov
xchg
and
or
scas
mov
imul
inc
mov
cmp
pop
mov
std
aam
mov
mov
stc
inc
fwait
and
mov
jae
nop
cmp
and
fisttpll
pop
mov
test
add
cmp
jge
fidivs
xchg
aaa
fwait
and
ljmp
sti
mov
and
shr
dec
adc
jbe
xchg
sub
mov
movsb
out
fildl
int
sti
mov
jge
mov
mov
ror
sbb
jne
jge
cmc
or
mov
xchg
insl
stos
scas
jbe
add
mov
or
pop
mov
outsb
push
fidivs
mov
movsl
push
mov
das
mov
dec
jmp
jg
or
out
test
jbe
jb
mov
or
dec
in
out
inc
repnz
sbb
jns
into
or
iret
mov
ja
sbb
outsl
mov
fildl
pop
cltd
pop
xchg
xlat
add
icebp
js
cltd
xlat
imul
cmpl
jle
pop
dec
jg
stos
xchg
cmpsl
jmp
out
add
jnp
je
aam
jb
fidivl
mov
sub
mov
xor
je
pop
scas
aaa
test
scas
push
ror
push
pushf
push
in
iret
addr16
and
movsb
in
cmp
psrlq
cs
push
outsb
in
cltd
or
arpl
push
lret
fsubs
or
hlt
in
lock
push
xchg
cltd
cmp
cmpxchg
cmp
jns
add
and
jg
out
xor
sub
dec
jne
adc
fdivrl
or
ljmp
push
cmp
int
jb
and
jno
fisttpll
lods
mov
and
rcpps
ljmp
push
push
roll
std
dec
and
jge
enter
cmp
push
or
mov
cmc
xor
push
fucomp
mov
insl
cmpsb
rcl
jns
lahf
add
xchg
jle
popf
mov
sti
mov
lea
add
xchg
sub
push
addr16
mov
fcomi
xchg
imull
clc
sub
xchg
mov
adc
lcall
icebp
sub
push
push
aas
sbb
int
dec
cmc
in
sbb
pop
and
dec
lea
add
fwait
jge
and
sub
cmp
mov
or
push
adc
popl
rcrb
mov
cs
mov
shrb
push
iret
out
push
into
add
jnp
sbb
popf
iret
cmp
scas
dec
xor
mov
inc
cmp
push
maxps
cmc
sub
push
inc
scas
aas
jg
mov
popf
mov
sahf
enter
out
lahf
mov
fnsave
mov
mov
enter
les
pop
mov
push
out
test
outsb
add
rorl
adc
inc
inc
mov
leave
popa
lret
mov
in
cmpsb
cmp
jns
les
lcall
in
lea
out
lcall
and
lds
out
sbb
pop
cmc
inc
cmp
adc
je
mov
fists
clc
dec
xor
push
popf
test
gs
popf
xor
fsubr
sbbb
call
stos
subb
int3
daa
mov
pop
pop
inc
fcoml
sub
inc
and
lds
lret
bound
jp
xchg
jmp
cwtl
icebp
call
in
test
pop
pop
fidivs
jp
cmp
movsb
int
pop
inc
sbb
adc
aad
add
sbb
pop
dec
inc
leave
pusha
jae
in
mov
ret
repz
nop
sbb
out
lods
pop
cmp
imull
xor
mov
jle
mov
loopne
xor
and
push
jmp
sub
jb
xchg
or
mov
adc
add
or
mov
mov
inc
decb
mov
push
push
daa
mov
mov
les
xor
es
mov
mov
mov
std
xchg
mov
ret
mov
test
mov
mov
lods
adc
xor
mov
xchg
push
pop
xlat
jg
mov
ffree
sbb
bound
push
fistpl
push
idivl
push
addr16
cmc
mov
ficoml
stos
or
mov
adc
stos
inc
fs
out
test
pop
mov
insl
add
jge
and
add
pop
js
inc
stos
jle
mov
std
rolb
add
out
push
and
push
jb
fwait
mov
les
mov
stc
push
inc
fadds
mov
negb
mov
cmc
mov
or
adc
inc
pusha
mov
leave
xchg
mov
outsl
in
push
out
push
hlt
mov
or
cmp
cmpsl
mov
jno
fucomp
lds
xchg
sub
nop
repz
push
mov
test
inc
xlat
or
pop
repz
cli
jmp
lss
lahf
jge
xchg
sub
mov
mov
push
testl
test
arpl
jbe
testb
and
lods
push
in
cmp
ja
lret
cmpsb
ds
pop
jno
push
call
loop
jne
inc
add
sub
mov
dec
loop
push
out
add
imul
inc
mov
jbe
or
iret
push
inc
fdivl
add
dec
inc
hlt
mov
gs
xchg
pop
or
ljmp
dec
cmp
pop
pop
repz
or
mov
icebp
mov
pushf
xor
sbbl
or
mov
mov
ficompl
nop
push
adc
xchg
testb
test
lret
bound
mov
adc
test
cld
pop
movsl
lea
andb
arpl
sbb
sub
pop
lock
mov
or
in
jmp
sarb
mov
adc
pslld
mov
repz
fistpl
es
xor
mov
sub
popa
clc
cmp
push
outsb
mov
mov
inc
fdivrs
scas
inc
cmpsb
push
xlat
outsb
xchg
int3
arpl
test
lea
ret
outsb
add
mov
lret
sbb
pop
sub
lea
cli
out
testl
jl
push
dec
test
cld
repnz
mov
pop
mov
cmpsb
addr16
mull
xor
cmp
push
fwait
inc
cwtl
cs
push
aaa
ret
repz
xlat
outsb
mov
pushf
popa
iret
cltd
test
xor
cmpsl
je
js
repz
fdivrs
pop
clc
idivl
adcl
aas
movnti
fwait
addr16
into
sbb
pop
mov
cmp
das
arpl
xchg
bound
xchg
arpl
pop
mov
cmp
xor
pop
jmp
cmpsl
clc
fld
cmp
cmc
cli
and
sub
dec
loopne
dec
ss
imul
mov
test
and
scas
inc
inc
inc
movsb
cmp
or
enter
in
aas
jl
xchg
sub
fsubrs
add
shll
push
lret
mov
jecxz
mov
push
ret
xchg
cwtl
jecxz
jle
mov
mov
xchg
inc
jo
cmp
fdivl
inc
in
test
mov
adc
pop
shrb
push
nop
outsl
jg
push
inc
nop
adcb
gs
jle
imul
dec
dec
mov
sub
pop
xor
dec
push
mov
push
insb
push
ljmp
or
cmp
sub
pop
out
popa
push
insl
bound
test
and
pop
lock
inc
ljmp
xchg
pop
out
and
in
dec
inc
or
cmpsl
inc
pop
push
out
arpl
xor
xor
xchg
fdivl
adc
push
push
jp
xchg
dec
and
xchg
or
mov
stos
adc
cmp
pop
scas
dec
pop
das
dec
enter
add
gs
mov
push
xchg
rclb
scas
inc
push
cmp
dec
dec
scas
in
test
outsl
mov
insl
adc
mov
lds
mov
push
mov
imul
loope
mov
ljmp
stos
xchg
add
js
push
jmp
lcall
jns
imul
fcmovne
lods
inc
out
pop
repz
or
test
ret
pusha
div
lea
fsts
inc
fisubrs
mov
loope
sbbl
add
sbbb
pop
repz
lahf
push
mov
sbbl
adc
xchg
cmpsl
pop
adc
cltd
mov
pop
jnp
xchg
ja
aas
cmpsb
jp
pusha
mov
je
addl
cmp
addr16
ret
mov
inc
fisubrl
lahf
sub
pop
cmpsl
jns
lds
jmp
insb
add
cld
xchg
jp
jmp
or
call
in
pop
push
gs
or
addb
adc
push
jno
lods
inc
fs
arpl
adc
lret
imul
inc
icebp
pop
push
jmp
inc
adc
clc
sahf
inc
fistl
cld
push
out
xor
movsb
xchg
sub
cmpsl
dec
loop
inc
hlt
mov
push
or
dec
aaa
testl
mov
fdivl
lret
push
je
inc
in
test
push
jo
jbe
lods
inc
push
xchg
fdivl
jae
pusha
dec
ljmp
aaa
xlat
fidivl
pop
mov
outsl
cmp
jge
nop
aam
ret
jmp
leave
mov
fisttps
pop
mov
testl
std
mov
xchg
sub
mov
sbb
dec
outsb
sub
dec
pop
rolb
sarl
push
pop
lock
lds
dec
fbld
les
push
mov
inc
add
cmp
imul
popf
js
ss
mov
in
cmp
mov
xor
ret
flds
xchg
loopne
add
call
out
frstor
loope
mov
adc
mov
cmpsl
ds
mov
push
ljmp
xor
push
mov
and
pop
lds
jmp
or
add
mov
enter
cmc
mov
mov
pop
add
cld
xchg
mov
xchg
std
testb
add
shlb
lock
clc
adc
shlb
sub
sub
jne
jnp
and
jl
sbb
add
addr16
popf
unpcklps
and
mov
add
sbb
test
xchg
push
sbb
or
xor
jbe
das
lods
xchg
sub
sub
pop
je
data16
dec
cmp
jge
cltd
xor
cmp
jb
jo
lret
mov
shl
xlat
outsb
and
xor
xor
dec
and
es
pop
push
mov
adc
mov
movsl
inc
repnz
and
int3
gs
inc
cmc
mov
out
test
jmp
dec
ret
in
sbb
movb
aam
xor
fmull
int3
arpl
pop
out
xor
mov
cmp
dec
jo
dec
loop
cmp
gs
xor
lret
cmpsl
pushl
out
cld
push
in
out
mov
sub
lock
cmc
and
scas
inc
jl
sub
mov
pusha
testl
stos
call
test
sub
out
test
xchg
mov
push
pop
movsl
xlat
outsb
sbb
ljmp
or
lock
sbb
mov
int3
fbstp
adc
adc
mov
mov
shlb
into
ret
add
mov
aaa
ret
mov
mov
fidivl
pop
pop
dec
addr16
sub
dec
in
jae
aam
xchg
lcall
test
adc
inc
fmull
add
sbb
pop
out
mov
jmp
mov
jnp
push
mov
xor
xchg
inc
push
testl
inc
mov
dec
loopne
sub
hlt
jp
adc
adc
push
call
popa
sub
mov
mov
sub
sti
aam
mov
sbb
ret
dec
loopne
lds
mov
ss
rcll
scas
jecxz
daa
mov
xchg
and
test
adc
out
xchg
clc
push
out
mov
movsl
neg
and
les
lret
rcll
daa
mov
jnp
inc
pushf
test
daa
pushl
lret
dec
out
xchg
xor
sbb
aas
daa
mov
pop
pushf
push
jmp
jl
sbb
iret
cld
xchg
sarl
hlt
inc
hlt
ja
bound
mov
mov
loopne
add
fadds
cwtl
or
add
sbbl
xchg
testl
mov
inc
fstps
mov
ds
pop
and
bswap
inc
fdivrp
xor
int
xchg
fbstp
sub
aam
mov
push
cmc
jne
ret
ja
jecxz
sub
int
loope
iret
xchg
add
sub
mov
jecxz
mov
mov
daa
fistl
dec
xchg
leave
pusha
cli
test
push
sbb
ja
pop
out
xchg
leave
pusha
jg
jl
mov
out
not
cld
xchg
out
fwait
xor
mov
jne
enter
es
sub
jbe
sarb
imul
add
sub
and
inc
fildl
inc
les
daa
pusha
negl
enter
jbe
stos
ljmp
andl
out
mov
or
lods
lea
mov
jge
repnz
mov
fisttps
mov
pusha
sub
mov
outsb
adc
call
or
lahf
jecxz
movsb
inc
imul
loopne
jp
dec
lods
xor
leave
and
aad
sub
orl
pop
das
add
shlb
pop
lret
mov
ja
lea
push
sti
mov
mov
fiadds
mov
push
or
inc
fld
mov
and
push
shr
cmp
cmpsl
frstor
jle
sub
push
jno
or
iret
lods
inc
add
mov
fwait
dec
mov
ss
pop
jmp
dec
outsb
cmp
test
adc
xlat
mov
inc
fbstp
lret
bound
mov
sbbl
outsl
outsb
rorb
sub
sub
dec
xchg
in
mov
clc
mov
sbb
in
in
mov
in
push
jmp
fs
pusha
adc
cmpsb
jl
fdivrs
jg
lock
pop
and
adc
xchg
mov
imul
dec
jmp
nop
pop
imul
cmp
adc
cmp
mov
les
subb
inc
dec
adc
leave
fcmovnu
outsb
add
iret
daa
cltd
mov
in
xor
mov
xchg
incl
leave
aam
fcomps
fcomp
into
addr16
push
push
mov
test
fs
jae
ds
inc
fidivl
push
mov
lret
test
jmp
push
mov
repz
jle
in
les
mov
mov
leave
ss
je
in
das
nop
mov
mov
pop
push
inc
and
mov
lea
lock
rep
lods
inc
sahf
adc
pop
cli
mov
sbb
dec
adcl
aas
fwait
adc
data16
nop
jne
iret
dec
xchg
pop
mov
enter
inc
inc
and
stos
sub
cwtl
idivb
mov
pop
aam
sub
enter
cmp
loopne
sub
xchg
out
inc
mov
inc
fsubp
or
rcrl
cmc
adc
in
sub
fisttpll
dec
lods
mov
cmp
mov
push
ja
sahf
mov
popa
mov
add
mov
negb
cmp
mov
out
inc
fcomps
and
mull
adc
test
adc
push
mov
cmp
xor
in
jl
clc
inc
push
pop
adc
fiaddl
ss
lock
sbb
fs
jbe
inc
cmc
incb
dec
sub
or
in
add
push
lcall
and
add
inc
cli
testl
or
mov
jae
ror
pusha
add
push
and
mov
adc
mov
xor
pop
mov
cmpsb
jbe
adc
ja
lret
mov
rcrl
push
add
sahf
mov
jae
sahf
ret
pop
xchg
fs
xchg
les
dec
lahf
rcrl
push
fisttpll
mov
cmp
aad
dec
pop
pushf
adc
gs
cmc
and
test
jle
lret
sarb
push
mov
jg
pop
leave
cwtl
arpl
cmpsb
sub
pop
arpl
push
addb
dec
push
add
mov
fstpl
ljmp
and
test
out
int3
cld
push
adc
mov
cli
push
leave
xorl
and
jns
xor
sub
and
push
lods
ss
fwait
or
xchg
incl
inc
jge
jmp
mov
shl
adc
outsl
add
xchg
xchg
pop
push
jae
mov
jp
imul
scas
pusha
inc
adc
cmpsl
inc
popa
out
dec
inc
insb
stos
pop
dec
jecxz
pop
dec
addb
cmp
adc
mov
mov
addr16
aaa
jnp
aas
icebp
add
xchg
xchg
data16
mov
and
mov
mov
insl
int
fcoms
inc
push
lea
mov
lcall
icebp
mov
stc
cmp
sbbb
mov
adc
repz
mov
test
repnz
push
loope
cmc
or
in
cltd
sbb
ret
dec
pop
sahf
aas
fldenv
lock
testb
jne
es
or
bnd
hlt
adc
dec
in
mov
test
mov
mov
cwtl
stos
dec
mov
jmp
clc
sbb
jno
shrb
lock
jae
in
mov
mov
push
inc
aad
and
mov
das
in
cmp
leave
cmc
fwait
mov
incl
jbe
mov
out
add
inc
xor
adc
rorb
sahf
pusha
roll
repnz
dec
cwtl
mov
lret
dec
lods
in
test
fidivs
ljmp
cltd
sub
cmp
sbb
shrl
out
hlt
je
pop
out
xchg
or
das
mov
clc
cmp
add
int3
nop
or
mov
sbb
cmp
and
adcl
adc
xchg
out
sbb
and
inc
mov
fcmovne
adc
arpl
mov
lcall
mov
and
dec
scas
xchg
data16
xchg
cwtl
pop
pop
mov
icebp
jp
and
xchg
fidivrl
push
test
xor
xor
pop
mov
inc
jl
pop
imull
fistl
cmp
test
in
sbbb
cmpsl
fdivr
xor
adc
xchg
shlb
jl
xchg
jp
sahf
int
imul
in
mov
jecxz
jp
popa
fimuls
pusha
das
sbbl
add
divb
jbe
call
orb
pop
fwait
js
cmp
stc
rcrl
lret
mov
icebp
stos
cmc
call
test
mov
jae
and
pop
inc
jmp
jecxz
movsb
mov
xor
div
mov
inc
mov
push
xchg
outsl
push
les
insl
test
mov
out
sub
les
push
dec
cld
pslld
inc
jb
out
or
lods
cmc
js
out
iret
xor
add
push
push
or
and
fnsave
stos
out
add
ljmp
adc
or
jp
imul
imul
pop
cmp
mov
shrb
fwait
mov
dec
jb
arpl
push
inc
fs
mov
ss
insl
outsl
aas
or
outsl
inc
loopne
jno
mov
cmp
sbb
jne
adc
pop
jb
fdivrs
push
test
xor
ret
jmp
test
pop
lcall
pop
xchg
jmp
rcll
mov
into
testl
test
outsl
dec
pop
rclb
dec
in
or
test
xor
icebp
rcrb
xchg
shrl
aam
push
dec
stc
jecxz
dec
adc
cmp
lea
xchg
xchg
jmp
jp
adc
jmp
imul
pop
shlb
push
into
icebp
xor
aad
loopne
stc
es
dec
hlt
mov
xlat
jge
mov
repz
clc
leave
jae
jmp
pop
xchg
adc
push
aam
test
jle
pop
loope
push
sub
pop
movsl
sub
mov
xor
sub
out
mov
sub
mov
inc
adcb
mov
dec
insb
aas
xchg
mov
xorb
mov
pop
sub
rclb
outsb
add
scas
pop
movsb
inc
dec
sarl
addr16
adcb
xchg
loopne
add
lods
jno
notb
insb
or
dec
roll
outsl
sbb
push
mov
pmuludq
adc
cmp
mov
insl
sbb
inc
jb
test
leave
clc
mov
sub
fnstsw
inc
mov
mov
mov
test
loopne
pop
gs
mov
or
sub
or
inc
outsl
insb
and
nop
daa
scas
scas
popa
fcmovnb
mov
pop
enter
addr16
sbb
repnz
orl
out
sbb
fsubl
les
xor
jo
jns
dec
imul
pop
fs
cmc
mov
test
sbb
out
js
push
cmp
jg
loope
add
pusha
mov
mov
sub
xlat
cmp
inc
jp
mov
hlt
inc
outsb
outsw
or
fimull
je
leave
sub
pop
jne
mov
pop
pop
mov
fsub
xchg
or
cmp
mov
xlat
outsb
xchg
mov
push
mov
mov
jge
jle
cmp
sub
dec
imul
fld
fldt
fadds
pop
into
pop
sahf
jle
xor
arpl
dec
nop
fcompl
cmp
movsb
rclb
mov
fldl
dec
sbb
rcl
sbb
sub
inc
pop
mov
popf
push
add
imul
sbb
iret
xor
outsl
stos
in
jp
and
clc
adc
push
sbb
lods
or
inc
imul
sbb
add
mov
add
pfmul
leave
insb
fistl
add
dec
pop
fldenv
push
ficomps
mov
leave
mov
xchg
imul
jb
test
fnstcw
pop
out
cli
sbbb
lret
lock
negb
dec
out
add
inc
xchg
pop
gs
push
or
lret
mov
mov
pop
cmpsb
bound
stc
push
pop
repz
mov
es
aam
mov
scas
mov
loope
push
adc
iret
fwait
push
and
scas
cmp
imul
push
in
daa
mov
jne
dec
sbbb
fdivr
lcall
out
aam
gs
shld
sbb
pop
mov
insl
add
xchg
xor
andl
pusha
pop
pop
in
jne
cmc
mov
sahf
mov
idiv
xor
stos
aam
mov
ret
and
mov
xor
or
add
stos
iret
add
aas
rolb
sbb
fdivrs
inc
shrb
add
add
jne
cmp
aad
sbb
mov
cmp
xchg
or
in
test
and
loope
pop
adc
stos
xchg
aam
xlat
add
fs
push
push
sub
mov
sbb
xor
jne
test
popf
xor
or
ret
and
iret
push
scas
adc
enter
sub
les
mov
jns
inc
xor
lcall
icebp
sbb
in
in
jae
cmovnp
inc
dec
pop
jge
sbb
cmp
push
lret
cld
jne
adc
dec
push
das
mov
pop
jb
push
adcl
arpl
cmp
call
sbb
fstpt
enter
pop
jl
pop
loop
loope
sarl
repnz
adc
repnz
adc
cmpsl
sbb
xor
inc
out
data16
mov
loopne
cmp
fs
adc
cmp
idivl
mov
sub
arpl
movsl
imul
xor
xchg
xchg
lods
ficoms
xor
in
mov
in
daa
xchg
jno
cmpsb
scas
fst
movsl
dec
mov
jge
adc
xchg
add
mov
inc
adc
jb
clc
pushf
xlat
stc
and
ljmp
jmp
mov
lods
push
add
scas
outsb
pop
fwait
in
adc
mov
repnz
repz
and
les
lea
insl
inc
mov
xchg
xor
into
or
push
pop
insb
sbb
cmp
inc
loopne
movsb
ljmp
sub
or
clc
sub
roll
add
inc
inc
adc
add
fsts
push
mov
pop
push
dec
lahf
aaa
and
or
inc
mov
ds
xor
mov
xlat
pop
and
and
pusha
jg
rcrb
xor
xchg
sub
or
push
hlt
and
mov
fmulp
fmuls
fcomip
push
sbb
in
dec
test
sbb
dec
fbld
inc
mov
cmp
sbb
cmp
les
test
jno
jg
lcall
and
push
sbb
daa
push
lcall
icebp
cmp
sti
mov
repnz
pop
jmp
or
pushf
pop
sbb
pop
aaa
aaa
decb
adc
pop
and
xor
cmc
adc
dec
xor
mov
push
rcll
and
inc
inc
cmp
adcb
filds
mov
and
jb
push
mov
fiadds
adc
and
cmp
dec
stos
cmpsl
int
pop
push
dec
xor
lods
mov
sub
mov
ror
adc
add
push
aam
arpl
lahf
dec
jecxz
mov
stos
xchg
pop
xchg
out
jp
imul
scas
add
push
fs
dec
loope
and
push
shl
mov
pop
jp
cmp
cli
mov
icebp
sti
inc
push
adc
in
insl
push
jmp
and
push
outsl
rolb
in
jl
inc
dec
rorb
or
push
test
sub
outsl
cltd
xchg
inc
cmpsb
loope
std
pop
outsl
push
dec
mov
stos
and
leave
loopne
sti
add
sarb
fmul
faddl
push
test
xchg
xor
jnp
rcr
ljmp
mov
das
mov
mov
push
add
sub
mov
stos
add
arpl
gs
mov
adc
into
inc
or
ret
cmp
decb
mov
pop
daa
xchg
stos
inc
inc
inc
or
jnp
mov
in
add
mov
ljmp
lret
jge
das
push
dec
stc
mov
mov
orl
or
cmc
popf
shr
int3
cmp
jle
pop
dec
stos
inc
lock
xor
stos
shll
out
push
pop
mov
mov
sbb
cmp
push
push
pop
sahf
xchg
adc
xchg
cmp
jbe
mov
inc
aas
in
lahf
push
movsb
je
aaa
or
or
and
imul
jg
pop
mov
and
push
jae
mov
cmp
ret
pop
inc
arpl
dec
push
xor
pop
push
dec
testb
push
dec
filds
jmp
fbstp
test
lret
mov
shrl
xchg
rcrl
mov
sbb
mov
stos
les
cmp
mov
mov
push
mov
dec
pusha
idivl
imul
xorb
mov
lcall
rcrb
add
shrl
inc
sbb
scas
jge
xor
jns
out
add
jmp
mov
adc
dec
lea
mov
jo
push
stos
xchg
cmp
lods
xchg
mov
sbb
fsubrl
rorb
pop
scas
stos
inc
sbb
in
aam
pusha
lock
add
xchg
pop
xor
stos
push
push
mov
les
fistpl
loop
popf
adc
or
fstpl
jmp
scas
jo
clc
mov
mov
in
dec
in
in
mov
rclb
out
push
shl
test
mov
cli
stc
pop
sbb
mov
cld
and
icebp
ficompl
adc
adcb
push
xchg
mov
mov
shrl
ret
xchg
sub
stos
scas
movsb
cmp
mov
aad
bnd
add
hlt
xor
push
jnp
inc
mov
call
jl
cmp
loopne
sahf
xor
jbe
push
in
inc
jne
xchg
imul
testl
cmp
arpl
xor
cmp
xor
filds
movups
lods
dec
mov
outsl
in
xor
push
inc
mov
pop
fwait
adc
sbb
cmp
adc
flds
xchg
and
and
popa
sub
xor
pop
fs
dec
in
aas
sarl
mov
sub
fwait
add
out
or
ficompl
shlb
push
je
push
loopne
stos
mov
divl
mov
sub
mov
push
out
xor
xor
xor
jge
add
add
jno
adc
test
and
mov
jae
cmp
mov
pop
pop
adc
inc
rol
stc
push
and
inc
sbb
js
pop
test
mov
and
pop
leave
les
loop
in
out
mov
scas
or
or
xor
or
test
cmpsl
ds
cmp
aad
and
icebp
dec
dec
in
sbb
push
lcall
xchg
push
push
xchg
sbbl
dec
in
push
sbb
mov
ret
loopne
push
ljmp
jb
jmp
pop
push
mov
mov
sti
stc
shrb
or
jge
sbb
js
lds
cli
xchg
mov
fists
jne
ds
xchg
outsb
add
mov
push
cmp
xor
movsb
sbbb
lds
ficoms
push
decl
shll
dec
loop
mov
jo
cwtl
aaa
loop
idivb
loopne
mov
xchg
icebp
mov
xor
jmp
mov
cs
push
call
or
in
mov
jno
jge
xchg
jno
sbb
jo
ret
jp
lret
mov
pop
andl
int3
rcr
jmp
adcb
movsl
icebp
ja
or
inc
cmp
sbb
je
jp
push
jg
les
inc
rolb
jno
jecxz
mov
mov
sbb
xchg
jbe
pushw
jle
fwait
repnz
dec
adc
dec
movsb
inc
ret
incb
xor
adcl
or
xchg
idiv
and
push
nop
inc
lods
enter
call
jle
and
pushf
sahf
je
jae
mov
cli
xchg
stc
adc
inc
sbb
mov
arpl
xchg
insb
aaa
into
popf
mov
adc
out
or
or
mov
sub
popf
xor
jp
inc
lods
adc
mov
push
scas
aam
adc
xchg
mov
add
popa
xchg
cltd
and
adc
pop
inc
mov
cmpl
and
or
and
pop
jg
inc
mov
fildl
ret
fucomip
loope
xchg
mov
push
scas
repnz
stos
lret
xchg
and
jl
movsb
js
shlb
fucomi
shlb
pushf
add
adc
adc
mov
popa
cld
xchg
stos
cmpsb
sbb
cmp
scas
cmp
push
adc
and
inc
mov
adc
lods
mov
out
dec
jae
xor
fisttps
adc
daa
pop
lods
mov
scas
call
cmp
ljmp
jno
imul
es
pop
lods
inc
mov
in
in
outsb
ror
bound
mov
jle
mov
addr16
xchg
sub
loope
mov
outsb
add
rclb
and
cld
cld
xchg
dec
or
aam
imul
aam
mov
dec
and
mov
sub
divb
sub
lock
cli
int3
nop
daa
jo
aam
mov
cmpb
push
dec
pop
dec
mov
sub
loopne
pop
scas
repnz
xchg
ret
repz
adc
xor
cld
mov
das
in
dec
out
inc
dec
lret
test
loopne
fnstcw
push
jmp
sti
lds
add
js
lds
adc
lret
aas
hlt
adc
mov
fisttpll
fs
xor
stos
mov
inc
push
jns
sub
inc
dec
add
out
roll
cmpsl
imul
push
mov
mov
ds
das
xchg
decb
pop
or
push
stos
jl,pt
out
rolb
repnz
call
xlat
out
inc
inc
and
sar
sbb
mov
cmp
fwait
cs
cmp
arpl
xor
push
adc
xchg
cmpsl
add
xchg
out
test
or
lock
sbb
repz
mov
xor
loopne
enter
pop
test
loope
stos
inc
xchg
add
push
imul
in
cmp
les
xor
or
cltd
test
jmp
pop
push
fldcw
pop
xchg
cs
pop
les
ja
inc
lods
int
dec
std
cli
or
xor
mov
aas
or
aaa
jnp
inc
xor
push
aas
popf
jb
int3
pop
or
imul
cmp
imul
and
call
or
cmp
icebp
xchg
sbb
sub
push
test
xor
pop
jmp
inc
xlat
fistl
push
les
lcall
leave
adc
jo
inc
scas
and
les
shll
push
shlb
xor
fildll
mov
lret
mov
icebp
dec
cmp
jle
sub
rcr
jmp
lret
int3
stc
xor
push
jg
push
loop
xchg
lret
repnz
cmpsl
bound
cmp
mov
push
mov
stos
mov
xorl
popa
add
pop
adc
icebp
enter
sub
rcll
ds
mov
mov
out
adc
insl
jmp
or
int
fs
loope
mov
icebp
js
in
int
stc
jp
cmp
lods
outsl
aas
sbb
rcll
loope
jns
xchg
adc
inc
jne
sub
loop
outsb
mov
dec
cmpsb
pop
scas
and
in
insb
in
daa
fimull
rol
jmp
aaa
shll
dec
jl
aad
mov
push
cmp
mov
adc
insb
lahf
test
or
fldcw
stos
into
push
pushf
push
not
ret
mov
adc
cmp
aam
les
lods
ds
jnp
ret
jbe
jnp
outsl
push
mov
adc
add
mov
cmp
push
mov
push
jae
scas
in
jbe
mov
mov
leave
pusha
cmpsb
sbb
adc
mov
mov
xchg
scas
jne
in
mov
mov
ljmp
adcb
or
xor
ss
ss
mov
xor
push
jno
mov
cmpsb
in
pop
lret
add
mov
je
outsl
push
hlt
lods
jl
int
xlat
je
or
adc
push
cli
push
sub
aaa
or
je
inc
cs
or
cmp
lret
jmp
xchg
sub
int3
dec
cmpsl
les
roll
mov
bound
push
sub
mov
or
sbb
xor
ffree
lea
ds
fwait
outsb
sahf
icebp
insb
aaa
leave
int
mov
add
sbb
or
push
mov
xor
mov
push
fldl
in
pop
push
aam
leave
mov
xor
jno
push
test
lret
out
cmp
cld
sub
dec
fstpl
add
pushf
std
in
or
mov
pop
decb
jno
aaa
call
xchg
jmp
jno
inc
iret
scas
inc
call
arpl
and
xor
add
pop
insb
cmp
mov
xor
jns
push
leave
int
adc
in
jnp
dec
lods
movsl
insb
add
int
movsb
mov
repnz
scas
and
ficomps
mov
int3
aaa
xor
fsubs
or
dec
lcall
mov
scas
mov
or
jle
daa
cs
pop
aad
pushf
cli
fwait
dec
sub
in
daa
loopne
loopew
sbb
imul
fdivrl
pushf
inc
adc
xchg
push
sbbb
push
and
test
mov
sbbl
xor
jg
lds
pusha
push
or
dec
dec
dec
pushf
or
lea
cmp
lret
push
adc
int
cmp
shrb
push
jmp
mov
or
ljmp
loopne
ja
add
cmp
xchg
cwtl
gs
sbb
pop
test
insl
sub
in
scas
and
js
pop
cmp
mov
loopne
sbb
mov
mov
fs
mov
adc
sub
inc
js
jg
daa
inc
rcrb
jns
sti
xchg
inc
adc
add
andb
int
jl
cmc
in
xchg
inc
xlat
ret
sub
pop
mov
lret
jne
adc
push
lods
rcrl
pop
pop
les
lcall
test
sub
ret
jo
add
and
test
mov
popa
pop
ret
sar
call
jecxz
call
add
loop
dec
cmp
jg
mov
lahf
sbb
leave
nop
mov
loope
dec
pop
mov
mov
inc
fdiv
test
nop
mov
push
shl
mov
cmp
lret
daa
lock
stos
xchg
jo
imul
dec
mov
js
or
mov
sub
lahf
sub
sbb
rclb
rcrl
mov
xchg
mov
pusha
imull
lret
pop
jle
push
mov
and
int
incl
xor
cmc
or
cs
sub
fxch
lods
inc
sti
add
or
mov
lret
push
cmp
push
insb
outsl
fidivl
adc
mov
in
lret
cld
mov
fwait
and
jp
addr16
repnz
cmc
mov
cmp
mov
or
pop
call
mov
push
fwait
mov
shl
mov
xchg
mov
rcr
jg
mov
pop
sbb
or
jp
pop
ret
mov
and
jno
push
outsl
sti
push
adc
test
xchg
and
push
mov
repnz
inc
dec
lahf
push
insb
icebp
mov
cmp
jecxz
mov
add
aam
cs
mov
rcrb
in
lds
ss
incl
mov
daa
ss
mov
pop
dec
lods
add
ss
pop
or
mov
cwtl
xor
mov
push
mov
xlat
mov
inc
cltd
cwtl
pop
jo
mov
mov
test
ret
inc
mov
jg
cmp
push
test
in
push
mov
imulb
aaa
push
cmp
pop
out
aam
pop
push
fdiv
mov
cmp
mov
adc
inc
dec
push
mov
aam
jg
cwtl
decb
lods
cli
dec
pop
testb
sarl
add
mov
fsubrs
loopne
and
dec
jl
sti
stos
push
call
rclb
arpl
cld
mov
push
negl
dec
pop
cld
lret
jae
gs
mov
aaa
xchg
pop
push
iret
inc
lods
out
dec
insl
inc
sti
lahf
pop
fsubrl
pop
cmp
cmp
inc
fs
push
test
push
mov
ret
into
pusha
or
mov
das
es
cmpsb
popa
stos
jne
jns
inc
and
xchg
pop
incb
inc
cmp
sbb
inc
sahf
sbb
mov
in
xchg
mov
ds
pop
cld
daa
sub
push
sbb
sub
lcall
pop
negb
inc
leave
xchg
jl
push
lret
aam
outsb
fldt
das
xchg
shl
ja
arpl
js
xchg
push
insb
push
sub
inc
and
enter
aas
dec
rcrb
mov
add
push
ds
sarb
loopne
mov
dec
mov
lods
pop
push
out
in
mov
pcmpeqb
mov
fbstp
pushf
mov
push
out
stc
shrl
mov
add
ret
enter
xor
in
lret
sbb
pushf
arpl
lods
xchg
leave
add
push
add
push
add
pop
icebp
ljmp
jp
xor
mov
inc
push
arpl
lock
inc
insl
mov
insl
fstps
leave
push
cmp
mov
ja
bts
adc
rcrb
and
in
and
cmp
je
xchg
sub
pop
icebp
scas
iret
mov
stos
insl
leave
xor
decl
stc
mov
xchg
jns
sbb
sbb
bound
pop
and
aas
xchg
insb
push
add
jno
mov
push
aaa
es
xchg
mov
xchg
cmp
je
lds
lock
cmpsb
sub
xchg
dec
ja
out
js
fsubrp
je
cli
cmp
mov
mov
rclb
test
mov
fsub
push
sbb
int3
xor
int
cmc
xchg
into
xor
shlb
into
push
xor
test
jae
xor
in
dec
adc
fwait
adc
ss
push
lods
push
lahf
inc
in
xchg
and
lret
aaa
or
imul
movsl
movsb
js
jl
imulb
scas
jge
xor
dec
mov
xchg
xor
test
xchg
push
inc
test
jbe
jmp
fisubrs
xor
leave
push
fwait
sbb
sbb
mov
stc
arpl
adc
pop
dec
xor
jp
int
sub
mov
xor
pop
xor
aaa
test
mov
sub
push
jo
fdivrl
fisttpll
cltd
jns
or
or
fldt
push
sbb
mov
mov
dec
mov
in
add
rolb
add
clc
dec
jl
mov
sbb
jbe
jno
or
movsl
sti
sahf
ds
jl
repz
jo
out
sbb
dec
jmp
mov
mov
xchg
sbb
mov
out
mov
and
mov
inc
int3
test
leave
jns
push
mov
push
and
test
lret
jle
adc
inc
pop
adc
sti
out
jp
push
sarb
pop
insl
icebp
jbe
and
in
scas
inc
sahf
or
pop
jge
push
xor
pop
decl
stc
cmp
nop
daa
pop
cmp
jno
fimull
aas
outsl
call
cmp
add
jne
push
pop
jecxz
dec
gs
test
cmpsl
push
lea
mov
jle
nop
movl
in
cmp
daa
cmpsb
repnz
xor
dec
push
ljmp
call
xor
ud1
cmp
shr
mov
xchg
cmpsl
out
push
xchg
xchg
std
xchg
ret
mov
cmp
fstl
pushf
lea
aaa
mov
dec
mov
sahf
arpl
mov
pop
mov
out
cmpsb
out
xchg
xchg
jns
ret
mov
es
lea
xchg
mov
fwait
push
mov
sbb
push
loope
xlat
sbb
add
and
mov
cli
les
or
mov
adcb
mov
nop
test
dec
mov
xchg
push
or
push
insl
mov
mov
inc
data16
ret
xchg
pop
adc
add
mov
pop
scas
and
push
lods
outsl
adc
rorb
outsb
repnz
and
xchg
sub
mov
pop
adc
pop
mov
xchg
mov
push
push
mov
push
daa
jne
loop
pop
mov
psrad
bound
pusha
xor
lcall
xor
lds
cmp
pop
out
pop
push
insb
cmc
ret
dec
ret
iret
push
jecxz
push
sar
mov
mov
sub
push
fsubrs
ret
dec
inc
clc
xor
adc
sti
adc
cmp
movsb
inc
xor
mov
xchg
fnsave
ret
add
mov
movsl
adc
sub
push
cmp
push
movhlps
idivb
mov
mov
out
mov
pop
nop
mov
rcll
pop
popf
push
sub
dec
push
sub
pop
scas
mov
outsb
inc
sub
loopne
and
leave
add
mov
dec
push
dec
imul
hlt
dec
or
cs
outsl
mov
push
mov
cmpsb
movsl
cmp
push
aas
outsb
xor
push
in
jns
test
sub
shrl
adc
loop
les
mov
enter
leavew
jecxz
pusha
pop
xchg
call
cmp
pop
mov
call
pop
mov
push
sbb
cmp
pusha
cli
inc
stos
mov
lds
rorb
mov
adc
int
xchg
pop
ljmp
pop
adc
jbe
enter
mov
lods
jmp
lret
and
push
lea
xor
mov
jl
js
pop
movsb
subl
lods
cmp
pop
icebp
popf
dec
incl
insb
dec
xchg
test
jb
sub
inc
add
loop,pt
and
jb
sbb
in
mul
or
mov
ja
arpl
rcrb
invd
add
sbb
xor
pop
jmp
clc
xorl
addr16
cmp
xchg
dec
pop
int
xchg
aas
sbb
jmp
mov
call
mov
js
scas
test
lret
cs
std
xor
or
in
test
pop
sub
dec
stos
pop
or
test
lds
sbb
imul
push
out
lahf
lea
pop
mov
xchg
out
lods
jo
adc
pop
xchg
xor
mull
daa
insb
in
into
outsb
sbbl
and
ja
cmp
mov
daa
mov
sbb
ret
adc
cld
rorb
add
pop
movsl
sub
mov
xor
jl
repnz
adc
cmpsb
xchg
adc
fs
xchg
stos
ds
mov
pushf
loop
inc
dec
out
daa
add
inc
cltd
repnz
mov
jbe
jg
aas
mov
jnp
inc
push
out
clc
into
insl
inc
lret
sbb
divl
push
into
aas
mov
popf
dec
loopne
leave
addr16
mov
js
dec
and
jg
mov
pop
adc
push
inc
dec
add
mov
test
mov
out
sti
fwait
inc
pop
pop
adc
mov
cld
mov
stos
inc
fldt
push
xorl
outsl
daa
pop
cmc
pop
lret
into
ds
xchg
out
push
lods
int3
xor
sub
fsubrs
loop
sub
fistpl
dec
add
repz
inc
in
mov
xchg
aad
dec
mov
adc
lods
cltd
xchg
imul
sub
shrb
and
or
mov
jne
out
imul
and
jbe
add
sub
dec
test
cld
xchg
cmpsb
rcrl
sub
jmp
add
fcomi
push
or
ja
into
mov
push
jb
sub
mov
in
cmp
pop
scas
add
ja
imull
sbb
ficoml
bound
pop
and
xor
in
inc
rorl
push
ret
inc
mov
outsl
adc
xchg
dec
ret
incb
mov
mov
scas
jp
in
fsubs
add
add
in
outsl
int3
push
cwtl
daa
mov
test
add
push
mov
xchg
cld
loop
or
adc
sub
outsl
fstps
fwait
loopne
ljmp
mov
cwtl
xor
push
mov
cmp
les
mov
jbe
push
out
cmp
fcmovnu
jb
repz
stc
outsl
popf
bound
test
mov
jb
lret
or
punpckldq
test
jl
cmp
das
inc
pop
lock
inc
xchg
mov
xor
repz
lock
call
and
mov
sbb
pusha
fistpl
cmp
cltd
add
jecxz
lods
and
imul
daa
adc
jecxz
jne
cmp
pop
sub
iret
les
into
sahf
mul
scas
mov
movl
ret
out
jmp
inc
push
push
ficoml
cmp
imul
out
mov
adc
aam
xor
mov
outsb
cmc
mov
mov
iret
mov
xor
lea
aad
add
mov
shrl
shlb
jp
sub
mov
mov
sub
call
dec
lret
pop
insl
les
pop
pop
dec
fcompl
mov
jp
popa
nop
imul
and
jle
sti
rorb
jne
dec
cmp
and
lahf
add
adc
push
or
inc
push
pop
repnz
stos
jecxz
in
jbe
scas
mov
add
and
dec
out
push
out
and
ljmp
jge
gs
xor
lret
push
adc
inc
jae
mov
add
fistps
xcrypt-ecb
cmpsl
iret
out
mov
and
push
lods
mov
sub
outsb
rol
cs
fnstenv
roll
mov
gs
out
and
clc
xor
jmp
test
test
stos
fs
add
cmp
cmp
mov
add
mov
jp
nop
les
loopne
fisttpl
mov
push
mov
mov
inc
adc
xor
mov
sbb
ds
mov
adc
out
mov
repz
data16
sbb
sahf
jl
dec
outsb
and
pop
inc
enter
mov
icebp
mov
dec
rcrl
cmp
and
pop
pop
xor
xor
inc
addr16
xchg
or
aad
sub
repnz
scas
sub
fs
je
jge
lods
call
pop
pop
jmp
loop
adc
repz
stos
mov
mov
daa
ljmp
je
mov
pushfw
cmp
xchg
cmp
lahf
adc
negl
lods
dec
adcl
js
jmp
push
loop
cmp
stos
add
dec
push
loop
icebp
rcr
cmp
iret
cmp
aam
dec
adc
icebp
cmp
push
adc
out
repnz
in
sbb
mov
movsb
mov
std
xchg
cli
mov
call
mov
jne
sub
jo
sub
cmp
cmp
stos
fucomp
lods
sub
jns
lods
push
adc
cmp
lahf
shrb
mov
mov
lods
jnp
cmpsl
xorb
fnstsw
mov
adc
lcall
lret
cmp
and
neg
rcl
sbb
sbb
fiaddl
and
sahf
js
mov
ss
fisubs
in
jp
int
repnz
xorl
sbb
push
and
xchg
sub
push
pop
mov
mov
push
out
in
push
sahf
sahf
repz
mov
sub
jg
inc
mov
fs
dec
xchg
mov
jle
dec
call
mov
cmp
pusha
cld
sub
sbb
sbbl
cmp
add
jecxz
mov
push
push
lds
mov
in
push
pusha
popa
sbb
fs
mov
movsb
popa
out
xorl
or
imul
adc
fsubs
cmp
mov
adc
adc
dec
std
fwait
and
insb
xchg
xor
cmc
mov
sbb
test
sub
fadd
out
stos
pop
rclb
push
jecxz
cmp
and
sbb
push
mov
inc
mov
fidivl
aaa
stc
and
jmp
sbb
mov
das
mov
and
push
pop
fiadds
js
call
cltd
std
enter
and
xchg
jmp
gs
imul
fwait
sahf
mov
decl
inc
in
and
popf
fwait
jae
inc
sahf
xchg
xchg
and
or
cwtl
movsb
xor
sbb
lahf
ret
add
pusha
test
call
adc
pusha
out
xchg
mov
outsl
fimull
mov
add
inc
cmp
aad
jg
fstpl
cld
dec
test
sub
loop
add
std
pop
adc
dec
fcompl
in
and
dec
repnz
pop
or
xor
cmpsl
popa
shlb
or
mov
nop
fbstp
inc
into
dec
sub
aam
sahf
jno
movsb
inc
fcmove
dec
fsubrl
cmc
jmp
xchg
sub
jle
mov
inc
rclb
mov
add
sub
sbb
dec
jecxz
ret
mov
incl
insb
jae
fiaddl
sti
std
stc
inc
das
mov
ljmp
xor
or
jns
ljmp
inc
cmp
rorb
in
lock
dec
xchg
mov
dec
fxch
out
cld
xchg
js
fidivs
loope
add
jo
or
or
shll
adcl
fs
cltd
dec
shl
aas
mov
fildl
jecxz
sbb
mov
dec
dec
mov
sbb
push
mov
fcmovnu
cmc
dec
lret
add
push
add
adc
rclb
fsubl
loope
mov
mov
mov
jle
stos
fs
outsb
pushf
scas
bound
jne
jb
out
jecxz,pt
sbb
inc
add
inc
test
in
push
xor
dec
xor
mov
out
jge
dec
imul
addl
and
fidivrl
test
xchg
sbb
mov
lahf
lods
mov
cmpsb
pusha
pop
in
or
cmp
ljmp
or
into
sub
cmp
and
push
sub
inc
mov
test
mov
decb
add
mov
push
dec
loope
push
loopne
aaa
dec
push
jae
push
stc
imul
jg
add
xchg
cmc
cmp
jg
adc
xlat
lds
cmp
movsb
outsl
xchg
mov
je
mov
jmp
push
xchg
xor
in
inc
cmp
mov
inc
fldl
fstpl
or
and
inc
loope
cmp
push
data16
push
test
out
sbb
xor
outsl
pop
lret
pushf
mov
mov
aam
mov
inc
adc
cmp
xchg
mov
mov
lcall
xchg
test
jno
std
dec
sahf
push
mov
movsb
sti
inc
clc
fmuls
out
jg
cmp
pop
addr16
imul
mov
pop
test
aaa
or
lret
enter
in
sub
in
jl
dec
cmp
pop
dec
sub
in
test
and
xchg
xchg
dec
adc
inc
bound
lahf
ss
addl
lock
insl
aad
push
scas
jl
or
pop
sbb
push
mov
cmpsb
test
mov
jne
sbb
add
sti
es
and
in
fucomip
mov
pop
jo
fcoms
inc
cwtl
leave
je
test
fsts
push
scas
xor
sbb
xchg
addr16
mov
xor
adc
dec
mov
lret
jb
test
mov
ret
pop
pop
mov
adc
sub
push
cmp
stos
inc
adc
js
cmp
dec
out
pop
aaa
push
pop
nop
repnz
fwait
movsb
cmp
adc
push
sub
adc
rcrb
pop
jne
scas
dec
loope
add
repnz
in
and
cltd
cmp
or
sub
popf
je
inc
std
lods
and
xchg
xchg
push
arpl
pop
mov
fidivl
out
dec
pop
das
and
scas
das
stos
fsts
inc
sub
adc
mov
add
mov
mov
std
leave
mov
dec
jnp
mov
fists
mov
sub
imul
pusha
ss
fisttps
enter
cmp
bound
cmp
jle
fisttps
lods
cmp
arpl
dec
push
fisttpll
mov
sbb
mov
shlb
pop
aad
mov
jno
aam
pop
ss
jo
roll
pop
jle
adc
arpl
arpl
ljmp
jge
dec
mov
xor
dec
fcoml
fiadds
mov
in
sub
aaa
and
sbb
cs
cmp
sub
sbbl
xchg
mov
int3
out
lcall
pop
inc
cltd
mov
pop
popf
jne
or
add
dec
and
pop
outsb
cmpsl
imul
aam
fcmovne
pop
adcb
cmc
lret
xor
push
mov
clc
mov
inc
ret
and
test
movsb
push
hlt
or
inc
std
leave
jg
xchg
push
arpl
pop
cmp
repnz
push
inc
out
jecxz
data16
stos
out
add
ret
jle
cmc
mull
jns
pop
lods
mov
xchg
loop
ja
or
cmc
out
out
adc
sub
push
mov
sbb
into
lcall
inc
jnp
aad
fsubp
pusha
push
mov
loope
roll
sub
movsl
inc
rcl
jae
scas
and
js
fisubs
fisubrl
jbe
or
imulb
and
cmpsb
jge
pop
daa
test
loope
or
jmp
test
inc
dec
jne
sbbl
cmp
call
out
test
aas
xchg
sbb
jo
popl
mov
popa
mulb
aam
sbb
jl
mov
addr16
aaa
inc
jle
decb
cwtl
das
or
push
sahf
sub
push
test
jge
xor
sahf
push
add
sbbb
pusha
outsl
sbbb
sbb
pop
stc
or
hlt
mov
push
fstps
ret
std
push
and
jns
sahf
sahf
jl
les
lods
pop
cmp
lds
dec
call
and
cmp
adc
ds
call
insb
add
hlt
xsha256
cmpsb
adc
fs
push
sahf
out
fs
popf
lahf
lsl
ds
mov
push
add
xchg
sbb
xor
dec
gs
mov
outsl
fwait
dec
sub
fcmove
mov
mov
pop
mov
xlat
sbb
push
call
mov
jmp
mov
faddl
cld
cmpsb
or
and
movsb
sti
sahf
cltd
adc
xchg
mov
pop
fwait
cwtl
sbb
jbe
icebp
inc
in
inc
adc
sbb
jo
xor
aad
push
cwtl
insl
int3
sbb
outsb
loop
sbb
out
out
dec
rcrl
outsb
sub
test
in
add
dec
mov
pop
not
mov
jo
mov
ret
popf
add
pop
ret
shll
fists
ljmp
jno
add
cmp
adcb
int
sbb
in
lea
push
ljmp
out
cmp
pusha
mov
dec
cmp
fdivr
scas
or
push
flds
mov
scas
cmp
jb
movsl
push
popf
jb
lahf
daa
mov
nop
jne
jo
sbb
in
dec
cmp
negb
jbe
js
ljmp
add
push
lock
add
gs
xchg
dec
sbb
inc
test
ljmp
sub
push
inc
mov
loop
lret
fstpt
mov
fidivl
and
mov
xchg
shlb
outsl
gs
jb
mov
mov
push
pop
xor
cmpsl
ret
add
mov
das
mov
aaa
sbb
rcrl
je
std
cmpl
sub
jae
mov
push
shrl
jne
inc
xchg
sbb
and
xor
aaa
pop
fprem
xchg
int3
je
fldenv
sbb
fadds
mov
call
sub
dec
mov
scas
loope
inc
adc
jp
or
adcl
pop
shll
enter
scas
mov
xchg
ljmp
outsl
ret
rorl
push
jl
mov
jo
mov
mov
stos
lret
xchg
lods
inc
clc
repnz
push
cwtl
cmpsl
sbb
push
mov
aaa
mov
cli
add
mov
jecxz
sbb
pop
int3
sahf
cld
adc
enter
lret
mov
xchg
test
mov
or
lcall
fs
outsb
sbb
popa
fucomi
xchg
xor
and
data16
hlt
repnz
lret
inc
cmc
cmp
out
lcall
push
out
fbstp
xchg
sbb
jg
lods
cmp
fxtract
rorb
mov
loop
cmc
in
sti
ret
es
pop
xor
gs
mov
jmp
fs
in
cmc
cmp
subl
into
sbb
push
testl
sub
test
add
or
data16
jg
insb
mov
jp
pop
ret
push
or
xchg
sbb
adc
cmpsl
scas
lods
arpl
xchg
shlb
mov
subl
cmp
into
dec
sub
xor
push
or
jne
jo
aas
mov
mov
mov
jmp
cmp
push
cmp
inc
push
xchg
ja
mov
or
fisubl
dec
ret
insb
push
mov
adc
inc
pusha
scas
xor
lahf
adc
adc
movsb
xchg
ds
xor
pop
test
bound
gs
icebp
mov
ficoms
dec
adcb
sub
outsl
mov
or
ljmp
inc
stc
dec
aad
push
cmp
xchg
scas
mov
mov
dec
scas
dec
mov
arpl
pusha
xlat
mov
mov
push
rcrl
lds
xchg
aaa
test
lds
iret
dec
pop
jno
xor
xor
mov
adc
je
pushf
cmc
mov
fildll
setb
sti
dec
jge
test
adc
rcrl
sahf
outsb
out
arpl
dec
pop
out
imul
xchg
lods
mov
xchg
adc
scas
dec
scas
psubd
insb
popf
repz
mov
scas
jle
shrb
push
mov
rolb
jmp
add
adcl
mov
mov
int3
pop
outsl
inc
arpl
in
int
daa
add
inc
and
or
pusha
or
mov
mov
fsubrl
inc
push
sbb
push
arpl
adc
sahf
xor
shll
or
outsl
push
je
test
sub
add
fdivl
dec
test
rol
mov
fcomip
mov
mov
jno
jb
ds
inc
or
mov
mov
xchg
out
lods
inc
cmpsl
push
mov
shlb
cmp
sub
idivl
rorb
lods
scas
stos
lcall
mov
fcmovnu
rcrl
mov
push
shlb
lods
in
js
gs
xchg
repnz
lcall
inc
in
pop
negl
push
adc
inc
inc
stc
jne
pop
cmpsl
mov
pop
repz
cmp
movsb
jp
lea
iret
mov
dec
dec
leave
mov
jecxz
cs
jb
mov
nop
push
jae
dec
add
cmpsl
out
lock
adc
popf
sbb
jmp
push
sbb
pop
cli
adc
mov
or
leave
sub
jl
inc
sbb
rorb
mov
mov
insb
pop
test
aaa
push
sbb
hlt
pop
call
dec
addl
shlb
fcmove
jns
shll
pop
aaa
repz
mov
iret
incb
xlat
cwtl
cmp
xor
mov
wbinvd
call
fcompl
sbb
out
or
add
mov
ret
decb
rorl
imul
fs
scas
xchg
test
jbe
sub
dec
mov
cld
or
imul
or
mov
mov
xchg
or
ljmp
add
pusha
imul
xor
sub
add
and
js
inc
ficoms
adc
leave
cmp
in
dec
pop
call
in
mov
jl
pop
rcrl
and
cs
js
adc
mov
push
inc
mov
jo
addr16
adc
aas
cmpsb
mov
cld
jge
sub
mov
dec
pop
jns
mov
xor
outsl
pop
mov
pusha
push
xor
jns
pusha
mov
xlat
es
int
inc
mov
or
mov
arpl
xlat
adc
popa
inc
mov
sub
dec
jns
mov
xchg
mov
fs
add
jb
pop
je
rcr
in
fs
in
push
cmpsb
insb
inc
jge
mov
ffreep
pop
rcll
mov
cmp
ljmp
pop
or
in
ja
and
mov
out
pop
inc
fwait
mov
daa
imul
int3
jle
je
call
push
mov
cld
mov
ficoml
ds
jecxz
mov
mov
mov
aaa
orl
ljmp
inc
enter
test
sbb
cmp
fdivs
pop
xor
push
xchg
icebp
int
test
ljmp
xor
push
adc
movsl
adc
cmp
xchg
lods
lcall
xchg
cmpsb
andb
mov
icebp
xchg
cld
lcall
shrl
or
adc
popf
pop
nopl
xchg
gs
in
leave
or
push
push
jb
jno,pt
inc
frstor
and
push
xor
xchg
xor
fidivl
out
mov
clc
pop
sahf
xor
jp
scas
pop
repnz
mov
sbb
in
test
inc
push
mov
mov
fnstsw
call
lahf
cmpsb
fwait
jne
lods
loop
test
xor
pushf
jns
push
sbb
fistpll
push
xlat
data16
add
jno
les
pushf
nop
shlb
in
pop
xchg
call
mov
jg
push
mov
mov
out
les
sbb
dec
cmp
cmpsl
ds
test
leave
lea
and
sbb
push
mov
outsl
sub
pusha
or
pop
pop
outsb
adc
rcrl
into
aas
mov
add
movsbl
and
scas
fnstenv
adc
adc
fs
cmp
jl
adc
xchg
and
insl
adc
fsubl
mov
fstpt
test
cmp
or
dec
push
hlt
lcall
dec
sti
scas
stc
pop
jle
pop
daa
sub
mul
jp
jge
cmc
cmpsb
xchg
mov
push
xlat
outsb
test
les
in
xor
ja
inc
add
pop
cmp
repz
add
out
inc
xchg
mov
mov
mov
or
shrb
xor
adc
mov
sti
inc
fmull
fidivs
add
shlb
push
clc
and
push
dec
mov
movsb
mov
cmpsl
cld
nop
ss
ret
pop
cmp
lcall
popf
inc
sub
daa
sbb
fistpl
inc
gs
test
nop
daa
sub
xor
mov
test
aas
push
out
jo
pop
lahf
push
pop
jbe
dec
movsl
mov
sub
xor
ss
mov
popa
push
addr16
mov
rcr
outsl
mov
dec
sub
mov
lret
add
xor
les
js
xor
pop
std
nop
mov
inc
testb
sub
jp
mov
sub
into
and
cmp
cmp
dec
call
ret
addr16
sbb
outsl
fcomps
add
or
pop
lods
mov
adc
adcl
pop
sub
arpl
jbe
mov
xchg
mov
ficomps
scas
out
adc
into
jp
pushf
sbb
add
jnp
in
sbb
xor
shr
jle
test
jg
mov
inc
fwait
dec
pop
mov
out
cmp
xor
jno
jp
ds
sbb
xor
jbe
dec
or
xchg
test
pop
sub
stos
or
xchg
addr16
lret
es
mov
or
dec
out
mov
jne
cmp
int
or
pop
es
mov
mov
enter
mov
aam
add
mov
mov
ja
scas
gs
mov
and
xchg
cld
in
je
sbb
mov
addb
fcmovne
xchg
rolb
daa
push
shr
xorl
mov
repz
inc
mov
pop
sbb
test
pop
pop
cld
scas
movl
xchg
xchg
jo
jle
cld
fs
and
inc
mov
sub
sti
sub
imul
imul
jmp
cwtl
movsb
aas
mov
sbb
sti
aad
mov
stos
ficompl
fwait
dec
push
cltd
mov
iret
lea
adcl
pop
mov
andl
cmp
mov
bound
xchg
popf
or
cmp
push
mov
arpl
dec
push
adc
adc
rorb
add
adcb
imul
dec
cmp
pushf
imul
stc
lret
push
or
cs
cmpb
or
pop
int
aad
int
add
sbb
hlt
jecxz
xchg
in
lcall
xlat
addr16
jns
ficoml
cmc
xchg
aaa
stos
insb
sub
add
xchg
mov
mov
mov
hlt
movsl
mov
push
addr16
fldl
cmovns
lods
and
testb
add
or
sbb
sub
ja
jo
sbb
ljmp
lds
fcoml
dec
movsl
lea
dec
ja
push
mov
pop
mov
adc
stc
add
or
scas
cmp
xchg
or
pop
adc
inc
insl
mov
out
and
fdivrl
cmp
leave
pusha
js
jmp
fstpl
jne
addb
sbbl
into
pop
fwait
sub
notl
cltd
xor
mov
sbb
xor
leave
pop
sbb
push
popf
cmp
push
inc
loop
or
jb
mov
and
jo
add
call
mov
movsl
data16
cmp
clc
adc
cmc
inc
sbb
sub
jns
enter
push
dec
pop
mov
push
sbb
dec
je
in
sub
fbstp
push
stos
roll
js
push
pop
inc
cltd
test
lods
cmc
pmaddwd
rorb
mov
iret
es
xlat
sarb
xor
clc
adc
push
ljmp
jb
nop
fcmovne
es
andb
cmpsl
out
call
jne
mov
xchg
add
push
mov
add
movl
xor
dec
cmp
xor
sbb
sbb
dec
push
mov
or
or
and
mov
loop
mov
inc
push
test
mov
mov
xor
xchg
mov
jne
rcrb
mov
lds
pushf
movsl
inc
xchg
add
mov
push
stos
mov
pop
subb
jl
sub
pop
nop
jae
out
adc
movsl
ljmp
pop
icebp
loopne
call
add
subb
call
fisubs
test
std
push
pop
push
insl
cmpl
lahf
in
movsb
cmp
cmp
pop
cmp
lahf
test
and
out
inc
and
or
inc
xchg
xchg
mov
fists
mov
sti
or
inc
loopne
add
insl
rcrb
add
jge
mov
cmpsb
out
push
lcall
and
xchg
add
icebp
xor
xlat
clc
and
push
add
adc
mov
pop
jbe
iret
cmpsl
jge
add
in
push
lret
std
or
or
jbe
flds
and
cmpsl
add
jmp
and
aad
push
cwtl
mov
loop
jge
lahf
and
or
cmp
dec
sbb
mov
fsubs
adc
loop
mov
xor
imul
or
adc
lock
mov
xchg
fidivrl
or
mov
mov
imul
mov
push
inc
in
jp
fsts
xor
push
add
clc
cmp
aaa
stos
jo
inc
xlat
adcl
fmull
mov
fiadds
arpl
pop
popa
mov
adc
push
rcrb
push
in
pop
loope
cli
out
ds
montmul
cmpsb
ret
jne
das
addb
movsb
fnstenv
push
fstpt
mov
mov
push
addr16
test
sbb
das
mov
call
in
inc
pop
xchg
into
das
cli
mov
dec
in
xchg
scas
xor
pop
out
jge
lods
mov
and
hlt
or
jns
xor
fimull
iret
inc
xchg
call
or
jle
sbb
xchg
lods
imul
sub
ja
cmp
mov
add
in
cld
mov
sbb
jno
cmp
mov
push
out
lock
pushf
ds
cmc
mov
jb
sbb
lds
mov
xchg
adc
pop
movsb
and
loop
loop
adc
ds
inc
test
nop
bnd
cmp
shrb
mov
mov
daa
loope
jo
pusha
mov
mov
repz
jle
xor
pop
xor
add
xchg
xchg
push
sarl
hlt
push
shlb
outsl
cmp
frstor
insl
nop
dec
cmpb
mov
cmp
or
cmp
cmp
pop
pop
jo
in
pushf
and
movsl
mov
test
enter
or
pop
scas
jo
xchg
mov
xchg
sub
aam
sub
pop
inc
inc
fsubrs
add
idivb
mov
leave
imul
jmp
xchg
pop
cmp
scas
test
jns
sub
aaa
pop
jo
push
cltd
cli
xchg
jecxz
out
fwait
mov
sub
inc
and
fimull
sbb
jg
decb
inc
dec
pop
pushf
xor
dec
push
repnz
mov
outsb
fldl2t
fdivs
pop
jb
cmpl
cltd
stos
enter
cwtl
or
das
push
jmp
in
mov
inc
add
fldl
mov
xor
aaa
into
xor
adc
aam
add
pusha
shll
arpl
jae
daa
scas
imul
lret
xchg
sub
jle
mov
mov
inc
fcmovbe
mov
popa
divl
fdivrs
test
inc
cmp
jl
adc
xlat
sbb
movsl
xchg
jecxz
adc
inc
add
stc
pop
mov
andb
js
or
inc
rolb
adc
push
mov
mov
test
jno
movsl
movsb
mov
mov
lret
adc
pop
sbb
test
fdivs
xchg
jb
ret
pop
aad
jecxz
bound
add
in
pop
pop
inc
loope
push
jae
or
ret
sbb
pop
repnz
std
lods
cmp
fmuls
bound
dec
scas
lods
ss
pop
mov
or
inc
xchg
pop
mov
xchg
loopne
cwtl
sbb
pop
cmp
imul
xor
pusha
sarb
lret
push
and
push
je
repnz
inc
lret
and
jno
push
dec
cmpsl
cmp
shll
out
lds
or
fsts
ss
xor
jmp
addr16
jp
mov
mov
sarb
cld
xor
jecxz
inc
les
push
or
les
fldt
fists
sub
push
lods
stos
xor
xchg
push
pop
inc
push
dec
fildl
popf
push
std
fisubs
adc
aas
dec
aad
mov
or
insl
outsb
cmp
or
nop
sbb
in
inc
nop
daa
sub
cmp
push
dec
mov
mov
and
dec
iret
push
lea
xchg
ret
xchg
adc
cltd
nop
daa
lret
test
mov
xlat
and
or
pushf
fisttps
lret
out
mov
and
lret
ficoml
adc
int
popa
jg
push
ret
stos
pop
test
testb
iret
cmpsb
fnsave
jns
cmpb
push
dec
leave
aad
cli
jo
inc
shll
add
movsb
mov
mov
out
mov
std
inc
rcl
jno
cmpsb
cmp
leave
mov
jecxz
cltd
icebp
dec
add
test
pop
imul
pop
jle
repz
inc
fidivrs
pop
shll
data16
dec
aam
fidivrl
pop
mov
xchg
shlb
inc
xlat
push
inc
push
scas
pop
jne
adc
idivb
pop
ja
nop
addr16
rcrb
jle
out
out
push
mov
addr16
push
fs
mov
pop
imul
fwait
sbb
mov
cmp
inc
outsl
add
inc
frstor
inc
jp
and
jl
adc
lods
pop
test
cmpsl
push
jae
cmc
fstpt
aad
cmpsb
fsubrs
repnz
push
es
loop
jns
lods
and
xor
fimull
adc
sti
sub
dec
stc
jg
sahf
imul
stc
aam
fadd
hlt
xchg
jb
adc
or
mov
fidivrl
dec
in
pop
push
shlb
push
popf
mov
jne
lea
repnz
or
cmp
mov
lahf
push
movsb
leave
jmp
cli
in
mov
mov
inc
fs
aaa
movsl
repnz
pop
mov
pop
clc
and
mov
scas
dec
int3
gs
cmp
bound
jb
mov
jns
popf
sahf
mov
test
jmp
inc
ja
cmc
push
mov
cmp
cld
and
insl
xor
jge
push
and
in
inc
cld
lea
stc
sub
xchg
push
xchg
out
xchg
cmp
push
mov
sbb
test
js
or
cmp
cmc
dec
adc
push
inc
dec
adc
push
popa
pop
ret
or
jbe
sbb
adc
jge
scas
pushw
lret
jb
lcall
loope
mov
loop
ret
jecxz
jnp
or
test
push
pushf
cli
test
scas
adc
imul
xor
dec
push
add
xchg
out
loop
jbe
dec
push
and
and
leave
test
iret
mov
jne
sbb
sub
mov
cmpsl
cmc
dec
pop
shlb
mov
repz
xchg
cmp
push
test
int3
xor
cmc
mov
inc
aas
divl
fbld
xor
mov
pop
pop
mov
mov
jl
mov
cmpsb
push
fdivrs
pop
sahf
scas
fcomip
cs
sahf
xor
mov
inc
cwtl
data16
std
cltd
lds
lcall
and
jns
jae
mov
mov
and
lahf
jbe
push
test
or
decl
scas
sub
adc
cs
aad
out
pop
out
mov
ljmp
das
popa
cmp
dec
rcr
xchg
jbe
pop
jge
mov
add
push
mov
inc
mov
and
les
sub
lret
pusha
lds
sub
fwait
ds
sub
inc
pushf
cli
and
dec
stc
lea
jns
mov
cs
sbb
sbb
add
rcrb
sub
stc
lds
mov
loop
icebp
enter
int
sub
cli
stos
inc
sbb
scas
inc
repz
popa
and
lret
inc
sub
jp
xor
add
and
push
pop
mov
iret
clc
push
scas
mov
cmp
sbb
lcall
and
ss
jmp
cmp
push
jmp
push
les
jmp
pop
mov
inc
ja
aas
cmc
cmp
es
aam
add
inc
and
ret
mov
les
fcoms
into
mov
dec
pop
and
mov
xchg
mov
and
pop
test
xorl
addr16
scas
mov
in
xor
cmp
pop
dec
adc
pop
pop
mov
jb
sti
pop
mov
or
lahf
sub
cli
xchg
adc
fnstenv
jg
push
movsl
outsb
subl
jg
xchg
mul
xor
mov
xor
sbb
lret
add
sbb
shll
ss
nop
sbb
rclb
xor
aam
inc
inc
push
add
test
xchg
xor
andl
adc
push
lods
out
popf
loop
mov
insb
add
dec
jo
pop
lea
stos
mov
fmull
stos
jl
cld
aas
std
shll
ret
fbld
adc
icebp
jle
sbb
mov
adc
sub
or
loop
fsts
ja
pop
shll
add
inc
rcl
and
push
arpl
mov
out
repz
icebp
leave
cmp
out
push
or
push
sbb
pop
dec
sbb
inc
ficomps
sub
mov
test
mov
int3
ss
add
aad
sub
ja
cmp
add
cmc
lea
sbb
mov
jmp
repnz
adc
nop
dec
xchg
rcrb
pop
fidivs
or
mov
arpl
cmpsb
les
aad
imul
std
or
xchg
add
or
mov
sahf
data16
sbb
movsb
cmp
ds
dec
adc
push
push
jnp
xchg
jge
into
test
sbb
sub
sahf
loope
adc
jp
jo
incl
sub
cltd
popf
lods
sarb
mov
test
mov
addr16
lcall
xchg
cmp
outsb
sbb
into
xor
cmp
out
test
pop
add
mov
inc
rol
dec
es
sbb
out
pop
adc
mov
push
je
dec
mov
dec
arpl
cmpsl
les
inc
sarl
mov
fisttps
mov
and
test
push
ficoms
nop
jg
jge
jmp
stos
mov
das
stos
sub
or
ja
push
dec
jl
loop
mov
cmc
loop
add
into
mov
stc
adcb
mov
mov
mov
shlb
lods
test
push
scas
xchg
sub
es
stos
in
fldcw
ret
pop
stos
push
xchg
repnz
int
sbb
jo
movsb
mov
ljmp
inc
pop
sbb
in
push
cwtl
repz
fldl2t
iret
imul
and
testb
push
sub
and
subb
mov
sub
push
data16
es
push
outsb
inc
rclb
push
sub
ss
ss
mov
addr16
mov
ss
xchg
fwait
jp
pop
inc
mov
push
mov
sub
inc
xchg
dec
mov
shll
movsl
jecxz
and
ret
dec
lcall
sbb
or
mov
mov
fisttpl
jp
daa
lods
mov
pop
mov
xchg
mov
push
mov
inc
hlt
inc
insl
push
movsb
mulb
xor
in
sti
mov
imul
sbb
mov
or
or
dec
stos
cmc
adc
fcoml
and
stos
jae
push
jno
dec
in
jbe
adcb
hlt
incb
mov
sub
mov
xchg
mov
test
jl
cmp
repz
mov
test
mov
movsl
cmpsb
ret
jmp
jmp
aam
stos
data16
popa
into
ret
arpl
xchg
xchg
movsb
pop
lret
sub
mov
les
nop
out
pop
lahf
ss
outsl
cli
push
dec
mov
sbb
mov
push
leave
xchg
mov
cmp
inc
frstor
inc
fs
cmc
fldt
shl
test
and
lock
push
jmp
push
dec
jo
cmp
xchg
jo
lahf
mov
sbb
out
dec
mov
lods
and
dec
movl
mov
fmull
push
lods
iret
mov
repz
lret
cmpl
lds
lds
in
mov
sub
sub
in
or
inc
pop
push
mov
lds
movsl
mov
xor
xlat
ret
jne
dec
adc
sub
push
mov
js
daa
daa
ss
adc
push
mov
adc
sti
mov
cmpl
outsl
pop
cmp
idivb
sahf
aad
sub
fnstsw
mov
sub
out
ret
or
jmp
imul
sbb
inc
lcall
and
add
ret
stos
push
lds
cmp
loop
add
jae
xchg
mov
dec
xchg
mov
clc
inc
ret
pop
out
push
push
jmp
imul
cmpsb
cmp
jo
arpl
sahf
hlt
push
sub
mov
cmc
adcl
cmp
test
adc
ret
icebp
lock
adc
inc
push
mov
inc
or
js
push
scas
adc
adc
das
sbb
mov
arpl
bound
pop
jno
push
ret
xchg
sbb
daa
push
mov
bound
xor
daa
jp
push
mov
daa
lods
dec
fistl
addb
xor
nop
pop
lock
test
lods
sub
xchg
xor
lods
mov
dec
stc
push
popf
out
enter
adc
inc
sub
nop
orb
inc
fwait
lcall
jae
iret
push
pop
mov
adc
shlb
lcall
rcll
loope,pt
clc
mov
fmulp
je
je
lds
dec
inc
mov
sahf
inc
adc
cmc
adc
imul
xchg
xchg
call
pop
gs
jle
pop
sahf
add
jno,pt
stos
ret
popf
subb
xorb
xchg
inc
es
movsl
js
fistl
bnd
test
fcom
xor
scas
sahf
or
adc
iret
pushw
xchg
std
xchg
into
subl
pusha
and
sbb
mov
mov
and
xchg
push
mov
mov
xor
pushf
pop
jno
add
mov
lret
mov
sbb
arpl
or
pop
outsl
mov
jecxz
xor
jae
adc
mov
jae
test
cwtl
push
add
xchg
imul
cli
mov
pop
push
imul
sub
imul
mov
mov
push
jb
push
pop
lret
push
stc
icebp
xchg
add
dec
arpl
xchg
addr16
jl
inc
or
adc
adc
fwait
leave
loope
mov
lods
inc
fcomi
pop
lcall
dec
pop
cs
inc
lretw
sub
pop
push
cmp
mov
xor
pushf
xchg
arpl
add
add
xchg
sub
or
das
outsb
sbb
dec
xor
sbb
inc
in
push
mov
mov
enter
mov
inc
cmp
je
movsl
dec
jecxz
mov
push
jle
shl
xchg
lahf
fnstsw
cmp
inc
cs
sti
push
les
push
stc
jnp
and
xchg
and
popf
faddl
shr
stos
sub
sub
shlb
fs
mov
mov
fsubrl
or
pop
movsb
test
push
mov
in
sub
stos
inc
inc
mov
dec
add
lods
jmp
cwtl
popa
loop
repz
stc
addr16
lods
cmp
bound
mov
xchg
ljmp
nop
call
mov
push
add
dec
lahf
jns
in
sub
add
xor
inc
lcall
inc
add
nop
sub
ret
mov
out
or
or
cwtl
outsb
cmc
push
mov
call
xchg
jnp
add
cld
dec
in
dec
sub
cld
mov
fcoms
xor
adc
xor
popf
inc
call
loop
xor
mov
jo
lret
mov
inc
fsubrs
lcall
and
in
mov
popa
mov
mov
insb
adc
pop
aaa
data16
imul
int3
clc
scas
xor
sarl
mov
adc
nop
pop
xor
pop
int
xchg
jnp
cld
xchg
jae
and
fistl
stc
mov
add
popf
or
stos
dec
pop
sub
sub
cmc
inc
mov
ja
mov
sbb
out
or
movsb
sub
out
lret
xchg
insb
jmp
xchg
int
xor
cmp
icebp
ljmp
test
stos
cmovg
test
movsb
push
test
pop
out
loope
std
je
mov
and
insb
jle
ljmp
movl
in
lret
cld
mov
fadd
sub
cmpsb
int3
dec
xchg
jb
mov
fisubs
mov
pop
fwait
xor
lea
inc
pop
push
mov
aaa
mov
mov
test
xor
pop
daa
les
mov
and
rorb
mov
and
cmp
aas
ret
pop
xorl
mov
push
mov
shr
jae
inc
bound
or
mov
dec
ljmp
sub
or
mov
jle
jp
in
xor
lods
and
xor
xchg
pushf
jne
shrl
out
push
ljmp
jno
push
sahf
andb
inc
fcmovnb
or
mov
jbe
jbe
fwait
out
std
xchg
hlt
out
sbb
lahf
sbb
mov
mov
mov
lret
push
jle
cmpsl
and
mov
nop
daa
cld
pop
push
imul
rorl
push
je
je
cmpsl
movsl
out
rcrb
hlt
jge
mov
movb
pop
fs
call
add
pop
mov
frstpm(287
inc
orb
adc
mov
pop
lods
inc
xor
dec
pop
cmc
or
cmpb
fisubs
push
inc
pop
out
cmp
stos
lods
and
fsub
enter
xor
inc
cmp
ss
in
dec
bound
add
adc
lahf
sbb
std
cwtl
in
jne
mov
fwait
pop
lock
leave
sbb
lret
pop
sub
shl
sahf
mov
shlb
sbb
faddp
mov
inc
cld
imul
or
mov
xor
pop
cmc
dec
dec
icebp
sub
mov
jno
mov
cmpb
push
and
mov
xchg
jmp
dec
xchg
push
aam
or
test
lds
cwtl
add
sti
iret
lods
mov
nop
push
out
js
je
or
ret
arpl
xor
faddl
pop
mov
fwait
xchg
inc
ficoml
insb
scas
cmp
call
mov
xor
dec
lahf
nop
mov
popf
xchg
ja
push
pop
out
inc
cmpsl
mov
pushf
pop
in
call
jo
sarb
test
xorb
sub
imul
stos
inc
lods
ljmp
xchg
mov
mov
inc
cli
inc
adc
dec
bound
sar
ret
loop,pn
inc
clc
mov
push
loope
push
jmp
mov
pop
adc
push
leave
xor
daa
mov
inc
outsl
roll
test
jo
negl
mov
imull
pop
sarl
and
xchg
jmp
popf
sbb
inc
mov
std
adc
xchg
mov
loope
mov
lea
push
mov
lret
int
icebp
sbb
movsl
mov
cmpsl
push
orl
lods
xchg
pop
filds
push
cmp
dec
insl
rcll
lods
inc
dec
add
and
out
scas
arpl
imul
mov
out
pop
mov
mov
pop
mov
aaa
ror
cmp
popa
in
call
mov
scas
inc
cmc
std
lret
int
insl
or
sub
mov
fistpl
out
cmp
sbb
mov
or
jg
pop
mov
scas
repnz
mov
movsl
jns
pop
cli
inc
pop
sub
mov
ret
jns
sbb
push
cli
cwtl
das
sub
lcall
ret
push
int3
push
clc
or
int3
adc
push
mov
push
mov
in
aam
cltd
roll
or
iret
mov
aam
sub
cwtl
cwtl
mov
and
lahf
xlat
jmp
adc
inc
hlt
mov
lret
inc
sbb
cs
inc
add
jno
xchg
dec
push
push
sub
pop
negb
pop
insb
cmpb
daa
movl
mov
sub
mov
push
mov
ret
jb
popa
push
ss
pop
testl
ret
and
in
inc
jnp
outsl
daa
sbb
mov
pop
jne
sbb
mov
cmpsl
std
aad
adc
cmp
mov
hlt
loopne
cmp
add
mov
inc
pop
fimuls
push
je
fidivrl
cmp
pop
inc
sbb
cmc
xor
dec
cmpxchg
je
xor
sbb
shlb
mov
mov
fsubrl
xchg
subl
jno
dec
in
cltd
xor
jecxz
rorl
mov
add
jl
cmpsl
loope
pop
xlat
dec
mov
dec
test
push
push
mov
add
je
jae
push
pop
pop
add
cli
sub
fsts
xor
imul
push
mov
mov
cli
jecxz
cltd
dec
arpl
sub
push
and
inc
faddl
cltd
mov
mov
test
aaa
mov
sbb
mov
mov
push
jnp
test
pop
pusha
inc
insl
and
lahf
popa
test
mov
movsl
call
dec
mov
dec
movsl
jno
mov
les
inc
enter
gs
fwait
mov
fisubs
lea
ret
int
sti
cltd
adc
jbe
outsl
shlb
cmp
push
ss
push
adc
pop
push
sub
addr16
xchg
sub
add
leave
inc
cs
pushf
jmp
loope
dec
cs
adc
aas
scas
jbe
adc
ja
stc
enter
fiaddl
push
arpl
cmpsl
xlat
cmp
gs
xlat
push
mov
mov
or
push
mov
pop
out
dec
cltd
inc
or
daa
jl
aad
outsb
clc
sub
std
cmp
xor
add
repz
sbbl
push
dec
mov
ss
jne
setle
cpuid
inc
pop
dec
mov
sahf
lock
push
enter
jnp
fs
inc
imul
adc
mov
movsl
cmp
mov
xlat
loope
mov
pop
lds
inc
cmp
cmp
sarl
dec
mov
dec
and
push
push
jo
orl
ljmp
and
insl
loopne
clc
imul
push
stos
lods
dec
adc
pushf
sbb
std
dec
pushf
push
rclb
lret
movl
sub
imul
ljmp
inc
test
jmp
int3
add
fisubs
aaa
mov
pop
loopne
lock
jmp
mov
lods
dec
cld
pop
mov
int
xchg
push
enter
std
mov
pop
mov
fisubrs
aad
add
stc
pop
stc
mov
push
push
mov
jnp
jo
push
insb
xor
pushf
sar
ret
sbb
notl
adc
push
mov
in
or
mov
orl
sub
xlat
mov
mov
fwait
add
lret
xchg
leave
test
bound
popf
pop
mov
and
lods
push
daa
sub
push
fnsave
xchg
add
ja
lcall
call
loopne
cli
cmp
adc
jecxz
jmp
pop
cmp
mov
icebp
test
std
or
inc
inc
or
addr16
loop
stc
xchg
jmp
add
jne
adc
out
insl
and
scas
movsl
jne
xchg
mov
mov
xchg
leave
sub
dec
pop
inc
and
dec
sbb
arpl
sahf
and
sub
int
mov
mov
test
xchg
add
leave
pushf
push
icebp
inc
mov
pop
cmpsl
and
popf
pop
add
or
push
mov
das
inc
sti
mov
test
jmp
jle
fmul
popa
call
add
daa
inc
not
out
fsubs
rcl
mov
mov
adc
pop
xchg
ljmp
shlb
dec
dec
and
leave
int
imul
add
test
xor
roll
popl
sbb
jae
sub
xor
test
add
pop
xchg
arpl
daa
cs
push
add
mov
rolb
pop
repnz
sub
imul
cwtl
jo
andl
repnz
ret
test
ror
dec
test
stos
out
cmp
popa
inc
orb
inc
mov
cli
push
repz
mov
daa
lea
clc
push
test
cs
shl
repnz
pop
aaa
push
mov
in
ss
outsl
push
pop
inc
mov
js
ret
mov
push
mov
shr
shrb
xchg
sub
loopne
cmp
mov
or
xchg
add
adc
push
imul
push
insl
mov
insb
and
fdivp
cltd
sub
test
xchg
mov
cmp
mov
and
sbb
enter
push
lret
mov
and
shll
test
jnp
mov
das
shrb
mov
leave
iret
dec
jnp
out
xor
cmc
push
adc
sti
jnp
popa
je
xchg
test
push
lcall
add
ret
pop
leave
sbb
sbb
sub
push
int
lds
popa
aaa
push
lods
xchg
push
adc
repnz
imul
jmp
mov
or
fwait
insl
out
sbb
jg
sbb
cwtl
or
mov
scas
gs
outsb
bound
mov
mov
lret
xor
movsl
jb
push
mov
xchg
sub
add
or
mov
aaa
sub
pop
imul
and
dec
mov
jbe
push
xor
sti
es
push
testl
je
repnz
pop
frstor
cmp
jmp
fucomp
add
xor
cli
and
and
and
mov
es
dec
mov
sbb
inc
xlat
lods
sub
pop
ljmp
adc
pop
loop
push
sub
inc
subl
sub
mov
add
mov
add
loop
in
mov
dec
inc
out
stos
sub
int
pushl
mov
push
je
xor
xchg
xor
add
mov
push
lea
xchg
add
aad
test
in
sbb
outsl
fs
and
add
mov
mov
push
int3
adc
sbb
roll
sub
jb
in
movsl
xorl
andb
fdivs
inc
sbb
jne
in
push
mov
fsubrs
mov
xor
imulb
push
xor
gs
add
scas
xor
scas
iret
data16
insb
cli
jecxz
aaa
pop
pop
mov
daa
outsl
mov
dec
nop
imul
jns
fsubrp
xor
enter
add
lods
ljmp
insb
cmp
das
xacquire
pop
adc
std
push
shl
mov
push
fsubs
mov
stos
mov
dec
call
push
icebp
pop
sub
stc
je
out
mov
mov
inc
rcrb
xor
fidivrs
inc
pop
and
mov
mov
int
jmp
xchg
mov
xor
loope
aas
in
adcb
out
jnp
aam
sub
xchg
lods
jl
cmpsl
out
jns
lock
icebp
sub
jp
sbb
insb
xchg
js
fistl
mov
inc
outsb
addr16
divb
xchg
add
repz
xchg
rcll
sbb
inc
imul
leave
int
rorb
test
pusha
daa
insl
ficomps
rcr
xlat
sub
loopne
cmpsl
cmpsl
push
test
and
and
outsl
nop
test
jl
in
inc
mov
inc
pop
sub
jo
cli
loope
mov
mov
push
mov
faddl
sbb
add
test
nop
popa
and
rorl
add
repz
scas
sarb
mov
gs
push
loopne
jle
inc
mov
stc
adc
jge
pusha
je
pop
cmpsb
inc
adcb
xor
sub
mov
das
sahf
add
loope
push
cmp
and
sbb
ficompl
sbb
insl
leave
cmc
cmpsb
mov
cmp
push
mov
mov
or
xor
push
sub
fldl
test
cmc
fs
movq
scas
pop
xlat
adc
push
and
sbbl
or
shlb
out
int
cmp
mov
ss
push
fisubrs
lods
mov
lock
vcomisd
jp
jae
repz
fcomps
repnz
sbb
imul
inc
add
fsubs
dec
and
mov
gs
imul
xor
xor
test
push
sbb
push
repz
cmpsb
ret
fcomip
mov
js
mulb
ret
sbb
test
pop
jg
bnd
xchg
ljmp
aam
push
outsb
mov
mov
aas
dec
dec
mov
lea
fistpl
rcrb
or
adc
or
enter
xchg
cmpsb
in
int3
xor
std
ret
pop
inc
hlt
scas
test
xchg
fstl
mov
mov
ret
loope
dec
cmpsl
xchg
pop
and
imull
jno
aad
sbb
mov
std
xor
push
insb
out
cmp
inc
out
sbb
repz
adc
adc
push
popl
fdivl
xchg
icebp
adc
mov
fldl
fbld
mov
sahf
out
stos
adc
jg
xlat
mov
mov
rcrl
daa
hlt
mov
mov
loopne
xchg
adc
sbb
shrl
mov
cmp
cwtl
jp
dec
aad
mov
scas
add
sbb
pop
jae
aas
ljmp
or
cmp
cmp
in
pop
lock
lahf
and
into
gs
add
add
cltd
xchg
out
inc
hlt
mov
lcall
adc
test
aas
hlt
imul
push
and
add
out
mov
add
mov
push
in
push
leave
pusha
cmp
in
inc
icebp
out
int3
arpl
out
andl
push
pushf
cmp
inc
cmp
dec
stos
pop
iret
aad
arpl
daa
shrl
mov
fsubs
push
sbb
in
rolb
pop
adc
sbb
pop
mov
or
xor
int
imul
push
sbb
and
sbb
jne
inc
mov
and
test
cmp
outsb
sbbl
insb
add
xchg
stos
outsb
mov
pusha
ftst
push
mov
add
outsb
clc
into
ffree
push
lcall
jb
sub
lcall
in
mov
xor
jno
inc
mov
in
pop
jmp
push
add
cmpsl
cmp
enter
xchg
push
push
out
dec
scas
loope
not
and
xor
add
push
jne
cwtl
sub
pop
outsb
jne
dec
dec
inc
into
sti
gs
xchg
sub
orl
popf
dec
lds
out
ret
and
jp
insl
add
sbb
jge
gs
mov
fbld
jo
loopne
mov
jp,pn
sub
mov
repnz
ss
mov
lock
in
das
ffree
mov
mov
add
sub
push
test
add
mov
cld
testl
inc
add
pop
mov
out
mov
ret
es
shll
cmp
mov
int3
dec
fnstsw
out
cmp
dec
stos
add
scas
in
jecxz
push
pop
ret
sbb
jecxz
add
cltd
sbb
aas
pop
shll
push
lods
rorb
das
test
lock
dec
in
enter
subl
lcall
xchg
cltd
push
bound
sbb
push
xor
cmp
push
mov
push
popf
mov
movsl
or
shll
xchg
push
orb
or
insb
shll
add
dec
cwtl
xchg
xchg
icebp
push
dec
push
cmp
dec
sub
scas
testb
in
imul
cmpsb
negb
pop
push
or
ds
mov
jns
scas
push
std
sub
xchg
testb
sub
rorl
and
ja
cmpsl
sbb
cs
xchg
fsts
std
inc
jno
insl
sub
popf
jno
sti
outsl
jnp
ss
mov
andl
adc
xorb
add
gs
cli
sbb
and
cmp
sbb
push
pop
adc
mov
cmp
inc
stos
enter
push
sbbl
push
ljmp
in
outsb
jmp
inc
loope
xor
lret
mov
iret
stos
scas
outsl
jne
push
jne
xchg
mov
ss
ds
stos
ds
inc
arpl
push
xor
mov
mulb
xlat
stos
mov
jns
and
sub
xchg
cmp
inc
or
js
jmp
inc
mov
jne
cmp
pop
in
stos
jae
xor
cmp
ret
test
call
lret
outsl
mov
sub
fcomps
adc
inc
adc
dec
add
mov
out
mov
mov
mov
popf
cmp
cld
jp
out
stc
cmpsl
lds
cmp
cmp
mov
shrl
es
cmp
mov
shufps
xor
in
arpl
adc
push
sarb
dec
fimuls
loope
lcall
cmp
jl
pop
pop
lahf
xor
and
push
mov
std
movsb
aam
lret
inc
jge
dec
jno
or
test
mov
mov
push
pushf
push
mov
pusha
sbb
push
fdivrs
es
pop
pop
mov
testl
sbb
cmc
dec
jb
int3
mov
push
rcrl
xchg
xchg
pop
pop
out
jecxz
jg
scas
xchg
xchg
call
xchg
mov
out
add
xorb
call
out
dec
adc
adc
fisubs
shll
pop
movsl
hlt
loopne
sub
sub
and
jp
sti
pop
or
jmp
or
and
push
das
sub
adc
dec
mov
std
fnsave
test
jg
repz
inc
inc
pop
popa
leave
fbstp
sbbb
mov
xor
fdiv
mov
loop
pop
loope
stos
popf
adc
scas
mov
pusha
xor
cmp
ss
and
cmc
dec
sbb
repz
clc
xchg
mov
notb
nop
and
sbbl
mov
and
xchg
fwait
push
or
lahf
jg
pop
rorl
das
xchg
sbb
pushl
nop
sbb
data16
into
push
and
mov
jmp
aad
xor
cltd
push
or
cltd
xor
imul
xor
and
mov
lds
lods
inc
in
dec
fs
add
mov
xor
cs
sub
or
test
stc
inc
rorl
fistl
xchg
inc
jno
mov
in
lahf
aam
rorl
in
mov
inc
pop
scas
leave
aad
dec
into
jne
std
sbb
lret
in
mov
add
data16
movsl
popf
mov
iret
ljmp
les
idivl
dec
ss
adc
mov
jmp
pusha
xchg
into
data16
or
add
test
fs
xchg
mov
mov
shl
push
addr16
rcll
rclb
mov
cmpsl
fadds
or
loop
xchg
fstpl
xchg
idivb
fsts
or
inc
in
inc
push
fidivrs
roll
xchg
test
cltd
cmp
jl
shll
and
sbb
mov
mov
pop
fsubr
mov
shll
data16
fwait
sub
cmp
adc
mov
mov
daa
mov
mov
fsubrl
je
or
lret
pop
sbb
mov
push
inc
int3
mov
js
scas
mov
sti
mov
cmp
shl
pop
dec
in
mov
lea
imul
lahf
push
push
dec
cmp
add
aas
out
in
fsubl
hlt
pop
incl
dec
mov
mulb
push
repz
fdivl
cmp
in
sahf
push
arpl
rclb
sub
scas
mov
mov
or
test
mov
mov
out
xlat
push
fsubrs
lcall
xlat
cmc
enter
nop
cltd
movsb
mov
aad
fnstenv
mov
shll
aam
lock
inc
dec
arpl
xchg
sub
pop
mov
push
cmpsl
and
cs
aad
cmpsb
lock
in
mov
inc
jp
addr16
mov
xor
mov
cmpsl
int3
cmp
call
leave
xchg
cli
add
sub
aad
test
mov
pop
inc
inc
xlat
ja
pop
scas
mov
cmp
sbb
scas
inc
mov
or
pop
incl
lahf
sub
loopne
out
jae
cltd
xchg
aam
or
cmp
ja
outsl
fnstenv
ds
dec
xchg
js
repnz
pop
mov
add
fsts
in
cmpl
xor
mov
pushf
push
stc
out
jne
stos
data16
fidivrs
pop
rorb
mov
or
inc
and
or
cmpsl
cmp
and
fidivs
mov
js
mov
sbb
outsb
pop
xchg
shrb
push
and
push
imul
loop
es
sahf
fisttpll
and
jo
fmull
xor
fiaddl
mov
cs
mov
call
adc
sub
call
enter
enter
les
mov
jb
mov
shl
pop
test
cwtl
inc
sbb
repz
pop
movl
pop
cmc
fsubl
es
dec
out
pop
adc
push
or
repz
dec
xchg
push
jmp
sbb
and
mov
lahf
xor
mov
cmp
ret
es
mov
fdivl
mov
call
sub
xchg
or
pop
pusha
testl
sub
outsb
lea
pushf
jg
cmp
les
scas
inc
in
fwait
pop
lret
lret
popa
ret
std
jae
call
pushf
fldl
test
hlt
pop
and
aaa
sub
mov
push
mov
mov
dec
mov
dec
es
shrd
or
mov
aam
or
xchg
scas
push
inc
pop
icebp
jbe
test
bound
cmp
cli
xchg
adc
jge
nop
xor
scas
aas
xor
ss
lcall
pop
xorl
xor
fnstcw
lret
mov
cmp
test
inc
sti
jb
mov
jp
outsb
add
push
jg
jae
imul
mov
push
cmpb
mov
les
adc
loope
xchg
sbb
jle
pop
test
push
push
stos
mov
mov
nop
push
addl
inc
hlt
push
das
hlt
adc
xor
sbb
xlat
xor
push
sub
jmp
sub
aad
sub
cmp
les
in
push
mov
mov
out
pusha
std
rolb
sti
mov
aad
gs
adc
inc
pusha
fstpt
clc
push
in
aam
sahf
aaa
mov
fstl
into
lret
xor
lods
mov
out
push
push
and
and
out
xchg
ret
dec
enter
inc
cltd
fimuls
inc
cs
in
loop
xchg
cmpsl
mov
sbb
sbb
xchg
icebp
adc
lock
out
test
imul
jg
sbb
dec
pop
or
daa
mov
inc
or
jns
push
mov
lcall
fadds
sbb
sub
pop
repnz
jp
xchg
sub
or
bswap
loopne
std
andb
out
jnp
pop
pop
cld
fwait
mov
shl
mov
jmp
cli
mov
push
jl
add
inc
fucomp
mov
jle
lods
lock
lret
push
or
mov
out
adc
stc
filds
and
jne
ret
xlat
fadds
cmp
cli
jns
daa
push
dec
loopne
inc
cmp
repnz
ja
fdivrs
cwtl
sbb
xchg
jno
xchg
sub
in
mov
mov
fisubs
aas
xchg
mov
ficomps
cmp
pop
cmp
scas
cld
sbb
clc
nop
aaa
into
sarl
imul
sbb
cmp
in
aas
inc
pop
jae
insb
mov
jge
stos
inc
hlt
adc
jne
jbe
and
xchg
xchg
mov
ret
xchg
arpl
mov
add
dec
sbb
out
or
call
push
fisubrs
inc
outsl
jnp
out
lds
xchg
jo
dec
pop
xor
dec
shl
xor
push
and
push
dec
add
ds
pop
pop
inc
mov
mov
shrl
cmp
sub
pop
shrl
push
add
std
xchg
inc
mov
loop
lahf
adc
call
roll
gs
scas
into
fbstp
mov
popf
xchg
add
cs
sub
xor
mov
mov
mov
adc
push
es
out
sti
ds
cmpsb
xchg
cmp
loopne
mov
repnz
adc
adc
xor
push
pop
sti
inc
shll
ret
mov
fs
enter
into
dec
mov
out
xchg
rcr
movsl
test
sub
xlat
or
cmp
int
push
sub
mov
xchg
sarl
adc
xor
mov
cmp
das
inc
es
loop
dec
and
jnp
imul
mov
inc
sub
aas
mov
mov
cmp
icebp
sub
mov
mov
das
aad
ss
daa
mov
shll
mov
clc
das
xlat
add
adc
lock
jmp
lea
mov
cmp
loope
ss
pop
mov
cli
and
fs
mov
fisubs
fadd
adcb
outsl
xor
xchg
mov
push
nop
push
xor
mov
ss
xor
fmull
mov
cmp
popa
mov
orb
pop
movsl
in
and
cbtw
push
and
ret
mov
lahf
aaa
lcall
add
cmp
mov
pushf
xchg
push
mov
arpl
pop
icebp
aad
jns
sub
leave
lods
dec
xchg
pop
xchg
stos
adc
pop
inc
fsubs
cmp
jno
bnd
xor
lods
adc
inc
push
adc
mov
cmp
jo
xor
xor
inc
lds
sub
pushf
add
and
cmp
push
scas
iret
out
cmp
jnp
xor
mov
xor
cld
fwait
in
int3
imul
clc
nop
xlat
or
out
cmpsl
pop
xor
dec
cmp
das
add
pop
insl
sbb
lcall
call
pop
adc
push
add
dec
fmuls
inc
popf
popa
bound
add
add
insb
mov
or
psubsb
fs
shlb
daa
ja
mov
fs
jmp
mov
adc
pushl
mov
add
in
aad
mov
mov
push
idiv
dec
loopne
adc
loope
lods
xchg
popa
jbe
dec
push
xor
pop
lock
mov
dec
jp
pop
cmp
sub
mov
jg
and
push
push
or
pop
add
pusha
push
pushf
shrb
push
out
cmpsl
mov
mov
sbb
ret
daa
lret
sbb
inc
mov
inc
std
fistpll
je
pop
fcompl
testl
hlt
fucomp
sub
or
adc
mov
or
fidivrl
mov
dec
mov
ret
popl
aas
sahf
mov
xchg
mov
lcallw
movsb
lahf
mov
rorb
inc
fwait
cmp
pop
imul
mov
xor
inc
pop
and
in
es
sub
addb
xor
test
mov
rcrl
fcomps
hlt
xchg
movsb
ret
sbb
inc
mov
xchg
add
adc
mov
dec
add
xor
shl
stos
repnz
cmp
daa
mov
or
mov
dec
scas
inc
sub
in
sbb
int
jns
fwait
push
mov
movsb
cmpb
dec
mov
rclb
test
scas
adc
sub
scas
int3
lret
mov
jae
inc
cmpsl
js
pop
test
lret
sub
adc
and
iret
mov
repz
pop
dec
jmp
data16
sbb
test
inc
leave
pusha
jne
push
jb
pop
jno
jle
lea
mov
lret
sahf
hlt
lea
xor
daa
jl
cltd
imul
pop
sti
xor
or
dec
dec
cwtl
addr16
sub
inc
sbb
jp
or
ficoml
mov
sti
into
repnz
mov
and
in
xchg
inc
or
fidivs
loop
jp
cmp
jmp
jo
pop
mov
adc
nop
jecxz
mov
outsb
xor
mov
sbb
add
cmp
pop
inc
sbb
push
and
cmp
icebp
mov
mov
ss
seta
fiaddl
test
dec
pop
sub
jl
jg
dec
sbbl
pushf
and
pushf
sahf
or
sbb
jg
push
xor
mov
scas
mov
xlat
mov
add
pop
mov
sti
loopne
pushf
xor
mov
pop
notb
into
jge
bound
pop
fwait
or
js
and
frstor
lahf
adc
push
les
pop
call
dec
frstor
sbb
ret
pop
mov
jl
mov
mov
cwtl
and
pop
mov
jns
xchg
ficoms
stc
cmp
sub
pushf
cmp
lea
pop
push
dec
sub
jecxz
aas
dec
loopne
xchg
cmp
testl
inc
shll
sub
cmp
clc
les
sbb
add
repnz
fs
xchg
outsl
cmp
sarl
jne
push
mov
jmp
and
push
cmc
pop
scas
subb
mov
jb
push
and
cld
push
ss
aas
into
xor
je
outsb
je
pop
jo
and
jmp
or
cmc
outsb
or
dec
lock
lcall
pop
adc
mov
mov
shlb
sbb
push
xchg
sub
out
inc
add
out
sub
inc
and
leave
add
and
cmp
in
or
enter
subb
jmp
xor
or
mov
fwait
xor
push
out
fwait
mov
cs
leave
shlb
sti
imul
adc
add
sbb
jmp
enter
jle
mov
shrl
push
mov
or
loop
jo
mov
jo
pop
xchg
pop
adc
fisubrs
movsb
cmp
or
xchg
shl
test
ja
dec
loopne
mov
shl
cmp
imul
adc
push
gs
ficoml
ljmp
push
outsb
adc
xchg
iret
sbb
add
jo
mov
push
inc
or
sub
stc
sbb
out
push
les
pushf
pusha
mov
fucom
and
into
and
sbb
subl
adc
data16
clc
and
mov
add
mov
cmp
push
jne
and
and
fidivs
push
pop
outsb
xor
pushf
xor
jno
cltd
xchg
mov
pop
sub
xchg
nop
int3
dec
in
mov
pushf
repz
int
sbb
add
and
pop
dec
pop
mov
test
pop
push
fs
and
aas
push
xor
inc
dec
jp
cmp
xchg
mov
add
mov
jnp
xor
sub
stc
adc
mov
push
jne
dec
inc
aad
jb
ja
out
sbb
in
add
push
jbe
dec
das
pop
andb
fs
xchg
cwtl
adc
xor
aas
adc
sub
mov
pop
add
cmp
adc
mov
pop
enter
add
loopne
fs
sbb
xor
rorl
add
xchg
outsl
mov
cmc
int3
pusha
je
addb
jp
mov
cs
pop
pop
sbb
and
xchg
lods
cmp
repnz
cmpsl
inc
xchg
inc
inc
in
fbstp
out
sbb
je
sbb
mov
hlt
sub
xchg
inc
sahf
lcall
sbb
lret
sti
test
cltd
cltd
mov
adc
ret
mov
int3
in
inc
lods
lahf
lret
jle
jae
adc
ret
insl
jae
xchg
sub
cmp
jne
sbb
pop
sahf
decb
cltd
fimuls
push
jno
cmpsb
xchg
xchg
xchg
sbb
push
push
fs
sti
push
xor
dec
pop
pop
inc
dec
pop
mov
inc
push
push
fisttps
or
cmpsl
sub
mov
jnp
in
add
std
pop
or
aaa
mov
mov
ljmp
mov
sbb
dec
in
mov
jp
sub
inc
mov
loopne
mov
cmpsb
fisttpll
ss
jp
jl
js
in
mov
dec
mov
loop
and
sub
inc
dec
push
jne
sub
mov
out
test
aam
inc
daa
call
mov
dec
push
or
mov
fwait
xor
adc
movsb
add
push
jmp
mov
push
or
mov
mov
or
das
sbb
pop
xor
out
bound
pop
mov
push
mov
aad
mov
fistpl
test
fmul
and
sub
stos
and
test
inc
sbb
add
test
adc
add
xor
or
add
adc
jo
js
stc
jb
inc
jae
add
lods
and
in
rorb
mov
push
lods
push
lea
sbb
push
lret
xlat
jg
leave
push
cmp
mov
and
sub
iret
xor
push
fbstp
pop
mov
out
pop
mov
cmp
jne
addr16
dec
sub
mov
mov
ljmp
dec
mov
jg
mov
mov
and
xchg
mov
pop
repz
push
cltd
xchg
fcomps
sub
mov
pop
add
adc
lret
jne
push
push
cmc
cmpsb
sarl
es
xchg
sub
sarl
imul
ret
dec
mov
pop
std
xchg
mov
push
cmp
sbb
lahf
fsubrs
lods
out
mov
psrad
ja
xor
jmp
push
addr16
push
cs
pop
mov
mov
out
scas
xchg
scas
inc
loope
lret
sti
and
std
movsb
mov
or
ss
insb
fisttps
dec
add
mov
cs
mov
adc
xchg
xlat
cmp
cmp
out
jo
imul
push
sbb
icebp
cmpsb
rorl
aaa
pop
cltd
leave
push
setle
jne
cmpsb
in
and
and
pop
or
icebp
scas
psrad
outsl
inc
leave
nop
dec
in
outsb
sarb
xchg
imul
imul
ret
loopne
pop
popf
xor
add
sbb
sub
out
popa
mov
sub
lret
push
mov
mov
push
sbb
cmc
cmp
in
and
addr16
push
pushf
lret
cld
adcl
mov
mov
dec
jmp
push
iret
loope
xchg
xlat
xor
pop
ja
push
test
mov
sbb
into
inc
stos
adc
cmpsl
sub
inc
sbb
mov
mov
jecxz
insl
dec
into
add
push
ds
outsb
dec
inc
sub
jl
inc
jecxz
cmp
fildll
push
js
mov
dec
pop
cwtl
push
mov
jecxz
pop
xchg
pop
mov
push
dec
pop
sub
insb
inc
push
mov
sbb
sbb
fstl
add
cmp
pop
addb
stc
jns
sbb
sarl
ja
movsb
cmp
mov
test
lahf
es
addb
jge
push
ret
xor
dec
les
repnz
and
decb
aam
bound
cld
adc
mov
lret
jbe
in
push
cltd
push
test
mov
fnstsw
xlat
xchg
push
addb
out
mov
fdiv
int3
out
dec
loope
out
stos
cmp
or
cmpl
sahf
add
repnz
mov
push
inc
int3
rep
and
sbb
aad
fidivl
pop
mov
sbb
push
dec
lods
push
mov
fsubl
or
xor
loopne
sbb
out
and
jle
mov
loop
fwait
std
addr16
movsb
out
outsb
push
shrl
and
imul
push
out
dec
shrl
shl
jbe
out
sti
sub
mov
xor
adc
jo
sub
and
mov
adc
add
fs
jne
daa
cmpsl
mov
sub
or
clc
xchg
repnz
lahf
ss
jns
mov
in
mov
or
into
insb
dec
aad
hlt
add
jbe
pop
sub
jno
repnz
push
push
or
push
and
icebp
sahf
xchg
cmpsl
adc
or
in
loop
sub
xor
xor
inc
outsb
adc
mov
stc
mov
xor
add
adc
in
adc
inc
xchg
xor
pop
or
jle
aam
icebp
push
js
shlb
lods
outsl
iret
adcb
fistpl
xor
sahf
test
and
dec
fldl
dec
xchg
stos
repz
mov
xchg
mov
enter
jle
test
jns
mov
loopne
test
jmp
aaa
push
mov
xchg
dec
mov
dec
dec
sub
les
cmpb
push
mov
jg
ja
scas
rolb
loope
jl
insl
cmp
outsb
jl
lods
movsl
ja
ret
jp
std
and
and
mov
xchg
loop
xchg
adc
push
out
insb
and
push
popf
mov
jb
test
jecxz
fists
adc
jbe
rcrw
adcl
fucomp
jo
push
jl
aas
sub
xchg
sub
mov
mov
jge
and
or
xor
loop
pop
les
xorb
xchg
cmpb
stc
ret
push
xchg
ljmp
movsb
add
mov
lret
adc
mov
pop
inc
stos
aas
sti
stc
insb
and
sbbb
inc
jecxz
or
fucomip
shrb
fiaddl
sbb
and
and
push
fldl
repnz
imul
pop
call
mov
jnp
jg
and
add
jae
jns
cltd
pop
mov
xchg
pop
fimull
lods
mov
test
cli
push
sub
sbb
inc
punpckhwd
jno
xor
lret
ds
adc
or
lea
test
fidivl
xor
cli
pop
xsha1
cmpsb
mov
fsubs
mov
mov
inc
mov
loopne
pop
push
push
xor
mov
add
mov
stc
adc
adc
xor
pop
icebp
lea
xor
mov
xchg
xchg
fidivs
jno
fcompl
in
clc
fcoml
das
pop
js
cmp
dec
aam
and
sub
adcb
mov
rcrb
aad
test
mov
add
ljmp
cmpsb
add
movsl
jge
jmp
ror
orl
mov
out
push
je
test
mov
sti
cmp
xlat
nop
mov
add
es
out
xchg
shrl
add
sbb
jge
cmc
mov
orb
mov
ret
mov
fsubrl
in
lods
mov
pop
and
ss
lret
adc
pop
inc
les
jns
sub
xchg
inc
lds
mov
mov
ret
push
jo
stc
gs
out
aad
pop
imul
outsb
add
ljmp
sub
rclb
repz
mov
scas
mov
pop
adc
push
out
or
inc
clc
pusha
fcmovnbe
jmp
inc
jmp
movsb
fistpl
sub
jns
mov
dec
orb
mov
dec
insl
add
scas
enter
adc
pop
frstor
add
push
cld
inc
mov
and
mov
lods
pop
pushf
and
push
mov
sti
or
sti
pusha
rorb
fstpl
ljmp
jb
aad
inc
push
movsl
cmpsb
and
push
test
xor
outsl
loopne
mov
xchg
push
xor
xchg
fistl
fstl
push
je
aas
push
pop
and
das
inc
pop
xchg
sub
andb
cmp
call
scas
enter
outsl
stos
ffree
jae
pushf
scas
repnz
push
aam
cmp
dec
xchg
mov
cltd
mov
gs
imulb
mov
movb
ret
add
subb
push
jge
test
xchg
popf
leave
into
arpl
inc
jp
pop
xlat
and
dec
popf
dec
mov
jne
pop
push
mov
loopne
jg
inc
add
inc
jb
sbb
dec
shll
push
insb
pop
clc
mov
push
fwait
jne
pminub
push
xchg
das
xor
loope
pop
push
xor
aaa
pop
lcall
or
jle
pop
mov
push
ror
pop
jecxz
xchg
insl
and
or
mov
mov
jns
lds
loopne
pop
adc
or
cmpsl
out
cmp
add
ljmp
mov
inc
popf
call
xlat
push
pop
jmp
call
mov
pop
hlt
mov
les
cmp
xchg
and
into
sub
addl
xor
mov
fisubl
inc
lea
xor
sub
pop
cmp
push
pop
xor
xlat
leave
pop
sub
out
repz
jbe
pop
inc
icebp
sahf
imul
push
cli
push
cmp
clc
aas
jge
cmp
rcrl
out
loope
out
dec
outsb
outsb
test
xchg
xchg
adc
mov
inc
scas
bound
into
or
leave
insb
rcll
dec
fcomip
into
push
or
mov
mov
or
add
leave
dec
xlat
push
mov
mov
call
mov
dec
mov
ficompl
push
int
insb
xlat
pop
jle
cmpsl
es
lahf
sub
xchg
orb
and
jecxz
test
jecxz
cli
adc
cli
pop
into
jno
add
xor
imul
ret
ret
pop
add
divb
inc
inc
cld
add
lea
sub
mov
lods
lcall
aad
inc
sbb
in
pop
adc
cmc
push
lds
xor
decb
stos
adcb
shll
push
inc
bound
sti
pushf
dec
xor
loope
incb
iret
and
lea
je
cmpsl
int
inc
fs
and
mov
aaa
jl
pop
xor
push
cmpsb
jno
or
fsubrl
imul
push
pop
les
pop
mov
testb
mov
xchg
xchg
dec
aad
jl
pop
xchg
cltd
mov
cltd
bound
jae
xchg
and
inc
xchg
orl
loope
shrl
add
inc
fmuls
push
imul
pop
dec
mov
cmpb
pop
push
fwait
aas
dec
dec
mov
xor
jg
sbb
fidivrs
push
inc
pop
jg
sub
fsubs
insl
mov
push
clc
test
outsl
mov
cmp
inc
in
outsl
shll
nop
xchg
and
sbb
loopne
std
inc
push
xor
icebp
mov
pop
sahf
pop
xchg
cmp
subb
inc
fcmovnu
mov
cltd
jnp
pop
lods
mov
mov
clc
push
cltd
cmp
inc
or
xchg
aaa
cmpsb
or
loop
sbb
sbb
ljmp
dec
cmp
push
hlt
outsb
ja
xchg
mov
add
int
dec
pop
out
cli
inc
xchg
sbb
xchg
mov
shrl
mov
or
or
adc
ljmp
adc
call
mov
ss
and
xor
and
push
jb
sbb
rcll
popl
push
neg
push
mov
push
pop
popf
sbb
inc
sub
leave
lock
sbb
or
cs
mov
pop
sti
sbb
jne
mov
inc
fdiv
roll
rorb
fst
addr16
push
xchg
pop
mov
mov
pop
cmp
inc
dec
mov
jge
inc
adc
in
cwtl
mov
jb
xor
stos
mov
push
mov
aad
popf
and
xchg
sbb
jns
test
shl
xchg
mov
sub
out
pop
into
je
jne
xor
xor
rcr
and
push
jmp
inc
aaa
jg
stc
push
dec
and
xlat
rcrb
jecxz
jb
mov
mov
cmp
push
sub
mov
fdiv
dec
cmp
mov
or
stos
jbe
xchg
push
add
pop
lret
cmp
lcall
xchg
dec
popf
add
inc
popf
push
test
mov
ficoms
ret
inc
movsl
cli
jne
mov
push
xchg
sbbb
jecxz
and
insl
mov
std
push
jmp
in
xor
push
cs
mov
cmp
stos
test
inc
push
xor
adc
mov
fldcw
movsb
dec
pop
fldcw
sahf
mov
xchg
ds
enter
adc
xlat
jnp
mov
inc
std
pop
cmp
and
push
stos
call
scas
inc
icebp
dec
add
pusha
cmpsb
dec
inc
rcr
fidivl
loopne
pop
push
pop
clc
dec
dec
cli
xchg
mov
incl
xor
ljmp
xchg
mov
rcrl
pusha
and
cmp
jns
inc
pop
jecxz
sti
dec
add
and
mov
in
mov
aam
sub
cmpsb
mov
inc
rcll
into
and
pop
jmp
arpl
mov
jbe
stos
jne
test
mov
lods
in
jb
mov
pop
fs
or
adc
cli
lods
aad
adc
test
cmp
xor
inc
add
fistl
pop
daa
inc
sti
sub
sub
std
pop
or
jno
js
or
inc
out
pop
xchg
data16
pop
mov
int3
int3
sbb
cmp
in
add
repz
fisubrl
int3
je
sbb
ret
in
mov
add
mov
sbb
fadds
xor
sub
pop
stos
pop
dec
add
jne
xor
cmp
dec
lret
add
iret
cmpsb
mov
rcrl
mov
mov
push
mov
dec
pop
movsl
dec
fdivrl
mov
mov
into
jae
sbb
clc
sub
aaa
pop
leave
ss
icebp
mov
jmp
and
das
hlt
mov
inc
fimull
popa
pop
lcall
jle
push
or
sbbl
dec
das
mov
push
sub
fs
test
aaa
mov
ret
mov
dec
or
negb
andl
cli
test
stc
xchg
mov
fstpl
mul
aam
dec
xchg
dec
loop
call
imul
pop
adc
lahf
mov
xor
lret
repnz
lock
adc
loope
repnz
xchg
push
mov
jp
jae
mov
jo
js
std
push
in
or
fsubrp
push
mov
leave
mov
js
cld
sub
inc
bt
mov
fistpll
sbb
dec
sbb
xchg
dec
loope
cmpsb
fnsave
mov
cli
push
mov
push
cmpsb
cmp
lret
fcomps
sub
lret
das
mov
hlt
ds
pop
ljmp
sbb
jle
lock
xchg
pusha
repnz
dec
add
mov
lret
mov
jmp
or
jp
dec
jle
or
push
frstor
dec
pop
out
inc
lcall
loopne
cmp
or
dec
mov
mov
push
idivl
nop
jnp
dec
pop
sub
cwtl
js
fnsave
dec
iret
enter
mov
dec
hlt
sbb
jb
sahf
cmpsb
jl
or
adc
jge
loopne
cmpsl
xor
adc
xchg
fucomip
movsb
adc
xchg
push
mov
iret
ds
shl
adc
dec
inc
push
nop
jle
mov
jns
fdiv
inc
rcrb
shll
and
pop
test
cmp
sbb
stc
mov
push
sbb
xchg
popa
xchg
jecxz
sarl
test
or
orb
pop
mov
lods
aas
mov
call
inc
and
push
shll
dec
adc
jg
push
aas
inc
sub
call
cmc
mov
addr16
cmp
test
out
sbb
xor
inc
sahf
pop
lods
xor
cli
daa
adc
mov
lcall
sub
fsubr
lahf
dec
andl
loop
cmp
and
rcrl
call
jae
inc
loope
pop
or
ret
or
pop
mov
mov
inc
sbb
mov
aad
add
mov
push
data16
jmp
push
sbb
xor
cmp
jmp
or
cli
pop
jb
and
sub
or
pop
test
cmp
lcall
push
mov
inc
into
test
cmc
lret
data16
jo
mov
popf
or
dec
out
xor
lahf
inc
xor
xchg
cld
dec
cltd
mov
faddl
sub
repz
cmp
adc
in
cmp
pop
mov
pop
mov
js
test
sbb
push
push
fimuls
pop
cmp
sbb
mov
into
dec
mov
popa
push
stos
loopne
sub
sub
test
jne
fcmovnbe
daa
mov
and
mov
rol
adc
cwtl
cmp
in
stos
mov
cmpsl
jp
idivb
scas
and
mov
fbstp
adc
push
cld
insl
jo
loopne
push
dec
in
inc
ret
jne
xor
scas
inc
in
jo
cld
test
dec
in
xor
jne
insl
insb
jg
sub
inc
inc
push
xchg
sbb
roll
pop
or
loope
iret
pop
pop
enter
in
inc
jo
fisttpll
fidivrl
adc
test
shlb
adc
push
je
lock
push
cmp
bound
inc
test
mov
mov
add
cltd
xor
inc
inc
loopne
jbe
mov
or
das
add
ret
pop
popa
cmpl
add
mov
or
add
xchg
call
pop
subl
int3
jp
out
adc
stc
dec
jno
sub
sbb
stc
pop
icebp
add
das
inc
stos
js
and
mov
aas
mov
loopne
pop
cmp
push
icebp
int3
into
cmp
enter
mov
movsb
shlb
dec
jo
push
outsb
out
sbb
or
popa
pop
and
out
cmp
sbb
fcompl
xlat
stos
sar
stos
test
cmp
add
fidivl
mov
cwtl
push
repnz
adc
orl
mov
jno
mov
or
sbb
out
xor
mov
ljmp
adc
and
test
xor
into
or
inc
dec
sbb
out
mov
mov
push
insb
sbb
sbb
mov
cmpsb
push
imul
sbb
add
repnz
lahf
mov
shll
inc
dec
incb
jno
pop
outsl
in
arpl
leave
je
pop
jne
stos
add
dec
dec
pop
jbe
loop
pop
cwtl
and
mov
mov
ja
sub
in
jns
mov
adc
cwtl
jge
xchg
insb
ss
leave
push
mov
pusha
out
arpl
loop
sub
jg
insl
inc
lds
hlt
mov
mov
adc
sbb
pop
mov
sub
fimull
loope
gs
push
in
js
push
mov
aad
sub
sbb
dec
loope
stos
sbb
add
mov
xchg
sti
xchg
aam
test
jecxz
jne
inc
xor
xor
out
mov
les
pop
repnz
jbe
subb
adc
fadd
jo
add
mov
js
cli
cs
add
stc
add
outsl
data16
xchg
mull
add
cmpsl
pop
lcall
das
icebp
out
or
loop
mov
pop
test
jecxz
push
imull
cmp
sbb
cmp
lahf
je
dec
data16
repnz
xchg
aas
sub
call
inc
mov
inc
sub
leave
in
mov
add
cmp
push
pop
fnsave
cmpb
stos
stc
out
add
or
ss
jge
loop
int3
mov
xlat
sbb
mov
push
sub
movsb
push
fisubrl
shrb
xchg
or
testl
in
outsl
mov
mov
loopne
dec
push
cmp
or
mov
push
push
stc
mov
xor
jle
addr16
push
xor
outsb
gs
int3
sbb
leave
ljmp
jb
pop
mov
in
xchg
mov
mov
and
push
dec
out
add
xchg
insl
add
mov
mov
ja
mov
aad
cmc
and
dec
int3
push
jg
mov
scas
push
xlat
xchg
sub
mov
int
mov
movsl
stos
inc
inc
adc
inc
gs
xchg
inc
xchg
popa
dec
mov
ret
push
or
jge
pushf
xlat
dec
and
adc
mov
mov
sub
test
sbb
xor
lea
push
in
pop
inc
enter
jecxz
adc
mov
addr16
jmp
popf
add
jle
dec
adc
cwtl
mov
push
mov
std
cmpb
cmc
pop
xchg
sbb
push
ljmp
lock
int3
mov
dec
cmpsb
mov
cmp
mov
arpl
push
add
loopne
xor
shll
pusha
adc
out
bound
adc
adcl
xor
mov
pop
lds
sub
dec
pop
fimull
cmp
fs
xchg
mov
mov
sub
aam
xchg
test
ret
jecxz
push
sub
dec
stos
jl
push
xor
imul
push
add
inc
mov
fistpll
sub
mov
sub
stos
mov
ret
and
movsl
jg
mov
jg
push
and
mov
outsl
std
pop
jge
xchg
ja
push
stos
sbb
daa
jl
mov
sahf
shll
push
orb
jp
cmp
inc
je
pop
in
sbb
mov
mov
aas
or
ret
mov
repz
daa
mov
mov
cmp
lret
pop
xchg
push
mov
mov
pop
std
xchg
jne
adc
sbb
ja
daa
xchg
mov
out
push
ret
pop
xor
aam
les
cmc
das
repz
ret
sub
mov
int3
adc
pushf
xor
xlat
adc
out
nop
pop
lret
loop
jns
das
and
mov
jns
pushf
dec
fisubl
and
test
adc
or
outsl
ret
sub
iret
xchg
xor
addr16
cltd
icebp
cmp
jns
xor
mov
fs
popa
mov
push
jmp
out
scas
fstl
test
mov
cmp
sahf
imul
sub
pop
cmp
add
mov
push
pop
xor
rcrl
sub
mov
dec
push
sub
mov
and
sahf
jno
push
xchg
sbb
jecxz
notl
mov
pop
or
stos
lock
loopne
sbb
xlat
test
inc
repz
das
insb
and
add
sbb
push
dec
adc
fistl
je
dec
pop
lods
ljmp
xchg
ret
adc
lret
in
pop
mov
jmp
jns
loope
lahf
cltd
in
fwait
mov
lods
lds
addr16
test
pop
mov
test
xor
je
and
fisubrs
pop
or
jne
out
cmp
mov
loop
sbbb
jecxz
mov
xor
xchg
insb
jmp
clc
cmp
pop
hlt
test
dec
decl
sbb
inc
ljmp
in
aad
out
lcall
xor
cmpsl
fsubr
sarb
pop
mov
push
shrl
jle
mov
pop
cltd
jae
pop
icebp
pop
mov
fnstsw
push
or
xor
mov
add
sti
adc
push
lock
inc
lods
imul
jns
shll
jp
into
sarb
int
dec
mov
imul
in
sbb
cmp
js
add
inc
stos
mov
insl
test
and
jmp
test
fists
mov
sbb
dec
cmp
notl
test
jbe
or
mov
adc
or
adc
test
add
aaa
lods
outsl
cmp
ret
into
andb
repz
xchg
test
rorb
rol
fnstenv
outsl
dec
pop
les
xchg
bound
out
xchg
pop
ret
pop
mov
push
int
xchg
sub
jecxz
mov
cwtl
mov
ds
fldcw
xchg
jmp
sub
and
sub
mov
add
lods
mov
ds
dec
movsl
cltd
test
das
sub
push
std
mov
xchg
and
fsubrs
mov
rclb
divb
loop
sahf
inc
add
cmpsb
push
add
inc
inc
repz
popa
testl
mov
sbbl
mov
jnp
cmp
subl
lahf
adc
cmp
lahf
xor
shll
mov
xor
ret
popa
lret
pop
or
mov
inc
enter
mov
mov
push
ljmp
or
clc
mov
push
cmpsb
leave
outsl
mov
lods
outsb
xor
stc
mov
and
add
lods
fs
pop
sub
aas
dec
cmp
loope
and
inc
add
es
mov
into
inc
jne
add
cmp
gs
mov
fsubp
mov
jne
cmp
push
sbbb
cmpb
xchg
pop
push
pusha
jno
sbb
mov
negl
push
subl
jecxz
pop
out
outsb
rolb
gs
sbb
lods
xor
push
xor
jnp
xchg
mov
fstl
pop
mov
mov
repz
je
pop
lds
or
dec
in
inc
lret
insl
sbb
adc
fs
mov
fimuls
lods
xchg
cmp
and
and
insb
jecxz
imul
stos
and
mov
in
push
in
mov
add
mov
in
bound
mov
icebp
adc
rcl
pop
imul
lods
leave
divb
aad
and
subl
adc
add
filds
aas
and
mov
sbb
lock
xor
insb
cmp
add
adc
movl
and
mov
jbe
xchg
repnz
out
lret
push
insl
sbb
jbe
inc
movd
stos
call
fsubs
mov
pop
out
testl
rorl
cltd
stos
dec
andb
or
jmp
mov
fistl
mov
scas
fcomi
fidivl
jmp
gs
jmp
mov
xchg
outsb
sbb
or
in
xchg
push
fimull
in
cmc
or
scas
data16
adcb
daa
stos
add
inc
mov
ss
sti
mov
les
pop
adc
test
fdiv
int3
mov
test
in
sahf
les
adc
fstpl
sub
fisubl
iret
inc
sub
dec
sti
arpl
outsl
sbb
ljmp
adc
mov
xor
sbb
adc
sti
bnd
add
arpl
or
xchg
cltd
icebp
cli
push
shl
xor
sub
mov
imul
jns
data16
mov
std
jg
xlat
sbb
cld
jge
daa
dec
dec
and
jmp
jp
lahf
outsl
adc
xchg
cs
testl
or
jl
mov
cmpsl
jg
fucomip
mov
shl
adc
mov
and
push
cmp
cmp
inc
jmp
push
lods
rorb
xchg
jp
das
mov
popa
dec
mov
rorl
sbb
jo
dec
divb
ja
jae
xor
xchg
fcomi
mov
xlat
add
sbb
ret
stos
bound
scas
into
gs
cwtl
scas
and
push
xchg
inc
fsubr
xchg
pop
lahf
push
out
adc
xchg
cmc
hlt
mov
fnsave
ds
jg
repnz
fisubrs
mov
xor
ss
daa
pop
push
lds
or
test
push
insl
adc
lock
in
inc
inc
and
mov
bound
adc
idivl
in
and
jmp
shll
dec
push
jno
mov
negl
imul
add
leave
mov
pop
in
cmpsl
scas
fbstp
ss
enter
cmpl
or
cmp
push
es
test
add
stos
or
les
push
enter
xchg
cmp
stos
pop
jg
pop
or
xchg
inc
jle
and
dec
arpl
dec
test
call
int3
subb
pop
stc
test
mov
add
int3
mov
push
out
bound
sub
rcrl
out
dec
lret
call
jecxz
jo
mov
outsl
xchg
and
cmp
shlb
mov
test
push
add
in
iret
adc
sub
cmc
push
cmp
loop
or
mov
cmp
cwtl
inc
fldenv
mov
or
or
adc
adc
popf
push
int
dec
jmp
sbb
pop
lahf
cs
repnz
mov
mov
sub
syscall
int3
fcoml
and
fcom
sbb
imul
and
mov
test
outsl
jge
xor
or
cld
push
dec
lock
add
lret
and
mov
cmp
cmp
repz
leave
in
mov
inc
loopne
push
pop
std
mov
ficomps
jne
dec
add
xor
and
out
add
and
pop
jge
fstl
adc
adc
test
aad
cmp
test
push
pop
sub
dec
sub
in
pop
lock
inc
cli
xchg
jne
mov
insw
sbb
jecxz
ss
cmp
mov
pop
dec
aad
cmpsb
shrb
jne
lods
repnz
leave
cwtl
stos
imul
inc
pop
out
xchg
mov
push
inc
inc
mov
cwtl
sub
inc
call
stc
push
lcall
pop
jo
or
and
iret
cmp
pop
or
push
xchg
push
add
pop
dec
fsubrs
and
or
ret
outsb
repz
out
push
sub
xor
dec
push
out
dec
mov
mov
mov
outsl
pushf
vaddsubpd
mov
push
add
xchg
xor
mov
xlat
mov
and
fcmovne
fsubrs
popa
dec
aam
scas
imul
out
jl
or
jg
jno
push
jl
add
fwait
repnz
sbb
mov
and
inc
cmpsb
int
xor
mov
or
fimuls
adc
jb
jo
mov
outsb
push
mov
ss
pop
push
cmp
sub
or
cwtl
mov
pop
sbb
loop
and
sar
jl
cmp
adc
popa
lock
ja
and
sub
pop
mov
jmp
lret
fstp
push
ds
xor
xor
adc
inc
aaa
adc
in
int
jecxz
add
adc
pop
shr
inc
pop
lahf
ss
popa
loop
ja
inc
or
sub
push
add
adc
movsb
iret
fdivrl
push
cmp
insl
dec
aad
cmp
lahf
lods
pop
inc
arpl
int
inc
sbb
xchg
int
int3
sahf
or
outsl
outsl
mov
mov
mov
leave
negb
adc
repz
and
add
inc
mov
pop
jbe
test
cmp
fcomps
pop
or
push
adc
xor
pushf
xchg
fwait
push
mov
mov
sbb
jl
aad
movsb
jns
out
push
ss
cmp
aaa
cmp
xchg
cwtl
outsl
in
les
shrl
imul
xor
pop
mov
ja
cmp
mov
repnz
cltd
add
sub
mov
inc
mov
xor
xchg
orb
jg
sbb
movsl
movsl
pop
repnz
push
mov
insl
or
pop
xchg
inc
fcmovu
pop
ja
add
pop
jge
adc
mov
sbb
cmc
gs
ss
arpl
push
insb
outsb
mov
mov
insb
lods
sbb
mov
gs
cmp
inc
ret
das
movsb
sub
cmp
ljmp
mov
data16
cmp
daa
out
mov
push
je
and
scas
fisubs
movsl
cmp
bound
std
ja
ds
xchg
cwtl
roll
or
cs
inc
push
hlt
jns
ja
mov
ret
adc
and
xchg
xor
inc
arpl
cmp
lcall
push
lahf
frstor
and
cmp
mov
setbe
stos
aaa
push
lahf
push
jbe
je
xor
les
inc
ss
dec
sbb
xchg
inc
mov
xchg
mov
inc
pop
ret
movsb
cmp
aaa
pusha
jo
rcll
call
push
mov
push
push
xor
ljmp
xchg
jnp
pop
adc
mov
arpl
call
cmpsl
and
leave
jne
sbb
push
cmp
cmovo
cmpsb
bound
aaa
push
outsb
imul
fstps
shlb
sub
fwait
mov
enter
dec
lret
jmp
imul
sbb
in
jl
mov
ljmp
jno
jecxz
cmpsb
lods
ss
xor
jg
push
mov
and
in
push
pop
sbb
cmp
cmp
add
mov
jmp
inc
and
add
iret
add
push
push
adc
xchg
jge
xchg
cmp
pushf
stc
hlt
aad
les
sti
stos
lock
cli
xchg
add
push
out
es
mov
lret
xor
outsb
jne
lret
mov
lods
push
and
pusha
popa
ja
insl
test
nop
or
pop
in
popf
testl
mov
js
das
ss
movsl
and
and
sub
aaa
xor
pop
add
in
cmc
lea
add
adc
js
dec
lods
pop
jno
lea
and
push
fidivs
fcom
ja
jb
adc
loope
iret
mov
mov
push
fstps
push
sub
pop
dec
push
cltd
mov
ud0
push
cmpsb
jge
sbbb
into
dec
lret
cmp
popf
loopne
rcll
aam
aas
inc
data16
sbb
test
idivl
inc
xchg
xor
and
lds
push
mov
das
ljmp
std
cltd
mov
mov
jmp
inc
ret
into
sti
jo
xchg
mov
sub
xchg
cs
popa
or
ja
dec
gs
sub
xchg
dec
inc
pop
mov
adc
ret
jge
ja
ljmp
insl
mov
and
rcll
push
data16
cmp
imul
inc
sti
add
push
call
dec
inc
outsl
mul
lock
fstpt
cmp
sbb
mov
inc
mov
push
push
inc
jae
mov
xchg
jbe
xor
mov
cmp
cmpsl
xchg
jns
fs
sub
and
mov
mov
pop
xor
adc
inc
cld
test
inc
in
movsl
jns
cmc
mov
cmc
lods
xor
inc
aaa
xchg
not
mov
decl
dec
mov
stos
or
dec
test
or
xor
repz
xor
mov
pusha
sti
jbe
add
int
in
mov
clc
fsubrl
fldcw
push
jge
in
in
xchg
in
push
and
test
sbb
sub
mov
lods
push
xlat
clc
daa
push
dec
scas
stc
inc
push
cmp
jns
scas
in
ljmp
xchg
stos
int3
arpl
outsb
pushf
repz
movzwl
xchg
jle
dec
and
fwait
push
inc
into
xor
mov
or
or
bound
lock
adc
fcoml
fldenv
and
xchg
mov
and
adc
mov
mov
xor
nop
rcrl
mov
pusha
jmp
mov
sub
rorl
sbb
adc
pop
mov
gs
jle
xchg
mov
dec
inc
popf
hlt
fwait
cmp
inc
add
xor
xchg
sub
pop
pop
rolb
call
xor
pop
cmp
or
cmp
push
jp
or
cmp
mov
hlt
roll
cmp
cmp
ds
push
out
mov
mov
mov
ja
bound
xchg
sbb
mov
mov
add
mov
xchg
fimuls
push
icebp
pop
sbb
pop
lods
insb
pop
mov
ror
faddl
out
pop
xor
ljmp
mov
lods
jg
lcall
mulb
stc
and
jl
fadds
inc
std
imul
mov
lahf
icebp
sub
mull
cmp
cmp
out
pop
les
xor
cmp
push
dec
addr16
sbb
pop
pop
daa
lahf
jb
std
push
aaa
enter
ja
xor
popf
arpl
pusha
cmp
stos
data16
dec
stos
push
sahf
cmp
sub
inc
out
js
inc
adc
outsl
mov
in
xor
cmp
pop
cmc
cli
pop
mov
mov
adc
sbb
push
sbb
mov
jp
sub
dec
popf
dec
cmpb
bound
xchg
sbb
enter
mov
cld
sub
pop
pop
testb
or
ljmp
xor
lods
das
mov
cmpsb
mov
pusha
cmp
mov
and
loopne
mov
xor
test
insb
stos
cltd
test
lahf
sub
js
lahf
xor
jg
add
test
ljmp
adcb
push
sub
inc
pop
mov
mov
cmp
fidivl
jno
shl
es
dec
ret
add
and
imull
inc
xor
gs
jmp
cli
xchg
movsl
ja
cmp
add
sub
in
sbb
xchg
add
lock
ret
hlt
shrl
sbb
pop
dec
push
cmp
aam
scas
es
mov
jbe
fiadds
and
xor
jg
inc
mov
mov
pop
jl
xlat
inc
call
or
test
sahf
insb
mov
inc
sub
cld
pop
rcrb
mov
iret
sbb
mov
xchg
in
jnp
jo
int
insl
leave
nop
mov
ja
aaa
addl
xor
fidivl
pop
mov
cmp
ucomiss
and
or
mov
lret
lret
les
pop
aam
cmpsb
adc
pop
add
or
add
loopne
lcall
xchg
adc
pop
ss
pop
mov
xchg
fcoml
jle
xor
mov
add
aad
pop
inc
lcall
daa
andl
sarl
repnz
sbbl
cmpsl
fwait
cs
push
sbb
mov
movd
sub
sbb
push
popa
cmp
insl
add
push
out
push
ss
pusha
addb
pop
sub
pshufw
mov
dec
mov
xchg
insb
ljmp
sbb
imul
sub
mov
mov
or
inc
ret
fldenv
xchg
pop
push
je
pop
repnz
sbb
pushf
lods
fsubl
and
xor
pop
sub
add
nop
mov
inc
scas
ds
pop
xor
adc
mov
test
int3
xchg
pop
adc
insb
xchg
adc
mov
push
dec
and
push
pusha
cmp
jp
add
xchg
lret
sbb
adc
cwtl
mov
push
repz
jl
fsts
sbb
mov
aaa
outsb
mov
ljmp
loop
aaa
clc
and
movsl
pop
cmp
mov
push
out
and
int3
gs
test
adc
jb
aad
xor
inc
in
xchg
and
enter
je
push
lea
movsl
ret
cwtl
sub
shr
adc
and
mov
jp
xor
sbb
xchg
scas
call
mov
mov
loopne
add
inc
mov
subl
mov
inc
insb
push
xchg
mov
xchg
ljmp
test
dec
in
dec
lcall
pop
out
dec
js
xor
fldt
out
ret
push
cmpsb
cmpsl
mov
sbb
js
add
sub
test
xchg
dec
repz
sub
repnz
in
push
adc
jg
and
jle
clc
dec
popl
sub
sar
adc
xlat
outsb
inc
xor
push
jb
shrb
repnz
push
call
cmp
lea
sub
aas
stc
jo
out
inc
or
movsb
inc
inc
in
push
xchg
mov
push
cwtl
inc
icebp
clc
test
mov
in
pushl
sbb
fucom
ss
mov
movsb
icebp
xor
push
movsl
loop
mov
les
in
fisttpl
adcl
leave
in
outsb
cltd
std
jg
stos
jge
nop
setp
and
outsl
mov
push
sub
adc
mov
cmc
cmpsl
jns
in
push
sbb
cs
xchg
jg
push
leave
movsb
fs
jmp
lods
dec
push
test
and
mov
insl
add
rorl
cli
mov
lret
orb
adc
data16
shlb
fcoml
and
mov
fadd
pop
mov
fbstp
icebp
pushf
popa
arpl
std
or
mov
sub
aad
outsb
pop
mov
inc
fs
cmc
mov
test
xchg
jmp
xchg
push
jle
jge
jnp
jge
and
cmp
mov
arpl
in
sub
lcall
sbb
cmp
div
shrb
cwtl
decl
mov
divb
in
shll
inc
insl
sbb
in
mov
xor
push
xchg
les
negb
mov
pop
ljmp
jno
cli
loope
popa
not
and
es
sub
fwait
pop
xor
mov
enter
gs
xor
cs
rclb
dec
enter
ja
cwtl
push
int
add
je
stc
jle
adc
fists
mov
xor
mov
pop
orb
outsb
xor
lahf
and
xor
fldenv
mov
dec
pop
sub
adc
pop
loope
or
xchg
jnp
ljmp
stc
mov
adc
stc
sbb
insl
aaa
mov
test
push
and
or
andb
mov
mov
lods
inc
int3
lahf
clc
into
jp
add
push
mov
pop
test
mov
pop
bnd
mulb
outsl
mov
pop
imul
mov
or
clc
mov
sub
fimuls
loope
ss
mov
jmp
notl
in
rcrl
insb
sti
aam
xor
outsb
dec
sbb
mov
push
mov
push
jmp
jg
daa
scas
inc
pop
pop
fnstsw
orb
or
iret
mov
inc
fisubrs
lret
shlb
dec
scas
js
jb
iret
mov
push
sti
mov
mov
xchg
mov
cmp
testb
aaa
setle
xchg
xlat
pop
inc
jne
ret
insl
sub
cld
xor
shll
iret
mov
mov
repz
jge
add
test
mov
and
mov
lret
out
push
pop
lret
jmp
enter
push
call
pop
insl
loopne
out
ljmp
mov
lcall
jno
movsl
jmp
sbb
dec
dec
sarb
cmp
inc
sbb
mov
add
push
inc
cmpsb
dec
loope
arpl
lret
push
jecxz
sub
sub
ret
std
or
jae
jg
inc
lods
scas
rcr
sbb
jl
mov
jno
lock
fcoms
test
orb
push
je
addr16
fistpl
hlt
xlat
adc
into
cltd
fnstcw
pop
daa
jg
sbb
dec
pop
cld
jle
mov
and
repnz
test
aam
jns
and
mov
les
fucomi
cmpsl
mov
popa
pop
loop
adc
addl
pushf
adc
inc
aas
pop
jle
xor
xchg
cmp
push
in
loopne
sahf
adc
xchg
scas
lret
add
fnsave
insl
mov
test
pop
enter
jo
fidivs
pop
jp
mov
fdivl
mov
pop
and
mov
icebp
or
cmp
mov
cmp
pop
jmp
stc
jne
dec
xor
inc
cmp
push
add
jnp
cmp
cmpsb
dec
jnp
mov
mov
or
js
mov
push
push
adc
int3
mov
mov
mov
sub
xchg
push
int3
xchg
das
add
mov
jns
jae
xor
sub
int
loop
or
aas
dec
loop
mov
imul
lods
shrb
in
sbb
pop
movb
cld
sbb
stc
push
sub
pushf
cltd
leave
inc
testl
icebp
decb
adc
cli
or
test
daa
clc
mull
data16
loopne
imul
call
lods
jae
mov
js
mov
aam
out
lret
testb
and
inc
add
jne
push
cmc
mov
sbb
mov
aad
inc
pop
sub
out
jne
repz
xchg
jg
sub
jp
lods
lods
fisttpl
jbe
cli
jae
mov
int3
hlt
dec
fidivs
jo
jl
xchg
stos
in
pop
inc
xchg
sub
lods
sbb
pop
fisubs
push
les
mov
mov
mov
aaa
sbb
dec
mov
clc
or
xchg
sub
or
mov
gs
cmpsb
dec
inc
popf
jno
lods
cs
movsl
sub
push
je,pn
xlat
jne
jecxz
inc
sub
sti
pop
imul
rorb
sub
fldt
cmp
fildl
ja
fsubrl
movsb
cmp
fsts
push
inc
dec
in
jb
or
or
lret
push
inc
dec
and
jg
lret
mov
roll
and
test
dec
gs
sub
inc
sub
cs
clc
sbb
jno
jae
mov
and
jecxz
cmp
lret
dec
xor
sti
push
je
aaa
mov
jmp
or
mov
jg
cltd
int3
add
adc
test
jle
popf
in
push
mov
loop
pause
and
xchg
pop
cmp
rcll
sbb
shrl
test
pop
mov
std
mov
jecxz
lock
popa
nop
push
femms
mov
rorb
pop
push
outsl
mov
je
into
stos
xchg
xchg
insl
sub
cmp
push
imul
adcb
sahf
les
sahf
je
inc
loope
jl
and
push
bound
enter
xchg
adc
ret
xlat
xchg
aas
xchg
pushf
jo
in
mov
stos
jns
cmp
xchg
sub
jae
mov
stos
mov
rol
xchg
push
inc
mov
mov
xchg
bound
ret
repnz
ret
push
test
fildll
popa
int3
pop
loope
dec
lds
xchg
add
or
sbbb
cmp
repnz
jae
and
mov
or
in
dec
js
push
frstor
lret
xchg
icebp
xchg
push
push
jle
mov
adc
fs
cmc
aas
add
lahf
dec
loope
inc
adc
adc
inc
or
dec
cltd
xchg
mov
and
aaa
xchg
pop
mov
sbb
adc
fcomps
decb
dec
inc
cmp
iret
mov
rcr
aam
lret
repz
mov
cltd
xor
add
lcall
and
inc
jne
add
mov
dec
pop
sub
dec
xor
pusha
xchg
inc
bound
std
push
pop
bound
imul
lods
cmp
and
lahf
loopne
add
sbb
jns
cltd
pop
jle
ss
cmpsl
or
jns
adc
add
out
inc
test
mov
xchg
xor
sbb
nop
dec
in
iret
jne
int
insb
call
mov
test
lret
inc
push
scas
jle
xor
rorl
int3
mov
imul
aam
mov
sub
sarl
lea
jmp
cmpsb
cmpsb
inc
add
sub
push
mov
lock
mov
sbb
popf
push
in
js
fbld
cmp
loop
push
fisubrs
ds
pop
inc
pop
lret
dec
aad
pusha
subl
xor
pushf
pop
mov
push
int3
fdivs
test
cmp
fimuls
mov
sbbl
xlat
lea
daa
xchg
dec
xchg
pop
fldt
push
out
jp
adcl
sahf
loop
outsb
fdivs
lea
ss
inc
lcall
ljmp
shr
in
xlat
add
or
nop
pop
sbb
and
shlb
or
cmpl
jne
dec
xchg
pop
scas
jg
push
into
xchg
jg
inc
pusha
call
pop
lahf
mov
mov
and
push
adc
mov
push
adc
test
push
ljmp
fbstp
rcrl
mov
xchg
repnz
fucom
js
insl
add
mov
push
pop
jecxz
iret
cmp
cmp
orb
add
mov
sbb
xchg
pop
adc
pop
test
and
mov
data16
mov
and
inc
mov
std
jl
and
bound
jl
lret
push
xor
sar
ffree
in
or
cmp
ss
aas
ret
push
sbb
sbb
adc
int
addr16
cld
inc
push
lods
sub
fwait
rcll
xchg
dec
or
lods
mov
fsubl
cmpsb
jns
add
add
jbe
adc
xchg
or
insl
xchg
cmpsb
mov
rorl
fadds
fcomi
push
jbe
or
bound
dec
mov
fcmovnu
adc
ja
add
xor
push
jecxz
dec
cmpsb
std
and
jge
lcall
cmp
rclb
mov
and
pop
lahf
outsb
fwait
idiv
lcall
ss
xchg
ficoml
xchg
pop
insb
push
in
sbb
mov
data16
imul
daa
pop
jae
jns
sbb
adc
add
mov
movsl
fidivl
jmp
cmpl
adcl
jg
mov
fisubl
lds
scas
rcl
sbb
test
pop
repz
cld
sahf
or
mov
repz
xchg
imul
pusha
movsb
xor
popa
pop
lret
jne
push
jle
inc
call
and
mov
dec
subl
test
xchg
sbb
pop
lret
mov
cmc
data16
push
cltd
popl
mov
test
ds
out
pop
adc
or
jnp,pt
test
test
test
mov
push
or
aas
xchg
mov
adc
add
adc
jg
lock
fsubl
cmp
or
cli
push
push
add
sbb
cmp
pop
jp
mov
sbbb
sub
fwait
and
sahf
out
inc
stc
xchg
sub
test
or
test
push
scas
mov
shlb
leave
xchg
lods
inc
lahf
sbb
mov
cwtl
mov
mov
ljmp
xchg
rcl
cmp
and
pop
in
push
sbb
push
sub
cltd
xchg
add
scas
movsb
or
fnstsw
lds
add
dec
dec
pop
jp
in
rclb
fnsave
aad
fidivrs
jbe
cli
fwait
gs
add
mov
bound
push
xchg
push
adc
xor
repz
mov
shrb
adc
rorb
stc
and
dec
or
js
inc
imul
test
scas
leave
and
push
or
mov
add
xchg
aas
int3
mov
fsubr
adc
cmp
jb
mov
andl
sbb
cmp
add
mov
bound
leave
int
scas
stc
cmp
mov
add
outsl
push
cmpsb
mov
pop
outsl
push
mov
mov
adc
test
push
and
dec
xchg
mov
sbb
mov
fs
popa
jl
jecxz
adc
out
pop
inc
jno
imul
out
xchg
js
icebp
add
mov
call
adc
enter
lret
or
cmove
xor
push
lock
loop
cltd
js
test
sti
or
es
das
jg
pop
lock
int3
arpl
roll
add
cmp
ret
popa
xor
ret
fiaddl
cltd
sbb
std
lods
adc
pop
jae
sub
in
clc
push
sti
mov
xchg
fs
imul
cmp
jg
in
aad
lret
sub
shl
add
mov
mov
stos
inc
sti
shrl
xchg
pushf
mov
dec
sub
adcl
inc
push
pop
imul
mov
aad
repz
in
nop
mov
lret
cmp
repz
vminps
sub
or
sub
jns
dec
data16
rcrl
or
outsb
pushf
adc
xor
out
xorl
in
cmp
scas
xchg
les
pop
shll
ljmp
ja
xchg
movsl
push
jmp
mov
int3
or
test
stc
xchg
pop
fnstsw
inc
mov
stos
icebp
mov
lret
arpl
jl
push
mov
shrl
mov
mov
pusha
mov
insl
sbb
mov
cmp
cmp
lcall
push
out
in
pop
lds
and
mov
xchg
mov
jp
cmp
adc
sub
jo
pop
mov
adc
xor
sbb
pop
lods
test
add
xchg
stos
jmp
in
sub
add
aaa
mov
imul
movsb
push
idiv
test
scas
rcr
add
andb
adc
fsubr
lea
movl
cmpsb
push
lcall
inc
bound
lahf
xchg
jo
jo
jae
adc
cmp
rolb
fcmovnb
inc
mov
scas
fnstcw
jmp
das
mov
jo
mov
outsb
or
fsubl
sub
mov
jle
mov
std
insb
push
and
jle
ds
sbb
adc
outsb
adc
sub
sbb
jge
push
jns
inc
push
jnp
cmp
xchg
fcomp
mov
sbb
cmpsl
pop
mov
daa
stos
jnp
loopne
and
mov
in
js
or
lahf
mov
mov
xchg
dec
loope
das
out
push
popa
cwtl
addr16
test
aam
gs
jnp
xor
and
sub
cltd
or
adc
sbb
dec
push
les
or
stos
pusha
neg
push
mov
push
dec
stc
or
das
push
jo
ret
shrl
sbb
sub
incl
adc
loope
insl
aas
push
ret
push
fsub
fisubrs
jo
pop
popf
data16
mov
lock
fidivl
xchg
lcall
outsb
jmp
mov
aas
ljmp
jg
test
jl
and
push
lahf
pop
or
mov
push
add
pop
scas
outsb
pop
sahf
sbb
inc
mov
sbb
add
int
insb
add
or
jecxz
push
mov
ds
in
int
add
cltd
xchg
out
sbb
insl
lods
test
inc
sar
ss
stos
mov
lret
xchg
dec
mov
jb
call
xor
sahf
push
jne
inc
xchg
pop
prefetch
fbstp
adc
ret
add
ss
test
loope,pt
xchg
ret
sub
cmpsb
jmp
pusha
mov
inc
fs
sub
ss
cmp
pop
cwtl
mov
pop
decl
add
cmpsl
mov
add
out
mov
dec
les
cmpsl
pop
and
sbb
push
xor
sahf
jne
xchg
leave
jecxz
or
or
test
sbb
fadds
lret
adc
push
push
cwtl
ret
rcrl
xor
or
push
mov
push
mov
outsl
jno
aad
inc
jnp
jbe
or
jb,pt
call
enter
ret
loopne
fdivs
cmp
gs
lock
daa
das
sbb
mov
in
inc
mov
aad
push
out
mov
cmp
lret
lret
adc
xchg
mov
mov
rcr
jmp
loop
inc
mov
dec
pop
sti
mov
pop
fwait
inc
mov
xchg
add
cmp
jg
push
repz
xor
xchg
cwtl
xor
in
push
inc
pop
and
nop
add
mov
xchg
push
push
stc
and
jae
inc
cmp
aad
and
mov
mov
and
lcall
xchg
clc
iret
inc
cs
lods
cmp
outsl
dec
dec
adc
loop
xor
stos
mov
loop
pop
popa
adc
push
xor
fimull
ljmp
imul
xor
inc
mov
cmovbe
loope
addl
mov
mov
and
xchg
sti
cmp
es
xchg
loop
inc
sbb
cld
or
pop
xchg
or
sub
fidivl
mov
in
test
ljmp
push
incb
cmpb
movlps
dec
pop
andl
cmp
xlat
inc
xchg
mov
insb
nop
add
test
adc
cli
addr16
repz
mov
or
xor
and
xchg
cmpsl
adc
or
inc
dec
fnstenv
xchg
mov
leave
xchg
xlat
jbe
fs
incl
aam
sbb
sti
ret
jnp
dec
jp
shr
jmp
ffreep
loopne
or
ljmp
call
mov
adc
faddp
loope
pop
imul
shrl
and
cli
jae
scas
pop
pop
ljmp
push
cmp
push
xor
sbb
lret
jl
xchg
and
mov
jecxz
inc
lret
add
fiadds
out
in
or
incl
xor
testb
pop
bnd
mov
push
out
inc
incw
lods
dec
push
mov
adc
mov
shl
xor
fistpl
pop
ljmp
faddl
add
xchg
mov
lcall
cmpsl
jmp
mov
add
fdivrl
jne
ret
repnz
movsl
sbb
pop
add
sub
push
outsl
arpl
rcrl
fisttpl
push
pop
rclb
cld
stos
insb
addr16
cwtl
test
insb
mov
sub
cwtl
outsb
fdivr
push
or
mov
and
xor
or
loope
sbbl
jmp
and
mov
lods
push
xchg
sbb
push
xchg
outsb
andb
mov
mov
pop
minps
icebp
ffreep
jle
imul
add
out
inc
adc
push
repz
aaa
loop
cltd
jle
jno
loop
sbb
xchg
pusha
dec
cmp
inc
inc
fnstsw
ss
cwtl
fs
leave
hlt
mov
divl
aaa
cmp
aad
sbb
sbb
rclb
jmp
add
jg
das
mov
iret
btr
add
sbb
mov
pop
mov
shlb
dec
mov
cmpsl
jmp
jae
leave
sub
jl
lds
insb
nop
dec
pop
dec
test
mov
and
dec
adc
mov
jl
xchg
and
jecxz
adc
nop
xor
insl
mov
pop
push
fildl
test
bound
enterw
mov
aam
gs
or
cli
cmp
jle
jl
xchg
sub
mov
lock
daa
inc
mov
movsl
or
mov
cmpsb
pusha
pop
cltd
movsb
push
out
popf
lret
lahf
push
cmp
jmp
jp
mov
sbb
ja
rcll
push
icebp
jle
inc
push
inc
mov
xchg
add
xlat
popf
jg
sub
aad
xlat
cld
push
or
pop
jle
dec
test
add
add
bound
push
push
adc
rclb
bound
mov
push
push
xchg
push
fwait
jae
insb
pop
hlt
jmp
dec
jle
iret
mov
stos
push
pop
push
pop
js
xchg
data16
push
sub
fistl
aas
mov
loopne
or
sbb
mov
mov
sub
inc
mov
pop
cmp
stc
pause
enter
push
loope
aam
das
xchg
lods
cmp
mov
in
add
add
fs
jo
push
icebp
dec
dec
sub
shr
js
xchg
cmpsb
or
mov
xor
movsl
jp
rcrl
pusha
pop
fcompl
adc
pop
mov
fbstp
xor
inc
popf
jo
stos
std
and
call
ret
cmp
loop
and
enter
clc
or
push
pop
or
clc
pop
pushf
xor
pushf
mov
inc
fldenv
sarb
inc
nop
outsb
sub
insl
pop
rcrl
pop
mov
add
adc
xchg
xchg
test
jb
pop
mov
fwait
into
rcrb
add
xchg
mov
jne
mov
dec
pop
stc
adc
mov
popa
xor
jo
or
cmpsl
inc
shlb
and
aam
add
cwtl
aaa
or
das
mov
dec
jne
mov
std
in
inc
jmp
xchg
or
cltd
aad
loop
ss
and
loop
xchg
fcomi
adc
scas
in
fidivrl
dec
lret
mov
jle
xor
jg
hlt
lea
test
push
imul
cmp
xorb
test
push
movsl
stos
cmpsl
push
lods
mov
mov
xchg
mov
aam
outsl
cld
repz
fcompl
imull
notl
push
iret
cmp
jae
sub
dec
insb
xor
out
bound
shl
cmp
pop
movsb
aas
cmp
sbb
adc
push
in
dec
arpl
pop
dec
fcomps
mov
add
sbb
sub
popa
mov
mov
movsb
or
mov
mov
jnp
xchg
in
jge
lds
es
stos
push
pop
movsl
pop
out
mov
xchg
pop
jge
dec
filds
jae
addr16
cmpsl
ds
gs
push
xchg
add
pop
in
cli
mov
sub
jns
cli
pushf
iret
stos
cwtl
mull
fs
xorl
movl
cmp
iret
xor
out
loop
fsts
mov
aaa
inc
lods
lds
dec
aam
mov
pop
xor
cmpb
sub
lock
pop
sub
cmpsl
je
sti
mov
mov
shr
xchg
add
or
popa
cmpsb
arpl
fistpll
cmp
imul
in
add
ret
push
andb
lret
cmp
stc
in
dec
jmp
push
aad
sub
jge
jg
pop
sub
fstpt
clc
and
xchg
xchg
add
sbb
int
test
cmc
adc
add
test
movsb
mov
ret
mov
scas
loopne
sahf
outsl
pop
mov
imul
jmp
mov
dec
arpl
inc
into
gs
push
jne
aad
cmpsl
fmuls
in
add
das
xor
ss
data16
stos
lret
jbe
add
push
mov
or
or
shl
repz
cs
dec
xor
lods
mov
in
cmp
sub
push
daa
jle
add
xchg
popf
push
mov
fsubr
dec
rolb
add
adc
jnp
ret
xchg
cmp
pop
pop
das
lcall
cmpsb
fcomps
sub
cmpsb
int3
dec
lods
mov
popf
arpl
arpl
lock
mov
or
mov
in
cmp
out
out
mov
pop
sub
xchg
dec
push
lods
aad
outsb
clc
jns
mov
mov
mov
fisttps
lea
loope
jno
stc
inc
int3
es
xchg
inc
stos
mov
adcb
test
sahf
lods
dec
dec
in
scas
ljmp
sub
mov
aam
jo
mov
pop
mov
and
jo
xor
jae
jmp
jbe
ds
fdiv
out
pop
lds
pop
mov
push
insl
mov
pop
cmp
cmpsb
and
pop
iret
pop
add
cmp
andb
xlat
ret
mov
push
fistps
std
dec
dec
test
push
call
mov
iret
lret
mov
sahf
lods
xor
int
and
inc
fistps
push
in
clc
pop
dec
or
sbb
int
vmread
loope
enter
cmp
push
rorl
pop
sti
pop
aas
mov
ret
pop
hlt
mov
in
dec
insl
inc
pop
inc
test
popf
icebp
and
and
bnd
adc
cwtl
loopne
jae
xchg
cmp
and
gs
sub
and
scas
jno
xor
jns
add
imul
mov
and
fldl
dec
out
push
rorb
dec
jno
inc
xlat
test
pop
xchg
jae
pop
sub
out
xchg
aaa
jmp
inc
xlat
loop
cmpsl
mov
inc
jne
mov
add
imul
test
mov
outsl
sub
sbb
rclb
xchg
jns
or
jo
xor
push
repnz
mov
dec
psubb
dec
mov
mov
jge
push
mov
insb
xlat
pop
sbb
lcall
popa
mov
loop
pop
ljmp
push
in
insb
jp
dec
js
pop
ds
pop
mov
lcall
mov
lods
nop
cmp
jbe
xchg
cltd
or
mov
cmp
aam
xor
sbb
push
dec
nop
mov
aam
std
add
into
sbb
les
adc
aam
inc
enter
jbe
mov
mov
mov
fnsave
push
pop
mov
mov
aad
xchg
mov
dec
ljmp
pop
inc
jle
adc
and
pushf
scas
add
dec
in
cmpsl
fstpl
fnsetpm(287
jnp
mov
cwtl
das
fmuls
dec
aaa
fmull
mov
mov
or
jmp
or
cmpsb
jae
sub
jecxz
mov
dec
mov
mov
fistl
fbstp
adc
dec
pop
loopne
into
loop
in
lds
loope
inc
daa
dec
adc
mov
mov
lock
into
push
fnstenv
or
test
rolb
xor
out
push
mov
shrl
xchg
mov
pop
testb
dec
push
jecxz
dec
lcall
aam
lar
sub
mov
push
xchg
mov
sub
incb
ss
addr16
fucomi
xchg
dec
fiadds
xchg
sbb
push
rorl
jg
xchg
or
hlt
and
cmp
dec
ljmp
das
enter
jb
ret
cli
push
testl
xchg
loop
repnz
dec
ss
cltd
stos
jge
push
pop
cwtl
jne
add
sbb
push
mov
jbe
mov
mov
dec
in
jnp
inc
mov
imul
pop
mov
xchg
mov
dec
mov
add
das
sti
shll
jp
push
mov
jae
jne
xchg
lea
push
cltd
and
daa
ja
bound
aas
mov
xor
or
imul
inc
fdivl
push
loope
div
mov
ret
lahf
ret
adc
inc
loopne
mov
xchg
call
push
jecxz
lods
out
inc
mov
test
out
lods
sbb
mov
daa
push
lds
fwait
adc
xor
inc
adc
mov
fst
sub
rcrl
mov
pop
xorb
out
pop
int3
arpl
shr
mov
inc
push
std
sarl
add
adc
sbb
test
push
or
jns
cmp
mov
int
dec
pop
pushf
push
mov
leave
lret
xor
rcrl
push
out
mov
add
jge
lods
out
pop
stc
aaa
ss
roll
push
sub
test
jmp
inc
daa
lds
mov
stc
sti
xchg
aaa
dec
in
jecxz
sbb
adc
xchg
movb
daa
xlat
cld
jp
jb
ficoml
cmp
stc
push
mov
jne
jl
xlat
and
fldenv
shrb
mov
fdivl
pop
add
mov
das
std
imul
xchg
dec
jno
call
xchg
fmull
leave
xor
jo
cld
pop
push
inc
pop
mov
cld
pop
push
pusha
sub
push
sub
daa
clc
lds
shll
mov
addr16
mov
xchg
push
mov
ljmp
stc
xchg
sub
orl
or
lea
push
pop
xchg
mov
adc
lea
mov
jmp
xor
ds
jge
shlb
mov
mov
test
push
ror
inc
stos
sbbl
fcoml
cmp
mov
sbb
pop
dec
jl
mov
loope
in
jecxz
test
popf
cmp
inc
in
outsl
paddsw
mov
push
subl
dec
push
mov
push
sub
mov
mov
test
stc
sbb
int
icebp
mov
dec
add
cs
push
incb
stc
nop
stos
push
sbb
push
xor
int3
fildll
or
cmp
push
cmp
sub
loopne
cmp
jmp
mov
sub
adc
xor
loop
push
xor
cmpsl
jp,pt
flds
jmp
fcomi
xchg
xor
mov
xor
mov
xchg
pop
loope
adc
stos
dec
ja
push
stos
gs
int3
jbe
jbe
test
scas
add
add
xchg
jb
sub
stos
mov
dec
fcmovnb
lcall
cmp
aam
jb
mov
popa
lret
xlat
sbb
sbb
mov
imul
sbb
push
jg
jae
dec
mov
jae
jo
lahf
xor
xor
iret
mov
jb
sahf
xchg
sbb
fistps
mov
mov
mov
in
out
add
icebp
fstpt
jp
loopne
cmpsl
adc
jle
in
sbb
and
imul
add
jb
push
dec
shrb
decb
sahf
dec
pop
dec
sub
dec
adc
and
dec
out
sbb
add
iret
cmp
adc
jbe
xchg
in
cmp
push
mov
jno
mov
hlt
mov
mov
inc
fisubs
les
testb
jge
lahf
xchg
out
xchg
push
or
and
out
xchg
sub
mov
jp
sub
insb
xor
dec
movsb
scas
imul
repnz
call
int
daa
arpl
ljmp
jg
pop
sub
data16
fcmovbe
jnp
ret
inc
pop
jl
inc
fnstenv
xor
out
insl
and
cmp
sti
idiv
nop
js
jns
mov
cmp
push
add
push
mov
leave
repz
sub
fwait
pushf
fs
push
out
ret
mov
sbb
fiaddl
mov
cmpsb
arpl
ja
scas
push
xor
sbb
lds
gs
xchg
pushf
add
lds
and
roll
fisttpll
or
pop
repnz
inc
int
xchg
scas
push
mov
outsb
jle
dec
sub
mov
dec
xchg
or
xor
scas
sbb
aad
cmp
mulb
pop
jge
add
icebp
cmp
inc
enter
xor
je
sub
arpl
mov
cli
sbb
push
xchg
pop
and
arpl
scas
inc
stos
das
mov
test
test
sub
dec
mov
hlt
rorl
mov
in
bound
add
rorl
paddsb
or
dec
ds
sub
pop
add
lods
inc
mov
adc
or
data16
mov
mov
cltd
mov
insl
sub
shld
xchg
leave
pop
inc
lock
push
enter
sub
push
nop
fs
inc
sub
das
shl
loop
and
dec
mov
ja
insl
das
cld
inc
lods
fstl
out
jo
sbbl
sbb
xor
dec
out
shll
lret
fwait
jge
iret
mov
repz
ret
adc
and
sub
jo
dec
add
int3
sbb
mov
imul
mov
arpl
push
mov
loopne
cmp
push
in
nop
sbb
jo
pop
pop
je
inc
hlt
mov
pop
jns,pt
push
es
fidivrl
pop
fldt
sbb
mov
xor
pop
les
add
mov
call
adc
fidivrs
aas
jno
sub
icebp
ds
aas
mov
push
pop
shrl
cs
enter
jg
sbb
push
lods
inc
dec
push
mov
lret
pop
mov
lds
popa
xchg
xor
jne
imul
mov
mov
push
aaa
mov
pop
dec
int
jp
mov
movsb
das
cmpsb
cmp
inc
test
mov
outsl
lcall
repnz
inc
or
mov
pushf
leave
cmpsb
dec
clc
pop
repz
sub
xor
insb
std
push
icebp
in
test
and
and
inc
shll
sub
pushaw
adc
adc
ss
xchg
wbinvd
xchg
sub
mov
repnz
out
popf
cmp
jle
ret
mov
pop
repz
xchg
sub
pop
adc
jns
and
mov
sbb
mov
or
inc
mov
cwtl
lea
lods
mov
jl
inc
push
sbb
or
xor
pop
lret
push
sub
cmp
mov
mov
dec
mov
notb
aaa
stos
add
add
out
xchg
out
mov
movsl
aad
out
stos
pop
sub
pop
int3
dec
stos
jmp
aaa
sbbl
test
cld
pusha
in
mov
andb
dec
mov
jp
loop
in
das
mov
mov
mov
mov
fbld
aaa
mov
in
pop
jb
push
sub
cmc
push
cmc
mov
aam
dec
movsb
add
sub
in
mov
or
sbb
mov
jmp
or
jge
xchg
dec
ror
nop
jl
es
lahf
sbb
cmp
lea
outsl
rcrb
fidivrs
pop
cltd
mov
cmpb
push
xor
sbb
mov
push
jno
lods
pop
js
rcrl
push
push
sub
jae
and
fwait
es
dec
dec
add
roll
mov
cmp
dec
cli
popa
addl
adc
ret
int3
enter
push
int
cmp
pop
imul
xor
add
dec
jp
add
scas
mov
mov
mov
in
jmp
mov
lods
fisttpl
and
push
push
push
out
hlt
jns
push
jno
lcall
mov
popa
lds
in
pop
addr16
imul
insl
rcll
fsubs
sbb
xor
fisubrl
jmp
data16
or
or
popf
jecxz
xchg
jg
int3
pop
mov
pusha
add
mov
add
nop
push
ret
aam
jecxz
and
ljmp
insb
js
ret
repz
popa
jne
ficoml
frstor
shl
pop
sti
in
mov
push
fisubrs
lcall
jns
and
lcall
in
push
aaa
out
sbb
nop
mov
cmp
lret
cld
add
mov
sbb
push
xor
mov
add
in
sub
lahf
ss
xor
lods
pop
mov
int
sbb
sti
pushf
or
fdivl
jmp
out
or
cwtl
stos
inc
stc
pop
xor
push
sbb
xor
fisubl
lods
cmp
or
ja
mov
xor
ja
sbb
int3
fwait
xor
and
jne
fldl
or
cli
mov
cli
xchg
rolb
push
pop
mov
inc
and
cmp
sbb
adc
sub
pop
ljmp
aad
cmpsl
ds
es
ljmp
push
popa
push
or
shlb
xlat
lods
pop
in
jne
int3
dec
test
sbbl
adc
inc
ret
icebp
shlb
out
mov
std
dec
pop
or
imul
jge
pop
imul
mov
movd
jae
jae
shlb
mov
jo
sbb
jb
dec
insb
mov
test
and
lods
inc
push
pusha
fists
jecxz
dec
das
insl
sub
mov
dec
pop
mov
mov
lcall
inc
fwait
aad
aas
pop
mov
cmp
dec
out
dec
lock
test
je
addr16
jae
test
add
jle
int
das
aam
popa
cld
sub
pop
pop
and
or
jo
xchg
jne
xor
in
cli
out
pushf
xor
xchg
ds
dec
mov
lcall
sub
ds
xchg
inc
inc
fiadds
jne
loop
mov
fiadds
divl
stos
sbb
ss
jae
adc
push
pusha
testl
lods
jnp
mov
cmc
stos
and
in
movsb
cs
stos
repz
lds
loop
pop
aas
fisubs
and
push
insl
insb
push
outsb
lds
xor
mov
test
mov
out
mov
pop
pop
add
rcll
cmp
popf
dec
leave
jp
int
xor
xchg
mov
xor
pop
jge
adc
mov
sub
xchg
insl
mov
sub
int3
xchg
inc
inc
dec
jmp
jnp
dec
xor
scas
ffree
repz
cmp
pop
xchg
mov
and
dec
or
sub
lahf
test
push
push
lea
loop
outsl
lds
dec
add
xchg
fisubrs
dec
aad
mov
sub
cmp
sub
push
sub
pop
in
xchg
bound
adc
xor
mov
jge
sub
int3
or
cmp
adc
xor
dec
mov
xchg
sub
scas
inc
dec
data16
xchg
scas
and
pop
cmp
fucomp
cltd
imul
lahf
insb
jecxz
or
jecxz
mov
push
mov
push
outsl
jle
cmp
jnp
jge
inc
and
jl
mov
call
in
pop
sar
in
insb
sbb
or
jne
lea
cwtl
and
push
bound
cltd
jo
leave
mov
and
in
sti
mov
rolb
sub
leave
sti
movsb
inc
aas
into
add
adc
xchg
cmpl
add
ss
sbb
mov
xor
cmp
stc
popf
push
xchg
mov
cwtl
fwait
and
testl
cli
jp
adc
or
mov
lds
in
mov
xchg
sbb
sbb
xlat
mov
inc
cltd
xlat
dec
imul
adc
inc
pop
imul
lds
cli
pushf
jo
lcall
dec
cmpsl
sbb
or
or
push
sub
xor
ss
xlat
mov
cltd
fisubrl
dec
mov
imul
cmp
call
adc
fs
sbb
lret
das
mov
rcl
add
and
or
mov
je
int
rclb
push
push
xchg
mov
xchg
scas
jmp
vaddsubps
out
fbstp
xchg
dec
scas
jmp
dec
jle
aas
lret
shrl
popf
test
push
mov
and
or
jnp
ds
rcrl
shrb
nop
dec
cmp
pop
loop
outsb
sbb
shrb
jp
data16
adc
dec
ss
mov
jns
pop
imul
mov
xor
gs
outsb
bound
push
out
cmp
rclb
mov
inc
jl
cmp
sbb
jp
je
xor
or
mov
or
cmp
je
movb
icebp
sti
or
push
adc
xchg
mov
xchg
adc
cmp
cwtl
in
or
mov
or
lds
add
pop
ds
in
outsb
sahf
int3
dec
sarl
mov
or
vpsrad
add
dec
mov
fcmove
xor
sar
mov
in
cmp
push
xchg
mov
popa
sbbb
pop
mov
mov
jl
rorb
jns
cltd
add
clc
add
jae
lods
aaa
jecxz
addr16
pop
icebp
inc
fsubl
repz
inc
cli
push
mov
pop
fnsave
andb
pand
xor
mov
cmp
jmp
ds
sahf
adc
and
or
sub
addr16
xchg
add
mov
xchg
sahf
sub
pop
call
and
or
sbb
fcoms
pop
imul
je
shlb
stc
lss
scas
and
xlat
add
es
insb
or
repnz
add
add
mov
push
sub
xchg
es
popa
rcrb
fs
inc
mov
jp
mov
push
andb
cwtl
add
inc
push
ds
jne
nop
mov
sarl
rol
lds
pop
call
push
jmp
xor
inc
lahf
xchg
out
enter
jno
dec
fldl
add
imul
orl
cmp
repz
mov
and
add
add
loope
mov
add
adc
or
xorl
pop
lock
shrl
mov
sbb
add
stos
sti
or
cmp
sbb
hlt
mov
inc
sub
fmull
mov
sbb
mov
pop
xchg
push
leave
test
clc
cmp
mov
mov
leave
movsl
mov
pop
fsubs
xchg
fisubs
stc
jl
or
push
or
xchg
adc
mov
mov
jl
dec
xlat
popa
xchg
sub
lret
daa
cld
bound
or
clc
iret
loope
fwait
std
dec
mov
xorl
push
or
icebp
push
xchg
pop
adcl
addr16
imull
ret
stc
push
orb
shll
pop
xor
int
xor
mov
mov
mov
jge
jg
gs
mov
jbe
sub
shl
clc
rolb
adc
pushf
dec
mov
fwait
jbe
pop
fcmovb
nop
mov
stc
insb
jecxz
sete
and
cli
inc
cld
xor
std
push
das
cmp
jge
sbb
hlt
dec
fcompl
repnz
jg
jl
pop
mov
lods
or
das
stos
push
xor
inc
js
insl
test
push
in
lods
mov
xor
lds
add
cmp
mov
loope
or
lods
mov
mov
sbb
insb
sti
rcrl
movsb
andl
clc
dec
mov
jne
or
cmp
adc
mov
sbb
add
mov
push
gs
mov
sbb
es
pusha
cmp
pop
lock
jns
push
cmpsb
inc
fcom
and
adc
add
add
cmc
loope
icebp
mov
movsb
nop
ret
adc
push
in
das
frstor
mov
test
jae
sub
lods
call
xchg
push
and
mov
lahf
scas
xchg
xchg
insb
in
pushf
dec
imul
xchg
push
fwait
movsb
xchg
sub
mov
popa
cld
decb
adc
mov
imull
jp
jge
lret
mov
sbb
adc
ja
loop
stc
adc
scas
xor
pop
or
cmp
pop
push
aas
fbld
lods
xchg
cmpsb
mov
mov
shrb
fdivrl
rol
aaa
loopne
sub
andl
movsb
out
bound
insl
mov
pop
loope
mov
imul
or
ret
hlt
movsl
scas
lea
sub
xchg
adc
test
rorb
xor
frstor
cmc
push
das
cmp
shr
js
mov
ret
push
or
inc
dec
sbb
ljmp
mov
and
movsl
mov
in
sub
cld
inc
test
imull
jg
bound
xchg
sbb
dec
test
dec
add
sbb
jae
loop
in
fucomip
cli
push
jo
pop
jnp,pn
pop
fdivl
sbb
out
xchg
dec
mov
jns
adc
pop
addr16
int
cmp
jns
psadbw
jg
mov
ret
bnd
and
and
push
jp
mov
or
fstps
jl
inc
stc
je
xor
xchg
jb
fists
test
sub
or
jle
and
in
fcomps
lods
jmp
sub
ljmp
jp
leave
call
and
daa
xchg
mov
sbb
or
jge
gs
add
cmp
dec
test
sub
and
pop
je
pop
aad
mov
fbld
clc
cmpsl
dec
mov
add
dec
inc
dec
lods
fmull
vpextrw
aaa
push
loope
xchg
test
fcomps
shll
aaa
in
xchg
data16
push
and
clc
jge
clc
mull
or
es
sub
push
out
mov
jge
mov
filds
sub
fcoms
push
jnp
mov
add
cmp
sub
in
push
push
out
ja
xor
xchg
push
gs
mov
xchg
mov
pushf
inc
inc
xchg
ja
bound
mov
bound
test
jmp
sbb
mov
jle
xlat
out
das
stc
out
jecxz
mov
and
daa
ds
xchg
mov
pop
je
ljmp
sub
sub
inc
mov
add
mov
pop
mov
jns
mov
pop
lret
pop
repz
dec
pop
sbb
add
mov
fucomp
dec
cmp
pop
xor
ds
fwait
adc
jne
push
or
sub
cmc
or
sub
adc
xlat
cltd
xor
pop
bound
cmp
and
lcall
aam
nop
stos
mov
test
xchg
stos
pop
movsb
fsubl
mov
xchg
cmpsl
fadds
mov
mov
jns
lcall
cmpsb
mov
in
inc
jge
sub
ss
sub
push
jb
pop
xor
dec
inc
sbb
out
ja
add
inc
jg
push
popf
enter
gs
inc
lahf
gs
xchg
xchg
add
rolb
adc
call
cmp
jecxz
mov
fistpl
incb
mov
aas
add
movd
xchg
sub
cmp
into
mov
push
mov
daa
test
arpl
int
fmul
roll
dec
sbb
into
mov
dec
insl
mov
dec
dec
in
adc
add
es
or
idivb
decb
das
icebp
xor
jmp
or
stos
popf
stc
mov
jecxz
fs
adc
mov
fwait
cmpb
xchg
call
pop
aas
call
es
movsl
mov
and
rcr
dec
rclb
cld
dec
add
mov
stos
mov
mov
push
fidivl
pop
cwtl
mov
dec
add
ljmp
test
mov
sbb
add
jbe
sbb
jmp
add
sbb
clc
jns
addr16
mov
or
xor
int3
jmp
loop
xchg
fsubr
cltd
or
nop
mov
shrb
xchg
xchg
shrl
or
push
mov
insl
int
or
add
add
pop
xor
test
mov
sub
xchg
pusha
adc
xchg
pop
xlat
inc
mov
aas
testb
dec
aas
jns
in
sbb
adc
js
inc
sbb
dec
inc
test
push
ljmp
push
xchg
hlt
mov
pop
mov
or
test
out
and
ja
cmpsl
in
fstpl
xor
adcb
adc
xor
sbb
icebp
cmp
das
xor
sub
add
jbe,pt
mov
gs
jmp
fiaddl
sti
fstps
test
push
fptan
fs
and
aam
adc
mov
dec
fists
lcall
jmp
adc
std
aam
fdivrp
mov
adc
xchg
mov
inc
lret
inc
jmp
add
lea
mov
push
mov
daa
ljmp
push
test
outsb
adc
ficoml
mov
fmulp
mov
mov
or
rorl
xchg
imul
lcall
imul
or
adc
push
add
push
pop
stos
outsl
push
add
or
movl
and
stos
dec
inc
insl
push
xchg
inc
test
aad
loope
mov
mov
and
movsb
fiaddl
jp
add
add
in
mov
mov
inc
insb
lahf
ror
xchg
add
addr16
xorb
push
aas
push
inc
cmovbe
add
jo
in
jg
sahf
clc
movsb
xchg
pop
ja
mov
mov
jg
mov
pop
jmp
adc
enter
xor
mov
pop
push
push
popa
gs
inc
mov
pop
adc
and
ss
xchg
jmp
sbb
lcall
jns
dec
sub
lcall
xor
or
leave
fwait
das
push
and
sub
data16
inc
mov
mov
cmc
dec
ret
xchg
out
fstps
mov
xor
fwait
mov
popf
stc
adc
imul
lret
lea
xchg
lea
cmpl
sbb
or
or
fs
or
test
jns
popf
mov
and
cmp
aas
mov
cs
sbb
fisubrl
lcall
sbb
int3
sbb
dec
mov
jb
daa
mov
shrl
or
stc
je
and
in
daa
call
jae
jmp
dec
leave
push
sarb
ljmp
sahf
movsb
enter
push
out
out
sub
inc
pop
jno
cwtl
mov
rolb
aaa
shlb
lds
insb
filds
cmpsl
dec
dec
flds
insb
mov
dec
cmc
and
cmp
out
mov
cwtl
adc
cld
in
cs
xor
jmp
mov
cmpps
jb
leave
loope
or
aad
mov
cmp
mov
dec
std
in
xor
push
lods
cmp
stos
fimull
insl
fnstcw
cmp
fadds
cmp
adc
loop
add
cmp
cli
push
jae
jmp
cmp
xchg
js
or
and
xchg
negl
or
jl
clc
or
popf
cmp
sbb
insl
rcrb
dec
ffree
inc
dec
add
sub
sbb
ja
sub
and
sahf
sbbl
xchg
mov
ret
adc
test
decb
mov
cmp
jmp
ljmp
test
out
jbe
inc
std
sbb
jecxz
iret
jns
aam
mov
fistpll
frndint
icebp
stos
push
pop
fcmovbe
cmp
in
add
and
cwtl
out
inc
mov
pop
int
lods
je
popa
inc
nop
imul
jns
xor
aad
loopne
jnp
push
add
mov
cmpsl
add
mov
clc
push
push
sbb
push
test
mov
mov
fs
jmp
push
imul
jae
mov
mov
mov
loop
sahf
push
cmp
push
dec
inc
aaa
mov
fnstsw
shrl
jmp
test
test
xchg
xchg
jo
scas
pop
sub
hlt
stc
insl
dec
add
out
fisubrs
xor
divb
push
lahf
inc
sub
mov
mov
fsubs
push
sbbb
pop
jb
add
ss
sar
outsl
loop
dec
xchg
dec
cmp
jns
or
push
ja
cmpsl
icebp
loop
out
jo
mov
clc
pop
fsubrs
xchg
divb
mov
jge
int3
dec
test
in
daa
outsl
jnp
inc
in
aad
es
xchg
dec
jae
jo
adc
sub
test
div
bound
scas
add
rorb
lock
fwait
mov
add
cmpl
loopne
mov
or
sbb
mov
xor
mov
lret
hlt
push
imul
je
and
jge
push
pop
push
pop
les
and
or
xchg
mov
jae
in
scas
fmulp
shr
sti
sbb
sbb
or
push
mov
hlt
push
mov
aas
shlb
icebp
movsl
or
xor
mov
insl
push
cmpsl
addr16
xchg
xlat
repz
fdivp
inc
adc
ret
lcall
jne
fisubrs
cmpb
dec
inc
push
repz
test
dec
into
cwtl
idivb
testl
xchg
mov
dec
fcmovne
out
jne
sub
xor
xchg
hlt
lret
mov
dec
adc
cmp
jbe
lcall
outsb
adc
popf
xor
jae,pt
or
sub
xchg
pop
lds
imul
popa
push
xchg
mov
sar
mov
orb
mov
inc
aas
push
inc
mov
jg
mov
repnz
hlt
imul
sub
loope
and
cmpsl
mov
sbbl
iret
jecxz
add
and
pop
push
add
stos
mov
adc
sub
jg
inc
and
add
popa
sbbl
bndstx
pop
push
jno
and
push
sub
xchg
sub
sbb
xor
mov
int3
xor
or
scas
adc
rcrb
hlt
mov
add
movw
out
shll
data16
imul
faddl
nop
lcall
ja
mov
clc
mov
mov
rcrb
mov
mov
test
into
cmp
pop
lock
pop
insl
mov
add
stos
pop
les
sbb
arpl
cmc
adc
dec
test
add
clc
pop
int
adcb
and
push
shll
popa
jno
mov
repnz
inc
lods
rorb
jle
add
cmp
mov
lret
pop
mov
test
push
cwtl
aas
sarl
jnp
sub
jp
fs
sub
cltd
push
push
fwait
xchg
into
jb
lock
scas
mov
add
pop
mov
cs
xlat
cld
ds
mov
arpl
pop
int
sti
mov
les
push
pop
test
or
sub
push
aas
pop
roll
lcall
in
shl
lret
aaa
into
and
xlat
cmpsb
in
aam
jnp
jecxz
jbe
movsl
mov
out
call
fldl
imul
sbb
mov
mov
mov
mov
in
std
adc
and
xor
and
inc
and
lods
test
fucomip
cmpsb
lods
pusha
pop
fsubrp
lods
inc
push
jo
mov
mov
push
out
xlat
pop
test
repz
jl
fs
xchg
jns
adc
stos
adc
cld
xchg
inc
mov
lahf
not
push
or
insl
subb
add
sub
cwtl
inc
lahf
ss
xor
call
lea
fcmovne
nop
daa
js
inc
fwait
jmp
cmpsb
push
cmpsb
gs
lock
cwtl
push
ja
jl
test
inc
std
sbb
popf
push
cwtl
pop
xor
push
adcb
mov
pop
in
fcomps
cmp
and
sub
jmp
xchg
sbb
mov
outsb
aaa
stos
inc
push
push
leave
and
sbb
cmp
mov
stc
je
out
ss
pop
fmuls
add
push
sub
pop
into
out
in
dec
add
push
cmpsl
out
pop
jb
call
gs
pop
test
mov
enter
mov
das
aad
in
test
dec
mov
js
jl
xchg
in
mov
push
mov
ja
pop
popf
jo
xchg
fidivl
pop
mov
jne
ficoms
nop
dec
cmp
lcall
sarl
mov
mov
ficoms
mov
jbe
das
or
push
pop
scas
add
xor
pusha
mov
sti
adc
jo
aas
outsb
test
mov
test
test
lret
iret
fisubl
ret
ret
sahf
dec
mov
inc
push
es
push
or
adc
adc
push
mov
adc
sub
mov
arpl
in
xor
icebp
add
lock
pop
cmpsb
in
jns
ljmp
lods
ds
dec
in
pop
xor
xchg
sarl
gs
pop
ficoml
stos
bound
mov
xorl
clc
and
mov
pop
adc
mov
inc
in
fwait
inc
es
fstpl
jl
mov
sahf
leave
mov
pop
jno
cmpsl
mov
mov
jge,pt
push
mov
out
and
push
pop
les
insb
sub
cltd
stos
pop
and
aas
mov
add
xchg
xchg
call
jecxz
pop
push
out
mov
lret
xchg
dec
icebp
pop
sbb
aas
add
dec
cmpb
mov
or
fucompp
sarb
and
test
test
xor
sbb
cmc
xchg
or
lcall
dec
negl
push
xchg
vshufpd
test
add
pop
xchg
sbb
pushf
ja
and
imulb
ja
aam
pop
lds
dec
mov
mov
pop
mov
insb
dec
jns
shlb
adc
adc
popa
jmp
daa
inc
or
and
mov
adc
daa
inc
icebp
scas
fwait
cli
push
adc
sbbl
cmp
je
loop
sti
push
lret
mov
pushf
fucomip
inc
int
stos
jne
out
into
imul
fstps
cmp
int
inc
fadds
sub
hlt
cmp
and
data16
push
inc
scas
in
jbe
leave
jno
int
fisttpll
incb
int
mov
or
mov
cmpsl
pop
sahf
add
addr16
out
sub
insb
mov
cmpsl
xchg
and
pop
loop
outsl
jnp
add
in
xchg
xor
int3
loop
inc
adc
mov
int3
ret
mov
into
jo
ja
fisubs
xchg
sub
pop
mov
adc
inc
fcompl
aaa
arpl
xchg
imul
int3
mov
add
ficoml
bnd
xor
ret
mov
mov
outsb
inc
mov
mov
andb
push
loop
add
rol
mov
scas
xchg
sub
repz
pop
test
lea
pop
repnz
in
dec
out
pop
xor
insl
push
cmp
mov
rorl
push
lret
inc
sbb
js
int
pop
mov
sahf
arpl
xchg
jl
pop
and
loopne
dec
fwait
ds
int
jae
push
inc
xchg
add
xchg
movsl
mov
mov
data16
pop
cmc
mov
pop
add
push
mov
in
test
xchg
cltd
fstpl
scas
loope
pusha
push
jmp
out
test
leave
fs
pusha
inc
rorb
push
shlb
mov
cmp
paddsb
stos
jbe
fcoml
push
dec
cmc
aaa
divb
mov
or
dec
pop
add
lea
adc
js
adcl
fistpll
movb
adc
mov
push
mov
cmp
dec
mov
repz
ja
loope
lock
push
arpl
adc
fimuls
insl
sbb
jns
ret
xor
dec
mov
scas
inc
ret
jno
loopne
les
pop
xchg
cltd
movb
mov
gs
aas
adcb
or
test
add
push
mov
lea
adcb
loop
mov
or
fmulp
leave
cmpsl
inc
mov
enter
adc
add
cmp
test
stos
or
fucom
lea
adcl
cmp
inc
fstl
lret
mov
call
insb
xlat
bound
mov
xchg
sbb
jno
cmp
sti
mov
sbb
adc
movsb
out
fnstenv
sub
add
cld
sub
push
lcall
and
ficoml
pop
cmp
cmpsb
and
outsl
push
fs
add
add
rorb
ds
divb
testb
jle
test
lahf
push
jae
xchg
xor
dec
push
fnsave
stc
adc
js
xchg
xchg
ss
int3
fwait
adc
adc
fs
add
jp
data16
negb
add
icebp
fistl
jns
inc
loopne
adc
cmpsb
sbb
xlat
inc
and
int
out
cmpsl
pop
js
stos
xchg
push
mov
mov
les
sbb
xchg
xor
dec
fs
insl
dec
cmp
mov
mov
lea
sub
inc
scas
mov
ss
jge
pop
stc
iret
mov
push
or
out
push
jno
jmp
andl
xchg
jecxz
jnp
sbb
popf
cmc
test
pop
xchg
pop
inc
lds
movsb
cmp
push
jmp
es
movsb
int
cwtl
pop
add
js
sub
mov
pop
sbb
ja
cmc
adc
daa
std
pop
sub
rcll
dec
fsubrl
cmp
pop
mov
int3
pop
shlb
sub
mov
mov
insl
pop
adc
mov
shll
lahf
sahf
xor
js
rcrb
mov
lods
push
sub
scas
lahf
bound
call
or
hlt
and
push
mov
jne
mov
rcrl
pop
fidivs
rclb
aas
cli
or
out
cmp
jl
mov
lret
jne
mov
mov
imul
rcl
push
or
addr16
aaa
add
data16
fstps
push
jbe
andb
inc
and
sbb
jp
mov
nop
dec
adc
lret
or
pop
push
or
repz
push
aad
pop
daa
dec
mov
jecxz
push
sbb
popf
pop
iret
push
adc
inc
fisttps
mov
dec
imul
push
pusha
movsb
aam
push
sbb
js
mov
aas
outsb
adc
cmp
push
sbb
aas
lret
sti
mov
cmp
test
mov
inc
out
mov
aaa
mov
sbb
test
xchg
pop
pushf
push
xchg
orl
mov
adc
push
and
xchg
mov
jae
mov
mov
jns
jge
jbe
cmp
mov
mov
addr16
or
sub
ja
mov
mov
stc
nop
stos
jns
sub
dec
mov
and
pop
jns
fnstcw
ds
jo
push
xor
push
sub
ficompl
dec
jge
fmuls
pop
rorl
cmp
mov
adc
iret
ljmp
into
lea
mov
movsb
adc
outsb
popf
sbb
pushf
sub
dec
pop
rorl
add
out
inc
inc
insb
lods
jmp
iret
pop
adc
fdivrs
push
stos
push
imul
out
popf
adc
sbb
push
cmpsl
ja
fs
push
xchg
fcmovu
leave
dec
mov
std
mov
mov
in
or
xchg
cs
jae
mov
and
sarl
or
stc
pushf
adc
adc
sbb
pushf
mov
jb
dec
jecxz
movsb
cltd
cmp
push
xchg
scas
call
xor
sahf
inc
inc
and
mov
into
pop
icebp
je
aas
shll
mov
lea
cmp
stos
lea
std
or
test
mov
pop
fs
movsb
xchg
test
addr16
xor
push
xchg
daa
ljmp
sub
pop
and
push
xor
out
movsl
and
push
pop
sbbb
add
xor
out
icebp
lahf
in
sbb
cmp
data16
xor
inc
dec
test
sbb
ret
andl
jno
xchg
mov
sbb
push
lahf
ss
je
mov
fcmove
push
xor
cmp
xchg
jmp
in
mov
loopne
xor
les
cmp
adc
in
rcl
mov
mov
push
push
fsubr
adc
mov
push
data16
mov
sbb
cmc
sub
aaa
cmp
or
push
sarb
daa
and
mov
test
push
sbb
xchg
sbb
andb
push
mov
popa
jmp
mov
fxch
ja
aaa
into
sti
rclb
push
leave
int3
nop
in
pop
in
cmp
outsb
mov
adc
add
iret
fists
pushf
or
cmp
pminsw
dec
xchg
roll
aam
mov
push
stos
dec
fs
cwtl
loope
push
addr16
sub
movsb
inc
movsl
cmp
xchg
lea
or
mov
lcall
mov
push
ja
push
inc
cli
fwait
adc
cmp
pop
clc
stc
xor
cli
jne
imul
sub
adc
shlb
dec
and
aad
jecxz
inc
xchg
test
inc
mov
sub
adc
movsb
sbbl
pop
xchg
leave
loop
dec
add
pop
or
mov
shlb
pop
lock
dec
ljmp
jmp
movsl
pop
lret
adc
loope
lret
mull
subl
out
je
cmp
jp
pop
out
je
add
test
jns
test
pop
mov
push
jae
ret
test
jecxz
sbb
pop
test
xchg
dec
mov
mov
psrad
or
xor
jno
mov
iret
xchg
mov
pop
cmp
mov
scas
or
mov
imul
fnsetpm(287
sbb
hlt
inc
xor
lods
sti
pushf
dec
ljmp
lock
in
sti
jne
mov
inc
mov
les
aam
push
pop
jne
lds
leave
mov
shl
mov
cmp
mov
lea
mov
mov
iret
jg
sti
aad
pushf
inc
and
popf
mov
inc
sti
jmp
cmp
dec
xor
cmp
and
mov
fldcw
scas
fstpt
fcmovne
lret
sub
movsl
fisubrl
imul
popf
shlb
pop
andl
shlb
mov
pop
mov
or
pop
test
shld
cmp
flds
ret
sub
movsb
ret
bound
cmp
push
arpl
fs
int3
fisubrs
cmp
xchg
inc
mov
cmp
sub
dec
mov
mov
lods
pop
jmp
xchg
adc
das
in
cmp
lods
and
xchg
jl
mov
testb
push
add
dec
jecxz
and
jnp
cwtl
add
inc
decl
popf
insb
in
pop
pop
mov
jge
aaa
in
gs
js
insb
xor
lds
jnp
dec
push
loope
pop
mov
daa
jle
stc
xchg
insb
movsb
lods
sbb
push
ror
mov
ja
lock
adc
add
jg,pn
xchg
insb
out
mov
jge
dec
push
ret
xchg
mov
jnp
or
arpl
or
cltd
jge
imul
repnz
cwtl
andl
pop
cmpsl
jo
dec
sbb
xchg
pop
push
dec
sub
pop
notb
aas
mov
and
push
testb
mov
cmp
push
sub
sti
sub
lods
scas
push
or
mov
xor
pop
cmpb
push
movmskps
add
and
popf
in
push
cli
mov
and
inc
std
cltd
jmp
sub
sbb
xchg
mov
in
mov
and
pop
test
cltd
stc
pop
movsl
inc
xor
fs
outsl
xor
mov
pop
out
pop
mov
out
push
inc
out
cmp
aam
cmpsb
or
decb
mov
sub
imul
test
add
mov
cli
inc
and
hlt
dec
push
mov
gs
inc
mov
sbb
out
outsb
aaa
xchg
sbb
repz
data16
test
or
out
sub
ja
dec
add
xchg
mov
push
cmp
sub
xchg
add
mov
call
mov
adc
enter
cmp
scas
fcmovb
test
inc
les
xchg
jge
shl
out
rolb
repnz
jle
les
ret
dec
push
mov
xor
xchg
mov
ds
jo
aam
inc
shll
jae
mov
aam
cmpb
stos
mov
pop
xor
fldcw
xor
clc
sub
inc
xor
mov
push
lods
inc
push
sahf
dec
pop
enter
in
stc
xchg
xor
mov
jle
out
mov
mov
mov
in
adc
aad
lock
mulb
mov
movsl
bound
aad
hlt
mov
cld
pop
imul
arpl
push
mov
stos
add
shll
inc
aam
out
mov
leave
mov
icebp
adc
push
or
mov
jle
push
loopne
xchg
sbb
pop
adc
inc
lahf
push
inc
lahf
in
repz
aad
scas
adc
test
notb
push
cld
shrb
sbb
hlt
in
mov
cmp
jno
cmp
in
cmp
movsl
andb
lds
mov
or
mov
mov
imul
fldpi
inc
and
jno
loope
loop
push
mov
mov
and
jns
out
push
push
inc
cmp
sti
mov
loop
xor
ret
mov
lcall
ljmp
add
in
aam
lods
cmp
dec
cmp
dec
hlt
adcb
mov
bound
cmp
push
nop
push
and
jo
cmp
scas
xorl
mov
pusha
mov
jg
cmp
pop
popf
ljmp
mov
shll
cs
xchg
sub
push
jne
in
stc
lahf
div
and
cwtl
sub
inc
mov
push
mov
cmp
mov
fwait
xchg
and
push
fisttpl
fcomi
lahf
fs
add
and
ds
popl
flds
xchg
or
dec
in
sub
xchg
sub
xchg
push
filds
gs
sbb
fnstcw
mov
sub
scas
lods
aad
enter
out
mov
pop
and
fwait
jecxz
inc
adc
xchg
push
je
adc
mov
or
mov
mov
dec
or
negb
mov
aas
jl
in
cmp
xor
dec
sbb
jmp
orl
popf
cld
andl
xchg
push
jno
inc
pop
sub
mov
test
push
test
fisubrs
add
lahf
mov
aam
add
rclb
andl
cmpb
imul
rorl
scas
iret
ljmp
dec
cmp
xlat
mov
mov
xchg
gs
ret
or
neg
and
xorb
push
mov
ljmp
push
jo
arpl
add
cltd
inc
idivl
or
mov
lods
movsl
pop
xchg
push
inc
or
leave
inc
loope
inc
inc
icebp
adc
jmp
fidivl
inc
xlat
mov
cmc
cmp
pop
add
cmp
mov
mov
xchg
xor
and
dec
push
insl
jp
mov
mov
pop
adc
orl
jmp
and
cmpsb
cmp
imul
ret
in
sahf
lock
les
stc
aad
cltd
sub
gs
insb
pusha
mov
and
pushf
adc
int
cmp
mov
push
adc
mov
push
xchg
mov
lret
xchg
xor
fnstenv
and
inc
rcrb
fmull
or
sbb
loopne
jge
cld
and
xor
addr16
mov
push
jno
ret
data16
lahf
mov
or
adc
cmp
add
push
das
sarb
mov
pop
push
aaa
aad
dec
mov
xor
dec
cmp
cld
es
sub
inc
pop
push
inc
jecxz
mov
cmp
pop
in
adc
push
ljmp
mov
dec
mov
xchg
mov
push
loopne
or
lret
lods
lods
out
fsubr
pop
mov
mov
jo
pop
sub
mov
mov
adcl
lods
mov
jle
subb
mov
fs
push
fldenv
jbe
jb
loope
jg
jo
xchg
call
mov
push
mov
stos
test
xor
pushf
jg
xlat
loope
dec
int
call
pop
in
push
mov
sti
mov
mov
sbb
inc
jae
outsl
push
push
rcrl
fmull
fidivrl
mov
clc
and
repnz
gs
aam
dec
add
fwait
sbb
xchg
scas
mov
loope
mov
mov
mov
andl
add
jl
add
add
cltd
test
cmpsl
shr
ror
sbb
icebp
xor
arpl
pushf
insl
test
mov
ret
push
adc
push
add
dec
imul
pop
or
sub
cmp
rcl
pop
xlat
fs
or
ret
sub
hlt
add
enter
lea
add
cli
jmp
cmp
mov
jbe
inc
daa
push
fidivs
push
lock
sti
cld
xchg
rorb
inc
and
or
stc
int
jp
push
mov
add
subb
and
test
push
inc
dec
mov
inc
sahf
push
mov
xchg
test
jns
lock
cmc
int
in
mulb
mov
sbb
push
ss
insb
mov
jns
pop
iret
fs
adc
pop
mov
imull
js
scas
lahf
jg
ror
xchg
inc
and
dec
stc
xor
lea
aad
std
icebp
hlt
add
shrl
xor
mov
pop
into
xor
add
inc
push
jmp
jmp
movl
push
cmp
fldt
adc
adc
popf
sbb
sub
push
in
icebp
mov
jne
ret
inc
fwait
pop
push
out
ret
movsl
and
into
ljmp
mov
lret
out
jo
ljmp
mov
aad
cmp
dec
icebp
leave
pop
jl
add
js
sbb
sbb
repnz
and
cmp
cmp
or
cs
sub
jns
mov
push
jg
inc
sub
dec
pop
outsl
lret
mov
pop
mov
fiadds
subb
mov
and
or
hlt
jmp
or
stc
push
mov
inc
dec
cmc
insl
aad
mov
cmp
and
outsb
jl
int3
dec
jl
mov
inc
xor
data16
pop
arpl
mov
into
test
pop
ds
xchg
pop
fidivs
cmpsl
xor
cmp
mov
push
sbb
sbbl
dec
push
sbb
inc
pop
rol
scas
test
inc
ret
lods
push
or
push
popa
popa
mov
imul
xor
aam
xchg
pop
adc
cmc
lcall
dec
add
jb
pop
mov
ficoms
push
loopne
jp
std
add
stc
push
adc
pop
xor
push
pop
arpl
loop
push
in
repz
cmp
adc
rcl
mov
mov
cmpsl
addl
cmp
hlt
in
stc
lcall
xor
or
sub
ret
xchg
cmpsl
out
iret
push
insl
aam
filds
in
pop
mov
inc
rcrb
aad
test
lret
add
jnp
jns
outsl
adc
pop
and
arpl
pushl
xchg
in
cmpsb
shll
pop
scas
pop
sub
add
loopne
push
mov
scas
mov
push
sub
inc
cmpsl
dec
lret
jnp
pop
mov
add
scas
lea
cmc
dec
scas
inc
lock
mov
pushf
pop
sub
push
int
outsb
or
pop
out
jno
adc
dec
adc
adc
sub
repz
xchg
or
repnz
jns
push
push
sbbl
xlat
shlb
inc
inc
cmpsl
cmpsl
adc
sarb
mov
cmp
and
dec
fistpl
aam
sti
pushf
mulb
fwait
repnz
ja
movsb
jmp
push
cmp
or
movsb
repnz
cld
add
pop
std
outsb
mov
mov
inc
ficomps
fwait
push
jns
inc
gs
mov
je
out
push
les
icebp
xor
stc
and
jmp
push
mov
iret
jno
pop
insl
out
test
mov
cwtl
mov
andl
das
std
cltd
in
testl
mov
push
insb
add
adc
sub
push
mov
lea
mov
pop
pusha
leave
roll
rorb
xor
das
sub
mov
hlt
loope
stos
xchg
mov
add
roll
int
pop
rcrl
jae,pn
jno
sbb
bound
sbb
xor
test
xchg
hlt
push
out
jecxz
pop
adc
clc
cmpsb
inc
movsl
rcrl
fwait
mov
adc
cmc
in
or
xchg
pop
sub
mov
popf
insl
adcl
or
mov
adc
jne
xchg
jno
orb
adc
adc
clc
lods
sub
dec
daa
inc
pop
cmp
pop
lahf
repz
add
sarl
inc
xor
or
out
sbb
push
orl
shrl
ret
mov
mov
push
cmc
outsb
mov
and
push
xor
mov
jb
fistps
movsl
dec
movsl
sbbb
or
ljmp
xchg
ficompl
and
cs
popa
xor
adc
movsl
gs
in
jnp
loope
shll
out
test
repnz
mov
sahf
repz
push
movsl
adc
mov
gs
fistl
bound
push
xchg
xchg
outsb
push
ja
je
sub
xor
xlat
ljmp
push
or
mov
mov
sbb
shll
sbb
pop
push
loope
test
dec
cmp
je
xchg
cmpsb
or
and
aad
pop
xchg
shrl
std
xchg
mov
andl
sbb
mov
and
ds
add
sub
sti
jbe
call
in
test
sbb
xchg
sbb
jnp
cmp
add
popf
inc
sub
test
cmc
pop
pushl
rcll
lds
mov
add
sbb
cmpsb
push
add
loopne
mov
adc
cmp
jecxz
push
fisttpll
pop
jb
mov
fdivl
pop
lea
sbb
pop
repz
ds
sub
fwait
mov
cmpsl
xchg
mov
xchg
cmp
aad
gs
repnz
call
add
insl
push
ja
mov
icebp
mov
mov
arpl
pcmpgtd
mov
jp
lcall
mov
push
xor
leave
push
push
sbb
pop
or
lods
sub
lods
ffree
sbb
fidivrs
fs
iret
lods
push
js
cld
fldl
and
dec
into
fs
adcl
jl
daa
sub
lahf
ss
mov
xchg
mov
loop
gs
xchg
dec
push
loop
je
adc
fcoms
inc
test
mov
inc
fisubs
outsl
push
jne
mov
cmp
xchg
mov
sbbb
push
fstl
jp
sbb
sbb
cltd
out
iret
sbb
push
pop
shlb
adc
jecxz
int
push
mov
and
mov
dec
call
in
fcoms
jae
movsl
xor
xchg
dec
add
lods
lock
jne
mov
cmpsb
data16
test
mov
mov
bound
test
lds
jo
or
dec
push
jmp
aas
notl
cmp
cmp
xchg
push
popf
ret
cmp
add
or
and
popa
dec
out
push
stc
data16
sbb
std
cltd
xlat
insl
pop
mov
or
sub
adc
jno
movsb
test
in
or
fmull
mov
dec
mov
sbb
xor
sti
mov
popa
jo
push
popf
pop
or
outsb
mov
arpl
xchg
lret
je
jge
sti
jno
pop
cs
jno
dec
dec
loopne
clc
imul
cmc
out
popa
jecxz
pop
mov
adc
scas
xchg
imul
fsub
mov
dec
xor
adc
insb
add
out
xchg
cmpb
imul
xchg
mov
add
push
testb
das
adc
xlat
cs
sbb
pop
mov
pop
cs
sub
daa
pop
in
fwait
fwait
ljmp
test
jge
out
push
mov
push
sub
xchg
jl
adc
rcr
mov
sarb
fldt
dec
xlat
push
movsb
mov
mov
shlb
clc
mov
sub
sbbl
popl
cmp
mov
xchg
adc
repnz
adc
in
jge
inc
dec
jecxz
pop
stc
mov
aam
xorl
dec
mov
iret
outsl
and
adc
push
popa
cs
cmpsl
mov
mov
sub
adc
mov
aaa
xchg
dec
addl
enter
fisubs
inc
mov
into
fdivr
jns
pop
xchg
pop
cmp
test
sub
mov
inc
jecxz
sbb
push
jmp
fists
jnp
or
insb
pushf
adc
mov
aam
dec
mov
clc
addr16
rorl
lds
fists
fisttpl
add
mov
mov
cli
adc
and
addr16
sbbl
nop
sbb
stos
ffree
jbe
mov
jge
pop
sub
std
insl
xchg
dec
loopne
jmp
lods
mov
test
ljmp
push
test
cmc
sbbl
adc
int
mov
adc
mov
cmp
mov
aam
or
cmpsl
fdivl
push
add
xor
mov
bound
arpl
dec
fdivs
sbb
nop
add
mov
ss
push
add
push
add
xchg
insl
cmp
fs
pop
inc
sub
jg
outsb
ror
inc
loop
push
push
in
shlb
imul
push
cwtl
xor
scas
aam
divl
mov
push
add
xor
mov
push
pop
pushf
jge
cmp
jg
cld
lcall
pop
jne
jg
adc
push
mov
jb
dec
out
loopne
mov
dec
push
mov
lods
adc
loopne
sti
fwait
daa
mov
dec
jp
jae
ds
decb
pushf
or
inc
fucomip
jg
xor
push
mov
xchg
dec
scas
fnstsw
stc
nop
ljmp
or
fisubrl
sub
mov
sub
test
jbe
jo
flds
cmc
xchg
mov
fstpt
ficoms
sbb
aam
leave
push
faddp
cmpsb
xchg
inc
mov
aad
mov
test
sarl
incb
cld
sar
pop
sub
dec
out
jb
mov
scas
xchg
sub
mov
push
in
sub
je
imul
dec
xorl
jecxz
inc
sbb
aaa
mov
shrl
adc
outsb
rorl
mov
mov
push
dec
inc
push
and
inc
shrb
icebp
pop
repnz
ljmp
inc
mov
loop
bound
xchg
imul
insb
inc
cwtl
push
aaa
push
jecxz
orb
dec
mov
scas
out
stos
mov
push
adc
pop
jl
test
mov
popa
cwtl
jno
cmc
iret
loop
dec
shrl
das
and
test
inc
xor
adc
pop
push
ljmp
add
stos
sub
jne
sbb
sbb
js
add
enter
orb
es
xchg
xor
std
int3
pop
push
or
push
or
fnstenv
adc
sbb
mov
aas
data16
icebp
dec
jg
lds
rcl
or
xchg
xlat
fiaddl
aam
xchg
aas
test
jmp
repnz
or
mov
sbb
and
fs
cmp
sarb
pop
daa
xchg
mov
or
cmc
fwait
aaa
daa
push
mov
xchg
sub
sub
add
sub
jge
fisubl
sub
cmp
xor
sbb
cltd
lret
fisubs
xchg
aaa
into
popa
xchg
enter
jg
mov
daa
call
lea
scas
mov
pop
cmc
mov
daa
mov
inc
xchg
in
enter
mov
or
shrl
popa
inc
pop
xchg
das
ret
adc
movsb
and
cli
call
fwait
call
or
inc
and
es
dec
fmull
inc
ds
insl
je
fcoml
push
sub
outsl
loop
negl
mov
mov
or
idiv
xchg
sub
out
ds
mov
dec
dec
cmc
imul
and
mov
inc
mov
out
shlb
mov
repz
cmp
dec
outsb
jae
ret
cmp
iret
insb
rolb
movb
mov
lds
or
les
pop
insl
test
fiadds
sub
je
test
jecxz
into
loop
cmp
cli
xchg
into
cli
loopne
icebp
cltd
and
ret
push
or
xchg
ja
sub
mov
adc
push
cmpsb
cmp
cs
hlt
jecxz
fwait
xor
mov
xor
xchg
cmpsl
std
test
stc
jecxz
loop
cltd
jbe
or
mov
ret
mov
lock
stos
ret
cltd
test
loopne
jge
or
mov
mov
repnz
in
xchg
sub
mov
fbstp
insl
mov
in
inc
fnstenv
fldt
lret
and
push
popf
je
sbb
jbe
push
cltd
int
mov
test
mov
movsl
icebp
js
cmp
and
btr
lock
mov
int3
inc
ja
loope
stc
adc
inc
sbb
daa
pop
push
ds
mov
clc
cmp
add
test
insb
push
and
push
xor
inc
jno
adc
sub
lcall
sub
dec
push
xchg
dec
inc
fcomps
xchg
sbb
adc
mov
in
push
jp
sbb
lods
mov
mov
dec
fs
mov
arpl
outsl
fnstcw
and
cmp
dec
dec
ja
popa
mov
mov
cmp
flds
addl
and
out
sbb
arpl
stos
lret
cmpsl
xchg
and
or
mul
jns
aad
orb
repz
add
fs
jne
pop
int
jp
enter
lret
lods
mov
jo
dec
mov
js
and
roll
nop
push
jo,pt
arpl
fs
sbbl
jle
bound
daa
sub
test
loop
sub
sbb
inc
push
or
je
popf
ljmp
jne
aad
mov
push
mov
sbb
cs
neg
sbb
fdivr
mov
shlb
adcb
mov
cmpsl
ja
inc
test
movsl
xor
lahf
mov
dec
outsb
scas
push
sbb
ret
cmp
push
jl
mov
mov
or
lahf
dec
push
loop
mov
mov
push
imul
pop
popf
hlt
pushf
sbb
scas
mov
cmp
out
fxch
push
enter
cmp
add
popa
ror
fcoml
and
add
or
mov
fnsave
xchg
ljmp
outsl
push
or
mov
fbld
stos
stc
mov
push
lcall
es
sub
pop
push
adc
sub
pop
cmpsb
dec
scas
mov
xchg
in
test
test
xor
push
stos
inc
inc
outsl
mov
imul
loope
xor
dec
mov
bound
loope
sub
and
adcl
test
push
adc
rcrb
push
inc
test
fistl
and
ret
xor
idivb
jbe
mov
icebp
xor
xchg
mov
pop
jo
add
xor
icebp
insb
test
lret
cli
imul
xor
sbb
pop
jnp
cwtl
mov
mov
lahf
dec
cmp
cld
ja
jp
mov
dec
orl
std
xor
cli
sub
inc
jae
mov
repz
dec
stos
add
cld
sub
jno
xchg
js
mov
adc
xchg
add
fwait
sti
popf
cmp
push
fucomi
orb
xchg
inc
xchg
setbe
mov
fcompl
xchg
lcall
clc
sub
popf
popa
mov
movsl
dec
mov
xchg
mov
xchg
mov
in
jp
adc
jl
mov
sarl
cs
sbb
pop
repz
cmp
movsl
inc
loopne
mov
iret
xchg
dec
stos
inc
cmpsb
cs
cmp
mov
call
and
mov
adc
mov
test
sub
ficompl
push
cmp
cmp
mov
dec
gs
nop
jns
ret
cmp
loop
test
sbb
sbbb
inc
arpl
in
in
or
into
or
xchg
and
jne
push
adc
push
xchg
or
sbb
outsb
sub
pop
and
dec
push
sub
dec
iret
xor
ljmp
test
ret
hlt
clc
loop
adc
mov
outsl
or
cmc
lea
orl
xchg
inc
sbb
mov
pop
out
aam
add
ret
hlt
or
dec
int
jge
cs
sahf
pop
jbe
mov
and
imul
push
shlb
leave
cwtl
sti
mov
inc
jo
out
js
insl
mov
out
xor
jo
sbb
push
ds
nop
bts
shrb
out
shlb
sub
pop
aas
lds
mov
nop
mov
jle
fadd
sub
scas
cmp
pushf
mov
adc
cmp
fisubrl
shlb
pop
jo
dec
add
into
push
pop
aad
adc
sub
es
leave
xchg
adc
mov
out
inc
dec
inc
push
inc
jp
mov
cmpsl
xchg
push
inc
aas
fldcw
add
int3
aaa
cmp
ret
adc
int3
jo
xor
sarl
arpl
push
push
jecxz
dec
shll
mov
fs
inc
ficoml
aad
fdiv
fsubrs
rolb
and
xor
cwtl
call
xchg
cmp
icebp
push
test
ljmp
int3
mov
aam
adc
mov
push
add
in
dec
loop
mov
out
and
xor
clc
lret
add
cmp
pop
jae
jmp
scas
xchg
int3
push
movsl
sbb
inc
sub
dec
xchg
fsubrs
mov
add
dec
sbb
cmp
pushf
mov
push
xchg
adc
mov
push
loop
cli
cli
jno
je
into
das
cmp
insb
scas
ss
or
sarb
inc
imul
sbb
sub
xchg
xchg
adc
lahf
lahf
shrb
bound
shlb
mov
imul
movsb
test
clc
inc
sub
mov
data16
loope
pop
scas
sahf
or
and
insb
jg
or
testl
enter
cld
pop
scas
out
xor
sbb
jecxz
mov
pop
jmp
das
sub
pusha
das
add
testb
test
or
test
xchg
jnp
decb
add
ret
mov
pop
std
imul
ss
shr
lret
stos
lock
xchg
xchg
xchg
mov
fnstenv
movsb
mov
mov
out
xor
cwtl
sub
dec
xor
dec
loopne
jne
imul
jecxz
xlat
das
and
jmp
push
pop
loope
push
test
or
mov
mov
pop
mov
and
mov
iret
push
ja
shl
mov
mov
inc
push
fdivl
pop
lret
dec
loopne
mov
and
dec
push
sahf
wbinvd
scas
idivl
nop
aaa
sbb
rorb
dec
in
sbb
popa
lret
jg
jmp
jg
stos
push
inc
mov
aam
inc
pop
or
aad
push
lea
jg
shlb
push
data16
mov
test
or
jmp
mov
je
imul
out
fidivs
mov
js
out
adcb
push
xor
fistpl
push
push
or
jg
es
shrl
xchg
push
cmp
xchg
and
das
mov
mov
insb
nop
jp
fisttps
scas
out
dec
pusha
xlat
xchg
xor
cmp
ret
inc
mov
dec
daa
stc
nop
pop
lcall
mov
pop
xchg
mov
data16
scas
xchg
mov
push
cmpsl
mov
hlt
mov
xor
cld
lret
cld
lcall
inc
jo
or
inc
mov
stos
aaa
mov
aaa
or
dec
dec
adc
mov
pop
roll
orl
add
cmp
dec
push
in
cld
mov
jne
adc
sub
dec
mov
icebp
in
test
cli
pushf
sbb
adc
inc
mov
jne
xlat
xchg
lret
cltd
movl
mov
sahf
imul
fdivs
mov
pop
adc
or
in
inc
sbb
or
jmp
test
aam
stos
xor
jo
ror
mov
sub
jnp
cmp
or
stos
stos
pop
mov
cmp
nop
dec
scas
inc
shll
sub
stc
scas
and
nop
lds
pop
add
hlt
test
test
rcrl
loope
or
enter
dec
stc
inc
pop
testl
imul
lods
pop
in
xchg
aad
dec
and
test
push
clc
xor
outsb
or
sarl
jg
adc
scas
and
addr16
popl
shr
push
pop
add
xchg
jns
xchg
pop
push
out
repz
loop
push
es
jmp
jmp
adc
xchg
inc
daa
or
xor
lahf
push
dec
xchg
mov
test
aam
arpl
push
xor
cmpsl
mov
add
dec
hlt
shll
adc
jbe
std
cmpsl
push
ds
jg
rcrb
and
pop
sbb
sbb
jge
push
insl
rol
ret
nop
push
sbb
cmpsl
shrb
mov
push
dec
or
jle
rolb
or
push
icebp
fstpl
into
sbb
push
pushf
hlt
sbb
dec
out
mov
xchg
hlt
push
mov
pop
dec
stc
push
jns
pushf
dec
dec
adc
add
clc
sbb
push
loope
or
jl
lahf
nop
int3
inc
sbb
popf
ss
js
cli
or
in
fwait
aaa
push
adc
cmp
push
shl
jns
or
pop
push
lds
test
jle
cwtl
jle
push
addb
jb
inc
pop
std
xchg
xchg
lods
sub
xor
sub
cmp
and
xchg
or
jbe
lods
inc
pop
flds
push
movsl
lea
pop
xor
or
lahf
insl
push
pop
addr16
jne
bts
inc
pop
iret
arpl
into
js
stos
dec
out
sbb
xlat
outsb
inc
mov
inc
mov
cmc
adc
int
fnstcw
das
adc
aam
inc
pop
scas
cmc
test
push
in
mov
fldl
aam
fucomi
xor
mov
sbb
or
lods
xor
pushf
sub
nop
adc
xor
and
push
lods
jmp
and
popf
outsl
jae
lret
shl
aad
das
fxch
pop
insl
fnsave
cs
fdivrl
mov
int
call
sub
mov
imull
inc
std
fiadds
mov
inc
push
pushw
lret
adc
test
fwait
movsb
cmpsl
push
call
pushf
adc
mov
out
jb
pop
scas
add
mov
sahf
push
sub
fidivl
stc
fcoms
mov
jecxz
ljmp
dec
and
cmp
dec
fwait
or
lock
mov
mov
inc
stos
lahf
fsubr
popa
mov
sar
outsl
mov
push
push
ffree
popf
push
mov
push
inc
or
popf
jle
cmp
leave
cmpsl
cmp
adc
scas
in
mov
pop
add
decb
jb
cltd
cmp
icebp
jg
cmpsl
add
out
jp
sbb
ss
cmc
out
orl
lret
add
popw
daa
mov
mov
push
sub
arpl
jecxz
sub
pop
and
bound
or
enter
out
pop
sahf
dec
lret
push
cmc
jne
jne
lahf
out
testl
out
sbbl
pop
mov
mov
inc
mov
dec
popf
mov
inc
insl
into
sub
xchg
pop
inc
pushf
scas
mov
adc
inc
or
test
add
push
ljmp
mov
lret
adc
test
in
int
pop
lcall
inc
fldl
loopne
or
xlat
pushf
movsb
mov
pop
mov
lods
add
scas
mov
lret
pop
xchg
and
pop
push
add
sub
mov
dec
loope
push
mov
aas
shll
imul
or
les
sub
sub
dec
bound
fists
push
mov
scas
rcll
dec
mov
fcoml
xor
insb
hlt
fwait
xor
lahf
inc
popf
inc
push
inc
and
inc
xlat
or
jbe
lahf
je
sar
std
push
div
sub
mov
sti
enter
sbb
ss
push
add
out
add
int3
shlb
push
push
fnsave
movq
ljmp
ljmp
dec
pop
ds
test
jl
adc
test
add
mov
and
int
ds
aaa
pop
push
sub
sahf
cs
pop
mov
xlat
jecxz
sbb
scas
mov
pop
mov
sbb
cmpsb
cmp
or
loope
dec
orb
sbb
push
jb
xor
or
pop
jle
xchg
lahf
sub
jg
lret
xor
add
loopne
push
and
adc
jecxz
scas
cltd
jecxz
aaa
xchg
mov
test
mov
xor
push
adc
push
out
aam
ficompl
fldz
xchg
das
lods
in
pushf
scas
lret
and
jl
jne
push
cmpsb
pop
push
sub
push
inc
jo
and
lock
xchg
mov
int3
mull
jle
icebp
adc
outsb
in
repz
xchg
hlt
lret
shl
mov
add
mov
pop
ret
mov
repz
pop
or
xchg
shlb
jg
jns
hlt
pusha
mull
ret
cmp
ds
lods
mov
mull
cmpl
push
xor
movsl
aas
adc
dec
or
pushl
adc
pop
fidivs
sub
inc
mov
xchg
mov
inc
adc
test
out
adc
push
cmp
xchg
sub
mov
sbb
dec
stos
inc
hlt
mov
sbb
and
lret
out
insb
sub
loop
or
push
lcall
cmp
pop
mov
or
adc
push
or
in
mov
insb
mov
and
xor
xorb
push
mov
cwtl
inc
lods
mov
push
mov
je
stos
sbb
mov
fucomip
clc
or
dec
or
movsb
adc
outsl
xchg
mov
testb
fimull
sbb
mov
in
mov
or
dec
scas
sub
push
imul
movsl
pop
cwtl
mov
inc
cltd
pop
aam
stos
and
mov
lret
mov
mov
dec
mov
mov
fnsave
jae
repnz
fwait
cmc
subb
jno
jmp
int
les
or
mov
sub
loop
les
sbb
mov
cmp
icebp
insb
fstpt
fbstp
js
xlat
jmp
iret
in
repnz
mov
cwtl
or
mov
test
pop
cld
lcall
in
nop
pop
and
nop
mov
aam
icebp
lds
fidivs
jecxz
aaa
sahf
mov
and
stos
shr
xchg
es
sahf
lahf
or
dec
cmp
push
add
push
call
cwtl
stos
stos
rclb
mov
xor
xchg
scas
inc
icebp
fiadds
fisubl
shll
dec
push
xchg
or
add
xchg
lea
stos
jns
xchg
repz
mov
mov
mov
fsubrl
les
pop
inc
jnp
jb
inc
dec
in
lock
aad
push
xchg
mov
rcl
test
insl
stc
adc
inc
pushf
lret
insl
sahf
lods
sahf
in
and
or
outsl
push
sub
pop
ret
mov
lcall
push
stos
mov
outsb
mov
mov
push
sub
mov
cmp
xor
lock
int3
cmp
data16
lret
and
xor
adc
add
enter
ficoms
in
movsb
mov
dec
and
or
adc
fwait
rorb
iret
lds
loop
xor
mov
dec
fsubrl
adc
cmp
push
inc
push
lods
mov
jbe
fwait
adc
popa
or
push
data16
cwtl
xor
add
mov
mov
jmp
jg
movq
push
loop
or
dec
les
xor
sbb
cmp
sbb
out
push
and
pop
cmp
fsts
lds
fcmovbe
adc
xor
ret
rolb
jg
mov
fidivl
mov
stc
nop
mov
mov
loop
mov
push
sub
popa
mov
push
lahf
jp
cmp
cmp
jo
insl
add
and
popa
loope
lahf
adc
imul
shrl
pop
xchg
or
fsubl
push
repz
xchg
and
xchg
lock
jp
sbb
int
js
dec
push
loope
push
mov
jne
fisubrl
jns
das
ret
iret
cmpsb
jecxz
xchg
sub
push
inc
out
xchg
stos
mov
aas
mov
cmp
pop
stc
addb
out
cmp
push
dec
push
mov
mov
icebp
mov
cmpsl
test
inc
add
xlat
outsb
or
push
fistps
adc
out
aad
mov
bound
mov
flds
push
in
popf
dec
push
sbb
dec
fwait
pop
cmpsb
pop
mov
dec
addr16
loop
dec
test
push
xchg
lret
sbb
and
shrb
inc
pop
xor
aam
inc
pusha
or
xor
inc
and
aad
fs
adc
xchg
push
fwait
lock
mov
and
push
push
jle
mov
cmp
add
sub
mov
sub
add
mov
push
fs
xchg
mov
test
in
test
cmp
mov
pop
mov
add
add
mov
jp
mov
orl
or
mov
mov
xor
mov
mov
sub
add
daa
dec
pop
cltd
cmp
movsb
in
inc
data16
ja
shl
push
fcoms
xchg
cmp
dec
adc
inc
imul
xchg
push
sub
test
jge
popa
jne
mov
inc
xchg
lods
mov
stc
stc
shll
icebp
jo
inc
data16
push
lods
inc
inc
fnsave
ret
orl
lahf
adc
and
outsb
xor
mov
push
cmc
add
je
mov
xlat
sub
mov
loopne
repnz
dec
in
stos
mov
mov
fdivs
mov
push
cld
test
es
mov
ret
stos
push
mov
sub
lret
js
out
jns
shl
inc
mov
jmp
es
outsl
push
cmp
pusha
adcl
lret
mov
aad
inc
fwait
imul
sub
xchg
fs
cli
lret
xchg
lcall
add
and
add
mov
repnz
xlat
mov
pushw
shll
jnp
lcall
xchg
lock
xor
xchg
push
cmc
gs
jge
and
dec
rcl
jne
cmc
scas
js
cld
and
test
and
sub
dec
ds
cmp
rclb
inc
xor
cmova
jp
sub
mov
ret
ffreep
and
jbe
adc
push
push
push
stos
mov
pop
and
add
lcall
xor
mov
push
out
lods
mov
les
mov
movsb
mov
cmpsl
or
cwtl
push
movsl
in
gs
mov
mov
sub
add
call
ja
jne
push
shll
in
cmp
call
push
inc
lock
sub
mov
sysret
fadds
scas
cmpsb
xchg
lods
stos
xchg
loop
xchg
adc
dec
loope
push
mov
xchg
ljmp
or
adc
mov
dec
dec
testb
mov
nop
inc
mov
mov
jo
testb
pushf
fildl
adc
push
scas
push
mov
ss
mul
cltd
xor
jmp
push
push
ja
cmpsb
test
and
push
dec
mov
jg
xchg
cmp
repnz
xchg
iret
or
fs
sub
jmp
push
jp
or
loope
cmpsb
in
pop
nop
push
or
or
data16
adc
push
cltd
push
cmp
push
push
out
pop
pushf
or
mov
jbe
inc
leave
fsubrl
sub
adc
test
sub
push
cmp
clc
popf
sub
add
sbb
mov
sahf
dec
jmp
aam
leave
lods
mov
pusha
xor
pop
pop
mov
jns
cmp
adc
loop
mov
add
lds
popf
mov
fnstcw
xchg
cmpsl
lods
sub
nop
ret
hlt
ss
jmp
adc
popf
js
push
outsl
loope
dec
pushf
les
pop
roll
jnp
daa
mov
in
xchg
lahf
mov
xchg
or
bound
xor
enter
pop
outsb
clc
cmp
and
sbb
mov
bound
dec
sbb
in
ja
jecxz
and
mov
dec
cmp
add
lea
adc
fcmovnu
test
stos
insl
jg
and
mov
push
outsb
xchg
adc
stos
outsl
mov
xor
call
ja
imul
mov
xor
inc
push
inc
xchg
fcoml
outsb
loopne
ret
dec
add
mov
push
out
jge
cmpb
stos
pop
ds
mov
or
add
sbb
scas
aaa
lea
dec
int
cmp
cs
ficompl
clc
shrl
mov
mov
addl
stc
in
cmp
jge
and
pusha
dec
cmp
movsb
shl
jne
sbb
push
nop
lahf
xor
jg
mov
fisubl
sahf
push
push
jae
adcl
and
dec
cmpsb
out
out
test
sbb
imull
mov
popf
jmp
out
inc
clc
test
cmp
xchg
mov
movsl
mov
sub
mov
jb
mov
inc
inc
cmp
loope
add
popa
pop
mov
pop
jo
aaa
mov
std
cmp
imul
popa
aad
addr16
das
push
out
out
or
mov
xlat
insl
cwtl
gs
cmc
adc
nop
dec
lea
popa
in
repz
mov
stos
add
arpl
cmp
inc
adc
and
xor
lret
int
mov
scas
in
mov
negb
jl
pop
hlt
add
es
cmp
jecxz
mov
jecxz
jno
mov
lret
lods
sbb
sub
push
xchg
xor
pop
xor
add
lods
xor
xchg
adc
aad
inc
xor
pop
inc
adc
inc
arpl
ja
data16
jo
movsb
into
in
jo
lock
fidivrl
xchg
sbb
push
out
stos
pop
jne
in
mulb
xor
mov
test
and
pextrw
inc
cmp
mov
outsb
cmp
dec
mov
dec
add
mov
loopne
repnz
push
adc
jb
xchg
das
jae
mov
ss
and
out
fdivr
cmp
cmp
js
add
pop
xchg
lock
aas
stos
cli
jmp
rclb
and
mov
mov
ficomps
mov
push
in
enter
and
cwtl
aam
outsb
lock
mov
ds
sbb
cmp
pop
adc
movsl
stos
sbb
push
cld
xor
xor
notb
and
and
xor
mov
and
stos
inc
jmp
mov
or
sub
xor
das
bound
imul
mov
cmc
frstor
add
insb
aam
dec
adc
jo
jbe
push
ret
test
and
jb
adc
inc
stos
inc
mov
shll
or
add
xchg
push
mov
shl
push
add
clc
fcoms
addb
pop
inc
adc
scas
and
sub
push
inc
jecxz
jge
or
inc
mov
je
jle
sub
pop
add
sbb
pop
movb
adc
loopne
mov
dec
pop
mov
shll
jp
daa
lods
mov
pop
ss
or
xor
iret
mov
popa
fists
push
clc
repz
icebp
dec
add
cmpsb
aaa
or
inc
jae
sub
or
dec
lahf
loopne
js
xor
mov
push
push
mov
sbb
dec
rclb
xor
and
mov
push
dec
fistl
cmp
inc
xorb
xor
cmp
das
nop
ret
nop
pop
pushf
in
pop
imul
mov
mov
mov
ret
jge
cmc
and
lcall
popa
jg
scas
inc
pusha
js
mov
popa
mov
mov
les
cmp
popa
insl
data16
dec
je
jno
lods
movsl
in
or
out
mov
push
ljmp
jo
fxch
add
add
pop
test
ja
push
test
sub
inc
xchg
sub
popa
inc
jae
mov
adc
clc
cmp
push
inc
cmpsl
push
ja
jle
fdivp
test
mov
call
fistpl
and
dec
mov
mov
jp
jo
add
call
fnstsw
aad
ret
jle
mov
jge
mov
push
rorl
outsb
push
lcall
and
sbb
ljmp
iret
or
ja
aam
dec
outsl
inc
aas
jbe
mov
push
stos
inc
pop
cmp
xor
xlat
cmp
and
xchg
hlt
cld
xchg
daa
out
pushf
cli
imul
mov
jo
mov
in
mov
hlt
imul
mov
xchg
in
push
ljmp
jno
pop
in
lret
rclb
fstpt
or
mov
out
cmp
or
cmp
in
outsl
or
inc
pop
xor
enter
cli
insb
jl
sbb
inc
inc
dec
cmp
test
test
aas
fwait
sub
push
ss
xcrypt-cfb
cmpsl
mov
push
sbb
mov
adcl
add
sbb
or
imul
pushf
scas
lea
adc
out
adc
jecxz
fs
sbb
ds
or
fstpt
or
xchg
mov
pop
dec
and
sub
enter
push
inc
sarl
loope
arpl
pop
into
clc
cmp
xor
out
jns
icebp
mov
fidivl
popf
fmul
jg
jne
push
lret
out
movsb
cmp
mov
mov
and
ss
push
ss
push
jge
mov
mov
mov
in
fdivrp
insl
jmp
mov
xor
and
leave
ss
fildll
aad
pusha
nop
test
lret
es
mov
mov
stos
mov
mov
fld
aam
mov
out
jae
movsb
cmp
push
or
mov
fstpt
loopne
lret
lret
jp
rorb
pop
xor
je
fidivl
out
add
ret
filds
out
popf
cmp
dec
imul
notl
fisubrs
or
push
cmpsl
dec
in
arpl
or
pcmpgtd
jo
mov
xchg
into
xlat
inc
adc
sbb
xchg
xor
push
inc
cwtl
or
dec
inc
fidivrl
fs
and
push
in
cmp
push
pushf
jmp
addr16
test
dec
lods
push
push
cmp
pop
mov
add
ret
repnz
popa
mov
lret
lret
scas
pop
shr
aad
movsb
orb
sbbb
fwait
mov
clc
and
jmp
aaa
dec
cld
daa
inc
sub
scas
mov
mov
push
mov
mov
sub
pop
mov
sub
adc
jbe
xrelease
mov
jecxz
mov
imul
xlat
mov
xlat
pop
cwtl
and
insl
sbb
inc
and
mov
push
repz
jp
call
test
mov
jne
lcall
fdivrp
movsl
gs
aam
fimull
adc
fbld
fstpl
movsb
aaa
cmc
js
cwtl
insl
in
mov
dec
mov
loope
adc
push
push
sub
and
pop
jg
ljmp
das
into
test
je
call
jecxz
lock
addb
mov
cltd
sub
inc
pop
xchg
and
sbb
mov
loopne
out
inc
lahf
insb
pop
out
stc
dec
xchg
inc
fld
jo
std
dec
mov
add
adc
jbe
clc
and
pop
inc
test
dec
lcall
scas
dec
sbb
dec
dec
aad
stos
xor
iret
gs
add
adc
pusha
xlat
xor
jno
test
subl
xor
popa
pop
pushf
or
ss
cli
gs
mov
arpl
jo
cmp
aas
xchg
stc
ret
and
mov
jo
sbb
loopne
fcmovnb
data16
adc
mov
cmpsb
cmpsl
dec
enter
fsubrl
sbb
es
test
or
aaa
sub
and
sub
in
loop
insb
imull
and
sub
mov
shrb
adc
sub
or
push
add
sbb
jo
lcall
cltd
iret
xchg
dec
dec
fs
mov
je
sub
xor
into
into
stos
cld
push
addr16
decb
mov
arpl
push
sahf
or
mov
imul
loopne
xchg
add
das
mov
mov
or
and
call
or
pop
mov
loopne
and
enter
rclb
data16
cmp
inc
gs
ss
or
sarl
lcall
sbb
loopne
xor
sbb
cmc
cmp
popa
sbb
fisttpll
frstor
in
fs
jno
das
mov
inc
dec
loope
lods
test
ret
lcall
fdivrl
int
jg
ljmp
xor
jle
fadd
lcall
dec
jne
sub
push
dec
fidivs
xchg
sbb
sbb
cmp
cld
mov
or
shl
sub
mov
inc
jmp
pop
cmc
and
pop
inc
cmp
adc
in
pusha
outsb
stos
lcall
cs
push
and
mov
sbb
adc
jno
jge
and
push
or
mov
pop
xor
das
and
xchg
mov
or
pop
dec
pop
pop
out
jae
popa
mov
das
jg
lret
mov
fsubrs
lea
iret
cld
cli
sbb
pop
cli
or
jg
cmp
dec
lahf
and
imul
push
adc
push
mov
pop
dec
inc
mov
push
cld
push
inc
mov
dec
jecxz
pop
jno
rorb
lret
ja
filds
xchg
push
test
repz
inc
sbb
hlt
out
dec
insl
cld
fisttpll
sub
jle
addr16
or
dec
push
mov
test
add
xorb
imulb
stos
mov
fiadds
enter
notb
sbb
jmp
push
out
xchg
mov
addr16
mov
in
dec
jnp
xor
insb
xchg
neg
gs
and
es
cmp
jl
pop
movsl
xor
movsb
cmp
fiadds
add
ret
sbb
in
sbb
push
mov
iret
and
ret
and
pusha
fdivl
pop
hlt
inc
mov
push
mull
jecxz
xchg
js
xchg
mov
or
cmp
popl
fnstsw
adc
stos
lock
jne
fsubs
xor
inc
faddl
imul
push
cmp
pop
das
add
pop
test
leave
mov
pop
mov
repz
pop
loop
add
cmp
mov
push
sub
fsubs
mov
xchg
add
adc
fldcw
orb
xlat
imul
jno
adc
fwait
scas
lods
ljmp
pushf
or
jbe
movsl
mov
pusha
mov
xchg
xor
add
mov
mov
sub
cwtl
adc
sarl
lret
sub
and
jbe
or
mov
enter
ror
push
add
ss
pop
and
jo
sub
add
dec
sub
dec
push
mov
mov
stc
dec
pop
xlat
outsb
push
sbb
outsl
add
aas
loopne
mov
mov
mov
inc
mov
and
shlb
les
sub
push
jecxz
scas
dec
push
mov
xchg
gs
pop
rolb
out
xor
xor
xor
ret
xor
or
push
lahf
xchg
jbe
and
mov
fs
add
outsb
mov
sbb
sub
xchg
sub
dec
testl
adc
inc
ficompl
mov
sub
aas
pusha
pop
pop
and
scas
inc
adc
jl
dec
xor
jg
sahf
xor
xor
push
xchg
rcpps
pop
in
in
mov
call
cmp
shll
imul
jno
add
imul
adc
cmp
sub
add
lea
scas
xor
pop
movsl
add
loope
or
dec
add
dec
popf
loopne
xchg
and
ja
dec
stos
scas
jp
addl
pushf
nop
in
sub
out
mov
inc
stos
cmpb
adc
xor
xchg
fisubrs
cld
negl
outsb
sbb
sbb
aam
loop
std
cmp
ja
sub
scas
and
movsl
jne
adc
lods
jge
ljmp
add
xchg
jns
repz
sbb
lret
xchg
push
lods
cs
mov
inc
idivl
cmp
insl
cltd
sub
cli
xchg
sub
xchg
add
sbb
and
cltd
sub
ret
adc
sub
xchg
jg
shlb
push
in
hlt
cmp
inc
test
push
cmp
sub
hlt
push
sbb
sub
push
dec
sbb
dec
nop
xor
pop
add
inc
scas
call
mov
int
fbld
cli
inc
adc
push
mov
cmpsl
pop
scas
lods
test
ds
xor
imul
jmp
push
add
mov
adc
push
fdiv
adc
dec
std
or
lret
shr
dec
sti
movsl
mov
out
dec
fs
ret
sbb
mov
cmpsl
sarl
dec
dec
sub
jecxz
xor
repz
mov
pop
cmp
mov
stos
ds
adc
inc
not
mov
pop
sub
mov
es
cmp
ljmp
mov
mov
pop
mov
add
shr
sbb
cmpsl
je
mov
test
imulb
cld
dec
add
xchg
mov
stos
fwait
xor
dec
shlb
mov
xor
dec
test
jns
sub
inc
pop
cmc
jno
cmp
loope
jno
lret
dec
cmp
jnp
inc
sbb
add
jnp
push
repnz
lds
jne
test
psubb
sbb
fs
xor
loope
xor
pop
std
xchg
nop
push
sbb
sti
adc
xchg
and
mov
fists
int
jmp
pop
jo
bt
dec
shr
jl
jg
into
dec
cwtl
inc
lahf
stos
repz
in
dec
inc
inc
mov
aas
mov
iret
and
add
pop
popl
test
xchg
je
dec
xor
cmc
adc
add
fsubr
out
es
dec
and
push
push
dec
xchg
mov
pop
fwait
add
pop
and
or
pop
imul
inc
gs
icebp
scas
inc
and
imul
add
arpl
sub
dec
push
scas
fnstsw
pop
sbb
out
pop
inc
dec
cwtl
mov
fildll
and
clc
insb
dec
push
jne
lea
adc
mov
aad
push
adc
ja
sbb
inc
cwtl
loop
or
adc
int
jno
xlat
faddl
ds
and
and
adc
mov
xor
xor
arpl
fcomp
dec
jo
cli
mov
int
mov
movsl
mov
test
test
shr
mov
pop
ret
add
in
int3
loope
add
add
cli
out
jns
inc
imul
stos
popf
mov
inc
int3
sahf
fwait
in
push
bound
or
push
arpl
sub
jecxz
adc
sub
rcll
and
mov
imul
repz
daa
ss
cmp
clc
xchg
pop
push
sbb
into
loop
rorl
xlat
inc
ret
or
push
mov
sarb
outsb
mov
les
pop
fdivs
clc
mov
fiadds
test
scas
mov
leave
push
xchg
outsl
mov
nop
pop
jo
into
lods
mov
pusha
sbb
imul
rorb
ds
popf
movsb
push
mov
xor
or
inc
in
leave
insl
and
push
or
es
sbb
mov
push
dec
jne
and
loopne
adc
addr16
inc
or
movsb
fiadds
push
aas
popf
push
jle
adc
repnz
test
stos
fldcw
fsubl
andb
fists
mov
jne
and
sti
or
inc
jbe
pop
sbb
mov
xor
in
pop
jge
xchg
pop
sub
mov
mov
xchg
mov
inc
mov
popa
ljmp
mov
dec
into
imul
lods
mov
pop
mov
out
jecxz
mov
sub
fldcw
pop
xor
fisubs
ret
sahf
push
arpl
mov
popf
stos
sbb
sbb
lret
or
jecxz
scas
std
out
xchg
sub
pop
push
sub
jecxz
aas
fisttpll
cmp
rclb
mov
or
imul
mov
es
fnstenv
dec
and
popf
jp
mov
and
mov
mov
jecxz
jl
add
ja
bound
cmpsb
ljmp
xchg
data16
lods
popa
jg
push
bound
mov
xorl
jbe
sbb
push
push
xchg
jns
outsl
adc
movsb
nop
push
arpl
mov
xchg
sbb
lret
bound
mov
cmpsb
push
mov
pop
nop
lock
fistl
cmpsl
push
mov
cs
in
pop
push
es
in
ret
jmp
in
repnz
dec
dec
loop
push
mov
cmpsb
mov
push
imul
sub
fs
rorb
mov
fnsave
dec
or
jo
xorb
adc
mov
inc
lcall
bound
mov
lds
fnstcw
in
fmull
or
jge
popa
pop
xor
xchg
repz
push
in
daa
repnz
in
jmp
call
xchg
lret
data16
mov
adc
dec
fsts
and
sub
push
xor
push
sbb
pop
das
cmp
pusha
jg
or
ss
xchg
sub
xor
mov
dec
mov
lcall
inc
fnstcw
daa
mov
fldl
data16
mov
outsl
dec
in
cmpl
lret
fildll
pmaxub
pop
xchg
ret
ffreep
jge
das
out
out
and
pop
out
mov
sahf
pop
int
gs
mov
int
jecxz
pushf
hlt
or
mov
icebp
mov
inc
in
xchg
mov
in
in
push
pop
sbb
insb
je
cmp
mov
cmp
fcmovnu
jne
xchg
jge
cld
lret
pop
call
or
aaa
cmp
jg
popa
push
in
pop
adc
sahf
xor
inc
cltd
inc
jle
sbb
and
adc
popf
and
inc
and
ja
cmpsb
sbb
sub
sbb
sbb
jne
sub
xchg
je
leave
cmp
pusha
outsb
ljmp
xchg
and
cmpsl
xor
mov
cmc
cmp
mov
adc
pop
ss
in
mov
mov
adc
stc
add
adc
xchg
jns
xor
mov
ds
xor
fcomip
pop
sub
and
dec
out
mov
movsb
add
aad
add
xor
or
movsb
adcl
nop
daa
pop
add
jbe
in
fsts
cld
jnp
pop
sub
adc
es
pop
cmp
add
and
divl
mov
inc
stos
xchg
mov
pop
shll
dec
sti
ss
mov
aad
mov
in
push
test
enter
loope
in
sahf
sbb
jp
mov
cmp
mov
adc
ja
sub
mov
fsubs
add
pop
aam
dec
sarb
dec
stos
roll
jecxz
hlt
cld
and
xor
das
cmp
jbe
and
add
xchg
push
xchg
sub
sti
sub
fnsave
pop
dec
in
idivl
iret
daa
scas
cmc
push
std
lcall
insl
push
dec
in
push
loop
movsl
imul
xchg
dec
cwtl
dec
dec
mov
int3
das
das
cmc
xchg
inc
fmull
testb
and
xchg
add
dec
stc
out
jg
jle
inc
push
hlt
xchg
dec
sbb
insb
jp
mov
sbbl
pop
jne
push
pop
icebp
jp
into
icebp
in
pusha
out
data16
sub
scas
xchg
mov
sub
shlb
hlt
xchg
pop
out
inc
bound
fists
pusha
xchg
stc
js
out
cmp
jle
add
into
xchg
nop
pop
xchg
popa
add
mov
cmp
arpl
xor
cmp
loop
aam
repz
out
adc
pop
imul
data16
pop
jnp
fdivs
mov
inc
outsl
inc
mov
fwait
inc
xor
repz
jbe
and
jb
imul
jno
stc
mov
lock
imul
enter
ret
add
jecxz
cmp
jp
sub
fidivs
xor
outsb
icebp
mov
fmull
xchg
pop
clc
daa
gs
add
pop
incb
loop
jae
roll
cli
push
xchg
push
pop
addr16
add
out
jp
cmpsl
pop
jge
push
or
les
ret
roll
xchg
jp
pop
lods
mov
std
dec
nop
jl
fisubrl
ds
in
mov
mov
popf
xor
rcpps
push
ret
sub
clc
bound
inc
pop
mov
flds
or
cmpl
movsb
pop
lcall
and
out
lods
inc
sbb
fbld
xchg
mov
out
sti
jp
fsubrl
ja
push
inc
mov
jae
pop
mov
push
call
and
outsb
cmpl
sub
pushf
xchg
dec
in
mov
data16
test
int3
test
dec
clc
adc
dec
shl
add
test
and
sahf
inc
pop
sub
xchg
fmul
movsb
insb
mov
xorb
repz
fimuls
mov
insb
push
mov
xchg
addr16
lock
jno
pop
sbb
jne
sbb
cmp
xchg
adc
ss
adc
testb
int
push
stc
in
adc
repnz
mov
imul
jge
call
popa
jmp
scas
mov
xchg
mov
arpl
pop
fistl
add
lock
clc
cmpsl
mov
push
add
mov
jae
jbe
out
xchg
lcall
or
imul
fadd
dec
xchg
cltd
push
icebp
lret
andl
nop
into
pushf
fcoml
inc
xlat
jg
sbb
cmp
push
out
adc
das
xor
jno
test
cwtl
mov
fmull
sub
aad
push
push
mov
into
gs
mov
cltd
imul
cvtdq2ps
cltd
sub
mov
hlt
mov
mov
inc
add
repz
push
inc
and
cli
adc
sub
repz
mov
gs
mov
aaa
dec
mov
shlb
mov
and
outsl
push
sarl
xorb
and
add
xor
xor
pop
mov
loopne
jno
xchg
mov
sub
in
inc
dec
mov
jmp
cli
adc
insb
mov
fsubrl
push
repz
and
int3
loope
adc
mov
decl
neg
or
pop
out
jo
push
icebp
pop
mov
js
stos
push
xlat
ljmp
rcll
aaa
sbb
testl
cwtl
vaddpd
mov
pop
dec
ret
push
and
lds
dec
ficomps
or
cmp
add
pop
mov
aam
jl
in
lahf
pushf
in
faddl
aas
int
pop
hlt
arpl
sbb
mov
outsw
sub
mov
xor
int3
ficoms
push
call
rol
outsl
mov
dec
inc
mov
mov
and
outsl
push
ret
fnstsw
xor
add
adc
pop
data16
sbb
xchg
lock
and
cmp
or
call
mov
int
jbe
sti
stos
xor
pop
add
cmpsb
jl
ror
xor
shll
mov
sub
es
sbb
jl
add
negl
fstp
jb
mov
fbld
mov
movsb
enter
ds
jae
push
pusha
xchg
loope
das
adc
sub
dec
adc
adc
ljmp
push
faddl
add
mov
push
lods
test
mov
sbb
iret
push
mov
jae
mov
sub
dec
aam
sbb
add
repnz
pop
add
jg
or
mov
mov
add
xlat
in
xchg
mov
jge
lret
mov
add
bound
ljmp
pop
out
mov
mov
loop
xlat
push
jecxz
cmp
sub
jo
push
shll
mov
push
dec
and
push
mov
js
xor
inc
aaa
push
and
fstl
ja
sbb
outsl
inc
sti
dec
inc
pop
adc
pop
dec
out
pop
rcl
push
push
in
aad
mov
jecxz
pop
or
jnp
pop
call
ss
outsl
xlat
mov
sbb
test
mov
into
ja
scas
ficoms
or
inc
xchg
add
enter
push
out
gs
xor
test
test
sbb
xchg
jecxz
aam
sbb
pop
jg
jecxz
jg
ds
add
mov
cwtl
addl
cmpsl
mov
xor
add
jno
xchg
jge
ds
xor
rorl
add
mov
adc
call
adc
pop
int
pop
add
xchg
pop
push
add
cmp
shrb
stc
sub
jle
add
fiaddl
cld
enter
stos
std
or
ja
sbbl
ja
scas
mov
cmp
popa
mov
cmp
xchg
mov
add
dec
or
shrl
mov
ror
outsb
cltd
and
sarb
repnz
mov
mov
in
inc
xlat
xchg
sti
pop
mov
inc
fidivs
mov
rcl
loope
mov
pop
cli
out
push
call
scas
insl
push
repz
dec
iret
jnp
jle
stos
in
add
xchg
mov
xchg
push
or
insl
add
mov
jb
fdivl
push
mov
push
jae
push
in
mov
fucom
or
pop
xchg
shlb
sahf
mov
dec
nop
inc
fldcw
ret
sbb
aaa
jmp
fimull
jb
cmp
cli
fsubs
inc
pop
xorl
lods
sbb
ss
int
insb
inc
lods
jge
pop
int
add
mov
rcl
ljmp
pop
outsl
pop
or
test
jl
pop
cwtl
xchg
sbb
or
pop
cmp
fwait
and
repnz
bound
insl
rcll
xor
mov
mov
je
xor
jmp
xchg
push
jno
or
jecxz
add
lret
addr16
popf
mov
into
mov
lods
jmp
in
insl
mov
pop
pushf
sbb
push
sub
cmp
mov
mov
clc
loop
dec
xchg
xchg
test
xchg
mov
lret
mov
fwait
pop
movsl
movsb
nop
add
int
add
mov
je
out
xchg
push
repnz
xchg
jle
in
lods
xchg
mov
fldcw
test
mov
fcoms
dec
adc
das
out
cmp
push
jne
ja
clc
push
sarb
imul
xchg
pop
mov
sti
aad
jae
and
loop
loop
mov
fnstcw
or
jl
xchg
mov
sub
stos
pop
stos
aad
mov
push
jle
pushf
xchg
pusha
outsb
loop
xlat
push
mov
hlt
jp
insb
sub
clc
dec
or
pop
lret
jge
lea
xchg
and
jne
inc
lcall
rcrl
xor
leave
mov
insb
in
push
test
jg
sub
insb
push
inc
pop
mov
das
mov
add
xchg
push
mov
push
jnp
fstps
sbb
push
cwtl
jl
cltd
popa
sbbl
test
and
push
pop
push
xor
xor
mov
call
jp
jecxz
jb
loopne
nop
cmp
mov
jnp
aam
lcall
xor
push
scas
stc
pop
jecxz
jnp
lcall
in
aam
inc
dec
gs
dec
push
movsl
pushf
and
into
sahf
pop
or
push
fnsave
daa
or
and
lds
push
inc
lock
dec
scas
and
loope
xchg
sub
test
add
sub
cmpsl
inc
inc
inc
xchg
fdivrp
mov
mov
inc
test
jns
push
mov
sbb
inc
in
imul
xchg
nop
cltd
std
mov
addl
fmull
sbb
popf
scas
insl
mov
or
gs
mov
aas
push
xchg
out
in
fldl
mov
das
xor
icebp
or
fbstp
aaa
adc
adc
jb
jae
xchg
out
mov
cmpl
pusha
pop
shrb
je
sahf
out
lods
ret
jg
xchg
mov
ret
pop
push
cld
fbld
or
out
in
outsl
xchg
add
out
cmpl
or
mov
cwtl
xchg
out
mov
jg
das
push
adc
test
imul
leave
cmp
mov
imul
jecxz
pop
dec
arpl
subb
fbld
mov
push
push
pop
add
jmp
xchg
test
ret
daa
fs
push
push
inc
lods
jbe
shll
sbb
jmp
dec
movsl
js
mov
faddl
cltd
js
fsubs
mov
mov
xchg
shrl
test
push
cmpsl
fs
xchg
es
pusha
xchg
pop
movsl
or
add
xchg
or
in
mov
push
xlat
test
lds
aas
and
or
mov
jne
xchg
cmpsb
in
enter
jmp
sahf
loopne
adc
ds
dec
cmc
mov
sub
pop
and
fstpl
xchg
loop
rcll
roll
mov
out
gs
pop
ljmp
cmc
and
cmp
pop
es
cmp
dec
arpl
xor
jg
sbb
mov
pusha
lahf
cld
sbb
data16
cmp
iret
add
xor
into
sub
fsubs
loope
fistps
ja
add
arpl
jne
sti
inc
add
xor
lahf
pop
leave
mov
cmp
loop
movsl
or
xchg
insl
inc
cltd
scas
cmpsl
dec
call
shrl
or
cmpsb
mov
fsubrs
xchg
test
mov
mov
ret
inc
fidivrl
pusha
cmp
int
dec
das
pushf
sbb
jae
pusha
and
rcrl
cmp
aas
add
cmp
clc
mov
push
dec
sub
inc
pop
mov
gs
fnstsw
cmp
or
push
cmpsb
inc
pop
pop
adc
mov
sub
subb
sbb
in
loop
push
mov
or
push
fnstsw
mulb
push
or
sti
mov
lods
in
loope
popa
cmpl
or
repnz
stos
testb
lds
mov
push
sbb
loope
mov
aas
or
xchg
repnz
cmp
mov
repnz
mov
sub
jo
adc
cmc
fldl
add
or
outsl
dec
lods
repz
pusha
or
cmc
fdivs
mov
loope
outsb
inc
call
xor
inc
fbstp
daa
mov
fldenv
fbld
pusha
mov
data16
jge
xor
push
testb
dec
inc
sub
mov
loope
sub
adc
lea
cwtl
sbb
mov
test
ss
leave
xchg
pop
cli
xchg
insl
sub
into
push
sahf
popa
adc
lea
dec
and
ss
inc
cltd
dec
xlat
push
test
sbb
aad
mov
adc
int3
mov
mov
scas
push
fstpt
mov
mov
popl
add
cltd
sub
addr16
mov
sub
sbb
sti
xor
dec
and
add
xchg
jle
sbb
addb
jmp
pop
cmc
push
pop
xchg
out
push
cmpsl
and
scas
sbb
out
inc
xchg
xor
test
pop
fisubl
test
xchg
outsl
or
xchg
mov
aas
call
or
ds
lds
or
out
enter
iret
jo
add
ja
enter
hlt
lret
enter
jge
fisttps
push
test
xchg
ret
lods
push
hlt
mov
into
mov
fadd
push
push
rorl
out
sbbl
dec
fists
lock
cli
jns
adc
outsb
jg
loopne
xor
push
add
cmp
jmp
daa
sub
cmp
imul
adc
push
movsl
sti
fwait
and
fnstcw
ret
cmpsl
data16
lcall
pop
rcrl
dec
repz
aaa
mov
out
add
push
test
stos
in
das
loopne
fs
and
addr16
cwtl
sub
testb
add
lcall
push
adc
sbb
mov
cld
shlb
sbb
mov
mov
arpl
addr16
xchg
jmp
daa
rorl
sahf
sti
outsl
mov
inc
aas
mov
rcl
inc
cmc
mov
cli
mov
sub
pushf
mov
or
int3
testl
pop
and
imul
aaa
lcall
and
lcall
pop
pop
xchg
sub
adc
push
and
sbb
add
sbb
sub
outsb
cwtl
test
pop
jge
jl
pushl
pop
sub
shlb
lock
xor
dec
je
pop
xor
and
lret
jmp
xchg
or
or
iret
jmp
xchg
insb
ret
outsl
lea
lcall
and
mov
lea
test
lea
icebp
enter
out
jge
sbb
fsubrp
adc
ljmp
rorl
mov
js
in
sbb
pop
imul
jp
jp
sbb
aad
imul
or
mov
xor
loope
xchg
lret
cmp
dec
pop
int
fdivrs
xchg
mov
xchg
jmp
imul
or
xchg
mov
pop
jbe
lret
pop
div
std
xchg
jb
test
adc
outsb
fnstcw
nop
je
sbb
test
scas
nop
out
repnz
xlat
aam
sub
dec
adc
andl
mov
outsb
and
push
ss
mov
or
loope
inc
jbe
fsincos
dec
pop
ss
mov
test
mov
and
mov
lret
mov
lea
shlb
dec
fnstenv
lret
and
sti
das
cmp
xor
sbb
mov
lcall
fsubs
je
outsl
mov
jo
jecxz
popa
cmp
pop
stc
inc
cmp
dec
bnd
es
into
stc
cmpsb
jl
out
aad
xor
call
subb
mov
leave
jb
sub
je
cmp
inc
fcomp
fistps
mov
mov
or
aam
es
cmp
pop
bound
scas
add
aas
pop
clc
popl
push
inc
in
push
sub
cmp
in
pop
cli
push
add
fs
in
fistpl
add
sbb
fwait
scas
clc
jae
cmp
xabort
out
pop
or
cwtl
pop
mov
leave
mov
xor
icebp
and
push
inc
ds
aaa
jbe
movsl
adc
xor
movsb
mov
rcrl
dec
not
mov
in
or
ret
stos
pusha
push
and
adc
ss
notl
call
push
pop
test
js
xor
loope
das
popf
dec
mov
jecxz
dec
add
pop
fwait
xor
pop
or
add
or
add
push
test
sub
adc
mov
js
mov
insl
scas
mov
ja
or
mov
pop
mov
dec
mov
mov
pop
jp
imul
insl
dec
mov
mov
jbe
xlat
mov
int
dec
fstpl
ficoml
insl
ljmp
sahf
das
or
pop
ja
sahf
rclb
std
cltd
lods
pop
inc
stc
incl
test
loopne
sbb
push
mov
test
pop
xchg
out
or
jbe
pop
push
xchg
xchg
int
mov
out
popf
aam
insl
sub
lods
repz
and
cmp
dec
xor
cwtl
insb
scas
gs
fisttps
clc
aas
scas
or
fsubrp
rcrb
out
mov
mov
xchg
out
inc
sbb
or
pop
pusha
ficomps
add
mov
fnstsw
pop
or
lret
insb
dec
cmc
pop
inc
cmp
sub
test
sbb
shlb
cmpsb
dec
fwait
pop
pop
pop
ljmp
push
inc
test
or
andl
mov
add
repz
loopne
or
rclb
jl
movsl
xor
lahf
inc
mov
cmp
inc
enter
inc
sub
sahf
add
push
pop
int
shrb
bound
imul
jp
mov
mov
xchg
dec
pop
aam
outsb
clc
add
jns
cmc
lods
xchg
cld
jns
cmp
dec
rcrl
scas
ret
mov
and
aaa
repz
dec
gs
into
shlb
pop
aam
cmp
mov
mov
test
sub
fnsave
xchg
pushf
jg
and
adc
ljmp
out
out
ret
mov
loopne
pop
repz
leave
pushf
outsl
cmp
add
add
sub
lahf
lahf
and
add
in
jmp
ret
xchg
inc
pusha
mov
lcall
scas
mov
lret
push
sub
in
pop
and
adc
test
push
cmp
out
pop
pop
sbb
les
mov
cmp
enter
xchg
xchg
add
lahf
ja
fildl
pop
notb
xchg
jbe
mov
xchg
mov
jmp
jae
mov
cwtl
pushf
add
or
or
dec
arpl
xchg
dec
jo
inc
mov
dec
inc
std
aam
sahf
sbb
pop
or
xchg
pop
test
push
stos
mov
jb
fidivrs
mov
insl
cmp
xchg
push
pop
mov
pushf
fnstcw
in
test
xchg
sbb
or
push
jnp
jnp
push
cmc
adc
std
addr16
pop
dec
movsb
pop
testb
lahf
lea
dec
jo
inc
jnp
add
aaa
test
xchg
rclb
cs
jno
sbb
xchg
and
jmp
out
lea
and
mov
data16
adc
data16
and
in
movsl
ljmp
xchg
lds
enter
icebp
mov
xor
int3
lret
jl
test
in
js
minps
test
test
or
hlt
mov
movsl
insl
xlat
sub
jns
mov
dec
pop
mov
pop
sbb
aad
int
jb
pop
js
aas
add
jmp
loope
pusha
jp
mov
movups
push
jmp
lret
sbbb
ss
out
aaa
dec
xchg
mov
inc
xchg
add
xchg
fs
scas
loop
lahf
and
loop
ljmp
jecxz
sahf
xor
bound
cmp
mov
sub
cld
pop
lret
rcll
push
out
popa
fcompl
in
mov
lret
shrb
pand
mov
lcall
jne
out
outsb
sub
divb
adc
les
mov
pop
mov
andb
dec
pop
adc
pop
ret
add
in
mov
add
mov
test
dec
or
fdivs
test
js
scas
mov
or
mov
sti
leave
xchg
sbb
cmp
cmp
inc
int3
lods
jmp
imul
mov
add
xor
sub
movsb
jecxz
sbb
mov
aad
cs
mov
cmp
or
sti
je
push
sub
lret
mov
xor
adc
outsb
inc
rclb
cmp
mov
sar
inc
sbb
mov
subl
aad
ret
jge
pushf
pop
insb
pop
lahf
ss
fucomip
lods
push
lret
pop
jae
sti
pop
cmc
rcrb
test
adc
sub
popa
and
shrl
insb
add
stc
ss
xor
xchg
or
jno
push
add
movsl
and
dec
add
sbbl
fiadds
lea
sub
das
out
outsl
je
xchg
mov
je
jl
out
mov
cmp
scas
call
xchg
xor
xchg
aaa
xchg
mov
psubw
or
jmp
add
icebp
push
fwait
push
lods
add
adc
jle
test
in
add
mov
and
cmp
jp
pop
pop
lret
outsb
mov
and
cmp
push
xchg
cmp
fwait
mov
sbb
xor
std
push
push
and
lahf
pop
dec
es
test
mov
push
pop
or
xchg
pop
mov
xchg
sbb
push
in
fs
push
xlat
push
call
jae
ljmp
roll
out
cmp
and
add
mov
imul
xor
nop
daa
daa
scas
push
arpl
enter
push
push
ss
icebp
xchg
testb
cli
les
add
xchg
sub
inc
push
icebp
inc
loop
fisubrl
lret
mov
lahf
lahf
outsb
ret
fidivrl
sub
dec
xor
mov
mov
sbb
lods
ljmp
pushf
mov
inc
cli
movl
lret
cwtl
pop
pop
push
sub
lcall
nop
mov
mov
mov
or
cltd
jge
cwtl
imul
add
shll
pop
mov
mov
loope
cmp
loop
inc
clc
repnz
dec
fildll
stos
pop
xchg
int3
out
pop
ja
hlt
mov
adc
test
dec
out
add
addb
addr16
push
out
mov
aas
mov
pushl
or
test
jge
out
jmp
shlb
in
aas
test
sbb
inc
roll
ret
jo
xor
jbe
push
jmp
pop
insb
cmp
lods
loop
push
fistps
jmp
loopne
and
sub
cmpsb
mov
fwait
jne
test
hlt
mov
mov
insl
push
pop
bound
mov
scas
data16
insb
adc
or
outsl
push
in
imul
xor
mov
cmp
add
loopne
shl
pop
xor
shlb
in
orl
adc
push
inc
xchg
addr16
lcall
sub
fs
outsb
mov
lret
add
xor
or
xlat
insl
mov
dec
add
pop
lods
xchg
stos
iret
mov
jbe
dec
dec
adc
sbbb
shr
add
cmpsb
dec
push
adc
adc
dec
stos
idivl
lea
push
push
push
push
mov
xchg
mov
test
mov
lods
rcrl
pop
jecxz
movsb
clc
dec
mov
outsl
ss
push
mov
dec
aaa
test
inc
push
into
ja
fisubs
pusha
pop
lahf
or
pop
clc
das
es
and
stos
mov
pop
sub
sbb
mov
sub
fdivl
out
jl
xchg
push
sbb
movsl
push
xlat
or
aad
adc
ljmp
and
aas
push
insl
inc
dec
mov
cmp
imul
leave
vpunpcklwd
into
dec
hlt
inc
out
dec
out
cld
pop
push
nop
push
jl
push
push
ss
xchg
xchg
repz
or
mov
push
hlt
popa
mov
cmp
mov
jae
adc
inc
sbb
js
stos
lea
mov
loop
dec
clc
cmc
sarb
cmpsb
lock
icebp
mov
lcall
cmpsl
outsb
push
adc
mov
loop
arpl
scas
mov
scas
or
xchg
pop
xchg
cld
cmp
mov
fadds
es
inc
jno
sbb
mov
and
inc
daa
jle
cld
pop
sbbb
cmp
loop
and
xchg
ds
mov
mov
fdivrs
movsl
dec
adc
ret
mov
push
fnsave
dec
cmc
andb
loop
add
push
popf
push
inc
popf
mov
pop
repnz
mov
mov
adc
mov
xchg
push
es
jle
pop
aad
mov
adc
push
cs
imul
imul
sub
fstpt
stc
out
fcomp
xchg
xor
je
fstp
lods
sub
mov
or
shll
cmp
inc
lret
mov
or
test
or
jl
add
aam
mov
lcall
and
vandnps
sbb
mov
mov
cmp
push
insl
push
mov
inc
in
mov
pop
fldt
repz
stos
jns
add
je
sar
fcmovne
sbb
xlat
lods
subl
das
jno
push
lods
adc
icebp
pop
ss
repnz
insb
xor
scas
jp
fmul
scas
shrl
out
cld
jle
xor
in
addr16
mov
cmp
jae
jecxz
enter
inc
and
outsl
dec
test
jg
aam
push
cltd
xchg
sub
jno
cs
das
push
arpl
mov
fldl
push
sbb
push
test
inc
shrl
cwtl
jmp
aas
pop
test
pusha
push
jnp
out
xor
jmp
or
lret
jb
add
or
into
es
jge
pop
insl
outsb
test
xchg
jno
jmp
and
cli
mov
popl
fistps
mov
inc
dec
es
test
pop
into
aaa
shr
movsl
jecxz
add
ja
and
xor
hlt
pop
xlat
inc
stos
mov
lahf
gs
subb
imul
pop
pop
jp
push
cmp
sub
or
pop
push
sub
movsb
and
mov
jnp
mov
das
adc
adc
test
aas
mov
xchg
jecxz
or
add
icebp
xchg
and
fstpl
xchg
push
xor
cmp
test
xchg
sub
sub
sahf
sarb
aad
or
dec
inc
pop
out
test
mov
aad
or
fdivrl
pop
inc
mov
cmc
pop
adc
add
xchg
cmp
jle
stc
sub
sbbl
and
cmp
jne
xor
mov
dec
pop
mov
out
fnsave
fucomip
jae
jle
dec
adc
clc
sbb
in
lahf
or
dec
stc
out
aad
jg
out
imull
push
and
push
pop
outsb
inc
notl
dec
test
cmp
push
mov
lahf
ds
mov
pop
push
cs
cmp
mov
in
sbb
add
jno
sti
nop
out
xchg
add
xchg
popa
lods
out
pushf
cmpl
mov
pop
and
add
pop
aaa
mov
sub
sbb
pop
aam
jae
mov
nop
push
ja
pop
and
inc
in
hlt
mov
add
orb
mov
movsl
fwait
repnz
sarb
or
test
adc
and
cwtl
sarl
enter
inc
in
mov
loopne
push
fiadds
add
std
jl
lods
xchg
xchg
int
lds
xor
jne
call
aad
gs
clc
pop
movsl
cmp
icebp
enter
xlat
inc
popf
sbb
inc
pop
jmp
int3
outsl
outsl
cli
ret
mov
pusha
fbstp
adc
mov
jl
sbb
xchg
push
jo
jecxz
jnp
arpl
adc
inc
sarl
out
pop
pop
sub
rcrl
testl
mov
lods
push
xorl
mov
cmc
inc
pushf
scas
test
adc
pop
lods
xchg
xchg
sarl
and
iret
mov
repnz
std
out
sarl
lea
cs
push
mov
into
mov
jle
dec
mov
sub
aam
add
cld
adc
pop
je
sub
push
dec
sbb
jbe
cmp
movsb
cmp
outsl
icebp
push
daa
pop
cmp
ret
push
inc
icebp
push
ds
movsl
int
jmp
fwait
xchg
or
pop
frstors
cmp
shlb
popa
ds
imul
imul
mov
add
sbb
wrmsr
jmp
push
cmp
sbb
dec
sbb
jl
inc
mov
jo
pop
cmpsb
add
push
aad
dec
xchg
insl
fwait
xchg
addr16
scas
in
hlt
mov
mov
pop
jmp
hlt
je
add
lret
sub
aaa
repz
mov
neg
jg
clc
cwtl
into
jle
int
xor
or
xor
out
jg
mov
xchg
popa
stos
test
movl
xchg
and
mov
sbb
sub
cmp
jae
in
fsts
cli
inc
push
js
push
cmpsl
push
pop
jnp
pop
addr16
pop
shrb
mov
ds
adc
jp
fucomi
dec
adcb
xor
jmp
pop
cmp
adc
add
cli
mov
mov
lods
cmpb
sub
sbb
imul
mov
test
gs
idivl
push
xor
xchg
outsb
push
sub
mov
mov
shr
ja
cli
inc
lret
cmpb
pop
insl
sbb
jne
and
int3
mov
loopne
dec
fsincos
js
js
pop
cmc
mov
mov
mov
sbb
popf
stos
shl
adcl
mov
fildll
ficoml
and
inc
mov
pop
mov
sbb
mov
xchg
push
push
adc
sarl
xchg
xor
dec
mov
sub
or
std
fnstenv
adc
daa
mov
decl
in
test
xchg
aam
sahf
jp
xor
and
and
push
ljmp
out
gs
and
cmpsl
sbb
sbb
jmp
mov
jg
dec
dec
cmp
movsb
addr16
test
adc
sbb
jp
es
lret
jnp
das
xor
add
fdiv
and
cltd
icebp
xchg
inc
pop
bnd
and
jns
or
scas
mov
and
mov
and
shl
jns
adc
lds
movsl
or
mov
adc
sub
or
jp
les
leave
outsl
push
push
lret
repz
adc
pop
cmp
and
jge
mov
mov
int3
arpl
pop
fcoms
jb
ret
sub
xor
jecxz
jge
mov
aam
stc
mov
jo
cmp
xchg
mov
fdivs
xlat
outsb
js
mov
fcmovu
call
add
and
xchg
leave
sub
xchg
stos
sbb
popa
jne
js
mov
call
jge
dec
dec
loopne
jne
sub
push
lock
xchg
daa
cs
test
and
fistpll
or
add
mov
ret
xchg
mov
jo
into
cld
mov
sti
in
out
fldt
xlat
push
xchg
lret
push
dec
dec
ss
fsubl
xchg
arpl
jg
fsubl
jl
test
mov
or
push
add
xchg
ss
xchg
mov
lods
test
mov
add
sub
jp
mov
adc
fucom
jl
jo
adc
mov
test
jl
sub
push
mov
cmp
dec
mov
in
cmp
fildll
xor
inc
lds
mov
test
int3
mov
pop
adc
ffreep
fdivl
add
mov
lret
pop
negb
cmp
mov
jne
pop
mov
push
xor
popf
xchg
aad
dec
notb
adc
inc
mov
and
mov
int3
es
pop
lcall
mov
dec
out
and
xor
cli
sub
xchg
scas
les
sbb
inc
jmp
push
mov
adc
xor
xor
pop
ja
push
mov
jmp
lock
mov
in
mov
test
and
push
pushf
and
dec
dec
mov
ljmp
bound
adc
sub
cmp
dec
or
mov
out
stos
mov
inc
cmp
in
pop
hlt
adc
mov
je
inc
rorl
dec
push
int
jb
sbb
movsl
cmpsb
cmp
mov
les
dec
cs
popa
shrb
cmp
repz
bound
insb
bound
pop
rclb
sbb
imul
mov
sbb
mov
lret
cmp
sub
pop
fwait
mov
cmpsl
adcb
imul
lret
jno
fldcw
ficoml
stos
cmp
inc
dec
inc
push
adc
int
push
rcrw
int3
in
aad
xchg
push
push
pop
not
clc
jge
sarl
test
mov
sbb
mov
rcll
fmul
fisubrl
pop
leave
ret
test
push
cmp
sahf
ret
lret
ss
mov
ficoms
pop
adc
inc
mov
rcrl
mov
cmpsb
cld
pushf
or
ljmp
hlt
lret
cmpsl
ljmp
rcrl
pop
xchg
mov
scas
leave
ljmp
pop
push
shll
dec
in
inc
aaa
add
loope
test
adc
in
sbb
in
insl
adc
push
inc
testl
shrl
rclb
and
inc
mov
cld
push
not
lret
hlt
stc
inc
aam
mov
stc
ret
cmp
pop
push
jne
ficompl
jecxz
xchg
sub
lret
mov
mov
mov
sbb
pop
in
mov
sub
mov
adc
outsl
fisttpll
es
push
push
pop
test
lds
push
lret
subb
es
adc
pop
jmp
mov
out
xorb
add
arpl
aas
cmp
pop
fsubrp
popl
cmc
sbb
or
add
negl
test
cmpsl
mov
pop
mov
jno
es
insb
cmp
or
sarb
pop
pop
jnp
mov
fs
or
outsb
mov
lds
jb
pop
lock
mov
fnsave
ret
fiadds
sub
jmp
rol
outsb
mov
ret
je
test
mov
orb
aaa
into
cmp
mov
mov
inc
add
stos
sbb
sub
xchg
aaa
js
out
sub
sub
sbb
into
mov
mov
and
pop
loopne
push
rol
add
repnz
setb
pushf
jg
rcl
pop
sub
out
dec
rcrl
and
or
nop
daa
cs
scas
les
sbb
movsb
fstpt
add
inc
in
xor
iret
mov
pushl
outsb
or
cmp
outsb
fwait
and
sarl
and
aad
or
dec
mov
out
imul
popf
popa
cmp
jecxz
xchg
sub
xchg
scas
and
cmc
pop
fwait
adc
mov
test
dec
mov
mov
popf
stc
jo
das
mov
testl
mov
rorl
and
jl
mov
loop
cwtl
lods
inc
lret
or
mov
mov
in
sub
mov
fisubrl
iret
loope
stc
and
incl
mov
xor
mov
mov
aad
movsl
aas
dec
jns
push
imul
inc
or
out
push
sbb
jmp
pop
xor
leave
push
pushf
mov
push
cltd
or
dec
in
jg
pop
subb
push
add
sub
and
iret
jb
mov
adc
add
push
mov
and
or
out
mov
xor
shrl
mov
movb
lret
lret
jne
ja
xchg
mov
jb
in
pop
dec
loopne
mov
mov
sbb
orl
clc
pop
call
adcb
add
cmc
sub
cltd
xor
sbbl
std
movsb
pop
stos
addr16
cltd
lret
dec
mov
lret
mov
lock
jb
pop
in
test
cmp
arpl
xchg
mov
or
push
shrb
or
pushf
xor
addr16
jge
and
leave
sbb
cli
out
fidivrs
adc
std
jo
insl
adc
dec
clc
jo
es
dec
in
mov
lret
and
data16
mov
popa
stos
mov
add
cmp
dec
xchg
add
mov
mov
push
jp
or
cmp
andb
popa
mov
adc
dec
mov
icebp
lock
adc
xor
sub
outsb
cmp
jge
test
or
es
xor
out
add
and
outsb
sub
pop
call
fistps
add
aad
jp
xchg
or
subb
insl
fnstcw
pop
push
push
loopne
jb
icebp
fnsave
scas
jnp
jl
jmp
xchg
rorb
insl
loopne
mov
out
test
or
cmp
mov
test
lahf
aaa
cmp
inc
bound
inc
pop
ret
push
ljmp
adc
fdivr
or
ror
bound
rcl
adc
fwait
sub
push
push
inc
je
lock
sarb
pop
mov
fldcw
jecxz
dec
xchg
test
sub
rclb
mov
pop
pop
pop
incl
call
bound
push
pop
xor
aad
sub
dec
sbb
roll
nop
insb
inc
inc
cli
cmpsb
cmp
out
loopne
sub
or
push
pop
fildl
testl
cld
pop
push
sub
icebp
jecxz
pop
imul
cwtl
out
insl
mov
xor
and
insb
in
enter
test
fcompl
sub
shld
mov
cs
xor
jecxz
mov
sbb
mov
mov
jle
jp
cwtl
lahf
inc
pop
or
and
sar
pusha
jmp
popa
mov
sub
in
aad
xchg
mov
out
jnp
xor
xchg
jbe
dec
mov
mov
mov
cmp
xchg
insb
add
or
or
loopne
or
sub
mov
popf
out
pushf
cmp
ljmp
mov
xchg
push
adc
mov
subb
icebp
fbstp
xchg
sub
fcmovne
sub
adc
xchg
lret
sub
pop
stc
cmp
pop
insl
in
outsl
das
lahf
xchg
test
or
inc
mov
insb
mov
iret
xchg
insb
mov
cmpsl
es
inc
mov
std
ljmp
jmp
cmpsb
inc
push
shl
mov
aam
pop
pop
pop
sbb
jae
testb
jnp
push
inc
sbb
xor
jnp
aas
movsb
movsb
cmp
add
shll
shl
mov
xchg
sub
scas
subb
cmp
mov
inc
je
je
es
jno
mov
mov
xchg
and
fsubrp
dec
shlb
push
xchg
jecxz
pop
in
push
sbb
dec
mov
sbb
xor
xchg
outsb
mul
adcb
sub
pop
shll
mov
movb
mov
fmulp
jg
aad
fisubrl
push
adc
shlb
imul
xor
or
inc
cld
xor
lcall
idivl
stos
lock
and
pusha
cmp
out
js
das
popf
and
shl
inc
es
movsb
and
jecxz
push
daa
inc
xchg
popf
xchg
mov
aam
sar
sbb
ret
push
sbb
iret
and
popf
pop
add
or
fistps
test
mov
push
or
fstpt
jne
xchg
and
mov
sub
lret
cmp
std
push
jbe
or
loopne
adc
ret
sub
dec
and
mov
xor
cmpsb
gs
aam
push
fstl
jecxz
or
jmp
xor
cmpl
pop
adc
push
fcoml
pop
call
insl
inc
cmpsb
aaa
nop
pop
fs
mov
rcll
test
es
mov
pop
lock
out
cmpsb
jae
jno
jbe
jne
inc
jp
or
aas
cmpsb
push
or
jp
outsb
imul
xchg
cmp
jge
movsl
dec
add
or
inc
imul
imul
lds
cmp
call
mov
mov
push
int
pop
xchg
add
movsb
xchg
cmp
mov
push
xor
xchg
lods
test
xchg
sub
sub
clc
lods
outsb
test
pop
stos
cmp
ljmp
sub
in
pop
dec
add
ja
pushf
push
jns
icebp
or
pop
int3
arpl
cld
push
ss
outsl
jle
ret
jecxz
in
ret
mov
loopne
movsb
arpl
or
das
or
jne
sbb
jle
int3
mov
sarl
aaa
pop
pop
push
cwtl
cmp
sub
xor
enter
in
jmp
xchg
sub
or
jge
mov
lret
popf
orl
loope
adc
dec
dec
add
incl
mov
sub
int
lods
lods
pop
repz
cltd
mov
sbb
cs
icebp
lea
or
push
or
movsb
xchg
and
fucomip
hlt
andb
inc
cmp
pop
fidivs
cli
scas
and
daa
cld
outsl
xchg
lcall
mov
rcl
repnz
and
xlat
and
or
and
pop
inc
inc
loope
xchg
push
adc
jne
push
in
xor
pop
mov
dec
outsl
xchg
test
push
ret
out
rorl
ja
iret
call
int
rclb
push
scas
ja
popa
popf
stos
cmpsb
cmp
inc
aaa
cmp
cwtl
movsl
outsb
xchg
cmpsl
sbb
push
pop
ljmp
das
pop
dec
fimuls
fnstsw
fcmovu
xor
push
xchg
cmp
in
adc
and
icebp
inc
test
xchg
shll
add
mov
push
or
push
sbb
cmp
rolb
jne
ds
dec
notl
xchg
mov
inc
mov
sbb
mov
rclb
jns
jmp
cwtl
pushl
insl
sbb
sbb
xor
hlt
ljmp
push
lds
lods
dec
or
cmp
sub
rcll
push
psadbw
shll
push
lret
xchg
mov
pop
jne
mov
xchg
cmp
in
jmp
std
ficoms
pop
insb
sbb
mov
cltd
int
aad
notb
ret
xchg
movsb
mov
ss
rcll
sbb
popf
sub
xchg
fcoms
mov
lock
nop
fdivl
mov
test
dec
stos
inc
push
sbb
shrb
out
movl
or
sub
pop
frstor
push
push
cli
cmpsb
shrb
sbb
pop
cmp
imul
xchg
or
jns
or
ds
sub
ja
sbb
fwait
sbb
pop
mov
ds
xchg
cltd
mov
outsl
push
push
nop
adc
in
and
cltd
xor
adcb
and
iret
push
call
shlb
popa
push
push
popf
test
loop
aam
xrelease
xchg
mov
orb
mov
lahf
stos
fs
or
push
cmp
xor
cld
ret
or
sbb
movsl
cld
int
mov
adc
xchg
add
inc
mov
aaa
sub
hlt
mov
cmc
sub
scas
mov
in
xchg
pusha
and
push
sub
pop
fbstp
xchg
rol
div
jae
push
mov
cmpsb
adc
fdivrp
dec
out
mov
into
mov
loope
xchg
ss
std
cmp
shll
inc
push
das
cwtl
mov
cmp
lock
lea
icebp
arpl
js
sub
in
mov
lret
pop
jne
pop
int
sub
fucom
movb
mov
xor
cmc
ss
push
mov
xlat
jns
in
xchg
jge
les
js
cmc
xchg
dec
jecxz
ljmp
mov
xchg
xchg
jecxz
add
or
fistps
xchg
mov
cmp
jb
aas
mov
test
ret
pop
scas
bound
xor
xor
les
jno
jecxz,pt
sub
inc
pop
dec
sbb
outsb
mov
mov
pop
aas
pop
sti
sbbb
mov
shrl
jg
mov
push
adc
dec
sbb
mov
cmp
cmpsl
mov
mov
xchg
xor
lds
mov
push
jnp
imul
addr16
js
or
push
xchg
in
sbb
jp
cmpsb
cmp
shlb
aas
lret
enter
adc
ljmp
fstps
add
ljmp
call
addr16
jne
out
push
arpl
dec
add
subl
pop
rep
mov
jmp
sahf
inc
mov
fcoml
loope
xchg
or
les
push
or
adc
lea
ret
fstl
mov
cs
push
push
or
pop
mov
jp
in
std
and
and
rorl
iret
xchg
adc
ret
ljmp
clc
mov
push
sub
pop
mov
and
mov
sub
sbb
cmp
jb
lds
scas
les
and
mov
loopne
rcll
mov
inc
jmp
pop
jb
scas
lret
jecxz
pop
stc
mov
repnz
div
xor
xlat
clc
lock
loop
pop
push
add
xchg
aad
xor
mov
cmpsl
mov
movsl
pusha
cmp
sbb
into
movsl
jae
mov
repz
xchg
sbbb
pusha
and
sbb
pusha
jl
mov
sbb
out
sub
ficoml
lea
jne
scas
stos
sub
push
dec
in
jo
jge
cmp
nop
gs
aam
push
add
push
in
adc
pop
mov
inc
stc
mov
sub
jb
jle
ja
repnz
pop
inc
lock
hlt
arpl
sbbl
push
mov
inc
mov
add
fldt
outsl
xlat
lahf
cmp
int3
or
xlat
push
divb
push
lret
push
xor
dec
jmp
cmp
sub
or
push
insl
insb
jge
add
dec
pop
sub
jmp
or
shrl
xor
push
sub
push
and
mov
scas
pop
and
cmp
xchg
fcmove
dec
aad
sti
jo
jno
pop
imul
inc
jg
negb
ss
ja
xor
ds
inc
jge
aaa
mov
mov
hlt
fwait
int3
dec
call
sbb
dec
subl
shlb
jnp
scas
add
cld
add
loope
dec
lods
inc
sub
mov
arpl
les
inc
or
in
popf
sbb
pop
cmc
or
mov
in
and
sub
inc
fldl2t
jne
pop
push
gs
loopne
je
aad
and
test
scas
pop
mov
arpl
adc
std
pop
mov
adc
stos
xchg
bound
inc
mov
mov
icebp
rcr
and
insb
mov
ljmp
pushf
scas
sbb
adc
int
lcall
add
subb
adc
pop
lret
jnp
icebp
lods
mov
ret
sbb
repnz
lds
push
jbe
rcrb
lea
or
mov
in
out
xor
popa
mov
lods
xor
ret
arpl
test
mov
mov
mov
faddl
stos
adc
fcomps
cwtl
in
mov
fisubs
mov
sbb
int
aaa
lret
add
stos
mov
out
mov
and
ja
dec
jp
sbbb
mov
int
pop
fucom
mov
xor
cwtl
lods
jmp
lods
cltd
sbb
out
xchg
lods
mov
aas
sbbb
popa
dec
lret
scas
bound
icebp
aad
lea
sub
ds
dec
stos
arpl
sbb
mov
leave
out
popf
int3
imul
add
loop
pushf
dec
out
ret
pop
pop
cmp
in
in
sbb
inc
scas
cmp
and
ss
imull
sarl
xor
mov
fildll
xor
popa
scas
pop
xchg
scas
mov
outsb
test
ret
mov
xchg
sub
cmp
das
jb
icebp
lds
xchg
mov
cmp
addr16
cmpsb
adc
dec
pop
xor
cs
mov
fcmove
cmp
add
mov
icebp
push
hlt
rol
pop
add
adc
fucomip
or
fstpt
decl
ss
cmp
jo
fidivrs
into
xchg
and
sti
mulb
xchg
cmpb
dec
scas
mov
mov
inc
jmp
test
mov
das
mov
sub
adc
ret
filds
stos
out
lock
lods
and
cmpsl
rol
jbe
shl
mov
pop
imul
popf
out
and
jge
xchg
ds
sahf
jns
cmp
push
dec
std
adc
or
movl
repnz
dec
js
add
and
and
xor
incl
mov
sti
cs
arpl
adc
outsb
add
out
mov
loope
pop
pop
rorb
movsb
loop
aaa
into
push
int3
push
mov
pop
mov
jbe
xchg
in
jl
inc
movsl
ja
sbb
push
sub
repnz
cmp
pop
pop
rol
adc
xor
arpl
pop
ret
sbb
fistpll
movsl
pop
xchg
mov
or
adc
cld
push
jl
repz
fucomi
dec
push
das
cmp
jno
shl
das
mov
repnz
mov
pop
sub
test
loop
pop
jb
into
push
lock
in
jo
mov
xchg
mov
push
in
add
iret
mov
fidivrs
lock
jp
pop
dec
adc
stc
nop
add
mov
ffreep
imul
icebp
mov
cmp
push
add
les
lcall
jne
out
ret
inc
mov
adcl
or
mov
fucom
cmp
mov
mov
jb
inc
push
pop
mov
int
cwtl
nop
add
rorl
fbstp
sub
les
or
pop
nop
adc
xor
aad
pop
pop
ss
fildl
incl
aas
xchg
bound
mov
pop
rclb
int3
aad
test
inc
jg
int3
test
loop
sub
inc
arpl
test
mov
jmp
add
push
shl
enter
mov
xchg
cmpsl
test
fildl
orb
push
xchg
push
div
and
or
fsubrl
cli
mov
nop
mov
sub
mov
xchg
dec
out
test
cmc
cmp
xor
cmp
push
dec
fs
add
in
mov
xor
push
dec
fcoms
fiadds
popf
fdivl
dec
xchg
leave
push
mov
clc
mov
fcmovbe
cmp
add
xor
incb
add
and
bound
enter
nop
lea
aas
cmp
test
inc
pop
bnd
push
mov
mov
sbb
test
and
sub
inc
lds
ljmp
push
cmpsb
test
mov
aam
or
lret
popa
lds
or
push
mov
lea
sahf
ja
sti
pop
xor
xchg
in
ret
lods
mov
jmp
test
xor
xor
push
test
mov
stc
insl
mov
mov
pop
adc
jbe
fisttpll
pop
mov
adc
inc
sbb
fdivs
or
mov
dec
lods
cmp
add
fimull
mov
add
nop
ret
roll
xor
fisubrs
or
or
jne
pop
data16
cmpsl
in
cmp
push
test
stos
mov
sahf
mov
test
sbb
mov
push
jmp
jae
jo
jecxz
scas
inc
xor
cmp
inc
bound
loopne
aaa
adc
inc
lret
pushl
push
in
fsts
push
cli
jae
lods
movsb
sbb
sbb
scas
inc
sbb
js
and
fiaddl
push
and
mov
rcrl
popa
call
cltd
xchg
and
adc
inc
fucomp
movsl
fldt
dec
loopne
imul
insb
adc
xor
cmpsb
cmpsl
nop
das
or
stc
xchg
push
push
dec
int
std
loop
mov
xchg
or
enter
adc
add
cmp
popl
insb
test
inc
or
rol
repnz
fisubrs
ds
xchg
insl
mov
jmp
xor
aaa
mov
mov
outsb
popl
icebp
mov
inc
mov
xor
enter
inc
stos
aam
fcoml
xor
js
shrb
push
jmp
dec
popl
sbbb
mov
test
inc
push
and
in
inc
popf
sub
aas
pushf
xor
dec
mov
dec
out
fsubrs
mov
sbb
mov
enter
xchg
push
out
or
into
xor
lahf
inc
fnop
enter
mov
add
mov
rcrb
adc
ja
shrb
test
mov
sub
inc
in
jb
jg
push
add
int
fldl
test
shr
ror
jp
sti
repz
sub
and
stos
mov
pop
cmp
cmp
sub
ret
adc
popa
sub
dec
jb
mov
rolb
xchg
aam
sbb
jno
push
mov
shlb
test
mov
cmpsl
and
test
push
inc
int
pop
jmp
xchg
mov
int
pop
or
mov
in
test
mov
scas
mov
popf
icebp
sbb
rolb
adc
clc
stos
push
outsl
inc
fists
sub
jle
mov
ljmp
dec
movsl
inc
fwait
pusha
jmp
inc
loopne
xor
popa
mov
jle
jo
xchg
pop
sbb
daa
lock
dec
mov
insl
xor
fs
adc
bound
jl
jno
scas
lods
dec
call
les
ret
jb
sub
xchg
cwtl
loope
das
inc
dec
add
es
fisubrl
inc
data16
sub
int3
jl
je
stos
jecxz
and
test
jecxz
mov
jnp
inc
aad
push
pop
das
mov
cltd
test
adc
pop
stos
dec
in
push
shrb
subb
sub
dec
xor
lea
xchg
sbb
loopne
dec
adc
iret
jo
sub
cmpsb
subl
and
mov
sbb
int
lcall
in
mov
push
push
imul
push
add
lock
pop
cmpsl
into
xchg
push
push
stos
mov
sbb
es
pop
lret
popf
sbb
fmull
xchg
adc
mov
hlt
xlat
outsb
jp
mov
push
inc
mov
ljmp
test
jo
repz
pop
xchg
and
lods
jnp
mov
ret
aad
hlt
popf
inc
enter
sub
jge
add
jae
push
loope
lods
ret
jecxz
pusha
adc
cmp
jmp
out
mov
lea
pop
pop
repnz
cmp
movsl
addl
dec
pop
sub
movsb
mov
mov
sti
ds
jg
or
or
cmpsb
sbb
cmpsb
divb
cmpsb
mov
leave
sub
mov
adc
mov
arpl
cmpb
add
xchg
push
leave
movsb
xor
jge
outsl
or
out
out
and
mov
cltd
dec
pop
and
push
inc
addl
dec
test
repnz
cmp
pop
std
repnz
fildll
and
jae
movsw
pop
stos
movsl
dec
xlat
mov
test
ror
fcomps
scas
push
lods
popf
jbe
jge
cli
daa
ljmp
pop
or
enter
add
inc
mov
inc
out
xor
pop
xchg
divb
cs
add
push
dec
aas
movsb
push
nop
xchg
sti
fistpll
mov
rorl
in
xor
xchg
cmpsb
jmp
cwtl
and
stc
nop
lock
xor
push
mov
xchg
pop
hlt
popa
fs
out
shlb
adc
inc
fs
sub
imul
pop
cmpsl
cld
mov
shll
fst
push
mov
push
rcrb
dec
push
xchg
xor
call
and
into
clc
jb
dec
shlb
jle
lret
dec
jo
dec
lock
mov
inc
jmp
ret
and
xchg
int
nop
daa
or
scas
push
xlat
lods
insl
add
out
mov
loop
adc
mov
xlat
adc
lds
push
pop
icebp
stc
dec
sbb
insb
pop
cs
pop
test
insl
int3
aad
mov
push
hlt
mov
rcrl
xchg
cmp
loop
scas
notl
ret
lcall
jbe
mov
mov
adc
enter
push
pop
test
sub
movsb
les
mov
inc
pop
aam
jno
mov
icebp
movsl
sahf
push
cmc
rcrb
adc
mov
push
in
pop
jmp
call
jp
negl
jmp
mov
push
mov
adc
inc
xor
hlt
lahf
lock
and
mov
out
dec
test
cmc
jge
or
outsb
dec
push
clc
dec
inc
ss
ds
shlb
pushf
negb
stos
lret
mov
push
push
ljmp
int
and
lods
xchg
call
ret
outsb
ret
pop
jmp
adc
or
aaa
add
push
ss
jae
and
hlt
test
mov
int
pop
mov
sahf
mov
lret
loop
mov
aad
sbb
or
insl
adc
mov
mov
sbb
mov
and
fists
add
xor
xchg
jbe
cmp
add
xchg
inc
cmp
or
cmp
ret
mov
mov
test
loopne
cmpsb
ja
cwtl
andl
and
pushf
outsb
mov
xchg
nop
mov
sbb
jg
mov
test
mov
pushf
inc
xor
lods
repz
sub
imul
cld
shl
add
addr16
mov
pop
pop
pmaxub
nop
sub
mov
lods
mov
xchg
clc
je
mov
xchg
outsb
add
adcl
push
clc
sub
jno
mov
loopne
or
popa
mov
push
sub
mov
cli
sbb
shrb
test
scas
xchg
bound
ds
inc
push
inc
cmp
xorl
and
push
popa
xchg
in
push
sbb
push
mov
or
dec
pop
cmpsl
movsb
dec
add
push
rcrl
jecxz
jge
lahf
scas
mov
pop
lock
insb
mov
jns
aad
ret
sahf
sub
leave
adc
add
pop
xchg
negl
mov
cmpsb
enter
push
mov
add
mov
inc
jmp
xor
ficoms
push
or
fimuls
mov
inc
xor
push
dec
orb
ja
bound
xchg
out
in
or
inc
or
ds
test
rcrl
push
fisubrs
test
jae
dec
jb
jl
cmp
cs
pop
pop
mov
inc
fidivl
icebp
add
test
icebp
cmp
into
adc
or
push
imul
insb
addr16
jno
mov
adcb
shl
pushf
xor
xor
shll
mov
jae
push
lock
cmp
cli
push
aam
out
rclb
rcr
data16
sub
and
sahf
xchg
inc
sbb
add
pusha
imull
ss
sar
jl
jge
je
xor
aas
std
pop
mov
rclb
dec
dec
xchg
jge
les
cmp
mov
iret
jno
ret
sub
iret
movsb
stos
mov
aaa
or
inc
fdivl
inc
jl
jl
stos
in
cltd
aaa
sbb
push
into
orb
xor
movsl
mov
or
mull
and
lock
aas
lds
push
and
and
inc
cltd
std
in
jbe
xor
xor
rdmsr
iret
inc
pop
cmc
fnstsw
jl
xor
sbb
mov
sub
push
lea
xchg
push
mov
call
es
cmpsb
arpl
daa
lret
sbb
inc
xchg
dec
fists
cld
cmp
and
rcr
enter
push
mov
or
mov
hlt
scas
mov
sbb
mov
xorb
imul
movsb
mov
sub
pushf
cmp
rcrl
mov
add
subb
les
into
incl
aam
mov
test
or
repnz
fisubl
shll
lea
jge
inc
clc
mov
jne
rol
fldcw
mov
pop
push
inc
popf
jae
fcoms
pop
and
int
pop
jmp
or
adc
and
int3
arpl
test
or
stc
nop
ja
sub
adc
mov
das
fbld
popa
aam
pop
cmpsb
lods
inc
fdivrs
in
mov
inc
push
xchg
push
rclb
loopne
bound
lahf
lods
mov
mov
xor
aad
decl
xchg
loop
push
jg
sub
orb
dec
popf
scas
in
jns
pop
or
lahf
mov
cwtl
xchg
and
sbbl
xor
int
cmc
push
pop
cmpl
pop
movsb
roll
mov
mov
in
pop
cmp
mov
fisttps
test
jae
lods
cmpsb
jge
icebp
scas
pop
pop
jne
lahf
push
xchg
pop
in
or
fnstsw
cmc
push
inc
pusha
aaa
iret
cmpsb
and
sarl
arpl
lret
pop
cmpsb
sub
movsl
hlt
inc
mov
mov
pop
testl
adc
and
sbb
xchg
mov
pop
mov
inc
fcmovbe
jne
adc
repz
xlat
std
andb
push
test
mov
inc
xchg
lret
out
mov
xchg
dec
scas
lods
add
xor
jae
or
sbb
dec
sub
xchg
jmp
test
imul
test
arpl
icebp
pop
mov
test
nop
lcall
mov
lock
data16
lahf
rolb
loop
push
lcall
dec
es
mov
loope
addr16
rcrb
ljmp
lock
add
insl
inc
mov
xor
push
sub
ds
inc
push
cs
xor
mov
lods
xor
sbb
das
pop
mov
and
aam
pop
cmp
push
jae
mov
add
cmp
adc
psrlw
adc
adc
ficoms
ds
sarb
lret
sub
in
stc
adc
xchg
mov
ss
das
mov
or
out
imul
mov
repnz
daa
cmpsl
inc
lods
lock
push
mov
lods
push
daa
mov
xchg
dec
mov
scas
shlb
mov
imul
shrd
sbb
enter
and
and
int
sub
cmc
out
pushf
pop
cltd
les
adc
aad
pop
out
mov
cmp
jno
cmp
inc
xchg
stos
sub
movsb
cltd
xor
daa
xchg
cmp
scas
xor
pop
mov
fwait
outsl
cli
shll
xchg
sub
add
cmp
aam
dec
mov
inc
jbe
movsb
loop
mov
leave
mov
mov
sbb
xor
adc
mov
repnz
in
into
sbb
int
mov
xchg
push
fbld
mov
es
data16
mov
mov
test
test
pop
mov
in
je
dec
popa
leave
sbbb
inc
ret
mov
pusha
mov
mov
jo
jmp
fwait
mov
or
and
int
inc
popl
xchg
adc
inc
movsb
mov
inc
mov
push
int3
arpl
out
and
push
aas
jge
clc
push
cmp
lahf
gs
int3
xorb
and
jno
testb
repnz
mov
pop
mov
add
xor
lods
pop
leave
or
add
push
jnp
ja
jg
sub
das
mov
lods
js
fnsave
pop
sahf
je
and
xchg
pushf
xor
mov
mov
dec
cwtl
adc
fstpt
jmp
fsub
xchg
push
sub
jl
jo
push
sar
jle
and
xchg
stos
imul
xor
cmpsl
jp
xlat
shlb
push
jmp
inc
std
fisubl
loopne
pop
sahf
jecxz
sti
mov
add
mov
hlt
outsb
insb
ret
lods
std
lds
push
dec
pop
push
xchg
add
mov
sbb
aas
pop
cmp
jae
dec
nop
loop
jae
movb
push
sub
and
add
dec
pop
adc
aaa
ja
mov
add
inc
dec
xor
fcmove
xchg
and
fs
fs
pop
ficomps
sbb
jo
fsubrl
aad
aaa
repz
jno
flds
mov
xchg
ret
es
in
lahf
inc
arpl
repz
adc
rorb
cmpsb
iret
fisttpl
cs
jecxz
push
sbb
cmpsl
mov
cmp
addl
mov
arpl
test
xor
or
and
jmp
mov
cmp
loop
adc
stc
arpl
sub
add
adcl
in
push
sub
lcall
cmp
pop
pop
into
xchg
test
popa
lods
lock
add
icebp
mov
int
in
lret
cmp
fsub
and
fbstp
mov
xor
iret
fcmovnbe
xchg
xor
pop
mov
iret
data16
cld
test
rcr
fldcw
inc
inc
mov
or
mov
mov
or
mov
dec
or
iret
pop
popa
testb
in
cmc
jnp
adc
mov
jmp
or
movsl
aad
xlat
sub
stc
or
push
xor
pop
xchg
dec
rcrb
test
jmp
fisttpl
pop
jo
loopne
adc
sbb
fsubrl
pop
out
in
pop
mov
loope
xchg
or
sub
lea
sub
sub
stc
or
pop
sbb
dec
add
and
ds
mov
or
mov
mov
pop
daa
mov
or
pop
mov
insl
cmp
int
jg
pop
fidivs
subl
mov
dec
cmp
aas
push
rcrb
sahf
cmp
cmp
mulb
mov
nop
mov
and
and
xchg
xor
inc
stos
xchg
inc
fld
movb
add
test
inc
or
xor
push
outsl
or
call
rcrl
dec
mov
sbb
cmc
imul
daa
dec
fistpll
push
ja
or
add
mov
mov
cmc
push
sbb
jmp
imul
stos
xchg
mov
sbb
pusha
jg
ret
push
fldenv
mov
xchg
pop
in
sbb
outsl
fidivs
movsl
daa
cli
fstpt
xchg
push
lret
bound
int
pushf
ja
mov
addr16
fisttps
push
addl
and
push
sub
mov
xor
xchg
adc
push
in
push
mov
mov
pop
sub
cmp
jbe
cs
mov
mov
add
int3
pop
dec
mov
js
stos
mov
xor
popa
movsl
mov
adc
add
clc
repz
pop
stos
inc
clc
jecxz
cmpsl
mov
jmp
jmp
jmp
and
push
shr
adc
jge
dec
insl
xchg
jnp
les
lods
sbb
jg
into
mov
sbb
loopne
ret
nop
mov
xchg
adc
cmp
fcomi
mov
cmovne
jno
pop
or
mov
jns
push
pop
mov
nop
cmp
xor
outsl
mov
jo
push
jo
inc
mov
fs
scas
sub
nop
xchg
fnsave
cmpsl
scas
jno
fsubs
cmpsl
jecxz
xchg
stc
dec
loope
add
mov
push
adc
lea
inc
push
xor
arpl
sbb
leave
loopne
pushf
out
rcrb
jg
lods
ljmp
ret
mov
fsubrs
push
push
repnz
aaa
sub
incb
fidivs
adc
lcall
jne
lret
push
mov
inc
cmc
push
cmpsb
adc
lahf
jmp
aaa
loope
jp
lahf
xor
inc
xchg
gs
fistl
mov
or
aad
push
push
sub
add
mov
out
orl
mov
push
mov
fs
sbb
add
xor
ret
js
push
aad
test
push
fidivrl
sbb
pop
lcall
sub
inc
mov
mov
jecxz
ret
cmp
insl
icebp
aaa
into
loop
jae
movl
push
push
repnz
add
fisubs
iret
inc
fistpll
adc
fwait
cmp
adc
rolb
mov
adc
nop
rcrb
inc
ljmp
into
in
fsts
je
inc
into
pop
xor
lret
aad
push
shll
and
push
jmp
aam
cmpsb
subb
icebp
into
out
scas
xchg
js
mov
pusha
and
cli
pusha
mov
cmp
stos
add
mov
mov
push
popa
mov
mov
addl
jnp
pop
scas
loope
dec
jo
mov
enter
mov
dec
pop
pop
jle
jo
inc
mov
adc
cmp
test
pushl
out
xchg
and
loope
fiaddl
dec
push
imul
pushf
sbb
push
cmp
mov
dec
xchg
push
cmp
pop
lds
jnp
push
fcomps
nop
pop
xor
pop
mov
out
ret
pop
and
cmp
inc
jno
mov
out
cltd
popl
inc
lods
inc
xor
sbb
daa
test
xor
push
fidivs
stos
shrl
cmp
sti
jl
and
aam
jae
into
rorl
out
sub
push
jo
push
je
dec
add
out
fcomps
pusha
sbb
daa
mov
stos
js
or
loopne
loop
pop
jns
or
test
popf
ret
inc
sub
mov
test
mov
imul
outsb
mulb
mov
stos
mov
pushf
aam
int
cmp
push
pushf
lods
xor
xchg
mov
pop
jno
int
jb
pop
push
adc
cmp
cmpsl
push
fwait
je
hlt
sbb
xchg
shrl
push
mov
pop
add
xchg
adc
iret
jle
add
xorl
cmpsl
inc
jnp
mov
ret
xor
mov
imul
xchg
int3
cmpsb
in
jb
pop
shrl
sarl
adc
push
movsl
ds
aad
lock
fsubp
pusha
dec
add
adc
jne
add
xchg
mov
add
std
mov
inc
xchg
pop
dec
mov
push
dec
out
mov
repz
mov
xchg
and
mov
lock
stos
in
sub
or
xor
aad
or
cmp
cmp
and
ljmp
scas
xorb
fistpll
mov
and
insb
cmpsl
mov
aad
rcl
xchg
mov
dec
icebp
movsl
out
mov
adc
test
ss
xchg
out
mov
and
and
push
ret
js
pop
mov
lea
insl
pop
aam
push
or
jns
lods
inc
adc
ljmp
inc
out
dec
fldpi
loope
or
out
push
int
imul
out
push
push
into
sbbl
loopne
pop
hlt
js
mov
add
cmp
sbb
popa
pop
mov
adc
mov
push
add
push
inc
scas
mov
mov
sub
mov
mov
ret
mov
insb
jnp
and
nop
and
jnp
pushf
dec
pop
loop
xchg
adc
pop
lret
imul
js
addb
mov
imul
stos
xchg
jnp
push
jbe
xor
cs
movsl
pop
or
rol
add
insl
leave
push
lods
ret
jge
lods
lock
mov
push
hlt
xlat
add
cmp
xchg
out
gs
aad
and
lods
nop
icebp
arpl
and
mov
sub
imul
ret
dec
lretw
mov
pop
xchg
push
adc
push
test
hlt
push
and
push
sahf
add
ljmp
pop
lods
scas
icebp
mov
sti
xchg
mov
lret
cmpsb
sbb
sbb
pop
stos
dec
push
push
push
push
mov
daa
jb
mov
int
mov
out
leave
cmpsl
aad
shr
inc
and
subb
and
test
sbb
lahf
stos
cmp
jmp
in
xchg
mov
out
xor
in
arpl
and
push
push
loope
mov
fstpt
pop
pop
mov
rcl
hlt
repnz
mov
dec
aaa
movsb
add
daa
je
xor
cmpl
out
cli
push
jne
stos
cwtl
bound
mov
js
inc
and
clc
in
xor
xchg
add
mov
popaw
and
dec
dec
sbb
mov
mov
fisubrs
xchg
imul
sub
add
je
aam
nop
sub
test
cmp
icebp
insl
movsb
pop
jg
cmp
enter
adcl
cmp
stc
jg
outsb
mov
sbb
jnp
jno
push
sub
imulb
enter
scas
cmpsb
outsb
cmpsl
sub
dec
fadds
jbe
icebp
imul
int3
adc
movsl
push
sbb
ret
xchg
push
add
fisubrs
jg
lods
pop
in
mov
mov
enter
cmp
mov
pop
jns
push
mov
cltd
rcll
inc
fisubrs
aaa
fmul
fistpl
enter
xor
cmp
xorl
cmp
pop
cmpsl
fmul
cwtl
imul
insl
add
shlb
dec
ljmp
popa
imul
pushf
adcb
cwtl
mov
jnp
pop
icebp
loopne
mov
pushf
insb
mov
sub
adc
in
int
xor
lcall
jo
jb
pop
mov
or
sahf
mov
test
dec
push
mov
fnsave
push
pop
mov
adc
sahf
pop
add
stos
imul
mov
popa
adc
fcoms
mov
push
sarl
mov
inc
add
mov
into
sbb
push
push
adc
xor
pushl
push
inc
imul
test
or
loope
nop
cmp
xchg
fidivrl
pop
sbbl
push
mov
scas
leave
mov
sbb
sub
shrl
sbb
dec
test
icebp
ficoms
add
cmc
jg
inc
scas
inc
sbb
daa
mov
filds
mov
das
mov
cmpsb
into
iret
movb
fsubrs
mov
sub
mov
std
outsw
push
jmp
test
lcall
jnp
fstps
pop
sbb
push
ds
xchg
jmp
insl
adc
lock
popf
xor
sbb
rcl
mov
cltd
testl
add
dec
and
ss
adc
xor
mov
shll
fdivrs
ds
stos
sbb
subl
fcomi
movsb
or
push
mov
adc
add
addr16
sti
sahf
lods
aas
out
mov
gs
push
and
push
aam
fs
lcall
hlt
push
inc
shl
sub
loope
mov
xchg
in
add
shl
xchg
add
mov
or
inc
and
int3
fidivrs
aaa
je
mov
sarb
or
push
rcl
jnp
aad
jp
pop
shlb
in
insl
sub
cmp
adc
decb
xor
sub
out
or
pop
mov
and
mov
sub
sbb
mov
push
jo
jo
dec
sub
and
imulb
scas
icebp
adc
jmp
xlat
lds
int3
mov
mov
iret
stos
mov
inc
add
lea
adc
xlat
das
jmp
sub
rclb
pop
imul
scas
popl
cmpl
pop
call
cmpsl
imul
fucomi
test
push
mov
in
cmp
out
add
es
lea
sub
arpl
adc
mov
adc
cmp
sub
or
lea
fistpl
cli
outsl
pop
mov
lcall
mov
sub
xor
add
sti
xor
add
xchg
inc
fidivl
out
pop
les
sbb
fdivp
imul
xchg
pop
flds
lret
mov
in
adcb
or
push
mov
fldl
push
mov
test
cwtl
or
stc
adc
push
mov
and
les
cs
jbe
push
mov
int3
mov
loope
iret
aaa
push
adc
jnp
lret
mov
fildl
aas
and
and
mov
lret
js
outsl
inc
add
xor
scas
sbb
ret
xchg
out
in
cmp
divl
or
jp
mov
subb
test
dec
stos
jo
fdivl
test
lods
mov
pop
das
popa
cmp
xorb
icebp
jns
push
inc
adc
inc
popf
pop
iret
and
sbb
xchg
pop
mov
push
cmp
mov
bound
fwait
test
pushf
adc
inc
xchg
pusha
mov
test
fistpl
out
push
cwtl
mov
hlt
lahf
mov
jnp
jmp
or
rep
std
push
mov
enter
loop
leave
sbb
dec
xchg
jge
xor
sbb
lds
inc
enter
test
fnstsw
or
or
scas
cmp
mov
mov
cmp
cmp
xor
mov
jmp
in
inc
insb
call
xchg
lds
and
popl
mov
mov
fidivrl
out
lret
cmp
cmp
mov
mov
sbb
dec
pop
repnz
fadds
fwait
cli
adc
rolb
or
repnz
data16
mov
repz
jp
int
mov
mov
pop
lock
or
daa
ds
iret
loop
test
dec
pop
lahf
dec
das
cmp
or
add
pop
cmp
rorl
data16
cwtl
mov
nop
daa
mov
lret
xor
scas
dec
outsb
pop
jl
mov
cltd
dec
cmc
pop
cmc
or
mov
xchg
xchg
sub
jl
nop
mov
sbb
bound
or
in
insb
leave
test
pop
mov
jle
mov
sbbb
inc
pop
ljmp
js
xor
cmp
xor
repnz
push
mov
rcl
mov
push
in
xchg
rep
shrb
cld
sub
int3
fsubrs
dec
and
int3
out
cmp
cmp
inc
repnz
lret
adc
push
out
mov
sub
lods
or
inc
lret
xchg
int
sub
mov
xchg
sbb
dec
sarb
xor
mov
sub
imul
imul
push
xchg
push
lods
pusha
mov
cmp
mov
push
pop
pop
testb
stc
xchg
cmp
movsb
mov
mov
cmp
push
loop
int
dec
push
das
push
dec
and
pop
out
je
cmp
push
sub
scas
shlb
dec
fxtract
jnp
hlt
push
nop
xor
enter
or
sub
enter
inc
inc
pop
fstpl
add
cld
cmp
push
sub
dec
jmp
dec
cmp
in
insb
inc
ljmp
sub
stos
cld
mov
fwait
push
push
push
jmp
ret
js
lods
fildll
faddl
cwtl
cld
movsb
mov
rcrb
popa
cs
ja
push
push
sbb
pop
jmp
adc
push
js
inc
pop
mov
mov
stos
es
outsl
loop
ljmp
outsb
and
mov
mov
mov
mov
jle
aas
int3
inc
fidivrl
xchg
mov
cltd
popa
cmp
add
pop
dec
icebp
cwtl
cld
dec
mov
pop
cmp
lds
sbb
pop
xchg
and
scas
fcoms
bound
movsb
enter
mov
sbb
xchg
ds
pop
aad
jl
shlb
jg
in
mov
sbb
push
push
jl
sbb
leave
and
push
pop
cs
scas
add
sub
mov
sub
push
bound
int3
mov
mov
or
fadd
mov
sbbl
sub
sbb
xor
scas
addl
aad
push
mov
push
or
into
arpl
mov
bound
xor
add
mov
jmp
pop
jb
into
xchg
sar
xchg
mov
pop
jmp
mov
xchg
loope
mov
mov
hlt
dec
lret
adc
repnz
mov
mov
mov
pop
fcmovbe
bound
sti
in
test
decb
xor
jb
dec
hlt
pop
fiadds
cs
and
push
xor
cmp
bound
fisubrl
lods
out
add
mov
in
xor
lret
mov
push
dec
xchg
fs
imul
in
and
or
movsl
mov
xchg
int
sub
and
cmpsb
jb
dec
and
inc
sbb
outsl
into
call
divb
sbb
inc
dec
fadds
push
out
lods
ret
xchg
inc
dec
dec
jg
lahf
cmp
push
jmp
clc
mov
outsb
jno
dec
cltd
or
in
test
add
sub
in
xchg
mov
jp
int
mov
popf
inc
cwtl
pop
push
cmp
push
mov
lds
jge
popa
pop
insb
jle
subb
call
adc
test
push
or
addr16
mov
imul
and
scas
insl
ret
aaa
dec
repz
enter
pop
push
xchg
leave
xchg
mov
clc
vmptrst
dec
cmp
jl
int
push
inc
mov
lea
jp
sarl
dec
jle
pushf
icebp
arpl
mov
xor
clc
sarb
fstpl
outsl
pop
or
jmp
cmp
clc
cli
xor
and
adc
mov
xor
sbb
je
add
xchg
in
scas
cmp
push
sbb
addb
fisttps
and
dec
jb
cli
pop
ret
jp
das
xlat
and
stos
imul
adc
popa
jg
aam
stos
xchg
adc
jb
adc
in
dec
call
and
pop
and
mov
out
jmp
imull
incl
and
jge
mov
xchg
jle
aas
ljmp
fisubrs
movsl
js
jbe
or
jecxz,pn
and
shl
incl
sub
sbb
bound
sahf
mov
pushf
loope
fwait
cmp
movsb
jae
movsbl
cltd
mov
mov
pop
mov
mov
lahf
repnz
lcall
stos
sub
adc
jg
lcall
mov
enter
dec
movsl
in
cmp
sub
aaa
in
pusha
popf
orl
aaa
idivl
push
inc
mov
jp
lock
cmp
cmp
daa
lcall
jp
add
mov
pop
outsb
jl
xor
pusha
mov
mov
push
out
std
ljmp
out
movd
xlat
outsb
mov
xchg
insb
jle
arpl
shll
sbb
xchg
mov
sub
stc
data16
ja
pusha
arpl
adc
mov
pusha
mov
shrl
orb
and
xor
jnp
jp
test
pop
shll
fucom
out
int3
xchg
es
fdivl
dec
movsl
in
std
or
ficomps
or
je
add
insb
sub
xchg
inc
push
mov
in
push
stos
pop
push
mov
xchg
xor
ja
fwait
inc
add
out
add
sub
jp
dec
mov
jg
xchg
jmp
fcomip
flds
xchg
sub
cli
mov
and
leave
rcl
adc
cwtl
out
clc
fdivs
and
ds
jge
pop
or
pop
aad
scas
xor
ret
shrl
into
cmp
jp
out
dec
iret
fwait
cmpsl
dec
and
aaa
fnstenv
xchg
dec
imul
mov
mov
ror
lahf
sbb
ljmp
addl
aaa
lea
xchg
mov
sbb
mov
arpl
mov
xchg
fucom
mov
ljmp
add
inc
mov
lret
sti
xor
jmp
in
stos
xor
dec
loope
xor
decl
xchg
xchg
pusha
cwtl
imul
mov
pop
stc
add
inc
jae
xlat
mov
pop
cmp
sub
pop
subb
jg
loopne
iret
cs
repnz
adc
dec
dec
and
cltd
push
outsl
xor
test
pop
cltd
jge
dec
in
xlat
mov
call
cld
xchg
mov
lds
xor
cmpsb
inc
mov
inc
sti
mov
into
addl
in
adc
push
dec
inc
iret
in
movsl
vpaddusb
cwtl
sbb
mov
fstl
test
push
bound
xsha256
cmpsb
push
sbb
push
push
stos
sub
loope
push
push
dec
jo
mov
sub
mov
inc
adc
add
imul
lds
rorl
or
add
outsl
lods
shll
xor
or
inc
pushf
xchg
dec
ljmp
shr
in
sub
stc
mov
mov
sbb
dec
decl
sub
lock
lret
in
xor
aam
into
lods
call
push
movsb
les
adc
and
lock
jno
loope
clc
sbb
xorb
sarb
arpl
shrb
ret
loop
ja
add
sub
sub
lret
imul
in
es
stos
inc
jb
inc
mov
push
or
push
cmp
xor
movsb
test
xorb
xorb
mov
jg
stc
nop
out
test
jns
dec
outsl
xor
jno
popf
mov
fadds
hlt
pop
dec
shl
cmpb
in
push
add
int
shrl
pushf
push
fcoms
adc
pop
adc
inc
add
movsl
inc
sti
add
dec
mov
add
or
dec
stc
imulb
and
gs
popa
jnp
rcrb
insb
inc
in
jae
imul
inc
inc
fisubs
leave
or
jae
mov
push
dec
clc
adc
mov
jge
pop
xchg
ss
sahf
mov
adc
add
jp
pushl
cmpsb
sbb
fwait
and
outsl
cmp
mov
outsb
testb
mov
stos
add
inc
push
repz
test
cld
inc
pop
lock
sub
adc
fidivrs
mov
mov
divl
jg
inc
arpl
faddp
fisttpl
lock
int3
test
mov
cmpsb
xchg
adc
ret
imul
dec
lods
fstpt
test
lret
mov
andb
lret
mov
rcrl
jge
jg
mov
mov
sbb
mov
loope
jns
testl
repz
out
or
or
fldenv
clc
push
dec
dec
fbld
dec
data16
loope
call
inc
mov
insl
dec
inc
sbb
clc
movsl
mov
enter
inc
cmpsb
imul
cmp
lcall
mov
sahf
push
sub
mov
dec
inc
fidivrs
in
scas
mov
xchg
cs
mov
push
popf
mov
int
fnstcw
cwtl
dec
jnp
daa
mov
and
jl
adc
js
inc
or
dec
add
fsub
ret
mov
cmp
pop
jg
test
jle
ret
pop
int3
or
iret
pushl
xor
mov
adc
bound
js
or
pop
es
fldenv
aad
ljmp
pop
cmp
sbb
rcll
ja
cld
lcall
jae
sti
cmp
lods
jmp
aas
jle
add
add
mov
jno
stc
adc
xchg
lock
dec
xor
gs
scas
stos
bound
pop
mov
mov
sbb
loop
aaa
jbe
mov
mov
addb
mov
cmp
push
mov
clc
stos
sti
mov
push
bound
arpl
test
inc
inc
stc
sbb
cmp
cmp
mov
les
cltd
pop
cmp
ret
inc
mov
mov
aaa
push
or
out
xor
sub
xor
clc
dec
xchg
jae
mov
cmp
mov
pandn
sbbb
rcrl
or
mov
idivl
jne
sub
xchg
jg
fcoml
divb
stos
dec
popl
or
stos
cmpsb
loopne
lock
xor
mov
add
cmp
mov
test
int
or
scas
xchg
sarb
enter
into
fs
inc
gs
popf
lds
testb
mov
in
or
sub
fsubrl
adc
cmpsb
into
in
movb
sti
aam
insl
pop
mov
inc
xor
lcall
popa
adc
mov
adc
rcl
add
pop
pop
push
add
call
loop
xor
adc
fidivl
clc
sbb
mov
mov
stos
jo
pop
lahf
cld
mov
push
mov
das
pop
sarb
dec
popf
jbe
push
sbbb
ja
add
xchg
pop
call
sahf
rorl
and
loop
jne
push
sbb
les
inc
cmp
lock
in
hlt
jmp
mov
xchg
jnp
push
std
loop
insb
add
sarl
or
stos
inc
lret
cmp
cld
xchg
js
mov
lcall
mov
pushf
push
lahf
stos
mov
and
dec
xor
or
insl
fnstenv
adc
sub
dec
mov
pop
sbb
subl
es
ds
inc
aad
faddl
xchg
loop
arpl
popl
sti
ja
into
lods
stos
pop
stc
inc
mov
test
cmp
sub
pop
xchg
pushf
xor
fucom
pop
add
cmp
mov
enter
mov
loopne
and
mov
ret
mov
lret
js
jo
jae
imul
jl
dec
insb
jle
sbb
xchg
push
xlat
inc
cmp
in
loop
push
in
add
add
out
insb
lcall
xchg
jecxz
cwtl
adc
push
das
sub
dec
mov
dec
je
cld
xchg
shlb
data16
mov
jbe
loop
xor
dec
mov
cmpb
sti
push
push
and
nop
mov
les
xchg
jb
mov
add
sub
push
mov
mov
xor
pop
push
push
adc
iret
and
add
out
int
inc
cs
add
push
jge
add
pop
repnz
mov
shrb
popa
in
xor
loop
xchg
call
mov
or
popf
mov
dec
imul
lods
xor
jge
sub
sbb
fbld
incl
xor
push
loope
gs
cmc
adc
leave
ds
xchg
or
ja
sub
pop
pop
xor
push
ja
idiv
shll
sub
sub
nop
sbb
pusha
jae
pop
push
loop
adc
pop
mov
aad
pop
pushl
cmp
in
push
jno
mov
and
repnz
cltd
shlb
cmp
movsb
jnp
dec
icebp
or
test
test
ficompl
inc
dec
mov
test
xor
call
dec
fisubrs
sub
or
shl
stos
push
pop
test
pop
or
jb
lods
cmp
sub
clc
push
sbb
dec
mov
adc
cwtl
sbb
inc
dec
mov
pop
imul
inc
mov
dec
dec
or
ss
insl
int
push
inc
inc
out
mov
xor
adc
lret
sub
xchg
addr16
jge
add
lahf
xor
fstp
inc
dec
pop
ficomps
dec
jmp
cld
pop
lret
aas
loop
cli
cmpl
in
sub
popf
stc
jne
out
mov
dec
fiadds
and
pop
and
out
cs
adc
pop
repnz
mov
add
je
test
xchg
dec
imul
call
inc
cwtl
sarl
jo
sub
in
les
xor
sbb
pusha
sbb
mov
movsl
mov
add
pop
lahf
pusha
ret
test
loop
out
pop
repz
cltd
std
xchg
lret
nop
jb
lcall
gs
lea
repnz
xchg
adc
insb
mov
lds
add
popf
pop
lcall
roll
lret
lret
les
and
popf
mov
std
shl
mov
iret
mov
jbe
insb
sub
lea
jg
add
xchg
pop
mov
inc
or
movsb
pop
push
fwait
mov
push
inc
pop
add
pusha
push
mov
in
sbb
notl
sti
or
push
xchg
mov
xor
push
shll
js
mov
sbb
or
dec
mov
xchg
rorb
leave
out
aaa
sub
xchg
push
cmc
adc
xchg
cmpsb
push
loope
jno
mov
push
ja
jb
sbb
call
cmp
imul
xchg
aaa
jg
jl
sbb
mov
jae
mov
adc
mov
into
loop
enter
sbb
das
cmp
jbe
aas
jmp
fldl
mov
das
xchg
outsl
or
mov
pop
ret
mov
das
pop
sub
popf
sub
push
push
sar
add
in
mov
inc
inc
in
movsl
jno
rcrl
jl
dec
repz
test
lcall
jo
iret
and
loop,pt
or
pop
jbe
sahf
mov
mov
xor
sahf
pop
jae
pop
adc
push
mov
xor
shlb
pop
xchg
cmpl
in
shl
cmp
jnp
mov
push
movsb
in
fdiv
out
sub
add
or
ret
arpl
sarl
fisubs
movsb
mov
in
sbb
ss
hlt
js
mov
cmp
xchg
inc
push
cmc
rolb
icebp
dec
enter
and
cmp
test
arpl
jnp
cmpsb
cmpsb
jae
pop
mov
mov
mov
pop
xchg
sub
cli
imul
dec
cwtl
je
jp
xor
mov
mov
dec
or
xchg
aaa
cld
cmp
jg
popa
pop
repnz
aam
adc
mov
pop
mov
push
mov
stc
sbb
cltd
xchg
xor
add
call
fwait
out
jns
xor
mov
push
das
fdivl
jg
in
mov
arpl
jo
jge
sti
arpl
stc
inc
sbb
sub
test
mov
jb
mov
std
cltd
lahf
adc
jecxz
fdivl
shrl
fadds
sbb
and
pop
das
jns
insl
jge
lcall
jle
push
inc
mov
cmpsl
sub
push
xor
ljmp
xor
pop
subb
cmp
shr
push
xchg
test
aas
xor
pop
jns
adc
lods
outsl
test
mov
jle
pusha
mov
sbb
adcl
jbe
mov
push
xchg
test
dec
fisubrl
and
cs
testl
mov
mul
push
jo
loopne
sbbb
inc
push
sbb
mov
jmp
or
aam
and
pop
xchg
pop
xchg
call
mov
xchg
pop
add
daa
dec
mov
bound
mov
es
lret
xor
test
mov
cli
lret
in
jp
cmp
lea
inc
into
adc
ret
sbb
into
lods
dec
data16
push
gs
add
sub
cwtl
mov
das
mov
xor
loopne
mov
add
sbbl
mov
sahf
mov
cmpsb
jns
pusha
daa
lods
adc
lcall
inc
xor
ss
hlt
pop
sbb
pop
and
adc
push
orl
inc
or
pop
xchg
loop
imul
xor
les
shl
push
add
mov
push
jp
fwait
pusha
jne
fs
push
cmpsb
or
mov
into
jecxz
dec
inc
pop
adcl
adc
or
jb
mov
and
sub
lods
mov
test
adc
cmpsb
clc
shl
dec
adc
xor
iret
push
push
mov
test
fs
pop
imul
mov
sub
pop
adc
add
xor
and
push
movsl
and
push
nop
sti
mov
mov
pop
jp
scas
inc
cmpsl
pop
fsubr
jg
int3
xor
jl
push
in
rcrb
mov
mov
cmp
cmp
sbbb
mov
lcall
in
push
mov
mov
and
jbe
push
jno
call
sbb
sub
mov
dec
fstpl
xlat
orb
clc
and
or
xchg
sbb
fimull
xor
out
cmp
mov
les
xor
je
or
add
inc
cli
daa
jae
mov
jnp
cmp
xlat
outsb
pop
lock
jmp
cld
pop
scas
mov
out
out
mov
dec
mov
mov
mov
mov
jl
and
push
lods
sub
mov
outsl
inc
fnstenv
lahf
push
gs
bndstx
sti
test
mov
inc
ljmp
sbb
adc
pushf
xchg
testl
dec
xor
in
icebp
mov
imulb
inc
sub
xlat
mov
or
xor
movsb
testb
ret
cmp
push
sub
cwtl
fstpt
inc
xor
jecxz
addr16
xchg
sbb
mov
push
icebp
pop
cmp
pop
jmp
test
ret
jmp
mov
sub
es
cmp
lods
add
mov
xchg
aas
pop
cmp
sub
scas
jb
into
imulb
roll
dec
test
xchg
push
jecxz
xor
jno
inc
fmul
mov
xchg
fbld
add
lcall
into
pop
leave
lods
fdivs
push
cltd
pop
out
repz
cmpsl
xor
jg
ret
xchg
inc
fdivrl
mov
ds
outsb
inc
mov
fwait
cmp
mov
add
es
adc
js
xor
dec
testb
fmul
sub
cmpsb
popf
icebp
iret
data16
rcll
out
in
test
fsubr
xchg
or
out
cmp
pop
jne
dec
dec
pop
cmpsb
movsl
stos
add
rcl
repz
pop
jnp
cltd
addl
pop
lods
addb
std
pop
mov
in
fsubl
ror
pop
lret
aam
movsb
loopne
shlb
test
jmp
push
out
mov
les
movq
jae
andl
or
dec
pop
pushf
sti
or
xchg
jge
movsb
adc
out
cmp
pop
mov
sbb
mov
mov
cmp
testb
pop
pop
imul
jnp
xchg
mov
movl
jb
out
ret
sbb
cmc
and
cmc
lea
cli
lea
pushf
adc
rorl
in
cmc
stos
add
sbb
add
pop
adc
bound
enter
mov
mov
pop
jl
insb
fbld
or
out
imul
xchg
andb
imul
sbb
inc
dec
fsubrs
and
lods
arpl
addb
mov
enter
jl
test
xchg
movb
cmp
inc
mov
mov
decb
lock
cmc
int
push
jmp
mov
lahf
mov
pushf
roll
mov
call
xchg
jae
cmpsb
ret
fcompl
stc
adc
push
popa
xor
push
pop
cmp
add
insl
movlps
add
ficoms
dec
aam
and
cmpsb
sbb
and
mov
mov
xchg
adc
stos
gs
cmp
out
lret
jecxz
cmp
cmp
dec
pop
divl
xchg
push
mov
leave
daa
jmp
push
sar
and
push
call
pop
add
adc
insl
pop
xor
jns
jo
jge
dec
rclb
dec
out
lds
lods
scas
dec
imul
pop
or
add
sub
mov
les
icebp
cmp
jecxz
in
sub
mov
in
jle
dec
mov
and
mov
int3
push
frstor
dec
xor
push
pop
ds
mov
mov
xor
paddb
adc
stos
scas
inc
mov
inc
fcmovnu
mov
arpl
rcll
lret
dec
lods
sti
pushf
sbb
pop
fbstp
fbld
cmpsl
xorb
adc
push
dec
jg
jle
cmp
stos
sbb
js
shll
es
icebp
sbb
lods
sub
cwtl
test
pusha
stos
add
shlb
adc
lcall
in
hlt
imul
lahf
push
adc
pop
shll
push
test
enter
outsl
mov
rorb
mov
fcmovu
xchg
pop
xor
cmp
insb
push
in
repz
nop
std
pop
cs
lock
inc
xchg
cmc
popf
xor
test
jae
cmp
and
jo
popa
mov
add
xchg
xor
dec
fmuls
arpl
sbbl
pop
sub
pop
aas
ror
mov
cmpl
icebp
fsubr
cld
int3
mov
mov
mov
or
mov
xor
std
sub
sbb
mov
or
bound
adc
movb
jle
outsl
and
xlat
subl
xchg
dec
mov
mov
imul
push
inc
test
aaa
or
outsb
lcall
add
mov
push
mov
lods
lds
xchg
mov
jns
cmp
cmpsb
loop
std
sbb
or
xchg
or
cltd
cmpsl
in
mov
jb
jnp
fldt
bound
enter
inc
push
outsb
in
and
fldenv
imul
insb
sub
shrb
jne
jl
pop
push
fcomp
cmp
fsubrp
mov
arpl
jg
daa
mov
jl
in
hlt
aad
cmp
addl
adcl
dec
mov
shr
dec
mov
hlt
shrb
xchg
inc
sbbb
xor
sbb
sahf
xlat
test
in
in
inc
adc
mov
xchg
vcvtpd2dqy
in
addr16
add
inc
enter
insl
add
lods
add
scas
adc
testl
pop
imul
mov
lods
cli
pusha
fstpt
sub
push
stc
popf
fisubrs
mov
inc
ret
movsb
pop
leave
jmp
sbb
fsubp
lock
jmp
jbe
sbb
adcb
mov
cld
push
sub
je
mov
or
push
add
and
jae
fldt
movsl
jae
stos
add
aam
xor
stc
cld
push
push
loopne
pop
and
and
sbb
jp
aaa
xor
mov
sahf
je
insb
pop
adc
notl
adc
out
loop
mov
adc
test
add
cltd
add
lods
jo
mov
sti
mov
add
cli
test
mov
ficoms
xchg
sub
ljmp
std
movsl
mov
push
pop
jg
lret
mov
mov
aas
rcr
fdivrs
leave
mov
sub
and
inc
pop
dec
inc
xor
cld
inc
sub
das
dec
dec
movsl
mov
push
dec
mov
push
iret
aaa
ljmp
pop
pushf
cmp
fwait
mov
xor
loopne
xchg
std
cld
cs
sbb
decl
test
push
in
inc
push
or
scas
push
popf
jmp
adc
mov
mov
movsb
fs
in
out
cmp
ret
testl
inc
push
mov
and
iret
gs
dec
mov
mov
sbb
pusha
orb
fucom
out
cmc
cmp
xlat
jb
shl
mov
cmp
cwtl
jbe
dec
mov
popa
lret
jae
call
int
mov
lret
jg
add
add
das
inc
inc
push
test
sbb
or
xorb
je
notb
stos
mov
sti
inc
cmp
sbb
pop
dec
imul
je
add
jecxz
dec
mov
pop
mov
aaa
xor
jnp
add
div
lcall
loope
add
push
push
mov
mov
lret
xor
pop
inc
lods
or
xchg
jmp
loop
shl
dec
dec
jne
scas
aaa
jnp
aas
inc
jmp
pop
xor
das
in
dec
ss
pop
sub
or
jle
or
dec
loopne
adc
xchg
xchg
dec
sub
push
movsb
adc
jae
pop
dec
add
mov
rorb
cmp
sar
jge
iret
das
fadds
mov
mov
movsl
cmp
fstpl
xchg
fmull
dec
mov
rcrb
scas
sahf
lods
xlat
push
loopne
hlt
jb
loop
xor
jne
cmp
shll
loopne
cmp
inc
pusha
fnstsw
cmp
fstps
jnp
jmp
xchg
sbb
cltd
pop
pushf
popa
sbb
jno
out
test
xchg
mov
mov
icebp
adc
adc
lret
les
iret
pop
movsl
mov
xchg
mov
loopne
leave
xchg
cmpsl
push
and
pusha
sub
jbe
addl
inc
xchg
add
cmpsl
enter
fisubs
push
out
rcrl
call
or
push
lea
xor
jp
adc
pop
or
dec
ficoms
in
xor
lock
dec
dec
cmc
jp
sub
cwtl
stos
out
adc
mov
loope
jmp
cs
pop
cmp
lret
out
pop
fs
mov
push
jp
mov
cwtl
jb
nop
in
xor
ds
jcxz
in
mov
rcl
push
clc
or
pop
cmpsb
mov
xchg
add
mov
push
in
jo
fwait
xor
mov
shl
inc
inc
fs
cltd
ljmp
in
imul
pop
lcall
inc
into
xor
rorb
ret
ss
aaa
into
push
in
sub
lcall
out
icebp
pop
jnp
shlb
jle
adc
sub
jecxz
and
sbb
jbe
inc
mov
mov
test
mov
in
or
loopne
adc
sbb
xor
push
add
mov
pop
test
mov
pop
leave
lods
in
sti
fimuls
pusha
fs
and
pop
gs
sub
call
int
xlat
imul
ret
inc
jno
mov
test
mov
call
popf
test
shll
jae
jne
out
scas
inc
adc
in
cmpsb
in
mov
or
jmp
pop
sbb
fucomi
hlt
push
loopne
rcrl
mov
pop
fcmovne
mov
adc
lea
not
pop
lods
mov
mov
pop
cmp
cmp
in
dec
pop
jnp
xor
sub
hlt
jmp
cmp
xlat
mov
or
adc
mov
adc
std
fsubrs
lea
arpl
xor
shr
or
mov
sub
lods
test
clc
int
icebp
int
loope
jns
push
cmovnp
inc
aaa
les
and
scas
inc
mov
popa
adc
inc
into
push
add
cmp
call
mov
or
fisttps
dec
push
push
lret
push
sub
mov
arpl
scas
data16
adcb
aam
aas
xchg
sub
ja
mov
cmpsl
shl
add
mov
and
in
adc
movsb
into
subl
ja
mov
and
gs
xlat
into
fisubs
insl
int
xchg
mov
test
jp
shrb
adc
in
jp
ror
xchg
pushl
mov
adc
xorl
lock
or
rcrb
ds
cwtl
add
pop
dec
sub
sub
fnstcw
cmp
je
mov
popa
lods
pop
push
fs
xor
push
jns
loope
xchg
push
lcall
and
cmc
push
pop
push
adc
jns
test
lret
stc
test
scas
stos
inc
loope
inc
shrl
xchg
dec
nop
in
test
sub
fsubp
xchg
pop
pop
mov
pop
subl
dec
mov
cmp
xor
add
fs
mov
popf
popa
dec
cmpsl
xchg
loopne
enter
xorb
mov
xchg
rcrb
dec
daa
xor
push
test
or
dec
sub
pop
loopne
loope
mov
ds
jge
movsl
cmp
jl
aaa
and
xlat
dec
sbb
mov
mov
repnz
jl
mov
imul
or
mov
jne
xchg
rcr
ja
or
mov
bound
pop
adc
sub
lods
inc
cs
fdivrl
jg
mov
inc
dec
dec
mov
in
mov
out
xchg
test
mov
xchg
pop
and
xchg
adc
jb
push
sub
push
jbe
push
rcr
mov
and
lahf
ret
mov
push
rorb
pop
dec
add
cmp
sbb
int3
inc
push
add
jg
dec
jns
in
sub
inc
lcall
inc
pushf
ljmp
fwait
mov
popa
pop
lea
ror
popa
faddl
pop
jo
jle
jl
push
pop
test
inc
fucom
add
mov
mov
pop
xchg
sahf
sub
loope
lcall
cwtl
das
or
outsb
mov
scas
or
sarb
inc
lret
inc
loop
xor
jns
dec
pop
icebp
clc
cmp
and
pop
push
testl
jle
aam
xchg
and
mov
xchg
shlb
pop
jae
icebp
stos
adc
test
dec
push
pop
xchg
xchg
push
jb
test
es
popf
in
cmp
xor
adc
cmp
mov
jnp
ret
mov
call
sub
add
stc
dec
jmp
sbbb
xchg
mov
test
mov
mov
mov
push
or
or
xlat
push
jae
stc
xchg
mov
dec
popa
stc
pop
mov
jne
scas
adc
aad
cmpsb
fimull
or
xlat
xchg
rcrb
out
mov
adc
icebp
add
hlt
push
fwait
xor
repnz
loopne
dec
adc
sub
xor
std
add
leave
je
cs
popa
subb
in
jecxz
mov
push
mov
fs
loope
dec
mov
jl
jmp
loope
in
in
cs
movsb
and
pop
fists
mov
and
mov
dec
leave
mov
push
inc
fiadds
test
add
es
sahf
jne
and
dec
push
mov
movsl
jo
int
adc
rcr
pop
sub
je
adc
and
cmpsb
stc
ds
sub
mov
and
sbb
js
test
xlat
inc
pop
popf
jbe
cmpsb
out
xchg
and
lcall
insb
cs
pop
and
iret
xchg
adc
jl
repnz
mov
add
and
or
mov
mov
sub
cmp
sbb
or
ja
cmp
loope
pop
adc
mov
into
cmc
mov
shl
pop
inc
dec
mov
mov
push
jmp
add
xor
dec
xor
pusha
xor
fidivs
mov
inc
cmpsl
push
or
dec
les
ljmp
pop
in
icebp
loopne
call
addl
inc
xchg
mov
inc
and
cli
mov
dec
xor
dec
fcomps
aad
pop
fdivl
sub
dec
dec
loop
cmp
dec
xor
ret
cwtl
adc
cmp
mov
daa
sahf
clc
insb
hlt
aam
sbb
mov
bound
lea
jl
xor
push
sbb
mov
fldenv
repnz
aam
xor
pusha
stos
mov
jmp
pop
xchg
push
mov
xchg
sub
outsl
aaa
stos
pop
mov
cmp
mov
inc
call
and
adc
test
dec
dec
jle
inc
fistps
loopne,pt
inc
pop
fwait
in
repz
ss
lds
inc
push
ret
jmp
out
sbb
sub
sahf
dec
fs
test
iret
jecxz
jae
popa
scas
pop
mov
pop
lea
ds
mov
mov
inc
stos
dec
loope
jns
movsb
test
aad
push
xchg
or
mov
push
push
pop
cltd
mov
outsl
cmp
bound
jo
cmpsl
pop
adc
xchg
mov
or
dec
inc
cld
cmp
pop
testb
movsb
aaa
jge
jge
loop
call
int
pop
mov
scas
loope
ds
push
adc
mov
jno
cmp
int
and
inc
mov
std
adc
xor
sarl
shlb
test
mov
ret
filds
sbb
xor
das
xchg
cli
and
test
mov
mov
dec
dec
mov
pop
outsb
mov
sbb
sbb
pop
aas
call
adc
scas
rclb
mov
sahf
lods
aad
notl
loop
ss
xchg
and
fcoms
pop
cmp
mov
mov
loopne
lods
dec
out
cmp
imul
jg
test
add
ror
jo
push
sub
in
cld
aad
pop
dec
scas
ds
pop
push
mov
fldcw
icebp
sarl
nop
push
or
jmp
lea
nop
sbb
arpl
ror
scas
jno
lock
fdivrs
and
aad
popa
jne
mov
ret
inc
outsb
push
ljmp
test
sarb
rep
fidivs
mov
movsb
outsb
lret
jo
mov
dec
loope
xchg
inc
jmp
pop
sub
std
pop
les
sbb
js
add
aas
and
sbb
mov
leave
fs
mov
les
dec
pop
rolb
jo
sub
ja
dec
xor
xor
xor
lea
jo
push
pop
dec
out
gs
lahf
sbb
in
fcoml
cmc
xor
push
xor
mov
call
and
nop
jnp
sbb
cmpsb
and
mov
scas
mov
jle
cld
pop
jbe
scas
shll
jb
dec
sub
js
mov
sbb
adc
pusha
push
popf
xor
xchg
iret
and
out
sbb
cmp
inc
add
sti
dec
int3
out
xor
arpl
hlt
xorb
lods
lret
cwtl
push
flds
test
inc
jae
cmpsb
das
push
cld
inc
jl
popa
or
shll
cmp
sub
jge
enter
pop
cmpsb
popa
ljmp
nop
cmp
jge
add
pop
cmpsl
jnp
sarl
jmp
push
push
push
test
jbe
inc
pop
or
lret
sub
pop
sbb
adc
and
add
push
xor
lods
stos
push
idivl
sbb
aam
lahf
jge
dec
shll
push
mov
mov
dec
lcall
andl
lcall
andb
testl
fsub
push
scas
mov
lods
mov
popf
mov
std
lock
sub
shlb
xchg
xchg
sub
and
inc
pushl
rorb
jl
test
pop
xor
pop
cltd
xchg
pop
mov
jle
les
xchg
mov
dec
fucomi
adc
ds
fildl
mov
adc
and
scas
lods
mov
sub
loopne
adc
imul
mov
out
xor
inc
dec
push
pop
addr16
sub
jne
inc
faddp
jmp
fxch
stos
pop
push
adc
adc
gs
cli
inc
fldcw
adc
mov
fsubr
lods
cmp
mov
inc
add
jnp
cmp
arpl
sbb
push
or
icebp
insb
sbb
push
in
scas
push
xchg
push
jg
fdivl
movsl
in
jns
pop
mov
sbb
lcall
adc
lea
lcall
test
jbe
mov
cmp
mov
pushf
pop
xchg
sahf
loopne
add
imull
in
and
jo
add
idivb
es
or
into
xor
cmp
out
xchg
mov
xor
mov
and
push
or
mov
xor
adc
inc
and
push
mov
pop
in
jbe
push
push
or
dec
pop
mov
cltd
sbb
and
xor
dec
mov
pop
mov
xor
scas
ret
lea
jo
mov
push
xor
dec
inc
fcmovne
inc
dec
xchg
rclb
loop
push
jmp
clc
xchg
out
push
jb
adc
mov
adc
shlb
adcl
aaa
cmc
outsl
inc
mov
pop
push
mov
dec
testl
lds
push
mov
sbb
jp
xchg
push
insl
pushf
js
or
lret
es
adc
inc
add
icebp
push
aam
push
and
inc
arpl
cmpsl
or
pop
jbe
sub
and
mov
lock
dec
mov
stos
add
jne
call
ja
add
dec
adc
mov
or
fbld
xchg
jnp
mov
cmp
push
pop
hlt
mov
and
xor
addb
mov
sub
ds
loope
popf
ja
mov
jnp
js
jne
xor
lds
ljmp
sbb
xchg
sub
mov
sub
in
call
mov
xchg
xlat
xchg
aaa
daa
sub
adc
push
pop
daa
push
mov
idivl
mov
hlt
cmp
push
fldz
sbb
jnp
test
mov
push
and
fnsave
mov
sarl
in
cld
cltd
out
xchg
push
or
popa
or
imul
test
mov
fsts
out
mov
movsl
data16
xor
loope
lret
mov
cmpsb
ds
pop
pop
mov
pop
movsb
inc
cmpsl
mov
ljmp
mov
adc
lcall
fs
xchg
lahf
mov
mov
add
inc
fstl
push
pop
add
out
mov
dec
add
mov
sbb
cmp
jecxz
mov
jno
cmp
xlat
dec
test
scas
jge
jecxz
dec
xchg
and
dec
pop
lcall
push
adc
sti
insb
xchg
inc
leave
mov
dec
nop
shlb
addr16
stc
popa
xor
and
pop
or
sub
scas
xchg
sub
cmp
jne
xor
ja
rorl
loope
movsl
mov
and
push
xor
ficomps
jns
mov
int
mov
mov
rclb
ret
shrl
outsl
pop
mov
inc
jbe
lds
ja
pop
test
mov
inc
enter
inc
inc
push
ds
in
into
adc
lds
cmpsb
notb
ss
daa
mov
push
sbb
sub
lahf
out
push
insl
mov
mov
inc
pop
in
mov
shl
push
mov
mov
call
push
and
xor
leave
sar
fistps
call
jnp
inc
xlat
and
inc
aaa
add
xchg
dec
dec
cmp
mov
xchg
fdivr
push
mov
jbe
or
into
push
mov
sub
dec
xor
ret
pop
pop
stos
inc
mov
or
insl
dec
imull
iret
cmp
sub
popf
aad
andps
popa
jo
mov
push
les
lcall
pop
std
incl
addr16
pop
push
lds
mov
aam
test
jmp
out
orl
ud1
aad
lods
popl
test
sub
adc
xor
cwtl
loop
mov
and
cli
cmpsl
push
xchg
cmpl
cwtl
test
addr16
jg
jmp
pop
es
pop
int3
jl
push
lahf
dec
sahf
xor
jae
push
fldt
loope
xor
out
cli
loop,pt
clc
out
pop
push
jb
fld
ficomps
adc
push
dec
test
movsb
fcmovb
xchg
sub
dec
stos
jne
orb
and
mov
lock
hlt
jl
insb
shrb
jnp
add
mov
cmp
add
pop
lea
out
push
out
int3
scas
sub
jmp
inc
out
int3
dec
push
test
mov
fisttpll
mov
mov
lock
add
pop
sbbl
and
pop
or
outsb
iret
ficompl
mov
movsl
adc
je
mov
imul
xchg
cs
jl
and
sbb
lock
mov
call
pop
cli
jno
jo
scas
outsl
loop
cltd
lods
jle
out
insl
ljmp
push
lahf
call
bnd
repnz
push
cmc
push
cwtl
lcall
mov
mov
stos
scas
mov
pop
enter
push
outsb
sbb
pop
fcoms
outsl
sub
mov
cmp
xor
lods
ljmp
and
fwait
push
shrl
mov
mov
test
lds
aad
jp
dec
jge
and
insb
add
mov
mov
mov
xor
dec
add
inc
fwait
push
ss
xor
gs
imul
xchg
add
test
push
addr16
cmp
cmpsb
mov
or
mov
shrl
cmp
popf
ss
fisubrs
mov
cmpsb
iret
fs
lcall
cmp
cmpsl
aaa
into
fadds
call
leave
out
shrb
push
lahf
sub
mov
test
mov
push
jp
into
xorl
sub
mov
inc
and
clc
lods
fsqrt
aad
adc
cmp
mov
jno
scas
sub
into
push
sbb
insl
dec
mov
cmpsl
test
into
stc
jg
clc
gs
xorl
sub
rdtsc
add
mov
loop
cmp
xchg
mov
lea
cmpsb
mov
cmp
cmpsl
push
in
cmp
out
jp
cmp
imulb
sbb
or
dec
rorl
push
sbb
pop
lods
mov
rcl
cmpsl
unpckhps
mov
loopne
fidivrs
pop
jo
fsub
stos
mov
lea
push
xchg
roll
hlt
aam
fcmovu
es
jno
push
mov
dec
filds
dec
mov
cwtl
mov
jae
mov
ds
jg
pop
cs
aas
push
int3
out
push
pop
push
adc
data16
outsw
in
fisubrl
xchg
or
push
dec
mov
push
jne
sbb
hlt
push
inc
fsub
stos
mov
rcr
shrl
push
test
inc
int
add
dec
mov
add
or
scas
pop
pop
mov
mov
hlt
inc
adc
inc
cmp
test
out
push
dec
sbb
inc
mov
mov
or
popa
cmp
xchg
cmp
dec
std
jnp
enter
cli
cmp
inc
cwtl
lds
divb
addr16
rclb
lea
pop
mov
dec
int3
xor
clc
push
push
adc
lahf
dec
cmp
ret
mov
daa
das
fcmovu
je
lds
push
fdivs
test
and
lea
cmpb
lret
in
inc
enter
std
adcl
iret
xchg
lock
in
adc
push
out
arpl
bound
mov
pop
leave
mov
je
pushf
fidivl
cli
mov
push
jne
jl
pusha
mov
stos
sub
xchg
dec
fiadds
push
loope
inc
movsb
stc
mov
push
cmpps
lret
pop
add
out
dec
pop
ljmp
sub
pop
icebp
mov
fldlg2
stos
sub
aam
loope
mov
arpl
clc
ss
adc
push
andb
insl
rorl
enter
pusha
into
jbe
and
fxch
fists
push
sub
inc
cmpsb
add
sub
dec
lahf
fs
fistps
lock
ja
js
bound
push
int
dec
aaa
mov
ds
stos
es
fsts
xor
imul
repz
pop
mov
mov
ret
stos
add
mov
outsl
sub
dec
adc
lds
pop
notl
cltd
push
popf
cwtl
jbe
mov
mov
add
ret
mov
test
pop
sbb
cmp
add
xchg
fnstsw
jo
cli
adcb
mov
cmp
jne
jg
out
sbb
push
out
inc
je
movsl
mov
jl
pop
and
mov
scas
cmpb
out
fimuls
rcrb
inc
cltd
jne
and
xor
das
xchg
hlt
sti
jbe
aas
sub
ljmp
bound
iret
cld
fstl
nop
mov
mov
push
pop
adc
jmp
rclb
repnz
call
flds
sarb
aaa
movsb
xor
inc
leave
xor
sbb
into
fwait
push
test
fsubs
insb
fiadds
data16
je
sub
andb
lahf
bound
sbb
pop
aaa
stos
fs
lret
fnstcw
ret
dec
push
dec
cmpb
mov
sub
sbb
shll
inc
lcall
jb
shlb
rcrb
addl
pop
sti
or
ret
push
dec
out
imull
in
popa
shrb
push
out
stc
popa
push
in
push
andps
fnstenv
cld
ja
test
xor
fsubrs
pop
cltd
into
mov
pusha
lods
cmp
aaa
aaa
mov
xor
sbb
cmp
pop
jae
shll
xchg
aaa
ds
inc
js
xor
pop
cmp
pop
and
mov
push
cmp
loop
fsubrs
xchg
xchg
jmp
cmp
mov
cli
xchg
add
cltd
pop
cmp
pop
ds
dec
arpl
mov
sub
pop
sub
jo
testl
loop
pop
test
inc
xchg
and
sub
int
enter
mov
enter
adc
xor
sub
jl
pop
and
add
fistpll
mov
jo
jbe
imul
mov
xlat
aad
xor
idivl
inc
xor
cwtl
pop
int
popf
stc
in
push
cmc
mov
xchg
jns
or
fsts
sub
lret
mov
cmp
xchg
ret
xor
jle
cs
scas
xchg
pusha
adc
test
mov
int3
jg
pop
outsl
jge
jge
cld
lcall
inc
insl
cmovl
ficoml
push
pop
ss
smsw
jg
mov
or
incl
xorb
gs
pop
add
fwait
dec
aaa
mov
stos
call
in
xchg
js
add
push
jecxz
push
mul
hlt
lret
mov
mov
push
push
int3
rcll
push
jo
or
in
jnp
stos
sbb
fldt
push
dec
inc
lods
sbb
in
jmp
sub
call
dec
fdivs
mov
pushf
es
popf
fistl
negb
fcomp
hlt
cmp
loopne
mov
and
ror
mov
cs
outsl
cltd
or
cmp
adc
dec
sbb
jo
mov
jmp
mov
jmp
xor
dec
sbbl
ljmp
faddl
pop
cli
dec
xchg
sbb
add
and
stc
les
cmc
xchg
jns
push
out
cli
inc
cmpsl
adc
in
inc
add
rcr
push
inc
xlat
jmp
addr16
push
mov
dec
push
shrl
scas
test
je
mov
lods
lods
inc
fcomip
dec
out
add
inc
pop
cmpsl
scas
fucom
sub
sub
leave
pop
pop
mov
lods
inc
lret
mov
movsl
out
push
pushf
push
fsubr
ja
mov
je
ret
cld
dec
arpl
push
in
xlat
icebp
dec
scas
scas
inc
gs
or
xchg
mov
xchg
pop
jmp
push
inc
fdivs
and
pop
xchg
bound
jg
adc
cmp
fmuls
scas
sub
cmp
decb
pop
xor
push
pop
jecxz
lcall
push
adc
mov
fidivl
outsb
pop
cmp
mov
mov
in
out
cmp
mov
mov
mov
sbb
push
fs
jl
int
push
aad
outsl
inc
sbb
sahf
sbb
add
int
mov
cs
push
jne
sti
call
sbb
out
xchg
mov
ficomps
aaa
dec
push
lea
cmp
sarb
in
loop
fistpll
lret
mov
jns
add
fdivs
push
mov
repnz
pop
or
lret
jecxz
add
adc
sbbb
jnp
jecxz
mov
shlb
push
mov
dec
mov
push
out
cmpl
inc
in
adc
jo
inc
repnz
push
sti
jle
fsubl
fnstenv
xchg
gs
outsb
test
mov
sub
fldl
fidivs
pop
lcall
push
mov
xorl
or
cmp
jae
cmp
and
cmp
mov
std
call
or
jle
dec
stos
add
adc
aam
inc
and
mov
int
mov
pop
ss
lock
adc
ss
in
clc
dec
nop
push
cmp
lahf
mov
mov
fnstenv
inc
dec
imul
test
mov
push
loope
cmpb
fildl
or
adc
or
sbb
jp
fsubrl
rcrl
or
out
mov
shll
push
in
xchg
push
add
jno
pusha
lret
loope
into
adc
out
pop
pop
adc
xor
adc
xchg
subb
push
shl
insl
add
adc
jno
jle
sbb
lds
notl
movsl
xchg
sbb
xchg
pop
and
mov
jnp
insl
pop
push
insl
jge
sbb
rorl
pop
stc
add
nopl
mov
cmp
in
popf
jno
xchg
cmpsl
dec
or
mov
shl
dec
xor
mov
add
add
or
imul
xchg
sub
incl
xchg
pushf
xor
lock
mov
outsb
stc
pop
pop
cmp
pop
mov
or
fsave
pop
mov
xor
xchg
addr16
sub
add
cmp
not
jg
int
cmpsl
out
out
int
pusha
xchg
xor
popa
push
ljmp
call
fsub
sbb
sarl
mov
cmc
outsb
fwait
sub
sar
addl
mov
jae
mov
inc
inc
xor
mov
test
push
js
in
repnz
dec
nop
daa
jge,pt
movsl
insl
sbb
jg
shrb
pop
scas
lret
call
cmpsb
jmp
dec
sub
sahf
mov
mov
test
andl
jge
inc
pop
lret
mov
sarb
dec
cld
scas
jecxz
andb
andb
mov
sub
cmp
stos
add
icebp
in
mov
jg
roll
push
push
sahf
mov
jl
enter
in
ret
ds
sbb
dec
sbb
pop
dec
and
and
cmpsb
cld
xchg
fmuls
xchg
mov
dec
dec
fistpll
add
mov
add
cmpsb
push
aaa
lods
dec
in
mov
insb
add
orl
or
andb
aaa
cmpsb
sbb
pusha
mov
add
add
inc
and
sbb
jno
movsb
rorb
or
push
cmpsb
loope
xlat
je
jle
cmp
cmp
push
xchg
insb
mov
lret
repnz
xor
aad
pop
mov
mov
push
cmc
movsl
fsubrs
pusha
jge
shr
testb
cmp
pusha
ss
add
inc
dec
mov
inc
pop
loopne
fisttpl
add
xchg
scas
mov
cld
in
or
jg
icebp
xchg
xor
repnz
and
inc
in
rcr
xchg
test
pop
fcomi
imul
in
add
jnp
stos
push
sbb
add
outsl
mov
popa
loop
jle
ret
sub
outsb
add
les
or
xor
fs
push
lock
idivl
pop
cmp
add
dec
insb
outsb
int3
bound
inc
shll
fucomp
xor
pusha
or
mov
push
sti
aam
mov
call
std
imul
add
mov
jecxz
xlat
sub
inc
mov
mov
std
notl
push
enter
stos
lods
adc
out
or
or
adc
inc
push
mov
jmp
test
xchg
mov
gs
jl
aas
jnp
sub
int3
xor
popa
or
dec
or
je
xor
dec
add
cmc
mov
nop
pop
and
xchg
cmp
in
cld
and
adc
push
es
mov
add
add
mov
shr
lcall
add
push
jge
inc
pop
jne
aad
cli
xor
mov
xor
scas
imul
push
lods
sub
xor
push
mov
or
cmpsb
hlt
jmp
rclb
out
popf
inc
jo
test
jp
or
sahf
stos
jecxz
push
jne
cmp
and
sbb
enter
add
xchg
arpl
jbe
fdivrl
stos
out
add
stos
notb
leave
dec
fistl
fdivrs
mov
or
stos
mov
pop
imul
and
popa
out
xor
pusha
xor
sbb
insb
lds
bound
xchg
and
es
fs
sub
adc
push
loopne
inc
cltd
add
enter
std
and
je
imul
int
adc
out
adcb
cli
daa
pushf
popa
call
inc
fsubp
jg
aas
dec
fadds
in
fiaddl
scas
cmp
ret
adc
scas
gs
ficomps
push
mov
lock
sbb
mov
mov
adc
mov
int
xchg
in
aas
or
mov
mov
mov
jo
inc
mov
inc
push
mov
inc
cmpsl
xchg
sti
adcb
pop
out
sbb
popf
xor
imul
mov
rclb
jl
subl
pop
int
fisttps
push
ss
push
jle
adc
daa
push
nop
or
xchg
jl
lret
fsubrp
test
enter
xor
jno
je
gs
dec
mov
lret
push
mov
push
cmpsb
int
sbbb
push
fisttpl
scas
and
push
push
mov
test
outsl
push
insb
das
ss
aas
mov
jl
iret
mov
dec
popa
sbb
sbb
push
insl
sbb
mov
mov
movsl
jg
xchg
add
ja
lods
out
pop
stos
adcl
rol
xchg
inc
test
inc
xchg
imul
mov
sub
inc
pop
dec
xchg
jp
movsl
ret
lods
or
pop
pop
mov
fcomps
push
xor
mov
iret
xchg
xchg
ds
les
push
in
fiadds
fstl
pop
movsl
jecxz
or
mov
es
dec
xor
sbb
sbb
cltd
mov
call
add
arpl
xchg
xchg
push
dec
or
andb
adc
or
aaa
sbbb
sbb
inc
pop
mov
test
and
push
add
rcr
stos
cmpsl
ds
sub
or
mov
add
sbb
repz
xchg
mov
ljmp
pusha
clc
jo
mov
xchg
sub
outsl
jns
xor
cmp
sub
jno
cld
mov
sub
je
fldenv
mov
sahf
fdivr
imul
lahf
sbbb
xor
out
xchg
bound
push
aam
cmp
ret
dec
xor
and
mov
mov
sbbb
in
xchg
call
mov
in
and
aaa
lock
fcompl
mov
xchg
xor
pop
notb
loop
xor
aas
jne
in
aaa
adc
imul
add
insb
dec
stc
mov
or
fs
int3
jmp
ds
jmp
push
and
jp
sub
ss
sarl
mov
fnstcw
outsb
sbb
jmp
jp
mov
xor
fs
adc
aas
je
movsl
add
inc
dec
jae
jno
cmc
popa
aaa
jae
repnz
icebp
or
or
outsl
cli
nop
mov
clc
mov
jb
cmp
pop
dec
mov
shl
mov
mov
jmp
insl
mov
add
mov
lcall
mov
adc
mov
sbb
xchg
mov
dec
mov
sbb
mov
mull
adc
in
inc
sti
shl
xor
fs
das
xchg
and
bnd
pop
loope
and
lods
cmpsl
add
ds
sbb
or
repz
in
aam
xor
inc
notl
and
sub
lods
mov
push
in
fwait
cmp
in
or
mov
adc
push
add
loopne
lahf
xor
fldcw
xchg
mov
pop
add
mov
or
add
fnstenv
out
xor
fwait
pop
sahf
imul
cmp
div
lcall
adc
add
lcall
and
enter
and
dec
arpl
jg
and
cwtl
dec
fildll
ja
add
negb
and
in
pop
ds
cmp
shlb
lahf
add
dec
mov
ljmp
pop
out
inc
ja
sbb
call
lds
pop
mov
adc
xor
movsb
dec
loope
mov
je
leave
out
sti
sti
or
dec
fsubrl
ret
cmc
or
js
into
popf
out
pop
repz
cld
adc
movsb
jp
push
adc
inc
jb
dec
mov
mov
sarb
lds
or
in
int
scas
mov
jg
pop
shlb
cmp
jmp
ret
fisttps
or
imul
loope
or
imul
dec
fnstcw
pop
lea
xchg
xchg
or
rclb
cmp
imul
lods
jmp
insb
add
int
or
and
andb
test
loopne
test
addr16
sbb
movsb
iret
hlt
cmp
subb
mov
jge
test
lret
aaa
fmul
jno
out
clc
sub
mov
mov
dec
xor
pop
dec
sbbl
mov
jne
sub
sarb
mov
popa
mov
cmp
into
dec
shl
cmpsb
std
mov
ljmp
jg
adc
scas
adc
and
daa
stos
fildll
frstor
xor
jo
mov
loop,pn
stc
je
mov
sub
int
sti
ret
out
scas
ljmp
cmp
mov
sub
test
data16
jge
push
test
jbe
lret
push
cmp
aaa
es
outsb
in
std
pop
aaa
rcrl
in
or
orl
jb
data16
hlt
jmp
sbb
mov
test
dec
jp
fbld
or
sbb
inc
cld
dec
pop
hlt
push
loop
add
lahf
push
and
cmp
int
addb
push
jp
incb
or
scas
shlb
and
jg
dec
push
popa
inc
nop
xor
ret
xor
popf
out
and
test
dec
dec
loopne
imul
les
xchg
cmpsl
mov
sub
jns
repnz
adc
mov
dec
and
negl
insl
sahf
and
cmp
add
push
es
mov
xchg
xlat
push
mov
jbe
xor
movsb
out
fwait
and
and
arpl
aam
jno
movsl
and
repz
loopne
mov
stos
rcrb
jns
cmp
jmp
jnp
jo
or
in
movsb
xchg
test
lret
lock
in
xchg
aad
push
nop
mov
rcl
add
in
mov
lret
xchg
loop
std
inc
sub
sbb
mov
inc
int3
lds
out
aam
enter
mov
push
mov
ja
mov
jbe
lret
add
mov
movsb
sti
aam
inc
pusha
push
add
sub
fmull
cmp
mov
fucom
stos
aaa
popa
mov
and
sub
pop
pop
cmp
add
cld
pop
sahf
aam
jg
ds
aaa
icebp
pop
shrl
adc
cmpsl
je
ret
mov
sarl
imul
mov
rol
push
mov
and
mov
add
int3
cmp
inc
mov
das
imul
sbb
adc
pop
cs
dec
outsl
leave
mov
xchg
filds
nop
mov
insb
pop
pop
cli
pop
xchg
loope
mov
adc
add
adc
stc
mov
xor
and
notb
xchg
pop
sub
sbb
andl
ljmp
shlb
out
mov
or
jo
outsb
shr
xlat
or
xor
mov
loop
xor
jnp
add
cmpsb
sub
out
hlt
pop
test
lods
sarl
adc
aaa
gs
add
sub
dec
dec
lock
adc
nop
dec
and
mov
xchg
out
roll
sbb
mov
mov
clc
das
mov
mov
or
mov
and
xchg
push
jb
pop
dec
push
sub
test
push
ret
loop
fldl
mov
es
loope
add
mov
in
or
sarb
sti
int3
mov
test
xchg
add
lock
ss
ja
in
cmp
jle
popf
in
dec
xchg
push
jmp
rdmsr
mov
into
fwait
pop
ret
movsl
jle
xchg
push
loope
je
daa
pop
int3
je
outsb
repz
int
loopne
ret
xor
cmp
cmp
xchg
das
mov
adc
insl
repz
repnz
insb
mov
push
sbb
out
jno
pop
xor
enter
mov
icebp
mov
aam
pop
add
clc
pop
dec
jbe
pop
iret
mov
jbe
stos
and
xchg
fbstp
lahf
lock
sti
xchg
loope
mov
push
fdivrl
movzbl
shll
jmp
sub
in
lds
sbb
cmpb
dec
cmp
adcb
xor
enter
mov
pop
inc
out
pop
mov
cli
jmp
push
ret
cmp
cs
inc
daa
leave
xchg
imul
and
test
std
xor
shll
std
push
lahf
repz
sub
adc
into
fs
push
dec
or
adc
pop
sti
lret
sub
cmp
mov
pextrw
scas
xchg
pop
push
push
les
sub
inc
cld
mov
mov
mov
adc
fdivs
xchg
loop
pushf
ds
outsl
mov
inc
push
mov
je
inc
popaw
mov
mov
fnstcw
jg
fidivrs
shl
inc
adc
repnz
mov
fcompl
add
in
test
pop
scas
xchg
aas
in
and
dec
gs
je
ret
subb
pop
pop
repnz
mov
push
pop
jns
add
out
add
cmp
inc
pop
xchg
cmp
mov
aaa
xor
cmp
inc
jbe
arpl
cmp
repz
out
jbe
and
iret
movsb
jp
or
aas
xchg
inc
insl
stc
clflush
mov
push
lock
adc
scas
xchg
jp
out
aas
rcrb
mov
xor
or
mov
in
inc
pop
push
xor
fisubrs
ds
js
cmp
dec
sub
mov
ljmp
jnp
and
adc
push
nop
stc
insl
sub
outsl
call
fcoml
mov
adc
and
je
xor
leave
mov
rcll
and
sahf
push
jbe
rcr
and
jecxz
xchg
cmpsl
les
outsb
sbbl
fstl
jb
cmp
fs
jae
cmp
repz
je
jecxz
inc
xorl
fcoms
xchg
sub
inc
mov
inc
jnp
gs
ds
outsl
aad
negl
sub
data16
xchg
mov
mov
mov
or
mov
cmp
inc
pop
out
inc
jns
aaa
mov
sti
movsl
mov
mov
pop
scas
aaa
jnp
imul
pop
aam
inc
lcall
inc
in
xor
cwtl
and
xchg
cmc
das
mov
lcall
pop
xchg
arpl
dec
jle
sahf
and
pop
inc
adc
insl
daa
xchg
jg
aam
or
xchg
push
insb
in
fpatan
pop
adc
dec
and
jno
mov
rol
aaa
rolb
xor
popa
mov
jl
inc
jo
popa
jno
nop
mov
add
cmp
xchg
stc
fiadds
mov
mov
xor
xor
fucomp
xchg
loopne
inc
repnz
pop
cmp
cmp
test
ljmp
mov
dec
shr
jnp
fidivrs
outsb
cli
push
ljmp
jb
xor
fistpll
or
sub
xchg
adc
hlt
jge
rcrb
cmpsl
lcall
jle
push
ljmp
out
fldenv
xchg
cli
xor
adc
mov
rcl
idivl
aas
mov
sub
xor
jo
jns
sub
clc
xchg
or
sbb
mov
rcl
test
ficomps
fstpt
xchg
fwait
popa
imul
adc
rolb
xchg
xor
leave
cmp
push
ljmp
mov
nop
xchg
mov
or
clc
and
mov
pop
insb
insl
sarb
xor
xchg
sub
xchg
jl
in
mov
fdivrs
sbb
mov
fisubrl
sbb
gs
mov
dec
adc
adc
xchg
cwtl
sti
ds
mov
mov
mov
cs
fcompl
movsb
insl
shll
cmpsb
sub
pop
data16
push
addr16
lea
in
pop
lcall
fistpll
jnp
fdivl
rclb
mov
icebp
jmp
mov
rol
sub
push
enter
or
fdivs
pop
shll
jmp
add
aam
stc
xor
mov
int3
lods
add
cmc
mov
jecxz
stc
push
psrlw
jl
dec
and
cmp
int
push
mov
test
jbe
outsl
ds
xor
fsubrl
cs
mov
sub
in
andb
cmpsl
out
stos
xor
mov
in
adcl
cwtl
fcmove
or
and
or
push
pop
jbe
xchg
data16
jne
bound
sahf
or
imul
out
pop
pop
fwait
repnz
outsl
rolb
lea
xor
test
mov
or
or
je
insl
dec
sti
and
xor
mov
sbb
pop
mov
push
out
sub
jmp
dec
stos
icebp
repnz
xchg
sub
sbb
mov
subb
mov
inc
jo
lds
out
in
sbb
test
aaa
daa
jle
or
push
jmp
sub
pop
inc
insb
movsb
pushf
push
in
mov
loopne
insl
ljmp
xor
fs
jb
add
jl
mull
daa
into
cmp
inc
xchg
scas
ljmp
mov
and
xor
push
insb
add
jb
xor
pop
xchg
ja
popf
sub
cmp
insb
clc
mov
push
cld
or
xchg
jbe
aad
into
mov
push
cltd
stos
cmp
ret
gs
dec
insb
jl
daa
cld
xchg
push
in
imul
or
pop
pop
cli
mov
push
popa
dec
shl
jns
pop
mov
int3
je
enter
sub
int3
inc
out
sbb
lods
mov
push
jp
test
xor
in
aam
adc
sti
sbb
dec
adc
dec
loopne
aaa
jno
push
imul
mov
or
ficompl
mov
pusha
xor
xlat
aaa
popa
lret
add
jg
jne
push
cmp
adc
and
ret
std
fucomi
stos
cmpsb
hlt
or
lret
jb
ja
jle
sub
shll
jns
mov
js
int
add
jp
cmpsb
mov
mov
fldt
mov
sbb
push
and
mov
int
jo
ljmp
push
xchg
test
inc
mov
icebp
hlt
cmp
jmp
mov
mov
mov
faddp
mov
insb
aad
jmp
mov
ficoml
mov
mov
stos
xchg
and
jne
or
mov
scas
mov
loopne
mov
lds
xchg
sbb
push
rol
int
sub
hlt
repz
sub
or
cmp
sarb
dec
inc
dec
nop
daa
orb
pusha
cmpl
popa
xor
fprem1
pop
outsl
mov
cmpps
insl
jge
cmp
ret
xor
ret
pop
and
outsl
daa
sbb
loope
pop
fidivl
sahf
std
mov
jns
fidivrs
push
ret
xlat
ret
notl
pop
cmpsb
adc
addr16
movsb
sbb
test
push
outsl
push
cmpl
mov
cmp
lds
lahf
into
mov
pop
or
add
mov
outsl
mov
movsl
mov
sbb
xor
xorb
xchg
int
scas
cmp
cmpsl
fisttpl
popf
sti
mov
push
fbstp
xor
dec
push
xchg
inc
dec
repz
mov
je
mov
call
movsb
xchg
or
repz
imul
pop
les
mov
test
cmp
std
xchg
rol
pop
cmc
insb
push
fstp
fisttps
stos
data16
stos
std
mov
int3
jg
fadds
mov
cmp
cmp
jnp
fcomps
mov
add
inc
cld
mov
push
stos
dec
cmp
sbb
fisttpl
test
sbb
jb
pop
ret
adc
jl
decl
inc
inc
xchg
dec
dec
dec
shl
bnd
mov
xor
xor
sub
push
cmp
mov
pop
outsb
into
popa
pop
imulb
shl
mov
sub
lods
mov
mov
es
cwtl
stos
push
out
in
adcb
stos
jbe
bound
orl
outsl
imul
rclb
test
mov
sub
inc
and
sub
inc
mov
dec
jae
mov
in
shr
xor
filds
lods
out
out
std
or
jmp
dec
inc
dec
dec
lods
inc
and
js
and
scas
inc
hlt
aad
call
push
punpckhdq
jns
imul
cld
int3
call
or
mov
dec
call
xor
in
aas
lock
ja
sub
hlt
xchg
mov
push
push
cmp
xchg
nop
das
in
aas
jmp
ret
sub
xor
icebp
sbb
lcall
fwait
adc
mov
loope
cmp
push
outsb
dec
in
psubsb
cmp
mov
inc
inc
aad
xor
xor
sub
xor
dec
sbb
scas
inc
adc
cmp
pusha
or
imul
mov
sbb
add
xchg
add
xor
movsl
mov
jg
mov
or
mov
or
dec
arpl
or
add
ljmp
lock
insb
jae
mov
lcall
hlt
sbb
xchg
add
fdivr
or
fs
fwait
push
xchg
mov
cld
inc
test
push
out
dec
dec
stos
in
loope
hlt
mov
and
or
inc
mov
sbb
aas
pop
imul
stos
xor
das
lds
mov
inc
mov
stc
mov
push
jno
testb
hlt
in
ja
daa
mov
mov
out
inc
or
pop
mov
fs
repnz
mov
ret
movsb
cmp
pusha
pop
sub
or
push
jmp
dec
dec
mov
sub
dec
mov
and
scas
aad
subl
cmc
dec
fstpl
rorb
jl
xor
mov
sti
jb
lock
push
fidivs
rol
insl
push
test
aas
inc
pop
scas
jp
jo
rcr
and
subb
std
adc
add
mov
sub
test
pop
dec
and
andb
dec
mov
sub
jmp
aaa
mov
mov
fidivl
lods
pop
push
jno
popa
pop
jns
inc
sahf
xchg
sti
mov
sub
or
add
imul
push
push
addr16
mov
call
out
lcall
movsb
je
adc
loopne
jne
shrl
dec
pop
adc
pandn
dec
mov
mov
stc
lea
testl
cltd
ljmp
fstl
dec
mov
lret
popa
adc
jg
dec
sbb
or
fidivl
add
test
mov
adc
inc
pslld
rcrl
jge
dec
repz
fnstenv
sbb
add
jnp
stc
xor
fiaddl
jae
bound
push
mov
jle
push
mov
xor
clc
sbb
rcll
stos
iret
fdivl
nop
inc
je
jge
lock
fwait
push
push
les
test
das
lret
add
inc
push
aam
xor
inc
dec
std
inc
push
das
insb
rorl
jg
std
pusha
mov
rcll
ljmp
testl
ret
shll
shrb
dec
adc
cmp
inc
dec
loop
mov
out
call
cmp
stos
bound
jnp
and
lock
or
adc
movl
dec
cmp
jl
mov
cmp
jo
adc
aam
adc
adc
js
mov
add
mov
pop
xor
mov
in
xchg
dec
aaa
xor
push
pop
and
mov
icebp
enter
add
dec
jmp
imul
mov
js
hlt
rclb
sarl
fadd
jnp
and
mov
and
shrb
inc
push
jmp
xchg
jno
xorb
sub
ja
andb
fs
loope
imulb
cltd
cmpsl
roll
outsb
mov
jmp
out
push
sbb
inc
push
jp
cwtl
imul
cmpsb
cmp
sub
aaa
aaa
cmp
xor
inc
loopne
shr
popl
es
jmp
jl
movsb
mov
jb
pop
cmpsb
pop
mov
xor
loopne
add
push
lods
shrb
and
iret
mov
dec
pop
lret
outsl
rcrb
push
xor
loopne
incl
pop
and
adc
mov
test
xchg
inc
jp
pop
aam
fidivrl
jge
mov
repz
dec
mov
lahf
int3
sbb
jge
sbbl
out
nop
lea
mov
xor
inc
ficoml
sbb
xor
rorl
or
lods
xor
jns
sbb
outsl
pop
cmp
scas
and
das
fld
adc
repz
mov
repz
std
or
push
sbb
sbb
pushf
aaa
dec
ficoms
andb
shlb
and
fs
in
dec
sub
js
sbb
jmp
mov
movsl
jle
out
bswap
sbb
js
inc
mov
xor
cmpsl
into
ss
lds
push
dec
inc
push
xorl
shrb
add
or
push
loop
sub
sbb
aas
push
rcrb
iret
and
movsl
inc
aas
xchg
repnz
test
cmp
push
push
das
inc
pop
aas
movsl
inc
jl
xor
pop
xor
mov
mov
mov
gs
sbb
or
cmpsl
sbb
jecxz
cmp
sarl
inc
sub
movsl
and
inc
data16
hlt
loope
stos
push
stos
xchg
add
icebp
or
rclb
pop
arpl
xchg
ret
shrl
jp
adc
cmpsl
push
xor
mov
movsb
jp
xor
inc
xchg
push
movsl
pop
dec
sbb
scas
lds
jns
pop
push
sub
jbe
jne
mov
mov
aam
test
test
mov
fmuls
mov
fwait
popf
test
sbb
ret
push
sarl
cmp
scas
add
addr16
push
adcl
jnp
cmp
mov
mov
and
movl
push
jecxz
mov
test
mov
mov
adc
jmp
or
pop
scas
xor
sbb
ret
jb
outsl
mov
lods
out
cld
cs
pushf
xor
roll
and
mov
stos
cmp
xor
mov
add
xor
mov
fcomi
mov
ficoml
sub
cmc
inc
dec
xchg
testl
pop
les
repnz
push
arpl
mov
adc
jae
adc
mov
sub
hlt
outsb
xchg
or
mov
movsl
pusha
pusha
or
rcrl
jb
xchg
rorl
pop
rcrb
and
decb
enter
dec
cmp
nop
sar
fimull
and
jecxz
xor
in
and
push
cltd
xor
inc
jmp
inc
in
add
mov
leave
call
dec
shll
push
push
mov
xchg
and
mov
cmp
icebp
fucomip
stos
push
rcrl
outsb
in
loop
lock
leave
cmc
dec
jb
ja
jnp
mov
jae
jmp
gs
sahf
xor
inc
push
mov
and
ret
fwait
shll
incl
cmpsl
test
das
mov
je
jp
inc
jp
sti
jg
dec
push
fistpl
pop
test
pusha
push
cld
pop
xchg
pop
scas
ret
push
movsl
mov
test
mov
lret
pop
pop
jbe
lea
dec
sbb
adc
and
pusha
stos
adcb
or
sarb
orb
cmp
push
rcl
add
cwtl
push
push
out
mov
ret
hlt
pop
sub
divps
movsl
repnz
outsl
loope
out
enter
inc
jmp
ja
jl
sar
aad
adc
stc
xor
cli
ds
pusha
sahf
cli
outsb
push
fmuls
lret
lea
adc
xor
cmovg
aas
subb
aad
dec
loope
in
adc
jne,pn
loopne
jae
mov
andl
cmp
sub
xchg
xchg
dec
iret
data16
pop
mov
add
shrl
int3
pop
icebp
sbb
das
cmp
mov
lret
adc
loope
push
int3
push
ja
shlb
cmp
dec
push
movsb
lahf
xor
inc
fistpl
mov
inc
sub
push
fwait
sahf
dec
jge
cmp
fwait
inc
and
pop
scas
add
add
cmp
lea
jmp
fldt
hlt
jge
pop
stos
mov
pop
mov
imul
xor
cmp
je
cmpsl
ds
insb
lds
pop
cmp
nop
imulb
pop
xchg
ret
pop
cmpsl
sahf
inc
mov
addr16
mov
mov
xchg
movsb
das
mov
in
mul
dec
fwait
sub
cli
enter
mov
sbb
pop
push
push
sub
and
in
je
js
push
addl
std
cltd
xor
pushf
outsl
jns
pushf
in
std
add
sub
leave
enter
cmpsl
push
in
jnp
mov
push
gs
pop
or
cmp
push
stc
lds
imul
fsts
testl
cmc
inc
in
scas
icebp
outsb
cmp
pop
movsb
xchg
adc
inc
mov
scas
out
shrl
loopne
and
mov
mov
fstp
dec
repz
jp
push
mov
cwtl
inc
sub
push
pushf
cs
cmp
mov
cmp
xlat
lret
push
stc
jmp
cmp
cmp
sub
dec
sbb
popf
aas
lret
mov
and
ds
inc
mov
rcll
sub
ret
jae
jmp
or
std
movsl
push
imul
insl
stos
or
fisttpll
jg
out
fnstenv
loopne
outsb
fs
divl
popa
and
mov
mov
dec
mov
sti
mov
sbb
xor
movsb
cmp
je
adc
mov
pushf
test
movsl
mov
mov
cmpsl
shl
mov
leave
shr
fistl
test
mov
call
fnstcw
mov
mov
jns
int
mov
scas
inc
lea
int
enter
cmpsb
jmp
mov
sbb
fiadds
cltd
adc
push
sbb
adc
aas
xor
fbstp
iret
aas
ss
incb
fwait
mov
arpl
mov
test
scas
cmp
pop
ficoms
inc
or
jecxz
xor
inc
arpl
jnp
mov
dec
out
imul
lret
jmp
das
add
mov
shlb
mov
in
dec
mov
jl
inc
fs
dec
clc
addb
insl
gs
testb
mov
sub
ret
pop
or
shrl
mov
and
test
or
cmp
bound
in
lods
inc
pop
push
es
xchg
jbe
jbe
in
ret
cld
std
push
and
and
jne
xchg
xor
fs
sub
dec
mov
fwait
pop
mov
cmp
dec
add
xor
push
out
lds
notb
loop
sub
enter
shll
pop
jecxz
insb
lret
pop
adc
lahf
stos
xchg
jo
ds
fcomps
or
push
pop
call
or
add
hlt
and
mov
insl
out
dec
cld
fwait
jmp
imul
mov
jns
das
bound
mov
lods
pop
mov
gs
add
mov
or
inc
xchg
push
mov
and
push
js
mov
jge
pop
stos
in
fsubs
pop
inc
cmp
test
mov
sbb
mov
ss
test
in
in
mov
iret
cmp
rclb
fwait
test
mov
mov
mov
dec
sbb
rcrl
cmp
imul
xor
mov
out
push
inc
mov
in
std
pop
test
inc
fiadds
add
add
sub
aad
nop
cmp
mov
push
insb
cmp
pop
mov
cmp
in
pop
shrb
add
xchg
mov
pop
mov
inc
add
insl
xor
xchg
or
and
and
adc
cmp
adc
lcall
fsubrs
sahf
cli
stos
fidivl
and
sbb
push
insl
lret
sub
es
das
push
dec
cmp
imul
lahf
push
rcl
rclb
fdivrl
pop
inc
stos
fdivp
jns
pushf
pop
enter
aad
or
sbb
push
xchg
outsb
and
pop
push
and
mov
nop
daa
or
xor
inc
lret
ss
test
cmp
test
stos
jae
jnp
cmp
test
movsb
mov
mov
fwait
sbb
fidivs
jmp
and
cmpsl
push
mov
mov
lret
dec
scas
and
pop
fidivrs
inc
xor
repnz
mov
fistps
inc
mov
loop
test
ss
pusha
scas
and
test
sti
test
dec
int3
out
dec
sarl
jecxz
xchg
dec
call
loopne
jle
test
mov
dec
js
popa
and
sbb
cmp
xor
sub
adc
out
scas
movsb
jecxz
int3
ja
and
mov
push
and
inc
fisubl
in
mov
jo
adc
cmp
bound
sti
or
data16
cmp
xchg
in
xchg
mov
or
push
divl
pop
fisubrl
les
aad
aad
clc
stos
mov
jns,pn
xchg
dec
cmc
cmp
mov
in
fs
cmpsb
int3
cli
push
cmc
rorl
xchg
shrb
sub
pop
or
mov
out
mov
pushf
xor
lea
stc
mov
mov
loopne
out
aad
pop
icebp
pop
xchg
pop
add
jno
notl
fwait
jns
rolb
xor
mov
mov
cmpl
outsl
inc
mov
jmp
jmp
or
cmpb
popa
xor
int3
and
and
mov
jp
add
add
jl
jns
jne
jmp
dec
mov
xchg
mov
cmpsb
jne
mov
inc
fildl
not
jae
adc
xchg
add
adc
cmp
mov
cmpsb
lea
xor
loopne
pop
add
in
sub
jmp
push
cs
add
test
lcall
data16
test
ret
js
je
andl
push
inc
ss
ja
pop
out
orl
jle
pop
mov
aam
mov
xchg
and
xchg
orl
sub
mov
mov
mov
xorb
add
push
cmc
outsb
jle
cmc
mov
mov
std
movsb
inc
fst
mov
insb
jnp
shrl
fisubrl
mov
xchg
jmp
arpl
es
sbb
sbb
lea
xor
pop
icebp
aad
cmp
add
js
sub
or
bound
movsl
das
bound
jp
daa
cli
cmpsb
ret
outsb
fbld
rcrb
decb
jg
mov
adc
and
test
pop
mov
mov
inc
push
add
push
jg
push
mov
ret
xchg
in
and
mov
fnsave
call
or
jg
ret
ror
dec
sbbl
dec
frndint
xor
ja
push
mov
out
push
xor
movsl
inc
jmp
xchg
sbb
or
mov
sbb
dec
inc
xor
xor
sahf
jnp
std
mov
fdivl
or
cmp
and
lods
cwtl
cmp
push
outsb
mov
adc
jo
mov
fdivrl
or
cmpsb
outsb
jns
cmp
lods
int3
rcrb
sbb
add
push
testb
repz
jg
popf
repnz
fcmovnu
dec
lahf
test
and
xchg
jns
lret
aam
fsubrl
jp
outsb
push
pop
arpl
mov
insb
sbb
test
push
into
lea
mov
subb
dec
sahf
inc
mov
aam
mov
push
sub
jl
mov
stos
pop
cwtl
add
mul
mov
mov
add
sub
inc
rcrl
rcll
xor
push
cmc
pusha
add
adc
std
js
mov
orb
sub
mov
and
lea
mov
adc
jnp
out
out
cld
inc
fcmovb
mov
fisubrl
loop
movsb
popa
fs
push
dec
inc
fnstcw
inc
std
add
popa
clc
dec
es
pop
aam
jg
adc
jle
xchg
mov
cmp
popf
xor
aaa
movsb
mov
fdivrs
icebp
fistl
jmp
add
push
push
jl
or
insb
out
cmpsl
pushf
fsubrl
popf
das
scas
mov
push
int
mov
jne
cmpsl
add
arpl
sbb
sub
iret
fwait
adc
imul
adc
nop
push
ret
pop
and
mov
mov
fs
test
cmp
inc
daa
dec
fists
popa
sti
test
lret
or
sub
push
xchg
add
out
push
aad
fcmovne
pop
jecxz
mov
mov
fiaddl
mov
nop
nop
pop
add
and
test
dec
sti
jo
iret
and
xor
orl
or
mov
mov
imul
sbb
push
or
rcll
lret
ljmp
mov
add
sub
mov
xor
mov
and
je
cmp
sbb
mov
adcl
xchg
mov
fmuls
out
clc
lea
adc
xchg
or
mov
jp
sbb
or
jnp
mov
jno
testb
cmp
lds
leave
pop
stc
mov
add
sbb
jle
adc
mov
lock
std
mov
mov
cs
jbe
adc
cwtl
lds
mov
pop
mov
test
nop
add
movsb
push
sbb
push
cmp
fimull
scas
popa
test
out
dec
cmc
popf
pop
cmpsb
into
push
rcrl
sbb
mov
adc
mov
adc
and
arpl
inc
xlat
outsb
lret
repz
jmp
int3
mov
inc
dec
add
test
shld
sub
cmc
scas
xchg
daa
sti
repnz
inc
out
add
add
rolb
ret
sbb
pop
jle
nop
jmp
mov
mov
pop
mov
xor
or
ja
inc
mov
cmc
sahf
sbb
outsb
dec
mov
cmc
pop
sahf
mov
and
or
push
inc
stc
out
test
mov
or
dec
or
dec
adc
cltd
push
insl
xor
cmp
or
popa
cmp
ret
cmp
xchg
out
add
cmp
pop
scas
dec
push
jmp
shl
adcb
mov
xchg
xchg
mov
das
mov
ss
int3
dec
mov
in
fnstcw
call
lods
std
mov
pushf
or
adc
mov
mov
inc
jbe
divb
sbb
jge
aaa
iret
jbe
mov
mov
xor
jne
mov
or
test
inc
sbb
fcoml
xor
mov
pusha
aam
ffree
mov
std
and
jge
add
test
xchg
ja
ret
in
pop
shl
subb
popf
add
push
inc
xchg
mov
leave
sub
jmp
test
ficompl
xchg
ds
fdivrs
aas
jg,pn
es
push
incb
cld
outsl
stc
push
mov
xchg
cmc
pop
cmp
mov
and
jge
or
dec
push
jecxz
or
cmp
jno
sbb
addl
mov
cmpsb
cmp
ds
mov
xor
sbb
xor
add
hlt
xchg
xlat
mov
imul
pop
xchg
mov
mov
jo
sbb
or
inc
jge
mov
int3
mov
adc
test
test
and
test
inc
test
stos
push
daa
enter
or
cmp
cmpsb
out
hlt
jno
jbe
loopne
xchg
loopne
mov
dec
enter
dec
jle
jae
jns
icebp
jae
fistpl
out
and
test
xchg
push
popf
dec
sub
dec
push
lock
bound
sbb
leave
dec
mov
ja
pop
xchg
mov
ret
jg
push
jns,pn
lcall
adc
jg
mov
jmp
lock
sub
inc
adc
mov
push
push
lret
mov
imul
cltd
sbb
and
icebp
sub
insl
pop
mov
les
xor
movsl
sbb
add
mov
js
adc
xchg
sub
out
fnstenv
add
xor
mov
mov
mov
lock
sub
cmc
adc
or
dec
cs
sbb
xor
push
inc
sbb
cmp
sub
and
insl
cmp
inc
aaa
pop
mov
pop
sahf
dec
pop
daa
or
or
notb
sti
orl
aaa
lods
cmpsb
ret
xchg
sub
adc
ret
dec
mov
popa
jg
fadd
fs
add
movsb
shr
repz
push
int3
lahf
cmpsb
movsl
stos
sbb
int3
mov
mov
mov
js
jnp
fsubrl
sbb
mov
cmp
dec
leave
mull
mov
out
and
jnp
dec
xchg
aam
push
les
mov
jno
jae
sbbb
xchg
sub
and
add
cmp
dec
pop
orl
aaa
into
add
adc
xor
xchg
aam
pop
xchg
mov
mov
mov
ds
shlb
movsl
data16
in
pop
push
xor
shrb
jae
dec
jg
jne
xchg
test
mov
mov
mov
push
xchg
fldt
sub
add
jle
ss
push
dec
in
jl
lds
push
or
dec
mov
arpl
pop
lods
jmp
scas
loop
dec
jmp
aad
popa
testl
xor
shll
and
inc
or
xchg
push
sbb
pop
shlb
outsl
push
addr16
inc
mov
xchg
jmp
mov
shrl
cli
mov
sub
mov
xchg
mov
mov
mov
adc
cmpsl
pop
mov
clc
mov
inc
push
cmpb
outsb
xchg
jle
scas
lahf
add
iret
inc
arpl
arpl
lock
lods
cmp
pop
cmp
xchg
cs
lahf
pop
add
aaa
mov
pop
stos
inc
js
aaa
push
out
enter
mov
out
movsl
cmp
mov
fs
fnstcw
mov
adc
rcl
xchg
inc
fldcw
add
scas
pop
in
mov
hlt
jne
pop
sbb
push
push
dec
mov
inc
jno
mov
test
dec
jecxz
add
cmp
imul
aaa
loope
fstps
lds
ret
leave
fisubrl
and
inc
fldenv
dec
inc
pusha
stos
jne
cltd
or
pop
xor
adc
mov
xchg
aad
test
sub
addr16
iret
cmc
punpckldq
adc
adc
mov
sti
popf
movsl
shrl
jmp
cmp
divb
push
push
inc
rcll
dec
imul
call
notb
mov
ret
outsb
out
xchg
jl
push
adc
sbb
pusha
mov
xchg
iret
xor
mov
add
rcrb
in
push
sub
test
pop
jno
dec
mov
push
and
ss
inc
sbb
je
js
into
cmpl
js
icebp
aam
aas
cmp
pop
xchg
and
insl
fdivrs
inc
ljmp
mov
addr16
cmp
test
je
xchg
hlt
scas
cltd
mov
or
or
dec
out
inc
mov
std
into
jne
cli
xchg
add
ds
das
mov
push
leave
push
xlat
cmp
pop
or
loopne
mov
pop
movsb
xchg
mov
lcall
dec
mov
adc
movsb
jl
cwtl
jg
pop
je
fisttpll
cld
mov
inc
fdivrl
fistpll
mov
es
pop
mov
enter
sarl
pop
test
mov
add
lahf
dec
adc
inc
pop
lahf
inc
fidivrs
jnp
push
xchg
xor
scas
cli
and
shlb
dec
jge
iret
je
aam
lods
mov
imul
popf
sub
int3
test
mov
rorl
cwtl
rcrl
rcl
push
test
sbb
orb
fisubrl
pushf
aad
sarl
sbb
push
jl
addr16
jo
mov
lret
sahf
inc
fmul
fbld
pop
xchg
pop
out
pusha
jp
shrb
pop
in
or
and
inc
lods
mov
lret
sahf
in
or
inc
xor
mov
inc
pop
jb
cmp
sbb
pop
xlat
push
xchg
cs
add
sub
sub
lock
repz
sbbl
sbb
mov
inc
mov
mov
es
test
push
scas
je
mov
lret
shlb
into
movsl
pop
cmpb
pop
lods
or
jl
xchg
mov
je
pop
loop
out
sub
mov
mov
cmp
jmp
ficompl
imul
clc
sahf
addr16
enter
or
inc
dec
icebp
ljmp
push
je
loope
test
and
mov
mov
movsb
jo
jne
inc
aam
cld
xchg
adc
clc
xchg
scas
xchg
int3
xchg
arpl
inc
sahf
push
addr16
or
in
adc
popf
xor
outsb
jg
adc
inc
push
xchg
sub
imul
push
xor
pop
mov
jne
cs
mov
andl
fwait
arpl
les
ss
mov
repnz
jo
shrl
inc
sbb
popa
inc
ds
mov
xor
xchg
cmp
and
clc
in
loopne
outsl
jnp
in
out
mov
into
jnp
loopne
jle
inc
mov
ss
shl
cmp
sahf
pop
daa
lcall
sub
adc
aad
shrl
xchg
in
popa
or
sub
push
xor
cmp
ret
std
adc
jno
mov
dec
shl
mov
mov
mov
jnp
sbb
cmp
dec
rcrb
cld
sti
shll
mov
dec
popa
inc
cwtl
fildll
je
jecxz
xchg
sub
lret
aas
mov
mov
lea
insl
cmp
jns
insl
outsb
lahf
xchg
hlt
sub
mov
mov
lcall
push
insl
push
sahf
or
cli
rclb
popa
inc
jne
jge
xchg
add
pop
in
inc
scas
sti
movsb
cmc
imul
jp
pop
adc
scas
push
xchg
add
inc
xchg
or
test
ret
and
js
shrb
scas
mov
je
lods
add
xchg
mov
sub
mov
leave
sbb
loope
ds
out
into
movsl
pop
push
lds
test
repz
into
inc
aam
stc
pop
jae
test
shlb
das
jb
popa
je
or
add
nop
xchg
sub
lods
out
addr16
sbb
inc
pop
add
bound
push
nop
in
gs
cmp
stos
xchg
and
inc
sub
das
cmp
and
pop
mov
int
mov
add
mov
pop
jge
dec
xor
cli
sub
mov
or
lcall
cmpsb
ret
out
xor
bound
dec
mov
addr16
out
sbb
adc
loope
jge
push
arpl
out
sbb
mov
push
icebp
addr16
test
dec
fs
scas
xchg
xlat
into
into
lea
add
cs
mov
sbb
loopne
lret
pop
insb
or
pusha
shl
shlb
popf
in
push
adc
sbb
or
xlat
mov
push
sbb
test
jb
pop
dec
fs
and
cli
mov
mov
mov
test
ja
test
xchg
adc
push
inc
lcall
cmp
push
xchg
and
push
popa
addr16
jnp
xchg
pop
data16
xchg
sub
loop
adc
adc
add
les
mov
inc
jge
xor
lods
aaa
aam
push
mov
mov
flds
push
jbe
sub
fimull
fbld
negl
mov
push
scas
mov
jmp
sbb
or
mov
icebp
addl
int3
repz
out
sub
xor
push
add
or
cmp
stos
negl
andl
movsl
cmpsb
std
enter
stc
negb
sbb
jae
sub
je
cmpsb
mov
push
add
and
sbb
rcr
jns
fyl2x
andl
out
pop
dec
jg
dec
jle
loop
ja
aad
ficoms
pop
fwait
mov
pushf
testb
scas
adcl
push
fwait
mov
fstps
xchg
clc
lods
mov
es
cli
mov
aaa
xchg
dec
dec
jno
ljmp
pushf
xor
mov
cld
pop
sub
cs
stos
pop
in
adc
das
iret
or
add
jmp
subl
movsb
popf
clc
adc
addr16
shrb
mov
test
jmp
cmp
xlat
push
dec
pushf
clc
xor
test
add
cltd
dec
mov
jg
jno
mov
cmc
push
out
stc
sbb
jp
call
xor
addr16
sub
mov
nop
out
inc
inc
and
js
xor
fstl
cmp
mov
insb
jmp
pop
xor
in
insb
leave
xor
jmp
push
ret
sbb
xlat
scas
xchg
sbb
les
push
sbb
mov
mov
push
or
jnp
fcompl
popa
pop
or
push
andb
cmpsl
jbe
add
push
hlt
fdivl
jnp
cmc
in
mulb
shll
pop
jg
push
insl
mov
xchg
andl
test
std
lods
btr
jo
xchg
dec
lgs
pop
fiaddl
pop
lods
mov
or
bound
scas
cmp
xchg
inc
xchg
rorb
sub
fcmovnbe
mov
adc
push
pop
out
mov
test
mov
lahf
les
jbe
es
push
clc
rcr
mov
bound
push
jle
dec
lahf
fdivrl
in
or
movsb
cmp
lds
cmpsl
std
mov
fmuls
movsl
pushf
call
sub
int3
arpl
mov
mov
cli
int3
leave
xor
jmp
int
aad
or
xchg
loop
adc
inc
out
cli
jmp
pop
cltd
mov
xor
pop
sbb
aaa
inc
adc
push
je
jg
cmpsl
xchg
repz
pop
mov
fmuls
cli
rorl
out
fistps
jecxz
stc
mov
dec
lret
aad
cmpsb
push
pop
ret
adc
rclb
shl
mov
sti
xchg
loop
mov
test
pop
cmp
addr16
mulb
xor
pop
cmp
inc
dec
dec
ljmp
dec
insb
cli
int
pusha
decl
sub
xchg
cmp
mov
test
xchg
push
xor
fidivrs
cmp
mov
imul
push
divb
sub
stos
dec
push
popf
and
movsb
sbb
jae
out
push
mov
xor
aam
fildll
out
fistps
push
mov
lret
mov
cmp
test
icebp
mov
cmp
dec
push
out
cli
test
xor
daa
mov
or
lea
lds
int
aam
outsl
xor
call
mov
data16
cmp
xchg
jle
mov
xchg
xchg
enter
fidivl
sub
es
cmp
adc
aaa
xchg
pop
imul
jg
ja
cltd
sbb
jl
sarl
and
mov
pop
bound
fwait
mov
mov
shrl
test
mov
push
push
and
pusha
push
dec
cli
xchg
dec
addr16
cmp
jp
fs
int3
mov
das
int
mov
test
pop
sub
adc
jno
in
push
mov
leave
xor
cmp
add
lds
mov
dec
iret
fldl
nop
cmpxchg
aas
add
fdivr
xor
cld
cmp
mov
push
sbb
decb
std
xchg
call
imul
sbb
mov
loopne
es
jo
sarl
xchg
ss
rorl
jbe
mov
aad
inc
shlb
push
dec
stos
jl
scas
xchg
ss
xlat
push
repz
mov
cltd
mov
jle
test
sbbb
stc
adc
mov
push
or
jae
mov
cmp
cmp
dec
and
push
mov
jno
push
inc
fsts
and
inc
clc
adc
test
pop
lret
cmp
jo
jne
scas
data16
lret
pop
repnz
lcall
jns
loop
fbstp
cmp
jg
cmp
out
pop
leave
or
mov
adc
int
aam
add
aam
daa
cmp
dec
sbb
pop
mov
push
mov
icebp
add
push
pop
mov
sub
push
ret
hlt
xor
and
mov
stos
int3
arpl
repz
iret
cmpsl
pop
and
mov
inc
push
jecxz
je
ss
stc
sbb
dec
mov
add
das
nop
fsubrl
pushf
jae
and
pushf
popa
sub
shlb
clc
dec
cs
jle
and
dec
dec
pop
xchg
sbb
push
jl
lahf
xor
outsl
lret
icebp
mov
add
adc
imul
popf
xor
daa
ret
push
je
mov
mov
repz
mov
cld
jno
sub
enter
dec
mov
fcoml
out
addl
les
and
dec
fnsave
push
mov
mov
inc
sti
aas
mov
sbb
sbb
hlt
jnp
movsb
jns
dec
ret
jge
or
fsubs
mov
ljmp
add
out
cltd
cmpsl
pop
icebp
fs
mov
xor
mov
sbb
add
xor
scas
xchg
dec
inc
jb
pop
cwtl
js
iret
idivb
push
ficompl
fisubs
mov
cmc
and
ja
mov
subl
push
loopne
mov
lock
and
xor
fisubl
testb
aaa
mov
cld
adcl
inc
popf
inc
and
fucomp
incb
push
push
in
andl
arpl
sti
xchg
jbe
jge
mov
test
and
pop
dec
jo
adc
out
insb
dec
xor
lods
lahf
pop
test
lret
cmp
cld
lcall
in
call
lcall
fcomps
mov
imul
push
push
pop
fwait
leave
int
les
pop
jg
xlat
mov
aaa
into
repz
pop
cmp
adc
inc
ds
pop
adc
and
jp
aam
mov
cmp
daa
insl
add
decb
jns
and
jge
mov
test
scas
push
jae
inc
mov
pop
jl
rolb
push
movsl
fidivs
jo,pn
lahf
jg
xor
inc
fbstp
add
mov
push
movsb
fists
sti
les
cwtl
or
mov
adc
cmp
inc
mov
pop
cmp
mov
in
lods
or
adc
shll
cld
lcall
jne
push
pop
push
fdivl
push
and
add
test
out
cmp
pop
scas
sbb
mov
inc
lret
movsl
fistpll
lock
fidivl
shll
push
lgs
mov
dec
or
xchg
icebp
fildll
jbe
push
or
mov
inc
add
stos
inc
movsb
orb
cmp
sti
jg
sub
popf
lods
cmp
xchg
adc
pushf
das
pop
jo
nop
mov
dec
es
xchg
shrl
mov
in
inc
iret
fnsave
jp
das
mov
mov
mov
fdivrs
fmull
sub
mov
push
aas
lret
in
xchg
jbe
sub
lods
pop
cwtl
enter
loop
and
je
pop
mov
jp
push
movsl
repz
mov
jmp
xor
aas
rcrl
sub
pop
jb
jns
xor
xchg
sub
xor
add
mov
movsl
ss
loope
mov
lods
mov
cmp
ret
ret
xor
push
adc
push
pop
fcoml
push
loopne
jle
sbb
inc
dec
shrl
aas
outsb
add
inc
loop
or
retw
adcl
dec
iret
and
std
inc
stos
mov
fildl
xor
mov
out
sub
push
lock
decl
ret
or
jg
inc
push
mov
pusha
cwtl
leave
pop
ret
add
call
addr16
rorb
mov
jp
mov
addr16
push
xor
dec
shll
mov
jle
ljmp
divb
jne
enter
xor
cltd
adc
dec
xchg
xor
sarl
cmpsl
leave
mov
cwtl
and
dec
out
insb
inc
call
mov
fsubrl
lods
test
jae
adc
xor
mov
aas
add
sbb
pop
icebp
sti
testb
and
dec
sub
sbb
enter
test
shl
gs
push
mov
int3
jo
dec
sub
sahf
sub
xchg
imull
call
cmp
fisubrl
es
iret
fsubrs
sub
or
mov
pop
mov
popf
adc
xchg
iret
push
fwait
cwtl
outsl
mov
pop
negl
xor
out
or
push
outsb
or
pop
movsb
mov
outsl
cmp
push
mov
sub
adc
fs
jmp
and
xor
sub
inc
dec
jecxz
inc
insl
fisubl
out
pop
fwait
test
fwait
mov
pusha
ds
jg
shlb
int3
arpl
adc
cs
inc
add
push
or
enter
mov
jo
and
rclb
shlb
mov
mov
jns
pop
ss
lcall
ds
push
xchg
and
cmpsl
ds
or
fnstcw
sub
sbb
pusha
inc
mov
enter
and
fs
xchg
add
push
fldl2t
js
cld
lcall
push
xor
mov
cwtl
das
fwait
pop
stos
rorl
mov
mov
push
mov
lret
sar
push
mov
fucomi
sub
xchg
in
mov
mov
adc
xor
call
sub
mov
xor
cmp
mov
push
mov
sbb
push
xchg
stos
mov
data16
movsb
mov
add
lret
xchg
pushf
sbb
into
fstpl
jno
in
or
outsb
loop
data16
xchg
pushl
adc
pop
int
xor
in
mov
sub
repz
ds
inc
inc
or
jp
sti
push
jmp
loope
jo
sub
lret
push
xlat
ljmp
cmc
and
aas
dec
test
jbe
les
dec
sbb
outsl
les
cmp
lret
lea
movsl
in
ret
mov
leave
dec
jbe
mov
sub
cmp
cmp
cmc
sbb
sub
sub
push
in
mov
mov
js
dec
or
bound
adc
je
lcall
movsl
push
mov
mov
fdivp
aaa
add
pop
push
jno
add
mov
das
cmpsb
sub
scas
aas
leave
jns
outsw
adc
inc
dec
cmp
cmp
push
out
shrl
push
mov
adc
xlat
mov
in
sti
loope
imul
mov
cmpsb
pop
sbb
fmuls
cmp
out
movsb
jmp
aad
add
xor
dec
add
mov
and
imul
or
cmp
les
xor
popf
mov
popf
sub
dec
divps
dec
mov
fsubrl
pop
jo
popf
rcr
lock
sbb
outsl
add
aam
push
xor
cli
js
shlb
into
and
shrl
cwtl
bound
mov
negl
mov
loopne
mov
ljmp
xchg
fnstenv
movsl
or
cmp
sub
in
sahf
outsl
cmp
add
pop
cmpsb
cs
mov
xchg
fisubl
and
mov
jb
aam
pusha
cmp
inc
push
fdivs
mov
dec
stos
pop
push
ja
stc
pop
notb
cs
iret
mov
add
mov
aas
nop
or
addb
clc
cmpsb
dec
xlat
mov
dec
and
xchg
lods
adc
xor
test
push
das
jne
add
xchg
jecxz
stos
fistl
addr16
jnp
out
ljmp
leave
cld
or
out
xor
mov
leave
xor
ljmp
cld
stos
mov
scas
ret
loope
or
and
lret
add
mov
push
push
rcll
test
cmp
int
fwait
pop
xchg
inc
sub
xchg
add
inc
push
mov
push
jae
data16
mov
lahf
clc
pop
insb
pop
std
pop
les
addr16
jmp
test
ret
ffreep
icebp
or
add
and
jl
lahf
pusha
ja
or
aaa
xchg
add
mov
jns
xor
test
xchg
xchg
call
pop
scas
push
pusha
fistpl
xor
pop
aam
adc
imul
mov
out
in
popf
sub
inc
add
ret
movsb
jae
shlb
pop
pop
push
insb
xchg
jg
filds
cmpsb
sub
pop
out
test
pop
dec
pop
shlb
popf
sub
mov
es
cmpsl
mov
pushf
sahf
in
dec
icebp
pop
lods
stos
jbe
ds
loope
cmpsb
and
pop
adc
shrb
lods
stc
jmp
testb
hlt
push
in
inc
nop
movsb
xchg
mov
daa
inc
or
push
cld
dec
xchg
inc
inc
adc
cmp
push
dec
pop
dec
lods
xor
jge
xor
repnz
flds
aam
cli
jmp
inc
stos
mov
out
xchg
popf
inc
lahf
test
cs
leave
mov
and
pop
lock
enter
mov
cld
divl
cmp
pop
dec
fsts
dec
pop
hlt
jle
ds
ficomps
repz
mov
adc
mov
sbb
and
sbb
fiadds
push
daa
mov
inc
imul
stos
stc
fcoml
xchg
daa
xchg
lahf
cmpl
pop
xchg
inc
push
popa
ja
lret
cmp
in
popa
stos
dec
cmp
pop
dec
jo
and
jo
movd
pop
movb
lret
dec
es
out
xchg
out
fldenv
or
addr16
outsb
sub
mov
fdivrp
popl
inc
ljmp
aad
push
ljmp
xchg
das
adc
mov
loop
imul
enter
test
rcrb
xchg
inc
xor
bound
push
jecxz
leave
jmp
sub
mov
jne
aad
pop
es
lcall
aas
lock
push
cmp
lcall
addl
int
lods
cmpsl
xor
cmp
pop
test
dec
ljmp
pop
call
add
sti
and
flds
rolb
mov
push
aam
push
mov
jle
incl
mov
xchg
pushf
dec
sbb
repnz
dec
in
add
and
test
and
out
movsl
and
cltd
adcb
nop
ljmpw
adc
aad
dec
testl
jmp
push
mov
add
sub
inc
mov
ds
shll
stc
subl
sbb
bound
mov
mov
in
push
push
movb
insl
or
adc
xlat
mov
cmp
jne
ret
pushf
inc
sti
or
imull
push
mov
lcall
inc
js
and
test
aaa
mov
sub
lahf
sub
mov
adc
adc
mov
call
jg
sahf
jns
xchg
sbb
jnp
out
enter
add
jnp
mov
nop
jmp
jo
push
sub
enter
out
pop
push
cltd
and
arpl
scas
shrl
divb
xor
lcall
sbb
mull
mov
data16
lret
adc
pop
jo
pusha
pop
andl
or
mov
jg
push
sub
imull
or
xor
dec
outsl
mov
mov
push
xor
inc
sbb
jp
sbb
enter
dec
ljmp
pop
mov
sbb
rorl
cmp
in
mov
dec
insb
or
pop
pop
pop
lcall
je
hlt
lahf
rorl
movsb
sbb
sub
jge
mov
push
std
jae
in
lds
hlt
cs
lods
mov
add
in
ja
loope
sub
ret
dec
mov
repz
imul
sub
fwait
js
out
mov
xchg
cmp
and
in
popa
push
add
xor
cld
mov
jns
aad
sbb
fldt
movsb
dec
sbb
nop
flds
andl
mov
int
or
test
or
out
or
dec
mov
jge
mov
fld
add
les
into
jb
mov
frstor
movsl
ret
jno
jbe
and
mov
add
cmpsl
inc
jmp
sbb
push
mov
rcll
aas
pop
adc
in
sahf
clc
cltd
pop
mov
out
mov
jns
pushf
jecxz
push
adc
and
aam
test
stc
jp
negb
dec
adc
daa
js
jb
jl
call
xchg
leave
inc
lret
bound
cld
insl
add
out
lea
mov
jns
loop
ljmp
aam
cmp
mov
out
test
add
pop
ret
gs
cmpsb
inc
outsb
scas
and
inc
push
jmp
inc
mov
dec
pop
out
ds
cmpsb
dec
xchg
imul
mov
mov
xchg
sti
int3
pop
and
stos
mov
not
lret
pop
shrb
jnp
mov
clc
mov
xlat
inc
movsl
and
scas
push
lret
mov
xchg
out
dec
pop
lahf
clc
flds
adcl
sahf
int
or
jecxz
fcoms
add
dec
data16
stos
add
inc
mov
push
jnp
push
fiaddl
nop
xor
push
scas
mov
pusha
jbe
fadds
adcb
dec
in
fisttps
xchg
ret
jp
ja
cmp
shrl
fiaddl
addl
mov
inc
arpl
iret
dec
fisttps
negb
cmp
mov
push
inc
xchg
and
xchg
insl
jmp
mov
movsl
add
adc
or
gs
cmpsb
dec
xchg
inc
mov
dec
icebp
mov
adc
arpl
pop
call
fisubrl
fs
in
add
divb
adc
adc
nop
mov
inc
xchg
and
divl
test
adc
push
xchg
jmp
cmc
loop
out
inc
jp
push
outsl
scas
fstps
outsl
jl
push
pop
cli
or
and
clc
sub
loope
orl
ja
and
mov
jg
mov
movsl
sbbb
sbb
sar
push
push
outsb
fcompl
popa
jnp
xor
mov
mov
mov
and
stos
jmp
sbb
mov
int3
inc
aam
cmp
es
pop
inc
mov
push
and
push
xor
ffreep
dec
push
out
jbe
mov
jge
ficompl
dec
pop
adc
push
xchg
in
inc
xchg
adc
leave
mov
dec
lock
js
lea
stos
xor
adc
sbb
adc
pop
jno
mov
pushf
push
fnsave
jecxz
lcall
mov
push
mov
mov
xlat
dec
popf
mov
inc
mov
mov
loope
fmulp
lret
jne
sub
jns
inc
fidivs
icebp
int
xchg
xchg
pop
cli
lea
call
mov
and
lahf
mov
jmp
xor
stc
xchg
pop
adcb
jo
mov
fistps
lret
ds
push
ja
mov
xchg
es
mov
xchg
cmpsb
jp
mov
jp
mov
dec
dec
daa
int3
adc
ss
movsl
push
mov
iret
addr16
jae
push
cs
xor
daa
xchg
inc
popa
seta
lods
cltd
leave
push
ret
adc
xchg
mov
pop
lahf
test
adc
imul
mov
cmp
loope
call
pop
adc
test
pop
inc
test
push
call
and
mov
xor
sahf
inc
lahf
and
dec
imul
aad
jl
add
sbb
shll
dec
es
pop
jecxz
fcmovnb
push
loopne
jno
push
lods
repz
mov
je
pop
xor
pusha
jnp
sbb
dec
inc
cmp
sbbl
inc
loop
ss
enter
add
and
shrb
lods
inc
mov
stos
lds
and
aaa
push
adcb
test
push
mov
pop
loope
fmuls
dec
movsl
faddl
sub
xor
popa
addl
and
push
test
inc
pop
inc
inc
aaa
and
test
cmp
iret
daa
test
scas
les
fdivs
fs
in
sbb
stos
mov
cmp
mov
mov
shlb
stc
lret
jae
shl
in
dec
push
pop
push
mov
jecxz
push
lods
lds
sub
adc
cmc
xchg
mov
or
scas
ds
into
and
xchg
mov
or
or
out
inc
lss
adc
lret
and
cltd
cltd
jb
inc
cmpsl
jl
dec
stc
push
push
inc
add
sbb
clc
xchg
pop
mov
lods
mov
adc
xchg
sbb
fs
insb
add
mov
dec
dec
gs
stos
clc
aas
iret
punpckldq
xor
push
test
xchg
xlat
repz
add
montmul
xchg
jns
add
adc
fidivrs
xchg
xor
ret
rorb
clc
test
adc
mov
out
push
xor
sub
push
pop
dec
jecxz
dec
sub
les
mov
sub
adc
push
inc
add
mov
ljmp
mov
mov
movsb
xchg
call
xor
mov
jbe
mov
or
arpl
les
mov
inc
push
dec
and
gs
inc
pop
addl
insb
ss
mov
push
loop
sbb
icebp
dec
jle
xchg
stos
outsb
push
shr
dec
cmp
out
push
shrb
int3
imul
push
insl
fcmovb
int3
lock
xor
daa
lcall
es
bound
lret
js
push
ret
icebp
jns
sbb
idivb
mov
and
pop
loopne
stos
mov
test
test
mov
jp
jnp
push
fdivrp
fcompl
cmpsb
sub
fsubrl
add
mov
jecxz
cmpsl
fsubs
ds
inc
ret
stos
fisttps
movsl
sti
mov
or
add
cmp
movsl
fidivrs
sub
dec
cltd
sbb
or
add
cs
hlt
mov
repnz
mov
xor
or
sti
push
sbb
mov
adc
mov
mov
les
out
in
and
sub
bnd
push
mov
jge
cmc
scas
jmp
mov
pop
imul
adc
dec
push
xchg
mov
sbb
iret
int
mov
in
lahf
jge
ret
je
cli
scas
push
call
fstl
repz
mov
dec
scas
cs
and
and
dec
movsl
mov
mov
inc
outsl
stos
pop
mov
mov
or
jo
and
push
mov
mov
insl
aam
lret
arpl
and
mov
sbb
arpl
jo
jle
xchg
test
add
mov
xor
movsl
push
std
mov
cmp
add
mov
in
pusha
sub
push
and
adcl
mov
imul
adc
jl
pop
out
je
loopne
movsb
stc
mov
jmp
addb
stos
test
ja
mov
gs
in
add
and
subl
dec
jb
ds
mov
cli
loop
outsb
jne
test
pop
sbb
jne
gs
bnd
dec
clc
lds
sub
stos
push
call
inc
lods
sbb
scas
inc
aam
mov
pop
das
push
dec
loop
lods
sub
imul
leave
xlat
xchg
push
or
fiaddl
aad
jge
ljmp
sbb
push
sbb
enter
addr16
adc
ja
and
insb
mov
lahf
popf
cmp
test
mov
stos
dec
mov
imul
fs
fs
sub
ja
push
add
cmp
imul
inc
fs
mov
stos
int
sbb
pop
push
aaa
ret
jp
out
and
push
lock
adc
out
mov
scas
mov
movsl
and
mov
mov
cwtl
bound
push
int3
repz
jecxz
mov
dec
loope
stos
push
dec
push
daa
into
stos
jne
js
nop
aaa
pushf
fwait
test
fsubs
std
loop
call
fstl
dec
ret
push
or
pushf
fisubl
push
jo
lcall
insl
mov
pop
and
xchg
jns
push
jp
lds
jecxz
mov
add
xor
callw
sbb
push
lcall
push
xor
mov
mov
arpl
lahf
mov
into
sbb
jl
pop
out
xchg
inc
in
cmp
push
sbb
push
and
and
outsl
jmp
ljmp
push
clc
mov
jg
in
sbb
dec
lds
pop
cmp
mov
into
push
mov
xor
mov
aad
into
sub
nop
out
and
mov
cli
xchg
mov
cmpl
dec
mov
pop
insl
mov
sbb
or
and
pop
and
outsb
push
out
daa
sub
mov
cli
sahf
in
mov
and
cmc
mov
out
in
dec
shrb
adc
test
and
pop
sub
fidivrl
rorl
and
dec
xlat
push
jecxz
imul
addl
shrb
push
xor
push
inc
pop
int
aaa
add
mov
subl
stc
out
adc
call
nop
out
jg
jg
fildll
adc
call
jne
mov
and
mov
inc
es
clc
adc
xor
inc
arpl
gs
test
mov
push
mov
idivb
aas
inc
cmp
jmp
jbe
adc
out
lahf
xchg
jp
loop
inc
xchg
test
mov
in
mov
mov
or
xchg
addr16
push
shl
cli
push
icebp
ret
push
std
lock
aas
sbb
mov
loopne
sbb
jbe
and
loopne
push
pop
gs
adc
arpl
insl
mov
ret
jecxz
or
sub
and
jmp
mov
ss
clc
xor
out
test
fisttpll
jnp
mov
xchg
ljmp
and
movsl
or
aaa
test
out
aam
repnz
pop
js
mov
ret
bound
ds
inc
testl
mov
mov
add
jno
in
insb
movsb
mov
mov
mov
pop
or
mov
stos
adc
fyl2x
js
push
sub
lret
dec
cmpsl
scas
mov
push
hlt
and
cmc
out
xchg
movsb
and
notl
orl
mov
push
sub
into
mov
cmp
xchg
rol
sahf
mov
sahf
xor
lret
xchg
outsl
jnp
sub
adc
clc
and
add
mov
xchg
pop
mov
lret
push
andl
mov
xchg
sti
jg
mov
mov
xlat
cld
rcll
jb
outsl
ljmp
aam
scas
cltd
test
inc
push
jo
scas
lret
shlb
xchg
xor
movsl
std
jle
jmp
mov
add
data16
and
xor
in
sbb
insb
pop
mov
call
aas
and
xchg
adc
cmc
xchg
fistps
push
lea
mov
mov
scas
inc
lret
xor
sub
inc
iret
sub
jne
insb
shll
sbb
jl
outsl
jnp
jns
movsb
ret
push
pop
rclb
xchg
sbbw
cmc
cmpsl
mov
and
ret
and
inc
les
sub
add
in
pop
fnsave
in
in
cld
pop
jmp
test
inc
aas
in
andb
xor
jo
and
or
pop
imul
movsl
outsl
sbb
xor
adc
mov
dec
arpl
jmp
push
or
add
orb
mov
fcoml
and
pop
icebp
jns
push
sub
rol
inc
rolb
shr
pusha
addr16
sbbl
dec
sbb
mov
and
dec
sti
push
jp
mov
push
cmpsb
xchg
ljmp
sub
sbb
jno
fsubl
jb
jbe
add
int3
push
stos
hlt
xchg
cmc
gs
call
ss
inc
push
aam
dec
iret
outsb
fcomp
jae
xor
sub
aas
test
ja
mov
setb
sbb
or
cwtl
gs
push
stos
and
call
mov
xchg
flds
shlb
sbb
jge
sub
lret
adc
push
addr16
cmp
ret
jp
xchg
mov
add
xchg
bound
push
jmp
inc
pop
clc
call
or
loop
pop
ljmp
movsb
int3
pop
sarl
xorl
pop
cmp
pmulhw
sub
arpl
pushf
gs
shll
push
sbbl
js
sbb
mov
les
add
jmp
xorl
add
and
adc
js
hlt
adc
mov
xchg
pop
jp
pop
cltd
xchg
fstpl
mov
or
les
jno
into
mov
inc
cs
inc
pop
test
xchg
cmp
decb
sbb
push
pop
inc
jmp
into
rclb
dec
cmpsb
and
in
out
sub
into
xchg
jle
leave
cmpsb
flds
push
mov
jg
enter
cmp
add
in
ret
dec
sbbb
and
mov
test
sahf
setp
lds
addl
lcall
ss
rcrb
xor
mov
xor
jbe
jns
lock
gs
vmread
mov
mov
aam
push
out
out
mov
cmpsl
xor
mov
pop
sbb
adc
dec
pop
mov
test
in
aaa
leave
mov
cmp
mov
push
sbb
push
cmc
fadd
sbb
add
jl
add
dec
repz
adc
pushf
pop
dec
mov
jg
scas
push
cwtl
adc
push
jge
mov
cmpsb
ds
sbb
fildl
mov
daa
addr16
fldt
sbb
mov
add
arpl
inc
test
sbb
bound
dec
sub
sbb
xchg
sbb
imul
jo
push
aas
jl
sbb
stc
pop
movsl
dec
sub
cmp
clc
je
mov
lahf
sahf
inc
sbb
ss
in
pop
cwtl
sarl
sti
rcl
mov
cs
xor
ja
mov
jp
dec
leave
mov
or
lahf
rcrb
mov
xchg
cmovns
push
jb
pop
xor
lods
push
ljmp
lret
pushf
jl
lds
and
jge
mov
pop
movsb
xor
outsl
mov
fs
psubusb
pop
adc
mov
push
pop
xchg
xor
jbe
sbb
xchg
xchg
dec
pop
jg
mov
push
and
cmpsb
xchg
sub
popf
inc
push
into
ss
mov
bound
xchg
and
fwait
adc
add
adcb
xchg
dec
mov
hlt
loop
out
xor
jl
das
ljmp
movsb
clc
lcall
pop
lods
sbb
stc
inc
lds
push
cli
xchg
popa
jo
popa
shll
dec
scas
shlb
call
inc
mov
ficompl
jecxz
cmp
mov
test
das
mov
ja
cmpsl
inc
rorb
sub
or
sbb
pushl
fisttpll
mov
jle
lret
sub
xchg
in
ja
popf
xor
and
push
cmc
mov
mov
push
nop
sbb
ret
sbbl
mov
xchg
andl
insl
inc
fcompl
arpl
lock
jae
andb
int
and
adc
push
movsl
mov
mov
mov
push
or
dec
xchg
sti
lret
fwait
mov
mov
xchg
cmc
mov
sahf
push
push
push
test
mov
out
icebp
ret
nop
xchg
push
inc
sub
push
mov
push
xchg
out
xor
iret
and
cmc
xor
pusha
jae
pop
fiadds
and
jne
in
push
push
jge
enter
xchg
fnstsw
dec
loop
dec
out
inc
push
push
mov
insl
sub
xchg
stc
or
lods
inc
rclb
inc
hlt
sub
pop
aas
or
test
stc
hlt
stos
push
sbb
xchg
and
lret
mov
fcmovu
xlat
fwait
lcall
dec
adcl
inc
ret
jne
mov
xchg
xchg
lods
dec
gs
je
pop
xor
push
adc
jmp
cwtl
aaa
add
mov
xor
push
roll
fwait
mov
repz
decb
lds
mulb
movsl
iret
out
xchg
inc
aam
repz
rcl
cmpsl
sub
cld
shll
pop
aaa
lret
out
mov
ljmp
out
js
in
test
adc
jecxz
arpl
int3
mov
adc
push
cwtl
pop
push
fwait
movsl
mov
and
aad
sub
pop
sarb
scas
mov
jae
mov
in
call
or
cmc
enter
xchg
dec
add
test
popf
add
loopne
adc
cmp
hlt
adc
insl
notb
or
loopne
ljmp
inc
pusha
jno
ss
jecxz
dec
in
jbe
cmp
pop
sti
es
pop
clc
je
adcb
adc
andl
jno
jge
and
inc
push
sti
inc
fisubrs
xchg
jo
sbb
cwtl
mov
xchg
jb
push
and
pop
mov
add
jl
inc
shrb
jl
jp
push
jle
xor
stc
xchg
xor
pusha
cmp
inc
scas
nop
or
xor
call
push
dec
leave
or
sti
outsb
fldl2e
mov
jmp
lcall
and
xor
jmp
or
dec
mov
lods
mov
push
pop
lods
imul
out
jge
pop
cs
int
adc
stc
in
jecxz
mov
adcl
test
in
dec
jge
nop
clc
in
adc
pop
sbb
push
and
jae
into
add
mov
pop
inc
fimuls
sub
scas
sub
pop
xlat
push
mov
inc
ret
call
fiadds
xor
jge
cli
test
pop
jb
loopne
pushf
cltd
call
adc
jge
mov
jbe
add
lods
jae
adc
pop
sti
mov
jle
and
mov
mul
rorb
or
fwait
mov
data16
clc
sahf
cmc
cld
int3
pop
sub
movsl
cmp
lret
cmp
ret
bound
daa
hlt
dec
adc
incb
dec
iret
dec
sti
sub
lods
nop
pop
out
es
jl
pop
xlat
lods
test
aas
lds
add
stos
jp
lods
sub
xor
subb
pop
mov
cmp
sub
jo
loop
lret
pop
sub
dec
dec
dec
packuswb
inc
ret
jnp
xchg
push
rcll
mov
icebp
sbb
sbb
mov
lcall
jecxz
dec
fadds
mov
push
and
into
and
lahf
cmp
sub
and
jb
xor
shll
xchg
push
cmp
push
loope
int
popf
jb
out
ficoml
out
pushf
dec
or
sahf
lods
movsl
push
push
jne
mov
cmp
out
mov
in
bswap
fistps
push
inc
jl
in
in
cwtl
cmpsl
ret
mov
jae
movsl
ljmp
addb
inc
cwtl
repz
mov
fimuls
jp
sbb
add
mov
push
popf
ljmp
pushf
jno
cli
fsubl
movsb
in
xchg
adc
in
add
jnp
test
push
sub
cmp
ss
mov
mov
movsl
lds
jmp
call
mov
lock
mov
repnz
mov
subb
inc
sbb
pop
pop
mov
xchg
int
add
ds
adc
mov
inc
push
ja
sarb
sbb
out
movsb
mov
cmp
dec
xor
and
rorb
ja
sbb
data16
ret
arpl
jp
les
ret
xor
mov
fisttps
lahf
add
cmpsb
out
arpl
mov
fbstp
leave
in
jnp
std
pop
mov
add
decl
gs
xchg
call
xchg
mov
loopne
gs
sti
sub
inc
or
jne
add
or
lock
ja
shl
lcall
mov
les
mov
dec
repz
repz
jl,pt
hlt
jmp
cmp
dec
nop
mov
in
les
pop
sbb
xchg
daa
dec
and
jg
clc
sahf
aam
ja
lds
call
imul
lock
fcoms
test
sbb
int3
adc
jecxz
fnstcw
popa
mov
push
jl
es
or
shll
daa
aam
adc
loope
add
verr
mov
dec
inc
sbb
adc
inc
mov
inc
outsb
fwait
lock
mov
out
daa
xor
adc
shl
in
push
sub
dec
and
movsl
push
xchg
iret
movl
dec
lods
inc
jnp
mov
pop
cli
out
push
sbb
imulb
lea
jae
and
rcl
jb
testl
cs
or
lods
imul
stos
test
xor
loop
mov
sbb
inc
outsb
jl
lock
dec
fisttpll
out
scas
mov
push
das
xchg
add
add
sbb
mov
pop
movsb
repnz
call
addr16
add
icebp
xor
in
pop
outsb
test
shr
add
inc
add
push
push
or
jno
mov
cli
dec
insb
mov
fistps
jge
mov
jmp
jb
test
adc
mov
xchg
lret
lods
fstpt
les
test
xor
fdivl
or
jae
xchg
xchg
jno
sahf
in
jae
and
lahf
pusha
out
stos
pop
cmp
add
jae
sbb
nop
mov
fnstenv
shll
pop
lcall
cmp
push
sbb
aaa
adc
lods
push
insl
lret
jne
iret
mov
ret
mov
ret
mov
ljmp
mov
adc
aaa
mov
push
mov
decb
in
out
std
mov
xchg
pop
xchg
inc
subl
jmp
dec
dec
inc
add
dec
aaa
push
jo
data16
jp
loopne
divb
sub
movsb
mov
push
movsb
pop
ss
sub
adc
inc
or
enter
test
pop
adc
iret
test
ret
or
outsb
xor
jo
imul
lods
pop
ljmp
cmc
push
mov
rcrb
loop
sub
popf
push
dec
rcr
sbb
add
stos
inc
or
mov
mov
pusha
decb
inc
adc
fmulp
adc
arpl
test
push
pop
icebp
test
mov
cmp
test
ret
pop
rcrl
cmp
aas
mov
fimuls
mov
js
fimull
andl
rcl
xchg
pop
and
mov
dec
andl
stos
fldl
push
loop
xor
call
xchg
xor
mov
cmp
iret
popf
inc
dec
cmp
jae
gs
cmp
inc
push
enter
adc
jp
adc
je
xchg
push
sbb
push
adc
das
stos
inc
popa
mov
stos
fs
adc
push
out
daa
push
and
lods
les
mov
inc
mov
andl
arpl
xchg
lcall
insl
test
outsw
lods
out
out
mov
in
pop
outsb
pop
dec
dec
pop
xlat
imul
aas
mov
fs
or
lods
inc
sbb
rol
ret
dec
divl
in
test
adc
daa
iret
pusha
stos
mov
bound
ret
inc
outsl
notl
sbb
mov
mov
xchg
in
ds
js
ja
cs
jno
pop
imul
push
mov
adc
xchg
push
push
sbb
lret
or
push
add
ja
sbb
les
jle
ljmp
sub
repz
dec
test
push
outsl
xchg
leave
into
fcoml
mov
and
cmc
mov
mov
inc
pop
cli
test
stos
pushf
fidivrs
push
std
lret
dec
stos
cmp
push
lods
sbb
lods
lods
push
mov
fcmovb
nopl
ret
or
sub
js
jmp
adc
dec
jecxz
mov
push
mov
mov
xor
mov
pop
xlat
outsl
dec
das
sahf
xor
loopne
mov
aam
imul
cmp
push
into
pop
add
cmpxchg
mov
test
cmp
stc
mov
xor
fmulp
push
enter
dec
mov
icebp
xchg
jl
js
mov
testb
jae
xchg
lret
aaa
cmpsb
lods
fisubrs
popf
int
push
mov
mov
je
sysexit
roll
sub
xor
inc
cmc
jge
add
shl
in
pop
sbb
mov
and
sub
ret
dec
shlb
jae
fnstsw
inc
lock
js
ja
sbb
push
lods
hlt
push
mov
lods
inc
jp
push
sbb
les
addr16
pusha
out
js
lock
adc
test
jns
cld
inc
pop
fsubl
inc
sub
loop
insb
adc
inc
adcb
pop
mov
mov
mov
aad
jmp
fists
xor
xor
loope
test
mov
loopne
sub
aam
and
out
mov
add
pop
mov
sub
push
pop
out
mov
les
sub
nop
fidivs
and
sbb
and
sbbl
mov
mov
mov
aam
sbb
cmp
jecxz
ds
fdivl
add
out
les
xor
jecxz
jl
push
add
sahf
xor
icebp
fidivrl
jge
inc
pop
mov
sbb
int3
js
pop
test
iret
and
leave
into
lret
mov
xchg
push
insb
enter
sub
sbb
pop
push
ljmp
lods
subb
add
pop
sub
and
aas
inc
gs
call
inc
pushf
icebp
pop
sahf
pop
push
xchg
loop
or
mov
cmpsb
mov
sbb
imull
test
sub
jge
mov
push
insl
stc
out
jle
sbb
xor
mov
cmp
sbbb
jnp
fldt
loopne
pop
or
cmp
aas
mov
adc
dec
jae
jns
lds
movb
mov
sub
jnp
mov
push
sti
sbb
nop
push
cmpsl
mov
sbb
fdivl
or
xchg
int
dec
mov
adc
lcall
inc
fdivl
insb
aad
jp
ficoms
jmp
sbb
ss
mov
or
data16
cwtl
test
mov
out
push
aaa
fistpl
stos
shl
cmp
jbe
push
xchg
fldcw
push
stos
inc
push
adc
pop
inc
aaa
push
mov
es
push
xchg
decb
pushf
cmp
mov
push
sbb
out
mov
adc
xchg
mov
scas
clc
shrl
loop
je
sar
or
in
xor
test
xor
or
pop
divl
loope
pop
pop
jge
ds
je
subl
xor
cmc
mov
test
je
shll
pop
shrb
cwtl
add
xor
xor
clc
mov
and
adc
or
sub
push
pop
cmp
adc
xor
pop
add
adc
data16
jo
add
xor
jl
rcrl
adc
jp
icebp
mov
cs
xchg
mov
xor
sbb
jl
shrl
mov
incb
mov
stos
mov
mov
out
jo
js
mov
jo
dec
xchg
sub
cmpsb
adc
in
xor
pusha
cmpb
mov
pop
inc
shll
sub
mov
out
or
pop
adcb
out
xchg
flds
cmpb
mov
mov
cmp
sbb
xchg
lock
ds
hlt
push
and
dec
mov
push
push
and
jmp
inc
adc
pop
jecxz
iret
pop
xor
push
lea
push
std
mov
pop
clc
cmpsb
loop
or
movsl
loopne,pt
call
leave
cltd
std
outsl
dec
mov
xor
xlat
mov
cmpb
sub
in
and
push
mov
fsub
pop
lahf
pushf
add
cmp
mov
dec
jmp
mov
jb
pop
sub
cmp
divl
push
jno
jbe
sub
adc
xlat
int
jb
mov
xchg
js
and
push
mov
sbb
cltd
xor
insl
fnsave
or
stos
int3
das
push
shlb
punpckhbw
test
dec
dec
ja
rep
outsl
push
cmp
push
mov
lcall
pop
ss
jmp
out
jno
push
mov
add
add
sbb
lds
xlat
dec
fs
sbb
shlb
push
and
shrl
xchg
dec
mov
fbstp
push
mov
ja
cs
fdivp
adc
inc
aas
push
cwtl
in
cli
ret
sahf
lret
icebp
in
aas
ja
push
xor
xchg
xchg
push
inc
inc
cmp
cmp
imul
pushf
adc
cwtl
flds
and
and
xor
jl
mov
das
arpl
loope
loope
seta
fwait
and
idivl
sub
sub
jbe
pop
xchg
mov
movb
adc
jge
push
xor
bound
leave
pop
sti
adc
jecxz
sbb
movsb
pop
addr16
sbb
mov
mov
test
cwtl
scas
out
jnp
jp
xchg
mov
pop
jo
dec
into
jge
rcrl
push
int
sahf
add
and
iret
mov
add
mov
push
cmp
pop
mov
add
stos
sub
push
pop
dec
push
mov
xchg
mov
jecxz
xor
orl
push
pop
jge
adc
or
shr
leave
pop
sti
cmp
test
aaa
hlt
push
xor
and
fwait
test
xor
fisttps
push
in
je
and
mov
cmpsb
ficoms
out
dec
rcrb
push
push
and
in
lret
cli
jne
xor
movsb
cmpsb
fiadds
xchg
pop
xor
jne
cld
icebp
mov
lods
adc
fwait
loope
xchg
xlat
jbe
decb
jbe
jb
sub
pop
sbb
xorb
sbb
or
mov
fldcw
sbb
subb
pop
fsubrs
lods
shrb
out
inc
nop
lret
jg
fisubrl
cld
sbbl
add
call
sahf
add
mov
xor
test
pop
ffree
loope
fucomip
mov
int3
sub
icebp
shll
ds
dec
jecxz
sbb
mov
mov
into
fsubrl
out
lock
add
dec
mov
sbb
dec
xchg
inc
fsts
mov
sub
sbb
movsl
leave
mov
rorl
or
sbb
mov
es
xchg
mov
xor
les
imul
sbb
js
cmp
shl
xor
dec
sub
fimull
xor
add
mov
mov
lret
lret
int
daa
inc
pushf
dec
mov
pusha
cmp
test
mov
gs
leave
fucomp
rorb
movsl
jecxz
xor
jg
outsl
mov
xchg
push
lods
xchg
mov
push
test
int3
xchg
xor
xor
sarl
ret
pusha
dec
ficomps
leave
jecxz
cmp
cwtl
aas
ficompl
mov
fstpl
out
push
cmp
aas
sub
test
cs
call
pop
out
mov
fidivl
mov
xchg
and
clc
popl
cwtd
sbbl
test
stos
mov
pop
pop
add
int
cld
outsb
ret
outsl
loop
loope
sbbl
test
and
jb
xchg
loop
sti
lret
jmp
cwtl
fcomps
dec
xor
sbb
nop
mov
inc
pop
lahf
test
std
or
add
loopne
dec
xchg
mov
add
push
xchg
mov
shll
cmp
inc
int
jne
insl
xor
adcb
outsl
xchg
dec
insl
sub
aam
or
jmp
or
scas
cmp
fsubrs
push
cmp
dec
out
hlt
mov
mov
in
lea
in
jecxz
cmp
jmp
push
sbb
into
add
nop
lods
xchg
mov
xchg
xor
and
mov
cmpsb
jae
ljmp
cmpsl
pop
xchg
dec
gs
popf
sub
call
mov
mov
inc
cwtl
mov
mov
sarb
addr16
cmp
mov
mov
adc
mov
push
mov
adc
push
stc
fildll
inc
sbb
dec
arpl
sub
or
cmpsb
xor
sub
push
popf
xor
and
lea
adc
add
leave
mov
pop
xor
dec
int
out
pop
mov
clc
jne
xchg
test
mov
test
mov
sbb
stos
pop
and
rcrl
in
in
lea
dec
push
and
mov
or
mov
leave
stos
mov
sti
xor
jle
iret
and
lret
nop
imul
xchg
pop
fcoml
shrl
jo
arpl
xchg
adc
adcb
imul
push
jno
sbb
push
stos
jns
shrl
cli
insb
xor
pop
mov
xchg
push
or
lods
call
addr16
clc
cmpsl
inc
cwtl
dec
xor
hlt
movsb
jno
ljmp
jno
mov
je
stos
stc
fistpll
adc
cmp
addr16
dec
out
inc
and
xor
cld
lret
es
jnp
out
icebp
mov
xlat
or
jns
fimuls
mov
ret
pop
mov
je
movntq
xchg
imul
repnz
repnz
stc
push
shlb
fcoms
fisubrl
add
repnz
jae
push
fcmovne
push
adc
push
cltd
bound
imul
dec
mov
pop
inc
daa
cld
cs
testb
sbbl
shlb
inc
mov
xor
scas
scas
addl
xchg
sbb
out
jo
clc
push
lret
jo
mov
jle
popa
xor
xchg
rcrl
xchg
ja
fs
dec
flds
xchg
cs
xchg
loopne
jmp
inc
shlb
add
adcb
fnstenv
and
jne
cmp
insb
bound
xor
cmpl
leave
fidivs
mov
popf
stos
test
pushf
cmpsl
mov
cmpl
gs
or
cbtw
lea
out
insb
inc
gs
jecxz
sub
das
stos
cmp
sahf
mov
imul
pushf
aas
xlat
shl
je
js
scas
sub
xchg
cmp
rolb
push
cli
xchg
pop
sub
iret
dec
xchg
inc
or
xchg
mov
iret
and
cmc
cmpsb
sub
inc
imul
push
pushf
sub
xlat
lret
ja
js
sub
popf
mov
cmp
call
stos
inc
sbb
ds
lret
push
mov
sbb
ret
fs
movsb
es
xchg
adc
andl
mov
call
mov
xor
aas
ret
add
clc
outsb
test
and
daa
dec
pop
aad
pop
in
dec
dec
sahf
pop
outsb
test
or
insb
mov
push
pop
loop
lea
hlt
pop
sub
adc
sub
xchg
in
in
jo
mov
or
inc
push
mov
xlat
jle
jns
inc
mov
jmp
aas
adc
pop
addr16
jns
inc
cwtl
and
dec
pop
hlt
mov
mov
shlb
sbb
jnp
adc
ss
jns
je
and
fisubrs
shrl
lods
addr16
fnstsw
cwtl
dec
test
xor
outsl
outsl
out
jg
mov
push
fnclex
jns
mov
add
push
or
lret
cli
mov
and
lea
pop
and
jl
mov
mov
aaa
in
mov
mov
inc
out
pop
testb
add
cmp
jecxz
stos
xchg
shll
rcrl
sub
cwtl
xor
fildll
fildl
in
inc
cmc
push
sub
xchg
mov
aad
icebp
dec
movsl
ja
cmpsl
popa
dec
mov
cmp
dec
or
fucomp
test
ficompl
imul
jno
jno
clc
lcall
sbb
fidivrs
or
cltd
mov
fwait
or
jge
push
jbe
imul
cmpsb
cmc
mov
ret
ret
fidivl
mov
xchg
arpl
lret
scas
push
pop
in
cli
push
sub
cmp
ss
add
fdiv
dec
test
xchg
fnsave
arpl
fildll
mov
lds
popa
cmp
jb
in
out
cmp
imul
lahf
stos
xor
outsl
add
subb
mov
xchg
add
xor
imul
pop
loope
gs
jo
adcl
orl
mov
les
xor
xor
fucom
cmp
jmp
adc
repnz
jnp
fwait
mov
nop
imul
dec
loopne
adc
push
xor
add
jns
fwait
push
mov
cmp
cmp
neg
jmp
cmc
mov
push
rorb
in
cmp
stos
pop
push
push
adcb
mov
xor
mov
jg
sbb
jp
push
cmp
pushf
call
push
add
mov
jle
xor
cmc
add
and
scas
and
iret
xchg
mov
repz
lret
push
add
fwait
mov
les
in
pop
mov
sbb
test
nop
cmpl
addr16
and
adc
mov
mov
cld
outsl
mov
dec
hlt
ret
jns
loop
sub
sub
xchg
movsl
xor
xor
orl
notl
jae
mov
sub
fsubs
stc
dec
lock
mov
cld
lcall
movsl
cmp
mov
dec
movsl
inc
jne
add
cmc
or
adc
push
stc
cmpsl
fdivs
push
inc
add
cmc
shll
jp
cmp
idivb
cmp
push
xchg
lods
mov
or
repz
popf
sbb
mov
bound
xorl
fwait
sbb
repnz
push
addb
pop
mov
movb
ds
and
jmp
mov
push
push
xchg
sub
fwait
in
mov
mov
sarb
inc
jle
nop
pop
aaa
push
in
push
xor
dec
stos
mov
sbb
cld
xchg
push
loope
fadds
xchg
imul
dec
movsb
push
inc
popa
imul
mov
lock
add
adc
arpl
xchg
or
sub
xor
pushf
xchg
mov
test
inc
and
test
mov
add
inc
mov
pandn
sub
cmp
jmp
cmp
adcl
repz
adc
mov
imul
fists
mov
push
and
adc
inc
aad
inc
cmc
cmpsl
add
out
adc
dec
lock
lahf
jbe
adc
cmc
jge
mov
mov
xor
dec
loope
inc
icebp
jecxz
inc
mov
and
push
sahf
pop
fsubp
xchg
mov
aas
in
add
or
in
xchg
xchg
faddl
jno
dec
sbb
push
lds
out
js
mov
jbe
jg
inc
mov
push
outsb
cmp
add
adc
fsubrs
hlt
je
dec
or
cmp
pop
sbb
xchg
push
cli
mov
cmpsb
fisubrs
fwait
loop
lds
add
pop
dec
mov
cltd
and
inc
insl
jge
stos
js
push
pop
mov
mov
push
adc
xor
pop
mov
je
adcb
cmpsw
mov
sub
ljmp
aaa
ja
ja
cmpsl
push
add
loop
adc
sbb
sub
dec
loope
pop
push
sahf
inc
mov
pushf
scas
sbbb
push
jmp
mov
dec
inc
inc
mov
in
leave
fidivrs
cmpsl
ja
push
dec
stc
sub
inc
jmp
insl
not
imul
bound
out
movsb
arpl
andl
sbb
aas
into
add
lret
aas
xlat
mov
xchg
stos
cmp
xor
imul
lods
jne
lods
cli
or
mov
inc
out
pop
dec
xchg
lea
lret
fdivrs
jmp
pop
in
dec
cmpl
sbb
dec
in
push
pop
jne
xchg
cmpl
and
mov
cld
pusha
adcb
or
push
insl
fmull
or
mov
ficomps
xchg
xchg
int3
jbe
add
add
xchg
pop
add
das
sarl
jne
dec
xor
fmull
xchg
dec
imul
mov
andb
nop
mov
rorl
push
adc
or
loop
jle
stos
das
push
and
sbb
pusha
xchg
inc
pop
jbe
clc
lret
mov
hlt
mov
pop
imul
jecxz
cld
loope
roll
inc
dec
lods
pop
into
enter
jns
cmpsl
cmp
add
mov
sbb
push
mov
cmpsb
mov
arpl
jp
jno
inc
cmp
mov
pop
xchg
push
ss
js
xchg
mov
add
shlb
dec
or
jp
cmc
mov
in
insl
push
xor
or
cmp
mov
or
sub
adc
jp
scas
test
xchg
or
xlat
js
sub
jmp
mov
sub
lahf
popa
ret
inc
pop
mov
pusha
inc
lcall
mov
mov
sub
ss
sub
mov
movsb
cmc
jnp
xor
in
jae
lds
iret
xlat
hlt
fistpl
or
mov
popa
addl
imul
and
loope
inc
fwait
sub
stos
and
in
imul
push
ret
fiadds
sub
sti
xchg
jno
sahf
jle
push
iret
sbb
cmp
xor
arpl
dec
mov
mov
hlt
sbb
pop
fisubrs
push
jne
mov
sub
mov
dec
sub
mov
int
call
enter
mov
in
daa
leave
jle
mov
lds
adc
mov
cld
aaa
push
jno
jae
push
bswap
lea
bound
int
or
mov
and
lea
pop
cs
fs
dec
loop
sub
add
jo
insb
orb
lods
mov
jmp
cmp
shl
cltd
cmpsb
push
dec
jne
nop
andb
mov
dec
xor
and
push
cmp
aam
ja
sbb
dec
es
daa
shlb
and
mov
pop
out
xor
js
in
lcall
sub
sbb
ret
xchg
cmp
in
data16
repnz
into
xchg
test
lods
test
mov
xchg
ds
shl
dec
repnz
call
cmp
mov
adc
xor
push
mov
mov
icebp
push
es
popl
lret
adc
out
sbb
cmp
test
mov
pop
ret
pop
rcrb
push
xor
sub
test
jmp
aas
cwtl
das
jno
cmpsl
cmp
inc
inc
les
cwtl
sub
xor
mov
adc
adc
mov
mov
mov
lret
dec
and
and
or
insb
stc
daa
jg
pop
sbb
sbb
mov
or
ja
sbb
pop
mov
negb
cvtdq2ps
jns
call
ja
hlt
stos
sbb
push
push
or
xor
cmp
xchg
dec
insb
mov
push
xor
sbb
pop
aas
mov
les
push
daa
xchg
pusha
xorb
addr16
jns
dec
loop
out
sbb
out
movsb
xchg
jnp
inc
lods
jmp
shlb
imul
sbb
pop
inc
loop
mov
push
and
inc
dec
and
test
or
aas
push
or
mov
jp
jo
mov
dec
aaa
enter
ffree
das
dec
xchg
mov
sub
push
aad
cltd
test
xchg
in
insb
mov
lret
int3
lcall
pop
loope
rorl
aas
ret
xor
das
xor
in
rol
inc
pusha
lret
or
dec
mov
mov
sub
addl
ljmp
call
add
mov
fdiv
add
hlt
mov
add
xlat
and
lahf
mov
add
cmp
cmpsl
inc
mov
jbe
dec
adc
int
pop
mov
add
insb
es
xlat
pop
iret
push
sbb
xchg
cmp
mov
xor
cmc
scas
sar
inc
mov
shrl
xchg
push
dec
gs
in
sub
imul
repnz
movd
inc
out
cmp
inc
cmp
shll
inc
sbb
push
pop
lret
jno
test
inc
mov
xor
push
test
jnp
movsl
adc
sbb
pop
mov
andb
clc
shrl
mov
xchg
out
add
cs
repz
into
or
pop
jns
lahf
push
lods
cmpsl
cs
inc
into
push
mov
sbb
xchg
xor
sbb
and
mov
fcomps
pop
and
push
jo
lcall
shll
fisubl
adc
pop
sbb
and
xor
dec
pop
stos
das
cmp
mov
movsb
xorl
imul
sub
clc
hlt
addb
dec
in
ret
inc
cs
popa
xor
push
loop
mov
inc
dec
dec
in
pop
or
aaa
jns
cmp
sub
add
andb
cmpsb
jae
sub
popl
lcall
bound
mov
xchg
les
dec
jg
sarl
les
add
cs
test
fs
cmp
and
pop
fucomi
nop
jmp
xchg
xchg
mov
or
loope
pop
pop
bound
ficompl
pop
jbe
hlt
lahf
pushf
mov
ret
add
mov
lea
lds
popa
adc
dec
mov
inc
shrb
lods
aad
jecxz
push
pop
add
lahf
push
inc
je
andb
inc
jmp
jge
pop
stc
nop
pusha
push
int3
push
add
xor
decl
sub
mov
xchg
imul
shrb
mov
add
fnsave
inc
mov
mov
scas
out
mov
mov
movsl
mov
xchg
outsl
dec
push
ljmp
pushf
xor
mov
mov
xchg
pusha
fdivrl
push
sub
outsb
jl
dec
inc
cltd
xchg
in
and
mov
psubd
sahf
lldt
addr16
xchg
xor
sbb
hlt
inc
cmpsl
inc
in
jo
xchg
xchg
jl
xor
shrb
pop
jne
loope
adc
testl
jecxz
jno
call
in
pop
popf
aam
xchg
shll
outsl
das
sub
dec
popa
fwait
dec
or
test
cmp
outsl
das
in
add
push
or
pop
cwtl
jge
out
cmp
ljmp
jno
in
fdivs
or
cmpsl
loop
lock
loopne
cmp
or
xor
out
cltd
sbb
mov
mov
incb
xchg
xor
nop
daa
cs
inc
out
lret
lret
mov
adc
aas
mov
add
fwait
stos
test
orb
sbb
xor
cld
push
outsl
push
sub
ja
push
mov
addr16
iret
lea
aam
mov
jmp
push
rcrb
imul
mov
sbb
push
mov
mov
dec
scas
adc
xlat
inc
sbbl
ficoml
hlt
adc
popa
or
ja
mov
mov
lea
rep
pop
rep
es
adcl
in
movsl
fbld
fildll
xchg
inc
dec
mov
in
sbb
lods
pop
leave
pop
ror
cld
or
pop
mov
jp
or
jmp
cmp
lret
cmp
jl
mov
xchg
inc
xor
jmp
mov
negl
push
addr16
fwait
icebp
lea
lret
data16
jb
mov
ret
mov
pop
jge
pop
sbb
adc
push
imul
arpl
pop
ljmp
lods
jnp
jmp
sub
das
dec
pushf
add
icebp
jno
lock
wbinvd
mov
adc
icebp
push
insl
inc
divl
mov
sbb
fildll
mov
fwait
push
xor
sbb
loopne
aas
scas
jle
adc
or
fdivp
cld
or
cmpsb
add
jb
push
lods
clc
ret
dec
in
icebp
adc
pop
xor
jo
daa
js
pop
inc
testl
ss
jb
xor
cmp
xor
and
xchg
pop
xchg
mov
aas
insl
jnp
sbb
cmp
into
push
push
fildll
pop
inc
mov
mov
loopne
ret
or
dec
xor
int3
add
adc
xchg
push
mov
dec
sbb
imul
ljmp
ljmp
fwait
cmpsl
dec
or
jb
cli
pop
dec
mov
in
insb
sub
aam
pushf
inc
or
xor
mov
dec
mov
ss
les
lods
jecxz
xchg
xchg
pusha
shlb
push
sbb
imul
lds
sub
out
adc
inc
inc
pop
bnd
or
jnp
sti
fwait
outsl
movsl
xchg
ja
mov
ljmp
mov
int3
jg
lds
sbb
outsl
fwait
cmpsl
imul
cmp
loop
mov
push
or
pop
sub
out
xchg
mov
js
movsb
sahf
mov
insl
loope
push
call
mov
cmpsl
dec
cli
pop
ja
mov
dec
in
push
out
dec
pop
ljmp
jo
cmpb
sbb
jno
mulb
and
cli
test
rclb
test
pop
shll
push
mov
pop
addr16
in
jmp
sub
mov
cmpb
jp
lret
lret
xchg
lahf
ret
lcall
adc
xchg
mov
in
pop
js
mov
movzwl
pop
and
scas
call
test
jbe
and
or
adc
and
divl
mov
dec
inc
xchg
or
lcall
jbe
addr16
scas
fstpl
push
add
sbb
scas
adc
xor
jmp
ja
push
sub
and
js
cmp
aad
mov
mov
adc
mov
inc
int
dec
lock
int3
xchg
cmpsb
mov
dec
aam
adc
aas
push
outsl
inc
inc
push
outsb
push
or
std
add
xchg
in
lods
aad
push
mov
and
aad
or
ds
adc
xchg
mov
mov
pop
icebp
insb
xchg
and
out
sar
loopne
jecxz
pop
fnstenv
rcl
push
rcr
jo
scas
jno
push
les
or
repz
xor
mov
xchg
sbb
dec
jle
jecxz
sbb
inc
loop
mov
repz
das
and
pop
xor
dec
jl
in
mov
neg
in
in
cmp
or
mov
or
pusha
fcmovnbe
into
jbe
imul
test
inc
shrl
sub
sahf
clc
dec
testb
sub
push
insb
sub
jo
mov
test
mov
jae
pop
jg
mov
cli
jns
mov
iret
dec
or
cmp
inc
mov
sub
je
scas
pop
or
adc
jbe
stc
add
add
and
and
cmp
mov
pushf
pop
add
cmp
jecxz
in
push
outsb
ljmp
mov
cltd
clc
xchg
imul
lds
es
sbb
mov
and
xor
add
orl
pop
shrb
stc
xchg
or
sbb
fs
cmp
push
jns
out
xor
test
jecxz
sbb
imul
lds
or
jmp
sarl
int
add
sub
pop
repz
ret
jo
fsubrp
sbb
dec
nop
inc
pop
repz
rcll
ja
dec
dec
das
stos
ljmp
stos
inc
lcall
es
mov
pop
inc
sbb
sbb
rolb
jmp
fld
cld
cmp
jge
xchg
cmp
and
in
or
add
lret
sti
outsb
daa
lock
imul
sub
sub
mov
adc
cwtl
leave
fld
pop
es
notl
xor
mov
xchg
add
xchg
scas
cmc
mov
xor
dec
add
pop
xchg
stos
test
add
daa
fwait
leave
pop
adc
sub
adc
dec
xchg
and
and
mov
inc
ss
fdivl
sub
fiaddl
cmpsl
icebp
mov
adc
cwtl
xchg
cwtl
push
pop
pop
mov
or
pop
pop
popf
int
inc
js
scas
es
or
aaa
push
cmp
enter
mov
arpl
mov
dec
mov
aas
out
in
lods
mov
movsb
pop
insb
je
lret
orl
aas
imul
inc
pushf
mov
fsubp
mov
ficompl
ret
mov
jnp
or
test
shlb
cltd
repnz
and
cltd
out
push
test
and
lea
xor
lcall
mov
lret
shlb
imul
xchg
pop
inc
dec
xor
mov
add
mov
adc
out
pop
icebp
adc
inc
in
xor
jmp
and
divl
fs
pop
stos
popl
repnz
xor
shl
jg
jmp
mov
push
mov
pop
mov
push
sbb
or
cs
sub
nop
xor
aam
xacquire
dec
push
nop
push
mov
testb
xchg
dec
pop
mov
out
test
pop
sti
mov
mov
jne
jg
push
push
loopne
loope
sbb
add
pop
xor
sbb
data16
cs
jo
insb
sub
xor
loopne
mov
add
and
scas
mov
sbbb
dec
pusha
icebp
insb
xchg
adc
cmp
out
or
pop
jo
or
rcl
ret
sbb
daa
mov
ja
loop
repz
pop
icebp
movsl
sub
test
cmp
cmpsb
mov
pop
xor
sbb
in
add
inc
les
push
daa
jo
ret
push
incl
push
out
ljmp
stos
xor
pop
pusha
mov
sti
psubsb
push
xchg
dec
mov
cmp
pop
std
xchg
dec
out
xor
fisubl
ret
push
add
sbb
pop
iret
add
pop
jae
add
sbb
cmp
cmp
ja
imul
pop
xor
insl
inc
inc
jns
xchg
push
hlt
mov
xor
in
push
and
lock
andb
mov
jg
pop
pop
mov
sbb
and
mov
mov
sbbb
jge
jae
jl
test
aam
push
push
jmp
rcll
xor
js
mov
push
gs
dec
lret
cwtl
ss
mov
lods
xorb
push
gs
push
xchg
push
xchg
lds
push
mov
nop
dec
sbb
lock
pusha
iret
mov
add
push
mov
popa
rorl
ljmp
and
daa
call
hlt
pusha
subl
rcll
test
shlb
adc
inc
je
sub
and
push
fs
nop
ljmp
fnsave
mov
cmpsb
mov
gs
dec
ss
jmp
sub
dec
and
outsl
mov
cmp
xchg
repnz
push
jne
or
inc
pop
std
cltd
adc
sub
jne
movsb
cmp
icebp
cmp
or
pop
dec
jg
xchg
shlb
subb
xchg
mov
leave
rcrl
push
in
iret
fnsave
nop
aaa
in
data16
mov
and
jmp
test
jb
cwtl
add
inc
lock
ss
rolb
xchg
mov
mov
and
dec
pop
notb
mov
lds
push
mov
setbe
cmpsb
imul
jmp
dec
jmp
ja
insb
jl
inc
sbb
movsl
sbb
pop
sub
xchg
repnz
push
addr16
cs
cld
dec
or
cmp
ds
fdivrl
dec
push
aaa
jne
fsts
sbbl
outsb
cmp
pop
push
sar
jmp
stos
in
jae
loop
inc
aam
scas
xchg
add
xchg
ss
pxor
pop
or
dec
fstl
mov
xor
cmp
cld
shll
imul
lahf
pop
mov
lds
out
pop
test
insb
or
pop
jge
shr
rcr
stc
pavgw
push
in
xor
enter
pop
pop
insl
jg
xchg
dec
pop
loope
imul
mov
pushf
or
push
inc
pop
adc
dec
lock
xchg
jp
imul
add
mov
sti
mov
xchg
xchg
scas
cmp
hlt
mov
sub
in
jle
insb
sub
push
lds
out
jmp
stc
xor
fldenv
push
data16
pusha
aaa
adc
scas
out
cmp
and
xchg
fsts
test
ss
dec
jge
in
clc
pushf
pop
sub
or
ss
js
iret
mov
dec
and
adc
jge
cmpb
ljmp
je
jp
out
sahf
sbb
les
mov
jne
call
shrl
jns
jae
add
push
jb
pop
pop
pop
push
aam
lea
jbe
dec
ss
dec
mov
pop
rorl
orl
push
push
sbb
clc
sahf
push
stos
lcall
insl
fsubrs
adc
out
inc
xchg
xor
xor
or
or
stos
gs
pushf
xor
mov
pop
ret
iret
outsb
in
fwait
adc
jns
xchg
jmp
add
inc
push
into
cmp
sub
jae
ds
rcr
cmc
mov
mov
cmp
add
inc
daa
jnp
jnp
sbb
in
sub
pop
cmp
movsb
add
dec
rorb
in
xchg
jns
loopne
fs
mov
mov
adc
fidivs
in
dec
mov
lldt
inc
repnz
mov
dec
aad
rolb
repnz
and
and
out
call
mov
lret
mov
xor
push
pushf
sbb
imul
adc
loopne
sub
sbb
ret
push
movsb
cs
xchg
bound
jne
pushf
std
mov
xor
stos
lret
sub
int3
mov
sbb
movsl
cmp
fstpt
stos
inc
xor
enter
dec
add
and
xchg
cmp
leave
js
xchg
jp
mov
ret
insl
in
fists
outsb
add
imul
imul
movsb
jmp
cmpsb
sbbl
sbb
sub
pop
lock
push
test
bound
mov
push
aad
enter
sbb
jle
cmp
loope
push
and
ds
jnp
adc
mov
mov
xor
call
popf
xor
imul
or
mov
aam
push
or
nop
mov
inc
mov
add
mov
adc
test
pop
push
and
scas
inc
dec
jle
pusha
mov
ljmp
sub
xor
addr16
jnp
cmpsb
movsb
pop
jb
xlat
icebp
xor
into
xor
inc
push
aas
xchg
loopne
push
push
cmp
add
andb
lcall
ds
nop
or
sub
ds
push
and
xor
in
fidivl
cmp
push
sub
in
inc
in
filds
fcoms
negb
or
adc
cmp
adc
jns
mulb
cmp
sbb
pop
sub
mov
sub
pop
imul
aaa
jb
pop
xor
push
and
xchg
pop
sbb
cmp
xor
xchg
fdivs
pop
in
fdivp
and
jb
ja
outsb
sub
cs
sbb
cmp
filds
fwait
mov
daa
mov
nop
movsb
add
sub
dec
and
jecxz
stos
push
shrb
inc
js
movsl
mov
or
xchg
cmp
sbb
pop
popf
adc
inc
jne
xor
loope
call
or
rol
sbbb
icebp
dec
pop
jno
jns
inc
iret
pop
push
mov
movsl
xchg
mov
loop
and
sub
add
pop
les
outsl
xor
js
cmp
and
test
mov
push
dec
xchg
xchg
jge
into
and
jge
push
subl
ja
push
sub
ja
addr16
data16
aas
cltd
out
fiaddl
pop
xchg
rolb
jo
sbb
add
scas
inc
out
mov
inc
add
xor
adc
enter
xchg
jmp
or
pop
inc
adcl
roll
test
mov
outsl
addl
sbb
out
test
xchg
psadbw
xor
lea
lods
icebp
in
and
notl
adc
es
lea
add
add
inc
test
mov
rcrb
adc
out
dec
fcmovnu
mov
insb
and
jbe
addr16
sbb
arpl
out
leave
out
pop
fdivr
mov
scas
xor
mov
push
or
mov
inc
lods
mov
test
xchg
xor
loop
mov
fsts
int
std
or
cmpb
arpl
lahf
loop
int
sbb
pop
insl
insl
push
cmpsl
int3
mov
sub
pop
imul
jo
cmc
adc
scas
inc
subb
mov
in
lods
jbe
iret
int
dec
fs
rcrl
mov
sub
cld
call
jae
out
xchg
xchg
or
in
ud0
mov
leave
sub
jbe
push
test
sbb
mov
and
add
jne
xor
je
pusha
sbb
adc
xchg
sbb
dec
stos
adc
pop
in
hlt
dec
xor
clc
outsb
repnz
pop
mov
mov
jecxz
sub
xor
frndint
es
xchg
add
or
or
mov
push
sbb
imul
inc
lret
test
subl
inc
dec
fstl
daa
pop
jecxz
mov
ljmp
mov
arpl
test
out
mov
xchg
adc
enter
arpl
mov
sbb
jo
imul
xchg
dec
inc
sub
mov
xchg
cmpb
ds
cmpsb
dec
jo
fwait
insb
add
lock
popf
fs
sahf
or
dec
dec
jg
lods
dec
ljmp
call
fildll
fabs
into
adc
ret
push
std
clc
xchg
pop
imul
notb
xor
enter
clc
sub
pop
or
fsubrs
cmp
fidivrl
push
push
call
lods
adc
arpl
mov
ljmp
stos
xor
enter
data16
js
outsl
mov
in
jmp
or
xlat
outsl
add
add
pop
pop
push
ja
loope
dec
dec
push
push
fdivs
fldenv
mov
push
mov
outsl
adcl
ret
loop
testl
sbb
data16
push
pushl
inc
push
testl
mov
adc
cmp
adc
hlt
xor
fisubl
aam
iret
mov
in
stos
les
fwait
dec
add
incb
andb
outsl
push
xor
ss
lods
lahf
insb
scas
or
adc
rolb
mov
leave
sub
add
inc
leave
jb
je
ss
jp
jns
jmp
mov
mov
sbb
pop
imul
mov
hlt
lahf
adc
test
out
clc
xchg
lods
push
and
jl
lahf
mov
lock
call
adc
call
fbstp
es
or
scas
pop
aam
int3
mov
pop
cs
out
jge
repnz
daa
dec
or
mov
into
std
lcall
sub
or
int3
jbe
cmp
js
push
fs
jmp
xchg
jmp
sbb
lcall
sbb
push
jl
cmp
out
push
outsl
ret
mov
mov
dec
or
inc
and
or
push
adc
ja
stos
xchg
pop
test
icebp
mov
mov
pop
add
pop
test
jae
fidivrl
pop
adc
lret
ja
or
xchg
lock
adc
inc
cmp
mov
lret
out
lds
mov
mov
xchg
jbe
das
movsl
aas
adc
popf
adc
vpcmpeqd
cmc
int3
into
stos
mov
sub
out
cld
xchg
xor
dec
sub
mov
jae
dec
cmpsl
sub
mov
js
jb
mov
xlat
mov
xchg
outsl
xor
loopne
js
jl
inc
dec
ret
add
insl
sub
jl
pop
pop
popf
sbb
jle
jmp
loopne
popa
cmp
clc
fsub
and
daa
out
mov
push
dec
setle
es
call
xchg
or
mov
push
mov
pop
mov
sbb
int
mov
dec
cltd
dec
gs
loop
loopne
insb
outsl
icebp
mov
repnz
mov
xchg
sub
xchg
adc
cli
push
xor
leave
jmp
mov
sahf
push
leave
fiaddl
sbb
push
stc
dec
push
or
push
insb
adc
lods
or
sahf
into
push
push
adc
movsl
icebp
push
push
add
jp
test
jle
pop
pushf
fdivl
sub
and
arpl
inc
sti
hlt
iret
outsb
adc
mov
xchg
fadds
lret
aad
mov
hlt
fstp
notl
xchg
adc
jl
sbbb
call
mov
mov
fucom
dec
rorb
pushf
dec
movsb
or
mov
arpl
pop
out
xchg
xbegin
dec
hlt
popf
adc
xchg
mov
pop
lahf
or
adc
inc
cltd
ss
ds
pusha
repz
jge
test
sub
jge
scas
scas
pop
ret
mov
es
inc
dec
mov
outsb
mov
clc
test
loopne
mov
imull
push
pop
add
sbb
mov
jl
push
and
inc
jg
stos
sub
std
adc
mov
cld
push
inc
mov
setle
and
scas
xor
jae
int
lods
inc
out
out
sti
testl
outsl
inc
or
adc
jl
mov
mov
lods
loope
sti
cmpsl
cmp
push
shrb
inc
mov
push
xor
movsl
movsb
aad
inc
pop
sub
pop
xchg
push
cmp
in
mov
push
pop
leave
xchg
push
mov
sbb
sub
push
fidivs
push
push
lahf
addr16
movsb
fdivl
movsl
xchg
cmp
or
je
cld
mov
mov
loop
js
jp
out
push
sbb
mov
mov
lds
pop
cmp
mov
dec
pop
imul
imull
hlt
cs
cmp
jmp
mov
xor
push
in
mov
les
adc
mov
cli
cmpb
test
cmp
inc
dec
adc
mov
or
inc
test
lret
movsb
push
popf
jne
ret
ret
es
mov
sbb
pop
push
cmpsl
push
stc
es
add
sub
aad
or
push
push
divb
daa
xor
jno
stc
pop
aaa
sub
sub
xor
sbb
sbb
lret
dec
push
jg
fistpll
sbb
mov
rolb
cltd
pop
lcall
dec
in
les
adc
out
dec
fists
jae
mov
faddp
and
cmp
dec
xor
cmpsl
cld
jae
in
and
mov
clc
js
xor
add
enter
mov
xchg
xor
aas
push
push
adc
dec
data16
adc
imul
add
popf
sbb
jp
adc
cltd
cmp
mov
adc
out
cli
push
mov
xchg
or
arpl
xchg
in
stos
lret
mov
add
jp
dec
lret
scas
imul
fsubrs
cmp
lret
das
mov
add
or
leave
add
sbb
mov
ret
pop
mov
mov
std
dec
dec
gs
inc
fnstsw
sub
test
jecxz
push
test
inc
fsts
not
lods
jno
adcl
push
stos
jge
xor
push
xchg
jnp
mov
test
pop
push
jge
sti
cmp
arpl
rorl
cmpb
jnp
sbb
sub
pop
insl
fdivp
enter
add
xchg
sub
add
push
adc
cmp
fisttpl
add
sbb
mov
arpl
int
dec
jecxz
cli
call
and
push
call
sbb
jle
adcl
iret
jecxz
ss
fdivs
mov
adc
or
out
or
aaa
lret
cmpsb
mov
mov
shrb
in
jb
out
push
adc
sbb
imul
divl
add
fs
and
fiaddl
rcrl
ret
sub
pop
ret
mov
fs
aas
push
inc
xor
sub
lea
mov
pop
sub
xchg
and
pop
mov
jo
hlt
dec
xor
arpl
in
inc
jno
out
lret
mov
lahf
sbb
sub
aaa
push
fwait
popf
leave
rcll
mov
dec
pop
jb
hlt
push
sarl
pop
loope
orb
xor
add
outsl
jmp
xor
or
testb
aaa
sti
leave
repnz
add
test
mov
aaa
jnp
jae
stos
mov
arpl
xchg
iret
mov
leave
pop
lods
cld
push
shll
nop
lds
xchg
cmc
push
sub
jnp
pop
faddl
xor
xchg
jae
lock
mov
inc
xchg
jl
cmp
add
in
pushf
jo
and
repz
pop
and
popf
dec
out
mov
jge
iret
cld
mov
fnstsw
pop
roll
ss
push
mov
xchg
dec
scas
lahf
imull
std
dec
add
pop
xchg
dec
dec
fnstcw
jmp
aas
in
inc
divb
inc
ja
cs
int3
cmp
insb
andl
mov
sbb
adc
sbb
stos
jno
xchg
lcall
out
push
lods
int3
jecxz
sbb
push
leave
mov
xorb
arpl
test
sub
ljmp
or
sbbl
sbbl
dec
sbb
fnstcw
xor
inc
hlt
mov
push
in
or
mov
andnps
mov
push
sub
stos
push
incb
scas
push
add
or
and
and
push
aad
cmp
insb
aas
cli
ja
insb
out
mov
adc
popf
test
test
jns
mov
outsl
xlat
pop
mov
fs
push
xchg
addr16
push
or
cs
xchg
jecxz
pop
insl
sbb
fldl
ja
outsl
int3
cs
dec
jmp
fisubs
dec
mov
ror
jp
scas
sub
sbb
push
jecxz
add
mov
outsl
fbstp
shlb
ret
cwtl
mov
aam
pop
icebp
dec
mov
sub
shll
xor
aaa
cwtl
out
inc
xor
jmp
stos
adc
sbb
cwtl
dec
movsb
mov
lods
sub
fmulp
and
clc
mov
adc
push
sbb
in
dec
lcall
daa
stos
ss
outsb
test
push
jns
outsb
in
push
movsb
mov
or
xchg
pop
iret
adc
cvttps2pi
mov
mov
sti
cmc
xchg
lret
pop
lds
call
adc
sub
outsl
sbb
cmc
push
mov
test
adc
mov
scas
sbb
fistpll
mov
cmp
or
jo
dec
sub
jno
lahf
call
subl
mov
lea
jb
popf
les
adc
add
mov
and
cli
imul
jl
pop
repnz
mov
outsb
or
cs
pop
push
aaa
dec
shrb
cmp
outsb
sub
sbb
out
stos
fs
adc
stc
nop
xchg
xor
pop
repz
out
popa
push
inc
mov
jae
nop
jb
cmp
xchg
pop
scas
les
rep
mov
pop
fstpt
xor
mov
in
pop
in
xor
ret
movsl
jno
ds
in
push
jg
ja
pop
cli
outsb
xchg
out
ret
fcomps
pop
out
dec
mov
pop
pop
inc
icebp
movsl
popf
push
mov
ja
aaa
int
insb
adc
dec
inc
mov
ja
js
fistl
paddb
sbbl
call
call
je
jle
js
jnp
outsl
repnz
andb
out
test
ljmp
fidivrs
lds
jno
bound
icebp
cmp
add
sub
mov
sub
xor
push
shr
je
jb
jb
orl
cmpsl
push
push
fwait
sbb
sbb
jae
pop
push
enter
xor
iret
xor
test
mov
pop
mov
lea
or
cmp
fisubs
pop
cmpsb
cmp
subl
movsl
sarl
sar
fucomip
hlt
xchg
ja
xor
in
dec
jmp
dec
push
mov
push
sub
mov
int
xor
xchg
nop
pop
call
or
or
sub
ret
in
dec
int
pop
out
test
pop
and
out
jp
mov
xchg
sub
xchg
dec
sbb
mov
shr
std
add
cmp
hlt
aad
ret
push
test
aaa
push
out
in
das
mov
add
cli
adc
sbb
jb
cmp
and
inc
sahf
push
xor
int3
arpl
imul
stos
jbe
mov
mov
fs
pop
adc
pop
ds
dec
pop
cmc
outsb
mov
mov
cs
lods
inc
ret
dec
ljmp
mov
out
test
lret
data16
loop
xchg
shrl
pusha
lahf
mov
mov
dec
aaa
push
std
stc
imul
and
repz
and
cmp
cmp
lret
lods
mov
inc
mov
fsubr
xor
sahf
mov
xor
inc
ss
or
sub
aad
in
addr16
pushf
movsb
jmp
lahf
jb
dec
mov
mov
xchg
xchg
in
mov
fmull
lock
shrl
fwait
push
ret
outsb
int
cmp
insb
xor
popa
lods
mov
jmp
push
dec
cmp
jecxz
push
out
adcl
imul
inc
hlt
daa
shlb
inc
sub
shl
popl
pusha
in
xchg
xchg
pop
test
cs
cmc
loope
push
xchg
iret
loope
add
inc
stos
scas
push
mov
and
repnz
cmpsl
sub
mov
mov
je
shrb
and
dec
lods
push
movsl
idivl
scas
out
mov
test
pop
jg
dec
push
lods
je
andl
cmc
push
shrl
iret
lds
les
hlt
leave
jge
push
jne
cmp
push
mov
in
lods
push
dec
jbe
je
shrl
mov
inc
adc
fstpt
fwait
in
divb
dec
push
into
iret
mov
pop
lods
shl
dec
add
stos
xchg
clc
jg
cmc
insl
xchg
dec
fcoml
cmp
push
in
and
xor
adc
or
jo
add
je
dec
xchg
in
push
pop
cmc
in
mov
rclb
repz
adc
pop
add
fs
push
clc
stos
jne
jle
lahf
push
lock
xor
and
nop
aam
shlb
popf
stos
test
jae
cltd
add
insl
jg
push
inc
mov
ret
sbb
mov
jmp
xor
pop
jmp
mov
or
xchg
dec
pop
je
jg
loopne,pn
xchg
push
add
gs
fdivrl
fldcw
jae
mov
xor
pop
ret
test
cmp
lret
mov
inc
ret
neg
inc
mov
mov
not
popa
pop
pop
mov
push
mov
add
ret
sub
dec
inc
ljmp
inc
aas
out
icebp
xor
and
mov
ret
subl
aaa
jne
pop
push
jno
arpl
popa
pop
cmp
and
and
xor
push
adc
stc
inc
push
and
push
aad
adc
imul
xor
mov
mov
jne
mov
arpl
shlb
jmp
int3
cld
or
sub
enter
inc
in
outsl
loop
ret
mov
and
add
dec
adc
push
xor
cwtl
data16
ret
jmp
ja
cli
mov
aaa
mov
and
loop
test
mov
pop
mov
sbb
dec
or
scas
cmp
mov
cli
dec
out
mov
cld
mov
xchg
sub
and
cmp
adc
int
test
pop
cmpsb
cmp
pusha
dec
fsubs
jno
int
add
data16
movsb
rorb
jl
test
mov
pop
ja
sub
ret
inc
test
adc
stc
pushf
jg
ficompl
cmp
mov
sbb
in
jnp,pt
push
sub
jae
xchg
push
mov
xchg
ds
push
cmpsl
popa
clc
lret
outsl
cmp
mov
inc
jle
jbe
sbb
mov
push
xor
cs
ss
and
fs
jno
or
pop
ret
xchg
mov
xchg
inc
fmull
xchg
jne
leave
xchg
js
push
mov
addr16
iret
xor
in
ja
jl
push
cwtl
movsl
in
stc
mov
sub
pusha
mov
gs
cmp
dec
lahf
inc
lcall
js
iret
jbe
xchg
aaa
clc
dec
cmp
daa
test
xor
pop
ss
popa
and
int
sbb
xchg
aas
pop
frndint
or
lds
dec
dec
dec
out
sub
jne
cmp
mov
cmp
out
jb
fsubrs
mov
movsl
mov
call
mov
in
int
push
adcb
scas
subl
xchg
sbb
cld
xchg
incl
fwait
mov
inc
repnz
xor
sub
add
add
or
fnstsw
in
inc
repnz
adc
frstor
lret
mov
jle
mov
mov
int
mov
mov
cmp
addb
pop
mov
pushf
lahf
cmp
xchg
mov
jl
cwtl
sbb
call
insl
int3
das
loopne
mov
adc
jae
pop
bound
mov
mov
cmp
push
hlt
aam
mov
push
mov
aad
xchg
cmp
roll
sbb
xchg
adc
xor
xchg
popa
shrl
or
ljmp
and
sbbb
pop
mov
pop
push
jle
int3
pop
ret
fs
xchg
jb
jbe
faddl
mov
and
lret
add
in
or
push
push
xor
gs
pop
stc
add
movsl
lret
ret
xchg
xor
and
rol
mov
test
int3
scas
shll
pop
adc
jb
xor
popf
mov
data16
jne
sub
in
pop
jecxz
xchg
cmp
lret
sbbb
push
hlt
out
popa
mov
jge
leave
pop
enter
movsl
ljmp
and
push
sbb
or
dec
cmp
pushf
and
xor
mov
scas
xor
lret
ds
jl
adc
add
int3
arpl
inc
pop
cli
in
into
mov
or
cmp
fistps
mov
jmp
jo
movsb
repnz
jmp
adc
mov
jecxz
shrl
pushf
jg
idivl
pop
lods
es
test
mov
mov
loope
xor
icebp
loop
sub
lret
adc
sti
rolb
in
adc
adc
mov
add
ja
mov
add
push
push
adc
scas
mov
or
mov
leave
push
test
and
mov
or
sbb
test
test
xor
daa
xchg
stc
and
cwtl
and
mov
jg
in
hlt
repz
jecxz
loopne
add
sbb
insb
out
aam
das
shlb
jp
dec
mov
test
lock
sbb
pop
or
xchg
adc
xchg
idivb
in
jbe
pop
pop
cmpsb
jp
xor
or
xor
sub
insl
push
mov
adc
movsl
lea
stc
sahf
add
scas
mov
ja
dec
test
cmc
dec
or
mov
fldl
scas
loopne
add
jnp
pusha
ds
inc
mov
in
test
out
data16
in
pushf
sub
outsl
mov
repz
and
jae
and
arpl
pop
push
frstor
fisttpll
and
sbb
cmp
call
xchg
jb
and
fmull
mov
push
pop
jecxz
test
imul
lcall
imul
std
out
mov
jge
adc
std
jp
xchg
push
sarl
imul
jnp
fsubrs
or
adc
mov
jmp
lea
fwait
lret
mov
shl
xchg
xor
xchg
jl
lcall
mov
aaa
ret
and
lods
add
lock
push
push
loope
mov
push
jge
inc
out
je
add
sbb
jno
insb
fbstp
rcrl
push
mov
xor
xchg
shrl
adc
pop
lock
mov
mov
xchg
or
jno
push
push
push
pop
adc
jo
mov
jnp
mov
mov
pusha
scas
mov
scas
jb
and
inc
jge
xchg
push
loope
pop
icebp
mov
pop
cmp
movsl
cmpsb
mov
sub
pop
lock
or
xchg
jl
fisubl
mov
mov
inc
jne
and
in
mov
add
fidivl
sub
fwait
cmp
call
and
iret
clc
inc
add
fisttpll
lahf
fbstp
aas
push
or
lret
std
cs
jl
dec
lret
mov
push
movsb
je
lret
sub
mov
sbb
scas
aam
movsb
jmp
stc
icebp
sbb
in
notb
mov
ret
sbb
lcall
adc
ja
enter
shll
push
pushf
xchg
in
stos
and
ljmp
inc
xchg
adc
or
mov
int
popa
mov
push
mov
dec
dec
push
mov
imul
in
push
gs
mov
ret
shld
and
lea
jge
mov
out
cmp
in
out
imul
roll
mov
add
add
jne
mov
mov
fisttps
ds
stc
outsb
stos
add
sbb
cmp
cli
jp
cmp
cmpsb
xor
fsubrl
test
push
das
clc
adc
loopne
jno
mov
mov
sub
mov
in
mov
ja
mov
adc
pusha
int3
cmp
push
xchg
mov
mov
push
inc
sub
rol
sub
mov
insl
outsl
insb
xor
mov
fidivs
test
stos
pop
and
ret
adc
call
and
adc
mov
pop
sub
data16
test
mov
push
add
das
roll
xchg
scas
orl
sahf
cmp
stc
mov
jo
jns
sbb
add
aad
pusha
inc
into
enter
lods
movsl
insb
xchg
jns
jo
jecxz
mov
and
lods
xlat
sub
dec
in
icebp
inc
int3
dec
xor
mov
inc
inc
movsl
mov
push
aad
mov
ret
xchg
mov
sub
mov
ja
jle
jge
lea
push
mov
mov
stos
in
push
fst
mov
inc
cs
repz
pop
xchg
das
cmp
cmc
ucomiss
leave
push
mov
dec
and
js
add
cmp
sub
clc
in
mov
ss
jg
lret
pop
sahf
pop
cmp
jge
test
push
adc
jmp
xor
add
int3
lret
jae
xchg
ds
pushf
sbb
pop
push
xchg
add
sub
out
pop
std
inc
mov
imul
les
jb
fcomps
push
mov
pusha
push
or
fcomps
dec
imul
dec
repz
jp
dec
xchg
in
adc
inc
inc
leave
adc
sbb
xor
mov
arpl
adc
mov
addr16
testb
movsl
in
lcall
inc
mov
push
gs
sbb
fmulp
sbb
cmp
or
add
sbb
pop
shlb
mov
sqrtps
jp
cmp
test
int
pushf
cld
stos
adcl
loopne
push
jo
js
and
mov
out
jno
xchg
int
lcall
mov
push
jmp
outsl
pop
std
cmp
fwait
das
push
mov
xor
xchg
ret
push
or
adc
push
pop
add
jl
mov
insb
imul
sbb
adc
int3
es
jecxz
jnp
imul
repz
scas
and
shl
xchg
lods
adc
cs
xor
mov
push
lret
std
jmp
out
xchg
push
cwtl
cmp
cmp
mov
or
mov
pop
addr16
out
inc
mov
pop
call
jg
out
imul
jae
jg
rep
mov
sbb
and
mov
sbb
cmp
jle
insl
outsb
jl
jle
int
jo
loop
mov
ds
jge
fdivrp
fmuls
test
test
sub
fldt
pop
cmp
cmp
fbstp
aam
imul
cld
repnz
sub
dec
aam
js
or
cwtl
mov
push
outsb
loopne
mov
add
sahf
jns
sbb
cmp
xlat
dec
aad
ja
mov
add
sbb
xchg
xorb
xlat
clc
mov
icebp
jge
push
xchg
xchg
push
shrl
negb
xchg
xlat
loope
sbb
fisubl
pop
gs
out
jb
in
ss
ss
add
inc
std
stc
pop
push
insl
push
fisubrl
sbb
dec
pushf
fs
mov
popf
cltd
adc
int3
icebp
movsl
fs
rclb
mov
dec
xor
test
and
lret
lods
cwtl
sti
adc
and
sub
xchg
xchg
and
and
int
sub
push
jg
dec
inc
and
dec
fldt
cmpsb
cmp
or
les
jo
adc
ds
dec
xchg
cmp
dec
xchg
lcall
inc
and
repnz
je
xchg
movsl
lds
add
push
int
rolb
sbb
fildll
in
inc
push
jge
pop
lock
and
or
xor
xchg
out
push
jbe
push
xor
mov
add
int
imul
pop
mov
jno
sarl
or
sbb
dec
xchg
mov
cltd
ljmp
out
imul
push
jbe
push
mov
pop
lahf
pushf
sbb
jnp
loop
push
pop
adc
leave
cmp
xor
xlat
adc
mov
cmpsb
jge
jmp
test
fwait
push
sub
or
cmpsb
cmp
std
xor
movsl
mov
cmpsb
push
out
data16
sahf
adc
js
xlat
mov
lods
push
xchg
sub
lret
and
pop
push
stos
popa
xor
add
mov
in
adcb
or
movsl
dec
jb
pop
outsb
imul
mov
repz
shll
insb
sub
imul
mov
or
and
out
or
dec
and
xlat
fidivs
icebp
andl
mov
js
scas
mov
mov
pop
fwait
inc
adc
dec
in
mov
test
dec
xchg
push
xor
loope
mov
int
scas
xor
fmulp
lea
popa
mov
nop
mov
fisubl
xchg
mov
loopne
icebp
shll
xchg
cmpsb
jg
icebp
mov
cs
add
fptan
inc
push
inc
push
inc
ljmp
loope
push
cmp
ss
xchg
icebp
test
fidivrl
adc
mov
cmp
xor
xlat
fnstsw
cmp
mov
jmp
bswap
fcmovnb
je
xchg
jns
sub
dec
push
or
dec
xor
xchg
dec
sub
filds
cmc
inc
cmc
push
pop
dec
into
lahf
cltd
std
xchg
aas
out
das
out
sub
lock
add
inc
lret
bound
push
mov
xor
aaa
repz
bnd
inc
push
or
imul
sbb
and
int3
cmp
pop
mov
sbb
lods
sub
in
xchg
inc
pusha
ss
adc
shlb
sub
inc
xor
addl
mov
aad
xor
out
dec
push
movsl
into
xchg
inc
sahf
inc
out
mov
rol
int3
push
movsl
std
in
mov
dec
loope
jge
stos
in
daa
sbb
das
scas
jo
ror
mov
cmp
lds
cmp
pop
lock
pop
mov
or
js
arpl
xchg
rclb
inc
ljmp
ljmp
inc
fs
lock
push
jmp
mov
out
adc
push
out
pop
xor
inc
ds
notb
jb
cmp
jge
mov
pop
cld
xchg
mov
int
sbb
and
push
mov
ret
and
scas
push
adc
inc
stos
jmp
cli
mov
out
lahf
cmpb
test
xor
sbb
test
fidivl
mov
lret
imul
addr16
ret
pop
hlt
or
push
push
push
arpl
jns
inc
lahf
jo
push
jecxz
out
jae
sbb
xchg
jge
adc
dec
mov
mov
xchg
sub
sub
ja
sub
mov
adcb
cmp
sub
mov
mov
push
cltd
sbb
fwait
pop
mov
fildll
inc
cmc
repz
lods
sbb
ret
pushf
fwait
sbb
mov
add
test
subl
push
shl
pushf
sbb
dec
inc
mov
xchg
xor
jbe
push
hlt
and
dec
and
xchg
icebp
mov
out
sub
dec
bound
ja
es
scas
mov
and
and
int3
or
lcall
cmpsl
mov
dec
pop
ret
sub
movsl
pop
ret
clc
out
xchg
jo
loop
insl
and
mov
sbb
cwtl
mov
out
or
xchg
adc
adcl
cs
inc
adc
testb
dec
sahf
sub
jno
mov
or
inc
imul
pop
popa
xor
xchg
cmpsl
rolb
mov
pop
repnz
xor
negb
add
push
jge
jmp
testb
push
xor
or
nop
scas
lods
rol
test
les
jo
push
pop
xchg
test
dec
cmpsl
mov
es
call
jae
dec
fs
xor
mov
std
outsb
rclb
sub
sub
xlat
sbb
cmp
fst
push
cli
xlat
push
cmp
testl
pop
sahf
dec
movsb
sub
and
push
fimuls
je
or
jl
hlt
daa
test
imulb
xor
cmp
mov
cmp
xchg
jp
push
call
nop
fiaddl
ljmp
lods
inc
popf
jmp
enter
loopne
outsb
fwait
out
xchg
ret
adc
jnp
ret
lea
mov
pop
push
dec
pop
lock
rorl
xchg
sbb
addr16
pop
insb
in
push
jno
test
cmp
out
xchg
or
inc
out
mov
inc
fcomip
and
push
cwtl
lea
in
adc
cmpsl
aad
push
cld
lcall
adc
lock
imul
fnstsw
dec
lcall
sub
adc
mov
mov
pusha
int
adc
loop
das
repz
movsl
adc
dec
dec
stos
inc
repnz
enter
xchg
pop
js
out
std
mov
test
push
push
ficoms
mov
cmpsl
cld
and
xchg
sti
pop
mov
ss
sub
aaa
mov
mov
mov
mov
jle
push
mov
ret
sti
leave
cmp
in
dec
mov
inc
cmc
ss
clc
arpl
cs
push
dec
js
sub
nop
fwait
into
gs
mov
and
mov
arpl
inc
push
xor
jns
cmp
lock
pop
out
cld
int3
pop
outsb
mov
mov
je
xchg
mov
xor
rcrb
mov
push
fstpl
mov
jb
inc
cmc
xchg
mov
dec
adc
aam
cltd
lds
addr16
test
adc
lds
sub
xor
and
jnp
sbb
add
daa
dec
stc
mov
ret
stos
repnz
dec
int3
pop
jp
xchg
and
mov
nop
mov
sub
pop
fbstp
adc
pop
cmpb
dec
repz
add
outsl
mov
jg
lcall
or
sub
jl
std
xchg
adc
jno
sub
push
in
and
pop
movsb
dec
add
js
jno
push
outsl
xchg
cmpsb
in
cmp
mov
pop
out
je
adc
add
cmp
jae
pop
or
cmp
dec
xchg
jmp
stc
dec
dec
loopne
and
jbe
out
adc
sub
push
insb
pop
lea
aad
call
or
mov
jmpw
mov
aaa
imul
dec
add
repnz
xchg
and
sbb
shr
lods
and
jp
cmp
inc
ret
fsts
andl
mov
cmp
mov
cs
icebp
nop
movsl
adc
lret
sub
fldt
jb
fstl
pusha
divl
stos
add
mov
cwtl
adc
inc
fs
push
jae
push
and
add
test
mov
pop
mov
add
cwtl
cmpb
out
addr16
bound
je
pop
cltd
test
add
add
jb
js
test
mov
cmp
inc
lods
sar
push
pop
std
push
cmp
dec
insl
add
pop
and
in
outsb
dec
out
iret
cmpsb
fwait
rcrl
push
mov
xchg
sub
dec
dec
in
lock
and
cmp
stos
or
dec
jb
mov
adc
lret
idiv
ds
mov
sbb
add
test
inc
dec
fs
jne
sub
inc
push
cs
das
in
add
xor
into
data16
lcall
cmc
mov
jb
mov
lret
into
jbe
bound
aas
push
sub
adc
cmp
addb
mov
mov
mov
sbb
adc
incb
sti
je
or
hlt
movsl
sarb
pushf
and
in
fs
xorl
scas
xchg
fcoms
jle
mov
fs
inc
stos
jns
iret
and
insb
push
addr16
adc
idivl
sbb
pop
add
jl
popf
xchg
ds
popf
xchg
jg
fisubl
fsubs
pop
cmpsb
jae
sub
arpl
mov
aam
push
addr16
test
lret
inc
mov
fs
cs
xchg
adc
jmp
loop
loop
mov
pop
repnz
jmp
ds
or
dec
mov
fs
sarl
xor
mov
sub
sbb
jbe
pop
sub
xchg
int3
pop
cmpsb
jbe
add
cltd
mov
cmp
mov
lahf
stos
jae
mov
popf
scas
xchg
pushf
scas
fwait
jb
icebp
mov
push
jbe
fisubl
lcall
fldenv
icebp
push
sbb
rol
dec
adc
pop
xor
fldenv
ds
mov
fstpl
inc
pop
jns
and
xchg
jmp
aam
stc
popf
pop
xchg
test
int3
mov
shll
fistps
pop
add
bound
xchg
push
jae
cmovbe
inc
sbb
inc
cmpsb
imul
xor
push
lcall
cs
dec
pop
call
add
push
loop
orl
and
int
je
inc
js
mul
aam
adc
iret
mov
scas
das
and
push
mov
mov
decl
cs
inc
pushf
jp
dec
sbb
adc
jecxz
cld
add
cmpb
mov
pop
jo
push
fcoml
pop
rol
add
push
mov
out
popa
shl
fldl
xchg
arpl
test
lods
push
cmp
cmp
fidivl
jge
inc
sub
nop
mov
mov
gs
cmp
outsl
inc
or
mov
cmp
sbb
divl
mov
dec
add
mov
xlat
outsb
sbb
push
shll
rcrb
sub
inc
push
aas
nop
inc
add
movsb
aad
in
lds
cmpsb
aas
and
outsb
imul
lock
scas
xchg
sti
xchg
ret
rcrb
mov
push
addb
scas
mov
int
test
inc
sub
lds
cmp
xor
jbe
or
loope
jne
pushl
cmp
pop
mov
hlt
mov
xchg
push
in
aaa
in
pop
fwait
dec
dec
mov
or
das
and
or
jmp
push
dec
xor
xor
int
inc
icebp
jge
lahf
xor
movsl
enter
add
mov
cwtl
sub
mov
int
leave
sbb
xchg
insl
jg
cwtl
imul
std
inc
mov
aaa
xchg
sbb
pop
dec
add
jp
sbb
les
ja
add
leave
mov
rcll
ss
movsb
add
add
jge
jo
loop
cmp
popf
sub
hlt
in
jle
loop
pop
mov
push
subl
cmp
fwait
notl
leave
mov
cmp
es
lahf
jecxz
rcrb
cmp
ja
adc
lods
test
xorb
sub
pop
mov
jp
pop
hlt
mov
shlb
pop
pop
popf
repnz
jns
fsub
lds
lret
js
cmp
dec
insb
test
scas
pop
mov
mov
lea
aad
sub
lahf
or
js
cmpsl
lods
xchg
cli
mov
xor
scas
mov
lea
lahf
aas
xchg
out
testb
movsl
fdivl
mov
pop
call
adc
in
movb
shrb
xchg
test
mov
pop
les
cmp
xor
jmp
adc
jbe
outsl
das
sub
push
rorl
mov
pop
cmp
xchg
sub
xor
mov
mov
pop
cmp
fwait
outsb
arpl
shr
mov
out
in
aad
sbb
inc
push
pop
and
dec
popf
mov
popa
mov
dec
cmc
mov
add
xchg
sub
adc
dec
test
iret
and
in
test
stos
js
fnstsw
add
add
jno
jp
pop
inc
movsl
pop
dec
dec
push
arpl
add
push
mov
adc
jo
inc
cmc
push
roll
dec
fidivrl
adc
sti
jl
pop
nop
dec
or
add
cmp
dec
andl
je
jmp
js
mov
pop
push
je
push
jne
les
cmc
scas
jnp
or
sbb
imul
fidivl
fwait
xor
adc
imul
adc
pushf
add
ret
nop
dec
aas
dec
xchg
aad
jge
hlt
rcl
cmp
in
mov
iret
data16
ljmp
imul
mov
clc
pop
out
mov
sub
mov
test
jg
test
pop
nop
negl
enter
mov
mov
jbe
shl
push
montmul
cmpsb
xchg
pop
cmp
ja
dec
mov
xchg
lea
fwait
movsb
fwait
insl
stos
inc
pop
test
mov
test
jbe
repz
out
inc
sub
adc
sti
popa
cmp
push
mov
sub
sub
out
scas
push
mov
fucom
cmp
jno
fnstcw
das
inc
fwait
test
sub
inc
lcall
push
rolb
out
mov
jecxz
ljmp
out
cli
cs
dec
loope
sub
out
hlt
test
lods
sub
test
add
xor
cli
sub
pop
es
and
out
lret
xor
icebp
pop
mov
rcl
lock
fstp
pop
je
aaa
xchg
imul
or
testl
inc
leave
cmp
or
repnz
popa
add
xor
popa
jns
lods
enter
xchg
xor
sbb
call
mov
jp
incb
ss
xor
imul
mov
jp
lods
mov
push
ret
and
movsb
test
fnstcw
mov
jnp
lods
inc
pop
xor
or
jge
bound
inc
mov
les
mov
rol
mov
stc
daa
mov
add
jne
daa
jb
popa
xchg
jp
dec
adcb
and
out
inc
add
push
fidivl
mov
imul
or
add
scas
xor
pushl
and
fdivr
add
das
fs
xor
push
xchg
xor
mov
call
out
xchg
ret
pop
les
jge
ds
push
nop
test
dec
push
out
mov
sbb
push
dec
cmpb
movsb
lea
loop
in
jg
nop
jnp
adc
fcomip
push
scas
imul
push
xchg
sub
enter
leave
pusha
mov
push
mov
subb
xlat
ja
or
cwtl
pop
hlt
leave
push
and
in
sub
xor
fsubrp
push
leave
pusha
test
insb
add
mov
or
inc
test
inc
jmp
mov
pop
or
jecxz
push
clc
sahf
mov
inc
rcrb
rorb
dec
dec
movsb
stc
xchg
lret
push
rclb
cmpsl
xchg
dec
xlat
adc
imul
cltd
xor
test
popa
mov
insl
xor
loope
pop
in
ficomps
ds
in
mov
arpl
sbb
and
cld
lea
dec
in
and
adc
lret
ds
sti
sub
insl
lock
push
mov
mov
dec
addr16
leave
pop
jnp
lahf
stos
jecxz
and
clc
es
in
ss
push
add
xor
pop
cmpsb
adc
mov
in
cmp
xor
js
int
mov
sub
sub
outsb
pop
cmp
push
or
mov
push
mov
icebp
movsl
pop
insb
sbb
fnsave
jno
jle
cltd
xor
xchg
fnstcw
enter
cmp
mov
aam
cltd
add
cmp
lock
jno
pushf
xor
into
in
jae
outsb
push
out
lods
adc
outsb
fs
adc
xor
and
je
pusha
cmpsl
rcrl
mov
lods
add
aad
cli
js
ss
daa
fcmovnb
pushl
mov
lods
mov
lahf
jbe
xchg
sahf
lods
repz
jo
lahf
in
rcrl
mov
sbb
test
lret
cld
pop
push
scas
pop
into
xor
sub
fiaddl
sbb
push
int3
cmp
mov
push
push
xchg
add
subb
fdecstp
inc
in
add
out
outsl
ja
mov
in
push
jmp
loopne
xor
sbb
jle
cwtl
jge
dec
out
pushf
dec
notb
rcll
test
dec
ja
jge
push
mov
inc
jecxz
sar
cs
mov
fisttpll
push
push
das
pop
clc
pop
popa
rol
loopne
les
dec
xchg
add
and
pop
mov
jecxz
js
push
stos
xchg
dec
adc
sbb
shll
cmpsl
mov
shrb
mov
into
out
inc
sbb
insb
sbb
pop
pop
shr
ret
xchg
dec
repz
push
cmpsl
ret
aad
push
mov
or
out
push
test
subb
lods
cmpsl
nopl
inc
enter
xchg
test
insb
inc
push
inc
mov
sbb
push
xchg
nop
add
xlat
shrb
cmp
jne
mov
mov
das
jmp
imul
jno
int3
loope
sahf
and
jb
mov
stos
mov
jbe
stc
jecxz
stos
sbb
xchg
imul
inc
pop
lds
int
add
pop
or
lcall
push
in
mov
out
aas
arpl
pop
dec
dec
sarl
hlt
outsb
jnp
insb
movsl
inc
push
nop
in
jnp
push
movsl
iret
mov
loopne
push
mov
nop
adc
inc
inc
mov
adc
sbb
stc
test
pop
xchg
out
andb
mov
push
mov
shll
sub
lret
dec
hlt
mov
das
addb
sbb
xor
and
push
fisubrl
cmp
cwtl
lock
fcomps
jmp
fwait
mov
mov
out
push
leave
jg
hlt
jl
xchg
jno
mov
arpl
inc
sbb
repnz
jg
bound
push
idivb
add
ror
jecxz
iret
push
packsswb
ss
inc
push
out
test
out
mov
adc
push
rclb
mov
xchg
fidivl
rcrb
cs
mov
hlt
mov
push
xor
pop
sahf
add
mov
add
xor
loopne
jecxz
popa
daa
out
stos
and
call
inc
leave
test
xor
mov
fisttps
cmp
mov
jo
outsb
push
xor
in
and
mov
adc
push
fsubl
cmpsl
push
in
pop
lret
mov
test
xor
test
lds
hlt
mov
mov
popa
xchg
jb
mov
aad
dec
mov
lods
jo
xchg
adc
bound
lds
les
mov
in
sbbb
test
insl
mov
out
and
mov
inc
push
lcall
xor
lods
shlb
or
or
mov
xchg
jle
sbb
or
call
pop
jecxz
loop
lret
andb
pop
jmp
aad
jo
mov
cltd
test
inc
fstp
jl
lret
test
push
lret
xchg
cli
inc
cld
sbb
pusha
push
and
add
fistl
mov
xor
adc
xor
sub
mov
clc
or
jb
sub
cmp
inc
cld
mov
xchg
mov
movsb
or
jp
or
cld
inc
lds
pop
mov
push
fidivrs
pop
mov
cmp
movsl
pop
mov
sub
inc
push
mov
ss
out
orb
mov
loop
adc
inc
dec
mov
inc
aaa
fnstenv
mov
dec
dec
sbb
test
pushf
repnz
jp
ja
in
inc
push
cmpsb
leave
int3
adc
sti
aam
jp
fsubrl
js
inc
stos
cli
xor
pop
add
mov
pusha
push
mov
pop
aam
or
and
mov
es
imul
daa
loop
pop
rcll
push
pop
mov
fsubs
cltd
dec
shlb
fmull
push
fisubrs
push
outsl
lods
int3
int
imul
ror
sub
outsl
out
out
or
imul
ds
jmp
sbb
adcb
sub
xchg
mov
mov
jl
je
jl
ret
ljmp
imul
jo
jne
popa
lahf
pop
sahf
jmp
mov
jge
mov
push
stos
inc
fistl
xor
loopne
fistps
mov
ret
sub
xor
pop
and
aad
push
mov
cmp
ss
sbb
xor
dec
jle
sti
mov
fnstcw
fs
mov
ljmp
ss
add
lea
idiv
nop
and
sub
xchg
adc
lods
ret
scas
gs
sub
add
scas
and
push
jl
sbb
cmp
imul
jg
repz
fcmovnb
shlb
and
std
cmp
push
mov
ja
das
jbe
cwtl
lods
xchg
loope
adc
mov
mov
mov
cld
dec
cmp
ljmp
and
sub
gs
xchg
stos
stc
pop
fdivrl
fidivrl
fcomps
and
mov
push
mov
push
xor
out
mov
bound
idivl
shl
lods
pop
sub
popa
push
pop
addr16
push
enter
rcrl
and
shlb
cmpsl
out
xchg
push
mov
push
bt
sbb
cwtl
mov
pop
test
call
xlat
ljmp
daa
cmpsl
cmp
xchg
addr16
ret
kmovw
sub
cmp
aaa
jecxz
sub
xlat
xchg
dec
in
jne
loope
lock
popa
xchg
gs
mov
fcmovu
mov
mov
stos
leave
fisubl
int3
sbb
hlt
jnp
cli
inc
push
xorl
push
mov
sbb
movsb
pop
scas
and
pusha
ucomiss
bound
leave
ljmp
pop
mov
cmpsl
cmp
mov
test
daa
outsl
sub
sub
rorl
xchg
cmp
testl
push
fwait
xor
pop
xor
push
jae
xor
xlat
movsb
cmp
pop
int
arpl
inc
bound
mov
xchg
push
int
inc
lcall
or
xor
sub
cltd
cltd
scas
dec
jecxz
mov
cmp
inc
sarl
jae
ja
mov
fidivrl
jp
pop
and
mov
xchg
add
jb
push
mov
mov
xchg
popa
xor
dec
jl
sbb
xor
js
dec
xchg
addb
xchg
push
xchg
cmp
stos
ss
adc
inc
or
or
subb
dec
movsb
cmp
jle
aad
mov
mov
negl
cmp
fldcw
es
fimuls
andb
jne
inc
mov
dec
shrl
pop
or
or
xchg
push
sub
idivl
outsb
pop
cmp
sub
xchg
push
lret
mov
in
cs
adc
loopne
bound
sti
mov
lret
and
hlt
pop
idivl
add
mov
jge
adc
das
inc
cltd
fsubr
arpl
or
cli
roll
sub
lds
mov
stc
sub
cmp
mov
xchg
xchg
js
push
cmpsl
data16
es
ds
xchg
push
xchg
push
std
mov
jmp
dec
jmp
aad
shlb
add
fmuls
gs
dec
movsb
dec
test
jns
stos
or
pop
dec
ja
inc
mov
rcrl
xor
fiadds
fsubrp
jl
sahf
clc
xorl
lcall
sbb
sub
pop
fsub
ja
mov
mov
mov
mov
fld
mov
pop
cwtl
pop
shlb
lea
inc
mov
jb
int3
mov
dec
and
push
int3
lret
daa
mov
dec
scas
mov
ja
andl
pop
jmp
push
xchg
push
mov
int
push
gs
lock
add
pop
std
xchg
xchg
out
lods
cmp
cld
pushf
scas
fidivl
das
outsb
pop
jnp
xchg
xchg
or
sbb
push
sbb
xor
cmpsl
xchg
fdivl
aaa
pop
jle
cmp
addl
jns
scas
push
dec
cmpsl
out
dec
mov
push
leave
daa
sub
repz
scas
cmc
xchg
scas
fdivl
gs
pop
push
mov
xchg
fwait
jne
xchg
cmp
sbb
mul
out
inc
sub
xlat
pop
inc
hlt
leave
mov
sub
addr16
dec
adc
dec
or
pop
mov
lret
loop
test
cld
mov
daa
data16
jb
stos
mov
lahf
mov
in
cmp
pop
jbe
inc
inc
xchg
mov
ss
lods
data16
cmp
outsl
insb
js
loopne
jecxz
outsl
ret
mov
jmp
fcomps
add
bound
pop
lds
lods
fidivl
mov
and
sbb
call
dec
mov
stc
aaa
push
sbb
xor
push
adc
bound
ss
pop
sub
inc
dec
pop
push
mov
push
dec
in
sbb
push
jmp
popa
mov
sub
mov
sahf
ds
mov
sbb
xor
mov
aaa
mov
jg
and
repnz
gs
push
cltd
xchg
roll
cmpl
jecxz
pop
hlt
test
fisttps
ds
in
sbb
pop
repz
push
or
sbb
jge
mov
xorl
add
inc
mov
mov
push
insl
jle
xchg
mov
rcrl
repnz
clc
test
lds
mov
mov
idivb
add
fidivrs
fwait
je
lea
out
loope
shr
popa
inc
xlat
xchg
or
sarl
inc
cmp
scas
pushf
fld
lret
mov
lock
shrl
in
loopne
push
jle
or
aam
cs
rcll
add
xor
xor
xchg
xor
addr16
dec
popa
sarl
inc
fs
sub
cmpsl
xchg
inc
and
enter
cmp
mov
adc
mov
imul
jl
mov
sub
leave
cmp
inc
or
roll
pop
repz
sbb
into
enter
test
pop
cmp
js
push
sub
pop
jl
jmp
cmp
dec
insb
push
outsl
push
bnd
cmp
add
mov
stos
cmp
sti
ljmp
lods
xchg
enter
cmc
lret
in
add
inc
inc
arpl
pop
dec
fldl
in
movsb
pop
or
and
out
fs
inc
arpl
ret
mov
lods
xchg
aad
cwtl
mov
jg
loope
call
and
adc
ds
or
jno
aam
push
ljmp
pop
ficoml
cltd
and
fdivl
cmpl
mov
adc
dec
mov
fs
pop
negb
lds
pop
fbstp
xor
push
aas
rcr
mov
lret
inc
stos
mov
xchg
insb
push
outsb
cs
xlat
test
lds
add
cld
and
xchg
dec
ds
xor
xor
sbb
inc
pushf
in
jb
xchg
pop
adc
sbb
mov
push
xchg
sbb
mov
fst
add
dec
in
lods
push
insl
push
rorl
xor
xor
test
sbb
movb
repz
jnp
cmpsb
mov
aam
sbb
mov
sbb
push
sti
fwait
lods
sub
mov
push
cmpsb
dec
sub
and
gs
jle
adc
enter
adcb
pop
fbstp
cmpsl
es
flds
adc
and
or
data16
mov
gs
aas
int3
movsl
mov
xchg
mov
lea
nop
test
test
xchg
rol
stos
popl
sub
sub
pusha
movsl
mull
test
jge
add
sti
pushf
mov
inc
cmp
jb
dec
repnz
mov
xchg
test
mov
int3
aad
push
adc
mov
mov
adc
xchg
mov
lods
ds
call
mov
ret
je
jp
jnp
pop
iret
cs
pushl
outsb
mov
and
sub
aad
pop
jno
mov
cmp
pop
clc
dec
jle
mov
addb
clc
mov
sub
stc
test
jnp
cmp
dec
mov
adc
sub
sti
fs
and
sub
ljmp
mov
adc
cmp
aam
cli
out
fwait
mov
cmpsb
sub
mov
sbb
mov
mov
sahf
popa
jns
adc
out
jg
ds
cmp
xlat
dec
push
mov
mov
and
push
movsb
jbe
lret
into
mov
xchg
imul
into
pop
jbe
lahf
mov
lcall
pop
loope
add
repnz
jb
xor
dec
or
xorb
leave
xchg
cmpsl
jmp
push
pushf
sbb
int
aam
lahf
pop
xor
and
into
mov
jae
mov
ja
daa
cli
ret
shll
loop
jp
pop
fidivs
sub
pop
sbb
pop
add
in
xor
mov
loopne
sub
nop
test
or
or
cld
mov
sub
xchg
adc
ficoml
add
stos
xchg
sub
pop
scas
faddp
xor
xor
leave
ljmp
clc
add
push
pop
xchg
mov
dec
imul
test
add
mov
add
sub
scas
dec
sarb
jae
movsl
xchg
cmp
movsl
xchg
cmp
jecxz
pop
sub
mov
adc
fwait
mov
dec
mov
fnsave
cltd
xor
adc
movsb
mov
add
pushf
cmc
jne,pt
pop
repnz
inc
fidivrs
sarb
sti
sbb
sub
mov
jge
sub
xchg
daa
mov
sbb
sbb
sub
and
and
push
icebp
cld
lret
clc
fiaddl
incb
mov
adcb
cmp
cmpsl
push
cmpsl
cmp
inc
loope
movsl
addr16
inc
fidivs
cli
in
and
setge
dec
call
nop
stos
jle
pop
sub
fnstenv
lret
cld
and
adc
push
jp
sub
dec
mov
aas
cltd
pop
mov
jecxz
out
out
jno
jb
repz
jbe
stos
pop
or
int3
inc
xlat
std
mov
pop
push
mov
jp
lds
nop
or
jbe
sbb
jae
inc
inc
loopne
lea
pop
aas
inc
jecxz
dec
xchg
cmp
cs
ds
adc
pushf
xchg
xor
or
mov
dec
pop
jmp
mov
jmp
sahf
es
cmpsl
mov
mov
sbb
lcall
cwtl
iret
pop
into
fidivrl
mov
lods
push
repz
orl
xor
mov
add
scas
push
sub
cmpsl
adc
fmuls
xor
pushl
push
jmp
pushl
jne
mov
in
repnz
mov
scas
pmaxub
push
push
cmc
jle
push
daa
push
or
rorb
mov
fisttps
hlt
xorl
dec
cmp
sub
push
jmp
mov
movsb
leave
inc
shl
lods
mov
rorb
sbb
xchg
aaa
imul
lret
or
cmc
adc
mov
rclb
xor
hlt
add
notl
out
mov
aas
mov
gs
and
repz
sbb
movsb
inc
sub
in
adc
push
mov
sbb
lds
aad
and
mov
jae
fld
or
int
subl
sti
xlat
adc
inc
fidivrs
inc
lret
shlb
cmp
in
push
aam
push
pop
xchg
jno
add
adc
mov
out
jne
jg
add
rolb
hlt
mov
dec
loopne
ds
mov
dec
lock
repz
xchg
fwait
aas
pop
dec
insl
mov
ficompl
and
outsb
stc
loope
js
std
ret
or
push
in
mov
mov
clc
in
out
dec
jl
pop
iret
mov
ret
xor
dec
mov
pop
insb
or
out
stos
mov
add
xchg
jae
sub
pop
cli
cs
push
scas
out
dec
out
jp
out
rcll
jle
mov
mov
fprem1
mov
movsb
adc
sub
inc
cmpsb
xchg
dec
add
mov
pusha
adc
movsl
stc
xchg
in
cmc
loop
sbb
mov
cld
stos
jle
mov
inc
in
sub
cmpsb
sub
mov
push
arpl
xor
inc
imul
lcall
out
popa
dec
out
mov
push
push
sbb
aaa
sbb
xor
sub
adc
sbb
fwait
js
xchg
mov
hlt
mov
pop
xchg
jns
popa
lock
pusha
in
mov
xor
dec
pop
xchg
andl
sbb
out
inc
inc
cmp
loop
add
enter
add
push
xchg
inc
mov
int
scas
into
fsub
add
add
sahf
in
rcrb
jb
xor
bound
mov
sub
pusha
loop
mov
js
nop
lods
xchg
repz
lret
lret
dec
and
in
mov
mov
mov
sbb
out
mov
mov
sub
aam
stc
xchg
jne
push
fsub
stos
repnz
ret
mov
fpatan
mov
mov
shll
jbe
jnp
jmp
je
lahf
ss
xchg
adc
call
adc
cmc
xchg
jno
aas
je
dec
in
jmp
xchg
in
pop
imul
mov
xchg
or
roll
fwait
stos
jle
fnstsw
stos
and
shll
imul
cmp
mov
mov
loope
mov
addr16
jo
or
out
adc
or
adc
xor
mov
lods
push
jns
cmp
pause
inc
jmp
push
les
ret
adc
shll
clc
lods
insb
push
fisubs
stc
mov
adc
pop
fldpi
insl
test
xor
pop
clc
sahf
aaa
testl
sbb
das
popf
adc
pop
dec
dec
subl
lret
popf
cmp
in
inc
lds
in
dec
pop
popa
fnstcw
mov
aad
stos
mov
inc
inc
mov
fisubs
data16
mov
insb
sbb
mov
cmp
dec
xor
push
aad
or
add
xor
scas
inc
sbb
stos
cmp
clc
iret
sub
push
lods
clc
or
out
int3
sbbl
mov
loop
pop
sbb
mov
test
js
jae
mov
and
sub
sbb
xchg
shrb
push
ret
sbb
sbb
ds
or
xchg
filds
dec
and
das
lret
fdivrl
jb
popa
movsb
aas
pop
fbstp
loope
dec
push
inc
outsl
imul
jge
push
sbb
movsl
push
sbb
dec
mov
je
xchg
pop
scas
sbb
cmp
inc
cmc
xchg
pusha
dec
hlt
sarb
and
clc
outsl
inc
xchg
xor
stos
nop
aad
stos
sarb
inc
popa
jne
push
lahf
xchg
pop
lods
fcompl
addr16
dec
mov
aam
shl
dec
mov
sub
arpl
mov
stos
gs
inc
inc
out
pop
push
xor
in
push
inc
iret
popa
lods
inc
jecxz
adc
repnz
sbb
iret
orb
nop
out
shll
jg
bound
test
jmp
push
xchg
sub
sbb
inc
repz
cld
adc
lods
lea
mov
shl
mov
push
push
mov
test
inc
aaa
into
push
push
xchg
repnz
push
fwait
add
xchg
pop
mov
mov
adc
stos
repz
loope
adc
cli
gs
sti
clc
xor
ds
or
daa
daa
mov
fdivrl
stc
rcll
stos
cli
jne
mov
sbb
iret
xchg
push
inc
or
inc
cltd
push
dec
fmull
insb
flds
test
push
add
pop
out
sub
iret
or
pop
mov
sub
fwait
fwait
xor
fs
pusha
cmp
sbb
ds
and
pushf
inc
cli
or
gs
lret
rolb
repz
and
xor
out
jne
gs
stos
cwtl
das
ffree
push
add
or
push
cmp
mov
pop
or
scas
in
cmpsb
les
shrb
mov
jb
inc
fs
mov
scas
inc
mov
loope
jmp
dec
outsl
jnp
arpl
lret
sub
jecxz
stc
adc
shlb
mov
mov
adc
nopl
les
aad
aam
ss
xchg
mov
mov
xchg
push
mov
mov
ljmp
push
std
loope
lods
test
test
push
sub
out
mov
pop
aad
vpackssdw
sbb
pop
lods
and
insl
sub
push
outsb
xor
insl
lds
orb
outsl
daa
inc
je
or
sbb
add
imul
cmp
pop
cmp
cli
jnp
and
mov
pop
xor
inc
pushf
mov
dec
in
dec
pop
push
outsb
ds
pop
movsb
lret
and
inc
push
stc
add
cmp
dec
ret
pushf
pop
jmp
in
push
jmp
push
decl
ja
pusha
andb
pop
lret
fs
dec
sbb
scas
or
das
sarb
push
lahf
mov
inc
aaa
in
subl
gs
xchg
insb
xchg
dec
in
jnp
ror
pop
pop
sbb
dec
pop
mov
mov
nop
test
popa
dec
lret
dec
xchg
test
inc
pop
std
fsubrs
stos
subps
test
jbe
outsl
cwtl
loope
int3
loopne
mulb
aas
mov
stc
inc
loopne
out
arpl
jmp
mov
jmp
cwtl
sbb
ljmp
jecxz
push
xchg
int
sar
mov
pop
repnz
lcall
sub
mov
cmp
inc
sub
dec
leave
pusha
orl
dec
in
cmp
lcall
adc
jmp
and
sti
sbb
loope
imul
mov
mov
out
sub
jno
inc
lahf
and
jbe
xchg
enter
fwait
ss
lea
cmp
sti
jecxz
ds
push
lods
loopne
decl
mov
aad
mov
fstl
xor
stc
mov
roll
xchg
jne
inc
arpl
inc
pop
mov
sub
cmp
push
loop
or
jl
mov
fldl
out
test
pop
imul
xchg
add
shrb
xor
jno
insb
add
std
mov
incb
dec
push
flds
shr
loope
sbb
cli
addb
lock
movsl
and
lods
fmull
inc
push
shlb
js
std
in
adc
dec
push
xchg
xlat
jp
and
test
pop
mov
xchg
pop
dec
adc
xchg
inc
pop
mov
into
fldt
sub
xchg
out
das
rclb
incl
xor
lahf
and
popf
test
mov
das
dec
shrl
jecxz
aaa
mov
popf
xor
or
jns
jle
xor
pop
mov
push
in
xor
mov
in
sbb
test
inc
pop
sub
imul
mov
lods
mov
sahf
pop
ret
int
xor
mov
repz
outsb
xlat
outsb
sbb
inc
fwait
and
cmc
or
push
inc
fldl
mov
mov
je
addl
test
movb
inc
xchg
cmpsl
ret
pop
xchg
sub
js
jnp
mov
add
ss
andb
or
je
pushf
or
cmp
mov
jmp
call
inc
fcompl
jle
iret
mov
int
cmp
lret
mov
jle
inc
and
xchg
push
stos
jbe
mov
sub
jb
push
pushf
push
pop
scas
inc
inc
std
xor
inc
test
fidivl
and
cld
inc
jecxz
les
popf
jmp
repz
push
pop
mov
inc
pusha
out
cmc
inc
sbb
mov
inc
mov
scas
fxch
mov
cmc
add
jo
adc
mov
daa
aas
push
adc
movsb
pushf
xor
adc
cmp
notl
add
es
mov
ss
sbb
adc
movsl
lretw
repnz
scas
loope
adc
mov
adc
mov
add
mov
cmp
pop
add
cmp
pop
adc
jle
sbb
adc
sarb
push
imul
rorl
test
hlt
pop
gs
push
ja
out
sbb
pop
icebp
sub
pop
jle
rclb
inc
sbbl
cwtl
push
adc
enter
xchg
bound
add
out
inc
jne
js
insl
jnp
pusha
scas
ret
mov
sub
mov
sbb
push
into
orl
mov
add
adc
xchg
add
mov
popa
jp
daa
loopne
cld
cmc
mov
jle
pop
out
cwtl
push
call
dec
ljmp
mov
mov
stos
adc
es
repz
sbb
leave
mov
mov
xor
stc
stos
pop
jae
lret
xchg
ficoml
or
ret
mov
loop
test
lods
icebp
pop
in
dec
insb
jns
data16
push
mov
in
stos
mov
mov
dec
xor
lahf
shrl
cmp
mov
lock
lret
mov
mov
popa
xor
sbb
xchg
ja
rol
xor
testl
add
test
push
cmp
sub
pusha
sub
cmp
out
adc
push
iret
dec
mov
aaa
dec
cmp
lahf
out
cmp
push
ljmp
fdivr
pop
pop
pop
pusha
and
jg
dec
jns
insl
test
dec
xchg
mov
out
cld
loope
add
lahf
cmp
test
inc
stos
fildl
in
fbld
and
inc
xchg
movsl
add
mov
das
in
sbb
arpl
push
lods
push
dec
daa
call
es
dec
and
or
std
xchg
mov
xor
jle
xchg
cmp
scas
in
pop
mov
push
xlat
outsl
int
adc
xchg
push
mov
dec
mov
testb
imul
dec
xlat
mov
mov
stos
adc
inc
loopne
xor
jnp
sbb
aad
push
sbbl
outsl
subb
pop
push
xchg
call
test
and
sahf
adc
pushf
outsl
mov
push
notb
pusha
mov
in
fldt
mov
xadd
jp
or
inc
sbbb
fwait
cld
andl
ja
mov
dec
ret
push
push
fnstcw
lret
inc
add
insb
xor
std
mov
scas
sub
jb
jge
ljmp
cmp
mov
cmpsl
sbb
push
orb
jp
mov
sub
fmulp
aaa
inc
xchg
add
jns
mov
out
pop
and
inc
fadds
adc
push
loope
push
pushf
push
lds
adc
test
in
scas
daa
push
sbb
sub
dec
lea
fisubrl
mov
pushf
insb
loop
jp
dec
dec
dec
push
or
jmp
ret
call
add
jns
adc
test
in
cmpsb
jbe
mov
xchg
popa
call
inc
imul
stos
jne
in
int3
dec
jl
mov
or
mov
sbb
data16
sahf
orl
pusha
mov
sbb
mov
adc
imul
mov
clc
add
ret
scas
cmp
pop
mov
rcll
cmp
or
push
es
decb
pusha
arpl
adc
mov
scas
cmp
movsb
ss
cmp
push
mov
dec
xchg
mov
inc
stos
sarb
jae
fcompl
das
mov
bound
and
xor
mov
or
shrb
mov
sub
lret
enter
mov
sub
aad
sti
push
repnz
icebp
push
lahf
loope
sbb
jns
or
das
xchg
sub
fmull
and
inc
dec
cmp
xorl
inc
pushf
xor
push
in
jb
stc
mov
or
lcall
mov
xor
sbb
daa
int3
sbb
pop
adcl
xor
insl
ret
xor
mov
cli
aad
testb
ss
pop
push
cld
adc
xchg
mov
inc
push
ja
dec
addr16
jne
imul
xchg
outsb
rcrl
xor
test
dec
testb
aad
mov
cmpsl
lcall
jo
sbb
push
scas
pop
jae
xlat
mov
scas
jecxz
faddl
stos
add
xor
jnp
add
sbb
push
loopne,pn
mov
inc
inc
fwait
add
xorb
add
negb
aam
orl
inc
mov
jl
or
outsb
fisttpl
add
ret
bound
popf
mov
adcb
ja
xchg
es
xor
and
rcl
iret
pop
and
repnz
adc
sub
mov
fwait
sbb
test
push
inc
mov
push
mov
fwait
push
addr16
daa
shrb
addl
cmp
sbb
add
popa
add
iret
dec
idivb
mov
dec
pop
and
pop
outsb
mov
inc
call
daa
inc
xlat
xchg
clc
fistps
fcompl
enter
sbb
pop
inc
mov
jo
in
outsl
mov
mov
arpl
dec
add
adc
jbe
mov
sti
xchg
test
mov
pop
addr16
adc
faddl
out
fildll
lds
repz
xor
cmp
outsb
dec
insb
jmp
add
bound
lds
test
sti
push
pop
mov
aaa
loopne
mov
aaa
mov
jae
sbb
rcrl
jbe
pop
or
idiv
sbb
xor
or
mov
mov
jbe
inc
cli
jle
test
adcb
std
pop
xlat
mov
push
fidivs
cs
mov
call
test
sub
pop
jg
mov
jo
mov
into
lods
test
push
inc
xlat
test
popa
xlat
sbb
movb
enter
movl
jnp
xchg
ret
mov
popl
mov
push
and
or
sbb
mov
xchg
stc
mov
out
add
fimuls
adc
cmpsb
cmp
push
data16
or
lods
ljmp
insb
shrl
loope
jmp
fwait
sbb
mov
rorb
ljmp
mov
movsb
xchg
out
mov
jo
lret
pop
test
mov
jnp
adc
jno
sarb
fcomp
push
xlat
pop
les
movsb
and
mov
es
adc
cli
fucomi
fstpt
mov
mov
andl
inc
dec
mov
jg
mov
mov
mov
sbb
loopne
push
jl
andl
rol
sub
push
mov
scas
lcall
cld
ljmp
mov
xchg
inc
ds
out
xor
adc
fbld
bswap
mov
add
mov
and
cvtdq2ps
aad
sub
lds
test
inc
jbe
sarl
jp
subl
push
scas
cltd
jmp
ss
push
push
repz
push
inc
cli
lret
pop
fdivrl
inc
or
cmpsl
stos
mov
je
mov
sub
test
or
cmp
fistpll
les
push
fldl2t
xchg
data16
leave
cmp
xchg
cltd
pushf
cmp
mov
cld
or
fcomps
adc
jp
das
scas
and
mov
rorb
dec
sbb
jl
jbe
mov
mov
call
gs
mov
mov
fs
xchg
fistpl
jmp
jge
mov
and
mov
adc
adc
xchg
jge
dec
aas
and
ja
enter
xchg
or
rcrl
pop
hlt
sub
stos
in
push
in
inc
in
sub
mov
mull
mov
jne
mov
insb
decb
dec
jo
das
xchg
mov
jge
mov
jb
loopne
adc
aaa
clc
or
inc
fdivrl
arpl
jge
mov
addr16
arpl
pop
mov
fstps
lcall
in
inc
mov
fwait
clc
mov
inc
jmp
out
sub
pop
pop
arpl
notb
mov
jle
jecxz
and
push
mov
mov
jbe
lret
mov
cmp
outsb
neg
mov
push
insb
cmp
pop
insb
adc
jns
push
cmpsl
out
fstps
and
aad
lea
xor
outsb
or
lock
xor
jbe
cld
or
xor
gs
sbb
mov
mov
inc
and
imul
and
jns
incb
dec
xchg
mov
mov
jns
jb
repz
adc
out
sub
adc
mov
xor
sbb
inc
lret
pop
insl
jge
xchg
push
test
psllw
cmp
xchg
lods
test
fisttpll
add
mov
jp
push
pop
jbe
mov
jg
add
dec
cwtl
sub
dec
shrl
jne
cmpsl
add
loope
cmp
fildl
jae
sahf
aam
cs
or
adcl
lret
sti
movsb
jae
xlat
pushf
dec
xor
insb
cmpsl
in
sub
mov
mov
or
and
jne
sub
cs
fldl
data16
or
lcall
in
dec
int3
lret
fld1
cmpsb
push
out
test
mov
inc
fidivrs
jmp
aaa
addr16
push
add
nopl
push
das
sar
adc
stos
cltd
std
xchg
sbb
mov
xchg
xor
orb
jb
js
mov
call
mov
test
inc
cld
cmc
in
mov
sbb
and
cmp
xchg
pop
dec
gs
jb
and
hlt
mov
sarl
push
adc
pop
testb
test
cld
outsl
pop
orb
das
xchg
inc
aas
pusha
jg
popf
mov
mov
testl
dec
cmc
adc
test
test
add
test
xchg
mov
stc
lret
cmp
fldenv
mov
arpl
mov
les
mov
repnz
fisubl
dec
scas
inc
add
xor
lock
pop
icebp
or
lret
clc
dec
aam
aas
xor
add
sub
sbb
fstpl
add
inc
int3
fsts
mov
subw
push
add
xchg
dec
or
andb
aad
mov
icebp
mov
pop
vpaddq
loope
divb
cwtl
repz
sarb
and
and
sub
std
cwtl
lea
icebp
insb
mov
jp
mov
inc
fneni(8087
adc
xor
rcrb
xlat
loopne
dec
jp
aam
scas
fwait
aam
in
pop
jnp
sub
and
jge
mov
push
lahf
inc
leave
xchg
aaa
pop
xorb
stos
ret
outsl
aam
scas
pop
mov
jp
test
add
das
icebp
pop
or
push
sub
icebp
insb
add
fldl
inc
or
jg
xchg
push
iret
xor
movsb
loope
mov
movb
mov
js
dec
cmc
mov
jle
mov
or
mov
cld
jl
xor
fcompl
mov
push
test
dec
loop
jbe
roll
mov
push
jb
mov
je
mov
data16
cwtl
mov
lret
stc
xchg
into
jbe
test
cwtl
or
xor
ret
pop
or
xchg
sti
nop
mov
scas
xor
lock
pop
mov
test
push
mov
btr
push
jp
mov
dec
in
mov
insb
ret
inc
ficomps
aaa
repz
inc
ficoml
dec
cmpsb
jge
inc
scas
aad
in
push
stos
mov
lret
adc
push
rcll
jge
cmp
cli
pop
mov
icebp
jnp
sub
add
xor
pop
in
fmuls
int
ret
and
and
push
andb
push
ret
sub
pop
add
push
push
xor
shlb
xchg
dec
fs
xchg
clc
sbb
jne
xchg
jo
and
popf
rcrb
or
xor
shl
push
and
cmp
xchg
push
jno
fs
sub
xor
test
pop
loopne
in
jmp
inc
cmp
jne
push
aam
or
push
mov
insl
adcl
jo
push
fs
mov
aaa
cld
scas
nop
cs
mov
pop
idivb
xor
push
movsl
adc
jmp
or
add
mov
ljmp
test
dec
push
outsb
pop
divb
inc
nop
ljmp
lock
ds
sti
mov
dec
xchg
sar
ret
in
dec
xchg
jmp
rcrl
jb
movsl
mov
xchg
push
adc
mov
inc
push
das
sbb
lret
jbe
loopne
rcll
pop
lock
push
rcr
int3
ja
jp
xchg
pushf
nop
lock
cmp
insb
jnp
imulb
jge
xchg
lds
mov
popa
mov
js
or
aam
jmp
and
sbb
add
rcll
das
mov
test
xor
dec
fdivrs
imul
shr
clc
mov
mov
pop
cmp
push
test
add
push
inc
mov
inc
add
test
mov
cmp
mov
pop
push
cmpsb
icebp
lret
dec
arpl
ficompl
dec
mov
stos
outsb
xor
cmp
in
addb
insb
xchg
sub
sub
jge
mov
aaa
sbb
mov
jnp
rolb
outsb
jno
xchg
pop
fnstcw
ss
fnsave
lret
movsb
addr16
jecxz
xlat
call
test
xchg
mov
and
neg
adc
fs
aaa
into
and
and
push
jne
push
mov
pop
mov
call
add
cmp
pop
or
das
lods
pop
dec
pop
sub
das
sbb
loope
cwtl
mov
leave
jns
push
jns
imul
rcll
sbb
jge
loope
add
inc
xlat
loopne
mov
adc
arpl
stc
int
movsl
mov
fcmovb
push
or
cwtl
or
into
ret
repz
lods
outsl
movsl
adc
sub
ds
lock
mov
jg
mov
add
test
dec
cld
push
xor
inc
cmp
adc
std
pop
ret
in
rcrb
sub
inc
sti
into
js
pop
push
dec
pop
fwait
test
stc
pusha
pop
mov
jmp
and
popa
arpl
insb
aaa
mov
fwait
arpl
sarl
jns
xchg
scas
call
imulb
clc
rcll
xor
mov
imul
pop
mov
xlat
loopne
stos
jmp
inc
fdiv
jnp
testb
mov
test
sub
js
int3
popf
or
lock
cmp
adc
pop
mov
push
cs
lods
nopl
mov
xchg
mov
idiv
scas
stos
mov
and
jecxz
insl
add
fists
leave
mov
pop
xchg
adc
mov
jl
loope
mov
int3
sbb
int
jbe
cltd
adcb
xchg
and
or
push
push
mov
push
js
xchg
fldt
jno
pusha
aaa
and
xchg
aas
cld
and
cs
cld
pushw
mov
push
inc
push
inc
inc
sbbl
add
pop
dec
push
mov
inc
xchg
push
mov
loopne
in
adc
sub
ror
ss
xor
sahf
es
adc
or
sub
inc
pushf
lock
xchg
ljmp
in
sbb
in
push
sbb
pop
insb
subb
pop
add
add
popf
orb
jg
mov
jge
js
loop
push
adc
sbb
test
xlat
and
lcall
adc
pusha
pop
enter
pop
cmp
aas
push
xor
popa
lods
or
das
mov
push
add
add
fsubrs
stc
push
mov
sub
pop
cmp
in
iret
mov
mov
fbstp
inc
popa
inc
int
popa
push
call
ljmp
jb
mov
mov
dec
insb
dec
dec
dec
in
ds
test
sub
subl
add
scas
cmpsl
and
negl
fildll
jno
dec
pop
jb
and
sbb
shl
lcall
inc
fildll
incb
xchg
sub
in
sub
jae
testb
jge
lock
xchg
scas
sbb
pop
adc
imul
cltd
and
andb
ret
repz
movsl
int3
repz
push
inc
popa
cwtl
mov
pushf
dec
lret
xorb
iret
int3
mov
mov
int3
or
xchg
lods
inc
xor
cld
sbb
mov
dec
hlt
push
je
insb
out
into
mov
hlt
jns
popa
dec
out
and
cmp
stos
jnp
sbb
inc
sub
mov
sub
xor
push
mov
ljmp
add
sbb
mov
lea
cli
dec
mov
xlat
or
not
cwtl
stos
test
xor
sbb
sub
or
cmp
ss
add
mov
jo
sbb
ret
int3
cmpsl
cmp
imul
push
mov
mov
outsl
mov
rcrl
push
xchg
movsb
mov
lcall
es
int3
fidivs
fs
popa
adc
fiaddl
mov
push
ss
cmp
mov
loop
mov
mov
jle
lea
fisubrs
rorb
test
aad
push
xchg
dec
xor
add
sbb
movsb
and
lcall
in
mov
rorb
add
xorl
pop
sub
call
data16
data16
cwtl
push
adc
lock
xlat
das
insb
jg
outsl
icebp
or
mov
push
repnz
adc
mov
adc
xlat
pop
fisubrl
lea
int
cmp
leave
and
in
data16
sub
fucomp
out
int
jmp
pop
mov
loopne
clc
dec
mov
mov
shll
jge
fimull
or
int
lock
in
add
scas
insb
sbb
fidivrs
xor
mov
sbb
ja
stos
fimuls
call
dec
mov
in
xchg
mov
cmpsl
cmpsb
mov
popf
shll
nop
mov
ret
or
test
dec
daa
sub
rol
pop
add
loop
xchg
in
add
jno
mov
lock
dec
mov
push
movsl
and
and
sub
mov
xchg
cmp
shrb
sbb
insl
ja
arpl
pop
sub
dec
out
mov
mov
add
pop
out
add
lods
scas
fistps
inc
adc
pushf
cmp
push
inc
sbbl
imull
incl
pop
push
or
adc
mov
and
out
lahf
mov
sti
packsswb
mov
loop
jo
imul
dec
pop
nop
mov
mov
or
jns
jbe
pushf
jl
int
cld
push
sarb
lret
jnp
inc
and
mov
adc
fdivs
jne
cmp
hlt
ja
jb
sar
repz
dec
cmp
inc
jmp
arpl
cmp
sar
push
mov
out
mov
pop
mov
jecxz,pt
mov
ret
mov
in
sub
sub
std
fldl
lods
push
in
and
mov
gs
shrb
inc
inc
aam
mov
sub
mov
push
fcompl
sub
push
inc
xchg
lret
jecxz
lock
jmp
inc
in
or
aam
mov
sub
popf
mov
mov
fiaddl
loop
pop
je
int3
mov
pop
add
mov
jge
jl
mov
adc
lods
mov
or
jmp
sbb
lock
data16
dec
xchg
xor
fadds
or
into
xor
mov
cwtl
jecxz
xchg
cwtl
lods
stos
inc
jne
and
enter
xchg
mov
inc
pop
insl
push
mov
mov
and
mov
icebp
loope
lret
xchg
js
mov
ficoms
xchg
xchg
dec
cmp
lods
icebp
cmp
bound
jg
or
xchg
mov
xor
mov
loopne
aaa
imul
in
sbb
out
cmp
or
inc
and
out
arpl
mov
les
mov
sub
in
fs
enter
xor
cmpsl
roll
movsl
fiadds
mov
inc
loop
call
scas
ret
out
xchg
lret
or
sub
xchg
lcall
or
and
hlt
adc
mov
mov
scas
addl
jne
aad
popf
xchg
mov
jmp
jecxz
sti
js
loopne
xchg
and
arpl
data16
dec
cmp
mov
push
out
adc
xor
je
sti
pop
inc
adc
xor
popa
adc
scas
push
int
add
xchg
mov
jmp
pusha
leave
jbe
mov
pop
mov
mov
scas
push
jns
xchg
std
jo
sub
mov
cmp
aas
dec
sub
sbb
lea
ljmp
and
jge
dec
mov
inc
cld
xlat
stos
xor
mov
fiadds
js
xchg
insl
add
rcrb
jmp
test
daa
jmp
sti
sub
rcrl
lret
outsb
dec
xchg
cld
push
fwait
lea
xchg
loop
adc
adc
inc
mov
push
xor
imul
xchg
sub
xor
mov
dec
imul
out
stos
or
dec
dec
dec
loop
ret
jp
mov
jns
inc
push
jne
or
stos
cmp
lea
lods
repnz
stos
fstl
cmc
add
push
mov
jle
add
and
sub
lods
mov
jbe
jp
js
jmp
fsubrs
push
push
mov
jle
dec
mov
cwtl
mov
pusha
out
arpl
fldt
daa
inc
lods
ljmp
inc
fsts
pop
xchg
xor
jecxz
sub
mov
ss
inc
sbb
cmp
mov
push
cmp
cmp
loop
or
push
repz
adc
mov
aam
cmp
pop
dec
adc
xchg
and
dec
jb
add
sbb
and
pop
xor
outsb
sub
xchg
xchg
pop
cmc
add
mov
xchg
inc
xor
jns
out
cmc
mov
cmp
jecxz
push
sub
and
rcrl
dec
mov
jne
or
popa
push
inc
sub
sti
jno
xor
push
mov
int
add
lods
jmp
scas
cltd
popf
push
pop
mov
lret
or
mov
or
sbb
jns
jo
inc
mov
jle
jbe
notl
mov
xchg
into
popl
cmp
inc
arpl
icebp
bound
imul
xchg
mov
lock
aas
mov
mov
loop
xchg
sub
aas
out
test
fidivrl
jle
mov
xor
jl
inc
push
jae
loopne
sub
jnp
push
sub
adc
cmp
jecxz
and
idivb
lret
pop
out
loope
jne
sbb
das
push
xchg
aad
push
pop
xor
jnp
adc
out
or
adc
lcall
scas
push
inc
and
xchg
daa
test
push
scas
rol
sub
into
xchg
adc
sbb
leave
adc
int3
orl
rcr
or
push
jnp
stos
lds
fidivs
inc
sub
adc
pushf
xor
push
lods
mov
in
aas
mov
clc
mov
cwtl
imul
dec
mov
and
mov
mov
shrl
jbe
addb
add
idivl
mov
imul
les
int3
jmp
cmp
adc
mov
insb
push
adc
mov
fidivrs
xchg
cmpsb
mov
ret
sub
in
inc
jmp
mov
insb
div
sbb
lcall
test
mov
or
sbb
std
and
shl
jo
push
push
pop
jne
push
mov
jmp
fidivl
cmp
in
addb
mov
outsl
mull
dec
add
inc
mov
out
jge
cmp
xor
add
dec
into
pop
push
pushf
add
aas
outsb
sbbb
fprem1
fisubrl
scas
inc
cmpsb
push
jae
inc
int
or
mov
notl
jns
es
sbb
out
leave
lds
ljmp
lods
leave
and
int
cmp
add
push
in
insb
js
or
mov
daa
mov
jne
dec
inc
mov
mov
pusha
push
imul
std
adc
jb
xchg
dec
mov
daa
mov
in
push
inc
sub
cmpsl
ret
dec
cwtl
dec
mov
inc
push
cltd
inc
aas
sbb
cmpsl
std
aaa
adc
movsl
mov
sarb
fnstenv
xlat
aas
or
inc
mov
dec
pop
hlt
je
sar
adc
add
incl
inc
inc
ret
fbstp
arpl
sbb
scas
inc
sub
test
dec
scas
xchg
and
into
mul
lahf
add
js
sbb
repz
jns
cmp
jge
sahf
jle
ret
and
jo
push
lds
in
push
push
imul
sti
inc
cmc
add
arpl
jb
repnz
shl
insb
fldt
or
cwtl
mov
xor
jb
rorb
in
lret
push
push
jns
and
pop
mov
ds
jecxz
icebp
xchg
out
stos
cwtl
cmp
cmpsl
adc
imul
push
addr16
enter
mov
lcall
pop
cmp
cmp
popa
cmp
imul
sub
push
ss
or
jl
mov
divb
movsb
pop
mov
adc
mov
shl
inc
sbb
aaa
jecxz
ret
mov
loop
or
sti
mov
push
add
test
mov
ss
push
and
inc
pop
div
mov
es
scas
pop
xchg
dec
mov
test
or
fisubrs
push
cltd
jp
int
mov
jb
push
sbb
and
fucom
lods
rolb
test
test
and
lods
test
jg
out
xchg
incb
das
jg
scas
imul
je
pusha
test
adc
pop
xor
out
sub
loop
mov
int
jno
dec
adc
inc
fimull
dec
lock
lods
enter
pop
imul
xchg
pop
pushf
pusha
ljmp
cli
inc
sub
pop
xchg
daa
stc
dec
les
mov
mov
outsb
pop
mov
sbb
fsubrl
xlat
insl
jle
pop
xor
arpl
push
int
pop
ss
fdivl
mov
cli
pusha
repnz
mov
jle
cmp
fisttpll
xor
cmp
nop
cmp
and
sub
xchg
out
das
adc
mov
scas
outsl
fcmove
out
pusha
adc
jl
daa
lret
sub
mov
sub
std
dec
loopne
sub
and
rcrb
mov
inc
sti
xor
mov
cmpsb
fmulp
adc
push
outsl
mov
aaa
xor
sub
out
out
cld
and
jmp
test
fwait
sub
lods
inc
push
lahf
ss
mov
push
pop
pusha
pop
mov
out
jnp
stc
enter
pop
frstor
add
std
dec
popf
jae
dec
push
into
repz
inc
repnz
push
rcl
mov
sti
inc
cwtl
pop
dec
movsb
lods
in
push
lahf
xchg
sbb
inc
in
mov
shl
jmp
cli
or
push
mov
sub
adc
imul
and
jb
or
sbbl
sub
test
mov
ror
push
cmp
test
movsb
cmpsb
lds
cmp
inc
loope
je
mov
fisubrs
and
lods
pop
pop
outsl
mov
jl
int3
loopne
push
adc
andb
xor
xchg
adc
stos
jne
lock
inc
fdivl
add
adc
or
xor
pop
loopne
mov
dec
add
mov
jns
int
sti
lcall
sub
lods
mov
sbb
adc
cmpsl
fimull
cwtl
pop
jae
mov
pop
mov
adc
xchg
xchg
xchg
pop
mov
sub
pop
pop
scas
add
lods
jae
sahf
dec
and
push
sbb
sub
gs
push
aaa
or
sbb
push
loopne
dec
popf
bound
leave
mov
inc
into
rclb
inc
add
gs
iret
mov
or
movsb
clc
sahf
adc
imul
mov
push
add
mov
and
je
scas
lret
les
mov
cmp
lea
jmp
lahf
jbe
lock
sub
pop
imul
rorl
stc
add
xchg
sub
push
flds
insl
inc
out
notl
sub
movsb
repnz
stos
test
sub
testl
outsb
loope
mov
mov
mov
push
dec
dec
icebp
mov
jg
mov
jbe
mov
lret
leave
push
mov
aaa
jo
call
or
out
dec
dec
adc
jne
pop
jecxz
nop
je
push
cmp
popf
inc
cmc
mul
pop
mov
call
jl
psubusw
dec
mov
lret
jae
rcrl
fcomps
je
mov
sub
push
fsubrl
insl
rclb
jbe
sbb
add
push
jmp
inc
fs
mov
js
mov
les
lods
jmp
js
adc
sub
cld
js
in
mov
pop
test
xchg
or
into
jg
mov
int3
dec
iret
dec
es
and
jmp
mov
ret
or
dec
mov
add
dec
jecxz
fwait
add
or
xor
aam
addr16
loop
adc
sub
xor
mov
dec
xchg
ret
mov
pop
out
sub
test
jae
jl
dec
ret
cmpsl
jnp
stos
jmp
cmpsb
jbe
pop
pop
inc
push
rol
icebp
sub
mov
mov
add
test
adc
and
lods
insl
in
inc
mov
out
xor
push
lret
fstp
into
movsl
icebp
popa
mov
into
das
push
xchg
add
lods
jo
sbb
mov
lock
inc
xchg
or
fwait
push
ja
push
mov
je
popa
test
icebp
and
negl
push
cmc
dec
push
inc
lahf
push
pop
fwait
cli
push
nop
pop
inc
fstpt
jne
dec
dec
mov
rcrl
arpl
ljmp
cmp
test
or
call
jp
mov
xchg
cld
cltd
ds
imul
or
push
popf
out
int3
cmpsl
hlt
fcomps
mov
stos
push
call
mov
in
xor
mov
ret
test
inc
xlat
pop
xlat
hlt
sbb
mov
cld
mov
rcll
cwtl
sub
js
pop
cmc
sub
fisttps
test
mov
ret
pop
adc
jbe
sbbl
lret
sbb
sarb
cs
jne
pop
cmpsb
mov
loope
mov
and
pop
jmp
dec
push
movsb
jecxz
pop
add
imul
ds
or
mov
ret
andl
mov
add
fstps
add
sti
jecxz
repz
pop
testl
jg
pushf
inc
scas
in
outsb
push
ror
rclb
pusha
jge
xor
mov
jle
mov
inc
inc
dec
repz
js
loopne
fwait
jno
pushf
scas
popa
lcall
jno
out
jge
lods
aas
jb
js
in
roll
push
mov
inc
push
mov
xor
test
inc
sti
and
inc
push
test
incl
pop
inc
bound
sahf
dec
push
or
hlt
xchg
in
popf
mov
push
in
data16
inc
cli
daa
inc
jl
cld
imul
imul
pop
or
cmp
add
jmp
jecxz
dec
add
cld
cwtl
jae
inc
in
std
jp
push
lods
jg
out
or
lods
push
sahf
sahf
pop
shlb
jae
or
adc
xor
xchg
stos
push
push
and
dec
clc
aas
mov
in
xchg
pop
mov
lds
rorb
das
enter
insl
add
je
js
mov
loop
pop
mov
dec
call
xlat
imul
dec
addr16
fsubs
xchg
into
add
int
imul
or
out
mov
jecxz
jno
sahf
fcmovnbe
xchg
jmp
dec
cs
sarb
dec
popa
lret
sub
sbb
mov
pusha
in
mov
popf
fdivs
jae
lcall
imul
pop
shrb
or
xchg
pop
xchg
out
mov
add
dec
out
lock
loope
push
outsb
inc
mov
lods
xor
adc
in
inc
xlat
pop
mov
pop
cmc
in
or
cmp
cmp
mov
fs
xchg
cmp
adc
test
sub
push
and
subl
rorl
outsl
push
ja
lods
jmp
js
icebp
or
test
fldenv
cli
jne
pop
loop
mov
mov
scas
push
addb
mov
xchg
addr16
out
sbb
clc
nop
jl
jbe
adcl
ret
daa
popw
bound
xchg
ret
or
dec
test
push
das
mov
mov
cltd
and
fnsave
fwait
ja
inc
sti
cmpsl
out
outsl
psrad
fisubrs
mov
or
mov
je
lods
push
sub
push
pusha
xor
in
push
insl
cmp
jle
pop
cmp
pop
fidivrs
push
cmpsl
dec
mov
leave
popf
sbb
test
and
iret
sahf
jmp
cmp
add
pop
dec
iret
in
mov
mov
loope
add
imul
sbb
sar
xchg
inc
jecxz
add
out
out
arpl
rcrl
arpl
sub
xchg
mov
sbb
push
dec
lds
mov
pop
mov
cmc
jle
adc
pop
mov
dec
fdivrl
faddl
dec
scas
je
je
je
jno
test
adc
mov
or
or
and
fidivs
fisubrs
jae
ret
in
das
mov
mov
movsl
insb
cmp
xchg
insl
xor
sbb
inc
out
andl
and
mov
inc
mov
jb
jb
mov
int3
lret
or
and
sbb
pop
mov
add
mov
aam
xchg
pop
jecxz
add
push
cmpsl
out
add
cmpsl
or
push
sub
std
out
roll
jmp
fwait
mov
repnz
xor
cwtl
fidivl
int
sbb
xor
mov
sub
dec
dec
dec
mov
or
dec
mov
sub
sub
lock
pop
mov
or
fimull
add
out
add
sub
sub
jbe
imul
subb
pop
fwait
rcll
jp
cmpsl
jo
mov
add
adc
dec
pop
out
shr
data16
test
cli
cmpsl
test
bound
add
std
sub
add
inc
and
cwtl
or
inc
into
subl
sub
ret
not
out
cmp
xor
adc
sub
mov
and
dec
outsl
push
push
push
fldcw
stos
ficomps
jmp
out
loop
mov
adc
jbe
lods
fidivrs
push
subl
daa
mov
mov
les
xor
push
stos
neg
push
and
fidivs
push
adc
push
lcall
in
aaa
es
int3
mov
mov
int3
arpl
add
ljmp
out
lahf
inc
xchg
ret
jbe
fsubrp
push
shrb
mov
inc
or
fcmovnu
cmp
aaa
scas
fdivr
mov
stc
jmp
cmpsl
sbb
test
push
je
je
fs
or
pop
repnz
js
std
push
je
sbb
clc
or
or
sub
inc
pop
push
imul
loopne
jecxz
push
aas
cmpsl
dec
pop
mov
inc
inc
inc
mov
cmp
insb
add
bound
orb
fnstenv
pusha
mov
pop
std
sbb
bound
stos
dec
stos
xchg
pop
pop
jno
pop
jnp
push
mov
pop
or
and
pop
lea
shrb
cmp
dec
dec
cli
jno
mov
xor
adc
js
xchg
jmp
popf
xor
outsl
xchg
adc
add
lods
sub
jnp
and
cmp
mov
adc
lcall
mov
aas
fildll
dec
stos
dec
mov
scas
out
mov
std
inc
icebp
es
fimuls
push
lods
mov
stos
xchg
cmp
mov
cmpsb
inc
lods
outsl
jg
mov
push
xor
popf
jecxz
lea
push
add
ret
xor
cmpl
mov
ljmp
and
xchg
adc
cmp
mov
lds
sub
repz
popa
mov
jne
dec
dec
dec
jecxz
and
jge
cmp
inc
jbe
jbe
in
test
xchg
sahf
add
imul
aas
add
sbb
xchg
cmp
rolb
int
pop
and
fwait
adc
inc
and
mov
sub
cmovge
mov
out
fdivrl
call
push
inc
jo
pushf
xchg
aaa
mov
fsubrl
push
lahf
and
into
xchg
roll
test
mov
add
bound
xchg
xchg
sbb
stc
cmpsl
loop
sub
insl
pushf
push
cmp
insl
aas
add
loope
test
pop
sbb
mov
lret
clc
addl
out
andb
adc
inc
andb
cmpsl
imul
ret
imul
test
shr
and
add
push
jne
movsb
ja
cmp
decl
mov
mov
push
xchg
sub
mov
sub
ja
sbb
jns
jecxz
cmp
rcll
and
movsl
xchg
mov
inc
insb
xor
leave
clc
or
mov
xor
jmp
sbb
jo
xchg
jmp
mov
pop
and
or
jle
cld
outsl
or
xchg
dec
ja
push
aam
lcall
fiaddl
lds
clc
testl
movsb
shll
mov
testl
sbb
popf
nop
xchg
scas
nop
out
in
shrl
ficoms
mov
push
and
add
xor
jmp
xchg
inc
enter
mov
cmp
cmp
xchg
mov
lods
mov
fidivrl
push
push
in
cmpsl
xlat
pop
push
inc
into
dec
fcomip
ja
dec
loop
xchg
lret
popf
jecxz
push
jns
xor
add
jle
mov
mov
iret
data16
pop
cmc
cmovnp
repnz
add
xchg
ss
mov
cs
inc
rcll
ret
cs
in
jno
iret
mov
jbe
clc
mov
or
jnp
jae
aad
testl
wrmsr
in
ds
xchg
jge
adc
addr16
xor
fs
add
jnp
cltd
decb
mov
inc
sub
mov
push
pop
xchg
rcl
enter
aad
jae
sbb
std
sub
jbe
jecxz
pop
sub
idivl
loop
sbbb
call
ja
inc
sarb
int3
and
insl
mov
or
stos
mov
pop
je
call
dec
xchg
or
xor
adc
int
test
insl
jbe
pop
xchg
out
scas
mov
dec
mov
adc
mov
rolb
das
and
push
nop
loopne
add
mov
jl
mov
jae
mov
fbld
adcl
leave
lea
or
test
jmp
pop
dec
sbb
add
xor
xorb
jg
mov
test
leave
inc
test
jge
stos
leave
lea
mov
int
mov
popf
mov
jmp
mov
loopne
xchg
jp
out
scas
add
das
std
xlat
pop
mov
pop
pop
int
inc
xchg
outsb
sahf
jo
jmp
sbb
inc
popf
stc
mov
ficompl
fdivl
pop
test
stc
nop
stos
mov
ret
lea
mov
jle
mov
fucom
jns
push
shrl
scas
enter
ret
popa
ret
pop
push
adc
negl
out
aad
out
test
stos
sbb
sbb
cs
nop
or
cwtl
jnp
xchg
in
test
push
jmp
xchg
sbb
add
mov
adc
xchg
addr16
mov
add
inc
fcoml
mov
loop
or
push
mov
ret
cltd
das
movsl
xchg
xchg
daa
stos
adcl
sub
xchg
add
paddd
pop
xchg
jne
subl
in
icebp
cld
daa
xor
test
icebp
xchg
stos
out
dec
mov
jne
jmp
jno
adc
push
pop
cmp
jns
ror
fcoml
lahf
negl
push
add
mov
fisttpl
mov
dec
lgs
pop
pop
cltd
std
roll
and
dec
mov
sti
sbb
xchg
sbbl
mov
sbb
cltd
jp
in
jnp
loope
or
cmp
xor
repnz
and
iret
and
inc
or
test
stos
xor
mov
in
sahf
enter
addl
jo
or
and
and
loopne
lahf
push
mov
lock
sbbl
cmc
in
pop
mov
into
movsb
movsl
mov
cwtl
rdpmc
dec
frstor
pop
mov
or
pop
or
fwait
aas
lods
imul
push
dec
lahf
cmp
xlat
es
push
jns
sti
cltd
mov
sbbb
test
xor
adc
dec
lret
fsubr
imul
mov
jge
mov
movsl
or
jecxz
pop
popf
pop
or
jns
mov
add
enter
mov
jmp
fldcw
pop
mov
cmp
in
int
imul
es
dec
and
dec
es
xchg
fidivrl
repz
inc
scas
mov
dec
and
or
sub
shll
inc
jnp
cmp
cmpsb
pushf
pop
fdivs
adc
data16
cwtl
sub
aad
xor
xor
or
roll
idivl
pop
mov
or
dec
mov
leave
imul
cmp
jp
jp
inc
and
xlat
or
outsb
outsl
or
mov
andb
sbb
aaa
int3
add
subl
jl
pushf
popa
mov
outsl
pop
xor
mov
mov
push
jmp
jne
int
scas
mov
adc
push
fcos
mov
gs
adc
loop
lcall
cwtl
jno
shll
push
jne
arpl
scas
cli
xchg
jge
loope
inc
test
jp
scas
sub
mov
cmp
in
mov
loop
ret
xchg
pop
fwait
data16
ret
cmc
adc
push
jmp
sti
xchg
mov
pop
push
xchg
lds
and
push
mov
rcr
lock
lods
xor
addl
xchg
shrb
gs
jb
pop
shr
pop
dec
andb
jae
and
sbb
mov
push
push
inc
cmp
loop
sbb
inc
loope
pop
cmpsl
xchg
and
loop
add
out
loop
icebp
fldt
lock
sti
cmpb
mov
push
mov
cwtl
xchg
add
jg
mov
or
imul
mov
lcall
sbb
stc
or
mov
leave
jne
std
lods
and
mov
sahf
push
ja
cltd
enter
orb
cwtl
mov
stc
enter
cmp
mov
pop
in
rcr
jno
mov
xchg
or
lea
std
enter
inc
adc
xor
mov
aad
cmpl
cmp
add
or
jecxz
or
aas
mov
push
in
inc
fadd
add
call
test
xchg
jp
loopne
rcll
push
lods
xchg
mov
or
mov
or
test
xor
mov
gs
fstpl
popa
hlt
mov
out
mov
dec
shrl
lret
push
cmc
sub
xchg
ljmp
test
mov
mov
cli
pop
cli
insl
xor
mov
add
ret
es
mov
cli
out
add
mov
mov
mov
jg
adc
int3
ss
xchg
pop
sbb
xchg
pop
lret
push
lahf
pop
popa
fwait
dec
inc
and
pop
inc
sbb
jge
pop
cmp
lret
xchg
stos
inc
add
mov
mov
adc
repz
frstor
add
shr
outsb
add
bnd
xchg
xor
rcl
dec
loop
in
ja
shr
lock
sbb
jb
ss
mov
jecxz
inc
fsubs
punpckldq
sbbb
mov
out
cvtpi2ps
inc
dec
xchg
push
xchg
pop
pop
inc
or
out
sub
dec
lahf
mov
jb
mov
pop
test
sub
and
fcomps
scas
xchg
repz
into
push
movsb
jbe
sbbl
aas
push
jae
sub
es
popl
xor
nop
outsb
lahf
pushf
cmp
inc
sbb
ss
adc
mov
dec
mov
fstpt
and
outsl
push
xchg
dec
shlb
icebp
insl
sbb
clc
int3
leave
shrb
pop
loope
jecxz
add
stos
push
xor
shrb
pop
lret
ss
mov
js
sbb
inc
ret
out
mov
inc
lods
rclb
int3
pop
dec
rcrb
sub
mov
jbe
and
fsubrl
mov
jb
xchg
cmp
test
sbb
mov
bound
jmp
enter
lds
shrb
cmc
stc
or
mov
jae
arpl
pushf
or
aaa
inc
sahf
lock
in
rol
inc
fnstcw
push
gs
iret
xchg
aaa
sub
movsb
inc
push
add
movsl
mov
into
xchg
jl
or
cmp
shrb
inc
add
dec
mov
dec
add
jecxz
icebp
or
mov
or
push
or
mov
fcmove
mov
sub
inc
stos
and
scas
sub
lret
jg
dec
pop
or
andl
sub
mov
adc
inc
mov
cmp
aad
or
mov
int
cld
scas
mul
and
push
int
jbe
lcall
cs
sub
pop
fisubrl
shlb
sub
jg
mov
adcl
jl
dec
push
adc
adc
pop
es
pop
sub
jbe
xor
push
xchg
insl
push
lcall
insl
mov
mov
jbe
fimuls
inc
cltd
jo
mov
adc
ss
test
notl
pop
lods
add
sahf
lea
and
pop
push
lahf
inc
jge
stc
jge
popa
pop
xchg
inc
pop
pop
shl
jmp
or
testb
jl
xchg
xor
and
sbb
imul
sub
push
sub
xchg
stos
inc
movsb
mov
je
cmp
fcomps
xchg
add
xor
jp
and
scas
stc
jo
and
hlt
fnstsw
out
fldcw
fnsave
rorb
sti
pop
loop
pop
std
loop
cmpsl
cltd
xchg
add
inc
cmp
xchg
stos
xchg
ds
daa
jo
pop
hlt
repz
sub
scas
mov
jbe
push
test
in
dec
mov
rolb
and
outsl
mov
cld
push
cltd
aas
and
mov
jns
scas
jo
mov
rorl
cmc
popa
sub
push
aad
inc
sti
in
out
push
movups
push
lock
or
and
inc
pop
ljmp
out
push
mov
or
xor
imul
adc
aaa
in
test
rcll
add
jle
mov
hlt
or
sbb
pop
add
jp
mov
in
push
ret
jne
pop
mov
mov
fwait
repnz
stc
jnp
fwait
xchg
test
cld
mov
or
adc
or
pop
cmc
test
sbb
and
and
sbb
sub
mov
subb
gs
lea
sub
das
pop
addr16
mov
mov
jp
cmp
mov
repz
mov
mov
pop
insb
cmp
push
in
js
sbb
or
shl
xor
movsb
xchg
jne
out
push
outsb
test
shlb
outsl
ret
add
inc
or
xor
movsl
or
outsb
sbb
incb
xchg
cmpl
mov
les
test
push
add
ss
popf
push
mov
jmp
jge
mov
pop
jb
xor
loopne
cmc
mov
cwtl
cs
sarb
mov
cmpsl
addl
arpl
mov
mov
mov
je
sub
fbld
push
sbb
daa
cmp
sti
movsl
rcll
movsb
push
notl
adc
and
push
pop
xor
ret
pop
in
icebp
mov
sbb
rorb
xchg
adc
cmp
push
add
sbb
es
push
cmpsb
hlt
mov
jle
xor
lods
mov
aam
ds
aam
push
and
cmc
fucomi
in
and
and
cld
sub
cwtl
pop
xor
shll
dec
xlat
add
sub
cmp
xor
scas
mov
sbb
mov
ret
clc
nop
xor
mov
movsb
movb
pop
lock
rcl
cmp
dec
mov
sub
stos
mov
push
popf
sbb
pop
jae
mov
lds
ds
adc
daa
push
push
pop
popf
cmpsl
xor
pop
xor
sub
cmp
pop
dec
std
pop
out
mov
pusha
cli
mov
in
jbe
jle
xor
add
nop
jbe
push
push
cmp
ljmp
adcl
push
sub
sub
adc
adc
pop
push
jns
dec
adc
xchg
insl
mov
fdivp
mov
fdivl
sbb
mov
repnz
in
orl
sub
mov
jl
sub
popf
or
mov
mov
fnstsw
subb
sbb
and
jmp
bound
jns
ja
mov
push
jg
cmpb
mov
ret
jp
test
add
fsts
jg
clc
inc
jg
xchg
clc
inc
inc
sub
pop
sbb
mov
jl
mov
inc
inc
mov
ds
fidivl
fbstp
dec
iret
sbb
dec
leave
les
xorl
or
fdivr
xchg
or
push
jne
out
sahf
std
popf
dec
mov
pop
cmp
push
es
mov
adc
xor
fiaddl
sub
shlb
pop
mov
mov
fdivl
inc
data16
cld
outsb
xchg
cmp
rorb
imul
mov
add
pcmpgtw
jp
or
iret
movsl
inc
js
repz
sbbl
mov
scas
ficoml
loope
xor
mov
push
push
mov
enter
xor
push
lea
mov
loopne
pop
lock
add
subb
push
cmpl
imul
xchg
xchg
jo
jno
aam
dec
push
idivl
mov
xor
leave
je
xchg
cmp
push
xchg
popf
ja
iret
pop
sbb
mov
pop
push
cmp
pop
gs
mov
jecxz
rorl
sbb
pop
push
outsb
mov
stos
mov
idivl
push
add
mov
aam
pause
int
fwait
mov
sub
in
lret
mov
add
pushf
pushf
imul
and
into
xor
decl
push
dec
pop
scas
jno
jo
rcrl
mov
pusha
aas
stos
lret
pop
xchg
or
call
cmc
roll
xchg
pop
pusha
mov
fisttpl
clc
call
sub
clc
lea
cmpsb
mul
adc
mov
jae
add
popf
mov
xchg
test
test
jge
je
cmpsl
sahf
mov
ror
fwait
cmpsl
aad
das
add
jno
mov
xchg
sub
ret
cwtl
mov
insb
out
mov
xchg
push
push
inc
arpl
push
lods
inc
sarl
or
pop
data16
mov
xchg
pop
jp
ret
xor
arpl
or
and
fs
adc
sub
insl
aam
or
xchg
into
pop
dec
pop
call
mov
jo
jno
mov
je
lret
xchg
stos
push
fsubrl
cltd
outsl
nop
in
dec
mov
test
call
or
nop
mov
jmp
insl
pop
imul
mov
test
outsl
scas
xor
xchg
std
mov
push
insb
lds
add
dec
ret
inc
pop
dec
pop
inc
fwait
shrl
add
out
incb
mov
loop
sbb
mov
fmuls
mov
cmp
inc
shrl
sar
mov
outsl
push
inc
test
or
or
and
push
push
jne
mov
dec
or
loopne
lahf
cmp
or
stc
adc
aaa
sub
mov
and
or
dec
into
mov
inc
mov
lahf
loopne
pop
xchg
fiadds
lcall
adc
or
pop
adc
cmpsl
pop
repz
loope
daa
pop
fwait
data16
cmova
ljmp
lahf
cmpsb
aas
inc
jo
setb
push
cmp
xchg
in
push
lock
in
pop
dec
pop
ret
dec
mov
mov
bound
mov
xchg
cs
out
push
pushf
sbb
in
cli
push
dec
in
sbb
xor
xchg
push
jmp
add
cmp
mov
mov
mov
test
shrb
push
jb
rclb
mov
pop
xchg
sbbl
test
lahf
daa
mov
ds
and
jno
mov
push
mov
icebp
adc
mov
loope
test
cli
iret
scas
xchg
mov
xor
add
sub
and
loopne
and
jle
inc
xchg
cmpsl
inc
mov
lea
leave
push
hlt
mov
fistps
mov
gs
cld
lcall
mov
sbbb
inc
lods
inc
jbe
decb
notl
iret
mov
jg
sti
cmpsb
mov
or
sbb
sub
pop
scas
pop
ret
fistpll
jne
jbe
ret
xchg
and
push
je
push
daa
jne
repnz
push
scas
dec
jp
sub
or
ret
std
insl
les
test
mov
sub
pop
pop
imul
arpl
xchg
sahf
repz
push
sbb
adc
mov
lds
adc
mov
inc
xchg
movsl
push
repnz
stos
adc
mov
adc
inc
gs
mov
jb
pop
imul
sti
fadds
cld
sti
inc
arpl
out
popa
je
xchg
mov
test
cmpsl
push
jmp
mov
mov
cmp
sbb
inc
adc
push
push
movsl
test
aaa
cmc
cmc
clc
sub
pop
dec
cmc
rcr
cmp
aaa
out
out
scas
dec
xor
jmp
sar
invd
sbb
out
push
out
mov
rcrl
push
xchg
pop
aam
mov
push
int3
and
pop
adc
sbb
movsb
icebp
fldt
cwtl
cli
adc
jb
push
sti
test
fwait
cmp
int3
std
or
mov
sbb
ficoml
inc
push
icebp
mov
jp
adc
lds
cltd
jne
insb
jae
int
mov
loop
sub
adc
sbb
aas
adc
adc
loopne
lret
popa
test
add
sub
cmp
push
sub
mov
pop
in
xor
nop
fistpl
cmp
inc
mov
mov
rolb
jb
sbb
sti
mov
mov
push
into
push
ffree
ss
adc
pop
cmpsb
fdivrs
mov
pop
movsb
cwtl
out
data16
lret
pop
scas
call
cmp
xchg
mov
jns
push
sar
cmc
ja
jge
xor
sahf
xor
in
mov
xchg
ret
hlt
mov
imull
cld
rep
pop
cs
insb
add
ret
mull
in
fs
xchg
push
push
adcl
popf
cmp
orl
ja
pop
xchg
test
lahf
xor
daa
cmc
adc
add
adc
pop
lock
cmp
int3
in
pop
mov
add
gs
scas
imulb
scas
jb
test
clc
add
ss
adc
lea
cmp
out
into
out
shrl
cli
loop
sub
icebp
sbb
xorl
js
scas
cld
push
cli
das
pop
int
pop
subb
push
jno
adc
push
and
repz
dec
cmp
aad
pop
sub
shll
and
mov
stos
inc
adc
cld
push
add
fildll
or
xchg
cli
sub
clc
into
mov
cli
mov
repnz
sti
orb
sub
add
jmp
push
sub
repnz
jae
shrb
xchg
mov
cmp
iret
xor
lret
xchg
sbb
adc
lods
jmp
push
std
sahf
jmp
iret
lods
divl
add
mov
int
cmp
gs
daa
adc
add
jp
xor
into
push
jmp
push
mov
xchg
aas
push
sbb
cmp
pusha
jb
aam
mov
mov
dec
popa
in
dec
adc
or
mov
xchg
popa
clc
mov
mov
jmp
in
adc
cs
cltd
sbb
jl
jmp
out
mov
adc
subl
mov
mov
fwait
xor
or
mov
sub
fnstenv
cltd
push
out
xchg
pop
movb
outsb
jl
outsb
aam
fcmovbe
shll
out
jns
scas
test
maxps
mov
insb
fsubs
inc
stc
mov
sub
xchg
inc
adc
ljmp
test
repz
inc
and
xchg
push
mov
xchg
outsl
cmp
push
mov
repnz
mov
add
scas
cmp
adc
dec
xor
xor
sub
jmp
mov
pop
loope
mov
cmp
mov
fsubs
or
insb
test
xlat
push
in
pusha
subb
in
pop
stos
outsb
add
xor
incl
adcb
test
lods
stos
inc
sbb
ds
xor
push
xchg
movsl
adc
adcb
pop
mov
xor
xchg
xchg
xchg
cmpsl
mov
pop
jge
xchg
jl
pop
sub
inc
push
movl
inc
pop
xchg
scas
mov
fadd
sbbl
inc
loop
test
sbb
mov
int
daa
mov
adc
jno
out
pushf
xor
cmp
in
ja
test
jnp
mov
xchg
mov
push
inc
mov
lods
push
xor
adc
daa
inc
adc
out
scas
jb
xchg
call
sbbb
popf
xchg
push
mov
jnp
or
mov
adc
imul
in
nop
add
fwait
cmpsl
pop
outsb
mov
negl
adc
xlat
das
in
jl
int
fnsave
xor
adc
pop
out
in
fcmovnu
test
jb
jmp
adc
sub
enter
jp
ss
les
shlb
loope
mov
push
mov
mov
mov
rcll
repnz
push
push
mov
jle
mov
and
mov
pushf
out
cs
ss
fsubl
dec
mov
adc
fs
or
in
mov
mov
rcll
dec
and
cltd
cmp
mov
jb
iret
bound
leave
cwtl
nop
test
loopne
test
mov
mov
aaa
dec
fsubs
mov
aas
pop
les
fmuls
scas
pop
or
xchg
rcrb
sub
jo,pt
loop
and
aas
fdivrp
lock
add
sbb
dec
push
ss
cmp
mov
lds
cmp
js
lods
bound
pop
jp
mov
mov
inc
imul
das
sahf
cmp
dec
add
push
and
cltd
scas
pushl
cli
cld
and
lcall
lcall
les
sbb
call
push
jle
ds
jo
inc
mov
leave
xorb
inc
dec
and
movsb
cmc
aad
daa
or
stos
push
in
fnstsw
pop
adc
fstpl
icebp
push
movsl
cmp
adc
leave
pop
sub
inc
arpl
je
shll
cmp
shl
cmp
xor
loop
ja
xor
inc
fdivr
push
scas
ret
adc
insb
push
mov
outsl
adc
pop
sti
ret
mov
test
icebp
inc
pop
pop
subl
enter
adc
and
clc
shll
xchg
out
push
stos
xchg
or
mov
push
out
sbb
jecxz
js
int3
dec
outsb
pop
js
inc
push
notl
dec
cmp
iret
frstor
outsl
mov
scas
fdivl
dec
cli
or
int3
aam
sbb
dec
add
stos
lods
lock
cli
xor
rolb
jns
negb
add
ret
cmp
popa
clc
in
add
ret
clc
or
outsl
dec
lahf
frndint
fnsave
and
jnp
insl
jge
pushf
jbe
push
insb
ret
jno
lahf
mov
adc
push
add
jmp
into
in
movsl
mov
xlat
and
leave
nop
jae
sbbl
aas
pusha
and
jne
fisubs
mov
inc
jp
idivb
mov
or
dec
scas
popf
test
ljmp
jno
bound
pop
mov
and
sub
push
mov
and
push
jo
ja
fnstsw
mov
stc
jns
or
pmullw
jecxz
add
xor
sbb
int3
push
xor
xchg
push
sub
mov
lcall
add
pop
mov
rcrb
cmp
pop
add
out
lss
cmp
je
xor
add
push
dec
ja
xor
into
push
pop
xor
pop
stc
nop
or
jbe
lods
pop
xchg
jecxz
std
cltd
sub
insb
mov
adc
or
int3
arpl
out
addr16
cmp
int3
jmp
jnp
scas
mov
dec
jmp
xchg
repnz
adc
xchg
cmp
push
and
clc
add
dec
and
pop
cmpsb
adc
movntq
insl
out
pop
add
clc
cmp
lcall
jnp
xchg
sub
mov
sbbb
mov
mov
iret
jp
fsubrl
sbb
xor
sbb
inc
xchg
sub
dec
xor
push
dec
or
arpl
les
jl
ljmp
sbb
adc
icebp
cld
or
jl
jg
xor
call
arpl
xor
cmp
pop
cmpsl
sub
loopne
ss
int3
cld
in
xor
es
insb
adc
mov
stos
sbb
mov
dec
lcall
pusha
mov
cli
pop
adc
out
mov
and
scas
sbb
sahf
mov
stc
out
xor
and
mov
push
shrb
adc
and
dec
popf
daa
in
out
lahf
dec
and
cmp
cmp
lods
lock
cmpsb
push
mov
outsl
sub
out
gs
iret
sub
adc
mov
xor
rcrl
mov
into
stc
mov
test
sbb
mov
fbld
pop
sub
cmpl
sub
pop
sub
lcall
and
jno
sbbb
js
xchg
xchg
and
pminub
sbbb
xchg
push
or
test
jl
xchg
mov
push
cmp
pop
dec
data16
sub
pop
rcrb
xchg
psadbw
ret
mov
lret
jb
idivb
xchg
xor
add
mov
adc
ret
pusha
jmp
sar
fisttps
and
movsb
cmp
test
jmp
stos
loope
fldcw
pop
stos
mov
push
mov
stc
pop
movsl
or
int
test
fwait
adc
xor
jnp
mov
hlt
mov
mov
shll
and
pop
xchg
sub
push
cmpsb
fisttpl
popa
aad
lock
popa
cmp
mov
stos
jmp
cmp
cmp
cmc
cltd
pop
addr16
pop
mov
mov
xor
fwait
outsb
xchg
xlat
and
xchg
shll
arpl
push
aaa
inc
push
inc
xor
rcrl
lret
out
mov
push
xlat
incb
das
clc
add
or
test
clc
cwtl
adc
iret
add
add
jbe
or
mov
jecxz
push
stos
and
adc
push
xchg
imulb
and
mov
mov
or
xlat
fcomps
xchg
xlat
psraw
int
xor
movsb
dec
rcr
idiv
mov
inc
pop
cmp
mov
pop
pop
ljmp
insl
aad
mov
je
addr16
inc
sbb
roll
sub
test
mov
xor
shl
nopl
dec
sub
fadds
les
dec
push
mov
dec
arpl
sub
pop
arpl
lea
sbb
mov
mov
arpl
shlb
js
xchg
cs
in
std
mull
ds
inc
pop
ret
dec
pop
or
xor
inc
pop
or
xor
jns
jns
add
inc
cmpsl
inc
dec
pusha
fbstp
jmp
fstpt
mov
sbb
sbb
shl
hlt
sub
jle
sub
lahf
cwtl
jae
push
lock
sti
shl
out
mov
jp
lret
mov
cmpsb
mov
add
repnz
movsl
mov
fstp
loop
sub
push
add
test
mov
in
iret
xchg
xor
inc
and
stc
xchg
add
int
orb
or
cmpl
mov
add
cmc
fcomps
adc
sbb
push
lods
nop
adc
jnp
push
push
or
stos
shl
sub
jecxz
pop
cmp
add
icebp
inc
loopne
push
sub
daa
push
stos
adc
nop
daa
lods
xor
test
cwtl
adc
or
lret
and
mulb
pop
icebp
sbb
loopne
cmp
fisttps
rorb
xor
dec
inc
into
mov
in
enter
adc
test
sbb
push
jae
mov
popf
adc
push
repnz
mov
jmp
mov
lcall
jmp
xor
fs
mov
mul
sbb
mov
push
add
notl
pop
ja
outsb
jle
cltd
inc
xchg
lcall
and
in
div
mov
sbb
fsqrt
test
sub
xchg
xor
loopne
imul
add
rcr
cld
sbb
fstps
testl
rorl
mov
pop
sbb
mov
inc
or
fstl
jb
pop
sarb
lods
mov
les
enter
jb
mov
or
dec
and
mov
scas
xlat
jmp
mov
shrb
push
xor
sub
cmp
je
mov
stos
xchg
hlt
pop
adc
icebp
lret
in
bound
in
cmp
inc
push
push
cli
jp
push
movsl
fcomps
jnp
mov
stc
cmp
cmc
mov
adc
imul
enter
decl
or
xchg
ds
cmpsl
insb
add
sarl
add
lret
xchg
inc
and
cmp
out
aaa
imul
out
mov
jle
xor
sbb
sub
cmp
imul
mov
mov
nop
and
lret
jmp
mov
push
jecxz
or
mov
cmp
divl
aaa
and
cmp
or
cmpsl
ret
std
sub
daa
outsl
mov
mov
ret
lret
sbb
daa
xor
mov
data16
jmp
xchg
add
clc
int
fstpl
sti
fs
sub
inc
and
xor
js
mov
pushf
mov
orb
movsb
sub
mov
or
xchg
mov
inc
pop
or
je
es
pop
cltd
pop
push
imul
pop
mov
adc
fcmovu
mov
xchg
pop
add
mov
nopl
cwtl
jns
in
rclb
adc
xor
jp
ja
ss
xchg
cs
fstpl
xchg
scas
cmp
xor
adc
dec
add
daa
add
sbb
xchg
xor
add
pusha
xchg
inc
sbb
mov
hlt
push
outsb
push
pop
mov
pop
xlat
sbb
dec
dec
ret
ret
cmp
push
mov
decw
pushf
add
lods
test
int3
mov
daa
mov
mov
xchg
xor
and
lret
lahf
iret
loop
push
cld
stos
fwait
je
in
mov
bound
jmp
pop
jno
mov
les
xor
inc
sub
and
ret
fwait
push
jb
mov
in
lds
xorb
hlt
xchg
out
inc
frstor
popf
sub
fs
scas
ret
mov
ret
clc
test
cmp
mov
push
lret
lcall
sub
lret
out
dec
pop
leave
and
xlat
sub
insl
jp
adcl
inc
or
jne
push
outsl
or
mov
loopne
notl
and
xchg
cmp
test
sbbl
or
mov
mov
or
dec
cmp
xchg
jmp
sub
xor
in
lcall
jmp
leave
adc
ret
adc
test
test
push
mov
dec
repz
sbb
push
jge
jp
lods
mov
xor
jnp
dec
sub
mov
pop
sub
jl
inc
fsubp
mov
jae
lock
cmpps
mov
incl
cmpb
adc
sub
pop
pop
dec
xorb
stos
hlt
lcall
repnz
push
jb
adc
pop
fldt
add
inc
xchg
sub
add
imul
cmp
in
mov
cltd
sbb
sbb
sti
pop
cmp
scas
cmp
sub
iret
inc
mov
xlat
scas
sub
jle
xchg
test
xor
cmp
int3
fdivl
shrb
ret
and
into
adc
xchg
inc
stc
sarl
adc
ja
mov
andl
mov
jae
push
sub
js
mov
jge
lods
sahf
sub
xor
andb
sub
or
and
pop
push
movsl
jns
andl
mov
lret
shl
test
psrad
fldt
gs
pop
in
or
cmp
addr16
je
dec
pop
cli
mov
mov
das
fnsave
cmp
cli
mov
cltd
arpl
mov
push
mov
inc
mov
loopne
push
jg
loop
push
cltd
mov
or
es
xchg
aam
les
cmc
or
pop
cltd
shll
adc
fbld
or
rcl
add
sbb
loop
cmp
push
in
sbb
adc
xchg
pop
repz
add
fs
nop
push
sub
out
outsl
sahf
dec
pop
fdivrs
push
jg
or
cmp
pop
xchg
jns
inc
fnstcw
addb
repnz
ret
ds
cmpsb
dec
xchg
xchg
int
xchg
xor
outsl
in
push
je
mov
mov
inc
xchg
popa
adc
sbb
outsb
sbb
jg
pushf
xor
mov
jmp
and
pop
in
mov
ljmp
ljmp
mov
or
mov
or
xchg
fidivs
mov
cld
xchg
xchg
push
jg
pop
outsl
adcl
nop
in
test
sbb
inc
in
popf
adc
push
push
mov
xor
out
add
les
fs
stc
test
int
xor
mov
in
add
add
inc
mov
fwait
cli
jle
movsb
test
xchg
mov
sbb
pusha
imul
mov
fsts
lods
or
add
sub
pop
and
das
xchg
cmp
sbb
vfrczps
je
outsb
sub
adc
mov
movsl
cmpl
mov
cmp
iret
add
adc
jmp
fucom
jmp
call
dec
sub
dec
stos
loop
dec
flds
mov
mov
pusha
mov
dec
mov
iret
out
lods
pop
adc
cmp
out
and
loop
stos
fists
push
inc
ja
xor
push
push
scas
test
lret
fldenv
je
xchg
imul
out
lock
pop
lock
fisubs
adcl
cld
jae
das
mov
ficoml
or
aaa
bound
mov
pop
repnz
cmp
jmp
iret
adc
mov
movsl
or
push
fldcw
pop
fisubrl
adc
add
lcall
fdivrl
lods
lods
pop
sub
sub
in
lcall
shrb
notl
adc
inc
shr
and
arpl
mov
jb
nop
es
pop
stc
sub
mov
test
out
ja
push
or
fxtract
insb
add
out
cld
push
inc
mov
jns
inc
enter
and
push
pusha
sbb
stc
scas
push
xor
add
mov
pop
hlt
aaa
mulb
sub
orb
orl
fisubl
nop
out
add
ret
loopne
insl
add
js
test
fs
inc
adc
stos
or
cmp
push
adc
mov
imul
hlt
cmpsb
and
fcoms
lcall
xchg
mov
sbb
cmp
mov
pavgw
mov
test
pop
inc
lock
jo
xchg
push
movsl
mov
flds
sbb
daa
ds
out
outsl
dec
mov
xchg
adc
out
mov
fs
and
test
jne
call
scas
lock
loope
jns
arpl
subb
stos
inc
in
test
sbb
mov
lret
pop
fbstp
insl
movsl
test
addr16
popa
mov
jmp
jbe
dec
mov
pop
sbb
ret
mov
movsb
cmp
call
add
in
sub
xor
repz
and
dec
cmp
push
mov
jbe
shll
daa
mov
add
mov
outsb
std
stos
xchg
insb
loopne
imul
popf
push
rorl
loopne
jmp
adc
cmp
adc
adc
insl
add
add
aas
sahf
mov
add
addr16
fiaddl
sub
jbe
lods
aaa
jo
mov
les
pop
adc
jmp
push
jno
aad
shlb
inc
dec
mov
ficoml
loope
or
repnz
pop
int3
out
add
aaa
jne
jne
adc
cmp
mov
fisttpll
ret
dec
pop
cs
fcomps
mov
subb
lds
fucomi
sub
aaa
pop
sub
daa
aad
pop
hlt
test
pop
or
mov
sahf
data16
les
test
push
insl
lods
ljmp
pushf
mov
shrl
pop
rorl
js
mov
inc
faddl
arpl
enter
lds
out
fsubl
popa
clc
out
jmp
jg
test
mov
xchg
fs
cmp
rol
and
sub
lcall
mov
cmpsb
mov
jb
add
sub
outsb
inc
sar
push
inc
push
and
xchg
push
das
inc
sbb
add
or
and
and
fiaddl
push
je
adc
sar
mov
adc
push
aam
or
mov
outsl
sub
cwtl
insb
dec
sbb
jg
jecxz
mov
addr16
and
sbb
pop
out
mov
jbe
mov
push
cmpsl
jge
or
push
and
mov
push
adc
imul
jg
scas
pop
rclb
sbb
sub
inc
xchg
dec
pop
cmp
pop
sbb
int
add
sub
mov
shlb
mov
add
addr16
adc
idiv
nop
dec
adc
mov
jns
sub
rcrl
mov
or
jno
mov
or
test
adc
popf
sti
sub
les
mov
mov
es
jg
add
loopne
jge
sub
pop
inc
fiaddl
mov
inc
mov
in
push
xchg
clc
cmp
sub
imul
xchg
add
js
aam
dec
out
cmc
push
pop
sub
ja
xlat
popa
xor
mov
push
pop
les
jb
icebp
xchg
movsb
push
iret
mov
sub
fnstsw
dec
mov
push
dec
push
jne
orl
insl
and
ret
adcl
add
mov
pminub
sbb
ljmp
xor
fldl
dec
negb
std
add
adc
daa
sbb
gs
jnp
fcompl
or
imul
popf
lods
xlat
dec
sbb
or
mov
movsb
add
lods
xor
nop
mov
iret
in
mov
movsl
or
mov
pushf
fucomi
lea
mov
push
sub
dec
jbe
pop
stos
imul
clc
dec
cmpsl
add
and
pop
xor
mov
ret
pop
cmp
adc
push
lods
mov
les
pop
lods
cmc
cmp
pop
lock
gs
xchg
xlat
movb
rorl
orb
rclb
push
jno
inc
or
ret
or
cltd
dec
fldenv
xor
inc
jne
xchg
mov
xchg
adc
pop
in
mov
fdivl
ret
xor
xor
or
in
adc
add
insl
imul
and
xor
jg
mov
push
xor
adc
out
mov
and
leave
loope
xchg
repz
mov
pop
mov
das
pop
jmp
and
stc
js
fisubrl
or
push
into
inc
mov
stos
out
dec
dec
xchg
movsb
add
sbb
sbb
push
cmp
sub
mov
add
or
cmp
jno
or
fdivrl
xchg
add
sbb
cmp
sti
imul
arpl
pusha
stos
fnsave
scas
inc
jg
pop
sub
dec
lahf
imul
mov
imul
mov
je
movsl
sarb
pop
stos
dec
lock
arpl
xchg
clc
rol
cmp
ror
adc
movsl
daa
or
jge
sbbb
pop
ja
xchg
dec
in
mov
loopne
out
add
aam
dec
cmp
mov
inc
sub
rcl
test
adc
jnp
pop
sub
mov
lret
repz
cmc
and
aam
stos
mov
jae
pop
sahf
pop
xchg
shlb
pop
cli
jg
sub
mov
mov
jae
adc
mov
jo
mov
xor
sarl
jg
jmp
push
sahf
pop
out
lret
fsubr
std
jl
adcb
cmp
cmpsb
xor
adc
or
sahf
test
andl
pop
push
mov
pop
sahf
fmul
inc
sarl
add
ss
das
clc
xchg
xor
sub
push
sub
mov
cmp
jno
hlt
in
loope
sbb
or
mov
dec
cwtl
lods
inc
lret
pop
fadds
mov
cld
xchg
cld
test
sbb
push
push
xchg
jne
lea
pop
push
jne
imul
sbb
outsl
push
mov
xor
fsubs
jmp
sub
lret
inc
bound
push
pushf
adc
lret
mov
lock
lret
dec
stos
xchg
mov
bound
and
cld
fs
sub
out
scas
inc
and
lea
inc
int
mov
repz
negl
scas
add
in
sti
pop
mov
inc
push
jae
or
repz
xor
sti
inc
jp
inc
and
sbb
ja
hlt
cld
xchg
daa
cs
das
dec
sbb
aaa
subl
es
lods
fildl
lods
pop
clc
mov
imul
in
pushf
mov
add
add
cwtl
iret
xchg
imulb
or
loop
dec
xor
dec
pop
and
push
push
ljmp
mov
enter
cmpsl
call
andl
pop
sbb
ficompl
adc
mov
stc
jae
testb
jge
pushf
imul
add
addr16
lea
cmp
out
cmp
xchg
sub
jecxz
mov
dec
iret
leave
xor
jecxz
push
push
jl
mov
mov
fistpll
push
hlt
dec
fnsave
fcoml
xchg
mov
les
out
cmp
lods
lods
or
adc
pop
testb
push
data16
jge
out
sub
push
inc
cltd
dec
stos
into
pop
adc
and
cs
mov
test
xchg
enter
mov
fs
fucomp
orb
stos
cmp
jo
or
sub
aam
outsl
dec
iret
push
jle
mov
xlat
push
xlat
sub
testl
dec
xchg
jl
cmpsb
or
jae
push
inc
fcompp
in
or
jle
test
jge
test
inc
push
mov
test
lods
add
and
pushf
fsubrs
div
test
ljmp
dec
aas
jns
push
stos
inc
adc
aaa
add
inc
ljmp
jno
repz
jecxz
mov
out
testb
das
add
int3
pop
xor
repz
mov
testl
aad
cmp
push
cmp
outsb
xchg
aas
jg
imul
dec
push
ret
xchg
mov
cmp
outsb
xchg
fs
hlt
add
xchg
pop
addr16
fmuls
call
sub
or
xor
pop
mov
sbb
dec
push
pop
jg
mov
cs
pop
sbb
in
int3
enter
stos
inc
aas
xchg
bound
cmp
pop
ljmp
in
xchg
pop
push
rclb
push
call
test
inc
aas
jp
xor
or
push
inc
xchg
push
xor
sbb
frndint
out
movsl
pusha
cli
cmpsb
mov
stc
push
push
cmp
mov
addr16
cld
push
aam
jae
je
xchg
xor
rcrb
xchg
in
int
cmpsl
repz
jno
in
call
mov
sbbl
je
je
test
enter
sarb
enter
addl
dec
cmpsl
ret
jecxz
das
in
addl
leave
sbb
sbb
loopne
sub
aam
out
and
mov
lcall
push
sub
adc
shl
mov
mov
cltd
jo
pop
addr16
jle
adc
mov
jl
xchg
pop
pop
scas
jbe
and
mov
les
cmc
adc
icebp
test
jecxz
hlt
inc
mov
bound
adc
mov
mov
rorl
cmp
and
insl
jno
push
out
lock
sub
movsb
es
cli
or
jne
mov
fsubr
test
and
movsb
cli
test
or
and
dec
sbb
jae
insb
cmp
mov
aaa
or
lret
ljmp
pop
pop
leave
dec
mov
popf
outsl
movsb
imul
out
inc
in
push
ss
rcll
jge
add
dec
mov
ds
and
adcb
lret
mov
jo
dec
jmp
or
js
push
ret
lret
decl
lea
jo
daa
mov
aad
dec
hlt
mov
and
pop
movsl
scas
inc
mov
in
cld
jle
into
ds
mov
or
mov
sub
mov
inc
push
xchg
pusha
fstl
pushf
and
jne
cmpb
outsb
int3
scas
inc
testb
add
faddl
jmp
pop
adc
data16
testb
jae
sbb
nop
push
xchg
and
adc
pop
xor
and
andb
add
sbb
adc
insl
pusha
test
sub
pop
pop
leave
fsubrl
lcall
xor
jno
inc
push
ret
cmpsw
push
shll
mov
fsubr
pop
pop
sbb
int3
ja
or
jno
shlb
mov
xor
jo
repnz
stos
dec
scas
inc
loop
sbbb
jl
fs
jns
add
out
test
aam
add
jae
loope
cmp
jnp
or
adcl
cltd
lock
pop
gs
bound
popa
ret
and
loopne
stos
cmpsl
out
xchg
inc
dec
pusha
cltd
ficomps
hlt
pop
aaa
mov
sbb
ljmp
movsl
mov
jo
jge
stos
adc
push
iret
mov
repnz
push
push
jge
jl
movsb
fcomps
fnstenv
pop
lret
ja
push
inc
push
inc
lret
arpl
push
inc
mov
lea
cmp
xchg
jge
jge
cmp
or
mov
push
xlat
lcall
out
xchg
pop
fcompl
mov
xchg
bound
mov
inc
faddl
add
ss
add
hlt
push
push
xchg
daa
ljmp
lock
push
pusha
push
cltd
outsl
inc
jmp
sub
pushl
xor
insb
xchg
xorl
sbb
or
xor
fldcw
push
pop
cmp
xchg
mov
int
push
jbe
jp
repz
in
ja
add
xchg
cli
aaa
dec
sub
push
mov
jl
out
cld
outsb
popf
push
and
ljmp
lods
push
lea
int3
xchg
clc
xchg
in
xchg
aas
in
out
popa
push
pop
outsl
mov
imul
push
cmp
push
jle
or
push
imul
push
and
jns
pop
cli
jo
mov
cmp
mov
adc
xchg
stos
icebp
ret
mov
dec
mov
cli
out
movsb
cmp
cltd
inc
fimuls
jle
adc
sbb
sub
mov
jecxz
mov
pop
inc
sub
and
dec
add
arpl
dec
or
and
sub
jbe
add
jns,pt
lods
inc
mov
dec
jl
ds
ret
cmp
test
push
sbb
inc
in
cmp
jp
mov
in
dec
cmpsl
xchg
sub
out
dec
mov
add
push
jg
cmp
and
cmp
fdivs
testl
xchg
jbe
mov
mov
andb
into
xchg
lahf
pop
cs
scas
jae
cmpb
sbb
add
cmp
mov
xor
leave
mov
cmp
xor
inc
sbb
int3
mov
lcall
cmp
sub
push
add
jle
xchg
sub
idivl
xchg
sub
xchg
add
jecxz
sub
dec
jns
inc
lahf
lods
mov
and
dec
mov
mov
aas
into
sub
ljmp
call
jbe
add
push
fdivrs
test
stc
sub
cmp
mov
out
xor
cmp
sbb
fwait
sti
xchg
adc
xchg
jl
insb
daa
outsl
sbb
in
inc
inc
xor
jl
mov
jg
mov
jns
je
jbe
dec
lods
inc
jg
cmp
sti
and
loope
fwait
ds
dec
test
cmp
popa
js
scas
roll
stos
or
cmpsl
xor
jb
inc
mov
fmulp
or
ds
shrl
dec
jae
nop
jg
fbld
stos
cmp
mov
dec
jnp
push
lahf
pop
sbb
pop
rorl
call
mov
xchg
cmpsl
lret
cmp
aad
cmc
sub
icebp
add
mov
xchg
lret
mov
push
fbld
jae
jne
push
pop
shlb
inc
pop
hlt
mov
mov
mov
mov
enter
nop
push
pop
fwait
ds
test
sbbb
mov
fucom
addr16
les
jle
ljmp
inc
mov
push
out
aas
mov
ljmp
push
and
enter
xchg
jns
fimuls
popa
sbb
inc
cmp
mov
rcrl
mov
das
dec
mov
inc
jne
adc
xorb
fistpll
xchg
enter
aam
jbe
shrl
stos
cmp
push
nop
xchg
stos
jne
and
jbe
push
das
fisubl
pop
mov
mov
fldt
adc
mov
into
mov
xchg
cmpsb
dec
cmp
pop
leave
out
mov
jp
push
dec
mov
addr16
mov
jb
aas
fcmovnu
hlt
mov
imul
inc
and
movl
aas
stc
xor
cmp
dec
cmp
subb
jbe
dec
into
fdivrl
std
scas
jge
movsb
mov
xchg
mov
bound
xor
int3
cwtl
add
sbb
out
sbb
and
movsl
mov
popf
cmc
icebp
fnstsw
stos
push
and
cmp
xor
sti
cmp
repz
cmp
xchg
add
mov
mov
and
pop
pop
ja
insb
loopne
push
and
prefetchw
or
cs
mov
iret
xor
jbe
push
ljmp
jno
mov
mov
ljmp
dec
inc
xchg
mov
fstps
mov
dec
aad
out
inc
loop
push
dec
out
mov
insl
jge
mov
push
add
mov
jge
fmuls
movsl
or
cmpsl
stc
lods
jno
negl
cmpsl
cmpsl
icebp
xor
mov
xlat
fildl
pop
mov
ljmp
cltd
mov
jno
xchg
sbb
repz
inc
fxch
jne
and
adcb
dec
mov
ja
inc
pop
icebp
lods
inc
and
xchg
test
stos
dec
lock
repz
pop
pop
rol
cli
cmp
loop
xor
aad
mov
jae
into
push
xchg
insl
mov
xchg
mov
test
data16
call
mov
imul
insb
xor
pop
lds
notl
sub
fdivs
push
xchg
inc
arpl
jnp
mov
movsl
inc
adc
nop
jecxz
mov
push
shrb
xor
sti
out
sbb
jmp
xchg
test
push
movsl
int3
xor
jns
lods
lods
pop
pop
xor
adcl
and
cmp
add
and
scas
mov
sbb
insb
imul
mov
inc
popl
int
lahf
mov
les
add
leave
mov
mov
and
ja
dec
mov
movsl
or
fmuls
sub
iret
and
pusha
test
sbb
fisttpl
sub
xor
jg
sbb
adc
mov
sbb
push
sub
sub
dec
arpl
lret
add
pop
movsb
push
cmpsl
pop
mov
jb
and
test
fistpll
xor
sti
addb
lret
arpl
mov
ja
faddp
loope
cmp
stos
ja
mov
mov
or
inc
repnz
in
adc
js
ss
and
repz
dec
cwtl
andw
repnz
and
cmp
mov
push
jne
and
hlt
fdivrl
mov
jg
ljmp
xor
aad
pop
idiv
cmp
mov
xchg
jo
lea
popf
rclb
movsb
mov
adc
dec
lret
mov
int
add
or
xchg
xlat
lock
nop
xor
in
mov
js
iret
pop
aas
mov
pop
mov
pop
mov
pusha
jns
lea
xchg
movsb
mov
in
cli
movsb
fidivl
xor
push
inc
in
ja
xchg
outsl
ljmp
jbe
mov
add
cwtl
mov
ficoml
test
fidivrs
cld
lock
cmpsl
adc
icebp
sbb
sub
pop
add
add
xchg
cmp
dec
dec
sbb
adc
push
cmpsl
ret
aaa
pop
add
fisttpll
jbe
mov
loop
cmpsl
cmp
mov
fwait
cmp
notb
lock
and
testl
inc
fdivp
or
cmpsb
repnz
mov
mov
adc
mov
lods
hlt
js
inc
add
test
add
lods
sub
js
stc
int
or
imul
mov
inc
outsb
loope
xchg
fstpt
mov
lret
xlat
dec
pusha
in
xchg
mov
jbe
pop
xchg
sbb
jp
dec
mov
aam
sbb
jecxz
xor
aaa
icebp
repz
jno
icebp
adc
sbb
xor
in
dec
xor
in
scas
dec
out
cltd
in
aam
jmp
dec
jle
dec
xchg
rolb
sub
addr16
stc
es
ljmp
sbb
xchg
add
and
xor
push
sub
iret
in
stc
into
out
mov
pop
dec
fisubrs
je
leave
rorb
or
ds
popl
sbb
mov
lcall
cmp
push
mov
or
push
add
aad
or
mov
das
inc
lret
jnp
xor
and
sbb
lock
jmp
push
jae
iret
ret
and
xchg
les
sub
arpl
xchg
xchg
inc
lret
test
ja
sub
daa
jnp
frstor
imul
test
sub
lahf
das
inc
int3
out
adc
push
psadbw
fs
xchg
icebp
inc
push
lcall
dec
std
xchg
cmc
mov
xchg
movsl
icebp
cltd
xchg
xchg
lods
jle
adc
jno
mov
add
jmp
xor
data16
sbb
push
dec
jns
fwait
and
xchg
xchg
adc
cmc
xchg
and
leave
push
push
push
xchg
addr16
push
fdivp
cmp
setae
xchg
sub
ret
cmpsl
ret
rorl
outsl
xlat
jmp
or
cmp
inc
imul
cltd
call
lds
inc
rcrl
imul
jp
lahf
and
fsubr
jp
xchg
lock
cmpsl
fiadds
dec
cltd
rolb
cmp
push
mov
xor
xchg
in
test
outsl
daa
sbb
in
outsl
xor
jp
mull
arpl
jae
rcll
jge
bound
xchg
xchg
aaa
dec
popf
inc
ds
cmp
jp
dec
mov
cmp
push
je
dec
shlb
and
xlat
leave
mov
testl
sub
pop
xor
jle
stc
cld
out
inc
pop
cmc
or
nop
push
xor
inc
push
pushf
mov
sahf
jle
sahf
sahf
mov
xchg
addr16
not
gs
lcall
es
sub
pop
jge
fsubs
cmp
fsubrs
loope
faddl
xchg
sbb
sbb
xor
aad
pop
mulb
xchg
pop
scas
jns
inc
xor
lods
and
aad
push
std
testb
ficoml
xor
lea
call
add
leave
lods
dec
cmp
iret
test
lcall
push
repz
loope
subl
mov
jb
mov
adc
inc
jg
mov
push
mov
jo
sbbb
xor
push
jmp
int3
jle
pop
cmp
mov
icebp
and
addr16
adc
out
and
cli
popf
stc
mov
fstl
add
xor
clc
outsl
fsts
aas
dec
sub
jmp
sbb
das
adc
data16
pop
imul
or
lret
sbb
pop
lret
mov
xor
push
jnp
fs
pop
sub
movsb
mov
mov
imul
xchg
cmp
sbb
xchg
iret
icebp
or
dec
inc
es
ss
mov
adc
inc
xor
scas
pusha
outsl
add
pop
push
xor
adc
push
fisubrl
or
xor
pop
push
out
pop
aas
insb
shl
in
stos
and
js
jbe
adcb
movsb
pop
jbe
sbb
test
fs
xchg
js
sbb
sub
cwtl
sahf
xchg
outsb
inc
mov
adc
dec
cmp
or
and
jns,pt
pop
sub
fmull
imul
adc
dec
cmp
test
mov
fiadds
xor
push
sbb
pushf
xor
je
aas
ja
rclb
decl
sbb
and
push
xchg
xchg
add
dec
pop
mov
call
xor
xlat
and
and
dec
mov
push
bound
mov
fisttpll
nopl
or
sub
jne
cmp
repnz
push
ret
inc
int
sti
imul
jle
sub
repz
roll
std
mov
test
adc
aad
or
dec
push
xchg
insl
in
mov
mov
mov
mov
add
fwait
add
test
orb
add
and
mov
jb
mov
or
jp
popa
test
or
dec
sbb
stos
cmp
shl
xchg
shrl
lock
jg
out
out
add
sbb
push
inc
mov
xor
lret
fdivr
cmp
xchg
cmp
insb
mov
cmp
jle
and
les
lret
jno
rorb
cmp
imul
gs
add
dec
sub
add
mov
ljmp
jl
push
imul
xor
out
add
in
repnz
sub
pop
outsl
add
cs
rorl
andl
pop
loope
or
inc
enter
push
inc
and
out
popf
sub
cwtl
inc
test
mov
sahf
pop
daa
test
scas
stc
imul
dec
cmp
push
scas
gs
sub
xor
mov
lock
inc
push
add
or
cmpsl
push
mov
adc
pop
xchg
pop
push
in
mov
or
test
jns
jmp
push
cmp
jmp
push
jecxz
imul
int3
aas
dec
decb
mov
ja
pusha
xchg
xor
xchg
pop
clc
sub
mov
xchg
mov
pushf
xor
jae
dec
push
jno
into
dec
jbe
ds
cmp
imul
repnz
pop
xor
dec
pop
add
pop
dec
jne
dec
mov
add
in
addl
mov
mov
imul
aam
push
pop
popa
mov
and
pop
lods
rorb
stos
xchg
sbb
xlat
sub
lods
fisubl
push
or
outsb
inc
movsb
sub
fdivrl
mov
repz
and
cmp
ret
add
sbb
cmpsb
sbb
add
sub
loope
jne
out
cmpb
iret
ds
and
xor
mov
dec
addr16
adc
test
mov
sbb
adc
mov
xor
mov
push
mov
cld
scas
ja
or
push
push
outsb
mov
inc
jnp
xchg
out
xchg
lahf
mov
mov
mov
mov
lods
scas
sub
ret
pop
jae
test
test
adc
rcl
mov
lret
or
and
dec
and
repnz
jg
lcall
xor
call
push
ret
jmp
or
mov
ljmp
shlb
mov
adc
mov
cld
mov
or
fnsave
push
cmpb
jg
notl
js
pop
mov
xor
stos
mov
or
pop
mov
push
jo
cli
xchg
xchg
fiaddl
and
sahf
out
xchg
lret
xor
stos
mov
lcall
mov
test
xor
pop
mov
pop
adc
movsb
out
add
sub
mov
push
call
pop
xchg
xor
imul
ret
lods
mov
es
testl
fwait
inc
fsubl
rclb
nop
pop
adc
sub
cld
or
xchg
cmp
fcomps
cli
push
stos
ret
scas
mov
iret
adc
lret
lret
add
nop
sub
mov
xor
popf
xchg
cld
xchg
sub
adc
stc
loopne
ja
or
inc
cmp
inc
or
mov
dec
mov
sbb
lahf
cmp
sub
jmp
push
push
cmpsb
in
sbb
push
sub
xlat
in
fs
cmp
cmp
sete
mov
push
pop
call
or
sarl
mov
xchg
push
jae
ss
in
mov
aam
xchg
xchg
xor
outsb
je
jno
dec
fistpl
fstpt
xchg
pop
mov
push
lods
mov
in
xor
push
ja
movsb
scas
mov
mov
push
jo
pop
cld
repnz
mov
pop
outsb
movsl
test
add
call
jnp
xchg
sbb
into
jmp
mov
pusha
inc
inc
push
jl
jle
mov
push
outsl
adc
es
mov
es
fistpll
xchg
mov
mov
aam
push
or
adc
dec
mov
adcl
push
out
xchg
lahf
imull
daa
dec
lds
jmp
out
push
mov
pop
cmp
sahf
xor
outsl
aaa
mov
sbb
mov
xor
xor
and
lods
xchg
filds
jmp
push
and
aad
stc
lea
into
push
or
add
les
sub
xlat
sub
jae
cmp
push
hlt
push
xchg
lcall
mov
push
mov
sbb
jge
cmp
div
sub
sbbl
push
test
mov
cmp
cwtl
mov
sahf
push
or
jp
push
cltd
lahf
sbb
jne
push
adc
jo
fwait
push
insb
jl
daa
cltd
lds
fisttps
scas
xorb
stc
inc
add
jne
dec
cmpsl
lcall
dec
push
xor
pop
out
push
in
dec
out
ret
jae
inc
pop
pop
sub
into
orl
sub
lea
pop
xchg
in
push
push
adc
data16
pop
addl
pop
and
test
mov
mov
movsb
popf
and
or
xlat
stos
jnp
fildll
sbb
insl
es
lret
bound
scas
jbe
adc
add
call
lahf
xor
or
rol
dec
cs
in
push
int
xor
mov
adc
cmpsl
movsl
lds
adc
inc
cmp
sub
lea
xor
adc
mov
pop
inc
cmpsl
out
gs
ja
cmp
mov
inc
aas
pushf
adc
int
or
dec
push
daa
clc
mov
ds
push
ljmp
call
inc
xor
das
xor
jb
pop
cmp
inc
pop
mov
imul
sub
mov
cmp
and
or
mov
lahf
in
fwait
add
ja
insb
push
push
sub
shlb
sub
js
jnp
test
dec
test
lea
pop
testl
pusha
jge
into
loop
icebp
aam
dec
mov
mov
lahf
mov
pusha
adc
std
loop
mov
bound
insb
jle
xchg
xor
outsb
mov
or
mov
pop
jb
mov
mov
pop
mov
add
push
in
pop
sbb
adc
jb
dec
mov
fbstp
xchg
andl
cmp
rcl
subb
leave
pop
jbe
sub
pop
jbe
push
fnsave
test
xchg
scas
xlat
jecxz
lea
mov
xchg
pusha
enter
rcrb
dec
int3
dec
mov
sub
cmp
nop
repnz
xchg
mov
push
xchg
mov
cwtl
insb
sub
xchg
pop
das
inc
loop
dec
push
loop
in
clc
rcrl
cmp
cmpsb
xchg
loopne
cs
mov
mov
andb
fwait
in
xchg
inc
push
jmp
mov
mov
loop
mov
push
sub
fcompl
xchg
outsl
mov
scas
jae
cld
cltd
loopne
stos
inc
sub
add
movsb
adc
test
mov
push
fucomip
fimull
out
and
sahf
jecxz
xchg
ljmp
jne
mov
pop
xor
pop
test
sub
pop
mov
lds
insb
pop
sti
fwait
aam
pushf
mov
xor
or
lahf
mov
cltd
inc
mov
fisttpll
cmp
mov
aam
jmp
xchg
loopne
mov
jne
xor
orb
adc
cmc
cmpsl
cmp
icebp
xchg
lcall
pop
stos
sahf
pop
ja
pusha
sbb
fs
ja
cmc
call
cmpsl
xchg
cs
test
cmp
pusha
cmp
stos
imul
add
or
and
or
cmp
imul
iret
dec
psraw
stc
mov
cmpsb
in
incl
jp
aaa
shl
ds
dec
inc
rcrl
inc
add
push
out
jle
dec
inc
sbb
ss
push
push
je
mov
jns
fiaddl
inc
adcl
add
cmp
mov
inc
pop
lods
cld
faddp
loope
into
xlat
mov
mov
inc
mov
imul
xchg
stc
cmp
shll
jno
bound
sub
mov
into
mov
sbb
adc
mov
mov
cwtl
jg
pop
sub
xchg
hlt
outsb
push
ljmp
sbb
inc
jge
jg
cmp
outsl
inc
mov
dec
int
mov
popa
adc
lret
push
dec
dec
loope
in
jbe
cmp
mov
test
ror
add
lcall
mov
sbb
push
cld
push
adc
xor
sub
shrb
and
jp
jbe
and
lods
xchg
jge
sbb
mov
call
fisubrl
lds
test
test
nop
add
jno
xor
fisubrs
sbb
loop
out
xor
rol
divl
aam
aas
pop
sbb
loop
cmpsl
cmp
sbb
jae
enter
dec
ja
repnz
mov
bound
fwait
mov
and
pop
insb
jle
adc
cmpsl
lds
or
ljmp
movsl
fiaddl
inc
mov
mov
dec
icebp
jecxz
xchg
mov
mov
xchg
adc
imul
sub
sub
and
dec
fucomip
mov
movsl
cmc
jl
and
or
pop
sahf
in
dec
repz
out
xchg
push
add
leave
ljmp
enter
xchg
pop
std
sub
scas
or
andb
icebp
push
mov
and
mov
pop
push
adc
ficompl
cld
lcall
in
cld
jno
xchg
jae
cmp
add
cmpxchg
push
push
mov
mov
pop
mov
scas
scas
nop
or
add
leave
jl
aas
loop
adc
dec
into
testb
data16
stos
popa
addl
sub
test
or
in
movsb
fs
sub
lret
bound
mov
fildll
test
push
mov
jo
sbb
push
mov
sub
jo
mov
cs
movsl
pop
leave
dec
sbb
jne
scas
ljmp
push
sbb
push
jbe
orl
stc
xchg
cmp
movsl
imulb
js
and
das
push
mov
adc
loopne
cwtl
aad
dec
adc
xor
sub
sbb
or
jge
cmp
nop
cmp
push
add
lock
xor
mov
pop
xchg
sahf
xchg
sbb
call
sarb
xchg
ret
sarl
mov
mov
pop
xchg
push
dec
pop
xchg
dec
mov
repnz
cmp
ljmp
dec
aas
xchg
aad
loope
ljmp
pop
ret
or
sub
pop
add
jnp
add
hlt
fdiv
dec
fimuls
cmp
jns
in
inc
cmc
dec
daa
sub
xchg
inc
pusha
clc
adc
lret
cmp
arpl
pop
dec
add
ret
sti
pop
fbstp
sbb
and
in
stc
nop
fcomi
outsl
lret
sub
mov
sbb
mov
pop
imul
pop
dec
add
jb
popa
clc
mov
sbb
dec
pop
jg
cwtl
jp
sub
adc
cmpsb
leave
lcall
xor
movsl
in
dec
cmp
adc
xchg
pushf
inc
xlat
into
mov
fmuls
scas
cmpsb
aaa
ja
jl
push
mov
rcll
fistpl
xor
aad
out
fsubl
shr
and
push
popf
pop
mov
and
dec
pop
mov
mov
cmp
adc
and
scas
jne
repz
xor
cltd
jno
int3
mov
inc
jae
mov
fcmovbe
insl
or
imul
cmpsb
insl
mov
loopne
dec
pop
add
mov
fnstsw
aas
ss
loop
and
sub
lret
xor
dec
push
dec
loopne
mov
mov
jecxz
sub
dec
add
mov
push
push
movsb
mov
outsl
push
sbb
push
cmp
cld
movl
or
push
and
orl
mov
inc
xor
mov
ds
lods
fnsave
mov
loope
repnz
pusha
jle
inc
push
cmp
aas
pop
sbb
fs
test
aaa
into
mov
pop
ja
pop
scas
out
pop
psrad
or
and
pop
ficompl
mov
sbb
arpl
inc
sub
adc
cwtl
aaa
push
cmpsb
mov
popf
xor
pop
adc
lahf
stos
jge
sub
in
mov
add
stos
push
add
xor
repz
pusha
testl
orb
icebp
push
ret
fwait
adc
cwtl
loope
loope
mov
push
js
add
lcall
repz
mov
xchg
sti
xor
das
mov
mov
add
popa
outsl
fidivs
andb
addb
mov
insl
mov
jmp
mov
xor
dec
mov
mov
sub
dec
mov
testb
dec
mov
dec
dec
shrb
stos
mov
jmp
bnd
jo
scas
stc
xor
adc
fdivl
jbe
xchg
in
clc
repz
inc
cwtl
sarb
or
ja
fs
xlat
mov
push
rorl
mov
cld
lret
push
sub
xor
test
out
push
andl
jle
and
dec
lods
icebp
outsb
cmp
xchg
adc
jl
cmp
fildll
sub
xchg
mov
push
ljmp
sahf
mov
xor
dec
dec
push
add
xor
mov
push
in
xchg
adcl
into
enter
aaa
push
std
fnstenv
repnz
dec
adc
aas
mov
or
idivb
or
pop
adc
call
test
in
fisubl
addr16
xchg
decb
cmc
sub
sbb
stc
jbe
in
cmpsl
fidivrl
cld
repz
adc
mov
mov
imul
or
es
cs
repz
mov
mov
aaa
mov
add
xlat
icebp
mov
add
xchg
xchg
cmp
cmp
pop
mov
clc
int3
lret
out
cmp
in
aaa
iret
ret
dec
dec
pushf
push
mov
in
xor
add
jns
or
stos
out
popf
push
add
adc
cmp
jo
into
cltd
movsl
ffree
movsl
inc
mov
and
rdmsr
fs
mov
sub
xor
in
push
sub
and
cmp
push
popa
sbbl
ja
mov
cltd
mov
xchg
adc
call
leave
xor
adc
addb
mov
scas
sbb
push
fs
mov
pop
push
and
es
dec
mov
es
xlat
jmp
sbb
mov
adc
or
adc
cs
test
out
or
dec
pop
jbe
mov
test
jge
push
dec
test
inc
cli
sub
mov
cmp
jb
iret
dec
and
sbb
sahf
add
xor
lods
stc
mov
cmp
cltd
rcrl
imul
es
bound
fnstcw
aas
pop
jb
lods
loope
mov
mov
hlt
iret
sub
mov
lds
shlb
out
xchg
sbb
jmp
or
cmp
adc
jns
imul
sub
dec
push
insl
scas
ret
mov
mov
loop
mov
ret
movsl
lods
jecxz
push
stc
ljmp
and
inc
js
out
call
or
jb
ja
jo
lcall
push
mov
mov
or
adc
lahf
icebp
inc
sbb
mov
xchg
xor
mov
dec
subl
outsl
mov
cwtl
bound
insl
notb
loop
loope
test
add
jg
std
aas
dec
xchg
mov
popf
call
sbbb
into
mov
mov
add
inc
and
test
lret
pop
hlt
icebp
arpl
adc
pop
sbb
push
aas
in
jle
cli
and
mov
int
stos
pop
lods
xchg
out
rcrb
mull
cmp
popa
mov
add
pop
imul
jbe
xor
mul
add
cmp
test
dec
mov
icebp
lahf
iret
rcrw
dec
inc
ret
adcl
add
mov
int3
push
repnz
adc
out
mov
xlat
cmp
sahf
cwtl
jmp
outsb
mov
aam
scas
stc
in
cmp
daa
inc
mov
arpl
shrl
out
jne
imul
mov
and
mov
jo
mov
decl
test
inc
xchg
bnd
fisubrs
add
int3
aas
repz
jmp
lcall
pop
jmp
orl
sbb
xchg
push
lds
sub
fcom
out
ja
scas
xlat
dec
cwtl
dec
xchg
psadbw
shrl
jp
fmul
aaa
gs
xor
test
dec
jbe
adc
xchg
push
cmpsb
test
and
cmp
rcrl
cmp
mov
jge
pop
leave
sbb
inc
repz
out
jae
pop
mov
fstpl
cmp
mov
mov
xor
mov
cltd
aad
in
push
mov
mov
test
jbe
jmp
sub
in
nop
inc
adc
mov
sub
sub
mov
xchg
mov
push
adc
mov
imul
data16
sbb
sub
ffreep
ljmp
int3
cmc
ljmp
adc
popa
out
cmp
jns
jmp
jo
aad
repnz
mov
fwait
int
fiadds
mov
test
jb
push
int3
fs
fdivl
and
pop
push
ja
cmp
sbb
flds
in
pusha
add
pushf
sahf
xor
and
and
jae
dec
ret
mov
test
or
es
mov
xchg
mov
jno
push
lret
jae
lock
lcall
cmpsl
out
out
xchg
xchg
pushl
loop
jo
inc
int3
pop
fs
jl
in
cmp
xor
outsl
shr
gs
mov
fldcw
adc
dec
or
jecxz
jmp
ret
fnsave
push
push
pusha
mov
mov
jmp
fsts
mov
add
xchg
dec
in
mov
or
cld
cltd
pushf
xor
cmp
pop
gs
cmp
dec
mov
add
and
sub
cmp
pop
lods
jge
cld
js
and
pushf
push
mov
push
mov
inc
mov
out
insl
pop
sahf
sbb
int3
mov
out
and
les
popa
dec
mov
shr
repnz
mov
fs
sub
cmp
or
add
jmp
push
add
push
popf
xor
data16
stc
xchg
rcll
mov
mov
mov
sub
push
adc
dec
sbb
std
sbbl
mov
les
outsl
fbld
push
movsb
in
pop
into
push
call
cmp
mov
inc
pop
fs
pop
cltd
xor
lock
and
hlt
push
orb
leave
pop
sub
mov
jecxz
das
lcall
mov
fwait
and
bswap
pop
movsb
repnz
jne,pn
andb
inc
fiaddl
pop
imul
popa
clc
sbb
int
adc
jb
and
adc
je
out
pop
dec
fiaddl
and
jge
aas
dec
lret
iret
dec
fcomp
in
and
iret
out
arpl
jle
fucomp
mov
cmp
loop
ja
cmpsl
push
mov
imull
xor
pop
loop
pop
subb
out
push
cmpsl
pop
shll
int3
sbb
push
jle
dec
mov
pushf
scas
mov
notb
jb
sbb
into
xor
and
lret
jae
outsl
neg
xchg
jns
popf
xchg
cld
xchg
imul
pop
call
cmp
fildll
daa
mov
loop
pop
and
mov
inc
pop
stos
sti
lock
stos
xchg
fnstcw
lret
mov
fcomps
rcrb
mov
dec
ret
ret
mov
jae
cwtl
sub
adc
negb
imul
mov
xor
sbb
pop
enter
mov
int
xor
cmpsl
mov
in
xchg
mov
lock
int3
out
lret
lret
cli
or
mov
jnp
cwtl
sarb
jns
repnz
dec
cmpsb
test
mov
lret
cld
push
into
fnstsw
iret
call
and
cwtl
das
leave
outsl
and
xor
out
hlt
mov
jno
mov
adc
sbb
rcrl
dec
rorl
hlt
dec
sub
jnp
and
movsl
inc
shrl
mov
out
loop
push
push
pushf
test
data16
lock
xchg
sub
sbb
mov
inc
in
or
adc
lods
fwait
cmpsl
fucomp
lea
xchg
stos
arpl
xchg
xor
clc
outsl
push
rolb
cmp
or
test
out
mov
dec
jbe
jge
mov
ja
aad
sub
mov
and
mov
cmc
push
enter
push
je
imul
xor
cmp
sub
sub
mov
mov
in
les
fdivrs
out
dec
xchg
icebp
xchg
lds
mov
jecxz
ljmp
mov
push
bound
dec
fildll
adc
push
xchg
inc
xor
mov
pop
push
repnz
dec
mov
insb
jnp
stos
ljmp
ljmp
out
das
sbb
jle
stos
jbe
js
jle
and
mov
mov
cmp
inc
mov
or
mov
jp
xchg
adc
ljmp
loopne
push
mov
sbb
repnz
push
xor
test
mov
je
dec
cmpsb
insl
push
neg
fwait
mov
mov
dec
rorl
in
inc
mov
aas
push
std
add
nop
scas
enter
and
fwait
and
leave
fisubrl
sub
fisubl
lds
push
outsl
pusha
aam
cmp
mov
pop
mov
iret
jo
les
mov
adc
outsb
xor
push
dec
mov
jle
pop
es
push
dec
jo
jbe
push
test
push
jmp
js
cmp
inc
and
add
in
add
mov
fidivrl
add
xor
scas
inc
cmp
rclb
dec
mov
jnp
in
pop
adc
inc
iret
lcall
mov
aam
push
paddsb
popa
outsl
pop
scas
stos
cli
inc
jmp
inc
xor
ss
sbb
xchg
jo
push
sub
loope
hlt
jns
les
cmp
sbb
xchg
mov
jb
pop
mov
outsb
add
mov
mov
cmp
fimuls
push
xchg
cmc
mov
cltd
shrl
mov
movsl
mov
shrb
inc
pop
jno
cs
fisubrs
jle
jmp
inc
aad
sub
fdivrl
jl
mov
push
les
imulb
jmp
or
bound
sbb
or
xor
mov
fwait
or
into
gs
xchg
adc
out
cmpsb
fwait
xchg
sahf
in
inc
cwtl
xchg
into
or
ds
arpl
inc
pop
std
in
xchg
dec
inc
into
aas
aam
jp
ss
int
mov
cmpsl
in
bound
xor
addps
mov
nop
sub
movsb
mov
xchg
lret
pop
fdivl
lret
jg
ljmp
mov
and
clc
push
adc
dec
ret
inc
jo
jo
or
scas
dec
add
adc
adc
stos
in
std
xchg
dec
jns
ljmp
fwait
xor
dec
mov
clc
out
pop
mov
mov
movsb
or
jecxz
mov
shll
dec
loop
test
or
add
mov
mov
mov
sbb
jg
and
jecxz
dec
sarl
cltd
mov
gs
and
inc
mov
fst
cmp
mov
ret
mov
jns
lock
dec
push
je
out
jae
outsl
sub
cmp
sub
push
mov
mov
into
imull
push
fnstenv
jno
jb
fstpt
xchg
test
push
scas
mov
adc
xor
and
adc
fs
push
int
outsl
mov
push
movsl
mov
mov
sub
sub
mulb
pop
setb
inc
xor
cmc
out
jmp
loopne
adc
int3
sub
inc
pop
cmp
sub
mov
aad
inc
jbe
xlat
fs
lods
lods
test
lret
jb
mov
add
inc
cmp
in
xor
mov
adc
mov
and
ja
mov
shll
dec
clc
and
xchg
fs
sbb
andl
out
cmp
cmc
mov
fstpt
xchg
adc
fimuls
mov
outsb
sahf
inc
loope
xor
insl
dec
add
push
push
inc
mov
pop
add
test
rol
mov
into
adc
xchg
mov
icebp
adc
push
rol
out
lds
cmpb
sbb
mov
iret
xorl
xchg
outsl
mov
sbb
dec
mov
pushl
and
mov
dec
fildll
jnp
loopne
inc
fdivs
jb
sbb
inc
out
lods
sub
add
mov
loopne
stos
into
and
stos
je
sub
sbb
ja
mov
xchg
stos
push
aaa
push
dec
enter
call
clc
sahf
xchg
mov
dec
sbb
loopne
xor
fistps
insl
mov
notl
and
ret
pop
cmp
jno
xor
sbbl
xchg
xchg
sbb
push
sbb
es
popa
cmp
xchg
add
test
or
inc
insb
fidivs
leave
push
leave
mov
and
nop
call
sbb
shll
inc
outsb
pop
shlb
mov
out
sti
mov
test
mov
sbb
pushf
mov
mov
push
add
test
cld
sub
xor
fistps
shrb
mov
int3
inc
leave
or
cmpsl
stc
pop
aam
xchg
cwtl
and
xor
push
mov
nop
fmuls
dec
fxch
pop
or
les
je
in
nop
daa
pop
cs
add
xor
push
push
inc
in
dec
cmc
mov
repnz
pop
sarb
imul
es
inc
fmul
push
nop
mov
rcrl
xor
out
outsb
fcomps
testb
cmp
cmc
cmp
push
lods
mov
jge
push
or
gs
jg
iret
sarl
icebp
rcrl
ds
mov
jle
popf
icebp
gs
xchg
sarb
aam
and
jecxz
mov
jp
sub
mov
imul
arpl
rcl
test
leave
push
call
aam
outsb
jl
cmc
push
loop
lods
mov
push
jae
pop
sbb
rcrl
out
or
pop
into
shlb
lods
push
jno
dec
sbb
xchg
lds
in
imul
add
in
popf
ljmp
movsb
fiaddl
sub
andb
das
push
mov
jmp
in
incb
scas
xor
ljmp
dec
imul
push
es
mov
andl
sub
scas
scas
ds
cmp
jg
fs
popf
cmpsb
xor
sub
popf
je
cmpl
sahf
enter
mov
dec
jg
jl
add
movsb
and
push
xchg
nop
int3
sarl
jle
gs
jle
mov
movsb
cwtl
lea
jg
jne
xchg
mov
out
adc
add
stos
mov
cltd
xchg
int3
cmp
sti
push
jg
inc
hlt
into
pop
sub
and
lret
ja
idiv
fs
jmp
xor
rolb
insb
jo
xchg
mov
sub
jae
mul
adc
clc
mov
fidivrs
hlt
or
add
xor
jge
aam
insb
mov
add
push
int3
imul
les
xlat
outsl
xabort
pop
fnstsw
add
xchg
nop
daa
lds
xor
pop
inc
mov
sti
mov
jl
pop
rcrl
dec
jle
xor
xor
call
shlb
movsb
push
in
fucomip
cwtl
jb
add
inc
andps
testl
mov
andl
aad
push
lret
in
jmp
jl
sub
cmpsl
push
and
or
cmpsl
test
in
outsb
lsl
xchg
xor
adc
aas
sarb
or
lods
push
xor
push
fstps
pcmpeqd
sbb
sbb
ss
cs
mov
pop
mov
dec
lods
es
cltd
push
in
clc
pop
rcr
cmp
adc
mov
addr16
xlat
outsb
adcl
mov
cmc
sbb
fwait
cmp
sub
test
addb
pop
addr16
cltd
add
push
mov
xchg
sub
insl
test
out
movsl
lret
ret
movb
icebp
dec
repz
and
sarl
sbb
int3
popa
xor
xchg
jg
pop
or
lods
pop
scas
fucomp
pusha
inc
push
aas
xor
xor
push
sub
adc
pop
clc
push
imul
dec
mov
add
add
inc
jmp
pushf
pusha
jp
movsb
jb
add
or
aad
push
cmpsb
xor
inc
pop
dec
aam
lea
inc
out
mov
dec
lcall
adc
subl
les
test
scas
or
ja
test
or
push
xor
stos
leave
cmp
jl
dec
clc
mov
jnp
pop
or
pop
sub
into
cs
mov
decb
jle
cltd
testb
mov
pop
add
sbb
bound
xor
ds
fstl
jne
mov
and
les
inc
bound
dec
ret
cmp
inc
push
leave
add
popa
xor
sbb
movsl
dec
adc
dec
in
push
push
aam
inc
into
test
xorb
mov
nop
mov
mov
in
adc
pop
mov
dec
push
jl
repz
js
insb
lds
jecxz
pusha
popf
fdivrs
inc
mov
out
repz
inc
inc
push
mov
adc
mov
mov
je
sub
cltd
add
inc
jp
push
pop
lock
repz
mov
popa
lds
popf
xor
pop
scas
mov
or
jae
dec
and
adc
mov
sbb
je
cld
lret
fdivs
imul
push
scas
les
movsl
stos
inc
xlat
cmp
decl
push
xor
xchg
dec
push
inc
pop
or
inc
pushf
and
lcall
in
push
aam
cli
mov
movsl
cmpsb
push
icebp
iret
dec
mov
xchg
lock
enter
xchg
mov
dec
andb
mov
popa
xor
lahf
push
imul
push
imul
fsubrp
in
rorb
icebp
pop
mov
inc
aad
and
int3
and
int3
pop
cmp
and
addr16
inc
inc
imul
push
ja
add
dec
adc
jbe
js
ss
das
test
lock
pushf
lock
cmpb
push
mov
and
jg
movsb
out
iret
lret
cmp
aad
imul
xchg
jle
ret
data16
cwtl
loop
xor
imul
outsb
fnstsw
cmp
sub
add
shlb
push
test
ret
jmp
jb
scas
fstpt
stc
ss
arpl
sbb
inc
push
jne
aas
sbb
loopne
dec
adc
shr
mov
lcall
rclb
push
mov
scas
mov
mov
fnsetpm(287
sbb
cmp
lcall
and
cmp
adc
pop
shr
mov
aad
jae
sbb
popf
in
xchg
push
mov
mov
cmp
insb
pushf
imul
bound
rorb
xchg
push
in
mov
sbb
dec
lret
and
lret
arpl
popa
clc
inc
popa
jns
arpl
cli
or
shl
or
rorb
adc
outsl
and
jg
fmuls
adc
int3
icebp
inc
fnstcw
or
iret
push
cmpsb
and
jne
in
scas
pop
fs
stc
iret
je
add
pop
repnz
jbe
test
jmp
adc
mov
stc
aam
jl
jge
stc
or
mov
inc
inc
and
int
sub
call
test
scas
jp
mov
or
add
rcr
cmp
test
int
xor
sub
repz
lods
jae
popa
rcll
addr16
clc
push
outsl
lds
xor
cmc
addb
pop
in
pop
fildll
out
clc
aad
xchg
repnz
stos
imul
addr16
loop
scas
adc
adc
pop
out
pop
hlt
jbe
inc
cmc
cmp
xchg
enter
jns
lods
mov
enter
test
inc
push
test
mov
push
jbe
lods
inc
mov
sbb
fstpl
clc
push
popf
and
loop
rcll
ret
mov
add
dec
out
test
mov
push
fcoms
adc
mov
cmpsl
test
add
push
sarb
fisttpl
scas
xlat
push
dec
rorl
jl
out
push
in
adc
inc
pop
notb
adc
dec
mov
div
outsb
pushf
mov
cmp
aad
sub
jp
loope
lret
fdivs
push
push
movsl
mov
clc
xchg
add
dec
or
sbb
sub
cmc
pop
xchg
jns
mov
xor
pop
and
pop
sub
or
push
clc
insb
jle
xchg
in
outsl
ret
loopnew
pushf
jns
andl
jnp
ja
mov
cld
pusha
inc
jmp
mov
hlt
mov
jb
outsb
sub
jle
push
xchg
xor
popf
repnz
ds
jl
adc
push
mov
jbe
adcb
icebp
pushf
out
outsb
push
inc
push
rclb
data16
inc
add
cltd
cltd
inc
sub
stc
xchg
stc
sbb
sbb
insb
xor
and
subb
add
cwtl
dec
mov
push
lcall
jmp
out
mov
pushf
out
lahf
xchg
out
test
inc
aas
lahf
rcrb
xchg
aad
fidivrs
pop
int3
lea
leave
sub
and
imul
mov
adc
dec
or
icebp
lahf
adc
xor
les
lcall
bswap
popa
dec
cltd
jmp
add
call
lret
das
sub
or
incb
dec
fcoml
mov
pushf
xchg
cmpsb
xchg
mov
jbe
cmp
add
lds
fwait
scas
jo
mov
mov
lea
sbb
clc
sub
sub
stos
ds
pop
out
inc
out
aam
into
lret
idiv
mov
je
mov
loopne
pop
xchg
loope
and
push
add
and
fs
mov
movsl
cltd
mov
inc
in
cmpsl
adc
outsl
adcb
int
push
cld
and
mov
ljmp
ds
sbb
adc
movsb
adc
jns
std
out
push
inc
mov
sbb
lods
repz
es
jl
test
test
mov
push
je
popf
cmpsl
push
ret
shl
jo
repnz
mov
gs
stc
add
sub
stos
es
shrb
shll
cmc
stc
movsb
sbb
push
jecxz
push
repz
cwtl
xchg
in
jge
add
divb
leave
inc
and
cmp
dec
inc
fsubrp
jb
in
popf
and
jne
adc
mov
jmp
jle
pop
pop
test
fnstenv
dec
adc
stos
lcall
mov
mov
xchg
xchg
inc
fcmovb
rorl
cmp
ret
mov
mov
push
sbb
out
jbe
mov
int
and
add
push
jmp
hlt
mov
cmp
xlat
mov
or
jl
jo
jmp
xchg
mov
sub
adc
xchg
out
cmp
fldenv
pop
jo
xchg
fucomp
test
dec
lea
adcb
int3
pop
divb
fs
and
insl
call
or
test
xchg
adcl
loop
mov
shr
fucomi
ljmp
ret
pop
cwtl
sti
fwait
pushf
hlt
mov
bound
xorb
ja
sbb
sbb
inc
mov
js
sub
xlat
jle
mov
add
mov
imul
add
fisttps
aaa
into
fs
pop
jns
push
inc
xor
lea
and
lahf
cmp
mov
xchg
xchg
sub
data16
ret
out
std
popf
xchg
outsl
push
xor
add
ds
paddsb
int3
test
push
xchg
into
cmp
insl
and
mov
jp
and
ret
mov
das
xchg
or
stc
popf
or
jmp
mov
cmpsb
jge
daa
test
push
fsubp
psraw
faddl
dec
mov
rclb
push
sbb
or
mov
mov
into
out
inc
adc
pusha
pushf
xor
hlt
xchg
in
rclb
sbb
sub
dec
jmp
dec
popf
test
sub
sar
fs
xchg
pop
test
pop
jb
iret
jo
bound
sub
jb
popa
xor
in
std
or
stos
inc
imul
cmc
jl
add
hlt
jne
inc
stos
push
js
sbb
pop
scas
cmp
adc
jge
sbb
icebp
enter
adc
pop
inc
sbb
inc
push
jmp
cli
mov
test
sbbl
mov
stos
lock
pop
xchg
or
jge
sbb
pop
scas
call
std
test
jp
pop
xor
lret
test
jns
jge
mov
test
outsl
add
test
mov
scas
cmpsl
cmp
test
adc
lods
pop
repz
clc
std
stos
rcrb
jg
sbb
fdivrl
daa
loopne
les
push
clc
ret
mov
cmc
sbb
push
movsb
inc
inc
xchg
xlat
ljmp
ljmp
addr16
subb
adc
jnp
sub
sub
lods
daa
jne
xor
movsl
mov
pusha
mov
inc
add
and
leave
addb
jmp
jg
fldt
lods
add
dec
lahf
sub
xchg
jo
mov
jb
inc
test
cltd
clc
xor
fistpll
jns
pop
xchg
pushf
ss
pop
addl
mov
test
add
push
mov
imul
leave
jo
aam
xchg
test
push
xchg
xchg
rcrb
jno
insl
std
cs
test
in
fistpl
mov
xchg
pslld
xchg
xor
mov
push
dec
dec
pop
lret
jno
push
js
lahf
mov
xchg
mov
adc
test
jo
and
inc
das
outsl
jmp
lea
pop
push
mov
cmpb
stos
fs
loope
sbb
and
out
mov
inc
gs
icebp
cmp
mov
rcll
pop
mov
dec
xor
test
or
je
pop
lret
add
pushf
icebp
xor
pop
fldt
out
movsb
push
pop
lret
ljmp
mov
rcrb
sbb
popf
stc
lds
addb
dec
sub
bound
or
test
icebp
mov
xchg
sub
cltd
sub
sbbl
sub
mov
lods
mov
push
and
sub
adc
ror
mov
pop
cmc
dec
lods
mov
xchg
fidivl
mov
mov
dec
and
lods
clc
sbb
in
cmp
fisttpll
jle
mov
add
push
xchg
push
popf
stos
add
xor
push
mov
lods
inc
inc
sahf
aaa
xor
sarl
daa
jmp
add
add
sbb
inc
lods
loopne
mov
or
in
fsubl
add
mov
jb
and
ds
repz
daa
lret
push
insl
cmp
mov
push
cmpsb
sub
sub
fwait
repz
mov
out
outsb
movb
dec
cmp
mov
and
lret
and
mov
mov
les
adc
rcrl
jle
inc
jbe
outsb
dec
loopne
or
mov
push
inc
inc
fwait
mov
inc
and
in
push
aam
out
pop
dec
pusha
jmp
test
ret
outsl
icebp
mov
lods
nop
add
lock
popa
jmp
arpl
repz
out
mov
mov
mov
aad
dec
xchg
iret
movsl
and
sub
mov
mul
pop
mov
xor
std
adc
ja
ret
cmp
mov
xchg
inc
jne
push
xor
inc
add
mov
sub
out
nop
sbb
and
hlt
sbb
push
aam
mov
sbb
movsb
fidivl
inc
fnstsw
mov
jnp
push
xor
push
std
push
adc
outsb
push
pop
cmpsl
loop
mov
mov
das
adc
or
xchg
pop
daa
pop
pushf
sub
mov
dec
adc
jns
call
inc
adc
cwtl
inc
gs
mov
dec
jb
je
add
and
popf
push
push
pop
sarb
cltd
mov
sbb
paddd
xor
sub
inc
pop
or
stos
mov
leave
outsb
jnp
test
pushf
fisubrl
dec
pop
jbe
outsl
cmp
inc
adc
push
and
sbb
ret
cmpsb
xlat
dec
daa
or
jp
mov
bndstx
mov
jg
push
adc
les
xor
xor
cmc
out
loope
mov
jno
int3
repz
test
les
je
ret
in
or
lds
cmpsb
mov
jp
xchg
sbb
xor
js
adc
fsubrp
aaa
pop
jnp
mov
mov
lcall
enter
popf
sbb
inc
imul
jo
xor
sub
imul
jmp
lods
xchg
jns
sbb
mov
das
loop
cwtl
xor
sbb
loope
jns
sahf
xor
rcl
mov
jae
lods
jecxz
shll
mov
ljmp
mov
es
into
pushl
stc
jo
setp
ficoml
mov
lahf
lret
push
stos
inc
xchg
adc
mov
mov
pop
in
or
sub
cmp
lds
out
cmp
xchg
fdivs
add
sub
xor
adc
rcrl
jmp
push
jbe
mov
add
test
test
jno
out
ja
inc
enter
insl
insl
sub
pusha
shll
pop
mov
lahf
jle
inc
nop
sbb
test
push
jne
cmp
push
repnz
sbb
dec
test
sti
jno
adc
mov
jbe
imul
cwtl
mov
cmpsl
and
xor
mov
in
xchg
push
push
int
sti
aas
je
hlt
jmp
test
and
je
xchg
cltd
xor
xor
xchg
xor
mov
adc
mov
cmp
orb
push
jmp
pop
jge
mov
jl
inc
scas
rcl
imul
daa
sbb
inc
bound
imul
jno
inc
mov
jg
fldt
ja
inc
lcall
fldt
adc
mov
clc
stos
inc
cmp
push
call
sbb
cmp
jecxz
jp
cmp
mov
lods
xchg
adc
fs
xchg
into
imul
imul
shl
jbe
cmc
mov
insb
out
pop
sbb
mov
mov
inc
mov
arpl
sub
sbb
push
xchg
push
or
mov
rcr
fwait
jns
add
push
lahf
xor
popf
adc
jp
fwait
inc
add
addl
dec
mov
mov
pop
push
inc
movntq
mov
pop
mov
mov
xor
adc
insb
roll
cwtl
adc
lahf
cmc
push
xor
lcall
icebp
repnz
push
test
push
mov
pusha
in
or
push
pushf
scas
andl
mov
popa
orl
mov
inc
addb
cmp
movsl
jecxz
jl
mov
fnsave
mov
in
xchg
test
inc
call
pushl
push
nop
popf
mov
inc
in
pop
fnop
jmp
push
fsubrs
inc
test
inc
out
rcrl
jge
dec
sbbl
mov
push
mov
jb
jle
jg
xor
popf
jo
jecxz
clc
aas
testl
xchg
mov
loopne
pop
jmp
lret
adc
push
dec
add
xchg
cmc
jae
divb
out
scas
daa
pusha
pop
in
jl
mov
adc
popf
pop
jo
xchg
cmp
xlat
mov
dec
pop
sub
fisttps
or
testb
outsl
push
fwait
pop
add
inc
out
push
es
pop
rol
pop
pushf
mov
sub
mov
push
push
dec
jns,pn
fadd
xlat
ret
jno
addr16
sub
mov
mov
xchg
pop
inc
inc
test
push
hlt
pop
push
mov
push
push
mov
and
int
ss
imul
sbb
push
add
lret
cltd
add
sub
stos
mov
pop
jmp
adcb
or
imul
jae
cmp
xchg
in
fimuls
jmp
aam
and
xor
in
adc
or
bound
push
mov
or
idivl
ret
fwait
arpl
inc
sub
sub
call
xchg
sub
or
jle
outsl
imul
jns
shlb
xor
add
pop
xchg
fistpll
mov
fdivs
jl
sarl
or
lahf
xor
mov
fwait
mov
rcr
jnp
ja
inc
ja
xchg
pop
test
mov
jbe
push
movsb
ja
fadds
scas
xor
leave
pusha
rorb
ss
cs
and
ja
ds
shll
repnz
xor
sbb
inc
xlat
cmp
fwait
inc
inc
insl
xor
popf
ret
adc
dec
insb
jecxz
mov
test
fimuls
mov
je
hlt
jbe
cwtl
dec
add
xor
mov
mov
cmp
outsb
lret
movsl
push
or
jle
pushf
popf
or
mov
push
add
add
lahf
pushf
cwtl
gs
cmp
in
aas
push
imul
jb
fnsave
sbb
push
mov
dec
inc
push
cmpsl
fldt
mov
daa
in
lahf
pop
jle
add
clc
in
test
mov
mov
je
and
mov
ret
lock
mov
or
idivb
stc
add
sub
add
ss
and
sub
mov
cmpb
or
insl
aaa
popf
aaa
pop
and
insb
ffree
xchg
mov
fsubs
outsb
pop
call
imul
aaa
xor
jmp
pop
or
adcl
std
jecxz
mov
icebp
and
pop
sub
xchg
xor
imul
fwait
stos
mov
rorl
pop
daa
mov
ljmp
std
mov
pusha
cli
scas
push
inc
ffree
lret
std
mov
lret
sti
xor
lock
xor
bound
ja
rol
dec
jnp
xor
dec
adc
cmp
das
mov
enter
sbb
pop
stos
push
repnz
and
into
lret
pop
mov
lds
mov
push
orb
xchg
dec
gs
mov
xchg
or
pushf
stc
adc
aam
loop
icebp
mov
adc
insl
test
mov
cmc
or
movsb
bnd
adc
push
add
jecxz
mov
mov
jno
add
cmp
sub
not
push
out
std
insl
mov
sahf
sahf
add
xchg
jno
xchg
sub
mov
fwait
mov
add
ljmp
push
xchg
dec
mov
stc
es
add
decl
lret
push
aas
mov
hlt
mov
mov
shr
lret
and
push
sbb
or
inc
ret
push
out
imul
mov
int
rcll
pop
rorl
or
push
cmp
push
call
es
mov
mov
fldcw
cmp
push
jbe
insl
mov
xor
sahf
insl
cmp
xchg
les
jno
insl
xchg
gs
cmp
pop
aad
push
test
notl
inc
into
in
je
dec
fildl
xchg
pop
mov
imul
dec
in
sub
sbbl
popf
cmpsl
xchg
inc
loop
cmp
cmp
std
add
dec
lods
pushf
adc
rclb
loop
clc
jge
lea
aad
dec
ret
inc
push
bnd
rolb
int3
jge
push
fildl
jle
cmp
mov
call
dec
ds
fmull
dec
fdivr
mov
inc
inc
jp
je
int3
mov
call
mov
inc
mov
int
xor
jnp
int
mov
mov
mov
push
adc
cmp
dec
es
mov
rol
or
cld
negl
inc
pop
in
sub
cmpb
in
arpl
cmpsb
dec
sarl
mov
mov
jecxz
xor
cld
dec
adc
mov
inc
leave
out
rcr
lea
data16
and
push
int
push
dec
ljmp
ss
das
mov
test
jg
stos
xchg
push
sbb
push
gs
mov
shrl
into
inc
fstpt
dec
cmc
mov
popa
xorl
mov
cmpb
or
cmpsb
stc
and
adc
cwtl
pop
mov
jno
jae
adc
mov
cmp
mov
xchg
lods
dec
scas
mov
scas
jo
cmp
int3
out
jae
cmp
sarb
push
fdiv
out
push
mov
lea
mov
cmp
cmpsb
xchg
xor
repnz
cld
inc
insl
cs
lods
fld
xchg
jne
loopne
push
xchg
je
push
das
adc
fsubrp
push
fistpl
dec
in
std
push
add
in
jp
cwtl
fsubrs
das
push
addr16
jle
popf
xchg
add
mov
sub
or
cmp
dec
mov
mov
arpl
into
enter
xlat
rcl
adc
aad
add
dec
fdivl
mov
aaa
push
dec
lods
sub
pushf
out
mov
es
sub
cmp
add
mov
dec
mov
shrl
inc
out
je
inc
sub
fiaddl
jl
and
jb
jnp
dec
loopne
in
call
rcrb
inc
outsb
add
in
pop
scas
jp
push
out
xchg
test
add
jp
xor
mov
dec
aam
nop
sbb
xchg
cmp
mov
fwait
popf
sbb
pop
cmp
ja
scas
outsl
inc
xor
pushf
fiadds
popf
sub
insb
cmp
and
push
testl
dec
fdivs
ja
into
sub
dec
mov
stc
in
adc
xchg
es
incb
orl
call
jge
ljmp
js
push
and
mov
xor
sub
pop
nop
js
fsubs
mov
pop
xor
cmp
movsl
jg
inc
xchg
imul
jmp
mov
jp
lcall
iret
fdivl
mov
icebp
mov
xlat
bound
loope
sbb
dec
push
mov
rol
aad
fidivl
testb
inc
mov
loope
out
outsb
mov
add
popa
and
inc
mov
je
sub
fisttpll
idivb
jle
leave
es
iret
mov
sbb
mov
inc
loope
or
xchg
ja
inc
test
mov
xor
sarb
xchg
test
invd
dec
insl
pop
jae
das
mov
pop
jge
in
sub
mov
mov
cld
aaa
int
or
inc
ds
push
je
pop
sub
or
nop
sub
dec
pop
test
jnp
sbbb
pop
arpl
insb
inc
add
in
rorl
inc
sti
push
push
mov
sti
stc
stos
roll
mul
jp
sbb
jp
mov
add
imul
mov
and
loope
sbb
cmp
lock
sbb
mov
jle
mov
mov
fst
cmc
push
ljmp
ds
lcall
loopne
int3
fisttpl
ljmp
mov
pop
jle
pop
daa
jae
movsb
cmp
popa
adcl
dec
scas
outsb
and
arpl
loopne
repz
scas
idivb
push
gs
movsb
pop
sub
test
cmpsb
sub
adc
sti
pushf
out
sbb
cmp
rorb
mov
pop
or
jnp
decl
lock
in
add
shll
adc
lret
shlb
and
inc
mov
cltd
test
dec
hlt
outsl
push
out
push
xor
mov
mov
add
mov
xchg
mov
sbb
bound
push
or
scas
and
add
add
out
popf
push
and
mov
mov
mov
inc
adc
int3
lods
push
out
fistpll
jne
fmulp
pop
imul
jae
pusha
sbb
push
roll
out
jp
movsb
or
push
sub
push
mov
insb
aaa
fstps
aam
push
inc
icebp
inc
push
add
and
xorl
scas
andb
out
jmp
xchg
scas
cmp
cwtl
imul
hlt
xorb
stos
inc
mov
insb
cmpl
and
out
xor
lcall
mov
inc
frstor
xchg
fnsave
or
scas
sti
pop
sub
xchg
jb
mov
cmpsb
xor
mov
int3
clc
cwtl
jbe
lret
sub
out
sub
idivl
outsb
sub
sub
sbb
cmp
mov
mov
mov
imul
jne
je
jecxz
mov
xor
in
stos
or
push
lock
pop
xor
ficomps
mov
lock
je
stos
dec
xchg
jnp
mov
mov
in
mov
adc
les
adc
clc
in
mov
or
cmp
xchg
test
jae
lds
cmpsl
xor
jo
pop
mov
mulb
imul
jbe
xchg
lea
mov
push
hlt
fwait
push
int
jae
cmp
mov
mov
xchg
pop
or
imul
jmp
add
sub
cmp
aam
or
aaa
stos
sti
adc
jne
push
inc
sbb
outsl
addr16
fisttpl
cs
mov
aaa
push
inc
faddl
nop
arpl
inc
dec
and
inc
cmp
inc
addb
in
int
jmp
or
addl
sbb
mov
mov
cmp
dec
or
mov
sbb
repnz
inc
enter
loopne
ds
add
mov
mov
arpl
xchg
or
and
adc
sub
shl
mov
adc
sub
xchg
sub
dec
push
pop
mov
mov
mov
fisubs
dec
movsb
mov
lock
test
sub
sub
rorl
cwtl
add
add
outsb
stc
out
or
pop
jb
jl
or
sbb
scas
sbb
xchg
push
repnz
pop
or
fisubrs
xchg
push
sbb
dec
mov
push
pop
lods
sbb
pop
aas
add
lock
fs
cltd
sub
lods
outsb
in
jbe
or
dec
or
cmp
jecxz
or
mov
xchg
lea
sbb
ljmp
and
jmp
stos
gs
pop
adc
shl
and
lock
cmc
aaa
fisttpl
ret
arpl
lahf
stos
mov
rep
xor
out
xchg
mov
test
cmp
and
shll
sbb
sbb
xor
popa
and
pop
dec
out
jnp
push
outsb
or
repz
cmp
das
push
pop
std
or
test
iret
sbb
fsubl
or
mov
jp
les
dec
push
jp
mov
loopne
push
mov
dec
xchg
test
test
in
pop
test
add
pop
jle
mov
addr16
leave
inc
or
mov
lret
out
sbbl
std
mov
test
pop
popf
adc
jb
les
test
data16
push
xor
into
xor
imul
outsl
jle
mov
push
xlat
repz
ja
pop
jle
inc
sub
push
push
jl
xor
xchg
inc
test
pusha
and
arpl
fld
arpl
jb
jns
push
mov
dec
mov
lret
in
ficompl
dec
ds
ss
adc
xor
sar
jo
mov
std
xor
dec
rcr
mov
loopne
lcall
push
jl
inc
gs
xchg
fs
outsl
and
out
inc
in
test
mov
shrl
pop
int3
test
pop
push
mov
or
loop
xchg
imul
into
in
cmpsl
icebp
mov
or
fucomip
imul
mov
test
mov
nop
jne
ror
jno
pusha
mov
mull
or
inc
inc
mov
out
mov
cs
outsl
mov
pop
aaa
ret
leave
jmp
sub
or
jmp
xchg
decl
into
in
jecxz
cltd
loope
or
fmul
pusha
dec
je
insl
jg
out
and
inc
out
dec
sbb
inc
jl
loope
pop
sub
mov
pop
inc
pop
insb
jns
cmp
test
dec
lods
mulb
push
sbb
imul
aas
insb
xchg
mov
adc
dec
fnstenv
xchg
sub
mov
mov
pushf
xchg
outsb
mov
shlb
jecxz
aad
pop
pop
dec
icebp
adc
cmc
pop
movsl
cmp
pop
pop
jno
out
decl
push
testb
mov
nop
jne
mov
sub
cmp
inc
jge
jecxz
rcr
fidivrs
lcall
pop
xchg
insb
mov
rorl
xlat
jbe
sbb
xchg
into
mov
inc
lds
xor
sub
add
push
cwtl
das
adcl
inc
xchg
pop
lods
mov
push
cmp
mov
arpl
sbb
jl
mov
clc
and
shl
jnp
mov
or
imulb
pop
aaa
sbb
out
jg
fwait
ret
jl
popa
lcall
jl
xor
clc
or
fwait
inc
imul
pop
into
sbb
dec
or
cmpsl
pop
dec
dec
nop
daa
orl
sbb
xchg
icebp
or
sbb
xchg
jge
cmc
adc
push
cmp
arpl
xchg
fucomip
adc
pop
insl
inc
sarl
jmp
test
jecxz
popa
mov
fsubp
in
imul
mov
sbb
xchg
dec
add
out
push
pop
sahf
dec
mov
and
jno
lds
repz
or
xor
aam
dec
xchg
int3
sbb
mov
ficompl
pushf
sbb
xor
dec
imul
sub
pusha
hlt
cmpsl
adc
pop
sbb
sbbl
in
lahf
stos
mov
arpl
lea
cmpsb
adcl
test
and
inc
sbb
cld
popf
sti
mov
pop
inc
dec
mov
addl
rol
mov
cmpsl
cmp
mov
adcb
jb
sbb
sub
inc
cmp
xor
mov
cmp
scas
xlat
mov
lahf
stos
push
xor
xor
pop
mov
aaa
popf
stc
stc
loop
xor
pop
add
js
mov
das
jp
pushf
push
sbb
cmp
testl
gs
mov
repnz
jg
fbstp
xlat
sub
adc
cmp
xchg
dec
sbb
in
pushw
out
lahf
and
popf
aaa
mov
je
ljmp
cmp
push
sub
dec
sbb
cmc
adc
cmp
clc
xchg
push
aad
xchg
nop
mov
in
das
cmp
shl
ss
or
jnp
iret
loope
pop
into
fdivrl
out
mov
outsb
movsl
popf
lahf
testb
bnd
adc
mov
inc
jo
cmc
enter
push
jecxz
or
in
cmp
shll
cwtl
cs
loopne
mov
pop
adc
sti
jecxz
loopne
mov
mov
xchg
or
fs
jbe
sti
pop
mov
xor
out
xchg
xchg
pop
movsb
cmp
and
sbb
pop
push
dec
jno
jl
cmp
mov
pushf
fisttpll
in
inc
call
xchg
je
mov
arpl
loop
jns
rcrl
mov
pop
imul
in
dec
stos
mov
jl
jp
and
shlb
xor
or
xchg
xor
dec
dec
xchg
pop
sahf
jb
shlb
out
mov
mov
jge
mov
fs
scas
cmp
int
repz
sbb
in
xor
push
jns
jae
loop
enter
mov
cld
sbb
loopne
lods
pushf
mov
loop
lods
adc
int
dec
mov
push
loop
dec
cmp
inc
cs
ficomps
or
xlat
and
push
or
xor
push
cmp
and
shrb
pop
xor
mov
mov
sbb
sub
jmp
mov
stc
repnz
cmpl
int3
inc
fcompl
lods
sub
nop
fs
xchg
add
and
sbb
jae
repz
pop
test
xchg
nop
stc
dec
and
out
push
inc
xchg
stc
mov
xor
stos
push
shr
dec
xchg
loop
xor
mov
inc
hlt
cwtl
lods
test
scas
xchg
nop
dec
sbb
divl
fcompl
int3
jno
std
daa
aad
pop
adc
jne
popa
daa
mov
mov
in
aas
daa
jns
pop
pushf
push
cltd
jno
shl
xchg
fs
dec
addr16
cmp
jae
in
dec
sbb
ljmp
rol
adc
fnsave
dec
out
rcrl
insl
movsl
inc
xchg
ficompl
stos
mov
xchg
or
inc
gs
xchg
test
fstp
imul
in
sti
fs
lock
sub
xchg
stc
dec
imul
mov
xor
stos
iret
es
std
inc
std
movsb
lods
dec
lea
es
mov
aad
loopne
cmp
roll
sub
rclb
imul
jg
inc
scas
and
sub
ljmp
jp
and
sbb
int3
adc
add
sbb
pop
lret
sbb
aam
les
mov
les
mov
aaa
push
sub
sub
and
cs
scas
add
shl
aas
loopne
sbb
mov
fsubrs
ret
lretw
adc
sbb
sbb
gs
insl
imul
cmp
repnz
pop
dec
mov
mov
scas
mov
or
movsb
jae
testb
cmp
sub
add
push
xchg
loop
les
or
pushf
orb
imulb
repz
cmpsl
ds
xor
std
push
popf
outsb
sbb
adc
into
inc
pop
inc
loope
dec
xor
jbe
add
sub
pop
sbb
or
lds
push
enter
mov
in
fcmovne
enter
gs
xor
dec
mov
rcrb
push
mov
roll
xchg
mov
adc
xrelease
das
in
adc
pop
pop
sbb
clc
lea
fildll
and
mov
jge
mov
scas
test
aam
out
test
lahf
cmp
push
cmp
jecxz
pop
dec
arpl
sbb
mov
push
test
ret
inc
push
dec
push
dec
dec
xor
xchg
and
cmp
outsb
ljmp
jbe
mov
sbb
mov
pop
outsb
sub
pop
roll
mov
pop
mov
or
adc
sub
loop
dec
jecxz
xor
mov
xchg
out
mov
int
hlt
mov
test
out
cmp
in
sbb
jge
and
out
xor
ja
mov
aas
jbe
aas
or
add
idivb
xor
cwtl
imul
mov
pop
shlb
add
cs
out
dec
sub
dec
mov
stos
or
xchg
shlb
mov
add
ljmp
and
negl
icebp
movsl
fisttps
push
mov
mov
ret
xor
mov
scas
test
ja
test
fdivl
into
scas
cmp
dec
insl
iret
push
fcompl
inc
out
mov
in
ljmp
pushf
mov
sbb
lahf
adc
bound
jecxz
int
lea
pop
aam
jmp
sti
inc
fnstenv
sbb
mov
dec
fisubrs
inc
movsb
mov
cltd
test
pushf
outsl
das
jecxz
fistps
pop
shlb
fidivl
cwtl
loope
jmp
push
xchg
jecxz
sub
testl
aam
and
fdivrl
sbb
fwait
sti
bound
in
sarl
lods
shlb
mov
cmp
jno
xchg
xchg
cmp
add
out
ja
mov
js
addl
enter
xchg
and
adc
inc
xor
pop
push
push
mov
inc
addr16
aaa
jae
dec
in
and
push
outsb
mov
push
mov
mov
ret
mov
mov
ret
outsl
xchg
push
out
ret
out
pop
xchg
cs
imul
idivl
in
sub
push
push
or
pop
sahf
out
adc
shrl
fistl
or
out
cmpsl
xchg
jae
pop
sahf
xor
mov
fcmovb
xchg
mov
ret
movsl
testl
push
lods
inc
jmp
sub
cmp
inc
dec
sbb
mov
fldt
mov
push
sbb
xor
jp
mov
fildll
or
lods
outsl
push
pop
adc
lea
icebp
mov
jbe
push
in
inc
inc
mov
js
add
xor
push
cmpsl
out
xchg
sbb
fdivrl
jl
inc
fcompl
mov
out
xor
cmpsl
ds
jnp
mov
jae
xchg
arpl
fsubrs
ret
outsb
mov
cmc
mov
mov
sub
pushl
cwtl
out
fstpt
stos
sub
jns
adc
insl
sub
ja
andb
push
ja
push
mov
xlat
outsb
scas
fdiv
mov
shl
mov
or
mov
fists
adcl
mov
push
mov
xor
je
add
insl
ss
mov
vsubpd
cmp
adc
pushf
push
jmp
leave
and
and
jp
jbe
mov
stos
jmp
fidivl
or
lret
aad
dec
dec
push
call
adc
test
jmp
push
ljmp
jno
and
sbb
mov
xchg
xlat
or
mov
cs
test
mov
cltd
iret
lretw
scas
cmp
loopne
in
test
or
cmp
outsl
push
gs
lods
sbb
lea
cmp
pop
repnz
icebp
ss
and
js
mov
cmpb
jnp
or
enter
cltd
adc
xchg
mov
push
xchg
popa
clc
je
inc
cmpsb
call
cmp
ljmp
loope
pop
cs
sub
lods
xorl
clc
sub
xchg
pop
sbb
mov
popa
xchg
sub
test
mov
sub
pop
xlat
dec
in
js
test
jnp
cmp
mov
pop
cld
rorl
mov
cmp
mov
mov
mov
shrb
testb
pop
dec
test
jnp
push
movsl
scas
pushf
pop
lret
leave
add
add
and
inc
repnz
cmp
cmpsb
xchg
into
gs
mov
out
in
adc
movsl
cmp
cmp
xchg
aad
fwait
mov
mov
fldenv
push
into
gs
mov
pop
pop
data16
mov
out
scas
scas
xchg
and
sbb
inc
xorl
test
leave
xor
cli
cmp
sub
add
shll
inc
out
out
xchg
and
imul
xchg
mov
sarb
cld
push
add
aaa
inc
rcrl
int3
arpl
movsl
pushf
xor
std
or
xchg
sub
test
dec
sbb
enter
fdivp
sub
push
xor
jb
push
jmp
les
and
pushl
inc
push
mov
out
loope
aad
xor
jecxz
insb
in
sub
and
rcrl
cmp
jae
leave
pusha
and
mov
sub
mov
and
imul
inc
jge
ja
push
out
and
cltd
xor
mov
inc
sub
idiv
xchg
es
add
cs
sbb
imul
andb
pop
scas
je
mov
and
in
sbbl
je
dec
in
mov
sbb
imulb
daa
cmp
dec
xor
mov
add
insl
cmp
or
jmp
das
push
out
pop
or
pop
repz
rclb
push
out
mov
push
jmp
xor
sahf
bound
sub
loopne
out
fcoml
or
cmp
stos
inc
std
out
jns
and
les
loope
add
sbb
xchg
std
in
sbb
cmp
push
pop
cltd
xor
lret
sti
jmp
inc
fsts
add
add
out
test
and
outsb
push
add
test
into
sbb
ret
pop
push
add
xchg
sub
push
hlt
mov
es
xlat
sub
add
push
dec
out
adc
out
dec
xlat
xchg
push
rol
push
add
sub
push
int
inc
add
pop
sahf
stc
sbb
pop
dec
and
push
aad
and
int
js
push
sbb
dec
fbstp
int
call
push
push
adc
stos
cmc
aad
mov
and
and
and
lret
into
repnz
pop
es
movsb
std
shr
hlt
sub
pop
and
mov
add
adc
sub
dec
rcrb
xchg
add
sbb
or
shrb
and
push
repz
les
lods
clc
cmc
hlt
mov
xor
shll
sub
stc
add
imul
inc
shlb
sub
inc
ficoml
xchg
je
repz
enter
out
jo
sbb
aaa
mov
ja
xchg
out
mov
add
mov
or
mov
mov
cmpsl
mov
dec
loope
xlat
and
xor
push
and
mov
xchg
sub
push
jmp
stc
imul
sub
pop
dec
ret
pop
cmpl
inc
xlat
sar
xchg
push
hlt
mov
and
pop
scas
jge
sub
lods
cltd
or
jmp
jl
sbb
xor
inc
cmp
jae
icebp
mov
mov
fwait
xor
push
js
inc
inc
cmp
jb
jb
cwtl
xchg
sub
enter
out
out
int
sbb
cmp
pop
push
sbbl
mov
jp
mov
dec
out
adc
jnp
cmp
adc
mov
adc
aaa
popa
adc
inc
xor
mov
fsts
mov
dec
popa
pop
repz
imul
cwtl
icebp
push
es
jbe
push
pusha
xor
xchg
jnp
mov
mov
out
hlt
mov
or
pop
push
imul
mov
lret
ds
ret
imull
and
dec
mov
mov
bound
xchg
ljmp
repnz
hlt
mov
fcomip
dec
cwtl
adc
xchg
out
es
jmp
mov
jb
mov
enter
test
xchg
sub
scas
mov
faddl
adc
daa
cwtl
test
into
push
sbb
adc
rcl
xor
fcomip
cmp
and
cmp
stos
xor
and
lret
push
std
ret
fisubrl
ja
addr16
lret
sti
mov
xor
inc
clc
adc
sub
jmp
dec
ret
fidivrl
sbb
pushf
cmpsl
mov
inc
out
inc
xlat
pop
gs
es
xor
and
imul
rolb
or
xchg
xor
pop
in
test
aaa
loopne
xor
mov
nop
daa
insl
lods
add
in
ss
in
cmp
pop
jo
cmp
cmp
ficompl
ltr
xor
push
mov
cmpb
scas
movsl
test
leave
dec
loopne
cmc
lods
inc
and
cmp
push
inc
pop
ja
pop
shrl
mov
negl
lods
push
xor
mov
push
mov
fs
pushf
xchg
sbb
xchg
stos
and
add
inc
pop
roll
rclb
dec
sub
pusha
stc
mov
andl
jl
sbb
jnp
mov
js
gs
pop
xor
into
cmp
ds
pop
shll
lods
cmp
je
int
inc
jmp
mov
pop
stc
cmp
jecxz
test
fists
loop
push
fadds
lea
push
loop
adc
test
ss
or
sbb
adc
lcall
gs
xor
inc
and
sbb
ds
jl
cmp
push
pop
mov
inc
pop
bound
jns
lahf
push
or
inc
mov
xor
hlt
and
inc
jb
xchg
flds
dec
aaa
cli
lret
ja
insl
dec
lret
or
dec
dec
fwait
sti
inc
daa
dec
lods
inc
jge
lret
cmp
pop
jle
cwtl
xor
push
mov
xchg
adc
cmpsl
cmp
xor
loop
or
fstps
inc
fmull
add
cmpsl
insb
sub
imul
cmp
jg
movl
jne
inc
test
or
and
cwtl
jo
outsb
paddw
mov
mov
xor
xchg
pop
out
lret
xlat
loope
xchg
xchg
jg
xor
pop
mov
push
in
sub
mov
lcall
push
jle
dec
dec
bound
push
pop
jge
addr16
or
push
and
xor
imul
int3
fwait
sbb
movsb
push
ja
outsl
adc
push
cmpsl
das
orb
daa
addr16
xchg
out
add
lods
fmul
cmp
lock
mov
repz
pop
shll
or
int
sub
sbb
or
call
mov
int3
arpl
jmp
into
cmp
in
pop
nop
sahf
sub
or
add
orb
into
mov
les
fdivp
sbb
mov
fs
or
mov
mov
fidivrl
aam
mov
repnz
jno
testb
fsubl
ljmp
ret
jecxz
mov
repz
ret
inc
pushf
rol
inc
fsubs
mov
inc
in
cwtl
xchg
mov
aam
xchg
add
xchg
adc
sub
cli
movl
lret
mov
dec
scas
mov
cmp
lods
add
repz
repz
mov
xor
in
sbb
loopne
lock
cmpsb
fnsave
cmc
mov
movl
shrd
sbb
sahf
leave
mov
fsts
push
test
mov
out
out
mov
add
ja
lods
xchg
rorl
loop
sbb
mov
out
movsb
jecxz
add
jmp
dec
ret
jmp
adc
lret
pop
std
fcomip
sub
and
sbb
sub
imul
jl
dec
rclb
rcrb
leave
imul
mov
or
insb
es
pop
adc
cmpsl
push
sbb
ficompl
decb
imul
jnp
push
inc
ja
push
daa
inc
ret
jl
jne
ds
cmpsb
inc
pop
enter
sahf
inc
jp
lds
fs
push
cmp
pusha
dec
arpl
jp
lea
sub
hlt
mov
or
jecxz
call
rolb
mov
sub
jle
rcll
xor
loope
ja
nop
xor
push
and
jmp
loop
or
mov
jmp
enter
push
into
in
mov
movsb
sub
cld
push
xchg
push
rolb
rcrb
inc
fsubl
int
ss
imul
inc
adc
xor
pop
jae
xorl
dec
mov
xchg
ds
jg
jb
ljmp
aas
icebp
sub
jp
jmp
mov
add
sub
adc
into
gs
dec
in
pop
cmp
or
sub
mov
xorl
je
rorb
sbb
lret
push
test
stc
nop
icebp
add
and
adc
or
sbb
ss
stc
repnz
inc
add
push
leave
loopne
aas
ja
imul
pop
lret
bound
xchg
mov
test
dec
mov
pop
fidivrs
adc
or
lods
sub
ljmp
jno
repnz
ret
mov
inc
enter
negl
rolb
inc
jle
gs
cmp
jno
and
jp
dec
cmp
stos
cmp
sub
jge
leave
inc
dec
int3
ss
inc
inc
mov
cmp
pop
leave
cmp
mov
cmp
adc
jae
inc
sahf
addb
sbb
gs
sub
sub
lcall
loopne
fs
inc
inc
cmpsb
sub
test
into
inc
add
mov
inc
testl
cmp
pop
mov
xchg
xchg
js
cmp
ja
cmp
ljmp
jno
push
push
cmp
test
sub
aas
jbe
dec
mov
cmp
jo
popf
pop
rorl
mov
fsubrl
rclb
cmp
mov
loop
add
test
and
mov
lret
addl
mov
inc
cmp
mov
sahf
mov
fsubrl
out
je
addl
adc
inc
jle
inc
or
jns
push
aad
sub
jecxz
pop
pop
add
adc
cmpsb
xchg
aaa
mov
fistpll
jge
flds
in
mov
adc
fcoml
push
clc
popl
cmpsb
or
testl
sti
and
pop
cmpsw
dec
iret
into
xor
inc
dec
fildll
std
and
int
mov
cmpsb
hlt
int3
mov
sete
mov
mov
repnz
outsl
mov
pop
mov
aam
mov
sub
jp
shrb
cmp
jge
pop
cmp
jne
setl
xchg
inc
xor
push
dec
les
sub
inc
cmp
push
fdivp
sbb
xor
pushl
shlb
push
inc
ret
inc
xlat
dec
xor
outsb
inc
ja
cmp
jle
cmp
mov
adc
mov
mov
call
mov
rolb
test
clc
ret
loopne
pop
out
leave
add
loope
idivb
xlat
movsl
push
cld
icebp
aad
in
push
adc
adc
cld
pop
shll
pop
in
arpl
movsl
xlat
outsb
add
cmp
jne
ja
out
and
and
loope
or
push
push
xchg
sub
cs
rolb
dec
mov
fldt
mov
add
cmpsb
or
add
js
pop
les
dec
inc
mov
or
jnp
sub
ret
jne
xchg
insb
and
sub
and
enter
sbb
hlt
scas
aam
movsb
shl
and
mov
mov
add
mov
out
leave
in
dec
ret
pop
ret
mov
adc
shl
sub
mov
adc
movsl
mov
adc
ret
mov
cli
inc
test
movsl
cmp
mov
stos
outsb
pop
aam
add
loop
push
ljmp
pop
call
or
pop
enter
jl
fldt
in
sub
adc
bound
insl
mov
cli
adc
xchg
sbb
aaa
fwait
pop
cmp
cmpsl
push
out
mov
or
out
imul
iret
je
fsubrs
jg
les
add
mov
out
inc
xlat
xchg
or
xchg
sbb
add
cld
cld
xchg
cs
inc
sarb
sahf
mov
xor
fwait
inc
imul
push
inc
jl
xor
inc
js
int3
pop
popa
dec
aam
cmp
imul
or
adc
xchg
dec
mov
xchg
cmp
lods
pop
or
ja
mov
hlt
push
mov
fistpll
loope
test
gs
adc
xchg
cwtl
xchg
cs
add
rorl
std
sub
jbe
lods
inc
test
insl
mov
xor
dec
clc
mov
mov
jmp
cli
xchg
mov
mov
sub
mov
int3
fs
cmp
jbe
push
jbe
lods
push
mov
xor
inc
cld
rclb
out
mov
add
std
es
gs
jg
mov
fdivs
testb
loope
inc
cmp
push
icebp
pop
clc
sarb
pop
fimuls
pop
sahf
sub
popl
pop
adc
cwtl
push
jl
push
adc
inc
push
pop
shll
mov
aas
jne
or
mov
nop
sub
test
mov
mov
insb
pop
push
push
test
adc
push
jae
jb
fs
push
shlb
and
ja
sub
push
aaa
or
lods
inc
sarl
out
test
jl
push
and
jne
ss
pop
repnz
mov
or
aas
lahf
add
adc
sbb
adc
cmpl
jae
sbb
pusha
lcall
outsl
push
mov
loop,pn
jns
idivl
sub
mov
les
or
push
push
cli
mov
repz
nop
popa
cmpsb
sub
adc
or
mov
jp
jmp
scas
outsb
inc
mov
in
push
mov
pop
jbe
lahf
inc
int
or
cmc
xchg
xor
fisttps
stos
xor
and
inc
mov
addr16
pop
movl
xchg
sub
jo
push
cwtl
andl
pop
repnz
mov
idivb
mov
repnz
cmp
call
outsl
adc
adc
mov
cwtl
inc
cmpsl
xorl
pop
mov
sub
popa
jle
dec
dec
and
mov
cmp
jne
and
inc
int3
lret
dec
mov
call
and
mov
icebp
negl
pop
jo
imul
test
cli
dec
xchg
mov
lock
jmp
dec
sarl
and
sub
cmp
dec
adc
jno
shll
out
call
lea
jmp
or
dec
ja
cmp
dec
ror
test
sahf
ret
mov
std
pop
cld
ret
fs
push
mov
xor
loop
mov
sub
ja
inc
lcall
pop
outsl
inc
fdivs
dec
rorl
and
jp
es
dec
lcall
imul
pusha
or
leave
cmp
pusha
cs
aaa
and
xchg
inc
or
jo
push
dec
leave
scas
inc
add
xorl
mov
sbb
out
popf
loopne
cs
sbb
xor
outsl
inc
mov
orb
ss
mov
mov
jle
pushf
inc
ror
pusha
add
jl
xor
mov
jne
dec
scas
daa
and
mov
inc
dec
pop
rcll
mov
add
pushf
bound
fdivs
xchg
jmp
cmp
ss
and
inc
shrb
inc
fldl
fildl
aaa
fiadds
adc
mov
out
jno
mov
dec
mov
repnz
dec
shl
pusha
stos
mov
jb
lret
mov
notb
loop
rclb
xlat
aas
call
lahf
rcll
mov
in
in
ss
lret
adc
fildll
adc
jecxz
pop
pop
add
movsl
pushf
pop
cltd
cmpb
pop
lret
xchg
insl
jb
cmp
ss
inc
enter
lds
loop
repz
sahf
cmp
es
push
push
test
js
inc
mov
sub
add
lret
inc
sahf
mov
out
push
jnp
and
inc
shr
xor
jno
add
call
mov
xor
push
lods
sbb
sarb
sub
fbstp
dec
dec
shrb
mov
jmp
mov
sarl
or
mov
sbb
xchg
jbe
aas
push
lret
xlat
push
fisttpll
shll
shlb
insl
pop
int3
pop
leave
out
pop
movsl
outsb
gs
cmc
cmp
xchg
push
es
push
fimuls
or
rcrl
repz
stos
mov
add
adc
mov
mov
not
dec
lds
rorb
sub
sbb
mov
xchg
or
in
test
inc
pop
adc
scas
push
pusha
test
mov
or
test
stos
pop
movsb
packuswb
inc
lea
and
ja
mov
mov
and
pop
rdmsr
xlat
fwait
jb
or
push
inc
mov
cmp
push
call
push
inc
xor
push
xor
pop
jp
sbb
pushf
and
mov
inc
nop
push
loopne
lea
ljmp
pop
ret
imul
daa
arpl
jno
negb
inc
int
pop
daa
pop
push
lock
les
adc
mov
aas
lcall
rolb
nop
ret
push
in
jge
mov
cld
lret
push
lret
and
sbb
mov
jnp
imul
mov
sbb
and
add
jb
lahf
xchg
add
add
cmp
ss
or
mov
jmp
mov
cmp
ret
add
fwait
xchg
imul
popf
pusha
sahf
xor
orl
loop
in
aad
aam
imul
jecxz
pushl
sti
mov
out
sbb
jl
xlat
push
cwtl
cmp
pop
jnp
inc
int3
jp
add
sub
fmull
aad
xchg
aaa
xchg
cwtl
xchg
mov
and
xchg
jnp
cmpsl
pop
icebp
fadds
fmull
mov
jne
popa
lahf
pop
inc
mov
out
dec
shl
inc
iret
pop
fsubrs
lock
mov
add
movsl
dec
add
pop
imull
ret
hlt
sub
dec
iret
inc
dec
sbb
sbb
inc
mov
push
push
out
mov
mov
inc
mov
mov
sbb
out
outsb
mov
cld
xchg
arpl
sarb
and
jg
hlt
and
cmp
xchg
fisubs
fimuls
pop
out
mov
incl
shr
jbe
mov
sti
icebp
iret
pushf
xor
adc
push
incl
pop
scas
and
inc
xchg
nop
pop
xlat
push
xchg
sub
and
pop
pop
insb
addr16
ds
ds
outsb
ja
imul
cmp
orl
add
adc
outsl
sarl
into
inc
jl
inc
sahf
mov
and
outsb
push
lcall
cmp
test
jo
and
jb
and
mov
lret
ja
in
jnp
pop
inc
mov
mov
fisttpl
out
cld
lods
test
add
outsl
add
sbb
xchg
nop
jnp
dec
filds
fcoms
jb
cmpsl
add
cmp
pop
scas
push
fwait
xor
in
pop
dec
jecxz
aam
pop
mov
std
fists
jecxz
mov
mov
bound
cmp
orl
idivl
loopne
test
pop
adc
mov
dec
mov
repz
and
jle
and
jo
cltd
arpl
aaa
pop
call
sub
cwtl
xchg
or
ds
xchg
sub
pop
xchg
pop
lds
ja
fldenv
aam
aaa
inc
leave
orl
pusha
add
inc
andl
push
test
sub
jle
outsb
xor
ds
ds
jae
fmull
xchg
cmp
adc
mov
sub
adc
and
in
cs
clc
inc
pusha
push
cmp
pop
mov
mov
pop
mov
shrl
adc
ss
jae
test
setns
mov
dec
lds
mov
xchg
cmp
cltd
xor
subb
hlt
mov
ret
cmpsl
popa
cmpsb
pop
enter
mov
fisttps
adc
shll
aam
push
mov
xchg
cli
in
lds
sahf
xchg
scas
int
sbb
in
dec
enter
mov
jmp
mov
and
pop
aam
imul
ret
fldcw
into
cmp
fdivr
aam
in
fiaddl
or
mov
ljmp
test
or
popf
cmc
sbb
aad
loope
ja
fisubs
lods
xchg
test
sbb
xchg
jnp
sbb
ds
daa
ds
xor
xchg
jl
imul
mov
addl
mov
and
dec
jnp
pop
shrb
mov
mov
negb
xchg
insl
xchg
mov
add
xchg
test
or
inc
xchg
add
jmp
pushf
mov
imul
cmc
sub
xchg
cmp
insl
js
xchg
mov
ja
outsl
xchg
mov
jns
sbb
mov
mov
lock
pop
lret
les
and
int
sbb
jmp
mov
and
mov
test
inc
or
jl
xchg
pop
lahf
jne
movsl
addr16
adc
lahf
jg
pop
hlt
ss
outsb
mov
stos
and
mov
in
ds
fistl
jne
cld
xor
stc
pop
push
adcl
xor
inc
pop
bound
rolb
push
out
and
and
or
dec
aad
mov
mov
jmp
shll
repnz
das
adc
adc
cmpsl
fnstenv
enter
lds
mov
push
iret
inc
jns
je
push
sub
pop
cwtl
fldenv
fwait
xchg
inc
or
lret
cmpl
push
nop
mov
dec
aam
push
push
int3
outsl
sub
cmp
incb
push
adc
adc
jb
cwtl
sbbl
and
push
push
inc
adc
sti
aaa
push
aas
jecxz
inc
lea
aas
or
mov
or
adc
xchg
jl
xchg
out
or
lcall
cmc
mov
int3
mulb
sub
add
mov
out
or
test
test
fs
gs
mov
add
dec
mov
sub
andb
push
cmpsl
xchg
jo
popa
lret
add
inc
les
push
cmp
mov
les
int
and
popa
fidivrs
in
inc
and
scas
adc
sbb
cmpsl
fs
xchg
sbb
in
test
out
or
mov
sbb
test
cmc
push
mov
fldt
fmull
cld
rcll
les
aad
jo
pop
mov
nop
les
mov
ljmp
adc
aas
pop
lret
dec
push
sub
and
xchg
xchg
add
adc
out
inc
mov
fmul
inc
fcmovu
cmp
lock
popa
out
mov
mov
in
sbb
negl
or
stos
xchg
jmp
adc
xor
xor
dec
jb
push
fucomi
cmp
inc
fsubrl
jg
test
cli
pop
ret
rclb
cmp
sub
sbb
cmp
orl
scas
lods
pusha
or
test
in
sub
imul
popa
adc
inc
pusha
call
cmpsl
pop
xor
dec
lea
cmc
jp
cmpsl
test
push
sub
push
jg
push
insb
arpl
jl
push
and
arpl
loop
pop
ret
pop
or
or
cltd
dec
rcll
adc
cmp
fisttpll
and
inc
das
or
repz
pcmpeqd
test
sti
xor
enter
rorl
les
pop
adc
push
mov
and
inc
lret
bound
test
xchg
cmp
lcall
cli
jae
push
leave
mov
mov
sbb
pop
hlt
dec
cmp
orb
pop
or
in
sbb
loop
lret
loop
add
sub
push
adc
test
imul
cmp
inc
test
jge
movsl
cmp
test
rorb
add
xchg
test
pop
rorb
cmp
mov
sub
cmc
rorb
scas
outsl
shll
shrl
pop
or
mov
in
xor
sub
clc
jb
leave
popa
mov
jg
adc
lds
andb
fidivl
jns
mov
sarb
daa
fsub
cmc
sbb
ljmp
jp
fiaddl
fwait
sub
sbb
mov
repnz
push
mov
in
pop
pop
roll
xchg
nop
push
sub
jnp
jecxz
mov
cs
push
stc
jg
repz
mov
sbb
mov
js
seto
and
fiaddl
imul
test
in
cmp
fisttpl
mov
mov
in
mov
add
mov
mov
cltd
cld
sub
xor
aam
sbb
push
add
mov
ret
loopne
fcoms
outsb
outsl
test
push
imulb
push
pop
out
inc
sbb
leave
pusha
imul
pop
add
es
pop
loopne
pushf
adc
xchg
lods
xor
mov
incb
rcll
pop
testb
pop
icebp
mov
les
idivb
xor
into
mov
dec
popf
and
outsb
push
mov
cmc
mov
adc
xchg
sbb
leave
dec
mov
push
out
or
cmp
imul
adc
and
arpl
aas
xor
pop
test
call
jnp
pop
push
popf
stc
add
loopne
and
xor
popa
clc
test
pop
repz
jp
jae
popf
xor
xchg
cwtl
das
dec
mov
dec
sbb
aam
insl
repz
ja
adc
lret
lds
push
call
mov
fldcw
or
mov
pop
in
inc
push
andb
test
stos
push
out
fildl
js
sti
ja
sub
sub
lods
popf
dec
xor
cmpb
repz
dec
in
repz
in
push
cltd
xor
xlat
call
push
mov
push
popf
pop
lods
fcomi
push
fistps
xchg
sub
fs
mov
mov
mov
inc
fisubl
popa
clc
mull
pop
cvtps2pi
fsubs
mov
mov
rorb
aad
fstps
ljmp
jo
cmpsl
mov
ret
pop
div
and
dec
adc
pop
inc
imul
jae
adc
cwtl
outsl
add
fnsave
testb
lock
jmp
repnz
inc
jb
jge
test
cmp
sbb
lea
mov
test
inc
cmp
shrb
add
mov
into
out
cld
popa
xchg
lret
je
subb
cwtl
adc
dec
out
xchg
pop
adc
jge
push
test
cmp
scas
adc
fstpl
lods
sbb
shll
inc
fucomi
inc
cmp
mov
push
push
iret
and
seta
outsb
dec
push
sub
pop
int
adc
inc
aas
mov
jae
mov
ret
in
pop
jmp
xchg
push
into
cli
mov
test
xor
mov
cmpsl
mov
sub
or
daa
sti
xchg
roll
xor
into
mov
push
test
jmp
cmpb
sbb
test
push
lods
mov
jg
clc
mov
mov
mov
pop
inc
or
cmc
cmpsl
jmp
add
push
jbe
subl
aad
jp
xchg
inc
icebp
xlat
add
out
mov
pop
mov
pop
pop
cs
and
pop
mov
mov
popa
negl
mov
ds
push
push
fnclex
add
cmp
mov
in
imul
cmp
or
mov
cmp
jmp
jno
cmp
int
cwtl
push
pop
pop
rolb
iret
dec
fists
mov
sbb
push
out
shr
mov
pop
std
popa
mov
adc
xor
mov
lods
push
dec
int3
xor
popf
cmp
sahf
jne
ds
add
add
pop
jns
scas
repnz
adc
sub
iret
mov
cli
pop
fcoml
xchg
sub
mov
mov
ljmp
xchg
cmp
and
sarb
sbb
sub
and
mov
jo
mov
mov
mov
leave
mov
push
fcmovu
jl
sbb
scas
out
inc
dec
jg
sbb
mov
sbb
adc
lret
jge
jl
mov
push
lret
cltd
aam
sub
sbb
adc
cmp
inc
push
dec
scas
xor
aam
lahf
xchg
pop
rclb
push
js
ss
mov
bound
ljmp
jbe
sub
jg
xor
xchg
dec
in
add
xor
push
stos
inc
js
popa
clc
testl
push
out
stc
or
aam
mov
sti
push
sbb
jg
inc
adc
orb
andb
jg
dec
mov
mov
and
ss
popf
cmpsl
vmwrite
lods
mov
mov
lea
xchg
push
in
scas
mov
nop
daa
push
jmp
push
push
cmpsb
cmp
mov
add
push
out
mov
loope
pop
icebp
ds
sub
gs
outsb
add
stos
fs
adcl
or
inc
or
cltd
inc
maxps
inc
adc
mov
lahf
inc
push
add
enter
into
mov
add
subl
mov
push
dec
or
adc
sbb
xchg
inc
fstpt
fstpt
fistpll
sub
das
xchg
das
test
xor
or
mov
lcall
or
cmc
lahf
rcll
repz
adc
out
ja
call
xchg
mov
arpl
pop
mov
mov
mov
inc
iret
cmp
loope
dec
push
mov
subl
filds
sarb
mov
iret
xlat
mov
movsl
pop
fnsaves
ljmp
mov
pop
or
xchg
aaa
stos
cltd
ja
fidivrs
push
push
mov
xor
ret
push
imul
jbe
negb
and
pop
add
pop
pop
mov
lahf
jae
outsb
hlt
fisubs
shlb
fisubrl
jae
push
jns
cmc
pop
andl
lcall
insl
cmc
add
push
lock
adc
inc
insl
cmc
notl
sbb
cwtl
pop
push
into
dec
insb
out
mov
xchg
cmp
add
push
pusha
jmp
adcb
orb
sti
xlat
fs
lock
test
int
rcl
jnp
push
clc
arpl
scas
inc
or
jl
in
gs
orl
sarb
clc
or
and
mov
xchg
arpl
in
out
ja
sub
push
or
jo
insb
adc
sub
add
dec
movq
filds
nop
mov
lods
out
movl
mov
clc
or
out
pop
lcall
cli
arpl
mov
adc
fistpll
jb
fsubrp
jo
sub
lret
test
mov
adc
or
fucomip
jo
pop
adc
dec
mov
lods
xor
enter
fwait
in
jb
xchg
insl
mov
adc
addr16
movsb
rolb
push
dec
push
add
sub
das
jnp
xor
pop
std
fisubrs
jo
mov
test
pop
sahf
pop
stc
push
enter
mov
mov
mov
fisubrl
mov
mov
xchg
inc
pop
cmp
inc
orb
and
cmp
aaa
movsb
mov
mov
stos
xchg
inc
cltd
adc
les
test
and
mov
mov
sbb
and
pop
call
hlt
mov
stos
and
cmpsb
jmp
xrelease
xchg
mov
mov
adc
cmp
jge
outsb
and
sub
ja
and
mov
sbb
vpermilpd
sti
ret
pop
dec
pop
daa
mov
xchg
mov
push
leave
mov
mov
xchg
nop
popf
cmp
shll
jo
lahf
cmp
lret
lds
cs
xor
stos
imul
push
adc
shll
int3
mov
cs
std
mov
das
pop
jnp
in
fadds
nop
inc
sub
sub
popa
incb
add
cmp
icebp
pop
clc
ficomps
and
scas
cmp
scas
loope
mov
xchg
fidivrs
adc
add
stc
popa
loop
push
inc
andb
mov
sbb
sbb
adc
nop
outsb
jle
sub
sti
pop
jl
roll
es
mov
mov
xchg
popa
add
out
jg
sub
repnz
add
sti
adcl
addr16
lods
xchg
cs
jbe
and
sub
adc
nop
aaa
pusha
inc
cs
jno
inc
jg
or
int
mov
push
and
and
sub
or
pop
add
hlt
test
pop
add
mov
mov
cmp
gs
lahf
fidivs
fisttps
fdivl
rcll
mov
mov
mov
adc
ljmp
jecxz
adc
in
jne
je
add
bound
mov
or
es
int3
xchg
aad
ja
pop
pop
or
pop
mov
out
or
pop
inc
or
mov
sub
cs
inc
fiaddl
xchg
dec
mov
dec
dec
test
clc
jne
das
mov
addr16
ds
ret
mov
sbb
iret
stos
dec
scas
xor
adc
jg
popa
in
xchg
insb
mov
mov
adc
loope
add
fmull
xor
in
outsl
ret
lea
shll
push
fs
clc
mov
xor
inc
or
jp
lock
or
pop
pop
add
cmp
and
out
sub
sbbl
les
push
xchg
cmp
and
aam
cld
push
stc
and
clc
scas
cmp
mov
je
or
adc
cmp
js
push
stc
outsl
pop
enter
pop
loopne
repz
shl
fisubrl
lods
cmc
jnp
cmp
in
jge
and
pop
sahf
add
mov
jae
fsubs
ja
lea
and
call
add
mov
sahf
add
xor
lock
lret
das
or
adc
and
in
dec
push
sub
mov
mov
lods
sub
sbb
cmpsb
jne
lcall
outsb
dec
or
and
sarb
popf
sub
insb
leave
mov
cmp
xor
cli
call
cltd
aaa
and
stos
sub
pop
std
enter
add
pop
out
outsb
arpl
repnz
scas
jns
fsin
mov
jmp
mov
cmp
stc
mov
pop
cld
repz
addr16
add
jl
in
sti
aad
roll
je
inc
je
mov
pop
mov
xlat
or
fistpll
pop
inc
or
cmp
cmp
xor
lahf
fwait
sub
xchg
cmp
repnz
lret
sbb
shlb
mov
aaa
movsl
xor
lods
sub
imul
xchg
xchg
jno
push
pop
leave
dec
or
or
movsb
inc
insb
out
push
cwtl
cmp
sbb
sub
cmp
lret
push
add
fidivrs
insb
out
push
pop
pop
cld
test
imul
jnp
wbinvd
jno
push
push
jl
adc
iret
mov
in
outsl
pop
mov
sub
repnz
cmpsw
add
pushf
jl
not
ret
pop
or
sub
mov
mov
lock
pop
push
push
ljmp
lret
fidivrl
ret
shlb
sbb
pop
add
je
lret
mov
insb
cmp
test
je
bound
jle
or
sbb
pop
xchg
clc
pusha
sbb
dec
mov
xchg
push
or
xor
ss
je
jecxz
out
add
mov
gs
adc
cmp
das
push
cli
cmp
std
or
fadds
setp
cld
pop
dec
adc
ret
jp
adc
adcb
cmp
ljmp
icebp
pop
add
jl
hlt
pop
mov
scas
mov
stos
fmuls
loop
dec
stc
cmp
push
sbb
dec
fmuls
int3
movsb
add
movsb
xchg
rorb
call
hlt
aam
xor
pop
sti
mov
dec
or
shl
pop
cwtl
sbb
or
push
ds
pop
divl
mov
and
out
inc
adc
jg
pop
adc
sub
dec
mov
cli
dec
jecxz
aam
ret
push
fbld
aad
push
jns
jae
xchg
cmpsb
sub
insl
repnz
jbe
jle
adc
mov
mov
testl
leave
lret
adc
ret
inc
or
ds
pusha
cmp
imul
mov
xchg
out
ds
inc
ret
in
insl
lahf
sbb
adc
sbb
ret
or
ret
xlat
push
and
push
pop
sub
fisubl
stos
sub
pop
cmp
mov
jp
and
lret
lret
nop
stos
mov
addl
sub
stc
jmp
add
enter
mov
scas
negl
popf
and
sub
fs
dec
xor
push
nop
cmpsl
or
scas
lret
dec
push
pop
mov
pop
js
imul
and
sub
jnp
cmp
dec
pop
or
lahf
xchg
mov
fstp
push
leave
mov
das
stos
pop
mov
shll
mov
mov
mov
cmp
pop
in
push
jmp
xchg
leave
mov
pop
into
and
aas
mov
lods
pop
mov
loop
sarb
hlt
adc
jb
xchg
cmp
mov
outsb
fnstenv
fwait
pop
into
jno
pop
mov
cmpl
xor
sarl
stos
jo
add
stc
mov
outsb
mov
in
add
pop
out
pop
mov
adc
jmp
repnz
xchg
ljmp
jp
mov
rolb
int
pushf
cmp
fdivrl
data16
daa
cmp
inc
les
out
push
dec
das
out
xchg
jp
push
cmp
cmp
es
gs
cld
mov
mov
fsub
adc
popf
add
adcb
sbb
int
lods
popw
dec
or
jnp
mov
jmp
cmc
fdivrl
out
iret
sbb
data16
and
push
out
dec
inc
fdivrs
pushf
jno
fadd
mov
mov
fs
divb
outsb
hlt
mov
scas
lods
test
or
xchg
daa
push
xchg
push
inc
or
inc
or
addr16
push
cmp
add
cmp
out
rorb
xchg
cmp
ret
sbb
mov
rcrb
popa
in
xor
mov
mov
ja
and
fidivrs
cmp
aad
jns
mov
mov
scas
daa
sub
jo
aaa
lds
je
adc
popf
inc
xor
jae
jns
dec
bound
lods
mov
lods
fdivs
mov
stos
sub
addr16
sbb
pop
stc
ret
mov
cmpb
dec
adc
dec
sub
ret
or
dec
sbb
jle
popf
push
mov
xchg
or
aad
ret
pop
mov
rcrb
sub
mov
movsb
jae
xor
sbb
jbe
sub
cmp
fadds
mov
lahf
inc
jmp
jbe
sub
sarl
sub
adc
mov
test
repz
lret
in
mov
inc
adc
mov
dec
or
xchg
inc
pop
jno
sbb
xor
xor
stos
hlt
adcl
fldcw
loop
pop
ret
or
out
insb
jg
out
imul
mov
or
inc
es
stos
xor
imul
adc
push
inc
or
leave
and
daa
pop
mov
and
push
add
sbb
sbb
adc
loopne
dec
lahf
inc
cmp
add
sahf
inc
mov
mov
pop
cmp
xor
jno
push
jne
stos
das
mov
lods
xlat
jp
push
test
adc
xchg
xor
clc
cmp
fcompl
iret
fadds
mov
stos
mov
pop
sahf
cmp
int3
leave
mov
shrl
jmp
and
jns
add
jns
pop
lds
orb
push
fisubs
adc
das
cmpsl
inc
xor
hlt
out
dec
gs
imul
mov
mov
rcrl
inc
or
jecxz
insl
pop
mov
xor
shll
push
jo
outsl
jae
xorb
in
sub
cmp
xor
insl
push
jge
cli
inc
pop
nop
cmp
mov
xchg
mov
call
jb
es
jp
cmpsb
sub
fsubrp
je
sahf
das
mov
or
push
jns
jge
jns
dec
ss
cmp
int3
xchg
in
orb
lods
xor
xor
ds
mov
test
jp
imul
or
call
repz
inc
adc
or
push
add
sbb
pusha
hlt
or
hlt
adc
fwait
stos
dec
adcl
add
mov
rclb
xchg
sub
loop
jne
push
sti
bound
mov
icebp
into
lods
pop
add
pop
outsb
repnz
cmp
jnp
add
push
mov
mov
leave
xchg
inc
pop
mov
mov
dec
mov
mov
xorb
sti
pop
cmp
cmp
arpl
inc
ficoms
jle
jo
orl
add
add
pusha
fwait
inc
dec
sub
nop
andb
jo
xor
xchg
jle
mov
sub
in
imul
adc
aam
mov
lcall
cmp
and
ss
cmp
int
sub
minps
xor
cmpsl
ss
add
addr16
xchg
push
jg
std
je
cs
mov
mov
cld
pop
aad
add
add
add
push
cmc
orl
out
jg
sbb
cmpsb
adc
jae
dec
out
push
stc
orb
inc
ficoms
push
push
xchg
insl
hlt
xchg
fdivrs
imul
call
stos
jbe
dec
adc
jl
jno
lret
nop
ds
std
xchg
popa
and
pop
push
adc
inc
js
int
xchg
and
out
inc
dec
out
lods
sub
pop
lds
mov
jl
popf
sbb
add
and
scas
int3
data16
mov
outsl
loop
ja
loop
sarl
repz
adc
inc
lret
and
xchg
mov
pop
sub
daa
stos
xchg
enter
push
rcl
test
pop
adc
int3
mov
mov
js
inc
or
push
std
cmp
out
sbb
fiaddl
mov
stos
xor
test
mov
sarb
pop
pop
mov
lds
xor
pop
and
add
push
pop
add
mov
imul
mov
cmp
cmp
ja
subl
mov
inc
or
push
add
mov
adc
aam
inc
or
and
sub
sahf
push
in
xchg
ds
hlt
jo
lcall
push
rcrb
inc
inc
add
fwait
inc
sub
fildl
add
fldt
mov
xchg
cmp
pop
xor
sub
mov
inc
or
xor
mov
leave
xor
xchg
fildl
in
lahf
inc
idivb
lret
fiadds
dec
test
push
inc
popf
mov
xchg
and
subb
and
sarb
aam
mov
ljmp
mov
cmp
jb
mov
push
int3
ficoms
lcall
cmp
push
repnz
sarl
xor
mov
out
insb
lock
sub
arpl
lods
iret
ja
inc
aad
mov
test
dec
pop
add
scas
sarb
fistps
ss
int
into
nop
ficomps
outsb
in
or
shrl
iret
mov
rcr
repnz
iret
lea
pop
jecxz
inc
adc
mov
mov
push
add
lret
int
dec
or
fs
daa
lods
cs
inc
jns
cmp
cmp
mov
popf
cmp
inc
fbld
loope
add
je
fsubrs
lods
stos
les
insl
jns
das
test
push
jae
ficomps
mov
xor
cmpsb
pushf
add
adc
es
jbe
and
dec
ja
addl
inc
or
int
lret
imul
adc
dec
hlt
popa
icebp
xchg
mov
fmul
icebp
test
mov
ds
pop
test
push
add
daa
push
cs
cmp
cmp
dec
lret
jp
pop
lods
mov
ljmp
jnp
outsl
pop
lea
dec
mov
push
clc
repz
in
mov
add
xchg
sarb
pop
fs
or
pop
stc
lcall
xlat
jmp
cmc
sub
out
sub
mov
jae
enter
mov
mov
push
lods
pop
insb
cmc
in
dec
adc
stc
mov
push
lret
xchg
ds
pop
jne
dec
or
jno
mov
and
push
lret
int
scas
sbb
test
out
fidivrl
cld
sbb
mov
aam
inc
xor
rolb
mov
sub
add
lahf
aaa
cmpsb
mov
mov
cmp
sahf
add
pop
jmp
mov
movsl
sub
add
add
mov
shlb
out
push
xchg
sub
mov
dec
adc
movsb
in
mov
mov
cmpsb
leave
xchg
pop
ret
or
pop
lock
lock
lea
sti
out
aaa
cltd
lock
faddl
or
mov
pop
movsb
sub
push
test
cmp
mov
insb
xor
jl
jl
cmpsb
test
push
rcrl
fcmovu
jno
fimuls
pop
popf
cmp
and
push
add
cmp
stos
jge
icebp
scas
mov
push
jmp
or
mov
arpl
fmul
xchg
xor
pop
add
aad
rcrb
cltd
jecxz
mov
into
cmp
push
jecxz
rorl
int3
imul
iret
jl
nop
cmp
push
fldenv
lock
inc
je
movsl
das
cltd
pop
add
lds
je
rorb
repz
ja
push
mov
filds
xchg
or
lods
cld
enter
jmp
dec
daa
in
cmp
mull
es
or
adcl
dec
or
test
addb
sub
dec
adc
pop
inc
xchg
outsl
push
leave
and
mov
jne
dec
movsl
mov
fisttpll
fstpl
xchg
ljmp
mov
mov
adc
fisubrs
and
test
xor
in
cmp
or
jnp
call
pushl
xlat
pop
pop
add
fstps
sub
pop
inc
xor
or
push
idivl
mov
test
rolb
cli
or
jecxz
cld
adc
pop
stc
rorl
mov
sti
pop
adc
sub
jl
mov
nop
xor
push
or
movsl
xor
lcall
sub
adcb
cld
or
mov
push
lods
sub
inc
fnstcw
sub
adcb
decb
pusha
and
mov
aas
rep
int
mov
lods
cmpsb
sub
movsb
cmp
mov
scas
test
cli
dec
or
stos
sub
mov
lock
or
out
push
lahf
pop
ror
sub
mov
stos
shrb
mov
les
leave
lea
imul
faddl
xchg
je
jo
out
xchg
mov
add
mov
dec
push
sti
push
dec
adc
in
jge
inc
sbb
jge
pop
add
push
insl
es
pop
out
xor
sti
and
jbe
pop
aaa
mov
push
test
je
cmpl
adc
scas
std
bound
lds
cmp
pop
push
das
scas
xor
sahf
inc
mov
test
inc
adc
cmp
hlt
push
loop
test
sub
je
add
pop
test
add
pusha
aas
dec
loope
sbbb
inc
push
mov
ja
sub
jo
mov
in
sub
inc
cli
push
inc
or
mov
sbb
or
mov
pop
mov
mov
mov
iret
xor
cmp
aad
shlb
mov
xor
mov
fwait
and
lret
fiadds
adcl
stos
mov
test
sub
lcall
inc
int
sub
data16
jp
mov
cmpsl
imul
stos
jl
xchg
and
fldl
jmp
sti
orb
popa
in
iret
xor
subl
mov
aam
push
cmc
or
sub
cmp
inc
push
inc
adc
inc
inc
adc
ds
shlb
icebp
fs
mov
ljmp
jnp
outsb
dec
and
push
ficoms
fsubrs
call
call
clc
call
cld
push
clc
sub
xchg
inc
push
nop
mov
lods
mov
ja
test
lahf
cmpsl
cmp
ljmp
pop
dec
or
dec
xchg
mov
stos
daa
mov
ja
subl
adc
iret
and
rolb
mov
aaa
fisubs
scas
fildll
xlat
jge
adc
sbb
sbb
xor
add
add
pop
cmp
pushf
jno
sbb
mov
mov
push
pop
mov
adc
mov
inc
xchg
aaa
stc
out
push
pop
lock
icebp
mov
scas
aaa
ljmp
jge
xchg
push
aam
loopne
cli
pop
imul
addr16
ja
test
sub
outsb
outsl
mov
push
lds
pusha
push
test
stos
jne
xchg
xor
xchg
inc
mov
movsl
xchg
xlat
cmpsl
xor
cs
lea
lret
inc
adc
jp
mov
andl
inc
ffree
and
xlat
cmpsb
xor
mov
int
sbb
inc
cmc
mov
ss
sub
sbb
inc
fisubs
shl
clc
punpckhbw
lret
inc
je
aam
repz
leave
in
ret
pusha
call
jb
lahf
inc
mov
shll
mov
out
or
jl
pop
sub
push
ja
mov
xchg
mov
mov
xchg
cmp
xor
lock
lea
out
inc
lods
lods
out
insb
dec
mov
or
xchg
jge
pop
sub
pusha
sub
les
lods
sar
cmc
sub
mov
popl
lret
ret
mov
cmp
sarb
sub
iret
adc
or
test
pop
mov
iret
jmp
sub
test
and
test
mov
aam
pushf
xor
jb
mov
xchg
ljmp
icebp
inc
mov
addr16
daa
gs
mov
mov
outsl
ljmp
cmpsl
xor
lret
and
jp,pt
aam
mov
or
mov
insl
xor
mov
rcll
mov
gs
js
pop
call
ret
dec
pop
push
stc
or
lahf
inc
jecxz
sub
mov
iret
mov
ret
lret
je
push
cmpsb
sti
test
outsb
mov
lods
mov
push
leave
into
insb
notb
lods
repz
bound
lds
sub
mov
cmpsl
pop
enter
addr16
xchg
out
lahf
incl
cmp
push
and
andl
int
aas
xor
xchg
das
mov
aam
dec
fists
mov
ret
xor
cmp
push
add
stos
ss
test
test
aad
dec
orl
or
icebp
xchg
je
jmp
xchg
cmp
adc
and
divb
cmpsb
dec
adc
ja
xchg
mov
jo
insb
out
cltd
imul
movb
mov
call
cwtl
dec
ja
xchg
add
test
mov
mov
xor
mov
sub
dec
js
sbb
add
add
push
cld
movsb
test
pop
add
stos
fildl
lods
push
mov
insb
js
arpl
ljmp
clc
nop
xlat
mov
jle
popf
jl
sbb
out
mov
sub
shr
loope
incb
xor
mov
jbe
ret
arpl
leave
jo
push
add
outsb
enter
inc
adc
dec
jbe
cwtl
nop
xchg
mov
inc
iret
popa
testb
pushf
sub
js
push
test
std
and
test
or
data16
dec
daa
lods
or
jo
mov
scas
cmp
test
js
or
pop
outsl
repnz
lcall
negl
insb
lock
sub
ret
pop
test
dec
push
pop
loope
cmpsl
daa
dec
test
adc
insl
push
lds
xlat
mov
in
xor
inc
mov
cld
pushf
xor
xchg
out
adcb
in
fsubr
lea
add
out
pop
xchg
in
sbbl
stos
adcl
les
pop
sbbb
imul
je
int
push
inc
xchg
jb
enter
add
cmp
outsl
cli
sub
xchg
fs
mov
test
mov
pop
pushl
rorl
lods
scas
mov
std
gs
in
outsl
or
jmp
ljmp
setle
sub
cli
lcall
jecxz
aaa
xchg
iret
mov
cmpsb
inc
test
fdivrl
or
scas
inc
pop
std
test
mov
mov
stc
xchg
xchg
inc
mov
add
sarl
xchg
aas
dec
and
cmc
jbe
mulb
add
out
mov
xor
fisubs
and
mov
daa
ds
inc
jp
add
mov
mov
test
dec
xchg
fidivrl
popf
in
jbe
jmp
jnp
vpcmpgtd
xor
sub
xchg
jmp
and
icebp
sub
call
add
mov
repnz
sbb
inc
or
gs
inc
sahf
notb
nop
and
aaa
cmp
pop
add
sub
ljmp
arpl
bound
lods
and
cmp
mov
fdivrl
adc
andb
inc
jp,pt
imul
jmp
mov
pop
push
sbb
or
cmpsb
cmp
mov
sbb
loopne
jne
enter
pop
push
pop
add
enter
mov
mov
in
xchg
stc
js
hlt
sarl
loop
mov
notb
add
push
in
adcl
loope
outsb
in
or
xchg
popf
or
test
mov
outsl
push
hlt
push
add
aaa
add
clc
jae
lods
xchg
scas
sub
ja
lds
sub
stos
sbb
scas
repz
sub
out
push
sarb
cmp
es
out
stos
inc
pop
or
test
inc
or
xor
pop
adc
jecxz
push
mov
mov
adc
sub
shl
cmp
bound
notl
cmpsl
cli
leave
xor
mov
push
outsb
test
dec
in
std
inc
or
dec
cli
pop
lds
lods
xor
sahf
inc
enter
enter
xor
xchg
sub
aam
rcll
in
jo
inc
adc
lret
test
sbb
aad
pop
inc
or
jae
push
lea
mov
mov
lahf
sub
lods
xor
lds
cwtl
fidivrs
jo
xchg
inc
daa
insl
dec
pop
out
adc
insl
jmp
aas
cwtl
mov
mov
inc
mov
movsb
xchg
sub
inc
cli
cld
arpl
xchg
popf
inc
mov
mov
jmp
or
lods
xor
lods
enter
sub
cmp
lods
adc
bound
lods
sub
mov
gs
or
sbbl
pop
testl
idivl
es
aaa
cmpsl
dec
iret
xchg
imul
adc
mov
jo
imull
fadds
out
sarb
repz
dec
ret
sbb
imul
aam
jecxz
lods
add
scas
mov
ljmp
fsubrp
jo
jg
pop
cmp
ds
xchg
jae
in
iret
jle
lds
jmp
stos
addr16
clc
dec
mov
rol
addr16
jo
cld
cmp
add
push
mov
mov
adc
push
jns
xchg
or
push
ret
xchg
and
sarb
fistpll
jbe
sbbl
inc
ja
pop
cmp
cmpb
test
adcb
lock
loopne
stos
mov
xchg
cmpsl
xor
inc
push
outsl
push
int3
mov
jae
bound
push
mov
pop
and
or
cwtl
and
lea
inc
enter
xor
std
sub
popa
inc
cmp
inc
xchg
xor
sub
dec
imull
jb
mov
pop
stc
std
cwtl
mov
adcb
scas
ja
int
lea
insl
mov
movsb
es
mov
stos
adc
mov
adc
data16
push
adc
cmpb
jb
test
mov
fdivs
fst
test
je
pop
jge
mov
xchg
aad
fadd
xchg
push
push
pop
mov
clc
pop
pop
iret
pop
call
push
in
das
aas
xchg
cmp
inc
popf
inc
jo
nop
aas
jno
xchg
imul
pushl
push
in
pop
push
sub
add
pop
dec
push
fs
mov
push
shll
filds
fistpl
cmp
adc
mov
stos
jge
cmp
sub
xlat
jp
inc
pop
mov
pop
stc
fs
pop
fs
mov
mov
aam
xchg
insl
inc
es
pop
cwtl
and
das
or
or
loope
mov
movsb
inc
adc
dec
in
push
hlt
mov
push
incb
fadds
into
test
add
ret
das
mov
jb
inc
xchg
xchg
pushf
aad
pop
leave
iret
xor
pop
out
test
scas
insb
repz
or
mov
dec
adc
sbb
andl
aas
imul
push
dec
or
or
mov
mov
xchg
inc
inc
rorb
int
pushf
roll
out
add
cmpsb
repnz
lahf
mov
in
push
lahf
adc
xchg
mov
mov
cwtl
fisubrl
sub
jbe
and
pop
push
jp
inc
or
imul
js
inc
pop
mov
mov
fidivrl
inc
clc
pop
lods
fucomip
outsb
mov
pop
testl
push
adc
dec
mov
xor
push
in
cmp
lret
add
cmpsl
daa
ret
push
stos
xor
push
sbb
jecxz
mov
dec
nop
fisttpl
pushf
leave
imul
cmp
mov
enter
pop
inc
jg
dec
mov
cmp
fisttpl
mov
jl
fisttps
jle
fistl
mov
lahf
leave
inc
dec
push
jp
daa
mov
push
sbb
cltd
adcl
jmp
sbb
xor
ss
cmpsl
test
fwait
cmp
inc
arpl
test
aaa
mov
in
popf
sub
adc
lcall
test
sbb
push
negl
pop
ret
mov
lods
out
adc
shlb
adc
sbb
mov
mov
daa
cmpsb
into
xchg
inc
xor
mov
mov
ja
jmp
dec
gs
out
pushf
inc
or
mov
iret
enterw
lahf
jmp
enter
or
inc
mov
sarb
inc
ficoms
mov
gs
arpl
fnstcw
pop
pusha
testl
sub
xor
jge
je
push
mov
xchg
add
sbb
xor
into
cmpsl
push
adc
in
stc
mov
je
dec
cmc
push
call
mov
shll
int3
adc
inc
in
stos
inc
pop
push
leave
pusha
jb
or
lds
add
fists
mov
std
jecxz
inc
fdivrs
fcompl
or
jge,pn
pusha
stos
rcrl
fwait
xor
aad
push
pop
push
std
xchg
test
xlat
outsb
pop
movsl
sbb
lods
idivl
shrb
iret
adc
jnp
xor
push
pushf
jne
into
jae
out
out
xchg
sub
insl
add
inc
mov
je
mov
dec
xchg
iret
data16
insb
stos
inc
sahf
call
enter
or
inc
lea
sarb
inc
ficoms
mov
gs
bound
inc
fnstcw
sbbl
pop
pusha
testl
sub
xor
jl
je
push
mov
xchg
add
sbb
das
jne
into
cmpsb
push
adc
in
clc
mov
je
dec
hlt
push
call
lahf
inc
outsl
push
js
mov
repnz
lea
adc
inc
in
stos
inc
push
addr16
test
mov
out
les
sarl
dec
fists
mov
std
loop
inc
fdivrs
fistpl
or
mov
adc
stos
rcrl
fwait
xor
aam
push
push
push
std
xchg
andl
outsb
pop
movsb
sbb
lods
idivb
shlb
into
adc
jns
xor
push
lcall
mov
lds
testl
and
xchg
iret
lds
inc
popf
out
test
mov
or
inc
mov
sarb
fimuls
mov
gs
pusha
or
cmp
popa
clc
aam
cmp
scas
jg
loope
mov
xor
lods
push
mov
xchg
ljmp
sbb
sub
dec
push
lods
jg
push
in
mulb
jne
dec
repnz
jmp
popf
inc
jo
jbe
mov
lock
mov
inc
ljmp
xchg
cmp
or
jmp
or
ret
push
popf
adc
dec
loopne
xor
addr16
loopne
inc
fnstcw
fldenv
or
cmp
test
pop
fidivrl
xor
sarb
xchg
andl
testb
int3
adc
std
inc
pop
out
ja
xor
dec
cwtl
jbe
lret
call
sbb
ds
jo
mov
ret
imul
out
aaa
or
push
mov
sarl
dec
fisttps
and
std
pop
or
jg
sbb
shlb
pop
fbld
lahf
xor
jne
push
mov
xchg
std
cmpsb
push
sbb
sub
shlb
ret
push
out
hlt
sahf
xor
or
and
sub
mov
es
psrlw
call
out
xchg
mov
movsb
out
jmp
ret
cmp
pop
sahf
adc
loope
xor
fiadds
xchg
or
cmp
cmpsb
ret
jge
xor
stc
loopne
sub
mov
xchg
jg
fnstenv
mov
testl
cld
inc
pop
out
jne
xor
dec
xchg
jbe
enter
mov
ret
hlt
cmp
dec
outsb
adc
shlb
push
out
test
lret
out
xor
ljmp
bound
lahf
xchg
or
data16
pop
pop
inc
fdivrl
jge
sbb
shlb
sbb
and
push
push
lcall
jne
push
mov
xchg
cld
movsl
sbb
stc
nop
sub
shlb
ret
repz
xor
or
and
sub
mov
es
push
shrl
out
inc
sbb
xchg
or
cmpb
pop
sahf
adc
loope
xor
fldl
sbb
or
cmp
ret
jl
xor
clc
loopne
sub
mov
xchg
jle
fnstenv
lahf
sbb
shlb
mov
lret
sti
inc
pop
out
je
xor
dec
xchg
jbe
outsb
push
jmp
sbb
jo
repz
es
mov
shlb
cltd
loope
test
mov
or
gs
ljmp
popa
or
or
std
pop
push
inc
fdivl
jl
sbb
iret
mov
sbb
and
push
push
lahf
xor
jne
push
mov
xchg
sti
movsb
sbb
mov
idiv
nop
sub
shlb
rcll
pushf
xor
or
pop
addr16
sub
mov
lds
lods
inc
sbb
xchg
mov
movsb
in
jmp
ret
aaa
filds
sahf
adc
loope
xor
faddl
xchg
pop
push
movsb
cmp
movsb
ret
jnp
xor
mul
ja
iret
mov
xchg
jge
fnstenv
sahf
sbb
iret
jne
mov
leave
adc
out
jae
xor
dec
xchg
jbe
insl
push
jmp
sbb
jo
repnz
es
shlb
lods
inc
cwtl
loopne
test
mov
or
fs
sub
mov
or
or
data16
pop
add
test
lods
push
arpl
mov
mov
sbb
and
push
push
std
lahf
ss
jne
jne
push
mov
xchg
cli
mov
sbb
sub
rcrb
rclb
fwait
xor
or
push
xchg
sub
mov
les
push
pop
pusha
out
xchg
mov
movsb
in
jmp
ret
fiadds
sahf
addps
mov
and
fildl
xchg
push
push
movsb
cmp
mov
popf
xor
mul
ja
into
mov
xchg
jl
fnstenv
popf
sbb
into
je
mov
enter
inc
pop
out
jb
xor
dec
xchg
jbe
lds
popf
out
sub
mov
mov
imul
es
mov
addr16
fucomip
test
mov
or
arpl
cmpl
pop
or
pop
mov
mov
pop
add
fdivl
push
arpl
xchg
mov
sbb
and
pop
push
sti
lahf
ss
dec
mov
xchg
stc
mov
sbb
dec
hlt
stc
nop
es
cmp
sahf
inc
pop
scas
js
pop
out
lock
xor
push
inc
jmp
ljmp
jno
outsl
mov
es
imul
ss
bound
push
movsl
jecxz
jmp
les
push
dec
loop
cs
add
addb
cld
xchg
shll
add
movsl
cmp
and
ret
pop
aad
popf
xor
mul
js
int3
mov
xchg
jnp
fidivl
pushf
sbb
movsb
out
cmp
pop
push
lods
testl
int3
dec
xchg
ja
les
ljmp
jno
out
cmp
daa
inc
mov
push
xchg
fsubrp
xchg
mov
arpl
xor
cmpb
ret
or
push
mov
mov
pop
add
xor
sbb
push
fs
test
mov
sbb
pop
ret
stc
mov
ja
dec
mov
xchg
clc
lahf
fdivl
sbb
xchg
and
cmp
popf
inc
sbb
out
xchg
ss
adc
inc
jmp
xchg
sub
insl
mov
dec
jmp
or
push
loope
inc
adc
mov
mov
cmpsb
loop
ljmp
fimull
lahf
or
jecxz
sub
mov
fidivrl
fldt
shll
add
cmp
push
mov
sahf
xor
daa
lret
cld
dec
add
dec
lcall
mov
les
scas
cmc
ds
icebp
outsl
push
ss
nop
js
ret
jmp
jecxz
sub
in
ss
push
mov
imul
mov
fs
push
movsl
pusha
or
cmpl
sub
mov
or
add
sub
push
add
xor
sbb
or
cmp
movsb
sbbl
sbb
mov
js
dec
mov
xchg
negb
push
mov
lock
xchg
and
rcrl
mov
aaa
into
push
jns
inc
out
in
sbb
cs
cmp
imul
sub
fildll
mov
scas
adc
mov
das
xor
or
test
daa
mov
fdivrs
lods
stc
mov
sub
arpl
add
jg,pt
sbbl
shlb
cmpsb
repz
and
inc
add
dec
cwtl
pop
mov
outsb
cli
xchg
mov
ret
repz
repnz
adc
into
inc
mov
shlb
xchg
loope
adc
mov
data16
sub
xchg
push
pop
mov
xchg
mov
into
gs
pop
push
in
test
jg
les
rorl
add
add
inc
fisubrs
ja
push
test
lret
cld
mov
les
cmc
mov
jns
dec
mov
xchg
cmc
fsave
pop
mov
out
sti
xchg
and
aam
inc
sbb
in
xchg
aaa
into
les
push
in
push
popa
cwtl
das
xchg
aaa
jae
imul
insb
cmp
scas
inc
cvtdq2ps
mov
scas
adc
mov
xor
xor
or
test
daa
mov
xlat
jp
fsubrl
int
cli
decb
aas
jge
sbbb
sahf
pop
shlb
aaa
movsb
icebp
in
and
mov
cltd
jne
fnsave
and
sahf
call
sbb
imul
iret
inc
mov
mov
fistps
or
xor
sub
mov
fdiv
mov
mov
data16
adc
ss
lds
iret
dec
jecxz
stos
sub
push
push
cld
dec
fildll
dec
data16
jg
cmpsb
cmp
rcrb
lds
mov
jp
inc
rclb
add
lret
adc
mov
in
cld
xchg
push
addr16
aas
sbb
ljmp
adc
pop
cltd
xor
mov
dec
in
xchg
sub
mov
lods
adc
mov
xor
das
aad
mov
andb
mov
aad
inc
int3
fs
std
dec
test
jnp
sbbl
pushf
pop
into
jno
cmp
lds
cltd
jae
fidivs
xchg
and
popf
out
aad
mov
pop
repz
jp
mov
fstpl
or
xor
sub
adc
mov
mov
mov
repnz
mov
loopw
adc
xor
push
or
jecxz
test
ret
imul
cli
dec
loopne
jae
and
cmpsl
ds
sahf
test
sbb
pop
dec
icebp
mov
jnp
inc
rcrl
add
leave
adc
mov
sbb
aas
xchg
cmp
pop
hlt
call
or
loope
out
adc
xor
mov
dec
loop
xchg
sub
fnstenv
mov
stos
adc
mov
xor
sub
dec
dec
out
and
insl
add
ja
fisubrs
lret
sti
inc
test
sbb
pop
int3
outsl
mov
jl
ret
rclb
add
dec
xchg
and
fwait
in
adc
ss
hlt
addr16
inc
mov
mov
fistpl
or
pusha
pop
xchg
sub
adc
dec
mov
repz
scas
shrl
daa
adc
xor
stos
push
push
movsl
test
dec
in
cmpsb
sub
xlat
sbb
dec
loope
jno
and
les
sbb
dec
out
movsb
cmp
imul
popf
inc
ret
mov
loopne
adc
mov
sbb
xlat
xchg
cmp
insb
mov
cmc
out
cmp
mov
fistps
adc
xor
scas
mov
sub
xlat
mov
or
lea
test
stos
fnstcw
test
rorl
add
out
and
rcll
shll
fbld
enter
inc
stos
inc
ja
test
cwtl
enter
mov
jge
rol
repz
outsl
adc
ja
nop
and
cltd
loop
xlat
adc
pop
cmc
gs
jl
mov
fstps
push
in
mov
sub
mov
mov
mov
hlt
mov
shrb
and
lock
js
test
lret
sti
movsb
sub
aad
insl
add
testb
jo
and
ret
test
sbb
dec
in
movsb
cmp
push
jge
inc
ret
mov
loopne
lds
and
sbb
fcoms
mov
mul
mov
sarl
pop
out
push
pop
pushf
xor
mov
sub
mov
pop
push
testl
fdivrs
test
iret
or
add
jge
sub
push
sahf
outsl
push
shlb
fbld
data16
testl
dec
xchg
leave
pusha
leave
imul
sbb
rcrl
add
ja
and
xchg
loope
fcoms
mov
pop
mulb
sarb
pop
lock
fwait
xor
mov
push
loop
mov
sub
mov
mov
mov
cmc
mov
stos
shrb
and
stos
push
std
lock
ja
enter
movsl
or
sub
rcrl
outsb
add
and
inc
push
inc
hlt
cwtl
xchg
inc
jmp
cmp
ds
mov
loopne
ret
push
and
aas
in
xchg
push
popa
inc
fsts
mov
mul
mov
sarl
fistpl
or
popf
xor
sub
mov
sub
aam
dec
push
push
testl
xlat
jp
test
or
decl
call
push
pushf
outsl
push
into
jb
loopne
out
lea
lds
testb
je
xchg
push
cmp
ret
cmp
js
lea
mov
xchg
filds
adc
pop
mulb
cmp
cmp
pop
icebp
fwait
xor
scas
js
loope
mov
cs
xlat
outsb
scas
push
mov
xchg
cmc
mov
test
adc
jne,pn
enter
cmpsb
add
out
mov
outsb
add
and
mov
lahf
inc
imul
repnz
xchg
lret
pusha
inc
jmp
cmp
addr16
cltd
ds
pop
jo
add
js
or
mov
push
pop
inc
fsts
mov
mul
mov
sarb
fistpl
or
popf
xor
sub
mov
sub
std
fnstenv
aam
dec
push
push
testl
aad
out
xchg
or
call
push
lcall
mov
lds
testb
jb
xchg
dec
xchg
leave
pusha
lds
cmp
out
jle
mov
add
jns
mov
mov
xchg
fldl
push
mov
mov
das
pop
mulb
cmp
adc
pop
pop
repnz
fwait
xor
scas
jns
loopne
mov
das
xor
outsb
lods
push
mov
xchg
cmc
mov
cmpsl
aam
fldenv
adc
push
cli
repnz
xor
movsb
dec
adc
negb
outsl
push
dec
icebp
dec
jecxz
imul
jne
stos
inc
lock
mov
enter
inc
jmp
call
pop
outsb
mov
loop
rorl
mov
adc
fimull
scas
popa
clc
loopne
cmp
mov
adcb
fcomps
or
xor
pop
test
push
fidivrl
sub
sub
dec
clc
popl
mov
lock
lret
push
movsl
cld
inc
push
jmp
dec
cwtl
jo
lret
loop
jmp
and
hlt
lods
inc
jo
mov
inc
xchg
lret
push
call
pop
out
aaa
push
popf
push
mov
mov
fildl
or
pop
mov
sub
ds
jg
adc
mov
pushf
xor
jp
fisubs
cwtl
das
xor
outsl
stos
push
mov
test
testb
pop
adc
mov
jb
lret
adc
cmc
popf
vmovshdup
dec
out
dec
jecxz
push
and
jae
lods
inc
out
xchg
mov
adc
bound
cmpsb
cmp
xchg
cmp
pop
insb
mov
sahf
call
or
mov
adc
lea
push
mov
scas
stc
filds
sbb
pop
icebp
pop
push
lahf
xchg
js
pop
cmpsl
mov
sub
sub
mov
add
nop
andb
imul
xchg
leave
push
movsl
cli
inc
push
ljmp
jno
leave
insl
dec
loop
ljmp
repnz
mov
inc
nop
lret
cwtl
jecxz
adcb
pop
sahf
addr16
and
cwtl
xchg
fiaddl
or
popa
clc
pop
add
jg
mov
pop
repz
popf
xor
stos
jp
fsubl
push
push
std
cwtl
das
das
js
jo
push
mov
or
mov
mov
push
lods
dec
div
mov
jno
lret
mov
ret
push
jmp
int3
adc
dec
jecxz
imul
and
mov
xchg
cld
movsb
inc
jae
scas
fdivr
sub
sbb
pusha
cmp
in
xchg
mov
dec
fcmovbe
adc
es
dec
jl
int3
mov
lret
mov
jo
lcall
mov
sub
mov
sub
incl
lea
mov
lods
mov
pop
shrd
lahf
repz
sbb
movsl
loop
in
jge
imul
and
mov
ss
jmp
fstl
jne
pop
or
mov
mov
pcmpeqd
pop
inc
jecxz
xchg
sbb
ja
jno
jmp
enter
mov
test
inc
andl
cmp
pushf
sub
add
add
pushf
rorb
xchg
xchg
rcl
xchg
ss
and
pushf
lahf
pop
inc
add
xchg
xchg
inc
daa
mov
out
hlt
cld
les
adc
cli
dec
push
mov
jne
pop
bound
imul
cmp
into
fdivrs
dec
fbld
mov
mov
test
push
jecxz
inc
push
scas
scas
cmp
setne
scas
enter
pop
mov
push
sub
sarl
jmp
lods
popf
dec
push
mov
pop
or
out
push
addr16
xchg
sub
pop
clc
ss
xlat
mov
push
popa
or
jno
fstl
jp
xchg
in
sub
add
mov
sahf
ret
push
or
adc
and
outsl
inc
sarb
call
sbb
mov
in
repnz
add
leave
subb
jne
lahf
shl
mov
jmp
fdivrs
arpl
test
jbe
add
mov
aas
aam
mov
loopne
mov
jecxz
lcall
in
out
mov
add
xchg
adcb
and
push
adc
adc
cmp
or
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
int3
cld
sbb
andl
dec
call
stc
xchg
mov
or
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
add
and
adc
jp
add
lea
push
cltd
or
mov
insl
movsl
cmpsb
hlt
js
ja
cmp
lcall
add
sub
add
pop
movsb
mov
jmp
jb
and
jp
cmpsl
lods
ret
cli
push
rolb
or
xchg
push
inc
adc
dec
scas
add
inc
pop
js
xchg
clc
scas
insl
push
jo
aam
jmp
fs
testb
jb
outsl
sbb
lahf
in
xchg
fistl
sbb
ss
lods
mov
hlt
adc
lods
roll
aas
xchg
scas
dec
push
inc
pushf
mov
scas
xchg
cmc
scas
imul
pop
xchg
or
ja
test
mov
iret
adcb
lods
fsubr
int
push
push
out
push
mov
cli
repnz
