push
or
stos
dec
dec
adc
xor
inc
push
cmp
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
std
out
sub
sahf
out
push
add
xchg
push
sti
cmp
bound
les
cmp
jmp
outsb
ss
ljmp
adc
in
xchg
xchg
push
pop
sub
andb
lcall
cmp
stos
sub
test
jl
insb
dec
movsl
mov
xor
in
sbb
jnp
add
mov
fcmovnu
pusha
sbb
ljmp
outsb
jo
cmpsb
push
and
pop
sub
leave
xor
ds
inc
adc
sub
xor
dec
xchg
xor
imul
and
out
out
add
push
insb
sbb
mov
and
test
outsl
negl
loop
sub
in
sub
pop
repz
xchg
or
pushf
dec
dec
enter
cltd
cmp
push
lahf
xor
sbb
xchg
mov
push
adc
dec
sub
lods
push
repnz
adc
pushf
jge
jno
aaa
adc
sub
jbe
mov
add
push
cli
std
adc
and
mov
call
and
scas
sub
jg
xchg
push
aad
mov
shrb
fiaddl
jmp
outsl
xor
cmp
repnz
xor
fiaddl
dec
dec
dec
cmp
daa
mov
rcrl
orl
inc
xor
mov
hlt
std
jge
or
jns
xor
adc
in
sub
jp
cs
or
fdivl
add
mov
jbe
mulb
ret
push
and
inc
insb
sub
and
mov
mov
filds
repnz
dec
in
xchg
inc
xchg
sbbb
loop
mov
ret
lock
aam
push
aaa
pusha
hlt
shll
jnp
jno
data16
and
repz
cmp
test
data16
jmp
ss
add
adc
fsubl
fmuls
decb
and
pop
pop
pop
ret
nop
nop
push
mov
sub
push
push
push
movl
movl
jmp
mov
mov
mov
mov
mov
mov
movl
jmp
mov
mov
mov
mov
mov
mov
shl
add
mov
add
mov
shrl
mov
add
mov
mov
xor
mov
xor
sub
mov
mov
mov
shl
add
mov
add
mov
shrl
mov
add
mov
mov
xor
mov
xor
mov
sub
mov
sub
decl
cmpl
jne
mov
mov
mov
mov
mov
mov
add
mov
decl
cmpl
jne
xor
or
je
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
push
call
test
jne
mov
clc
add
or
jo
inc
add
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
add
add
cmpsb
sub
add
add
gs
push
sub
jne
inc
gs
jg
arpl
es
adc
mov
xchg
inc
pop
lods
outsl
sbb
add
sub
icebp
and
mov
and
mov
xor
lret
mov
xlat
aad
out
sbb
cmc
xor
xchg
push
mov
sbb
es
lcall
mov
lods
mov
pop
mov
or
and
mov
cwtl
sbb
cmp
scas
pop
movsl
lea
inc
adcl
pop
sbb
sbb
mov
lods
fwait
insl
xchg
adc
jbe
ds
cmpsb
add
sahf
fidivrl
cmpsb
dec
xchg
pushl
jno
mov
shlb
mul
in
pop
push
rorb
into
push
aam
jl
pop
jp
loopne
and
out
add
push
int3
cmp
insb
xor
lea
pop
lock
sbb
sbb
inc
loope
mov
mov
lahf
pop
sub
arpl
cmp
push
xor
cmpb
out
inc
stos
and
aam
cwtl
push
sub
addl
lods
adc
stos
mov
loope
lahf
cs
call
lcall
and
incb
fsubs
in
mov
cmp
shl
pop
jbe
dec
jae
out
sub
push
xchg
sbb
xchg
pop
or
jmp
ljmp
mov
inc
push
out
push
scas
roll
nop
data16
ret
setb
ljmp
sbb
cmp
jae
std
xchg
repz
pusha
xchg
mov
test
leave
mov
stos
sar
xor
jns
lock
and
sahf
sub
fidivs
mov
fsubl
mov
icebp
or
and
enter
lods
scas
ss
pop
sub
loopne
or
adc
push
daa
addr16
cmp
xchg
cli
hlt
scas
mov
push
push
rclb
out
filds
xchg
cltd
jbe
shl
adc
sbb
jle
mov
sbb
jle
mov
adc
jge
enter
out
scas
scas
add
in
xchg
add
sbb
mov
jb
jns
xchg
cmp
cmp
lea
iret
aas
adc
das
aam
pop
pop
sub
inc
mov
fdivl
cltd
cmpsb
pop
adc
stc
std
leave
mov
setp
mov
xchg
mov
push
sbb
sbb
fstpt
add
pop
mov
mov
xlat
mov
movb
mov
pushf
xor
inc
cmp
in
aam
popf
add
jae
inc
sub
adcl
mov
les
outsb
xchg
loop
dec
cmp
test
push
push
sub
inc
lea
aaa
int3
cmpsl
clc
dec
push
inc
fs
dec
shrl
xor
and
dec
lods
sbb
push
mov
xorl
imul
push
or
shrb
aas
jne
sti
adc
bound
cmp
mov
push
js
jbe
js
cltd
dec
lahf
jecxz
push
lret
mov
jbe
xchg
test
in
jo
fwait
xor
mov
testb
lea
sbbb
iret
hlt
out
cmpsb
jl
mov
int3
jo
mov
lahf
xchg
or
mov
mov
push
adc
lcall
gs
ficomps
fwait
loop
loop
mov
imul
ret
sub
xor
leave
jne
cmpl
leave
mov
jmp
pop
mov
cmp
stos
enter
or
lock
fs
jbe
mov
jo
cmp
mov
and
adc
lcall
jge
lods
mov
out
icebp
mov
test
push
jnp
jae
in
jecxz
cld
lds
or
or
adc
outsl
and
negb
xor
push
jmp
mov
dec
add
in
sahf
mov
fdecstp
aad
outsb
loopne
ret
fdivrs
mov
in
fistps
bound
outsl
js
lods
aas
jo
xchg
add
stc
fisttps
fbstp
xor
xor
js
push
aam
lock
dec
mov
dec
jl
dec
sbb
leave
mov
dec
lods
inc
push
push
jp
out
cwtl
and
jmp
push
mov
leave
sahf
ja
arpl
addr16
xor
fcoml
push
sub
xchg
xchg
inc
addr16
pop
or
cltd
mov
and
pop
jl
aad
loopne
stc
cmp
adc
rcrb
and
inc
mul
imul
jo
mov
inc
arpl
jo
into
out
xchg
imul
mov
xor
lret
push
mov
fs
and
cmp
sbb
rolb
call
dec
and
cmc
or
mov
gs
repnz
in
imul
in
mov
jmp
jnp
ljmp
dec
jae
outsb
jnp
out
insl
inc
je
mov
push
mov
outsb
addr16
lock
jno
jmp
popf
pop
popf
mull
adc
outsb
out
movsl
gs
push
imul
pop
pop
mov
jns
jo
and
push
shrb
push
inc
lret
out
and
mov
std
inc
mov
mulb
pop
out
and
jo
or
bound
pop
frstor
xor
test
xchg
in
call
std
ret
dec
fidivrl
sbb
add
cmpsb
loop
lods
push
sub
fs
fisubl
in
mov
rorb
test
daa
aas
sbb
aad
sti
or
sbb
adc
or
push
or
mov
inc
ja
bound
leave
test
mov
mov
negb
xchg
fimull
push
out
sbb
scas
mov
out
dec
sub
mov
inc
cs
inc
cmc
add
mov
in
push
mov
iret
xchg
imul
dec
push
icebp
popf
stos
xor
mov
mov
jmp
mov
dec
rol
rolb
xlat
pop
mov
daa
and
dec
shrb
push
lds
dec
sbb
jl
lock
mov
mov
out
jge
pop
mov
loope
data16
mov
xchg
fdivrl
xchg
add
lea
stos
xchg
int3
sub
push
pusha
pop
and
sbb
pop
pushf
lret
mov
andl
shrl
mov
lret
std
pop
add
jno
or
push
xor
mov
rolb
fdivs
or
std
fists
inc
out
aam
shl
es
nop
or
sti
pop
addr16
aas
inc
or
sbbl
adc
ljmp
shr
xor
into
jne
fcompl
xor
mov
and
pop
fwait
or
xor
pusha
push
leave
sti
shlb
and
xchg
outsb
sub
inc
xchg
je
mov
nop
inc
sub
adc
addb
push
and
push
lods
enter
pop
leave
pop
cmp
jnp
xor
mov
xchg
stos
aas
push
insb
push
or
lds
fbstp
pop
ficompl
xchg
jne
inc
mov
popf
jns
test
dec
add
xchg
mov
inc
rorb
fnstsw
mov
loopne
dec
pop
bound
stc
push
out
jae
xorb
xor
push
xor
mov
into
inc
jne
aam
test
fadd
test
daa
ljmp
cld
mov
outsb
aad
xor
push
icebp
cs
fisttpll
pop
jecxz
inc
xor
pop
mov
outsl
testl
nop
inc
jecxz
lcall
push
test
clc
mov
sub
mov
xchg
std
mov
xchg
scas
dec
popf
js
push
mov
xchg
jno
sub
sbb
rcr
scas
push
xchg
mov
popf
aad
jmp
in
in
int3
lret
xor
rcrb
test
xchg
sub
xchg
mov
mov
cli
inc
xchg
jl
adc
push
sub
test
mov
mov
dec
push
or
or
js
shlb
idivb
mov
mov
inc
pop
xchg
clc
xor
mov
pop
shlb
jnp
jbe
ret
xchg
fadd
in
xchg
popa
push
je
outsl
cmp
scas
mov
add
inc
cmp
leave
lock
movsl
pop
mov
dec
push
xor
ja
or
into
xchg
xchg
sub
sub
fcomps
jb
and
aaa
cld
sarb
inc
ds
or
cmpb
add
jae
mov
and
mov
loopne
mov
jns
sahf
mov
pushf
mov
in
mov
jns
xchg
daa
push
movsl
fstl
mov
mov
lahf
ret
jns
loope
loope
lret
dec
jle
aas
outsl
sti
sub
push
dec
stos
dec
jne
cmp
cmpsl
inc
sub
sub
enter
pop
add
rcrb
iret
pop
jp
and
in
andb
adc
addr16
icebp
sahf
filds
mov
std
andl
or
shlb
push
sub
shr
scas
add
pop
jns
fyl2x
testl
mov
cltd
mov
pop
out
movsb
xchg
adc
pop
call
lret
jecxz
lds
out
repz
push
push
roll
or
jbe
xor
scas
lods
mov
jns
out
aaa
das
cltd
loope
into
cmp
sbb
xchg
sub
jl
loopne
pop
popa
mov
dec
mov
scas
add
push
enter
cmp
mov
adcb
subb
adcl
sbb
push
bound
popa
pop
push
jg
xchg
in
xchg
mov
cmp
mov
add
outsb
jg
loope
add
jle
mov
cmp
sti
mov
in
movsb
xor
pop
imull
push
outsl
jmp
xchg
das
push
dec
arpl
movsb
in
adc
pop
mov
sbb
fdivrs
add
cs
das
ja
fst
sub
push
clc
cs
pop
mov
mov
mov
add
sarb
xor
fcompl
mov
mov
xor
fsubl
out
loop
or
push
ja
push
out
dec
loopne
adc
das
jbe
pushl
xchg
stos
xchg
pop
push
cmp
scas
mov
cmp
lds
dec
sub
rorb
sub
inc
idivb
ret
gs
xchg
mov
cld
pop
and
inc
and
in
cmp
fbstp
mov
dec
pop
inc
sarb
xor
pop
pop
jmp
pop
dec
lods
jg
dec
outsb
sbb
or
lock
add
and
rolb
ss
out
jge
lds
hlt
dec
je
cmp
ret
sbb
hlt
xchg
push
clc
push
inc
mov
pop
mov
fsubs
mov
jecxz
sti
pop
dec
mov
mov
cs
imul
inc
testl
xchg
push
xchg
sbb
dec
add
repnz
imul
jbe
dec
mov
out
dec
pop
ds
xchg
rcrb
sub
testl
insl
add
and
adc
jns
cmc
dec
lods
fidivrl
rorb
cmp
mov
daa
lock
imul
xor
xchg
xchg
add
test
pushf
ljmp
inc
and
dec
lds
out
and
jb
cwtl
or
mov
mov
test
add
ret
adc
mov
in
ja
or
mov
dec
ja
fsubrs
outsl
cmp
into
mov
scas
jmp
out
pop
insl
call
negl
pop
adcl
jae
popa
aas
data16
jecxz
dec
pop
cmovge
lds
or
arpl
ret
repnz
shlb
sbb
cli
push
lahf
dec
movsl
xor
loopne
in
ss
test
setae
xor
rolb
mov
rol
bound
adc
sub
sbb
pop
sbb
dec
xor
add
enter
fdivrp
lret
sub
sbb
in
ret
push
dec
or
cwtl
adc
clc
sbb
psllq
int
xchg
dec
xchg
and
add
outsl
sbb
mov
pusha
adc
mov
sbb
lds
inc
inc
cmp
lret
ljmp
inc
cltd
test
push
shrl
push
loope
pusha
sahf
pushf
cmp
inc
inc
pop
orb
cmp
dec
fldcw
jge
lods
pop
cmp
pop
push
in
fcmovu
jnp
out
hlt
mov
popf
push
inc
adc
lods
int
cmpsl
inc
or
dec
movsb
push
xchg
rclb
push
jbe
lds
dec
iret
push
mov
xor
push
mov
scas
xchg
adc
cli
test
cmp
inc
xchg
cmp
sbb
cmp
push
jno
or
or
int
pop
mov
xor
pop
pop
orl
xchg
insl
inc
xchg
cltd
out
jg
add
sbb
fsubrl
jno
imul
pop
and
xlat
add
rol
decl
xor
mov
movsb
insb
dec
cli
cld
or
sub
movsl
fcmove
shll
push
adc
mov
clc
push
fiadds
enter
mov
xor
sti
fcom
mov
hlt
adc
pop
fdivl
and
cmpsb
dec
pop
gs
xchg
xor
or
iret
jg
adc
sbb
jno
or
imul
xchg
xor
ficompl
pop
push
fwait
or
xor
cli
dec
adcl
loopne
dec
cmc
cmp
test
decb
sbb
pop
mov
roll
push
repnz
aam
sarb
jb
sub
pop
pop
ja
jge
outsl
adc
pop
sbb
incb
cs
xor
push
mov
ljmp
xor
add
leave
loopne
cmp
cli
mov
cld
int3
testb
fsubl
int3
sarl
and
xlat
icebp
xchg
mov
scas
lea
test
cmpl
push
push
pop
pop
pop
sti
cmp
arpl
nop
mov
fwait
inc
xor
mov
inc
add
fcmovb
movsb
adc
faddp
jge
scas
call
neg
push
xchg
hlt
int
inc
bound
clc
dec
loope
insl
jno
dec
in
inc
js
les
cmpsl
dec
xchg
cmp
call
mov
add
pop
lret
inc
jnp
sbb
pop
sub
test
xchg
pop
stos
mov
add
xor
lods
xchg
push
lea
pop
add
fisubrl
fld
xlat
fwait
cmpb
lods
imul
test
fimull
movsb
mov
pusha
xor
ret
nop
pop
inc
and
fisubrs
rcll
mov
and
pop
mov
add
imul
lret
in
sub
in
andl
fcoms
not
pop
sub
shlb
and
push
ljmp
push
mov
sahf
inc
out
not
mov
pop
adc
mov
xchg
or
lock
loopne
test
mull
push
sub
xor
fs
out
scas
imull
and
lds
in
lock
dec
dec
in
cltd
push
xor
mov
cli
cld
daa
aad
push
mov
in
mov
in
into
idivl
cmp
test
mov
jp,pt
mov
mov
dec
loopne
pop
lcall
mov
push
jp
mov
shld
out
sbb
std
outsl
fiaddl
cli
inc
in
jno
jnp
pushf
jbe
lods
ficoms
shrl
jge
cmp
mov
push
and
iret
out
out
rclb
addr16
jne
pop
inc
dec
loopne
jp
push
sub
mov
cltd
test
in
dec
cmp
xchg
dec
cwtl
and
jmp
divw
dec
jo
repnz
xchg
shlb
cmpsl
xchg
xchg
pop
lea
mov
jno
cmp
in
pop
inc
sub
push
add
ja
mov
mov
mov
in
dec
sarb
add
out
insb
mov
xchg
imul
mov
lds
mov
outsb
not
lds
js
adc
fldpi
aaa
adc
mov
pop
and
xor
cmp
insl
into
das
lahf
dec
shrl
sbb
sbb
pop
ret
and
test
sub
cmp
cmp
sbb
jnp
lds
sub
scas
adc
shll
insb
and
andl
jae
leave
sti
xchg
cltd
push
pop
loop
fists
xrelease
aaa
jecxz
add
rclb
xchg
inc
cmp
mov
sub
pop
imul
pop
jmp
das
fs
cmpsb
fs
add
xor
jge
adc
std
les
mov
push
xor
aad
push
mov
call
cltd
sbb
mov
sub
or
push
jl
push
push
xchg
push
mov
pop
aas
lods
addb
aaa
mov
push
aaa
data16
call
add
mov
inc
jns
repz
jnp
dec
es
mov
and
xchg
ja
dec
and
dec
sbb
add
scas
sub
les
and
and
mov
lods
pop
orb
mov
js
scas
lea
cwtl
pop
cli
xchg
movsl
xchg
jge
jle
push
daa
jmp
pushl
or
iret
pop
jb
xchg
aad
sbb
pop
adc
sahf
imul
mov
mov
out
jnp
push
mov
test
in
ljmp
data16
mov
xchg
xor
mov
jo
sub
dec
out
inc
xchg
sub
mov
arpl
dec
jbe
inc
or
and
push
hlt
enter
mov
sub
lret
aas
loope
sub
fs
cmp
and
fistpl
daa
cmpsb
in
cmpsb
dec
sbb
jbe
mov
cmpsb
leave
mov
push
iret
rol
aas
jb
cmp
jmp
subl
pushf
pop
sub
lds
mov
fwait
stos
jb
loopne
insb
lea
xchg
pop
cmpsl
out
stc
cmp
out
push
add
call
fldcw
in
pusha
cmovs
mov
sbb
test
inc
jo
cmp
sti
rorl
loopne
aas
mov
dec
inc
mov
dec
dec
push
push
mov
fimuls
mov
sbb
insl
scas
inc
cmp
xor
push
xchg
jmp
xchg
mov
jle
inc
out
and
push
fisttpll
pushf
adc
into
fadds
cwtl
fwait
rclb
adcb
or
jl
rol
fidivrs
pop
jb
sub
in
insb
enter
sbb
int3
shll
jb
insb
bound
sbb
sbb
sub
or
jns
sarl
push
adc
mov
aam
jae
push
out
test
ds
sti
inc
test
es
inc
pop
test
sahf
mov
movsb
jmp
mov
mov
repz
idivb
ffree
out
loop
jae
sub
hlt
sub
adc
xor
dec
fwait
dec
lds
mov
push
sub
sbb
ret
cwtl
or
cmp
fwait
or
add
stc
mov
cli
in
call
sbb
jg
xchg
stos
pop
dec
cmp
fidivrl
jl
sbb
cmp
icebp
out
or
jl
mov
push
dec
cmpsb
sahf
sub
xor
sbb
ljmp
xchg
les
shlb
ficomps
sti
fildll
test
fisubs
out
push
mov
outsb
out
mov
jns
test
scas
pop
and
insb
daa
mov
rclb
testb
jg
sbb
mov
insl
movsb
sbb
push
mov
ficoml
pop
pushl
xchg
lcall
mov
cli
out
lcall
mov
jo
xor
adc
leave
mov
outsl
adc
popf
movsl
cmp
sbb
mov
jne
test
adc
mov
push
adc
movsb
jne
ret
or
mov
jmp
push
addr16
lret
aaa
jle
popf
mov
iret
inc
xchg
xchg
cmc
add
in
add
mov
mov
mov
movsl
fisubrs
lret
data16
fcoml
push
xorl
cmp
sbb
push
out
fcoms
xchg
sub
mov
pop
repz
mov
pop
lcall
jge
adc
sti
iret
bndstx
andb
xchg
shll
push
std
push
cmp
xlat
dec
in
xchg
mov
int3
sub
push
sarb
shrb
xor
insl
inc
fcomps
pop
xor
fcompl
ret
out
jge
jge
jecxz
in
loopne
mov
add
repnz
jp
js
mov
fwait
loope
outsb
jl
jns
jnp
dec
lahf
cmp
decl
mov
add
daa
insb
adc
ds
dec
js
xlat
mov
pop
and
add
adcb
icebp
mov
mov
inc
popa
jbe
xchg
xor
dec
std
iret
or
xlat
test
mov
xorl
sub
call
adc
aad
xchg
ffreep
out
mov
cmp
sbb
outsb
cmp
gs
cwtl
iret
scas
stos
mov
or
pop
cmp
xor
pop
adc
jg
push
jle
jmp
dec
inc
insl
pop
xchg
sbb
xchg
fldln2
adc
dec
xchg
mov
mov
outsl
and
pop
pop
mov
fs
sahf
sarl
into
sub
jnp
aas
movsb
testl
jnp
lods
aaa
adc
in
pop
mov
loopne
ja
or
insb
daa
push
rcll
add
push
and
push
out
sbb
push
movsl
mov
aam
shrb
push
fdivrl
adc
push
xor
inc
xor
or
mov
fidivl
roll
pop
jg
nop
popa
mov
adc
popl
movsl
test
cmp
adc
push
aas
stc
popa
sbb
mov
mov
mov
addr16
inc
orl
lahf
and
mov
call
adc
mov
mov
lds
mov
cmp
mov
jne
or
mov
repnz
adc
imul
jae
ret
inc
insb
xchg
insb
ret
test
ljmp
aam
mov
repnz
shll
aad
mov
loop
mov
xor
dec
movsl
and
loopne
lods
outsl
subb
sbb
add
fisubs
fxch
pop
dec
add
mov
add
jne
js
jno
ss
or
jbe
jle
mov
cmp
fildll
insl
lea
rclb
push
jo
sbb
cmpsl
mov
pop
cltd
imul
inc
mov
dec
loop
mov
in
jecxz
dec
lods
xchg
aas
pop
jnp
push
jo
xor
pushf
stc
mov
xchg
mov
sub
daa
adc
pop
lahf
lahf
cs
pushf
test
lds
dec
je
or
sub
loop
jmp
loop
mov
aad
arpl
orb
inc
scas
arpl
lock
subl
in
rorb
stos
adc
es
mov
sti
stc
mull
adc
add
jne
push
in
insl
cmpsb
mov
cltd
or
inc
inc
repz
mov
dec
add
cs
pop
xor
imul
and
inc
dec
dec
nop
ficoms
inc
sbb
fwait
insl
add
xchg
xchg
xchg
movsb
dec
mov
push
jge
jecxz
nop
repnz
enter
push
and
inc
or
imul
insl
push
imul
pop
addr16
in
pop
jne
mov
rorl
sub
mov
orl
xchg
cmp
and
test
int3
movsb
pushf
lret
mov
xchg
sbb
test
rol
mov
ja
icebp
mov
orb
lods
insl
scas
mov
nop
addr16
fldl
int3
xchg
repz
xor
mov
inc
pop
mov
mov
leave
ss
int
mov
mov
loop,pn
mov
rcll
rclb
in
ret
dec
pop
mov
and
sub
or
xor
js
jbe
jns
ret
roll
add
rorb
sti
test
rclb
mov
faddl
sbb
daa
filds
dec
fcomi
std
jo
insb
jno
adc
xor
aad
mov
lock
dec
sbb
mov
addl
add
mov
jb
xchg
rorl
nop
push
sub
inc
xlat
sub
jne
sbb
sti
outsb
push
ret
mov
jne
in
pop
fnstenv
inc
pop
not
xor
add
gs
pop
jp
stos
gs
pop
daa
mov
loop
movsb
shlb
jo
xchg
ret
mov
rorb
inc
dec
jg
push
and
xchg
lods
add
int
pop
push
orl
outsb
dec
fidivs
xchg
inc
orb
rcr
sbb
sub
vpavgw
pop
ret
filds
xor
add
xchg
inc
lods
pop
pop
lret
mov
xchg
arpl
notb
mov
or
xor
inc
jne
je
cld
jae
fs
int3
clc
jb
jbe
negb
pop
mov
call
and
out
sbbb
and
dec
sbb
insl
scas
std
jg
mov
shlb
adc
xor
std
lock
and
cli
movsl
pop
call
mov
mov
push
cmpsl
imul
test
or
out
sub
clc
fsubrl
jg
jle
push
mov
test
xor
dec
sahf
pop
jo
cmpsb
jae
nop
adc
popa
push
sbb
inc
push
jbe
imul
clc
inc
loop,pn
adc
lds
push
ss
call
xchg
mov
xor
mov
outsb
adc
adc
ljmp
mov
cmp
cmc
insl
mov
outsb
test
mov
ret
nop
lea
mov
outsl
repz
xor
mov
sub
jbe
jge
mov
dec
lahf
jno
push
inc
ficoml
dec
mov
sahf
nop
sbb
sub
clc
sbb
jle
jg
aas
pop
divl
mov
test
mov
xchg
mov
add
scas
repnz
jmp
sub
cmc
repz
lahf
jb
inc
cmpsb
or
repnz
test
sub
cli
push
jp
test
negb
lds
add
xor
mov
fildl
hlt
push
notb
sbb
cmp
sub
mov
fisttpll
adc
adc
frstor
xchg
pop
lea
push
cmp
and
mov
push
push
adc
data16
add
push
xorb
movsl
testl
es
insb
cmpsb
sbb
mov
mov
and
imul
adc
dec
clc
push
sbb
mov
fwait
lea
mov
outsb
pusha
or
flds
adc
xchg
and
adc
bnd
mov
arpl
xchg
xor
xor
insl
push
push
int
fldcw
ret
xlat
push
dec
sub
test
dec
stos
push
andl
pop
sbb
aaa
lahf
scas
imul
mov
insb
cli
cmpsb
mov
dec
xchg
mov
dec
mov
outsb
sub
mov
lds
and
lret
out
add
push
add
mov
add
pop
xchg
sbb
adc
scas
imul
ds
dec
jo
mov
ficomps
div
xor
inc
repz
push
add
scas
mov
pop
sbb
fdiv
add
loop
mov
stos
pusha
test
jne
sbb
ret
insl
jbe
sti
sub
stos
popa
daa
imul
jbe
xor
stos
jmp
fstpt
push
popf
pop
stc
fdivs
xor
sahf
add
sub
cmc
dec
sub
push
mov
in
cmp
test
mov
int
mov
or
sahf
ss
fbld
popf
xchg
inc
loopne
mov
shl
cwtl
inc
das
stc
xor
popf
cmpsl
ret
xchg
jecxz
push
dec
cmp
xor
jne
out
pop
int3
xchg
push
cmpsb
push
stos
mov
ret
mov
add
lock
stos
or
insl
loopne
es
ret
add
jge
cltd
sub
jmp
fwait
sub
mov
in
mov
ljmp
lea
ret
cmp
lock
fistl
iret
cwtl
push
movsb
pop
test
jne
into
ljmp
and
or
xor
loopne
fldt
imull
bswap
loope
ja
enter
and
add
outsb
into
sbb
add
pop
mov
jl
fdivrs
into
cmp
mov
outsl
jne
inc
cld
mov
lods
add
ret
stc
push
sahf
sbb
test
xchg
in
ret
xor
sarl
jecxz
xchg
sbb
jg
lcall
notb
push
xchg
cmp
xchg
xor
xor
data16
xor
gs
jl
jg
xchg
pop
push
or
pusha
lock
xchg
lret
push
and
aam
pop
imul
fs
mull
jp
movsl
sahf
dec
xor
aam
or
mov
inc
push
jo
add
inc
in
test
icebp
cs
ret
cmp
lods
hlt
in
or
cmp
lea
arpl
pop
fldcw
mov
js
add
sbb
jne
pushf
pop
in
in
dec
mov
and
cs
mov
scas
mov
adc
jle
inc
lods
mov
dec
inc
out
pusha
lahf
imul
mov
pop
cmp
xchg
pop
pop
pop
les
repnz
xor
xor
sbb
push
loope
mov
repnz
out
sbb
jge
xchg
dec
push
mov
xchg
test
push
pop
repnz
xchg
mov
mov
add
mov
sub
add
incl
xchg
add
int3
test
mov
pop
orl
adc
sub
jne
jecxz
add
cmc
aam
inc
or
fldcw
pop
inc
xchg
movl
cli
fstl
into
sub
add
xor
adc
jno
mov
addr16
sub
out
testb
fistpll
and
movsb
test
and
jge
cs
loope
mov
imul
stos
cmp
push
xor
jne
out
scas
jl
mov
push
movsl
mov
sahf
sbb
ret
out
das
cmp
iret
lock
mov
jg
push
adc
mov
mov
dec
add
ficoml
pop
adc
adc
add
lret
cmpsb
lcall
out
insb
out
push
add
mov
fs
mov
lret
in
test
nop
push
sub
addr16
push
sub
or
pushf
test
test
sub
sbb
jecxz
repz
fwait
mov
mov
xor
cmp
ss
sub
adc
push
pop
dec
mov
dec
gs
mov
jmp
cld
scas
dec
and
adc
into
mov
push
fildl
add
and
push
arpl
adc
dec
aad
js
sub
cmp
push
pop
pop
adc
test
sbbb
call
ror
pushl
inc
and
push
dec
call
jb
outsl
jl
push
shll
pop
jo
jmp
and
and
cs
inc
adc
int
or
idivl
xor
push
test
xor
popf
test
xchg
xchg
sub
and
sbb
jae
daa
cmp
inc
das
insb
jno
into
jle
lcall
call
mov
inc
sub
sahf
lahf
pop
xor
inc
fcmovnu
js
mov
outsb
xchg
cmp
jmp
xor
ret
imul
cmp
push
int3
lret
cmp
sbb
adc
sbb
pop
insb
pinsrw
shrl
movsl
jo
lret
pop
orb
test
sub
dec
mov
ljmp
and
push
mov
test
nop
push
add
pop
cmp
bound
jo
pop
leave
xlat
dec
push
or
out
cmpsl
push
xchg
test
adc
int3
mov
add
inc
mov
ljmp
pop
lret
push
mov
xor
cmp
sub
out
loopne
fldcw
push
mov
push
sub
jmp
xchg
cmpsl
and
add
mov
adc
addr16
push
adc
scas
stos
sarl
jno
mov
cmp
mov
adc
call
fbld
sbb
pop
aad
cld
jecxz
jecxz
aas
fdivrl
rcr
out
jb
hlt
scas
lock
adc
push
mov
jno
xlat
adc
fistps
insb
notb
rol
dec
and
sub
xor
dec
adc
mov
out
ror
mov
adc
jecxz
sub
out
repnz
mov
add
aas
setl
adc
inc
sbb
cmpsl
mov
inc
jecxz
out
jecxz
jmp
pushf
mov
dec
xchg
sbb
jl
fmuls
sbbb
pop
nop
mov
xchg
out
pusha
sahf
jecxz
xor
push
dec
mov
push
aaa
stos
jle
sub
add
subl
or
adc
dec
dec
ret
lahf
cmp
add
insb
xchg
adc
push
test
push
sbb
push
lcall
loopne
stc
add
jnp
rorl
dec
ja
leave
jne
in
xor
adc
ret
hlt
and
cs
xlat
cmp
movsb
jmp
push
inc
adc
mov
adc
daa
mov
push
xchg
fucom
push
xlat
xchg
adc
frstor
cmp
xor
loopne
in
rcl
push
loope
push
xchg
jne
mov
mov
icebp
add
dec
adc
mov
mov
jp
int3
dec
dec
xor
subl
cs
or
dec
adc
dec
and
andl
sarl
out
mov
pop
mov
xor
push
cmp
fistl
test
adc
mov
and
enter
aaa
inc
add
push
pop
dec
pusha
addr16
fwait
cli
aad
loop
daa
dec
jmp
ss
push
ja
sahf
push
dec
scas
in
cmp
mov
into
inc
mull
sbb
cmp
xor
loopw
pop
and
cmp
inc
lods
mull
push
lods
ja
dec
cmpsb
test
ret
fldenv
gs
pushf
jecxz
jne
scas
sbb
ret
out
out
mov
rorb
and
and
imul
test
shrb
mov
mov
insl
in
adc
push
mov
rorl
es
insb
jo
call
cmp
mov
inc
xchg
sub
adc
xor
inc
add
cmc
nop
divl
push
push
mov
imul
daa
pop
stos
adc
xor
scas
and
sub
sub
inc
add
xor
inc
mov
loope
push
sbb
jnp
lret
mov
enter
inc
mov
mov
shrl
and
jmp
orb
cwtl
lock
testb
adc
ja
ret
push
out
dec
lret
mov
bound
jne
fnstenv
in
dec
adcl
pop
pop
mov
test
pop
ret
adc
or
xchg
dec
mov
cmpsb
or
in
inc
aas
inc
inc
cmp
inc
sub
sbb
sbb
iret
ret
xorl
mov
mov
aam
lods
std
push
cmp
jmp
shlb
or
cs
cmpb
adc
pop
fcomi
cmp
or
outsl
mov
mov
repnz
cmp
in
xchg
jle
stos
or
sbb
flds
push
mov
imul
sub
fdivr
sti
int
decl
out
or
cmp
jae
pop
aad
shrb
or
cwtl
xor
mov
dec
in
xchg
shl
jecxz
fcmovu
adc
loopne
sahf
ret
jmp
dec
popa
and
jg
push
mov
mov
data16
inc
lods
lods
xor
sub
in
add
or
xchg
mov
testl
push
ds
inc
stos
fcmovb
mul
jecxz
push
cmp
jb
mov
out
out
in
inc
cmp
int3
push
lcall
mov
xor
pushf
xchg
adc
xchg
test
aam
adc
fbld
aaa
test
ror
sbb
arpl
xor
push
mov
and
xchg
fs
das
icebp
and
jo
orb
push
mov
dec
push
xlat
outsb
lcall
int3
pop
jo
lods
and
add
shlb
cmp
jnp
in
push
orl
leave
cmp
xor
lock
notb
xor
push
pop
xchg
add
aas
jl
jp
adc
in
push
fwait
push
sub
dec
icebp
cmp
mov
xor
loopne
into
mov
adc
shr
jmp
out
les
inc
sub
jmp
add
fldcw
dec
cmp
fidivl
arpl
add
xorl
jne
fldl
mov
fs
fs
dec
cmp
push
sub
repz
xchg
push
pop
xchg
push
test
dec
xchg
jg
xchg
xor
idiv
cltd
dec
outsl
or
cmpb
jnp
dec
inc
cld
push
into
fs
inc
inc
out
out
jbe
aam
cmp
fisttps
push
mov
es
mov
xchg
lods
aas
inc
mov
inc
popa
lcall
rcrb
lret
sahf
gs
jmp
call
scas
inc
xchg
imul
push
sub
push
test
lock
stos
inc
fmull
sub
lret
jno
scas
sar
push
adc
scas
cwtl
xchg
inc
adc
dec
xchg
stos
sub
les
insb
leave
jno
push
add
dec
lds
mov
je
fs
sbb
enter
pop
int3
in
xchg
xchg
adc
cmp
and
mov
push
xchg
sub
and
jmp
add
ljmp
fs
dec
inc
xor
and
push
jp
push
dec
inc
jo
cmp
pusha
clc
lds
or
and
push
mov
sub
and
mov
sbb
mov
push
cli
xchg
clc
stc
leave
push
xor
pop
inc
int
ret
cmp
adc
shlb
xchg
xor
mov
xchg
icebp
inc
or
daa
daa
dec
testl
push
movsb
sub
sbb
fdivl
jmp
dec
and
inc
call
or
je
and
movsl
xor
sbb
jbe
cmp
pop
out
xlat
push
xor
aad
pusha
int
xchg
aam
push
and
sahf
aam
push
jb
popa
pop
mov
add
sub
setns
xchg
lret
je
call
nop
mov
cmpsb
mov
movsl
mov
mov
call
adc
sub
in
ret
push
sub
mov
rolb
out
aas
lock
mov
xchg
mov
push
out
sub
idivb
shr
adc
add
sbb
push
jnp
adc
xchg
jne
fmull
fnstenv
jl
jecxz
or
xlat
test
movsb
adc
xor
add
or
insl
dec
imul
or
dec
add
pop
cmovs
pop
icebp
adc
stos
mov
jge
dec
mov
mov
pushf
outsl
shll
pusha
jecxz
pop
icebp
stos
shrl
lea
int3
mov
pop
inc
stos
fnstcw
sub
loopne
stos
dec
xchg
mov
push
pop
jae
je
sub
lret
in
cwtl
cmpl
mov
mov
xlat
in
gs
sub
inc
dec
movsl
ds
fcmovnbe
mov
or
pop
fs
sub
push
xchg
call
clc
and
enter
xchg
pop
mov
cmovb
xchg
sbb
mov
push
popa
dec
xor
cmc
iret
xor
xchg
pop
or
mov
mov
es
mov
out
add
aaa
mov
bnd
dec
pop
es
andl
mov
adc
cld
daa
imul
test
test
cmpsl
les
mov
mov
cmp
insl
add
pop
mov
adc
gs
sbb
dec
sbb
dec
push
jl
xor
mov
pop
jae
test
aaa
loope
daa
in
xor
lods
push
add
mov
inc
clc
enter
adc
and
jecxz
je
adc
data16
sbb
or
pop
scas
mov
or
and
dec
cmp
gs
out
sti
fwait
mov
loopne
dec
bound
scas
pop
sbb
fdivrp
pop
cmc
jp
ja
sub
fldcw
add
test
push
insb
pop
out
push
cs
mov
fwait
sbb
push
add
pusha
sbbb
cmp
loope
add
xor
mov
insb
popa
push
fsubrs
sub
out
mov
vpmuludq
icebp
in
pop
fsubl
sbb
lret
add
mov
xor
jle
cmp
rolb
cmpsb
out
arpl
or
push
mov
xchg
test
rolb
cmp
xchg
add
test
fs
shr
and
inc
pop
xlat
adc
push
push
arpl
inc
ljmp
cmp
lods
and
test
gs
popa
dec
mov
ret
xor
scas
and
adc
cmc
aaa
sarb
jae
popf
aad
and
add
andb
outsw
xchg
negb
push
mov
pop
scas
movl
clc
cmp
xchg
mov
and
add
pop
sbb
mov
or
xor
inc
dec
notl
in
cltd
lock
mov
ljmp
pop
or
mov
cltd
and
enter
imul
sti
push
push
mov
xchg
sbb
fistpl
mov
mov
mull
adc
pop
and
and
and
pop
push
mov
nop
aam
repnz
xor
test
pop
and
xchg
and
adc
mov
push
pop
imul
popf
movsb
popf
cmc
dec
xor
cmc
fildll
ret
rcll
sti
int
pop
aam
or
mov
pop
lds
clc
arpl
inc
push
pop
xor
and
or
int
sub
shlb
outsb
mov
or
push
pop
pop
fsubr
sbb
push
imul
addb
and
xor
jnp
decl
pop
outsb
push
add
shll
fldenv
sub
add
mov
out
add
in
xor
push
mov
stos
test
mov
cmp
inc
gs
pop
pop
popa
pop
xor
mov
loopne
iret
jbe
je
lea
stos
shll
mov
negl
repz
pop
push
sahf
jns
dec
xchg
inc
and
mov
lcall
pop
dec
add
sub
mov
and
fs
lret
push
js
pop
dec
iret
mov
icebp
mov
push
cmc
test
jl
mov
pop
adc
pop
pop
push
addr16
sub
movsl
xchg
mov
jp
and
sbb
in
test
dec
sbb
mov
add
popf
aam
and
adc
cmp
adc
add
sub
out
insl
sar
repz
sub
inc
push
mov
jecxz
loope
sub
or
xor
popa
mov
sbb
xor
dec
mov
lret
jno,pt
fwait
sub
pop
dec
sub
call
cli
jb
in
cmp
imul
repnz
pop
out
adc
inc
ffree
inc
loop
int3
push
pop
push
sysexit
int
cmp
scas
movups
xor
inc
lcall
or
and
ja
xor
xor
mov
xchg
mov
dec
xor
pop
xorl
sbb
and
imul
dec
shll
aad
stos
mov
mov
enter
sub
pusha
inc
cld
cmc
dec
mov
or
adc
and
loope
mov
mov
pop
repz
jp
xor
sub
rorl
scas
ja
lcall
and
jmp
or
es
ljmp
mov
test
inc
stos
out
cmp
addr16
mov
gs
ja
outsb
jno
test
pop
in
movsb
sahf
xchg
push
adc
push
mov
fnsave
mov
push
scas
fcompl
xchg
dec
inc
clc
decb
cmp
cmp
cmpsl
add
push
fmull
in
pop
cmp
rolb
sub
cmpsl
mov
dec
stc
xchg
cmpsl
mov
xchg
mov
xchg
or
int
sub
insb
movsl
jb
fwait
cld
mov
sbb
sbb
in
push
push
gs
push
mov
and
mov
and
push
lcall
cmp
sti
aam
arpl
jb
dec
mov
in
icebp
sbb
xor
mov
cli
arpl
push
push
add
and
pop
pop
int3
sub
cmp
sub
in
pop
and
inc
xchg
loope
xchg
mov
fildl
addr16
rorb
aam
ds
cmpsl
or
push
pop
scas
push
or
cwtl
mov
lock
mov
jp
insb
or
popa
sar
int3
aaa
jbe
or
fisubrl
hlt
push
sbb
fsubs
mov
sub
xchg
mov
xorb
insl
ds
es
es
sbb
fisttpl
clc
scas
stos
or
xchg
push
into
arpl
xor
stos
stos
adc
fistpl
imul
xor
mov
dec
sbb
push
sub
lcall
mov
mov
pop
xor
sbb
jne
lea
cltd
lcall
push
jne
and
adc
mov
add
pop
mov
inc
int3
lock
imul
scas
mov
pop
adc
or
pop
cs
aad
add
add
push
into
int3
inc
jo
loopne
sbb
mov
imul
mov
dec
pusha
arpl
loop
int3
cltd
mov
outsb
xchg
int
push
sbb
or
or
pop
mov
jae
aad
xlat
js
lds
or
pop
movsl
pushf
jle
add
inc
push
lods
lds
pop
pop
cmp
lgs
mov
cltd
mov
test
push
inc
les
out
sbb
add
add
inc
nop
jge
fldl
xchg
mov
neg
popa
roll
mov
and
fldcw
mov
push
dec
push
xchg
fs
repz
xorb
cmp
movsb
push
lods
sub
dec
xchg
mov
movsb
out
jl
jbe
xchg
mov
jmp
jno
sarb
add
pop
icebp
xchg
fidivrl
mov
dec
jno
pop
pop
icebp
jo
mov
mov
bound
adc
cmp
ret
and
and
jae
dec
add
sub
xor
push
je
sbb
push
inc
push
or
lcall
push
into
dec
xchg
icebp
scas
sub
orb
pop
aad
ljmp
pop
xor
add
imul
flds
icebp
jmp
dec
enter
add
cmp
push
xchg
daa
sub
mov
fstl
mov
jbe
push
xor
sub
jne
pop
enter
movb
push
xchg
test
add
call
test
repz
sti
bound
in
sbb
cmp
dec
movsl
fstl
push
in
aad
adc
int
cltd
adc
push
cwtl
xchg
xchg
call
idivl
nop
outsb
dec
test
pop
or
jecxz
mov
cli
arpl
sti
in
pop
nop
cmc
out
inc
mov
lods
xchg
iret
jl
pop
scas
mov
bound
hlt
test
mov
or
mov
mov
cmp
mov
or
fstpl
insl
lock
loope
iret
cmp
shrb
daa
pop
sahf
dec
std
out
lock
inc
cli
push
into
jl
adc
pop
or
scas
adc
push
js
dec
sbb
push
iret
add
sub
jp
mull
sti
les
jb
or
dec
insb
les
xchg
lods
les
mov
cmp
shl
les
dec
sti
jle
fs
add
mov
bound
mov
pop
cmpsl
lcall
xchg
fucomp
xchg
push
mov
hlt
adc
sub
test
cli
pushf
jo
sbb
mov
jbe
jg
add
lret
sub
add
adc
push
mov
xor
bound
sub
out
dec
ret
out
cmp
out
or
loope
pop
push
push
jne
fistpl
add
push
test
je
cmp
sti
inc
sub
push
ret
ljmp
push
sarl
pop
push
lcall
xor
call
mov
dec
push
inc
ds
and
loopne
mov
mov
or
mov
jmp
imul
sub
das
mov
inc
data16
add
lods
inc
aaa
push
mov
in
fs
and
ljmp
ss
arpl
mov
jns
xor
pop
pushf
movsl
cmp
sub
js
fcmovu
sub
fwait
adc
lret
ss
adc
adc
ret
mov
das
call
ficoms
push
jno
mov
outsl
inc
mov
inc
roll
out
insb
mov
add
rclb
daa
fisttps
je
mov
fildll
out
jae
sub
sub
push
mov
xorl
add
push
and
jg
pop
les
cmp
mov
dec
cld
in
sub
cltd
xchg
mov
fidivrl
cwtl
cld
ror
pop
cmp
sub
push
or
aad
mov
mov
ss
jmp
sbb
fldt
clc
and
rcll
sub
mov
cs
scas
pop
add
mov
cmpsb
cmp
adc
lds
xchg
mov
out
imul
les
fistpll
out
adc
nop
and
daa
mov
mov
add
stos
lds
jbe
lea
idiv
test
push
divb
push
js
mov
dec
jb
mov
jb
jp
sbb
inc
lahf
roll
imul
or
jle
mov
data16
xor
mov
jecxz
je
jecxz
cli
pop
fcmove
ret
jno
out
inc
stos
mov
lock
ror
push
add
jecxz
ja
fstpl
mov
cli
or
fs
mov
cli
jnp
jmp
xor
push
scas
outsb
inc
ret
cltd
inc
out
xchg
xchg
repnz
out
sub
inc
jmp
xchg
movups
imul
rcrl
je
push
rclb
mov
sahf
repz
sub
pop
aam
mov
pop
out
cld
ljmp
push
hlt
fsubl
or
sahf
test
cltd
clc
add
jl
mov
cmpsb
cmp
mov
pop
mov
cmp
jb
mov
pop
mov
ljmp
mov
sub
aad
dec
add
sub
lock
cwtl
fbstp
fisubrs
mov
sub
mov
in
fdivs
jno
and
xor
repnz
xchg
movsb
sbb
cmp
jne
popf
enter
mulb
outsb
lock
mov
sub
jp
mov
pop
mulb
mov
movsl
enter
test
in
je
lock
mov
ljmp
out
imul
xchg
outsb
mov
cli
push
sbb
and
sahf
outsl
cmp
cmp
push
mov
in
mov
mov
jno
fcomp
lret
icebp
adc
out
cmp
stos
mov
mov
lock
insl
out
xchg
and
fistpll
out
add
mov
loope
in
lods
adc
daa
and
daa
and
xor
out
lret
out
push
dec
test
dec
sbb
inc
ds
lret
or
in
jbe
enter
pop
cmp
dec
mov
xor
aas
js
les
dec
mov
fisttpll
hlt
xor
in
adc
insb
ds
and
push
pop
xchg
cmp
pop
pop
or
out
xor
ja
fwait
cs
dec
mov
sbb
lahf
loop
xchg
fcompl
scas
push
lods
xchg
fs
push
sbb
insl
add
std
rolb
aad
out
mulb
jno
lcall
ja
ja
push
push
mov
imull
lcall
data16
rcr
add
idivl
dec
and
mov
pop
leave
shll
sub
stos
fsubl
mov
adc
cmpsl
push
add
arpl
jns
insb
sub
push
jmp
xchg
jae
add
iret
and
or
inc
lcall
cmc
icebp
inc
fwait
sbb
cmpsl
jno
cmp
cmc
inc
shll
sti
into
xchg
adc
scas
mov
in
mov
xchg
jno
lahf
mov
push
rorl
lcall
addr16
push
pop
xchg
add
movsb
xchg
and
rol
jge
sbb
jb
or
dec
jo
mov
sti
stos
push
mov
inc
sub
dec
popa
jp
popl
jb
cmpsb
addl
mov
lahf
xchg
repnz
enter
out
push
iret
pusha
icebp
or
push
test
jae
ss
rcrl
sub
rcll
xor
mov
mov
lds
mov
push
int3
int3
add
inc
out
sbb
lea
popf
aas
inc
outsb
out
mov
xor
jns
xlat
cs
addr16
add
xlat
cltd
enter
es
xchg
push
dec
sbb
mov
mov
inc
xchg
sbb
mov
mov
roll
movsl
jns
mov
sub
mov
dec
fs
mov
test
jno
cmpsb
cwtl
and
lods
roll
jmp
mov
frstor
scas
jmp
mov
push
fisttpl
or
in
call
jo
mov
xchg
cmp
xor
xor
mov
mov
adc
sbb
inc
nop
out
dec
movsb
shll
cmpsb
les
cmc
jno
scas
and
xchg
or
pop
mov
pushf
add
addr16
aam
sbb
pop
sub
popf
aas
mov
jecxz
push
jl
dec
inc
paddsw
out
xor
xchg
imul
cmp
cmpsl
ret
add
ficompl
dec
jl
mov
icebp
in
jmp
cmp
aad
cmp
cs
mov
mov
in
cmp
lret
lcall
das
jb
jns
loope
jp
mov
push
mov
pop
xchg
call
jne
jnp
stc
jecxz
xor
sbb
add
push
sbb
mov
lcall
and
stos
push
in
dec
mov
push
mov
inc
cmpb
xchg
dec
stc
pop
inc
das
ret
stos
leave
xchg
cmpl
xchg
push
adc
push
pop
daa
xchg
out
ret
pop
cld
sub
aam
mov
cmp
fildl
xchg
mov
in
lret
jbe
loop
popa
ja
rorl
dec
jbe
test
insl
pop
and
das
pop
int3
or
dec
pop
mov
xchg
lret
aad
add
xchg
adc
das
lods
pop
cltd
adc
lock
cmp
aam
into
js
lcall
ficoml
push
iret
pop
or
mov
adc
mov
xor
test
adc
stos
mov
adc
push
or
mov
pushf
jp
loop
add
int
pop
idiv
subl
aaa
jg
dec
stos
mov
into
mov
xlat
clc
push
jp
mov
push
cmpsl
add
add
push
mov
movb
adc
dec
hlt
shrb
add
mov
push
pusha
cld
stos
nop
cltd
xchg
push
sub
sub
int3
pop
fnsave
or
jnp
icebp
lret
jg
inc
jno
popa
hlt
call
jmp
xchg
dec
and
out
lods
and
or
jl
out
xchg
popf
dec
xchg
inc
push
mov
push
cmp
lods
stos
mov
and
dec
add
mov
pop
cld
jno
cmpsl
or
jns
add
push
mov
aas
fisttpl
outsb
test
das
popf
jo
jnp
imull
push
iret
icebp
push
and
nop
adc
ljmp
fnsave
cmp
aad
mov
add
ret
cmpsl
mov
cwtl
xor
adc
dec
arpl
lret
emms
outsl
mov
bnd
into
jecxz
xor
popf
test
outsb
lahf
push
hlt
inc
push
bound
jns
insl
mov
mov
imul
sbb
fistpll
or
inc
and
sbb
add
xor
mov
pop
fwait
mov
mov
adc
in
inc
dec
jb
loope
outsl
push
jae
cmpsl
cmpsl
sub
push
cmp
test
sub
lods
test
dec
orb
cwtl
sbb
jnp
jno
cmp
leave
test
imul
call
out
scas
mov
repz
push
cmp
cmpsl
inc
xchg
xchg
loope
adc
pop
bound
cmp
shlb
xlat
push
mov
je
lcall
imul
xor
pop
or
adc
jg
shrb
dec
dec
mov
add
xor
insl
jns
inc
pop
addr16
adc
mov
adc
aaa
mov
cltd
imul
inc
and
stos
in
aad
jge
pop
gs
jg
add
xchg
and
insb
cli
in
daa
pop
add
xchg
adc
clc
xchg
pop
inc
out
mov
rcl
jmp
jne
push
sbb
add
fwait
scas
leave
xor
pop
fisubrs
pop
or
insl
outsl
movsl
jg
push
jne
scas
clc
fistpl
pop
xor
loop
std
cmp
fmull
dec
or
inc
pop
mov
mov
out
lea
lahf
mov
loope
xorl
pop
bt
add
test
xor
dec
push
jge
xor
pop
xor
xchg
lret
pop
popf
popa
sbb
and
mov
mov
pop
jecxz
daa
and
sub
shll
push
lret
imul
jmp
in
sub
lock
cmpl
shlb
aad
and
add
push
jno
inc
fstpt
and
cmpsb
fs
adc
ret
scas
sbb
lea
sub
or
cmc
ret
out
add
sbb
inc
lahf
fldcw
sbb
fcmovnbe
aas
dec
add
mov
int
clc
sbb
sbb
pop
cmp
xlat
xor
xlat
or
and
xchg
jl
mov
cmpsb
aaa
out
mov
sti
leave
lods
subb
adc
popa
mov
shl
sbb
xchg
fdivrl
sub
loope
xor
push
mov
push
int
cmp
aas
cwtl
lods
enter
jbe
or
adc
adc
xor
fs
das
leave
pop
cmp
sub
test
shl
cmc
rol
jns
push
call
lret
dec
mov
dec
in
dec
test
inc
in
shl
or
xor
pop
fwait
jge
xchg
and
mov
or
les
popa
stc
repnz
repnz
lock
mov
aaa
ja
mov
lcall
inc
sbb
int3
test
cwtl
repz
adc
addr16
es
dec
in
xor
lds
rcrb
jb
out
inc
imull
lcall
mov
insb
pop
sahf
inc
pop
loopne
dec
xor
popf
add
mov
mov
enter
jbe
daa
iret
ljmp
rclb
mov
fwait
or
cld
sbb
and
lcall
dec
std
divl
push
gs
lods
xor
push
enter
mov
jg
les
movsb
mov
or
mov
adc
cmp
fs
inc
mov
push
pop
jns
and
mul
sbb
jno
sub
jg
sub
and
mov
iret
test
inc
scas
enter
ret
ret
daa
xchg
pop
sbb
add
stos
call
lods
dec
mov
in
shrb
pusha
mov
mov
adc
cmc
sbb
dec
adc
loop
dec
adc
pop
push
jns
sbb
aad
repz
dec
mov
jns
xchg
fnstsw
fisttpll
cmp
sti
mov
mov
insb
xor
jp
outsb
mov
js
sbb
outsb
pop
xor
add
test
imul
mov
std
mov
test
icebp
mov
push
lret
lock
xchg
xor
dec
xchg
lahf
mov
pop
pusha
jl
push
pop
sahf
scas
pop
adc
sbb
push
es
shrb
jmp
rcrl
or
loop
mov
movsl
pop
mov
jae
jno
int3
sbb
jns
or
pop
shl
mov
cltd
push
fwait
jae
lds
punpckhwd
mov
cmp
addr16
inc
pushf
xchg
mov
mov
mov
pop
cmpsl
jmp
stos
js
stos
or
iret
nop
cmp
imul
xlat
adc
in
daa
fwait
sbb
rcll
adc
jmp
inc
pop
jmp
fs
movsl
inc
dec
sub
stos
inc
iret
push
leave
inc
fdivrp
mov
fstpt
std
cld
cwtl
icebp
pop
push
mov
movsb
sub
cli
jns
xchg
xor
lahf
lods
mov
cmp
or
out
xchg
fldt
insb
test
bsr
movsb
bound
and
mov
sti
sub
mov
test
popf
mov
xchg
mov
inc
mov
inc
pop
adc
push
or
mov
insb
fs
mov
jno
ljmp
mov
jno
jne
movsb
bound
into
or
movsb
lods
pusha
cmp
ljmp
pusha
sbb
jmp
sbb
movsl
ja
jb
push
add
add
fidivrs
dec
push
das
pop
insl
push
lahf
mov
dec
mov
and
push
stos
icebp
shrb
adcb
daa
and
dec
jne
inc
xchg
push
fidivl
ljmp
mov
fs
cli
dec
cld
fadds
lea
pop
inc
pop
mov
mov
movzbl
mov
mov
jne
inc
mov
ja
bnd
sbbb
loopne
cmp
movsl
lods
loop
fs
push
xchg
out
int
data16
dec
test
mov
sbbb
std
movsl
addb
mov
mov
xor
xchg
xchg
in
jnp
mov
sub
fidivs
sub
out
mov
xlat
sarl
and
xchg
int3
xor
lahf
sub
or
call
subb
xor
pop
xor
adc
lret
sbbb
orb
cwtl
loop
add
fsubr
imul
dec
cltd
insb
adc
mov
les
scas
mov
mov
loopne
cwtl
fidivs
jae
scas
jb
jae
mov
ja
xchg
lcall
or
mov
sub
cmp
jne
dec
and
loop
clc
cmpsb
testl
cmp
mov
pop
arpl
loope
push
push
sub
push
je
sbb
mov
inc
inc
inc
cmp
call
add
dec
push
mov
movsl
or
shrl
mov
out
push
and
dec
cwtl
jne
lret
mov
adc
repnz
mov
dec
pop
sahf
scas
inc
lahf
les
xchg
sub
cmp
ficomps
andl
add
or
mov
sbb
out
inc
or
or
jg
mov
mov
shll
xchg
pop
xor
xor
xchg
cmp
out
mov
stc
cmp
popa
jecxz
dec
xor
sub
mov
xchg
cmpsb
sti
pop
stos
cmp
test
or
gs
fldenv
or
or
or
xlat
cmp
jge
sub
xchg
popf
mov
or
dec
ds
mov
ret
sub
pop
xorb
xor
into
pop
lcall
arpl
or
sub
shll
and
add
mov
test
rol
pop
imul
and
xchg
xchg
sbb
sti
ja
sti
test
or
xchg
cmp
push
xor
gs
repz
dec
aam
shlb
pop
inc
xor
dec
imul
cld
sub
fstp
mov
bound
xchg
mov
xchg
add
outsl
mov
fsubs
jle
je
cmp
in
dec
jl
cltd
ja
sub
insl
push
xchg
mov
jae
insb
xchg
mov
std
and
jp
sbb
mov
adc
push
popf
adc
xchg
xchg
stc
mov
fmuls
punpckhdq
push
jb
push
push
pushf
push
negl
dec
jns
scas
mov
cmp
rolb
push
adc
fstp
jnp
sbb
dec
jmp
pop
jns
cs
stos
iret
addr16
fcompl
inc
push
push
lret
roll
or
inc
push
rcl
jb
frstor
cld
and
testb
mov
push
lea
jmp
lds
push
and
lock
ficomps
pop
mov
sub
dec
lret
mov
inc
aaa
mov
lret
repz
pop
cld
cmp
in
mov
xchg
addr16
cmc
into
xor
xchg
inc
pop
popa
scas
and
push
movsb
out
sub
mov
cwtl
in
add
dec
mov
test
aas
cs
shll
imul
loop
inc
lds
xchg
and
test
jo
xchg
jno
aaa
outsl
ret
mov
lds
sarb
sub
std
dec
lret
testb
adc
ret
notb
add
inc
jle
mov
mov
pushf
ss
iret
stos
in
jbe
test
xor
fadds
aaa
sbb
sahf
inc
pop
sbb
pop
sti
sbb
mov
pop
outsb
push
stos
inc
sub
cmp
test
adc
add
and
dec
mov
jg
ss
xchg
pop
xor
xor
imul
add
test
bound
and
xchg
arpl
pop
adc
repnz
rclb
in
gs
idivb
jno
add
xchg
jbe
fsubl
pusha
ss
pusha
dec
ds
call
rcrl
sub
aam
jne
cmp
lods
loope
ljmp
jge
dec
xchg
pusha
lods
push
cwtl
pushf
mov
popa
xor
dec
mov
in
call
adc
pop
jle
push
jne
pop
cmc
and
mov
xor
clc
mov
lahf
fsts
xor
cmp
fdiv
xor
dec
iret
xlat
outsl
popa
jmp
mov
xor
imul
lcall
mov
sahf
jns
cmp
push
ljmp
pop
rorb
jbe
scas
icebp
pop
mov
xchg
test
sub
aam
fcomps
setb
inc
and
xor
shr
mov
sbb
ja
mov
sub
ret
adc
pushf
imul
std
hlt
add
sahf
gs
imul
sbb
repnz
outsb
add
divl
or
daa
or
repz
cmp
adc
lret
jns
pushf
mov
inc
and
arpl
xor
arpl
mov
daa
aad
fstl
xchg
dec
lret
xor
jnp
sbb
jae
push
fildll
mov
sbb
and
iret
mov
sbb
movsb
ret
mov
mov
cli
sbb
mov
xchg
add
repz
inc
xor
push
pop
mov
push
aas
jge
mov
dec
rcr
pop
jl
inc
mov
cmpsb
lock
cs
cld
cmpsl
rolb
inc
mov
mov
mov
adc
sbb
jb
or
mov
mov
mov
insb
adc
fisttps
mov
mov
adc
pop
aas
xchg
lods
xchg
dec
cmp
pop
push
xchg
out
jmp
lods
cmc
jle
or
xor
in
jbe
sub
in
xor
mov
inc
xor
xor
popa
dec
es
cmp
fimull
pop
mov
adc
fcom
nop
iret
xor
sarb
in
imul
cmp
imul
jnp,pt
adc
xchg
sub
lahf
dec
mov
jo
das
sub
call
jmp
pop
and
mov
sbb
and
test
insb
xchg
pop
jbe
in
push
jge
xchg
xchg
xchg
xor
ds
pavgb
mov
fwait
into
dec
cld
add
pop
and
xchg
subb
int
sti
or
cmc
xlat
xor
pop
xlat
push
lcall
repz
out
lock
and
sub
test
mov
push
or
into
ljmp
jnp
add
fdivrl
mov
inc
jmp
imul
cmp
fsts
fsubrl
or
testb
pop
mov
inc
inc
insl
mov
jmp
push
divl
or
imul
pushf
pusha
rcrl
mov
push
call
push
pop
or
sti
stos
lock
std
push
jp
pop
cmp
xchg
sti
in
fisubl
dec
stos
test
loopne
xor
mov
xchg
in
jp
aam
xchg
add
mov
stos
imul
and
xchg
push
mov
cltd
xor
pop
sub
mov
imull
sub
sbb
test
jno
jmp
lods
popa
jmp
out
incb
repz
lcall
mov
arpl
cmp
xchg
sbb
cmp
dec
cld
in
mov
aad
out
or
dec
dec
mov
xchg
gs
lea
cli
inc
pop
popl
paddd
std
shl
repz
mov
notb
aam
sbb
loope
ja
or
imul
push
daa
or
ds
sbb
or
dec
push
jmp
dec
cld
sub
sahf
mov
inc
adc
sbb
aas
dec
xor
repnz
ljmp
stos
xorl
mov
rep
sbb
les
sub
and
int3
xor
lods
mov
aad
mov
jecxz
jl
mov
cmp
hlt
movsb
or
es
jp
in
scas
add
mov
mov
int
stos
ds
adc
decb
mov
cld
cld
xchg
add
ret
mov
lret
cmpsl
mull
dec
cld
push
and
mov
out
in
mov
ja
push
shr
lahf
sti
in
lods
adc
xor
je
mov
xor
ret
xor
outsl
jae
jae
imul
int
leave
xchg
std
into
test
std
stos
movsb
sub
jbe
repz
leave
fdivrp
data16
xchg
or
mov
lcall
sbb
inc
aad
xchg
jmp
ljmp
push
test
and
fsubr
or
inc
packssdw
filds
pop
jp
cltd
adc
daa
lret
stos
aad
xor
xchg
xchg
jae
pop
dec
cld
pop
adc
mov
pop
add
xor
pop
call
bound
test
mov
pop
or
cmc
pop
add
cltd
push
jmp
mov
and
sbb
cmp
dec
and
push
xlat
xor
pop
xchg
rorl
xlat
and
mov
lds
adc
dec
nop
imul
sbb
jne
outsb
clc
xchg
jmp
fcompl
adc
repz
jo
test
adc
xor
int3
inc
push
push
insl
pop
xchg
pop
inc
push
xchg
jecxz,pn
mov
dec
xor
dec
dec
jbe
xchg
rclb
push
outsl
fdiv
insl
arpl
shll
cmpb
or
mov
adc
lock
lahf
add
fisubl
pop
roll
pushf
cmc
in
jg
loop
pop
push
mov
cmp
stc
insb
dec
test
mov
into
xchg
lret
lahf
push
mov
into
inc
jmp
add
pop
aaa
and
xchg
xchg
inc
filds
or
addr16
ds
push
mov
mov
daa
sbb
push
pop
mov
insl
fwait
icebp
sub
aam
rcl
ja
add
shll
xchg
popf
stos
ja
fwait
mov
mov
ret
pop
jne
sub
inc
js
push
push
push
xchg
mov
inc
xor
mov
xor
ljmp
xchg
imul
push
gs
cmp
pop
imul
repz
int
or
lahf
data16
pop
inc
int
or
pop
mov
aad
ret
dec
add
dec
push
cmp
mov
lret
jns
push
add
enter
push
or
les
pop
or
mov
out
cli
add
xchg
mov
in
sbb
ljmp
cmc
dec
mov
xor
testb
or
jbe
push
flds
sbb
fldcw
into
sub
repz
scas
pop
loopne
imul
adc
sbb
imull
lods
in
loope
fs
rcrl
jne
ja
xor
xor
jo
hlt
cmp
mov
int3
sub
push
stos
ret
mov
mov
loop
or
les
and
lds
inc
orps
inc
add
inc
xlat
jg
dec
xchg
sbb
jb
mov
cltd
cld
cmc
push
jnp
in
pop
jg
inc
xchg
into
inc
cmp
in
mov
jl
and
sub
dec
mov
cmpsb
jle
mov
pop
and
scas
push
mov
add
sbb
mov
push
leave
or
out
ja
jo
nop
jmp
cmp
shll
aam
sub
sub
lods
cmp
loop
ret
es
jp
cmp
dec
cs
cwtl
je
pop
jnp
cltd
aas
sbb
lret
jecxz
push
mov
cld
sub
mov
cmp
cld
cwtl
std
cltd
popa
gs
adc
lret
outsl
pop
sub
and
in
loopne
xor
pusha
push
loopne
stos
and
cmp
xor
xchg
in
adc
iret
aad
fdivs
mov
cmp
or
xor
xchg
cmp
stc
cmpb
push
mov
inc
jb
dec
mov
lcall
xlat
mov
inc
rorb
or
mov
push
pusha
pusha
jle
push
addr16
inc
mov
mov
xor
enter
divl
jmp
push
insb
subl
pop
or
jge
sub
xchg
stos
jb
jg
push
adc
and
xor
sbb
lea
or
inc
mov
xchg
es
pop
adc
adc
nop
pop
inc
je
inc
ds
mov
mov
cmp
lods
cmp
das
cltd
push
jno
lahf
maxps
jae
inc
sbb
int
into
sbb
sub
cmc
pop
push
hlt
sbb
mov
sub
adc
fs
popf
and
jl
and
mov
out
xchg
jb
mov
jecxz
call
inc
xor
adc
rcrb
lock
inc
push
jle
fucom
mov
adc
lods
add
repz
sub
add
push
ja
popf
loopne
inc
dec
mov
ret
push
mov
jle
in
cmp
scas
ljmp
icebp
mov
pop
mov
xor
jge
dec
loope
jno
movsl
add
push
mov
jne
lods
jge
into
ds
mov
filds
imul
cmp
xchg
adc
jo
mov
fistpll
jno,pt
mov
mov
imul
call
addr16
sbb
negl
pop
pushf
adc
test
cmp
gs
or
push
sbb
rcr
or
cmp
jae
add
je
jae
dec
sub
adc
xchg
xchg
push
ret
repnz
shl
daa
xchg
cmp
dec
jno
movsl
outsb
pop
insl
push
xchg
pop
fstl
inc
in
push
sub
aas
lret
mov
fnstcw
mov
int3
scas
orl
in
jge
vmovlps
dec
fcomps
repnz
mov
push
jmp
insl
push
insb
pop
inc
mov
aam
in
or
jp
mov
cmpsb
inc
mov
jmp
mov
push
cli
aas
imul
cld
inc
movsb
mov
dec
xchg
sub
stc
lahf
jnp
push
test
lret
movsb
hlt
lcall
lea
inc
xor
mov
jmp
cmpb
jo
ljmp
lahf
xchg
add
jecxz
aam
mov
nop
sbb
mulb
xchg
clc
sub
inc
sbb
cld
in
adc
pop
sub
pop
cmpl
pop
cmp
int
test
sub
and
cmpsl
mov
test
xor
fists
enter
movsb
std
pushf
dec
sub
jne
fs
add
aas
sbb
jnp
shrl
lock
mov
push
inc
rclb
add
movsl
pop
into
push
loop
pop
and
dec
xchg
daa
rorb
or
and
iret
fucomi
sahf
leave
ljmp
rclb
jo
xchg
adc
popa
sub
les
outsl
loop
cmpsb
cmp
shl
sbb
jno
sub
stos
mov
jbe
inc
jge
in
xor
insl
rorb
mov
jmp
nop
jle
aas
cwtl
lods
cmp
js
jae
cmp
loope
push
in
adc
push
push
inc
ss
mov
scas
mov
jo
mov
mov
mov
int3
push
dec
loopne
mov
jmp
cld
dec
add
mov
stc
loope
jae
and
push
mov
ret
scas
xor
push
cmp
testl
pop
or
orl
mov
cwtl
mov
jecxz
sub
sub
aas
out
sbb
lods
mov
mov
ret
iret
leave
xchg
mov
lahf
mov
sbb
and
scas
and
jl
lock
cwtl
arpl
inc
fisubl
idivb
xchg
outsb
add
xor
pusha
cs
mov
clc
xchg
mov
cld
orl
sub
or
and
lock
clc
das
fs
push
out
fs
idivb
sub
idivl
xchg
jno
xchg
movsb
xor
pop
jle
mov
or
ss
sub
pop
test
xchg
not
xlat
ret
push
int3
sahf
imul
pushf
xchg
idivb
fcmove
scas
mov
adc
pop
stos
mov
mov
aaa
add
push
dec
xlat
cli
jnp
inc
xor
pop
jg
repz
dec
mov
fdivr
pop
sbb
push
mov
jg
jp
inc
inc
test
fdivr
add
daa
mov
or
dec
mov
jl
inc
cltd
xor
pushf
jl
out
test
out
out
cmc
pop
jmp
sbb
les
dec
mov
inc
mov
imul
outsl
popa
and
push
shlb
test
add
arpl
mov
mov
test
xchg
jno
dec
and
inc
or
lahf
loope
pop
pushf
inc
or
jg
iret
and
add
mov
sub
fnstcw
icebp
inc
addr16
xchg
pop
js
sub
aas
add
xor
dec
and
in
dec
and
mov
push
rcll
cltd
cld
repz
mov
mov
cltd
jae
fdivrs
push
push
jae
sub
pop
add
jmp
test
dec
sbb
or
mov
test
dec
in
repz
sbb
adc
and
sbb
add
lds
mov
fs
mov
imul
cmpsl
popa
lock
push
mov
scas
pop
mov
add
pop
in
add
dec
and
sub
dec
mov
jecxz
xchg
mov
mov
dec
fists
jecxz
mov
push
jo
inc
xor
jg
pop
mov
dec
stos
fwait
fwait
pop
subb
ficompl
scas
in
into
lret
stos
leave
clc
movsl
stos
adc
fidivrs
sti
mov
cmp
mov
jp
jle
cmp
inc
and
fistl
or
push
lret
stos
push
pop
in
xor
fwait
pop
cmp
popf
cs
rcrl
cmpsl
fnstcw
psubsw
pop
nop
jb
mov
add
sbbb
push
jmp
aam
fs
inc
and
aas
push
movsb
pop
out
fldl
fwait
andb
push
pushf
dec
std
icebp
loopne
jle
js
das
jb
or
lret
out
rcrb
stos
fistl
dec
lahf
cmp
sbb
imul
add
push
push
ljmp
outsl
mov
mov
das
inc
mov
stos
sbb
scas
fs
out
loopne
inc
push
dec
roll
dec
adc
add
or
mov
nop
lea
out
lret
sub
sub
dec
mov
dec
pop
das
fldl
test
rclb
jmp
cmpl
cmp
mov
jbe
int
pop
test
sahf
sarl
dec
bound
and
jle
repnz
sub
pusha
popa
or
cmp
addb
les
stc
rorl
jle
aaa
mov
xor
mov
sub
ljmp
xchg
test
dec
movl
mov
xchg
sub
bnd
aas
lds
push
dec
or
ficoml
movsl
and
jl
subl
bound
sub
insb
mov
cmp
movsl
mov
ds
inc
leave
lea
jo
or
cmp
fwait
mov
stc
sbb
cli
push
push
push
sti
imul
pop
xchg
movsb
fbld
adc
shr
mov
push
shll
push
mov
pop
and
ljmp
xchg
das
cwtl
jge
ja
dec
inc
sbb
sbbl
pop
push
cmc
sub
xor
dec
xorl
lcallw
ja
into
aas
dec
rcr
movsl
push
popa
mov
sahf
out
push
je
faddl
xorb
inc
jp
inc
xchg
mov
add
fsub
in
loope
cmp
pop
ds
andl
mov
jg
adc
rol
dec
fnstcw
es
cmp
cmp
int3
notl
mov
inc
jl
inc
push
clc
add
mov
pop
adcl
pop
imull
push
and
pop
and
push
adcl
dec
cld
scas
sub
inc
mov
lcall
fnsave
pop
cmpsl
or
push
cmp
push
and
in
inc
push
sub
mov
out
adcl
stos
add
enter
in
int
cmp
subb
cmpsl
clc
out
push
pop
jb
adcb
jmp
nop
adc
lods
mov
out
loopne
xchg
lahf
jno
cli
dec
aad
cmp
cli
push
fdivl
icebp
into
push
xlat
nop
popf
xchg
dec
emms
xchg
popf
xchg
imul
push
jns
sbb
shrl
adc
popf
cmp
lea
inc
mov
fiadds
add
cmp
notb
adcb
cmp
repz
sbb
in
jg
mov
mov
dec
shll
xchg
push
add
and
or
out
roll
in
bound
stc
mov
jg
pop
sbb
and
in
loop
aas
jns
xchg
in
jg
cmpsl
fs
xchg
fwait
addr16
scas
fs
xor
push
outsb
xchg
andl
sub
dec
inc
arpl
sete
add
sti
jle
lcall
mov
pop
inc
rorb
xchg
ss
pushf
int3
lods
add
jl
mov
addl
mov
cmp
orl
mov
cld
inc
xor
jge
jnp
aad
jb
pop
pop
popf
cwtl
push
mov
sbb
xor
adc
cmp
mov
pop
out
jb
ficomps
iret
mov
push
mov
pop
mov
jb
lret
xor
lret
pop
ljmp
and
and
jbe
push
mov
ja
hlt
inc
jle
jmp
movb
or
adc
push
push
mov
mov
xchg
jl
dec
pop
or
pop
aas
inc
mov
test
cmp
movsl
adc
divl
pop
push
fistpll
add
add
adc
adc
inc
loop
xchg
cmp
push
insl
cltd
in
lods
movsb
push
push
jecxz
cmp
inc
pop
mov
inc
xor
xor
cmp
push
aaa
and
mov
aaa
mov
shrd
pushf
and
test
roll
and
pop
inc
inc
shrb
jne
sbb
push
arpl
adc
and
jecxz
fstpt
fcmovne
das
or
inc
pop
fisubl
pop
test
aaa
js
xlat
cld
test
ja
inc
mov
jo
push
mov
xor
push
and
push
sub
ds
xchg
jb
iret
pop
pop
repz
push
sub
rcr
inc
cmp
mov
xor
add
mov
jns
lahf
fcomps
xchg
and
mov
popa
shll
ljmp
mov
cmp
mov
movsl
or
xorl
imul
mov
and
jbe
loope
cmpsl
xchg
jno
mov
lret
push
inc
pusha
fdivrs
mov
inc
jl
xor
stos
test
xor
mov
inc
jmp
in
dec
ja
fdivr
in
and
push
pushf
mov
fistps
mov
push
arpl
fisttps
xchg
les
out
aaa
into
push
iret
pop
inc
fstpt
addr16
dec
jmp
outsl
into
sub
insb
jae
push
std
into
nop
enter
sbb
and
fistpl
fcoml
mov
cmpb
fidivrs
sbb
mov
push
mov
mov
sub
xorl
pop
in
sarl
jecxz
cmp
jl
jp,pn
xor
add
pop
fdivs
out
push
cmpsb
ret
cmc
inc
jmp
lret
mov
js
fwait
cmp
xor
aad
test
scas
imul
or
out
stc
sub
imul
out
arpl
add
mov
into
bnd
repz
out
pop
add
push
pop
iret
inc
mov
mov
cmp
std
mov
and
push
ljmp
jp
addr16
or
inc
iret
pop
icebp
sub
lret
gs
add
incl
popa
push
into
sub
fidivrs
decl
lcall
mov
add
inc
or
lcall
in
cs
lds
jb
jns
or
mov
push
sbb
sbb
xchg
test
jno
sub
jmp
mov
out
mov
lret
or
pusha
in
mov
shl
mov
fcomip
xchg
dec
push
mov
xchg
test
in
aad
adc
es
int3
push
xchg
addr16
scas
xor
push
mov
pop
jnp
mov
cmp
daa
dec
or
sub
sbb
sbb
mov
pop
in
push
add
mov
lcall
mov
mov
adc
mov
mov
movsl
test
cld
in
ljmp
test
sbb
ljmp
inc
rcll
les
jle
pop
in
sub
mov
mov
or
cli
adc
idivb
mov
shl
out
cld
xor
jo
xchg
mov
xchg
cmp
and
and
rol
jae
adcl
push
push
unpckhps
lds
cmp
pop
stc
roll
clc
mov
sbb
push
int3
adc
or
pushf
pop
pop
rorb
das
xchg
fistpl
mov
mov
mov
test
stos
mov
mov
out
lcall
push
push
fisttps
add
jbe
add
inc
fcomip
adc
xchg
xlat
mov
pop
xchg
jns
sbb
add
lods
sub
mov
loopne
mov
sub
sbb
shrl
and
xchg
mov
jb
cmp
or
mov
adc
test
out
clc
jne
aam
out
fsub
sub
pushf
pop
jl
lock
push
pop
shll
inc
xchg
jmp
push
arpl
movsb
mov
xchg
popf
subb
insb
push
fisubrl
push
jnp
push
in
out
fnsave
push
lahf
jne
cmp
movsb
sub
mov
xchg
fdivl
lahf
mov
js
pop
push
lock
shll
fcmovne
add
xchg
cmpsl
mov
fistpl
bound
lret
add
pop
das
mov
aam
and
adcb
ja
cmp
add
dec
and
jg
fidivs
mov
ja
aam
fcoms
and
mov
pop
jle
sub
dec
mov
in
ja
mov
mov
dec
mov
or
push
push
leave
sub
pop
cmpl
neg
and
cmc
add
push
adc
or
push
dec
in
imul
sbb
inc
adc
fsubs
inc
pop
mov
pop
nop
repz
mov
out
test
sbb
es
cmp
cmpsl
fsubp
movsb
repnz
imul
lret
test
push
adc
lcall
in
lds
cmpb
inc
add
add
arpl
stc
mov
fiadds
dec
jg
inc
pop
xchg
shrl
mov
lret
push
std
xchg
fwait
adc
or
pop
push
pop
push
shrl
push
jg
insb
mov
outsl
fdivp
and
out
sbb
fistpl
pop
in
xchg
and
clc
xchg
addr16
bound
adc
fists
in
jb
sbb
lret
push
test
mov
or
pusha
daa
fsincos
fidivrs
pop
sbb
repz
das
mov
lods
push
mov
rol
mov
and
inc
fimuls
fildll
mov
add
inc
adc
lcall
jno
mov
fs
mov
fildll
or
shl
lea
push
push
fildll
incl
mov
xchg
ss
mov
sub
lea
mov
adc
pusha
push
test
sub
cmpsl
xor
out
aad
rorl
inc
sub
and
jb
js
mov
jnp
push
fisttpll
or
inc
movsl
push
arpl
sbb
push
adc
inc
sub
cmp
sahf
cmp
mov
clc
xchg
add
gs
inc
xor
push
xchg
and
mov
mov
sub
fmul
jb
xorl
ss
pop
sbb
inc
sahf
xchg
sar
adc
gs
pop
adc
xchg
rolb
lahf
sub
push
jae
and
movsw
push
insb
scas
ja
in
stos
push
or
mov
jne
movsl
fwait
xor
cmp
mov
jnp
jb
push
fdivrl
into
mov
sub
inc
jo
push
sbb
mov
ss
in
repz
inc
mov
adc
scas
and
repz
sub
aaa
shrb
sub
mull
call
daa
add
nop
jge
and
std
inc
test
sub
icebp
add
jo
lods
cmp
sar
lret
mov
shll
pop
or
jbe
push
add
or
adc
adc
jb
in
idivb
inc
fildl
scas
pop
xor
mov
in
sbb
pop
frstor
cmp
ret
mov
cli
xlat
das
sahf
mov
cltd
stos
mov
jmp
inc
dec
adc
pop
xchg
or
loope
stos
dec
adc
jge
rep
sahf
scas
outsl
bswap
mov
cmp
xor
pop
scas
xor
hlt
rorb
addl
sbb
xor
repnz
fistps
or
mov
cs
inc
jb
and
hlt
rcrl
push
movsl
inc
sti
das
or
pop
cmpsb
clc
popf
aad
push
mov
inc
dec
pop
dec
adc
sbbl
test
and
out
push
cmp
add
bound
mov
orb
sti
push
pop
sbb
mov
or
outsb
jns
mov
aaa
inc
dec
arpl
mov
mov
test
xlat
sub
sbb
aas
mov
xor
mov
xor
xchg
pushf
pop
jo
leave
sbb
test
lea
imul
inc
pop
inc
js
mov
daa
xor
inc
sub
js
mov
sub
push
sub
xchg
dec
ss
cltd
and
push
hlt
dec
mov
push
sbb
fildl
cmp
dec
xchg
push
lcall
ret
or
add
jecxz
mov
je
leave
fisttps
mov
aad
lahf
jno
aas
dec
sbb
mov
xlat
aas
push
fs
in
xor
cmp
pop
rcll
push
ja
sahf
mov
scas
push
mov
fwait
pushf
xor
xor
cmpsl
jne
in
pushf
dec
or
scas
xchg
in
fmull
push
popa
lea
arpl
das
xor
cmp
rol
repnz
jne
mov
pop
add
cmp
pop
jge
clc
sqrtps
or
addr16
test
mov
cmp
arpl
pusha
hlt
jmp
push
icebp
adc
and
pop
push
into
add
inc
lods
jno
andb
or
xchg
std
mov
test
add
sbb
and
popf
mov
sbb
insb
test
sbb
sbb
cmp
ljmp
jmp
add
add
and
cmp
mov
sub
cmpsl
lahf
daa
and
sbb
mov
movsl
fldl
bound
or
data16
sbb
adc
je
ror
loop
adc
xchg
repz
or
xlat
jae
ja
out
pop
inc
movsl
out
fimuls
mov
insb
cmp
fstpl
xchg
push
sub
popa
stos
ret
sbb
mov
cmp
ficoms
cwtl
or
jbe
cmovbe
mov
push
push
out
ret
insb
mov
cld
stos
pop
fdivrs
mov
inc
push
and
or
fisubl
lret
inc
mov
push
sbb
shlb
jno
ret
int
push
mov
push
cmp
sti
push
pop
outsb
and
push
push
cmp
push
adc
stos
dec
cmpsb
mov
js
int3
mov
push
sub
clc
jbe
cmp
mov
cld
sub
jnp
and
mov
mov
inc
cmp
cmp
adc
cmp
push
das
lahf
jbe
clc
addr16
jmp
pusha
popf
jbe
adc
push
mov
sti
cli
inc
cmp
repnz
int3
add
pop
pop
adc
loop
pusha
inc
cld
cmp
mov
mov
int3
repnz
cwtl
lea
jae
sbb
andb
xchg
sbb
arpl
xchg
rcr
iret
fcomi
iret
lahf
repnz
adc
push
xchg
xlat
filds
out
pop
jmp
loopne
sbbb
insb
mov
xchg
clc
adc
ror
daa
call
iret
scas
dec
cmpsb
ret
data16
ss
inc
aaa
push
fldl
inc
xchg
test
cld
leave
lcall
loop
fidivrl
es
sub
inc
push
insb
btr
push
push
push
shl
lahf
inc
sbb
dec
push
pushf
mov
sti
lock
mov
bound
lds
adc
fstps
js
lcall
mov
adc
jae
jmp
mov
sarb
movsb
scas
out
mov
loop
inc
push
ds
pop
sub
out
or
mov
pushf
push
cmp
mov
ds
test
push
pop
push
xor
je
push
popfw
adc
jbe
cmp
arpl
loopne
pop
sub
out
mov
dec
inc
imul
pop
mov
push
pop
inc
pop
cltd
pop
push
mov
aaa
sub
dec
xchg
jecxz
lret
popa
push
push
in
enter
out
add
push
mov
mov
movsl
outsl
sub
int3
enter
cmp
out
mov
mov
loop
leave
or
add
mov
pop
add
andl
bound
dec
pop
pop
leave
rorl
cwtl
sbb
incb
repnz
arpl
pop
cmc
jns
mov
cs
inc
mov
cld
outsl
fadd
fsin
pop
push
out
mov
sbb
in
push
out
push
jge
cmp
sbb
rorb
imul
xchg
rcll
scas
push
mov
jl
sub
mov
insl
pop
jae
fwait
insl
lods
dec
repz
xor
push
out
mov
cmp
cwtl
push
shlb
jl
pop
loop
sbb
stc
cmp
fisttpl
mov
mov
js
aam
outsl
adc
pop
ret
lahf
push
lock
dec
out
xor
icebp
and
js
push
outsl
pop
xchg
mov
mov
push
cwtl
add
pop
dec
xchg
rclb
clc
mov
fdivp
jp
jp
mov
xchg
dec
mov
jne
insl
adc
inc
pusha
mov
cmp
ljmp
adc
in
std
xor
stos
mov
int
adc
mov
imulb
orl
inc
mov
jnp
xchg
jns
out
xchg
push
or
mov
test
ficoml
dec
pop
pusha
jns
xor
mov
leave
and
xchg
out
inc
push
adc
inc
jns
jge
gs
cmp
cmc
das
mov
je
shrb
arpl
out
pusha
add
jecxz
adc
movsl
cmp
add
insl
movsl
adc
adc
and
add
imul
push
sbb
out
rcll
and
mov
dec
mov
packuswb
mov
arpl
cmpsl
in
adc
mul
hlt
sub
data16
in
scas
mov
repz
sub
sub
loop
sbb
lods
in
cltd
icebp
adc
loop
add
push
jecxz
cmpsl
aas
ljmp
dec
testb
lods
xor
stc
dec
stos
xlat
pushf
jmp
adc
stc
and
push
adc
popa
adc
mov
push
xchg
mov
cmp
aaa
xchg
icebp
dec
pusha
repnz
stos
out
pushf
icebp
das
inc
xor
add
cli
imul
push
push
in
mov
or
hlt
xchg
and
mov
outsb
fwait
sahf
fildll
test
aam
dec
push
mov
jg
mov
xor
int
mov
pusha
and
leave
push
lret
out
lods
fdivl
push
mov
mov
insl
mov
and
mov
dec
mov
fsqrt
fnstcw
outsl
pop
xor
outsl
and
push
add
mov
adc
or
push
cli
jg
out
je
mov
ljmp
dec
xlat
faddl
iret
xchg
xchg
and
ret
fstpt
ret
pop
cmp
xchg
xor
je
fldcw
dec
in
pop
inc
or
insb
push
lods
ja
ds
xchg
inc
leave
outsl
popf
stos
cmp
sbb
fs
sbb
shrb
jle
cmpsb
push
mov
outsl
in
pusha
mov
loope
rorl
pop
dec
jb
add
orl
call
mov
cs
or
je
adc
test
push
or
rorl
xor
sub
and
hlt
inc
mov
xchg
push
jnp
je
and
insl
xor
pop
dec
adc
xlat
pop
lods
mov
xchg
push
andl
ficoml
aam
sub
cs
jne
add
lock
and
addl
loope
iret
imul
call
push
idivl
pop
xor
or
mov
testl
add
test
repnz
rep
nop
aad
or
push
in
mov
fdivp
mov
test
cld
xor
rorl
jmp
lock
dec
std
out
lahf
in
pop
lret
adc
cmpsb
jmp
push
mul
push
iret
dec
pop
xchg
jns
xlat
push
rorl
push
adc
icebp
call
add
mov
je
clc
test
shll
jb
and
xchg
cmp
mov
iret
lret
pop
pop
cmpsl
shrb
stos
sarb
xor
int3
out
inc
sub
sub
xor
cmp
pop
ja
jo
lock
sbb
mov
fs
iret
xor
and
sbb
add
aas
shll
lds
mov
pushf
inc
add
mov
inc
push
stos
dec
jg
inc
cli
popf
sbb
add
jb,pt
mov
jb
xor
ds
sub
ds
in
push
cld
lret
mov
out
repnz
adc
movsl
xor
jnp
sbb
or
pushf
shll
outsb
mov
cmpsl
pop
jle
and
add
xor
dec
stos
jbe
ret
pop
lret
pop
and
push
in
icebp
into
or
cmp
imul
and
sub
jl
imul
movsb
push
enter
push
add
jo
popf
fldenv
rcl
scas
outsb
fldcw
sbb
mov
xchg
inc
sub
cmp
call
nop
xchg
cwtl
xor
fwait
adc
loopne
ss
mov
xlat
jle
jle
mov
jae
in
or
hlt
mov
and
fistps
notl
sbb
repnz
imul
loope
cwtl
xchg
sti
daa
loope
call
mov
or
xor
jecxz
lock
jmp
dec
mov
sti
sub
sbb
mov
adc
xchg
insb
aaa
loope
mov
ret
ret
dec
lret
into
fidivrl
das
or
dec
jo
xchg
pusha
pop
jb
aad
dec
xor
jns
das
jnp
ret
sub
or
lret
mov
mov
jmp
aam
dec
mov
mov
lret
add
pop
into
addr16
rclb
push
cmp
cld
mov
add
mov
out
stos
popa
inc
sti
cmp
mov
dec
push
pop
out
push
add
push
iret
clc
dec
and
addr16
push
push
cmpsl
mov
xor
ja
pop
ficoms
or
mov
xchg
xchg
sbb
aaa
repnz
or
sar
inc
setge
aas
pop
xorl
cmp
add
jmp
sbb
cmpsb
ret
xchg
sub
popf
push
mov
mov
and
sub
ret
fcoml
cmp
ret
out
or
pushf
outsl
push
mov
insl
sub
pushf
pop
mov
mov
push
add
mov
shll
lods
mov
sub
aaa
pop
dec
inc
andl
pop
jg
inc
lds
pop
cltd
mov
add
fisubs
lret
enter
das
scas
addr16
cltd
jae
dec
std
sarl
mov
cmc
shll
pop
dec
aam
and
hlt
movsl
xlat
cmp
push
lcall
aad
xchg
rol
xor
addr16
stc
cmp
cmpb
lods
add
imul
pop
fadds
mov
repz
sub
lea
fwait
mov
xchg
int3
fdivs
and
pop
and
in
xor
sbb
shll
cs
xchg
mov
int3
dec
jl
jns
xor
loope
rcll
and
cmp
pop
mov
stc
xor
das
int3
std
add
mov
adc
gs
fsts
jmp
mov
stc
outsl
adc
mov
and
or
pop
jge
inc
es
fcomip
out
mov
pop
jo
jns
test
ja
xor
mov
icebp
push
mov
add
and
push
inc
mov
fwait
repnz
test
cmp
sub
aam
or
sbb
or
lret
aas
pop
fdivrs
in
mov
gs
lahf
mov
insl
jo
out
repnz
pop
jg
mov
mov
pop
xchg
cs
mov
cmp
sub
jne
sbb
daa
sbb
ss
sub
dec
fcomps
push
pop
jge
popa
mov
sti
in
inc
mov
js
jg,pn
pmulhuw
repz
mov
or
push
iret
jmp
lcall
mov
fstps
adc
and
aam
and
subb
sbb
and
fdivrs
and
cmpsl
sub
test
xor
test
dec
push
adc
scas
test
mov
addr16
out
push
cmp
sarb
add
sbb
repnz
or
dec
xlat
jns
adc
inc
pop
pop
inc
stos
lret
es
jo
test
push
or
cmpsl
inc
mov
or
push
and
lcall
je
fst
pop
push
fsts
inc
testl
nop
jg
adc
add
inc
sub
ror
insl
into
pop
adc
add
ret
sub
sub
aam
pop
cmp
outsb
das
add
cwtl
in
mov
imul
sysexit
push
fnstsw
fdivrs
lret
mov
sbb
std
ror
je
mulps
movsl
test
xor
aam
pop
aas
push
gs
jbe
daa
pushf
inc
dec
xor
mov
adc
jp
inc
jp
push
fadds
scas
sbb
inc
loope
fbstp
mov
dec
push
and
inc
sub
stos
sbb
addr16
and
mov
xchg
jns
sbb
sarb
xor
dec
pusha
cmp
fisttpl
push
notb
cmp
cmp
cli
sub
sti
and
fs
lahf
push
jmp
dec
mov
sub
xchg
pop
xchg
iret
sbb
or
xor
and
sub
inc
pop
pop
pop
shr
ret
int3
scas
lret
ljmp
pop
jge
jnp
mov
imul
inc
test
jb
sub
mov
xlat
hlt
jp
pop
xor
aaa
mov
cld
cmp
cltd
lods
test
repnz
xor
jb
dec
and
das
out
andb
fistl
cmp
xchg
inc
add
negb
dec
out
enter
aas
js
iret
call
xchg
sbb
xchg
mov
jge
pop
data16
pop
jge
push
lahf
fwait
ret
xor
in
ficomps
inc
sub
repnz
xor
icebp
aaa
pop
dec
fmuls
lret
out
ljmp
incb
loopne
cmp
sub
aad
je
fstps
xchg
pop
int3
dec
push
push
fists
mov
dec
mov
cmp
lret
inc
in
repnz
and
repz
jecxz
xchg
cbtw
jnp
sub
dec
addr16
xor
add
jnp
ljmp
fstps
aam
arpl
pop
into
test
js
loopne
stos
enter
sub
cwtl
mov
es
loop
mov
ret
lods
orl
pop
inc
shlb
cmc
leave
scas
out
gs
adc
data16
lcall
xor
sti
stos
ljmp
cmpsl
jno
push
inc
mov
and
lock
data16
jmp
xlat
cltd
mov
ret
icebp
mov
clc
int
mov
add
in
add
mov
movl
and
mov
xchg
dec
mov
jl
xor
ljmp
inc
xor
aas
stos
cmp
push
dec
fistl
xchg
sub
jbe
test
cmp
into
icebp
imul
add
cmc
xor
jle
fisttpll
fcmovnu
sub
mov
fs
sbb
leave
or
cltd
push
pop
loopne
sbb
cmpsb
fcmovnu
stos
fstl
pop
popaw
pop
push
lock
int3
fldcw
cltd
cltd
xor
mov
push
jbe
cmc
das
int
or
push
pmulhw
testl
fadds
jbe
xchg
cmpb
jecxz
daa
mov
clc
xchg
test
rorl
call
in
fsts
lods
lock
or
push
fnstenv
pop
enter
mov
loope
fsubrs
nop
clc
mov
test
push
out
shlb
and
out
mov
cmpsl
push
mov
insb
cmp
aad
int
popf
and
xchg
popl
test
pop
repz
mov
mov
sbb
or
jb
cmpsb
pop
push
pop
in
call
in
aas
mov
movsb
pop
xchg
sbb
fstps
icebp
repz
push
cmc
pushl
shl
mov
dec
jecxz
and
insl
push
cmp
stos
test
sahf
xor
dec
jp
fimull
bound
lods
pop
mov
mov
cmc
add
jle
popa
xor
mov
arpl
mov
xor
jl
dec
mov
popa
dec
or
mov
dec
cmp
adc
adc
insb
sub
cli
es
push
mov
pop
fcomps
lds
pop
xchg
ret
stos
shll
jge
negb
aad
das
mov
push
sarb
ret
mov
enter
loop
fiaddl
xchg
fcomps
cmc
mov
push
inc
sub
fimull
stos
cmpsl
push
inc
lahf
repnz
fwait
rorb
stc
dec
xchg
pop
sahf
lock
ljmp
mov
mov
scas
cmp
orl
rcpps
sbb
addl
popf
add
into
outsl
inc
fcoms
dec
sti
cs
popf
push
xchg
daa
out
mov
inc
sub
out
into
mov
stos
dec
bound
loopne
adc
movsl
aaa
in
clc
push
out
pusha
dec
arpl
cmp
stos
dec
adc
cmp
insb
and
std
add
xchg
stos
aad
ds
pop
sub
addl
jne
pop
mov
lcall
dec
inc
jae
dec
xor
and
cld
dec
mov
pop
mov
insb
jne
xchg
fsub
inc
mov
repnz
mov
rcrb
sub
sub
or
cltd
mov
popa
xchg
pop
lcall
mov
mov
pop
xchg
into
iret
sbb
inc
jne
push
ds
loopne
das
lahf
pusha
fidivl
mov
push
scas
ja
fdivs
movsl
cmp
cld
movsb
into
icebp
lret
js
adc
test
in
into
mov
xlat
push
and
test
scas
lds
cmp
ss
and
out
or
inc
scas
fdivs
popf
cltd
add
ss
adcl
jbe
mov
cmpsl
ja
cmp
jmp
pop
jl
gs
nopl
inc
cmp
je
jo
rorb
xor
les
and
pop
int3
push
ret
cli
dec
lahf
imul
daa
dec
jno
mov
push
xchg
or
call
mov
push
jns
aas
imul
rcl
and
adc
out
aam
xor
aam
flds
loopne
jo
push
insb
push
or
cmc
lcall
out
sub
lcall
enter
fstps
movsl
cwtl
cmp
subb
sti
outsl
fucomp
mov
or
sbbb
cmc
loop
test
test
pusha
ds
test
push
mov
sbb
fiaddl
push
xchg
adc
pop
xlat
mov
in
rol
xor
js
cld
jle
xchg
call
mov
jp
mov
out
lret
mov
cmc
jecxz
es
test
cli
xchg
lcall
jae
mov
loope
pop
outsl
sub
gs
mov
xchg
jnp
xor
add
pop
push
inc
jno
ficoms
dec
cmp
ss
xchg
loope
stos
repnz
outsb
in
scas
mov
pop
jecxz
adcl
mov
mov
adc
loop
jns
xor
popa
movb
dec
push
jne
sti
push
popa
adc
cld
lds
ljmp
push
dec
xchg
xor
rorb
jmp
daa
in
mov
push
fwait
lods
push
jecxz
mov
mov
mov
gs
loop
stc
scas
scas
ds
pop
outsb
push
jecxz
test
add
shlb
inc
int
push
jge
xor
push
imul
shlb
fs
decl
mov
cli
add
pushf
cmpb
dec
cltd
test
call
cld
push
sbb
pop
pop
adc
mov
loopne
mov
adc
test
mov
mov
mov
jle
jl
pop
shl
sbb
test
mov
pop
fs
loop
jle
inc
add
fdiv
push
lret
ret
mov
fsts
push
fadds
adc
jmp
xchg
xorb
push
enter
repnz
mov
dec
xchg
jge
mov
jl
imul
and
sbb
adc
popf
repz
shrb
mov
jnp
push
sbb
xchg
lcall
and
stc
mov
sbb
movsb
cltd
test
xchg
sbb
xchg
enter
push
xchg
push
cmp
cmp
inc
mov
enter
push
dec
inc
pop
xor
pusha
cmp
ss
test
ds
loopne
fmuls
push
dec
add
mov
mov
cwtl
out
movsb
xchg
lahf
or
sbb
sub
and
sbb
xchg
mov
pop
lds
scas
aas
subl
mov
sub
dec
xlat
mov
lea
add
cmp
shl
mov
and
pop
cmp
mov
pop
jl
xchg
xchg
add
daa
mov
sbb
pop
and
sbb
sbb
or
add
sub
pop
jns
stos
fidivl
outsb
push
sbb
lcall
mov
dec
fldenv
cld
into
xchg
cmp
ror
xchg
fsubl
lea
jg
mov
cmp
mov
repnz
hlt
repnz
jmp
xchg
sbb
sti
leave
adcl
es
mov
pop
mov
add
xchg
add
mov
data16
gs
dec
sub
clc
push
mov
mov
int
imul
vmread
nop
mov
mov
pop
cld
cmp
cltd
inc
rcl
jne
or
inc
mov
scas
mov
dec
lds
mov
les
stos
add
and
pop
int
dec
jno
movsb
dec
leave
sarb
add
xor
sbb
fst
xchg
push
or
sub
outsb
dec
jp
repnz
xchg
lock
test
dec
pmullw
ret
movsl
mov
sbb
add
ret
ss
insl
mov
push
mov
imul
das
test
insb
ret
ffree
pushf
rcrl
jmp
insb
add
jmp
sub
xchg
mov
out
jg
data16
sub
fidivs
add
pop
enter
pop
into
and
xor
insb
xchg
push
dec
mov
xorb
jp
push
or
mov
xchg
cs
dec
les
mov
or
loop
xchg
cwtl
ret
out
mov
aaa
pop
fidivs
cs
or
push
sbb
shll
add
mov
pop
daa
dec
sbb
pop
insb
mov
pop
flds
mov
stos
xor
mov
mov
repz
push
or
outsb
push
adc
out
cmp
stos
push
sbb
and
adc
loopne
adc
dec
lcall
xor
jle
push
ret
insl
cmc
add
mov
fwait
jmp
dec
in
cmpsl
imul
in
xor
push
sub
xor
pop
cwtl
cmpsl
outsl
movsl
inc
arpl
mov
sub
dec
loopne
cwtl
dec
in
jp
sbb
arpl
adc
pushw
les
in
ljmp
movsl
fwait
divl
xchg
lds
jne
mov
pop
jge
test
movsb
push
mov
dec
shll
sbb
enter
repz
pushf
adc
jg
dec
divl
mov
push
into
fidivl
inc
outsb
ja
ds
pushf
andl
xchg
shl
fbstp
or
push
add
sub
mov
rcrl
leave
or
movl
addr16
negb
pop
in
mov
sbb
dec
jo
add
and
or
cmp
and
mov
data16
inc
push
push
or
test
dec
lret
jle
in
cmp
push
xchg
je
fs
jae
cld
pop
mov
add
popl
jecxz
pop
xlat
inc
lock
pop
sbb
sahf
jmp
mov
or
mov
rol
out
js
mov
push
adc
inc
shlb
lahf
dec
and
fldt
int
je
lret
mov
mov
pop
outsl
cli
push
imul
sahf
insl
and
test
xchg
pushf
aam
icebp
ret
adc
ret
xor
push
jbe
push
or
mov
mov
jmp
ds
xor
mov
sub
out
adcl
or
addr16
ljmp
mov
sahf
clc
sbb
pause
shlb
loopne
rcrb
or
loopne
mov
outsb
fsubl
and
mov
inc
add
mov
xlat
in
push
adc
imul
repz
fidivrs
mov
sub
cs
test
push
aad
xlat
mov
cs
lock
sbb
or
mov
pop
mov
mov
xchg
dec
addr16
ffreep
adc
test
dec
ja
push
inc
mov
sbb
mov
adc
cmp
lods
leave
clc
add
dec
dec
push
repnz
sbb
pop
dec
loope
mov
ret
jne
arpl
gs
push
pminub
or
ds
sbb
ret
in
jbe
lea
sub
mov
and
imul
add
ret
orb
insl
ss
pop
sub
add
lret
sub
push
adc
xchg
out
pop
or
xchg
cmp
mov
jle
pop
out
or
adc
icebp
out
icebp
fadds
fisttps
xchg
jp
xor
andb
test
xor
scas
or
jae
push
or
cli
mov
mov
mov
inc
pushf
push
xchg
call
mov
popf
push
fnstsw
push
inc
xchg
gs
sub
sub
clc
cmpsl
adc
push
xchg
dec
mov
pop
sub
fstpl
clc
pop
push
les
lret
jp
push
pusha
push
pop
mov
shll
dec
jns
mov
scas
sbb
jge
and
fdivrl
enter
frstor
test
shll
leave
ja
jmp
pop
mov
into
sbbl
adc
lds
pop
out
std
cmc
adc
mov
push
ds
mov
jl
fcoml
push
dec
xchg
xchg
jns
repnz
xchg
loope
mov
aaa
mov
decl
outsl
fstpt
or
add
stos
testl
pop
ret
xchg
jbe
lods
int
sub
xor
adc
test
mov
dec
or
push
loopne
aam
ja
pusha
xorl
cwtl
mov
xchg
adc
adc
sbb
pop
out
insb
addr16
push
aad
mov
jp
mov
stos
enter
mov
mov
aas
ljmp
es
cmp
fs
mov
scas
lret
jl
sbb
lds
lock
mov
lret
xlat
aaa
mov
inc
sub
daa
cmp
push
xor
xchg
fwait
in
adc
lods
cmp
out
js
and
sti
jmp
rclb
mov
xchg
rorb
push
cmp
insb
jo
sub
int3
mov
xchg
insb
adc
addl
or
jl
bound
cmp
out
or
xchg
outsb
aas
sub
jno
ljmp
aaa
cmpsb
jp
jge
cmp
pop
cmp
xlat
sub
inc
in
mov
mov
pop
add
movsb
loope
hlt
or
xchg
rclb
test
rcll
stos
leave
push
add
cmpsb
mov
idivl
movsb
mov
mov
jbe
mov
push
ss
xlat
or
mov
mov
sbb
mov
fldl
jb
inc
jmp
xchg
cmpsb
and
testb
int3
mov
jb
idivl
decl
loop
pop
into
mov
leave
jbe
or
xchg
shrl
aas
mov
sahf
repz
jbe
aaa
mov
and
dec
ss
xchg
stos
aaa
add
xchg
cltd
rorb
mov
sarb
verw
jne
cmc
add
jae
test
cmpsl
imul
xchg
mov
mov
fwait
xlat
arpl
into
pop
mov
ljmp
lock
or
sub
jnp
ret
cmpsb
jae
or
pop
jecxz
mov
mov
inc
xchg
jp
sahf
in
jmp
and
cmp
pop
mov
xchg
add
xor
push
cli
adc
clc
pop
das
add
cmpsb
int
dec
hlt
mov
aam
mov
ret
jmp
pop
push
pop
mov
cmpsb
in
push
dec
mov
inc
adc
adc
mov
gs
or
aam
adc
das
leave
test
xchg
mov
insb
mov
fbld
lcall
test
cmp
cmp
cmp
popa
adc
sbb
cmp
push
movsl
fxam
ss
loop
scas
mov
sbbl
popa
ja
fcoml
pop
cwtl
les
repnz
push
subl
mov
jb
add
int
data16
lds
dec
stc
sbb
icebp
test
fiadds
addr16
out
or
ficoms
lods
mov
adc
or
js
lods
xor
popf
fistps
pop
jno
xchg
cwtl
test
scas
idiv
scas
and
inc
imul
dec
arpl
push
mov
dec
fwait
aaa
add
and
inc
cmp
cmp
inc
repz
mov
xchg
add
mov
and
sbb
sysret
out
jo
and
dec
add
mov
mov
sti
shll
mov
cs
adc
cs
sub
aad
dec
pop
or
repz
inc
jbe
ss
push
push
pop
or
and
mov
jg
inc
mov
inc
outsl
ss
push
jne
outsl
add
sarl
jns
in
and
fists
add
push
aas
shlb
xchg
movsb
and
andl
sbb
les
sbb
stc
gs
clc
pop
cmp
pop
rorl
int
in
mov
dec
ret
jg
mov
jp
push
jp
loope
cmc
mov
pop
xchg
adc
je
mov
je
mov
stos
xchg
gs
cmp
and
rolb
inc
cld
push
movsb
dec
mov
test
xor
or
and
sahf
bound
iret
add
xchg
jbe
les
sbb
sub
insl
psllw
mov
xor
jno
je
pop
adc
add
fsubs
mov
adc
loope
rorl
cmp
jmp
push
fwait
mov
ret
push
mov
mov
jg
add
pop
je
loopne
aad
push
jne
pop
xor
je
adc
mov
fcoms
xor
jne
xor
lea
lret
sub
sbb
push
icebp
mov
fs
cltd
jp
sahf
pop
jnp
ret
aad
sub
leave
mov
add
and
add
scas
adc
mov
pop
mov
popa
in
dec
add
in
icebp
lods
ljmp
dec
frstor
cwtl
pop
mov
decl
fst
pop
sbb
sbb
std
jae
cmp
sbb
and
mov
pop
scas
ret
jecxz
pop
lds
xchg
into
jns
jge
cmpsb
sub
ds
shr
test
pop
lcall
pop
sub
and
loop
into
mov
test
mov
movsb
loop
shlb
ja
into
push
adc
jnp
jnp
mul
std
cmp
jo
lcall
shll
inc
stos
nop
adc
pop
fadd
sub
dec
jb
mov
scas
inc
stos
xchg
icebp
and
adc
icebp
shl
hlt
and
jge
mov
mov
pop
repz
adc
ret
pushf
jns
inc
push
xorl
mov
mov
jae
stos
dec
icebp
stos
fst
stc
rcl
inc
ss
mov
adcb
dec
testb
mov
mov
clc
cmp
pop
sbb
and
inc
xchg
nop
jmp
es
insb
popa
stos
movb
aam
push
dec
iret
ret
xor
clc
dec
cmp
lret
pop
loop
inc
pushf
insl
ljmp
mov
dec
mov
or
loope
sub
push
daa
cmp
nop
js
stc
pop
pop
dec
cs
lret
mov
outsb
xor
out
pushf
sahf
dec
sbb
adc
das
loopne
scas
pushf
push
and
hlt
sarl
or
and
js
push
daa
cmp
push
sbb
pop
push
mov
sbb
sub
or
jl
and
mov
pop
push
orl
fdivrs
fstps
mov
insl
sbbb
lds
push
xor
and
out
push
jno
jp
sub
stos
jae
mov
mov
js
jmp
popa
sbb
in
rorl
lcall
mov
adc
xchg
jl
loope
or
scas
aam
out
pop
mov
sub
nop
movsl
shlb
imulb
insl
pusha
dec
dec
xor
lock
test
or
cmc
xor
pop
xor
jnp
movsb
jecxz
inc
stos
in
or
outsl
push
sbb
movsl
or
pop
into
jge
push
add
sub
dec
mov
push
xchg
pop
jbe
mov
pop
outsb
fcmovnb
mov
imul
stos
dec
mov
outsb
in
insl
mov
mov
mov
imul
push
cmp
mov
xor
inc
xchg
xor
cmp
mov
mov
fisubrs
adc
ficompl
push
sbb
mov
mov
clc
mov
pop
fdivl
das
insl
mov
mov
loop
jle
jg
bound
popa
inc
fidivl
sub
stos
fldt
lds
and
test
outsb
add
frstor
cmpl
and
and
fisttpll
dec
dec
jno
sub
adc
sbb
pop
ret
sub
out
cmp
push
xchg
fildl
fstl
cmpsl
cmp
pop
fdivs
push
rorb
repz
das
ljmp
sar
cmp
and
dec
imul
repnz
rcl
and
daa
testl
lcall
push
sub
mov
pushf
stc
test
lock
mov
loop
add
mov
push
popl
adc
cmp
mov
sbbb
mov
and
dec
mov
jp
lret
lods
xor
mov
adc
fcomip
ret
or
mov
repz
dec
repz
shr
pop
rep
movsl
push
das
xor
ljmp
cltd
das
cmp
aam
mov
pop
fsubl
dec
sub
dec
adc
push
adc
lea
sub
rcr
adc
out
nop
xor
xchg
repz
mov
adc
pop
and
popa
sbb
mov
rorl
jbe
sar
bswap
dec
out
inc
divb
dec
jp
decb
sub
ret
nop
mov
xor
mov
and
pop
mov
adc
xor
dec
push
test
jnp
lcall
lods
mov
orb
lret
lahf
mov
cmpsb
loopne
imul
cwtl
xor
subl
sahf
out
test
push
outsl
xor
icebp
pop
jae
stc
mov
mov
mov
das
popa
loopne
nop
ja
sbb
dec
and
add
sarl
dec
cli
in
push
int3
int
stos
pop
ds
sub
popa
or
int3
mov
xchg
sbb
push
adc
stc
lds
dec
sbb
xchg
cmpb
mov
lods
aaa
pusha
in
mov
aam
jb
insb
aad
adc
mov
pop
data16
test
cmp
out
dec
jae
mov
clc
xchg
inc
leave
test
faddl
push
push
imull
push
and
sbb
jne
test
sti
fisttpll
adc
mov
ss
bound
mov
js
mov
push
adc
ret
sbb
jge
adc
and
jecxz
push
mov
mov
mov
adc
daa
sti
sub
cmp
sti
mov
hlt
ret
imul
pop
icebp
das
sbb
lods
or
fdivrs
outsb
jge
das
icebp
cmp
pop
shll
or
jl
jno
pop
mov
out
mov
jp
add
pop
sub
push
lods
out
or
int3
cmp
add
mov
mov
movsl
xor
clc
cmp
mov
mov
cli
push
fisubs
out
out
dec
test
push
push
or
ret
popf
add
jbe
or
sub
cli
xor
out
inc
jae
and
cmp
mov
mov
call
and
pushf
or
jns
call
mov
add
loopne
je
fists
imul
push
mov
xor
pop
sarl
in
mov
cmp
imul
icebp
mov
mov
cmp
into
sub
pusha
inc
ficomps
out
movsl
cmp
push
nopl
fsubp
in
mov
rcrb
bswap
std
lahf
jo
jo
jecxz
lret
outsb
cwtl
jns
sub
jne
ret
imul
aaa
adc
nop
or
push
sub
shll
insb
add
xchg
xchg
push
xchg
xor
outsb
cwtl
fxch
movsl
cmp
ljmp
int3
adc
dec
mov
jo
xchg
outsl
movsl
pop
enter
push
and
sbb
lock
cld
mov
mov
xchg
sub
aas
je
pop
mov
jb
inc
sarb
lds
or
xor
or
and
fwait
pop
data16
repnz
pop
mov
push
cmp
stos
mov
xchg
jnp
jns
inc
xchg
cmp
xor
sbb
popa
adc
cmp
loop
push
dec
mov
daa
cli
pop
push
leave
push
orl
inc
xlat
testb
scas
int3
jno
clc
dec
inc
jle
pop
fs
ds
add
inc
sub
fstpl
xor
dec
es
orb
mov
jg
call
mov
dec
cmp
push
shrl
cmp
sbb
adc
xchg
rcl
or
sub
push
push
push
xor
mov
cli
stos
mov
add
dec
cli
dec
push
add
adc
dec
stc
lods
cli
add
mov
das
fidivs
push
cwtl
xchg
xchg
xchg
sbb
dec
dec
mov
lcall
and
lock
jge
popf
mov
add
dec
fsubs
ss
push
lea
insl
mov
pusha
inc
xchg
dec
mov
xchg
xchg
mov
jbe
sbb
xor
je
add
insl
jmp
mov
xor
adc
pushf
adc
in
add
jge
loope
aad
add
outsb
jg
lods
arpl
push
mov
out
pop
enter
push
adcb
in
fisttpl
push
xchg
addr16
enter
fldt
adc
out
sbb
jbe
sub
fstl
ret
clc
mov
cmp
rorb
sti
pop
and
stos
and
cmpb
push
jecxz
cld
testb
cwtl
xor
rdmsr
repnz
dec
and
and
push
test
shr
nop
fldt
dec
ss
pop
pop
mov
cmpsb
les
cmp
jmp
js
push
adc
outsl
push
sbb
mov
adc
push
int
jno
add
inc
subb
mulb
lcall
into
jb
adc
pop
movsl
pop
jle
inc
rcll
cmp
lahf
loope
sbb
leave
or
mov
lock
xor
xchg
jle
cmpsb
inc
aad
push
mov
into
xchg
push
adc
xor
jbe
rolb
adc
dec
xor
jmp
jp
in
scas
jbe
pop
rorl
mov
int3
ret
xchg
cmc
mov
push
inc
pop
pop
and
cmp
jae
jns
into
daa
sub
int
imul
bound
arpl
inc
lret
enter
orl
popl
adc
jle
dec
jle
lock
mov
push
je
loope
and
les
fstps
fwait
jbe
clc
notl
mov
xchg
fsubrp
sub
fnstenv
ljmp
push
mov
rcr
cmp
jae
out
mov
mov
test
cld
popf
pusha
xchg
jae
test
aas
add
ret
popa
mov
jnp
cmp
mov
or
mov
add
mov
inc
and
rorl
jmp
insb
push
stos
and
mov
push
daa
pop
mov
cmpsb
shl
mov
test
cmp
jne
push
add
cli
xor
mov
cmp
mov
mov
mov
pusha
stos
aad
lods
jne
stc
xor
cmc
movsb
xchg
sbb
negl
rcl
jecxz
push
bound
jnp
cmc
ss
xchg
ja
stos
popa
dec
movsb
stc
and
inc
inc
sbb
loopne
adc
rorl
push
movb
in
xchg
and
cld
ret
in
xor
mov
mov
shlb
outsl
clc
int
sub
iret
pmuludq
fwait
sbb
mov
push
sub
int
push
in
or
push
jl
sub
mov
push
pop
adc
inc
mov
pop
fmulp
jbe
cwtl
icebp
fsubrl
pop
mov
and
sub
push
xchg
test
xchg
mov
out
adc
cmpsb
push
imul
push
lods
imul
add
add
test
or
push
pop
imul
cs
add
leave
gs
ret
jnp
push
addb
cmp
lret
or
xchg
lret
rol
test
shlb
or
mov
sahf
cmp
in
lods
ds
mov
test
mov
xor
mov
mov
jo
into
dec
jae
out
mov
push
in
nop
lcall
lret
lret
test
pop
jo
cld
in
nop
les
cmp
repz
add
jg
mov
fstpl
adc
loope
sub
sub
push
sub
xchg
scas
jne
repz
lret
ficompl
hlt
cmp
jne
test
or
aam
rorb
test
lcallw
mov
xchg
sarb
pop
in
sub
sub
fsts
enter
shll
and
jg
pop
fcmovnbe
cmp
inc
pop
mov
dec
push
cwtl
jne
jle
push
cli
adc
dec
and
shlb
and
aas
cld
imul
jnp
hlt
and
mov
xor
mov
rcrb
mov
movlps
aam
cmp
in
push
mov
out
or
inc
fwait
enter
jp
or
pop
fsubrs
push
fcmovu
dec
sub
jbe
jns
repnz
or
mov
es
lret
xor
and
dec
rcrb
push
nop
cli
push
insl
and
mov
test
adc
nop
rorb
jnp
shrb
cmp
mov
test
cld
lods
iret
push
insl
lock
mov
cli
sbb
fsubrs
loopne
iret
xor
adc
mov
lcall
into
inc
test
arpl
jnp
lea
inc
push
xchg
or
leave
jge
sbb
enter
orl
xchg
nop
repnz
lds
mov
cld
stos
jns
jno
mov
or
test
pop
cmpsb
loope
cmp
xchg
jbe
movsb
adc
in
pop
inc
lcall
cmp
inc
scas
mov
cmp
xchg
sti
enter
pop
bound
test
inc
ja
add
pusha
dec
fs
pop
mov
cmc
mov
cmp
xchg
loop
push
lahf
mov
gs
sbb
in
mov
xlat
pop
push
popf
pop
mov
bound
mov
push
push
push
and
popf
popf
or
aam
lret
daa
setl
fs
outsl
ret
sub
xchg
incb
fiadds
and
pop
and
jg
sub
aad
int
in
jb
test
lods
pop
adc
loopnew
xchg
out
mov
pop
enter
jne
lahf
xchg
adc
and
push
xchg
and
push
push
imul
jae
add
inc
insl
jnp
mov
jle
das
xor
jl
adc
movl
loopne
push
pop
cmpsb
ljmp
cmpsb
sbb
lock
xor
clc
out
lock
jb
xorl
leave
and
and
lods
insb
movsb
test
aam
dec
scas
adc
push
mov
clc
lods
or
in
data16
mov
aas
repz
adc
push
pop
sub
outsb
es
fwait
dec
sarl
and
mov
fstpl
pop
xor
iret
gs
testl
adc
jne
fldt
scas
pop
xor
sub
fcmove
jno
bound
mov
movsl
mov
test
cli
stc
push
or
add
icebp
insl
push
scas
in
mov
mov
adc
jnp
daa
stos
popf
and
cmp
inc
or
cld
push
sbb
test
sub
xor
jge
push
dec
pop
inc
popl
pop
xchg
sarb
imul
jge
jmp
mov
test
add
mov
ror
pop
cld
int
in
mov
rcrb
pop
and
or
inc
nop
insb
ret
rcrl
movsb
test
fwait
mov
adcl
sub
mov
mov
jns
sub
sub
or
rep
cmp
das
lcall
pop
jo
test
inc
clc
xor
adc
xor
push
lods
sbb
insl
call
dec
in
fnstsw
aas
xor
movsl
ret
ret
sti
lds
xchg
test
popa
in
mov
jecxz
pmulhuw
outsl
push
inc
lcall
lret
dec
add
addr16
pop
outsb
sbb
imul
ds
pushf
sub
jbe
in
push
es
pop
repnz
add
dec
pusha
sbb
or
jno
jno
mov
out
cmc
xor
fstps
or
test
or
in
push
insb
dec
jge
pop
inc
in
daa
xor
aaa
push
lods
jecxz
testl
fwait
out
mov
fistpl
dec
dec
popl
outsl
call
movl
xor
enter
or
call
scas
das
repnz
int
inc
push
push
sub
mov
inc
repnz
lea
movsb
xor
loop
pop
lds
les
fwait
adc
out
pop
mov
and
pop
roll
mov
xchg
out
out
addr16
adc
fdivrs
pop
pop
lahf
fcmovnbe
and
jecxz
fnclex
fsubs
je
adc
sbb
cmpb
adc
icebp
adc
xchg
pop
fimull
xchg
stos
cmp
xor
outsl
ret
sbb
sahf
jb
int3
mov
es
sub
stc
push
cs
cltd
call
scas
sbbb
cli
inc
or
jno
add
rcr
test
popf
adc
sbb
fs
sub
sbb
jno
mov
push
nop
xor
out
and
push
out
mov
jae
adc
and
out
das
andb
mov
arpl
inc
pop
adc
push
or
lods
mov
dec
mov
jae
inc
movb
insb
mov
sbb
es
jmp
sti
mov
sbb
ficomps
loop
xor
js
sbb
push
xor
andb
ss
xchg
mov
mov
lcall
inc
dec
pop
ret
cmovo
xor
jmp
push
jnp
fucomi
call
das
mov
pop
cmp
stos
cmpsb
push
xchg
jle
mov
sar
popw
mov
cs
inc
mov
shlb
out
in
aad
push
aam
dec
pop
in
shlb
or
sbb
outsb
lret
push
nop
andl
pushf
incb
cmp
andb
push
lret
jp
push
cmp
ja
imul
xor
pop
pop
cmp
mov
lds
idivb
mov
cmpsl
shl
pop
adc
outsb
shrl
adc
cmpsl
aam
add
xor
fidivrs
aaa
cmp
fistps
mov
lock
inc
sbb
pop
lds
lods
cld
call
mov
out
divb
jns
pop
lret
fs
fdivrl
pop
test
cmpl
sbb
scas
inc
cli
sahf
clc
dec
fidivs
subb
push
mov
adc
jle
adc
sub
neg
sub
test
inc
mov
sbbb
int
pushf
or
xchg
in
sbb
loop
stc
aas
sbb
cmpsb
adc
dec
add
push
pop
adc
push
inc
xchg
mov
add
cmp
test
push
test
shrl
pop
sti
addl
in
jo
test
jbe
lahf
fs
cmp
insl
data16
adc
pop
mov
outsl
jmp
sar
cmp
dec
mov
fidivs
inc
cld
pushl
popf
clc
fwait
les
xor
jp
dec
push
mov
lahf
add
insl
jg
lock
pop
pop
pushf
js
pop
xor
mov
adc
repnz
scas
cmpsb
push
fsubrs
mov
imul
ljmp
into
and
ficoml
test
inc
dec
ss
pop
aam
cltd
pop
jg
fs
mov
scas
lret
xchg
sarb
sarl
pushf
push
cmp
cmp
push
repnz
xchg
out
add
in
pushf
sub
test
pop
leave
sti
mov
out
add
addr16
cmpsb
aas
into
xorl
mov
test
or
xlat
mov
xchg
lret
mov
mov
insl
mov
inc
jnp
clc
jns
loope
test
movsl
add
sbb
cmp
jno
stos
cmc
cmp
xchg
add
cmc
jae
mov
push
xlat
mov
orb
shl
xor
imul
sub
into
or
jl
xor
nop
lret
mov
push
pop
cmp
inc
loopne
out
insb
mov
and
stc
icebp
pop
cmpsl
sub
xchg
mov
je
mov
insb
pop
mov
fwait
mov
sub
lcall
clc
add
fimull
mov
jecxz
cmp
push
insb
pop
daa
orb
sarb
stos
sbb
aam
adc
mov
or
es
sub
sub
add
rorl
repnz
push
call
sub
fildl
lods
cli
aam
mov
cmp
sahf
mov
scas
test
or
or
pushf
insl
fwait
adc
ret
scas
or
js
int
lock
push
dec
lret
out
dec
jle
sub
jbe
in
cmp
cmp
sbb
aas
cmpl
jne
and
or
mov
loopne
or
les
test
call
sbb
add
inc
mov
dec
popf
fs
mov
fdivrl
int
sub
xlat
test
cwtl
test
sub
das
cli
xorb
sbb
mov
dec
ficomps
sub
gs
outsb
mov
mov
jae
js
xor
xchg
adc
jg
dec
popf
or
cltd
inc
call
mov
pushf
insl
push
stc
jnp
xchg
jo
andb
loopne
pop
into
mov
sub
mov
xchg
mov
xor
out
jnp
xchg
pop
xor
push
mov
xor
push
mov
inc
call
jb
sub
or
mov
shlb
mov
or
or
mov
test
add
lds
in
inc
xchg
jae
nop
jnp
mov
mov
inc
or
push
dec
mov
push
xor
data16
sub
push
fmull
call
xor
out
cs
mov
insb
or
pop
pop
push
jp
pop
dec
dec
sbb
xlat
add
arpl
xchg
addr16
add
and
leave
les
or
insl
inc
sub
xchg
pusha
imul
cs
adc
insb
adc
mov
imul
xchg
jns
aam
push
data16
add
fwait
adc
loope
int3
insl
sub
or
inc
mov
lods
push
cmp
bound
rcr
test
js
cmp
dec
or
jl
cltd
mov
shlb
psllq
sti
into
or
iret
mov
push
ds
lcall
add
aaa
loope
es
clc
mov
fadd
scas
scas
pop
into
gs
add
mov
arpl
out
sti
mov
ror
dec
enter
mov
stos
adc
insb
out
out
nop
pop
cmpsb
jg
cld
sbb
scas
and
jl
mov
adc
popa
sbb
mov
int
or
sbb
aaa
insb
pusha
nop
cmp
arpl
lahf
sbb
test
sbb
lret
jb
sub
enter
sub
nop
sub
and
sub
outsl
add
or
fbld
pushf
hlt
test
insl
movsb
cmpsl
fcoml
pop
xor
std
pushl
jge
mov
mov
std
jmp
sub
inc
leave
mov
mov
stc
and
or
and
jle
int
aad
push
fs
push
int3
push
sarb
push
call
aas
ljmp
cmp
sub
mov
iret
ret
mov
loop
lock
push
push
inc
dec
add
and
jb
push
leave
jle
rolb
adc
pop
into
push
pop
inc
das
xor
mov
aam
mov
in
sub
pop
xchg
jns
mov
lret
cwtl
mov
stc
into
icebp
push
iret
loopne
jmp
push
arpl
xchg
gs
mov
push
and
loopne
or
pop
push
aas
lret
mov
out
dec
outsl
in
aam
inc
xor
hlt
jbe
outsl
ret
fwait
sub
push
push
adc
leave
xor
adc
outsb
jmp
cltd
or
std
and
je
in
mov
in
jle
jp
inc
mov
xor
adc
sbb
fsubrs
and
icebp
xchg
push
xor
test
sbb
dec
sub
sbb
sbb
mov
in
mov
icebp
or
mov
mov
das
pushf
xor
stos
pop
in
mulb
jmp
ljmp
mov
adc
xchg
scas
mov
js
loopne
inc
in
data16
std
mov
pop
dec
stos
leave
mov
lods
sub
ja
call
add
dec
sub
frstor
imul
test
jno
repz
jl
cltd
jmp
adc
jnp
negl
fsubrs
sbb
imul
daa
div
scas
mov
mov
jne
hlt
add
imul
repz
ret
sub
ss
out
or
test
cmp
loope
xorl
jmp
ljmp
push
pop
lret
mov
or
aaa
pop
push
inc
popa
inc
or
je
lcall
aaa
xchg
push
jnp
sub
or
insl
cmp
sbb
jp
mov
jl
scas
fimuls
in
sbb
lods
mov
jns
or
pop
pop
leave
iret
aad
aad
push
in
ror
cmpb
cmp
popa
data16
arpl
or
cmp
push
mov
stos
sub
add
xchg
test
test
ret
jmp
or
cmp
test
inc
add
mov
sarb
lods
push
and
pop
loop
cld
das
pop
cwtl
xor
sti
pop
lods
roll
xor
dec
and
cmp
mov
inc
outsb
jbe
jb
cmp
fistps
pop
pop
sub
push
xchg
rcrl
enter
movsl
xchg
insb
icebp
ds
setbe
rorl
or
sbb
xchg
sbb
xchg
jne
add
hlt
fcomps
xchg
mov
mov
push
mov
cli
in
arpl
adc
inc
sarb
int
jl
das
xchg
cmp
sub
pop
sub
pusha
inc
xor
sbb
fwait
out
mov
mov
ja
cli
mov
pop
push
mov
ret
jmp
add
fiaddl
leave
ret
pop
pop
add
jo
inc
popa
ror
sub
mov
jb
mov
pop
popf
es
mov
or
or
je
orb
inc
dec
aad
mov
adc
sub
dec
outsb
arpl
xchg
jne
dec
loop
nop
and
test
nop
adc
or
push
fstp
cmc
stos
adc
inc
mov
imul
jno
shll
adc
push
popa
mov
inc
mov
shll
inc
cmp
mov
pop
ss
and
jne
fmuls
dec
es
fsubs
xlat
xor
pusha
pusha
xchg
inc
aad
outsb
cmp
loopne
unpcklps
lret
cmp
fucomip
mov
xor
sub
aas
adc
cmpsl
or
mov
dec
jg
loopne
jnp
push
pop
add
push
sbb
int
push
repz
aas
insb
div
pusha
sbb
call
clc
sub
adc
cld
in
xchg
mov
inc
cmp
out
mov
icebp
xchg
jecxz
xchg
les
addr16
add
scas
and
in
adc
sub
addr16
aas
and
leave
cmpsb
loop
cmc
js
scas
or
ljmp
shrl
mov
daa
mov
test
movsl
test
push
pop
imull
mov
inc
inc
pop
sub
and
inc
mov
in
mov
add
loopne
cltd
shrl
push
pushf
xor
push
outsb
fucom
std
or
data16
dec
cmpsb
lret
cmpl
jle
dec
pusha
push
mov
movsl
cld
mov
popa
and
lcall
fs
clc
xor
sub
aam
adc
sub
jge
lods
sahf
inc
repnz
orb
or
idivl
dec
in
fsubs
jae
fnstsw
ja
xor
adc
insl
xor
lret
jnp,pn
add
ds
popa
mov
push
and
pop
scas
cmc
fcoml
mov
ds
cmpsb
pop
sub
jns
dec
ja
inc
mov
mov
mov
dec
shl
pop
mov
mov
adc
xor
mov
mov
ja
sbb
sahf
ficoml
stc
xchg
sub
cmp
jge
divb
cltd
imul
pusha
pop
lret
fmuls
cmc
es
fstcw
rcll
push
add
mov
push
shll
bound
xchg
repz
iret
popl
setne
out
push
pop
outsl
cmp
shlb
xchg
sub
cli
cmp
js
inc
jne
flds
loop
or
sbb
mov
jns
test
push
cld
mov
into
insl
icebp
cwtl
add
xor
out
fadd
jnp
imul
lods
popa
inc
stc
xor
xchg
stos
fadd
adcb
lods
and
in
dec
cmp
cmpsl
mov
jo
testl
leave
push
xchg
xchg
stc
setne
lds
dec
outsl
ja
iret
sbb
int
lahf
adc
repz
jg
loop
sub
mov
mov
stos
mov
popa
idivb
sti
cmp
data16
hlt
fwait
xchg
inc
add
leave
jae
sub
es
popf
rcll
rcrl
std
stos
mov
std
push
lret
inc
jo
fdivrl
insl
mov
lods
pushf
inc
lcall
mov
bnd
lahf
xchg
add
and
xchg
jbe
stc
jb
aas
jb
cs
leave
or
popa
add
mov
je
mov
stos
pop
xor
xchg
dec
adcb
arpl
es
fs
sub
xchg
xlat
addr16
shrb
cltd
mov
rolb
das
jecxz
hlt
jnp
mov
pop
mov
sbb
mov
pop
adcb
sbb
in
dec
dec
cmc
rolb
stos
arpl
mov
cltd
xor
and
mov
out
mov
pushf
inc
adc
lock
stos
xchg
repnz
es
and
imul
xchg
test
sbb
mov
rorb
aas
xchg
mov
mov
loopne
sbb
mov
cmp
loop
aaa
jl
mov
or
daa
sbbl
sbb
aaa
xchg
push
pop
xor
dec
add
inc
cmp
or
adc
lods
mov
mov
or
cmp
push
push
sti
pop
adc
dec
sbb
les
in
pop
lcall
pop
pop
repz
mov
gs
into
int
sbb
mov
jg
sbb
sub
or
lock
pusha
or
ja
pop
push
pushf
and
mov
loopne
fistps
mov
jecxz
pop
aam
mov
inc
cli
jl
mov
cs
sarb
cli
test
fistpl
sbb
cmp
int
xor
lahf
pop
or
mov
outsb
iret
std
add
fstps
or
sub
icebp
inc
inc
dec
jecxz
xchg
loope
fistpl
mov
adc
mov
mov
rclb
in
jae
enter
fs
inc
outsb
and
jecxz
dec
pusha
and
adc
or
sbb
je
and
ss
xlat
jno
mov
and
mov
sahf
outsl
sub
ret
xchg
cmp
mov
popf
shll
rorl
in
mov
and
mov
inc
adc
xor
mov
sub
add
or
roll
lcall
mov
cs
mov
shll
jbe
dec
adc
push
mov
jo
jle
xchg
add
jge
mov
jecxz
lea
inc
jl
mov
mov
sbb
jecxz
mov
lret
cmpb
mov
inc
and
mov
push
loope
mov
fmuls
xor
loope
lahf
loop
jecxz
pop
pop
sbb
push
aaa
mov
cwtl
jle
pop
cmp
xchg
inc
test
push
push
xchg
test
adc
je
call
pop
mov
sub
adc
pop
loope
cld
xor
pop
enter
and
addb
mov
xor
fidivrl
pop
dec
jg
jne
aaa
add
jo
enter
lcall
movsl
lock
lods
inc
out
cmp
or
aas
lea
out
movsb
push
sbb
lods
jmp
out
cmp
or
loop
mov
jle
cld
sub
xchg
in
in
cmp
sahf
in
ss
scas
lods
jg
int
cmpsl
das
xchg
das
or
add
js
inc
and
lret
adc
pop
xchg
jb
xchg
leave
adc
push
pushf
pop
xor
mov
mov
movsb
cmpsb
sbbl
lods
cmpsl
lods
outsl
mov
rcrl
movsb
test
into
fs
fldcw
add
sub
call
pop
imul
xor
in
xchg
push
mov
push
fisubl
sbb
mov
ljmp
jmp
je
add
lahf
pop
xchg
pusha
xor
fmull
call
jmp
inc
leave
pop
pop
out
xchg
enter
cmp
aam
cmp
lret
jmp
xor
pop
add
mov
xor
lea
adc
ds
mov
inc
push
shlb
subb
or
daa
pop
nop
xchg
sub
ss
jecxz
sahf
inc
xor
movsl
addr16
addr16
mov
cmp
adc
cmp
mov
dec
outsb
out
testb
mov
and
pop
inc
lret
fisubrl
or
test
movsb
add
jecxz
sbb
sbb
mov
and
xor
cmpl
sti
loopne
enter
les
scas
aam
out
mov
xchg
inc
xor
jge
jecxz
adc
shl
test
and
ret
and
scas
push
clc
notb
jg
xor
jmp
push
movsl
out
js
adc
div
mov
ja
sbbl
dec
out
je
adc
lods
or
cwtl
insl
or
cmpsl
enter
and
in
xlat
add
xor
mov
inc
pop
pop
loop
mov
in
xchg
xor
imul
lock
pop
lock
stos
lods
dec
cli
xor
pop
sbbb
sbb
dec
pop
vmread
lahf
std
add
into
stos
dec
cmp
inc
add
fisubs
dec
cmp
push
mov
lea
in
loopne
mov
clc
mov
ss
popa
in
imul
mov
jp
xor
cltd
mov
nop
test
cli
test
call
fprem1
dec
xchg
mov
fwait
out
fists
clc
push
enter
loope
and
test
sbb
sbb
xchg
movsb
adc
hlt
xor
lret
mov
leave
push
dec
mov
mov
ds
js
das
mov
fs
xchg
inc
out
incl
or
nop
push
out
mov
push
jns
or
cwtl
jne
pop
jae
pop
lds
xchg
lahf
test
cmp
imul
mov
jnp
es
popa
adc
mov
mov
int
cmpsb
pop
inc
out
push
aam
jl
mov
sub
add
lret
sbb
inc
scas
repz
mov
sub
mov
pop
out
mov
push
and
adc
xor
call
mov
sbb
scas
xor
dec
xor
mov
outsl
push
dec
pop
int3
jo
gs
dec
dec
iret
js
mov
xor
mov
mov
xchg
fucompp
sub
jmp
insl
loop
or
dec
mov
push
dec
repz
add
push
iret
movsb
xchg
mov
mov
out
jmp
out
adc
push
mov
mov
cmpsl
outsb
push
pop
inc
mov
add
js
add
push
pop
cmpsl
adc
hlt
jecxz
movsl
cmp
popf
ror
popf
cmp
and
fisubrl
lcall
iret
jb
or
inc
and
jge
mov
push
or
cmp
mov
and
jns
imul
dec
pop
and
xor
clc
push
hlt
jne
mov
inc
pop
dec
inc
rorl
mul
ret
jmp
or
lods
mov
dec
sub
cltd
insl
lret
xchg
out
nop
insb
mov
adcb
lcall
inc
call
hlt
push
into
andl
in
test
pushf
bound
inc
ret
das
sbb
xor
xchg
dec
lret
adc
mov
push
cli
inc
loop
xchg
xchg
out
jmp
nop
mov
lds
out
dec
adc
fisttpl
mov
test
cli
add
xchg
jno
movsb
mov
jo
nop
and
in
xchg
jl
idivl
mov
inc
cmp
mov
xchg
xchg
or
bswap
ret
int3
lods
pop
xchg
pop
dec
mov
dec
cltd
enter
push
mov
test
dec
xchg
sar
push
bound
xor
fistpl
sbb
pushf
inc
pop
sub
dec
mov
sub
rep
stos
mov
sbb
ljmp
fidivrs
movsb
cld
lret
cmp
sbb
cmp
lods
sub
lret
add
jno
enter
cmp
lret
inc
cmp
inc
xchg
push
int3
dec
sbb
arpl
inc
sbb
lret
sbb
mov
aad
inc
clc
adc
das
sti
js
jae
dec
push
repnz
jp
arpl
xor
jge
dec
mov
iret
xor
jnp
and
xlat
push
rorb
mov
jge
sahf
mov
xchg
inc
add
fadd
mov
sarb
jnp
lahf
adc
clc
pop
mov
ret
add
bound
mov
cmpsb
push
lods
popf
adc
or
mov
cld
cwtl
outsl
pop
out
mov
xchg
push
add
ret
mov
mov
or
mov
test
jge
xchg
popl
test
les
or
nop
jne
pop
iret
push
sarb
xlat
cmp
adc
lret
pop
iret
jg
loopne
sarl
mov
lods
dec
push
push
push
inc
out
push
nop
push
int3
cmc
cmpsl
frndint
cwtl
ds
push
std
mov
cmp
cmpsb
push
mov
cmp
lret
push
out
lods
lahf
lods
sar
das
setbe
mov
stc
sub
test
add
dec
push
mov
lcall
loop
xor
mov
ficompl
sub
repz
out
adc
insb
cmp
fmul
dec
dec
nop
add
cmp
orb
cmpsl
mov
xlat
lahf
sbb
cmpsb
fnstenv
test
pop
inc
mov
iret
mov
adc
daa
clc
jp
jb
and
sub
negl
aam
loope
mov
mov
inc
aaa
cmp
mov
jg
orb
push
test
xor
ret
add
outsb
loope
jg
ja
adc
sbb
stos
fcompl
imul
mov
addb
addl
pop
push
xchg
cltd
lret
mov
mov
mov
test
push
not
loope
jl
imul
enter
sti
ds
mov
sbb
out
mov
xor
cmp
addr16
out
fstpt
add
nop
adcl
lods
fidivrl
inc
mov
shrl
into
jg
loope
inc
or
inc
adc
arpl
loop
lods
filds
lds
mov
lahf
xlat
loop
push
loopne
ret
std
out
sub
mov
pop
pop
jns
mov
scas
push
fstps
xor
movsb
loope
divb
enter
mov
cltd
mov
fcmovu
mov
fsts
cmpsb
imul
push
lods
stc
sbb
aaa
imul
inc
add
add
rcrl
inc
or
xchg
push
out
mov
sbb
shll
jge
sbb
sub
add
insb
sbb
cmpsl
xchg
add
test
movsb
clc
sub
inc
repnz
jbe
jp
fadd
adc
divl
cmpsb
cmp
xchg
inc
jae
lds
lret
dec
outsl
test
dec
sub
add
in
clc
andb
iret
xchg
ljmp
adc
pop
push
push
push
in
mov
jecxz
xchg
test
push
lahf
xchg
mov
pop
test
jmp
rol
sub
mov
int3
sarb
dec
jecxz
xchg
pop
jp
add
xchg
call
adc
frstor
sbb
cmpb
cmpsb
pop
scas
cmp
movsl
jb
cmp
int
out
subb
mov
dec
nop
popa
cs
cli
push
xor
push
pop
cmp
mov
xchg
loop
jl
mov
scas
loopne
daa
test
inc
sti
cmpsb
push
mov
shrl
test
scas
stc
imul
xor
mov
hlt
mov
push
dec
push
cli
cmpsl
fistps
sarl
test
jle
repz
inc
jg
outsb
push
arpl
inc
sbb
inc
lock
leave
jbe
jo
mov
inc
shlb
mov
cltd
jae
adc
jl
sahf
rorl
xor
adc
xchg
jecxz
fidivs
aam
fdivrl
fwait
cmpsl
cmc
in
cltd
xchg
xchg
sbb
and
clc
test
aad
pop
imul
dec
xor
int
stos
insl
sub
push
out
outsb
xchg
dec
inc
add
stos
es
mov
lods
shr
cmp
sbb
gs
xor
jmp
xchg
cmp
mov
popa
stc
jl
lods
add
jo
add
xchg
pop
xchg
int3
or
rcrb
cld
xchg
subb
push
in
gs
or
xchg
mov
dec
jle
repz
out
and
insb
xchg
cmp
incb
fs
dec
cwtl
adc
xchg
inc
fisubs
push
pop
int3
jo
sarb
push
xchg
imul
inc
fs
or
sub
fwait
mov
ror
mov
push
ret
addr16
mov
mov
ret
jns
push
pop
lock
sti
js
fs
adc
mov
lahf
scas
cmpsl
daa
int3
in
aas
cmp
movsb
push
in
xor
dec
pop
and
insl
leave
mov
and
into
cmpsl
jmp
lods
mov
xchg
and
movsl
mov
inc
loopne
mov
outsb
dec
inc
mov
in
xor
cmp
inc
cli
pop
js
clc
iret
das
dec
push
pop
jp
mov
pop
jecxz
cmc
pusha
movsb
and
xor
jno
aas
je
rcrb
mov
std
lahf
int3
push
test
sub
push
jp
add
fistps
andb
push
push
xchg
jle
popa
jo
enter
mov
pop
cwtl
movsl
aaa
stos
xorl
ss
ret
adc
mov
sbb
sub
imul
repz
fs
lahf
push
pop
hlt
cmp
inc
ja
sti
pusha
lods
stos
popa
outsl
push
insl
jecxz
and
jne
sahf
outsl
pop
insb
add
mov
xor
imul
aas
les
sahf
insb
pop
jg
cs
mov
or
jg
test
jno
cmpl
sub
and
ret
xor
pusha
sub
rcrb
aad
ret
mov
pop
aad
pop
cmc
adc
cmpsl
daa
push
and
push
inc
adc
dec
clc
xchg
lea
cmp
ss
sub
andl
inc
cwtl
inc
std
push
fnstcw
addr16
in
aad
fidivl
and
lea
loope
or
jns
dec
mov
lods
jns
and
inc
push
out
andl
cmc
pusha
jae
cmc
lret
xchg
add
adc
ja
mov
pop
mov
lcall
or
lcall
cmp
xchg
xchg
mov
mov
and
mov
adc
jbe
lahf
notb
pop
aas
jl
push
hlt
roll
add
icebp
dec
cmpsb
jbe
mov
mov
and
mov
mov
xchg
fistpll
inc
pop
lock
jp
xor
sub
and
test
add
stos
and
daa
cs
insb
push
xor
fistps
or
arpl
ljmp
sub
das
popf
pop
mov
divb
lret
scas
pop
push
mov
inc
fadds
js
or
outsb
lcall
mov
mov
fiaddl
lock
mov
mov
outsb
xor
pushl
add
arpl
sbb
pop
push
mov
mov
scas
xchg
pop
addl
mov
mov
cltd
cmp
and
and
mov
sub
xchg
jb
fistpl
cmpsl
test
dec
or
sbb
test
in
mov
jmp
cmp
mov
fs
sbb
pop
xor
cld
push
aam
js
leave
jne
mov
incl
xchg
cmp
pushf
jbe
cmc
sub
sbb
cmp
into
mov
js
dec
mov
in
jl
mov
push
cmp
arpl
adc
aaa
mov
outsl
rcrb
sub
insl
cmp
mov
mov
inc
or
mov
mov
mov
add
push
pop
or
xor
pop
testl
adc
mov
imul
jle
subb
shrb
inc
fidivl
out
xor
xchg
fsubrl
arpl
xor
jmp
aaa
lahf
fimuls
data16
fs
cwtl
or
and
in
pop
mov
sub
imul
shr
xchg
inc
mov
dec
test
xor
cli
pop
inc
or
cmp
jmp
jl
les
fidivrs
addl
sub
cmp
pop
pop
repnz
jg
mov
lock
bound
cwtl
mov
or
push
add
por
fnsave
sbb
and
sti
push
or
leave
adc
xlat
ljmp
out
adc
push
push
sub
push
ret
ljmp
mov
shll
cld
test
and
inc
cvtdq2ps
and
lods
addr16
jge
push
ror
push
bound
pop
testl
dec
push
pop
push
sbb
int
sbb
jb
xchg
les
lcall
dec
add
pop
sub
mov
sahf
jmp
mov
cmp
and
stc
jg
scas
inc
dec
ret
jnp
lock
pusha
add
mov
or
or
xchg
stos
inc
ja
push
sub
fbld
mov
push
loop
repz
xchg
mov
inc
xor
ds
daa
xor
cmp
mov
movsl
or
sub
in
mov
pop
rcrl
xchg
sbb
and
lret
outsl
push
mov
ja
or
or
mov
aaa
lret
cmpsb
pop
inc
xlat
faddl
in
out
repz
dec
add
cmc
adc
push
leave
push
inc
shrb
test
mov
insl
testl
in
int3
and
inc
lods
lret
dec
pusha
pop
and
bound
push
popa
shr
insb
and
mov
mov
jo
rcr
subb
testl
sub
aad
xor
cmp
push
sbb
cwtl
aas
arpl
or
mov
mov
lcall
xor
lods
jecxz
sub
mov
out
dec
mov
pop
std
xchg
or
mov
dec
div
sbb
or
andl
xchg
int3
cltd
loopne
fdivl
mov
or
lahf
mov
sbb
cmp
sub
jp
pusha
and
out
roll
push
pop
sub
jnp
sbb
mov
in
jb
nop
push
push
xchg
push
jmp
out
lcall
dec
lea
pushf
add
ss
icebp
jne
lahf
mov
data16
dec
bound
mov
dec
push
aam
mov
mov
or
icebp
dec
outsl
inc
push
or
jecxz
sbb
out
shll
and
push
popa
push
cmpsl
mov
leave
lock
inc
add
add
mov
jle
and
lea
test
outsl
and
pop
inc
mov
lock
lds
lahf
jae
ds
or
jge
out
adc
lods
xorb
pop
bound
outsb
xchg
outsb
and
add
cltd
mov
sbb
fmul
in
or
adc
cmp
int3
mov
fs
mov
xchg
daa
xchg
pop
sbb
xor
mov
dec
xchg
into
or
or
cli
mov
xor
fnsave
push
sub
loopne
jge
nop
mov
cli
popa
loop
push
lcall
or
jne
outsl
rclb
imul
jo
xchg
in
cmp
mov
jp
mov
sahf
jns
mov
xchg
inc
daa
push
mov
cmp
negl
aas
mov
mov
icebp
rorb
add
filds
sbb
jp
repnz
fs
dec
jne
inc
or
and
xor
rclb
icebp
mov
rolb
arpl
incl
jae
sub
mov
or
out
testl
push
fsin
ret
add
jno
movsl
hlt
stos
adc
jecxz
dec
or
idivl
arpl
daa
pusha
sub
fisttpl
cld
pop
dec
clc
push
call
ror
scas
shrb
cmp
cmc
mov
push
sbb
push
xchg
or
mov
pop
and
mov
cmp
pop
js
lods
jmp
ret
or
cmpb
bound
push
adc
aaa
dec
push
push
xchg
dec
fwait
push
sbb
movsl
cmp
sub
cpuid
sahf
enter
xor
mov
lock
cwtl
in
mov
push
xchg
sbb
mov
sbb
inc
test
popf
and
ja
mov
xchg
aad
mov
mov
stc
mov
fldl
ljmp
jl
jno
mov
loopne
ror
or
xchg
lcall
lds
or
cmpsl
add
ficompl
aad
sub
sub
ficompl
mov
xchg
sub
or
cmp
add
sahf
out
jp
xchg
test
rclb
sbb
outsb
sbb
jecxz
out
int
lds
sarl
dec
jae
btrl
shrl
push
sahf
and
mov
dec
into
add
test
clc
jl
fwait
test
orl
mov
shll
fidivl
xchg
sbb
jg
in
test
pushf
add
cmpsl
sarb
daa
push
sbb
push
leave
and
lods
cmp
addl
leave
subb
outsl
sbb
das
adc
sarl
mov
fstps
pop
mov
outsb
push
lods
jge
data16
jp
movsb
xchg
dec
out
adc
mov
dec
push
lret
pop
and
jo
push
test
ljmp
mov
pop
das
xor
inc
lock
stc
in
cmp
xor
test
mov
clc
ja
jnp
jbe
sub
jmp
mov
xchg
jnp
lret
cmc
jb
das
pop
jl
sarb
inc
xor
lods
push
dec
cli
int3
lahf
std
iret
loopne
pop
fldenv
jge
jmp
mov
int
jmp
mov
shr
gs
cwtl
mov
mov
aas
pop
xchg
cmp
out
mov
clc
mov
lods
push
sahf
jle
imul
cmc
mov
mov
nop
leave
pusha
mov
shr
adc
inc
add
ja
xor
out
sbbl
loop
into
mov
pop
and
notl
mov
xchg
repnz
lds
in
adc
in
dec
mov
das
sub
in
inc
dec
mov
adc
ret
mov
mov
mov
fxch
pop
push
cmp
sub
pop
xlat
sub
cli
rcr
lcall
push
ret
mov
jbe
sub
pop
sbb
push
sar
xor
mov
fstl
shlb
push
rcl
mov
cwtl
adc
call
fs
push
repnz
inc
out
sub
cmp
mov
mov
lahf
jge
push
in
ds
imul
mov
daa
adc
and
icebp
iret
inc
jo
scas
xchg
mov
push
sbb
add
adc
outsl
add
seta
cmp
dec
xor
inc
sub
rcrl
int3
lods
scas
fnstsw
rcll
or
add
sub
mov
fistpl
lds
rclb
xchg
push
pop
testb
pop
pop
shl
clc
mov
jns
sub
pusha
int
jp
push
pop
xchg
out
stos
and
aad
fsubs
pop
push
outsb
incl
add
pushf
add
push
pop
mov
lcall
sbb
pop
fcmove
dec
shlb
rcll
xlat
jmp
rcrl
jno
mov
adc
leave
shl
in
mov
sbb
dec
lea
or
or
in
add
push
mov
sub
aaa
sub
test
mov
jp
pop
inc
sbb
and
pop
or
xchg
inc
jbe
push
xor
lret
push
pop
inc
mov
jnp
ja
mov
orb
jno
jmp
inc
cmc
cmp
jae
mov
xchg
aas
mov
out
pop
shlb
mov
add
jae
push
mov
aad
dec
lods
loope,pn
xchg
test
lcall
dec
push
push
inc
ja
xchg
shl
repnz
insl
fcompl
bswap
sahf
push
rcll
push
add
adc
subb
jge
and
ror
fwait
into
mov
xor
xor
enter
add
lret
pop
into
push
test
mov
dec
inc
pop
daa
in
inc
lret
mov
add
pop
cltd
push
dec
test
cli
dec
jg
inc
daa
cmp
and
dec
lock
xchg
cmp
loopne
push
movsb
roll
push
in
cmc
insl
dec
adc
or
add
dec
test
jp
repnz
pop
pop
in
mov
xor
data16
fidivrl
in
in
mov
dec
cmp
mov
pop
push
mov
ret
clc
cmp
fdivs
loope
in
aad
loop
inc
addr16
bnd
mov
ss
jbe
out
xor
xchg
fcmovnbe
fwait
aas
push
push
in
sahf
adc
outsb
xchg
mov
jle
ret
mov
aas
pop
sub
mov
push
cli
xchg
adc
jg
lea
aas
lods
mov
gs
cld
fiadds
mov
in
push
dec
push
aaa
std
insl
je
jns
int
cmp
jl
out
xchg
mov
jg
push
mov
xor
sub
and
ljmp
cmp
sarb
fisttpll
in
push
rcll
call
bnd
mov
add
nop
ss
faddl
xchg
push
adc
pop
in
leave
insb
imul
nop
ss
adc
and
into
inc
mov
or
sbb
mov
into
xchg
in
push
sub
sbb
inc
pop
push
mov
jl
sub
jb
vrsqrtps
loopne
add
lea
jne
xor
pop
cmp
mov
fimull
inc
mov
loope
mov
jnp
xchg
xor
popf
push
movsl
popf
loopne
out
out
pop
push
stos
mov
je
lds
add
jne
mov
pop
outsb
mov
or
cmpsb
push
adc
add
sub
jl
and
jns
adc
test
popa
mov
jne
fsubrl
cs
pop
les
push
lock
sub
lock
cltd
ret
pop
jno
inc
adc
mov
cld
cmpsb
mov
imul
or
jge
mov
hlt
mov
xor
ret
ret
loop
cmpsb
jb
xorb
out
xchg
mov
in
pop
and
rcrl
xchg
or
adc
pushf
das
xchg
and
in
pop
jl
jp
xchg
lret
jne
sub
adc
xchg
cli
pop
pusha
add
pop
cmp
pop
sub
test
sbb
outsl
pop
mov
pusha
fsubs
dec
jnp
mov
das
mov
mov
adcl
and
fistl
sub
nop
add
xchg
std
pop
jl
rclb
and
xchg
cmp
movsl
pop
arpl
push
cmp
js
jp
scas
push
ret
and
outsb
leave
jnp
inc
lods
test
outsb
in
bound
dec
cltd
fstpt
sbb
int
add
mov
jnp
cltd
mov
jbe
dec
mov
sbb
fs
adc
cli
adc
movsb
ljmp
add
popf
fsubl
push
cli
ss
jecxz
mov
lods
leave
pop
hlt
cmpsl
xchg
out
xlat
adc
daa
mov
lods
ror
cmp
or
xchg
adc
mov
roll
out
ret
push
pop
mov
in
hlt
enter
hlt
sbb
int
inc
mov
push
dec
xchg
and
leave
inc
cmp
int3
lret
mov
xor
sub
mov
lahf
push
sbb
add
jl
insl
sbbb
jo
dec
and
jae
mov
push
sbb
xlat
enter
das
movsb
or
push
ja
cmpsl
cmp
iret
lret
mov
cmp
lods
jae
adc
pop
mov
push
pop
icebp
xchg
xor
ret
sub
mov
pusha
and
cli
sbb
aas
in
inc
and
enter
dec
and
outsb
sub
push
hlt
cltd
adc
adcl
jp
outsb
pop
sahf
add
out
inc
cmp
mov
fstl
mov
fs
mov
pushf
inc
push
lods
or
das
aas
fildll
mov
push
sub
pop
or
mov
and
loop
and
sarl
sarl
ds
movsb
sbb
pop
and
push
sub
pop
or
mov
sub
ds
cmp
mov
mov
or
xchg
pop
jae
lds
or
mov
fcomi
mov
jns
mov
inc
cmp
push
incb
cmc
xchg
das
pop
mov
jl
mov
or
xchg
jae
inc
dec
dec
fimull
mov
ret
loope
pop
insb
clc
pop
lret
iret
inc
ljmp
cmp
pop
inc
or
push
imul
add
ss
push
or
inc
mov
aaa
fdivs
iret
dec
push
push
add
in
and
sub
imul
fxch
cld
pop
lea
das
or
int3
shll
add
add
nop
divl
ss
fidivl
jo
mov
nop
mov
pop
mov
push
jle
add
pop
sub
dec
test
lret
or
movsb
aam
sbb
inc
enter
mov
jg
cmp
shll
mov
mov
and
mov
jg
lock
fdivrs
or
in
mov
pop
fiaddl
mov
pop
sti
dec
fistl
out
lcall
xchg
call
jae
repz
shl
sbb
add
lock
push
xor
and
adc
in
or
sbb
or
lods
fistpl
pop
sbb
dec
xor
jmp
add
dec
fldenv
or
insb
lret
cmp
and
fisubl
sub
gs
js
mov
aaa
push
dec
sti
shlb
rol
hlt
adc
leave
sbb
into
mov
cmp
mov
sub
mov
test
cmp
fs
sub
jnp
push
scas
ss
push
cmp
pop
push
insb
fcomps
fdivrl
jl
inc
xor
pop
jns
int3
mov
jp
movsl
and
dec
mov
icebp
notb
fcomip
inc
pushl
push
mov
or
and
sbb
jno
cs
les
add
shll
push
test
nop
dec
dec
dec
out
xchg
and
adc
sbb
mov
in
push
out
sub
and
mov
cmp
pop
inc
call
mov
pop
fwait
lcall
rcrl
lcall
and
add
xor
sub
or
jb
add
jmp
fsubl
mov
call
xlat
jb
test
clc
sub
lahf
pop
mov
js
fisttps
or
inc
outsb
data16
test
dec
add
ret
cmpsl
mov
fs
xchg
imul
inc
icebp
rorb
inc
sbb
inc
fiadds
or
outsl
imul
jmp
jecxz
mov
movsl
out
aaa
jecxz
xchg
stc
mov
jecxz
jne
jns
or
jp
lods
xlat
mov
iret
jae
xchg
or
xlat
aaa
inc
imul
or
lahf
leave
call
adc
sub
and
aas
outsb
xor
fdiv
mov
jcxz
outsb
aad
jg
ret
pop
pop
fcomps
std
sti
jns
scas
jno
iret
popl
ret
xchg
ffreep
mov
inc
sbb
jmp
jno
mov
mov
adc
jmp
orb
jae
jns
adc
push
int3
adc
lea
dec
clc
jb
dec
xchg
push
loopne,pt
push
rcl
mov
dec
loop
mov
jnp
adc
and
stc
push
arpl
lret
xor
cli
jns
shr
xor
mov
xor
sbb
mov
shr
loope
dec
cmp
push
xor
mov
mov
or
cld
sbb
roll
lret
inc
xor
pop
ss
cld
fsubrs
clc
mov
movsb
jo
dec
insl
icebp
bnd
loop
jmp
xor
inc
sub
aam
int
leave
ja
movsl
push
faddp
lahf
scas
clc
sub
xor
cmp
ja
je
hlt
gs
inc
repnz
mov
and
or
and
rclb
push
dec
shrl
ret
mov
mov
je
cmp
sub
fdivrl
adc
mov
jbe
jno
shll
mov
imul
mov
dec
mov
push
stos
ljmp
or
aad
and
jmp
cmpsb
inc
sbb
into
xchg
fsts
mov
and
ja
and
mov
mov
test
jle
sbb
mov
cmpsb
sbb
lahf
push
aad
jno
adc
jno
lds
pop
dec
shll
mov
jmp
adc
xchg
mov
insb
jb
scas
pop
pop
sti
inc
imul
in
or
mov
cmp
pop
fdivrl
mov
repz
pushf
or
std
xor
or
cwtl
adc
in
out
adc
dec
jl
inc
pop
push
push
lods
out
xor
mov
sub
cmp
or
adc
scas
inc
push
push
or
sahf
gs
push
lods
mov
mov
ljmp
in
adc
jno
pop
insl
mov
mov
cwtl
mov
test
pop
and
out
add
into
mov
ret
mov
mov
rol
aam
scas
les
and
imul
inc
scas
lds
xchg
jle
add
repz
es
jnp
fwait
mov
jecxz
sub
xorb
cli
and
inc
fisubrs
jg
dec
mov
and
and
addl
in
add
into
mov
xchg
inc
adc
pop
call
xchg
pop
push
imul
inc
inc
lock
sub
push
push
cld
rolb
sub
es
jle
lock
fidivs
xor
mov
inc
sbb
mov
xchg
pop
jmpw
dec
call
ja
push
ret
sub
xor
movsl
ds
pop
mov
jmp
lea
adc
pushf
mov
pop
mov
pop
repz
push
imul
imul
movsl
clc
xor
mov
arpl
in
clc
mov
ss
and
xlat
in
xchg
dec
pusha
inc
and
sbb
inc
jo
es
xchg
iret
mov
js
dec
sub
mov
pop
and
dec
fdivrs
lock
int
sbb
jno
daa
pcmpeqd
sbbb
jb
adc
mov
push
cmpsb
push
fmull
test
or
cmpsb
inc
insl
pop
fisubrs
clc
ds
sbb
push
scas
mov
adc
arpl
cmp
sub
push
cmp
cmc
int3
lods
movsl
mov
cmp
std
mov
cwtl
inc
add
popa
cmp
dec
jnp
adc
push
and
repz
test
mov
mov
lcall
cmp
and
sub
daa
jl
enter
sbb
arpl
js
mov
add
xchg
xchg
mov
mov
mov
mov
sub
fidivs
and
mov
sahf
or
sub
stos
ret
sub
imul
add
or
sbb
xor
ja
imul
inc
mov
or
aas
nop
dec
cmp
aaa
cmp
rclb
jb
int
std
xor
and
sbb
mov
cmc
mov
jne
lock
arpl
mov
fsubp
pop
je
mov
sub
and
bound
aad
pushf
jge
mov
push
push
nop
jae
pop
and
pop
push
and
xchg
in
lea
aam
pushf
imul
sub
pop
push
cwtl
xchg
int3
insb
xlat
scas
sub
push
push
inc
sbb
lds
mov
cltd
pop
in
jmp
sti
lret
push
out
scas
shl
adc
std
mov
repz
mov
lock
sbb
jbe
cmp
insb
inc
cmpb
dec
hlt
jmp
add
pop
push
cmpsl
xor
pop
sub
fcomps
mov
xchg
mov
imul
and
fimull
mov
dec
push
cld
pop
fwait
pushf
test
mov
cld
pop
scas
adc
mul
push
mov
lret
cmpsl
mov
pop
lods
dec
mov
pop
shll
dec
fisubrs
mov
clc
jl
loopne
shlb
popf
cmp
stos
xor
dec
shrl
imul
cmpsb
push
iret
push
pop
clc
adc
out
mov
sahf
add
pop
adc
mov
call
xor
jp
xchg
push
out
lret
out
cvtdq2ps
ss
add
fdiv
ljmp
insb
sub
cltd
fwait
inc
shl
js
xchg
js
les
shr
or
sar
imul
cmp
sub
movsl
insl
repz
dec
subb
shlb
ja
lea
xor
in
fisubrl
adc
and
mov
or
dec
xor
xchg
mov
jl
push
lret
push
mov
push
xchg
ret
ss
inc
sbb
loop
inc
mov
cmp
mov
mov
ja
xor
jl
incb
mov
adc
push
into
popa
test
mov
lcall
int
sahf
fdivs
ret
adc
in
dec
push
mov
out
mov
test
or
push
clc
mov
pop
cli
bts
stc
pop
pop
enterw
or
mov
lahf
pusha
cli
aam
push
fistps
call
xchg
add
add
cmpsb
lcall
icebp
cld
xorl
sub
mov
jmp
sbb
loop
out
test
ret
xor
clc
jnp
cmp
aaa
subb
dec
lret
fcmovnbe
das
aaa
inc
mov
lods
inc
cwtl
mov
cltd
push
inc
or
mov
stos
int
fiaddl
enter
es
pop
cmpsb
sti
cmp
dec
jno
inc
xchg
in
lods
call
sbb
push
fisubs
aas
fwait
push
gs
testl
mov
mov
dec
rol
add
aad
pop
mov
push
sbb
gs
cmpsb
sahf
cld
out
cmp
or
pop
mov
popa
les
inc
mov
in
push
adc
lahf
fdivl
dec
inc
mov
cmpsl
or
and
mov
shrb
je
mov
xchg
mov
mov
fsub
ret
sub
mov
out
hlt
fists
jg
int
pop
xor
mul
sbb
sub
sub
out
mov
jne
sub
data16
xor
data16
sbb
movsl
leave
add
pop
data16
push
sub
out
stos
dec
xchg
imul
jae
mov
xchg
sbb
insl
adc
fstl
lahf
jbe
xor
mov
mov
movsl
jg
xchg
aaa
ja
scas
int
jb
fcomp
xor
mov
sub
bound
push
mov
in
or
sub
and
lret
mov
lods
xlat
imul
lahf
loopne
lds
aaa
cmp
jle
insb
jns
loop
aaa
out
xor
push
les
xchg
iret
call
fisubrl
or
mov
mov
lock
rcrb
test
clc
or
add
scas
inc
jp
xchg
ss
insl
mov
and
ljmp
loope
jns
movsl
js
add
lret
dec
and
mov
xchg
push
test
push
pop
aad
sbb
fisttpll
xchg
mov
push
out
inc
scas
or
push
or
adc
les
fistpll
orl
cld
mov
in
arpl
out
push
das
mov
push
fists
xchg
or
add
mov
mov
pop
fdivrl
jae
stos
add
and
pop
popa
js
jbe
imul
int
arpl
or
js
hlt
popa
stc
inc
imul
mov
sub
imul
aaa
inc
pop
adc
rorl
and
cmp
rep
xorl
mov
or
repz
or
xchg
aam
xor
aam
or
mov
inc
orb
int3
mov
mov
push
sbb
ljmp
lahf
out
mov
incb
sub
je
daa
pop
sbb
add
daa
ret
repz
cwtl
pushf
test
std
jb
movsl
lods
dec
repnz
pop
nop
or
add
sbbl
cmovge
stc
lds
in
xchg
mov
leave
aam
data16
sub
shl
mov
inc
mov
fisttpll
dec
dec
mov
clc
push
sbb
pop
loopw
xor
sub
stos
and
scas
push
iret
fdivp
inc
dec
mov
movsb
pop
sbb
into
cltd
push
sbb
dec
scas
mov
arpl
cmp
lods
xor
and
jns
andl
rclb
sub
or
mov
pop
jmp
mov
sahf
and
push
out
mov
dec
cmc
and
cli
dec
jle
not
add
aad
cltd
lret
aad
cmc
in
loope
in
or
loopne
call
cmpsb
in
or
aam
adc
hlt
push
jb
aas
cltd
orb
cmp
cs
add
fstpt
data16
pop
mov
out
push
sbb
inc
dec
clc
ss
mov
scas
xchg
sub
cmp
iret
xor
ret
stos
repz
sti
cmp
negl
mov
jp
sti
sbb
imul
pop
pop
push
shlb
scas
push
push
cld
loop
or
mov
arpl
mov
add
idivl
jb
inc
and
cmp
push
jnp,pn
lret
sub
cmp
fildl
sub
mov
xchg
xor
dec
or
xor
imul
dec
test
add
outsb
jl
rcll
mov
dec
sbb
frstor
dec
xchg
mov
subl
lret
dec
jle
xchg
aam
mov
aam
sbb
xchg
mov
lahf
jg
aam
adc
mov
push
ja
adc
scas
repnz
push
jns
daa
push
add
xchg
fistl
sarb
pop
bound
lcall
lds
aad
stos
stos
insl
loopne
fdivrs
pop
std
movl
inc
sub
xchg
adc
xlat
insb
pop
or
stos
sub
xchg
mov
cmp
enter
and
ret
in
int3
jb
stc
jae
sub
xor
out
movsb
inc
fiaddl
pop
dec
sti
stos
daa
or
mov
mov
sarl
lods
xor
adc
cmc
xchg
flds
fistl
lahf
jmp
std
scas
pop
neg
mov
xor
or
and
test
xchg
mov
sbbb
mov
pop
pop
adc
subb
jne
xor
aad
mov
cmpsl
mov
xor
fwait
and
add
cmp
mov
jbe
filds
repz
aas
fistl
inc
in
pushw
call
mov
into
daa
lahf
inc
push
lods
cs
stos
loopne
in
push
mov
pop
sbb
stos
sbb
adc
mov
orl
aad
cmpsb
loope
data16
push
gs
cmc
dec
arpl
jmp
mov
stos
xorl
mov
lock
xor
dec
iret
pop
inc
lods
lret
repnz
or
and
pop
outsl
scas
aad
fs
jo
and
popf
sahf
insl
push
daa
mov
out
add
insl
sub
lahf
sarb
jb
xorl
xchg
jo
imul
leave
fstpl
aam
scas
cmpsl
sub
xor
pop
subb
out
cmp
mul
cmp
lea
outsl
aaa
lahf
jmp
xchg
pushf
test
push
ljmp
lcall
pop
icebp
ret
out
jne
and
mov
cmp
into
test
sbb
cwtl
pop
dec
lret
adc
outsb
mov
dec
push
scas
and
sti
divl
inc
bound
gs
enter
es
enter
sbb
ljmp
jp
push
lds
add
out
cmp
popa
bound
pop
mov
test
leave
shlb
cltd
rcrl
cmp
in
inc
cmp
and
aam
or
cmp
fwait
mov
test
xorb
xchg
lea
dec
push
in
subb
lahf
lock
dec
jb
fcomps
test
inc
xchg
out
pop
mov
or
ljmp
push
and
add
out
adc
popf
ss
int
xchg
pop
jp
pop
js
jns
jnp
add
lds
sbbb
gs
leave
arpl
jbe
jbe
cmc
mov
iret
lahf
lret
sub
iret
xchg
xor
fs
clc
xchg
test
mov
mul
push
imul
jb
mov
mov
adcb
dec
jo
outsb
fidivrl
cmpsb
push
mov
adc
insl
out
and
ds
addr16
leave
pusha
jl
cmc
imul
mov
jae
adc
mov
xchg
jae
clc
sbb
mov
lods
into
push
dec
ja
pop
inc
push
pop
adc
xchg
mov
push
add
pop
jnp
ret
or
es
xchg
adc
int
out
mov
aas
pop
jae
in
shll
dec
xchg
push
mov
lds
adcb
sub
jno
pusha
int
mov
stos
sbb
or
nop
jne
out
insb
adc
movsl
sahf
push
daa
ret
mov
out
setb
das
jno
int
jns
inc
aaa
xchg
xor
lret
pop
rorb
repz
repz
adc
in
sub
xor
mov
jmp
in
inc
ret
jl
cmpsb
mov
pop
outsb
repz
into
gs
cli
insl
into
call
and
icebp
fcompl
fcmove
push
mov
jmp
jl
push
mov
aad
xchg
fcmovnbe
add
adc
mov
js
mov
inc
fsubr
add
push
jno
sbb
pop
mov
into
mov
or
xchg
testl
rorb
call
fimull
addr16
and
hlt
inc
arpl
shr
icebp
addr16
test
je
in
pop
xchg
arpl
inc
in
add
xlat
aad
dec
xorl
inc
push
adc
into
jae
subb
repz
xchg
xlat
pop
test
xor
js
jp
xor
and
mov
inc
and
and
add
jl
pop
jecxz
xchg
sbbb
sbb
xlat
push
test
aad
mov
shll
xchg
ja
xchg
lret
inc
scas
dec
pop
or
sbb
push
mov
test
icebp
push
push
int
pop
and
mov
hlt
loop
int
negl
mov
sub
aad
fildl
rol
cmp
jl
pop
sub
inc
lret
xchg
pop
dec
cmpsb
pop
push
xor
adc
adc
sub
push
xor
fcomi
dec
loop
call
and
mov
test
pop
xchg
cmp
mov
cmp
das
jg
repz
jae
sub
mov
loop
jge
call
push
sbb
stos
push
push
xor
fs
dec
push
or
std
aad
mov
mov
cld
push
test
ficomps
fiaddl
andb
sub
mov
ljmp
cmpsb
testl
cmp
jmp
shlb
icebp
fcoms
mov
in
repz
xchg
mov
jae
pop
aad
xchg
and
or
and
stos
dec
pusha
aaa
inc
pusha
sbb
lods
cmpsb
loopne
out
jne
ljmp
sahf
cld
and
jmp
sahf
ret
cld
xchg
mov
jl
inc
cmp
lea
shll
mov
mov
into
cli
icebp
inc
pop
stc
dec
enter
aam
test
call
out
mov
jbe
jb
push
pop
clc
xchg
out
fwait
jb
repnz
dec
loopne
sub
into
in
ljmp
push
gs
pop
fbstp
inc
add
or
fcoms
cwtl
lahf
in
sub
fmull
sub
fmull
bound
xchg
xchg
scas
push
mov
cmc
shlb
js
inc
xchg
lock
mov
subl
mov
insl
add
or
mov
or
mov
cmp
cwtl
rorl
stos
xchg
mov
cmpb
insl
push
cmp
rorb
mov
cmp
test
int
push
jns
imul
and
lret
mov
sbb
mov
out
mov
cmpsl
add
rcrb
jbe
sbb
movsb
pop
xchg
and
sbb
dec
mov
jl
pusha
xchg
or
sti
lea
lret
dec
inc
arpl
fcoms
call
push
or
xchg
lahf
pop
daa
fdivr
dec
imul
jl
popf
idivl
adc
mov
insb
lret
adc
incl
mov
dec
js
addr16
cld
dec
stos
add
pop
add
mov
jg
mov
cld
cmpsl
mov
pop
add
xchg
daa
mov
mov
mov
jnp
cmc
add
push
cmc
add
addl
lret
xchg
movsl
icebp
dec
divb
adc
movsl
sub
mov
mov
negb
xor
xlat
add
add
xchg
mov
push
jne
inc
pushf
je
pop
pop
push
fidivrl
dec
fisubl
dec
hlt
adc
push
pop
cmp
jmp
aam
adc
or
call
lds
dec
out
inc
les
xchg
cmpsl
clc
inc
scas
sub
ret
jo
mov
inc
inc
out
push
cmpsl
adc
lods
sub
das
cmp
xor
outsb
jmp
loope
cld
test
lret
pop
sub
sbb
jnp
aam
pop
or
mov
xor
sti
xchg
push
shll
and
aam
flds
inc
repnz
xchg
push
pusha
scas
arpl
leave
mov
or
cld
rorb
xchg
mov
sti
xor
mov
pop
shrb
fsub
movsl
out
bound
andb
xchg
push
ret
mov
movl
xor
cld
sub
das
mov
or
mov
hlt
jbe
cs
fsubs
in
xchg
aad
mov
popf
cmpsl
outsb
or
insb
movsb
mov
push
mov
jo
adc
xor
cmc
fadds
mov
insl
out
dec
shr
lret
cli
xchg
cltd
add
imul
enter
call
je
cltd
push
repz
cmp
cli
out
adc
sbb
pusha
mov
imulb
arpl
cltd
rcrb
mov
insb
lods
mov
fildl
push
andb
push
mov
add
stc
sub
ds
addr16
test
adc
lods
aam
adcl
in
and
sbb
jg
stos
loope
scas
add
out
in
jl
mov
lret
mov
aas
notl
push
loope
jne
stos
add
adc
jns
cmc
add
adc
lds
mov
adc
js
sub
out
movsb
and
cli
pop
rorb
popa
adc
push
mov
cmp
lock
popa
cmc
adc
and
ljmp
mov
pop
out
sahf
sub
cld
lods
leave
adc
ret
mov
add
loopne
and
mov
hlt
xor
fs
movsl
push
scas
lcall
in
push
mov
sbb
lock
jae
hlt
insb
or
mov
lahf
dec
ret
cli
fwait
imul
pop
cmp
cs
sub
or
sub
insb
cld
in
sbb
jb
push
adc
pop
daa
fmull
sub
mov
pop
jne
fwait
mov
mov
xchg
lea
cltd
outsb
repz
push
mov
inc
andl
int
or
lds
jle
jne
test
mov
jmp
add
mov
lds
cmpb
cmp
cmp
mov
push
xchg
es
sbb
divb
out
cmp
mov
cltd
xchg
addb
pop
popf
lret
imul
sbb
pushl
pop
stos
dec
pop
enter
xchg
xor
inc
dec
and
cmp
or
jmp
add
inc
xchg
or
fiadds
in
or
lods
xchg
push
adc
cmp
inc
aam
imul
sbb
sub
shlb
cld
movsb
mov
les
xchg
insl
xchg
push
inc
push
adcb
and
subl
xchg
cmp
adc
lret
mov
xchg
mov
insl
mov
lahf
addr16
jecxz
cmp
test
pop
movd
divb
push
jnp
test
pop
adc
push
stc
adc
fwait
popa
rclb
adc
jmp
lret
xchg
sbb
add
add
dec
outsb
mov
push
pop
into
cmp
mov
bound
sbb
xchg
mov
dec
in
stos
xchg
and
dec
repz
pop
scas
inc
fistpll
mov
insb
and
dec
jno
or
fdivs
mov
cmpsl
mov
mov
mov
jne
das
pop
shlb
fcompl
and
pop
jnp
pop
fldcw
std
scas
mov
or
stos
test
sahf
data16
jbe
cs
in
shr
inc
dec
mov
mov
ret
rclb
push
rcrl
inc
imul
xor
xchg
mov
repnz
push
pop
lods
mov
dec
movsb
ja
push
mov
add
xor
push
jp
xchg
sbb
add
outsl
jbe
test
jns
cmp
sub
mov
popf
movsl
mulb
lcall
ucomiss
and
aam
frstor
mov
aam
clc
mov
cmp
adc
stc
stc
mov
push
andb
xor
mov
pop
and
ret
in
mov
xor
sub
cmp
fmuls
push
clc
dec
shrl
mov
outsb
in
pop
or
cltd
mov
cmp
je
aas
cmc
xchg
mov
sbb
pop
mov
or
int3
int3
popf
pop
movsl
int3
sub
loopne
or
jae
push
inc
jmp
repnz
js
or
pushl
adc
mov
rclb
add
push
pop
rol
test
pop
mov
mov
pop
pop
popa
xchg
pop
xlat
mov
aad
lret
out
loop
push
rcll
fisttps
movsl
pushf
sahf
xor
mov
mov
mov
inc
hlt
insl
rcrb
mov
loopne
add
popa
loop
stc
cwtl
jle
das
xor
mov
insb
es
or
sub
cs
mov
lret
mov
shll
and
add
sbb
arpl
mov
adc
outsl
inc
repz
xchg
dec
hlt
mov
call
cltd
nop
push
cmp
pop
jae
inc
fimull
js
punpckhbw
cmp
gs
es
jnp
or
sbb
sti
mov
mov
pop
les
lea
jb
xor
jnp
adc
jmp
mov
in
xchg
in
fildll
fs
jbe
cwtl
nop
data16
mov
xchg
mov
test
mov
loope
jl
outsl
inc
out
and
ret
mov
mov
mov
mov
jg
pop
and
inc
mov
xchg
add
clc
jmp
push
shll
pushf
xchg
jnp
adcl
or
jmp
pop
fs
jp
push
push
adc
cltd
add
xlat
scas
jns
cmp
xor
jp
jp
cmp
int
sub
cmp
lods
movsl
and
and
test
xor
mov
rclb
insb
andl
in
ror
push
xchg
lret
sbb
lods
adc
fwait
movsb
jb
mov
pushf
xchg
xchg
sbbb
inc
sub
mov
xorb
sti
xor
movsl
mov
cmp
loope
loopne
and
sbb
mov
pop
in
sbb
adc
jmp
pushf
inc
sbb
scas
mov
add
dec
jno
fidivl
mov
decb
in
clc
and
jle
loopne
mov
dec
cmpsl
pusha
xchg
sti
push
dec
lea
stc
lods
inc
cmpsb
imul
clc
mulb
gs
mov
push
inc
lret
insb
test
sarl
mov
jle
mov
and
insl
shl
mov
pusha
cmp
sarb
ja
mov
cmpsb
mov
adc
sub
and
mov
in
cmc
ja
rclb
push
shrl
xor
sub
add
sub
pop
outsl
lcall
add
xor
out
mov
lock
enter
push
jns
push
mov
push
repnz
outsl
push
pop
pusha
jmp
pop
mov
adcb
popa
das
fisttpll
in
aam
adc
stc
xchg
mov
mov
sbb
jp
mov
in
je
nop
xor
push
mov
mov
outsb
addl
insl
cld
cmp
je
inc
orl
jecxz
inc
xor
in
mov
add
clc
mov
push
or
dec
dec
sbb
xorb
cld
jmp
mov
fwait
enter
cmp
daa
mov
sbb
imull
sarb
int
stos
or
dec
icebp
fxch
jecxz
mov
and
cmp
adc
jecxz
loop
cmpsb
sbb
push
add
xchg
mov
cmpsl
std
dec
call
ljmp
jg
into
jp
nop
faddl
call
push
bound
mov
and
pop
nop
adc
jns
std
imull
mov
add
in
lds
outsb
pop
sarb
sub
lods
mov
mov
pop
icebp
idivb
or
test
add
icebp
inc
pushf
adc
pop
jle
loop
repz
and
mov
adc
lret
pushf
cmpsb
mov
dec
sahf
in
div
jae
adc
cmp
jg
arpl
jl
lods
jae
movsl
movsb
call
repnz
jmp
xor
push
push
ja
stos
mov
adc
xor
xchg
in
sub
mov
fwait
lahf
js
scas
loop
dec
pop
or
inc
fnstsw
push
out
or
test
data16
vorps
push
jle
addr16
or
mov
nop
stos
es
mov
into
jno
inc
sarl
jmp
sbb
sub
cmp
jl
push
push
sbb
pop
push
jbe
loop
mov
addb
ljmp
xor
dec
call
pusha
pop
ret
add
jmp
or
cli
out
jl
pop
xor
jns
and
inc
fsubrl
or
leave
jp
inc
xchg
ret
inc
repz
sbb
pop
add
inc
jle
mov
inc
mov
mov
sbb
add
sti
mov
cmp
in
xchg
xor
inc
add
push
or
je
pushf
push
or
adc
push
sub
jnp
xor
idivl
and
pop
or
adc
dec
mov
mov
xchg
out
adc
mov
dec
or
je
push
insb
adc
pusha
stos
jae
xorl
adc
xor
pop
clc
and
das
push
leave
loopne
mov
in
add
stc
mov
out
mov
fisubs
daa
adc
sahf
out
scas
out
and
and
xchg
and
push
mov
popa
hlt
pop
in
repnz
scas
fcompl
in
xor
inc
loope
jns
call
or
dec
cmpsb
adc
mov
jmp
loope
jmp
ja
push
fisubrl
cmp
cmc
cmp
movsl
ret
mov
push
into
in
sarl
nop
popf
cmc
sti
stos
mov
inc
lods
orb
es
movsb
xorb
or
jae
jmp
sbb
and
sarb
leave
popf
lods
cld
outsb
xchg
movsb
dec
cmp
cmp
iret
psubd
and
scas
sahf
mov
add
jo
fcmovnb
push
xchg
mov
neg
inc
imulb
enter
fnstsw
xor
jmp
add
pop
je
jmp
xorl
sub
fdivp
xor
mov
fsubrs
mov
loop
jne
jbe
and
js
test
jno
in
ljmp
cld
int
xchg
out
int3
mov
imul
outsb
insl
test
xchg
push
icebp
xchg
adc
xor
lret
adc
mov
or
dec
sahf
jg
jg
popl
sahf
xor
lret
add
sbb
ja
xchg
mov
lods
push
repz
push
test
lds
call
jo
push
sbbb
mov
cmp
mov
out
test
ja
jmp
sbb
cmp
mov
adc
cmp
lds
std
jmp
out
and
dec
jg
adc
outsl
dec
sub
jge,pn
xchg
pop
pop
es
mul
aam
cld
adc
mov
fisubl
add
inc
xor
mov
adc
in
pop
loopne
dec
pop
pop
pop
cmp
daa
jns
sub
test
mov
aas
and
popf
lods
subb
insb
fsubp
insl
into
push
int
fwait
xor
mov
pushf
push
sbb
ds
iret
loope
stc
stos
xor
mov
push
sub
dec
sbb
xchg
jmp
cmp
inc
in
out
insb
leave
pop
imul
dec
lds
jno
push
xchg
cmp
xchg
push
jge
and
loop
and
jnp
jbe
mov
pop
es
notb
xchg
andl
repz
push
xchg
xchg
dec
mov
pop
xor
pop
push
movb
push
add
mov
aam
cmp
mov
xchg
inc
pusha
es
lcall
mov
mov
sbb
push
and
outsl
and
iret
ja
in
cmc
cld
out
inc
sbb
cltd
jns
les
pop
mov
cmc
dec
cmp
xor
sbb
int
dec
push
cmp
mov
les
icebp
cwtl
ficoms
cmp
inc
push
pushf
dec
adc
sbb
stos
or
clc
xchg
xchg
insb
int3
mov
jb
bswap
leave
push
cmpsl
mov
data16
sub
sub
test
jo
js
inc
push
pop
mov
dec
jmp
dec
add
inc
or
pushaw
iret
dec
mov
cmpsb
jg
ja
lods
in
popa
mov
outsl
outsl
mov
inc
scas
negb
loop
fdivrp
or
jbe
int3
cmp
repnz
push
shrb
rcrl
rcl
mov
loop
cld
loop
int
add
mov
lds
sub
jp
imul
fdivs
push
pop
repnz
add
movsl
dec
dec
test
mov
cmc
daa
xor
xchg
mov
jns
clc
xor
mov
cli
mov
test
adc
pop
out
scas
insl
sub
out
xchg
ret
inc
and
and
jle
rcll
sub
lock
dec
imul
shrl
mov
insb
inc
xor
cmp
mov
pop
mov
add
adc
push
xor
jge
cmpsl
ds
loopne
aas
mov
lds
adc
rorb
bound
fwait
xchg
in
insb
popf
jns
mov
mov
addl
xlat
cmpsl
mov
mov
sub
mov
sbb
decb
and
popf
xor
dec
inc
fs
movhps
rcll
adc
clc
push
mov
push
xor
mov
int3
in
arpl
sbb
pop
and
or
push
cmp
inc
adc
sub
sbbl
test
xchg
insb
and
fdivs
push
data16
movsl
stos
push
iret
fs
mov
aas
inc
fdivrl
mov
xor
mov
or
out
sub
fbstp
rclb
jecxz
jmp
pop
push
sbb
mov
clc
jno
dec
mov
test
jge
fidivl
cmp
inc
int3
popf
add
jmp
in
movl
out
rclb
dec
mov
push
jnp
std
lret
mov
enter
int
mov
pusha
pop
mov
mov
lods
pop
stos
scas
pop
push
aas
mov
jae
push
push
idiv
and
push
out
cmc
aad
cmp
ja
pop
mov
leave
ret
sbbl
add
xchg
cs
or
fistpl
rcrl
in
movsb
nop
pusha
push
mov
and
and
popa
xor
dec
adc
push
out
lods
iret
mov
add
mov
pushf
pop
cmpsl
or
dec
and
push
xor
inc
les
fcoms
fstpl
sbb
jp
ret
or
pop
movsb
xor
test
cmp
icebp
cld
mov
xchg
mov
les
out
and
loopne
int
mov
and
xor
xchg
xlat
fadds
and
mov
mov
adc
fbld
pushf
test
dec
lock
inc
lahf
cmp
push
stos
into
shlb
fwait
stos
dec
pushf
leave
test
movsb
fwait
out
or
xor
lods
mov
fnstenv
jns
xchg
outsl
add
xor
mov
xchg
and
lret
in
arpl
or
lahf
cmc
inc
or
leave
pop
das
in
pop
or
push
pop
popa
sbbl
adc
pop
add
xchg
cmp
push
cmp
mov
aam
mov
lret
cmp
cmp
shll
cmp
repz
pop
lods
divl
aad
xchg
bound
rclb
xchg
jmp
data16
fidivl
std
sti
jmp
cmpsb
out
push
push
mov
rorb
shrl
into
sub
les
ret
cltd
dec
lock
aaa
pop
mov
fildl
sub
cld
inc
loop
xor
subb
jbe
pop
xor
shr
fwait
movsl
and
out
cltd
dec
shl
xor
mov
mov
or
ja
cmp
into
pop
add
sub
scas
fadds
mov
and
icebp
sti
cmpsb
imul
shlb
jg
cmp
cmp
filds
mov
or
and
dec
xchg
ljmp
test
or
mov
jae
clc
movsb
das
jg
scas
sbb
stos
push
call
mov
popf
movsb
aad
mov
mov
pusha
cmp
adc
xchg
mov
xchg
rolb
fisttpll
or
sbb
stc
fs
je
jo
xchg
aaa
inc
dec
cmp
pop
lcall
mov
jmp
sub
pusha
cmpsb
sti
aad
mov
adc
sbb
lods
add
fsubp
scas
fwait
inc
lret
cs
test
jnp
cmpsl
adc
daa
jge
sub
icebp
sbb
pushf
loope
test
hlt
cmp
xor
push
sub
shll
iret
jbe
add
dec
mov
stos
cmp
adc
fldlg2
jne
movsl
mov
xchg
add
push
push
mov
xchg
adcl
xchg
jecxz
popf
jnp
mov
sub
push
push
orl
mov
jge
cmpsb
shll
repz
dec
incl
inc
add
js
repnz
test
jmp
repz
mov
xor
cmp
or
xchg
addr16
sarl
xor
faddl
popa
jmp
mov
and
mov
xor
insl
je
or
mov
lcall
pop
sbb
push
dec
add
cwtl
fiaddl
pushf
lds
stc
bound
adc
das
es
mov
push
andb
cmp
xlat
lock
pusha
xchg
mov
fcoms
mov
mov
ja
sahf
mov
push
enter
in
sbb
add
xchg
pop
popf
jg
sub
and
add
out
adc
push
dec
adc
push
xor
add
dec
rcrl
mov
xchg
cli
scas
or
outsl
pop
inc
movsb
mov
hlt
daa
fwait
repnz
ficoml
fmul
push
jle
int3
xchg
cli
add
xchg
sub
pop
push
cmc
call
mov
mov
into
lcall
mov
push
aam
frstor
jae
rol
psraw
imul
popa
popa
push
test
jb
xchg
jl
cmp
mov
js
xchg
push
xor
cmp
lea
sbb
fcompl
or
test
xlat
sub
lret
clc
in
dec
shll
mov
cld
adc
jg
xor
lret
sbb
call
mov
dec
inc
shrb
pop
add
cmc
cmp
push
loope
or
and
pop
mov
rclb
ljmp
into
aaa
in
lods
jmp
jae
jne
shlb
arpl
mov
push
cmp
arpl
das
mov
xor
fadds
mov
mov
or
push
dec
fmull
pop
cmp
push
jmp
dec
and
js
popf
aam
xor
jg
sub
js
push
push
dec
mov
jge
test
xor
xchg
roll
push
jb
popa
jns
mulb
dec
in
jle
aam
fildll
adc
imul
lea
or
inc
and
shrb
outsl
into
push
inc
sar
xor
xchg
add
xor
push
sbb
fsubr
je
jp
gs
mov
pop
outsl
shlb
sub
testl
in
xchg
jb
loope
push
mov
pop
dec
stc
jl
lret
test
sub
xchg
cmp
sbb
adc
loope
or
jmp
sbb
push
clc
rorl
mov
mov
jae
mov
cmc
push
mov
loop
dec
xchg
and
cmc
out
mov
dec
jmp
imul
add
xchg
movl
paddw
mov
cli
adc
vmovntdq
xchg
out
dec
dec
loope
out
ret
mov
pop
sbbl
push
inc
cld
add
and
add
test
add
movsl
push
test
stc
mov
xor
or
mov
or
pop
arpl
adc
jmp
jae
push
idiv
insb
ret
mov
ficomps
jno
loopne
stos
cmp
push
jg
inc
mov
and
mov
inc
mov
in
pop
mov
in
gs
mov
sbb
or
jns
and
out
nop
fisubrl
cmp
jp
mov
mov
fwait
nop
push
xchg
dec
les
aam
stc
sbb
je
mov
mov
pop
rcll
jl
scas
data16
jle
in
test
ret
xorw
movsb
sub
outsl
sbb
les
pop
inc
jge
pop
sarl
add
xchg
fcmovb
jecxz
sarl
xor
add
fwait
out
adc
dec
jb
repz
pop
cmp
dec
sub
hlt
pushf
xor
fidivrl
fisttpl
in
pop
sub
ja
mov
iret
imul
insl
adc
mov
xlat
cmp
repnz
or
fisttps
stos
aad
and
jmp
in
push
test
stc
mov
mov
mulb
adc
adc
sub
or
push
sbb
dec
sub
sub
je
lea
pop
loopne
loope
pop
push
mov
popa
lret
mov
push
and
stos
push
and
cmp
jae
ljmp
js
jno
fs
fbld
push
jno
dec
repnz
out
ja
push
shrb
ja
add
inc
sub
add
pop
sub
mov
mov
ret
cwtl
pusha
fistps
jl
out
push
push
enter
adc
mov
mov
imul
pop
pop
fiaddl
scas
dec
cmp
scas
aas
push
pop
cmp
push
test
arpl
in
cmp
dec
jle
sti
aad
or
mov
pop
sahf
mov
in
out
pop
cmp
fwait
push
sbb
loop
sbb
fs
and
adc
scas
shl
xor
lea
push
dec
adc
sbb
fwait
mov
in
inc
pop
jmp
xchg
fdivl
jnp
mov
adc
scas
fcompl
mov
mov
out
mov
and
leave
sbb
jle
jge
jge
int3
scas
ds
push
dec
insb
daa
xor
inc
mov
iret
cmpsb
in
dec
mov
mov
or
push
aas
pop
add
stos
push
and
cld
sbb
lock
jbe
aam
pop
xchg
and
xlat
xor
mov
mov
loope
imul
arpl
push
push
insb
out
jbe
inc
dec
sub
cld
repz
mov
sbb
and
sbb
inc
or
add
insl
push
or
lods
or
enter
dec
push
negl
sbb
aam
push
and
std
and
cmp
sub
xchg
shrb
test
or
push
pop
popf
xor
ja
nop
imul
adc
push
jle
imul
std
test
mov
sbb
jnp
or
fsub
cmp
test
jmp
pop
cmpsl
in
xor
in
clc
loop
movsl
decl
clc
xchg
inc
pop
push
mov
mov
adc
loope
std
sub
lret
cmpb
sbb
xor
mov
fcom
pushf
lret
in
lret
inc
pop
sbb
jl
cld
add
lahf
xchg
pusha
pop
aam
mov
test
loop
push
and
lea
rcrl
xchg
push
inc
into
in
test
in
adc
adc
xor
pop
rorb
jmp
leave
fndisi(8087
dec
mov
in
xor
std
xchg
iret
es
sbb
inc
sti
push
popf
xchg
daa
loop
int3
cmpb
and
mov
xor
fsubrs
in
inc
or
ja
fildll
sahf
outsl
inc
add
addr16
inc
xchg
cmp
sbb
fistl
add
std
pop
fstpl
push
mov
xor
insl
lea
push
lret
jmp
addr16
xor
mov
dec
cmc
into
inc
push
bound
imul
leave
std
les
repz
sti
pop
imul
inc
std
or
sbb
xor
rolb
add
aaa
test
mov
lea
adc
loop
push
stos
pminub
aad
cmpl
pop
movsb
cli
nop
mov
bound
popf
jo
cmp
cmpsb
cmovne
pop
iret
ret
xor
and
pop
imul
loop
bound
lcall
xchg
ljmp
mov
cmp
int3
mov
aas
popf
lret
movsb
sub
xor
inc
and
negl
lods
and
arpl
or
push
inc
out
lds
popf
jecxz
dec
fcmovnu
pcmpgtw
mov
das
xor
adc
and
mov
arpl
orb
pop
mov
mov
or
inc
jb
lods
mov
scas
mov
std
mov
lods
or
xchg
and
xchg
push
mov
inc
out
int3
mov
mov
mov
movsb
and
push
xor
xor
fidivs
push
aas
out
sbb
adc
popf
lock
xchg
cld
int3
push
pop
dec
repz
insl
out
mov
or
mov
cmc
lcall
ud0
and
nop
xlat
in
outsl
lcall
int3
sbb
add
xchg
pop
aas
mov
mov
adc
jae
bndstx
pop
add
ljmp
and
or
mov
rorl
xchg
shrl
iret
sbb
fadds
xchg
jg
mov
outsb
cmpsl
and
mov
pusha
cld
arpl
in
pop
or
xchg
xor
sub
pop
in
xlat
lret
adc
in
aaa
out
lods
pop
mov
mov
mov
pop
xchg
mov
fdivs
push
lret
mov
arpl
lea
stc
loopne
aas
cmc
cmpsl
mov
fwait
add
jecxz
push
lods
inc
popf
mov
inc
dec
and
roll
mov
xor
mov
mov
loopne
push
mov
repz
or
or
mov
and
inc
push
jo
sub
insb
cld
adc
mov
ds
xchg
dec
sahf
imul
nop
pop
and
mov
rcrb
inc
outsl
js
rol
stc
cwtl
loop
mov
stos
aaa
inc
xor
rcrl
pusha
das
lock
xor
test
clc
ret
add
cmovae
jae
int3
lea
lret
in
xchg
push
sub
xchg
mov
out
int3
push
jp
jl
fs
inc
dec
cmp
dec
outsl
jmp
mov
jb
loope
push
test
fs
and
xor
insb
sub
jmp
clc
push
xchg
dec
out
mov
xor
outsl
flds
mov
aaa
push
mov
outsl
push
gs
popa
fdivrs
mov
outsl
mov
jne
ja
sti
mov
out
xchg
pusha
and
mov
dec
fs
into
or
and
mov
fidivrl
nop
in
push
mov
sub
mov
sub
pushl
cltd
dec
rcll
lret
or
mov
inc
mov
imul
subl
pusha
sub
fnstsw
sub
into
push
gs
mov
push
in
in
mov
push
or
sub
icebp
imul
mov
xchg
add
inc
pop
adc
popf
ljmp
jecxz
mov
subb
jmp
pop
movsl
mov
mov
scas
inc
in
daa
aaa
mov
lods
inc
je
push
inc
add
dec
or
push
mov
arpl
ret
xor
sub
sarl
mov
pop
jp
imul
fimull
jg
jnp
and
push
push
sub
adc
or
ljmp
ljmp
mov
daa
cmp
in
xor
sub
fidivrl
inc
clc
sahf
stos
mov
mov
sub
mov
sub
push
sbb
mov
sub
rcrb
jae
mov
lea
mov
sbb
insb
in
or
imul
mov
cmp
mov
ljmp
jo
fucomp
push
add
sub
sbb
and
xor
pusha
repnz
ja
fists
or
cld
nop
movsl
or
xlat
push
or
adc
js
outsb
lcall
lock
div
adc
mov
in
int
jecxz
out
adc
add
lea
xchg
mov
or
lock
pop
pop
jl
outsl
fadds
fidivs
jle
mov
xchg
hlt
push
cld
push
in
imul
shlb
mov
movsb
data16
notl
das
pop
mov
jge
lds
push
ret
pop
outsl
dec
rol
add
jmp
loop
inc
mov
mov
pushf
je
mov
jbe
scas
push
dec
mov
fisubrl
jbe
das
lock
pop
sbb
int
jnp
xor
push
pop
pop
ret
jno
xchg
pop
dec
cmp
xor
mov
sbb
stc
notl
sahf
cld
push
mov
out
and
lds
jle
cmp
jp
adc
inc
inc
lock
shl
jge
stos
xchg
stos
dec
lret
leave
pop
add
stos
push
clc
sbb
and
insl
fdivs
mov
test
sub
and
jne
cmp
xlat
mov
ret
cli
mov
mov
pushf
xchg
push
xlat
cmp
dec
adc
into
xor
cmpsl
daa
test
sahf
xchg
mov
mov
cmpsb
cwtl
psraw
mov
mov
sub
and
lods
insb
mov
sbb
fwait
mov
dec
adcb
pushf
jb
xor
inc
fdivrl
insl
or
mov
test
xchg
in
jns
xchg
cmpsb
outsb
dec
dec
je
repnz
adc
adc
adc
jb
dec
jge
loop
pop
sbb
inc
sbb
int
scas
pop
nop
jmp
cmpsl
jg
mov
hlt
fisubrl
lock
mov
pcmpgtw
jno
clc
repnz
inc
jl
adc
shrb
jo
push
icebp
pop
mov
sbb
or
aaa
bound
adc
in
add
dec
push
sub
adc
lods
xchg
cli
in
ja
lods
es
iret
dec
sbb
jae
movsl
pop
add
pop
jg
cmp
jge
js
pop
dec
xlat
cmpsb
outsb
pusha
lock
ljmp
pushf
jae
sbb
fcmovnb
inc
push
rcll
jns
jp
sub
ret
xchg
mov
mov
mov
xor
lahf
jns
push
ret
scas
icebp
icebp
vpacksswb
or
mov
and
testb
sbbl
cmp
jmp
mov
cli
push
hlt
pop
cmp
cld
insl
xchg
mov
cmp
push
sbb
mov
push
fsubs
pop
xchg
fwait
in
mov
lods
js
notl
maxps
mov
std
mov
outsl
ljmp
pop
add
push
in
pop
pop
or
test
pop
mov
adc
lock
ja
jo
enter
inc
push
add
mov
sub
add
addl
adc
lock
aas
jmp
das
jecxz
shufps
pop
mov
inc
inc
pushf
adc
lret
xchg
cmc
sti
mov
push
fstl
jnp
jb
inc
and
mov
and
cmp
fmull
cmc
adc
lods
xchg
push
addr16
jo
ljmp
pop
push
xchg
cwtl
fxch
ljmp
mov
popf
out
shlb
orb
scas
stos
sub
aad
push
mov
divl
aam
fsubs
sub
icebp
sub
rol
mov
cmc
inc
fnstcw
and
and
in
in
mov
sar
in
xchg
js
test
or
mov
cwtl
hlt
dec
fimuls
adc
inc
and
mov
fmull
add
sub
addl
xchg
push
sub
cld
scas
call
xor
mov
push
inc
adcb
std
inc
mov
out
pop
jbe
dec
push
outsb
jmp
adc
ss
ret
pop
fyl2x
shlb
out
add
call
inc
push
jbe
lods
mov
xchg
sbb
and
js
fisubs
sub
adc
sub
mov
outsl
sub
ret
pushf
cmp
aad
test
repz
dec
imul
push
mov
sub
ds
fisubrl
rclb
insl
ds
imul
lret
add
pop
inc
cld
mov
ss
xchg
loope
xor
xchg
xchg
sahf
sbbl
int
cwtd
lcall
add
pop
lret
mov
push
mov
icebp
rcll
pop
xchg
and
fs
inc
aas
in
sbb
jo
push
xchg
bound
inc
xor
dec
cwtl
and
ret
loope
jecxz
mov
es
or
add
inc
mov
sub
movsl
movl
inc
test
outsb
push
dec
jo
or
rcll
into
add
orb
in
jecxz
mov
push
jb,pn
pcmpeqb
ficoml
popf
cli
cmp
mov
bound
sub
mov
iret
mov
push
int3
sbb
mov
nop
inc
pop
loope
adc
leave
ret
jl
xor
or
aam
leave
pop
dec
cmp
jle
xor
push
into
push
jne
ja
push
outsb
mov
or
insb
lret
cmp
loop
lcall
xor
out
cmp
add
push
pop
xchg
cmp
xchg
arpl
test
into
xor
mov
sub
popa
push
xchg
cmpsl
or
jns
mov
lods
ja
jge
jae
bound
push
adc
jecxz
ds
push
cltd
sub
pop
ret
mov
adc
adc
adc
loopne
insl
loopne
xor
mov
mov
mov
bound
test
cmp
dec
ds
stos
cli
mov
in
loopne
sub
add
in
push
mulb
outsl
sti
cmpl
and
ljmp
or
xchg
jg
pop
leave
icebp
jecxz
outsb
and
add
mov
jmp
jne
sti
mov
stos
or
inc
nop
mov
xchg
test
orb
jle
aam
mov
push
jbe
push
dec
inc
add
outsl
outsl
scas
aam
mov
andl
loope
sarl
add
and
sbb
cwtl
lahf
cli
mov
push
cmpsb
sbb
aad
jecxz
mov
cmpsb
add
loop
fwait
cmp
fs
in
mov
jecxz
xor
lcall
mov
sub
jmp
aad
shrb
lret
jmp
or
adc
aaa
inc
push
xchg
stos
sahf
xchg
mov
jmp
push
int3
insl
ds
dec
adc
les
ss
out
cltd
cmp
mov
or
add
and
out
mov
pop
repz
push
dec
push
jecxz
adc
insl
mov
in
lods
pop
repz
sarl
lods
push
dec
mov
push
sar
icebp
jl
jle
jge
xor
ret
mov
into
cmp
cli
pop
in
adc
dec
push
out
data16
stos
lock
adc
aaa
ror
aam
xlat
ja
dec
pop
fs
shlb
add
jle
mov
in
dec
mov
sbbl
xor
jb
cld
jle
aas
push
adc
inc
movsl
in
or
and
pop
xchg
adc
xor
inc
bound
leave
jle
mov
dec
xchg
mov
push
mov
movsl
mov
jecxz
cli
sbb
test
aad
push
mov
shll
mov
jg
jns
push
mov
ds
dec
aaa
push
push
push
cmp
jbe
cmp
bound
mov
cmp
inc
xlat
dec
mov
mul
xor
dec
lcall
cltd
daa
pop
mov
push
mov
loop
aas
and
mov
sub
cltd
les
pop
jle
inc
aam
js
int
inc
jp
mov
je
test
pop
test
adc
cld
mov
sub
stos
xchg
inc
push
dec
sub
cmpl
insb
insl
and
jmp
sbb
icebp
push
jns
pop
out
daa
mov
ss
xchg
pop
pop
mov
pop
inc
mov
stc
xor
repnz
mov
shrb
stc
mov
loopne
mov
fistpl
divb
repz
loope
adc
pop
jp
in
adc
movsl
aad
fmul
lahf
cmpsb
and
jmp
cmp
dec
flds
mov
and
dec
mov
add
decl
cmp
push
jns
repnz
adc
push
adc
mov
pop
loop
mov
inc
in
sti
pop
jne
outsl
lock
adc
and
pop
ljmp
stos
inc
xchg
f2xm1
mov
jae
xchg
test
loope
sbb
ret
adc
mov
xchg
xchg
adc
push
xor
clc
mov
sub
jae,pt
in
jo
movsb
adc
add
pop
jnp
fdiv
cmc
hlt
mov
sbb
je
or
das
sbb
in
inc
js
mov
inc
bound
mov
mov
outsl
scas
push
xchg
push
pop
divb
push
sub
pop
xlat
xchg
mov
mov
sbb
dec
dec
jns
push
and
clc
push
xchg
add
out
call
inc
dec
sub
fildll
into
push
fcoms
pop
mov
cli
subb
in
jb
paddw
fcoms
push
mov
or
cmpsl
cltd
xor
aas
cmc
shl
inc
cs
stos
sub
inc
out
sub
psubusb
ror
loope
xor
in
pop
xchg
loop
insl
push
cli
arpl
mov
dec
jle
ficoms
inc
xor
rcrb
stos
adc
imul
mov
rcrl
mov
xchg
test
pop
repnz
ret
sbb
jle
xlat
lret
test
push
fucom
or
out
sti
daa
addr16
stos
jl
mov
jne
or
insb
test
hlt
pop
aad
and
lret
out
daa
adc
jne
sub
fwait
mov
movsl
nop
aam
stos
pop
push
xorb
inc
repnz
sub
xchg
jbe
shrb
js
xlat
loop
xor
mull
stos
sub
mov
iret
xchg
ret
sub
or
rcrl
push
dec
test
bound
data16
popf
enter
shl
jnp
insb
lock
pop
mov
mov
sti
jno
sbb
pop
or
add
mov
jmp
int3
pop
outsb
mov
jge
pop
mov
je
jle
cld
and
mov
fnstsw
loope
jo
and
in
or
hlt
ret
cmc
jno
ret
mov
je
cmpsl
cmpsb
les
je
arpl
fs
aam
jmp
jae
jo
cmp
dec
in
push
test
adc
insb
push
stc
xchg
mov
je
inc
mov
icebp
and
adc
scas
mov
push
lods
xchg
loope
jns
fistpl
push
iret
in
lock
bound
nop
insl
push
inc
push
inc
mov
mov
ljmp
jo
and
xchg
fisubs
adc
fisubrl
jnp
cmp
sbbl
loope
add
push
mov
and
mov
or
add
cmp
push
inc
call
sarb
push
notl
sub
in
cmp
sbb
data16
aaa
push
imul
lods
cmpsl
adc
cltd
xor
les
lret
xchg
loopne
cvtps2pd
movsb
sbb
mov
int
ds
pop
push
or
sub
dec
clc
xchg
jg
aas
mov
mov
mov
adc
jno
xor
mov
sbb
or
or
cmpsb
adc
clc
sarb
and
push
and
out
lea
xor
cmp
add
lock
jg
in
cmpl
mov
pop
dec
gs
inc
shrb
lret
fs
enter
or
inc
sbb
mov
es
std
inc
mov
push
outsb
popa
lods
les
add
in
push
xor
dec
jl
scas
xchg
loope
inc
push
jmp
or
dec
lret
sub
jle
aaa
xor
inc
test
and
inc
sti
fsubl
pop
sahf
mov
pop
es
xchg
rorl
insl
out
mov
push
orl
cli
mov
ljmp
mov
mov
sbbl
cmpsb
repnz
rorb
xchg
or
pop
leave
sbb
mov
iret
lock
xchg
pop
outsl
jno
sarl
popa
or
mov
jl
jge
repz
cs
testl
push
inc
and
adc
jbe
or
and
or
sbb
cs
cmpsl
popf
xchg
adc
mov
jns
andl
fdiv
ret
iret
and
cld
mov
sub
psrad
jne
jmp
data16
xor
mov
lret
and
mov
mov
fcompl
movsl
sahf
femms
mov
das
mov
stos
imul
lret
pop
push
pop
xor
inc
or
mov
loope
xlat
lock
sub
jo
xlat
mov
imul
gs
stos
xchg
jnp
sbb
push
fstpt
arpl
mov
fwait
inc
mov
jno
pop
push
mov
add
mov
ret
adc
lea
imul
adc
mov
or
imul
sbb
lret
out
into
jl
cmp
in
int
xor
shr
push
rcrl
mov
mov
mov
jne
pushf
fwait
in
add
dec
aad
enter
xlat
xchg
sbb
cld
sahf
imul
cmc
sbb
mov
stos
cmpsb
push
mov
test
bound
mov
mov
sub
cmpsb
push
pop
jae
and
pop
cwtl
jo
adc
idivl
stos
jmp
jns
ret
mov
adc
mov
aaa
enter
in
ja
pushf
insb
bound
mov
sahf
ret
orl
les
in
xchg
sahf
das
mov
xor
pop
jae
ja
xor
and
add
add
pop
and
repz
icebp
fs
subl
and
and
inc
push
in
cmpsb
test
push
out
rorb
pop
jge
mov
xlat
jbe
cmp
sub
pop
xchg
push
cmp
jmp
xor
nop
pop
pusha
cmp
adc
dec
cmc
das
inc
unpckhps
loop,pn
shl
xchg
bound
adc
loopne
add
shrl
add
popa
mov
repnz
loopne
outsl
int3
rcrl
adcl
mov
stos
jmp
fucomi
xchg
clc
hlt
cmp
jno,pt
test
test
jne
inc
int
cltd
cwtl
xchg
cmp
mov
or
ret
xchg
pop
add
loopne
mov
add
dec
xchg
pop
xchg
lds
lods
adc
loopne
out
repnz
push
cmp
pop
pop
test
inc
and
xchg
mov
popa
jne
mov
push
xchg
out
lods
insl
mov
sub
mov
adc
push
inc
xor
mov
pop
cltd
hlt
dec
mov
add
add
subl
sub
mov
xlat
sub
outsb
push
aas
aad
or
iret
mov
nop
jns
cmp
jne
aaa
out
lahf
xchg
push
mov
jo
out
cmp
test
ja
mov
dec
jne
jecxz
in
or
fdivl
mov
or
pushf
inc
dec
lret
roll
ret
pop
dec
fisubrl
call
ret
jle
add
xor
sahf
pop
ja
mov
test
add
aas
dec
sbb
add
aas
mov
push
jp
into
into
mov
dec
or
faddl
mov
into
add
push
lret
mov
mov
lock
add
pop
das
roll
cld
add
mov
ja
lahf
mov
push
imul
xor
mov
out
fdivr
mov
pop
ja
hlt
lock
push
add
xchg
sub
shl
and
sbb
sub
test
dec
cwtl
outsl
jl
in
imul
mov
gs
cmp
mov
mov
mov
in
cmp
in
add
mov
pusha
les
mov
inc
lea
cmpsb
lahf
popa
cwtl
es
push
jb
andl
rcll
ret
mov
lret
dec
dec
shll
js
test
add
subb
popf
out
inc
jne
mov
jb
mov
inc
pop
and
adcl
adc
cs
mov
rorl
lods
push
pop
cmp
mov
arpl
mov
add
cli
cmpsb
jle
push
fwait
pop
pop
lock
fcmovnu
es
enter
pop
cltd
mov
push
xchg
add
imul
and
dec
or
mov
movsl
push
outsb
push
popa
cli
lcall
xor
jmp
jne
inc
inc
jmp
mov
popf
leave
cmp
push
aas
push
das
nop
outsl
dec
out
fnstcw
out
sub
das
cli
and
lahf
push
je
aaa
shll
js
subb
cmc
pop
pop
xlat
push
cmp
dec
js
push
fidivrl
test
mov
outsb
fnstenv
shr
les
fwait
scas
ret
mov
add
cmovle
inc
mov
mov
mov
mov
inc
cld
xor
pop
jns
cli
sti
inc
outsb
push
push
pushl
mov
or
xor
out
ficompl
xchg
adc
jb
ret
adc
out
dec
jns
out
jae
cmp
push
aaa
ljmp
adc
repz
cmp
inc
add
xor
rol
addr16
xor
fldcw
fsubp
jmp
inc
loop
xor
jno
xchg
sarl
repz
jecxz
leave
add
js
ja
add
dec
pop
push
sbb
jae
pop
add
clc
xchg
cmpsb
xchg
fsubp
cmp
and
addb
icebp
dec
repz
fstpt
leave
clc
push
int3
xchg
xchg
fdivl
lods
mov
test
mov
jp
xor
sbb
jl
mov
cmc
bound
push
xor
or
and
les
push
jp
rcr
sub
or
adc
lret
aas
insb
adc
jno
xor
stc
adcb
mov
mov
jbe
mov
push
or
in
aad
in
imul
repnz
adc
es
sarl
cmc
insb
and
es
int3
lea
dec
popa
test
xchg
xor
cld
xchg
pusha
adc
in
movsb
jb
jecxz
jo
push
in
adc
int
jb,pt
sbb
mov
mov
sbb
jp
cmp
dec
jo
andl
cltd
andb
ror
daa
jl
daa
cmp
add
rclb
int
mov
es
test
or
xor
lahf
fdivrl
pushf
cmc
insb
mov
dec
pushf
sarb
shlb
adc
cltd
ljmp
mov
dec
adc
icebp
sbb
mov
xor
sub
js
lea
mov
loope
shl
out
scas
jle
repz
testl
es
pusha
sti
jecxz
pusha
push
pop
ret
cli
lock
jnp
or
mov
mov
int
jecxz
cli
in
xchg
cmpsb
stos
xor
lds
or
mov
inc
push
pop
stos
int
sub
mov
push
rcrl
push
add
jnp
xchg
inc
into
mov
dec
mov
push
jecxz
int3
into
xchg
jno
jno
mov
sbb
adc
inc
lods
pop
cmc
pop
pushf
dec
add
mov
sub
test
mov
ds
incb
pop
jae
and
xchg
add
mov
js
sub
lret
sub
les
shl
add
inc
js
insb
mov
rcl
ret
and
mov
push
hlt
xchg
ret
pop
sub
sub
mov
mov
shrb
jmp
sahf
out
pop
dec
mov
adc
sub
or
iret
jnp
jge
mov
fwait
clc
lods
mov
fstps
outsb
adc
lods
std
mov
fdivl
xor
mov
inc
jmp
aam
sahf
xchg
mov
test
mov
and
mov
jb
pop
jns
cltd
sahf
fsts
ja
add
daa
cmpsb
shl
sbb
and
xlat
or
es
xchg
lods
dec
roll
cs
mov
ja
les
out
mov
xorl
add
movsl
rorl
sub
cmpsl
int
jp
shll
cmp
arpl
jecxz
add
cwtl
mov
pop
lret
sarl
pushf
or
mov
bswap
out
arpl
arpl
in
test
push
roll
daa
inc
fwait
icebp
std
xchg
jo
adc
mov
imul
hlt
fnstenv
push
sub
jno
lock
popf
test
in
call
add
jle
fwait
data16
outsb
cmp
loopne
sub
sub
into
hlt
stos
push
lods
je
pop
push
xchg
jo
cvtdq2ps
repnz
lahf
dec
sbb
sbb
jns
sahf
adc
or
mov
shr
inc
out
pop
call
das
inc
stos
shlb
lea
es
aas
int
adc
adc
stc
ljmp
test
loope
std
int3
jg
lods
pop
int
sbb
adc
mov
test
cld
pop
push
je
push
sub
cmpsb
sub
mov
mov
jl
leave
div
aam
and
outsb
inc
add
xor
sub
arpl
in
inc
pushf
clc
jg
out
xlat
repz
hlt
shrb
sub
int
cli
inc
ss
icebp
and
dec
imul
mov
xor
jecxz
cli
imul
jmp
mov
push
sub
mov
daa
in
ret
add
faddl
sbb
mov
cmp
loopne
cld
xlat
out
cli
jns
or
stos
push
movsb
jae
mov
hlt
mov
loope
movsb
sbb
inc
cmp
test
cmp
mov
std
cmp
push
adc
shll
sar
add
and
mov
adc
jne
cwtl
ja
xor
cld
pop
adc
test
xor
fiadds
push
adcl
fwait
cwtl
popa
outsb
cltd
xor
push
outsb
mov
pop
jge
push
fsubrs
rclb
mov
pushf
push
xchg
jmp
sub
rcrb
mov
fwait
jg
and
rorl
adc
push
sbb
mov
fidivrl
mov
inc
adc
or
jg
xor
xchg
add
repz
arpl
push
aam
adc
bound
add
mov
shlb
lahf
stos
and
rol
sarl
popa
pushf
pop
jmp
lret
jmp
test
cmp
aaa
sbb
lods
mov
fs
in
adc
mov
cmpb
mov
jae
sti
lods
xor
lods
inc
iret
xchg
push
xchg
dec
fcomp
push
push
repnz
cmp
rcrw
mov
dec
fdivl
clc
inc
sbb
adc
xchg
or
shlb
adc
xchg
cwtl
mov
arpl
fcmovb
mov
mov
test
out
dec
jmp
lock
lret
sar
jmp
mov
mov
and
push
fistps
fildll
ret
mov
jecxz
dec
je
pushf
jb
xor
test
inc
stc
inc
pushf
adcl
ja
rorl
sti
mov
push
cmp
insl
int3
push
scas
or
data16
or
add
lret
lcall
fisubrs
dec
mov
in
lahf
adc
mov
das
out
sub
popf
pop
mov
xlat
cli
jnp
xchg
pop
mov
dec
push
adc
cmp
pop
jge
xor
xchg
imul
ss
jo
xchg
pop
dec
fdivrl
xor
push
xor
jmp
or
xor
insl
orl
jae
or
and
pop
mov
data16
popa
insl
pop
mov
rcrl
inc
pop
imul
mov
jno
jo
mov
stos
fists
pop
fcmovb
xor
jle
cmc
in
or
data16
and
xor
adc
add
mov
test
lock
push
dec
mov
call
push
push
xor
dec
sbb
call
popa
mov
lcall
je
xor
sub
xorb
inc
mov
jnp
clc
test
cld
insl
cmpsl
sub
jecxz
call
and
pop
and
in
cli
sti
flds
cmp
add
out
dec
rolb
push
stc
xlat
pop
fldt
cmc
dec
dec
mov
loop
push
push
jp
clc
out
dec
inc
cltd
into
pop
movb
jo
jecxz
hlt
lds
pop
hlt
adcb
in
jae
arpl
jb
cld
cmp
popa
sub
daa
aad
cmp
push
test
clc
mov
rol
xchg
pop
call
mov
imul
aad
push
cld
movl
stos
mov
bound
shll
or
jge
les
or
push
aam
jbe
outsb
inc
fcmove
push
outsl
in
dec
mov
mov
mov
test
mov
sub
sub
lcall
jmp
insb
out
add
jmp
push
lcall
sbb
stos
mov
push
push
mov
inc
sub
cs
or
out
adc
mov
std
leave
cmc
pusha
or
inc
into
jmp
clc
jbe
mov
push
adc
and
push
cmp
push
push
and
xchg
or
mov
sbb
add
mov
lea
dec
ret
roll
pop
push
jo
xchg
popf
popl
addb
sbb
int3
paddsw
adc
insb
push
mov
loop
test
dec
xorl
loope
nop
fmuls
pop
dec
out
jl
cld
out
addr16
or
sbb
test
int3
lahf
ljmp
mov
inc
subb
movsl
out
pop
clc
mov
nop
pcmpeqb
mov
inc
xlat
out
mov
sti
je
mov
sahf
jne
push
ja
movsl
jb
out
test
test
sub
les
push
mov
fistl
jbe
add
cs
pop
mov
mov
outsl
xchg
xchg
clc
imul
push
mov
cmpsb
subb
dec
push
sbb
daa
inc
cmpsl
cmpl
loope
cwtl
stc
movsl
xchg
sbb
xor
lds
mov
xor
fs
xchg
mov
inc
cwtl
into
xchg
insb
decb
and
pop
stos
repnz
pop
aam
test
cs
lret
cmp
repnz
nop
clc
call
lock
mov
dec
fisubs
leave
pusha
add
notl
loopne
mov
ret
dec
stos
push
sbb
sahf
dec
or
shll
pop
dec
call
mov
mov
push
fnstenv
sub
xchg
cltd
jmp
in
fistps
mov
and
lret
cmpsb
std
sub
outsb
pop
xor
ss
and
xchg
in
in
idivb
xchg
mov
jp
push
pop
jnp
inc
mov
fsubr
xchg
andl
sbb
add
fs
out
cmc
out
pop
sub
out
hlt
jmp
cwtl
inc
fsubrl
nop
imul
jmp
addr16
push
mov
mov
test
cmc
loopne
nop
mov
or
cmp
push
or
hlt
fisubrs
adc
xchg
clc
addr16
sub
mov
push
xchg
dec
cmp
sbb
.byte
cmpsb
loope
xchg
jo
add
add
add
jb
add
sbb
add
call
add
add
add
add
add
jno
add
jb
add
jb
add
push
dec
inc
dec
xor
cs
insb
add
inc
inc
dec
xor
cs
insb
add
push
inc
push
push
cs
insb
add
jae
arpl
xor
cs
insb
add
add
shlb
add
add
add
add
shlb
add
add
add
add
popa
jo
insb
insb
outsl
arpl
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
pop
jno
add
add
add
add
xorb
mov
add
add
shlb
shlb
add
jno
add
jno
add
add
add
add
pop
jno
add
add
add
add
xorb
mov
add
add
shlb
shlb
add
jno
add
jno
add
add
add
add
add
pop
imul
insl
add
add
js
je
add
pop
pop
arpl
inc
imul
gs
je
add
add
arpl
insb
outsb
add
add
addr16
popa
imul
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
add
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
add
pop
pop
jo
pop
insw
outsl
fs
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
pop
gs
gs
pop
push
gs
add
add
pop
arpl
je
outsl
insb
data16
add
add
add
add
add
and
add
add
add
add
inc
bound
je
popa
je
add
add
add
add
inc
jb
add
add
add
add
jo
jb
outsl
outsb
popa
je
push
arpl
imul
js
add
incl
inc
add
inc
add
add
imul
gs
pusha
lcall
lret
and
lret
add
pop
aam
jp
sub
dec
adc
mov
and
jp
jmp
nop
push
test
test
mov
scas
pop
sbb
xor
jg
push
inc
push
add
add
push
or
cmp
cld
scas
or
shr
movsl
sbbl
aad
fs
stos
mov
mov
pop
ret
iret
int3
sbb
lahf
in
mov
mov
mov
mov
lcall
sar
hlt
test
ficoml
icebp
push
dec
fidivs
outsl
mov
jg
lods
adc
popf
mov
sar
aaa
int
mov
gs
jle
mov
dec
dec
es
cmp
mov
push
call
dec
inc
xchg
sub
arpl
push
sti
jg
stos
inc
xchg
iret
mov
cmp
test
push
mov
js
sub
call
mov
daa
ljmp
cmp
dec
test
mov
mov
add
mov
lcall
jl
jge
jnp
iret
outsb
sub
sub
into
test
shlb
push
clc
mov
fstpt
jne
sti
enter
mov
hlt
je
rolb
rcl
and
ror
fnsave
mov
cmp
jle
cmp
inc
cli
scas
cmp
sahf
loopne
or
cmp
movsb
pop
dec
mov
lds
and
out
lcall
daa
push
addr16
xchg
inc
pop
push
jno
cmpl
pop
push
jnp
xor
andb
in
imul
iret
mov
jge
and
add
jge
hlt
dec
inc
pop
dec
aam
daa
fwait
out
xchg
jecxz
push
mov
sbb
out
sbb
mov
mov
daa
ljmp
mov
add
rcl
mov
xlat
imul
cwtl
outsl
fimuls
dec
scas
out
mov
out
mov
pushf
sub
jl
gs
insl
xor
mov
mov
roll
pop
xorl
jecxz
in
enter
cli
jg
push
imul
or
in
add
xlat
push
shrb
sub
addb
in
minps
dec
rcrl
xchg
pop
and
dec
cltd
cmp
and
std
stc
sub
pop
cmp
push
and
sbb
js
pop
add
sub
les
je
lds
adc
xor
neg
fsts
mov
push
cmp
dec
out
jae
pop
mov
ror
insb
and
mov
out
sti
sbb
pop
adc
xchg
popa
clc
xchg
mov
test
fidivrs
pop
mov
ret
or
or
jb
subb
inc
pop
inc
jecxz
out
pop
repz
fbstp
lcall
out
push
pop
sbbl
mov
es
mov
mov
push
xor
jns
sbb
mov
inc
jmp
mov
adc
push
xchg
fs
sti
fcmovnu
and
repnz
dec
ljmp
sbb
les
popf
mov
outsb
adc
adcb
mov
push
call
lar
add
jne
je
mov
mov
inc
or
repnz
xchg
xor
push
pop
dec
fistpll
jle
out
xchg
mov
lret
loop
ret
mov
add
cmpsl
rcr
dec
or
mov
fildll
fsubrp
mov
cmpl
push
and
cwtl
mov
sbb
dec
cmp
xchg
test
sbb
mov
rcll
das
xlat
fisttpl
loope
mov
push
xlat
inc
xchg
and
jo
mov
cmp
xchg
xchg
dec
add
mov
mov
lret
inc
mov
dec
aas
pop
shlb
out
add
jo
push
xchg
jg
inc
sbb
pop
push
icebp
shlb
xor
loope
push
mov
imul
popf
jl
cs
testl
mov
lods
mov
dec
mov
or
lret
or
push
jnp
test
cmp
stos
xchg
outsb
popl
xor
xor
jns
sbb
pop
lods
push
mov
xchg
mov
dec
inc
rcrl
add
mulps
xor
in
call
pop
inc
loope
lahf
pop
in
sarl
ljmp
or
jp
or
mov
hlt
aad
inc
popa
or
mov
dec
jge
xchg
sbb
mov
test
cmc
rorb
adc
push
mov
jge
leave
movsb
xchg
adc
adc
cwtl
enter
push
sub
push
sub
sbb
les
xor
call
dec
and
add
shl
aas
sub
scas
jo
add
nop
pop
mov
scas
pop
mov
add
jp
fsubl
ret
dec
cs
xchg
or
insl
andb
xchg
je
mov
jmp
jge
dec
add
inc
jmp
imul
push
sub
xchg
xor
lret
stos
and
repnz
push
xchg
xchg
mov
mov
dec
add
jo
add
aad
or
push
insl
decb
jecxz
xor
out
lods
or
mov
mov
cmp
pushf
jno
jns
aas
or
push
mov
inc
mov
lret
mov
lret
pop
lret
or
sbb
sbb
imul
fldt
and
out
ret
add
sbb
mov
add
add
test
mov
add
add
add
add
add
add
adcb
add
nop
add
addb
add
test
mov
add
add
add
add
add
add
add
pusha
add
andb
add
add
test
mov
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
sbb
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
nop
nop
dec
add
outsb
add
push
add
add
add
add
popa
add
jo
insb
add
and
jo
jb
outsl
add
jb
popa
add
add
dec
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
add
and
jb
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
nop
nop
xor
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
dec
add
push
add
inc
add
add
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
