adc
mov
testb
sub
add
rolb
add
add
fdivrp
incl
xchg
add
mov
mov
pop
add
add
or
mov
mov
dec
dec
rol
add
or
shrb
sbb
add
fwait
idiv
filds
fdivrl
mov
fs
jl
mov
lea
xchg
mov
add
add
sti
outsl
sti
push
add
jg
and
or
pop
mov
lcall
or
add
outsb
add
inc
jg
sti
iret
add
cmp
cmp
test
pop
fadds
jno
add
outsl
out
out
adc
pop
and
lds
add
adc
fistpll
add
mov
adc
sbb
add
pop
loopne
add
push
sub
pushf
sti
mov
or
mov
repz
hlt
add
sbb
sub
ret
lds
push
imul
ja
in
ret
add
add
scas
es
inc
dec
orl
add
in
xor
add
dec
mov
add
out
outsl
decl
daa
xor
add
add
loop
pop
xchg
adc
jg
incl
add
mov
addr16
imul
pop
into
arpl
mov
ja
sbb
jecxz
adc
je
icebp
fiaddl
xor
jae
pop
nop
inc
push
add
dec
or
pop
push
cmp
sbb
lahf
adc
ss
incl
add
pop
and
jbe
ret
clc
add
dec
ja
insl
fistl
lods
pop
sbb
rolb
push
incl
push
sbb
mov
xchg
pop
jle
mov
std
insl
stc
mov
xchg
mov
or
lds
fiaddl
pushl
sarb
xchg
dec
pop
test
mov
dec
jle
pop
add
inc
int3
ds
out
or
mulb
mov
loopne
mov
mov
or
outsl
and
mov
sbb
ljmp
into
pop
neg
fcmovnu
mov
mulb
or
mov
sub
fsubrs
sbb
mov
mov
std
imulb
xchg
pop
and
mov
cmp
pop
cs
sub
mov
xor
pop
pop
push
and
stos
cwtl
inc
sub
push
xchg
pop
iret
mov
cs
add
sbb
jo
pop
mov
xchg
push
adcb
insl
stc
jmp
pop
add
imul
daa
imul
fildl
sub
movsb
add
mov
or
pop
fdivr
lea
rcrb
cmp
xchg
addl
mov
dec
pop
shll
outsw
inc
fists
xchg
add
add
sub
jne
outsl
mov
in
test
or
adc
xchg
add
cwtl
mov
cmc
test
cmpsl
xchg
btc
aam
pop
xchg
das
sbb
in
and
orl
ret
fbstp
add
add
dec
cli
test
jl
xchg
std
std
divb
jecxz
lcall
adc
jne
std
inc
fildl
dec
cld
test
add
push
cmp
pop
mov
test
mov
add
sarb
or
pop
jl
fsubrl
leave
cmc
mov
mov
push
inc
lock
push
xor
cli
push
lahf
sbb
popf
jb
pop
pop
fidivl
ljmp
add
out
ret
xchg
add
aaa
cmpsl
add
and
push
lahf
jecxz
ret
inc
mov
dec
mov
xchg
outsl
lds
xchg
lcall
push
mov
cwtl
inc
xchg
add
mov
ss
or
dec
lret
xor
mov
repz
mull
test
xor
fildl
arpl
lds
xchg
daa
jl
push
add
push
loope
clc
adc
mull
data16
pop
push
pop
aas
mov
aaa
jmp
dec
aas
push
mov
aaa
ret
pop
add
xor
loope
fistpll
scas
mov
fidivl
data16
out
out
outsb
jge
mov
lds
stc
pop
or
sbb
pop
pusha
or
ja
clc
and
movsl
and
sbb
add
jno
fnsave
push
dec
popa
mov
dec
les
add
js
sti
push
stc
fbld
dec
xchg
adc
push
ja
das
adc
or
icebp
test
dec
int
or
js
mov
cwtl
mov
scas
dec
cld
mov
inc
cmp
xchg
jmp
push
pop
pop
mov
jle
sbb
mov
std
lea
jp
and
add
mov
push
orb
mov
subb
imull
xchg
call
push
test
xor
pop
sbb
mov
and
hlt
fcmovu
das
cld
ja
cmp
mov
or
lods
xchg
mov
ficomps
pusha
jl
xor
jmp
pop
ss
inc
iret
xor
jle
push
xorb
push
sbb
inc
orl
movsl
das
std
fwait
add
ss
push
js
ret
insl
jl
pop
lods
push
jne
repnz
lret
jecxz
mov
aad
mov
shll
pop
in
sbb
push
movsl
push
or
mov
sti
sbb
inc
stc
mov
xchg
clc
jno
lret
aam
xchg
lret
sbb
or
cwtl
and
jne
int3
test
xchg
add
lods
jg
adc
jmp
loop
xor
jbe
push
popf
loope
dec
movb
jae
add
idivl
push
push
push
adc
xlat
mov
clc
and
data16
pop
pusha
pushf
dec
daa
or
jne
pop
push
mov
or
xchg
fcmovnbe
push
or
and
loop
xchg
daa
iret
push
mov
xchg
orb
gs
mov
xor
std
or
daa
roll
cli
xor
aas
enter
pop
fmuls
push
data16
cmpsb
sub
test
adc
adc
aam
lea
jns
xorb
ficoml
jne,pt
popf
stc
fldenv
mov
pop
scas
fists
aam
ret
sub
je
xor
ja
mov
mov
pop
add
xchg
shlb
mov
into
pop
mov
xchg
arpl
aaa
mov
push
loope
out
fucomi
addr16
mov
cmp
inc
int
xor
and
mov
sbb
mov
mov
mov
xor
add
mov
push
outsb
mov
dec
lds
or
xor
xor
mov
popf
mov
mov
gs
ret
jo
xchg
popaw
inc
ret
decl
push
into
cmp
pop
xor
cmp
lahf
sub
iret
movsb
ljmp
iret
mov
push
push
cmp
sub
pop
pop
mov
push
mov
or
or
sbb
andb
pop
faddp
jnp
test
jp
push
xor
aam
jle
fwait
push
subl
jmp
inc
mov
rcll
mov
fcmovnbe
lds
or
sbb
pop
insb
es
loop
addr16
lret
int3
daa
or
jo
scas
push
xchg
push
lret
lods
xchg
negb
scas
sbb
imul
jge
mov
insl
mov
mov
adc
cmp
in
stc
andb
mov
xor
out
dec
inc
inc
sahf
xor
int3
into
fiaddl
sti
cmc
lahf
mov
push
and
inc
cmpsl
cmp
pop
xor
cmpb
ds
sbb
lods
das
adc
inc
or
iret
pop
xor
adc
push
dec
pop
mov
and
aaa
test
mov
mov
mov
add
pusha
add
jge
lahf
addr16
pushf
add
mov
movb
imul
insl
clc
inc
adc
lods
xchg
ds
rcrb
pop
sbb
mov
mov
mov
lcall
or
add
mov
add
jo
frstor
push
test
sub
adc
das
jl
lds
daa
into
adc
sub
xchg
std
into
dec
test
notl
adc
adc
sub
enter
mov
mov
pop
mov
pop
push
xor
pop
icebp
lock
je
sbb
pop
push
jno
dec
push
pop
pop
fsub
mov
adc
xchg
mov
loope
xchg
sbb
xchg
dec
pop
push
mov
mov
imulb
push
sbb
xor
das
loopne
mov
outsl
fbld
test
cltd
push
dec
hlt
adc
adc
mov
push
jns
lret
rolb
or
rorl
fisubrs
jl
adc
jns
pop
mov
lods
pop
clc
lods
mov
xorl
dec
xor
mov
clc
das
dec
repnz
pop
or
gs
aaa
and
add
sti
jecxz
dec
inc
mov
outsl
cwtl
in
lods
mov
mov
cmc
mov
icebp
push
inc
pop
and
call
push
sbb
data16
ret
jbe
sbb
adc
lea
xchg
adc
mov
cwtl
cmp
xor
xchg
dec
mov
mov
incb
pop
mov
adc
hlt
sbb
enter
and
sub
mov
lea
pushf
mov
mov
add
lret
inc
dec
sub
loope
mov
lahf
dec
outsl
ljmp
imul
adc
mov
push
stos
inc
and
cmp
pushl
addr16
xchg
xchg
imul
adc
nop
pop
sbb
mov
sbb
mov
aas
imulb
add
aam
insb
enter
pop
lds
int
fisubrl
push
add
mov
dec
sbb
add
jb
mov
push
xor
mov
pop
xchg
enter
sub
adc
push
addb
xchg
fcmovu
ss
cwtl
inc
icebp
pop
dec
pop
adc
xchg
out
dec
insl
iret
mov
or
cwtl
int3
jb
scas
and
ds
xor
or
add
decb
cmp
sti
jecxz
fcmovnbe
jbe
adc
sub
jb
sbb
lods
test
inc
mov
or
test
jle
xchg
scas
je
inc
shl
fcompl
pop
mov
jmp
pop
clc
mov
scas
lret
test
aad
out
cli
test
cltd
popa
or
mov
push
es
jge
adc
add
mov
movsb
inc
pushf
inc
sbb
mov
popf
rorl
add
repnz
and
outsb
mov
pop
sahf
mov
stc
divps
pop
movsb
inc
xor
notb
jne
pop
loopne
pop
fidivrl
lret
scas
jo
pop
popf
jle
outsl
fldt
push
fdivl
enter
enter
pop
sub
clc
popa
fildl
xor
dec
das
pop
dec
cld
test
pop
iret
sub
clc
sbb
ja
sub
and
hlt
pop
es
test
jmp
xor
mov
pop
adc
mov
pop
sub
scas
inc
jle
xchg
mov
ja
repz
push
fadd
mov
sbb
int
testl
pop
out
sbb
rclb
out
mov
int
insl
pop
imul
sbb
test
insb
mov
test
push
in
jmp
leave
and
div
outsl
jo
fwait
adc
and
ss
mov
cld
pusha
cmp
dec
sbb
es
xchg
das
adc
andb
inc
pop
mov
and
jle
pop
subl
pop
mov
lcall
ljmp
lahf
push
pop
add
jmp
mov
call
sbb
lret
jle
push
out
ja
pop
popa
jb
scas
or
adc
popf
data16
clc
cmp
pop
jns
mov
leave
inc
int
mov
inc
inc
addl
jecxz
aas
movsb
push
mov
outsb
test
dec
daa
jmp
jl
and
or
loop
mov
test
loope
mov
out
in
outsl
jecxz
add
dec
xor
dec
xchg
push
das
je
movsl
cmpsl
rep
cmp
jp
outsb
gs
clc
insb
addr16
es
ja
cld
jg
and
sbb
mov
ror
mov
arpl
es
frstor
sub
inc
fucomi
add
jmp
into
add
ret
out
ret
int3
clc
inc
ret
xor
add
inc
pop
out
pop
sbb
fildl
stos
or
sub
std
push
pop
add
popf
xor
ljmp
xchg
pop
cmp
xlat
mov
sub
or
rol
adc
mov
push
inc
push
pmuludq
cs
iret
add
std
mov
enter
jns
or
fwait
loope
xor
pop
js
test
jne
or
idivl
verw
inc
sbb
test
jecxz
push
jg
cmp
cli
mov
and
es
push
jo
and
div
outsl
insb
dec
lcall
inc
ret
inc
lock
in
pop
jle
insb
ret
je
insl
mov
repz
lock
leave
jl
pop
xchg
adc
lods
dec
pop
lea
lea
movl
cltd
mov
pop
pusha
stc
inc
mov
or
push
xchg
push
xor
insb
testl
add
cmp
ds
push
clc
int
push
or
xchg
dec
subb
lock
ds
sub
mov
adcb
or
push
gs
push
mov
ljmp
nop
insb
call
jnp
jb
mov
nop
js
adc
pop
out
push
xchg
aas
std
loopne
cltd
pop
dec
out
dec
outsb
adc
pushf
mov
sub
ja
sub
xlat
iret
repnz
and
fisubrs
std
orb
dec
jmp
mov
imul
jbe
rclb
andl
es
insb
ljmp
scas
cmpl
lock
and
imul
scas
iret
fnsave
in
mov
cmpsb
outsl
adcb
call
jp
xor
nop
jae
lock
mov
sar
cmpsb
in
xor
into
xor
add
jl
add
and
xor
dec
mov
cmp
fistpl
in
ret
enter
repz
fwait
pop
pop
mov
add
add
or
out
test
or
jp
jmp
idivb
movsl
pop
dec
xchg
imul
scas
outsl
jecxz
fisubrl
sbb
mov
xor
jo
jge
outsl
pop
mov
mov
push
lock
sbb
or
and
xor
cmp
push
mov
sbb
loope
inc
xchg
insl
pop
cmp
sub
imul
pop
cmc
inc
pop
dec
fcompl
into
fnstsw
cmp
pop
test
dec
jno
or
mov
or
mov
std
pop
mov
lock
sbb
stc
pop
cmpsb
cmc
jg
in
stos
and
and
xor
push
mov
and
dec
add
lahf
shrb
ficompl
cli
cmp
inc
bound
or
adc
movsl
jge
xor
dec
sbb
sbb
and
push
sbb
sbb
js
stos
movsl
into
nop
xchg
and
insl
idivl
mov
sahf
push
movsb
mov
push
test
icebp
gs
jmp
inc
sub
xchg
mov
mov
fisubl
mov
insl
jnp
data16
push
in
add
pop
pop
push
sbb
repnz
sbb
fisubrs
or
sub
push
xor
mov
jb
pop
or
lea
cwtl
mov
les
or
and
movsb
lds
push
jg
cmpsl
aas
in
cmc
inc
dec
or
sbb
loopne
jp
insl
sbb
add
subb
sub
outsb
sub
pop
cmpsb
loope
lcall
cs
shlb
and
xor
inc
cmp
adc
pop
aaa
inc
cltd
out
pop
mov
xchg
test
mov
dec
mov
out
aaa
icebp
lods
rcrl
sub
test
ret
push
mov
xor
or
rcrb
jg
jbe
repnz
lret
jmp
push
mov
pop
mov
and
adcl
hlt
mov
cwtl
dec
pop
or
outsb
sti
test
das
and
nop
notb
adc
xor
xchg
out
push
xor
aad
jmp
dec
inc
ret
sbb
sti
je
lret
inc
ret
adc
push
and
stc
outsl
fisttpl
xorl
push
fiadds
inc
outsl
pop
movsb
push
push
jmp
insb
mov
mov
jbe
scas
and
or
add
mov
mov
scas
cltd
adc
cltd
icebp
add
jbe
jae,pt
xor
adc
push
int3
lock
repz
push
push
lods
cmp
daa
push
or
mov
inc
cmp
cmpsb
shrl
push
mov
loopne
pop
sbb
mov
dec
clc
gs
pop
cmp
push
cmp
subb
sbb
xor
pop
mov
sbb
fiadds
shrl
roll
mov
mov
nop
rorb
scas
arpl
fwait
mov
pop
dec
mov
xor
pop
cs
push
sub
outsl
je
pop
mov
cmp
xor
ror
mov
daa
or
fists
test
pop
jg
das
or
mov
add
cmp
icebp
adcl
stos
mov
insl
dec
mov
fs
adc
dec
xchg
mov
cmp
push
and
std
pop
lea
imul
inc
pop
aam
xchg
jg
int3
adc
push
pusha
mov
pop
xor
std
in
mov
aad
sti
add
jae
mov
mov
out
mov
or
loopne
mov
adcb
bound
cmc
out
mov
push
fdiv
lock
fld
jl
data16
mov
iret
sti
push
enter
mov
xchg
dec
in
or
or
push
add
mov
mov
cli
aaa
jo
mov
sbb
into
mov
sbb
jo
jne
rorb
cmp
shlb
xlat
push
and
add
push
frstor
mov
subl
bound
ds
aaa
ficoms
insb
add
repnz
xor
fidivrs
mov
pop
push
lock
xchg
push
mov
bound
adc
dec
push
stc
adc
push
mov
mov
jnp
call
pop
mov
ds
inc
pop
arpl
outsl
mov
or
cmpsb
mov
mov
pop
loopne
aaa
adc
push
jl
inc
or
cltd
ds
nop
xor
sub
mov
int
inc
adc
loop
jnp
les
int
or
lock
enter
mov
jl
movb
jmp
xor
cld
or
sarb
and
ret
xchg
mov
mov
jg
inc
nop
nop
mov
fxch
insl
fisubl
inc
xchg
sub
xor
jbe
mov
or
push
xor
insl
mov
xorb
mov
jno
push
andl
mov
lret
sub
repnz
cmpl
push
push
adc
fdivs
xchg
mov
fdivs
lods
push
and
jl
imull
jg
lcall
ret
lret
addb
pop
jmp
out
out
divl
fistpll
cmpsl
sahf
aaa
sub
mov
dec
clc
insl
std
test
push
ds
sbb
stos
add
cs
push
jne
lock
xchg
pop
clc
or
sbb
call
dec
add
and
divb
fistl
pop
sbb
inc
mov
dec
add
mov
sbb
push
push
test
sub
imul
xchg
loope
or
test
jle
es
inc
push
pextrw
test
sbb
cld
and
dec
pop
pusha
mov
sbb
or
pop
fcoms
mov
add
test
dec
loope
in
cmc
mov
loope
dec
xchg
negb
add
jle
ja
sub
popf
ret
or
sti
push
mov
repnz
pop
insb
cld
add
and
mov
cltd
inc
mov
fimuls
mov
mov
les
in
mov
xchg
add
repnz
scas
outsb
insl
adc
jle
dec
or
and
inc
push
cltd
fwait
sbb
dec
sub
push
aaa
outsb
fstl
lea
cs
sbb
fimuls
push
inc
fisttpl
sub
pop
adc
jae
sbb
pop
add
pop
xchg
sbb
out
or
mov
inc
mov
mov
decl
inc
and
sbb
push
cmp
imul
xor
cli
inc
sbb
movsl
add
jns
scas
outsb
shrb
pop
push
inc
daa
lods
mov
fs
mov
jge
sbbl
rcrl
dec
fwait
jg
inc
adc
sbb
jp
pop
cmp
ret
push
pop
fidivrs
xor
fistpll
cmp
ret
testb
and
mov
movsl
jmp
gs
sub
cli
shrl
mov
push
add
int
mov
out
ret
and
lds
sbb
insl
mov
add
and
imul
and
mov
dec
inc
scas
sub
push
mov
or
mov
iret
popa
cmpsl
in
cli
sbb
test
fcoms
je
xchg
mov
or
repnz
rcrb
addr16
in
pusha
mov
add
mov
mov
pxor
add
outsb
popa
adc
inc
and
das
js
sbb
mov
pop
inc
imul
xchg
pop
stc
div
dec
pop
jle
hlt
pop
outsl
sub
sub
cmp
subb
stos
shll
out
outsl
jg
pop
lea
push
xchg
dec
ljmp
add
mov
dec
dec
and
imul
call
mov
rolb
dec
jl
hlt
or
xchg
cli
hlt
sub
das
std
or
adc
jbe
sbb
cmp
jge
inc
das
fdivl
and
js
pop
cmp
ret
mov
add
push
pop
icebp
fsts
inc
sub
mov
mov
mov
mov
stos
mov
lock
cs
or
fadds
shll
jg
push
jne
jecxz
adc
clc
inc
std
sarl
jno
jbe
add
push
repnz
xchg
notl
les
xchg
clc
jbe
lret
pop
pop
lock
insb
jle
cmovg
push
mov
jno
add
femms
dec
or
sbb
mov
dec
mov
cmp
roll
arpl
xorb
mov
sbb
cwtl
jno
mov
push
pop
jne
push
nop
ret
je
sub
xor
sbb
test
mov
lret
ja
iret
add
call
inc
jnp
test
sahf
mov
scas
fcmovne
inc
std
cwtl
xlat
xchg
mov
pop
das
shrl
rcrl
mov
lcall
sti
mov
inc
les
cmc
and
fucom
lret
jno
sbb
xchg
lods
sbb
loopne
bnd
sub
in
mov
xchg
sbbb
fwait
push
mov
jg
movsb
jne
push
dec
xchg
xor
inc
mov
jb
addl
xor
inc
ds
imul
roll
mov
fldt
jb
adc
push
adc
popa
mov
and
testb
imulb
lods
nop
sahf
cmpb
mov
mov
in
xorl
movsb
pop
inc
push
sti
mov
lock
or
cli
or
sub
leave
mov
pop
mov
add
xchg
mov
pop
lods
cmp
test
call
das
inc
cmp
pop
xor
adc
fistpl
mov
ss
add
out
push
movsl
ja
jle
icebp
rol
movsb
jb
ja
popf
cmp
fstp
rcl
xchg
add
unpcklps
cmp
fdivp
mov
enter
mov
jb
insl
mov
add
test
das
cmpsb
push
aaa
push
push
loop
scas
xchg
cmp
cmp
std
ja
adc
orb
lahf
andl
test
loopne
lahf
out
adc
shlb
jne
xor
imul
fists
cld
adc
mov
sti
jns
insb
outsl
loop
test
mov
orl
xchg
add
nop
xlat
jo
fnstenv
mov
cmpsl
sub
divl
andb
inc
in
lds
scas
cli
mov
loopne
add
or
mov
sub
mov
or
hlt
lcall
pop
fs
xchg
mov
je
outsl
cmpsl
push
rcr
mov
add
jne
pop
ljmp
or
fiaddl
cmpsl
loopne
lcall
and
push
or
in
cs
loop
jmp
inc
sbbb
add
lea
data16
sbb
push
std
or
and
ss
adcl
sbb
xlat
dec
icebp
push
mov
mov
cmp
jbe
mov
sub
pushf
dec
adc
fs
aaa
and
adc
mov
xor
in
cmp
test
iret
jns
shl
popa
popa
or
popf
stos
orb
or
add
mov
pop
push
test
sub
imul
test
mov
shrb
push
sti
sub
movl
jne
aaa
add
iret
pop
xor
sbb
xlat
in
sbb
out
roll
pop
cmc
insb
fidivs
jbe
in
in
fdivs
or
daa
lock
xchg
cmp
test
inc
int
sbb
xor
jo
pop
clc
insl
inc
add
lret
lds
dec
mov
dec
jns
xchg
loop
and
mov
repnz
jecxz
insl
hlt
xor
incl
aaa
addl
inc
mov
xor
jno
sbbb
jle
pop
pop
or
jne
ret
pop
outsl
xor
scas
inc
pop
sbb
mov
push
xchg
inc
add
insl
mov
gs
and
repnz
inc
sbb
fsts
ret
and
pop
shll
or
cmp
js
sti
inc
xchg
pop
test
pop
nop
clc
test
or
push
push
xor
and
imul
and
jns
lret
inc
or
or
out
jg
repz
push
dec
or
lea
sbb
scas
shrb
aas
pop
mov
mov
push
add
out
push
insl
loop
mov
cltd
xorb
repnz
cmp
jbe
les
pop
faddl
push
push
dec
jl
sbb
mov
mov
sbb
or
pop
cmpsb
dec
or
xor
pop
cmp
in
pushf
scas
test
outsb
fcomip
adcb
popf
les
pop
adc
inc
pop
mov
push
in
mov
jb
push
inc
xlat
add
adcl
je
sub
sub
push
cmpl
int
sahf
fsubrs
mov
sbb
pop
mov
xchg
cmp
add
mov
js
adc
cltd
leave
mov
testb
js
decl
inc
xchg
int
in
cmp
jbe
pop
fisttpll
leave
mov
fmul
ret
aaa
xchg
int3
fstps
mov
mov
pop
cs
jo
cmp
mov
jo
mov
outsb
adc
test
lea
jmp
js
adc
sbb
bound
fwait
pop
daa
push
or
shl
mov
in
push
lea
std
sub
dec
cltd
pop
add
mov
mov
fcmovb
das
dec
inc
mov
repnz
cs
mov
shll
ficomps
mov
loopne
in
add
and
lock
or
sbb
fsubrl
mov
pop
rcrl
dec
push
cmp
dec
js
into
xor
aam
push
insb
mov
mov
je
jge
scas
or
adcl
mov
push
in
and
fstp
rcrb
inc
xlat
push
imul
xchg
jg
or
nop
arpl
jmp
filds
and
pop
sbb
jle
mov
mov
je
inc
pop
xor
pop
xchg
dec
and
pop
jle
pop
pop
adc
jb
cmp
sbb
pop
outsb
psubd
mov
pop
mov
dec
pop
shrl
test
xlat
les
and
ds
fwait
and
xchg
pop
push
pop
mov
popa
add
stos
lods
andl
hlt
mov
movsl
xorl
pop
and
xorb
jbe
dec
inc
sbb
dec
mov
fcmovnu
mov
cwtl
jno
adc
inc
lock
mov
aad
or
loop
rcrl
cmp
imul
orb
cs
inc
mov
out
sub
mov
dec
sbb
or
in
sbb
mov
shlb
jl
push
movl
and
outsb
lea
inc
movsb
bound
and
inc
imul
inc
or
into
outsb
insb
xchg
insl
ss
mov
rcrb
std
data16
adc
sbb
outsb
push
test
pop
jmp
loop
daa
push
mov
mov
addr16
lock
add
push
inc
adc
fwait
inc
and
movd
jl
test
sbb
mov
fistpl
dec
push
inc
mov
xchg
pop
pushf
jecxz
ja
shll
add
fiadds
pop
imul
add
mov
jmp
jns
sarb
mov
imul
push
aad
ret
jp
xchg
xorb
in
mov
inc
cli
pop
jo
je,pt
push
xchg
push
mov
fmull
xchg
xorl
and
out
lods
cmp
adc
push
js
mov
sub
out
xchg
cltd
cmp
pop
jmp
sbb
pop
repz
sbb
sub
clc
aaa
das
sbb
into
pop
in
cwtl
cmc
fcoms
outsl
sub
jbe
test
jle
rcll
mov
lods
fistps
xrelease
push
add
pop
sahf
call
jns
loop
int
push
fwait
push
insb
pushf
loop
bound
push
sbb
sub
pop
loop
ret
add
std
imul
mov
push
xchg
jp
add
sarb
cmc
lods
pop
fisttpll
pop
pop
jnp
int3
or
lea
ja
jbe
mov
aas
jae
add
rolb
outsl
cmpsb
aaa
insl
push
mov
push
sahf
pusha
dec
inc
cltd
xchg
push
dec
icebp
pop
pop
mov
cmc
dec
dec
test
popa
rorb
lods
js
cld
mov
sub
sbb
test
mov
fsubp
in
push
sbb
mov
and
pop
push
and
int
lret
lods
sbb
dec
imul
jno
inc
xor
popl
clc
sbb
lcall
dec
lea
jecxz
mov
pop
xlat
insl
mov
ret
mov
jg
and
mov
test
out
xor
mov
cmpsl
push
add
cmp
xor
xchg
popa
mov
push
mov
jge
sti
ss
mov
mov
lods
pop
inc
jl
test
shrl
pop
stos
rorb
add
mov
dec
mov
adc
int
adc
mov
ljmp
sbbb
popa
lea
or
nop
loop
adc
sarb
mov
cld
or
xor
dec
f2xm1
add
dec
nop
fdivl
mov
repnz
jb
cmpsb
jno
and
and
jbe
dec
cmpsl
cs
pop
ljmp
mov
sbb
or
dec
jp
or
xor
icebp
rorl
insl
xchg
sti
es
mov
pop
clc
in
inc
and
jle
hlt
xlat
movb
and
loopne
fidivrl
mov
inc
mov
inc
aas
cmp
ficoms
xchg
push
call
sti
fwait
lea
dec
mov
cwtl
push
pop
outsl
fcomp
inc
jno
sbb
enter
or
xorl
xor
popa
out
pop
adc
movsl
shr
aaa
js
add
incl
and
mov
mov
mov
push
cmpsb
in
outsb
fdivrl
and
push
cltd
call
je
or
or
clc
push
in
add
fstps
inc
scas
ficoml
jle
inc
fcoms
clc
imul
sbb
call
xlat
jp
cltd
and
call
loopne
aad
dec
jo
mov
insl
js
dec
or
jp
add
or
sti
fisttpl
jb
cmpsb
sarb
xchg
loopne
mov
insl
fstpl
push
cs
mov
rcr
xor
mov
ficomps
inc
xor
int3
cld
jb
and
rcr
sbb
mov
jbe
mov
jne
adc
lahf
stos
rolb
ret
in
in
fnstsw
cli
sub
ja
pop
sbb
cmp
xor
mov
outsl
sub
dec
mov
fidivrl
fbstp
pop
xor
div
or
push
sti
inc
cli
mov
jbe
dec
dec
int
lret
test
filds
inc
mov
scas
icebp
mov
out
jge
add
mov
cli
nop
out
arpl
mov
cld
cmp
je
loop
sbb
call
lods
cmp
rorl
mov
test
ljmp
out
lds
mov
sti
fs
loope
mov
dec
adc
xchg
push
rcrl
mov
jge
orb
stos
jns
inc
sbb
sahf
cmc
aam
pop
test
sbb
movl
jo
xchg
pop
fcmovnbe
rcrl
mov
inc
pop
not
jg
lea
xchg
dec
ds
mov
pop
clc
cs
mov
adcl
cld
fs
adcl
push
mov
mov
add
push
popa
add
xchg
adc
loope
cmp
into
xchg
in
lods
test
ret
arpl
xchg
inc
cmp
ret
enter
test
std
mov
test
jns
js
incb
fmuls
xchg
jecxz
mov
mov
jnp
pushf
subl
cmpsb
sub
jge
mov
sub
and
add
sbb
leave
fnstsw
xchg
jge
adcl
roll
testb
mov
add
mov
jno
mov
ret
mov
addr16
adc
cmp
push
pop
ss
push
xchg
es
mov
das
fwait
push
jne
daa
fsts
sarb
mov
or
lds
adc
pop
roll
inc
dec
push
dec
orb
insb
pop
out
stos
cs
jbe
loope
imul
shrb
inc
inc
pop
ss
inc
xor
jl
das
sbb
lcall
call
or
lea
das
cld
sub
das
call
fdivs
loope,pt
add
sub
lea
ret
pusha
pop
adc
dec
add
or
popa
adc
pop
cmp
lods
imul
push
mov
in
push
push
stos
loope
jp
ljmp
insl
lcall
or
pop
add
and
andb
xor
dec
call
jo
dec
mov
fs
subl
test
jae
push
addl
inc
mov
inc
leave
jecxz
iret
loope
mov
orl
lods
enter
cmp
in
xor
das
loopne
ss
lret
imul
xchg
mov
and
mov
mov
std
add
push
lods
xor
lcall
xor
xlat
mov
js
dec
les
cmovns
mov
aas
inc
es
jecxz
cmp
test
ds
sub
add
or
fidivrl
sub
add
pusha
pop
arpl
mov
lcall
inc
imul
lret
outsb
xchg
or
sub
inc
push
mov
add
shll
xor
mov
xchg
mov
js
fwait
out
cli
push
and
aas
sub
out
adc
loopne
out
bswap
push
popa
and
dec
ret
sahf
subb
jp
jl
jbe
out
mov
and
cmc
add
cmpsl
gs
push
or
adc
mov
push
popa
sub
rcrb
loope
sbbl
cs
cmp
mov
shlb
sub
rcl
shlb
ret
push
ljmp
in
scas
lock
loope
and
and
hlt
xchg
ret
add
push
inc
xor
mov
enter
fsubrl
jae
bound
jb
in
fildl
scas
mov
imulb
clc
pop
mov
dec
ja
in
fdivl
ret
sub
push
fsubrl
std
fwait
push
xor
andl
loop
in
ret
call
ret
movl
xchg
sbb
cltd
ljmp
mov
filds
testb
ret
xor
daa
mov
mov
movsl
xor
xchg
imul
add
enter
adc
mov
inc
sarb
mov
sbb
mov
into
mov
mov
jp
push
or
loope
fadds
mov
in
jp
lea
sbb
add
pop
push
jge
test
shrb
mov
mov
mov
pop
sbb
es
fimull
lods
es
push
cmpsl
push
mov
clc
repnz
xor
sub
add
jmp
mov
add
cmp
rclb
ja
mov
nop
or
push
adc
mov
cmpb
repz
jo
jmp
sti
in
scas
sub
daa
add
jg
stos
xor
xor
push
cltd
fmuls
xchg
repnz
or
or
and
sub
push
push
mov
mov
lods
sub
shlb
outsl
fsubl
sub
jae
xlat
jae
xchg
out
push
push
shl
mov
cmp
sub
outsl
out
leave
lods
xchg
ret
xchg
mov
add
push
or
and
or
or
mov
nop
push
aam
mov
jbe
mov
xor
scas
outsb
mov
fsubrs
jbe
dec
test
mov
mov
xor
aaa
ds
xor
mov
sbb
inc
icebp
repnz
jecxz,pn
dec
fisubs
cld
fstps
int
cmp
andb
out
cwtl
mov
enter
cmpsb
cli
popf
push
loopne
dec
add
pop
pop
ds
int
cli
pop
pop
push
out
sbb
mov
push
lahf
sbb
push
outsb
jo
mov
ds
adc
shlb
in
dec
je,pt
outsl
loope
adc
add
out
jp
sbb
lret
xchg
jmp
push
xor
pop
rcr
mov
dec
andb
icebp
out
lock
jecxz
dec
pop
adc
popa
fisttpll
mov
sub
hlt
xor
add
mov
fiaddl
or
adc
mov
data16
lret
fs
and
mov
ret
jg
nop
aas
imul
sbbl
les
push
push
xor
fdivrl
adc
or
and
dec
pop
sub
aam
insl
or
pop
jle
fdivs
xor
call
cmc
test
jp
imul
rclb
jl
sub
xorl
pop
orb
jne
jno
push
pop
aaa
adc
loopne
push
leave
fiaddl
cmp
in
in
push
in
add
or
ja
rorb
dec
fsubrs
dec
inc
arpl
sti
inc
insl
in
sbb
inc
push
pop
call
jg
pop
mov
and
or
loopne
pop
cli
outsb
fistl
xor
leave
cmp
mov
and
xchg
adc
or
mov
mov
sbb
inc
inc
clc
inc
call
or
and
adc
call
jbe
loopne
fisttpl
mov
adc
xor
ret
pop
sub
jle
cmpsb
xchg
or
subl
in
dec
fistps
adc
imul
jge
mov
jnp
xor
dec
lods
inc
leave
lea
daa
mov
adc
loop,pn
mov
fldt
xor
pop
xchg
bound
cmpsb
ja
fidivrl
xchg
and
mov
xor
shrb
push
hlt
push
loop
in
ljmp
in
fmuls
or
hlt
pusha
xchg
push
or
test
repnz
cmp
out
xchg
ljmp
sub
outsb
pop
insl
mov
xor
sbb
sub
add
xchg
out
and
bound
std
pop
ffreep
mov
inc
adc
add
jo
mov
pop
pop
cmc
jne
jb
repz
or
lcall
lods
hlt
or
dec
fmull
dec
cmp
jno
push
loopne
lret
add
pop
inc
loope
jg
and
jbe
shl
push
call
and
mov
mov
pop
sub
push
mov
pop
push
pop
pusha
mov
rcr
pop
out
gs
popa
fdivs
adc
cmp
push
add
fnstenv
popa
leave
xchg
jecxz
adc
mov
fwait
daa
mov
mov
and
add
lea
outsl
inc
idivl
mov
fucomp
mov
fmuls
insl
fcmovbe
add
mov
decb
jns
inc
and
xorb
mov
ds
hlt
rep
dec
mov
icebp
mov
cld
je
ret
popf
cmp
push
push
inc
pop
sahf
outsl
in
fdivrs
jl
jg
je
dec
lds
outsb
pop
inc
jecxz
inc
rorb
call
dec
mov
and
xor
push
xlat
lret
inc
lods
aad
outsl
ss
or
cmp
mov
sub
mov
mov
pop
and
sub
add
movsl
pop
icebp
push
insb
lahf
es
ss
push
mov
jp
mov
lods
sahf
push
mov
shlb
mov
sahf
xor
ss
das
xchg
sbb
cmc
les
int3
imul
lea
sarb
pop
insl
jbe
testb
cmc
cmp
test
push
pop
jmp
and
push
mov
push
mov
jbe
mov
mov
inc
sub
fstpt
addb
dec
test
lret
cltd
orb
icebp
call
sbb
mov
clc
insl
jae
mov
jae
ja
cmp
add
es
inc
mov
cmpsb
push
push
movsl
in
fs
scas
lahf
test
loope
das
in
rcl
xlat
xor
xor
pushf
inc
popf
xchg
jns
imul
dec
fsts
push
fistpl
shlb
adc
pop
mov
popa
out
or
lea
xor
jmp
jl
loope
fdivrs
ret
leave
cmp
sub
loopne
aaa
addr16
dec
and
lock
scas
outsb
jmp
push
xchg
outsl
add
pop
push
lods
adc
adc
cld
pop
jnp
or
cmpb
je
mov
sbb
xchg
fdivrp
stos
sub
jo
mov
movsl
fwait
mov
dec
fnstcw
enter
mov
and
or
mov
add
cli
insb
aam
sbbb
inc
addl
ret
jmp
mov
shrb
incb
rolb
test
dec
pop
push
mov
jno
cs
jp
pop
pusha
and
inc
fildll
push
das
cmp
add
insl
and
push
lcall
shr
in
addl
jb
inc
pop
bound
ja
add
outsb
inc
xchg
sbb
lahf
add
sbbb
mov
inc
shll
jl
out
jb
lcall
mov
sub
lahf
rdpmc
push
outsb
mov
push
outsb
stos
loopne
add
cmpb
das
sarb
or
dec
inc
xor
pusha
andl
mov
xor
xchg
mov
scas
mov
aas
push
shlb
insl
popa
mov
or
jno
imul
mov
lds
inc
jns
ds
loope
out
and
jnp
mov
inc
mov
arpl
fmuls
fwait
or
push
sbb
rcrb
sahf
sbb
aam
inc
inc
lock
out
ficoml
sarb
out
xorb
in
dec
sub
sub
and
and
insl
adc
mov
dec
mov
push
in
cmp
push
push
out
push
sbb
add
enter
lods
inc
out
shr
xor
call
outsb
mov
lcall
je
mov
jecxz
inc
cld
mov
xor
sub
js
add
loop
rcl
das
fdiv
roll
jo
addr16
jl
mov
les
lods
fnstenv
fiadds
add
test
dec
ficoml
pusha
cmc
aaa
dec
jb
mov
xor
std
jle
decl
daa
sub
mov
xchg
pop
ss
xchg
adc
mov
adc
and
filds
ljmp
jae
xor
js
enter
mov
cwtl
rorl
ljmp
gs
xchg
test
je
rcl
test
cmp
pop
mov
pop
add
repnz
add
add
mov
scas
or
out
xchg
cmp
lds
jbe
sbbl
stos
cmp
push
and
adc
mov
xchg
jg
test
pop
clc
aad
pop
sbb
icebp
sbb
test
adc
xorl
mov
lahf
mov
or
inc
test
rorb
pop
shlb
int
imul
ret
call
call
out
xchg
and
or
rclb
cli
out
jnp
pop
inc
mov
adc
push
repnz
and
rcr
pop
test
aam
data16
push
jo
push
rcrl
xchg
in
repz
mov
insl
sbb
fcom
or
pop
ljmp
jbe
sub
mov
sbb
stc
pop
std
scas
movsl
push
push
shlb
cmp
mov
mov
or
into
sbb
inc
imul
leave
fisttps
inc
add
bound
or
sub
push
jecxz
mov
int3
cmpb
push
adc
mov
xchg
loope
pop
test
mov
xchg
into
rcr
outsb
in
adc
sub
inc
mov
jmp
sahf
aaa
rorb
aad
ja
xor
pop
roll
mov
mov
fs
out
sub
aaa
ss
xor
ss
popf
or
jns
ds
mov
daa
in
or
orb
ss
and
insl
out
clc
mov
and
mov
sub
test
add
aam
in
jbe
dec
push
pop
pop
test
mov
jmp
mov
pop
inc
mov
es
outsl
mov
adc
adc
rcrl
add
pop
hlt
dec
ljmp
push
mov
or
inc
add
js
xor
jge
jno
mov
xor
in
inc
fs
fldt
jo
test
xchg
je
lds
icebp
add
sub
icebp
in
aaa
sbb
call
daa
fsincos
fistpll
inc
mov
sbb
inc
jecxz
xor
add
xchg
rorl
fldcw
icebp
test
rorl
or
mov
adc
jmp
iret
test
les
mov
outsb
in
push
xor
jl
push
mov
add
sbb
popf
lret
xor
jnp
and
ja
cld
lcall
and
pop
xlat
decb
call
cmpsb
in
rcl
adc
add
leave
mov
loopne
xchg
pop
mov
fidivl
insb
mov
add
mov
sahf
aad
xchg
inc
sbb
mov
js
xchg
incl
out
es
and
push
rol
bound
movhps
xor
test
das
adc
scas
xchg
or
adc
in
xchg
cli
pop
fimuls
adc
xchg
leave
sub
rcll
test
cmp
cmp
xchg
js
inc
std
shlb
leave
cld
or
ret
and
xchg
fcompl
adc
push
mov
mov
lahf
imul
add
inc
sub
insl
aaa
bound
sub
xor
sbb
xchg
outsb
sahf
lret
je
lods
iret
fldt
mov
mov
popa
rcl
xchg
jb
mov
and
lds
lock
frstor
jle
ss
inc
popf
mov
mov
outsl
sbb
idiv
and
pop
push
push
jne
cltd
leave
jne
mov
clc
sahf
mov
or
pop
out
adc
sub
int3
push
divb
outsl
popf
pop
mov
mov
and
pop
mov
mov
loope
cmp
adc
sub
push
outsl
cmp
cld
xlat
mov
adc
movsb
imul
test
psubsb
mov
leave
mov
add
or
jp
cwtl
testb
lock
das
shrb
int3
ds
loopne
fists
shll
ss
es
mov
dec
outsl
outsl
std
cwtl
call
mov
sbb
or
pop
and
lcall
or
fdivrl
fnclex
rcll
fistpl
imul
js
dec
lret
out
aad
push
test
fdivs
outsb
popa
mov
fsts
dec
rol
rolb
or
inc
rcrl
pop
cmp
pop
jg
data16
inc
push
mov
add
jae
pop
aam
mov
inc
add
jns
imul
inc
pop
mov
lcall
inc
popf
cmp
add
call
lahf
popf
aam
inc
sbb
cli
jno
inc
or
jp
int3
push
ret
push
sub
mov
stos
adc
mov
add
jae
xchg
out
imul
push
cmp
scas
fmul
movsb
pop
mov
pop
ret
mov
lods
mov
jo
arpl
mov
mov
sbb
cmp
enter
adc
das
adc
and
cld
das
jmp
mov
pop
cmc
ds
cs
mov
inc
nop
sub
les
pop
and
ret
rcrl
lea
add
loopne
mov
pop
inc
stos
lret
add
sbb
nop
and
mov
fidivs
enter
jae
iret
adc
jmp
push
shll
sub
jp
movsb
inc
jle
insb
cmpsb
bound
cmp
stc
aaa
in
loope
push
mov
mov
ret
aaa
and
push
shll
paddb
jns
ds
ret
pop
push
testl
pop
movsl
insb
fists
adc
orb
outsl
inc
push
mov
std
icebp
addl
dec
rcrb
adc
int3
into
xor
mov
push
ficomps
mov
fucom
subl
and
cwtl
cmp
dec
call
mov
jno
mov
mov
jo
fistl
dec
sub
sub
mov
pusha
fimull
test
test
xchg
lods
les
push
pusha
xchg
pop
push
xchg
ret
jl
xor
cmpb
fst
adc
loop
xor
loopne
cmp
insl
mov
sub
xor
add
imul
pop
adc
add
aam
je
pop
mov
adc
and
subl
push
add
mov
aad
jp
imul
fldl
sbb
jbe
sahf
fcmovb
lea
jp
ret
sbb
lods
mov
xor
add
das
fadds
ss
cli
or
loop
subl
mull
ljmp
pop
imul
icebp
out
xor
pop
push
mov
jle
lahf
mov
xchg
lcall
and
ja
push
or
xchg
imul
imul
dec
sbb
lods
jno
movsl
cli
sbb
test
incl
orb
adc
outsl
lds
adcb
insb
clc
aas
in
inc
movsl
or
xchg
push
cmp
mov
setno
in
jns
sub
dec
rcrl
push
cmp
xor
and
inc
loopne
out
cmc
xor
jl
and
or
jo
cs
push
jmp
pop
pop
pop
or
cmp
and
out
pusha
ret
outsl
dec
aad
push
push
clc
mov
aaa
push
mov
negb
sbbb
cmpsb
inc
mov
rorb
push
push
insb
sbb
adc
add
pop
call
sub
xor
inc
outsl
mov
and
gs
add
das
cmc
jl
fadd
mov
lods
jae
les
pop
loopne
repz
push
mov
jecxz
sub
call
adc
fistl
xorl
pop
vcmpss
insb
ret
jp
lods
xchg
inc
mov
test
loopne
fcmovnu
mov
mov
subb
sub
insl
insl
jge
mov
aad
pop
mov
loop
or
inc
dec
xchg
test
mov
stos
lods
dec
pop
lods
outsl
popf
in
inc
lock
mov
pop
jb
inc
pop
lea
mov
or
mov
sub
movb
out
push
aam
mov
inc
aad
movsl
sub
xchg
lret
inc
stos
out
std
outsl
std
push
xchg
dec
push
sub
cltd
push
stos
sar
jne
lods
add
xchg
jp
loopne
jg
cmp
je
mov
call
and
mov
inc
in
aaa
out
cmpsl
and
ljmp
jl
loope
popl
push
stc
pop
cli
loopne
fwait
ss
aam
inc
pop
jns
inc
lahf
mov
shll
or
or
cmp
popf
data16
sbb
sub
adc
daa
subb
xchg
fstp
push
and
push
mov
xlat
js
sub
cmp
pop
mov
sbb
loop
lods
fildl
add
xor
arpl
out
add
movsl
pop
mov
data16
mov
divl
sub
jo
or
mov
in
cmc
mov
jae
xchg
push
scas
push
xchg
pop
fiadds
add
cmp
test
ds
xchg
insb
and
jae
push
dec
loopne
out
mov
add
mov
pop
or
out
cmp
push
negl
das
pop
bound
ljmp
mov
imul
xchg
xchg
sbb
leave
mov
mov
dec
push
int
pop
xchg
pusha
dec
push
mov
sbbb
dec
inc
add
ret
sbb
and
clc
test
or
in
lock
or
pop
and
loopne
rcll
mov
or
add
xlat
and
and
mov
shrl
cmp
xor
test
loope
mov
decb
inc
sub
xchg
adc
pop
jmp
push
or
xor
stos
push
out
add
jmp
leave
dec
add
into
or
lods
jl
cmp
inc
insl
dec
and
xor
jmp
mov
xchg
shlb
and
in
mov
mov
lcall
or
imul
sub
scas
data16
std
mov
or
std
pop
pop
movsl
pop
jae
fstps
decl
popa
mov
sti
mov
sub
nop
push
in
mov
outsl
push
les
movb
leave
outsb
icebp
inc
lea
jecxz
aas
dec
insl
mov
packuswb
in
adc
addr16
mov
adc
xchg
sbb
scas
or
imul
aas
jo
xchg
adc
mov
or
jecxz
jbe
mov
push
mov
outsb
clc
push
fwait
mov
xchg
ja
lret
shlb
dec
and
stc
test
cmpsb
jg
rclb
inc
cmc
and
into
sub
sti
call
bound
arpl
jl
lea
stos
lock
jnp
sbb
or
jae
dec
out
int
fistps
aaa
out
push
decb
test
push
movsb
repnz
xchg
push
dec
sub
jecxz
sbb
clc
scas
push
lahf
xor
imul
imul
std
je
popa
pop
mov
sahf
das
adc
pop
punpckhdq
insl
mov
test
fsubrp
lods
enter
scas
nop
mov
push
add
test
in
add
movsl
pop
ret
mov
arpl
adc
sbb
movb
add
adc
xchg
and
mov
jno
dec
adc
scas
jg
cmc
jbe
dec
cmc
jns
add
test
enter
add
mov
sbb
in
es
push
pop
mov
ret
les
lds
push
lret
mov
jecxz
or
stos
cmovb
adc
ret
add
cmpsb
mov
repz
jge
hlt
mov
xchg
jmp
cmp
add
inc
insl
enter
pop
sub
ja
jge
scas
dec
gs
clc
mov
loop
lock
push
out
push
mov
ret
pop
mov
dec
inc
mov
cmpsl
call
push
imul
test
inc
outsl
ljmp
adc
retw
xchg
ljmp
insb
push
adc
loope
insl
loope
in
jbe
sarb
scas
adc
dec
and
js
add
or
mov
stos
fnstsw
jb
or
fdivrs
sbb
js
pop
outsl
dec
xchg
sub
xor
jbe
fsubrl
cli
sbb
or
add
mov
in
dec
xor
xchg
push
dec
or
fld
loopne
stos
lods
jbe,pn
mov
dec
mov
sahf
mov
jb
push
cmp
test
add
fidivl
ss
je
or
cmp
push
mov
fcom
aam
pop
dec
pop
sbb
xorb
sbb
test
inc
mov
or
out
and
jns
loopne
mov
data16
out
adc
in
or
jno
stos
imul
xor
sbbl
pop
jge
xchg
inc
sti
cmpsl
test
add
ja
jnp
sar
icebp
xchg
out
in
mov
pop
pop
xor
popa
outsb
jnp
pop
inc
dec
pop
cmpsl
shl
mov
pop
fisttpll
cmpsb
outsb
mov
std
shlb
ljmp
stos
daa
jb
xchg
cmpb
add
movb
fists
fadd
int
inc
inc
dec
jns
push
in
test
iret
stos
mov
push
dec
and
add
xchg
ss
stc
call
call
movsl
cmp
xchg
dec
ljmp
push
test
scas
mov
leave
rcrl
mov
mov
mov
dec
or
mov
mov
cmp
sub
and
lahf
in
pop
pop
jnp
and
lret
jb
xor
lea
mov
popf
inc
dec
in
xor
sub
nop
xor
les
das
inc
mov
ficompl
adc
data16
mov
lret
inc
adc
dec
mov
jge
shlb
ja
lahf
cli
sub
or
and
pop
std
and
sbb
cmp
outsl
cld
out
add
imul
and
das
push
pop
pop
lock
push
cmpsb
sub
sti
scas
in
inc
lret
push
shll
test
popa
sbb
mov
push
pop
lds
jns
push
into
imul
leave
mov
cs
pop
xor
fs
fbstp
lods
in
push
sbb
add
cli
sub
sbb
mov
loope
insb
stc
pop
dec
adc
sbb
lea
cmpsl
sbb
xchg
movsl
lods
test
adc
or
mov
sbb
xchg
loopne
pop
sbb
aas
push
cs
cmp
test
les
mull
divb
aaa
mov
mov
nop
cs
cmp
or
ret
mov
xor
push
fwait
ljmp
add
lock
and
or
loopne
lock
ret
jo
gs
std
jg
push
cmp
xchg
iret
popa
pop
data16
pop
cmp
or
cli
popa
sbb
and
xor
cmpsb
je
aaa
cmp
mov
mov
push
fwait
cmp
jmp
push
fiadds
test
lock
jl
xchg
add
mov
inc
rcl
stos
sub
or
int
movsl
xor
pop
mov
std
mov
je
inc
out
imul
addb
sti
push
loope
movsb
repz
cmp
push
jbe
std
lods
add
lret
movsb
jnp
ret
push
jg
pop
sub
loopne
push
ja
jbe
and
cs
mov
and
mov
xor
adc
dec
push
inc
pop
movsl
cmp
xor
sbb
cltd
xchg
xchg
xor
or
mov
in
outsl
cmp
mov
cmc
aas
cmpsb
cmp
and
adc
or
push
insb
imul
cmp
pop
mov
cmpsb
loopne
dec
test
dec
mov
xchg
dec
ss
fsubl
mulb
push
jl
xchg
fistpll
jae
les
je
or
fs
in
decb
shlb
clc
push
sbb
inc
rcrb
mov
pop
mov
pop
push
xor
scas
xchg
jp
push
sub
ljmp
outsl
out
dec
xor
icebp
sti
lea
pushf
and
and
sub
lods
mov
lock
add
adc
out
cmp
cmp
or
out
stc
insb
xor
or
and
in
shlb
cmp
dec
inc
bound
mov
rcrl
push
push
xor
inc
or
sbb
mov
jnp
sbb
pushf
stc
aad
and
stos
dec
sbb
push
popa
push
addb
stos
mov
adc
dec
sub
add
fdivrs
dec
or
add
insl
lahf
inc
push
mov
inc
or
cmp
and
inc
jmp
mov
icebp
or
lret
push
pop
ljmp
addl
std
rorb
xchg
fisttpl
xchg
mov
stos
sbb
mov
add
mov
test
pop
mov
lea
addr16
dec
cld
lea
filds
or
aaa
inc
sbb
shlb
fcompl
into
adc
add
aad
test
lret
hlt
inc
cs
pop
sbb
arpl
and
push
push
mov
xchg
pop
adc
dec
mov
popa
add
cli
and
inc
outsl
cmpsl
lods
out
sbb
nop
les
sub
or
add
sub
popl
push
sbb
imul
insl
pop
cmpsb
loope
icebp
xorb
pop
insb
sti
pop
mov
shl
outsb
jmp
loope
pop
sub
inc
cmpsb
stos
dec
js
nop
and
add
cs
ds
fildl
scas
aas
xchg
and
mov
push
mov
hlt
or
roll
icebp
mov
add
push
xchg
hlt
fldt
jge
dec
xchg
rorl
xchg
loop
mov
test
je
jp
loop
push
pop
mov
je
cmp
adc
and
xorl
push
scas
pop
mov
add
jnp
into
jne
sub
mov
js
mov
stos
add
gs
lds
mov
movsl
mov
cli
push
dec
lock
scas
inc
arpl
lock
gs
pop
mov
imull
xlat
ret
ret
push
test
or
call
xlat
aam
mov
push
lods
ret
pop
or
test
loopne
out
jg
xchg
mov
in
mov
scas
out
cltd
or
movsb
push
inc
fstpt
movsb
cmc
test
pop
sbb
mov
push
add
add
aas
dec
nop
pop
and
jge
lock
jnp
mov
sti
inc
daa
or
inc
insl
adc
pop
sub
icebp
mov
cwtl
and
and
push
mov
cmp
inc
sbb
bound
or
movsl
stc
add
lea
and
int
or
sti
and
pop
outsb
movsl
mov
add
add
sbb
jle
fistps
jmp
subl
lret
mov
push
dec
pop
mov
dec
cmp
ja
and
sti
cmp
mov
push
insb
rcrl
cltd
sub
mov
xor
add
sub
test
add
adc
mov
rorb
les
or
dec
lods
adc
inc
cmp
jmp
sbb
test
dec
pop
sub
sbb
fadd
inc
dec
mov
loop
cmpsb
xchg
fsub
jl
xchg
mov
jp
mov
mov
loope
jecxz
mov
push
adc
cs
jecxz
push
fiaddl
insl
mov
divb
fldl
das
cli
js
adc
test
sar
pop
jo
sbbb
or
push
inc
popa
fabs
pop
mov
push
pusha
push
sbbl
fidivs
je
out
pop
mov
fists
pusha
loope
jne
xchg
scas
mov
add
and
jl
mov
and
cld
sbb
shll
jne
push
and
sahf
sbb
or
and
jo
es
lahf
inc
iret
push
frstor
cmp
pop
mov
sub
int
ds
in
loop
lods
xchg
mov
xchg
imul
sbb
js
adcl
sti
movb
dec
lock
jno
loop
xor
cmp
ret
sub
outsl
fbstp
mov
out
inc
jl
jmp
jns
mov
ret
inc
add
cmp
add
inc
aas
das
pop
adc
adc
add
pop
push
mov
pop
push
sbb
mov
sbb
fnstcw
cmp
ja
aas
cli
mov
jb
lods
lcall
aam
je
mov
mov
or
mov
mov
insl
xor
or
pop
xor
jo
fsubr
push
sbb
sub
mov
aas
add
pop
or
mov
jmp
push
loope
outsl
divb
push
mov
loope
fs
xchg
or
das
cmp
dec
jns
out
addr16
pop
pop
jbe
cmc
setne
jnp
fidivrs
fwait
ljmp
mov
mov
mov
and
lods
mov
shll
cwtl
loope
ja
imul
jp
xor
into
add
dec
xor
pop
and
mov
push
pop
xchg
sub
sbb
mov
lods
insl
jb
cmp
mov
or
jo
imul
repz
adc
mov
xor
bound
adc
out
ljmp
leave
push
ds
movsl
adc
roll
mov
imul
pop
xor
mov
and
push
mov
mov
xchg
xchg
mov
gs
call
cmp
add
rcll
inc
pop
or
dec
sub
jecxz
fnstenv
xchg
mov
mov
popf
pusha
data16
loopne,pt
icebp
loopne
std
inc
loope
xchg
mov
lods
mov
xchg
adc
mov
dec
sbbb
mov
mov
sahf
xchg
sbb
mov
cwtl
sti
inc
loop
and
sbb
pop
je
movsl
mov
push
jle
sbb
out
jmp
cld
icebp
aas
pop
pop
repnz
jns
call
mov
inc
mov
dec
adc
leave
fsts
xchg
mull
scas
sbb
and
cmp
jo
xchg
scas
push
enter
or
fimull
push
xchg
mov
xchg
mov
mov
mov
nop
inc
out
pop
mov
xor
daa
jp
stc
push
sbb
mov
lea
mov
test
mov
int3
fs
mov
je
jle
jmp
ficoml
stos
add
adc
inc
push
pushf
mov
or
loope
fiaddl
addb
xchg
adcl
or
mov
mov
les
sbb
and
push
lods
sbb
cmp
cmc
arpl
loopne
mov
test
adc
sub
es
test
adc
bound
shrl
scas
mov
pop
aas
aaa
cmp
popl
xor
repz
inc
sbb
cld
ss
fildl
enter
jle
push
push
xor
push
jmp
shll
data16
sti
sub
pop
sub
sbb
test
cmpl
dec
ljmp
or
jl
js
push
or
xor
adc
pop
fbstp
pop
mov
lret
push
loope
adc
pop
inc
flds
sbb
inc
insl
hlt
packsswb
cmp
add
outsl
or
xorl
sbb
pop
push
movl
adc
mov
sbb
jge
les
jbe
or
lods
shll
rcr
xchg
cmp
mov
jle
adc
lcall
xorb
mov
add
mov
pop
sub
sbb
loop
sub
hlt
jno
pop
xchg
add
and
sbb
mov
aaa
lock
cwtl
sub
add
daa
jae
xchg
mov
jmp
cmpsb
mov
adc
ror
add
popf
mov
outsl
sarb
cmc
mov
sbb
decl
ret
mov
mov
sbb
fnstenv
jp
jns
outsb
pop
fnsave
ja
cltd
loope
pop
mov
sbbl
dec
sbb
mov
and
ds
insb
mov
add
push
xchg
sbb
sbbl
mov
fisttpl
arpl
dec
repz
and
cmp
adc
clc
subb
aam
stos
scas
sbb
ljmp
cltd
test
aam
push
mov
movsb
es
mov
adc
xor
addl
fs
push
mov
jbe
xchg
pop
sti
xchg
mov
jbe
shrl
mov
loope
addr16
inc
hlt
or
push
mov
mov
pushf
inc
add
adcl
das
lds
popa
pop
inc
sub
and
in
push
mov
imul
inc
pop
clc
iret
shr
out
inc
test
cmp
ret
pop
outsl
xor
loopne
adc
jmp
jmp
push
push
aam
add
adc
and
sub
inc
loopne
pop
fdivrl
ljmp
insl
fists
stc
ss
out
push
cld
push
lahf
mov
inc
dec
les
sub
cld
sahf
jnp
arpl
bound
jbe
push
xchg
sub
push
pop
lcall
cmc
push
and
pop
sti
pop
push
faddl
adc
push
test
pop
mov
imul
fwait
mov
mov
push
adc
xlat
das
jle
jge
push
mov
outsl
scas
vmovntps
jbe
push
movsb
rorl
mov
bound
fcomp
cli
leave
out
lods
mov
daa
pop
xchg
mov
push
mov
xchg
add
adc
mov
mov
pop
jmp
cmp
dec
adc
pop
movsl
jl
mov
cmpb
xor
inc
pop
mov
bound
pshufw
pop
test
jns
outsl
loopne
fildll
cmp
xlat
je
cmc
enter
push
loopne
xor
lret
jecxz
in
mov
sub
mov
roll
push
adc
fistpl
xor
fwait
ss
inc
xor
lods
lds
sub
dec
in
pop
test
mov
jle
adc
mov
inc
arpl
sbb
pop
mov
adc
jl
xchg
push
into
xor
mov
loopne
lcall
popf
sahf
shll
jb
mov
lock
push
push
inc
mov
ret
roll
sbb
imul
roll
pop
decb
inc
dec
dec
test
ss
pop
stos
jbe
add
jnp
xchg
and
inc
sbb
mov
xor
lods
sub
mov
hlt
sub
int
fldcw
aam
sbbl
lahf
adc
movsb
inc
loop
add
aaa
sbb
xor
scas
xor
xchg
sub
pop
outsb
pop
push
pop
xor
add
and
cltd
scas
daa
int3
mov
mov
aaa
sub
fwait
inc
inc
jmp
and
push
insl
mov
pushf
sarl
ucomiss
xor
nopl
mov
popa
sahf
outsl
je
jmp
mov
push
in
pop
stos
xchg
pop
push
out
pop
lcall
xchg
cld
or
lds
and
mov
call
mov
add
hlt
push
mov
and
imul
incb
dec
dec
inc
cmp
mov
jmp
ja
mov
hlt
imull
add
push
cli
js
pop
mov
cmp
movsl
scas
jb
out
mov
aas
shll
jno
cmc
cld
pop
dec
rcr
aam
addb
hlt
mov
sbb
pop
xchg
mov
and
outsb
aas
ret
sub
push
inc
cmp
cwtl
jo
outsl
pop
mov
inc
add
xchg
and
pushf
push
nop
je
repnz
xor
icebp
rorb
mov
int
incl
je
inc
iret
add
push
stos
lcall
adc
xchg
or
push
lcall
les
pop
movsl
pop
movsl
aaa
fadds
loopne
mov
sub
shl
lods
subl
outsb
xchg
mov
ljmp
das
scas
fsubr
lcall
lods
jecxz
rol
jbe
adc
mov
out
mov
test
pop
push
mull
adc
jbe
ja
mov
dec
out
sub
xchg
sbb
in
mov
dec
push
inc
cmpl
or
jge
sti
mov
insb
adc
out
popf
adcb
pop
enter
loopne
sbb
mov
pop
cmc
add
cmp
dec
push
xchg
loopne
pop
call
scas
and
sbb
and
sbb
sbb
shll
leave
mov
cld
pop
inc
stos
fldenv
pop
inc
push
dec
jle
sbb
stos
dec
icebp
dec
mov
call
adc
inc
mov
daa
jp
add
fs
sbb
inc
or
ret
das
rolb
xchg
loope
mov
push
loop
mov
jbe
daa
adc
lea
inc
cmp
cmc
lods
sti
scas
cmc
rorl
insb
loopne
xchg
or
ljmp
dec
insb
lret
cmp
mov
push
dec
stos
es
sti
fnsave
jle
jp
incb
fsts
in
mov
pushf
xor
in
pop
ret
lret
in
mov
test
add
cli
les
rcrb
push
or
xor
add
or
scas
sbb
and
loopne
jns
in
mov
sub
stos
jmp
mov
pop
ret
sbb
mov
sub
jb
insl
js
inc
test
inc
lcall
mov
filds
mov
roll
jg
mov
xor
sti
or
or
cmc
cmpsb
push
fwait
cmpsl
or
mov
out
lods
lret
out
xchg
push
adcl
repz
xlat
sbb
ds
frstor
mov
mov
cmp
cs
leave
mov
aad
dec
jnp
push
sbb
push
sbbl
pop
loopne
xchg
adc
dec
mov
lret
das
fdivl
lods
push
sub
push
xor
and
sub
lea
test
pushf
test
bound
das
pushf
insb
sbb
popf
mov
add
movl
dec
xchg
adc
adc
push
mov
arpl
xchg
cmp
add
xchg
mov
xor
test
cld
fimuls
sub
push
outsb
xchg
shlb
push
sbb
out
ljmp
inc
sbb
adc
jo
js
dec
andb
hlt
jg
sbb
mov
add
mov
mov
or
mov
pusha
or
push
sbb
test
and
insb
outsl
in
cmpsb
lods
adc
movsb
mov
dec
mov
sub
dec
rcr
xchg
ljmp
and
push
js
dec
outsl
jne
lcall
add
std
test
dec
jg
xchg
stos
outsl
dec
sbb
pop
loop
sbb
les
icebp
push
sbb
adc
adc
arpl
ss
jge
or
xchg
aaa
jp,pn
fcmovb
leave
and
lock
in
les
sub
dec
xchg
mov
sub
int
mov
call
dec
add
arpl
add
cli
in
clc
cwtl
mov
fsubrs
int3
scas
cmp
push
rcrb
jae
incl
sti
dec
mov
cwtl
mulb
xor
jbe
sahf
aaa
mov
push
mov
cmp
imul
dec
add
lods
outsb
mov
inc
test
inc
into
or
sub
in
xchg
cs
insb
jnp
andl
fbstp
or
cmp
cmp
mov
add
sbb
mov
pop
pop
mov
dec
ficomps
jl
ret
mov
dec
scas
lods
mov
push
and
adc
sbb
imul
dec
xor
push
jmp
lods
jge
xor
adc
pop
std
hlt
mov
je
je
ret
arpl
repnz
loope
outsl
mov
aaa
xchg
jbe
inc
dec
sbb
std
inc
or
ficoml
stos
jge
push
rolb
dec
jge
subb
or
inc
xor
aaa
or
or
adc
js
jne
call
aam
cmp
mov
push
pop
int
mov
clc
sbb
pop
add
inc
jg
cmp
cmpsl
or
pop
xchg
pop
mov
mov
rcr
and
bound
pop
mov
lock
int3
add
mov
cmpsb
ja
cmp
pop
mov
add
fiaddl
add
push
add
or
add
mov
sub
and
subb
js
pop
cmp
cli
das
sub
out
or
or
ror
sbb
inc
mov
xchg
insb
or
inc
imul
adc
repnz
scas
or
loope
mov
or
clc
or
lock
lock
mov
mov
xor
or
mov
xor
adc
mov
mov
imul
loope
les
mov
inc
test
int3
rcrl
mov
xchg
rcrb
inc
mov
xor
inc
mov
lea
fsub
fldenv
sbb
sti
sbb
pop
pshufw
cmpsb
iret
mov
mov
cmp
insb
incl
sbb
jmp
stc
inc
popa
sub
push
jmp
inc
pusha
arpl
stos
sar
in
jbe
fdivrl
mov
sarb
aam
std
sbb
mov
mov
imul
rorb
sub
stos
fiaddl
jg
out
scas
dec
fidivl
cs
inc
add
fcoms
xchg
sub
pop
xchg
push
sub
sbb
outsb
inc
inc
out
cmpsb
shl
add
iret
clc
xor
lods
in
jge
fists
pop
ja
xchg
das
dec
adc
xor
shrb
xchg
pop
pop
jge
sub
adc
es
fmull
pop
les
mov
mov
jmp
xor
fisubs
icebp
dec
xor
adc
mov
sar
pusha
sub
es
add
mov
jbe
cmp
mov
xchg
aam
inc
filds
lret
mov
fstps
dec
xchg
dec
mov
push
cmp
cmpb
sbb
loope
sbb
cmp
xchg
lahf
lahf
pop
push
ds
outsl
jno
pop
lods
mov
js
adc
pop
loopne
add
out
add
sub
add
sub
jmp
roll
sub
xchg
in
subl
outsl
icebp
xchg
sbb
rclb
stos
pop
jo
loopne
and
xchg
or
shrb
jl
jmp
hlt
test
imul
shrb
mov
jg
sahf
pop
mov
sbb
mov
sbb
scas
mov
jo
mov
insl
mov
roll
adc
pop
sahf
inc
or
push
lock
imul
inc
add
push
sub
and
in
lods
xor
adc
mov
shlb
mov
cmp
lret
sahf
push
arpl
lock
pop
mov
xor
movsl
pop
jo
push
dec
sub
movsb
and
adc
test
fimuls
test
or
sbb
mov
jnp
or
cwtl
bound
or
mov
cmp
rcl
jbe
cwtl
pop
or
xchg
xchg
inc
xchg
shrb
das
mov
pusha
mov
stos
mov
mov
mov
sub
cmp
imul
bnd
nop
lea
clc
mov
pop
pmulhw
add
mov
stc
dec
je
pop
call
cwtl
push
into
sub
mov
or
adc
xor
cltd
pop
aam
cmp
popf
loop
ds
inc
mov
dec
xor
cli
dec
jne
mov
inc
mov
add
xchg
cld
push
mov
in
mov
cltd
mov
adc
ds
fildl
jge
bound
jbe
dec
push
pop
mov
and
sar
and
and
repz
push
cmp
in
lret
xor
dec
xor
mov
rolb
cmc
iret
sbb
imul
cltd
jb
outsl
jne
data16
push
sub
inc
or
inc
fists
jle
mov
push
mov
push
or
sbb
sub
adc
mov
cwtl
cmp
mov
lea
mov
stos
pusha
and
mov
jbe
xor
inc
inc
rcr
cli
addr16
push
sub
mov
addl
mov
lods
es
xchg
mov
jne
stc
sbb
sahf
xchg
sub
fwait
insl
imul
dec
mov
mov
push
sbb
or
mov
xchg
add
cld
loope,pn
in
minps
mov
mov
adc
mov
mov
ds
test
pop
jbe
jbe
mov
sub
push
pop
es
outsb
mov
mov
jb
sub
and
push
xor
sbb
inc
pop
test
add
out
mov
or
pusha
add
pop
popa
sub
es
xchg
ffree
lcall
dec
out
push
or
mov
adc
scas
cmp
lods
xor
or
inc
sete
shlb
sbb
jecxz
out
xchg
and
push
jmp
sub
invd
push
popl
scas
loope
push
pop
xchg
adc
dec
mov
cwtl
ret
mov
ljmp
sbb
dec
push
shrb
mov
filds
test
inc
cmpl
adc
mov
loopne
nop
hlt
xchg
ljmp
lods
stc
pop
pop
add
shrb
add
mov
fcomi
sahf
cmc
cs
pop
fildl
ja
xlat
xchg
mov
leave
pop
clc
out
mov
push
mov
lahf
add
fmuls
ret
out
dec
pop
test
inc
push
sbb
mov
pop
or
jmp
mov
cmpsb
imul
loop
in
mov
daa
add
jp
adc
pop
outsb
push
inc
mov
scas
or
push
clc
fidivl
cmp
fidivrs
inc
mov
es
adc
inc
push
addl
pop
pop
nop
in
jmp
pusha
mov
pop
pop
dec
jno
jecxz
dec
xchg
ljmp
jbe
fistps
fs
mov
xor
cmp
adc
and
sti
rcrb
mov
add
js
inc
push
dec
test
cltd
jp
aas
and
sbbl
popf
fsts
pop
lods
or
pushf
jne
sub
add
scas
outsb
je
loopne
pop
cmp
incb
ret
sub
movaps
sbb
sub
ja
out
and
mov
sbb
dec
outsl
sbbb
insb
cs
mov
mov
cmp
aad
pop
xor
inc
roll
add
loopne
jmp
shrb
fidivrs
icebp
cmp
adc
scas
loope
or
jp
hlt
mov
jno
daa
jmp
xor
fists
lds
ja
inc
mov
je
cwtl
in
popf
push
fisubl
dec
outsl
arpl
add
xchg
loop
push
jecxz
fwait
movsl
and
xchg
scas
xor
sbb
xor
push
ja
loop
popa
dec
loop
popl
or
sub
pop
cmp
call
pop
mov
test
incb
adc
mov
inc
ffree
outsl
fildll
imul
and
push
jecxz
push
outsb
mov
mov
or
mov
xor
mov
sti
inc
push
loope
andb
adc
inc
mov
aam
cwtl
cld
dec
or
aam
pop
push
adc
sarl
ret
xchg
xor
adc
inc
outsl
je
dec
jl
adc
in
mov
icebp
pop
loope
mov
add
outsb
in
fisubl
repz
bound
sub
and
pop
std
out
scas
mov
xor
into
sbb
repz
fidivs
mov
adc
inc
mov
orb
jl
mov
lods
fstps
push
cli
sbb
cmp
mov
jp
push
xchg
lea
das
mov
jmp
and
lods
fwait
pop
jb,pt
fmuls
xchg
in
xchg
push
jnp
pop
aad
push
mov
clc
lods
pop
dec
movsb
dec
push
sbb
dec
fldcw
scas
xchg
addr16
shrl
rcl
in
push
cmpsb
dec
sub
std
in
cmp
lock
adc
push
mov
jge
add
xchg
loope
shrl
rcr
ja
fmuls
xor
adc
add
pop
xor
push
pop
adc
pop
mov
xor
fstpl
insl
or
dec
or
leave
or
cmp
jmp
add
loop
pop
cmp
jecxz
jae
push
in
fbld
xor
mov
out
cmc
push
movsl
xchg
cmp
fcoms
mov
sub
into
sbb
insb
fcomp
add
cltd
test
xchg
jbe
pop
dec
jmp
fcoml
rorb
cmp
sbb
out
pop
cmp
pop
fistpl
dec
sti
cwtl
inc
inc
adc
aaa
cmp
xchg
test
fwait
insb
cmp
cli
jbe
push
icebp
insb
push
adcl
mov
insb
repnz
push
ds
aaa
push
lock
mov
push
ljmp
adc
pusha
sub
push
fmull
mov
imul
das
fwait
jle
pop
mov
inc
and
cmp
push
imul
rcl
sbb
pop
and
mov
and
test
add
call
loopne
leave
mov
icebp
gs
scas
testl
pop
cmpsb
loop
mov
sbb
ret
and
push
mov
sbb
sti
and
adc
mov
movsb
pop
sub
popf
pop
clc
mov
cmp
mov
mov
mov
hlt
push
in
fildl
adc
mov
lds
sbb
and
and
cmp
shr
es
in
mov
add
pop
cmp
sub
sbb
sub
cld
dec
sar
inc
mov
adc
fidivrs
rcr
xor
add
mov
mov
xchg
call
sub
stos
dec
icebp
add
inc
daa
out
pop
jb
mov
pop
cmp
in
addr16
ret
push
mov
popa
loop
shrb
dec
or
sub
fcomip
test
outsb
mov
dec
pop
push
adcl
mov
xor
aam
loopne
enter
int3
stc
or
cmp
cmp
aad
test
int
insb
popa
mov
lcall
ret
mov
testl
pusha
fbstp
out
pop
test
push
sub
and
adc
rorb
xchg
xor
fs
fsubrs
dec
dec
gs
loope
cmp
cld
mov
out
mul
pop
and
jle
jb
cmp
add
push
sbb
mov
lds
adc
das
mov
push
scas
mov
push
dec
cltd
sbb
or
sbb
popf
ja
jecxz
jmp
dec
mov
sbb
inc
mov
xchg
scas
cmp
rcl
push
orb
std
push
nop
mov
or
call
adc
lret
push
dec
pop
jb
lock
ret
mov
pop
push
clc
fdivs
jg
clc
stos
sbb
push
cmp
dec
fsubl
cmc
and
addr16
scas
imul
jno
inc
mov
pop
icebp
dec
iret
enter
inc
stc
insl
jecxz
or
ret
fnstcw
out
add
std
push
adc
sub
sub
push
mov
mov
or
cli
sbb
rorb
fs
fwait
test
add
jbe
aam
jae
mov
mulb
adc
cli
xchg
pop
fcomps
dec
imul
icebp
movl
xchg
cmpsb
push
dec
sub
jge
mov
jns
or
pop
aaa
push
adc
loop
mov
mov
fcomip
je
cmp
jge
and
add
outsl
in
cmpsl
adc
popa
and
pop
xor
ja
je
cmpb
lret
arpl
mov
push
push
sub
cli
mov
and
clc
movsl
jp
mov
adc
inc
sbb
lods
pusha
mov
jae
ret
adcl
pushl
xor
mov
pop
mov
and
xchg
mulb
ds
inc
test
and
aas
mov
les
outsb
mov
sub
cmp
mov
mov
outsb
orb
inc
sub
cmp
es
jecxz
movsl
jo
jecxz
xchg
shll
andb
stos
ss
addb
pop
dec
or
jmp
pop
push
sub
shll
pop
xor
insb
push
syscall
jnp
sbb
mov
cmpsl
mov
and
dec
cmc
mov
cmc
dec
ffreep
inc
push
and
push
push
xchg
mov
dec
ret
clc
lahf
push
fcmovnbe
jle
dec
xor
mov
mov
pop
or
cmpsb
call
and
ror
stc
popa
iret
mov
ret
das
fadds
xor
mov
jl
iret
or
aas
cmpsb
or
cmp
jmp
mov
xor
dec
dec
inc
cli
into
enter
inc
leave
ret
imul
lock
arpl
sub
push
orl
fdivl
mov
test
dec
or
mov
fadds
addl
inc
cmc
or
mov
or
xor
sub
mov
and
add
js
pop
std
pushf
or
or
mov
inc
cs
dec
loop
cmc
jne
fs
and
or
and
sub
fnstenv
jg
xor
xchg
shrb
dec
and
aas
sbb
outsb
fisubrs
stc
stos
sbb
jge
push
sbb
sbb
push
mov
xor
and
dec
adc
adc
mov
xor
xchg
dec
stos
dec
adc
fiaddl
scas
pushl
pop
inc
xlat
in
push
test
mov
inc
cli
sbb
stc
jae
sbb
mov
enter
mov
push
out
pusha
add
mov
cmpsl
cli
push
dec
jb
je
mov
shlb
fnsave
pop
out
adc
hlt
dec
add
in
testb
jg
adc
lahf
push
hlt
xchg
dec
xchg
pop
sub
dec
push
mulb
insb
pop
mov
cli
mov
xchg
nop
sub
xor
mov
push
push
das
pop
pop
sbb
filds
pop
mov
mov
lods
gs
in
nop
push
sbb
add
outsb
jmp
cmpsl
lds
sbb
cmovnp
in
aad
aad
jecxz
dec
loopne
add
inc
adc
stos
out
dec
sub
sbb
aas
push
ror
in
imul
jle
movsb
in
jmp
jmp
out
sahf
sub
or
ljmp
and
sbb
and
out
std
cmpb
pusha
or
lahf
mov
adcb
inc
inc
push
ficompl
mov
inc
mov
jp
ja
sub
pop
adc
loop
mov
cmp
mov
push
push
stos
adc
rcll
scas
pop
lds
sbb
shll
inc
mov
sub
cld
cmp
or
jecxz
std
or
cld
aaa
and
rcrl
sbb
dec
aam
pop
roll
jne
lods
insl
mov
or
dec
jp
xchg
sbb
movsl
mov
scas
xlat
inc
lret
adc
leave
mov
mov
dec
fnsave
scas
and
insb
or
pop
movsl
push
dec
rolb
dec
push
ja
adc
push
sbb
ret
test
outsl
mov
or
inc
sub
mov
mov
nop
adc
add
fiadds
out
fistl
jl
mov
imul
popa
jg
decl
popf
bound
jecxz
in
push
or
rclb
jg
fsts
sub
shlb
mov
add
stc
mov
xchg
out
xor
aam
popa
mov
cmpsl
xlat
mov
lds
pop
std
or
mov
sarb
insl
cmpsb
outsb
push
push
inc
xor
loop
out
and
adc
jl
stc
and
jnp
push
pop
into
push
in
dec
xor
aaa
jne
out
fnstsw
and
add
mov
test
fistpl
sub
pop
sub
cltd
xchg
out
sub
adc
lret
hlt
fstps
sub
inc
cmp
out
aam
or
mov
jmp
pop
push
mov
cs
dec
cmp
loope
pop
push
rcrb
rcll
adc
inc
les
divb
mov
stc
push
std
jo
daa
rcrl
clc
aam
movsl
pop
lea
fstp
jo
loop
sbb
dec
dec
faddl
sbb
or
std
jg
cld
xor
xchg
rorl
insb
xchg
rcrb
lret
test
dec
imul
dec
dec
cmc
dec
fwait
mov
insl
jp
bound
enter
pop
ja
test
movsb
cmp
push
ljmp
xchg
add
sub
push
mov
push
jecxz
adc
push
jmp
adc
lds
jne
push
lock
add
push
cmp
cmc
jmp
pop
cltd
jbe
int3
dec
add
cmc
das
sbb
push
repz
fwait
and
push
add
add
shrl
lret
das
andl
repz
or
imul
mov
fsubs
shll
fcoml
xor
mov
mov
cwtl
inc
sub
and
out
add
pop
jp
ds
gs
sbb
repz
and
mov
pop
jmp
jb
test
inc
add
int
cld
cli
gs
rcll
xchg
out
loop
movsl
loop
mov
sbb
cwtl
push
sub
cld
scas
push
mov
push
inc
push
aaa
testb
mov
mov
mov
ret
push
out
push
xchg
add
xor
pop
cld
les
outsl
lahf
sub
outsl
sti
mov
adc
pop
ret
lahf
setbe
insb
mov
ficomps
iret
fadd
fwait
outsb
lcall
pop
xor
jbe
push
out
xor
dec
jecxz
imul
popf
inc
stos
push
xchg
cmp
test
dec
out
jnp
jo
aas
test
mov
add
sbb
sub
jmp
pop
mov
cmp
pushf
in
nop
cmp
mov
movsl
test
sub
add
ljmp
lods
fxch
shl
jg
pop
aas
dec
ja
ret
pop
mov
sbb
dec
aad
arpl
dec
cmc
pusha
loop
sbb
jno
insl
and
shlb
and
in
subb
add
sbb
outsl
fisubrl
cmpb
test
js
frndint
xor
xor
or
inc
scas
push
pop
push
push
pop
bound
rcl
dec
mov
pop
jg
lock
mov
push
sbb
je
xor
sbb
add
sbb
sbb
xlat
sbb
pop
les
fwait
lcall
xor
mov
in
shlb
clc
fld
sub
out
mov
push
mov
es
sbb
pop
aad
ret
les
inc
test
mov
lea
push
movsb
mov
shlb
cli
out
ljmp
xchg
mov
jge
inc
fisttpll
out
ficomps
call
xchg
xchg
loopne
int
cmp
imul
enter
fwait
or
sbb
sub
sub
jl
sub
inc
dec
js
cli
clc
jo
pop
shl
loope
fists
mov
mov
sbb
cmpb
int3
sahf
vshufpd
loop
call
jl
xchg
jl
push
pop
jge
clc
fs
xlat
pop
or
sbb
stos
mov
push
mov
rorb
sub
mov
dec
jg
cmpsl
fisttpll
sub
adc
insl
xor
jg
dec
shr
lock
adc
aaa
dec
clc
push
pop
int3
inc
sbb
dec
pop
xchg
xor
stc
jl
or
mov
outsl
jl
xor
adc
mov
cs
popf
fsubrs
fisttpl
sub
addr16
dec
mov
adc
int
enter
add
pop
stc
fwait
jle
mov
lret
push
aad
lahf
pop
pop
adc
outsl
lea
cwtl
jb
push
lret
mov
call
jmp
scas
mov
dec
insl
shll
sarl
test
mov
fwait
loop
sbb
xchg
or
pop
add
dec
shll
inc
shl
lea
xlat
add
aam
and
mov
mov
mov
in
pusha
dec
adc
sbb
xor
or
xor
scas
movhps
xchg
dec
adc
mov
ss
lods
jle
out
sub
outsb
pop
jb
dec
clc
cli
dec
sbb
ja
mov
sub
jge
loope
push
adc
mov
nop
and
sbb
cmp
jmp
adc
cltd
js
mov
enter
stos
jo
nop
pushf
das
fsubrl
mov
aas
loop
xchg
data16
icebp
daa
dec
mov
cmp
inc
fstp
fistpl
mov
addr16
in
inc
jg
mov
lret
loopne
fcomp
add
pop
int3
flds
fadds
shl
adc
neg
dec
cmc
loopne
mov
push
xchg
ljmp
enter
inc
push
xchg
push
cmp
cmc
lods
mov
mov
scas
cs
test
aas
mov
fwait
loope
insb
inc
sbb
mov
pop
loope
pusha
pop
lcall
mov
cs
sbb
mov
xorl
xor
adc
mov
mov
fbstp
push
mov
push
push
inc
shl
in
in
fcmovne
jo
adc
cmp
lea
pop
xor
sbb
pop
mov
jecxz
aad
shlb
rol
adc
cli
mov
xor
fistpl
mov
cs
push
ffree
or
sahf
cmpsl
ss
pushf
cmpl
jmp
mov
push
fbstp
popf
push
jmp
dec
hlt
pop
fwait
or
mov
inc
add
cmpsb
push
imul
pop
repz
or
adc
aas
out
cli
mov
jno
sarl
lods
or
adc
inc
icebp
cmp
pop
in
mov
loopne
add
cmp
sub
mov
out
pop
inc
sub
cmp
imul
ret
dec
or
and
sbb
fildl
sti
xchg
mov
mov
and
add
cld
cmpb
fwait
add
jno
imul
sahf
ja
leave
fists
std
xor
div
cld
jmp
xchg
int
gs
lods
mulb
movsl
mov
jae
lods
mov
jno
movsb
add
or
insl
aad
sub
pop
sbb
mov
hlt
dec
filds
xchg
stc
adc
mov
xor
fistpll
mov
into
cwtl
es
push
pop
sub
push
pop
inc
inc
xchg
loopne
pushf
sbb
nop
sbb
mov
clc
arpl
insb
pop
xrelease
pop
xchg
inc
ret
sbb
jmp
dec
test
dec
and
fstl
lret
scas
add
insl
loope
push
dec
popa
mov
in
cs
xchg
and
push
lock
xor
ret
mov
loop
mov
int
sbb
mov
jae
jno
ret
push
mov
inc
mov
mov
out
pop
mov
and
shrb
iret
ljmp
xchg
fsubrl
fidivs
repnz
sarb
mov
popa
jp
xchg
scas
cli
pop
cltd
and
mov
cmp
xchg
ss
or
mov
jns
insb
jns
dec
dec
mov
or
xchg
jns
fiadds
fcoml
aam
jl
test
xchg
cmpsl
scas
scas
fmuls
pop
pop
pop
xchg
outsl
in
add
xor
inc
jge
popa
js
mov
out
aas
push
jnp
inc
lahf
out
ljmp
insl
insl
aas
clc
mov
or
sub
insb
pop
mov
mov
mov
rcrb
arpl
jbe
mov
jmp
and
add
sub
push
bound
leave
pop
jae
lds
inc
xchg
inc
and
in
outsl
dec
inc
jl
mov
jae
adc
jne
cmp
push
pusha
push
sarb
and
imul
adc
les
sub
mov
mov
pop
mov
rcl
shlb
scas
fildll
add
lcall
or
test
pcmpeqd
out
mov
imull
pop
sbbl
hlt
repnz
inc
cmp
push
push
mov
sub
clc
push
scas
sbb
mov
xchg
lret
jecxz
mov
jg
cltd
out
inc
in
xchg
je
sub
xchg
xchg
fwait
or
sbb
or
pop
les
sti
adc
fisttpl
repnz
rorl
lds
adc
sub
stos
popa
cltd
dec
push
icebp
xlat
mov
hlt
or
mov
inc
rcll
xchg
inc
test
imul
push
ljmp
mov
rcl
rclb
int
sbb
mov
in
popf
out
mov
jecxz
cmpb
jnp
push
aas
popf
jge
xchg
push
or
sbb
jbe
bound
push
popa
mov
push
jns
mov
pop
pop
sub
gs
push
dec
mov
insl
aad
getsec
add
push
pop
aam
add
pop
into
mov
sub
in
add
mov
adc
inc
xchg
push
push
fisubrs
cmpl
mov
jbe
leave
mov
pop
mov
inc
sbb
je
scas
ljmp
pop
mov
push
gs
jecxz
fldl
sub
push
xchg
xchg
cmp
pushf
out
add
lahf
inc
dec
cmpsb
addr16
lcall
cmp
or
addb
in
inc
ret
mov
test
in
int3
inc
pop
cmp
adc
adc
outsb
std
mov
or
and
mov
das
sbb
movsb
mov
ficoml
loopne
shl
jo
popf
pop
fsubrp
pop
mov
mov
mov
out
test
lock
jmp
fdivr
jmp
andb
dec
push
sbb
mov
leave
ja
adc
filds
sahf
ljmp
and
jge
cmp
inc
or
loop
inc
int3
inc
hlt
xchg
lcall
jg
or
and
outsb
mov
mov
or
arpl
inc
paddb
out
repnz
jge
stos
mov
add
inc
and
adc
xchg
fstpl
hlt
scas
pop
cmpsb
fsubrs
inc
notl
lds
jb
push
sub
dec
andl
mov
in
jae
aas
xchg
aam
rorl
loopne
xor
imul
jno
ljmp
xchg
sbb
je
inc
dec
cmc
mov
mov
mov
loope
jmp
dec
mov
mov
aaa
test
push
jns
ljmp
adc
sarb
test
jmp
pop
cs
cmp
mov
pop
out
add
inc
inc
adc
xchg
or
push
notb
cmp
outsb
sub
leave
leave
cmp
mov
insb
ja
fimull
stos
dec
shl
in
loopne
cli
mov
leave
inc
ret
in
add
pop
lret
sar
rolb
cltd
sub
sbb
mov
test
aaa
dec
mov
push
lods
aas
mov
daa
in
fwait
ss
imul
loop
pop
pop
dec
mov
lock
hlt
adc
adc
push
inc
mov
ret
cmp
mov
and
cli
cmpsb
call
inc
xor
mov
inc
jo
outsl
int3
add
inc
lret
add
popf
out
inc
ds
arpl
js
xor
lahf
cmp
inc
scas
fimuls
and
loopne
add
inc
xchg
mov
call
mov
inc
sub
adc
jecxz
cmpsb
out
lret
push
scas
xchg
xor
ret
pop
jne
fimull
fisubs
cmp
outsb
fwait
shll
iret
add
ficomps
xor
mov
aam
push
pop
hlt
pop
cmc
popa
aas
jecxz
pop
add
addb
leave
mov
icebp
fsubrs
push
xchg
int
add
nopl
jae
mov
stos
test
mov
sub
stos
cmp
out
push
inc
cmc
fsubs
fldt
ljmp
xlat
and
sti
adc
mov
lcall
inc
cmp
mov
or
shlb
sbb
shlb
sbb
adc
add
mov
pusha
stos
fstpt
cli
jp
mov
sbb
rolb
in
pop
mov
mov
insl
test
mov
in
mov
ss
aad
std
stos
push
jecxz
lahf
in
lods
jo
notl
jbe
and
xor
jne
stos
push
mov
lret
mov
sbb
mov
icebp
pop
movsl
stos
test
lods
mov
aam
mov
adc
rolb
push
add
testl
fidivrl
push
stos
push
xor
js
jecxz
xor
out
jne
mov
xor
jp
shlb
xor
mov
popa
fstl
jg
test
or
sbb
nop
xchg
pop
mov
mov
gs
test
addr16
mov
test
inc
add
mov
or
dec
jnp
sub
movsl
or
ficoml
pop
cld
clc
mov
lret
cmp
pop
inc
xor
mov
call
mov
ficoml
loopne
out
jg
xchg
sub
dec
add
xchg
pop
sbb
add
lds
or
inc
sti
mov
lahf
mov
adc
jo
lret
jmp
scas
dec
pop
pusha
and
xor
add
xchg
ret
sub
dec
lds
mov
adc
mov
mov
movsl
inc
sbb
sarl
pusha
divb
insb
outsl
and
or
fwait
mov
repnz
push
sub
iret
ja
push
je
xchg
mov
insl
lods
mov
outsl
inc
shll
mov
pusha
jge
cmp
push
data16
cmc
push
inc
mov
inc
xor
roll
pop
cs
and
mov
xchg
pop
mov
les
jbe
push
pushf
adc
xchg
test
incb
sbb
adc
inc
out
ds
cmp
rcl
clc
andb
stos
pushf
xor
mov
dec
aas
sbb
pop
adc
insb
loopne
mov
mov
in
cmp
rcl
rorb
mov
jle
cli
pop
int3
fs
jle
rcll
inc
adcb
mov
or
jp
push
and
mov
add
inc
stc
es
cltd
rorb
test
ljmp
mov
push
mov
test
xchg
ficomps
cmpsl
add
push
jg
test
andl
imul
mov
sbb
pop
xor
clc
mov
sub
jnp
out
sbb
fwait
lret
in
pop
lods
iret
mov
pop
ljmp
add
shrd
xor
xchg
xchg
inc
andb
ja,pt
xor
test
out
sarb
xor
jecxz
insl
inc
es
add
loope
aaa
and
mov
out
mov
dec
push
push
dec
xchg
xor
fmuls
xchg
and
or
mov
push
xor
xlat
jnp
bound
or
divl
and
mov
aad
inc
push
mov
mov
test
outsb
into
clc
dec
inc
in
movsb
xor
daa
dec
mov
and
fwait
movsl
mov
adc
pop
test
push
and
and
imul
dec
loope
sbb
in
repnz
clc
sub
cmpsb
push
jno
dec
mov
cmp
mov
cld
fistpll
cltd
jbe
loop
xor
cli
test
insb
test
mov
inc
stos
xchg
add
mov
pop
js
push
aas
xor
rol
sbbb
jne
aad
repnz
aas
or
scas
jge
sub
and
insl
fmull
imul
insb
adc
roll
push
xchg
bound
call
sbb
fimuls
push
lock
out
xchg
cmp
fimull
push
and
push
xor
cmp
fwait
xchg
mov
insl
pop
dec
xor
mov
mov
mov
testb
fisubrs
push
mov
pop
mov
adc
dec
in
fdivrs
cmp
cs
hlt
stos
imul
mov
add
scas
dec
adcl
or
jne
xor
xchg
sub
jmp
xchg
mov
mov
ljmp
or
loope
jbe
ss
sub
pusha
sub
adc
incl
insb
sbb
cmpsl
push
jne
dec
in
mov
cli
daa
or
sub
cltd
push
aaa
call
mov
call
call
sahf
jne
or
dec
pop
addr16
mov
fildll
cmpb
mov
add
fdivrs
jmp
pop
push
pusha
outsl
sub
shl
cld
dec
add
stc
je
insb
sub
sbb
pop
mov
insl
and
inc
add
dec
sbb
pop
inc
inc
imul
push
sbb
dec
pop
cmc
les
sub
jl
and
in
add
pop
or
stos
insl
popf
xchg
out
outsb
mov
lods
data16
loopne
mov
pop
cs
adc
leave
data16
sbb
adc
mov
loopne
add
pop
jb
and
jge
adc
xchg
mov
inc
sahf
adc
pop
adc
xor
cmp
jp
insb
jge
push
fs
mov
jns
and
lcall
push
pop
mov
xchg
xor
adc
mov
sahf
mov
push
pop
test
cmp
add
pop
mov
push
orl
dec
repz
mov
jl
mov
aam
cmp
mov
or
pop
ss
sbb
insb
int3
pop
xchg
dec
bound
or
imul
pop
pop
mov
ret
arpl
or
testl
mov
push
leave
sbb
cmp
push
jbe
fdivrl
sbb
clc
and
shlb
loop
fisttps
fucomip
sub
or
add
insb
xor
dec
adc
xchg
push
incl
outsl
lods
addl
imul
outsb
icebp
xchg
jecxz
cmpsb
sbb
inc
in
out
jecxz
adc
mov
adc
aad
js
ss
rcll
xor
mov
or
inc
ja
inc
jg
or
pop
sub
adc
pop
add
sub
andl
pop
insl
pop
mov
loopne
and
xor
cmp
mov
loop
mov
pop
fidivs
xchg
push
js
or
pop
jl
ret
cmp
clc
sahf
dec
xchg
out
adc
outsl
jl
aaa
sbb
push
jno
dec
int3
mov
add
std
xor
lea
dec
sbb
clc
cs
jmp
sti
test
mov
mov
dec
popa
aam
jecxz
enter
cmp
add
ja
lcall
mov
inc
sbb
sbb
mov
xor
adc
dec
jmp
push
mov
mov
mov
sbb
sar
scas
in
mov
sub
adc
or
xor
mov
dec
pop
mov
movsl
inc
push
push
add
mov
in
dec
xchg
clc
mov
mov
and
outsb
iret
or
or
adc
mov
inc
xchg
dec
test
mov
mov
shl
adc
xor
movsl
xor
inc
sti
cmp
aam
lods
icebp
jbe
mov
adc
push
movsb
into
or
out
mov
rol
push
adc
add
imul
mov
pushf
ret
jbe
and
int3
sahf
sub
shlb
jmp
aaa
in
and
lahf
jb
or
pop
call
mov
push
arpl
addr16
mov
push
pop
sbb
test
int3
loope
cmp
out
mov
pop
movzbl
stc
and
jge
fs
cltd
imul
stos
jp
cmp
mov
popa
mov
sbb
bound
mov
and
add
lods
push
inc
jg
push
adc
pop
xor
stos
jbe
pop
mov
shrl
leave
xor
hlt
and
mov
xor
inc
imul
pop
dec
sub
cld
aaa
xchg
sbb
es
movsb
lea
aaa
push
mov
push
and
clc
mov
dec
ss
or
aam
gs
je
mov
adc
cmpsl
sbb
in
mov
mov
mov
or
dec
mov
fadd
jecxz
add
jmp
inc
in
jge
pop
jbe
mov
pop
fnsave
imull
jecxz
pop
insl
add
test
xchg
mov
inc
jg
jmp
jns
or
clc
mov
lds
or
or
dec
scas
sub
xor
repz
cmpsb
outsb
dec
fimull
cmp
push
sarl
fdivl
add
insl
add
dec
ret
ljmp
fimull
push
xor
nop
adc
adc
movl
sahf
mov
mov
out
add
fistl
cld
cmp
movsb
inc
std
scas
fwait
or
icebp
or
inc
and
and
or
xchg
sub
shll
mov
mov
nop
push
sub
push
hlt
lods
aam
push
shll
push
and
enter
jle
pop
ja
push
mov
sbb
test
sub
insl
xor
sub
mov
jl
hlt
stos
inc
pop
dec
cli
and
push
xchg
add
subb
mov
add
scas
or
inc
les
lds
push
xor
testb
cwtl
and
scas
jbe
cmp
mov
shll
jle
mov
mov
cwtl
add
xchg
add
insb
or
pop
mov
nop
pop
dec
mov
lods
mov
sbb
loop
or
jmp
mov
aam
or
mov
notb
xchg
fdivrs
test
out
sbb
push
or
out
test
jnp
and
inc
jle
enter
sub
loop
fisttps
sahf
or
push
shl
sbb
popf
mov
call
push
int
imul
js
xchg
xchg
movsl
cmpsb
push
ret
hlt
fisubs
dec
das
adcb
repz
and
inc
xlat
out
shll
and
add
popa
adc
cmp
jecxz
loop
out
xor
xlat
movsb
loope
hlt
cmpl
js
jecxz
sbb
mov
jbe
lods
and
mov
xor
loopne
pop
adc
scas
and
inc
cmp
xor
ret
das
inc
dec
sti
mov
sahf
adc
fildll
negl
push
jle
and
jb
sub
andl
aaa
out
loop
push
xchg
jb
stos
xor
lods
popf
loope
xchg
mov
lret
lds
fildl
int
test
push
cmc
cld
push
add
sub
sub
addr16
imul
sarb
inc
inc
roll
sbb
jle
pop
jecxz
not
in
mov
mov
and
xchg
ss
ficoml
jae
cs
cmpsb
mov
fldt
repnz
lock
xchg
fwait
scas
imul
cld
inc
mov
and
movsb
mov
or
rclb
mov
or
dec
sub
add
xchg
cmp
popa
xor
das
xor
push
pop
mov
das
dec
sub
lret
xchg
movl
jmp
shlb
repnz
clc
icebp
insl
das
aad
int3
out
adcb
inc
xlat
mov
lcall
cmp
or
out
out
cmp
inc
rcll
insb
shll
aaa
aam
in
cld
dec
and
pop
data16
and
push
out
mov
mov
and
sbb
push
jne
adc
cli
add
inc
cltd
jp
pop
jo
mov
sub
push
je
sub
jnp
jecxz
jmp
mov
mov
sti
insl
cld
into
cltd
push
mov
sub
mov
ljmp
xor
into
addr16
fldt
mov
jecxz
jnp
es
pop
stos
rcll
ja
orb
cmp
sub
es
inc
pop
out
pop
inc
fcmovnb
xchg
adc
aam
or
pop
adc
push
mov
call
mov
mov
mov
cmp
test
pop
std
dec
and
dec
sbb
cmp
dec
adc
insl
popa
xor
xor
jne
outsl
adc
xchg
cmp
into
mov
pop
mov
dec
pop
ficoms
mov
aaa
repz
cltd
pop
pop
xor
adc
aad
stos
cmpsl
mov
jo
sbb
xor
pop
fsubr
dec
or
inc
jecxz
data16
nop
sub
jle
sub
sti
mov
jns
movsb
ret
sar
jle
xor
push
jb
pop
push
enter
mulb
or
push
sub
push
mov
pop
shrl
cwtl
jmp
sub
pop
fidivl
dec
push
jbe
mov
adc
pop
test
test
mov
mov
inc
iret
call
in
push
hlt
mov
dec
inc
fwait
aad
adc
xor
add
dec
sbb
js
jbe
pusha
sub
nop
je
pop
push
xchg
dec
push
out
mov
in
movsl
testb
ss
mov
sub
mov
rorl
sbb
and
inc
mov
add
outsb
mov
add
sbb
add
mov
mov
xchg
mov
sbb
sti
sub
sub
xchg
loop
lahf
cmpsl
call
jne
pop
test
xor
in
xor
pusha
fnstenv
xor
and
jp
sbb
lahf
fcomps
mov
aaa
stos
push
push
push
mov
fbld
js
cmp
test
dec
mov
cmp
mov
jo
lods
cmp
xor
mov
xlat
inc
jle
imul
fidivrs
fadd
push
mov
jg
pop
cmpb
push
push
stc
mov
loop
add
xor
sbbb
js
mov
je
jecxz
sti
sbb
lcall
inc
push
stos
dec
jecxz
push
arpl
xchg
fucomip
ljmp
lret
wrmsr
test
shlb
mov
jno
adc
imul
sarl
jnp
mov
icebp
jbe
inc
insb
jg
test
mov
insl
push
mov
data16
mov
leave
lods
sahf
insl
or
stos
adc
movsl
mov
jne
push
mov
mov
or
xchg
das
xor
mov
xor
or
nopl
test
jl
inc
in
aad
mov
test
mov
add
mov
ret
fucomip
push
faddl
addl
push
cwtl
mov
test
aaa
daa
add
mov
push
pop
push
pop
jnp
roll
jp
add
cmp
int
push
mov
in
stos
cs
jo
xchg
sbbl
mov
xchg
test
jg
mov
mov
mov
sbb
or
cmp
jle
mov
sbbb
xlat
pop
or
xchg
scas
and
loopne
fistps
inc
cltd
xor
outsl
sbb
adcb
xor
insb
inc
xlat
pop
cmp
or
pusha
mov
js
mov
lods
inc
dec
inc
aas
jmp
push
cs
add
or
cmc
push
pushl
mov
adc
push
and
push
insl
dec
or
je
nop
mov
mov
cs
in
pusha
shl
cli
cmp
mov
sub
push
in
jmp
inc
pop
fildl
jecxz
or
loope
jbe
sbb
insl
nop
inc
out
inc
adc
and
and
pusha
and
loop
cmc
mov
jge
add
pop
lcall
push
hlt
sbb
test
cli
mov
xchg
jbe
xchg
shll
imul
push
jl
mov
outsl
pop
pushf
loopne
pop
mov
inc
insb
loope
dec
adc
ljmp
add
fwait
jnp
pop
leave
in
rcll
pop
pop
bswap
cmp
mov
outsl
and
mov
pop
xlat
outsb
fidivl
xchg
arpl
adc
das
stc
or
fisttpl
clc
sti
loopne
lcall
testb
mov
test
outsl
mov
pop
repnz
in
imul
shlb
lret
pushf
jne
ljmp
jp
fiaddl
out
push
sbb
sarl
mov
mov
mov
pusha
test
push
inc
fdivrl
add
inc
push
popl
mov
fdivl
xlat
pop
mov
adc
repz
iret
sbb
dec
leave
and
addr16
or
shlb
arpl
jecxz
test
inc
add
hlt
inc
adc
mulb
lods
inc
mov
push
mov
jae
sub
rolb
pop
mov
fcmovne
push
or
dec
mov
add
lahf
cmpsl
sub
sbb
add
pushf
add
loop
cmpsl
rcrl
lret
xor
jl
in
mov
ja
pop
jl
sub
jp
lret
pop
test
mov
mov
add
mov
out
not
shrb
test
lea
and
out
roll
add
call
xlat
fdivr
mov
pop
jg
mov
xchg
sbb
add
jb
sbb
stos
add
push
sub
lret
daa
pop
test
inc
sbb
stc
xchg
enter
les
enter
pop
hlt
xchg
xor
addl
sarb
repnz
sbb
pop
xor
lahf
in
arpl
adc
xlat
out
or
push
les
jp
js
mov
fnsave
imul
pop
pop
jmp
das
mov
dec
fstps
add
nop
nop
loop
aas
jle
adc
ds
scas
add
sti
insb
insb
shrb
jb
imul
dec
loop
mov
sti
call
adc
mov
pop
arpl
sub
jo
lods
je
ss
mov
stc
pop
rep
lcall
aaa
fnstcw
xchg
adc
add
cmp
push
pushf
pop
or
dec
xor
sub
xchg
pushf
mov
mov
and
shrb
inc
sbbb
sub
xor
mov
push
add
add
push
outsl
push
jne
out
es
mov
lret
jo
jnp
inc
mov
sbb
cmpsb
inc
fisttps
cld
lock
mov
inc
stos
push
sbb
sub
jae
std
jo
jns
push
pop
out
mov
jbe
std
cmpsb
fwait
je
dec
mov
adcb
or
jbe
ret
sbb
cmp
loop
lahf
xchg
dec
stc
imul
xchg
push
sbb
add
add
sbb
insl
inc
sub
daa
nop
adc
jle
outsb
pop
sbb
imul
mov
cs
rclb
mov
push
ss
cmp
icebp
sarl
inc
fsts
adc
inc
cmp
lds
lock
fs
or
push
lea
mov
mov
loop
fcomps
xor
jbe
insb
mov
call
pop
subl
cmpsb
fxch
cmp
jae
xchg
mov
mov
add
lret
fs
xor
ja
inc
push
fstp
int3
sub
mov
mov
sub
ds
jb
iret
icebp
cmp
mov
test
cltd
xor
popa
int3
andl
lock
ds
dec
bound
subb
ljmp
pop
test
mov
cmp
mov
ret
pop
in
mov
sub
pusha
inc
out
xor
mov
or
sub
mov
arpl
xor
pop
mov
test
aad
inc
sbb
ss
inc
inc
lahf
pushf
in
pop
xor
pop
shll
jmp
jne
adc
jge
sti
scas
push
stos
xchg
mov
xchg
mov
cwtl
ja
xor
icebp
mov
jns
stos
outsb
insl
cmpsb
pop
push
jmp
adc
fwait
iret
aad
pushf
jno
mov
cmp
xor
ljmp
add
adc
fisubrs
pushf
xor
fcoml
jns
ss
cmpsb
jle
add
pop
inc
dec
movsl
jmp
lcall
push
pi2fw
movsb
das
mov
ret
xor
inc
jbe,pn
mov
adc
cld
rclb
cltd
sbb
adc
loope
imul
jge
mov
xorb
loope
shrd
cmc
inc
xchg
ret
and
xchg
adc
push
stos
and
sarb
inc
addr16
pop
loop
enter
xor
jge
or
dec
sub
clc
and
rcrl
jp
cmp
lock
mov
pop
out
or
xor
pop
add
mov
adc
add
inc
ss
pop
repnz
adc
icebp
stos
mov
imul
mov
xor
mov
test
leave
in
adc
xor
aaa
sbb
cld
mov
addl
jecxz
iret
je
aas
cwtl
shrb
fmull
pop
inc
mov
icebp
scas
sbb
fs
xor
mov
sub
cli
std
add
mov
xchg
cmp
xor
mov
inc
test
or
das
dec
rcr
ss
aam
mov
jo
add
out
lock
es
clc
aam
loopne
mulps
pop
cmp
pop
or
stc
dec
ljmp
ja
mov
inc
cmp
adc
insl
jl
sub
jl
sahf
adc
cmc
mov
jno
jge
cmp
hlt
sub
mov
out
in
dec
xor
in
ljmp
pop
ds
jnp
fiadds
pop
adc
imul
sub
pop
add
icebp
and
jb
movsl
push
subl
xchg
hlt
scas
sbb
mov
jno
push
inc
add
in
flds
les
repnz
mov
xchg
sbb
mov
cld
push
movl
pop
push
adc
mov
dec
loop
adcb
mov
dec
in
push
mov
dec
adcb
cmp
lock
jmp
jg
test
dec
and
and
gs
stc
jecxz
sub
add
scas
pop
cwtl
or
loop
mov
mov
sub
lock
adc
jp
loopne
cmp
pop
inc
popf
scas
jmp
iret
push
sbb
and
or
sub
and
call
and
das
add
inc
mov
pop
jl
push
jg
cmp
xchg
bound
xlat
loop
movsl
and
negl
push
add
std
insb
sub
cmp
xor
stc
push
test
push
andl
cmp
fstps
xor
ds
in
ffree
mov
leave
xor
enter
ficoml
add
and
mov
sti
js
rolb
gs
jae
mov
dec
push
dec
mov
cmpsl
test
or
jl
sbb
pop
push
cmp
loop
cli
outsl
arpl
sbb
mov
and
fmul
test
cmp
int
mov
or
cli
out
mov
lahf
loope
adc
mov
shlb
insl
xchg
imul
inc
inc
sub
pop
clc
imul
jbe
and
push
daa
xor
xchg
or
orl
mov
sbb
lret
pop
mov
std
mov
and
cmp
ja
push
cmp
xlat
mov
xchg
test
cld
dec
and
xor
out
negb
cmc
ljmp
pusha
mov
xlat
aam
push
mov
ds
mov
scas
mov
lock
movsb
mov
mov
iret
js
add
and
call
in
mov
stc
int3
or
ljmp
fs
inc
sub
lea
xchg
jmp
bound
push
icebp
push
lret
push
sbb
cmp
insl
popf
and
sub
inc
ja
lret
xlat
lea
aam
xor
dec
and
mov
sub
mov
push
and
sub
ss
sbb
test
sub
bound
stos
push
fisttpl
hlt
lock
mov
adc
fisubrl
sbb
xor
icebp
adc
loop
sbbl
xor
jle
push
mov
and
scas
ret
dec
jg
addr16
mov
std
clc
je
xchg
xor
cltd
fstenv
je
mov
jg
ljmp
xchg
imul
and
inc
and
bnd
inc
into
xchg
leave
mov
fisubs
push
mov
jae
fwait
push
std
pop
inc
test
or
fsubl
sbb
shrl
popa
push
fisttpl
addl
jle
mov
push
cmpsl
mov
ds
jno
add
repz
xor
inc
dec
mov
dec
adc
lods
arpl
jb
sbbl
insl
dec
cmp
mov
int3
in
shl
pop
sbb
ljmp
mov
cmpb
mov
lea
les
ret
xchg
cmpsb
cmpsl
jb
sub
scas
nop
xor
ss
cs
int
in
xor
push
pop
out
lea
mov
and
repz
call
inc
call
aam
mov
mov
jle
pop
iret
jne
dec
cmpsb
lret
and
inc
mov
push
adc
jnp
pop
bound
push
cmp
jb
adc
in
aad
aad
lds
mov
sub
je
sbb
or
imull
or
out
mov
inc
addl
mov
test
lds
sbb
jns
mov
adc
fadds
into
sub
insl
mov
inc
inc
movl
sub
test
sbb
rolb
sub
and
rorl
cmp
pop
xor
sbb
mov
or
cmp
cmp
sub
sarl
add
sbb
outsl
repz
xchg
push
je
clc
adc
mov
nop
scas
es
std
mov
daa
jne
mov
orb
dec
inc
sbb
fwait
movsb
jge
test
add
js
testb
andb
and
shll
outsb
shll
loop
mov
popa
push
aas
xchg
cmpsl
mov
data16
add
inc
jle
push
add
and
mov
rcrl
outsl
push
cmc
cmc
movsl
faddl
lods
push
jp
std
addl
scas
sub
pop
sub
dec
inc
push
sub
xchg
fisubrs
pcmpgtw
scas
arpl
lock
sub
xchg
sub
or
mov
outsb
jmp
add
sbb
aad
sbb
jbe
test
add
mov
loopne
or
movsl
ja
xchg
mov
lcall
mov
fiaddl
xor
aaa
cmc
adc
cmc
mov
xor
pop
xchg
arpl
sbb
rcrb
mov
dec
hlt
inc
pop
mov
inc
mov
inc
imul
loopne
addr16
lahf
xor
add
test
mov
or
and
inc
adc
test
es
pop
fs
or
add
repz
xchg
data16
add
ja
adc
into
dec
loope
pop
sbb
sbb
lahf
js
sbb
mov
jp
pusha
sbb
call
inc
adc
pop
int3
es
pop
fstpl
lods
mov
or
jmp
adc
nop
xchg
inc
addb
scas
jl
imul
fldl
and
lods
or
movsl
xchg
push
or
cmc
aam
cmpb
mov
mov
cmpsb
cmp
inc
and
xchg
jno
lods
dec
xchg
test
push
mov
aad
cmc
test
xchg
lods
call
std
scas
rclb
fs
add
ficoms
testb
cwtl
cmc
pop
mov
outsl
cld
fsubrp
roll
push
jae
xor
add
scas
push
mov
shll
inc
fcomps
push
sbbl
inc
add
jne
cmpl
movsb
sub
adc
adc
clc
inc
aas
js
imul
movsb
push
dec
inc
mov
inc
add
in
shl
dec
and
imul
scas
loopne
sub
add
outsl
movsb
sub
stos
add
jne
pop
xor
sbb
fs
rorb
das
popa
jmp
cmpb
popa
push
fwait
int
lods
dec
int3
sub
mov
lahf
mov
push
sbb
xor
js
std
mov
or
push
fistl
dec
int3
mov
sbb
nop
push
ret
lods
mov
test
out
clc
and
fwait
sbb
add
cmp
jl
out
addr16
inc
mov
shrl
rorl
popa
add
pop
aaa
out
mov
repnz
faddl
sbb
sbb
mov
ds
in
dec
jge
mov
push
mov
movsl
das
xor
xchg
fldt
sub
sarl
add
leave
inc
pushl
clc
sub
in
sbb
xor
stos
inc
sbb
mulb
xchg
pop
mov
add
fstpl
push
push
loop
or
and
rorl
sti
clc
mov
mov
pop
js
icebp
out
imul
add
mov
lock
mov
or
and
sub
es
adc
test
testl
iret
push
hlt
push
mov
add
mov
sub
sbb
lock
or
lock
testb
xor
jnp
andb
inc
int3
mov
aaa
loope
je
scas
movl
imul
mov
mov
or
sub
pop
cld
mov
stos
mov
lods
xor
xchg
or
stc
xchg
arpl
and
pop
xchg
enter
or
out
pop
js
fcomps
sbb
fists
mov
mov
jbe
xlat
sub
ds
push
push
stos
dec
adc
jmp
aas
sbbl
frstor
and
je
sbb
jno
push
lea
mov
ljmp
fildl
cmc
mov
push
pop
add
push
push
lahf
inc
jbe,pn
outsb
and
fstps
push
xchg
push
mov
push
aam
adc
cmp
xor
lock
push
cs
pop
cld
es
loop
push
sbb
notb
xchg
enter
jo
dec
cwtl
loopne
mov
shrb
pop
sbb
incb
push
xor
cmp
adc
or
adc
push
cwtl
sbb
ret
xchg
imul
nop
pop
jg
outsb
in
mov
lea
movsl
jo
xor
addl
cmp
sbb
das
sbb
mov
subl
adcl
push
dec
scas
mov
mov
mov
rcr
fdivrs
cmp
ss
xorl
mov
sbb
pop
rorb
jmp
call
and
mov
sub
cmp
sahf
loop
adc
mov
sub
push
mov
jb
mov
add
jmp
inc
dec
sbb
xchg
pop
je
aaa
dec
cmpsb
cwtl
testb
mov
wrmsr
mov
inc
in
xlat
aaa
or
cmpsl
pop
mov
cmovnp
mov
leave
adc
aad
fucomi
lcall
pop
xchg
mov
pop
aaa
xlat
mov
lods
inc
movsb
sub
pop
ficomps
bound
subl
mov
out
and
sbb
sbb
dec
xchg
add
xchg
sub
rol
std
push
icebp
mov
dec
sbb
and
dec
call
pop
ds
sarb
push
push
mull
mov
xor
fs
stos
jo
pop
or
shrl
and
xor
sbb
test
inc
add
inc
addl
xor
cmpsb
scas
push
lcall
movswl
sub
pop
shl
notb
push
mov
int
mov
movsl
adcb
mov
jle
add
mov
leave
ficompl
xor
inc
sub
sbb
fwait
adc
cld
inc
dec
daa
inc
xchg
push
lds
cmp
mov
xchg
shlb
mov
imul
test
sbb
inc
adc
pusha
sti
ficompl
or
lret
lea
xchg
in
insl
adc
insb
insb
mov
or
faddl
jbe
xor
pop
push
xchg
adc
add
push
jecxz
pop
pop
mov
or
ret
xor
or
mov
mov
push
fcmove
shlb
roll
push
pop
cmp
outsb
iret
push
push
leave
arpl
test
inc
cmp
in
adc
mov
jge
enter
adc
push
mov
mov
out
es
adcb
cs
es
jne
scas
xchg
jae
adc
inc
and
mov
cld
ljmp
icebp
shlb
push
lsl
jmp
jle
cmp
dec
incb
mov
fwait
xchg
inc
mov
addl
insl
mov
inc
mov
and
lret
mov
jmp
lahf
lret
fs
orl
out
fisttps
push
pop
push
inc
or
dec
out
xchg
mov
sti
cmpsb
cmp
adc
pusha
in
mov
mov
cmpb
pop
out
cmc
dec
icebp
enter
push
mov
insl
inc
ja
popa
sbb
or
outsb
ret
xchg
fmuls
in
and
aam
movsb
iret
call
shl
sub
inc
push
cli
imul
aam
call
mov
mulb
or
add
inc
mov
jns
sbb
pop
mov
loopne
lcall
enter
mov
push
dec
pop
or
cmp
aaa
sub
sbb
daa
lds
pop
mov
inc
lods
scas
add
das
out
xchg
mov
icebp
cmpsl
lcall
add
mov
jg
sbbb
cmp
movsb
push
pop
and
adc
aaa
add
roll
adcb
call
mov
aam
inc
daa
ret
out
mov
fiaddl
cmpsb
lods
insl
roll
ds
dec
mov
push
sub
andb
add
or
sysret
push
jl
add
scas
imul
pop
repnz
jae
push
in
test
test
push
cmp
out
dec
lods
lret
xlat
mov
clc
xchg
pop
rol
mov
xchg
jbe
lahf
inc
popl
push
sub
sbb
cmc
xor
push
mov
sbb
fbld
subl
clc
pop
fwait
pop
and
mov
xor
ret
or
scas
enter
in
js
mov
rclb
jne
outsb
fadds
pusha
les
shrb
testl
out
imul
and
ss
jp
fwait
jp
sbb
orb
icebp
aaa
adc
and
mov
pop
and
ret
inc
daa
inc
incb
jbe
adc
jno
dec
or
mov
mov
es
pop
xchg
enter
sti
lods
bound
rorl
inc
pop
daa
xlat
pop
mov
xchg
jle
xchg
ficompl
push
mov
mov
push
or
mov
ficompl
pop
mov
repz
mov
mov
in
sub
cmp
roll
xchg
pop
sbb
movsb
adc
and
adc
or
pop
sbb
stc
and
pop
in
pusha
adc
mov
pop
lret
jge
in
pop
sahf
dec
fs
fwait
lret
dec
ja
cli
jo
push
mov
jmp
mov
stos
out
rclb
mov
dec
cli
and
dec
mov
and
inc
lea
stos
or
leave
add
ja
push
mov
lds
outsl
mov
loope
imul
icebp
rcll
push
inc
sbb
xchg
ljmp
stos
in
insb
aad
and
mov
pop
clc
xchg
test
and
jmp
into
ss
popf
inc
pop
push
mov
adc
pop
cmp
fcmovnb
add
mov
dec
jbe
outsb
mov
mov
in
fistl
popa
mov
push
xchg
xor
jle
lahf
jmp
xorb
icebp
mov
pop
xlat
cwtl
adc
adc
mov
fmulp
inc
sarl
cmp
push
dec
add
or
addr16
jo
stos
es
cmp
push
jae
xlat
insl
cwtl
rclb
mov
cmpsb
add
dec
add
mov
mov
lea
sarb
dec
insb
mov
outsb
insb
dec
or
cmp
mov
pop
mov
cli
out
xlat
in
out
add
std
not
in
or
shlb
push
cmpb
cli
stos
cmp
call
push
insl
mov
inc
xchg
push
push
ljmp
xchg
aas
adc
loopne
fnsave
in
jl
pop
mov
and
or
cmpb
fildl
add
jne
das
jns
mov
jno
ds
popl
pop
das
jge
arpl
push
adc
btr
pop
mov
xchg
out
cmpsb
or
xlat
in
roll
xchg
in
and
jb
imul
incb
xchg
les
dec
loop
inc
jl
or
cmp
repnz
mov
cmp
mov
clc
test
sahf
addr16
xchg
faddl
sub
push
nop
or
dec
mov
sbb
mov
or
xor
shll
pusha
xor
out
or
push
jo
mov
clc
cwtl
add
dec
inc
jg
loope
lea
loop
test
adc
pop
cli
xor
sub
movsb
and
out
loopne
and
lahf
mov
dec
outsl
lahf
mov
sbb
dec
cmp
mov
mov
xchg
fists
bound
add
mov
add
dec
pushf
lcall
xchg
cmpsl
jle
sbb
test
push
dec
or
mov
cmp
pusha
jmp
cmp
mov
bound
pop
xchg
push
sbb
and
test
aam
shll
punpcklwd
pop
in
pop
ljmp
gs
pop
push
push
add
and
data16
cli
ret
arpl
data16
mov
push
pusha
pop
jmp
ja
or
add
adc
pop
pop
push
rcr
ja
lahf
cmpsl
cmp
or
xor
xor
xorl
mov
addr16
cmpl
mov
adc
lock
or
test
aad
mov
or
jbe
popa
jle
mov
or
in
test
test
or
clc
dec
push
xor
push
dec
add
arpl
cmp
mov
inc
add
andl
add
arpl
pop
sbb
movsb
mov
in
push
pop
cmp
xchg
xchg
jne
outsb
enter
push
nop
mov
sbb
sbb
mov
aam
mov
sbb
fdivrl
pop
subl
or
inc
ljmp
jmp
pop
inc
mov
in
jb
outsl
cmp
jb
cltd
mov
fcom
or
push
mov
mov
in
push
les
fidivrl
mov
adc
adc
push
into
ret
js
xor
sub
pop
push
adc
loop
clc
daa
ljmp
and
push
outsb
ret
dec
adc
into
sarl
call
sub
and
dec
adc
xor
call
pop
push
mov
aad
cwtl
flds
mov
sub
xchg
mov
inc
mov
mov
int3
xchg
imul
faddl
popf
popa
push
adc
cmc
and
sub
shr
sbb
test
and
aas
mov
decl
movsl
pop
cs
mov
insb
push
das
test
sahf
add
xor
jb
nop
cmpsl
loope
loope
out
sar
mov
mov
test
fucomi
ret
cmp
fwait
movsb
paddb
jne
sbb
loope
js
mov
lahf
lods
das
rolb
popl
and
pop
xchg
cmp
pop
xchg
loop
test
mov
or
push
jge
mov
std
add
mov
negb
stos
xor
push
je
mov
jmp
push
das
add
add
inc
test
jne
xchg
jle
pop
loope
cmc
and
adc
pop
jmp
imul
mov
in
sahf
aam
mov
ja
dec
imul
dec
cld
nop
ja
outsl
mov
jb
jmp
push
cmp
cli
and
push
cli
mov
ret
add
or
inc
pop
enter
sahf
popf
pop
cs
mov
fcmovnb
add
out
mov
jno
roll
jns
inc
xchg
mull
push
add
mov
sbb
iret
adc
xlat
sbb
repnz
push
dec
mov
jge
loope
cli
add
mov
cs
or
fsubrs
mov
stc
add
xlat
inc
lods
pop
scas
push
stc
jb
daa
push
mov
or
adc
shrb
stos
pop
pop
cs
cmc
lds
aam
mov
loope
sbb
xchg
ljmp
push
or
xchg
jne
mov
push
jecxz
mov
fimull
mov
stos
popa
xchg
test
and
mov
loopne
inc
insb
xor
jno
pop
or
stc
inc
add
sub
pop
adc
or
or
or
mov
sub
in
sub
movsl
lret
orb
xchg
in
jmp
outsb
inc
lea
outsl
loopne
xchg
andb
pusha
jle
loopne
faddl
push
cld
or
scas
sbbl
xchg
and
or
gs
mov
adc
jne
sbb
sub
aaa
pop
shll
mov
mov
ja
outsl
mov
pop
mov
lret
rcrl
call
mov
ret
mov
sub
push
mov
jge
push
adc
xor
cmpsl
mov
push
push
pusha
xchg
cli
shl
inc
mov
ja
fisttps
lret
sub
imul
jge
je
mov
les
mov
in
ret
mov
push
mov
cmp
jl
sbb
fisttpll
mov
push
and
inc
daa
inc
cmpsl
jo
fs
outsl
test
xchg
push
repnz
mov
mov
adc
inc
pop
push
fistpll
lds
jmp
sbb
pop
data16
pop
fisttps
mov
mov
jbe
sti
iret
mov
add
mov
pop
pop
jle
mov
adc
mov
repnz
mov
and
ret
mov
push
rcrb
incb
jmp
sub
or
stos
sbb
int
sub
push
push
arpl
mov
add
test
sbb
or
push
mov
loop
aam
sbb
cmp
push
xchg
adcb
mov
push
push
push
mov
addr16
fisttpll
sub
inc
inc
stos
cmc
inc
and
enter
pop
jp
outsb
or
mov
testb
repnz
orb
cmp
xor
test
mov
std
mov
test
cld
add
mov
mov
roll
and
inc
fldl
mull
aas
push
or
test
mov
mov
jno
mov
cld
cmp
aad
lahf
fcmovbe
xchg
in
imul
dec
addr16
movsb
xchg
ds
cmpsl
add
push
mov
mov
pop
jo
iret
push
cmpsl
dec
es
and
icebp
xor
loopne
dec
mov
ljmp
mov
jle
or
cmp
mov
sbb
hlt
loope
cmp
xor
jl
jg
fldt
cmc
xchg
xchg
test
mov
pop
addr16
idivb
sahf
sbb
xlat
cmp
test
cmc
into
mov
mov
movsl
test
xor
push
xchg
dec
pop
rcrb
push
or
sar
lahf
loop
inc
inc
stos
ret
add
ret
xchg
add
jo
xchg
std
xor
cmc
in
jbe
scas
pop
sub
or
loopne
testb
rcrl
mov
lds
cs
mov
adc
test
mov
inc
roll
jne
push
mov
in
cmpb
and
push
pop
sub
test
das
in
inc
or
adc
int3
pusha
lret
cmc
inc
push
rorl
pop
or
pop
or
push
cmp
shll
lret
xlat
mov
mov
stos
jae
int3
or
das
je
shll
out
dec
ds
iret
dec
xchg
mov
sbb
inc
adc
enter
inc
btcl
and
dec
inc
push
bound
aaa
popf
push
fcoml
iret
subb
cmp
popa
mov
int
nop
fwait
or
mov
popa
cld
or
sbbl
aam
mov
dec
pop
push
jmp
aas
andb
fs
xorl
xchg
imul
add
jp
jae
cmp
es
rclb
xor
jno
sub
xchg
push
insl
sti
push
and
push
ss
xor
jns
es
fs
sbb
test
and
jno
cmp
adcb
pop
lods
mov
push
jo
icebp
loopne
adc
fstpt
or
stos
push
sbb
rcll
pop
xchg
pmulhuw
shl
or
sbb
jnp
sub
or
sbbb
push
add
sub
mov
mov
dec
mov
cld
imul
pop
adc
ret
xchg
sahf
addb
mov
lret
pop
addr16
mov
lahf
icebp
mov
mov
lods
ljmp
inc
mov
mov
pop
inc
fsubrp
mov
pop
mov
dec
sub
mov
addl
shll
xlat
mov
orb
mov
fst
imulb
popa
cmp
add
add
data16
add
pop
xchg
leave
mov
push
dec
ret
ja
lahf
push
push
pop
pop
leave
pop
fdivrs
mov
aad
xor
pop
loopne
outsl
out
shlb
adc
and
fstps
xor
repz
mov
enter
ret
push
sbb
xchg
cmp
mov
iret
jne
dec
loope
push
dec
icebp
mov
xchg
ss
xchg
rcll
popf
clc
in
sbb
je
push
stos
sbb
clc
cmp
jb
clc
mov
fdivrs
jnp
sub
punpcklwd
and
sbb
push
inc
cwtl
idivb
out
xchg
in
orb
cmp
cmc
stos
and
nopl
push
pop
sbb
lods
push
xor
pushl
mov
lock
incl
adc
in
pop
fldt
mov
add
and
ds
add
xor
ja
push
repnz
dec
std
or
in
or
add
bound
loop
outsb
cli
ret
sub
fiaddl
or
mov
mov
mov
aaa
xor
jp
lcall
jge
es
push
inc
mov
and
les
test
aas
mov
mov
ret
inc
in
rorl
xlat
fimull
xchg
loope
ljmp
loopne
jns
daa
xor
sub
sbb
pop
jle
mov
cmpsl
iret
popf
add
data16
sbb
or
dec
xor
add
test
sub
adcb
movsl
loopne
loopne
movsb
cld
mov
cmp
cmp
xor
sbb
lret
aas
add
mov
inc
jno
xchg
push
mov
hlt
push
lcall
iret
inc
lcall
add
and
jb
pop
mov
or
or
test
outsb
jecxz
mov
ds
mov
rol
psubusw
test
mov
mov
dec
add
les
stos
cmp
and
xchg
iret
fstl
pusha
push
add
enter
or
sar
or
pop
lods
xor
push
cmp
data16
cmpl
ror
cmp
ja
dec
fwait
mov
add
push
aad
push
dec
shrl
iret
sbb
dec
cmc
mov
push
into
iret
fldt
push
or
cli
scas
arpl
insb
inc
ss
mov
pop
inc
and
and
xchg
dec
mov
ret
jb
stos
add
cwtl
sbb
push
ja
and
sbb
cli
cmp
push
mov
push
aad
daa
cmp
addr16
jbe
ljmp
shlb
mov
inc
mov
sahf
test
dec
push
fnstcw
arpl
adc
pop
xchg
inc
ss
movsl
xchg
sub
imul
clc
inc
add
sub
mov
pop
jne
aas
enter
movsb
mov
sbb
pushf
mov
iret
pusha
cmp
and
dec
push
inc
enter
jmp
fsubrl
jmp
mov
cmp
add
jbe
jmp
repnz
sbb
mov
mov
icebp
loope
stc
rcrl
sbb
out
add
sbb
imulb
inc
sbb
mov
pusha
push
push
movsl
cmpb
pop
dec
mov
adc
jp
pop
push
outsb
jb
rolb
sahf
push
sub
xadd
call
fisubrs
aam
cmp
add
cs
js
lea
pop
dec
dec
insl
fcomps
adc
jle
push
iret
insb
das
jl
cld
lock
sbb
or
xor
push
mov
jns
clc
shlb
fsts
sbb
cmp
insl
flds
ss
pop
out
adc
xchg
sbb
pop
dec
fwait
mov
mov
push
xchg
sbbb
lock
inc
and
jb
mov
or
arpl
add
in
xor
jecxz
jge
push
aad
stos
dec
mov
clc
push
mov
or
or
add
or
dec
mov
add
sahf
mov
and
loope
xor
in
mov
jne
cwtl
fiadds
cmp
cmp
popa
mov
xlat
add
mov
mov
fistps
jecxz
clc
push
add
adc
jmp
aaa
jo
sbb
js
push
ja
fdivs
inc
sbb
subb
sbb
add
mov
test
cmp
sbb
push
mov
and
pop
push
cmp
add
inc
mov
cmpsl
sbb
loop
push
cmpsb
sahf
sbb
aaa
call
lods
adc
push
jge
push
in
xor
jle
cmp
mov
stos
push
jo
shlb
insl
sbb
jbe
lods
cmp
rcr
aam
jno
sbb
leave
outsl
cmp
lahf
mov
and
jo
xchg
std
push
push
shl
mov
addr16
jecxz
push
xor
mov
and
pop
xlat
in
rolb
dec
cmc
fs
insb
insb
or
xchg
sub
push
popa
loope
sahf
sub
dec
xchg
jp
pop
out
xchg
imul
jb
push
fiaddl
cmovs
xor
push
out
sbb
fucom
out
ror
insl
and
jne
fcomps
jno
dec
and
fmul
fdivl
xchg
ja
inc
les
mov
and
rclb
cmp
sbb
popa
mov
lcall
stos
fwait
loope
loop
daa
dec
out
pop
inc
data16
sub
adc
clc
ret
pop
icebp
insb
outsl
cld
sbb
push
mov
inc
addl
adc
cmpsb
les
loopne
sub
pusha
cwtl
mov
fsubs
push
mov
push
movsl
and
call
aam
mov
inc
xchg
iret
fistpl
push
insl
mov
in
pusha
xchg
push
cld
xchg
xor
and
inc
in
loope
mov
inc
dec
data16
mov
test
mov
loop
incl
mov
popf
loope
xlat
dec
gs
imul
add
inc
jp
push
addb
push
mov
pop
mov
and
or
pop
pcmpgtw
repz
or
jge
cmc
subb
enter
dec
mov
in
mov
clc
add
sti
out
push
push
push
lcall
dec
add
add
sub
or
dec
loopne
inc
pop
xor
mov
xor
adc
or
mov
sbb
add
insl
or
mov
adc
add
mov
cmp
cmp
sub
cmp
xchg
cmp
cli
add
imul
cmp
neg
jno
ret
inc
pop
les
sub
sarb
movl
sti
pop
pop
test
or
testl
dec
rorb
xor
jno
std
out
dec
ljmp
push
insb
or
push
pop
dec
sbb
or
popa
xor
test
mov
and
call
adc
in
test
pop
lods
daa
jg
and
adc
insl
push
fsubrs
fucomip
ss
mov
outsl
clc
add
or
push
out
mov
lret
xchg
jno
loopne
adc
and
push
push
cmp
mov
lods
int3
cmp
pushf
xor
xchg
dec
clc
aam
call
andl
mov
fcompl
out
cmpsb
mov
jmp
sub
sub
dec
xor
jmp
mov
and
mov
mov
cwtl
adc
ja
lea
mov
mov
add
push
jnp
mov
ficomps
dec
es
sbb
pop
cwtl
mov
std
bswap
cmp
test
mov
mull
out
cmpsb
push
sbb
sarl
ficompl
repz
xchg
mov
mov
xor
xor
daa
sub
push
int3
adc
arpl
cld
test
and
es
lcall
xchg
jb
mov
cs
xchg
jae
adc
dec
es
push
xor
std
in
inc
ret
sub
pusha
pop
sub
sub
cmp
inc
pushf
test
outsl
nop
daa
pop
pop
pop
lret
inc
sbb
cmp
push
xor
lahf
leave
hlt
cmpsb
cmp
mov
loope
inc
xor
push
sbb
rcrl
inc
in
dec
in
arpl
jae
shll
xchg
sbb
loope
cltd
test
xchg
mov
pop
icebp
js
les
push
addr16
mov
in
cmp
jle
mov
fs
adc
pusha
js
pop
inc
aaa
xchg
cltd
xchg
mov
leave
in
inc
loopne
and
hlt
jecxz
xchg
in
jbe
iret
outsl
jno
or
mov
inc
call
xchg
xor
lcall
test
mov
outsb
cmpsb
roll
shrl
fiadds
js
decl
mov
mov
ljmp
jl
rorb
jae
jg
les
scas
lcall
inc
call
xchg
sub
mov
sub
cmp
dec
or
ds
adc
insl
dec
fdivl
loopne
mov
sub
loop
fcoms
or
push
dec
cmp
fsubr
mov
push
xchg
and
neg
mov
ja
leave
xchg
mov
sahf
andl
inc
pop
cwtl
jne
fs
repnz
fldt
loope
enter
jnp
aas
fimull
jne
nop
push
and
imul
jae
out
or
cmc
lock
aam
mov
data16
call
lock
stos
push
inc
push
outsb
sbb
sbb
or
rolb
jbe
lods
sbb
adc
cmpsb
push
icebp
je
loope
add
cmp
sub
xchg
xor
mov
xor
pop
aam
in
jbe
nop
or
into
arpl
aas
test
in
orb
adc
jge
test
cltd
xchg
mov
dec
mov
lods
pop
cs
xchg
lods
loope
lret
add
movsb
test
push
and
sub
push
fldenv
daa
dec
sbb
cmpsb
push
loop
fstpl
or
std
aaa
push
pusha
and
dec
push
add
mov
insb
fidivrs
push
push
push
mov
and
cmp
and
or
add
out
scas
cmp
dec
pop
mov
inc
je
inc
scas
push
aas
cli
sub
sarl
adc
push
inc
pop
scas
scas
fdivs
jns
jne
enter
movups
inc
mov
cltd
fmuls
mov
adc
leave
jg
inc
sbb
jae
leave
adc
cmp
fsub
jle
jne
xor
iret
das
jnp
dec
lock
push
stos
mov
sub
clc
add
loopne
in
adc
movsb
push
scas
cli
loop
mov
testl
inc
dec
cmp
mov
dec
cmpsb
loope
lods
dec
fisubs
roll
cmp
popf
jb
cli
dec
out
shrl
pop
adc
test
fdivl
ret
push
cmp
aas
push
mov
clc
enter
arpl
xor
leave
mov
clc
cmp
push
mov
sub
outsl
jecxz
push
mov
xchg
lahf
sbb
jle
mov
subl
test
into
mov
out
cmp
in
pop
mov
adc
arpl
push
test
and
dec
bound
sub
sbb
push
lds
mov
lods
repz
pop
xor
push
jb
inc
push
imul
loope
fisubrl
inc
rclb
mov
mov
imul
jp
fstpt
movsb
movsl
or
sub
mov
es
sub
jg
adc
mov
imul
sub
rcl
xchg
addb
les
and
push
lcall
dec
pop
add
jne
adcb
popf
push
xchg
mov
pop
sbb
es
pop
lods
adc
jge
or
jns
ret
decl
fiadds
push
flds
mov
dec
das
sub
pop
xor
mov
xor
xor
mov
lods
jmp
pushf
or
jmp
inc
test
bound
mov
cmp
mov
idivl
loopne
pop
jo
shl
push
push
pusha
pop
jae
mov
test
mov
mov
cmp
imul
jmp
outsb
or
rolb
mov
inc
sub
sub
cmp
push
les
nop
dec
lds
mov
add
sahf
inc
outsl
into
ljmp
mov
neg
stos
xchg
xor
roll
mov
inc
orb
jo
adc
test
jl
cmc
push
das
lea
popf
pop
pushf
dec
mov
les
loopnew
popa
out
js
push
adc
xchg
xchg
call
sub
and
test
and
stos
fldcw
push
or
fisubs
push
orb
xor
sub
cmpsl
xchg
xchg
sub
add
jae
in
cmpsb
xor
cltd
mov
pusha
push
adc
dec
sbb
mov
or
mov
or
mov
sbb
sub
sub
mov
inc
pop
out
cmc
iret
daa
mov
fs
pop
or
fisttpl
mov
mov
fiaddl
inc
jl
mov
push
fwait
lcall
movsl
fnstenv
push
xchg
sbb
stos
add
insl
sti
cmpsb
popa
mov
inc
mov
fisttps
mov
packuswb
into
push
jle
inc
into
mov
push
mov
cs
and
pop
dec
or
out
inc
add
xchg
imul
cli
jne
push
mov
fsubrp
jmp
jo
jbe
push
jb
cmp
out
jp
pushf
enter
lods
cmp
repnz
iret
fisttpl
rorl
sbb
xor
pop
push
mov
mov
push
xor
sub
lret
jp
xchg
or
popa
clc
cmp
jl
shlb
xor
adc
ja
data16
jl
mov
cli
dec
xchg
testb
leave
loop
orb
outsb
or
pop
jg
daa
and
sbb
mov
std
dec
inc
cmpsb
mov
sub
stos
icebp
adc
and
in
in
mov
cmp
jnp
frstor
push
lcall
inc
fidivrs
test
cltd
mov
mov
jle
cmp
xchg
push
or
jne
inc
add
inc
mov
dec
push
dec
push
je
int3
clc
xor
aad
dec
or
into
xchg
pop
xor
mov
arpl
int3
sub
and
fdivrl
pop
xchg
mov
push
fistps
out
notl
mov
cltd
rorb
ss
jnp
loopne
sarb
sbb
sbb
fcoml
or
add
xor
ficoml
imul
clc
mov
lods
jnp
xchg
mov
faddl
xchg
lret
add
es
iret
les
nop
jns
xor
cltd
loop
add
mov
sbb
sbb
dec
rclb
mov
xchg
cmpsb
add
js
jbe
into
xchg
xor
fsubs
dec
ss
mov
insb
mov
mov
int
jge
pop
add
rcl
push
xorb
lods
in
push
push
clc
sbb
ja
pop
mov
andb
aaa
punpckhdq
jg
mov
cltd
push
lods
jge
dec
cli
sub
lock
js
in
xchg
popf
inc
add
pop
and
sub
in
and
inc
dec
cmpsb
sbb
add
and
addl
lcall
cmp
cmc
int
daa
inc
push
sbb
jno
inc
pushf
xor
jnp
les
pop
jo
scas
es
mov
lods
in
popa
loop
sbb
lea
bswap
mov
ss
push
pop
push
das
aas
sbb
aad
cmpsl
sub
outsb
stos
lret
arpl
jne
add
loope
les
cmp
inc
mov
icebp
push
xor
ljmp
jnp
jne
test
and
out
movsb
gs
ret
cmp
xor
adc
ret
sbb
dec
fdivrl
popa
inc
push
push
outsl
cwtl
sbb
xchg
fdivr
rol
jg
cmp
scas
arpl
sbb
ds
daa
iret
cmpsl
cmpxchg
mul
pop
push
mov
std
jns
popa
jo
icebp
mov
orl
sbb
and
rcl
in
fmuls
jp
mov
icebp
inc
mov
sahf
stos
notl
mov
or
lahf
lret
sbb
shrl
ljmp
sub
dec
mov
mov
popf
loope
mov
shlb
inc
es
adc
decb
and
xchg
jle
jmp
pop
push
push
shll
adc
jbe
mov
add
das
push
xchg
sbb
std
sbb
or
test
mov
daa
divl
xorb
call
xlat
and
inc
add
cmp
jo
sar
addr16
or
rcl
outsl
xchg
bound
in
mov
ja
mov
mov
add
lock
stos
jmp
push
fcompl
pop
je
fwait
loope
fidivrl
add
inc
jge
lea
and
mov
cmp
cmp
or
pop
pop
dec
leave
cmpsb
push
or
push
call
and
ja
mov
icebp
dec
xchg
mov
push
je
shrl
cmc
mov
ret
test
jns
xchg
jo
fcompl
push
test
outsb
add
xchg
fsts
jae
mov
and
frstor
mov
popa
inc
loopne
fcoml
les
movsb
xlat
mov
aam
or
mov
mov
mov
jne
mov
scas
cmp
data16
imul
insl
cmp
aad
mov
pop
cs
ss
fldl
dec
sbb
aaa
popa
in
adc
mov
test
jbe
lea
and
roll
movl
call
cli
or
dec
xor
xchg
shrl
jp
loope
mov
add
mov
mov
imul
loopne
imul
popf
testl
or
jecxz
pop
popf
inc
push
insl
mov
mov
fcmovbe
bound
pop
pop
mov
xchg
shrb
jns
bound
nop
stos
pushf
divb
fnstenv
mov
cmp
pop
jne
shlb
mov
rorb
or
pop
and
lahf
icebp
jl
mov
inc
mov
xor
add
sbb
das
inc
jnp
pop
or
pop
adc
inc
sbb
clc
jns
mov
fidivrs
add
bound
aas
adc
jnp
nop
iret
inc
mov
inc
aas
enter
xchg
nop
enter
fcmovb
xor
sub
and
push
aam
jg
in
in
int
aam
jne
icebp
mov
in
sbb
repz
push
xor
scas
push
mov
insl
xor
dec
mov
xchg
into
pusha
dec
lret
sarl
push
leave
sub
popa
cwtl
jbe
pushf
addl
sub
mov
sti
mov
xchg
aas
xchg
fdivrs
cmp
inc
ss
xchg
pop
mov
or
add
das
mov
and
in
cmc
push
jmp
arpl
outsl
rcrl
mov
pop
in
popa
push
in
mov
cmp
inc
daa
push
cmp
sbb
mov
sub
shlb
scas
push
jbe
std
and
mov
pop
inc
pop
adc
fsubs
int3
andl
adc
dec
popa
mov
mov
cmpsb
out
pusha
cs
jo
inc
cmpsl
dec
aad
cmp
rcl
movsl
sti
pop
call
fs
fsubr
pop
std
adc
pop
fstl
adc
shlb
push
mov
mov
dec
sub
xchg
ss
sbb
push
ret
xchg
aas
add
sbb
ret
insl
daa
hlt
inc
cli
sbb
adc
shrb
js
mov
lret
lds
or
ljmp
in
dec
cli
inc
mov
sbb
jne
imul
xchg
adc
cmc
push
pop
push
inc
in
int3
push
dec
imul
fcoms
outsb
jmp
and
mov
out
bound
cmpsl
mov
lcall
outsl
fnsave
out
sarl
int3
nop
cmc
dec
dec
std
push
push
jl
xchg
test
or
pop
mov
adc
insl
int3
jecxz
lret
or
je
push
and
mov
imul
test
ja
imulb
pop
pop
mov
sbb
push
add
cltd
pop
add
sub
enter
mov
dec
dec
inc
ret
mov
dec
inc
lock
sub
xchg
inc
into
lds
push
mov
lcall
sbb
mov
rol
movsl
adc
adc
cmp
add
iret
and
loop
outsb
inc
mov
hlt
sub
xchg
jae
adc
or
cld
addr16
push
aad
sub
cli
add
loopne
mov
and
mov
pop
sub
and
gs
lret
sbbb
jo
push
mov
xor
inc
lahf
lea
sbb
mov
fiaddl
and
mov
mov
ss
and
inc
push
hlt
jne
aad
adc
in
loopne
loope
mov
add
fdivs
mov
js
jbe
dec
lret
dec
jne
xchg
pop
adc
inc
push
test
je
add
ja
sarl
imul
ret
jmp
fmuls
cmpsb
mov
jp
jnp
mov
push
ret
out
inc
push
jae
out
fcoms
ds
das
insb
es
jle
adc
push
mov
das
dec
mov
xor
out
and
shll
mov
addb
or
fdivrs
cs
or
mov
inc
push
dec
rorb
ja
mov
shlb
clc
int
mov
insb
test
dec
bound
movsl
sbb
xchg
sbbl
push
cwtl
sbb
inc
push
les
loop
cmp
pop
scas
jle
fidivrs
fnsave
popf
aaa
subl
shrl
cld
push
mov
push
cmp
cmp
mov
push
imul
or
mov
addb
out
sub
rcrl
ficoml
stos
aam
stos
lret
outsl
idivl
mov
es
clc
mov
inc
mov
test
mov
pop
cwtl
xchg
decl
insb
cli
mov
jp
scas
lods
inc
mov
mov
push
cmpsb
push
sbb
lretw
cmp
adc
add
fnstcw
jl
jp
push
movsb
movl
aam
aas
and
add
mov
add
orl
ss
mov
add
push
xor
dec
je
mov
cmp
clc
aad
jbe
jbe
xchg
and
fdivrp
add
xor
push
test
xchg
or
xorb
lret
and
or
mov
mov
fidivrs
bound
roll
rol
mov
ret
daa
in
pop
daa
hlt
pop
bound
and
hlt
jl
sub
adc
stos
add
or
cld
lret
cmp
cmp
dec
jle
pushf
js
icebp
xchg
loop
mov
xchg
insb
dec
mov
les
orl
es
stc
jg,pn
pusha
test
cwtl
cwtl
and
xchg
js
das
into
call
jne
push
shll
jbe
repz
repnz
jmp
or
sub
into
xchg
mov
mov
loopne
mov
mov
push
dec
daa
outsl
adc
hlt
movsb
sub
aaa
push
jns
cmp
mov
aaa
pop
pop
pop
mov
lea
mov
mov
lods
loope
xor
xchg
sub
jle
pop
cli
popf
lods
xchg
stos
lahf
aaa
rolb
scas
sbb
add
mov
cmp
mov
inc
mov
dec
or
fwait
dec
mov
dec
mov
outsb
aad
jmp
mov
sbb
mov
xchg
mov
loopne
test
scas
ljmp
mov
sub
jae
add
inc
inc
cmp
jp
das
cli
scas
lret
cs
add
jg
xor
mov
sbb
es
lods
outsb
inc
xchg
add
sbb
pop
stos
cmp
adc
pop
ss
repnz
jecxz
push
push
es
xor
sub
test
xchg
into
fimull
or
in
xchg
xor
leave
push
mov
arpl
mov
les
fcmovne
dec
xor
push
adc
xchg
sub
loope
cmp
xor
ljmp
enter
cmovb
sbb
in
inc
cmp
out
xchg
push
sbb
cmp
in
call
arpl
add
pop
pop
jne
daa
inc
add
inc
add
out
and
and
cmp
push
xor
pop
push
and
lahf
aam
mov
sub
mov
cmp
mov
mov
div
test
jg
scas
or
loope
ds
loop
sub
cmp
xchg
sub
jbe
testb
daa
add
lods
ljmp
mul
fcom
outsb
clc
inc
mov
int
movl
mov
mov
bound
in
aas
xorl
movl
stos
out
dec
xor
test
xchg
mov
daa
mov
add
cvtdq2ps
clc
lahf
outsb
or
push
add
inc
and
out
adc
icebp
pop
ja
adcb
push
mov
pop
mov
repz
lret
clc
clc
roll
push
or
cmp
in
jb
outsl
sbb
test
mov
sub
adc
inc
rolb
paddb
andb
nop
popa
mov
sbb
push
aam
xchg
push
fmuls
aam
inc
shrl
xchg
ret
inc
push
push
test
aas
cli
add
je
shll
shll
push
imul
out
jo
jg
int3
pop
adcl
add
jo
xchg
es
mov
js
out
dec
mov
sbb
push
cmc
push
sarl
rcr
xor
xor
adc
cmc
test
jb
loop
lock
xchg
add
es
aas
inc
cmpsl
mov
pop
mov
imul
stc
fstl
adc
lea
roll
jg
push
push
add
mov
loope
leave
je
fcmovnbe
scas
dec
test
mov
jbe
les
insb
mov
sbb
pushf
fldl
cmpsb
ret
stc
ds
jmp
insb
jmp
fucom
inc
sbb
ja
pop
mov
fs
xchg
dec
into
push
movsb
inc
inc
ret
pop
sbb
pop
ret
jecxz
fistl
and
or
imul
leave
fwait
jno
pop
mov
fcoml
icebp
inc
div
das
fidivrl
adc
inc
cmp
xor
mov
sti
adc
cmp
sahf
push
into
cld
xor
add
jmp
sbb
insb
adc
inc
xchg
sub
sub
cmp
lret
jle
popa
pop
sub
insl
insb
jmp
cld
dec
mov
je
cmpsl
pop
mov
adc
out
push
push
insl
jns
jg
int3
mov
mov
in
push
test
and
adc
mov
adc
sub
aaa
ret
or
pop
ss
fldl
orl
mov
sub
mov
mov
cmpl
shrl
pusha
xor
inc
dec
and
sub
pop
adc
fwait
clc
adc
std
ds
cmp
inc
and
adc
or
dec
mov
or
mov
cmp
repz
mov
scas
adc
test
adc
in
push
inc
and
insl
push
iret
testb
mov
or
sahf
push
fdivl
pop
mov
sahf
push
lahf
adc
inc
enter
cwtl
insb
push
mov
ss
das
and
imul
add
mov
jge
mov
ret
inc
dec
ljmp
faddl
hlt
cwtl
or
sub
xchg
test
je,pn
sub
mov
pop
aad
dec
int3
aaa
insb
adc
mov
push
inc
icebp
or
les
pop
aaa
sbb
add
pop
jo
pop
mov
xchg
imul
daa
mov
mov
xchg
mov
xchg
lods
push
in
lds
jb
or
repnz
cmp
xor
pop
mov
inc
clc
jecxz
adc
inc
scas
sbb
xor
push
mov
sarl
ret
and
xlat
or
dec
ds
ret
jbe
popa
xlat
ds
push
sbb
mov
in
scas
push
xor
add
jl
or
or
or
or
pop
repnz
jg
ljmp
pop
ljmp
lea
and
outsl
fiaddl
movsl
or
adc
ds
movsl
inc
push
cmp
mov
fwait
xor
or
push
mov
jl
jecxz
movsl
sbb
pop
xor
and
xlat
cltd
aaa
loop
lret
adc
loopne
stos
dec
nop
ret
sbb
jmp
xor
addr16
lcall
sahf
cld
xor
lds
and
sub
into
ret
mov
jo
pusha
mov
mov
int
push
lods
add
jo
mov
add
push
clc
lock
data16
out
pop
inc
push
fldcw
clc
call
dec
sub
jge
out
mov
rcll
cmp
mov
aas
repnz
mov
cmp
inc
shlb
das
fsubl
addl
lea
xchg
push
jne
add
jno
aam
addr16
nop
cmc
sub
pop
xlat
push
int
xor
test
dec
js
out
stc
mov
adc
inc
mov
hlt
pop
push
sbb
mov
fwait
ja
sbb
cli
test
cmp
mov
arpl
js
jecxz
inc
jle
cld
clc
imull
insb
jno
mov
mov
mov
cmp
sbb
add
pop
and
dec
shll
inc
add
jns
cwtl
inc
pop
andl
loopne
roll
mov
js
mov
popa
aad
aas
jbe
xchg
mov
and
and
pop
or
sub
sbb
daa
mov
ds
xchg
dec
outsb
aam
icebp
and
inc
outsl
push
xor
jo
mov
lret
mov
int3
pop
sbb
nop
adc
lods
mov
xchg
push
dec
les
inc
daa
aad
adc
roll
jle
sti
bound
mov
js
lods
int
cmp
jle
rorl
sub
aad
and
shlb
cmpsb
fstpl
icebp
pop
mov
push
add
cmpsl
test
pop
cmc
dec
loope
inc
mov
pop
dec
mov
nopl
mov
dec
sbb
pop
call
xchg
xorb
cmpsb
dec
popl
pop
mov
mov
aas
push
push
movsb
rcl
inc
mov
xor
xor
inc
sahf
add
popa
jmp
add
test
jne
inc
jb
fisttps
out
cwtl
rol
dec
loopne
test
aam
test
cmp
inc
adc
in
xchg
aaa
xor
or
faddp
in
sbb
insl
mov
jge
inc
loopne
sub
sti
pusha
nop
mov
flds
loope
mov
int
mov
adc
inc
sub
jnp
pop
out
push
adc
mov
adc
ljmp
and
loope
lods
xlat
call
in
rolb
inc
sub
pop
jb
xchg
xchg
mov
pop
adc
sti
aam
rolb
mov
cli
xor
pop
lea
xor
es
sbb
lcall
sarb
ds
xor
bound
xor
add
fnstcw
xchg
gs
popa
mov
cmc
andb
outsl
stc
outsb
pushf
mov
int
push
inc
add
xchg
mov
push
push
add
mov
lock
mov
pusha
sbb
in
mov
daa
xchg
enter
inc
pop
push
bound
sub
sbb
pop
mov
popf
iret
das
fldt
call
cmpsb
mov
imul
out
test
xor
push
pop
aad
mov
call
fwait
fwait
sahf
scas
lret
clc
out
adc
out
mov
or
mov
and
insb
mov
bound
pop
sub
dec
dec
sgdtl
xor
ljmp
xchg
xchg
sub
cmc
adcl
push
xlat
mov
std
and
les
fidivrl
das
dec
add
mov
xchg
mov
mov
or
lcall
dec
cmpl
fidivl
push
outsl
xor
or
cwtl
push
xchg
hlt
xor
dec
mov
cmp
dec
mov
test
jecxz
mov
push
add
cmpsl
xor
xor
adc
test
aad
mov
xor
scas
dec
sbb
mov
mov
jg
addr16
mov
stc
xchg
sti
mov
pusha
mov
sub
and
mov
push
xor
and
test
dec
lods
mov
insl
add
pop
or
sbb
xchg
adc
lock
ret
mov
adc
and
sub
pop
dec
xchg
fiaddl
and
call
xlat
lods
out
sbb
pop
inc
mov
leave
fildll
lahf
push
jbe
xchg
pop
int3
test
in
movb
jmp
clc
lcall
repnz
xchg
add
clc
sub
and
mov
movsb
push
jo
xchg
loop
and
inc
mov
or
sbb
jg
jns
jo
or
xchg
sahf
mov
hlt
xchg
stos
jmp
or
jl
sbb
mov
adc
jbe
inc
icebp
es
sub
cmpsl
push
es
push
in
pop
inc
fldl
mov
push
sbb
mov
shlb
fisubl
das
rorl
negb
xchg
inc
inc
xlat
mov
nop
rol
ret
add
mov
jle
cmp
stc
mov
jecxz
dec
sti
mov
add
out
push
dec
fiaddl
sub
icebp
xchg
push
xor
lods
notl
roll
dec
aas
sbb
insl
mov
pop
loope
dec
jmp
ror
dec
jp
aaa
adc
call
jmp
push
adc
aaa
rclb
das
mov
pop
sub
scas
xchg
xchg
mov
ja
enter
ret
jnp
aaa
sbb
jo
pop
pop
es
sbb
std
aas
orb
push
jg
mov
dec
adc
inc
mov
pop
jo
push
lock
loop
adc
addl
dec
inc
dec
jmp
inc
push
or
popa
or
inc
add
pop
cmp
adc
dec
or
inc
scas
xchg
push
xchg
fdivs
lock
add
sbb
push
mov
mov
jno
or
cmp
jb
xor
mov
or
cs
ja
imul
sbb
test
popf
roll
iret
sti
xor
cmp
sbb
and
mov
test
jae
orb
pop
sar
dec
icebp
mov
inc
jecxz
push
je
push
fistps
xor
xor
jp
scas
cmp
cwtl
addr16
addl
sahf
lahf
mov
push
inc
movsl
loopne
lds
and
jl
in
push
push
enter
sbb
shlb
pop
sbb
repz
adc
xor
lea
mov
or
xchg
mov
add
loope
inc
dec
lahf
mov
hlt
add
add
daa
mov
lcall
push
xchg
pop
mov
outsb
add
movsb
push
sbb
loopne
inc
scas
inc
jno
fwait
cwtl
lock
ds
push
cld
sarl
mov
outsb
shrb
xchg
popa
aad
popf
mov
bnd
cmpsl
push
std
mov
loope
mov
push
ficoms
xchg
jne
add
and
in
xchg
adc
mov
push
cmp
shrb
mov
stos
jae
jno
xor
or
in
cmp
lds
jnp
cmp
jne
adc
xor
push
jl
pop
idiv
inc
rolb
and
xchg
addr16
mov
jmp
pop
cmpsb
sbb
inc
cmp
loop
xchg
and
pop
xchg
or
add
and
in
mov
sub
mov
mov
subl
and
subb
test
icebp
ret
loopne
les
sub
shll
jmp
jmp
mov
pop
ret
popa
adc
insl
gs
pop
movsl
xchg
add
jp
push
mov
xchg
bound
stos
rcrb
test
adc
clc
push
lcall
jb
sub
pop
es
sub
loop
fwait
cmpl
and
sub
sahf
in
mov
cs
adc
xchg
in
jecxz
stos
and
and
push
dec
test
cmovbe
mov
add
cmp
add
insb
rorl
add
and
mov
lds
mov
push
xchg
shr
sbb
pusha
mov
jmp
clc
lret
or
pop
jbe,pn
arpl
enter
adc
mov
pop
movd
enter
roll
inc
inc
in
out
pop
hlt
xlat
shrl
in
push
orb
das
mov
push
pop
sub
and
or
clc
les
inc
push
jl
xor
and
loope
xor
mov
lods
loope
clc
andb
out
sbb
or
and
cmp
lock
mov
imul
add
and
into
or
cmp
orl
icebp
mov
stc
mov
je
mov
movsb
mov
add
sub
pop
ja
frstor
cmp
cmp
mov
sub
mov
adc
fwait
imul
test
movb
dec
and
cmp
out
xchg
outsb
movsl
add
cmp
fisttps
fnstcw
cld
adc
mov
pop
mov
mov
sbb
cmp
or
shl
outsb
js
sub
hlt
lret
pop
or
mov
cmpl
push
vrcpps
or
in
test
popf
xchg
jb
out
xor
ja
xor
xchg
or
imul
adc
pop
mov
icebp
jge
mov
adc
fldl
sbb
mov
mov
xor
jle
shlb
inc
mov
idivl
mov
push
movsb
test
mov
mov
mov
adc
inc
sub
stos
out
out
adc
cld
cltd
inc
faddp
loop
dec
pop
mov
adc
loop
aad
pushf
insl
push
cmc
inc
pop
fbstp
rcll
lahf
enter
movsl
aad
push
adc
rcl
mov
push
add
xchg
sbb
es
sbb
std
sbb
and
jbe
push
hlt
mov
sub
in
faddl
lods
loopne
faddp
gs
mov
scas
fisttpl
xchg
aad
data16
leave
int
xor
test
cmpsb
mov
shlb
dec
jno
add
fcomps
push
js
dec
cltd
push
fsubr
xor
xlat
sarb
cmpsl
mov
in
adc
ret
add
and
adc
and
mov
jae
scas
cmp
inc
mov
sbb
xchg
lock
testb
enter
nop
mov
stos
outsb
sbb
call
nop
ret
xchg
pop
add
icebp
ret
adc
enter
xchg
rep
fstpt
aad
push
aas
inc
sbb
xchg
mov
push
inc
fs
aam
mov
add
les
mov
subb
andb
sbb
mov
sbb
addr16
das
mov
sub
cmp
push
and
sbb
xor
flds
jbe
add
inc
in
mov
enter
loopne
shl
cwtl
jg,pt
jb
sbb
es
xor
test
dec
cmp
hlt
mov
testb
xor
adc
xchg
psrad
xchg
or
lea
les
in
cmp
jmp
aas
jns
push
xchg
mov
mov
xor
addr16
sbb
out
cmp
out
dec
in
mov
mov
sbb
mov
loop
inc
loopne
cs
inc
or
ret
mov
in
cmc
push
hlt
or
je
loop
mov
push
and
mov
mov
les
dec
jo
sbb
stos
insb
mov
dec
dec
sub
leave
lcall
shll
xchg
leave
cmpsb
popa
inc
jl
cmp
sbb
rolb
cmpsb
ja
pushf
andl
xor
mov
mov
and
dec
jp
cld
iret
roll
jmp
jns
imul
cs
test
add
cmc
jecxz
push
mov
bound
pop
iret
jl
add
sbb
push
stos
inc
jmp
ljmp
cmc
xchg
ds
push
or
imul
add
and
add
popf
push
push
insb
test
enter
jne
mov
leave
pop
notl
xchg
add
shrb
xchg
xchg
call
lock
inc
fs
and
in
and
cmp
arpl
daa
dec
pop
outsb
nop
mov
arpl
fnsave
enter
xchg
rol
add
jecxz,pt
xor
jns
movsl
sti
jmp
clc
lahf
ror
sub
jge
aad
inc
enter
xor
add
sub
scas
mov
mov
divl
pop
push
lret
sub
push
lock
in
and
adc
cmp
mov
mov
add
dec
fwait
data16
xchg
pop
and
int
sahf
cli
adc
jae
inc
xchg
or
into
sbb
sbb
addr16
add
pop
pushf
dec
pushf
sbb
cmp
stos
push
push
sub
add
xor
adc
jno
ljmp
sahf
lea
pushf
adcb
scas
adc
sbb
lods
mov
push
or
clc
les
fbld
adc
xchg
clc
adcb
push
lods
pop
xchg
scas
and
sbb
idivl
jbe
mov
loope
insl
jno
pop
sub
mov
lcall
pushf
push
scas
insl
stc
cmp
xchg
cmp
xor
add
push
push
sahf
aaa
int3
data16
cmc
sub
adc
or
dec
xlat
lods
mov
aam
ficompl
pop
lods
push
out
insb
inc
cmpb
push
add
mov
aad
mov
or
mov
pop
testb
jg
inc
push
shrl
lcall
mov
popf
cmc
cmc
lods
sub
pushf
fcoms
into
dec
mov
sahf
dec
sbb
insb
scas
sbb
pushf
push
xor
xor
vmwrite
cmc
xor
and
mov
add
imul
je
test
inc
stos
and
cmp
mov
push
rorb
ljmp
sub
mov
mulb
jb
add
ja
xchg
fistpl
jl
ret
pop
xchg
jnp
and
mov
mull
popf
cmp
aad
ffree
std
inc
insb
xor
mov
sbbl
cmp
pop
and
adc
adc
ds
pusha
and
xchg
inc
add
dec
and
jle
sub
daa
cmp
and
pop
sahf
jbe
or
add
dec
ror
pop
mov
outsb
sub
push
into
test
inc
pop
mov
cmc
push
add
adc
pop
fildll
push
fmul
and
loopne,pt
imul
add
sbb
mov
insl
loop
in
push
fistpll
loop
insl
jo
fidivrs
add
pusha
xor
bound
sbb
andl
hlt
dec
adc
movsb
scas
roll
out
movsl
cmpsl
push
and
lea
movsb
or
stc
mov
jno
mov
sbb
rorb
add
gs
jno
inc
sbb
test
xchg
mov
or
sbb
cmp
xchg
and
mov
ja
and
and
pop
sbb
cmp
jbe
sbb
inc
xchg
dec
bound
jmp
adc
aam
addl
fisubl
pusha
mov
and
outsl
add
and
sbbb
outsl
inc
rclb
and
lods
xchg
jnp
movsb
and
mov
arpl
mov
sbb
sub
jne
or
add
divb
loope
mov
pusha
into
ljmp
repz
popf
insl
mov
imul
mov
lds
adc
clc
push
xchg
inc
jno
ret
roll
cmp
inc
shll
loop
pop
jmp
pop
outsb
sbb
lahf
lods
and
mov
leave
es
pop
push
aam
gs
cmp
add
aaa
xor
pop
lahf
leave
in
in
jge
add
add
mov
pop
sub
add
sti
popf
mov
sub
sbb
add
push
add
sbb
mov
fildl
lcall
mov
or
push
and
es
add
std
test
jmp
ljmp
pop
add
loope
pop
mov
mov
addr16
cmp
cli
clc
push
inc
cld
mov
sbb
scas
fsubrs
in
dec
and
xchg
adc
push
call
xchg
dec
loop
iret
pop
pop
mov
aam
in
dec
lcall
mov
iret
jl
loop
inc
iret
fnsave
repz
adc
jg
roll
test
sub
rolb
push
mov
frndint
cmpsb
mov
mov
push
add
ds
js
dec
test
pop
or
pusha
in
scas
movsl
inc
js
insb
mov
mul
push
pop
push
mov
rclb
jb
dec
adc
jnp
cwtl
and
std
jne
imul
adc
hlt
jb
push
ja
adc
cmpsl
sbb
aaa
pop
xchg
cld
leave
imulb
or
dec
clc
jbe
adc
pop
int
fwait
sbb
push
les
cmc
mov
push
shlb
xor
sub
sti
aam
sbb
std
jecxz
int
adc
xchg
and
dec
sub
xor
push
outsb
add
inc
ret
bound
mov
gs
mov
and
and
ret
scas
lea
and
outsl
xor
ret
inc
out
mov
sub
jb
fbld
adc
aad
cmpsl
imull
adc
dec
add
adc
lret
fucomp
les
push
out
sahf
jnp
xchg
scas
cmp
popf
push
movsb
hlt
dec
subb
icebp
pop
and
and
mov
add
push
imull
mov
add
add
mov
outsb
or
inc
pop
and
mov
rcll
dec
jb
dec
xor
mov
pop
dec
or
cmovno
inc
mov
mov
push
jg
ret
sbb
mov
scas
lret
popf
and
stos
and
cmc
divb
push
fwait
sahf
in
and
pop
mov
jge
xchg
push
jae
ds
mov
sbb
loop
pushf
sbb
cmc
xor
mov
nop
fs
sub
mov
mov
out
xchg
cli
pusha
mov
jns
aad
push
xor
dec
cmp
or
sbb
mov
jo
test
fs
leave
mov
add
add
fdivr
sub
stos
into
in
fs
push
xor
add
adcb
call
dec
leave
mov
xor
fidivs
mov
xchg
mov
loope
cmp
adc
cmp
js
leave
push
push
hlt
dec
jno
jmp
jecxz
jbe
in
mov
xchg
std
cmpsb
pop
and
mov
sahf
andb
dec
dec
mov
add
call
mov
cltd
lcall
xor
mov
outsl
cmp
stos
daa
cmp
pop
xlat
bound
adc
pop
cwtl
out
pop
mov
in
push
andb
or
mov
lahf
insb
data16
dec
iret
push
push
or
pop
iret
cmc
dec
cmp
or
mov
hlt
dec
popa
insb
jecxz
xor
inc
data16
outsl
stos
movsl
outsl
fldl
sahf
repnz
jno
sbb
and
jnp
mov
inc
cmc
gs
xor
test
cmp
push
xor
pop
je
pop
sbb
fucomp
adc
mov
rcll
add
sub
and
jnp
mov
cwtl
out
fisttps
xadd
repnz
add
sahf
stc
hlt
addr16
aaa
jbe
pop
pop
jp
add
and
pop
lds
cld
fld
lcall
or
xor
out
es
hlt
in
mov
push
imul
cld
dec
les
jmp
push
cmp
addr16
sub
mov
inc
testl
enter
fsubrl
cmpsl
pusha
add
outsb
inc
lea
retw
scas
pop
sbb
xchg
in
adc
js
mov
dec
push
pop
jl
lds
leave
cmp
pop
pop
ret
rcrl
sbbb
push
push
sbb
push
dec
iret
or
and
lea
sbb
mov
fs
push
shl
pop
inc
scas
push
xchg
stos
sahf
push
js
jmp
or
call
mov
add
jnp
cs
push
cmpxchg
shll
xchg
xchg
inc
jl
dec
adc
arpl
push
push
sbb
push
jge
ds
mov
shl
jp
jle
rcl
or
insb
cld
push
roll
cld
or
out
inc
add
loope
jl
or
jecxz
push
dec
push
hlt
sub
inc
cwtl
mov
mov
sbb
daa
xchg
xlat
pop
in
cmp
push
mov
ds
fdivrl
cmpsb
es
loope
les
dec
nop
ss
nop
inc
ret
mov
stos
add
or
xor
mov
int3
adc
scas
adc
sbb
test
mov
int3
inc
fdivl
call
cltd
fistps
mov
mov
out
sbb
lea
imul
sbb
add
out
dec
inc
ret
and
test
inc
add
xor
push
leave
sti
mov
jmp
push
or
pop
jae
test
test
inc
out
mov
test
movsb
les
xchg
or
into
mov
nop
xchg
adc
into
mov
xor
mov
jg
xlat
imul
cmpsl
imul
mov
pop
xchg
aad
cmp
test
dec
cmpsl
mov
jl
das
pushf
and
or
test
inc
inc
in
mov
jno
jne
mov
sbb
xchg
jbe
adc
sub
ret
insl
mov
dec
add
into
pop
mov
push
cmp
or
pop
or
sbb
rcrl
loopne
cmpl
pop
add
cmp
and
xor
cmp
aad
dec
mov
movsb
dec
jle
inc
push
xchg
dec
dec
push
jle
je
insl
loopne
or
adc
leave
loopne
sbb
repz
jmp
jmp
stc
cmp
testl
aad
insb
pop
mov
jg
loop
test
xchg
adc
insl
xor
arpl
arpl
adc
xor
hlt
pop
pop
dec
sbb
push
jno
ja
popa
inc
je
and
add
sbb
test
mov
xchg
loop
mov
mov
icebp
mov
clc
push
popf
pop
and
mov
and
push
push
fcmovnbe
jb
jmp
mov
in
icebp
aaa
sbb
and
or
cs
int
popf
pop
mov
adc
and
popf
mov
pop
fdiv
and
xlat
add
mov
jecxz
xor
or
inc
stc
pop
je
cltd
push
divl
jmp
mov
cltd
jg
test
ja
mov
movsl
xor
push
pop
sti
jo
xchg
or
pop
xorb
sbb
stc
sub
jmp
cmp
out
loope
mov
fildl
mov
test
rorl
gs
mov
cli
mov
xchg
aas
rorl
sub
inc
leave
dec
loop
mov
mov
jae
mov
popf
mov
enter
je
les
lock
ss
dec
test
xlat
jge
enter
std
cwtl
xchg
fldcw
xor
push
rorb
in
mov
pop
mov
ja
xor
addr16
push
push
shlb
adc
sahf
mov
scas
sbb
jb
pop
sbb
xchg
xor
movsb
fcmovnu
sbb
int3
lahf
xchg
mov
dec
jg
mov
inc
mov
mov
test
fsubs
jnp
shll
inc
or
lcall
fidivl
fadd
pop
and
std
sti
inc
inc
mov
loopne
stc
push
js
xor
add
adc
mov
xor
or
bswap
aam
sahf
dec
adc
test
inc
ds
fnop
addl
mov
jo
inc
mov
pusha
cmc
adc
add
cmp
push
scas
push
dec
xchg
insl
out
imull
sbb
xor
push
xchg
cs
loope
cmp
fnstsw
lods
push
mov
adc
xchg
mov
iret
mov
andl
sub
in
mov
les
inc
cld
addr16
shrb
pop
bound
push
pop
addr16
arpl
iret
pop
push
jmp
inc
loop
and
neg
sbb
or
xchg
jmp
outsb
sarb
repz
mov
cmp
js
ljmp
pop
inc
das
icebp
mov
scas
pop
cmp
cli
cltd
inc
rolb
fimuls
in
dec
xor
sub
movq
mov
sbb
sbb
pop
pushf
adc
pop
pop
test
pop
outsb
mov
jae
sbb
stos
popa
xor
les
jb
std
cmp
mov
mov
pop
inc
sar
shrl
xor
mov
mov
sbb
add
or
cmpsb
xchg
and
lea
lods
roll
xchg
fwait
jb
rorl
jb
popl
lods
test
push
pop
or
cmp
xchg
in
test
push
mov
sar
ss
bound
jbe
stos
mov
fildll
mov
pop
sbb
test
ja
mov
adc
cs
outsl
sbb
or
fs
add
popf
stos
inc
add
mov
sbb
sbb
and
popa
aaa
jmp
xor
sarl
pop
ss
imul
mov
jg
out
add
je
push
push
sbb
add
mov
fadds
push
insb
xor
xor
lret
pusha
and
int
inc
and
mov
cmpsb
push
hlt
mov
inc
and
inc
add
or
and
ljmp
push
add
adc
add
ffreep
mov
push
dec
dec
std
and
pop
xchg
inc
into
mov
fs
inc
add
cld
movsb
dec
jl
mov
arpl
mov
dec
test
push
jno
fnstsw
cld
ret
pop
jg
pop
sbb
push
imul
add
pop
mov
mov
mov
test
inc
push
mov
pop
push
add
or
mov
fistps
sbb
clc
pop
cwtl
or
daa
mov
stc
shll
cmp
dec
iret
test
xor
scas
je
lods
stos
push
iret
push
shr
stos
xchg
ds
and
adc
pop
add
add
mov
add
test
dec
mov
dec
jno
cmp
rcpps
in
aad
push
inc
and
mov
pop
data16
sbbl
test
out
dec
sub
test
jp
push
xchg
stos
stos
cmpsl
in
pop
add
sub
push
and
mov
push
mov
cmc
lods
pop
aad
or
push
je
jecxz
push
xchg
mov
mov
push
mov
mov
and
rcr
sti
jno
adc
add
test
lea
rclb
sub
popa
shll
pushf
jl
call
jge
add
inc
jle
mov
mov
fucomp
sub
daa
ja
popa
enter
fsts
xor
scas
subl
sbb
int
cli
mov
fstpl
pop
inc
xor
xor
push
sbb
jnp,pn
mov
dec
pop
pop
filds
cmp
cvttps2pi
push
inc
inc
xor
sub
push
jle
adc
push
push
xlat
icebp
inc
popf
dec
and
and
add
or
outsb
outsb
add
mov
fs
leave
ljmp
add
jbe
xor
dec
mov
enter
push
mov
dec
addb
inc
jl
es
repnz
mov
push
notl
mov
imul
fwait
mov
test
xor
xor
inc
cmp
xor
fwait
jl
test
sub
xchg
subl
and
out
out
inc
adcl
push
dec
pop
sbb
pop
cs
insl
cli
jp
jp
cld
xchg
sar
sub
jl
and
scas
pop
or
je
inc
push
dec
sbb
fs
adc
xchg
cmpsb
sbb
pop
adcl
pop
pop
lahf
or
push
push
fisttpl
add
xor
fstps
daa
lock
cs
cmp
ret
or
out
or
fbstp
sbb
rcr
lea
lcall
add
shrb
daa
fs
les
dec
les
dec
adc
fldt
sbb
xchg
ljmp
stos
xchg
and
std
and
mov
xchg
mov
scas
das
add
aas
shll
inc
je
movsl
daa
fs
xchg
xchg
addb
adcb
sbb
mov
fisubl
cltd
sub
imul
popa
aam
xchg
pop
push
lods
inc
cwtl
add
adc
popf
test
mov
xchg
shl
and
ljmp
fs
xchg
mov
mov
mov
or
add
pop
jmp
fcoms
xor
clc
push
sub
stos
and
cld
int3
inc
cs
sub
aaa
popa
pop
sbbb
into
loop
adc
mov
mov
mov
subl
in
stos
ss
nop
mov
adc
cmp
sub
out
pop
inc
sbbb
add
scas
xchg
fwait
rol
orb
sub
xor
fstps
add
inc
std
pop
mov
pusha
mov
pop
sbb
mov
sbb
les
add
mov
mov
mov
and
and
aad
push
ds
mov
adcl
call
mov
sbb
das
popa
testb
insb
movsb
inc
outsb
jl
mov
ffreep
sbb
add
scas
loopne
inc
fs
jae
pop
dec
dec
mov
jno
inc
pop
push
or
mov
test
dec
pusha
out
mov
cli
add
jge
movsl
push
inc
push
cwtl
je
or
mov
sbb
cmp
xor
xchg
pop
mov
adc
rclb
loopne
popa
and
add
popf
icebp
shrb
call
xorb
lds
insb
repz
aas
icebp
scas
insb
pcmpgtb
ljmp
push
lods
mov
sti
sahf
jp
push
insb
daa
mov
mov
jecxz
push
jns
pop
xchg
pop
adc
js
xchg
fcmovnb
arpl
mov
js
imul
jp
and
aaa
mov
fsubr
adc
jb
repnz
sti
je
pop
aam
int3
sbb
jecxz
sbb
lret
mov
mov
xchg
cmp
movb
mov
fstps
insl
xchg
add
and
inc
jae
mov
outsb
fidivrl
and
cmpsb
mov
and
xchg
sub
jg
je
mov
inc
pushf
xor
ret
addr16
mov
cli
push
cmp
out
mov
sbb
test
das
and
adc
inc
shlb
and
repnz
aad
xchg
mov
push
imul
add
add
mov
lcall
loopne
es
cmp
movsb
xchg
ljmp
scas
and
int
mov
mov
xchg
insl
sbb
rorb
adc
xchg
ss
pop
addr16
std
dec
cmc
jb
in
xchg
bound
dec
dec
xor
nop
out
in
addr16
adc
jge
popf
cmpsl
sub
sub
inc
ret
mov
push
and
out
mov
je
int
mov
js
shrl
pop
aad
daa
ljmp
and
adc
scas
insl
xor
int
mov
jmp
xchg
mov
pusha
lcall
es
inc
mov
test
sub
inc
inc
pushf
push
adc
mov
ret
cli
sub
jp
loopne
mov
js
cmp
sbb
aaa
out
popa
push
out
popf
filds
cmp
mov
push
jp
mov
in
pop
add
inc
orl
adc
cwtl
push
shrb
push
fstl
dec
xchg
push
and
pop
jo
aam
pop
daa
jg
mov
or
sbb
and
pop
sub
ret
js
icebp
stos
xor
ret
dec
adc
xor
mov
ret
pop
adc
in
jo
test
xor
out
js
int
inc
mov
or
push
or
sbb
add
adc
movsb
dec
cmpsb
xor
dec
aas
aas
hlt
ret
in
inc
int
shl
lcall
cli
clc
push
and
in
cli
adc
mov
xor
out
loopne
dec
pop
pop
out
loopne
or
cltd
cmp
mov
sbb
dec
repnz
mov
imulb
aas
adcb
popl
add
adc
mov
xchg
jns
leave
adc
shlb
xchg
push
add
dec
dec
inc
push
push
xchg
sub
rorl
xor
pop
sbb
adc
adc
mov
stos
adc
mov
push
fsubl
lods
push
jle
mov
loopne
adc
flds
inc
movsb
mov
pop
insb
sub
cmc
dec
sbb
imul
imul
add
push
ljmp
mov
pop
or
inc
xchg
pop
cmp
jmp
cmp
aas
sbb
int
xor
xchg
loope
loope
test
jmp
dec
and
jge
cmc
sarl
or
sub
cmp
aaa
add
xchg
pushf
loopne
dec
cmp
pop
pextrw
sbb
mov
test
xlat
add
lcall
inc
mov
push
jp
insl
pop
int
adc
dec
dec
pop
cld
mov
lahf
gs
xor
push
sbb
insl
ret
testb
fiaddl
fwait
adc
hlt
add
cwtl
mov
sbb
jo
jp
or
and
popf
aaa
or
xchg
dec
dec
pop
cmp
dec
xchg
sub
or
int
jle
pop
mov
outsb
xor
addl
shll
cli
mov
negb
cmp
mov
and
ljmp
add
and
mov
mov
inc
out
jle
push
insl
into
cmpsb
or
icebp
add
cmp
addl
aas
fistpl
lds
cmp
repz
pop
xorb
cli
and
nop
stos
leave
xor
push
mov
sub
mov
scas
cwtl
repz
rorb
imull
aaa
verw
in
out
loopne
call
pusha
mov
mov
mov
hlt
xor
pop
popa
jno
icebp
inc
mov
sub
xor
xor
xchg
sbbb
mov
mov
test
lock
or
cltd
les
outsl
inc
jle
or
sub
stc
sub
mov
mov
mov
xchg
pop
fcom
enter
and
iret
stos
cmpsl
movsl
push
sub
test
sbb
iret
les
fisubs
imull
das
enter
cmp
test
sbbb
pop
fnsave
gs
dec
inc
out
outsw
mov
jecxz
add
inc
adc
insb
and
cmc
cli
jbe
and
mov
aam
and
adc
jne
mov
dec
jno
lcall
aaa
in
push
int3
pusha
dec
pop
mov
or
out
outsl
pop
xchg
mov
xchg
lcall
xchg
mov
in
mov
fiaddl
dec
push
inc
inc
daa
inc
imul
add
in
shlb
cld
call
mov
aad
test
sub
lds
popf
movsb
sub
sbb
adc
jmp
mov
pop
icebp
xor
or
lock
pop
add
and
rcr
mov
ucomiss
xor
mov
cli
mov
pop
cmp
push
jo
hlt
and
inc
jae
mov
dec
adc
aam
mov
sub
mov
std
enter
mov
mov
jle
jb
lahf
aam
jecxz
in
xchg
sub
stos
add
xchg
cmp
fs
jne
or
rolb
mov
and
cs
mov
cmpsb
sar
call
cli
fsubrs
pop
pop
hlt
pop
sbb
in
mov
mov
sbb
mov
pop
mov
fisubs
jecxz
xor
aad
push
sbb
jl
ret
popf
push
xorl
inc
and
in
mov
movsl
movsb
mov
jp
pop
or
sbb
cmp
enter
push
ret
xor
cmc
nop
imul
addl
aas
inc
jo
cmp
in
sbb
push
dec
xor
push
call
push
nop
jne
arpl
inc
cs
mov
jg
and
aad
test
mov
sbb
inc
cs
adc
pop
int
jns
or
add
adc
repnz
outsl
lea
faddl
icebp
cmp
sbb
cmp
lds
addr16
sbbl
mov
mov
fwait
pop
enter
mov
mov
xor
ds
js
mulb
jl
xchg
cmpsb
ret
fxch
cmpsb
mov
daa
mov
sub
imull
sub
test
loopne
pop
pop
xchg
in
dec
sub
adc
xchg
lods
push
dec
ret
cli
push
mov
fistl
cmp
mov
and
cwtl
mov
aad
inc
or
movsl
cld
or
lret
jp
pusha
mov
out
mov
ljmp
mov
nop
mov
jg
ret
mov
mov
into
js
push
pop
mov
fisubrs
daa
sahf
xor
pusha
or
push
cmpsb
xchg
test
dec
ja
sbb
lods
ds
popa
aam
ljmp
jmp
xchg
push
rcl
pop
and
sahf
cmpsb
sbb
lahf
add
loopne
fwait
sub
test
sub
andl
mov
xor
into
mov
clc
je
adc
sub
pop
mov
add
mov
and
push
pmuludq
xchg
sub
push
adc
mov
xorl
and
jbe
push
cmp
leave
sbb
and
popa
pop
sub
xchg
pop
lds
xor
xorl
mov
rcl
stos
xorl
fcoms
jmp
pop
pop
lods
fsubs
mov
sub
pop
sub
or
add
ljmp
nop
rorl
sbb
loop
aaa
out
or
daa
lret
mov
cltd
outsb
pop
lock
pop
addr16
xor
jne
hlt
ret
and
sbb
rclb
jecxz
and
stos
fwait
mov
mov
cltd
cwtl
adc
test
call
add
je
outsb
xor
jbe
test
fisubl
and
and
mov
mov
mov
xchg
add
rolb
inc
stc
mov
in
lea
xor
imul
sub
fs
adc
enter
outsb
test
pop
lods
adc
dec
pop
mov
nopl
inc
ss
jo
inc
dec
fldl
pop
sub
jmp
into
mov
or
lcall
fnsave
or
or
add
jge
xlat
popa
xchg
pop
cmp
hlt
xor
pop
or
loop
and
ficoms
fsubp
dec
cmpsl
dec
dec
jb
push
mov
adc
jne
icebp
jns
sbb
cltd
push
nop
and
enter
repnz
mov
mov
nop
xor
xchg
mov
fstpl
fimull
inc
stos
add
cmpsl
bound
rolb
xchg
pop
popa
jno
inc
fnstenv
stc
fcomi
gs
fiaddl
xor
cmc
mov
push
inc
cli
es
neg
adc
mov
jnp
dec
cs
xor
add
push
aas
dec
dec
push
popa
mov
adc
mull
cmp
lock
cmp
add
clc
fmul
mov
sbb
icebp
aaa
fyl2x
mov
and
sub
addl
pushf
xor
xor
scas
mov
stc
ret
xchg
and
fcmovnu
icebp
inc
addr16
fdivs
push
in
dec
out
sbb
mov
mov
push
out
inc
push
push
jecxz
inc
and
loop
or
xorl
roll
ret
fdivrs
loopne
mov
and
xchg
sub
stos
jecxz
stos
xadd
roll
xchg
shl
xchg
fstpt
testb
movsb
cmp
int3
es
ss
and
mov
and
or
and
pop
call
and
dec
aam
movb
add
sub
lds
fnsave
loope
cmp
add
sahf
add
pop
mov
data16
bound
jle
mov
ss
insb
pop
stc
ret
xor
out
mov
aad
pop
pop
movsb
cmp
ds
xchg
xor
testb
jo
adc
or
cmpsl
outsb
jae
cmpsb
pop
loopne
cmp
testb
cmp
cmp
loope
andb
push
sbb
addb
push
cld
jg
inc
xchg
test
push
decl
test
jmp
inc
test
mov
fidivrl
cmpsb
cs
aam
rcrb
fstl
mov
inc
movsl
push
aas
xor
and
cmp
xchg
stos
xor
mov
adc
cltd
mov
ss
punpckhwd
adc
fstpl
cltd
pushf
lods
jg
jne
mov
pop
cmpsb
pop
loopne
pop
push
test
and
lods
and
pop
sub
aas
hlt
jle
and
xchg
andb
cmp
pop
add
jle
iret
outsl
mov
testl
mov
lret
fdivrl
mov
or
js
std
jne
mov
sbb
mov
shlb
fwait
dec
xchg
es
cmp
mov
fcomps
or
cmpb
ret
add
cmp
enter
out
lods
int
push
xlat
inc
mov
loop
xor
jge
hlt
or
mov
test
inc
std
fcom
jbe
dec
jb
xchg
mov
inc
or
cltd
cmpsb
cmp
jg
aas
aam
dec
in
dec
bound
dec
xor
shll
sbb
cwtl
movsl
test
xor
in
jns
arpl
pusha
loope
pop
sub
dec
dec
mov
in
rcll
cmpsl
test
xor
or
sbb
sbb
add
ds
dec
shrb
cmp
fnstsw
jmp
pop
add
sbb
push
adc
inc
mov
pop
popa
cmpsb
mov
xchg
arpl
out
or
xchg
push
cld
pop
in
cld
xchg
inc
and
int3
std
and
leave
pop
and
adc
pop
fists
pop
enter
mov
fiadds
push
push
dec
call
dec
ss
push
lahf
adc
cmp
lods
data16
push
cmp
call
inc
cmp
and
fldenv
daa
inc
sub
sbb
repnz
cmp
or
pushf
or
or
mov
and
cltd
daa
push
test
dec
addr16
shl
push
xchg
dec
das
mov
inc
ret
iret
sbb
loopne
push
mov
into
add
adc
xchg
push
daa
into
negb
xchg
and
xchg
xchg
fwait
rclb
int
dec
inc
xchg
mov
adc
into
jmp
leave
mov
lods
mov
adc
fwait
leave
ljmp
sub
push
rolb
js
dec
stos
outsl
or
push
xor
addl
stos
inc
rcll
cmp
xchg
mov
rolb
std
pop
sbb
fistl
sbb
sub
and
fmull
test
pop
cmp
fs
cld
imul
xchg
push
test
les
mov
inc
out
inc
push
es
dec
sbb
subb
les
imul
xchg
push
inc
or
pusha
mov
jp
or
xor
js
clc
mov
inc
fs
leave
pop
leave
js
pop
jge
nop
mov
mov
jno
mov
sub
jns
dec
jle,pt
cmp
and
icebp
sub
adc
mov
add
sub
sbb
outsb
mov
xchg
movsb
and
lods
bound
jmp
scas
data16
inc
add
lahf
jno
push
add
enter
out
pop
and
adc
rcrl
push
cmp
pushf
xchg
std
insl
push
cwtl
lahf
adc
xorl
sbb
push
inc
pop
pop
push
je
sbb
test
stos
out
fildll
insb
pop
push
xor
loop
mov
insb
and
add
pop
mov
cmp
int3
mov
push
rcrb
hlt
hlt
dec
add
lds
sbb
mov
cmp
int3
inc
inc
sbb
aad
stc
sub
sbb
mov
lcall
mov
pushf
test
add
mov
sti
push
mov
xorl
xchg
fdivr
add
andb
dec
std
xor
adcb
loopne
adcl
xchg
data16
xor
aas
iret
mov
add
std
xlat
popa
pusha
xchg
xor
aam
fdivrs
jle
jl
cmc
clc
xor
xchg
sub
mov
mov
adc
test
push
ret
xor
insb
fwait
maskmovq
negl
aad
stos
push
jo
jle
jl
insb
dec
lds
pop
in
add
adc
fwait
test
xchg
loopne
stc
movsb
xchg
test
rcll
mov
lock
testl
ret
cmpsb
aas
inc
mov
mov
push
jbe
add
cli
hlt
out
call
cmpsl
mov
xchg
inc
push
mov
push
insb
ds
popa
lret
jo
test
enter
or
push
jae
lock
xlat
push
push
pop
fwait
xor
iret
sub
popa
stos
je
dec
sbb
and
lock
lea
xchg
ret
cmc
push
cmp
shlb
mov
cmp
enter
sub
jnp
cmp
cltd
js
push
mulb
sar
inc
test
enter
ljmp
movsb
and
insb
out
push
pop
ficoml
pop
inc
xchg
clc
jmp
mov
mov
jge
push
push
ja
aam
jne
in
inc
cmpb
pop
test
push
inc
inc
popf
and
or
in
add
mov
sbb
rclb
adc
in
adc
and
fdivrs
loopne
nop
data16
pop
negl
dec
test
push
xor
xor
push
adc
movsb
arpl
inc
inc
mov
test
icebp
addr16
mov
les
pusha
and
adcb
lds
lea
test
mov
and
inc
mov
lcall
xchg
mov
aas
xchg
pop
dec
addl
movsb
adc
outsb
ffree
adc
push
mov
outsb
inc
cwtl
xor
xchg
call
inc
jo
adc
add
pop
adc
mov
jl
sub
sub
fadds
xchg
sub
mov
inc
jmp
adc
mov
xor
adc
mov
sbb
test
jmp
mov
inc
xor
sbb
movsl
and
mov
sbb
into
adc
push
cmp
bound
jo
stos
xchg
and
cli
aam
test
push
sahf
pop
push
jne
ret
cmp
push
sarb
inc
insl
push
and
adc
dec
out
and
out
movsb
jge
insl
xor
inc
dec
test
imul
mov
push
movl
data16
add
outsb
dec
mov
xchg
cmp
mov
rorl
add
outsl
jbe
sub
push
fsubrl
sbb
fcomi
sbb
pop
les
add
cmp
mov
je
insb
sbb
adc
lods
lods
fstpt
loop
and
mov
pop
mov
sbb
mov
add
inc
and
and
mov
jmp
rclb
rolb
cmpb
mov
addr16
sbb
push
adc
jmp
dec
xor
subb
in
push
nop
pop
pushf
push
pop
ljmp
sub
aaa
arpl
xor
mov
ljmp
xor
lahf
rolb
xor
dec
fcoml
test
clc
cmpsb
nop
shrb
ja
adc
aad
push
aas
mov
imul
sbb
adc
mov
out
adc
dec
fdivrs
orb
cmp
rcr
sahf
or
ljmp
jnp
add
push
fisubrl
stos
cmp
lds
pop
push
add
adc
mov
test
lcall
sti
hlt
xorb
and
test
mov
sbb
lods
js
cmpsl
xlat
adc
cmp
and
in
mov
pop
or
ret
push
out
sbb
inc
xorl
or
imul
fcomi
sub
data16
lods
nop
loope
push
mov
push
sub
in
xor
popa
push
iret
add
pop
inc
daa
jno
loopne
cmp
notl
shll
test
insb
clc
out
or
sub
xchg
bound
test
loop
mov
pop
add
stos
mov
inc
xchg
insl
jo
xchg
sarb
mov
sahf
arpl
cs
jmp
xchg
pop
sub
mov
sahf
ss
aad
icebp
inc
ret
jnp
xchg
pushf
pushf
test
js
aad
sbb
lcall
mov
mov
mov
xchg
xchg
ja
pop
leave
mov
push
jo
and
lods
mov
add
and
leave
jl
or
mov
adc
orl
insb
icebp
jg
je
mull
testl
ds
arpl
adc
add
jmp
movsb
sbb
mov
xchg
adc
into
cmp
fmuls
inc
cmp
push
mov
loopne
inc
cmp
orl
dec
push
mov
insl
dec
loop
imul
jnp
sub
test
pop
push
dec
mov
inc
pop
sbb
jo
inc
aas
out
outsl
mov
push
cltd
shrb
jne
into
es
jb
cmpb
jns
lods
inc
outsb
adc
aad
lcall
subb
enter
in
add
mov
mov
adc
push
cmp
push
cltd
daa
mov
cld
in
outsl
xchg
and
pop
and
jnp
sbb
add
pop
fbld
js
js
xor
insb
cmpsb
jo
jl
or
and
and
addr16
inc
and
outsl
xchg
ja
ret
or
or
dec
inc
jns
jle
pusha
add
pop
mov
mov
push
xchg
ret
mov
repz
gs
xchg
xor
out
out
adc
xor
push
mov
xchg
pop
cmpb
imul
lds
or
stc
add
scas
lea
std
pop
dec
sbb
subb
pop
int
aas
push
push
cmp
sub
adc
pop
je
and
stos
mov
insb
lahf
push
or
clc
jo
ss
enter
lock
subl
xor
push
daa
jmp
push
add
xor
mov
and
inc
adc
js
cli
das
cmc
fcoms
lret
pop
test
lret
pusha
push
mov
ds
in
repz
nop
loope
jge
and
mov
push
or
push
mov
add
iret
or
xchg
outsl
imul
pop
fwait
pop
repz
pop
ds
inc
rcr
jge
jp
and
lret
cmp
jecxz
pop
and
out
test
stos
inc
sub
adc
xchg
in
out
mov
xor
ljmp
fcom
and
ja
dec
push
xchg
xlat
lahf
icebp
inc
mov
movsb
xor
pop
inc
sti
pop
fnstsw
rclb
scas
jmp
jbe
clc
jbe
stc
adcl
es
das
in
pop
cmp
xchg
fstl
ffreep
mov
fwait
scas
sub
jle
xor
leave
imul
int
pop
jp
xchg
call
mov
cs
lret
popa
xor
push
jne
stc
loope
add
add
loope
sbb
jle
add
mov
data16
enter
dec
leave
and
aas
inc
les
jo
daa
mov
ljmp
push
adc
inc
pop
push
andl
insl
sbb
dec
sti
sarb
test
adc
inc
sbb
add
pushf
sub
inc
icebp
mov
or
sbb
outsl
fstp
in
nop
pop
and
cmp
sbb
ret
fs
pop
push
jne
lcall
cmp
shlb
or
das
sub
aas
cwtl
cmc
mov
lret
and
inc
shll
xor
mov
sub
fldenv
mov
or
add
jb
mov
add
jbe
scas
sar
pop
sub
cli
lcall
leave
adc
in
aam
jb
xchg
in
ss
ret
jb
add
rcll
mov
cmp
es
in
mov
pusha
sti
and
add
cmp
lret
andb
xchg
jbe
adc
xor
xchg
xchg
je
cmp
cmp
jbe
push
cmpsb
xor
cltd
and
mov
push
push
add
add
dec
std
jae
pop
lock
mov
arpl
scas
lods
test
in
dec
push
arpl
mov
pmullw
shll
jl
cmpb
mov
nop
iret
push
lahf
cld
sbbl
imul
sti
pop
insb
ljmp
fnstsw
push
add
roll
ret
adc
dec
sub
mov
inc
and
xor
jp
dec
adc
dec
ds
das
dec
bound
push
sbb
or
popa
inc
or
pop
sub
push
push
xor
adc
mov
icebp
xchg
lea
and
shl
lret
inc
aaa
dec
mov
xchg
sbb
repnz
loop
lock
pop
test
mov
lahf
push
jno
mov
fcoml
pop
inc
out
dec
jl
subb
andb
in
add
add
mov
incl
pop
inc
pop
mov
in
inc
lock
loope
inc
xchg
sbb
lahf
mov
shrl
cmp
cmpsb
ds
xchg
jae
sbb
pop
sbb
dec
mov
jbe
adc
shlb
add
or
pop
mov
movb
xor
cmp
mov
xchg
adc
xor
dec
mov
xlat
cs
xchg
and
or
sbb
pop
push
es
loope
mov
pop
rorl
cmp
cli
test
push
andb
inc
aas
and
push
xchg
jne
andb
mov
aas
and
push
cmp
test
xchg
fsubs
enter
lret
dec
add
icebp
std
stc
mov
addps
jo
add
pushf
pop
lds
rcl
push
icebp
and
scas
inc
mov
mov
sub
lcall
or
lock
mov
dec
scas
or
mov
addr16
sbb
dec
mov
cmp
jge
test
and
push
pop
mov
inc
lods
movsb
imul
adc
pushl
pop
push
test
xchg
scas
xchg
test
sbb
arpl
or
jge
and
mov
pusha
mov
test
sbb
jmp
mov
sbbb
stos
fistl
jle
insl
insl
cmp
cmp
sbb
push
lods
ss
mov
mov
dec
inc
addb
loopne
inc
push
pop
subl
lock
insb
shrb
mov
ds
jae
mov
sti
nop
das
in
or
add
jnp
repz
cmpsl
mov
sub
imul
xchg
data16
push
and
inc
push
mov
ljmp
jae
scas
imul
shrl
cwtl
sub
stos
scas
sub
push
addr16
popf
mov
stos
or
loope
scas
lret
adc
and
fidivs
pop
add
add
fldt
arpl
popf
cmpsb
rcr
sbb
xor
dec
fdivs
arpl
movsb
add
xchg
pop
mov
shll
jne
xchg
mov
lret
cmp
cmp
cmp
arpl
fiaddl
jo
loopne
pop
dec
lcall
inc
sub
mov
dec
inc
arpl
sub
and
fwait
dec
sbb
lock
pop
js
push
addr16
add
mov
mov
popf
cmp
ret
in
xchg
inc
pop
dec
aaa
mov
dec
xor
cld
shrl
test
inc
dec
mulb
test
scas
sarb
pop
aam
jecxz
adc
in
dec
mov
repnz
push
jmp
inc
leave
movsb
push
incb
xchg
popa
jl
jecxz
mov
or
fsubl
mov
insl
push
popa
xor
or
ljmp
lea
sub
mov
fcomp
xchg
nop
jmp
aas
push
loop
shrl
outsl
lds
jle
ret
movsl
leave
dec
imul
pop
adc
push
jae
call
pop
pop
scas
adc
clc
aaa
outsb
in
pop
or
push
mov
fs
dec
push
rclb
dec
movl
jnp
adc
pop
pop
aas
sub
jg
jbe
pop
sub
hlt
mov
pop
or
dec
xlat
push
adc
popa
repnz
icebp
pusha
sbb
jp
iret
mov
cmp
loop
aad
test
shll
and
xor
cmp
lret
cmp
inc
mov
jp
rorl
mov
lea
cmp
cmp
jns
or
std
mov
fisttpl
inc
sub
and
mov
pushf
jp
sbb
xchg
roll
fstpt
mov
push
push
lret
movsl
or
and
dec
push
pop
push
cmp
pop
outsl
mov
stc
xor
inc
mov
popf
jbe
pop
in
dec
sub
out
adc
pop
sub
push
call
xor
xchg
xor
inc
andb
roll
cs
pop
jg
sbb
and
dec
fldcw
push
mov
xor
je
mov
fs
mov
mov
cli
call
loopne
mov
jge
jmp
or
daa
lcall
jl
fldl
push
or
clc
adc
fld
pop
out
out
shll
inc
ret
popa
in
loopne
sbb
or
cld
adc
mul
sbb
test
adc
fs
pop
vmovaps
iret
fadd
sub
sbb
test
loope
mov
adc
jp
adc
je
dec
into
orb
xchg
andl
in
mov
push
inc
sub
loope
dec
inc
jne
xor
test
orb
ret
test
movsl
leave
ds
inc
dec
mov
push
mov
jbe
in
add
adc
add
leave
push
adc
popa
push
or
js
stc
pop
fld
fs
fistl
or
inc
sub
dec
and
dec
stos
outsb
sbb
xchg
add
pop
mov
cli
xchg
gs
ljmp
cmpsb
mov
xchg
icebp
dec
hlt
adc
dec
sarl
mov
test
cmp
mov
and
por
mov
movsb
dec
imul
and
adc
and
ret
push
in
jl
cmpsb
push
das
rol
jae
push
rol
rolb
xor
mov
push
mov
aas
popa
cmc
ret
daa
dec
sbb
sbb
jbe
push
dec
add
loopne
out
adc
lds
push
push
insb
cmp
les
in
mov
push
addl
fistpl
in
orl
inc
pushf
pop
inc
iret
pop
stos
out
dec
ret
mov
cmp
add
or
sbbl
push
daa
stos
pop
pop
cwtl
sub
pusha
cmc
jns
xchg
xor
and
pand
lock
mov
pop
cs
insb
cmp
daa
add
and
push
mov
push
pushf
in
xchg
cmp
stos
stos
sub
xor
cmp
dec
daa
dec
cmpsb
data16
dec
dec
adc
mov
imul
adc
movsl
subl
aas
add
cltd
push
stos
inc
stos
pop
xchg
cmpsb
dec
or
xchg
and
stos
mov
pop
or
fsubr
mov
mov
lcall
gs
aas
mov
or
dec
pop
sbb
movsb
mov
push
mov
push
dec
sarl
lahf
push
bound
mov
aad
imul
xor
mov
in
jbe
xlat
pop
sbb
xchg
int
mov
xchg
out
fs
test
add
push
or
pop
xor
mov
or
ljmp
cli
mov
jno
cltd
cmp
call
mov
mov
and
dec
in
mov
sub
fimuls
fiaddl
lods
sub
cmp
pushf
sbb
xor
xor
push
cs
mov
stos
push
ljmp
push
sub
and
xlat
pop
test
pop
fistl
lret
inc
rol
movsl
jg
add
stos
enter
and
pop
xor
push
rolb
push
cmc
adc
sahf
push
sbb
mov
ret
xchg
mov
xchg
aaa
cmp
les
aad
dec
xor
pop
int
scas
add
lret
or
mov
lret
cld
and
adc
fisubrl
sub
inc
xchg
lahf
xchg
fcomps
and
outsl
mov
xor
arpl
iret
ror
mov
hlt
dec
les
outsl
mov
sbb
sbb
je
call
add
xchg
inc
sub
cmp
jns
enter
jb
popa
jne
mov
cmp
sbb
gs
or
ljmp
popf
or
mov
dec
pop
dec
adcb
unpckhps
rorb
or
xchg
test
stos
or
inc
pop
inc
add
lods
cmp
cld
mov
push
and
xor
aad
or
xchg
inc
mulb
inc
lret
cmp
xchg
scas
into
dec
jle
sbb
std
jecxz
jmp
add
or
into
int3
xor
popf
xor
mov
sub
sbb
or
mov
sub
sub
fnstcw
xchg
sarl
hlt
cmp
inc
loope
stos
jle
mov
mov
rclb
stos
sub
es
sahf
sbb
sub
inc
jmp
cmp
add
inc
sub
ret
shlb
or
add
fimuls
imul
mov
addb
or
xlat
js
cwtl
adc
sbb
dec
add
and
jb
js
cmc
sub
lahf
iret
xchg
dec
adc
pop
jmp
dec
xlat
add
inc
xor
or
test
mov
or
sub
mov
mov
dec
shll
addl
jmp
jge
aaa
mov
add
sbb
les
movsl
pushf
test
add
adc
out
add
lock
ds
add
add
mov
aad
and
jle
scas
jb
jno
es
add
mov
push
popf
addr16
dec
daa
and
adc
popf
cld
call
xchg
dec
mov
cld
je
pop
iret
add
pop
jg
insb
or
or
icebp
stc
xchg
dec
jmp
and
stos
xor
and
ss
es
pmulhuw
aam
xchg
and
adc
mov
adc
push
mov
sub
xor
fisubrl
int
xor
adc
lret
mov
adc
scas
or
or
stos
mov
xor
inc
js
ljmp
mov
mov
iret
test
mov
inc
and
pusha
inc
test
mov
and
fstps
lods
and
daa
stc
pop
push
fadd
mov
int3
imul
inc
xchg
xlat
or
pop
pop
in
and
jl
inc
pop
jae
in
sub
mov
inc
in
lods
leave
popa
and
sub
xor
xor
test
loop
adc
dec
cltd
test
lods
push
mov
pop
inc
add
mov
lea
cmp
in
sahf
ficoms
cmpb
mov
aas
cmp
mov
testl
sbb
sbb
mov
ljmp
dec
pushf
lock
dec
mov
je
or
aam
rolb
sbb
call
loopne
dec
jb
out
xor
pop
push
sbb
xchg
sahf
mov
aaa
and
icebp
sbb
fadd
jae
ret
or
mov
push
jmp
mov
push
inc
mov
xchg
pop
pop
in
dec
xchg
xchg
jnp
ret
mov
sahf
or
loop
pmaddwd
sbb
andb
pop
push
add
pusha
mov
notl
mov
orb
sub
mov
sbb
test
outsb
xor
ja
daa
fists
jne
movsb
ret
andl
jno
pop
data16
lahf
sub
jl
mov
add
lret
pop
dec
adcb
mov
cli
inc
mov
sub
adc
inc
inc
lea
scas
jae
mov
xchg
lock
rcrl
dec
cmpsb
xor
fxch
in
add
xor
fs
loopne
ss
xlat
dec
pop
mov
add
mov
mov
mov
lret
in
cwtl
ss
mov
mov
dec
mov
jnp
or
icebp
add
sub
popf
cmp
sbb
stc
jmp
bound
sbb
xor
or
stc
push
cmc
stos
loop
cmp
js
andl
push
push
xchg
adc
xchg
mov
loop
sub
cltd
dec
cmp
in
xlat
add
fcmovbe
inc
inc
in
nop
pusha
lea
adc
and
ror
fcmovnb
cs
pop
or
pop
xchg
mov
test
sbb
loop
add
mov
pop
and
stos
lret
js
adc
xchg
jmp
xchg
imul
pop
rcll
stos
cmc
inc
stc
xor
outsl
or
rclb
push
dec
dec
xchg
pop
jnp
lea
call
jnp
push
jecxz
dec
mov
jnp
pop
push
cmp
int3
mov
add
cmpsb
rcrl
sbb
stos
sub
loopne
icebp
repnz
sbb
insl
mov
mov
mov
mov
sti
dec
clc
jecxz
repz
dec
idivb
jecxz
and
dec
enter
mov
or
scas
inc
cld
jg
inc
jg
scas
cli
xor
addl
sub
jge
push
and
push
pop
lods
popl
in
mov
and
cwtl
rorl
xor
sbb
cmp
cmc
cmp
cmpsb
jb
icebp
lcall
vmovshdup
inc
aam
push
mov
lcall
daa
mov
inc
pop
push
arpl
dec
or
pop
lcall
inc
push
jbe
inc
pop
mov
and
pop
xchg
dec
mov
es
sub
push
mov
pop
cmp
dec
or
test
and
es
stc
sub
jge
gs
cmp
or
popa
or
jge
sbb
scas
inc
xorb
mov
mov
icebp
xchg
fmull
inc
rcll
pop
jle
mov
lret
mov
add
loopne
or
pop
push
xchg
or
push
bound
inc
sbb
aad
test
cmp
xchg
shlb
mov
dec
xchg
jne
mov
cmp
outsl
scas
ret
out
pop
bound
shrl
lcall
fwait
jle
inc
mov
mov
loop
mov
rcr
xchg
sbb
sahf
mov
inc
mov
loopne
push
or
xchg
xchg
mov
and
fisttpll
std
js
jmp
ret
orb
and
push
add
add
inc
sbb
mov
fsubrp
cmp
mov
push
mov
mov
xor
add
jo
and
push
inc
dec
lret
es
sub
pop
xchg
test
inc
xor
push
in
or
adc
mov
lock
cmp
rcl
fstpl
std
xor
xchg
loopne
mov
fwait
sub
or
fsubrs
cmp
mov
movsl
jmp
xchg
cltd
mov
push
sahf
cmp
dec
pcmpeqw
xchg
inc
in
xor
leave
add
xorl
mov
pusha
movsl
xor
pop
mov
arpl
mov
pop
mov
pop
mov
inc
jl
xchg
lcall
mov
vmovss
cli
pop
cmp
push
int3
test
sub
xchg
cmp
cmp
mov
dec
push
jae
sub
popa
sub
push
dec
and
pop
insl
cld
cs
add
stos
push
add
sub
stos
or
pop
push
push
add
inc
roll
jecxz
and
xor
adc
mov
daa
push
popf
out
inc
sbb
dec
shrb
popa
adc
push
push
xchg
mov
and
and
xor
call
sbb
lret
loop
mov
xchg
roll
adc
mov
adc
jge
je
xchg
push
mov
mov
and
jo
jmp
and
sub
cmp
dec
sbb
enter
pop
cmp
pop
mov
push
dec
ljmp
mov
xchg
mov
mov
lahf
and
ljmp
mov
mov
bswap
adc
inc
jge
adc
in
push
mov
test
and
mov
aad
fwait
shrl
sbb
jnp
in
ljmp
loopne
call
rorl
push
test
or
ds
xor
push
lods
inc
sub
cmp
push
aaa
sbb
and
inc
pop
pop
rcl
dec
mov
call
xchg
xor
add
and
aad
add
dec
scas
jmp
push
jno
in
iret
cmpsb
xor
data16
jns
pop
jne
push
daa
call
cltd
andb
or
add
add
hlt
mov
jno
xor
das
cli
adc
push
adc
daa
sbb
xchg
in
out
sarl
dec
movhps
lahf
jns
dec
and
or
std
mov
jmp
pop
imul
fmuls
loop
iret
cli
cmp
pop
aas
stc
lock
shlb
sbb
arpl
sbb
push
adc
stos
rorb
test
add
clc
sbb
flds
sbb
dec
xor
add
jge
sub
loopne
outsb
or
loope
clc
jmp
mov
ret
cmp
les
les
add
dec
add
imul
test
pusha
pop
push
jl
mov
push
mov
push
jl
repz
es
ja
xchg
sar
add
jp
nop
lods
mov
mov
std
xor
sbb
in
fcmovnb
fs
mov
xchg
jmp
aaa
xchg
add
leave
adc
or
mov
mov
fimull
out
or
sub
dec
mov
inc
xchg
hlt
dec
ret
push
roll
pop
pop
mov
stos
xlat
pop
sbb
inc
dec
cmp
lea
push
decb
ret
roll
lret
or
std
js
jnp
hlt
cmpsb
ret
lods
out
mov
mov
push
push
xlat
sti
xor
fistpll
mov
sbb
loop
add
daa
fsts
mov
loopne
xor
lock
loope
pop
pop
cld
imul
mov
mov
mov
cmp
out
or
je
insb
mov
movsb
out
adc
push
fldt
mov
xchg
dec
xchg
movsb
mov
mov
cmp
mov
or
jb
cmp
mov
fisttpl
sarl
xchg
icebp
cli
imul
jle
push
out
pushf
adc
je
idiv
xor
push
jl
push
arpl
fs
jno
push
and
lret
mov
mov
or
xor
lock
pop
sbb
adc
xor
xchg
push
mov
sub
jno
enter
mov
outsb
in
ds
mov
inc
ds
inc
adc
fisttpll
mov
into
call
out
xor
inc
cmc
jno
cmp
xchg
addl
es
inc
mov
lds
ljmp
xor
rcrl
add
out
mov
lods
xchg
in
in
sbb
and
lock
jnp
test
jge
dec
mov
loopne
imul
mov
cld
jecxz
inc
testl
mov
push
or
dec
sub
out
icebp
pop
sub
push
movsb
stos
jmp
pop
pop
ds
in
rclb
leave
call
test
dec
scas
ffree
hlt
push
pop
mov
pop
ljmp
cli
decb
cltd
bound
dec
or
or
add
arpl
inc
cmp
test
xor
fs
add
sub
jg
jl
fimull
mov
ds
insb
loop
xchg
jle
leave
add
sub
nop
enter
push
mov
popf
test
mov
cmpsb
popf
ret
ds
xor
popf
and
cmp
movl
sub
mov
jb
and
jnp
adc
jns
mov
cmp
dec
and
cltd
sti
adc
je
call
mov
pusha
repnz
push
sahf
les
out
inc
hlt
insl
mov
push
and
pop
scas
das
pop
mov
and
add
or
outsb
int3
loop
insb
adc
mov
pop
pop
xor
nop
iret
push
xchg
mov
lcall
adc
mov
xor
xchg
xor
cli
sbb
lahf
mov
je
addl
pop
mov
mov
fcoms
xor
pop
dec
push
mov
outsb
rcrb
mov
push
cmp
push
pop
scas
jo
and
rcrl
add
pop
xor
mov
in
movsb
flds
xchg
ret
das
ljmp
fwait
inc
xor
jg
adc
fdivl
pop
dec
in
cli
and
adc
push
fwait
adc
lret
cmp
mov
mov
mov
jne
xor
mov
dec
insl
ret
fisttpl
sbb
call
movsl
out
movsb
xchg
sub
cmc
mov
loopne
dec
pop
icebp
push
fucomi
push
push
ljmp
aam
dec
add
mov
cs
pop
jne
sub
inc
cmp
cmpsb
repnz
aad
cmp
pop
or
test
xchg
fdivrs
mov
pop
and
movsl
xchg
adc
nop
pop
pop
push
mov
ror
push
int
cmpsb
ss
add
fistps
push
arpl
sbb
push
into
rcr
add
add
adc
lcall
repnz
mov
sbb
mov
jge
cmp
mov
dec
add
or
into
or
cwtl
stc
jl
push
shlb
adcb
and
mov
andl
push
jp
scas
mov
sahf
loop
mov
js
jb
pop
test
add
les
and
adc
pop
test
fists
push
out
adc
clc
mov
pop
sbb
lret
xor
pop
jp
fwait
mov
xlat
sarl
lds
mov
loope
out
dec
xchg
dec
or
shrb
mov
push
pushf
inc
jae
adc
sub
jne
dec
sysexit
pop
std
mov
mov
push
fsts
aam
inc
inc
jl
or
inc
adc
mov
insb
cli
mov
add
mov
insb
testl
insb
aaa
rcll
addl
imul
rcl
addr16
mov
imul
dec
hlt
or
fisttps
into
xchg
insl
loop
pop
mov
mov
leave
mov
xor
mov
cwtl
jbe
mov
int3
pop
outsl
push
sbbl
xor
adc
xchg
mov
insl
mov
icebp
xor
dec
cs
mov
xchg
mov
fisttpll
clc
pusha
scas
mov
jl
inc
jmp
cs
popf
mov
push
lods
pop
cmpsb
mov
ret
sub
loop
rclb
std
adc
push
cmp
in
push
mov
stos
xchg
int3
sub
jp
aam
pop
inc
sbb
subl
outsb
in
mov
popf
clc
sbb
jp
sbbb
sub
lcall
push
inc
lea
cmp
cmpb
cmp
cld
jmp
xchg
adc
rol
adc
adc
mov
or
add
adc
int3
or
scas
mov
scas
mov
ret
iret
icebp
sub
jnp,pt
jbe
les
cmc
mov
daa
shlb
adc
mov
pop
in
push
jecxz
inc
and
push
cltd
xchg
es
mov
jb
dec
dec
add
add
sbbl
xor
pop
sbb
pop
pop
icebp
aaa
mov
pop
cmp
jns
in
push
inc
jl
pop
mov
cltd
lods
scas
daa
imul
pushf
push
sahf
cld
test
ja,pt
add
popf
jge
cmp
into
or
xor
outsb
into
dec
dec
subl
pop
dec
or
out
stos
sbb
mov
mov
adc
push
and
add
aas
loopne
mov
in
loopne
cmp
bnd
shl
andl
fiaddl
pop
fs
daa
cmc
push
lret
mov
add
jno
or
add
stos
sahf
incb
mov
sub
out
les
sbb
cwtl
or
or
dec
pop
cld
ds
call
sbb
icebp
lea
xchg
and
test
sahf
mov
dec
cmpsb
jmp
dec
cli
xchg
gs
test
addl
xorb
pop
pop
cmpsl
stos
mov
out
ret
xor
flds
cltd
jge
inc
rcl
xor
cmc
sub
dec
hlt
movsb
sti
call
sahf
fsubs
outsb
xor
cmp
mov
dec
and
iret
inc
push
aad
in
or
fxam
sbbl
push
bsf
cwtl
sub
dec
fdivrp
or
ss
inc
into
ja
inc
cmp
pop
and
test
cmpb
xlat
mov
lret
jle
shrl
cmp
cmp
xchg
sbb
add
test
xchg
dec
add
mov
pop
sbb
movsl
xchg
std
mov
cmp
aad
dec
cmp
lret
jle
lcall
sbb
and
icebp
mov
inc
mov
sahf
daa
insb
xchg
decb
push
outsl
pop
iret
push
sub
mov
xor
push
movsl
cmp
int3
es
jbe
push
fadds
inc
dec
pop
int3
lcall
lea
cmp
cmp
out
or
shrb
imul
xor
jae
pusha
push
pop
sahf
sbb
jb
int3
inc
inc
xlat
push
mov
pop
je
sbb
inc
out
pop
stos
fs
dec
sbb
push
or
inc
and
cli
das
dec
repnz
jle
inc
or
les
sbb
push
fimuls
inc
mov
adc
clc
adc
push
pop
xchg
cmpsb
mov
stos
filds
ss
cmp
dec
jbe
cmp
rol
addb
roll
jne,pn
sub
fsubl
mov
outsl
pmuludq
lea
inc
es
pop
mov
insl
fbstp
insl
or
cwtl
pop
dec
push
dec
test
dec
mov
imul
lcall
xor
xchg
mov
push
push
es
dec
pop
arpl
jmp
sbb
sub
call
shll
cld
test
fs
mov
jg
js
jp
scas
scas
push
test
adc
aad
addr16
adc
cld
loopne
insb
push
push
add
shrb
test
and
add
jmp
mov
xor
in
lret
stos
lahf
outsl
cmc
xlat
rclb
sbb
in
shrl
pop
aad
cmp
push
cmp
push
enter
push
dec
sbb
pusha
push
or
ret
ds
pop
cmp
and
sbb
mov
cmc
xchg
lods
iret
pop
shlb
in
sub
xor
inc
add
xor
sub
jnp
ror
cs
push
sub
mov
js
jne
fucomip
les
adc
mov
movsl
cmpsl
dec
or
mov
fs
and
int3
pop
dec
xorl
es
in
ret
and
call
add
xor
and
mov
cmp
in
ds
sbb
iret
movsb
test
pusha
dec
push
adc
cmp
inc
iret
int
mov
rcrl
mov
fistpll
repz
out
lods
push
cmp
push
xor
jmp
adc
mov
cmp
sar
xor
mov
add
rorb
add
ficompl
fs
ss
push
jmp
mov
pusha
add
dec
dec
arpl
test
mov
jo
push
out
mov
repz
jne
mov
inc
rcl
cmp
mov
andl
lahf
sbb
or
fisubrs
daa
mov
cmp
add
outsb
jmp
adc
in
ret
fbld
cmp
iret
ret
dec
fs
xor
mov
and
lds
imul
mov
jb
jmp
ret
sti
inc
cs
mov
xor
stc
add
push
je
rcrl
xor
or
in
sbb
daa
aad
and
xchg
xor
ss
cs
and
mov
lock
icebp
popf
adc
and
stos
cmp
jne
clc
mov
movsl
xchg
icebp
push
nop
ljmp
into
sub
mov
test
stc
test
push
fwait
pop
addr16
sub
xchg
adc
ds
inc
add
jecxz
ja
mov
aad
ss
xor
outsb
sbb
sbb
adc
jmp
in
rcl
adcl
mov
std
fsubrl
test
cmp
ret
cmpb
mov
cmp
adc
jmp
std
xchg
or
loopne
inc
rolb
mov
add
cwtl
sub
mov
aam
jae
mov
dec
pushf
sub
cmp
cmp
daa
aam
bound
aam
add
sti
std
push
or
pop
jmp
or
pop
push
sbb
stos
cmp
push
loopne
sbb
sub
push
aaa
cmp
pushl
lds
ja
jnp
xchg
out
add
inc
lock
add
adc
push
stos
xchg
xchg
movl
stos
imul
or
icebp
mov
mov
pop
test
sbb
lcall
rcl
lahf
and
and
add
out
mov
cmpl
pop
pop
fcomps
sbb
push
rcrb
jb
fsts
or
inc
dec
cli
sti
sbb
loope
adc
aad
mov
es
push
jnp
mov
push
mov
rcrb
inc
je
popf
addr16
mov
imul
jg
das
fisubrs
cmpb
sbbl
inc
lea
data16
in
jne
test
imul
xchg
adc
aas
ret
push
mov
leave
and
cmpsl
loop
cmp
add
xor
jmp
cmc
loop
mov
sub
mov
jge
aad
pushf
sbb
call
sbb
lods
pop
iret
loopne
mov
ret
or
ret
push
mov
jb
xor
iret
and
and
ret
aaa
add
stos
cmp
lea
sub
jmp
aaa
cmp
fs
rcrb
iret
add
icebp
and
add
xor
outsl
sbb
ret
adc
push
ret
adc
pop
shrl
and
mov
and
and
dec
push
add
xchg
daa
sbb
mov
fildl
add
jmp
pop
cmc
andl
jp
xor
push
xlat
push
ss
outsl
sbb
call
stos
mov
mov
jl
sbb
push
or
lods
jnp
push
mov
in
jg
jl
add
pop
fstp
jae
mov
add
cltd
xchg
bound
scas
mov
jnp
push
stos
push
push
and
mov
fcomip
pop
lds
lds
lcall
jmp
cmp
bound
lock
sarb
push
lret
bound
fistpll
js
pop
shrl
mov
push
in
imul
cwtl
call
pop
adc
xor
scas
pop
ret
sbb
call
fmuls
loopne
jmp
or
test
mov
jb
sub
insb
mov
add
mov
inc
leave
ss
jbe
ror
rorb
cltd
cmpl
jbe
int
les
mov
in
movsl
addl
mov
adc
int
adc
popf
cmp
add
pop
ret
jo
fildll
lss
cmp
nop
mov
ja
rcl
xchg
pop
push
adc
push
iret
fs
push
push
sbb
xor
movsl
out
ss
xchg
sub
jl
shrb
or
stos
and
pushf
lahf
mov
es
add
and
in
callw
mov
adc
ret
subb
out
jne
jnp
jp
dec
push
std
test
mov
push
fdivl
xchg
cli
sub
xor
leave
sbb
loopne
xchg
das
cltd
cmc
adc
sub
xor
pusha
gs
mov
stc
movsb
mov
pop
cli
mov
fbstp
dec
add
pop
and
mov
xor
cmp
dec
imul
in
fwait
mov
and
enter
lea
icebp
xchg
mov
mov
fisttpl
cmp
mov
dec
sbb
int
jne
sub
out
adc
aaa
and
rolb
sub
into
inc
push
shll
inc
sbb
push
imul
adc
xor
popa
lods
mov
in
xlat
xchg
imul
push
xor
xchg
pop
push
mov
sub
test
sbb
fdivl
xchg
gs
adc
inc
xchg
pop
sbb
out
or
fidivs
xchg
dec
lret
insl
pop
xor
and
std
xchg
cmp
adc
dec
addb
movl
cmc
dec
jge
push
pop
sbb
roll
shrl
push
lcall
add
push
xchg
popf
pop
xchg
mov
out
mov
cmpsl
icebp
sbb
jp
std
jbe
mov
bound
in
adc
xlat
fists
mov
ss
lds
ss
push
inc
xchg
insb
jl
or
push
dec
cli
int3
cmp
sbb
mov
or
test
lret
mov
or
xor
cli
mov
lcall
pop
adc
jl
adc
cwtl
dec
shll
and
idivl
je
pop
loopne
aas
ret
push
sbb
ret
xchg
outsl
arpl
fbstp
xchg
adc
bound
add
dec
mov
cmp
sub
nop
sub
mov
into
xchg
mov
sub
inc
add
nop
cmpsb
clc
pop
sbb
dec
js
movsl
cmc
fs
clc
notl
scas
dec
lret
mov
fcomps
les
jge
sti
int3
adc
lds
xchg
mov
subb
aaa
lods
ds
icebp
jns
cld
mov
int3
and
icebp
mov
jbe
xor
sbb
test
add
or
mov
mov
jge
mov
add
clc
es
jecxz
jbe,pn
loopne
pop
lds
push
push
cmp
or
add
push
andb
test
leave
call
mov
pop
xchg
roll
mov
int
jo
fistpl
jl
pushf
inc
or
mov
or
es
lock
mov
ret
sbb
push
imul
shrb
test
xchg
inc
pop
lock
sub
jl
mov
jo
mov
movsl
les
ja
xchg
scas
jae
xor
stos
movl
sbb
push
jo
fstpt
ss
jg
sbb
pop
jle
mov
shlb
push
sbb
push
mov
inc
sbb
dec
sbb
mov
ss
and
sub
adc
rolb
adc
daa
pop
ss
cwtl
adc
lret
lods
mov
or
pop
outsb
loopne
lahf
sbb
aam
pop
push
icebp
mov
sub
dec
rdmsr
jno
ror
call
mov
or
jmp
popf
sbb
adc
jb
sub
mov
test
pop
cmpl
xchg
rcrb
inc
pop
insb
mov
scas
cmpl
enter
pop
pop
in
ficomps
jb
ds
roll
cmp
cli
cmc
dec
mov
adc
js
movsb
bound
or
mov
push
fnstenv
repnz
cmc
lea
daa
xor
inc
jns
imul
pop
cs
jecxz
jecxz
int
mov
push
xchg
in
lods
jmp
in
lcall
ja
xchg
mov
inc
cmp
lret
mov
aad
insl
ljmp
jmp
push
rcrb
dec
shll
pop
push
push
aad
pop
sub
mov
xor
faddp
add
jno
cmp
mov
add
lret
fxch
or
dec
aaa
add
loopne
pop
ljmp
mov
inc
or
out
stos
sbb
jge
xchg
or
iret
rcr
mov
icebp
cld
out
fld
sbb
adc
clc
test
adc
sbb
mov
push
test
xor
cmp
pop
xchg
mov
mov
mov
inc
mov
cmp
dec
sbb
sub
or
and
and
ret
mov
jb
sbb
roll
sbb
js
xchg
ret
in
push
sbb
test
addl
scas
and
leave
xchg
fistps
scas
dec
add
xor
arpl
push
mov
adc
sub
repnz
lods
mov
adc
push
icebp
push
je
jg
pop
ljmp
in
adc
decb
popa
lods
xchg
dec
fisubl
pusha
flds
ret
imul
sbb
and
sub
or
lahf
icebp
and
pop
dec
mov
lds
fldl
dec
cmp
notl
out
pop
out
dec
cmp
dec
adc
mov
or
xor
jns
imul
adc
cmp
lock
mov
clc
add
fimuls
pop
aad
sbb
xchg
ljmp
xchg
clc
fstps
arpl
mov
fldcw
inc
lock
je
jecxz
mov
dec
cs
shl
cvtps2pi
aas
adc
scas
adc
xchg
rcrb
mov
sbb
dec
sbb
and
stc
adc
lods
adcl
cwtl
push
clc
sub
rcrb
jl
ds
insb
sub
cmc
fwait
and
and
or
or
stos
jl
or
fnstenv
fsubrl
pop
into
stos
adcb
xor
insl
sahf
jl
lret
xchg
jbe
sbb
sbb
adc
dec
cmp
fisubrl
mov
test
iret
add
in
lcall
cltd
or
mov
adc
rcrb
rcrb
lds
mov
pop
hlt
and
add
imul
arpl
push
stc
in
fldl
aam
jbe
add
sub
push
repnz
add
xchg
pop
scas
popf
clc
push
jl
cmp
iret
dec
mov
pusha
push
pop
push
xor
jo
add
lds
add
push
xchg
ja
add
lds
xor
sahf
mov
push
scas
daa
cmc
jb
pop
adc
pusha
ret
mov
les
rcl
push
or
inc
add
add
dec
pop
jl
orl
pushf
in
outsl
push
mov
and
xchg
mov
lds
je
aad
jmp
es
cmpsl
xchg
stc
push
cmp
cltd
mov
sti
fwait
sub
and
scas
in
and
mov
xor
mov
dec
loop
cmp
mov
lods
ljmp
pop
rcl
out
loopne
jecxz
xor
xor
push
or
daa
sbb
xchg
adc
xchg
dec
sbb
shrb
ret
leave
jo
leave
mov
mov
out
or
loopne
sub
pushf
dec
int
xchg
cmp
subl
mov
mov
inc
dec
ljmp
and
std
xor
testb
push
cmp
sbb
lcall
lret
lret
fcmovb
add
push
in
inc
or
je
std
mov
push
fmull
ja
inc
or
jne
jb
jo
add
out
and
arpl
lea
enter
or
mov
out
xchg
jbe,pt
lea
pusha
das
mov
subl
jae
sub
aas
pop
pop
mov
dec
pop
and
mov
inc
movsl
mov
pop
inc
cmp
loope
ret
test
push
sub
outsl
loopne
xchg
js
sbb
fsubs
cmp
sbb
inc
sbbb
push
ljmp
mov
loopne
mov
pop
fcoms
repnz
push
add
cmp
pop
aas
int
in
mov
ret
push
xor
jg
shr
jae
icebp
xchg
bound
js
inc
arpl
xor
hlt
and
push
inc
cld
pop
and
shlb
das
daa
mov
sbb
cld
mov
repnz
daa
cmp
jo
ljmp
or
mov
ficoms
sub
sub
add
jbe
mov
or
or
mov
in
pop
mov
adc
and
in
stc
scas
and
test
push
movsb
shlb
and
mov
dec
les
push
in
adc
in
xor
pop
and
icebp
dec
or
lcall
ret
mov
or
roll
sbb
iret
clc
dec
sub
ss
mov
sqrtps
push
sub
push
pandn
pushf
sub
add
iret
fmuls
orl
sar
aaa
in
sbb
mov
jne
mov
and
add
aad
jl
test
insb
push
or
fucom
xor
jns
mov
lods
lds
mov
mov
ljmp
out
sbb
pop
roll
mov
test
leave
or
aad
sub
push
adc
mov
es
inc
ja
pop
roll
push
subb
push
dec
mov
dec
sbb
sub
sbb
call
lock
lea
into
mov
xor
dec
sbb
scas
xchg
test
outsl
xor
or
jp,pt
sbb
cmp
jne
ds
xchg
popf
lret
filds
push
jle
cmp
adc
pop
movsb
push
xchg
sub
fwait
push
mov
xor
leave
push
sahf
das
lock
in
popl
xchg
xchg
aam
push
inc
xlat
daa
xor
mov
sub
loope
test
sbb
push
mov
and
or
es
push
push
inc
xchg
inc
mov
and
mov
xchg
test
inc
push
dec
daa
adc
adc
icebp
nop
cmpb
es
jbe
mov
add
or
sbb
icebp
repz
add
div
mov
dec
sbb
push
stc
pcmpgtd
fdivr
mov
dec
xor
or
aad
shlb
stos
ljmp
add
mov
adc
xor
sub
imul
mov
js
add
adc
push
rolb
pop
ret
dec
adcb
cmpsl
inc
push
xor
mov
adc
sbb
push
jmp
test
ljmp
mov
sbb
or
mov
cmp
mov
cs
xchg
dec
fcoml
stos
ss
sbb
and
mov
adc
ret
mov
push
or
push
push
testb
push
sbb
lea
add
pop
inc
adc
xchg
and
push
cmpsb
add
mov
xchg
call
cmpb
cmp
js
or
movsb
pop
jae
fldcw
sbb
jecxz
out
std
inc
add
popl
or
mov
sub
adc
inc
or
dec
imul
std
fs
movsl
push
fcmovnu
les
out
cltd
push
int3
xchg
pop
leave
sbb
or
push
push
sub
ds
jge
loope
jl
inc
test
jns
sub
outsb
popa
cmp
insb
scas
sbb
jp
rcrb
and
pop
mov
add
dec
insb
es
adc
mov
xor
gs
dec
out
fdivrs
cld
rorb
jb
push
rcrl
in
adc
inc
rsm
mov
adc
notl
pop
sub
rorb
addb
scas
ret
dec
mov
dec
jle
inc
xor
repz
ret
push
test
or
and
mov
enter
loop
sbb
adc
test
and
ficoml
in
push
mov
test
jae
icebp
mov
xor
push
xor
and
sbb
cs
pop
cwtl
adc
add
dec
push
or
mov
jle
jo
or
jo
mov
xor
icebp
push
test
insb
rolb
add
das
cmc
mov
rolb
jo
loope
add
in
sahf
clc
sub
add
sbb
ljmp
or
add
adc
not
sbb
rorl
scas
cltd
pop
or
out
movsb
mov
in
lds
or
aaa
pop
xchg
add
clc
and
mov
add
push
stc
shl
lock
xchg
out
sbb
inc
mov
and
shrb
lods
mov
xchg
popa
popa
jnp
or
sbb
xchg
mov
pusha
idivl
pop
outsl
add
sbb
cli
xchg
lahf
inc
je
lods
cli
and
shll
mov
dec
xor
push
mov
arpl
rcl
stc
inc
out
xor
leave
and
sarl
inc
leave
inc
int3
aam
mov
inc
cld
nop
test
scas
xlat
and
add
cwtl
inc
ljmp
add
pop
mov
shll
ss
pop
popf
add
loop
or
outsl
lods
mov
dec
scas
xor
imul
fnstsw
sbb
lret
dec
jo
scas
sbb
dec
push
lds
notb
mov
enter
popf
adc
mov
loopne
mov
adc
imul
popa
js
adc
popf
flds
inc
cmp
push
jg
sbb
fnstsw
pop
jl
mov
lds
sbb
sub
in
dec
jle
and
incb
add
scas
sub
jb
cmpsl
mov
mov
pop
btc
hlt
test
push
adc
cld
pop
lahf
rcrb
out
pop
ljmp
xchg
add
clc
push
pop
ds
xchg
je,pt
subl
fiadds
mov
dec
sub
sub
xor
jg
and
rcll
inc
icebp
scas
pop
jg
add
cmp
and
sbb
lods
sbb
push
leave
shlb
mov
pop
push
pusha
mov
stc
jno
mov
mov
cmc
xor
adc
cmc
adc
push
pop
jno
lret
filds
pushf
mov
rol
mov
sbb
cld
js
sbb
les
lcall
es
and
fimull
fsubs
lods
and
xchg
test
jp
int
in
aam
and
jbe
jmp
or
xchg
out
shrl
mov
bound
jmp
clc
in
inc
mov
push
xchg
das
pavgw
sbb
dec
test
sbb
pop
movl
ret
cld
adcl
icebp
ficomps
aam
scas
jle
and
ret
or
or
add
inc
mov
jbe
ror
mov
sub
mov
in
xchg
addl
mov
in
fnsave
movsl
fstpl
clc
repnz
cmp
pop
nop
mov
and
ret
jne
mov
pop
outsb
sub
leave
fidivl
push
mov
jo
dec
cmp
rolb
inc
jnp
add
lret
pop
movsb
call
pushf
push
dec
sbb
cmp
fidivrl
data16
xchg
or
mov
add
dec
ds
mov
stc
nop
jae
out
rcrl
or
pop
mov
test
mov
notl
mov
push
or
push
add
xor
mov
pop
adc
xor
test
adc
dec
sub
adc
mov
bound
adc
stos
mov
sahf
add
adc
cmpsl
lods
add
mov
push
add
andl
or
and
xchg
in
adc
lahf
sbb
out
daa
add
jbe
xor
fldl
int3
add
rcl
aaa
sbb
ss
shl
push
sbb
lahf
sbb
inc
shl
aam
pop
fstpt
jl
in
and
mov
xor
jns
int3
push
sub
mov
push
mov
mov
cmp
aas
or
fcom
pop
mov
into
mov
or
pusha
and
mov
outsb
movsl
cltd
mov
pushl
dec
inc
fldenv
inc
mov
ficompl
in
stc
cwtl
push
pop
or
xchg
pop
pop
mov
loop
adc
subb
into
jno
dec
rcll
fimull
dec
in
andb
xchg
mov
sarb
scas
mov
movsl
inc
enter
insl
call
or
sbb
xchg
xor
pop
arpl
roll
rclb
ror
push
cld
add
xchg
in
nop
lea
xor
lcall
fwait
imul
popa
enter
hlt
mov
xchg
pop
pop
dec
test
adc
xor
cld
push
testl
mov
mov
mov
loope
mov
or
or
icebp
in
add
addr16
dec
outsl
cwtl
mov
stos
inc
adc
lahf
cmpb
jge
stos
inc
rcll
ss
inc
pop
outsb
lahf
sbb
jo
add
sbb
loope
test
clc
imul
mov
xchg
push
lea
adc
enter
repz
ffree
stc
test
push
pop
add
loopne
repnz
or
xchg
cmp
pop
pushf
icebp
mov
std
test
pop
movsb
dec
test
mov
adc
mov
das
xor
mov
add
dec
out
lods
push
in
clc
nop
dec
adc
cmc
lods
or
sbb
mov
sbb
divl
fs
rorl
fsts
add
push
adc
jge
xchg
lcall
xchg
xchg
adc
jmp
adc
sbb
pushf
sub
roll
jp
das
movsb
push
mov
mov
inc
sub
jo
std
fldl
or
in
push
dec
pop
int
ret
mov
negl
sbb
mov
enter
cmp
push
test
mov
mov
cltd
outsl
aad
mov
pop
cmp
jp
add
sub
movl
jle
outsl
push
cmp
cmpsl
sbb
mov
fnstsw
mov
cmc
add
push
cmp
cld
int3
aam
push
aaa
lds
fnsave
add
adc
loop
shlb
pop
or
xchg
sbb
sub
dec
dec
sub
and
rclb
or
mov
outsl
in
cmp
xchg
pop
ja
mov
xchg
xor
adc
jnp
dec
das
sbb
ds
push
pop
lea
cmc
andnps
sbb
sbb
pop
xchg
pop
mov
test
shlb
push
lds
cmc
sub
mov
lahf
push
add
xlat
lahf
mov
leave
pusha
enter
aad
mov
dec
dec
in
insb
jg
mov
fs
push
mov
add
loopne
icebp
pop
test
pop
adc
and
sbb
adc
or
bound
and
sbb
cld
mov
ret
mov
adcb
test
test
and
cli
adc
lret
ja
fistpl
sub
cmc
into
inc
cmp
push
std
rcll
or
dec
or
xchg
imul
out
or
test
lods
imul
mov
sbb
shrb
out
dec
popf
ficoms
call
sub
xchg
adc
in
cmp
adc
jb
mov
cmp
push
orl
cmp
dec
mov
adcb
and
xor
cmp
mov
pusha
xchg
add
roll
cld
js
sahf
rcr
dec
mov
jecxz
push
inc
aad
in
in
jo
ret
and
add
xchg
ds
fs
pop
push
into
cli
stos
xchg
pop
ljmp
test
inc
push
lret
es
dec
mov
subb
fwait
in
jne
mov
push
rorb
lds
and
inc
or
jecxz
sbb
sbb
fnstcw
addr16
outsb
addl
mov
xor
loopne
dec
mov
dec
or
and
jp
add
lods
popa
shll
xor
inc
xor
insl
mov
aam
lods
mov
sbb
mov
push
adc
mov
leave
pop
shll
lock
scas
xchg
sbb
adcl
mov
add
lret
xchg
mov
cmc
inc
das
mov
fidivl
repnz
and
popa
sbb
sahf
cmp
add
jmp
rcl
and
sub
inc
xchg
mov
call
fsubl
loop
ss
jmp
inc
push
rclb
jg
mov
les
push
cmc
inc
imul
cmpsl
cmp
lds
testb
pop
in
mov
lcall
and
or
aaa
shll
jmp
aas
loop
subl
hlt
sbb
sub
stos
xchg
jmp
mov
iret
cmp
add
dec
mov
outsl
adc
and
add
test
in
xor
mov
repnz
test
inc
xor
and
std
jp
into
ret
push
cmp
stc
mov
mov
arpl
dec
mov
jne
sbb
sub
cld
mov
outsl
lcall
dec
das
jbe
shll
ds
or
lods
sub
adc
xor
xchg
pusha
cmp
mov
loop
roll
sarl
shll
xor
lock
and
inc
loopne
lret
inc
loop
sbb
cmp
mov
dec
mov
cmc
add
push
xor
inc
daa
and
xchg
sub
adc
mov
mov
push
cld
inc
jno
in
loope
jecxz
jmp
dec
sub
jns
or
or
and
aad
insl
ds
xor
add
push
pop
hlt
jmp
add
adc
cmp
inc
or
adc
into
cmp
out
out
cmp
mov
cli
or
pop
pop
sbb
push
cmp
icebp
push
and
jo
jge
add
frstor
push
and
je
ret
fisubrl
out
jg
mov
xor
mov
jecxz
popl
xchg
shrb
xchg
inc
push
mov
fcompl
pop
std
and
movsl
mov
mov
mov
mov
or
mov
pop
mov
out
inc
dec
bound
jo
mov
movsb
push
fsub
adc
inc
pop
sub
fistpl
adc
and
pop
sahf
or
cmp
arpl
pop
test
hlt
sub
arpl
ret
or
add
pushf
jae
or
mov
mov
lds
and
test
mov
xchg
adc
add
sbb
imul
sahf
cmp
adc
mov
xlat
insb
repz
or
inc
stc
sub
je
movsb
loopne
loope
dec
inc
and
sets
jl
enter
flds
xchg
test
repnz
outsl
mov
scas
dec
fisubs
lock
jg
repz
leave
pop
fistpll
and
xlat
enter
cli
in
adc
lods
jbe
mov
mov
cwtl
arpl
clc
push
sbb
pushf
mov
push
mov
xchg
and
cmp
inc
adc
movsl
loope,pn
aam
and
arpl
dec
js
jb
fsubrs
into
mov
pop
or
ret
ja
inc
shlb
or
movsl
adc
mov
ror
stos
cmp
leave
and
ds
ret
andl
xlat
ret
test
and
jo
push
mov
pop
ss
and
fdivr
sub
xchg
clc
orl
adc
inc
or
inc
inc
jne
adc
mov
sbb
aad
adc
inc
cmp
fwait
lods
sbb
push
ret
pushf
in
jp
pop
mov
lcall
inc
inc
rcll
sarl
sti
fcomi
add
sahf
jnp
jl
lds
lods
or
cmp
imulb
sbb
out
mov
mov
pop
mov
xchg
pop
cmp
adc
lea
cmp
xchg
js
ja
jae
mov
add
ds
xchg
ret
pop
dec
shll
popa
sbb
andb
icebp
cmpsb
add
aas
sbb
mov
loopne
fadds
pop
and
lret
cmp
pop
clc
pop
and
cmp
shrb
inc
mov
sbb
dec
lcall
nop
pop
xchg
outsl
and
mov
sub
adc
mov
pop
jp
ja
adc
dec
cli
cmc
call
xchg
jae
pop
lahf
sub
subb
mov
and
sbb
jns
inc
out
fnstsw
add
shl
cmp
mov
jmp
mov
sbb
inc
push
jle
repnz
pop
sbb
sti
xchg
movb
sbb
xchg
ds
cld
ret
inc
pop
shlb
stos
push
add
dec
xor
and
mov
cld
cwtl
inc
sbb
push
fldl
jmp
pop
shlb
mov
add
jle
enter
cld
dec
adc
out
movsl
out
or
mov
das
jb
xchg
js
dec
and
fdivrl
adc
xor
cld
jmp
js
nop
mov
mov
rclb
int3
rolb
shll
ss
shlb
ret
in
push
pop
lret
popa
jnp
lds
inc
cmp
mov
imul
es
lcall
cmp
mov
mov
push
flds
add
jmp
fnsave
and
gs
inc
cld
jmp
add
repz
jno
push
mov
out
pushfw
add
push
pop
push
sub
shlb
bound
gs
mov
sub
cmpsb
inc
pop
inc
cltd
or
dec
mov
xchg
jl
jl
repnz
or
lret
pop
jne
xchg
loop
rolb
in
fiadds
jae
sbb
or
loop
int
or
pop
fwait
push
inc
mov
insb
mov
mov
lret
dec
ds
push
rcr
nop
xchg
std
or
push
pop
ret
in
mov
loop
mov
nop
xchg
mov
loop
lahf
add
fbld
xchg
mov
je
rorb
mov
ds
enter
xlat
xchg
cmp
popf
fs
clc
jns
sbb
rorb
ja
je
or
movsb
and
hlt
outsb
xchg
fucom
add
gs
xchg
inc
mov
pop
fiadds
xor
or
pop
aam
loopne
or
and
rolb
xor
cmp
xchg
and
adc
cltd
ss
xchg
pop
inc
mov
insl
push
or
aas
cmp
stos
push
sti
rclb
and
in
dec
push
aaa
bound
ds
into
fsubp
pop
or
mov
lcall
mov
clts
xlat
add
mov
or
push
sbb
inc
inc
movsl
xor
xchg
cmpsl
test
mov
ret
pop
xor
int3
sbb
stos
inc
sub
int3
pop
push
add
ret
xor
sbb
enter
xor
push
jno
or
and
nop
cwtl
shlb
stc
adc
fcompl
adc
mov
push
sub
test
sbb
fisubl
outsl
pusha
inc
jae
jne
daa
dec
xchg
jo
testl
imul
adc
and
sbb
dec
cmc
outsb
std
mov
cmp
mov
jb
pop
or
addb
fwait
inc
incb
xor
popa
mov
lock
and
dec
cmc
cmpsl
push
and
push
hlt
lcall
mov
subl
es
mov
fsubs
xorb
mov
and
inc
std
and
out
add
out
icebp
xorb
cs
mov
cmp
fstpl
inc
test
mov
sbb
test
in
add
or
test
out
push
cmp
lods
pusha
test
mov
mov
mov
cmc
or
pop
xor
push
jle
cs
jp
mov
and
mov
int
cltd
iret
addl
jecxz
mov
js
outsb
sbb
sub
movsb
into
fxch
dec
inc
or
pop
les
add
scas
or
add
push
cmp
mov
xchg
imul
fldt
push
push
lret
push
psubusb
jle
subb
mov
or
or
orb
pusha
jbe
stos
jb
insl
xchg
add
jmp
les
rcl
jbe
add
or
mov
push
pop
inc
test
shlb
mov
in
push
dec
xchg
jo
sub
inc
add
mov
xor
insl
ss
add
loopne,pn
mov
jp
inc
jne
shlb
inc
jp
xchg
push
sub
cmc
mov
hlt
cmpsl
or
in
movsl
out
xchg
cli
mov
test
jmp
and
sbbl
xchg
clc
inc
add
arpl
jl
add
fs
mov
sbb
je
sbb
lret
add
add
mov
or
in
mov
andb
ja
iret
or
dec
cmp
or
push
pop
ss
push
mov
mov
cs
mov
pop
rorl
ljmp
xor
test
outsb
daa
xorb
mov
loopne
push
pop
jmp
shlb
adc
pop
stc
inc
std
mov
inc
inc
scas
lret
sbb
enter
adc
mov
adc
stos
pop
mov
or
xor
add
mov
sub
cmp
and
daa
hlt
add
sbb
fiadds
xor
enter
jle
imul
pop
sbb
or
jmp
and
lret
dec
inc
push
sbb
jl
sbb
movsl
push
inc
cltd
mov
push
mov
popa
or
cmp
stos
outsl
in
outsb
icebp
je
sar
rorb
adc
fbld
push
inc
mov
fidivrs
popa
pop
or
jl
arpl
push
adcb
inc
jg
push
sub
mov
sbb
fldt
in
inc
scas
fsubrs
hlt
stc
pop
es
mov
xchg
popa
lahf
and
sbb
adc
loope
pop
addr16
outsl
or
clc
push
jae
add
mov
out
aas
cs
mov
and
repnz
sarl
mov
mov
mov
lahf
es
push
adc
inc
xor
lods
pop
mov
rorl
push
pop
out
push
iret
mov
adc
aas
rolb
subb
and
mov
rsm
testb
adc
shrl
add
hlt
popa
xchg
ds
hlt
cmp
mov
adc
add
mov
mov
xchg
xchg
xchg
sbb
fbstp
pop
dec
lret
loope
cmp
mov
push
xor
pop
idiv
dec
mov
inc
rol
lret
repz
jbe
and
pop
ret
inc
fildl
sahf
jmp
cmc
pop
push
push
mov
fsubl
sub
mov
das
mov
xchg
shlb
rorl
fldcw
sub
xlat
movsb
loop
pop
test
mov
mov
pop
xchg
pop
pusha
cmp
push
in
pop
jb
sahf
or
and
leave
out
inc
clc
repnz
divl
and
add
test
inc
xchg
cmp
and
or
xor
push
and
cmp
add
das
xor
sbb
xlat
and
mov
ret
mov
cmp
push
mov
roll
mov
or
mov
adc
scas
adcb
sub
sti
push
js
jg
cmpsl
jge
cmpsl
push
mov
push
pop
shl
leave
les
test
sub
xchg
push
mov
pop
mov
or
inc
fcompl
push
dec
dec
daa
adc
enter
jae
ds
loope
lods
mov
orb
xchg
push
inc
pop
push
ficompl
sti
adc
mov
push
roll
test
iret
mov
ret
addl
xor
adc
and
jne
jno
arpl
inc
xor
fistl
shrl
mov
mov
xchg
test
sbb
push
add
mov
and
add
scas
testb
push
orl
jne
fdivrl
cltd
lods
stos
leave
and
mov
push
orl
lahf
mov
in
movsb
push
aas
rorb
repnz
insl
xchg
sahf
je
cmp
pop
sub
je
jo
inc
mov
mov
inc
sahf
or
insl
or
jbe
inc
fildl
dec
sahf
or
dec
sub
clc
mov
xlat
aam
loop
cmpb
adc
mov
mov
mov
lock
cld
test
dec
cwtl
shll
fdivr
leave
imul
inc
xchg
icebp
pusha
rclb
mov
jb
and
adc
jge
test
and
imul
xor
decb
gs
and
xor
js
xor
lret
std
push
out
fwait
jge
xchg
and
jae
or
fldenv
test
lcall
push
movb
mov
out
mov
inc
xchg
aas
inc
into
arpl
add
jo
testl
dec
int3
sahf
cmp
fisubl
pop
stc
lock
sbb
adc
fdivrs
or
ret
je
lret
pop
lea
in
xor
or
cld
jo
andb
xchg
ret
or
outsb
stos
and
aam
push
icebp
daa
pop
mov
loop
xlat
std
jno
xor
or
mov
popa
sbb
pop
cmp
cmp
sub
cwtl
je
and
and
add
mov
push
sahf
push
out
jmp
idivb
je
pop
je
fadds
loopne
pop
add
jle
iret
repz
push
sub
mov
std
xchg
xchg
jmp
inc
adc
mov
or
adc
pushf
aam
add
jb
xor
test
fcoms
mov
add
cmp
movsb
mov
pop
dec
cmp
inc
and
or
inc
inc
pop
flds
punpckhwd
mov
inc
sub
ficompl
push
int
push
adc
inc
les
cmp
rolb
adc
das
scas
add
add
push
inc
rcrb
jg
shll
stc
mov
jno
inc
pop
call
inc
shlb
call
jbe
das
pushf
in
pop
js
mov
jecxz
mov
scas
mov
fnstenv
ret
fidivs
jae
sub
pop
adc
jno
test
or
xchg
xchg
leave
sbb
adc
inc
or
loopne
push
and
inc
ss
xor
xor
movsb
add
test
shl
loope
mov
rol
in
dec
andl
and
xor
mov
mov
mov
icebp
lcall
sub
repz
mov
or
imul
adcb
push
stc
je
jge
or
inc
pop
pop
rcll
insl
push
ret
xchg
les
andl
mov
xor
jmp
ljmp
or
or
subl
sbb
push
xchg
lods
pop
and
push
cltd
loope
mov
add
shrl
jo
testb
add
sub
mov
daa
fnsave
mov
jge
imul
pop
outsb
cwtl
xor
ss
jle
in
lret
push
fildl
inc
cld
mov
push
shll
cmpsl
add
add
and
fldenv
push
sub
in
test
lret
test
aam
pop
and
mov
mov
nop
mov
mov
out
mov
out
add
imul
pop
push
lret
mov
mov
pusha
aas
loopne
in
jnp
cs
sbb
push
mov
movsb
push
dec
loopne
pusha
mov
jmp
shrl
in
adc
into
lcall
push
sub
mov
or
dec
fisubrs
or
aam
sbb
int3
call
mov
and
xor
arpl
ret
pop
push
xchg
mov
pop
addl
aas
leave
inc
lds
out
add
shll
cld
push
mov
sbbb
dec
outsb
adc
adc
xlat
popf
or
jae
xchg
lds
iret
cwtl
aas
test
pop
testb
lods
in
pop
lds
pop
clc
xchg
sbb
aam
add
lret
mov
cs
enter
fadds
adc
xor
ret
fldcw
cmp
pop
mov
daa
sub
jg
xor
rcll
dec
outsb
rcr
dec
repz
daa
lahf
mov
push
sbb
sbbl
aad
andl
fcomi
fbstp
add
jno
shlb
pop
jbe
sbb
inc
xor
jp
shll
mov
pop
sub
fs
mov
xor
jge
add
mov
int
dec
imul
ljmp
cwtl
and
leave
dec
out
ret
or
loopne
ljmp
cmp
ljmp
movsb
stc
adc
xor
outsb
or
jo
jns
sbb
jle
and
call
pop
jbe
test
fistl
mov
mov
ljmp
sbbb
enter
push
mov
jne
insb
or
or
jo
movsl
mov
xor
ret
jmp
cmpsl
inc
incb
inc
sub
fcmovnu
adc
fsubr
mov
rcrb
rolb
jbe
adc
pop
daa
jne
es
fisttpl
jo
pop
inc
fcomip
cmpsb
fwait
jl
outsl
clts
sbb
dec
sub
sub
sub
mov
lcall
push
or
out
nop
add
sbbl
mov
lcall
xchg
inc
cld
ror
std
inc
jnp
aam
add
push
inc
and
stc
cli
mov
cmp
aam
dec
test
mov
rcr
shll
mov
sbb
fwait
sbbb
mov
inc
stos
sbb
pop
fnsave
or
mov
jge
repz
in
rol
and
pop
add
mov
aaa
repnz
xchg
mov
sbb
dec
and
cmp
fstl
and
je
xchg
in
mov
mov
mov
pop
or
pop
cmpsb
fisttpll
or
adc
pushf
xor
inc
shll
mov
int3
add
sub
xor
aaa
dec
dec
in
cs
fldcw
out
sbb
xchg
jp
xchg
xchg
ret
pop
in
sbb
cmp
cmp
shl
es
mov
vandps
pop
pop
mov
ljmp
fsubrl
mov
add
or
adc
sub
adc
mov
jl
add
nop
push
sub
xchg
or
nop
adc
jl
mov
or
hlt
in
imul
int3
mov
scas
sbb
sub
push
jmp
xor
mov
gs
mov
adc
jp
rclb
fstpt
roll
xor
addr16
jo
and
jnp
xchg
jecxz
insw
pop
push
aad
adc
inc
stos
movsl
pusha
and
mov
pop
clc
je
and
lods
decl
clc
stos
dec
add
lcall
lds
pop
lret
fwait
movsl
das
xor
cs
dec
xor
cmpsb
dec
sti
mov
subl
sbbl
popf
sub
mov
fiaddl
mov
dec
addr16
test
adc
adc
into
data16
shr
jmp
xchg
mov
mov
push
out
adc
add
cmp
jle
jg
add
xchg
es
movsb
xchg
or
lret
push
shll
inc
test
jle,pt
mov
jo
rcll
inc
and
xchg
idivl
add
hlt
pop
pop
pop
mov
test
dec
cs
ret
xlat
fsubrl
push
popa
gs
dec
pop
aam
stos
cmp
and
mov
imul
popf
rorl
sarb
nop
imul
xor
cmp
and
mov
fwait
and
insl
xor
inc
mov
cmp
push
pop
push
rcrb
int
stos
and
push
push
mov
xchg
sub
ret
mov
iret
jmp
sbb
push
les
hlt
push
and
in
jne
push
mov
pop
jg
into
adc
push
rcll
lods
clc
scas
adcb
out
pop
sbb
mov
repz
adc
and
inc
xor
or
inc
sub
mov
jns
pop
xchg
je
stos
sub
hlt
mov
sar
jp
je
icebp
shlb
add
lods
mov
sbb
mov
jl
mov
pop
cmp
mov
add
lock
lahf
push
pop
sub
push
in
lret
imul
arpl
loopne
push
jmp
adc
repnz
sbb
loopne
cmp
jl
psrad
shl
pop
add
xchg
ret
clc
pusha
lock
icebp
fldcw
or
clc
cltd
mov
sarl
in
cmp
fimuls
fistl
xor
mov
mov
xor
js
sub
xor
test
xchg
lock
or
stc
and
mov
adc
test
cmp
mov
lods
dec
and
or
mov
add
aas
ljmp
push
pop
imul
xor
add
cmp
int3
xor
push
mov
insl
adc
cmpsb
clc
ret
push
sub
cmpsl
fisubrs
push
pop
adc
adc
pop
push
enter
lods
mov
dec
mov
cmp
sbb
nop
pop
stos
adc
rolb
pop
jnp
mov
push
inc
push
or
mov
xor
ds
add
aad
inc
dec
push
push
pop
push
mov
or
ss
cmpsl
inc
aas
loop
adc
push
and
orl
rolb
inc
xchg
cwtl
in
cli
shl
stos
push
lcall
scas
mov
xor
jno
sub
aam
mov
es
push
push
or
sbb
fisubl
cs
cmp
lahf
roll
ficoms
daa
xlat
bound
xor
out
shlb
xor
or
or
push
into
imull
xchg
sbb
mov
mov
push
das
sti
add
mov
rolb
test
ljmp
push
mov
adc
jno
adc
push
and
mov
cmp
jge
pop
xor
add
push
sti
je
fs
push
push
add
xchg
or
adc
mov
jno
mov
loope
daa
and
dec
mov
mov
mov
insb
int3
and
jg
mov
dec
jle
inc
pusha
xchg
roll
sub
subl
ss
in
in
jns
cwtl
outsl
dec
cmp
inc
inc
lock
xchg
ret
add
jno
orl
cli
xor
lret
push
ret
pop
aaa
adc
out
mov
mov
add
faddp
pop
ds
mov
mov
push
inc
daa
adc
sbb
repz
jns
push
inc
scas
mov
jl
xor
push
lret
and
dec
sbb
sub
sbb
out
and
mov
fistpl
outsl
dec
adcb
add
jle
lds
xlat
int
cmpb
mov
jle
ja
inc
dec
add
or
iret
or
push
push
dec
rorl
nop
pop
gs
in
inc
dec
mov
int
jg
xchg
mov
ja
cld
pop
loop
push
ja
adc
cs
inc
loop
imul
icebp
adc
arpl
fcomip
pop
jle,pt
dec
or
xlat
jle,pt
arpl
leave
add
std
test
stos
sbb
or
mov
xor
add
inc
adc
nop
xor
xchg
mov
sub
test
scas
inc
gs
or
inc
loopne
inc
dec
fidivrl
das
cmp
dec
jno
push
cmp
sbb
pop
loop
add
push
xchg
cmpsl
xor
and
ret
and
cs
testb
nop
scas
shrb
inc
pop
push
rcr
lock
stc
push
xorb
hlt
pop
movsb
inc
clc
int3
out
cltd
aaa
es
sbbl
shrb
aas
inc
loop
sbb
and
mov
mov
inc
loopne
inc
add
and
mov
push
fisubrs
jmp
mov
jge
adc
push
ja
inc
ljmp
push
enter
outsb
sbb
jae
inc
sbb
enter
xchg
adc
test
nop
adc
pop
inc
xchg
xor
call
push
std
sbb
hlt
popa
inc
insb
ds
sbb
adc
loope
mov
aam
mov
cmp
fisttpll
push
jno
pop
fstl
jge
js
push
add
call
or
outsb
in
shll
js
xchg
xchg
xor
add
xor
lods
pop
mov
arpl
insl
lahf
cmp
push
mov
cmp
mov
inc
adc
int
pop
jl
shl
andb
push
movups
sbb
push
shr
loop
ljmp
mov
andb
repnz
push
xchg
push
cmove
dec
sbb
sub
adc
sub
pop
mov
xchg
xchg
cmp
cli
test
jp
cmp
or
push
aas
dec
jnp
int
nop
lcall
out
mov
push
jo
hlt
rcll
mov
mov
outsb
sarb
adc
mov
xor
sbb
ss
ffree
fdivrs
sub
xchg
sub
sbb
les
or
add
and
sub
jne
rcl
loope,pn
cmovb
xor
jb
mov
js
jae
or
push
je
pop
sbb
adcl
sbbl
adc
ds
push
shlb
sbbb
data16
frstor
ss
xchg
fildl
push
xor
loope
sbb
in
sub
enter
pushf
insb
mov
xchg
iret
mov
pop
add
inc
sti
xor
adc
fs
dec
popa
sub
shll
dec
cmpsb
jne
lcall
inc
loope
addr16
pop
fidivrl
cld
mov
call
xor
jmp
pop
jnp
int
adc
xor
mov
jo
subl
xor
mull
mov
adcb
ljmp
mov
faddl
mov
mov
ffreep
mov
xor
iret
loopne
decb
mov
push
xchg
test
push
lods
ds
xchg
and
mov
out
push
scas
clc
xor
stos
movsl
sub
xchg
jecxz
adc
inc
push
and
jo
sbb
daa
sarl
mov
inc
dec
inc
push
adc
mov
ret
add
adcb
lahf
and
notl
das
pop
dec
pusha
leave
mov
in
pushl
jbe
inc
add
pop
movhps
lcall
mov
cli
inc
push
sti
cmp
or
in
xchg
xchg
ret
pop
cmc
movsl
push
cmp
xchg
and
push
xor
in
cmc
icebp
push
and
sahf
aad
mov
inc
jnp
mov
push
imul
pop
xor
sbb
mov
push
js
xchg
inc
rorl
mov
call
mov
repz
jge
jbe
push
movsl
paddq
pop
add
xadd
cmp
mov
lods
sub
fld
add
enter
fwait
lods
rorl
sbb
mov
pop
inc
shlb
cltd
push
addb
mov
and
lds
mov
das
mov
cmp
pop
sbb
sbb
test
negb
cmc
and
bound
fmull
cld
jle
scas
add
inc
sti
gs
lcall
sti
hlt
clc
inc
iret
or
popa
xor
xor
jb
xchg
sbbl
mov
or
sbb
push
push
inc
pop
les
inc
mov
aam
jbe
mov
subl
mov
pop
sbb
icebp
hlt
out
pop
je
loopne
out
mov
addb
out
in
mov
push
lcall
cld
stos
cmp
movsb
inc
add
xor
mov
jmp
xlat
mov
mov
adc
add
les
shlb
call
pop
and
inc
imul
pop
stos
pop
sahf
push
test
mov
iret
cltd
dec
nop
xchg
lcall
push
and
xchg
daa
lock
ret
push
or
aaa
pmulhuw
and
aas
dec
mov
adc
lods
sahf
jp
decb
pop
inc
jno
adc
or
sub
jmp
add
push
shll
std
sub
adc
or
lret
mov
mov
dec
and
into
sub
push
pop
fcoml
cld
je
ja
incl
pop
call
ljmp
cmp
xchg
hlt
int
push
push
inc
and
mov
in
aas
xor
sub
rcrl
cmc
cmp
jbe
pop
push
mov
push
push
lock
fmul
and
test
hlt
leave
jle
mov
les
cmpsl
jbe
cmp
inc
and
cmc
insl
xchg
mov
xor
sbb
mov
pop
outsl
aas
faddl
mov
sbb
insl
mov
movsb
cmp
into
push
adc
xchg
sbb
xchg
push
pop
or
pop
and
xlat
push
sarb
test
mov
adc
push
cmp
mov
and
inc
hlt
bound
and
pop
mov
lds
mov
or
pop
sub
in
push
push
arpl
out
dec
cwtl
pop
add
xchg
and
lcall
xchg
or
insb
inc
inc
add
push
adc
sub
xchg
gs
inc
add
movsl
cmp
jne
fisttpl
and
roll
test
and
leave
add
and
cmpl
cmp
shrb
jge
cs
inc
mov
add
rorl
repnz
sbb
in
pop
xor
sarb
ret
push
sub
addl
xor
pop
cld
or
mov
pop
pusha
jno
or
mov
test
into
inc
daa
push
ror
loope
push
jno
cmp
xorl
sub
mov
add
test
shll
out
dec
inc
nop
jns
mov
cmpsl
sub
push
cwtl
hlt
ficoml
mov
mov
nop
cltd
lods
jle
dec
xorb
loope
push
aaa
or
ja
insb
xor
popa
fs
lock
sub
mov
andb
xor
fnstsw
mov
dec
jmp
lret
repnz
pop
push
das
jp
mov
sub
and
adc
cmp
sbb
pop
fsts
mov
cmp
loop
mov
ljmp
imul
in
mov
scas
mov
mov
xchg
jle
ret
daa
addb
xlat
push
adc
leave
and
test
xor
push
push
repz
push
xor
arpl
mov
xlat
inc
popa
adcb
roll
stos
mov
in
xchg
test
rorl
mov
mov
arpl
xchg
out
mov
inc
or
push
push
call
pop
push
dec
sbb
mov
push
xchg
stos
movsl
lret
enter
sti
push
loope
mov
out
gs
pop
hlt
ret
fs
les
ja
loop
inc
pop
loopne,pt
pop
adc
out
enter
push
leave
cld
push
sub
aaa
inc
xchg
imul
popa
inc
and
mov
gs
xor
xor
shr
sar
arpl
mov
cld
nop
icebp
add
hlt
repnz
sub
xchg
aas
push
xchg
push
and
clc
call
inc
mov
inc
sub
and
lcall
mov
in
adc
xor
pop
mov
add
stos
mov
jle
into
andl
mov
mov
sti
pop
or
lock
inc
insb
in
sbb
or
adc
jo
mov
mov
or
std
pop
fdivrs
fwait
rcll
mov
popa
xchg
jmp
repz
cld
and
sbbl
mov
jns
cmp
add
xchg
into
out
dec
adcb
and
aad
xor
lahf
icebp
adcl
and
test
push
notl
jb
push
test
scas
pop
int3
xchg
jnp
xchg
xchg
mov
inc
lahf
push
dec
or
sub
pushf
push
add
scas
sbb
xor
xchg
sbb
or
cmp
sbb
popf
popa
test
lahf
gs
out
std
aaa
cmpsl
cmp
in
ja
or
jne
mov
fnstcw
aas
popf
sbb
inc
mov
hlt
jb
xchg
xor
fdivp
mov
inc
fsubrl
es
fsubp
fwait
pop
dec
and
cmpsl
movsb
das
jg
addb
mov
jle
mov
jecxz
ljmp
sbb
lods
sbb
mov
icebp
push
inc
loop
xor
mov
mov
sub
adc
fists
idivl
imul
push
xlat
idivb
xor
faddl
mov
or
or
inc
add
fwait
cwtl
lds
and
cmp
dec
cs
in
jbe,pn
jl
imul
test
mov
nop
or
ret
inc
daa
ljmp
pop
outsl
and
cmp
lods
adc
outsb
hlt
or
or
xor
cmp
and
cmpsl
je
das
in
mov
xor
mov
outsb
cmp
in
lds
insb
outsb
mov
dec
push
sbb
mov
xor
dec
cmp
scas
sbb
in
lret
fs
in
and
fs
push
push
out
js
call
xor
sbb
clc
aaa
hlt
push
fdivl
cmpsl
jbe
inc
aaa
pop
sbb
add
lods
mov
xor
int
jne
cmp
loopne
xor
pop
icebp
lds
outsb
or
loop
std
insb
fisubs
fwait
es
inc
sbb
adc
adc
mov
adc
adc
clc
pop
int
xor
adc
sub
sub
sub
inc
fmuls
mov
pop
xchg
or
int
cli
out
leave
data16
loop
add
inc
negl
testb
push
test
rcr
and
push
ja
pop
mov
pushf
or
or
sahf
fwait
std
and
xor
cwtl
cmc
xchg
ficoml
inc
and
jns
adc
push
pop
dec
and
movsb
ret
xchg
sbb
jle
adc
loopne
mov
xchg
fdiv
loopne
push
btc
jae
push
arpl
popf
mov
loop
pop
popa
push
stos
iret
mov
push
mov
and
test
lock
adc
mov
mov
xorb
ss
test
pop
ret
test
dec
js
inc
pop
sbb
stc
les
lock
jno
fucomip
aam
fistpl
jecxz
add
add
or
push
mov
xor
add
popf
ss
pusha
aad
lea
into
cmpsl
mov
xor
iret
push
mov
pop
fistl
stos
cmpsb
mov
fdiv
addr16
sub
icebp
imul
pop
fisttps
jns
rcrl
xchg
xor
mov
outsl
shlb
add
jne
outsb
cmp
ret
xchg
dec
test
push
cli
js
fcomps
in
clc
adc
stos
adc
addl
mulb
cld
call
xchg
add
or
fidivs
mov
fsts
sahf
mov
add
lds
or
fcomp
cli
rclb
test
inc
and
inc
ficomps
loopne
mov
dec
push
add
cwtl
shll
jmp
and
test
push
fisttpl
sub
add
iret
push
cmpsl
or
or
lret
cmp
mov
andl
aad
cld
and
mov
xor
add
and
repz
rorl
push
loope
bound
mov
mov
test
pushf
push
sar
mov
addr16
jle
fsts
xlat
mov
aam
adc
or
fs
or
scas
mov
adc
call
fsubrs
rcll
jp
sbb
push
pop
pusha
mov
mov
fldenv
mov
out
push
ss
and
cmp
lea
xor
addl
and
xchg
jne
xlat
insl
cld
shlb
ss
ss
xchg
inc
roll
stos
in
pusha
enter
and
test
jnp
dec
rorl
ja
xor
outsl
notb
mov
mov
leave
aam
icebp
pop
scas
stos
inc
sbb
pop
add
inc
test
mov
js
popa
adc
push
aam
loopne
shrb
bound
mov
mov
add
xchg
out
mov
ss
push
xor
push
push
push
icebp
or
cmp
inc
mov
mov
movb
sbb
jp
inc
test
icebp
roll
mov
mov
popf
test
test
sub
stc
in
ss
dec
in
pop
push
hlt
imul
add
dec
mov
push
lea
jo
jl
iret
daa
xor
insb
movq
jg
dec
xor
fstps
shll
sub
fdivp
into
pop
sar
push
cmp
stos
imul
cld
sahf
ja
mov
div
rclb
adc
das
push
push
and
pop
mov
sti
daa
mov
jmp
clc
or
and
push
xor
mov
push
mov
lds
adc
mov
pop
sub
in
or
bound
sarb
inc
push
jae
xor
xor
int
mov
pop
pop
add
add
mov
sbb
sarb
pop
rcrb
pop
call
add
sub
mov
js
stc
cltd
add
push
adc
mov
pop
mov
add
mov
push
ret
cmp
sbb
cmp
pop
out
xor
mov
leave
rcll
jne
adc
push
push
ficoms
daa
movsbl
push
popa
push
in
je
bound
jne
jae
adc
cmp
hlt
xor
rcll
or
jecxz
sbbl
or
xlat
cmpsb
jns
add
test
inc
loop
les
mov
sbb
sub
jns
mov
push
push
dec
xor
inc
pusha
mov
lock
outsb
cmpsb
imul
jle
icebp
push
sub
and
jo
mov
xchg
inc
jmp
pop
jbe
dec
jae
inc
pop
je
lret
test
shlb
vmptrld
mov
and
out
jmp
xchg
mov
jo
mov
mov
aas
sub
into
sti
std
test
jae
dec
jl
mov
ljmp
sbb
pop
jl
or
mov
and
mov
rorl
mov
and
sbb
aam
mov
gs
sbb
push
sub
xchg
cmp
mov
jb
push
ret
aaa
ljmp
xor
sbb
cmp
mov
and
shll
mov
xchg
add
add
pop
or
lret
ljmp
add
out
or
mov
and
add
adc
and
sbb
or
xchg
lret
inc
test
pop
incb
xchg
push
push
push
add
imull
sbbl
movsb
adc
jle
inc
mov
cli
loope
dec
adc
inc
dec
outsb
mov
out
push
pop
sub
jle
popf
and
adc
adc
push
lods
xchg
xor
scas
inc
test
and
cmp
lea
push
sbb
cltd
jp
inc
jo
sbb
push
xor
dec
push
mov
and
pop
cmc
leave
sub
dec
icebp
movsb
ja
jae
mov
stos
out
jbe
adc
cli
daa
xlat
ds
out
xchg
inc
cmc
sbb
dec
movsb
cs
lcall
mov
lahf
aas
js
imul
ja
pop
aam
stos
sub
xchg
into
jo
adc
mov
jno
mov
outsb
push
push
lods
inc
xchg
add
in
fisttpl
and
je
ljmp
aad
das
js
aad
jge
and
and
mov
cmp
or
jecxz
fisttpl
or
in
lcall
out
and
push
sbb
nop
jae
loop
mov
dec
stc
rcll
test
pop
mov
inc
and
movsl
icebp
mov
std
pop
xchg
bound
sarl
jge
pop
je
js
push
lea
jo
repz
xor
cmp
jle
movsl
int
pop
aad
pop
int3
shlb
pop
sbb
je
push
xor
fsubrs
or
push
sub
lcall
movd
sti
cmp
in
sbb
shll
fidivl
cmp
push
addr16
push
negl
lods
mov
jo
mov
pop
lock
popa
lods
lods
xchg
stc
rorb
mov
sub
mov
mov
add
add
lahf
rol
xchg
lods
mov
fwait
xor
lahf
push
push
fisttpl
sub
jb
sbb
ret
jp
movsb
cmp
inc
cmc
jmp
push
repz
adc
aam
jo
add
arpl
xor
add
js
in
aad
mov
jo
cmp
sub
or
sbb
jle
adc
sub
adc
lret
mov
or
push
inc
icebp
mov
popf
cmp
sti
in
fbld
movl
cmp
in
dec
mov
sbb
dec
in
cltd
lods
pop
and
ret
inc
scas
stos
and
add
dec
mov
sub
rclb
movsb
xchg
setg
clc
loope
pusha
adc
xchg
xor
and
fdivl
addr16
movsl
inc
bound
iret
push
xchg
leave
addr16
xor
popa
mov
daa
jmp
cmp
xor
sbb
and
xchg
push
sbb
sub
aam
sub
xlat
adcb
je
dec
aam
out
test
clc
push
jge
mov
cmp
cmp
inc
mov
das
add
cmp
cmp
cmp
imul
test
mov
das
xchg
fxtract
add
jmp
lds
inc
pop
adc
insb
jp
add
addr16
sahf
cmp
push
adc
xchg
jl
mov
fdivrl
push
sbb
fs
out
lds
pop
jae
sbb
in
xchg
sbb
daa
cmp
rclb
negl
mov
or
imul
cmp
mov
add
xchg
por
jp
xor
adc
or
icebp
into
jbe
lcall
clc
and
pmuludq
test
jne
aas
jns
dec
jae
ret
shll
push
mov
mov
mov
or
orb
dec
mov
lock
fimuls
pop
outsl
xchg
fsubrp
cltd
sub
cmp
pop
sbb
xchg
mov
push
stos
leave
stos
stc
sub
int3
fwait
or
and
xchg
out
outsb
loopne
mov
adc
and
cmp
xor
fbld
jg
cmp
mov
or
fildll
inc
loop
or
icebp
and
mov
insb
nop
test
cmpsl
lcall
loopne
inc
cmpl
std
pop
or
inc
xor
xchg
inc
cmp
paddusb
jmp
mov
dec
add
cs
sbb
outsl
pop
rolb
push
jg
or
ljmp
sub
pop
int
xchg
push
jp
ds
sub
mov
sbb
mov
popl
lea
mov
inc
adcl
inc
stos
cmc
lods
cmp
pusha
mov
shlb
lret
and
xor
into
and
xchg
lods
into
stos
fwait
mov
hlt
jge
fneni(8087
xchg
mov
sbb
sub
loop
dec
sbb
out
ror
cwtl
lret
adc
les
shll
pop
mov
mov
pop
push
pop
pop
mov
adc
pop
add
sahf
cmp
jo
mov
adc
mov
out
cmpb
lcall
mov
dec
shlb
adc
in
aaa
pop
sti
lahf
adc
scas
cltd
push
mov
sbb
lcall
dec
mov
inc
iret
sub
dec
sbb
popf
adc
fmul
pop
jbe
leave
sbbl
les
and
dec
movsb
in
cwtl
mov
add
clc
fcomip
jo
sub
add
mov
in
push
xchg
test
xchg
icebp
stos
cmc
mov
shlb
inc
orb
xor
ss
and
cwtl
loope
cmp
in
cmp
scas
mov
fldenv
dec
xchg
adc
push
add
arpl
mov
stos
push
inc
pop
dec
and
or
add
xorl
ljmp
shll
mov
jmp
fdivrs
mov
add
jmp
cmpsb
dec
push
adc
sti
inc
or
imul
imul
sarb
or
cltd
xor
insb
xor
andl
pop
pusha
ds
jl
rorb
hlt
ljmp
inc
cmc
ret
sub
pushf
or
movsl
sub
inc
dec
adc
cli
mov
sbb
cltd
sub
mov
ds
or
mov
call
xchg
jnp
lods
sahf
push
popa
adc
subb
push
hlt
dec
and
and
dec
cmp
dec
mov
mov
or
lret
push
pop
out
sub
mov
ret
roll
push
std
inc
rorl
das
outsb
adc
hlt
test
inc
inc
js
mov
xchg
je
hlt
inc
imul
nop
pop
in
xchg
fcom
xchg
rcrb
flds
add
lods
xchg
adcl
inc
and
cmp
push
imulb
stos
rolb
adc
daa
outsl
xor
std
fadd
cs
pop
dec
daa
xchg
add
mov
sbb
pop
jno
jo
jo
xchg
cmpsb
mov
push
pop
push
shlb
xor
sbb
addr16
popa
push
sbb
cmp
mov
rcrl
xchg
adc
cld
ljmp
test
cwtl
push
das
mov
mov
mov
in
ret
insb
mov
add
movsl
rorb
adc
les
jo
cmp
arpl
jae
pop
sbb
jbe
insl
inc
jecxz
or
lds
adc
dec
in
mov
cmp
dec
test
add
jno
aaa
xchg
sub
inc
orb
es
or
xor
jb
fdivrl
inc
in
add
pop
sbb
inc
xor
pop
cld
add
or
mov
xchg
sbb
or
push
pusha
rolb
jg
mov
add
jo
inc
inc
inc
lahf
pop
jno
roll
mov
push
les
aam
loop
jge
shlb
inc
inc
int3
mov
fbld
fists
or
jecxz
push
sbb
mov
ljmp
or
pop
mov
adc
pop
pop
or
stos
out
imul
pop
jle
pop
mov
test
lock
sub
rcll
xchg
or
dec
aad
iret
inc
icebp
hlt
nop
dec
jb,pt
dec
mov
stos
and
mov
adc
loop
addb
push
mov
test
or
ret
fs
jnp
adc
or
movsb
dec
fmull
fwait
xchg
mov
inc
test
mov
gs
or
push
frstor
push
popf
push
push
xchg
xchg
dec
adc
sbb
test
mov
nop
aas
mov
mov
jo
scas
sbb
je
mov
aam
sahf
out
inc
out
adc
cltd
stos
dec
mov
lock
jne,pn
cld
jge
shr
pusha
cs
stos
lsl
sahf
les
xchg
push
sub
fsts
filds
mov
pop
adcl
inc
inc
and
inc
cmc
mov
mov
push
mov
loope
push
test
push
stc
pop
frstor
adc
xorb
cwtl
lods
inc
mov
and
fdivr
hlt
mov
mov
adc
mov
insb
sbb
mov
ret
push
repnz
dec
int
inc
roll
ljmp
je
sahf
jne
sub
xlat
movsb
shrb
fimuls
xor
out
add
push
lods
aad
xor
mov
xbegin
mov
push
and
insb
push
xchg
pop
pushf
cli
test
addl
or
mov
jno
popl
or
negb
lock
push
dec
aam
pop
inc
cltd
aam
outsl
xor
sub
ss
jl
xchg
inc
jmp
cli
adc
push
mov
loope
out
mov
mov
call
insb
mov
and
adc
out
mov
loopne
in
mov
add
in
inc
enter
adcl
jmp
inc
xchg
repz
sti
inc
mov
insl
sub
inc
mov
mov
lret
push
mov
and
in
pusha
sbb
add
xor
pusha
stos
dec
leave
mov
mov
sub
jmp
movsb
inc
cmp
add
arpl
test
orl
sbb
or
test
cmpsb
sub
or
mov
ljmp
decl
les
mov
mov
push
cmpsl
push
jne
sarb
cmp
test
das
popf
xchg
mov
push
loope
jno
push
adc
xor
add
shl
push
addl
xor
dec
push
xchg
sub
sub
fxch
add
dec
pushf
jge
rcrb
push
or
sbb
cld
xchg
cwtl
xor
mov
push
stc
dec
inc
push
or
bnd
and
insb
push
cs
fcmovb
cli
std
aam
cmp
cmp
and
cs
out
pop
mov
int3
push
mov
add
test
xchg
inc
xor
roll
pop
shl
xor
aam
pop
lcall
adc
in
mov
mov
add
shr
xor
je
cwtl
adc
or
outsb
in
xor
cmp
repz
cltd
ficomps
mov
adc
subb
sub
sub
sbb
xor
or
cmc
je
rol
shll
mov
dec
ds
mov
jle
int
jge
js
push
or
push
pop
roll
push
xchg
int3
aam
mov
adc
pop
dec
and
pop
fdivrl
xlat
stos
pop
xchg
fisttpl
cmp
push
push
inc
rol
test
movsl
iret
xor
adcb
pusha
hlt
mov
popa
add
xor
and
mov
adcl
jnp
cltd
in
xchg
repnz
mov
cmp
call
pop
je
xor
lock
call
cld
add
xorb
inc
dec
dec
out
dec
pop
add
daa
call
mov
push
mov
sti
and
call
and
push
push
inc
sbb
jnp
and
mov
jbe
aas
push
add
or
dec
adc
or
inc
int3
inc
xchg
mov
int
sahf
shrl
push
call
stos
push
jmp
pop
sbb
jns
daa
xor
frstors
pop
adc
out
addl
bound
xlat
fstpt
cld
add
jbe
xchg
in
std
stos
dec
mov
cmpsb
lcall
sub
icebp
mov
inc
push
mov
pop
xchg
pop
stos
xchg
popa
and
cmp
cmp
xchg
inc
lahf
mov
addl
jle
addl
sbb
cmp
adc
cmp
push
inc
push
xchg
and
add
sub
imul
shll
cmp
data16
movsb
movsl
mov
jno
repnz
gs
outsb
fcmovne
fstps
inc
out
sub
or
faddl
icebp
cmpsl
xchg
test
outsl
les
rcrb
int3
rcl
movsb
loope
arpl
in
daa
push
dec
xchg
jnp
mov
iret
mov
mov
push
call
inc
push
jns
out
adc
xor
ja
sub
xor
adc
pop
aad
lods
lods
aas
sarb
sub
mov
mov
loopne
jo
iret
enter
out
aaa
and
fdivrp
lcall
xor
ja
fs
shll
dec
fwait
add
clc
fbld
pop
lock
jo
add
es
cmp
xchg
mov
sbb
popl
push
inc
aaa
lock
add
sbb
dec
test
popl
pmaxsw
adc
xchg
pop
das
clc
jne
call
popa
lahf
loopne
cmp
sbb
insb
mov
sahf
testb
adc
adc
dec
pop
pop
loopne
in
fs
xor
scas
cmc
mov
mov
ficoms
sarl
iret
xor
mov
push
dec
push
push
or
andl
mov
cmp
xchg
xchg
mov
fisubs
dec
aaa
sub
cli
pop
aam
adc
sbb
mov
xor
daa
xor
add
insl
mov
xchg
mov
call
cmc
xchg
jecxz
pushf
hlt
mov
int
pop
insb
sbb
cmp
fdiv
cmpsb
int
xchg
mov
lods
jbe
pusha
out
and
mov
cmpsb
jnp
inc
repnz
jbe
lret
inc
sbb
ja
outsl
xor
je
and
inc
inc
fdiv
inc
sbb
les
jecxz
or
popa
pop
popa
jecxz
mov
lods
call
add
lds
adc
add
imul
sub
cmpsb
js
imul
push
jno
int3
js
dec
pop
pop
xchg
cmpsl
daa
xchg
push
adc
lods
inc
adc
sub
push
pop
aad
mov
inc
mov
sbb
aas
dec
adc
sbb
in
mov
popf
push
mov
pop
call
sub
cmpb
jle
mov
mov
jg
nop
xchg
xchg
adc
comiss
sarb
xchg
inc
out
mov
cmp
insl
int
xlat
je
shlb
stos
adc
out
pusha
rclb
xchg
scas
pop
push
sbb
repnz
mov
out
mov
shrl
jae
jno
enter
and
inc
decb
rorl
mov
out
pusha
mov
pop
cli
mov
pop
xchg
fs
dec
pusha
add
pop
cmpl
lods
xchg
mov
adc
jle
sbb
inc
mov
fsubl
push
out
out
mov
cmpsl
sub
sar
aad
js
jmp
xor
ret
jmp
fcmovu
and
dec
bound
dec
add
lock
adc
je
jmp
add
std
jbe
jp
enter
sbb
inc
std
push
cmpsl
ds
sbb
dec
loop
ds
push
sub
xchg
adc
loopne
jb
jb
push
mov
cmp
push
shll
or
xchg
adc
fbstp
xlat
insb
insb
mov
pop
aas
xor
pusha
or
cmp
ret
cwtl
mov
dec
int
pusha
fldt
loopne
outsl
addb
jp
pop
sbb
sbb
mov
mov
hlt
test
xchg
sbb
andb
clc
jmp
repnz
mov
daa
push
out
push
jmp
push
mov
xchg
xchg
daa
cli
mov
mov
mov
adcl
shrb
pop
push
jl
sub
test
inc
sarl
xchg
or
push
shl
nop
adc
inc
and
addr16
and
xchg
xchg
in
cwtl
test
mov
jbe
in
cmp
cld
xlat
mov
lcall
js
loope
leave
push
es
xchg
pop
add
ss
pop
lret
mov
lcall
xlat
andl
ret
mov
and
xchg
cmp
imul
inc
insl
cwtl
dec
dec
inc
and
rolb
sti
loopne
cmc
cli
je
bound
pop
push
xchg
push
mov
mov
fisubrs
jecxz
int3
shrb
repnz
sbb
sbb
adc
cmp
in
sbbl
push
lahf
out
mov
loope
cli
sub
adc
movb
pop
in
loop
xchg
rcr
pop
xor
cli
cmp
mov
lds
mov
adc
addr16
std
xchg
loope
xor
mov
testb
mov
ljmp
outsl
mov
out
sahf
pop
and
into
dec
dec
or
cli
popa
xor
and
add
sbb
inc
sub
pop
fidivrl
test
jmp
add
out
dec
and
cmp
jmp
icebp
mov
adc
bound
call
xchg
jle
xchg
sub
clc
clc
cmp
add
fnsetpm(287
cmp
push
loopne
or
pop
adc
enter
fildll
jb
jmp
xchg
cmp
gs
inc
xchg
and
sbb
les
pop
scas
xor
test
out
or
sbb
cmp
ja
add
and
mov
daa
pushf
inc
mov
les
cwtl
rol
cmpsl
shrb
jmp
push
ret
inc
mov
or
dec
ret
add
iret
shrb
mov
loop
dec
bound
mov
jle
xchg
out
or
lcall
out
sbb
or
xchg
stos
sub
imul
dec
out
adc
push
je
pop
mov
push
xchg
shrl
gs
int
pop
xchg
shl
jge
in
je
mov
stos
aam
inc
sub
mov
mov
lods
inc
jns
push
ret
mov
clc
xor
cs
movsb
imul
lods
pusha
stos
daa
dec
arpl
dec
adc
iret
push
adc
aad
jns
sbb
clc
sbb
stos
out
xchg
repnz
loop
add
mov
pop
sti
cmpsb
cwtl
or
fidivs
jle
lea
movsb
cmp
mov
pextrw
mov
or
push
mov
insb
loopne
push
or
jb
inc
cmp
push
pop
hlt
pop
scas
push
xchg
jb
cmp
das
addl
sub
jb
xorl
loopne
test
mov
xchg
ja
icebp
aam
jmp
mov
stos
call
or
push
ret
es
inc
mov
out
loopne
pop
rcrl
lahf
lahf
jge
or
jmp
sbb
test
cs
sarb
cs
jne
gs
push
mov
jmp
in
mov
dec
mov
pop
fldl
rcr
cvtps2pi
mov
cmpsl
or
test
cmpsl
mov
inc
pop
add
sub
shll
adc
popf
rorl
adc
sub
xor
loop
xchg
push
mov
pop
outsl
or
xor
and
xchg
loop
inc
xchg
mov
je
dec
push
push
andl
pop
jns
rcr
xchg
inc
adc
pop
jl
xchg
cmp
sbb
aam
pop
and
adc
and
mov
out
aad
xchg
in
ja
mov
call
or
push
xor
mov
xchg
lcall
jo
mov
daa
aaa
and
mov
inc
into
inc
pop
push
inc
and
xchg
push
and
jnp
loopne
popf
rcll
sbbl
or
stos
insb
xchg
sbb
pop
mov
call
pop
dec
loope
xchg
les
adc
or
scas
pop
add
push
out
add
jmp
push
jg
out
stos
sbbb
push
imul
outsb
or
jge
inc
popf
orb
movsb
push
sub
enter
push
mov
xchg
pop
and
mov
xchg
insl
ret
clc
adcb
mov
notb
xchg
xchg
aaa
inc
rclb
dec
inc
into
xchg
lcall
mov
insl
mov
push
or
inc
sbb
hlt
test
test
cli
xchg
pusha
aaa
and
pop
cmp
insl
sti
xchg
push
xchg
push
jecxz
add
enter
and
pushf
imul
shrl
insb
add
sub
cmpl
mov
xchg
rcrb
imul
lods
sbb
scas
mov
popl
cmp
jae
test
shll
dec
inc
pop
pop
mov
xchg
add
ds
jns
jno
js
xchg
inc
mov
fucom
mov
fists
dec
and
inc
test
adc
mov
cli
or
or
icebp
mov
jo
push
add
xor
icebp
and
mov
data16
mov
fs
xchg
xlat
fwait
sbb
jne
or
pop
inc
mov
or
dec
xor
mov
sbb
insl
mov
adc
lods
rcrl
cmp
xchg
cmp
fs
lds
mov
scas
jmp
ljmp
sahf
loop
rcll
fwait
arpl
xor
enter
sub
js
push
add
mov
push
sub
fwait
int
add
pop
daa
inc
mov
mov
pop
push
or
and
int3
mov
push
inc
add
test
out
jge
lock
cmp
lock
pusha
leave
or
je
push
ja
ds
sub
ret
adc
and
jb
jecxz
shll
or
in
inc
cmpsl
inc
inc
stos
loop
push
inc
jbe
push
and
mov
out
mov
cli
subb
sub
leave
je
adc
bnd
aam
fildll
push
cmp
adc
cmp
jno
in
push
mov
add
cs
jmp
and
pop
mov
repz
out
mov
mov
popf
sub
int3
push
adc
dec
xchg
xor
mov
sahf
call
lods
inc
scas
in
lock
adc
cs
test
test
xchg
dec
adc
mov
sahf
sbb
mov
mov
push
test
decl
fdiv
les
test
test
dec
and
or
or
and
cmp
aaa
fdivr
xorb
in
subl
push
lock
ss
ds
adc
cmp
cmp
mov
cld
repnz
adc
dec
pop
xor
dec
and
dec
sbb
cmp
out
mov
jae
test
dec
dec
sub
xor
divl
movb
test
cmp
jbe
sbb
iret
push
imul
in
loopne
xor
and
dec
inc
and
mov
imul
inc
jnp
call
sbb
xchg
and
clc
aas
sub
addr16
dec
cmp
sbb
pop
mov
xchg
dec
jo
pushf
sbb
xchg
pop
sti
imul
xor
mov
ret
ret
in
cwtl
je
cld
xchg
add
popa
insb
popa
ficoms
icebp
adc
dec
fidivrs
push
js
mov
adc
xor
ret
clc
push
jg
rcl
pusha
xchg
pop
mov
xor
push
cmpsl
xor
ja
inc
and
xor
adc
hlt
testb
xabort
jo
cmp
pop
imul
adc
jno
add
addl
mov
aad
sub
iret
ljmp
and
mov
cli
adc
add
xchg
arpl
add
loop
xor
sub
xchg
in
loopne
jmp
cli
push
aam
sbb
inc
subb
pop
enter
mov
mov
dec
imul
out
jnp
call
test
mov
loop
xchg
push
dec
dec
mov
adcb
dec
mov
mov
inc
test
push
xor
out
outsb
loopne
xchg
jae
inc
imul
dec
and
mov
cmp
iret
call
in
jge
int
jbe
and
push
mov
push
dec
cs
loop
fildl
xchg
sbb
adc
jp
mov
shl
popf
test
mov
out
push
cld
xchg
mov
not
jne
push
add
add
sbb
sbb
adc
xor
shll
pop
xor
mov
push
rclb
dec
or
and
stc
add
mov
or
push
pop
fidivs
xor
sbb
inc
cmp
and
out
mov
xchg
mov
cmp
movsl
sahf
xor
lcall
je
mov
mov
mov
xor
call
sbb
dec
xlat
and
sarl
mov
cmp
scas
clc
imul
mov
inc
rcrb
and
mov
sub
cli
pushf
sti
insl
movsl
int
dec
movsl
mov
pop
inc
push
mov
sub
stos
inc
sub
out
ja
jae
adc
adc
inc
jbe
aas
dec
xchg
xlat
test
push
dec
dec
dec
push
cmp
test
and
les
stc
xor
dec
xchg
stos
imul
hlt
mov
ja
mov
cmp
cwtl
lds
int3
dec
scas
das
imulb
mov
sbb
adc
xchg
fsubl
mov
pop
push
es
pop
cmpsb
sub
shrl
mov
jmp
cmp
pusha
push
pop
sarb
mov
jmp
push
rorb
or
mov
test
push
loope
das
popa
aas
test
call
lock
pop
call
xor
out
jne
in
sub
push
pop
cs
mov
cmpsb
pop
xor
lock
jp
fdivrl
addl
dec
cmp
shl
mov
sub
fisttpll
pop
and
adc
daa
test
add
into
or
adc
mov
add
int3
andl
push
jne
movsl
bound
in
dec
jp
js
in
jbe
arpl
push
loope
jl
insl
or
imul
fimuls
sub
sbb
or
out
adcb
sti
mov
xchg
test
js
shl
push
es
je
test
imul
dec
mov
bound
test
movsl
adc
insl
or
jl
adc
mov
cmc
xchg
adc
xor
mov
ds
inc
es
ret
loopne
cli
jl,pn
sbb
jo
cmc
aam
push
rcll
loope
iret
pop
leave
pop
inc
sbb
pop
cmp
rclb
pop
mov
sbb
sahf
hlt
xor
cmpsb
jmp
and
xchg
xorb
rol
dec
fs
add
inc
sub
jno
out
or
adc
push
pop
cmp
rcll
loopne
jnp
test
cmpb
test
mov
movsb
dec
and
push
test
jbe
stos
dec
xor
inc
mov
scas
add
pusha
mov
add
sbb
setp
lcall
movsb
mov
std
lret
fsts
lea
xchg
mov
mov
jl
cmp
xchg
andb
xchg
test
xchg
or
test
mov
das
pop
scas
lods
mov
scas
dec
jo
pop
bound
andb
icebp
adc
jg
ja
sub
cmp
mov
lods
add
mov
or
cs
sbb
insb
jg
scas
outsl
or
xchg
aad
jbe
lods
clc
movsb
movsb
pop
shlb
sub
ds
mov
pop
sbb
scas
mov
mov
fmulp
clc
adc
dec
add
sbb
outsl
and
lea
es
pop
xchg
mov
jmp
jecxz
mov
mov
in
dec
repnz
sbb
ret
push
mov
cmp
and
stc
xor
adc
ljmp
xor
pop
pop
push
out
mov
push
mov
js
loope,pn
pop
pop
push
aas
push
inc
repz
xchg
adc
int3
jmp
pop
pop
push
xor
jl
inc
cwtl
mov
lret
dec
pop
cmp
jle
pop
mov
push
jne
scas
fs
lds
fwait
js
push
adcb
dec
notb
cmp
mov
xor
cmp
and
in
fbld
in
loop
xor
inc
pushf
dec
xchg
pop
xlat
dec
pop
jae
es
pushf
pop
adc
popl
fisubs
jp
xchg
adc
fildll
adc
sub
add
push
sub
inc
outsb
or
cmp
pop
lret
imul
lods
or
push
addl
xorl
or
inc
lea
dec
mov
gs
mov
mov
fidivl
mov
mov
cwtl
adc
popa
cmp
fnstsw
and
jg
mov
sub
mov
insb
mov
cli
mov
pop
nop
mov
ja
jle
pusha
jne
outsl
xchg
cld
adc
out
mov
pusha
cwtl
xchg
dec
dec
push
inc
mov
in
lahf
adc
push
pop
and
dec
dec
or
cmp
sub
pop
dec
enter
jns
adc
xor
adc
inc
es
xchg
mov
enter
mov
xchg
push
iret
gs
cmp
ljmp
xchg
jo
std
xchg
jb
cmpneqps
fsubrl
lahf
test
jne
gs
push
fs
test
in
jecxz
jecxz
das
jg
and
push
popf
test
jno
or
jbe
jno
pop
lcall
cmp
cmp
repz
jecxz
std
jne
inc
or
or
bound
shll
sub
in
cs
test
add
inc
cmc
xorl
dec
sbb
mov
jbe
orl
or
es
dec
dec
sub
adc
pusha
add
jge
xchg
cmp
fdivr
rcrl
fisubl
roll
and
test
mov
rcll
test
adc
mov
pop
aaa
sbb
cltd
sub
adc
ja
or
sub
dec
dec
clc
or
pop
bound
fwait
and
add
test
xor
roll
lods
int3
iret
icebp
addl
dec
jmp
lods
jns
jbe
mov
cmpsl
fstps
leave
ljmp
push
inc
mov
stc
in
repz
add
mov
push
xchg
lods
cmp
imul
insl
pushf
push
loope
add
or
jo
lret
xchg
sub
push
jne
jp
insl
inc
xorb
pop
add
cmp
cmp
rcl
ja
xor
pop
mov
mov
push
and
inc
out
std
mov
mov
or
mov
aaa
mov
push
inc
xchg
mov
dec
add
fsubrl
add
ds
inc
js
dec
fdivr
add
xor
mov
jnp
js
outsl
sub
aas
imul
lock
out
aaa
icebp
pop
pushf
mov
dec
add
sbb
es
mov
out
aas
jmp
inc
adc
xor
adc
test
cwtl
lds
mov
mov
and
mov
inc
rorl
xor
aaa
inc
dec
xchg
mov
sbb
mov
outsb
ret
mov
je
inc
adc
sbb
inc
cmpsl
addb
roll
imul
decb
sarl
xor
aaa
xlat
std
or
sbbl
pop
fmuls
jge
mov
xchg
or
cmp
and
in
dec
sar
loop
out
aam
jne
fdivs
or
inc
nop
sub
jmp
mov
shrl
arpl
sbb
xor
lods
jmp
cmp
xchg
aas
mov
push
idivb
aam
lods
xchg
fisttpll
ds
or
fs
adc
xor
jbe
and
sub
ljmp
ret
add
xchg
xor
jns
jmp
push
lcall
jbe
sbb
mov
lods
ljmp
cmp
int
xchg
es
pop
loop
and
sbb
pushf
test
insb
adc
lret
lods
dec
lss
pop
pop
outsl
mov
addr16
xor
rcl
shl
call
dec
or
popa
or
aam
add
clc
popa
cmp
jo
push
dec
and
mov
lock
mov
xor
cmp
fildl
imul
add
xor
aad
jbe
jbe
mov
add
stc
lods
pop
fldl
inc
sub
inc
or
inc
ds
xchg
fnsave
loopne
sbb
lds
or
add
fildll
std
ret
or
sbb
das
and
scas
test
pop
sub
xchg
mov
icebp
scas
jl
push
xchg
in
add
xor
test
push
jns
in
pop
jo
imul
cmp
pop
cmp
fcompl
and
or
or
dec
sbb
pop
sub
faddl
jge
cs
repnz
jecxz
in
outsl
loop
test
adc
sti
je
sub
shll
adc
imul
lea
xchg
add
lock
movsb
jnp
jnp
inc
lret
test
xchg
movsb
outsl
addb
push
jle
adc
subl
xchg
das
add
insl
shlb
mov
ret
inc
mov
loop
mov
or
xchg
push
adc
dec
cmp
fsts
daa
pop
mov
mov
aas
idivb
cwtl
into
ja
roll
leave
jne
outsb
cli
jb
mov
push
xchg
outsl
pop
cld
xchg
and
stos
xor
js
adc
lock
jle
push
je
in
pop
fs
add
add
sub
fs
js
jmp
insb
aam
out
ds
xor
stos
addr16
je
add
adc
fadds
in
add
jg
mov
mov
add
cmp
cltd
dec
sub
add
out
add
std
mov
adc
cmp
add
sbb
and
lret
add
adc
fdivl
sbb
sbb
call
mov
sbb
push
cmpsl
jb
pusha
cld
leave
loope
push
inc
or
orb
aad
cmc
xchg
shl
pop
ds
into
push
adcl
push
jno
xchg
inc
hlt
cmpsl
ret
imul
or
push
jne
fwait
pop
xchg
pmullw
adc
test
out
pop
jp
sbb
cmp
and
cmpb
jne
xlat
test
rclb
push
test
pop
or
sbb
ljmp
loop
ss
ror
add
push
hlt
hlt
cmp
mov
sbb
mov
push
inc
hlt
cld
xadd
or
in
mov
pop
enter
je
sbb
mov
mov
xor
mov
or
pop
adc
xorl
insb
daa
push
addr16
negl
mov
aaa
push
scas
xor
pop
fimull
lret
orb
stos
movsb
mov
or
dec
pop
addr16
mov
daa
pop
xchg
push
pusha
lea
jo
pop
pusha
dec
es
cmp
fistl
pop
data16
and
jb
xchg
or
ret
mov
pop
lock
mov
incb
push
push
ss
push
jo
icebp
xor
je
movq
mov
sti
stos
orl
cs
xchg
pshufw
or
add
das
cld
sahf
push
aaa
mov
scas
sahf
adc
fwait
scas
mov
sbb
add
xchg
add
add
sbb
call
inc
or
cwtl
xor
inc
aaa
jae
movsl
push
jb
clc
xchg
ret
add
lret
inc
mov
pop
movsl
mov
sbbl
inc
push
dec
test
pusha
and
xchg
movsl
xchg
mov
loop
arpl
sbb
jge
cwtl
add
pop
add
jbe
repnz
dec
add
mov
sbb
mov
lret
test
test
pusha
mov
inc
adc
mov
cs
mov
out
enter
ljmp
lods
pop
sub
sbb
jbe
push
mov
hlt
jae
xor
adc
add
cmp
lock
fldenv
jecxz
sub
and
aad
xchg
sub
inc
or
mov
cli
rorb
pop
lds
mov
and
ret
scas
dec
ret
outsb
ds
std
stos
mov
dec
outsl
movsl
aad
test
cwtl
test
add
jnp
xor
jb
pop
dec
jge
aam
jle
push
shlb
inc
jl
or
vmread
stos
sbb
test
jecxz
mov
xchg
decb
mov
test
mov
mov
mov
xor
push
fdivs
mov
loop
mov
add
into
cmp
cmp
arpl
sbb
leave
jl
imul
leave
mov
addr16
dec
shrb
pop
call
add
sub
das
filds
and
cmp
insb
sub
aas
sbb
mov
or
and
out
je
adc
fidivrl
xchg
orb
push
push
sub
fbld
cli
push
mov
daa
jb
aam
sub
xor
pop
sub
adcb
sub
mov
mov
jnp
cmp
sub
aas
sub
xchg
adc
sbb
daa
cmp
inc
mov
sub
ret
mov
jns
adc
mov
xor
mov
sub
ds
test
hlt
fisttpl
cmp
stc
add
xchg
inc
pop
fwait
add
out
icebp
inc
add
je
imul
push
jp
jl
mov
in
adc
inc
xor
je
je
movsl
movsl
cmc
add
ret
pop
rcll
xchg
jns
rcl
imul
mov
lcall
inc
inc
push
into
addb
out
test
dec
inc
shr
js
shll
aaa
xor
push
sub
add
sbb
call
lret
ja
and
ffree
dec
sub
in
inc
mov
pop
xchg
cmp
loopne
add
fiaddl
rcrb
mov
pop
add
xor
inc
adc
jns
std
iret
inc
sub
ds
push
cmp
lahf
fistl
in
mov
dec
stos
jg
pop
and
mov
mul
stos
ja
flds
inc
call
push
add
mov
fsubl
cmp
cld
add
into
jae
inc
mov
in
xor
xchg
mov
jp
cmp
fwait
ds
inc
adc
int3
cli
adc
unpcklps
mov
mov
jp
mov
lock
fwait
sbb
dec
cmp
add
ljmp
fcompl
inc
xchg
push
stc
lahf
inc
test
mov
xchg
leave
mov
fildl
cld
addr16
inc
push
insl
mov
cmc
popa
pop
pop
sbb
pusha
pop
enter
fsub
xchg
cwtl
adc
das
int
fs
sub
mov
les
pop
lods
mulb
fmul
scas
xlat
cmp
push
or
jb
stos
or
push
cmp
push
pop
mov
inc
mov
pop
flds
pop
inc
pusha
loop
sbb
pop
imul
mov
out
clc
sbb
in
icebp
and
jns
daa
gs
sbbl
mov
sbbb
cmpsb
fs
sarl
add
out
inc
lea
xchg
loopne
icebp
popa
cmpsl
jae
dec
jmp
add
xor
or
cwtl
add
pop
add
ss
mov
insb
fcoms
hlt
es
xor
add
push
jmp
xor
mov
bound
sbb
dec
xor
cwtl
or
jmp
xchg
sti
pop
test
sub
addr16
divb
inc
pop
push
pop
lret
rolb
jo
fisubl
mov
xchg
sub
dec
inc
mov
jge
jmp
or
xchg
hlt
cmp
sbb
out
or
or
jle
mov
and
out
or
cmp
adcl
jbe
mov
sbb
call
lret
jns
push
or
or
dec
or
jns
repnz
cmp
sbb
xor
fstps
in
sahf
rcrb
int
dec
cltd
cwtl
popa
and
rorb
ljmp
out
or
aaa
pop
mov
dec
fs
fiadds
xor
inc
mov
inc
sahf
aaa
mov
pusha
js
mov
addl
inc
out
jecxz
push
inc
jecxz
loopne
mov
rorl
fwait
dec
jg
sub
imul
test
jae
jns
sbb
sarb
add
mov
or
push
adc
clc
or
sub
pop
movsb
jp
mov
orb
jg
dec
fwait
push
fldcw
ds
adc
fmuls
or
inc
cmpb
cmp
out
xchg
xchg
aaa
push
cltd
loope
notb
sahf
out
inc
test
ror
xchg
shl
shrl
ret
aad
addw
xchg
add
inc
inc
int3
inc
mov
and
lea
sub
ficoms
sub
push
aaa
jecxz
lods
insl
mov
lahf
popf
xchg
pop
xchg
insb
adc
cmp
call
insb
fwait
jb
mov
mov
sub
adc
das
xchg
xlat
fnstcw
arpl
cmc
and
out
push
mov
mov
es
xor
pop
loopne
xchg
xchg
and
je
sbb
xchg
xor
and
sbb
cmp
dec
push
mov
cmp
or
pop
sub
pop
int3
cmpsb
mov
and
lret
sbb
pop
or
lock
icebp
fisubrs
data16
or
and
pop
add
mov
pushf
mov
mov
stos
in
push
lahf
cmp
xchg
psubq
xor
fidivl
mov
push
mul
push
stc
mov
jmp
push
shl
pop
faddl
arpl
pushf
pop
sub
and
sub
sbb
mov
xchg
test
xlat
imul
pop
push
push
or
pop
add
cmpl
sub
xor
nop
pop
sub
push
jmp
sub
push
orb
out
mov
pop
or
xor
jge
push
jl
shl
pop
aam
mov
fstps
and
ljmp
dec
mov
std
mov
shl
dec
das
pop
inc
sbb
std
ja
roll
in
lea
mov
pusha
inc
pop
sub
lret
push
mov
cld
sahf
sbbl
dec
add
pusha
cmp
push
pop
add
mov
mov
dec
xor
aas
fisttpl
adc
cli
cld
pop
les
jo
pushf
jge
jnp
arpl
fimull
push
fnsave
out
dec
call
fmul
or
loopne
xor
int
aad
mov
sbbb
sub
jg
xor
push
jl,pt
in
lds
or
jnp
dec
xor
mov
mov
xchg
mov
mov
push
mov
test
cmpsb
dec
rolb
mov
cmp
mov
jle
movsb
mov
mov
cmc
mov
arpl
mov
outsb
gs
sti
repz
mov
add
cltd
std
xor
loop
xlat
or
into
mov
mov
xchg
inc
ljmp
or
fidivrl
lods
or
pop
insl
dec
mov
jmp
je
pusha
dec
adc
iret
sahf
adc
xchg
pop
jmp
dec
cmp
inc
pop
cmp
lret
xchg
push
jno
pop
push
dec
sbb
fldcw
cmp
and
imul
adc
push
packssdw
insb
imul
rcrl
cmp
push
inc
addb
scas
and
xchg
lods
jp
pop
insl
pop
out
mull
sub
inc
mov
sti
mov
jp
xchg
dec
jns
xchg
or
loope
in
add
test
popf
arpl
dec
dec
loopne
add
cwtl
pop
fldcw
ret
dec
fdivr
std
rolb
pop
sahf
lods
pop
ret
enter
mov
fbstp
dec
mov
das
mov
insl
pop
xchg
jl
adc
sbb
addr16
sbb
jmp
out
rcl
rclb
mov
push
loopne
xchg
fsubl
adc
lods
cmc
push
sbb
and
in
ja
inc
cmpsb
test
orl
cs
and
and
pop
jecxz
js
hlt
or
mov
fs
test
push
jbe
outsb
popf
les
dec
push
cld
sbb
jbe
js
jmp
add
test
fistps
cwtl
adc
inc
mov
and
jmp
mov
or
inc
addl
mov
add
negl
xor
popa
push
popf
adcb
pop
arpl
adc
std
mov
ror
lahf
mov
hlt
cmp
filds
dec
popf
fidivrl
mov
out
imul
sarb
sub
fldcw
jbe
shrl
mov
in
xchg
popa
xchg
push
cmp
sbb
dec
in
pop
or
ret
roll
mov
dec
arpl
sbb
mov
mov
inc
imul
jle
ja
xorl
mov
addl
xchg
in
repnz
cmp
push
enter
or
pop
and
rcll
in
and
out
daa
mov
push
pop
mov
pop
add
pop
xor
push
add
push
adcl
stos
fiadds
inc
push
mov
sahf
enter
das
in
roll
dec
cmpb
push
aaa
mov
sub
dec
xchg
scas
and
jns
jecxz
pop
xor
pop
sub
or
adc
and
xchg
jle
cmp
add
mov
adc
sub
cwtl
cmpsb
xchg
xor
iret
popl
dec
movsb
in
and
cmp
inc
sbb
jle
test
sti
mov
bound
mov
lret
sub
cmp
adc
jbe,pt
jns
js
lret
addr16
pusha
xor
sbb
add
mov
sahf
push
in
inc
cli
mov
jne
popl
mov
sbb
mov
jo
insl
adc
ljmp
sub
divb
cwtl
mov
fisubrs
add
xchg
inc
jecxz
dec
iret
add
inc
mov
aaa
loope
enter
fs
or
mull
out
adc
cli
mov
pop
xor
ret
push
cmpsb
jns
lahf
xor
dec
imul
adc
icebp
rcll
mov
sbb
adc
repnz
pop
cmp
in
push
fs
mov
sahf
inc
mov
fcompl
or
cmp
fs
insl
aad
dec
shr
inc
xchg
fcomip
push
pop
adc
jmp
or
add
fcoml
aad
sub
xor
and
outsl
stos
or
add
adc
sbb
mov
xchg
add
ja
pop
mov
test
mov
xchg
add
inc
cmp
xchg
insb
cmp
je
adcl
fs
and
cmp
cmpsb
pop
in
lahf
scas
loop
or
cmp
sub
into
sbb
imul
mov
push
inc
dec
sbb
ja
sarb
and
ljmp
ret
add
fbld
or
ds
jmp
dec
ficoml
gs
nop
push
jb
or
out
push
test
mov
popf
jnp
push
faddl
dec
push
push
jp
add
cs
stc
into
mov
faddl
popf
sbb
xor
mov
cmp
jae
adc
and
pop
adc
jecxz
fsubrs
inc
call
rclb
adc
and
xchg
sbb
lret
ja
movsb
loop
pop
xchg
inc
pop
jecxz
xchg
inc
imul
mov
sub
ja
jo
pop
rorl
xchg
adcb
push
popf
out
adc
outsb
lret
inc
cmp
les
out
cmpsl
cmp
mov
dec
outsb
ret
sbbl
out
jae
ret
mov
data16
fbld
fwait
movsb
mov
add
or
lcall
xchg
cli
mov
icebp
mov
repnz
adc
xchg
sub
andb
dec
sub
into
and
outsl
or
or
and
jo
test
stos
bound
dec
mov
iret
bt
inc
fwait
arpl
jge
xchg
sub
scas
xor
pop
daa
dec
mov
flds
out
push
dec
cmp
mov
add
adc
sub
sub
xchg
loop
mov
into
jle
mov
sbb
jmp
hlt
push
lods
insl
add
or
push
inc
pop
addps
push
jno
in
or
test
jo
out
leave
dec
jbe
add
dec
aas
aam
mov
jmp
xchg
dec
pop
mov
daa
or
dec
push
and
inc
into
lret
inc
cmpsb
or
fmull
mov
or
jb
test
sti
clc
les
xor
push
sub
add
lods
out
jae
enter
add
and
fdivs
fld
push
mov
inc
or
jbe
or
push
jae
jg
jge
out
xor
cmpsl
movsb
mov
adc
adc
push
push
cmp
or
or
jnp
xchg
dec
xlat
insl
xchg
into
in
add
inc
je
mov
pop
lods
sbb
js
push
inc
fnstcw
sbb
cmp
push
dec
dec
cmc
dec
jne
test
mov
and
call
stos
fnsave
xor
adc
iret
in
pusha
mov
mov
imul
movsb
inc
and
sub
fcompl
xchg
insl
inc
jp
cli
mov
mov
hlt
pop
pop
pop
loop
dec
mov
enter
fs
mov
xor
and
imul
sbb
push
pop
cmp
push
ret
js
testl
ret
jp
sarb
and
aaa
shll
jp
adcb
mov
testb
and
add
inc
aaa
add
add
xchg
cmc
mov
xchg
mov
pop
pop
popa
cmp
xor
aas
stc
test
push
add
jle
addl
mov
clc
ret
mov
sti
xchg
fstps
sbb
lahf
xchg
mov
mov
pushf
icebp
xor
pop
enter
jp
outsl
add
pop
cmpb
jl
popa
ret
or
js
repnz
pusha
mov
jb
leave
clc
push
notb
xor
cmp
out
lret
test
add
cld
popf
cmpsb
mov
scas
dec
add
fsubrs
mov
push
dec
or
inc
call
ljmp
push
test
xchg
pop
xor
cmp
add
popf
xchg
rclb
cmp
aas
cmc
xor
cmpsb
mov
fisttpl
inc
push
cwtl
lea
add
mov
pop
rclb
cmp
aas
out
cmp
mov
pusha
xchg
outsl
popf
xor
movsb
lcall
outsb
subb
jnp
or
adc
stos
std
or
dec
mov
mov
and
pushf
mov
cs
push
push
jno,pn
js
mov
inc
dec
pop
sbb
mov
sbb
xchg
fadds
dec
sahf
outsl
xchg
popf
or
xor
jle
mov
in
jo
lahf
mov
xchg
and
adc
in
or
fiadds
clc
daa
adc
insb
sub
adc
bound
ss
sub
cmp
call
dec
mov
icebp
jns
adc
mov
adc
pusha
jge
neg
push
loopne
adc
pop
sbb
jg
repz
inc
hlt
addb
addb
mov
cmp
push
push
movsl
repz
xchg
push
jecxz
dec
xor
lahf
sahf
inc
popa
sbb
xchg
adc
pop
jecxz
stc
cwtl
and
sbb
mov
mov
inc
jb
shlb
mov
adc
daa
push
iret
xchg
sbb
push
push
mov
sbb
inc
inc
xchg
dec
subb
ds
iret
and
cmp
sbb
shl
inc
xchg
mov
sarb
stc
inc
push
jns
les
mov
pop
cs
cmp
call
pop
sbb
clc
mov
fmull
mov
mov
js
adc
sbb
sahf
jb
sbb
inc
je
xor
mov
sahf
popf
sub
stos
flds
fstps
fcompl
repz
or
test
jno
rorb
cmp
jns
pop
adc
dec
adc
xchg
ret
mov
xchg
xchg
arpl
mov
or
or
sub
mov
out
icebp
es
pusha
add
fcom
out
mov
popa
cmp
jle
data16
and
pop
jae
dec
dec
dec
jne
dec
and
outsb
dec
push
cmp
jo
mov
add
pop
inc
test
adc
mov
loopne
cmp
lahf
push
insb
xchg
fdiv
and
mov
cli
loopne
xchg
lahf
test
xchg
and
pop
xchg
popf
add
ljmp
hlt
jo
bound
push
xor
push
jp
les
cmc
scas
xchg
cmp
fildl
sarl
dec
hlt
adc
cli
call
dec
push
xor
sahf
inc
loopne
sarb
cmp
jne
out
shll
mov
fcompl
sub
pop
mov
orl
fwait
mov
shlb
aad
dec
adc
ds
inc
loopne
loope,pt
cs
clc
cmp
xchg
je
iret
push
stos
ljmp
or
mov
lods
pop
lods
call
fstpt
dec
dec
call
cwtl
jnp
adc
or
cmp
pop
or
sub
push
clc
mov
push
or
and
jle
mov
mov
add
pushf
les
add
arpl
addr16
cld
sub
cmp
repnz
idiv
out
inc
push
shl
test
stc
adc
ljmp
clc
les
mov
gs
lods
dec
push
jecxz
dec
test
das
pop
jae
push
dec
xchg
in
cmp
or
adc
aas
idivl
enterw
xor
sarl
mov
imulb
mov
sbb
pop
iret
mov
jp
out
test
iret
dec
jo
sbb
loope
cmpsb
je
add
cmp
adc
xor
mov
in
sub
sub
sbb
fwait
lds
into
shrl
lret
rol
lods
xchg
sbb
aas
inc
cmp
ret
jp
xchg
push
mov
lahf
push
lods
mov
call
imul
cwtl
mov
sbb
ja
fsubr
fs
bound
and
pop
push
daa
mov
jo
gs
cmp
loop
jno
aad
cmp
and
das
test
pushf
xor
and
pop
pusha
movsb
popl
enter
xchg
imul
or
dec
jl
into
jl
xor
ljmp
mov
and
cs
dec
sbb
rcll
adc
and
loop
inc
mov
fsubr
sbb
xchg
add
jmp
and
jnp
push
adc
scas
and
cltd
add
loop
popa
xor
mov
cmpsb
sub
shlb
cli
int3
push
push
pop
lret
arpl
mov
lret
adc
pusha
mov
psrad
adc
cmpl
adc
mov
stos
int
push
scas
int3
vmwrite
maskmovq
in
and
push
fs
roll
insb
add
iret
pop
jnp
dec
inc
pop
jbe
repnz
inc
sub
inc
add
xchg
out
in
sub
dec
enter
test
fs
add
lahf
ss
jp
mov
daa
test
sub
aam
mov
mov
xorl
mov
dec
das
xchg
inc
inc
jle
lret
jno
and
sbb
or
push
push
mov
ljmp
add
fsts
mov
ret
push
dec
mov
push
mov
mov
shl
stos
adc
sub
std
mov
inc
fdivrp
jb
dec
daa
or
or
fldcw
clc
lock
mov
xor
jo
outsl
or
js
push
test
rcr
push
jns
daa
les
pusha
pop
les
scas
mov
adc
inc
fisubs
vphaddbd
ss
mov
mov
cwtl
ret
addl
out
into
mov
sub
and
shrb
mov
pop
test
xlat
pusha
outsb
icebp
pop
jae
jo
scas
mov
or
outsb
adc
mov
or
popa
cli
pop
sbb
mov
lods
cmp
inc
and
pop
mov
or
or
rorl
mov
adc
add
xchg
insb
arpl
mov
inc
dec
dec
sbb
pop
xchg
xlat
rolb
jns
jge
mov
sub
cwtl
inc
inc
por
mov
push
or
sbb
mov
xor
mov
dec
fldl
xlat
test
and
in
pop
mov
xchg
mov
mov
mov
outsb
add
sbb
mov
add
enter
pop
inc
addr16
rolb
int
sub
push
hlt
sbb
sbb
repnz
pop
sti
cmpsb
int3
into
xor
dec
sub
test
bound
jae
and
pop
aam
stos
clc
mov
mov
or
push
int
in
or
out
shl
movsl
lahf
gs
das
sbbl
jg
mov
xchg
pcmpeqd
das
sbb
pop
dec
jae
and
mov
fs
pop
or
rolb
inc
pop
mov
inc
push
clc
rolb
fstps
xchg
mov
mov
dec
or
mov
flds
lahf
ja
outsb
adc
sbb
enter
fiaddl
add
fs
mov
xchg
insb
out
jo
lods
mov
sub
lods
arpl
inc
dec
aam
fidivl
stos
xchg
sub
adc
sbb
and
out
imul
adcl
sti
and
push
hlt
dec
andl
scas
stos
sub
mov
adc
fmuls
lds
lahf
int3
or
popf
xor
cld
jp
shlb
mov
cmp
ss
mov
or
lcall
pop
rcrb
push
sbb
mov
mov
and
pop
or
icebp
or
cwtl
jmp
pop
or
jp
pusha
pop
lcall
frstor
cmp
cmp
cmpsb
out
xchg
dec
cmpsl
lret
test
jo
add
mov
jns
jns
jle
enter
into
fcomip
pushf
outsl
sti
rcll
and
les
hlt
outsl
aaa
insb
rcrl
sub
je
or
add
repz
fwait
aad
add
xchg
rorl
dec
pop
fisttpll
xchg
cs
sahf
fists
mov
test
int
fst
mov
dec
adc
pop
mov
roll
and
or
lds
nop
loope
dec
mov
ret
dec
out
and
out
loop
cwtl
pop
and
lods
pop
pop
mov
lahf
pop
ds
inc
jmp
enter
in
bound
iret
adc
cmc
pop
into
adc
add
cmp
fistl
cmp
popf
into
xorb
out
xor
cmp
std
xor
mov
adc
jbe
or
mov
mov
xor
jne
xchg
push
add
cmp
addb
sbb
push
jno
push
sbbl
and
inc
mov
jl
sub
mov
pop
xor
adc
int3
popa
push
xor
sti
inc
inc
cs
lret
movsl
ds
mov
pop
pop
nop
or
fisubrs
sbb
mov
xchg
jno
icebp
je
cli
shll
add
das
add
and
ret
inc
ja
lock
mov
pusha
roll
push
inc
pop
jbe
or
enter
cmp
sbb
and
jbe
and
out
test
mov
add
inc
imul
xchg
and
pop
rorl
nop
push
xchg
insb
push
fisubrs
xchg
sub
ja
mov
xchg
sahf
xor
ds
fmull
mov
mov
dec
pop
loope
fildll
inc
push
xchg
adc
sub
push
insl
cmp
loope
or
stos
repnz
add
shl
dec
adc
aam
add
subb
iret
inc
fwait
movsl
or
xor
add
or
sbb
test
inc
lods
inc
call
arpl
fcmovu
shrl
ret
cmp
xlat
jo
cmp
test
cmp
mov
push
call
insl
pop
sahf
and
xchg
aas
rclb
in
mov
enter
iret
mov
mov
pop
xor
lret
pop
loope
sbb
pop
or
daa
scas
jns
xchg
jae
lea
jo
fists
xlat
icebp
scas
and
jmp
fsubl
and
sbb
icebp
in
sub
ljmp
scas
lods
aam
imul
mov
mov
cwtl
mov
adc
add
push
aad
cs
incb
and
stos
test
cs
sti
fnop
xorl
ja
push
ds
cmp
add
test
dec
mov
sahf
cmp
outsl
mov
mov
pop
or
sub
aam
test
mov
mov
call
shlb
lds
fld
aam
xchg
rol
sbb
mov
xchg
stos
mov
jp
clc
or
dec
faddl
mov
loopne
lods
and
push
stc
mov
dec
dec
inc
jg
xchg
xor
push
addr16
push
xchg
ljmp
stos
push
pop
rcrb
test
dec
xchg
dec
push
cwtl
call
add
mov
dec
flds
pushf
inc
add
add
aad
addr16
and
fimuls
nop
cli
inc
cmp
add
movsl
ja
inc
cmp
mov
mov
test
and
xor
push
sahf
jne
loop
ret
fs
popa
adc
inc
xchg
fnstenv
out
inc
mov
push
imul
loope
std
jnp
pop
and
fisttpl
andl
or
cvtdq2ps
nop
push
pop
inc
mov
push
xor
adc
or
inc
dec
dec
pop
loopne
mov
lods
dec
pop
mov
decb
lock
int3
or
xor
lahf
test
mov
add
jge
mov
mov
repnz
add
sbb
adc
and
repz
pusha
aam
sti
xchg
dec
push
adc
push
mov
mov
pop
push
jne
push
scas
pop
add
or
mov
movsl
test
and
push
les
aaa
ficoml
or
and
in
in
inc
scas
or
lahf
mov
std
mov
push
adc
jl
scas
pop
jne
add
pop
pop
movsl
es
imul
iret
xor
jbe
les
and
inc
pusha
dec
mov
loope
xor
cmpb
bswap
mov
mov
mov
mov
sub
push
cld
cwtl
mov
loopne
inc
xor
inc
std
push
arpl
sbb
dec
and
nop
out
mov
xor
aad
in
pop
pop
outsb
shrl
jl
jo
scas
xchg
notl
and
add
add
shll
mov
pop
pop
cmp
out
sub
cs
inc
ret
add
imul
or
add
dec
sbb
or
jl
aad
addr16
ret
push
push
adcl
popf
inc
jns
insb
inc
subl
enter
repz
dec
sbb
mov
mov
fbstp
mov
mov
mov
or
adc
or
jo
dec
rcrb
mov
cmp
shlb
xchg
repz
pushf
inc
daa
scas
and
sbb
dec
sub
push
clc
add
lret
push
push
fs
aaa
add
adc
aad
fwait
popf
aas
imul
fimull
repnz
push
or
fbstp
test
xchg
jl
adc
mov
push
cld
ds
push
inc
push
inc
sbb
or
jns
cmpsl
fwait
jne
push
mov
fistpl
mov
mov
sahf
mov
add
and
xor
movl
mov
test
xchg
and
in
pop
aam
loope
cli
mov
mov
dec
adc
mov
test
pusha
add
pop
hlt
cmc
cmc
imul
ficoml
je
push
clc
inc
add
loope
push
jecxz
add
and
cmp
test
xchg
push
xchg
inc
mov
mov
enter
dec
or
sbb
pop
rolb
inc
les
repz
cs
dec
xor
cmpl
clc
mov
add
xchg
push
shl
pop
test
icebp
fcmovnb
repnz
push
adc
aaa
jo
xor
cvtdq2ps
push
shlb
sbb
jl
inc
mov
add
popf
pop
mov
mov
stos
pop
gs
add
and
jg
dec
mov
mov
cli
leave
outsb
cmp
cwtl
mov
mov
mov
and
inc
aas
dec
arpl
adc
pop
sbb
xchg
icebp
mov
inc
or
add
outsb
pop
push
jg
pop
inc
je
cmp
inc
lods
fnsave
xchg
ret
outsb
sarl
aaa
xchg
shll
and
dec
mov
mov
stos
jecxz
fiadds
add
loope
xor
push
mov
aam
pop
cmp
push
mov
stos
dec
jns
ljmp
iret
test
mov
fisttps
adc
inc
push
and
pop
mov
mov
test
popf
push
insb
cmp
ja
adc
jns
push
sub
pop
jno
sub
xchg
lods
sahf
or
mov
push
pop
jbe
scas
mov
fcomps
jmp
ret
and
add
inc
mov
negl
xchg
xchg
in
mulps
pusha
jno
cmp
add
mov
aas
test
push
lretw
and
in
lock
mov
rolb
movsl
cmpsb
aam
imul
lock
loope
sbb
sbb
repnz
arpl
add
testb
or
cmp
loop
sahf
push
xchg
int3
xor
inc
andl
cmpsl
or
push
in
add
in
fidivs
cmp
sbb
adc
xor
stos
xchg
clc
test
or
mov
mov
adc
fnstenv
add
fwait
pushf
orl
sahf
sarl
mov
mov
loope
and
nop
xchg
jb
xchg
movsl
out
pop
and
xor
mov
sub
js
pop
and
nop
adc
stos
rcrl
jne
nop
shl
ds
imul
loopne
sbb
fs
and
dec
add
sbb
mov
xor
push
or
sti
push
xlat
or
lahf
shrl
iret
addb
lods
mov
add
xlat
pop
inc
push
jbe
in
and
push
test
adc
ds
fcoml
iret
ret
add
or
sar
xchg
ret
inc
inc
fdivr
sbbb
mov
cmp
mov
cmp
out
add
add
or
adc
or
adc
mov
and
xchg
je
mov
cmpl
lock
add
jge
or
aas
arpl
push
dec
push
ss
mov
in
es
xchg
mov
out
cmp
mov
push
fcompl
lret
xor
cmpsl
mov
andb
outsl
mov
mov
xorb
fisttps
jnp
push
mov
test
fwait
out
cmp
fists
test
jge
and
jae
adcb
push
out
sbb
xchg
ret
leave
or
fidivrs
nop
mov
repz
ljmp
push
lods
in
das
mov
pop
add
adc
and
or
adc
xchg
cmpsb
cmp
jne
bnd
popl
enter
mov
ss
dec
subb
jnp
push
xor
sub
jle
in
mov
mov
shl
int
into
and
xor
pusha
mov
cmp
fdivrl
sub
add
lds
mov
or
enter
mov
in
jge
or
fidivs
mov
call
lret
mov
addr16
fwait
jecxz
loopne
divb
lods
addb
stos
dec
lret
xor
sbb
je
iret
or
mov
add
push
push
pop
xchg
xor
jns
xchg
aam
jno
aam
sbb
xchg
xchg
xor
mov
shlb
jno
add
and
sub
sub
xchg
cmp
mov
rorl
xchg
fs
packsswb
inc
and
push
sub
and
xchg
out
dec
subb
mov
inc
mov
les
shll
movsl
dec
shrl
xchg
shl
xor
or
sbb
xor
mov
loopne
xor
mov
or
or
mov
scas
test
dec
mov
jne
mov
in
sahf
je
daa
mov
test
lods
lcall
das
mov
cmp
cld
pop
pop
add
testb
xchg
and
sbb
and
cmp
dec
add
lahf
gs
jno
pop
outsl
test
lds
fbstp
adc
ja
lea
xor
sbb
repz
jmp
enter
cld
xchg
hlt
inc
aaa
stc
mov
mov
pop
inc
and
push
daa
xchg
jl
push
int3
test
cmpsl
cmp
mov
sbb
sub
xchg
lcall
add
in
addr16
sti
cltd
test
pop
insl
lcall
or
stc
dec
sbb
pop
popf
mov
sbb
jge
jno
cmp
sahf
addb
dec
aas
pop
pusha
test
adc
imul
mov
mov
pop
pop
notb
add
sbb
and
mov
jae
mov
jnp
and
out
add
or
mov
mov
sub
mov
test
cmp
mov
out
das
sbb
mov
lods
and
jle
aam
adc
orb
pop
cld
sub
add
test
xor
mov
dec
arpl
and
cli
data16
test
push
loop
data16
jmp
iret
or
xchg
bound
xchg
dec
es
xor
cmp
daa
jecxz
add
jecxz
inc
push
arpl
js
cmp
pop
rcrl
outsb
ds
inc
popf
jo
cmp
dec
sbb
daa
mov
outsb
ret
loope
dec
jl
xchg
std
insl
mov
ljmp
adc
and
inc
or
loope
fcoms
mov
loope
jnp
jns
xchg
adc
pop
jno
jle
lock
jl
adc
popf
mov
sbb
lods
inc
lds
pop
lcall
adc
fs
add
lea
mov
adc
xchg
jecxz
mov
cmp
arpl
mov
sarl
cmp
push
in
es
clc
loope
lret
xlat
jae
fcomp
fmull
loopne
test
repnz
rcl
cmp
js
call
jl
xchg
and
sub
mov
and
add
push
testl
popw
mov
and
outsl
pop
bound
push
mov
sub
pushf
fldenv
add
sub
and
stos
aaa
in
outsb
xchg
xchg
pushf
dec
dec
pushf
pop
inc
js
dec
sbb
or
and
movb
pop
and
pop
and
xor
les
jns
pop
fisubrs
xchg
mov
aas
sub
loope
or
sub
in
call
pop
add
call
rol
lock
sub
fmul
cmp
dec
jae
add
sub
mov
add
cmp
mov
or
sahf
movsl
lods
cld
add
cld
adc
data16
sbb
jns
stos
stos
adc
cmc
inc
mov
inc
xchg
or
cmp
mov
sub
add
xor
sub
es
loop
and
mov
mov
in
cli
lea
xchg
in
jle
icebp
pop
adc
out
mov
sbb
aaa
out
dec
sbb
ds
xor
add
push
repz
insl
in
test
std
and
js
fisttps
add
jne
xchg
outsb
or
frstor
fnstsw
iret
or
push
sbb
mov
add
notb
adc
lods
xor
push
pushf
jmp
mov
dec
add
pop
std
insb
pop
ljmpw
sub
inc
pop
lea
rclb
cmp
fmuls
mov
aaa
and
cmp
xchg
fcoml
shlb
or
les
add
xor
cmp
sbb
stc
adc
and
pop
adc
movsb
jbe
xchg
aad
leave
pop
mull
test
aad
cltd
push
push
dec
adc
sub
das
jns
add
lret
mov
jp
jl
xchg
pop
dec
cmp
cwtl
xor
stos
adc
jp
dec
jp
mov
sti
je
adc
sbb
xchg
orb
sahf
mov
gs
or
ds
adc
xlat
popa
mov
stc
test
shll
lods
test
aam
pop
shrl
bound
inc
insb
mov
mov
push
mov
and
add
mov
inc
jne
shrl
and
and
mov
push
insb
lret
lcall
pop
xor
mov
sbb
xchg
int3
mov
popf
mov
and
or
andl
xor
repz
and
cmp
cmp
lods
dec
pop
out
inc
inc
cmc
sbb
mov
and
clc
lret
add
fabs
jecxz
gs
cltd
push
addb
in
cmp
add
movsb
mov
imul
xor
mov
cmp
jg
pusha
les
jns
xchg
cmpl
add
mov
mov
notb
daa
adc
sub
inc
mov
mov
mov
pop
mov
pop
js
push
lcall
sbb
enter
and
jae
daa
inc
pop
fsubl
xchg
add
mov
pop
ljmp
pusha
cmp
pusha
in
inc
inc
jno
jmp
insb
mov
inc
xor
or
or
inc
pop
xor
mov
push
push
jnp
mov
xchg
and
dec
fisttpl
je
sbb
clc
stos
out
jl
mov
mov
sbb
mov
dec
in
fisttpll
sbb
sbb
aaa
jno
pop
ds
pop
stc
xor
daa
add
in
aas
pop
or
hlt
shlb
cmp
in
test
rcrb
mov
pop
movsb
and
or
test
lret
pop
pusha
mov
rol
xor
iret
insb
sub
mov
jne
sub
lcall
int3
imull
and
enter
xor
mov
pop
sbb
push
je
dec
jb
mov
or
xorb
jae
mov
int3
leave
add
and
or
pop
testb
ret
aaa
ret
test
inc
inc
daa
lcall
cmc
test
adc
xchg
std
xor
adc
movsb
mov
aas
sbb
imul
ja
xchg
sub
push
cltd
pop
aam
cmp
mov
xor
lea
ret
pop
push
inc
dec
sbb
rolb
fldenv
jne
xor
repnz
add
movsl
mov
mov
in
mov
rol
inc
popf
add
pusha
push
cmc
or
or
mulb
push
fwait
pop
or
in
pop
sbb
gs
cmp
push
loopne
xchg
xor
mov
out
test
cltd
enter
jp
rolb
std
subb
pop
sbb
push
shl
cs
jmp
pushf
mov
dec
adc
sub
enter
imul
inc
fadds
shlb
push
push
mov
add
sbb
pop
enter
mov
test
rolb
cld
adc
add
xchg
cwtl
sub
iret
ss
loope
adc
in
pop
test
or
iret
sbb
aas
xchg
and
ljmp
xchg
cmp
cltd
xchg
imul
sub
mov
mov
fildll
or
insl
cmp
arpl
sahf
rcr
sbb
xchg
testl
push
cld
sbb
mov
orb
jmp
shl
lock
push
dec
lcall
sbbl
inc
lcall
fwait
or
in
add
adc
das
fisttpll
or
stc
insl
mov
xor
jno
out
sbb
addr16
lds
dec
adc
add
xchg
call
cmc
pop
adc
pop
adc
rorb
aas
adc
push
pop
cli
shll
add
xchg
and
addr16
inc
lods
jne
lcall
lret
jg
scas
xchg
sarb
outsl
sub
jg
push
andl
adc
lea
push
in
lahf
pushf
rcl
push
outsl
loop
or
sub
lahf
out
lret
mov
aad
adc
cltd
sub
loopne
das
and
ss
inc
ds
pop
adc
push
add
cmp
xchg
je
hlt
and
adc
psubsw
push
xor
or
insw
and
sti
push
xchg
jg
fstl
arpl
sbb
xchg
js
lds
pop
lea
jle
add
mov
pop
hlt
les
repnz
mov
aad
or
cld
outsl
xor
xchg
imul
add
sub
mov
mov
call
imul
gs
mov
in
xor
sub
insb
mov
out
push
fildll
inc
fisttps
ljmp
leave
sbb
lahf
icebp
adc
or
hlt
add
lds
repz
dec
sbbl
mov
cmp
leave
fiaddl
pop
test
jbe
jnp
addr16
call
inc
or
adc
add
xchg
jge
cmc
ja
mov
sbb
insb
loop
push
shr
pop
pop
and
lcall
or
xchg
ja
mov
out
popa
bound
push
inc
mov
jg
adc
cli
icebp
or
jge
xabort
push
inc
stc
arpl
mov
dec
or
cmp
and
test
or
pop
pop
push
add
push
mov
and
jmp
dec
mov
xchg
movsb
xchg
push
shlb
inc
shlb
mov
jle
xor
and
rclb
jb
clc
or
adc
xchg
inc
inc
test
cmp
ror
cmp
in
mov
jnp
jp
in
cmc
push
in
lock
and
xchg
jmp
ss
inc
adc
pop
aam
into
and
push
fcoms
pop
inc
sarb
adc
sbb
aaa
cmpsb
xchg
cmp
mov
fiadds
jnp
lcall
outsl
pop
adc
inc
lret
sub
hlt
shll
mov
cld
cmp
daa
dec
shll
xor
adc
ror
repz
dec
jmp
xchg
sbb
test
xchg
icebp
pusha
rcl
lods
loope
aam
cmp
cmp
xchg
nop
out
add
scas
jno
adc
lret
xchg
mov
shlb
addl
movsb
cwtl
adc
mov
loop
xlat
stos
jnp
clc
pop
iret
lcall
lds
push
add
sbb
fucomip
xlat
sbb
fldl
add
push
pop
imul
add
ds
stos
push
adc
add
imul
inc
lcall
mov
or
xchg
aaa
mov
loope
lret
push
mov
mov
xor
lcall
dec
cmpsl
stc
adc
pop
cmp
subl
scas
mov
mov
loopne
ret
or
shrl
push
ljmp
push
test
sub
mov
push
mov
mov
daa
in
addl
sahf
push
aaa
xchg
sarb
jp
rcll
inc
int
push
ret
arpl
add
and
js
iret
pop
jo
icebp
loop
ret
hlt
test
lods
aam
bound
pop
loopne
pop
dec
iret
adc
adc
cmp
or
loop
xchg
loop
xchg
rcl
fidivl
aaa
jb
and
mov
aam
bound
outsb
mov
filds
insl
lds
imul
in
lods
inc
sbb
daa
loope
in
gs
popf
xor
mov
fs
jo
loope
sbb
mov
mov
out
popa
inc
test
aas
jp
cld
cmp
rcll
inc
int
jl
mov
dec
fdivl
dec
jl
inc
in
push
push
mov
or
test
push
inc
jle
enter
push
cmp
loope
pop
cmp
sub
and
es
in
adc
ds
inc
ljmp
cltd
outsl
cmp
stc
aaa
fstl
dec
inc
and
enter
push
shrl
dec
xor
jne
lock
pop
pop
inc
dec
test
jle
xchg
mov
cmpsl
inc
pusha
xor
fst
in
test
pusha
and
sbb
sbb
jnp
addr16
out
xchg
inc
jl
inc
out
pushf
loope
xor
mov
push
push
jno
push
adc
or
xchg
movsl
repz
add
jae
add
call
ret
mov
adc
sbb
bound
pop
adc
outsl
insb
leave
sbb
jno
mov
out
jecxz
mov
pop
xchg
enter
mov
testl
or
mov
or
add
sub
xchg
mov
and
adc
mov
push
mov
pop
and
or
xchg
test
xor
mov
std
sbb
xchg
mov
pop
adc
loopne
test
loope
xor
test
cld
push
rcll
cmp
out
insl
out
addb
cld
clc
mov
outsb
xchg
repnz
xchg
sbb
fldl
jae
insb
inc
js
and
int
mov
je
or
mov
mov
inc
fsubl
das
scas
mulb
pop
pop
lods
push
jb
xchg
dec
ljmp
jl
mov
mov
or
inc
push
shlb
or
or
dec
lcall
push
std
ja
xor
add
push
push
xor
sub
jg
fisttps
pop
fidivrs
mov
jge
xchg
jl
push
inc
push
sbb
jg
push
add
dec
lock
pop
sti
dec
and
xchg
sbb
pop
pushf
adcl
mov
xlat
xor
adc
fwait
sbb
aam
lds
and
aas
cs
mov
out
or
adc
xor
mov
inc
dec
mov
cltd
in
testb
jbe
sub
call
inc
pop
dec
add
sbb
and
and
fsubl
aad
popa
nop
cmp
fldl2e
add
aad
test
ljmp
inc
lret
insl
imul
inc
adc
insb
daa
insb
add
jne
cmp
cs
loope
fidivrs
inc
addr16
mov
out
in
sub
scas
das
cmp
and
xor
rcrl
stc
out
shrl
sub
sub
pop
lock
xchg
push
das
or
adc
out
repz
repnz
outsb
dec
dec
in
in
sbb
jg
and
cs
push
inc
popf
cmp
xor
mov
pop
shl
test
fs
inc
bound
testb
aas
arpl
stos
scas
cmp
mov
cmpb
jge
nop
adc
inc
xor
in
jmp
mov
jae
daa
fwait
mov
pop
xchg
xor
add
sbb
xor
sbb
fsub
test
jmp
sbb
scas
inc
jne
mov
je
jae
subb
arpl
adc
or
xorb
cli
push
xchg
inc
iret
clc
mov
xchg
xchg
inc
clc
leave
mov
xchg
das
outsb
addr16
pop
xorl
mov
or
sbb
mov
xchg
jne
fcoml
and
fs
rcr
xor
jb
fcomi
test
cli
aaa
pop
cs
xchg
in
and
pusha
test
push
xchg
sub
cmpsl
pop
lcall
scas
jl
adc
ja
cmp
xorb
mov
or
fstps
sbb
mov
jmp
lahf
gs
ror
sub
sub
cli
xchg
push
inc
insl
adc
adc
loope
jb
cltd
xor
mov
inc
xchg
fs
pop
jp
sub
xlat
sarl
jnp
sbb
cs
dec
shlb
xchg
sbb
mov
inc
pop
cmp
mov
fcoml
popa
sbb
dec
or
nop
or
fldenv
jle
icebp
insb
test
push
pop
lcall
dec
inc
add
dec
imul
dec
int
lea
pop
sbb
add
ljmp
mov
arpl
andb
pop
mov
mov
mov
inc
jbe
dec
inc
push
sarb
add
pop
pop
pop
inc
outsl
inc
jbe
shll
jmp
je
mov
fldcw
rcl
sub
mov
gs
or
jp
js,pt
arpl
mov
push
pop
lods
pusha
repz
sub
in
shl
enter
in
stos
addb
mov
xchg
lret
push
in
xchg
imul
orl
outsb
std
push
adc
fsubr
leave
cmp
outsl
dec
lahf
in
or
push
loope
pusha
xor
ds
mov
fsubs
fists
adc
add
addb
sti
stc
rcl
pushf
cwtl
xorb
fwait
dec
rcl
mov
jbe
cmpsl
mov
sbb
inc
mov
xchg
xchg
pop
ss
push
mov
in
jl
aam
or
pop
stc
push
sub
ja
cmp
xor
in
pop
xchg
sahf
hlt
xor
cwtl
xor
shrl
aas
mov
push
add
and
mov
cmp
insl
xor
cld
das
push
pop
push
xchg
sbb
orl
dec
push
xchg
cli
and
sub
loope
cs
push
cmp
fidivrs
rclb
shlb
ljmp
psrlw
shl
and
push
push
or
dec
lcall
add
and
andl
or
add
repnz
push
dec
or
dec
add
and
sbb
icebp
push
stos
dec
stos
xor
xchg
pop
sub
mov
jb
sbb
mov
push
push
aas
adc
mov
inc
cs
sub
fiaddl
cmp
dec
cmpsl
sub
add
or
jp
negl
sub
fsubl
in
mov
cld
inc
ret
test
mov
sub
mov
nop
pop
sti
cmp
and
mov
xor
les
jp
or
test
sub
jecxz
xchg
into
outsb
mov
xor
lea
xchg
push
dec
fimull
mov
lea
outsb
jecxz
lea
je
cmp
sbb
pop
jge
pusha
icebp
jl
iret
popa
inc
test
pop
cmp
mov
rorl
xchg
lret
sti
nopl
ret
in
add
add
jge
push
mov
sub
ljmp
dec
pop
push
in
jb
rcll
leave
mov
xor
mov
cmp
xorb
fwait
or
sub
sbb
fs
push
push
pusha
inc
xor
sbb
rcll
movb
adc
aad
push
je
push
adc
sti
pop
and
stos
imul
mov
pop
adc
or
jle
adc
add
ss
in
loopne
add
sub
dec
jae
pop
xor
fs
shlb
orb
dec
jl
in
dec
xchg
call
mov
xor
outsb
mov
pushf
fcmovnb
pusha
inc
push
mov
int
js
ds
test
cltd
add
stc
xor
pop
setl
xor
out
push
je
pop
test
mov
and
pop
pop
out
mov
mov
xor
or
cli
sbb
adc
jno
fs
scas
jmp
cmpsb
mov
in
push
cmp
lock
icebp
push
test
lret
mov
lahf
cld
faddl
xor
pop
inc
or
daa
aad
mov
stos
fldt
hlt
adc
out
mov
jle
mov
es
aam
push
movsb
push
aas
jp
pop
push
lret
roll
sbb
sub
add
lahf
fwait
pop
push
xchg
sbb
push
dec
push
xchg
and
xor
ljmp
lahf
and
sbb
test
out
icebp
or
aaa
test
mov
ljmp
xor
xchg
adc
test
ss
inc
push
or
dec
jl
and
mov
icebp
sahf
push
push
xor
or
andl
stos
std
repz
xchg
mov
sbb
mov
loop
rcrl
push
out
xchg
or
loope
je
mov
xor
or
or
dec
das
aaa
or
adc
pop
jge
inc
faddl
dec
bound
pop
aas
call
shrl
nop
iret
mov
jne
mov
xchg
dec
mov
xlat
sbb
dec
pop
stos
sub
inc
cmpsl
scas
mov
data16
imul
cmp
lea
and
push
les
je
ret
sbb
shlb
jnp
xchg
js
cld
rcl
sbb
jmp
js
loopne
stc
and
add
in
bound
mov
test
insb
push
xlat
add
enter
pop
arpl
test
movsb
aas
addb
xor
int
shl
inc
dec
test
fwait
test
adc
inc
lds
leave
mov
mov
lcall
fs
into
call
bnd
arpl
inc
adc
sub
pushf
lods
pop
inc
out
insl
femms
add
or
mov
les
inc
pop
cli
repnz
test
cmp
cmc
aad
lret
adc
xor
xchg
ficompl
xchg
or
hlt
mov
leave
icebp
pop
push
rorb
jno
fs
bound
int3
dec
daa
adc
xor
clc
xor
or
popf
cmp
rorb
dec
mov
jb
stc
loop
je
jnp
test
cli
ja
pop
jge
jnp
mov
push
xor
in
sbb
push
nop
shrb
jo
or
repz
push
or
sahf
push
mov
outsb
test
cltd
ss
loope
std
pop
cmp
pushf
pop
sahf
inc
les
cld
lds
push
int
add
sbb
jno
jae
sbb
and
insl
pusha
sbb
add
push
shlb
nop
sbbl
out
cld
test
xor
lods
inc
addl
mov
xchg
push
aaa
enter
fcmovnb
popl
insb
pop
cmp
dec
add
push
dec
xorb
cs
xor
xchg
jnp
sub
push
mov
inc
and
cmp
dec
and
push
scas
pop
jb
test
inc
fnstenv
cmpsl
mov
cmc
sub
and
ja
sbb
add
inc
dec
mov
mov
push
fs
mov
into
pop
inc
sbb
arpl
dec
sub
mov
pop
js
dec
mov
call
xlat
inc
jl
sbb
cmpb
clc
pop
insb
ror
rol
push
test
dec
sub
inc
jl
dec
mov
and
bound
sub
loope
cmp
popf
and
mov
daa
iret
cmpb
nop
add
inc
lods
loopne
nop
adc
inc
pop
test
aad
mov
add
xchg
mov
xor
mov
repnz
repz
lods
inc
stc
popa
mov
popf
addb
ljmp
push
insl
xchg
enter
adc
mov
jmp
add
sbb
mov
push
mov
rclb
ljmp
adc
sti
xlat
mov
lods
inc
jl
fcomp
movsl
icebp
push
rol
scas
xchg
mov
sti
pop
or
inc
aas
roll
mov
or
fs
mov
in
mov
add
mov
and
push
adc
in
scas
aad
inc
cmp
pop
fmull
xor
xchg
sbb
sti
notb
pusha
mov
mov
push
addr16
lock
sahf
mov
data16
adc
clc
dec
ljmp
addr16
stos
and
mov
dec
fsub
lcall
mov
or
mov
sbb
test
daa
mov
and
inc
scas
subb
cmp
and
leave
ds
or
or
mov
inc
aas
adc
pushf
push
dec
adc
xchg
adc
fstl
lods
xor
push
cmp
mov
out
mov
xchg
xor
or
mov
je
lret
dec
clc
loopne
fcompl
mov
rolb
or
inc
mov
mov
das
sahf
imul
sbb
pop
sbb
fcmovb
testl
lret
movsl
leave
lea
xchg
sub
test
sbb
adc
pop
adc
mov
inc
iret
sbb
int
mov
sbb
lret
rclb
adc
push
cmp
mov
ret
sti
dec
cs
mov
xor
inc
sar
adc
jl
add
inc
or
or
lock
cmp
cld
sub
cmp
in
imul
movsb
sub
add
popf
je
loop
cmp
pop
jae
push
inc
add
loopne
fisubrl
addr16
nop
dec
sub
sbb
push
scas
mov
divb
js
inc
dec
shrb
clc
pop
sub
mov
cmp
outsl
or
push
popa
lods
jle
int
mov
pusha
mov
or
push
xchg
aas
es
dec
movsl
adc
add
pop
fldcw
adc
iret
cmc
insb
mov
mov
sub
or
mov
inc
add
mov
loope
pusha
testl
enter
imul
lret
mov
jno
push
pushf
add
mov
sbb
pop
dec
xor
lea
iret
cwtl
nop
pop
adc
add
add
bndldx
rolb
xor
dec
or
sub
sbb
add
and
mov
push
xchg
add
jmp
dec
xchg
sub
inc
add
pop
cmp
or
jecxz
in
aas
fs
adc
addb
push
xchg
inc
pop
sbb
repnz
out
inc
ficoms
or
lock
scas
adc
mov
rol
bound
fcomps
adc
sbb
mov
test
cltd
enter
adcb
push
pop
xchg
or
inc
xchg
out
adc
xchg
and
add
push
mov
inc
ljmp
test
add
aaa
jbe
es
movsb
aaa
roll
pusha
jbe
mov
push
pop
idiv
and
xchg
add
cmp
jl
xor
and
hlt
sub
popf
pop
mov
xor
mov
dec
adc
shrb
and
dec
or
or
push
in
shll
xchg
sub
aaa
jbe
mov
inc
inc
js
daa
inc
cmp
mov
sub
sbb
xchg
dec
lods
xchg
xor
cmp
es
add
and
pop
xor
movsb
je
cmp
ret
mov
js
lret
mov
dec
add
push
adc
cmc
sbb
push
es
sbb
dec
add
mov
dec
or
data16
adc
hlt
les
add
pop
dec
and
es
push
mov
add
ds
jo
cmp
mov
ss
loop
test
pusha
gs
dec
lea
lock
insb
sbb
ret
push
jg
xor
inc
jno
dec
adc
enter
jl
push
xchg
inc
insb
insb
xchg
jle
add
aam
cmpsb
repnz
sarb
add
shlb
aad
xor
repnz
nop
xor
lret
mov
and
xchg
mov
sub
rol
insl
movsb
fwait
pop
in
ret
in
xchg
dec
sub
mov
mov
jb
xor
add
lock
push
shlb
push
test
and
xor
sub
shll
xchg
inc
cmp
xor
inc
ds
bound
sbb
jno
rcrl
or
ret
rcrb
lea
mov
sbb
fisubl
out
pushf
mov
insl
xchg
mov
std
add
lahf
or
adc
jl
cmc
lds
and
xchg
mov
mov
daa
pusha
dec
shlb
xor
dec
and
mov
pop
shr
and
hlt
mov
dec
rcl
push
jp
mov
push
punpckhbw
mov
mov
int3
mov
pop
mov
adc
push
cmpsl
inc
add
fs
xor
or
testl
xchg
jl
cld
not
fwait
or
out
rcll
and
outsb
movsb
lock
lahf
jno
pop
pop
push
pop
cli
inc
push
cld
or
xchg
inc
jne
cmpsb
repnz
and
ret
movsb
pop
cmp
mov
test
mov
mov
dec
mov
leave
mov
xchg
adc
inc
mov
xor
mov
jge
lods
xchg
imul
xchg
jle
jp
xor
xchg
cwtl
mov
push
es
and
ret
or
clc
xorl
mulb
je
scas
lret
test
movsb
cmp
jle
mov
out
xchg
jb
leave
push
mov
push
mov
test
out
scas
push
pop
pop
lcall
xchg
pop
icebp
iret
adc
fnstcw
and
sub
ss
and
mov
inc
push
sub
jl
mov
cmp
leave
cmpsl
push
ret
mov
pop
cmc
pop
xchg
shll
js
cmp
pushf
add
cli
push
inc
sahf
and
adc
mov
stos
lret
iret
add
rolb
push
outsl
fiadds
mov
cli
in
test
add
inc
nop
dec
mov
addr16
mov
push
sub
adc
lahf
and
cmp
jle
xlat
mov
test
cwtl
popa
inc
shlb
lds
test
shll
sbb
add
mov
dec
outsl
xor
mov
sub
dec
add
int
stos
andb
mov
je
ja
pushf
adc
in
test
lock
push
or
dec
aas
test
mov
and
test
cli
mov
scas
add
push
mov
xor
inc
jmp
and
inc
mov
sbb
sbb
pusha
movsb
mov
xchg
jmp
pop
fstpl
cmp
and
sahf
add
sbbl
push
mulb
push
and
sub
jmp
sbb
sbb
aas
jle
sbb
les
mov
jl
icebp
inc
call
icebp
jecxz
push
or
xor
cs
in
rol
adc
pop
push
add
jge
sub
rorl
popa
lahf
nop
adc
pop
mov
pop
xchg
sub
jecxz
call
imul
adc
mov
pop
mov
jbe
adc
push
jo
into
and
scas
push
xor
xchg
lea
ljmp
cmp
insb
iret
addr16
aas
in
fildl
add
mov
int3
adc
mov
or
mov
xor
js
cmp
sbb
dec
push
jecxz
jecxz
loopne
inc
out
cmp
push
in
cltd
pushf
xlat
in
mov
lods
int3
or
mov
mull
dec
jb
enter
sub
adc
mov
sub
xchg
pop
outsb
jge
push
inc
cmp
pop
cli
xchg
stos
orb
ret
push
dec
dec
cmp
mov
adc
sbb
add
jb
insb
dec
mov
dec
xchg
andb
popf
ficoms
mov
sub
mov
imul
nop
scas
ljmp
inc
xor
cmp
mov
cmp
imulb
arpl
inc
xor
dec
add
dec
ss
scas
adc
ds
aaa
sub
dec
icebp
icebp
es
pushf
inc
mov
jmp
les
test
pop
push
inc
or
push
ret
cmpl
adc
sbb
test
add
or
leave
loop
jmp
push
ror
pop
xchg
cwtl
jl
push
leave
mov
inc
mov
mov
ljmp
push
testb
outsl
pushf
push
rcl
adc
add
mov
scas
dec
ds
adc
adc
fldenv
scas
dec
pusha
in
lods
xchg
rorl
subb
or
sarl
mov
pop
rcrl
cmp
mov
mov
add
add
loop
bound
out
popa
test
add
push
cmpsl
xchg
dec
sbb
inc
adc
pop
xchg
sub
pop
xor
insb
mov
mov
test
jae
add
adc
push
fmul
jno
mov
cmpsb
and
loopne
dec
das
adc
pusha
jle
shll
pop
lock
pop
cmp
lds
add
jne
fbstp
pusha
mov
pusha
rolb
adc
mov
int3
push
loopne
push
test
push
cmp
jne
clc
mov
push
mov
pop
std
push
and
cmp
out
mov
in
and
sbb
pop
push
das
mov
js
ret
or
adc
push
out
loopne
mov
and
inc
mov
dec
adc
dec
imul
xor
ds
xchg
mov
add
adc
int
push
enter
mov
bound
pushf
mov
add
lods
inc
stc
sahf
clc
js
fsubs
bound
push
mov
rol
jo
shl
cmp
inc
mov
pop
push
push
iret
ljmp
imul
aam
aaa
call
testb
adc
add
sbb
popa
xchg
adcl
orb
mov
je
jecxz
rorl
test
xor
sbb
mov
sbb
or
inc
loop
adcl
pop
lahf
mov
scas
pop
jb
clc
xchg
and
enter
xchg
insl
ret
lret
mov
aaa
and
sbb
lea
adc
jmp
ret
ss
add
pushf
movsb
popw
xor
pop
sbb
add
outsl
pop
xor
add
rcl
popa
punpckhbw
js
xor
insb
cmc
jae
cmpsb
js
popa
dec
ds
stos
loope
push
or
lods
add
sbb
ret
or
ror
adc
mov
or
adc
mov
pop
or
fsubrs
cmp
enter
add
lahf
inc
ss
pop
test
mov
mov
lahf
mov
sub
mov
outsl
adc
clc
ljmp
mov
mov
dec
call
mov
sub
aad
mov
dec
adc
or
or
insb
mov
sub
push
dec
mov
inc
test
cmp
dec
mov
push
lods
adc
inc
mov
jbe
pop
and
fstp
xor
pop
dec
fsts
mov
aam
inc
call
xchg
lret
shl
xlat
inc
add
pop
push
push
rolb
sbb
mov
add
cmp
dec
pop
xor
ljmp
pusha
or
push
mov
sub
lea
push
pushl
push
mov
push
lea
push
or
push
or
ret
pushl
insl
hlt
outsb
dec
xor
push
hlt
push
push
pusha
iret
outsb
push
and
mov
push
enter
cld
inc
call
sbb
fcomip
fbstp
cwtl
add
mov
call
mov
hlt
dec
mov
push
nop
out
or
push
pop
or
jmp
jae
inc
push
dec
sahf
outsl
sti
push
and
dec
in
or
in
lods
jns
ret
xor
imulb
inc
hlt
test
mov
cmpl
imul
pop
push
push
outsb
and
in
sti
push
sbb
addb
push
lcall
or
jo
xor
in
cmp
gs
mov
and
insb
pop
in
add
push
iret
leave
divl
lret
cli
add
in
and
add
jmp
or
clc
in
inc
clc
mov
add
and
xor
lods
xorl
jns
push
test
aaa
mov
push
adc
push
sbb
int3
xchg
pop
xor
idivl
mov
addr16
outsl
js
adc
lcall
pop
or
ja
xor
dec
out
mov
outsb
pop
push
push
fs
gs
mov
or
push
je
and
mov
or
push
jae
jb
insb
push
xchg
ss
or
pop
jns
ss
je
jbe
push
ja
xor
xor
push
call
fisubrl
in
push
sub
clc
push
push
add
in
add
or
sub
neg
dec
not
inc
dec
and
dec
inc
idiv
inc
push
push
push
fistpl
dec
xor
pop
sti
push
jns
mov
incl
aaa
shll
sti
add
and
inc
add
inc
not
inc
and
mov
not
dec
or
call
jmp
jnp
into
dec
adc
xor
xchg
hlt
test
out
std
xchg
pop
sti
jle
sbb
fisttpl
jge
inc
ljmp
ja
fiadds
lret
inc
mov
and
add
inc
fstp
ja
add
mov
dec
sbb
lock
push
or
push
lods
add
inc
jb
mov
in
sti
insl
push
shl
in
loopne
idiv
es
dec
scas
mov
add
popf
dec
mov
dec
add
rolb
or
sbb
dec
dec
imul
cmp
lods
mull
repnz
jl
pop
pop
aad
mov
fcomi
sub
dec
rcr
adc
mov
in
xor
jno
add
push
dec
cltd
inc
leave
dec
mov
or
fs
inc
mov
fstps
push
setno
and
fstp
pop
outsb
cmp
sbbl
jmp
sahf
xchg
inc
pop
scas
call
in
outsb
push
jnp
jp
loop
cmp
xchg
dec
and
add
scas
cmp
in
mov
jp
inc
add
pop
sbb
xchg
xlat
inc
divb
jg
or
out
shrb
clc
cmp
mov
inc
outsb
mov
cmp
mov
sbb
repnz
in
push
xchg
push
cmp
mov
cmp
pop
inc
mov
fwait
mov
call
pop
cmp
adc
sub
aad
pop
mov
pop
pusha
cmp
das
cmp
pop
pop
mov
and
mov
mov
inc
jmp
cmp
les
jnp
pop
dec
xor
cli
add
stos
pop
sti
add
loope
xchg
add
cmc
pushf
stc
push
sarb
nopl
push
push
mov
sub
lea
fnstenv
repnz
cmp
pop
nop
aas
call
push
adc
adc
jg
xchg
mov
cmp
or
mov
mov
adc
dec
dec
or
dec
pop
pop
inc
dec
mov
jnp
je
pop
sbb
xchg
pop
cmpsl
pop
stc
jmp
shll
js
or
idiv
or
sahf
inc
aad
pusha
scas
fsubrp
scas
pop
call
test
and
inc
mov
jmp
dec
imul
adcl
mov
icebp
inc
out
fisttpl
insb
mov
lock
pop
incl
scas
movsb
inc
test
aad
xor
dec
nop
in
mov
add
add
js
notb
loope
lret
sub
cmp
xchg
les
leave
mov
mov
sbb
and
ss
add
mov
leave
mov
jmp
ret
out
movsb
fiaddl
and
fsubrl
bound
dec
xchg
std
stos
fdivrs
jno
sbb
add
fcoms
testl
insb
flds
xor
jp
ud1
xchg
xchg
sbb
loop
sbb
je
pop
das
aad
daa
inc
int3
cmp
pop
nop
fldcw
push
pop
add
jnp
aam
mov
iret
cmp
mov
cli
rolb
test
lret
jb
lret
loope
pop
and
mov
loope
adc
outsl
cmp
mov
ficompl
cmc
in
xchg
pop
cld
in
out
sub
sub
and
mov
xlat
jmp
pop
sbb
mov
ds
fstpt
stc
repnz
xchg
jg
insb
xorl
xlat
and
les
adc
ja
mov
stos
cmp
mov
push
sti
fisubrl
mov
fcompl
call
or
aaa
jle
adc
jecxz
orl
mov
mov
fs
mov
inc
jne
fcmovnb
mov
test
pop
call
cld
mov
jnp
hlt
mov
push
sub
mov
inc
into
inc
xchg
lcall
pop
outsb
xchg
nop
and
outsl
movsl
cmpl
cmp
adcl
lea
or
enter
enter
inc
test
loop
adc
inc
and
ret
push
xchg
cmp
or
xchg
pop
cmp
jge
enter
pop
out
xchg
fstpl
mov
mov
jp
rcll
xchg
lds
repnz
outsl
daa
dec
jbe
cmp
lea
addb
fidivrl
loopne
pop
sahf
jle
push
push
mov
and
fnstenv
mov
jnp
loope
pop
jo
mov
inc
repz
nop
sar
push
push
sub
add
dec
cmpb
cltd
fdiv
paddsw
test
std
mov
fistpll
cmp
pop
jmp
xlat
scas
scas
fistpll
push
dec
pop
fisttpl
jno
mov
pop
cli
push
xor
lock
rclb
pop
mov
adc
cmp
outsl
repz
sbb
repz
pop
inc
inc
mov
xor
fs
call
fdivr
mov
movsb
push
aam
lcall
mov
lods
dec
lods
cmp
inc
inc
and
and
pop
test
and
jl
and
stc
add
fsts
movsb
repz
cmp
jge
inc
ret
cs
push
arpl
scas
dec
pop
dec
pop
push
pop
nop
jno
sbb
jge
sbb
pop
pop
test
inc
ficoms
test
call
sbb
call
cltd
lea
leave
push
sti
cs
or
fistps
orl
sub
or
out
dec
mov
or
test
add
and
js
pop
lea
jge
js
and
jnp
cmp
dec
pop
cmpsl
adcl
or
cmp
std
fnstsw
out
sbb
cmp
jbe
or
out
push
fs
and
sbb
out
and
cmp
mov
enter
lds
sbb
jle
inc
dec
push
in
sar
cmp
adc
adc
lea
lret
test
rorl
out
pop
mov
ss
and
or
testl
or
inc
mov
cmp
mov
out
push
out
add
nop
loope
insl
loop
je
cmp
mov
ret
ret
inc
inc
xor
punpckhwd
ja
movntps
imul
pop
and
cmc
cwtl
sbb
pop
cmp
lret
pop
fmull
mov
pop
mov
ret
call
or
push
insb
frstor
ss
xor
lock
stos
outsl
inc
inc
mov
add
inc
mov
and
das
cmp
pusha
sbb
call
cld
and
xor
outsb
mov
dec
cmp
cmc
ja
cmp
call
cwtl
dec
mov
gs
push
add
push
add
fs
sub
nop
aam
int3
cmp
and
adc
and
stc
mov
add
cmp
nop
cmp
fcoms
mov
cmp
pop
inc
pop
repnz
fmull
out
cmp
pushf
test
sbb
mov
add
pop
and
ret
cltd
insl
cmpsl
jns
inc
mov
fldl2t
ljmp
mov
test
imul
out
imul
loop
cmp
mov
xchg
mov
hlt
mov
stos
fadds
xlat
aad
outsl
jne
loope
dec
mov
inc
cmp
aas
inc
repz
adc
jns
js
push
pand
sti
mov
xor
or
cmp
jae
push
ret
and
fsts
or
mov
cmp
or
js
mov
mov
aam
fnstcw
cwtl
stc
add
ss
xchg
xor
and
fucomi
sbbl
out
sub
movl
push
xor
stc
and
xor
xor
loopne
mov
int
or
ds
mov
adc
dec
roll
fldenv
add
bound
pop
sub
add
jle
xor
icebp
xlat
and
mov
fdivr
mov
cmp
mov
js
push
lea
cs
rorb
cmp
test
lret
pusha
rorl
add
fsts
pop
inc
sbb
mov
sub
cmp
xor
cmp
inc
push
popf
push
cmc
push
mov
pop
imul
sub
loope
adc
xchg
mov
inc
fs
xchg
jne
push
fsts
out
ljmp
inc
orb
mov
enter
pop
out
and
cmpl
xchg
shll
test
in
or
sub
loop
jg
push
and
and
int
sub
dec
push
xor
adc
cmp
std
mov
test
or
xor
dec
jmp
sub
loope
mov
jg
inc
jecxz
pop
sub
idivl
call
lds
cmpsb
inc
scas
das
cmpsl
jne
fcoml
adc
arpl
or
xor
cld
adc
jg
popa
outsb
cmp
jmp
dec
ja
divb
cmp
push
mov
test
sbb
inc
dec
mov
lahf
inc
popa
sbb
es
push
iret
sbb
dec
mov
loop
mov
add
mov
sub
in
test
andb
push
cmp
call
add
mov
dec
sbb
popa
fs
ror
insb
mov
cmpsl
and
fidivs
and
mov
adc
mov
stc
push
or
rcrb
dec
mov
rcrl
add
cwtl
and
repz
push
and
cmp
pop
pop
mov
and
pop
dec
fadd
int
pop
jmp
add
call
outsl
loopne
nop
stos
cld
stc
call
ljmp
sbb
inc
mov
movsb
cmp
cmp
das
cmp
mov
xlat
jl
push
push
mov
mov
fidivrs
mov
jne
cmp
cmp
cmp
jo
cmp
and
sub
bnd
add
xabort
push
fiadds
cmp
jb
repnz
je
cmp
ljmp
cld
pushf
fbstp
inc
dec
les
mov
test
nop
lds
les
cmp
pop
loop
rclb
inc
cmp
pushf
adc
fstpt
inc
push
cmp
fmul
adc
xor
orb
inc
pop
pop
mov
dec
pop
movsw
flds
mov
add
stc
jb
mov
inc
fcoms
out
orl
inc
add
mov
sahf
jae
aaa
lahf
and
pop
jnp
aad
add
fmuls
cmp
ret
add
or
add
add
movb
or
lds
and
jo
dec
imull
and
nop
add
sub
push
and
lods
ret
stos
test
dec
pop
pop
sar
mov
or
mov
bound
or
pusha
orb
gs
push
mov
pop
decb
or
dec
add
add
and
sub
call
lods
adc
jp
into
dec
std
jl
pop
fsubrp
std
hlt
leave
mov
push
ja
movsl
push
jle
test
inc
mov
cmp
push
add
cmp
incl
add
jnp
sbbl
xchg
fcmovnu
dec
lea
sub
push
fimull
repnz
pop
fimull
test
add
adc
add
pop
mov
jecxz
xlat
cli
fdiv
pop
xlat
or
loope
sbb
aam
mov
shll
xor
inc
and
decb
or
dec
cmp
sbb
add
arpl
and
test
adc
sbb
pusha
and
inc
dec
add
pusha
add
sbb
cmp
cmp
or
sub
dec
orb
sub
xchg
int
fsubs
fadd
add
mov
and
fcomps
into
push
sbb
add
xchg
or
sbb
add
and
dec
add
dec
stos
inc
sub
or
cmp
sti
inc
inc
add
mov
dec
cmp
or
jbe
xorl
inc
xchg
flds
cmp
sbb
aam
adc
adc
and
sub
sbb
stc
add
int3
loopne
pusha
sti
jg
dec
lea
push
push
adc
cmp
sbb
punpckhbw
xor
mov
std
push
jmp
ret
aas
dec
add
incl
push
push
ja
nop
dec
push
mov
cmp
leave
into
cmp
sbb
or
outsl
xlat
mov
sti
xchg
pop
add
test
dec
xor
and
xorl
cwtl
js
cs
test
xor
dec
hlt
xorl
push
in
xchg
xchg
and
add
pop
add
inc
testl
sub
xchg
xor
leave
inc
mov
mov
xchg
lock
cs
push
dec
mov
call
dec
mov
push
xor
mov
lcall
add
or
shlb
out
mov
cmp
mov
dec
pop
push
dec
push
and
lcall
add
nop
push
loopne
out
sub
add
mov
sub
sti
add
imul
test
or
sarl
bound
push
sub
and
mov
add
jae
xor
sahf
loope
add
xor
orb
push
shll
test
adc
rorl
in
mov
mov
sbb
mov
in
enter
out
push
imul
or
pop
clc
cwtl
inc
add
push
and
sahf
mov
push
movsb
inc
mov
out
inc
mov
pop
stos
icebp
cwtl
clc
or
sbb
dec
pop
gs
cld
push
shrb
pop
dec
dec
aad
es
enter
jne,pt
xchg
lock
jbe
xchg
iret
cmp
addb
push
lods
es
xchg
cmp
xchg
dec
add
test
repnz
je
mov
aaa
cld
or
jmp
sbb
xor
popf
adc
test
sti
repnz
push
sahf
lahf
mov
push
pop
add
rcr
in
nop
in
mov
sbbl
sbb
hlt
call
mov
pop
xor
in
or
mov
sub
aaa
inc
mov
and
jecxz
adc
aas
ret
shlb
inc
neg
pop
xor
push
arpl
jle
rcl
and
rcrl
popf
daa
jo
scas
nop
mov
mov
and
push
or
xchg
daa
and
fmulp
and
lea
xor
fildl
add
ret
ja
mov
pop
dec
jbe
inc
or
add
shr
daa
test
stc
and
and
or
ficomps
jl
push
push
addr16
sahf
aad
mov
add
jbe
add
xor
cmp
mov
repnz
xchg
insb
mov
addr16
or
pop
addl
xchg
sbbl
add
or
pop
and
addb
mov
lidtl
mov
notl
bound
shr
cmp
cmp
fld
aaa
push
ja
dec
inc
push
add
jp
xor
orb
in
xchg
enter
jae
das
adc
or
pop
into
mov
or
dec
or
ret
lods
loopne
clc
ds
std
adc
jl
std
pop
dec
fimull
or
xlat
dec
pop
mov
push
nop
mov
add
adc
fisttpl
mov
dec
dec
arpl
je
insb
push
sbb
jae
xor
mov
dec
inc
mov
js
jae
nop
or
inc
enter
adc
jnp
jge
pusha
adc
pop
cmp
xor
push
out
andb
call
add
cltd
lods
push
jns
insl
sub
jne
push
ja
sahf
mov
push
imul
fnstcw
sub
xchg
call
cmp
pop
xchg
mov
cmp
mov
add
add
cmpsb
or
mov
sti
fcomip
sti
adc
push
or
push
dec
in
stos
cmp
or
adc
push
nop
loopne
dec
pusha
lock
jmp
sahf
jl
imul
outsb
xchg
nop
imul
mov
mov
jne
xor
or
rorl
sub
fiaddl
and
loop
rorb
add
fsts
mov
outsb
repnz
cwtl
mov
xlat
ds
pop
clc
andl
shlb
dec
jp
popf
mov
aaa
ret
lret
hlt
jl
push
dec
mov
push
decb
pushl
inc
push
mov
and
jo
mov
push
test
xchg
push
sub
hlt
push
loopne
insl
enter
add
jo
or
mov
lcall
jno
push
clc
nop
lcall
test
xchg
mov
fwait
lods
or
push
adcl
in
jle
inc
ret
outsb
js
xchg
das
lds
push
pop
inc
push
sub
push
bound
mov
and
jg
pop
subb
lds
xchg
in
xchg
insb
push
jg
lahf
js
add
pop
andl
bound
popl
popa
outsb
add
mov
and
dec
test
fsts
mov
or
jbe
jae
push
sahf
pop
daa
lret
inc
fnstcw
or
popl
stc
aaa
add
add
or
les
push
push
xchg
inc
repnz
fnsave
add
andl
dec
xor
adc
inc
jae
jo
cmpsl
into
push
mov
or
dec
xor
movl
sbb
mov
jb
pop
mov
jno
movsl
dec
outsb
push
jl
std
outsb
gs
and
mov
hlt
addl
or
mov
sub
mov
mov
addl
sbb
or
push
or
or
adc
mov
sub
pop
dec
cmp
xchg
in
rclb
repz
hlt
rclb
insb
add
push
jb
pushf
push
and
inc
fcmovnb
add
mov
ljmp
jo
incl
nop
inc
neg
jmp
int3
xchg
lea
adcb
and
xorb
jbe
mov
ja
push
enter
push
and
movsb
xchg
sti
filds
xchg
mov
dec
jne
imul
sbb
ja
inc
push
push
pop
fildll
jg
insl
cld
aaa
dec
xchg
clc
add
dec
outsb
xor
scas
sahf
pop
clc
in
dec
mov
js
jno
xchg
push
jns
add
jae
clc
ja
dec
cmp
iret
jl
out
hlt
sub
jno
push
add
or
adc
ror
xor
adc
and
leave
adc
mov
test
notl
lret
push
xchg
xchg
sar
cli
add
jo
test
or
sahf
fmull
inc
push
jns
adc
in
imul
xchg
cmp
xchg
fldl
rorb
test
fs
or
pushf
adc
inc
push
push
clc
xchg
adc
aam
push
push
push
inc
jbe
das
jp
in
xchg
mov
cld
sub
int3
bound
insl
pop
xor
dec
hlt
inc
ss
mov
push
mov
dec
andl
pop
test
lock
inc
xor
or
loopne
adc
mov
sahf
xor
mov
aas
shll
subl
test
call
jne
jle
cvttps2pi
push
push
pop
mov
lahf
sub
pushf
cmp
in
test
les
test
sbb
mov
data16
lahf
pop
mov
xor
jb
jns
stc
dec
inc
shrb
mov
cmp
sub
push
es
xor
push
xor
mov
push
movl
data16
dec
lock
jnp
or
bound
cmpsl
jbe
jg
jmp
sbb
xor
bound
test
and
leave
and
or
test
jb
mov
mov
xor
jo
add
int
add
and
sti
ja
leave
movsl
aaa
fs
arpl
cltd
xor
pop
jge
mov
cld
pop
jns
xor
movsl
aam
aaa
nop
ljmp
lock
mov
outsb
cld
and
jo
inc
jae
gs
in
out
pandn
xor
inc
neg
pop
dec
sub
sti
push
push
inc
or
mov
adc
mov
leave
push
shrb
ljmp
xchg
jle
inc
cmp
mov
and
test
add
rorb
ljmp
adc
mov
add
inc
xchg
xchg
mov
adc
xchg
jne
push
nop
cmp
push
jne
pop
je
and
push
xchg
push
sub
clc
ret
outsl
push
jb
xchg
xor
imul
jl
dec
inc
jo
movsb
sub
fcmovb
dec
cmc
add
pusha
sub
or
cld
ja
and
pop
addb
push
pop
xor
add
aas
add
add
xor
push
movsb
and
add
add
pop
xchg
stos
sub
std
adc
push
ja
subb
mov
and
xchg
test
ret
dec
sub
pop
outsl
arpl
xor
inc
jb
dec
push
add
dec
jmp
jbe
movsb
pusha
add
mov
push
cwtl
push
and
data16
test
cmpsl
push
and
lret
pop
mov
fldcw
xor
in
xchg
js
xlat
cmp
call
movsb
lods
push
xor
dec
push
or
add
sub
xchg
xchg
js
pop
add
cld
add
push
shl
outsl
les
adc
shlb
rorl
ss
push
sbb
neg
mov
mov
filds
mov
incb
enter
add
scas
pop
inc
mov
jae
adc
pop
jae
add
xor
push
mov
fs
rclb
dec
aaa
pop
xor
sti
ljmp
push
insb
xchg
add
dec
mov
jecxz
inc
inc
xchg
shrl
dec
cs
fwait
in
jne
and
cli
add
and
ret
xchg
mov
push
pop
lret
push
mov
inc
je
insb
daa
mov
mov
adc
outsl
je
jbe
cmc
add
fldcw
js
sub
test
inc
or
std
xor
rolb
adc
iret
push
pop
cmpb
xor
outsb
jnp
add
adcl
and
sti
and
andb
insl
push
push
test
push
push
stos
jl
add
pop
sub
sarb
rcll
enter
repnz
push
ds
xchg
or
jo
sbb
jbe
addr16
inc
sub
jmp
sbb
addr16
inc
or
xchg
lret
aaa
push
push
pop
ja
xchg
rolb
inc
jnp
stc
mov
lods
and
inc
adc
popf
movsb
adc
lock
inc
mov
mov
push
pushl
mov
push
or
clc
xor
mov
lock
push
jg
dec
xchg
mov
jo
inc
or
mov
outsl
pop
add
add
mov
nop
push
mov
ja
fisubrs
mov
dec
and
inc
lods
mov
fmull
dec
or
sbb
xor
push
shll
or
data16
add
mov
inc
inc
add
clc
cs
out
sub
lock
sbb
xchg
insb
adc
sub
push
mov
pop
nop
lods
mov
mov
adcb
inc
aad
fcomps
push
outsl
and
inc
push
pop
cltd
ret
popl
jb
cli
mov
push
bound
jno
in
movsb
fsts
call
sbb
mov
and
jle
xchg
inc
push
mov
add
or
mov
pop
into
mov
xor
fidivs
lret
adc
ss
pushf
dec
rorl
mov
aad
clc
and
neg
and
push
insb
in
push
hlt
sti
notl
iret
xchg
fstl
sbb
fadds
and
jno
cs
fs
fdivs
hlt
add
or
and
ss
push
pop
xor
and
sti
cld
orb
mov
xchg
sbb
xor
out
movb
call
xchg
daa
add
ds
add
cmp
enter
daa
loopne
clc
and
push
in
sbb
je
ja
orb
push
xchg
pop
push
mov
and
add
jmp
ljmp
dec
mov
sbbb
es
sbb
lea
enter
pusha
and
adc
mov
lock
and
push
add
cmpsl
sub
arpl
dec
add
test
subb
dec
add
adc
ljmp
push
xchg
shlb
and
sbb
mov
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
ds
inc
add
xchg
pop
jg
add
das
xor
xor
jmp
sti
out
pushl
add
add
add
add
add
add
and
aas
add
add
add
add
adc
mov
add
push
sub
push
add
ret
inc
add
jl
addb
sub
daa
jns
jae
dec
add
dec
adc
push
pop
xor
ja
xor
data16
xor
and
push
add
ret
mov
add
push
xor
adc
mov
mov
fcmovb
or
xlat
lea
arpl
pop
pop
outsl
popa
add
shll
add
mov
inc
add
pop
incl
jmp
add
stc
popa
mov
inc
adc
std
cmp
jne
fs
mov
push
outsl
pop
nop
and
sbb
xor
popf
lods
imul
add
push
cmp
cmp
xchg
daa
ljmp
push
jae
and
jae
or
push
push
sti
lret
or
push
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
iret
add
mov
incl
add
push
imul
jb
gs
add
imul
jb
arpl
jae
cmove
gs
imul
je
or
pop
pop
imul
inc
push
dec
inc
insb
insb
sbb
pop
push
mov
outsb
push
movntps
imul
inc
inc
jb
inc
jne
arpl
scas
mov
mov
dec
fs
outsl
push
jnp
dec
pop
inc
adc
dec
mov
sub
mov
jnp
imul
xchg
mov
andl
out
jbe
or
dec
popa
insl
bound
insl
insl
push
dec
imul
push
xchg
adc
push
mov
mov
push
outsl
push
imul
test
int
loopne
push
outsl
outsl
jae
outsl
das
jge
lods
mov
je
insb
addr16
push
popa
jbe
pusha
in
nop
jl
jo
adc
push
or
inc
aad
into
xchg
pop
mov
out
push
imul
clc
push
sbb
shlb
outsl
sbb
push
mov
in
cmp
repz
mov
push
jb
dec
jb
je
jns
insl
push
xlat
cs
adc
jbe
retw
jns
or
popa
addr16
out
outsl
cltd
jmp
dec
sub
inc
arpl
fcmovb
lcall
or
scas
mov
ja
mov
push
dec
gs
pop
jecxz
addr16
inc
lret
cmp
mov
jns
arpl
cltd
imul
lret
into
xorb
jae
ficompl
data16
jae
push
popa
sbb
sbb
mov
dec
bound
sbbb
sub
not
push
dec
fldenv
push
fldenv
dec
sahf
push
dec
push
jne
ja
xor
outsb
jne
push
mov
sbb
push
mov
push
popa
bound
xchg
std
push
dec
jne
inc
fs
jae
add
negl
jle
inc
jo
fs
and
outsb
mov
out
xchg
ds
insb
sub
fimull
pop
testb
or
and
push
jo
dec
imul
arpl
push
mov
sub
and
fs
inc
insl
out
outsl
js
lahf
sbb
and
arpl
and
xor
loope
fs
lds
addr16
mov
outsb
daa
inc
imul
fiadds
adc
push
popa
ss
jbe
inc
pop
in
outsl
testb
mov
popa
or
sbb
test
mov
aaa
ret
ss
outsl
js
adc
xchg
arpl
adc
ja
sahf
lds
test
inc
lock
mov
scas
inc
pop
push
insb
adc
pushf
mov
dec
or
mov
cmp
mov
inc
outsb
ud1
setno
sbb
insl
scas
fwait
aam
or
pop
insb
inc
test
fsubl
or
cmp
or
je
or
mov
mov
daa
popl
adc
pop
ss
cmp
cmp
popa
mov
push
push
cmpsl
adc
xchg
ss
arpl
out
shlb
or
das
sbb
dec
popa
xchg
jge
pusha
push
addb
cmpsb
pusha
movsl
cmpsb
fisubl
or
adc
addb
scas
xchg
in
dec
or
cmp
ret
sbb
xorb
and
pop
pop
ja
fs
adc
gs
insb
sbb
sub
push
outsb
ret
test
cmp
xor
push
cmp
xor
or
jb
xor
adc
scas
pop
lods
stos
xor
push
sub
addr16
push
nop
or
mov
daa
fsubrl
pusha
gs
push
xchg
orl
xor
aad
push
test
in
fldenv
js
or
jnp
mov
pop
inc
sub
inc
xlat
sbb
sbb
cmpsl
xchg
xlat
sub
lods
in
aad
shlb
pop
adc
imul
outsl
mov
dec
push
leave
sbb
inc
adc
pop
mov
bound
mov
push
xchg
or
sub
enter
imul
mov
popa
loopne
ret
xor
jbe
sub
or
inc
sub
ret
dec
data16
mov
adc
cld
push
sti
mov
jo
cld
or
insl
mov
or
add
jae
pop
sti
inc
es
dec
and
sbb
mov
pop
paddq
push
loop
sbb
shlb
adc
popa
inc
in
lock
sbbb
sbb
xchg
dec
adc
jo
dec
faddl
insb
mov
adc
gs
jmp
or
adc
insb
inc
push
cmpsb
dec
push
pop
movsb
lods
push
into
rcll
nop
icebp
mov
xor
xor
and
pusha
mov
inc
sub
pushf
mov
mov
cmp
stos
lcall
and
jg
mov
add
add
add
add
in
lcall
pop
add
add
popa
pop
mov
push
or
add
inc
negb
insb
rcrb
add
adc
fdiv
mov
push
add
ret
aaa
sbb
divb
cmpsl
sub
subl
add
in
sbb
cs
or
int
cmpsl
loope
add
out
xor
add
fistl
or
lret
lret
xor
pop
add
add
cmpl
add
adc
add
add
adc
mov
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
add
add
xor
add
add
add
sbb
add
add
pop
inc
push
add
add
add
pusha
testb
pusha
testb
add
add
pusha
testb
pusha
testb
add
add
pusha
testb
pusha
testb
add
add
pusha
testb
popa
testb
popa
testb
popa
testb
popa
testb
popa
testb
add
add
testb
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
fs
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
jb
outsb
je
insb
addr16
add
add
je
inc
add
mov
fsubr
push
or
loope
out
out
push
insb
xchg
jb
out
neg
rcr
jno
imul
inc
out
pop
mov
sbb
icebp
add
outsl
cmp
mov
cwtl
aam
push
jno
imul
je
inc
cmp
mov
loop
push
lods
cli
data16
jne
hlt
ret
push
popa
pop
pop
imul
xor
insb
pop
fldenv
ficompl
lds
and
fisubrs
and
inc
in
in
aad
inc
jmp
aaa
jae
pop
roll
das
hlt
and
push
mov
cmpsl
dec
insl
fcoms
or
lcall
xor
mov
and
ret
add
arpl
gs
js
add
cmp
cwtl
inc
mov
les
sbb
das
ljmp
pop
pop
aaa
fdivrs
add
push
xor
cmp
popa
add
xchg
mov
outsl
repnz
aam
dec
inc
sub
xor
mov
or
jne
xchg
sti
jg
mov
icebp
clc
xor
in
jp
adc
adc
xchg
push
sub
cmc
sbbl
mov
inc
lods
rorb
jne
dec
push
sbb
sub
decb
repz
push
jg
xor
pop
xor
sbb
jge
ret
lcall
mov
out
mov
push
sub
mov
xor
stos
cmp
cmp
test
in
enter
jmp
pop
out
cmpsl
adc
dec
bound
nop
lods
or
mov
sub
mov
or
fisttpll
add
dec
pop
sub
add
or
push
rorb
lods
into
mov
int3
mov
fabs
stos
jno
xchg
ljmp
inc
std
push
xor
.byte
