sbb
add
inc
daa
dec
xlat
bswap
je
loope
js
arpl
push
pop
pop
and
in
mov
mov
mov
mov
dec
or
mov
jle
fstpl
iret
jg
stos
lods
push
lret
jge
pushf
inc
in
pop
iret
pusha
mov
incl
js
aam
stos
mov
scas
fwait
add
sbb
dec
cmp
fs
lcall
push
popf
jo
add
push
fistl
je
or
xchg
aam
fcompl
jle
mov
dec
push
movsb
jecxz
out
pop
push
xor
xchg
ficoml
push
sub
add
cmp
into
cltd
loop
fisubrs
lret
out
xor
and
cwtl
adc
cmp
add
es
push
leave
arpl
jae
cs
jecxz
add
mov
loopne
mov
push
jne
xchg
out
nop
aaa
dec
loope
cmpsb
stc
dec
mov
cli
imul
xor
cwtl
test
int
mov
sub
push
jo
lods
adc
xchg
mov
adc
mov
mul
push
lahf
ss
add
xor
and
pushf
mov
lea
in
out
mov
and
in
jg
mov
fdiv
arpl
lahf
das
jo
mov
ret
sub
sub
xchg
std
sbb
mov
xlat
js
lds
mov
in
outsl
movsl
in
inc
pop
outsb
cmpsb
ss
ja
loop
roll
mov
mov
popf
fwait
push
xchg
inc
std
add
sbbl
pushf
adc
pop
cmp
scas
cwtl
icebp
lfs
js
jno
js
dec
scas
bound
push
mov
xchg
int
out
inc
test
lods
in
popl
fsubl
jae
xchg
xchg
sbb
repnz
das
ja
into
dec
mov
daa
mov
mov
xchg
in
fcmovbe
push
rcrl
xchg
push
cli
repnz
cmp
fsubrs
aas
ret
movsb
shlb
fldenv
inc
xchg
mov
aas
outsl
ffree
adc
xchg
setg
mov
cmpsl
dec
jg
movsb
xor
inc
cmp
rclb
mov
sub
jge
and
inc
test
lds
xchg
divb
push
in
add
notb
or
insl
hlt
xchg
data16
xor
sarb
inc
insb
dec
scas
pop
push
cmc
fimull
stos
jl
or
mov
rorb
mov
or
mov
call
fsts
mov
push
int
add
pop
call
or
mov
sbb
insl
fnstsw
mov
mov
fdivrs
cmp
and
inc
insl
lds
out
pop
lcall
int
je
inc
mov
or
xorb
and
les
ja
adc
lret
pop
in
testl
mov
sbb
fidivl
mov
aaa
xchg
xor
pushf
addr16
leave
mov
popa
adc
or
ret
addl
sahf
sbb
lods
lods
xlat
movsl
lock
jmp
mov
mov
lret
ds
pop
and
fadds
mov
inc
or
xchg
push
mov
insl
adc
mov
icebp
xchg
and
ret
cli
mov
push
sti
mov
jge
adc
lret
mov
stos
sbb
mov
js
dec
dec
mov
jno
addr16
add
stos
scas
mov
repnz
hlt
jne
xor
or
test
dec
pop
add
movsb
xchg
outsb
subb
dec
and
ja
pop
pop
add
setno
clc
mov
test
mov
jnp
pop
cld
fidivl
pop
ud1
inc
test
mov
lods
mov
icebp
enter
cmpsl
mov
cmp
inc
or
out
rol
push
jmp
js
xlat
in
push
push
gs
pop
add
push
jae
scas
sbbb
xchg
lea
insb
sub
ret
adc
leave
cmp
inc
push
jmp
movsb
xor
movsb
adc
mov
rcr
mov
push
mov
mov
jmp
adc
into
mov
imul
sbb
mov
dec
int
xor
push
push
jae
mov
roll
jbe
or
inc
lret
jno
add
insb
mov
scas
aad
push
and
ffree
pop
dec
jmp
add
mov
pop
mov
push
push
cmp
ljmp
mulb
fsubrs
mov
lods
bound
push
pop
sub
and
in
outsb
or
ret
xor
aam
es
orb
add
jnp
repz
push
add
xor
int
mov
test
xor
dec
pop
pop
jecxz
in
inc
fisubrs
xor
push
or
cwtl
xchg
int
and
repz
cmpsb
hlt
pop
sbb
pop
and
sbb
dec
fwait
loopne
rcll
cmp
and
mov
xchg
jnp
in
ficoms
mov
jecxz
mov
movsb
jo
stos
shr
xor
jg
cmp
xchg
xor
int3
mov
test
xor
outsl
cmp
sub
mov
es
mov
add
shlb
add
jecxz
add
test
and
add
push
fistl
sbb
test
sub
mov
adc
lea
jne
lods
xor
ds
push
cmp
and
mov
repz
adc
push
mov
jne
dec
in
dec
aaa
ljmp
leave
fwait
repnz
js
mov
stc
xor
sahf
cmpsl
sbb
movsw
jae
sbb
jns
pop
mov
adc
jp
lret
mov
movsl
push
imul
in
lods
shlb
or
js
cs
stos
mov
pusha
ds
jnp
jl
dec
sub
lods
push
mov
jp
jmp
lret
lods
addr16
pop
mov
lods
gs
lods
std
js
sbb
jne
sbb
out
mov
shr
in
jecxz
or
jge
mov
dec
clc
mov
lods
sub
addr16
cmp
mov
int
cli
out
out
push
xlat
iret
icebp
jge
jns
jmp
jg
cmp
adc
daa
fs
roll
mov
rcl
cmp
sbb
push
test
or
xor
or
or
mov
jg
jle
xchg
addr16
pop
xchg
lds
mov
lret
pop
dec
jae
test
test
testb
ror
movsl
lods
repz
into
dec
ss
inc
and
cmc
inc
add
pop
or
or
and
dec
imulb
add
mov
lea
xchg
mov
jns
xchg
cmp
pop
dec
daa
dec
jmp
sub
clc
gs
out
enter
fsubrl
jg
xchg
outsb
pop
idivl
jle
inc
out
push
xchg
cmpsl
scas
and
mov
add
popa
das
or
xchg
jp
and
push
jmp
xor
jle
icebp
sbb
clc
fwait
cwtl
add
in
push
lcall
mov
and
xor
aaa
cmp
xchg
fbld
and
sbb
inc
or
movsb
sbb
sub
sub
sarb
movsl
and
jl
adc
shl
ret
dec
or
data16
cmp
xchg
xchg
pop
mov
and
sub
lahf
adc
scas
sub
std
lcall
lcall
lods
push
loopne
dec
and
fbstp
ret
sbb
cli
jnp
in
repz
mov
adc
mov
nop
pop
xchg
js
mov
xchg
insl
insb
rolb
and
mov
dec
repz
insb
out
sbb
jo
push
mov
sub
insl
sbb
imul
enter
addr16
outsl
out
imul
mov
ja
out
xchg
xor
adc
pop
sbb
out
shrb
add
mov
jbe
call
dec
in
adc
arpl
popa
jl
sub
adc
enter
data16
imul
es
adc
hlt
mov
sahf
mov
pop
dec
xor
adc
loope
pop
xchg
ret
xor
xor
cmp
clc
mov
out
xchg
inc
adc
bound
addb
mov
test
or
mov
cltd
cmpsb
jl
and
pop
push
shrl
pop
mov
adc
adc
jp
inc
mov
sub
rolb
ds
or
pop
mov
test
sarl
addr16
inc
adc
xor
fistpl
cmp
test
cld
loop
mov
aam
data16
out
xchg
test
sub
adc
mov
jns
mov
xor
andl
rcl
sbb
inc
sbb
jge
push
movsb
add
or
pop
lret
jae
mov
dec
mov
mov
and
in
add
dec
inc
rcrl
xlat
mov
jo,pn
sti
jb
push
cmc
sub
xor
test
pop
in
cmp
les
call
mov
incb
mov
data16
loop
push
pop
push
out
xlat
test
scas
hlt
pushf
push
test
add
mov
int3
int
scas
xor
pop
push
xchg
push
insb
jne
add
popa
dec
dec
or
jmp
push
into
outsl
pop
gs
cmp
adc
push
cld
pop
xor
dec
push
addr16
negl
fdivp
lods
push
ficoml
pop
faddl
sub
loopne
mov
jg
pushf
dec
sbb
aad
cmpl
dec
adc
cmp
repnz
arpl
loop
aam
outsb
in
add
push
push
mov
mov
cmp
sbb
sbb
lret
cmc
pop
pop
push
xchg
je
cmp
outsb
sub
lods
nop
dec
inc
pop
sbb
js
dec
pop
ret
incb
es
test
stos
xor
xchg
mov
push
xorb
loopne
sbb
outsb
addb
sbb
mov
mov
mov
in
scas
or
test
outsb
xchg
mov
and
nop
sahf
movsb
jns
ss
push
aas
jne
lods
mov
dec
ror
add
add
adc
cwtl
pop
or
xor
ret
jo
sub
xor
mov
pop
dec
stos
inc
test
add
aad
jge
imul
or
xorl
mov
jne
idivb
fcompl
mov
dec
xor
fsts
cmp
mov
das
or
add
add
pop
sbb
jle
jbe
dec
xchg
sub
scas
into
clc
mov
test
and
xlat
aad
lahf
inc
mov
dec
call
pop
stc
dec
pop
notl
faddl
iret
movsb
push
adc
mov
xchg
ss
loope
sbbl
loope
xor
mov
sub
push
aas
jo
mov
xor
cld
mov
dec
mov
stos
mov
add
and
lret
sbb
ffree
xchg
dec
ret
pop
add
jno
xchg
out
addb
xchg
add
mov
repnz
adc
pop
outsl
inc
pop
jg
mov
push
ja
mov
mov
stc
push
decl
dec
iret
int3
or
ret
xchg
push
jle
call
xchg
repnz
xor
fimull
jmp
sbb
sarl
mov
mov
xchg
jl
mov
bound
cltd
andb
movsl
xchg
out
scas
xor
inc
jmp
dec
popf
sub
repnz
cld
xchg
scas
loop
out
xchg
mov
sti
lret
push
mov
lods
movsl
lea
jp
lea
test
mov
xchg
outsb
mov
lret
call
mov
push
pop
stos
jbe
stos
push
adc
push
rolb
inc
adc
sbb
jecxz
fadds
addr16
push
pushf
cmc
adc
data16
push
mov
inc
xchg
add
cwtl
sub
inc
fmuls
arpl
push
jae,pt
jmp
call
lea
adc
adc
out
mov
insl
mov
xchg
shll
loop
mov
sahf
xor
mov
mov
orb
push
hlt
xchg
lods
daa
xchg
push
repz
loopne
or
sub
cmp
sub
lods
pop
adc
adc
xchg
subb
test
inc
dec
inc
test
fdivs
xchg
sarb
hlt
jmp
jge
adc
pop
lods
add
jb
adc
cmp
and
fadds
push
lret
sarl
ljmp
adc
jecxz
scas
sub
push
mov
je
or
mov
sti
int
xchg
and
pop
xor
sahf
push
scas
lea
xchg
cwtl
clc
push
push
pcmpgtd
fisubrs
xor
push
out
dec
addr16
jnp
pop
adc
repz
mov
outsb
adc
xchg
notb
lods
fs
mov
movl
mov
daa
shll
xor
lea
xor
push
lahf
enter
or
fidivrl
jns
lret
stc
movsb
mov
fdivrl
mov
add
pop
fwait
je
shrb
repnz
fcoms
push
or
mov
mov
inc
or
lahf
inc
cltd
loope
sbb
call
push
cmpl
cmc
insl
iret
testb
cmp
inc
inc
sbb
icebp
insl
addr16
filds
sbb
rolb
mov
push
ss
fsts
es
pop
data16
lahf
ljmp
in
ljmp
insl
add
or
out
movsl
enter
push
cli
pop
push
jne
gs
insl
push
xchg
pop
xor
jmp
bound
mov
sub
repnz
cmp
ret
fldenv
into
inc
and
and
in
inc
jle
mov
xor
and
dec
adc
inc
mov
roll
sti
jp
mov
movsl
mov
adc
adc
pop
mov
sbb
sbb
jne
sub
cmp
icebp
push
shlb
xchg
sub
out
cmpsb
adc
leave
push
icebp
scas
cmp
and
outsl
xor
in
mov
into
push
add
inc
mov
pop
std
stc
in
je
loopnew
adc
mov
insb
ret
dec
xchg
jbe
enter
mov
dec
xor
fs
iret
jl
xor
lods
dec
out
or
out
decl
daa
push
ficoml
mov
add
mov
repnz
mov
ret
pusha
jmp
or
jae
dec
mov
roll
mov
xor
inc
das
arpl
dec
mov
ljmp
push
mov
sbb
adc
popa
daa
rcrl
call
and
push
outsl
rcrb
fidivs
mov
jge
or
mov
and
enter
outsl
inc
arpl
mov
testb
insb
fcmovnbe
inc
mov
mov
mov
out
imul
mov
sub
lds
mov
mov
add
mov
inc
lret
mov
repnz
add
outsb
pop
popf
cmp
add
insb
aad
in
pop
pusha
int
push
fcoms
mov
fnstenv
pop
imul
mov
cmp
mov
mov
test
loope
imul
clc
in
push
pop
jbe
cmp
insl
aad
hlt
inc
push
andb
inc
jns
les
sub
faddl
in
mov
in
xchg
jg
mov
aas
roll
mov
inc
cld
and
popa
std
stos
xchg
mov
test
mov
mov
xor
rcl
jmp
cmp
aam
das
inc
sarb
jmp
pusha
xor
jns
add
push
jp
sbb
movsb
daa
sub
rcrl
add
int3
rcrb
outsb
and
mov
mov
rorb
pusha
stc
orl
ds
js
sub
xchg
add
rol
mov
jns
add
xchg
sbb
ja
fsubs
jne
and
stc
push
mov
outsl
cmp
jg
push
jmp
dec
inc
fsubrs
pop
pop
and
jo
pop
jmp
out
inc
stos
ljmp
add
aad
jp
mov
push
sub
pop
dec
push
shl
add
pop
js
ss
les
lahf
adc
pusha
xor
and
fcomps
mov
jae
adc
lret
lods
test
cmpsl
out
aas
int
and
pop
test
dec
stos
stos
das
in
pop
mov
and
cmp
cmp
cmp
test
ljmp
push
fadds
cwtl
popf
test
stos
cmp
aad
mov
add
xor
cmp
mov
cmpsb
repz
pslld
jle
cmp
cld
out
pop
push
js
fstpl
xchg
sarb
das
jmp
stc
fmul
xorb
sbb
push
mov
push
insl
xor
or
test
push
dec
mov
fmull
pop
in
js
pushf
lahf
in
daa
aaa
aad
dec
mov
aad
add
aaa
mov
cli
xor
arpl
ljmp
sub
bound
shlb
add
mov
fisubl
les
insl
inc
ss
dec
and
xor
dec
pop
lock
aaa
add
test
popa
add
enter
std
sbb
gs
and
idiv
inc
pop
bound
or
into
adc
cmp
mov
push
cmp
call
outsl
sub
mov
lock
add
mov
cmp
xchg
lret
mov
jle
xrelease
sti
shl
jb
int
adc
imul
in
dec
test
fmull
and
xor
sub
test
sub
mov
sub
dec
shrl
mov
or
jmp
mov
in
cmp
hlt
arpl
jmp
mov
xchg
jmp
mov
and
add
cs
movsl
jno
mov
adcl
idivl
dec
arpl
loope
shr
or
push
lods
and
je
fists
sub
xchg
add
lret
testb
lea
int3
xlat
pop
call
int3
dec
xchg
flds
enter
mov
rorl
xor
or
push
dec
jnp
dec
cld
in
and
daa
mov
enter
dec
mov
sbb
sbb
jmp
lods
sub
das
cmp
fimull
out
sub
outsl
sub
dec
pop
cmp
nop
adc
and
mov
mov
mov
sbb
sbb
jle
mov
xchg
push
into
inc
cmp
in
mov
jmp
push
test
add
mov
fdivrl
jmp
mov
cs
xor
jns
jmp
inc
std
hlt
out
mov
and
pusha
mov
add
inc
or
sahf
mov
push
bt
jmp
pop
mov
and
popa
xchg
scas
je
js
aad
ja
pusha
xchg
add
cmp
lcall
adcb
pop
hlt
inc
movsl
enter
ret
sub
add
in
mov
aam
jecxz
popf
pop
fcmovnbe
xor
pop
mov
cmp
sarl
mov
pop
inc
bound
inc
in
sub
popa
scas
inc
scas
js
loop
test
xor
xchg
xchg
and
cmp
or
mov
dec
aas
shrl
sbb
xlat
mov
popa
fwait
sbb
loopne
call
pop
xor
sbb
scas
mov
jp
push
popf
adc
mov
push
aas
inc
shll
cltd
cli
xchg
popf
sub
mov
jmp
xchg
pop
cld
pop
jns
mov
arpl
outsb
lahf
sbb
mov
xchg
and
lcall
sahf
jg
fisubs
scas
testb
das
sbb
daa
jle
ja
xchg
roll
testl
in
push
loope
cmp
push
and
pop
repnz
dec
scas
fsubrs
inc
or
mov
push
movsb
lods
fnstsw
aas
insb
scas
xchg
gs
test
jo
pushf
pop
ljmp
or
add
add
dec
mov
xchg
adc
add
scas
lret
xchg
pop
xchg
xchg
or
inc
pop
cltd
mov
push
nop
mov
push
popa
jecxz
cmp
arpl
mov
adc
xor
push
or
and
add
out
mov
shl
jne
pop
or
lock
ljmp
sub
jl
sarl
add
in
rcl
mov
sbb
sbb
mov
pop
arpl
adc
push
insl
adc
ficomps
xchg
das
xorl
pop
mov
into
pop
sbb
pop
add
lcall
xor
push
xor
pop
out
sub
mov
push
jmp
push
sbb
pop
cltd
xor
test
add
hlt
frstor
dec
daa
cmp
cmp
movsl
mov
test
ja
mov
lret
adc
or
test
push
add
adc
adc
jbe
test
ror
rolb
sub
xor
inc
push
hlt
mov
cmc
lcall
add
sbb
into
sahf
xor
out
push
mov
mov
cmp
mov
incl
adc
mov
mov
and
ja
ret
decl
mov
pop
push
leave
in
in
mov
out
lahf
dec
popf
js
jge
jnp
negl
sub
xchg
inc
ljmp
sti
pcmpgtw
ret
mov
sbb
loope
cmp
xor
pop
fstps
or
mov
shll
pop
or
xlat
cli
aad
jns
push
pop
mov
xor
mov
mov
das
into
xchg
aad
and
dec
stos
cmp
xlat
sarl
das
mov
leave
inc
and
xchg
out
cmpsb
jge
js
hlt
stc
sbb
loopne
aad
outsb
mov
lcall
repz
cmp
sbb
jne
stos
adc
lock
or
mov
push
xor
leave
movsl
sbb
push
jns
incb
xor
nop
sbb
pop
inc
fisttps
js
xchg
pop
and
gs
xlat
or
pop
adc
test
imul
cwtl
xor
insl
test
mov
ret
jecxz
inc
push
push
push
push
or
jp
stc
jp
cltd
je
in
cmc
mov
sub
shrb
pop
mov
popf
cmp
xchg
out
jle
ljmp
scas
lds
call
dec
aad
loope
lds
mov
fmull
pushf
clc
imul
or
cmc
mov
and
aam
xchg
leave
jecxz
mov
cmp
xor
pusha
enter
adc
iret
cmc
mov
stos
outsb
popl
les
push
xchg
inc
dec
in
push
and
mov
loopne
xor
shll
out
fucomp
adc
jle
cmp
push
jb
cld
inc
and
dec
jp
cmpsb
call
inc
daa
test
fldt
fcomps
lcall
test
jnp
sub
jg
xor
xor
ret
xor
outsb
daa
xor
into
rcl
add
aaa
xchg
lock
leave
in
adcb
fmul
out
fnsave
adc
adc
inc
neg
push
dec
sahf
addl
call
and
jmp
cmc
cwtl
jae
push
in
jmp
fiadds
sbb
mov
xor
or
push
mov
jnp
test
outsl
push
jge
dec
mov
stos
cltd
aad
push
fistps
adc
sub
fstl
in
mov
pop
sbb
mov
call
int3
je
dec
push
fsubr
inc
push
lret
xchg
and
pop
shll
jg
push
mov
adc
icebp
out
aad
push
and
push
mov
sbb
mov
sub
fninit
xlat
ljmp
outsl
xchg
into
arpl
fcoml
cmpsb
pushf
add
sbb
sub
test
lret
mov
push
lods
icebp
fsubrl
push
lahf
mov
dec
dec
fnstcw
push
daa
aaa
imul
jns
ss
jo
cmp
dec
mov
imul
dec
inc
ficomps
mov
fadds
cli
fs
add
sbb
push
andl
imul
aam
mov
adc
mov
pop
popa
pop
out
fwait
ret
in
popf
aas
imul
jle
lea
push
gs
nop
sar
mov
andb
outsl
and
xchg
into
cmp
xor
in
imul
into
mov
pushf
fcom
imul
cmpsl
cmp
hlt
data16
lds
and
or
imul
adc
addb
ret
imul
movsl
xor
mov
fdivs
sub
xchg
hlt
ss
pop
popf
test
int3
mov
jg
inc
aaa
imul
lea
add
cmpsb
mov
rorb
scas
lods
popf
jbe
into
mov
xor
inc
mov
hlt
sbb
ss
or
mov
stos
cltd
inc
mov
ss
jbe
repz
cmp
dec
mov
mov
cmpb
aaa
push
add
sub
sub
mov
out
xor
inc
or
add
or
sbb
push
subl
jae
aaa
mov
jb
pop
jecxz
xor
popa
out
daa
test
loopne
inc
mov
loopne
outsl
cltd
int3
jne
sbb
lods
mov
dec
and
inc
jb,pt
inc
cltd
and
mov
lods
lds
mov
lret
push
pop
out
je
in
adc
int3
loopne
out
lds
repz
mov
lds
or
add
jo
push
aam
mov
push
or
aam
sub
mov
mov
inc
adc
mov
mov
frstor
insl
pop
dec
push
pop
pop
test
daa
adc
mov
mov
or
inc
and
mov
push
xor
dec
inc
movsb
pop
inc
inc
mov
inc
aad
inc
shl
cmp
xor
xchg
lock
adc
lret
and
lods
sub
int
mov
mov
cmp
divl
dec
cmp
adc
dec
sub
repnz
jbe
adc
dec
jne
mov
cmp
test
sbb
fisubrl
cmpl
xchg
test
mov
xor
sbb
add
cmp
cmp
pushl
xor
dec
stos
sbbb
sub
sub
decl
out
inc
imul
jns
inc
test
js
movsb
adc
das
fs
popf
pop
inc
scas
fstpt
pop
add
ficompl
lea
enter
push
scas
mov
dec
xlat
decl
in
mov
aad
ja
cmp
pop
outsl
and
sub
inc
add
ds
xchg
bnd
add
adc
aad
out
xchg
aas
loopne
fcmovne
mov
std
or
lds
xchg
mov
mov
fs
mov
repz
sub
jb
movsl
in
jo
lahf
ret
subl
sub
int
jle
xor
dec
add
xchg
and
or
lea
jo
arpl
arpl
mov
and
popa
out
adc
mov
sbb
insb
pop
dec
push
xchg
ds
sub
pushf
pop
sbb
adc
jmp
stos
mov
push
fwait
aad
sbb
jle
insb
nop
cmpsl
mov
adc
sub
mov
and
jb
add
cmpb
cmc
sti
fsubrl
and
imul
jne
shlb
mov
jns
xchg
int3
mov
adc
xchg
negb
cmp
popl
and
cltd
test
movsb
arpl
test
mov
in
clc
jecxz
cmp
push
test
leave
cmpsb
push
ret
or
add
push
mov
cltd
or
fsts
xor
pop
mov
xchg
push
call
or
cmp
cs
pop
fdivrs
in
stos
imul
mov
pusha
or
out
and
and
in
sbb
inc
enter
pop
outsb
aam
mov
mov
lds
xchg
inc
mov
imul
adc
jbe
in
fwait
pop
popf
int3
sahf
fmull
dec
scas
fwait
inc
into
add
jge
stc
sti
mov
fistpl
sub
dec
pop
dec
es
dec
cmp
jge
popf
adc
in
add
movsb
dec
jge
out
ret
sub
dec
ret
aas
mov
or
dec
sbb
lock
popf
cmp
leave
sahf
add
mov
sbb
push
push
lret
cmc
hlt
adc
push
sbbl
push
call
dec
daa
jnp
imull
pushf
adc
jae
lret
movsl
adc
pop
daa
and
int3
push
popf
test
in
jns
popf
outsb
pop
jb
and
or
fstps
repnz
ljmp
cmp
lret
cmc
pop
aaa
rorl
push
fwait
pop
xor
sub
push
mov
xor
int
ss
cs
je
call
std
shll
pop
loop
addr16
inc
xor
shrb
test
inc
mov
cs
pop
mov
mov
jbe
in
mov
cmp
into
ja
and
popl
ficoms
ret
jg
daa
jnp
int
mov
push
mov
es
dec
sbb
mov
and
insl
fwait
push
dec
pop
shll
imul
xor
inc
xchg
fsubrl
and
mov
inc
pop
insb
dec
cwtl
pop
xchg
fldenv
lods
aas
jmp
mov
add
adc
pop
mov
pop
xchg
inc
imul
jge
jb
cltd
jbe
xchg
push
gs
jmp
jae
jo
in
icebp
jnp
in
jl
mov
iret
pop
idiv
ficompl
add
icebp
sub
pop
enter
rcl
inc
sbb
dec
xlat
jg
add
push
pop
aad
add
cmpsl
test
push
sti
cmp
xor
jae
fisttpll
and
dec
movsb
xchg
xor
jae
loop
push
lahf
lds
adcl
add
push
xorl
adc
repz
mov
add
dec
mov
sbb
std
mov
dec
mov
xor
in
pop
adc
nop
les
mov
cltd
scas
stos
hlt
xchg
and
je
pusha
and
push
dec
jae
and
sub
cmp
cltd
das
sbb
imul
sbb
adc
imul
and
add
mov
and
daa
negb
ss
add
jno
outsl
stc
dec
lss
and
mov
jns
cmp
scas
sub
hlt
leave
jns
cs
sub
sub
push
test
xchg
mov
or
xlat
in
ja
sub
inc
cld
add
fldl2e
mov
sti
ljmp
das
adc
adc
or
fdivs
push
loopne
in
gs
int
repz
movsb
or
mov
fwait
pusha
iret
push
push
sbb
loopne
xor
nop
inc
jb
adc
cmp
stos
fldl
adc
push
les
push
lahf
push
inc
and
std
out
daa
mov
sub
jmp
fwait
mov
lock
mov
gs
insb
pop
pop
loopne
add
xlat
addb
mov
scas
mov
adc
cmp
dec
dec
cli
ja
test
mov
cmpsb
add
popf
mov
sbb
ret
incb
pop
dec
shrl
jecxz
cmp
mov
fs
mov
scas
xor
dec
pop
xor
mov
sub
jns
pop
cld
icebp
pop
cwtl
lock
push
cwtl
fildll
test
push
pusha
jle
dec
icebp
stc
mov
cmp
mov
cmpsb
in
jp
push
mov
jns
xchg
es
hlt
and
lods
es
mov
push
sbb
mov
imul
cmp
or
andb
cmp
rcrb
ja
mov
scas
shll
stos
insb
fwait
int
daa
outsb
imul
inc
sbb
in
out
pop
push
dec
and
stos
pushf
nop
daa
lret
xchg
adc
aaa
xor
sbb
inc
ret
xor
scas
mov
shll
pop
pop
pop
jno
decl
push
push
shll
js,pt
jecxz
jmp
xchg
iret
filds
fstl
out
pop
loop,pt
imul
mov
lods
adc
adc
mov
andb
movsb
pop
adc
cmpsl
cmp
cmpsb
sub
cli
push
das
sbb
and
pop
sbb
imul
mov
mov
test
stos
add
mov
test
hlt
push
mov
fstpt
mov
cmp
inc
cmpsb
inc
mov
push
sub
and
jno
scas
dec
fisubl
stos
mov
roll
ss
data16
mov
fmuls
gs
ret
sub
ret
jae
fwait
movsl
pop
mov
aas
pop
addl
sub
mov
jle
clc
outsl
dec
sbb
push
xchg
jge
cmp
cmp
lret
mov
jb
outsl
rclb
iret
hlt
jno
inc
gs
or
in
jno
mov
inc
jl
addr16
xor
iret
xlat
stc
cmp
sub
sahf
jb
sub
push
pop
rol
fwait
aam
push
mov
lea
out
dec
out
incb
sahf
sub
call
push
sti
fstpt
mov
dec
dec
clc
mov
lret
mov
adc
imul
inc
movsl
cld
es
add
xchg
and
out
inc
lock
push
inc
pop
mov
cli
cmpsl
xchg
inc
aaa
mov
fdivp
inc
in
sbb
aas
fsubl
std
mov
shrl
push
adc
and
cltd
mov
sbb
fwait
es
fiadds
pop
jo
outsl
inc
stos
frstor
jecxz
lods
cli
fimull
sbb
jno
jb
pop
pop
incb
jecxz
int
push
insb
pop
imulb
push
sbb
push
mov
mov
das
xchg
inc
gs
subb
add
lcall
and
pop
das
sub
scas
sub
adc
cmpl
out
jns
or
cwtl
out
sbb
jns
aam
subb
loopne
xchg
cmp
mov
mov
rcll
in
repz
hlt
in
test
psrlw
xor
mov
out
mov
adc
ds
or
inc
sbb
test
push
xor
pmulhuw
pop
jno
out
scas
punpcklwd
leave
lods
les
push
insb
ret
andl
nop
leave
cmp
fwait
sbb
ficomps
leave
bound
adc
inc
xor
sbb
mov
out
inc
pop
leave
jge
leave
xlat
sub
bound
inc
test
faddl
insl
xor
push
dec
std
inc
adc
mov
test
idivb
iret
sbb
repnz
enter
xchg
imul
xchg
add
jo
in
in
xlat
les
test
inc
das
loopne,pn
xchg
orl
das
or
inc
mov
push
jecxz
sarb
adc
movsl
aad
inc
jns
jnp
nop
mov
pop
daa
sarb
gs
ret
inc
xor
inc
lods
mov
ret
pop
out
jp
lret
add
xor
adc
inc
sbb
xlat
xchg
cltd
stos
adc
pop
aad
jno
cmp
gs
xor
fs
hlt
data16
and
add
dec
aam
lods
sub
fdiv
lret
addr16
dec
les
daa
jne
ljmp
test
sahf
jbe
std
push
insb
pop
adc
xlat
mov
dec
lret
jmp
test
ljmp
jno
adc
ds
xchg
int3
jg
pop
mov
incl
lock
loopne
inc
in
ficomps
lret
shrl
xor
and
mov
nop
jns
dec
imul
pusha
jg
out
pop
inc
arpl
cmp
jge
faddl
nop
test
mov
mov
and
call
jo
or
pop
pusha
pop
fs
xchg
and
lods
stc
orl
lahf
jns
fistl
jno
shr
repnz
pop
dec
add
lds
int
push
out
mov
adc
ret
or
xchg
rcrb
jo
add
je
mov
rolb
or
scas
xchg
xchg
adc
aas
mov
ror
rol
mov
jl
lret
das
push
mov
sub
daa
jle
lcall
ljmp
bound
aaa
out
ss
leave
testb
mov
roll
stos
lds
js
inc
movsb
ja
inc
push
pop
jmp
out
outsl
jl
ljmp
sbb
stos
lahf
xrelease
call
dec
sbb
mov
adc
push
in
out
ret
sahf
test
cwtl
xchg
jns
inc
cltd
into
mov
ss
in
xor
enter
sub
inc
jne
or
and
fnstenv
fisubs
movsl
shlb
lcall
filds
inc
and
loope
int3
clc
add
jnp
mov
cmc
fwait
pop
pop
lds
mov
push
push
test
popf
push
les
add
orl
outsl
xor
jae
cmp
add
or
adc
repz
out
xchg
and
jno
jo
sub
ret
xor
mov
loope
jp
jge
and
jne
inc
mov
stos
icebp
bnd
inc
inc
dec
scas
adc
nop
xchg
loope
shll
popa
mov
jno
rcrl
movsl
push
sbb
daa
mov
jp
mov
enter
dec
scas
fstl
div
insb
or
sahf
xchg
and
sub
jl
hlt
ss
popf
and
cmpsl
popa
outsl
in
sbb
repz
jge
ss
test
addr16
xor
fcmovb
cmpb
push
inc
shl
adc
ficomps
mov
adc
pop
cmpsl
push
inc
fs
dec
mov
lods
sub
xchg
push
mov
jae
add
lds
push
add
xchg
jmp
andb
lods
xchg
mov
sbb
jecxz
and
jg
lods
addb
pusha
leave
hlt
xchg
cmpsb
dec
push
fadds
xchg
adc
gs
mov
pop
xor
cmp
sti
add
cmp
dec
mov
into
loopne
insl
inc
mov
inc
pop
push
add
ds
imul
ret
sbb
mov
inc
xchg
call
ja
outsl
or
or
push
gs
gs
cmp
bound
dec
stc
ret
je
outsl
jbe
pop
loop
mov
xor
or
scas
pusha
popf
push
mov
sub
jp
mov
movsb
insl
push
test
jb
movsl
aas
lock
std
js
or
cmp
dec
dec
in
adc
daa
lods
lds
out
fs
jmp
out
pushf
imul
jns
add
cmp
push
jnp
xor
add
sub
movsl
sub
repz
test
mov
fnstsw
out
stc
mov
pop
ljmp
and
dec
mov
sub
cmp
sar
loope
ljmp
mov
sbb
les
ror
fninit
call
lret
cltd
push
pop
push
cmpsl
fbstp
mov
shr
push
cli
les
push
cmp
mov
rcr
mov
and
fdivrs
aad
cmp
mov
or
das
add
cmp
push
dec
hlt
dec
aaa
push
fists
jp
mov
cmp
mov
xchg
imul
pop
arpl
jno
or
fwait
dec
or
mov
dec
cli
push
hlt
and
push
gs
cmp
ss
push
movsb
fidivs
mov
adc
mov
stos
std
or
and
and
cld
rcrl
sbb
mov
xlat
test
push
decl
pop
jno
push
dec
xchg
jne
lods
in
push
fidivrs
outsl
inc
movsl
dec
not
mov
shll
pop
jbe
dec
iret
push
and
add
and
add
mov
push
jb
pop
scas
cmp
int
cmp
xchg
std
shrb
sbb
sahf
push
xor
movl
sbb
jbe
jecxz
push
mov
jo
cltd
icebp
cmp
mov
mov
lret
cmp
insb
and
push
xchg
jmp
test
pop
pop
inc
subl
repz
in
test
and
push
loope
jnp
push
and
dec
das
cmp
lods
test
cmp
mov
inc
nop
aam
es
dec
pusha
ror
hlt
fisubl
mov
insb
scas
inc
jno
pop
or
sub
mov
mov
ret
aas
sbb
imulb
scas
push
dec
fsub
adc
mov
test
jmp
add
ljmp
push
mov
cld
mov
xchg
xor
das
lock
stos
cmpsb
iret
cwtl
insb
shll
lods
fadds
jmp
dec
add
cld
in
xchg
out
cmpsl
fnstenv
fnsetpm(287
add
dec
adc
cmp
cmp
add
lock
out
fmul
inc
push
bound
sbb
ss
pop
pop
inc
push
rclb
and
pop
dec
lods
pop
xchg
mov
js
push
addl
loop
inc
cmp
clc
cwtl
mov
xchg
sub
cmp
int
add
fmuls
shlb
nop
inc
pop
adcl
mov
sbb
pushl
shrb
loop
cmp
sub
xchg
add
sbb
lods
lock
pop
and
adcb
adc
sub
mov
aaa
lds
bound
cvtpi2ps
adc
mov
movsl
sub
cld
jnp
xchg
stos
in
lret
fs
pop
jg
loop
pop
jge
outsl
push
pop
getsec
andl
stc
iret
or
or
or
jg
sub
repnz
scas
ja
pop
or
cs
add
rcl
cld
movsl
or
adc
jo
and
xor
mov
in
and
xor
rcl
adc
leave
mov
jp
lea
lock
add
and
shrb
outsb
out
mov
pop
xchg
cmpsl
sub
and
inc
fistpll
mov
xchg
mov
mov
loopne
out
jae
mov
shll
push
fisttps
xchg
into
pop
popf
xor
out
popa
mov
push
cmp
push
xor
int3
cmp
or
rorb
scas
call
repnz
dec
mov
or
or
nop
sahf
mov
mov
jg
mov
xchg
xchg
xchg
int3
cmpsb
push
sbb
lods
iret
cmp
aad
js
cld
fs
sbb
pop
lock
fbstp
lret
stc
sarb
sub
jb
jle
inc
cmp
jecxz
push
lcall
xor
push
cwtl
xor
movsb
mov
pop
or
test
pop
push
xchg
jmp
scas
mov
cmc
mov
hlt
out
xchg
outsl
xchg
inc
xor
sbb
pop
repz
jecxz
ljmp
paddsw
nop
push
dec
ficompl
stos
mov
adc
test
inc
xchg
xchg
sub
or
or
aad
loopne
sbb
mov
pop
rorb
mov
pop
es
cli
xchg
int3
mov
movsb
cmp
xlat
iret
in
jmp
pop
clc
mov
push
mov
in
add
les
scas
sub
xchg
jecxz
out
in
sub
and
mov
push
pop
lret
jno
add
mov
pop
out
in
lahf
insl
cmp
jge
xchg
imul
add
ds
inc
jle,pn
pusha
cmp
sub
mov
nop
mov
pop
mov
lods
add
es
and
pusha
lret
mov
insb
cmp
arpl
push
pop
pop
mov
test
pop
or
sahf
push
push
sbb
or
in
inc
ret
inc
fdivrs
xor
xor
sub
or
adc
pop
mov
ss
loopne
push
xorb
push
xchg
pusha
mov
dec
mov
in
test
mov
movsb
daa
lahf
xor
out
scas
add
js
push
jnp
lret
and
pushf
adc
jnp
ljmp
inc
mov
push
aaa
add
mov
addr16
in
sub
mov
xchg
jge
les
xor
dec
or
repz
call
and
jb
cli
mov
iret
or
pop
push
popf
out
fs
movsl
add
cmpsb
dec
addr16
fdivrl
or
ret
mov
or
mov
push
js
mov
mov
jns
ds
repnz
pop
jno
inc
imul
loope
push
mov
test
shlb
dec
fdivrl
add
jne
mov
cmpsb
test
loop
push
push
push
addb
test
xor
pop
mov
xchg
jno
mov
loope
and
dec
push
sahf
fiadds
mov
push
jae
insl
dec
in
nop
add
mov
mov
shrb
push
dec
xchg
push
hlt
jns
loop
bound
push
pusha
or
xchg
xor
in
icebp
pop
xor
hlt
or
pop
xchg
js
adc
lds
stos
fstpt
jg
es
dec
xchg
int3
std
sahf
mov
inc
ret
test
sbb
lea
lock
iret
movsl
lret
xchg
jecxz
xor
stos
jnp
lock
mov
cld
lret
repz
inc
lds
stc
pop
jg
or
push
repnz
inc
stos
adc
adc
pop
mov
xchg
pop
mov
or
test
out
test
jno
xor
mov
sbb
sub
mov
imul
jo
mov
and
daa
iret
jns
fcomps
pop
imul
xor
push
lcall
hlt
inc
shlb
scas
cwtl
mov
pop
orl
xchg
sbb
and
push
sub
xchg
mov
mov
sub
mov
and
xor
ss
nop
imul
int3
push
test
mov
inc
inc
jns
cmp
pop
push
cmp
push
jno
add
inc
mov
das
jge
ret
gs
sahf
das
push
cmp
mov
subl
lcall
xlat
mov
popf
fldl2t
push
adc
cmp
das
mov
clc
add
movsl
movsl
or
lods
push
and
cmp
mov
inc
or
sub
in
call
cs
test
xor
sub
pop
into
add
nop
ja
xor
cs
xor
sahf
push
ficompl
mov
js
and
jle
icebp
inc
aaa
addb
sahf
pop
adc
jb
or
pop
sub
js
dec
outsl
pop
jne
imul
sub
sbb
mov
test
rorl
scas
add
jno
pushf
mov
testb
inc
dec
push
mov
scas
push
cmpsb
sarl
imul
pop
xchg
dec
mov
pop
xchg
or
icebp
push
xorb
add
xchg
mov
adc
fwait
pushf
dec
aad
and
cmp
daa
add
repnz
test
mov
cltd
in
mov
cmp
push
add
xorl
stc
jecxz
push
in
or
fsubrl
ret
out
or
xchg
dec
push
hlt
sbb
dec
mov
mov
push
sub
pop
ret
jns
push
out
in
leave
ljmp
fcoms
push
shr
add
stos
testl
bound
push
push
enter
dec
pusha
cmc
out
pop
loop
push
loope
fs
mov
inc
in
dec
jle
sbb
test
inc
pop
imul
inc
fidivrl
dec
push
sbb
outsl
dec
roll
inc
add
jno
pop
pop
inc
cmp
pop
mov
jne
mov
divb
je
or
jg
mov
jnp
scas
andl
mov
mov
jb
popa
int3
out
nop
push
or
dec
push
arpl
fmuls
and
fldenv
push
push
outsl
mov
aaa
or
jp
mov
cmp
xor
mov
scas
dec
inc
and
subl
xchg
sbb
or
insb
sbbb
insb
out
xor
outsl
aam
pusha
ja
jne
fbstp
inc
pop
or
imul
iret
adcl
lods
add
dec
insb
insb
cmp
shr
std
out
cmp
mov
imul
mov
lret
gs
fildll
xchg
xor
call
push
push
sarl
xor
into
inc
adc
hlt
icebp
aaa
test
mov
cmpl
pop
push
ret
repz
xor
and
fmul
sub
mov
arpl
xor
jle
outsl
repnz
sub
add
cltd
movsb
jge
mov
mov
rcll
push
aam
outsl
xor
and
xor
fsubrs
fistpl
mov
popf
mov
mov
jmp
aas
xor
cmp
push
or
repz
call
mov
push
lds
mov
je
movsb
mov
push
mov
cltd
addr16
adc
xchg
mov
loope
outsb
mov
pop
xchg
pusha
nop
outsb
ficomps
sub
xchg
mov
dec
mov
xor
jo
mov
ja
lock
xor
adc
pop
popf
outsl
mov
jge
sub
movsb
dec
scas
xchg
or
mov
repz
js
lds
faddp
shll
aad
repnz
pop
jg
add
adc
xchg
cmp
inc
lods
leave
jl
arpl
add
in
clc
xchg
loop
mov
aam
ljmp
popf
xchg
in
icebp
notl
sub
inc
inc
ljmp
xchg
nop
outsl
dec
iret
and
xchg
shll
xor
std
push
les
pop
test
mov
push
sub
mov
adc
cmp
inc
call
mov
xor
stos
dec
cld
mov
ds
fs
adc
repz
or
push
sub
mov
in
xor
sbb
or
nop
mov
pop
popa
xor
shr
jg
mov
xchg
fdivp
pushf
addr16
shll
in
cld
mov
sub
jge
out
in
and
std
nop
fnstsw
and
enter
mov
outsb
fldl
mov
and
imul
jecxz
and
ja
add
fadd
setne
lock
fidivl
test
int3
xlat
insb
or
cmp
loope
mov
cs
rcl
push
ja
push
and
jb
inc
shlb
sub
lcall
jno
pop
or
repnz
xchg
mov
push
jnp
negb
repnz
pop
repz
out
cltd
ror
icebp
lock
cwtl
int3
xchg
stos
stc
push
test
testb
ja
lcall
ljmp
xor
das
xchg
sub
xor
pop
movb
mov
movsl
jl
mov
xchg
adc
bound
loopne
lock
inc
cmp
mov
and
rclb
frstor
lods
inc
ficoms
pop
shl
sub
fcomps
inc
sbb
cltd
repz
xor
and
fs
sub
mov
movsb
or
cmp
mov
mov
icebp
push
insl
jl
mov
and
lret
dec
pop
popf
add
sbb
add
aaa
inc
test
out
in
push
cmpsl
inc
fists
xchg
jb
out
jo
sarl
fbstp
mov
movsb
fucom
test
iret
xchg
out
stos
push
push
adc
and
sub
ret
test
inc
fsubs
test
outsb
scas
mov
div
ljmp
push
push
xchg
cmp
sub
popa
aaa
pop
mov
mov
jl
mov
orb
inc
ficoml
in
loop
jo
sbb
stos
leave
jg
add
lock
mov
pushf
and
mov
sbb
mov
pop
cmp
add
push
icebp
mov
pop
pop
lcall
inc
insl
mov
adc
scas
lock
decl
out
pop
push
sbb
sarb
aaa
ljmp
or
outsl
pop
xlat
aaa
pop
or
sti
ficoml
xchg
jg
dec
mul
aas
fwait
or
stos
ds
cmc
and
stos
in
and
push
pusha
pop
js
out
das
adc
fidivrs
xlat
ds
jae
fsubp
jle
mov
pop
bound
push
xchg
push
add
xor
jb
sbb
sub
fistps
sbb
jmp
jo
mov
test
popa
xchg
imul
sub
mov
or
sbb
cmp
popa
lret
int3
pop
arpl
addl
mov
jg
scas
fimull
xor
daa
push
mov
dec
inc
iret
xchg
push
in
mov
or
inc
fcompl
icebp
mov
inc
addr16
pop
or
ds
xor
mov
aad
xor
in
pop
push
cmp
in
pop
xorl
pop
and
movsl
push
mov
jae
ljmp
out
jmp
cmp
jnp
or
sub
xlat
mov
arpl
mov
jmp
dec
fcoml
push
xor
adc
adc
push
sub
out
call
test
jg
cmpps
push
jp
jmp
jp
shrl
mov
mov
out
imul
inc
sahf
adc
cmp
out
cmp
add
and
cmp
outsl
daa
mov
int
fldt
outsl
push
sbb
andl
jl
into
std
dec
insb
mov
sbb
lret
in
jo
cltd
sarl
lock
lds
sbb
jmp
push
lods
mov
test
cmpsb
jno
mov
sub
push
jno
xchg
add
std
in
sti
inc
enter
insb
clc
jns
fs
cmp
pop
popa
mov
nop
add
dec
jmp
adc
pop
cmpsb
mov
aas
out
and
cmp
jg
cmpb
adc
pop
aad
sub
inc
xor
les
aas
shrl
push
mov
imul
out
sbb
adcl
jb
lea
sub
mov
scas
test
clc
test
into
clc
xor
hlt
mov
notb
inc
push
sarl
insl
cmp
fisttpll
dec
jge
add
jnp
insl
data16
cltd
stc
mov
sbb
push
adc
jno
jmp
aas
fsin
sub
stos
addl
mov
cmpsl
cltd
stc
adc
inc
nop
cmp
fadds
pop
lds
loopne
cmp
push
rolb
xor
lret
push
lcall
push
stc
adcl
in
aas
jae
orl
cmp
es
sub
and
cmp
xchg
test
loop
sub
sub
loopne
movsb
in
mov
ror
push
test
in
mov
popf
pop
imul
movsl
loopne
cltd
add
xchg
bound
pushf
std
jnp
das
ret
fdivrl
mov
call
push
sarb
xchg
daa
arpl
sbb
js
sub
cli
jb
push
fwait
push
dec
scas
mov
or
xchg
pop
mov
sub
lock
xlat
sub
pusha
inc
mov
push
jns
xor
lods
sbb
clc
bnd
out
or
push
ret
sub
and
sbb
lret
mov
push
sub
sub
out
arpl
and
mov
xor
pop
mov
popf
cvttps2pi
rcrb
jae
lret
jmp
sub
daa
scas
ret
ds
or
movsl
test
sbb
ja
dec
lret
sbb
int
xchg
or
aad
mov
sbb
add
fcomps
arpl
dec
jp
jle
pop
mov
test
lahf
cmp
cwtl
jae
inc
sbb
test
mov
aam
mov
orl
ret
and
lret
pop
loopne
dec
inc
lret
jg
fdivr
int
push
add
cmp
movsl
mov
mov
xor
push
jecxz
and
imul
js
xor
out
sub
and
mov
fcomip
push
iret
leave
cld
mov
roll
aas
push
inc
lods
shl
lea
pop
pop
mov
push
lock
fbld
ss
jmp
cmp
cmp
dec
add
jle
lea
or
mov
cmpsl
loop
mov
dec
subl
fcmovb
mov
add
out
xchg
shrl
xchg
bound
outsl
out
push
push
pop
mov
mov
xor
js
lret
sbb
fdivrl
or
fwait
repz
inc
aas
aaa
rolb
pause
xor
add
outsb
or
jecxz
loop
xchg
push
sub
sbbb
sbb
clc
dec
mov
add
aad
aad
sbb
jns
mov
xchg
jb
pusha
mov
repz
in
outsb
inc
push
mov
or
lea
pop
mov
and
ret
cmc
adc
jo
ljmp
xchg
xchg
inc
mov
imul
in
sti
sahf
mov
cld
bound
mov
jo
pop
mov
lds
rclb
sbb
pop
inc
jns
ss
cs
jno
pop
sub
xchg
sbb
lea
pushf
jno
clc
inc
dec
lods
stos
das
test
inc
insb
mov
jb
or
frstor
ds
xor
bound
ret
fiaddl
fdivrl
outsb
outsb
add
jnp
cwtl
xchg
movsl
je
push
adc
mov
daa
jge
push
in
icebp
lcall
mul
gs
xchg
sbb
lock
hlt
jo
dec
mov
lods
push
jae
ret
insb
ret
cmp
adc
sbb
nop
aam
aaa
pop
enter
bnd
mov
repnz
add
sbb
adc
fcmovb
jl
add
popa
inc
push
xorb
jb
loope
push
std
mov
jmp
push
outsb
sub
cmp
in
pop
lret
adc
repz
daa
repnz
mov
xchg
or
nop
jns
mov
pop
insb
xor
movsl
mov
daa
xorl
out
lock
aaa
dec
imul
jns
xlat
orl
inc
sub
frstor
add
xor
sub
push
outsb
mov
test
cs
dec
sbb
lret
les
adc
pop
sbb
add
out
pusha
mov
inc
adc
daa
mov
xchg
cmpsl
aaa
push
add
mov
dec
and
fs
push
pop
pop
rcll
iret
lea
das
addb
sub
push
pop
or
pop
inc
arpl
or
fwait
lds
negb
mov
cld
cmp
and
push
jae
dec
fstl
imulb
adc
dec
mov
imul
xor
mov
push
mov
daa
adc
imulb
sbb
int
fisttps
ljmp
xchg
or
popa
cmp
lods
lret
into
xchg
xchg
xchg
orl
adc
sub
lret
pop
pop
jae
add
out
xchg
pushf
lods
insl
jmp
lods
fldcw
outsb
lods
stc
inc
xchg
pop
call
mov
fisubs
xchg
mov
mov
divb
icebp
out
mov
lea
jnp
call
mov
mov
daa
sbb
sbb
imul
xchg
sarb
out
dec
fisubrl
push
cld
cmp
popa
jp
pop
pop
dec
cmp
xchg
sarb
loopne
sbb
cltd
add
jb
mov
adc
jp
popa
mov
jb
mov
jns
push
and
daa
inc
orl
pop
mov
inc
pop
xor
jge
mov
loopne,pn
cmpsl
push
sub
jne
imul
and
stos
jno
push
push
adc
addr16
pop
xchg
cmp
adc
xor
push
push
mov
fcompl
push
push
add
inc
cmp
movsb
pop
or
pop
arpl
and
mov
adc
imul
data16
in
rorl
mov
stc
ret
rep
or
aam
mov
test
fisttpll
fidivl
fstps
jns
cwtl
arpl
call
ja
xchg
inc
leave
lods
push
lods
and
fs
std
adc
xor
fisubs
sti
pop
pusha
jne
cli
stos
pop
adc
sub
jo
pop
adc
cs
pop
mov
mov
xor
push
adc
repnz
shrb
ss
sbb
out
mov
mov
orb
aam
xchg
adc
mov
xor
pusha
lock
lods
and
xor
aad
outsl
xor
loop
mov
sbb
jle
hlt
nop
jb
and
inc
pusha
mov
lock
inc
pusha
sti
xchg
cltd
test
mov
xorl
inc
or
dec
icebp
or
fiaddl
lock
mov
mov
nop
lea
cmp
stos
iret
jle
outsl
lret
lcall
popa
test
jge
jns
fistpl
test
loope
int
and
cli
jns
int
push
rol
repz
fisubs
pop
sub
test
cmp
stos
test
outsl
rcr
add
lahf
mov
jne
sub
dec
call
pop
adc
sbb
sub
add
rorb
aaa
dec
lock
adc
mull
imul
enter
dec
sbb
mov
andl
add
dec
mov
ret
add
cwtl
cmp
mov
dec
push
mov
icebp
add
subl
sbb
sub
cmp
push
sbb
pop
mov
xchg
in
cmc
xor
jle
stos
rcrl
or
dec
xor
jg
xor
es
push
rcr
inc
cmp
js
dec
dec
outsb
sbb
out
xchg
in
cmpsb
push
aas
dec
xchg
in
sbbb
jle
mov
jle
dec
and
decl
sbb
mov
dec
out
inc
xor
addl
ret
in
jb
ss
js
fcoms
aam
sbb
in
popf
mov
es
mov
test
mov
sbb
mov
inc
sbb
idiv
movb
scas
in
ret
std
scas
sbb
mov
imul
scas
into
jns
es
rcl
pop
mov
adc
sub
mov
push
push
into
mov
cmp
cwtl
jp
aas
divl
addl
mov
mov
lods
and
mov
loop
jae
pushf
mov
imul
fisttpl
inc
lods
inc
in
and
addr16
enter
mov
jo
cmp
add
pop
outsl
in
imul
fidivrs
iret
int
das
dec
mov
out
dec
ja
int3
mov
repz
or
ja
sti
pop
adc
cmpb
xor
mov
out
push
shrl
add
sarl
jno
inc
and
push
add
js
or
ds
push
add
lods
test
push
daa
fstps
inc
xlat
subl
inc
jle
mov
pop
leave
out
aad
test
jge
xlat
sbb
repnz
cmpsb
mov
stos
mov
bound
push
shrb
stos
outsl
das
adc
insl
mov
mov
jl
xchg
fwait
in
pushf
push
mov
cmc
sysenter
add
adc
cmpsb
xchg
mov
sub
dec
mov
out
adc
mov
roll
mov
pop
outsl
popf
push
push
mov
test
ds
mov
inc
leave
xor
std
mov
or
sti
push
fisttpl
pushf
decb
push
pop
shrb
iret
cmp
cmp
push
push
call
cli
lret
xlat
or
or
mov
aad
dec
int
aas
push
adcl
push
rcll
mov
arpl
mov
es
loopne
call
mov
fyl2x
xchg
iret
xlat
sbb
jecxz
add
subl
mov
fsubrs
dec
fimuls
repnz
shll
push
inc
aam
pop
sub
out
ret
dec
jp
stc
dec
inc
xchg
mov
mov
fwait
mov
addl
fsubr
mov
frstor
rcrl
sbbl
or
add
mov
std
lock
or
push
daa
push
inc
insl
test
dec
inc
push
nop
out
and
adc
outsb
inc
in
nop
jle
mov
adc
loopne
push
loope
pop
enter
xor
mov
cmp
neg
cmpb
out
icebp
add
jo
shll
sub
lret
pop
sahf
jnp
stos
aam
ss
jp
neg
or
push
pushf
pop
or
int
pop
cmc
jo
dec
pusha
sbb
dec
in
xor
das
gs
rorb
ret
dec
aad
ja
mov
popf
sti
mov
xchg
sbb
icebp
or
outsb
push
xor
xchg
in
mov
imul
repnz
push
lea
mov
sbb
pop
jecxz
testl
add
aas
mov
sbb
arpl
add
cwtl
dec
cli
inc
cmpsb
roll
mov
pop
adc
jl
movsl
push
shll
ret
sbb
sub
hlt
and
es
inc
cmp
enter
pop
popf
inc
add
fs
sub
jno
aam
and
inc
roll
push
fwait
jno
cmp
out
cmp
xchg
rorl
iret
and
adc
dec
scas
jle
xor
sub
bound
hlt
push
pop
ljmp
push
and
push
cmpsl
insl
adc
adc
fwait
push
shlb
ret
ret
sbb
mov
add
and
or
sub
push
arpl
mov
ds
fidivrs
sbb
inc
roll
popf
out
out
sub
mov
rcr
cmp
rcr
fs
mov
push
mov
frstor
mov
aam
jl
push
push
ret
mov
sarb
inc
popa
jae
hlt
inc
and
sub
lds
lds
popf
or
popf
or
and
dec
sub
adc
shll
sub
inc
scas
insb
mov
je
or
xor
loope
xor
push
cmpsb
addr16
aad
scas
mov
mov
jg
pop
fmuls
inc
test
mov
inc
rcrl
adc
cmpsl
arpl
movsl
clc
stos
imul
sbb
sar
jle
scas
aam
out
mov
aas
idivl
xchg
mov
mov
aam
xor
insb
pusha
push
mov
imul
fildll
hlt
sub
ds
xor
sub
xor
outsb
mov
add
sahf
mov
push
ret
pop
and
cmp
push
pop
push
imul
lods
aad
or
mov
jmp
outsb
icebp
jns
xchg
mov
loop
or
aad
cmp
insb
sbb
ret
sarl
mov
xchg
sub
xor
xchg
mov
imul
arpl
iretw
nop
add
test
jb
or
jb
jl
pop
gs
int
xorb
mov
das
push
ret
sbb
dec
mov
loop
sbbl
mov
outsb
xor
lcall
jg
push
push
mov
sbb
aas
xor
add
sti
lock
sub
add
adc
loopne
adc
xor
data16
cmc
movsb
ds
sub
push
push
jae
cmp
jbe
pop
jae
incl
imul
fstpl
inc
jg
es
lock
xchg
jne
js
ljmp
jae
cmp
shl
jae
xor
inc
pop
and
push
dec
pop
dec
jmp
gs
je
mov
mov
mov
inc
jns
add
shl
imul
add
push
xor
daa
push
out
shrb
cltd
loope
adc
adc
hlt
negl
mov
in
inc
cmp
pop
dec
mov
xchg
cwtl
dec
sub
sub
jg
aam
add
mov
pminsw
add
mov
lret
fpatan
jle
xor
pop
ds
lret
cmp
rcrb
imul
mov
lods
and
movsb
mov
cmpb
push
xchg
dec
repnz
pop
inc
mov
cmpsb
shrb
jo
ljmp
xchg
fwait
popa
lahf
cli
imul
stc
push
xchg
push
in
out
fnsave
sbb
and
pusha
xchg
and
and
js
incl
pusha
cmpsl
ret
jnp
stos
data16
fisubrl
lret
repz
mov
outsb
insb
loopne
mov
mov
in
push
loopew
sar
dec
paddusb
pop
and
gs
inc
jne
jae
mov
mov
pcmpgtw
fs
fdivs
pop
cmpsl
or
or
jb
sub
dec
push
ss
fcomps
or
pop
cltd
add
inc
jle
fmull
inc
lcall
cmp
dec
stc
shl
push
add
fdivp
or
mov
add
xchg
push
dec
cmpsl
aam
insl
sub
aas
scas
sbb
jmp
notl
inc
jmp
inc
cmp
lret
or
rclb
aad
jne
lds
out
cmp
jp
loopne
cmp
mov
lret
xor
daa
jp
leave
add
pusha
mov
mov
cmc
jne
jne
inc
push
jo
pop
inc
sub
and
adc
pop
arpl
cs
jl
les
outsl
insb
ss
sub
adc
push
fs
sub
fbstp
fldcw
adc
mov
das
aas
loope
mov
dec
xchg
mov
xorl
loope
push
sahf
sbb
lret
mov
lcall
or
jmp
fisttpl
lcall
scas
lea
xchg
mov
shl
vmread
dec
cwtl
out
jae
icebp
fbstp
mov
sbb
pusha
xor
mov
or
idivb
cmp
insl
hlt
push
mov
mov
xorb
lods
ljmp
lock
mov
addr16
fwait
ljmp
mov
movsl
xchg
adc
xor
jbe
xchg
push
or
xor
or
jecxz
mov
ret
dec
or
mov
andl
push
insb
and
enter
scas
xor
outsl
clc
add
mov
std
adc
cltd
jb
sub
mov
xchg
cmp
dec
lock
insb
mov
mov
fwait
adc
sub
aad
fidivs
jg
push
adc
sub
or
cli
jno
jae
iret
jg
pop
loope
sbb
add
fwait
inc
mov
sub
je
inc
lods
imull
jmp
sub
loopne,pn
xorl
rcll
cmp
dec
mov
imul
pop
xor
adc
pop
jo
in
scas
push
leave
inc
scas
dec
xchg
cwtl
and
pop
fisubs
jno
sbb
arpl
out
add
negl
add
cs
loopne
insb
insl
into
inc
in
fisubs
pop
leave
jbe
les
jl
iret
mov
dec
push
into
inc
clc
pop
adcl
pushf
pusha
repnz
iret
test
xor
adc
sar
xchg
jge
push
xchg
gs
stos
pop
push
lret
sbb
aas
movl
sbb
xlat
mov
aaa
mov
ror
orl
ljmp
aaa
mov
mov
ret
jbe
test
mov
mov
ret
cmp
aas
mov
rcl
ljmp
shlb
test
lock
clts
lods
test
mov
mov
fcompl
jb
out
out
test
cmpb
and
in
dec
lcall
or
insb
sahf
jae
or
sub
incl
xchg
cmp
jg
popa
and
xchg
dec
add
in
and
cmc
imul
inc
add
mov
fdivp
pop
ret
shrb
int
mov
lods
push
push
imul
jo
jle
repz
inc
pushf
js
push
or
jge
dec
and
xor
stos
fimull
loopne
cmp
pop
adc
outsb
or
mov
jmp
mov
xor
addl
mov
sbb
jno
dec
pop
mov
push
dec
fsubrs
cmp
xchg
bound
dec
aaa
xor
ljmp
jno
mov
dec
in
into
stc
jns
arpl
pop
int3
fimuls
cmpsb
mov
and
rcll
rcll
pop
cmpsl
inc
ljmp
pusha
out
mov
enter
mov
push
jb
int3
into
fsubs
data16
mov
xor
pop
cmp
pop
iret
sbb
fadd
call
ret
in
ss
add
add
sbb
push
das
and
inc
or
cltd
or
sbb
pusha
dec
xchg
adc
movsb
mov
repz
pop
xchg
dec
lea
sar
clc
out
movsb
mov
adcb
mov
and
jge
jns
ret
aam
cmp
bound
das
mov
and
xor
js
fisubrl
push
mov
in
fisubl
loop
lcall
sub
sahf
rcll
setp
daa
mov
pop
or
mov
aaa
movsb
enter
ljmp
push
push
mov
cs
dec
fldt
push
hlt
mov
jmp
xchg
pop
lea
xor
shrb
shlb
adc
out
xlat
in
cli
jecxz
push
push
mov
das
pop
add
mov
jbe
and
pop
jbe
andb
into
xchg
cmp
mov
icebp
cmp
mov
in
add
js
stc
fdivrs
mov
scas
outsb
iret
test
and
adc
cld
lahf
jnp
stc
xor
dec
enter
pop
dec
daa
into
ret
push
dec
fwait
pop
mov
mov
stos
inc
stos
imul
cmp
xchg
sub
fwait
test
shll
les
jmp
sbb
pop
push
xchg
jl
bound
or
inc
cmp
inc
mov
sub
xchg
inc
ja
fwait
test
sbb
cmp
or
cmp
mov
rclb
cwtl
out
mov
pop
test
mulb
das
xorl
mov
xchg
push
jno
leave
or
xchg
lret
and
lret
pop
jno
dec
stos
mov
cli
push
cmpsb
pop
sub
or
push
popa
rorl
jl
shlb
xorl
xchg
jl
outsl
push
rol
jp
jae
add
dec
ss
adc
addr16
lods
push
sub
sbb
frstor
jmp
dec
movsl
lock
ret
repnz
fcomi
dec
loope
div
icebp
cmc
jmp
push
hlt
pop
mov
std
mov
and
cmp
xor
andb
lods
add
in
inc
scas
out
push
sbbl
mov
outsl
jnp
add
out
pop
push
ja
into
or
gs
pop
cmpsb
push
test
movsl
sbb
and
mov
xor
adc
std
sbb
lea
aaa
lret
rcrl
cltd
or
ds
mov
jl
mov
xor
mov
dec
in
push
test
sbb
bound
lahf
add
ljmp
jae
sahf
cwtl
addr16
cmpsb
cmp
sub
push
insl
inc
ret
or
in
ret
sub
jo
das
arpl
shll
or
imul
cmp
and
xor
dec
mov
push
push
int3
jno
jle
push
sbb
decb
mov
jp
rcl
xor
push
push
ret
popa
xor
mov
inc
inc
mov
dec
loope
aas
clc
push
sub
push
jnp
jnp
adc
insl
pop
sahf
xchg
js
mov
pop
aam
sub
leave
paddusw
repz
in
fists
add
xchg
pop
xor
int
lcall
repnz
mov
fstps
cs
idivb
cli
ja
test
mov
hlt
or
jmp
cli
ss
xor
adc
mov
push
gs
movsb
jmp
fiaddl
out
add
roll
clc
xchg
mov
cs
jbe
push
cld
test
ficompl
js
or
lds
sbb
cltd
je
or
pop
ret
loope
fistps
push
ficoms
lret
push
jg
fsts
push
sub
sbb
push
shr
and
cwtl
mov
sti
adc
test
dec
imul
mov
or
lock
pop
lcall
adc
mov
inc
into
pop
lret
stc
dec
jmp
bound
sub
or
insl
mov
insl
sub
repnz
testl
pushf
add
mov
inc
test
test
cmp
push
ret
jl
push
xor
adc
mov
aad
ja
aam
push
and
mov
aas
js
and
and
insb
mov
and
xchg
repnz
fwait
ret
mov
fwait
stc
das
jle
cltd
outsb
mov
rcrl
or
and
iret
testl
fnsave
lret
inc
in
into
retw
outsb
loope
sti
mov
dec
pop
push
xchg
icebp
int
xchg
gs
push
sub
pop
dec
xchg
lret
cmp
imul
cli
aam
add
jle
shlb
inc
mov
jge
add
outsl
in
fucom
and
lret
sub
arpl
adc
cli
testb
pop
jl
das
call
or
sbb
dec
mov
mov
loopne
inc
sbb
sbb
mov
dec
xor
lods
mov
sub
inc
cmp
cmp
and
lock
or
inc
adc
xchg
cmpsb
int3
aas
pop
mull
ja
xchg
adc
mov
enter
addl
jmp
pop
divl
decb
lret
outsl
mov
add
gs
into
push
sbb
mov
mov
mov
insb
jp
mov
dec
add
ret
sbb
fists
xor
adc
xor
adc
add
loopne
xor
inc
xlat
or
and
jb
idiv
cmp
lea
add
and
cmpl
mov
dec
lcall
push
bound
pop
xchg
repz
loopne
jle
aas
loopne
insl
mov
lret
pushfw
push
aaa
rcr
jbe
out
lea
cmc
fidivl
test
lea
arpl
int
shrl
mov
mov
mov
mov
adc
aam
xor
push
jp
scas
jle
lret
and
inc
and
repz
fwait
out
cmp
aaa
mov
mov
lahf
das
jbe
in
push
test
lcall
or
fiaddl
xchg
xor
shrl
std
pop
mov
and
insl
cli
mov
mov
push
jae
cwtl
sub
pop
sub
xor
push
scas
sub
icebp
cltd
or
shrb
shlb
push
and
cmp
les
dec
sbb
jmp
aas
je
push
movsl
cmp
mov
cs
dec
and
jmp
add
sub
data16
mov
int3
outsb
movsb
cmp
loop
sarl
std
pusha
mov
addr16
popa
mov
lods
stos
aam
sub
data16
inc
dec
jno
xor
and
popf
dec
outsl
xor
push
add
les
loope
std
ret
gs
mov
rcl
mov
lcall
sub
cld
adc
in
stc
hlt
outsl
pusha
fisubrs
ss
xchg
sub
dec
sub
aas
inc
fsubrs
daa
push
clc
mov
inc
loope
sbb
je
push
fwait
and
pop
inc
mov
xor
stc
mov
popa
sub
push
sub
iret
pop
pop
mov
xor
adc
or
mov
outsb
jbe
icebp
stos
cmc
test
mov
pop
sti
jno
into
stos
aam
and
add
cltd
in
push
fildl
mov
mov
icebp
sbb
pop
push
shlb
or
sub
inc
test
push
sbb
cltd
xor
add
out
add
stos
hlt
adc
orl
cmpsl
or
repz
in
xor
jle
pop
inc
or
cli
mov
insl
aam
aas
add
out
xchg
jne
in
and
aad
mov
pusha
pusha
mov
sub
pushf
insl
outsb
mov
imul
insl
inc
adc
jae
movsl
addl
sbb
mov
or
into
dec
mov
dec
jb
lods
fisttps
out
movsl
sub
and
arpl
aas
cwtl
stos
mov
jo
dec
or
mov
cmpsl
jecxz
pmulhw
push
loop
cmp
movsl
push
sahf
idiv
popl
sbb
in
lret
das
iret
xor
pushf
adc
test
or
dec
popa
pop
or
sub
push
arpl
addr16
sti
or
adc
xchg
xor
mov
arpl
sarb
sub
add
ffree
pop
xchg
in
imul
movsl
fnstsw
mov
psubusb
adc
inc
clc
xchg
leave
shrb
sbb
and
xchg
jmp
cmp
mov
mov
stos
out
sub
outsl
jbe
loop
int
lea
sub
sub
leave
push
inc
mov
dec
test
fxam
insl
mov
inc
jmp
jnp
sti
popl
shrb
inc
jae
and
cltd
out
and
clc
loop
insl
ret
push
sub
jo
xor
sub
add
in
or
mov
loopne
aas
out
or
and
aas
ss
jne
adc
out
push
iret
rol
mov
xchg
mov
fdivr
jl
xchg
adc
scas
les
test
cmc
lret
cs
mov
lret
adc
dec
notb
mov
pop
jmp
enter
mov
cmp
shll
jecxz
pop
push
lods
ret
test
add
or
push
insl
mov
push
enter
add
jle
pop
xor
xchg
push
out
jae
inc
mov
cmp
mov
hlt
addb
mov
rcrl
fwait
pop
mov
lcall
mov
or
cmpb
std
jns
xor
and
popf
neg
xlat
or
lcall
cmp
dec
fidivl
and
stos
dec
jo
shlb
leave
popf
dec
sbb
cmp
jg
sbb
nop
sub
xor
push
lret
push
mov
jle
cli
jmp
lds
mov
push
decb
in
xor
in
jns
mov
or
lds
sbb
dec
cmpsb
and
and
pop
cld
jo
cmp
popf
mov
cmp
imul
sbb
pop
and
js
sarb
shr
insb
cmp
adc
push
push
xchg
add
xchg
adc
fs
pop
mov
lds
std
push
jl
sub
xchg
mov
inc
pop
xchg
jmp
and
aaa
adc
pop
mov
test
ja
int3
lods
xchg
mov
pop
stc
push
jmp
test
mov
repz
rorl
leave
push
add
mov
out
pop
es
test
xor
push
into
and
sbbb
mov
sar
sbb
lods
fcoms
inc
fnstcw
mov
xchg
mov
xchg
or
pop
mov
gs
imul
leave
cmp
adc
jne
pop
ds
sub
rcrb
cld
inc
loop
and
mov
aaa
movsb
push
jg
lock
ror
and
adc
leave
xchg
xchg
push
jbe
call
cmp
mov
lcall
push
sub
jnp
push
adc
arpl
loopne
xchg
imul
jns
cmpsl
mov
pop
cmpsl
sbb
push
lea
add
adc
mov
js
inc
cmp
mov
sbb
xchg
and
inc
dec
dec
cmpsl
mov
es
fbstp
aad
fistpl
add
dec
mov
add
adc
jge
lcall
rcl
loop
sti
push
mov
shlb
jns
jmp
je
mov
push
lret
cmp
in
cmp
mov
ret
push
pop
mov
scas
daa
int
jp
std
cwtl
lds
fcmovb
xor
xlat
jge
xchg
insl
mov
rolb
pop
and
scas
jp
pop
add
mov
inc
aas
rcll
push
xlat
imull
imul
xchg
aaa
pusha
fwait
mov
ret
insl
add
or
stc
xchg
dec
movsl
jns
or
mov
icebp
sbb
arpl
aas
inc
lret
or
or
clc
jo
inc
scas
imul
call
mov
fistl
insb
jo
xor
data16
out
fucomip
pop
or
xchg
push
scas
enter
mov
mov
push
loope
sbb
jecxz
in
cmpsb
cltd
xchg
pop
adc
test
mov
into
mov
lods
push
ja
xchg
cmp
test
xchg
xchg
push
adc
dec
push
pop
imul
inc
pop
out
push
and
pop
xchg
sbb
sti
mov
xchg
xor
dec
insb
lahf
jae
push
xor
push
cmc
jmp
dec
dec
std
jno
out
and
mov
dec
xchg
cli
inc
nop
fcmovnbe
mov
mov
jae
das
cmpsb
xor
sbb
dec
loop
fnstsw
add
movsl
mov
loop
nop
fidivl
scas
enter
mov
in
popf
lock
pop
mov
pop
fxch
leave
je
in
insl
rclb
push
or
leave
leave
mov
mov
fildll
mov
push
push
test
jecxz
dec
dec
jnp
dec
sbb
roll
push
jne
hlt
aaa
jne
sti
lcall
movsl
out
out
mulb
push
push
stos
cmp
dec
jns
popa
movsb
hlt
xchg
xor
cmp
pusha
jbe
xchg
cwtl
out
clc
inc
imul
sarl
inc
add
and
sahf
mov
in
in
and
sbb
pushf
mov
cmc
call
cltd
or
cmpsl
push
mov
les
pop
lods
int3
enter
out
xchg
shrl
lock
stos
sbb
or
loopne
leave
pop
out
cmp
sbb
xor
in
inc
clc
and
xchg
pop
mov
ja
mov
mov
shr
int3
dec
dec
mov
dec
and
roll
fisttpll
enter
push
lods
and
sbb
stos
push
pushf
shll
fcoml
addl
pop
cmc
repnz
inc
xchg
insb
fs
sub
pop
jns
in
into
cltd
push
push
xor
loope
es
call
add
push
inc
and
jl
jl
xlat
jp
loope
xchg
sub
repnz
xor
pop
mov
jle
or
imul
stos
aam
fcoms
data16
repnz
and
jo
cwtl
jmp
popf
and
add
cld
das
xor
out
pop
xor
movb
pusha
xor
iret
mov
std
mov
fwait
cmp
cmp
jbe
aas
ret
inc
fstp
pop
es
shrb
movsb
pop
mov
and
add
aad
cmp
push
sahf
test
adc
ljmp
ror
scas
fldt
out
dec
mov
data16
ret
nop
jmp
test
xlat
mov
pushf
jle
negl
push
cmp
lret
pop
idivl
outsb
add
jb
dec
out
or
nop
enter
xlat
mov
data16
repz
jp
daa
inc
mov
shll
sbb
xor
popa
scas
out
jne
jnp
jns
divb
pop
lods
scas
mov
call
in
lahf
push
or
ffree
mov
enter
lcall
js
inc
sub
aaa
cwtl
cmc
push
dec
ja
add
push
movb
or
jne
das
mov
out
incl
xchg
jmp
push
fcoms
pop
fwait
mov
dec
and
push
dec
negl
push
dec
mov
cmp
lock
sub
and
out
add
mov
in
and
pop
jp
nop
mov
adc
mov
and
mov
cwtl
lea
sbb
cli
jle
imul
dec
mov
shll
loop
repnz
aad
mov
inc
push
cs
fwait
xlat
fistpl
rolb
ja
shrb
pop
add
idiv
ds
sbb
dec
mov
insl
cmp
stc
mov
jb
mov
cmc
fldcw
mov
mov
adc
movsb
xchg
faddl
dec
jmp
jno
inc
std
or
cli
cmp
lods
push
mov
outsb
jp
mov
mov
cmc
sbb
out
xor
cs
mov
sub
icebp
lret
adc
xchg
mov
arpl
dec
imul
imul
je
aas
subb
or
sub
mov
hlt
add
movsl
mov
js
pop
lea
sbb
mov
jnp
push
cmp
jbe
les
sbb
pop
es
pop
xor
adc
sbb
xor
clc
mov
dec
jmp
cmpl
fisubs
lret
xchg
lods
xchg
or
inc
xor
push
xchg
cmp
push
inc
jae
ret
jg
mov
das
jbe
inc
test
movsb
xchg
jle
mov
cld
dec
jno
mov
mov
jo
lea
adc
out
lea
js
and
jmp
add
das
push
or
in
inc
adc
fldl
cmp
xchg
daa
incl
push
jp
addr16
fwait
mov
iret
ss
loop
insl
fldcw
ret
mov
mov
lret
add
inc
scas
push
sahf
fdiv
in
mov
lea
inc
rclb
add
insb
fisttpll
xor
push
inc
push
inc
dec
enter
pushf
xchg
shlb
insl
push
lds
adc
cmp
xchg
inc
inc
js
mov
shl
sub
std
mov
popa
xchg
adc
add
js
out
addr16
push
adc
sbb
lock
jp
lret
inc
xchg
jmp
mov
sbb
popa
sbb
xchg
add
cmpsb
jno
lret
mov
and
jg
popf
testb
push
popa
sub
sbb
jo
xor
xor
inc
orl
jo
arpl
es
in
iret
sti
sbb
add
push
int3
and
test
mov
mov
ds
push
mov
xchg
aaa
mov
xor
sbb
xchg
xor
xchg
inc
or
mov
insb
push
xor
int3
sub
in
pop
mov
fnclex
cs
icebp
inc
fld
jmp
jp
pop
mov
dec
mov
mov
and
jle
or
xchg
lods
pop
test
dec
or
and
jmp
ljmp
pop
out
ja
jne
or
popf
or
jbe
dec
pop
sub
and
cmc
and
xor
cld
push
push
dec
fidivrs
mov
add
mov
mov
cmp
inc
mov
xor
lods
add
pop
pop
mov
sub
ds
repnz
insl
xchg
inc
sti
sub
dec
lock
insb
mov
push
sub
adc
data16
ja
mov
sbb
das
mov
pop
add
jbe
mov
imul
push
lock
add
dec
loope
insb
leave
and
push
mov
test
stos
sti
popl
or
aam
inc
mov
and
mov
sahf
ss
jns
dec
dec
mov
pop
in
jg
pop
lea
cs
shrb
push
loopne
jbe
inc
shlb
or
and
scas
xor
inc
push
jecxz
adc
mov
or
je
stos
andb
jae
jbe
xchg
fnstcw
js
scas
popa
dec
repnz
enter
xlat
out
xchg
push
dec
in
cmpsb
inc
cmp
std
test
movsl
insb
pop
sarb
mov
dec
icebp
xchg
aaa
test
add
call
pushf
in
adc
xor
or
movsb
add
push
mov
xchg
pop
dec
adc
stc
das
jne
pop
cmpsb
sub
aad
sub
jns
es
or
sub
inc
nop
xchg
xor
xchg
xor
inc
lcall
adc
mov
aas
or
add
js
sbb
jno
out
adc
pop
pop
addl
ja
push
scas
fs
add
adc
inc
ror
push
pop
xchg
out
adc
mov
mov
sbbb
cmp
aad
cltd
mov
pop
outsb
jne
icebp
cmpsb
notl
sti
mov
imul
and
or
mov
loopne
repnz
inc
xor
pushf
fdivs
lock
cmpsb
add
push
ss
and
and
push
xor
xchg
xchg
decl
fldenv
sbb
leave
jecxz
mov
dec
fucomp
fld
mov
dec
out
mov
push
stos
pop
cmp
sub
imul
jno
dec
push
call
cli
push
mov
aam
mov
shll
cmp
push
cmp
pop
cmp
jmp
or
cli
in
test
adc
dec
pop
jb
int3
icebp
and
xor
out
xchg
xchg
jmp
xchg
cmp
stc
cmp
inc
lds
adc
adc
jbe
jecxz
arpl
push
int3
pop
lods
cmc
add
addr16
scas
or
hlt
adc
cmpsb
fldcw
cmp
mov
jl
mov
push
jb
popf
insl
xlat
int
sub
fnsave
dec
into
and
in
push
inc
push
or
pop
addr16
lea
repnz
lret
or
and
jbe
push
inc
pushf
in
sbb
xor
test
test
stc
add
mov
das
adc
mov
xchg
std
fidivrs
dec
pop
pop
insb
inc
imulb
fwait
jo
insl
pop
xorl
jbe
mov
sahf
lahf
sbbl
mov
lods
jb
jg
mov
data16
pop
ljmp
xor
push
out
mov
mov
cld
jnp
sub
mov
cmp
lret
lock
push
mov
mov
xor
mov
ljmp
lret
inc
hlt
addr16
cmc
adc
jmp
in
adc
cmc
imul
xchg
outsb
int
lods
in
inc
add
jp
div
arpl
sub
aaa
or
and
xchg
mov
jmp
inc
xchg
lods
xor
loope
push
cld
es
mov
mov
ror
lock
sub
cwtl
iret
je
xor
incb
rorb
outsl
sub
lock
cs
mov
aas
sbb
adc
jbe
aaa
sbb
fsubs
jmp
ljmp
xchg
fucom
cwtl
sub
scas
cld
xchg
aaa
jbe
bound
jno
pusha
lcall
orb
imul
imul
cmpsb
and
adc
aad
imul
sti
xchg
jbe
in
sub
xchg
test
sbb
pop
call
or
xchg
sahf
jle
xor
mov
js
jo
inc
mov
icebp
fcoms
cmp
push
sahf
mov
mov
pop
inc
stos
jne
repz
xor
ljmp
movsl
add
xchg
fstpt
arpl
pop
jns
int
cmc
arpl
sahf
dec
aaa
pop
inc
aad
clc
and
xor
push
sub
jno
shl
pop
fstpl
push
clc
loopne
pop
lahf
ret
ret
mov
xchg
push
jae
ss
aas
xchg
fisubs
xchg
out
insl
sbb
adc
jp
lcall
out
movsb
inc
mov
inc
sub
and
fistpll
adc
test
pop
push
mov
xchg
mov
call
cmp
mov
or
xchg
idiv
in
jecxz
lcall
add
jbe
push
movsl
inc
jae
mov
sahf
lods
ret
aam
popf
push
mov
cmp
mov
sbb
fisttpl
or
sbbb
jnp
fucomip
mov
or
pinsrw
lods
sbb
pushf
inc
in
add
aad
ja
cli
dec
repz
sub
out
inc
divb
and
jmp
jae
adcl
in
test
cmp
mov
mov
jne
rorb
ror
mov
push
push
in
mov
inc
mov
das
push
insb
fcmovu
dec
xchg
call
imul
sti
aam
sbbb
push
sub
push
aas
insl
addb
pop
div
mov
push
fcomi
cmpsl
hlt
lret
leave
stos
dec
mov
in
add
and
pop
sbb
out
dec
inc
fmul
sahf
bswap
pop
mov
xchg
xchg
sub
fstpl
or
sub
jae
xchg
mov
and
xor
pop
cmpb
adc
scas
mov
pop
lods
jne
outsl
inc
addr16
inc
icebp
push
xor
adc
jno
mov
jnp
sub
inc
cmp
mov
push
ljmp
stc
mov
sbb
mov
into
cmp
lods
xor
mov
dec
psrld
leave
test
repz
dec
out
cmp
push
push
clc
mov
cmp
test
es
cmp
lcall
push
cmp
push
push
pop
mov
sbb
mov
push
pop
or
push
stc
outsl
cmp
adc
stc
dec
ja
mov
mov
insl
mov
hlt
aas
mov
vmread
ds
repz
or
in
loop
insl
je
or
cld
mov
inc
mov
sub
push
mov
inc
out
cmp
fwait
test
mov
xchg
imul
test
and
ljmp
imul
sbb
pop
mov
faddl
mov
inc
cmp
test
lret
loopne
push
mov
add
lahf
pop
xor
dec
mov
stos
mov
imul
clc
in
lahf
mov
shrl
jns
inc
sahf
jnp
out
imul
rcl
sbb
sub
jbe
and
cld
xchg
xchg
and
in
lea
fwait
insb
sub
cmp
or
sub
test
sbb
cmc
push
adc
adc
std
pop
mov
aad
adc
mov
and
sbb
mov
lea
clc
add
pop
cmp
add
and
repnz
mov
test
sbb
lea
xchg
mov
dec
xor
dec
jl
cmc
adc
mov
inc
sahf
rcr
mov
xor
movsb
mov
xchg
sbb
lods
cmp
stos
mov
std
xchg
popf
aad
data16
shr
mov
ljmp
roll
and
mov
popa
lods
xbegin
xchg
add
pop
jecxz
xlat
xchg
cmp
mov
xor
sbb
or
daa
pop
and
or
lret
push
lods
jmp
inc
test
push
cmp
pop
mov
add
or
xor
rclb
fs
lock
xor
mov
je
out
cmp
sub
in
push
fnstsw
mov
add
adc
js
sbb
in
mov
sahf
add
add
xchg
cmp
jl
mov
call
outsl
divb
mov
daa
or
or
mov
repnz
inc
ficompl
fsubs
and
out
dec
pusha
sti
loope
rol
int
outsb
mov
out
adc
lea
rcrl
test
xchg
adc
popa
pop
stos
popf
mov
xor
push
popf
mov
jmp
outsl
int3
add
mov
js
ficomps
jno
or
jne
mov
cmp
mov
push
dec
cmp
cli
or
clc
outsb
jp
scas
call
fcmove
lret
fbld
ret
insl
jecxz
sub
push
push
pop
push
orb
push
push
inc
jmp
testl
or
jmp
mov
divl
lret
fldt
xchg
int3
mov
pop
sbb
out
pop
sbb
aam
add
inc
adc
and
xchg
add
scas
in
dec
xor
inc
shr
xorb
sub
enter
mov
fistpll
scas
insb
fisttpl
mov
push
pop
xor
xchg
outsb
push
lea
sarl
cmp
jmp
loop
jle
adcl
outsb
out
loopne,pn
adc
mov
fidivs
fistpl
dec
mov
sarb
and
add
fcompl
xor
addr16
adc
mov
mov
pusha
mov
push
sti
xchg
xor
ljmp
addr16
mov
inc
shll
subb
cmpsl
cli
push
out
mov
jp
lds
orl
xchg
cmp
outsl
mov
hlt
scas
pop
xchg
xor
shrb
sbb
dec
cmp
sbb
js
fnstenv
cmp
adc
lahf
outsl
roll
pop
mov
xchg
lcall
test
sub
pop
add
dec
sub
stos
in
inc
in
icebp
mov
repz
mov
in
pop
sub
adc
push
jo
pop
fsubl
cmp
aam
mov
nop
loop
scas
xchg
sahf
and
mov
lea
js
push
pavgb
cmp
loope
outsl
mov
hlt
cwtl
repz
adc
out
jge
loope
lea
lock
mov
sbb
xlat
cmpsl
icebp
je
outsl
cltd
sti
mov
ss
jle
mov
sub
xchg
xor
lods
add
xchg
pop
mov
test
mov
mov
leave
add
dec
pop
dec
nop
push
or
fucomip
aam
icebp
add
sub
mov
xor
mov
jp
bound
pop
es
sub
repz
sub
push
sbb
inc
or
cmp
mov
sbb
pop
outsl
mov
in
pushf
cwtl
je
fiadds
mov
inc
pop
movd
scas
je
lret
jle
xchg
push
lcall
xchg
pusha
mov
pop
and
inc
sarb
pop
arpl
adc
pop
enter
xor
std
sbb
push
inc
mov
mov
dec
or
push
add
pextrw
xor
aaa
repz
cmp
lcall
fwait
mov
enter
jecxz
jno
sub
and
jnp
mov
mov
mov
push
jbe
test
loopne
mov
repz
imul
mov
les
lahf
sub
pshufw
pop
mov
clc
iret
sub
cmp
xlat
stc
fistpl
xchg
sub
arpl
push
xchg
inc
xchg
mov
pop
pop
adc
mov
popa
lcall
fs
movsb
dec
lret
bound
add
xor
pop
mov
fcmovnbe
repz
test
sub
mov
xor
cmp
arpl
or
sbb
ja
sbb
outsl
ljmp
fdivrs
fxam
lods
adc
mov
out
in
adc
lret
mov
dec
fsubs
mov
mov
xor
mov
out
jg
jbe
mov
arpl
mov
mov
aad
mov
insb
inc
or
shrl
adc
sub
push
out
sbb
test
repz
inc
rclb
jno
mov
repnz
hlt
push
dec
insl
xor
or
xor
rorl
andb
out
es
dec
cmpsl
ret
inc
arpl
or
push
out
adc
xchg
push
mov
ja
sbb
jp
push
outsb
in
sbb
push
pop
adc
rcrl
sahf
or
xchg
addr16
and
insb
ss
xor
add
push
inc
inc
pop
mov
scas
jb
and
mov
mov
je
fcoml
cmpsl
sub
ror
enter
das
in
push
xor
sub
xorb
leave
mov
sbb
jg
shlb
dec
pop
push
lds
das
or
aam
pop
hlt
sbb
mov
insl
into
pop
mov
ficomps
aas
xor
rolb
mov
out
push
lcall
pop
sbb
inc
cmpsl
out
cmc
xor
sbb
test
xor
insl
ffree
adc
add
iret
aaa
je
jle
inc
or
push
pop
mov
int3
inc
ret
popf
ficomps
out
adc
xlat
rcll
iret
fmull
mov
mov
mov
jmp
int
push
popa
sti
mov
pop
mov
push
jmp
or
stos
add
std
fidivl
outsl
or
or
jge
mov
stos
test
fadds
sahf
flds
lea
cmp
xchg
jl
arpl
pop
leave
cmp
fsub
pop
out
ds
aad
jle
filds
and
and
std
sbb
mov
stc
adc
push
out
inc
scas
push
mov
ret
insb
data16
xchg
dec
lods
daa
daa
pop
in
mov
sahf
cmpsl
mov
lcall
lds
in
jno
sub
in
cld
adc
pop
call
sbb
aas
test
sbb
icebp
orb
negb
lahf
pop
fdivr
xor
loop
rcr
or
cmpsb
ja
outsl
adc
mov
xor
cmp
push
mov
ja
inc
push
xchg
inc
test
inc
xor
loop
pop
fistpll
sub
jb
push
imul
pushl
jae
dec
mov
cli
jp
ret
mov
orb
jg
arpl
pop
push
adc
aam
cmc
lcall
fstl
adc
jmp
lret
std
cld
xlat
hlt
inc
dec
fidivrs
movsl
xchg
scas
int
out
xchg
sbb
fmull
arpl
cmpsl
xlat
or
mov
and
lea
test
pop
idivl
push
pcmpgtd
add
pop
jo
and
fcmovnu
aaa
mov
or
mov
outsb
xor
xchg
fbstp
mov
jl
adc
or
sub
js
out
cmpsl
or
mov
xchg
jne
pop
movsl
cmp
in
sbb
addr16
and
or
adc
jge
scas
mov
mov
cmp
lods
xor
iret
jge
cmp
in
icebp
sub
in
pop
xchg
push
rclb
jl
aam
orl
fldenv
addr16
inc
jl
scas
pop
mov
movb
fnsave
scas
mov
push
cmpsl
cmp
pusha
int3
mov
pushf
pop
pmaddwd
dec
fisubl
sub
loop
shll
add
cmp
push
inc
xchg
dec
in
sbb
mov
rol
popa
sub
mov
cmp
in
mov
push
outsb
or
cmpsw
sbb
push
push
fwait
adc
jge
mov
pop
fidivl
leave
incl
fnstsw
cld
adc
and
ja
mov
push
popf
dec
mov
pop
sbb
lret
nop
stos
aaa
lcall
insl
idiv
cmpsl
push
ficoms
xchg
jae
stos
fimull
sub
mov
cwtl
jmp
repz
insb
arpl
test
lods
jecxz
cmp
loopne
adc
gs
imul
add
popa
push
ret
nop
lret
arpl
mov
arpl
jg
mov
sahf
aaa
dec
mov
lods
cmpsl
inc
std
xchg
shlb
pop
daa
les
popa
and
enter
fimull
adc
les
mov
lret
shr
mov
ficoms
call
lods
push
call
xchg
mov
push
and
mov
mov
ljmp
inc
mov
mov
inc
out
dec
aas
or
fdivrs
lcall
mov
fisttpl
xlat
sbb
nop
push
fsubr
out
lahf
push
push
add
out
adc
aas
add
add
fstpt
out
mov
jle
pop
xchg
cmp
mov
add
mov
jl
and
popf
lret
adc
mov
pop
jp
ret
out
xchg
adc
or
mov
filds
dec
xchg
inc
cld
pop
fnstcw
sub
sub
loopne
and
or
jae
mov
fwait
test
add
cmp
mov
insb
das
in
mov
or
dec
std
cwtl
pop
push
mov
fisubl
ss
mov
sub
add
ds
out
xor
inc
into
ret
dec
fistpl
enter
aas
cmp
cld
int3
idivl
adc
addl
adc
jbe
dec
out
fisubl
inc
call
rcrl
jno
cmp
pop
sbb
mov
cmp
aam
fstpt
add
ds
mov
cwtl
icebp
sbb
repz
xor
enter
stos
testl
cmp
cld
adc
fsubl
pushf
in
push
sub
push
cmp
sahf
fmull
mov
add
sti
frstor
mov
loop
and
insl
ja
jg
movsb
rorl
and
mov
mulb
in
dec
mov
cmp
test
jns
inc
or
fadds
sbb
xor
inc
lods
xchg
push
xchg
pop
xor
add
test
jbe
dec
xor
inc
cld
mov
dec
cltd
fadds
push
sbb
lcall
cs
loopne
lods
cmp
sbb
gs
xor
sahf
shlb
lods
fildll
dec
sahf
xchg
add
adc
mov
pop
test
adc
subb
mov
cmpsl
sahf
stc
push
in
xor
jge
cld
push
cld
pop
lret
or
add
loop
pushf
pop
imul
popa
xor
aam
enter
adc
popl
dec
fs
es
jnp
orb
mov
xchg
insl
pop
loopne
popf
loope
sub
xchg
call
popf
mov
mov
dec
or
mov
xor
push
clc
sub
ss
xchg
data16
mov
rcrb
mov
fsubs
sbb
or
pop
push
les
stos
dec
jno
jo
adc
jae
stc
cmc
fisttpll
imul
ds
lods
dec
mov
aas
mov
mov
cmp
xchg
xchg
cmp
xor
or
inc
add
sar
jnp
dec
add
sbbb
cltd
ret
or
push
adc
pop
out
pusha
push
sahf
scas
mov
ljmp
pusha
stc
movzbl
sub
fmull
roll
jo
cmp
bound
ja
outsb
mov
and
pop
scas
fcmovnu
sarl
xchg
out
addr16
cwtl
movsl
mov
sahf
cmpl
add
outsb
imul
pop
out
out
loop
rcrb
ss
repnz
cltd
jp
movsb
je
insl
inc
mov
cmp
jo
jo
sbb
cmp
ret
inc
into
add
jle
sar
popf
add
sar
std
xchg
in
inc
push
xor
mov
mov
jae
cwtl
out
mov
xor
dec
mov
adc
jbe
or
out
scas
mov
and
out
pop
lea
shlb
cs
aam
mov
movsb
sub
jmp
sub
cmp
stos
fisubl
test
jnp
mov
fwait
sub
xor
shll
and
sub
negl
cltd
jecxz
inc
cmp
xchg
aas
loop
sub
xor
stos
jge
sub
jle
in
in
mov
es
fwait
test
and
push
outsl
pop
jnp
cmpsb
adc
fistl
mov
aad
inc
daa
mov
add
mov
cmpl
scas
cmp
fistpl
sbb
cmpsb
lret
xorl
sbb
or
push
xchg
xchg
or
jns
cltd
mov
adc
jmp
into
call
and
addr16
jg
clc
and
adc
jle
gs
lret
mov
mov
into
fwait
movsb
cs
aas
fnstsw
loop
dec
inc
push
adc
das
push
test
fwait
cmp
iret
inc
sub
mov
outsl
mov
jb
mov
or
pop
es
jmp
cmpsl
sbb
daa
push
js
aam
dec
or
aad
pusha
mov
dec
sub
out
in
cmp
insl
sti
stos
xor
mov
lret
xchg
loop
dec
or
lods
cmp
xchg
shrl
mov
sbb
adc
sub
out
repnz
cmp
hlt
jb
push
icebp
nop
sub
mov
or
faddp
pushf
push
pop
mov
out
xor
pop
push
mov
dec
and
cmpsb
pop
faddp
fs
push
cwtl
arpl
mov
or
js
adc
lods
xchg
dec
or
ret
xor
inc
out
mov
push
sub
out
sub
aam
jae
fwait
mov
ret
xchg
cmp
push
int
imul
inc
xlat
sub
repz
jno
jge
add
push
aaa
orl
gs
pop
or
outsb
mov
mov
xchg
xchg
call
or
jae
mov
inc
xchg
adc
inc
notb
fmull
pop
dec
sti
shlb
fstps
fcompl
cmp
jmp
and
gs
adc
mov
out
dec
pop
lret
dec
fistl
test
inc
shll
aaa
adc
repnz
dec
adc
je
sbb
xchg
add
nop
enter
xchg
jb
and
mov
inc
add
pop
inc
jo
adc
sub
add
and
stc
push
xor
mov
xchg
std
adcb
adc
jae
imul
xchg
shlb
es
dec
stos
inc
jge
bound
dec
cmp
adc
call
mov
jg
call
std
mov
stos
scas
pop
imul
inc
xchg
fdivrs
in
pop
pop
in
clc
xchg
in
push
xchg
adc
pushf
insb
xchg
jg
push
test
mov
lahf
ss
insl
ja
in
out
add
sbb
int
fimuls
in
inc
scas
sub
mov
std
faddl
mov
adc
repnz
cli
xor
push
loopne
sub
in
xchg
imul
mov
mov
int
jnp
push
fisubrl
ds
dec
add
stos
mov
js
ror
movsb
sub
or
and
xor
aad
inc
into
lahf
xchg
pusha
push
pop
inc
rolb
inc
mov
in
pusha
lcall
or
test
lcall
out
subb
idiv
mov
xchg
xor
shll
jne
addb
ficomps
jl
xlat
mov
cmp
popa
dec
and
and
stc
lret
iret
negl
mov
cltd
lahf
cmc
dec
mov
inc
mov
lea
test
jmp
lcall
xchg
rcll
stos
push
jp
pop
lock
lods
jge
mov
mov
shr
dec
dec
xchg
and
or
out
pop
imul
cmc
cmp
jns
xchg
cmp
pop
pop
mov
jne
dec
mov
fisttpl
jp
push
loope
lds
add
enter
mov
xor
cltd
popf
les
repnz
mov
sbb
jp
and
cli
cmc
cmpsb
mov
or
pop
xchg
cmp
adc
out
inc
mov
js
inc
in
jo
xor
and
cmpsl
xor
push
sub
cmpsl
dec
xlat
lock
jae
pop
jl
mov
in
mov
stos
pop
xchg
mov
clc
movsl
xor
xlat
jle
jg
add
mov
out
aaa
rcrl
dec
add
xchg
imul
cs
sub
mov
or
sub
dec
and
jmp
jl
xor
xor
cmp
rcrb
orb
stos
movsl
mov
cwtl
dec
loop
fists
push
stos
push
sub
stos
or
pop
jno
push
aaa
inc
mov
out
xor
scas
nop
rorl
ficoms
and
xchg
sub
jae
xchg
cmp
sub
jle
push
add
jmp
mov
inc
sub
add
jb
mov
push
jle
outsb
std
repnz
lcall
pop
push
sbbb
mov
or
js
dec
sbb
or
cmpsl
xor
sub
xchg
pushf
lret
mov
sub
imul
das
jp
shll
mulb
mov
mov
repz
push
mov
ror
pushf
jns
sbb
cmp
mov
pop
icebp
mov
jnp
leave
sbb
or
mov
push
gs
xchg
xchg
das
icebp
jo
ret
movsl
out
roll
sbbl
adc
lcall
pop
cmp
mov
daa
loopne,pt
pop
bound
push
xchg
xor
icebp
fldt
pop
mov
jle
jecxz
ret
mov
xchg
std
cltd
subl
in
dec
pop
jp
add
xor
jecxz
das
lret
shlb
adc
stos
adc
mov
in
mov
push
dec
push
xor
push
cmpsl
imul
xchg
lret
mov
push
jl
or
and
mov
iret
leave
pop
mov
test
inc
iret
xlat
and
data16
lods
lret
mov
aaa
out
lods
cmovp
sbb
jns
mov
xchg
mov
imul
std
jno
movsb
scas
mov
xchg
inc
xchg
sar
sti
xchg
adc
sbb
das
popa
add
xor
or
mov
mov
push
outsb
inc
icebp
push
dec
divb
dec
in
jl
mov
jp
lcall
or
xchg
lds
xchg
or
stos
loop
int
cmp
sub
xchg
sub
popa
sahf
ds
enter
fstpl
xor
mov
fidivrs
cmp
dec
sbb
mov
add
into
cmp
insl
push
jmp
pop
mov
ja
test
ret
jno
fdivrl
xchg
fs
loop
or
mov
sbb
mov
push
icebp
mov
xchg
gs
xlat
push
xorl
fstpt
js
stos
test
outsb
push
adcb
and
jmp
popf
nop
or
jg
cs
or
fstp
xor
cmp
jns
cmp
jns
movnti
loop
fidivrs
lds
adc
test
gs
lret
fwait
pop
enter
xchg
mov
add
int
mov
sub
mov
pushl
pop
or
push
std
xchg
add
pop
cmpsl
add
js
daa
sub
jno
mov
jp
push
cmp
lret
pop
push
daa
shrb
push
notl
add
adc
xor
adc
push
mov
lds
xchg
push
pop
mov
pop
pop
sub
enter
add
dec
fmull
dec
cmpsl
and
push
xor
out
add
cli
or
lds
fmull
mov
cmpsb
sub
dec
std
sahf
sbb
inc
sub
dec
jp
sbb
xchg
inc
std
cs
pop
stos
xchg
sbb
mov
movsb
sbb
lahf
pop
loop
push
les
loopne
fadd
adc
cwtl
push
jecxz
xchg
dec
push
add
shll
popw
add
sub
loope
xor
insl
jno
loopne
pop
mov
sbb
or
and
dec
pop
lock
dec
into
jecxz
fisubrl
adc
and
aas
aam
xor
sub
ror
jge
jno
inc
add
fdivl
in
mov
gs
imul
and
shrb
push
clc
pushf
fadds
rcl
out
mov
leave
aad
jecxz
and
test
jmp
dec
sarb
arpl
xchg
cltd
jo
and
pop
loope
ja
or
aad
mov
popf
sarl
enter
push
sbb
lods
lcall
pop
in
fisttps
out
xor
clc
mov
inc
rcrl
movsb
ljmp
loope
push
aas
cmp
jae
mov
sti
cltd
test
pop
pop
adc
leave
xchg
or
cmp
les
dec
sub
add
mov
sbb
mov
sub
mov
gs
in
pop
leave
mov
lea
testl
in
sub
pop
add
mov
cmp
and
push
xlat
rolb
push
cmp
rcrb
into
js
stos
and
xchg
aas
cld
jno
mov
mov
jb
test
ja
or
sub
xchg
and
fimull
in
dec
push
fldcw
cmp
arpl
adc
in
xchg
mov
mov
xlat
mov
add
inc
mov
dec
jl
inc
fwait
popa
xchg
cli
out
data16
das
jecxz
and
cwtl
mov
fcompl
clc
add
mov
mov
sbb
or
or
pop
push
rcrl
mov
sbb
jno
mov
dec
ja
in
and
jp
xor
imul
inc
outsb
lea
add
mov
jmp
cmp
mov
jne
imulb
rolb
pop
lcall
cmp
mov
cmp
cmp
mov
cwtl
testl
dec
dec
cwtl
dec
les
cmc
shlb
mov
int3
repnz
push
xchg
xor
cmc
lcall
cmp
mov
mov
push
insl
fstps
out
mov
in
sbb
fists
fbstp
pop
mov
xor
aaa
xor
mov
fsub
cmp
push
pop
push
add
subl
in
fsts
jae
dec
movsl
or
mov
sub
in
pop
adc
neg
cs
adc
cmp
sub
pshufw
or
inc
jge
dec
test
inc
mov
call
jns
jae
xor
mov
pushf
push
dec
test
andl
push
pushf
jo
mov
or
dec
adc
sub
mov
iret
das
test
dec
lcall
and
shl
ret
mov
in
xlat
dec
mov
setae
ret
or
inc
insl
stos
xchg
push
lods
cs
mov
xorl
jnp
jp
xchg
sti
mov
jo
dec
xor
ret
ficoml
mov
sbb
pop
lds
sahf
cmpsb
hlt
test
mov
jge
movsb
sub
mov
xor
jg
mov
fs
pop
dec
cmp
inc
mov
xchg
shr
sub
or
stos
fnstenv
lret
adc
xchg
mov
arpl
cmp
scas
xor
push
ret
jg
mov
in
push
cmp
into
ds
in
sbb
mov
insl
mov
xchg
inc
int3
xor
loopne
mov
xlat
out
mov
xlat
iret
fsubrp
mov
lret
add
fcoml
lea
aas
xchg
sub
sti
ficompl
popf
xchg
push
jae
dec
iret
idiv
sub
sub
sbb
xor
cmpl
dec
sbb
outsb
sbb
sarb
mov
outsb
popa
xor
ret
in
aam
add
and
add
testl
sbb
inc
lahf
xor
inc
sbb
cmp
cwtl
rclb
sbb
inc
pcmpgtb
movb
cltd
data16
int3
ljmp
xchg
push
xchg
int3
push
cmp
push
ret
jnp
and
pushf
mov
inc
scas
and
mov
mov
jp
imul
or
push
aam
lods
jae
loop
xchg
mov
andl
sub
push
sahf
jmp
lock
aad
ja
or
sahf
aaa
mov
loopne
incl
dec
cmpsl
nop
xchg
and
add
mov
ss
jb
jns
in
test
pop
fs
leave
sbb
dec
jno
pop
loop
int3
lods
je
mov
imul
aaa
push
mov
mov
mov
add
das
lahf
nop
cmp
mov
xor
lret
out
enter
mov
cmp
sahf
xlat
fimull
and
cmp
xor
push
test
call
and
mov
xor
mov
popa
sub
jno
sbb
imul
push
fstpl
push
jmp
push
mov
hlt
popa
in
mov
popa
add
andb
xor
pop
jae
xorb
push
mov
xor
pop
dec
arpl
mov
dec
sahf
ljmp
pop
loope
nop
sbb
mov
push
sti
pop
outsl
push
addr16
call
add
scas
inc
aam
repnz
fisubl
test
add
pop
inc
icebp
pop
imulb
adc
mov
jg
in
sub
pushf
mov
mov
int
pop
sbb
push
mov
insl
ret
mov
and
cmp
ds
xor
pop
push
adc
idivb
mov
cmp
push
jb
cmpl
xchg
addr16
push
fsts
adc
mov
int
ror
out
data16
mov
xor
rsqrtps
dec
in
cmp
push
fnstsw
sbb
add
repz
into
pop
mov
nop
pop
jbe
mov
cmc
dec
pop
mov
push
ret
and
jle
jecxz
xchg
jge
add
pop
movsb
cmc
imul
ljmp
fidivrs
sbb
ret
imul
frstor
iret
lock
push
bnd
cmc
in
decb
sub
das
cmpl
sti
cld
mov
push
adc
lcall
mov
push
sbb
es
shr
icebp
popf
cmp
mov
addb
hlt
dec
les
cmp
mov
test
xchg
jae
pop
int
fstps
pop
inc
fcmovnbe
shl
scas
jae
dec
or
scas
inc
ret
insl
mov
scas
mov
in
adc
out
outsl
out
rolb
sti
cmc
ret
push
call
push
dec
fs
sbb
out
insb
and
jg
fstps
aas
cmc
sti
pop
mov
push
bound
insb
movsb
push
js
and
shrb
loop
push
iret
mov
xchg
nop
outsb
dec
push
dec
hlt
repz
and
sbb
data16
lahf
rcrl
inc
int
jbe
shr
or
rolb
int
inc
and
or
push
fisubl
mov
rclb
je
adc
pop
push
insl
sti
lret
adc
cmp
fdivl
sbb
cmp
xchg
sub
or
stos
xchg
adc
mov
push
push
push
push
test
jno
adc
test
out
mov
jge
cli
fstps
or
jbe
std
mov
mov
jge
popa
cwtl
push
ljmp
add
push
pop
dec
sahf
sub
xchg
sbb
pop
push
push
lods
mov
mov
lods
loope
xchg
xchg
mov
adcl
popa
roll
scas
dec
lret
rcrl
sbb
pusha
cmp
push
inc
sub
push
cmp
jecxz
ja
rcrl
jbe
test
std
repz
dec
dec
outsl
sbb
cmp
in
push
adc
data16
xor
jns
pop
add
jnp
shll
mov
loopne
arpl
call
xchg
ljmp
pop
jb
xor
shr
rcrl
adc
adc
mov
sbb
popf
ljmp
ficoms
loop
std
mov
call
mov
mov
or
int
inc
sub
mov
fsubrs
shll
mov
jmp
inc
pop
ret
andb
jp
mov
js
int3
add
loop
push
add
scas
shl
aad
cmp
pop
sub
xchg
outsb
xor
test
push
mov
mov
sbb
jp
xor
inc
mov
test
add
or
pop
push
nop
mov
mov
cmp
les
dec
mov
pop
mov
daa
lds
mov
jmp
jge
fstpl
push
stos
pop
pop
fwait
cmp
out
lret
loope
xchg
mov
shll
inc
pop
test
xchg
inc
movb
popa
jns
push
mov
push
xchg
cmp
arpl
inc
rclb
pop
mov
fcmovnu
std
ret
add
jecxz
sub
popa
rol
adc
movsl
adcl
xor
inc
cmp
mov
xor
mov
subl
fsincos
inc
sbb
fldt
lods
sub
popa
sub
cmpb
or
dec
dec
clc
push
add
jmp
mov
mov
inc
nop
inc
in
insb
jo
jmp
cmp
mov
sbb
imul
lods
push
leave
fsubrl
leave
mov
cmp
in
mov
icebp
mov
clc
lahf
incl
sbb
xchg
mov
sbb
in
dec
fnstcw
mov
out
or
adc
cli
inc
inc
jae
sbb
out
in
mov
sbb
jmp
pushf
rcr
xor
arpl
sbb
sbb
fcmovnb
je
popf
mov
mov
clc
rorl
inc
mov
ret
adc
aas
xor
xor
cld
rorb
mov
pop
arpl
arpl
inc
popf
xchg
lret
arpl
cmp
popa
scas
test
testb
inc
shll
imul
lods
inc
push
push
push
mov
out
iret
sbb
test
adc
sbb
clc
daa
test
xorl
xor
out
mov
movsl
jmp
popf
fistps
push
into
ljmp
fadd
cmp
dec
adc
push
sub
out
stc
xor
leave
mov
adc
rcrl
lea
cmpsl
aaa
aad
and
or
divb
fimull
mov
idivb
cltd
dec
dec
gs
mov
add
rcrl
push
pop
in
mov
movsl
jae
iret
and
or
and
enter
pushf
adc
out
mov
in
or
in
pop
decb
cmpsl
mov
cmpl
sbb
aaa
xchg
mov
dec
xchg
dec
in
xchg
adc
push
int
inc
mov
ljmp
sbb
xchg
sarb
pusha
or
cltd
push
add
test
in
popa
cmc
addr16
in
fdiv
aad
test
mov
sbb
xor
scas
jg
stos
dec
and
lods
ret
xchg
inc
and
das
movsb
xlat
or
mov
jnp
pop
push
addr16
icebp
sub
nop
ja
int3
shll
pcmpeqw
test
adc
pop
push
xor
idivb
xchg
xchg
pop
jns
sbbb
aaa
sbbb
mulb
xchg
mov
scas
das
mov
jo
mov
xor
cmp
hlt
mov
lock
inc
pop
jne
mov
jae
stos
push
xor
add
insl
mov
mov
nop
and
push
dec
in
push
call
ljmp
push
cmc
xchg
in
int
out
inc
jb
cmpsl
ret
xlat
xor
mov
mov
sub
inc
nop
push
lahf
pop
xchg
imul
fisttps
pop
je
push
sbb
ljmp
xor
jb
sbb
ret
andb
test
xchg
adc
ret
pop
mov
push
ret
cmpsb
xor
push
or
mov
adc
cmp
pop
lret
hlt
add
das
cli
addb
mov
cmp
and
dec
mov
adc
nop
mov
bound
adc
scas
sub
sbb
test
dec
and
pop
int3
mov
dec
xchg
in
into
aam
mov
cmpl
mov
jg
pop
leave
cwtl
cmc
sub
adc
or
xor
hlt
je
push
js
dec
dec
xchg
iret
enter
mov
ljmp
mov
repz
lea
inc
jb
cmp
in
add
adc
subb
sub
mov
repz
pop
mov
xor
fs
lret
dec
inc
daa
dec
pop
repnz
and
mov
adc
lcall
xchg
daa
mov
pop
inc
xchg
lds
push
lods
mov
or
pop
jl
cmp
mov
mov
sub
into
in
inc
lahf
pop
mov
orl
mov
sbb
cltd
jns
and
and
sub
pop
push
dec
insl
mov
push
aas
cld
pop
cmp
fcmove
and
enter
in
push
sbb
pop
mov
cmp
push
leave
rolb
fsubr
jl
nop
lahf
cmp
xchg
mov
inc
fiadds
push
cltd
add
lods
xchg
mov
mull
adc
mov
cmpsl
dec
in
fs
ficoms
dec
adc
outsl
sub
sbb
mov
and
pop
sbb
test
push
in
pop
lea
push
adc
shlb
shr
mov
dec
popf
or
gs
pop
std
cld
push
ret
jne
xor
cmp
fidivs
cmc
sub
or
push
shlb
mov
rorb
jge,pn
mov
mov
xor
pop
das
cwtl
mov
es
in
cli
hlt
inc
test
mov
cmp
lds
hlt
pop
std
push
aam
mov
xor
popa
mov
insb
xchg
idivl
xchg
xor
xchg
mov
std
loopnew
daa
mov
xchg
stc
inc
imul
pop
sub
rolb
mov
push
inc
inc
or
or
loopne
decl
push
mov
jnp
lahf
pop
mov
jnp
mov
pop
and
fisttpll
adcb
pop
pop
mov
sti
ret
cmpsb
out
mov
popf
test
mov
outsl
and
cmp
sub
mov
test
adc
sub
jp
les
and
lret
insl
scas
pop
xchg
mov
jo
sti
out
es
leave
inc
push
lods
dec
push
xchg
mov
jmp
aad
add
jge
test
sub
cmp
hlt
pop
jo
xlat
ja
cmp
js
pop
inc
stc
imul
rcrl
repz
mov
mov
push
mov
jp
and
imul
mov
sbb
cmp
sub
and
jecxz
sub
sbb
imul
aam
sbb
out
aaa
mov
xor
mov
xchg
cltd
adc
mov
xchg
scas
pop
xchg
cmp
or
in
xor
sbb
dec
fmulp
push
popa
mov
loope
pop
sahf
dec
inc
out
mov
fidivs
xchg
xor
sahf
mov
mov
pop
std
sub
ret
jle
adc
mov
jg
mov
sbb
shrb
mov
inc
repnz
out
cmp
pop
mov
aam
sbb
out
shrl
fs
jb
dec
addr16
mov
mov
fldl
mov
add
add
clc
and
mov
push
or
or
push
jge
add
aam
inc
mov
dec
pop
inc
idivb
lret
mov
pop
rcrl
mov
aad
icebp
lret
cmp
sbb
emms
mov
call
jp
idivl
xchg
push
cld
data16
lret
andl
std
cmpsb
xchg
dec
fcomp
popf
mov
or
mov
dec
sub
xor
xchg
jp
mov
push
roll
ror
stos
and
jecxz
sub
mov
adc
pop
cs
shrb
leave
cltd
or
adc
or
sahf
in
testl
dec
or
lea
inc
lahf
fcmovb
push
div
adc
pop
inc
cs
fwait
arpl
mov
xor
push
das
dec
xchg
stos
add
jmp
or
and
cs
int3
orb
and
jp
and
sub
popa
mov
cli
jbe
in
ret
cld
sbb
jb
mov
cwtl
rorl
arpl
sbbb
inc
outsb
and
sbb
mov
lea
add
and
in
out
pop
les
scas
or
pop
fisttpll
sti
pop
mov
sub
lods
and
sti
pavgb
sub
popa
pop
push
addr16
test
jne
xlat
cmpsl
cmp
out
jae
scas
push
sbb
pop
xchg
sub
sbb
jmp
pop
mov
fnstsw
lds
rol
aas
or
pop
add
sub
xchg
fsubr
push
sbb
es
push
fiaddl
btl
adc
sub
mov
jmp
add
movsl
sub
push
into
jns
mov
mov
mov
push
ss
fnstsw
nop
jp
inc
shrb
cmpsb
jae
sahf
xchg
lret
ret
xchg
add
sub
aas
adc
push
push
insb
or
test
ja
inc
roll
jg
popa
lods
cmp
dec
ds
or
xchg
ja
jmp
jmp
add
dec
mov
imul
mov
inc
mov
ss
nop
ss
dec
ja
push
inc
sbb
shll
dec
xor
out
call
sub
cmpsb
fstps
aam
sub
mov
mov
cmp
dec
pop
outsb
and
adc
insb
ret
xchg
fdivs
inc
and
xchg
in
sub
enter
mov
clc
mov
jo
rcrl
jmp
int3
hlt
adc
jp
mov
and
test
adc
jg
pop
adc
inc
ja
imul
xor
inc
push
mov
fsub
in
jns
inc
popa
data16
adc
cmp
add
outsb
ret
icebp
mov
sbb
fsubp
cmp
lcall
inc
addr16
daa
lea
adc
stos
inc
mov
xchg
and
xor
mov
out
mov
fsubrs
mov
test
cmp
in
jb
aam
mov
aas
loopne
popf
dec
xchg
sbb
or
add
inc
clc
imul
sbb
mov
inc
push
mov
out
divps
hlt
jns
or
lcall
rcl
adc
cmp
cltd
daa
cmp
xchg
dec
mov
ret
stos
gs
scas
dec
ja
loop
push
repz
cmp
stc
push
in
inc
pop
pop
xchg
lahf
sarl
mov
pop
adc
ficomps
sbb
mov
mov
lahf
mov
jnp
sub
cmpsl
enter
lcall
cmp
xor
pop
mov
sbb
pop
decb
push
das
loop
out
fstl
mov
cltd
push
push
jle
add
dec
ret
adc
popl
pop
xor
jmp
jne
xor
and
pop
daa
dec
or
pop
jecxz
loopne
dec
stos
sbb
movl
sbb
clc
mov
popa
fiadds
ds
testb
and
cli
mov
cmp
xor
jne
std
push
out
jp
addr16
jge
clc
neg
dec
mov
adc
push
stos
and
adc
mov
jnp
pop
lds
xchg
out
push
popf
movsl
push
pop
das
add
in
mov
cmp
out
int
test
lock
pop
mov
stc
loop
fildl
jmp
jae
jo
xchg
mov
jecxz
push
iret
inc
or
stos
mov
jmp
out
sbb
sub
mov
add
pop
ljmp
push
lcall
cli
push
inc
inc
out
pop
xor
jno
jns
popf
ljmp
ljmp
mov
cmc
xchg
loop
clc
pop
mov
adc
mov
sarb
stos
sbb
in
push
dec
inc
mov
sbb
call
xor
push
lock
stos
lret
mov
mov
jg
lods
outsw
rcll
psrad
sub
pushf
or
pusha
or
mov
loope
mov
sbb
bound
cmc
iret
enter
stos
jg
stos
insl
rcll
in
dec
xchg
jbe
push
cmp
shrb
dec
or
sbb
and
outsl
jno
inc
dec
jmp
push
lret
adc
pop
and
push
xor
out
push
fdivl
int
testb
inc
dec
inc
mov
mov
mov
adc
outsl
push
jle
jae
into
xchg
fwait
sub
daa
pop
dec
pop
sarl
in
pop
pop
jno
lods
ret
out
call
aaa
pop
pop
movsl
xchg
les
sahf
push
push
sbbb
jbe
sbb
cmp
std
or
mov
in
aam
sub
dec
mov
and
mov
push
inc
stos
test
lds
lods
jns
cmp
loopne
stc
leave
in
pop
rorb
mov
cwtl
aam
jp
add
aad
xor
adc
stos
push
popa
inc
fxch
mov
enter
outsb
inc
dec
push
cmp
inc
adc
mov
inc
cmp
and
dec
es
dec
adcl
int
and
inc
cmp
rcrl
jb
xlat
sub
inc
xlat
dec
rorb
repnz
in
lds
gs
repz
aas
sbb
jbe
xchg
lret
jl
push
imulb
out
adc
cmpsl
je
mov
mov
or
sub
xor
cmc
push
jge
sbb
xchg
cmp
adc
mov
push
jp
mov
scas
dec
adc
test
sub
lea
mov
fisttpll
and
xor
mov
pop
jnp
bound
dec
ja
jge
cld
push
sub
sbb
mul
add
ret
inc
cmpsb
outsb
in
and
addr16
fistpll
test
in
test
adc
decb
and
les
xor
dec
jno
adc
xchg
adc
jne
rclb
push
in
or
or
pop
sti
repz
cmpsb
mov
and
dec
cmp
cltd
xchg
mov
jbe
sub
push
lcall
jge
out
mov
test
rorb
xor
and
ds
mov
push
mov
gs
ss
out
jle
or
pop
dec
lret
std
data16
sbb
inc
ret
inc
cmp
jno
adc
test
repnz
push
movsb
pop
jg
xor
adc
fistps
pop
stos
js
test
push
push
cwtl
insb
ljmp
inc
xor
add
ljmp
sbb
in
fs
call
add
test
dec
lcall
mov
mov
inc
push
test
jecxz
jmp
adc
insl
sahf
dec
xchg
mov
test
mov
mov
xor
pushf
push
pushf
ja
iret
and
dec
int3
aaa
dec
insl
clc
mov
and
jmp
sub
into
dec
sbb
jnp
pop
scas
pop
push
cld
out
push
sbb
inc
push
push
into
add
adc
addr16
cmc
jns
lods
jge
cwtl
out
jae
jecxz
std
and
addr16
and
hlt
int
jecxz
imul
sbb
in
sbb
pop
shll
je
mov
nop
add
lods
movsl
xor
mov
daa
jg
lret
popf
or
imul
lods
xchg
xchg
pop
mov
mov
sbb
pop
lret
jg
cwtl
popa
xor
inc
push
stc
call
mov
pop
repnz
hlt
xchg
adcl
inc
push
sti
mov
add
adc
fsubl
jnp
pusha
cltd
addr16
pop
in
scas
fstpl
xor
cmpl
repz
pop
xchg
xchg
jp
dec
ja
push
test
jno
dec
or
scas
addb
cmp
stos
and
mov
pop
jl
xlat
int3
mov
inc
dec
scas
lahf
ljmp
mov
mov
and
fidivl
mov
repnz
jbe
dec
bound
add
add
or
inc
xchg
test
cmpsl
aas
push
lahf
shl
jo
cli
rcr
repz
and
xchg
in
cmp
mov
addl
ja
add
mov
push
int
cmovae
jmp
sbb
ljmp
pop
sti
inc
jmp
pop
pusha
mov
jecxz
shrb
sub
pop
sub
inc
or
mov
cmpsl
lock
jmp
js
sahf
jg
inc
xchg
pusha
jne
dec
fcomp
fdivs
push
or
gs
sub
push
add
sti
add
or
xlat
pushl
push
aam
inc
clc
sbbl
xor
mov
inc
xor
sub
mov
xor
test
mov
test
cmc
dec
cmp
in
dec
mov
adc
sbb
lock
jnp
adc
mov
push
popf
sahf
pop
xorl
imul
and
jbe
rcrb
jmp
dec
out
into
shl
fs
bound
mov
xchg
fdivrs
jecxz
push
js
bound
xchg
push
jns
scas
pop
push
sub
adc
dec
xlat
sub
add
cli
fwait
push
mov
bound
jnp
mov
insl
sbb
shll
iret
xchg
push
call
lea
test
inc
inc
loop
stos
enter
adc
stc
test
inc
ret
jecxz
sti
mov
scas
data16
push
clc
cmp
loope
mov
mov
mov
jne
cmp
lcall
dec
pop
lods
pusha
mov
pop
mov
aam
shll
xor
cwtl
mov
popa
push
testb
rclb
aam
xor
in
movsb
pop
shll
mov
push
push
sbb
das
ret
add
pusha
and
adc
daa
sub
xchg
xor
call
pop
cld
mov
shlb
sbb
cmc
dec
cmpsb
mov
repnz
mov
sbb
pop
pop
and
jnp
jbe
xchg
hlt
mov
and
stc
aam
roll
je
dec
mov
xchg
push
sub
cltd
popf
in
imul
out
jmp
adc
cmp
dec
fimuls
ds
ja
inc
xchg
addr16
aas
xchg
add
jnp
fisubrl
push
mov
in
lds
push
xor
lea
mov
ret
orl
out
push
stos
sub
xchg
xlat
jnp
js
xchg
mov
add
xchg
push
loopne
cmp
sub
das
jns
in
add
sbbb
xchg
shr
icebp
and
outsb
and
mov
inc
mov
je
out
movsl
xchg
mov
push
int
mov
stos
int
inc
stc
mov
push
fdiv
pop
fsubrs
std
and
jne
pop
lods
sub
mov
aam
rolb
out
cli
repnz
lret
mov
xor
movsb
xchg
jl
ja
aad
jge
cltd
test
sti
xor
push
fidivrs
xchg
push
test
sbb
subl
sbb
xlat
dec
in
addr16
lock
xor
lock
xchg
icebp
mov
lea
xor
gs
mov
cli
pop
repnz
push
adc
popf
loope
test
push
clc
mov
scas
and
out
fsubl
sub
pop
in
and
out
inc
sbb
iret
inc
mov
in
jp
cmp
sub
fdivp
push
loopne
dec
and
xchg
ficompl
push
push
or
fucomi
leave
or
adc
loopne
inc
pop
aas
mov
or
orb
mov
fwait
cltd
adc
dec
pop
cmpsb
xchg
xchg
mov
imul
movsb
push
popa
xor
dec
nop
enter
mov
in
jmp
jns
rcrl
or
sbb
add
psrad
cmpsl
aad
test
mov
sub
outsl
les
sub
mov
mov
loop
shlb
popf
add
inc
ja
mov
adc
mov
add
lds
leave
xchg
fstpt
fidivs
dec
and
jb
leave
push
stos
sub
adc
xchg
loopne
xor
xor
leave
popf
stc
ljmp
dec
daa
adc
pop
loopne
dec
test
mov
pop
cmpsb
mov
pop
xor
mov
enter
xor
mov
push
cmpsl
jp
out
cmc
loope
es
pop
pusha
add
ret
fstps
and
rcrl
sub
jae
ss
pushf
loop
xchg
and
push
dec
cmc
out
mov
cmc
test
test
mov
mov
jp
lock
mov
pop
test
aaa
mov
push
lea
fsub
rolb
inc
xchg
adc
and
cmp
xchg
jge
xlat
mov
mov
jg
inc
cwtl
sub
popf
dec
and
or
xor
clc
push
mov
test
push
add
sar
into
test
mov
bound
dec
popf
jnp
mov
jg
std
imul
add
decl
lahf
shll
inc
aad
mov
adc
mov
mov
in
loop
fwait
xor
jp
push
mov
sub
out
int3
jne
or
push
ja
sbb
pop
add
and
xchg
bound
inc
push
mov
mov
jecxz
mov
fwait
stos
dec
into
xchg
stc
cmpsb
ret
enter
out
sarl
cmc
sbb
addb
mov
bound
sub
pushf
jae
sbb
in
jns
roll
lret
insb
test
test
or
es
adc
dec
adc
jp
sbb
pop
jge
hlt
and
shrb
cmp
in
aas
insl
sbb
mov
je
lds
mov
repz
mul
push
push
daa
out
dec
dec
xor
mov
xor
in
scas
pop
jecxz
pushf
ret
lods
push
lods
mov
into
jnp
sbb
in
add
jp
cmp
lcall
dec
or
inc
aaa
insb
fwait
pop
sub
inc
and
xchg
jecxz
or
ret
cmp
mov
sub
sbbb
push
lahf
sbb
out
mov
jo
push
stos
testb
fst
aam
out
fbstp
push
fs
aad
and
pop
mov
mov
stc
and
mov
loope
sbb
dec
xchg
sar
push
icebp
jnp
push
jl
cmpsb
jecxz
roll
dec
cmp
int
jbe
mov
sub
jae
cltd
into
insb
ljmp
or
mov
aas
dec
mov
or
sub
add
pushf
and
imul
push
je
xchg
xchg
and
add
and
addr16
iret
pop
sbb
mov
in
adc
xchg
xchg
xchg
sbb
dec
pop
sbb
jp
dec
int3
int3
cmp
fsubrs
addb
sub
fbld
loopne
dec
flds
je
out
push
dec
bound
pusha
lods
repnz
test
pause
fildl
cwtl
mov
in
pop
sub
mov
sbb
mov
xor
add
xor
add
mov
loop
cmp
les
inc
inc
nop
push
repz
xorl
stos
in
push
inc
loope
mov
adc
cmp
loopne
xchg
fsubrs
aas
jecxz
sub
mov
data16
je
mov
call
movsl
dec
jo
imul
call
push
addb
imull
xchg
dec
dec
mov
xchg
jb
push
in
xor
mov
in
push
negb
dec
ja
cmpsl
mov
aas
aad
leave
mov
rdpmc
aaa
jb
xchg
and
loop
mov
fsubp
push
xchg
add
ja
dec
add
fldt
int
lods
mov
inc
add
push
push
xor
push
mov
xlat
in
jae
out
add
jp
aad
shll
xchg
mov
jae
jge
inc
test
lods
jmp
pop
rclb
hlt
stc
popa
sub
inc
inc
subl
dec
push
in
jl
cmpsb
iret
rol
jne
jnp
pop
or
lock
sbb
test
out
jno
or
mov
xor
outsb
push
jnp
cmp
jmp
js
aaa
sbb
gs
pop
ss
sub
in
push
mov
idivb
es
sub
fsubr
mov
mov
dec
jp
imul
popa
sub
push
mov
mov
movb
fnstenv
cmp
sbb
out
pop
add
xor
out
push
add
mov
in
mov
sbb
dec
movsl
movsl
arpl
dec
adc
test
int
sbb
dec
imul
cmpsl
cmpsl
or
cli
sbb
icebp
cmp
test
xor
js
mov
into
pop
movsb
xchg
mov
xor
xchg
cs
mov
mov
into
inc
hlt
jae
fimuls
mov
scas
dec
lahf
jne
hlt
and
push
fldcw
sbb
shll
and
jle
mov
pop
mov
mov
mov
xchg
mov
imul
dec
fistpll
movsl
insb
xor
pop
jb
mov
dec
cmpl
cs
inc
or
es
stc
push
je
stos
xchg
inc
jg
notb
mov
fidivrs
mov
and
cld
inc
cmpsb
hlt
cld
ss
cld
push
inc
pop
pop
dec
out
adc
dec
jp
sub
cmp
gs
test
mov
js
pusha
mov
xchg
and
daa
sbb
mov
in
push
pop
stos
in
fwait
mov
rcrl
fldt
rol
push
iret
fstl
fstpl
subb
add
cmp
push
push
or
cmp
rcll
jnp
sahf
push
aaa
repnz
test
out
test
jmp
jb
cmpsl
jo
stos
pop
dec
and
cmp
into
fwait
push
xor
mov
xor
xchg
xchg
jl
lcall
sbb
ljmp
lods
in
stos
clc
cmc
mov
mov
cli
out
loopne
sti
or
rorb
loopne
rcrl
or
int3
test
add
add
mov
js
jbe
rorb
push
add
add
rcl
xchg
push
push
push
mov
xor
cld
xor
xlat
sbb
rcrl
enter
aam
insb
cmp
push
xor
nop
pop
adc
rcl
es
add
mov
dec
mov
stc
mov
sbb
in
in
subb
mov
jo
loope
stos
cmp
fadds
push
andl
dec
pop
adc
outsb
mov
orb
gs
cmc
mov
lahf
push
jp
sbb
or
jo
loopne
in
sbb
dec
xchg
fildl
or
jns
cltd
inc
lds
xchg
xor
jb
lcall
mov
incb
fstpl
dec
int
and
dec
call
mov
pusha
cmpsb
ficomps
and
movsb
jl
cmpsb
adc
fdivrl
cwtl
push
sub
bound
scas
xchg
movsb
jecxz
jl
jne
outsl
fmul
push
repnz
pusha
mov
cltd
mov
cmc
adc
cmp
xlat
mov
mov
ud2
sbb
ss
dec
cs
sub
insb
xlat
lods
inc
repz
jecxz
cmp
in
sub
ss
bound
push
or
inc
dec
or
dec
aam
out
inc
fxch
repz
mov
dec
pop
es
jle
fcoms
enter
fldl
xor
and
test
js
pop
push
pop
push
push
rolb
in
jno
cmpsb
aad
popf
sarl
xchg
out
arpl
cmp
pop
repz
push
sbb
sub
pop
jnp
addl
lcall
or
aam
imul
jge
mov
or
lea
ret
out
sahf
pop
js
or
xchg
jbe
mov
clc
pop
insl
mov
jnp
and
outsl
lcall
insl
pop
push
bound
popf
hlt
or
aas
adc
iret
push
mov
jmp
test
sub
data16
aad
xor
outsl
insb
jns
lret
aaa
mov
pop
mov
push
and
pushf
loopne
sub
jl
xchg
sub
das
and
imul
pushf
push
ret
mov
fisubrs
sub
movsl
and
cltd
mov
fisttps
adc
mov
lahf
in
and
pop
fidivrl
fcoml
jo
mov
pop
xchg
adc
push
in
outsb
jnp
movl
add
mov
xchg
bswap
int
enter
roll
dec
lret
xchg
aam
aam
ljmp
jnp
inc
xor
loop
push
imul
cmpsb
mov
out
or
sbb
mov
cmp
pop
sbb
push
and
addr16
jecxz
cmpsl
add
out
mov
jne
mov
inc
pusha
or
aam
push
mov
sub
sbb
adc
sahf
lods
enter
sbb
cmpsb
push
test
add
and
cmc
and
xchg
jp
adc
pop
js
movsl
pop
test
fcomi
add
loop
or
ja
outsl
pop
pop
cmc
xorl
rcr
out
push
pop
adc
sub
sub
sbb
inc
sub
mov
dec
fistpl
pshufw
xlat
ljmp
mov
lahf
cli
jns
jo
mov
add
jae
ret
xchg
push
add
popf
iret
sub
iret
andb
or
pop
aam
add
movsb
pushf
or
or
inc
test
jns
mov
xchg
inc
pop
adc
fcoml
inc
push
jecxz
pop
and
pop
mov
aam
sbb
pop
sub
xchg
jb
aad
mov
scas
jo
xchg
icebp
and
data16
jne
fsubl
in
dec
jecxz
loop
dec
mov
xchg
xor
aaa
nop
mov
and
xchg
mov
in
push
and
arpl
mov
jp
jne
dec
sub
ja
dec
frstor
mov
xchg
movsb
stos
sbb
add
aaa
ja
iret
imul
aad
pushf
dec
cltd
push
adc
mov
in
push
push
jmp
lret
xchg
shlb
data16
mov
mov
inc
xor
iret
testb
mov
or
mov
enter
rcrb
cld
cmp
clc
cld
sub
add
hlt
repz
lods
push
mov
push
scas
cmp
lock
inc
and
sub
jne
sbb
mov
das
jb
dec
sbb
rcrl
shll
ja,pt
enter
test
test
xor
insl
das
lret
jbe
mov
mov
jbe
scas
jne
pop
arpl
out
push
aad
mov
jno
roll
movsb
repnz
loopne
cltd
cmpsb
aad
movsl
fnsave
and
shr
cwtl
fsubrs
outsl
dec
mov
jecxz
adc
xchg
int
push
mov
or
test
push
pop
xor
test
and
enter
push
mov
xchg
mov
mov
iret
sub
orb
sti
xchg
or
jne
adc
push
jle
pop
test
mov
jnp
aam
cmp
xlat
cmp
mov
test
sub
jl
dec
add
popf
lods
fcoml
fcomps
jmp
push
push
loope
es
mov
rorl
mov
mov
jle
push
and
inc
sub
dec
mov
and
mov
sti
or
pop
shl
jecxz
lea
mov
push
shrb
orl
sbb
mov
sbb
stos
daa
xchg
rclb
dec
mov
out
inc
adc
pop
es
push
fisubl
sub
rcll
jmp
ljmp
xchg
loopne
jecxz
xchg
leave
out
cmp
cmp
xor
out
xor
movsl
pop
cmp
xchg
jl
movsl
sbb
inc
push
jae
arpl
sarb
je
sub
scas
jge
cli
adc
test
pop
jmp
popf
outsl
pop
in
ror
dec
mov
out
ret
jb
jo
sbb
pusha
push
push
and
jne
inc
and
mov
and
dec
ds
dec
test
push
ja
mov
dec
jns
xor
or
add
xchg
jmp
addr16
loopne
faddl
call
inc
clc
jmp
testb
push
scas
cmp
sub
movsb
faddl
cmp
mov
pushf
sbb
xchg
xchg
cmp
cld
adc
jnp
jb
cmp
cmp
popf
repz
or
lock
pop
sub
sub
cmp
loop
test
in
pop
cltd
cmp
sti
lahf
popa
js
pop
popa
fistpl
bound
stos
ret
mov
dec
cmp
sbb
out
adc
cmp
ds
add
pop
js
jne
mov
sahf
push
dec
xchg
mov
jg
test
sub
sub
jecxz
in
xor
ljmp
sahf
in
xchg
shll
dec
lret
xor
jecxz
ret
dec
cmp
fldt
test
jnp
insl
faddp
mov
cmp
mov
xchg
les
ds
mov
xchg
or
mov
mov
sbb
push
sub
out
addr16
mov
xor
jge
jmp
and
cli
mov
or
xchg
test
je
sub
and
in
add
xchg
cmc
arpl
add
and
out
adc
xchg
repz
xchg
popf
mov
sbb
pop
or
out
scas
inc
cmp
sub
inc
mov
jae
scas
test
mov
or
sub
lcall
aaa
or
push
fwait
insl
fs
enter
inc
fidivs
aad
fldl
dec
pop
lahf
push
insb
int3
cmp
add
test
sbb
mov
mov
mov
fcmovnb
insb
ficompl
in
xor
stos
jb
mov
lret
or
popf
push
les
pop
lcall
pusha
stos
repz
out
loope
rorl
inc
lcall
adc
xchg
popf
scas
call
sub
icebp
dec
shll
stos
pop
mov
sub
insb
adc
sar
std
and
xchg
lea
pop
sub
pop
mov
fprem
xchg
ret
loop
xchg
cmpsb
add
scas
dec
xchg
out
lods
fisubs
and
mov
or
xchg
xor
test
es
sbb
inc
xchg
jb
ja
pop
add
dec
dec
insl
push
mov
ljmp
jno
mov
hlt
sub
cmpps
gs
lahf
lds
mov
or
add
ja
sub
pop
insb
mov
ss
lret
lods
pushf
js
aaa
xchg
xchg
lea
pop
and
jns
lods
and
pop
inc
aam
lret
jns
in
neg
xchg
pop
sbb
int
iret
int3
fwait
pop
cmc
inc
mov
sbb
cli
ja
cmp
push
sub
ja
pusha
add
loop
add
fstp
stos
adc
mov
rclb
inc
movsb
mov
sub
cmpsb
lods
cwtl
xchg
xchg
repnz
mov
mov
gs
add
pop
pop
fldz
mov
or
clc
xor
add
call
xor
cmpsl
in
xchg
ljmp
and
or
lret
loope
dec
test
enter
and
orb
mov
lock
mov
cmp
enter
fdivrl
fstl
inc
xchg
sbb
ds
outsb
insl
aad
cmpl
lahf
stc
sub
sbb
and
test
xchg
pusha
sahf
jnp
inc
xor
jbe
aad
jno
add
adc
pop
jbe
addr16
add
imul
xor
adc
sarl
imul
and
aaa
sub
rclb
mov
stc
cli
jo
push
mov
push
mov
mov
pop
dec
add
inc
mov
and
shrl
loope
rcrl
fdivrp
or
or
xchg
std
clc
xchg
pop
jnp
jle
lods
pusha
dec
add
and
mov
mov
or
mov
shrl
daa
daa
and
push
jl
xor
jle
mov
sarb
pop
push
test
loopne
add
mov
sbb
add
sbb
push
test
and
jns
fidivrl
testl
xchg
out
daa
shl
scas
sahf
mov
add
sbb
add
loope
out
popf
add
cld
xchg
das
insl
inc
and
in
cmp
test
sbb
faddl
push
pop
insb
or
pop
orb
push
aaa
aas
mov
pop
jne
fs
enter
push
xchg
mov
mov
mov
adc
cmp
and
pop
xchg
out
test
push
lret
loopne
je
lcall
xchg
xor
fisubl
ss
scas
jp
pop
int3
push
mov
lahf
adc
mov
push
aad
enter
testl
jp
add
pushf
mov
sub
cmovo
test
jge
mov
in
cmpsb
ljmp
out
sti
dec
cld
mov
mov
jmp
sub
fs
nopl
push
incb
cli
imul
or
add
dec
and
gs
movsl
push
xchg
enter
xor
test
cli
dec
ret
and
xchg
push
cmp
data16
inc
pop
fnstenv
inc
cmp
not
lods
mov
and
scas
lock
push
fwait
aam
cmpsl
test
cmp
ja
bound
cli
mov
nop
stos
mov
mov
mov
scas
out
adc
push
popa
push
mov
push
das
jle
pop
mov
xor
mov
into
fwait
lock
repnz
add
mov
pop
adc
repnz
ljmp
sub
push
xchg
push
rorb
dec
jl
mov
popf
mov
push
adc
push
mov
je
je
inc
ud2
or
push
movsb
aad
lea
adc
orb
mov
and
in
in
sub
push
sub
lds
jo
cltd
sbb
mov
std
bound
imull
es
iret
xchg
imul
push
or
xor
add
adc
and
xor
repz
loop
adc
cwtl
xchg
sbb
jo
and
gs
add
cwtl
mov
jo
xor
jne
fisubrs
movsb
push
inc
rolb
sub
cmpsl
aad
xchg
xchg
adc
mov
dec
test
adc
andl
out
lock
lea
repnz
scas
and
pop
jno
push
dec
rcll
pop
jns
pop
adc
and
mov
mov
pop
gs
push
daa
mov
iret
in
sub
sahf
lock
aam
push
repz
push
inc
and
jbe
mov
sbb
push
xor
iret
jns
notb
sbb
ja
call
les
lods
pop
daa
sub
push
mov
push
fwait
push
nop
jmp
adc
mov
lret
pop
mov
mov
decl
sbb
insl
bound
ret
pop
mov
or
test
orl
pop
jmp
jp
jne
shll
pop
jnp
lods
sbb
push
mov
add
cmp
cmp
loope
mov
mov
dec
push
iret
push
mov
jb
or
dec
sub
dec
sbb
pop
mov
pop
fs
es
xor
hlt
stos
pop
test
in
test
cld
divb
xor
imul
and
or
inc
cld
outsb
xor
movsl
test
test
daa
imull
push
mov
mov
lock
inc
test
xor
mov
enter
das
fisubrl
mov
nop
insl
dec
mov
jmp
shr
fwait
sub
sbb
pop
xchg
fcomp
icebp
les
cmp
or
push
arpl
add
aad
fcmovu
lods
je
jg
arpl
sub
sub
xchg
jecxz
pop
ss
enter
mov
clc
andl
and
mov
rcrl
add
shrb
push
popf
mov
stc
cltd
xchg
dec
sarb
mov
lods
sar
and
cltd
push
cmp
cld
cmp
ret
dec
cmc
dec
dec
pop
dec
jge
add
out
dec
xchg
inc
rcr
mov
aam
xchg
or
ret
rcll
mov
loop
popa
pop
adc
cmp
addr16
inc
jno
loope
jge
imul
dec
sub
pop
and
movaps
xchg
ret
repz
clc
in
mov
cmp
inc
dec
push
push
mov
es
dec
loopne
or
add
xor
int
lahf
lret
movsb
jle
sahf
inc
popf
mov
scas
pop
arpl
mov
sbb
aaa
je
xchg
pop
mov
out
mov
scas
mov
and
das
mov
mov
sub
sub
xor
into
mov
mov
sbb
sub
ret
call
push
ja
sbb
cltd
jnp
mov
sbb
pushf
lahf
movsb
repz
shlb
pop
mov
inc
movsb
xchg
mov
push
or
ret
sbb
jo
jecxz
jl
shlb
push
daa
decb
lock
mov
mov
inc
xor
dec
int
repz
mov
fsubs
adc
sub
push
mov
mov
loop
jecxz
movsl
xchg
cld
aam
jle
mov
out
frstor
pop
subl
sub
sub
dec
je
mov
fildll
jl
xorb
imul
push
repz
jbe
jns
jg
xor
xchg
imul
cmp
inc
in
push
in
maxps
or
loopne
adc
xchg
mov
xchg
repnz
xchg
outsb
pop
cmp
push
ds
or
lahf
xchg
or
push
js
loopne
jne
das
add
das
mov
mov
xchg
adc
call
cmp
mov
cld
and
or
mov
cmpsb
cli
into
xchg
xor
leave
and
cmpsb
in
mov
sti
cmp
xchg
mov
mov
cmp
lock
inc
orl
sub
dec
adc
mov
js
adcw
imul
fsubp
mov
lods
mov
mov
fwait
fisubs
pop
lods
mov
mov
add
lds
test
push
mov
adc
mov
adc
jnp
aam
push
adc
push
shrb
adc
jnp
jno
call
shll
in
mov
sub
nop
not
adc
xchg
add
icebp
push
or
movsl
repz
aam
loop
mov
inc
loopne
stos
add
adc
outsl
jp
cmp
out
push
xchg
add
outsw
call
aas
sub
lds
loope
test
inc
pop
push
pusha
data16
inc
push
or
mov
imul
lret
xchg
and
cmpl
cmpl
fnsave
cmp
dec
sbb
int
dec
hlt
loopne
adc
add
or
xchg
cmp
sub
stc
pop
scas
stos
shr
cs
inc
subb
lods
sbb
sarb
arpl
orl
jmp
add
in
mov
pop
cli
add
mov
inc
xchg
clc
mov
sarb
adc
fimuls
aad
jns
mov
jae
fdivrs
rcrb
pushf
and
loopne
mov
and
pop
ficoms
jo
popa
mov
add
iret
cld
inc
imul
aaa
cmpsl
inc
lret
xor
add
ljmp
les
xor
fdivrs
imul
push
loope
or
adc
sbb
dec
lods
add
pop
ss
and
test
dec
movsl
xor
mov
arpl
orl
sbb
mov
dec
push
or
movsb
sub
inc
les
mov
xchg
mov
xchg
xor
dec
fdivr
pop
mov
jae
cwtl
call
mov
sbb
inc
lods
add
mov
notb
add
xchg
mov
sbbl
negb
jne
inc
push
cwtl
cmc
sarb
aad
and
pop
lds
inc
adc
inc
call
ret
mov
sbb
das
adc
data16
dec
sub
stos
sub
jne
adc
push
out
sbb
in
fbstp
xchg
or
cmp
arpl
jl
daa
push
insb
xor
mov
xchg
addr16
jle
fsts
sub
aas
stc
dec
and
inc
add
lds
adc
jne
bound
mov
lds
adc
xlat
xlat
shlb
or
aam
outsl
dec
sbb
lcall
loopne
outsl
mov
sbb
or
cltd
mov
in
and
int3
sub
xchg
cmc
xorb
in
std
call
mov
fs
jnp
push
lock
and
mov
test
nop
dec
imul
shr
in
out
push
mov
xchg
ss
xchg
imul
xchg
or
dec
jbe
int
in
mov
ds
push
adc
mov
rolb
cmp
xchg
sarl
mov
rorl
xchg
and
stos
imul
xor
jne
dec
add
dec
lret
mov
push
and
xchg
sbbl
in
xchg
jle
pusha
push
dec
insl
je
xchg
add
mov
cs
mov
pop
cmp
in
dec
mov
mov
and
xorl
sbb
notl
bsf
sub
lret
pushf
push
or
add
sbb
xchg
inc
mov
mov
pop
aas
mov
xchg
xchg
std
push
out
or
out
loopne
adc
leave
and
incl
add
pop
sbb
clc
sub
popf
and
mov
mov
scas
data16
inc
test
rol
xor
mov
shrb
ror
xor
jle
mov
enter
or
adc
out
nop
fstps
das
xor
inc
loop
stos
xor
loop
add
jnp
sbb
das
ja
pop
insb
sub
jp
bound
adc
and
cmp
pop
push
std
cmpsl
mov
mov
repnz
das
rcrb
lock
xchg
adc
pop
imul
lret
jmp
mov
insb
dec
das
xlat
out
jle
std
enter
outsl
jb
fnsave
movsb
ret
or
dec
rcrl
or
add
sbb
stos
jne
lret
clc
movsb
adc
sub
pop
lret
outsb
lcall
push
hlt
sbb
push
sbb
cmpsb
add
rcl
push
stos
dec
jp
call
sbb
cltd
mov
push
jge
shrb
or
imul
push
xor
inc
pop
adc
mov
daa
push
jne
xchg
dec
mov
loop
popa
cmp
mov
add
iret
insl
add
test
mov
loop
cwtl
and
pop
inc
dec
inc
call
daa
jbe
push
popa
or
fstp
sbb
add
scas
push
scas
aad
adc
and
imul
mov
jg
cli
dec
lahf
icebp
mov
xchg
stc
nop
jge
cmp
xor
mov
fwait
mov
inc
pusha
dec
ja
daa
or
test
cmp
push
mov
jnp
frstor
cmpsb
jmp
popa
fcoml
jmp
sub
sub
mov
mov
and
pop
mov
push
in
icebp
in
test
jbe
jle
outsb
ret
lock
ja
dec
gs
popf
cmpl
fisubrs
aaa
mov
das
xor
shrb
mov
push
or
std
sbb
push
cmp
fnstcw
sub
xor
sub
std
jecxz
sub
push
repnz
cmpsb
rcr
cmc
lret
cltd
cmp
mov
mov
outsl
push
outsb
cs
imul
xor
jne
or
sub
adc
inc
mov
xchg
adc
inc
pop
dec
cmp
add
leave
loope
cwtl
mov
push
dec
jmp
test
push
mov
inc
xchg
cmp
xchg
xlat
mov
sub
and
imul
xor
call
cmp
sbb
das
in
mov
enter
sub
mov
subl
in
pop
dec
cmpsb
inc
xchg
stc
sub
pop
jns
adc
imul
and
push
in
inc
jne
fsts
jl
lret
bnd
xor
jbe
in
jmp
sub
out
rol
in
pop
fcompl
into
mov
sub
pop
fwait
icebp
mov
mov
jae
movsb
dec
jp
aas
jmp
ja
popf
cltd
mov
push
jae
repnz
jae
cmp
add
mov
loope
mov
imul
add
jo
nop
jge
mov
stc
sbb
or
ds
icebp
mov
push
jo
jl
les
shlb
enter
dec
in
adc
aas
cmc
sahf
movl
insl
pop
sahf
loop
cmpl
daa
movsb
fwait
jnp
cmpsb
sahf
test
scas
stc
fildll
in
mov
and
rcr
push
lret
arpl
test
shlb
lret
pop
aad
inc
test
mov
pop
test
outsl
fbld
dec
mov
sbb
es
adc
or
fidivs
or
push
gs
fisubl
imul
mov
in
into
in
aaa
jne
dec
xchg
in
pop
push
pop
mov
out
bound
in
out
jb
sub
mov
pop
arpl
fnstsw
xchg
cli
mov
stos
fcompl
mov
adc
push
lahf
out
xchg
mov
xchg
out
ds
test
es
push
pushfw
lds
rol
xchg
push
sbb
sbb
out
leave
sub
xor
imul
push
scas
cs
xchg
push
stos
pop
xor
push
sbb
addl
dec
jae
xor
les
mov
inc
pop
cmpsl
mov
jle
std
js
xchg
ja
or
hlt
aaa
mov
enter
fstpt
and
cmp
dec
xor
dec
cmpl
mov
ficoml
scas
aam
ljmp
pop
dec
fnstsw
push
mov
mov
icebp
fadds
daa
jmp
arpl
xlat
scas
mov
push
fidivrs
mov
cltd
inc
in
cmp
inc
fdivs
jne
in
popa
lret
mov
int
sbb
rorb
aad
repz
add
shr
dec
sbb
adc
mov
sub
les
in
lods
fidivrs
xor
add
aad
sahf
stc
pop
sarb
xchg
das
jl
icebp
mov
sbb
lahf
in
jbe
add
ret
out
xlat
lods
add
xchg
mov
sbb
sub
mov
rcrb
or
imul
dec
add
xchg
lds
pop
mov
leave
pop
push
push
fsubr
pop
jo
cli
adc
cmp
popl
in
dec
data16
hlt
and
push
cli
enter
stc
out
aaa
jp
pushf
push
push
adc
adc
outsb
test
jg
add
jb
aaa
out
mov
push
pop
hlt
pop
loope
ret
pusha
paddd
addb
xlat
into
xor
adc
push
shlb
ret
add
inc
bound
insb
pop
mov
out
sub
movsb
lea
aaa
sub
mov
inc
xchg
in
fimuls
imul
push
cmpsl
aad
lods
or
in
jne
mov
dec
push
xorb
cmp
insl
leave
std
jp
aas
and
mov
cwtl
mov
stc
scas
in
out
xor
or
push
xchg
mov
sub
negb
cmp
cmp
orl
xchg
dec
ret
ss
gs
cmp
xchg
adc
pop
aaa
sbb
cmpsl
pop
add
clc
mov
add
loop
dec
sarl
fdiv
lret
add
pop
push
dec
sub
cmp
lret
into
stos
add
mov
in
outsb
aas
cmp
enter
fidivrl
push
and
cmp
mov
pop
sbb
out
imul
mov
xor
out
dec
rcrl
cli
adc
lea
rol
and
imul
ljmp
push
rcll
xchg
mov
out
sbb
lds
and
and
xchg
sub
cmpsl
out
adc
dec
xchg
pop
iret
mov
call
cmp
xchg
xor
sub
cwtl
push
aaa
sub
sub
mov
cltd
push
shll
xor
stos
cltd
aam
out
ds
jmp
dec
mov
jno
cmc
dec
fwait
in
sub
dec
sub
iret
pushw
dec
cmpsl
clc
pop
push
frstor
xchg
dec
lret
ficoms
ja
cmc
mov
inc
push
mov
jnp
mov
addr16
xor
pop
dec
lcall
mov
mov
gs
sub
ficoms
clc
or
loop
lcall
ljmp
sub
xor
loop
sub
mov
dec
jae
aas
sbb
inc
mov
jo
inc
push
push
dec
xchg
xor
loop
push
scas
ljmp
inc
mov
mov
mov
test
pop
incb
lret
mov
cs
mov
orl
push
pop
lods
adc
bound
dec
leave
std
into
xorb
sbb
scas
cmp
scas
mov
mov
cs
movsb
dec
shlb
mov
mov
jb
lods
dec
pop
xlat
or
mov
cmp
adc
jns
sub
jp
xchg
xor
int
daa
clc
lret
jnp
mov
push
sbb
pop
pop
mov
loopne
jnp
shl
dec
lahf
mov
and
pop
and
sbb
fldl
xchg
mov
mov
cmpsl
lock
js
jnp
rcrb
mov
mov
popf
push
into
data16
lods
loope
push
inc
jbe
inc
jecxz
es
aam
cmpsl
ficomps
add
movsl
es
outsb
popf
sbb
adc
rorl
movsl
mov
add
aad
leave
push
mov
jp
flds
jg
ret
sub
ds
es
jge
cmp
sub
clc
cmp
jecxz
lahf
inc
inc
jge
cmp
cmp
js
adc
movsb
imul
in
movsb
in
out
stos
stos
or
xchg
mov
and
js
int3
leave
dec
inc
fsubs
lock
es
jmp
inc
add
mov
js
aas
mov
inc
ds
test
xor
jnp
mov
and
fbld
jnp
cli
mov
or
das
test
pop
cmp
pop
pushf
shlb
imul
aas
and
adc
cmp
cld
cld
hlt
jnp
sbb
mov
mov
or
je
int3
jno
jb
sub
jge
call
jno
adc
xor
sti
or
inc
scas
scas
in
xchg
out
fsub
mov
lds
ds
pop
cmp
out
notl
lds
enter
out
mov
nop
sub
or
or
adc
icebp
mov
out
inc
mov
loopne
icebp
arpl
nop
mov
inc
fsubrl
mov
bnd
pop
ret
in
cmp
sbb
push
aaa
or
enter
in
jl
arpl
pop
jo
movsb
or
cmc
xchg
sbb
mov
dec
adc
rcrb
flds
leave
rorl
or
mov
pop
jl
mov
lock
jbe
jne
test
xchg
cwtl
dec
pop
lods
jae
loope
jp
jl
aam
sbb
out
xor
xor
mov
arpl
fstpl
jno
pushf
push
jle
les
nop
jno
insl
xchg
stc
fisttps
sbb
rcrl
rcl
fsubr
lret
pop
les
imulb
or
insb
mov
sub
push
inc
lds
or
mov
aad
aam
mulb
iret
sbb
xlat
dec
xchg
aad
enter
jno
cwtl
and
popa
or
xor
cmc
lea
jmp
jecxz
stos
divl
les
dec
cld
loope
mov
test
mov
dec
sub
mov
int
jle
inc
nop
nop
cmpl
or
test
inc
fidivrl
sbb
fwait
cld
movsl
mov
dec
popfw
ret
add
into
ret
sub
lret
push
je
cmpsl
add
ror
adc
and
inc
pop
js
cmp
mov
mov
inc
and
loopne,pn
push
daa
sbb
out
shl
jp
imul
andl
and
or
mov
mov
mov
pop
push
pop
js
sub
out
add
xchg
imul
lea
mov
ss
adc
xchg
es
add
xchg
push
ret
adc
xchg
mov
cltd
push
fdivrs
std
or
jmp
lock
mov
and
sbb
add
mov
xlat
rolb
xor
lea
push
aam
popa
outsb
fnstcw
cmp
mov
add
and
sbb
sbb
sub
cmp
add
movsb
mov
mul
or
push
xchg
mov
xor
or
daa
xchg
mov
fadd
psubd
sahf
aam
scas
cmp
sarl
or
pop
push
cmc
faddl
mov
dec
call
pusha
pushf
jecxz
ljmp
out
jle
sti
fsubl
mov
std
add
pop
mov
dec
inc
dec
xor
xor
sbb
cli
in
cltd
test
jg
pop
pop
dec
sahf
sub
adc
mov
rol
js
inc
iret
or
push
je
mov
fsubl
lock
iret
int
into
stos
xor
ja
jp
lahf
push
jae
hlt
or
xchg
adc
ja
inc
jl
iret
sbb
es
bound
movl
popa
xchg
jo
je
dec
add
mov
sub
cltd
jl
jbe
ret
ds
jo
sti
sbb
mov
and
and
lahf
bound
inc
add
mov
insl
or
inc
sbb
test
mov
sub
or
jle
cmc
ds
int
mov
mov
xchg
jae
nop
frstor
sub
inc
push
push
shrb
adc
fimull
adc
pop
popa
inc
in
push
sbb
jp
lds
dec
mov
inc
fbld
call
ret
jl
jbe
popa
xlat
mov
in
je
cltd
cltd
cld
and
jae
mov
push
add
add
push
cs
push
clc
ret
and
popa
dec
out
daa
xchg
mov
xor
mov
dec
ds
cmp
mov
loop
sub
aaa
fs
mov
mov
shrb
xchg
sbb
ficompl
push
out
adc
pop
cmp
push
push
in
outsb
xlat
call
push
out
lret
fwait
cltd
pushl
cmp
imul
mov
jp
in
jp
clc
sti
enter
movsb
sbb
cli
mov
pop
lret
sub
jmp
in
arpl
cmp
sbb
icebp
push
nop
pop
insb
mov
sbb
pop
cmp
mov
int
sub
or
in
sbb
jp
sahf
xchg
jb
repz
jb
pop
xchg
inc
and
fsubrl
insb
fs
cmc
and
lods
out
or
push
and
xor
xor
pop
lret
push
cmp
out
stos
sub
daa
outsl
lahf
movsb
shrl
fdivs
push
fmull
sbb
xlat
mov
stos
fmuls
or
adc
dec
movsl
sti
cmp
push
push
mov
rorl
dec
mov
or
enter
push
xlat
rep
dec
and
adc
popf
sahf
movsb
mov
jno
xor
xchg
fcmovb
pop
lods
and
sub
dec
imul
out
cwtl
rol
dec
test
lods
mov
push
ficompl
out
jg
aas
mov
aaa
dec
sbb
mov
mov
addr16
and
inc
xchg
test
adc
fsts
add
loopne
sbb
adc
out
rclb
int3
inc
inc
shrl
sub
shlb
push
cmpsb
cmpsl
cwtl
out
adc
testb
lret
call
push
push
sbb
add
cltd
inc
inc
inc
addr16
sahf
jecxz
lahf
cmp
loope
inc
imul
jecxz
push
pop
or
mov
setbe
scas
push
cmp
jl
add
addr16
xchg
fdivl
jae
sub
fmuls
sub
fwait
dec
aad
scas
dec
push
and
sub
in
cltd
outsb
mov
repz
jge
sub
adc
xor
clc
adc
outsl
push
rcll
test
pusha
movsl
sbb
rcll
aam
jl
outsl
loopne
push
push
pop
pop
mov
int3
ja
gs
and
cmp
subb
sahf
jno
add
loope
pop
aaa
bound
cld
loope
xlat
adc
dec
lds
jecxz
xor
int3
or
cmp
aad
cmpsl
lea
and
insl
inc
ret
in
mov
mov
pop
jne
roll
je
dec
inc
shll
mov
xchg
xchg
hlt
xchg
clc
repnz
bound
out
xor
movsb
mov
sti
lahf
dec
jae
and
je
mov
dec
mov
dec
inc
xchg
inc
outsb
shr
dec
mov
les
lods
pop
xchg
pusha
xchg
lock
sbb
movsb
inc
xor
jo
fwait
insb
or
add
or
add
out
sbb
inc
mov
mov
mov
adc
aaa
outsb
leave
shll
mov
shll
neg
into
cmp
imul
daa
mov
jmp
sub
int3
dec
outsl
enter
sub
or
push
fwait
lahf
clc
ss
jg
setb
mov
mov
add
sub
push
xor
aaa
add
and
push
aaa
loope
adc
xchg
sbb
jle
and
stc
push
pop
push
iret
dec
pop
dec
fwait
and
and
jecxz
es
sbb
jp
or
in
imul
mov
mov
loopne
cmp
enter
adc
lret
iret
mov
test
jns
outsl
push
inc
jmp
cmp
mov
push
pop
xor
and
inc
popf
imul
sbb
sub
sbb
inc
jp
jae
push
jecxz
out
cmp
xor
es
mov
jge
iret
fld
jmp
icebp
sub
mov
lahf
jb
icebp
mov
fisubrs
xchg
les
mov
pop
and
cmp
pop
imulb
nop
or
daa
sbb
or
cmp
leave
adc
adc
nop
mov
jb
mov
leave
loope
add
cli
iret
sbb
pop
jle
ss
iret
leave
sub
arpl
inc
int
sbb
lods
test
mov
subb
mov
xor
enter
xchg
inc
and
mov
ret
sti
int
call
adc
movsb
add
mov
fwait
in
pop
popa
inc
out
aaa
or
pushf
stos
xchg
push
ds
or
add
dec
js
enter
in
push
jmp
pop
int
cmp
pop
pop
mov
outsb
sbb
dec
cs
inc
cld
sbb
jne
jae
pop
aas
add
pop
push
adc
mov
pop
pop
xchg
inc
xchg
clc
loope
ds
push
sbb
fsubr
inc
xor
testb
icebp
push
lcall
cmp
and
or
pop
adc
bound
and
lock
cltd
jnp
fs
outsb
test
inc
mov
add
adc
mov
mov
jo
sti
pusha
loope
icebp
aas
cmp
or
ficomps
nop
ror
xor
movsb
ret
xlat
enter
arpl
dec
enter
roll
or
mov
ljmp
and
loopne
decl
dec
in
popf
bound
mov
sub
jns
ljmp
mov
jb
decb
cmp
xchg
xchg
pop
sbb
call
pop
and
ds
fstpt
cltd
ret
popa
movsl
lret
repnz
hlt
fimull
mov
mov
and
bound
lret
test
sub
outsl
mov
in
popl
add
xchg
mov
cmp
xchg
cmp
rcrl
enter
sahf
inc
lds
xor
adc
xchg
xchg
call
pusha
inc
das
nop
hlt
movsb
rolb
push
test
fisttpl
stos
push
test
xlat
xchg
jle
je
mov
pop
and
cmp
jne
add
into
aaa
andl
insb
je
sub
sbb
sbb
repnz
mov
cvttps2pi
cmp
push
xor
xor
cmpsl
sub
xchg
adc
mov
xorb
xorl
call
add
cmp
insl
mov
insb
pop
popf
out
mov
iret
lea
jg
cmp
mov
jae
inc
popa
mov
xorb
bnd
icebp
clc
shr
test
push
sarl
mov
add
data16
xchg
mull
es
fcomps
aam
mov
xchg
adc
test
inc
insl
add
mov
lcall
xchg
mov
push
clc
and
and
and
aaa
int
xchg
shrb
jno
fmull
adc
mov
adc
pushf
leave
sahf
jg
mov
sbb
lds
repnz
cld
inc
cmp
ljmp
xlat
iret
or
push
ds
lock
sbb
fs
add
jge
mov
iret
loop
int3
int3
in
or
jns
push
fwait
sub
jae
cltd
mov
ss
push
xchg
xchg
mov
add
jecxz
fimull
inc
ret
mov
pop
aad
lods
pusha
sub
imul
push
xor
sub
filds
rolb
and
stc
or
fnstsw
cmpb
sbb
ret
push
adc
pop
push
shl
gs
sbb
push
cltd
and
sbb
or
rcrb
roll
sti
aas
cs
jbe
fdivr
ret
popf
cmpsb
jnp
lret
ljmp
lea
out
test
icebp
in
fisttpl
jmp
jecxz
out
jns
outsb
stos
sbb
sbb
mov
mov
and
popa
mov
sub
push
je
sub
inc
xor
pop
js
out
test
inc
lods
repz
loop
lods
adc
lret
bnd
adc
imul
cmp
mov
lret
mov
and
dec
outsl
addb
pop
adc
out
and
in
int3
test
repz
inc
dec
imul
aad
loopne
aad
pop
push
push
cmc
mov
mov
test
lock
xor
or
jp
out
mov
std
arpl
jecxz
inc
repz
cltd
mov
imul
pusha
mov
xchg
or
sbb
imul
xor
cmpsl
lock
lret
xor
invd
dec
inc
add
mov
xor
mov
pushf
mov
lahf
test
cwtl
cmp
push
cs
push
add
dec
mov
loop
test
xchg
add
mov
pushf
xor
cmp
pushf
mov
imul
ss
and
enter
cld
test
xchg
mov
in
sbb
hlt
push
in
jg
imul
jle
or
call
sahf
dec
test
cmp
pop
mov
pop
mov
fmuls
rcrb
mov
push
lcall
jae
movsl
inc
mov
dec
clc
sub
mov
xchg
cwtl
push
pop
out
clc
cmpl
enter
cmpsl
cmp
shrl
mov
mov
xchg
mov
shl
test
movsb
cmp
mov
test
add
or
push
lcall
or
or
pop
inc
cmpsb
lret
subl
push
dec
add
pop
test
repz
jge
popa
jge
test
push
imul
call
jb
arpl
adc
cmp
loope
dec
pop
jecxz
loopne
inc
out
sub
xchg
jmp
cmp
imul
jp
cmpsb
inc
sbb
gs
out
mov
int3
or
nop
lcall
inc
into
mov
cmp
jae
cmp
loopne
pushf
xchg
rolb
dec
cmpsb
add
inc
mov
add
xor
add
sub
dec
gs
mov
dec
aas
je
loop
out
shll
mov
or
and
out
jns
mov
out
push
cmp
aaa
test
insl
les
push
cmp
lock
out
sbb
pop
dec
aaa
shll
sub
rcrb
lcall
or
int3
decl
xor
dec
dec
pop
xchg
adc
jmp
in
xor
add
xchg
repnz
scas
out
leave
not
xor
push
aam
enter
inc
cltd
addr16
inc
xor
lods
imul
call
xchg
ds
fidivrl
xor
es
cli
push
push
clc
sub
mov
or
cmpsb
and
mov
into
cli
push
mov
lods
sub
sub
adc
imulb
cltd
pop
and
push
jne
and
pusha
sbb
sbb
push
sub
jg
aaa
jmp
mov
aaa
mov
cmp
sbb
into
popf
inc
es
pop
inc
add
fisubl
mov
push
cltd
mov
repz
sti
cmp
sti
cmp
xor
mov
std
fadds
push
repnz
cmpl
and
mov
les
fucomp
ss
cs
add
int
aaa
sub
daa
adc
jecxz
pushf
pushf
enter
imul
jbe
inc
das
repz
and
sub
inc
pop
negb
add
icebp
xor
in
sbb
adc
orl
sbb
cld
mov
mov
pop
and
cmp
xor
outsb
aam
clc
jnp
sub
add
dec
popa
sub
or
fildl
orb
idivb
and
fwait
insb
decl
xlat
stos
repz
es
adc
scas
and
into
ds
leave
cmp
sti
dec
push
lahf
push
mov
fnstcw
mov
push
jg
test
pop
fbld
mov
jae
std
lret
pop
cmc
jle
cltd
stos
stos
lcall
loope
nop
insb
mov
sti
dec
loop
icebp
test
clc
pop
lret
mov
pop
mov
push
xchg
cld
sbb
and
mov
iret
dec
adc
js
xchg
xchg
pop
pop
gs
insl
fdivl
cmp
dec
fs
xchg
push
mov
xchg
or
mov
inc
mov
sbb
ja
out
loope
clc
enter
inc
arpl
dec
pop
cltd
pop
mov
testb
dec
xchg
mov
jae
push
cmpsl
push
in
arpl
jmp
push
inc
loopne
and
mov
fld
sbb
or
xchg
aas
sub
outsb
stos
jge
in
lds
mov
stc
dec
add
xchg
mov
mov
push
mov
push
ret
push
sbb
pop
mov
cltd
imul
xchg
lahf
mov
pop
call
push
stos
mov
pop
add
test
scas
push
inc
xchg
and
dec
mov
ss
mov
call
loope
cs
mov
xchg
xor
pusha
loop
shll
adc
loopne
jbe
lcall
les
mov
add
cmp
dec
int
xchg
pop
cs
push
cwtl
subb
and
mov
jmp
xor
out
mov
adc
fucom
enter
adc
mov
andl
stc
out
push
cmc
mov
or
xchg
aad
ss
orl
insl
ret
insb
inc
mov
fisubrl
jp
xchg
std
mov
popf
adc
mov
and
in
push
cltd
sub
mov
rcl
popa
in
popw
in
xor
mov
cs
mov
cltd
cmp
pop
mov
fisubrl
pcmpeqw
xchg
push
pop
push
adc
aas
sub
stos
icebp
add
push
cld
dec
jg
sbb
jle
insl
mov
add
jle
inc
mov
imul
sbb
push
arpl
mov
push
xchg
iret
or
push
xchg
jae
sub
pop
dec
cmp
add
mov
pop
nop
test
or
inc
xor
push
or
pop
push
lock
mov
call
inc
xchg
ret
adc
pop
mov
add
inc
sub
fadds
lea
or
adc
dec
pop
add
insl
cmp
movsb
jg
sbb
in
shlb
repnz
enter
jns
mov
mov
loope
pop
dec
aad
loope
push
pop
jmp
inc
mov
add
test
fs
push
push
push
cmp
push
and
mov
pop
dec
insl
cwtl
add
daa
stos
cwtl
fisubrs
lahf
adc
sbb
mov
push
movsb
lods
mov
sub
adc
push
lea
lret
lea
push
out
pop
xor
je
pushf
xchg
mov
in
fsts
and
inc
scas
mov
outsb
cs
xchg
adc
aam
sbb
rol
push
ja
cmpsb
mov
dec
or
popf
scas
jnp
pop
fsubr
mov
add
mov
mov
insb
push
roll
test
ret
or
inc
sbb
lcall
xchg
dec
push
xchg
aad
xchg
fdivrs
mov
push
mov
mov
and
fsubr
mov
iret
mov
adc
mov
mov
outsl
sbb
shrb
out
dec
movsl
xchg
jnp
fcoms
out
jne
and
mov
test
cmp
cmp
push
pop
mov
imulb
xchg
mov
fwait
inc
icebp
cli
mov
enter
xchg
jge
outsl
pusha
inc
add
sti
mul
xchg
xor
sahf
call
and
gs
and
sub
fs
jle
rol
fidivs
inc
dec
push
enter
iret
jg
dec
xchg
in
roll
cs
das
dec
push
shr
hlt
sub
xchg
loopne
mov
add
scas
shlb
dec
cltd
mov
adcl
or
aad
cmpsb
sub
filds
ds
adc
lea
jns
movsb
dec
pop
lock
inc
cs
repnz
mov
ret
pop
push
lock
jb
lock
test
mov
fwait
push
jmp
rorl
into
mov
and
stc
imul
fildl
xor
into
jns
cmp
arpl
mov
aad
out
out
push
notl
jmp
jnp
dec
outsl
stos
jnp
popf
stos
push
test
cmp
pop
lret
scas
sahf
test
pop
adc
adc
or
pop
mov
leave
cmp
cmpsb
mov
cmp
inc
sub
mov
fsubrl
fwait
inc
aas
mov
jno
inc
xchg
xchg
sbb
out
xchg
lods
test
or
or
jl
inc
pop
sub
cs
test
mov
xlat
or
dec
lret
fdivs
lcall
shrb
int3
scas
bound
pusha
and
cmp
aaa
ja
xchg
jge
add
and
dec
lea
cs
or
cmpl
gs
outsb
sbb
sub
aas
xor
jbe
push
dec
cld
mov
inc
not
les
clc
insb
mov
xchg
daa
test
test
sbb
adc
jecxz
lret
lods
and
inc
sub
aam
pop
jl
cmp
push
sbb
lahf
les
test
inc
cmpl
inc
jmp
dec
and
cmc
mov
adc
mov
sbb
ficoms
add
and
clc
jno
or
sub
pop
mov
rorb
mov
push
xchg
mov
mov
sbb
fs
test
sub
icebp
pop
push
adc
sbb
call
sti
push
pop
dec
clc
insb
dec
aad
movsb
jmp
push
inc
divl
adc
lea
aad
js
mov
dec
ret
movsl
mov
mov
ret
or
flds
sub
sub
int
mov
aad
jo
pop
jne
sbb
mov
mov
nop
cmp
push
fcompl
pop
inc
cmp
stos
inc
cmp
mov
mov
push
leave
inc
ret
clc
lds
push
mov
jmp
pop
or
push
mov
or
inc
xchg
out
imul
adc
dec
and
push
add
scas
xchg
inc
movd
in
add
jae
in
jge
lret
arpl
out
cmp
inc
push
pop
pop
sub
xchg
or
mov
xchg
bnd
push
lock
adc
stc
sub
push
outsl
xchg
sahf
jle
inc
cld
ja
jl
cmp
mov
add
enter
enter
add
jg
std
fisubl
lock
stos
mov
push
shll
lcall
push
push
dec
push
jge
dec
sbb
cmpsb
xor
and
mov
jmp
rcll
std
xchg
fcomps
mov
rcll
stos
out
dec
cmpsl
adc
adc
sbb
into
mov
mulb
insl
sbb
test
jle
inc
push
pop
mov
inc
nop
sarl
jo
lret
xlat
imul
jge
pop
leave
add
mov
arpl
mov
jae
mov
sbb
jg
cs
dec
nop
je
dec
jnp
sub
xchg
fdiv
pop
ret
ja
xor
xchg
push
push
lock
inc
icebp
or
fmull
xchg
mov
jo
sbb
fildl
sub
push
adc
adc
cvtpi2ps
xchg
and
cmp
cmp
mov
push
cmp
fadd
xor
adc
clc
or
repnz
lret
jle
xchg
xor
mov
push
repz
sti
xor
ds
mov
mov
pusha
jo
cmp
jg
insb
xorb
inc
inc
aad
mov
arpl
fimuls
leave
add
cmp
sbbl
mull
mov
in
dec
mov
add
sub
sbb
mov
add
jl
cmpsb
int3
out
pop
leave
adc
add
arpl
stos
cmp
jl
add
push
lret
sbb
js
xchg
insl
xor
test
rcl
push
pop
fldenv
push
loopne
or
push
mov
cmp
push
mov
shr
or
int3
push
mov
repz
mov
int3
test
jo
jne
pushf
xchg
sbb
je
jge
in
aad
test
jb
insl
movsb
aam
cmp
jb
jbe
fcoml
pusha
test
sbb
inc
int3
xor
cli
jg
mov
push
lret
incb
rol
jns
sub
jae
mov
aam
roll
mov
add
mov
mov
sbb
aad
fs
cmp
lahf
nop
test
sbbl
enter
jmp
ret
mov
ja
add
popf
lcall
mov
cmp
add
xchg
adc
movsl
sahf
mov
arpl
insl
xchg
jg
leave
testl
or
xchg
cmp
iret
sti
cmpb
pop
mov
mov
inc
inc
mov
xchg
push
notl
fcompl
popa
pop
mov
cmp
mov
pop
mov
xchg
xchg
fstl
xchg
data16
fdivrl
push
cmpsl
cmp
decb
movsb
jp
jo
test
push
or
add
push
xchg
mov
add
daa
mov
inc
arpl
in
mov
lret
mov
je
inc
das
mov
xor
mov
pop
or
and
or
dec
sbb
mov
pop
orb
into
jnp
enter
adc
popf
mov
insl
lea
shlb
xchg
mov
mov
inc
hlt
clc
or
pop
rorb
cmpsb
cmpsb
fcoml
sbbb
sbb
aam
fwait
xchg
iret
mov
xchg
mov
jecxz
pop
nop
xchg
lds
sub
pop
int3
push
nop
rorb
or
imul
push
jg
sahf
mov
push
movsb
xor
cmp
jns
in
mov
mov
cltd
shl
sub
adc
jp
push
pop
inc
int
fs
adcb
and
jmp
cltd
mov
insl
push
xchg
movsb
xlat
mov
adc
iret
xchg
out
and
add
call
test
mov
data16
cli
push
mov
and
xchg
sbb
sahf
pop
sub
pop
push
sbb
dec
sbb
jg
jbe
xor
sbb
inc
int3
dec
rol
lahf
loop
repnz
mov
pushf
cmp
push
cmpsl
pop
cmp
rcll
mov
inc
js
jg
or
mov
aas
jge
xchg
xor
rolb
xchg
adc
enter
cmp
fistpll
inc
mov
lahf
xlat
je
mov
pop
aad
jae
stc
push
xor
and
punpckhdq
rorb
jecxz
push
pop
lock
pop
subps
ja
dec
sarb
mov
xchg
aaa
movsl
xchg
loop
stc
cmpsb
lret
jmp
xchg
out
popa
dec
add
out
fimull
sub
bound
jns
pop
incb
jmp
cwtl
pusha
gs
pop
stos
daa
lock
jl
popa
push
xchg
xchg
leave
daa
call
cli
cmp
adc
stos
push
push
pop
xlat
test
popa
mov
inc
sahf
jo
xor
mov
aaa
aaa
push
pop
sti
je
gs
loope
sbb
insb
mov
test
imul
push
mov
mov
sbb
cwtl
or
dec
jmp
xchg
sub
xchg
jp
popf
xchg
pop
repz
insb
mov
push
aaa
mov
mov
jl
and
icebp
das
and
scas
mov
jnp
xor
xchg
and
call
and
pop
ds
dec
dec
test
out
insl
xor
cmp
imul
mov
cmp
sub
jae
mov
cmpsb
aad
jmp
mov
cmpsb
ss
pop
mov
pop
sub
mov
ret
stc
fdivrs
mov
mov
incl
add
js
inc
js
and
adc
mov
imul
imul
xor
push
enter
or
add
movsl
mov
pop
ret
pop
mov
pop
movb
cmp
shlb
mov
sub
or
xchg
arpl
jp
inc
push
repnz
lock
loope
xchg
push
lea
cmp
mov
sbb
dec
fdivr
nop
sub
jl
push
bound
mov
inc
cltd
jp
push
and
pop
sbb
push
jne
adc
add
xchg
dec
xchg
sbb
inc
sub
mov
lds
fsubs
mov
pop
loop
fistps
scas
pusha
or
dec
psubd
shlb
nop
add
mov
jne
pop
mov
cmp
jb
cs
in
xor
mov
andl
push
pop
repnz
scas
andl
in
jp
repnz
sub
enter
dec
push
arpl
ljmp
out
push
sbb
push
xor
jl
push
icebp
pop
jp
or
mov
push
into
aam
add
dec
iret
lahf
jecxz
mov
ljmp
and
out
mov
stos
jg
pusha
into
sbb
cmpsb
xor
xor
inc
aad
pop
push
add
shl
pop
stos
sub
and
jnp
retw
dec
insl
mov
xlat
insb
es
mov
int
sub
lahf
jmp
cltd
mov
test
jnp
inc
movsb
mov
and
sbb
add
in
mov
pop
js
bound
inc
shl
mov
fildl
shll
addl
add
sub
fsubrs
or
or
arpl
or
xor
das
out
dec
or
xor
mov
pop
mov
mov
push
test
dec
sbb
jp
fidivrs
cmp
mov
jge
pop
push
mov
ret
mov
scas
je
dec
and
shrb
push
std
lret
or
cwtl
stos
mov
imul
aas
sub
mov
sub
dec
notl
mov
loopne
cltd
and
stc
insl
test
fistl
jbe
out
cmp
jmp
je
jg
shrb
push
xchg
int
add
jl
add
mov
cmpb
adc
fistl
cmp
fwait
aaa
or
cmp
push
out
cmp
test
out
test
enter
jge
mov
adc
jl
call
sub
imul
aam
mov
mov
popf
mov
lcall
divb
xchg
movl
or
out
jns
mov
aam
push
jbe
pop
inc
hlt
pushf
daa
xchg
push
jle
rorb
fisubrl
mov
mov
cli
out
mov
mov
sub
in
arpl
add
xor
test
mov
sahf
dec
mov
jnp
push
es
xchg
hlt
fmull
sub
in
add
pop
add
mov
repz
fsubrs
insl
insb
int3
and
fmull
xor
sub
fistl
das
push
mov
lds
or
mov
je
imul
dec
sub
inc
xchg
mov
fdivr
aam
and
push
cmpsb
and
jg
jns
dec
push
test
jns
daa
out
mov
sub
rolb
lret
loop
je
cmp
orb
xchg
adc
and
mov
incb
pop
dec
cli
ret
and
adcb
in
pop
and
ret
xor
fistps
cmp
pop
inc
test
hlt
roll
mov
or
shll
cmp
rcll
das
push
xor
dec
jo
icebp
cmp
jp
add
das
push
push
dec
out
mov
jbe
ss
sub
jae
jmp
adcl
cmp
ljmp
pusha
arpl
jns
decl
jae
jbe
sbb
adc
jnp
add
push
push
xor
idiv
pop
xchg
jge
xlat
adc
sub
mov
push
xor
sti
je
lods
push
inc
aad
outsl
out
cltd
mov
orb
cmp
adc
jnp
shlb
aam
scas
and
inc
cmp
int
xchg
incb
notb
ffree
mov
cmp
in
mov
sti
lea
or
das
int
push
xor
leave
jg
lahf
cli
rorl
pusha
xor
mov
loopne
test
fiadds
cs
test
mov
pop
arpl
or
orb
push
inc
test
sub
add
sbb
int
pushf
dec
push
fisttpl
ror
mov
in
aad
xor
dec
adc
cmp
jns
mov
jge
je
pop
pop
and
bnd
mov
mov
push
lahf
hlt
push
ficompl
ja
scas
sbb
roll
push
jmp
sbb
lods
add
pop
stos
adc
sub
sub
hlt
ja
insl
lret
add
mov
idivb
ja
adc
inc
add
xchg
sbb
icebp
call
dec
pop
xchg
xchg
pop
ljmp
in
xor
dec
inc
push
mov
add
roll
fidivl
xchg
inc
mov
int3
pop
push
js
jo
push
push
xchg
movsb
xchg
std
popa
mov
xor
push
xchg
fwait
pop
cwtl
inc
sbbl
movb
mov
cmc
addr16
xlat
sub
loopne
cltd
cmp
cmc
clc
mov
sbb
pop
pop
xor
int3
add
scas
xlat
adcb
je
fldcw
cmp
cmpsb
insb
xchg
sbb
push
inc
mov
and
jg
xchg
fsubrs
and
cwtl
or
enter
xchg
call
mov
shlb
lret
lods
add
mov
mov
pop
out
adc
pop
or
push
cmpsb
daa
ljmp
rorb
dec
xchg
call
sbb
fnsave
cmp
xchg
sahf
aad
xchg
scas
mov
or
sbb
xchg
dec
mov
mov
or
pusha
mov
mov
mov
int3
mov
pop
add
daa
ja
push
xchg
mov
mov
test
jne
push
sarl
fstps
pop
stc
hlt
clc
add
push
lea
outsb
iret
jge
jecxz
jno
pop
popa
pop
mov
gs
push
and
adc
or
xchg
mov
mov
cwtl
popf
adc
xchg
dec
cmp
enter
pop
jmp
aaa
xor
ds
mov
bound
xor
pop
cmp
daa
and
stos
lret
jle
dec
mov
icebp
leave
sbb
push
jns
xor
mov
sbb
ret
outsl
daa
add
call
call
pop
add
and
adc
sti
xor
dec
ss
adc
push
lret
and
sub
in
add
dec
shlb
xor
ror
xor
xchg
sbb
mov
shl
aam
rorb
dec
dec
dec
je
mov
fisubrl
push
in
xchg
ds
sbb
ja
icebp
mov
dec
pop
push
shll
push
xor
jmp
adc
pop
sub
fucomi
push
sti
nop
mov
aas
fwait
in
xchg
cmp
lahf
dec
pushf
test
push
pop
fwait
out
pop
cmpsl
or
adc
aad
ss
push
shlb
test
or
into
inc
js
clc
inc
or
or
sarl
inc
sub
fwait
cmp
leave
add
daa
and
mov
mov
jmp
in
cmp
cmc
sbb
jns
popa
mov
and
inc
sbb
or
dec
pusha
push
jecxz
or
xor
mov
jns
mov
xor
jae
aaa
in
push
add
mov
mov
inc
lock
cli
enter
sub
cmp
lret
mov
inc
clc
iret
movsb
mov
fstpt
sub
jl
mov
jle
and
or
dec
arpl
data16
std
cmp
aad
imul
xchg
pushf
loope
mov
imul
dec
shrl
iret
mov
mov
mov
subb
popf
cmp
out
jge
or
pop
jo
pusha
lods
shll
pop
adc
cmpsb
faddl
or
sbb
jb
lock
and
shrb
push
and
pop
dec
mov
sub
mov
test
cli
xor
mov
cmpsb
insl
sub
pop
mov
mov
jecxz
inc
mov
jge
mov
dec
and
and
insb
imul
enter
xor
xchg
std
mov
or
shl
mov
dec
ja
cltd
cmp
ljmp
std
pop
add
test
out
scas
push
ja
call
and
or
std
and
sahf
cmpsb
rcrl
dec
lcall
sbb
lods
xor
fwait
cmc
xor
shr
mov
popf
incl
mov
icebp
jl
nop
push
mov
add
in
ret
pop
cmp
daa
sbb
push
fidivs
xor
nop
ss
inc
lret
pop
add
mov
dec
mov
sbb
and
push
inc
pop
nop
lea
jne
or
fiadds
or
add
and
icebp
test
lret
daa
int
jo
or
cmp
data16
xor
xchg
dec
hlt
mov
push
xchg
test
dec
push
adc
iret
cltd
ds
out
arpl
cs
cmpb
lret
add
lods
mov
aad
arpl
in
jmp
add
push
push
mov
fcmovne
inc
adc
xchg
mov
imul
mov
xor
jle
les
pop
in
mov
fs
pop
addr16
and
ljmp
inc
rcr
xlat
or
mov
rolb
jb
jno
or
cmp
inc
xor
aad
mov
popa
shrb
mov
and
cmpsl
dec
out
inc
push
sarl
mov
dec
test
mov
mov
in
lock
das
sub
mov
or
mov
out
vmovntdq
mov
leave
sub
pop
inc
cmp
sub
cli
or
enter
sub
call
and
stos
and
mov
test
pop
fdivr
mov
addr16
push
cs
jo
mov
lods
add
cmp
push
adc
dec
or
leave
loop
lods
iret
mov
mov
and
push
je
stc
fdivr
lock
cmp
push
scas
sbb
sarl
popa
xchg
aaa
sahf
mov
rclb
sbb
xor
subl
add
les
push
xchg
sbb
iret
sar
in
or
inc
xchg
sbb
sub
push
sub
test
push
add
mov
ficompl
ret
insb
bound
xor
aas
mov
test
nop
loop
jle
add
sbb
icebp
pop
sahf
iret
inc
push
dec
push
cmp
dec
inc
sub
push
fcmovne
dec
leave
fwait
aam
push
mov
vphaddubw
ficomps
stc
cmp
inc
imul
aad
mov
xchg
mov
mov
sarl
cmpsl
clc
adc
cmpsl
jnp
clc
cmpb
jb
sbb
sarb
cmp
and
test
mov
lret
pop
test
in
jae
test
or
orl
or
mov
dec
xchg
pop
dec
scas
pushw
sbb
mov
mov
mov
jge
fmull
es
xorl
mov
incb
imul
cs
imul
imul
popf
lods
xchg
add
pop
push
jns
add
outsl
jp
dec
negl
mov
into
sbb
jb
jae
mov
xchg
jae
and
enter
das
lea
xchg
dec
cmpsl
test
jecxz
pop
xor
adc
or
add
push
leave
pop
arpl
pusha
xchg
out
ljmp
mov
mov
test
fprem1
aaa
stc
clc
scas
sub
into
mov
movsl
xchg
or
daa
mov
sbb
dec
and
dec
imul
sbb
test
repz
lds
inc
flds
sub
test
aas
inc
loop
xor
push
repnz
and
jnp
mov
jb
fidivrs
and
mov
movsl
pop
add
mov
into
fmulp
pop
mov
lea
sbb
fidivrs
fimuls
xchg
data16
jle
mov
dec
ja
rcrb
jno
mov
pushl
inc
pushf
jb
js
fs
fidivl
insl
cmp
fisubrl
xor
cmp
inc
xor
jle
sub
dec
lods
xchg
jb
loope
fwait
or
mov
push
lahf
mov
imul
movsl
mov
clc
cmp
movsb
lret
hlt
push
dec
int3
mov
popf
add
dec
sbb
and
inc
test
push
cld
or
je
inc
int3
pop
add
js
xor
in
sbb
or
and
mov
repz
dec
repz
outsl
fcomi
dec
in
out
add
mov
out
fmul
mov
icebp
push
mov
ret
fs
dec
sahf
cltd
data16
mov
dec
cmp
scas
int
push
mov
ret
clc
xchg
fs
lcall
cmpsb
push
aaa
fisubl
pop
leavew
and
adc
pop
call
mov
in
out
pop
fistpll
inc
mov
push
sbb
and
jmp
ficoml
fdivl
repnz
out
inc
sbb
mov
inc
es
repz
push
jne
cmc
add
pop
nop
mov
xchg
cmc
pop
jmp
mov
cwtl
nop
ds
push
mov
xchg
sub
push
repnz
enter
sub
aaa
aam
jl
cwtl
pop
stc
fiadds
adc
movsb
xchg
es
test
daa
push
rclb
and
push
pop
test
cltd
or
push
xchg
sbb
dec
scas
or
dec
lea
enter
sbb
dec
fadds
bound
mov
dec
fldt
inc
cmp
add
fisubs
lock
xchg
jg
insl
or
mov
cmc
je,pt
xchg
inc
bound
popa
icebp
cli
pop
enter
outsb
lods
mov
leave
test
push
jle
ret
stos
sti
xchg
xchg
sbb
jmp
pop
mov
or
sti
addr16
inc
pop
dec
roll
out
and
lcall
or
pop
cli
mov
push
inc
jno
fsubs
jno
pop
fadds
bound
in
in
aam
cmp
inc
pop
ds
in
xchg
cmp
dec
mov
shlb
loope
pop
sahf
subl
rorl
cmp
and
xchg
pop
xor
lds
cld
cli
jl
jp
arpl
sub
jne
paddq
lds
cwtl
fistps
cmp
pop
mov
push
fisttpl
push
push
xchg
dec
sub
in
adc
fdivr
mov
jmp
or
cmp
jbe
lret
xchg
sbb
mov
outsl
adc
mov
dec
jmp
jo
sub
inc
adc
lret
xor
sahf
cmp
lcall
or
bound
iret
mov
push
pop
scas
stos
lret
out
loope
loopne
lret
scas
jp
sbb
jl
pop
xor
fildll
dec
bound
loop
call
pop
andl
add
jge
hlt
xor
jb
lock
mov
pop
psubw
mov
into
mov
test
xchg
jno
movsl
jmp
addb
ficoms
xor
dec
or
ret
lds
or
jp
int3
cld
jns
mov
mov
sbb
aam
lods
xor
clc
jae
inc
fmull
jge
and
andl
dec
ficompl
xor
std
aad
je
cmp
mov
and
adc
xlat
push
mov
in
ljmp
inc
ret
fwait
sti
jle
fwait
xchg
or
dec
cs
gs
inc
xor
jb
mov
nop
orb
rcll
inc
cmpsb
gs
lret
cwtl
dec
xchg
int
sbb
xchg
sbb
and
lods
and
cmpsb
jb
sbb
or
ja
and
or
jecxz
pusha
pushf
mov
leave
sbbl
outsl
rclb
das
jns
mov
and
in
fiaddl
aad
out
jne
aad
stos
cs
or
mov
ret
push
add
push
fadds
mov
lahf
or
loop
pushf
mov
or
in
xchg
in
shlb
push
repz
loop
adc
adc
sbb
sbb
push
xor
jns
pop
cmpsb
stos
fsub
pop
pop
cwtl
dec
pop
sub
jmp
js
mov
fidivs
mov
lret
sbb
or
mov
jecxz
jb
pop
mov
sti
outsb
push
dec
or
ds
fisttpl
aas
sbb
movsl
clc
iret
mov
popf
ds
stos
xchg
mov
pusha
ljmp
jae
int
in
test
xchg
mov
inc
gs
and
js
das
cltd
add
lret
cmp
jge
dec
inc
loop
imul
fs
xor
insl
lcall
xor
mov
jmp
rorl
icebp
mov
pop
in
pop
sahf
jmp
stos
push
pop
pop
mov
lods
push
adc
aad
hlt
lods
pop
lcall
pop
aas
bound
jge
mov
and
stc
in
mov
xchg
or
xchg
scas
sub
mov
xchg
lods
rorb
pop
mov
xor
lcall
cs
jns
push
imul
xor
mov
cs
movsl
and
cs
inc
aaa
std
sti
cmpsb
in
lret
jno
cmpb
xor
mov
fldenv
sbb
sub
cmc
mov
dec
xchg
clc
repnz
pop
je
pop
aas
stc
loope
push
push
jns
arpl
fstpt
mov
ret
clc
ret
mov
out
fmull
fbld
push
mov
popf
dec
add
mov
shll
aas
test
leave
sbb
daa
jno
mov
es
inc
es
push
pop
ds
add
popf
fwait
test
aas
int
out
push
sub
push
or
pop
add
iret
out
add
shrb
lods
jb
push
adc
aaa
xchg
mov
addr16
fldln2
and
xchg
fcmovb
pop
insb
into
or
mov
sbb
adc
push
sub
inc
inc
cmp
sbb
cltd
or
mov
jmp
scas
adc
int3
mov
std
test
ds
rorl
xchg
pop
dec
inc
or
pushl
ljmp
sub
inc
stc
aaa
adc
leave
lea
mov
add
push
sbb
in
sbb
pop
mov
lcall
inc
fstp
repnz
es
in
out
outsb
add
fchs
lret
sub
aaa
scas
jge
jne
adc
mov
fisubl
jmp
imul
repnz
mov
push
out
movsb
popa
pop
lods
fwait
cmp
fdivr
pop
fisubrl
ret
ret
enter
lret
and
out
pop
insb
xchg
add
mov
popa
push
and
je
adc
cmc
mov
cwtl
push
subl
push
push
jmp
add
jmp
pop
outsb
jmp
lods
push
push
pop
mov
jmp
or
pop
hlt
iret
inc
rclb
cmp
bound
mov
mov
add
mov
sbb
stc
or
movsb
gs
pop
test
sub
out
cld
int
cmp
ret
jle
adc
jecxz
dec
sbb
lret
pusha
sub
test
and
inc
out
mov
imul
pop
ror
jbe
inc
xlat
pop
lds
arpl
sub
lret
outsl
mov
xlat
arpl
and
mov
in
das
call
jbe
int3
mov
fisubrl
insb
dec
mov
in
adc
mov
cmp
jnp
cmc
sbb
in
sbb
dec
lret
xor
ja
or
or
inc
push
cmp
jge
add
cltd
mov
in
fcoml
lcall
dec
or
jecxz
pop
stos
sub
cmp
push
lods
jae
dec
xor
mov
loop
test
jmp
jae
lods
cld
dec
mov
push
aam
movsb
pusha
adc
inc
jno
movsl
and
adc
in
dec
out
pushf
ret
fistps
xchg
outsb
test
cmp
outsl
rorl
fs
dec
insl
dec
jno
das
xchg
jno
lods
jb
cmp
xchg
xchg
jbe
jg
mov
enter
mov
cwtl
pushf
pop
inc
fcoms
pop
pop
pop
dec
add
cmp
cmp
push
insl
jmp
and
pop
sbb
push
push
push
xchg
call
outsl
jns
push
mov
fucomp
sub
jns
xor
push
shll
stos
add
sahf
jb
mov
cmp
scas
lods
mov
mov
sub
or
sbb
aaa
sbb
add
pop
popa
outsl
mov
inc
lret
in
mov
mov
int
arpl
lock
mov
dec
push
add
jne
arpl
add
push
idiv
mov
push
test
adc
push
fwait
adc
push
daa
dec
inc
scas
fdiv
lods
rcll
cli
inc
adc
repnz
add
xor
sahf
dec
mov
rolb
popf
es
adc
dec
addb
sub
adcb
sub
cmc
and
mov
scas
mov
pop
pop
xor
ret
and
rol
jmp
dec
and
sahf
out
test
mov
aam
fnstsw
push
jo
ja
ret
mov
das
jmp
fistpl
mov
mov
mov
sahf
jns
and
cwtl
dec
in
mov
nop
aad
cli
sbb
push
cli
shl
mov
ror
mov
lods
rcl
adc
sub
mov
or
dec
sahf
lahf
adc
lods
mov
lret
sarb
js
frstor
es
mov
mov
stos
sub
add
loope
scas
repnz
imul
cld
fldenv
jecxz
xchg
mov
das
movsl
repnz
add
fistpll
sbb
daa
cmp
sbb
stos
imul
cmp
pop
lcall
jns
and
jmp
fimull
xchg
fwait
sbb
push
mov
mov
xchg
xchg
mov
fimuls
scas
push
fmulp
and
pop
dec
andb
adc
pusha
mov
cld
das
adc
ds
shlb
pop
insb
and
dec
mov
or
mov
incl
fisubl
cmpsb
sbb
loop
mov
popa
subb
push
lcall
push
inc
mov
add
push
ljmp
push
and
shr
repz
add
popaw
adc
add
les
insb
bound
xchg
xchg
testb
faddl
pusha
inc
pop
pusha
fbld
test
and
das
xor
fcmovnb
cmp
les
mov
adc
je
or
pop
sbb
popf
or
jl
adc
pop
jo
jmp
add
out
enter
sbb
xchg
xor
xor
filds
sub
xchg
stos
jnp
aaa
lods
popa
fdivrs
test
ljmp
dec
mov
mov
push
pop
sub
movsb
jge
repnz
ret
jl
std
sbb
push
adc
and
out
xor
xor
mov
mov
dec
add
add
aad
rclb
cmp
cmp
pop
cmpsl
fnstsw
dec
adc
jno
loopne
test
arpl
cmpsb
jns
sub
andb
xchg
push
push
jo
inc
mov
data16
cmp
xchg
int
add
in
mov
or
xchg
adc
adc
push
or
imul
lahf
push
ret
aaa
inc
out
add
xchg
enter
xor
or
pop
xchg
lcall
push
xchg
add
aaa
add
div
mov
dec
sbb
mov
aaa
stc
dec
mov
cmp
xor
dec
and
inc
mov
ficoml
sbb
mov
insl
jae
mov
in
mov
and
jg
mov
mov
adc
fs
lea
or
int
bound
mov
popa
mov
movsl
in
inc
cmp
in
leave
ss
adc
fldcw
adc
and
cmp
lahf
mov
repnz
push
inc
call
icebp
out
add
mov
sub
dec
lea
ss
inc
xor
jne
xchg
adc
ljmp
xchg
pushf
xchg
movsb
push
call
adc
push
or
int3
cwtl
jecxz
test
mov
mov
es
lret
mov
ljmp
jbe
or
mov
inc
out
std
mov
mov
push
mov
in
addr16
sub
call
sbb
fbstp
movsb
mov
xchg
rep
loopne
arpl
xchg
stos
fwait
insl
pop
xor
adc
push
jbe
mov
cltd
dec
popa
xor
sarb
cmp
mov
push
mov
ss
andb
xchg
mov
iret
or
mov
sbb
cmpsl
and
rcrb
push
push
add
mov
or
sbb
fs
push
hlt
rorl
mov
dec
add
lds
inc
sub
int
mov
xor
fldl
mul
mov
jbe
test
push
xchg
jno
push
sti
insb
sti
cmp
rolb
ja
mov
dec
or
test
adc
cli
dec
adc
jbe
sbb
dec
insl
mov
sbb
frstor
adc
lcall
pop
jo
pop
rolb
pop
push
roll
sub
add
inc
adc
pop
sbb
out
arpl
fdivrl
mov
and
jne
in
scas
enter
or
shll
add
imul
dec
inc
movsb
mov
mov
les
fwait
in
es
sbb
rcrl
xor
loope
sbb
sbb
popa
iret
push
xor
xchg
pop
stos
fisttps
xor
jne
push
mov
jge
fdivrp
les
loopne
jne
leave
push
and
out
dec
and
adc
adc
cmp
inc
mov
dec
dec
sti
into
cmc
xchg
xor
scas
jg
push
add
xchg
movb
or
leave
push
sub
jbe
gs
mov
xchg
ret
pop
lcall
or
mov
dec
jnp
xchg
out
mov
sbb
fadd
mov
lcall
and
jmp
pop
add
xor
ss
pop
sbb
sub
into
stos
adc
jnp
xor
xor
fistpl
xchg
dec
pop
fsubs
xchg
jns
cmpb
adc
addb
add
xlat
shlb
iret
jo
push
ror
sahf
mov
ss
xchg
cld
subl
or
fdivrl
loop
mov
jle
add
loop
int3
cmp
jae
pop
add
jno
pop
mov
lret
gs
fwait
cltd
loopne
dec
or
lds
or
sub
cmp
in
mov
les
lds
test
in
je
cld
cmpsl
pop
lds
pop
cs
jne
je
shll
imul
xchg
push
lret
roll
adc
mov
aam
imul
scas
int3
cmpb
lret
inc
scas
movsl
cld
sbb
dec
jg
sub
ljmp
hlt
rcl
clc
pop
push
push
jl
loop
fsubl
add
stc
mov
daa
gs
add
bnd
jae
mulb
mov
rcrb
cld
mov
std
inc
fsubs
add
mov
mov
lock
sbb
daa
scas
sbb
lret
adc
fldcw
repnz
popf
scas
push
pop
dec
pop
movsb
lods
mov
sub
jno
pushf
out
fs
loop
aam
in
cmp
adc
sbb
ret
fildl
mov
mov
mov
and
or
cmpsl
add
adc
jbe
fbld
pusha
lahf
scas
mov
and
cmpsl
xor
sbb
in
adc
xlat
lret
mov
push
lcall
add
idivb
push
push
jmp
push
sbb
mov
pop
jae
imul
push
add
sahf
loope
ret
xchg
nop
lcall
sub
dec
or
cmp
mov
mov
pop
rolb
sbb
adc
cmp
divl
in
repnz
xlat
outsl
xor
fcomip
push
push
lret
ret
and
insb
mov
clc
pop
mov
or
add
ret
push
mov
mov
in
inc
lock
inc
frstpm(287
dec
mov
loopne
dec
cli
push
iret
call
xchg
inc
into
pop
xchg
mov
into
lods
jb
push
cmp
mov
and
jecxz
ret
sti
sub
insl
push
fisubs
sub
ja
xor
frstor
insb
test
inc
insb
xor
adc
sbb
sbb
lds
int
push
pusha
scas
cwtl
or
test
shll
rcll
dec
cwtl
les
dec
mov
nop
call
pop
xor
fwait
in
imul
lods
insl
test
adc
mov
add
jp
stos
sub
outsl
push
and
loopne
and
ss
loope
adc
dec
or
pushf
out
xchg
gs
lcall
daa
rcrl
call
pop
adc
insb
jne
xchg
test
cli
fists
push
xor
popa
sbb
daa
cmc
cmpsb
jno
imul
or
testl
sub
lds
push
inc
aam
mov
imul
and
dec
xchg
andl
cmp
int
push
les
mov
mov
scas
stc
insb
jl
xor
mov
add
sarb
jmp
sarb
jno
dec
lcall
push
decb
jl
repnz
xor
cli
jecxz
fcoml
mov
mov
jb
outsb
test
jb
scas
and
loop
mov
xchg
outsb
or
xor
sub
lods
dec
cmc
mov
mov
inc
rolb
mov
jns
inc
cld
inc
idiv
daa
call
mov
out
sub
jb
int3
outsb
jno
ficoml
cmpsl
pop
mov
into
jmp
xchg
cmp
mov
mov
jmp
cltd
add
cmp
jo
lock
xor
pop
out
arpl
movsb
jl
or
test
test
dec
test
leave
dec
or
lds
insb
pmuludq
jbe
push
cmpsb
cs
jmp
insb
and
les
loope
ljmp
and
sub
pop
out
mov
and
jne
sub
fnstcw
pusha
sub
faddl
icebp
and
aad
inc
mov
adc
cmc
adc
int
das
xchg
mov
subl
inc
add
test
jb
mov
idiv
sarb
add
sub
cmp
or
push
push
mov
push
stos
cmpsl
jo
mov
stc
loop
xchg
pusha
xchg
pushf
mov
inc
mov
hlt
ss
xor
and
sub
mov
adc
call
imulb
lahf
inc
mov
lods
dec
xchg
daa
imul
add
pop
add
add
adc
adc
movsl
out
call
sub
in
xchg
inc
lret
adc
sti
mov
sub
mov
xchg
stc
pop
shll
into
or
inc
push
lds
stc
pop
lock
std
adc
pop
pop
pop
insb
mul
xor
dec
sbb
lret
or
sbb
sbb
pop
pop
arpl
ret
push
pop
lret
xchg
pop
mov
pop
dec
mov
ret
push
dec
jnp
sarb
or
mov
cs
pushf
sub
inc
inc
and
mov
in
mov
out
stc
dec
andl
inc
push
fsubrp
dec
push
mov
adc
pop
decb
xchg
aam
sbb
or
push
mov
data16
mov
xorl
cmpsl
ljmp
gs
push
cltd
lods
mov
push
clc
mov
push
lods
pop
cmpsl
add
dec
and
ficomps
xchg
inc
mov
movsl
pop
jmp
into
negl
dec
jno
inc
nop
fnstenv
push
xchg
and
add
adc
sbb
mov
jno
jecxz
imul
aad
dec
sbb
xor
push
dec
mov
cld
push
cmp
cwtl
mov
fmuls
lahf
in
ds
dec
je
dec
cmc
jge
jecxz
dec
cmp
jmp
inc
mov
jl
push
dec
pop
shll
push
mov
arpl
fnstsw
insl
lods
popf
fsubl
mov
loopne
dec
add
fs
daa
mov
cmp
cli
and
into
addr16
stos
loopne
xchg
sti
xchg
popa
sbb
xlat
out
fdivl
mov
insb
stos
xchg
ja
iret
push
cmpsl
sub
pop
jb
push
sahf
jbe
shrb
jp
out
movsl
cmp
jp
adc
pop
jae
xchg
xor
lods
jmp
scas
lea
mov
out
pop
fsub
sti
push
xchg
and
adc
jnp
jb
addr16
cs
stos
or
sbb
scas
mov
orb
mov
pusha
aam
xchg
lret
out
inc
mov
add
in
dec
jg
xor
sahf
push
dec
cli
add
incb
andb
inc
aam
dec
sbb
lahf
mov
fld
clc
or
jg
aam
pop
push
call
mov
das
dec
das
dec
ss
jp
test
cmp
inc
push
ficoms
out
sbb
push
adc
jae
push
cltd
pushf
mov
xor
lock
out
rcrl
and
mov
add
dec
push
mov
fmul
cwtl
push
js
in
adc
imul
cmpsb
das
jge
hlt
out
sbb
dec
inc
inc
pop
push
mov
jo
popa
lds
fidivrl
int3
mov
dec
decl
sub
dec
cmp
push
dec
outsb
pusha
pop
xrstor
dec
inc
int
or
pop
jmp
push
mov
mov
jb
and
icebp
jg
cmp
pushf
pop
add
xorb
sub
xchg
lods
aas
je
pop
fcmovnb
stos
enter
aad
xchg
mov
fistpll
sub
stos
pop
jmp
das
ret
hlt
adcb
dec
pop
ficompl
in
sub
mov
fbld
push
imul
push
xor
cmpl
gs
mov
sub
lock
jge
cmp
stos
out
or
or
inc
jmp
lahf
mov
inc
mov
and
out
add
sbb
add
jmp
push
outsl
push
xlat
push
push
jg
lahf
pop
stos
or
imul
icebp
xor
in
jg
movsl
clc
notl
aam
sbb
fdivrs
sbb
gs
cli
clc
lods
mov
in
ja
movd
cld
iret
fwait
mov
lods
mov
imul
out
lret
cmp
and
xchg
imul
mov
xchg
inc
dec
clc
and
jns
mov
jno
and
jnp
cwtl
jb
in
pop
sbb
mov
mov
and
mov
lea
clc
es
mov
fdiv
xchg
cmp
fsubrl
mov
mov
pusha
aad
popa
sub
xchg
adc
xchg
dec
ret
outsb
jno
mov
xlat
mov
clc
cmpsl
pop
and
push
cmp
jg
pop
push
imulb
inc
es
mov
jmp
test
xorl
push
or
cltd
testl
xchg
pop
mov
sti
sbb
sbb
faddl
loopne
push
pop
dec
push
das
jbe
pop
xor
ret
jns
jmp
pop
shl
mov
and
add
xlat
pop
add
mov
dec
add
sub
jb
std
orl
dec
test
sbbb
or
cmpsl
mov
testb
adc
repnz
jbe
adc
inc
and
jg
fldt
pop
cmpsl
bound
pop
call
aam
cs
shlb
fsubr
jno
mov
mov
int
pop
mov
es
xchg
push
jge
adc
mov
fnstenv
and
xor
into
sti
mov
lods
jb
mov
out
je
add
add
fnsave
mov
dec
and
push
test
outsl
mov
adc
outsl
mov
ljmp
pusha
jae
jb
addr16
loope
es
out
mov
int
or
jg
js
pop
or
push
add
pop
data16
pop
out
lods
push
je
test
femms
cmp
das
imul
pop
jecxz
cmc
inc
and
or
fstpl
mov
lods
sbb
cmc
add
cmp
dec
pop
dec
and
imul
xor
movsl
stos
push
fisttps
insl
in
cmp
dec
hlt
sahf
mov
aam
push
dec
sbb
sbb
mov
test
paddsb
dec
push
or
adc
fistpl
xor
cltd
cmp
in
mov
or
mov
popf
std
jb
inc
dec
enter
ret
xor
xor
dec
sbb
pop
insb
mov
call
outsl
pop
out
es
test
pop
push
push
pop
xor
adc
iret
popa
in
test
cmp
shrb
xor
or
lea
call
das
adc
inc
jl
mov
jnp
push
fadd
push
nop
shrb
addb
jge
sbb
mov
pop
insl
mov
sub
dec
movl
inc
rorb
mov
scas
andb
lds
inc
popl
inc
scas
or
jbe
dec
mov
in
outsb
mov
and
pop
jp
stos
dec
shrb
test
mov
aad
or
ja
aas
mov
mov
into
mov
out
or
push
xor
cmpsb
xchg
inc
xchg
sbb
jno
in
xchg
cmp
stos
dec
fs
inc
aaa
cmp
data16
jnp
test
push
testb
sub
shr
mov
jp
pop
adc
mov
dec
lret
rorl
movsb
es
cmp
pop
clc
les
incb
arpl
imul
fcmovne
push
add
adc
and
mov
push
push
loope
jp,pn
xlat
rolb
mov
enter
xor
nop
ret
daa
lcall
jmp
das
in
mov
popa
pop
add
rorl
push
xor
incl
pop
pop
lahf
mov
cmp
cmpsb
clc
xor
lds
insl
or
nop
aaa
into
aaa
inc
aad
sbb
inc
pop
sbb
or
repnz
dec
sub
mov
fiaddl
mov
push
cli
mov
push
cmp
negl
mov
jp
cmp
repz
cmpsb
sbb
arpl
enter
xchg
xor
loopne
addr16
jbe
jmp
imul
inc
sti
je
orl
mov
push
xchg
xchg
push
add
jbe
stos
clc
data16
add
insl
inc
icebp
xor
pop
adc
in
xchg
int3
gs
cmpsl
stos
add
outsb
xor
xchg
clc
imul
mov
or
cmp
xor
add
push
leave
pop
lret
push
lock
jns
or
xor
nop
or
or
sub
jns
cmp
add
dec
cltd
mov
xor
push
adc
push
hlt
lods
pop
faddl
dec
xlat
insb
icebp
xchg
jmp
out
cli
add
out
xor
cwtl
shrl
inc
std
adc
lea
mul
xor
xchg
repnz
cmp
fld
cli
and
or
into
mov
adc
dec
rorl
sub
sub
pushf
xor
add
int3
add
divb
add
mov
cli
pop
fwait
jmp
movsb
mov
add
jp
cli
out
add
cmpl
cmp
mov
or
xchg
fistps
pop
adc
fs
mov
jge
dec
jae
push
popa
xor
js
mov
cld
repnz
cmp
testl
add
lds
nop
cs
fcmovnbe
leave
add
aam
ret
mov
mov
repz
or
push
cmpsb
fidivl
mov
sbb
cmp
aas
cltd
jmp
fsts
jo
push
aas
jb
stos
cli
mov
push
adc
pop
pop
xchg
and
and
aad
dec
cld
cltd
and
lods
data16
mov
jb
pop
xor
lods
or
clc
out
aad
inc
hlt
icebp
inc
xchg
mov
sti
mov
lds
cmp
js
push
incb
adc
sub
in
ljmp
push
xor
add
mov
mov
insl
lahf
out
xor
xorl
pop
leave
iret
sub
xor
add
mov
mov
daa
fstps
adc
in
sub
fbld
mov
shl
or
scas
sbb
aam
negb
push
sahf
bound
pop
into
push
leave
pop
sub
add
and
cmp
xor
mov
popa
inc
push
popf
push
ret
cmp
cwtl
out
cmpsl
sbb
std
mov
sub
call
mov
and
jb
jl
lret
cli
icebp
or
in
icebp
cmp
test
push
jecxz
push
push
and
push
icebp
push
mov
dec
cmp
inc
and
jno
rol
adc
pop
and
lods
shlb
dec
mov
ret
mov
jge
sub
dec
adc
push
jge
cmp
mov
sub
in
and
adc
or
outsb
clc
push
shll
in
and
sar
xchg
xlat
push
mov
and
dec
out
movsb
push
pop
or
push
call
outsb
imul
stos
andl
cmp
mov
mov
xchg
push
mov
imul
fwait
mov
fwait
dec
cwtl
mov
fisttps
xchg
pop
sub
daa
clc
ljmp
aas
lret
xor
ljmp
in
fisttps
std
cltd
xchg
inc
push
in
popf
leave
cmp
adc
sahf
cwtl
and
cs
mov
pop
pop
rclb
ret
xchg
mov
jecxz
sbb
cmc
sbb
cmc
and
rorb
mov
add
adc
roll
xlat
ret
sbb
lods
mov
jbe
pop
pop
mov
in
and
imul
adcb
mov
xchg
xchg
sub
jns
jg
inc
popa
bound
int
popa
ljmp
shlb
test
int
jp
jp
movsl
add
sarb
fnstsw
cwtl
jmp
mov
movsl
stos
mov
sbb
std
lcall
fldenv
push
xorl
push
mov
push
cld
cmp
stc
int
inc
jbe
cli
inc
pop
in
or
adc
or
pop
sbb
out
test
filds
shl
into
mov
fxam
sbb
push
add
sar
lea
and
fcmovnbe
add
mov
mov
sub
jns
scas
mov
mov
lcall
inc
divl
in
add
imul
mov
xchg
inc
sub
int3
xchg
mull
push
fwait
cmpsl
mov
pusha
stos
push
in
out
js
aas
out
cld
dec
bound
enter
mov
cli
and
jns
inc
in
movsb
adc
push
or
and
cmp
xchg
daa
inc
pop
pop
daa
lret
lea
pop
cmp
push
icebp
sbb
out
sub
adc
jmp
jnp
pusha
sbb
in
or
test
push
sti
int3
push
pop
fadds
fstl
inc
or
lret
fidivrs
jne
shll
lods
clc
mov
into
pop
repz
sub
fwait
mov
enter
aad
stos
sub
pop
fcoms
out
dec
xchg
cmpsl
cmp
outsl
rol
into
fmuls
jnp
rcr
ficoms
lret
pop
push
lock
or
out
sbb
mov
adc
add
xor
pop
inc
mov
mov
inc
mov
jns
dec
add
pop
inc
push
xlat
sbb
and
sub
cltd
push
cmp
rcll
inc
adc
dec
or
xchg
jbe
push
mov
mov
add
or
adc
mov
std
hlt
faddl
push
test
inc
push
and
xor
add
pop
sbb
in
fs
sub
movsl
ljmp
roll
and
jno
in
push
sub
cmp
js
ret
cs
lret
mov
adc
jno
js
ret
test
fidivl
out
cmp
xor
inc
shrb
lret
and
ret
mov
stc
push
inc
sti
pop
pop
xchg
and
pop
and
jns
mov
lods
popa
jb
call
sub
les
mov
xchg
sub
mov
enter
xor
pushl
insb
mov
movsl
pusha
pop
clc
cmpsb
jne
iret
mov
add
jge
pop
fnstcw
mov
adc
mov
in
insb
loop
inc
cmpsb
xchg
dec
pop
stos
inc
sbb
stos
leave
mov
test
adc
adc
int
lret
rol
xchg
incl
xor
mov
sbb
loop
jns
xchg
mov
cltd
xlat
into
or
cmp
pop
jp
ljmp
pop
mov
push
add
in
inc
push
cmp
dec
rolb
scas
jge
popa
lcall
scas
jne
int3
fsubr
mov
xlat
sbb
xchg
addr16
jbe
add
out
repnz
cmpsl
test
cmp
lcall
repnz
xchg
rcrb
lret
movsb
xlat
push
or
mov
lock
cltd
out
fidivl
mov
fistl
rcrb
jge
addr16
jg
push
aaa
shrb
loope
cmp
xor
and
mov
loope
pop
adc
cmp
imul
mov
scas
xchg
fisubrl
inc
adc
or
mov
or
fadds
jecxz
fchs
pop
repz
movsl
pusha
mov
imul
daa
sub
dec
mov
lret
in
xor
push
lea
cmp
orl
mov
cmp
fucomip
inc
sbb
sub
dec
insb
out
jns
shl
push
dec
repnz
stos
pusha
push
dec
xchg
outsb
test
outsb
test
ljmp
or
push
adc
imull
pushf
jno
jg
cmp
lds
cmp
pushf
fidivl
jle
fmuls
daa
push
ret
inc
or
pop
dec
inc
sbb
xlat
pushf
fs
push
sbb
sbb
push
push
lahf
aam
adc
or
or
mov
call
insb
pop
cmc
adcl
in
fcoml
lcall
jg
sbb
je
mov
out
jbe
pop
pop
mov
sub
movsb
jg
xchg
fidivs
sbb
aam
ret
dec
xor
pop
pop
ja
mov
leave
stc
push
cs
push
ds
test
push
pop
mov
roll
push
or
add
icebp
sti
mov
and
std
enter
test
pop
popf
sub
sbb
and
xchg
mov
sbb
inc
mov
push
pop
jo
fnstcw
insl
outsb
cmp
xor
lret
shlb
sbb
es
jnp
mov
fldcw
jp
sar
cli
hlt
sub
mov
sbb
pop
inc
pop
mov
xchg
adc
cwtl
fldl
dec
lahf
sbb
pop
stos
push
js
cld
add
or
das
minps
pop
cmpsl
or
jecxz
test
loop
adc
pusha
xchg
es
push
iret
xchg
rol
popa
lods
sbb
in
dec
je
cmovb
dec
and
pop
repnz
cmpsl
loope
inc
dec
clc
push
rcl
xchg
xchg
and
sbbb
insl
xchg
out
lods
das
pop
test
xchg
jp
jbe
mov
cmp
xchg
or
pop
inc
lret
push
adc
mov
insb
aam
jnp
push
repnz
xlat
clc
hlt
or
and
adc
cmpl
inc
lds
stos
mov
xor
mov
dec
lock
outsb
xchg
jnp
les
lcall
xor
xchg
mov
mov
jae
xchg
adc
pop
pop
out
popa
xor
addr16
lea
dec
push
iret
movl
int3
or
push
xlat
inc
push
data16
xchg
shrb
jecxz
fiaddl
and
adc
test
enter
mov
jne
xchg
pusha
jae
mov
jmp
ds
ja
add
sbb
xchg
cld
out
movsl
inc
addr16
popf
dec
mov
out
adc
sbb
jns
xadd
nop
outsl
arpl
jne
pop
xor
mov
push
shr
sbb
push
mov
lods
mov
mov
rcl
filds
mov
sub
pushf
pop
enter
out
xchg
add
fs
cmp
mov
rorl
inc
fbstp
popf
adc
in
imul
push
lods
or
andb
loope
test
cs
ss
xor
pusha
lcall
jns
and
mov
data16
inc
into
sti
out
mov
popl
and
push
xor
lds
push
jg
adc
jmp
insb
dec
pop
xchg
ret
out
adc
rcrl
mov
jg
loope
jb
push
dec
or
jmp
ret
jg
and
add
aas
xchg
mulb
mov
sub
dec
test
jns
dec
mov
or
inc
cmp
fildl
mov
pushf
jb
push
xor
loope
sbb
js
pusha
icebp
adc
xchg
aas
rcll
and
pop
call
add
cmpl
leave
loop
sub
mov
mov
push
mov
mulps
insb
adc
daa
mov
mov
insl
push
pusha
xchg
jp
shll
sbb
dec
and
inc
popa
cmp
lret
xchg
in
mov
cli
lret
loopne
and
sbb
out
call
inc
xchg
in
lds
nop
mov
adc
jnp
mov
outsb
jecxz
mov
or
enter
aaa
aas
xchg
ret
xchg
sub
sbbb
xor
add
or
idivb
ret
sahf
push
xchg
sbb
lock
xor
or
roll
stos
test
lret
cmp
popf
fsubrs
call
inc
fwait
lds
out
jmp
jecxz
fdivs
or
push
mov
push
scas
fwait
lods
adc
xor
push
pop
xchg
lds
jns
enter
hlt
stc
je
jmp
pop
addb
xchg
movsb
jb
loope
ds
mov
cmp
popa
pop
sti
sub
jp
fcoml
outsb
stc
inc
xor
in
leave
lret
lds
mov
je
movsl
inc
sbb
movsb
das
repz
dec
jg
jmp
adc
mov
or
lods
sbb
sub
rolb
lret
leave
sbb
ss
imul
movsb
lret
in
arpl
lret
fsubrl
push
inc
dec
sub
dec
jecxz
xor
cltd
cli
testl
in
push
or
push
pop
sbbl
sti
insl
cmp
nop
mov
or
and
ds
xor
xor
pop
mov
xor
xorl
inc
test
xchg
clc
ret
cmp
push
imul
test
jmp
xchg
dec
push
lods
push
mov
in
mov
mov
fisubs
mov
cmp
fwait
mov
js
cmp
sbb
dec
xor
test
rcll
pop
dec
push
rcll
jne
add
mov
push
pop
push
cli
cmp
xor
hlt
imul
mov
movsl
aas
mov
mov
mov
sbb
popa
xor
mov
push
cmpsl
mov
icebp
neg
out
dec
xor
push
mov
mov
or
rcl
mov
int3
in
inc
push
cld
cmp
stc
les
mov
add
adc
sarl
rolb
pop
pop
in
push
pop
push
mov
xor
xchg
pop
pop
dec
mov
lret
cmp
rorl
std
xchg
sub
scas
je
je
add
fisttpll
fcompl
add
addr16
mov
cmp
int
fadd
xor
daa
int
cmpsb
sbb
jbe
ds
adc
sti
loop
sahf
or
and
out
int3
in
cmp
xchg
dec
popf
pop
ficoms
dec
sbb
adc
insb
push
push
fadds
adc
sub
enter
sbb
dec
mov
mov
jne
fsubrl
xchg
movsb
shrl
imul
cmp
adc
mov
jae
cmpsb
fs
xchg
jp
jne
loopne
loopne
std
int3
push
jae
das
shl
adc
mov
sbb
and
add
in
mov
cmp
nop
inc
and
adc
fisttpll
sub
and
xor
leave
jl
pusha
div
xor
cld
pusha
in
daa
dec
mov
xor
add
add
mov
gs
jmp
mov
shll
idivl
sbb
jnp
push
jae
insl
cmp
and
sbb
push
inc
fisubl
xlat
xlat
das
je
sbb
ret
call
repz
cli
int3
lods
xor
scas
mov
ret
pop
mov
into
pop
data16
inc
mov
jns
dec
and
or
add
push
cmp
mov
xchg
stc
fcoml
mov
decl
push
xchg
enter
add
pop
mov
dec
jmp
clc
mov
aaa
cmp
or
test
nop
into
mov
dec
enter
cwtl
pushf
push
push
sub
push
icebp
add
icebp
jecxz,pt
lds
pop
stc
jmp
inc
mov
js
lock
mov
mov
sbb
sub
mov
hlt
pop
scas
shrb
and
sub
push
or
es
xor
pop
cmpsb
adc
popf
inc
sub
movsb
jno
sbb
add
sbb
push
or
rcr
lret
ret
popa
lock
arpl
ret
jnp
sub
mov
outsl
inc
push
cltd
mov
rcrb
mov
mov
jge
adc
js
mov
mov
addr16
aam
push
add
das
imul
outsl
pop
mov
jo
je
mov
icebp
dec
push
xchg
pop
dec
jmp
push
push
jl
enter
dec
jno
into
jle
xchg
push
cmpsb
and
mov
add
iret
mov
adc
lods
mov
and
mov
push
js
sbb
mov
test
sbb
icebp
cmc
repnz
inc
pop
inc
sti
ja
testl
xchg
out
ja
shrl
mov
inc
push
lret
and
es
fadds
push
xor
je
out
lret
imul
out
sub
es
pop
ljmp
data16
dec
jecxz
mov
and
mov
fsub
out
fdivp
mov
jp
mov
outsl
adc
inc
ret
ret
ss
mov
inc
lock
xchg
movsl
mov
popa
shrb
scas
shll
cmp
inc
inc
mov
insl
stc
add
jle
cmp
inc
xchg
stos
xchg
cmp
mov
push
mov
sahf
es
ljmp
pop
inc
imul
dec
mov
stc
add
dec
lock
pop
subl
sub
cwtl
notb
enter
fbld
push
mov
enter
shrl
jnp
rorl
arpl
lcall
test
fcompl
xchg
xchg
push
cmp
push
je
data16
cmp
mov
mov
addr16
das
inc
gs
icebp
xchg
mov
cmp
mov
jge
jp
out
add
sbb
pop
in
in
ljmp
mov
ss
pop
pop
sbb
bnd
mov
pop
xor
xor
inc
inc
xchg
je
test
mov
lret
mov
lcall
cmp
repz
adc
movsl
xlat
dec
xchg
mov
lret
cmpsl
stos
fs
decb
subb
fwait
jnp
call
push
ja
cmp
dec
mov
push
mov
mov
and
mov
fs
outsb
clc
mov
imul
xchg
fildll
cs
repz
push
push
xor
xorb
imul
insb
sahf
adc
loop
xor
mov
cld
push
or
jae
pop
cmp
nop
mov
shll
sbb
xchg
pop
pop
inc
ror
lret
jne
inc
jo
stos
lock
test
ret
dec
lcall
stos
outsb
pop
sarb
adc
dec
mov
popf
mov
mov
lock
pushf
sub
imul
lret
adc
jge
jge
in
sahf
sub
movsb
push
or
adc
dec
aas
daa
mov
xchg
and
das
or
inc
and
dec
dec
jle
shlb
daa
repz
sbb
pop
ret
jmp
add
pop
mov
shl
push
out
and
stc
ds
xor
add
adc
das
call
xchg
and
pop
mov
pop
push
scas
push
cmpb
or
loop
xchg
gs
lods
in
pop
adc
xor
jmp
jle
sbb
sarl
ja
push
push
inc
insb
cs
dec
int
arpl
mov
push
lds
nop
adc
or
push
hlt
in
js
cmp
ljmp
sbb
lods
test
ss
jecxz
imul
lods
rcl
cmpsl
mov
adc
cmp
cmp
cmc
ljmp
sti
test
ror
and
add
fdivrl
les
xor
xchg
xor
mov
ret
mov
icebp
sub
ret
out
jns
ds
sbb
mov
sub
mov
sbb
cmp
xchg
sbb
push
mov
hlt
push
popa
cltd
cmp
inc
fs
xchg
fs
lcall
and
xchg
push
bswap
lock
push
imul
mov
sbb
xor
fisubrl
mov
dec
and
and
test
push
das
test
lahf
or
bound
inc
and
mov
push
pop
mov
add
pushf
shr
addr16
lods
clc
scas
xorb
fwait
xor
mov
fadd
push
test
or
cmpsb
xor
lds
or
pushf
sub
xchg
xchg
mov
lret
shl
lcall
push
mov
push
mov
cmp
cmpb
mov
mov
pop
fsubrl
ss
or
mov
mov
mov
add
fldt
in
jl
cmp
stos
xchg
add
addl
inc
dec
mov
adc
pop
jb
sub
sbb
jp
jbe
xlat
sub
ds
add
adc
lret
jge
jl
shl
adc
cmpsb
in
mov
sahf
mov
into
js
sbb
xor
xchg
cmpsl
into
mov
in
jmp
roll
lods
add
xchg
int3
push
jg
mov
push
das
mov
jle
fistps
push
pushl
mov
and
push
jp
dec
cltd
fcmove
popa
rorb
insb
inc
pop
popa
in
sub
movsl
xchg
aaa
out
or
dec
dec
push
repnz
xor
popf
or
and
mov
insb
pop
gs
or
add
push
pushf
loopne
push
xlat
jnp
stc
inc
stos
mov
inc
push
sarl
jae
cli
and
mov
aas
cld
pop
movsl
into
add
cmp
sub
xor
mov
lods
push
ret
pop
sar
out
mov
dec
ret
inc
sub
ds
inc
repz
lret
pop
pop
orl
xchg
in
xor
enter
push
decb
stos
sub
aas
sbb
mov
dec
and
jl
data16
daa
add
xchg
add
cltd
gs
xor
adc
add
outsb
ret
mov
xor
mov
sbb
lahf
in
mov
sbb
push
xor
dec
jae
imul
out
fdivrs
mov
ret
or
adc
jno
add
mov
push
push
ljmp
jae
jns
xor
add
loope
test
inc
mov
sbb
pop
xchg
dec
push
jnp
lcall
jg
cmc
shll
movsb
cli
push
xlat
inc
testl
mov
pop
jle,pt
xchg
cli
inc
xchg
lock
mov
dec
dec
jae
addl
dec
insl
mov
lock
dec
nop
arpl
je
jg
sbbb
xchg
ljmp
mov
sub
or
aad
jne
fisttpl
ja
shlb
push
sbb
adc
sub
test
shll
mov
idivl
or
loopne
movsl
mov
sbb
cmp
cmpb
cmp
rcl
mov
in
vsqrtsd
les
es
cmpsb
subb
repnz
mov
jle
ret
mov
lods
pop
fmul
jae
sub
mov
aaa
and
scas
jecxz,pt
adcl
mov
outsl
sbb
sbb
add
icebp
cmpsl
pop
stos
jae
sarb
pop
adc
lret
cmp
add
test
inc
dec
pop
call
mov
or
out
ret
mov
bound
rclb
cmp
jmp
int3
dec
sbb
shll
push
xor
mov
in
out
pop
ret
add
icebp
cli
loope
and
lret
addr16
clc
stos
call
add
test
iret
sub
pop
lea
stos
add
pusha
imul
cltd
arpl
sti
shlb
push
pop
ds
sub
out
jae
stos
pop
dec
repz
scas
inc
gs
push
int3
stos
adc
leave
sti
jno
bound
mov
lahf
insb
adc
sbb
push
loop
pusha
sti
notl
stos
add
leave
and
cmp
scas
xchg
idivb
shll
mov
nop
jno
mov
repz
fmull
imul
push
pop
adc
insl
cltd
divb
or
cmp
mov
xor
pop
jmp
xchg
sti
insb
scas
cmp
test
icebp
cmpsb
mov
repnz
and
mov
and
push
lea
sahf
mov
popa
mov
call
mov
dec
add
mov
push
cmp
push
inc
test
loop
sub
xor
fsubs
xchg
aam
add
sub
mov
stos
adc
add
in
movsl
xor
leave
mov
ret
xor
mov
imul
sbb
cmc
inc
mov
or
mov
sbb
or
scas
or
xor
xor
jb
sub
add
or
add
pop
mov
daa
js
xchg
xor
mov
movsb
ds
into
jns
cmpl
mov
inc
pop
push
sub
call
adc
jecxz
mov
ja
lods
in
add
movsb
repnz
push
dec
jo
data16
scas
push
sub
test
lret
in
add
mov
push
or
inc
cli
out
mov
sub
hlt
pop
sub
and
push
test
add
mov
jp
xchg
sub
fstl
movsl
xor
push
leave
roll
pop
xchg
movsl
cmc
dec
mov
or
jno
inc
sbb
fwait
sub
movsl
imul
or
jle
sub
lds
or
cmp
lds
pop
aam
pop
xor
mov
push
pop
pop
fistpll
add
hlt
xor
mov
push
mov
lahf
jle
and
xchg
dec
cmp
xor
sbb
xchg
add
or
adc
cmp
sbb
sarb
loope
cmp
insl
dec
jg
cmp
outsb
pop
push
mov
nop
mov
lods
vmulsd
mov
sbb
and
gs
out
cmp
cwtl
jo
add
xor
mov
sbb
and
pop
add
xor
fs
cmpsb
dec
jo
ljmp
or
xchg
pop
adc
in
enter
sbb
loop
xor
push
out
adc
xchg
iret
cmp
inc
jg
sbb
mov
in
movsl
fwait
jecxz
loope
add
ss
shlb
fcomip
adc
repnz
adc
mov
add
fisttps
jo
addr16
push
lret
loope
jbe
sbb
add
mov
ret
cld
lcall
mov
pop
adc
dec
adc
les
inc
shlb
or
div
adc
imul
shll
stos
in
in
mov
cli
push
mov
mov
daa
mov
add
icebp
mov
pop
loop
jmp
sbb
outsb
outsb
jo
sarb
decl
and
jae
imul
hlt
jg
add
add
mov
sti
or
out
xchg
adc
lods
in
push
rol
inc
in
bound
and
loop
imul
pop
push
cli
aam
pop
mov
clc
cli
loopne
cmp
rcrl
dec
test
iret
bound
sub
and
lods
push
bound
mov
sub
xor
mov
jo
mov
mov
mov
stc
dec
lret
fistl
leave
fisubrs
pop
dec
jbe
call
bound
into
loopne
cmp
fidivrl
aas
inc
enter
test
dec
add
int
aad
and
shll
inc
and
rcll
ja
sub
mov
sbb
popa
into
or
divl
inc
mov
inc
inc
jge
mov
adc
pushl
adc
adc
clc
repnz
fisubl
pop
bound
loop
repnz
and
cmp
mov
leave
enter
pop
andl
dec
jb
push
daa
mov
out
in
cmp
push
lods
imul
pop
imul
and
push
data16
or
sub
add
mov
cmc
pushf
jns
cli
xor
and
xor
jne
jbe
adc
sbb
dec
mov
dec
mov
mov
sahf
push
inc
push
push
dec
mov
or
mov
imul
cli
push
xchg
es
out
push
lahf
mov
mov
stos
jmp
lret
push
dec
movsb
and
les
mov
mov
outsl
out
loope
push
pusha
inc
stos
aaa
loopne
push
insb
jb
in
xor
inc
xor
inc
jecxz
pop
push
ret
jecxz
sbb
clc
loope
cmp
in
adc
sub
addr16
mov
xchg
jmp
leave
mov
mov
data16
pop
and
lods
das
ljmp
sbb
dec
dec
fists
adc
call
mov
push
fldt
lret
mov
cltd
outsl
jbe
fld
ss
shrl
mov
sbb
dec
fistl
je
int3
add
and
mov
insl
cmc
loopne
add
outsl
or
shll
jmp
add
loope
mov
push
ss
ljmp
and
leave
cltd
mov
jno
adc
in
rolb
test
push
jno
mov
sti
stos
mov
shl
jmp
mov
lret
loopne
xchg
adc
mov
ret
pop
rorb
xchg
mov
out
nop
lods
mov
add
ret
roll
icebp
pop
lds
sbb
iret
pop
pop
int3
sbb
enter
rolb
pop
pop
sbb
dec
dec
xor
push
sti
loopne
stc
push
xchg
dec
jp
jmp
and
loopne
xchg
xchg
mov
sub
scas
int
stos
or
cmp
in
test
lock
inc
in
and
cmpsb
xchg
stos
into
mov
push
push
and
mov
int3
dec
mov
xlat
das
jle
mov
push
hlt
in
ficoml
inc
aad
mov
jp
popf
sbb
jmp
xchg
adc
sahf
or
add
es
lret
sub
mov
mov
loope
fwait
lods
out
mov
jmp
xchg
jo
lds
lcall
push
jb
mov
andl
mov
lods
xor
push
dec
mov
fildll
sub
fdivl
lahf
out
imul
mov
js
lds
xor
cwtl
or
mov
xlat
test
cs
push
popf
test
xchg
sbb
imul
push
popa
mov
clc
mov
out
scas
sub
mov
popf
mov
mov
jne
mov
sub
shrb
in
fisttpll
jnp
call
jg
cld
jp
ror
add
jno
and
rcll
popf
dec
ret
jg
jle
xor
lret
shl
mov
xor
mov
push
inc
popf
and
fstps
adcb
dec
cmc
xor
jp
inc
dec
xchg
mov
add
fsubs
or
out
rcll
inc
sub
mov
mov
aam
xchg
lahf
addb
mov
jge
mulb
add
aas
xor
fwait
jmp
xchg
es
pusha
test
add
dec
inc
sub
xchg
je
cld
or
mov
sub
push
cmc
insl
mov
jno
push
aam
jecxz
lods
js
scas
add
jno
nop
cld
adc
xchg
testb
in
insb
xor
cmp
scas
shll
mov
adc
aas
pop
cmp
pop
mov
stos
divps
aam
insb
lahf
fs
dec
out
int
mov
sti
xchg
sbb
push
jne
faddl
mov
pusha
in
mov
imul
aad
jo
inc
testl
imul
dec
mov
inc
mov
in
mov
and
dec
mov
jb
jecxz
push
jns
xchg
and
popf
cmp
rolb
imul
fwait
push
jae
xchg
mov
sti
loop
aaa
dec
stos
and
les
cmpsl
rorb
mov
test
daa
mov
adc
outsl
jae
xorl
mov
and
and
xor
test
int3
dec
jo
outsb
std
and
jbe
pop
xchg
lods
fs
flds
xchg
adc
xchg
sbb
dec
daa
sub
sahf
cmp
adc
xchg
das
fimull
inc
in
jnp
popa
inc
bound
loopne
in
or
imul
mov
mov
lret
shrl
pop
iret
xor
cmp
sbb
movsb
dec
dec
push
push
outsb
mov
mov
stos
popf
mov
es
jge
movsb
mov
test
rorb
mov
stos
fisttpll
aas
mull
enter
mov
test
pop
cmpsl
imul
cmpsl
ret
or
idivb
dec
jge
ljmp
addr16
das
loop
insb
jle
add
idivl
ret
jnp
popa
mov
into
mov
push
repnz
mov
inc
mov
in
xchg
jo
xor
int3
lcall
lods
jmp
mov
pop
imul
xor
adc
ja
fdivl
arpl
iret
xorb
jmp
mov
mov
incb
into
push
jmp
xchg
imul
sub
xor
pop
xchg
mov
or
sbb
mov
pop
dec
orb
inc
push
adc
fcomps
mov
push
cltd
add
dec
cli
mov
aas
or
xorl
xor
sbb
jmp
dec
xor
insb
imul
and
lock
fdivrs
loop
push
idiv
test
inc
fiaddl
hlt
add
mov
incb
mov
mov
testb
adc
cwtl
or
jle
jp
push
inc
es
aaa
sbb
imul
xchg
sti
adc
and
cli
roll
dec
sti
sbb
mov
dec
inc
dec
sbb
sbb
loope
pop
pop
jmp
jg
jne
jecxz
int
imul
xor
inc
lcall
dec
xor
jnp
xchg
out
adc
jmp
mov
ds
jp
sub
hlt
ljmp
cmpb
ja
movsl
push
xlat
jns
mov
push
mov
xor
pop
mov
xchg
loop
out
inc
daa
pop
out
adc
xchg
mov
aad
mov
xchg
mov
es
fistl
shrl
lret
xchg
loop
and
jns
add
inc
xor
mov
dec
xchg
xchg
add
push
leave
push
sub
sbb
lcall
pop
jge
push
mov
popa
xchg
push
fmulp
mov
sub
pop
jmp
pop
mov
jb
movsl
sbb
outsb
aad
mov
mov
in
lahf
mov
sub
imul
adc
js
icebp
xchg
pop
gs
adc
idivb
mov
scas
jmp
fistps
ljmp
mov
dec
mov
sub
mov
jns
or
loopne
lahf
mov
push
cmpsl
jg
or
cmp
jne
push
jo
adc
movsl
xchg
scas
xchg
int3
xchg
scas
outsb
mov
ljmp
mov
mov
dec
enter
icebp
push
outsb
aas
nop
mov
aad
sbb
pop
push
lcall
rclb
jg
xchg
fidivrl
inc
daa
mov
rcr
cli
repz
mov
sarl
pop
cmp
add
popa
cmp
jo
cmp
cmp
push
scas
test
inc
pop
xlat
sub
in
and
or
xchg
jae
mov
push
xchg
jecxz
hlt
jle
xchg
jg
bound
or
xor
pop
add
adc
arpl
test
out
jo
lock
sub
jmp
and
cmpsb
test
es
or
adc
sti
sbb
ljmp
imul
mov
xchg
lcall
stos
lsl
mov
orl
fsubrl
push
sarb
cmc
jecxz
mov
or
xchg
out
or
daa
sbb
pop
in
cmp
imul
sbb
outsb
dec
pop
xchg
push
sub
lock
roll
in
inc
adc
jnp
pushf
sar
push
sub
lret
jae
test
test
jae
xlat
scas
lcall
lock
xchg
mov
add
fldenv
or
mov
inc
rcrl
rcrl
cwtl
dec
cmp
std
fstl
sub
push
jns
not
out
movsb
loopne
nop
fisttpll
xchg
lret
push
enter
dec
mov
nop
shrl
xor
cs
jl
int3
test
idivb
ret
pusha
mov
and
prefetcht0
sbbl
lods
or
rcrb
add
xchg
jl
xor
mov
popf
mov
jae
in
mov
in
hlt
sahf
stos
into
orl
nop
adc
dec
ss
xlat
fisttpl
mov
and
pop
sbb
pop
mov
jp
popf
rorl
rcl
stc
push
je
ret
cmp
hlt
sbb
ffree
in
lds
inc
fucomip
mov
inc
mov
fidivs
adc
mov
ficoml
or
or
sbb
iret
fimuls
insl
adc
dec
sub
adc
divb
dec
daa
inc
jo
insl
and
or
jge
xchg
xor
add
adc
fimull
mulb
icebp
sti
ss
arpl
bound
xchg
mov
popf
dec
mov
jbe
pop
or
jle
hlt
lret
sahf
stos
mov
and
adc
loop
xchg
mov
pop
and
mov
cmp
std
movl
and
das
xchg
push
dec
ja
lret
leave
dec
movb
rcrl
jns
orl
mull
mov
lods
adc
xchg
mov
add
addb
adc
fidivrs
or
mov
inc
pushf
mov
sub
leavew
hlt
lret
cwtl
call
in
int
sub
lret
jo
cmp
sti
data16
pop
imul
add
adc
gs
cmp
push
pop
mov
std
outsb
pop
inc
mov
shll
adc
mov
adc
shll
call
mov
lahf
mov
daa
stos
adc
fnstcw
mov
arpl
test
or
push
das
mov
hlt
rcrb
stos
push
adc
xor
jo
or
fsubs
fdivrl
sub
or
sbb
out
xor
cmp
dec
cwtl
insl
jnp
sub
mov
mov
comiss
push
add
movsb
in
xor
nop
sbb
in
enter
cmp
jne
in
cs
out
movb
push
cwtl
xchg
pop
mov
jb
stos
mov
pop
jge
fsubl
subb
andl
pop
cltd
or
in
in
iret
pop
and
mov
sub
adc
lea
xor
adcb
fdivr
test
sbb
in
lret
xor
subw
pop
xor
repnz
push
pusha
int
mov
xor
sbb
loopne
jbe
mov
cmp
repnz
lret
jle
outsl
sub
lds
sub
das
dec
add
rcl
movsb
jbe,pt
addb
cs
idivl
cmp
cld
xchg
pushl
mov
rclb
lahf
or
inc
push
scas
dec
push
enter
ds
adc
fdiv
push
add
sub
cmc
cmp
cli
sbb
push
imul
lods
jp
aas
out
ljmp
mov
loopne
and
ss
inc
and
sbbb
stos
xor
sbb
sbb
ljmp
cmpsb
popa
movsb
jle
pushf
lcall
mov
mov
xchg
push
arpl
mov
mov
out
ret
into
cmpsl
xor
cwtl
mov
jno
aam
dec
mov
pop
or
shl
cmp
and
inc
fcmovnb
call
or
and
and
out
mov
xchg
sbb
adc
push
xchg
pusha
repz
or
push
insl
lret
insw
jmp
rcrl
push
and
xor
cmp
insl
push
mov
in
pop
sbb
pop
outsl
inc
cmpsb
lea
lock
push
movsb
cmp
aad
ds
push
lcall
mov
xor
jp
aad
movsl
aaa
mov
xchg
lods
popl
inc
xor
inc
cli
hlt
sub
adc
fisubrl
test
cmp
inc
pxor
stc
ds
inc
xchg
mov
mov
jmp
push
cmpsl
mov
dec
addr16
push
dec
cmp
inc
imul
aaa
jp
popf
push
cmp
xor
rcrb
test
movsl
xlat
jno
call
sarl
adcl
sub
insl
inc
push
jle
aas
dec
cli
popa
cmp
ljmp
sahf
xor
dec
loopne
xchg
sbb
cmpsw
inc
sub
ja
xchg
mov
xchg
mov
cmp
clc
mov
stc
push
xorb
gs
inc
mov
psubsb
cmc
sahf
xlat
stc
data16
test
and
ds
sbb
and
insl
sub
inc
rol
movsl
pop
mov
add
mov
xchg
pop
inc
cmp
clc
outsb
mov
cli
mov
xor
cltd
dec
jb
rolb
jnp
dec
insl
andb
mov
cli
je
push
dec
sub
andb
cwtl
out
dec
mov
scas
dec
pusha
jne
out
stc
cmc
mov
lret
xchg
mov
mov
mov
cltd
sub
push
in
cli
pop
addr16
movsl
xor
mov
cmp
sbb
pop
pop
add
adc
add
mov
inc
or
mov
int3
imulb
fdivrl
inc
inc
xor
cli
fbstp
aaa
mov
pop
jge
or
lods
push
sbb
clc
jl
jg
fnstenv
mov
push
dec
stos
mov
push
cwtl
jns
out
xchg
push
xchg
adc
add
cltd
add
cmpsb
sbb
pop
test
sbb
into
jae
les
pusha
xor
gs
adc
out
jg
push
popa
sbb
mov
cli
pop
dec
push
cmp
imul
movsb
insb
pusha
rolb
jl
adc
loopne
stos
test
jmp
cltd
in
jle
sub
popf
sub
mov
lret
test
and
and
xchg
fnsave
xchg
inc
in
jmp
push
outsb
pop
mov
pushf
mov
pop
mov
sbb
int
out
sbbb
inc
sbb
lahf
loope
int3
cmpsl
dec
gs
sbb
loopne
clc
inc
imul
pop
rcrb
cmp
jb
ljmp
or
add
fxch
inc
cmpsb
lret
test
ljmp
xchg
push
cmp
fucomip
nop
sbb
fs
add
aaa
inc
inc
adc
cmpsl
push
sbb
xchg
push
push
or
dec
jno
cmp
sbb
insl
adc
pop
lock
xchg
repz
leave
push
cltd
test
ljmp
lds
cmp
push
popa
ljmp
mov
cmp
ret
or
mov
ficomps
dec
cli
mov
test
pop
ret
enter
negl
rcll
arpl
cld
mov
pop
mov
push
or
out
ljmp
stos
and
daa
sub
int3
and
pop
iret
inc
sub
mov
mov
cli
outsb
ss
xor
std
adc
cmp
xor
mov
jle
xchg
addr16
roll
repz
test
into
hlt
xor
dec
leave
std
mov
int
stos
shll
or
mov
fnsave
pop
push
jp
fdivrs
push
ret
shl
jns
sbb
jecxz
dec
inc
popf
jnp,pt
push
stos
ret
movsb
jg
pop
inc
sub
xlat
out
xchg
cmp
leave
out
jnp
incl
inc
int
dec
dec
icebp
adc
movsb
sbb
int3
int
fwait
mov
leave
jno
xor
inc
mov
mov
jecxz
lret
repnz
loop
in
inc
push
push
out
sbb
adc
adc
divps
sbb
cmp
cmp
jb
xor
out
int
pop
mov
scas
aad
mov
jae
add
lods
pop
xlat
xchg
pop
dec
sbb
cmp
shlb
repnz
adc
dec
jecxz
pusha
add
push
test
inc
insb
shrb
in
jecxz
jns
in
loope
jae
jo
sbb
lret
arpl
seto
inc
sub
sahf
push
mov
inc
rcrb
inc
sbbl
lods
push
test
data16
dec
mov
stos
mov
sbb
xchg
push
popf
mov
pop
pop
mov
in
lock
pop
add
dec
dec
jne
outsb
loop
cmp
push
jp
lcall
pusha
cwtl
mov
hlt
enter
mov
xchg
cmp
cmc
adc
xchg
xor
jg
mov
add
movsl
outsl
fsubs
out
sti
and
adcb
mov
and
popa
dec
out
push
mov
mov
ret
xor
pop
mov
add
ficompl
cltd
dec
sub
xor
mov
mov
mov
mov
inc
test
mov
enter
mov
add
outsb
aad
push
add
icebp
push
pop
sahf
das
mov
and
stc
mov
mov
adc
mov
ret
cmp
ljmp
les
jns
add
add
loop
andl
or
rclb
lods
hlt
xchg
mov
sbb
sub
or
insb
imul
mov
fists
ljmp
call
dec
cmpb
lods
out
cmp
icebp
jp
or
lret
lret
mov
ss
xchg
jno
xchg
fxch
jns
fists
xchg
xor
in
sub
add
add
push
push
fsubl
xchg
or
sbb
imul
add
push
inc
cmc
loopne
adcb
sub
xor
push
cmp
in
dec
jl
mov
pop
test
shll
out
outsb
adc
cmp
mov
daa
pushf
popa
cmc
lret
mov
xor
sbb
lods
sbb
push
icebp
jo
repnz
push
lods
shll
jl
inc
add
push
add
ficompl
mov
ret
mov
bound
sbb
jne
in
xor
jbe
in
shll
addl
mov
cmp
fs
mov
xor
cld
dec
sbb
or
pop
mov
or
adc
int
aas
aaa
in
test
cmp
lods
test
or
pop
jne
leave
movsl
jp
pop
es
mov
mov
cmp
sbb
mov
cwtl
fistps
xor
movsb
xlat
lcall
cmpsb
lea
es
int3
mov
hlt
sub
rcrl
mov
out
stos
test
add
or
inc
int
xor
lret
je
push
fstpl
add
adc
stos
out
arpl
jbe
pop
ss
cmp
fildll
daa
mov
lods
dec
inc
adc
insl
dec
mov
jnp
int
mov
test
inc
test
cmp
xchg
jge
sbbl
loope
mov
leave
add
fisttps
inc
mov
outsb
push
pop
push
sbb
mov
jl
out
xchg
mov
add
in
cmp
popf
mov
aaa
xchg
or
loopne
jne
js
insb
inc
mov
add
sahf
cmp
in
lods
xchg
jne
arpl
ds
sbb
mov
or
sub
mov
out
sub
jbe
lds
mov
xchg
mov
adc
out
sahf
xchg
push
movl
sahf
outsl
sbb
ss
add
mov
imul
xor
and
push
push
or
inc
scas
inc
sbb
je
push
mov
popf
aam
les
cmpsl
mov
mov
icebp
sbb
dec
inc
mov
in
bnd
cld
and
out
loopne
lret
pusha
out
xor
in
test
jge
out
jae
xor
or
out
in
aam
rorl
gs
dec
pop
aaa
popf
loop
aad
loopne
rcr
fnsave
test
push
lds
fistpl
aam
fistpll
inc
out
fldcw
dec
nop
out
jns
scas
mov
call
scas
xchg
fcmovb
fcoms
sti
mov
or
out
popf
lcall
jno
sub
stos
iret
jb
jno
push
dec
cmc
mov
in
add
adc
mov
stos
lahf
fst
adc
sarb
lods
push
fs
push
adc
dec
scas
mov
lret
pop
adc
lods
sahf
daa
mov
out
out
lds
xor
out
lea
addr16
sahf
imul
pop
push
jnp
adc
mov
push
push
and
mov
mov
inc
daa
jb
add
xchg
sbb
clc
jo
je
shrl
inc
inc
cltd
mov
inc
scas
xor
stos
and
cli
sbb
adc
pop
jecxz
into
bound
add
lret
scas
xor
jge
dec
and
add
cmp
popl
sub
push
sbb
aad
sub
add
fcmovu
ljmp
lcall
and
cmp
cmp
out
inc
fnsave
jne
scas
pop
fwait
mov
add
incl
adc
sbb
lcall
jle
cmp
aas
bound
inc
pop
add
mov
out
call
jbe
ljmp
pop
push
xor
and
jmp
movsl
loopne
push
cmp
xchg
xchg
repnz
xor
shll
in
mov
imulb
loop
shlb
sbb
xchg
mov
xlat
ss
popa
mov
mov
xor
outsb
fildl
pop
cmp
in
push
adc
push
mov
fldcw
inc
jl
and
test
add
rcrl
loopne
popf
jmp
movsb
mov
sbb
sarb
and
popa
mov
call
fdivl
or
mov
cmp
dec
xchg
cmp
pop
jmp
xchg
push
movsl
rclb
add
ja
pop
iret
subb
mov
dec
and
and
test
pop
aaa
mov
push
fsubl
shr
aaa
ficompl
cmpsb
xchg
sub
mov
mov
pop
add
les
incb
jge
lahf
rorb
mov
bound
movsl
xor
clc
sub
rorl
data16
lds
fcomip
imul
cmpsl
mov
cmp
mov
out
stos
cltd
xchg
cmp
iret
fcompl
xchg
out
clc
push
loope
outsb
push
lcall
roll
cmp
xchg
mov
insb
scas
dec
cmp
mov
int
outsb
fsubrl
sbb
aas
xor
push
pop
adc
lret
xchg
jo
test
test
push
js
aaa
sbb
and
leave
sub
xchg
iret
xchg
add
rcll
jnp
orb
jle
fsubl
lahf
adc
leave
inc
int
daa
stos
push
pop
cmp
sub
and
pushf
mov
bound
sahf
inc
je
pop
push
fisubs
psadbw
fwait
aam
push
cmp
mov
jge
call
xor
loop
cmp
scas
add
imul
pop
inc
cmp
adc
inc
addr16
ljmp
cmp
lcall
sbb
dec
sbb
or
cmpsl
imul
inc
dec
add
push
into
fnsave
lds
ror
cmc
mov
aaa
dec
fcomps
rcr
mov
sbb
jle
pop
fisubs
jae
jp
mov
push
out
push
jg
iret
or
add
negb
push
cli
jae
cmovo
out
mov
add
stos
cmp
or
push
pop
in
or
lahf
xor
xchg
mov
call
sahf
xchg
jb
in
faddl
inc
arpl
lahf
fyl2x
push
inc
iret
out
xor
xchg
int
scas
cli
jno
inc
loop
mov
xchg
dec
push
aam
adc
iret
push
add
ljmp
test
sub
pmullw
fadd
iret
xchg
shlb
popf
sub
inc
pop
mov
loop
lods
or
inc
adc
pop
inc
pusha
insb
pop
jae
jp
in
lods
gs
sbb
sub
mov
loop
add
push
and
lock
in
aad
pop
push
test
testl
cmp
mov
xor
sub
push
xchg
popa
popa
xor
add
jo
leave
test
clc
in
ret
mov
push
repnz
mov
or
cmp
aas
imul
hlt
mov
xchg
pushf
roll
ret
out
in
push
in
clc
cmp
subl
arpl
mov
cmpsb
sbb
cli
mov
andb
inc
pop
pop
int3
outsb
scas
lds
lahf
fsubp
cmpsb
jmp
jl
push
arpl
loope
or
add
mull
ds
xchg
dec
xchg
cmp
cmc
mov
xchg
xor
lds
scas
xchg
es
dec
push
pop
and
les
out
or
repz
inc
inc
mov
popa
mulb
popa
cmp
fnstcw
adc
fistl
inc
sbb
cmp
push
ficompl
lret
aam
fimull
negb
ja,pt
out
dec
test
das
into
iret
sbb
and
dec
jmp
fmuls
push
frstor
mov
out
inc
sbb
xchg
jo
or
push
pop
cld
xchg
mov
jmp
pop
cltd
sbb
sbb
cmpsl
and
mov
sarl
lret
push
fsubr
mov
mov
pop
fs
push
xor
ljmp
test
mov
aas
mov
jmp
cmp
cs
lahf
xor
ss
test
pop
and
mov
int3
aam
pop
mov
adc
jg
into
aaa
mov
movsl
mov
lods
pop
lods
hlt
push
inc
outsb
jg
sub
fs
frstor
pusha
fidivrs
test
cmp
and
pop
jecxz
test
lret
jg
fistpll
je
popa
adcl
adc
push
adc
in
cmpsl
lods
cmp
push
add
dec
or
into
add
inc
loope
loop
jge
xchg
mov
mov
loopne
push
les
mov
fsubs
xchg
sub
loop
dec
out
push
sbb
pop
out
lret
adc
lock
fiadds
fdivs
stos
imul
repz
int
mov
andl
cmp
or
cs
fwait
stc
scas
fisubrs
je
adc
ret
les
hlt
sbb
mov
popf
repz
ljmp
ficompl
addr16
int3
sar
add
cmp
nop
inc
stos
xor
mov
mov
imul
mov
fcoms
mov
inc
fimull
lods
test
icebp
pop
pop
mov
dec
inc
ret
mov
mov
shr
adc
xchg
push
push
cmp
xor
lret
ja
les
sub
imul
xchg
cmp
or
cmp
sub
imul
lret
or
jo
sbb
shrb
negl
sub
dec
cmp
std
dec
cmp
fwait
mov
cli
mov
fmuls
sti
imul
imul
xlat
imul
in
push
daa
adc
dec
push
mov
or
cli
pop
mov
inc
jbe
push
subb
out
dec
sub
push
rcl
in
push
out
push
and
loop
sub
sbb
push
fimull
and
testl
pushl
into
cmp
or
jg
fadds
push
jmp
ljmp
das
pop
mov
mov
fldl
mov
lret
inc
roll
mov
imul
inc
clc
jne
sub
push
addr16
fbstp
add
cmp
pop
stos
mov
mov
sub
ljmp
pusha
sbb
jo
lods
lods
cmpsb
repz
imul
nop
shrb
jne
out
lock
or
cmp
adc
aam
jo
fdivrs
push
outsb
jg
sub
inc
inc
sub
movsl
cmpsl
scas
clc
cltd
push
repnz
xchg
fsubrl
add
rorl
mov
clc
popf
inc
adc
push
data16
das
push
adc
pop
mov
sub
cmp
push
adc
xchg
push
jp
adc
and
inc
repnz
and
pusha
mov
adcl
call
adc
mov
loope
ss
lret
lahf
iret
push
movsl
cmp
bound
xorb
and
sub
cmp
pop
jg
push
ret
fwait
test
or
cltd
mov
inc
dec
popf
push
repz
and
divl
cmc
or
aas
inc
xor
push
shlb
mov
mov
fwait
jns
nop
das
insl
ja
mov
mov
das
lcall
ljmp
sarl
sbb
repnz
fldl
jb
rol
mov
cmpsl
adc
jp
jecxz
xor
movsl
mov
cmp
pusha
hlt
pop
loopne
testb
out
push
mov
test
aaa
add
adc
dec
xchg
ret
cld
out
pop
or
notl
or
or
mov
xchg
pop
ss
movsl
ret
dec
stos
push
leave
pop
loope
cmp
push
lea
pop
call
cltd
in
out
icebp
cmp
mov
push
xchg
inc
jo
enter
xor
pop
sarl
jg
dec
jne
pop
mov
adc
cmc
adc
jne
cmp
sarl
dec
sbb
xchg
outsl
mov
pop
jns
fsubr
insb
fsubl
jne
mov
out
outsw
jp
cwtl
shr
push
dec
sahf
inc
add
cmc
insl
out
mov
jns
enter
mov
loopne
out
and
int3
adc
xchg
mov
push
ret
gs
sahf
lea
lods
add
add
push
pop
mov
jbe
sub
ret
sub
mov
xchg
cmpb
push
out
test
dec
jmp
jecxz
leave
pushf
iret
test
cmp
mov
arpl
divl
cmp
loopne
out
xor
sarb
stc
xor
shlb
mov
andb
test
movsl
mov
imul
add
ss
iret
cmp
or
je
cmpl
fldl2e
mov
inc
stc
fsub
loope
mov
push
rorb
mov
push
lcall
adc
or
jnp
xchg
mov
insl
std
cli
int3
outsl
xchg
pop
movsb
mov
enter
lahf
movsb
cmpsb
stos
icebp
test
in
mov
out
jge
push
push
repz
dec
outsl
cmp
sbb
imul
outsb
out
scas
pop
outsl
aam
add
sbb
inc
aaa
aam
addr16
sub
out
bound
ja
lock
lret
push
dec
sbb
cld
cmpsb
dec
push
dec
mov
cmpsb
scas
lahf
mov
push
js
xchg
mov
leave
mov
adcb
test
mov
add
ror
inc
mov
adc
and
jo
lret
push
and
arpl
mov
mov
sbb
xor
lods
jge
lods
push
sahf
inc
add
cmp
push
pop
mov
frstor
jns
cmp
fstpt
sub
cmp
shlb
dec
cwtl
jge
sub
dec
cwtl
mov
xchg
repnz
mov
jo
stc
mov
imul
insl
dec
lods
pop
imul
es
fsubrs
aam
rcl
jb
bound
inc
shrb
je
mov
out
jg
lret
mov
xchg
jl
out
iret
test
cs
inc
dec
stos
xor
and
adcl
lea
scas
cmp
cmc
dec
mov
dec
or
ds
adc
xchg
cmp
andb
mov
pop
push
shlb
mov
imul
dec
mov
mov
rclb
lock
ret
and
xchg
ret
mov
stos
pop
gs
push
fs
push
lods
sbb
jecxz
xor
nop
adc
jl
pop
bnd
xchg
inc
push
push
ds
insb
jg
dec
mull
subl
mov
scas
adc
xchg
loope
mov
cmpsl
movsb
push
in
xor
fbld
in
mov
mov
adc
xchg
loope
xchg
cmpsb
lahf
jbe
je
or
fcmovnu
sub
mov
popf
mov
inc
mov
dec
or
jb
xchg
sbb
xchg
cwtl
push
sub
add
or
leave
orb
addb
push
icebp
xor
faddp
cmp
mov
sti
or
xor
mov
xchg
adc
fcoms
test
inc
cltd
inc
daa
add
jb
in
xchg
fsubl
test
bound
insb
cli
xor
mov
xlat
dec
and
faddl
rcl
in
out
bound
fstpl
in
mov
sub
loopne
ret
ret
pop
rorl
pop
jns
imul
add
testl
or
cmpl
pop
shrl
inc
sbb
mov
fcoms
xor
xor
addr16
jo
jo
xor
fdivrl
and
ds
jg
pushf
push
mov
xchg
sub
out
lods
nop
adc
fstpt
in
gs
lods
int3
jo
adc
divl
cmpsb
lret
loope
dec
repnz
cmp
iret
mov
pop
push
in
jb
cwtl
xorl
xchg
cli
xchg
icebp
test
orl
lcall
sti
pop
inc
jecxz
lret
enter
idivl
cmpsl
mov
ss
arpl
mov
cmp
mov
adc
or
test
mov
daa
sbb
sub
dec
into
mov
mov
push
fidivl
mov
out
pop
stos
fistps
fstpt
jle
add
jmp
xor
fs
js
cmp
sbb
add
inc
xchg
aaa
xchg
clc
in
aam
mov
repz
jecxz
mov
in
jmp
ljmp
pminsw
or
mov
jp
dec
xor
xchg
sub
ljmp
pusha
mov
push
dec
aam
cmp
push
sub
aam
ja
inc
dec
mov
incb
mov
push
lods
cmp
ljmp
js
imul
fimull
xor
popf
loope
ljmp
sti
mov
fstpt
insl
push
aam
cld
xchg
xor
sub
adc
adc
pop
mov
test
xchg
stos
lods
daa
mov
hlt
das
je
lahf
and
sub
fstl
cmp
or
inc
div
lea
ss
xchg
outsb
cmp
aaa
cmp
imul
or
mov
adc
cmpsl
loop
mov
sbb
in
cwtl
sub
loop
loop
lods
imul
sbb
loope
pop
mov
in
and
cmp
cwtl
and
push
and
or
or
sbb
pop
outsb
mov
faddl
push
pop
int3
les
icebp
pop
cmp
fimuls
xlat
jb
subl
jbe
jo
popf
jl
dec
cmp
or
popa
les
xrelease
mov
nop
push
inc
pop
es
out
add
dec
adc
mov
lret
aad
cwtl
sti
mov
sbbl
push
inc
mov
aas
arpl
and
push
mov
loop
xchg
out
cmp
outsl
in
jle
xor
pop
mov
jp
and
test
and
roll
adc
sub
mov
loopne
movsl
xor
mov
test
jmp
call
adc
xchg
mov
push
inc
in
ret
jno
fstpt
lods
jge
enter
icebp
mov
sbb
ret
mov
cmp
cmc
sub
ret
cmpsb
cmp
outsl
imul
loope
pop
push
scas
dec
dec
adc
xor
adcb
data16
push
pop
and
add
add
xor
sub
and
mov
inc
outsb
sbbl
pusha
adc
cmpsb
iret
pop
xchg
rorb
and
out
loop
mov
and
mov
adc
out
sub
test
rcl
push
into
jle
adc
out
push
scas
insb
out
inc
lcall
sbb
mov
or
mov
decl
call
push
mov
in
sar
scas
mov
and
dec
pop
mov
sbb
icebp
jmp
jno
pop
insl
cmpsb
and
mov
mov
stc
adc
scas
mov
sub
out
je
ror
aaa
adc
inc
adc
out
mov
leave
mov
adc
and
jg
pop
add
pop
in
inc
je
cmp
xor
push
aam
add
outsl
rorl
js
jnp
repnz
cmpsl
jbe
and
call
xlat
or
cmp
enter
js
or
sti
movsl
in
out
inc
jmp
cmp
sbb
xor
pop
int
or
inc
xor
frstor
and
jns
lock
cmp
and
out
pop
push
and
insl
pop
repnz
mov
rolb
cmp
or
sbb
iret
gs
and
cmc
clc
jnp
sarb
pop
dec
sub
cmpsl
xlat
icebp
das
dec
pop
pop
int3
add
jno
je
mov
cltd
mov
jecxz
mov
in
cmp
pop
call
sub
test
popf
aas
ja
out
gs
xor
orl
lea
push
push
add
xlat
movsl
movsl
sti
push
scas
adc
dec
in
xchg
enter
jmp
addl
sbb
inc
ficoml
dec
cwtl
jmp
jb
cmp
in
jl
mov
inc
out
out
push
arpl
sbb
fnstcw
clc
mov
ljmp
ljmp
jmp
lods
outsb
xchg
adc
leave
out
fnstenv
cmp
shlb
inc
sbb
icebp
sbb
jns
sub
lea
stc
test
stos
sbb
push
add
fwait
push
loope
or
push
jno
jnp
mul
jp
add
pop
inc
test
and
test
cmc
mov
mov
ret
scas
lods
movsb
mov
fmuls
scas
nop
dec
cli
xlat
fwait
shll
cltd
xchg
je
xor
pop
pop
sbb
mov
or
jb
shrl
xchg
lret
push
pop
inc
xchg
jmp
stos
lahf
fstpl
sub
mov
sub
pop
ss
js
adc
push
sti
mov
jecxz
jl
mov
in
popf
not
push
js
andl
ds
mov
mov
in
fadds
neg
in
lret
imul
bound
add
dec
mov
rclb
leave
xor
popf
in
or
out
push
cltd
std
sbb
scas
jnp
ja
imul
dec
and
scas
out
pop
add
sbb
loope
or
or
xor
cmpsl
cmp
inc
decl
mov
test
jns
pop
orb
addl
push
cmp
mov
pop
and
mov
or
call
cmc
push
pop
xchg
xchg
push
cli
push
mov
pop
cmpsl
call
add
lea
add
repz
fmul
scas
sub
dec
dec
mov
ss
cmp
outsb
jecxz
xchg
out
stos
or
out
sub
or
pop
sub
lods
xchg
mov
adc
adcl
dec
lahf
cmpb
add
int
ljmp
arpl
mov
mov
mov
jl
mov
imul
in
sbb
idivl
add
ret
add
inc
mov
repnz
mov
xor
imul
or
lods
in
cmc
fdivrs
mov
shlb
out
jle
lret
jb
dec
inc
cmpl
mov
int3
cld
or
mov
loope
test
mov
pusha
std
mov
inc
repnz
rclb
les
xor
dec
pop
push
xor
mov
mov
jb
shrb
daa
jl
adc
in
jbe
aad
frstor
mov
cli
stos
testb
loopne
jmp
ja
jns
xor
aam
xchg
rcll
mov
mov
icebp
sub
dec
jle
movl
push
or
xchg
cmc
in
jl
inc
clc
jmp
mov
jle
inc
push
sub
jmp
add
mov
push
inc
cmc
lods
sub
mov
mov
mov
test
push
push
mov
lods
pusha
pop
call
jge
dec
or
dec
into
sbb
cmp
adc
add
bound
xor
bound
cltd
daa
and
inc
dec
jecxz
xlat
negl
out
or
dec
pop
mul
leave
ficompl
jg
inc
fs
test
mov
mov
and
fsubrl
adcb
adc
jp
xchg
ret
pop
cmc
pusha
insb
stos
and
xchg
push
rcrb
int
jnp
jnp
cmpsl
pop
push
out
cmpsb
mov
insb
jo
adc
adc
push
cmp
les
mov
xor
and
xor
mov
adc
out
lret
movsb
gs
push
nop
pop
jae
xchg
fs
jmp
cmp
mov
cmp
sub
jns
push
mov
adc
or
pop
cmp
inc
shll
ret
mov
inc
xorl
mov
or
fisttps
in
xor
jnp
cmp
fidivs
jo
xor
scas
dec
pop
test
scas
clc
or
loope
lcall
mov
and
push
aad
movsl
xchg
mov
xor
mov
xlat
sub
add
gs
dec
jb
adc
bound
dec
insl
dec
aad
out
cld
and
addr16
bound
in
shrl
cld
pop
hlt
mov
jmp
or
cmc
push
push
add
sti
xchg
inc
dec
lods
xorb
xchg
sbb
gs
or
repz
mov
sub
daa
cmp
loop
mov
jbe
movsb
xchg
push
adc
fbstp
popa
mov
inc
hlt
mov
rol
mov
cltd
cmp
push
dec
fldl
xchg
jnp
push
push
mov
les
sub
adc
dec
sbb
pop
outsl
rol
scas
cmp
push
adc
test
cmp
cs
mov
inc
imul
adc
cmp
jns
xlat
mov
and
dec
mov
jo
jmp
push
pop
jns
repz
or
pop
and
and
jmp
sub
mov
sahf
fdivp
jmp
inc
and
sbb
loop
push
nop
xor
or
dec
sub
push
iret
rcrl
sbb
gs
sbb
pop
fwait
xchg
cmpsl
inc
cld
cmp
xor
push
addr16
pop
xchg
sahf
pop
mov
rcrl
dec
push
dec
adc
enter
jbe
dec
nop
and
daa
jg
inc
sub
fbld
cwtl
rclb
add
rorb
addl
cld
loopne
mov
aam
inc
mov
jge
add
data16
mov
mov
dec
jl
loopne
mov
xor
lods
test
pop
mov
fcoml
out
data16
pop
decb
lods
imul
jmp
dec
inc
test
popf
movsl
fcomp
mov
adc
int3
inc
jns
push
out
jg
xchg
mov
movsb
push
pop
sbb
rclb
cmp
push
mov
sti
push
xor
js
das
add
lcall
or
add
clc
xchg
movsl
movsl
iret
rorb
sarl
testl
cs
adc
nop
mov
sbb
adc
push
inc
add
mov
push
push
jmp
push
xor
leave
adc
les
fistps
mov
das
fldl
mov
pop
xor
add
xchg
cmp
sub
mov
mul
xchg
pusha
pop
or
fiadds
mov
dec
gs
xlat
xor
inc
or
push
mov
fdivrl
sub
addr16
inc
lret
stos
jne
gs
pop
out
xor
leave
mov
out
xor
mov
jns
enter
rorl
popf
sbb
inc
fisubrs
pushf
inc
cmpsb
dec
cmc
aas
outsl
push
test
nop
xor
ficompl
sarl
cmp
imul
jl
out
mov
inc
jb
aas
xor
hlt
mov
outsl
es
ds
inc
loope
cld
mov
rcl
sbb
jbe
dec
ret
adc
pop
jp
and
arpl
in
sbb
lock
sti
loop
xor
sbb
add
fdivrp
into
mov
pop
test
out
push
idivl
dec
cmp
and
lret
cli
fsts
int3
aad
inc
jo
fildll
shr
test
mov
add
cmp
outsl
std
inc
inc
scas
pop
xchg
bound
loope
std
mov
and
cmp
mov
je
sub
xchg
int3
out
jle
pop
sub
mov
push
adc
in
nop
jbe
add
sbb
loopne
xlat
sub
xor
cmp
sbb
test
and
jnp
pop
mov
push
jno
call
scas
jae
cwtl
daa
inc
sahf
addr16
shrb
sbb
sbb
loop
ljmp
pop
xchg
jmp
pop
mov
test
adc
pop
lock
push
mov
mov
xlat
out
movsb
dec
mov
lahf
js
in
aam
int
adc
jbe
lcall
push
mov
and
ficoms
push
bound
mov
test
mov
or
cmp
aam
xchg
jmp
bound
xor
adc
insl
andl
fwait
inc
or
sbb
sbb
jns
push
lds
inc
mov
pop
popa
lea
dec
or
je
fcomi
mov
clc
xchg
stos
adc
addr16
jns
mov
inc
movaps
or
fs
aam
es
jbe
leave
mov
fdivr
sub
jno
inc
in
fcoml
mov
and
and
hlt
iret
xchg
pop
cmp
adc
cmp
lods
jo
xor
dec
repnz
mov
pop
push
push
push
cmc
xchg
movsb
sarl
xchg
test
xchg
scas
mov
cmp
mov
jns
popa
decb
mov
dec
int3
jecxz
popa
daa
inc
add
call
jno
inc
xor
das
push
push
pop
add
in
push
icebp
add
leave
aad
mov
pop
bound
mov
or
jmp
and
fisttpll
sbb
stc
xchg
xchg
movsl
sbb
xor
test
addl
out
loop
and
subb
mov
xchg
rep
mov
outsb
ficompl
mov
push
iret
pop
jge
lea
push
aam
and
push
sub
pop
push
cmpsb
pusha
mov
mov
aad
xor
push
out
dec
addr16
mov
mov
and
push
sti
push
scas
adc
es
hlt
sbb
rorl
lret
sbb
mov
imul
call
mov
cmpsl
pop
jae
inc
add
jns
xchg
fidivrs
jl
or
adc
adc
inc
out
outsl
push
push
ds
fs
xlat
inc
lea
dec
stc
or
jo
hlt
cmp
lods
xchg
xor
mov
mov
inc
mov
mov
test
negb
sbb
in
mov
mov
sbb
es
jmp
std
test
inc
pusha
xor
fisubrl
adcb
arpl
leave
inc
fbld
jo
stos
incl
pop
xchg
jo
icebp
xchg
js
test
mov
out
mov
dec
les
jge
cmp
lea
popa
cmpsb
insb
mov
std
gs
repnz
jg
xor
xchg
das
sbb
dec
loopne
lret
mov
js
push
jecxz
inc
pushf
data16
fcoml
sub
fsubl
bound
sub
test
in
cmpsb
push
fs
dec
pop
into
dec
jns
into
mov
mov
push
stos
fmull
mov
dec
fs
fisttpl
cmpsl
xchg
rolb
xor
ds
js
and
push
jecxz
pop
aas
or
mov
inc
stos
inc
cs
inc
xorb
jae
and
jae
mov
in
bound
out
inc
cmp
and
pushf
pop
daa
xchg
pop
mov
mov
lds
dec
in
fldt
dec
sub
xor
ret
shlb
sub
lock
and
insl
test
xchg
inc
addl
sahf
mov
dec
xor
cmp
xchg
cmp
loopne
rorb
ljmp
ljmp
jl
dec
xor
jnp
push
pop
ja
dec
pop
stos
js
inc
flds
inc
jo
sbbb
cmp
lret
or
mov
push
lock
and
or
into
fs
gs
fbld
hlt
ja
dec
fwait
je
dec
pop
aad
mov
adc
cmpsb
cmp
leave
cmp
pop
cmp
pop
lret
aad
imul
ret
sub
into
xlat
lods
inc
mov
stos
mov
pop
addr16
jl
repnz
push
xchg
mov
xor
imul
push
jbe
pop
pushl
jae
shll
xor
inc
push
ret
in
out
sub
and
ret
into
cmp
pusha
push
mov
lahf
adc
adc
xchg
insl
push
push
fstp
std
push
add
xor
xchg
xchg
xor
int3
push
mov
decb
test
in
stos
xchg
sub
icebp
sub
pop
es
stos
mov
cmp
mov
dec
clc
lcall
dec
pop
stc
jle
pop
lcall
fisttpll
daa
dec
jae
mov
sar
mov
sub
shl
imull
in
not
cmp
scas
call
or
cwtl
jle
fildll
lret
ja
scas
lods
mov
pminsw
or
movsl
ja
xchg
inc
mov
jecxz
sahf
ss
inc
sti
sub
or
shlb
or
jae
test
test
pop
shld
ljmp
fsubr
mov
in
add
iret
sbbb
mov
jno
shll
pop
mov
pusha
out
and
popa
lret
lret
cli
push
jo
fs
push
sub
xor
inc
cs
add
call
inc
and
jmp
xor
subb
xor
frstor
cmpsb
ds
sarb
pop
mov
add
jmp
adc
push
movsb
neg
and
int
and
cs
in
sbb
popf
xlat
jg
push
mov
push
or
in
enter
adc
add
mov
lcall
ret
testl
in
add
fdivr
inc
mov
xor
inc
jo
lahf
adc
repnz
xchg
dec
lods
iret
icebp
int
mov
js
arpl
lea
sti
loop
fsubs
in
inc
jne
lock
shl
in
ss
aas
dec
andl
insl
sbb
sub
outsb
inc
mov
inc
ds
adc
sbb
js
push
sbb
out
sub
xchg
js
repnz
call
or
push
add
negb
xlat
xor
jmp
lcall
jge
notl
pusha
outsb
mov
dec
mov
rclb
add
lods
mov
push
push
mov
call
hlt
enter
lds
and
mov
jns
cld
insl
ja
and
loopne
mov
and
xor
sub
adc
cmc
pop
xchg
aam
xlat
fisubrl
out
mov
nop
push
push
fcompl
jp
loop
adc
daa
movsb
push
clc
jg
pop
test
filds
out
push
adc
jbe,pt
popa
adc
pushf
out
mov
out
jne
push
sti
adc
xor
sub
mov
and
mov
cmp
cmpsb
ja
xchg
daa
rol
pop
sbb
dec
daa
dec
nop
shl
push
xchg
adc
fbstp
cmc
insb
xchg
add
test
fmull
lods
xchg
shlb
test
out
out
lea
shlb
outsb
pop
mov
dec
mov
add
dec
mov
scas
xchg
sarb
adc
out
repnz
and
cltd
sub
movsb
test
mov
dec
jecxz
pop
stos
shll
fidivs
sub
fwait
inc
arpl
pusha
mov
and
sub
mov
pop
pop
sub
sahf
jecxz
sbb
cwtl
and
adc
das
loop
les
mov
sbb
dec
out
test
adc
xor
in
shr
sub
cmp
pushf
gs
push
in
or
aad
test
in
pop
mov
scas
and
cld
mov
mov
scas
mov
aad
sub
lods
cltd
loopne
mov
dec
jae
cwtl
push
xchg
cld
push
dec
xor
inc
sub
mov
and
jle
lds
or
out
add
test
stc
sub
add
test
mov
inc
jp
xchg
loop
jge
mov
adc
jle
or
imul
mov
rolb
xchg
daa
fxtract
jo
cmpsl
or
das
dec
add
lods
xor
mull
jmp
test
fucomi
or
lods
mov
sub
adc
dec
bound
mov
mov
in
lods
ficompl
mov
rclb
inc
cmp
aam
inc
inc
inc
insb
insb
lahf
add
stos
jo
cmpsl
fstpt
insl
outsl
cmp
je
sub
daa
dec
cmpsb
arpl
push
jmp
pop
dec
fs
loope
jge
aaa
sub
std
or
or
xor
push
addr16
movsl
jnp
jp
xor
rcrl
mov
xor
pusha
adc
sti
iret
mov
push
scas
push
mov
ret
sub
fildl
decb
andb
stos
push
adc
xor
and
push
dec
and
and
fdivrs
dec
sbb
cmp
das
pushf
arpl
call
das
sahf
aaa
fistpl
es
push
xchg
int
jnp
inc
mov
ret
insb
mov
cmpsb
adc
jp
inc
sub
add
sbb
cltd
cmpsl
xchg
loopne
cmp
xor
stos
loop
dec
mov
dec
sub
add
scas
cmp
data16
daa
jl
sub
mov
sarl
imul
imull
aam
nop
cmp
pop
cs
rcr
test
push
in
stos
and
mov
pop
out
xchg
add
shl
pop
xor
xor
xor
cmc
into
out
loop
dec
rcll
fs
mov
jmp
dec
push
sti
rorb
pcmpgtb
stos
scas
in
fsub
pop
fsubl
ja
pusha
xchg
pop
pop
jmp
mov
stos
mov
je
pop
pop
push
lret
sbb
push
sub
lcall
pop
outsl
addr16
xchg
movsl
std
xor
fcompp
adc
movsl
jbe,pn
jns
adc
push
fistps
test
dec
cmp
sahf
jno
lods
rcll
dec
pop
addl
mov
fmull
stc
xchg
scas
ds
outsb
mov
in
push
data16
sub
jo
daa
cmc
push
inc
fistpl
lock
push
sarl
negb
mov
in
mov
push
shl
mov
add
inc
ret
fadds
je
sbb
aam
mov
pop
jne
mov
jmp
mov
mov
mov
test
jno
cmpl
sbb
adc
mov
out
mov
adc
mov
and
xchg
mov
xchg
cs
lods
mov
push
sahf
mov
inc
or
lret
adc
jge
push
lahf
xchg
cmpsb
sti
dec
mov
jmp
loope
cmc
pop
popa
orb
cltd
jb
inc
sahf
add
sbb
fimuls
sbb
push
pushf
cmc
add
popf
or
add
and
mov
ret
aad
xchg
stos
ja
popa
pop
xchg
sub
push
addb
push
mov
inc
ret
pop
enter
aaa
sub
adc
or
sbb
push
inc
inc
out
cmp
fistpll
ret
out
aas
addr16
out
sub
enter
mov
dec
dec
insb
rorl
pop
or
stos
pop
pop
mov
push
push
inc
cltd
das
mov
xchg
lea
shll
loop
and
dec
push
in
lea
fimull
xchg
lock
out
jbe
adc
int
fistpll
sub
mov
rclb
pop
push
insl
and
jb
xor
outsb
mov
aaa
jns
xor
in
pop
mov
cmp
xchg
lods
std
sbbb
and
push
clc
in
ds
dec
push
xchg
jge
popa
cmpsl
mov
subl
inc
fmul
daa
xor
lock
jno
mov
push
inc
aad
int
sbb
call
sub
int
int3
mov
nop
xor
ds
inc
jmp
out
cmp
push
je
pop
outsl
sub
pop
cmp
inc
push
fadds
int3
loopne
sti
andb
and
flds
iret
push
sbb
jg
and
dec
mov
dec
fnsave
loope
out
add
push
xchg
pop
cmp
bound
and
and
repnz
call
jle
push
push
lahf
sub
mov
arpl
and
in
jb
mov
cmp
xlat
xlat
leave
cli
mov
xor
mov
stos
imul
out
cmp
pusha
or
mov
push
je
pusha
jb
sbb
repz
out
cmp
ljmp
loopne
aad
pushf
add
rcrl
fistpll
out
sub
enter
push
xor
xor
cld
jmp
lcall
lods
inc
jnp
in
or
into
lahf
js
lods
mov
adc
push
mov
fwait
and
outsb
adcb
addb
mov
and
sub
jge
test
cmpsl
or
xchg
dec
lods
arpl
movsb
mov
lret
sbb
and
jge
mov
adc
stc
cld
jl
in
cwtl
test
sub
mov
mov
mov
pop
test
jmp
and
and
out
dec
insb
add
pop
adc
xor
loop
pop
sbb
cmp
sbb
scas
cmpsl
xchg
in
hlt
mov
int3
adc
fistl
sahf
lret
xchg
daa
cld
adc
dec
jno
rclb
sbb
leave
mov
mov
jg
int3
je
pop
sbb
sti
mov
lahf
dec
icebp
mov
cli
hlt
sbbb
aad
pop
shrl
xor
cmc
xor
imul
bound
mov
enter
xchg
inc
cmp
cmp
into
pop
sbb
adcb
pop
negb
fcomps
jbe
push
loope
jecxz
test
add
and
xchg
std
or
mov
pop
jg
addr16
pop
mov
insl
inc
mov
or
jne
dec
aas
add
out
adc
out
xor
dec
arpl
add
mov
in
mov
and
sub
dec
cmpsl
mov
frstor
inc
xchg
pushf
or
lea
daa
jnp
inc
mov
enter
push
xchg
mov
loope
nop
stos
xchg
xor
aas
push
xchg
test
jp
jle
sub
jbe
and
jecxz
outsl
and
sub
sub
sbb
in
and
outsb
andl
pop
cmc
mov
lea
cmc
je
pop
roll
inc
je
mov
shlb
pop
cmp
jnp
mov
push
fidivrs
mov
ret
ret
scas
ljmp
rcrl
divb
cltd
add
repnz
push
rcrb
hlt
cmc
mov
dec
popa
aaa
push
lret
rclb
inc
dec
ret
fistpl
mov
cmp
pop
push
enter
fsubrl
or
mov
cmc
push
jno
add
outsb
inc
cmp
test
cmp
mov
cmpsb
mov
add
sub
jnp
dec
or
add
sub
ljmp
mov
xchg
push
mov
mov
enter
xor
xlat
es
fstpt
push
sbb
repnz
scas
dec
test
dec
mov
xor
xor
push
pop
je
insl
push
cmp
into
fsts
mov
cmp
and
rcr
push
orl
inc
cltd
pushf
jno
scas
push
insb
jmp
inc
xor
sub
imul
stos
inc
out
pop
mov
call
pushf
mov
daa
sub
dec
xor
push
out
popf
and
bound
repz
cltd
scas
outsl
mov
or
test
ficoml
jb
fnstsw
xor
sub
shlb
inc
and
push
xchg
sbbb
cli
fst
xchg
bound
arpl
jnp
orb
sbb
movsl
pop
lret
cmpl
push
sbb
in
sar
rclb
mov
fildll
mov
sub
mov
out
fcomi
mov
out
repnz
and
mov
dec
out
out
in
adc
leave
pop
sub
jge
push
stos
sub
or
movsl
xor
aam
dec
sub
lret
dec
std
stc
out
movsl
or
push
orl
aad
and
or
ret
and
mov
shl
js
ljmp
int
ja
xchg
pop
xor
in
and
jno
nop
das
dec
push
and
sbb
arpl
icebp
dec
fisubs
pop
xlat
icebp
ja
add
xchg
lods
mov
and
ss
icebp
mov
psubsb
cmp
inc
mov
in
fisubrl
mov
jb
or
mov
sbbb
or
inc
out
mov
xor
aad
and
pushfw
adc
xchg
mov
push
sahf
xor
jns
mov
aaa
jecxz
xchg
sub
arpl
inc
stc
or
inc
loop
dec
jp
repnz
movsl
insl
xchg
mov
or
shrl
bound
pop
aam
xor
pop
pop
xor
mov
push
cmp
rcr
vprotw
jg
mov
dec
mov
mov
push
mov
jno
jl
and
int3
stos
jno
pop
dec
jo
outsl
lds
scas
iret
mull
cmp
cld
out
popf
out
in
push
test
mov
ss
fildll
mov
sbb
loope
push
push
movl
mov
jg
jno
lea
inc
xor
cltd
mov
out
pusha
sub
in
pop
arpl
pop
lcall
imul
es
std
mov
ss
aaa
or
fcoml
inc
std
and
shrl
jno
mov
sarb
add
ret
dec
in
inc
movsb
adc
inc
shrb
sub
xchg
in
jl
xchg
sbb
dec
aam
push
js
das
mov
fcoms
lods
mov
inc
ficomps
mov
jmp
sub
pushf
and
lods
icebp
cmpsb
in
in
test
lcall
pop
rorl
sub
xorl
enter
icebp
data16
out
fbld
aam
add
pop
rol
jo
pusha
xchg
int3
xchg
mov
rcl
cli
inc
sub
or
outsb
jmp
xor
scas
add
pop
sub
fbld
xorb
cmpsl
stos
outsl
jnp
test
inc
scas
shrl
xorl
add
es
filds
cmp
scas
lock
or
jae
ja
inc
shrb
ljmp
lcall
sub
loope
pushf
loop
and
jo
rorl
cmpsl
mov
orb
inc
or
cmova
aad
mov
xor
xor
xchg
subl
clc
xor
xor
in
jle
fidivl
pcmpgtb
hlt
jne
sub
stc
jl
mov
add
push
adc
test
loopne
dec
xchg
adc
cmpsb
push
outsl
mov
loop
insl
pop
sub
mov
push
lahf
sbb
int3
scas
lock
mov
add
or
or
lods
cmp
aaa
push
cmp
cld
enter
or
nop
mov
and
sbbl
pusha
call
mov
sbb
adc
jmp
in
add
inc
xchg
pop
mov
add
roll
xlat
mov
mov
fnstcw
sbb
dec
movsb
rclb
das
int3
xchg
dec
push
jbe
ss
inc
hlt
flds
pusha
mov
pop
in
xchg
jno
push
pop
dec
jne
mov
push
push
xchg
mov
or
aas
push
sbb
or
push
es
sub
dec
fwait
jge
leave
aas
inc
mov
inc
je
mov
adc
and
xor
andb
adcl
or
mov
jb
and
lcall
dec
fs
clc
xchg
fistl
mov
orb
push
mov
adc
or
mov
cli
add
sbb
push
aam
in
insl
sub
mov
dec
push
aad
sti
mov
call
in
mov
inc
inc
dec
mov
mov
clc
add
jno
jns
mov
and
pop
divl
push
cld
sahf
clc
outsl
add
xchg
push
popf
and
cs
cmpsb
je
das
adc
sbb
lods
mov
rorl
sub
cwtl
pop
adc
add
push
int3
cli
mov
xchg
pop
and
data16
xchg
mov
fwait
mov
inc
das
mov
clc
pop
mov
adc
dec
inc
mov
ja
sub
lret
cltd
ja
or
jl
pop
sub
in
push
cmpsl
xchg
divl
movsl
and
imul
push
push
add
fdivrs
cmp
dec
lds
dec
inc
test
cli
out
mov
icebp
test
test
imul
mov
sahf
and
aam
push
jno
pusha
stc
hlt
ret
push
pop
setl
pop
test
mov
std
outsl
dec
and
int
repnz
insl
xlat
lds
repnz
adc
ss
mov
sarb
cli
rorb
xchg
mov
push
dec
popf
stos
movzbl
lock
mov
iret
loope
insl
push
fwait
repz
jbe
daa
or
gs
es
into
incb
popa
or
imulb
add
jmp
mov
pusha
inc
es
adc
mov
or
mov
mov
movsb
push
sub
cmp
push
or
fcompl
in
sub
sar
jge
xchg
repz
adc
pop
stos
xchg
mov
stos
dec
mov
mull
fst
inc
cmp
xchg
stos
push
pop
fmuls
cld
jge
mov
rclb
mov
xchg
in
mov
dec
ds
dec
and
int3
ret
mov
mulb
les
pop
sub
push
addb
lcall
push
ret
and
sbb
jae
cwtl
repnz
movsb
jno
mov
push
mov
rcrl
filds
push
jne
sub
dec
call
inc
test
add
jg
bound
cmp
fldt
inc
jg
and
xor
sahf
xchg
xchg
adc
dec
add
ds
push
sbb
and
pmulhuw
sub
mov
cmpsl
pushf
inc
dec
jmp
into
cmpsl
mov
lahf
mov
inc
sti
test
mov
jne
in
popl
cmpsl
orl
dec
push
popa
xchg
cltd
fnstcw
rclb
loopne
test
or
pop
and
jne
jge
dec
push
sbb
adc
imul
cmc
lods
jnp
rcll
in
add
push
lods
mov
pop
or
stos
dec
stos
js
lret
stc
xchg
and
movsl
jae
mov
clc
dec
outsb
int3
cli
push
aas
fisubrs
mov
dec
mov
and
push
popf
lcall
mov
or
daa
mov
loop
roll
xchg
cmp
cmp
mov
out
ss
mov
pop
fs
negl
or
cli
xlat
ljmp
pop
or
inc
xchg
sbb
pop
sub
incl
or
into
lea
cli
test
insl
stc
xchg
repz
cmp
iret
aas
out
xchg
inc
push
hlt
inc
push
addr16
cmpsb
scas
shlb
push
js
jbe
dec
mov
xchg
cmp
loopne
push
cld
and
sub
add
popf
leave
push
lock
xchg
xchg
stos
outsl
pusha
pop
jae
aam
repz
int3
inc
pop
sbb
pop
cmp
mov
mov
test
cmp
lahf
fcmovnu
cli
shll
xorl
dec
sbb
or
sbb
adc
js
or
dec
mov
std
fwait
call
loop
int3
mov
andl
mov
popf
push
or
dec
mov
mov
jecxz
mov
ss
insl
aam
stos
push
bound
repnz
dec
mov
pop
clc
mov
cld
pop
std
cs
pop
adc
push
movsb
mov
or
test
add
pop
cmp
push
imul
mov
push
repz
adc
and
subl
or
cmp
sub
in
mov
xchg
or
dec
jo
cmp
enter
jbe
inc
or
mov
sub
hlt
dec
cmp
dec
ja
insl
pop
js
je
out
add
xor
outsb
out
dec
leave
rolb
lret
xor
fidivrs
adc
cmp
or
adc
add
jg
movsb
in
mov
push
test
aam
xchg
jmp
imul
mov
mov
out
pop
int
repnz
hlt
push
sbb
mov
pusha
add
jb
inc
repz
dec
mov
lret
and
mov
xchg
das
and
add
inc
dec
shlb
inc
and
lods
xor
pop
add
mov
fwait
sub
aas
xchg
rcr
and
add
repz
fwait
or
inc
int
jae
cmpsb
notb
lcall
or
mov
lret
aas
xchg
push
mov
dec
add
push
andb
or
pop
ret
jg
cltd
sbb
filds
or
jb
dec
push
rolb
mov
insb
push
xor
out
dec
pusha
shlb
es
mov
std
pop
xor
aas
xor
mov
les
es
in
xor
mov
pop
cltd
out
test
aam
loopne
inc
mov
mov
cmpsb
mulb
stos
pop
xor
shll
call
mov
sbbl
xchg
and
xchg
pop
pop
add
dec
dec
test
lods
mov
cwtl
rorl
cmc
xchg
sbb
mov
test
test
xor
test
imul
movsb
inc
lods
xor
xchg
mov
test
out
adc
fsubl
fnstsw
fimuls
cmp
push
sub
repz
push
aaa
dec
adc
push
push
lahf
gs
dec
cli
adc
sti
mov
lret
addr16
mov
cld
mov
int
hlt
movsb
jns,pt
shr
pusha
std
aam
push
xchg
mov
sbb
in
mov
fisubrs
and
faddl
int3
mov
inc
ret
mov
push
or
cli
fs
and
roll
out
sub
push
inc
sub
andl
pop
sahf
mov
mov
inc
stos
aas
mov
int3
bnd
aas
leave
inc
jne
mov
pop
test
in
mov
mov
mov
pusha
sub
mov
jns
mov
in
sti
inc
push
cwtl
push
iret
lahf
inc
fcompl
sar
inc
jb
mov
pop
leave
pop
xchg
in
mov
mov
outsl
lret
mov
adc
mov
push
out
mov
xor
fisubl
sbbl
aad
pop
ja
inc
or
shrb
test
or
hlt
lret
adc
cli
adcb
mov
push
push
aas
sbb
ss
stos
add
mov
add
mov
sbb
call
js
cltd
xchg
pushf
jno
lds
jbe
mov
xor
sbb
and
outsb
push
int3
inc
sti
outsb
mov
xchg
addr16
shr
mov
adc
xor
add
inc
dec
addr16
inc
cmp
pop
lret
mov
into
add
xlat
cmp
sti
in
mov
sub
push
fcmovbe
cmp
imul
mov
call
pop
and
push
add
outsb
mov
fistpl
inc
and
imul
ljmp
mov
jl
shlb
add
repz
push
clc
jns
repz
xchg
dec
xor
popf
inc
xor
fsubr
sub
jb
mov
aas
enter
jg
sbb
jecxz
jo
dec
or
cs
stos
cmpsl
and
sbb
or
lock
cld
push
add
je
rcrb
push
and
push
add
push
addb
int
dec
jl
pop
mov
cli
popa
decl
test
stos
xchg
dec
add
mov
test
mov
outsl
push
pop
imul
loop
das
inc
jnp
pusha
fisubs
ret
out
repz
jmp
adc
lds
in
stos
jb
scas
mov
push
jecxz
xor
adc
and
mov
repz
sbbl
bound
cmp
and
jae
cmpsl
add
popa
or
inc
outsl
ss
push
stos
vmread
negb
pop
push
push
pop
movsb
inc
das
lahf
xlat
fldt
rcrl
mov
movsb
pop
xor
pop
rcrl
sub
or
repz
js
negb
mov
rcr
cmp
adc
cmp
out
imul
std
test
pop
aam
das
xchg
push
cltd
ds
js
xor
add
cmp
or
sti
scas
jecxz
lods
sub
shl
lcall
xlat
mov
mov
scas
sub
cmp
adc
popf
test
test
lods
jns
ret
cmc
cs
hlt
adc
sub
rorb
aaa
add
push
pop
fucomip
cmp
pop
aam
jle
add
not
xchg
jle
lret
repz
mov
pop
or
cld
mov
das
shll
lcall
lods
jmp
cwtl
fisubrl
in
mov
fistps
push
lret
xor
daa
enter
push
test
mov
xchg
fsubs
loope
cli
mov
sbb
mov
mov
jp
pop
leave
adc
lods
aad
cmc
lods
sbb
mov
lcall
lods
stos
push
mov
pop
sbb
adc
sarb
pop
sbb
clc
imul
mov
mov
das
push
pop
xchg
inc
test
push
hlt
push
mov
push
push
loopne
jmp
push
cwtl
fwait
or
add
iret
jbe
mov
mov
pop
jae
and
je
pusha
push
aaa
test
jle
jmp
sbb
or
lods
lret
adc
loopne
or
sbb
and
scas
jle
mov
pop
push
cmp
fstps
jge
sbb
inc
shl
inc
jbe
dec
mov
push
loopne
add
js
pop
pop
lods
lods
and
add
std
add
cli
mov
pop
adc
fiaddl
push
call
inc
mull
std
fwait
iret
in
sub
mov
push
xchg
sahf
push
pop
pop
and
sub
jp
cs
sbb
pop
push
and
into
sbb
pop
inc
xor
dec
gs
in
rclb
cmp
ss
stos
aam
int
jo
in
out
fadd
dec
mov
mov
dec
mov
xchg
jmp
shrl
sbb
jae
pushf
mov
jns
test
add
loopne
fwait
jge
loop
xor
sbb
int
pop
jge
sub
sar
adc
sarl
mov
or
push
sub
or
xlat
cs
push
das
add
cli
and
leave
sbb
data16
mov
addl
daa
mov
or
and
rolb
addl
xor
push
outsl
lock
rol
add
adc
mov
rclb
cmp
jno
mov
movsl
popf
movsl
xor
ror
mov
shlb
sti
lds
jb
xor
or
pop
mov
mov
icebp
cld
loopne
sub
add
fidivrs
test
movsl
cmp
jne
das
cmp
lea
aad
xchg
les
popa
xchg
pop
xchg
mov
fwait
cmp
aaa
pop
xor
cmp
sub
sbb
sahf
jecxz
sub
cmc
orb
pop
cmpb
push
sub
clc
test
dec
or
std
push
imul
lods
mov
sub
mov
into
sbb
insl
out
jns
aaa
dec
adc
xchg
pusha
test
repz
pop
xchg
movsl
sbb
dec
and
jnp
sub
inc
movsb
xor
push
fs
enter
pop
in
test
pop
xchg
push
lret
test
fcmovb
shlb
lahf
stos
fisubrl
outsl
imul
jl
aaa
jl
adc
jb
adc
xchg
ret
xchg
pushf
mov
int
and
pop
js
lds
sbb
jl
fsubs
xor
add
inc
push
mov
cmp
push
xchg
and
mov
idivb
in
ret
out
pop
push
cmp
pop
rorl
add
int3
orb
xchg
out
mov
pop
mov
sub
inc
sub
repz
ljmp
fldl
test
fistps
rcrb
insb
cld
mov
inc
sub
pop
test
inc
jmp
loope
xchg
xor
inc
out
pusha
ds
jne
enter
lods
test
fists
ja
stc
adc
out
xor
inc
dec
hlt
fistpll
adc
dec
or
inc
mov
stos
pop
insl
xor
sub
adc
xchg
into
mov
fsubs
movsl
ret
xor
hlt
es
xor
pop
lcall
bound
adc
fiaddl
pop
push
dec
push
shlb
insb
iret
popf
in
add
cmp
pop
addr16
xchg
mov
in
pop
inc
jle
dec
push
cmpb
repz
add
stc
sti
xchg
insb
jae
add
or
mov
sti
stos
icebp
push
push
push
push
push
push
in
cmpsl
movsb
fcomp
xor
xchg
jmp
sub
mov
sub
mov
or
dec
scas
xchg
out
adc
setle
jnp
stc
xlat
sub
mov
and
bound
pop
insl
fldt
mov
jg
lcall
jne
mov
jo
mov
push
dec
fdivrs
pop
dec
bound
pop
push
xor
xlat
imul
cli
xchg
jmp
jbe
or
movsb
sub
xchg
stc
pushf
sub
xchg
ret
mov
out
add
mov
out
bound
jne
call
adc
ja
adc
or
push
push
xor
pusha
push
fisubrl
outsb
cmp
add
idivl
push
inc
pop
ret
sbb
dec
mov
mov
addl
mov
sub
mov
stos
ljmp
pop
ret
push
fstpl
into
dec
jae
int
or
stos
scas
adc
shll
mov
sbb
xor
push
or
and
daa
pop
in
xor
outsb
movsl
xchg
add
cmpb
loopne
push
inc
pusha
in
clc
arpl
and
scas
mov
outsb
sub
jmp
out
add
shrl
aas
arpl
es
mov
dec
pop
jg
jmp
fpatan
or
test
cs
sbb
mov
inc
scas
jbe
dec
mov
pop
fdivrs
leave
inc
mov
dec
mov
push
inc
adc
inc
mov
les
xchg
ja
test
nop
aas
xchg
mov
mov
or
sub
jno
popa
clc
push
std
pop
and
insl
push
movsl
cwtl
or
fs
or
inc
loope
ja
pop
push
xchg
mov
push
cli
fwait
dec
stos
ficompl
fldl
push
out
pop
jecxz
mov
inc
pop
lret
cli
scas
dec
mov
nop
pushf
jno
jo
jns
jns
scas
mov
jg
fldz
mov
pusha
push
lods
jno
mov
cld
mov
jl
mov
cmp
data16
bound
scas
cmp
loop
mov
push
aam
xor
dec
cmp
mov
je
aas
jmp
inc
jmp
inc
mov
cmpsb
cli
ret
sbb
js
aas
pop
pop
push
cmp
test
lods
and
jge
bound
mov
mov
inc
and
lods
roll
xchg
mov
or
out
js
popf
jge
decl
movsb
xchg
push
xor
pop
xchg
lock
dec
daa
jle
cmpsl
mov
iret
lds
int
das
mov
loopne
test
loope
pop
sub
and
xor
ret
adc
mov
hlt
nop
pop
pop
or
dec
and
sarl
out
fxch
jne
fwait
and
jmp
and
clc
nop
ret
sbb
inc
adc
sbb
mov
les
int3
call
test
cmp
sub
test
xchg
repnz
outsl
sbb
call
jnp
lea
mov
push
sbb
hlt
iret
or
movsb
pop
cmp
push
jp
imul
cmpsb
pop
inc
sbb
adc
pop
inc
and
push
dec
out
mov
je
cmp
xchg
hlt
ss
cli
out
inc
aam
xchg
hlt
int
and
mov
jmp
sub
ss
push
test
testb
testb
add
ljmp
cmp
orb
test
or
inc
fdivrl
imul
lcall
aas
lods
mov
xchg
sub
sub
je
cmp
sarb
pop
loop
pop
inc
mov
cli
enter
inc
mov
adc
stos
add
pushf
decb
jecxz
push
in
xchg
fimuls
fbstp
push
fldl
dec
fwait
sti
mov
shlb
mov
inc
mov
loope
jle
cmpps
ficoml
mov
xchg
pop
notb
in
das
pop
out
xor
dec
hlt
push
sub
std
out
in
or
cmp
pop
movsb
xchg
icebp
jge
gs
loope
sub
data16
xchg
ja
sub
adc
ja
out
data16
enter
popf
push
adc
push
sbb
cmpsb
cld
add
jb
jl
cmp
xchg
jl
fstps
mov
cli
inc
jge
rclb
aam
inc
sbb
js
stos
adc
sar
add
icebp
add
call
push
sub
add
pop
fldenv
xchg
jmp
xchg
sahf
js
inc
scas
insl
popa
xorl
push
push
dec
andl
icebp
sti
cmp
sbb
call
les
jno
xchg
scas
pop
mov
add
fstpl
aam
adc
inc
je
mov
cmp
cmp
sub
adc
sahf
sarb
out
fldt
sub
sub
xchg
lcall
lods
shl
imul
and
loopne
jmp
mov
repz
outsl
cmp
push
cltd
push
inc
dec
faddl
fldcw
call
mov
jecxz
inc
enter
test
adc
dec
sbb
in
pop
clc
fcoml
adc
sub
cltd
aaa
les
pop
int3
mov
in
hlt
jo
mov
mov
pop
adc
or
fwait
jmp
mov
test
inc
sbb
sbb
and
jae
ret
xchg
dec
sahf
scas
adc
in
sub
sub
sbb
xor
dec
or
pop
ror
xor
ss
mov
add
adc
stos
in
fistpll
rcrl
sub
jb
mov
xor
mov
hlt
fisttpll
pop
jle
dec
push
cli
ret
inc
pop
inc
popa
mov
or
outsl
das
add
imul
rcl
shll
or
or
lds
mov
push
push
jae
addr16
add
mov
mov
cmpsl
lahf
and
outsl
xchg
xor
mov
adc
add
sub
pop
call
inc
movsl
cmpsb
xor
cmovno
in
mov
sub
je
jl
adc
imul
mov
push
addr16
pop
out
test
xor
mov
sub
cmp
lret
imul
xchg
inc
xchg
xchg
lods
testl
repz
mov
test
cmp
adc
push
mov
iret
decl
ljmp
xchg
mov
cmpsb
shlb
into
addb
xor
and
add
dec
cmpsl
pop
sbb
les
pop
cmpsb
ja
popa
add
fldcw
cltd
test
mov
pop
xor
pop
mov
mov
lds
or
pop
mov
dec
sbb
lret
clc
and
lock
cmp
push
and
dec
adc
xadd
add
cmpsb
pop
mov
dec
outsb
sub
popa
lods
pop
xchg
mov
cmp
inc
aaa
or
cmp
cmpsl
std
insl
mov
dec
push
loop
sti
sbb
imul
mov
dec
cltd
mov
enter
aam
pushf
sub
xchg
dec
pop
or
inc
add
sub
aaa
imul
push
xchg
mov
imul
sbb
mov
cld
aam
and
lahf
jp
mov
inc
lods
or
mov
jecxz
jne
mov
idivb
jae
ss
mov
sbb
dec
imul
mov
addr16
loopne
or
jg
fidivs
sub
hlt
pop
mov
inc
pop
jge
mov
add
add
movsb
or
sbb
and
push
cmp
mov
lds
dec
test
pop
jbe
test
loope
sub
cmp
outsb
cwtl
out
sbb
and
ret
imul
mov
xor
jb
out
pop
rcrl
lcall
inc
xorb
inc
ret
or
sbb
fisubs
sbb
mov
and
fwait
stos
mov
add
adc
xchg
fisttps
cmp
ja
fnstcw
jo
cmpsb
out
pusha
fistpl
cmp
imul
or
push
idiv
test
ret
xchg
orb
mov
fcompl
popf
xchg
sbb
mov
adc
adc
mov
dec
mov
jb
cs
aaa
push
jbe
ds
push
xor
lds
dec
bound
xor
mov
ds
cltd
push
sbb
push
or
mov
rep
mov
inc
jg
jbe
xor
out
scas
pop
ror
lea
sub
enter
inc
and
cmp
pop
sbb
test
inc
xor
mov
cmp
mov
sbb
ret
pop
jbe
pop
repz
add
pandn
lods
fmul
outsl
aad
dec
iret
insb
add
out
inc
sub
push
xchg
stos
lds
mov
out
inc
rcrl
xor
jmp
pop
fs
cmpsl
in
mov
iret
mov
cli
pop
sbb
imul
out
inc
mov
nop
repnz
mov
sbb
js
imul
repnz
rorl
addl
mov
jl
jle
xchg
pop
sub
cmp
fmuls
pop
dec
icebp
mov
add
inc
xorl
sbb
mov
cmp
test
pop
xlat
arpl
lods
sar
lret
cmp
adc
fcmovnbe
shlb
out
and
lcall
hlt
lahf
mov
xchg
rcll
pop
xchg
test
lock
sbb
insl
lea
mov
lods
cmp
inc
or
dec
pusha
mov
adc
mov
es
rorb
ss
je
adc
or
sarl
hlt
jg
xor
imul
ja,pt
mov
cmc
inc
or
loop
pusha
xor
inc
inc
dec
or
out
add
or
mov
in
inc
dec
mov
fistps
stc
in
push
lret
xorb
add
sub
decl
push
pop
stos
cmpsb
inc
aam
imul
idivb
dec
mov
lock
insb
loopne
sub
xor
mov
jo
gs
loope
inc
mov
jecxz
ds
xlat
dec
or
dec
cwtl
push
lock
xlat
pusha
mov
ljmp
push
rolb
fwait
test
call
cld
lahf
xchg
adc
mov
inc
pop
sbb
cs
and
push
xchg
fxch
mov
scas
mov
lcall
imul
outsl
jne
add
push
xchg
das
xchg
les
push
jne
mov
cmp
inc
or
fucomip
inc
mov
xchg
popa
cmpsl
xchg
add
aaa
inc
or
and
aaa
mov
cmp
ret
adc
call
xchg
pop
pop
or
mov
popl
das
push
inc
pop
inc
scas
int3
in
aam
push
cmp
es
adc
push
adc
pop
sbb
push
arpl
and
cmpsl
jg
js
mov
xchg
cmp
es
fistpll
adc
addr16
fs
and
loopne
mov
aas
rol
fnstenv
or
push
fsub
movsl
mov
mov
clc
mov
pop
push
sub
push
fidivl
push
sub
mov
push
pushf
inc
sub
bswap
adc
inc
cmp
imul
and
fisttpll
sub
adc
add
jbe
je,pt
in
adc
sbb
scas
mov
xor
and
sbb
iret
xchg
sbb
lret
fs
jmp
dec
cmc
out
fstpl
rcl
aaa
lahf
add
iret
mov
insb
sbb
out
xchg
mov
add
loopne
push
sub
sti
sar
test
loope
cmpsl
jmp
rcl
mov
ja
aad
fcomi
vorps
insl
mov
lods
jge
add
callw
mov
decb
popf
out
loope
rolb
test
imul
sub
add
in
mov
pusha
into
mov
inc
mov
ret
xchg
sbb
mov
out
dec
addr16
gs
repz
jae
fldcw
ljmp
popa
and
jmp
mov
sbb
mov
mov
and
adc
xor
bound
adc
call
cld
loopne
fwait
in
xor
arpl
popf
out
dec
or
in
push
xchg
imul
push
sbb
inc
sub
push
movsb
pop
pusha
xchg
sub
or
clc
stos
sti
aam
push
jnp
mov
adc
arpl
cmpsl
push
push
rcll
or
out
icebp
pop
sub
ds
mov
imul
into
xchg
pop
std
add
push
inc
inc
aam
shl
test
addr16
pop
mov
outsb
outsb
pusha
sub
and
xor
into
cld
addr16
adc
dec
mov
mov
sti
lock
pusha
aaa
inc
test
mov
mov
rcl
test
cmp
or
sub
in
and
push
push
mov
testb
sbb
and
and
pop
sbb
lret
sahf
sub
inc
xorb
mov
js
add
pop
pop
jae
ds
sahf
add
movsb
jmp
out
je
fistl
adc
pushf
lods
filds
int3
loop
adc
mov
ficomps
xchg
pop
notb
es
arpl
fldt
adc
call
inc
jo
lret
push
mov
mov
cmp
loopne
fistps
sbb
xchg
imul
divl
outsl
push
fwait
aas
mov
sub
cmpsl
mov
dec
jmp
push
in
mov
test
push
scas
frstor
pop
mov
cltd
pop
xchg
js
addr16
dec
icebp
test
dec
cld
xchg
jno
add
lods
xlat
frstor
push
out
call
dec
push
daa
mov
lods
js
fstp
in
mov
movsl
add
in
push
in
or
adc
xchg
add
cli
push
xchg
lcall
or
bound
push
mov
mov
aaa
int
daa
aam
push
fdivr
mov
pop
xchg
dec
rcrl
mov
test
es
and
xor
xor
push
pop
inc
popl
or
mov
mov
push
dec
scas
out
push
mov
add
jnp
mov
rcr
add
shrb
inc
jmp
fistps
push
inc
mov
aaa
dec
mov
sti
xchg
fistpll
mov
daa
cmp
and
xchg
mov
rolb
outsb
cmp
rol
out
mov
bound
cmpsb
std
jl
inc
jp
lds
xor
xchg
lcall
xorb
adc
hlt
mov
les
pop
inc
jns
sbb
cmp
lea
sbb
sub
xor
cmp
shlb
mov
flds
cld
lahf
jb
mov
leave
popa
imul
inc
inc
mov
lea
lahf
scas
insb
xchg
or
shll
inc
cs
repnz
fmull
in
aaa
dec
ja
inc
mov
xlat
scas
repz
gs
ja
in
insb
xchg
pop
or
sub
and
aaa
jge
jle
ljmp
sahf
add
lret
and
arpl
lret
inc
mov
rorl
push
xor
mov
add
cltd
add
sub
insl
int
insl
cmc
cmp
sti
ljmp
push
cmpsb
sub
aam
adc
push
rorl
push
test
or
mov
hlt
mov
sub
inc
push
bound
mov
in
mov
jns
dec
or
dec
jae
pop
mov
gs
ds
aas
int3
or
pop
mov
jmp
sbb
mov
movsl
call
out
and
xlat
dec
cmpl
mov
push
xor
clc
and
cmpl
aas
rol
addl
push
jbe
xchg
dec
pop
and
lcall
in
int
mov
push
std
jmp
xchg
cmp
pusha
jae
push
jae
mov
lret
stos
or
iret
jo
xchg
xlat
mov
xchg
dec
xor
or
or
or
sarl
dec
lock
out
int
add
clc
sub
aad
pop
push
lods
and
ja
xchg
popa
and
inc
sub
jp
add
call
ss
mov
jecxz
pop
cmc
ficoml
jbe
pop
out
push
loopne
stos
or
xchg
jp
test
sti
adcb
mov
xor
sbb
dec
mov
fwait
jne
call
and
das
push
rcrb
aaa
mov
xchg
sbb
xor
mov
lret
mov
xor
xlat
lahf
jno
xor
or
cmp
cmp
mov
je
xchg
push
mov
bound
mov
sbb
xor
mov
and
adc
out
jl
ljmp
iret
ja
aaa
jo
fst
clc
fimull
lcall
sbb
pop
push
stos
in
xor
addr16
insl
adc
lret
es
jmp
int3
fcmovnbe
pop
xchg
cmp
dec
mov
inc
test
subb
sbbb
loop
scas
js
inc
fcom
xchg
jle
mov
les
das
enter
cmp
fwait
mov
imul
cmp
and
jbe
xor
or
sbb
adc
clc
push
lret
movb
jecxz
lcall
add
mov
inc
je
dec
inc
cwtl
stos
mov
mov
inc
xchg
inc
mov
push
mov
mov
xchg
ja
inc
inc
jne
imull
ret
push
cld
xchg
or
mov
stos
orb
aad
fbstp
pop
jne
push
inc
aas
lahf
mov
js
imul
inc
lock
mov
les
jge
push
sbb
xchg
sub
inc
inc
mov
mov
outsb
sbb
cmp
cmp
mov
out
push
mov
xor
mov
lods
cmp
repnz
add
xor
daa
add
xor
in
push
roll
push
jnp
push
add
mov
popa
ficompl
pop
ja
mov
loope
pop
mov
scas
mov
into
add
sbb
cmp
jnp
fildl
loope,pt
mov
cld
mov
inc
lret
int3
leave
adc
mov
js
sti
popa
and
cltd
bnd
jg
adc
lret
or
rol
sahf
mov
cmp
inc
jnp
sub
bswap
xor
sub
pop
pop
jo
pusha
scas
es
ffree
mov
repz
mov
fwait
stos
ja
ds
lds
adc
lahf
or
mov
add
push
rorb
and
ja
aad
pop
mov
jnp
into
xchg
add
sbb
in
dec
loope
mov
lahf
sub
and
pop
pop
or
add
popa
dec
xchg
mov
cmp
cmpsb
push
subb
adc
test
loop
dec
bound
dec
push
sahf
aas
pop
mov
hlt
mov
adc
add
jg
fsub
loop
ret
lds
test
pop
mov
aam
lcall
js
cmp
fcoms
push
cli
mov
mov
mov
and
es
xlat
test
adc
jl
arpl
movsb
into
cmp
mov
lock
xchg
add
dec
mov
jl
in
lods
pop
ror
daa
dec
out
mov
jle
pop
lret
lods
mov
pop
mov
mov
cld
xchg
or
movsl
adc
push
fcmove
psubsb
int3
loopne
xor
push
mov
sti
out
mov
inc
insb
mov
adc
mov
pop
jge
out
cmp
adc
lcall
inc
mov
xor
enter
cmp
fldenv
cltd
test
rcrb
scas
dec
fldenv
and
iret
jg
arpl
les
cmpsl
movsb
leave
cmp
mov
rclb
jmp
adcl
jg
sti
aam
pop
mov
cmp
mulb
testb
push
call
lods
mov
dec
sub
xor
inc
imul
fildl
mov
sbb
push
push
mov
cmpsl
and
into
pusha
fimuls
loopne
and
pop
mov
pop
and
mulb
dec
outsl
in
repz
add
adc
sbbl
aad
dec
std
mov
mov
sub
xchg
xor
adc
ficoms
xchg
jg
inc
push
sub
lds
jmp
lret
jo
ret
jl
add
or
lock
xor
lret
push
es
lret
dec
div
or
adc
call
mov
cmp
ja
push
test
cmp
andl
scas
cli
sbb
hlt
repz
lret
out
rclb
jne
shll
dec
xchg
pop
lret
sub
idivl
mov
xchg
outsl
xor
repnz
in
mov
pop
clc
jne
mov
cld
mov
and
addr16
in
adc
aad
dec
push
lods
pop
out
stos
test
int3
lea
pop
cmp
fldl
push
in
iret
je
push
dec
lods
in
pop
mov
cmc
adc
inc
xchg
addb
sub
push
scas
push
fcom
movsb
stc
xchg
mov
xchg
sbb
push
push
inc
mov
test
shl
jbe
dec
iret
mov
test
es
int
jg
scas
aas
rorl
out
or
dec
sub
orl
pop
inc
mov
lds
jmp
clc
pop
in
sti
lock
pop
adc
lds
or
pop
inc
xchg
sub
int3
mov
clc
test
bound
jge
fwait
xchg
inc
scas
mov
fimull
pop
mov
sbb
xchg
int3
xchg
mov
push
pop
mov
jne
push
pop
stos
mov
subl
mov
dec
sbb
jle
adc
psubsw
outsl
jge
mov
fs
cmp
rcl
ret
arpl
enter
out
mov
outsb
jecxz
sbb
and
pop
pop
mov
adc
and
arpl
xor
cltd
dec
and
or
jns
loop
xor
pop
sub
dec
adc
jnp
subl
insl
and
and
jb
fsts
gs
cmp
inc
fiadds
sbb
sub
fs
dec
push
ret
movb
ss
ljmp
shll
xchg
outsl
inc
mov
pop
test
adc
cmp
in
xor
mov
int3
shr
pop
lahf
mov
outsl
out
std
dec
mov
pop
push
and
je
sti
cmp
in
outsb
pop
jl
test
mov
jl
inc
mov
sub
test
inc
lods
repz
aas
mov
ret
sub
push
data16
out
icebp
mov
fsubs
flds
leave
outsb
xchg
sbb
das
daa
sbbl
and
sahf
push
movsb
cmp
iret
mov
mov
xor
mov
inc
pop
decb
inc
aas
mov
mov
jo
push
insb
adc
notb
mov
imul
faddl
ss
addl
ljmp
and
lcall
rep
inc
clc
sub
push
adc
jg
mov
jp
ret
cmpsl
mov
pop
sub
add
data16
jbe
rclb
fmulp
ljmp
test
dec
iret
sub
out
gs
sub
hlt
in
enter
iret
out
mov
xchg
jbe
rorl
adc
fwait
orl
mov
lahf
and
mov
and
push
out
fsubrs
cmp
hlt
push
fcom
push
lds
dec
rol
ss
pop
cld
in
inc
inc
in
fiaddl
inc
lret
sub
fiaddl
lret
jg
out
inc
out
mov
fistpl
mov
cmp
lods
lahf
loope
inc
test
push
popf
faddp
add
push
xchg
xor
clc
daa
xchg
roll
pop
or
mov
outsb
stc
lock
in
arpl
dec
xchg
adcl
dec
and
adc
stc
out
sahf
test
jecxz
loopne
dec
mov
hlt
pop
jp
jb
add
inc
mov
outsl
xor
hlt
dec
addr16
js
push
pushf
push
mov
sbb
mov
cld
mov
or
jne
sbb
fsubs
and
xor
add
pop
dec
mull
jnp
mov
jae
vpsubusb
into
adc
cmp
cmpsb
into
inc
mov
and
mov
loopne
jg
leave
and
into
dec
ret
inc
mov
cmp
setno
sarb
inc
cmp
movsl
jmp
jo
inc
int
call
pop
outsb
subl
mov
mov
fdivs
push
jge
xor
fdivrs
js
add
jbe
fdivs
frstor
icebp
call
mov
push
sti
xchg
imul
test
ret
mov
jge
lds
push
cmpb
and
icebp
pop
xor
mov
xlat
stos
lret
dec
pop
loop
lock
sbb
out
inc
std
imul
jno
dec
inc
jecxz
pop
jmp
mov
push
imul
push
ljmp
cld
jae
roll
pop
pop
xchg
decl
mov
popl
pop
xchg
loope
leave
divb
or
imul
popa
inc
push
jae
xchg
mov
jg
or
sti
pop
cmp
out
adc
mov
ljmp
push
ret
adc
add
push
inc
mov
adc
test
std
jecxz
scas
sub
xorl
ja
sarl
stos
fisubrl
outsl
and
leave
or
mov
nop
mov
push
mov
sahf
rcr
movsl
enter
cmp
pop
ss
mov
sbb
sub
and
mov
jle
mov
push
xchg
xchg
sub
pop
pop
pop
imul
push
dec
lds
pop
call
lahf
mov
ret
call
fcompl
fisttps
push
enter
xor
xchg
test
mov
mov
and
cmpsb
sarb
sub
mov
pusha
mov
mov
iret
cmp
test
in
jae
fcoml
cmp
sub
pop
dec
or
or
xchg
pop
mov
adc
fisttpl
es
cmp
cmpl
jno
sub
and
stos
imul
mov
pop
lds
das
sti
mov
sbb
addr16
ds
cld
dec
ficoms
shrl
mov
loop
push
and
add
fcoms
add
dec
inc
jno
test
push
push
inc
pop
pop
and
rcll
xchg
jno
xchg
mov
call
call
xchg
fisubrs
xor
insb
or
add
xchg
inc
loop
clc
aas
adc
test
sub
das
jns
ret
or
push
pushf
push
insl
notl
cmp
rcll
imul
jne
jnp,pn
xchg
lret
and
push
fmuls
push
insb
imul
or
jg
nop
mov
int
shll
sub
mov
cmp
repnz
xor
outsl
jl
mov
aaa
sahf
test
xchg
mov
mov
mov
mov
add
jbe
stos
mov
inc
inc
sbb
mov
sbb
dec
inc
dec
data16
jb
std
daa
pop
imul
cmp
lds
gs
int
das
sub
push
inc
rcrl
sti
dec
mov
arpl
stos
mov
sbb
jae
outsl
xchg
inc
imul
adc
sbb
or
mov
jle
call
jno
push
fcmovnb
or
mov
cmp
cmc
shl
push
hlt
dec
sub
jb
mov
xchg
enter
pop
pop
lods
jae
pop
or
adc
add
lods
xor
roll
cwtl
mov
dec
push
or
mov
xor
sub
cltd
movsl
cld
push
and
xchg
adcl
addr16
repz
mov
lock
fsubl
push
cmpsb
xorb
movsb
jl
gs
stos
rorl
sub
je
mulb
fwait
loop
adc
push
and
or
out
add
mov
jno
mov
in
push
sub
jo,pn
stos
cld
adc
inc
jnp
aam
scas
cli
cmpb
fsubrp
movsb
and
movsl
inc
mull
lahf
or
pop
sbb
ret
add
mov
aam
into
scas
jge
jns
adc
and
mov
nop
jno
or
mov
fwait
mov
insb
cmp
imul
ret
stos
pop
mov
sub
mov
sbb
iret
add
mov
pushf
pusha
and
xor
imul
icebp
mov
xchg
repz
insl
sub
xor
imul
int
adc
add
adc
fbstp
add
frstor
scas
fidivl
push
jo
adc
dec
inc
fsubrs
into
cmpsl
adc
cltd
push
sbb
ljmp
mov
popf
jle
add
sbb
fdivrs
sbb
ret
xchg
xlat
push
push
out
daa
jl
xchg
cmp
shl
lcall
insl
movsl
adc
sbb
fstps
loope
jnp
cmp
push
dec
cmp
out
xorb
mov
xor
test
mov
mov
sahf
cmp
insb
cmp
data16
mov
mov
ja
cmp
pop
stos
push
cld
imul
inc
cmove
fisubrl
sub
mov
aad
cmp
adc
in
xor
stos
stos
push
popa
std
cmp
adc
push
dec
or
test
pop
mov
mov
inc
je
push
std
arpl
push
movl
cs
ds
add
or
push
frstor
push
test
or
ret
cwtl
xchg
push
stos
loope
pop
mov
mov
mov
std
jno
add
into
cld
mov
push
fldenv
jbe
jge
in
cmp
in
or
mov
mov
dec
inc
xor
cli
stos
cmp
push
xlat
push
mulb
dec
sub
jge
xchg
jne
xchg
jb
mov
scas
sarb
mov
sub
bound
test
pop
inc
mov
es
cmpsb
imul
sbb
mov
mov
cmp
pop
repz
repz
fdivrl
mov
jo
bound
pop
aaa
pop
mov
dec
xchg
inc
clc
xor
mov
roll
xchg
push
rolb
add
mov
sub
lods
add
ja
cs
xchg
mov
mov
je
cmp
es
jge
ret
aaa
stos
or
cli
pop
cwtl
mov
fsubrl
pop
xchg
cmc
aaa
lods
je
in
nop
ds
mov
mov
daa
adc
mov
cmp
aaa
je
fisubrl
mov
gs
mov
mov
sub
scas
adc
sub
in
js
in
mov
ds
std
outsl
out
insl
push
pop
push
and
stos
push
and
in
or
adc
push
xor
lods
adc
sbb
aam
xor
pusha
ljmp
xor
mov
adc
repz
xor
cs
pop
data16
jecxz
add
movsl
mov
cmp
xchg
cmp
dec
jg
out
mov
cmpsl
cmp
dec
insl
sbbb
cltd
stos
testb
push
lcall
fldenv
cwtl
adc
adc
or
cmpxchg
insb
sahf
stos
dec
icebp
push
mov
and
mov
mov
push
cmp
loope
xchg
sbb
dec
ljmp
adc
lods
imul
mov
in
pop
lods
sti
jge
lahf
das
jo
cmpsb
sub
and
sti
mov
add
sahf
mov
dec
dec
dec
fcmovb
call
push
push
icebp
stos
movsb
jge
mov
fs
imul
in
xchg
pop
fildll
mov
das
lret
xor
mov
out
and
pop
call
xlat
cltd
orb
hlt
nop
shll
fimuls
mov
js
sub
mov
in
and
scas
int
gs
sbb
int3
idivl
icebp
leave
lock
sbb
fbld
movsb
mov
mov
subl
in
rcrb
int3
xor
dec
and
lock
rclb
add
lods
mov
mov
sbbl
je
popa
shrl
dec
incl
in
shrl
hlt
arpl
xchg
pushf
push
rolb
xor
push
jp
push
jo
or
and
dec
cmp
ds
movsb
add
js
mov
sub
jge
mov
jmp
push
aam
add
in
cmp
xchg
push
sbb
xchg
push
mov
adc
sbb
ljmp
pop
sbb
in
push
jl
sub
push
call
pusha
inc
fs
adc
inc
enter
ficompl
mov
lods
in
pop
jns
popa
xchg
call
ss
jno
shll
or
xor
loopne
mov
hlt
mov
push
or
dec
pop
cs
or
out
push
cmp
pushf
dec
dec
std
scas
mov
xchg
cmp
ds
ja
bound
aad
mov
push
insl
xchg
jl
imul
mov
mov
mov
cmp
sbb
decl
int
lds
arpl
popa
dec
sahf
repnz
adc
int
test
and
dec
xor
pop
xchg
or
sub
mov
fdivr
subb
pop
scas
divb
popf
std
arpl
insb
add
jle
jl
pop
jno
inc
clc
test
std
mov
ret
ret
mov
mov
push
sbb
in
mov
jle
ja
je
jg
add
mov
jmp
sbb
xchg
les
sub
in
fdivr
add
mov
cmovo
shrl
sub
aaa
lcall
outsl
into
dec
inc
add
movsb
push
mov
xchg
shlb
mov
pop
adc
mov
mov
mov
fimull
andb
mov
push
xchg
pop
aaa
mov
jns
inc
icebp
or
adc
mov
pop
cmpsb
mov
mov
enter
jae
aam
and
hlt
stos
and
and
pop
in
imul
ja
aam
mov
add
iret
xor
mov
call
scas
jg
lds
sbb
cmc
pop
mov
cmp
jbe
pop
mov
cmp
cmp
xor
movl
lods
add
cmp
mov
cltd
dec
mov
xchg
xchg
xchg
mov
add
push
cmp
aas
dec
dec
jo
bound
clc
outsl
or
into
rcr
sub
into
or
hlt
mov
inc
mov
or
fwait
cmp
cmpsb
in
cmp
pop
cltd
dec
mov
inc
mov
clc
fcomip
in
mov
add
sbb
loopne
add
shrl
imul
imull
lds
mov
inc
shrb
dec
lock
and
mov
adc
test
imul
mov
mov
jb
popf
sub
les
adc
test
in
mov
adc
push
sub
out
lods
icebp
or
je
mov
push
insb
jp
loop
and
dec
hlt
push
cld
loope
sub
js
in
lret
xchg
nop
rorl
pop
testb
mov
test
and
push
iret
mov
sbb
mov
mov
icebp
sub
lret
adc
xor
mov
ret
add
xor
outsl
out
xor
dec
xchg
mov
xchg
movsb
jb
mov
push
lods
push
mov
and
out
jbe
push
test
aad
jbe
sbbb
adc
inc
inc
leave
hlt
xlat
and
shl
cli
out
mov
cmp
gs
mov
mov
les
out
cmp
pop
pop
imul
shll
push
cmpsl
js
out
sub
arpl
dec
mov
and
or
mov
loop
dec
bound
mov
les
xor
adc
add
icebp
or
bound
push
fistl
pop
pop
xchg
int3
fs
sub
cld
pop
push
shr
inc
in
out
dec
cmpsl
outsl
je
add
pusha
xchg
jmp
aam
adc
push
rcl
xor
push
mov
rorb
jl
xor
mov
lds
in
ret
leave
shlb
adc
sbb
xchg
xchg
test
mov
js
fldcw
sbbb
cmpsl
adc
fmull
xchg
movsb
mov
jp
pop
sarl
mov
int
push
movb
push
add
cmpsb
sub
push
data16
mov
loopne
mov
shll
and
xor
scas
enter
pop
aaa
sub
arpl
mov
mov
add
jb
or
dec
add
sub
adc
outsl
inc
xor
rcrl
in
xlat
out
pop
test
mov
sub
sub
or
repnz
adc
out
je
mov
jns
jge
and
push
push
and
pop
iret
mov
push
outsb
nop
mov
mov
dec
push
icebp
xlat
adc
ds
out
sub
sub
cmp
int
and
pop
mov
sti
outsl
jb
mov
cmpsb
and
mov
adc
ret
adcb
call
rclb
shr
mov
xor
pop
dec
add
loope
test
jp
movsl
popf
aaa
inc
or
outsl
rcrb
cmp
mov
cmp
adc
data16
xchg
loopne
lds
dec
xchg
cmc
push
popf
add
nop
lods
repz
lock
cli
cmp
add
push
jp
sub
push
lret
mov
sarl
mov
in
push
in
jbe
jno
pop
sub
xor
xchg
test
jge
repz
cmpb
jmp
arpl
adc
lds
fisttpll
daa
jmp
in
test
sub
fs
dec
xchg
lret
jb
mov
sub
mov
lret
mov
lea
ljmp
jmp
xor
push
fimuls
xchg
mov
pop
and
lcall
je
xchg
sbb
sub
lods
inc
fistpl
in
hlt
mov
cmp
imull
mull
test
fisubrs
mov
and
ljmp
pushf
pop
fldcw
push
ret
pop
lods
cmc
mov
je
stos
repz
add
test
xchg
mov
pop
and
loop
data16
daa
icebp
mov
jb
in
ja
out
push
xor
shrl
mov
js
push
mov
mov
cld
popf
test
outsb
daa
shrb
or
rorl
es
inc
xchg
icebp
xchg
adc
lods
bound
out
inc
sbb
mov
loop
cmc
xchg
push
leave
mov
fisttps
dec
lds
scas
orl
inc
lcall
mov
out
push
lods
lcall
and
aad
and
popf
xor
cmpsl
push
bound
jecxz
test
test
not
ror
mov
cmc
psubq
xchg
push
xchg
es
popf
int
nop
xchg
and
or
outsl
sbb
sbb
jno,pt
mov
push
push
mov
pushf
pusha
and
jne
push
icebp
push
mov
adc
cmpsl
sbb
inc
fsts
out
sbb
divl
fadds
or
cmp
loop
dec
jne
cmpsb
pop
jg
fdivl
mov
sub
lods
imul
shlb
mov
xchg
add
inc
pop
sbb
xlat
fisttps
pop
or
rolb
lods
adc
pop
mov
arpl
or
sbb
movsb
fbstp
ja
je
cltd
es
jnp
jnp
adc
clc
ds
and
lods
ja
daa
mov
stos
pop
and
fadd
push
nop
xchg
fwait
xlat
out
hlt
mov
sub
pop
arpl
mov
outsl
adc
pusha
cmpsl
cmp
push
adc
out
clc
add
daa
add
mov
rorl
lahf
call
repnz
loope
hlt
orl
push
call
pop
jmp
jp
shl
jae
pop
scas
popa
aaa
add
adc
xor
mov
test
jecxz
push
cmp
ret
jne
pop
xor
xorl
dec
icebp
mov
sahf
push
adc
fdivr
movsl
jns
lahf
adc
sbb
sub
daa
xchg
jl
mov
jne
out
sbb
xor
out
aam
lret
stc
loop
in
fnstsw
inc
fstpt
or
jne
jecxz
cmp
ss
jl
or
mov
mov
sub
mov
push
dec
jns
insl
mov
lcall
incl
xor
fprem1
call
or
gs
and
bound
or
arpl
lock
pop
adc
jl
push
xorb
mov
xchg
xchg
filds
cmpsb
add
or
mov
rcll
mov
pop
fidivrl
in
std
bound
ljmp
adc
inc
sbb
sub
shl
popf
cmp
inc
mov
add
mov
jae
lds
das
xchg
cld
xchg
fwait
xor
mov
js
fsubrs
adc
out
cmp
mov
and
test
xor
mov
mov
and
cmp
stos
add
fsubrl
aas
lahf
ret
dec
rcrl
addr16
enter
lods
push
mov
or
dec
inc
cmpsl
adc
or
cltd
lahf
jmp
pushf
repnz
sub
cmc
out
sbb
dec
add
and
ret
shll
adc
mov
push
imul
mov
fsubs
loopne
test
jle
lahf
les
adc
add
jge
sub
ret
js
jbe
mov
fisttpl
ret
mov
and
push
mov
mov
jno
inc
pop
lea
and
mov
nop
negl
add
in
adc
mov
mov
pop
idivb
gs
pushf
pop
inc
int
inc
imul
cmp
or
mov
gs
sbb
mov
sbb
mov
fstpt
dec
or
mov
pop
lret
hlt
and
les
mov
andl
pop
inc
push
sub
repz
ss
push
aad
lea
pop
int3
je
inc
adc
xor
sub
cmp
stos
das
lds
jmp
push
xchg
mov
imulb
int3
inc
lock
movsl
nop
pop
leave
and
arpl
shl
mov
sub
mov
shll
mov
sub
push
insb
stos
es
mov
lret
std
ljmp
pop
or
adc
cmp
sarb
mov
mov
in
cwtl
mov
fs
sub
mov
pop
jo
cmp
jbe
jecxz
xchg
lea
sub
xor
leave
sar
cmp
fimuls
loope
scas
cli
subl
fs
out
jns
js
test
lcall
je
cltd
dec
mov
icebp
jbe
mov
pop
xchg
shll
sbb
mov
out
mov
xor
iret
push
xchg
push
divb
pop
insl
and
inc
pop
sahf
mov
mov
or
aaa
cmp
popa
imul
arpl
lods
cmpl
mov
push
es
mov
lds
jb
cli
movb
fildl
mov
in
aad
inc
stc
pop
loope
sub
ret
iret
lret
out
decb
dec
inc
into
xor
test
xlat
adc
pop
push
lods
push
lds
loop
xchg
pop
aad
xchg
test
bound
sbbl
mov
and
outsb
push
pop
loopne
inc
xchg
pushf
bound
push
jl
adc
ret
mov
imul
mov
cmp
adc
shll
bound
rol
data16
loopne
lods
sub
dec
ret
imul
jo
shrl
jbe
pop
xor
aaa
in
inc
stos
push
fwait
jns
jmp
incb
cmp
jmp
scas
aam
loopne
hlt
mov
mov
mov
inc
jl
adc
lret
loope
adcb
aad
add
inc
sub
or
idiv
scas
mov
sbb
scas
mov
mov
mov
into
add
lahf
cs
in
cs
scas
xlat
je
and
loope
dec
cmp
movsl
xor
iret
cld
test
paddb
add
jle
xor
fdiv
jnp
sbb
mov
mov
xor
gs
mov
loop
popa
pop
lcall
dec
push
leave
cli
ffree
inc
subb
fs
mov
cs
loop
addr16
mov
adc
js
test
inc
jno,pt
ret
cld
outsl
int3
sub
xchg
and
scas
andl
dec
fnstenv
into
jp
or
icebp
cmpsb
lret
pop
push
push
test
repnz
jg
popf
xor
dec
sarb
xchg
in
adc
cmp
mov
sub
pop
in
std
sub
pusha
dec
cmp
pop
cmp
mov
movl
sub
mov
std
inc
mov
mov
mov
xor
pop
data16
sti
push
aad
into
xor
xor
push
bound
push
xor
or
pop
fnsave
iret
push
inc
push
scas
arpl
pop
fimull
les
sub
ficompl
popa
icebp
mov
mov
sub
mov
cli
sti
jb
mov
dec
dec
das
frndint
dec
inc
lret
idiv
dec
in
lods
mov
cmp
cltd
ja
mov
clc
xchg
ss
enter
or
dec
xchg
push
add
daa
xchg
ss
lret
stos
or
xor
push
inc
mov
jb
mov
out
aad
add
xchg
test
push
aam
xorb
pop
outsl
mov
mov
pusha
clc
ds
push
lock
push
mov
in
gs
and
pop
dec
sti
mov
lods
push
cmp
inc
mov
fiaddl
fisubrs
xlat
jge
xor
xchg
scas
aad
loopne
xchg
sbb
mulps
inc
shll
fwait
cmp
out
mov
movsl
outsl
push
sub
jbe
int
testb
push
loope
sub
add
and
pop
mov
add
jl
jns
pop
hlt
xor
and
gs
cli
int
inc
adc
mov
xchg
inc
push
push
push
dec
jg
dec
push
ds
fdivrs
repnz
jmp
bswap
cmpsb
into
mov
out
pop
push
mov
or
gs
xchg
mov
orb
lea
jge
inc
leave
xor
adc
mov
dec
sti
sub
cmp
or
jbe
adcl
push
mov
enter
push
and
lcall
sub
mov
repz
rorb
jmp
cmp
xor
xlat
sub
out
insl
mov
push
jae
sbb
dec
xchg
gs
jecxz
je
clc
sbb
jge
nop
arpl
pop
or
stc
push
jg
or
in
xor
aaa
jne
mov
inc
dec
xchg
mov
xchg
leave
imul
inc
add
je,pn
repnz
cs
dec
ja
les
mov
movsb
loop
inc
addr16
xor
cmpl
inc
stc
hlt
sti
loope
pop
cmpsb
jns
push
jne
xchg
out
scas
xor
jg
jecxz
push
mov
push
insl
sbb
add
inc
clc
push
sub
rorl
in
aad
enter
mov
xor
xchg
pop
xchg
nop
stos
dec
xor
lret
dec
cmpsb
in
xlat
xor
jl
inc
mov
movnti
cmc
jl
pop
cmc
addr16
fstps
hlt
test
aad
dec
mov
pushl
push
push
scas
addr16
pop
adc
orb
push
lcall
sbb
push
push
pop
xchg
lods
push
inc
aas
subb
ja
jo
jmp
loope
inc
xchg
or
test
mov
sarb
popf
push
rorl
cwtl
int
sbb
inc
jle
out
icebp
dec
popa
xor
notl
divl
mov
push
data16
jns
adc
shlb
stos
ljmp
std
jno
pop
or
inc
jl
inc
imul
cmp
cmp
mov
mov
mov
roll
xlat
lods
fwait
mov
cmc
loope
or
inc
imul
and
cltd
xchg
jmp
fistl
xor
stc
shl
lahf
adc
and
sub
add
enter
dec
cwtl
push
mov
mov
mov
out
scas
dec
add
aad
pop
in
and
xchg
cmp
fwait
aad
or
push
dec
test
enter
fnstsw
out
jb
xchg
pop
insb
lcall
out
mov
negb
cwtl
movl
arpl
out
mov
orb
mov
xor
mov
sbb
pop
je
xchg
fwait
imul
loop
icebp
es
pop
sub
mov
mov
pop
dec
pop
or
lret
loope
dec
lods
sub
jge
fisubrl
out
das
xchg
dec
pop
push
lret
push
test
or
ret
idivl
fwait
sbb
fisttpl
insl
shrb
xor
aaa
push
jo
fildl
imul
notl
dec
jnp
pop
xchg
cmp
and
adc
dec
xchg
js
cli
out
dec
lods
movl
jnp
xor
repnz
insb
fstpt
xchg
repz
cltd
lods
and
add
orb
xchg
push
jmp
daa
nop
mov
push
add
pop
add
mov
inc
aaa
icebp
stos
sbb
ljmp
xor
imul
out
nop
adc
jbe
aaa
scas
sub
xchg
aas
ret
sbb
jg
movl
inc
test
pop
dec
jns
jb
dec
test
insl
stos
pop
sub
add
ss
push
inc
je
xchg
punpckhdq
ds
adc
sub
std
sub
jge
xchg
mov
stc
xchg
fidivrs
sti
xchg
fdivr
aaa
pop
call
imul
lods
jle
push
inc
lcall
sbb
subb
sbb
pusha
pop
pop
cmp
sbb
mov
xor
lret
shlb
fcmovu
jmp
imul
in
sub
add
jne
push
das
mov
xor
fdivs
in
lcall
xor
jne
push
test
mov
popa
mov
je
je
push
lods
ret
outsb
jmp
jle
repz
mov
fwait
mov
lods
cmp
fwait
dec
lock
push
nop
out
inc
jmp
in
mov
sbb
aaa
xchg
adc
dec
push
lds
sbb
push
sub
clc
mov
dec
int3
insb
adc
js
cmc
add
mov
xchg
cmpxchg
cs
mov
filds
nop
ljmp
mov
fsubrl
fstpt
inc
popf
push
jns
mov
in
ret
les
dec
out
inc
scas
sub
xor
mov
mov
cmp
lock
cltd
xchg
shlb
cli
sub
mov
out
aaa
fcomps
add
divb
movsl
xchg
aad
cmp
aad
pop
jmp
mov
xchg
jle
out
in
xchg
xchg
mov
es
pop
repnz
daa
mov
mov
addb
test
in
mov
xlat
js
into
ljmp
sahf
call
fcmove
jg
push
cwtl
push
xorb
sub
fwait
xchg
mov
sti
push
stc
rol
or
stos
jge
call
lahf
xor
push
push
pop
inc
mov
mov
dec
adc
daa
cmp
inc
jno
shll
mov
xchg
mov
jmp
sub
hlt
add
cmp
sub
sub
push
xchg
int
ror
push
mov
inc
aam
sub
nop
mov
add
shl
xor
mov
loope
push
movb
cltd
push
and
mov
rol
add
arpl
cmp
aaa
lock
lods
pop
mov
ret
and
movsl
shlb
dec
xchg
sub
mov
loop
cmpl
jmp
jmp
dec
mov
cs
pop
jbe
jne
adc
mov
ja
sub
adc
std
popf
pop
scas
in
lds
divb
dec
fs
sbb
mov
jmp
cmp
push
xchg
cmpsl
dec
gs
cmp
inc
mov
loope
movntq
loope
or
and
pop
dec
cmpsl
daa
iret
inc
out
xchg
sub
js
outsb
sub
and
push
scas
pop
ret
mov
cltd
xchg
ret
roll
pop
std
lds
es
cmp
daa
into
push
push
movsl
enter
sbb
xchg
ds
shrl
xor
dec
xchg
xchg
mov
add
mov
sbb
inc
stc
mov
add
in
in
fbld
scas
cs
jecxz
cmpsl
jb
je
iret
cwtl
pop
pop
and
pop
mov
cwtl
add
bswap
pop
imul
push
test
mov
jb
call
push
xchg
xorl
adc
xchg
imul
mov
or
and
xchg
push
sbbb
jmp
xchg
inc
les
leave
test
dec
hlt
jb
ljmp
inc
jmp
out
imul
ret
ficoms
testl
pand
leave
or
push
and
push
push
call
mov
mov
frstor
cwtl
stos
lea
mov
imul
push
jo
daa
fwait
cmp
add
jecxz
out
or
add
mov
fcoml
test
sbb
stos
idiv
in
out
leave
adc
adc
std
mov
adc
cmp
movsl
add
add
stc
add
test
and
addr16
cmp
icebp
xlat
or
cmp
cld
cs
cwtl
movsl
jns
pop
cmpsl
push
out
and
dec
fs
or
andb
or
shll
and
lock
outsb
icebp
mov
mov
xchg
push
pop
mov
fbld
popa
lea
lcall
xor
cmp
jb
sahf
in
dec
xorb
in
mov
nop
cmp
in
jp
and
jb
andl
int3
int3
push
jno
test
jp
jle
setg
icebp
mov
mov
stos
fwait
dec
cmp
pop
fsubl
fucomi
mov
dec
ja
ss
push
imul
jle
jecxz
es
mov
or
push
ja
lahf
sub
into
stos
out
test
in
arpl
jp
inc
xchg
lock
mov
aaa
mov
push
pop
clc
ja
in
into
mov
iret
mov
cmp
mov
xorl
push
adc
inc
mov
mov
jbe
mov
aad
dec
pop
or
subb
nop
repz
mov
aam
out
add
jge
stc
mov
or
pop
rcl
sbb
mov
setns
subb
shl
add
fisubl
cmpsl
loop
xor
add
aaa
mov
enter
add
movsl
adc
fidivs
aam
sbb
repnz
gs
inc
and
cmp
loopne
lods
push
pop
add
jge
xor
xchg
fmul
adc
adc
mov
sbb
or
sahf
inc
jae
sub
pushf
int3
mov
push
mov
mov
dec
dec
or
cmp
fstl
sbb
push
jle
stos
mov
pop
inc
sbb
xor
jbe
and
fstps
sarb
ret
adc
je
shld
cmc
xchg
jno
jbe
cwtl
icebp
xor
and
adc
push
stos
out
sub
rcll
inc
mov
dec
cmp
icebp
jns
aad
inc
push
shl
jne
repnz
xchg
mov
cs
aam
xchg
sbb
out
out
out
and
pop
stc
xlat
jno
out
js
jge
std
push
cwtl
ja
rorl
pop
daa
cld
test
je
mov
outsl
sbb
pop
sbb
xor
inc
dec
repz
rcrb
cwtl
pushf
pop
mov
rcrb
repnz
icebp
repnz
sub
inc
sbb
lret
pushf
aad
ret
in
iret
xor
int3
scas
add
sub
addl
sahf
ljmp
inc
add
out
adc
add
sub
in
cmpb
repz
into
test
lretw
ja
lahf
sub
adc
sbb
mov
shrl
jb
jnp
or
xchg
leave
mov
mov
jecxz
test
push
sti
das
fidivrl
jmp
out
add
mov
mov
icebp
and
push
jmp
adc
lcall
iret
mov
jg
push
mov
mov
nop
je
pusha
mov
divb
adc
insb
out
sub
jns
jbe
stos
pop
shrl
cs
nop
cmpb
add
xor
fidivs
ss
shll
or
outsl
inc
xor
gs
or
aam
push
lds
mov
xchg
mov
adc
cld
call
xchg
mov
movsb
or
mov
pop
insl
mov
insb
loope
inc
outsb
xchg
out
mov
inc
shlb
push
aas
sub
mov
es
adcl
in
hlt
mov
sahf
pusha
mov
push
jb
fbstp
loope
and
aaa
xor
push
pop
ds
and
movsl
test
in
ret
lcall
xchg
enter
inc
movsl
push
mov
shrl
pop
stos
call
cmp
fnstenv
cmp
jo
xchg
pop
sti
fwait
mov
lods
out
xor
jne
pop
sahf
rclb
int
add
xchg
sbb
push
add
insb
pop
push
shll
or
fstl
push
into
std
sub
adc
addl
mov
xchg
loopne
pop
and
xor
mov
sub
xchg
pop
bound
pop
rep
push
popa
ds
cli
mov
test
jno
sub
inc
jns
call
lds
out
add
out
outsl
lahf
mov
jle
in
sbb
push
push
fidivl
lods
mov
nop
or
cwtl
mov
cmp
mov
inc
inc
js
arpl
add
lock
loope
mov
cmpb
ss
push
pusha
cmp
mov
enter
aad
push
enter
cmp
pop
or
jecxz
repnz
mov
and
insb
adc
in
xchg
loop
rol
or
lds
add
je
lcall
out
jp
cmc
inc
and
cmp
leave
jmp
lahf
das
sar
into
mov
imul
addr16
fwait
push
xchg
je
movsl
icebp
loopne
sub
jo
or
mov
mov
inc
or
insb
in
lea
dec
test
and
das
lcall
push
xchg
cmpb
add
mov
jns
test
xor
arpl
cwtl
paddusw
xchg
shll
jg
pop
jb
dec
or
add
sbb
jne
sub
jmp
movsb
xor
fbld
test
fstpl
dec
jne
int
adc
adc
decl
sbb
sbb
pop
les
shll
shll
inc
pop
popa
loop
xchg
loope
cmp
push
push
addl
in
pop
sbb
push
pop
push
mov
orl
in
sbb
mov
movsl
call
add
or
cwtl
movsb
clc
xorl
mov
jle
rcrl
mov
jmp
xlat
add
mov
pop
pop
inc
cltd
test
in
shl
fsubrs
xchg
aad
xchg
push
jae
sti
loope
jp
bound
ficomps
push
inc
jns
aaa
inc
outsl
mov
mov
or
loopne
dec
roll
pop
cmp
scas
inc
sub
lret
out
push
dec
hlt
ljmp
iret
add
inc
mov
and
add
sub
pop
sub
cmpsl
sbb
dec
or
outsb
ret
das
xor
daa
movsb
jecxz
adc
enter
pop
pop
inc
loope
cmpsl
push
adc
fsts
xchg
xchg
mov
xchg
pop
out
or
rclb
jo
add
mov
jnp
hlt
jo
xchg
pop
dec
jae
pop
add
jmp
cmpsl
mov
mov
xchg
lods
imul
cmp
std
test
push
adc
and
lcall
fmuls
pop
jg
pop
int3
ja
sar
and
jle
mov
fistpll
pop
dec
insb
sub
xor
push
adc
jl
repnz
pop
fs
lret
ja
in
into
push
mov
xchg
xchg
ficoml
je
subb
mov
and
lods
push
inc
mov
std
dec
js
imul
lock
jmp
push
mov
call
push
addr16
mov
loop
mov
loope
dec
call
mov
mov
pop
inc
cmp
push
into
hlt
push
jb
scas
inc
dec
out
add
mov
imul
pop
xchg
cmp
mov
xchg
pop
movsl
in
and
hlt
out
pop
lahf
jecxz
ljmp
jle
jne
aas
mov
xor
or
nop
ret
in
sub
mov
xlat
push
cs
out
lock
mov
mov
shrb
cmp
and
xchg
addr16
xor
cmpsl
jne
cmp
sarb
outsb
mov
mov
pop
jmp
dec
or
mov
jle
test
scas
scas
jl
test
movsb
jbe
cwtl
fistpll
push
xchg
pop
repnz
jecxz
sub
in
out
mov
lods
inc
js
add
faddl
dec
xor
data16
xchg
test
dec
and
dec
push
or
sub
in
in
aam
jecxz
xor
sub
adc
push
nop
xchg
ljmp
sub
add
inc
mov
shl
sub
int
and
std
inc
jmp
cmp
lcall
arpl
cmp
idiv
inc
and
sub
jecxz
mov
xor
inc
push
cmp
divb
cld
cmp
loopne
cmp
ds
sub
or
in
pop
jmp
jp
pop
das
dec
sbb
adc
jl
add
ret
or
cmpsb
inc
xchg
fstl
movsb
xor
adc
das
cmpsl
stos
jmp
lds
or
enter
push
jge
mov
xchg
pop
push
test
pop
stos
adc
inc
cmp
xchg
mov
or
decb
test
hlt
mov
xchg
xor
pop
fisubrl
ja
stos
adc
and
mov
or
jo
outsb
lret
xor
inc
scas
mov
mov
dec
ljmp
adc
in
cmp
roll
aas
enter
pop
xorl
mov
xor
jmp
pop
and
mov
int
jmp
cmp
out
xchg
xlat
std
test
pop
adc
shll
in
shrl
sub
sti
cmp
adc
xchg
push
mov
std
add
je
sar
jno
and
stos
insl
inc
mov
ucomiss
iret
aam
cltd
xchg
xchg
cld
inc
cmp
mov
and
sbb
cs
push
cmp
cmp
jae
push
in
mov
orb
ja
ljmp
xchg
mov
mov
pop
les
popf
xchg
xorl
xchg
xchg
mov
pusha
or
mov
cmp
jge
cmp
adc
scas
push
cltd
scas
mov
rol
cmp
and
mov
pop
cmp
mov
jg
inc
dec
addb
sti
nop
adc
cwtl
xchg
gs
and
ret
push
mov
jo
call
mov
cwtl
nop
dec
aad
clc
inc
sub
push
outsb
stos
push
repnz
fs
in
inc
push
das
roll
int3
fisubl
lock
lret
or
imul
sahf
hlt
in
inc
popf
jo
pop
cmpsb
inc
mov
jecxz
iret
and
and
xor
and
pop
mov
and
ficompl
inc
xchg
lds
cmp
xchg
cmp
push
movsb
shrb
call
cltd
jmp
sbb
sbb
pop
mov
xchg
movntq
pop
sbb
popf
aas
dec
les
fs
fisubrs
xchg
loope
jae
sbb
testb
mov
mov
xchg
jl
xor
push
push
jbe
decl
ficompl
out
test
cmp
mov
ret
popa
mov
scas
jg
mov
sarl
mov
cld
jle
pop
lods
sbb
fcoml
cmp
shll
xchg
mov
lods
xor
jle
or
and
iret
add
push
xchg
fdiv
lods
loope
shll
inc
popf
push
lods
sbb
push
cmp
dec
subl
pop
lret
jo
std
movsl
lcall
mov
mov
movsl
dec
cmp
rcrb
les
aad
sub
cmp
push
aas
xchg
push
and
cmp
pop
xor
adc
fs
xlat
mov
cmpsb
punpckhdq
out
js
and
rcl
sbb
movsl
add
adc
add
add
inc
loopne
popa
mov
out
xchg
sahf
mov
repz
mov
inc
pop
out
xchg
push
dec
mov
aad
enter
push
jnp
mov
pop
push
cmpl
shll
add
inc
lods
xor
add
les
int
xchg
pop
gs
lahf
jne
push
lods
out
sub
jnp
lea
push
xchg
mov
sbb
insl
addr16
ss
inc
and
xchg
popa
out
ss
test
jae
loope
pop
add
mov
sbb
subb
loope
aaa
pop
fst
and
call
mov
clc
xchg
cltd
sub
add
ljmp
dec
cwtl
lods
jbe
jno
lahf
jns
push
lret
loope
jo
test
pop
adc
fwait
inc
out
inc
push
data16
xchg
fimull
leave
popf
xchg
cmpsl
or
cmp
int3
push
xchg
push
xor
sbb
xchg
stos
pusha
adc
and
adc
and
inc
je
fmuls
mulb
lea
adc
xor
and
xor
shlb
xor
jg
lcall
push
scas
cmp
call
push
rcll
int3
xchg
test
or
push
xor
xchg
or
xchg
jle
add
sub
xchg
sbbl
mov
pusha
out
push
in
xchg
sub
cmp
stc
and
dec
xchg
shl
push
dec
pop
imul
mov
xchg
sbbb
fisttpll
mov
inc
cltd
sbb
adc
int
and
int3
pop
sbb
xchg
cs
rorl
mov
stos
dec
xchg
inc
cli
mov
jmp
sbb
testl
lcall
sub
pop
mov
xor
pusha
jmp
inc
shll
mov
ficoms
test
xchg
mov
mov
insb
daa
aad
mov
xor
sbb
push
stos
adc
or
lcall
xor
cmpsl
add
popf
jl
iret
mov
xchg
jb
ud1
sbb
in
movsb
mov
dec
dec
or
mov
jg
sti
into
mov
jo
test
data16
adc
xchg
xchg
add
mov
adc
imulb
jl
jne
popf
jg
fadds
pop
test
sahf
mov
xchg
repnz
cmp
in
mov
add
inc
sbb
xor
lock
lds
bound
cld
sub
and
sti
aad
js
add
ret
mov
in
loopne
cmpsb
and
aas
and
mov
jno
insb
lds
in
xchg
out
jo
das
dec
sbb
ret
and
mov
add
insl
lret
xor
adc
mov
push
adc
push
rcrl
rolb
dec
add
adcb
push
cmp
jecxz
cltd
push
jl
pushf
popf
mov
sub
cmpsb
js
adc
orl
and
lcall
sub
fidivrs
das
mov
jo
mov
and
mov
addr16
es
xor
push
std
in
out
aas
jns
pop
xchg
repz
adc
aam
xchg
loop
and
shlb
sbb
inc
fsubrs
imul
test
xchg
pop
sub
mov
aaa
insb
lock
ja
test
add
mov
jp
jge
and
std
pop
mov
ret
lods
insb
jne
stos
xchg
xchg
scas
mov
fistpl
sarl
out
scas
cs
inc
cmp
adc
cmp
push
adc
sub
mov
sbb
xchg
and
push
in
sbb
lods
cmp
pop
push
ja
adcb
jae
sbb
push
fimuls
fxch
lcall
add
in
lret
or
scas
cltd
cmpsl
ljmp
sbb
fstpl
out
cld
xchg
rcr
int
push
mov
xor
xchg
push
bnd
lods
push
fistpl
rcrb
jge
inc
fdivl
call
jbe
and
add
fistps
mov
loopne
add
clc
xchg
and
imul
ficoml
sti
lock
dec
test
gs
cmp
pushf
mov
jmp
dec
mov
jl
icebp
in
mov
std
mov
push
add
in
stos
sub
adc
or
ds
ljmp
inc
or
fnstenv
cmpsb
push
sbb
nop
or
xchg
hlt
and
and
mov
hlt
sub
in
mov
mov
scas
nop
jb
in
dec
in
movsb
test
in
pop
daa
repnz
test
jle
xchg
mov
sbb
cmpsl
test
ljmp
repnz
or
ret
mov
outsl
std
and
push
cs
and
pop
sarl
sbb
ret
xor
push
in
fildll
adc
outsl
fwait
push
imul
xor
jne
lods
insb
cmp
xor
push
pop
repnz
cmp
int
mov
int
lock
insl
fisubl
test
adc
aaa
lea
pop
mov
rclb
js
xchg
mov
mov
lock
decb
test
shr
ret
test
enter
mov
enter
mov
pop
push
mov
out
mov
cmp
xlat
lret
add
mov
add
cmp
sub
outsb
push
in
mov
mov
add
xchg
mov
iret
push
push
int
inc
mov
jl
test
lea
incl
test
pop
and
enter
scas
sbb
lcall
das
mov
hlt
test
in
and
pop
mov
aas
hlt
and
cmpsl
mov
ds
in
jo
iret
int
out
and
into
iret
mov
movsl
inc
xchg
sbb
mov
or
imul
add
stc
mov
test
negl
add
and
sbb
repz
ret
addl
mov
mov
shlb
pop
jg
sub
and
iret
jbe
ret
jl
mov
mov
out
aam
mov
stos
jns
cmp
push
push
sub
dec
jmp
inc
in
jl
mov
push
inc
xor
mov
jmp
mov
or
adc
gs
sbb
jp
jl
out
pop
pop
push
xor
enter
cld
pop
push
pop
pop
cmpsl
scas
pop
push
stos
jmp
push
jb
or
fstp
or
xchg
daa
cmc
xor
lss
aas
adc
mov
lret
aam
mov
cmp
rcrb
jbe
aam
pop
mov
mov
imul
pushf
daa
pop
hlt
cmp
js
sub
out
mov
fwait
sbb
test
shr
fisubl
pushf
dec
in
leave
outsb
or
xor
or
pop
mov
incb
repnz
xchg
aas
push
imul
sbb
sub
jae
jbe
mov
sub
iret
inc
jg
test
das
xorb
xchg
push
jmp
in
test
ror
cwtl
sub
data16
add
dec
xchg
mov
ret
xchg
mov
sbb
adc
in
jmp
into
gs
dec
out
pop
and
and
xchg
xor
std
xchg
das
sub
cmp
pextrw
cmp
mov
dec
stos
or
call
fst
fistps
add
imul
jbe
nop
subb
dec
add
js
xor
jle
jns
stc
outsl
xor
push
xor
repnz
arpl
out
mov
aad
pusha
jp
sarb
push
or
sbb
cwtl
pop
negb
daa
pop
movl
push
orb
leave
jae
inc
jns
repz
cld
xor
rcl
sub
das
xchg
popa
js
fcoms
fsub
int3
ja
outsl
pop
add
loope
mov
imul
push
push
out
xchg
out
mov
mov
testb
stos
addr16
xchg
cli
fisubs
outsb
sub
shlb
jle
in
data16
call
jp
mov
stc
lret
fcmovu
mov
cmp
sbb
inc
hlt
nop
leave
mov
pop
push
push
or
loopne
in
cmp
inc
jo
sub
cmpsb
test
push
lret
std
mov
cmp
xchg
pop
rcll
push
pop
xchg
push
pop
add
mov
or
xchg
adcb
stc
mov
push
mul
shlb
cmp
repz
sbb
xor
dec
or
inc
cld
into
movsl
xchg
cmp
mull
out
and
cmp
mov
dec
std
cwtl
imul
mov
mov
out
popa
xchg
push
std
dec
or
pushf
dec
rcrb
stos
xchg
outsb
or
test
and
sub
adc
jno
sub
ret
inc
and
fs
sbb
xchg
lahf
lods
inc
and
fildll
cmp
ds
mov
sbb
lods
xchg
jge
ds
mov
sbb
push
or
pop
dec
pusha
and
mov
insb
scas
xor
shlb
jg
cmp
mov
cmp
pop
adc
inc
aas
mov
mov
jg
adc
outsb
stos
add
lcall
fwait
bsf
jne
inc
cwtl
in
inc
add
pop
push
data16
or
fisubrl
scas
nop
and
fs
cmp
ret
mov
jnp
push
mov
jg
dec
dec
dec
call
imul
fs
mov
in
scas
int3
stos
stc
popf
add
lret
xlat
aad
je
xor
dec
jno
sbb
icebp
xorb
add
fildll
jno
iret
adc
push
jnp
push
int
or
pop
andl
fstl
xlat
mov
inc
xor
rcll
mov
mov
fsubrl
mov
mov
sub
imul
pop
sub
add
nop
hlt
addb
mov
push
pop
xchg
adc
jno
sbb
mov
mov
shlb
cmc
les
rolb
cmp
scas
xchg
push
lock
mov
cmp
mov
pop
jmp
or
fadds
mov
cmpsb
and
aad
call
fisttps
push
jge
lea
cwtl
mov
jge
pop
xchg
fists
insb
test
push
sub
dec
inc
scas
adc
push
mov
jnp
jle
dec
int
or
inc
xchg
pop
pop
add
mov
rcrb
xor
push
pop
jg
scas
popl
xchg
incb
jo
fsubrs
sbb
cmp
rcrl
daa
fucomp
or
push
fwait
xchg
sub
pop
adc
lock
push
pop
shl
imul
mov
sbb
sbb
dec
lret
fisubrs
pop
and
push
mov
cmp
in
ja
sarb
push
enter
sti
aaa
jmp
push
dec
and
imul
repz
adc
mov
cwtl
mov
repz
aaa
mov
comiss
push
arpl
add
flds
loope
sbb
out
mov
shlb
dec
gs
push
rclb
sub
arpl
sbb
jmp
adc
cmp
adc
fdivp
outsl
lock
iret
cmpsb
bound
ds
push
movsb
addl
pop
mov
int
inc
push
gs
pushf
dec
cmpsb
pop
aas
cld
idiv
push
movsl
mov
sub
or
pop
or
jp
mov
addr16
dec
lods
lret
jno
aas
or
mov
gs
sub
or
std
shl
nop
inc
and
ret
mov
sub
repnz
in
inc
decb
jae
cmp
mov
nop
mov
and
lea
cmc
xlat
xchg
inc
ret
adc
push
or
js
sti
or
xor
loopne
and
add
cmpsb
mov
leave
xor
add
les
into
and
sbb
mov
aas
pop
xchg
adcl
push
and
mov
sub
mov
fimull
jecxz
movsb
pop
lcall
mov
test
and
push
cltd
ss
jo
xor
icebp
out
pop
xor
insl
push
pop
in
test
aam
add
lock
push
cmp
jecxz
sub
cli
insb
and
loope
cli
test
int3
leave
addb
jne
mov
cltd
bswap
mov
xchg
xchg
or
xchg
jp
sub
mov
ljmp
inc
fcoml
mov
sarb
mov
adc
jne
cmp
fisubl
imul
rorl
iret
aam
out
jp
dec
and
jmp
bound
lods
xor
mov
js
cmpsl
mov
xchg
lcall
scas
in
xorb
cmpsb
daa
movsl
mov
or
mov
lret
cmp
xchg
push
and
mov
inc
jno
out
adc
ret
fidivrl
push
enter
inc
mov
lds
push
jecxz
je
outsl
sbb
or
bound
xor
outsb
cwtl
outsb
popa
leave
jne
mov
std
fbstp
inc
pop
add
gs
pop
pop
gs
cmp
mov
sahf
leave
out
out
aaa
fistpl
pop
push
jecxz
jo
mov
jo
dec
movsl
and
ds
stc
push
aad
inc
nop
dec
mov
push
xor
sbb
cltd
and
push
pop
adc
stc
inc
xadd
lea
leave
into
es
sbb
mov
push
in
push
and
push
xor
addr16
sbb
push
inc
in
xchg
cmp
int
cmp
cmp
addr16
jg
sbb
pop
xchg
mov
aas
icebp
iret
subb
xchg
mov
xor
add
cld
jnp
cltd
cmp
sub
jle
sbb
adc
mov
push
f2xm1
fistpl
lea
cwtl
sti
cmp
cmp
add
push
adc
and
inc
and
mov
inc
mov
movsl
dec
ficoml
jb
lods
jmp
xlat
js
fsubl
mov
test
fwait
mul
or
pop
ljmp
jo
std
sbb
lret
popa
popf
jns
in
fnop
fmull
sub
and
pop
sahf
lcall
jecxz
push
inc
pop
or
adc
nop
dec
iret
rcll
cli
mov
out
outsl
dec
pushf
sarl
jle
xorl
or
ja
ds
add
sub
leave
or
and
js
sbb
pop
insb
pop
imul
add
mov
idivb
dec
sbb
cmovb
adc
lcall
in
aam
gs
out
aaa
test
mov
ret
mov
cwtl
and
incl
hlt
pop
negb
inc
insb
or
out
rcll
jnp
mov
lds
insb
mov
push
cmpb
lock
pop
gs
pop
rclb
or
mov
xor
test
fnsave
std
je
pop
lods
les
repnz
add
mov
lret
out
xchg
push
sub
and
imul
xor
iret
and
mov
ljmp
addl
imul
inc
rcrb
mov
cwtl
fldcw
pop
jl
cs
inc
repnz
cli
jbe
pop
in
mov
andl
dec
out
arpl
push
arpl
in
mov
addr16
lea
out
push
adc
outsb
xor
pop
mulb
jnp
mov
cmc
sahf
aas
or
mov
cmp
rcll
je
xchg
loope
sbb
sbb
add
xchg
pop
fcoms
inc
in
mov
shll
sub
cmp
in
cmpsl
inc
adc
stos
xchg
sub
xor
push
mov
dec
dec
out
clc
out
test
adcb
or
out
addr16
popa
icebp
sub
mov
push
jmp
dec
push
cmp
sti
in
push
roll
mov
cmp
xor
stos
or
test
sub
cld
lret
sub
stos
push
in
roll
mov
lcall
in
push
orb
outsb
mov
mov
cmp
dec
push
cli
jl
jge
or
imul
mov
nop
push
dec
loop
or
hlt
jae
sbb
shrl
jge
cmp
movsl
lds
stc
jb
or
sub
aaa
in
aaa
dec
sub
dec
call
push
pop
mov
int3
mov
ficomps
and
pop
xchg
pop
into
add
sbb
mov
aam
cmpsb
jb
add
in
push
xchg
pushf
inc
mov
add
test
push
sarl
xor
sub
push
jg
mov
jae
jl
loope
sarb
mov
push
pop
scas
lea
bound
rcll
jns
inc
sbb
int
adc
xor
daa
sub
out
dec
push
in
jae
sbb
mov
adc
mov
add
movsl
call
mov
pop
push
sub
fwait
xchg
sbb
stos
inc
mov
mov
daa
mov
jbe
sub
xchg
and
enter
aaa
sbb
jb
icebp
iret
dec
hlt
insl
js
pop
sub
test
jp
lret
jl
jg
sub
stos
and
fisttpl
mov
enter
outsb
cmp
jae
and
or
lret
jb
sbb
test
jp
cs
xchg
cmc
push
arpl
xchg
into
or
push
outsl
pop
lcall
inc
aad
fwait
movsl
lret
pop
mov
pop
testb
or
loope
xor
xor
leave
adc
fwait
dec
jnp
inc
roll
xchg
rolb
jp
stos
repnz
push
and
mov
out
loopne
jecxz
lcall
in
cmp
aaa
stos
fwait
adc
idiv
out
adc
fisttpll
lret
push
or
xchg
nop
inc
iret
add
mov
and
jmp
test
mov
inc
jae
les
mov
mov
pusha
jne
jle
sub
dec
cmpsb
jnp
in
and
mov
and
scas
and
push
out
dec
push
clc
jmp
push
xchg
cmp
imull
mov
lds
cmp
daa
sbb
into
stos
xchg
out
sbb
movsl
rcrl
jo
push
mov
mov
popa
pop
mov
xchg
data16
lret
mov
test
xor
jo
sbbl
repnz
dec
repz
pop
gs
ret
icebp
mov
outsb
mov
mov
jae
bnd
out
mov
hlt
inc
lahf
mov
out
xlat
loope
inc
movsl
inc
movsb
aad
adc
mov
aam
cli
lods
push
outsb
pop
sbb
adc
or
hlt
jno
mov
icebp
das
mov
in
aas
sbbl
jno
leave
addr16
and
cmp
xchg
fld
repz
mov
or
repz
jb
dec
bound
add
add
mov
cmpsl
adc
dec
stc
addb
das
ret
mov
push
shlb
mov
xchg
sub
mov
cltd
cmp
cmp
sub
ret
cwtl
scas
jl
pcmpgtw
lahf
sub
or
mov
inc
in
in
paddw
xchg
xchg
sub
adc
orb
jo
xchg
or
test
mov
pop
insl
fcmove
inc
dec
das
inc
fsts
inc
push
lret
roll
inc
scas
sbb
filds
cmp
out
shl
lods
mov
push
xorl
cmp
into
orl
mov
inc
inc
jg
dec
idivb
out
ljmp
mov
ret
fistps
loop
mov
push
vmulsd
dec
lcall
out
out
mov
fsubl
lock
fsubrs
xor
dec
inc
fisttps
mov
sbb
xor
nop
adc
push
xchg
imul
in
lods
adc
psubb
xor
mov
xchg
decl
cli
test
push
adc
inc
aas
jno
fucomi
or
lea
ret
adc
loopne
adc
lods
out
and
fdiv
adc
push
scas
sub
pop
xchg
lods
sub
adc
lock
jb
ja
xchg
jl
xorb
leave
repnz
sbb
aad
lds
jb
loopne
push
pop
xor
mov
xchg
push
add
orl
xchg
xor
and
inc
mov
mov
xchg
pop
insb
pop
movsl
xchg
xchg
dec
cmc
test
leave
inc
pop
ja
sub
cmc
das
into
lock
dec
test
xchg
aaa
test
arpl
cmp
dec
push
inc
add
sbb
or
mulb
dec
sub
gs
cmp
pop
scas
leave
mov
xor
inc
sub
loope
lock
movsb
push
and
inc
dec
dec
sbb
jecxz
mov
btrl
add
std
ljmp
outsb
inc
cli
sahf
mov
addl
shr
lahf
fildll
testl
push
lea
in
leave
push
jnp
and
cmpsb
stos
or
sub
mov
fs
cmpsb
cmp
mov
das
pop
test
xor
mov
jno,pt
repnz
jge
inc
jmp
pop
jne
enter
xchg
push
call
cmp
ljmp
pop
mov
stos
js
daa
sti
sbb
pusha
dec
rorb
lods
mov
inc
sub
aaa
push
jp
cmp
jmp
and
movl
jle
movsb
fldcw
mov
mov
jp
lcall
jb
pop
mov
imul
stc
pop
icebp
mov
das
popa
jg
xchg
lods
leave
jecxz
or
popfw
pop
mov
aaa
mov
loope
leave
lret
and
xchg
repz
int3
loope
jle
inc
xchg
dec
cmp
inc
push
and
loope
xor
xor
sbb
aad
dec
mov
addr16
xor
pop
xchg
out
cmpsl
fisubs
pop
push
in
xlat
out
sarl
je
sbb
mov
loop
imul
xchg
daa
lea
fiadds
iret
mov
ret
mov
mov
subb
ja
outsl
frstor
enter
dec
repz
faddl
stos
leave
scas
out
xor
dec
add
mov
sub
sub
pop
dec
xor
push
int3
bound
rorl
pop
sub
stos
xchg
push
cmp
inc
add
add
es
xchg
lds
mov
ss
and
bound
cwtl
jg
mov
pop
gs
inc
bound
cmpl
cwtl
mov
pop
pop
pop
fs
cli
jns
cmp
outsb
or
adcl
push
or
scas
lods
shll
test
push
dec
mov
fwait
shr
or
and
sub
loopne
inc
int3
jge
movl
fisttpl
sub
sbbb
jo
inc
sub
iret
sub
xchg
jnp
ja
jl
mov
out
fwait
mov
add
pop
in
sbb
das
add
dec
inc
lock
sub
bnd
xchg
fwait
ljmp
and
popf
xchg
xchg
gs
loope
jg
bound
cmpsl
clc
aas
sub
inc
mov
ljmp
es
ljmp
aad
pop
outsl
jo
pop
push
xchg
mov
pop
shrl
mov
aas
inc
sub
adc
lea
mov
repnz
int
inc
or
xchg
pusha
jns
mov
movb
shll
push
out
icebp
stc
lds
jecxz
sbb
dec
sub
xor
mul
sbb
push
inc
add
les
push
mov
cmpsb
xchg
inc
push
xlat
lret
and
dec
stc
iret
add
adc
add
dec
sti
lret
pop
dec
in
mov
or
add
inc
jno
pop
and
icebp
fwait
sti
mov
es
inc
fmull
dec
sbb
jmp
mov
je
pop
push
mov
mov
cltd
pop
adc
shr
cmp
add
mov
int
cmc
imul
sub
dec
pushf
and
cmp
lret
jne
cli
jnp
scas
je
mov
xchg
lds
ja
pusha
sub
pop
ja
cli
pop
ficomps
ret
inc
call
stos
or
pop
leave
jo
sbb
aad
fbld
ds
test
pop
push
imul
mov
imul
or
addr16
add
lods
fildl
in
mov
cli
test
or
mov
mov
jge
nop
mov
jns
jge
iret
mov
mov
sarb
xor
pop
xchg
jecxz
push
in
hlt
and
xchg
pop
jns
sbb
and
or
ret
jle
imul
in
jne
xchg
xchg
mov
push
sub
xlat
test
and
sbb
stos
cwtl
test
outsl
push
xchg
aaa
sub
out
xor
sub
push
push
rcr
mov
mov
lea
movsl
dec
mov
mov
and
repz
jmp
mov
call
push
fldcw
jecxz
xchg
fsubrs
lret
push
jp
sub
and
pop
add
xlat
test
xchg
dec
cmp
test
push
aaa
push
and
mov
sahf
clc
xor
dec
rorb
sub
adc
mov
mov
je
lret
mov
ficompl
mov
mov
subb
cmp
xor
test
loop
cmp
mov
xchg
mov
push
nop
test
addr16
mov
lahf
sub
xchg
and
pop
or
in
sub
push
pop
mov
repnz
out
xorb
mov
dec
mov
push
pop
cmc
fdivrs
sbb
xor
aas
icebp
cltd
aad
fldenv
ds
int3
popa
add
pop
xor
movl
popa
fidivs
xchg
fimuls
pop
testb
fstps
fs
repz
jg
lds
imul
ja
aaa
stos
loopne
inc
cmp
in
inc
cmp
test
pop
jl
mov
xor
jle
rolb
push
lret
sub
mov
mov
addr16
adc
cltd
mov
xchg
add
xor
pop
mov
or
lahf
jmp
dec
xchg
adc
and
push
xchg
fwait
and
popl
mov
cmp
or
hlt
pushf
xor
mov
test
fs
jmp
mov
cmp
push
pop
fs
je
rolb
gs
pop
mov
lds
or
xchg
in
push
lcall
xor
push
push
outsb
and
lock
push
test
sbb
hlt
jno
or
push
jp
xor
loop
popf
icebp
sti
xchg
xor
xor
dec
iret
push
hlt
cmpsl
cld
push
push
mov
stos
pop
mov
cwtl
lods
test
dec
loop
fstpt
subl
add
xor
dec
mulb
stos
and
or
sub
jle
inc
lahf
sarb
and
sarb
das
mov
in
and
cmpsl
fs
movsb
repnz
cs
sbb
and
sub
pop
insb
mov
push
xchg
mov
jecxz
and
shrl
in
xor
push
shll
adc
lret
cmpsl
es
jb
xor
lret
in
jp
push
mov
clc
inc
jo
aam
jne
pop
sbb
psllq
ret
mov
loop
stos
jo
aas
iret
or
push
out
sub
and
stc
jbe
adc
mov
and
and
mov
cmp
jo
push
push
cmpsb
or
into
cmp
and
mov
xchg
jb
test
cmpsb
in
pusha
mov
pushf
mov
sbbb
stos
jb
std
inc
cmpsl
loop
sbb
lcall
or
mov
fcompl
aad
scas
das
imulb
and
sti
or
imul
rclb
jb
in
pop
lahf
pop
leave
cld
gs
jbe
cwtl
bound
movl
or
lahf
mov
and
sbb
jl
cmp
or
push
push
and
jmp
jge
mov
inc
mov
test
icebp
ja
push
adc
pop
jb
mov
test
and
sbb
jno
mov
jl
adc
cmp
add
scas
xchg
jg
and
cld
in
xchg
enter
push
push
sbb
cmpsb
mov
cmpsb
adc
cltd
push
jnp
sbb
push
adc
sub
pop
pusha
sub
lds
notl
test
mov
mov
sub
sub
mov
and
or
and
xor
xor
push
fldt
mov
jbe
pop
add
adc
cwtl
jae
push
ss
in
adc
lock
pop
fiadds
adc
iret
push
mov
ja
jg
shrl
icebp
jnp
insl
ds
rorl
and
cld
xlat
stos
jmp
push
nop
pusha
inc
cmc
loop
rolb
dec
aam
lahf
jl
mov
test
cwtl
add
adc
fsubs
jae
and
icebp
popa
jo
add
loope
add
loopne
mov
jb
je
jge
stos
aad
adc
xchg
ss
mov
imulb
lods
dec
aas
inc
dec
fnstcw
cs
pop
xchg
or
xchg
jb
or
adc
fcmovnbe
loope
adc
xor
mov
push
pop
push
pop
outsl
lret
jmp
cmp
push
test
loop
js
dec
sbb
subl
in
test
loopne
mov
movl
add
jle
fisttpll
xchg
icebp
or
dec
xchg
pop
orl
sub
std
into
jns
imul
mov
fnsave
push
xor
and
scas
pop
pusha
orl
mov
cld
or
cmp
cmp
sub
and
xchg
sub
out
xor
imul
xlat
dec
add
jns
lods
aaa
cmpsb
push
jmp
mov
popf
sub
lods
lock
and
pop
pop
xchg
mov
jae
and
xchg
pop
fisubrs
dec
push
pop
push
in
jb
or
xor
pusha
pusha
movl
andb
mov
int
push
ja
insl
clc
mov
std
cmp
dec
push
pusha
fstps
push
cmp
getsec
scas
and
add
mov
jno
xchg
jmp
jae
decl
in
mov
dec
or
add
loope
cmp
das
daa
stos
pcmpgtd
clc
popf
insb
enter
xchg
push
std
or
sub
lea
mov
aas
addr16
or
mov
jmp
lock
lea
add
lods
cmp
adc
rolb
ficoms
lahf
jb
xor
jnp
iret
adc
cmc
jp
push
xor
inc
int3
jg
dec
testb
inc
fldl
pop
shl
ficoms
mov
cs
jge
push
cmp
xchg
mov
inc
add
or
cwtl
dec
movb
loopne
fadd
stos
stos
daa
cmp
outsl
jg
test
pop
dec
sub
nop
sub
jnp
cmp
popa
in
mov
out
pop
and
mov
sub
xlat
cmp
fnstenv
inc
dec
pop
pop
icebp
xor
dec
mov
fwait
jne
xchg
pop
loope
aad
fsubl
push
shlb
lods
cmpsb
test
sub
test
fdivrs
test
ss
or
mov
sahf
std
test
fsubs
mov
push
sub
xor
sti
dec
pop
dec
cmp
cs
out
dec
mov
adc
iret
add
mov
xor
dec
aas
sbb
movsl
and
ficoms
jns
cmp
push
push
rcr
rcll
in
fcoml
imul
hlt
fwait
loope
or
loop
add
sub
xlat
loopne
outsl
out
lods
pop
adc
aam
xor
call
movsb
mov
lock
test
cmpsl
jns
negb
imul
jle
mov
or
rclb
in
test
xchg
or
fwait
push
sub
xchg
pop
inc
popf
xchg
dec
xchg
push
jbe
sti
add
cmp
mov
mov
xor
fnsave
mov
lock
pop
add
jbe
add
lock
imul
dec
sub
mov
jp
or
outsl
ret
rolb
cli
mov
inc
icebp
mov
mov
loope
mov
push
rorb
mov
xor
je
imul
sbb
sub
jnp
add
mov
popf
lahf
out
or
xchg
jne
pop
lahf
dec
jae
test
insb
pushf
aad
divb
sub
lret
enter
add
sub
imul
mov
lds
daa
jmp
stc
pop
dec
cmp
shrb
jne
dec
lods
rcl
add
inc
pop
mov
sbbl
add
pop
mov
lock
mov
cmpsl
jg
adc
ss
lds
mov
stos
fimuls
inc
add
inc
aaa
xor
or
imul
jnp
sbb
out
sub
mov
icebp
pop
cltd
fadd
mov
enter
inc
add
fists
mov
loope
mov
xchg
dec
sub
dec
lret
xlat
xchg
sbb
jmp
add
and
fwait
rorb
jge
test
dec
test
rcrb
fs
inc
clc
in
iret
outsb
xchg
je
outsl
or
hlt
popf
out
or
mov
popa
in
mov
aad
out
cltd
fbstp
addr16
inc
sub
or
ficompl
inc
add
pop
pop
push
inc
cmp
fidivs
loope
add
sarb
adc
sub
mov
repnz
and
lahf
mov
aaa
mov
pop
loope
es
repz
shlb
in
icebp
mov
ror
test
dec
daa
shll
sbb
inc
inc
les
out
xchg
fsts
or
gs
add
add
xor
pop
push
rcr
xchg
jno
pop
add
test
xor
cltd
popf
mov
cmp
xchg
cmp
sbb
loopne
dec
add
pusha
popa
and
and
mov
or
pop
pop
push
adc
xor
add
or
mov
movsb
test
mov
jb
sub
or
std
out
out
les
push
cld
sub
outsb
cmpsb
and
clc
xchg
arpl
mov
mov
sub
mov
jns
mov
mov
cmpsl
cs
xor
sbb
idiv
out
mov
sbb
mov
xchg
in
stos
je
rcrb
das
and
xchg
lcall
rolb
cld
mov
mov
mov
sub
adc
aam
lret
lcall
arpl
cmc
lods
or
push
sbb
xor
jns
ja
push
xchg
ljmp
push
and
cmp
test
or
lret
cmp
addb
cmp
sbb
push
xchg
mov
push
fidivs
add
xchg
fcompl
lret
jno
dec
jmp
lods
jo
es
orl
ret
cld
cs
ljmp
xor
sbb
xor
addr16
popl
int3
pop
addr16
not
insb
gs
shl
lret
ret
xchg
mov
sbbl
mov
notl
mov
dec
push
push
lea
nop
das
test
dec
jo
and
cmp
add
fs
pop
std
mov
rolb
jge
mov
repz
add
hlt
test
lods
mov
jae
xchg
mov
addr16
loopne
push
push
retw
mov
pop
adc
fildll
nop
xchg
push
cmpsb
jns
mov
mov
adc
jle
test
insb
sub
jecxz
push
xor
mov
lods
aam
enter
test
shrb
cld
fwait
xorb
std
addr16
ret
ret
inc
scas
mov
sub
sbb
ficomps
lahf
sbb
stos
mov
sahf
sbb
shlb
sbb
mov
mov
xor
negl
fldpi
lret
cs
add
ss
adc
jp
xlat
lods
cmpsl
test
and
dec
lock
add
aaa
dec
fistps
push
scas
lcall
xchg
call
xor
push
test
or
sar
mov
cmp
and
cli
xlat
inc
sub
mov
in
in
pop
ror
insl
push
mov
movsl
dec
jge
aam
add
fdiv
inc
sub
lret
out
push
mov
popa
pop
in
cmpsl
outsl
pop
call
sub
icebp
arpl
stos
pusha
movsl
arpl
inc
push
repz
js
fldcw
gs
imul
xchg
xlat
push
mov
jl
cmp
imul
es
addr16
loopne
pop
nop
icebp
sub
dec
mov
xor
cmc
and
mov
sbb
or
sub
cmp
bound
sbb
and
mull
push
push
fidivs
xor
clc
out
add
push
cmp
outsl
jl
shrl
sahf
fldt
sbb
and
pop
bt
popf
lcall
adc
nop
jne
test
pop
icebp
adc
mov
cmc
je
fildl
ds
ljmp
jmp
adc
or
aaa
repz
add
sub
or
inc
mov
and
sahf
dec
icebp
or
pop
and
inc
ss
push
xor
sbb
xor
cli
cmc
or
das
ss
pop
punpckldq
test
movsl
cli
shlb
push
out
adcb
loope
es
into
cmc
push
pop
in
imul
pop
adc
dec
inc
insl
pusha
rorb
dec
je
les
xor
sbb
or
sbb
mov
and
sub
mov
and
mov
fstpl
jmp
sbbl
outsl
hlt
xchg
adc
in
cli
mov
fisttpl
push
rorb
sbb
movsl
aas
cltd
push
fidivs
fcmovbe
insl
sbbb
int3
cli
jo
stos
lods
popf
xor
pop
and
mov
rorb
cmp
sbb
inc
mov
dec
loopne
mov
jg
jge
mov
es
cltd
mov
mov
add
add
and
mov
dec
sbb
test
insl
sbb
popf
rcr
mov
push
daa
jae
jbe
insb
jle
scas
dec
das
insl
mul
jecxz
mov
dec
sarl
test
inc
sub
dec
jae
mov
ret
movsl
mov
adc
stos
dec
mov
ds
insl
rcll
and
cmpsb
or
add
jno
out
sbb
sahf
sbb
out
push
insb
movsb
aas
cld
lods
pop
stc
xchg
jle
lea
mov
mov
aam
mov
mov
inc
add
std
mov
jp
scas
mov
fistps
scas
push
into
lods
jecxz
loope
hlt
xor
call
mov
xchg
and
mov
jae
dec
inc
aam
stos
test
sti
adc
mov
xchg
cs
leave
in
mov
jns
push
push
ljmp
das
pusha
clc
pop
inc
push
cmpsb
or
outsl
xor
mov
fwait
inc
mov
push
scas
loopne
xchg
sub
out
imul
rclb
es
repz
js
pop
and
enter
mov
ss
outsb
ds
xchg
adc
and
jae
les
mov
inc
lret
sbb
jnp
or
and
cli
pop
dec
das
inc
aaa
sbb
push
loop
add
inc
xchg
mov
pop
mov
push
hlt
lcall
xor
sub
mov
jo
add
cwtl
mov
or
dec
mov
mov
push
test
sbb
movntq
stos
orb
xor
xor
or
inc
dec
ficomps
mov
daa
sbb
outsl
cmp
mov
pop
test
call
cld
outsb
mov
hlt
sbb
je
inc
enter
out
push
and
xor
aam
test
adc
jp
scas
mov
pop
test
mov
xchg
jns
ret
mov
or
mov
xchg
fs
ljmp
and
lcall
sub
movsb
scas
notb
and
push
into
mov
cmc
icebp
fildl
and
inc
pop
or
sub
les
jno
fmul
bound
adc
icebp
and
mov
mov
loopne
shrl
xchg
outsl
add
cwtl
rol
push
inc
out
mov
mov
std
sub
loopne
cld
push
fnsave
cltd
aam
or
lret
lock
and
loope
rcll
popf
or
or
loop
shlb
jno
dec
int
pop
push
rorb
cmpsl
jl
outsl
jns
stos
push
and
add
and
test
jmp
add
jp
inc
push
mov
mov
daa
loop
xchg
sub
fs
cmc
lds
out
stos
ljmp
sub
push
adc
fidivrs
in
movsb
adc
sar
and
test
xor
sti
push
cmp
push
mov
adc
push
fldl
adc
popa
out
js
sbb
cmp
aas
jb
push
fists
lahf
scas
decl
icebp
fstpl
loop
bound
js
sbb
in
jnp
sub
aaa
fnstcw
repz
xchg
sub
roll
sahf
inc
and
push
aad
pushf
push
neg
xor
stos
push
pop
dec
mov
int
pop
inc
mov
push
pop
xchg
dec
xor
fcomps
or
cs
lahf
jp
aad
push
stos
inc
jb
test
ss
iret
fcompl
dec
les
push
int3
dec
mov
cwtl
xchg
loop
mov
xchg
jo
rolb
jnp
cmp
leave
rcll
push
test
insb
inc
jl
jle
movsl
mov
gs
pop
popf
aaa
sahf
sbb
fisubl
push
add
cmp
jo
xchg
cltd
fnstcw
mov
notb
lret
and
and
or
aam
or
dec
scas
pushf
mov
inc
push
xor
mov
pop
jle
cwtl
mov
inc
and
push
mov
stc
xor
idivb
inc
or
vcvttsd2si
mov
je
dec
scas
sbbl
push
scas
adc
repnz
push
sub
mov
inc
xchg
xchg
jae
std
and
test
jl
dec
inc
pop
push
dec
inc
insl
ss
mov
xchg
inc
xchg
mov
xor
fistps
data16
iret
aam
lock
add
jg
xor
mov
ret
repz
jecxz
pop
movsl
xchg
ja
mov
fistps
loop
and
pushf
mull
je
sti
es
outsb
jne
and
cmp
pop
adc
sarl
mov
pop
lahf
fnstsw
inc
or
mov
add
xor
insl
ret
push
fld1
fcoml
jmp
sub
insb
call
nop
or
hlt
xor
add
pop
and
mov
mov
testl
imul
cmp
mov
scas
pop
loop
push
sub
lahf
dec
adc
gs
dec
inc
addb
mov
mov
mov
movsl
and
cmp
and
jo
repz
sbb
jnp
les
sahf
jno
cmpsl
test
lods
sub
lret
sub
cmp
das
icebp
dec
xor
xchg
fstpt
imul
ret
scas
mov
ret
into
lret
movsb
and
aaa
cmp
xchg
sbb
mov
mov
xchg
cltd
clc
add
jne
xchg
mov
int
xlat
cmp
xor
stos
popa
xor
jae
je
mov
fsubrs
dec
in
mov
and
dec
cmp
lret
lods
jge
mov
xchg
and
scas
add
imul
add
fstps
sbb
cmp
adcl
pop
pop
or
mov
imul
ds
jg
stos
pop
pushf
fwait
adc
inc
xchg
mov
lods
jge
push
xorl
aam
mov
adc
ljmp
outsb
outsl
aaa
sbb
mov
and
mov
iret
fsubrs
fistps
pop
mov
iret
dec
dec
ror
mov
jae
or
js
jg
inc
mov
arpl
cmp
xor
or
test
repz
mov
adc
lret
fidivl
dec
fisubrl
cld
repz
jl
data16
mov
stos
dec
orl
in
test
lret
adc
cld
adc
mov
pop
jno
cld
shr
movsl
ds
sub
adc
ja
ljmp
pop
push
daa
adc
mov
popf
lods
push
sahf
add
out
xchg
mov
sbb
andb
xor
mov
push
fsub
xchg
pop
xchg
add
mov
dec
imul
add
data16
cmp
in
dec
aam
mov
ja
jge
out
shrl
and
dec
push
fldcw
jnp
jge
clc
mov
mov
dec
adc
in
cmp
adc
addr16
push
mov
adc
push
add
mov
in
pop
pop
add
test
in
lods
stos
popf
and
data16
fs
ret
imul
jne
fistpl
pop
jl
adc
sti
push
test
sbb
cs
push
test
or
or
lods
mov
test
push
add
jnp
sbbb
push
add
jno
mov
adc
ret
and
inc
rcll
xchg
push
int
xor
addl
push
mov
sub
js
xor
inc
cmp
pop
dec
and
add
mov
push
idivb
int3
js
shrl
pop
popf
or
adc
jne
inc
or
mov
lods
test
stc
imul
dec
jle
cwtl
pmaddwd
lods
push
xchg
repz
jmp
inc
sbb
pop
sbb
cwtl
sbb
jne
stos
jle
std
xchg
dec
mov
jo
add
lock
pop
inc
sub
dec
pusha
into
sbb
sbb
aaa
jecxz
movsw
lods
mov
fdiv
xor
mov
dec
fs
sub
push
and
test
inc
lret
jge
outsb
xor
push
out
xchg
sub
mov
xor
pop
and
sbb
call
sub
arpl
inc
xchg
or
es
scas
pop
lcall
ss
and
pop
lds
les
cmp
iret
dec
push
xchg
pop
inc
sbb
bound
jbe
or
xchg
push
pusha
push
mov
or
stc
sti
or
loopne
cmp
fsubp
xor
outsl
dec
nop
inc
add
gs
popf
xchg
gs
fwait
push
nop
xchg
scas
lea
in
in
in
std
sub
push
es
pop
cmpl
lods
cmp
insb
xchg
aam
gs
in
dec
pop
mov
and
adc
test
pusha
mov
mov
inc
iret
pop
stos
adc
int
sarl
dec
in
scas
adc
mov
push
in
mov
insl
cmp
enter
mov
aaa
testl
mov
pop
mov
or
dec
sbb
push
test
pop
test
lcall
in
gs
in
jbe
mov
or
xchg
jb
mov
lds
dec
rol
inc
xor
sbb
lock
ss
sub
lods
repnz
out
movsb
jecxz
pop
adc
adc
inc
or
aad
movsl
sbb
jp
scas
addr16
jg
fildl
insl
pop
cmpsl
popf
lea
xor
out
nop
pop
iret
push
idivb
dec
add
in
inc
cwtl
mov
dec
mov
add
mov
mov
or
popf
jbe
jnp
pop
jb
notb
xchg
inc
and
jl
test
decl
dec
pop
sbb
adc
outsb
sbb
mov
scas
addr16
mov
loop
inc
movsl
mov
popa
sbb
pop
pop
fldt
sets
test
out
lret
fnstenv
xlat
popa
mov
cld
sbb
out
outsb
xchg
mov
repz
stos
push
lcall
push
pop
lcall
xor
aaa
in
adcb
rcr
cmp
hlt
hlt
jp
jg
arpl
or
pop
dec
int
push
fistpll
push
and
and
pop
adc
push
repnz
mov
rorb
add
xchg
frstor
xor
fsubrs
stc
xor
scas
cmp
shll
push
xor
dec
mov
gs
popa
in
cmp
mov
fwait
or
dec
mov
inc
pop
jge
repnz
push
adc
push
cmc
dec
lods
xor
out
std
and
test
out
pop
xlat
icebp
mov
jbe
loopne
lret
xchg
iret
mov
imul
push
stc
das
divl
pushf
into
pop
dec
and
pop
in
pop
gs
or
push
es
stc
out
orl
dec
lods
dec
and
mov
cs
lret
fwait
push
sti
dec
in
cmp
loope
addr16
iret
xlat
ret
dec
subb
adc
push
inc
mov
jns
add
ds
push
xchg
orl
stos
jmp
sbb
xchg
in
pusha
dec
popa
loope
repnz
clc
mov
popf
mov
lds
test
dec
pushf
inc
sub
and
test
rorb
pop
or
rep
scas
ret
fstpt
pop
insb
pop
repnz
and
cmp
insl
mov
pop
mov
fwait
lock
loope
or
xchg
pop
pop
pop
cmpsb
idiv
frstor
je
mov
fcomps
fsubl
inc
jae
int
lcall
mov
fildl
aam
clc
pop
test
popl
rcl
ljmp
fsub
popf
dec
jg
pop
das
cltd
pop
outsb
repz
movsb
repnz
push
icebp
ja
iret
cmc
rcll
xor
adc
les
and
xor
dec
xor
mov
or
sbb
test
pop
or
push
sub
inc
adc
mov
inc
pop
push
lret
outsb
les
pop
insb
sub
aad
xchg
mov
ljmp
adc
sbb
pop
inc
cmpsl
outsl
mull
mov
inc
fstp
cmpsl
mov
je
popa
pushf
sti
mov
fisubrl
mov
adc
mov
sub
ss
pop
xor
push
jmp
dec
sbb
pushfw
mov
push
test
cmp
xchg
cltd
insl
xchg
test
xchg
mov
pop
paddb
call
shll
cmpb
mov
fisubrl
mov
mov
jp
push
mov
adc
pop
mov
sbb
rolb
adc
mov
jmp
data16
push
or
pop
xor
test
les
push
lea
and
and
mov
or
mov
mov
push
and
mov
adc
xchg
push
icebp
rcrl
adc
inc
pusha
inc
std
aam
or
cs
addl
cmp
adc
in
jmp
dec
cwtl
cwtl
push
pop
sahf
xor
mov
mov
jnp
jg
or
cmp
inc
jge
ret
mov
push
scas
shlb
enter
xor
cli
mov
hlt
clc
and
pushf
inc
mov
pop
xchg
mov
pop
loope
xchg
pop
stos
sub
sub
and
mov
adc
rcr
pop
sub
xor
popf
sbb
repz
nop
cltd
jg
decb
pop
lcall
sbb
dec
das
xor
insl
cs
sub
sub
sub
outsl
xchg
adc
dec
sbb
leave
test
dec
adc
xchg
pop
or
pop
cld
lock
aam
adc
arpl
movsb
and
ret
jo
and
or
push
mov
inc
ljmp
in
lods
mov
daa
jmp
loopne
outsl
xchg
test
hlt
stc
mov
ret
mov
pop
dec
lods
scas
xlat
or
pusha
dec
mov
add
stos
ret
dec
aaa
mov
in
outsl
ds
jmp
scas
add
cmp
loop
roll
cmpsb
lock
dec
ljmp
cmp
mov
into
jnp
xor
fisubl
fcoml
stos
push
shr
cltd
jp
lods
pop
jle
jecxz
xchg
cmp
xor
xor
arpl
pop
dec
xlat
mov
xchg
xor
mov
nop
mov
out
out
mov
stc
pop
outsb
jmp
insl
cltd
or
dec
int
pop
jno
sti
cs
adc
xor
imul
cwtl
repz
mov
daa
stos
xchg
add
lret
lahf
push
mov
dec
movsb
mov
inc
mov
mov
mov
test
sub
add
jo
in
push
mov
mov
sub
stc
adc
imul
popl
dec
mov
jecxz
in
aaa
mov
push
loop
cmpsl
sub
add
xchg
add
xchg
pop
xor
inc
cmp
jmp
jb
dec
sbb
cmp
sub
pop
mov
adc
ret
adc
repnz
rolb
push
cld
jl
mov
movsl
shlb
inc
int3
js
out
stos
icebp
outsb
loop
ss
fistpll
xchg
push
ret
mov
dec
scas
inc
dec
pop
das
xlat
xor
jb
movsl
in
jbe
in
enter
mov
popa
push
sbb
in
cld
out
dec
dec
aam
fwait
sub
cwtl
or
les
jp
xchg
adc
mov
notl
imul
call
mov
or
xchg
xorl
cmp
fsubl
mov
dec
popf
lretw
aam
mov
cmp
mov
ss
jmp
pop
decb
xor
test
mov
outsl
sti
mov
out
js
movsb
into
in
inc
dec
fwait
sub
mov
popf
add
ljmp
sub
out
push
test
jmp
aaa
stos
jo
fidivrs
adc
pop
pusha
ret
sbb
push
rcr
inc
lds
bound
mov
xor
addr16
jmp
mov
aas
cli
mov
and
adcb
test
movsl
ljmp
vcvttss2si
stc
adc
cmpsl
jb
into
cmpsl
imul
sub
les
enter
repz
pop
mov
and
aam
jle,pt
std
sahf
jo
inc
pop
pop
mov
in
fst
call
sbb
out
scas
cmpsb
dec
add
stos
int
mov
in
out
fwait
mov
xor
fdivl
aad
shrl
mov
jmp
mov
lcall
inc
or
inc
cmp
and
jl
mov
or
mov
in
push
sahf
sbb
mov
push
jo
das
pop
jb
stos
push
jae
int3
stos
test
loop
mov
loope
cltd
insl
mov
sub
inc
xchg
push
sbb
dec
aas
pop
shlb
push
dec
arpl
cwtl
jbe
stc
loope
popf
fnstenv
rcll
sub
stos
nop
test
cmp
jp
int
jle
jecxz
pop
test
xchg
push
push
aaa
pop
pop
les
inc
and
in
shlb
dec
iret
or
cmp
jbe
mov
mov
sub
dec
shrb
hlt
bound
mov
sbb
mov
add
cmpsl
imul
lahf
dec
or
cmpsl
push
fisttpl
call
mov
xor
sbbb
stos
jge
push
sbb
mov
jmp
xchg
and
sahf
and
arpl
push
aam
pop
shlb
arpl
movsb
dec
adc
fwait
pop
std
fisttpl
lods
pop
mov
jmp
jp
sbb
add
or
lcall
mov
bound
adc
cmp
dec
enter
adc
inc
test
stos
in
mov
dec
ret
pushf
pusha
sub
lea
mov
jnp
lods
pop
add
adc
lret
pop
pop
call
sahf
xor
mov
inc
scas
sbb
xchg
lods
pop
inc
das
mov
pop
mov
lds
mov
ret
aas
or
jo
frstor
rolb
outsb
test
rep
pop
sub
pop
and
cmp
xchg
test
stos
jle
pop
ffree
cltd
je
inc
jmp
push
mov
in
test
stos
rol
cmpsb
in
mov
and
lods
mov
enter
out
pop
aad
xchg
mov
pop
pushf
adc
add
mov
and
sbb
mov
cltd
mov
push
es
repnz
addl
int
xlat
sbb
loop
adc
aaa
add
es
mov
mov
dec
stc
or
push
mov
loopne
xor
cmp
or
cli
sbb
adc
push
dec
andl
aam
imul
pop
int3
jecxz
fiaddl
fistpl
cmp
pusha
cmp
jae
mov
shll
lret
or
push
pop
mov
sarl
enter
cmc
pop
pusha
lcall
sahf
xchg
bt
fadd
imul
shr
push
lcall
push
scas
jb
cmpsb
das
mov
mov
call
cs
outsb
jns
stos
adc
les
in
xor
pusha
ret
outsb
fwait
xlat
inc
mov
xchg
mov
push
je
addr16
or
call
sub
lods
mov
pop
outsl
mov
xorl
out
or
cmp
mov
mov
nop
loopne
testl
push
incl
or
addr16
int
testb
insb
inc
out
or
je
add
add
add
mov
and
xchg
push
cmp
insl
mov
int
adc
adc
mov
adc
lods
test
push
adc
les
xchg
jl
xchg
jl
sub
xor
and
xchg
mov
jmp
fbld
mov
jb
and
gs
push
push
sahf
add
loope
jbe
jle
xchg
lods
nop
pop
mov
sub
in
je
imul
xor
sub
fmuls
sbb
mov
dec
mov
xchg
lret
and
pop
and
cmpsl
mov
and
xchg
mov
or
imul
jbe
push
icebp
xchg
mov
adc
sbb
fdivrl
push
mov
mov
scas
mov
insl
roll
lahf
cmp
cmpsb
popa
pop
pop
cli
add
pop
sub
pop
add
pop
xor
or
ret
xor
dec
inc
les
lock
shrl
sbb
push
jmp
inc
and
lahf
sbb
ret
and
stos
outsl
add
in
jg
loopne
imull
iret
xlat
ret
inc
jno
mov
cmc
add
icebp
and
in
shl
push
lea
outsb
and
xlat
jo
jmp
cltd
sub
test
rcrl
xchg
and
aam
mov
jg
cmp
lret
push
in
shrb
sbbl
stos
xchg
movsb
inc
and
xor
pop
pop
pop
pop
movsl
mov
mov
insl
xchg
pusha
imul
inc
lds
push
cmp
mov
mov
lods
fisttpl
and
push
lea
jo
or
subb
and
ss
push
pop
gs
dec
cmpl
or
jns
std
inc
pop
fsts
xor
cmp
popf
pop
xor
ja
xchg
add
xor
outsb
add
pop
rol
xchg
sub
xor
leave
aad
mov
std
call
flds
or
xchg
inc
mov
js
lods
int
repnz
out
nop
les
push
arpl
ljmp
dec
test
xchg
pushf
bound
imul
movsb
pop
mov
insl
jno
roll
int3
jno
and
out
movsb
xchg
iret
jns
out
incl
imul
xchg
sub
jge
arpl
push
pop
shll
sbb
push
out
cld
nop
test
jnp
cmp
xchg
sub
add
int
icebp
pop
int3
ss
jbe
sbb
and
mov
shlb
xchg
cmp
ss
push
cmp
scas
mov
pop
sbb
cmp
add
enter
lahf
jg
in
out
push
insl
fs
in
pop
xchg
xchg
push
sub
and
mov
fwait
jge
ljmp
jle
cli
sahf
adc
dec
movsb
lret
iret
mov
cli
jb
add
sub
cmp
nop
mov
xchg
outsb
mov
fcomps
arpl
out
pop
out
movsl
jae
sub
adc
ror
cmp
pop
pop
xor
int
mov
ja
push
sbb
inc
cwtl
lahf
jcxz
ljmp
sbb
inc
mov
shll
mov
add
rolb
arpl
iret
ret
push
gs
dec
xchg
cmp
leave
movsl
test
inc
and
mov
push
cli
out
adc
ss
lret
enter
cltd
cltd
and
jle
jmp
mov
push
das
ja
adcl
jns
mov
inc
mov
jae
mov
cmp
sbb
js
jns
jl
jmp
push
shrb
cmpl
fsubrs
lret
or
incb
cwtl
icebp
in
cmc
mov
mov
xchg
fldt
dec
inc
sbb
dec
and
rcrb
inc
xorb
push
dec
out
test
dec
xlat
ret
sub
adc
cs
arpl
xchg
incl
mov
xchg
or
xchg
push
mov
shr
and
xlat
flds
shll
xor
lods
fisubl
pop
mov
mov
int3
mov
popa
cmc
xchg
scas
cmp
and
outsb
faddl
pop
jp
test
cltd
mov
push
arpl
ss
inc
test
or
dec
movsl
or
mov
test
cmp
test
out
std
imul
jb
loopne
inc
mov
push
sub
enter
out
arpl
sub
add
jns
and
out
jmp
int
pop
xchg
por
scas
inc
mov
jne
int3
pop
js
jp
cltd
xor
jno
add
push
sbb
out
push
rolb
dec
shl
xchg
and
fimuls
xchg
xchg
push
dec
fsubs
cld
imul
mov
push
xor
dec
mov
push
inc
push
cmp
nop
push
inc
add
in
inc
ljmp
pop
clc
jbe
and
cmc
add
push
and
adc
scas
xchg
mov
and
popa
sub
stc
xor
pusha
add
pop
test
xchg
pop
imul
lods
shrl
push
psrad
pushf
outsl
adc
inc
shlb
adc
test
xchg
and
in
jae
or
rol
xor
xor
ss
dec
pop
aad
idivl
loope
xor
push
push
insl
out
loop
movsb
jbe
sti
sub
ret
lea
test
in
loope
leave
mov
popf
push
loopne
push
ds
stc
inc
cmp
in
jae
shrl
dec
outsl
or
mov
mov
pop
adc
sbb
insl
mov
insb
shll
or
mov
lret
push
incl
mov
push
jle
adc
cmp
mov
push
sahf
jo
cmp
sbb
mov
fs
daa
dec
xchg
in
stc
test
icebp
loope
mov
dec
addr16
addb
sbb
pop
dec
inc
xchg
adc
inc
sahf
mov
or
out
aaa
addb
xor
push
lret
adc
outsb
fnstcw
push
ret
pop
loopne
ficoms
sub
in
stos
add
push
je
sti
pop
adc
dec
icebp
xchg
fistl
dec
into
lcall
dec
mov
scas
clc
pusha
inc
mov
sub
cmpsl
dec
adc
push
sarb
jmp
in
and
shll
sbb
divl
mov
or
cs
sub
out
cmp
push
rcll
int3
pop
popf
cld
adc
xor
hlt
in
fs
lcall
dec
adcb
cltd
loope
inc
loope
int
outsl
or
pop
adc
jnp
stc
clc
loop
fsub
push
pop
adc
or
jge
data16
lahf
movsb
fs
int
dec
cld
pop
pop
mov
rcl
lret
rorl
js
adc
and
sbb
or
mov
dec
inc
scas
dec
or
outsb
psubb
xchg
ljmp
mov
inc
sub
mov
adc
sbb
inc
scas
gs
ret
sbb
xchg
sub
pop
or
out
adc
movswl
fcoml
outsb
les
sbb
mov
in
mov
sub
sub
sub
adc
or
xor
xlat
imul
sbb
mov
cmp
popf
adc
stos
mov
fiadds
mov
adcl
loop
mov
das
adc
in
out
pop
xchg
ret
pop
inc
aad
and
mov
inc
inc
fsubrp
cmp
dec
inc
mov
mov
pop
xchg
jp
inc
dec
out
scas
aad
xchg
push
stc
adc
and
add
lret
xchg
jnp
in
mov
pop
js
push
rorl
sbb
xorl
nop
xor
data16
dec
psrlq
ror
adc
test
arpl
push
add
and
dec
data16
adc
cmp
jge
es
in
adc
repz
mov
aas
pop
cmp
xor
push
mov
roll
ja
in
xchg
xor
sub
lock
enter
or
dec
out
xchg
nop
loope
sbb
sub
sub
add
add
stos
mov
lret
test
stc
inc
mov
sbb
dec
fnsave
roll
xchg
cltd
aas
push
add
jmp
mov
mov
push
mull
push
push
lods
or
jno
push
mov
cmpsl
icebp
popf
mov
lds
subb
xor
mov
xor
sbb
sahf
into
lcall
bound
lret
stos
jp
sbb
mov
cmpsb
fimuls
das
inc
orl
pop
adc
xchg
jno
jne
leave
leave
cmp
cmc
xchg
enter
sub
ljmp
fcmove
inc
test
repnz
xchg
inc
and
ja
paddq
imul
xchg
mov
jmp
xchg
dec
gs
subb
xor
pushf
daa
imul
arpl
cmp
and
sbb
subl
dec
dec
mov
xchg
ret
and
sbb
push
out
add
mov
sub
repz
sbb
jb
adc
test
gs
jp
sub
mov
ds
arpl
sahf
loope
mov
jge
repnz
shl
cmp
cmp
arpl
std
or
aad
mov
push
jge
cmp
mov
or
pop
scas
pop
mov
add
push
cmp
adcb
cmp
sbb
mov
lods
mov
ja
lahf
add
adc
mov
dec
lcall
out
inc
sbb
call
and
push
dec
stos
imul
pop
mov
lds
stc
rcrb
dec
shl
add
nop
std
out
sbb
xchg
fnstenv
test
dec
adc
add
inc
dec
jge
or
decb
xor
cmp
inc
sbb
mov
adc
insl
mov
xor
jle
fwait
mov
in
movsb
xlat
pushf
dec
cmp
or
add
clc
and
fchs
int
inc
push
into
into
pop
cmp
mov
data16
push
test
ret
popf
mov
das
mov
sbb
push
cmp
lahf
gs
fcomps
adc
repnz
fwait
xchg
icebp
or
int
add
pop
mov
jl
fwait
nop
jbe
and
sub
nop
xchg
push
xlat
xlat
inc
jmp
and
cmp
lcall
adc
sbb
lcall
or
cwtl
rcrl
ja
dec
dec
fcoms
cli
inc
sbb
mov
sbb
adc
in
subl
jb
adc
loopne
mov
xchg
dec
sbb
into
jnp
sbb
sahf
push
rorl
fsts
rolb
jne
pop
int3
xchg
push
leave
and
fwait
je
push
mov
stos
mov
add
fucomi
in
dec
cmc
test
pop
lret
add
cmpsl
xchg
mov
lret
scas
mov
fisubrs
aam
push
mov
in
cs
cmpsb
ret
popa
ficompl
xor
cmp
push
pop
cmp
adc
dec
rolb
vpsubsb
push
and
aas
or
push
out
pop
sti
aas
sub
mov
lret
imul
js
mov
push
add
bound
sti
loope
sti
dec
mov
repnz
ret
movsl
movsb
es
mov
xchg
lahf
xchg
lret
push
cs
mov
in
cwtl
sub
fldenv
adc
push
dec
mov
mov
adc
shrl
adc
lds
add
sahf
nop
stos
xchg
or
xchg
jns
mov
cmp
pop
movsl
jo
adc
je
sbb
jae
sti
test
rep
inc
or
pop
xlat
adc
inc
dec
in
or
jae
lahf
mov
popf
lret
push
flds
add
rolb
loop
negb
jle
mov
je
icebp
imul
lea
or
int3
push
xchg
pop
sbb
xchg
pushf
inc
inc
int3
out
push
insl
movsl
mov
pop
mov
or
jnp
imull
loope
int
xor
push
rcrl
inc
push
pop
mov
imul
inc
aas
push
jmp
ror
outsl
mov
dec
sbb
lcall
sahf
inc
aas
xor
test
sbb
sbb
or
stos
push
setno
sub
mov
shl
sbb
rcr
dec
xlat
jbe
inc
jne
dec
test
dec
das
in
dec
lret
and
add
xchg
ret
cwtl
or
pusha
and
and
loope
mov
scas
pusha
scas
and
cltd
add
xor
lret
add
aas
push
mov
jmp
insl
mov
rorb
call
or
lods
subb
outsb
inc
jns
leave
cmpsl
push
jecxz
loopne
mov
xchg
lret
jnp
out
push
enter
dec
and
inc
and
adcb
gs
test
icebp
push
in
into
mov
pop
sti
pop
loop
jecxz
mov
mov
add
movsl
xchg
mov
nop
dec
rorl
sbb
leave
dec
push
jecxz
push
mov
jecxz
dec
mov
cmc
and
out
les
cltd
out
sbb
rorl
rcrl
shl
adc
adc
adc
jg
call
pop
jnp
inc
xchg
sbb
adc
ss
bound
cmpsl
push
push
dec
inc
xchg
aas
sbb
push
sahf
inc
adc
mov
leave
fwait
leave
add
xchg
loopne
lahf
out
mov
fs
pop
sarl
xor
push
fs
push
or
jnp
int3
mov
mov
ss
cmp
fbld
addb
mov
test
adc
sbb
stc
sti
push
stos
jns
int3
mov
dec
aas
inc
pop
add
add
and
dec
dec
xchg
lds
pop
rclb
push
int3
jbe
scas
xchg
arpl
xchg
je
sbb
add
arpl
loope
jbe
push
flds
jns
push
loope
dec
xchg
fs
es
lds
xor
stc
sub
add
addr16
insb
mov
les
push
hlt
push
in
popa
pop
xchg
adc
mov
scas
sbb
sub
insl
push
inc
pop
pop
or
inc
pop
addr16
or
xorb
mov
and
lahf
fs
imull
push
es
mov
jo
lea
inc
ret
or
sub
push
and
imul
iret
ret
xor
and
outsb
add
cltd
pusha
jge
pop
ja
scas
cmpsb
pop
cmpsl
push
sbb
loop
push
lcall
mov
lret
adc
inc
fsubrs
sti
das
daa
jo
xchg
adc
test
or
mov
xrelease
pop
add
mov
dec
add
push
adc
call
mov
mov
das
cmpb
dec
and
shrb
inc
dec
xchg
inc
push
push
push
cld
mov
cli
push
mov
mov
cmovg
push
jge
insb
ljmp
cmp
add
nop
scas
dec
inc
stc
mov
fstps
ret
and
and
inc
lcall
and
adc
inc
mov
jge
popf
xchg
push
push
inc
imul
pop
test
xlat
loop
sbb
cmp
stos
bound
bound
mov
arpl
adc
mov
mov
mov
pop
mov
fs
sti
cli
cmpb
inc
xchg
sbb
stos
fmuls
lea
adc
cltd
xor
hlt
ss
iret
in
mov
and
mov
shlb
xor
mov
or
ss
int
mov
sub
lret
hlt
fidivs
stc
ja
orb
cmp
dec
pop
mov
sub
mov
stos
sbb
mov
dec
test
stos
or
sahf
pop
in
outsb
stc
add
or
les
and
dec
ficomps
inc
inc
mov
inc
loop
push
cli
pop
xchg
jnp
ret
and
mov
dec
mulb
add
ja
shr
sub
or
mov
and
aam
add
outsl
pop
aaa
jb,pn
xchg
lock
inc
loop
sbb
adc
mov
cli
shl
push
mov
sti
sub
mov
adc
int
pop
inc
stos
jns
xor
add
inc
jne
xor
cmpsl
adc
or
ret
fistpll
dec
movl
sub
test
add
sbb
lret
paddb
scas
loope
fldt
shl
fwait
sub
call
in
add
fsts
inc
loopne
ja
ja
sahf
aas
jae
popf
push
cmp
sub
test
ret
mov
mov
lock
dec
dec
movsl
rcll
sbb
lret
jge
pop
sbb
dec
das
or
push
popf
pusha
adc
ds
dec
movsl
mov
sarb
add
mov
add
adc
cmp
sub
push
ret
pusha
sub
jge
xchg
inc
fwait
adc
rclb
push
hlt
jge
test
inc
jp
sbbl
rorl
mov
std
sbb
imul
adc
pop
aam
xchg
enter
movsl
rorb
xchg
popf
fdivrl
pop
pop
jne
mov
cmp
bound
sub
ret
nop
xchg
arpl
lods
lods
leave
xchg
in
xchg
bound
iret
cmpb
mov
arpl
mov
ficompl
cmpsl
rcrb
adc
cmp
enter
mov
inc
and
and
fcompl
dec
pop
scas
addr16
jl
mov
sbb
inc
jae
dec
inc
lds
inc
das
push
int3
dec
jmp
test
daa
inc
or
outsb
ss
mov
mov
in
pop
cmpsb
or
loopne
in
das
js
and
outsb
and
xor
pop
xor
pop
ret
pop
jp
xchg
mov
icebp
icebp
fstl
movsl
cmpsb
dec
sub
pop
adc
pushl
add
shlb
lods
cmp
fsubrp
xor
mov
inc
mov
mov
out
pop
fstpt
fmuls
les
fs
aad
sbbl
add
repz
jno
shll
sub
xor
xchg
pop
lret
lea
adc
pop
push
pop
add
and
hlt
ret
pop
mov
in
or
and
repnz
cli
xchg
mov
dec
or
or
jns
dec
and
fcmovu
fs
movsl
cwtl
cmp
add
imul
push
lcall
xchg
xchg
pop
inc
adcb
mov
nop
mov
in
insb
sbb
int3
add
adc
insl
pop
movsb
jbe
xchg
push
mov
insl
jnp
push
cld
dec
and
faddp
sbb
sti
mov
pop
jae
cmp
je
sti
cli
loopne
push
mov
mov
cmpsl
push
mov
mov
mov
inc
pop
divb
dec
mov
push
xchg
daa
les
xor
or
jl
sbb
add
push
je
inc
xchg
push
mov
mov
mov
or
pop
hlt
mov
movsb
push
roll
popf
lahf
jecxz
out
sub
ret
mov
push
repz
push
in
sub
cmp
mov
dec
int3
arpl
stc
push
push
jecxz
dec
mov
and
sub
and
or
mov
imul
mov
pop
push
dec
out
push
std
sub
addr16
sbb
mov
outsl
and
das
and
cmp
xchg
pop
jnp
cmp
jmp
or
inc
push
daa
cmp
iret
push
push
cmp
fdivrs
gs
pop
jg
adc
lods
and
xchg
sub
jp
xor
jle
push
fstl
call
push
iret
mov
mov
xor
fldcw
testl
mov
add
jbe
push
imul
cmp
cmp
xchg
js
mov
mov
push
sub
pop
sub
dec
fstpt
arpl
stc
cld
push
mov
jmp
loopne
push
cwtl
ret
jb
lds
cmpsb
mov
mov
data16
mov
call
mov
notl
inc
ret
ds
sub
fnsave
mov
and
xor
pop
dec
aad
mov
rcrl
dec
pop
fistl
loopne
ljmp
lcall
out
cmp
push
out
cmp
sub
cmp
sub
mov
pop
hlt
test
or
mov
mov
mov
arpl
loope
aad
out
cs
shlb
or
or
mov
popf
stc
and
xchg
sbb
inc
fsubrp
xchg
gs
roll
icebp
faddl
mov
xchg
sbb
popa
xchg
push
pop
fsubp
xchg
sub
stos
cmpsl
lock
xor
repnz
rcrl
lds
adc
xchg
cld
data16
popf
push
rolb
sbb
lods
lods
jle
js
test
scas
cld
pop
mov
popf
add
inc
mov
pop
insl
aad
jae
pop
or
add
in
jl
push
pop
icebp
push
ret
mov
inc
mov
insl
scas
mov
rcrb
jae
popa
inc
push
clc
push
pop
dec
andb
jbe
xchg
or
lret
iret
ljmp
add
adc
pop
mov
out
xchg
sub
sub
call
or
je
in
mov
aam
rsm
cmpsb
pop
ror
inc
cmp
dec
fwait
mov
cmovnp
ljmp
lahf
and
dec
mov
xchg
mov
ss
and
xchg
mov
sbb
mov
and
sub
add
mov
dec
push
xor
mov
inc
ss
cld
shlb
loope
pushf
insl
std
fildll
hlt
cwtl
test
ljmp
cli
int
sub
adc
xlat
jne
inc
push
xchg
out
lds
mov
inc
sbb
mov
pushf
mov
xor
shrb
mov
test
mov
jecxz
test
iret
ret
jmp
imul
in
ror
shrb
xorl
mov
push
adc
xchg
mov
loop
xchg
xlat
or
dec
mov
lea
inc
inc
sbb
stc
adc
adcl
insl
sub
imul
pushf
or
out
je
adc
dec
je
xor
push
push
xor
loope
clc
ja
das
fs
cmpsl
sub
pop
and
mov
lock
or
test
outsb
out
and
xor
push
imul
inc
ficomps
nop
call
dec
adc
pop
idiv
jg
clc
adc
clc
mulb
jno
out
push
mov
or
pop
loop
add
dec
xor
mov
jo
mov
leave
test
jecxz
sub
sbb
mov
shr
enter
ret
and
dec
sahf
loope
jb
test
mov
sub
inc
mov
sub
inc
pop
int3
adc
scas
sti
stos
inc
inc
push
jecxz
pop
fstpl
imul
cs
pop
jo
mov
int
outsl
movsl
aas
scas
jle
push
divb
iret
fimuls
xchg
mov
dec
or
clc
and
imul
inc
fs
icebp
dec
mov
mov
sub
or
ja
adc
jae
idivb
shll
mov
push
pop
aaa
jmp
aas
rclb
cmp
sub
or
cld
popf
adc
insb
in
js
scas
sbbl
add
jbe
xchg
cmp
mov
or
dec
push
stos
push
jge
cmpsb
adcl
mov
and
test
neg
inc
arpl
ljmp
xchg
fidivl
les
mov
push
das
jle
mov
frstor
mov
cli
scas
inc
aaa
icebp
insb
movb
loopne
adc
repz
cmp
test
mov
loope
push
cmp
or
pop
cmp
adc
test
repz
sbb
movsl
jbe
pop
movsl
dec
jno
fisubrs
dec
or
call
add
ljmp
data16
sub
imul
scas
cmp
add
sbb
mov
inc
lahf
andb
aad
outsl
inc
push
xor
lcall
das
sbb
sub
mov
fisubs
sub
test
jae
movsl
nop
sbb
cli
sub
outsl
adc
rcrb
adc
ret
out
add
mov
mov
out
sub
xchg
and
jb
insl
int3
push
inc
and
hlt
rolb
mov
xchg
hlt
cmp
sbb
out
fildl
std
add
lret
lahf
push
je
adc
inc
jge
iret
add
cltd
push
add
or
jo
dec
mov
mov
pop
or
fcoms
leave
push
jno
adc
and
lock
ret
call
jns
xchg
dec
imul
stos
out
xor
mov
mov
cwtl
js
cmc
xchg
cltd
jg
mov
aam
xlat
cli
mov
xchg
mov
neg
lods
inc
pushf
repnz
mov
dec
out
add
and
push
jp
mov
fs
push
test
pop
xchg
loope
and
xor
and
mov
adc
jl
sub
xchg
scas
adc
daa
xor
jbe
lcall
add
leave
aaa
sbb
mov
inc
bound
adc
in
sub
ja
lea
push
add
mov
flds
in
jae
outsb
lcall
out
and
cmp
mov
jnp
xlat
or
not
dec
sarl
data16
jmp
push
mov
sub
je
outsl
jb
mov
out
scas
push
mov
xchg
loope
pop
rclb
pop
inc
fsubl
pusha
aaa
add
mov
fucom
cmpsl
push
adc
xor
loopne
rcrb
mov
add
imull
inc
aad
xlat
fwait
es
xor
add
in
imul
pop
xor
fsts
cmp
loop,pt
adc
and
jp
push
mov
mov
jecxz
cltd
adc
fsubl
or
cld
dec
cmp
es
sub
cmp
adc
stc
addl
xchg
cmp
xchg
rcrl
jbe
sub
dec
lea
mov
data16
jae
clc
cli
xchg
ficoml
cmpsl
repz
adc
aaa
hlt
je
in
hlt
cmp
repz
loope
inc
sahf
mov
lock
xchg
addb
and
cmp
hlt
mov
sahf
cmpsb
push
mov
inc
bound
sti
jmp
push
adc
pop
jle
mov
gs
in
adcb
jmp
cmp
and
aaa
lea
test
js
mov
popf
push
adcb
leave
fcmovnbe
jae
sbb
fidivl
shrb
jo
fildll
jno
inc
fwait
add
pop
out
lea
xchg
cmpsl
loop
adc
clc
aad
mov
lods
ret
dec
pop
iret
dec
jno
jbe
in
aad
scas
aas
adc
cli
adc
mov
push
adcb
imul
adcl
dec
rcll
mulb
in
pop
movsb
lods
xor
mov
sub
jns
outsb
adc
push
xchg
pusha
xor
sub
cmp
movsb
std
mov
aad
fiaddl
mov
mov
sbb
jmp
mov
pop
test
pop
hlt
sbb
jl
or
pop
hlt
mov
cmp
leave
popf
ja
push
je
js
mov
shll
push
or
or
mov
cmp
or
arpl
or
icebp
jl
mov
cld
or
jnp
stos
scas
mov
mov
das
divb
pop
loop
in
gs
imul
xlat
cmpsl
jl
cmp
inc
das
or
fwait
leave
lret
pop
sbb
push
loop
cmp
jae
lcall
nop
stos
fidivrs
mov
push
inc
xor
je
loop
kmovq
test
fwait
scas
or
cs
das
mov
push
aad
jae
cli
popa
leave
dec
repnz
pushf
sbb
stos
adc
imul
mov
sbb
push
xor
mov
mov
pop
test
fldcw
js
dec
jns
push
adc
push
and
pop
inc
sbb
cmc
vsubpd
dec
mov
jge
cmp
ret
lret
cwtl
sbb
pop
dec
mov
jne
sub
popa
sbb
and
cmp
mov
dec
das
add
mov
testl
pop
stos
daa
push
int3
push
pop
cli
test
sbb
loope
outsl
or
repz
sti
bnd
lahf
push
ja
andb
nop
cwtl
inc
adc
fidivs
mov
pusha
insl
cwtl
outsl
ss
insl
mov
ffree
adc
movsb
or
out
adc
jns
xor
test
std
mov
adc
iret
dec
mov
push
inc
sub
aad
adc
or
jne
dec
mov
cltd
or
or
cmp
xchg
pop
cmp
or
cmp
insb
push
and
jg
adc
je,pt
cld
into
mov
jns
dec
and
fisubrl
mov
push
stos
in
sarl
mov
mov
jecxz
sub
cs
jecxz
xchg
fstl
out
or
outsb
fildll
lret
push
push
stos
cli
cld
les
andb
sti
adc
aam
aaa
pop
pop
lahf
data16
cs
lea
pusha
lcall
xchg
negl
jmp
add
lods
adc
fnstenv
mov
outsb
imul
add
push
scas
cmp
lret
mov
enter
mov
xchg
daa
lahf
std
cld
xchg
push
in
test
lea
in
inc
inc
ret
data16
jno
xchg
jns
popa
fwait
xchg
sahf
push
inc
inc
outsl
loopne
sbb
xor
icebp
je
mov
arpl
negb
in
adc
fiadds
push
out
mov
jl
js
xor
andb
mov
jl
dec
sub
sub
jmp
mov
stos
cmp
mov
jg
call
mov
and
inc
arpl
pop
xchg
in
fistps
inc
hlt
pop
inc
outsl
stos
gs
lds
rcr
ds
and
mov
mov
std
test
cld
fs
scas
test
pop
xchg
pop
xor
jle
pop
xchg
cli
shrl
imul
mov
cmp
icebp
lahf
icebp
repnz
add
packssdw
popf
cmp
movb
push
xchg
add
sbb
pop
es
or
mov
or
aaa
push
mov
mov
sti
xor
jge
call
fs
xor
add
lahf
test
cwtl
and
cltd
push
jns
mov
or
cs
and
lret
xchg
sbb
int3
adc
push
stc
mov
xchg
adcl
leave
xchg
jl
xchg
cs
xlat
int
icebp
scas
das
xchg
orl
idivl
pop
lea
ss
ja
adc
mov
repz
out
dec
xchg
bndstx
in
sbb
addr16
addl
test
inc
aam
mov
sbb
jmp
ja
xor
jmp
out
mov
test
jne
jae
jp
cmp
cmpb
rorl
sub
cmp
scas
dec
enter
add
sbb
inc
out
xor
cli
dec
mov
sub
xor
lods
lds
test
sub
mov
xor
jg
xor
jecxz
cmpsl
pop
test
mov
mov
adc
push
sbb
lea
sbb
mov
popf
call
mov
pop
sahf
lret
int
add
popf
mov
pop
jmp
or
icebp
sub
sbb
test
push
add
sbb
jmp
xchg
xchg
pushl
ret
dec
pushf
add
pop
sahf
cs
bound
pop
rorb
add
sbb
insl
sub
fs
aas
cmc
fsub
fld
cmp
jb
xchg
dec
cs
fstpt
inc
call
cmp
add
mov
pop
je
sbb
mov
mov
mov
xor
stos
data16
cmp
push
jg
push
jmp
addr16
adc
ljmp
push
mov
subb
add
xor
xchg
cmp
cmp
push
sub
pushf
jns
leave
inc
es
pop
xchg
mov
xchg
out
sbbl
lock
jb
adc
add
and
sbb
cwtl
test
shll
aaa
in
loop
rol
pop
cltd
xor
mov
lds
jbe
leave
cmp
pushf
lahf
mov
and
jecxz
xchg
in
jmp
test
outsl
lcall
xchg
dec
imul
adc
addl
in
jge
xchg
ja
push
out
jno
imul
das
popa
test
mov
daa
pop
in
ret
or
jns
add
jno
cs
js
jb
decb
xchg
lock
adc
sbb
sub
ret
add
sub
push
add
mov
add
insb
jecxz
out
or
mov
ja
mov
pop
inc
iret
inc
dec
iret
ret
sbb
and
in
loop
mov
cmp
cmp
movsb
int3
mov
popa
sub
mov
bound
mov
dec
pop
cli
adc
lock
adc
adc
enter
mov
jl
xchg
mov
pop
rcrl
outsl
orl
clc
xchg
fsubl
clc
mov
mov
nop
data16
jns
xor
fisubrl
jmp
push
jb
jbe
cmpsl
faddp
clc
jl
je
out
sub
lahf
arpl
xchg
cmpsl
pop
inc
cmp
insb
call
or
rcrl
ljmp
fwait
movsb
shll
test
or
or
adc
push
dec
nop
imul
cmpsl
in
xor
jl
ror
das
jne
ret
aam
test
mov
aad
push
xchg
test
scas
lea
ja
cs
inc
cs
mov
cmc
loop
stc
pop
andl
lahf
aad
and
call
jno
mov
cmp
fnstsw
stos
lret
sbb
jle
or
and
jno
clc
add
mov
js
or
ljmp
jle
out
adc
ds
mov
push
xchg
outsl
mov
arpl
mov
mov
xchg
lea
ds
jne
inc
mov
push
dec
scas
xchg
pop
or
pop
out
sub
divb
sbb
or
loop
movsb
push
add
lock
subb
mov
in
xor
fsubr
into
loop
jns
pop
xchg
out
push
add
jno
movsl
cmc
mov
loope
jo
mov
shrl
sbb
in
pop
pop
adc
mov
jmp
mov
ret
cmp
pop
jae
fisttpl
sub
or
mov
push
cmp
test
jae
jl
insl
gs
and
xor
pop
inc
inc
cmp
std
div
insl
dec
test
leave
push
push
and
dec
bound
mov
enter
loope
pop
pushf
testl
ljmp
test
fsub
mull
cwtl
out
add
enter
ljmp
inc
xchg
cmp
sti
in
jmp
adc
pop
push
cmc
pop
jae
xchg
cwtl
clc
je
std
xor
in
inc
inc
cmp
mov
jmp
cmp
pop
sub
adc
lea
movsl
mov
dec
leave
push
jmp
jle
fdivrs
sbb
lret
xor
pop
jae
aam
mov
jno
and
repz
mov
inc
out
mov
cmp
dec
cmp
cwtl
pushf
xchg
stos
mov
fsubl
cwtl
adc
cmp
pushf
rcll
xchg
test
cwtl
ret
adc
in
insb
ret
and
pushf
pop
mov
fwait
add
cmpsl
mov
sub
cmp
mov
xchg
sub
inc
lock
dec
dec
pop
insb
cmp
pop
clc
in
inc
push
cmp
cwtl
or
daa
iret
mov
sub
.byte
sbb
add
inc
daa
dec
xlat
bswap
je
loope
js
arpl
push
pop
pop
and
in
mov
mov
mov
mov
dec
or
mov
jle
fstpl
iret
jg
stos
lods
push
lret
jge
pushf
inc
in
pop
iret
pusha
mov
incl
js
aam
stos
mov
scas
fwait
add
sbb
dec
cmp
fs
lcall
push
popf
jo
add
push
fistl
je
or
xchg
aam
fcompl
jle
mov
dec
push
movsb
jecxz
out
pop
push
xor
xchg
ficoml
push
sub
add
cmp
into
cltd
loop
fisubrs
lret
out
xor
and
cwtl
adc
cmp
add
es
push
leave
arpl
jae
cs
jecxz
add
mov
loopne
mov
push
jne
xchg
out
nop
aaa
dec
loope
cmpsb
stc
dec
mov
cli
imul
xor
cwtl
test
int
mov
sub
push
jo
lods
adc
xchg
mov
adc
mov
mul
push
lahf
ss
add
xor
and
pushf
mov
lea
in
out
mov
and
in
jg
mov
fdiv
arpl
lahf
das
jo
mov
ret
sub
sub
xchg
std
sbb
mov
xlat
js
lds
mov
in
outsl
movsl
in
inc
pop
outsb
cmpsb
ss
ja
loop
roll
mov
mov
popf
fwait
push
xchg
inc
std
add
sbbl
pushf
adc
pop
cmp
scas
cwtl
icebp
lfs
js
jno
js
dec
scas
bound
push
mov
xchg
int
out
inc
test
lods
in
popl
fsubl
jae
xchg
xchg
sbb
repnz
das
ja
into
dec
mov
daa
mov
mov
xchg
in
fcmovbe
push
rcrl
xchg
push
cli
repnz
cmp
fsubrs
aas
ret
movsb
shlb
fldenv
inc
xchg
mov
aas
outsl
ffree
adc
xchg
setg
mov
cmpsl
dec
jg
movsb
xor
inc
cmp
rclb
mov
sub
jge
and
inc
test
lds
xchg
divb
push
in
add
notb
or
insl
hlt
xchg
data16
xor
sarb
inc
insb
dec
scas
pop
push
cmc
fimull
stos
jl
or
mov
rorb
mov
or
mov
call
fsts
mov
push
int
add
pop
call
or
mov
sbb
insl
fnstsw
mov
mov
fdivrs
cmp
and
inc
insl
lds
out
pop
lcall
int
je
inc
mov
or
xorb
and
les
ja
adc
lret
pop
in
testl
mov
sbb
fidivl
mov
aaa
xchg
xor
pushf
addr16
leave
mov
popa
adc
or
ret
addl
sahf
sbb
lods
lods
xlat
movsl
lock
jmp
mov
mov
lret
ds
pop
and
fadds
mov
inc
or
xchg
push
mov
insl
adc
mov
icebp
xchg
and
ret
cli
mov
push
sti
mov
jge
adc
lret
mov
stos
sbb
mov
js
dec
dec
mov
jno
addr16
add
stos
scas
mov
repnz
hlt
jne
xor
or
test
dec
pop
add
movsb
xchg
outsb
subb
dec
and
ja
pop
pop
add
setno
clc
mov
test
mov
jnp
pop
cld
fidivl
pop
ud1
inc
test
mov
lods
mov
icebp
enter
cmpsl
mov
cmp
inc
or
out
rol
push
jmp
js
xlat
in
push
push
gs
pop
add
push
jae
scas
sbbb
xchg
lea
insb
sub
ret
adc
leave
cmp
inc
push
jmp
movsb
xor
movsb
adc
mov
rcr
mov
push
mov
mov
jmp
adc
into
mov
imul
sbb
mov
dec
int
xor
push
push
jae
mov
roll
jbe
or
inc
lret
jno
add
insb
mov
scas
aad
push
and
ffree
pop
dec
jmp
add
mov
pop
mov
push
push
cmp
ljmp
mulb
fsubrs
mov
lods
bound
push
pop
sub
and
in
outsb
or
ret
xor
aam
es
orb
add
jnp
repz
push
add
xor
int
mov
test
xor
dec
pop
pop
jecxz
in
inc
fisubrs
xor
push
or
cwtl
xchg
int
and
repz
cmpsb
hlt
pop
sbb
pop
and
sbb
dec
fwait
loopne
rcll
cmp
and
mov
xchg
jnp
in
ficoms
mov
jecxz
mov
movsb
jo
stos
shr
xor
jg
cmp
xchg
xor
int3
mov
test
xor
outsl
cmp
sub
mov
es
mov
add
shlb
add
jecxz
add
test
and
add
push
fistl
sbb
test
sub
mov
adc
lea
jne
lods
xor
ds
push
cmp
and
mov
repz
adc
push
mov
jne
dec
in
dec
aaa
ljmp
leave
fwait
repnz
js
mov
stc
xor
sahf
cmpsl
sbb
movsw
jae
sbb
jns
pop
mov
adc
jp
lret
mov
movsl
push
imul
in
lods
shlb
or
js
cs
stos
mov
pusha
ds
jnp
jl
dec
sub
lods
push
mov
jp
jmp
lret
lods
addr16
pop
mov
lods
gs
lods
std
js
sbb
jne
sbb
out
mov
shr
in
jecxz
or
jge
mov
dec
clc
mov
lods
sub
addr16
cmp
mov
int
cli
out
out
push
xlat
iret
icebp
jge
jns
jmp
jg
cmp
adc
daa
fs
roll
mov
rcl
cmp
sbb
push
test
or
xor
or
or
mov
jg
jle
xchg
addr16
pop
xchg
lds
mov
lret
pop
dec
jae
test
test
testb
ror
movsl
lods
repz
into
dec
ss
inc
and
cmc
inc
add
pop
or
or
and
dec
imulb
add
mov
lea
xchg
mov
jns
xchg
cmp
pop
dec
daa
dec
jmp
sub
clc
gs
out
enter
fsubrl
jg
xchg
outsb
pop
idivl
jle
inc
out
push
xchg
cmpsl
scas
and
mov
add
popa
das
or
xchg
jp
and
push
jmp
xor
jle
icebp
sbb
clc
fwait
cwtl
add
in
push
lcall
mov
and
xor
aaa
cmp
xchg
fbld
and
sbb
inc
or
movsb
sbb
sub
sub
sarb
movsl
and
jl
adc
shl
ret
dec
or
data16
cmp
xchg
xchg
pop
mov
and
sub
lahf
adc
scas
sub
std
lcall
lcall
lods
push
loopne
dec
and
fbstp
ret
sbb
cli
jnp
in
repz
mov
adc
mov
nop
pop
xchg
js
mov
xchg
insl
insb
rolb
and
mov
dec
repz
insb
out
sbb
jo
push
mov
sub
insl
sbb
imul
enter
addr16
outsl
out
imul
mov
ja
out
xchg
xor
adc
pop
sbb
out
shrb
add
mov
jbe
call
dec
in
adc
arpl
popa
jl
sub
adc
enter
data16
imul
es
adc
hlt
mov
sahf
mov
pop
dec
xor
adc
loope
pop
xchg
ret
xor
xor
cmp
clc
mov
out
xchg
inc
adc
bound
addb
mov
test
or
mov
cltd
cmpsb
jl
and
pop
push
shrl
pop
mov
adc
adc
jp
inc
mov
sub
rolb
ds
or
pop
mov
test
sarl
addr16
inc
adc
xor
fistpl
cmp
test
cld
loop
mov
aam
data16
out
xchg
test
sub
adc
mov
jns
mov
xor
andl
rcl
sbb
inc
sbb
jge
push
movsb
add
or
pop
lret
jae
mov
dec
mov
mov
and
in
add
dec
inc
rcrl
xlat
mov
jo,pn
sti
jb
push
cmc
sub
xor
test
pop
in
cmp
les
call
mov
incb
mov
data16
loop
push
pop
push
out
xlat
test
scas
hlt
pushf
push
test
add
mov
int3
int
scas
xor
pop
push
xchg
push
insb
jne
add
popa
dec
dec
or
jmp
push
into
outsl
pop
gs
cmp
adc
push
cld
pop
xor
dec
push
addr16
negl
fdivp
lods
push
ficoml
pop
faddl
sub
loopne
mov
jg
pushf
dec
sbb
aad
cmpl
dec
adc
cmp
repnz
arpl
loop
aam
outsb
in
add
push
push
mov
mov
cmp
sbb
sbb
lret
cmc
pop
pop
push
xchg
je
cmp
outsb
sub
lods
nop
dec
inc
pop
sbb
js
dec
pop
ret
incb
es
test
stos
xor
xchg
mov
push
xorb
loopne
sbb
outsb
addb
sbb
mov
mov
mov
in
scas
or
test
outsb
xchg
mov
and
nop
sahf
movsb
jns
ss
push
aas
jne
lods
mov
dec
ror
add
add
adc
cwtl
pop
or
xor
ret
jo
sub
xor
mov
pop
dec
stos
inc
test
add
aad
jge
imul
or
xorl
mov
jne
idivb
fcompl
mov
dec
xor
fsts
cmp
mov
das
or
add
add
pop
sbb
jle
jbe
dec
xchg
sub
scas
into
clc
mov
test
and
xlat
aad
lahf
inc
mov
dec
call
pop
stc
dec
pop
notl
faddl
iret
movsb
push
adc
mov
xchg
ss
loope
sbbl
loope
xor
mov
sub
push
aas
jo
mov
xor
cld
mov
dec
mov
stos
mov
add
and
lret
sbb
ffree
xchg
dec
ret
pop
add
jno
xchg
out
addb
xchg
add
mov
repnz
adc
pop
outsl
inc
pop
jg
mov
push
ja
mov
mov
stc
push
decl
dec
iret
int3
or
ret
xchg
push
jle
call
xchg
repnz
xor
fimull
jmp
sbb
sarl
mov
mov
xchg
jl
mov
bound
cltd
andb
movsl
xchg
out
scas
xor
inc
jmp
dec
popf
sub
repnz
cld
xchg
scas
loop
out
xchg
mov
sti
lret
push
mov
lods
movsl
lea
jp
lea
test
mov
xchg
outsb
mov
lret
call
mov
push
pop
stos
jbe
stos
push
adc
push
rolb
inc
adc
sbb
jecxz
fadds
addr16
push
pushf
cmc
adc
data16
push
mov
inc
xchg
add
cwtl
sub
inc
fmuls
arpl
push
jae,pt
jmp
call
lea
adc
adc
out
mov
insl
mov
xchg
shll
loop
mov
sahf
xor
mov
mov
orb
push
hlt
xchg
lods
daa
xchg
push
repz
loopne
or
sub
cmp
sub
lods
pop
adc
adc
xchg
subb
test
inc
dec
inc
test
fdivs
xchg
sarb
hlt
jmp
jge
adc
pop
lods
add
jb
adc
cmp
and
fadds
push
lret
sarl
ljmp
adc
jecxz
scas
sub
push
mov
je
or
mov
sti
int
xchg
and
pop
xor
sahf
push
scas
lea
xchg
cwtl
clc
push
push
pcmpgtd
fisubrs
xor
push
out
dec
addr16
jnp
pop
adc
repz
mov
outsb
adc
xchg
notb
lods
fs
mov
movl
mov
daa
shll
xor
lea
xor
push
lahf
enter
or
fidivrl
jns
lret
stc
movsb
mov
fdivrl
mov
add
pop
fwait
je
shrb
repnz
fcoms
push
or
mov
mov
inc
or
lahf
inc
cltd
loope
sbb
call
push
cmpl
cmc
insl
iret
testb
cmp
inc
inc
sbb
icebp
insl
addr16
filds
sbb
rolb
mov
push
ss
fsts
es
pop
data16
lahf
ljmp
in
ljmp
insl
add
or
out
movsl
enter
push
cli
pop
push
jne
gs
insl
push
xchg
pop
xor
jmp
bound
mov
sub
repnz
cmp
ret
fldenv
into
inc
and
and
in
inc
jle
mov
xor
and
dec
adc
inc
mov
roll
sti
jp
mov
movsl
mov
adc
adc
pop
mov
sbb
sbb
jne
sub
cmp
icebp
push
shlb
xchg
sub
out
cmpsb
adc
leave
push
icebp
scas
cmp
and
outsl
xor
in
mov
into
push
add
inc
mov
pop
std
stc
in
je
loopnew
adc
mov
insb
ret
dec
xchg
jbe
enter
mov
dec
xor
fs
iret
jl
xor
lods
dec
out
or
out
decl
daa
push
ficoml
mov
add
mov
repnz
mov
ret
pusha
jmp
or
jae
dec
mov
roll
mov
xor
inc
das
arpl
dec
mov
ljmp
push
mov
sbb
adc
popa
daa
rcrl
call
and
push
outsl
rcrb
fidivs
mov
jge
or
mov
and
enter
outsl
inc
arpl
mov
testb
insb
fcmovnbe
inc
mov
mov
mov
out
imul
mov
sub
lds
mov
mov
add
mov
inc
lret
mov
repnz
add
outsb
pop
popf
cmp
add
insb
aad
in
pop
pusha
int
push
fcoms
mov
fnstenv
pop
imul
mov
cmp
mov
mov
test
loope
imul
clc
in
push
pop
jbe
cmp
insl
aad
hlt
inc
push
andb
inc
jns
les
sub
faddl
in
mov
in
xchg
jg
mov
aas
roll
mov
inc
cld
and
popa
std
stos
xchg
mov
test
mov
mov
xor
rcl
jmp
cmp
aam
das
inc
sarb
jmp
pusha
xor
jns
add
push
jp
sbb
movsb
daa
sub
rcrl
add
int3
rcrb
outsb
and
mov
mov
rorb
pusha
stc
orl
ds
js
sub
xchg
add
rol
mov
jns
add
xchg
sbb
ja
fsubs
jne
and
stc
push
mov
outsl
cmp
jg
push
jmp
dec
inc
fsubrs
pop
pop
and
jo
pop
jmp
out
inc
stos
ljmp
add
aad
jp
mov
push
sub
pop
dec
push
shl
add
pop
js
ss
les
lahf
adc
pusha
xor
and
fcomps
mov
jae
adc
lret
lods
test
cmpsl
out
aas
int
and
pop
test
dec
stos
stos
das
in
pop
mov
and
cmp
cmp
cmp
test
ljmp
push
fadds
cwtl
popf
test
stos
cmp
aad
mov
add
xor
cmp
mov
cmpsb
repz
pslld
jle
cmp
cld
out
pop
push
js
fstpl
xchg
sarb
das
jmp
stc
fmul
xorb
sbb
push
mov
push
insl
xor
or
test
push
dec
mov
fmull
pop
in
js
pushf
lahf
in
daa
aaa
aad
dec
mov
aad
add
aaa
mov
cli
xor
arpl
ljmp
sub
bound
shlb
add
mov
fisubl
les
insl
inc
ss
dec
and
xor
dec
pop
lock
aaa
add
test
popa
add
enter
std
sbb
gs
and
idiv
inc
pop
bound
or
into
adc
cmp
mov
push
cmp
call
outsl
sub
mov
lock
add
mov
cmp
xchg
lret
mov
jle
xrelease
sti
shl
jb
int
adc
imul
in
dec
test
fmull
and
xor
sub
test
sub
mov
sub
dec
shrl
mov
or
jmp
mov
in
cmp
hlt
arpl
jmp
mov
xchg
jmp
mov
and
add
cs
movsl
jno
mov
adcl
idivl
dec
arpl
loope
shr
or
push
lods
and
je
fists
sub
xchg
add
lret
testb
lea
int3
xlat
pop
call
int3
dec
xchg
flds
enter
mov
rorl
xor
or
push
dec
jnp
dec
cld
in
and
daa
mov
enter
dec
mov
sbb
sbb
jmp
lods
sub
das
cmp
fimull
out
sub
outsl
sub
dec
pop
cmp
nop
adc
and
mov
mov
mov
sbb
sbb
jle
mov
xchg
push
into
inc
cmp
in
mov
jmp
push
test
add
mov
fdivrl
jmp
mov
cs
xor
jns
jmp
inc
std
hlt
out
mov
and
pusha
mov
add
inc
or
sahf
mov
push
bt
jmp
pop
mov
and
popa
xchg
scas
je
js
aad
ja
pusha
xchg
add
cmp
lcall
adcb
pop
hlt
inc
movsl
enter
ret
sub
add
in
mov
aam
jecxz
popf
pop
fcmovnbe
xor
pop
mov
cmp
sarl
mov
pop
inc
bound
inc
in
sub
popa
scas
inc
scas
js
loop
test
xor
xchg
xchg
and
cmp
or
mov
dec
aas
shrl
sbb
xlat
mov
popa
fwait
sbb
loopne
call
pop
xor
sbb
scas
mov
jp
push
popf
adc
mov
push
aas
inc
shll
cltd
cli
xchg
popf
sub
mov
jmp
xchg
pop
cld
pop
jns
mov
arpl
outsb
lahf
sbb
mov
xchg
and
lcall
sahf
jg
fisubs
scas
testb
das
sbb
daa
jle
ja
xchg
roll
testl
in
push
loope
cmp
push
and
pop
repnz
dec
scas
fsubrs
inc
or
mov
push
movsb
lods
fnstsw
aas
insb
scas
xchg
gs
test
jo
pushf
pop
ljmp
or
add
add
dec
mov
xchg
adc
add
scas
lret
xchg
pop
xchg
xchg
or
inc
pop
cltd
mov
push
nop
mov
push
popa
jecxz
cmp
arpl
mov
adc
xor
push
or
and
add
out
mov
shl
jne
pop
or
lock
ljmp
sub
jl
sarl
add
in
rcl
mov
sbb
sbb
mov
pop
arpl
adc
push
insl
adc
ficomps
xchg
das
xorl
pop
mov
into
pop
sbb
pop
add
lcall
xor
push
xor
pop
out
sub
mov
push
jmp
push
sbb
pop
cltd
xor
test
add
hlt
frstor
dec
daa
cmp
cmp
movsl
mov
test
ja
mov
lret
adc
or
test
push
add
adc
adc
jbe
test
ror
rolb
sub
xor
inc
push
hlt
mov
cmc
lcall
add
sbb
into
sahf
xor
out
push
mov
mov
cmp
mov
incl
adc
mov
mov
and
ja
ret
decl
mov
pop
push
leave
in
in
mov
out
lahf
dec
popf
js
jge
jnp
negl
sub
xchg
inc
ljmp
sti
pcmpgtw
ret
mov
sbb
loope
cmp
xor
pop
fstps
or
mov
shll
pop
or
xlat
cli
aad
jns
push
pop
mov
xor
mov
mov
das
into
xchg
aad
and
dec
stos
cmp
xlat
sarl
das
mov
leave
inc
and
xchg
out
cmpsb
jge
js
hlt
stc
sbb
loopne
aad
outsb
mov
lcall
repz
cmp
sbb
jne
stos
adc
lock
or
mov
push
xor
leave
movsl
sbb
push
jns
incb
xor
nop
sbb
pop
inc
fisttps
js
xchg
pop
and
gs
xlat
or
pop
adc
test
imul
cwtl
xor
insl
test
mov
ret
jecxz
inc
push
push
push
push
or
jp
stc
jp
cltd
je
in
cmc
mov
sub
shrb
pop
mov
popf
cmp
xchg
out
jle
ljmp
scas
lds
call
dec
aad
loope
lds
mov
fmull
pushf
clc
imul
or
cmc
mov
and
aam
xchg
leave
jecxz
mov
cmp
xor
pusha
enter
adc
iret
cmc
mov
stos
outsb
popl
les
push
xchg
inc
dec
in
push
and
mov
loopne
xor
shll
out
fucomp
adc
jle
cmp
push
jb
cld
inc
and
dec
jp
cmpsb
call
inc
daa
test
fldt
fcomps
lcall
test
jnp
sub
jg
xor
xor
ret
xor
outsb
daa
xor
into
rcl
add
aaa
xchg
lock
leave
in
adcb
fmul
out
fnsave
adc
adc
inc
neg
push
dec
sahf
addl
call
and
jmp
cmc
cwtl
jae
push
in
jmp
fiadds
sbb
mov
xor
or
push
mov
jnp
test
outsl
push
jge
dec
mov
stos
cltd
aad
push
fistps
adc
sub
fstl
in
mov
pop
sbb
mov
call
int3
je
dec
push
fsubr
inc
push
lret
xchg
and
pop
shll
jg
push
mov
adc
icebp
out
aad
push
and
push
mov
sbb
mov
sub
fninit
xlat
ljmp
outsl
xchg
into
arpl
fcoml
cmpsb
pushf
add
sbb
sub
test
lret
mov
push
lods
icebp
fsubrl
push
lahf
mov
dec
dec
fnstcw
push
daa
aaa
imul
jns
ss
jo
cmp
dec
mov
imul
dec
inc
ficomps
mov
fadds
cli
fs
add
sbb
push
andl
imul
aam
mov
adc
mov
pop
popa
pop
out
fwait
ret
in
popf
aas
imul
jle
lea
push
gs
nop
sar
mov
andb
outsl
and
xchg
into
cmp
xor
in
imul
into
mov
pushf
fcom
imul
cmpsl
cmp
hlt
data16
lds
and
or
imul
adc
addb
ret
imul
movsl
xor
mov
fdivs
sub
xchg
hlt
ss
pop
popf
test
int3
mov
jg
inc
aaa
imul
lea
add
cmpsb
mov
rorb
scas
lods
popf
jbe
into
mov
xor
inc
mov
hlt
sbb
ss
or
mov
stos
cltd
inc
mov
ss
jbe
repz
cmp
dec
mov
mov
cmpb
aaa
push
add
sub
sub
mov
out
xor
inc
or
add
or
sbb
push
subl
jae
aaa
mov
jb
pop
jecxz
xor
popa
out
daa
test
loopne
inc
mov
loopne
outsl
cltd
int3
jne
sbb
lods
mov
dec
and
inc
jb,pt
inc
cltd
and
mov
lods
lds
mov
lret
push
pop
out
je
in
adc
int3
loopne
out
lds
repz
mov
lds
or
add
jo
push
aam
mov
push
or
aam
sub
mov
mov
inc
adc
mov
mov
frstor
insl
pop
dec
push
pop
pop
test
daa
adc
mov
mov
or
inc
and
mov
push
xor
dec
inc
movsb
pop
inc
inc
mov
inc
aad
inc
shl
cmp
xor
xchg
lock
adc
lret
and
lods
sub
int
mov
mov
cmp
divl
dec
cmp
adc
dec
sub
repnz
jbe
adc
dec
jne
mov
cmp
test
sbb
fisubrl
cmpl
xchg
test
mov
xor
sbb
add
cmp
cmp
pushl
xor
dec
stos
sbbb
sub
sub
decl
out
inc
imul
jns
inc
test
js
movsb
adc
das
fs
popf
pop
inc
scas
fstpt
pop
add
ficompl
lea
enter
push
scas
mov
dec
xlat
decl
in
mov
aad
ja
cmp
pop
outsl
and
sub
inc
add
ds
xchg
bnd
add
adc
aad
out
xchg
aas
loopne
fcmovne
mov
std
or
lds
xchg
mov
mov
fs
mov
repz
sub
jb
movsl
in
jo
lahf
ret
subl
sub
int
jle
xor
dec
add
xchg
and
or
lea
jo
arpl
arpl
mov
and
popa
out
adc
mov
sbb
insb
pop
dec
push
xchg
ds
sub
pushf
pop
sbb
adc
jmp
stos
mov
push
fwait
aad
sbb
jle
insb
nop
cmpsl
mov
adc
sub
mov
and
jb
add
cmpb
cmc
sti
fsubrl
and
imul
jne
shlb
mov
jns
xchg
int3
mov
adc
xchg
negb
cmp
popl
and
cltd
test
movsb
arpl
test
mov
in
clc
jecxz
cmp
push
test
leave
cmpsb
push
ret
or
add
push
mov
cltd
or
fsts
xor
pop
mov
xchg
push
call
or
cmp
cs
pop
fdivrs
in
stos
imul
mov
pusha
or
out
and
and
in
sbb
inc
enter
pop
outsb
aam
mov
mov
lds
xchg
inc
mov
imul
adc
jbe
in
fwait
pop
popf
int3
sahf
fmull
dec
scas
fwait
inc
into
add
jge
stc
sti
mov
fistpl
sub
dec
pop
dec
es
dec
cmp
jge
popf
adc
in
add
movsb
dec
jge
out
ret
sub
dec
ret
aas
mov
or
dec
sbb
lock
popf
cmp
leave
sahf
add
mov
sbb
push
push
lret
cmc
hlt
adc
push
sbbl
push
call
dec
daa
jnp
imull
pushf
adc
jae
lret
movsl
adc
pop
daa
and
int3
push
popf
test
in
jns
popf
outsb
pop
jb
and
or
fstps
repnz
ljmp
cmp
lret
cmc
pop
aaa
rorl
push
fwait
pop
xor
sub
push
mov
xor
int
ss
cs
je
call
std
shll
pop
loop
addr16
inc
xor
shrb
test
inc
mov
cs
pop
mov
mov
jbe
in
mov
cmp
into
ja
and
popl
ficoms
ret
jg
daa
jnp
int
mov
push
mov
es
dec
sbb
mov
and
insl
fwait
push
dec
pop
shll
imul
xor
inc
xchg
fsubrl
and
mov
inc
pop
insb
dec
cwtl
pop
xchg
fldenv
lods
aas
jmp
mov
add
adc
pop
mov
pop
xchg
inc
imul
jge
jb
cltd
jbe
xchg
push
gs
jmp
jae
jo
in
icebp
jnp
in
jl
mov
iret
pop
idiv
ficompl
add
icebp
sub
pop
enter
rcl
inc
sbb
dec
xlat
jg
add
push
pop
aad
add
cmpsl
test
push
sti
cmp
xor
jae
fisttpll
and
dec
movsb
xchg
xor
jae
loop
push
lahf
lds
adcl
add
push
xorl
adc
repz
mov
add
dec
mov
sbb
std
mov
dec
mov
xor
in
pop
adc
nop
les
mov
cltd
scas
stos
hlt
xchg
and
je
pusha
and
push
dec
jae
and
sub
cmp
cltd
das
sbb
imul
sbb
adc
imul
and
add
mov
and
daa
negb
ss
add
jno
outsl
stc
dec
lss
and
mov
jns
cmp
scas
sub
hlt
leave
jns
cs
sub
sub
push
test
xchg
mov
or
xlat
in
ja
sub
inc
cld
add
fldl2e
mov
sti
ljmp
das
adc
adc
or
fdivs
push
loopne
in
gs
int
repz
movsb
or
mov
fwait
pusha
iret
push
push
sbb
loopne
xor
nop
inc
jb
adc
cmp
stos
fldl
adc
push
les
push
lahf
push
inc
and
std
out
daa
mov
sub
jmp
fwait
mov
lock
mov
gs
insb
pop
pop
loopne
add
xlat
addb
mov
scas
mov
adc
cmp
dec
dec
cli
ja
test
mov
cmpsb
add
popf
mov
sbb
ret
incb
pop
dec
shrl
jecxz
cmp
mov
fs
mov
scas
xor
dec
pop
xor
mov
sub
jns
pop
cld
icebp
pop
cwtl
lock
push
cwtl
fildll
test
push
pusha
jle
dec
icebp
stc
mov
cmp
mov
cmpsb
in
jp
push
mov
jns
xchg
es
hlt
and
lods
es
mov
push
sbb
mov
imul
cmp
or
andb
cmp
rcrb
ja
mov
scas
shll
stos
insb
fwait
int
daa
outsb
imul
inc
sbb
in
out
pop
push
dec
and
stos
pushf
nop
daa
lret
xchg
adc
aaa
xor
sbb
inc
ret
xor
scas
mov
shll
pop
pop
pop
jno
decl
push
push
shll
js,pt
jecxz
jmp
xchg
iret
filds
fstl
out
pop
loop,pt
imul
mov
lods
adc
adc
mov
andb
movsb
pop
adc
cmpsl
cmp
cmpsb
sub
cli
push
das
sbb
and
pop
sbb
imul
mov
mov
test
stos
add
mov
test
hlt
push
mov
fstpt
mov
cmp
inc
cmpsb
inc
mov
push
sub
and
jno
scas
dec
fisubl
stos
mov
roll
ss
data16
mov
fmuls
gs
ret
sub
ret
jae
fwait
movsl
pop
mov
aas
pop
addl
sub
mov
jle
clc
outsl
dec
sbb
push
xchg
jge
cmp
cmp
lret
mov
jb
outsl
rclb
iret
hlt
jno
inc
gs
or
in
jno
mov
inc
jl
addr16
xor
iret
xlat
stc
cmp
sub
sahf
jb
sub
push
pop
rol
fwait
aam
push
mov
lea
out
dec
out
incb
sahf
sub
call
push
sti
fstpt
mov
dec
dec
clc
mov
lret
mov
adc
imul
inc
movsl
cld
es
add
xchg
and
out
inc
lock
push
inc
pop
mov
cli
cmpsl
xchg
inc
aaa
mov
fdivp
inc
in
sbb
aas
fsubl
std
mov
shrl
push
adc
and
cltd
mov
sbb
fwait
es
fiadds
pop
jo
outsl
inc
stos
frstor
jecxz
lods
cli
fimull
sbb
jno
jb
pop
pop
incb
jecxz
int
push
insb
pop
imulb
push
sbb
push
mov
mov
das
xchg
inc
gs
subb
add
lcall
and
pop
das
sub
scas
sub
adc
cmpl
out
jns
or
cwtl
out
sbb
jns
aam
subb
loopne
xchg
cmp
mov
mov
rcll
in
repz
hlt
in
test
psrlw
xor
mov
out
mov
adc
ds
or
inc
sbb
test
push
xor
pmulhuw
pop
jno
out
scas
punpcklwd
leave
lods
les
push
insb
ret
andl
nop
leave
cmp
fwait
sbb
ficomps
leave
bound
adc
inc
xor
sbb
mov
out
inc
pop
leave
jge
leave
xlat
sub
bound
inc
test
faddl
insl
xor
push
dec
std
inc
adc
mov
test
idivb
iret
sbb
repnz
enter
xchg
imul
xchg
add
jo
in
in
xlat
les
test
inc
das
loopne,pn
xchg
orl
das
or
inc
mov
push
jecxz
sarb
adc
movsl
aad
inc
jns
jnp
nop
mov
pop
daa
sarb
gs
ret
inc
xor
inc
lods
mov
ret
pop
out
jp
lret
add
xor
adc
inc
sbb
xlat
xchg
cltd
stos
adc
pop
aad
jno
cmp
gs
xor
fs
hlt
data16
and
add
dec
aam
lods
sub
fdiv
lret
addr16
dec
les
daa
jne
ljmp
test
sahf
jbe
std
push
insb
pop
adc
xlat
mov
dec
lret
jmp
test
ljmp
jno
adc
ds
xchg
int3
jg
pop
mov
incl
lock
loopne
inc
in
ficomps
lret
shrl
xor
and
mov
nop
jns
dec
imul
pusha
jg
out
pop
inc
arpl
cmp
jge
faddl
nop
test
mov
mov
and
call
jo
or
pop
pusha
pop
fs
xchg
and
lods
stc
orl
lahf
jns
fistl
jno
shr
repnz
pop
dec
add
lds
int
push
out
mov
adc
ret
or
xchg
rcrb
jo
add
je
mov
rolb
or
scas
xchg
xchg
adc
aas
mov
ror
rol
mov
jl
lret
das
push
mov
sub
daa
jle
lcall
ljmp
bound
aaa
out
ss
leave
testb
mov
roll
stos
lds
js
inc
movsb
ja
inc
push
pop
jmp
out
outsl
jl
ljmp
sbb
stos
lahf
xrelease
call
dec
sbb
mov
adc
push
in
out
ret
sahf
test
cwtl
xchg
jns
inc
cltd
into
mov
ss
in
xor
enter
sub
inc
jne
or
and
fnstenv
fisubs
movsl
shlb
lcall
filds
inc
and
loope
int3
clc
add
jnp
mov
cmc
fwait
pop
pop
lds
mov
push
push
test
popf
push
les
add
orl
outsl
xor
jae
cmp
add
or
adc
repz
out
xchg
and
jno
jo
sub
ret
xor
mov
loope
jp
jge
and
jne
inc
mov
stos
icebp
bnd
inc
inc
dec
scas
adc
nop
xchg
loope
shll
popa
mov
jno
rcrl
movsl
push
sbb
daa
mov
jp
mov
enter
dec
scas
fstl
div
insb
or
sahf
xchg
and
sub
jl
hlt
ss
popf
and
cmpsl
popa
outsl
in
sbb
repz
jge
ss
test
addr16
xor
fcmovb
cmpb
push
inc
shl
adc
ficomps
mov
adc
pop
cmpsl
push
inc
fs
dec
mov
lods
sub
xchg
push
mov
jae
add
lds
push
add
xchg
jmp
andb
lods
xchg
mov
sbb
jecxz
and
jg
lods
addb
pusha
leave
hlt
xchg
cmpsb
dec
push
fadds
xchg
adc
gs
mov
pop
xor
cmp
sti
add
cmp
dec
mov
into
loopne
insl
inc
mov
inc
pop
push
add
ds
imul
ret
sbb
mov
inc
xchg
call
ja
outsl
or
or
push
gs
gs
cmp
bound
dec
stc
ret
je
outsl
jbe
pop
loop
mov
xor
or
scas
pusha
popf
push
mov
sub
jp
mov
movsb
insl
push
test
jb
movsl
aas
lock
std
js
or
cmp
dec
dec
in
adc
daa
lods
lds
out
fs
jmp
out
pushf
imul
jns
add
cmp
push
jnp
xor
add
sub
movsl
sub
repz
test
mov
fnstsw
out
stc
mov
pop
ljmp
and
dec
mov
sub
cmp
sar
loope
ljmp
mov
sbb
les
ror
fninit
call
lret
cltd
push
pop
push
cmpsl
fbstp
mov
shr
push
cli
les
push
cmp
mov
rcr
mov
and
fdivrs
aad
cmp
mov
or
das
add
cmp
push
dec
hlt
dec
aaa
push
fists
jp
mov
cmp
mov
xchg
imul
pop
arpl
jno
or
fwait
dec
or
mov
dec
cli
push
hlt
and
push
gs
cmp
ss
push
movsb
fidivs
mov
adc
mov
stos
std
or
and
and
cld
rcrl
sbb
mov
xlat
test
push
decl
pop
jno
push
dec
xchg
jne
lods
in
push
fidivrs
outsl
inc
movsl
dec
not
mov
shll
pop
jbe
dec
iret
push
and
add
and
add
mov
push
jb
pop
scas
cmp
int
cmp
xchg
std
shrb
sbb
sahf
push
xor
movl
sbb
jbe
jecxz
push
mov
jo
cltd
icebp
cmp
mov
mov
lret
cmp
insb
and
push
xchg
jmp
test
pop
pop
inc
subl
repz
in
test
and
push
loope
jnp
push
and
dec
das
cmp
lods
test
cmp
mov
inc
nop
aam
es
dec
pusha
ror
hlt
fisubl
mov
insb
scas
inc
jno
pop
or
sub
mov
mov
ret
aas
sbb
imulb
scas
push
dec
fsub
adc
mov
test
jmp
add
ljmp
push
mov
cld
mov
xchg
xor
das
lock
stos
cmpsb
iret
cwtl
insb
shll
lods
fadds
jmp
dec
add
cld
in
xchg
out
cmpsl
fnstenv
fnsetpm(287
add
dec
adc
cmp
cmp
add
lock
out
fmul
inc
push
bound
sbb
ss
pop
pop
inc
push
rclb
and
pop
dec
lods
pop
xchg
mov
js
push
addl
loop
inc
cmp
clc
cwtl
mov
xchg
sub
cmp
int
add
fmuls
shlb
nop
inc
pop
adcl
mov
sbb
pushl
shrb
loop
cmp
sub
xchg
add
sbb
lods
lock
pop
and
adcb
adc
sub
mov
aaa
lds
bound
cvtpi2ps
adc
mov
movsl
sub
cld
jnp
xchg
stos
in
lret
fs
pop
jg
loop
pop
jge
outsl
push
pop
getsec
andl
stc
iret
or
or
or
jg
sub
repnz
scas
ja
pop
or
cs
add
rcl
cld
movsl
or
adc
jo
and
xor
mov
in
and
xor
rcl
adc
leave
mov
jp
lea
lock
add
and
shrb
outsb
out
mov
pop
xchg
cmpsl
sub
and
inc
fistpll
mov
xchg
mov
mov
loopne
out
jae
mov
shll
push
fisttps
xchg
into
pop
popf
xor
out
popa
mov
push
cmp
push
xor
int3
cmp
or
rorb
scas
call
repnz
dec
mov
or
or
nop
sahf
mov
mov
jg
mov
xchg
xchg
xchg
int3
cmpsb
push
sbb
lods
iret
cmp
aad
js
cld
fs
sbb
pop
lock
fbstp
lret
stc
sarb
sub
jb
jle
inc
cmp
jecxz
push
lcall
xor
push
cwtl
xor
movsb
mov
pop
or
test
pop
push
xchg
jmp
scas
mov
cmc
mov
hlt
out
xchg
outsl
xchg
inc
xor
sbb
pop
repz
jecxz
ljmp
paddsw
nop
push
dec
ficompl
stos
mov
adc
test
inc
xchg
xchg
sub
or
or
aad
loopne
sbb
mov
pop
rorb
mov
pop
es
cli
xchg
int3
mov
movsb
cmp
xlat
iret
in
jmp
pop
clc
mov
push
mov
in
add
les
scas
sub
xchg
jecxz
out
in
sub
and
mov
push
pop
lret
jno
add
mov
pop
out
in
lahf
insl
cmp
jge
xchg
imul
add
ds
inc
jle,pn
pusha
cmp
sub
mov
nop
mov
pop
mov
lods
add
es
and
pusha
lret
mov
insb
cmp
arpl
push
pop
pop
mov
test
pop
or
sahf
push
push
sbb
or
in
inc
ret
inc
fdivrs
xor
xor
sub
or
adc
pop
mov
ss
loopne
push
xorb
push
xchg
pusha
mov
dec
mov
in
test
mov
movsb
daa
lahf
xor
out
scas
add
js
push
jnp
lret
and
pushf
adc
jnp
ljmp
inc
mov
push
aaa
add
mov
addr16
in
sub
mov
xchg
jge
les
xor
dec
or
repz
call
and
jb
cli
mov
iret
or
pop
push
popf
out
fs
movsl
add
cmpsb
dec
addr16
fdivrl
or
ret
mov
or
mov
push
js
mov
mov
jns
ds
repnz
pop
jno
inc
imul
loope
push
mov
test
shlb
dec
fdivrl
add
jne
mov
cmpsb
test
loop
push
push
push
addb
test
xor
pop
mov
xchg
jno
mov
loope
and
dec
push
sahf
fiadds
mov
push
jae
insl
dec
in
nop
add
mov
mov
shrb
push
dec
xchg
push
hlt
jns
loop
bound
push
pusha
or
xchg
xor
in
icebp
pop
xor
hlt
or
pop
xchg
js
adc
lds
stos
fstpt
jg
es
dec
xchg
int3
std
sahf
mov
inc
ret
test
sbb
lea
lock
iret
movsl
lret
xchg
jecxz
xor
stos
jnp
lock
mov
cld
lret
repz
inc
lds
stc
pop
jg
or
push
repnz
inc
stos
adc
adc
pop
mov
xchg
pop
mov
or
test
out
test
jno
xor
mov
sbb
sub
mov
imul
jo
mov
and
daa
iret
jns
fcomps
pop
imul
xor
push
lcall
hlt
inc
shlb
scas
cwtl
mov
pop
orl
xchg
sbb
and
push
sub
xchg
mov
mov
sub
mov
and
xor
ss
nop
imul
int3
push
test
mov
inc
inc
jns
cmp
pop
push
cmp
push
jno
add
inc
mov
das
jge
ret
gs
sahf
das
push
cmp
mov
subl
lcall
xlat
mov
popf
fldl2t
push
adc
cmp
das
mov
clc
add
movsl
movsl
or
lods
push
and
cmp
mov
inc
or
sub
in
call
cs
test
xor
sub
pop
into
add
nop
ja
xor
cs
xor
sahf
push
ficompl
mov
js
and
jle
icebp
inc
aaa
addb
sahf
pop
adc
jb
or
pop
sub
js
dec
outsl
pop
jne
imul
sub
sbb
mov
test
rorl
scas
add
jno
pushf
mov
testb
inc
dec
push
mov
scas
push
cmpsb
sarl
imul
pop
xchg
dec
mov
pop
xchg
or
icebp
push
xorb
add
xchg
mov
adc
fwait
pushf
dec
aad
and
cmp
daa
add
repnz
test
mov
cltd
in
mov
cmp
push
add
xorl
stc
jecxz
push
in
or
fsubrl
ret
out
or
xchg
dec
push
hlt
sbb
dec
mov
mov
push
sub
pop
ret
jns
push
out
in
leave
ljmp
fcoms
push
shr
add
stos
testl
bound
push
push
enter
dec
pusha
cmc
out
pop
loop
push
loope
fs
mov
inc
in
dec
jle
sbb
test
inc
pop
imul
inc
fidivrl
dec
push
sbb
outsl
dec
roll
inc
add
jno
pop
pop
inc
cmp
pop
mov
jne
mov
divb
je
or
jg
mov
jnp
scas
andl
mov
mov
jb
popa
int3
out
nop
push
or
dec
push
arpl
fmuls
and
fldenv
push
push
outsl
mov
aaa
or
jp
mov
cmp
xor
mov
scas
dec
inc
and
subl
xchg
sbb
or
insb
sbbb
insb
out
xor
outsl
aam
pusha
ja
jne
fbstp
inc
pop
or
imul
iret
adcl
lods
add
dec
insb
insb
cmp
shr
std
out
cmp
mov
imul
mov
lret
gs
fildll
xchg
xor
call
push
push
sarl
xor
into
inc
adc
hlt
icebp
aaa
test
mov
cmpl
pop
push
ret
repz
xor
and
fmul
sub
mov
arpl
xor
jle
outsl
repnz
sub
add
cltd
movsb
jge
mov
mov
rcll
push
aam
outsl
xor
and
xor
fsubrs
fistpl
mov
popf
mov
mov
jmp
aas
xor
cmp
push
or
repz
call
mov
push
lds
mov
je
movsb
mov
push
mov
cltd
addr16
adc
xchg
mov
loope
outsb
mov
pop
xchg
pusha
nop
outsb
ficomps
sub
xchg
mov
dec
mov
xor
jo
mov
ja
lock
xor
adc
pop
popf
outsl
mov
jge
sub
movsb
dec
scas
xchg
or
mov
repz
js
lds
faddp
shll
aad
repnz
pop
jg
add
adc
xchg
cmp
inc
lods
leave
jl
arpl
add
in
clc
xchg
loop
mov
aam
ljmp
popf
xchg
in
icebp
notl
sub
inc
inc
ljmp
xchg
nop
outsl
dec
iret
and
xchg
shll
xor
std
push
les
pop
test
mov
push
sub
mov
adc
cmp
inc
call
mov
xor
stos
dec
cld
mov
ds
fs
adc
repz
or
push
sub
mov
in
xor
sbb
or
nop
mov
pop
popa
xor
shr
jg
mov
xchg
fdivp
pushf
addr16
shll
in
cld
mov
sub
jge
out
in
and
std
nop
fnstsw
and
enter
mov
outsb
fldl
mov
and
imul
jecxz
and
ja
add
fadd
setne
lock
fidivl
test
int3
xlat
insb
or
cmp
loope
mov
cs
rcl
push
ja
push
and
jb
inc
shlb
sub
lcall
jno
pop
or
repnz
xchg
mov
push
jnp
negb
repnz
pop
repz
out
cltd
ror
icebp
lock
cwtl
int3
xchg
stos
stc
push
test
testb
ja
lcall
ljmp
xor
das
xchg
sub
xor
pop
movb
mov
movsl
jl
mov
xchg
adc
bound
loopne
lock
inc
cmp
mov
and
rclb
frstor
lods
inc
ficoms
pop
shl
sub
fcomps
inc
sbb
cltd
repz
xor
and
fs
sub
mov
movsb
or
cmp
mov
mov
icebp
push
insl
jl
mov
and
lret
dec
pop
popf
add
sbb
add
aaa
inc
test
out
in
push
cmpsl
inc
fists
xchg
jb
out
jo
sarl
fbstp
mov
movsb
fucom
test
iret
xchg
out
stos
push
push
adc
and
sub
ret
test
inc
fsubs
test
outsb
scas
mov
div
ljmp
push
push
xchg
cmp
sub
popa
aaa
pop
mov
mov
jl
mov
orb
inc
ficoml
in
loop
jo
sbb
stos
leave
jg
add
lock
mov
pushf
and
mov
sbb
mov
pop
cmp
add
push
icebp
mov
pop
pop
lcall
inc
insl
mov
adc
scas
lock
decl
out
pop
push
sbb
sarb
aaa
ljmp
or
outsl
pop
xlat
aaa
pop
or
sti
ficoml
xchg
jg
dec
mul
aas
fwait
or
stos
ds
cmc
and
stos
in
and
push
pusha
pop
js
out
das
adc
fidivrs
xlat
ds
jae
fsubp
jle
mov
pop
bound
push
xchg
push
add
xor
jb
sbb
sub
fistps
sbb
jmp
jo
mov
test
popa
xchg
imul
sub
mov
or
sbb
cmp
popa
lret
int3
pop
arpl
addl
mov
jg
scas
fimull
xor
daa
push
mov
dec
inc
iret
xchg
push
in
mov
or
inc
fcompl
icebp
mov
inc
addr16
pop
or
ds
xor
mov
aad
xor
in
pop
push
cmp
in
pop
xorl
pop
and
movsl
push
mov
jae
ljmp
out
jmp
cmp
jnp
or
sub
xlat
mov
arpl
mov
jmp
dec
fcoml
push
xor
adc
adc
push
sub
out
call
test
jg
cmpps
push
jp
jmp
jp
shrl
mov
mov
out
imul
inc
sahf
adc
cmp
out
cmp
add
and
cmp
outsl
daa
mov
int
fldt
outsl
push
sbb
andl
jl
into
std
dec
insb
mov
sbb
lret
in
jo
cltd
sarl
lock
lds
sbb
jmp
push
lods
mov
test
cmpsb
jno
mov
sub
push
jno
xchg
add
std
in
sti
inc
enter
insb
clc
jns
fs
cmp
pop
popa
mov
nop
add
dec
jmp
adc
pop
cmpsb
mov
aas
out
and
cmp
jg
cmpb
adc
pop
aad
sub
inc
xor
les
aas
shrl
push
mov
imul
out
sbb
adcl
jb
lea
sub
mov
scas
test
clc
test
into
clc
xor
hlt
mov
notb
inc
push
sarl
insl
cmp
fisttpll
dec
jge
add
jnp
insl
data16
cltd
stc
mov
sbb
push
adc
jno
jmp
aas
fsin
sub
stos
addl
mov
cmpsl
cltd
stc
adc
inc
nop
cmp
fadds
pop
lds
loopne
cmp
push
rolb
xor
lret
push
lcall
push
stc
adcl
in
aas
jae
orl
cmp
es
sub
and
cmp
xchg
test
loop
sub
sub
loopne
movsb
in
mov
ror
push
test
in
mov
popf
pop
imul
movsl
loopne
cltd
add
xchg
bound
pushf
std
jnp
das
ret
fdivrl
mov
call
push
sarb
xchg
daa
arpl
sbb
js
sub
cli
jb
push
fwait
push
dec
scas
mov
or
xchg
pop
mov
sub
lock
xlat
sub
pusha
inc
mov
push
jns
xor
lods
sbb
clc
bnd
out
or
push
ret
sub
and
sbb
lret
mov
push
sub
sub
out
arpl
and
mov
xor
pop
mov
popf
cvttps2pi
rcrb
jae
lret
jmp
sub
daa
scas
ret
ds
or
movsl
test
sbb
ja
dec
lret
sbb
int
xchg
or
aad
mov
sbb
add
fcomps
arpl
dec
jp
jle
pop
mov
test
lahf
cmp
cwtl
jae
inc
sbb
test
mov
aam
mov
orl
ret
and
lret
pop
loopne
dec
inc
lret
jg
fdivr
int
push
add
cmp
movsl
mov
mov
xor
push
jecxz
and
imul
js
xor
out
sub
and
mov
fcomip
push
iret
leave
cld
mov
roll
aas
push
inc
lods
shl
lea
pop
pop
mov
push
lock
fbld
ss
jmp
cmp
cmp
dec
add
jle
lea
or
mov
cmpsl
loop
mov
dec
subl
fcmovb
mov
add
out
xchg
shrl
xchg
bound
outsl
out
push
push
pop
mov
mov
xor
js
lret
sbb
fdivrl
or
fwait
repz
inc
aas
aaa
rolb
pause
xor
add
outsb
or
jecxz
loop
xchg
push
sub
sbbb
sbb
clc
dec
mov
add
aad
aad
sbb
jns
mov
xchg
jb
pusha
mov
repz
in
outsb
inc
push
mov
or
lea
pop
mov
and
ret
cmc
adc
jo
ljmp
xchg
xchg
inc
mov
imul
in
sti
sahf
mov
cld
bound
mov
jo
pop
mov
lds
rclb
sbb
pop
inc
jns
ss
cs
jno
pop
sub
xchg
sbb
lea
pushf
jno
clc
inc
dec
lods
stos
das
test
inc
insb
mov
jb
or
frstor
ds
xor
bound
ret
fiaddl
fdivrl
outsb
outsb
add
jnp
cwtl
xchg
movsl
je
push
adc
mov
daa
jge
push
in
icebp
lcall
mul
gs
xchg
sbb
lock
hlt
jo
dec
mov
lods
push
jae
ret
insb
ret
cmp
adc
sbb
nop
aam
aaa
pop
enter
bnd
mov
repnz
add
sbb
adc
fcmovb
jl
add
popa
inc
push
xorb
jb
loope
push
std
mov
jmp
push
outsb
sub
cmp
in
pop
lret
adc
repz
daa
repnz
mov
xchg
or
nop
jns
mov
pop
insb
xor
movsl
mov
daa
xorl
out
lock
aaa
dec
imul
jns
xlat
orl
inc
sub
frstor
add
xor
sub
push
outsb
mov
test
cs
dec
sbb
lret
les
adc
pop
sbb
add
out
pusha
mov
inc
adc
daa
mov
xchg
cmpsl
aaa
push
add
mov
dec
and
fs
push
pop
pop
rcll
iret
lea
das
addb
sub
push
pop
or
pop
inc
arpl
or
fwait
lds
negb
mov
cld
cmp
and
push
jae
dec
fstl
imulb
adc
dec
mov
imul
xor
mov
push
mov
daa
adc
imulb
sbb
int
fisttps
ljmp
xchg
or
popa
cmp
lods
lret
into
xchg
xchg
xchg
orl
adc
sub
lret
pop
pop
jae
add
out
xchg
pushf
lods
insl
jmp
lods
fldcw
outsb
lods
stc
inc
xchg
pop
call
mov
fisubs
xchg
mov
mov
divb
icebp
out
mov
lea
jnp
call
mov
mov
daa
sbb
sbb
imul
xchg
sarb
out
dec
fisubrl
push
cld
cmp
popa
jp
pop
pop
dec
cmp
xchg
sarb
loopne
sbb
cltd
add
jb
mov
adc
jp
popa
mov
jb
mov
jns
push
and
daa
inc
orl
pop
mov
inc
pop
xor
jge
mov
loopne,pn
cmpsl
push
sub
jne
imul
and
stos
jno
push
push
adc
addr16
pop
xchg
cmp
adc
xor
push
push
mov
fcompl
push
push
add
inc
cmp
movsb
pop
or
pop
arpl
and
mov
adc
imul
data16
in
rorl
mov
stc
ret
rep
or
aam
mov
test
fisttpll
fidivl
fstps
jns
cwtl
arpl
call
ja
xchg
inc
leave
lods
push
lods
and
fs
std
adc
xor
fisubs
sti
pop
pusha
jne
cli
stos
pop
adc
sub
jo
pop
adc
cs
pop
mov
mov
xor
push
adc
repnz
shrb
ss
sbb
out
mov
mov
orb
aam
xchg
adc
mov
xor
pusha
lock
lods
and
xor
aad
outsl
xor
loop
mov
sbb
jle
hlt
nop
jb
and
inc
pusha
mov
lock
inc
pusha
sti
xchg
cltd
test
mov
xorl
inc
or
dec
icebp
or
fiaddl
lock
mov
mov
nop
lea
cmp
stos
iret
jle
outsl
lret
lcall
popa
test
jge
jns
fistpl
test
loope
int
and
cli
jns
int
push
rol
repz
fisubs
pop
sub
test
cmp
stos
test
outsl
rcr
add
lahf
mov
jne
sub
dec
call
pop
adc
sbb
sub
add
rorb
aaa
dec
lock
adc
mull
imul
enter
dec
sbb
mov
andl
add
dec
mov
ret
add
cwtl
cmp
mov
dec
push
mov
icebp
add
subl
sbb
sub
cmp
push
sbb
pop
mov
xchg
in
cmc
xor
jle
stos
rcrl
or
dec
xor
jg
xor
es
push
rcr
inc
cmp
js
dec
dec
outsb
sbb
out
xchg
in
cmpsb
push
aas
dec
xchg
in
sbbb
jle
mov
jle
dec
and
decl
sbb
mov
dec
out
inc
xor
addl
ret
in
jb
ss
js
fcoms
aam
sbb
in
popf
mov
es
mov
test
mov
sbb
mov
inc
sbb
idiv
movb
scas
in
ret
std
scas
sbb
mov
imul
scas
into
jns
es
rcl
pop
mov
adc
sub
mov
push
push
into
mov
cmp
cwtl
jp
aas
divl
addl
mov
mov
lods
and
mov
loop
jae
pushf
mov
imul
fisttpl
inc
lods
inc
in
and
addr16
enter
mov
jo
cmp
add
pop
outsl
in
imul
fidivrs
iret
int
das
dec
mov
out
dec
ja
int3
mov
repz
or
ja
sti
pop
adc
cmpb
xor
mov
out
push
shrl
add
sarl
jno
inc
and
push
add
js
or
ds
push
add
lods
test
push
daa
fstps
inc
xlat
subl
inc
jle
mov
pop
leave
out
aad
test
jge
xlat
sbb
repnz
cmpsb
mov
stos
mov
bound
push
shrb
stos
outsl
das
adc
insl
mov
mov
jl
xchg
fwait
in
pushf
push
mov
cmc
sysenter
add
adc
cmpsb
xchg
mov
sub
dec
mov
out
adc
mov
roll
mov
pop
outsl
popf
push
push
mov
test
ds
mov
inc
leave
xor
std
mov
or
sti
push
fisttpl
pushf
decb
push
pop
shrb
iret
cmp
cmp
push
push
call
cli
lret
xlat
or
or
mov
aad
dec
int
aas
push
adcl
push
rcll
mov
arpl
mov
es
loopne
call
mov
fyl2x
xchg
iret
xlat
sbb
jecxz
add
subl
mov
fsubrs
dec
fimuls
repnz
shll
push
inc
aam
pop
sub
out
ret
dec
jp
stc
dec
inc
xchg
mov
mov
fwait
mov
addl
fsubr
mov
frstor
rcrl
sbbl
or
add
mov
std
lock
or
push
daa
push
inc
insl
test
dec
inc
push
nop
out
and
adc
outsb
inc
in
nop
jle
mov
adc
loopne
push
loope
pop
enter
xor
mov
cmp
neg
cmpb
out
icebp
add
jo
shll
sub
lret
pop
sahf
jnp
stos
aam
ss
jp
neg
or
push
pushf
pop
or
int
pop
cmc
jo
dec
pusha
sbb
dec
in
xor
das
gs
rorb
ret
dec
aad
ja
mov
popf
sti
mov
xchg
sbb
icebp
or
outsb
push
xor
xchg
in
mov
imul
repnz
push
lea
mov
sbb
pop
jecxz
testl
add
aas
mov
sbb
arpl
add
cwtl
dec
cli
inc
cmpsb
roll
mov
pop
adc
jl
movsl
push
shll
ret
sbb
sub
hlt
and
es
inc
cmp
enter
pop
popf
inc
add
fs
sub
jno
aam
and
inc
roll
push
fwait
jno
cmp
out
cmp
xchg
rorl
iret
and
adc
dec
scas
jle
xor
sub
bound
hlt
push
pop
ljmp
push
and
push
cmpsl
insl
adc
adc
fwait
push
shlb
ret
ret
sbb
mov
add
and
or
sub
push
arpl
mov
ds
fidivrs
sbb
inc
roll
popf
out
out
sub
mov
rcr
cmp
rcr
fs
mov
push
mov
frstor
mov
aam
jl
push
push
ret
mov
sarb
inc
popa
jae
hlt
inc
and
sub
lds
lds
popf
or
popf
or
and
dec
sub
adc
shll
sub
inc
scas
insb
mov
je
or
xor
loope
xor
push
cmpsb
addr16
aad
scas
mov
mov
jg
pop
fmuls
inc
test
mov
inc
rcrl
adc
cmpsl
arpl
movsl
clc
stos
imul
sbb
sar
jle
scas
aam
out
mov
aas
idivl
xchg
mov
mov
aam
xor
insb
pusha
push
mov
imul
fildll
hlt
sub
ds
xor
sub
xor
outsb
mov
add
sahf
mov
push
ret
pop
and
cmp
push
pop
push
imul
lods
aad
or
mov
jmp
outsb
icebp
jns
xchg
mov
loop
or
aad
cmp
insb
sbb
ret
sarl
mov
xchg
sub
xor
xchg
mov
imul
arpl
iretw
nop
add
test
jb
or
jb
jl
pop
gs
int
xorb
mov
das
push
ret
sbb
dec
mov
loop
sbbl
mov
outsb
xor
lcall
jg
push
push
mov
sbb
aas
xor
add
sti
lock
sub
add
adc
loopne
adc
xor
data16
cmc
movsb
ds
sub
push
push
jae
cmp
jbe
pop
jae
incl
imul
fstpl
inc
jg
es
lock
xchg
jne
js
ljmp
jae
cmp
shl
jae
xor
inc
pop
and
push
dec
pop
dec
jmp
gs
je
mov
mov
mov
inc
jns
add
shl
imul
add
push
xor
daa
push
out
shrb
cltd
loope
adc
adc
hlt
negl
mov
in
inc
cmp
pop
dec
mov
xchg
cwtl
dec
sub
sub
jg
aam
add
mov
pminsw
add
mov
lret
fpatan
jle
xor
pop
ds
lret
cmp
rcrb
imul
mov
lods
and
movsb
mov
cmpb
push
xchg
dec
repnz
pop
inc
mov
cmpsb
shrb
jo
ljmp
xchg
fwait
popa
lahf
cli
imul
stc
push
xchg
push
in
out
fnsave
sbb
and
pusha
xchg
and
and
js
incl
pusha
cmpsl
ret
jnp
stos
data16
fisubrl
lret
repz
mov
outsb
insb
loopne
mov
mov
in
push
loopew
sar
dec
paddusb
pop
and
gs
inc
jne
jae
mov
mov
pcmpgtw
fs
fdivs
pop
cmpsl
or
or
jb
sub
dec
push
ss
fcomps
or
pop
cltd
add
inc
jle
fmull
inc
lcall
cmp
dec
stc
shl
push
add
fdivp
or
mov
add
xchg
push
dec
cmpsl
aam
insl
sub
aas
scas
sbb
jmp
notl
inc
jmp
inc
cmp
lret
or
rclb
aad
jne
lds
out
cmp
jp
loopne
cmp
mov
lret
xor
daa
jp
leave
add
pusha
mov
mov
cmc
jne
jne
inc
push
jo
pop
inc
sub
and
adc
pop
arpl
cs
jl
les
outsl
insb
ss
sub
adc
push
fs
sub
fbstp
fldcw
adc
mov
das
aas
loope
mov
dec
xchg
mov
xorl
loope
push
sahf
sbb
lret
mov
lcall
or
jmp
fisttpl
lcall
scas
lea
xchg
mov
shl
vmread
dec
cwtl
out
jae
icebp
fbstp
mov
sbb
pusha
xor
mov
or
idivb
cmp
insl
hlt
push
mov
mov
xorb
lods
ljmp
lock
mov
addr16
fwait
ljmp
mov
movsl
xchg
adc
xor
jbe
xchg
push
or
xor
or
jecxz
mov
ret
dec
or
mov
andl
push
insb
and
enter
scas
xor
outsl
clc
add
mov
std
adc
cltd
jb
sub
mov
xchg
cmp
dec
lock
insb
mov
mov
fwait
adc
sub
aad
fidivs
jg
push
adc
sub
or
cli
jno
jae
iret
jg
pop
loope
sbb
add
fwait
inc
mov
sub
je
inc
lods
imull
jmp
sub
loopne,pn
xorl
rcll
cmp
dec
mov
imul
pop
xor
adc
pop
jo
in
scas
push
leave
inc
scas
dec
xchg
cwtl
and
pop
fisubs
jno
sbb
arpl
out
add
negl
add
cs
loopne
insb
insl
into
inc
in
fisubs
pop
leave
jbe
les
jl
iret
mov
dec
push
into
inc
clc
pop
adcl
pushf
pusha
repnz
iret
test
xor
adc
sar
xchg
jge
push
xchg
gs
stos
pop
push
lret
sbb
aas
movl
sbb
xlat
mov
aaa
mov
ror
orl
ljmp
aaa
mov
mov
ret
jbe
test
mov
mov
ret
cmp
aas
mov
rcl
ljmp
shlb
test
lock
clts
lods
test
mov
mov
fcompl
jb
out
out
test
cmpb
and
in
dec
lcall
or
insb
sahf
jae
or
sub
incl
xchg
cmp
jg
popa
and
xchg
dec
add
in
and
cmc
imul
inc
add
mov
fdivp
pop
ret
shrb
int
mov
lods
push
push
imul
jo
jle
repz
inc
pushf
js
push
or
jge
dec
and
xor
stos
fimull
loopne
cmp
pop
adc
outsb
or
mov
jmp
mov
xor
addl
mov
sbb
jno
dec
pop
mov
push
dec
fsubrs
cmp
xchg
bound
dec
aaa
xor
ljmp
jno
mov
dec
in
into
stc
jns
arpl
pop
int3
fimuls
cmpsb
mov
and
rcll
rcll
pop
cmpsl
inc
ljmp
pusha
out
mov
enter
mov
push
jb
int3
into
fsubs
data16
mov
xor
pop
cmp
pop
iret
sbb
fadd
call
ret
in
ss
add
add
sbb
push
das
and
inc
or
cltd
or
sbb
pusha
dec
xchg
adc
movsb
mov
repz
pop
xchg
dec
lea
sar
clc
out
movsb
mov
adcb
mov
and
jge
jns
ret
aam
cmp
bound
das
mov
and
xor
js
fisubrl
push
mov
in
fisubl
loop
lcall
sub
sahf
rcll
setp
daa
mov
pop
or
mov
aaa
movsb
enter
ljmp
push
push
mov
cs
dec
fldt
push
hlt
mov
jmp
xchg
pop
lea
xor
shrb
shlb
adc
out
xlat
in
cli
jecxz
push
push
mov
das
pop
add
mov
jbe
and
pop
jbe
andb
into
xchg
cmp
mov
icebp
cmp
mov
in
add
js
stc
fdivrs
mov
scas
outsb
iret
test
and
adc
cld
lahf
jnp
stc
xor
dec
enter
pop
dec
daa
into
ret
push
dec
fwait
pop
mov
mov
stos
inc
stos
imul
cmp
xchg
sub
fwait
test
shll
les
jmp
sbb
pop
push
xchg
jl
bound
or
inc
cmp
inc
mov
sub
xchg
inc
ja
fwait
test
sbb
cmp
or
cmp
mov
rclb
cwtl
out
mov
pop
test
mulb
das
xorl
mov
xchg
push
jno
leave
or
xchg
lret
and
lret
pop
jno
dec
stos
mov
cli
push
cmpsb
pop
sub
or
push
popa
rorl
jl
shlb
xorl
xchg
jl
outsl
push
rol
jp
jae
add
dec
ss
adc
addr16
lods
push
sub
sbb
frstor
jmp
dec
movsl
lock
ret
repnz
fcomi
dec
loope
div
icebp
cmc
jmp
push
hlt
pop
mov
std
mov
and
cmp
xor
andb
lods
add
in
inc
scas
out
push
sbbl
mov
outsl
jnp
add
out
pop
push
ja
into
or
gs
pop
cmpsb
push
test
movsl
sbb
and
mov
xor
adc
std
sbb
lea
aaa
lret
rcrl
cltd
or
ds
mov
jl
mov
xor
mov
dec
in
push
test
sbb
bound
lahf
add
ljmp
jae
sahf
cwtl
addr16
cmpsb
cmp
sub
push
insl
inc
ret
or
in
ret
sub
jo
das
arpl
shll
or
imul
cmp
and
xor
dec
mov
push
push
int3
jno
jle
push
sbb
decb
mov
jp
rcl
xor
push
push
ret
popa
xor
mov
inc
inc
mov
dec
loope
aas
clc
push
sub
push
jnp
jnp
adc
insl
pop
sahf
xchg
js
mov
pop
aam
sub
leave
paddusw
repz
in
fists
add
xchg
pop
xor
int
lcall
repnz
mov
fstps
cs
idivb
cli
ja
test
mov
hlt
or
jmp
cli
ss
xor
adc
mov
push
gs
movsb
jmp
fiaddl
out
add
roll
clc
xchg
mov
cs
jbe
push
cld
test
ficompl
js
or
lds
sbb
cltd
je
or
pop
ret
loope
fistps
push
ficoms
lret
push
jg
fsts
push
sub
sbb
push
shr
and
cwtl
mov
sti
adc
test
dec
imul
mov
or
lock
pop
lcall
adc
mov
inc
into
pop
lret
stc
dec
jmp
bound
sub
or
insl
mov
insl
sub
repnz
testl
pushf
add
mov
inc
test
test
cmp
push
ret
jl
push
xor
adc
mov
aad
ja
aam
push
and
mov
aas
js
and
and
insb
mov
and
xchg
repnz
fwait
ret
mov
fwait
stc
das
jle
cltd
outsb
mov
rcrl
or
and
iret
testl
fnsave
lret
inc
in
into
retw
outsb
loope
sti
mov
dec
pop
push
xchg
icebp
int
xchg
gs
push
sub
pop
dec
xchg
lret
cmp
imul
cli
aam
add
jle
shlb
inc
mov
jge
add
outsl
in
fucom
and
lret
sub
arpl
adc
cli
testb
pop
jl
das
call
or
sbb
dec
mov
mov
loopne
inc
sbb
sbb
mov
dec
xor
lods
mov
sub
inc
cmp
cmp
and
lock
or
inc
adc
xchg
cmpsb
int3
aas
pop
mull
ja
xchg
adc
mov
enter
addl
jmp
pop
divl
decb
lret
outsl
mov
add
gs
into
push
sbb
mov
mov
mov
insb
jp
mov
dec
add
ret
sbb
fists
xor
adc
xor
adc
add
loopne
xor
inc
xlat
or
and
jb
idiv
cmp
lea
add
and
cmpl
mov
dec
lcall
push
bound
pop
xchg
repz
loopne
jle
aas
loopne
insl
mov
lret
pushfw
push
aaa
rcr
jbe
out
lea
cmc
fidivl
test
lea
arpl
int
shrl
mov
mov
mov
mov
adc
aam
xor
push
jp
scas
jle
lret
and
inc
and
repz
fwait
out
cmp
aaa
mov
mov
lahf
das
jbe
in
push
test
lcall
or
fiaddl
xchg
xor
shrl
std
pop
mov
and
insl
cli
mov
mov
push
jae
cwtl
sub
pop
sub
xor
push
scas
sub
icebp
cltd
or
shrb
shlb
push
and
cmp
les
dec
sbb
jmp
aas
je
push
movsl
cmp
mov
cs
dec
and
jmp
add
sub
data16
mov
int3
outsb
movsb
cmp
loop
sarl
std
pusha
mov
addr16
popa
mov
lods
stos
aam
sub
data16
inc
dec
jno
xor
and
popf
dec
outsl
xor
push
add
les
loope
std
ret
gs
mov
rcl
mov
lcall
sub
cld
adc
in
stc
hlt
outsl
pusha
fisubrs
ss
xchg
sub
dec
sub
aas
inc
fsubrs
daa
push
clc
mov
inc
loope
sbb
je
push
fwait
and
pop
inc
mov
xor
stc
mov
popa
sub
push
sub
iret
pop
pop
mov
xor
adc
or
mov
outsb
jbe
icebp
stos
cmc
test
mov
pop
sti
jno
into
stos
aam
and
add
cltd
in
push
fildl
mov
mov
icebp
sbb
pop
push
shlb
or
sub
inc
test
push
sbb
cltd
xor
add
out
add
stos
hlt
adc
orl
cmpsl
or
repz
in
xor
jle
pop
inc
or
cli
mov
insl
aam
aas
add
out
xchg
jne
in
and
aad
mov
pusha
pusha
mov
sub
pushf
insl
outsb
mov
imul
insl
inc
adc
jae
movsl
addl
sbb
mov
or
into
dec
mov
dec
jb
lods
fisttps
out
movsl
sub
and
arpl
aas
cwtl
stos
mov
jo
dec
or
mov
cmpsl
jecxz
pmulhw
push
loop
cmp
movsl
push
sahf
idiv
popl
sbb
in
lret
das
iret
xor
pushf
adc
test
or
dec
popa
pop
or
sub
push
arpl
addr16
sti
or
adc
xchg
xor
mov
arpl
sarb
sub
add
ffree
pop
xchg
in
imul
movsl
fnstsw
mov
psubusb
adc
inc
clc
xchg
leave
shrb
sbb
and
xchg
jmp
cmp
mov
mov
stos
out
sub
outsl
jbe
loop
int
lea
sub
sub
leave
push
inc
mov
dec
test
fxam
insl
mov
inc
jmp
jnp
sti
popl
shrb
inc
jae
and
cltd
out
and
clc
loop
insl
ret
push
sub
jo
xor
sub
add
in
or
mov
loopne
aas
out
or
and
aas
ss
jne
adc
out
push
iret
rol
mov
xchg
mov
fdivr
jl
xchg
adc
scas
les
test
cmc
lret
cs
mov
lret
adc
dec
notb
mov
pop
jmp
enter
mov
cmp
shll
jecxz
pop
push
lods
ret
test
add
or
push
insl
mov
push
enter
add
jle
pop
xor
xchg
push
out
jae
inc
mov
cmp
mov
hlt
addb
mov
rcrl
fwait
pop
mov
lcall
mov
or
cmpb
std
jns
xor
and
popf
neg
xlat
or
lcall
cmp
dec
fidivl
and
stos
dec
jo
shlb
leave
popf
dec
sbb
cmp
jg
sbb
nop
sub
xor
push
lret
push
mov
jle
cli
jmp
lds
mov
push
decb
in
xor
in
jns
mov
or
lds
sbb
dec
cmpsb
and
and
pop
cld
jo
cmp
popf
mov
cmp
imul
sbb
pop
and
js
sarb
shr
insb
cmp
adc
push
push
xchg
add
xchg
adc
fs
pop
mov
lds
std
push
jl
sub
xchg
mov
inc
pop
xchg
jmp
and
aaa
adc
pop
mov
test
ja
int3
lods
xchg
mov
pop
stc
push
jmp
test
mov
repz
rorl
leave
push
add
mov
out
pop
es
test
xor
push
into
and
sbbb
mov
sar
sbb
lods
fcoms
inc
fnstcw
mov
xchg
mov
xchg
or
pop
mov
gs
imul
leave
cmp
adc
jne
pop
ds
sub
rcrb
cld
inc
loop
and
mov
aaa
movsb
push
jg
lock
ror
and
adc
leave
xchg
xchg
push
jbe
call
cmp
mov
lcall
push
sub
jnp
push
adc
arpl
loopne
xchg
imul
jns
cmpsl
mov
pop
cmpsl
sbb
push
lea
add
adc
mov
js
inc
cmp
mov
sbb
xchg
and
inc
dec
dec
cmpsl
mov
es
fbstp
aad
fistpl
add
dec
mov
add
adc
jge
lcall
rcl
loop
sti
push
mov
shlb
jns
jmp
je
mov
push
lret
cmp
in
cmp
mov
ret
push
pop
mov
scas
daa
int
jp
std
cwtl
lds
fcmovb
xor
xlat
jge
xchg
insl
mov
rolb
pop
and
scas
jp
pop
add
mov
inc
aas
rcll
push
xlat
imull
imul
xchg
aaa
pusha
fwait
mov
ret
insl
add
or
stc
xchg
dec
movsl
jns
or
mov
icebp
sbb
arpl
aas
inc
lret
or
or
clc
jo
inc
scas
imul
call
mov
fistl
insb
jo
xor
data16
out
fucomip
pop
or
xchg
push
scas
enter
mov
mov
push
loope
sbb
jecxz
in
cmpsb
cltd
xchg
pop
adc
test
mov
into
mov
lods
push
ja
xchg
cmp
test
xchg
xchg
push
adc
dec
push
pop
imul
inc
pop
out
push
and
pop
xchg
sbb
sti
mov
xchg
xor
dec
insb
lahf
jae
push
xor
push
cmc
jmp
dec
dec
std
jno
out
and
mov
dec
xchg
cli
inc
nop
fcmovnbe
mov
mov
jae
das
cmpsb
xor
sbb
dec
loop
fnstsw
add
movsl
mov
loop
nop
fidivl
scas
enter
mov
in
popf
lock
pop
mov
pop
fxch
leave
je
in
insl
rclb
push
or
leave
leave
mov
mov
fildll
mov
push
push
test
jecxz
dec
dec
jnp
dec
sbb
roll
push
jne
hlt
aaa
jne
sti
lcall
movsl
out
out
mulb
push
push
stos
cmp
dec
jns
popa
movsb
hlt
xchg
xor
cmp
pusha
jbe
xchg
cwtl
out
clc
inc
imul
sarl
inc
add
and
sahf
mov
in
in
and
sbb
pushf
mov
cmc
call
cltd
or
cmpsl
push
mov
les
pop
lods
int3
enter
out
xchg
shrl
lock
stos
sbb
or
loopne
leave
pop
out
cmp
sbb
xor
in
inc
clc
and
xchg
pop
mov
ja
mov
mov
shr
int3
dec
dec
mov
dec
and
roll
fisttpll
enter
push
lods
and
sbb
stos
push
pushf
shll
fcoml
addl
pop
cmc
repnz
inc
xchg
insb
fs
sub
pop
jns
in
into
cltd
push
push
xor
loope
es
call
add
push
inc
and
jl
jl
xlat
jp
loope
xchg
sub
repnz
xor
pop
mov
jle
or
imul
stos
aam
fcoms
data16
repnz
and
jo
cwtl
jmp
popf
and
add
cld
das
xor
out
pop
xor
movb
pusha
xor
iret
mov
std
mov
fwait
cmp
cmp
jbe
aas
ret
inc
fstp
pop
es
shrb
movsb
pop
mov
and
add
aad
cmp
push
sahf
test
adc
ljmp
ror
scas
fldt
out
dec
mov
data16
ret
nop
jmp
test
xlat
mov
pushf
jle
negl
push
cmp
lret
pop
idivl
outsb
add
jb
dec
out
or
nop
enter
xlat
mov
data16
repz
jp
daa
inc
mov
shll
sbb
xor
popa
scas
out
jne
jnp
jns
divb
pop
lods
scas
mov
call
in
lahf
push
or
ffree
mov
enter
lcall
js
inc
sub
aaa
cwtl
cmc
push
dec
ja
add
push
movb
or
jne
das
mov
out
incl
xchg
jmp
push
fcoms
pop
fwait
mov
dec
and
push
dec
negl
push
dec
mov
cmp
lock
sub
and
out
add
mov
in
and
pop
jp
nop
mov
adc
mov
and
mov
cwtl
lea
sbb
cli
jle
imul
dec
mov
shll
loop
repnz
aad
mov
inc
push
cs
fwait
xlat
fistpl
rolb
ja
shrb
pop
add
idiv
ds
sbb
dec
mov
insl
cmp
stc
mov
jb
mov
cmc
fldcw
mov
mov
adc
movsb
xchg
faddl
dec
jmp
jno
inc
std
or
cli
cmp
lods
push
mov
outsb
jp
mov
mov
cmc
sbb
out
xor
cs
mov
sub
icebp
lret
adc
xchg
mov
arpl
dec
imul
imul
je
aas
subb
or
sub
mov
hlt
add
movsl
mov
js
pop
lea
sbb
mov
jnp
push
cmp
jbe
les
sbb
pop
es
pop
xor
adc
sbb
xor
clc
mov
dec
jmp
cmpl
fisubs
lret
xchg
lods
xchg
or
inc
xor
push
xchg
cmp
push
inc
jae
ret
jg
mov
das
jbe
inc
test
movsb
xchg
jle
mov
cld
dec
jno
mov
mov
jo
lea
adc
out
lea
js
and
jmp
add
das
push
or
in
inc
adc
fldl
cmp
xchg
daa
incl
push
jp
addr16
fwait
mov
iret
ss
loop
insl
fldcw
ret
mov
mov
lret
add
inc
scas
push
sahf
fdiv
in
mov
lea
inc
rclb
add
insb
fisttpll
xor
push
inc
push
inc
dec
enter
pushf
xchg
shlb
insl
push
lds
adc
cmp
xchg
inc
inc
js
mov
shl
sub
std
mov
popa
xchg
adc
add
js
out
addr16
push
adc
sbb
lock
jp
lret
inc
xchg
jmp
mov
sbb
popa
sbb
xchg
add
cmpsb
jno
lret
mov
and
jg
popf
testb
push
popa
sub
sbb
jo
xor
xor
inc
orl
jo
arpl
es
in
iret
sti
sbb
add
push
int3
and
test
mov
mov
ds
push
mov
xchg
aaa
mov
xor
sbb
xchg
xor
xchg
inc
or
mov
insb
push
xor
int3
sub
in
pop
mov
fnclex
cs
icebp
inc
fld
jmp
jp
pop
mov
dec
mov
mov
and
jle
or
xchg
lods
pop
test
dec
or
and
jmp
ljmp
pop
out
ja
jne
or
popf
or
jbe
dec
pop
sub
and
cmc
and
xor
cld
push
push
dec
fidivrs
mov
add
mov
mov
cmp
inc
mov
xor
lods
add
pop
pop
mov
sub
ds
repnz
insl
xchg
inc
sti
sub
dec
lock
insb
mov
push
sub
adc
data16
ja
mov
sbb
das
mov
pop
add
jbe
mov
imul
push
lock
add
dec
loope
insb
leave
and
push
mov
test
stos
sti
popl
or
aam
inc
mov
and
mov
sahf
ss
jns
dec
dec
mov
pop
in
jg
pop
lea
cs
shrb
push
loopne
jbe
inc
shlb
or
and
scas
xor
inc
push
jecxz
adc
mov
or
je
stos
andb
jae
jbe
xchg
fnstcw
js
scas
popa
dec
repnz
enter
xlat
out
xchg
push
dec
in
cmpsb
inc
cmp
std
test
movsl
insb
pop
sarb
mov
dec
icebp
xchg
aaa
test
add
call
pushf
in
adc
xor
or
movsb
add
push
mov
xchg
pop
dec
adc
stc
das
jne
pop
cmpsb
sub
aad
sub
jns
es
or
sub
inc
nop
xchg
xor
xchg
xor
inc
lcall
adc
mov
aas
or
add
js
sbb
jno
out
adc
pop
pop
addl
ja
push
scas
fs
add
adc
inc
ror
push
pop
xchg
out
adc
mov
mov
sbbb
cmp
aad
cltd
mov
pop
outsb
jne
icebp
cmpsb
notl
sti
mov
imul
and
or
mov
loopne
repnz
inc
xor
pushf
fdivs
lock
cmpsb
add
push
ss
and
and
push
xor
xchg
xchg
decl
fldenv
sbb
leave
jecxz
mov
dec
fucomp
fld
mov
dec
out
mov
push
stos
pop
cmp
sub
imul
jno
dec
push
call
cli
push
mov
aam
mov
shll
cmp
push
cmp
pop
cmp
jmp
or
cli
in
test
adc
dec
pop
jb
int3
icebp
and
xor
out
xchg
xchg
jmp
xchg
cmp
stc
cmp
inc
lds
adc
adc
jbe
jecxz
arpl
push
int3
pop
lods
cmc
add
addr16
scas
or
hlt
adc
cmpsb
fldcw
cmp
mov
jl
mov
push
jb
popf
insl
xlat
int
sub
fnsave
dec
into
and
in
push
inc
push
or
pop
addr16
lea
repnz
lret
or
and
jbe
push
inc
pushf
in
sbb
xor
test
test
stc
add
mov
das
adc
mov
xchg
std
fidivrs
dec
pop
pop
insb
inc
imulb
fwait
jo
insl
pop
xorl
jbe
mov
sahf
lahf
sbbl
mov
lods
jb
jg
mov
data16
pop
ljmp
xor
push
out
mov
mov
cld
jnp
sub
mov
cmp
lret
lock
push
mov
mov
xor
mov
ljmp
lret
inc
hlt
addr16
cmc
adc
jmp
in
adc
cmc
imul
xchg
outsb
int
lods
in
inc
add
jp
div
arpl
sub
aaa
or
and
xchg
mov
jmp
inc
xchg
lods
xor
loope
push
cld
es
mov
mov
ror
lock
sub
cwtl
iret
je
xor
incb
rorb
outsl
sub
lock
cs
mov
aas
sbb
adc
jbe
aaa
sbb
fsubs
jmp
ljmp
xchg
fucom
cwtl
sub
scas
cld
xchg
aaa
jbe
bound
jno
pusha
lcall
orb
imul
imul
cmpsb
and
adc
aad
imul
sti
xchg
jbe
in
sub
xchg
test
sbb
pop
call
or
xchg
sahf
jle
xor
mov
js
jo
inc
mov
icebp
fcoms
cmp
push
sahf
mov
mov
pop
inc
stos
jne
repz
xor
ljmp
movsl
add
xchg
fstpt
arpl
pop
jns
int
cmc
arpl
sahf
dec
aaa
pop
inc
aad
clc
and
xor
push
sub
jno
shl
pop
fstpl
push
clc
loopne
pop
lahf
ret
ret
mov
xchg
push
jae
ss
aas
xchg
fisubs
xchg
out
insl
sbb
adc
jp
lcall
out
movsb
inc
mov
inc
sub
and
fistpll
adc
test
pop
push
mov
xchg
mov
call
cmp
mov
or
xchg
idiv
in
jecxz
lcall
add
jbe
push
movsl
inc
jae
mov
sahf
lods
ret
aam
popf
push
mov
cmp
mov
sbb
fisttpl
or
sbbb
jnp
fucomip
mov
or
pinsrw
lods
sbb
pushf
inc
in
add
aad
ja
cli
dec
repz
sub
out
inc
divb
and
jmp
jae
adcl
in
test
cmp
mov
mov
jne
rorb
ror
mov
push
push
in
mov
inc
mov
das
push
insb
fcmovu
dec
xchg
call
imul
sti
aam
sbbb
push
sub
push
aas
insl
addb
pop
div
mov
push
fcomi
cmpsl
hlt
lret
leave
stos
dec
mov
in
add
and
pop
sbb
out
dec
inc
fmul
sahf
bswap
pop
mov
xchg
xchg
sub
fstpl
or
sub
jae
xchg
mov
and
xor
pop
cmpb
adc
scas
mov
pop
lods
jne
outsl
inc
addr16
inc
icebp
push
xor
adc
jno
mov
jnp
sub
inc
cmp
mov
push
ljmp
stc
mov
sbb
mov
into
cmp
lods
xor
mov
dec
psrld
leave
test
repz
dec
out
cmp
push
push
clc
mov
cmp
test
es
cmp
lcall
push
cmp
push
push
pop
mov
sbb
mov
push
pop
or
push
stc
outsl
cmp
adc
stc
dec
ja
mov
mov
insl
mov
hlt
aas
mov
vmread
ds
repz
or
in
loop
insl
je
or
cld
mov
inc
mov
sub
push
mov
inc
out
cmp
fwait
test
mov
xchg
imul
test
and
ljmp
imul
sbb
pop
mov
faddl
mov
inc
cmp
test
lret
loopne
push
mov
add
lahf
pop
xor
dec
mov
stos
mov
imul
clc
in
lahf
mov
shrl
jns
inc
sahf
jnp
out
imul
rcl
sbb
sub
jbe
and
cld
xchg
xchg
and
in
lea
fwait
insb
sub
cmp
or
sub
test
sbb
cmc
push
adc
adc
std
pop
mov
aad
adc
mov
and
sbb
mov
lea
clc
add
pop
cmp
add
and
repnz
mov
test
sbb
lea
xchg
mov
dec
xor
dec
jl
cmc
adc
mov
inc
sahf
rcr
mov
xor
movsb
mov
xchg
sbb
lods
cmp
stos
mov
std
xchg
popf
aad
data16
shr
mov
ljmp
roll
and
mov
popa
lods
xbegin
xchg
add
pop
jecxz
xlat
xchg
cmp
mov
xor
sbb
or
daa
pop
and
or
lret
push
lods
jmp
inc
test
push
cmp
pop
mov
add
or
xor
rclb
fs
lock
xor
mov
je
out
cmp
sub
in
push
fnstsw
mov
add
adc
js
sbb
in
mov
sahf
add
add
xchg
cmp
jl
mov
call
outsl
divb
mov
daa
or
or
mov
repnz
inc
ficompl
fsubs
and
out
dec
pusha
sti
loope
rol
int
outsb
mov
out
adc
lea
rcrl
test
xchg
adc
popa
pop
stos
popf
mov
xor
push
popf
mov
jmp
outsl
int3
add
mov
js
ficomps
jno
or
jne
mov
cmp
mov
push
dec
cmp
cli
or
clc
outsb
jp
scas
call
fcmove
lret
fbld
ret
insl
jecxz
sub
push
push
pop
push
orb
push
push
inc
jmp
testl
or
jmp
mov
divl
lret
fldt
xchg
int3
mov
pop
sbb
out
pop
sbb
aam
add
inc
adc
and
xchg
add
scas
in
dec
xor
inc
shr
xorb
sub
enter
mov
fistpll
scas
insb
fisttpl
mov
push
pop
xor
xchg
outsb
push
lea
sarl
cmp
jmp
loop
jle
adcl
outsb
out
loopne,pn
adc
mov
fidivs
fistpl
dec
mov
sarb
and
add
fcompl
xor
addr16
adc
mov
mov
pusha
mov
push
sti
xchg
xor
ljmp
addr16
mov
inc
shll
subb
cmpsl
cli
push
out
mov
jp
lds
orl
xchg
cmp
outsl
mov
hlt
scas
pop
xchg
xor
shrb
sbb
dec
cmp
sbb
js
fnstenv
cmp
adc
lahf
outsl
roll
pop
mov
xchg
lcall
test
sub
pop
add
dec
sub
stos
in
inc
in
icebp
mov
repz
mov
in
pop
sub
adc
push
jo
pop
fsubl
cmp
aam
mov
nop
loop
scas
xchg
sahf
and
mov
lea
js
push
pavgb
cmp
loope
outsl
mov
hlt
cwtl
repz
adc
out
jge
loope
lea
lock
mov
sbb
xlat
cmpsl
icebp
je
outsl
cltd
sti
mov
ss
jle
mov
sub
xchg
xor
lods
add
xchg
pop
mov
test
mov
mov
leave
add
dec
pop
dec
nop
push
or
fucomip
aam
icebp
add
sub
mov
xor
mov
jp
bound
pop
es
sub
repz
sub
push
sbb
inc
or
cmp
mov
sbb
pop
outsl
mov
in
pushf
cwtl
je
fiadds
mov
inc
pop
movd
scas
je
lret
jle
xchg
push
lcall
xchg
pusha
mov
pop
and
inc
sarb
pop
arpl
adc
pop
enter
xor
std
sbb
push
inc
mov
mov
dec
or
push
add
pextrw
xor
aaa
repz
cmp
lcall
fwait
mov
enter
jecxz
jno
sub
and
jnp
mov
mov
mov
push
jbe
test
loopne
mov
repz
imul
mov
les
lahf
sub
pshufw
pop
mov
clc
iret
sub
cmp
xlat
stc
fistpl
xchg
sub
arpl
push
xchg
inc
xchg
mov
pop
pop
adc
mov
popa
lcall
fs
movsb
dec
lret
bound
add
xor
pop
mov
fcmovnbe
repz
test
sub
mov
xor
cmp
arpl
or
sbb
ja
sbb
outsl
ljmp
fdivrs
fxam
lods
adc
mov
out
in
adc
lret
mov
dec
fsubs
mov
mov
xor
mov
out
jg
jbe
mov
arpl
mov
mov
aad
mov
insb
inc
or
shrl
adc
sub
push
out
sbb
test
repz
inc
rclb
jno
mov
repnz
hlt
push
dec
insl
xor
or
xor
rorl
andb
out
es
dec
cmpsl
ret
inc
arpl
or
push
out
adc
xchg
push
mov
ja
sbb
jp
push
outsb
in
sbb
push
pop
adc
rcrl
sahf
or
xchg
addr16
and
insb
ss
xor
add
push
inc
inc
pop
mov
scas
jb
and
mov
mov
je
fcoml
cmpsl
sub
ror
enter
das
in
push
xor
sub
xorb
leave
mov
sbb
jg
shlb
dec
pop
push
lds
das
or
aam
pop
hlt
sbb
mov
insl
into
pop
mov
ficomps
aas
xor
rolb
mov
out
push
lcall
pop
sbb
inc
cmpsl
out
cmc
xor
sbb
test
xor
insl
ffree
adc
add
iret
aaa
je
jle
inc
or
push
pop
mov
int3
inc
ret
popf
ficomps
out
adc
xlat
rcll
iret
fmull
mov
mov
mov
jmp
int
push
popa
sti
mov
pop
mov
push
jmp
or
stos
add
std
fidivl
outsl
or
or
jge
mov
stos
test
fadds
sahf
flds
lea
cmp
xchg
jl
arpl
pop
leave
cmp
fsub
pop
out
ds
aad
jle
filds
and
and
std
sbb
mov
stc
adc
push
out
inc
scas
push
mov
ret
insb
data16
xchg
dec
lods
daa
daa
pop
in
mov
sahf
cmpsl
mov
lcall
lds
in
jno
sub
in
cld
adc
pop
call
sbb
aas
test
sbb
icebp
orb
negb
lahf
pop
fdivr
xor
loop
rcr
or
cmpsb
ja
outsl
adc
mov
xor
cmp
push
mov
ja
inc
push
xchg
inc
test
inc
xor
loop
pop
fistpll
sub
jb
push
imul
pushl
jae
dec
mov
cli
jp
ret
mov
orb
jg
arpl
pop
push
adc
aam
cmc
lcall
fstl
adc
jmp
lret
std
cld
xlat
hlt
inc
dec
fidivrs
movsl
xchg
scas
int
out
xchg
sbb
fmull
arpl
cmpsl
xlat
or
mov
and
lea
test
pop
idivl
push
pcmpgtd
add
pop
jo
and
fcmovnu
aaa
mov
or
mov
outsb
xor
xchg
fbstp
mov
jl
adc
or
sub
js
out
cmpsl
or
mov
xchg
jne
pop
movsl
cmp
in
sbb
addr16
and
or
adc
jge
scas
mov
mov
cmp
lods
xor
iret
jge
cmp
in
icebp
sub
in
pop
xchg
push
rclb
jl
aam
orl
fldenv
addr16
inc
jl
scas
pop
mov
movb
fnsave
scas
mov
push
cmpsl
cmp
pusha
int3
mov
pushf
pop
pmaddwd
dec
fisubl
sub
loop
shll
add
cmp
push
inc
xchg
dec
in
sbb
mov
rol
popa
sub
mov
cmp
in
mov
push
outsb
or
cmpsw
sbb
push
push
fwait
adc
jge
mov
pop
fidivl
leave
incl
fnstsw
cld
adc
and
ja
mov
push
popf
dec
mov
pop
sbb
lret
nop
stos
aaa
lcall
insl
idiv
cmpsl
push
ficoms
xchg
jae
stos
fimull
sub
mov
cwtl
jmp
repz
insb
arpl
test
lods
jecxz
cmp
loopne
adc
gs
imul
add
popa
push
ret
nop
lret
arpl
mov
arpl
jg
mov
sahf
aaa
dec
mov
lods
cmpsl
inc
std
xchg
shlb
pop
daa
les
popa
and
enter
fimull
adc
les
mov
lret
shr
mov
ficoms
call
lods
push
call
xchg
mov
push
and
mov
mov
ljmp
inc
mov
mov
inc
out
dec
aas
or
fdivrs
lcall
mov
fisttpl
xlat
sbb
nop
push
fsubr
out
lahf
push
push
add
out
adc
aas
add
add
fstpt
out
mov
jle
pop
xchg
cmp
mov
add
mov
jl
and
popf
lret
adc
mov
pop
jp
ret
out
xchg
adc
or
mov
filds
dec
xchg
inc
cld
pop
fnstcw
sub
sub
loopne
and
or
jae
mov
fwait
test
add
cmp
mov
insb
das
in
mov
or
dec
std
cwtl
pop
push
mov
fisubl
ss
mov
sub
add
ds
out
xor
inc
into
ret
dec
fistpl
enter
aas
cmp
cld
int3
idivl
adc
addl
adc
jbe
dec
out
fisubl
inc
call
rcrl
jno
cmp
pop
sbb
mov
cmp
aam
fstpt
add
ds
mov
cwtl
icebp
sbb
repz
xor
enter
stos
testl
cmp
cld
adc
fsubl
pushf
in
push
sub
push
cmp
sahf
fmull
mov
add
sti
frstor
mov
loop
and
insl
ja
jg
movsb
rorl
and
mov
mulb
in
dec
mov
cmp
test
jns
inc
or
fadds
sbb
xor
inc
lods
xchg
push
xchg
pop
xor
add
test
jbe
dec
xor
inc
cld
mov
dec
cltd
fadds
push
sbb
lcall
cs
loopne
lods
cmp
sbb
gs
xor
sahf
shlb
lods
fildll
dec
sahf
xchg
add
adc
mov
pop
test
adc
subb
mov
cmpsl
sahf
stc
push
in
xor
jge
cld
push
cld
pop
lret
or
add
loop
pushf
pop
imul
popa
xor
aam
enter
adc
popl
dec
fs
es
jnp
orb
mov
xchg
insl
pop
loopne
popf
loope
sub
xchg
call
popf
mov
mov
dec
or
mov
xor
push
clc
sub
ss
xchg
data16
mov
rcrb
mov
fsubs
sbb
or
pop
push
les
stos
dec
jno
jo
adc
jae
stc
cmc
fisttpll
imul
ds
lods
dec
mov
aas
mov
mov
cmp
xchg
xchg
cmp
xor
or
inc
add
sar
jnp
dec
add
sbbb
cltd
ret
or
push
adc
pop
out
pusha
push
sahf
scas
mov
ljmp
pusha
stc
movzbl
sub
fmull
roll
jo
cmp
bound
ja
outsb
mov
and
pop
scas
fcmovnu
sarl
xchg
out
addr16
cwtl
movsl
mov
sahf
cmpl
add
outsb
imul
pop
out
out
loop
rcrb
ss
repnz
cltd
jp
movsb
je
insl
inc
mov
cmp
jo
jo
sbb
cmp
ret
inc
into
add
jle
sar
popf
add
sar
std
xchg
in
inc
push
xor
mov
mov
jae
cwtl
out
mov
xor
dec
mov
adc
jbe
or
out
scas
mov
and
out
pop
lea
shlb
cs
aam
mov
movsb
sub
jmp
sub
cmp
stos
fisubl
test
jnp
mov
fwait
sub
xor
shll
and
sub
negl
cltd
jecxz
inc
cmp
xchg
aas
loop
sub
xor
stos
jge
sub
jle
in
in
mov
es
fwait
test
and
push
outsl
pop
jnp
cmpsb
adc
fistl
mov
aad
inc
daa
mov
add
mov
cmpl
scas
cmp
fistpl
sbb
cmpsb
lret
xorl
sbb
or
push
xchg
xchg
or
jns
cltd
mov
adc
jmp
into
call
and
addr16
jg
clc
and
adc
jle
gs
lret
mov
mov
into
fwait
movsb
cs
aas
fnstsw
loop
dec
inc
push
adc
das
push
test
fwait
cmp
iret
inc
sub
mov
outsl
mov
jb
mov
or
pop
es
jmp
cmpsl
sbb
daa
push
js
aam
dec
or
aad
pusha
mov
dec
sub
out
in
cmp
insl
sti
stos
xor
mov
lret
xchg
loop
dec
or
lods
cmp
xchg
shrl
mov
sbb
adc
sub
out
repnz
cmp
hlt
jb
push
icebp
nop
sub
mov
or
faddp
pushf
push
pop
mov
out
xor
pop
push
mov
dec
and
cmpsb
pop
faddp
fs
push
cwtl
arpl
mov
or
js
adc
lods
xchg
dec
or
ret
xor
inc
out
mov
push
sub
out
sub
aam
jae
fwait
mov
ret
xchg
cmp
push
int
imul
inc
xlat
sub
repz
jno
jge
add
push
aaa
orl
gs
pop
or
outsb
mov
mov
xchg
xchg
call
or
jae
mov
inc
xchg
adc
inc
notb
fmull
pop
dec
sti
shlb
fstps
fcompl
cmp
jmp
and
gs
adc
mov
out
dec
pop
lret
dec
fistl
test
inc
shll
aaa
adc
repnz
dec
adc
je
sbb
xchg
add
nop
enter
xchg
jb
and
mov
inc
add
pop
inc
jo
adc
sub
add
and
stc
push
xor
mov
xchg
std
adcb
adc
jae
imul
xchg
shlb
es
dec
stos
inc
jge
bound
dec
cmp
adc
call
mov
jg
call
std
mov
stos
scas
pop
imul
inc
xchg
fdivrs
in
pop
pop
in
clc
xchg
in
push
xchg
adc
pushf
insb
xchg
jg
push
test
mov
lahf
ss
insl
ja
in
out
add
sbb
int
fimuls
in
inc
scas
sub
mov
std
faddl
mov
adc
repnz
cli
xor
push
loopne
sub
in
xchg
imul
mov
mov
int
jnp
push
fisubrl
ds
dec
add
stos
mov
js
ror
movsb
sub
or
and
xor
aad
inc
into
lahf
xchg
pusha
push
pop
inc
rolb
inc
mov
in
pusha
lcall
or
test
lcall
out
subb
idiv
mov
xchg
xor
shll
jne
addb
ficomps
jl
xlat
mov
cmp
popa
dec
and
and
stc
lret
iret
negl
mov
cltd
lahf
cmc
dec
mov
inc
mov
lea
test
jmp
lcall
xchg
rcll
stos
push
jp
pop
lock
lods
jge
mov
mov
shr
dec
dec
xchg
and
or
out
pop
imul
cmc
cmp
jns
xchg
cmp
pop
pop
mov
jne
dec
mov
fisttpl
jp
push
loope
lds
add
enter
mov
xor
cltd
popf
les
repnz
mov
sbb
jp
and
cli
cmc
cmpsb
mov
or
pop
xchg
cmp
adc
out
inc
mov
js
inc
in
jo
xor
and
cmpsl
xor
push
sub
cmpsl
dec
xlat
lock
jae
pop
jl
mov
in
mov
stos
pop
xchg
mov
clc
movsl
xor
xlat
jle
jg
add
mov
out
aaa
rcrl
dec
add
xchg
imul
cs
sub
mov
or
sub
dec
and
jmp
jl
xor
xor
cmp
rcrb
orb
stos
movsl
mov
cwtl
dec
loop
fists
push
stos
push
sub
stos
or
pop
jno
push
aaa
inc
mov
out
xor
scas
nop
rorl
ficoms
and
xchg
sub
jae
xchg
cmp
sub
jle
push
add
jmp
mov
inc
sub
add
jb
mov
push
jle
outsb
std
repnz
lcall
pop
push
sbbb
mov
or
js
dec
sbb
or
cmpsl
xor
sub
xchg
pushf
lret
mov
sub
imul
das
jp
shll
mulb
mov
mov
repz
push
mov
ror
pushf
jns
sbb
cmp
mov
pop
icebp
mov
jnp
leave
sbb
or
mov
push
gs
xchg
xchg
das
icebp
jo
ret
movsl
out
roll
sbbl
adc
lcall
pop
cmp
mov
daa
loopne,pt
pop
bound
push
xchg
xor
icebp
fldt
pop
mov
jle
jecxz
ret
mov
xchg
std
cltd
subl
in
dec
pop
jp
add
xor
jecxz
das
lret
shlb
adc
stos
adc
mov
in
mov
push
dec
push
xor
push
cmpsl
imul
xchg
lret
mov
push
jl
or
and
mov
iret
leave
pop
mov
test
inc
iret
xlat
and
data16
lods
lret
mov
aaa
out
lods
cmovp
sbb
jns
mov
xchg
mov
imul
std
jno
movsb
scas
mov
xchg
inc
xchg
sar
sti
xchg
adc
sbb
das
popa
add
xor
or
mov
mov
push
outsb
inc
icebp
push
dec
divb
dec
in
jl
mov
jp
lcall
or
xchg
lds
xchg
or
stos
loop
int
cmp
sub
xchg
sub
popa
sahf
ds
enter
fstpl
xor
mov
fidivrs
cmp
dec
sbb
mov
add
into
cmp
insl
push
jmp
pop
mov
ja
test
ret
jno
fdivrl
xchg
fs
loop
or
mov
sbb
mov
push
icebp
mov
xchg
gs
xlat
push
xorl
fstpt
js
stos
test
outsb
push
adcb
and
jmp
popf
nop
or
jg
cs
or
fstp
xor
cmp
jns
cmp
jns
movnti
loop
fidivrs
lds
adc
test
gs
lret
fwait
pop
enter
xchg
mov
add
int
mov
sub
mov
pushl
pop
or
push
std
xchg
add
pop
cmpsl
add
js
daa
sub
jno
mov
jp
push
cmp
lret
pop
push
daa
shrb
push
notl
add
adc
xor
adc
push
mov
lds
xchg
push
pop
mov
pop
pop
sub
enter
add
dec
fmull
dec
cmpsl
and
push
xor
out
add
cli
or
lds
fmull
mov
cmpsb
sub
dec
std
sahf
sbb
inc
sub
dec
jp
sbb
xchg
inc
std
cs
pop
stos
xchg
sbb
mov
movsb
sbb
lahf
pop
loop
push
les
loopne
fadd
adc
cwtl
push
jecxz
xchg
dec
push
add
shll
popw
add
sub
loope
xor
insl
jno
loopne
pop
mov
sbb
or
and
dec
pop
lock
dec
into
jecxz
fisubrl
adc
and
aas
aam
xor
sub
ror
jge
jno
inc
add
fdivl
in
mov
gs
imul
and
shrb
push
clc
pushf
fadds
rcl
out
mov
leave
aad
jecxz
and
test
jmp
dec
sarb
arpl
xchg
cltd
jo
and
pop
loope
ja
or
aad
mov
popf
sarl
enter
push
sbb
lods
lcall
pop
in
fisttps
out
xor
clc
mov
inc
rcrl
movsb
ljmp
loope
push
aas
cmp
jae
mov
sti
cltd
test
pop
pop
adc
leave
xchg
or
cmp
les
dec
sub
add
mov
sbb
mov
sub
mov
gs
in
pop
leave
mov
lea
testl
in
sub
pop
add
mov
cmp
and
push
xlat
rolb
push
cmp
rcrb
into
js
stos
and
xchg
aas
cld
jno
mov
mov
jb
test
ja
or
sub
xchg
and
fimull
in
dec
push
fldcw
cmp
arpl
adc
in
xchg
mov
mov
xlat
mov
add
inc
mov
dec
jl
inc
fwait
popa
xchg
cli
out
data16
das
jecxz
and
cwtl
mov
fcompl
clc
add
mov
mov
sbb
or
or
pop
push
rcrl
mov
sbb
jno
mov
dec
ja
in
and
jp
xor
imul
inc
outsb
lea
add
mov
jmp
cmp
mov
jne
imulb
rolb
pop
lcall
cmp
mov
cmp
cmp
mov
cwtl
testl
dec
dec
cwtl
dec
les
cmc
shlb
mov
int3
repnz
push
xchg
xor
cmc
lcall
cmp
mov
mov
push
insl
fstps
out
mov
in
sbb
fists
fbstp
pop
mov
xor
aaa
xor
mov
fsub
cmp
push
pop
push
add
subl
in
fsts
jae
dec
movsl
or
mov
sub
in
pop
adc
neg
cs
adc
cmp
sub
pshufw
or
inc
jge
dec
test
inc
mov
call
jns
jae
xor
mov
pushf
push
dec
test
andl
push
pushf
jo
mov
or
dec
adc
sub
mov
iret
das
test
dec
lcall
and
shl
ret
mov
in
xlat
dec
mov
setae
ret
or
inc
insl
stos
xchg
push
lods
cs
mov
xorl
jnp
jp
xchg
sti
mov
jo
dec
xor
ret
ficoml
mov
sbb
pop
lds
sahf
cmpsb
hlt
test
mov
jge
movsb
sub
mov
xor
jg
mov
fs
pop
dec
cmp
inc
mov
xchg
shr
sub
or
stos
fnstenv
lret
adc
xchg
mov
arpl
cmp
scas
xor
push
ret
jg
mov
in
push
cmp
into
ds
in
sbb
mov
insl
mov
xchg
inc
int3
xor
loopne
mov
xlat
out
mov
xlat
iret
fsubrp
mov
lret
add
fcoml
lea
aas
xchg
sub
sti
ficompl
popf
xchg
push
jae
dec
iret
idiv
sub
sub
sbb
xor
cmpl
dec
sbb
outsb
sbb
sarb
mov
outsb
popa
xor
ret
in
aam
add
and
add
testl
sbb
inc
lahf
xor
inc
sbb
cmp
cwtl
rclb
sbb
inc
pcmpgtb
movb
cltd
data16
int3
ljmp
xchg
push
xchg
int3
push
cmp
push
ret
jnp
and
pushf
mov
inc
scas
and
mov
mov
jp
imul
or
push
aam
lods
jae
loop
xchg
mov
andl
sub
push
sahf
jmp
lock
aad
ja
or
sahf
aaa
mov
loopne
incl
dec
cmpsl
nop
xchg
and
add
mov
ss
jb
jns
in
test
pop
fs
leave
sbb
dec
jno
pop
loop
int3
lods
je
mov
imul
aaa
push
mov
mov
mov
add
das
lahf
nop
cmp
mov
xor
lret
out
enter
mov
cmp
sahf
xlat
fimull
and
cmp
xor
push
test
call
and
mov
xor
mov
popa
sub
jno
sbb
imul
push
fstpl
push
jmp
push
mov
hlt
popa
in
mov
popa
add
andb
xor
pop
jae
xorb
push
mov
xor
pop
dec
arpl
mov
dec
sahf
ljmp
pop
loope
nop
sbb
mov
push
sti
pop
outsl
push
addr16
call
add
scas
inc
aam
repnz
fisubl
test
add
pop
inc
icebp
pop
imulb
adc
mov
jg
in
sub
pushf
mov
mov
int
pop
sbb
push
mov
insl
ret
mov
and
cmp
ds
xor
pop
push
adc
idivb
mov
cmp
push
jb
cmpl
xchg
addr16
push
fsts
adc
mov
int
ror
out
data16
mov
xor
rsqrtps
dec
in
cmp
push
fnstsw
sbb
add
repz
into
pop
mov
nop
pop
jbe
mov
cmc
dec
pop
mov
push
ret
and
jle
jecxz
xchg
jge
add
pop
movsb
cmc
imul
ljmp
fidivrs
sbb
ret
imul
frstor
iret
lock
push
bnd
cmc
in
decb
sub
das
cmpl
sti
cld
mov
push
adc
lcall
mov
push
sbb
es
shr
icebp
popf
cmp
mov
addb
hlt
dec
les
cmp
mov
test
xchg
jae
pop
int
fstps
pop
inc
fcmovnbe
shl
scas
jae
dec
or
scas
inc
ret
insl
mov
scas
mov
in
adc
out
outsl
out
rolb
sti
cmc
ret
push
call
push
dec
fs
sbb
out
insb
and
jg
fstps
aas
cmc
sti
pop
mov
push
bound
insb
movsb
push
js
and
shrb
loop
push
iret
mov
xchg
nop
outsb
dec
push
dec
hlt
repz
and
sbb
data16
lahf
rcrl
inc
int
jbe
shr
or
rolb
int
inc
and
or
push
fisubl
mov
rclb
je
adc
pop
push
insl
sti
lret
adc
cmp
fdivl
sbb
cmp
xchg
sub
or
stos
xchg
adc
mov
push
push
push
push
test
jno
adc
test
out
mov
jge
cli
fstps
or
jbe
std
mov
mov
jge
popa
cwtl
push
ljmp
add
push
pop
dec
sahf
sub
xchg
sbb
pop
push
push
lods
mov
mov
lods
loope
xchg
xchg
mov
adcl
popa
roll
scas
dec
lret
rcrl
sbb
pusha
cmp
push
inc
sub
push
cmp
jecxz
ja
rcrl
jbe
test
std
repz
dec
dec
outsl
sbb
cmp
in
push
adc
data16
xor
jns
pop
add
jnp
shll
mov
loopne
arpl
call
xchg
ljmp
pop
jb
xor
shr
rcrl
adc
adc
mov
sbb
popf
ljmp
ficoms
loop
std
mov
call
mov
mov
or
int
inc
sub
mov
fsubrs
shll
mov
jmp
inc
pop
ret
andb
jp
mov
js
int3
add
loop
push
add
scas
shl
aad
cmp
pop
sub
xchg
outsb
xor
test
push
mov
mov
sbb
jp
xor
inc
mov
test
add
or
pop
push
nop
mov
mov
cmp
les
dec
mov
pop
mov
daa
lds
mov
jmp
jge
fstpl
push
stos
pop
pop
fwait
cmp
out
lret
loope
xchg
mov
shll
inc
pop
test
xchg
inc
movb
popa
jns
push
mov
push
xchg
cmp
arpl
inc
rclb
pop
mov
fcmovnu
std
ret
add
jecxz
sub
popa
rol
adc
movsl
adcl
xor
inc
cmp
mov
xor
mov
subl
fsincos
inc
sbb
fldt
lods
sub
popa
sub
cmpb
or
dec
dec
clc
push
add
jmp
mov
mov
inc
nop
inc
in
insb
jo
jmp
cmp
mov
sbb
imul
lods
push
leave
fsubrl
leave
mov
cmp
in
mov
icebp
mov
clc
lahf
incl
sbb
xchg
mov
sbb
in
dec
fnstcw
mov
out
or
adc
cli
inc
inc
jae
sbb
out
in
mov
sbb
jmp
pushf
rcr
xor
arpl
sbb
sbb
fcmovnb
je
popf
mov
mov
clc
rorl
inc
mov
ret
adc
aas
xor
xor
cld
rorb
mov
pop
arpl
arpl
inc
popf
xchg
lret
arpl
cmp
popa
scas
test
testb
inc
shll
imul
lods
inc
push
push
push
mov
out
iret
sbb
test
adc
sbb
clc
daa
test
xorl
xor
out
mov
movsl
jmp
popf
fistps
push
into
ljmp
fadd
cmp
dec
adc
push
sub
out
stc
xor
leave
mov
adc
rcrl
lea
cmpsl
aaa
aad
and
or
divb
fimull
mov
idivb
cltd
dec
dec
gs
mov
add
rcrl
push
pop
in
mov
movsl
jae
iret
and
or
and
enter
pushf
adc
out
mov
in
or
in
pop
decb
cmpsl
mov
cmpl
sbb
aaa
xchg
mov
dec
xchg
dec
in
xchg
adc
push
int
inc
mov
ljmp
sbb
xchg
sarb
pusha
or
cltd
push
add
test
in
popa
cmc
addr16
in
fdiv
aad
test
mov
sbb
xor
scas
jg
stos
dec
and
lods
ret
xchg
inc
and
das
movsb
xlat
or
mov
jnp
pop
push
addr16
icebp
sub
nop
ja
int3
shll
pcmpeqw
test
adc
pop
push
xor
idivb
xchg
xchg
pop
jns
sbbb
aaa
sbbb
mulb
xchg
mov
scas
das
mov
jo
mov
xor
cmp
hlt
mov
lock
inc
pop
jne
mov
jae
stos
push
xor
add
insl
mov
mov
nop
and
push
dec
in
push
call
ljmp
push
cmc
xchg
in
int
out
inc
jb
cmpsl
ret
xlat
xor
mov
mov
sub
inc
nop
push
lahf
pop
xchg
imul
fisttps
pop
je
push
sbb
ljmp
xor
jb
sbb
ret
andb
test
xchg
adc
ret
pop
mov
push
ret
cmpsb
xor
push
or
mov
adc
cmp
pop
lret
hlt
add
das
cli
addb
mov
cmp
and
dec
mov
adc
nop
mov
bound
adc
scas
sub
sbb
test
dec
and
pop
int3
mov
dec
xchg
in
into
aam
mov
cmpl
mov
jg
pop
leave
cwtl
cmc
sub
adc
or
xor
hlt
je
push
js
dec
dec
xchg
iret
enter
mov
ljmp
mov
repz
lea
inc
jb
cmp
in
add
adc
subb
sub
mov
repz
pop
mov
xor
fs
lret
dec
inc
daa
dec
pop
repnz
and
mov
adc
lcall
xchg
daa
mov
pop
inc
xchg
lds
push
lods
mov
or
pop
jl
cmp
mov
mov
sub
into
in
inc
lahf
pop
mov
orl
mov
sbb
cltd
jns
and
and
sub
pop
push
dec
insl
mov
push
aas
cld
pop
cmp
fcmove
and
enter
in
push
sbb
pop
mov
cmp
push
leave
rolb
fsubr
jl
nop
lahf
cmp
xchg
mov
inc
fiadds
push
cltd
add
lods
xchg
mov
mull
adc
mov
cmpsl
dec
in
fs
ficoms
dec
adc
outsl
sub
sbb
mov
and
pop
sbb
test
push
in
pop
lea
push
adc
shlb
shr
mov
dec
popf
or
gs
pop
std
cld
push
ret
jne
xor
cmp
fidivs
cmc
sub
or
push
shlb
mov
rorb
jge,pn
mov
mov
xor
pop
das
cwtl
mov
es
in
cli
hlt
inc
test
mov
cmp
lds
hlt
pop
std
push
aam
mov
xor
popa
mov
insb
xchg
idivl
xchg
xor
xchg
mov
std
loopnew
daa
mov
xchg
stc
inc
imul
pop
sub
rolb
mov
push
inc
inc
or
or
loopne
decl
push
mov
jnp
lahf
pop
mov
jnp
mov
pop
and
fisttpll
adcb
pop
pop
mov
sti
ret
cmpsb
out
mov
popf
test
mov
outsl
and
cmp
sub
mov
test
adc
sub
jp
les
and
lret
insl
scas
pop
xchg
mov
jo
sti
out
es
leave
inc
push
lods
dec
push
xchg
mov
jmp
aad
add
jge
test
sub
cmp
hlt
pop
jo
xlat
ja
cmp
js
pop
inc
stc
imul
rcrl
repz
mov
mov
push
mov
jp
and
imul
mov
sbb
cmp
sub
and
jecxz
sub
sbb
imul
aam
sbb
out
aaa
mov
xor
mov
xchg
cltd
adc
mov
xchg
scas
pop
xchg
cmp
or
in
xor
sbb
dec
fmulp
push
popa
mov
loope
pop
sahf
dec
inc
out
mov
fidivs
xchg
xor
sahf
mov
mov
pop
std
sub
ret
jle
adc
mov
jg
mov
sbb
shrb
mov
inc
repnz
out
cmp
pop
mov
aam
sbb
out
shrl
fs
jb
dec
addr16
mov
mov
fldl
mov
add
add
clc
and
mov
push
or
or
push
jge
add
aam
inc
mov
dec
pop
inc
idivb
lret
mov
pop
rcrl
mov
aad
icebp
lret
cmp
sbb
emms
mov
call
jp
idivl
xchg
push
cld
data16
lret
andl
std
cmpsb
xchg
dec
fcomp
popf
mov
or
mov
dec
sub
xor
xchg
jp
mov
push
roll
ror
stos
and
jecxz
sub
mov
adc
pop
cs
shrb
leave
cltd
or
adc
or
sahf
in
testl
dec
or
lea
inc
lahf
fcmovb
push
div
adc
pop
inc
cs
fwait
arpl
mov
xor
push
das
dec
xchg
stos
add
jmp
or
and
cs
int3
orb
and
jp
and
sub
popa
mov
cli
jbe
in
ret
cld
sbb
jb
mov
cwtl
rorl
arpl
sbbb
inc
outsb
and
sbb
mov
lea
add
and
in
out
pop
les
scas
or
pop
fisttpll
sti
pop
mov
sub
lods
and
sti
pavgb
sub
popa
pop
push
addr16
test
jne
xlat
cmpsl
cmp
out
jae
scas
push
sbb
pop
xchg
sub
sbb
jmp
pop
mov
fnstsw
lds
rol
aas
or
pop
add
sub
xchg
fsubr
push
sbb
es
push
fiaddl
btl
adc
sub
mov
jmp
add
movsl
sub
push
into
jns
mov
mov
mov
push
ss
fnstsw
nop
jp
inc
shrb
cmpsb
jae
sahf
xchg
lret
ret
xchg
add
sub
aas
adc
push
push
insb
or
test
ja
inc
roll
jg
popa
lods
cmp
dec
ds
or
xchg
ja
jmp
jmp
add
dec
mov
imul
mov
inc
mov
ss
nop
ss
dec
ja
push
inc
sbb
shll
dec
xor
out
call
sub
cmpsb
fstps
aam
sub
mov
mov
cmp
dec
pop
outsb
and
adc
insb
ret
xchg
fdivs
inc
and
xchg
in
sub
enter
mov
clc
mov
jo
rcrl
jmp
int3
hlt
adc
jp
mov
and
test
adc
jg
pop
adc
inc
ja
imul
xor
inc
push
mov
fsub
in
jns
inc
popa
data16
adc
cmp
add
outsb
ret
icebp
mov
sbb
fsubp
cmp
lcall
inc
addr16
daa
lea
adc
stos
inc
mov
xchg
and
xor
mov
out
mov
fsubrs
mov
test
cmp
in
jb
aam
mov
aas
loopne
popf
dec
xchg
sbb
or
add
inc
clc
imul
sbb
mov
inc
push
mov
out
divps
hlt
jns
or
lcall
rcl
adc
cmp
cltd
daa
cmp
xchg
dec
mov
ret
stos
gs
scas
dec
ja
loop
push
repz
cmp
stc
push
in
inc
pop
pop
xchg
lahf
sarl
mov
pop
adc
ficomps
sbb
mov
mov
lahf
mov
jnp
sub
cmpsl
enter
lcall
cmp
xor
pop
mov
sbb
pop
decb
push
das
loop
out
fstl
mov
cltd
push
push
jle
add
dec
ret
adc
popl
pop
xor
jmp
jne
xor
and
pop
daa
dec
or
pop
jecxz
loopne
dec
stos
sbb
movl
sbb
clc
mov
popa
fiadds
ds
testb
and
cli
mov
cmp
xor
jne
std
push
out
jp
addr16
jge
clc
neg
dec
mov
adc
push
stos
and
adc
mov
jnp
pop
lds
xchg
out
push
popf
movsl
push
pop
das
add
in
mov
cmp
out
int
test
lock
pop
mov
stc
loop
fildl
jmp
jae
jo
xchg
mov
jecxz
push
iret
inc
or
stos
mov
jmp
out
sbb
sub
mov
add
pop
ljmp
push
lcall
cli
push
inc
inc
out
pop
xor
jno
jns
popf
ljmp
ljmp
mov
cmc
xchg
loop
clc
pop
mov
adc
mov
sarb
stos
sbb
in
push
dec
inc
mov
sbb
call
xor
push
lock
stos
lret
mov
mov
jg
lods
outsw
rcll
psrad
sub
pushf
or
pusha
or
mov
loope
mov
sbb
bound
cmc
iret
enter
stos
jg
stos
insl
rcll
in
dec
xchg
jbe
push
cmp
shrb
dec
or
sbb
and
outsl
jno
inc
dec
jmp
push
lret
adc
pop
and
push
xor
out
push
fdivl
int
testb
inc
dec
inc
mov
mov
mov
adc
outsl
push
jle
jae
into
xchg
fwait
sub
daa
pop
dec
pop
sarl
in
pop
pop
jno
lods
ret
out
call
aaa
pop
pop
movsl
xchg
les
sahf
push
push
sbbb
jbe
sbb
cmp
std
or
mov
in
aam
sub
dec
mov
and
mov
push
inc
stos
test
lds
lods
jns
cmp
loopne
stc
leave
in
pop
rorb
mov
cwtl
aam
jp
add
aad
xor
adc
stos
push
popa
inc
fxch
mov
enter
outsb
inc
dec
push
cmp
inc
adc
mov
inc
cmp
and
dec
es
dec
adcl
int
and
inc
cmp
rcrl
jb
xlat
sub
inc
xlat
dec
rorb
repnz
in
lds
gs
repz
aas
sbb
jbe
xchg
lret
jl
push
imulb
out
adc
cmpsl
je
mov
mov
or
sub
xor
cmc
push
jge
sbb
xchg
cmp
adc
mov
push
jp
mov
scas
dec
adc
test
sub
lea
mov
fisttpll
and
xor
mov
pop
jnp
bound
dec
ja
jge
cld
push
sub
sbb
mul
add
ret
inc
cmpsb
outsb
in
and
addr16
fistpll
test
in
test
adc
decb
and
les
xor
dec
jno
adc
xchg
adc
jne
rclb
push
in
or
or
pop
sti
repz
cmpsb
mov
and
dec
cmp
cltd
xchg
mov
jbe
sub
push
lcall
jge
out
mov
test
rorb
xor
and
ds
mov
push
mov
gs
ss
out
jle
or
pop
dec
lret
std
data16
sbb
inc
ret
inc
cmp
jno
adc
test
repnz
push
movsb
pop
jg
xor
adc
fistps
pop
stos
js
test
push
push
cwtl
insb
ljmp
inc
xor
add
ljmp
sbb
in
fs
call
add
test
dec
lcall
mov
mov
inc
push
test
jecxz
jmp
adc
insl
sahf
dec
xchg
mov
test
mov
mov
xor
pushf
push
pushf
ja
iret
and
dec
int3
aaa
dec
insl
clc
mov
and
jmp
sub
into
dec
sbb
jnp
pop
scas
pop
push
cld
out
push
sbb
inc
push
push
into
add
adc
addr16
cmc
jns
lods
jge
cwtl
out
jae
jecxz
std
and
addr16
and
hlt
int
jecxz
imul
sbb
in
sbb
pop
shll
je
mov
nop
add
lods
movsl
xor
mov
daa
jg
lret
popf
or
imul
lods
xchg
xchg
pop
mov
mov
sbb
pop
lret
jg
cwtl
popa
xor
inc
push
stc
call
mov
pop
repnz
hlt
xchg
adcl
inc
push
sti
mov
add
adc
fsubl
jnp
pusha
cltd
addr16
pop
in
scas
fstpl
xor
cmpl
repz
pop
xchg
xchg
jp
dec
ja
push
test
jno
dec
or
scas
addb
cmp
stos
and
mov
pop
jl
xlat
int3
mov
inc
dec
scas
lahf
ljmp
mov
mov
and
fidivl
mov
repnz
jbe
dec
bound
add
add
or
inc
xchg
test
cmpsl
aas
push
lahf
shl
jo
cli
rcr
repz
and
xchg
in
cmp
mov
addl
ja
add
mov
push
int
cmovae
jmp
sbb
ljmp
pop
sti
inc
jmp
pop
pusha
mov
jecxz
shrb
sub
pop
sub
inc
or
mov
cmpsl
lock
jmp
js
sahf
jg
inc
xchg
pusha
jne
dec
fcomp
fdivs
push
or
gs
sub
push
add
sti
add
or
xlat
pushl
push
aam
inc
clc
sbbl
xor
mov
inc
xor
sub
mov
xor
test
mov
test
cmc
dec
cmp
in
dec
mov
adc
sbb
lock
jnp
adc
mov
push
popf
sahf
pop
xorl
imul
and
jbe
rcrb
jmp
dec
out
into
shl
fs
bound
mov
xchg
fdivrs
jecxz
push
js
bound
xchg
push
jns
scas
pop
push
sub
adc
dec
xlat
sub
add
cli
fwait
push
mov
bound
jnp
mov
insl
sbb
shll
iret
xchg
push
call
lea
test
inc
inc
loop
stos
enter
adc
stc
test
inc
ret
jecxz
sti
mov
scas
data16
push
clc
cmp
loope
mov
mov
mov
jne
cmp
lcall
dec
pop
lods
pusha
mov
pop
mov
aam
shll
xor
cwtl
mov
popa
push
testb
rclb
aam
xor
in
movsb
pop
shll
mov
push
push
sbb
das
ret
add
pusha
and
adc
daa
sub
xchg
xor
call
pop
cld
mov
shlb
sbb
cmc
dec
cmpsb
mov
repnz
mov
sbb
pop
pop
and
jnp
jbe
xchg
hlt
mov
and
stc
aam
roll
je
dec
mov
xchg
push
sub
cltd
popf
in
imul
out
jmp
adc
cmp
dec
fimuls
ds
ja
inc
xchg
addr16
aas
xchg
add
jnp
fisubrl
push
mov
in
lds
push
xor
lea
mov
ret
orl
out
push
stos
sub
xchg
xlat
jnp
js
xchg
mov
add
xchg
push
loopne
cmp
sub
das
jns
in
add
sbbb
xchg
shr
icebp
and
outsb
and
mov
inc
mov
je
out
movsl
xchg
mov
push
int
mov
stos
int
inc
stc
mov
push
fdiv
pop
fsubrs
std
and
jne
pop
lods
sub
mov
aam
rolb
out
cli
repnz
lret
mov
xor
movsb
xchg
jl
ja
aad
jge
cltd
test
sti
xor
push
fidivrs
xchg
push
test
sbb
subl
sbb
xlat
dec
in
addr16
lock
xor
lock
xchg
icebp
mov
lea
xor
gs
mov
cli
pop
repnz
push
adc
popf
loope
test
push
clc
mov
scas
and
out
fsubl
sub
pop
in
and
out
inc
sbb
iret
inc
mov
in
jp
cmp
sub
fdivp
push
loopne
dec
and
xchg
ficompl
push
push
or
fucomi
leave
or
adc
loopne
inc
pop
aas
mov
or
orb
mov
fwait
cltd
adc
dec
pop
cmpsb
xchg
xchg
mov
imul
movsb
push
popa
xor
dec
nop
enter
mov
in
jmp
jns
rcrl
or
sbb
add
psrad
cmpsl
aad
test
mov
sub
outsl
les
sub
mov
mov
loop
shlb
popf
add
inc
ja
mov
adc
mov
add
lds
leave
xchg
fstpt
fidivs
dec
and
jb
leave
push
stos
sub
adc
xchg
loopne
xor
xor
leave
popf
stc
ljmp
dec
daa
adc
pop
loopne
dec
test
mov
pop
cmpsb
mov
pop
xor
mov
enter
xor
mov
push
cmpsl
jp
out
cmc
loope
es
pop
pusha
add
ret
fstps
and
rcrl
sub
jae
ss
pushf
loop
xchg
and
push
dec
cmc
out
mov
cmc
test
test
mov
mov
jp
lock
mov
pop
test
aaa
mov
push
lea
fsub
rolb
inc
xchg
adc
and
cmp
xchg
jge
xlat
mov
mov
jg
inc
cwtl
sub
popf
dec
and
or
xor
clc
push
mov
test
push
add
sar
into
test
mov
bound
dec
popf
jnp
mov
jg
std
imul
add
decl
lahf
shll
inc
aad
mov
adc
mov
mov
in
loop
fwait
xor
jp
push
mov
sub
out
int3
jne
or
push
ja
sbb
pop
add
and
xchg
bound
inc
push
mov
mov
jecxz
mov
fwait
stos
dec
into
xchg
stc
cmpsb
ret
enter
out
sarl
cmc
sbb
addb
mov
bound
sub
pushf
jae
sbb
in
jns
roll
lret
insb
test
test
or
es
adc
dec
adc
jp
sbb
pop
jge
hlt
and
shrb
cmp
in
aas
insl
sbb
mov
je
lds
mov
repz
mul
push
push
daa
out
dec
dec
xor
mov
xor
in
scas
pop
jecxz
pushf
ret
lods
push
lods
mov
into
jnp
sbb
in
add
jp
cmp
lcall
dec
or
inc
aaa
insb
fwait
pop
sub
inc
and
xchg
jecxz
or
ret
cmp
mov
sub
sbbb
push
lahf
sbb
out
mov
jo
push
stos
testb
fst
aam
out
fbstp
push
fs
aad
and
pop
mov
mov
stc
and
mov
loope
sbb
dec
xchg
sar
push
icebp
jnp
push
jl
cmpsb
jecxz
roll
dec
cmp
int
jbe
mov
sub
jae
cltd
into
insb
ljmp
or
mov
aas
dec
mov
or
sub
add
pushf
and
imul
push
je
xchg
xchg
and
add
and
addr16
iret
pop
sbb
mov
in
adc
xchg
xchg
xchg
sbb
dec
pop
sbb
jp
dec
int3
int3
cmp
fsubrs
addb
sub
fbld
loopne
dec
flds
je
out
push
dec
bound
pusha
lods
repnz
test
pause
fildl
cwtl
mov
in
pop
sub
mov
sbb
mov
xor
add
xor
add
mov
loop
cmp
les
inc
inc
nop
push
repz
xorl
stos
in
push
inc
loope
mov
adc
cmp
loopne
xchg
fsubrs
aas
jecxz
sub
mov
data16
je
mov
call
movsl
dec
jo
imul
call
push
addb
imull
xchg
dec
dec
mov
xchg
jb
push
in
xor
mov
in
push
negb
dec
ja
cmpsl
mov
aas
aad
leave
mov
rdpmc
aaa
jb
xchg
and
loop
mov
fsubp
push
xchg
add
ja
dec
add
fldt
int
lods
mov
inc
add
push
push
xor
push
mov
xlat
in
jae
out
add
jp
aad
shll
xchg
mov
jae
jge
inc
test
lods
jmp
pop
rclb
hlt
stc
popa
sub
inc
inc
subl
dec
push
in
jl
cmpsb
iret
rol
jne
jnp
pop
or
lock
sbb
test
out
jno
or
mov
xor
outsb
push
jnp
cmp
jmp
js
aaa
sbb
gs
pop
ss
sub
in
push
mov
idivb
es
sub
fsubr
mov
mov
dec
jp
imul
popa
sub
push
mov
mov
movb
fnstenv
cmp
sbb
out
pop
add
xor
out
push
add
mov
in
mov
sbb
dec
movsl
movsl
arpl
dec
adc
test
int
sbb
dec
imul
cmpsl
cmpsl
or
cli
sbb
icebp
cmp
test
xor
js
mov
into
pop
movsb
xchg
mov
xor
xchg
cs
mov
mov
into
inc
hlt
jae
fimuls
mov
scas
dec
lahf
jne
hlt
and
push
fldcw
sbb
shll
and
jle
mov
pop
mov
mov
mov
xchg
mov
imul
dec
fistpll
movsl
insb
xor
pop
jb
mov
dec
cmpl
cs
inc
or
es
stc
push
je
stos
xchg
inc
jg
notb
mov
fidivrs
mov
and
cld
inc
cmpsb
hlt
cld
ss
cld
push
inc
pop
pop
dec
out
adc
dec
jp
sub
cmp
gs
test
mov
js
pusha
mov
xchg
and
daa
sbb
mov
in
push
pop
stos
in
fwait
mov
rcrl
fldt
rol
push
iret
fstl
fstpl
subb
add
cmp
push
push
or
cmp
rcll
jnp
sahf
push
aaa
repnz
test
out
test
jmp
jb
cmpsl
jo
stos
pop
dec
and
cmp
into
fwait
push
xor
mov
xor
xchg
xchg
jl
lcall
sbb
ljmp
lods
in
stos
clc
cmc
mov
mov
cli
out
loopne
sti
or
rorb
loopne
rcrl
or
int3
test
add
add
mov
js
jbe
rorb
push
add
add
rcl
xchg
push
push
push
mov
xor
cld
xor
xlat
sbb
rcrl
enter
aam
insb
cmp
push
xor
nop
pop
adc
rcl
es
add
mov
dec
mov
stc
mov
sbb
in
in
subb
mov
jo
loope
stos
cmp
fadds
push
andl
dec
pop
adc
outsb
mov
orb
gs
cmc
mov
lahf
push
jp
sbb
or
jo
loopne
in
sbb
dec
xchg
fildl
or
jns
cltd
inc
lds
xchg
xor
jb
lcall
mov
incb
fstpl
dec
int
and
dec
call
mov
pusha
cmpsb
ficomps
and
movsb
jl
cmpsb
adc
fdivrl
cwtl
push
sub
bound
scas
xchg
movsb
jecxz
jl
jne
outsl
fmul
push
repnz
pusha
mov
cltd
mov
cmc
adc
cmp
xlat
mov
mov
ud2
sbb
ss
dec
cs
sub
insb
xlat
lods
inc
repz
jecxz
cmp
in
sub
ss
bound
push
or
inc
dec
or
dec
aam
out
inc
fxch
repz
mov
dec
pop
es
jle
fcoms
enter
fldl
xor
and
test
js
pop
push
pop
push
push
rolb
in
jno
cmpsb
aad
popf
sarl
xchg
out
arpl
cmp
pop
repz
push
sbb
sub
pop
jnp
addl
lcall
or
aam
imul
jge
mov
or
lea
ret
out
sahf
pop
js
or
xchg
jbe
mov
clc
pop
insl
mov
jnp
and
outsl
lcall
insl
pop
push
bound
popf
hlt
or
aas
adc
iret
push
mov
jmp
test
sub
data16
aad
xor
outsl
insb
jns
lret
aaa
mov
pop
mov
push
and
pushf
loopne
sub
jl
xchg
sub
das
and
imul
pushf
push
ret
mov
fisubrs
sub
movsl
and
cltd
mov
fisttps
adc
mov
lahf
in
and
pop
fidivrl
fcoml
jo
mov
pop
xchg
adc
push
in
outsb
jnp
movl
add
mov
xchg
bswap
int
enter
roll
dec
lret
xchg
aam
aam
ljmp
jnp
inc
xor
loop
push
imul
cmpsb
mov
out
or
sbb
mov
cmp
pop
sbb
push
and
addr16
jecxz
cmpsl
add
out
mov
jne
mov
inc
pusha
or
aam
push
mov
sub
sbb
adc
sahf
lods
enter
sbb
cmpsb
push
test
add
and
cmc
and
xchg
jp
adc
pop
js
movsl
pop
test
fcomi
add
loop
or
ja
outsl
pop
pop
cmc
xorl
rcr
out
push
pop
adc
sub
sub
sbb
inc
sub
mov
dec
fistpl
pshufw
xlat
ljmp
mov
lahf
cli
jns
jo
mov
add
jae
ret
xchg
push
add
popf
iret
sub
iret
andb
or
pop
aam
add
movsb
pushf
or
or
inc
test
jns
mov
xchg
inc
pop
adc
fcoml
inc
push
jecxz
pop
and
pop
mov
aam
sbb
pop
sub
xchg
jb
aad
mov
scas
jo
xchg
icebp
and
data16
jne
fsubl
in
dec
jecxz
loop
dec
mov
xchg
xor
aaa
nop
mov
and
xchg
mov
in
push
and
arpl
mov
jp
jne
dec
sub
ja
dec
frstor
mov
xchg
movsb
stos
sbb
add
aaa
ja
iret
imul
aad
pushf
dec
cltd
push
adc
mov
in
push
push
jmp
lret
xchg
shlb
data16
mov
mov
inc
xor
iret
testb
mov
or
mov
enter
rcrb
cld
cmp
clc
cld
sub
add
hlt
repz
lods
push
mov
push
scas
cmp
lock
inc
and
sub
jne
sbb
mov
das
jb
dec
sbb
rcrl
shll
ja,pt
enter
test
test
xor
insl
das
lret
jbe
mov
mov
jbe
scas
jne
pop
arpl
out
push
aad
mov
jno
roll
movsb
repnz
loopne
cltd
cmpsb
aad
movsl
fnsave
and
shr
cwtl
fsubrs
outsl
dec
mov
jecxz
adc
xchg
int
push
mov
or
test
push
pop
xor
test
and
enter
push
mov
xchg
mov
mov
iret
sub
orb
sti
xchg
or
jne
adc
push
jle
pop
test
mov
jnp
aam
cmp
xlat
cmp
mov
test
sub
jl
dec
add
popf
lods
fcoml
fcomps
jmp
push
push
loope
es
mov
rorl
mov
mov
jle
push
and
inc
sub
dec
mov
and
mov
sti
or
pop
shl
jecxz
lea
mov
push
shrb
orl
sbb
mov
sbb
stos
daa
xchg
rclb
dec
mov
out
inc
adc
pop
es
push
fisubl
sub
rcll
jmp
ljmp
xchg
loopne
jecxz
xchg
leave
out
cmp
cmp
xor
out
xor
movsl
pop
cmp
xchg
jl
movsl
sbb
inc
push
jae
arpl
sarb
je
sub
scas
jge
cli
adc
test
pop
jmp
popf
outsl
pop
in
ror
dec
mov
out
ret
jb
jo
sbb
pusha
push
push
and
jne
inc
and
mov
and
dec
ds
dec
test
push
ja
mov
dec
jns
xor
or
add
xchg
jmp
addr16
loopne
faddl
call
inc
clc
jmp
testb
push
scas
cmp
sub
movsb
faddl
cmp
mov
pushf
sbb
xchg
xchg
cmp
cld
adc
jnp
jb
cmp
cmp
popf
repz
or
lock
pop
sub
sub
cmp
loop
test
in
pop
cltd
cmp
sti
lahf
popa
js
pop
popa
fistpl
bound
stos
ret
mov
dec
cmp
sbb
out
adc
cmp
ds
add
pop
js
jne
mov
sahf
push
dec
xchg
mov
jg
test
sub
sub
jecxz
in
xor
ljmp
sahf
in
xchg
shll
dec
lret
xor
jecxz
ret
dec
cmp
fldt
test
jnp
insl
faddp
mov
cmp
mov
xchg
les
ds
mov
xchg
or
mov
mov
sbb
push
sub
out
addr16
mov
xor
jge
jmp
and
cli
mov
or
xchg
test
je
sub
and
in
add
xchg
cmc
arpl
add
and
out
adc
xchg
repz
xchg
popf
mov
sbb
pop
or
out
scas
inc
cmp
sub
inc
mov
jae
scas
test
mov
or
sub
lcall
aaa
or
push
fwait
insl
fs
enter
inc
fidivs
aad
fldl
dec
pop
lahf
push
insb
int3
cmp
add
test
sbb
mov
mov
mov
fcmovnb
insb
ficompl
in
xor
stos
jb
mov
lret
or
popf
push
les
pop
lcall
pusha
stos
repz
out
loope
rorl
inc
lcall
adc
xchg
popf
scas
call
sub
icebp
dec
shll
stos
pop
mov
sub
insb
adc
sar
std
and
xchg
lea
pop
sub
pop
mov
fprem
xchg
ret
loop
xchg
cmpsb
add
scas
dec
xchg
out
lods
fisubs
and
mov
or
xchg
xor
test
es
sbb
inc
xchg
jb
ja
pop
add
dec
dec
insl
push
mov
ljmp
jno
mov
hlt
sub
cmpps
gs
lahf
lds
mov
or
add
ja
sub
pop
insb
mov
ss
lret
lods
pushf
js
aaa
xchg
xchg
lea
pop
and
jns
lods
and
pop
inc
aam
lret
jns
in
neg
xchg
pop
sbb
int
iret
int3
fwait
pop
cmc
inc
mov
sbb
cli
ja
cmp
push
sub
ja
pusha
add
loop
add
fstp
stos
adc
mov
rclb
inc
movsb
mov
sub
cmpsb
lods
cwtl
xchg
xchg
repnz
mov
mov
gs
add
pop
pop
fldz
mov
or
clc
xor
add
call
xor
cmpsl
in
xchg
ljmp
and
or
lret
loope
dec
test
enter
and
orb
mov
lock
mov
cmp
enter
fdivrl
fstl
inc
xchg
sbb
ds
outsb
insl
aad
cmpl
lahf
stc
sub
sbb
and
test
xchg
pusha
sahf
jnp
inc
xor
jbe
aad
jno
add
adc
pop
jbe
addr16
add
imul
xor
adc
sarl
imul
and
aaa
sub
rclb
mov
stc
cli
jo
push
mov
push
mov
mov
pop
dec
add
inc
mov
and
shrl
loope
rcrl
fdivrp
or
or
xchg
std
clc
xchg
pop
jnp
jle
lods
pusha
dec
add
and
mov
mov
or
mov
shrl
daa
daa
and
push
jl
xor
jle
mov
sarb
pop
push
test
loopne
add
mov
sbb
add
sbb
push
test
and
jns
fidivrl
testl
xchg
out
daa
shl
scas
sahf
mov
add
sbb
add
loope
out
popf
add
cld
xchg
das
insl
inc
and
in
cmp
test
sbb
faddl
push
pop
insb
or
pop
orb
push
aaa
aas
mov
pop
jne
fs
enter
push
xchg
mov
mov
mov
adc
cmp
and
pop
xchg
out
test
push
lret
loopne
je
lcall
xchg
xor
fisubl
ss
scas
jp
pop
int3
push
mov
lahf
adc
mov
push
aad
enter
testl
jp
add
pushf
mov
sub
cmovo
test
jge
mov
in
cmpsb
ljmp
out
sti
dec
cld
mov
mov
jmp
sub
fs
nopl
push
incb
cli
imul
or
add
dec
and
gs
movsl
push
xchg
enter
xor
test
cli
dec
ret
and
xchg
push
cmp
data16
inc
pop
fnstenv
inc
cmp
not
lods
mov
and
scas
lock
push
fwait
aam
cmpsl
test
cmp
ja
bound
cli
mov
nop
stos
mov
mov
mov
scas
out
adc
push
popa
push
mov
push
das
jle
pop
mov
xor
mov
into
fwait
lock
repnz
add
mov
pop
adc
repnz
ljmp
sub
push
xchg
push
rorb
dec
jl
mov
popf
mov
push
adc
push
mov
je
je
inc
ud2
or
push
movsb
aad
lea
adc
orb
mov
and
in
in
sub
push
sub
lds
jo
cltd
sbb
mov
std
bound
imull
es
iret
xchg
imul
push
or
xor
add
adc
and
xor
repz
loop
adc
cwtl
xchg
sbb
jo
and
gs
add
cwtl
mov
jo
xor
jne
fisubrs
movsb
push
inc
rolb
sub
cmpsl
aad
xchg
xchg
adc
mov
dec
test
adc
andl
out
lock
lea
repnz
scas
and
pop
jno
push
dec
rcll
pop
jns
pop
adc
and
mov
mov
pop
gs
push
daa
mov
iret
in
sub
sahf
lock
aam
push
repz
push
inc
and
jbe
mov
sbb
push
xor
iret
jns
notb
sbb
ja
call
les
lods
pop
daa
sub
push
mov
push
fwait
push
nop
jmp
adc
mov
lret
pop
mov
mov
decl
sbb
insl
bound
ret
pop
mov
or
test
orl
pop
jmp
jp
jne
shll
pop
jnp
lods
sbb
push
mov
add
cmp
cmp
loope
mov
mov
dec
push
iret
push
mov
jb
or
dec
sub
dec
sbb
pop
mov
pop
fs
es
xor
hlt
stos
pop
test
in
test
cld
divb
xor
imul
and
or
inc
cld
outsb
xor
movsl
test
test
daa
imull
push
mov
mov
lock
inc
test
xor
mov
enter
das
fisubrl
mov
nop
insl
dec
mov
jmp
shr
fwait
sub
sbb
pop
xchg
fcomp
icebp
les
cmp
or
push
arpl
add
aad
fcmovu
lods
je
jg
arpl
sub
sub
xchg
jecxz
pop
ss
enter
mov
clc
andl
and
mov
rcrl
add
shrb
push
popf
mov
stc
cltd
xchg
dec
sarb
mov
lods
sar
and
cltd
push
cmp
cld
cmp
ret
dec
cmc
dec
dec
pop
dec
jge
add
out
dec
xchg
inc
rcr
mov
aam
xchg
or
ret
rcll
mov
loop
popa
pop
adc
cmp
addr16
inc
jno
loope
jge
imul
dec
sub
pop
and
movaps
xchg
ret
repz
clc
in
mov
cmp
inc
dec
push
push
mov
es
dec
loopne
or
add
xor
int
lahf
lret
movsb
jle
sahf
inc
popf
mov
scas
pop
arpl
mov
sbb
aaa
je
xchg
pop
mov
out
mov
scas
mov
and
das
mov
mov
sub
sub
xor
into
mov
mov
sbb
sub
ret
call
push
ja
sbb
cltd
jnp
mov
sbb
pushf
lahf
movsb
repz
shlb
pop
mov
inc
movsb
xchg
mov
push
or
ret
sbb
jo
jecxz
jl
shlb
push
daa
decb
lock
mov
mov
inc
xor
dec
int
repz
mov
fsubs
adc
sub
push
mov
mov
loop
jecxz
movsl
xchg
cld
aam
jle
mov
out
frstor
pop
subl
sub
sub
dec
je
mov
fildll
jl
xorb
imul
push
repz
jbe
jns
jg
xor
xchg
imul
cmp
inc
in
push
in
maxps
or
loopne
adc
xchg
mov
xchg
repnz
xchg
outsb
pop
cmp
push
ds
or
lahf
xchg
or
push
js
loopne
jne
das
add
das
mov
mov
xchg
adc
call
cmp
mov
cld
and
or
mov
cmpsb
cli
into
xchg
xor
leave
and
cmpsb
in
mov
sti
cmp
xchg
mov
mov
cmp
lock
inc
orl
sub
dec
adc
mov
js
adcw
imul
fsubp
mov
lods
mov
mov
fwait
fisubs
pop
lods
mov
mov
add
lds
test
push
mov
adc
mov
adc
jnp
aam
push
adc
push
shrb
adc
jnp
jno
call
shll
in
mov
sub
nop
not
adc
xchg
add
icebp
push
or
movsl
repz
aam
loop
mov
inc
loopne
stos
add
adc
outsl
jp
cmp
out
push
xchg
add
outsw
call
aas
sub
lds
loope
test
inc
pop
push
pusha
data16
inc
push
or
mov
imul
lret
xchg
and
cmpl
cmpl
fnsave
cmp
dec
sbb
int
dec
hlt
loopne
adc
add
or
xchg
cmp
sub
stc
pop
scas
stos
shr
cs
inc
subb
lods
sbb
sarb
arpl
orl
jmp
add
in
mov
pop
cli
add
mov
inc
xchg
clc
mov
sarb
adc
fimuls
aad
jns
mov
jae
fdivrs
rcrb
pushf
and
loopne
mov
and
pop
ficoms
jo
popa
mov
add
iret
cld
inc
imul
aaa
cmpsl
inc
lret
xor
add
ljmp
les
xor
fdivrs
imul
push
loope
or
adc
sbb
dec
lods
add
pop
ss
and
test
dec
movsl
xor
mov
arpl
orl
sbb
mov
dec
push
or
movsb
sub
inc
les
mov
xchg
mov
xchg
xor
dec
fdivr
pop
mov
jae
cwtl
call
mov
sbb
inc
lods
add
mov
notb
add
xchg
mov
sbbl
negb
jne
inc
push
cwtl
cmc
sarb
aad
and
pop
lds
inc
adc
inc
call
ret
mov
sbb
das
adc
data16
dec
sub
stos
sub
jne
adc
push
out
sbb
in
fbstp
xchg
or
cmp
arpl
jl
daa
push
insb
xor
mov
xchg
addr16
jle
fsts
sub
aas
stc
dec
and
inc
add
lds
adc
jne
bound
mov
lds
adc
xlat
xlat
shlb
or
aam
outsl
dec
sbb
lcall
loopne
outsl
mov
sbb
or
cltd
mov
in
and
int3
sub
xchg
cmc
xorb
in
std
call
mov
fs
jnp
push
lock
and
mov
test
nop
dec
imul
shr
in
out
push
mov
xchg
ss
xchg
imul
xchg
or
dec
jbe
int
in
mov
ds
push
adc
mov
rolb
cmp
xchg
sarl
mov
rorl
xchg
and
stos
imul
xor
jne
dec
add
dec
lret
mov
push
and
xchg
sbbl
in
xchg
jle
pusha
push
dec
insl
je
xchg
add
mov
cs
mov
pop
cmp
in
dec
mov
mov
and
xorl
sbb
notl
bsf
sub
lret
pushf
push
or
add
sbb
xchg
inc
mov
mov
pop
aas
mov
xchg
xchg
std
push
out
or
out
loopne
adc
leave
and
incl
add
pop
sbb
clc
sub
popf
and
mov
mov
scas
data16
inc
test
rol
xor
mov
shrb
ror
xor
jle
mov
enter
or
adc
out
nop
fstps
das
xor
inc
loop
stos
xor
loop
add
jnp
sbb
das
ja
pop
insb
sub
jp
bound
adc
and
cmp
pop
push
std
cmpsl
mov
mov
repnz
das
rcrb
lock
xchg
adc
pop
imul
lret
jmp
mov
insb
dec
das
xlat
out
jle
std
enter
outsl
jb
fnsave
movsb
ret
or
dec
rcrl
or
add
sbb
stos
jne
lret
clc
movsb
adc
sub
pop
lret
outsb
lcall
push
hlt
sbb
push
sbb
cmpsb
add
rcl
push
stos
dec
jp
call
sbb
cltd
mov
push
jge
shrb
or
imul
push
xor
inc
pop
adc
mov
daa
push
jne
xchg
dec
mov
loop
popa
cmp
mov
add
iret
insl
add
test
mov
loop
cwtl
and
pop
inc
dec
inc
call
daa
jbe
push
popa
or
fstp
sbb
add
scas
push
scas
aad
adc
and
imul
mov
jg
cli
dec
lahf
icebp
mov
xchg
stc
nop
jge
cmp
xor
mov
fwait
mov
inc
pusha
dec
ja
daa
or
test
cmp
push
mov
jnp
frstor
cmpsb
jmp
popa
fcoml
jmp
sub
sub
mov
mov
and
pop
mov
push
in
icebp
in
test
jbe
jle
outsb
ret
lock
ja
dec
gs
popf
cmpl
fisubrs
aaa
mov
das
xor
shrb
mov
push
or
std
sbb
push
cmp
fnstcw
sub
xor
sub
std
jecxz
sub
push
repnz
cmpsb
rcr
cmc
lret
cltd
cmp
mov
mov
outsl
push
outsb
cs
imul
xor
jne
or
sub
adc
inc
mov
xchg
adc
inc
pop
dec
cmp
add
leave
loope
cwtl
mov
push
dec
jmp
test
push
mov
inc
xchg
cmp
xchg
xlat
mov
sub
and
imul
xor
call
cmp
sbb
das
in
mov
enter
sub
mov
subl
in
pop
dec
cmpsb
inc
xchg
stc
sub
pop
jns
adc
imul
and
push
in
inc
jne
fsts
jl
lret
bnd
xor
jbe
in
jmp
sub
out
rol
in
pop
fcompl
into
mov
sub
pop
fwait
icebp
mov
mov
jae
movsb
dec
jp
aas
jmp
ja
popf
cltd
mov
push
jae
repnz
jae
cmp
add
mov
loope
mov
imul
add
jo
nop
jge
mov
stc
sbb
or
ds
icebp
mov
push
jo
jl
les
shlb
enter
dec
in
adc
aas
cmc
sahf
movl
insl
pop
sahf
loop
cmpl
daa
movsb
fwait
jnp
cmpsb
sahf
test
scas
stc
fildll
in
mov
and
rcr
push
lret
arpl
test
shlb
lret
pop
aad
inc
test
mov
pop
test
outsl
fbld
dec
mov
sbb
es
adc
or
fidivs
or
push
gs
fisubl
imul
mov
in
into
in
aaa
jne
dec
xchg
in
pop
push
pop
mov
out
bound
in
out
jb
sub
mov
pop
arpl
fnstsw
xchg
cli
mov
stos
fcompl
mov
adc
push
lahf
out
xchg
mov
xchg
out
ds
test
es
push
pushfw
lds
rol
xchg
push
sbb
sbb
out
leave
sub
xor
imul
push
scas
cs
xchg
push
stos
pop
xor
push
sbb
addl
dec
jae
xor
les
mov
inc
pop
cmpsl
mov
jle
std
js
xchg
ja
or
hlt
aaa
mov
enter
fstpt
and
cmp
dec
xor
dec
cmpl
mov
ficoml
scas
aam
ljmp
pop
dec
fnstsw
push
mov
mov
icebp
fadds
daa
jmp
arpl
xlat
scas
mov
push
fidivrs
mov
cltd
inc
in
cmp
inc
fdivs
jne
in
popa
lret
mov
int
sbb
rorb
aad
repz
add
shr
dec
sbb
adc
mov
sub
les
in
lods
fidivrs
xor
add
aad
sahf
stc
pop
sarb
xchg
das
jl
icebp
mov
sbb
lahf
in
jbe
add
ret
out
xlat
lods
add
xchg
mov
sbb
sub
mov
rcrb
or
imul
dec
add
xchg
lds
pop
mov
leave
pop
push
push
fsubr
pop
jo
cli
adc
cmp
popl
in
dec
data16
hlt
and
push
cli
enter
stc
out
aaa
jp
pushf
push
push
adc
adc
outsb
test
jg
add
jb
aaa
out
mov
push
pop
hlt
pop
loope
ret
pusha
paddd
addb
xlat
into
xor
adc
push
shlb
ret
add
inc
bound
insb
pop
mov
out
sub
movsb
lea
aaa
sub
mov
inc
xchg
in
fimuls
imul
push
cmpsl
aad
lods
or
in
jne
mov
dec
push
xorb
cmp
insl
leave
std
jp
aas
and
mov
cwtl
mov
stc
scas
in
out
xor
or
push
xchg
mov
sub
negb
cmp
cmp
orl
xchg
dec
ret
ss
gs
cmp
xchg
adc
pop
aaa
sbb
cmpsl
pop
add
clc
mov
add
loop
dec
sarl
fdiv
lret
add
pop
push
dec
sub
cmp
lret
into
stos
add
mov
in
outsb
aas
cmp
enter
fidivrl
push
and
cmp
mov
pop
sbb
out
imul
mov
xor
out
dec
rcrl
cli
adc
lea
rol
and
imul
ljmp
push
rcll
xchg
mov
out
sbb
lds
and
and
xchg
sub
cmpsl
out
adc
dec
xchg
pop
iret
mov
call
cmp
xchg
xor
sub
cwtl
push
aaa
sub
sub
mov
cltd
push
shll
xor
stos
cltd
aam
out
ds
jmp
dec
mov
jno
cmc
dec
fwait
in
sub
dec
sub
iret
pushw
dec
cmpsl
clc
pop
push
frstor
xchg
dec
lret
ficoms
ja
cmc
mov
inc
push
mov
jnp
mov
addr16
xor
pop
dec
lcall
mov
mov
gs
sub
ficoms
clc
or
loop
lcall
ljmp
sub
xor
loop
sub
mov
dec
jae
aas
sbb
inc
mov
jo
inc
push
push
dec
xchg
xor
loop
push
scas
ljmp
inc
mov
mov
mov
test
pop
incb
lret
mov
cs
mov
orl
push
pop
lods
adc
bound
dec
leave
std
into
xorb
sbb
scas
cmp
scas
mov
mov
cs
movsb
dec
shlb
mov
mov
jb
lods
dec
pop
xlat
or
mov
cmp
adc
jns
sub
jp
xchg
xor
int
daa
clc
lret
jnp
mov
push
sbb
pop
pop
mov
loopne
jnp
shl
dec
lahf
mov
and
pop
and
sbb
fldl
xchg
mov
mov
cmpsl
lock
js
jnp
rcrb
mov
mov
popf
push
into
data16
lods
loope
push
inc
jbe
inc
jecxz
es
aam
cmpsl
ficomps
add
movsl
es
outsb
popf
sbb
adc
rorl
movsl
mov
add
aad
leave
push
mov
jp
flds
jg
ret
sub
ds
es
jge
cmp
sub
clc
cmp
jecxz
lahf
inc
inc
jge
cmp
cmp
js
adc
movsb
imul
in
movsb
in
out
stos
stos
or
xchg
mov
and
js
int3
leave
dec
inc
fsubs
lock
es
jmp
inc
add
mov
js
aas
mov
inc
ds
test
xor
jnp
mov
and
fbld
jnp
cli
mov
or
das
test
pop
cmp
pop
pushf
shlb
imul
aas
and
adc
cmp
cld
cld
hlt
jnp
sbb
mov
mov
or
je
int3
jno
jb
sub
jge
call
jno
adc
xor
sti
or
inc
scas
scas
in
xchg
out
fsub
mov
lds
ds
pop
cmp
out
notl
lds
enter
out
mov
nop
sub
or
or
adc
icebp
mov
out
inc
mov
loopne
icebp
arpl
nop
mov
inc
fsubrl
mov
bnd
pop
ret
in
cmp
sbb
push
aaa
or
enter
in
jl
arpl
pop
jo
movsb
or
cmc
xchg
sbb
mov
dec
adc
rcrb
flds
leave
rorl
or
mov
pop
jl
mov
lock
jbe
jne
test
xchg
cwtl
dec
pop
lods
jae
loope
jp
jl
aam
sbb
out
xor
xor
mov
arpl
fstpl
jno
pushf
push
jle
les
nop
jno
insl
xchg
stc
fisttps
sbb
rcrl
rcl
fsubr
lret
pop
les
imulb
or
insb
mov
sub
push
inc
lds
or
mov
aad
aam
mulb
iret
sbb
xlat
dec
xchg
aad
enter
jno
cwtl
and
popa
or
xor
cmc
lea
jmp
jecxz
stos
divl
les
dec
cld
loope
mov
test
mov
dec
sub
mov
int
jle
inc
nop
nop
cmpl
or
test
inc
fidivrl
sbb
fwait
cld
movsl
mov
dec
popfw
ret
add
into
ret
sub
lret
push
je
cmpsl
add
ror
adc
and
inc
pop
js
cmp
mov
mov
inc
and
loopne,pn
push
daa
sbb
out
shl
jp
imul
andl
and
or
mov
mov
mov
pop
push
pop
js
sub
out
add
xchg
imul
lea
mov
ss
adc
xchg
es
add
xchg
push
ret
adc
xchg
mov
cltd
push
fdivrs
std
or
jmp
lock
mov
and
sbb
add
mov
xlat
rolb
xor
lea
push
aam
popa
outsb
fnstcw
cmp
mov
add
and
sbb
sbb
sub
cmp
add
movsb
mov
mul
or
push
xchg
mov
xor
or
daa
xchg
mov
fadd
psubd
sahf
aam
scas
cmp
sarl
or
pop
push
cmc
faddl
mov
dec
call
pusha
pushf
jecxz
ljmp
out
jle
sti
fsubl
mov
std
add
pop
mov
dec
inc
dec
xor
xor
sbb
cli
in
cltd
test
jg
pop
pop
dec
sahf
sub
adc
mov
rol
js
inc
iret
or
push
je
mov
fsubl
lock
iret
int
into
stos
xor
ja
jp
lahf
push
jae
hlt
or
xchg
adc
ja
inc
jl
iret
sbb
es
bound
movl
popa
xchg
jo
je
dec
add
mov
sub
cltd
jl
jbe
ret
ds
jo
sti
sbb
mov
and
and
lahf
bound
inc
add
mov
insl
or
inc
sbb
test
mov
sub
or
jle
cmc
ds
int
mov
mov
xchg
jae
nop
frstor
sub
inc
push
push
shrb
adc
fimull
adc
pop
popa
inc
in
push
sbb
jp
lds
dec
mov
inc
fbld
call
ret
jl
jbe
popa
xlat
mov
in
je
cltd
cltd
cld
and
jae
mov
push
add
add
push
cs
push
clc
ret
and
popa
dec
out
daa
xchg
mov
xor
mov
dec
ds
cmp
mov
loop
sub
aaa
fs
mov
mov
shrb
xchg
sbb
ficompl
push
out
adc
pop
cmp
push
push
in
outsb
xlat
call
push
out
lret
fwait
cltd
pushl
cmp
imul
mov
jp
in
jp
clc
sti
enter
movsb
sbb
cli
mov
pop
lret
sub
jmp
in
arpl
cmp
sbb
icebp
push
nop
pop
insb
mov
sbb
pop
cmp
mov
int
sub
or
in
sbb
jp
sahf
xchg
jb
repz
jb
pop
xchg
inc
and
fsubrl
insb
fs
cmc
and
lods
out
or
push
and
xor
xor
pop
lret
push
cmp
out
stos
sub
daa
outsl
lahf
movsb
shrl
fdivs
push
fmull
sbb
xlat
mov
stos
fmuls
or
adc
dec
movsl
sti
cmp
push
push
mov
rorl
dec
mov
or
enter
push
xlat
rep
dec
and
adc
popf
sahf
movsb
mov
jno
xor
xchg
fcmovb
pop
lods
and
sub
dec
imul
out
cwtl
rol
dec
test
lods
mov
push
ficompl
out
jg
aas
mov
aaa
dec
sbb
mov
mov
addr16
and
inc
xchg
test
adc
fsts
add
loopne
sbb
adc
out
rclb
int3
inc
inc
shrl
sub
shlb
push
cmpsb
cmpsl
cwtl
out
adc
testb
lret
call
push
push
sbb
add
cltd
inc
inc
inc
addr16
sahf
jecxz
lahf
cmp
loope
inc
imul
jecxz
push
pop
or
mov
setbe
scas
push
cmp
jl
add
addr16
xchg
fdivl
jae
sub
fmuls
sub
fwait
dec
aad
scas
dec
push
and
sub
in
cltd
outsb
mov
repz
jge
sub
adc
xor
clc
adc
outsl
push
rcll
test
pusha
movsl
sbb
rcll
aam
jl
outsl
loopne
push
push
pop
pop
mov
int3
ja
gs
and
cmp
subb
sahf
jno
add
loope
pop
aaa
bound
cld
loope
xlat
adc
dec
lds
jecxz
xor
int3
or
cmp
aad
cmpsl
lea
and
insl
inc
ret
in
mov
mov
pop
jne
roll
je
dec
inc
shll
mov
xchg
xchg
hlt
xchg
clc
repnz
bound
out
xor
movsb
mov
sti
lahf
dec
jae
and
je
mov
dec
mov
dec
inc
xchg
inc
outsb
shr
dec
mov
les
lods
pop
xchg
pusha
xchg
lock
sbb
movsb
inc
xor
jo
fwait
insb
or
add
or
add
out
sbb
inc
mov
mov
mov
adc
aaa
outsb
leave
shll
mov
shll
neg
into
cmp
imul
daa
mov
jmp
sub
int3
dec
outsl
enter
sub
or
push
fwait
lahf
clc
ss
jg
setb
mov
mov
add
sub
push
xor
aaa
add
and
push
aaa
loope
adc
xchg
sbb
jle
and
stc
push
pop
push
iret
dec
pop
dec
fwait
and
and
jecxz
es
sbb
jp
or
in
imul
mov
mov
loopne
cmp
enter
adc
lret
iret
mov
test
jns
outsl
push
inc
jmp
cmp
mov
push
pop
xor
and
inc
popf
imul
sbb
sub
sbb
inc
jp
jae
push
jecxz
out
cmp
xor
es
mov
jge
iret
fld
jmp
icebp
sub
mov
lahf
jb
icebp
mov
fisubrs
xchg
les
mov
pop
and
cmp
pop
imulb
nop
or
daa
sbb
or
cmp
leave
adc
adc
nop
mov
jb
mov
leave
loope
add
cli
iret
sbb
pop
jle
ss
iret
leave
sub
arpl
inc
int
sbb
lods
test
mov
subb
mov
xor
enter
xchg
inc
and
mov
ret
sti
int
call
adc
movsb
add
mov
fwait
in
pop
popa
inc
out
aaa
or
pushf
stos
xchg
push
ds
or
add
dec
js
enter
in
push
jmp
pop
int
cmp
pop
pop
mov
outsb
sbb
dec
cs
inc
cld
sbb
jne
jae
pop
aas
add
pop
push
adc
mov
pop
pop
xchg
inc
xchg
clc
loope
ds
push
sbb
fsubr
inc
xor
testb
icebp
push
lcall
cmp
and
or
pop
adc
bound
and
lock
cltd
jnp
fs
outsb
test
inc
mov
add
adc
mov
mov
jo
sti
pusha
loope
icebp
aas
cmp
or
ficomps
nop
ror
xor
movsb
ret
xlat
enter
arpl
dec
enter
roll
or
mov
ljmp
and
loopne
decl
dec
in
popf
bound
mov
sub
jns
ljmp
mov
jb
decb
cmp
xchg
xchg
pop
sbb
call
pop
and
ds
fstpt
cltd
ret
popa
movsl
lret
repnz
hlt
fimull
mov
mov
and
bound
lret
test
sub
outsl
mov
in
popl
add
xchg
mov
cmp
xchg
cmp
rcrl
enter
sahf
inc
lds
xor
adc
xchg
xchg
call
pusha
inc
das
nop
hlt
movsb
rolb
push
test
fisttpl
stos
push
test
xlat
xchg
jle
je
mov
pop
and
cmp
jne
add
into
aaa
andl
insb
je
sub
sbb
sbb
repnz
mov
cvttps2pi
cmp
push
xor
xor
cmpsl
sub
xchg
adc
mov
xorb
xorl
call
add
cmp
insl
mov
insb
pop
popf
out
mov
iret
lea
jg
cmp
mov
jae
inc
popa
mov
xorb
bnd
icebp
clc
shr
test
push
sarl
mov
add
data16
xchg
mull
es
fcomps
aam
mov
xchg
adc
test
inc
insl
add
mov
lcall
xchg
mov
push
clc
and
and
and
aaa
int
xchg
shrb
jno
fmull
adc
mov
adc
pushf
leave
sahf
jg
mov
sbb
lds
repnz
cld
inc
cmp
ljmp
xlat
iret
or
push
ds
lock
sbb
fs
add
jge
mov
iret
loop
int3
int3
in
or
jns
push
fwait
sub
jae
cltd
mov
ss
push
xchg
xchg
mov
add
jecxz
fimull
inc
ret
mov
pop
aad
lods
pusha
sub
imul
push
xor
sub
filds
rolb
and
stc
or
fnstsw
cmpb
sbb
ret
push
adc
pop
push
shl
gs
sbb
push
cltd
and
sbb
or
rcrb
roll
sti
aas
cs
jbe
fdivr
ret
popf
cmpsb
jnp
lret
ljmp
lea
out
test
icebp
in
fisttpl
jmp
jecxz
out
jns
outsb
stos
sbb
sbb
mov
mov
and
popa
mov
sub
push
je
sub
inc
xor
pop
js
out
test
inc
lods
repz
loop
lods
adc
lret
bnd
adc
imul
cmp
mov
lret
mov
and
dec
outsl
addb
pop
adc
out
and
in
int3
test
repz
inc
dec
imul
aad
loopne
aad
pop
push
push
cmc
mov
mov
test
lock
xor
or
jp
out
mov
std
arpl
jecxz
inc
repz
cltd
mov
imul
pusha
mov
xchg
or
sbb
imul
xor
cmpsl
lock
lret
xor
invd
dec
inc
add
mov
xor
mov
pushf
mov
lahf
test
cwtl
cmp
push
cs
push
add
dec
mov
loop
test
xchg
add
mov
pushf
xor
cmp
pushf
mov
imul
ss
and
enter
cld
test
xchg
mov
in
sbb
hlt
push
in
jg
imul
jle
or
call
sahf
dec
test
cmp
pop
mov
pop
mov
fmuls
rcrb
mov
push
lcall
jae
movsl
inc
mov
dec
clc
sub
mov
xchg
cwtl
push
pop
out
clc
cmpl
enter
cmpsl
cmp
shrl
mov
mov
xchg
mov
shl
test
movsb
cmp
mov
test
add
or
push
lcall
or
or
pop
inc
cmpsb
lret
subl
push
dec
add
pop
test
repz
jge
popa
jge
test
push
imul
call
jb
arpl
adc
cmp
loope
dec
pop
jecxz
loopne
inc
out
sub
xchg
jmp
cmp
imul
jp
cmpsb
inc
sbb
gs
out
mov
int3
or
nop
lcall
inc
into
mov
cmp
jae
cmp
loopne
pushf
xchg
rolb
dec
cmpsb
add
inc
mov
add
xor
add
sub
dec
gs
mov
dec
aas
je
loop
out
shll
mov
or
and
out
jns
mov
out
push
cmp
aaa
test
insl
les
push
cmp
lock
out
sbb
pop
dec
aaa
shll
sub
rcrb
lcall
or
int3
decl
xor
dec
dec
pop
xchg
adc
jmp
in
xor
add
xchg
repnz
scas
out
leave
not
xor
push
aam
enter
inc
cltd
addr16
inc
xor
lods
imul
call
xchg
ds
fidivrl
xor
es
cli
push
push
clc
sub
mov
or
cmpsb
and
mov
into
cli
push
mov
lods
sub
sub
adc
imulb
cltd
pop
and
push
jne
and
pusha
sbb
sbb
push
sub
jg
aaa
jmp
mov
aaa
mov
cmp
sbb
into
popf
inc
es
pop
inc
add
fisubl
mov
push
cltd
mov
repz
sti
cmp
sti
cmp
xor
mov
std
fadds
push
repnz
cmpl
and
mov
les
fucomp
ss
cs
add
int
aaa
sub
daa
adc
jecxz
pushf
pushf
enter
imul
jbe
inc
das
repz
and
sub
inc
pop
negb
add
icebp
xor
in
sbb
adc
orl
sbb
cld
mov
mov
pop
and
cmp
xor
outsb
aam
clc
jnp
sub
add
dec
popa
sub
or
fildl
orb
idivb
and
fwait
insb
decl
xlat
stos
repz
es
adc
scas
and
into
ds
leave
cmp
sti
dec
push
lahf
push
mov
fnstcw
mov
push
jg
test
pop
fbld
mov
jae
std
lret
pop
cmc
jle
cltd
stos
stos
lcall
loope
nop
insb
mov
sti
dec
loop
icebp
test
clc
pop
lret
mov
pop
mov
push
xchg
cld
sbb
and
mov
iret
dec
adc
js
xchg
xchg
pop
pop
gs
insl
fdivl
cmp
dec
fs
xchg
push
mov
xchg
or
mov
inc
mov
sbb
ja
out
loope
clc
enter
inc
arpl
dec
pop
cltd
pop
mov
testb
dec
xchg
mov
jae
push
cmpsl
push
in
arpl
jmp
push
inc
loopne
and
mov
fld
sbb
or
xchg
aas
sub
outsb
stos
jge
in
lds
mov
stc
dec
add
xchg
mov
mov
push
mov
push
ret
push
sbb
pop
mov
cltd
imul
xchg
lahf
mov
pop
call
push
stos
mov
pop
add
test
scas
push
inc
xchg
and
dec
mov
ss
mov
call
loope
cs
mov
xchg
xor
pusha
loop
shll
adc
loopne
jbe
lcall
les
mov
add
cmp
dec
int
xchg
pop
cs
push
cwtl
subb
and
mov
jmp
xor
out
mov
adc
fucom
enter
adc
mov
andl
stc
out
push
cmc
mov
or
xchg
aad
ss
orl
insl
ret
insb
inc
mov
fisubrl
jp
xchg
std
mov
popf
adc
mov
and
in
push
cltd
sub
mov
rcl
popa
in
popw
in
xor
mov
cs
mov
cltd
cmp
pop
mov
fisubrl
pcmpeqw
xchg
push
pop
push
adc
aas
sub
stos
icebp
add
push
cld
dec
jg
sbb
jle
insl
mov
add
jle
inc
mov
imul
sbb
push
arpl
mov
push
xchg
iret
or
push
xchg
jae
sub
pop
dec
cmp
add
mov
pop
nop
test
or
inc
xor
push
or
pop
push
lock
mov
call
inc
xchg
ret
adc
pop
mov
add
inc
sub
fadds
lea
or
adc
dec
pop
add
insl
cmp
movsb
jg
sbb
in
shlb
repnz
enter
jns
mov
mov
loope
pop
dec
aad
loope
push
pop
jmp
inc
mov
add
test
fs
push
push
push
cmp
push
and
mov
pop
dec
insl
cwtl
add
daa
stos
cwtl
fisubrs
lahf
adc
sbb
mov
push
movsb
lods
mov
sub
adc
push
lea
lret
lea
push
out
pop
xor
je
pushf
xchg
mov
in
fsts
and
inc
scas
mov
outsb
cs
xchg
adc
aam
sbb
rol
push
ja
cmpsb
mov
dec
or
popf
scas
jnp
pop
fsubr
mov
add
mov
mov
insb
push
roll
test
ret
or
inc
sbb
lcall
xchg
dec
push
xchg
aad
xchg
fdivrs
mov
push
mov
mov
and
fsubr
mov
iret
mov
adc
mov
mov
outsl
sbb
shrb
out
dec
movsl
xchg
jnp
fcoms
out
jne
and
mov
test
cmp
cmp
push
pop
mov
imulb
xchg
mov
fwait
inc
icebp
cli
mov
enter
xchg
jge
outsl
pusha
inc
add
sti
mul
xchg
xor
sahf
call
and
gs
and
sub
fs
jle
rol
fidivs
inc
dec
push
enter
iret
jg
dec
xchg
in
roll
cs
das
dec
push
shr
hlt
sub
xchg
loopne
mov
add
scas
shlb
dec
cltd
mov
adcl
or
aad
cmpsb
sub
filds
ds
adc
lea
jns
movsb
dec
pop
lock
inc
cs
repnz
mov
ret
pop
push
lock
jb
lock
test
mov
fwait
push
jmp
rorl
into
mov
and
stc
imul
fildl
xor
into
jns
cmp
arpl
mov
aad
out
out
push
notl
jmp
jnp
dec
outsl
stos
jnp
popf
stos
push
test
cmp
pop
lret
scas
sahf
test
pop
adc
adc
or
pop
mov
leave
cmp
cmpsb
mov
cmp
inc
sub
mov
fsubrl
fwait
inc
aas
mov
jno
inc
xchg
xchg
sbb
out
xchg
lods
test
or
or
jl
inc
pop
sub
cs
test
mov
xlat
or
dec
lret
fdivs
lcall
shrb
int3
scas
bound
pusha
and
cmp
aaa
ja
xchg
jge
add
and
dec
lea
cs
or
cmpl
gs
outsb
sbb
sub
aas
xor
jbe
push
dec
cld
mov
inc
not
les
clc
insb
mov
xchg
daa
test
test
sbb
adc
jecxz
lret
lods
and
inc
sub
aam
pop
jl
cmp
push
sbb
lahf
les
test
inc
cmpl
inc
jmp
dec
and
cmc
mov
adc
mov
sbb
ficoms
add
and
clc
jno
or
sub
pop
mov
rorb
mov
push
xchg
mov
mov
sbb
fs
test
sub
icebp
pop
push
adc
sbb
call
sti
push
pop
dec
clc
insb
dec
aad
movsb
jmp
push
inc
divl
adc
lea
aad
js
mov
dec
ret
movsl
mov
mov
ret
or
flds
sub
sub
int
mov
aad
jo
pop
jne
sbb
mov
mov
nop
cmp
push
fcompl
pop
inc
cmp
stos
inc
cmp
mov
mov
push
leave
inc
ret
clc
lds
push
mov
jmp
pop
or
push
mov
or
inc
xchg
out
imul
adc
dec
and
push
add
scas
xchg
inc
movd
in
add
jae
in
jge
lret
arpl
out
cmp
inc
push
pop
pop
sub
xchg
or
mov
xchg
bnd
push
lock
adc
stc
sub
push
outsl
xchg
sahf
jle
inc
cld
ja
jl
cmp
mov
add
enter
enter
add
jg
std
fisubl
lock
stos
mov
push
shll
lcall
push
push
dec
push
jge
dec
sbb
cmpsb
xor
and
mov
jmp
rcll
std
xchg
fcomps
mov
rcll
stos
out
dec
cmpsl
adc
adc
sbb
into
mov
mulb
insl
sbb
test
jle
inc
push
pop
mov
inc
nop
sarl
jo
lret
xlat
imul
jge
pop
leave
add
mov
arpl
mov
jae
mov
sbb
jg
cs
dec
nop
je
dec
jnp
sub
xchg
fdiv
pop
ret
ja
xor
xchg
push
push
lock
inc
icebp
or
fmull
xchg
mov
jo
sbb
fildl
sub
push
adc
adc
cvtpi2ps
xchg
and
cmp
cmp
mov
push
cmp
fadd
xor
adc
clc
or
repnz
lret
jle
xchg
xor
mov
push
repz
sti
xor
ds
mov
mov
pusha
jo
cmp
jg
insb
xorb
inc
inc
aad
mov
arpl
fimuls
leave
add
cmp
sbbl
mull
mov
in
dec
mov
add
sub
sbb
mov
add
jl
cmpsb
int3
out
pop
leave
adc
add
arpl
stos
cmp
jl
add
push
lret
sbb
js
xchg
insl
xor
test
rcl
push
pop
fldenv
push
loopne
or
push
mov
cmp
push
mov
shr
or
int3
push
mov
repz
mov
int3
test
jo
jne
pushf
xchg
sbb
je
jge
in
aad
test
jb
insl
movsb
aam
cmp
jb
jbe
fcoml
pusha
test
sbb
inc
int3
xor
cli
jg
mov
push
lret
incb
rol
jns
sub
jae
mov
aam
roll
mov
add
mov
mov
sbb
aad
fs
cmp
lahf
nop
test
sbbl
enter
jmp
ret
mov
ja
add
popf
lcall
mov
cmp
add
xchg
adc
movsl
sahf
mov
arpl
insl
xchg
jg
leave
testl
or
xchg
cmp
iret
sti
cmpb
pop
mov
mov
inc
inc
mov
xchg
push
notl
fcompl
popa
pop
mov
cmp
mov
pop
mov
xchg
xchg
fstl
xchg
data16
fdivrl
push
cmpsl
cmp
decb
movsb
jp
jo
test
push
or
add
push
xchg
mov
add
daa
mov
inc
arpl
in
mov
lret
mov
je
inc
das
mov
xor
mov
pop
or
and
or
dec
sbb
mov
pop
orb
into
jnp
enter
adc
popf
mov
insl
lea
shlb
xchg
mov
mov
inc
hlt
clc
or
pop
rorb
cmpsb
cmpsb
fcoml
sbbb
sbb
aam
fwait
xchg
iret
mov
xchg
mov
jecxz
pop
nop
xchg
lds
sub
pop
int3
push
nop
rorb
or
imul
push
jg
sahf
mov
push
movsb
xor
cmp
jns
in
mov
mov
cltd
shl
sub
adc
jp
push
pop
inc
int
fs
adcb
and
jmp
cltd
mov
insl
push
xchg
movsb
xlat
mov
adc
iret
xchg
out
and
add
call
test
mov
data16
cli
push
mov
and
xchg
sbb
sahf
pop
sub
pop
push
sbb
dec
sbb
jg
jbe
xor
sbb
inc
int3
dec
rol
lahf
loop
repnz
mov
pushf
cmp
push
cmpsl
pop
cmp
rcll
mov
inc
js
jg
or
mov
aas
jge
xchg
xor
rolb
xchg
adc
enter
cmp
fistpll
inc
mov
lahf
xlat
je
mov
pop
aad
jae
stc
push
xor
and
punpckhdq
rorb
jecxz
push
pop
lock
pop
subps
ja
dec
sarb
mov
xchg
aaa
movsl
xchg
loop
stc
cmpsb
lret
jmp
xchg
out
popa
dec
add
out
fimull
sub
bound
jns
pop
incb
jmp
cwtl
pusha
gs
pop
stos
daa
lock
jl
popa
push
xchg
xchg
leave
daa
call
cli
cmp
adc
stos
push
push
pop
xlat
test
popa
mov
inc
sahf
jo
xor
mov
aaa
aaa
push
pop
sti
je
gs
loope
sbb
insb
mov
test
imul
push
mov
mov
sbb
cwtl
or
dec
jmp
xchg
sub
xchg
jp
popf
xchg
pop
repz
insb
mov
push
aaa
mov
mov
jl
and
icebp
das
and
scas
mov
jnp
xor
xchg
and
call
and
pop
ds
dec
dec
test
out
insl
xor
cmp
imul
mov
cmp
sub
jae
mov
cmpsb
aad
jmp
mov
cmpsb
ss
pop
mov
pop
sub
mov
ret
stc
fdivrs
mov
mov
incl
add
js
inc
js
and
adc
mov
imul
imul
xor
push
enter
or
add
movsl
mov
pop
ret
pop
mov
pop
movb
cmp
shlb
mov
sub
or
xchg
arpl
jp
inc
push
repnz
lock
loope
xchg
push
lea
cmp
mov
sbb
dec
fdivr
nop
sub
jl
push
bound
mov
inc
cltd
jp
push
and
pop
sbb
push
jne
adc
add
xchg
dec
xchg
sbb
inc
sub
mov
lds
fsubs
mov
pop
loop
fistps
scas
pusha
or
dec
psubd
shlb
nop
add
mov
jne
pop
mov
cmp
jb
cs
in
xor
mov
andl
push
pop
repnz
scas
andl
in
jp
repnz
sub
enter
dec
push
arpl
ljmp
out
push
sbb
push
xor
jl
push
icebp
pop
jp
or
mov
push
into
aam
add
dec
iret
lahf
jecxz
mov
ljmp
and
out
mov
stos
jg
pusha
into
sbb
cmpsb
xor
xor
inc
aad
pop
push
add
shl
pop
stos
sub
and
jnp
retw
dec
insl
mov
xlat
insb
es
mov
int
sub
lahf
jmp
cltd
mov
test
jnp
inc
movsb
mov
and
sbb
add
in
mov
pop
js
bound
inc
shl
mov
fildl
shll
addl
add
sub
fsubrs
or
or
arpl
or
xor
das
out
dec
or
xor
mov
pop
mov
mov
push
test
dec
sbb
jp
fidivrs
cmp
mov
jge
pop
push
mov
ret
mov
scas
je
dec
and
shrb
push
std
lret
or
cwtl
stos
mov
imul
aas
sub
mov
sub
dec
notl
mov
loopne
cltd
and
stc
insl
test
fistl
jbe
out
cmp
jmp
je
jg
shrb
push
xchg
int
add
jl
add
mov
cmpb
adc
fistl
cmp
fwait
aaa
or
cmp
push
out
cmp
test
out
test
enter
jge
mov
adc
jl
call
sub
imul
aam
mov
mov
popf
mov
lcall
divb
xchg
movl
or
out
jns
mov
aam
push
jbe
pop
inc
hlt
pushf
daa
xchg
push
jle
rorb
fisubrl
mov
mov
cli
out
mov
mov
sub
in
arpl
add
xor
test
mov
sahf
dec
mov
jnp
push
es
xchg
hlt
fmull
sub
in
add
pop
add
mov
repz
fsubrs
insl
insb
int3
and
fmull
xor
sub
fistl
das
push
mov
lds
or
mov
je
imul
dec
sub
inc
xchg
mov
fdivr
aam
and
push
cmpsb
and
jg
jns
dec
push
test
jns
daa
out
mov
sub
rolb
lret
loop
je
cmp
orb
xchg
adc
and
mov
incb
pop
dec
cli
ret
and
adcb
in
pop
and
ret
xor
fistps
cmp
pop
inc
test
hlt
roll
mov
or
shll
cmp
rcll
das
push
xor
dec
jo
icebp
cmp
jp
add
das
push
push
dec
out
mov
jbe
ss
sub
jae
jmp
adcl
cmp
ljmp
pusha
arpl
jns
decl
jae
jbe
sbb
adc
jnp
add
push
push
xor
idiv
pop
xchg
jge
xlat
adc
sub
mov
push
xor
sti
je
lods
push
inc
aad
outsl
out
cltd
mov
orb
cmp
adc
jnp
shlb
aam
scas
and
inc
cmp
int
xchg
incb
notb
ffree
mov
cmp
in
mov
sti
lea
or
das
int
push
xor
leave
jg
lahf
cli
rorl
pusha
xor
mov
loopne
test
fiadds
cs
test
mov
pop
arpl
or
orb
push
inc
test
sub
add
sbb
int
pushf
dec
push
fisttpl
ror
mov
in
aad
xor
dec
adc
cmp
jns
mov
jge
je
pop
pop
and
bnd
mov
mov
push
lahf
hlt
push
ficompl
ja
scas
sbb
roll
push
jmp
sbb
lods
add
pop
stos
adc
sub
sub
hlt
ja
insl
lret
add
mov
idivb
ja
adc
inc
add
xchg
sbb
icebp
call
dec
pop
xchg
xchg
pop
ljmp
in
xor
dec
inc
push
mov
add
roll
fidivl
xchg
inc
mov
int3
pop
push
js
jo
push
push
xchg
movsb
xchg
std
popa
mov
xor
push
xchg
fwait
pop
cwtl
inc
sbbl
movb
mov
cmc
addr16
xlat
sub
loopne
cltd
cmp
cmc
clc
mov
sbb
pop
pop
xor
int3
add
scas
xlat
adcb
je
fldcw
cmp
cmpsb
insb
xchg
sbb
push
inc
mov
and
jg
xchg
fsubrs
and
cwtl
or
enter
xchg
call
mov
shlb
lret
lods
add
mov
mov
pop
out
adc
pop
or
push
cmpsb
daa
ljmp
rorb
dec
xchg
call
sbb
fnsave
cmp
xchg
sahf
aad
xchg
scas
mov
or
sbb
xchg
dec
mov
mov
or
pusha
mov
mov
mov
int3
mov
pop
add
daa
ja
push
xchg
mov
mov
test
jne
push
sarl
fstps
pop
stc
hlt
clc
add
push
lea
outsb
iret
jge
jecxz
jno
pop
popa
pop
mov
gs
push
and
adc
or
xchg
mov
mov
cwtl
popf
adc
xchg
dec
cmp
enter
pop
jmp
aaa
xor
ds
mov
bound
xor
pop
cmp
daa
and
stos
lret
jle
dec
mov
icebp
leave
sbb
push
jns
xor
mov
sbb
ret
outsl
daa
add
call
call
pop
add
and
adc
sti
xor
dec
ss
adc
push
lret
and
sub
in
add
dec
shlb
xor
ror
xor
xchg
sbb
mov
shl
aam
rorb
dec
dec
dec
je
mov
fisubrl
push
in
xchg
ds
sbb
ja
icebp
mov
dec
pop
push
shll
push
xor
jmp
adc
pop
sub
fucomi
push
sti
nop
mov
aas
fwait
in
xchg
cmp
lahf
dec
pushf
test
push
pop
fwait
out
pop
cmpsl
or
adc
aad
ss
push
shlb
test
or
into
inc
js
clc
inc
or
or
sarl
inc
sub
fwait
cmp
leave
add
daa
and
mov
mov
jmp
in
cmp
cmc
sbb
jns
popa
mov
and
inc
sbb
or
dec
pusha
push
jecxz
or
xor
mov
jns
mov
xor
jae
aaa
in
push
add
mov
mov
inc
lock
cli
enter
sub
cmp
lret
mov
inc
clc
iret
movsb
mov
fstpt
sub
jl
mov
jle
and
or
dec
arpl
data16
std
cmp
aad
imul
xchg
pushf
loope
mov
imul
dec
shrl
iret
mov
mov
mov
subb
popf
cmp
out
jge
or
pop
jo
pusha
lods
shll
pop
adc
cmpsb
faddl
or
sbb
jb
lock
and
shrb
push
and
pop
dec
mov
sub
mov
test
cli
xor
mov
cmpsb
insl
sub
pop
mov
mov
jecxz
inc
mov
jge
mov
dec
and
and
insb
imul
enter
xor
xchg
std
mov
or
shl
mov
dec
ja
cltd
cmp
ljmp
std
pop
add
test
out
scas
push
ja
call
and
or
std
and
sahf
cmpsb
rcrl
dec
lcall
sbb
lods
xor
fwait
cmc
xor
shr
mov
popf
incl
mov
icebp
jl
nop
push
mov
add
in
ret
pop
cmp
daa
sbb
push
fidivs
xor
nop
ss
inc
lret
pop
add
mov
dec
mov
sbb
and
push
inc
pop
nop
lea
jne
or
fiadds
or
add
and
icebp
test
lret
daa
int
jo
or
cmp
data16
xor
xchg
dec
hlt
mov
push
xchg
test
dec
push
adc
iret
cltd
ds
out
arpl
cs
cmpb
lret
add
lods
mov
aad
arpl
in
jmp
add
push
push
mov
fcmovne
inc
adc
xchg
mov
imul
mov
xor
jle
les
pop
in
mov
fs
pop
addr16
and
ljmp
inc
rcr
xlat
or
mov
rolb
jb
jno
or
cmp
inc
xor
aad
mov
popa
shrb
mov
and
cmpsl
dec
out
inc
push
sarl
mov
dec
test
mov
mov
in
lock
das
sub
mov
or
mov
out
vmovntdq
mov
leave
sub
pop
inc
cmp
sub
cli
or
enter
sub
call
and
stos
and
mov
test
pop
fdivr
mov
addr16
push
cs
jo
mov
lods
add
cmp
push
adc
dec
or
leave
loop
lods
iret
mov
mov
and
push
je
stc
fdivr
lock
cmp
push
scas
sbb
sarl
popa
xchg
aaa
sahf
mov
rclb
sbb
xor
subl
add
les
push
xchg
sbb
iret
sar
in
or
inc
xchg
sbb
sub
push
sub
test
push
add
mov
ficompl
ret
insb
bound
xor
aas
mov
test
nop
loop
jle
add
sbb
icebp
pop
sahf
iret
inc
push
dec
push
cmp
dec
inc
sub
push
fcmovne
dec
leave
fwait
aam
push
mov
vphaddubw
ficomps
stc
cmp
inc
imul
aad
mov
xchg
mov
mov
sarl
cmpsl
clc
adc
cmpsl
jnp
clc
cmpb
jb
sbb
sarb
cmp
and
test
mov
lret
pop
test
in
jae
test
or
orl
or
mov
dec
xchg
pop
dec
scas
pushw
sbb
mov
mov
mov
jge
fmull
es
xorl
mov
incb
imul
cs
imul
imul
popf
lods
xchg
add
pop
push
jns
add
outsl
jp
dec
negl
mov
into
sbb
jb
jae
mov
xchg
jae
and
enter
das
lea
xchg
dec
cmpsl
test
jecxz
pop
xor
adc
or
add
push
leave
pop
arpl
pusha
xchg
out
ljmp
mov
mov
test
fprem1
aaa
stc
clc
scas
sub
into
mov
movsl
xchg
or
daa
mov
sbb
dec
and
dec
imul
sbb
test
repz
lds
inc
flds
sub
test
aas
inc
loop
xor
push
repnz
and
jnp
mov
jb
fidivrs
and
mov
movsl
pop
add
mov
into
fmulp
pop
mov
lea
sbb
fidivrs
fimuls
xchg
data16
jle
mov
dec
ja
rcrb
jno
mov
pushl
inc
pushf
jb
js
fs
fidivl
insl
cmp
fisubrl
xor
cmp
inc
xor
jle
sub
dec
lods
xchg
jb
loope
fwait
or
mov
push
lahf
mov
imul
movsl
mov
clc
cmp
movsb
lret
hlt
push
dec
int3
mov
popf
add
dec
sbb
and
inc
test
push
cld
or
je
inc
int3
pop
add
js
xor
in
sbb
or
and
mov
repz
dec
repz
outsl
fcomi
dec
in
out
add
mov
out
fmul
mov
icebp
push
mov
ret
fs
dec
sahf
cltd
data16
mov
dec
cmp
scas
int
push
mov
ret
clc
xchg
fs
lcall
cmpsb
push
aaa
fisubl
pop
leavew
and
adc
pop
call
mov
in
out
pop
fistpll
inc
mov
push
sbb
and
jmp
ficoml
fdivl
repnz
out
inc
sbb
mov
inc
es
repz
push
jne
cmc
add
pop
nop
mov
xchg
cmc
pop
jmp
mov
cwtl
nop
ds
push
mov
xchg
sub
push
repnz
enter
sub
aaa
aam
jl
cwtl
pop
stc
fiadds
adc
movsb
xchg
es
test
daa
push
rclb
and
push
pop
test
cltd
or
push
xchg
sbb
dec
scas
or
dec
lea
enter
sbb
dec
fadds
bound
mov
dec
fldt
inc
cmp
add
fisubs
lock
xchg
jg
insl
or
mov
cmc
je,pt
xchg
inc
bound
popa
icebp
cli
pop
enter
outsb
lods
mov
leave
test
push
jle
ret
stos
sti
xchg
xchg
sbb
jmp
pop
mov
or
sti
addr16
inc
pop
dec
roll
out
and
lcall
or
pop
cli
mov
push
inc
jno
fsubs
jno
pop
fadds
bound
in
in
aam
cmp
inc
pop
ds
in
xchg
cmp
dec
mov
shlb
loope
pop
sahf
subl
rorl
cmp
and
xchg
pop
xor
lds
cld
cli
jl
jp
arpl
sub
jne
paddq
lds
cwtl
fistps
cmp
pop
mov
push
fisttpl
push
push
xchg
dec
sub
in
adc
fdivr
mov
jmp
or
cmp
jbe
lret
xchg
sbb
mov
outsl
adc
mov
dec
jmp
jo
sub
inc
adc
lret
xor
sahf
cmp
lcall
or
bound
iret
mov
push
pop
scas
stos
lret
out
loope
loopne
lret
scas
jp
sbb
jl
pop
xor
fildll
dec
bound
loop
call
pop
andl
add
jge
hlt
xor
jb
lock
mov
pop
psubw
mov
into
mov
test
xchg
jno
movsl
jmp
addb
ficoms
xor
dec
or
ret
lds
or
jp
int3
cld
jns
mov
mov
sbb
aam
lods
xor
clc
jae
inc
fmull
jge
and
andl
dec
ficompl
xor
std
aad
je
cmp
mov
and
adc
xlat
push
mov
in
ljmp
inc
ret
fwait
sti
jle
fwait
xchg
or
dec
cs
gs
inc
xor
jb
mov
nop
orb
rcll
inc
cmpsb
gs
lret
cwtl
dec
xchg
int
sbb
xchg
sbb
and
lods
and
cmpsb
jb
sbb
or
ja
and
or
jecxz
pusha
pushf
mov
leave
sbbl
outsl
rclb
das
jns
mov
and
in
fiaddl
aad
out
jne
aad
stos
cs
or
mov
ret
push
add
push
fadds
mov
lahf
or
loop
pushf
mov
or
in
xchg
in
shlb
push
repz
loop
adc
adc
sbb
sbb
push
xor
jns
pop
cmpsb
stos
fsub
pop
pop
cwtl
dec
pop
sub
jmp
js
mov
fidivs
mov
lret
sbb
or
mov
jecxz
jb
pop
mov
sti
outsb
push
dec
or
ds
fisttpl
aas
sbb
movsl
clc
iret
mov
popf
ds
stos
xchg
mov
pusha
ljmp
jae
int
in
test
xchg
mov
inc
gs
and
js
das
cltd
add
lret
cmp
jge
dec
inc
loop
imul
fs
xor
insl
lcall
xor
mov
jmp
rorl
icebp
mov
pop
in
pop
sahf
jmp
stos
push
pop
pop
mov
lods
push
adc
aad
hlt
lods
pop
lcall
pop
aas
bound
jge
mov
and
stc
in
mov
xchg
or
xchg
scas
sub
mov
xchg
lods
rorb
pop
mov
xor
lcall
cs
jns
push
imul
xor
mov
cs
movsl
and
cs
inc
aaa
std
sti
cmpsb
in
lret
jno
cmpb
xor
mov
fldenv
sbb
sub
cmc
mov
dec
xchg
clc
repnz
pop
je
pop
aas
stc
loope
push
push
jns
arpl
fstpt
mov
ret
clc
ret
mov
out
fmull
fbld
push
mov
popf
dec
add
mov
shll
aas
test
leave
sbb
daa
jno
mov
es
inc
es
push
pop
ds
add
popf
fwait
test
aas
int
out
push
sub
push
or
pop
add
iret
out
add
shrb
lods
jb
push
adc
aaa
xchg
mov
addr16
fldln2
and
xchg
fcmovb
pop
insb
into
or
mov
sbb
adc
push
sub
inc
inc
cmp
sbb
cltd
or
mov
jmp
scas
adc
int3
mov
std
test
ds
rorl
xchg
pop
dec
inc
or
pushl
ljmp
sub
inc
stc
aaa
adc
leave
lea
mov
add
push
sbb
in
sbb
pop
mov
lcall
inc
fstp
repnz
es
in
out
outsb
add
fchs
lret
sub
aaa
scas
jge
jne
adc
mov
fisubl
jmp
imul
repnz
mov
push
out
movsb
popa
pop
lods
fwait
cmp
fdivr
pop
fisubrl
ret
ret
enter
lret
and
out
pop
insb
xchg
add
mov
popa
push
and
je
adc
cmc
mov
cwtl
push
subl
push
push
jmp
add
jmp
pop
outsb
jmp
lods
push
push
pop
mov
jmp
or
pop
hlt
iret
inc
rclb
cmp
bound
mov
mov
add
mov
sbb
stc
or
movsb
gs
pop
test
sub
out
cld
int
cmp
ret
jle
adc
jecxz
dec
sbb
lret
pusha
sub
test
and
inc
out
mov
imul
pop
ror
jbe
inc
xlat
pop
lds
arpl
sub
lret
outsl
mov
xlat
arpl
and
mov
in
das
call
jbe
int3
mov
fisubrl
insb
dec
mov
in
adc
mov
cmp
jnp
cmc
sbb
in
sbb
dec
lret
xor
ja
or
or
inc
push
cmp
jge
add
cltd
mov
in
fcoml
lcall
dec
or
jecxz
pop
stos
sub
cmp
push
lods
jae
dec
xor
mov
loop
test
jmp
jae
lods
cld
dec
mov
push
aam
movsb
pusha
adc
inc
jno
movsl
and
adc
in
dec
out
pushf
ret
fistps
xchg
outsb
test
cmp
outsl
rorl
fs
dec
insl
dec
jno
das
xchg
jno
lods
jb
cmp
xchg
xchg
jbe
jg
mov
enter
mov
cwtl
pushf
pop
inc
fcoms
pop
pop
pop
dec
add
cmp
cmp
push
insl
jmp
and
pop
sbb
push
push
push
xchg
call
outsl
jns
push
mov
fucomp
sub
jns
xor
push
shll
stos
add
sahf
jb
mov
cmp
scas
lods
mov
mov
sub
or
sbb
aaa
sbb
add
pop
popa
outsl
mov
inc
lret
in
mov
mov
int
arpl
lock
mov
dec
push
add
jne
arpl
add
push
idiv
mov
push
test
adc
push
fwait
adc
push
daa
dec
inc
scas
fdiv
lods
rcll
cli
inc
adc
repnz
add
xor
sahf
dec
mov
rolb
popf
es
adc
dec
addb
sub
adcb
sub
cmc
and
mov
scas
mov
pop
pop
xor
ret
and
rol
jmp
dec
and
sahf
out
test
mov
aam
fnstsw
push
jo
ja
ret
mov
das
jmp
fistpl
mov
mov
mov
sahf
jns
and
cwtl
dec
in
mov
nop
aad
cli
sbb
push
cli
shl
mov
ror
mov
lods
rcl
adc
sub
mov
or
dec
sahf
lahf
adc
lods
mov
lret
sarb
js
frstor
es
mov
mov
stos
sub
add
loope
scas
repnz
imul
cld
fldenv
jecxz
xchg
mov
das
movsl
repnz
add
fistpll
sbb
daa
cmp
sbb
stos
imul
cmp
pop
lcall
jns
and
jmp
fimull
xchg
fwait
sbb
push
mov
mov
xchg
xchg
mov
fimuls
scas
push
fmulp
and
pop
dec
andb
adc
pusha
mov
cld
das
adc
ds
shlb
pop
insb
and
dec
mov
or
mov
incl
fisubl
cmpsb
sbb
loop
mov
popa
subb
push
lcall
push
inc
mov
add
push
ljmp
push
and
shr
repz
add
popaw
adc
add
les
insb
bound
xchg
xchg
testb
faddl
pusha
inc
pop
pusha
fbld
test
and
das
xor
fcmovnb
cmp
les
mov
adc
je
or
pop
sbb
popf
or
jl
adc
pop
jo
jmp
add
out
enter
sbb
xchg
xor
xor
filds
sub
xchg
stos
jnp
aaa
lods
popa
fdivrs
test
ljmp
dec
mov
mov
push
pop
sub
movsb
jge
repnz
ret
jl
std
sbb
push
adc
and
out
xor
xor
mov
mov
dec
add
add
aad
rclb
cmp
cmp
pop
cmpsl
fnstsw
dec
adc
jno
loopne
test
arpl
cmpsb
jns
sub
andb
xchg
push
push
jo
inc
mov
data16
cmp
xchg
int
add
in
mov
or
xchg
adc
adc
push
or
imul
lahf
push
ret
aaa
inc
out
add
xchg
enter
xor
or
pop
xchg
lcall
push
xchg
add
aaa
add
div
mov
dec
sbb
mov
aaa
stc
dec
mov
cmp
xor
dec
and
inc
mov
ficoml
sbb
mov
insl
jae
mov
in
mov
and
jg
mov
mov
adc
fs
lea
or
int
bound
mov
popa
mov
movsl
in
inc
cmp
in
leave
ss
adc
fldcw
adc
and
cmp
lahf
mov
repnz
push
inc
call
icebp
out
add
mov
sub
dec
lea
ss
inc
xor
jne
xchg
adc
ljmp
xchg
pushf
xchg
movsb
push
call
adc
push
or
int3
cwtl
jecxz
test
mov
mov
es
lret
mov
ljmp
jbe
or
mov
inc
out
std
mov
mov
push
mov
in
addr16
sub
call
sbb
fbstp
movsb
mov
xchg
rep
loopne
arpl
xchg
stos
fwait
insl
pop
xor
adc
push
jbe
mov
cltd
dec
popa
xor
sarb
cmp
mov
push
mov
ss
andb
xchg
mov
iret
or
mov
sbb
cmpsl
and
rcrb
push
push
add
mov
or
sbb
fs
push
hlt
rorl
mov
dec
add
lds
inc
sub
int
mov
xor
fldl
mul
mov
jbe
test
push
xchg
jno
push
sti
insb
sti
cmp
rolb
ja
mov
dec
or
test
adc
cli
dec
adc
jbe
sbb
dec
insl
mov
sbb
frstor
adc
lcall
pop
jo
pop
rolb
pop
push
roll
sub
add
inc
adc
pop
sbb
out
arpl
fdivrl
mov
and
jne
in
scas
enter
or
shll
add
imul
dec
inc
movsb
mov
mov
les
fwait
in
es
sbb
rcrl
xor
loope
sbb
sbb
popa
iret
push
xor
xchg
pop
stos
fisttps
xor
jne
push
mov
jge
fdivrp
les
loopne
jne
leave
push
and
out
dec
and
adc
adc
cmp
inc
mov
dec
dec
sti
into
cmc
xchg
xor
scas
jg
push
add
xchg
movb
or
leave
push
sub
jbe
gs
mov
xchg
ret
pop
lcall
or
mov
dec
jnp
xchg
out
mov
sbb
fadd
mov
lcall
and
jmp
pop
add
xor
ss
pop
sbb
sub
into
stos
adc
jnp
xor
xor
fistpl
xchg
dec
pop
fsubs
xchg
jns
cmpb
adc
addb
add
xlat
shlb
iret
jo
push
ror
sahf
mov
ss
xchg
cld
subl
or
fdivrl
loop
mov
jle
add
loop
int3
cmp
jae
pop
add
jno
pop
mov
lret
gs
fwait
cltd
loopne
dec
or
lds
or
sub
cmp
in
mov
les
lds
test
in
je
cld
cmpsl
pop
lds
pop
cs
jne
je
shll
imul
xchg
push
lret
roll
adc
mov
aam
imul
scas
int3
cmpb
lret
inc
scas
movsl
cld
sbb
dec
jg
sub
ljmp
hlt
rcl
clc
pop
push
push
jl
loop
fsubl
add
stc
mov
daa
gs
add
bnd
jae
mulb
mov
rcrb
cld
mov
std
inc
fsubs
add
mov
mov
lock
sbb
daa
scas
sbb
lret
adc
fldcw
repnz
popf
scas
push
pop
dec
pop
movsb
lods
mov
sub
jno
pushf
out
fs
loop
aam
in
cmp
adc
sbb
ret
fildl
mov
mov
mov
and
or
cmpsl
add
adc
jbe
fbld
pusha
lahf
scas
mov
and
cmpsl
xor
sbb
in
adc
xlat
lret
mov
push
lcall
add
idivb
push
push
jmp
push
sbb
mov
pop
jae
imul
push
add
sahf
loope
ret
xchg
nop
lcall
sub
dec
or
cmp
mov
mov
pop
rolb
sbb
adc
cmp
divl
in
repnz
xlat
outsl
xor
fcomip
push
push
lret
ret
and
insb
mov
clc
pop
mov
or
add
ret
push
mov
mov
in
inc
lock
inc
frstpm(287
dec
mov
loopne
dec
cli
push
iret
call
xchg
inc
into
pop
xchg
mov
into
lods
jb
push
cmp
mov
and
jecxz
ret
sti
sub
insl
push
fisubs
sub
ja
xor
frstor
insb
test
inc
insb
xor
adc
sbb
sbb
lds
int
push
pusha
scas
cwtl
or
test
shll
rcll
dec
cwtl
les
dec
mov
nop
call
pop
xor
fwait
in
imul
lods
insl
test
adc
mov
add
jp
stos
sub
outsl
push
and
loopne
and
ss
loope
adc
dec
or
pushf
out
xchg
gs
lcall
daa
rcrl
call
pop
adc
insb
jne
xchg
test
cli
fists
push
xor
popa
sbb
daa
cmc
cmpsb
jno
imul
or
testl
sub
lds
push
inc
aam
mov
imul
and
dec
xchg
andl
cmp
int
push
les
mov
mov
scas
stc
insb
jl
xor
mov
add
sarb
jmp
sarb
jno
dec
lcall
push
decb
jl
repnz
xor
cli
jecxz
fcoml
mov
mov
jb
outsb
test
jb
scas
and
loop
mov
xchg
outsb
or
xor
sub
lods
dec
cmc
mov
mov
inc
rolb
mov
jns
inc
cld
inc
idiv
daa
call
mov
out
sub
jb
int3
outsb
jno
ficoml
cmpsl
pop
mov
into
jmp
xchg
cmp
mov
mov
jmp
cltd
add
cmp
jo
lock
xor
pop
out
arpl
movsb
jl
or
test
test
dec
test
leave
dec
or
lds
insb
pmuludq
jbe
push
cmpsb
cs
jmp
insb
and
les
loope
ljmp
and
sub
pop
out
mov
and
jne
sub
fnstcw
pusha
sub
faddl
icebp
and
aad
inc
mov
adc
cmc
adc
int
das
xchg
mov
subl
inc
add
test
jb
mov
idiv
sarb
add
sub
cmp
or
push
push
mov
push
stos
cmpsl
jo
mov
stc
loop
xchg
pusha
xchg
pushf
mov
inc
mov
hlt
ss
xor
and
sub
mov
adc
call
imulb
lahf
inc
mov
lods
dec
xchg
daa
imul
add
pop
add
add
adc
adc
movsl
out
call
sub
in
xchg
inc
lret
adc
sti
mov
sub
mov
xchg
stc
pop
shll
into
or
inc
push
lds
stc
pop
lock
std
adc
pop
pop
pop
insb
mul
xor
dec
sbb
lret
or
sbb
sbb
pop
pop
arpl
ret
push
pop
lret
xchg
pop
mov
pop
dec
mov
ret
push
dec
jnp
sarb
or
mov
cs
pushf
sub
inc
inc
and
mov
in
mov
out
stc
dec
andl
inc
push
fsubrp
dec
push
mov
adc
pop
decb
xchg
aam
sbb
or
push
mov
data16
mov
xorl
cmpsl
ljmp
gs
push
cltd
lods
mov
push
clc
mov
push
lods
pop
cmpsl
add
dec
and
ficomps
xchg
inc
mov
movsl
pop
jmp
into
negl
dec
jno
inc
nop
fnstenv
push
xchg
and
add
adc
sbb
mov
jno
jecxz
imul
aad
dec
sbb
xor
push
dec
mov
cld
push
cmp
cwtl
mov
fmuls
lahf
in
ds
dec
je
dec
cmc
jge
jecxz
dec
cmp
jmp
inc
mov
jl
push
dec
pop
shll
push
mov
arpl
fnstsw
insl
lods
popf
fsubl
mov
loopne
dec
add
fs
daa
mov
cmp
cli
and
into
addr16
stos
loopne
xchg
sti
xchg
popa
sbb
xlat
out
fdivl
mov
insb
stos
xchg
ja
iret
push
cmpsl
sub
pop
jb
push
sahf
jbe
shrb
jp
out
movsl
cmp
jp
adc
pop
jae
xchg
xor
lods
jmp
scas
lea
mov
out
pop
fsub
sti
push
xchg
and
adc
jnp
jb
addr16
cs
stos
or
sbb
scas
mov
orb
mov
pusha
aam
xchg
lret
out
inc
mov
add
in
dec
jg
xor
sahf
push
dec
cli
add
incb
andb
inc
aam
dec
sbb
lahf
mov
fld
clc
or
jg
aam
pop
push
call
mov
das
dec
das
dec
ss
jp
test
cmp
inc
push
ficoms
out
sbb
push
adc
jae
push
cltd
pushf
mov
xor
lock
out
rcrl
and
mov
add
dec
push
mov
fmul
cwtl
push
js
in
adc
imul
cmpsb
das
jge
hlt
out
sbb
dec
inc
inc
pop
push
mov
jo
popa
lds
fidivrl
int3
mov
dec
decl
sub
dec
cmp
push
dec
outsb
pusha
pop
xrstor
dec
inc
int
or
pop
jmp
push
mov
mov
jb
and
icebp
jg
cmp
pushf
pop
add
xorb
sub
xchg
lods
aas
je
pop
fcmovnb
stos
enter
aad
xchg
mov
fistpll
sub
stos
pop
jmp
das
ret
hlt
adcb
dec
pop
ficompl
in
sub
mov
fbld
push
imul
push
xor
cmpl
gs
mov
sub
lock
jge
cmp
stos
out
or
or
inc
jmp
lahf
mov
inc
mov
and
out
add
sbb
add
jmp
push
outsl
push
xlat
push
push
jg
lahf
pop
stos
or
imul
icebp
xor
in
jg
movsl
clc
notl
aam
sbb
fdivrs
sbb
gs
cli
clc
lods
mov
in
ja
movd
cld
iret
fwait
mov
lods
mov
imul
out
lret
cmp
and
xchg
imul
mov
xchg
inc
dec
clc
and
jns
mov
jno
and
jnp
cwtl
jb
in
pop
sbb
mov
mov
and
mov
lea
clc
es
mov
fdiv
xchg
cmp
fsubrl
mov
mov
pusha
aad
popa
sub
xchg
adc
xchg
dec
ret
outsb
jno
mov
xlat
mov
clc
cmpsl
pop
and
push
cmp
jg
pop
push
imulb
inc
es
mov
jmp
test
xorl
push
or
cltd
testl
xchg
pop
mov
sti
sbb
sbb
faddl
loopne
push
pop
dec
push
das
jbe
pop
xor
ret
jns
jmp
pop
shl
mov
and
add
xlat
pop
add
mov
dec
add
sub
jb
std
orl
dec
test
sbbb
or
cmpsl
mov
testb
adc
repnz
jbe
adc
inc
and
jg
fldt
pop
cmpsl
bound
pop
call
aam
cs
shlb
fsubr
jno
mov
mov
int
pop
mov
es
xchg
push
jge
adc
mov
fnstenv
and
xor
into
sti
mov
lods
jb
mov
out
je
add
add
fnsave
mov
dec
and
push
test
outsl
mov
adc
outsl
mov
ljmp
pusha
jae
jb
addr16
loope
es
out
mov
int
or
jg
js
pop
or
push
add
pop
data16
pop
out
lods
push
je
test
femms
cmp
das
imul
pop
jecxz
cmc
inc
and
or
fstpl
mov
lods
sbb
cmc
add
cmp
dec
pop
dec
and
imul
xor
movsl
stos
push
fisttps
insl
in
cmp
dec
hlt
sahf
mov
aam
push
dec
sbb
sbb
mov
test
paddsb
dec
push
or
adc
fistpl
xor
cltd
cmp
in
mov
or
mov
popf
std
jb
inc
dec
enter
ret
xor
xor
dec
sbb
pop
insb
mov
call
outsl
pop
out
es
test
pop
push
push
pop
xor
adc
iret
popa
in
test
cmp
shrb
xor
or
lea
call
das
adc
inc
jl
mov
jnp
push
fadd
push
nop
shrb
addb
jge
sbb
mov
pop
insl
mov
sub
dec
movl
inc
rorb
mov
scas
andb
lds
inc
popl
inc
scas
or
jbe
dec
mov
in
outsb
mov
and
pop
jp
stos
dec
shrb
test
mov
aad
or
ja
aas
mov
mov
into
mov
out
or
push
xor
cmpsb
xchg
inc
xchg
sbb
jno
in
xchg
cmp
stos
dec
fs
inc
aaa
cmp
data16
jnp
test
push
testb
sub
shr
mov
jp
pop
adc
mov
dec
lret
rorl
movsb
es
cmp
pop
clc
les
incb
arpl
imul
fcmovne
push
add
adc
and
mov
push
push
loope
jp,pn
xlat
rolb
mov
enter
xor
nop
ret
daa
lcall
jmp
das
in
mov
popa
pop
add
rorl
push
xor
incl
pop
pop
lahf
mov
cmp
cmpsb
clc
xor
lds
insl
or
nop
aaa
into
aaa
inc
aad
sbb
inc
pop
sbb
or
repnz
dec
sub
mov
fiaddl
mov
push
cli
mov
push
cmp
negl
mov
jp
cmp
repz
cmpsb
sbb
arpl
enter
xchg
xor
loopne
addr16
jbe
jmp
imul
inc
sti
je
orl
mov
push
xchg
xchg
push
add
jbe
stos
clc
data16
add
insl
inc
icebp
xor
pop
adc
in
xchg
int3
gs
cmpsl
stos
add
outsb
xor
xchg
clc
imul
mov
or
cmp
xor
add
push
leave
pop
lret
push
lock
jns
or
xor
nop
or
or
sub
jns
cmp
add
dec
cltd
mov
xor
push
adc
push
hlt
lods
pop
faddl
dec
xlat
insb
icebp
xchg
jmp
out
cli
add
out
xor
cwtl
shrl
inc
std
adc
lea
mul
xor
xchg
repnz
cmp
fld
cli
and
or
into
mov
adc
dec
rorl
sub
sub
pushf
xor
add
int3
add
divb
add
mov
cli
pop
fwait
jmp
movsb
mov
add
jp
cli
out
add
cmpl
cmp
mov
or
xchg
fistps
pop
adc
fs
mov
jge
dec
jae
push
popa
xor
js
mov
cld
repnz
cmp
testl
add
lds
nop
cs
fcmovnbe
leave
add
aam
ret
mov
mov
repz
or
push
cmpsb
fidivl
mov
sbb
cmp
aas
cltd
jmp
fsts
jo
push
aas
jb
stos
cli
mov
push
adc
pop
pop
xchg
and
and
aad
dec
cld
cltd
and
lods
data16
mov
jb
pop
xor
lods
or
clc
out
aad
inc
hlt
icebp
inc
xchg
mov
sti
mov
lds
cmp
js
push
incb
adc
sub
in
ljmp
push
xor
add
mov
mov
insl
lahf
out
xor
xorl
pop
leave
iret
sub
xor
add
mov
mov
daa
fstps
adc
in
sub
fbld
mov
shl
or
scas
sbb
aam
negb
push
sahf
bound
pop
into
push
leave
pop
sub
add
and
cmp
xor
mov
popa
inc
push
popf
push
ret
cmp
cwtl
out
cmpsl
sbb
std
mov
sub
call
mov
and
jb
jl
lret
cli
icebp
or
in
icebp
cmp
test
push
jecxz
push
push
and
push
icebp
push
mov
dec
cmp
inc
and
jno
rol
adc
pop
and
lods
shlb
dec
mov
ret
mov
jge
sub
dec
adc
push
jge
cmp
mov
sub
in
and
adc
or
outsb
clc
push
shll
in
and
sar
xchg
xlat
push
mov
and
dec
out
movsb
push
pop
or
push
call
outsb
imul
stos
andl
cmp
mov
mov
xchg
push
mov
imul
fwait
mov
fwait
dec
cwtl
mov
fisttps
xchg
pop
sub
daa
clc
ljmp
aas
lret
xor
ljmp
in
fisttps
std
cltd
xchg
inc
push
in
popf
leave
cmp
adc
sahf
cwtl
and
cs
mov
pop
pop
rclb
ret
xchg
mov
jecxz
sbb
cmc
sbb
cmc
and
rorb
mov
add
adc
roll
xlat
ret
sbb
lods
mov
jbe
pop
pop
mov
in
and
imul
adcb
mov
xchg
xchg
sub
jns
jg
inc
popa
bound
int
popa
ljmp
shlb
test
int
jp
jp
movsl
add
sarb
fnstsw
cwtl
jmp
mov
movsl
stos
mov
sbb
std
lcall
fldenv
push
xorl
push
mov
push
cld
cmp
stc
int
inc
jbe
cli
inc
pop
in
or
adc
or
pop
sbb
out
test
filds
shl
into
mov
fxam
sbb
push
add
sar
lea
and
fcmovnbe
add
mov
mov
sub
jns
scas
mov
mov
lcall
inc
divl
in
add
imul
mov
xchg
inc
sub
int3
xchg
mull
push
fwait
cmpsl
mov
pusha
stos
push
in
out
js
aas
out
cld
dec
bound
enter
mov
cli
and
jns
inc
in
movsb
adc
push
or
and
cmp
xchg
daa
inc
pop
pop
daa
lret
lea
pop
cmp
push
icebp
sbb
out
sub
adc
jmp
jnp
pusha
sbb
in
or
test
push
sti
int3
push
pop
fadds
fstl
inc
or
lret
fidivrs
jne
shll
lods
clc
mov
into
pop
repz
sub
fwait
mov
enter
aad
stos
sub
pop
fcoms
out
dec
xchg
cmpsl
cmp
outsl
rol
into
fmuls
jnp
rcr
ficoms
lret
pop
push
lock
or
out
sbb
mov
adc
add
xor
pop
inc
mov
mov
inc
mov
jns
dec
add
pop
inc
push
xlat
sbb
and
sub
cltd
push
cmp
rcll
inc
adc
dec
or
xchg
jbe
push
mov
mov
add
or
adc
mov
std
hlt
faddl
push
test
inc
push
and
xor
add
pop
sbb
in
fs
sub
movsl
ljmp
roll
and
jno
in
push
sub
cmp
js
ret
cs
lret
mov
adc
jno
js
ret
test
fidivl
out
cmp
xor
inc
shrb
lret
and
ret
mov
stc
push
inc
sti
pop
pop
xchg
and
pop
and
jns
mov
lods
popa
jb
call
sub
les
mov
xchg
sub
mov
enter
xor
pushl
insb
mov
movsl
pusha
pop
clc
cmpsb
jne
iret
mov
add
jge
pop
fnstcw
mov
adc
mov
in
insb
loop
inc
cmpsb
xchg
dec
pop
stos
inc
sbb
stos
leave
mov
test
adc
adc
int
lret
rol
xchg
incl
xor
mov
sbb
loop
jns
xchg
mov
cltd
xlat
into
or
cmp
pop
jp
ljmp
pop
mov
push
add
in
inc
push
cmp
dec
rolb
scas
jge
popa
lcall
scas
jne
int3
fsubr
mov
xlat
sbb
xchg
addr16
jbe
add
out
repnz
cmpsl
test
cmp
lcall
repnz
xchg
rcrb
lret
movsb
xlat
push
or
mov
lock
cltd
out
fidivl
mov
fistl
rcrb
jge
addr16
jg
push
aaa
shrb
loope
cmp
xor
and
mov
loope
pop
adc
cmp
imul
mov
scas
xchg
fisubrl
inc
adc
or
mov
or
fadds
jecxz
fchs
pop
repz
movsl
pusha
mov
imul
daa
sub
dec
mov
lret
in
xor
push
lea
cmp
orl
mov
cmp
fucomip
inc
sbb
sub
dec
insb
out
jns
shl
push
dec
repnz
stos
pusha
push
dec
xchg
outsb
test
outsb
test
ljmp
or
push
adc
imull
pushf
jno
jg
cmp
lds
cmp
pushf
fidivl
jle
fmuls
daa
push
ret
inc
or
pop
dec
inc
sbb
xlat
pushf
fs
push
sbb
sbb
push
push
lahf
aam
adc
or
or
mov
call
insb
pop
cmc
adcl
in
fcoml
lcall
jg
sbb
je
mov
out
jbe
pop
pop
mov
sub
movsb
jg
xchg
fidivs
sbb
aam
ret
dec
xor
pop
pop
ja
mov
leave
stc
push
cs
push
ds
test
push
pop
mov
roll
push
or
add
icebp
sti
mov
and
std
enter
test
pop
popf
sub
sbb
and
xchg
mov
sbb
inc
mov
push
pop
jo
fnstcw
insl
outsb
cmp
xor
lret
shlb
sbb
es
jnp
mov
fldcw
jp
sar
cli
hlt
sub
mov
sbb
pop
inc
pop
mov
xchg
adc
cwtl
fldl
dec
lahf
sbb
pop
stos
push
js
cld
add
or
das
minps
pop
cmpsl
or
jecxz
test
loop
adc
pusha
xchg
es
push
iret
xchg
rol
popa
lods
sbb
in
dec
je
cmovb
dec
and
pop
repnz
cmpsl
loope
inc
dec
clc
push
rcl
xchg
xchg
and
sbbb
insl
xchg
out
lods
das
pop
test
xchg
jp
jbe
mov
cmp
xchg
or
pop
inc
lret
push
adc
mov
insb
aam
jnp
push
repnz
xlat
clc
hlt
or
and
adc
cmpl
inc
lds
stos
mov
xor
mov
dec
lock
outsb
xchg
jnp
les
lcall
xor
xchg
mov
mov
jae
xchg
adc
pop
pop
out
popa
xor
addr16
lea
dec
push
iret
movl
int3
or
push
xlat
inc
push
data16
xchg
shrb
jecxz
fiaddl
and
adc
test
enter
mov
jne
xchg
pusha
jae
mov
jmp
ds
ja
add
sbb
xchg
cld
out
movsl
inc
addr16
popf
dec
mov
out
adc
sbb
jns
xadd
nop
outsl
arpl
jne
pop
xor
mov
push
shr
sbb
push
mov
lods
mov
mov
rcl
filds
mov
sub
pushf
pop
enter
out
xchg
add
fs
cmp
mov
rorl
inc
fbstp
popf
adc
in
imul
push
lods
or
andb
loope
test
cs
ss
xor
pusha
lcall
jns
and
mov
data16
inc
into
sti
out
mov
popl
and
push
xor
lds
push
jg
adc
jmp
insb
dec
pop
xchg
ret
out
adc
rcrl
mov
jg
loope
jb
push
dec
or
jmp
ret
jg
and
add
aas
xchg
mulb
mov
sub
dec
test
jns
dec
mov
or
inc
cmp
fildl
mov
pushf
jb
push
xor
loope
sbb
js
pusha
icebp
adc
xchg
aas
rcll
and
pop
call
add
cmpl
leave
loop
sub
mov
mov
push
mov
mulps
insb
adc
daa
mov
mov
insl
push
pusha
xchg
jp
shll
sbb
dec
and
inc
popa
cmp
lret
xchg
in
mov
cli
lret
loopne
and
sbb
out
call
inc
xchg
in
lds
nop
mov
adc
jnp
mov
outsb
jecxz
mov
or
enter
aaa
aas
xchg
ret
xchg
sub
sbbb
xor
add
or
idivb
ret
sahf
push
xchg
sbb
lock
xor
or
roll
stos
test
lret
cmp
popf
fsubrs
call
inc
fwait
lds
out
jmp
jecxz
fdivs
or
push
mov
push
scas
fwait
lods
adc
xor
push
pop
xchg
lds
jns
enter
hlt
stc
je
jmp
pop
addb
xchg
movsb
jb
loope
ds
mov
cmp
popa
pop
sti
sub
jp
fcoml
outsb
stc
inc
xor
in
leave
lret
lds
mov
je
movsl
inc
sbb
movsb
das
repz
dec
jg
jmp
adc
mov
or
lods
sbb
sub
rolb
lret
leave
sbb
ss
imul
movsb
lret
in
arpl
lret
fsubrl
push
inc
dec
sub
dec
jecxz
xor
cltd
cli
testl
in
push
or
push
pop
sbbl
sti
insl
cmp
nop
mov
or
and
ds
xor
xor
pop
mov
xor
xorl
inc
test
xchg
clc
ret
cmp
push
imul
test
jmp
xchg
dec
push
lods
push
mov
in
mov
mov
fisubs
mov
cmp
fwait
mov
js
cmp
sbb
dec
xor
test
rcll
pop
dec
push
rcll
jne
add
mov
push
pop
push
cli
cmp
xor
hlt
imul
mov
movsl
aas
mov
mov
mov
sbb
popa
xor
mov
push
cmpsl
mov
icebp
neg
out
dec
xor
push
mov
mov
or
rcl
mov
int3
in
inc
push
cld
cmp
stc
les
mov
add
adc
sarl
rolb
pop
pop
in
push
pop
push
mov
xor
xchg
pop
pop
dec
mov
lret
cmp
rorl
std
xchg
sub
scas
je
je
add
fisttpll
fcompl
add
addr16
mov
cmp
int
fadd
xor
daa
int
cmpsb
sbb
jbe
ds
adc
sti
loop
sahf
or
and
out
int3
in
cmp
xchg
dec
popf
pop
ficoms
dec
sbb
adc
insb
push
push
fadds
adc
sub
enter
sbb
dec
mov
mov
jne
fsubrl
xchg
movsb
shrl
imul
cmp
adc
mov
jae
cmpsb
fs
xchg
jp
jne
loopne
loopne
std
int3
push
jae
das
shl
adc
mov
sbb
and
add
in
mov
cmp
nop
inc
and
adc
fisttpll
sub
and
xor
leave
jl
pusha
div
xor
cld
pusha
in
daa
dec
mov
xor
add
add
mov
gs
jmp
mov
shll
idivl
sbb
jnp
push
jae
insl
cmp
and
sbb
push
inc
fisubl
xlat
xlat
das
je
sbb
ret
call
repz
cli
int3
lods
xor
scas
mov
ret
pop
mov
into
pop
data16
inc
mov
jns
dec
and
or
add
push
cmp
mov
xchg
stc
fcoml
mov
decl
push
xchg
enter
add
pop
mov
dec
jmp
clc
mov
aaa
cmp
or
test
nop
into
mov
dec
enter
cwtl
pushf
push
push
sub
push
icebp
add
icebp
jecxz,pt
lds
pop
stc
jmp
inc
mov
js
lock
mov
mov
sbb
sub
mov
hlt
pop
scas
shrb
and
sub
push
or
es
xor
pop
cmpsb
adc
popf
inc
sub
movsb
jno
sbb
add
sbb
push
or
rcr
lret
ret
popa
lock
arpl
ret
jnp
sub
mov
outsl
inc
push
cltd
mov
rcrb
mov
mov
jge
adc
js
mov
mov
addr16
aam
push
add
das
imul
outsl
pop
mov
jo
je
mov
icebp
dec
push
xchg
pop
dec
jmp
push
push
jl
enter
dec
jno
into
jle
xchg
push
cmpsb
and
mov
add
iret
mov
adc
lods
mov
and
mov
push
js
sbb
mov
test
sbb
icebp
cmc
repnz
inc
pop
inc
sti
ja
testl
xchg
out
ja
shrl
mov
inc
push
lret
and
es
fadds
push
xor
je
out
lret
imul
out
sub
es
pop
ljmp
data16
dec
jecxz
mov
and
mov
fsub
out
fdivp
mov
jp
mov
outsl
adc
inc
ret
ret
ss
mov
inc
lock
xchg
movsl
mov
popa
shrb
scas
shll
cmp
inc
inc
mov
insl
stc
add
jle
cmp
inc
xchg
stos
xchg
cmp
mov
push
mov
sahf
es
ljmp
pop
inc
imul
dec
mov
stc
add
dec
lock
pop
subl
sub
cwtl
notb
enter
fbld
push
mov
enter
shrl
jnp
rorl
arpl
lcall
test
fcompl
xchg
xchg
push
cmp
push
je
data16
cmp
mov
mov
addr16
das
inc
gs
icebp
xchg
mov
cmp
mov
jge
jp
out
add
sbb
pop
in
in
ljmp
mov
ss
pop
pop
sbb
bnd
mov
pop
xor
xor
inc
inc
xchg
je
test
mov
lret
mov
lcall
cmp
repz
adc
movsl
xlat
dec
xchg
mov
lret
cmpsl
stos
fs
decb
subb
fwait
jnp
call
push
ja
cmp
dec
mov
push
mov
mov
and
mov
fs
outsb
clc
mov
imul
xchg
fildll
cs
repz
push
push
xor
xorb
imul
insb
sahf
adc
loop
xor
mov
cld
push
or
jae
pop
cmp
nop
mov
shll
sbb
xchg
pop
pop
inc
ror
lret
jne
inc
jo
stos
lock
test
ret
dec
lcall
stos
outsb
pop
sarb
adc
dec
mov
popf
mov
mov
lock
pushf
sub
imul
lret
adc
jge
jge
in
sahf
sub
movsb
push
or
adc
dec
aas
daa
mov
xchg
and
das
or
inc
and
dec
dec
jle
shlb
daa
repz
sbb
pop
ret
jmp
add
pop
mov
shl
push
out
and
stc
ds
xor
add
adc
das
call
xchg
and
pop
mov
pop
push
scas
push
cmpb
or
loop
xchg
gs
lods
in
pop
adc
xor
jmp
jle
sbb
sarl
ja
push
push
inc
insb
cs
dec
int
arpl
mov
push
lds
nop
adc
or
push
hlt
in
js
cmp
ljmp
sbb
lods
test
ss
jecxz
imul
lods
rcl
cmpsl
mov
adc
cmp
cmp
cmc
ljmp
sti
test
ror
and
add
fdivrl
les
xor
xchg
xor
mov
ret
mov
icebp
sub
ret
out
jns
ds
sbb
mov
sub
mov
sbb
cmp
xchg
sbb
push
mov
hlt
push
popa
cltd
cmp
inc
fs
xchg
fs
lcall
and
xchg
push
bswap
lock
push
imul
mov
sbb
xor
fisubrl
mov
dec
and
and
test
push
das
test
lahf
or
bound
inc
and
mov
push
pop
mov
add
pushf
shr
addr16
lods
clc
scas
xorb
fwait
xor
mov
fadd
push
test
or
cmpsb
xor
lds
or
pushf
sub
xchg
xchg
mov
lret
shl
lcall
push
mov
push
mov
cmp
cmpb
mov
mov
pop
fsubrl
ss
or
mov
mov
mov
add
fldt
in
jl
cmp
stos
xchg
add
addl
inc
dec
mov
adc
pop
jb
sub
sbb
jp
jbe
xlat
sub
ds
add
adc
lret
jge
jl
shl
adc
cmpsb
in
mov
sahf
mov
into
js
sbb
xor
xchg
cmpsl
into
mov
in
jmp
roll
lods
add
xchg
int3
push
jg
mov
push
das
mov
jle
fistps
push
pushl
mov
and
push
jp
dec
cltd
fcmove
popa
rorb
insb
inc
pop
popa
in
sub
movsl
xchg
aaa
out
or
dec
dec
push
repnz
xor
popf
or
and
mov
insb
pop
gs
or
add
push
pushf
loopne
push
xlat
jnp
stc
inc
stos
mov
inc
push
sarl
jae
cli
and
mov
aas
cld
pop
movsl
into
add
cmp
sub
xor
mov
lods
push
ret
pop
sar
out
mov
dec
ret
inc
sub
ds
inc
repz
lret
pop
pop
orl
xchg
in
xor
enter
push
decb
stos
sub
aas
sbb
mov
dec
and
jl
data16
daa
add
xchg
add
cltd
gs
xor
adc
add
outsb
ret
mov
xor
mov
sbb
lahf
in
mov
sbb
push
xor
dec
jae
imul
out
fdivrs
mov
ret
or
adc
jno
add
mov
push
push
ljmp
jae
jns
xor
add
loope
test
inc
mov
sbb
pop
xchg
dec
push
jnp
lcall
jg
cmc
shll
movsb
cli
push
xlat
inc
testl
mov
pop
jle,pt
xchg
cli
inc
xchg
lock
mov
dec
dec
jae
addl
dec
insl
mov
lock
dec
nop
arpl
je
jg
sbbb
xchg
ljmp
mov
sub
or
aad
jne
fisttpl
ja
shlb
push
sbb
adc
sub
test
shll
mov
idivl
or
loopne
movsl
mov
sbb
cmp
cmpb
cmp
rcl
mov
in
vsqrtsd
les
es
cmpsb
subb
repnz
mov
jle
ret
mov
lods
pop
fmul
jae
sub
mov
aaa
and
scas
jecxz,pt
adcl
mov
outsl
sbb
sbb
add
icebp
cmpsl
pop
stos
jae
sarb
pop
adc
lret
cmp
add
test
inc
dec
pop
call
mov
or
out
ret
mov
bound
rclb
cmp
jmp
int3
dec
sbb
shll
push
xor
mov
in
out
pop
ret
add
icebp
cli
loope
and
lret
addr16
clc
stos
call
add
test
iret
sub
pop
lea
stos
add
pusha
imul
cltd
arpl
sti
shlb
push
pop
ds
sub
out
jae
stos
pop
dec
repz
scas
inc
gs
push
int3
stos
adc
leave
sti
jno
bound
mov
lahf
insb
adc
sbb
push
loop
pusha
sti
notl
stos
add
leave
and
cmp
scas
xchg
idivb
shll
mov
nop
jno
mov
repz
fmull
imul
push
pop
adc
insl
cltd
divb
or
cmp
mov
xor
pop
jmp
xchg
sti
insb
scas
cmp
test
icebp
cmpsb
mov
repnz
and
mov
and
push
lea
sahf
mov
popa
mov
call
mov
dec
add
mov
push
cmp
push
inc
test
loop
sub
xor
fsubs
xchg
aam
add
sub
mov
stos
adc
add
in
movsl
xor
leave
mov
ret
xor
mov
imul
sbb
cmc
inc
mov
or
mov
sbb
or
scas
or
xor
xor
jb
sub
add
or
add
pop
mov
daa
js
xchg
xor
mov
movsb
ds
into
jns
cmpl
mov
inc
pop
push
sub
call
adc
jecxz
mov
ja
lods
in
add
movsb
repnz
push
dec
jo
data16
scas
push
sub
test
lret
in
add
mov
push
or
inc
cli
out
mov
sub
hlt
pop
sub
and
push
test
add
mov
jp
xchg
sub
fstl
movsl
xor
push
leave
roll
pop
xchg
movsl
cmc
dec
mov
or
jno
inc
sbb
fwait
sub
movsl
imul
or
jle
sub
lds
or
cmp
lds
pop
aam
pop
xor
mov
push
pop
pop
fistpll
add
hlt
xor
mov
push
mov
lahf
jle
and
xchg
dec
cmp
xor
sbb
xchg
add
or
adc
cmp
sbb
sarb
loope
cmp
insl
dec
jg
cmp
outsb
pop
push
mov
nop
mov
lods
vmulsd
mov
sbb
and
gs
out
cmp
cwtl
jo
add
xor
mov
sbb
and
pop
add
xor
fs
cmpsb
dec
jo
ljmp
or
xchg
pop
adc
in
enter
sbb
loop
xor
push
out
adc
xchg
iret
cmp
inc
jg
sbb
mov
in
movsl
fwait
jecxz
loope
add
ss
shlb
fcomip
adc
repnz
adc
mov
add
fisttps
jo
addr16
push
lret
loope
jbe
sbb
add
mov
ret
cld
lcall
mov
pop
adc
dec
adc
les
inc
shlb
or
div
adc
imul
shll
stos
in
in
mov
cli
push
mov
mov
daa
mov
add
icebp
mov
pop
loop
jmp
sbb
outsb
outsb
jo
sarb
decl
and
jae
imul
hlt
jg
add
add
mov
sti
or
out
xchg
adc
lods
in
push
rol
inc
in
bound
and
loop
imul
pop
push
cli
aam
pop
mov
clc
cli
loopne
cmp
rcrl
dec
test
iret
bound
sub
and
lods
push
bound
mov
sub
xor
mov
jo
mov
mov
mov
stc
dec
lret
fistl
leave
fisubrs
pop
dec
jbe
call
bound
into
loopne
cmp
fidivrl
aas
inc
enter
test
dec
add
int
aad
and
shll
inc
and
rcll
ja
sub
mov
sbb
popa
into
or
divl
inc
mov
inc
inc
jge
mov
adc
pushl
adc
adc
clc
repnz
fisubl
pop
bound
loop
repnz
and
cmp
mov
leave
enter
pop
andl
dec
jb
push
daa
mov
out
in
cmp
push
lods
imul
pop
imul
and
push
data16
or
sub
add
mov
cmc
pushf
jns
cli
xor
and
xor
jne
jbe
adc
sbb
dec
mov
dec
mov
mov
sahf
push
inc
push
push
dec
mov
or
mov
imul
cli
push
xchg
es
out
push
lahf
mov
mov
stos
jmp
lret
push
dec
movsb
and
les
mov
mov
outsl
out
loope
push
pusha
inc
stos
aaa
loopne
push
insb
jb
in
xor
inc
xor
inc
jecxz
pop
push
ret
jecxz
sbb
clc
loope
cmp
in
adc
sub
addr16
mov
xchg
jmp
leave
mov
mov
data16
pop
and
lods
das
ljmp
sbb
dec
dec
fists
adc
call
mov
push
fldt
lret
mov
cltd
outsl
jbe
fld
ss
shrl
mov
sbb
dec
fistl
je
int3
add
and
mov
insl
cmc
loopne
add
outsl
or
shll
jmp
add
loope
mov
push
ss
ljmp
and
leave
cltd
mov
jno
adc
in
rolb
test
push
jno
mov
sti
stos
mov
shl
jmp
mov
lret
loopne
xchg
adc
mov
ret
pop
rorb
xchg
mov
out
nop
lods
mov
add
ret
roll
icebp
pop
lds
sbb
iret
pop
pop
int3
sbb
enter
rolb
pop
pop
sbb
dec
dec
xor
push
sti
loopne
stc
push
xchg
dec
jp
jmp
and
loopne
xchg
xchg
mov
sub
scas
int
stos
or
cmp
in
test
lock
inc
in
and
cmpsb
xchg
stos
into
mov
push
push
and
mov
int3
dec
mov
xlat
das
jle
mov
push
hlt
in
ficoml
inc
aad
mov
jp
popf
sbb
jmp
xchg
adc
sahf
or
add
es
lret
sub
mov
mov
loope
fwait
lods
out
mov
jmp
xchg
jo
lds
lcall
push
jb
mov
andl
mov
lods
xor
push
dec
mov
fildll
sub
fdivl
lahf
out
imul
mov
js
lds
xor
cwtl
or
mov
xlat
test
cs
push
popf
test
xchg
sbb
imul
push
popa
mov
clc
mov
out
scas
sub
mov
popf
mov
mov
jne
mov
sub
shrb
in
fisttpll
jnp
call
jg
cld
jp
ror
add
jno
and
rcll
popf
dec
ret
jg
jle
xor
lret
shl
mov
xor
mov
push
inc
popf
and
fstps
adcb
dec
cmc
xor
jp
inc
dec
xchg
mov
add
fsubs
or
out
rcll
inc
sub
mov
mov
aam
xchg
lahf
addb
mov
jge
mulb
add
aas
xor
fwait
jmp
xchg
es
pusha
test
add
dec
inc
sub
xchg
je
cld
or
mov
sub
push
cmc
insl
mov
jno
push
aam
jecxz
lods
js
scas
add
jno
nop
cld
adc
xchg
testb
in
insb
xor
cmp
scas
shll
mov
adc
aas
pop
cmp
pop
mov
stos
divps
aam
insb
lahf
fs
dec
out
int
mov
sti
xchg
sbb
push
jne
faddl
mov
pusha
in
mov
imul
aad
jo
inc
testl
imul
dec
mov
inc
mov
in
mov
and
dec
mov
jb
jecxz
push
jns
xchg
and
popf
cmp
rolb
imul
fwait
push
jae
xchg
mov
sti
loop
aaa
dec
stos
and
les
cmpsl
rorb
mov
test
daa
mov
adc
outsl
jae
xorl
mov
and
and
xor
test
int3
dec
jo
outsb
std
and
jbe
pop
xchg
lods
fs
flds
xchg
adc
xchg
sbb
dec
daa
sub
sahf
cmp
adc
xchg
das
fimull
inc
in
jnp
popa
inc
bound
loopne
in
or
imul
mov
mov
lret
shrl
pop
iret
xor
cmp
sbb
movsb
dec
dec
push
push
outsb
mov
mov
stos
popf
mov
es
jge
movsb
mov
test
rorb
mov
stos
fisttpll
aas
mull
enter
mov
test
pop
cmpsl
imul
cmpsl
ret
or
idivb
dec
jge
ljmp
addr16
das
loop
insb
jle
add
idivl
ret
jnp
popa
mov
into
mov
push
repnz
mov
inc
mov
in
xchg
jo
xor
int3
lcall
lods
jmp
mov
pop
imul
xor
adc
ja
fdivl
arpl
iret
xorb
jmp
mov
mov
incb
into
push
jmp
xchg
imul
sub
xor
pop
xchg
mov
or
sbb
mov
pop
dec
orb
inc
push
adc
fcomps
mov
push
cltd
add
dec
cli
mov
aas
or
xorl
xor
sbb
jmp
dec
xor
insb
imul
and
lock
fdivrs
loop
push
idiv
test
inc
fiaddl
hlt
add
mov
incb
mov
mov
testb
adc
cwtl
or
jle
jp
push
inc
es
aaa
sbb
imul
xchg
sti
adc
and
cli
roll
dec
sti
sbb
mov
dec
inc
dec
sbb
sbb
loope
pop
pop
jmp
jg
jne
jecxz
int
imul
xor
inc
lcall
dec
xor
jnp
xchg
out
adc
jmp
mov
ds
jp
sub
hlt
ljmp
cmpb
ja
movsl
push
xlat
jns
mov
push
mov
xor
pop
mov
xchg
loop
out
inc
daa
pop
out
adc
xchg
mov
aad
mov
xchg
mov
es
fistl
shrl
lret
xchg
loop
and
jns
add
inc
xor
mov
dec
xchg
xchg
add
push
leave
push
sub
sbb
lcall
pop
jge
push
mov
popa
xchg
push
fmulp
mov
sub
pop
jmp
pop
mov
jb
movsl
sbb
outsb
aad
mov
mov
in
lahf
mov
sub
imul
adc
js
icebp
xchg
pop
gs
adc
idivb
mov
scas
jmp
fistps
ljmp
mov
dec
mov
sub
mov
jns
or
loopne
lahf
mov
push
cmpsl
jg
or
cmp
jne
push
jo
adc
movsl
xchg
scas
xchg
int3
xchg
scas
outsb
mov
ljmp
mov
mov
dec
enter
icebp
push
outsb
aas
nop
mov
aad
sbb
pop
push
lcall
rclb
jg
xchg
fidivrl
inc
daa
mov
rcr
cli
repz
mov
sarl
pop
cmp
add
popa
cmp
jo
cmp
cmp
push
scas
test
inc
pop
xlat
sub
in
and
or
xchg
jae
mov
push
xchg
jecxz
hlt
jle
xchg
jg
bound
or
xor
pop
add
adc
arpl
test
out
jo
lock
sub
jmp
and
cmpsb
test
es
or
adc
sti
sbb
ljmp
imul
mov
xchg
lcall
stos
lsl
mov
orl
fsubrl
push
sarb
cmc
jecxz
mov
or
xchg
out
or
daa
sbb
pop
in
cmp
imul
sbb
outsb
dec
pop
xchg
push
sub
lock
roll
in
inc
adc
jnp
pushf
sar
push
sub
lret
jae
test
test
jae
xlat
scas
lcall
lock
xchg
mov
add
fldenv
or
mov
inc
rcrl
rcrl
cwtl
dec
cmp
std
fstl
sub
push
jns
not
out
movsb
loopne
nop
fisttpll
xchg
lret
push
enter
dec
mov
nop
shrl
xor
cs
jl
int3
test
idivb
ret
pusha
mov
and
prefetcht0
sbbl
lods
or
rcrb
add
xchg
jl
xor
mov
popf
mov
jae
in
mov
in
hlt
sahf
stos
into
orl
nop
adc
dec
ss
xlat
fisttpl
mov
and
pop
sbb
pop
mov
jp
popf
rorl
rcl
stc
push
je
ret
cmp
hlt
sbb
ffree
in
lds
inc
fucomip
mov
inc
mov
fidivs
adc
mov
ficoml
or
or
sbb
iret
fimuls
insl
adc
dec
sub
adc
divb
dec
daa
inc
jo
insl
and
or
jge
xchg
xor
add
adc
fimull
mulb
icebp
sti
ss
arpl
bound
xchg
mov
popf
dec
mov
jbe
pop
or
jle
hlt
lret
sahf
stos
mov
and
adc
loop
xchg
mov
pop
and
mov
cmp
std
movl
and
das
xchg
push
dec
ja
lret
leave
dec
movb
rcrl
jns
orl
mull
mov
lods
adc
xchg
mov
add
addb
adc
fidivrs
or
mov
inc
pushf
mov
sub
leavew
hlt
lret
cwtl
call
in
int
sub
lret
jo
cmp
sti
data16
pop
imul
add
adc
gs
cmp
push
pop
mov
std
outsb
pop
inc
mov
shll
adc
mov
adc
shll
call
mov
lahf
mov
daa
stos
adc
fnstcw
mov
arpl
test
or
push
das
mov
hlt
rcrb
stos
push
adc
xor
jo
or
fsubs
fdivrl
sub
or
sbb
out
xor
cmp
dec
cwtl
insl
jnp
sub
mov
mov
comiss
push
add
movsb
in
xor
nop
sbb
in
enter
cmp
jne
in
cs
out
movb
push
cwtl
xchg
pop
mov
jb
stos
mov
pop
jge
fsubl
subb
andl
pop
cltd
or
in
in
iret
pop
and
mov
sub
adc
lea
xor
adcb
fdivr
test
sbb
in
lret
xor
subw
pop
xor
repnz
push
pusha
int
mov
xor
sbb
loopne
jbe
mov
cmp
repnz
lret
jle
outsl
sub
lds
sub
das
dec
add
rcl
movsb
jbe,pt
addb
cs
idivl
cmp
cld
xchg
pushl
mov
rclb
lahf
or
inc
push
scas
dec
push
enter
ds
adc
fdiv
push
add
sub
cmc
cmp
cli
sbb
push
imul
lods
jp
aas
out
ljmp
mov
loopne
and
ss
inc
and
sbbb
stos
xor
sbb
sbb
ljmp
cmpsb
popa
movsb
jle
pushf
lcall
mov
mov
xchg
push
arpl
mov
mov
out
ret
into
cmpsl
xor
cwtl
mov
jno
aam
dec
mov
pop
or
shl
cmp
and
inc
fcmovnb
call
or
and
and
out
mov
xchg
sbb
adc
push
xchg
pusha
repz
or
push
insl
lret
insw
jmp
rcrl
push
and
xor
cmp
insl
push
mov
in
pop
sbb
pop
outsl
inc
cmpsb
lea
lock
push
movsb
cmp
aad
ds
push
lcall
mov
xor
jp
aad
movsl
aaa
mov
xchg
lods
popl
inc
xor
inc
cli
hlt
sub
adc
fisubrl
test
cmp
inc
pxor
stc
ds
inc
xchg
mov
mov
jmp
push
cmpsl
mov
dec
addr16
push
dec
cmp
inc
imul
aaa
jp
popf
push
cmp
xor
rcrb
test
movsl
xlat
jno
call
sarl
adcl
sub
insl
inc
push
jle
aas
dec
cli
popa
cmp
ljmp
sahf
xor
dec
loopne
xchg
sbb
cmpsw
inc
sub
ja
xchg
mov
xchg
mov
cmp
clc
mov
stc
push
xorb
gs
inc
mov
psubsb
cmc
sahf
xlat
stc
data16
test
and
ds
sbb
and
insl
sub
inc
rol
movsl
pop
mov
add
mov
xchg
pop
inc
cmp
clc
outsb
mov
cli
mov
xor
cltd
dec
jb
rolb
jnp
dec
insl
andb
mov
cli
je
push
dec
sub
andb
cwtl
out
dec
mov
scas
dec
pusha
jne
out
stc
cmc
mov
lret
xchg
mov
mov
mov
cltd
sub
push
in
cli
pop
addr16
movsl
xor
mov
cmp
sbb
pop
pop
add
adc
add
mov
inc
or
mov
int3
imulb
fdivrl
inc
inc
xor
cli
fbstp
aaa
mov
pop
jge
or
lods
push
sbb
clc
jl
jg
fnstenv
mov
push
dec
stos
mov
push
cwtl
jns
out
xchg
push
xchg
adc
add
cltd
add
cmpsb
sbb
pop
test
sbb
into
jae
les
pusha
xor
gs
adc
out
jg
push
popa
sbb
mov
cli
pop
dec
push
cmp
imul
movsb
insb
pusha
rolb
jl
adc
loopne
stos
test
jmp
cltd
in
jle
sub
popf
sub
mov
lret
test
and
and
xchg
fnsave
xchg
inc
in
jmp
push
outsb
pop
mov
pushf
mov
pop
mov
sbb
int
out
sbbb
inc
sbb
lahf
loope
int3
cmpsl
dec
gs
sbb
loopne
clc
inc
imul
pop
rcrb
cmp
jb
ljmp
or
add
fxch
inc
cmpsb
lret
test
ljmp
xchg
push
cmp
fucomip
nop
sbb
fs
add
aaa
inc
inc
adc
cmpsl
push
sbb
xchg
push
push
or
dec
jno
cmp
sbb
insl
adc
pop
lock
xchg
repz
leave
push
cltd
test
ljmp
lds
cmp
push
popa
ljmp
mov
cmp
ret
or
mov
ficomps
dec
cli
mov
test
pop
ret
enter
negl
rcll
arpl
cld
mov
pop
mov
push
or
out
ljmp
stos
and
daa
sub
int3
and
pop
iret
inc
sub
mov
mov
cli
outsb
ss
xor
std
adc
cmp
xor
mov
jle
xchg
addr16
roll
repz
test
into
hlt
xor
dec
leave
std
mov
int
stos
shll
or
mov
fnsave
pop
push
jp
fdivrs
push
ret
shl
jns
sbb
jecxz
dec
inc
popf
jnp,pt
push
stos
ret
movsb
jg
pop
inc
sub
xlat
out
xchg
cmp
leave
out
jnp
incl
inc
int
dec
dec
icebp
adc
movsb
sbb
int3
int
fwait
mov
leave
jno
xor
inc
mov
mov
jecxz
lret
repnz
loop
in
inc
push
push
out
sbb
adc
adc
divps
sbb
cmp
cmp
jb
xor
out
int
pop
mov
scas
aad
mov
jae
add
lods
pop
xlat
xchg
pop
dec
sbb
cmp
shlb
repnz
adc
dec
jecxz
pusha
add
push
test
inc
insb
shrb
in
jecxz
jns
in
loope
jae
jo
sbb
lret
arpl
seto
inc
sub
sahf
push
mov
inc
rcrb
inc
sbbl
lods
push
test
data16
dec
mov
stos
mov
sbb
xchg
push
popf
mov
pop
pop
mov
in
lock
pop
add
dec
dec
jne
outsb
loop
cmp
push
jp
lcall
pusha
cwtl
mov
hlt
enter
mov
xchg
cmp
cmc
adc
xchg
xor
jg
mov
add
movsl
outsl
fsubs
out
sti
and
adcb
mov
and
popa
dec
out
push
mov
mov
ret
xor
pop
mov
add
ficompl
cltd
dec
sub
xor
mov
mov
mov
mov
inc
test
mov
enter
mov
add
outsb
aad
push
add
icebp
push
pop
sahf
das
mov
and
stc
mov
mov
adc
mov
ret
cmp
ljmp
les
jns
add
add
loop
andl
or
rclb
lods
hlt
xchg
mov
sbb
sub
or
insb
imul
mov
fists
ljmp
call
dec
cmpb
lods
out
cmp
icebp
jp
or
lret
lret
mov
ss
xchg
jno
xchg
fxch
jns
fists
xchg
xor
in
sub
add
add
push
push
fsubl
xchg
or
sbb
imul
add
push
inc
cmc
loopne
adcb
sub
xor
push
cmp
in
dec
jl
mov
pop
test
shll
out
outsb
adc
cmp
mov
daa
pushf
popa
cmc
lret
mov
xor
sbb
lods
sbb
push
icebp
jo
repnz
push
lods
shll
jl
inc
add
push
add
ficompl
mov
ret
mov
bound
sbb
jne
in
xor
jbe
in
shll
addl
mov
cmp
fs
mov
xor
cld
dec
sbb
or
pop
mov
or
adc
int
aas
aaa
in
test
cmp
lods
test
or
pop
jne
leave
movsl
jp
pop
es
mov
mov
cmp
sbb
mov
cwtl
fistps
xor
movsb
xlat
lcall
cmpsb
lea
es
int3
mov
hlt
sub
rcrl
mov
out
stos
test
add
or
inc
int
xor
lret
je
push
fstpl
add
adc
stos
out
arpl
jbe
pop
ss
cmp
fildll
daa
mov
lods
dec
inc
adc
insl
dec
mov
jnp
int
mov
test
inc
test
cmp
xchg
jge
sbbl
loope
mov
leave
add
fisttps
inc
mov
outsb
push
pop
push
sbb
mov
jl
out
xchg
mov
add
in
cmp
popf
mov
aaa
xchg
or
loopne
jne
js
insb
inc
mov
add
sahf
cmp
in
lods
xchg
jne
arpl
ds
sbb
mov
or
sub
mov
out
sub
jbe
lds
mov
xchg
mov
adc
out
sahf
xchg
push
movl
sahf
outsl
sbb
ss
add
mov
imul
xor
and
push
push
or
inc
scas
inc
sbb
je
push
mov
popf
aam
les
cmpsl
mov
mov
icebp
sbb
dec
inc
mov
in
bnd
cld
and
out
loopne
lret
pusha
out
xor
in
test
jge
out
jae
xor
or
out
in
aam
rorl
gs
dec
pop
aaa
popf
loop
aad
loopne
rcr
fnsave
test
push
lds
fistpl
aam
fistpll
inc
out
fldcw
dec
nop
out
jns
scas
mov
call
scas
xchg
fcmovb
fcoms
sti
mov
or
out
popf
lcall
jno
sub
stos
iret
jb
jno
push
dec
cmc
mov
in
add
adc
mov
stos
lahf
fst
adc
sarb
lods
push
fs
push
adc
dec
scas
mov
lret
pop
adc
lods
sahf
daa
mov
out
out
lds
xor
out
lea
addr16
sahf
imul
pop
push
jnp
adc
mov
push
push
and
mov
mov
inc
daa
jb
add
xchg
sbb
clc
jo
je
shrl
inc
inc
cltd
mov
inc
scas
xor
stos
and
cli
sbb
adc
pop
jecxz
into
bound
add
lret
scas
xor
jge
dec
and
add
cmp
popl
sub
push
sbb
aad
sub
add
fcmovu
ljmp
lcall
and
cmp
cmp
out
inc
fnsave
jne
scas
pop
fwait
mov
add
incl
adc
sbb
lcall
jle
cmp
aas
bound
inc
pop
add
mov
out
call
jbe
ljmp
pop
push
xor
and
jmp
movsl
loopne
push
cmp
xchg
xchg
repnz
xor
shll
in
mov
imulb
loop
shlb
sbb
xchg
mov
xlat
ss
popa
mov
mov
xor
outsb
fildl
pop
cmp
in
push
adc
push
mov
fldcw
inc
jl
and
test
add
rcrl
loopne
popf
jmp
movsb
mov
sbb
sarb
and
popa
mov
call
fdivl
or
mov
cmp
dec
xchg
cmp
pop
jmp
xchg
push
movsl
rclb
add
ja
pop
iret
subb
mov
dec
and
and
test
pop
aaa
mov
push
fsubl
shr
aaa
ficompl
cmpsb
xchg
sub
mov
mov
pop
add
les
incb
jge
lahf
rorb
mov
bound
movsl
xor
clc
sub
rorl
data16
lds
fcomip
imul
cmpsl
mov
cmp
mov
out
stos
cltd
xchg
cmp
iret
fcompl
xchg
out
clc
push
loope
outsb
push
lcall
roll
cmp
xchg
mov
insb
scas
dec
cmp
mov
int
outsb
fsubrl
sbb
aas
xor
push
pop
adc
lret
xchg
jo
test
test
push
js
aaa
sbb
and
leave
sub
xchg
iret
xchg
add
rcll
jnp
orb
jle
fsubl
lahf
adc
leave
inc
int
daa
stos
push
pop
cmp
sub
and
pushf
mov
bound
sahf
inc
je
pop
push
fisubs
psadbw
fwait
aam
push
cmp
mov
jge
call
xor
loop
cmp
scas
add
imul
pop
inc
cmp
adc
inc
addr16
ljmp
cmp
lcall
sbb
dec
sbb
or
cmpsl
imul
inc
dec
add
push
into
fnsave
lds
ror
cmc
mov
aaa
dec
fcomps
rcr
mov
sbb
jle
pop
fisubs
jae
jp
mov
push
out
push
jg
iret
or
add
negb
push
cli
jae
cmovo
out
mov
add
stos
cmp
or
push
pop
in
or
lahf
xor
xchg
mov
call
sahf
xchg
jb
in
faddl
inc
arpl
lahf
fyl2x
push
inc
iret
out
xor
xchg
int
scas
cli
jno
inc
loop
mov
xchg
dec
push
aam
adc
iret
push
add
ljmp
test
sub
pmullw
fadd
iret
xchg
shlb
popf
sub
inc
pop
mov
loop
lods
or
inc
adc
pop
inc
pusha
insb
pop
jae
jp
in
lods
gs
sbb
sub
mov
loop
add
push
and
lock
in
aad
pop
push
test
testl
cmp
mov
xor
sub
push
xchg
popa
popa
xor
add
jo
leave
test
clc
in
ret
mov
push
repnz
mov
or
cmp
aas
imul
hlt
mov
xchg
pushf
roll
ret
out
in
push
in
clc
cmp
subl
arpl
mov
cmpsb
sbb
cli
mov
andb
inc
pop
pop
int3
outsb
scas
lds
lahf
fsubp
cmpsb
jmp
jl
push
arpl
loope
or
add
mull
ds
xchg
dec
xchg
cmp
cmc
mov
xchg
xor
lds
scas
xchg
es
dec
push
pop
and
les
out
or
repz
inc
inc
mov
popa
mulb
popa
cmp
fnstcw
adc
fistl
inc
sbb
cmp
push
ficompl
lret
aam
fimull
negb
ja,pt
out
dec
test
das
into
iret
sbb
and
dec
jmp
fmuls
push
frstor
mov
out
inc
sbb
xchg
jo
or
push
pop
cld
xchg
mov
jmp
pop
cltd
sbb
sbb
cmpsl
and
mov
sarl
lret
push
fsubr
mov
mov
pop
fs
push
xor
ljmp
test
mov
aas
mov
jmp
cmp
cs
lahf
xor
ss
test
pop
and
mov
int3
aam
pop
mov
adc
jg
into
aaa
mov
movsl
mov
lods
pop
lods
hlt
push
inc
outsb
jg
sub
fs
frstor
pusha
fidivrs
test
cmp
and
pop
jecxz
test
lret
jg
fistpll
je
popa
adcl
adc
push
adc
in
cmpsl
lods
cmp
push
add
dec
or
into
add
inc
loope
loop
jge
xchg
mov
mov
loopne
push
les
mov
fsubs
xchg
sub
loop
dec
out
push
sbb
pop
out
lret
adc
lock
fiadds
fdivs
stos
imul
repz
int
mov
andl
cmp
or
cs
fwait
stc
scas
fisubrs
je
adc
ret
les
hlt
sbb
mov
popf
repz
ljmp
ficompl
addr16
int3
sar
add
cmp
nop
inc
stos
xor
mov
mov
imul
mov
fcoms
mov
inc
fimull
lods
test
icebp
pop
pop
mov
dec
inc
ret
mov
mov
shr
adc
xchg
push
push
cmp
xor
lret
ja
les
sub
imul
xchg
cmp
or
cmp
sub
imul
lret
or
jo
sbb
shrb
negl
sub
dec
cmp
std
dec
cmp
fwait
mov
cli
mov
fmuls
sti
imul
imul
xlat
imul
in
push
daa
adc
dec
push
mov
or
cli
pop
mov
inc
jbe
push
subb
out
dec
sub
push
rcl
in
push
out
push
and
loop
sub
sbb
push
fimull
and
testl
pushl
into
cmp
or
jg
fadds
push
jmp
ljmp
das
pop
mov
mov
fldl
mov
lret
inc
roll
mov
imul
inc
clc
jne
sub
push
addr16
fbstp
add
cmp
pop
stos
mov
mov
sub
ljmp
pusha
sbb
jo
lods
lods
cmpsb
repz
imul
nop
shrb
jne
out
lock
or
cmp
adc
aam
jo
fdivrs
push
outsb
jg
sub
inc
inc
sub
movsl
cmpsl
scas
clc
cltd
push
repnz
xchg
fsubrl
add
rorl
mov
clc
popf
inc
adc
push
data16
das
push
adc
pop
mov
sub
cmp
push
adc
xchg
push
jp
adc
and
inc
repnz
and
pusha
mov
adcl
call
adc
mov
loope
ss
lret
lahf
iret
push
movsl
cmp
bound
xorb
and
sub
cmp
pop
jg
push
ret
fwait
test
or
cltd
mov
inc
dec
popf
push
repz
and
divl
cmc
or
aas
inc
xor
push
shlb
mov
mov
fwait
jns
nop
das
insl
ja
mov
mov
das
lcall
ljmp
sarl
sbb
repnz
fldl
jb
rol
mov
cmpsl
adc
jp
jecxz
xor
movsl
mov
cmp
pusha
hlt
pop
loopne
testb
out
push
mov
test
aaa
add
adc
dec
xchg
ret
cld
out
pop
or
notl
or
or
mov
xchg
pop
ss
movsl
ret
dec
stos
push
leave
pop
loope
cmp
push
lea
pop
call
cltd
in
out
icebp
cmp
mov
push
xchg
inc
jo
enter
xor
pop
sarl
jg
dec
jne
pop
mov
adc
cmc
adc
jne
cmp
sarl
dec
sbb
xchg
outsl
mov
pop
jns
fsubr
insb
fsubl
jne
mov
out
outsw
jp
cwtl
shr
push
dec
sahf
inc
add
cmc
insl
out
mov
jns
enter
mov
loopne
out
and
int3
adc
xchg
mov
push
ret
gs
sahf
lea
lods
add
add
push
pop
mov
jbe
sub
ret
sub
mov
xchg
cmpb
push
out
test
dec
jmp
jecxz
leave
pushf
iret
test
cmp
mov
arpl
divl
cmp
loopne
out
xor
sarb
stc
xor
shlb
mov
andb
test
movsl
mov
imul
add
ss
iret
cmp
or
je
cmpl
fldl2e
mov
inc
stc
fsub
loope
mov
push
rorb
mov
push
lcall
adc
or
jnp
xchg
mov
insl
std
cli
int3
outsl
xchg
pop
movsb
mov
enter
lahf
movsb
cmpsb
stos
icebp
test
in
mov
out
jge
push
push
repz
dec
outsl
cmp
sbb
imul
outsb
out
scas
pop
outsl
aam
add
sbb
inc
aaa
aam
addr16
sub
out
bound
ja
lock
lret
push
dec
sbb
cld
cmpsb
dec
push
dec
mov
cmpsb
scas
lahf
mov
push
js
xchg
mov
leave
mov
adcb
test
mov
add
ror
inc
mov
adc
and
jo
lret
push
and
arpl
mov
mov
sbb
xor
lods
jge
lods
push
sahf
inc
add
cmp
push
pop
mov
frstor
jns
cmp
fstpt
sub
cmp
shlb
dec
cwtl
jge
sub
dec
cwtl
mov
xchg
repnz
mov
jo
stc
mov
imul
insl
dec
lods
pop
imul
es
fsubrs
aam
rcl
jb
bound
inc
shrb
je
mov
out
jg
lret
mov
xchg
jl
out
iret
test
cs
inc
dec
stos
xor
and
adcl
lea
scas
cmp
cmc
dec
mov
dec
or
ds
adc
xchg
cmp
andb
mov
pop
push
shlb
mov
imul
dec
mov
mov
rclb
lock
ret
and
xchg
ret
mov
stos
pop
gs
push
fs
push
lods
sbb
jecxz
xor
nop
adc
jl
pop
bnd
xchg
inc
push
push
ds
insb
jg
dec
mull
subl
mov
scas
adc
xchg
loope
mov
cmpsl
movsb
push
in
xor
fbld
in
mov
mov
adc
xchg
loope
xchg
cmpsb
lahf
jbe
je
or
fcmovnu
sub
mov
popf
mov
inc
mov
dec
or
jb
xchg
sbb
xchg
cwtl
push
sub
add
or
leave
orb
addb
push
icebp
xor
faddp
cmp
mov
sti
or
xor
mov
xchg
adc
fcoms
test
inc
cltd
inc
daa
add
jb
in
xchg
fsubl
test
bound
insb
cli
xor
mov
xlat
dec
and
faddl
rcl
in
out
bound
fstpl
in
mov
sub
loopne
ret
ret
pop
rorl
pop
jns
imul
add
testl
or
cmpl
pop
shrl
inc
sbb
mov
fcoms
xor
xor
addr16
jo
jo
xor
fdivrl
and
ds
jg
pushf
push
mov
xchg
sub
out
lods
nop
adc
fstpt
in
gs
lods
int3
jo
adc
divl
cmpsb
lret
loope
dec
repnz
cmp
iret
mov
pop
push
in
jb
cwtl
xorl
xchg
cli
xchg
icebp
test
orl
lcall
sti
pop
inc
jecxz
lret
enter
idivl
cmpsl
mov
ss
arpl
mov
cmp
mov
adc
or
test
mov
daa
sbb
sub
dec
into
mov
mov
push
fidivl
mov
out
pop
stos
fistps
fstpt
jle
add
jmp
xor
fs
js
cmp
sbb
add
inc
xchg
aaa
xchg
clc
in
aam
mov
repz
jecxz
mov
in
jmp
ljmp
pminsw
or
mov
jp
dec
xor
xchg
sub
ljmp
pusha
mov
push
dec
aam
cmp
push
sub
aam
ja
inc
dec
mov
incb
mov
push
lods
cmp
ljmp
js
imul
fimull
xor
popf
loope
ljmp
sti
mov
fstpt
insl
push
aam
cld
xchg
xor
sub
adc
adc
pop
mov
test
xchg
stos
lods
daa
mov
hlt
das
je
lahf
and
sub
fstl
cmp
or
inc
div
lea
ss
xchg
outsb
cmp
aaa
cmp
imul
or
mov
adc
cmpsl
loop
mov
sbb
in
cwtl
sub
loop
loop
lods
imul
sbb
loope
pop
mov
in
and
cmp
cwtl
and
push
and
or
or
sbb
pop
outsb
mov
faddl
push
pop
int3
les
icebp
pop
cmp
fimuls
xlat
jb
subl
jbe
jo
popf
jl
dec
cmp
or
popa
les
xrelease
mov
nop
push
inc
pop
es
out
add
dec
adc
mov
lret
aad
cwtl
sti
mov
sbbl
push
inc
mov
aas
arpl
and
push
mov
loop
xchg
out
cmp
outsl
in
jle
xor
pop
mov
jp
and
test
and
roll
adc
sub
mov
loopne
movsl
xor
mov
test
jmp
call
adc
xchg
mov
push
inc
in
ret
jno
fstpt
lods
jge
enter
icebp
mov
sbb
ret
mov
cmp
cmc
sub
ret
cmpsb
cmp
outsl
imul
loope
pop
push
scas
dec
dec
adc
xor
adcb
data16
push
pop
and
add
add
xor
sub
and
mov
inc
outsb
sbbl
pusha
adc
cmpsb
iret
pop
xchg
rorb
and
out
loop
mov
and
mov
adc
out
sub
test
rcl
push
into
jle
adc
out
push
scas
insb
out
inc
lcall
sbb
mov
or
mov
decl
call
push
mov
in
sar
scas
mov
and
dec
pop
mov
sbb
icebp
jmp
jno
pop
insl
cmpsb
and
mov
mov
stc
adc
scas
mov
sub
out
je
ror
aaa
adc
inc
adc
out
mov
leave
mov
adc
and
jg
pop
add
pop
in
inc
je
cmp
xor
push
aam
add
outsl
rorl
js
jnp
repnz
cmpsl
jbe
and
call
xlat
or
cmp
enter
js
or
sti
movsl
in
out
inc
jmp
cmp
sbb
xor
pop
int
or
inc
xor
frstor
and
jns
lock
cmp
and
out
pop
push
and
insl
pop
repnz
mov
rolb
cmp
or
sbb
iret
gs
and
cmc
clc
jnp
sarb
pop
dec
sub
cmpsl
xlat
icebp
das
dec
pop
pop
int3
add
jno
je
mov
cltd
mov
jecxz
mov
in
cmp
pop
call
sub
test
popf
aas
ja
out
gs
xor
orl
lea
push
push
add
xlat
movsl
movsl
sti
push
scas
adc
dec
in
xchg
enter
jmp
addl
sbb
inc
ficoml
dec
cwtl
jmp
jb
cmp
in
jl
mov
inc
out
out
push
arpl
sbb
fnstcw
clc
mov
ljmp
ljmp
jmp
lods
outsb
xchg
adc
leave
out
fnstenv
cmp
shlb
inc
sbb
icebp
sbb
jns
sub
lea
stc
test
stos
sbb
push
add
fwait
push
loope
or
push
jno
jnp
mul
jp
add
pop
inc
test
and
test
cmc
mov
mov
ret
scas
lods
movsb
mov
fmuls
scas
nop
dec
cli
xlat
fwait
shll
cltd
xchg
je
xor
pop
pop
sbb
mov
or
jb
shrl
xchg
lret
push
pop
inc
xchg
jmp
stos
lahf
fstpl
sub
mov
sub
pop
ss
js
adc
push
sti
mov
jecxz
jl
mov
in
popf
not
push
js
andl
ds
mov
mov
in
fadds
neg
in
lret
imul
bound
add
dec
mov
rclb
leave
xor
popf
in
or
out
push
cltd
std
sbb
scas
jnp
ja
imul
dec
and
scas
out
pop
add
sbb
loope
or
or
xor
cmpsl
cmp
inc
decl
mov
test
jns
pop
orb
addl
push
cmp
mov
pop
and
mov
or
call
cmc
push
pop
xchg
xchg
push
cli
push
mov
pop
cmpsl
call
add
lea
add
repz
fmul
scas
sub
dec
dec
mov
ss
cmp
outsb
jecxz
xchg
out
stos
or
out
sub
or
pop
sub
lods
xchg
mov
adc
adcl
dec
lahf
cmpb
add
int
ljmp
arpl
mov
mov
mov
jl
mov
imul
in
sbb
idivl
add
ret
add
inc
mov
repnz
mov
xor
imul
or
lods
in
cmc
fdivrs
mov
shlb
out
jle
lret
jb
dec
inc
cmpl
mov
int3
cld
or
mov
loope
test
mov
pusha
std
mov
inc
repnz
rclb
les
xor
dec
pop
push
xor
mov
mov
jb
shrb
daa
jl
adc
in
jbe
aad
frstor
mov
cli
stos
testb
loopne
jmp
ja
jns
xor
aam
xchg
rcll
mov
mov
icebp
sub
dec
jle
movl
push
or
xchg
cmc
in
jl
inc
clc
jmp
mov
jle
inc
push
sub
jmp
add
mov
push
inc
cmc
lods
sub
mov
mov
mov
test
push
push
mov
lods
pusha
pop
call
jge
dec
or
dec
into
sbb
cmp
adc
add
bound
xor
bound
cltd
daa
and
inc
dec
jecxz
xlat
negl
out
or
dec
pop
mul
leave
ficompl
jg
inc
fs
test
mov
mov
and
fsubrl
adcb
adc
jp
xchg
ret
pop
cmc
pusha
insb
stos
and
xchg
push
rcrb
int
jnp
jnp
cmpsl
pop
push
out
cmpsb
mov
insb
jo
adc
adc
push
cmp
les
mov
xor
and
xor
mov
adc
out
lret
movsb
gs
push
nop
pop
jae
xchg
fs
jmp
cmp
mov
cmp
sub
jns
push
mov
adc
or
pop
cmp
inc
shll
ret
mov
inc
xorl
mov
or
fisttps
in
xor
jnp
cmp
fidivs
jo
xor
scas
dec
pop
test
scas
clc
or
loope
lcall
mov
and
push
aad
movsl
xchg
mov
xor
mov
xlat
sub
add
gs
dec
jb
adc
bound
dec
insl
dec
aad
out
cld
and
addr16
bound
in
shrl
cld
pop
hlt
mov
jmp
or
cmc
push
push
add
sti
xchg
inc
dec
lods
xorb
xchg
sbb
gs
or
repz
mov
sub
daa
cmp
loop
mov
jbe
movsb
xchg
push
adc
fbstp
popa
mov
inc
hlt
mov
rol
mov
cltd
cmp
push
dec
fldl
xchg
jnp
push
push
mov
les
sub
adc
dec
sbb
pop
outsl
rol
scas
cmp
push
adc
test
cmp
cs
mov
inc
imul
adc
cmp
jns
xlat
mov
and
dec
mov
jo
jmp
push
pop
jns
repz
or
pop
and
and
jmp
sub
mov
sahf
fdivp
jmp
inc
and
sbb
loop
push
nop
xor
or
dec
sub
push
iret
rcrl
sbb
gs
sbb
pop
fwait
xchg
cmpsl
inc
cld
cmp
xor
push
addr16
pop
xchg
sahf
pop
mov
rcrl
dec
push
dec
adc
enter
jbe
dec
nop
and
daa
jg
inc
sub
fbld
cwtl
rclb
add
rorb
addl
cld
loopne
mov
aam
inc
mov
jge
add
data16
mov
mov
dec
jl
loopne
mov
xor
lods
test
pop
mov
fcoml
out
data16
pop
decb
lods
imul
jmp
dec
inc
test
popf
movsl
fcomp
mov
adc
int3
inc
jns
push
out
jg
xchg
mov
movsb
push
pop
sbb
rclb
cmp
push
mov
sti
push
xor
js
das
add
lcall
or
add
clc
xchg
movsl
movsl
iret
rorb
sarl
testl
cs
adc
nop
mov
sbb
adc
push
inc
add
mov
push
push
jmp
push
xor
leave
adc
les
fistps
mov
das
fldl
mov
pop
xor
add
xchg
cmp
sub
mov
mul
xchg
pusha
pop
or
fiadds
mov
dec
gs
xlat
xor
inc
or
push
mov
fdivrl
sub
addr16
inc
lret
stos
jne
gs
pop
out
xor
leave
mov
out
xor
mov
jns
enter
rorl
popf
sbb
inc
fisubrs
pushf
inc
cmpsb
dec
cmc
aas
outsl
push
test
nop
xor
ficompl
sarl
cmp
imul
jl
out
mov
inc
jb
aas
xor
hlt
mov
outsl
es
ds
inc
loope
cld
mov
rcl
sbb
jbe
dec
ret
adc
pop
jp
and
arpl
in
sbb
lock
sti
loop
xor
sbb
add
fdivrp
into
mov
pop
test
out
push
idivl
dec
cmp
and
lret
cli
fsts
int3
aad
inc
jo
fildll
shr
test
mov
add
cmp
outsl
std
inc
inc
scas
pop
xchg
bound
loope
std
mov
and
cmp
mov
je
sub
xchg
int3
out
jle
pop
sub
mov
push
adc
in
nop
jbe
add
sbb
loopne
xlat
sub
xor
cmp
sbb
test
and
jnp
pop
mov
push
jno
call
scas
jae
cwtl
daa
inc
sahf
addr16
shrb
sbb
sbb
loop
ljmp
pop
xchg
jmp
pop
mov
test
adc
pop
lock
push
mov
mov
xlat
out
movsb
dec
mov
lahf
js
in
aam
int
adc
jbe
lcall
push
mov
and
ficoms
push
bound
mov
test
mov
or
cmp
aam
xchg
jmp
bound
xor
adc
insl
andl
fwait
inc
or
sbb
sbb
jns
push
lds
inc
mov
pop
popa
lea
dec
or
je
fcomi
mov
clc
xchg
stos
adc
addr16
jns
mov
inc
movaps
or
fs
aam
es
jbe
leave
mov
fdivr
sub
jno
inc
in
fcoml
mov
and
and
hlt
iret
xchg
pop
cmp
adc
cmp
lods
jo
xor
dec
repnz
mov
pop
push
push
push
cmc
xchg
movsb
sarl
xchg
test
xchg
scas
mov
cmp
mov
jns
popa
decb
mov
dec
int3
jecxz
popa
daa
inc
add
call
jno
inc
xor
das
push
push
pop
add
in
push
icebp
add
leave
aad
mov
pop
bound
mov
or
jmp
and
fisttpll
sbb
stc
xchg
xchg
movsl
sbb
xor
test
addl
out
loop
and
subb
mov
xchg
rep
mov
outsb
ficompl
mov
push
iret
pop
jge
lea
push
aam
and
push
sub
pop
push
cmpsb
pusha
mov
mov
aad
xor
push
out
dec
addr16
mov
mov
and
push
sti
push
scas
adc
es
hlt
sbb
rorl
lret
sbb
mov
imul
call
mov
cmpsl
pop
jae
inc
add
jns
xchg
fidivrs
jl
or
adc
adc
inc
out
outsl
push
push
ds
fs
xlat
inc
lea
dec
stc
or
jo
hlt
cmp
lods
xchg
xor
mov
mov
inc
mov
mov
test
negb
sbb
in
mov
mov
sbb
es
jmp
std
test
inc
pusha
xor
fisubrl
adcb
arpl
leave
inc
fbld
jo
stos
incl
pop
xchg
jo
icebp
xchg
js
test
mov
out
mov
dec
les
jge
cmp
lea
popa
cmpsb
insb
mov
std
gs
repnz
jg
xor
xchg
das
sbb
dec
loopne
lret
mov
js
push
jecxz
inc
pushf
data16
fcoml
sub
fsubl
bound
sub
test
in
cmpsb
push
fs
dec
pop
into
dec
jns
into
mov
mov
push
stos
fmull
mov
dec
fs
fisttpl
cmpsl
xchg
rolb
xor
ds
js
and
push
jecxz
pop
aas
or
mov
inc
stos
inc
cs
inc
xorb
jae
and
jae
mov
in
bound
out
inc
cmp
and
pushf
pop
daa
xchg
pop
mov
mov
lds
dec
in
fldt
dec
sub
xor
ret
shlb
sub
lock
and
insl
test
xchg
inc
addl
sahf
mov
dec
xor
cmp
xchg
cmp
loopne
rorb
ljmp
ljmp
jl
dec
xor
jnp
push
pop
ja
dec
pop
stos
js
inc
flds
inc
jo
sbbb
cmp
lret
or
mov
push
lock
and
or
into
fs
gs
fbld
hlt
ja
dec
fwait
je
dec
pop
aad
mov
adc
cmpsb
cmp
leave
cmp
pop
cmp
pop
lret
aad
imul
ret
sub
into
xlat
lods
inc
mov
stos
mov
pop
addr16
jl
repnz
push
xchg
mov
xor
imul
push
jbe
pop
pushl
jae
shll
xor
inc
push
ret
in
out
sub
and
ret
into
cmp
pusha
push
mov
lahf
adc
adc
xchg
insl
push
push
fstp
std
push
add
xor
xchg
xchg
xor
int3
push
mov
decb
test
in
stos
xchg
sub
icebp
sub
pop
es
stos
mov
cmp
mov
dec
clc
lcall
dec
pop
stc
jle
pop
lcall
fisttpll
daa
dec
jae
mov
sar
mov
sub
shl
imull
in
not
cmp
scas
call
or
cwtl
jle
fildll
lret
ja
scas
lods
mov
pminsw
or
movsl
ja
xchg
inc
mov
jecxz
sahf
ss
inc
sti
sub
or
shlb
or
jae
test
test
pop
shld
ljmp
fsubr
mov
in
add
iret
sbbb
mov
jno
shll
pop
mov
pusha
out
and
popa
lret
lret
cli
push
jo
fs
push
sub
xor
inc
cs
add
call
inc
and
jmp
xor
subb
xor
frstor
cmpsb
ds
sarb
pop
mov
add
jmp
adc
push
movsb
neg
and
int
and
cs
in
sbb
popf
xlat
jg
push
mov
push
or
in
enter
adc
add
mov
lcall
ret
testl
in
add
fdivr
inc
mov
xor
inc
jo
lahf
adc
repnz
xchg
dec
lods
iret
icebp
int
mov
js
arpl
lea
sti
loop
fsubs
in
inc
jne
lock
shl
in
ss
aas
dec
andl
insl
sbb
sub
outsb
inc
mov
inc
ds
adc
sbb
js
push
sbb
out
sub
xchg
js
repnz
call
or
push
add
negb
xlat
xor
jmp
lcall
jge
notl
pusha
outsb
mov
dec
mov
rclb
add
lods
mov
push
push
mov
call
hlt
enter
lds
and
mov
jns
cld
insl
ja
and
loopne
mov
and
xor
sub
adc
cmc
pop
xchg
aam
xlat
fisubrl
out
mov
nop
push
push
fcompl
jp
loop
adc
daa
movsb
push
clc
jg
pop
test
filds
out
push
adc
jbe,pt
popa
adc
pushf
out
mov
out
jne
push
sti
adc
xor
sub
mov
and
mov
cmp
cmpsb
ja
xchg
daa
rol
pop
sbb
dec
daa
dec
nop
shl
push
xchg
adc
fbstp
cmc
insb
xchg
add
test
fmull
lods
xchg
shlb
test
out
out
lea
shlb
outsb
pop
mov
dec
mov
add
dec
mov
scas
xchg
sarb
adc
out
repnz
and
cltd
sub
movsb
test
mov
dec
jecxz
pop
stos
shll
fidivs
sub
fwait
inc
arpl
pusha
mov
and
sub
mov
pop
pop
sub
sahf
jecxz
sbb
cwtl
and
adc
das
loop
les
mov
sbb
dec
out
test
adc
xor
in
shr
sub
cmp
pushf
gs
push
in
or
aad
test
in
pop
mov
scas
and
cld
mov
mov
scas
mov
aad
sub
lods
cltd
loopne
mov
dec
jae
cwtl
push
xchg
cld
push
dec
xor
inc
sub
mov
and
jle
lds
or
out
add
test
stc
sub
add
test
mov
inc
jp
xchg
loop
jge
mov
adc
jle
or
imul
mov
rolb
xchg
daa
fxtract
jo
cmpsl
or
das
dec
add
lods
xor
mull
jmp
test
fucomi
or
lods
mov
sub
adc
dec
bound
mov
mov
in
lods
ficompl
mov
rclb
inc
cmp
aam
inc
inc
inc
insb
insb
lahf
add
stos
jo
cmpsl
fstpt
insl
outsl
cmp
je
sub
daa
dec
cmpsb
arpl
push
jmp
pop
dec
fs
loope
jge
aaa
sub
std
or
or
xor
push
addr16
movsl
jnp
jp
xor
rcrl
mov
xor
pusha
adc
sti
iret
mov
push
scas
push
mov
ret
sub
fildl
decb
andb
stos
push
adc
xor
and
push
dec
and
and
fdivrs
dec
sbb
cmp
das
pushf
arpl
call
das
sahf
aaa
fistpl
es
push
xchg
int
jnp
inc
mov
ret
insb
mov
cmpsb
adc
jp
inc
sub
add
sbb
cltd
cmpsl
xchg
loopne
cmp
xor
stos
loop
dec
mov
dec
sub
add
scas
cmp
data16
daa
jl
sub
mov
sarl
imul
imull
aam
nop
cmp
pop
cs
rcr
test
push
in
stos
and
mov
pop
out
xchg
add
shl
pop
xor
xor
xor
cmc
into
out
loop
dec
rcll
fs
mov
jmp
dec
push
sti
rorb
pcmpgtb
stos
scas
in
fsub
pop
fsubl
ja
pusha
xchg
pop
pop
jmp
mov
stos
mov
je
pop
pop
push
lret
sbb
push
sub
lcall
pop
outsl
addr16
xchg
movsl
std
xor
fcompp
adc
movsl
jbe,pn
jns
adc
push
fistps
test
dec
cmp
sahf
jno
lods
rcll
dec
pop
addl
mov
fmull
stc
xchg
scas
ds
outsb
mov
in
push
data16
sub
jo
daa
cmc
push
inc
fistpl
lock
push
sarl
negb
mov
in
mov
push
shl
mov
add
inc
ret
fadds
je
sbb
aam
mov
pop
jne
mov
jmp
mov
mov
mov
test
jno
cmpl
sbb
adc
mov
out
mov
adc
mov
and
xchg
mov
xchg
cs
lods
mov
push
sahf
mov
inc
or
lret
adc
jge
push
lahf
xchg
cmpsb
sti
dec
mov
jmp
loope
cmc
pop
popa
orb
cltd
jb
inc
sahf
add
sbb
fimuls
sbb
push
pushf
cmc
add
popf
or
add
and
mov
ret
aad
xchg
stos
ja
popa
pop
xchg
sub
push
addb
push
mov
inc
ret
pop
enter
aaa
sub
adc
or
sbb
push
inc
inc
out
cmp
fistpll
ret
out
aas
addr16
out
sub
enter
mov
dec
dec
insb
rorl
pop
or
stos
pop
pop
mov
push
push
inc
cltd
das
mov
xchg
lea
shll
loop
and
dec
push
in
lea
fimull
xchg
lock
out
jbe
adc
int
fistpll
sub
mov
rclb
pop
push
insl
and
jb
xor
outsb
mov
aaa
jns
xor
in
pop
mov
cmp
xchg
lods
std
sbbb
and
push
clc
in
ds
dec
push
xchg
jge
popa
cmpsl
mov
subl
inc
fmul
daa
xor
lock
jno
mov
push
inc
aad
int
sbb
call
sub
int
int3
mov
nop
xor
ds
inc
jmp
out
cmp
push
je
pop
outsl
sub
pop
cmp
inc
push
fadds
int3
loopne
sti
andb
and
flds
iret
push
sbb
jg
and
dec
mov
dec
fnsave
loope
out
add
push
xchg
pop
cmp
bound
and
and
repnz
call
jle
push
push
lahf
sub
mov
arpl
and
in
jb
mov
cmp
xlat
xlat
leave
cli
mov
xor
mov
stos
imul
out
cmp
pusha
or
mov
push
je
pusha
jb
sbb
repz
out
cmp
ljmp
loopne
aad
pushf
add
rcrl
fistpll
out
sub
enter
push
xor
xor
cld
jmp
lcall
lods
inc
jnp
in
or
into
lahf
js
lods
mov
adc
push
mov
fwait
and
outsb
adcb
addb
mov
and
sub
jge
test
cmpsl
or
xchg
dec
lods
arpl
movsb
mov
lret
sbb
and
jge
mov
adc
stc
cld
jl
in
cwtl
test
sub
mov
mov
mov
pop
test
jmp
and
and
out
dec
insb
add
pop
adc
xor
loop
pop
sbb
cmp
sbb
scas
cmpsl
xchg
in
hlt
mov
int3
adc
fistl
sahf
lret
xchg
daa
cld
adc
dec
jno
rclb
sbb
leave
mov
mov
jg
int3
je
pop
sbb
sti
mov
lahf
dec
icebp
mov
cli
hlt
sbbb
aad
pop
shrl
xor
cmc
xor
imul
bound
mov
enter
xchg
inc
cmp
cmp
into
pop
sbb
adcb
pop
negb
fcomps
jbe
push
loope
jecxz
test
add
and
xchg
std
or
mov
pop
jg
addr16
pop
mov
insl
inc
mov
or
jne
dec
aas
add
out
adc
out
xor
dec
arpl
add
mov
in
mov
and
sub
dec
cmpsl
mov
frstor
inc
xchg
pushf
or
lea
daa
jnp
inc
mov
enter
push
xchg
mov
loope
nop
stos
xchg
xor
aas
push
xchg
test
jp
jle
sub
jbe
and
jecxz
outsl
and
sub
sub
sbb
in
and
outsb
andl
pop
cmc
mov
lea
cmc
je
pop
roll
inc
je
mov
shlb
pop
cmp
jnp
mov
push
fidivrs
mov
ret
ret
scas
ljmp
rcrl
divb
cltd
add
repnz
push
rcrb
hlt
cmc
mov
dec
popa
aaa
push
lret
rclb
inc
dec
ret
fistpl
mov
cmp
pop
push
enter
fsubrl
or
mov
cmc
push
jno
add
outsb
inc
cmp
test
cmp
mov
cmpsb
mov
add
sub
jnp
dec
or
add
sub
ljmp
mov
xchg
push
mov
mov
enter
xor
xlat
es
fstpt
push
sbb
repnz
scas
dec
test
dec
mov
xor
xor
push
pop
je
insl
push
cmp
into
fsts
mov
cmp
and
rcr
push
orl
inc
cltd
pushf
jno
scas
push
insb
jmp
inc
xor
sub
imul
stos
inc
out
pop
mov
call
pushf
mov
daa
sub
dec
xor
push
out
popf
and
bound
repz
cltd
scas
outsl
mov
or
test
ficoml
jb
fnstsw
xor
sub
shlb
inc
and
push
xchg
sbbb
cli
fst
xchg
bound
arpl
jnp
orb
sbb
movsl
pop
lret
cmpl
push
sbb
in
sar
rclb
mov
fildll
mov
sub
mov
out
fcomi
mov
out
repnz
and
mov
dec
out
out
in
adc
leave
pop
sub
jge
push
stos
sub
or
movsl
xor
aam
dec
sub
lret
dec
std
stc
out
movsl
or
push
orl
aad
and
or
ret
and
mov
shl
js
ljmp
int
ja
xchg
pop
xor
in
and
jno
nop
das
dec
push
and
sbb
arpl
icebp
dec
fisubs
pop
xlat
icebp
ja
add
xchg
lods
mov
and
ss
icebp
mov
psubsb
cmp
inc
mov
in
fisubrl
mov
jb
or
mov
sbbb
or
inc
out
mov
xor
aad
and
pushfw
adc
xchg
mov
push
sahf
xor
jns
mov
aaa
jecxz
xchg
sub
arpl
inc
stc
or
inc
loop
dec
jp
repnz
movsl
insl
xchg
mov
or
shrl
bound
pop
aam
xor
pop
pop
xor
mov
push
cmp
rcr
vprotw
jg
mov
dec
mov
mov
push
mov
jno
jl
and
int3
stos
jno
pop
dec
jo
outsl
lds
scas
iret
mull
cmp
cld
out
popf
out
in
push
test
mov
ss
fildll
mov
sbb
loope
push
push
movl
mov
jg
jno
lea
inc
xor
cltd
mov
out
pusha
sub
in
pop
arpl
pop
lcall
imul
es
std
mov
ss
aaa
or
fcoml
inc
std
and
shrl
jno
mov
sarb
add
ret
dec
in
inc
movsb
adc
inc
shrb
sub
xchg
in
jl
xchg
sbb
dec
aam
push
js
das
mov
fcoms
lods
mov
inc
ficomps
mov
jmp
sub
pushf
and
lods
icebp
cmpsb
in
in
test
lcall
pop
rorl
sub
xorl
enter
icebp
data16
out
fbld
aam
add
pop
rol
jo
pusha
xchg
int3
xchg
mov
rcl
cli
inc
sub
or
outsb
jmp
xor
scas
add
pop
sub
fbld
xorb
cmpsl
stos
outsl
jnp
test
inc
scas
shrl
xorl
add
es
filds
cmp
scas
lock
or
jae
ja
inc
shrb
ljmp
lcall
sub
loope
pushf
loop
and
jo
rorl
cmpsl
mov
orb
inc
or
cmova
aad
mov
xor
xor
xchg
subl
clc
xor
xor
in
jle
fidivl
pcmpgtb
hlt
jne
sub
stc
jl
mov
add
push
adc
test
loopne
dec
xchg
adc
cmpsb
push
outsl
mov
loop
insl
pop
sub
mov
push
lahf
sbb
int3
scas
lock
mov
add
or
or
lods
cmp
aaa
push
cmp
cld
enter
or
nop
mov
and
sbbl
pusha
call
mov
sbb
adc
jmp
in
add
inc
xchg
pop
mov
add
roll
xlat
mov
mov
fnstcw
sbb
dec
movsb
rclb
das
int3
xchg
dec
push
jbe
ss
inc
hlt
flds
pusha
mov
pop
in
xchg
jno
push
pop
dec
jne
mov
push
push
xchg
mov
or
aas
push
sbb
or
push
es
sub
dec
fwait
jge
leave
aas
inc
mov
inc
je
mov
adc
and
xor
andb
adcl
or
mov
jb
and
lcall
dec
fs
clc
xchg
fistl
mov
orb
push
mov
adc
or
mov
cli
add
sbb
push
aam
in
insl
sub
mov
dec
push
aad
sti
mov
call
in
mov
inc
inc
dec
mov
mov
clc
add
jno
jns
mov
and
pop
divl
push
cld
sahf
clc
outsl
add
xchg
push
popf
and
cs
cmpsb
je
das
adc
sbb
lods
mov
rorl
sub
cwtl
pop
adc
add
push
int3
cli
mov
xchg
pop
and
data16
xchg
mov
fwait
mov
inc
das
mov
clc
pop
mov
adc
dec
inc
mov
ja
sub
lret
cltd
ja
or
jl
pop
sub
in
push
cmpsl
xchg
divl
movsl
and
imul
push
push
add
fdivrs
cmp
dec
lds
dec
inc
test
cli
out
mov
icebp
test
test
imul
mov
sahf
and
aam
push
jno
pusha
stc
hlt
ret
push
pop
setl
pop
test
mov
std
outsl
dec
and
int
repnz
insl
xlat
lds
repnz
adc
ss
mov
sarb
cli
rorb
xchg
mov
push
dec
popf
stos
movzbl
lock
mov
iret
loope
insl
push
fwait
repz
jbe
daa
or
gs
es
into
incb
popa
or
imulb
add
jmp
mov
pusha
inc
es
adc
mov
or
mov
mov
movsb
push
sub
cmp
push
or
fcompl
in
sub
sar
jge
xchg
repz
adc
pop
stos
xchg
mov
stos
dec
mov
mull
fst
inc
cmp
xchg
stos
push
pop
fmuls
cld
jge
mov
rclb
mov
xchg
in
mov
dec
ds
dec
and
int3
ret
mov
mulb
les
pop
sub
push
addb
lcall
push
ret
and
sbb
jae
cwtl
repnz
movsb
jno
mov
push
mov
rcrl
filds
push
jne
sub
dec
call
inc
test
add
jg
bound
cmp
fldt
inc
jg
and
xor
sahf
xchg
xchg
adc
dec
add
ds
push
sbb
and
pmulhuw
sub
mov
cmpsl
pushf
inc
dec
jmp
into
cmpsl
mov
lahf
mov
inc
sti
test
mov
jne
in
popl
cmpsl
orl
dec
push
popa
xchg
cltd
fnstcw
rclb
loopne
test
or
pop
and
jne
jge
dec
push
sbb
adc
imul
cmc
lods
jnp
rcll
in
add
push
lods
mov
pop
or
stos
dec
stos
js
lret
stc
xchg
and
movsl
jae
mov
clc
dec
outsb
int3
cli
push
aas
fisubrs
mov
dec
mov
and
push
popf
lcall
mov
or
daa
mov
loop
roll
xchg
cmp
cmp
mov
out
ss
mov
pop
fs
negl
or
cli
xlat
ljmp
pop
or
inc
xchg
sbb
pop
sub
incl
or
into
lea
cli
test
insl
stc
xchg
repz
cmp
iret
aas
out
xchg
inc
push
hlt
inc
push
addr16
cmpsb
scas
shlb
push
js
jbe
dec
mov
xchg
cmp
loopne
push
cld
and
sub
add
popf
leave
push
lock
xchg
xchg
stos
outsl
pusha
pop
jae
aam
repz
int3
inc
pop
sbb
pop
cmp
mov
mov
test
cmp
lahf
fcmovnu
cli
shll
xorl
dec
sbb
or
sbb
adc
js
or
dec
mov
std
fwait
call
loop
int3
mov
andl
mov
popf
push
or
dec
mov
mov
jecxz
mov
ss
insl
aam
stos
push
bound
repnz
dec
mov
pop
clc
mov
cld
pop
std
cs
pop
adc
push
movsb
mov
or
test
add
pop
cmp
push
imul
mov
push
repz
adc
and
subl
or
cmp
sub
in
mov
xchg
or
dec
jo
cmp
enter
jbe
inc
or
mov
sub
hlt
dec
cmp
dec
ja
insl
pop
js
je
out
add
xor
outsb
out
dec
leave
rolb
lret
xor
fidivrs
adc
cmp
or
adc
add
jg
movsb
in
mov
push
test
aam
xchg
jmp
imul
mov
mov
out
pop
int
repnz
hlt
push
sbb
mov
pusha
add
jb
inc
repz
dec
mov
lret
and
mov
xchg
das
and
add
inc
dec
shlb
inc
and
lods
xor
pop
add
mov
fwait
sub
aas
xchg
rcr
and
add
repz
fwait
or
inc
int
jae
cmpsb
notb
lcall
or
mov
lret
aas
xchg
push
mov
dec
add
push
andb
or
pop
ret
jg
cltd
sbb
filds
or
jb
dec
push
rolb
mov
insb
push
xor
out
dec
pusha
shlb
es
mov
std
pop
xor
aas
xor
mov
les
es
in
xor
mov
pop
cltd
out
test
aam
loopne
inc
mov
mov
cmpsb
mulb
stos
pop
xor
shll
call
mov
sbbl
xchg
and
xchg
pop
pop
add
dec
dec
test
lods
mov
cwtl
rorl
cmc
xchg
sbb
mov
test
test
xor
test
imul
movsb
inc
lods
xor
xchg
mov
test
out
adc
fsubl
fnstsw
fimuls
cmp
push
sub
repz
push
aaa
dec
adc
push
push
lahf
gs
dec
cli
adc
sti
mov
lret
addr16
mov
cld
mov
int
hlt
movsb
jns,pt
shr
pusha
std
aam
push
xchg
mov
sbb
in
mov
fisubrs
and
faddl
int3
mov
inc
ret
mov
push
or
cli
fs
and
roll
out
sub
push
inc
sub
andl
pop
sahf
mov
mov
inc
stos
aas
mov
int3
bnd
aas
leave
inc
jne
mov
pop
test
in
mov
mov
mov
pusha
sub
mov
jns
mov
in
sti
inc
push
cwtl
push
iret
lahf
inc
fcompl
sar
inc
jb
mov
pop
leave
pop
xchg
in
mov
mov
outsl
lret
mov
adc
mov
push
out
mov
xor
fisubl
sbbl
aad
pop
ja
inc
or
shrb
test
or
hlt
lret
adc
cli
adcb
mov
push
push
aas
sbb
ss
stos
add
mov
add
mov
sbb
call
js
cltd
xchg
pushf
jno
lds
jbe
mov
xor
sbb
and
outsb
push
int3
inc
sti
outsb
mov
xchg
addr16
shr
mov
adc
xor
add
inc
dec
addr16
inc
cmp
pop
lret
mov
into
add
xlat
cmp
sti
in
mov
sub
push
fcmovbe
cmp
imul
mov
call
pop
and
push
add
outsb
mov
fistpl
inc
and
imul
ljmp
mov
jl
shlb
add
repz
push
clc
jns
repz
xchg
dec
xor
popf
inc
xor
fsubr
sub
jb
mov
aas
enter
jg
sbb
jecxz
jo
dec
or
cs
stos
cmpsl
and
sbb
or
lock
cld
push
add
je
rcrb
push
and
push
add
push
addb
int
dec
jl
pop
mov
cli
popa
decl
test
stos
xchg
dec
add
mov
test
mov
outsl
push
pop
imul
loop
das
inc
jnp
pusha
fisubs
ret
out
repz
jmp
adc
lds
in
stos
jb
scas
mov
push
jecxz
xor
adc
and
mov
repz
sbbl
bound
cmp
and
jae
cmpsl
add
popa
or
inc
outsl
ss
push
stos
vmread
negb
pop
push
push
pop
movsb
inc
das
lahf
xlat
fldt
rcrl
mov
movsb
pop
xor
pop
rcrl
sub
or
repz
js
negb
mov
rcr
cmp
adc
cmp
out
imul
std
test
pop
aam
das
xchg
push
cltd
ds
js
xor
add
cmp
or
sti
scas
jecxz
lods
sub
shl
lcall
xlat
mov
mov
scas
sub
cmp
adc
popf
test
test
lods
jns
ret
cmc
cs
hlt
adc
sub
rorb
aaa
add
push
pop
fucomip
cmp
pop
aam
jle
add
not
xchg
jle
lret
repz
mov
pop
or
cld
mov
das
shll
lcall
lods
jmp
cwtl
fisubrl
in
mov
fistps
push
lret
xor
daa
enter
push
test
mov
xchg
fsubs
loope
cli
mov
sbb
mov
mov
jp
pop
leave
adc
lods
aad
cmc
lods
sbb
mov
lcall
lods
stos
push
mov
pop
sbb
adc
sarb
pop
sbb
clc
imul
mov
mov
das
push
pop
xchg
inc
test
push
hlt
push
mov
push
push
loopne
jmp
push
cwtl
fwait
or
add
iret
jbe
mov
mov
pop
jae
and
je
pusha
push
aaa
test
jle
jmp
sbb
or
lods
lret
adc
loopne
or
sbb
and
scas
jle
mov
pop
push
cmp
fstps
jge
sbb
inc
shl
inc
jbe
dec
mov
push
loopne
add
js
pop
pop
lods
lods
and
add
std
add
cli
mov
pop
adc
fiaddl
push
call
inc
mull
std
fwait
iret
in
sub
mov
push
xchg
sahf
push
pop
pop
and
sub
jp
cs
sbb
pop
push
and
into
sbb
pop
inc
xor
dec
gs
in
rclb
cmp
ss
stos
aam
int
jo
in
out
fadd
dec
mov
mov
dec
mov
xchg
jmp
shrl
sbb
jae
pushf
mov
jns
test
add
loopne
fwait
jge
loop
xor
sbb
int
pop
jge
sub
sar
adc
sarl
mov
or
push
sub
or
xlat
cs
push
das
add
cli
and
leave
sbb
data16
mov
addl
daa
mov
or
and
rolb
addl
xor
push
outsl
lock
rol
add
adc
mov
rclb
cmp
jno
mov
movsl
popf
movsl
xor
ror
mov
shlb
sti
lds
jb
xor
or
pop
mov
mov
icebp
cld
loopne
sub
add
fidivrs
test
movsl
cmp
jne
das
cmp
lea
aad
xchg
les
popa
xchg
pop
xchg
mov
fwait
cmp
aaa
pop
xor
cmp
sub
sbb
sahf
jecxz
sub
cmc
orb
pop
cmpb
push
sub
clc
test
dec
or
std
push
imul
lods
mov
sub
mov
into
sbb
insl
out
jns
aaa
dec
adc
xchg
pusha
test
repz
pop
xchg
movsl
sbb
dec
and
jnp
sub
inc
movsb
xor
push
fs
enter
pop
in
test
pop
xchg
push
lret
test
fcmovb
shlb
lahf
stos
fisubrl
outsl
imul
jl
aaa
jl
adc
jb
adc
xchg
ret
xchg
pushf
mov
int
and
pop
js
lds
sbb
jl
fsubs
xor
add
inc
push
mov
cmp
push
xchg
and
mov
idivb
in
ret
out
pop
push
cmp
pop
rorl
add
int3
orb
xchg
out
mov
pop
mov
sub
inc
sub
repz
ljmp
fldl
test
fistps
rcrb
insb
cld
mov
inc
sub
pop
test
inc
jmp
loope
xchg
xor
inc
out
pusha
ds
jne
enter
lods
test
fists
ja
stc
adc
out
xor
inc
dec
hlt
fistpll
adc
dec
or
inc
mov
stos
pop
insl
xor
sub
adc
xchg
into
mov
fsubs
movsl
ret
xor
hlt
es
xor
pop
lcall
bound
adc
fiaddl
pop
push
dec
push
shlb
insb
iret
popf
in
add
cmp
pop
addr16
xchg
mov
in
pop
inc
jle
dec
push
cmpb
repz
add
stc
sti
xchg
insb
jae
add
or
mov
sti
stos
icebp
push
push
push
push
push
push
in
cmpsl
movsb
fcomp
xor
xchg
jmp
sub
mov
sub
mov
or
dec
scas
xchg
out
adc
setle
jnp
stc
xlat
sub
mov
and
bound
pop
insl
fldt
mov
jg
lcall
jne
mov
jo
mov
push
dec
fdivrs
pop
dec
bound
pop
push
xor
xlat
imul
cli
xchg
jmp
jbe
or
movsb
sub
xchg
stc
pushf
sub
xchg
ret
mov
out
add
mov
out
bound
jne
call
adc
ja
adc
or
push
push
xor
pusha
push
fisubrl
outsb
cmp
add
idivl
push
inc
pop
ret
sbb
dec
mov
mov
addl
mov
sub
mov
stos
ljmp
pop
ret
push
fstpl
into
dec
jae
int
or
stos
scas
adc
shll
mov
sbb
xor
push
or
and
daa
pop
in
xor
outsb
movsl
xchg
add
cmpb
loopne
push
inc
pusha
in
clc
arpl
and
scas
mov
outsb
sub
jmp
out
add
shrl
aas
arpl
es
mov
dec
pop
jg
jmp
fpatan
or
test
cs
sbb
mov
inc
scas
jbe
dec
mov
pop
fdivrs
leave
inc
mov
dec
mov
push
inc
adc
inc
mov
les
xchg
ja
test
nop
aas
xchg
mov
mov
or
sub
jno
popa
clc
push
std
pop
and
insl
push
movsl
cwtl
or
fs
or
inc
loope
ja
pop
push
xchg
mov
push
cli
fwait
dec
stos
ficompl
fldl
push
out
pop
jecxz
mov
inc
pop
lret
cli
scas
dec
mov
nop
pushf
jno
jo
jns
jns
scas
mov
jg
fldz
mov
pusha
push
lods
jno
mov
cld
mov
jl
mov
cmp
data16
bound
scas
cmp
loop
mov
push
aam
xor
dec
cmp
mov
je
aas
jmp
inc
jmp
inc
mov
cmpsb
cli
ret
sbb
js
aas
pop
pop
push
cmp
test
lods
and
jge
bound
mov
mov
inc
and
lods
roll
xchg
mov
or
out
js
popf
jge
decl
movsb
xchg
push
xor
pop
xchg
lock
dec
daa
jle
cmpsl
mov
iret
lds
int
das
mov
loopne
test
loope
pop
sub
and
xor
ret
adc
mov
hlt
nop
pop
pop
or
dec
and
sarl
out
fxch
jne
fwait
and
jmp
and
clc
nop
ret
sbb
inc
adc
sbb
mov
les
int3
call
test
cmp
sub
test
xchg
repnz
outsl
sbb
call
jnp
lea
mov
push
sbb
hlt
iret
or
movsb
pop
cmp
push
jp
imul
cmpsb
pop
inc
sbb
adc
pop
inc
and
push
dec
out
mov
je
cmp
xchg
hlt
ss
cli
out
inc
aam
xchg
hlt
int
and
mov
jmp
sub
ss
push
test
testb
testb
add
ljmp
cmp
orb
test
or
inc
fdivrl
imul
lcall
aas
lods
mov
xchg
sub
sub
je
cmp
sarb
pop
loop
pop
inc
mov
cli
enter
inc
mov
adc
stos
add
pushf
decb
jecxz
push
in
xchg
fimuls
fbstp
push
fldl
dec
fwait
sti
mov
shlb
mov
inc
mov
loope
jle
cmpps
ficoml
mov
xchg
pop
notb
in
das
pop
out
xor
dec
hlt
push
sub
std
out
in
or
cmp
pop
movsb
xchg
icebp
jge
gs
loope
sub
data16
xchg
ja
sub
adc
ja
out
data16
enter
popf
push
adc
push
sbb
cmpsb
cld
add
jb
jl
cmp
xchg
jl
fstps
mov
cli
inc
jge
rclb
aam
inc
sbb
js
stos
adc
sar
add
icebp
add
call
push
sub
add
pop
fldenv
xchg
jmp
xchg
sahf
js
inc
scas
insl
popa
xorl
push
push
dec
andl
icebp
sti
cmp
sbb
call
les
jno
xchg
scas
pop
mov
add
fstpl
aam
adc
inc
je
mov
cmp
cmp
sub
adc
sahf
sarb
out
fldt
sub
sub
xchg
lcall
lods
shl
imul
and
loopne
jmp
mov
repz
outsl
cmp
push
cltd
push
inc
dec
faddl
fldcw
call
mov
jecxz
inc
enter
test
adc
dec
sbb
in
pop
clc
fcoml
adc
sub
cltd
aaa
les
pop
int3
mov
in
hlt
jo
mov
mov
pop
adc
or
fwait
jmp
mov
test
inc
sbb
sbb
and
jae
ret
xchg
dec
sahf
scas
adc
in
sub
sub
sbb
xor
dec
or
pop
ror
xor
ss
mov
add
adc
stos
in
fistpll
rcrl
sub
jb
mov
xor
mov
hlt
fisttpll
pop
jle
dec
push
cli
ret
inc
pop
inc
popa
mov
or
outsl
das
add
imul
rcl
shll
or
or
lds
mov
push
push
jae
addr16
add
mov
mov
cmpsl
lahf
and
outsl
xchg
xor
mov
adc
add
sub
pop
call
inc
movsl
cmpsb
xor
cmovno
in
mov
sub
je
jl
adc
imul
mov
push
addr16
pop
out
test
xor
mov
sub
cmp
lret
imul
xchg
inc
xchg
xchg
lods
testl
repz
mov
test
cmp
adc
push
mov
iret
decl
ljmp
xchg
mov
cmpsb
shlb
into
addb
xor
and
add
dec
cmpsl
pop
sbb
les
pop
cmpsb
ja
popa
add
fldcw
cltd
test
mov
pop
xor
pop
mov
mov
lds
or
pop
mov
dec
sbb
lret
clc
and
lock
cmp
push
and
dec
adc
xadd
add
cmpsb
pop
mov
dec
outsb
sub
popa
lods
pop
xchg
mov
cmp
inc
aaa
or
cmp
cmpsl
std
insl
mov
dec
push
loop
sti
sbb
imul
mov
dec
cltd
mov
enter
aam
pushf
sub
xchg
dec
pop
or
inc
add
sub
aaa
imul
push
xchg
mov
imul
sbb
mov
cld
aam
and
lahf
jp
mov
inc
lods
or
mov
jecxz
jne
mov
idivb
jae
ss
mov
sbb
dec
imul
mov
addr16
loopne
or
jg
fidivs
sub
hlt
pop
mov
inc
pop
jge
mov
add
add
movsb
or
sbb
and
push
cmp
mov
lds
dec
test
pop
jbe
test
loope
sub
cmp
outsb
cwtl
out
sbb
and
ret
imul
mov
xor
jb
out
pop
rcrl
lcall
inc
xorb
inc
ret
or
sbb
fisubs
sbb
mov
and
fwait
stos
mov
add
adc
xchg
fisttps
cmp
ja
fnstcw
jo
cmpsb
out
pusha
fistpl
cmp
imul
or
push
idiv
test
ret
xchg
orb
mov
fcompl
popf
xchg
sbb
mov
adc
adc
mov
dec
mov
jb
cs
aaa
push
jbe
ds
push
xor
lds
dec
bound
xor
mov
ds
cltd
push
sbb
push
or
mov
rep
mov
inc
jg
jbe
xor
out
scas
pop
ror
lea
sub
enter
inc
and
cmp
pop
sbb
test
inc
xor
mov
cmp
mov
sbb
ret
pop
jbe
pop
repz
add
pandn
lods
fmul
outsl
aad
dec
iret
insb
add
out
inc
sub
push
xchg
stos
lds
mov
out
inc
rcrl
xor
jmp
pop
fs
cmpsl
in
mov
iret
mov
cli
pop
sbb
imul
out
inc
mov
nop
repnz
mov
sbb
js
imul
repnz
rorl
addl
mov
jl
jle
xchg
pop
sub
cmp
fmuls
pop
dec
icebp
mov
add
inc
xorl
sbb
mov
cmp
test
pop
xlat
arpl
lods
sar
lret
cmp
adc
fcmovnbe
shlb
out
and
lcall
hlt
lahf
mov
xchg
rcll
pop
xchg
test
lock
sbb
insl
lea
mov
lods
cmp
inc
or
dec
pusha
mov
adc
mov
es
rorb
ss
je
adc
or
sarl
hlt
jg
xor
imul
ja,pt
mov
cmc
inc
or
loop
pusha
xor
inc
inc
dec
or
out
add
or
mov
in
inc
dec
mov
fistps
stc
in
push
lret
xorb
add
sub
decl
push
pop
stos
cmpsb
inc
aam
imul
idivb
dec
mov
lock
insb
loopne
sub
xor
mov
jo
gs
loope
inc
mov
jecxz
ds
xlat
dec
or
dec
cwtl
push
lock
xlat
pusha
mov
ljmp
push
rolb
fwait
test
call
cld
lahf
xchg
adc
mov
inc
pop
sbb
cs
and
push
xchg
fxch
mov
scas
mov
lcall
imul
outsl
jne
add
push
xchg
das
xchg
les
push
jne
mov
cmp
inc
or
fucomip
inc
mov
xchg
popa
cmpsl
xchg
add
aaa
inc
or
and
aaa
mov
cmp
ret
adc
call
xchg
pop
pop
or
mov
popl
das
push
inc
pop
inc
scas
int3
in
aam
push
cmp
es
adc
push
adc
pop
sbb
push
arpl
and
cmpsl
jg
js
mov
xchg
cmp
es
fistpll
adc
addr16
fs
and
loopne
mov
aas
rol
fnstenv
or
push
fsub
movsl
mov
mov
clc
mov
pop
push
sub
push
fidivl
push
sub
mov
push
pushf
inc
sub
bswap
adc
inc
cmp
imul
and
fisttpll
sub
adc
add
jbe
je,pt
in
adc
sbb
scas
mov
xor
and
sbb
iret
xchg
sbb
lret
fs
jmp
dec
cmc
out
fstpl
rcl
aaa
lahf
add
iret
mov
insb
sbb
out
xchg
mov
add
loopne
push
sub
sti
sar
test
loope
cmpsl
jmp
rcl
mov
ja
aad
fcomi
vorps
insl
mov
lods
jge
add
callw
mov
decb
popf
out
loope
rolb
test
imul
sub
add
in
mov
pusha
into
mov
inc
mov
ret
xchg
sbb
mov
out
dec
addr16
gs
repz
jae
fldcw
ljmp
popa
and
jmp
mov
sbb
mov
mov
and
adc
xor
bound
adc
call
cld
loopne
fwait
in
xor
arpl
popf
out
dec
or
in
push
xchg
imul
push
sbb
inc
sub
push
movsb
pop
pusha
xchg
sub
or
clc
stos
sti
aam
push
jnp
mov
adc
arpl
cmpsl
push
push
rcll
or
out
icebp
pop
sub
ds
mov
imul
into
xchg
pop
std
add
push
inc
inc
aam
shl
test
addr16
pop
mov
outsb
outsb
pusha
sub
and
xor
into
cld
addr16
adc
dec
mov
mov
sti
lock
pusha
aaa
inc
test
mov
mov
rcl
test
cmp
or
sub
in
and
push
push
mov
testb
sbb
and
and
pop
sbb
lret
sahf
sub
inc
xorb
mov
js
add
pop
pop
jae
ds
sahf
add
movsb
jmp
out
je
fistl
adc
pushf
lods
filds
int3
loop
adc
mov
ficomps
xchg
pop
notb
es
arpl
fldt
adc
call
inc
jo
lret
push
mov
mov
cmp
loopne
fistps
sbb
xchg
imul
divl
outsl
push
fwait
aas
mov
sub
cmpsl
mov
dec
jmp
push
in
mov
test
push
scas
frstor
pop
mov
cltd
pop
xchg
js
addr16
dec
icebp
test
dec
cld
xchg
jno
add
lods
xlat
frstor
push
out
call
dec
push
daa
mov
lods
js
fstp
in
mov
movsl
add
in
push
in
or
adc
xchg
add
cli
push
xchg
lcall
or
bound
push
mov
mov
aaa
int
daa
aam
push
fdivr
mov
pop
xchg
dec
rcrl
mov
test
es
and
xor
xor
push
pop
inc
popl
or
mov
mov
push
dec
scas
out
push
mov
add
jnp
mov
rcr
add
shrb
inc
jmp
fistps
push
inc
mov
aaa
dec
mov
sti
xchg
fistpll
mov
daa
cmp
and
xchg
mov
rolb
outsb
cmp
rol
out
mov
bound
cmpsb
std
jl
inc
jp
lds
xor
xchg
lcall
xorb
adc
hlt
mov
les
pop
inc
jns
sbb
cmp
lea
sbb
sub
xor
cmp
shlb
mov
flds
cld
lahf
jb
mov
leave
popa
imul
inc
inc
mov
lea
lahf
scas
insb
xchg
or
shll
inc
cs
repnz
fmull
in
aaa
dec
ja
inc
mov
xlat
scas
repz
gs
ja
in
insb
xchg
pop
or
sub
and
aaa
jge
jle
ljmp
sahf
add
lret
and
arpl
lret
inc
mov
rorl
push
xor
mov
add
cltd
add
sub
insl
int
insl
cmc
cmp
sti
ljmp
push
cmpsb
sub
aam
adc
push
rorl
push
test
or
mov
hlt
mov
sub
inc
push
bound
mov
in
mov
jns
dec
or
dec
jae
pop
mov
gs
ds
aas
int3
or
pop
mov
jmp
sbb
mov
movsl
call
out
and
xlat
dec
cmpl
mov
push
xor
clc
and
cmpl
aas
rol
addl
push
jbe
xchg
dec
pop
and
lcall
in
int
mov
push
std
jmp
xchg
cmp
pusha
jae
push
jae
mov
lret
stos
or
iret
jo
xchg
xlat
mov
xchg
dec
xor
or
or
or
sarl
dec
lock
out
int
add
clc
sub
aad
pop
push
lods
and
ja
xchg
popa
and
inc
sub
jp
add
call
ss
mov
jecxz
pop
cmc
ficoml
jbe
pop
out
push
loopne
stos
or
xchg
jp
test
sti
adcb
mov
xor
sbb
dec
mov
fwait
jne
call
and
das
push
rcrb
aaa
mov
xchg
sbb
xor
mov
lret
mov
xor
xlat
lahf
jno
xor
or
cmp
cmp
mov
je
xchg
push
mov
bound
mov
sbb
xor
mov
and
adc
out
jl
ljmp
iret
ja
aaa
jo
fst
clc
fimull
lcall
sbb
pop
push
stos
in
xor
addr16
insl
adc
lret
es
jmp
int3
fcmovnbe
pop
xchg
cmp
dec
mov
inc
test
subb
sbbb
loop
scas
js
inc
fcom
xchg
jle
mov
les
das
enter
cmp
fwait
mov
imul
cmp
and
jbe
xor
or
sbb
adc
clc
push
lret
movb
jecxz
lcall
add
mov
inc
je
dec
inc
cwtl
stos
mov
mov
inc
xchg
inc
mov
push
mov
mov
xchg
ja
inc
inc
jne
imull
ret
push
cld
xchg
or
mov
stos
orb
aad
fbstp
pop
jne
push
inc
aas
lahf
mov
js
imul
inc
lock
mov
les
jge
push
sbb
xchg
sub
inc
inc
mov
mov
outsb
sbb
cmp
cmp
mov
out
push
mov
xor
mov
lods
cmp
repnz
add
xor
daa
add
xor
in
push
roll
push
jnp
push
add
mov
popa
ficompl
pop
ja
mov
loope
pop
mov
scas
mov
into
add
sbb
cmp
jnp
fildl
loope,pt
mov
cld
mov
inc
lret
int3
leave
adc
mov
js
sti
popa
and
cltd
bnd
jg
adc
lret
or
rol
sahf
mov
cmp
inc
jnp
sub
bswap
xor
sub
pop
pop
jo
pusha
scas
es
ffree
mov
repz
mov
fwait
stos
ja
ds
lds
adc
lahf
or
mov
add
push
rorb
and
ja
aad
pop
mov
jnp
into
xchg
add
sbb
in
dec
loope
mov
lahf
sub
and
pop
pop
or
add
popa
dec
xchg
mov
cmp
cmpsb
push
subb
adc
test
loop
dec
bound
dec
push
sahf
aas
pop
mov
hlt
mov
adc
add
jg
fsub
loop
ret
lds
test
pop
mov
aam
lcall
js
cmp
fcoms
push
cli
mov
mov
mov
and
es
xlat
test
adc
jl
arpl
movsb
into
cmp
mov
lock
xchg
add
dec
mov
jl
in
lods
pop
ror
daa
dec
out
mov
jle
pop
lret
lods
mov
pop
mov
mov
cld
xchg
or
movsl
adc
push
fcmove
psubsb
int3
loopne
xor
push
mov
sti
out
mov
inc
insb
mov
adc
mov
pop
jge
out
cmp
adc
lcall
inc
mov
xor
enter
cmp
fldenv
cltd
test
rcrb
scas
dec
fldenv
and
iret
jg
arpl
les
cmpsl
movsb
leave
cmp
mov
rclb
jmp
adcl
jg
sti
aam
pop
mov
cmp
mulb
testb
push
call
lods
mov
dec
sub
xor
inc
imul
fildl
mov
sbb
push
push
mov
cmpsl
and
into
pusha
fimuls
loopne
and
pop
mov
pop
and
mulb
dec
outsl
in
repz
add
adc
sbbl
aad
dec
std
mov
mov
sub
xchg
xor
adc
ficoms
xchg
jg
inc
push
sub
lds
jmp
lret
jo
ret
jl
add
or
lock
xor
lret
push
es
lret
dec
div
or
adc
call
mov
cmp
ja
push
test
cmp
andl
scas
cli
sbb
hlt
repz
lret
out
rclb
jne
shll
dec
xchg
pop
lret
sub
idivl
mov
xchg
outsl
xor
repnz
in
mov
pop
clc
jne
mov
cld
mov
and
addr16
in
adc
aad
dec
push
lods
pop
out
stos
test
int3
lea
pop
cmp
fldl
push
in
iret
je
push
dec
lods
in
pop
mov
cmc
adc
inc
xchg
addb
sub
push
scas
push
fcom
movsb
stc
xchg
mov
xchg
sbb
push
push
inc
mov
test
shl
jbe
dec
iret
mov
test
es
int
jg
scas
aas
rorl
out
or
dec
sub
orl
pop
inc
mov
lds
jmp
clc
pop
in
sti
lock
pop
adc
lds
or
pop
inc
xchg
sub
int3
mov
clc
test
bound
jge
fwait
xchg
inc
scas
mov
fimull
pop
mov
sbb
xchg
int3
xchg
mov
push
pop
mov
jne
push
pop
stos
mov
subl
mov
dec
sbb
jle
adc
psubsw
outsl
jge
mov
fs
cmp
rcl
ret
arpl
enter
out
mov
outsb
jecxz
sbb
and
pop
pop
mov
adc
and
arpl
xor
cltd
dec
and
or
jns
loop
xor
pop
sub
dec
adc
jnp
subl
insl
and
and
jb
fsts
gs
cmp
inc
fiadds
sbb
sub
fs
dec
push
ret
movb
ss
ljmp
shll
xchg
outsl
inc
mov
pop
test
adc
cmp
in
xor
mov
int3
shr
pop
lahf
mov
outsl
out
std
dec
mov
pop
push
and
je
sti
cmp
in
outsb
pop
jl
test
mov
jl
inc
mov
sub
test
inc
lods
repz
aas
mov
ret
sub
push
data16
out
icebp
mov
fsubs
flds
leave
outsb
xchg
sbb
das
daa
sbbl
and
sahf
push
movsb
cmp
iret
mov
mov
xor
mov
inc
pop
decb
inc
aas
mov
mov
jo
push
insb
adc
notb
mov
imul
faddl
ss
addl
ljmp
and
lcall
rep
inc
clc
sub
push
adc
jg
mov
jp
ret
cmpsl
mov
pop
sub
add
data16
jbe
rclb
fmulp
ljmp
test
dec
iret
sub
out
gs
sub
hlt
in
enter
iret
out
mov
xchg
jbe
rorl
adc
fwait
orl
mov
lahf
and
mov
and
push
out
fsubrs
cmp
hlt
push
fcom
push
lds
dec
rol
ss
pop
cld
in
inc
inc
in
fiaddl
inc
lret
sub
fiaddl
lret
jg
out
inc
out
mov
fistpl
mov
cmp
lods
lahf
loope
inc
test
push
popf
faddp
add
push
xchg
xor
clc
daa
xchg
roll
pop
or
mov
outsb
stc
lock
in
arpl
dec
xchg
adcl
dec
and
adc
stc
out
sahf
test
jecxz
loopne
dec
mov
hlt
pop
jp
jb
add
inc
mov
outsl
xor
hlt
dec
addr16
js
push
pushf
push
mov
sbb
mov
cld
mov
or
jne
sbb
fsubs
and
xor
add
pop
dec
mull
jnp
mov
jae
vpsubusb
into
adc
cmp
cmpsb
into
inc
mov
and
mov
loopne
jg
leave
and
into
dec
ret
inc
mov
cmp
setno
sarb
inc
cmp
movsl
jmp
jo
inc
int
call
pop
outsb
subl
mov
mov
fdivs
push
jge
xor
fdivrs
js
add
jbe
fdivs
frstor
icebp
call
mov
push
sti
xchg
imul
test
ret
mov
jge
lds
push
cmpb
and
icebp
pop
xor
mov
xlat
stos
lret
dec
pop
loop
lock
sbb
out
inc
std
imul
jno
dec
inc
jecxz
pop
jmp
mov
push
imul
push
ljmp
cld
jae
roll
pop
pop
xchg
decl
mov
popl
pop
xchg
loope
leave
divb
or
imul
popa
inc
push
jae
xchg
mov
jg
or
sti
pop
cmp
out
adc
mov
ljmp
push
ret
adc
add
push
inc
mov
adc
test
std
jecxz
scas
sub
xorl
ja
sarl
stos
fisubrl
outsl
and
leave
or
mov
nop
mov
push
mov
sahf
rcr
movsl
enter
cmp
pop
ss
mov
sbb
sub
and
mov
jle
mov
push
xchg
xchg
sub
pop
pop
pop
imul
push
dec
lds
pop
call
lahf
mov
ret
call
fcompl
fisttps
push
enter
xor
xchg
test
mov
mov
and
cmpsb
sarb
sub
mov
pusha
mov
mov
iret
cmp
test
in
jae
fcoml
cmp
sub
pop
dec
or
or
xchg
pop
mov
adc
fisttpl
es
cmp
cmpl
jno
sub
and
stos
imul
mov
pop
lds
das
sti
mov
sbb
addr16
ds
cld
dec
ficoms
shrl
mov
loop
push
and
add
fcoms
add
dec
inc
jno
test
push
push
inc
pop
pop
and
rcll
xchg
jno
xchg
mov
call
call
xchg
fisubrs
xor
insb
or
add
xchg
inc
loop
clc
aas
adc
test
sub
das
jns
ret
or
push
pushf
push
insl
notl
cmp
rcll
imul
jne
jnp,pn
xchg
lret
and
push
fmuls
push
insb
imul
or
jg
nop
mov
int
shll
sub
mov
cmp
repnz
xor
outsl
jl
mov
aaa
sahf
test
xchg
mov
mov
mov
mov
add
jbe
stos
mov
inc
inc
sbb
mov
sbb
dec
inc
dec
data16
jb
std
daa
pop
imul
cmp
lds
gs
int
das
sub
push
inc
rcrl
sti
dec
mov
arpl
stos
mov
sbb
jae
outsl
xchg
inc
imul
adc
sbb
or
mov
jle
call
jno
push
fcmovnb
or
mov
cmp
cmc
shl
push
hlt
dec
sub
jb
mov
xchg
enter
pop
pop
lods
jae
pop
or
adc
add
lods
xor
roll
cwtl
mov
dec
push
or
mov
xor
sub
cltd
movsl
cld
push
and
xchg
adcl
addr16
repz
mov
lock
fsubl
push
cmpsb
xorb
movsb
jl
gs
stos
rorl
sub
je
mulb
fwait
loop
adc
push
and
or
out
add
mov
jno
mov
in
push
sub
jo,pn
stos
cld
adc
inc
jnp
aam
scas
cli
cmpb
fsubrp
movsb
and
movsl
inc
mull
lahf
or
pop
sbb
ret
add
mov
aam
into
scas
jge
jns
adc
and
mov
nop
jno
or
mov
fwait
mov
insb
cmp
imul
ret
stos
pop
mov
sub
mov
sbb
iret
add
mov
pushf
pusha
and
xor
imul
icebp
mov
xchg
repz
insl
sub
xor
imul
int
adc
add
adc
fbstp
add
frstor
scas
fidivl
push
jo
adc
dec
inc
fsubrs
into
cmpsl
adc
cltd
push
sbb
ljmp
mov
popf
jle
add
sbb
fdivrs
sbb
ret
xchg
xlat
push
push
out
daa
jl
xchg
cmp
shl
lcall
insl
movsl
adc
sbb
fstps
loope
jnp
cmp
push
dec
cmp
out
xorb
mov
xor
test
mov
mov
sahf
cmp
insb
cmp
data16
mov
mov
ja
cmp
pop
stos
push
cld
imul
inc
cmove
fisubrl
sub
mov
aad
cmp
adc
in
xor
stos
stos
push
popa
std
cmp
adc
push
dec
or
test
pop
mov
mov
inc
je
push
std
arpl
push
movl
cs
ds
add
or
push
frstor
push
test
or
ret
cwtl
xchg
push
stos
loope
pop
mov
mov
mov
std
jno
add
into
cld
mov
push
fldenv
jbe
jge
in
cmp
in
or
mov
mov
dec
inc
xor
cli
stos
cmp
push
xlat
push
mulb
dec
sub
jge
xchg
jne
xchg
jb
mov
scas
sarb
mov
sub
bound
test
pop
inc
mov
es
cmpsb
imul
sbb
mov
mov
cmp
pop
repz
repz
fdivrl
mov
jo
bound
pop
aaa
pop
mov
dec
xchg
inc
clc
xor
mov
roll
xchg
push
rolb
add
mov
sub
lods
add
ja
cs
xchg
mov
mov
je
cmp
es
jge
ret
aaa
stos
or
cli
pop
cwtl
mov
fsubrl
pop
xchg
cmc
aaa
lods
je
in
nop
ds
mov
mov
daa
adc
mov
cmp
aaa
je
fisubrl
mov
gs
mov
mov
sub
scas
adc
sub
in
js
in
mov
ds
std
outsl
out
insl
push
pop
push
and
stos
push
and
in
or
adc
push
xor
lods
adc
sbb
aam
xor
pusha
ljmp
xor
mov
adc
repz
xor
cs
pop
data16
jecxz
add
movsl
mov
cmp
xchg
cmp
dec
jg
out
mov
cmpsl
cmp
dec
insl
sbbb
cltd
stos
testb
push
lcall
fldenv
cwtl
adc
adc
or
cmpxchg
insb
sahf
stos
dec
icebp
push
mov
and
mov
mov
push
cmp
loope
xchg
sbb
dec
ljmp
adc
lods
imul
mov
in
pop
lods
sti
jge
lahf
das
jo
cmpsb
sub
and
sti
mov
add
sahf
mov
dec
dec
dec
fcmovb
call
push
push
icebp
stos
movsb
jge
mov
fs
imul
in
xchg
pop
fildll
mov
das
lret
xor
mov
out
and
pop
call
xlat
cltd
orb
hlt
nop
shll
fimuls
mov
js
sub
mov
in
and
scas
int
gs
sbb
int3
idivl
icebp
leave
lock
sbb
fbld
movsb
mov
mov
subl
in
rcrb
int3
xor
dec
and
lock
rclb
add
lods
mov
mov
sbbl
je
popa
shrl
dec
incl
in
shrl
hlt
arpl
xchg
pushf
push
rolb
xor
push
jp
push
jo
or
and
dec
cmp
ds
movsb
add
js
mov
sub
jge
mov
jmp
push
aam
add
in
cmp
xchg
push
sbb
xchg
push
mov
adc
sbb
ljmp
pop
sbb
in
push
jl
sub
push
call
pusha
inc
fs
adc
inc
enter
ficompl
mov
lods
in
pop
jns
popa
xchg
call
ss
jno
shll
or
xor
loopne
mov
hlt
mov
push
or
dec
pop
cs
or
out
push
cmp
pushf
dec
dec
std
scas
mov
xchg
cmp
ds
ja
bound
aad
mov
push
insl
xchg
jl
imul
mov
mov
mov
cmp
sbb
decl
int
lds
arpl
popa
dec
sahf
repnz
adc
int
test
and
dec
xor
pop
xchg
or
sub
mov
fdivr
subb
pop
scas
divb
popf
std
arpl
insb
add
jle
jl
pop
jno
inc
clc
test
std
mov
ret
ret
mov
mov
push
sbb
in
mov
jle
ja
je
jg
add
mov
jmp
sbb
xchg
les
sub
in
fdivr
add
mov
cmovo
shrl
sub
aaa
lcall
outsl
into
dec
inc
add
movsb
push
mov
xchg
shlb
mov
pop
adc
mov
mov
mov
fimull
andb
mov
push
xchg
pop
aaa
mov
jns
inc
icebp
or
adc
mov
pop
cmpsb
mov
mov
enter
jae
aam
and
hlt
stos
and
and
pop
in
imul
ja
aam
mov
add
iret
xor
mov
call
scas
jg
lds
sbb
cmc
pop
mov
cmp
jbe
pop
mov
cmp
cmp
xor
movl
lods
add
cmp
mov
cltd
dec
mov
xchg
xchg
xchg
mov
add
push
cmp
aas
dec
dec
jo
bound
clc
outsl
or
into
rcr
sub
into
or
hlt
mov
inc
mov
or
fwait
cmp
cmpsb
in
cmp
pop
cltd
dec
mov
inc
mov
clc
fcomip
in
mov
add
sbb
loopne
add
shrl
imul
imull
lds
mov
inc
shrb
dec
lock
and
mov
adc
test
imul
mov
mov
jb
popf
sub
les
adc
test
in
mov
adc
push
sub
out
lods
icebp
or
je
mov
push
insb
jp
loop
and
dec
hlt
push
cld
loope
sub
js
in
lret
xchg
nop
rorl
pop
testb
mov
test
and
push
iret
mov
sbb
mov
mov
icebp
sub
lret
adc
xor
mov
ret
add
xor
outsl
out
xor
dec
xchg
mov
xchg
movsb
jb
mov
push
lods
push
mov
and
out
jbe
push
test
aad
jbe
sbbb
adc
inc
inc
leave
hlt
xlat
and
shl
cli
out
mov
cmp
gs
mov
mov
les
out
cmp
pop
pop
imul
shll
push
cmpsl
js
out
sub
arpl
dec
mov
and
or
mov
loop
dec
bound
mov
les
xor
adc
add
icebp
or
bound
push
fistl
pop
pop
xchg
int3
fs
sub
cld
pop
push
shr
inc
in
out
dec
cmpsl
outsl
je
add
pusha
xchg
jmp
aam
adc
push
rcl
xor
push
mov
rorb
jl
xor
mov
lds
in
ret
leave
shlb
adc
sbb
xchg
xchg
test
mov
js
fldcw
sbbb
cmpsl
adc
fmull
xchg
movsb
mov
jp
pop
sarl
mov
int
push
movb
push
add
cmpsb
sub
push
data16
mov
loopne
mov
shll
and
xor
scas
enter
pop
aaa
sub
arpl
mov
mov
add
jb
or
dec
add
sub
adc
outsl
inc
xor
rcrl
in
xlat
out
pop
test
mov
sub
sub
or
repnz
adc
out
je
mov
jns
jge
and
push
push
and
pop
iret
mov
push
outsb
nop
mov
mov
dec
push
icebp
xlat
adc
ds
out
sub
sub
cmp
int
and
pop
mov
sti
outsl
jb
mov
cmpsb
and
mov
adc
ret
adcb
call
rclb
shr
mov
xor
pop
dec
add
loope
test
jp
movsl
popf
aaa
inc
or
outsl
rcrb
cmp
mov
cmp
adc
data16
xchg
loopne
lds
dec
xchg
cmc
push
popf
add
nop
lods
repz
lock
cli
cmp
add
push
jp
sub
push
lret
mov
sarl
mov
in
push
in
jbe
jno
pop
sub
xor
xchg
test
jge
repz
cmpb
jmp
arpl
adc
lds
fisttpll
daa
jmp
in
test
sub
fs
dec
xchg
lret
jb
mov
sub
mov
lret
mov
lea
ljmp
jmp
xor
push
fimuls
xchg
mov
pop
and
lcall
je
xchg
sbb
sub
lods
inc
fistpl
in
hlt
mov
cmp
imull
mull
test
fisubrs
mov
and
ljmp
pushf
pop
fldcw
push
ret
pop
lods
cmc
mov
je
stos
repz
add
test
xchg
mov
pop
and
loop
data16
daa
icebp
mov
jb
in
ja
out
push
xor
shrl
mov
js
push
mov
mov
cld
popf
test
outsb
daa
shrb
or
rorl
es
inc
xchg
icebp
xchg
adc
lods
bound
out
inc
sbb
mov
loop
cmc
xchg
push
leave
mov
fisttps
dec
lds
scas
orl
inc
lcall
mov
out
push
lods
lcall
and
aad
and
popf
xor
cmpsl
push
bound
jecxz
test
test
not
ror
mov
cmc
psubq
xchg
push
xchg
es
popf
int
nop
xchg
and
or
outsl
sbb
sbb
jno,pt
mov
push
push
mov
pushf
pusha
and
jne
push
icebp
push
mov
adc
cmpsl
sbb
inc
fsts
out
sbb
divl
fadds
or
cmp
loop
dec
jne
cmpsb
pop
jg
fdivl
mov
sub
lods
imul
shlb
mov
xchg
add
inc
pop
sbb
xlat
fisttps
pop
or
rolb
lods
adc
pop
mov
arpl
or
sbb
movsb
fbstp
ja
je
cltd
es
jnp
jnp
adc
clc
ds
and
lods
ja
daa
mov
stos
pop
and
fadd
push
nop
xchg
fwait
xlat
out
hlt
mov
sub
pop
arpl
mov
outsl
adc
pusha
cmpsl
cmp
push
adc
out
clc
add
daa
add
mov
rorl
lahf
call
repnz
loope
hlt
orl
push
call
pop
jmp
jp
shl
jae
pop
scas
popa
aaa
add
adc
xor
mov
test
jecxz
push
cmp
ret
jne
pop
xor
xorl
dec
icebp
mov
sahf
push
adc
fdivr
movsl
jns
lahf
adc
sbb
sub
daa
xchg
jl
mov
jne
out
sbb
xor
out
aam
lret
stc
loop
in
fnstsw
inc
fstpt
or
jne
jecxz
cmp
ss
jl
or
mov
mov
sub
mov
push
dec
jns
insl
mov
lcall
incl
xor
fprem1
call
or
gs
and
bound
or
arpl
lock
pop
adc
jl
push
xorb
mov
xchg
xchg
filds
cmpsb
add
or
mov
rcll
mov
pop
fidivrl
in
std
bound
ljmp
adc
inc
sbb
sub
shl
popf
cmp
inc
mov
add
mov
jae
lds
das
xchg
cld
xchg
fwait
xor
mov
js
fsubrs
adc
out
cmp
mov
and
test
xor
mov
mov
and
cmp
stos
add
fsubrl
aas
lahf
ret
dec
rcrl
addr16
enter
lods
push
mov
or
dec
inc
cmpsl
adc
or
cltd
lahf
jmp
pushf
repnz
sub
cmc
out
sbb
dec
add
and
ret
shll
adc
mov
push
imul
mov
fsubs
loopne
test
jle
lahf
les
adc
add
jge
sub
ret
js
jbe
mov
fisttpl
ret
mov
and
push
mov
mov
jno
inc
pop
lea
and
mov
nop
negl
add
in
adc
mov
mov
pop
idivb
gs
pushf
pop
inc
int
inc
imul
cmp
or
mov
gs
sbb
mov
sbb
mov
fstpt
dec
or
mov
pop
lret
hlt
and
les
mov
andl
pop
inc
push
sub
repz
ss
push
aad
lea
pop
int3
je
inc
adc
xor
sub
cmp
stos
das
lds
jmp
push
xchg
mov
imulb
int3
inc
lock
movsl
nop
pop
leave
and
arpl
shl
mov
sub
mov
shll
mov
sub
push
insb
stos
es
mov
lret
std
ljmp
pop
or
adc
cmp
sarb
mov
mov
in
cwtl
mov
fs
sub
mov
pop
jo
cmp
jbe
jecxz
xchg
lea
sub
xor
leave
sar
cmp
fimuls
loope
scas
cli
subl
fs
out
jns
js
test
lcall
je
cltd
dec
mov
icebp
jbe
mov
pop
xchg
shll
sbb
mov
out
mov
xor
iret
push
xchg
push
divb
pop
insl
and
inc
pop
sahf
mov
mov
or
aaa
cmp
popa
imul
arpl
lods
cmpl
mov
push
es
mov
lds
jb
cli
movb
fildl
mov
in
aad
inc
stc
pop
loope
sub
ret
iret
lret
out
decb
dec
inc
into
xor
test
xlat
adc
pop
push
lods
push
lds
loop
xchg
pop
aad
xchg
test
bound
sbbl
mov
and
outsb
push
pop
loopne
inc
xchg
pushf
bound
push
jl
adc
ret
mov
imul
mov
cmp
adc
shll
bound
rol
data16
loopne
lods
sub
dec
ret
imul
jo
shrl
jbe
pop
xor
aaa
in
inc
stos
push
fwait
jns
jmp
incb
cmp
jmp
scas
aam
loopne
hlt
mov
mov
mov
inc
jl
adc
lret
loope
adcb
aad
add
inc
sub
or
idiv
scas
mov
sbb
scas
mov
mov
mov
into
add
lahf
cs
in
cs
scas
xlat
je
and
loope
dec
cmp
movsl
xor
iret
cld
test
paddb
add
jle
xor
fdiv
jnp
sbb
mov
mov
xor
gs
mov
loop
popa
pop
lcall
dec
push
leave
cli
ffree
inc
subb
fs
mov
cs
loop
addr16
mov
adc
js
test
inc
jno,pt
ret
cld
outsl
int3
sub
xchg
and
scas
andl
dec
fnstenv
into
jp
or
icebp
cmpsb
lret
pop
push
push
test
repnz
jg
popf
xor
dec
sarb
xchg
in
adc
cmp
mov
sub
pop
in
std
sub
pusha
dec
cmp
pop
cmp
mov
movl
sub
mov
std
inc
mov
mov
mov
xor
pop
data16
sti
push
aad
into
xor
xor
push
bound
push
xor
or
pop
fnsave
iret
push
inc
push
scas
arpl
pop
fimull
les
sub
ficompl
popa
icebp
mov
mov
sub
mov
cli
sti
jb
mov
dec
dec
das
frndint
dec
inc
lret
idiv
dec
in
lods
mov
cmp
cltd
ja
mov
clc
xchg
ss
enter
or
dec
xchg
push
add
daa
xchg
ss
lret
stos
or
xor
push
inc
mov
jb
mov
out
aad
add
xchg
test
push
aam
xorb
pop
outsl
mov
mov
pusha
clc
ds
push
lock
push
mov
in
gs
and
pop
dec
sti
mov
lods
push
cmp
inc
mov
fiaddl
fisubrs
xlat
jge
xor
xchg
scas
aad
loopne
xchg
sbb
mulps
inc
shll
fwait
cmp
out
mov
movsl
outsl
push
sub
jbe
int
testb
push
loope
sub
add
and
pop
mov
add
jl
jns
pop
hlt
xor
and
gs
cli
int
inc
adc
mov
xchg
inc
push
push
push
dec
jg
dec
push
ds
fdivrs
repnz
jmp
bswap
cmpsb
into
mov
out
pop
push
mov
or
gs
xchg
mov
orb
lea
jge
inc
leave
xor
adc
mov
dec
sti
sub
cmp
or
jbe
adcl
push
mov
enter
push
and
lcall
sub
mov
repz
rorb
jmp
cmp
xor
xlat
sub
out
insl
mov
push
jae
sbb
dec
xchg
gs
jecxz
je
clc
sbb
jge
nop
arpl
pop
or
stc
push
jg
or
in
xor
aaa
jne
mov
inc
dec
xchg
mov
xchg
leave
imul
inc
add
je,pn
repnz
cs
dec
ja
les
mov
movsb
loop
inc
addr16
xor
cmpl
inc
stc
hlt
sti
loope
pop
cmpsb
jns
push
jne
xchg
out
scas
xor
jg
jecxz
push
mov
push
insl
sbb
add
inc
clc
push
sub
rorl
in
aad
enter
mov
xor
xchg
pop
xchg
nop
stos
dec
xor
lret
dec
cmpsb
in
xlat
xor
jl
inc
mov
movnti
cmc
jl
pop
cmc
addr16
fstps
hlt
test
aad
dec
mov
pushl
push
push
scas
addr16
pop
adc
orb
push
lcall
sbb
push
push
pop
xchg
lods
push
inc
aas
subb
ja
jo
jmp
loope
inc
xchg
or
test
mov
sarb
popf
push
rorl
cwtl
int
sbb
inc
jle
out
icebp
dec
popa
xor
notl
divl
mov
push
data16
jns
adc
shlb
stos
ljmp
std
jno
pop
or
inc
jl
inc
imul
cmp
cmp
mov
mov
mov
roll
xlat
lods
fwait
mov
cmc
loope
or
inc
imul
and
cltd
xchg
jmp
fistl
xor
stc
shl
lahf
adc
and
sub
add
enter
dec
cwtl
push
mov
mov
mov
out
scas
dec
add
aad
pop
in
and
xchg
cmp
fwait
aad
or
push
dec
test
enter
fnstsw
out
jb
xchg
pop
insb
lcall
out
mov
negb
cwtl
movl
arpl
out
mov
orb
mov
xor
mov
sbb
pop
je
xchg
fwait
imul
loop
icebp
es
pop
sub
mov
mov
pop
dec
pop
or
lret
loope
dec
lods
sub
jge
fisubrl
out
das
xchg
dec
pop
push
lret
push
test
or
ret
idivl
fwait
sbb
fisttpl
insl
shrb
xor
aaa
push
jo
fildl
imul
notl
dec
jnp
pop
xchg
cmp
and
adc
dec
xchg
js
cli
out
dec
lods
movl
jnp
xor
repnz
insb
fstpt
xchg
repz
cltd
lods
and
add
orb
xchg
push
jmp
daa
nop
mov
push
add
pop
add
mov
inc
aaa
icebp
stos
sbb
ljmp
xor
imul
out
nop
adc
jbe
aaa
scas
sub
xchg
aas
ret
sbb
jg
movl
inc
test
pop
dec
jns
jb
dec
test
insl
stos
pop
sub
add
ss
push
inc
je
xchg
punpckhdq
ds
adc
sub
std
sub
jge
xchg
mov
stc
xchg
fidivrs
sti
xchg
fdivr
aaa
pop
call
imul
lods
jle
push
inc
lcall
sbb
subb
sbb
pusha
pop
pop
cmp
sbb
mov
xor
lret
shlb
fcmovu
jmp
imul
in
sub
add
jne
push
das
mov
xor
fdivs
in
lcall
xor
jne
push
test
mov
popa
mov
je
je
push
lods
ret
outsb
jmp
jle
repz
mov
fwait
mov
lods
cmp
fwait
dec
lock
push
nop
out
inc
jmp
in
mov
sbb
aaa
xchg
adc
dec
push
lds
sbb
push
sub
clc
mov
dec
int3
insb
adc
js
cmc
add
mov
xchg
cmpxchg
cs
mov
filds
nop
ljmp
mov
fsubrl
fstpt
inc
popf
push
jns
mov
in
ret
les
dec
out
inc
scas
sub
xor
mov
mov
cmp
lock
cltd
xchg
shlb
cli
sub
mov
out
aaa
fcomps
add
divb
movsl
xchg
aad
cmp
aad
pop
jmp
mov
xchg
jle
out
in
xchg
xchg
mov
es
pop
repnz
daa
mov
mov
addb
test
in
mov
xlat
js
into
ljmp
sahf
call
fcmove
jg
push
cwtl
push
xorb
sub
fwait
xchg
mov
sti
push
stc
rol
or
stos
jge
call
lahf
xor
push
push
pop
inc
mov
mov
dec
adc
daa
cmp
inc
jno
shll
mov
xchg
mov
jmp
sub
hlt
add
cmp
sub
sub
push
xchg
int
ror
push
mov
inc
aam
sub
nop
mov
add
shl
xor
mov
loope
push
movb
cltd
push
and
mov
rol
add
arpl
cmp
aaa
lock
lods
pop
mov
ret
and
movsl
shlb
dec
xchg
sub
mov
loop
cmpl
jmp
jmp
dec
mov
cs
pop
jbe
jne
adc
mov
ja
sub
adc
std
popf
pop
scas
in
lds
divb
dec
fs
sbb
mov
jmp
cmp
push
xchg
cmpsl
dec
gs
cmp
inc
mov
loope
movntq
loope
or
and
pop
dec
cmpsl
daa
iret
inc
out
xchg
sub
js
outsb
sub
and
push
scas
pop
ret
mov
cltd
xchg
ret
roll
pop
std
lds
es
cmp
daa
into
push
push
movsl
enter
sbb
xchg
ds
shrl
xor
dec
xchg
xchg
mov
add
mov
sbb
inc
stc
mov
add
in
in
fbld
scas
cs
jecxz
cmpsl
jb
je
iret
cwtl
pop
pop
and
pop
mov
cwtl
add
bswap
pop
imul
push
test
mov
jb
call
push
xchg
xorl
adc
xchg
imul
mov
or
and
xchg
push
sbbb
jmp
xchg
inc
les
leave
test
dec
hlt
jb
ljmp
inc
jmp
out
imul
ret
ficoms
testl
pand
leave
or
push
and
push
push
call
mov
mov
frstor
cwtl
stos
lea
mov
imul
push
jo
daa
fwait
cmp
add
jecxz
out
or
add
mov
fcoml
test
sbb
stos
idiv
in
out
leave
adc
adc
std
mov
adc
cmp
movsl
add
add
stc
add
test
and
addr16
cmp
icebp
xlat
or
cmp
cld
cs
cwtl
movsl
jns
pop
cmpsl
push
out
and
dec
fs
or
andb
or
shll
and
lock
outsb
icebp
mov
mov
xchg
push
pop
mov
fbld
popa
lea
lcall
xor
cmp
jb
sahf
in
dec
xorb
in
mov
nop
cmp
in
jp
and
jb
andl
int3
int3
push
jno
test
jp
jle
setg
icebp
mov
mov
stos
fwait
dec
cmp
pop
fsubl
fucomi
mov
dec
ja
ss
push
imul
jle
jecxz
es
mov
or
push
ja
lahf
sub
into
stos
out
test
in
arpl
jp
inc
xchg
lock
mov
aaa
mov
push
pop
clc
ja
in
into
mov
iret
mov
cmp
mov
xorl
push
adc
inc
mov
mov
jbe
mov
aad
dec
pop
or
subb
nop
repz
mov
aam
out
add
jge
stc
mov
or
pop
rcl
sbb
mov
setns
subb
shl
add
fisubl
cmpsl
loop
xor
add
aaa
mov
enter
add
movsl
adc
fidivs
aam
sbb
repnz
gs
inc
and
cmp
loopne
lods
push
pop
add
jge
xor
xchg
fmul
adc
adc
mov
sbb
or
sahf
inc
jae
sub
pushf
int3
mov
push
mov
mov
dec
dec
or
cmp
fstl
sbb
push
jle
stos
mov
pop
inc
sbb
xor
jbe
and
fstps
sarb
ret
adc
je
shld
cmc
xchg
jno
jbe
cwtl
icebp
xor
and
adc
push
stos
out
sub
rcll
inc
mov
dec
cmp
icebp
jns
aad
inc
push
shl
jne
repnz
xchg
mov
cs
aam
xchg
sbb
out
out
out
and
pop
stc
xlat
jno
out
js
jge
std
push
cwtl
ja
rorl
pop
daa
cld
test
je
mov
outsl
sbb
pop
sbb
xor
inc
dec
repz
rcrb
cwtl
pushf
pop
mov
rcrb
repnz
icebp
repnz
sub
inc
sbb
lret
pushf
aad
ret
in
iret
xor
int3
scas
add
sub
addl
sahf
ljmp
inc
add
out
adc
add
sub
in
cmpb
repz
into
test
lretw
ja
lahf
sub
adc
sbb
mov
shrl
jb
jnp
or
xchg
leave
mov
mov
jecxz
test
push
sti
das
fidivrl
jmp
out
add
mov
mov
icebp
and
push
jmp
adc
lcall
iret
mov
jg
push
mov
mov
nop
je
pusha
mov
divb
adc
insb
out
sub
jns
jbe
stos
pop
shrl
cs
nop
cmpb
add
xor
fidivs
ss
shll
or
outsl
inc
xor
gs
or
aam
push
lds
mov
xchg
mov
adc
cld
call
xchg
mov
movsb
or
mov
pop
insl
mov
insb
loope
inc
outsb
xchg
out
mov
inc
shlb
push
aas
sub
mov
es
adcl
in
hlt
mov
sahf
pusha
mov
push
jb
fbstp
loope
and
aaa
xor
push
pop
ds
and
movsl
test
in
ret
lcall
xchg
enter
inc
movsl
push
mov
shrl
pop
stos
call
cmp
fnstenv
cmp
jo
xchg
pop
sti
fwait
mov
lods
out
xor
jne
pop
sahf
rclb
int
add
xchg
sbb
push
add
insb
pop
push
shll
or
fstl
push
into
std
sub
adc
addl
mov
xchg
loopne
pop
and
xor
mov
sub
xchg
pop
bound
pop
rep
push
popa
ds
cli
mov
test
jno
sub
inc
jns
call
lds
out
add
out
outsl
lahf
mov
jle
in
sbb
push
push
fidivl
lods
mov
nop
or
cwtl
mov
cmp
mov
inc
inc
js
arpl
add
lock
loope
mov
cmpb
ss
push
pusha
cmp
mov
enter
aad
push
enter
cmp
pop
or
jecxz
repnz
mov
and
insb
adc
in
xchg
loop
rol
or
lds
add
je
lcall
out
jp
cmc
inc
and
cmp
leave
jmp
lahf
das
sar
into
mov
imul
addr16
fwait
push
xchg
je
movsl
icebp
loopne
sub
jo
or
mov
mov
inc
or
insb
in
lea
dec
test
and
das
lcall
push
xchg
cmpb
add
mov
jns
test
xor
arpl
cwtl
paddusw
xchg
shll
jg
pop
jb
dec
or
add
sbb
jne
sub
jmp
movsb
xor
fbld
test
fstpl
dec
jne
int
adc
adc
decl
sbb
sbb
pop
les
shll
shll
inc
pop
popa
loop
xchg
loope
cmp
push
push
addl
in
pop
sbb
push
pop
push
mov
orl
in
sbb
mov
movsl
call
add
or
cwtl
movsb
clc
xorl
mov
jle
rcrl
mov
jmp
xlat
add
mov
pop
pop
inc
cltd
test
in
shl
fsubrs
xchg
aad
xchg
push
jae
sti
loope
jp
bound
ficomps
push
inc
jns
aaa
inc
outsl
mov
mov
or
loopne
dec
roll
pop
cmp
scas
inc
sub
lret
out
push
dec
hlt
ljmp
iret
add
inc
mov
and
add
sub
pop
sub
cmpsl
sbb
dec
or
outsb
ret
das
xor
daa
movsb
jecxz
adc
enter
pop
pop
inc
loope
cmpsl
push
adc
fsts
xchg
xchg
mov
xchg
pop
out
or
rclb
jo
add
mov
jnp
hlt
jo
xchg
pop
dec
jae
pop
add
jmp
cmpsl
mov
mov
xchg
lods
imul
cmp
std
test
push
adc
and
lcall
fmuls
pop
jg
pop
int3
ja
sar
and
jle
mov
fistpll
pop
dec
insb
sub
xor
push
adc
jl
repnz
pop
fs
lret
ja
in
into
push
mov
xchg
xchg
ficoml
je
subb
mov
and
lods
push
inc
mov
std
dec
js
imul
lock
jmp
push
mov
call
push
addr16
mov
loop
mov
loope
dec
call
mov
mov
pop
inc
cmp
push
into
hlt
push
jb
scas
inc
dec
out
add
mov
imul
pop
xchg
cmp
mov
xchg
pop
movsl
in
and
hlt
out
pop
lahf
jecxz
ljmp
jle
jne
aas
mov
xor
or
nop
ret
in
sub
mov
xlat
push
cs
out
lock
mov
mov
shrb
cmp
and
xchg
addr16
xor
cmpsl
jne
cmp
sarb
outsb
mov
mov
pop
jmp
dec
or
mov
jle
test
scas
scas
jl
test
movsb
jbe
cwtl
fistpll
push
xchg
pop
repnz
jecxz
sub
in
out
mov
lods
inc
js
add
faddl
dec
xor
data16
xchg
test
dec
and
dec
push
or
sub
in
in
aam
jecxz
xor
sub
adc
push
nop
xchg
ljmp
sub
add
inc
mov
shl
sub
int
and
std
inc
jmp
cmp
lcall
arpl
cmp
idiv
inc
and
sub
jecxz
mov
xor
inc
push
cmp
divb
cld
cmp
loopne
cmp
ds
sub
or
in
pop
jmp
jp
pop
das
dec
sbb
adc
jl
add
ret
or
cmpsb
inc
xchg
fstl
movsb
xor
adc
das
cmpsl
stos
jmp
lds
or
enter
push
jge
mov
xchg
pop
push
test
pop
stos
adc
inc
cmp
xchg
mov
or
decb
test
hlt
mov
xchg
xor
pop
fisubrl
ja
stos
adc
and
mov
or
jo
outsb
lret
xor
inc
scas
mov
mov
dec
ljmp
adc
in
cmp
roll
aas
enter
pop
xorl
mov
xor
jmp
pop
and
mov
int
jmp
cmp
out
xchg
xlat
std
test
pop
adc
shll
in
shrl
sub
sti
cmp
adc
xchg
push
mov
std
add
je
sar
jno
and
stos
insl
inc
mov
ucomiss
iret
aam
cltd
xchg
xchg
cld
inc
cmp
mov
and
sbb
cs
push
cmp
cmp
jae
push
in
mov
orb
ja
ljmp
xchg
mov
mov
pop
les
popf
xchg
xorl
xchg
xchg
mov
pusha
or
mov
cmp
jge
cmp
adc
scas
push
cltd
scas
mov
rol
cmp
and
mov
pop
cmp
mov
jg
inc
dec
addb
sti
nop
adc
cwtl
xchg
gs
and
ret
push
mov
jo
call
mov
cwtl
nop
dec
aad
clc
inc
sub
push
outsb
stos
push
repnz
fs
in
inc
push
das
roll
int3
fisubl
lock
lret
or
imul
sahf
hlt
in
inc
popf
jo
pop
cmpsb
inc
mov
jecxz
iret
and
and
xor
and
pop
mov
and
ficompl
inc
xchg
lds
cmp
xchg
cmp
push
movsb
shrb
call
cltd
jmp
sbb
sbb
pop
mov
xchg
movntq
pop
sbb
popf
aas
dec
les
fs
fisubrs
xchg
loope
jae
sbb
testb
mov
mov
xchg
jl
xor
push
push
jbe
decl
ficompl
out
test
cmp
mov
ret
popa
mov
scas
jg
mov
sarl
mov
cld
jle
pop
lods
sbb
fcoml
cmp
shll
xchg
mov
lods
xor
jle
or
and
iret
add
push
xchg
fdiv
lods
loope
shll
inc
popf
push
lods
sbb
push
cmp
dec
subl
pop
lret
jo
std
movsl
lcall
mov
mov
movsl
dec
cmp
rcrb
les
aad
sub
cmp
push
aas
xchg
push
and
cmp
pop
xor
adc
fs
xlat
mov
cmpsb
punpckhdq
out
js
and
rcl
sbb
movsl
add
adc
add
add
inc
loopne
popa
mov
out
xchg
sahf
mov
repz
mov
inc
pop
out
xchg
push
dec
mov
aad
enter
push
jnp
mov
pop
push
cmpl
shll
add
inc
lods
xor
add
les
int
xchg
pop
gs
lahf
jne
push
lods
out
sub
jnp
lea
push
xchg
mov
sbb
insl
addr16
ss
inc
and
xchg
popa
out
ss
test
jae
loope
pop
add
mov
sbb
subb
loope
aaa
pop
fst
and
call
mov
clc
xchg
cltd
sub
add
ljmp
dec
cwtl
lods
jbe
jno
lahf
jns
push
lret
loope
jo
test
pop
adc
fwait
inc
out
inc
push
data16
xchg
fimull
leave
popf
xchg
cmpsl
or
cmp
int3
push
xchg
push
xor
sbb
xchg
stos
pusha
adc
and
adc
and
inc
je
fmuls
mulb
lea
adc
xor
and
xor
shlb
xor
jg
lcall
push
scas
cmp
call
push
rcll
int3
xchg
test
or
push
xor
xchg
or
xchg
jle
add
sub
xchg
sbbl
mov
pusha
out
push
in
xchg
sub
cmp
stc
and
dec
xchg
shl
push
dec
pop
imul
mov
xchg
sbbb
fisttpll
mov
inc
cltd
sbb
adc
int
and
int3
pop
sbb
xchg
cs
rorl
mov
stos
dec
xchg
inc
cli
mov
jmp
sbb
testl
lcall
sub
pop
mov
xor
pusha
jmp
inc
shll
mov
ficoms
test
xchg
mov
mov
insb
daa
aad
mov
xor
sbb
push
stos
adc
or
lcall
xor
cmpsl
add
popf
jl
iret
mov
xchg
jb
ud1
sbb
in
movsb
mov
dec
dec
or
mov
jg
sti
into
mov
jo
test
data16
adc
xchg
xchg
add
mov
adc
imulb
jl
jne
popf
jg
fadds
pop
test
sahf
mov
xchg
repnz
cmp
in
mov
add
inc
sbb
xor
lock
lds
bound
cld
sub
and
sti
aad
js
add
ret
mov
in
loopne
cmpsb
and
aas
and
mov
jno
insb
lds
in
xchg
out
jo
das
dec
sbb
ret
and
mov
add
insl
lret
xor
adc
mov
push
adc
push
rcrl
rolb
dec
add
adcb
push
cmp
jecxz
cltd
push
jl
pushf
popf
mov
sub
cmpsb
js
adc
orl
and
lcall
sub
fidivrs
das
mov
jo
mov
and
mov
addr16
es
xor
push
std
in
out
aas
jns
pop
xchg
repz
adc
aam
xchg
loop
and
shlb
sbb
inc
fsubrs
imul
test
xchg
pop
sub
mov
aaa
insb
lock
ja
test
add
mov
jp
jge
and
std
pop
mov
ret
lods
insb
jne
stos
xchg
xchg
scas
mov
fistpl
sarl
out
scas
cs
inc
cmp
adc
cmp
push
adc
sub
mov
sbb
xchg
and
push
in
sbb
lods
cmp
pop
push
ja
adcb
jae
sbb
push
fimuls
fxch
lcall
add
in
lret
or
scas
cltd
cmpsl
ljmp
sbb
fstpl
out
cld
xchg
rcr
int
push
mov
xor
xchg
push
bnd
lods
push
fistpl
rcrb
jge
inc
fdivl
call
jbe
and
add
fistps
mov
loopne
add
clc
xchg
and
imul
ficoml
sti
lock
dec
test
gs
cmp
pushf
mov
jmp
dec
mov
jl
icebp
in
mov
std
mov
push
add
in
stos
sub
adc
or
ds
ljmp
inc
or
fnstenv
cmpsb
push
sbb
nop
or
xchg
hlt
and
and
mov
hlt
sub
in
mov
mov
scas
nop
jb
in
dec
in
movsb
test
in
pop
daa
repnz
test
jle
xchg
mov
sbb
cmpsl
test
ljmp
repnz
or
ret
mov
outsl
std
and
push
cs
and
pop
sarl
sbb
ret
xor
push
in
fildll
adc
outsl
fwait
push
imul
xor
jne
lods
insb
cmp
xor
push
pop
repnz
cmp
int
mov
int
lock
insl
fisubl
test
adc
aaa
lea
pop
mov
rclb
js
xchg
mov
mov
lock
decb
test
shr
ret
test
enter
mov
enter
mov
pop
push
mov
out
mov
cmp
xlat
lret
add
mov
add
cmp
sub
outsb
push
in
mov
mov
add
xchg
mov
iret
push
push
int
inc
mov
jl
test
lea
incl
test
pop
and
enter
scas
sbb
lcall
das
mov
hlt
test
in
and
pop
mov
aas
hlt
and
cmpsl
mov
ds
in
jo
iret
int
out
and
into
iret
mov
movsl
inc
xchg
sbb
mov
or
imul
add
stc
mov
test
negl
add
and
sbb
repz
ret
addl
mov
mov
shlb
pop
jg
sub
and
iret
jbe
ret
jl
mov
mov
out
aam
mov
stos
jns
cmp
push
push
sub
dec
jmp
inc
in
jl
mov
push
inc
xor
mov
jmp
mov
or
adc
gs
sbb
jp
jl
out
pop
pop
push
xor
enter
cld
pop
push
pop
pop
cmpsl
scas
pop
push
stos
jmp
push
jb
or
fstp
or
xchg
daa
cmc
xor
lss
aas
adc
mov
lret
aam
mov
cmp
rcrb
jbe
aam
pop
mov
mov
imul
pushf
daa
pop
hlt
cmp
js
sub
out
mov
fwait
sbb
test
shr
fisubl
pushf
dec
in
leave
outsb
or
xor
or
pop
mov
incb
repnz
xchg
aas
push
imul
sbb
sub
jae
jbe
mov
sub
iret
inc
jg
test
das
xorb
xchg
push
jmp
in
test
ror
cwtl
sub
data16
add
dec
xchg
mov
ret
xchg
mov
sbb
adc
in
jmp
into
gs
dec
out
pop
and
and
xchg
xor
std
xchg
das
sub
cmp
pextrw
cmp
mov
dec
stos
or
call
fst
fistps
add
imul
jbe
nop
subb
dec
add
js
xor
jle
jns
stc
outsl
xor
push
xor
repnz
arpl
out
mov
aad
pusha
jp
sarb
push
or
sbb
cwtl
pop
negb
daa
pop
movl
push
orb
leave
jae
inc
jns
repz
cld
xor
rcl
sub
das
xchg
popa
js
fcoms
fsub
int3
ja
outsl
pop
add
loope
mov
imul
push
push
out
xchg
out
mov
mov
testb
stos
addr16
xchg
cli
fisubs
outsb
sub
shlb
jle
in
data16
call
jp
mov
stc
lret
fcmovu
mov
cmp
sbb
inc
hlt
nop
leave
mov
pop
push
push
or
loopne
in
cmp
inc
jo
sub
cmpsb
test
push
lret
std
mov
cmp
xchg
pop
rcll
push
pop
xchg
push
pop
add
mov
or
xchg
adcb
stc
mov
push
mul
shlb
cmp
repz
sbb
xor
dec
or
inc
cld
into
movsl
xchg
cmp
mull
out
and
cmp
mov
dec
std
cwtl
imul
mov
mov
out
popa
xchg
push
std
dec
or
pushf
dec
rcrb
stos
xchg
outsb
or
test
and
sub
adc
jno
sub
ret
inc
and
fs
sbb
xchg
lahf
lods
inc
and
fildll
cmp
ds
mov
sbb
lods
xchg
jge
ds
mov
sbb
push
or
pop
dec
pusha
and
mov
insb
scas
xor
shlb
jg
cmp
mov
cmp
pop
adc
inc
aas
mov
mov
jg
adc
outsb
stos
add
lcall
fwait
bsf
jne
inc
cwtl
in
inc
add
pop
push
data16
or
fisubrl
scas
nop
and
fs
cmp
ret
mov
jnp
push
mov
jg
dec
dec
dec
call
imul
fs
mov
in
scas
int3
stos
stc
popf
add
lret
xlat
aad
je
xor
dec
jno
sbb
icebp
xorb
add
fildll
jno
iret
adc
push
jnp
push
int
or
pop
andl
fstl
xlat
mov
inc
xor
rcll
mov
mov
fsubrl
mov
mov
sub
imul
pop
sub
add
nop
hlt
addb
mov
push
pop
xchg
adc
jno
sbb
mov
mov
shlb
cmc
les
rolb
cmp
scas
xchg
push
lock
mov
cmp
mov
pop
jmp
or
fadds
mov
cmpsb
and
aad
call
fisttps
push
jge
lea
cwtl
mov
jge
pop
xchg
fists
insb
test
push
sub
dec
inc
scas
adc
push
mov
jnp
jle
dec
int
or
inc
xchg
pop
pop
add
mov
rcrb
xor
push
pop
jg
scas
popl
xchg
incb
jo
fsubrs
sbb
cmp
rcrl
daa
fucomp
or
push
fwait
xchg
sub
pop
adc
lock
push
pop
shl
imul
mov
sbb
sbb
dec
lret
fisubrs
pop
and
push
mov
cmp
in
ja
sarb
push
enter
sti
aaa
jmp
push
dec
and
imul
repz
adc
mov
cwtl
mov
repz
aaa
mov
comiss
push
arpl
add
flds
loope
sbb
out
mov
shlb
dec
gs
push
rclb
sub
arpl
sbb
jmp
adc
cmp
adc
fdivp
outsl
lock
iret
cmpsb
bound
ds
push
movsb
addl
pop
mov
int
inc
push
gs
pushf
dec
cmpsb
pop
aas
cld
idiv
push
movsl
mov
sub
or
pop
or
jp
mov
addr16
dec
lods
lret
jno
aas
or
mov
gs
sub
or
std
shl
nop
inc
and
ret
mov
sub
repnz
in
inc
decb
jae
cmp
mov
nop
mov
and
lea
cmc
xlat
xchg
inc
ret
adc
push
or
js
sti
or
xor
loopne
and
add
cmpsb
mov
leave
xor
add
les
into
and
sbb
mov
aas
pop
xchg
adcl
push
and
mov
sub
mov
fimull
jecxz
movsb
pop
lcall
mov
test
and
push
cltd
ss
jo
xor
icebp
out
pop
xor
insl
push
pop
in
test
aam
add
lock
push
cmp
jecxz
sub
cli
insb
and
loope
cli
test
int3
leave
addb
jne
mov
cltd
bswap
mov
xchg
xchg
or
xchg
jp
sub
mov
ljmp
inc
fcoml
mov
sarb
mov
adc
jne
cmp
fisubl
imul
rorl
iret
aam
out
jp
dec
and
jmp
bound
lods
xor
mov
js
cmpsl
mov
xchg
lcall
scas
in
xorb
cmpsb
daa
movsl
mov
or
mov
lret
cmp
xchg
push
and
mov
inc
jno
out
adc
ret
fidivrl
push
enter
inc
mov
lds
push
jecxz
je
outsl
sbb
or
bound
xor
outsb
cwtl
outsb
popa
leave
jne
mov
std
fbstp
inc
pop
add
gs
pop
pop
gs
cmp
mov
sahf
leave
out
out
aaa
fistpl
pop
push
jecxz
jo
mov
jo
dec
movsl
and
ds
stc
push
aad
inc
nop
dec
mov
push
xor
sbb
cltd
and
push
pop
adc
stc
inc
xadd
lea
leave
into
es
sbb
mov
push
in
push
and
push
xor
addr16
sbb
push
inc
in
xchg
cmp
int
cmp
cmp
addr16
jg
sbb
pop
xchg
mov
aas
icebp
iret
subb
xchg
mov
xor
add
cld
jnp
cltd
cmp
sub
jle
sbb
adc
mov
push
f2xm1
fistpl
lea
cwtl
sti
cmp
cmp
add
push
adc
and
inc
and
mov
inc
mov
movsl
dec
ficoml
jb
lods
jmp
xlat
js
fsubl
mov
test
fwait
mul
or
pop
ljmp
jo
std
sbb
lret
popa
popf
jns
in
fnop
fmull
sub
and
pop
sahf
lcall
jecxz
push
inc
pop
or
adc
nop
dec
iret
rcll
cli
mov
out
outsl
dec
pushf
sarl
jle
xorl
or
ja
ds
add
sub
leave
or
and
js
sbb
pop
insb
pop
imul
add
mov
idivb
dec
sbb
cmovb
adc
lcall
in
aam
gs
out
aaa
test
mov
ret
mov
cwtl
and
incl
hlt
pop
negb
inc
insb
or
out
rcll
jnp
mov
lds
insb
mov
push
cmpb
lock
pop
gs
pop
rclb
or
mov
xor
test
fnsave
std
je
pop
lods
les
repnz
add
mov
lret
out
xchg
push
sub
and
imul
xor
iret
and
mov
ljmp
addl
imul
inc
rcrb
mov
cwtl
fldcw
pop
jl
cs
inc
repnz
cli
jbe
pop
in
mov
andl
dec
out
arpl
push
arpl
in
mov
addr16
lea
out
push
adc
outsb
xor
pop
mulb
jnp
mov
cmc
sahf
aas
or
mov
cmp
rcll
je
xchg
loope
sbb
sbb
add
xchg
pop
fcoms
inc
in
mov
shll
sub
cmp
in
cmpsl
inc
adc
stos
xchg
sub
xor
push
mov
dec
dec
out
clc
out
test
adcb
or
out
addr16
popa
icebp
sub
mov
push
jmp
dec
push
cmp
sti
in
push
roll
mov
cmp
xor
stos
or
test
sub
cld
lret
sub
stos
push
in
roll
mov
lcall
in
push
orb
outsb
mov
mov
cmp
dec
push
cli
jl
jge
or
imul
mov
nop
push
dec
loop
or
hlt
jae
sbb
shrl
jge
cmp
movsl
lds
stc
jb
or
sub
aaa
in
aaa
dec
sub
dec
call
push
pop
mov
int3
mov
ficomps
and
pop
xchg
pop
into
add
sbb
mov
aam
cmpsb
jb
add
in
push
xchg
pushf
inc
mov
add
test
push
sarl
xor
sub
push
jg
mov
jae
jl
loope
sarb
mov
push
pop
scas
lea
bound
rcll
jns
inc
sbb
int
adc
xor
daa
sub
out
dec
push
in
jae
sbb
mov
adc
mov
add
movsl
call
mov
pop
push
sub
fwait
xchg
sbb
stos
inc
mov
mov
daa
mov
jbe
sub
xchg
and
enter
aaa
sbb
jb
icebp
iret
dec
hlt
insl
js
pop
sub
test
jp
lret
jl
jg
sub
stos
and
fisttpl
mov
enter
outsb
cmp
jae
and
or
lret
jb
sbb
test
jp
cs
xchg
cmc
push
arpl
xchg
into
or
push
outsl
pop
lcall
inc
aad
fwait
movsl
lret
pop
mov
pop
testb
or
loope
xor
xor
leave
adc
fwait
dec
jnp
inc
roll
xchg
rolb
jp
stos
repnz
push
and
mov
out
loopne
jecxz
lcall
in
cmp
aaa
stos
fwait
adc
idiv
out
adc
fisttpll
lret
push
or
xchg
nop
inc
iret
add
mov
and
jmp
test
mov
inc
jae
les
mov
mov
pusha
jne
jle
sub
dec
cmpsb
jnp
in
and
mov
and
scas
and
push
out
dec
push
clc
jmp
push
xchg
cmp
imull
mov
lds
cmp
daa
sbb
into
stos
xchg
out
sbb
movsl
rcrl
jo
push
mov
mov
popa
pop
mov
xchg
data16
lret
mov
test
xor
jo
sbbl
repnz
dec
repz
pop
gs
ret
icebp
mov
outsb
mov
mov
jae
bnd
out
mov
hlt
inc
lahf
mov
out
xlat
loope
inc
movsl
inc
movsb
aad
adc
mov
aam
cli
lods
push
outsb
pop
sbb
adc
or
hlt
jno
mov
icebp
das
mov
in
aas
sbbl
jno
leave
addr16
and
cmp
xchg
fld
repz
mov
or
repz
jb
dec
bound
add
add
mov
cmpsl
adc
dec
stc
addb
das
ret
mov
push
shlb
mov
xchg
sub
mov
cltd
cmp
cmp
sub
ret
cwtl
scas
jl
pcmpgtw
lahf
sub
or
mov
inc
in
in
paddw
xchg
xchg
sub
adc
orb
jo
xchg
or
test
mov
pop
insl
fcmove
inc
dec
das
inc
fsts
inc
push
lret
roll
inc
scas
sbb
filds
cmp
out
shl
lods
mov
push
xorl
cmp
into
orl
mov
inc
inc
jg
dec
idivb
out
ljmp
mov
ret
fistps
loop
mov
push
vmulsd
dec
lcall
out
out
mov
fsubl
lock
fsubrs
xor
dec
inc
fisttps
mov
sbb
xor
nop
adc
push
xchg
imul
in
lods
adc
psubb
xor
mov
xchg
decl
cli
test
push
adc
inc
aas
jno
fucomi
or
lea
ret
adc
loopne
adc
lods
out
and
fdiv
adc
push
scas
sub
pop
xchg
lods
sub
adc
lock
jb
ja
xchg
jl
xorb
leave
repnz
sbb
aad
lds
jb
loopne
push
pop
xor
mov
xchg
push
add
orl
xchg
xor
and
inc
mov
mov
xchg
pop
insb
pop
movsl
xchg
xchg
dec
cmc
test
leave
inc
pop
ja
sub
cmc
das
into
lock
dec
test
xchg
aaa
test
arpl
cmp
dec
push
inc
add
sbb
or
mulb
dec
sub
gs
cmp
pop
scas
leave
mov
xor
inc
sub
loope
lock
movsb
push
and
inc
dec
dec
sbb
jecxz
mov
btrl
add
std
ljmp
outsb
inc
cli
sahf
mov
addl
shr
lahf
fildll
testl
push
lea
in
leave
push
jnp
and
cmpsb
stos
or
sub
mov
fs
cmpsb
cmp
mov
das
pop
test
xor
mov
jno,pt
repnz
jge
inc
jmp
pop
jne
enter
xchg
push
call
cmp
ljmp
pop
mov
stos
js
daa
sti
sbb
pusha
dec
rorb
lods
mov
inc
sub
aaa
push
jp
cmp
jmp
and
movl
jle
movsb
fldcw
mov
mov
jp
lcall
jb
pop
mov
imul
stc
pop
icebp
mov
das
popa
jg
xchg
lods
leave
jecxz
or
popfw
pop
mov
aaa
mov
loope
leave
lret
and
xchg
repz
int3
loope
jle
inc
xchg
dec
cmp
inc
push
and
loope
xor
xor
sbb
aad
dec
mov
addr16
xor
pop
xchg
out
cmpsl
fisubs
pop
push
in
xlat
out
sarl
je
sbb
mov
loop
imul
xchg
daa
lea
fiadds
iret
mov
ret
mov
mov
subb
ja
outsl
frstor
enter
dec
repz
faddl
stos
leave
scas
out
xor
dec
add
mov
sub
sub
pop
dec
xor
push
int3
bound
rorl
pop
sub
stos
xchg
push
cmp
inc
add
add
es
xchg
lds
mov
ss
and
bound
cwtl
jg
mov
pop
gs
inc
bound
cmpl
cwtl
mov
pop
pop
pop
fs
cli
jns
cmp
outsb
or
adcl
push
or
scas
lods
shll
test
push
dec
mov
fwait
shr
or
and
sub
loopne
inc
int3
jge
movl
fisttpl
sub
sbbb
jo
inc
sub
iret
sub
xchg
jnp
ja
jl
mov
out
fwait
mov
add
pop
in
sbb
das
add
dec
inc
lock
sub
bnd
xchg
fwait
ljmp
and
popf
xchg
xchg
gs
loope
jg
bound
cmpsl
clc
aas
sub
inc
mov
ljmp
es
ljmp
aad
pop
outsl
jo
pop
push
xchg
mov
pop
shrl
mov
aas
inc
sub
adc
lea
mov
repnz
int
inc
or
xchg
pusha
jns
mov
movb
shll
push
out
icebp
stc
lds
jecxz
sbb
dec
sub
xor
mul
sbb
push
inc
add
les
push
mov
cmpsb
xchg
inc
push
xlat
lret
and
dec
stc
iret
add
adc
add
dec
sti
lret
pop
dec
in
mov
or
add
inc
jno
pop
and
icebp
fwait
sti
mov
es
inc
fmull
dec
sbb
jmp
mov
je
pop
push
mov
mov
cltd
pop
adc
shr
cmp
add
mov
int
cmc
imul
sub
dec
pushf
and
cmp
lret
jne
cli
jnp
scas
je
mov
xchg
lds
ja
pusha
sub
pop
ja
cli
pop
ficomps
ret
inc
call
stos
or
pop
leave
jo
sbb
aad
fbld
ds
test
pop
push
imul
mov
imul
or
addr16
add
lods
fildl
in
mov
cli
test
or
mov
mov
jge
nop
mov
jns
jge
iret
mov
mov
sarb
xor
pop
xchg
jecxz
push
in
hlt
and
xchg
pop
jns
sbb
and
or
ret
jle
imul
in
jne
xchg
xchg
mov
push
sub
xlat
test
and
sbb
stos
cwtl
test
outsl
push
xchg
aaa
sub
out
xor
sub
push
push
rcr
mov
mov
lea
movsl
dec
mov
mov
and
repz
jmp
mov
call
push
fldcw
jecxz
xchg
fsubrs
lret
push
jp
sub
and
pop
add
xlat
test
xchg
dec
cmp
test
push
aaa
push
and
mov
sahf
clc
xor
dec
rorb
sub
adc
mov
mov
je
lret
mov
ficompl
mov
mov
subb
cmp
xor
test
loop
cmp
mov
xchg
mov
push
nop
test
addr16
mov
lahf
sub
xchg
and
pop
or
in
sub
push
pop
mov
repnz
out
xorb
mov
dec
mov
push
pop
cmc
fdivrs
sbb
xor
aas
icebp
cltd
aad
fldenv
ds
int3
popa
add
pop
xor
movl
popa
fidivs
xchg
fimuls
pop
testb
fstps
fs
repz
jg
lds
imul
ja
aaa
stos
loopne
inc
cmp
in
inc
cmp
test
pop
jl
mov
xor
jle
rolb
push
lret
sub
mov
mov
addr16
adc
cltd
mov
xchg
add
xor
pop
mov
or
lahf
jmp
dec
xchg
adc
and
push
xchg
fwait
and
popl
mov
cmp
or
hlt
pushf
xor
mov
test
fs
jmp
mov
cmp
push
pop
fs
je
rolb
gs
pop
mov
lds
or
xchg
in
push
lcall
xor
push
push
outsb
and
lock
push
test
sbb
hlt
jno
or
push
jp
xor
loop
popf
icebp
sti
xchg
xor
xor
dec
iret
push
hlt
cmpsl
cld
push
push
mov
stos
pop
mov
cwtl
lods
test
dec
loop
fstpt
subl
add
xor
dec
mulb
stos
and
or
sub
jle
inc
lahf
sarb
and
sarb
das
mov
in
and
cmpsl
fs
movsb
repnz
cs
sbb
and
sub
pop
insb
mov
push
xchg
mov
jecxz
and
shrl
in
xor
push
shll
adc
lret
cmpsl
es
jb
xor
lret
in
jp
push
mov
clc
inc
jo
aam
jne
pop
sbb
psllq
ret
mov
loop
stos
jo
aas
iret
or
push
out
sub
and
stc
jbe
adc
mov
and
and
mov
cmp
jo
push
push
cmpsb
or
into
cmp
and
mov
xchg
jb
test
cmpsb
in
pusha
mov
pushf
mov
sbbb
stos
jb
std
inc
cmpsl
loop
sbb
lcall
or
mov
fcompl
aad
scas
das
imulb
and
sti
or
imul
rclb
jb
in
pop
lahf
pop
leave
cld
gs
jbe
cwtl
bound
movl
or
lahf
mov
and
sbb
jl
cmp
or
push
push
and
jmp
jge
mov
inc
mov
test
icebp
ja
push
adc
pop
jb
mov
test
and
sbb
jno
mov
jl
adc
cmp
add
scas
xchg
jg
and
cld
in
xchg
enter
push
push
sbb
cmpsb
mov
cmpsb
adc
cltd
push
jnp
sbb
push
adc
sub
pop
pusha
sub
lds
notl
test
mov
mov
sub
sub
mov
and
or
and
xor
xor
push
fldt
mov
jbe
pop
add
adc
cwtl
jae
push
ss
in
adc
lock
pop
fiadds
adc
iret
push
mov
ja
jg
shrl
icebp
jnp
insl
ds
rorl
and
cld
xlat
stos
jmp
push
nop
pusha
inc
cmc
loop
rolb
dec
aam
lahf
jl
mov
test
cwtl
add
adc
fsubs
jae
and
icebp
popa
jo
add
loope
add
loopne
mov
jb
je
jge
stos
aad
adc
xchg
ss
mov
imulb
lods
dec
aas
inc
dec
fnstcw
cs
pop
xchg
or
xchg
jb
or
adc
fcmovnbe
loope
adc
xor
mov
push
pop
push
pop
outsl
lret
jmp
cmp
push
test
loop
js
dec
sbb
subl
in
test
loopne
mov
movl
add
jle
fisttpll
xchg
icebp
or
dec
xchg
pop
orl
sub
std
into
jns
imul
mov
fnsave
push
xor
and
scas
pop
pusha
orl
mov
cld
or
cmp
cmp
sub
and
xchg
sub
out
xor
imul
xlat
dec
add
jns
lods
aaa
cmpsb
push
jmp
mov
popf
sub
lods
lock
and
pop
pop
xchg
mov
jae
and
xchg
pop
fisubrs
dec
push
pop
push
in
jb
or
xor
pusha
pusha
movl
andb
mov
int
push
ja
insl
clc
mov
std
cmp
dec
push
pusha
fstps
push
cmp
getsec
scas
and
add
mov
jno
xchg
jmp
jae
decl
in
mov
dec
or
add
loope
cmp
das
daa
stos
pcmpgtd
clc
popf
insb
enter
xchg
push
std
or
sub
lea
mov
aas
addr16
or
mov
jmp
lock
lea
add
lods
cmp
adc
rolb
ficoms
lahf
jb
xor
jnp
iret
adc
cmc
jp
push
xor
inc
int3
jg
dec
testb
inc
fldl
pop
shl
ficoms
mov
cs
jge
push
cmp
xchg
mov
inc
add
or
cwtl
dec
movb
loopne
fadd
stos
stos
daa
cmp
outsl
jg
test
pop
dec
sub
nop
sub
jnp
cmp
popa
in
mov
out
pop
and
mov
sub
xlat
cmp
fnstenv
inc
dec
pop
pop
icebp
xor
dec
mov
fwait
jne
xchg
pop
loope
aad
fsubl
push
shlb
lods
cmpsb
test
sub
test
fdivrs
test
ss
or
mov
sahf
std
test
fsubs
mov
push
sub
xor
sti
dec
pop
dec
cmp
cs
out
dec
mov
adc
iret
add
mov
xor
dec
aas
sbb
movsl
and
ficoms
jns
cmp
push
push
rcr
rcll
in
fcoml
imul
hlt
fwait
loope
or
loop
add
sub
xlat
loopne
outsl
out
lods
pop
adc
aam
xor
call
movsb
mov
lock
test
cmpsl
jns
negb
imul
jle
mov
or
rclb
in
test
xchg
or
fwait
push
sub
xchg
pop
inc
popf
xchg
dec
xchg
push
jbe
sti
add
cmp
mov
mov
xor
fnsave
mov
lock
pop
add
jbe
add
lock
imul
dec
sub
mov
jp
or
outsl
ret
rolb
cli
mov
inc
icebp
mov
mov
loope
mov
push
rorb
mov
xor
je
imul
sbb
sub
jnp
add
mov
popf
lahf
out
or
xchg
jne
pop
lahf
dec
jae
test
insb
pushf
aad
divb
sub
lret
enter
add
sub
imul
mov
lds
daa
jmp
stc
pop
dec
cmp
shrb
jne
dec
lods
rcl
add
inc
pop
mov
sbbl
add
pop
mov
lock
mov
cmpsl
jg
adc
ss
lds
mov
stos
fimuls
inc
add
inc
aaa
xor
or
imul
jnp
sbb
out
sub
mov
icebp
pop
cltd
fadd
mov
enter
inc
add
fists
mov
loope
mov
xchg
dec
sub
dec
lret
xlat
xchg
sbb
jmp
add
and
fwait
rorb
jge
test
dec
test
rcrb
fs
inc
clc
in
iret
outsb
xchg
je
outsl
or
hlt
popf
out
or
mov
popa
in
mov
aad
out
cltd
fbstp
addr16
inc
sub
or
ficompl
inc
add
pop
pop
push
inc
cmp
fidivs
loope
add
sarb
adc
sub
mov
repnz
and
lahf
mov
aaa
mov
pop
loope
es
repz
shlb
in
icebp
mov
ror
test
dec
daa
shll
sbb
inc
inc
les
out
xchg
fsts
or
gs
add
add
xor
pop
push
rcr
xchg
jno
pop
add
test
xor
cltd
popf
mov
cmp
xchg
cmp
sbb
loopne
dec
add
pusha
popa
and
and
mov
or
pop
pop
push
adc
xor
add
or
mov
movsb
test
mov
jb
sub
or
std
out
out
les
push
cld
sub
outsb
cmpsb
and
clc
xchg
arpl
mov
mov
sub
mov
jns
mov
mov
cmpsl
cs
xor
sbb
idiv
out
mov
sbb
mov
xchg
in
stos
je
rcrb
das
and
xchg
lcall
rolb
cld
mov
mov
mov
sub
adc
aam
lret
lcall
arpl
cmc
lods
or
push
sbb
xor
jns
ja
push
xchg
ljmp
push
and
cmp
test
or
lret
cmp
addb
cmp
sbb
push
xchg
mov
push
fidivs
add
xchg
fcompl
lret
jno
dec
jmp
lods
jo
es
orl
ret
cld
cs
ljmp
xor
sbb
xor
addr16
popl
int3
pop
addr16
not
insb
gs
shl
lret
ret
xchg
mov
sbbl
mov
notl
mov
dec
push
push
lea
nop
das
test
dec
jo
and
cmp
add
fs
pop
std
mov
rolb
jge
mov
repz
add
hlt
test
lods
mov
jae
xchg
mov
addr16
loopne
push
push
retw
mov
pop
adc
fildll
nop
xchg
push
cmpsb
jns
mov
mov
adc
jle
test
insb
sub
jecxz
push
xor
mov
lods
aam
enter
test
shrb
cld
fwait
xorb
std
addr16
ret
ret
inc
scas
mov
sub
sbb
ficomps
lahf
sbb
stos
mov
sahf
sbb
shlb
sbb
mov
mov
xor
negl
fldpi
lret
cs
add
ss
adc
jp
xlat
lods
cmpsl
test
and
dec
lock
add
aaa
dec
fistps
push
scas
lcall
xchg
call
xor
push
test
or
sar
mov
cmp
and
cli
xlat
inc
sub
mov
in
in
pop
ror
insl
push
mov
movsl
dec
jge
aam
add
fdiv
inc
sub
lret
out
push
mov
popa
pop
in
cmpsl
outsl
pop
call
sub
icebp
arpl
stos
pusha
movsl
arpl
inc
push
repz
js
fldcw
gs
imul
xchg
xlat
push
mov
jl
cmp
imul
es
addr16
loopne
pop
nop
icebp
sub
dec
mov
xor
cmc
and
mov
sbb
or
sub
cmp
bound
sbb
and
mull
push
push
fidivs
xor
clc
out
add
push
cmp
outsl
jl
shrl
sahf
fldt
sbb
and
pop
bt
popf
lcall
adc
nop
jne
test
pop
icebp
adc
mov
cmc
je
fildl
ds
ljmp
jmp
adc
or
aaa
repz
add
sub
or
inc
mov
and
sahf
dec
icebp
or
pop
and
inc
ss
push
xor
sbb
xor
cli
cmc
or
das
ss
pop
punpckldq
test
movsl
cli
shlb
push
out
adcb
loope
es
into
cmc
push
pop
in
imul
pop
adc
dec
inc
insl
pusha
rorb
dec
je
les
xor
sbb
or
sbb
mov
and
sub
mov
and
mov
fstpl
jmp
sbbl
outsl
hlt
xchg
adc
in
cli
mov
fisttpl
push
rorb
sbb
movsl
aas
cltd
push
fidivs
fcmovbe
insl
sbbb
int3
cli
jo
stos
lods
popf
xor
pop
and
mov
rorb
cmp
sbb
inc
mov
dec
loopne
mov
jg
jge
mov
es
cltd
mov
mov
add
add
and
mov
dec
sbb
test
insl
sbb
popf
rcr
mov
push
daa
jae
jbe
insb
jle
scas
dec
das
insl
mul
jecxz
mov
dec
sarl
test
inc
sub
dec
jae
mov
ret
movsl
mov
adc
stos
dec
mov
ds
insl
rcll
and
cmpsb
or
add
jno
out
sbb
sahf
sbb
out
push
insb
movsb
aas
cld
lods
pop
stc
xchg
jle
lea
mov
mov
aam
mov
mov
inc
add
std
mov
jp
scas
mov
fistps
scas
push
into
lods
jecxz
loope
hlt
xor
call
mov
xchg
and
mov
jae
dec
inc
aam
stos
test
sti
adc
mov
xchg
cs
leave
in
mov
jns
push
push
ljmp
das
pusha
clc
pop
inc
push
cmpsb
or
outsl
xor
mov
fwait
inc
mov
push
scas
loopne
xchg
sub
out
imul
rclb
es
repz
js
pop
and
enter
mov
ss
outsb
ds
xchg
adc
and
jae
les
mov
inc
lret
sbb
jnp
or
and
cli
pop
dec
das
inc
aaa
sbb
push
loop
add
inc
xchg
mov
pop
mov
push
hlt
lcall
xor
sub
mov
jo
add
cwtl
mov
or
dec
mov
mov
push
test
sbb
movntq
stos
orb
xor
xor
or
inc
dec
ficomps
mov
daa
sbb
outsl
cmp
mov
pop
test
call
cld
outsb
mov
hlt
sbb
je
inc
enter
out
push
and
xor
aam
test
adc
jp
scas
mov
pop
test
mov
xchg
jns
ret
mov
or
mov
xchg
fs
ljmp
and
lcall
sub
movsb
scas
notb
and
push
into
mov
cmc
icebp
fildl
and
inc
pop
or
sub
les
jno
fmul
bound
adc
icebp
and
mov
mov
loopne
shrl
xchg
outsl
add
cwtl
rol
push
inc
out
mov
mov
std
sub
loopne
cld
push
fnsave
cltd
aam
or
lret
lock
and
loope
rcll
popf
or
or
loop
shlb
jno
dec
int
pop
push
rorb
cmpsl
jl
outsl
jns
stos
push
and
add
and
test
jmp
add
jp
inc
push
mov
mov
daa
loop
xchg
sub
fs
cmc
lds
out
stos
ljmp
sub
push
adc
fidivrs
in
movsb
adc
sar
and
test
xor
sti
push
cmp
push
mov
adc
push
fldl
adc
popa
out
js
sbb
cmp
aas
jb
push
fists
lahf
scas
decl
icebp
fstpl
loop
bound
js
sbb
in
jnp
sub
aaa
fnstcw
repz
xchg
sub
roll
sahf
inc
and
push
aad
pushf
push
neg
xor
stos
push
pop
dec
mov
int
pop
inc
mov
push
pop
xchg
dec
xor
fcomps
or
cs
lahf
jp
aad
push
stos
inc
jb
test
ss
iret
fcompl
dec
les
push
int3
dec
mov
cwtl
xchg
loop
mov
xchg
jo
rolb
jnp
cmp
leave
rcll
push
test
insb
inc
jl
jle
movsl
mov
gs
pop
popf
aaa
sahf
sbb
fisubl
push
add
cmp
jo
xchg
cltd
fnstcw
mov
notb
lret
and
and
or
aam
or
dec
scas
pushf
mov
inc
push
xor
mov
pop
jle
cwtl
mov
inc
and
push
mov
stc
xor
idivb
inc
or
vcvttsd2si
mov
je
dec
scas
sbbl
push
scas
adc
repnz
push
sub
mov
inc
xchg
xchg
jae
std
and
test
jl
dec
inc
pop
push
dec
inc
insl
ss
mov
xchg
inc
xchg
mov
xor
fistps
data16
iret
aam
lock
add
jg
xor
mov
ret
repz
jecxz
pop
movsl
xchg
ja
mov
fistps
loop
and
pushf
mull
je
sti
es
outsb
jne
and
cmp
pop
adc
sarl
mov
pop
lahf
fnstsw
inc
or
mov
add
xor
insl
ret
push
fld1
fcoml
jmp
sub
insb
call
nop
or
hlt
xor
add
pop
and
mov
mov
testl
imul
cmp
mov
scas
pop
loop
push
sub
lahf
dec
adc
gs
dec
inc
addb
mov
mov
mov
movsl
and
cmp
and
jo
repz
sbb
jnp
les
sahf
jno
cmpsl
test
lods
sub
lret
sub
cmp
das
icebp
dec
xor
xchg
fstpt
imul
ret
scas
mov
ret
into
lret
movsb
and
aaa
cmp
xchg
sbb
mov
mov
xchg
cltd
clc
add
jne
xchg
mov
int
xlat
cmp
xor
stos
popa
xor
jae
je
mov
fsubrs
dec
in
mov
and
dec
cmp
lret
lods
jge
mov
xchg
and
scas
add
imul
add
fstps
sbb
cmp
adcl
pop
pop
or
mov
imul
ds
jg
stos
pop
pushf
fwait
adc
inc
xchg
mov
lods
jge
push
xorl
aam
mov
adc
ljmp
outsb
outsl
aaa
sbb
mov
and
mov
iret
fsubrs
fistps
pop
mov
iret
dec
dec
ror
mov
jae
or
js
jg
inc
mov
arpl
cmp
xor
or
test
repz
mov
adc
lret
fidivl
dec
fisubrl
cld
repz
jl
data16
mov
stos
dec
orl
in
test
lret
adc
cld
adc
mov
pop
jno
cld
shr
movsl
ds
sub
adc
ja
ljmp
pop
push
daa
adc
mov
popf
lods
push
sahf
add
out
xchg
mov
sbb
andb
xor
mov
push
fsub
xchg
pop
xchg
add
mov
dec
imul
add
data16
cmp
in
dec
aam
mov
ja
jge
out
shrl
and
dec
push
fldcw
jnp
jge
clc
mov
mov
dec
adc
in
cmp
adc
addr16
push
mov
adc
push
add
mov
in
pop
pop
add
test
in
lods
stos
popf
and
data16
fs
ret
imul
jne
fistpl
pop
jl
adc
sti
push
test
sbb
cs
push
test
or
or
lods
mov
test
push
add
jnp
sbbb
push
add
jno
mov
adc
ret
and
inc
rcll
xchg
push
int
xor
addl
push
mov
sub
js
xor
inc
cmp
pop
dec
and
add
mov
push
idivb
int3
js
shrl
pop
popf
or
adc
jne
inc
or
mov
lods
test
stc
imul
dec
jle
cwtl
pmaddwd
lods
push
xchg
repz
jmp
inc
sbb
pop
sbb
cwtl
sbb
jne
stos
jle
std
xchg
dec
mov
jo
add
lock
pop
inc
sub
dec
pusha
into
sbb
sbb
aaa
jecxz
movsw
lods
mov
fdiv
xor
mov
dec
fs
sub
push
and
test
inc
lret
jge
outsb
xor
push
out
xchg
sub
mov
xor
pop
and
sbb
call
sub
arpl
inc
xchg
or
es
scas
pop
lcall
ss
and
pop
lds
les
cmp
iret
dec
push
xchg
pop
inc
sbb
bound
jbe
or
xchg
push
pusha
push
mov
or
stc
sti
or
loopne
cmp
fsubp
xor
outsl
dec
nop
inc
add
gs
popf
xchg
gs
fwait
push
nop
xchg
scas
lea
in
in
in
std
sub
push
es
pop
cmpl
lods
cmp
insb
xchg
aam
gs
in
dec
pop
mov
and
adc
test
pusha
mov
mov
inc
iret
pop
stos
adc
int
sarl
dec
in
scas
adc
mov
push
in
mov
insl
cmp
enter
mov
aaa
testl
mov
pop
mov
or
dec
sbb
push
test
pop
test
lcall
in
gs
in
jbe
mov
or
xchg
jb
mov
lds
dec
rol
inc
xor
sbb
lock
ss
sub
lods
repnz
out
movsb
jecxz
pop
adc
adc
inc
or
aad
movsl
sbb
jp
scas
addr16
jg
fildl
insl
pop
cmpsl
popf
lea
xor
out
nop
pop
iret
push
idivb
dec
add
in
inc
cwtl
mov
dec
mov
add
mov
mov
or
popf
jbe
jnp
pop
jb
notb
xchg
inc
and
jl
test
decl
dec
pop
sbb
adc
outsb
sbb
mov
scas
addr16
mov
loop
inc
movsl
mov
popa
sbb
pop
pop
fldt
sets
test
out
lret
fnstenv
xlat
popa
mov
cld
sbb
out
outsb
xchg
mov
repz
stos
push
lcall
push
pop
lcall
xor
aaa
in
adcb
rcr
cmp
hlt
hlt
jp
jg
arpl
or
pop
dec
int
push
fistpll
push
and
and
pop
adc
push
repnz
mov
rorb
add
xchg
frstor
xor
fsubrs
stc
xor
scas
cmp
shll
push
xor
dec
mov
gs
popa
in
cmp
mov
fwait
or
dec
mov
inc
pop
jge
repnz
push
adc
push
cmc
dec
lods
xor
out
std
and
test
out
pop
xlat
icebp
mov
jbe
loopne
lret
xchg
iret
mov
imul
push
stc
das
divl
pushf
into
pop
dec
and
pop
in
pop
gs
or
push
es
stc
out
orl
dec
lods
dec
and
mov
cs
lret
fwait
push
sti
dec
in
cmp
loope
addr16
iret
xlat
ret
dec
subb
adc
push
inc
mov
jns
add
ds
push
xchg
orl
stos
jmp
sbb
xchg
in
pusha
dec
popa
loope
repnz
clc
mov
popf
mov
lds
test
dec
pushf
inc
sub
and
test
rorb
pop
or
rep
scas
ret
fstpt
pop
insb
pop
repnz
and
cmp
insl
mov
pop
mov
fwait
lock
loope
or
xchg
pop
pop
pop
cmpsb
idiv
frstor
je
mov
fcomps
fsubl
inc
jae
int
lcall
mov
fildl
aam
clc
pop
test
popl
rcl
ljmp
fsub
popf
dec
jg
pop
das
cltd
pop
outsb
repz
movsb
repnz
push
icebp
ja
iret
cmc
rcll
xor
adc
les
and
xor
dec
xor
mov
or
sbb
test
pop
or
push
sub
inc
adc
mov
inc
pop
push
lret
outsb
les
pop
insb
sub
aad
xchg
mov
ljmp
adc
sbb
pop
inc
cmpsl
outsl
mull
mov
inc
fstp
cmpsl
mov
je
popa
pushf
sti
mov
fisubrl
mov
adc
mov
sub
ss
pop
xor
push
jmp
dec
sbb
pushfw
mov
push
test
cmp
xchg
cltd
insl
xchg
test
xchg
mov
pop
paddb
call
shll
cmpb
mov
fisubrl
mov
mov
jp
push
mov
adc
pop
mov
sbb
rolb
adc
mov
jmp
data16
push
or
pop
xor
test
les
push
lea
and
and
mov
or
mov
mov
push
and
mov
adc
xchg
push
icebp
rcrl
adc
inc
pusha
inc
std
aam
or
cs
addl
cmp
adc
in
jmp
dec
cwtl
cwtl
push
pop
sahf
xor
mov
mov
jnp
jg
or
cmp
inc
jge
ret
mov
push
scas
shlb
enter
xor
cli
mov
hlt
clc
and
pushf
inc
mov
pop
xchg
mov
pop
loope
xchg
pop
stos
sub
sub
and
mov
adc
rcr
pop
sub
xor
popf
sbb
repz
nop
cltd
jg
decb
pop
lcall
sbb
dec
das
xor
insl
cs
sub
sub
sub
outsl
xchg
adc
dec
sbb
leave
test
dec
adc
xchg
pop
or
pop
cld
lock
aam
adc
arpl
movsb
and
ret
jo
and
or
push
mov
inc
ljmp
in
lods
mov
daa
jmp
loopne
outsl
xchg
test
hlt
stc
mov
ret
mov
pop
dec
lods
scas
xlat
or
pusha
dec
mov
add
stos
ret
dec
aaa
mov
in
outsl
ds
jmp
scas
add
cmp
loop
roll
cmpsb
lock
dec
ljmp
cmp
mov
into
jnp
xor
fisubl
fcoml
stos
push
shr
cltd
jp
lods
pop
jle
jecxz
xchg
cmp
xor
xor
arpl
pop
dec
xlat
mov
xchg
xor
mov
nop
mov
out
out
mov
stc
pop
outsb
jmp
insl
cltd
or
dec
int
pop
jno
sti
cs
adc
xor
imul
cwtl
repz
mov
daa
stos
xchg
add
lret
lahf
push
mov
dec
movsb
mov
inc
mov
mov
mov
test
sub
add
jo
in
push
mov
mov
sub
stc
adc
imul
popl
dec
mov
jecxz
in
aaa
mov
push
loop
cmpsl
sub
add
xchg
add
xchg
pop
xor
inc
cmp
jmp
jb
dec
sbb
cmp
sub
pop
mov
adc
ret
adc
repnz
rolb
push
cld
jl
mov
movsl
shlb
inc
int3
js
out
stos
icebp
outsb
loop
ss
fistpll
xchg
push
ret
mov
dec
scas
inc
dec
pop
das
xlat
xor
jb
movsl
in
jbe
in
enter
mov
popa
push
sbb
in
cld
out
dec
dec
aam
fwait
sub
cwtl
or
les
jp
xchg
adc
mov
notl
imul
call
mov
or
xchg
xorl
cmp
fsubl
mov
dec
popf
lretw
aam
mov
cmp
mov
ss
jmp
pop
decb
xor
test
mov
outsl
sti
mov
out
js
movsb
into
in
inc
dec
fwait
sub
mov
popf
add
ljmp
sub
out
push
test
jmp
aaa
stos
jo
fidivrs
adc
pop
pusha
ret
sbb
push
rcr
inc
lds
bound
mov
xor
addr16
jmp
mov
aas
cli
mov
and
adcb
test
movsl
ljmp
vcvttss2si
stc
adc
cmpsl
jb
into
cmpsl
imul
sub
les
enter
repz
pop
mov
and
aam
jle,pt
std
sahf
jo
inc
pop
pop
mov
in
fst
call
sbb
out
scas
cmpsb
dec
add
stos
int
mov
in
out
fwait
mov
xor
fdivl
aad
shrl
mov
jmp
mov
lcall
inc
or
inc
cmp
and
jl
mov
or
mov
in
push
sahf
sbb
mov
push
jo
das
pop
jb
stos
push
jae
int3
stos
test
loop
mov
loope
cltd
insl
mov
sub
inc
xchg
push
sbb
dec
aas
pop
shlb
push
dec
arpl
cwtl
jbe
stc
loope
popf
fnstenv
rcll
sub
stos
nop
test
cmp
jp
int
jle
jecxz
pop
test
xchg
push
push
aaa
pop
pop
les
inc
and
in
shlb
dec
iret
or
cmp
jbe
mov
mov
sub
dec
shrb
hlt
bound
mov
sbb
mov
add
cmpsl
imul
lahf
dec
or
cmpsl
push
fisttpl
call
mov
xor
sbbb
stos
jge
push
sbb
mov
jmp
xchg
and
sahf
and
arpl
push
aam
pop
shlb
arpl
movsb
dec
adc
fwait
pop
std
fisttpl
lods
pop
mov
jmp
jp
sbb
add
or
lcall
mov
bound
adc
cmp
dec
enter
adc
inc
test
stos
in
mov
dec
ret
pushf
pusha
sub
lea
mov
jnp
lods
pop
add
adc
lret
pop
pop
call
sahf
xor
mov
inc
scas
sbb
xchg
lods
pop
inc
das
mov
pop
mov
lds
mov
ret
aas
or
jo
frstor
rolb
outsb
test
rep
pop
sub
pop
and
cmp
xchg
test
stos
jle
pop
ffree
cltd
je
inc
jmp
push
mov
in
test
stos
rol
cmpsb
in
mov
and
lods
mov
enter
out
pop
aad
xchg
mov
pop
pushf
adc
add
mov
and
sbb
mov
cltd
mov
push
es
repnz
addl
int
xlat
sbb
loop
adc
aaa
add
es
mov
mov
dec
stc
or
push
mov
loopne
xor
cmp
or
cli
sbb
adc
push
dec
andl
aam
imul
pop
int3
jecxz
fiaddl
fistpl
cmp
pusha
cmp
jae
mov
shll
lret
or
push
pop
mov
sarl
enter
cmc
pop
pusha
lcall
sahf
xchg
bt
fadd
imul
shr
push
lcall
push
scas
jb
cmpsb
das
mov
mov
call
cs
outsb
jns
stos
adc
les
in
xor
pusha
ret
outsb
fwait
xlat
inc
mov
xchg
mov
push
je
addr16
or
call
sub
lods
mov
pop
outsl
mov
xorl
out
or
cmp
mov
mov
nop
loopne
testl
push
incl
or
addr16
int
testb
insb
inc
out
or
je
add
add
add
mov
and
xchg
push
cmp
insl
mov
int
adc
adc
mov
adc
lods
test
push
adc
les
xchg
jl
xchg
jl
sub
xor
and
xchg
mov
jmp
fbld
mov
jb
and
gs
push
push
sahf
add
loope
jbe
jle
xchg
lods
nop
pop
mov
sub
in
je
imul
xor
sub
fmuls
sbb
mov
dec
mov
xchg
lret
and
pop
and
cmpsl
mov
and
xchg
mov
or
imul
jbe
push
icebp
xchg
mov
adc
sbb
fdivrl
push
mov
mov
scas
mov
insl
roll
lahf
cmp
cmpsb
popa
pop
pop
cli
add
pop
sub
pop
add
pop
xor
or
ret
xor
dec
inc
les
lock
shrl
sbb
push
jmp
inc
and
lahf
sbb
ret
and
stos
outsl
add
in
jg
loopne
imull
iret
xlat
ret
inc
jno
mov
cmc
add
icebp
and
in
shl
push
lea
outsb
and
xlat
jo
jmp
cltd
sub
test
rcrl
xchg
and
aam
mov
jg
cmp
lret
push
in
shrb
sbbl
stos
xchg
movsb
inc
and
xor
pop
pop
pop
pop
movsl
mov
mov
insl
xchg
pusha
imul
inc
lds
push
cmp
mov
mov
lods
fisttpl
and
push
lea
jo
or
subb
and
ss
push
pop
gs
dec
cmpl
or
jns
std
inc
pop
fsts
xor
cmp
popf
pop
xor
ja
xchg
add
xor
outsb
add
pop
rol
xchg
sub
xor
leave
aad
mov
std
call
flds
or
xchg
inc
mov
js
lods
int
repnz
out
nop
les
push
arpl
ljmp
dec
test
xchg
pushf
bound
imul
movsb
pop
mov
insl
jno
roll
int3
jno
and
out
movsb
xchg
iret
jns
out
incl
imul
xchg
sub
jge
arpl
push
pop
shll
sbb
push
out
cld
nop
test
jnp
cmp
xchg
sub
add
int
icebp
pop
int3
ss
jbe
sbb
and
mov
shlb
xchg
cmp
ss
push
cmp
scas
mov
pop
sbb
cmp
add
enter
lahf
jg
in
out
push
insl
fs
in
pop
xchg
xchg
push
sub
and
mov
fwait
jge
ljmp
jle
cli
sahf
adc
dec
movsb
lret
iret
mov
cli
jb
add
sub
cmp
nop
mov
xchg
outsb
mov
fcomps
arpl
out
pop
out
movsl
jae
sub
adc
ror
cmp
pop
pop
xor
int
mov
ja
push
sbb
inc
cwtl
lahf
jcxz
ljmp
sbb
inc
mov
shll
mov
add
rolb
arpl
iret
ret
push
gs
dec
xchg
cmp
leave
movsl
test
inc
and
mov
push
cli
out
adc
ss
lret
enter
cltd
cltd
and
jle
jmp
mov
push
das
ja
adcl
jns
mov
inc
mov
jae
mov
cmp
sbb
js
jns
jl
jmp
push
shrb
cmpl
fsubrs
lret
or
incb
cwtl
icebp
in
cmc
mov
mov
xchg
fldt
dec
inc
sbb
dec
and
rcrb
inc
xorb
push
dec
out
test
dec
xlat
ret
sub
adc
cs
arpl
xchg
incl
mov
xchg
or
xchg
push
mov
shr
and
xlat
flds
shll
xor
lods
fisubl
pop
mov
mov
int3
mov
popa
cmc
xchg
scas
cmp
and
outsb
faddl
pop
jp
test
cltd
mov
push
arpl
ss
inc
test
or
dec
movsl
or
mov
test
cmp
test
out
std
imul
jb
loopne
inc
mov
push
sub
enter
out
arpl
sub
add
jns
and
out
jmp
int
pop
xchg
por
scas
inc
mov
jne
int3
pop
js
jp
cltd
xor
jno
add
push
sbb
out
push
rolb
dec
shl
xchg
and
fimuls
xchg
xchg
push
dec
fsubs
cld
imul
mov
push
xor
dec
mov
push
inc
push
cmp
nop
push
inc
add
in
inc
ljmp
pop
clc
jbe
and
cmc
add
push
and
adc
scas
xchg
mov
and
popa
sub
stc
xor
pusha
add
pop
test
xchg
pop
imul
lods
shrl
push
psrad
pushf
outsl
adc
inc
shlb
adc
test
xchg
and
in
jae
or
rol
xor
xor
ss
dec
pop
aad
idivl
loope
xor
push
push
insl
out
loop
movsb
jbe
sti
sub
ret
lea
test
in
loope
leave
mov
popf
push
loopne
push
ds
stc
inc
cmp
in
jae
shrl
dec
outsl
or
mov
mov
pop
adc
sbb
insl
mov
insb
shll
or
mov
lret
push
incl
mov
push
jle
adc
cmp
mov
push
sahf
jo
cmp
sbb
mov
fs
daa
dec
xchg
in
stc
test
icebp
loope
mov
dec
addr16
addb
sbb
pop
dec
inc
xchg
adc
inc
sahf
mov
or
out
aaa
addb
xor
push
lret
adc
outsb
fnstcw
push
ret
pop
loopne
ficoms
sub
in
stos
add
push
je
sti
pop
adc
dec
icebp
xchg
fistl
dec
into
lcall
dec
mov
scas
clc
pusha
inc
mov
sub
cmpsl
dec
adc
push
sarb
jmp
in
and
shll
sbb
divl
mov
or
cs
sub
out
cmp
push
rcll
int3
pop
popf
cld
adc
xor
hlt
in
fs
lcall
dec
adcb
cltd
loope
inc
loope
int
outsl
or
pop
adc
jnp
stc
clc
loop
fsub
push
pop
adc
or
jge
data16
lahf
movsb
fs
int
dec
cld
pop
pop
mov
rcl
lret
rorl
js
adc
and
sbb
or
mov
dec
inc
scas
dec
or
outsb
psubb
xchg
ljmp
mov
inc
sub
mov
adc
sbb
inc
scas
gs
ret
sbb
xchg
sub
pop
or
out
adc
movswl
fcoml
outsb
les
sbb
mov
in
mov
sub
sub
sub
adc
or
xor
xlat
imul
sbb
mov
cmp
popf
adc
stos
mov
fiadds
mov
adcl
loop
mov
das
adc
in
out
pop
xchg
ret
pop
inc
aad
and
mov
inc
inc
fsubrp
cmp
dec
inc
mov
mov
pop
xchg
jp
inc
dec
out
scas
aad
xchg
push
stc
adc
and
add
lret
xchg
jnp
in
mov
pop
js
push
rorl
sbb
xorl
nop
xor
data16
dec
psrlq
ror
adc
test
arpl
push
add
and
dec
data16
adc
cmp
jge
es
in
adc
repz
mov
aas
pop
cmp
xor
push
mov
roll
ja
in
xchg
xor
sub
lock
enter
or
dec
out
xchg
nop
loope
sbb
sub
sub
add
add
stos
mov
lret
test
stc
inc
mov
sbb
dec
fnsave
roll
xchg
cltd
aas
push
add
jmp
mov
mov
push
mull
push
push
lods
or
jno
push
mov
cmpsl
icebp
popf
mov
lds
subb
xor
mov
xor
sbb
sahf
into
lcall
bound
lret
stos
jp
sbb
mov
cmpsb
fimuls
das
inc
orl
pop
adc
xchg
jno
jne
leave
leave
cmp
cmc
xchg
enter
sub
ljmp
fcmove
inc
test
repnz
xchg
inc
and
ja
paddq
imul
xchg
mov
jmp
xchg
dec
gs
subb
xor
pushf
daa
imul
arpl
cmp
and
sbb
subl
dec
dec
mov
xchg
ret
and
sbb
push
out
add
mov
sub
repz
sbb
jb
adc
test
gs
jp
sub
mov
ds
arpl
sahf
loope
mov
jge
repnz
shl
cmp
cmp
arpl
std
or
aad
mov
push
jge
cmp
mov
or
pop
scas
pop
mov
add
push
cmp
adcb
cmp
sbb
mov
lods
mov
ja
lahf
add
adc
mov
dec
lcall
out
inc
sbb
call
and
push
dec
stos
imul
pop
mov
lds
stc
rcrb
dec
shl
add
nop
std
out
sbb
xchg
fnstenv
test
dec
adc
add
inc
dec
jge
or
decb
xor
cmp
inc
sbb
mov
adc
insl
mov
xor
jle
fwait
mov
in
movsb
xlat
pushf
dec
cmp
or
add
clc
and
fchs
int
inc
push
into
into
pop
cmp
mov
data16
push
test
ret
popf
mov
das
mov
sbb
push
cmp
lahf
gs
fcomps
adc
repnz
fwait
xchg
icebp
or
int
add
pop
mov
jl
fwait
nop
jbe
and
sub
nop
xchg
push
xlat
xlat
inc
jmp
and
cmp
lcall
adc
sbb
lcall
or
cwtl
rcrl
ja
dec
dec
fcoms
cli
inc
sbb
mov
sbb
adc
in
subl
jb
adc
loopne
mov
xchg
dec
sbb
into
jnp
sbb
sahf
push
rorl
fsts
rolb
jne
pop
int3
xchg
push
leave
and
fwait
je
push
mov
stos
mov
add
fucomi
in
dec
cmc
test
pop
lret
add
cmpsl
xchg
mov
lret
scas
mov
fisubrs
aam
push
mov
in
cs
cmpsb
ret
popa
ficompl
xor
cmp
push
pop
cmp
adc
dec
rolb
vpsubsb
push
and
aas
or
push
out
pop
sti
aas
sub
mov
lret
imul
js
mov
push
add
bound
sti
loope
sti
dec
mov
repnz
ret
movsl
movsb
es
mov
xchg
lahf
xchg
lret
push
cs
mov
in
cwtl
sub
fldenv
adc
push
dec
mov
mov
adc
shrl
adc
lds
add
sahf
nop
stos
xchg
or
xchg
jns
mov
cmp
pop
movsl
jo
adc
je
sbb
jae
sti
test
rep
inc
or
pop
xlat
adc
inc
dec
in
or
jae
lahf
mov
popf
lret
push
flds
add
rolb
loop
negb
jle
mov
je
icebp
imul
lea
or
int3
push
xchg
pop
sbb
xchg
pushf
inc
inc
int3
out
push
insl
movsl
mov
pop
mov
or
jnp
imull
loope
int
xor
push
rcrl
inc
push
pop
mov
imul
inc
aas
push
jmp
ror
outsl
mov
dec
sbb
lcall
sahf
inc
aas
xor
test
sbb
sbb
or
stos
push
setno
sub
mov
shl
sbb
rcr
dec
xlat
jbe
inc
jne
dec
test
dec
das
in
dec
lret
and
add
xchg
ret
cwtl
or
pusha
and
and
loope
mov
scas
pusha
scas
and
cltd
add
xor
lret
add
aas
push
mov
jmp
insl
mov
rorb
call
or
lods
subb
outsb
inc
jns
leave
cmpsl
push
jecxz
loopne
mov
xchg
lret
jnp
out
push
enter
dec
and
inc
and
adcb
gs
test
icebp
push
in
into
mov
pop
sti
pop
loop
jecxz
mov
mov
add
movsl
xchg
mov
nop
dec
rorl
sbb
leave
dec
push
jecxz
push
mov
jecxz
dec
mov
cmc
and
out
les
cltd
out
sbb
rorl
rcrl
shl
adc
adc
adc
jg
call
pop
jnp
inc
xchg
sbb
adc
ss
bound
cmpsl
push
push
dec
inc
xchg
aas
sbb
push
sahf
inc
adc
mov
leave
fwait
leave
add
xchg
loopne
lahf
out
mov
fs
pop
sarl
xor
push
fs
push
or
jnp
int3
mov
mov
ss
cmp
fbld
addb
mov
test
adc
sbb
stc
sti
push
stos
jns
int3
mov
dec
aas
inc
pop
add
add
and
dec
dec
xchg
lds
pop
rclb
push
int3
jbe
scas
xchg
arpl
xchg
je
sbb
add
arpl
loope
jbe
push
flds
jns
push
loope
dec
xchg
fs
es
lds
xor
stc
sub
add
addr16
insb
mov
les
push
hlt
push
in
popa
pop
xchg
adc
mov
scas
sbb
sub
insl
push
inc
pop
pop
or
inc
pop
addr16
or
xorb
mov
and
lahf
fs
imull
push
es
mov
jo
lea
inc
ret
or
sub
push
and
imul
iret
ret
xor
and
outsb
add
cltd
pusha
jge
pop
ja
scas
cmpsb
pop
cmpsl
push
sbb
loop
push
lcall
mov
lret
adc
inc
fsubrs
sti
das
daa
jo
xchg
adc
test
or
mov
xrelease
pop
add
mov
dec
add
push
adc
call
mov
mov
das
cmpb
dec
and
shrb
inc
dec
xchg
inc
push
push
push
cld
mov
cli
push
mov
mov
cmovg
push
jge
insb
ljmp
cmp
add
nop
scas
dec
inc
stc
mov
fstps
ret
and
and
inc
lcall
and
adc
inc
mov
jge
popf
xchg
push
push
inc
imul
pop
test
xlat
loop
sbb
cmp
stos
bound
bound
mov
arpl
adc
mov
mov
mov
pop
mov
fs
sti
cli
cmpb
inc
xchg
sbb
stos
fmuls
lea
adc
cltd
xor
hlt
ss
iret
in
mov
and
mov
shlb
xor
mov
or
ss
int
mov
sub
lret
hlt
fidivs
stc
ja
orb
cmp
dec
pop
mov
sub
mov
stos
sbb
mov
dec
test
stos
or
sahf
pop
in
outsb
stc
add
or
les
and
dec
ficomps
inc
inc
mov
inc
loop
push
cli
pop
xchg
jnp
ret
and
mov
dec
mulb
add
ja
shr
sub
or
mov
and
aam
add
outsl
pop
aaa
jb,pn
xchg
lock
inc
loop
sbb
adc
mov
cli
shl
push
mov
sti
sub
mov
adc
int
pop
inc
stos
jns
xor
add
inc
jne
xor
cmpsl
adc
or
ret
fistpll
dec
movl
sub
test
add
sbb
lret
paddb
scas
loope
fldt
shl
fwait
sub
call
in
add
fsts
inc
loopne
ja
ja
sahf
aas
jae
popf
push
cmp
sub
test
ret
mov
mov
lock
dec
dec
movsl
rcll
sbb
lret
jge
pop
sbb
dec
das
or
push
popf
pusha
adc
ds
dec
movsl
mov
sarb
add
mov
add
adc
cmp
sub
push
ret
pusha
sub
jge
xchg
inc
fwait
adc
rclb
push
hlt
jge
test
inc
jp
sbbl
rorl
mov
std
sbb
imul
adc
pop
aam
xchg
enter
movsl
rorb
xchg
popf
fdivrl
pop
pop
jne
mov
cmp
bound
sub
ret
nop
xchg
arpl
lods
lods
leave
xchg
in
xchg
bound
iret
cmpb
mov
arpl
mov
ficompl
cmpsl
rcrb
adc
cmp
enter
mov
inc
and
and
fcompl
dec
pop
scas
addr16
jl
mov
sbb
inc
jae
dec
inc
lds
inc
das
push
int3
dec
jmp
test
daa
inc
or
outsb
ss
mov
mov
in
pop
cmpsb
or
loopne
in
das
js
and
outsb
and
xor
pop
xor
pop
ret
pop
jp
xchg
mov
icebp
icebp
fstl
movsl
cmpsb
dec
sub
pop
adc
pushl
add
shlb
lods
cmp
fsubrp
xor
mov
inc
mov
mov
out
pop
fstpt
fmuls
les
fs
aad
sbbl
add
repz
jno
shll
sub
xor
xchg
pop
lret
lea
adc
pop
push
pop
add
and
hlt
ret
pop
mov
in
or
and
repnz
cli
xchg
mov
dec
or
or
jns
dec
and
fcmovu
fs
movsl
cwtl
cmp
add
imul
push
lcall
xchg
xchg
pop
inc
adcb
mov
nop
mov
in
insb
sbb
int3
add
adc
insl
pop
movsb
jbe
xchg
push
mov
insl
jnp
push
cld
dec
and
faddp
sbb
sti
mov
pop
jae
cmp
je
sti
cli
loopne
push
mov
mov
cmpsl
push
mov
mov
mov
inc
pop
divb
dec
mov
push
xchg
daa
les
xor
or
jl
sbb
add
push
je
inc
xchg
push
mov
mov
mov
or
pop
hlt
mov
movsb
push
roll
popf
lahf
jecxz
out
sub
ret
mov
push
repz
push
in
sub
cmp
mov
dec
int3
arpl
stc
push
push
jecxz
dec
mov
and
sub
and
or
mov
imul
mov
pop
push
dec
out
push
std
sub
addr16
sbb
mov
outsl
and
das
and
cmp
xchg
pop
jnp
cmp
jmp
or
inc
push
daa
cmp
iret
push
push
cmp
fdivrs
gs
pop
jg
adc
lods
and
xchg
sub
jp
xor
jle
push
fstl
call
push
iret
mov
mov
xor
fldcw
testl
mov
add
jbe
push
imul
cmp
cmp
xchg
js
mov
mov
push
sub
pop
sub
dec
fstpt
arpl
stc
cld
push
mov
jmp
loopne
push
cwtl
ret
jb
lds
cmpsb
mov
mov
data16
mov
call
mov
notl
inc
ret
ds
sub
fnsave
mov
and
xor
pop
dec
aad
mov
rcrl
dec
pop
fistl
loopne
ljmp
lcall
out
cmp
push
out
cmp
sub
cmp
sub
mov
pop
hlt
test
or
mov
mov
mov
arpl
loope
aad
out
cs
shlb
or
or
mov
popf
stc
and
xchg
sbb
inc
fsubrp
xchg
gs
roll
icebp
faddl
mov
xchg
sbb
popa
xchg
push
pop
fsubp
xchg
sub
stos
cmpsl
lock
xor
repnz
rcrl
lds
adc
xchg
cld
data16
popf
push
rolb
sbb
lods
lods
jle
js
test
scas
cld
pop
mov
popf
add
inc
mov
pop
insl
aad
jae
pop
or
add
in
jl
push
pop
icebp
push
ret
mov
inc
mov
insl
scas
mov
rcrb
jae
popa
inc
push
clc
push
pop
dec
andb
jbe
xchg
or
lret
iret
ljmp
add
adc
pop
mov
out
xchg
sub
sub
call
or
je
in
mov
aam
rsm
cmpsb
pop
ror
inc
cmp
dec
fwait
mov
cmovnp
ljmp
lahf
and
dec
mov
xchg
mov
ss
and
xchg
mov
sbb
mov
and
sub
add
mov
dec
push
xor
mov
inc
ss
cld
shlb
loope
pushf
insl
std
fildll
hlt
cwtl
test
ljmp
cli
int
sub
adc
xlat
jne
inc
push
xchg
out
lds
mov
inc
sbb
mov
pushf
mov
xor
shrb
mov
test
mov
jecxz
test
iret
ret
jmp
imul
in
ror
shrb
xorl
mov
push
adc
xchg
mov
loop
xchg
xlat
or
dec
mov
lea
inc
inc
sbb
stc
adc
adcl
insl
sub
imul
pushf
or
out
je
adc
dec
je
xor
push
push
xor
loope
clc
ja
das
fs
cmpsl
sub
pop
and
mov
lock
or
test
outsb
out
and
xor
push
imul
inc
ficomps
nop
call
dec
adc
pop
idiv
jg
clc
adc
clc
mulb
jno
out
push
mov
or
pop
loop
add
dec
xor
mov
jo
mov
leave
test
jecxz
sub
sbb
mov
shr
enter
ret
and
dec
sahf
loope
jb
test
mov
sub
inc
mov
sub
inc
pop
int3
adc
scas
sti
stos
inc
inc
push
jecxz
pop
fstpl
imul
cs
pop
jo
mov
int
outsl
movsl
aas
scas
jle
push
divb
iret
fimuls
xchg
mov
dec
or
clc
and
imul
inc
fs
icebp
dec
mov
mov
sub
or
ja
adc
jae
idivb
shll
mov
push
pop
aaa
jmp
aas
rclb
cmp
sub
or
cld
popf
adc
insb
in
js
scas
sbbl
add
jbe
xchg
cmp
mov
or
dec
push
stos
push
jge
cmpsb
adcl
mov
and
test
neg
inc
arpl
ljmp
xchg
fidivl
les
mov
push
das
jle
mov
frstor
mov
cli
scas
inc
aaa
icebp
insb
movb
loopne
adc
repz
cmp
test
mov
loope
push
cmp
or
pop
cmp
adc
test
repz
sbb
movsl
jbe
pop
movsl
dec
jno
fisubrs
dec
or
call
add
ljmp
data16
sub
imul
scas
cmp
add
sbb
mov
inc
lahf
andb
aad
outsl
inc
push
xor
lcall
das
sbb
sub
mov
fisubs
sub
test
jae
movsl
nop
sbb
cli
sub
outsl
adc
rcrb
adc
ret
out
add
mov
mov
out
sub
xchg
and
jb
insl
int3
push
inc
and
hlt
rolb
mov
xchg
hlt
cmp
sbb
out
fildl
std
add
lret
lahf
push
je
adc
inc
jge
iret
add
cltd
push
add
or
jo
dec
mov
mov
pop
or
fcoms
leave
push
jno
adc
and
lock
ret
call
jns
xchg
dec
imul
stos
out
xor
mov
mov
cwtl
js
cmc
xchg
cltd
jg
mov
aam
xlat
cli
mov
xchg
mov
neg
lods
inc
pushf
repnz
mov
dec
out
add
and
push
jp
mov
fs
push
test
pop
xchg
loope
and
xor
and
mov
adc
jl
sub
xchg
scas
adc
daa
xor
jbe
lcall
add
leave
aaa
sbb
mov
inc
bound
adc
in
sub
ja
lea
push
add
mov
flds
in
jae
outsb
lcall
out
and
cmp
mov
jnp
xlat
or
not
dec
sarl
data16
jmp
push
mov
sub
je
outsl
jb
mov
out
scas
push
mov
xchg
loope
pop
rclb
pop
inc
fsubl
pusha
aaa
add
mov
fucom
cmpsl
push
adc
xor
loopne
rcrb
mov
add
imull
inc
aad
xlat
fwait
es
xor
add
in
imul
pop
xor
fsts
cmp
loop,pt
adc
and
jp
push
mov
mov
jecxz
cltd
adc
fsubl
or
cld
dec
cmp
es
sub
cmp
adc
stc
addl
xchg
cmp
xchg
rcrl
jbe
sub
dec
lea
mov
data16
jae
clc
cli
xchg
ficoml
cmpsl
repz
adc
aaa
hlt
je
in
hlt
cmp
repz
loope
inc
sahf
mov
lock
xchg
addb
and
cmp
hlt
mov
sahf
cmpsb
push
mov
inc
bound
sti
jmp
push
adc
pop
jle
mov
gs
in
adcb
jmp
cmp
and
aaa
lea
test
js
mov
popf
push
adcb
leave
fcmovnbe
jae
sbb
fidivl
shrb
jo
fildll
jno
inc
fwait
add
pop
out
lea
xchg
cmpsl
loop
adc
clc
aad
mov
lods
ret
dec
pop
iret
dec
jno
jbe
in
aad
scas
aas
adc
cli
adc
mov
push
adcb
imul
adcl
dec
rcll
mulb
in
pop
movsb
lods
xor
mov
sub
jns
outsb
adc
push
xchg
pusha
xor
sub
cmp
movsb
std
mov
aad
fiaddl
mov
mov
sbb
jmp
mov
pop
test
pop
hlt
sbb
jl
or
pop
hlt
mov
cmp
leave
popf
ja
push
je
js
mov
shll
push
or
or
mov
cmp
or
arpl
or
icebp
jl
mov
cld
or
jnp
stos
scas
mov
mov
das
divb
pop
loop
in
gs
imul
xlat
cmpsl
jl
cmp
inc
das
or
fwait
leave
lret
pop
sbb
push
loop
cmp
jae
lcall
nop
stos
fidivrs
mov
push
inc
xor
je
loop
kmovq
test
fwait
scas
or
cs
das
mov
push
aad
jae
cli
popa
leave
dec
repnz
pushf
sbb
stos
adc
imul
mov
sbb
push
xor
mov
mov
pop
test
fldcw
js
dec
jns
push
adc
push
and
pop
inc
sbb
cmc
vsubpd
dec
mov
jge
cmp
ret
lret
cwtl
sbb
pop
dec
mov
jne
sub
popa
sbb
and
cmp
mov
dec
das
add
mov
testl
pop
stos
daa
push
int3
push
pop
cli
test
sbb
loope
outsl
or
repz
sti
bnd
lahf
push
ja
andb
nop
cwtl
inc
adc
fidivs
mov
pusha
insl
cwtl
outsl
ss
insl
mov
ffree
adc
movsb
or
out
adc
jns
xor
test
std
mov
adc
iret
dec
mov
push
inc
sub
aad
adc
or
jne
dec
mov
cltd
or
or
cmp
xchg
pop
cmp
or
cmp
insb
push
and
jg
adc
je,pt
cld
into
mov
jns
dec
and
fisubrl
mov
push
stos
in
sarl
mov
mov
jecxz
sub
cs
jecxz
xchg
fstl
out
or
outsb
fildll
lret
push
push
stos
cli
cld
les
andb
sti
adc
aam
aaa
pop
pop
lahf
data16
cs
lea
pusha
lcall
xchg
negl
jmp
add
lods
adc
fnstenv
mov
outsb
imul
add
push
scas
cmp
lret
mov
enter
mov
xchg
daa
lahf
std
cld
xchg
push
in
test
lea
in
inc
inc
ret
data16
jno
xchg
jns
popa
fwait
xchg
sahf
push
inc
inc
outsl
loopne
sbb
xor
icebp
je
mov
arpl
negb
in
adc
fiadds
push
out
mov
jl
js
xor
andb
mov
jl
dec
sub
sub
jmp
mov
stos
cmp
mov
jg
call
mov
and
inc
arpl
pop
xchg
in
fistps
inc
hlt
pop
inc
outsl
stos
gs
lds
rcr
ds
and
mov
mov
std
test
cld
fs
scas
test
pop
xchg
pop
xor
jle
pop
xchg
cli
shrl
imul
mov
cmp
icebp
lahf
icebp
repnz
add
packssdw
popf
cmp
movb
push
xchg
add
sbb
pop
es
or
mov
or
aaa
push
mov
mov
sti
xor
jge
call
fs
xor
add
lahf
test
cwtl
and
cltd
push
jns
mov
or
cs
and
lret
xchg
sbb
int3
adc
push
stc
mov
xchg
adcl
leave
xchg
jl
xchg
cs
xlat
int
icebp
scas
das
xchg
orl
idivl
pop
lea
ss
ja
adc
mov
repz
out
dec
xchg
bndstx
in
sbb
addr16
addl
test
inc
aam
mov
sbb
jmp
ja
xor
jmp
out
mov
test
jne
jae
jp
cmp
cmpb
rorl
sub
cmp
scas
dec
enter
add
sbb
inc
out
xor
cli
dec
mov
sub
xor
lods
lds
test
sub
mov
xor
jg
xor
jecxz
cmpsl
pop
test
mov
mov
adc
push
sbb
lea
sbb
mov
popf
call
mov
pop
sahf
lret
int
add
popf
mov
pop
jmp
or
icebp
sub
sbb
test
push
add
sbb
jmp
xchg
xchg
pushl
ret
dec
pushf
add
pop
sahf
cs
bound
pop
rorb
add
sbb
insl
sub
fs
aas
cmc
fsub
fld
cmp
jb
xchg
dec
cs
fstpt
inc
call
cmp
add
mov
pop
je
sbb
mov
mov
mov
xor
stos
data16
cmp
push
jg
push
jmp
addr16
adc
ljmp
push
mov
subb
add
xor
xchg
cmp
cmp
push
sub
pushf
jns
leave
inc
es
pop
xchg
mov
xchg
out
sbbl
lock
jb
adc
add
and
sbb
cwtl
test
shll
aaa
in
loop
rol
pop
cltd
xor
mov
lds
jbe
leave
cmp
pushf
lahf
mov
and
jecxz
xchg
in
jmp
test
outsl
lcall
xchg
dec
imul
adc
addl
in
jge
xchg
ja
push
out
jno
imul
das
popa
test
mov
daa
pop
in
ret
or
jns
add
jno
cs
js
jb
decb
xchg
lock
adc
sbb
sub
ret
add
sub
push
add
mov
add
insb
jecxz
out
or
mov
ja
mov
pop
inc
iret
inc
dec
iret
ret
sbb
and
in
loop
mov
cmp
cmp
movsb
int3
mov
popa
sub
mov
bound
mov
dec
pop
cli
adc
lock
adc
adc
enter
mov
jl
xchg
mov
pop
rcrl
outsl
orl
clc
xchg
fsubl
clc
mov
mov
nop
data16
jns
xor
fisubrl
jmp
push
jb
jbe
cmpsl
faddp
clc
jl
je
out
sub
lahf
arpl
xchg
cmpsl
pop
inc
cmp
insb
call
or
rcrl
ljmp
fwait
movsb
shll
test
or
or
adc
push
dec
nop
imul
cmpsl
in
xor
jl
ror
das
jne
ret
aam
test
mov
aad
push
xchg
test
scas
lea
ja
cs
inc
cs
mov
cmc
loop
stc
pop
andl
lahf
aad
and
call
jno
mov
cmp
fnstsw
stos
lret
sbb
jle
or
and
jno
clc
add
mov
js
or
ljmp
jle
out
adc
ds
mov
push
xchg
outsl
mov
arpl
mov
mov
xchg
lea
ds
jne
inc
mov
push
dec
scas
xchg
pop
or
pop
out
sub
divb
sbb
or
loop
movsb
push
add
lock
subb
mov
in
xor
fsubr
into
loop
jns
pop
xchg
out
push
add
jno
movsl
cmc
mov
loope
jo
mov
shrl
sbb
in
pop
pop
adc
mov
jmp
mov
ret
cmp
pop
jae
fisttpl
sub
or
mov
push
cmp
test
jae
jl
insl
gs
and
xor
pop
inc
inc
cmp
std
div
insl
dec
test
leave
push
push
and
dec
bound
mov
enter
loope
pop
pushf
testl
ljmp
test
fsub
mull
cwtl
out
add
enter
ljmp
inc
xchg
cmp
sti
in
jmp
adc
pop
push
cmc
pop
jae
xchg
cwtl
clc
je
std
xor
in
inc
inc
cmp
mov
jmp
cmp
pop
sub
adc
lea
movsl
mov
dec
leave
push
jmp
jle
fdivrs
sbb
lret
xor
pop
jae
aam
mov
jno
and
repz
mov
inc
out
mov
cmp
dec
cmp
cwtl
pushf
xchg
stos
mov
fsubl
cwtl
adc
cmp
pushf
rcll
xchg
test
cwtl
ret
adc
in
insb
ret
and
pushf
pop
mov
fwait
add
cmpsl
mov
sub
cmp
mov
xchg
sub
inc
lock
dec
dec
pop
insb
cmp
pop
clc
in
inc
push
cmp
cwtl
or
daa
iret
mov
sub
jno
jl
push
aam
pop
jge
addr16
fcmovnb
fwait
adc
push
pop
pop
pop
ljmp
fstps
loopne
mov
dec
cs
fsts
sahf
aas
or
pushl
nop
aaa
push
mov
fstl
out
stos
mov
mov
fs
lds
add
stos
mov
stc
xor
pop
pop
push
shll
stc
test
xchg
pop
and
out
imul
push
adc
jae
push
daa
enter
jmp
or
enter
mov
sub
pusha
lods
xor
cmpsl
xor
out
add
insb
push
je
int3
in
add
arpl
push
loope
fistpl
mov
mov
scas
jo
mov
test
and
or
push
stc
lret
iret
cli
push
cmp
ret
or
sahf
and
insb
int3
into
loope
andl
arpl
sbb
add
pop
sarb
data16
add
xchg
sub
add
cmp
push
mov
or
xchg
and
mov
xchg
xchg
jmp
and
cli
mov
sar
int3
push
xor
hlt
pop
pop
lds
hlt
push
jo
or
popa
mov
pushf
cmp
outsb
divl
in
inc
xchg
repnz
outsl
sub
lock
out
inc
xchg
add
jecxz
and
xlat
sbb
mov
call
leave
mov
adc
out
push
sahf
push
dec
mov
cwtl
dec
sub
xor
adc
jae
cli
lret
stos
mov
and
cmp
ja
pushf
test
faddl
sbb
jge
scas
in
nop
push
mov
mov
sbb
pop
std
lock
rcll
movsl
aaa
pop
and
hlt
movsl
cmc
adc
mov
push
jp
sarl
xlat
or
push
push
sbb
mov
int3
pop
xor
das
xchg
mov
mov
fwait
hlt
lock
mov
pop
sbb
leave
mov
inc
push
add
mov
lret
scas
jno
loope
sti
push
pop
out
stos
jge
inc
push
jmp
inc
addr16
dec
repz
pop
popf
enter
pop
cmp
fcomps
xor
jmp
iret
cwtl
inc
cmc
rol
cmp
mov
add
pop
nop
iret
push
out
dec
out
cwtl
les
ds
cmp
xorb
icebp
jmp
pusha
sbb
out
aas
cld
sub
clc
xor
out
pusha
dec
inc
push
cld
loopne
xchg
push
push
aad
in
insl
and
scas
adc
fwait
dec
mov
mov
jmp
mov
jecxz
cvtdq2ps
arpl
mov
adc
cmp
mov
test
jnp
sbb
push
aaa
loopne
test
stos
mov
dec
ss
movsl
jg
and
dec
sub
jl
and
cli
fs
add
or
ds
nop
clc
shrl
pusha
cwtl
imul
sarl
cwtl
dec
push
mov
mov
push
add
ss
inc
lret
push
inc
les
sti
xor
int3
mov
mov
sbb
xor
add
bound
xor
outsb
daa
es
int
imull
ss
cli
mov
sbb
aas
in
xchg
ret
imul
jb
inc
jmp
mov
inc
mov
repz
jae
pop
xchg
cmpsb
cs
decb
arpl
pop
dec
and
jp
testb
mov
push
leave
push
jp
and
inc
jno
mov
mov
sub
and
test
pop
clc
push
mov
iret
mov
xor
lahf
loope
push
mov
ret
das
fwait
out
xlat
pop
mov
out
adc
xchg
and
das
ret
dec
out
jg
fstps
pop
pop
dec
add
mov
movzwl
mov
lods
adc
sbb
test
pop
cld
rcrl
inc
cmp
shll
aas
bound
jecxz
cs
inc
push
out
hlt
cmp
pushl
cltd
xchg
push
mov
imul
repz
mov
ds
push
aas
push
jp
cmc
push
push
hlt
cmc
sar
xchg
outsl
sub
mov
push
fcoml
test
mov
insl
or
push
sub
xor
dec
cmpsl
insl
and
out
loopne
cmp
mov
jb
jg
jb
jg
popa
add
xor
pusha
aaa
data16
movsb
insl
jmp
divl
imul
cmp
xchg
into
into
mov
and
pop
mov
jbe
fimuls
xor
daa
bnd
adc
jae
sbb
pusha
xchg
lahf
mov
call
aaa
push
or
cmp
mov
cld
js
inc
jbe
jne
aam
jae
aad
jno
shlb
mov
or
lret
inc
loopne
jge
data16
pop
int
lods
inc
or
mov
sbb
movsl
test
push
mov
add
inc
sub
push
fistps
rcrb
push
cmpl
xchg
xchg
scas
sahf
add
arpl
and
jmp
and
pushf
jle
addr16
inc
pop
sbb
fidivrs
jb
add
or
arpl
das
repz
hlt
call
in
dec
jmp
jl
aad
jne
into
mov
jle
into
enter
cmp
mov
cmc
cmp
cmpl
mov
inc
and
pop
sti
sbb
cltd
scas
test
jl
dec
mov
imul
mov
pop
xchg
push
adc
mov
loop
mov
inc
cltd
inc
into
in
xchg
ret
mov
outsl
sbb
add
sbb
popa
aam
or
push
les
or
push
shlb
pop
rcll
sbb
out
fnstcw
scas
add
mov
lret
mov
scas
and
mov
popf
fdivl
cltd
push
call
cs
push
ljmp
das
sbb
aas
adc
jno
jne
jl
hlt
scas
jmp
lods
mov
fiaddl
movsb
xchg
jg
and
not
fsubp
fidivrs
push
stos
ds
xchg
cmp
sbb
jle
add
fwait
sub
pop
push
adc
data16
cli
mov
cwtl
sarb
and
add
push
fildll
jl
out
jb
fwait
xchg
pushw
or
push
and
cmc
dec
cmp
mov
cld
stos
xor
pop
ret
pop
leave
lds
inc
mov
mov
mov
inc
sar
mov
mov
and
and
imul
cmpsb
cld
add
push
popa
xchg
inc
pop
fs
cld
into
dec
cmp
outsb
js
hlt
push
inc
clc
out
adc
icebp
or
add
adc
adc
lds
push
dec
mov
push
xchg
add
adc
out
add
dec
push
shlb
dec
pop
mov
sbb
sub
ja
stos
xchg
roll
jns
das
fisttps
sub
add
sbb
repz
in
mov
mov
stos
outsl
jmp
mov
add
jecxz
mov
xchg
jg
cmpsb
faddl
subl
jns
pop
xchg
and
pop
ljmp
aas
mov
add
je
aam
test
jmp
dec
aas
pop
hlt
mov
aad
nop
popf
xlat
push
jnp
or
insl
aas
orb
pop
adc
xchg
std
ds
cmpsl
sbb
jo
lds
and
scas
loopne
dec
scas
pop
imul
popa
mulb
rcrb
xchg
out
add
test
arpl
sbb
inc
loopne
cmp
int3
xchg
cmc
add
lret
stos
push
adc
cwtl
or
mov
call
push
cmp
insl
push
jmp
clc
cld
mov
dec
repnz
scas
xor
mov
les
xchg
pop
clc
mov
add
sub
cwtl
mov
mov
lods
mov
add
dec
inc
inc
sub
insb
test
insl
xchg
ret
shlb
or
pushf
adc
cmp
incl
sbb
popf
mov
test
cld
add
in
mov
pop
rcll
jo
xorl
push
mov
mov
pop
lock
ja
inc
mov
xor
repz
adc
xchg
xlat
inc
int
xor
outsb
lods
aad
mov
xorb
pop
cmp
lods
rcl
hlt
loop
rorb
movb
leave
ss
outsl
pop
or
in
repnz
inc
sbb
push
sarb
sbb
sahf
add
dec
movb
mov
shl
das
jle
loope
movsb
cwtl
lret
inc
mov
fsubr
jno,pn
clc
loopne
je
je,pt
mov
push
lret
mov
retw
cmp
mov
insb
in
push
fdivl
cmp
xor
lods
inc
jns
sbb
jo
arpl
jb
mov
shl
sarl
sub
mov
mov
addr16
mov
jae
jbe
arpl
daa
mov
jnp
dec
pop
test
dec
and
xchg
cli
jge
in
mov
std
scas
mov
jno
ss
fidivl
and
fwait
mov
sub
test
push
arpl
pop
pop
int3
sbb
les
mov
mov
mov
push
std
out
stc
imul
out
mov
push
out
push
mov
add
leave
cmp
mov
stc
pushf
ret
in
lret
movsl
outsl
cmp
xchg
add
or
sar
mov
pop
mov
fwait
mov
stos
lds
iret
dec
xor
xor
jne
push
sub
ficomps
fsubr
test
add
xlat
cwtl
mov
push
orb
movsl
aad
loope
jecxz
push
frstor
mov
mov
aad
das
arpl
mov
sub
mov
or
jle
push
dec
sbb
out
mov
insb
inc
ret
mov
push
sub
outsb
stos
movsl
adcb
jp
cmpsb
cmp
orl
dec
add
xchg
aas
mov
aad
xchg
sahf
popa
orb
mov
jl
push
mov
or
mov
pop
xor
loop
jbe
jge
mov
push
cmpsb
movq
inc
jb
add
mov
or
mov
pop
nop
movsl
lahf
test
jmp
fcomp
insb
sahf
lea
notl
movsb
mov
pop
lods
push
push
movsl
dec
mov
inc
add
das
cwtl
mov
mov
adc
pop
push
ret
xchg
aam
out
mov
mov
mov
xor
sti
outsb
jo
imul
mov
jo
popa
mov
sbb
sub
shr
push
repnz
add
in
xchg
pop
fmuls
cmp
jno
int3
std
xchg
pop
pop
cs
push
imul
push
jl
loope
lahf
andb
into
sbb
push
shll
sbb
dec
ljmp
push
imul
or
mov
and
xchg
scas
cltd
out
inc
rcrl
fs
shll
mov
dec
repz
stc
andl
cli
sub
dec
add
nop
pop
cwtl
fcompl
cmp
mov
out
cmp
push
or
lahf
cmp
sarb
aad
ds
aaa
iret
jecxz
mov
jp
loopne
aam
add
pop
or
pop
lcall
mov
popf
cwtl
dec
lahf
push
sbb
aam
in
dec
out
jge
test
cld
icebp
mov
xor
insl
test
mov
mov
in
test
mov
jl
sbbl
jno
inc
dec
push
shll
call
mov
adc
sbb
dec
lods
mov
ret
push
aas
cld
or
push
cmpl
adc
and
insl
movsb
xchg
fs
clc
push
imul
cmp
mov
mov
dec
sub
test
xchg
aaa
dec
fbld
xchg
inc
xchg
mov
fptan
adc
addl
add
outsb
lock
das
add
mov
inc
repz
pop
sti
sbb
xchg
repnz
pop
jb
sub
test
loop
enter
in
jg
sub
dec
pop
jp
push
xor
clc
xlat
jge
or
shrl
or
xchg
sbb
sub
push
push
stc
jo
stos
adc
rcrb
mov
lret
sbb
mov
or
mov
shrl
leave
rorl
jle
icebp
andb
outsl
call
cmp
outsl
in
in
inc
cli
fists
cmp
inc
mov
outsl
ds
and
jg
out
inc
cmp
repnz
xchg
add
or
sbb
mov
stos
sub
lret
stos
mov
rcll
scas
dec
ret
mov
and
fiadds
pop
xor
mov
adc
scas
sub
add
mov
je
add
pop
loopne
arpl
inc
lods
sub
ss
inc
stos
stos
and
mov
xor
insb
lret
gs
xchg
das
rorl
fdivrl
jge
mov
fbld
call
cltd
dec
xor
xor
cmpsl
pop
jbe
popa
gs
jmp
in
mov
push
out
arpl
push
inc
ret
sti
es
shlb
sti
rclb
fstpt
cld
sub
fbld
repnz
scas
xchg
mov
sub
hlt
cwtl
arpl
xchg
mov
repz
outsb
movzwl
loop
lret
pop
stos
pop
sbbl
lds
sub
in
adc
add
addr16
inc
adc
mov
cltd
fstp
ljmp
out
add
sbb
xor
ja
aad
or
jle
xchg
mov
in
dec
in
jo
dec
mov
repz
xor
add
push
es
pop
mov
leave
mov
bound
xlat
cmp
fisubrs
dec
rcrl
pop
roll
sahf
jle
adc
add
lretw
xchg
mov
outsb
jmp
xor
jnp
pop
es
repz
scas
xor
sbb
jle
jmp
leave
imul
fsubl
loope
rorb
mov
and
jns
sub
dec
stc
xchg
out
or
jecxz
mov
jnp
cmpsl
loopne
mov
jbe
mov
lret
jae
mov
cmpsb
shrb
dec
fwait
push
mov
movntq
incb
mov
push
dec
mov
adc
cmc
mov
cli
repnz
sub
cmpsl
sub
jmp
xchg
or
loope
pop
sarl
mov
test
imul
rcrl
addr16
popa
sbb
in
xchg
adc
scas
adc
xlat
xchg
cmp
test
gs
push
daa
lret
popa
popa
filds
xchg
fcmovb
stos
dec
inc
push
adc
dec
aad
nop
lret
in
mov
mov
cld
sti
and
and
xchg
sarl
sbb
lret
push
inc
lods
aaa
movsl
repnz
arpl
fstl
push
es
adc
outsl
mov
movsb
xchg
mov
adc
insb
adc
bts
or
and
fbld
pop
das
jle
out
xorb
fisubrs
lea
xchg
add
inc
xor
in
and
aad
push
call
cli
sbb
leave
lds
into
jl
lcall
cmp
fucomp
imul
adc
jne
ret
or
mul
mov
and
mov
and
dec
and
dec
repz
push
dec
adc
addr16
rolb
jne
mov
dec
lods
insl
jle
mov
loope
push
ja
out
sbb
aas
mov
fdivr
xchg
cwtl
mov
in
fdivp
ljmp
push
xor
imul
mov
outsl
dec
fsubr
pop
inc
xlat
push
pop
loopne
pop
into
lahf
cmp
xchg
inc
vmwrite
cmp
shll
jmp
jno
cli
push
cmc
hlt
rcl
test
lahf
and
lods
popa
jno
lcall
leave
mov
lcall
pop
aaa
cwtl
sbb
pop
insb
aam
sbb
mov
cli
int
outsl
xor
xor
inc
mov
outsb
mov
xchg
fsin
in
addr16
push
inc
jmp
sbb
mov
or
fcomps
loop
xchg
lds
mov
std
dec
pop
je
dec
add
adc
push
sbb
movsb
pusha
and
fs
mov
movsl
in
mov
mov
mov
test
jb
fsubs
xorb
dec
jmp
insl
dec
dec
mov
xchg
xlat
add
ret
les
shlb
xchg
cwtl
popf
into
sbbl
incb
sti
mov
cmpsb
clc
mov
mulb
loopne
push
or
push
xchg
clc
push
loope
fwait
mov
cli
mov
lahf
sahf
push
out
or
and
imul
xor
mov
adc
xlat
mov
and
out
push
xchg
or
bound
push
push
add
lcall
pop
sahf
daa
outsl
add
movsl
ret
fstpl
cmc
sbb
pusha
jg
test
imul
div
lea
out
lods
not
sbb
mov
xchg
xor
mov
icebp
pop
jmp
fldenv
rol
addl
adcl
dec
je
mov
mov
pop
adc
jecxz
cld
js
jge
adc
push
mov
loope
sahf
iret
sbb
into
int3
out
jg
mov
decl
outsb
push
std
push
popa
pop
xor
in
mov
and
mov
mov
mov
jecxz
clc
cwtl
fcompl
push
jmp
in
inc
mov
int3
and
stos
mov
lds
xor
mov
shufps
cmp
lcall
ljmp
aam
aam
add
and
arpl
enter
addr16
cwtl
or
lret
push
xor
jns
je
cmp
mov
inc
subb
xor
sbb
mov
rcll
pop
mov
mov
mov
mov
xchg
jmp
pop
std
xchg
ljmp
out
mov
pop
pop
xchg
or
ja
push
add
scas
sbb
sahf
pop
pop
push
mov
fbld
push
or
dec
adc
bound
in
and
leave
sub
dec
repz
mov
frstor
leave
loope
flds
neg
mov
ja
mov
fwait
popf
or
inc
mov
shlb
flds
movsb
popf
jge
mov
popf
xor
fistpll
xor
dec
enter
ja
insl
outsb
daa
ret
push
dec
sbb
les
pushf
jns
out
ja
mov
adc
aaa
orl
lahf
mov
push
sub
fsubrs
jmp
mov
push
inc
and
int3
jle
movsb
adc
cmp
dec
das
dec
loope
inc
or
sub
jecxz
inc
data16
xor
push
cld
sbb
mov
xlat
xchg
out
loop
cmp
out
sub
jge
push
jnp
add
and
jmp
fdivs
or
jno
lea
jno
push
insl
pop
xchg
mov
dec
adc
xchg
cmp
out
leave
mov
push
daa
das
mov
inc
loope
cltd
sarb
in
pop
movsb
and
inc
je
testl
pop
lods
push
aaa
mov
in
mov
inc
imul
cmp
jae
adc
add
or
xor
scas
into
adc
shrb
jg
aaa
pop
jmp
dec
sub
in
fistps
xor
stos
inc
dec
sbb
xchg
push
cmp
cmp
adc
sti
or
push
sbb
arpl
movsb
shlb
repnz
adc
bound
dec
mov
stos
addr16
subb
mov
fnstenv
bound
mov
sbb
mul
mov
ds
xor
stos
ljmp
or
sub
pop
aam
ds
cmp
in
xlat
dec
jae
enter
or
cltd
cmp
sti
jg
repz
ret
rclb
pop
or
dec
xor
add
cmp
stos
fldl
iret
popf
shrb
test
bnd
dec
dec
pop
ja
sbb
xor
das
pushf
pop
adc
mov
out
in
mov
repz
inc
jne
push
cmp
ja
pop
sbb
push
das
inc
aam
stc
test
in
pop
aaa
int
or
scas
data16
cmc
addr16
pop
mov
xchg
push
icebp
add
mov
xchg
pop
pop
test
lahf
mov
jns
into
pop
sbb
sbb
ror
andb
mov
test
insl
inc
in
mov
fs
out
sub
cmp
cli
mov
mov
jmp
aam
push
inc
jae
aaa
mov
in
lret
lahf
fimull
mov
ljmp
sub
xchg
out
jns
lods
inc
mov
add
push
mov
in
adc
shrb
mov
jne
mov
loop
ds
ret
cs
movsl
insl
mov
arpl
loope
lcall
sub
test
and
lret
ret
or
fnstsw
or
or
fndisi(8087
frstor
lock
sbb
pop
insl
cmpsb
sarb
fs
xlat
rorl
std
sub
jbe
js
scas
je
xchg
sub
addr16
dec
xor
andl
test
push
dec
div
hlt
hlt
ret
push
add
int3
and
sbb
push
push
mov
push
mov
aaa
pop
xlat
js
mov
adc
movsb
and
mov
fwait
sub
daa
insl
outsl
jnp
scas
pop
pusha
cmp
dec
xor
jno
scas
imul
les
sub
std
jl
pop
out
sbb
movsl
mov
mov
in
adc
push
mov
hlt
add
dec
add
repnz
cmp
in
ljmp
xchg
mov
retw
push
repz
scas
hlt
mov
sub
push
adc
andl
xchg
test
sub
adc
loope
xor
lds
nop
mov
mov
or
sbb
lods
aad
and
pop
repnz
mov
add
xchg
stc
xor
dec
mov
es
cmp
push
mov
xor
sti
mov
or
cmp
subb
mov
push
repnz
fnstenv
nop
je
aam
jle
inc
lods
imul
sub
scas
insb
push
loopne
popa
fdivrl
push
cmpl
sbb
fisttpl
inc
mov
fisubl
or
fdivrl
mov
test
repnz
enter
les
push
ljmp
cmpsb
pop
lods
jbe
sbb
xchg
add
int3
sub
jb
push
test
data16
cwtl
into
sbb
jnp
out
sbb
add
sub
xchg
push
pushf
int3
add
call
or
adc
inc
adc
ds
outsb
pop
pop
xchg
add
div
dec
ds
xor
pop
jp
stos
rorb
mov
popa
shrb
mov
std
jle
cli
insl
out
scas
into
xor
lods
inc
jp
movsb
mov
es
push
and
jle
dec
mov
fmuls
xchg
test
clc
inc
mov
ss
movsb
scas
push
mov
sbbl
inc
sbb
cmc
mov
imul
mov
aaa
jge
shll
mov
incb
stos
pop
out
mov
sbb
outsl
sbb
lret
js
lods
add
pusha
lret
rorl
leave
out
sub
aad
adc
jne
fsubrs
xor
inc
and
sarb
and
fs
pop
int
mov
and
push
out
bound
push
pushf
lcall
sti
pushf
aad
and
cmc
aam
cmp
pop
push
or
sbb
jecxz
xor
pop
mov
cli
call
call
idivb
dec
push
dec
fisttpl
jl
fidivs
mov
mov
or
fstpt
shrb
xchg
out
in
pop
cmp
and
and
adc
cmpsb
mov
fcomip
lret
xlat
xchg
inc
push
xor
add
testb
aaa
push
adc
adc
shll
test
nop
jecxz
mov
mov
mov
and
xchg
daa
mov
scas
pop
mov
mov
and
int3
fsubrp
and
add
dec
fsubr
sbb
popa
aas
imul
pushf
jb
fcom
lock
outsl
dec
sarl
cmp
pop
ret
popa
adc
ret
cmp
push
cmp
push
fistps
xor
lret
add
push
jge
jns
pop
fwait
push
xchg
or
mov
insl
adc
movsb
pop
cmovne
sbb
loop
mov
push
and
mov
fdivl
mov
rclb
dec
push
xor
in
out
movsl
inc
sbb
push
jge
mov
and
lcall
fwait
es
sbb
push
pop
scas
cmp
sbb
pop
and
loop
push
lds
xchg
out
mov
and
jmp
repz
pop
inc
bound
subl
sahf
or
add
sub
mov
cmpsl
pop
mov
xlat
mov
sti
repnz
out
scas
add
xchg
js
sub
gs
addr16
cmc
mov
repnz
pop
cmpsb
popf
jg
in
jp
and
inc
mov
xchg
mov
xchg
hlt
mov
or
arpl
inc
xor
inc
push
sbb
jmp
xor
cmp
js
fldt
and
sub
rclb
outsb
iret
in
jno
mov
pop
sub
fldl
mov
bound
sub
repnz
out
insb
movsl
and
sub
shrb
out
mov
cli
jp
cmp
push
adc
lock
fwait
pop
or
dec
sbb
add
xchg
in
movsl
enter
xor
lret
pop
jl
in
cwtl
popf
filds
jbe
adc
dec
lods
stos
test
repz
inc
dec
aam
test
jno
push
mov
ret
lods
or
ret
and
pushl
mov
jg
pop
jp
or
in
ret
lds
inc
cld
sti
les
sub
jae
iret
xor
jns
iret
es
jne
push
mov
mov
mov
jmp
mov
dec
imul
aam
loopne
dec
mov
xor
call
xchg
sbb
popf
or
hlt
pop
add
xchg
rorb
pop
call
aas
aad
mov
repz
test
jno
and
adc
and
outsl
fs
fsubs
cmp
mov
jl,pt
jge
les
add
int
movntq
out
sub
sub
cmpsl
daa
jbe
data16
clc
bound
cld
xchg
mov
mov
jmp
mov
lahf
dec
mov
mov
lods
and
sub
push
dec
cmp
sub
js
gs
jmp
rorl
mov
nop
mov
push
xor
jge
aas
and
sbb
pop
iret
repnz
mov
pop
xor
jae
cmp
sbb
loop
les
dec
mov
push
xchg
lcall
inc
nop
push
xchg
movsl
lods
fmull
add
inc
mov
fs
xor
mov
stos
cmp
dec
inc
lock
inc
hlt
and
aas
popf
nop
sbb
push
push
ss
imul
pop
out
push
lret
sbb
test
adc
sub
mov
mov
ret
popa
aaa
adc
dec
loope
mov
in
pop
ja
imul
out
mov
into
jae
ja
in
xchg
pop
xchg
push
adc
mov
cmp
dec
xchg
dec
dec
shlb
outsb
and
in
scas
inc
fbstp
jns
insb
int3
pushf
adc
test
adc
xchg
push
pop
push
icebp
sub
pusha
or
pushf
xchg
ljmp
cmp
sub
sub
out
xor
scas
mov
test
in
mov
out
jmp
rcrb
movsl
aad
ljmp
inc
inc
ljmp
aam
pop
mov
sub
and
roll
fcoms
clc
cmp
xor
les
out
test
decl
lds
jb
loope,pt
mov
xor
mov
test
lods
xor
cld
loop
imul
sti
add
dec
fidivrs
mov
add
jg
bound
dec
fnsave
pop
cmp
test
je
xchg
xchg
mov
and
pop
scas
mov
in
shl
cmove
imul
pushf
mov
std
mov
imul
xlat
xor
mov
mov
and
or
xor
lds
shr
jae
ja
pop
mov
movsl
fstps
outsl
mov
jg
dec
jecxz
dec
mov
xchg
mov
xor
mov
insl
shlb
cmp
cmpsb
out
xorb
jns
jecxz
push
sarb
inc
dec
addr16
out
or
sub
jns
jmp
fcmove
inc
scas
ljmp
jno
mov
pop
mov
and
ds
sti
ret
and
nop
or
push
nop
inc
jp
sub
incb
xchg
sub
repnz
ss
xchg
fwait
das
sub
es
cmp
repz
xlat
into
pop
adc
out
int
cmp
inc
lock
repz
mov
push
fstpt
pop
pusha
inc
sti
add
cmp
push
jnp
jmp
aas
xor
into
loopne
lret
decb
mov
fnstcw
sub
movsb
nop
mov
push
xchg
lahf
mov
cmp
xchg
or
xor
hlt
pop
cli
or
adc
jge
frstor
mov
xor
jns
cwtl
mov
stc
mov
pushf
and
push
int
es
je
stos
gs
sbb
adc
jns
inc
push
repnz
mov
js
fisttpl
adc
lcall
or
lahf
add
dec
add
fisubrl
mov
cmp
pop
fsubrl
stc
stos
cmp
jne
jb
jne
in
outsb
pop
xchg
js
xor
push
xlat
dec
adc
mov
pop
pop
pop
pop
loopne
or
inc
loope
mov
ja
dec
pusha
arpl
outsb
pusha
pop
call
dec
enter
inc
dec
jo
lods
cmp
jge
sbb
jp
jae
in
stos
mov
mov
iret
idivl
lahf
pop
pop
adc
jo
arpl
stos
pop
loopne
mov
rcrl
fsubr
pop
add
stos
imul
test
push
or
out
call
xchg
mov
sarl
adc
fadds
xlat
sub
in
xchg
xchg
mov
jle
mov
and
inc
sbb
xchg
rcrb
cmp
repz
push
das
pop
ret
or
data16
pop
and
add
test
and
ret
dec
test
pop
mov
lds
mov
xchg
push
cs
js
pop
inc
test
in
mov
push
xchg
adc
ss
xor
std
sbb
gs
faddl
cmp
fldz
test
sub
dec
sbb
ja
sbb
loop
mov
lcall
xor
push
les
lods
int
pop
and
gs
or
ss
outsl
rcl
cmp
pop
js
mov
jnp
repz
daa
and
sub
std
jnp
notb
mov
xchg
imul
add
bound
cmpb
int
cwtl
filds
xchg
aad
lret
mov
ljmp
sbb
lods
xchg
adc
cmp
les
je
lods
outsl
add
adc
mov
ss
adc
aaa
jle
inc
loop
hlt
int3
cli
cwtl
jle
cmp
aad
mov
subl
lret
sbb
and
cld
pop
add
inc
cmp
xchg
mov
cmp
in
movsl
loope
into
loope
cwtl
and
shl
xlat
in
xchg
mov
aam
out
fsub
add
cmc
push
mov
xchg
or
lds
lea
pusha
add
lds
fs
xchg
fstp
ds
pushf
stos
xor
cltd
xchg
ja
xor
xor
mov
hlt
push
cmc
mov
in
add
mov
mov
cld
adc
dec
shll
aad
push
stc
dec
cmp
sub
stos
jne
in
daa
lcall
pop
mov
es
sub
pop
push
jge
mov
push
jne
outsb
pusha
push
pop
inc
cltd
pop
or
cmp
in
outsb
cmp
jne
push
rcrl
mov
mov
subl
jae
shlb
sub
and
xlat
jl
in
mov
push
ljmp
out
dec
mov
sbb
add
loop
fisubl
sub
stos
loopne
insb
and
loopne
dec
lods
sti
mov
andb
inc
inc
jp
add
jg
cld
add
cmpsl
add
cmp
or
dec
xchg
mov
fwait
and
sbb
mov
jbe
and
push
dec
inc
sub
test
inc
xorl
aam
jecxz
or
mov
mov
mov
inc
xchg
pop
adc
or
mov
mov
int
js
frstor
shlb
enter
mov
stos
cmc
into
dec
mov
scas
mov
sub
xchg
repz
push
jno
mov
addb
pop
mov
fmul
fisttps
pop
sub
or
ljmp
xor
daa
pop
ret
cmp
push
repnz
or
pop
xchg
pop
xchg
sbb
addl
pop
push
add
scas
mov
stc
jmp
ss
sbb
mov
xchg
add
out
dec
fs
or
addr16
sbb
xchg
sarl
sub
or
out
xchg
cmp
cmp
aad
fwait
jp
sub
stos
frstor
lods
sbb
xchg
dec
ljmp
pop
les
das
hlt
addb
mov
add
jmp
adc
shrl
add
dec
push
xchg
cmp
push
dec
xor
mov
pop
mov
push
fisttpl
push
xchg
call
xchg
push
imul
mov
outsb
sbb
mov
and
push
bound
lods
mov
aas
dec
xchg
adc
sub
add
ja
pop
adcl
inc
inc
dec
pop
sahf
nop
inc
mov
es
fistpll
jg
jl
fwait
cmp
inc
or
mov
lsl
lods
test
data16
xchg
push
popa
leave
jecxz
sub
insb
xor
and
xchg
add
fnstenv
into
xchg
mov
inc
cs
fisttpll
mov
sbb
js
mov
xchg
jae
cltd
outsl
or
mov
or
jne
xchg
push
dec
cltd
cmpsb
cmp
mov
sbb
aaa
push
bound
or
leave
test
aaa
xor
push
and
add
in
fdivr
loopne
andl
cmp
jno
mov
inc
adc
loope
int3
and
shll
leave
pop
adc
mov
mov
mov
addb
cld
push
push
lds
ljmp
mov
pushf
push
dec
lret
aaa
mov
cmp
mov
sbb
push
push
push
dec
scas
cmc
mov
out
sbb
pop
xor
sub
add
repnz
je
jne
xchg
imul
dec
pop
lods
loope
cmp
xchg
insl
mov
pusha
xchg
mov
sbbb
dec
xchg
out
add
repz
sar
xor
stos
out
xchg
iret
mov
jb
xor
fs
cmpb
pusha
out
repz
in
cmp
or
mov
jl
and
popa
lods
mov
cmovnp
test
outsl
jo
insb
or
fdivl
icebp
push
test
pop
clc
sbb
mov
sbb
fimuls
insl
out
int3
fcomp
and
xchg
dec
cmp
adc
dec
sbb
mov
hlt
out
lea
cmp
mov
cld
sub
idiv
and
sbb
in
xchg
mov
in
lods
sub
pxor
inc
nop
les
aas
or
pop
cwtl
insl
and
imul
pop
ss
mov
faddl
out
add
call
mov
int
fcmovu
lods
imul
rcll
scas
adc
adc
xchg
mov
daa
add
and
outsb
inc
dec
lret
dec
mov
testb
push
outsl
loop
adc
fcmovnbe
in
sbb
mov
xor
xor
out
mov
movsl
fisubrs
test
pop
push
fcompl
arpl
testl
sbb
sub
mov
push
mov
mov
stos
idiv
dec
gs
dec
sub
mov
test
cmpsb
add
sbb
in
mov
and
add
mov
stos
mov
xchg
jno
ss
cli
and
and
add
pop
jg
inc
xchg
clc
aas
adc
adc
dec
pop
pop
pop
lock
popa
ficoml
dec
stc
adc
sbb
xchg
in
test
lods
imul
mov
gs
nop
jae
push
xor
or
inc
push
cmpsb
jg
shll
lods
lock
add
cmp
insb
cld
jbe
xor
ss
lods
loope
or
jmp
dec
mov
jg
dec
js
pop
mov
ss
jae
fcomip
leave
es
and
add
fsts
push
mov
js
frstor
cmp
jmp
sub
clc
ret
add
stos
out
push
scas
mov
inc
ret
inc
xchg
or
cmp
jo
pop
aad
and
mov
pop
jle
scas
js
push
bound
jno
bswap
inc
scas
pop
in
scas
xchg
arpl
jmp
mov
push
cmpsl
je
cmpsl
out
sahf
push
sti
push
loopne
out
inc
js
sub
ss
dec
imul
fimull
orl
or
pop
mov
jo
insb
call
sub
sub
dec
jbe
adc
stos
rcrb
sub
mov
pop
enter
fadds
mov
pop
aas
inc
pop
mov
pushf
inc
outsb
int3
test
test
inc
pop
adc
call
inc
cmc
or
dec
pop
les
je
dec
cmp
pop
ret
int
xchg
testl
enter
fldl
push
aad
cmp
scas
mov
cwtl
jbe
fimull
push
test
ds
mov
ret
xlat
lock
fwait
loop
pop
stos
out
pop
pop
inc
in
test
push
das
das
dec
mov
and
lcall
dec
pop
ds
jae
pop
dec
cmp
int3
rcrb
in
xchg
inc
jno
or
jge
es
cli
jno
in
ds
insb
cmpl
les
int
add
sbb
fcmovbe
push
push
push
jmp
cmp
lods
xchg
and
data16
xchg
sub
imul
xor
mov
sub
sbb
sti
add
shll
mov
inc
cltd
ret
stos
jae
pop
add
aam
imul
mov
scas
mov
mov
cmp
imul
cmp
jo
imul
out
xor
pop
aas
daa
jno
jbe
jns
sbb
pop
gs
loop
and
push
dec
pop
mov
test
jns
inc
icebp
xchg
sub
lds
out
xchg
subb
pop
fisubs
test
jg
daa
imulb
xchg
in
add
lret
fsubrl
push
xor
mov
adc
fdivrp
lret
mov
xor
jns
dec
push
xchg
sub
leave
fisubl
xchg
loope
fld
fadd
sbbb
pop
imul
mov
mov
outsb
dec
cwtl
dec
stos
out
fwait
aas
in
fs
cmp
xchg
lds
mov
push
fists
dec
fdivrl
dec
adc
cmpsb
mov
dec
pop
sbb
es
or
push
movsl
inc
orl
inc
stos
mov
xlat
loop
cwtl
push
pop
and
sbb
inc
aad
fcoml
pop
mov
in
adc
inc
aaa
mov
push
lds
or
pop
push
xchg
insb
push
cs
aas
pminub
int
mov
dec
cmp
out
ds
sarb
lcall
xchg
jne
pop
sub
ret
daa
cld
add
xlat
iret
mov
int
sbb
sub
mov
inc
cmp
pop
fidivrl
into
inc
sti
mov
daa
jb
cmp
ret
dec
mov
mov
test
push
outsb
inc
sbb
imul
pop
es
pop
sbb
adc
jmp
sbb
mov
sbb
cmp
ror
pop
cmp
or
sti
loopne
jb
in
mov
lahf
out
into
cltd
popf
jno
and
sar
idivl
fs
sub
xchg
cmp
push
pop
and
pop
or
das
out
fistl
out
cmp
add
iret
xor
andb
xchg
jns
mov
jecxz
and
push
push
adc
sti
add
aam
xor
test
aas
mov
cmpsb
sarl
dec
adc
pop
push
imul
aas
mov
stos
push
or
sub
add
add
icebp
sbb
pop
lea
sbb
jecxz
insl
pop
int3
lods
in
das
jb
mov
in
xchg
add
mov
push
sub
les
in
mov
and
xchg
rcr
sarb
cwtl
jg
push
lods
imul
xlat
mov
add
mulb
push
idiv
stos
mov
fidivrl
cltd
lahf
popf
sbb
pusha
or
cld
xchg
leave
or
stos
mov
pusha
mov
mov
outsb
pop
decl
ret
jl
sub
sahf
rcll
mov
in
cltd
repnz
popa
add
and
sub
mov
inc
mov
int3
mov
push
lahf
insl
je
pop
or
imul
cld
and
adc
mov
and
pop
dec
fwait
aaa
lods
mov
pop
lret
lret
adc
div
gs
sub
adc
cld
pop
inc
xchg
stc
ljmp
lds
push
mov
jle
jae
in
in
out
sbb
mov
sub
xor
inc
lea
push
cmp
adc
stc
les
pushf
add
lret
stc
mov
inc
fs
lcall
jmp
add
insb
leave
enter
pop
pop
pop
shl
pop
jne
mov
sub
mov
fs
cmp
xchg
decl
jno
push
dec
icebp
adc
push
aam
in
jno
jp
sarl
icebp
dec
adc
in
sbb
sbb
mov
mov
add
ret
scas
xchg
pushf
sub
rcrb
int3
jg
shlb
lds
inc
mov
in
outsb
movsl
adc
inc
lret
mov
inc
ljmp
pop
jp
pop
test
sub
rcrb
mov
push
adc
das
mov
cltd
fisubl
inc
pop
cmc
pop
xchg
pop
and
sub
and
das
xchg
cli
xor
dec
call
cmp
and
rolb
jns
hlt
add
mov
mov
mov
lcall
jl
call
ljmp
repz
jg
loope
mov
ret
xor
and
call
sarl
cmp
pop
andb
out
in
sbb
mov
add
into
xor
add
dec
push
aas
lock
cmc
mov
insl
insb
adc
imul
mov
jne
cmpsl
ret
iret
jb
std
int3
sub
fcompl
adc
rol
and
sti
adc
pop
cmp
jae
jbe
outsb
xlat
jle
pop
cld
cmpsl
test
mov
adc
xor
mov
push
inc
mov
in
neg
test
ljmp
in
mov
push
int
jo
inc
bnd
daa
ja
cld
jp
cmp
or
shrb
mov
push
in
cmp
ds
add
popf
sbb
jmp
dec
dec
xchg
sub
in
add
push
movsb
data16
and
pop
jge
fsubl
lret
and
out
add
shll
jecxz
push
insl
dec
testb
dec
xchg
stos
clc
cmp
cmp
dec
out
jno
insl
pop
insb
dec
loopne
sbb
or
jecxz
ret
sub
mov
fists
ret
icebp
mov
cmc
add
push
inc
pop
mov
jmp
xchg
das
cmp
mov
inc
pop
ret
rorb
inc
fs
sbb
push
fucom
or
inc
hlt
outsb
xchg
lret
das
out
sarw
ljmp
jl
push
bound
mov
popa
out
sub
imul
add
push
mov
cwtl
adc
cmp
hlt
stc
push
ret
aaa
xchg
ret
push
out
stc
xor
cld
out
adc
add
shll
mov
pusha
adc
xchg
cmc
and
cmp
mov
into
or
pop
jmp
push
or
repnz
addb
lahf
stos
inc
enter
mov
insb
fimull
popa
daa
mov
pop
pusha
loop
mulb
decb
push
sbb
cmpsl
push
mov
cmc
mov
fs
test
into
push
xchg
rclb
or
js
test
pop
and
int
insl
or
in
das
pop
decb
dec
dec
cmp
pop
mov
pop
xchg
lcall
out
aam
pop
or
lock
jecxz
mov
xorl
sbb
addr16
jae
add
pop
push
pop
and
inc
js
lret
gs
loope
bts
dec
xor
ja
ljmp
cmc
lea
push
fs
lret
iret
xor
xchg
pop
jmp
add
out
adc
outsb
inc
insb
sub
push
fnstsw
cwtl
outsl
mov
movsl
jno
dec
mov
out
push
mov
inc
fsubl
push
icebp
xchg
xor
lcall
fnstcw
and
mov
aas
push
mov
dec
in
add
repnz
add
xchg
ficoml
jae
push
cs
es
std
add
jne
push
lret
add
stos
stos
and
lds
cmp
enter
inc
stos
imul
mov
mov
or
bnd
into
jns
lret
fdivs
or
ret
mov
fsts
sbb
ret
lahf
pop
frstor
loopne
imulb
pop
jmp
call
sbb
or
push
xchg
orl
call
pop
jge
stos
dec
push
jp
sub
subl
aad
add
fstpt
push
sub
in
sub
jo
pop
lods
les
movb
test
adc
mov
push
repnz
push
test
xchg
mov
mov
or
sub
mov
push
mov
add
adc
pop
aaa
rclb
lods
xchg
cmpsb
aad
ret
mov
xchg
inc
jb
mov
inc
in
ret
and
cmp
push
mov
push
fwait
mov
or
test
sub
jl
and
xor
cmp
pop
push
lret
push
rcll
mov
jg
sbb
test
xorl
xor
sub
cmp
mov
dec
adc
cmp
popl
push
cwtl
dec
sub
in
pop
ljmp
or
jnp
daa
xchg
dec
pop
fists
test
jbe
sub
dec
pop
fistpl
popf
xchg
jne
pop
scas
stc
scas
fwait
out
out
arpl
or
xchg
and
shll
mov
imulb
ss
imul
les
shl
das
mov
xor
mov
mov
xor
pop
mov
mov
popf
push
icebp
pop
or
xor
xchg
imul
icebp
adc
sbb
inc
push
mov
and
push
sub
es
cltd
test
scas
lcall
es
jle
mov
ljmp
int3
xorl
shll
adc
aad
or
cmp
jb
sub
sti
call
mov
jl
enter
insl
fisubl
add
aaa
dec
or
mov
mov
cmc
xor
xor
jle
sbb
sti
jmp
jns
xor
dec
adc
js
mov
adc
jno
or
popa
lret
adc
xor
cmpsl
pop
loopne
xchg
insb
lock
fldcw
pop
adc
jo
or
lods
push
and
test
repnz
mov
jae
adc
inc
cmp
out
stc
jge
int3
int3
pop
adc
pop
cmpsl
lret
xor
sbb
sbb
fdivl
int
hlt
jp
xchg
test
pop
dec
inc
cs
dec
out
xor
insb
inc
mov
sub
pop
popf
sub
mov
jbe
jle
dec
and
push
mov
les
imul
mov
cmpb
fs
std
dec
hlt
sub
and
jbe
mov
shlb
xchg
sub
push
adc
scas
hlt
mov
ljmp
jae
add
jno
adc
out
jmp
dec
mov
test
int3
xor
xlat
div
bnd
in
sbb
stos
or
dec
mov
adc
pop
shl
xchg
sbb
insb
stos
inc
add
and
and
mov
mov
lret
xchg
xlat
sti
dec
lea
mov
or
pop
jno
pop
dec
rclb
or
xor
xchg
push
or
data16
popf
repnz
xchg
sbb
xchg
cld
sbb
cmc
mov
ljmp
jnp
loopne
addr16
xor
fisttpll
movsl
and
int
jmp
shlb
cmpsl
loope
and
mov
sbb
mov
rolb
lods
xor
decl
jl
push
lds
dec
lret
jle
int
lea
clc
inc
incl
xchg
rcrl
push
inc
pushf
push
gs
sub
cs
lods
dec
cmpsb
mov
jnp
adc
out
xor
mov
aas
clc
sbbb
inc
loope
sahf
mov
stos
jnp
sahf
adc
inc
int
xor
adc
add
or
mov
pop
pop
jbe
mov
pop
imul
sbbb
and
and
stos
add
ja
and
jbe
repnz
rol
dec
movsl
and
xchg
test
sbb
push
push
mov
pop
movsl
pop
out
movsl
sub
icebp
mov
in
sbb
mov
sub
scas
mov
xchg
in
pusha
movsl
cli
add
sbb
hlt
jge
push
or
push
pop
lcall
and
cmp
push
dec
imul
test
outsb
mov
push
sbb
and
aas
lods
jbe
mov
jae
fsts
or
jns
fsubrs
jae
or
inc
cli
or
pop
insl
sbb
jge
out
popf
or
mov
sbb
test
mov
add
ret
xor
jmp
loope
scas
les
jne
and
orb
jmp
rcpps
rcrb
mov
sub
and
pop
cmpsb
rclb
outsl
push
mov
out
int
sbb
in
sbb
lock
sbb
xlat
push
rcl
sbb
inc
ret
sub
stos
or
xchg
popf
popf
in
cmc
xor
adcb
mov
test
adc
test
dec
in
mov
decl
pushf
xchg
movsl
pop
into
cmp
ljmp
jbe
orl
adc
or
adc
xorb
lods
mov
jmp
xlat
xor
fsubs
sar
loopne
loop
jmp
inc
test
mov
scas
push
movsb
jg
xchg
test
xchg
xchg
fwait
mov
sbb
xchg
mov
jno
jge
ljmp
mov
clc
push
or
scas
daa
leave
decl
sub
adcl
lock
cmp
dec
xor
mov
ss
clc
outsb
dec
lds
lret
fadds
mov
cli
outsl
push
ret
ret
sub
inc
pop
les
cld
int3
ljmp
out
mull
lcall
cvtdq2ps
adc
or
adc
iret
sub
cltd
pop
sarb
push
jle
in
sbb
mov
iret
pop
stc
sub
sbbb
xchg
pop
or
int3
pop
or
sarl
jne
jl
mov
lds
in
int
fstpl
pop
stos
xorb
or
mov
les
cmc
scas
lret
pop
shlb
pop
rcrb
jnp
daa
inc
xchg
punpcklbw
in
push
negl
lock
xchg
add
fwait
test
lods
int3
jns
or
insb
and
adc
inc
inc
jnp
dec
mov
mov
or
xchg
push
or
scas
adc
stc
aad
mov
out
sub
rcll
mov
loopne
cmp
outsb
mov
cmp
and
mov
jecxz
sub
movsb
mov
mov
fidivs
xor
dec
dec
in
fcmovne
test
or
rcl
lahf
inc
movsl
inc
lock
imull
jnp
xor
into
inc
mov
adc
and
ror
stos
mov
mov
mov
movsl
cmc
movsl
nop
outsb
sub
cmpsb
jle
mov
aad
outsl
bnd
std
mov
xor
jns
es
sub
das
dec
loope
ljmp
inc
cmp
fucomp
movsb
inc
mov
rorl
fs
dec
adc
rcrl
fistl
add
push
mov
rolb
addb
hlt
xchg
insb
cmp
test
mov
test
mov
clc
lods
in
sbb
or
cmp
ja
clc
clc
push
xchg
xchg
inc
cli
lds
lock
cmpsb
pop
mov
adcb
out
aas
sbb
lea
in
lds
shll
clc
btc
imull
cmp
xor
mov
xor
cmc
pop
call
jae
insl
push
push
or
jo
mov
inc
inc
inc
mov
adcb
pop
cmp
adc
fdivrl
mov
out
in
ficoms
loope
ljmp
sbbb
sbb
mov
aam
std
sahf
xor
sbb
pop
and
paddq
loop
inc
or
aad
xchg
je
fs
mov
inc
xchg
jo
imul
mov
ljmp
jmp
push
call
hlt
dec
jns
inc
sti
xor
mov
insb
fcoms
mov
mov
adc
mov
jle
adc
and
adc
jecxz
sahf
mov
movsb
mov
adc
sbb
scas
or
xchg
mov
sbb
in
cmpsl
cmc
mov
sbb
adc
jp
imul
jle
arpl
int
sub
push
frstor
stos
cmp
in
xor
xchg
aam
inc
cs
lret
sbb
ret
lea
xchg
mov
mov
subl
iret
jp
cmp
in
inc
mov
mov
jg
fwait
fwait
cmpsl
mov
jne
xor
pop
int
outsl
jp
fwait
push
push
xchg
std
incl
dec
jb
mov
adcb
mov
rolb
mov
int3
int
sub
call
cmp
jg
rclb
dec
or
pop
ja
pop
daa
lcall
stos
test
push
pop
cmc
shrl
pop
shlb
andb
or
mulb
mov
in
aad
mov
inc
insb
jno
arpl
lret
loopne
xlat
jno
inc
aaa
pop
and
sbb
notl
mov
or
idivb
ds
pop
cltd
hlt
ljmp
mov
inc
popf
stos
add
cmpsb
mov
pop
das
lds
pushf
jae
push
cld
lret
idiv
or
std
dec
mov
adc
or
push
jns
add
rclb
fistpl
out
inc
fisubs
sub
mov
cwtl
std
xchg
scas
ljmp
jae
jle
fiadds
psubsb
dec
pop
mov
sbb
mov
sbb
test
sub
jns
sub
mov
pop
inc
lock
movsl
adcl
add
clc
dec
xchg
out
test
stos
lods
repz
leave
pop
iret
in
repz
lods
jnp
imul
mov
sub
jp
stos
lods
adc
das
shlb
das
pop
push
mov
movsb
hlt
inc
jbe
sbb
outsb
loopne
add
loopne
or
nop
in
js
stc
call
ss
aaa
lret
out
scas
mov
dec
fsubrp
int3
out
jg
mov
adc
loop
push
pop
push
adc
dec
sbb
ds
ret
pop
sbb
xchg
scas
mov
push
mov
jnp
imul
subl
inc
outsb
in
add
xchg
mov
gs
frstor
push
mov
and
or
xchg
sub
ret
push
lods
stc
shll
stos
adc
sarb
dec
push
out
mov
iret
mov
mov
xorl
add
add
pop
andl
and
stos
add
sbb
clc
test
or
adc
hlt
addr16
add
sub
loopne
push
xor
adc
outsb
gs
inc
pop
cli
push
clc
mov
std
pop
pushf
jge
in
fwait
push
jle
or
out
jns
xlat
pop
or
push
cmp
fnstcw
dec
negb
lea
adc
push
push
neg
cmpsb
leave
loope
jo
sahf
mov
fs
pop
mov
adc
xchg
mov
push
add
scas
das
mov
cmp
dec
outsl
call
pop
les
ret
mov
inc
testb
fiadds
cltd
mov
icebp
adc
cs
pop
mov
add
mov
leave
mov
mov
cli
adc
mov
mov
ljmp
mov
nop
lock
mov
pop
cltd
pop
inc
xchg
jl
and
mov
imul
inc
popf
mov
les
inc
adc
call
imul
mov
in
jecxz
cmp
or
jmp
das
out
fidivrs
pusha
jecxz
int
jnp
adc
sbb
or
xchg
inc
lea
mov
lods
push
sahf
in
mov
pop
repz
xchg
in
push
call
pop
xorb
stos
xchg
mov
shlb
stos
jns
icebp
leave
ja
jp
and
jo
icebp
fstl
in
out
jmp
jg
dec
or
pop
pop
push
nop
cld
decb
or
jp
loope
jb
cli
je
cmp
or
jp
jo
pop
lret
outsl
popf
in
dec
cmp
jnp
dec
popa
dec
loopne
mov
pop
and
cmp
sub
ss
cmp
shl
xor
ja
xchg
stos
movsl
lahf
add
pop
mov
movsb
int3
icebp
imul
js
mov
sub
aaa
scas
lock
xchg
stos
stos
sub
lds
loopne
jmp
mov
sub
mov
xchg
cmp
adc
push
xchg
pop
lods
sub
stos
in
jle
ja
jp
sub
and
pop
xor
pop
mov
mov
push
jne
pop
xchg
add
push
loopne
add
aas
push
ret
push
xor
mov
je
jl
mov
mov
mov
jns
bt
jae
or
fdivp
push
loopne
sti
dec
sbbb
fcoml
pop
inc
enter
or
and
je
out
mov
shlb
ficoml
mov
push
mov
lea
in
cltd
leave
inc
dec
daa
lea
pop
in
sbb
jl
sub
jne
push
cli
or
adc
or
cmpsb
add
mov
adc
pop
sahf
sub
sarb
pop
hlt
mov
cli
mov
cwtl
xor
adcb
xor
sar
loopne
test
jbe
cmpsb
mov
dec
fidivrl
enter
lock
fwait
xchg
test
lea
aam
push
and
test
push
mov
lret
xchg
pusha
cmc
cmp
mov
lahf
add
jo
pop
cltd
stos
push
les
dec
shl
mov
enter
out
inc
sbb
mov
mov
adc
cmpsl
mov
push
push
lret
cmp
push
nop
testb
cwtl
inc
in
xor
sbb
sub
imul
aaa
jne
mov
sub
inc
addr16
insl
push
adc
mov
sarb
imulb
jl
fisttpll
pop
xor
jae
ljmp
or
lcall
cmp
cmp
pop
and
das
outsb
out
ja
adc
std
leave
sub
rclb
test
movsl
jl
daa
popa
sbb
stos
sti
jle
sbb
fdiv
out
inc
stc
xchg
push
in
lret
imul
dec
sub
int3
sbbb
jne
fsubrs
push
mov
or
sbb
ds
int3
mov
incl
ret
jnp
mov
mov
fistl
jnp
push
inc
mov
adc
ss
mov
roll
cmp
fbstp
mov
pop
pushf
ret
lea
fstl
daa
fstpl
dec
push
in
pop
bound
or
in
cmpsl
mov
push
call
or
test
jmp
dec
imul
xchg
fimull
je
add
sub
pop
mov
dec
push
cmp
mov
add
push
shrb
scas
xor
stos
test
test
int
or
inc
fs
mov
sub
into
dec
neg
or
fadds
adc
dec
loop
aaa
adc
lds
cmp
daa
xor
divb
mov
pop
imul
dec
sti
cmpsb
jno
js
inc
mov
sbb
xlat
mov
insl
push
push
xchg
cmp
lret
and
sbb
dec
ss
adcb
push
jb
shrb
in
lods
das
test
out
jl
cs
outsb
dec
movsb
lock
push
sub
sti
jnp
and
test
sbb
fstpl
xor
jbe
lcall
lds
jecxz
sahf
mov
in
lahf
incl
gs
decl
or
into
rolb
pop
cmp
add
xor
test
sub
sbb
outsl
daa
cmp
push
jle
push
inc
out
sub
pop
fmull
scas
sarb
insb
shrb
push
in
scas
cmp
add
xor
mov
dec
pop
mov
gs
lock
pop
lea
xchg
mov
mov
sbb
sbb
push
push
xchg
test
jno
add
popf
dec
cmpsl
or
inc
scas
xchg
iret
push
jae
pushl
addr16
testl
sub
iretw
rcll
roll
sbb
add
je
imul
divb
inc
out
in
sbb
sub
in
adc
repz
divb
outsb
sbb
or
jae
int
mov
push
inc
xchg
pop
adc
sahf
sub
in
nop
and
and
lods
inc
pop
adc
in
mov
fstpl
ss
mov
push
jnp
shlb
movsl
rorb
repz
pop
mov
ret
les
xlat
push
cmp
movsl
repz
mov
out
pop
or
std
pop
cmpsb
inc
rcpps
sbb
pop
pop
or
jae
les
adc
shl
fdivl
shlb
lahf
xchg
scas
sbb
mov
mov
cltd
cmpl
fsubrs
inc
cmp
fnstcw
add
aaa
pop
mov
fs
push
dec
lock
cmp
bound
aad
ret
std
movsl
out
push
adc
pusha
loope
xchg
or
insb
jle
nop/reserved
insb
inc
cld
cltd
xor
cmp
push
pop
adc
push
test
jl
lret
sub
inc
dec
mov
xor
or
orb
int3
dec
xchg
lds
push
and
pop
sub
push
lret
not
in
cmp
in
lea
xchg
aas
mov
add
xchg
les
jbe
mov
xor
decl
cwtl
roll
mov
cmp
test
push
jo
les
fadds
dec
push
sub
sub
aam
punpckldq
xor
addl
cltd
inc
mov
insl
dec
sub
rclb
xor
adc
fstpt
xchg
mov
fsts
and
int
jb
add
add
in
or
imul
divl
nop
fcompl
aaa
imul
lods
pusha
inc
push
imul
clc
xchg
in
sub
out
mov
sbb
and
adc
cmp
cmp
mov
push
inc
cmp
or
or
mov
call
cmp
insl
cs
mov
dec
pop
cmpsl
sub
std
pushf
ljmp
push
mov
push
scas
push
out
insl
int3
pop
inc
mov
mov
stc
add
in
int
push
lea
gs
fwait
ljmp
aas
das
mov
sub
pop
adc
int3
aas
pop
aam
add
call
and
or
fwait
add
aas
insl
sahf
fs
inc
shlb
lods
hlt
dec
cmp
fsubs
xlat
dec
mov
pop
fisubrs
add
fs
or
cmp
fldenv
jle
cltd
outsl
jmp
push
pop
inc
sbb
xor
sbb
int3
shlb
test
aam
mov
xor
mov
lea
int
mov
and
pop
movsl
test
sub
imul
repnz
dec
sub
lods
andl
or
in
rolb
ds
pop
aaa
stc
mov
fwait
push
subb
lret
mov
sub
mov
sub
shrl
test
fcoml
pop
push
nop
dec
or
adcl
cld
cmp
cmp
and
mov
enter
inc
jmp
inc
js
out
lea
mov
dec
jb
push
repz
outsb
dec
add
ss
js
jne
pop
jp
mov
dec
lods
mov
push
andl
test
mov
mov
cmpsb
scas
inc
jmp
and
pusha
inc
stos
cmp
fdiv
lods
fs
in
or
in
mov
xor
push
xor
xchg
frstor
pop
cmc
bound
mov
cmpsb
xor
ljmp
aas
sarl
lds
pop
cmp
int3
xchg
sbb
int3
daa
xor
bound
dec
xchg
pop
loopne
pusha
inc
mov
and
daa
pop
push
js
movsb
dec
pushf
leave
mov
inc
or
cli
cmp
jnp
lret
fs
push
andb
icebp
mov
jno
xchg
test
clc
pop
int
in
stos
cmpsb
in
inc
xlat
addl
shl
jb
mov
jo
leave
ret
pop
mov
pop
les
nop
jno
add
jp
ljmp
lods
cmp
inc
sbb
push
xor
xor
mov
pop
loop
into
mov
dec
mov
or
jl
inc
adc
and
insl
fnstenv
out
shl
decl
leave
popa
mov
sbb
sbb
or
int
adc
sbb
jnp
sti
mov
add
xchg
add
add
pop
sahf
xchg
jg
add
and
xchg
ljmp
jle
mov
pop
jmp
mov
pushf
leave
lock
jg
rol
inc
push
mov
shlb
push
fcoml
out
fcmovbe
data16
out
in
add
mov
or
shlb
pop
mov
cmp
fs
mov
sub
cmp
pop
mov
xchg
lds
lock
int
xor
sti
pop
or
mov
mov
cmp
loop
int3
sub
cltd
mov
dec
arpl
dec
adc
imul
clc
push
dec
movl
test
les
imul
outsl
loop
call
in
enter
ret
jns
das
mov
mov
aam
orb
pop
out
dec
fidivrl
data16
in
push
cmp
and
cmp
push
push
mov
jb
mov
movsb
icebp
pop
loope
mov
add
pop
pop
pop
mov
inc
cs
push
add
jae
inc
add
adc
or
fwait
sarl
and
les
and
xlat
int
sbb
inc
inc
icebp
sahf
adc
mov
xorl
jge
sub
push
xor
sahf
pop
aas
mov
add
out
and
lret
mov
jmp
inc
xchg
enter
cmpsb
loopne
mov
sub
lret
xchg
out
mov
inc
cmpsl
xor
sahf
xchg
adcb
enter
outsb
iret
fdiv
lcall
add
rclb
jns
cmp
inc
mov
mov
ja
mov
mov
pop
js
inc
ret
aas
inc
cltd
lods
loopne
jl
clc
mov
or
xchg
sbb
gs
dec
outsl
xor
sbb
ja
dec
repz
push
adc
shlb
lds
sbb
cmp
and
leave
cwtl
add
fdivrs
adc
jno
mov
cli
jb
notb
adc
mov
fidivs
rcl
vmovdqu
mov
adc
aam
clc
mov
popf
inc
notl
leave
xchg
pushf
add
dec
push
lock
pop
std
push
hlt
xor
and
in
lods
sbb
negl
push
add
xchg
sysret
data16
popf
sub
enter
imul
and
emms
aas
mov
into
int3
test
out
sbb
addl
push
cmpsb
leave
icebp
push
out
mov
mov
push
call
imul
jmp
inc
xchg
push
rorl
pop
inc
subl
pop
mov
cmc
mov
or
sbb
adcl
loope
lods
jge
test
dec
imul
xchg
clc
cwtl
andb
std
nop
data16
xorb
std
int
push
ret
outsb
popa
jecxz
mov
ljmp
cmpsb
push
hlt
sub
popa
dec
lock
std
imul
aad
jle
mov
cld
loope
cmpsl
adc
faddp
int3
pop
loope
sub
sub
adc
inc
or
xor
call
es
add
jne,pn
pop
pop
xchg
pop
jmp
dec
xlat
shlb
xchg
dec
xor
xchg
gs
arpl
notb
aas
jecxz
jp
adc
jg
or
sbb
xor
mov
sbb
mov
das
and
orb
mov
sbb
mov
shlb
test
jge
adc
adc
fwait
outsl
fisubrs
dec
call
enter
scas
sti
bswap
add
iret
mov
pop
push
inc
outsl
rcr
aaa
or
jne
scas
add
fdivl
jmp
xchg
shrb
in
push
cmp
mov
dec
pop
add
fs
pop
push
shll
xchg
js
xchg
fwait
xor
mov
fiaddl
lahf
mov
lcall
jge
xchg
jle
mov
xlat
lahf
inc
jo
sbb
dec
inc
push
jg
push
mov
sub
cmp
or
dec
push
jmp
imul
jmp
inc
push
popf
jno
in
dec
inc
jmp
push
in
fbld
jns
and
push
dec
and
es
sub
pop
adc
outsl
sbb
and
ss
lahf
dec
jmp
xchg
pop
mov
adc
lods
leave
inc
fxch
jmp
jmp
pop
sbb
xchg
jl
sti
cltd
daa
or
out
mov
test
ljmp
sub
jnp
icebp
enter
adc
cmp
sahf
xchg
mov
and
in
mov
push
sbb
mov
fcomps
int3
cmp
dec
add
lcall
jne
jbe
aas
and
sub
ja
pushf
xor
xchg
inc
dec
js
stos
jae
callw
es
xchg
stos
cmpsl
push
gs
cmp
sti
xor
add
pop
test
xorl
mov
adc
lret
xsave
int
gs
xchg
mov
fwait
lret
jecxz
cmc
inc
xchg
scas
dec
js
popa
ret
inc
insb
test
cmp
dec
jmp
pop
mov
loopne
movsl
pushf
je
pop
mov
mov
sub
push
pop
mov
xor
xchg
int
lods
mov
iret
inc
mov
mov
or
out
insl
sti
adc
xchg
and
das
mov
or
xor
mov
ficoms
add
add
sbb
dec
or
and
cmp
rep
push
push
mov
out
mov
mov
and
fwait
xor
stos
lret
jecxz
mov
mov
sarb
mov
push
aas
call
clc
sti
insb
cld
inc
mov
js
lods
inc
and
sbb
add
fstps
es
mov
movsb
fs
ss
inc
jge
jae
js
sarb
movsl
das
ds
outsl
jae
mov
xor
nop
push
pop
xchg
jnp
add
push
pop
fdivrl
clc
roll
dec
imul
fdivl
enter
cs
mov
jno
add
add
lcall
les
inc
rolb
and
mov
arpl
pop
popa
faddp
aam
fwait
xor
cmpsl
lods
iret
xchg
testb
pusha
fs
mov
inc
pop
clc
add
mov
outsb
pop
outsb
jle
fcompl
scas
lcall
or
cld
pop
stos
fdivrs
or
insl
xor
cmc
sbb
push
adc
rcr
lret
push
adc
jecxz
fs
hlt
lock
sub
lret
test
in
mov
sub
sbb
das
xor
mov
fdivl
xchg
lock
push
iret
in
or
scas
push
mov
imul
fnstsw
rolb
lret
cmpsl
and
bound
mov
rcll
imul
xor
enter
mov
mov
inc
movl
mov
dec
subb
fsts
pop
jb
adc
loopne
cmc
add
pushf
aas
mov
mov
sahf
cs
lcall
into
dec
sub
add
sub
emms
std
xor
shl
push
dec
ret
mov
dec
imul
cmp
sub
aas
sub
into
sbb
aad
jge
push
aaa
xchg
nop
pop
xchg
mov
cmp
sbb
into
leave
repz
shrd
xchg
push
nop
aad
adc
jmp
and
mov
or
adc
sbb
lahf
sub
gs
sbb
sub
in
jmp
cli
mov
sti
pushl
inc
xchg
adc
loopne
insb
push
mov
sbb
je
adc
gs
mov
clc
loopne
adc
mov
fwait
sub
push
pop
dec
push
cltd
aad
push
mov
mov
xor
xor
jae
clc
out
xor
sub
lret
shr
fisubl
inc
mov
cs
mov
or
mov
mov
hlt
jns
das
fucomip
lcall
cmp
push
mov
adc
enter
xchg
pop
cmp
sbb
out
mov
sub
fstpt
and
mov
stos
jp
sbb
xchg
jb
enter
pop
cmpsl
loopne
f2xm1
dec
data16
inc
flds
push
sbb
xor
shlb
push
ret
mov
jecxz
sbb
push
push
shl
es
lea
inc
xchg
jns
jp
add
scas
mov
jns
hlt
fildll
in
in
test
pop
sub
xchg
pop
adc
rclb
push
mov
fcoms
mov
cmpl
cmp
mov
aad
lds
lods
stos
pop
in
sahf
adc
pop
loop
nop
lahf
add
pop
mov
push
xlat
push
xor
icebp
or
dec
add
xor
or
mov
fildll
bound
or
jnp
fiaddl
and
into
das
data16
or
add
mov
les
and
out
shlb
xchg
pusha
jnp
pshufw
sbb
scas
xchg
mov
push
and
dec
cmp
ficoml
mov
lahf
test
add
stos
aad
clc
pop
sahf
test
inc
cs
pushf
pop
sti
push
push
int3
pop
cmc
daa
dec
pop
mov
xchg
cmp
ss
ja
adc
xor
pop
in
add
dec
fsubp
inc
ljmp
es
inc
adc
mov
jne
test
hlt
jae
movsl
add
dec
mov
out
and
nop
jg
pop
jecxz
inc
ljmp
test
and
jl
dec
sub
out
inc
xchg
mov
xchg
dec
adc
xchg
mov
leave
inc
cltd
fs
cmp
xchg
sub
inc
pop
lds
and
cltd
sub
sbb
fbstp
pop
icebp
movb
movsl
aad
mul
insb
cmc
or
xchg
cmp
pop
push
adc
stos
cmpsb
mov
lods
mov
das
loope
hlt
sbb
xchg
fsubrl
jbe
out
mov
xchg
subb
and
jno
es
movsl
or
jecxz
cmp
fstpl
sbb
adc
mov
cld
mov
mov
sbb
out
stos
adc
stos
jb
lock
popa
or
jge
rclb
iret
mov
mov
mov
jge
and
jmp
sbb
pop
cmp
push
and
jb
int
jnp
ja
bound
lods
mov
push
sub
jg
arpl
in
mov
mov
dec
xor
mov
add
or
mov
jne
int
sub
insl
inc
lock
in
ret
mov
sbb
cmc
sbb
inc
add
mov
test
int3
hlt
inc
or
int
test
imulb
lds
cmp
outsb
inc
adc
aaa
cmp
addr16
xchg
dec
pop
stos
rorl
xor
and
xor
cmc
push
arpl
cltd
add
xchg
scas
scas
cltd
fimuls
arpl
je
push
cmpsb
outsl
into
js
stos
cmp
in
std
loope
pop
nop
pop
lods
sub
mov
scas
xchg
aaa
and
sbb
lcall
test
repnz
cmp
das
or
clc
jns
push
jno
fnstenv
xor
xor
xchg
je
jle
adc
test
dec
mov
push
mov
sub
imul
inc
or
inc
inc
aaa
cmp
sub
inc
push
mov
mov
mov
sbb
mov
fwait
jmp
imul
pop
clc
and
xchg
cmc
loopne
cmp
sub
xchg
xchg
jecxz
mov
std
ret
xlat
mov
mov
mov
aad
je
mov
cmpsl
xchg
nop
sahf
jo
jnp
jmp
and
test
add
dec
sub
pop
ds
cmp
aaa
and
bound
jo
lds
popf
sub
pop
leave
mov
test
dec
jle
repz
pop
clc
sbb
pop
sbb
jae
daa
loop
les
jmp
fistps
and
add
movsl
jg
js
jmp
mov
cltd
ja
pop
imul
pop
arpl
adc
mov
pop
mov
aas
pop
insl
repnz
addr16
sbbb
and
or
add
or
sub
cmpsl
repnz
add
fs
sbb
push
or
ja
dec
sbb
pushf
jns
bound
jae
js
sbb
sub
adc
and
int3
mov
or
jecxz
std
xor
mov
or
int
mov
rcl
sub
pushf
mov
cli
push
mov
push
pushl
call
mov
pop
out
xchg
jb
pop
into
cmpb
sbb
cmp
adc
pop
pop
incl
jns
mov
iret
push
jne
cmpsb
adc
xchg
xor
cmp
insb
sbb
scas
mov
sbb
pop
push
xchg
test
iret
mov
sub
inc
push
mov
xor
lahf
les
push
and
sub
jp
popf
test
sbb
and
dec
sti
ret
jl
cmp
int3
gs
imul
add
or
cmc
jge
popf
out
fwait
popa
push
shrb
mov
out
shrb
adc
sub
bound
cmp
mov
and
out
fs
xchg
and
scas
inc
adc
mov
pop
or
mov
lods
and
jle
mov
data16
test
adc
xor
xchg
mov
repnz
cld
push
dec
adc
mov
in
mov
mov
insb
sub
sbb
xor
and
mov
and
into
lea
or
fisttps
mov
adc
or
sub
inc
cwtl
or
inc
fbld
xchg
mov
pop
lea
pop
insl
mov
repz
push
jle
shrb
sub
sub
jp
in
pop
push
test
add
aas
test
inc
cmp
arpl
shll
lret
scas
cmpsb
call
sbb
fsub
push
jns
lahf
in
daa
fcoms
ds
rcll
mov
out
mov
mov
es
push
fwait
and
pop
faddl
fisubs
pop
cmc
mov
cmp
adc
or
dec
pop
inc
clc
insl
push
jae
idivb
cmp
movsb
jnp
fdivrp
pusha
mov
jno
insl
add
dec
adc
lock
adc
jns
insb
dec
cmc
inc
lods
mov
mov
mov
cwtl
es
adc
sub
addr16
clc
scas
cmp
pop
xchg
pop
adc
out
cmp
pop
filds
icebp
pushl
jns
cmp
push
orl
lret
pop
fistpll
in
push
xchg
movsb
xchg
cmp
jns
jnp
cmp
adc
cld
or
inc
pop
add
repz
jo
or
insl
xchg
mov
ljmp
push
jb
stos
xchg
mov
xchg
mov
rorl
call
sub
jns
push
sahf
mov
push
mul
jmp
daa
jl
into
rcrl
jl
inc
movsb
or
loop
sbb
sahf
push
mov
and
lret
mov
sub
jno
out
ljmp
es
dec
insl
jge
fldenv
and
and
fistpll
sub
sbb
xor
stos
push
adc
aad
sub
adc
or
stos
out
sbb
inc
jmp
insb
adc
cmpb
sti
ficoml
push
push
xchg
push
imul
subb
cmc
mov
neg
xlat
js
loop
fs
cmp
fmuls
xchg
push
xlat
loopne
lret
cli
xchg
inc
inc
pop
cmp
stos
adc
outsb
sub
push
test
bnd
pop
int3
sbb
into
adc
cmp
shlb
jl
cmp
imul
ror
inc
test
mov
or
loope
mov
rorb
xchg
out
jne
aad
dec
pop
xchg
lock
sbb
inc
sub
test
jecxz
jg
pushf
jnp
adc
ficompl
insl
popf
jb
or
jns
and
aad
add
outsb
pusha
add
cmp
push
aas
adc
add
cs
jnp
aad
xchg
cwtl
imul
jle,pn
push
sbbl
and
mov
lods
les
imul
mov
push
iret
and
and
jge
popa
push
jae
out
fisttpl
cmc
in
lahf
cwtl
fdivl
sbb
push
push
push
cmp
pop
aas
lcall
mov
mov
xor
dec
or
adc
test
in
shr
je
mov
push
lods
repnz
dec
leave
inc
sar
outsl
pavgb
cmpsb
sbb
xor
shlb
out
iret
xor
lods
and
imul
jmp
xchg
popf
das
pop
outsl
jle
das
cmp
cli
test
rclb
into
xchg
outsl
or
xchg
adc
sub
mov
in
sahf
dec
xchg
pop
stos
pop
pop
pop
sub
test
lret
mov
xchg
loope
xchg
call
add
push
inc
pushf
add
dec
mov
mov
fwait
ss
xor
lods
jg
pop
into
out
pop
push
pushf
and
movsl
xorb
in
repnz
stc
push
and
adc
mov
stos
test
leave
popa
xor
test
fcoml
pop
sarb
stc
inc
sar
cmpsl
mov
into
adc
mov
lods
in
negb
add
mov
iret
aas
jecxz
cli
clc
lret
push
mov
mov
stc
jl
fadds
adc
or
mov
inc
lea
movsl
push
lea
fstl
and
cltd
dec
add
sub
shll
push
inc
cs
int3
sub
scas
test
and
ret
sahf
mov
dec
xor
test
es
mov
es
cmp
outsb
mov
push
jae
pop
fsubs
loope
adc
mov
cmp
stos
cmp
je
cmc
shll
pop
mov
int3
ret
shr
push
imul
fstpt
xchg
cmp
call
jmp
push
mov
mov
call
imulb
repz
mov
stc
dec
cmp
jnp
fisttpll
cmp
dec
pushf
dec
pusha
inc
mov
pop
and
push
push
shll
cmp
mov
push
inc
jecxz
xchg
sbbl
icebp
pop
cmp
mov
and
jb
nop
enter
dec
adc
repz
or
or
pusha
mov
in
les
push
es
imull
cltd
aam
dec
mov
sub
xlat
inc
arpl
adc
mov
add
test
xchg
push
sub
xor
das
fcomps
std
pop
xorl
fadd
mov
outsb
dec
icebp
ds
push
adc
jmp
call
cli
mov
adc
scas
clc
mov
je
cmpsl
lds
in
push
mov
arpl
sbb
xor
dec
loopne
or
xchg
mov
mov
or
cmc
and
adc
mov
lds
xchg
sti
cwtl
sbb
dec
xchg
dec
add
mov
jp
pop
icebp
testl
sub
ret
mov
push
in
je
fstpl
push
cmp
imul
xor
add
jae
add
scas
leave
movsb
mov
into
sbb
jmp
pusha
push
fistl
pop
xchg
imul
hlt
ljmp
or
inc
push
lds
sti
xchg
loopne
stc
lret
cmpsb
das
jg
pop
push
jo
pop
jle
sahf
stos
jno
arpl
fistpl
mov
out
inc
or
push
push
pop
inc
xchg
jns
ja
fisubrl
and
es
or
iret
pop
mov
sbb
dec
push
insl
cwtl
and
jbe
les
sub
loope
test
ret
in
jno
xor
sub
repz
loopne
test
mov
and
or
lahf
push
inc
fsub
iret
lahf
jb
add
or
in
inc
lret
push
call
lods
stos
jmp
lret
mov
xlat
dec
cmp
data16
scas
mov
cmp
mov
fnstenv
sbb
inc
fnstenv
mov
adc
leave
orb
or
ret
movsb
xchg
sub
mov
dec
nop
mov
ret
orl
in
push
sub
inc
lds
mov
mov
addr16
push
push
and
mov
pop
push
sbb
or
lret
das
popf
into
fistpll
arpl
fidivrs
loop
or
popa
aaa
xchg
and
daa
jnp
sbb
data16
or
mov
adc
mov
incl
pop
inc
stc
outsl
adc
mov
data16
mov
lock
cmp
xor
inc
mov
in
repz
negl
or
int
enter
push
aad
dec
testb
int3
cwtl
adc
leave
inc
int3
loope
iret
sbb
icebp
jns
jo
rol
test
push
ds
push
mov
aaa
jle
xor
lods
sub
out
and
mov
dec
cmp
xor
inc
xor
mov
adc
bsf
gs
insb
sub
adc
rcrb
inc
mov
mov
insl
rcll
or
pop
imul
sbb
pop
sub
aad
insb
dec
je
sub
sbb
fsubl
insb
inc
es
shl
cmp
xchg
sub
cmp
and
sahf
cmp
and
rclb
jbe
cmp
cmp
pop
test
insb
cs
xor
enter
daa
mov
cmp
pop
test
jp
fiadds
add
lret
jl
add
jecxz
xchg
inc
mov
rcrb
outsl
xchg
mov
push
jle
stos
cld
inc
xor
or
js
decl
incb
cmpsb
push
adc
sub
pop
movsb
out
jnp
cltd
xchg
fldlg2
mov
addb
add
jbe
mov
int3
hlt
loopne
xchg
xor
xchg
push
std
fcoml
ss
mov
or
xor
or
nop
inc
pop
jno
mov
push
inc
mov
lods
cmp
sbb
repz
dec
sub
outsb
mov
clc
push
in
cmpsl
ror
std
xor
call
fs
xor
xchg
cmpsb
sbb
add
ret
mov
ror
popa
mov
adc
scas
inc
adc
xor
shrb
cmp
imul
or
jo
dec
cmpsl
je
or
jbe
jbe
sahf
lret
fld
incb
inc
movsb
and
fdivrl
add
jmp
xchg
gs
pop
cwtl
fsubr
inc
xchg
mov
xchg
sti
sbb
mov
inc
lret
mov
dec
push
aad
clc
icebp
nop
xor
mov
clc
rclb
jge
imul
and
cmp
sbb
jmp
into
fisttpll
shr
cmpxchg
xor
mov
data16
andl
ret
adc
mov
dec
jg
into
push
stos
icebp
inc
shr
xchg
popf
pop
and
shll
ljmp
or
or
sub
shrl
js
pop
movsb
dec
sbb
jp
sub
fs
insl
or
mov
pop
xchg
sbb
inc
mov
sbb
jbe
pop
outsl
mov
aaa
out
pop
jns
pop
cmp
aas
mov
repnz
unpcklps
mul
sub
and
fwait
xlat
cmpsb
icebp
call
rcll
push
lods
pusha
lcall
pop
push
mov
cld
daa
cmpsl
out
ret
mov
in
push
or
aad
in
mov
rcll
inc
adc
adc
insl
arpl
imul
pop
test
loop
mov
test
mov
or
js
das
lods
mov
xor
dec
inc
mov
fidivrs
xchg
push
addr16
push
push
inc
subl
cmp
inc
andb
lods
negb
and
adc
pop
inc
aad
sub
pushl
inc
cld
mov
stc
dec
lds
sbb
sub
xorb
outsl
xlat
loopne
xor
push
aad
stc
lds
decl
push
and
xor
adc
out
sub
jl
into
pushf
cmp
xor
mov
rcrb
ds
arpl
push
outsb
mov
movsl
mov
sub
mov
js
stos
jnp
testb
ret
das
es
insb
mov
sti
inc
test
dec
pop
add
std
test
jbe
mov
inc
xor
dec
add
scas
add
jo
sub
mov
push
test
lret
into
rorb
cld
mov
inc
notl
inc
mov
scas
clc
jae
fucomip
xchg
lds
out
and
fcmovnu
push
ret
xchg
mov
push
push
xorl
jbe
sti
subl
ret
fs
hlt
jg
dec
out
popa
pcmpeqw
push
bound
out
loope
add
pop
stos
xchg
mov
movsl
jge
enter
mov
mov
jns
mov
arpl
std
xlat
test
sub
jb
dec
out
ljmp
inc
into
fcmovnu
ds
je
stc
xchg
dec
out
mov
xchg
lahf
adc
xchg
je
lret
imul
sbb
out
xor
jo
repz
testb
jl
mov
andl
xchg
sub
ljmp
sub
lahf
mov
inc
daa
roll
repz
jae
sub
jl
dec
push
pop
adc
or
xchg
cmp
loop
mov
mov
mov
push
xchg
test
test
sbb
aam
into
push
sbb
loope
mov
mov
sub
xor
push
sub
cld
mov
fcoml
xchg
push
mov
sub
add
int3
xor
cltd
mov
jecxz
xchg
call
test
repnz
adc
in
sbb
sarb
lret
lret
pop
fistpl
sub
icebp
inc
fstpt
and
push
mov
js
push
and
xchg
xor
xlat
jbe,pn
pusha
xor
xor
divb
sbb
stos
aas
imul
test
arpl
aaa
xchg
xchg
mulb
jge
sbb
gs
add
mov
cli
push
or
xchg
push
pop
sub
movsb
sub
lods
test
popa
stos
inc
aas
clc
leave
aas
cmc
cmpsl
pop
push
arpl
cltd
addr16
cltd
mov
sbb
outsb
add
arpl
pop
call
jle
push
sub
cmp
lret
jae
add
xchg
push
out
or
push
in
dec
imul
mulb
cmp
add
bound
sbb
and
jne
sbb
imul
sub
dec
sbb
leave
les
lods
ret
xchg
jb
pop
sub
fstpl
xor
pushf
loopne
pop
cld
and
ficomps
subl
nop
test
mov
adc
daa
ljmp
iret
sub
lahf
scas
cmp
xchg
test
jmp
scas
and
dec
jl
xlat
icebp
fisubs
scas
mov
xor
repnz
jae
decl
ret
mov
hlt
test
cmp
jg
popa
lcall
pop
and
negl
outsb
xchg
xor
aad
and
out
pop
cli
pop
pop
and
test
mov
xchg
add
cmpsl
or
into
cwtl
xorb
jg
inc
xlat
movsb
jmp
out
ficoms
mov
mulb
popf
jbe
push
mov
imul
adc
sbb
insb
rol
xor
push
jl
cmpsb
out
add
pop
inc
pop
sahf
out
mov
mov
xor
scas
dec
loope
test
mov
gs
mov
popa
iret
lock
jmp
rcr
addl
pop
cmp
cltd
mov
add
pop
pusha
xlat
xor
adc
popa
test
jmp
xchg
sti
cmp
mov
cmpsl
sub
icebp
xor
out
icebp
mov
test
ljmp
push
push
sub
jns
mov
cs
or
cmp
cmp
mov
lods
cwtl
mov
add
or
pop
mov
fcoms
jbe
add
imul
push
mov
and
dec
inc
das
loopne
cmc
push
shll
adc
cmc
xchg
jae
dec
into
insb
call
push
mov
lock
xor
bound
ja
out
fcomp
lock
pop
fldt
mov
xor
lret
ret
sub
cli
ret
mov
fnstenv
lahf
outsb
push
mov
jnp
std
insb
iret
leave
xchg
shll
stos
test
into
jne
into
xchg
mov
enter
jnp
hlt
push
xchg
dec
or
sti
ds
cmp
gs
repz
dec
add
adc
stos
je
push
out
popf
cmp
ja
inc
adc
scas
orb
mov
or
add
cltd
sub
shlb
shll
fmul
repz
out
jecxz
sahf
mov
jnp
sbb
js
mov
sbb
pop
loopne
xor
imul
in
sahf
out
xor
imul
cmp
jmp
mov
push
and
or
add
pop
push
cmp
jne
pop
dec
dec
push
jnp
jbe
sbb
fists
scas
bound
mov
mov
mov
mov
add
daa
and
jge
repnz
xor
jl
imul
movsb
push
stc
pop
ja
mov
loopne
lret
icebp
inc
in
hlt
fildll
lea
test
pop
out
adc
das
sub
push
scas
mov
jle
cli
jbe
or
outsl
fisubl
pop
lret
jp
xchg
or
sarl
push
and
sub
sahf
cmp
out
mov
cmpb
cmp
or
and
popa
cwtl
insl
orb
jnp
out
sub
sbb
jmp
lods
dec
cli
sbb
dec
pop
inc
pushf
fwait
aam
push
pop
nop
repnz
adc
adc
lea
stos
lret
push
mov
fwait
adc
add
add
adc
enter
out
les
adc
or
popf
aad
pop
xor
xor
cmp
cmp
cmpsl
cmp
shlb
xor
dec
int
outsl
fsubrs
hlt
imul
enter
jne
cmpsb
lock
nop
pop
pop
gs
test
repnz
xor
sbb
push
push
out
out
movsb
test
pop
stc
xchg
cmpsb
test
cltd
lahf
dec
xchg
push
dec
pop
sub
push
jbe
iret
push
popf
sub
or
add
call
fldl2t
in
sub
aam
inc
sysret
test
xchg
adc
orl
push
outsb
scas
mov
jo
sub
cs
inc
test
mov
out
add
jae
dec
outsl
movsb
push
fisttpll
add
lock
test
push
jbe
xchg
add
cld
mov
leave
orl
add
mov
mov
loopne
jl
insb
adc
ljmp
mov
dec
inc
xchg
mov
jl
rcll
rorl
mov
mov
pop
popa
lock
das
test
adc
sbb
sub
lahf
inc
mov
sbb
mov
les
fucomi
dec
js
in
pop
adc
outsl
fisttpll
xchg
jp
testl
aaa
adc
cmp
push
stc
ljmp
sub
add
mov
insb
imull
xchg
mov
fdiv
clc
jecxz
pop
aaa
push
std
aad
mov
adc
arpl
dec
xchg
popa
cmp
test
jbe
xchg
rclb
outsb
pusha
add
sbb
push
in
dec
ja
and
mov
test
ljmp
cltd
mov
clc
push
ss
aad
cld
mov
pop
push
ss
xor
jp
scas
fisubrl
mov
xchg
mov
pop
cmc
jne
in
dec
lcall
add
mov
fisubl
pop
cltd
jae
lock
mov
mov
pop
and
jp
icebp
cli
lods
dec
cltd
enter
jbe
mov
fwait
ret
outsb
dec
lds
sub
stos
aas
pop
dec
dec
push
mov
outsb
inc
push
inc
pop
ret
sub
cs
in
xchg
mov
loope
ss
pusha
cltd
shlb
cmp
cmp
movsb
push
dec
out
stos
pushf
pusha
and
in
outsb
inc
jno
popf
lahf
adc
ret
movl
and
cmovns
jne
decl
in
pop
inc
jns
mov
cli
xchg
or
jecxz
adc
mov
into
mov
xor
mov
dec
push
adc
das
daa
fwait
or
stos
bound
aas
inc
mov
adc
rorl
mov
mov
xor
xorb
xor
xor
jmp
mov
cmpsb
in
jnp
mov
mov
das
je
jl
xor
out
fsts
mov
mov
fstpl
jecxz
pop
lds
jge
xor
sbb
jmp
div
es
mov
sub
xchg
fisttpl
pop
aas
xchg
xchg
test
pop
pushf
jnp,pn
sbb
dec
aad
ljmp
aas
dec
add
enter
push
mov
iret
xor
add
les
popa
aad
dec
mov
pop
out
add
jbe
fstpt
mov
sbb
js
pop
ret
out
xor
outsl
jge
ret
fcomi
mov
adc
fwait
cmp
out
xor
movsb
xchg
mull
cmp
out
rorb
jl
pop
push
es
pop
mov
dec
orb
sbb
pop
aaa
or
sbb
cld
rolb
sub
mov
pop
sub
dec
xchg
sbb
shrb
add
mov
imul
xchg
sub
add
arpl
fsubr
xor
mov
ret
jns
mov
or
cmp
inc
adc
sub
out
stos
sti
test
pop
lea
jecxz
addr16
or
adc
cmpsb
push
adc
ret
xor
test
ljmp
push
pop
fists
pop
sahf
mov
gs
mov
pop
cltd
jbe
bound
jg
test
dec
fidivs
cmp
inc
jns
pop
xchg
push
push
lods
xchg
add
dec
jmp
xchg
lods
sahf
cli
cmp
jl
aam
imul
imul
lods
aas
ja
dec
pop
fwait
sub
jge
mov
es
add
push
mov
dec
lods
sub
pop
xchg
push
dec
xchg
sahf
aad
sub
dec
and
movsb
fstpt
adcb
lea
test
sbb
cmc
dec
pop
jmp
adc
sbb
and
jno
xor
pop
mov
in
fs
movsl
out
shrb
add
or
or
sbb
mov
ja
insb
or
dec
icebp
nop
popa
mov
xor
xor
xchg
mov
fwait
xchg
ret
jo
testb
adcl
enter
decb
xchg
mov
sub
cli
dec
pop
jns
out
inc
aas
std
fs
push
xchg
jmp
lock
sub
and
mov
and
and
adc
negl
add
cmp
adcb
add
and
outsb
gs
or
imulb
pop
lods
bound
pop
push
ret
aam
pop
and
and
rcr
pop
bound
leave
addr16
fsub
sub
lret
or
pop
pop
movsb
in
xorb
xchg
lock
pop
push
negb
cmp
pop
lods
orl
adc
push
in
xorl
div
int
stos
dec
add
out
pop
stos
jo
jb
fidivrl
in
inc
sti
in
push
call
sti
clc
lahf
push
jnp
bnd
sbb
fcoms
daa
mov
xor
rcrb
sbb
jne
mov
mov
push
popa
loop
jp
inc
insl
daa
cmc
mov
out
xchg
hlt
lods
jl
fistpll
test
nop
mov
sbb
adc
cmp
fstsw
mov
pop
call
add
xor
dec
add
movsb
fs
jp
cld
pop
mov
in
comiss
adc
xchg
cwtl
add
mov
je
inc
push
add
aad
push
aam
outsb
ja
pusha
and
ss
ret
repz
rclb
addb
adc
cld
lods
jl
xchg
mov
sahf
pop
sbb
mov
out
pusha
into
jp
orb
flds
in
inc
add
lock
sahf
or
cwtl
clc
int
xor
lahf
in
pop
cwtl
xor
stos
aaa
xchg
stos
shlb
movsl
push
dec
inc
pop
or
lcall
addr16
pop
xchg
pusha
push
fidivs
mov
addr16
rcl
gs
sti
out
clc
or
movsb
dec
insl
cld
repz
rcrl
icebp
adc
mov
and
adc
xchg
pop
out
repz
in
ror
dec
mov
fiadds
jecxz
shrl
fdivs
loope
adc
mov
out
mov
inc
xchg
clc
jge
adc
das
mov
add
sub
in
pop
lock
subl
arpl
sub
divb
cmpl
inc
mov
add
add
loopne
lret
lahf
leave
les
mov
push
adc
sbb
inc
lret
shlb
leave
loopne
int
sti
sarl
cmp
scas
ja
inc
add
dec
sti
or
mov
sbb
in
fwait
jmp
mov
or
out
call
pop
test
or
push
sbb
mov
rorl
sub
movsl
gs
ss
adc
or
sarl
insl
adc
sbb
outsb
scas
cmpsb
mov
cmpb
add
push
mov
push
mov
jno
insl
inc
sbb
in
or
hlt
fmull
adc
jb
lods
mov
pop
sarl
dec
stos
in
je
xlat
orl
cmp
jp
pusha
add
xchg
aas
int
es
cmpl
mov
mov
lcall
xor
push
adc
test
andl
cmpb
push
cld
fwait
bound
sti
icebp
mov
movsb
push
add
push
jae
call
dec
daa
add
mov
sbb
int
mov
push
add
loop
and
fimuls
data16
into
adc
gs
test
xchg
pop
pop
jl
or
in
sub
push
mov
popa
fwait
jns
add
sub
repz
test
sbb
shll
push
clc
movsl
nop
pop
xor
mov
fldt
xchg
mov
pop
pop
lock
clc
fwait
inc
test
mov
data16
and
push
aas
xchg
orl
je
mov
ss
test
cmp
fildl
mov
inc
push
lds
sub
add
xor
das
in
push
dec
jne
mov
incl
adc
nop
mov
xor
in
xor
mov
call
jge
xchg
inc
cmpsb
or
or
cmp
lret
test
jnp
inc
sub
add
sub
ljmp
test
jl
fs
outsl
jg
jmp
rolb
fwait
mov
push
stos
push
or
repz
enter
or
adc
adc
mov
xor
push
sbb
jge
js
arpl
out
jecxz
jle
dec
or
pop
call
inc
jge
xlat
push
pop
sarb
nop
xchg
das
les
cld
mov
repnz
imul
jmp
movsb
aam
mov
adc
mov
mov
testb
dec
sbb
sub
lret
cld
inc
and
fs
cmp
movsb
mov
add
jg
push
pop
jg
mov
cmpsl
mov
add
cmp
shr
aaa
add
jbe
or
outsl
xchg
lea
int3
jb
push
xor
jp
xchg
andb
xchg
jbe
pop
inc
loope
popf
shr
out
sbb
aad
or
mov
push
das
int3
pushf
arpl
jbe
sub
shlb
sti
or
push
pop
dec
pop
push
mov
adc
icebp
pop
add
jle
repnz
cmp
or
jge
adc
aad
jo
jl
imul
cmpsb
jl
lea
mov
or
imul
xchg
mov
adc
gs
int
sbb
enter
and
in
inc
cmc
sbb
aas
and
jno
pop
bnd
lcall
aad
leave
popf
xchg
out
iret
sbb
jns
fxch
int
aaa
shlb
inc
fldl
cltd
int3
out
orl
in
mov
in
les
ret
mov
xor
dec
fwait
leave
dec
jmp
xor
push
ret
adcb
xor
lods
ret
adc
sbb
lods
and
dec
cltd
leave
dec
fdivs
mov
loopne
ja
push
add
icebp
lock
and
mov
into
or
iret
jbe
mov
cmp
repz
inc
lods
jle
sub
test
scas
ror
cld
sar
je
jl
in
stos
dec
sub
insb
cmpb
xchg
fcmovnb
aad
shl
cmp
pusha
insb
adc
das
inc
hlt
out
inc
mov
arpl
in
enter
push
jl
or
cmp
mov
das
js
stc
jae
push
xor
stos
stos
inc
jo
mov
je
dec
inc
scas
and
call
jge
lea
lods
cmpsb
sbb
dec
lret
shlb
shl
addl
jp
mov
in
lcall
and
mov
dec
adc
pop
flds
lret
mov
outsb
data16
sub
mov
jle
mov
test
cmc
shr
es
pop
sub
hlt
sahf
mov
or
inc
ds
push
ret
push
xor
aam
fldenv
loop
mov
rcrb
shll
dec
std
jmp
push
sbb
mov
rcrb
imul
dec
lcall
cmp
mov
jnp
in
fucomi
lods
push
testl
rorl
jl
ss
sti
inc
push
aaa
cmp
or
aam
and
jge
roll
aas
popf
jno
je
lds
shl
lahf
dec
int
mul
and
dec
dec
decb
and
jnp
jge
fnstsw
fwait
lods
pushl
xor
cmpsl
and
les
sbb
in
xchg
lods
dec
aad
sub
sti
xchg
cmp
push
in
cmp
and
cmp
sahf
ds
or
add
xchg
mov
pop
xor
cli
cbtw
cmp
mov
sahf
sbb
popl
rcll
add
lock
cmpsl
scas
jae
push
mov
in
and
cltd
bound
or
cmp
pop
sub
or
inc
div
cli
inc
cmp
inc
insl
push
sbb
testb
lock
adc
jbe
rcrl
cmpsl
aad
cltd
and
xor
test
fiaddl
cld
push
mov
outsb
icebp
mov
cmpsl
pop
cmp
ss
lods
fbstp
dec
push
push
pop
and
test
push
pop
mov
xchg
scas
jo
xor
stc
sub
mov
addr16
cmpb
jecxz
shl
push
xor
push
out
int
and
arpl
std
mov
int3
or
mov
adc
xor
ljmp
gs
xchg
or
add
push
jge
mov
push
adc
loopne
fwait
dec
mov
fs
sub
repnz
bswap
cmpsl
push
cltd
cmp
xchg
xchg
and
or
fisubl
rclb
jne
dec
push
ret
rcrl
mov
xchg
andl
out
repz
ds
std
sbb
outsb
cli
out
popa
and
xchg
rcrb
mov
iret
xchg
pop
or
xor
es
mov
xchg
gs
push
fildll
sub
xor
sti
lret
je
push
mov
dec
inc
sub
add
pop
mov
aaa
test
je
iret
pop
xor
jp
ficompl
rorl
xor
fwait
iret
push
mov
fsubrs
lahf
xchg
xchg
inc
in
aaa
or
es
lret
inc
or
ss
idivb
jecxz
mov
sub
xchg
adc
ficoms
mov
fwait
inc
rcrl
adc
push
xor
ret
test
sub
lahf
cmp
out
stos
lea
xor
sbb
rcll
adc
pop
inc
ds
movsb
jmp
mov
and
fsubs
adc
xor
inc
pop
or
and
and
xor
xchg
es
inc
sar
stos
jl
daa
adc
leave
mov
mov
adc
and
jnp
mov
cmpl
enter
arpl
sub
and
lods
mov
sahf
pusha
into
xor
and
mov
mov
loope
adc
mov
cmpsl
mov
add
pop
mov
and
ss
dec
rclb
add
or
lds
shlb
jmp
cmpsb
imul
scas
leave
jg
or
in
inc
jae
inc
mov
push
jp
adc
in
adc
xor
int3
int3
xchg
cmp
popf
add
cmp
jg
pop
lods
lret
jecxz
add
and
push
pop
repnz
or
dec
fdivr
bound
in
cmp
mov
dec
lret
repnz
ja
out
xor
or
jns
sarl
stos
xchg
push
jne
and
push
and
pushf
fwait
fstpl
dec
mov
idivl
lds
pop
push
lahf
lods
pop
pop
fs
and
arpl
inc
inc
and
inc
adc
inc
mov
push
insl
popf
sti
dec
mov
push
mov
sub
in
loopne
sub
adc
push
inc
into
xorb
les
mov
add
and
sbb
in
and
cmp
mov
mov
dec
pop
enter
fsubrs
arpl
adc
push
jmp
shrb
or
enter
test
jp
jae
sbb
outsb
in
filds
arpl
in
in
fwait
rorb
add
xchg
outsb
xchg
loopne
add
cld
and
mov
push
ja
pop
stc
xchg
cs
fisubl
jecxz
push
dec
subb
xor
add
aas
pop
mov
or
sbb
dec
lcall
and
fcomip
aad
clc
ds
ja
add
insb
lock
xchg
je
cli
jno
or
icebp
ss
iret
jle
jae
push
xor
adc
ljmp
out
sbb
xchg
repnz
mov
pop
xor
ds
dec
mov
test
mov
mov
lock
dec
sbb
mov
cli
subl
adc
mov
sbb
std
and
mov
imul
enter
mov
or
fimuls
aas
out
sub
ja
add
or
mov
lret
stos
enter
xchg
mov
in
dec
add
pop
cmp
jb
fisubrs
in
std
or
es
ret
call
cs
adc
std
iret
stos
pushf
xor
mov
pop
xchg
test
dec
mov
pop
sub
sub
fstpt
lds
inc
jg
mov
and
je
mov
push
shlb
add
or
pusha
and
insl
das
lea
rcrb
add
mov
sub
and
call
movsb
xchg
mov
xor
inc
mov
shrb
mov
adc
add
sbb
cs
pop
testb
mov
mov
das
jmp
insl
stc
ret
pop
lret
adc
and
pop
mov
and
adc
std
pop
es
xlat
xor
dec
push
insb
shr
aas
mov
pop
out
sbb
pop
leave
or
push
xor
fbld
xchg
sub
mov
rcl
dec
in
aad
sbb
jnp
sbb
in
mov
jmp
icebp
fbld
sbb
xchg
xchg
cli
imul
cmp
cwtl
add
popf
clc
ds
jmp
push
sub
sub
and
sbb
jne
xchg
xchg
pop
mov
imul
gs
cmpsl
stc
push
pop
in
pop
je
or
movsb
xor
xor
xchg
add
hlt
mov
das
jnp
mov
mov
push
jp
stc
or
mov
scas
icebp
iret
loopne
loope
lock
stos
lods
test
ljmp
xchg
cmpsl
sub
and
mov
jae
sahf
shrl
xlat
out
and
ja
jne
hlt
addl
cmpsl
stc
xor
xchg
adc
sbb
sub
push
aam
js
cmp
and
scas
mov
push
xorl
mov
test
addb
sbb
test
iret
bound
stc
mov
stc
xor
clc
test
iret
xor
jae
movsb
mov
pop
or
sub
push
mov
in
ffree
pop
mov
sti
scas
xor
add
xor
xor
fsincos
lcall
dec
adc
xchg
sahf
push
ljmp
pushf
test
dec
xlat
sbb
aaa
jp
push
test
faddl
sbb
jp
and
or
mov
cmpsl
xor
dec
ret
and
popa
inc
mov
in
bound
dec
mov
lret
jb
mov
popa
dec
out
into
out
je
aaa
pop
xor
push
add
mov
imul
call
mov
dec
xlat
dec
pop
in
in
lods
push
stos
mov
push
and
lds
std
mov
dec
xor
or
in
sub
inc
cwtl
cmp
mov
stos
push
inc
fwait
rcr
sub
mov
mov
fnstcw
cmpsb
pop
jbe
xchg
xor
adc
shll
pop
scas
test
mov
ret
dec
icebp
jo
repnz
ret
leave
mov
iret
and
pop
es
push
adc
adc
sbb
fisttps
jno
cmp
pusha
mov
cmp
fidivs
pop
lea
test
jl
lods
cld
push
ss
lret
adc
jl
loop
popf
push
push
pop
add
les
add
cmpsl
divb
aad
mov
jg
hlt
add
cmc
mov
bound
pop
and
mov
mov
mov
ret
mov
push
test
and
out
pop
jbe
daa
movsl
mov
stc
ss
xorl
mov
pop
and
pop
pop
out
int
push
bound
push
sbb
jae
or
push
int
lds
fists
mov
mov
mov
mov
mov
into
jne
in
adcb
push
dec
add
cmpsl
mov
scas
divb
daa
pop
cli
mov
and
mov
push
xor
cmp
sub
dec
sbb
pop
cmpsl
je
nop
adc
push
lahf
ss
rol
shrb
pop
pop
adc
aad
movsb
inc
xchg
lods
iret
xchg
popl
adc
add
mov
xor
rcrl
nop
mov
sbb
sbb
loope
jp
cli
and
dec
jmp
aaa
jb
movsb
test
mov
gs
dec
ret
pop
fsub
repz
xor
inc
inc
loope
popa
repnz
jo
add
testb
lret
or
mov
xor
stos
and
fistps
xor
popf
fs
jne
popf
cmp
adc
dec
addr16
xchg
jo
sub
pop
jle
mov
add
leave
mov
xchg
repnz
pop
addr16
jb
pop
stc
add
mov
rcrl
mov
jle
push
ret
popa
mov
mov
mov
popf
jns
shl
out
mov
push
fists
mov
cmpl
xlat
pop
mov
outsl
xchg
add
inc
cmpsb
int
pcmpgtw
mov
add
inc
mov
insb
loopne
sbb
stos
filds
or
mov
cmp
jnp
addr16
ljmp
xor
inc
int
and
pop
aas
or
fdivrl
cmp
addb
je
into
dec
mov
pop
mov
pop
mov
outsl
mov
push
dec
decb
cmp
cwtl
enter
cmp
popf
cld
dec
pop
jmp
jnp
fld
cltd
popf
sbb
mov
push
fsubrs
xor
sub
repnz
inc
cmpsl
in
xlat
fisttpll
mov
pop
lock
cli
and
sub
scas
insl
js
dec
js
push
shrl
scas
xchg
mov
fmul
xor
mov
pop
mov
mov
push
in
in
ds
push
pushf
std
rcr
mov
xor
jb
dec
mov
popf
push
cmpsl
rcrb
inc
mov
xor
fisubs
mov
mov
addb
sbbl
xchg
sub
loopne
pop
insb
outsb
cmpsb
in
imul
aas
or
lret
jo
push
adc
sub
out
push
or
inc
loope
dec
ror
orb
es
sub
mov
lret
xchg
sbbb
lea
stos
out
fistpl
fs
ret
popf
mov
nop
dec
push
pop
test
pop
fs
sbb
je
sub
xchg
or
push
jne
int
xchg
pop
mov
dec
dec
scas
mov
stc
jno
sbb
adc
xchg
sub
pusha
pop
mov
dec
frstor
or
push
test
dec
push
fnstenv
mov
or
xor
add
xchg
xchg
cmp
adc
mov
leave
push
out
xor
fstps
xor
pushf
jp
movsb
push
repnz
jne
pop
clc
sbb
inc
mov
cmp
cmp
js
push
xchg
fiaddl
out
test
pop
xchg
mov
cmp
cmp
aam
inc
repnz
sub
in
shll
mov
xor
or
imul
aas
cmovae
jns
aaa
push
mov
test
lret
sahf
or
lds
fsts
sarl
movsl
lods
aaa
push
enter
pop
push
mov
add
jbe
leave
lcall
test
mov
or
stos
loopne
popf
jo
nop
xor
ret
jle
push
push
push
in
pop
xchg
dec
push
sub
cmc
icebp
loope
lahf
imul
call
mov
test
add
mov
fdivrs
xchg
clc
or
jmp
cmp
lds
insl
cmp
cmp
daa
negl
scas
jp
sbbb
lock
shlb
dec
inc
inc
xchg
shrl
fwait
imulb
push
and
inc
movsl
loope
xchg
xor
icebp
dec
xchg
test
out
jecxz
adc
mov
pop
clc
mov
adc
mov
gs
aaa
cmp
mov
or
push
test
inc
data16
xlat
sbb
jae
push
outsl
push
mov
mov
lods
loop
data16
mov
popa
mov
dec
bound
or
into
loopne
cmp
xchg
lock
mov
inc
push
das
mov
jle
xor
sub
jp
test
pop
inc
addr16
adc
icebp
les
or
bndldx
clc
frstor
and
lock
pop
lahf
cmp
rcr
aas
adcl
lcall
inc
mov
adcl
add
xorl
cld
popf
call
add
outsb
out
and
push
cmpsb
lea
movsl
and
pop
insb
add
sub
cmp
mov
xchg
adc
mov
xchg
jnp
ljmp
insl
jecxz
lahf
int
jnp
jno
sbb
sti
cmp
push
jae
popa
aas
orb
cmp
dec
inc
cmpsl
pop
cld
rcll
add
xchg
mov
jl
scas
js
and
sbb
cmpsl
push
lret
xlat
add
fs
fmul
movsb
xchg
lret
movsb
or
faddl
test
jno
dec
dec
outsb
push
inc
rcrl
in
push
push
jl
mov
sbb
jl
loopne
fwait
push
and
daa
imul
sub
daa
jns
sub
imul
aaa
lea
into
inc
dec
or
pop
int3
dec
add
aas
and
arpl
jl
test
adcb
xor
mov
cmpsb
aad
push
stos
sub
jnp
scas
xor
mov
stos
push
mov
jne
jbe
clc
cwtl
add
mov
mov
rcrl
and
pusha
or
pop
jnp
xchg
mov
sarb
test
in
or
in
xrelease
push
jl
mov
gs
stc
insb
and
mov
inc
inc
xchg
and
cli
pop
mov
mov
mov
das
outsb
dec
mov
mov
das
dec
gs
jnp
push
adc
or
jmp
pop
dec
dec
loope
pop
in
cmp
cmp
fcompl
into
push
mov
and
lock
js
cltd
dec
sbb
xchg
aad
sub
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
push
nop
push
push
push
nop
nop
nop
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
or
add
add
pop
add
addb
add
enter
add
add
enter
add
add
addb
add
cmp
add
fadds
add
dec
add
orb
add
mov
add
add
add
add
add
add
js
add
mov
add
add
add
add
lds
xor
add
or
add
movb
add
add
add
add
add
addb
add
push
add
xor
add
js
add
mov
add
add
add
add
add
add
movl
add
add
or
add
add
clc
enter
add
add
or
add
add
pusha
into
add
test
add
or
add
xlat
add
sub
add
or
add
fadds
push
add
add
add
add
cmp
add
and
add
dec
add
xor
add
jo
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
dec
or
add
add
add
add
add
clc
add
dec
or
add
add
add
add
add
add
xor
add
call
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
add
add
or
add
add
pushf
push
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
cmp
add
and
addb
add
or
add
add
add
adc
add
add
add
add
add
add
add
add
sti
add
add
add
nop
add
addb
add
or
add
adc
add
add
or
add
adc
add
add
cld
add
add
add
sub
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
test
add
add
add
add
add
add
add
add
add
adc
add
add
sub
add
adc
xchg
adc
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
in
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
push
add
outsl
add
je
ja
popa
add
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jae
je
jae
and
inc
add
insb
add
and
push
add
popa
add
imul
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
jae
and
inc
add
imul
and
push
add
arpl
imul
add
sldt
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jbe
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
insl
add
jae
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insb
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
jne
push
add
push
popa
je
insb
je
add
gs
insb
inc
bound
je
add
add
je
outsb
jne
add
jae
fs
insb
popa
jns
outsl
jne
fs
