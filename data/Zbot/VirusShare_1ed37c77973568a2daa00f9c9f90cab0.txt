call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
xor
mov
mov
pusha
call
add
lcall
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
jmp
ret
mov
sub
sub
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
jle
add
xor
add
movsb
and
add
and
add
and
add
add
add
nop
and
add
add
outsb
and
add
and
add
and
add
and
add
add
mulb
add
and
add
and
add
and
add
and
add
add
add
add
in
add
aam
add
ret
add
add
mulb
add
xchg
and
add
add
inc
and
add
and
add
add
and
add
add
add
and
add
add
add
push
add
add
add
mov
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
xor
add
movsb
and
add
and
add
and
add
add
add
nop
and
add
add
outsb
and
add
and
add
and
add
and
add
add
mulb
add
and
add
and
add
and
add
and
add
add
add
add
in
add
aam
add
ret
add
add
mulb
add
xchg
and
add
add
inc
and
add
and
add
add
and
add
add
add
and
add
add
add
push
add
add
add
mov
add
add
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
imul
bound
gs
add
add
je
jb
jbe
je
push
jb
imul
push
add
insb
jae
jb
outsb
inc
add
push
push
je
imul
inc
add
aad
inc
gs
gs
inc
imul
gs
imul
je
add
add
popa
jo
jb
add
jge
dec
jo
outsb
dec
jne
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
popa
je
inc
jbe
outsb
je
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
ret
gs
jne
jb
outsb
je
jb
arpl
jae
repnz
imul
jb
je
arpl
add
rolb
dec
gs
jo
gs
jb
jns
cmp
fs
imul
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
insb
jae
gs
popa
insb
jne
add
popa
outsb
arpl
dec
outsl
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
imul
outsb
je
outsl
insb
add
push
dec
inc
dec
xor
cs
insb
add
jle
inc
gs
imul
gs
add
xor
jae
push
push
popa
je
add
aaa
add
ja
push
fs
inc
gs
push
outsl
insb
outsl
jb
xchg
dec
jo
outsb
push
push
popa
je
add
push
arpl
add
add
ja
push
popa
arpl
jb
jne
add
inc
gs
push
gs
inc
js
outsb
je
add
inc
gs
push
jns
push
imul
gs
push
outsl
outsl
insb
add
mov
push
gs
imul
gs
add
jl
inc
gs
push
gs
dec
gs
imul
insb
outsl
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
inc
gs
jbe
imul
imul
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jp
jnp
lods
lods
stos
add
cmpsb
cmpsb
push
mov
mov
mov
les
into
int
rcl
in
rcl
shl
iret
rcl
hlt
into
int
hlt
enter
leave
enter
mov
mov
stos
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
out
leave
leave
not
rcl
cld
fcomp
xlat
std
fcom
fdivr
xlat
fcom
aad
dec
ror
dec
int
aad
rcl
iret
inc
mov
mov
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
lods
sbb
mov
jnp
mov
mov
dec
lret
iret
rcl
aad
aam
fcomp
call
xlat
call
aad
dec
int3
int3
dec
int
call
aam
dec
int3
into
mov
mov
mov
std
cmpsb
cmpsl
cmpsl
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
pop
add
push
or
inc
or
sbb
push
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int
call
rcl
fcomp
fdivr
fcomp
call
aad
dec
int3
int3
dec
lret
leave
dec
int
inc
mov
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
sbb
das
or
sbb
ss
cmp
cmp
and
and
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
mov
call
aad
aam
aad
rcl
sar
leave
leave
inc
mov
ret
mov
mov
ljmp
movsl
movsb
pushf
pushf
sahf
cwtl
xchg
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
jno
jg
jle
jle
jle
jb
jno
arpl
mov
cmp
inc
inc
mov
outsb
jo
nop
popa
popa
bound
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
leave
dec
enter
ret
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
xchg
fwait
fwait
cltd
in
addl
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
pusha
nop
fcoms
addb
jl
jp
jo
outsb
out
push
fdivs
jne
jge
jg
jns
js
fs
inc
cmp
sbb
sbb
adc
or
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
nop
incl
addl
xchg
xchg
lahf
lahf
sahf
sti
mov
xchg
xchg
mov
jns
jp
xor
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
mov
loope
jo
enter
mov
addl
xchg
push
cmp
ss
jle
fwait
cltd
fwait
lea
test
icebp
lods
stos
lods
sti
lods
lods
lods
stos
stos
lods
stos
stos
stos
std
movsl
movsb
movsl
std
fwait
lcall
mov
jg
jns
jns
jnp
jp
xchg
xchg
movsl
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
push
pop
adc
movsb
test
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
push
push
prefetchw
dec
insl
insl
insl
jl
xchg
leave
fwait
lcall
lcall
std
mov
xchg
mov
mov
xchg
lcall
cmpsb
cmpsl
ljmp
mov
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jnp
lods
cmpsb
stos
add
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
popf
sahf
sahf
std
movsl
movsb
movsl
stc
mov
xchg
xchg
in
xchg
nop
in
xchg
push
jne
femms
dec
add
add
or
or
daa
sub
push
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
std
mov
xchg
call
mov
cmpsb
ljmp
lods
pushl
sahf
scas
mov
mov
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
sahf
xchg
lcall
mov
xchg
decl
xchg
xchg
popf
popf
popf
movsb
mov
test
negl
jl
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jo
jne
jp
jle
test
int
xchg
xchg
in
nop
xchg
testl
lea
jmp
mov
mov
pop
mov
ss
mov
js
mov
movsl
mov
mov
stos
lods
mov
movsb
add
mov
add
pusha
adc
mov
lcall
mov
xchg
xchg
xchg
call
xchg
xchg
call
cltd
lcall
mov
mov
stc
cltd
cwtl
fwait
out
xchg
xchg
nop
xchg
les
xchg
cltd
in
xchg
xchg
out
lea
stc
xchg
xchg
std
xchg
je
fwait
addr16
sahf
pop
test
movsl
push
jg
lods
inc
jge
mov
jnp
mov
jae
mov
outsb
ljmp
pcmpgtw
lods
or
or
pushl
mov
mov
pushf
mov
mov
add
shll
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
popf
pushf
lcall
popf
popf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
cltd
cld
xchg
xchg
sahf
stc
lahf
fwait
mov
cld
pushf
mov
xchg
push
xchg
pop
jge
cwtl
dec
js
cltd
cmp
imul
pop
addr16
mov
push
ljmp
adc
adc
lods
adc
scas
adc
mov
imul
mov
insl
mov
cltd
scas
mov
scas
scas
scas
mov
movsl
movsl
add
add
add
add
mov
pop
pop
adc
mov
ljmp
sahf
call
sahf
popf
jmp
movsb
movsl
jmp
mov
cwtl
decl
mov
decl
jbe
lcall
xchg
dec
jnp
xchg
jno,pt
nop
cs
decl
pop
decl
add
push
lcall
push
pop
jmp
sbb
pushl
sbb
outsb
mov
and
mov
and
inc
cmp
xchg
scas
mov
scas
scas
mov
lahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
mov
cltd
popf
lcall
mov
jmp
stos
test
cmpsb
cmpsl
cmpsl
lcall
decl
jno
mov
imul
mov
pusha
decl
or
push
incl
add
mov
push
call
add
fwait
add
mov
or
mov
outsb
pushl
sub
mov
sub
sub
jle
enter
leave
xor
dec
scas
mov
mov
lret
movsb
dec
mov
mov
add
add
add
lods
mov
push
adc
test
mov
jmp
test
ljmp
stos
stos
pushl
scas
lods
jmp
jno
decl
push
push
incl
or
test
incl
add
addl
decl
add
add
xchg
add
fwait
add
sahf
add
add
scas
adc
mov
ss
cmp
dec
cmp
call
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
fwait
popf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
test
push
incl
add
lea
push
call
add
popf
add
mov
add
lods
add
mov
jb
les
xchg
lret
dec
inc
call
inc
call
dec
call
dec
xchg
call
dec
xchg
fisttpll
fsts
call
test
std
mov
mov
movsl
movsl
movsl
arpl
mov
add
add
add
fwait
xchg
lcall
jp
jl
sahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
outsl
decl
sbb
sbb
mov
pop
decl
add
xchg
add
xchg
add
pushf
add
mov
add
test
popa
pushl
and
dec
inc
call
push
cltd
call
push
fwait
ficoml
fstl
jmp
pop
sahf
ficoms
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
cmpsl
cmpsl
cmpsl
jne
lahf
mov
add
inc
inc
adc
ja
mov
mov
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
xchg
and
xchg
and
sbb
xchg
or
xchg
add
xchg
add
fwait
add
mov
add
lods
add
mov
fs
mov
xor
call
pop
fwait
fisubl
fbld
fbld
jmp
cmpsw
jmp
gs
call
imul
faddl
mov
cmpsb
test
sahf
sahf
lahf
adc
xchg
xchg
xchg
add
inc
inc
adc
jb
cltd
xchg
cltd
call
sahf
popf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
jo,pn
cltd
das
outsb
call
push
call
add
fwait
add
mov
add
lods
add
mov
pushw
adc
rolb
fsubrl
jmp
jo
jmp
jo
call
jae
in
jae
in
jne
in
jne
out
jbe
out
jb
jmp
mov
mov
cmpsb
cmpsb
lcall
sahf
add
jge
ds
insl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
outsl
lcall
cmp
lahf
xor
lcall
lcall
add
movsl
add
add
mov
popa
pushl
add
sbb
fistl
jmp
jbe
ljmp
jmp
mov
push
cmpl
repz
push
cmpb
mov
mov
test
cmpsl
popf
popf
pushf
daa
sahf
lahf
lahf
add
add
add
popa
add
xor
push
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
inc
ret
mov
mov
sahf
outsb
mov
lcall
jmp
jbe
lcall
lcall
add
test
add
mov
data16
mov
add
shll
cmp
mov
in
mov
push
sar
nop
sar
xchg
ret
push
xchg
xchg
clc
xchg
push
ret
in
nop
sar
mov
inc
clc
stos
stos
test
xor
sahf
pushf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
inc
inc
mov
ljmp
inc
jl
cmpsl
dec
cmp
dec
test
movsl
xor
lcall
add
mov
add
stos
add
mov
fs
mov
add
movl
mov
out
mov
out
xchg
cltd
enter
push
cltd
push
pushf
lret
lcall
cld
sahf
int3
cld
lahf
into
cld
cltd
lret
xchg
ret
jmp
mov
cli
mov
mov
sahf
sahf
mov
add
add
add
xor
or
cmp
dec
jecxz
pusha
pusha
decl
mov
mov
mov
sar
ret
ret
mov
leave
enter
sar
mov
ljmp
mov
movsb
sub
cltd
push
pop
lcall
add
add
mov
popa
mov
add
leave
add
or
fiadds
in
mov
push
cmpsb
int3
push
cmpsb
int3
clc
cmpsb
into
cli
cmpsl
sar
cli
cmpsb
iret
cld
test
std
stos
sar
std
test
sar
negb
lret
enter
mov
into
sahf
mov
xchg
add
cltd
cltd
add
add
add
xor
add
sub
or
inc
bound
push
xlat
je
jno
mov
mov
mov
ret
inc
inc
leave
leave
leave
inc
rol
mov
test
movsl
push
test
lods
push
mov
scas
dec
test
mov
add
movsl
add
lods
add
mov
arpl
mov
add
into
add
add
loopne
jnp
in
pop
cmpsl
push
popf
lret
lods
aam
cli
mov
cli
scas
aam
cli
mov
cld
mov
mov
std
mov
cld
mov
pushl
sar
cmc
cmpsb
mov
call
lret
mov
mov
sahf
sahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
ss
jo
cwtl
cltd
cwtl
rol
ret
fcom
xlat
jmp
xlat
not
rcl
std
int3
into
int3
dec
leave
leave
dec
lret
leave
dec
lret
mov
lods
jmp
push
mov
stos
cmp
jmp
add
mov
mov
add
iret
add
xlat
add
add
ljmp
sti
lods
sar
std
mov
std
mov
cld
mov
mov
xlat
inc
mov
int
call
lret
into
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
or
enter
in
out
jmp
test
in
leave
fsub
fcomp
fdivr
aam
fdivr
int
sar
mov
imul
jmp
add
mov
arpl
mov
add
lret
add
add
faddl
ja
in
jbe
out
das
xchg
push
mov
cld
mov
inc
std
inc
loopne
inc
loopne
inc
loopne
dec
inc
std
leave
std
lret
cld
mov
enter
iret
mov
mov
xchg
adc
add
add
std
incl
incl
incb
hlt
cmc
testb
out
in
pop
jmp
out
sub
out
in
dec
ljmp
xchg
call
out
aad
fstp
jmp
mov
xchg
cmpsl
cmp
mov
add
ljmp
add
mov
add
int
outsl
call
add
loopne
ja
jmp
inc
pushf
cld
mov
loop
dec
loop
std
into
in
dec
in
dec
loop
dec
loope
dec
loop
std
shl
dec
in
call
jecxz
std
shl
cld
fdivr
out
mov
inc
ret
ret
out
test
cmpsl
mov
cwtl
xchg
add
add
add
incl
incb
idiv
testb
repz
hlt
repnz
out
icebp
out
pop
out
repnz
in
in
pop
loopne
lds
xchg
sti
lahf
es
mov
add
mov
fs
mov
add
rolb
jo
flds
je
in
jp
in
push
pop
test
cld
mov
cld
shl
shl
call
out
shr
shl
aad
fsub
std
xlat
out
fld1
fucomi
std
iret
loop
bnd
in
fcos
lret
lret
test
xchg
xchg
and
xchg
xchg
add
cli
add
std
stc
add
cld
stc
add
cmc
cmc
or
aad
xor
mov
xchg
negb
add
cmpsl
add
scas
add
mov
add
lret
call
add
fildl
jne
call
sbb
cli
std
fsubr
std
fucomi
std
fldpi
fucomi
fsubr
fucomp
fucomi
std
fucomip
jmp
jmp
std
fsubrp
cld
aam
push
ret
jmp
aad
call
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
mov
loop
add
enter
mov
xchg
repnz
and
sahf
add
cmpsb
add
mov
popa
mov
add
into
add
aad
jno
loopne
jae
jmp
sub
cld
aam
jmp
out
std
fsubr
std
fldl2t
xlat
call
std
shl
cld
shl
cli
shl
stc
iret
test
out
mov
jmp
rcr
call
fcom
sti
mov
mov
lcall
add
add
add
xlat
aad
ror
adc
scas
mov
lcall
add
mov
mov
add
rolb
outsl
call
add
loopne
jns
ljmp
sti
cwtl
cld
leave
loope
cld
lret
jecxz
cli
fdivrp
stc
rcr
cmc
mov
sar
icebp
mov
into
out
mov
int3
jmp
ret
ljmp
imul
fndisi(8087
cmc
fsubp
fsubrp
mov
mov
xchg
add
add
add
int3
int3
add
rol
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
into
or
rorl
je
ficoml
js
loop
cmp
call
scas
int3
call
mov
std
loopne
ret
cld
fidivs
neg
mov
leave
ljmp
rcr
fmulp
shl
aad
out
loop
in
in
test
in
out
popf
ljmp
push
lods
lods
lods
adc
cmpsb
test
add
ret
mov
ret
mov
stos
aam
dec
cmp
sbb
cmpsl
sbb
lods
and
js
mov
dec
test
les
stc
lret
arpl
hlt
iret
mov
out
mov
mov
lret
ror
lret
mov
into
shlb
fcom
aam
gs
jecxz
call
out
in
xor
div
mulb
repnz
or
mov
int
xchg
add
mov
mov
rolb
mov
test
imul
sbbb
xchg
cmpsl
sarb
test
mov
pushf
lret
mov
lret
ror
into
addr16
rcll
rcl
dec
xlat
aad
rcl
aad
aad
xlat
daa
fcomp
ficompl
fcoml
fsub
loop
loopne
in
out
jmp
in
repnz
add
cli
testb
std
std
add
incl
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
mov
daa
int
shlb
rcl
rcrl
rcl
rclb
rcl
rorb
aam
aam
rcr
add
fcmovnu
add
loopne
add
in
add
in
jmp
leave
aam
std
incl
mov
mov
add
rol
sub
ret
mov
mov
ret
leave
movb
enter
into
leave
add
aad
add
xlat
aam
rcl
aad
aam
aam
add
fchs
add
aam
add
loopne
add
add
out
add
lock
add
std
std
add
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
mov
ja
test
dec
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
sarb
aam
into
shr
aad
aad
rcl
sar
ror
sar
lret
lret
int
lret
lret
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
iret
xlat
xlat
call
aad
call
ror
dec
into
into
dec
int3
lret
mov
mov
cld
stos
stos
lods
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
je
jae
fs
dec
dec
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
aam
int3
lret
mov
inc
rol
mov
mov
stos
test
popf
cwtl
xchg
xchg
jmp
outsl
outsl
xchg
pop
push
push
dec
add
add
add
add
add
add
addb
test
jns
push
push
pop
pop
pop
movsb
push
push
push
stos
push
insb
outsb
push
pop
pop
cmp
cmp
pop
jno
outsl
adc
mov
mov
sar
mov
mov
mov
ljmp
pushf
fwait
call
xchg
fwait
fwait
lcall
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
cltd
lcall
fwait
xchg
cwtl
fcoml
addl
jmp
jns
sarb
jns
jp
jns
jae
jae
push
push
push
cmp
aaa
pushf
sahf
pushf
mov
scas
scas
rep
lods
scas
sti
scas
lods
scas
std
test
popf
pushf
call
xchg
call
mov
scas
jmp
lods
lods
leave
movsl
movsb
movsb
cltd
je
jb
adc
adc
add
add
add
add
insl
insl
outsl
pop
xchg
mov
sahf
lcall
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
pop
and
inc
inc
dec
jo
jo
lea
lcall
std
mov
call
lahf
ljmp
scas
std
mov
mov
stc
mov
mov
movsl
movsb
cmpsb
pop
jg
addb
add
add
add
add
pusha
or
lods
mov
movsl
sahf
movsb
decl
call
xchg
xchg
std
popf
popf
lahf
sti
mov
lcall
push
push
push
jo
pop
pop
outsl
insb
outsb
outsb
xchg
subl
nop
xchg
lock
mov
lcall
fwait
pushl
outsl
xchg
mov
push
mov
mov
mov
out
lods
stos
insl
stos
test
add
add
add
pop
pusha
pop
or
mov
in
movsb
test
call
cwtl
cwtl
call
cwtl
lcall
lahf
sahf
cli
xchg
xchg
cwtl
jmp
xchg
lea
xchg
orb
xchg
push
cld
xchg
pop
jg
pushf
dec
jl
mov
xor
jae
mov
insl
pushl
sbb
mov
mov
mov
scas
scas
jle
mov
add
add
add
popa
pusha
popa
or
mov
in
mov
cwtl
lcall
mov
mov
decl
orb
xchg
jb
cld
xchg
popa
test
xchg
dec
jns
nop
cmp
xchg
daa
push
call
push
popa
ljmp
sbb
mov
outsb
pushl
push
jno
mov
pop
xchg
mov
scas
lods
xchg
sahf
sahf
lahf
adc
add
add
pusha
popa
pusha
or
mov
stos
mov
lahf
jmp
stos
test
lcall
pop
jp
mov
imul
sub
mov
pusha
decl
or
mov
push
decl
add
pushf
add
or
mov
jae
mov
jl,pn
les
jg
leave
das
cmp
lret
pop
cwtl
inc
stos
mov
mov
mov
cmpsl
test
add
add
add
pusha
pusha
pusha
or
movsb
test
jmp
mov
pushl
mov
jmp
inc
jno
mov
pop
decl
or
xchg
push
decl
add
xchg
add
mov
add
mov
outsb
inc
aaa
cmp
inc
mov
rolb
call
inc
mov
inc
nop
call
bound
stc
mov
mov
movsb
movsl
movsb
daa
std
incb
add
add
pop
pop
popa
or
lahf
mov
ljmp
mov
mov
mov
ljmp
push
jnp
nop
push
arpl
xchg
sbb
decl
or
push
call
pop
jmp
add
mov
dec
nop
fcomps
fistpl
jmp
pop
lahf
jmp
pop
mov
jmp
outsb
test
int3
test
cld
mov
mov
cmpsb
stos
movsl
xor
addb
add
add
dec
pop
jl
jl
pushf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
cs
sub
xchg
and
xchg
subps
xchg
add
sahf
add
cmpsb
add
scas
add
mov
xor
jmp
insb
test
out
stos
call
jo
in
jno
jmp
js
call
cmpsl
mov
shrl
addb
dec
dec
dec
pop
insl
outsl
imul
xchg
lcall
mov
mov
sar
mov
xchg
lcall
jbe
popf
sub
xchg
or
pop
jmp
add
mov
inc
or
xchg
jmp
jp
ljmp
push
test
push
xchg
fisubrl
mov
push
cltd
lcall
sub
sub
push
push
dec
pop
imul
mov
mov
mov
rol
sarb
jmp
inc
jg
mov
or
mov
add
mov
arpl
mov
adc
jmp
pusha
mov
push
xchg
push
cwtl
xchg
push
cltd
enter
lret
xchg
stos
mov
stos
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
rol
inc
xchg
test
ljmp
pop
imul
add
ljmp
add
add
lret
fldenv
cmp
jnp
push
movsb
int
clc
cmpsl
into
stc
test
iret
std
lods
iret
std
stos
sar
sti
cmpsl
int3
call
mov
stos
jne
sahf
popf
or
add
add
dec
dec
push
aaa
je
jb
stos
stos
stos
ror
int
out
iret
int
lret
lret
enter
enter
mov
bound
jmp
add
mov
arpl
rolb
dec
add
flds
jmp
xchg
cld
mov
mov
xlat
cld
mov
xlat
mov
sar
jmp
rol
mov
lods
mov
add
add
add
add
pop
or
aad
dec
loope
jecxz
loopne
loopne
fstp
fadd
fcmovnu
aam
fsubr
shlb
test
jae
movsb
or
mov
arpl
mov
add
aad
je
jecxz
jnp
repnz
mov
cld
inc
loope
inc
loopne
inc
loopne
dec
dec
std
out
mov
lret
mov
xchg
sahf
sahf
popf
sbb
add
add
incb
std
std
add
jmp
or
in
out
sbb
in
in
xor
loope
jecxz
mov
mov
mov
add
mov
fs
add
iret
add
faddl
je
jmp
insb
mov
std
std
shl
call
out
shl
std
shl
std
xlat
out
jmp
push
xlat
fcmove
sar
mov
mov
add
incl
incl
cld
incb
aad
aam
mov
pop
xchg
popf
or
pop
pushl
add
rolb
jo
fiadds
ja
in
pop
mov
clc
mov
std
shl
fldl2t
std
fldl2t
fsub
cld
xlat
call
cld
std
aam
push
jmp
rcl
sti
mov
sahf
sahf
das
add
add
into
int
or
arpl
ljmp
add
enter
aad
jb
loopne
ja
out
das
xchg
clc
pushf
enter
loop
clc
lret
fdivrp
test
hlt
repz
out
ret
aam
in
sar
in
aam
jmp
shl
in
fsubr
leave
test
incb
aad
aad
mov
jb
push
gs
mov
insb
inc
sbb
int3
and
sub
lcall
mov
out
in
lret
mov
loope
mov
lret
leave
ffreep
sarl
jecxz
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsb
les
mov
mov
fidivrl
jg
rol
stos
mov
lahf
mov
iret
mov
nop
sarb
int3
insl
aad
int
aam
iret
dec
xlat
cmp
fnstsw
das
jecxz
fisubs
loop
repnz
in
jmp
fcmovnu
fiaddl
std
incb
std
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
shrl
enter
aam
pop
mov
rcl
or
loope
or
into
int3
add
std
add
incb
cltd
cltd
cltd
add
mov
or
int
int3
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
enter
leave
mov
ret
ret
ret
mov
scas
scas
scas
insb
stos
lods
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
iret
int
std
mov
mov
roll
push
add
add
add
add
add
add
add
add
jae
jb
addr16
dec
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
into
call
rcl
dec
int
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
jae
je
xchg
adc
outsl
jo
popa
popa
arpl
outsb
outsl
insl
jb
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
lcall
cwtl
cwtl
lds
jb
and
add
pop
add
add
jae
je
fwait
xchg
lcall
xchg
clc
mov
test
addl
push
dec
dec
inc
mov
fwait
into
mov
mov
xchg
decb
mov
pushf
fwait
pushf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsl
test
cld
mov
xchg
xchg
xchg
cld
popf
sahf
popf
cmc
lcall
mov
push
push
imul
jle
mov
xchg
notl
mov
pushl
xchg
mov
test
lods
push
lods
stos
lods
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
lcall
cwtl
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
nop
bound
std
fwait
inc
jbe
cmpsb
aaa
jbe
scas
sub
outsl
pushl
aaa
jl
mov
mov
imul
int3
add
xchg
pop
scas
cmpsb
lods
test
lahf
pushf
sahf
jmp
mov
xchg
decl
push
ja
popl
decb
call
or
mov
sbb
pushl
and
jnp
les
xchg
rcrl
subl
jae
push
mov
movsb
test
cmpsl
test
ljmp
scas
mov
sahf
xchg
decl
or
mov
decl
pop
jmp
adc
shlb
dec
ds
iret
inc
mov
aam
call
push
xchg
dec
cltd
mov
mov
mov
mov
add
add
imul
cmpsb
lahf
movsb
cld
lods
scas
scas
pushl
mov
mov
call
push
pop
call
add
mov
add
mov
push
xchg
fcompl
fistps
jmp
pusha
movsl
jmp
cmpsw
call
fwait
mov
mov
mov
cmpsb
cmpsl
cmpsb
pop
add
add
popa
bound
mov
lcall
mov
mov
lcall
jb
cltd
and
xchg
pop
pop
lcall
add
mov
dec
xor
jmp
jns
in
jl
push
jl
push
jge
fistpl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
sar
mov
jmp
inc
jl
sahf
and
pop
ljmp
add
ret
or
dec
xchg
in
mov
hlt
xchg
cwtl
leave
stc
xchg
enter
inc
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ljmp
dec
cmp
sbb
movsb
add
mov
fs
add
aam
jns
in
outsb
scas
push
cmpsb
int
stc
lods
sar
cld
scas
sar
sti
lods
sar
std
lods
iret
in
mov
inc
mov
movsb
ds
incl
xor
xor
jno
jno
scas
mov
mov
mov
aad
aam
out
leave
lret
mov
mov
jmp
add
les
imul
add
call
pop
std
mov
fdivr
cld
ret
cld
ret
cld
ret
fcos
lock
shl
test
addl
stos
stos
stos
add
jmp
or
jmp
out
outsb
fldenv
movsb
daa
insl
ljmp
add
lret
faddl
jbe
out
aaa
xchg
cld
mov
std
iret
out
call
in
std
shl
std
aad
shl
push
aad
int
lods
scas
scas
popa
cmpb
std
incb
incl
lret
int3
shrl
mov
add
mov
add
loope
jns
repz
cmpsl
std
loop
cld
xlat
call
std
shl
sti
aad
sti
shl
push
leave
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
push
gs
mov
or
cmp
out
mov
aam
call
rcl
call
lret
jmp
scas
lds
cltd
fwait
add
sarb
xchg
dec
and
push
mov
ret
int3
lret
ja
mov
mov
lret
adc
into
outsl
fmul
iret
pop
dec
in
loopne
out
call
sbb
sarl
cmp
movsb
lods
arpl
mov
ret
mov
lds
int
fimuls
int
into
or
aam
std
incb
cmpb
std
std
add
add
add
rol
incb
std
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
in
js
xor
mov
ljmp
in
add
in
pop
andnps
out
xchg
adc
test
mov
scas
pop
nop
mov
int3
icebp
sub
cli
sahf
leave
mov
call
inc
cmp
gs
pop
sub
es
mov
cmpsl
stos
pop
xor
add
test
aas
stos
mov
mov
ds
jge
jae
hlt
scas
mov
pop
aas
add
sahf
mov
enter
and
call
adc
pop
movsl
addb
cmpl
bound
jmp
lret
imul
rclb
inc
roll
int3
xchg
shl
inc
push
xchg
mov
lcall
push
push
fbld
and
cwtl
imulb
jns
push
pop
jbe
add
mov
fldt
push
iret
sbb
out
inc
lods
lds
testb
js
rcrb
mov
in
pop
popa
jmp
xor
out
cld
jo
sahf
pop
xor
push
cltd
xor
cli
repz
popf
inc
mov
push
mov
fs
and
sub
scas
pop
insb
sbb
cmp
std
cmp
inc
inc
mov
in
mov
xorl
out
idivb
rcrb
cwtl
scas
push
or
clc
jns
dec
repnz
shlb
pop
xor
push
movsb
push
popaw
mov
jnp
inc
gs
mov
cmp
jo
add
and
pusha
ljmp
add
dec
bound
mov
mov
arpl
push
mov
jnp
push
loop
and
pusha
push
xor
call
mov
adc
cmp
cmp
add
adcl
push
push
jl
push
repnz
sbbb
loopne
dec
mov
test
jnp
or
ret
xchg
ret
push
data16
xor
ss
sub
jp
push
arpl
cmp
cmp
inc
jle
cmpl
adc
hlt
out
roll
or
dec
pop
push
movsb
jae
loope
adc
and
out
daa
rcrl
and
push
push
adc
in
adc
insb
push
es
out
xchg
cmc
movsl
sbb
imul
mov
xor
adc
mov
and
dec
inc
add
lret
je
into
hlt
pop
inc
mov
movsl
mov
sarl
ja
movsb
mov
xchg
push
scas
fistpll
lea
mov
hlt
add
xchg
mov
or
mov
mov
rorb
add
hlt
jbe
loop
and
jnp
cmp
push
or
fwait
sbb
test
dec
std
divb
push
inc
jle
cs
cs
lret
mov
lcall
fdivrs
cs
shr
icebp
jle
scas
xor
push
push
lods
pop
repz
jle
sub
stos
pop
sar
pop
negl
push
add
test
loope
mov
aam
popa
dec
pushf
or
cwtl
ds
andl
jl
xor
xchg
pop
rolb
adc
test
jb
cmpl
push
js
test
shlb
gs
clc
movsb
sbb
fcoml
sbb
add
repz
mulb
out
loope
jge
icebp
mov
ss
dec
lahf
pop
ja
testb
add
add
insb
xchg
lret
mov
mov
mov
sti
cs
repz
fdiv
imul
or
pusha
ds
push
adc
xchg
xchg
mov
in
mov
add
movsl
mov
jae
ret
xchg
push
outsb
jg
lret
pop
push
popf
mov
and
shrb
inc
jge
aaa
cmc
fiadds
pop
shrl
cld
and
xor
scas
cmp
imul
aam
repz
loope
lcall
pop
mov
cwtl
test
negl
sbb
mov
jl
mov
shrb
pop
mov
mov
sbb
jne
mov
inc
and
sub
mov
add
xor
lods
sub
xchg
dec
or
fmuls
call
mov
mov
rcr
mov
mov
lds
mov
jg
fbld
inc
pushl
out
or
scas
cmpsl
loopne
and
sub
jge
popf
inc
test
sub
popf
arpl
into
scas
ss
push
aas
cmpsb
sub
fnstcw
into
mov
add
repnz
out
fistl
mov
mov
cmp
sahf
scas
xor
add
jne
dec
adc
fiaddl
insl
jmp
loop
jge
cmpsl
jne
mov
cmc
fsubl
xchg
pop
lret
rcrl
out
jmp
sahf
fcomps
push
push
cmp
gs
mov
addb
pop
push
add
cmp
les
test
test
ss
mov
cwtl
and
adc
dec
jns
xchg
stc
test
add
lret
push
jns
cmpsb
dec
ret
stos
ret
stos
add
jp
xchg
pop
lods
push
in
jb
dec
jo
nop
test
mov
and
fnstcw
mov
pop
int3
mov
lahf
lods
mov
add
in
push
in
arpl
pop
cmp
in
loope
idivl
insw
add
lods
add
aad
stc
xor
or
test
fistps
mov
inc
dec
cmpsb
jnp
sbb
inc
mov
or
out
addr16
stc
pop
out
inc
test
dec
jns
out
std
and
mov
inc
mov
sub
mov
call
adc
push
mov
std
imul
dec
dec
ds
lods
stos
lret
lods
or
ret
orl
pop
fwait
push
adc
inc
out
xchg
andl
aaa
jle
out
xchg
pop
cmp
ret
lea
mov
int
mov
leave
inc
fstpt
rcll
pop
movsb
loopne
loopne
in
rorl
adc
pop
push
adc
mov
out
mov
fiaddl
or
stos
inc
sti
sub
mov
cmp
scas
pop
xchg
rorb
add
imul
add
shlb
jne
and
enter
movsl
ja
cld
lds
adc
add
andl
sti
xchg
pop
lcall
jl
sub
cs
push
call
mov
lods
inc
stos
test
es
lret
push
inc
cmpsb
stos
push
js
jbe
mov
dec
clc
pop
lea
push
dec
jo
imul
mov
lods
add
lret
and
sahf
push
test
jg
jae
mov
or
inc
sub
pop
sbb
dec
jnp
fldcw
pusha
idiv
mov
jg
push
adc
xor
arpl
jb
lds
nop
call
or
scas
cmp
popf
pop
ss
mov
push
jmp
adc
or
arpl
xchg
push
nop
push
fisttps
push
lock
or
insb
jl
lds
popa
xor
aad
push
inc
and
in
inc
push
xor
dec
dec
imul
xor
pop
sbb
insb
push
cmp
idivb
stos
mov
inc
out
mov
mov
int3
lret
bound
push
mov
inc
sar
lods
jmp
ja
popf
stc
xchg
lea
cwtl
mov
test
jge
test
ja
sub
hlt
jmp
into
gs
or
adc
sub
xor
mov
dec
in
sub
cmp
lret
sti
lods
adc
dec
xor
das
jo
cmp
ret
mov
add
push
fidivs
cmc
mov
daa
push
xchg
pushf
dec
test
mov
fwait
pop
int
cmp
inc
out
in
and
out
xchg
inc
add
out
and
sub
rcl
add
cmp
pop
jg
cltd
xor
scas
mov
loope
add
jne
pop
testb
sti
xchg
or
pop
sahf
fwait
jle
test
icebp
mov
dec
inc
fdivrl
mov
inc
push
xor
dec
bound
push
out
inc
fldcw
jne
lcall
push
jmp
mov
add
mov
pusha
lcall
xor
outsl
rcrb
mov
or
push
xor
ds
xlat
jge
stc
testb
popf
fwait
xor
or
inc
movsl
fwait
sbb
ja
push
movsl
sahf
adc
gs
mov
lods
inc
push
push
xchg
sub
mov
push
jnp
xchg
dec
outsb
add
cld
adc
xchg
inc
sbb
fwait
xor
scas
xor
fmul
inc
dec
in
imul
jns
inc
mov
je
or
inc
js
sbb
testb
mov
daa
mov
mov
test
aas
xchg
inc
mov
xor
push
movsl
cmp
adc
dec
imul
jl,pn
jg
leave
lea
nop
pop
cmc
add
es
jae
call
es
inc
fidivl
add
movsl
dec
pop
lods
inc
dec
lock
fists
insl
jb
pop
mov
add
rcll
lds
movsb
pushf
xor
dec
adc
jb
add
xor
cli
xchg
mov
fstp
jo
stos
out
shl
sti
xchg
loop
xor
bound
xchg
outsl
xchg
adc
std
xor
aam
pop
or
xor
dec
iret
inc
xorb
pop
ljmp
cs
popf
mov
stc
cmp
mov
sbb
mov
add
stos
sbb
aas
push
lods
mov
add
inc
ret
xchg
xor
jo
lods
xchg
idivl
jmp
or
jnp
add
stos
push
mov
jle
das
addr16
mov
rol
mov
das
mov
arpl
lds
test
out
mov
inc
clc
test
ljmp
dec
jle
fsubrs
lahf
mov
adc
fsubrs
data16
mov
dec
xchg
sub
enter
pusha
jmp
cmpsl
ds
cld
lea
cli
dec
in
adc
outsl
or
adc
lahf
ss
mov
mov
leave
push
movsl
mov
aas
out
jne
loopne
aad
add
pop
je
arpl
fcoms
leave
pusha
mov
dec
das
movb
xchg
sub
or
cmp
aad
or
gs
js
roll
xchg
sub
dec
les
stos
cmpsl
ds
ds
scas
in
enter
push
ret
mov
add
mov
dec
pop
jecxz
orb
inc
jp
test
jg
add
lahf
aam
push
add
lds
mov
fst
push
jmp
js
in
out
mov
dec
call
sub
pop
or
mov
adc
shr
clc
xor
lret
ret
lea
cld
xchg
enter
jo
fnsave
pop
sahf
fs
shrb
adc
int
or
mov
sub
call
test
iret
mov
push
insl
sbb
pop
int3
sub
pusha
in
jle
fisttps
mov
push
popf
jno
popf
xor
xchg
adc
das
es
icebp
xchg
lds
add
lods
push
out
fisttpl
js,pt
or
pop
cmp
push
pop
mov
xchg
loop
sub
cmc
push
aam
cmp
sbb
insl
mov
xor
jnp
cmp
jno
cmp
inc
int
cmpb
out
sarl
aaa
into
in
adc
ja
loop
push
cwtl
add
add
movsl
cmp
lods
adc
xor
call
shll
push
jge
or
inc
xor
jle
pop
hlt
cli
adc
addb
ljmp
and
mov
lcall
or
pop
repz
add
imul
jno
std
mov
das
in
push
out
mov
int
data16
stos
inc
add
je
inc
faddl
imul
push
aam
xchg
pop
icebp
push
sbbl
std
jne
mov
nop
es
mov
inc
inc
xlat
outsb
xor
push
pop
scas
dec
mov
jb
pop
jb
jmp
outsb
xor
add
mov
adc
mov
stos
inc
daa
mov
out
test
jp
xor
dec
shrb
insl
jb
pop
and
stc
nop
repnz
ljmp
mov
push
cmpsl
inc
fistpl
stos
jle
out
sub
jecxz
lret
jecxz
mov
fiadds
xor
pusha
mov
sahf
add
and
pop
xchg
mov
dec
sub
imul
fistpl
xor
out
xchg
mov
notl
ds
jbe
stos
addr16
jnp
mov
push
sbb
enter
je
test
jle
inc
ret
xchg
push
in
mov
jmp
inc
inc
push
inc
fmull
cmp
popf
cld
fnsave
cmpsb
cmp
shlb
dec
cwtl
inc
pusha
idivl
sub
push
cmp
pop
int3
pop
scas
adc
shrl
adc
mov
insb
add
adc
lea
xor
mov
leave
push
out
mov
fdivr
xchg
into
fdiv
mov
lock
and
add
je
sbb
push
jp
enter
xchg
cltd
push
outsl
push
pushf
mov
mov
push
sbb
aas
inc
pop
hlt
mov
insl
sub
je
fnstenv
xchg
stc
mov
jmp
pop
int3
lods
mov
pop
addl
lret
jb
mov
inc
add
or
sbbl
insb
fdivl
decl
jge
mov
dec
lahf
test
mov
insl
inc
ljmp
push
xor
cmc
punpckhdq
stos
pop
mov
aas
insl
insb
sub
xchg
mov
lds
fbstp
mov
shlb
pop
lock
das
cvtps2pd
xchg
dec
mov
es
lock
cmp
sbbl
add
or
ret
xchg
sub
xor
movsb
push
call
mulb
test
mov
adc
jg
and
cwtl
and
mov
call
or
scas
gs
sub
mov
shrb
aas
dec
fildll
int3
or
leave
add
lahf
ljmp
enter
shr
stc
mov
enter
adc
popf
mov
fisubl
f2xm1
jmp
sar
and
mov
pop
lock
ljmp
clc
xchg
or
xchg
mov
mov
or
cs
icebp
cmp
fnstenv
pop
or
rolb
fidivs
aas
xsha1
cmpsb
push
mov
filds
mov
xor
push
sub
dec
inc
push
loopne
pop
xor
mov
lcall
cld
repz
repnz
push
ljmp
test
hlt
jmp
xlat
sbb
cmpsb
cmp
scas
add
mov
outsl
push
dec
push
sti
xchg
js
adc
inc
push
ss
out
push
sbb
add
outsb
xor
jo
jmp
adc
mov
mov
test
shl
aaa
call
cmpsb
fnstenv
cmc
mov
adc
in
test
cmpsb
jnp
lret
loopne
ret
pop
mov
fsubp
js
push
mov
imul
pop
adc
aaa
scas
inc
test
ret
movsl
test
xlat
sahf
loopne
sub
dec
xchg
sub
and
into
gs
lods
call
ljmp
adc
jg
pop
jno
pop
sahf
sub
inc
ds
ret
imul
push
xlat
xor
lahf
loop
insl
adc
mov
sbb
dec
aas
cmp
cmc
mov
idivl
jmp
xor
arpl
fsubrl
or
repz
jmp
sbb
dec
inc
mov
test
pop
rcr
repnz
sbb
lea
mov
in
insb
std
jmp
adc
cli
jnp
cmovne
pop
push
inc
jmp
jb
push
popl
call
notl
mov
mov
mov
or
fistpl
and
mov
aad
int3
mov
fcmove
mov
rcr
xchg
xchg
in
mov
push
fdivrp
out
test
add
lcall
pop
mov
inc
mov
addr16
xchg
xlat
xor
jle
lock
adc
xchg
push
es
push
ja
mov
pop
mov
lds
sbbl
call
clc
push
fbld
mov
jne
adc
sub
dec
loop
dec
lret
xor
sub
mulb
sbb
test
pop
repnz
stos
cmpsl
ds
adc
xchg
jmp
jbe
adc
mov
icebp
add
mov
xchg
test
or
xor
testb
mull
inc
fmull
sbb
cmp
jl
push
ljmp
ss
sbb
mov
push
decb
or
add
push
jmp
dec
or
jl
jp
or
lret
cmp
cli
xchg
pop
pop
push
jmp
pop
scas
cmp
push
jle
mov
jnp
pop
lock
mov
inc
lret
bound
dec
in
jp
sub
cmp
pop
push
out
push
add
repz
jne
outsb
adc
iret
orl
les
ds
xchg
movsb
in
add
je
out
aad
and
cmp
pop
adc
xor
xchg
sub
or
mov
dec
nop
push
popf
shrl
popf
loop
into
aam
push
ljmp
clc
mov
xchg
cwtl
das
or
mov
test
shl
mov
lahf
xor
jg
jl
stc
outsb
adc
cmpl
pop
xchg
repz
push
or
jae
scas
jb
aas
xchg
inc
mov
xor
pop
ja
dec
cli
mov
stos
push
movsb
cmp
imul
out
mov
cmp
fidivl
pop
out
xchg
inc
fsubr
adc
xchg
test
sbb
dec
fcmovnbe
push
push
dec
fbstp
pop
lock
push
subb
inc
shrb
mov
cltd
xor
dec
rclb
gs
pop
push
dec
fists
pop
sbbb
cltd
fs
or
mov
aam
ret
inc
movsb
cmp
cltd
dec
in
sbb
mov
shrl
cmp
push
jmp
mov
pop
out
call
punpckhdq
adc
sbb
push
cmpb
mov
cltd
xchg
out
ret
mov
cli
xchg
sbb
out
loope
xchg
sub
dec
push
cmp
cmp
xor
and
fisttpl
mov
ds
cmpsb
cmp
fstl
xchg
sub
pop
imul
and
push
mov
lds
or
xchg
mov
cld
or
adc
mov
sub
fs
cmp
mov
fldl
push
out
jno
fs
push
mov
inc
fisubrs
in
test
daa
mov
cmp
push
in
stos
fwait
test
or
mov
sahf
imul
pop
stc
dec
loope
aas
jne
scas
sub
pop
mov
stc
mov
in
bound
mov
lods
sbb
jge
mov
test
cld
xchg
dec
add
je
sub
call
ret
fidivl
and
mov
rclb
ret
test
lret
xor
jmp
ljmp
dec
adc
je
mov
and
outsl
dec
inc
jns
bound
xor
in
xchg
pushf
push
cmpsl
mov
adc
jecxz
movsb
jo
pushf
mov
ret
fsin
sbbl
cli
sti
xchg
mov
cmc
mov
sbb
adcb
repnz
adc
add
xor
jl
gs
sbbb
scas
rorl
enter
divl
shll
loop
and
adc
ficoml
popa
sti
dec
in
subb
sbb
dec
loop
cmp
lds
pop
scas
adc
push
jmp
cmp
mov
lods
pop
mov
stos
popa
clc
fcompl
dec
loope
std
es
add
push
in
jecxz
push
call
xchg
jne
mov
adc
filds
or
xor
push
cmp
arpl
out
test
leave
mov
insl
add
xlat
xor
in
std
xchg
addl
cs
outsl
push
adc
lea
insb
xor
cmp
shrl
pop
outsb
add
jne
mov
cs
in
sub
dec
lcall
jg
cmp
je
les
xchg
xchg
cs
shrb
jge
push
dec
stos
mov
fsubrl
jne
std
xlat
outsb
mov
frstor
cli
clc
in
sbb
arpl
call
loop
insb
add
cld
xchg
cltd
mov
sbbl
test
cmp
add
stc
cltd
jbe
lret
sbb
pop
lods
in
repnz
into
mov
shr
je
sbb
pop
and
jp
inc
fabs
fwait
sbb
xor
cmp
lret
push
ds
js
ret
inc
fmuls
jno
aam
sub
jns
inc
fiaddl
pop
repz
gs
fstl
pop
icebp
pop
js
int
jnp
lahf
dec
pop
sub
jo
je
cmp
jmp
or
pop
jns
data16
cwtl
dec
xchg
xchg
fldcw
or
scas
lods
inc
loope
mov
xchg
stos
scas
inc
sbb
pushf
xor
jns
dec
pop
push
jbe
das
mov
inc
loop
xor
shlb
push
mov
xor
mov
js
insl
add
add
test
pop
sahf
cmp
add
sahf
xchg
mov
mov
sahf
out
inc
fdiv
mov
adc
movsl
das
movsb
out
add
sub
adc
xor
inc
das
jb
jecxz
or
pop
cltd
xor
add
and
cmpl
mov
fildl
imull
mov
sbb
jg
inc
in
xchg
dec
jecxz
mov
mov
fimuls
ljmp
popa
clc
cmpsb
pop
aam
mov
jg
stc
lods
repnz
sbb
std
push
dec
stc
nop
cmp
jae
mov
cmp
push
dec
insl
cmp
stos
std
cmpsl
ds
adcb
xor
test
call
jp
std
xchg
in
jnp
loopne
jno
insb
jne
stc
push
cli
cmp
jmp
or
mov
inc
cwtl
jae
or
add
cltd
jl
jo
mov
shrb
aam
push
push
and
pop
xchg
fnstenv
enter
iret
aas
xchg
ret
pop
add
cmc
shl
into
gs
repnz
push
shr
cmp
mov
mov
rcl
aas
fdiv
movsl
cmp
stc
inc
ffree
xlat
fdivl
out
sbb
xor
push
pop
mov
fsubrs
fimuls
xchg
xor
pop
push
inc
faddl
xchg
sbb
in
xchg
cmp
lahf
insl
mov
call
push
sti
mov
mov
pop
lods
inc
out
cmc
mov
inc
fstl
xchg
testb
add
nop
jne
inc
cltd
push
push
pop
repnz
out
fcomps
mov
lds
arpl
add
pop
jb
cmp
shrb
call
or
inc
mov
lret
shlb
xor
xchg
pushf
push
mov
aaa
hlt
gs
and
cwtl
xor
or
and
cwtl
push
outsl
ret
xor
xchg
sub
adc
inc
mov
xchg
mov
push
dec
loope
sti
das
neg
and
rcll
push
sbb
add
fnstenv
xor
cmpsb
btc
cmp
pop
out
rcll
add
popl
andb
mov
dec
jo
xchg
fs
lahf
je
push
pop
hlt
mov
inc
out
adc
xor
cmpsl
mov
xor
or
cmp
fcoml
mov
dec
mov
test
sahf
mov
pop
mov
mov
dec
ret
xchg
cli
data16
sbb
dec
out
jmp
arpl
adc
int
dec
loop
movb
fmuls
push
pusha
fists
pop
jecxz
mov
subl
jp
loopne
push
nop
mov
addb
mov
sbb
dec
loop
cmp
mov
mov
fs
xor
lret
das
mov
cli
loop
sub
sub
bound
sub
jge
int3
arpl
ds
and
fistl
sbb
dec
mov
add
andl
cmp
daa
out
lods
jae
mov
add
add
mov
inc
mov
pop
cmp
rcll
pop
cmp
enter
popf
pop
enter
andl
scas
and
pushf
lods
pop
mov
xor
pop
stos
pusha
pushf
push
pop
ud0
pop
cmpsb
sbb
and
outsl
pop
lock
and
push
stc
mov
aam
or
sti
cmp
fdiv
loop
jecxz
and
test
sarl
insb
loop
cmp
data16
cmp
xlat
ljmp
push
ds
dec
das
jecxz
cmp
shrl
pop
nop
jns
repz
pop
mov
mov
cli
lret
add
aam
cli
sub
sbb
ljmp
xchg
push
and
cld
xor
add
mov
rcll
test
pop
pusha
push
cli
xchg
xchg
add
and
mov
xor
and
mov
in
gs
pop
out
outsw
aas
aas
jge
mov
push
cmp
fwait
movsl
scas
rorb
loope
fwait
mov
roll
movsl
mov
neg
pop
test
push
std
jge
shlb
cs
push
mov
xchg
sub
aad
mov
div
mov
or
jg
sub
sub
mov
or
cmp
mov
push
jns
fwait
jp
cmp
add
lahf
sub
fildll
cmp
fucomp
xchg
lea
push
mov
iret
push
iret
mov
ljmp
fnstcw
pusha
cmpsl
fisubl
push
mov
imul
jmp
imul
into
inc
scas
rcll
add
in
in
test
fidivl
cmpb
enter
inc
out
push
stc
pushf
xor
ja
xor
in
push
or
shll
add
rolb
aad
inc
fsubl
cli
pop
orb
hlt
fs
cs
or
jns
aaa
into
and
mov
or
outsl
jp
push
out
lahf
xchg
lea
or
fadds
mov
outsb
add
out
cld
ss
cmc
push
mov
pushl
inc
sbb
and
mov
push
cmc
add
cmp
popf
clc
es
push
insb
rcrl
lret
xor
mov
test
mov
mov
xchg
mov
lds
pushf
inc
popa
mov
xlat
jnp
pop
jnp
mov
ja
xchg
jp
bnd
sahf
or
mov
cmp
pusha
loope
push
adc
or
cmpsb
or
jae
mov
pushf
loope
cli
daa
adc
test
sub
sahf
shrl
ja
cmp
loope
loop
jo
sti
xchg
jmp
mov
or
cltd
fidivrl
push
jg
sbb
aas
lds
leave
cmp
daa
or
lcall
movsl
fmul
imul
pop
scas
dec
adc
fdivs
jmp
sahf
mov
out
loop
les
lret
sti
enter
inc
lahf
fadd
jne
fcmovbe
aaa
cmc
sbb
rcrl
and
idivb
inc
mov
push
push
cmp
push
and
sub
inc
aam
jne
js
xchg
xor
or
std
and
mov
test
xchg
roll
push
mov
mov
jle
into
std
mov
mov
push
call
xor
mov
es
fisubrs
in
and
cmpsl
xlat
rorl
loopne
cmp
xor
ljmp
push
les
xor
push
jp
mov
sbb
or
pop
das
aaa
push
gs
inc
mov
rcrl
jae
jne
and
pop
js
push
jne
cmc
ja
mov
outsb
add
dec
inc
pop
sahf
add
xchg
sbb
outsb
add
sub
mov
loopne
adc
lahf
inc
les
out
lods
push
sub
aad
ret
pushf
xor
cltd
xor
push
and
mov
cmp
or
aas
add
lea
inc
in
cltd
sbb
jp
jbe
das
stos
inc
popa
xchg
std
jmp
mov
ljmp
repnz
sbb
pop
jb
jae
adc
jle
sbb
jmp
cltd
pop
popa
inc
fcomi
fists
inc
in
repnz
cmp
inc
pop
sub
in
into
gs
sub
in
push
subl
mov
rcr
ja
pop
pop
daa
pop
rcl
pop
cmp
imul
in
xchg
test
shll
sub
aad
imul
lods
leave
pusha
fbstp
movsl
add
call
mov
lret
sub
sbb
das
inc
pop
push
rcrl
daa
test
test
add
jmp
push
xchg
add
inc
negl
xchg
outsb
sti
inc
jno
ret
clc
cmc
mov
cmpsb
rcrl
push
shll
sub
push
ds
in
stc
fdivl
shl
inc
int3
mov
xchg
sub
mov
jae
dec
jae
imul
xsaves
dec
loope
mov
mov
pop
testb
mov
add
test
and
dec
iret
mov
aam
jle
dec
js
mulb
sub
outsl
xchg
pop
stos
cmp
popf
das
repnz
pop
cltd
sbb
pop
dec
lds
jbe
sub
arpl
ljmp
and
loope
inc
pop
test
mov
or
movsl
cmpsb
stos
sbb
mov
outsl
out
mov
movsl
sbb
imul
aam
pop
mov
mov
scas
and
mov
mov
int3
int
or
cli
out
dec
repz
xchg
sbb
fldenv
jae
pop
inc
inc
mov
dec
adc
test
fldcw
ret
icebp
push
lds
cmpsl
sbb
push
cmp
cmp
iret
inc
pop
inc
fldt
push
lcall
loop
inc
sbb
pop
pop
sub
fs
fst
or
pop
push
cmp
pushf
push
mov
lahf
daa
mov
inc
js
cltd
cwtl
mov
lret
xchg
adc
sub
ljmp
inc
xchg
jmp
xor
mov
push
in
pop
mov
xor
scas
sub
fwait
xor
les
lcall
push
ljmp
mov
out
jl
or
xchg
dec
and
hlt
gs
mov
hlt
jg
xchg
fwait
jnp
fadds
outsl
test
out
stos
cmpsl
push
pop
sahf
add
xor
adc
push
cwtl
aaa
insb
xor
sub
dec
loopne
mov
push
arpl
add
xchg
sub
je
adc
xor
fnstsw
lahf
pusha
or
pop
push
dec
call
pop
push
push
dec
mov
xor
out
aaa
stc
push
sbb
rolb
out
sbb
cmp
insl
inc
or
xorb
pop
sub
rclb
dec
cmpsb
fisubs
popf
ljmp
movsl
movsb
jmp
xchg
adc
xchg
mov
imulb
adc
iret
xchg
mov
add
in
mov
push
scas
dec
je
mov
inc
sbb
cmc
mov
dec
loopne
repz
pmaddwd
imul
out
push
les
cli
mov
xchg
mov
xor
and
xor
gs
sub
daa
inc
mov
test
aad
mov
stos
lods
jb
push
adc
adc
fsubrl
scas
xchg
cmp
gs
jno
mov
roll
xchg
add
push
bound
icebp
aad
push
outsl
jl
arpl
in
xorb
jp
arpl
and
pop
jp
pop
lods
out
out
sub
shll
dec
add
mov
notl
mov
mov
pop
aam
add
xor
mov
test
inc
mov
pop
lock
hlt
mov
rolb
and
jno
filds
xor
push
pop
dec
mov
jmp
loope
push
and
pusha
mov
out
jno
es
dec
jge
jnp
inc
stos
push
jl
sub
aas
je
fsubrl
push
movsl
pop
std
push
mov
xor
add
mov
fs
push
les
xchg
scas
jl
arpl
jnp
ds
push
xor
mov
inc
jl
loop
pop
stos
stc
mov
loopne
sbb
mul
jecxz
test
movsb
mov
popa
stc
xchg
jo
push
inc
sbb
inc
pop
mov
scas
pop
js
xchg
insl
fwait
hlt
shll
lock
leave
je
loope
lahf
inc
push
mov
repz
push
out
push
xlat
pop
test
int
jnp
stos
andl
xchg
jp
movsl
mov
xchg
aad
sub
lock
pop
stc
push
pushf
inc
pop
mov
jmp
and
lret
loope
std
dec
in
and
mov
xchg
sub
mov
push
fnstenv
mov
ljmp
pop
mov
ret
ss
sbbl
inc
lcall
or
lods
add
punpckhbw
cmp
std
pop
and
das
icebp
in
rclb
sbb
mov
sub
enter
test
add
test
push
loop
out
roll
out
sahf
mov
lock
int
lock
stc
jns
dec
jns
and
fldt
leave
es
leave
pusha
jbe
in
pop
xor
push
adc
dec
mov
push
pop
add
xor
push
mov
pop
push
or
ss
ss
outsb
adc
adc
cmpsb
mov
rorl
mov
inc
ljmp
inc
in
fldenv
ret
jae
call
scas
mov
ljmp
xchg
testb
jmp
sub
sub
popa
or
and
aas
xchg
sbb
pop
dec
cmp
aam
dec
jo
push
sub
or
sbb
data16
inc
xor
popf
inc
xor
mov
jg
adc
jns
lods
jnp
dec
jns
jge
add
jbe
es
add
enter
mov
xchg
les
mov
insl
mov
jle
in
adc
push
sbb
xor
rol
mov
xchg
repz
ss
fucompp
mov
pop
sub
int
jno
loopne
mov
inc
xchg
sbb
jne
mov
loope
test
cltd
xor
faddl
dec
lahf
mov
sub
mov
mov
inc
dec
mov
add
test
pushf
fstps
or
stc
nop
sbb
pop
ficompl
ja
push
out
pmuludq
pop
or
cmpsl
daa
push
mov
xor
inc
mov
jbe
add
loop
dec
mov
push
sarb
scas
cs
lods
fbstp
jg
in
mov
outsl
out
inc
out
mov
nop
lea
lahf
push
mov
sarb
add
lret
jmp
mov
daa
add
sub
jle
push
je
stc
gs
sub
popf
pop
movsb
pop
test
mov
xchg
mov
adc
popa
insb
xchg
sub
mov
mov
outsb
sub
negl
cmp
mov
push
and
pop
ss
repz
dec
out
jb
sub
xchg
push
jmp
mov
push
push
push
mov
popf
repnz
inc
pop
or
and
jo
repnz
das
jle
cmp
pop
rcl
out
bound
js
dec
pop
sbb
and
out
xchg
adcl
add
movsl
dec
pop
jo
add
js
stos
cmp
lret
xor
push
cmpsl
popf
xor
in
cmp
mov
hlt
sub
leave
in
leave
cmp
mov
lret
push
shl
and
or
mov
dec
cld
mov
popa
in
shl
mov
sub
mov
dec
cmpb
and
lahf
pop
call
pop
lock
int3
shrb
and
adc
xchg
sub
xor
pop
xchg
fs
push
stc
xchg
push
ljmp
fs
jle
or
cmc
mov
pop
mov
push
in
pop
aad
or
jo
sarl
xor
cmpb
aas
cmp
sbb
mov
cli
test
fdivrp
inc
leave
adc
xchg
cs
insl
lds
stc
pop
mov
sub
data16
mov
sub
mov
sar
push
cmp
sub
and
int
mov
push
xor
and
rcrl
mov
int
imul
adc
or
jo
dec
sub
mov
rcll
mov
jb
pop
movsb
mov
sbb
enter
sbb
sub
xor
push
sub
and
lea
test
inc
imul
test
mov
into
mov
rcrb
add
int3
stos
je
lret
movsl
sbb
mov
add
add
les
jno
and
mov
cwtl
das
sbbl
inc
icebp
jecxz
xlat
xor
dec
push
lods
cwtl
outsl
and
ret
arpl
nop
icebp
mov
lods
inc
and
rcrb
ljmp
ret
fdiv
ror
lret
sbb
fdivrl
int
loop
pop
lahf
std
frstor
mov
add
mov
sbb
test
push
lcall
push
call
xor
mov
in
repz
push
addr16
mov
scas
in
test
sti
scas
je
lcall
fwait
rclb
hlt
inc
pop
mov
inc
sbb
outsb
mov
cmpsl
push
pop
popf
xor
jae
test
mov
pop
mov
test
dec
inc
or
decl
mov
push
inc
jb
push
pop
std
mov
push
cmp
xchg
cmp
push
bound
add
pop
or
mov
dec
inc
mov
jp
mov
inc
rorb
inc
imul
lods
inc
daa
push
repnz
int3
push
or
stos
movsb
adc
inc
mov
jl
lcall
out
out
sub
mov
ret
dec
imul
xor
fidivs
xor
das
sbb
xchg
sbb
mov
jge
pop
mov
mov
lahf
sub
pop
mov
mov
mov
cmpsb
inc
lret
xchg
push
xchg
or
dec
cmp
mov
jg
cmpsl
mov
lock
and
fdivrs
mov
cmc
adc
fidivs
xor
and
das
pop
stos
jae
inc
mov
je
xchg
inc
and
cltd
bound
jns
inc
cmp
out
sub
aas
cltd
cltd
loopne
push
aaa
pop
cmp
sub
jns
loope
popa
push
mov
and
or
cmp
aaa
xor
inc
or
gs
lods
jnp
cltd
jo
movsl
sbbb
imul
jne
dec
pop
sub
sbbb
pop
inc
aaa
lock
xor
bound
push
ret
cmpsl
pop
dec
jb
leave
movsl
mov
aas
pushf
dec
jo
mov
dec
inc
push
push
inc
out
mov
xchg
lahf
dec
pop
mul
sub
mov
dec
movsb
rolb
sub
dec
shlb
out
xor
fisttpl
sub
cs
ljmp
cmpsl
loop
jp
and
push
test
mov
popf
das
into
icebp
loopne
cmp
mov
adc
xchg
push
mov
test
aaa
sbb
mov
ret
lods
ljmp
mov
fidivs
ja
imul
or
mov
jmp
testl
fcoml
xchg
sub
arpl
jle
push
mov
daa
inc
fstps
and
add
mov
inc
jne
dec
sub
notl
mov
movb
aaa
in
dec
mov
adc
inc
imul
shrb
xor
iret
es
xchg
mov
mov
push
mov
cmp
push
inc
lods
arpl
enter
mov
outsl
pop
sahf
flds
cmp
stos
shlb
mov
addr16
push
mov
stos
and
mov
push
pop
jg
mov
dec
cld
and
or
adc
pop
mov
xchg
push
and
pop
mov
aaa
sti
dec
in
bound
xor
idivl
pop
rolb
cltd
add
mov
inc
jmp
mov
mov
adc
xchg
jae
je
pop
inc
lret
mov
std
pop
repnz
xor
test
dec
mov
mov
push
jmp
incb
outsb
insl
inc
mov
and
pop
xchg
and
scas
icebp
mov
push
sub
or
cli
push
orl
add
add
enter
pop
pop
jbe
pushf
fnstsw
aam
jbe
dec
leave
sub
ret
sbb
or
hlt
adc
call
stc
nop
jo
xlat
outsb
cmp
out
test
in
inc
fcomps
ds
test
out
add
daa
cwtl
jb
imul
push
sbb
sti
inc
jl
dec
insb
dec
es
xchg
pop
addb
pop
dec
loopne
adc
mov
sub
loopne
sbb
mov
iret
mov
mov
sub
xchg
pop
dec
mov
je
lahf
insl
ror
sti
xchg
push
hlt
mov
sbb
jbe
cmp
movsb
xchg
xor
enter
imul
dec
in
sbb
dec
cmp
imul
sarb
andl
data16
jge
xchg
sbb
mov
sub
test
xchg
insl
sub
mov
fstps
jg
jno
add
orb
in
mov
add
xor
in
mov
pusha
pop
in
dec
sbb
adc
sbb
cmpl
cld
pop
lods
xchg
stc
cmp
fidivrl
sub
imul
xchg
jne
inc
loope
stos
out
xchg
pop
fs
sub
push
pushf
and
aas
aam
insb
jmp
mov
push
push
inc
inc
in
mov
adcb
and
pcmpgtd
stos
cltd
mov
data16
xchg
dec
xchg
push
push
mov
fs
dec
xlat
and
out
xchg
cs
arpl
pop
jnp
jo
xchg
dec
loope
loop
ror
xchg
mov
daa
loopne
pop
lret
cli
shll
mov
iret
aam
sub
in
std
add
adc
pop
sub
jae
cmp
stos
pop
ljmp
stos
stos
mov
rorl
xchg
shr
pop
out
mov
aas
jno
lods
stos
fisttps
rcll
scas
cmp
sbb
dec
dec
data16
sbb
inc
movhlps
je
leave
arpl
adc
or
add
push
pop
je
add
xchg
sub
push
inc
sbb
sub
aas
dec
jp
sub
mov
mov
jmp
cld
xchg
pop
call
insb
sbb
stos
and
pop
jb
loopne
or
sahf
fwait
push
add
push
rcl
fidivl
clc
dec
dec
movsl
js
mov
lahf
test
lea
inc
mov
scas
stos
loopne
push
outsb
jns
lea
cmpsl
sub
fwait
mov
iret
inc
in
imul
jle
push
cwtl
in
push
xor
push
mov
push
cld
mov
addr16
mov
out
je
test
cmpl
cmp
dec
mov
scas
out
push
sub
add
shrl
add
stos
lret
adc
outsb
ljmp
fcmovbe
push
inc
mov
sbbb
mov
je
pushl
scas
in
nop
ds
int3
mov
ror
arpl
int3
push
cwtl
bsf
mov
and
imul
subb
mov
lock
clc
rolb
mov
sbb
std
add
lods
enter
lcall
sbb
int3
pusha
subb
and
xchg
repz
test
mov
fsubrl
in
push
pop
aam
pmulhuw
out
xchg
mov
or
aas
arpl
mov
mov
rorl
jp
and
pop
fcompl
imul
ja
jb
push
cmpsl
cmp
movsb
pop
shrl
dec
js
jnp
cltd
rorl
push
add
xor
bound
inc
fildll
dec
xorl
dec
pop
xchg
notl
jmp
mov
jbe
lods
inc
xlat
push
dec
cltd
pop
inc
dec
add
cmp
fldt
sbb
xchg
dec
mov
cwtl
loop
icebp
int
mov
add
loope
fbld
in
sbb
pop
les
mov
xchg
js
add
or
cmp
insl
add
jmp
mov
mov
test
mov
fmull
xchg
stos
mov
nop
insb
rol
leave
into
jno
clc
mov
les
xor
fcoms
add
sub
insl
lret
movmskps
lods
and
adc
movsb
sub
cmp
dec
xchg
push
adc
mov
dec
daa
lcall
push
leave
inc
xor
xchg
mov
dec
and
shl
lret
jns
test
jge
xor
sbb
arpl
loop
ss
sbb
inc
mov
pop
fistpl
in
and
push
add
jmp
mov
aas
cld
pop
dec
jecxz
mov
shll
lods
mov
mov
and
sub
cmc
movsb
sub
dec
inc
sbb
xchg
add
mov
in
sub
mov
rclb
fldt
mov
cs
dec
push
or
sub
daa
lock
sbb
cmp
or
jmp
test
mov
mov
out
mov
push
mov
rcll
mov
insb
jns
cld
xchg
cmc
jle
push
pusha
push
sbb
das
cmpsl
mov
jmp
aaa
leave
xor
mov
add
sar
jnp
fidivl
sbb
or
and
aaa
xor
cmp
pop
rcrb
xchg
cs
push
pop
jbe
xchg
movntq
lock
outsb
lcall
mov
mov
jmp
aaa
fistps
inc
jmp
call
xor
bound
daa
hlt
test
sub
es
imul
cmp
enter
xor
shlb
lds
rorb
inc
dec
cmp
push
rcl
out
ja
cmp
insl
push
lret
xchg
ja
push
adc
clc
jae
jne
dec
js
shrb
stc
fldl2t
and
test
loopne
xor
jmp
xor
or
pop
movsb
mov
adc
mov
or
mov
fildl
aam
pop
push
daa
je
mov
testl
jmp
or
imul
imul
mov
jo
mov
pop
ret
call
movsl
cld
stc
rcll
ss
cs
add
adc
inc
pop
jno
and
cld
adcl
adc
jne
adcb
fwait
xor
add
imul
pop
xor
mov
add
scas
into
inc
mov
fs
mov
shrl
mov
jl
push
mov
mov
sbb
stos
mov
add
pop
imul
mov
insl
sbb
xor
jne
mov
inc
test
pop
addr16
in
jb
aaa
push
cmpsl
cmp
add
das
push
adc
xorw
pop
push
gs
lods
xor
mov
fcoml
push
inc
sub
pusha
fimuls
sbb
addb
xchg
test
lcall
xor
push
mov
jno
icebp
dec
pop
lods
mov
mov
sbb
adc
mov
sbb
out
adc
ficoml
les
jecxz
mov
sbbb
dec
sub
ja
or
cltd
and
and
nop
int3
arpl
jle
add
popl
fnsave
add
adc
jns
dec
xor
push
insl
stc
sub
mov
movsb
ret
xchg
enter
or
adc
mov
pushf
fsubl
adc
sub
sbb
xor
les
adc
or
xor
out
push
or
sti
push
cmp
dec
iret
xchg
cmp
adc
in
ss
xchg
incl
cmpsb
pop
icebp
movsl
fmul
jle
scas
dec
loope
jns
aas
push
hlt
stos
daa
lcall
cmpps
lret
xchg
pop
movsl
add
mov
push
insl
aas
push
into
pop
lahf
in
out
lret
mov
loopne
loopne
lea
bound
les
stc
xor
in
imul
test
lea
testb
sti
adc
imul
push
pop
mov
push
jg
push
scas
mov
movsl
popa
fsubl
and
push
insb
daa
mov
pop
in
sahf
or
loope
sub
test
inc
fdivrs
push
sbb
mov
mov
and
lods
fisubl
enter
sbb
sbbl
pusha
add
es
xor
mov
inc
xorl
push
sar
xor
pop
jb
movsb
mov
push
sub
sahf
mov
adc
mov
pop
mov
subb
jl
popf
insl
cmc
ret
pop
fists
inc
dec
add
js
outsb
imul
aad
in
lea
stos
pop
cmp
insb
out
in
int
and
mov
in
jbe
mov
fdivs
dec
inc
loopne
xchg
fsubrl
push
insl
sub
movsl
imul
push
fcoms
jmp
xchg
mov
jle,pt
mov
adcl
cmpsl
push
push
cmp
out
popf
push
mov
fisubl
iret
aam
stc
xor
adc
aas
mov
fldcw
arpl
xor
cmp
rorb
dec
jns
and
push
xor
pop
sahf
movsl
xabort
imul
mov
dec
fcmovnu
xor
loopne
mov
pop
leave
mov
hlt
insl
dec
hlt
lret
decb
inc
fidivrs
push
nop
les
les
xor
inc
lods
mov
xchg
insb
inc
inc
adc
or
jb
mov
stc
inc
sub
add
fcoml
std
push
xchg
mov
idivb
dec
lods
js
out
xchg
test
sbb
or
and
cwtl
fdiv
and
stos
rcll
pop
adc
lahf
sub
push
push
dec
push
jp
sbb
push
fwait
inc
fisubrs
repnz
dec
gs
jle
out
add
mov
add
xchg
pop
es
bound
dec
mov
orl
int
insl
mov
push
shrb
ss
jg
xchg
xchg
dec
push
popf
aas
jle
pusha
je
xchg
mov
pop
mov
mov
inc
arpl
test
mov
jno
orb
out
mov
mov
pop
push
stos
push
in
fdivl
sbbb
add
mov
dec
andb
and
pop
pop
jo
inc
arpl
xchg
in
mov
insl
add
xorl
outsl
mov
fmuls
ror
add
in
push
sub
int
stos
push
loopne
mov
cmp
mov
popf
or
sub
not
lods
pop
mov
hlt
test
mov
in
test
dec
sub
mov
inc
mov
test
sbb
cmp
les
sub
cli
js
and
xlat
call
rclb
loop
sub
rcl
jnp
mov
cmp
push
dec
inc
add
sbb
and
jp
jnp
mov
push
mov
xor
push
adc
or
xchg
jg
cmp
inc
imul
inc
and
push
aad
repnz
xor
jne
scas
jno
adc
jmp
call
aad
int
and
xlat
test
lea
stos
jle
lods
fldt
mov
leave
gs
loope
or
and
sub
adc
mov
xor
ficoms
xchg
and
mov
mov
cli
loop
iret
cwtl
jbe
adc
push
sub
sbb
add
xchg
mov
jns
repz
into
data16
jle
scas
es
in
xchg
into
push
sub
or
cmpsb
or
xchg
je
cmp
cltd
dec
movsb
cmp
xor
in
daa
cmp
push
rclb
loope
leave
push
aas
sti
cmpsb
addr16
lcall
inc
ljmp
imul
mov
ds
jl
frstor
jp
loope
xlat
insl
inc
mov
sub
or
dec
or
xor
mov
loopne
stos
xchg
jl
xor
or
shll
cmp
jg
add
xor
pop
int
pop
pop
into
aas
pusha
or
mov
cwtl
mov
or
inc
fs
xchg
xchg
cmp
and
jne
push
xchg
push
and
and
sbb
lods
cli
sub
pop
pop
sbb
cmp
into
out
rol
inc
cmp
shlb
pop
cmp
pop
mov
data16
aam
lock
adc
fstpl
jb
adc
popa
scas
stc
jo
sub
push
xchg
xorb
dec
add
stos
clc
sahf
pop
sbb
push
int
aam
es
push
jo
and
stos
push
lret
push
and
dec
push
jbe
push
dec
pop
xor
pushl
pop
xor
mulb
dec
pop
pop
mov
lock
rorl
mov
ds
and
cli
add
push
xor
mov
add
mov
jge
int
adc
leave
sbb
and
mov
cmp
cs
pop
add
mov
out
icebp
inc
pop
jecxz
xor
and
sub
jmp
sbb
and
aaa
push
jp
lds
add
popf
cmpb
repz
fwait
loop
movsl
dec
jmp
roll
rcrb
fdivs
dec
aam
fwait
xor
mov
add
pushf
adc
cltd
daa
stos
testl
sbb
pop
jb
xchg
in
push
jne
ss
ds
adc
sbb
sub
loopne
lret
in
xor
jns
test
cmc
xchg
cmpsb
mov
inc
push
nop
pop
xchg
dec
aaa
or
mov
mov
mov
mov
cmp
in
inc
mov
mov
mov
lahf
mov
scas
add
notl
ret
or
das
or
dec
fwait
and
mul
movl
in
adc
int3
aam
xor
jmp
sbb
push
mov
imul
push
xchg
cmp
loop
ds
sub
push
mov
sahf
or
jmp
iret
subb
and
mov
push
fcom
push
insl
cmp
test
jns
enter
mov
sub
imul
sbb
sub
imul
rcll
mov
inc
fistpll
add
mov
rcrb
mov
mov
imul
std
cmc
pop
mov
lea
mov
cmp
add
mov
pusha
subb
aas
and
les
and
cmp
inc
das
inc
fsubl
fists
lahf
mov
inc
push
push
push
inc
and
outsl
push
in
lret
inc
imul
sahf
jg
add
outsb
out
stos
dec
popa
and
mov
dec
subl
inc
rcrl
mov
sbb
cwtl
stos
rorb
xchg
jnp
pop
adc
sbb
xor
popf
and
mov
test
stos
adc
mov
es
inc
mov
mov
or
out
out
mov
dec
mov
cmc
bound
xchg
adc
adc
mov
ss
lret
loopne
mov
test
sub
andl
jp
in
mov
and
cli
addb
sbb
dec
loop
cmpsl
mov
fisttpll
mov
add
mov
push
jp
xchg
xor
mov
in
scas
mov
mov
mov
cmp
sahf
movsl
les
fldenv
lea
ljmp
fldl
outsb
rcll
insb
add
mov
push
mov
fidivl
pop
cld
lcall
push
push
cs
dec
and
xchg
xchg
pop
outsb
lds
test
ljmp
arpl
mov
ds
icebp
add
xchg
pop
mov
push
push
dec
xchg
dec
xor
inc
mov
cwtl
test
jns
cmc
cs
es
pandn
adc
test
and
out
sbb
mov
aam
mov
int
xor
add
leave
mov
je
ret
cmp
jecxz
jg
mov
pop
jbe
popf
adc
jmp
sub
mov
fs
mov
cmp
push
aam
mov
sar
pop
xor
push
ljmp
lock
shl
test
inc
fcoms
pop
adc
mov
xchg
mov
iret
inc
daa
mov
add
scas
pop
and
adc
jbe
shrl
leave
pop
out
cli
sub
xchg
sti
aas
aad
add
hlt
jb
sti
push
or
xchg
rcll
pop
dec
pop
xchg
cld
xlat
insl
mov
gs
in
scas
hlt
adc
scas
sbb
or
mov
fdivrp
xchg
subb
push
xchg
mov
cmp
adc
or
xlat
je
pop
aam
out
out
sub
sti
push
in
inc
jg
jns
leave
add
jne
add
mov
sbbl
and
mov
les
dec
roll
dec
adc
jge
int3
jg
push
cld
outsl
jl
fimuls
movsb
out
adc
lret
lcall
test
push
sub
loope
and
xchg
jg
add
xchg
push
pushf
outsl
or
jnp
and
loope
sahf
mov
shl
cmp
andb
push
aas
cmpsl
repz
rcr
jae
xlat
loopne
aad
jge
lret
sub
jl
sub
mov
or
inc
inc
pop
ja
sub
pusha
and
jbe
test
adc
mov
inc
call
adc
mov
loopne
test
sbbl
add
inc
mov
fxch
push
or
test
notb
in
shr
loope
imul
loopne
insb
and
push
incb
cmpb
mov
sti
jnp
lret
dec
stos
cmp
add
xor
daa
pop
push
adc
jl
test
or
and
call
lcall
sbb
push
mov
outsl
aad
add
repnz
jo
dec
cmp
add
sahf
jae
push
call
popf
out
sti
into
testl
sbb
shrl
adcl
in
push
xor
punpckhdq
mov
out
loop
icebp
or
cltd
push
dec
outsl
mov
adc
ss
add
out
mov
lahf
lret
fistps
mov
enter
outsl
xchg
aad
pop
pop
mov
xchg
jg
inc
iret
iret
into
jne
mov
mov
jmp
sub
loop
rcrl
mov
adc
adc
add
arpl
aad
paddd
jg
sbb
pop
sbb
popl
lock
mov
fldt
sbb
cmpsb
dec
xor
xor
adc
push
out
repz
xor
outsb
jl
popa
ret
jo
push
mov
fimull
scas
sbb
fcmovnu
cmpsb
popf
movsb
gs
fnsave
adcl
pop
xor
data16
gs
xchg
inc
xor
add
add
cmp
pop
push
pop
icebp
or
add
pop
push
cmp
and
mov
mov
jnp
pop
mov
shlb
pusha
fcomp
into
inc
or
mov
fs
shl
push
push
inc
xlat
mov
pop
cli
sbbl
dec
js
sti
fwait
into
repnz
stc
adc
or
icebp
sub
cmp
dec
xor
sub
push
push
outsb
lds
xchg
dec
jns
dec
xor
dec
add
mov
jl
in
ret
repz
in
test
cmp
or
rorl
sub
dec
fldl
mov
shll
inc
jecxz
jbe
mov
add
js
jecxz
pop
icebp
test
jmp
jne
test
scas
inc
icebp
insb
add
jbe
dec
loop
mov
stc
sub
lahf
pop
xchg
push
cmp
out
dec
rcrb
add
pushf
fs
jmp
mov
mov
or
sbb
cmpsl
mov
adc
lods
stc
enter
jmp
xchg
xchg
mov
leave
lret
mov
daa
call
pop
xor
int3
popa
icebp
or
lock
mov
out
ficompl
pop
sar
pop
jecxz
add
pop
test
cli
ficoms
mov
or
and
add
xchg
call
clc
cmpsl
mov
and
cmpsb
outsb
cmp
imul
inc
cltd
dec
pop
jmp
add
inc
cwtl
jae
in
xchg
imul
pop
shll
sub
repnz
int3
dec
out
ficoms
outsb
loop
bound
std
popa
pop
xchg
sub
cmpsl
pushf
dec
sbb
pop
shrl
insb
jb
mov
add
dec
test
scas
pusha
dec
mov
imul
out
mov
ret
pop
xchg
aam
ss
pop
call
outsl
fsubrp
aas
xchg
hlt
inc
das
ret
xchg
adc
fdivr
cmp
or
imul
inc
gs
lcall
inc
sub
jmp
fcompl
mov
bound
jne
inc
ljmp
mov
cmp
std
daa
stc
and
fidivs
shlb
cmp
lods
push
xor
aam
pop
or
or
lret
jno
pop
mov
in
loop
inc
sahf
push
and
nop
push
cwtl
dec
xor
cltd
adc
cli
cmp
cmp
rolb
dec
push
or
fstl
roll
mov
adc
push
xchg
ficoms
int3
fstpt
nop
insl
ja
lret
push
mov
jge,pn
fcoms
sbb
jnp
fists
cmp
inc
repnz
std
fwait
push
shld
xor
or
aad
and
lock
stos
es
cmc
or
fimuls
adc
mov
xor
pushf
fs
sbb
nop
shl
dec
loope
imul
pop
push
pushl
mov
cmc
jnp
shl
pop
leave
icebp
lds
popf
dec
push
xor
bound
pusha
push
lea
js
jmp
xor
lods
nop
cmpsl
dec
pushf
addr16
adc
sub
dec
dec
pop
xchg
xchg
lods
inc
adc
mov
mov
mov
imul
in
pop
adc
sub
stos
inc
outsb
test
daa
insb
mov
jge
mov
mov
and
in
dec
out
adc
leave
data16
outsl
loop
les
jp
stc
dec
or
ss
cmpsl
xchg
cmp
and
pushf
insb
scas
xchg
fnsave
subl
std
sbbb
aaa
int
sub
bound
pop
mov
addr16
in
je
pop
inc
cmpsl
mov
ret
xchg
mov
bnd
cmc
les
loop
jg
mov
push
mov
scas
push
data16
sbb
push
outsl
mov
repnz
jns
aad
jnp
loop
fstps
jle
stos
rorb
add
or
jb
xor
int
mov
jmp
insb
sub
popf
cmp
xchg
out
xchg
adc
aaa
mov
movsb
lock
or
les
sub
jmp
xor
cmpsb
cmp
push
ret
sbb
xor
mov
mov
ss
shl
adc
push
into
xor
push
inc
mov
notl
xor
jbe
es
fidivrl
push
montmul
cmpsb
inc
int
bound
xor
mov
cmpsb
sub
fsubrs
mov
rclb
or
mov
mov
adc
cld
das
jns
inc
ret
add
or
roll
aad
cmp
adc
lret
cmp
xchg
imul
inc
stos
cwtl
test
and
imul
sub
nop
xor
test
imul
and
mov
lds
mov
mov
adc
int3
scas
mov
adc
jge
mov
pushf
pop
scas
int
pop
outsb
jnp
lods
adcb
das
daa
jmp
xor
jo
jb
in
sbb
jb
mov
mov
lods
push
adc
pop
add
mov
xchg
popf
or
mov
andb
or
pop
sahf
jmp
mov
lahf
mov
pushl
cmp
sbb
shl
sti
in
and
pop
inc
in
xchg
lods
pop
push
mov
sbb
cmp
jg
sub
cmpsl
cmp
ja
cmp
pop
test
mov
loop
push
push
fs
push
in
adc
test
mov
testb
fdivl
cli
insb
jb
push
pop
add
adc
aad
sahf
xor
aaa
jb
pop
mov
inc
xlat
loopne
fcompl
insb
aas
xor
mov
pop
xchg
lds
lret
lds
jnp
fidivrs
inc
mov
adc
sbb
sub
mov
mov
insl
leave
cwtl
test
sub
mov
es
push
ja
add
addr16
lock
xor
push
daa
imul
xchg
xchg
cmp
sub
dec
inc
loope
mov
and
daa
add
xchg
pop
into
pop
mov
pop
ja
lods
mov
mov
inc
stos
push
lret
aad
scas
push
aas
pop
mov
jmp
mov
pop
sti
xchg
pop
and
pop
push
lcall
and
add
sub
test
call
test
call
and
xor
pop
repnz
add
lods
sub
sub
arpl
adc
sbb
cmp
mov
jl
xor
sbb
jne
lret
dec
or
dec
loopne
ror
out
mov
or
cmp
dec
bound
clc
push
xor
add
std
pop
dec
sbb
jecxz
xchg
add
into
xor
mov
add
cmp
mov
mov
push
adc
sub
movsl
push
scas
push
adc
jo
adc
lahf
pop
insl
mov
sub
pop
test
cmp
into
jb
or
inc
mov
push
adc
gs
mov
push
push
mov
shlb
sti
mov
in
cmp
movsb
cmp
pop
les
gs
dec
sub
jb
outsb
mov
int
aas
xor
stos
dec
loop
clc
testb
mov
int
mov
in
ss
jnp
cmc
les
sbb
sti
mov
cmp
andb
jno
shll
mov
mov
dec
mov
pop
iret
push
xchg
cmp
or
sti
pop
push
out
mov
cmp
mov
lret
push
push
xor
xchg
cmp
jp
sbb
xor
scas
cltd
xor
test
leave
in
xlat
xchg
icebp
daa
inc
pusha
pop
adc
jle
ret
insb
add
xchg
or
xchg
movsb
js
mov
out
mov
xchg
push
lds
pop
jbe
int
mov
xchg
mov
inc
mov
fs
les
cmpsl
sbb
mov
ds
scas
inc
dec
fdivs
pusha
sbb
mov
xchg
call
stc
mov
ja
push
js
stos
xchg
xchg
fstl
mov
rolb
pop
jne
leave
sbb
stos
mov
lret
data16
and
adc
dec
inc
fistpll
call
jo
jo
adc
iret
cmpsb
shll
call
stos
jae
pop
sbb
lock
aas
cwtl
mov
xor
xor
dec
push
mov
loopne
inc
fisttpl
adc
cmp
jae
jl
push
push
mov
add
or
push
and
mov
frstor
lds
mov
stos
xchg
pop
jbe
push
fwait
xchg
ret
lcall
and
adc
xor
adc
dec
cmp
lods
popa
cmc
sub
shlb
push
out
push
je
shrb
inc
shlb
mov
es
shrb
dec
xchg
mov
pop
mov
adc
cs
xor
adc
dec
inc
popf
subb
xrelease
push
mov
cs
push
sub
repz
das
pop
mov
ret
shl
xor
dec
dec
negl
stc
push
push
leave
cmp
stc
adc
pop
or
push
fnstsw
pop
and
sarb
je
in
dec
aad
aad
or
lahf
jle
mov
sbb
cwtl
mov
ss
std
jmp
out
cld
pop
shlb
sub
imul
out
add
das
pop
ficomps
data16
cmpsl
loopne
jl
lock
lcall
addr16
xor
push
scas
orb
mov
adc
lahf
mov
mov
add
mov
aad
cmp
cmc
jle
dec
insb
out
sbb
jp
pop
test
rolb
xor
imul
rclb
lret
jae
xor
jmp
mov
mov
test
sarb
dec
bound
fcomps
lock
inc
ficomps
mov
mov
adc
cmp
insl
pop
inc
stos
lods
cmp
imul
dec
repz
insb
clc
mov
fdivp
test
mov
mov
andl
loopne
cmp
lahf
add
js
fcmovbe
pop
push
pusha
push
movsl
push
push
lea
add
pop
xor
jne
inc
mov
xor
rcr
mov
mov
pushf
jae
jg
std
sub
ljmp
xchg
bound
subl
loopne
and
mov
ficoml
inc
nop
mov
jbe
dec
mov
add
imul
lret
fcompl
js
push
int
xchg
ja
lods
call
dec
shlb
in
cmc
and
mov
clc
jo
fists
ret
pop
mov
add
mov
imul
in
cli
xchg
in
and
push
sub
adc
mov
push
insb
xchg
lret
repnz
push
xchg
stc
mov
dec
mov
fwait
push
ficoms
test
jle
scas
std
lret
into
pop
vaddsubps
pop
call
das
data16
jp
in
std
inc
inc
sbb
inc
popa
mov
bound
jmp
mov
cwtl
dec
lock
js
cmp
popf
adc
jns
jg
mov
sbb
mov
aas
jb
add
mov
mov
xor
jmp
imul
xchg
xchg
mov
fisttpll
mov
dec
jbe
aaa
decb
inc
repnz
stos
sub
je
test
fildll
ficomps
jge
pop
inc
push
out
dec
test
xlat
jge
cmp
aad
or
mov
and
cmp
into
add
adc
push
pop
and
xchg
xchg
pop
jl
push
pop
mov
jmp
in
jno
xchg
sub
xchg
sbb
cwtl
scas
add
out
hlt
xchg
pop
cmp
outsb
sti
cmp
dec
test
ja
pusha
cs
dec
loopne
mov
push
ds
pop
ds
ljmp
out
add
dec
loop
jae
fnstsw
xchg
loop
xlat
icebp
out
jmp
sub
nop
xlat
jmp
lcall
mov
ret
incb
aad
xchg
movd
call
xor
rorl
sub
push
ja
fisubrs
sub
inc
pop
jns
pop
mov
mov
pop
rolb
pusha
or
mov
lods
inc
push
pusha
out
xor
repnz
pop
fnstcw
in
jne
cmp
mov
imul
repnz
rorl
sub
adcl
sbbb
pop
add
add
mov
addr16
call
lock
mov
sub
or
mov
shll
jg
imul
aam
jle
inc
fildll
scas
sub
and
pop
popl
outsb
or
mov
out
sub
rcll
xchg
dec
push
pop
mov
and
out
xchg
jmp
adc
and
inc
and
push
gs
fldl
enter
jns
repnz
jae
ljmp
sub
and
adc
mov
pop
jge
inc
adc
sub
loop
xchg
xchg
negb
pop
fucom
sbb
repz
das
push
xor
push
lret
rorb
aaa
loope
mov
out
fcomps
or
dec
cld
dec
adc
scas
xor
addr16
lea
or
lods
fisubl
sub
std
sti
outsl
out
stc
fldt
sub
jecxz
sbbb
mov
int3
inc
sbb
mov
jl
jle
and
fsts
xor
push
add
xlat
aaa
cmpsl
push
je
dec
jae
in
sub
rorb
xchg
mov
dec
sbb
push
outsl
xchg
fs
into
xchg
mov
icebp
and
jnp
outsl
es
sbb
cmp
imul
xor
dec
or
sbb
arpl
pop
xchg
movsb
or
test
adc
sub
adc
add
or
push
fcoml
and
rclb
js
repnz
popl
or
lods
call
jp
add
pop
dec
inc
jb
mov
out
xor
mov
call
hlt
scas
outsl
xchg
out
sub
mov
jp
stc
test
add
jmp
outsl
adc
dec
jns
aam
and
cmc
nop
test
sub
cmp
stos
xor
and
add
ljmp
call
add
cmp
fidivrl
fidivl
fisttpl
popa
stos
and
sub
imul
pop
mov
jo
pop
push
sarb
and
pop
enter
sub
or
inc
push
cmc
pop
mov
inc
sbbb
pop
in
dec
mov
cmp
in
push
cmpb
pop
sub
cmp
repnz
rcl
mov
inc
cltd
into
jb
cmp
mov
stos
xchg
add
inc
xor
inc
dec
xor
shrb
or
sub
stos
or
and
mov
pop
iret
lret
roll
jno
ret
outsl
or
in
std
or
inc
ds
fdivr
adc
shlb
sub
cltd
imul
pop
push
arpl
cli
add
mov
or
loope
inc
addr16
xchg
shl
icebp
pop
mov
push
rcl
les
xchg
repnz
loop,pt
sahf
xlat
dec
push
add
enter
loop
ja
xor
jne
scas
fnstenv
into
inc
ds
test
or
sub
push
sbb
imul
cmp
cmpl
and
lods
lea
mov
lret
inc
fsubrs
mov
pop
stos
popf
jmp
mov
adc
cmpb
loopne
fwait
sbb
in
les
push
jmp
lea
nop
inc
or
les
bound
ja
imul
mov
xchg
cmpsb
dec
stos
mov
mov
jns
inc
fwait
mov
int3
popa
xchg
dec
inc
push
loope
inc
call
lds
xor
jecxz
pop
das
inc
cmp
out
test
pop
insb
dec
inc
cmp
gs
das
faddp
xchg
stc
pop
ss
adc
mov
imul
in
xor
and
mov
lods
mov
inc
ficompl
ljmp
pusha
jnp
or
lods
cmp
scas
inc
dec
insb
int3
dec
jle
into
test
rclb
and
popa
and
push
sti
xchg
xchg
xor
test
inc
and
sahf
test
xchg
mov
xchg
arpl
xchg
sbb
xor
push
cmp
inc
pop
pop
mov
jnp
mov
sbb
out
sahf
push
clc
sbb
mov
pusha
ss
repnz
push
xor
mov
dec
lock
or
scas
pusha
or
cmp
xor
rcrb
aam
divl
add
pushf
dec
mov
fidivl
adc
and
mov
insl
sbb
push
outsb
sub
fsubrs
shlb
dec
sub
dec
pop
sub
sub
inc
push
sbb
into
loop
fs
xchg
lret
sbb
aam
in
pushf
arpl
in
scas
sub
add
add
mov
jns
fidivs
jns
rcr
mov
add
cltd
mov
dec
dec
and
dec
add
outsl
shll
stos
xor
arpl
fs
imul
and
mov
mov
adc
lds
mov
pop
mov
sar
pop
add
inc
sbb
or
xchg
int
add
mov
loopne
fisubrs
test
xor
adc
bound
cltd
pop
call
dec
andb
and
push
stc
pop
out
cmp
jbe
rcr
jns
lret
sbbl
loop
lock
test
cwtl
inc
add
fistpll
bound
daa
fcoml
scas
ret
inc
stos
push
dec
scas
sbb
or
lcall
and
aam
cmpsl
in
ds
out
lret
or
xchg
dec
sbb
outsl
loop
mov
std
jg
andl
pop
pop
cmpsb
out
mov
lods
dec
sbb
test
adc
lds
cli
and
loop
stos
in
fidivrl
test
push
pop
and
cmp
xor
pop
js
xchg
fwait
xchg
pop
arpl
sarl
xchg
fists
out
inc
out
cmp
xchg
cmp
dec
fwait
jne
jns
jmp
jns
rcl
mov
mov
pushl
xor
rorl
dec
sub
adc
and
jecxz
adc
jo
or
dec
xor
cld
or
dec
sub
iret
fmull
jecxz
loopne
add
cwtl
mul
ficomps
mov
lret
pop
ret
pop
ret
imul
jl
enter
andl
mov
ficoms
cwtl
cmp
bound
xor
pop
jbe
jecxz
stc
lcall
addl
xchg
dec
xchg
in
aas
mov
sbb
xlat
push
cmc
les
imul
jo
repz
test
insl
xorb
icebp
lahf
pop
mov
mov
xor
pop
mov
xchg
pop
mov
lret
bound
or
jns
mov
pusha
das
and
cltd
xchg
pop
jmp
cmp
dec
mov
cmp
push
sub
stc
inc
dec
into
xchg
lods
stc
adc
negl
sbb
punpckhwd
cs
inc
out
push
mov
xchg
and
lea
aam
lret
bound
jmp
out
dec
jl
insl
mov
or
repz
adc
jb
pop
daa
jmp
pop
push
mov
inc
or
int3
sub
push
shll
or
aad
jecxz
int3
lret
inc
mov
bswap
loopne
inc
clc
test
jne
mov
test
inc
out
cmp
pop
and
mov
movsl
testb
jl
push
scas
dec
cld
icebp
xchg
lods
jno
lds
stos
xor
inc
unpcklps
cmp
out
xor
mov
insl
das
push
fwait
inc
mov
out
pop
inc
fldcw
dec
pop
add
jg
outsb
mov
xchg
sub
imul
jnp
shlb
popf
inc
xchg
cmp
adcl
mov
mov
fdivp
lea
or
out
mov
pusha
int3
fidivs
or
pop
jbe
adc
push
rcl
jmp
xchg
ljmp
mov
fisttps
xlat
cmp
daa
dec
rcll
les
shrl
mov
fpatan
xchg
and
pop
adc
or
in
movsl
mov
lds
dec
lock
cmc
mov
push
je
ja
mov
shll
mov
cmp
jno
sbb
repz
fisttpl
pop
cmc
or
cmp
lods
stc
add
cwtl
pop
jle
xor
dec
ljmp
cld
movsl
aam
fldcw
pop
inc
fwait
mov
popa
xchg
leave
cmp
lock
jnp
shl
xchg
sub
js
in
dec
adc
cwtl
sbb
push
popa
push
jne
mov
clc
in
in
mov
es
push
in
testl
in
push
adc
xchg
jne
pop
xor
jns
fsub
cmp
js
xor
inc
mov
sub
das
int
fsubl
add
imul
inc
sub
jno
lret
mov
outsl
jnp
mov
jge
pop
test
sub
and
mov
loope
mov
and
cmpsl
or
dec
pop
lock
add
push
js
add
sub
mov
xchg
or
sbb
sbb
dec
mov
lea
clc
sub
iret
xchg
sub
pop
loope
lcall
in
test
cmp
shl
mov
ret
jmp
shrb
xchg
aad
dec
adc
mov
jl
and
jge
iret
inc
add
add
inc
mov
repz
push
jne
adc
loopne
iret
mov
jl
leave
mov
sbb
pop
push
dec
gs
out
xchg
insb
fistl
mov
lahf
inc
sbb
cmp
data16
jecxz
pop
popf
je
ret
mov
pop
cltd
jge
lcall
lods
inc
sbb
stc
inc
push
sub
ljmp
cmp
mov
sahf
idivl
add
fstpl
ss
es
cmpsb
sbb
mov
xor
lcall
sub
movsb
lea
iret
dec
mov
pop
xor
les
xor
andb
cmc
adc
inc
mov
jae
mov
call
lds
out
xor
pop
sub
mov
mov
mov
dec
in
or
adcb
addr16
clc
xor
add
loopne
sbb
xlat
mov
in
jne
aad
or
or
pop
sub
lea
lret
sub
aas
fimull
mov
repnz
add
into
push
mov
pushw
aaa
mov
and
movsl
test
test
popl
arpl
popa
lock
sub
dec
mov
insb
repz
in
sub
add
cmp
jl
ficomps
cld
lcall
push
andb
enter
testb
or
shrl
imul
xchg
push
frstor
xor
into
inc
push
push
iret
cmp
rolb
xchg
inc
loopne
mov
sub
push
idivl
mov
mov
cltd
movsb
jnp
add
in
inc
mov
pop
int3
fidivrs
test
idivb
cmpsb
cmp
loope
insb
lods
mov
ficompl
xor
add
fsubrs
push
inc
aas
inc
shll
lret
cmp
lods
push
push
fcomps
pop
insl
sbb
cwtl
xor
lcall
and
jmp
or
insb
and
das
lods
sti
mov
shlb
mov
jmp
or
jbe
sbb
cmp
add
mov
movsl
pop
sahf
push
imul
je
and
jmp
xor
mov
je
inc
inc
ficoms
xchg
aad
int3
pop
inc
outsb
sub
pop
dec
inc
dec
and
aaa
neg
das
mov
cmp
mov
jae
dec
inc
dec
popa
ljmp
mov
sub
cmpsl
cmpsl
out
lret
cld
adc
xor
sbb
aam
or
pop
sub
inc
lods
pop
mov
and
mov
cwtl
sub
inc
decb
sub
lahf
mov
adc
leave
pop
push
popf
cmp
push
inc
scas
out
popf
stc
inc
repz
out
and
data16
test
xlat
cs
xor
mov
pop
dec
and
shrl
popa
roll
outsl
push
clc
pop
inc
fisttpl
outsl
in
mov
leave
cmp
jbe
fldl2t
test
imul
push
in
xorl
addr16
xchg
movb
mov
jecxz
cld
xlat
shll
dec
mov
jnp
add
nop
mov
mov
or
dec
stos
xor
adc
lods
sbb
mov
adc
lahf
cs
rcl
pushf
pop
and
addb
dec
pop
es
pop
and
fmuls
negl
mov
xor
or
sbb
pop
adcb
or
btr
dec
mov
jl
inc
sbb
lcall
fisubl
mov
push
std
push
jbe
add
test
faddl
sbb
xchg
pop
add
mov
push
push
inc
jecxz
mov
cmc
movsl
jg
push
jl
test
lods
pop
mov
jp
es
popa
call
xchg
cmp
addr16
mov
gs
xlat
rep
and
arpl
jns
aam
cli
xchg
xor
insb
jbe
sbb
testb
daa
adc
pop
push
add
adc
test
psubsb
push
mov
fsubrs
mov
push
lea
xor
xor
jg
and
aaa
sub
insl
in
inc
fs
test
inc
mov
ret
mov
xchg
xor
outsl
cs
shl
rcrl
cmpsb
cmp
add
sti
and
sub
inc
rcrl
xor
adc
in
movsl
js
sbb
ja
js
mov
pop
dec
loope
xor
test
call
adc
dec
sbb
or
js
add
xchg
stos
sti
nop
repnz
jns
into
pusha
lods
dec
inc
decl
jg
hlt
pmaxub
pushf
inc
stos
inc
mov
fcmove
leave
mov
fstpt
rcrb
inc
sub
js
test
sahf
addr16
addr16
in
pop
mov
sarb
lods
xor
stos
lcall
xchg
or
sahf
jb
aaa
add
test
mov
sti
push
xchg
out
xor
pop
fwait
adc
push
outsb
dec
pop
sar
xor
inc
push
fwait
scas
dec
push
pop
incl
mov
xor
pop
arpl
adc
cwtl
insb
mov
sub
add
pop
xchg
xchg
je
jge
push
push
movsb
sbb
test
cmp
scas
jle
sahf
movsl
rcrb
mov
sub
push
cwtl
mov
push
push
add
cmp
mov
orl
les
and
mov
add
pop
mov
jne
mov
dec
mov
add
mov
sti
pop
ds
adc
push
pop
aas
ds
xor
adc
inc
inc
pop
scas
bound
frstor
add
push
sub
cmp
repnz
out
cmp
roll
add
pop
out
add
lods
jbe
fildll
sbb
xlat
stos
or
dec
push
es
push
insl
mov
lahf
and
test
dec
outsb
sti
mov
sub
cld
pop
push
aam
inc
sub
fdivl
sub
int
fmul
push
fdivrs
lcall
sub
das
nop
dec
sbb
push
mov
adc
jb
xlat
mov
dec
loopne
shrb
mov
outsl
and
in
adc
jb
fnstcw
push
lods
jmp
mov
fists
add
out
loop
test
mov
call
xchg
add
push
pop
cmp
loope
clc
mov
shrl
pop
shrb
cmp
xchg
xor
in
xor
mov
xchg
inc
insl
or
lret
xor
mov
shr
inc
xorb
xor
mov
fimull
and
mov
lods
ljmp
arpl
xchg
mov
arpl
dec
fs
sahf
out
out
sub
sbb
and
es
ds
ja
outsl
push
ficoms
mov
mov
lods
sbb
cmp
call
sete
lret
mov
xchg
test
push
movsb
xchg
ljmp
fdivrl
cmpsl
popa
inc
jne
not
shrl
sahf
loopne
jne
test
push
call
incl
clc
and
push
push
sbb
into
mov
cmp
mov
nop
faddl
clc
loop
ds
mov
test
mov
and
mov
cmpsl
imul
and
repz
addr16
out
lret
jp
std
push
xor
bound
jp
subl
mov
shrb
cmp
add
cwtl
negl
xchg
pop
adc
push
xor
outsl
add
push
fldt
into
mov
jl
rcll
lods
and
sti
cld
push
sub
inc
pop
mov
xor
ret
push
insb
andl
inc
fsub
push
xchg
mov
xor
aad
push
and
jnp
test
fbld
push
in
cmp
jb
xchg
imul
movsl
xor
aad
mov
mov
gs
cmp
add
fimull
mov
and
daa
inc
add
call
mov
mov
lcall
inc
cld
sub
movsl
cmp
or
jne
fdivs
into
iret
and
cmp
xchg
xchg
fistps
xchg
dec
pop
sub
adc
cmc
pop
sub
pop
scas
mov
clc
xor
in
dec
shrb
fistpll
adc
shrl
push
jae
iret
aam
sbb
push
jge
test
subl
or
scas
fidivrs
push
xor
push
mov
or
dec
pushw
add
push
xor
loop
or
push
lds
add
subl
sbb
jo
sahf
and
push
es
je
push
mov
je
pop
cld
push
loope
xchg
loop
negl
sub
scas
xor
sub
pushf
mov
add
jge
mov
cmp
xchg
loope
ror
in
nop
movsb
cmp
pop
ljmp
jno
iret
jae
cmpsl
movsb
and
jns
lret
sti
popf
add
int3
push
arpl
add
daa
fwait
xor
out
mov
lea
push
enter
or
jns
fldl
xchg
jl
xor
add
fnsave
jns
add
dec
pop
xchg
lcall
xchg
js
jl
cmp
sar
xchg
ljmp
loope
fcmovnb
ret
pusha
rcrl
xor
adc
cld
xchg
fucomip
mov
scas
pop
cmp
sub
sbb
cltd
das
mov
es
mov
inc
push
mov
and
jno
mov
fmuls
push
loopne
out
mov
push
mov
xchg
jnp
test
lea
ja
push
xchg
fmulp
mov
sbb
cmp
aaa
int3
cmp
adc
inc
repnz
in
iret
das
repnz
mov
fistpl
inc
inc
in
shrb
sbb
divb
mov
lds
push
mov
mov
or
icebp
ror
pusha
push
and
xor
in
xchg
inc
sbb
leave
pop
sbb
loopne
xchg
mov
lods
call
fsubrp
inc
and
lret
stos
clc
jno
inc
fadds
cli
pop
push
mov
adcb
and
dec
imul
inc
xchg
cmp
cs
xchg
cmc
pop
call
loop
lds
mov
sbb
pop
cmpps
sub
or
mov
pop
icebp
cmp
sbb
sub
fbstp
scas
xor
mov
shrl
jmp
in
cld
mov
inc
push
push
lods
jbe
loop
out
mov
ds
add
les
shl
lea
call
stos
mov
lret
jl
push
out
mov
adc
cmp
clc
jae
cwtl
or
insb
lds
cmp
insl
sub
adc
lods
jecxz
sbbw
pop
adcb
push
dec
xchg
cld
outsl
in
js
stos
lret
ror
lock
add
aad
xchg
gs
jb
push
or
xchg
sbb
mov
mov
sbb
lret
hlt
xor
jne
mov
and
pop
adc
hlt
sbb
int3
addl
movsb
push
sahf
pop
push
nop
testb
inc
fdivs
inc
movsl
push
add
aam
in
pop
jg
ja
push
mov
xor
fstp
adc
ds
stos
dec
ja
ds
rcll
cwtl
push
mov
or
push
jbe
push
dec
dec
loop
mov
mov
pop
stos
imul
xor
adc
aaa
cmp
push
in
pop
cmp
pop
cs
adc
mov
sub
enter
inc
jg
add
aaa
stos
mov
cmp
mov
fnstcw
pop
cmpsl
incl
test
sahf
orb
mov
mov
sub
mov
aaa
iret
xorb
mov
add
add
idiv
xchg
outsl
mov
mov
and
inc
por
ja
mov
mov
cwtl
push
cmpb
fs
cld
push
cli
and
xchg
test
das
lds
mov
push
push
xchg
movsb
bnd
xor
inc
outsb
loope
movsl
mov
mov
in
mov
mov
dec
pop
jecxz
shl
push
movsl
aad
cmp
pop
into
jecxz
sub
imul
push
jnp
out
and
jecxz
insb
xchg
rcrb
in
andl
pop
push
inc
testl
jmp
loopne
mov
bound
dec
out
cltd
jmp
and
add
scas
xlat
call
das
xlat
shlb
cmp
mov
push
dec
dec
movsb
mov
jl
add
test
rcl
mov
xchg
stc
and
mov
xlat
add
dec
les
jle
gs
dec
add
fwait
push
sbb
hlt
cmpsl
inc
xor
into
iret
out
int
fwait
lock
jmp
jge
mov
hlt
xor
sub
inc
mov
xor
aam
pcmpeqd
xor
inc
mov
xor
std
popf
xor
dec
xchg
pop
dec
in
push
mov
mov
dec
cmp
orl
pop
adc
mov
rorb
cmpsb
imul
pop
out
push
push
jns
test
push
push
mov
int
test
lea
sbb
pop
cmpsb
decl
lods
inc
push
and
xor
cltd
lcall
adc
aaa
jne
dec
rcrl
push
ret
sbb
add
dec
ret
pop
inc
repz
add
pusha
test
mov
adc
push
push
je
outsb
push
add
or
cmpsb
mov
push
mov
xchg
push
into
ljmp
xchg
ljmp
movsl
and
xor
inc
aad
addb
inc
iret
ja
xor
rorl
pop
movups
cmp
add
push
call
cmp
jno
ja
fnstcw
pminub
add
cmpsb
in
xor
mov
sbb
shrb
adc
jge
repnz
loope
push
add
inc
push
loope
in
repnz
enter
push
ljmp
push
and
push
jp
pop
test
sbb
mov
or
outsb
stc
ljmp
test
ret
nop
xor
jmp
push
imul
mov
je
adc
test
movsl
sahf
add
and
jns
ret
lcall
xchg
int3
fs
cmc
adc
div
pop
inc
fxch
rcrb
into
insb
pop
scas
dec
stos
dec
lret
jbe
ljmp
pushf
and
or
subl
inc
xchg
inc
xchg
ja
dec
out
pop
mov
adc
gs
push
filds
in
clc
mov
and
inc
cmpsl
shrb
or
mov
fmul
push
les
push
sbb
loop
xor
mov
lock
popa
and
dec
cmc
cmp
outsb
mov
or
xchg
in
xchg
jecxz
dec
push
jl
shrb
stos
pop
jnp
or
jecxz
push
add
jno
or
and
lea
pusha
cmp
stc
insl
hlt
push
iret
cli
aad
test
mov
ja,pt
daa
es
loop
mov
mov
xchg
xor
mov
loope,pn
shlb
punpcklbw
xchg
cld
sub
mov
push
mov
cwtl
cli
mov
jg
xchg
dec
adc
jb
popa
scas
xor
popa
iret
std
lret
aad
scas
mov
add
and
mov
jle
or
xchg
mov
test
shl
adc
jo
xchg
and
mov
test
ljmp
rorl
fwait
pop
xchg
mov
mov
icebp
inc
aas
movl
adc
jmp
mov
mov
ret
ret
les
testb
fdivs
daa
push
stos
sub
scas
jns
dec
jb
cmc
cld
in
insl
ljmp
loopne
mov
push
cmp
pop
mov
mov
out
out
or
add
js
pop
lds
repz
arpl
sbb
xor
adc
push
push
cmpsl
or
sub
inc
or
cld
inc
xchg
push
insl
or
out
int
lret
jne
mov
and
cmp
je
mov
fcmovnu
std
add
pop
mov
push
fmull
iret
mov
int3
maxps
stos
mov
pop
dec
add
loopne
cmc
call
mov
sbb
lock
daa
push
xlat
and
cmpsl
adc
in
adc
mov
into
or
aas
int3
insb
lret
fdivrl
jo
cld
xchg
jne
test
adc
sbb
je
lds
gs
pop
sub
jbe
xchg
jl
mov
add
shrb
loope
mov
xchg
lea
xor
pop
sbb
xchg
mov
ret
and
pop
in
push
aam
pushf
inc
cmp
and
mov
push
bound
aad
and
push
push
test
out
fs
cs
mov
pop
sbb
fbstp
jle
xorb
mov
jp
xchg
pusha
ss
mov
jl
push
es
jge
in
dec
sub
sub
popa
mov
repz
jae
sub
push
std
and
pop
xchg
stos
mov
xchg
sbb
adc
dec
cmp
dec
frstor
fdivr
xor
or
sbb
jle
mov
pop
mov
pop
ret
out
xor
push
lods
jmp
sbb
aaa
shrb
pop
outsb
in
inc
repz
es
pop
out
push
or
cmp
fildll
mov
mulb
aam
pop
int
adc
xchg
rclb
mov
mov
jne
das
push
lcall
mov
push
loope
rcr
add
mov
cmpsb
test
push
rolb
ds
js
add
dec
dec
push
and
add
cmovle
lods
cmc
jg
cmp
test
sbb
mov
mov
cs
ja
pop
push
mov
or
mov
mov
pushf
jg
push
xchg
inc
xchg
std
cld
inc
ficoms
sub
inc
or
add
cwtl
test
adc
lret
lds
push
lock
aad
cld
adc
mov
fwait
lods
pop
push
adc
xor
outsl
cli
in
xchg
jns
push
sbb
fdivr
dec
decb
repz
cli
pushf
hlt
fidivl
aas
dec
xor
jmp
sub
out
and
mov
mov
into
and
rcl
jo
gs
cmp
cmpsb
call
mov
xor
loope
icebp
cmp
xchg
test
loop
and
pushf
mov
adc
mov
mov
xorb
dec
inc
lret
dec
cmc
pop
push
and
cmpl
inc
pop
mov
lds
ja
dec
jmp
cmovle
adc
adc
lds
add
push
mov
mov
jae
xchg
mov
pop
jno
in
rclb
xor
fs
xchg
into
outsl
rcl
adc
rorb
insl
jo
in
jmp
faddl
lea
movsb
mov
sbb
xchg
inc
mov
jmp
popf
stc
sub
lea
ret
dec
outsb
pusha
xlat
push
cmpsl
mov
dec
in
into
mov
rclb
adc
jle
jo
push
adc
lret
jo
xor
jle
xchg
mov
inc
sbb
movsb
daa
ss
sbb
int
xor
cli
sub
stos
mov
mov
cmpsl
imul
sub
pop
scas
out
ret
dec
insw
rcrl
imulb
or
sub
push
fs
rol
and
xchg
pop
cmp
out
adc
orl
add
fimull
pop
mov
stos
sub
out
in
nop
pop
rcll
pop
fistps
call
fs
stos
std
repz
xchg
or
cmp
jnp
out
gs
out
xchg
and
cmp
inc
add
jnp
push
cmp
push
ds
cmp
sub
or
jecxz
cmpsb
testl
cmp
andb
dec
ljmp
adc
dec
sbbl
fucomip
mov
mov
ret
push
xor
adc
int3
add
cmp
and
push
int
repz
mov
aad
push
add
mov
pop
sub
lahf
loope
sub
xor
xchg
stc
ja
cld
and
and
sub
mov
jmp
outsl
jns
dec
aas
mov
and
sub
stos
push
sub
out
hlt
ja
jno
mov
clc
adc
int
repnz
scas
cli
jno
outsl
xchg
mov
fdivrp
test
in
adcb
test
call
push
das
adc
ljmp
ds
push
fcomp
out
inc
lahf
lcall
outsb
mov
sbb
mov
mov
sarl
pop
lcall
cmc
repz
pop
mov
rorl
pop
xor
test
popf
aam
xchg
icebp
movsl
and
sti
loope
push
lcall
pop
add
mov
xor
push
mov
ss
mov
push
xor
mov
fld
xor
dec
and
aas
push
mov
inc
pop
dec
mov
dec
mov
stc
movsl
mov
push
repnz
xor
add
pushf
and
test
jg
cmp
lret
pusha
test
fcomps
out
ret
mov
fsubrl
outsl
int
inc
mov
imul
or
sbb
outsl
shrb
outsl
cmp
push
pop
jge
aad
mov
pop
call
sti
stos
das
lahf
fldcw
test
pop
inc
ficoml
mov
out
add
aad
mov
sarl
cltd
lods
mov
and
ja
mov
add
scas
shrl
ss
pop
repnz
jns
iret
cmp
mov
out
pop
repz
sti
orl
aas
push
loopne
cwtl
pop
out
add
mov
decl
fsubrl
inc
add
pop
int
std
lret
sbb
sti
push
xor
and
scas
inc
xlat
fcmovnb
adc
mov
pop
dec
dec
adc
cmp
mov
into
int
push
sub
test
aam
xchg
dec
fsub
cs
fnstcw
fidivrl
add
gs
xchg
xchg
push
mov
test
xchg
add
in
out
sti
incb
xchg
dec
mov
imul
pop
mov
xor
sbb
loop
xlat
cmp
or
adc
jnp
out
xor
test
out
sbb
mov
sbb
inc
and
out
jmp
lcall
sbb
and
pop
stos
push
ljmp
inc
movsl
push
sbb
or
pushf
dec
adc
cmpsl
or
cmp
xchg
jno
pop
sbb
jo
test
out
jo
cli
lods
in
xor
sbb
shll
in
ss
shrl
jo
sti
cs
iret
scas
or
and
push
push
push
or
lret
pop
push
scas
xor
xchg
insb
fwait
or
mov
push
loope
add
cmp
xchg
cmpsb
lock
sbb
and
sub
dec
in
pusha
int3
in
sub
ljmp
ja
negl
hlt
adc
ret
shrl
sbb
sarb
pop
add
lea
push
sti
aam
sub
mov
lahf
xor
loopne
mov
mov
cmp
push
ret
int
adc
icebp
mov
fcmovnbe
addr16
or
out
push
xchg
sbb
xor
arpl
jmp
xchg
lock
mov
imul
nop
daa
mov
les
pop
stc
sub
loope
xchg
out
add
stos
shll
fiaddl
jecxz
mov
andl
xchg
push
xor
in
mov
inc
push
push
cmc
cmp
cltd
notb
xor
and
adc
psubsw
ret
scas
inc
out
xchg
sub
sbb
scas
add
xchg
dec
lret
sti
push
sbb
inc
and
sti
inc
data16
mov
loop
adc
mov
mov
sub
test
movsl
into
test
xchg
imulb
stc
rcrb
movsl
cld
sbb
jp
icebp
shl
lds
xchg
adc
leave
mov
lds
sbb
cmp
push
mov
adc
ret
add
push
loop
fistpl
cs
sub
push
loope
or
xor
xchg
ljmp
adc
adc
ss
lret
push
cmp
outsl
jle
mov
shrb
pop
outsl
psadbw
add
test
lret
add
fisubrl
ja
xor
into
out
aad
add
sub
or
bound
mov
loope
repz
scas
ret
cmp
xchg
psrad
and
and
mov
inc
pop
jl
push
testl
push
cmpsl
cmp
xchg
mov
cmc
fwait
decb
push
das
ret
jo
jg
dec
fbstp
mov
movsb
cmp
cmpsl
adc
jle
fwait
mov
lahf
ret
rcll
loop
mov
lcall
pop
stos
je
fdivrl
es
sarb
lods
xchg
add
leave
out
and
ljmp
inc
jge
ret
hlt
sbb
or
ds
ljmp
mov
xchg
outsb
out
sti
insb
mov
addr16
sahf
clc
cmp
fnstenv
popa
pop
dec
cmp
idivl
inc
inc
and
pop
push
inc
mov
cmc
push
das
sets
js
mov
jecxz
out
std
arpl
fisttps
inc
xlat
inc
bound
cmpsb
fucomi
loope
inc
popf
push
mov
mov
push
jmp
sub
pop
fdivrl
sub
movsb
mov
movl
minps
or
or
into
lret
sbb
leave
push
test
jo
cmp
mov
dec
movsl
stos
lods
jmp
sbb
andl
test
adc
ss
mov
push
lock
push
adc
dec
cltd
pusha
inc
enter
fnstsw
arpl
cmp
pop
push
lods
jno
push
pop
cmp
and
or
lret
pop
jp
stc
iret
sub
xor
or
sti
jbe
call
xor
jle
inc
daa
sbb
and
push
out
adc
add
xchg
adc
mov
fidivrs
stos
fnstenv
xchg
pop
repz
cmp
aam
repz
adc
js
add
scas
lods
pop
xchg
fsubrp
popf
rcr
pand
sahf
popf
jnp
pop
pop
in
out
add
pushf
lret
movsb
dec
fs
aaa
int
ljmp
ds
pop
lock
rcrl
or
ret
fst
fistpl
repz
jno
pop
lahf
add
xchg
mov
int3
cmp
into
test
shll
lcall
push
cmpsb
sub
mov
xchg
in
push
push
rorb
inc
fimull
in
out
add
or
lret
cmp
fsubl
fs
jl
xor
mov
pop
xor
mov
jge
sbb
popa
mov
push
aam
shlb
pop
pop
xor
pushf
imul
call
inc
dec
dec
stos
lahf
inc
int
ss
call
int3
dec
rcr
fistps
sbb
jbe
dec
in
xor
pushf
push
add
clc
push
fistpl
pop
jbe
xchg
cli
loope
cmp
jno
pop
cmp
rcll
lods
sti
sbb
push
and
les
add
or
loopne
pop
fldt
mov
mov
jp
push
sti
cld
repz
addb
sub
mov
pop
lods
adc
popf
shlb
repz
add
in
sub
stos
xchg
stc
sub
mov
lcall
push
bound
xchg
jo
fnstsw
inc
pop
fs
and
es
sub
inc
movsl
out
dec
idivb
fdivrl
cmp
dec
mov
cmp
insb
add
cltd
mov
js
pusha
pop
int3
dec
aam
movsb
mov
data16
mov
int
in
sub
das
push
dec
sbbl
scas
sbb
mov
inc
pusha
outsb
add
mov
or
cltd
or
stos
ljmp
add
stos
xchg
and
push
cmpsb
sub
pop
sbb
fidivrs
mov
lcall
adc
ss
mov
inc
stos
mov
and
inc
pop
jg
xorb
icebp
xchg
dec
enter
scas
xchg
int
fst
dec
gs
push
int3
shlb
mov
xchg
cmpsl
loop
dec
mov
dec
jecxz
js
inc
daa
stos
lock
xchg
ss
mov
shlb
add
xchg
xor
push
or
push
sahf
push
pusha
dec
out
adcb
pop
outsb
xchg
xchg
enter
inc
cmp
or
loop
shl
inc
movsl
lock
mov
scas
mov
xor
sarb
rolb
les
stc
mov
add
jp
lds
and
xor
in
dec
xchg
imul
or
push
sub
fildl
ja
dec
or
std
jno
fnsave
xchg
dec
filds
jp
orl
mov
add
lock
dec
mov
scas
xchg
push
inc
cmpsb
ret
shll
loopne
push
and
rcr
mov
test
movsb
and
cmp
stos
cmp
xor
dec
mov
in
shlb
inc
sbb
mov
pop
es
loop
mov
push
mov
fsubs
mov
insb
mov
push
out
fbstp
xchg
and
pusha
shll
flds
lcall
xchg
movsl
leave
int
mov
mov
jle
xlat
scas
pop
out
in
dec
pop
test
cmc
xchg
fsubrs
pop
lods
sub
adc
loopne
subb
lret
call
lock
cs
test
and
int3
adc
loop
popa
movsb
sarb
xor
push
pop
xor
pop
cmp
xchg
dec
and
mov
mov
push
mov
mov
nop
xchg
sbb
sahf
sbbl
xchg
sbb
frstor
mov
pop
jle
push
lods
jle
in
cld
jge
mov
lock
imul
push
inc
xchg
aam
mov
push
cmp
pop
imul
mov
or
aas
and
adc
pop
sub
les
stc
xor
cmp
bound
movsl
int
addl
stos
mov
lods
pop
scas
mov
in
jns
out
pop
sbb
adc
daa
cmp
inc
daa
xchg
pop
test
loop
into
mov
sbb
push
adc
xlat
inc
xor
jb
scas
dec
insb
rcl
fmuls
xchg
dec
mov
popa
add
mov
loop
push
jmp
fisubrl
leave
cld
lock
jmp
fists
pop
loope
jno
and
ds
and
inc
mov
hlt
incb
xchg
xchg
cmpsb
sbb
icebp
out
fsubl
icebp
mov
jmp
in
cmp
ss
cld
scas
inc
cwtl
and
jg
sbb
andl
mov
sbb
sbbl
das
rcr
scas
rolb
xor
and
aaa
pop
out
xor
negl
mov
arpl
stos
jno
repz
pop
mov
hlt
aad
shlb
jecxz
cmp
xor
ljmp
lcall
test
ret
adc
xchg
stos
xchg
xor
lahf
jnp
shlb
mov
dec
aad
fimull
mov
out
pop
test
adc
mov
aas
inc
jl
cmp
popf
je
fcmove
jg
sbb
xchg
dec
outsb
out
mov
lcall
inc
cmpsb
adc
in
not
lds
je
sub
cmp
hlt
stc
test
adc
nop
inc
std
mov
movsb
jecxz
lcall
adc
ficompl
jns
jns
adc
cltd
loope
cltd
push
mov
push
mov
push
cmpsb
mov
andl
repz
xor
popf
pop
xor
pop
stos
hlt
andb
sub
mov
push
shll
sub
ret
hlt
sarl
in
mov
fiadds
mov
iret
jbe
dec
dec
mov
ljmp
insl
test
dec
dec
xor
hlt
mov
cmp
aaa
es
dec
push
je
mov
shlb
xlat
push
or
test
cmp
jge
aad
jle
popa
fidivl
mov
fcoms
pop
inc
stc
fidivs
sub
pop
aas
lret
sti
pusha
out
jbe
rcrb
rclb
sbb
test
pop
stos
push
dec
idivb
sbbb
dec
mov
stc
sub
data16
or
jecxz
xchg
add
mov
pop
sbb
add
xchg
jge
push
out
ds
add
fidivs
adc
pop
jmp
mov
or
and
in
fcmovu
mov
or
test
push
repz
out
bound
movsb
lret
mov
lea
mov
push
insb
lock
push
mov
inc
pushf
cmp
into
and
jae
jmp
jns
mov
add
push
mov
ffreep
adc
pop
mov
insl
xchg
shll
add
push
repnz
push
call
inc
scas
sahf
mov
push
xchg
jmp
sarl
xor
loop
pop
mov
add
adc
repnz
fs
adc
xchg
xchg
movsb
addr16
cmpsb
ds
pusha
repz
pop
inc
bound
mov
xchg
cltd
xor
push
addr16
push
mov
pop
mov
xchg
and
es
sbb
lods
push
cmp
adc
cmpsb
jle
pop
add
cmpsl
movsl
aas
loop
jge
jne
ja
popf
sub
push
sahf
add
push
icebp
inc
sbb
mov
call
cmp
pop
jle
jmp
dec
cmp
pop
insl
call
gs
sub
stos
pop
pop
or
push
cmp
aaa
sub
push
xchg
insb
cli
xchg
mov
loop
jns
inc
sbbb
mov
xchg
xor
pop
test
push
mov
jbe
xchg
mov
loop
mov
add
inc
sbb
adc
or
or
mov
fstl
xor
cli
es
test
fwait
cmp
or
sbb
shl
push
jo
mov
stc
jae
inc
xlat
les
ret
imul
sub
les
dec
push
call
cmp
mov
das
or
or
gs
sarl
jae
cmpsb
int
call
test
mov
or
ficompl
add
inc
cmp
scas
sub
or
int3
mov
into
jb
xchg
hlt
cs
pop
dec
mov
lret
lds
out
jle
loope
or
add
add
subl
fstl
push
lods
iret
jnp
aas
jnp
daa
mov
mov
mov
rcrb
insb
stos
xchg
pop
scas
dec
and
mov
rcr
ljmp
das
or
inc
cmpsb
inc
push
ret
push
cmc
mov
enter
xor
ret
orb
je
sub
or
test
push
adcl
pop
jo
jecxz
stos
sbb
lret
lock
sbb
sub
mov
sahf
aad
fldcw
jle
sub
lods
in
add
sub
push
out
xor
push
daa
and
jno
es
ficompl
int3
ljmp
mov
into
out
add
test
movsb
jecxz
jp
fsubrs
sbb
sbb
lds
inc
jne
je
ftst
mov
push
out
pushf
sbb
cltd
ljmp
sti
movsb
push
scas
shrl
cmp
pushf
pop
call
xchg
lahf
testl
out
arpl
mov
adc
lret
les
lret
push
mov
ja
push
enter
jae
js
and
adc
enter
pop
fstps
mov
daa
mov
inc
xchg
fnstsw
loope
pop
adc
test
mov
and
adc
push
xchg
pushf
rorl
call
test
xchg
ljmp
adc
ljmp
jae
in
rcrb
jge
test
lret
jmp
out
add
push
ror
xor
bound
sarl
xchg
xor
xchg
fistl
testl
scas
jge
push
jo
push
jb
xor
ret
mov
jle
sub
add
mov
push
add
push
sub
push
adc
push
cmc
cmp
in
fs
mov
inc
test
gs
xchg
aaa
stc
dec
outsl
outsb
and
stc
inc
pop
shlb
jle
pop
xchg
notl
sub
lea
push
cmp
jp
scas
pop
mov
pop
add
sahf
loopne
call
mov
push
outsb
cmp
xor
daa
repz
enter
xor
xorl
mov
ljmp
jno
int3
adc
xchg
in
cmp
jle
xor
lahf
lret
inc
int3
cmpsb
dec
push
jno
jmp
jp
sbb
cwtl
pop
jl
out
leave
movsb
mov
fldl
dec
or
lods
cmp
inc
xchg
inc
jb
inc
fucomi
push
sub
bound
cmpsb
xchg
sub
adc
mov
pushf
shrb
in
cmp
xor
aad
lret
fldenv
jmp
adc
ja
xchg
xor
mov
scas
dec
add
xorl
xchg
cmc
scas
scas
js
loopne
jl
jl
fcoml
xchg
fdivs
dec
pop
lret
call
cmpsl
mov
lock
outsl
enter
cmc
mov
andb
stc
pop
push
xchg
sub
xor
outsb
jp
and
mov
out
pop
les
ds
aam
stos
add
jb
push
mov
int3
call
dec
cmp
dec
and
inc
sti
ss
cs
imul
scas
and
lret
xor
fbld
mov
shl
jne
and
push
mov
xor
std
aam
xor
lods
pop
and
or
ds
lahf
stos
cmpsl
roll
test
inc
stos
dec
hlt
aam
data16
cs
cmp
xchg
ja
popf
lahf
daa
push
xchg
out
sbb
popa
cmp
mov
shl
cmp
sbb
push
ds
fcomip
js
fdivrs
pop
inc
cli
pop
in
cmp
icebp
dec
add
pop
ret
rcl
jb
js
mov
scas
inc
loope
outsb
loope
aas
fwait
push
cltd
lods
and
adc
push
inc
mov
jg
xor
dec
mov
ficoms
xchg
xchg
outsb
rorl
cmp
daa
notb
mov
dec
jmp
lea
and
bound
repnz
out
mov
push
fisttpll
jp
scas
xor
xor
inc
pop
out
adc
add
jns
pushf
arpl
aaa
jne
cltd
sub
pop
stos
dec
push
push
repz
mov
pop
sbb
mov
ret
bnd
cmp
aas
push
dec
dec
push
inc
push
outsb
arpl
and
ficoms
call
xor
fisubl
pop
jb
xchg
mov
scas
inc
out
dec
push
sub
into
enter
je
xchg
mov
add
int
imul
mov
flds
or
ljmp
fcoml
inc
bound
outsb
pop
sub
scas
fcoml
or
aas
imul
bound
mov
mov
jnp
inc
fwait
cmpsl
jne
inc
lods
add
incl
jg
dec
in
or
add
scas
mov
cmpsb
addr16
sub
dec
inc
sub
push
fldenv
insl
adc
sbb
pop
jbe
fwait
mov
jg
cs
or
repnz
subb
dec
add
aad
sub
out
cmp
fsubl
fdiv
iret
les
jbe
adc
fs
mov
pop
pop
push
ds
lea
test
stos
mov
ror
pop
cli
loope
add
mov
mov
aam
enter
pop
sub
jno
aas
subb
stc
push
xlat
cmpsw
cmpsb
xchg
pop
sbb
popa
outsb
sub
push
sbb
sbbb
mov
popa
xlat
xor
in
test
and
xchg
std
rolb
std
lods
lock
dec
repnz
imul
in
adc
jecxz
sbb
cmp
inc
fimull
pop
jbe
xor
push
jae
mov
test
fnsave
in
aas
add
daa
inc
push
xchg
or
out
subb
xlat
testb
sbb
arpl
loope
push
adc
mov
ret
cld
mov
mov
or
or
cmp
in
mov
add
in
dec
cmpsb
testb
or
push
or
call
in
jno
loop
aaa
imul
mov
mov
lods
mov
loop
lods
lahf
and
mov
lret
add
sub
insl
repnz
adc
mov
daa
test
jge
jne
es
push
add
cld
sub
inc
loope
ja
mov
lret
xchg
mov
or
mov
insb
xor
dec
push
iret
or
push
in
sub
clc
out
mov
rcll
add
xor
cmp
add
or
and
daa
add
out
rcll
arpl
std
push
mov
jl
add
nop
lcall
jecxz
test
fmull
cwtl
es
insb
jg
shl
sahf
stc
popa
mov
pop
das
cmp
sbb
pusha
jo
addr16
xchg
cltd
pop
dec
loope
push
add
in
pop
xor
icebp
ja
adc
in
cmp
ljmp
jg
jg
and
lods
fsubl
popl
scas
mov
adc
mov
or
add
aad
cmp
out
outsl
pop
repnz
cmp
inc
out
mov
popl
sbb
add
sub
insb
cld
or
out
ret
shr
lahf
push
pop
or
cmpsb
sbb
push
out
test
lahf
lods
lret
jb
or
dec
pop
or
clc
xchg
push
xor
out
and
push
lea
mov
imul
pop
jo
cmp
addl
jb
data16
and
insl
or
sbb
pop
lock
std
add
inc
test
incl
mov
add
cmp
stos
clc
sahf
xchg
lahf
pop
mov
lcall
mov
push
adcl
mov
loop
pop
add
sub
sahf
inc
push
xchg
cmp
mov
push
out
jle
xor
test
jo
push
push
add
daa
cs
jb
mov
testl
in
jb
popf
lret
add
cmp
pop
es
adc
mov
mov
lods
mov
push
shrl
add
xchg
sarb
push
push
bound
mov
test
and
or
xor
movsb
inc
std
or
adc
add
mov
cmp
hlt
daa
rcll
or
iret
cld
scas
add
rolb
outsl
push
mov
decb
cmpsb
imul
test
cmpsb
jb
push
jns
mov
cmp
in
jb
jb
and
ja
jg
fldt
cmp
mov
push
push
cmpsb
cltd
sbb
cmpsb
inc
popf
push
inc
dec
xchg
adc
fsubr
mov
mov
ja
add
jmp
or
pusha
cmp
je
in
lret
rolb
xchg
iret
mov
sub
pop
cs
fs
pop
nop
jle
and
in
jl
ret
ljmp
adcb
and
push
mov
cmp
sub
push
mov
jae
das
mov
repz
cmp
jbe
pushf
cmp
xor
and
adc
adc
xchg
sbb
add
ja
jbe
stc
out
pushl
mov
or
adc
inc
test
or
cmpl
pop
jo
cmpb
xchg
lods
ja
mov
jns
adc
or
out
cli
roll
pop
mov
js
jns
jns
pop
add
mov
gs
pop
mov
mov
cmp
popa
lret
push
movsl
mov
sahf
mov
mov
jmp
vdivss
mov
mov
or
loopne
mov
push
in
inc
insb
inc
clc
dec
fisubrl
cld
pop
shl
jns
insl
mov
movsb
rclb
and
pop
xor
pop
addr16
scas
movsl
fdiv
mov
push
jg
sti
or
xchg
movsl
clc
mov
fcmovnb
fisttpll
mov
addb
lods
dec
cmpsb
cmp
adc
imulb
lret
cmpsb
in
inc
push
call
sub
push
or
push
test
sti
fldenv
cld
inc
fsubrl
ljmp
daa
adc
pop
imulb
jmp
das
addr16
fcompl
mov
lds
aaa
test
adc
lock
adc
repz
sbb
pop
push
outsb
mov
sub
mov
adc
mov
xchg
out
sub
xchg
orl
mov
aaa
xchg
jge
cmpb
xchg
push
pushf
dec
fistpll
mulb
negl
flds
mov
jo
jno
les
outsl
jnp
lret
cmp
in
dec
lahf
stc
dec
jae
push
out
int
lods
loop
mov
js
pop
cmpsb
jae
mov
int3
sbb
mov
and
sbb
dec
mov
pop
sbb
cmp
mov
push
xor
inc
mov
dec
loop
mov
das
add
mov
sbb
push
lea
das
jbe
ljmp
push
jne
cli
pop
add
and
sbb
bound
out
jae
push
loop
sbb
in
dec
je
jl
imul
or
lret
fnstsw
cmp
mov
loopne
add
push
sahf
sub
pop
dec
cmp
subb
in
inc
clc
xchg
push
cmp
sub
sbb
mov
int3
in
xchg
hlt
js
xchg
jno
test
mov
xor
cmc
dec
dec
repz
fldcw
sahf
cld
jmp
sar
push
inc
cmc
mov
ljmp
mov
or
pop
xorb
xchg
push
lods
decl
nop
cmp
out
sbb
sbb
pop
mov
js
cmp
fwait
push
addr16
iret
scas
inc
add
ss
ret
mov
fisubrs
shld
fistps
ret
jnp
xor
out
sahf
mov
adc
adc
repz
add
out
adc
cmc
xchg
dec
pop
jae
jbe
call
into
mov
cli
das
insl
jge
sbb
jecxz
dec
sbb
orb
lods
jp
adc
dec
push
daa
out
mov
mov
mov
in
das
xchg
jmp
pop
inc
xchg
mov
add
in
js
mov
jbe
je
xlat
mov
or
or
push
ljmp
icebp
mov
mov
shlb
cmp
test
stos
or
xor
sbb
out
lods
aaa
or
jns
xchg
and
push
jae
insl
sub
jnp
outsl
mov
sub
pop
shll
mov
push
lds
stc
loop
daa
mov
inc
sbb
pusha
push
sub
pop
int3
jg
data16
sub
mov
adc
std
and
adc
xor
test
xchg
sub
divb
mov
mov
jg
dec
pop
add
xchg
and
in
mov
sub
fisubl
shlb
or
xor
inc
mov
inc
leave
xchg
fnstenv
push
dec
adc
in
in
xchg
push
mov
fisttpll
invd
mov
stos
out
leave
je
fcompl
mov
out
sbb
and
shrb
out
add
push
in
xchg
mov
pop
pop
loop
cmp
dec
cmp
xlat
fwait
xor
ficoms
out
sub
ljmp
cmc
or
repnz
dec
jge
cmc
cwtl
lods
mov
idiv
jnp
lods
dec
int
rorb
aaa
repz
test
add
dec
sahf
mov
pop
movsb
adc
xor
fidivl
or
cwtl
daa
jbe
popa
fdivrl
sbb
test
jns
adc
cmc
and
pop
sbb
push
or
scas
fdiv
sarl
xchg
push
lret
mov
pusha
pop
dec
push
in
fwait
jns
jbe
test
mov
fisubs
add
lcall
dec
daa
addr16
lods
iret
data16
mov
mov
loop
inc
clc
int3
clc
dec
iret
sub
in
popa
jp
mov
ss
jno
hlt
ret
jl
data16
dec
mov
mov
and
inc
fidivs
add
mov
jecxz
pushf
or
loopne
push
or
jns
daa
jmp
outsb
xchg
pop
mov
clc
scas
mov
or
roll
imul
fidivl
and
xor
in
push
push
loop
decb
add
fisttps
test
mov
sub
mov
sub
ss
push
ret
cltd
stc
sbbl
or
xchg
sub
sub
mov
adc
adc
fnstenv
xor
xchg
outsb
stc
call
faddl
test
sbb
xchg
out
pop
ljmp
inc
or
std
aam
or
pop
add
cmp
vorpd
sbb
inc
mov
cmp
pusha
gs
scas
push
test
cmp
xchg
xchg
xor
ja
push
test
inc
loop
mov
mov
adc
test
and
lcall
test
xchg
sub
mov
ja
push
push
cli
xchg
imul
int3
sub
repnz
adc
mov
loop
xor
adc
push
fistpl
and
cmp
pushf
add
lahf
fiadds
insb
push
in
popf
mov
pop
inc
xchg
jae
dec
arpl
jbe
pop
fstp
xor
or
push
sbb
inc
xor
cmp
push
daa
sbb
xchg
sub
mov
mov
and
or
add
lods
inc
bound
dec
repnz
jl
push
push
push
sahf
pop
hlt
int
xchg
pop
loop
push
out
xchg
pop
cmp
sub
fisubrl
lcall
and
shl
dec
mov
push
cld
add
xchg
mov
into
faddl
sbb
or
and
nop
fcomps
sub
cmp
xlat
mov
sbb
test
adc
lahf
and
testl
push
cmc
inc
xchg
cmp
adc
sbb
bound
ret
or
push
push
lock
ss
mov
in
pop
cmpsl
lcall
mov
sbb
mov
inc
cmp
leave
dec
cltd
jne
jg
cmp
pop
pop
lock
push
test
out
mov
scas
ret
or
dec
loop
xchg
ret
pop
call
loope
aad
or
fsts
fld
sub
pop
jmp
lcall
mov
xchg
dec
aas
xchg
cmc
jl
nop
cmp
and
icebp
or
fadds
mov
jae
inc
pop
mov
mov
scas
outsb
movsl
stos
inc
lret
ss
out
out
fisttpl
add
cmp
hlt
mov
cmp
in
adc
inc
mov
repnz
mov
jno
push
and
icebp
mov
adc
jne
mov
add
mov
bound
mov
js
lea
adc
cmpsl
push
mov
shlb
jnp
outsb
in
fdivrs
add
xchg
scas
out
xchg
and
xchg
dec
fs
inc
mov
xor
sbb
mov
push
jo
push
xchg
aaa
or
sbb
mov
es
pop
dec
ljmp
xor
pop
mov
fiaddl
test
push
mov
inc
or
push
mov
adc
repz
add
mov
add
test
shlb
sub
sbb
lds
adc
lods
movsb
add
dec
push
inc
sti
jecxz
gs
rcl
stos
negl
dec
ret
ja
cmp
sarl
mov
sub
lods
test
sbb
test
inc
mov
pop
cmp
sbb
mov
jno
push
jge
ss
jo
fisubrs
inc
jmp
ja
push
push
or
push
mov
test
cltd
adcl
push
pop
cmp
mov
push
fisubl
loopne
orl
sub
push
xchg
pop
testb
cmp
or
mov
fldt
aad
mov
pop
nop
adc
imull
mov
mov
in
gs
push
mov
dec
arpl
movsl
mov
push
fcomps
mov
pop
aas
fwait
test
pop
push
lods
dec
pop
mov
cmpsb
mov
add
test
mov
jle
daa
mov
hlt
sahf
adc
or
xor
ds
push
call
ret
ficoms
addr16
adc
lahf
xchg
lods
into
lahf
xor
inc
out
aam
loopne
ds
xchg
and
int3
sti
js
lock
or
repnz
xchg
pop
jae
stos
clc
test
out
and
adc
shrl
xchg
inc
and
scas
in
mov
call
sub
pop
pop
mov
sub
test
mov
jb
xchg
scas
fcmovb
pop
test
fnstenv
pop
cmp
sub
cmpsl
mov
xchg
pop
add
sub
jp
mov
push
iret
in
test
mov
fisttpll
jp
add
dec
dec
push
pop
adc
sahf
lods
mov
mov
xchg
xchg
in
call
loop
lcall
inc
sub
adc
jns
lret
mov
xchg
jo
push
sub
imul
shrl
dec
in
dec
mov
pop
in
adc
out
mov
push
xor
std
je
jo
cli
add
loop
loopne
xchg
insb
adc
pop
fmul
or
daa
es
adc
pop
mov
push
mov
jae
es
add
mov
movsb
dec
and
int
dec
cmp
sub
mov
sub
add
shrl
out
adc
pop
je
imul
jmp
loope
int3
jle
sbb
cmp
or
mov
cltd
fisubrl
iret
xchg
sub
sub
pop
push
aaa
fdivrl
mull
movsb
jecxz
dec
sahf
bound
mov
mov
nop
sbbl
mov
push
movsb
push
loopne
int
ret
jl
jg
cmpsl
push
sbb
and
pop
shrl
loop
dec
shr
aad
pusha
sbb
jg
fs
jo
jp
adc
mov
sub
inc
dec
or
arpl
cmovbe
js
xchg
mov
xchg
mov
adc
loopne
sahf
addl
push
mov
xor
in
xchg
outsb
ljmp
jae
loopne
scas
add
dec
jge
jecxz
loope
stos
lds
ret
ds
enter
fnstcw
add
push
inc
xchg
and
fisubrl
add
int
push
out
push
test
bound
adc
mov
add
sbb
loope
adcl
and
mov
adc
pop
fcomps
into
mov
adc
imul
mov
js
cs
rolb
mov
mov
mov
dec
loope
int
jg
dec
sbb
mull
sbb
repz
fidivrs
arpl
cltd
sbb
dec
cmp
ror
jo
xor
subb
fcompl
lock
das
sbb
fwait
imul
popa
push
pop
ret
and
call
popa
push
outsl
mov
popf
mov
movl
cmp
enter
dec
mov
test
inc
pusha
bound
ja
daa
mov
mov
adc
pop
add
dec
mov
cmp
mov
lds
std
cwtl
aaa
jg
lcall
dec
mov
xchg
shl
hlt
scas
in
fidivrs
movl
cli
mov
mov
das
mov
lods
daa
les
xor
inc
or
or
jg
pop
xchg
sub
adc
les
cmpl
into
scas
lcall
inc
push
ja
stos
jne
adc
fidivs
pop
xor
mov
loopne,pt
insb
popf
or
pop
push
incb
mov
push
mov
fcoms
adc
inc
push
mov
and
imul
xchg
data16
jecxz
inc
sbb
cmp
push
shll
cmp
aas
outsb
mov
cwtl
xchg
into
push
or
sub
sbb
nop
inc
clc
or
dec
jecxz
out
jge
es
xchg
or
xor
sbb
pop
sub
dec
add
scas
int3
mov
sub
pop
pop
cmp
insb
test
lahf
mov
aam
inc
and
loopne
inc
pusha
sub
mov
stos
dec
push
cmp
shl
dec
mov
aaa
lret
jecxz
popa
ror
mov
ss
sti
sbb
inc
fistps
adc
cmpsl
push
sbb
add
cmpsb
inc
repz
fs
filds
jbe
fidivs
add
inc
mov
pop
in
int
arpl
outsl
jnp
jbe
xor
or
xor
daa
jle
cmp
xchg
jl
mov
push
shrl
jmp
lods
call
dec
mov
ds
ljmp
insl
mov
xchg
sti
add
xchg
shrb
lea
into
imul
xchg
pop
ror
ret
adc
inc
pop
outsl
sti
movsb
stc
nop
sbb
or
cmpl
and
jecxz
xor
mov
nop
or
adc
jbe
inc
hlt
xchg
mov
js
bound
add
je
sub
ljmp
pop
call
sbb
mov
hlt
push
cmpsb
fnstsw
mov
in
lods
cmp
int3
sbb
inc
mov
mov
cmp
into
inc
pop
gs
fcoms
addr16
mov
test
je
xor
lea
push
push
add
inc
pop
je
sahf
shl
pop
fs
jnp
xor
popa
into
inc
inc
dec
and
iret
pop
and
dec
scas
inc
insb
jp
aas
out
mov
pop
mov
sub
inc
daa
mov
aam
gs
and
rep
aam
push
inc
mov
adc
pop
repz
xchg
jg
test
jp
pop
pop
xor
jg
imul
shrl
pop
hlt
push
out
xchg
outsb
hlt
jle
outsb
add
mov
jecxz
fsubrl
lahf
pop
push
pop
shrl
daa
mov
xor
adcl
mov
popl
cmp
cld
xor
hlt
pop
out
mov
inc
push
push
xchg
arpl
lahf
xchg
and
and
mov
shlb
dec
cpuid
pop
pop
sub
push
pop
and
cmp
mov
mov
sbb
inc
aam
inc
add
or
test
inc
pop
in
jno
cltd
addr16
cld
jbe
sbb
loop
dec
dec
iret
add
out
inc
or
jg
in
push
add
jo
pop
sub
pop
ds
xor
mov
ret
jecxz
clc
inc
enter
les
idivb
cmp
popa
pop
xlat
xchg
pop
dec
scas
lock
jge
push
push
cmp
jno
stos
mov
test
cli
and
call
shlb
dec
pop
cld
jp
test
jecxz
mov
add
xchg
out
cmpsl
pop
stos
pop
dec
sbb
push
cmpsb
adc
movsb
std
jbe
andb
push
fildl
push
add
jae
inc
out
mov
rcrl
xlat
out
mov
mov
pushf
or
mov
pop
push
fstpl
call
sub
sbb
dec
push
ljmp
ret
loope
adc
pop
iret
jns
inc
outsb
addr16
or
stos
inc
push
fnstenv
push
xchg
cmpsb
lret
pop
in
xchg
scas
and
jne
outsl
or
cli
mov
movsl
popf
andl
jge
jnp
and
mov
add
dec
jne
negb
push
xlat
loope
or
sub
pushf
cmc
ficoml
aad
add
cmp
lcall
add
pop
jno
pop
scas
aaa
adc
sub
outsb
mov
adc
xchg
adc
dec
pop
sahf
mov
xor
push
mov
inc
mov
popa
cmpl
ljmp
mov
repnz
dec
aad
sub
lcall
aam
orb
fisubs
cmpsl
mov
in
loope
popa
sub
mov
add
icebp
filds
movsl
xchg
xchg
pusha
push
fbld
cmp
scas
dec
out
stos
pop
out
mov
movsb
jge
int
jo
mov
in
jne
hlt
push
decl
xor
inc
iret
data16
sbb
jp
rcrl
pusha
imul
sub
dec
cmc
fisubs
lcall
adc
cmc
sahf
fdivl
addb
pusha
insb
push
inc
mov
lret
jns
jns
enter
inc
in
shrb
cmpsl
lods
outsl
pop
shlw
shl
fwait
ds
frstor
dec
push
ljmp
vmulpd
movsb
jns
jo
jne
insl
or
adc
mov
lret
insl
and
inc
xor
jnp
sub
test
fnsave
adc
push
mov
xchg
loope
call
hlt
sbb
stos
outsb
xchg
adc
ja
pop
test
lret
test
or
push
fnstcw
cs
add
mov
mov
sbb
call
or
ret
xchg
mov
lahf
adcb
ss
or
xor
push
ljmp
ljmp
ret
lock
mov
cmpl
pushf
loope
and
lret
loop
inc
push
hlt
jo
movsl
jno
lods
cld
je
cmp
pop
push
pop
insb
sahf
xchg
movsb
cmc
inc
sar
negb
mov
jo
in
cmp
repz
lods
add
cli
popa
cwtl
icebp
push
pop
cmp
jbe
test
mov
adc
nop
and
lahf
movsl
out
imul
jb
cmp
cmp
test
sbb
notb
jecxz
or
adc
or
xchg
sub
mov
pop
popf
cmpb
out
jp
jecxz
xor
fxtract
add
in
sbb
dec
in
or
idivl
insb
add
xchg
divl
mov
mov
cltd
inc
pop
stos
fidivrl
loope
or
les
mov
pop
mov
fnstcw
rcrb
mov
aaa
or
cmp
dec
stos
inc
mov
xchg
pusha
clc
mov
je
fidivs
scas
and
sahf
mov
dec
pop
in
push
aad
or
insb
cwtl
cmp
movsl
push
push
jmp
mov
mov
addb
dec
push
jmp
xor
fwait
imul
ds
mov
cltd
or
lea
ljmp
inc
mov
xchg
pop
xor
outsl
mov
scas
sub
shrl
sub
jno
sti
ret
int3
sub
jmp
fisubrs
aad
adc
movsb
jmp
sub
hlt
aas
jg
cmc
mov
cmp
cmp
xor
mov
lods
in
and
sub
out
leave
xchg
insb
push
xlat
insl
jg
jo
fsubl
inc
adc
int
lds
dec
dec
pop
xorb
and
imul
or
sub
adcl
imul
mov
cld
jg
test
aaa
push
out
or
in
or
dec
cmp
movsl
cmp
inc
andb
faddl
lods
lea
mov
pop
in
adc
aas
cld
in
cmpsl
xor
in
ja
and
sub
push
in
outsb
or
mov
les
xor
addb
js
sar
cmp
sub
mov
xor
int3
mov
scas
add
mov
rcr
jne
inc
or
xchg
dec
notl
dec
nop
fcmove
enter
push
jmp
push
add
notl
insb
in
push
test
lea
in
xor
and
push
mov
addl
imul
xlat
rorb
iret
mov
movsl
sub
mov
sub
imul
pop
nop
cld
cmc
roll
xor
push
fsubrs
xchg
push
and
out
dec
and
xchg
sbb
aas
mov
stc
out
ljmp
lcall
stos
mov
push
mov
jp
test
pop
sub
testb
addr16
je
icebp
mov
cmp
push
xor
arpl
in
idiv
dec
adc
jbe
js
mov
shr
icebp
ljmp
test
adcl
negb
out
adc
mov
push
movsl
mov
cmp
insl
xchg
lods
inc
aas
sbb
daa
test
lahf
cmc
pusha
imull
imul
or
pop
jp
add
outsl
xor
ds
mov
pop
jge
lds
loopne
aad
orl
sbb
mov
leave
or
pop
jg
adc
std
cmp
ret
pop
aaa
cld
push
pop
xchg
mov
mov
movups
dec
inc
jg
imul
fcomi
mov
push
sbb
inc
sub
lahf
lea
xlat
mov
fwait
cmpsl
xchg
aam
testb
fwait
cwtl
xor
pop
xchg
lahf
pop
cmc
rcrb
mov
mov
addr16
hlt
ret
pop
out
push
leave
les
sbb
mov
fnstenv
pop
add
es
movsb
sub
orb
rclb
jo
push
shll
out
rcrl
divb
xor
mov
inc
test
and
adc
adcl
xor
insl
or
mov
cmp
ja
xor
imul
adc
call
inc
jno
sbb
pop
mov
cmp
push
rclb
push
add
and
dec
and
lods
jle
sti
insb
mov
ficompl
test
imul
ds
cmp
loop
dec
popf
xor
xchg
add
mov
jmp
sbb
fidivrl
push
fldl
xchg
test
or
test
dec
aad
sub
hlt
dec
pop
es
mov
or
add
adc
rol
fwait
dec
push
mov
sub
fsub
pusha
mov
push
or
adc
stc
and
repnz
std
lea
push
mov
loope
jne
sub
mov
push
jno
dec
jecxz
nop
pop
frstor
sbb
mov
sbb
jge
sarb
push
add
dec
push
and
and
aas
xor
inc
imul
cltd
je
aam
orb
sti
xchg
out
mov
lahf
faddl
mov
pop
cmpl
jns
mov
aad
pusha
pop
ss
pop
inc
into
add
ja
cwtl
dec
jno
mov
pop
jge
push
mov
mov
jge
push
push
lahf
hlt
xor
dec
sahf
mov
cmp
ret
cvtpi2ps
imul
cmp
jnp
push
roll
aaa
mov
push
dec
inc
movsb
pop
xor
lods
andb
sub
jne
testl
add
lea
pusha
inc
inc
loopne
dec
outsl
pushf
cmpb
pop
loopne
sbb
adc
mov
add
inc
cmpsl
mov
stos
ja
clc
int
xor
or
in
jmp
pop
sahf
out
cmp
enter
mov
adc
fsub
pop
mov
popa
out
sbb
mov
out
shl
add
stos
mov
out
xchg
xchg
push
scas
bt
and
mov
ss
lcall
cmp
cwtl
sub
xchg
mov
add
outsl
jns
xchg
aas
les
mov
mov
mov
test
js
rcrb
dec
jne,pt
test
out
stos
mov
out
jne
imul
ret
int
ljmp
or
mov
fnsave
sbb
xor
test
pop
mov
frstor
into
loop
cmp
int3
jle
fwait
xor
mov
cmp
inc
arpl
enter
or
push
jb
lret
mov
push
push
jmp
in
jo
mov
rcr
jno
xchg
loop
lret
rcll
adc
jae
sti
mov
insl
xor
or
and
jle
sub
or
pop
push
jno
xor
mov
orl
pop
inc
clc
rcrl
or
jnp
fs
inc
add
movsl
notb
add
in
ror
movl
adc
mov
stos
stos
rcl
test
cmpsl
sub
and
push
or
loope
mov
sbb
dec
cli
mov
hlt
fsubrs
test
dec
loope
mov
inc
je
cmpsb
cmp
xchg
nop
push
inc
inc
pop
mov
andb
mov
xchg
out
push
xchg
mov
and
mov
inc
push
cmpsl
fstpt
test
adc
sub
hlt
pop
fldenv
or
andl
pushf
jle
dec
sub
cmpsl
or
shrl
jne
cmpsl
and
loope
idivb
fs
mov
ret
leave
push
inc
divl
daa
outsw
hlt
mov
mov
shrb
gs
mov
incl
adc
adc
inc
pop
cltd
mov
add
clc
fs
jb
sbbl
subb
or
pop
lahf
inc
stos
dec
in
mov
imul
fsubrp
add
mov
inc
enter
push
aam
dec
fdiv
out
mov
mov
cwtl
xor
fnsave
push
inc
and
sub
dec
pop
jno
popf
mov
iret
clc
jg
dec
std
pop
stc
lds
or
mov
and
inc
in
ret
or
aad
xchg
pop
lret
mov
call
or
lcall
inc
pusha
orl
jb
sbb
mov
mov
aas
xlat
cmp
les
leave
pop
rcrl
bound
ret
xor
mov
std
jbe
stos
sub
push
mov
sub
mov
clc
jno
sub
movsb
sahf
dec
push
inc
mov
lods
mov
push
movsl
cs
mov
inc
cmp
call
or
inc
jns
test
jl
shr
jecxz
fwait
adc
and
jp
jo
in
push
icebp
mov
std
pop
push
scas
lea
fisubrl
xlat
in
pop
lds
cmp
mov
or
cmp
add
ret
cmp
outsb
xor
push
cmc
mov
adc
fldl
inc
jae
subl
into
xor
mov
pushf
xor
and
dec
aaa
leave
inc
inc
ret
inc
push
clc
or
sub
pop
call
sub
jge
add
in
cs
fwait
scas
sbb
into
sbb
xchg
dec
int3
testb
stos
pushf
repnz
es
jae
cmpb
popf
jle
arpl
ss
sub
jo
test
xchg
andl
sarl
xchg
pop
test
fnstenv
into
mov
mov
lahf
sub
xchg
mulb
add
and
adc
xor
icebp
daa
rorb
lock
push
rcrl
scas
sub
enter
xlat
out
jbe
cwtl
shlb
in
add
mov
pop
shlb
lea
jo
cmp
dec
call
fidivs
ja
xor
jp
mov
push
divl
sbb
cmp
pop
aas
pop
dec
stos
scas
loopne
loope
in
jns
inc
jp
pop
dec
push
mov
sti
iret
adc
or
or
jb
inc
loopne
jecxz
cmp
fstl
insl
sbb
insb
and
ret
in
inc
push
cwtl
adc
popa
and
xor
pop
dec
rcl
arpl
cs
xor
in
mov
add
mov
divb
int
hlt
xchg
outsb
gs
jo
dec
sahf
sarl
jo
popa
jmp
out
ret
mov
mov
xchg
sbb
movsl
rclb
pushf
test
lret
daa
mov
daa
mov
fnstenv
inc
inc
xchg
cli
dec
loop
sbb
and
adc
sti
cmp
add
fiadds
prefetcht0
push
sti
shlb
imul
cltd
movsb
mov
pusha
mov
ficomps
aad
xchg
inc
sbb
cmpb
ret
pop
fnsetpm(287
and
adc
and
sub
lds
ret
adc
lcall
mov
xlat
pusha
daa
mov
iret
pop
in
cltd
sub
inc
fs
ja
push
inc
mov
lahf
jmp
loopne
bound
cs
inc
pusha
inc
jle
aaa
push
pushf
or
push
hlt
pop
insl
xchg
lahf
cli
add
loope
sbb
inc
inc
fnsave
push
xlat
push
xchg
test
aad
mov
fists
sub
adc
and
push
adc
fildll
into
mov
call
inc
pushf
shlb
mov
shlb
aas
dec
mov
in
push
pop
mov
lret
rol
mov
shrl
dec
jmp
insb
shr
repnz
lcall
ljmp
es
xor
repz
xorb
call
lcall
add
mov
push
popf
addl
pop
repz
mov
les
xor
mov
ret
mov
add
loop
movsl
ud1
fs
mov
addr16
pop
mov
dec
xchg
lods
fwait
cmp
dec
lret
mov
in
shll
inc
xor
lcall
mov
data16
cmp
in
jecxz
and
psubsb
jno
sub
jmp
or
and
lcall
fcmovnu
xorl
xchg
mov
or
mov
add
dec
rcrb
roll
sti
pop
shrb
add
leave
jo
out
cmc
js
out
scas
call
or
adc
and
xor
mov
push
insb
xor
mov
bound
jae
and
xor
inc
int3
xor
js
add
cmp
mov
push
jb
inc
sarl
add
jb
into
push
pop
xchg
adc
dec
insl
cld
dec
sbb
xchg
pop
pop
push
push
ds
and
xor
mov
loopne
inc
ja
lock
addr16
fwait
xchg
or
rclb
faddl
pop
fisttpll
xchg
sub
pop
repnz
xchg
and
ljmp
mov
je
push
insl
cmpsb
jnp
into
test
je
jmp
and
std
aad
mov
or
sub
jmp
dec
aad
out
xchg
notb
inc
inc
push
sub
xchg
in
sub
or
mov
gs
subb
and
push
movsb
rcrb
mov
sub
enter
mov
mov
push
inc
or
jns
es
adcl
push
and
pop
jecxz
inc
clc
lods
enter
mov
in
movsb
stos
or
sub
std
mov
mov
sbb
push
repnz
stos
dec
jl
cltd
adc
shrl
jge
or
ror
mov
adc
mov
fwait
out
add
pop
and
inc
inc
pop
ja
dec
out
test
xor
sbb
cmpsb
dec
pusha
mov
add
mov
mov
cmp
icebp
or
test
inc
gs
inc
fnsave
jnp
outsb
lcall
adc
jmp
fyl2x
sbb
notl
mov
jp
add
insb
push
pop
stc
push
sbb
daa
ljmp
shlb
dec
aas
outsb
mov
push
add
mov
std
aas
sbb
lea
sbb
cmp
mov
mov
inc
fnstcw
inc
mov
icebp
jl
pop
pop
and
shl
mov
out
jecxz
push
mov
cmp
movsl
push
ss
inc
add
mov
or
cmp
lret
pop
shl
aad
xchg
dec
mov
mov
adc
xor
addr16
mov
subb
mov
add
sbb
mov
in
sub
jae
inc
mov
lock
inc
lcall
sub
out
cmp
cmp
leave
jnp
sti
jo
mov
xor
outsb
out
and
mov
fstl
push
mov
jnp
mov
mov
or
or
xchg
push
popa
and
mov
pop
in
repz
jecxz
sub
sub
xor
rcrl
cli
sbb
mov
mov
lock
lret
fbstp
roll
mov
cmp
sti
push
aad
and
sub
jp
mov
je
mov
jb
sbb
xchg
push
mov
mov
nop
push
jge
adc
add
std
or
imul
jmp
cwtl
shll
pop
fimuls
sbb
fdivs
repz
or
mov
xchg
jno
sbb
mov
pushf
or
aas
dec
jae
fimuls
jns
mov
and
jge
or
ret
data16
mov
or
div
dec
std
fs
push
mov
inc
test
div
cmp
mov
xchg
ss
lds
popa
add
into
jg
fsts
adc
jg
mov
enter
sbb
pop
rcrl
repnz
decb
mov
jb
gs
or
xor
jae
lret
gs
push
outsl
push
js
pop
mov
or
fistps
nop
jmp
xchg
js
pushf
std
push
sub
mov
cmp
add
cmpsl
adc
adc
cmc
in
adc
aas
push
or
inc
cmp
out
inc
pop
ret
stc
mov
stos
mov
xchg
stc
addb
leave
das
sbb
jl
dec
add
out
js
out
scas
inc
stos
sub
repz
mov
push
xor
jns
mov
shr
jne
sbb
and
or
mov
adc
add
daa
lock
test
decb
xor
in
test
cld
mov
addl
inc
popf
stc
adc
and
push
pop
repz
movaps
pop
stc
mov
mov
int3
jnp
jns
stos
ljmp
xchg
mov
mov
cld
in
sub
cld
or
fnsave
test
shll
push
inc
shl
sub
cltd
xchg
mov
lahf
pop
add
fidivrs
mov
mov
mov
fdivl
dec
icebp
cmp
test
jo
dec
cmpsl
or
jmp
inc
pushf
imul
orl
movsl
mov
mov
and
push
fsubr
pop
fidivl
cmpl
ret
cmpb
push
cmpsb
sub
in
dec
and
sbb
xor
nop
lock
mov
fbld
incb
sub
pop
push
inc
fsub
mov
fadd
insl
and
dec
scas
mov
int3
jb
xchg
movsb
lods
push
pushf
das
mov
stos
lds
ret
xchg
push
in
test
sbb
push
lcall
shll
repnz
jge
push
or
sub
lcall
mov
sub
and
fdivs
push
push
test
inc
inc
aad
pop
xchg
cmc
mov
je
cmp
rclb
jae
pusha
pop
movsl
xchg
lcall
shlb
outsb
scas
xchg
push
jo
outsb
add
add
in
dec
xor
xchg
aam
fwait
cmpsl
or
xlat
push
mov
les
ljmp
pop
sti
add
mov
push
stc
jbe
mov
and
sub
aas
xchg
and
stos
inc
loopne
xor
out
iret
adc
mov
minps
orl
in
les
jae
xor
shl
jl
int
jp
fstl
aam
decb
shrb
and
xchg
push
sub
pop
mov
leave
pop
and
loope
rclb
sbb
xchg
mov
fldenv
lcall
push
xchg
jl
fucomp
fstpl
mov
jp
push
in
popa
fwait
mov
pop
inc
fcoml
and
or
jp
sub
pop
dec
les
pop
dec
aad
push
mov
mov
fisttpl
sbb
rcll
sbb
xchg
fimull
outsl
fildll
lock
sbb
mov
mov
sub
pop
aam
xchg
xor
xchg
sbb
scas
lds
hlt
sub
repz
and
jmp
lahf
loopne
mov
aaa
mov
scas
inc
bound
sub
cmpsb
xor
xchg
dec
sub
fld
outsb
add
mov
fwait
ss
dec
sbb
out
xchg
insl
int3
sbb
add
jns
int
mov
push
jg
sbb
shrl
lds
cmp
dec
dec
sub
sub
fsubs
mov
jbe
mov
xor
sbb
mov
and
int3
jg
repnz
jg
fisubrl
sbb
pop
cmc
pusha
or
push
int
es
out
push
jecxz
lods
repz
fisttpl
call
sarl
mov
gs
ljmp
test
cmp
jmp
addl
and
pop
rcl
ja
shlb
lahf
jae
pushl
int
mov
loopne
bound
jo
sahf
test
scas
popa
clc
adc
push
push
mov
xchg
shll
sbb
outsb
mov
push
cmc
mov
mov
outsl
adcb
ret
outsl
sub
sbb
sbbb
jl
or
add
cli
leave
pop
push
sub
dec
lods
mov
lods
mov
add
and
and
fiaddl
xchg
sub
or
or
dec
mov
icebp
arpl
and
dec
fstpt
jl
mov
push
adc
movsl
jg
mov
adc
sbb
sti
ret
subb
dec
mov
dec
inc
xlat
jle
pop
mov
fildll
int3
adc
stos
sub
out
mov
sbb
jnp
xchg
xor
jmp
and
js
add
lret
arpl
or
ret
jno
ret
loopne
xor
cltd
icebp
fiaddl
ss
xchg
dec
arpl
aas
movl
push
dec
mov
push
mov
call
lret
xchg
repnz
popa
std
xchg
xchg
cwtl
lods
mov
lods
rcr
imul
dec
jg
push
cmp
dec
in
sub
xchg
push
js
lcall
outsl
arpl
std
xchg
cmpb
icebp
and
adc
incb
sti
xchg
and
and
adc
and
stc
stos
stc
lods
das
test
lret
adc
xchg
xchg
xor
test
inc
insl
push
mov
push
test
push
js
rcrl
mov
cmp
fcmovnu
jno
js
push
and
leave
fisubs
repz
hlt
dec
xor
pop
adc
mull
add
xor
cwtl
jmp
cmp
dec
int3
adc
fdivl
decb
cmp
enter
mov
rclb
andl
int
ret
sbb
frstor
dec
pop
push
push
cmpsb
mov
nop
mov
jmp
xor
mov
ret
xchg
add
lock
mov
or
mulb
fisubrs
adc
std
cmovge
sub
fs
je
sbb
mov
mov
xor
cli
mov
adc
jle
mov
and
andl
push
lcall
and
cltd
gs
mov
jne
jg
pop
dec
and
mov
or
mov
pop
sub
pop
xor
mov
xorl
fwait
add
dec
pop
ret
int3
cmp
xlat
dec
mov
cmpsb
out
push
lret
pop
clc
call
xchg
inc
sahf
mov
in
daa
lahf
jb
mov
xchg
mov
scas
out
xor
jno
stc
inc
icebp
jge
repnz
push
mov
lret
lds
cltd
sub
pushf
leave
push
mov
mov
and
imul
aam
jp
xsha1
cmpsb
or
adc
cs
rclb
movl
dec
leave
jmp
lcall
push
imulb
shrl
cmc
add
dec
enter
shll
adc
dec
loope
cmp
in
xchg
xchg
mov
lock
clc
mov
xor
and
sbb
cmp
or
sar
fidivrs
inc
ljmp
xchg
and
xor
test
jp
fisubrs
jmp
testl
mov
and
ret
in
into
push
mov
out
inc
mov
jmp
jns
jp
loop
les
aas
jae
sub
icebp
cmp
jb
sahf
pop
cmp
jo
push
xchg
out
push
cli
pushf
ja
hlt
dec
push
movsb
adc
xchg
not
inc
cmpsb
adc
imul
fucomip
push
sti
fnstcw
das
icebp
jnp,pt
adc
mov
sub
mov
mov
cmp
or
inc
xor
cwtl
cmp
ljmp
mov
into
add
in
fstl
sub
cmp
pop
inc
loop
dec
push
mov
push
xchg
mov
push
dec
add
imul
push
jl
sbb
mov
dec
add
or
sub
aas
aaa
stos
je
xchg
imul
out
inc
adcb
notl
fldenv
in
push
cmp
rcrb
addr16
repz
stc
mov
xchg
scas
lock
imul
decb
in
out
lods
mov
andl
pop
hlt
imul
adc
cmc
cltd
hlt
cmpsl
inc
jne
or
jle
out
pop
shlb
fcom
add
rcr
mov
push
push
push
clc
popl
aad
bound
push
and
cmc
dec
lds
mov
add
cld
cltd
addl
sub
mov
lcall
outsb
movsb
imul
inc
aad
inc
loope
jno
jmp
in
pop
push
cmpsl
stos
fnstcw
or
insl
rcrb
fwait
lods
scas
and
aaa
lods
jo
push
pop
aas
dec
cmp
jbe
xor
cmpsb
adc
cltd
push
es
imul
and
stc
das
mov
sbb
mov
insb
adc
pminub
cmpb
mov
popa
mov
cmpsb
imul
and
push
scas
pop
or
pusha
mov
jno
inc
subw
ret
mov
pop
ret
pop
xor
cwtl
jnp
xchg
mov
jbe
pop
xchg
xchg
adc
and
dec
fbld
lock
hlt
pop
mov
push
stos
jge
pusha
sub
add
fistl
lods
test
pop
and
movsl
xor
cli
adc
std
adc
out
xchg
hlt
arpl
and
lods
cld
xchg
stc
jmp
movsb
cmp
push
or
cmp
lret
xchg
xor
cmp
addr16
ret
fchs
or
mov
dec
inc
fwait
xlat
insl
fs
sub
jbe
fistpll
fadd
push
fsubl
mov
ret
shrl
int3
pushf
test
paddd
xchg
pop
jne
push
sbb
sbb
pop
jns
jge
aad
adcb
xorl
ds
sub
mov
aas
mov
xchg
mov
or
bound
inc
stc
dec
dec
dec
dec
ffree
jo
cmp
imul
lcall
stos
jb
sub
inc
fsubr
ljmp
mov
icebp
mov
adc
jp
sub
jo
or
mov
lods
mov
push
lock
ja
sub
shlb
movl
aad
sbb
mov
pop
lds
dec
pop
ljmp
insb
inc
xchg
and
xlat
out
lret
and
imul
add
and
pop
jo
jmp
dec
ret
sbb
push
dec
and
adc
mov
loope
aaa
mov
mov
pop
out
or
dec
sub
decb
and
xlat
pop
in
sbb
dec
jne
imul
imul
sbb
xor
jge
hlt
pop
mov
jmp
fbstp
and
mov
out
cmp
dec
push
pop
jmp
ds
xchg
scas
in
inc
je
jno
push
jo
icebp
push
and
sub
pop
mov
in
add
decb
test
mov
sbb
dec
sarb
js,pt
sub
sbb
pop
addr16
mov
pop
push
add
imul
dec
xchg
mov
hlt
inc
sub
test
jmp
test
dec
push
xlat
pop
adc
mov
pop
je
out
cli
pop
pop
adc
adc
sbbl
sub
popa
and
dec
fdivrl
fdivrl
push
mov
jmp
mov
daa
rcll
xor
add
ffreep
push
sub
arpl
push
cmp
fsubr
sarb
mov
or
mov
fnsave
adc
in
sti
cmp
je
mov
cmp
add
out
test
sti
mov
outsl
fcmovbe
mov
shl
push
imul
loop
fucomi
fildl
pop
pop
mov
sahf
ds
sbb
push
aam
push
sbb
jg
inc
test
xorl
sub
or
push
and
cltd
loop
fsubrs
add
push
aam
mov
shrb
movsl
js
js
call
sub
xchg
and
mov
jne
push
cmpsl
into
sub
mov
faddp
loope
pop
sub
mov
in
inc
movsb
aam
xor
pop
scas
xchg
call
and
mov
sti
fidivl
into
xchg
aad
das
xor
pop
lds
cltd
sub
imul
dec
shll
outsl
push
in
add
ja
sbb
mov
subb
inc
sti
int
xchg
xchg
addr16
push
lods
pop
test
jge
jne
xchg
out
xchg
outsb
fmull
xchg
out
rcl
aas
xchg
dec
test
jecxz
mov
shlb
sarb
lods
jmp
dec
inc
stos
jne
jle
sbb
pop
ss
jg
imul
loop
mov
cmp
dec
repz
das
mov
xchg
adc
fstpl
push
pushf
fucom
ljmp
cmp
dec
outsb
xchg
ret
or
pop
xorl
test
pop
popf
ret
fiaddl
cmp
jns
clc
insl
mov
inc
int
jb
iret
cwtl
mov
daa
rcrb
and
lods
andl
sub
in
mov
outsb
jl
jg
lock
cmp
divb
push
cltd
xchg
adc
pop
test
in
das
pusha
cs
pop
icebp
je
xlat
xchg
sbb
pop
lock
sbb
xchg
and
in
fsubr
dec
mov
xchg
mov
aaa
mov
fdivl
inc
adc
mov
sbb
out
loope
imul
mov
outsl
xor
rclb
test
popa
sti
pop
iret
sbb
js
mull
cmc
xchg
popf
xor
mov
mov
test
arpl
shr
mov
data16
ficoml
dec
jg
pop
inc
sbb
add
push
in
lahf
xorb
and
pop
clc
jae
xchg
mov
mov
testb
dec
adc
adc
std
mov
mov
xadd
and
sub
push
dec
clc
mov
movsb
cmp
ret
mul
mov
sbb
iret
cwtl
fidivrs
shl
imul
fstl
mov
adc
lods
pop
imul
cwtl
xor
sahf
sahf
sub
mov
fwait
out
sub
loopne
clc
dec
aad
mov
stos
rcrb
dec
aaa
insb
daa
mov
sub
lcall
in
mov
cmp
add
repnz
movsb
pop
mov
dec
out
in
out
xchg
adc
adc
mov
leave
mov
aaa
int
pop
out
lret
adc
in
inc
popf
sbbb
mov
push
adc
cmp
insl
xchg
lret
push
push
pop
int
aas
popa
rorl
jo
std
ljmp
lret
mov
lcall
js
jmp
les
mov
ljmp
or
push
out
or
push
daa
mov
sub
cltd
xor
xchg
sbb
rorl
jne
out
xchg
mov
adc
inc
mov
jo
bsr
ss
cltd
cltd
mov
pop
pushf
jbe
push
imull
clc
stc
je
jecxz
mov
adc
push
and
fs
lret
loop
and
out
push
jmp
pop
fidivs
sub
in
pop
in
mov
xchg
mov
adc
ss
inc
cmc
xchg
xor
cmp
push
push
dec
xchg
daa
outsl
fwait
aam
aam
jl
hlt
enter
push
ret
jb
dec
sub
testb
ret
aas
pop
dec
lret
xchg
neg
mov
cltd
mov
fldenv
or
or
add
je
aaa
lret
movsl
idivb
jecxz
sti
fwait
cli
mov
dec
into
sti
adc
outsb
lea
sahf
out
add
mov
adc
sbb
sub
xchg
pop
dec
jne
js
push
rcll
push
or
cmc
ja
rclb
adc
add
xor
std
xor
push
mov
int
adcl
les
push
roll
adc
fisubl
jecxz
jb
in
mov
cmp
or
inc
mov
xlat
repz
ljmp
sub
mov
pop
lods
inc
inc
aas
adc
out
cltd
std
push
rep
mov
add
mov
roll
popa
xchg
mov
sub
jbe
pop
or
inc
adc
xlat
insl
repz
xchg
outsl
into
mov
aad
gs
sti
les
loop
imull
in
pop
adc
es
push
das
or
inc
pop
sbb
ja
rcll
xor
and
lcall
rcll
fdivp
gs
cwtl
mov
adc
insb
pop
cmp
cs
jbe
rcrl
jbe
aam
call
push
mov
jae
in
mov
shlb
scas
mov
daa
jmp
push
mov
lods
pushf
mov
inc
std
leave
pushl
sub
dec
jl
int
insb
sub
pop
push
notl
int3
sub
ds
stos
cmpsl
insb
xchg
out
sbb
lret
mov
push
test
push
and
or
gs
lcall
mov
mov
imul
popa
std
jg
movsl
stos
pop
loope
inc
stc
xor
cmp
xor
shlb
ss
adc
fimuls
push
sbb
outsb
movd
mov
aas
loop
and
push
mov
push
fwait
jb
hlt
push
fwait
ja
loope
aaa
xchg
push
pop
jge
cmp
iret
and
std
push
push
test
mov
or
rcll
mov
mov
cwtl
and
xchg
xor
xor
push
adc
data16
fistpl
dec
out
push
imul
jl
push
sub
mov
ss
push
or
out
xchg
push
pop
pop
push
sub
daa
push
mov
test
dec
outsb
mov
push
je
or
jno
jecxz
adc
sub
inc
in
imul
lcall
shlb
xchg
mov
stc
movsl
inc
imul
sbb
adc
mov
in
addr16
mov
ljmp
andb
sti
int3
adc
loop
sub
cmp
pop
push
rorb
mov
sub
mov
pop
cltd
dec
add
ret
ret
dec
lret
jo
adc
lret
repnz
scas
pop
sub
fnstsw
and
inc
pop
inc
add
lock
test
mov
or
mov
rolb
ja
roll
jp
int3
push
adc
push
jl
sub
mov
pop
daa
sarb
xchg
mov
cmpsl
hlt
out
cli
aad
rolb
sahf
sahf
scas
aam
pusha
xchg
cwtl
mov
adc
adc
xor
add
or
jno
jp
mov
inc
data16
mov
loope
mov
movsb
cli
mov
mov
ljmp
dec
rolb
pop
adcb
and
outsb
clc
loopne
cs
push
xlat
xor
jo
fs
xchg
dec
mov
inc
scas
xor
loope
ds
int3
pop
repz
mov
and
dec
xor
imul
shll
loop
cwtl
adc
and
imul
and
aaa
jo
aam
sahf
and
fstl
imul
ss
mov
mov
push
lds
nop
push
sbb
jb
cmpsl
aaa
push
addl
xchg
sub
loope
sbb
fsubl
arpl
testb
leave
ret
rorb
aas
jae
pop
push
xchg
push
mov
stos
in
lds
pop
sti
inc
cmp
jle
inc
xchg
sbb
gs
xor
fcoml
jne
push
test
mov
test
mov
pop
push
mov
cmpsb
jmp
push
cs
rorb
add
sub
cmp
mov
out
xor
nop
mov
and
call
dec
cs
sbb
add
adc
enter
fmul
add
sbb
mov
ljmp
sub
lret
jne
pushf
mov
mov
xor
test
pop
test
mov
int
fildll
dec
jnp
rol
fsubp
adc
inc
dec
lahf
inc
fadd
les
enter
andb
movsb
dec
add
ds
pop
jo
cmpsl
in
int3
pop
lods
jmp
cmp
dec
push
les
push
fcomps
cmp
mov
sub
sbb
sbb
sub
cmp
dec
leave
movsl
dec
shll
mov
mov
dec
loop
jp
nop
inc
xor
js
xor
push
cmp
and
hlt
sub
push
shr
add
and
insb
jnp
nop
pop
push
mov
adc
ss
addr16
int
lcall
insb
mov
mov
mov
inc
inc
out
pop
push
mov
cmc
adc
lds
pop
and
push
and
stos
cmp
rcrb
ds
mov
out
add
mov
push
pushf
xor
mov
jbe
je
in
jae
aad
xor
jl
jnp
mov
mov
cld
ret
call
inc
pop
je
pop
or
scas
rorb
es
mov
les
popf
ret
dec
mov
pop
mov
daa
into
gs
jbe
les
adc
and
mov
sub
ja
ret
fbld
int
fbld
lcall
mov
cmp
repz
fdivrl
or
dec
sbb
sbb
ja
nop
cltd
shrl
insl
adc
inc
cmpsb
pusha
inc
dec
sbb
cmp
xchg
outsl
dec
dec
lock
aaa
fidivrl
fildll
seta
in
push
sub
and
adc
mov
lret
lock
xchg
mov
popa
dec
mov
loopne
filds
shlb
clc
rcl
stos
xor
fs
mov
push
mov
pop
popf
cs
clc
add
jecxz
jne
xchg
mov
cmp
or
inc
aad
sbb
xor
in
mov
xor
push
add
test
and
shl
lock
adc
clc
test
sbb
lcall
lods
or
cmp
imul
fdivs
cli
inc
mull
jb
loopne
into
cmp
sbb
jg
ret
mov
or
in
stc
push
dec
add
pop
movsl
cmp
gs
dec
cmp
jle
jecxz
mov
mov
in
mov
fcompl
les
or
or
cmpsl
pop
nop
sub
ja
dec
leave
sub
ret
test
insl
pop
outsb
les
fidivrs
call
adc
dec
insl
adc
add
jbe
insb
and
cld
sbb
push
aaa
insl
shl
push
lahf
mov
or
push
pop
stc
push
sub
lcall
and
mov
add
js
lret
mov
xchg
adc
mov
add
enter
push
scas
pop
jl
outsl
scas
lds
jecxz
sahf
fidivs
add
push
int3
push
inc
gs
femms
or
mov
add
jle
push
out
lahf
leave
jae
mov
mov
das
loopne
rcrb
jecxz
rclb
push
sahf
xor
sbbl
push
jae
xchg
and
iret
bound
test
xchg
lods
pop
sub
xchg
pop
int
xor
rorb
movsl
ja
or
pop
loop
cmp
pop
icebp
test
add
pop
pop
mov
inc
sarl
mov
pushf
push
lret
jl
inc
es
mov
inc
pop
in
test
xor
lds
pushf
xchg
jns
bound
mov
leave
adc
inc
out
push
add
data16
jge
hlt
jl
push
mov
je
aas
push
test
mov
jp
aam
mov
dec
push
jbe
stos
mov
xlat
xchg
inc
mov
stc
inc
stos
es
lock
movsl
cmpsl
sarl
xchg
xor
repz
int3
xor
or
andb
jecxz
inc
adc
mov
fs
testl
nop
push
lahf
stos
aaa
sbb
lods
jl
jmp
fwait
lods
scas
pop
hlt
adc
inc
inc
or
dec
mov
movsl
xchg
jmp
loopne
sub
insb
iret
cmp
dec
leave
push
sahf
lock
and
and
jecxz
mov
stos
dec
cmp
add
ret
or
jne
jbe
aas
xchg
push
test
clc
or
dec
xlat
icebp
dec
adc
lds
adc
jp
pushf
bnd
add
ljmp
repz
ret
add
pop
sub
mov
leave
push
add
and
add
test
jl
es
stos
xor
int
fs
test
fwait
xchg
fimuls
scas
das
hlt
ljmp
jge
das
cmpsb
lock
sbb
cmpsl
xchg
insb
scas
andl
sbb
mov
je
jo
imul
xchg
les
imulb
jmp
fldenv
jl
cmp
and
decb
imul
loopne
sbb
scas
fbld
pop
insl
inc
or
cmpsl
shl
xlat
pop
cmp
cmp
inc
test
pop
ret
loop
sbbl
adc
aas
sti
pop
xor
jge
push
mov
ss
mov
mov
imul
ja
ljmp
mov
pop
adc
cmp
fwait
in
popa
sahf
mov
into
xchg
push
icebp
mov
jne
imul
xor
sub
or
cli
daa
repnz
jecxz
mov
negl
xor
push
dec
xchg
xor
sbb
roll
pop
push
or
or
scas
mov
loope
jecxz
repnz
js
cs
xchg
test
mov
mov
adc
lahf
jmp
sbb
mov
or
and
ds
xchg
cmp
dec
adcb
pop
out
push
aaa
stc
cmp
push
outsl
js
sbb
pop
ret
mov
popa
cmpsl
and
xchg
jecxz
jmp
mov
inc
sub
ret
aaa
pushf
fistl
into
data16
sub
out
jl
mull
adc
jle
das
inc
adc
in
jnp
xorps
jp
add
pop
mov
fisubrl
in
xchg
pop
lock
sbb
sbb
pop
push
mov
ja
fdivs
cmc
mov
push
insl
loop
sbb
push
sbb
mov
and
cli
es
sub
ja
ret
fucomip
and
mov
add
mov
test
out
jge
cs
mov
pop
aad
mov
xor
jnp
fwait
add
xchg
xchg
into
cmpsb
sti
cmp
push
jb
pop
xchg
cltd
mov
lret
ds
stos
out
imul
xor
adc
push
inc
jp
ret
add
std
clc
imul
push
lret
lret
mov
jb
or
pop
jg
adc
jbe
pop
shl
into
fidivrl
sub
mov
adc
or
scas
jo
push
push
and
xchg
pushf
roll
sti
or
sub
rol
rolb
or
push
insl
sub
fsubs
ret
dec
mov
inc
pop
mov
leave
jmp
sbbl
xchg
rcrb
sahf
in
sbb
cmpsb
daa
jno
pop
push
cmp
xor
dec
loopne
std
or
je
jl
add
cmp
push
inc
and
and
outsb
inc
xchg
add
scas
iret
shll
push
cwtl
pop
dec
cltd
mov
lret
cmp
cmpsl
dec
jp
ret
aas
cmp
push
xchg
iret
imul
gs
push
into
out
dec
ret
inc
call
lea
bnd
mov
ja
jnp
daa
fidivrs
sbb
stos
popa
and
fs
ficompl
test
dec
xor
movsb
ljmp
ja
push
pusha
adc
jne
push
rorb
dec
add
inc
and
cltd
cltd
std
xchg
bound
mov
adc
inc
fsubrs
jae
inc
pop
fdivs
pop
or
mov
into
rorl
shrb
in
pop
cmpsb
xor
jmp
jae
je
or
jmp
sbb
xor
mov
test
fstps
pop
pop
out
iret
mov
icebp
insb
pop
sahf
jle
scas
xlat
iret
and
lea
jb
inc
pop
sbb
fldl
hlt
mov
daa
aas
mov
cmp
ljmp
or
mov
out
aad
pop
mov
mov
xor
sub
inc
mov
fnsave
push
das
dec
push
int
divb
popf
or
jg
shrl
shll
testl
js
cld
clc
cs
cmpl
lds
push
mov
ficompl
push
out
movsb
mov
adc
mov
iret
mov
je
cltd
push
mov
arpl
cltd
js
les
mov
jae
jge
dec
lahf
mov
cld
repnz
movsb
push
push
cmp
xor
cld
jmp
inc
pop
popf
lods
lea
dec
lret
push
out
push
lret
gs
mov
repnz
das
lds
pusha
dec
cmp
xchg
mov
scas
xlat
jne
or
or
shlb
cmp
add
mov
movl
dec
loope
aas
push
jo
mov
sub
xor
adcl
cmp
fisttps
cmpps
js
testl
dec
out
mov
cmp
xchg
pop
xlat
sub
in
xor
and
xor
imul
outsb
and
outsb
add
fnstsw
cltd
je
adc
shlb
test
xor
imul
aam
addr16
rcrb
xchg
loope
mov
mov
cmp
je
andb
mov
sti
stos
sbb
enter
xor
shrl
jp
lret
sub
jbe
addb
std
adc
cmp
outsl
fisttps
adc
rclb
mov
insb
fisubs
sbb
loopne
aas
cmp
scas
add
mov
and
cmp
mov
adc
cli
shrl
mov
jb
xchg
jns
pop
inc
sbb
push
fwait
jge
xchg
inc
pop
ja
les
mov
rorl
mov
xor
out
jns
jae
add
in
pop
add
add
adc
movsb
cmp
aas
add
pop
add
mov
data16
mov
test
cmp
jnp
mov
mov
adc
xor
leave
add
push
call
xlat
pop
cmp
pop
outsb
loop
outsl
push
push
daa
jle
mov
shlb
xor
sub
mov
adc
dec
mov
ds
outsb
or
pop
mov
pop
mov
and
and
cli
mov
xor
dec
cmpsl
mov
lahf
in
jg
jle
imul
icebp
andb
fnstsw
sub
pushf
mov
movsl
fs
push
fnstsw
icebp
mov
sbb
sbb
daa
data16
insb
rcr
inc
dec
sub
in
pop
icebp
cmp
cmc
cmp
call
mov
imul
movnti
xor
or
les
mov
cmp
cmpsb
ret
pop
xor
nop
lahf
fsubl
insl
hlt
lret
out
out
mov
dec
xchg
adc
xchg
cmc
dec
dec
fcmovbe
pushf
fld
sub
imul
and
das
repz
xchg
cmpsl
dec
and
rcrl
iret
movl
cmc
pop
adc
adc
or
lcall
push
add
mov
pop
aam
loopne
jge
dec
pop
outsl
imul
cld
sub
std
pop
cmp
or
fdivrl
push
lahf
mov
in
push
mov
push
jg
test
add
fchs
cltd
jno
xchg
mov
je
pop
mov
int
sub
push
test
inc
mov
rcrl
and
std
xchg
add
test
pop
lock
in
jno
loopne
stos
out
hlt
mov
cmpsb
jl
mov
jp
shlb
outsb
mov
in
outsl
loope
arpl
aad
dec
pop
dec
loope
enter
iret
push
in
xor
mov
mov
lods
lock
sti
inc
fiadds
push
add
repz
movsb
jle
test
insl
cmp
add
fimuls
data16
xor
in
clc
arpl
dec
mov
push
outsb
add
in
mov
pop
mov
insl
out
sub
insl
inc
movsb
mov
ss
sti
rclb
repnz
adc
test
xchg
pop
sub
lahf
jo
lret
push
adc
cmp
xchg
jns
lods
es
in
adc
mov
cltd
call
cmp
mov
int3
in
inc
adc
out
lret
xchg
arpl
fidivl
subl
sar
adc
mov
ret
hlt
pcmpgtw
xchg
cmp
shrl
jg
arpl
cs
shl
les
ret
lahf
push
sub
or
daa
mov
or
ret
fwait
lcall
inc
pop
xchg
pop
icebp
lret
mulb
and
je
or
mov
cld
repnz
jnp
xchg
xor
out
out
sub
dec
jo
and
popf
adc
int3
cmp
dec
popf
in
mov
fs
es
jmp
lahf
and
pop
mov
mov
mov
cmp
faddl
stos
fdiv
mov
xchg
pop
xor
pop
scas
dec
cmpl
mov
iret
loop
shrl
imul
loope
and
movsl
repnz
xor
and
xchg
sbb
pop
mov
daa
mov
loopne
adc
and
adc
mov
mov
lret
imull
add
rcrb
inc
lret
mov
repnz
jle
adc
jg
add
dec
pusha
mov
jl
xor
jb
rclb
ss
pandn
jg
imul
addr16
pop
xor
aad
jne
lock
stos
inc
loop
xor
or
fstps
into
jmp
pop
pop
mov
xor
sub
pop
pop
mov
nop
xor
ljmp
leave
outsb
fildl
mov
push
jb
mov
ret
jnp
sbb
xchg
xchg
cmp
imul
call
fsubl
out
std
addr16
mov
loope
mov
mov
clc
dec
mov
mov
leave
sub
xor
shlb
lds
fists
aam
frstor
cltd
repnz
or
or
inc
scas
movsb
mov
or
dec
scas
jge
dec
repz
dec
test
xor
jo
daa
mov
fwait
mov
mov
pop
push
cltd
jo
movsb
movsl
mov
out
negl
sbb
xor
lods
adc
and
scas
stos
int3
cmpsb
inc
ljmp
lcall
sbb
arpl
cmp
mov
push
lahf
sbb
stos
or
mov
int3
sti
cmp
sub
psubb
inc
lock
mov
aam
pop
scas
push
add
jno
shrb
pop
adc
clc
je
xor
add
inc
sub
jae,pn
popf
xor
mov
pusha
scas
lret
ret
sub
repnz
inc
and
negb
cmp
dec
mov
inc
cmp
push
mov
pop
movsl
mov
cmp
push
js
das
push
mov
xor
add
test
mov
add
aad
dec
pop
ss
sbbb
in
mov
jno
sub
xchg
xor
stc
adc
dec
push
pushf
xchg
mov
mov
and
aad
lds
out
rolb
sub
scas
mov
insb
pushl
or
sbb
jle
inc
cmp
xorl
pop
ret
loop
jecxz
andl
loopne
cmp
cmp
sahf
and
and
lret
ljmp
test
mov
jne
or
lahf
push
sti
dec
pusha
ss
lods
mov
xchg
inc
cltd
mov
neg
out
and
daa
jg
dec
lods
test
sbb
push
js
mov
ret
sub
cmp
clc
or
loopne
fsts
or
sub
fisubrl
xchg
sub
jbe
cld
sub
xchg
sub
jae
in
ds
test
in
dec
pop
es
subl
icebp
dec
xchg
mov
es
icebp
leave
push
jo
and
sub
mov
outsb
divl
js
inc
movsb
mov
jmp
mov
and
fsubrs
xor
jecxz
push
inc
iret
add
mov
rcl
push
sub
push
out
fisubrs
adc
add
jb
inc
fidivs
popl
push
test
fs
push
dec
cltd
or
inc
dec
ds
pop
cmp
xchg
test
push
ja
addb
mov
sub
adc
popa
lds
pusha
aam
and
mov
or
mov
mov
mov
push
cltd
xor
add
add
popl
xor
push
mov
sahf
jae
mov
call
sarl
scas
xlat
lods
aas
aad
push
mov
jecxz
cs
loop
adc
dec
mov
push
inc
pushf
mov
int
mov
push
test
out
xor
gs
fdivrs
pusha
pop
mov
xor
fbstp
scas
jno
in
int
pop
decl
pop
sahf
pop
aam
sbb
cmpsl
pushf
xor
inc
jnp
mov
pop
sbb
mov
sbb
notb
aam
mov
lods
ljmp
call
pop
jae
out
add
mov
mov
push
push
cmpsl
in
rolb
xchg
aas
in
mov
and
xchg
pop
cmp
pop
cwtl
and
in
add
dec
jmp
lods
in
cmp
hlt
xchg
fucomip
icebp
ret
in
imul
aas
push
ljmp
jno
lods
dec
enter
lahf
xor
sti
mov
mov
jmp
insl
ljmp
insl
dec
in
stc
xchg
pop
in
icebp
iret
ret
call
sbb
push
fwait
cli
add
mov
xchg
fs
test
addr16
jae
cltd
inc
jae
xchg
push
push
add
sbb
outsl
repz
std
outsb
in
cmc
mov
and
movsl
lock
into
cmp
mov
addr16
mov
cs
je
cmp
cmpsl
xor
xchg
dec
shl
loop,pt
or
adcl
or
cmp
notb
movsb
sbbl
fcmovbe
adc
outsb
icebp
and
sub
fs
rorl
dec
sub
cmp
in
jg
loopne
aaa
jl
push
in
aad
pop
fnstcw
lock
stos
dec
mov
push
sub
ret
loope
ret
or
js
je
xor
cmp
imul
xchg
stos
fcomps
adc
leave
mov
aaa
mov
movb
dec
pop
test
adc
leave
outsb
jle
inc
pop
pop
and
cs
dec
xchg
test
mov
adc
ja
push
xor
mov
aas
mov
push
jmp
data16
sbb
dec
fsub
test
cmp
jne
add
in
inc
sbb
xchg
and
mov
dec
cltd
dec
or
mov
xchg
add
std
pop
cwtl
lods
xor
addr16
mov
in
xlat
cmpsl
push
das
test
fsubrl
sub
mov
xchg
pop
std
fnstcw
cmp
sbb
lahf
pop
xor
xchg
ja
fnstcw
inc
stos
or
ss
cmp
add
inc
cltd
mov
and
gs
aam
jg
mov
cmp
mov
xor
dec
sub
popf
aam
ret
das
mov
dec
and
xchg
xor
ss
int
es
pop
mov
dec
sub
jbe
cmp
je
pop
lds
xchg
js
add
jmp
outsl
jae
xor
pushf
add
cmp
enter
cli
subl
mov
xor
push
insb
inc
lds
loop
push
mov
adc
pop
cmc
into
xor
ds
adc
jae
jnp
and
xchg
push
adc
sbb
pop
lret
jno
inc
inc
gs
jbe
fisubs
test
and
aad
xchg
outsb
push
sti
lahf
xor
push
ljmp
ja
loopne
push
xchg
pushf
push
test
popf
stos
push
sbbl
or
ja
mov
scas
es
add
push
jmp
xor
pop
sti
lods
jmp
outsl
pop
test
or
push
out
xor
jnp
sti
jmp
pop
adc
xor
setb
inc
jae
out
test
fwait
push
sub
ja
lds
ljmp
push
xchg
aad
cmp
push
stc
stos
push
popf
sub
or
cmp
or
aam
pop
std
fsubr
sub
xchg
scas
mov
mov
push
in
pop
xor
inc
cmc
mov
pop
sbbb
mov
cmp
or
dec
dec
lahf
mov
pop
arpl
daa
jecxz
xchg
mov
insl
fdivl
sbbl
gs
stc
adc
and
mov
mov
push
sbb
mov
mov
sbb
incb
xor
ror
cmp
subb
mov
lods
pop
pop
mov
xchg
fcomi
jp
cmp
inc
fwait
mov
lds
push
xlat
insl
cmp
addr16
test
push
xor
test
fdivr
pandn
ja
xchg
mov
outsl
and
imul
jno
int
into
push
cmc
call
dec
add
or
dec
movsl
sub
xor
cltd
enter
xor
push
mov
vcvttpd2dqy
push
sub
mov
nop
ret
repz
fdiv
jnp
pop
adc
jg
pop
andl
ss
andb
mov
jge
fiaddl
inc
xor
out
test
nop
fwait
sub
mov
inc
push
jbe
dec
cmp
jmp
push
add
xchg
insl
ret
jns
cmp
rcrl
xchg
dec
rolb
sub
push
pop
mov
jecxz
push
clc
or
cmpl
rorb
loop
xchg
cmp
sbb
add
push
test
mov
leave
xor
std
dec
mov
ljmp
mov
push
sub
lds
push
clc
repnz
fwait
and
shlb
inc
adc
cmpsl
test
data16
mov
sbb
mov
ljmp
mov
adc
cmpsl
xor
mov
testl
adc
dec
push
aam
xchg
shrb
jle
mov
fsubrp
insl
lahf
mov
pop
push
cmp
dec
adcb
test
adc
or
cwtl
insb
cli
jmp
dec
lret
and
mov
push
pop
gs
ret
adc
outsl
repnz
lcall
xor
mov
push
inc
outsb
jnp
test
cmp
mov
adcl
adc
push
movsb
inc
out
mov
test
jmp
test
pop
in
sbb
inc
push
jno
push
jno
xor
xchg
sti
mov
imul
push
int
xchg
push
sahf
arpl
cmpsb
xor
rolb
rolb
mov
mov
in
xchg
push
fldcw
das
jo
inc
lods
loop
push
cmp
gs
mov
sbbl
inc
pop
lods
mov
and
dec
out
imul
ret
incl
mov
es
fcmovu
xor
mov
and
ss
push
popa
push
outsb
mov
dec
mov
imul
adc
jbe
lcall
or
jle
lret
mov
fsubl
mov
fwait
mov
cltd
rep
cs
ret
xor
push
mov
testl
not
sub
and
aaa
sbbb
fistpll
mov
pop
xor
fs
movsl
dec
cld
jnp
add
ds
jge
hlt
and
sub
fwait
mov
adc
push
xchg
ret
sub
in
cmc
mov
std
xchg
mov
xlat
movsb
cld
sub
cmc
lcall
leave
add
clc
dec
xor
ret
jg
lods
and
jno
cmp
mov
fldt
sbb
dec
or
daa
xor
mov
and
adcl
out
xor
sub
lea
jbe
xchg
lea
cmp
arpl
jmp
mov
negl
std
add
jmp
pop
add
mov
inc
dec
mov
xchg
fs
mov
and
mov
pop
andl
cmp
js
dec
cmp
dec
mov
mov
enter
mov
adcb
jns
test
add
adc
lret
mov
pop
jne
fsubs
mov
mov
jno
ljmp
cmp
and
stos
or
sbb
cltd
je
xchg
jmp
movsb
lds
rorb
push
pop
add
and
dec
adc
mov
or
sub
fidivrs
ret
ljmp
xchg
loop
int
and
fistpl
push
daa
pop
testb
pop
xor
pop
cmpsb
test
stc
xchg
add
fildll
inc
data16
xchg
ret
repz
jno
mov
add
fwait
lret
stos
inc
push
cs
int
cmpsb
out
repz
mov
les
mov
call
fwait
or
sub
sub
inc
leave
dec
pop
sarb
inc
dec
imul
stc
inc
or
push
lret
frstor
aaa
and
adc
cmp
imul
in
int
popa
icebp
imul
cs
rorl
push
aam
std
xor
pusha
movsl
push
jmp
stos
stc
repz
mov
fwait
xor
int3
xlat
mov
fs
mov
imul
outsl
in
std
xlat
add
and
fwait
xor
fidivrs
test
sub
jae
cmp
push
push
movsl
imul
fstl
add
dec
fwait
mov
daa
push
sbbb
pop
ror
dec
xor
ljmp
lret
jl
xor
mov
cmp
enter
adc
push
xor
mov
inc
xchg
xchg
mov
pop
movsb
popf
lret
ss
gs
je
lret
enter
push
outsb
out
out
dec
pop
testb
je
roll
mov
pop
into
rolb
pop
jae
bound
sti
sahf
and
xchg
into
push
call
frstor
dec
add
cmp
mov
aas
loop
jl
mov
pop
shll
enter
sub
out
xor
mov
test
jle
jbe
xor
idivb
fnstcw
into
add
mov
dec
or
inc
lea
mov
arpl
pop
scas
jnp
in
mov
mov
sbb
mov
lock
add
mov
fstps
sbb
jns
leave
aad
add
push
in
mov
nop
or
dec
cld
pusha
xlat
sbb
pusha
jp
jl
sub
inc
sbb
dec
push
cmpsb
inc
cmp
mov
pop
xchg
push
aas
or
outsl
cmp
dec
add
in
xor
ret
jb
cld
pop
cmpsb
sbb
jb
stc
pop
imul
test
ja
cli
mov
ret
push
mov
loop
ss
fistl
mov
jl
lret
sbb
ror
adc
push
or
and
jns
sub
pop
cmpsb
mov
mov
or
and
outsl
decl
xor
ret
stos
movsl
icebp
fdivl
push
lods
push
cmc
imul
cmp
inc
addl
dec
shll
into
enter
lret
push
iret
xchg
leave
in
push
out
fprem
hlt
orl
dec
jecxz
or
jnp
jl
mov
ret
shll
dec
pop
push
sar
pop
test
mov
sub
outsb
adc
inc
dec
popa
mov
push
sbb
aas
push
out
popf
stos
or
push
push
add
aad
shrl
cmp
push
lock
lret
and
jno
mov
cwtl
dec
push
je
mov
xor
mov
sub
dec
jecxz
in
in
xchg
stc
and
outsb
sub
mov
lods
jb
cwtl
lahf
or
and
pop
ffreep
mov
ja
pop
fwait
dec
shlb
pop
je
sbb
jnp
sahf
jo
push
cmp
xor
outsl
fcoml
xlat
mov
lcall
dec
outsb
adc
pushf
call
mov
mov
repz
mov
jne
clc
or
ficoms
jns
or
int3
mov
les
hlt
andl
mov
mov
jge
add
jbe
add
mov
fnstenv
push
pop
mov
arpl
mov
ds
dec
andb
int
in
sbb
push
loop
cmp
addr16
sbb
mov
pop
jmp
daa
add
sbb
xchg
ret
in
jbe
add
pop
pushf
push
pusha
divl
leave
add
jne
lods
ljmp
and
andl
ret
in
add
mov
add
lods
sub
jl
rcrl
xchg
mov
xchg
inc
leave
pop
push
test
lock
ds
fsubs
xchg
outsb
sbb
mov
jl
add
cltd
push
aad
push
pop
ja
sti
sub
fbstp
sbb
inc
fdivp
lock
push
das
gs
adc
cmp
jno
stos
in
xchg
outsl
mov
push
std
in
test
sbb
add
out
push
pusha
cs
xor
shlb
sub
ret
mov
idivl
mov
cwtl
cld
jne
ss
dec
fisubl
in
insb
push
inc
push
hlt
popa
cmp
test
mulb
call
test
sti
push
or
sub
push
or
ljmp
aad
aaa
sbb
jns
rclb
mov
xchg
jl
lds
icebp
inc
inc
mov
movl
popa
jae
das
pusha
orb
lahf
pop
out
adcb
mov
cltd
rcll
bound
push
shl
mov
aad
xor
xor
or
sub
dec
lods
das
icebp
cmpsl
in
xchg
out
adcb
push
and
scas
sub
push
pop
in
movsb
dec
andb
sbbl
xchg
aaa
sti
fwait
stc
adc
xchg
xchg
xchg
push
fistpll
scas
cmp
enter
inc
or
addr16
loop
shr
sahf
add
push
and
mov
jno
jmp
lds
mov
divl
push
mov
push
xor
jmp
sbb
add
les
xlat
sub
addr16
push
or
pushf
out
add
call
inc
sti
inc
incb
fmulp
pop
sub
cwtl
push
sub
xchg
loop
jo
push
jbe
adc
das
mov
cs
cld
jnp
jecxz
jno
pusha
rol
ljmp
push
or
test
add
jbe
sbb
loope
add
sub
repz
add
or
cmp
xchg
pop
inc
lahf
add
ds
pusha
sub
gs
sub
mov
aaa
andl
dec
xchg
sbb
call
xchg
shl
inc
push
cmpsb
cmp
in
int3
jg
xchg
xor
loop
andb
fldenv
std
loope
repnz
out
xchg
and
dec
andb
fwait
imul
and
or
stc
lret
in
adc
push
testb
mov
push
fstl
xchg
push
ss
cwtl
mov
fucom
mov
adc
rolb
je
inc
push
push
shll
and
mov
mov
flds
test
lret
mov
mov
cmp
mov
pop
sbb
int
mov
js
test
ljmp
push
cwtl
push
dec
out
jmp
notb
jl
jge
or
shrb
add
xchg
jns
dec
icebp
into
xor
jbe
push
stos
mov
sbb
jo
mov
orb
cli
push
sbb
mov
inc
cmpsb
aaa
mov
enter
leave
cli
movsb
enter
test
inc
cmp
in
jnp
or
nop
jl
pop
in
popf
loop
add
cmc
andb
dec
pop
sub
shll
mov
dec
ljmp
inc
ficomps
cmpsb
xchg
cmp
jno
int3
or
xor
sub
test
testb
rcrb
cli
pop
fsubrp
dec
sbb
popa
lea
sahf
or
or
jg
pop
inc
mov
mov
adc
jecxz
xchg
out
push
shll
ficoml
push
inc
je
xchg
out
mov
pop
cmc
sbb
das
cmc
inc
push
in
xchg
dec
or
cmpsl
loopne
dec
popa
mov
rcrb
bndstx
push
insb
lret
cli
xor
push
fistl
or
mov
dec
test
fildll
pop
cmc
cs
ljmp
ds
cltd
lds
ss
stos
jo
or
call
pop
add
cltd
lcall
mov
mov
shlb
mov
pop
jne
hlt
push
push
lea
lods
ret
jnp
dec
and
scas
or
repz
jg
loopne
bound
dec
and
sahf
ja
pushf
sub
leave
adc
adc
enter
jg
stc
jae
sub
sahf
push
fcmovb
xchg
dec
mov
int3
jg
pusha
xlat
cmc
popa
push
fidivrl
movsb
xor
add
mov
loope
mov
bound
xchg
cmp
std
mov
cs
fdiv
adc
adc
shlb
fildll
into
adc
jno,pn
testl
aam
movb
sub
mov
push
sub
mov
das
imul
sub
push
repnz
sbb
jp
outsb
xor
xchg
jp
jmp
mov
stc
movb
mov
shlb
mov
das
inc
cmp
in
out
xchg
jle
mov
adcl
mov
sbb
out
dec
aaa
daa
scas
call
mov
push
adc
out
mov
add
test
dec
movsb
addr16
push
lock
aad
xor
mov
push
int
cmpsb
ret
rol
inc
loope
loop
jl
mov
gs
pop
mov
xchg
jp
aaa
push
jmp
insb
sti
dec
adc
pop
stos
adc
flds
cmp
jno
push
outsb
fsubr
mov
pop
dec
add
mov
lret
jo
jp
cs
sub
call
xor
and
loope
in
xor
dec
inc
jmp
js
mov
fadd
js
or
ficompl
loop
cmp
psubsb
rcrl
leave
fisttps
mov
ret
jns
ret
enter
mov
add
and
cmp
mov
mov
orl
push
test
sub
xor
inc
cmp
outsb
add
mov
mov
outsb
out
dec
inc
in
jg
and
scas
subl
aas
aad
mov
xchg
mov
dec
loop
hlt
mov
icebp
jecxz
dec
adc
outsb
call
ret
xor
and
adc
out
test
or
pop
leave
aad
push
pop
ljmp
imul
lock
insl
inc
pop
adc
insl
imul
adc
inc
mov
ss
inc
adc
scas
enter
push
insl
daa
mov
mov
mov
popf
xor
mov
inc
outsl
jmp
jne
lock
dec
clc
push
clc
pop
daa
xchg
addr16
ss
jnp
ret
adcl
jb
sub
out
inc
popf
stc
nop
sbb
sub
jns
cmpsb
jnp
ror
adcl
cltd
hlt
jo
cmp
les
hlt
shlb
nop
lcall
mov
mov
cmpsb
outsb
cmp
hlt
fs
lahf
roll
dec
push
dec
pop
stc
out
leave
dec
loop
lds
imul
pop
dec
dec
decb
ja
int
xor
call
adc
and
push
scas
cmp
xchg
jmp
or
cmp
dec
loop
out
out
push
sbb
cvtps2pi
xchg
xor
rclb
cmp
repnz
cs
mov
and
push
ljmp
jno
aas
xchg
shrb
dec
pusha
mov
jno
std
adc
lcall
adc
popf
sub
ret
test
cs
shll
push
aam
or
js
icebp
mov
adc
stc
inc
sbb
sahf
cmpsl
add
int
and
or
sub
dec
mov
mov
mov
xchg
int3
and
fucomp
sbb
cmp
std
mov
scas
mov
inc
jecxz
jmp
and
aam
stos
dec
and
and
inc
push
out
jb
sbb
outsb
add
mov
adc
adcb
fnstcw
subb
pop
mov
cmp
cs
dec
pop
mov
insl
shlb
imul
icebp
lretw
daa
inc
in
insb
add
jmp
jecxz
lahf
xor
mov
test
subl
xchg
adc
xor
rorl
cs
in
sub
cmp
mov
add
aad
jno
mov
or
cld
xchg
repnz
cltd
sub
shlb
mov
enter
sbb
clc
cmpsl
jecxz
clc
bound
mov
in
mov
lock
in
lret
jnp
or
cwtl
das
pushf
push
cmp
ret
popa
jle
sbb
jae
repz
ljmp
imul
shrb
xor
fwait
ljmp
jne
lcall
jno
sub
lods
mov
pop
fildl
lods
cmp
daa
incb
cmc
adc
dec
insl
ror
xlat
loop
scas
adc
xchg
cli
xchg
outsl
sub
and
and
adc
pop
and
repnz
repnz
cli
pop
or
icebp
xchg
jle
jmp
sub
cmpsl
mov
inc
cmc
add
int3
jb
iret
and
pop
stc
pushl
jno
inc
mov
rorl
mov
out
sahf
pop
sub
mull
push
mov
pop
pusha
cmp
cmpb
insl
cwtl
pop
xchg
in
cwtl
pop
cli
hlt
pop
cmp
mov
add
pop
mov
mov
ja
jmp
pop
jp
dec
dec
jle
stos
cmp
xlat
jo
xor
jnp
pop
dec
add
dec
ret
sbb
int
mov
or
cmp
mov
test
xorl
scas
stc
adc
jae
xchg
int
pop
out
out
and
movsl
xlat
xchg
add
mov
repz
pop
mov
fidivl
adc
mov
shlb
cmp
call
popf
stos
pop
lods
lahf
stos
fnstsw
popa
push
mov
shrl
stos
inc
testl
movsb
outsb
jge
fwait
stos
lods
popf
inc
pop
mov
jmp
mov
pop
movsb
mov
mov
or
insb
mov
out
jno
mov
cmp
push
ja
sbbb
pop
jns
in
dec
mov
ret
nop
ret
sarb
mov
mov
fcoms
sti
mov
cwtl
testl
jb
or
out
push
jmp
fucomip
xor
mov
mov
je
js
inc
stos
les
std
aaa
xchg
mov
jmp
push
loopne
imul
lods
xor
scas
inc
add
mov
int
pop
xor
sbb
leave
mov
push
cmp
and
jno
cmc
idivb
sub
mov
jecxz
dec
sar
rcrl
mov
add
ja
jno
and
push
sub
shll
pop
shlb
test
adc
add
fcmovnb
andb
daa
fbld
mov
cs
js
mov
lret
cwtl
pop
dec
push
out
xor
enter
std
insb
add
stos
mov
call
imulb
xlat
sti
wbinvd
mov
lock
mov
scas
push
and
hlt
mov
push
cmp
orb
sub
or
fs
pop
mov
mov
or
dec
add
jb
push
adc
mov
test
cmp
add
sbb
insb
movsb
mov
adc
add
dec
cmp
xchg
sub
cwtl
arpl
cld
cmp
das
or
lcall
xor
fsubl
out
inc
inc
adc
jbe
lcall
mov
stc
scas
mov
or
xor
jbe
mov
test
mov
cmc
out
sub
decb
inc
dec
repnz
lret
xlat
cmpsb
negb
mov
sbb
dec
ja
in
xchg
dec
cmc
test
es
or
into
in
test
repz
mov
bound
sbb
mov
mov
fidivrs
movsl
emms
xchg
mov
dec
dec
sbb
imul
inc
lahf
mov
sbb
test
pusha
shlb
cmp
in
pop
jge
fildll
rcll
dec
negl
inc
xor
xor
scas
in
xchg
add
addr16
sti
cmpsb
adc
ret
fildll
jns
cwtl
movsl
mov
stos
call
adc
or
xchg
push
test
mov
cmp
push
imul
cmp
jne
jo
popa
mov
dec
cmc
je
stos
mov
fdivrl
xchg
insl
pop
cmc
mov
movsl
adc
shlb
mov
shl
xlat
cwtl
outsl
neg
dec
pusha
ss
testb
insl
adc
push
xchg
lods
jo
sub
pop
jmp
jbe
inc
sbb
xchg
les
shll
and
push
lds
xor
add
jns
insb
test
mov
mov
hlt
stos
int
cli
jmp
test
and
xchg
mov
pop
xchg
mov
ret
pop
repz
dec
mov
push
out
cld
mov
jge
mov
mov
xchg
push
mov
imul
sbb
and
sub
cli
xchg
mov
sbb
and
pextrw
imul
mov
call
push
or
clc
mov
pop
xchg
loop
js
mov
je
aaa
pop
in
add
add
xchg
data16
dec
cmp
dec
push
add
mov
lret
jmp
add
sahf
dec
lret
bound
add
test
insl
sub
mov
push
mov
jge
out
fistl
pusha
lahf
subl
fwait
rcl
add
popf
and
dec
push
divb
push
xorb
add
stos
mov
inc
mov
dec
dec
push
mov
std
sub
test
adcb
inc
cmc
and
push
xchg
fiaddl
mov
add
add
jg
sbb
sahf
mov
push
stos
pop
dec
pushf
mov
aaa
ret
add
mov
sbb
push
or
dec
push
aam
xchg
leave
imul
stos
and
jns
negb
addb
arpl
or
shl
mov
out
lahf
add
cmp
clc
mov
loope
and
mov
sbb
frstor
dec
dec
frstor
fs
and
mov
inc
loop
je
mov
sahf
cmc
pop
icebp
stos
ret
stos
fistpl
dec
popf
in
outsb
mov
cmp
xchg
push
or
or
mov
movsl
out
repnz
out
mov
pushf
mov
adc
jno
fbstp
adc
fcompl
clc
and
fsts
rcl
push
test
jmp
xlat
out
or
shlb
rcrl
dec
cmp
icebp
sbb
cmc
enter
mov
mov
mov
lods
pusha
ljmp
mov
adc
push
and
and
pop
insb
daa
pop
pusha
std
addr16
out
xor
enter
icebp
popf
cmpsl
add
jb
jmp
sub
sbb
cs
insb
add
ss
cmp
mov
mov
outsl
mov
inc
dec
popf
inc
ja
ds
outsl
enter
pushf
mov
mov
dec
cli
pop
mov
out
jle
sbb
divl
cmp
scas
mov
push
outsb
mov
push
aad
xchg
clc
shrl
gs
fwait
icebp
dec
sub
dec
shrl
xchg
cmpsb
in
jp
xor
xchg
mov
push
lods
out
nop
xchg
out
nop
cwtl
andl
lds
repz
cmp
or
enter
lret
arpl
lcall
and
mov
sub
or
je
std
rcrb
fisttpll
mov
fs
jo
out
adc
pop
inc
cmp
xor
aam
inc
aam
js
jle
xchg
ds
or
shll
sub
inc
dec
add
insl
inc
xchg
and
mov
xchg
out
mov
jmp
arpl
or
mov
cmp
mov
xchg
insb
pop
jge
stos
adc
test
dec
mov
sbb
subl
lock
mov
xchg
decl
xchg
xchg
push
fsub
jge
mov
add
jbe
jnp
not
cwtl
pop
mov
add
cli
not
arpl
pop
sbb
das
mov
out
jge
aam
jmp
mov
lock
cmpsl
sbb
xor
fsubrp
imul
cmc
cmc
push
or
adc
jno
push
outsl
pushf
mov
mov
das
das
lods
xchg
mov
pop
mov
sbb
xchg
sub
pusha
jg
dec
jno
pop
icebp
sbbl
icebp
mov
inc
add
in
mov
xchg
sbb
pushf
xor
adc
xchg
jne
rcrb
js
stos
ret
ss
cmp
jl
popf
fadds
adc
ja
sub
pop
imul
dec
addr16
sbbb
out
stc
sarb
mov
pop
sbb
fs
sub
inc
push
adc
std
pop
hlt
xor
mov
fimull
xor
mov
mov
ds
orb
stos
mov
mov
leave
lret
inc
pop
ljmp
xor
test
cli
pusha
testb
and
stos
rcrl
icebp
shrb
sub
hlt
rcrl
inc
fsubr
ljmp
cli
mov
cld
mov
test
and
mov
sbb
xor
pop
in
int
or
or
or
add
sahf
int
jecxz
or
hlt
jg
roll
and
push
ljmp
jno
or
aas
clc
imul
dec
mov
sub
adc
or
mov
xchg
xchg
pop
pop
or
lcall
mov
xlat
out
add
and
pop
add
sahf
shll
mov
sub
movsbl
lock
jp
aam
inc
sar
adc
cld
mov
ds
pop
lret
in
call
lods
ss
push
sahf
xor
ja
ljmp
mov
jg
jnp
mov
ret
out
push
xor
pop
mov
iret
mov
stos
ret
ss
lret
into
jnp
inc
and
xor
xchg
mov
nop
sarb
add
and
ljmp
sbb
push
mov
sub
or
mov
hlt
addr16
pusha
out
sbb
push
ret
pop
xor
adc
or
stc
inc
sub
mov
cmp
scas
inc
mov
sbb
push
pusha
int
push
std
inc
arpl
and
sub
aaa
or
or
dec
aam
add
into
push
aaa
lock
mov
test
inc
pusha
push
lret
sub
sbb
inc
inc
loopne
andb
xor
jb
xchg
inc
jp
mov
xor
jo
popa
push
cmpps
xor
mov
xor
cmpsb
mov
xchg
or
add
sub
or
pop
mov
sub
adcl
xchg
imul
setno
push
inc
stos
cmp
in
bound
mov
ss
mov
cltd
sub
in
pusha
aam
mov
pop
packssdw
push
adc
inc
mov
sub
inc
dec
loope
es
xlat
imul
mov
loopne
js
push
sub
stos
adc
fnstsw
adc
push
gs
sub
daa
push
or
dec
jp
nop
pop
xor
sbb
test
movsb
cmp
cmp
adc
pop
inc
add
cmpsl
andl
dec
fwait
cmc
mov
mov
les
adc
imul
gs
jno
mov
outsl
std
mov
inc
sub
imul
fsubr
les
xchg
fwait
xor
arpl
mov
adc
sbb
cmp
call
mov
or
dec
nop
lods
jns
jge
sbb
repz
repnz
jns
sub
call
scas
inc
jg
and
xchg
int
xchg
sbb
cld
pop
ljmp
loope
cmp
or
rclb
mov
pop
repnz
rorb
jns
jns
lret
sahf
es
rcr
jbe
sti
rol
data16
cli
cmp
sub
popa
cmc
push
aas
push
push
test
ret
mov
aaa
rcrl
lock
sub
cmp
test
xor
xor
xor
mov
xchg
daa
sbb
or
xchg
pop
inc
mov
nop
adc
ret
aad
ret
jp
push
or
xchg
icebp
or
fstpl
mov
dec
adc
push
outsb
inc
cmp
mov
mov
jp
adc
aaa
dec
leave
push
mov
mov
dec
lods
lods
pop
into
jmp
lret
sub
call
or
shrl
in
xor
call
pop
dec
push
stos
movsb
aas
push
xchg
jne
adc
pop
dec
loopne
mov
out
mov
fmulp
adc
not
cs
hlt
add
cmpsl
jb
repnz
test
adcb
into
inc
pusha
test
lods
cli
leave
or
cltd
orl
bound
jnp
xor
jns
adc
fwait
ret
xchg
xchg
jae
shll
hlt
daa
gs
jns
dec
nop
cmpl
mov
cs
cmpsl
add
jne
fstpl
pop
loopne
or
and
push
int
gs
sar
add
jnp
sub
mov
das
sti
mov
jo
daa
mov
imul
js
adc
scas
out
inc
sbb
adc
mov
and
fdivrl
shrb
fimull
jp
cmp
mov
mov
mov
add
cwtl
cmpsb
test
inc
xlat
xor
iret
stos
sub
in
pop
push
data16
mov
mov
sbb
xor
imul
out
dec
push
push
jno
mov
jno
jge
mov
stos
mov
cli
sbb
mov
add
cmp
shrl
pop
xlat
pop
jns
imulb
inc
pop
xor
sub
call
push
fwait
add
inc
jl
mov
push
lods
sbb
push
and
jmp
and
add
outsl
mov
pushf
jecxz
dec
fwait
or
push
mov
xor
imul
cmpl
sub
push
or
mov
mov
jmp
or
ja
cld
and
int3
xchg
idiv
imul
outsl
daa
sub
sbb
inc
fldl2e
jnp
jp
das
into
push
cwtl
pop
adc
dec
fs
sub
sbb
mov
jle
in
scas
push
pop
jbe
enter
loopne
loope
xchg
dec
lret
inc
call
jle
ljmp
ljmp
add
or
jnp
jns
mov
ljmp
add
cmpsb
fwait
dec
gs
jp
adc
xor
mov
mov
sarl
push
or
xor
cmp
push
add
dec
dec
sbb
sub
lods
cmp
inc
pop
movsl
loope
xchg
stc
into
shr
xlat
scas
push
jge
mov
ret
or
inc
stos
mov
lahf
ss
ror
xor
cli
pop
or
push
loop
sub
fwait
sbb
fwait
mov
pop
mov
mov
jae
and
push
inc
pop
out
dec
mov
in
xor
aas
subl
push
lcall
in
mov
mov
pop
mov
pop
lods
mov
jbe
push
mov
std
inc
je
jge
movsl
scas
mov
inc
cmpb
sahf
sub
mov
push
ret
icebp
fisttps
jecxz
pop
lea
mov
out
arpl
lret
or
outsb
mov
mov
out
mov
mov
pop
jne
imul
mov
add
int
lahf
movl
lods
xchg
imul
aaa
pushf
or
leave
add
sbb
jb
jne
test
in
lock
clc
xchg
mov
aad
rol
pop
cmp
repnz
ret
ficoms
mov
push
outsb
inc
jbe
ja
stc
xor
xchg
scas
jle
mov
scas
insl
adc
test
or
sbb
pop
sub
aaa
int3
das
shll
mov
xchg
cwtl
inc
sbb
xchg
ss
scas
les
adc
dec
mov
loope
test
mov
jle
sti
xchg
jecxz
cmpsl
sub
leave
test
cs
ja
mov
mov
dec
das
xchg
jmp
lods
dec
and
movsb
jns
popa
stos
outsl
mov
push
jae
xorb
das
fildl
inc
xchg
ret
pop
xor
idiv
cld
outsl
lock
popf
push
sbb
outsb
iret
fldcw
addb
test
aas
pop
sbb
sub
out
push
pop
jmp
jae
pop
imul
in
cmp
cmp
fldt
inc
push
test
imul
adcb
cmp
mov
mov
rcl
mov
mov
notl
push
sub
add
outsl
jge
fwait
lods
sub
jo
push
mov
inc
fbstp
fcoml
stos
inc
jb
push
push
xor
test
leave
mov
push
ljmp
mov
mov
lcall
loop
mov
ds
or
lcall
xor
loope
mov
out
mov
fcomip
mov
popa
mov
xor
popf
xor
test
inc
cwtl
stc
jnp,pn
add
jp
add
lea
xor
mov
test
das
or
xor
test
orb
fdiv
mov
shll
xor
mov
movsl
jp
push
sti
inc
test
cwtl
das
jmp
repz
xchg
inc
ffreep
fldl
sarl
lods
mov
mov
mov
mov
jne
xor
pop
rcll
arpl
iret
iret
fidivs
xor
fstpl
or
inc
stos
fstpl
fildl
xchg
jbe
ja
pop
stos
mov
repz
pop
add
dec
sahf
and
fwait
xchg
les
adc
divl
add
fwait
jg
xlat
scas
aaa
lods
and
pop
enter
int3
jg
jmp
jge
imul
cmp
iret
mov
jge
mov
lcall
movsl
pop
lods
mov
pop
out
in
mov
mov
cwtl
das
sub
dec
jmp
xorb
aaa
int
xor
push
mov
add
call
adc
jns
mov
daa
mov
pop
into
sub
out
xchg
cmpsl
or
sbb
jg
rcr
lahf
and
outsl
mov
adcl
cld
sti
adc
fwait
sub
popa
ss
sbb
adc
nop
gs
jecxz
test
add
push
mov
xchg
and
sub
test
xchg
hlt
or
inc
pop
out
sub
push
mov
pop
sub
rcrl
fidivs
clc
fisttps
and
mov
sub
sub
std
jo
adc
lcall
stc
je
and
bound
das
mov
dec
cld
jnp
xchg
sbbb
inc
pop
js
sbbl
and
repz
ret
pop
push
repz
test
adc
sub
adc
test
es
mov
test
roll
pop
xchg
fstpl
jbe
dec
shr
push
push
sbb
cld
test
dec
or
push
test
fdivl
pop
mov
hlt
mov
mov
test
dec
sbb
add
sarb
movsb
pop
enter
pop
mov
repnz
jnp
out
xchg
sbb
adc
lret
loope
sbb
cmp
jo
mov
sub
mov
shll
jl
inc
lock
leave
pusha
cmc
mov
das
rclb
lret
jne
mov
std
push
pushf
cli
xchg
xchg
jae
sub
xlat
ret
incb
jl
inc
fnstenv
mov
int3
add
or
fnstcw
xor
and
jmp
sbb
xor
pusha
pop
js
shll
push
mov
sti
fldl
test
lods
push
addr16
jne
adc
adc
andb
dec
xchg
sbb
test
std
stc
enter
adc
arpl
xchg
fildll
sub
xor
outsb
and
dec
cmp
in
push
test
adc
xor
xchg
sub
cmp
decb
and
mov
dec
cmpsl
add
sub
aaa
push
xchg
mov
adc
pop
pop
rorl
gs
lret
fs
cmp
imul
inc
push
dec
gs
pop
movsb
lock
sahf
jl
add
adc
mov
jno
lret
inc
repnz
push
aad
jbe
pop
ja
js
pusha
outsl
les
call
pop
lods
call
fcoms
movl
sarb
xchg
loop
enter
imul
call
test
jns
push
jne
push
popf
mov
pop
stc
jae
mov
lea
test
add
stos
in
pop
pop
aam
fadd
movsb
pop
std
mov
xchg
inc
cs
sub
mov
out
mov
inc
nop
jnp
cmpsb
mov
add
fsubs
dec
push
inc
push
rcrl
jbe
pop
fidivl
push
lds
iret
push
je
mov
mov
cltd
push
movsb
xchg
xchg
mov
and
or
pop
mov
test
push
inc
mov
xor
push
addr16
daa
data16
popa
aas
dec
loopne
and
out
push
adc
xchg
inc
jmp
lcall
and
mov
xchg
iret
or
add
sbb
dec
adc
and
xlat
fwait
clc
mov
shll
fistl
cwtl
inc
int
dec
mov
neg
jo
mov
int3
int3
lahf
orb
fs
push
insl
adc
xor
jp
andl
mov
xor
mov
repz
push
xor
jae
jecxz
mov
orb
loop
imul
inc
stos
cmp
lcall
out
or
aas
movsb
imul
push
push
inc
ret
mov
ljmp
testb
jnp
lods
sub
repz
sahf
shll
xchg
es
aas
clc
or
lret
dec
loopne
cmp
push
push
mov
fldt
or
inc
mov
mov
cs
aam
int
fucomp
dec
pop
int
movl
inc
imul
fisttpll
call
pushf
or
fwait
xor
sub
lcall
cwtl
fcompl
mov
push
fdivp
mov
stc
inc
data16
sbb
mov
jg
dec
out
sub
jns
scas
xor
push
cmp
test
fucomp
jmp
imul
and
xchg
addl
dec
adc
js
lahf
idivb
fmuls
fcmove
sub
dec
dec
lods
paddusw
pusha
pop
mov
test
mov
in
cmp
rcrb
cmp
sahf
cmp
xchg
xchg
ror
xchg
add
fadd
jnp
faddl
enter
sarb
outsb
adc
cmc
inc
add
add
jg
adc
out
push
imul
dec
movsl
pop
lods
fadd
fwait
xor
ret
pushf
xchg
inc
jmp
or
daa
mov
and
pop
adc
xchg
mov
xchg
mov
mov
negb
repz
xchg
mov
sbb
loope
outsl
inc
hlt
aas
sbbl
adc
cli
jb
push
cld
sub
cli
cmp
adc
inc
sahf
pop
nop
loope
mov
jnp
sub
shrl
dec
dec
out
dec
cmp
sti
xchg
pop
loope
push
pop
mov
fstpt
insb
cmc
lret
in
or
stos
das
mov
lret
adcb
jp
sbb
sbb
jae
xor
lret
int3
cmp
inc
cmpsl
fsubp
mov
in
inc
lock
mov
gs
test
movsb
push
xor
sub
adc
movsb
repz
mov
mov
imul
pop
jo
std
data16
mov
xor
js
and
push
std
push
arpl
jne
lock
repz
jns
sti
mov
rcr
cld
andl
pop
xchg
jg
popl
movsl
movsb
iret
mov
test
lret
mov
pop
stos
xchg
add
mov
stos
in
mov
mov
push
xchg
cmp
insb
jg
enter
mov
out
xor
pop
xchg
sub
adc
mov
icebp
arpl
sbb
das
sarl
or
pop
insb
aam
pop
jno
mov
shl
dec
into
out
mov
cmpsl
out
dec
jne
cmp
xchg
lcall
jl
xchg
inc
xchg
pop
bound
mov
fucomi
add
fcompl
sbb
inc
arpl
pop
aam
pop
pop
cmp
inc
das
sub
stc
lods
adc
test
adcl
cs
lret
cmp
adc
arpl
pop
cmp
cmp
idiv
nop
mov
pusha
push
mov
repz
data16
push
ret
lretw
stos
xor
in
fwait
adc
cwtl
or
dec
cmp
sub
add
subl
sarb
mov
ret
pop
sub
mov
fst
dec
sbb
cmp
nop
popa
clc
rorl
pop
add
fnstcw
hlt
mov
sahf
shlb
rcrb
cmpsl
mov
push
and
mov
std
inc
test
mov
insl
xchg
lods
pop
outsl
decl
sbb
sahf
cmp
push
jb
in
pop
arpl
movsb
xor
sbb
aas
inc
mov
mov
roll
loope
mov
mov
jae
adc
imul
aaa
mov
inc
and
rorl
pop
movsl
push
out
lds
xchg
das
or
shll
dec
cmp
fdivrp
stos
icebp
mov
mov
lahf
jns
jns
mov
fiadds
lcall
and
dec
mov
or
pop
or
mov
adc
sahf
add
cltd
jns
lret
xchg
fdivp
adc
sarl
sahf
adc
aad
mov
pushf
sub
dec
push
push
mov
jge
cmp
sub
stos
xor
inc
fcompl
sub
dec
lahf
idiv
or
fidivl
test
add
mov
sub
sub
imul
mov
jb
addr16
flds
cld
outsl
jg
pop
lahf
jge
loop
mov
xchg
and
dec
mulb
out
test
pop
stos
and
mov
lahf
shll
xchg
scas
jle
insl
dec
cmp
sub
sbb
jns
enter
frstor
inc
xlat
cmp
xchg
ljmp
inc
cli
inc
iret
shlb
adcb
mov
loope
jmp
cmc
add
push
lds
sbb
test
mov
fnsave
push
jo
mov
ret
pop
push
mov
gs
shl
scas
mov
xor
cli
jecxz
xor
cmp
je
in
cmp
hlt
out
sub
mov
and
or
outsb
loope
dec
insb
sbb
inc
js
in
insb
cmpsb
xor
and
dec
mov
popf
mov
xchg
bnd
push
leave
push
sub
test
jmp
pop
decb
orb
sbb
adc
add
cs
fsubrs
pop
xor
inc
lcall
cwtl
dec
scas
inc
jge
inc
in
pop
push
popf
stc
out
sbb
cmp
dec
icebp
mov
cld
add
xor
and
ja
xchg
shll
nop
mov
sub
mov
sti
adc
and
lods
sub
pop
xor
mov
mov
inc
push
and
dec
sbb
fs
push
add
and
mov
add
mov
cmp
jp
test
stc
cmp
daa
mov
stos
and
out
cmp
fnstenv
addl
loop
sbb
mov
lods
test
mov
cltd
jge
and
ret
and
out
in
dec
sbb
pop
leave
scas
xchg
sqrtps
xchg
xchg
jns
hlt
ret
mov
cltd
ret
add
hlt
mov
aad
mov
mov
mov
test
popa
int3
jnp
cmc
lods
scas
inc
ficoms
stos
pop
or
pop
jbe
push
push
jne
test
sahf
sub
dec
jmp
push
aad
into
shlb
push
cwtl
mov
movsb
in
pusha
pop
add
inc
or
ljmp
mov
call
push
int
ja
in
sub
xchg
adc
out
les
pop
mov
jmp
bnd
adc
xchg
fwait
cwtl
addb
je
sbb
jl
pop
xor
dec
inc
call
push
xchg
lea
jg
xchg
ljmp
inc
pop
pop
adc
mov
jg
ljmp
add
fisubs
pusha
in
sbb
rol
jb
cmp
sbb
insb
or
mov
xchg
nop
out
insb
adc
xor
cmp
lcall
enter
outsl
mov
lret
ss
rcrl
jns
mov
pusha
addr16
or
mov
ja
push
inc
popa
stc
mov
aad
and
or
cmp
adc
inc
stc
mov
xchg
push
imul
mov
xor
inc
popf
mov
mov
cmp
cli
fs
ljmp
xchg
leave
ds
fsubr
jl
dec
add
jno
aad
lcall
popa
dec
icebp
jbe
cmpsb
call
add
jne
push
adc
and
dec
ficoml
cmp
in
lcall
cmpsb
mov
loopne
lock
push
out
ds
insl
rcr
cmp
rcrl
imul
xchg
psubusb
sahf
sbbl
cli
test
or
mov
subb
loopne
andl
jecxz
xor
mov
pop
add
sbb
scas
scas
xchg
pop
and
mov
test
sti
das
push
mov
and
jl
pusha
pop
xchg
inc
dec
sbb
sub
jmp
and
sub
ljmp
cmpsl
push
cmpsl
lea
enter
mov
ss
dec
push
fimuls
outsb
test
lret
jo
sub
dec
adc
mulb
push
cld
dec
xor
push
xor
mov
std
aad
xor
jecxz
add
push
in
aas
cmovnp
sub
mov
xchg
ficompl
pusha
add
mov
imul
adc
popa
daa
std
mov
sbb
lds
in
jne
xlat
and
and
jb
mov
mov
inc
fsubrs
je
popa
lods
jne
pushl
pop
cs
test
hlt
fldt
cli
ds
adc
push
jne
fsubs
pop
mov
fs
stos
and
test
jnp
in
stos
into
outsl
mov
pop
data16
adcl
int
add
aaa
sbb
je
push
sbb
cmp
cmpsb
push
dec
filds
hlt
andb
adc
xor
cwtl
xor
int3
in
mov
scas
mov
scas
imul
adc
sbb
push
pop
outsl
mov
int
or
insb
jl
xchg
mov
pushf
jmp
movsl
pop
ljmp
jno
enter
das
cli
ja
rcrb
dec
fwait
sub
sub
dec
fwait
dec
push
pop
fdivr
dec
dec
in
pop
jle
test
inc
cmp
ss
shl
pop
adc
popf
dec
pop
fistpll
fstpl
inc
dec
or
jle
xor
aam
fisttpl
xor
rol
lock
dec
lret
loope
jecxz
pop
aad
mov
stos
ret
jg
mov
mov
jl
sahf
lods
mov
jg
and
pop
or
cmp
enter
lcall
and
mov
mov
data16
mov
popf
adc
xchg
add
test
sbbl
mov
jbe
imul
roll
outsb
jp
out
in
movsb
rorb
sti
mov
in
or
scas
dec
dec
popa
cmc
shlb
arpl
adc
xor
jae
call
adc
inc
push
add
jbe
jecxz
test
or
mov
shll
scas
cmp
xlat
sub
inc
push
fsub
fwait
repnz
leave
and
xor
enter
test
jno
or
cli
jne
ss
dec
mov
add
loope
xor
push
or
jp
pop
jl
lods
fwait
js
lock
mov
inc
pop
notl
rcr
jbe
sti
sbb
pop
pop
xor
das
adc
sub
jmp
pop
in
test
add
rorl
fisubl
adc
fisttpll
sbb
mov
or
popa
mov
sub
mov
cmp
and
push
je
aad
sarb
sahf
fsubr
cld
sti
jl
dec
mov
jo
and
mov
hlt
out
pop
sbb
ljmp
notb
or
lods
mov
addr16
sub
mov
into
cs
xor
jmp
sub
and
dec
stc
add
shll
add
xchg
inc
insb
lods
imul
lret
aas
pop
ds
mov
les
dec
hlt
push
test
cld
mov
fadds
mov
sbb
sahf
cmpsb
mov
arpl
int3
push
mov
out
fcmove
sub
push
arpl
sub
stos
dec
xorl
cmp
je
inc
cli
out
xchg
inc
sar
jg
cmc
mov
int3
daa
fmulp
pop
loop
notb
push
push
daa
inc
js
mov
xchg
movb
sahf
ret
inc
into
cmp
mov
jmp
or
push
cmpb
test
jbe
outsl
sub
or
roll
lods
rol
out
sti
jecxz
and
sbb
pop
or
in
add
ror
pop
in
repz
mov
scas
adc
add
xchg
subb
jmp
jg
in
fiadds
and
push
mov
dec
in
cs
insl
pushf
jg
int3
rol
lret
aad
push
divb
ffree
aam
cmp
ret
outsb
rorb
int3
xchg
jo
in
and
xor
aam
testb
fsubrs
or
sti
xchg
sub
js
hlt
mov
mov
push
roll
iret
mov
cmpsl
int3
pop
mov
lret
test
mov
das
jo
jb
ret
mov
add
scas
sahf
mov
rclb
push
repnz
inc
and
pop
daa
inc
adc
inc
and
and
test
outsl
jns
xchg
sbb
sub
cmp
jmp
cmp
mulb
test
add
jne
std
xchg
decl
shlb
repz
mov
push
inc
out
mov
shll
jne
arpl
jns
idivl
lods
mov
add
lods
push
dec
mov
sbb
loop
mov
and
xor
cli
adc
inc
pop
mov
daa
in
inc
xchg
je
mov
cmp
js
repnz
cmp
jae
mov
jbe
mov
icebp
xchg
rclb
loop
mov
ss
sub
sbb
push
jbe
sahf
mov
or
and
out
inc
dec
out
aas
andl
je
push
sahf
dec
sub
sbb
and
pop
cli
iret
nop
push
and
mov
jae
inc
push
sbb
test
add
push
in
cmp
repnz
sarl
or
clc
and
in
mov
popf
pop
or
test
aam
push
inc
aas
stos
jmp
or
dec
mov
jge
fstl
push
pop
cmp
sub
lods
jg
mov
scas
xor
pop
lock
mov
add
inc
pop
sub
jb
sub
in
inc
js
cmpsl
or
lret
mov
repnz
mov
add
pop
imulb
nop
scas
int
js,pt
fcmovnb
cmp
dec
mov
in
push
sub
push
adc
fnsave
cli
fbstp
pop
adc
mov
mov
inc
add
mov
sub
jge
mov
fcoms
push
lods
idivb
xor
movsb
fs
aad
lock
jne
xchg
dec
inc
push
cmc
je
push
pop
call
out
ljmp
test
push
jno
and
or
in
inc
push
push
jno
popf
or
mov
push
cmp
shrl
and
in
push
lods
mov
jmp
fdivs
sub
mov
cli
pop
jns
sbb
ljmp
pop
cmp
push
cmpsb
scas
inc
fdivs
imull
dec
ss
ss
into
daa
fstl
mov
push
lea
pop
cmp
lret
hlt
ja
call
shll
rep
lret
je
jmp
into
inc
and
cmpsl
mov
gs
cld
inc
jbe
pop
mov
loope
sub
std
add
clc
lcall
je
pop
add
mov
cmp
outsl
loope
jo
cmp
int
mov
push
orb
adc
xchg
or
lds
inc
std
mov
aad
mov
push
push
add
movsb
lret
sub
inc
cld
cmp
fs
testl
in
hlt
popa
dec
adc
pop
cmp
scas
dec
in
repz
pop
pop
adc
cmp
fsubs
jle
fucomi
add
fdiv
roll
loopne
dec
adc
loope
lahf
push
sub
and
into
fstl
cltd
xchg
mov
repz
fsubr
mov
pop
mov
jne
push
pop
pop
stos
mov
roll
stc
cld
hlt
jg
in
cltd
push
orl
xor
loope
mov
and
fmull
jecxz
addr16
pop
decl
adc
add
les
jnp
fwait
ss
pop
or
stos
and
dec
fsubr
jl
cltd
adc
or
add
loop
hlt
inc
addl
push
push
aam
cmp
mov
push
aas
jecxz
jp
mov
pop
pop
adc
jae
sti
mov
test
loopne
xor
les
jns
and
inc
divl
add
das
ss
sbb
pop
jb
pop
jo
movsb
jecxz
sbb
jbe
fstps
shrl
pop
test
stos
jae
bound
scas
adc
pop
shll
popa
mov
lret
dec
mov
mov
loop
test
sub
xchg
mov
and
xchg
pop
xor
or
aad
push
mov
stos
inc
inc
add
nop
xor
sahf
push
mov
xor
addb
xchg
lahf
dec
out
in
pusha
stos
in
adc
dec
into
jns
cmp
data16
sahf
jg
adc
ja
lret
sbb
push
pop
xchg
pop
sub
fwait
xchg
pop
dec
pop
cmp
xor
cmp
cmp
fwait
push
inc
add
cmp
inc
insb
sbb
outsl
lret
movsb
mov
adc
icebp
jne
mov
mov
xchg
stos
inc
jbe
jne
in
test
jae
push
jo
xchg
std
out
mov
sbbb
add
mov
mov
jg
call
pop
ljmp
xchg
pop
or
cmp
pusha
jecxz
push
insb
jg
or
and
popl
mov
fisubrl
test
xchg
inc
hlt
out
int3
clc
xor
xchg
and
jb
cmpsl
in
rclb
xor
stc
push
mov
mov
push
fwait
cmpsl
jnp
mov
inc
stc
sbb
mov
xor
mov
mov
push
adc
mov
push
push
fdivr
stos
xchg
ss
pop
insb
inc
orl
mov
leave
int
aaa
inc
push
stc
out
leave
sub
and
pusha
fistps
test
test
push
fwait
push
jne
jne
fcomps
add
outsl
seta
xor
xchg
cltd
dec
in
mov
and
or
js
dec
test
shlb
int3
insl
scas
pop
mov
sbb
add
cmc
mov
sub
push
push
sub
dec
shll
pop
mov
or
cmpsl
pusha
enter
add
adc
cmp
dec
mov
mov
inc
test
aas
mov
jnp
push
and
outsb
push
test
pop
mov
andb
pop
xrelease
mov
js
cltd
inc
mov
sti
movsl
mov
cmp
daa
pusha
addl
sub
in
mov
adc
xor
fcmove
aas
loop
adc
push
or
or
xchg
xchg
icebp
ds
fs
add
sub
pushf
inc
inc
dec
loope
jns
ss
push
cmp
and
fs
arpl
add
dec
or
jne
sahf
and
je
jbe
jg
add
lcall
iret
in
les
cmp
pop
pop
push
out
or
add
mov
pop
scas
push
xchg
push
add
xchg
xor
insl
cwtl
mov
pop
xchg
push
test
loopne
jnp
xchg
mov
rclb
mov
push
popa
loop
mov
fistl
cli
push
push
and
mov
mov
inc
or
pop
dec
mov
xchg
dec
adc
mov
add
mov
addl
iret
arpl
lret
inc
mov
inc
pop
into
mov
stos
jbe
cmp
fs
adc
cmpsb
les
lahf
nop
loopne
test
xchg
mov
fidivl
xchg
pop
dec
inc
movsb
sti
es
jl
cld
push
stc
inc
or
xor
scas
cli
xlat
dec
add
xchg
xlat
testb
xor
scas
andb
or
sbb
jne
add
or
ret
dec
push
pop
data16
push
or
out
xor
cmp
push
sbb
pop
mov
out
jle
fbld
loopne
dec
cmp
mov
dec
shll
add
imul
in
dec
add
imulb
icebp
je
ja
daa
movsb
sub
cmp
les
xchg
inc
loope
mov
cmpsb
fdivrl
adc
mov
fisttpl
sbb
push
sub
outsb
int3
mov
cltd
sbb
mov
shl
push
pop
pop
sub
add
out
dec
stc
cwtl
rep
sub
pusha
clc
movsb
jns
jle
jb
fisubl
dec
inc
xchg
jne
stos
das
mov
jnp
sub
loope
pop
ja
add
dec
lahf
fwait
xor
push
jle
mov
enter
dec
pop
aas
pop
movsl
and
in
popf
and
ja
cltd
add
sahf
sbb
dec
stos
cmp
sub
and
iret
shl
inc
jnp
fiaddl
cli
cld
sub
fdivrl
mov
mov
fiadds
pusha
out
sbb
shl
dec
out
mov
xlat
cmp
or
xchg
dec
dec
mov
ret
loopne
cmp
repnz
mov
cmp
dec
out
push
adc
dec
pop
pop
dec
test
jg
sarl
push
arpl
jge
or
jae
adc
fwait
or
sbb
cmc
mov
sbb
repnz
es
dec
jmp
lds
push
cmp
mov
lret
inc
push
jp
scas
jb
and
mov
xor
subl
xchg
xchg
mov
arpl
add
mov
jnp
stos
xchg
xor
push
cmc
subb
pop
cltd
ficoms
fdivl
sub
sbb
push
push
ds
jbe
loope
or
mov
cmp
repz
and
sbb
scas
icebp
xor
pop
cmp
out
arpl
sbb
movsl
fnstcw
mov
pop
insb
sbb
mov
sbb
sbb
mov
repnz
imul
inc
jbe
in
int3
sbb
les
imul
inc
arpl
mov
xor
iret
aas
outsl
push
aad
fnsave
ret
cmp
adc
pop
cmp
popf
jg
fisttpl
repz
popa
cmpsl
sub
and
jo
mov
dec
daa
mov
bound
inc
gs
mov
sbb
fwait
add
xor
stc
arpl
mov
add
xchg
adc
imul
mov
int3
test
adc
cltd
adc
ss
mov
clc
jg
movsb
sub
loop
sbb
fnstsw
cmp
inc
fstps
pusha
jmp
lret
mov
jo
inc
push
shll
cli
loopne
cmp
mov
test
and
or
inc
and
add
sbb
std
adc
ss
repnz
jle
jecxz
mov
sub
mull
jmp
js
testl
mov
push
sbbb
repnz
ljmp
imul
out
loopne
dec
adc
dec
sub
sbb
add
dec
fists
test
imul
shrb
jns
stc
or
jb
stos
fldenv
scas
call
push
addr16
mov
xorb
das
cwtl
xor
popa
and
and
add
mov
mov
push
fwait
repz
mov
mov
mov
into
adc
jmp
push
mov
pop
insl
inc
cmp
and
push
dec
xchg
in
xor
sub
call
je
jo
inc
mov
roll
jg
mov
mov
rolb
adc
push
or
push
adc
push
push
dec
xchg
aas
js
jno
jns
xchg
arpl
inc
pusha
inc
popa
cmpsl
repz
pop
adc
rol
repnz
scas
push
in
fwait
or
mov
dec
mov
cli
imul
adc
clc
sbb
addl
adc
dec
into
and
xor
mov
dec
pop
mov
cwtl
pop
cmp
add
out
loopne
fwait
pop
adc
add
pusha
ljmp
mov
and
fdivr
cmpsl
adc
xor
inc
push
cmp
fsubl
sub
and
into
adc
shlb
dec
push
fsubrl
pop
or
push
movsb
in
sub
loopne
aad
adc
xlat
mov
in
arpl
cmp
imul
and
sahf
sbb
cmp
leave
std
or
data16
inc
lcall
xchg
xor
iret
sub
and
scas
out
inc
flds
inc
sbb
push
sbb
lahf
add
push
fwait
cltd
and
jb
cld
stos
jge
inc
movsl
incl
sbb
sbbb
out
popf
cmp
push
ss
sub
mov
outsl
adc
insl
test
hlt
mov
sbbb
xchg
pop
hlt
push
stos
mov
pop
hlt
test
lds
or
sbb
mov
aad
cmp
jl
sbb
sbbb
scas
movsb
inc
or
sti
or
ror
cli
or
jp
cld
pop
int3
pop
push
fistpl
aas
pop
ret
sbbb
add
sti
cmp
adc
sbb
sbb
sub
cmp
jl
push
lods
lret
xchg
gs
popa
mov
notb
cmpsl
mov
adc
outsl
jno
ret
push
adc
xor
adc
fucomp
adc
arpl
xchg
pop
outsb
cmpsl
sub
and
clc
mov
inc
pop
push
push
xchg
pop
mov
ljmp
inc
and
add
hlt
push
clc
or
dec
mov
or
mov
ficoms
xchg
adc
jmp
fstps
xor
inc
in
mov
jae
sub
pop
xchg
in
or
das
jp
add
movsl
in
rcrb
inc
in
inc
lock
pop
fwait
adc
push
cmp
test
movsl
icebp
add
mov
inc
or
jmp
mov
push
and
filds
adc
push
cs
repz
cmp
loop
jl
fiadds
mov
testb
std
sub
xor
adc
les
loopne
movsl
icebp
dec
aaa
daa
or
stc
int
dec
mov
xchg
sub
lods
mov
jns
xchg
aad
dec
or
adc
xchg
aaa
adc
movsb
shl
dec
lahf
sub
adc
pushf
es
mov
leave
and
and
insb
sub
stos
or
push
xor
imul
sahf
xchg
jbe
cs
push
or
or
imul
shl
push
jb
inc
push
or
movsb
lahf
daa
cmp
add
adcb
mov
mov
and
scas
inc
clc
stc
push
std
pop
fistpll
rorl
dec
add
push
les
fisttps
loop
ss
mov
inc
inc
jbe
sarl
enter
scas
stc
jns
and
and
int3
sub
leave
lahf
cmpsb
sbb
jle
das
insb
add
xor
jmp
mov
cmp
sbb
in
aam
es
sub
stos
out
push
or
add
add
dec
and
pushf
in
int
cmp
jne
outsl
push
popa
and
or
lds
aad
dec
sbb
lcall
sub
test
out
xchg
in
test
std
test
lods
into
fdivs
fsubrp
xor
xchg
cli
or
xor
into
data16
out
jno
adc
add
inc
push
test
xor
xlat
stos
xchg
or
cmpsb
cmp
movsb
mov
loopne
adc
repz
cvtpi2ps
fisttpll
sub
in
mov
push
add
push
daa
daa
lret
das
adc
cmp
push
sub
movsl
mov
inc
push
int3
outsl
pop
or
mov
pushf
cltd
jae
add
inc
call
xchg
es
xlat
imul
sub
xor
jl
jne
or
or
or
outsb
aad
push
loopne
cmp
and
jnp
xchg
mov
pop
jns
add
repnz
js
push
rcrb
cmp
xchg
addl
xor
xor
jne
inc
mov
sbb
jne
clc
int
mov
outsb
out
andb
mov
int
dec
in
or
pop
jp
dec
mov
mov
ret
mov
cmpsb
and
xchg
mov
pop
loop
cmp
pusha
out
daa
data16
cld
add
gs
sbb
sti
dec
mov
sbb
ljmp
xchg
pushf
add
loop
dec
adc
mov
hlt
xchg
pop
pop
and
sarl
movl
or
xor
push
mov
popa
ret
fists
cmp
pop
cld
or
shlb
hlt
jns
sub
out
aam
push
xchg
and
mov
dec
movsb
shrl
jmp
fimull
push
jg
sub
divl
daa
testl
push
sarl
test
inc
xchg
mov
sahf
xchg
hlt
out
loopne
int
loopne
lcall
jo
mov
aad
aad
int3
lea
jo
inc
cltd
mov
lock
cmpsb
cmp
das
cwtl
into
xor
add
out
cli
test
les
pop
jle
nop
dec
pop
mov
ret
sbb
aaa
into
dec
sub
mov
shr
adc
sub
add
push
pop
jo
lcall
xor
lds
sub
or
test
pop
out
lea
mov
idivl
xor
in
cmp
jecxz
pop
adc
cmp
mull
fs
lods
inc
push
jg
adc
mov
insl
mov
xchg
cmp
pushf
sub
pushf
stos
arpl
pop
mov
mov
push
xor
inc
inc
pop
gs
push
int3
dec
out
subb
jmp
stos
sbb
sub
data16
push
pop
mov
fneni(8087
jmp
sub
pop
test
xor
cmpsb
push
cmp
adc
aam
dec
dec
mov
out
bound
orb
push
cmp
popa
xor
das
pop
push
out
inc
sbb
je
insl
subb
adc
add
mov
lcall
test
jg
imul
dec
iret
xchg
add
dec
loope
and
stos
aaa
inc
movsl
cmp
je
push
out
ret
jle
mov
fidivs
cmp
adcl
mov
fucompp
xor
outsl
pop
adc
add
xchg
lret
nop
xchg
std
mov
jmp
or
ror
xor
insb
jle
mov
adc
sti
inc
jl
fistl
add
xor
push
jbe
push
js
hlt
mov
xor
insl
inc
stos
lea
add
mov
mov
or
lock
insl
sbb
lahf
jae
movsb
xchg
clc
push
in
out
sbb
fiadds
jne
sbb
imul
fsubrl
in
dec
mov
outsl
daa
call
jle
rcll
stc
inc
jb
ret
inc
call
sbbb
fiadds
lret
sub
test
mov
insl
adc
in
and
into
icebp
ds
jp
icebp
imulb
mov
mov
jno
pusha
aad
aam
xchg
cmpsb
mov
into
jmp
ja
jle
mov
gs
sbb
inc
mov
cld
mov
in
adcl
sti
aaa
iret
pop
jbe
cltd
jne
pop
cmp
mov
mov
orb
dec
lods
pop
or
pop
into
shrl
pop
hlt
js
popa
mov
push
lcall
lret
std
mov
adc
sub
clc
icebp
and
or
inc
lock
sub
jecxz
adc
mov
ja
pop
outsb
adc
in
lret
and
inc
leave
push
test
push
jg
xchg
mov
mov
push
sbb
cwtl
jle
dec
adc
jbe
popa
fnclex
mov
clc
xchg
fsubrs
pop
xor
in
sti
push
dec
fwait
xor
fadd
push
inc
push
sbbl
mov
sbbb
cmp
repz
ds
cmpsb
sbb
push
add
sarb
add
pop
fcomi
sbb
push
cmc
xchg
icebp
mov
sub
in
cwtl
cmp
leave
loope
int3
jns
mov
dec
push
cld
out
inc
jne
stos
cmpsb
gs
xchg
jnp
xor
movsl
fdivrs
out
lahf
rorb
in
call
mov
pop
in
push
into
cmpsb
jmp
aas
stc
pop
popa
pusha
outsb
hlt
xchg
test
jbe
xchg
xor
dec
cmp
test
lea
into
das
fadds
sbb
jmp
push
cltd
dec
insb
xchg
std
fs
xor
push
hlt
das
fcomps
xchg
mov
mov
jne
in
fldt
pop
sub
nop
sahf
mov
and
rcrl
dec
imul
out
pop
aam
and
in
insb
mov
std
push
adc
rcr
clc
push
test
cld
xor
dec
pop
rcl
popa
cmc
mov
pop
rol
adc
mov
pop
das
or
rcl
jecxz
ljmp
fcmovnb
int
add
add
xchg
or
cmp
mov
jns
cmp
std
scas
or
imul
mov
push
or
insb
push
push
sahf
mov
push
loop
mov
add
sti
jo
and
push
out
mov
mov
mov
xchg
mov
lea
fucompp
cmp
lahf
xchg
sub
jnp
xor
dec
popf
jbe
xor
iret
enter
jle
push
gs
push
push
push
or
sahf
cmp
jnp
mov
daa
mov
test
ja
les
jns
push
loopne,pn
or
xor
xchg
out
divl
and
jmp
adc
xchg
sbbl
lret
iret
adc
xor
cmp
fxch
pop
rclb
in
mov
pop
scas
push
sub
movsb
and
push
popf
jns
movd
inc
xlat
mov
sbb
into
and
sbb
aad
lret
cmp
dec
mov
bound
mov
loop
in
stos
das
mov
or
popa
sbbl
mov
fstpl
lea
xchg
pop
pop
adc
inc
jle
push
xlat
dec
push
in
xchg
jb
cmpsl
daa
cmp
fisubrl
pop
sahf
imul
mov
int
cwtl
pop
xor
ret
clc
mov
mov
ds
push
leave
cmp
les
aam
adc
out
cmp
xlat
jae
cs
inc
inc
andl
cmpsb
dec
sti
std
adc
popa
ljmp
dec
or
js
imul
dec
mov
test
jns
cld
push
mov
leave
mov
call
push
fcmove
enter
add
push
aad
mov
push
aas
mov
fsubr
dec
mov
jmp
push
xchg
xchg
mov
fistps
in
pop
ja
push
xor
cmp
sub
sub
sub
aam
pusha
rcrl
sbb
jmp
and
push
mov
gs
push
pop
jp
shll
aad
mull
out
dec
stos
cmp
fwait
fwait
clc
sti
or
add
leave
int
scas
loopne
push
mov
hlt
lahf
lcall
push
adc
cmp
ret
xor
sub
mov
outsl
sahf
push
push
sahf
cmc
sahf
mov
cmpsl
sub
push
inc
dec
mov
jge
popf
stc
into
mov
adc
sub
cmp
inc
pop
out
xchg
xor
dec
xchg
push
push
dec
into
fidivrl
lcall
dec
mov
fisttpll
mov
insl
lahf
sbbb
or
mov
clc
cmpsl
movsl
mov
es
lea
cmpsb
xchg
repnz
dec
cmp
mov
mov
shrl
aas
adc
dec
mov
addl
gs
out
mov
faddp
loop
out
mov
shrb
mov
nop
addr16
inc
out
test
pop
mov
fdivrl
cmp
inc
dec
fists
icebp
fiadds
jg
and
adc
lret
jnp
mov
movsl
movsl
test
sub
inc
mov
mov
or
xchg
xchg
iret
and
or
sbb
sarl
or
xchg
cld
popl
aas
arpl
stos
and
movlps
loope
push
jmp
dec
cmp
dec
bound
adc
popa
cmc
insl
jge
xchg
cmp
lods
imul
mov
pop
mov
ret
popf
and
mov
pop
or
lahf
adcb
adc
lcall
into
stc
mov
cmp
mov
jne
jg
xor
popf
std
xor
fwait
cli
jo
fidivs
pop
popf
push
dec
dec
and
xlat
insb
add
in
xor
sbb
add
cmp
insb
bound
leave
ja
mov
ds
cltd
scas
inc
lret
push
mov
js
adc
shl
cmpb
inc
movl
in
xor
ds
dec
add
icebp
call
or
popf
mov
mov
and
scas
sbb
mov
jecxz
jg
sbb
rolb
pop
mov
sub
mov
xor
xor
daa
in
xchg
imul
ljmp
ret
dec
cli
pop
mov
xor
sbb
decl
das
jp
lock
jae
pushf
das
iret
jmp
icebp
push
mov
sbb
loop
test
xchg
push
mov
or
shrb
push
sub
rcll
cwtl
test
cli
adc
inc
push
nop
xor
lods
mov
int3
push
mov
cli
icebp
sub
or
popf
adc
jge
scas
test
sub
pop
sub
scas
add
addr16
in
int3
repnz
out
pop
adc
ss
andl
loop
xor
nop
arpl
stos
push
inc
pop
fidivl
aas
xchg
les
popa
push
sar
pushf
pop
mov
test
ljmp
jb
cwtl
fwait
mov
fistl
loope
outsl
out
or
nopl
dec
test
inc
lock
xchg
mov
inc
mov
mov
lcall
mov
mov
rorb
lock
mov
xchg
pop
addr16
les
mov
pop
inc
rolb
pusha
mov
dec
mov
ret
mov
ret
das
mov
add
and
fucomip
mov
movsb
lods
push
into
test
int
dec
popa
insl
add
dec
xchg
jbe
dec
or
jmp
std
pop
xor
test
popf
jo
enter
mov
cmp
mov
imul
dec
fwait
sub
pop
lcall
push
push
inc
add
repz
xchg
fnstsw
data16
in
insb
pusha
xchg
stos
mov
or
in
daa
mov
lahf
jg
inc
mov
push
jmp
ret
jl
pusha
mov
mov
inc
movsb
gs
stos
ficompl
mov
mov
cmc
mov
rorl
or
mov
inc
lret
sbbb
xchg
mull
outsl
daa
decb
mov
ljmp
or
imul
pop
jl
mov
and
mov
or
rclb
negl
into
fdivp
or
and
xchg
push
xchg
pop
mov
das
fbstp
jno
iret
adcb
sub
les
adc
js
fidivs
lcall
fld
mov
mov
inc
movsb
pop
and
push
mov
adc
outsl
mov
push
lcallw
fimull
sub
pop
je
mov
in
shll
lods
adc
test
loope
mov
cltd
std
mov
subb
push
insb
inc
jl
lock
gs
stos
cmp
mov
out
or
jg
popa
mov
fidivl
jg
andl
pop
icebp
insb
test
int
lahf
mov
lods
ljmp
int3
loope,pt
arpl
push
jmp
cmp
dec
sbb
popf
orb
adc
jp
mov
mov
shrb
adc
adc
scas
push
rcl
je
mov
jb
cli
jo
jl
imul
es
inc
mov
shlb
xchg
adc
push
jge
pop
scas
and
xor
in
loope
popf
adc
xchg
jle
cs
fcompl
es
lret
out
lock
aas
mov
mov
xor
cmpsl
decl
rcl
ja
add
xlat
cs
pop
out
mov
mov
in
mov
dec
cltd
test
dec
inc
mov
jp
jecxz
pusha
xchg
js
les
pop
add
cmpsl
cld
stos
sub
lret
daa
mov
adc
push
pop
mov
shlb
mov
mov
pop
sbb
scas
popa
jp
xchg
icebp
lock
fstpt
jns
xchg
lcall
ret
push
xchg
mov
jnp
jge
jnp
xchg
or
mov
clc
orl
int3
pushl
call
jmp
push
mov
fucomi
add
xor
cmp
xchg
push
pop
jle
bound
cltd
push
or
xchg
or
inc
xchg
ds
out
lea
mov
jmp
or
add
cwtl
mov
pop
loop
mov
and
shll
dec
xchg
psrad
mov
sub
push
ja
push
or
mov
xchg
jg
add
ljmp
jbe
test
mov
mov
pop
popa
clc
mov
adc
lods
xchg
fcmovb
imul
sub
push
inc
out
mov
jge
push
pop
mov
mov
xchg
lret
push
mov
add
aam
push
xchg
test
cmp
lahf
xchg
cld
cmp
mov
andb
mov
jmp
sbb
lock
popf
cmp
and
sti
pop
notl
nop
push
push
add
sub
shll
or
shl
aas
lcall
pop
loope
pushf
adc
imul
xor
lret
cld
mov
arpl
mov
lods
aad
sub
dec
ds
xchg
popf
xor
mov
mov
jge
and
ja
mov
ret
out
std
xchg
sbb
sbb
dec
adc
or
xchg
cmp
sbb
mov
es
sbb
mov
int
cmp
cmc
fsubrl
sbb
ds
xchg
push
das
outsl
ud2
cmc
std
push
mov
pushf
and
xchg
mov
push
pushf
ljmp
jl
or
imul
jmp
clc
jmp
adcb
dec
mov
out
xlat
sbb
das
lods
adc
les
aas
mov
and
ret
jb
jbe
aam
add
jmp
cmp
dec
xor
sbb
mov
sahf
cmp
mov
stos
cmp
outsb
pop
xor
dec
dec
mov
lock
imul
es
sub
popl
xchg
call
test
push
xorl
lcall
repz
inc
adc
ret
insb
xor
pop
sub
adc
push
sbb
xchg
sbb
jl
jno
sub
or
repnz
andl
xchg
mov
rcrl
repnz
aas
pop
imul
pop
or
sbb
xor
in
shlb
das
mov
js
fs
inc
fistpl
leave
sti
shrb
or
sbb
in
das
push
mov
add
aaa
jo
orb
xor
dec
xchg
xchg
push
sahf
ljmp
lret
inc
dec
adc
mov
stos
add
in
ss
sub
jg
movsl
xor
mov
cmp
ret
sbb
mov
or
js
mov
mov
insb
call
insl
adc
ret
loope
cmp
out
add
pop
push
jl
add
data16
aas
push
in
mov
push
xchg
sahf
xchg
subl
lods
mov
cmpsl
ljmp
xadd
sub
cmp
cmp
push
rclb
andb
xor
push
pop
out
clc
mov
inc
ljmp
faddl
or
lds
jmp
shll
rcrb
or
mov
loopne
sub
or
inc
pop
lods
mov
pop
divps
mov
xor
push
xchg
push
cltd
pushf
clc
mov
scas
mov
ficomps
push
repnz
mov
adc
pop
jg
fildll
and
sbb
pop
mov
test
add
scas
mov
mov
daa
pusha
jg
movsb
scas
add
or
lea
adc
mov
inc
or
inc
stos
pop
movsl
fsubl
jb
scas
ficoms
loope
imul
jbe
mov
daa
idivb
jp
cmp
xchg
xor
jmp
in
xchg
outsl
fildll
leave
fs
lret
xor
inc
pop
dec
rcr
xor
sbb
mov
lcall
lcall
mov
mov
or
sqrtps
dec
loop
gs
inc
fwait
es
or
jmp
lret
shrl
data16
pop
mov
push
aam
adc
mov
lret
rcrl
ffree
jl
mov
mov
jb
test
and
repnz
imulb
mov
pop
mov
fildll
xlat
xor
jnp
mov
pop
cmpsb
mov
push
pop
sti
rorb
xchg
or
iret
ss
sub
mov
outsl
push
cwtl
add
cmpsl
fnstcw
push
jecxz
stos
push
and
je
pop
push
sbb
lds
cmc
xchg
add
roll
push
lds
out
daa
inc
test
pop
add
mov
fsubs
mov
test
aas
mov
jns
shrb
out
ficoml
adc
fildl
adc
ja
xchg
sahf
jbe
cmpb
lcall
bound
xchg
xchg
inc
icebp
loop
stc
sub
add
out
fs
push
xchg
inc
dec
pop
jae
pop
movsl
or
sub
cmpsl
mov
aam
and
push
rorl
xchg
jp
xchg
jp
xchg
stos
sbb
call
push
fldt
sar
jb
inc
jb
aad
gs
xor
aas
pop
out
out
sbb
in
add
lcall
nop
cmpsl
lock
cmpsb
xchg
adc
pop
stos
add
add
add
mov
pop
clc
xchg
fidivl
mov
dec
adc
rcrl
les
fs
call
mov
shrb
inc
cli
scas
mov
or
sti
pop
adc
int3
jno
and
lods
pop
adc
xor
cmp
rcll
jmp
stos
sbb
xor
pop
and
or
jae
aaa
pop
addl
stos
cmpsb
and
scas
push
jp
imull
pop
lret
bound
jmp
dec
jg
imul
jl
bound
mov
add
or
mov
js
sub
mov
clc
call
rolb
sub
cmc
mov
shlb
lcall
in
inc
arpl
push
xchg
dec
daa
xchg
add
aam
outsb
shr
or
or
addr16
rcrl
outsl
cli
or
insb
push
push
and
xchg
push
test
retw
dec
xchg
mov
jnp
cmp
cmp
lahf
cmp
adc
les
aad
fisttpl
dec
stos
and
cmp
pop
sub
add
punpcklwd
or
push
scas
mov
mov
pop
push
pop
jnp
or
and
ss
jns
jne
push
test
and
or
xor
shrb
inc
mov
add
mov
inc
pop
xor
push
aam
cmpsl
aas
jecxz
insb
or
or
aas
xchg
sub
loop
out
dec
inc
pop
xchg
and
dec
push
or
inc
jge
xchg
lock
lahf
pop
push
fldenv
hlt
and
push
out
fnstsw
xor
mov
dec
jmp
rcrl
in
jg
mov
mov
test
fsubs
add
fwait
stos
jns
pop
scas
push
in
inc
adc
add
push
enter
fidivs
stc
notb
xor
add
divl
dec
cmp
lods
inc
cld
fiaddl
out
sbb
jge
adcl
lea
das
xor
shlb
xor
adc
aas
push
cmc
popa
or
stos
dec
mov
in
das
xchg
mov
leave
mov
leave
sbb
or
sub
out
mov
sbb
cmp
or
out
push
clc
outsb
and
fbstp
and
jo
cmp
and
aas
aam
mov
inc
push
mov
vdivsd
adc
push
cmp
fwait
ret
xchg
cmp
dec
scas
xor
and
xor
lods
lds
push
xor
jge
xchg
pop
push
int
sbb
mov
jmp
jb
out
dec
cmp
dec
jl
or
insb
setp
lret
mov
gs
aaa
fisubrs
arpl
mov
dec
insl
lds
imul
or
mov
mov
dec
cwtl
leave
inc
sub
movsb
js
sub
push
fwait
dec
inc
adc
push
jmp
mov
sahf
loop
xchg
jp
mov
jb
add
push
pusha
pushf
rcrl
lock
mov
mov
repz
js
mov
xor
and
push
loope
into
cmp
mov
pop
int
cwtl
inc
mov
lahf
imul
jecxz
test
insl
mov
cmp
and
in
clc
pusha
sarb
cli
mov
cltd
das
imul
dec
cmp
lods
mov
lcall
jbe
cmc
aam
sub
mov
pusha
inc
insb
js
insb
dec
mov
mul
xrelease
push
adc
inc
or
inc
sbb
jmp
xor
push
and
cwtl
xor
ss
das
sbb
mov
ljmp
or
aas
add
fcomip
adc
loope,pn
mov
mov
xchg
pop
insb
cltd
xlat
das
cmp
fbld
ret
sub
sbb
xchg
adc
iret
jbe
mov
mov
lods
jo
bound
pop
test
and
sub
pop
aam
jns
jbe
cmp
test
xchg
pop
repz
sbb
and
add
push
dec
stc
xchg
aad
add
mov
push
push
sahf
xor
loop
mov
mov
into
gs
insl
xor
jne
fs
adc
mov
pushf
mov
test
pop
xchg
add
rcrb
pop
test
push
add
mov
jo
xlat
ret
hlt
clc
push
fdivrl
pop
and
jge
or
out
sbbl
dec
dec
fs
cmp
fldpi
mov
shrb
or
cmc
pop
in
or
cmpb
stc
shlb
xchg
insb
fisttps
inc
push
dec
mov
test
jle
sbb
xchg
movsb
mov
icebp
mov
repz
or
std
cwtl
xchg
out
int
inc
pop
mov
movsl
test
lret
pop
imul
popa
sub
loope
jnp
cli
xchg
inc
fwait
test
dec
cmpsb
sub
add
sbb
cmp
cmpb
jne
mov
mov
sti
adc
pushf
sbb
fcompl
popf
xor
inc
sub
and
push
cmc
dec
mov
pop
out
stc
je
mov
mov
inc
dec
aaa
pop
dec
mov
shll
jl
in
lods
std
js
loop
jae
jnp
bound
test
pop
mov
sub
lea
cmp
jg
and
jge
test
mov
xchg
pop
popa
mov
adc
jmp
jns
arpl
push
fwait
push
mov
pop
add
outsb
fildll
add
adc
inc
addr16
out
pop
popf
and
inc
clc
cmpsl
cmp
push
scas
loopne
or
sahf
pop
xor
push
subb
les
lds
inc
dec
adcl
pushl
iret
bound
das
pop
mov
dec
test
inc
add
pop
xorl
insl
push
adc
jo
repnz
mov
mov
adc
lahf
push
js
xchg
shll
ret
adc
inc
fsubl
andl
sbb
xchg
inc
mov
or
js
xchg
pop
icebp
jge
andl
dec
sub
sub
push
pop
jge
cwtl
jae
pop
cmc
xchg
sbb
pushf
scas
lahf
repnz
add
mov
xchg
sti
jae
and
shr
ud2
stos
pop
shl
mov
cmp
push
xor
pop
gs
xor
xor
shlb
xchg
mov
or
xchg
out
test
mov
daa
enter
or
sub
cmp
cmp
aas
add
xor
subl
sti
mov
cmp
jne
xor
and
sub
scas
xchg
lods
fistpll
pop
push
fdivrp
push
and
lods
xchg
lds
rcrl
out
cmp
and
pop
les
subb
addr16
es
xlat
xor
pop
arpl
pop
mov
lods
cltd
test
inc
fwait
idivb
jno
mov
add
push
dec
shr
inc
insb
imul
xchg
mov
mov
iret
cmp
jge
std
outsl
ss
ja
aam
loop
mov
enter
dec
aaa
or
inc
icebp
jl
mov
jle
clc
inc
addr16
sti
iret
loope
jno
mov
push
xchg
push
inc
mov
lret
icebp
je
dec
xor
outsb
or
jl
das
sti
sbb
push
sti
pop
xor
sbbb
mov
rorl
dec
cmp
cs
and
in
stos
mov
mov
hlt
mov
decl
pushf
outsb
cld
nop
dec
call
call
call
sbb
arpl
xchg
lods
stos
repz
dec
mov
add
add
and
sbb
cmp
ret
ficoms
sbb
movsl
icebp
jns
jmp
dec
scas
fnstsw
aaa
into
mov
xchg
xchg
mov
pop
adc
xchg
sub
or
pop
sub
xchg
adc
or
adc
fwait
jmp
ljmp
mov
add
jne
scas
or
outsl
inc
mov
xor
in
outsb
inc
lret
push
in
push
push
lcall
mov
mov
jno
push
popa
inc
mov
addb
xor
ljmp
fisttpl
ja
cmp
xor
jne
in
js
and
adc
mov
dec
jne
and
cmpsb
and
jge
and
lahf
pop
cmpsb
inc
pop
mov
ror
daa
push
or
cltd
stos
fdivrl
jne
in
ucomiss
add
xchg
out
inc
inc
push
test
mov
mov
gs
aam
out
add
push
and
lret
shrb
jno
in
pop
shlb
sbbb
mov
jo
int
mov
xlat
and
bt
pop
add
cmpb
sub
mulb
mov
sbb
sub
mov
cmp
jae
in
pop
repnz
mov
and
inc
cmpsl
jb
stc
insl
mov
lock
mov
jp
cmpsb
repz
pushf
jp
stos
mov
movsl
xor
jbe
shlb
lret
scas
or
adc
add
sti
inc
jo
cld
sbb
push
lret
in
jbe
xchg
sbb
xchg
jge
insb
popf
or
dec
pop
outsb
jnp
or
jns
jg
pop
mov
orl
or
mov
aas
cltd
or
push
lahf
test
or
mov
jnp
lahf
pop
add
xchg
fiaddl
push
movsl
and
and
mov
mov
cmpsl
imul
sbb
icebp
or
movsl
sti
jb
sbb
mov
push
mov
jno
xchg
inc
fs
aas
insb
icebp
jg
pop
sbb
jmp
push
pop
ret
fwait
xchg
shlb
jmp
insl
adc
sbb
inc
jbe
pop
fs
jg
loop
add
aaa
fsubrl
mov
or
loope
shlb
pusha
arpl
in
or
sbbb
mov
lcall
idivl
jae
cltd
mov
xorl
movsl
jae
stc
andl
adc
int3
lea
popf
stos
mov
das
lods
mov
xchg
jl
jno
add
xchg
mov
sub
sub
lock
pop
mov
imul
push
dec
and
push
or
pop
mov
pop
pop
push
in
les
stos
and
mov
popa
and
fidivl
ficoml
ja
or
xor
lahf
out
in
xorl
xor
push
mov
lea
push
out
into
test
xor
pop
fwait
xlat
adc
push
xchg
aaa
sub
sub
cmpsb
rorb
movsl
std
test
lret
push
pop
sub
xor
je
push
orl
ljmp
stos
push
xor
and
popa
or
dec
int3
mov
xchg
pop
js
sub
jb
js
loopne
dec
cwtl
mov
cltd
mov
push
jge
add
push
jp
mov
lds
pop
sub
ret
add
lods
outsl
or
subb
push
nop
mov
dec
mulb
addr16
dec
and
push
psrlq
bound
xchg
dec
in
rcr
call
les
xchg
out
mov
es
int
mov
xor
clc
adc
push
pushf
push
push
cmp
es
loopne
sbb
lods
mov
dec
xor
shr
loope
jl
or
adc
sub
fwait
gs
inc
add
push
fcoms
sub
inc
adc
cmp
call
mov
sub
inc
bound
push
jl
notl
mov
push
out
xor
sti
sbb
adc
ss
xor
push
imul
aam
sub
inc
call
xor
push
cltd
icebp
jns
lret
cmpsl
cs
and
mov
outsl
popa
loope
daa
sarl
pop
mov
int3
call
adcl
xor
bound
jle
cmp
cld
jg
jmp
in
jle
sahf
cmpsl
pop
daa
addb
pop
movl
lahf
rcll
mov
cltd
jp
call
rcrl
pop
and
divb
xor
mov
sbb
jo
xchg
jae
cmp
adc
aas
jmp
sub
int3
andb
pop
cwtl
ljmp
cmp
and
dec
inc
pop
adc
fdivs
popf
xor
xchg
ja
adcb
cmc
cltd
test
js
fmul
cs
adc
dec
in
bound
mov
fimull
add
pop
cmp
call
and
mov
notl
mov
sbb
inc
in
sub
push
mov
fmulp
ja
mov
cmp
sbb
divl
cmp
je
out
and
rorl
xchg
fmuls
ja
xchg
xchg
rep
outsb
andl
inc
clc
into
sub
inc
scas
test
hlt
popl
test
enter
neg
lret
jmp
cs
jmp
mov
push
xchg
cmp
cmc
mov
lret
push
outsl
inc
xchg
icebp
mov
pusha
sub
lea
aad
adc
call
mov
test
lods
loope
mov
lods
and
adc
ljmp
push
cmp
je
mov
sub
jmp
or
movsb
push
or
and
cmp
xor
fidivl
lcall
out
adc
dec
jmp
add
stos
mov
jl
out
xchg
xchg
test
xchg
push
mov
pushf
cli
sbb
stc
and
mov
add
jo
mov
mov
sbb
pop
push
cmpsb
cmp
pop
test
in
mov
ficoml
mov
sarl
fiaddl
es
cmp
push
jae
pop
and
inc
aam
ljmp
mov
stc
arpl
outsb
test
bound
add
jnp
add
xchg
jle
pusha
xchg
pop
pop
fs
test
fstl
lods
shr
addl
pop
xchg
push
xchg
es
sahf
jg
imul
shl
shrb
and
das
lds
fisttps
push
cmp
jg
xchg
push
jle
pop
lock
fstpl
cs
cli
or
or
sbb
xchg
dec
mov
ds
in
ljmp
clc
xchg
cli
lcall
add
fmuls
cli
stc
in
pop
jb
pop
lea
push
or
rcrl
inc
stc
outsl
push
pop
mov
test
gs
xchg
push
rorl
or
insl
sub
mov
int
scas
fldl2t
pop
jnp
stos
xlat
cmp
xchg
or
stc
pushf
outsb
loope
xchg
movsl
sbb
movsb
sbbb
push
jecxz
dec
or
pop
mov
pop
xlat
mov
sub
pop
adc
setnp
cwtl
jle
ret
scas
xchg
cmp
mov
mov
push
add
sarl
cmpsl
pop
lcall
mov
lock
mov
ja
push
insw
hlt
inc
add
jne
xor
cs
push
cmp
dec
mov
push
inc
enter
sub
or
dec
fldl
test
jae
pop
inc
fisubl
jnp
cmp
js
mov
inc
xchg
fistpll
rcrl
fists
ja
mov
aas
popf
xorb
int
stos
push
adc
mov
out
lea
and
rcl
jl
divl
pop
cmp
cmpsb
lea
les
test
movsl
mov
roll
push
jbe
jo
add
out
push
sti
pushf
xchg
mov
mov
gs
jbe
mov
add
decb
je
xor
popa
lea
jo
test
shll
inc
popf
sub
cmp
call
in
sbb
scas
fimull
xor
test
sub
push
scas
mov
push
xor
in
daa
mov
loopne
ja
daa
sbb
dec
aaa
mov
ds
mov
nop
int
xchg
xchg
and
mov
xor
sbb
in
add
js
sahf
pop
into
and
lods
ret
cmp
dec
dec
xor
call
or
mov
sub
xchg
ljmp
inc
popa
pop
pop
rcrl
lret
int3
sub
mov
xor
mov
xchg
stos
gs
inc
int3
lcall
cwtl
mov
xchg
clc
ss
inc
jl
adc
mov
aad
adc
adc
in
mov
push
and
lret
push
or
push
cmpsb
sbb
in
aad
lret
jb
mov
pop
rol
bnd
popa
nop
xlat
pop
mov
test
xor
into
lret
fldenv
test
mov
push
push
mov
sbb
jmp
pushf
xor
dec
negl
test
mov
push
fcompl
sub
inc
fmull
test
xchg
xor
inc
daa
mov
cmpsl
mov
imul
jmp
test
ret
sbb
dec
fnstsw
and
mov
dec
arpl
popf
xor
stc
icebp
aad
nop
das
lea
jle
lock
sbb
lds
inc
push
test
ljmp
rcrl
fdivs
es
xchg
mov
mov
and
cmp
and
pop
in
aaa
pop
xor
rcrl
sub
add
push
test
lock
fcomp
xchg
addr16
dec
dec
or
xlat
and
lar
ror
push
stos
mov
xchg
jne
mov
daa
into
pop
mov
andl
dec
sub
ds
fwait
int3
jg
cmc
neg
es
pop
out
fs
scas
in
pop
lods
sbb
pop
bound
mov
or
addr16
sub
cmp
and
mov
pop
xchg
test
in
in
arpl
sub
mov
or
and
fs
cli
pusha
push
push
and
js
xor
inc
mov
dec
and
sbb
inc
arpl
sbb
add
popa
ret
cmc
loop
int3
inc
cmp
filds
dec
aam
out
mov
sub
jae
idivl
subl
mov
ja
call
add
add
sti
sarb
inc
sub
dec
add
mov
cmp
mov
cs
mov
push
jo
in
and
out
cld
and
fisttpll
jbe
mov
and
mov
loop
inc
std
adc
or
out
adc
mov
out
add
in
or
sbb
pop
pop
push
adc
dec
pop
sub
fldt
jecxz
ljmp
push
out
mov
ret
jl
rep
out
inc
gs
mov
pop
sub
mov
das
add
ja
adc
pop
xchg
gs
fwait
jb
fsubs
inc
push
cltd
push
or
jne
lret
pop
xchg
pop
push
xchg
jne
push
in
inc
adc
fldl2t
push
cmp
jns
push
mov
pop
mov
inc
fidivl
mov
and
adc
aam
in
add
inc
xor
add
addr16
sbb
dec
insb
mov
fsubrl
test
jnp
lock
sbb
push
lds
aaa
cli
add
shlb
cld
or
jmp
fists
cmp
sahf
repnz
test
mov
into
xchg
mov
loope
mov
test
sub
jne
cmc
imul
sub
and
push
pop
das
stos
faddp
jne
sbb
add
dec
sub
scas
sbb
dec
push
lds
push
jge
xor
sub
imul
cltd
pop
decb
clc
and
mov
and
clc
push
int3
jns
js
pop
lods
adc
sbb
pop
push
stos
push
dec
test
push
dec
cmc
dec
call
cmp
jnp
push
scas
push
insl
int
or
aaa
stos
inc
mov
xchg
add
bnd
adc
xor
es
add
xor
int3
dec
fistl
or
inc
fcoms
fmull
pop
pop
sahf
repnz
sbb
cmpsb
mov
jbe
jg
cld
adcb
ds
xchg
mov
add
jmp
dec
jle
or
mov
xacquire
mov
mov
loopne
and
xor
pusha
icebp
mov
fldt
int3
imul
loopne
gs
xlat
xor
jp
sub
and
sub
addr16
mov
adc
hlt
clc
jno
ret
cmc
or
test
mov
out
cld
mov
inc
mov
lods
add
and
out
or
add
shrl
inc
ret
dec
add
orl
and
sbbb
add
dec
pop
sarl
xor
jno
cltd
xor
xchg
fldcw
cmpsb
ljmp
xchg
dec
mov
stos
in
pop
push
mov
pushf
andb
out
dec
cmc
out
xor
push
dec
and
push
push
jp
dec
out
fsubl
bound
and
repnz
aas
aas
mov
cmp
or
popl
mov
loope
push
mov
xchg
push
fldcw
incb
outsl
jnp
push
push
push
xor
orl
push
imul
sti
test
jo
andb
es
cmp
lods
xchg
popa
or
fldenv
xor
leave
rcl
lcall
mov
in
push
xor
ljmp
dec
iret
xchg
jmp
mov
aam
imul
loop
and
sbb
xor
xchg
mov
xor
or
popf
and
bound
mov
cmp
pop
pop
cmc
mov
cltd
adc
inc
shll
outsl
mov
test
mov
inc
mov
cmp
mov
aas
popf
das
sub
es
sub
mov
mov
ret
mov
test
pop
rep
movsl
pop
cwtl
sub
dec
pop
lret
pop
mov
cmc
sub
cmp
xor
out
cld
xor
mov
push
xchg
xchg
add
rorl
in
addr16
mov
push
in
or
pop
adc
sbb
xor
lods
cmpb
std
inc
in
int3
pop
push
leave
push
in
sbb
jae
mov
fdivrl
mov
scas
out
inc
ret
inc
insb
leave
jbe
ds
or
inc
or
data16
push
push
mov
pop
and
jae
cmp
and
xlat
push
mov
in
inc
fisubs
jnp
daa
jns
int
in
push
std
cwtl
icebp
pop
mov
test
add
shrl
ret
data16
in
shll
mov
jp
adc
xorb
ljmp
outsb
mov
aam
sbb
sbb
dec
sub
out
bound
add
or
leave
loope
insb
pop
ljmp
call
fsubr
jg
adcb
test
push
mov
sahf
nop
psubw
outsl
je
loope
rcll
cmp
xchg
lods
adcb
adc
mov
push
fdivl
shrb
pop
sbb
and
cli
shrl
mov
std
into
pop
pop
or
imul
add
sbb
add
cmp
gs
or
sub
call
cmp
sbb
sti
dec
fisttps
lea
adcb
stc
push
call
fcom
xchg
dec
cmpb
push
div
test
dec
dec
lahf
lea
sti
mov
or
mov
inc
arpl
adc
arpl
aam
lock
ja
lret
pop
xchg
jmp
mov
in
pop
aas
in
rolb
inc
leave
mov
iret
daa
addr16
hlt
xchg
adc
sub
movsl
cmp
xchg
stc
rcl
mov
imul
push
test
lods
lret
ret
fisttpl
mov
xchg
xchg
mov
jno
jb
dec
mov
repnz
stos
pop
cmpsl
rcl
jg
clc
jge
or
xchg
rcll
xchg
inc
neg
jo
jg
out
test
pop
scas
adc
xchg
icebp
rcrl
push
add
cmpsl
add
sbb
or
dec
lahf
sub
inc
pop
out
stos
ja
jne
mov
leave
sbbb
lsl
pusha
cmp
push
sub
mov
pop
mov
aaa
cmp
jg
movsb
cmp
adcl
push
aad
fnsave
in
adc
loopne
lds
sti
xchg
fwait
or
pop
in
push
out
xchg
rorb
mov
imul
add
add
negb
fsubs
and
dec
popf
lods
xchg
xor
mov
cmpsl
loope
in
jmp
xchg
cli
mov
mov
shr
pusha
sarl
and
out
sub
lcall
jp
aaa
sub
cmpsl
ds
int
mov
fidivrl
pop
add
shll
test
sub
lahf
mov
cltd
mov
push
sub
push
fsubrs
xor
sti
push
popf
dec
out
jne
jp
lods
test
fiadds
mov
int3
mov
push
icebp
inc
and
enter
xor
mov
sub
add
lods
rep
mov
mov
aad
lds
jbe
mov
push
lea
rolb
pushf
lret
loop
adc
aam
and
ljmp
xor
dec
mov
jmp
jge
and
mov
add
fucomp
cmp
adc
js
mov
mov
pusha
aad
xchg
cwtl
inc
arpl
ljmp
sub
pop
test
adc
fmuls
sbb
outsb
xor
jle
pop
enter
decl
pop
fsubrp
cmp
notb
xchg
xchg
movsl
jge
negl
stos
daa
hlt
adc
mov
jns
ljmp
and
inc
xchg
scas
imul
dec
adc
decb
pop
xor
sub
xchg
mov
shl
aad
test
enter
lahf
jle
jl
mov
lds
mov
xchg
jecxz
enter
push
daa
push
or
jmp
bound
sub
jne
fiaddl
pop
xor
mov
daa
or
mov
stc
testb
dec
pop
repnz
outsl
push
or
pop
popa
ja
stc
testb
lahf
adc
mov
or
cmpsb
cmp
nop
jl
pop
scas
mov
dec
daa
mov
ja
enter
jmp
inc
sub
adcb
loop
out
rcr
lds
xor
scas
cld
dec
jge
jl
into
jne
pop
and
xchg
cs
add
mov
or
je
cmpsl
shll
mov
mov
add
es
bound
scas
out
jnp
mov
xchg
xchg
sub
mov
mov
mov
int3
int
sahf
clc
addr16
push
mov
xor
ja
mov
adc
jle
cmp
cmp
pop
lcall
mov
loopne
clc
pusha
cmp
ret
cmpsl
cmp
cmp
int3
notb
dec
pop
xor
inc
shrb
gs
mov
aam
mov
sub
lcall
push
lods
inc
mov
mov
fsub
sbbl
loopne
frstor
ds
cmp
daa
stc
xor
cmp
pop
es
jmp
mov
lcall
std
sub
pop
push
pop
imul
add
subb
adc
mov
inc
cmc
or
xchg
cmp
jle
cmp
add
fisttpll
jb
mov
movsb
inc
out
ds
shrl
punpckhwd
mov
xchg
mov
addr16
jg
sbb
stos
into
xchg
mov
mov
cmp
scas
mov
xor
sub
adc
fnstenv
dec
cmp
push
pop
add
mov
loopne
les
mov
and
pop
or
mov
jge
jecxz
aas
sahf
decb
adc
jo
jecxz
out
fsubl
cmp
push
xlat
fdivs
adc
hlt
jp
push
mov
sub
ja
sub
jge
das
mov
clc
pop
push
ss
lods
xchg
mov
loope
push
xor
mov
stos
or
and
fxch
cltd
xor
in
dec
push
cwtl
sub
pop
and
ret
mov
adc
dec
mov
test
xchg
into
repz
scas
sub
sub
mov
dec
shlb
add
dec
stos
mov
inc
loopne
mov
in
dec
xor
fldenv
cmp
lock
dec
ds
xlat
sub
int3
adc
push
jge
test
ret
lods
mov
mov
into
gs
sbb
jb
and
and
and
in
out
and
jmp
fdivl
stos
inc
dec
lcall
pop
rcrl
cmc
mov
fmull
subl
fnstcw
sub
pop
pop
pusha
shll
sbb
or
or
in
push
add
xchg
adc
sahf
into
sub
push
pop
insl
pop
ss
push
lahf
rclb
xor
sub
jl
rep
int3
ljmp
jb
rol
push
aas
xor
ss
fwait
aam
int3
inc
dec
iret
lcall
sub
in
jb
nop
das
in
jnp
push
nop
fwait
xchg
andl
cs
jmp
inc
shl
pop
imul
aam
mov
rcrl
inc
insb
jnp
sahf
int
mov
scas
lea
jb
pop
sub
jl
stos
stc
or
in
xchg
int
cmpsb
pushf
adc
inc
pop
mov
cmp
pushf
hlt
lock
imul
pop
das
xchg
mov
sti
pop
imul
mov
pushl
lret
in
scas
sbb
pop
lods
xlat
pop
jb
pop
je
mov
mov
mov
out
dec
mov
sbb
push
add
js
pop
mov
dec
fdivrs
aam
push
test
popa
notb
mov
dec
dec
pusha
cmc
push
mov
aaa
xchg
lret
push
lahf
mov
pop
test
filds
add
pushf
xor
sub
inc
das
sbb
add
bound
and
dec
cmp
and
adc
lahf
jne
leave
mov
mov
ret
cli
cmc
add
cmp
push
jbe
aaa
test
scas
repnz
adc
pop
ret
pop
sub
stos
mov
dec
adc
js
jle
mov
push
test
je
cmp
cld
lods
xchg
fistps
jmp
movsl
inc
mov
mov
mov
jge
and
xchg
imul
add
imul
repnz
adc
mov
sbb
pop
outsb
jne
test
pushf
sub
inc
out
clc
sahf
bound
sbb
arpl
popa
mov
jmp
pusha
add
jp
sub
scas
mov
jb
nop
jae
in
int
jecxz
xchg
sub
and
mov
and
lods
push
inc
push
inc
out
push
push
and
mov
rol
in
xchg
shrl
pop
mov
push
xchg
das
add
out
adc
mov
int3
fldt
shlb
and
cmp
fbstp
or
cld
lret
pushf
and
repz
pop
adc
arpl
jecxz
adc
inc
lret
jg
sbb
mov
pop
add
pop
fbstp
push
cmp
cld
adc
cmp
xchg
mov
iret
sbb
mov
gs
and
iret
and
addr16
call
out
test
orb
imull
cmp
adc
xor
hlt
inc
lcall
nop
dec
les
ret
nop
test
icebp
out
and
aas
cs
inc
int
es
lcall
js
leave
jnp
sub
mov
fldpi
sub
xlat
icebp
int3
dec
xor
bound
cmp
pop
jns
aas
mov
adc
je
fmull
push
cwtl
call
mov
mov
inc
enter
test
inc
leave
jae
call
xchg
push
jb
cmp
fists
cltd
hlt
rclb
je
loope
inc
jo
pop
imul
xchg
xchg
mov
push
add
js
push
imul
dec
out
mov
push
jae
fcmovnb
daa
xchg
sarb
or
movsl
cmp
into
or
xchg
scas
in
inc
xor
jne
jge
xor
jp
jae
loope
into
adc
cld
fwait
adc
lret
xor
xchg
out
pop
ja
inc
mov
fcmove
mov
inc
inc
into
mov
test
popa
push
lret
lret
push
inc
mov
cmp
ss
ficoml
push
fildll
cltd
jle
cmpsl
jbe
pop
icebp
xlat
adc
xchg
js
outsl
je
sbb
ret
xchg
jns
mov
cmp
and
and
jae
cmp
cwtl
cmp
out
mov
mov
icebp
sub
xor
in
movsb
imul
ret
xlat
cmp
push
lcall
push
xor
mov
bound
xlat
mov
mov
cmp
mull
lds
pop
incb
mov
das
and
aaa
lods
pusha
call
dec
popa
das
rorb
mov
push
loop
out
mov
imul
dec
mov
movsb
adcb
xchg
mov
icebp
mov
pushf
cmp
and
jo
loope
hlt
out
push
data16
xchg
xchg
stos
imul
je
cmpb
loop
mov
dec
shrb
xchg
in
add
xchg
stos
dec
cmp
lods
je
pushf
out
dec
mov
ljmp
jle
add
adc
cltd
and
cmpsl
add
mov
add
xor
xor
std
movsb
inc
or
nop
mov
mov
or
js
mov
push
jmp
jp
jecxz
das
ficoml
inc
adc
inc
or
mov
aam
pop
mov
push
inc
push
or
rclb
leave
adc
jne
sbb
or
push
inc
test
rcr
addr16
push
iret
mov
xchg
sub
dec
dec
sbb
sti
aad
and
jne
les
pop
movsl
xor
ss
mov
mov
int
inc
stos
test
and
xor
jle
cs
pusha
mov
jg
inc
sub
outsb
aas
jmp
testb
insl
aas
inc
jo
cwtl
pushf
insl
add
cmp
mov
or
dec
cmp
aad
ss
mov
daa
jecxz
in
jle
shll
and
jmp
sub
adc
daa
js
xor
cmp
or
mov
inc
push
test
cwtl
popf
sub
jne
imul
fisttpll
inc
in
cli
mov
jbe
or
sbb
cmpsl
jecxz
in
arpl
cmp
je
mov
cwtl
pop
test
xor
pop
mull
cmc
and
mov
push
and
pushf
dec
pop
jmp
add
push
mov
push
das
rsqrtps
and
add
mov
repnz
xor
sarb
xor
pusha
lcall
or
es
mov
or
dec
mov
aas
jecxz
adc
pop
cs
mov
insl
add
or
jae
pop
in
adcl
pop
and
call
jne
jae
test
xlat
xor
jge
loope
cmp
mov
pusha
icebp
xor
sub
cmc
in
cmp
push
lock
loopne
das
stc
jl
dec
out
mov
lahf
push
mov
outsl
out
push
push
cmp
sbb
or
xor
into
pop
in
push
fcompl
imul
into
data16
add
jp
sarb
cmpsb
add
pop
jo
add
dec
xchg
push
insl
mov
cmp
xchg
jle
xor
xchg
les
pop
inc
xor
test
dec
pop
dec
sbb
mov
cmpsb
jge
pop
popa
pop
scas
aam
pop
mov
insb
outsl
push
sub
rorl
fsub
into
ss
mov
push
test
inc
cmp
mov
sbb
cmp
sahf
lea
cmp
aam
subb
jns
inc
outsb
adc
push
dec
fnstsw
je
jg
dec
icebp
test
or
aam
push
icebp
pushf
les
in
add
loope
mov
lret
cmp
sub
fnsave
aam
shlb
icebp
jge
dec
jae
adc
lret
fldl
cwtl
test
xchg
xor
daa
imul
sbb
nop
sbb
fwait
pop
jmp
dec
add
les
or
dec
lcall
inc
cmp
jg
sbb
in
andl
pusha
mov
xor
lock
ret
sbb
clc
test
stos
inc
and
jb
cmp
aam
in
xchg
movsb
ss
dec
sub
iret
cmp
jge
imul
lock
das
insl
jge
sbb
cld
xor
mov
inc
add
or
mov
dec
pop
push
mov
es
outsl
or
imulb
push
xor
sub
sub
mov
les
xlat
movsl
inc
xlat
cwtd
add
cmp
mov
test
cmc
insb
or
loopne
call
push
or
and
inc
scas
in
mov
mov
mov
pop
test
out
inc
mov
lods
in
arpl
je
cmpsb
int3
std
pusha
sbb
sarl
ljmp
or
loope
and
inc
lahf
push
inc
inc
lcall
inc
gs
subl
mov
ja
sbb
push
jnp
xor
dec
jp
in
and
mov
mov
outsb
or
pop
mov
mov
lds
jecxz
jl
mov
pop
mov
mov
test
push
rcr
pop
daa
add
pop
mov
mov
dec
sbb
std
cltd
jne
leave
and
mov
shrl
sbb
xor
mov
xchg
clc
sahf
cltd
mov
call
sbb
outsb
cmp
xor
les
pop
and
arpl
imul
shrl
imul
loop
mov
out
mov
mov
xlat
pop
or
outsb
int3
xchg
mov
jg
mov
adc
ds
sbb
scas
aas
mov
inc
pop
mov
sbb
loope
pop
outsl
sub
mov
test
aad
aad
xchg
adc
jp
add
mov
in
mov
cmp
aas
xor
popa
xor
scas
rclb
push
insl
sub
and
outsb
adc
inc
dec
xchg
push
dec
movsb
mov
negl
call
and
push
bound
push
mov
loopne
pop
pop
and
nop
jge
cli
lock
pop
adcb
pop
sbb
outsl
push
mov
sub
jo
in
mov
push
xlat
fnstcw
test
sbb
cmpsl
fld
mov
inc
out
cmpsl
inc
cwtl
jecxz
fisubrs
sbbl
cwtl
sbb
and
jno
in
jge
fwait
popa
lds
cmp
push
jmp
lds
ret
push
mov
or
xchg
sub
sbb
mov
xor
push
cmpsb
jl
fcmovnu
daa
lahf
fxch
cs
mov
in
lahf
jae
pop
push
fmul
addr16
xor
mov
rclb
test
mov
sbb
data16
divb
dec
in
or
movsb
pop
test
dec
mov
leave
and
fs
add
aas
dec
into
pop
imul
xchg
ljmp
cmp
into
xor
pop
xchg
sub
call
inc
jmp
push
stos
adc
mov
das
xor
pop
cltd
loop
push
call
call
jb
adc
cmp
sti
stc
sub
sbb
repz
repz
flds
xor
dec
jecxz
and
lock
pop
ja
test
les
mov
inc
inc
jecxz
sbbb
fisttps
les
or
popf
ss
mov
dec
push
cwtl
pop
int3
out
aas
dec
jns
push
push
xchg
push
lahf
mov
das
lds
aas
movb
aad
fsubr
jl
fwait
test
popf
fnstcw
out
aam
jmp
test
add
clc
int3
jae
ret
mov
rcll
jbe
jno
gs
dec
pop
outsb
or
bswap
shll
clc
mov
cmp
pop
fsubl
pop
xchg
dec
xchg
xchg
sub
mov
sub
repnz
mov
sub
sub
pusha
mov
cwtl
aaa
sbbl
into
loopne
jns
sbb
adc
sub
mov
mov
pop
fstl
addr16
jle
mov
stos
test
adc
decl
cmpsl
and
dec
outsl
xchg
sub
mov
dec
in
mov
mov
mov
inc
ja
fs
inc
dec
mov
insb
push
jge
pusha
dec
jecxz
sarb
adc
dec
jecxz
loop
jle
addr16
mov
adc
xchg
mov
xchg
adc
add
mov
out
cs
mov
xor
ret
nop
mov
inc
pop
jno
lea
in
shll
xor
pop
xchg
scas
shl
or
rcrb
fisttps
cwtl
push
je
lcall
jno
jge
xlat
jecxz
pop
loop
mov
aas
mov
pop
pop
cwtl
test
xchg
ja
sub
mov
fwait
das
ljmp
adcb
addr16
cmp
pop
fnstenv
mov
clc
mov
add
xchg
stc
adc
decb
and
xchg
jns
shll
sbb
adc
insl
mov
sahf
xchg
cs
sub
pusha
je
ret
xor
repnz
stos
jl
cmp
inc
int
in
add
es
pop
popf
insb
xchg
sub
dec
in
int3
lret
and
stos
push
incl
xchg
cli
in
loop
xor
es
mov
push
sub
cmp
testl
gs
mov
dec
inc
jl
and
adc
adc
sahf
out
add
cltd
xor
cmp
lahf
dec
xchg
out
jmp
notb
loope
xor
lea
orb
je
lret
addl
inc
in
es
sar
mov
lea
test
xor
jge
sub
mov
adc
stos
jle
sti
xor
mov
imul
dec
inc
or
insl
inc
fs
push
or
jnp
cli
test
subb
push
xchg
jl
ret
sub
cmpsl
lahf
push
rcrb
mov
add
scas
dec
dec
and
orl
xchg
xchg
xchg
mov
in
jnp
cltd
lcall
pop
jl
adc
dec
int3
inc
pop
cmp
mov
rcrl
xlat
in
fwait
dec
or
out
lds
addl
dec
pop
fbld
or
scas
cmp
cltd
push
fcoml
jbe
out
mov
popf
sub
mov
xchg
subl
in
nop
inc
fs
xlat
stos
inc
leave
stc
xor
dec
push
scas
shl
inc
dec
popa
sub
gs
pop
xchg
rcrb
in
inc
xor
xchg
je
int3
fcoms
adc
mov
jg
roll
xor
ficompl
mov
mov
call
sbb
dec
push
mov
pushf
pop
mov
fmull
or
dec
sarb
shrb
icebp
and
shrl
xor
inc
in
aam
jecxz
or
lds
pop
and
push
xor
xlat
cs
xor
aam
xchg
gs
fistps
mov
cmp
adc
inc
lret
sub
inc
dec
rorl
push
cmpb
pop
popa
daa
mov
lods
bound
gs
lock
pop
dec
xor
dec
fadds
arpl
jge
cvtps2pd
int
xchg
or
lahf
in
aad
xchg
imul
or
xor
mov
dec
dec
loopne
adc
and
imul
ret
into
pop
adc
mov
push
inc
jo
mov
mov
iret
cmpsb
imul
mov
cwtl
pop
push
jl
lock
jmp
sub
scas
sbb
outsl
leave
sbb
sub
add
les
cmp
sbb
pop
and
das
lret
inc
movsb
sahf
and
dec
pop
mov
outsl
pop
pop
or
mov
int3
add
mov
mov
cmpsb
mov
shrb
lods
mov
pop
and
mov
push
pop
mov
dec
xchg
pop
ret
cs
leave
xchg
dec
iret
pushl
stos
lret
jp
dec
nop
push
aam
fcmovnu
or
addr16
jl
mov
inc
dec
in
pushf
test
mov
insb
add
jle
mov
addr16
movsb
xchg
stos
mov
mov
xor
dec
xor
inc
imul
push
mov
test
les
xchg
add
jecxz
jmp
xchg
jo
xor
in
ret
adc
mov
push
call
xchg
xchg
les
loop
xor
jecxz
cld
jns
xchg
and
loope
loope
rorb
out
adc
mov
mov
xchg
in
mov
jg
loop
push
cmp
pop
jb
gs
cs
xchg
pusha
out
out
popa
aad
sbb
mov
adc
dec
pop
orl
fucomi
mov
and
push
pop
xchg
push
xchg
and
sbb
lds
push
xchg
stos
push
inc
pop
mov
mov
ja
mov
cltd
insl
ficompl
cltd
movsl
cltd
mov
mov
sti
pop
sub
int3
jb
dec
negl
mov
ffreep
sub
sbb
aas
mov
cmc
inc
lret
xor
hlt
fnsave
push
in
insl
cli
mov
lods
cmpsb
inc
fdivrs
mov
jo
jl
xor
divl
xor
mov
ds
dec
in
leave
dec
mov
je
movsl
xor
incl
jae
shrl
sahf
xor
mov
or
es
lret
push
ljmp
popf
jbe
aad
mov
mov
scas
mov
js
sbb
test
xor
mov
gs
adc
xchg
jp
jb
dec
xor
dec
jne
les
repz
je
push
in
jg
test
nop
adc
rclb
jmp
aaa
lock
sbb
xchg
test
adcl
dec
sbb
jp
pop
mov
jmp
orl
scas
out
sti
hlt
repz
mov
negl
jnp
mov
enter
dec
stos
mov
shrl
andb
arpl
aas
outsb
inc
ss
push
jmp
inc
out
sub
adc
cli
jae
jp
sub
xor
in
push
jno
and
xchg
fdivp
into
pop
je
nop
out
mov
popf
sbb
mov
negb
cwtl
adc
inc
inc
inc
mov
inc
in
addl
add
pop
scas
inc
and
mov
xor
lea
push
inc
test
andl
push
es
ss
insb
in
mov
loope
das
cli
push
mov
jo
inc
insl
lret
fistps
jo
jo
inc
aas
sti
loop
adc
pop
mov
mov
jmp
icebp
mov
mov
test
lock
jo
push
imul
pop
push
dec
dec
subl
ss
pusha
loop
rorb
mov
jmp
add
pop
in
fwait
or
lret
cld
add
mov
outsl
cld
sbb
jle
sub
mov
js
pop
rorb
xchg
mov
dec
loopne
mov
hlt
cmp
xchg
sbb
aad
dec
outsb
outsb
mov
fldl
xchg
outsl
sahf
add
dec
in
ljmp
aas
ss
mov
push
pop
enter
sbb
add
dec
adc
aam
adc
pop
es
cmpsl
out
cmp
push
mov
inc
cmpsb
repnz
out
cs
cmc
int3
test
dec
das
push
aas
add
pop
popf
or
fldcw
test
test
xchg
mov
inc
imul
repz
or
dec
pop
mov
sbb
lret
aam
mov
je
loopne
adc
sub
lock
xor
xchg
xlat
test
into
enter
ret
mov
sarb
scas
xchg
pop
adc
sti
or
dec
mov
iret
stos
out
lds
mov
iret
pop
sub
xchg
sbb
cmp
fwait
aas
or
jb
xchg
andb
xchg
insl
sub
sbb
pusha
dec
hlt
sbb
out
mov
push
sahf
add
mov
or
xchg
cmp
mov
and
shrl
mov
adc
sub
pop
inc
mov
push
ret
aad
adc
aad
xchg
dec
sti
push
repz
fidivrl
lret
mov
mov
movsb
out
pusha
out
adc
or
rcll
push
insl
sti
dec
dec
mov
mov
cmp
ja
mov
inc
rcrl
mov
daa
cld
shl
sub
repnz
pop
aas
dec
fucomp
mov
xchg
xchg
daa
mov
jne
jg
pop
sbb
push
lds
sbb
dec
and
mov
jno
scas
mov
gs
or
std
cmp
xchg
mov
pop
sub
scas
xchg
inc
mov
fdiv
mov
scas
sub
ret
sbb
and
or
ror
enter
mov
rcl
jle
fs
jnp
xchg
in
sbb
mov
jp
outsb
xchg
sbb
lea
test
repnz
test
ds
cmp
aam
inc
xchg
nop
test
stc
mov
ljmp
fisubl
or
inc
pop
dec
ret
aas
push
jae
adc
mov
mov
cmp
dec
push
add
xor
ja
fcomp
sub
subl
jl
scas
cmp
sarl
push
insb
sub
pop
call
pop
lods
in
pop
sbb
stos
xchg
push
sub
test
add
pushf
add
mov
insl
test
cmc
jmp
mov
fsubl
sbb
pop
dec
xorl
adc
inc
mov
adc
xchg
push
adc
mov
jb
cmp
sub
add
lods
or
cmp
cli
xchg
pop
mov
les
lods
inc
aam
push
jb
rclb
pusha
int3
rclb
add
jne
xchg
jne
out
test
and
notb
lds
cld
push
ljmp
into
loopne
or
stos
add
adc
sub
das
and
mov
cmpsl
in
add
scas
sub
push
adc
push
scas
jecxz
pushf
mov
shll
mov
adc
out
fs
pop
adc
fwait
ret
adc
adc
gs
mov
popa
fmul
jbe
repz
dec
fldt
xor
or
push
sti
shl
ret
cmp
das
push
push
or
call
jp
mov
xchg
sub
push
jmp
rol
icebp
cmpl
cmp
movsl
fwait
les
xchg
out
sbb
xchg
outsb
mov
hlt
and
jmp
andl
inc
lahf
and
xchg
jmp
popf
mov
push
cwtl
mov
dec
xchg
sub
dec
stos
mov
sbb
outsb
add
mov
inc
sahf
dec
inc
lcall
and
pop
test
cld
aam
xlat
repz
cmp
or
loop
subb
and
cmp
xor
lret
in
cltd
sub
xor
push
jmp
add
push
xchg
repnz
out
sti
cli
sti
xor
in
arpl
cmp
test
in
clc
mov
iret
and
lods
and
adc
aas
loop
mov
in
adc
aas
in
sub
jb
mov
mov
shr
ret
sti
push
in
je
out
lcall
fdivp
cmp
popf
dec
lods
mov
mov
pop
out
popa
push
test
data16
xchg
ds
sub
mov
mov
adc
cwtl
mov
lods
add
xor
subb
xchg
inc
add
jnp
sub
mov
push
fwait
and
add
jg
or
lods
dec
sub
mov
mov
ret
or
lea
pop
int3
lods
ja
pop
in
loopne
jge
jge
xor
ja
jge
push
movsl
aas
sahf
pop
repnz
inc
pop
ja
inc
adc
test
ljmp
icebp
ficoms
ljmp
shl
add
inc
jmp
jnp
in
stc
icebp
push
cwtl
sbbl
cmp
and
push
in
add
out
xchg
ret
and
lret
out
pop
pop
sbb
sarl
es
pop
aaa
mov
ja
xchg
xchg
scas
test
and
pop
cmpsl
sub
push
pushw
pop
add
sub
dec
jae
repz
in
push
stos
mov
imul
xchg
test
nop
push
fadds
add
pop
cwtl
jmp
push
rorl
and
fxch
cmpl
jae
stc
in
lods
push
dec
mov
pop
ds
xchg
xchg
dec
pop
or
add
stos
in
pushf
les
out
or
xchg
hlt
test
sbb
fisttpll
dec
mov
outsb
pop
sub
nop
jo
arpl
imul
cmpsl
sarb
jnp
mov
movsl
jg
insb
jg
jge
sub
jnp
mov
xchg
andb
xchg
jg
daa
test
stos
cwtl
fcmovne
mov
mov
or
pusha
stc
adc
lret
cld
xor
cmp
gs
sahf
lret
scas
sub
pusha
in
and
pop
mov
inc
push
gs
test
inc
mov
jne
mov
mov
inc
cltd
jl
lcall
sbb
es
pop
push
popf
push
mov
fisubrl
out
arpl
inc
in
adcb
xchg
or
inc
stos
inc
iret
pop
sub
data16
jae
mov
ret
mov
pop
xchg
jns
sub
scas
sahf
arpl
fsubl
aaa
sub
cmpsb
dec
lret
push
pop
inc
lret
jnp
cltd
push
adc
xchg
cmc
pop
push
and
ljmp
pop
out
adc
popa
or
es
repz
push
shlb
jle
mov
mov
les
xchg
shll
movsb
add
pushf
and
pop
cmc
xor
dec
movsl
flds
push
and
xlat
hlt
int3
cwtl
jnp
mov
cmc
mov
jno
and
aad
icebp
sahf
stos
sbb
rcrl
jne
jne
mov
mov
or
sbb
jae
and
roll
lret
lret
lahf
shll
add
aad
jnp
or
insl
rcrb
sub
and
mov
adc
icebp
xor
push
fistl
icebp
xor
int3
and
xchg
jge
shrl
test
icebp
dec
movsb
cmpb
cmpsl
out
pop
into
adc
stos
lret
inc
xchg
and
sub
leave
loopne
mov
jecxz
lock
cltd
pushf
cwtl
lods
fisttps
cmpsb
jo
cld
pop
btc
sti
sarb
or
mov
jmp
flds
cmc
sbb
ds
test
xchg
mov
add
lret
ss
repz
xor
and
iret
and
shr
xchg
mov
dec
out
xlat
fstl
push
push
dec
cmp
in
jge
sti
sarb
xchg
ja
add
cs
test
cli
push
and
imul
mov
mov
lods
pop
lahf
int
js
pop
in
loopne
or
std
xchg
mov
mov
or
iret
lds
dec
ljmp
jg
adc
dec
and
aad
lock
push
or
es
pop
mov
mov
sub
loopne
out
fwait
inc
adc
cmp
lcall
mov
mov
ss
dec
mov
pop
jle
pusha
clc
sbb
repnz
cmp
fstpt
fdivl
out
inc
push
push
mov
push
sbb
es
out
push
js
aad
or
dec
jecxz
loop
outsb
mov
mov
aam
fcmovb
pop
loopne
fldl2t
cmp
arpl
dec
loopne
aad
loope
push
push
mov
mov
pop
stc
out
xor
push
aaa
push
or
push
jo
getsec
push
lods
out
mov
add
movsl
jg
xlat
imul
clc
sub
dec
dec
mov
mov
dec
xor
mov
xor
add
in
test
xchg
imul
push
cltd
mov
dec
mov
or
pop
call
or
cmp
repnz
push
adcb
sub
xchg
xchg
out
push
loop
js
inc
add
jbe
or
stc
lods
std
push
ja
dec
pop
dec
xchg
cmc
mov
gs
adc
andl
mov
fwait
cltd
add
dec
loopne
xchg
loop
and
out
cld
sbb
xchg
sub
sbb
sub
mov
fistps
test
push
lods
jl
scas
pop
push
mov
sbb
shrb
add
outsb
outsb
addr16
cwtl
mov
pop
aaa
pop
xor
les
testb
int
je
call
std
loopne
jnp
fistpll
arpl
lret
test
iret
mov
in
cld
pusha
es
and
hlt
push
pop
cs
sub
xchg
dec
call
xchg
addr16
mov
xor
push
pop
je
add
aaa
pop
negl
jmp
shr
sub
in
dec
jge
push
arpl
jno
fwait
push
rolb
ja
stc
jge
iret
pop
sbb
shrl
and
pop
cvtdq2ps
dec
das
sub
mov
add
js
fidivl
sbb
sahf
sarb
add
orl
mov
je
pop
ja
sbb
and
sbb
jmp
or
adc
lea
mov
jl
sub
add
testb
or
inc
jns
int3
lret
lret
inc
mov
outsb
push
or
js
fucom
inc
cmpb
ret
clc
jno
pop
xor
mov
jno
or
test
arpl
dec
cmp
push
xlat
pop
cmp
add
test
pop
je
sbb
or
jo
mov
stc
cmp
add
cmp
enter
cmp
mov
and
cmp
lea
mov
loop
xchg
push
jb
push
pop
lock
scas
clc
push
mov
stos
arpl
arpl
inc
fsubrp
or
clc
pop
iret
fldt
cmp
lahf
pushf
pop
sbbb
sbbb
jns
cmp
dec
test
cmp
cmc
xor
xlat
add
shr
lods
mov
push
or
pop
add
lods
cmp
mov
xor
lods
js
gs
xchg
mov
popa
push
mov
dec
xor
xchg
daa
out
dec
mov
fdivl
xchg
aam
lret
das
into
in
imul
mov
mov
ret
inc
sbbb
pop
xchg
testl
sbb
mov
cltd
test
jmp
cmp
ja
mov
jge
inc
sti
into
cli
les
sbb
or
mov
imul
iret
lock
jp
sbb
pop
leave
add
sti
cmp
push
lock
pop
lret
push
push
js
push
or
push
mov
icebp
jnp
hlt
dec
jecxz
cli
jnp
icebp
icebp
pop
stos
add
stc
aad
mov
cltd
daa
sbbl
test
xor
cmpsl
cld
xchg
adc
inc
mov
sub
push
arpl
mov
in
out
xor
test
mov
imul
faddl
pushf
cmc
mov
push
sub
lock
cmp
rcrl
mov
ret
add
data16
jno
mov
into
in
dec
cmpb
mov
push
adc
push
pop
cmpl
cmp
mov
and
scas
mov
xor
arpl
xchg
xchg
ficoml
xor
mov
scas
inc
int3
or
ret
pop
movsl
push
inc
mov
lret
xchg
push
call
out
outsl
insb
inc
dec
fcomip
and
pop
xor
mov
and
xlat
icebp
out
dec
clc
sbb
insb
cwtl
das
pop
push
jecxz
mov
xchg
or
ret
test
xlat
pop
test
clc
jle
hlt
insl
jbe
push
test
inc
je
sbb
nopl
xchg
mov
mov
add
enter
insl
inc
movsl
mov
push
jle
push
mov
add
sahf
rolb
stos
push
mov
out
sti
call
lcall
into
stos
pop
pop
pause
or
push
rorl
fdivrp
repnz
das
call
or
sar
es
push
out
pop
add
xchg
adc
movsl
mov
xchg
lcall
jne
jl
push
loope
or
or
sub
cwtl
cltd
mov
xchg
insb
inc
into
es
mov
imul
lods
daa
xchg
pop
insl
mov
icebp
lret
lea
out
psubusw
cmp
mov
in
and
xchg
or
sbb
pop
cmc
jmp
dec
cmpsl
mov
insl
mov
arpl
inc
xlat
lret
fcmovnu
sti
outsb
insb
test
mov
movsl
jne
dec
mov
outsl
jecxz
in
inc
mov
add
sti
jno
in
jecxz
xchg
xchg
dec
xchg
mul
enter
scas
jmp
xlat
stc
cmp
sbb
int
pop
xor
and
pop
mov
lds
xchg
dec
mov
push
mov
cmp
test
imul
cli
dec
sbb
xchg
stos
out
add
roll
icebp
dec
fldl
xchg
mov
addb
xor
sbb
fists
adc
jne
xor
imul
push
push
sahf
aaa
push
out
pop
xchg
xor
jl
movsl
lods
mov
fidivs
jmp
ror
mov
lods
jecxz
rclb
add
ret
lret
xchg
mov
les
sti
mov
sub
lea
mov
and
dec
push
bound
pop
divb
daa
inc
xor
in
cmp
sbb
and
push
jae
cmp
pushf
ret
push
inc
push
andb
mov
mov
mov
aad
out
je
mov
jmp
cltd
push
push
add
jb
pop
jg
inc
dec
shlb
pusha
add
out
outsb
daa
cld
adc
jg
fwait
sbb
insl
jle
add
cmp
xlat
insb
scas
cmp
imulb
andb
lahf
outsl
hlt
insb
push
mov
inc
cmpl
add
cmpb
and
push
scas
add
lretw
push
scas
inc
inc
icebp
fwait
dec
dec
xchg
das
popa
std
mov
inc
mov
jae
mov
mov
cli
icebp
xchg
dec
outsb
jl
hlt
push
inc
xchg
inc
in
mov
xchg
das
movb
lret
sahf
jo
or
adc
push
icebp
mov
and
nop
mov
push
sbb
lcall
out
mov
jle
jmp
pop
mov
push
mov
lret
jg
push
lcall
mov
rorb
xor
push
shrb
cmp
aad
jnp
pop
repnz
lods
outsb
or
test
jns
adc
sti
cmpsl
les
jnp
mov
sub
scas
or
mov
pusha
dec
aaa
lret
shlb
jg
sbb
je
jne
pusha
stos
xchg
xchg
sbb
out
call
je
mov
or
mov
into
pushw
icebp
mov
lcall
mov
in
orl
mov
lea
js
adc
stos
mov
popa
in
popa
xchg
push
add
pop
jg
dec
hlt
xchg
mov
or
in
andl
leave
testb
push
jno
jg
jne
lods
mov
es
js
fnstcw
cltd
xchg
inc
mov
ret
push
jmp
adc
sbb
decb
or
fs
stos
and
imul
xor
mov
popf
push
push
out
and
cltd
mov
xchg
aas
pop
mov
inc
cmp
mov
iret
mov
pop
test
testb
and
jb
int
jbe
pop
shlb
adc
mov
rorb
add
sar
mov
sub
movsb
daa
notb
push
pop
enter
pmullw
or
stos
mov
jecxz
imul
lds
ret
lret
lock
push
dec
aaa
pop
mulb
scas
push
sbb
nop
lcall
shlb
mov
ret
sub
std
add
lcall
pop
icebp
sbb
sub
fsubl
jp
xchg
fstl
pop
enter
push
in
imul
int
sbb
or
sub
xor
mov
fldt
movsb
enter
jmp
or
movsb
das
fiaddl
fiadds
mov
pop
adc
pop
sbb
mov
into
push
inc
sub
jbe
jmp
inc
push
cmp
mov
sbb
repnz
arpl
dec
rclb
add
mov
lea
pop
adc
jbe
xchg
popa
mov
mov
sbbb
cmp
sbb
sub
mov
cmp
sbb
roll
fnstcw
pop
loope
loope,pn
aam
cmp
test
mov
ficompl
xor
sub
jmp
gs
ljmp
pop
adc
mov
fiadds
push
xchg
push
inc
sub
mov
lds
or
jg
add
ja
mov
orl
sub
xor
iret
pusha
cs
lea
lea
in
inc
rcll
imul
shrl
sti
push
cmc
js
sub
imul
xchg
arpl
push
jge
xchg
lcall
jg
push
popl
lods
mov
hlt
push
fildll
push
push
jbe
sbb
rcrb
stc
pop
loope
dec
jmp
adc
int3
dec
int3
js
stos
test
dec
aaa
inc
inc
sub
jbe
jb
fcmovbe
repnz
lods
or
arpl
mov
mov
call
ret
pushf
pop
popf
inc
adc
aaa
sbb
mov
leave
cmp
fidivrs
iret
iret
outsb
repz
stos
leave
xor
fidivrs
add
inc
push
jge
outsl
adc
xor
int3
mov
inc
mov
adc
pop
lret
stos
mov
fnsave
leave
fisubrl
mov
push
jo
mov
and
movsl
sub
xlat
sbb
adc
retw
push
ljmp
jno
pop
mov
and
mov
mov
sub
mov
jno
popf
stos
cltd
das
push
mov
add
sub
jecxz
shlb
jbe
int3
push
xchg
mov
addr16
mov
dec
ljmp
gs
pop
jmp
jmp
jne
fdivr
xor
test
push
cmp
icebp
int3
push
sub
pop
hlt
mov
test
mov
jmp
cmp
in
aam
mov
xlat
cmp
add
mov
push
jle
pop
movsl
aas
dec
mov
dec
inc
sbb
jnp
fisubs
mov
jbe
or
test
xchg
ds
dec
shll
popf
or
push
leave
mov
loopne
mov
push
sbb
jno
leave
mov
pushf
dec
mov
or
mov
push
in
or
addr16
mov
jns
sbb
mov
jl
test
cltd
mov
insl
jg
mov
cmpsb
mov
test
in
test
sub
and
fiaddl
inc
popl
icebp
filds
mov
add
sbb
js
ret
cmp
fidivs
clc
pop
and
inc
daa
adc
popa
clc
shrb
xor
mov
push
fistpl
lock
xor
sub
cwtl
inc
shrb
mov
and
cltd
mov
jg
or
outsb
sbb
jmp
cmpsl
popf
lods
sub
lock
cwtl
repnz
cmpb
into
sbbl
cmp
or
aad
stos
das
mov
iret
xchg
arpl
inc
push
dec
xchg
adc
cli
sub
scas
pop
popf
lods
bnd
dec
fcoml
iret
mov
xchg
jne
movsl
push
mov
popa
pop
and
sub
fstpt
mov
int
inc
and
cmp
jne
loop
adc
dec
scas
xor
jnp
jns
je
and
pop
dec
shrb
pop
movsb
fcomps
adcl
dec
mov
xchg
addl
in
inc
inc
inc
nop
imul
jne
sbb
adc
mov
inc
dec
popa
jbe
aam
dec
push
mov
insb
mov
fdivl
addl
aaa
mov
xchg
popf
sub
fstpl
jp
loop
je
jae
mov
clc
pop
leave
add
push
test
cwtl
sbb
jno
dec
daa
imul
cmp
sub
in
pop
icebp
push
sub
and
stos
mov
inc
mov
in
fimull
shlb
les
jl
xor
and
push
mov
adc
pop
cld
push
dec
jmp
shrb
rcrl
adc
mov
iret
adc
scas
test
inc
movsl
out
pop
int3
fidivrs
or
imul
insl
add
rorl
push
mov
dec
call
rcll
test
sub
sub
push
clc
sahf
dec
pop
insl
arpl
push
call
or
daa
je
in
cli
pusha
imull
lea
adc
test
out
and
pop
jmp
imull
sbb
add
sbbb
bound
jae
mov
dec
push
in
adc
dec
inc
int
fistpll
data16
xchg
mov
dec
mov
ret
jns
cmc
ss
popf
push
fdivs
mov
mov
rolb
cmp
jl
cmp
fdivrl
or
frstor
lcall
ja
das
lds
lods
lcallw
jae
jae
push
xor
enter
sbb
mov
dec
pusha
stos
jge
insl
push
mov
sbb
bound
clc
or
mov
cmc
adc
mov
es
or
pop
mov
fiaddl
push
or
stos
subl
jl
mov
lods
jae
es
mov
inc
mov
divl
cs
or
adc
ljmp
scas
cmc
sub
movsb
mov
mov
fnsave
xor
test
int
test
stc
arpl
inc
aas
imul
push
popf
test
pop
repz
push
sub
mov
dec
and
mov
sti
pop
fists
fstp
jne
sbb
jg
cld
vfrczpd
stos
inc
fst
mov
ffreep
ret
jb
xor
mov
aaa
pop
mov
out
mull
out
cmpsl
cvtpi2ps
loopne
sbb
sbb
mulb
xchg
pop
jae
ret
and
pop
testb
int
fs
fs
ds
in
dec
xchg
out
or
adc
mov
inc
inc
pop
inc
jne
xchg
iret
xor
sub
inc
lcall
jg
xor
dec
in
out
push
push
sbb
cmp
sub
pop
sahf
inc
sub
bound
rcrb
loopne
xchg
shrb
pop
ret
pop
fbld
mov
xor
cli
pushf
fstpt
dec
mov
and
lods
fsubrs
or
sti
add
cmp
andb
adc
mov
cmp
loop
enter
imul
dec
inc
test
rclb
jne
or
push
or
sbb
xor
and
xor
movsb
sbb
add
movsb
mov
mov
rcll
insl
cld
jmp
and
inc
shll
add
sahf
shll
fs
jb
mov
sub
jno
rcll
popf
idiv
shrb
push
xor
mov
test
jg
xor
xor
inc
into
cwtl
push
inc
scas
mov
dec
add
xchg
sbbb
in
add
je
fistpl
lods
push
and
movsl
inc
sbb
fidivs
mov
cld
inc
in
test
inc
out
jg
lds
mov
out
xor
int3
arpl
into
jp
cli
or
cmpsb
and
mov
push
out
xor
shrb
xchg
xchg
pop
cs
pop
sbb
addr16
pop
pushf
mov
add
stc
ficomps
imul
push
push
dec
lock
mov
insb
add
pop
ja
mov
jnp
data16
std
rcrb
addr16
adc
loop
fidivs
sub
xchg
mov
add
xlat
push
sbb
repz
mov
fnstsw
adc
xchg
les
sub
insb
add
jge
fnsave
sahf
mov
std
sbb
sub
push
mov
mov
outsb
add
adc
movsl
mov
and
dec
outsb
cmpsl
fisubrs
push
lahf
dec
sbb
xor
adc
mov
dec
pop
stc
cmp
out
fs
xchg
jge
jmp
lea
adc
in
mov
pop
out
test
mov
insb
aas
or
cwtl
lcall
arpl
mov
in
mov
add
adc
sbb
and
test
xchg
cltd
or
enter
insb
push
xchg
jae
mov
ret
adc
movsl
cmp
add
in
fwait
sti
test
test
mov
xchg
push
inc
flds
cltd
push
sub
cmc
adc
sub
sbb
nop
lods
cmp
xchg
jb
incb
xor
dec
stos
or
test
js
adc
pop
fs
out
enter
and
add
dec
pop
xor
mov
xchg
and
std
xchg
int
jl
push
cs
and
addr16
adc
andb
imul
sub
pop
decl
or
xchg
popa
cmp
aaa
leave
jne
loope
arpl
addr16
shr
push
jae
push
mov
enter
lea
mov
test
aaa
sub
mov
xchg
push
mov
clc
jns
cmp
ds
pop
cs
jns
xchg
push
add
aaa
push
pop
bound
jne
push
stos
inc
test
enter
jbe
iret
fldcw
jp
addl
cli
aaa
jo
popa
scas
ret
pop
dec
mov
insb
insl
cmp
push
shll
icebp
aaa
ss
push
popf
cmp
cmp
mov
clc
cmp
mov
pop
sarl
xor
jg
repnz
incb
notl
inc
inc
fsubr
sbb
aad
loopne
rol
not
pop
mov
mov
test
mov
mov
daa
jp
xchg
push
rcl
dec
pop
xchg
sub
popa
insl
xor
ljmp
mov
sar
push
sbb
pusha
mov
sbb
and
jo
testl
test
sbb
cmp
andb
push
sbb
les
xor
mov
xchg
mov
jo
subl
cwtl
adc
int
cwtl
pop
push
inc
enter
inc
scas
and
pop
lds
add
int3
mov
mov
dec
mov
mov
fs
aas
and
sbb
pop
mov
addl
adc
in
jnp
fwait
mov
insb
xlat
xlat
sbbl
nop
inc
dec
pop
jb
xchg
push
mov
mov
es
or
test
out
aaa
add
test
bound
lcall
pop
xor
ffreep
fs
mov
in
pop
jmp
push
xchg
inc
gs
movsl
cmp
add
sbb
repnz
repnz
inc
push
sub
xor
mov
cmpsb
cmpsl
clc
pop
cli
jecxz
sub
dec
mov
jecxz
or
sub
js
mov
or
pop
mov
xor
test
notb
repnz
add
movsl
sbb
jne
jae
mov
push
push
dec
aas
pop
int3
out
pop
sbb
dec
subb
popw
int3
outsb
arpl
jge
or
in
movsl
or
lock
jmp
lret
xchg
and
push
mull
movsb
sti
ja
sub
mov
sbb
das
inc
fcomps
les
repz
adc
popf
mov
add
clc
frstor
mov
mov
les
popa
loop
inc
mov
mov
lahf
ja
popf
lret
cmp
in
in
and
or
out
add
adc
sbb
adc
lea
das
dec
pop
pop
jmp
in
test
pushf
in
cmp
adc
dec
cmc
jo
and
shl
mov
mov
lods
pop
outsb
mov
jns
fsubl
les
incb
sub
sahf
fstp
xor
cmp
sahf
mov
pop
imul
and
sbb
das
cmp
inc
pop
add
and
inc
fistps
or
daa
popa
mov
imul
leave
inc
hlt
loopne
mov
ret
push
inc
push
stc
and
dec
cmp
popa
clc
mov
dec
arpl
cmp
in
in
jbe
stos
cmpsl
or
scas
jns
aam
scas
mov
mov
adc
mov
add
pop
mov
or
sbbl
into
out
or
je
xchg
movsb
cmp
mov
movsb
pop
out
das
insl
hlt
pop
loop
movsl
mov
mov
aam
fsts
jae
and
stos
push
or
test
fsubrs
adc
push
das
jg
xchg
dec
mov
fwait
pop
rorb
jle
mov
push
int3
and
mov
jb
adc
inc
lret
inc
out
out
jo
mov
push
cmpb
xchg
cwtl
pop
cmp
push
dec
out
mov
dec
in
push
pop
push
jmp
cmp
or
cmp
subl
inc
iret
push
mov
xor
jae
adc
lret
lods
jg
push
add
aad
xchg
jne
dec
jl
andl
add
adc
jmp
jbe
xchg
dec
mov
sbb
sbbl
popa
sub
mov
mov
xchg
das
imul
wrmsr
push
data16
xor
xor
jmp
adc
push
jb
push
jmp
and
lods
punpckhdq
pop
cmp
pop
lock
ljmp
push
stos
shlb
sbb
push
push
cmp
aaa
es
xchg
fstpl
xchg
mov
pusha
adc
dec
notl
adc
jo
adc
jno
sahf
addb
cmpl
fwait
lahf
xor
dec
jp
das
push
mov
test
cmp
pusha
cmp
inc
cwtl
cs
dec
in
dec
xor
lea
movsb
popa
pop
jl
xchg
dec
jecxz
loopne
cld
into
inc
push
jge
decb
xlat
push
data16
inc
notl
int
and
adc
sbb
pop
popf
inc
push
dec
xor
xor
jo
pop
sub
and
xchg
call
or
ja
xor
movmskps
mov
mov
repnz
cmp
icebp
testl
movb
enter
inc
fadds
repz
out
arpl
adc
ret
loope,pt
outsl
imul
cli
sub
bound
xor
aaa
cltd
jb
out
xchg
rorl
mov
sub
fs
movsl
dec
pop
loopne
or
cmp
mov
icebp
fcoml
ds
jbe
push
dec
pop
sbb
dec
call
jb
dec
sub
lds
xchg
aad
sti
out
rcrb
imul
or
enter
pop
mov
cmpl
mov
xor
cmpsl
test
cmp
jp
iret
lret
and
cmp
loop
cld
jge
sub
test
test
test
mov
loopne
and
fwait
fwait
lock
push
or
inc
addr16
gs
fimuls
bound
dec
fstps
mov
shl
push
mov
popf
pop
or
insl
scas
aaa
mov
or
pop
cmp
mov
jg
pop
test
stos
repz
lods
or
mov
fnsave
jg
mov
jle
out
push
sbb
cmpl
mov
push
scas
mov
or
jle
popa
fsubrl
xor
mov
mov
jecxz
andl
or
into
mov
es
pop
pop
insl
add
ljmp
aam
sbb
int
mov
aam
and
cld
stos
xor
xor
faddl
jg
inc
and
clc
xchg
aas
fildll
leave
sub
push
push
ljmp
lods
jg
mov
int
mov
inc
rol
stos
cmp
inc
bound
jnp
hlt
and
inc
jnp
out
test
inc
inc
test
sub
xchg
lods
mov
mov
jg
stos
pop
and
nop
int3
sub
aad
add
mov
or
jnp
pop
mov
and
and
lods
mov
nop
dec
push
aas
in
lcall
add
xchg
and
das
pop
mulb
jge
imul
push
pop
push
in
mov
and
imul
xor
sbb
into
icebp
jo
out
int3
dec
and
stos
insl
outsb
shlb
test
or
dec
stc
nop
adc
push
sub
out
icebp
xor
cmp
out
push
jg
jl
adc
adc
push
cmp
sbb
lret
gs
dec
mov
xor
sbbl
mov
cmpsb
pop
xor
mov
pop
aaa
pop
enter
pop
dec
push
rcrl
cmp
pop
dec
lock
mov
sub
je
sbb
jae
aaa
movsb
call
mov
sub
addb
icebp
pop
mov
cmp
add
add
stos
es
and
leave
imulb
fnstsw
test
sarb
and
lcall
in
push
cld
pop
clc
in
sbb
das
gs
addr16
shl
out
adcb
sarb
inc
cltd
les
pushf
xlat
icebp
inc
fsubr
sbbb
clc
jl
call
add
es
jae
imul
pushf
push
mov
add
es
jl
icebp
lahf
divl
out
push
or
daa
pushl
mov
adc
imulb
pop
add
push
gs
inc
adc
fidivrs
cmpl
jle
push
lock
icebp
dec
mov
sbb
loope
jne
mov
add
es
dec
push
fwait
loopne
and
outsb
cltd
shr
lret
cmp
adc
leave
insb
and
cld
aaa
or
fdivrs
pop
sbbl
aas
fldt
dec
inc
or
insb
insl
add
ja
arpl
mov
sbb
outsb
cwtl
stos
sbb
push
repnz
push
icebp
inc
mov
xor
cmp
inc
xor
pop
fs
push
xor
fdivrl
es
inc
nop
lods
sahf
imul
pop
scas
adc
xor
stos
add
repz
inc
fdivs
ficomps
adc
cmp
test
icebp
js
push
sahf
mulb
pop
and
mov
xor
cs
or
ja
sub
test
dec
xchg
ror
add
mov
mov
insl
adc
inc
jo
add
sub
es
jp
fsubrl
pop
mov
data16
pop
enter
cmp
cmp
cwtl
or
dec
sbb
lcall
cmc
pusha
clc
mov
xchg
mov
aaa
mov
xchg
out
or
mov
std
out
inc
push
test
ret
je
cmp
inc
sbb
jb
jo
fstl
lock
iret
decb
push
cltd
into
nop
add
ss
sbbl
sahf
mov
sub
scas
xchg
pop
ret
push
mov
adc
xchg
daa
sub
pop
dec
push
mov
lahf
pushf
mov
addr16
jecxz
or
add
aad
and
and
mov
test
insb
je
in
icebp
mov
pop
out
cmp
mov
pusha
lock
sub
xchg
divb
dec
mov
jg
pushf
xor
addr16
arpl
jne
stos
insb
lods
inc
ret
icebp
ja
jno
cmpsb
pushf
cli
mov
mov
ret
push
fwait
xor
pusha
dec
mov
das
cmp
cwtl
add
in
testb
test
lcall
or
in
mov
nop
imul
imul
push
and
dec
add
xor
enter
cmc
xchg
inc
andb
mov
scas
push
pusha
pop
dec
dec
mov
cmp
inc
fisubs
mov
bound
pop
cltd
test
mov
mov
sub
in
pop
xchg
jns
and
mov
imul
sub
sub
ja
mov
dec
mov
jo
sub
fldenv
or
pop
add
movsl
or
cmp
lcall
loopne
loop
cmp
sub
outsb
bound
pop
fs
pop
repnz
jo
xor
sbb
movsl
andb
xorl
push
cli
xlat
mov
sbb
mov
add
cltd
idivl
mov
xor
rclb
cli
lret
inc
sub
cmpl
test
sub
idivb
outsl
imul
out
decb
lock
test
leave
and
jle
stc
mov
mov
xchg
mov
push
xor
push
out
add
out
adc
idivb
lcall
mov
push
mov
push
mov
mov
push
orb
pop
dec
loope
fbld
inc
adc
fsubl
outsl
nop
push
xchg
loope
mulb
iret
jge
cmp
cltd
or
adc
inc
lcall
mov
roll
push
inc
lret
call
test
stos
xor
lods
push
adcb
dec
pusha
shll
test
sbb
aam
xor
sbb
mov
add
or
pop
adc
mov
bound
cmpsb
xchg
mov
aaa
loopne
decl
out
add
mov
int3
jg
imul
pushf
jae
lea
stos
adc
lcall
push
xor
push
popf
xor
sub
cld
mov
xor
adcb
das
mov
ss
or
clc
hlt
jns
ret
xor
incl
mul
movsb
xchg
adc
enter
test
push
mov
jecxz
cmc
cmpl
ds
push
out
xchg
fcmovne
or
cmp
dec
out
fcomp
fwait
aaa
sti
std
ljmp
shll
inc
dec
fisttps
pop
lcall
loopne
stos
inc
jb
xchg
das
fcoms
cltd
jp
xor
mov
jle
pop
mov
fimuls
add
sbb
rorl
jae
sub
imul
xchg
sub
push
je
fadds
dec
jns
sub
push
popf
rolb
mov
and
pop
cmp
cmp
std
adc
and
push
cltd
adc
xchg
xor
mov
sub
dec
jb
cmp
sahf
fsubrl
call
out
mov
cs
cli
mov
repnz
mov
xor
js
mov
insb
mov
inc
ljmp
jbe
sub
cld
xor
dec
and
std
pop
adc
lea
pop
shll
mov
loopne
in
test
dec
jecxz
push
dec
fwait
mov
nop
daa
or
iret
lea
sbb
push
cmp
icebp
jle
pop
mov
cmc
mov
mov
mov
add
cmp
shl
test
lods
and
push
js
inc
test
mov
fadds
lods
xchg
in
sub
and
iret
push
leave
shrl
popa
ss
aad
pop
int3
inc
out
test
dec
popa
stc
notb
mov
outsl
rorb
and
push
scas
mov
fstpl
mov
mov
mov
sbb
idivb
xor
jmp
subl
mov
aaa
pop
push
mov
leave
fdivr
xchg
cli
push
fstpl
mov
pop
cmp
jle
push
pusha
clc
jg
imul
sub
jb
mov
push
mov
xchg
cmp
and
mov
clc
popa
bound
adc
cmp
jmp
fdivl
aaa
mov
pop
or
adc
into
cmp
jmp
out
dec
fiadds
xchg
in
addr16
hlt
xlat
daa
sub
mov
mov
loopne
test
pop
out
jno
inc
push
add
repz
movsb
ss
cli
lods
sub
sub
push
pop
xchg
pop
mov
sbb
testl
cmp
or
fisttpll
push
gs
jmp
jge
bound
jb
mov
jno
rcrb
decb
mov
xlat
lock
repz
adc
incl
scas
inc
ret
mov
aaa
and
in
cld
mov
jbe
clc
inc
enter
jbe
jmp
jne
xchg
test
or
jecxz
jecxz
sti
jp
in
mov
add
ljmp
fsubl
fwait
outsb
cld
pop
lock
adc
lret
mov
mov
or
push
gs
xchg
aaa
mov
mov
sub
outsb
lcall
movsl
je
lea
addr16
and
ror
push
in
jo
rcrl
xchg
mov
add
and
sbbl
inc
mov
sub
cmp
outsl
lods
popa
inc
fistl
pop
arpl
cmp
jecxz
sub
jl
push
dec
sbb
xorl
mov
rorl
cmp
imul
jmp
add
gs
xchg
mov
popa
clc
imul
xor
sub
pop
dec
mov
ja
lock
jle
and
shrb
std
sbb
add
jno
pop
lea
js
lret
mov
into
jb
cmpsl
push
push
mov
and
jl
pushf
jb
stos
cmp
xchg
inc
fidivrl
movsb
popa
jl
jnp
sbb
iret
lods
sub
xor
mov
sub
mov
pop
and
xchg
xor
jmp
pop
push
data16
pop
push
rcl
add
int
hlt
aad
cmp
add
repnz
mov
das
jae
popa
xor
pusha
insl
sbb
cwtl
jle
push
mov
jns
in
js
and
cmpsl
insb
call
and
ds
out
jns
daa
cmp
pop
insb
dec
cmpsl
out
call
fstps
push
pop
insb
jecxz
dec
fdivs
push
pop
cmp
enter
pusha
jmp
sub
mov
push
repnz
inc
dec
popa
add
jae
jge
dec
movsb
jge
xchg
scas
ficoml
test
ljmp
xor
lods
mov
mov
mov
and
das
inc
mov
xlat
inc
push
pop
mov
icebp
mov
push
mov
dec
cmp
or
dec
and
mov
arpl
fs
popf
jecxz
inc
pop
mov
or
cmp
popa
clc
ja
mov
adc
cmc
and
sub
push
test
adc
pushf
loope
cmp
dec
pop
jl
add
xchg
stos
and
or
mov
std
inc
outsb
jmp
mov
xchg
aad
jbe
xlat
negb
sub
mov
fstpl
test
movsl
dec
cmpsl
cmp
xor
loope
stos
mov
cmpsb
add
sub
pop
rorl
cmp
aad
lods
es
xchg
sbb
jl
dec
push
and
dec
mov
sbb
fcomps
ds
adcl
repnz
stos
push
notl
pop
fisubrl
lods
iret
loop
sbb
scas
adc
xchg
scas
dec
cmc
and
jmp
out
xchg
lock
repnz
push
push
repz
pop
inc
imul
adc
das
fsubs
pop
push
adcl
rol
adc
mov
or
dec
adc
push
mov
or
xor
aam
imul
sbb
das
lret
les
cli
jg
test
pop
sahf
xor
stc
or
xchg
cmp
mov
push
int
pop
in
sbb
cmpsl
stc
fdivrl
inc
cld
scas
jbe
imulb
sahf
std
into
add
and
inc
fnstenv
shll
and
cmp
int
cwtl
cs
push
xchg
sub
cli
je
pop
sbb
mov
push
flds
mov
lret
rorb
test
inc
or
pushf
mov
add
pusha
fcomi
lods
ret
sbb
rorl
inc
lock
jmp
or
cwtl
sahf
mov
cmp
dec
push
cmpsl
push
frstor
out
cmp
stc
loop
dec
movsb
adc
enter
pop
repnz
mov
mov
cs
xchg
and
stos
outsb
popf
pusha
sbb
mov
sbb
sub
mov
nop
out
add
cs
sbb
andb
or
mov
mov
es
push
ret
push
or
mov
sbb
pusha
hlt
rorl
arpl
andb
mov
push
xor
sarb
sub
jae
pop
out
xchg
xchg
mov
pop
stos
dec
pop
out
addl
xor
pushaw
inc
hlt
lds
xchg
rcrb
aaa
ret
jg
pop
out
mov
fildll
dec
jae
inc
test
mov
lods
mov
jp
iret
mov
pop
sub
shll
imul
enter
mov
xor
rcr
cmp
and
cmp
add
ret
fwait
xchg
faddp
in
mov
sahf
and
into
sahf
mov
xchg
mov
sahf
cmc
hlt
xchg
push
jp
cmp
nop
cmpsb
xor
xor
js
and
sahf
push
jmp
dec
push
mov
mov
mov
jle
int3
push
push
movsb
pushf
cmp
or
loope
arpl
xchg
jl
xor
leave
pop
dec
sub
push
mov
xchg
sub
lock
mov
popf
pushf
lret
fnstenv
mov
ret
mov
pop
stc
int
loopne
rcrb
movsb
dec
add
fldenv
jno
incb
addr16
push
jge
pop
bound
push
insl
pop
das
sub
sahf
divl
or
lds
out
xor
sub
mov
inc
lcall
inc
and
adc
mov
testl
popa
jnp
mov
data16
sbb
ds
rorb
mov
mov
fwait
mov
and
imul
outsb
xor
pop
jmp
int
and
add
movsb
xchg
mov
mov
cmpsb
es
iret
sbb
mov
idivb
push
clc
push
rorl
push
and
sub
dec
jecxz
xor
push
fidivl
mov
sub
in
movsl
sahf
cmpsl
out
movsl
mov
jne
cwtl
sub
lret
pop
mov
mov
lea
in
push
dec
icebp
mov
lret
and
push
mov
or
ja
cmp
mov
jo
adc
push
jae
test
mov
or
imul
fldcw
cmpsl
cmp
or
in
add
or
jbe
cmp
mov
iret
mov
and
es
inc
or
pop
adc
dec
sbbb
pop
hlt
xchg
lds
cmpsb
popa
push
movsb
movsl
cmp
cmpsb
cmc
fcmovu
js
jle
add
mov
sub
jg
xlat
les
cmc
idivl
rolb
ret
sub
dec
or
iret
jg
jle
pop
push
lahf
sub
hlt
jne,pt
mov
dec
mov
mov
adc
into
outsb
add
fdiv
adc
test
hlt
sub
jg
xchg
sbb
ja
js
movsl
cmp
test
int3
push
test
pop
mov
adc
push
negb
xor
imul
loopnew
xchg
mov
or
inc
das
cmp
pop
nop
add
push
jbe
sahf
mov
outsb
lds
push
sbb
xchg
loopne
mov
cwtl
add
push
scas
sub
mov
push
flds
out
data16
jp
icebp
call
mov
xor
cmp
xor
nop
pop
hlt
push
xchg
xchg
mov
in
pop
sub
incl
lahf
idiv
mov
lods
push
mov
mov
fninit
cmp
adc
popf
loopne
mov
cmp
pusha
fiadds
or
cmp
mov
sbb
pop
mov
push
fstpt
in
add
and
xor
sub
rclb
inc
inc
sub
jnp
sub
xor
add
xchg
rcrl
test
movsl
int
xorb
les
arpl
scas
jno
xlat
shl
sub
and
sti
shll
data16
mov
and
aaa
pop
dec
sbb
push
movsb
fcompl
pop
cmpl
mov
int3
mov
jnp
fiaddl
inc
sbb
jp
mov
in
scas
cmpsl
xchg
mov
rol
repz
aam
adc
pop
ja
xchg
cmpsl
jecxz
sbb
aas
add
bound
lret
mov
jp
mov
jle
jmpw
cmc
je
mov
fisttpl
or
shrb
cld
insl
nop
daa
add
es
aad
testl
movsb
dec
fdivrp
je
sbb
sahf
loope
sbb
enter
vandnps
ret
in
adc
xor
pop
nop
jo
sahf
rcrl
test
lret
pop
jnp
mov
pusha
or
adc
mov
int
in
arpl
push
jnp
shl
ja
scas
out
dec
sbb
xchg
dec
insl
mov
xlat
out
dec
dec
push
fucomp
mov
xor
movsb
aam
xchg
mov
inc
xchg
mov
idivl
push
sbb
push
pop
jle
pop
mov
shll
sub
inc
fiaddl
adcb
pop
push
ret
pop
mov
add
xor
ds
clc
in
imul
repnz
jg
lds
pop
daa
push
call
mov
pop
sbb
lret
mov
fnstenv
sub
dec
and
or
jecxz
mov
pop
jmp
lret
inc
or
jae
adc
sub
scas
inc
mov
cmp
xchg
addr16
lcall
sub
mov
stos
or
push
scas
push
cmp
mov
lea
divb
lock
shlb
pop
xchg
repz
js
adc
cmp
cwtl
sub
fmuls
sarl
rorl
inc
fcomip
pop
fnsave
mov
lret
add
pusha
cmp
mov
inc
lahf
mov
mov
jo
aas
mov
stc
mov
adc
aas
mov
or
add
in
adcl
or
dec
mov
jge
cs
sbb
sub
mov
cmc
push
and
cmp
add
sahf
dec
mov
clc
mov
mov
mov
dec
enter
ret
repz
loopne
and
xchg
ds
dec
cmp
lods
test
xchg
xchg
mov
out
pop
outsb
clc
dec
jns
aam
aas
adc
mov
mov
call
js
xor
pop
je
pop
adc
jp
mov
out
int3
and
or
pop
cmpb
pop
mov
fwait
jne
lret
sbb
adc
push
pop
push
ljmp
ljmp
sahf
xchg
cmp
stos
rorb
stos
inc
addr16
sbb
fbstp
lcall
loope
inc
andb
dec
fisubrl
adc
sub
jp
cwtl
pop
push
mov
mov
xchg
adc
loopne
insl
xor
fstpl
popf
sub
sbb
enter
out
aas
add
sub
nop
jo
jnp
sub
pop
scas
mov
mov
xchg
jne
sbb
rcrb
pop
iret
jge
jb
add
xor
adc
push
rcrl
icebp
pop
loop
xchg
fdiv
cmp
push
add
cmpsb
aaa
cmpsl
leave
cmp
cs
mov
jbe
daa
mov
addr16
mov
pop
mov
in
fnstenv
shlb
jp
and
fucomp
sti
push
push
mov
jns
inc
jmp
push
sbbl
cld
stos
pop
aad
ja
pop
pop
mov
jmp
jo
scas
sub
pusha
mov
mov
sbb
int3
icebp
sbb
mov
add
dec
adc
pop
ret
cmp
or
add
orl
idivl
les
popa
in
mov
pop
loop
jo
out
or
adc
stos
mov
and
les
mov
inc
xor
push
shlb
add
ja
inc
cs
mov
sub
xor
push
xchg
push
jno
mov
push
flds
repz
testl
nop
popa
gs
int3
mov
in
fwait
cld
pop
ret
xor
jp
popa
mov
fwait
xchg
cld
adc
mov
xchg
and
mov
je
mov
jo
xor
lcall
xchg
addr16
sarb
adc
pop
pop
push
push
push
jbe
or
adc
sbb
or
sub
push
jbe
subb
mov
push
pushf
flds
das
fcmovnb
in
daa
std
mov
jmp
andb
les
and
loop
dec
pop
cmpl
adc
mov
adc
gs
scas
and
mov
mov
vphaddudq
and
or
cmp
daa
mov
nop
mov
int3
cmp
cmc
xchg
push
jg
push
mov
and
mov
mov
mov
lods
movsl
sub
leave
dec
ds
xor
mov
push
ljmp
lock
cmp
add
mov
fsubrl
outsl
push
xchg
outsb
mov
push
std
mov
fld
pusha
testl
enter
xor
movsb
fiaddl
inc
sub
jle
xchg
sub
mov
ret
mov
mov
rorb
adc
pop
push
test
leave
hlt
adc
add
adc
mov
xor
cmpsl
ds
pusha
sbb
push
repnz
lods
bound
aas
fcmovb
xchg
shr
jns
cmp
mov
xchg
aaa
out
xor
mov
sti
sbbb
adc
cld
mov
bound
and
pop
jp
sbbb
jg
movsb
jne
lahf
mov
jbe
mov
call
xchg
test
rorb
out
scas
aas
push
sub
pop
inc
adc
aad
fisubrs
psraw
xchg
jb
sbb
mov
dec
dec
xor
or
adc
jno
push
sub
xchg
lods
inc
push
rcrb
stc
add
hlt
push
pop
pushl
jle
int3
push
jecxz
fsts
adc
daa
sti
lds
inc
sti
imul
daa
cmp
stos
and
xchg
fxch
andl
sahf
inc
sub
xor
jnp
cmp
pushf
jmp
inc
fiadds
and
add
int
lea
cmp
leave
push
jmp
sbb
or
into
mov
cmp
flds
push
js
mov
inc
lock
add
push
popf
cmp
outsb
test
mov
lods
imul
repz
jae
cmp
es
mov
outsb
fistpl
mov
adc
cmc
sbb
aas
xor
aad
jne
int3
int
pop
insl
cmp
cmp
sbb
inc
scas
cmp
mov
aam
pop
lahf
jmp
xchg
shll
mov
sbb
adc
dec
xchg
and
push
icebp
jae
adc
rorb
jle
aam
sbb
lds
lods
je
cmp
addr16
jle
mov
xchg
incb
xorl
cmp
fwait
add
sahf
clc
mov
rorb
pop
pop
idivb
add
jle
jo
pushf
xchg
insb
xchg
add
sahf
movsl
xchg
fidivrl
std
mov
arpl
imul
dec
mov
out
push
or
in
mov
push
stos
repnz
xchg
fdivrp
push
xor
adc
gs
repz
outsb
lret
loopne
jl
mov
popf
aaa
pop
sub
pop
jl
pop
pop
add
je
sub
out
outsl
daa
push
dec
add
je
ret
xor
add
in
push
test
les
sbb
mov
hlt
pusha
inc
inc
add
sub
jno
sub
adcb
push
inc
ret
inc
push
pand
adc
xchg
call
div
popf
ficoml
pop
push
je
fcmovnb
cmp
flds
pop
pop
mov
jl
xchg
jg
into
push
add
loope
loopne
mov
mov
jle
pop
int3
out
sbb
sub
xorl
pop
xchg
cld
cwtl
arpl
gs
data16
scas
shlb
std
pusha
mov
jle
mov
jmp
jp
out
jb
dec
mov
push
xchg
in
sbbl
nop
mov
mov
jg
pusha
push
mov
xor
mov
insl
mov
inc
adc
outsl
or
push
hlt
nop
int
and
cmp
sahf
test
xchg
and
push
dec
icebp
xor
mov
mov
or
inc
out
clc
adc
sub
lcall
fnsave
cwtl
cs
pop
repnz
scas
push
in
adc
sub
mov
push
cld
mov
arpl
inc
lss
cmp
icebp
add
adc
adc
xchg
jl
sub
or
xor
daa
daa
flds
dec
scas
mov
mov
mov
or
int
adc
add
adc
int
sbb
ret
fstpl
cld
shrl
inc
insb
xlat
xchg
arpl
mov
lds
cld
pop
pop
lock
shll
lret
fsts
mov
cmc
sbb
sti
out
cmp
dec
sub
cmpsl
lcall
testl
test
push
dec
stos
xchg
ret
rol
push
int
or
cmp
dec
movsb
mov
cmpb
mov
mov
rcrl
jnp
sarl
or
xlat
outsl
xchg
aas
das
mov
fdivrl
sbb
loopne
adcl
mov
hlt
mov
mov
popf
ret
ja
stc
sub
xchg
iret
daa
push
in
pop
out
dec
inc
ljmp
dec
lods
inc
xchg
pusha
xchg
cmp
pop
insb
mov
sbbb
jae
mov
pop
sbb
insl
pusha
mov
lret
loopne
inc
popf
dec
fnsave
out
cmp
sti
test
fldcw
mov
dec
mov
sub
movb
lock
pop
scas
test
adc
adc
xor
cs
xor
pusha
test
pop
mov
shlb
sbbl
adcl
arpl
not
pop
adc
cmpl
icebp
out
int
cmc
fadd
mov
adcl
fwait
leave
pop
stc
test
push
jns
arpl
sti
lcall
mov
cmpsl
cmpb
mov
sub
mov
push
stos
mov
ljmp
hlt
xor
decb
es
xor
pop
lret
cld
test
adc
lret
outsl
dec
outsb
jno
outsl
testb
lcall
test
fsts
popf
lahf
cmc
inc
jle
aas
mov
mov
fimuls
sti
and
inc
jbe
inc
int
mov
and
gs
cmc
ficompl
sbb
mov
sub
aad
jmp
cmp
adc
xchg
push
data16
xor
lret
test
and
xlat
lahf
ja
xor
ret
dec
jbe
std
in
les
pop
xchg
mov
pop
mov
xor
xchg
enter
inc
add
mov
or
jno
sub
stc
nop
sub
aas
sbb
ds
xchg
int3
or
mov
and
pop
jo
clc
das
cmpsl
fldt
inc
xor
adc
lds
sti
fwait
cmp
xchg
jns
ret
xchg
mov
sub
enter
scas
or
stc
push
push
aaa
popf
jo
popf
idivl
add
es
push
jl
loope
in
push
movsb
sti
outsl
mov
xchg
and
inc
jecxz
test
addr16
scas
rep
and
dec
add
jge
mov
cmp
pop
mov
jb
int3
push
out
std
das
mov
add
cmpl
stos
out
or
fs
mov
or
xchg
sub
repz
fdivs
mov
cmp
in
mov
stos
lcall
and
scas
inc
int3
movsb
ret
in
shr
adc
push
in
or
mov
dec
in
mulb
sbb
cmp
pop
dec
decb
inc
out
xor
int
inc
fisubrs
push
jcxz
mov
int3
mov
or
loope
stc
mulb
inc
imul
dec
add
shl
xchg
fsub
mov
cltd
dec
out
rorb
jmp
dec
xchg
stos
outsb
push
popf
mov
andb
std
je
or
lret
mov
push
mov
pop
cmp
lret
xchg
dec
int
jle
or
test
mov
scas
fnstenv
sub
sti
je
adc
add
mov
test
and
sbb
mov
out
test
xor
iret
sbb
popf
mov
xorl
pop
sub
mov
push
sbb
xchg
cmpsl
ds
push
leave
sbb
outsb
test
shrb
ljmp
cmp
out
lahf
sub
fwait
mov
mov
daa
jmp
pop
div
mov
fistps
scas
call
xchg
jb
gs
leave
mov
test
clc
data16
push
cmp
int3
jno
mov
cmpsl
sbb
push
enter
cld
push
inc
dec
movsl
push
or
inc
fstpl
je
out
jle
and
in
cmp
outsb
cmp
sbb
ss
shrl
fsubp
add
in
and
stos
test
lret
movl
cmpsl
and
mov
cwtl
jle
lret
nopl
bound
hlt
xchg
mov
insl
pop
ja
inc
test
sbb
int3
fs
dec
dec
add
sbb
popa
sarl
inc
lods
push
dec
mov
js
shlb
mov
fidivl
call
sbb
scas
mov
add
sti
in
std
sub
lahf
xor
lcall
ficoms
dec
loope
adcl
rcrl
inc
fimull
dec
jg
cmpsb
xchg
or
cmp
sub
lods
mov
ret
outsl
cmp
aad
cmp
xchg
dec
int3
daa
mov
shrl
push
lea
dec
mov
push
out
mov
and
seto
pushf
push
and
inc
xor
test
outsb
pop
cs
mov
add
push
mov
into
sti
jbe
or
test
or
inc
shlb
pextrw
dec
or
das
push
xor
xchg
inc
sbb
dec
or
xor
gs
cmp
test
inc
cmp
fs
push
jmp
sbb
cwtl
lods
xchg
mov
push
ret
stos
inc
xlat
fildll
adc
pop
divb
imul
add
addr16
sbb
or
pop
out
cmp
inc
sub
inc
push
lock
mov
jno
cld
rcrl
fsubl
sahf
mov
push
add
jmp
lret
popf
xor
mov
mov
or
dec
sbb
and
sbb
push
inc
repnz
lods
stos
jne
ja
jno
loopne
sar
leave
fnstcw
push
mov
xchg
adc
mov
shrb
add
mov
cmp
add
outsl
adc
arpl
cmp
xor
jg
push
pop
subb
or
jle
test
xchg
mov
jecxz
movsb
addl
fadds
lock
cmpsb
sub
pop
movl
xchg
enter
inc
cli
push
adc
pushf
cmpl
mov
nop
pop
sub
fisttps
adc
data16
sub
xchg
int3
xor
sbb
jo
shll
repnz
mov
cli
cmp
push
lcall
dec
pushf
pop
xor
lcall
imul
inc
adc
or
cli
test
inc
or
mov
jb
push
fildll
adc
movsl
mov
and
mov
arpl
fs
aaa
fmuls
add
scas
sbb
adc
pop
aaa
cld
call
dec
loop
add
xchg
daa
cmp
mov
icebp
lods
subl
out
addb
nop
jbe
aaa
or
cli
mov
stos
je
out
adc
dec
test
xchg
jno
sbb
mov
adc
pop
shll
std
test
or
adc
iret
inc
divl
je
push
in
seta
add
fcompl
or
cld
pusha
jnp
or
andb
icebp
xchg
jbe
stos
push
sub
cmpsb
xlat
inc
sbb
ja
pop
and
rclb
shl
mov
jno
inc
mov
shl
out
push
aad
pop
or
push
hlt
mov
nop
sub
mov
mov
scas
dec
movsl
out
fsubrl
adc
mov
fidivl
lock
shll
jb
cmp
dec
dec
mov
das
lds
iret
dec
mov
call
aad
ljmp
in
out
cmc
rolb
jl
shrb
sub
ds
mov
and
leave
insl
int3
pop
sbb
lahf
mov
frstor
jbe
xchg
mov
push
cli
in
or
sub
cmp
in
xor
lods
sbb
jne
mov
popa
xlat
mov
mov
sub
and
jo
frstor
inc
out
inc
add
das
fcompl
mov
bound
mov
movsl
cmp
cmp
pop
push
cmp
and
mov
lods
inc
cli
idivb
bound
pop
and
mov
into
cli
repnz
adc
adc
mov
push
xor
adc
fcompl
addr16
das
movb
jne
popf
and
je
pusha
sub
inc
stos
mov
and
fstps
or
xchg
outsb
mov
add
xchg
cmc
mov
aaa
out
addr16
imul
ds
es
mov
push
mov
mov
jp
adc
jb
add
out
cmpsl
into
add
sti
mov
xor
adc
xchg
adc
xchg
cwtl
inc
jmp
jg
sbb
jbe
or
push
inc
jo
nop
mov
mov
rcrb
ds
mov
mov
sub
lcall
popf
mov
dec
push
notl
scas
sub
popf
stc
scas
push
xor
testl
jo
pushf
push
inc
ffreep
cmp
jle
mov
popa
push
xchg
mov
fistpl
mov
mov
cmp
loop
push
adcb
fcomp
jno
sub
cli
xlat
clc
dec
in
sub
insl
outsb
stos
adcl
mov
aad
test
and
data16
lea
xor
jbe
cwtl
and
sub
loop
imul
popf
pop
imul
fidivrl
outsl
adc
cmp
pop
scas
negl
xlat
nop
shll
repz
mov
jne
imul
or
das
pop
cwtl
cmp
out
or
pop
call
cmp
pmaxsw
gs
setbe
and
adc
clc
stc
fdivrs
inc
xlat
pop
mov
pusha
shll
in
cmc
xchg
lock
mov
pop
or
repz
cld
js
xchg
add
cltd
test
fbstp
push
rcrb
or
dec
pop
jbe
arpl
das
popf
add
inc
icebp
pusha
xor
sbb
push
jbe
inc
mov
data16
fsubl
pusha
xchg
mov
add
or
cmp
cmp
adc
lods
mov
xor
test
xor
fwait
cmp
int3
sbb
pop
repnz
sbbb
sbb
ds
or
rorl
and
sub
loope
jno
mov
scas
sbb
ds
sti
dec
insl
xchg
lahf
cs
movsb
faddl
add
pop
mov
push
lcall
dec
push
jecxz
test
xor
mov
in
fisubrl
pop
ja
inc
jo
lea
mov
xchg
arpl
ret
enter
imul
mov
jg
stos
scas
xor
nop
mov
xor
sbb
cmp
inc
fimuls
gs
adc
ret
hlt
jnp
jns
les
or
mov
push
mov
jl
mov
and
fdivl
mov
inc
xchg
add
push
cmp
adc
fwait
cmpsl
ljmp
sub
mov
inc
test
fwait
daa
or
jle
cmp
sti
xor
test
loope
cmpsl
adc
sbb
jae
out
sub
testb
in
out
ljmp
sub
repz
jecxz
inc
pushf
or
mov
adc
sub
adc
std
ret
movsl
lock
cmp
cs
push
mov
dec
or
mov
inc
mov
add
and
roll
sbb
or
push
add
call
sub
add
cmp
out
loope
das
xor
dec
adc
movsl
and
mov
jae
data16
inc
and
xchg
xchg
push
ja
jecxz
aas
adc
fidivl
dec
pop
aam
mov
imul
loopne
ljmp
pushf
scas
repnz
in
andl
sahf
lds
dec
into
pop
jmp
gs
div
dec
dec
cmp
push
cmp
fdivrp
pop
or
push
js
sbb
and
jns
stos
and
lds
mov
je
out
mov
lret
and
adc
xchg
cli
notb
jp
and
setno
xchg
mov
push
jecxz
arpl
sub
xchg
cld
inc
call
popf
push
add
aad
aam
loope
inc
push
sahf
lods
cmpb
pop
mov
xchg
inc
cltd
dec
pop
cli
dec
push
das
inc
pop
fsubrs
xchg
cmp
jmp
adcl
scas
cmp
jge
aam
inc
xchg
daa
or
jmp
push
in
sbb
andb
mov
mulb
sub
aas
fsts
inc
sbb
lret
rcrb
mov
push
insl
sub
mov
inc
out
ret
add
int3
and
sub
lods
test
push
or
push
inc
add
ret
inc
adc
dec
lahf
lock
mov
sbb
sti
xchg
sbb
in
cmp
adcb
je
adc
out
push
lods
sub
mov
or
cmp
insl
lods
adc
xor
hlt
dec
fcomi
pop
mov
mov
cmp
mov
mov
xchg
popa
cltd
jb
inc
adc
mov
push
jl
je
xchg
rcr
or
mov
push
cmp
or
imul
lret
cmpsl
jp
inc
cltd
cmpsl
push
cmpsl
jmp
into
and
loopne
add
imull
pusha
push
das
push
fildl
out
out
bound
sbb
aas
adc
in
je
mov
sti
push
loopne
testl
shrl
lea
mov
adc
jmp
loop
jo
adcb
mov
test
lret
insl
xor
xchg
lea
hlt
lock
shlb
outsl
lock
lea
lods
mov
adc
andl
or
out
push
hlt
lea
adc
sbb
cs
sub
pusha
jge
cmpsl
in
cmp
loope
push
sub
scas
dec
jge
mov
test
nop
fdivrs
nop
sbb
mov
aad
ja
imul
pusha
xor
cmp
xor
xlat
add
int3
arpl
xchg
stos
orb
mull
sbb
dec
cmpb
jbe
mov
push
xlat
sub
test
data16
pushf
jne
mov
std
push
push
scas
adcl
ss
mov
mov
lahf
inc
cwtl
loop
jge
xor
pop
mov
add
mov
mov
popf
jbe
ret
push
dec
std
push
mov
or
xor
cld
push
std
sbb
xor
jp
mov
int
movsl
sbb
mov
push
scas
insb
mov
xorb
mov
jp
adc
or
sub
std
push
push
xchg
fnsave
sarl
mov
mov
nop
adc
outsb
sub
cmp
and
clc
test
clc
jne
jg
int3
xchg
sbbb
or
ss
pop
inc
stc
test
mov
sahf
xchg
mov
pop
imul
aas
aam
cltd
outsl
fdivrl
out
fidivrs
daa
mov
lods
mov
daa
test
mov
loop
mov
stos
aas
and
xor
add
mov
ficoml
movsb
les
adc
dec
mov
xor
pop
push
iret
in
cmp
in
xor
push
movsl
pop
popa
adc
in
loop
lcall
inc
fdivs
cld
inc
or
sahf
cltd
insl
xchg
mov
pop
inc
adcb
cltd
movnti
das
popa
jp
xor
jg
add
and
leave
imul
popa
clc
les
push
lret
sub
or
sub
test
fisttpl
int3
jle
jmp
add
fstpt
push
sbb
les
push
outsl
popa
out
pusha
jp
stos
xor
mov
mov
sbb
mov
into
pop
xchg
mov
mov
and
cltd
in
insb
pop
movsb
mov
iret
jne
add
sbb
subb
fsubs
cmp
jg
lea
add
sbb
and
pop
pop
mov
imull
jno
enter
xor
pop
ss
xchg
mov
arpl
pop
dec
cmc
mov
xlat
add
sbbl
inc
fidivl
sti
dec
mov
fadds
testl
dec
call
xchg
sub
mov
sub
arpl
cmp
cmpsb
push
mov
push
push
in
sub
out
aam
test
xor
push
mov
shl
push
incb
clc
test
scas
cld
push
xchg
inc
lds
push
call
adc
aas
push
mov
mov
inc
xlat
lcall
inc
jl
insb
daa
mov
mov
or
push
rcr
fbstp
std
movsb
jae
mov
sbb
sbb
movsb
xor
mov
dec
lahf
push
stos
jbe
rcl
pop
pmulhw
jmp
insl
inc
insb
repnz
sbb
push
fimuls
lea
pop
dec
cmpsb
inc
fnstcw
bound
mov
fists
lahf
movl
and
ljmp
fimull
cmp
orl
or
addr16
iret
data16
lcall
iret
cltd
nop
sbb
ret
repz
cmp
daa
sbb
mov
imul
lock
or
push
jns
or
or
mov
lret
hlt
xchg
pushf
xor
and
mov
mov
push
arpl
lahf
jo
scas
mov
jno
cmpb
sbb
int
lock
imul
push
cmp
inc
mov
dec
jmp
int
xchg
incl
and
dec
pop
test
icebp
mov
jbe
sub
lret
push
pop
das
in
mov
das
and
ret
ret
repnz
in
fwait
aas
inc
movsb
aaa
lea
insl
dec
loopne
adc
inc
xchg
fisubrl
lcall
outsb
aas
cmp
shll
xchg
sub
push
dec
mov
jp
es
pushf
adc
lahf
ss
mov
int
cli
cli
pop
dec
in
sbb
add
add
mov
int
in
mov
cmp
pop
lods
fldenv
scas
sub
dec
pop
sti
fidivrl
addr16
daa
push
pop
bound
ja
push
ljmp
jle
add
pop
xor
push
jl
mov
test
int
shrb
stos
cli
sbb
sbb
push
cmp
adc
int
hlt
ficompl
scas
and
js
jp
dec
mov
push
jae
add
pop
xor
decl
cltd
mov
push
adc
out
adc
call
xor
mov
imul
mov
daa
jb
aam
mov
xlat
jo
dec
xchg
cmp
insb
cmp
mov
popf
lods
fcomi
dec
in
and
push
fstl
negl
adc
or
xchg
ror
les
ret
rol
loopne
xchg
daa
push
das
and
aaa
sub
jecxz
or
jg
cltd
push
xchg
les
es
ret
adc
hlt
push
in
into
dec
pop
fsubr
loope
pop
sbb
inc
inc
dec
adc
cmp
inc
fisttps
sbb
icebp
mov
xchg
pop
push
pop
pop
in
jle
jge
mov
in
stos
cmpsb
and
ja
mov
mov
add
es
sar
push
adc
loop
clc
aaa
shrl
sbb
dec
call
or
je
dec
mov
pop
sbbb
in
in
push
lds
es
inc
in
cmp
out
jp
int3
arpl
fwait
jno
lock
jae
adc
sub
enter
repnz
ljmp
aam
into
cmpl
or
je
call
xchg
mov
mov
lcall
das
and
sbb
jns
bnd
stos
lahf
in
jmp
testb
dec
xchg
sub
xor
jns
lcall
or
test
sbb
insl
adc
in
test
dec
mov
mov
leave
xor
mov
or
divb
inc
push
mov
je
pop
mov
add
test
enter
mov
xchg
enter
imul
jge
fwait
add
shll
xchg
loop
insb
enter
mov
fisubrs
hlt
sub
sub
lea
xchg
push
in
clc
pushf
scas
and
xchg
jae
cmp
leave
xor
push
xchg
sbb
in
test
jb
pop
mov
dec
xchg
sub
mov
scas
inc
pop
stos
and
roll
std
pop
out
lods
jb
je
int
fdivrl
pusha
sbb
addr16
in
xchg
popa
ja
frstor
outsl
push
adc
test
jge
sub
dec
aad
js
pop
cld
lcall
sub
add
inc
push
cmp
sbb
int3
dec
mov
lds
mov
inc
mov
adc
daa
adc
addr16
push
xlat
mov
jae
pop
fildl
bound
addr16
icebp
fmull
mov
adc
mov
pop
stos
lods
mov
icebp
cmc
aas
testb
xor
sbb
movsl
sbb
add
shrb
data16
jns
cmpb
test
mov
hlt
mov
mov
cmp
popa
imul
xor
xor
jae
sub
xchg
xchg
push
int3
mov
add
ret
fildl
adc
lret
sub
into
jbe
add
or
mov
xlat
cmp
ljmp
adc
lret
push
fdecstp
jl
jnp
fdivl
pushf
xchg
pop
ljmp
cmpsb
imulb
cmp
mov
or
mov
lcall
adc
lods
xchg
push
mov
frstor
or
jge
xor
lock
test
dec
or
push
imul
imul
push
fwait
jnp
jg
mov
push
push
xbegin
fwait
aam
montmul
cmpsb
dec
fcomip
loopne
stc
add
stc
addr16
xor
and
cmp
daa
sahf
xchg
mov
in
fnclex
movb
ror
mov
pop
xorb
rorl
inc
stos
call
ljmp
inc
mov
push
data16
push
mov
jbe
mov
dec
in
lods
mov
adc
push
jmp
pushf
xor
adc
or
lds
sbb
lea
ds
std
cmpsb
insb
sub
cmp
pop
dec
mov
adc
rcl
xor
add
cwtl
pop
aaa
jge
out
sub
dec
pop
mov
mov
inc
cmp
jbe
mov
sbb
jg
mov
cltd
lcall
fisttpl
lret
inc
out
cs
sbb
jno
sub
mov
pusha
sti
in
xor
int
sbb
xlat
jmp
pusha
pop
mov
jp
inc
scas
inc
xor
filds
push
mov
jno
mov
out
mov
hlt
roll
cld
push
cmpsb
sbb
ret
stc
cwtl
and
mov
push
pop
je
push
pop
in
add
je
dec
mov
sarl
js
cmpb
shrb
popa
daa
inc
cltd
cmpsb
jno
fdivr
xchg
add
lods
cmc
leave
ficompl
push
das
jmp
je
data16
pop
aas
mov
es
inc
cltd
dec
push
ffreep
shll
jg
sub
stc
pop
or
add
sbb
xchg
scas
call
test
stos
adc
jecxz
daa
lcall
jmp
loopne
repz
repz
nop
jo
push
pusha
lock
jb
fst
push
ja
cmp
dec
popa
push
fsubs
icebp
cmp
in
add
xchg
stos
or
push
mov
inc
cwtl
sbb
and
stos
aam
not
inc
cmpb
repz
or
cs
fistpll
and
outsl
cmp
imul
leave
and
sahf
sub
out
adc
dec
cmp
shl
sbb
push
pop
jg
dec
lds
movsl
icebp
xchg
shll
ljmp
mov
and
cmp
inc
test
sub
xchg
and
dec
lds
push
pop
loop
cmpsb
adc
subl
add
xor
loop
push
ficompl
or
jl
or
or
movsb
cmp
shrb
std
shll
cld
jg
push
daa
sbb
pop
aas
cltd
data16
dec
add
mov
cmp
in
out
in
jg
out
daa
xchg
stos
or
ret
mov
add
pop
sahf
or
add
inc
pusha
mov
shlb
jge
stc
js
push
loopne
inc
lret
dec
cmpsl
pop
push
jle
lock
sbb
icebp
dec
sahf
cltd
std
sub
xchg
dec
shlb
fisttpl
in
cmpl
xchg
pop
dec
sbb
mov
int3
mov
insb
mov
ret
mov
shl
jmp
inc
or
fldenv
lods
movb
push
sbb
mov
cmp
mov
and
lock
ja
mov
test
and
mov
mov
jbe
xor
test
arpl
rclb
xlat
push
stos
mov
inc
stos
pushf
frstor
sar
test
filds
cmp
mov
sbb
xchg
fstps
pushf
out
shrb
sub
xchg
dec
shlb
inc
neg
xchg
pop
adc
icebp
jae
icebp
imul
sub
dec
lea
cli
or
push
sahf
sub
js
in
in
mov
ret
iret
xlat
je
shll
lcall
jo
dec
filds
ret
call
jmp
and
mov
popa
out
lods
sbb
dec
cmp
and
inc
add
cmp
ja
inc
push
mov
pop
fsubrs
jb
push
into
fsubr
fwait
or
and
in
lea
mov
cltd
fsubl
in
cmp
jge
mov
mov
sub
outsl
dec
nop
arpl
test
pushf
pop
sbb
lods
call
fwait
sub
mov
shrl
inc
push
pop
mov
adc
js
and
cmc
cltd
xor
adc
fadds
sub
gs
lods
add
out
inc
out
incb
sahf
outsb
dec
mov
aam
push
push
mov
fidivrs
xor
mov
xor
sbb
js
sub
pop
push
mov
push
mov
cmpsl
fs
xlat
je
or
nop
xchg
cmp
stc
pop
scas
sub
jecxz
fdivp
dec
shll
insb
add
push
mov
test
adc
std
add
popf
xor
add
or
les
xchg
mov
add
fwait
mov
pop
cmp
sahf
dec
and
stc
imul
popa
lahf
out
mov
sbb
xor
jge
repnz
cmp
add
inc
xchg
mov
repz
pop
dec
dec
sub
aam
scas
leave
mov
mov
jg
outsl
mov
pusha
and
pop
out
xchg
and
jmp
sahf
adc
sub
repnz
jo
jmp
and
sbb
mov
int
add
pop
and
je
jae
loop
lcall
aaa
stos
mov
dec
push
loope
mov
out
xor
iret
mov
or
lret
movsl
push
inc
lea
lret
out
pop
repz
add
cmp
inc
pusha
arpl
fidivrl
mov
arpl
faddl
sub
jne
mov
lahf
dec
mov
shl
add
loop
mov
mov
push
ret
mov
mov
and
pusha
in
cmp
leave
ret
pop
sbbb
in
pop
add
rol
or
push
dec
mov
add
outsb
js
ret
xor
cmp
out
cli
mov
adc
xchg
and
mov
loope
mov
dec
mov
jg
push
pop
call
or
dec
mov
mov
out
cmpsb
imull
jae
jae
dec
out
cmpsl
in
fiadds
in
push
call
leave
or
pop
lret
adc
fdivs
cmp
push
pop
cmp
push
adc
push
ret
mov
pop
and
nop
xchg
mov
aad
inc
nop
iret
xor
xchg
xor
incl
xchg
jle
xor
xchg
pop
incb
lcall
decl
mov
mulb
repnz
call
int3
xor
xor
dec
shrl
js
adc
sbb
aam
inc
iret
decb
jns
andl
repnz
iret
mov
fldcw
fdivp
mov
aas
mov
aad
cmp
rol
les
jl
scas
enter
and
movntq
mov
inc
out
push
jne
aaa
cwtl
lods
hlt
inc
xorl
or
cmpsl
icebp
pop
add
cmc
addr16
fstl
inc
sbb
and
loope
aaa
test
mov
push
outsl
inc
cwtl
mov
or
repnz
cmc
outsb
mov
sub
inc
in
cmp
div
mov
leave
push
mov
mov
sarb
dec
pop
and
leave
aad
cltd
pop
ret
mov
outsb
jo
shrl
pushf
add
mov
add
test
test
xor
pop
xchg
fists
into
cmp
push
sahf
or
mov
mov
push
xchg
sub
inc
push
lret
dec
cltd
sbb
nop
and
in
xchg
add
mov
cmc
pusha
movlps
mov
mov
repnz
dec
in
out
cld
rorl
cmp
inc
in
cmpsb
int3
lock
out
and
sub
enter
dec
data16
loopne
xchg
cmp
sub
jle
out
andl
add
xor
cmpsb
xor
enter
fnstcw
loope
repz
mov
cmp
mov
inc
mov
xor
mov
push
cli
test
cld
mov
sbb
into
fs
or
xchg
xor
jmp
out
inc
ljmp
xor
fstps
popl
add
ret
mov
mov
int
lea
xchg
lret
mov
movsl
loop
into
gs
adc
lret
in
mov
cmp
push
insb
dec
lret
bound
aas
outsb
and
jmp
test
jp
inc
in
imul
cmp
pop
divl
inc
ret
sub
mov
mov
jo
ljmp
and
pusha
or
mov
push
lods
in
loope
loop
subl
dec
fldenv
cmp
sbb
clc
fstpl
cmc
push
arpl
pop
gs
clc
rclb
dec
repnz
shll
test
dec
add
jecxz
shlb
adc
cmp
call
add
inc
ljmp
pop
or
cmpsb
jmp
sub
jo
les
jno
mov
les
testb
cmp
or
mov
add
adc
ret
and
iret
sbb
insl
or
and
xor
sti
std
and
ficoml
lods
cmpl
dec
in
ja
mov
vpcmpgtd
mov
out
test
sub
scas
sahf
lret
mov
adc
inc
mov
sbb
cmp
pushf
pop
in
nop
mov
sbbl
in
clc
das
fs
pusha
std
adc
addl
jnp
mov
lahf
xchg
ja
inc
xor
mov
xor
ljmp
jno
movsb
scas
add
test
adc
lods
push
xor
shlb
push
mov
jg
sub
adc
popf
push
stos
mov
shl
aad
loope
in
leave
adc
push
pop
xor
and
push
push
pop
mov
pop
lea
data16
sbb
mov
sahf
jecxz
rolb
xchg
and
arpl
add
mov
aas
loope
sub
ret
test
stos
push
and
into
fisubl
fisttps
mov
out
mov
sti
outsb
dec
cwtl
mov
lret
xchg
jecxz,pt
shlb
cmp
or
pop
cmp
in
testl
inc
adc
notb
jb
and
xchg
or
in
xlat
in
cwtl
das
push
inc
xchg
jb
jecxz
repnz
sub
jb
cmp
lahf
push
imul
cmp
imul
inc
shrl
jecxz
mov
mov
mov
mov
mov
mulb
pop
lahf
mov
fidivs
subl
mov
xor
jge
sub
xchg
test
idivl
iret
fldt
xchg
adcb
jb
push
mov
xchg
or
mov
pop
push
jb
aas
dec
cmp
addr16
ja
xor
sub
out
add
sub
fbstp
add
jge
jmp
pop
cwtl
inc
and
cmp
push
jmp
push
stos
mov
dec
stc
dec
add
in
lret
push
stc
pop
sbb
cld
push
rolb
adc
pop
adcb
pop
mov
push
shrl
cmp
mov
cmp
xchg
test
jbe,pt
adc
outsb
add
test
repz
in
jg
pop
xor
mov
ds
aas
and
push
dec
pop
test
test
jnp
aaa
in
mov
insl
stc
dec
in
sbb
sbb
or
sbb
jae
mov
mov
pop
mov
icebp
or
pop
or
mov
lds
pop
iret
aad
mov
dec
pop
cmpl
dec
in
inc
dec
pop
out
imul
out
mov
mov
je
stos
lods
adcb
in
sub
pop
into
jb
inc
pusha
cmp
divb
mov
roll
xchg
sbb
rclb
mov
leave
int
notb
cmc
push
inc
pop
loope
push
movsb
cmpsb
fisttps
dec
inc
xchg
ret
sahf
mov
mov
js
lods
and
or
nop
push
popf
adc
fmuls
cmp
aas
adc
arpl
mov
adc
jecxz
shl
mov
arpl
incb
pop
scas
jb
and
movsb
shlb
push
jbe
inc
push
jle
inc
dec
lahf
xor
cs
loope
jns
mov
sbb
leave
arpl
sbb
xor
push
xchg
int3
fdivrl
dec
cmp
jl
out
outsb
jecxz
mov
dec
sbb
sahf
fwait
jae
pop
movsb
xor
lret
scas
sub
xor
fsubl
pushl
jmp
xchg
test
cs
jl
adc
mov
inc
fists
push
sub
sub
fucomip
idivb
inc
popf
repz
xlat
or
ret
xor
xchg
adc
aaa
or
cmpb
xchg
xor
std
cli
inc
push
aas
xor
xor
loopne
pop
fnstsw
jbe
sub
out
push
ret
fildl
std
aaa
jno
mov
jl
aas
add
xchg
loop
dec
cmp
movsl
jae
mov
jp
pop
out
cli
flds
and
xchg
add
movsl
insl
mov
aam
movsl
push
mov
cwtl
sbb
rcl
push
inc
cmpsb
mov
inc
cli
dec
or
in
imulb
vpmacssdqh
ss
add
cltd
mov
xor
inc
cmpsl
out
scas
add
js
mov
ljmp
mov
dec
insb
push
mov
es
lods
cld
inc
fildl
xchg
lahf
add
inc
orl
dec
mov
push
lcall
popa
cmp
popa
outsb
jmp
jg
insb
mov
xor
repnz
add
out
inc
pushf
and
jnp
add
pushf
sub
mov
cmc
aad
push
dec
mov
push
aaa
inc
call
aaa
push
ja
jmp
addl
loop
cmpsl
dec
sub
sbb
mov
sbb
push
push
sbb
push
ret
and
enter
pop
mov
adc
push
xchg
in
out
sti
push
ljmp
adcb
pop
mov
out
jns
jmp
adc
sahf
xor
pop
adc
jg
outsb
mov
xor
pop
mov
sub
lret
cmp
push
push
out
testl
std
sbb
stos
cmp
jge
xchg
pushf
icebp
sbb
mov
arpl
inc
sub
jno
jecxz
xor
inc
mov
mov
push
jg
in
cld
aaa
push
xor
shrl
pop
inc
out
mov
gs
mov
add
pop
iret
push
jl,pt
fs
add
int
xor
xor
pushf
jns
xor
roll
mov
popa
aas
cmp
pushf
bound
and
in
test
cmp
mov
push
test
fdivl
mov
inc
mov
subb
dec
xchg
mov
push
data16
cmc
and
ret
mov
icebp
ljmp
dec
jge
cli
cs
sbb
pop
fidivrl
or
push
in
inc
pop
push
jecxz
lods
adc
cmpsb
cmp
cwtl
faddp
sub
or
mov
jle
cld
adc
movsb
add
shl
mov
dec
inc
loopne
ja
stos
adc
movsb
jnp
dec
xor
mov
add
imul
pusha
std
and
push
sub
ficomps
dec
iret
xchg
fdivrl
adc
cld
xchg
clc
add
sbb
add
stos
push
mov
iret
sbb
mov
xchg
pop
mov
into
mov
fsub
lcall
mov
negb
fidivs
add
pop
rcll
pop
popa
or
ds
sub
ja
pop
mov
das
pop
adc
mov
add
mov
sti
push
std
clc
or
jne
insb
sub
xchg
add
hlt
add
scas
mov
xor
mov
fsubr
mov
arpl
je
test
sub
stos
jnp
mov
mov
xor
sti
test
mov
imulb
pop
out
call
add
mov
loopne
hlt
sbb
lret
mov
xor
pop
or
xchg
jae
and
adc
mov
popa
stc
inc
arpl
sbb
mov
push
iret
or
call
ret
lret
bound
mov
movsb
ret
icebp
insl
rol
xor
fwait
inc
test
and
movsl
push
and
je
int
out
sahf
cli
push
lods
push
test
punpcklwd
and
mov
jl
add
inc
mov
cmp
add
adc
and
into
cmp
push
or
sbb
out
xchg
cmp
dec
lret
xchg
pop
push
mov
out
cld
add
int
dec
or
dec
in
int
mov
mov
mov
jae
mov
push
xor
mov
fiaddl
push
sbb
jne
mov
loopne
lea
aad
mov
and
fpatan
ja
stos
push
mov
pop
mov
fld
shlb
inc
dec
call
mov
das
icebp
sub
lods
xor
int
and
fs
pop
pop
jle
add
shrb
paddw
adcb
stos
push
fiaddl
mov
pop
mov
nop
mov
call
ja
imul
testl
dec
pause
daa
and
push
ficompl
repnz
lods
add
mov
mov
xor
pop
imul
pushf
inc
sub
xchg
push
sub
or
cli
pop
lock
pop
sbb
sub
jmp
popa
jp
mov
in
nop
in
ret
cmp
enter
push
mov
dec
pusha
inc
fcoms
outsl
jno
jb
repz
aad
pop
cltd
cmpsb
xlat
mov
or
repnz
xor
and
pop
sub
pop
sub
jl
add
rcll
jp
or
push
out
sub
mov
fwait
sbb
add
pop
cwtd
jne
inc
add
jecxz
xor
cmp
sbb
stos
mov
stos
and
xchg
cmp
shll
pop
insb
sub
popa
sbb
outsl
clc
popa
sar
mov
addl
jmp
roll
push
pop
leave
mov
adc
scas
mov
mov
loop
pop
sbb
xlat
mov
sbb
lcall
and
jo
adc
push
dec
and
xchg
push
mov
ficoms
and
cli
cmp
sub
dec
xchg
scas
xchg
loop
cmc
mov
mov
and
test
dec
or
and
hlt
or
cli
xchg
es
push
push
out
sub
sub
rol
xlat
pop
push
mov
movsl
push
inc
rep
cli
loopne
and
scas
sub
cmp
loope
sub
pusha
loope
bnd
test
sub
mov
dec
je
cmpl
jle
loope
aam
xchg
and
stc
subb
jp
inc
call
or
dec
push
fnstenv
mov
pop
jmp
fbld
shrl
add
lods
push
jne
cmpsb
push
sbb
mov
adc
ss
faddl
fldcw
mov
pop
jbe
in
xchg
push
inc
cwtl
dec
pop
sbb
push
in
pop
push
scas
dec
pop
or
cmc
mov
ret
add
inc
push
xchg
mov
fadds
push
ret
popf
stc
mov
jecxz
mov
xchg
jge
mov
jmp
pop
push
out
inc
sub
mov
lods
call
dec
ds
or
int
mov
cmc
add
vmovntdq
adc
sbb
cmp
addr16
imul
fistl
jae
lock
in
std
inc
les
in
in
pop
xchg
pop
lds
cmp
mov
mov
movb
fidivl
mov
sti
test
popf
dec
in
pop
or
jno
xlat
push
imull
aad
pop
mov
in
mov
call
or
lock
pop
cltd
test
pushf
xor
outsl
mov
ret
xor
stos
jbe
add
js
dec
test
pop
cmp
xchg
cs
pop
dec
aam
popa
mov
push
cmc
out
stos
in
xchg
out
movsl
in
in
stc
adc
testb
outsl
mov
sti
mov
push
sub
sub
cmp
sbb
std
xchg
adc
mov
int3
and
aad
stc
sti
cmp
xchg
lds
sahf
imul
inc
aam
jne
cmp
dec
adc
insb
dec
into
shrl
outsl
repz
mov
dec
cmp
sbb
xchg
cmp
push
mov
mov
fldl
mov
sbb
sbb
dec
hlt
pop
xchg
insl
loop
inc
adc
aam
fs
dec
add
hlt
in
out
int3
xlat
pop
push
mov
cs
mov
leave
fcmovnbe
push
sbb
adc
and
cmp
pop
popl
es
mov
pop
add
sub
inc
sbb
xorb
mov
xchg
xchg
iret
call
cmp
testb
jns
mov
and
push
mov
icebp
xchg
js
pop
stos
mov
enter
divb
pop
dec
out
and
sbb
cs
xchg
pusha
jg
jnp
or
add
ljmp
fbld
cmp
jg
mov
clc
ffreep
adc
mov
enter
gs
out
xchg
pusha
aaa
stc
fs
lods
outsl
push
ss
inc
sbb
add
cmp
or
mov
shll
test
fcom
cmp
sbbl
xchg
mov
pop
ret
push
imul
out
shll
insl
pop
insl
out
adc
push
in
stos
cs
loop
mov
add
push
xorl
dec
mov
aad
xchg
loopne
call
rolb
fldl
push
push
xchg
les
out
jno
pop
cmp
stos
jmp
push
test
sub
mov
mov
fcompl
popa
je
loopne
arpl
in
fidivl
inc
push
or
dec
lret
dec
mov
arpl
or
mov
sub
mull
dec
pop
aaa
shrl
mov
mov
jb
inc
inc
mov
dec
dec
sahf
mov
mov
mov
mov
shll
pop
nop
or
mov
ss
pop
xchg
ljmp
push
mov
insl
test
push
mov
dec
xor
mov
add
jnp
shll
cli
pop
add
je
jb
adc
cmp
push
push
inc
ffree
mov
in
mov
inc
push
mov
sbb
lea
mov
and
jmp
mov
jl
arpl
in
lods
and
sub
jnp
imull
add
fwait
or
cli
and
sbb
es
and
push
mov
jbe
adc
fwait
push
cmp
int
inc
fwait
xchg
jmp
pop
push
and
inc
xor
add
insl
test
mov
mov
xchg
fsubrs
stos
push
das
popa
or
xchg
or
mov
nop
daa
ret
and
push
xor
popa
cld
fidivrs
lcall
xor
outsl
filds
mov
lods
test
enter
or
pop
bound
push
inc
push
fdivrl
imul
iret
dec
loop
scas
sbb
add
inc
addr16
sub
dec
clc
jne
xchg
cmpsb
adc
adc
lret
shlb
inc
call
out
out
xor
stos
dec
jns
push
pushf
pop
cmpsb
lds
and
imul
xchg
cmp
test
dec
arpl
outsl
dec
mov
in
or
jnp
mov
xchg
das
inc
outsl
jge
push
xor
jne
adc
cld
jno
and
or
std
mov
std
add
scas
movsb
call
xlat
or
and
fsubp
aas
fdivl
adc
std
cmp
out
movsb
jg
dec
dec
movsb
repz
pop
cld
fwait
cmp
sahf
lcall
jo
shlb
adc
and
cmp
fldl
rcrl
repz
je
insl
cmp
movsl
pop
pop
dec
hlt
xchg
icebp
mov
mov
adcl
mulb
add
out
xchg
imul
cmpsb
sti
adcb
jo
ror
jo
inc
push
lret
xchg
enter
lock
fiadds
mov
out
or
movsb
push
sub
sub
sbb
inc
ret
out
mov
insb
aam
pop
cmp
mov
int3
mov
mov
outsl
inc
subb
andb
pop
fstps
shrb
mov
jp
or
ret
dec
pop
ret
and
xchg
push
faddl
push
jne
or
dec
sub
in
rclb
hlt
inc
cmpl
mov
bound
push
out
pop
std
outsb
jecxz
pop
inc
flds
cmp
insb
xchg
sbb
sub
xor
cltd
rorb
loop
pushf
or
sarb
scas
fnsave
lret
inc
ret
divl
lret
repnz
enter
into
das
pcmpeqb
mov
inc
fnstenv
push
stos
mov
lret
ss
mov
jmp
cmc
lahf
test
cmpsb
xchg
int3
dec
cmp
cmp
push
mov
dec
and
repnz
cwtl
push
pop
popf
jle
mov
fs
add
enter
orb
xor
sbb
xor
and
xchg
scas
push
mov
jns
add
gs
pop
mov
lahf
or
push
scas
in
and
out
or
inc
push
push
mov
ss
fbstp
mov
lods
push
push
lods
xchg
out
enter
movsl
jge
jg
push
outsb
ljmp
divb
scas
test
push
dec
adcb
mov
bound
push
les
inc
rolb
and
jle
inc
cli
cmp
sub
sbb
adc
fstpt
xor
pop
ror
sbb
movups
pop
icebp
or
out
xor
add
mov
push
bound
adc
pop
addr16
sub
mov
pop
or
xchg
xchg
inc
jns
ffreep
dec
in
sbb
imul
mov
pop
outsl
xchg
ss
insb
mov
test
push
out
xlat
mov
lods
inc
cld
push
cltd
push
pop
int3
mov
cmc
in
rclb
js
or
fbstp
sub
aad
dec
ret
cmc
xchg
cmp
fdivs
aas
lcall
mov
das
repnz
int
and
jge
push
and
adc
lret
jo
sti
push
pushf
out
or
pop
mov
lret
stos
cs
loope
inc
lret
fisubrs
cld
jecxz
rcrl
mov
sti
jp
or
inc
inc
jp
xor
xchg
sti
es
inc
and
into
push
mov
in
in
xsha1
cmpsb
pop
xchg
dec
pop
and
loop
xor
les
fiaddl
or
je
mov
pop
push
jae
cld
or
mov
mov
push
call
out
addr16
int
dec
in
iret
push
in
test
shrb
icebp
sbb
dec
fisubrs
push
lods
jo
testl
and
sti
push
xchg
xor
testl
push
mov
enter
fnstenv
xor
or
cmpsl
loopne
xchg
movsb
stc
shrl
subb
or
cmpb
test
push
in
add
out
jnp
cs
add
xor
sub
fucomp
stos
push
mov
test
sub
imul
cmp
lods
mov
and
movsb
imul
mov
outsl
sarb
decl
sbb
xchg
addr16
jg
dec
arpl
xchg
ja
outsl
cmc
xchg
add
adc
xor
insl
in
xchg
int3
and
mov
cmp
mov
pop
out
test
lahf
push
and
jbe
arpl
xchg
sbb
mov
fnstsw
inc
mov
pop
inc
fisttpl
bound
and
daa
push
inc
jmp
cmc
jns
subb
aaa
pop
icebp
inc
mov
cmp
fdivl
addr16
inc
or
or
add
insl
sub
adc
sbbl
add
mov
inc
pop
leave
imul
pop
cmp
mov
notl
dec
mov
dec
jge
mov
cmpsl
cmp
shrl
lea
mov
sbb
dec
lcall
jae
cmp
inc
bound
sbb
cmpb
inc
out
mov
iret
sub
call
mov
sub
dec
out
mov
rorb
faddl
mov
jecxz
mov
std
pop
scas
es
add
add
adcb
xchg
jl
sbb
and
aaa
mov
push
mov
add
repz
movsl
fistps
add
fsubrs
es
int
mov
in
in
xorb
lock
inc
sub
mov
mov
sbb
jle
popf
mov
xchg
sub
sbb
ret
adc
xchg
clc
and
mov
xor
cmp
xor
aaa
jb
dec
movsb
cwtl
std
xchg
and
adc
sbb
pop
movsl
sbb
loope
mov
leave
mov
cmp
jno
pop
movsl
sti
inc
xlat
je
sbb
jecxz
xorl
xor
jl
push
mov
loopne
idivl
aam
rcrl
xchg
pop
and
mov
jp
sub
mov
movsb
push
faddl
add
adc
sbb
flds
jmp
pop
jg
pop
shrl
pop
jecxz
inc
leave
inc
fs
jae
or
fsubrl
push
pop
out
xchg
cs
inc
sbb
in
adc
lods
mov
stos
popf
ja
iret
int3
mov
lret
push
mov
insl
mov
dec
hlt
cmp
xchg
sbb
jo
add
jecxz
jl
add
insl
cmp
shlb
movsw
sbbl
cmp
loop
fimull
and
jge
clc
add
xchg
mov
sbb
or
insb
add
cmpsb
jno
daa
mov
inc
mov
adc
add
mov
aas
lahf
jae
ret
xchg
and
xlat
cmp
xor
pop
pop
hlt
dec
sub
cmpsl
jns
xchg
fistl
ja
jl
call
fwait
xchg
in
pop
fdivrs
cmp
out
xchg
cmpsb
jno
sub
dec
push
ss
jmp
lea
jl
imul
mov
jg
out
sub
jne
ds
dec
lock
sub
inc
add
out
in
aam
rcr
and
or
pop
cmp
sbb
jae
push
mov
lret
xchg
cmp
fstl
test
loope
mov
xchg
push
inc
inc
call
adc
out
roll
pop
lock
jmp
cmp
filds
neg
jmp
cmp
ret
push
push
mov
lret
sarl
in
push
jmp
dec
xor
cmpsl
lret
ljmp
dec
repnz
or
dec
pushf
dec
imulb
dec
cmp
insb
ja
popf
cmp
and
pop
cmpsl
test
movsl
int3
or
ss
push
out
int3
scas
mov
cmpsl
or
sub
mov
fwait
inc
ret
xchg
pop
addb
loope
or
sub
insb
rcll
nop
call
arpl
pop
xor
xchg
mov
or
leave
insb
push
je
pop
push
jo,pn
into
test
lds
sbb
cmp
pop
lock
add
mov
sarb
cmp
out
out
xchg
scas
fsubl
mov
lods
outsl
mov
mov
inc
push
pusha
pop
movl
cli
gs
push
xchg
push
pushl
cmp
scas
dec
xor
pop
inc
or
inc
in
test
xchg
xchg
stos
pop
jecxz
mov
sub
outsb
imul
icebp
pushf
push
dec
sub
popa
out
adc
lods
ja
and
int
and
loop
dec
mov
mov
cltd
dec
jno
mov
push
mov
xchg
test
popf
xor
repnz
fcomps
gs
call
stos
mov
xor
jg
cmp
mov
xor
fwait
std
jle
test
push
dec
xor
mov
xchg
ja
jns
aaa
dec
add
stos
add
mov
and
mov
or
jge
mov
iret
sbb
shlb
insl
mov
lahf
jno
ss
rcl
or
aaa
into
mov
dec
das
sti
icebp
iret
cmc
test
push
into
lea
lret
inc
fisubrs
mov
pop
sub
subl
cld
inc
sub
sbb
popa
orl
ljmp
push
mov
stc
call
and
jne
jge
cmpsl
sbb
leave
mov
push
push
jp
subl
loopne
minps
mov
scas
ret
daa
sbb
icebp
jns
das
pop
cwtl
mov
sbb
jle
jecxz
push
and
aad
lds
adc
add
pop
and
dec
jbe
mov
jb
pop
adc
pop
add
jg
mov
adc
aad
cmc
sub
mov
pop
mov
xchg
hlt
test
addr16
outsb
push
jbe
push
fwait
sbb
adc
push
xchg
or
mov
sbb
lahf
cmpsb
and
cmp
pop
in
lds
fcmovb
inc
mov
ja
inc
shl
call
lahf
ss
cmpsl
cmp
mov
push
call
mov
mov
in
aaa
sub
push
int
mov
mov
ret
mov
iret
shll
pmaddwd
lods
ss
mov
xchg
popa
jl
add
jae
das
mov
movl
mov
jbe
xor
sets
std
mov
push
push
iret
clc
test
sbb
out
inc
into
jecxz
pushf
dec
mov
mov
mov
test
test
test
insl
stos
inc
sahf
pushl
out
leave
flds
out
xor
loop
pop
test
pop
mov
pushf
or
hlt
mov
add
adc
dec
jmp
dec
push
xor
jmp
loopne
push
out
adc
aas
lock
sub
jmp
mov
sahf
fsubrs
movsl
int
les
mov
or
xchg
adc
cmpsb
stos
mov
rol
adc
lahf
mov
rclb
pusha
hlt
mov
adc
cmp
jae
mov
mov
xchg
cwtl
mov
and
sub
andb
mov
call
aam
iret
insb
sub
adc
repz
mov
adc
push
movsl
out
mov
sarb
xchg
subb
clc
or
fnsave
pop
jo
xchg
rcr
inc
notl
mov
cli
inc
push
sub
je
sub
xor
out
mov
dec
insb
fisubrl
hlt
mov
push
ja
push
cmpsb
jecxz
in
jns
cmp
adc
sub
pushf
pushf
adc
mov
or
js
mov
mov
push
lods
xchg
arpl
or
ret
and
mov
fdiv
jl
sub
pushf
imul
scas
test
mov
push
mov
lret
arpl
xchg
repnz
pop
bnd
pop
rcrb
push
les
imul
add
xchg
mov
mov
add
mov
or
sub
adc
int
data16
stc
test
sti
shll
pop
push
in
pop
mov
push
insl
and
dec
dec
out
jnp
sbb
add
call
push
popf
mov
xor
and
push
or
faddp
xchg
adc
cltd
pushf
mov
iret
xor
clc
mov
mov
imul
ret
fmuls
xchg
mov
push
push
sub
ja
mov
mov
sarl
push
popa
xorb
add
xor
loop
push
scas
xchg
imul
sub
loop,pt
into
pop
sub
shrb
push
pop
sbbl
fiaddl
int
packsswb
pusha
int
insb
cmpsb
dec
sahf
fidivrl
sub
adc
or
sarl
lret
sub
call
testb
dec
push
daa
test
cmp
mov
mov
add
xchg
int3
in
fwait
dec
jnp
daa
sub
push
push
leave
scas
sbb
out
mov
cld
xchg
fs
mov
test
in
enter
daa
lock
jne
adc
mov
imul
insl
subl
pop
push
sbb
inc
and
movsl
scas
and
mov
jns
jmp
fsts
arpl
fisttpll
movsl
dec
imul
pop
mov
mov
sub
jmp
xchg
popf
xchg
int3
loopne
shrb
xor
repz
sbb
cwtl
andb
inc
add
cmpsl
fistpll
mov
and
and
mov
aad
and
sub
jmp
dec
push
mov
test
cs
fildll
push
mov
mov
adc
inc
cli
adc
cmp
sub
xor
add
aas
ja
xchg
push
add
mov
andl
in
push
adc
push
out
aaa
jbe
mov
jmp
xchg
mov
or
cwtl
gs
inc
jmp
ds
push
gs
inc
add
dec
int
xchg
pushf
xchg
iret
imulb
push
and
push
xor
push
cmpsb
test
subb
in
push
mov
imul
push
das
add
mov
fwait
xchg
sbb
mov
or
jecxz
scas
cmp
test
adc
jle
jbe
mov
adc
jns
dec
mov
push
lods
and
addl
fiadds
dec
movsl
mov
movsl
lds
jge
insb
sti
mov
fistpl
ret
add
jbe
nop
mov
push
mov
xchg
sarl
pusha
jp
mov
test
sti
mov
insl
cltd
bound
lret
add
sbb
icebp
push
push
mov
dec
sub
movsb
je
in
and
pop
lea
pop
pop
xchg
inc
lods
div
jo,pt
ficoml
adc
cmp
fs
add
lret
lret
aad
inc
pop
sbb
mov
push
mov
fstps
int
add
into
push
jp
mov
lods
subb
aaa
pop
pop
add
loopne
dec
cmp
hlt
sahf
and
nop
xor
roll
and
dec
inc
stos
dec
xor
inc
inc
pusha
fistpl
mov
imul
or
mov
shrb
insl
jle
fsubrp
lock
in
insl
jge
push
or
inc
adc
filds
insl
sbb
loopne
jle
arpl
mov
aaa
cmp
orb
add
aam
push
nop
mov
cmp
mov
rcr
test
mov
fidivs
test
xor
pop
inc
enter
jb
jae
enter
cmpsb
ljmp
popa
aaa
rcrb
xchg
in
dec
add
in
adc
stos
in
ds
pop
loop
mov
pop
mov
call
out
sbb
inc
adc
dec
sbb
adc
fsts
inc
cwtl
neg
int
push
adc
aas
iret
into
enter
adcb
sub
sbb
xorb
and
push
mov
push
push
xor
pop
fwait
je
mov
mov
jo
mov
aaa
jae
jp
lea
xchg
and
jbe
xor
jae
and
std
push
mov
movsl
in
cmp
xchg
dec
cmp
add
fisubs
push
dec
fisubrl
fmuls
lods
xor
cld
js
call
or
testb
in
sub
aam
mov
xor
andb
ss
cli
into
xor
in
es
into
fdivrl
ljmp
movsb
repnz
xor
decb
rclb
icebp
inc
add
loopne
xchg
mov
inc
call
cmpsl
cmp
push
xlat
arpl
or
insl
mov
lret
cmp
inc
jecxz
rclb
setae
xchg
or
xor
cs
cmpsb
lock
push
cmpsl
cld
push
lret
mov
mov
je
loopne
lcall
sbb
sbb
ss
imul
daa
fnstenv
pop
lahf
pop
mov
movsb
in
aas
cltd
pusha
cmc
lret
int
xchg
pop
sbb
sbb
rcr
add
pop
pop
or
cli
insb
sub
mov
xor
dec
dec
mov
pop
sub
dec
and
mov
aaa
or
inc
fxch
lods
lcall
es
mov
mov
fimull
adc
xor
adc
dec
xchg
sti
rolb
cli
mov
push
std
int3
add
sbb
mov
int
dec
fs
fsubr
push
cmc
xor
inc
pop
and
jl
xchg
in
je
jmp
jle
pcmpeqw
xchg
data16
int
mov
mov
into
and
fimuls
push
push
scas
push
inc
pop
dec
add
mov
out
pop
lret
sub
ja
test
mov
lahf
outsl
jl
pop
mov
push
in
push
fwait
add
ds
loopne
popf
and
mov
test
fdivl
push
push
xchg
xchg
arpl
mov
sbb
sbb
mov
orl
mov
pop
and
sti
clc
test
mov
outsb
sub
inc
outsl
je
imul
repnz
aas
repnz
fdivrs
push
jg
xor
arpl
idivb
xor
and
stos
adc
push
cmp
pusha
lret
sbb
inc
lahf
and
xchg
fiadds
add
sbb
add
or
or
add
in
out
repnz
js
push
stos
bound
and
mov
lret
and
cld
inc
imul
inc
sbb
aas
shll
dec
jecxz
adc
pop
sub
pop
call
pop
mov
sub
sbbl
jmp
popf
jp
pop
test
mov
mov
call
xchg
mov
pop
sbb
into
ret
push
ret
pop
mov
or
adc
repnz
mov
out
into
outsb
js
push
mov
cltd
cmc
push
xchg
idivl
and
jne
ja
idivl
mov
pusha
imull
mov
incb
mov
xchg
sbb
dec
mov
dec
fisttpl
mov
inc
mov
jae
mov
mov
es
hlt
fs
and
stc
cmpsb
dec
lret
push
xchg
loope
jns
lcall
fcompl
mov
ret
fwait
or
mov
leave
lea
decb
inc
mov
rolb
imul
inc
stos
pushf
xlat
sub
hlt
mov
lea
jbe
ret
ret
push
pop
call
fimuls
cmp
xor
mov
cmpb
scas
test
push
push
xlat
inc
nop
mov
imul
pusha
cmp
push
into
mov
call
in
add
fs
push
mov
xor
jmp
orl
inc
lret
aad
stos
ret
fwait
mov
fcompl
fs
xor
sbb
ret
jo
sti
jns
and
test
xchg
cmp
jecxz
sti
dec
enter
test
add
dec
pop
lods
enter
dec
xor
enter
pop
or
fadds
mov
adc
cmp
dec
or
pop
sub
add
jmp
fsubrs
das
ds
clc
lods
insl
jg
lahf
sub
stos
mov
sbb
sbb
mov
or
scas
mov
pop
sete
jg
inc
and
call
xor
inc
enter
mov
xlat
adc
cmp
inc
rcrl
xor
negb
ror
out
jbe
push
in
pop
mov
xor
cld
call
or
loopne
pop
mov
lret
push
ss
jle
add
adc
push
inc
dec
cli
mov
in
and
mov
xchg
push
jne
pop
shl
notl
sti
adc
nop
pop
mov
add
stos
inc
in
push
sub
mov
inc
flds
inc
pusha
iret
fiadds
lret
xor
sbbb
dec
or
xor
xor
cltd
sbb
call
dec
adc
pop
cld
arpl
mov
and
ja
rorb
cmc
pop
fldl
add
imul
cmp
fiaddl
mov
pop
sub
inc
sahf
repnz
addl
xor
movsb
arpl
mov
pop
es
insb
inc
out
in
mov
push
mov
xor
lret
pushf
das
int
insb
sub
das
pop
scas
insl
pop
fwait
into
push
ss
test
sbb
cld
loop
mov
fwait
movsl
ret
call
loopne
jne
xor
xchg
mov
sbb
pop
in
push
es
stos
and
scas
aas
nop
jnp
iret
mov
scas
and
add
stos
jmp
dec
decb
popf
sbb
mov
inc
aam
fucomi
aaa
outsb
mov
loopne
das
cmp
sbb
cmp
pop
dec
dec
shrl
add
adc
hlt
jns
pop
aas
sub
xor
xchg
movsl
sbb
in
pusha
or
das
mov
add
iret
testb
int3
lahf
lods
sar
add
pop
mov
pop
int3
xchg
xchg
xorb
ret
pop
cmc
int
inc
sbb
jmp
mov
iret
xor
stos
or
mov
js
mov
jmp
bound
int3
sbb
negl
adc
mov
fcoms
dec
psrad
scas
xor
repnz
dec
aam
jmp
rclb
add
repz
cs
adc
mov
cmc
addr16
jae
lret
dec
nop
loop
ffree
push
mov
repnz
mov
int
push
pop
int3
lret
sub
mov
in
aaa
popf
pop
cmc
into
mov
insb
leave
sar
inc
or
repz
inc
inc
push
std
add
scas
or
daa
test
or
sbb
xchg
pusha
or
xchg
mov
repnz
xchg
daa
dec
sbb
push
add
cli
test
pushf
xor
pushw
test
cmp
push
ret
mov
dec
add
into
add
int3
ret
cwtl
out
jns
jae
es
cwtl
sub
add
xchg
sti
pop
lret
add
cmp
mov
imul
pmaddwd
inc
into
push
lcall
jae
scas
adc
js
call
mov
jne
cld
xchg
xchg
andb
sbb
bound
aad
cmp
adc
cmp
sbb
sbb
or
into
movsl
sbb
les
or
mov
add
call
mov
outsl
jnp
loop
add
or
sub
add
loopne
push
and
mov
sbb
in
adc
cmp
fwait
pop
push
fisubs
xchg
xlat
lods
lods
stos
in
out
inc
loope
lcall
aas
outsl
insl
jno
sub
daa
xchg
or
jge
sti
cwtl
dec
push
stos
test
lea
sti
cmp
pop
and
pop
cmp
jnp
mov
push
push
adc
shll
in
xchg
xor
jge
mov
and
cmp
jbe
inc
inc
fnstenv
outsl
mov
mov
dec
iret
jle,pt
push
in
mov
add
mov
mov
stos
adc
inc
lahf
out
dec
jo
fcomip
clc
push
xchg
mov
leave
push
mov
jne
inc
scas
sbb
sbb
les
popf
movsl
pop
inc
xchg
iret
fisubl
int3
addr16
jne
fidivl
pop
jle
inc
jno
movsl
notb
test
fisubs
jecxz
dec
loop
push
rolb
ret
jle
lea
in
sbb
lea
sub
insl
mulb
js
js
mov
cs
pop
out
mov
int3
adc
add
out
mov
dec
pop
mov
movsl
sahf
xor
jg
lods
sti
pushf
mov
lcall
xchg
and
mov
incl
mov
js
insl
add
xchg
mov
dec
adc
pop
dec
test
xchg
inc
lahf
sbb
xlat
add
push
loope
fcomps
imul
jmp
xchg
scas
movsl
lds
or
sub
jb
mov
ret
popf
push
and
push
jle
je
loopne,pt
push
add
xchg
lock
clc
and
mov
sahf
and
mov
mov
loopne
or
ret
push
push
push
jg
inc
cs
push
xor
lock
xchg
xor
add
and
jbe
add
add
pop
in
mov
or
shl
and
cmpsl
test
dec
cmpsl
jecxz
aam
xchg
insb
fildl
lret
cli
jmp
pop
jmp
hlt
xchg
clc
iret
mov
out
jle
jbe
pop
lods
imul
hlt
mov
stos
cmpsb
cmp
mov
fisttps
lds
fwait
shlb
or
rcrl
imul
jp
cld
xchg
addl
into
dec
push
mov
cli
lret
insl
or
aam
jnp
shrl
and
jo
inc
mov
dec
fucomp
dec
push
jno
dec
loop
cmp
rcrl
cltd
and
test
add
sub
and
inc
dec
mov
mov
shlb
jle
jo
inc
sub
shlb
cmpl
sbb
jg
jb
hlt
mov
xchg
cmp
xchg
cmp
in
push
mov
insb
lock
sbb
mov
mov
rolb
sub
aaa
icebp
pop
sbb
enter
test
ficompl
dec
loopne
mov
jbe
fwait
pop
cmp
pop
inc
lahf
stos
cmp
insb
std
adc
sbb
dec
pusha
xor
ret
push
push
ljmp
cmp
orb
dec
mov
push
aas
mov
jmp
sub
popa
push
push
out
jo
jle
jp
ret
jmp
or
or
test
mov
pop
push
data16
mov
divl
xchg
mov
aam
outsl
sbb
xorl
arpl
std
repz
pop
stc
mov
fs
rolb
push
call
fs
jo
dec
popa
xchg
pop
jae
push
loop
and
push
sti
push
sub
adc
mov
mov
stos
or
outsl
cld
mov
imul
lods
out
sbb
pop
dec
imul
popf
insb
lea
cmp
push
insb
fwait
enter
cmc
sbb
push
data16
scas
xchg
cltd
pop
stos
inc
popa
fnstsw
inc
xchg
sbb
aad
inc
add
lahf
pop
in
or
xchg
pop
movsl
inc
inc
sahf
lea
movsb
nop
jmp
push
xchg
aam
cs
add
pop
js
pop
push
or
push
and
mov
inc
mov
fninit
cli
push
dec
inc
sub
lods
pop
mov
lret
pop
or
popa
dec
loopne
outsl
lret
pop
or
push
mov
adc
xor
sub
dec
push
out
mov
cmp
ljmp
insb
stc
stos
jnp
mov
xorb
inc
pop
stos
mov
das
cmpb
push
int
and
cmp
pop
stos
inc
shll
int3
or
cmp
leave
lods
sub
das
push
cmp
add
xor
lea
out
daa
cmp
pop
jne
push
and
mov
out
ficoml
mov
sbb
fldcw
jnp
mov
in
pushf
push
pop
mov
fisubl
jp
sarb
dec
cli
lea
adc
sub
cld
test
std
imul
repnz
aaa
lret
add
jo
scas
mov
fcmovu
pop
fwait
out
lret
sub
dec
cmpsb
rcll
hlt
movsb
cmpsl
imul
and
addr16
in
out
push
in
mov
xchg
fidivrs
loopne
mov
pop
aaa
push
fiadds
jge
add
lea
push
leave
out
into
mov
and
adc
ficoms
fwait
das
xchg
int
loope
repz
fsubrl
lods
mov
stc
mov
fstpl
jge
mov
js
xchg
add
pop
xor
and
pop
pop
dec
fistpl
xchg
fstl
fcmovnu
decb
dec
sub
push
insb
jg
dec
rcrb
adc
jbe
bound
hlt
pop
sub
pop
rolb
mov
movsl
in
xor
push
lretw
scas
xchg
mov
push
mov
jno
repnz
sbb
sub
ret
cld
or
or
sbb
xor
stc
fisttps
lods
mov
push
and
cmp
or
pop
mov
inc
fbstp
stos
mov
dec
cmp
fwait
das
movsl
sub
pop
adc
inc
cmp
shl
sub
xchg
rorl
fmuls
or
clc
movsl
test
outsb
jne
push
call
int
add
add
dec
xchg
dec
or
add
mov
and
cmp
push
in
pushf
mov
int3
push
insb
mov
pop
inc
inc
fsubrl
dec
jno
push
gs
rclb
mov
stos
cltd
imull
adc
ja
nop
sub
out
mov
dec
daa
hlt
cmp
rcrb
adc
cmp
xor
cmp
pop
pop
imul
add
bndldx
iret
mov
std
xchg
pop
push
lods
nop
dec
xchg
mov
or
popf
fcmovb
in
test
push
xor
pop
cmc
inc
fldenv
dec
adc
es
sbb
jne
movsb
adc
sbb
dec
out
cld
sahf
ret
jp
cmpl
sbb
jp
mov
cmpsl
xchg
cmpsl
mov
out
rolb
cltd
repz
mov
adc
push
jno
cmpsl
mov
mov
push
lods
and
outsl
or
sbb
push
ds
loope
xor
add
add
cmpsb
xchg
pop
mov
push
pusha
mov
gs
cmpb
push
mov
daa
jl
hlt
pop
xchg
jns
push
and
mov
insl
incb
loopne
or
pop
adc
pop
add
dec
lcall
sub
xchg
pop
inc
jp
dec
and
fnsave
jno
into
sbb
xor
sub
shr
xchg
dec
aad
jnp
push
in
sbb
mov
addr16
inc
xlat
ss
setg
pop
call
add
rcrl
cltd
clc
and
fildll
iret
xor
push
jns
leave
and
mov
mov
sbb
inc
pusha
jne
popa
mov
xorl
mov
jle
ljmp
jl
dec
movsb
sti
std
mov
jnp
inc
fsubs
jbe
dec
push
xor
fs
mov
flds
add
lcall
in
subl
or
fdivl
fwait
lcall
push
xor
lahf
rorb
fs
addb
ret
add
cmpsl
ret
xor
dec
jecxz
fcoms
add
xor
lea
dec
clc
movl
lods
dec
inc
in
xchg
mov
daa
dec
bound
jge
sbb
jae
mov
shll
daa
rclb
cmp
pushf
inc
fs
pop
arpl
xor
orb
in
pop
pusha
sub
xor
dec
jl
test
inc
push
xor
subb
aaa
fxch
mov
xchg
jmp
or
add
mov
cmp
sub
xchg
push
shr
addr16
xchg
popf
push
and
out
cmp
repz
jo
ja
add
stc
mov
ficompl
test
jno
mov
stos
ja
xchg
lods
sbbl
xchg
add
push
push
pop
push
frstor
inc
mov
jg
andl
sub
add
or
pop
and
push
cld
cli
sbb
and
or
test
fucomip
scas
enter
mov
jge
out
and
mov
ret
sub
xchg
outsl
iret
jle
jecxz
lret
loop
jl
push
mov
cmp
sbb
js
shlb
loop
nop
pop
xor
mov
loop
push
adc
pop
fdivs
loop
call
mov
push
mov
cmp
pop
iret
movsl
out
jge
cmpsb
aas
dec
xchg
push
les
pop
sbb
mov
out
pop
ficoms
and
sbb
insb
add
mov
mov
insb
fwait
rclb
jbe
mov
aam
sub
lods
mov
pop
repnz
fsts
add
mov
pop
testb
or
adc
mov
out
jbe
push
test
sub
xor
es
fistpl
mov
mov
aad
aas
dec
xor
stos
push
sub
repz
jmp
loop
decl
cmp
les
shll
decl
xchg
jno
subl
das
inc
bnd
pop
gs
jb
xchg
insb
sub
testb
adc
jge
cs
aad
push
jo
les
xchg
jl
or
pop
pushf
scas
je
loopne
jb
pop
lods
in
ds
lret
mov
insl
into
les
mov
jecxz
mov
add
and
push
pop
gs
pop
xor
out
shll
roll
inc
inc
mov
pop
push
add
aas
repz
mov
sarb
sbbb
fists
pop
push
mov
push
stos
stos
lret
xchg
lods
ror
pop
repz
out
mov
and
ret
jne
push
popf
xor
and
arpl
mov
out
mov
test
push
incl
inc
insb
jle
add
insl
sub
jo
adc
jb
mov
adc
inc
ret
xor
bound
sub
inc
stos
icebp
icebp
mov
into
xchg
mov
in
adcb
jp
or
flds
dec
pop
pop
arpl
insl
pop
cmc
xlat
cmc
cs
imul
inc
inc
lcall
pop
hlt
fadds
movb
into
icebp
adc
pop
fwait
test
and
xchg
jl
ss
std
rcl
pop
scas
cmp
mov
fldl
sti
pop
insb
sub
or
sub
pusha
pop
jae
push
sbb
inc
das
mov
lea
push
pop
push
cld
jp
dec
mov
fstps
stos
les
popa
or
lock
cmp
test
and
test
sbb
jecxz
in
lret
cmp
jmp
in
mov
mov
or
cmp
lcall
jne
clc
scas
jno
repz
int3
xchg
xor
negl
mov
mov
mov
push
icebp
xchg
inc
lahf
jmp
jl
cwtl
cltd
je
into
or
cmp
push
adc
out
push
into
aas
rcll
ret
mov
inc
and
shl
jecxz
mov
lds
pop
mov
push
out
scas
and
pushf
sbb
inc
pushf
test
cwtl
shl
push
inc
dec
jb
dec
xor
inc
fs
inc
cmc
mov
fldcw
mov
or
fisubrl
mov
imul
jns
fwait
cmp
dec
cmp
dec
mov
std
cs
xor
jns
ret
stos
jns
push
fwait
decl
adc
pop
inc
sahf
pop
js
aas
lods
aam
aaa
add
xchg
and
cli
push
sahf
test
lea
cmp
adc
cli
sbb
sub
push
pop
out
cld
mov
dec
ljmp
xor
or
cld
add
pop
sub
outsl
ret
jbe
and
inc
jbe
xchg
xchg
add
add
pop
mov
push
cmpsb
in
outsl
or
loopne
jns
lock
mov
push
rclb
xchg
imul
mov
fsubrp
popa
vpcmpeqb
andl
test
jge
sbb
sub
cmp
pop
pop
ret
testb
pop
jno
mov
push
insb
add
xchg
mov
lock
insb
mov
sahf
and
dec
dec
mov
lcall
in
inc
mov
mov
push
lds
xorb
stc
lods
pop
jmp
add
in
adc
mov
push
jbe
mov
aaa
pop
outsb
and
lcall
or
jbe
sbb
pop
je
push
fisttpll
ss
xchg
adc
and
lea
ret
cltd
cmc
sbb
adcb
jmp
sub
xchg
cmpsl
mov
lret
aas
enter
sub
inc
popa
or
xchg
popa
sbb
sub
and
ds
xchg
popa
test
xlat
mov
sub
out
outsl
lahf
and
inc
int3
shr
or
mov
xlat
jne
int3
pop
movsb
jecxz
sbb
enter
xor
or
push
sub
push
negb
decw
in
mov
aas
jp
ljmp
mov
mov
insl
inc
test
out
xchg
push
aas
in
mov
mov
fcoms
jns
add
sbb
xor
push
ja
pop
pop
jle
push
lret
lea
addl
push
jge
test
cld
xchg
mov
cmpsb
in
lock
sti
xchg
sub
dec
mov
jnp
cmp
pop
inc
sahf
icebp
clc
and
insl
clc
daa
div
aaa
push
int
dec
daa
inc
inc
dec
cmc
dec
inc
gs
aam
les
inc
sahf
sbb
pop
lock
jns
sbb
ja
dec
xor
cmpsl
outsb
mov
daa
cwtl
mov
ret
cli
fimuls
mov
xor
adc
xchg
mov
out
mov
dec
in
cli
addr16
leave
or
push
add
fistpl
repz
sbb
mov
add
movsb
sbb
xchg
adc
fisttpll
repz
inc
les
pop
testb
cld
push
pop
jnp
fbld
lods
test
in
pop
add
test
pop
loopne
scas
lock
cs
dec
or
cmc
jge
aas
mov
test
mov
sbb
xchg
lret
pop
mov
jecxz
push
add
cs
push
jae
fcmovu
pop
sahf
sti
pop
dec
jbe,pt
fwait
pop
int3
gs
shlw
fcmovne
jae
push
movsl
out
pusha
mov
mov
mov
inc
insw
outsl
mov
cs
and
pop
and
subl
repz
inc
ficoml
mov
and
mov
jmp
mov
dec
jle
in
out
shl
xor
fmuls
jle
pop
movsb
and
call
push
xchg
dec
faddl
jge
mov
aas
or
out
push
fcoms
or
iret
rcrl
inc
mov
xchg
push
pop
xor
mov
inc
push
dec
cmc
cli
xchg
mov
les
lret
jbe
mov
roll
add
sub
sbb
ds
lods
adc
jo
mov
xchg
xchg
add
push
xor
lahf
mov
inc
into
fldpi
cwtl
aas
sbb
ds
lods
jb
andb
pop
sahf
cmpsl
mov
fdivrl
cmc
push
lods
imulb
jns
pop
mov
lods
pop
jns
pop
mov
pushf
and
mov
xor
cmp
mov
xor
nop
and
aam
cmp
or
scas
inc
rorb
gs
inc
outsb
sysenter
lret
inc
jns
fsubl
aam
dec
das
mov
pusha
imul
dec
cmp
cmp
ljmp
out
test
sub
pop
rcpss
pop
test
jp
shr
mov
ffreep
test
scas
je
fisttpl
loopne
xchg
mov
lods
mov
pop
inc
stos
ficoml
iret
data16
aas
out
push
jae
push
iret
xchg
js
mulb
jb
loope
daa
and
push
stc
aas
push
xlat
xchg
inc
jb
je
xsha1
cmpsb
or
xor
sbb
fistpl
or
and
aad
call
fbld
push
dec
sbb
add
or
xchg
dec
in
xor
jecxz
mov
popa
repz
aam
popf
pop
addl
aas
adc
lret
jae
mov
lods
cmp
insb
mov
fidivl
scas
iret
lods
inc
pop
test
imulb
xor
pop
cld
outsb
mov
cmp
xor
and
les
cltd
or
cmpps
gs
sbb
push
add
or
or
xor
jae
fimuls
cmp
leave
push
loope
add
lods
push
and
xor
arpl
les
inc
pusha
stos
in
hlt
or
cmp
call
xor
ljmp
outsl
fisttpl
scas
push
mov
mov
leave
pop
daa
sbb
scas
adc
fsubrs
xor
add
rorl
es
mov
dec
pop
or
xor
je
xor
mov
mov
inc
fisubs
cs
dec
pushf
addr16
lret
bound
push
ret
jmp
mov
stc
push
int
stos
aaa
int
aam
inc
xchg
push
pop
stos
add
sub
sbb
pop
pop
js
cmp
cmp
jmp
sbb
mov
ror
aas
daa
lret
movb
lret
and
movhps
dec
imul
js
inc
xlat
fldt
es
imul
sbb
shrl
xor
jge
xchg
mov
xor
arpl
out
test
and
addr16
sub
aaa
test
in
push
xor
pop
push
jb
inc
out
sti
mov
dec
jno
jo
cmp
pop
mov
ret
push
fdiv
fldt
out
xchg
shlb
out
cmpsb
and
test
popf
mov
iret
sahf
push
mov
movsb
pop
sub
mov
or
cld
outsl
xor
loopne
xchg
adc
jae
jg
cwtl
aas
or
outsl
cwtl
sub
bound
rcrb
xor
inc
jcxz
xchg
pop
mov
out
mov
xchg
add
punpckldq
xchg
dec
sub
cmc
mov
mov
pop
mov
fdivp
or
dec
icebp
and
stos
loopne
lcall
push
pop
rclb
movsl
gs
out
aaa
cli
mov
or
incb
inc
add
ja
push
or
sub
cltd
or
out
and
jne
in
push
sub
mov
movsb
cmp
xor
jge
mov
lret
xor
sti
push
cwtl
imul
inc
testl
and
rdtsc
in
adc
xchg
dec
mov
cmc
stos
jp
adc
fsubr
add
or
xor
mov
push
lods
push
test
push
popa
andl
inc
cld
pop
imul
cmpl
xchg
dec
xchg
addr16
push
aas
ss
push
leave
and
iret
adc
push
push
inc
loope
testl
pop
int
jecxz
repnz
call
fidivl
jmp
jecxz
mov
inc
pop
and
mov
daa
adcb
sub
cltd
loop
lret
push
ss
xchg
add
pop
les
push
and
mov
sbb
out
mov
addl
fucomi
call
or
cmp
cmpsb
ret
or
sarl
outsb
es
push
sub
mov
mov
mov
mov
cmc
fcoms
and
mov
mov
mov
fisubl
jg
jp
test
pop
xor
shrb
sbb
popa
jno
inc
cli
pop
sbb
mov
hlt
cmp
popa
xor
adc
inc
into
test
jle
cld
pusha
mov
movsb
leave
test
sub
loop
in
adcl
mov
daa
xchg
repnz
jge
mov
leave
jecxz
jp
cmpsb
mov
push
inc
and
ret
add
jne
sbb
mov
or
inc
mov
jnp
popa
lods
pop
inc
sbbl
xor
sub
and
adc
xlat
add
out
add
dec
xchg
and
push
in
cmp
cmp
add
loop
rcrb
dec
pop
pushf
jl
mov
sbb
stos
dec
dec
and
and
frstor
sub
push
les
cmp
das
hlt
cmp
sti
add
imul
aam
cmp
add
mov
lods
mov
mov
sbb
sub
inc
mov
jae
addr16
clc
and
mov
jo
mov
and
inc
mov
mov
xor
pop
xor
dec
cmpsb
gs
aaa
sbb
dec
push
ja
mov
lret
data16
adc
push
dec
aam
sbb
xchg
pop
es
out
inc
loop
pop
hlt
divl
jnp
jp
scas
xorb
fmull
push
jne
test
jmp
cmp
adc
or
arpl
jl
sub
mov
jmp
pop
fldcw
add
push
into
mov
cli
jbe
test
out
push
push
xchg
mov
fdivrl
sbb
pop
ss
movsl
pop
xor
stos
xchg
out
in
dec
pop
fisubs
mov
arpl
inc
xchg
xor
lea
and
xchg
rcll
jl
pusha
test
push
and
call
xchg
out
add
inc
push
mov
jbe
stos
les
sbb
push
loopne
orb
sbbl
or
or
insb
adc
fwait
mov
movl
addr16
cwtl
mov
mov
in
mov
push
out
int3
arpl
cmc
and
add
les
lea
mov
cmp
mov
adc
adc
mov
push
push
mov
inc
repnz
xchg
in
mov
xchg
push
insb
xor
jae
and
xorb
add
xchg
jae
in
mov
pushf
ljmp
cmp
xchg
jo
dec
pusha
ret
fcmove
ret
jp
popa
js
mov
mov
jmp
or
pop
sbb
or
inc
or
ja
jb
cmpsb
imul
xchg
out
test
lods
sub
test
xor
stc
or
push
push
mov
pop
cmc
or
outsb
add
mov
pusha
dec
scas
sbb
loopne
mov
adc
jae
add
iret
lahf
push
mov
jo
jnp
fstpt
loopne
xchg
pop
push
pop
push
or
add
push
jbe
roll
shlb
sbb
xchg
or
sahf
lds
mov
fwait
das
stos
aas
ja
je
stc
pop
cmp
in
push
mov
in
lods
pop
loop
inc
fisubrs
add
mov
iret
pop
inc
test
or
dec
dec
cwtl
jg
lret
mov
mov
cmp
sar
xchg
mov
rorb
sbb
push
out
addb
add
fiaddl
pop
xchg
or
lret
nop
scas
aaa
scas
popf
call
adc
and
mov
into
cmp
and
out
setne
mov
cmp
inc
fnsave
or
pop
sbb
test
stos
dec
inc
xchg
add
sbb
inc
shlb
cmc
pushf
scas
sub
aas
add
xlat
out
std
mov
mov
outsb
add
xchg
sti
pmaddwd
sub
jg
int
scas
sub
jbe
jae
cs
xchg
cmp
ja
push
lcall
mov
das
rorb
mov
int3
mov
gs
out
push
dec
loopne
jbe
jle
hlt
dec
adc
jp
adc
sub
mov
mov
stos
cmp
dec
dec
and
lret
es
arpl
pop
lock
ficomps
mov
push
loopne
out
push
mov
fwait
leave
xor
jne
push
repz
sbb
sbb
adc
insl
lahf
mov
xor
scas
arpl
lods
mov
sbb
repnz
stc
cmp
mov
push
fmull
dec
xor
cmp
dec
adc
lret
mov
into
mov
fiadds
xchg
aaa
clc
test
fisttpll
cld
adc
jae
das
call
jno
sub
sub
adc
or
jbe
leave
or
mov
jnp
add
sub
lea
push
and
mov
clc
sbb
aad
shrl
jle
sub
out
xchg
dec
xor
push
mov
repnz
push
lods
jmp
jp
out
stos
fwait
and
mov
rorb
jnp
fidivs
and
and
insl
mov
jbe
fcoml
adc
or
lods
and
loope
push
repz
inc
fidivs
cmc
xchg
movsl
nop
insl
xchg
mov
adc
iret
mov
das
mov
pusha
enter
gs
xchg
xchg
imul
adcl
jnp
outsl
xor
aad
inc
mov
ret
stos
or
push
cmp
shr
inc
push
xchg
push
les
out
mov
jo
or
mov
sub
sbb
mov
int
sub
jns
mov
or
xor
xor
cmp
jo
mov
jecxz
in
pushf
test
mov
lahf
dec
mov
scas
outsl
mov
xchg
add
test
fwait
push
lret
mov
mov
outsl
mov
mov
dec
cmpsl
aas
leave
stc
nop
xor
mov
rcll
pushf
xlat
mov
fnsave
pop
cmp
xor
sbb
sub
pop
lcall
sub
xchg
sub
jns
roll
mov
push
loop
cli
jb
jmp
or
mov
and
into
loope
inc
fwait
jns
push
out
mov
fistpl
hlt
repz
jmp
or
daa
les
push
loope
xchg
out
push
inc
dec
pushl
mov
mov
add
mov
adc
adc
jg
xor
inc
push
icebp
cmp
test
in
ficoms
ss
mov
adcl
rolb
les
lret
and
cmp
pusha
cmp
xchg
ljmp
insl
aam
sahf
iret
arpl
out
js
stc
sbb
and
cwtl
loop
sbb
in
mov
sub
cmpsl
ds
sti
pop
fnstenv
lret
inc
dec
iret
xchg
les
mov
pop
out
mov
adc
jp
cld
aaa
and
adc
dec
loopne
sub
mov
fnstcw
push
cmpsl
jp
test
add
dec
push
leave
and
shlb
in
xchg
ss
xchg
add
mov
adc
arpl
sbb
enter
cwtl
jnp
and
pop
out
dec
bound
sbb
pop
addr16
in
scas
xor
xchg
fisttps
pop
mov
mov
jle
out
or
daa
pop
sahf
mov
je
xor
loope
jle
xchg
stos
in
jp
push
xor
adc
sbb
sarl
imul
xchg
xor
mov
sbb
add
push
popl
pop
mov
int3
dec
jge
cmc
stc
cmpsl
aas
mov
sbb
lahf
lea
xchg
andb
mov
mov
cld
into
ja
decl
outsb
int
and
push
clc
je
jne
sbb
stos
push
test
shll
loop
push
adc
addr16
bound
xchg
iret
mov
jle
or
aaa
sub
sbb
pop
cmp
mov
sbb
xor
and
lock
xor
mov
dec
test
out
cmp
scas
add
shlb
mov
arpl
mov
pop
fldl
and
ljmp
test
clc
shll
shl
rorl
fstpt
adc
dec
and
and
je
cmc
mov
pop
add
test
jle
adc
pusha
dec
les
jp
xor
push
ljmp
out
jp
cmpsb
call
jne
movsl
dec
pop
xlat
jns
mov
xchg
xor
into
movl
into
stos
xchg
adc
mov
and
rcr
mov
pmulhuw
push
stos
into
fcmovu
pusha
cmp
dec
push
lods
jp
loopne
xchg
sbb
mov
cmp
hlt
push
sub
int
mov
je
xor
pop
es
in
fbstp
es
pop
scas
mov
ljmp
jl
sub
nop
int
pop
aas
les
push
mov
or
lea
shrl
xor
lcall
inc
and
shlb
add
sub
push
aaa
dec
push
ret
jp
push
jne
mov
cmpsb
jne
mov
add
test
in
mov
pop
mov
outsb
jae
cs
lods
in
int3
ljmp
adc
addl
pop
mov
cmpsb
popa
pop
or
xlat
adc
mov
ss
out
aam
ret
in
sbb
ss
mov
dec
cmp
adc
sbb
ja
push
push
inc
push
fwait
mov
je
adc
xchg
mov
int3
scas
sbb
adc
jge
cmp
fcomps
lret
jecxz
adc
sub
mov
pop
jecxz
leave
adcl
loop
xchg
fmuls
inc
and
mov
out
push
cld
inc
lea
inc
test
mov
dec
jne
daa
xor
mov
les
dec
cmpsb
aam
add
mov
aam
cmpsl
push
adc
scas
into
ret
repz
lret
inc
arpl
add
dec
xor
pop
pushf
movsb
cltd
xor
jg
rclb
xchg
mov
data16
cltd
inc
leave
int3
jnp
jg
lret
push
sub
xchg
xchg
sub
mov
ljmp
xchg
jge
mov
jmp
lret
enter
xor
sub
pop
in
aam
sti
xor
adc
jns
push
ss
push
mov
fwait
sbb
adc
ja
cmp
fdivrp
fsubrs
cmp
je
push
xor
les
sub
push
lahf
or
outsl
into
andb
or
mov
xchg
jnp
dec
bound
jecxz
jbe
andl
mov
mov
std
mov
cld
and
pop
mov
push
imul
pusha
loope
les
nop
insl
cmp
and
fldl2t
push
mov
inc
lahf
out
pop
nop
jge
sub
jns
dec
add
cld
cld
xchg
cmpsl
push
cmp
mov
stc
mov
cmp
call
cmp
adc
gs
sbb
inc
mov
add
adc
sbb
sbb
testb
pusha
cmovnp
mov
out
orl
or
mov
jo
mov
add
scas
push
jp
jp
mov
mov
jmp
int
cs
pop
jge
lds
jne
int3
scas
shrl
sti
divb
gs
lcall
push
jo
xlat
outsb
pop
cmp
test
jle
or
out
std
ds
fs
dec
xor
repnz
std
jns
repz
aad
in
push
push
cmc
pop
push
out
dec
cmpsl
cld
inc
sarl
push
mov
jg
sbb
frstor
mov
repnz
pop
je
cmp
fistps
cmc
xchg
addr16
loop
lahf
jb
fistl
popa
mov
cmc
lea
lds
push
sbb
cltd
cwtl
pusha
dec
mov
inc
sbb
push
ja
xchg
jnp
mov
jb
inc
mov
rcll
int
data16
arpl
movsb
cmp
aas
es
dec
loope
inc
push
data16
aam
stos
ds
subb
xlat
xor
imul
jg
int3
push
inc
and
out
adc
ss
push
push
popa
and
jge
dec
fwait
ds
fldcw
jns
loope
out
dec
pusha
repnz
pop
imul
push
in
clc
adc
dec
mov
jp
pop
sub
popf
mov
fwait
loope
mov
inc
push
xorb
sbb
fwait
lds
mov
out
pop
xor
aam
add
fidivl
icebp
adc
jle
lret
xor
fsqrt
cmp
fucomp
push
adc
pop
xchg
out
mov
sub
repz
and
cld
rorl
insb
adc
jno
sub
or
mov
insb
jle
pop
cmp
js
cmp
cltd
push
mov
fnstsw
ljmp
inc
ja
ja
andb
clc
fwait
mov
xchg
iret
jecxz
shll
cltd
dec
and
jae
cmp
aad
cmp
and
xor
cmp
aaa
mov
aaa
jg
out
inc
shrl
add
out
push
imul
and
ljmp
mov
xor
je
rcrl
nop
loop
lods
pop
push
nop
jl
and
mov
dec
add
jp
adc
pop
xchg
cmpsl
ror
pop
inc
inc
repnz
gs
sbb
adc
hlt
push
out
sub
ds
sbb
cmp
fldcw
dec
idivl
cmp
enter
dec
and
xlat
xsha1
cmpsb
or
ret
loop
pop
sub
aam
mov
fisubrs
stos
insb
test
sahf
mov
mov
adc
lods
mov
shll
inc
xchg
repz
jo
jne
fildll
inc
cmpsb
dec
cmc
push
mov
pop
and
add
stos
enter
clc
jmp
cmpsb
push
out
gs
outsl
cli
jne
jp
data16
in
push
sub
dec
outsl
jo
lea
xchg
inc
in
shll
sbb
out
mov
and
xchg
out
mov
rcl
jnp
dec
xchg
ret
push
mov
jmp
dec
addr16
add
std
xchg
shlb
jp
sbb
pushf
push
stos
lock
add
gs
and
mov
and
fmul
fs
pop
call
or
jecxz
clc
roll
std
cwtl
rcl
mov
fistl
xchg
enter
hlt
cmc
jge
adc
sbb
pop
ds
ss
insb
loope
sahf
mov
addl
sbb
imul
cmp
pop
insb
sbb
imul
orb
jmp
ja
jo
mov
mov
jp
xchg
imul
and
lods
fstps
leave
sarb
js
lods
out
into
inc
inc
loopne
ljmp
xchg
mov
adc
push
and
shl
icebp
jle
int
mov
movsb
or
xlat
mov
hlt
adc
xchg
repnz
pushf
sbb
xchg
fdivrp
add
mov
leave
push
jle
and
mov
std
cli
sbb
push
jmp
popf
push
add
xor
cmpsb
cmc
dec
pusha
fcmovb
jle
or
pop
jg
stc
rcrb
pop
push
jns
lock
and
adc
scas
inc
out
int
cld
daa
fucomip
push
test
lods
add
popa
out
mov
out
test
adc
jbe
and
lods
sqrtps
and
das
xor
mov
rcrl
jle
xorb
lods
cmp
aad
sbb
js
aam
jb
mov
xor
push
aas
push
xlat
icebp
jg
or
cmp
adc
cmp
jge
xchg
lret
cmp
loopne
push
hlt
rcr
mov
jle
sub
inc
nop
push
icebp
and
out
cmp
add
push
mov
pop
repnz
mov
adc
inc
mov
add
inc
clc
mov
in
in
push
sub
js
push
and
loop
or
xchg
sub
leave
sbb
or
push
xor
pxor
movsb
inc
dec
adcl
pop
into
jbe
pop
pop
mov
mov
outsl
test
and
dec
xchg
repz
mov
int3
jg
mov
stc
sbb
xlat
pop
idivl
push
hlt
mov
mov
mov
data16
mov
es
shrb
inc
mov
lret
fistpll
pop
fsubrl
or
jb
pusha
sub
mov
call
ret
jecxz
pop
sub
loop
mov
dec
inc
int
jb
in
cwtl
out
adc
cld
dec
lods
sbb
movsb
sbb
popf
cmp
popf
jge
lock
popf
popf
cmpsl
into
xlat
push
mov
dec
cld
sar
sar
push
imul
aaa
inc
sub
sub
inc
xchg
mov
or
mov
cmpsl
sbb
inc
jns
mov
and
dec
gs
loop
cmp
test
fcomps
pop
test
or
ret
sub
pusha
or
stos
cmp
sbb
cmp
lods
std
fnstsw
fcmovnb
int3
pushf
idiv
repnz
out
addl
lcall
mov
in
repz
outsb
inc
aad
lds
jbe
mov
fcompl
pop
inc
imull
imul
pop
stos
cmp
imul
xor
push
and
mov
sbb
popf
sbb
stos
out
xchg
pushl
pusha
jle
jb
cwtl
repz
leave
int3
pop
jp
and
dec
pop
popa
mov
push
stos
aas
lea
cmp
sbb
inc
cmpsl
sbb
or
bound
outsl
cmp
cmpsl
dec
imul
pusha
in
rol
rcrb
fdivs
inc
and
adc
addb
mov
cmp
orb
mov
sub
xchg
ljmp
pop
push
xor
and
cmpsb
arpl
mov
jmp
xor
ret
pusha
xchg
test
cltd
and
leave
lret
cs
pop
sbb
lret
popa
inc
push
push
in
cmp
lock
ret
fldl
xchg
movsb
mov
cli
xchg
push
pop
or
dec
in
inc
xor
mov
mov
aad
pop
pop
mov
lahf
mov
fsub
jno
xchg
outsl
mov
lods
mov
jl
icebp
xlat
repz
popl
jl,pt
mov
adc
int
mov
cltd
xor
lock
lret
mov
jbe
das
pop
sbb
bound
xor
movl
jae
mov
xlat
out
adc
inc
sbb
decb
and
cmpsb
adc
rcrb
aam
xor
fnstenv
push
dec
popf
ljmp
jge
jecxz
cwtl
xchg
gs
xor
and
in
adc
shl
pop
mov
mov
aam
in
arpl
jne
lahf
xor
lahf
or
jp
in
push
std
cltd
pop
int3
lret
jne
cs
test
cmpl
xchg
mov
stc
or
cld
dec
loop
imul
lret
insl
cmp
popf
adc
mov
into
ror
fsubp
jecxz
or
loope
icebp
mov
pop
cmp
pop
jmp
ret
adc
adc
sbb
shll
pop
adc
pushf
and
xchg
push
ljmp
jno
stos
sbb
adcl
lds
vpmaxsw
jb
push
insl
mov
aam
scas
or
xlat
xor
cmpps
dec
popf
test
inc
push
sahf
push
cs
xorb
scas
add
pcmpeqd
inc
mov
or
xchg
xor
adc
sbb
mov
or
dec
rcrl
fwait
aaa
dec
push
aam
jle
sub
cmp
xlat
cltd
or
jo
jp
jno
jmp
adc
mov
inc
in
test
sub
arpl
test
or
es
outsl
data16
bound
cmp
sbb
sahf
xor
les
or
push
push
sub
and
inc
divl
inc
bound
inc
cmpsl
adc
jge
call
cmp
pop
sub
push
fsubs
popf
cs
sbb
dec
sub
xlat
cs
jg
mov
mov
jne
js
lret
cwtl
inc
and
sub
pop
ja
xchg
in
ror
mov
data16
dec
loope
xchg
cmp
bts
scas
es
int
sbb
les
cmp
mov
pop
in
push
es
cmp
test
fidivs
xchg
pop
ret
cmp
or
outsb
dec
loope
mov
out
cmpsl
jecxz
scas
cltd
or
jmp
mov
or
lods
ret
pop
lret
sti
xchg
inc
mov
xor
add
sbb
and
stos
and
out
fwait
mov
jmp
in
out
cmp
xor
clc
cmpsb
gs
int3
into
lcall
inc
in
adcb
ret
aas
add
mov
lret
cmpsl
adc
lcall
cli
dec
pop
cmp
push
inc
cmp
dec
mov
inc
sub
xchg
push
mov
push
test
or
xor
out
mov
push
xchg
mov
push
xchg
pop
add
mov
fwait
cli
inc
nop
push
adc
ljmp
mov
dec
jns
in
push
cmpsl
mov
aas
insl
sbb
in
push
lea
outsb
loope
decl
jbe
addr16
pusha
push
mov
mov
xor
enter
aas
test
or
mov
inc
add
jge,pn
fwait
outsb
pop
mov
data16
mov
dec
add
lahf
cmp
outsb
dec
or
ret
sbb
movsl
lret
xor
jmp
stos
sbb
pop
fdivs
pop
push
sbb
xor
je
mov
mov
xor
mov
mov
adc
and
mov
ljmp
cmp
rcr
sarl
popf
idivl
fadds
leave
xchg
xchg
dec
scas
out
mov
sbb
mov
dec
mov
adc
aam
cmp
inc
into
xchg
push
cmp
jb
push
imul
xor
xchg
in
std
lds
sub
out
inc
call
pop
sti
loopne
movsb
jl
pop
out
jnp
cltd
and
sti
push
std
sbb
ss
jg
xchg
aad
or
insb
mov
shll
ret
and
xor
cld
push
xchg
fsubr
adc
out
in
rclb
rclb
or
and
add
cli
xchg
out
ret
adc
leave
sbb
insb
push
cmpsb
fwait
sti
and
lahf
jbe
repz
stos
dec
std
mov
pushf
scas
js
dec
hlt
gs
das
sbb
mov
out
mov
or
mov
cwtl
sbb
dec
out
cmp
mov
fsubrs
or
dec
dec
mov
daa
loopne
xor
adc
xchg
fldl2t
divl
call
pusha
jl
aaa
cld
imul
lahf
mov
aad
or
aas
dec
fisubrl
dec
hlt
pop
jns
inc
fsubs
lret
shlb
in
aas
lahf
sub
leave
lahf
call
mov
push
fstpt
sub
mov
push
cmpsb
cld
inc
repnz
arpl
and
inc
dec
popa
lods
bound
xchg
shll
nop
add
loope
sbb
lahf
call
mov
or
jb
dec
mov
ja
pop
gs
shlb
add
xchg
pop
add
psadbw
adc
dec
push
popf
inc
popf
insl
int
jnp
push
adc
in
ret
test
xor
push
mov
clc
inc
or
jnp
or
or
adc
cmpsb
pushf
fbstp
xchg
sub
push
and
mov
mov
clc
cmpsl
pop
cmp
lock
movb
in
scas
fidivs
adc
stos
xor
mov
xchg
mov
jae
in
in
and
imul
int
cmc
xchg
add
hlt
mov
popa
arpl
sbb
call
add
xor
cmc
add
cmc
repz
push
mov
cs
ficomps
add
stc
and
into
jns
push
rcrb
jmp
and
clc
mov
repnz
in
repz
push
repz
fsubs
roll
jecxz
pushf
and
lret
sahf
gs
rorb
push
addr16
or
fnstcw
add
stos
enter
into
xor
mov
fnsave
in
inc
jmp
adc
stc
mov
pop
dec
daa
jge
xor
cltd
sbb
mov
movsb
insl
int3
shll
fdivs
filds
or
dec
dec
mov
loopne
lock
mov
aad
cltd
mov
popa
mov
lods
push
aas
or
lret
mov
aam
mov
inc
popf
push
mov
mov
xor
mov
pop
add
mov
mov
adc
dec
dec
and
bnd
lret
xchg
inc
mov
cmp
daa
add
xlat
push
ret
mov
cmc
jl
adc
pop
and
sbb
ds
mov
mov
aam
ss
xchg
pop
mov
pop
mov
test
jne
ljmp
imul
ret
aad
inc
fs
adc
fsubrs
in
jge
inc
es
popa
lods
ss
in
aas
fdivrl
negb
mov
popa
adc
jbe
xchg
test
push
mov
dec
and
pop
xchg
adc
push
jmp
ret
jle
cmpl
mov
sbbl
push
jbe
sub
clc
adc
add
pop
jo
inc
mov
cmpsl
mov
push
pop
lods
rolb
push
out
fildl
out
adc
sbb
mov
fsubl
dec
xor
mov
cmp
xor
push
push
pusha
xchg
jp
das
xor
push
je
into
gs
mov
sub
arpl
or
jnp
cmpsl
inc
xor
cwtl
xor
add
ficoms
fistpll
shr
xor
popa
enter
stos
ror
aad
data16
xlat
out
arpl
xchg
xchg
mov
pop
and
fimull
inc
pushf
add
nop
in
fildl
adc
dec
and
punpcklwd
negl
xchg
sbb
outsl
out
pop
loopne
add
add
inc
sahf
mov
mov
pop
jmp
jbe
push
xor
inc
cmp
push
cld
mov
cs
mov
cld
cmp
dec
in
fidivs
rcl
sar
xchg
shll
lds
pop
mov
xchg
mov
aad
std
mov
jb
cmp
dec
push
mov
dec
mov
js
out
sub
call
inc
fcompl
decb
fstpl
orb
xor
mov
xchg
fistpl
and
sub
popf
xchg
shrb
mov
bound
sub
jl
add
shrl
and
js
jle
push
nop
jo
dec
shll
cld
nop
mov
shl
or
pop
inc
hlt
xor
mov
mov
std
mov
add
sbb
fwait
mov
cmp
and
paddq
les
or
sub
or
jecxz
jl
dec
or
es
scas
es
cmpsl
in
push
in
sbb
fistps
xchg
test
mov
mov
or
push
xor
aas
mov
fwait
test
dec
out
fildl
xchg
xor
push
mov
and
outsl
popa
adc
sbb
mov
pop
ja
hlt
mov
xor
pop
hlt
loopne
dec
in
sub
insb
jmp
pop
popf
popa
jbe
sbb
adc
jecxz
imul
add
push
int3
adc
cmp
mov
std
addb
or
jp
insb
popa
clc
popf
adc
jns
dec
mov
jl
add
mov
into
xor
leave
aas
push
clc
pop
fidivl
sbb
pop
jo
andl
test
mov
scas
inc
mov
jg
pop
push
aaa
int
jns
sub
sub
fucomip
mov
jl,pt
test
lock
sub
xchg
repz
aad
inc
adc
hlt
or
sub
sub
sbb
add
popa
sbb
sub
mov
stos
das
mov
aad
cmp
les
leave
int
mov
fisubrs
lret
dec
mov
mov
jo
push
adc
sbb
test
rorl
iret
pop
add
adc
mov
lods
xchg
sbb
dec
mov
ljmp
call
shl
notb
lock
sbb
push
repz
repz
and
add
clc
sub
inc
xchg
ret
mov
or
mov
inc
or
sub
sub
sbb
bnd
mov
shr
repnz
mov
bound
jmpw
jno
cli
sub
lods
test
subb
mov
mov
les
cmp
xor
shll
and
xchg
xchg
in
insb
xchg
mov
cmp
jl
xor
pop
popa
clc
push
sub
xor
jmp
shll
cmpsl
dec
and
inc
dec
movsl
pushf
dec
stos
add
test
cmpb
mov
repnz
jne
fmuls
out
dec
dec
fdivrl
ds
pop
dec
fisubrl
nop
in
ret
test
andb
cmp
mov
sub
mov
adc
andl
addr16
xchg
or
mov
xchg
mov
sbb
push
cwtl
test
out
int
sbb
sbb
mov
push
push
insl
jmp
adc
mov
ljmp
sbb
gs
dec
fistpl
jb
mov
sarb
xchg
or
jge
mov
or
jne
push
adc
fidivrl
pop
fistps
sub
dec
stc
scas
daa
mov
mov
cmpsb
jb
and
fsubs
ret
jae
pop
lds
testl
adc
fs
repz
shr
xchg
inc
lock
sub
xchg
pop
ret
jmp
movsl
dec
dec
pop
clc
test
hlt
pop
enter
jg
or
cmp
push
test
mulb
pop
adc
scas
mov
xchg
data16
test
loope
ficoms
xchg
mov
cs
icebp
movsl
mov
dec
stos
je
loope
mov
lock
cmc
or
movsl
lahf
movsb
sbb
inc
stc
inc
lahf
adc
jecxz
push
push
pop
mov
xor
sub
rorb
jns
insl
mov
scas
inc
mov
imul
fwait
sub
xor
or
repnz
clc
mov
data16
orb
pop
out
cmp
cli
adc
sbbb
scas
inc
int3
or
js
mov
fstpt
stos
sbb
int
cmp
lock
pop
mov
sub
pop
scas
iret
loopne
push
sub
push
sub
cmp
ja
pop
pop
sub
fnstenv
addr16
into
push
in
mov
xlat
mov
sbb
add
and
inc
sbb
mov
rcrl
add
xchg
adc
repz
xchg
pop
popa
cltd
inc
iret
repnz
rclb
daa
stc
call
add
data16
dec
fwait
add
out
pop
and
jmp
stc
pop
xchg
mov
fnstcw
pop
out
xlat
sub
xor
and
push
cmp
movsb
push
fadds
ja
jno
js
aas
scas
ja
adc
xchg
adc
in
sahf
xor
dec
rcl
negb
frstor
test
cli
push
xchg
adc
or
add
and
xor
xchg
lds
ficoml
add
in
xor
roll
jecxz
and
shll
addl
sub
mov
push
das
sbb
sub
mov
add
fcoml
int3
sbb
mov
sti
cs
jnp
adcl
dec
adc
xchg
jge
mov
sbb
aad
fcmovb
push
pop
imul
mov
js
adcl
cwtl
push
lock
xchg
nop
daa
test
add
cs
repnz
jnp
in
stos
arpl
push
scas
in
nop
add
xor
cmpl
in
mov
imul
xchg
sub
push
mov
jg
cli
or
js
pop
or
pop
sarb
cs
sub
ss
push
sahf
sbb
sti
cli
popa
add
xchg
insl
adc
inc
xor
push
jo
pusha
mov
inc
mov
ss
inc
fldcw
aas
mov
sarb
mov
lret
cmpsl
jmp
ds
add
inc
test
sub
and
sahf
scas
dec
dec
test
and
sub
gs
pop
scas
insl
push
and
mov
ds
pusha
jns
mov
xlat
pusha
lock
sub
xlat
sbb
and
mov
pop
mov
gs
fcomps
mov
push
fisttps
mov
cmpsb
jnp
or
addb
xor
cmp
sub
arpl
add
fsts
adc
fistpll
pop
lock
lahf
push
mov
dec
inc
pop
addl
xchg
jecxz
sub
fistpll
add
sbb
inc
repz
movsb
sub
lea
and
out
test
stos
adc
and
cmpsl
imul
push
pushf
fsubrp
cld
jecxz
in
or
filds
sbb
cmpsl
push
enter
adc
and
xchg
cmp
mov
adc
decb
in
push
sbbb
pop
aad
neg
cmc
ds
adc
das
mov
push
adc
cltd
jp
and
cmp
cmp
call
push
addl
aas
js
in
pop
cmpsl
pop
or
sbb
lcall
stc
lea
nop
dec
or
std
lret
testb
repz
and
inc
imull
cmp
out
pop
das
and
shr
or
mov
outsb
lds
and
in
xchg
int3
jg
fisubrs
fildl
lea
add
mov
sahf
jb
mulb
insl
loopne
or
jnp
jge
sbb
sbb
scas
mov
push
xchg
js
lock
lret
xchg
int3
sbbb
pop
jo
mov
mov
and
mov
sti
jecxz
add
out
push
sahf
xchg
ret
jge
pushf
popa
dec
mov
push
scas
imul
pushf
scas
sti
fwait
orl
jmp
pop
lds
insb
ret
sbb
in
dec
add
push
jno
push
test
icebp
push
jne
lahf
into
jmp
dec
dec
cs
arpl
mov
call
and
mov
jb
pushf
pop
leave
shll
decl
fimull
bound
add
mov
xor
pusha
add
cmp
and
fdivrl
push
movsb
nop
lret
push
dec
xchg
cli
lods
and
mov
enter
adc
rolb
les
adc
add
insl
div
aas
ficoml
sahf
or
movsl
mov
clc
xchg
addl
push
push
xchg
lods
sub
cmpsl
shll
xor
int
adc
rolb
jbe
aaa
dec
stos
jbe
aas
xchg
add
xor
dec
mov
push
xor
movsb
push
cmpsl
les
cmp
jo
mov
and
ja
xor
in
aas
adc
leave
arpl
gs
ret
mov
or
xchg
fnstcw
sar
pmaxub
cmc
sub
pop
hlt
jg
mov
int
daa
cmpsl
insb
pop
add
cltd
lds
push
fstl
adc
popf
mov
ret
fs
dec
scas
div
dec
into
mov
shll
popa
clc
ja
xor
pop
cli
xchg
lea
fiaddl
mov
mov
jge
ficomps
mov
sub
daa
mov
arpl
mov
xlat
xor
adc
xchg
sbb
sahf
jbe
cmc
addl
mov
cmp
jno
xor
or
xor
movsl
dec
fwait
cli
subb
cmp
or
jne
rcrl
fbld
fistpl
sbbb
push
jb
nop
xchg
popl
movsl
ja
dec
adc
and
dec
scas
cmp
xor
push
cmp
lods
aaa
int3
aam
pinsrw
inc
adc
out
inc
cld
pushf
stc
add
cmpsb
mov
adc
push
stos
push
insl
fisttpll
mov
loopne
inc
mov
sub
mov
cmp
xlat
loop
dec
fcmovnu
ljmp
fcos
pop
xor
iret
dec
pop
mov
dec
scas
sub
pop
sub
or
add
jmp
push
cwtl
push
repnz
test
outsb
pop
ret
mov
iret
imul
inc
inc
cmpsb
fidivrl
out
adc
lock
mov
jne
fstps
fs
lret
lea
pop
in
dec
insb
cmpsl
clc
fcoml
xchg
movsb
insb
push
lock
das
scas
jns
jbe
inc
mov
frstor
lock
cmc
push
lods
mov
popf
sub
testl
movsl
in
jnp
out
mov
pusha
subb
vpunpckhdq
fwait
mov
jle
arpl
or
lahf
les
repz
out
sbb
pop
adc
jo
sub
shl
pop
xor
push
int3
push
xor
loopne
es
xor
cmovp
push
pushf
dec
mov
xchg
iret
xor
mov
pop
shl
repz
mov
dec
jmp
popa
fmul
andl
fwait
orl
iret
mov
cmp
xor
cmp
out
les
push
jno
frstor
data16
ss
adc
pop
mov
sbb
cmp
in
imul
mov
cld
cmp
insb
insl
loopne
cmp
outsl
and
sbb
std
sbb
jp
movsb
out
repnz
xlat
je
jno
lret
lea
imul
mov
stos
jge
sub
shll
stos
fidivrl
arpl
cmp
in
mov
mov
cli
push
jp
cmp
bnd
call
out
mov
or
test
adc
addl
leave
sbb
fstpl
cmpsl
adc
ror
in
xchg
dec
adc
mov
ret
pusha
and
popf
test
sub
jmp
dec
xchg
adc
mov
mov
daa
and
adc
mov
sub
inc
push
imul
aaa
dec
movsl
xor
xchg
or
lret
clc
push
movsl
imull
lret
adc
pop
jmp
jl
inc
sahf
jecxz
pop
dec
xchg
std
xchg
scas
insb
jecxz
mov
cmc
adc
stos
and
sbb
lret
jp
fistpll
mov
mov
mov
dec
shrl
stos
sbb
dec
pop
push
sub
xor
xchg
pop
lret
mov
sub
fmuls
dec
dec
jecxz
pushf
cmpsb
xor
loope
in
mov
adc
mov
dec
adc
movsb
ss
subb
insb
movsb
or
adc
sub
sub
xchg
jle
mov
add
sbb
in
push
mov
and
fwait
push
out
jmp
roll
loop
dec
fsubrl
jl
mov
jge
js
bound
sahf
gs
and
inc
cmp
jmp
and
pop
and
fsubs
mov
add
or
leave
fcomi
dec
adc
subb
lods
pusha
popf
aam
sub
pushw
inc
lea
xchg
jge
mov
adc
fwait
and
lret
and
shrb
adc
and
loopne
mov
bound
test
ret
sbb
sbb
pushf
adcb
or
je
push
cmpsb
push
add
inc
push
sbb
in
push
in
add
adc
ret
mov
imul
pop
negb
xchg
xor
and
enter
rcrb
mov
mov
aas
shlb
inc
adc
jae
cmpsl
mov
jle
add
adc
jl
jge
and
sbb
loopne
dec
mov
lods
push
flds
jo
repnz
lret
sbb
xchg
dec
test
xor
test
inc
loop
pop
data16
dec
hlt
cltd
dec
adc
nop
lods
pop
jne
jmp
imulb
xlat
mov
cmpsl
mov
int
and
scas
mov
mov
ds
outsb
sub
dec
data16
lea
mov
int3
dec
into
and
jg
lods
push
jns
push
out
xlat
mov
jne
fdiv
jg
stc
sti
xchg
ror
nop
adc
lods
mov
inc
add
sub
jp
pop
xor
push
fistl
test
push
add
xor
jg
jnp
aad
lea
xor
cld
dec
dec
faddp
test
addr16
mov
jns
and
jbe
add
and
bound
inc
fstpl
in
mov
adc
stos
xchg
stos
xor
dec
pushf
adc
jle
popa
pop
cmp
icebp
xchg
adc
sub
pusha
test
stos
mov
push
pop
mov
inc
pop
sbb
sbb
je
mov
adc
jbe
xchg
push
js
fbstp
and
mov
aas
movsb
cmp
roll
pop
cmp
add
sar
dec
dec
jl
push
mov
pop
add
jnp
scas
xor
pusha
add
mov
or
sbb
mov
pop
push
push
lds
fisubrs
int
sub
shll
int
cmp
je
xor
aam
lahf
xchg
mov
jb
repz
rorl
cltd
cli
sub
mov
sub
push
pop
push
mov
shl
mov
jbe
pop
push
das
movb
mov
cmp
call
inc
dec
addr16
out
daa
inc
adc
push
fldenv
sbb
pusha
testl
mov
push
inc
cld
inc
loop
ds
sub
mov
cs
leave
sbb
cmp
test
scas
inc
fcompl
mov
cmpsb
shlb
andb
sbb
leave
nop
mov
repnz
mov
dec
inc
lret
xor
cmp
jle
ljmp
and
aaa
bound
jns
bound
lock
jg
or
or
xlat
mov
and
lcall
jb
jp
aad
shr
int
push
mov
out
out
popf
push
mov
pop
jg
lods
js,pn
add
lret
mov
call
in
adc
pminub
out
repz
xor
cmp
jno
and
rcrb
enter
jo
pop
xor
es
dec
jno,pn
xchg
aam
hlt
popf
cmc
sbb
loop
aaa
sti
jo
test
xchg
subb
xor
jae
fucomi
bound
sub
imul
push
aam
pop
add
adc
or
xorl
mov
or
push
loop
out
arpl
test
xor
shl
mov
jle
insb
nop
sbb
out
inc
jmp
adc
cld
push
cmp
aaa
pop
sbb
arpl
ret
or
negl
mov
test
aam
jmp
ret
add
inc
aas
xlat
inc
xchg
add
push
mov
mull
add
rcll
mov
inc
bound
xor
xor
push
ret
xorl
mov
aas
sahf
movsb
mov
pop
fmul
cld
or
mov
lret
bound
clc
lock
xlat
xchg
les
xor
xchg
push
jg
xor
mov
mov
pushf
repz
loop
mov
mov
pop
mov
mov
or
call
or
dec
push
jp
mov
cwtl
lahf
test
inc
mov
decb
jmp
or
daa
das
mov
inc
lock
sub
xor
mov
cltd
pop
insb
lret
mov
mov
mov
aad
lods
mov
in
sub
lret
xchg
pushf
mov
test
orb
push
jmp
aam
mov
add
dec
mov
in
cmc
addr16
inc
fsts
stc
mov
pop
mov
in
xor
adc
mov
mov
gs
mov
stc
ss
inc
fisubs
or
nop
jae
jg
jns
fcomp
int
sub
mov
lcall
stos
mov
dec
clc
pusha
jmp
pop
xchg
movsb
jg
xor
pushf
in
xchg
loop
inc
push
cld
push
add
shll
and
push
xchg
rcr
xchg
cld
and
insb
jg
sbb
add
cmp
xor
or
iret
outsl
daa
mov
adc
loop
add
xchg
incl
sbb
add
es
stc
fwait
js
pop
and
or
sub
imul
inc
jae
pop
cmp
pop
dec
test
push
inc
push
xor
xchg
push
cwtl
ds
out
test
fadds
in
pop
aaa
cli
add
inc
fiaddl
icebp
pop
lcall
stc
je
out
push
test
fs
adc
inc
pop
add
testl
pop
mov
aaa
in
sbb
xor
cmc
adc
inc
pusha
loopne
leave
leave
fildll
je
test
add
arpl
pop
dec
fldt
inc
xlat
mov
mov
movl
inc
mov
shl
cmp
fwait
jmp
mov
test
xor
add
mov
pop
scas
push
jmp
jnp
jo
adc
mov
test
repnz
mov
jns
cmpsb
scas
adc
sub
lret
popl
sub
pop
cmc
add
inc
fstpt
xor
dec
call
add
cmpsb
dec
dec
sub
dec
sub
es
outsl
adc
push
fistpl
ja
jmp
jp
ljmp
imul
or
push
fwait
sub
jns
jle
pop
xchg
mov
and
imull
pop
sub
add
dec
bound
and
pushf
repz
enter
int3
out
ljmp
leave
or
arpl
jnp
push
mov
or
test
leave
fcmovne
sbb
sbbb
ja
add
and
clc
and
cltd
cmp
jge
loopne
loop
fistpl
mov
dec
mov
adc
popf
dec
out
xor
lock
stos
mov
or
add
mov
add
mov
xchg
jne
sub
jp
dec
int3
scas
and
xchg
adc
and
sbb
lock
lock
mov
dec
adc
pop
insb
data16
pop
dec
dec
loop
xor
stc
ljmp
mov
das
cmpsb
mov
xchg
ss
imul
pop
dec
out
stos
inc
cmc
shlb
add
fsubl
mov
dec
pop
pop
xor
rcrb
test
lret
shll
inc
ja
icebp
or
fidivrl
mov
sbb
xlat
push
pop
and
rcrl
inc
push
out
imul
aam
sbb
jge
subb
data16
push
shlb
ud0
adc
inc
xchg
mov
or
mov
loope
push
jbe
xlat
cmpsl
repnz
and
aaa
or
movsl
mov
adc
mov
lret
mov
stos
push
rclb
jle
sub
test
testl
sub
or
cmp
pop
mov
sar
insl
push
cmp
subl
fucomip
je
clc
rcr
xor
stc
mov
or
dec
out
jae
add
lods
xchg
xchg
dec
pop
push
mov
cmc
ss
sub
jbe
outsl
bound
jae
jne
lret
ljmp
jg
lods
jns
jl
sbb
adc
mov
adc
and
ror
mov
sbb
lahf
dec
or
aaa
xor
add
xchg
mov
int3
inc
addr16
or
scas
jp
and
dec
lret
or
out
loope
outsb
adc
shrl
xchg
xchg
loopne
push
insb
sub
push
push
ret
cmp
mov
dec
enter
insb
aad
popf
pop
in
mov
imul
sbb
es
cmp
xchg
test
insb
mov
bnd
add
cwtl
fstl
lods
int3
fdivl
mov
jnp
sbbb
stc
mov
aaa
gs
testl
test
xor
add
out
mov
or
clc
sub
push
add
sub
push
movsl
mov
movsl
dec
fnstenv
scas
mov
lods
adc
std
rol
add
repnz
ret
data16
pop
ret
das
pop
scas
pop
dec
popf
std
push
and
fdivl
mov
mov
cwtl
leave
pusha
dec
das
cmp
xor
dec
and
popf
mov
aad
cmpb
cmp
inc
mov
pop
dec
pop
orl
pop
ss
fsubs
push
arpl
pop
dec
cmp
pop
mulb
adc
mov
or
mov
sbb
aaa
and
inc
repz
adc
out
mov
repnz
xor
cltd
xchg
dec
sub
cmp
push
mov
test
cs
cmp
inc
mov
cmpl
dec
aaa
or
add
paddq
inc
xchg
xor
add
inc
iret
dec
and
inc
sbb
dec
fiaddl
pop
cmp
ret
ljmp
insb
mov
je
xchg
mov
jge
adc
fcmovnb
test
push
cwtl
test
cs
cltd
xchg
jmp
aam
stos
mov
sbb
adc
add
add
lret
inc
dec
fistps
bound
add
jbe
and
addb
sti
mov
stos
loopne
jge
mov
or
adc
and
scas
mov
dec
movsl
mov
xorl
pop
movsl
lret
pop
adc
mov
or
sub
pop
test
inc
popf
imul
sbb
adc
popf
lea
js
sub
lds
sub
inc
xchg
dec
aas
push
lret
lret
pop
inc
or
fadd
enter
xor
divb
sub
cmc
pusha
ljmp
mov
fimull
mov
mov
jbe
popa
int
mov
lds
mov
outsb
jecxz
fidivrs
iret
cltd
test
mov
lcall
leave
mov
outsl
inc
out
mov
loop
dec
dec
jno
es
inc
das
iret
sbbb
adc
mov
add
jl
in
imul
add
adc
js
fsubrl
mov
call
mov
insl
insb
std
popf
pop
imul
jle
in
mov
cmpl
or
jnp
repnz
fmull
stos
jb
ss
jo
or
test
jb
mov
ficoml
mov
jecxz
dec
push
loop
mov
mov
cmpsb
dec
ss
mov
jmp
mov
int
push
inc
jecxz
push
dec
mov
xchg
cmpb
dec
mov
dec
int
jl
cmp
iret
push
or
scas
std
jne
enter
std
iret
shl
dec
push
sbb
fisubs
cmc
sbb
push
sub
and
cmp
push
std
in
cmp
shlb
mov
cmp
sbb
mov
aas
insb
shlb
push
cmp
dec
jae
cmp
xor
mov
mov
mov
rclb
clc
stos
inc
and
adc
dec
pop
push
into
xor
jmp
push
xor
mov
xchg
mov
insl
xor
push
jp
push
push
mov
movsb
filds
xor
jmp
and
shlb
mov
mov
dec
bound
jl
cmp
cmc
xor
xor
push
imul
sahf
jmp
out
lret
lods
fdivrl
adc
pop
bound
pop
inc
cmp
jo
loop
push
fdivl
fnstcw
xor
sbb
mov
push
push
adc
outsl
dec
out
adc
data16
and
xchg
adc
mov
and
mov
jge
mov
mov
fs
xor
sub
test
negb
dec
ljmp
scas
jne
mov
xchg
mov
pcmpeqb
dec
movsl
or
inc
push
cmpsb
sub
jge
out
mov
pop
movsb
fst
inc
inc
push
ja
mov
xchg
lret
add
mov
sbb
inc
ret
xor
and
sub
push
jae
xor
jmp
jge
imul
mov
decb
enter
and
xor
or
push
ds
mov
clc
and
mov
sbb
jl
aaa
pusha
or
outsl
daa
push
jge
mov
mov
inc
sbb
sbb
sbb
les
jg
andl
fstl
push
aad
pop
loop
dec
ret
outsb
insb
jmp
insb
filds
sbbl
in
jle
pushf
test
inc
adc
mov
data16
and
push
icebp
arpl
movsl
mov
pop
addr16
xor
dec
mov
je
ds
xchg
add
jp
stos
push
aaa
fs
sub
aam
inc
pop
dec
scas
mov
bound
inc
inc
iret
xchg
lods
fmul
in
ret
call
dec
push
into
ja
and
adc
inc
outsb
negl
xchg
jle
adc
mov
insl
loopne
or
mov
jae
push
in
sub
fildl
jae
mov
cmp
outsb
adc
mov
arpl
shrb
ret
sub
sarb
cmp
add
loop
dec
iret
cld
xchg
push
inc
scas
mov
fsubl
mov
inc
push
leave
movsl
scas
sbbl
fidivl
pop
out
cmp
cmp
add
push
jo
scas
and
dec
popa
pushl
add
test
enter
adc
inc
jae
pop
mov
jmp
and
or
lds
dec
shrl
lds
lds
rcr
icebp
sbb
xchg
mov
or
mov
xchg
push
push
sub
inc
popa
xchg
out
dec
mov
mov
fmuls
fnsave
aam
sti
push
push
push
sub
push
andb
hlt
sub
push
mov
mov
cli
in
push
clc
push
mov
xor
xor
aam
or
xor
lock
imul
cmp
lcall
mov
idiv
xchg
push
lcall
or
test
pop
jo
das
hlt
xchg
add
enter
das
dec
or
xchg
insb
dec
pop
jle
xor
jl
xor
test
les
je
xor
adc
pop
ja
jns
mov
arpl
xchg
mov
dec
dec
scas
popf
mov
int
xchg
mov
sub
insb
jmp
mov
sub
sbb
push
call
repz
out
movsb
pop
aad
xchg
xor
add
push
xlat
sbb
add
scas
and
inc
mov
iret
sub
in
fdivs
jnp
out
mov
je
jg
push
xchg
mov
xchg
out
mov
pop
adc
lret
in
mov
in
xor
xorl
or
gs
roll
data16
sub
pop
push
cmp
jl
roll
inc
inc
cmp
mov
imul
mov
xor
mov
orl
neg
fidivs
sti
faddl
outsl
stc
mov
pop
xor
roll
daa
inc
rcll
or
mov
fmulp
dec
mov
mov
roll
enter
mov
lcall
rcrl
push
pop
push
aas
decb
jne
mov
push
cmc
dec
add
push
mov
repz
stos
mov
mov
fwait
sub
int3
push
stos
cmp
adcb
or
jae
lahf
rclb
outsb
mov
movsl
jno
mov
enter
and
pop
mov
popf
mov
jle
or
mov
or
lahf
pop
jge
pop
lods
xlat
es
aam
xor
orb
cmp
sarb
jno
ret
lahf
ljmp
mov
insl
in
inc
fistl
mov
sbb
mov
divb
test
fstpl
mov
dec
nop
pop
arpl
mov
or
stos
jg
out
adc
aam
cmp
js
lea
cmp
pop
ss
cld
inc
mov
iret
int
jmp
or
jae
cld
mov
gs
ljmp
jg
cmc
xchg
mov
push
or
js
fsubrl
inc
das
mov
push
gs
mov
mov
je
jle
fcoms
xchg
pop
jg
pushl
lea
inc
or
mov
inc
shrb
cmp
mov
enter
adc
in
jp
in
jg
or
cli
jne
mov
outsl
and
adc
test
xor
stos
fnstenv
cmp
adc
inc
rolb
xlat
ljmp
cltd
jmp
jg
movsb
pop
xorb
xchg
or
mov
or
mov
xor
push
test
js
inc
adc
pushl
imul
jbe
rclb
mov
add
push
xchg
push
hlt
dec
repz
jle
fcomps
xor
mov
sub
or
iret
out
or
ret
mov
and
push
movsl
or
shr
iret
mov
xchg
out
mov
jmp
xchg
mov
lock
mov
cmc
pop
sbb
jnp
test
xor
test
sahf
push
add
in
cmc
shll
push
scas
jl
sbb
xchg
ret
rolb
pop
mov
jg
ret
ffree
adc
subb
frstor
pop
jbe
pop
lock
incl
mov
fwait
cld
mov
adc
or
dec
shl
ja
cmp
mov
cmp
aam
lahf
mov
add
std
cs
hlt
mov
cmp
mov
sbb
out
cltd
in
push
xlat
xchg
and
addr16
ds
out
in
xchg
daa
movsb
mov
jge
mov
out
out
jl
aad
test
mov
push
fwait
add
lock
jge
cmpb
xor
inc
add
aad
scas
hlt
mov
out
mov
movsl
out
pusha
and
shlb
xchg
out
xchg
scas
push
fcoml
dec
addr16
mov
cmp
insb
popa
ds
mov
fisttpl
fwait
push
stc
pop
mov
lock
ror
cld
xchg
sti
cmp
loopne
sbb
pop
jne
add
arpl
cmc
xchg
ja
sbb
mov
or
pusha
push
add
divl
pop
jle
inc
jle
or
xor
bound
xchg
mov
aad
jbe
adc
sarl
std
dec
cmpsl
mov
lods
imul
pop
mov
pop
mov
jle
aaa
orl
mov
and
shll
lret
jge
data16
mov
and
mov
dec
loopne
adc
xchg
mov
in
mov
and
mov
dec
pop
rcl
jo
out
jge
dec
aas
xchg
xlat
jmp
push
pushf
mov
les
dec
pop
div
fbstp
ds
aad
lret
ret
cwtl
adc
sbb
xor
mov
dec
sbb
sti
adc
scas
data16
push
and
dec
mov
test
mov
stc
xchg
jnp
push
and
sbb
into
lods
push
out
testl
lods
stc
pop
mov
sbb
jmp
std
lcall
sub
push
or
lahf
inc
sub
jl
sbb
xchg
xor
mov
sub
push
mov
fiadds
into
xlat
fdivl
ljmp
adc
cmpsl
outsl
or
pop
xchg
daa
jno
sarl
jecxz
insb
repnz
cli
insl
stos
jmp
popa
bound
push
in
and
cmp
ja
sbb
jecxz
imul
push
insb
test
lds
pop
push
icebp
lock
roll
and
jmp
in
cltd
ljmp
adc
shl
divb
inc
dec
inc
pusha
dec
inc
sbb
xchg
lret
sti
add
inc
setg
cmp
ja
mov
xchg
movsb
je
and
jecxz
and
rclb
adc
hlt
lcall
xor
mov
loop
and
push
sti
mov
fsubrs
mov
popa
dec
push
gs
or
cmp
sti
sbb
mov
jle
xor
outsb
aad
jp
inc
div
pop
push
ficompl
sar
dec
cltd
cmpsb
mov
popa
clc
lods
and
jg
jecxz
xchg
sub
outsb
xchg
bndstx
mov
int3
jmp
incl
or
in
sbb
push
inc
aad
je
pusha
out
fsubrs
add
jmp
mov
jno
cmp
clc
popf
mov
dec
jmp
or
lahf
push
sahf
pop
fisttpll
mov
setle
push
sub
add
dec
insl
pop
repnz
pop
adc
xchg
not
repz
or
or
into
fistl
sub
mov
mov
in
xor
dec
int
out
push
lods
rclb
lret
fdiv
pop
mov
xor
jae
mov
pop
jbe
mov
data16
ljmp
mov
mov
xchg
push
cmc
pushf
outsb
mov
lea
pop
repnz
xchg
and
mov
or
push
xchg
xor
and
bound
fsubrp
mov
test
bound
rcll
jae
xchg
adc
aam
xor
sbb
mov
push
or
data16
mov
imul
pop
out
pop
cmpl
cli
cltd
sub
movsb
rclb
adc
jmp
jb
mov
loope
addr16
sbb
mov
int
jo
int
mov
gs
pusha
dec
dec
sarb
push
cwtl
xchg
dec
ret
test
hlt
mov
comiss
and
outsl
int
lret
mov
mov
enter
pop
out
fstps
push
mov
sub
sub
es
rcrb
cmp
je
out
movb
and
pop
loope
iret
push
sbbl
ljmp
sub
sub
jmp
lods
dec
push
popf
dec
test
jmp
cmp
jg
ret
test
jg
push
clc
and
setge
sbb
jge
or
or
and
addr16
add
sub
pushf
pop
stos
or
aad
mov
movsb
mov
push
mov
out
pop
mov
nop
xor
fistps
fisubl
or
sbbb
sbb
adc
jge
fdivl
push
xlat
or
callw
sbb
cmp
fs
ret
inc
pop
xor
popa
jecxz
jl
fisubl
dec
lds
in
inc
in
orl
mov
mov
pop
sbbl
jae
pop
je
jmp
test
adc
push
sbb
hlt
mov
cs
mov
sbb
add
lahf
xor
inc
aaa
fisttps
adc
out
mov
rcl
sub
cwtl
sbb
je
dec
push
ficompl
dec
repz
jmp
lcall
add
pop
mov
or
daa
pop
cmpsb
addb
sarl
sbb
in
cltd
dec
test
in
repz
push
call
jns
mov
dec
popf
lock
mov
push
inc
les
mov
cmc
sahf
xor
call
inc
push
imul
jns
xchg
pop
lods
mov
cmp
fldt
les
cld
incb
push
add
pop
test
test
jns
andl
lahf
or
mov
ret
inc
cmp
jg
sbbl
or
jns
movsl
and
mov
and
fwait
inc
daa
out
cmp
push
sub
call
fisttps
imul
in
rolb
adc
or
jbe
enter
jo
ret
lods
sub
jp
addr16
sub
sahf
out
mov
cli
jmp
inc
mov
bound
sbb
out
mov
jg
mov
sbb
popa
fdivrs
push
sbb
stc
clc
or
in
ja
incb
push
sub
ret
adc
insl
adc
js
push
push
scas
inc
and
or
xor
push
mov
mov
dec
dec
dec
mov
rol
sbb
lods
adc
negb
add
sub
popf
scas
and
ds
adc
mov
push
mov
inc
dec
mov
pop
jne
xor
jmp
out
popf
stc
inc
lea
cmp
dec
sub
repz
outsl
mov
addr16
mov
arpl
mov
imul
push
lods
js
pop
adc
and
jl
lods
cmp
lock
jbe
sub
arpl
and
sub
cmc
add
and
sub
mov
jae
daa
pop
jne
mov
or
dec
mov
xchg
cmp
test
data16
stos
fstps
xor
mov
ljmp
fs
mov
mov
mov
lds
jmp
xor
ss
imul
sub
loop
mov
sub
push
loop
outsl
adc
cld
stos
mov
ror
int
pop
out
jge
and
lea
pop
dec
mov
into
enter
cmp
dec
scas
in
adc
rorl
test
dec
enter
out
aas
pop
sub
and
in
ficompl
enter
sti
rol
mov
test
jge
ja
cli
sahf
push
icebp
sbb
and
testb
cmp
popa
mov
jo
aas
push
icebp
sbb
cmp
sub
pop
push
dec
inc
enter
lret
jns
loop
pop
dec
sbb
pop
push
sbb
pop
popa
mov
jbe
repz
mov
arpl
jno
mov
push
dec
adc
push
pop
out
popf
mov
cmpsl
mov
mov
repnz
jnp
or
jecxz
daa
data16
leave
pusha
sbb
test
mov
cmp
mov
mov
and
mov
aam
int3
lret
sub
aaa
fstl
sbb
idivb
pop
jge
or
pop
imul
adc
andl
pop
push
popf
add
stos
adc
sub
imul
or
aam
push
adc
mov
out
adc
dec
pop
adc
add
stc
cmpsl
rcrl
inc
loope
pop
push
mov
push
jmp
sahf
cltd
orl
fisttps
in
cmp
sahf
mov
dec
lods
mov
jno
push
push
cwtl
lods
repz
mov
test
xchg
ja
fiaddl
add
mov
push
inc
cmp
pop
inc
pop
and
mov
jnp
test
sub
repnz
push
neg
ljmp
sub
in
mov
push
jl
dec
sub
test
lret
std
ss
mov
xlat
cmp
sbb
xchg
outsl
insl
scas
cwtl
clc
mov
and
incb
inc
mov
in
xor
push
add
ja
or
popf
cmp
xor
lods
xchg
xchg
dec
push
dec
and
imul
push
aas
loope
cmpsl
idivb
leave
lea
cli
mov
cmp
faddp
mov
decl
sub
xor
pop
gs
lds
mov
insb
outsb
push
arpl
xor
cmp
xchg
jp
push
ret
mov
add
mov
gs
testb
cmp
ljmp
cwtl
fs
stc
nop
inc
jbe
jns
add
sbb
movsb
shll
add
popa
aaa
iret
xchg
sbb
pop
dec
pop
shlb
pop
cmc
xor
lahf
mov
push
or
push
xchg
mov
gs
out
mov
lahf
popa
movsb
pop
push
xchg
les
mov
jne
out
inc
xchg
sub
push
ja
aaa
xor
jb
enter
pop
test
shl
fdivs
mov
orb
out
xor
shlb
in
xor
mov
xchg
adc
or
stos
jo
sbbb
mov
mov
push
jg
adc
nop
int
jg
jno
xchg
iret
xchg
push
and
mov
std
outsl
xor
or
sbb
mov
push
repz
sub
xlat
and
or
xchg
leave
pop
lcall
cmpsl
out
mov
pop
xor
mov
sub
rorl
loop
fnstcw
mov
add
pop
rorb
dec
daa
cmp
adc
push
sti
pop
xor
and
leave
inc
sahf
inc
clc
loopne
stos
lret
and
out
das
add
sub
repnz
outsb
mov
out
movsb
xchg
adcl
xor
lcall
xor
aas
and
rol
dec
fsubl
test
jmp
ds
xchg
add
cmc
jbe
xchg
popa
loope,pt
cmp
aad
xor
push
hlt
roll
faddl
xchg
or
aas
sti
mov
inc
shr
push
xchg
inc
hlt
jp
xor
mov
push
scas
mov
bound
jmp
jno
lcall
lock
add
mov
jne
mov
pop
cwtl
jae
out
lods
pop
test
aaa
or
mov
ret
outsl
and
mov
fnstenv
arpl
adc
sbb
orl
xor
mov
push
loope
aam
lds
xchg
test
push
roll
repz
ficompl
push
mov
shlb
sbbb
mov
jecxz
sub
inc
sbb
lods
inc
dec
xor
mov
lret
bound
jmp
loop
mov
popa
sbb
sub
push
lods
aad
push
je
je
add
jmp
pop
cmp
pop
popa
add
sbb
adc
mov
jbe
in
xchg
cld
test
cld
cmp
push
out
add
aas
test
xor
mov
mov
mov
sbb
pop
sbb
cmp
test
and
push
pop
xchg
jns
shrl
and
mov
repnz
xor
mov
pushf
mov
mov
mov
add
aaa
addr16
mov
mov
cmp
mov
cmp
inc
sbb
sub
cwtl
mov
or
xorb
cmp
jb
loopne
mov
add
sbb
int3
fisubrs
push
pop
movsl
pushf
ds
movsl
lahf
cmp
and
orl
das
ret
and
nop
jb
or
mov
movsl
test
sub
jmp
mov
mov
mov
stos
cmp
fbld
stos
jl
adc
cltd
push
sub
xchg
mov
push
in
fnstcw
repnz
test
addl
lret
fstp
pop
ret
push
inc
iret
mov
test
adcb
add
and
jnp
sti
and
mov
pop
inc
inc
rol
cmpsb
sbb
and
xor
jnp
mov
shrb
shrb
jns
popf
sub
or
test
test
scas
or
in
xor
mov
sbb
lds
inc
inc
js
xor
sbb
iret
and
push
jecxz
test
test
inc
movsl
mov
fwait
sub
sub
scas
jns
daa
repz
fdivp
inc
lcall
add
jne
mov
pop
mov
pop
jg
fdivs
decb
daa
push
test
call
cmp
push
das
adc
cmp
aad
pop
xor
in
rol
push
push
jle
pop
mov
dec
and
out
aam
hlt
sbb
mov
push
jmp
or
push
sarl
fcomip
ja
add
add
or
add
xor
idivb
int3
into
daa
jae
or
inc
inc
sahf
pusha
loopne
jo
mov
ljmp
xor
inc
popa
mov
sbb
enter
adc
and
adc
jne
inc
mov
fstpt
fwait
ds
cmp
std
sbb
push
jae
xchg
adc
mov
xchg
decl
mov
cmp
aas
enter
mov
add
lds
add
shl
pop
dec
pushf
insb
cmc
je
std
xor
jmp
sub
pop
adc
cmc
mov
aad
and
popa
mov
mov
cmp
fstl
addr16
and
xchg
popf
stos
pop
repz
sbb
in
xor
test
fs
adc
push
jae
outsb
lds
lods
mov
add
ret
pop
das
and
pop
pop
jmp
mov
mov
xor
bound
adc
lods
lock
cmp
test
push
sbb
fistpl
and
mov
cmc
mov
mov
dec
xor
add
es
mov
imul
cli
cmp
and
mov
ret
fistpll
fistpl
loop
mov
add
movsb
lret
imul
or
add
xorl
movsl
inc
cs
mov
clc
mov
xchg
sbb
jbe
push
daa
pop
arpl
test
push
dec
dec
fildll
fcompp
or
movsb
repnz
mov
push
popa
inc
inc
adc
fwait
push
inc
mov
flds
xchg
jne
into
out
jne
fcomp
out
mov
add
int
popa
incl
xor
cld
mov
xor
ret
frstor
out
xchg
rol
mov
arpl
sahf
pushf
adc
andl
sub
dec
mov
test
sbb
imul
sbb
outsl
es
sub
repz
test
scas
mov
mov
in
xchg
fidivrl
mov
sbb
mov
push
loop
fmuls
aas
dec
mov
cmpsl
mov
xchg
cmpsb
data16
or
adc
data16
add
sbb
hlt
push
cmp
fpatan
imull
pop
je
stos
mov
xor
and
or
sub
shl
ret
jp
dec
cwtl
or
xor
jmp
pop
xor
push
lods
jae
sti
fwait
push
jmp
mov
out
dec
hlt
mov
sub
pop
mov
mov
pop
fsubrs
std
jnp
or
sub
jne,pt
xchg
xchg
pop
jne
jae
dec
jecxz
cmp
rcl
mov
lahf
arpl
xchg
push
stos
ret
xor
mov
jp
add
mov
push
hlt
loopne
cmp
enter
or
popa
adc
and
xor
xor
sti
cmpsl
sbb
jae
pushf
xor
lea
ja
push
or
imul
and
cmpb
test
lods
pop
fs
adc
cmpb
lods
mov
iret
out
insb
cmp
scas
lock
pop
mov
or
or
repz
xchg
mov
rclb
mov
xor
das
mov
into
sti
add
clc
xchg
pop
loop
lea
pop
jg
or
in
in
in
mov
cmc
ds
stos
imul
pop
mov
das
jg
pushf
and
push
ds
or
sub
fldcw
rcr
scas
push
jmp
and
push
add
xor
outsb
push
sahf
in
andl
mov
cmp
dec
and
adcb
pop
mov
roll
in
and
sti
clc
inc
or
ss
out
andl
sub
mov
out
push
ds
fsubrs
cltd
jno
clc
lcall
xor
pop
pop
icebp
aaa
jp
pop
in
push
inc
out
movsb
sub
loope
neg
push
mov
add
lods
dec
pop
shlb
int3
movsb
pop
xchg
enter
sub
xor
lahf
sbb
out
shlb
dec
popf
out
pop
dec
in
add
movsl
pop
cs
jge
sti
sub
gs
lcall
jns
or
lahf
xchg
lds
xchg
sub
lods
idivb
lock
js
data16
xchg
js
dec
and
lret
hlt
mov
adc
push
and
sbb
mov
les
pop
cmc
insb
in
inc
test
push
fs
lods
jp
stos
xor
xor
mov
jge
mov
mov
cmc
mov
js
lret
adc
jp
push
fwait
je
sbbl
pop
pop
pop
outsb
add
in
js
shr
test
or
insl
pusha
push
xchg
inc
ss
xchg
lcall
sbb
std
dec
jb
add
push
inc
and
or
cmpl
push
pop
pop
cmp
xor
je
mov
stos
testl
mov
jl
xor
sbb
fwait
xchg
cmp
rclb
add
movsl
inc
icebp
lock
and
pop
sbb
mov
jnp
fsubrl
loop
jecxz
push
xrelease
cld
lret
lea
cmpb
sahf
push
aam
xor
xor
hlt
data16
mov
xchg
sub
sub
js
mov
cmp
pushf
sbb
lret
and
inc
movsl
xor
f2xm1
xchg
mov
mov
enter
mov
xor
out
add
repz
pushf
lcall
out
stc
sub
jl
ljmp
or
mov
xchg
scas
jb
lret
arpl
mov
scas
lahf
or
mov
mov
and
dec
fidivs
and
int
lods
inc
jnp
cmpl
lods
out
sbb
mov
lret
loopne
xchg
es
in
cmp
cmp
sbb
fdivl
xchg
adc
dec
sbb
xchg
sbb
adc
cmp
and
mov
aad
pop
fiaddl
pushf
pop
cmp
popf
dec
fs
sbb
pop
arpl
daa
sahf
xlat
mov
push
out
push
jmp
xor
pop
in
outsl
mov
lds
pop
dec
adc
push
pop
out
jae
inc
push
dec
inc
mov
and
and
cmp
imul
sbb
pusha
inc
push
fdiv
nop
andl
scas
stc
loop
jnp
mov
push
imul
mov
and
cs
outsl
sub
xchg
fldl
cmc
mov
aaa
into
xor
and
call
xor
pop
movsb
outsb
add
popa
cmpb
aam
ds
jb
daa
pop
inc
inc
pop
shl
jp
loopne
int3
lcall
call
mov
push
addr16
pop
test
mov
adc
insl
ss
lods
pop
jb
mov
and
out
sub
lahf
lea
or
aas
movsb
nop
mov
dec
cmp
dec
xchg
das
jns
xchg
cmp
mov
fldt
xorl
xchg
or
jbe
movsb
roll
fildll
into
sub
movsl
adc
add
lea
fidivrl
sbb
xchg
test
in
xchg
wbinvd
fcmovnu
jo
scas
xchg
xchg
jne
cmc
mov
pop
js
jo
dec
test
xchg
push
cmpsb
in
pop
js
sub
flds
imul
pop
scas
adc
mov
fs
dec
inc
xchg
shl
aam
sbb
enter
fwait
mov
jnp
inc
divb
mov
add
enter
jnp
sub
cmp
push
pop
jl
xchg
movsl
jne
int
ret
cli
jle
imul
repnz
mov
mov
jmp
mov
mov
mov
loope
mov
mov
repnz
dec
cmp
pop
cs
sbb
push
into
push
ljmp
call
cli
ficoml
jnp
mov
xor
sbb
int3
stos
sbb
add
sub
cltd
xchg
mov
jle
mov
aam
sbb
daa
adc
ret
cmp
jle
std
test
jle
stos
orl
mov
ret
sbb
pop
xchg
add
loope
sub
push
in
je
lock
mov
or
dec
dec
mov
notl
insb
popl
xor
mov
pusha
push
sub
ret
pop
scas
mov
lcall
mov
cmp
push
dec
xchg
addb
fldl
loop
scas
jno
lret
push
mov
and
add
add
xor
nop
xor
adc
xchg
shll
mov
aad
jl
insb
mov
aas
sbb
dec
cmp
mov
mov
insb
inc
or
xor
push
sub
rcll
xchg
or
sub
jbe
ja
repnz
flds
scas
xchg
mov
shrb
repz
cmp
mov
jno
push
mov
sbb
bound
sub
mov
ret
xor
jecxz
push
loopne
sbb
fdivrs
xchg
sub
movsb
pop
out
les
jb
mov
mov
in
jo
loope
sbbl
mov
sub
add
jle
push
mov
fcomip
addr16
add
imul
inc
sub
icebp
mov
adc
lods
popa
call
rorl
pop
insl
sub
xor
xchg
sub
dec
aad
and
insb
adc
mov
loope
cmpsb
push
out
movsb
popf
jbe
clc
cs
pop
gs
sub
shrl
and
pop
or
lea
or
inc
sbbb
sub
das
dec
insb
jb
xchg
push
mov
sub
lock
and
mov
inc
mov
outsb
ret
lock
mov
sbb
jecxz
lock
ss
sbb
stc
or
inc
lock
loope
jns
push
fcmovnbe
push
mov
in
inc
ljmp
popa
mov
lcall
cltd
cld
dec
enter
cli
bound
stos
push
pop
popa
testl
and
repz
mov
xlat
sti
aam
add
cmp
sbb
out
sub
bound
into
testb
sub
arpl
sub
and
sub
inc
inc
sbb
cmp
cmp
in
push
aad
inc
pop
push
or
or
sbb
sub
jl
and
mov
pop
icebp
mov
mov
xchg
test
xchg
dec
push
repnz
aad
push
sub
outsb
in
dec
add
xlat
lock
inc
and
mov
ret
cmpsl
ds
dec
mov
test
out
or
or
jge
dec
add
aad
sub
js
inc
xchg
testl
repnz
adc
pop
add
lahf
mov
sbb
ss
stos
inc
shl
cmpsb
scas
mov
pop
pop
gs
sti
jae
stos
inc
cmp
int
aas
mov
jge
rcr
arpl
jg
push
jl
mov
jg
cmp
adc
inc
mov
shll
or
dec
push
lea
pop
ficoml
pop
test
out
or
push
je
imul
sbb
mov
push
jecxz
pop
icebp
mov
or
mov
pop
push
xor
adc
xchg
pop
mov
aam
mov
int
cs
test
pop
clc
call
cli
inc
out
cmp
mov
sbb
cli
add
inc
cmp
xchg
mov
sub
add
mov
es
mov
xor
iret
and
mov
mov
addl
hlt
movsb
outsl
add
mov
mov
test
ds
mov
fistl
dec
adc
rcl
xor
jge
jge
pop
cmpsb
dec
push
lods
jmp
mov
add
fimuls
and
in
mov
dec
lea
dec
repnz
mov
jle
outsl
out
lods
and
sbb
lods
push
jo
or
dec
cmp
in
shrl
ret
lods
fldt
jo
pop
and
sti
ficompl
xchg
outsl
push
lahf
jo
push
out
clc
lods
cmpsb
cmp
push
inc
iret
xor
or
pushf
mov
daa
gs
cmc
push
nop
cmp
lds
call
imul
hlt
mov
out
xchg
lea
jmp
or
xorl
cmp
scas
xlat
mov
xor
gs
push
fdivrs
push
outsl
popf
or
ss
sbb
cmpb
enter
xchg
add
and
mov
das
ret
sti
dec
and
loop
in
insl
stos
repz
cmp
not
mov
and
andb
lret
daa
les
adc
mov
movb
xchg
mov
mov
or
inc
jbe
mov
pop
jmp
out
fwait
sti
inc
in
mov
outsl
and
lahf
xorl
pop
jp
les
or
pop
mov
lock
add
jb
xlat
lods
xchg
cmpsl
mov
popa
pop
cld
push
fwait
cmc
sub
xchg
aam
mov
dec
jp
mov
arpl
bnd
ljmp
pop
lahf
nop
xor
lods
xchg
xor
mov
push
fsubr
push
xchg
xor
shlb
pop
std
xchg
add
mov
sarb
dec
inc
scas
cmp
push
mov
lcall
adc
mov
dec
dec
pop
push
and
inc
fimuls
mov
mov
ret
call
jmp
adc
xorb
sub
pop
aaa
pushf
push
adc
sub
dec
sbb
sub
aam
push
adc
dec
dec
xor
jg
cwtl
adc
xorb
add
fldcw
mov
sbb
push
mov
es
pop
andb
inc
daa
outsl
in
iret
sub
mov
pop
js
aad
int3
pop
inc
jbe
sub
jecxz
rcrb
shll
pushf
stc
dec
push
jecxz
or
and
enter
mov
repnz
fs
push
pop
cmpsl
cmp
shlb
pop
loope
dec
jb
movsl
aaa
mov
dec
cmpsb
inc
aad
jbe
dec
popa
xchg
pop
mov
add
clc
sbb
ret
fidivs
leave
insb
jnp
dec
fistps
jno
xchg
int3
jge
push
popf
stos
fdivl
lahf
std
inc
push
dec
stos
scas
jno
ret
out
lret
rorb
push
cmp
int
mov
add
insl
sbb
mov
in
cmp
dec
xor
data16
inc
sbb
xchg
fmul
mov
out
out
lret
pop
mov
adc
loop
loop
cmp
pop
sbb
data16
xchg
sub
lcall
jbe
icebp
aaa
aad
push
mov
cmpsb
rcll
pusha
sbb
inc
pop
daa
in
jns
dec
sub
xor
subb
cmp
shr
jno
dec
es
pop
outsl
cmp
out
mov
mov
xchg
outsl
mov
je
sub
or
std
outsl
clc
push
cmpsb
mov
sbb
jg
jnp
adc
mov
pop
inc
push
adc
mov
movsl
fisubrl
jl
jnp
hlt
ret
icebp
or
in
xchg
sbb
ss
test
ds
xchg
pusha
test
lds
cmp
and
inc
loopne
ss
cmp
mov
mov
add
js
dec
mov
add
ljmp
pop
je
sub
inc
sbb
add
mov
pop
pop
jmp
test
xchg
mov
adc
scas
mov
negb
sub
iret
push
sub
fisttpl
push
lcall
jb
stos
imul
std
pop
ss
test
mov
fcmovnb
arpl
mov
and
cmp
jecxz
lock
jae
bound
mov
call
ret
xchg
imul
pop
lock
and
outsl
cmp
in
hlt
pop
fidivrl
mov
jmp
xchg
mov
fs
xor
fldenv
outsl
mov
ljmp
add
imul
cwtl
sub
sbb
adc
out
xor
add
ds
sub
or
sub
dec
ljmp
lods
daa
and
cmp
outsl
add
jmp
es
insb
pop
mov
jae
cmp
in
loope
ja
xchg
lret
xor
jmp
and
push
daa
sub
xor
xchg
add
pop
test
push
pushl
pop
and
in
mov
dec
inc
std
fs
xlat
popa
daa
dec
in
loope
outsl
fnstenv
aad
add
push
jno
sub
scas
sub
mov
push
fisubrs
pushf
les
mov
jnp
lea
mov
fdivl
test
pop
testl
xchg
xchg
inc
mov
imul
sub
cli
push
popf
add
xchg
test
dec
cmpsl
movsb
stc
mov
jae
and
gs
in
call
stos
mov
mov
ss
imul
sub
mov
dec
pop
xor
push
loopne
fucomi
aam
adc
inc
jle
jecxz
lods
in
aad
push
jmp
outsb
jnp
xor
les
fnsave
cmpsl
test
mov
das
ljmp
mov
mov
mov
dec
fst
push
xchg
add
jb
adc
pop
sbbl
sbb
push
lahf
mov
sub
mov
loopne
add
lods
fsubrl
stc
nop
pop
sub
pop
mov
jp
test
lock
sub
out
es
es
lods
loopne
imul
mov
xchg
int3
aam
fs
fs
mov
mov
xor
leave
scas
pop
or
mov
mov
fs
mov
sub
dec
shr
clc
movsb
inc
pop
shrb
sarl
mov
movsb
pop
ss
cli
outsl
test
in
xchg
lods
adc
dec
dec
pop
or
dec
pop
lods
shl
pop
stos
xchg
add
sbb
pop
adc
ds
mov
fstpt
leave
or
in
bound
lahf
mov
xor
jp
inc
les
and
outsb
add
nop
insl
ret
xor
push
fs
loopne
clc
mov
ret
push
popf
clc
jecxz
pop
js
sbb
inc
test
push
ja
add
add
test
popf
repnz
mov
movsb
fdivrs
pop
pop
jb
dec
mov
shll
adc
test
mov
adc
cmp
aad
cwtl
dec
pushf
dec
push
xor
cli
loop
loop
mov
xchg
push
roll
enter
inc
push
and
aas
pop
ss
aam
mov
jbe
data16
inc
inc
arpl
mov
rcrb
lcall
push
inc
sub
cmpsb
sbb
cld
leave
xchg
insl
jmp
sbb
xchg
adc
cmp
mov
mov
into
daa
mov
cltd
xlat
adc
or
dec
cmp
pop
nop
jae
sbb
and
fisubs
xchg
ret
jp
dec
imul
push
push
sub
mov
icebp
xchg
loope
dec
loop
xchg
ds
imul
in
cmovg
mov
and
and
mov
inc
shrb
icebp
inc
rcl
mov
mov
mov
data16
repnz
adc
repz
test
xlat
push
filds
xor
arpl
inc
loop
mov
mulb
sub
pop
xor
subl
shlb
arpl
test
xchg
imul
mov
fcmovbe
jae
js
adc
push
jne
push
mov
test
dec
loope
cld
insb
testl
jo
xor
fs
scas
hlt
jle
scas
fcmovbe
sub
fnsave
outsl
mov
int
push
cmc
pop
outsb
movsl
icebp
into
add
pop
das
jo
add
fcmovnu
lret
push
lahf
or
pushf
cmp
mov
ret
xchg
sbb
sub
out
stc
mov
bound
jo
pushf
ljmp
rcl
dec
fnstcw
cmp
outsl
mov
clc
mov
mov
pop
shlb
or
jecxz
jmp
mov
inc
cmc
jno
cmpsb
scas
push
jge
xor
scas
mov
rol
push
data16
mov
inc
loopne
imul
jg
aas
out
nop
stos
pop
push
sbb
xchg
mov
movsl
cld
push
lahf
xor
out
arpl
aad
mov
cmp
out
es
aas
adc
mov
lds
pop
push
sbb
stos
xor
arpl
in
insb
test
fmuls
insb
jne
imul
test
adc
jge
in
repnz
lcall
sti
mov
xchg
test
push
int
and
xor
aas
outsl
cld
sub
jae
adc
cmp
jne,pt
out
adc
out
aam
pop
scas
test
dec
insb
imul
lea
lret
mov
stc
dec
fdivs
psadbw
pop
xor
jecxz
int
inc
cmp
jbe
pop
cmpsl
bnd
or
cmp
stos
mov
roll
sbb
pusha
sbb
out
pop
call
dec
loope
ficomps
imul
dec
popl
aam
pop
inc
pop
xchg
and
mov
shrl
test
cld
inc
out
popf
jge
fidivrs
aam
mov
scas
or
sub
jb
add
jg
cmp
mov
cltd
aad
inc
push
mov
add
fsubrl
into
push
pusha
pop
xor
inc
je
clc
fucomip
idivb
xor
je
jp
dec
in
mov
inc
sahf
jle
xchg
es
jbe
xchg
cmpsb
cmp
mov
fadd
and
test
dec
push
loope
leave
insb
cmp
dec
dec
sub
jle
pop
lea
subb
push
popf
sbb
iret
dec
xor
and
jo
cmc
xchg
stos
xchg
rclb
mov
data16
and
sbb
mov
fildll
push
jns
mov
rcll
mov
inc
pop
mov
jns
xor
lcall
adc
loopne
loope
imul
and
fisttps
lret
push
xchg
popa
push
jmp
xor
jo
retw
arpl
hlt
in
fwait
and
lahf
orl
out
xchg
mov
push
and
mov
cld
xchg
or
fistps
mov
add
add
leave
out
les
cmp
mov
mov
pop
fcmovu
scas
mov
xchg
fcomps
add
rol
das
and
lcall
dec
lock
mov
hlt
inc
cs
mov
shrb
bound
pop
push
push
sbb
test
and
iret
out
mov
dec
jmp
jne
inc
push
fildll
fs
arpl
aam
pop
cs
and
in
cld
dec
fidivrs
cmp
inc
ffree
push
mov
in
in
cltd
cmp
inc
sbb
rcll
fisubrs
sub
jl
sti
fwait
and
mov
cltd
test
mov
sti
xchg
and
movsl
or
adc
nop
jmp
pop
or
addl
inc
fiadds
xchg
sub
adc
js
dec
cltd
push
lods
or
pop
icebp
shll
ja
xchg
inc
cld
xchg
xor
out
xor
popf
inc
daa
mov
in
mov
loopne
out
xchg
mov
lea
ret
pop
fwait
mov
out
add
adc
sti
scas
xchg
xor
push
jl
jge
adc
mov
decl
and
cld
xchg
pop
scas
push
imul
and
dec
add
xlat
outsb
add
jbe
or
outsl
or
or
pop
sbb
imul
sahf
xor
test
jge
stos
jo
lea
cmpsl
push
jmp
addb
js
stc
push
mov
and
adc
mov
jecxz
pop
testb
mov
out
jle
xchg
out
or
sub
mov
mov
or
and
push
xor
sub
mov
mov
in
or
adc
xlat
cmp
mov
add
int3
out
mov
aam
xchg
or
insl
lcall
inc
and
dec
test
sub
cmpsb
inc
pop
cwtl
shrl
data16
fs
mov
push
pop
push
inc
fildll
mov
ret
inc
popf
outsb
pop
mov
pop
adc
push
lock
out
fistpll
add
mov
shr
jmp
icebp
cltd
test
pop
pusha
aad
push
inc
popa
mov
icebp
dec
jne
inc
int3
mov
adc
nop
mov
mov
fldcw
and
mov
jno
inc
loop
cwtl
and
arpl
xchg
push
lahf
mov
and
aad
xor
fsubrl
fidivl
add
push
xor
clc
cmp
sbb
inc
push
jne
cltd
subl
xor
and
sbb
mov
pop
icebp
dec
or
mov
xor
les
and
push
cmpsl
mov
lahf
ror
push
cs
jle
iret
ds
adcl
test
ja
xchg
jns
mov
and
sbb
pop
in
xchg
add
imull
lock
mov
and
jne
insb
inc
sbb
loope
add
mov
adc
imul
fs
insl
mov
xchg
sub
insb
adc
jmp
call
cmpsl
outsb
and
call
push
or
xchg
jnp
add
clc
cmp
xchg
cmp
das
shl
push
cmpsb
ret
ret
lods
jne
aam
imul
enter
aam
dec
pop
les
xchg
add
jo
aad
sbbl
cmp
inc
inc
or
out
push
push
or
cwtl
and
add
sti
int
cmc
pop
mov
stc
ss
and
es
push
cld
scas
nop
push
and
out
inc
and
or
push
or
orb
mov
insb
xchg
cmp
xchg
std
xor
xlat
mov
sti
iret
push
iret
and
pop
jb
shll
in
sub
dec
popf
addb
push
insl
dec
push
mov
jle
iret
ljmp
cmpsl
mov
add
push
push
xorb
inc
dec
es
js
cli
lea
jl
mov
clc
mov
test
mov
lcall
add
int
adc
movsl
jle
inc
test
xorb
mov
jle
test
or
std
cmp
in
outsb
dec
mov
and
jp
loopne
stos
cli
or
dec
cwtl
div
enter
inc
cld
mov
ljmp
ljmp
push
insl
jecxz
data16
jns
arpl
mov
ljmp
in
pushf
adc
jno
xchg
pusha
add
lods
popa
rolb
push
push
js
out
ja
jle
movsl
mov
jl
or
jns
sbb
xchg
adc
fisubrl
sti
mov
mov
rcrl
lahf
imul
adc
inc
jbe
lods
xor
arpl
data16
es
sbb
cld
addr16
das
mov
dec
add
dec
lds
adc
push
into
popa
out
lret
push
pop
dec
fiaddl
mov
dec
test
and
push
test
iret
shlb
pop
xor
in
in
shlb
push
mov
idiv
xchg
push
shrl
inc
icebp
ja
cmp
js
mov
and
cli
mov
out
pop
hlt
andb
mov
push
pusha
xchg
mov
aaa
outsl
sbb
push
ds
shrb
fldenv
sub
not
out
mov
mov
pop
inc
je
in
sub
dec
cmp
xlat
loope
push
xchg
dec
jbe
hlt
fsubrs
xchg
and
ror
mov
xchg
sub
ret
jae
call
mov
loop
in
adc
cmp
adc
mov
aaa
push
mov
sub
lods
iret
mov
sar
adc
aaa
repnz
xchg
iret
push
mov
mov
mov
xlat
imul
sbb
aaa
jl
nop
mov
xchg
leave
bound
mov
mov
or
aad
lods
xchg
xor
lahf
lret
mov
popf
fmull
scas
xor
and
pop
fs
icebp
std
insl
jg
sbb
cmp
fimuls
mov
push
movsl
inc
mov
push
or
ret
or
rorb
mov
ja
push
enter
sub
xchg
fistl
push
pop
add
ret
dec
into
jecxz
daa
lcall
xor
jns
mov
sub
jge
jl
enter
fwait
scas
jecxz
xor
mov
push
lcall
inc
jbe
je
jae
movsl
cmpsl
sbb
cmp
enter
add
roll
push
scas
sbb
rcr
insl
sbb
xchg
outsl
sbb
mov
or
roll
sbb
push
ja
into
inc
sti
shlb
enter
cmp
arpl
in
xor
repz
shll
dec
xchg
clc
xchg
mov
fsubs
jno
sub
cmpsl
xor
jg
movsl
pop
insb
add
sbb
add
arpl
push
and
inc
mov
fidivl
lcall
cli
adc
sub
mov
sub
mov
xchg
jno
fldt
ja
or
rcrb
pop
lock
pusha
rcrb
rcrb
test
dec
push
xchg
sub
fs
out
test
stos
jbe
push
or
xchg
xchg
xor
movsb
ja
dec
mov
xor
xchg
mov
dec
ret
dec
xchg
jg
or
sahf
int
lahf
movsb
ljmp
addr16
cmp
enter
scas
cmp
jbe
sbb
test
out
mov
lret
popa
xor
arpl
mov
out
repz
fs
pop
ljmp
cmpsb
int
mov
mov
pop
int
int
mov
lods
and
pop
dec
and
scas
ret
inc
jb
inc
mov
jmp
sub
out
sahf
push
mov
arpl
inc
lods
mov
int
xor
jo
jle
sub
insl
jnp
sbb
push
cmp
sub
jo
xchg
es
in
push
inc
pop
outsl
in
pop
mov
push
mov
pop
mov
mov
inc
pop
rol
mov
inc
dec
repnz
inc
mov
pop
es
into
lods
outsl
jns
xor
or
push
scas
push
je
mov
xchg
cli
add
push
push
or
jno
int3
xchg
jb
add
int3
addr16
jle
xlat
jno
les
mov
push
mov
xchg
jmp
push
popf
sub
int3
pop
test
jcxz
pop
mov
or
xor
outsl
sub
and
jmp
sub
hlt
pop
pusha
pushf
jge
xchg
popa
mov
mov
push
adc
add
bound
mov
iret
push
xor
imul
add
jp
mov
mov
sub
stos
orl
jb
mov
jno
cmc
sbb
test
mov
stos
sar
testb
pop
or
add
inc
les
test
mov
lock
fldcw
or
mov
push
add
jno
std
xchg
outsb
jbe
mov
xor
mov
dec
and
cmp
sbb
pop
jno
es
jecxz
pop
mov
inc
stos
adc
lret
lret
and
mov
add
inc
mov
adc
mov
xchg
inc
inc
stc
xor
dec
add
xchg
cmp
dec
mov
stos
pop
fisttps
sub
in
push
pop
into
pop
cmp
inc
mov
sbb
leave
leave
divb
sub
or
pop
cltd
jl
stc
pop
fistl
sti
pop
mov
push
jge
ss
and
rcrb
mov
dec
add
dec
std
sub
dec
andl
xlat
imul
push
stos
mov
sahf
lods
ret
hlt
test
sub
or
fwait
cli
push
fldenv
test
arpl
inc
pop
jns
stc
nop
sub
pop
mov
or
mov
xchg
mov
sbb
mov
cmp
jb
sub
xchg
nop
mov
int
add
dec
fisttpl
outsb
sbb
out
in
xor
cmpsl
add
pop
pop
mov
hlt
jb
mov
pushf
add
cmpsl
xor
and
adc
ss
scas
jecxz
or
pushf
add
mov
pop
pop
inc
loopne
lods
mov
inc
push
xor
mov
cld
jnp
jge
clc
pushf
adcl
sub
push
je
push
xor
xchg
pop
popf
and
into
jae
lods
mov
dec
das
dec
cmc
mov
sub
push
mov
out
into
fisubl
insl
dec
fdiv
adc
adc
fidivl
pop
dec
nop
push
test
lret
dec
mov
aam
shll
fiaddl
mov
aaa
lods
mov
jb
ret
les
loopne
cmpsl
sbb
cs
adc
flds
adc
shrl
test
repnz
mov
js
in
adc
cmp
push
fidivrl
sbb
out
pop
aas
adc
adc
add
jle
jns
jge
enter
lret
cld
js
shrl
or
in
mov
add
lods
mov
dec
mov
pop
lahf
mov
fdivs
mov
sbb
mov
and
cpuid
and
fwait
or
sbb
lcall
xlat
pop
pop
push
ret
sbb
in
push
insl
jno
pop
out
inc
xchg
add
subb
adc
call
testb
arpl
lds
mov
xchg
lcall
jne
cmp
cmp
add
inc
adc
out
cmp
aad
or
jge
sbb
dec
lds
dec
stc
sbb
adc
cmc
rcrl
xchg
mov
sbb
and
ss
jns
cmp
dec
jb
js
xlat
cmp
aad
xor
xor
xchg
dec
fbld
cmp
dec
loopne
pop
push
mov
fistps
sub
dec
stos
jmp
cmpsb
fidivs
xchg
ret
hlt
cmc
movsb
push
mov
aas
cli
loopne
xlat
dec
lahf
inc
xor
jno
loopne
xchg
sti
or
inc
cmp
hlt
gs
sbb
bound
push
fs
push
andl
pop
push
fbstp
jns
jg
cmpsl
lods
add
or
cmpsl
out
xor
mov
pop
cmc
jne
sahf
cmp
adc
cmc
dec
jmp
hlt
inc
movsl
and
inc
testl
fcmovne
xchg
mov
xor
bound
je
xchg
xor
jl
mov
sti
mov
cmpsb
adc
rclb
mov
cltd
gs
sbb
mov
jne
dec
faddl
push
fs
adc
aas
add
ljmp
and
mov
stos
enter
mov
test
pop
insl
fdivp
aad
adc
sub
arpl
mov
sbb
mov
enter
insl
adc
pop
jle
inc
call
cmp
push
ret
push
xchg
xchg
mov
leave
jb
addr16
scas
cmp
fsubrs
pushf
ja
rcl
movsl
xchg
test
popf
and
adc
fisubl
jge
sbb
ret
sahf
mov
std
inc
push
sub
clc
aad
sub
sbb
out
and
mov
mov
cltd
sbbl
pop
pop
loopne
cmova
xor
repnz
push
cmpsb
xchg
cmp
jl
mov
sbb
mov
sub
inc
adc
mov
adc
and
inc
insl
sbb
loop
push
movsl
xchg
mov
or
cmp
shrl
js
inc
popa
mov
sbb
pop
push
xor
lods
in
mov
jns
pusha
jnp
pop
inc
pop
sbb
es
addr16
add
or
enter
cmp
inc
mov
sbb
cmp
xchg
sbbl
movsb
jb
ss
cld
addr16
pop
dec
clc
test
sub
in
jp
orb
bnd
sbb
jle
test
fldcw
push
test
imull
iret
pop
pop
fs
jecxz
xchg
pop
adc
sbb
and
push
mov
add
adc
or
push
mov
addr16
xchg
stc
mov
xor
inc
pop
adc
addr16
mov
rolb
push
jmp
dec
adc
int3
mov
fadds
sbb
pushf
mov
jb
ret
insl
fisubs
jbe
adcb
scas
inc
mov
popa
fwait
push
pop
jb
sub
sub
and
push
pop
adc
sbb
sbb
mov
inc
outsb
xchg
arpl
into
adc
and
pop
lret
or
jl
sbbl
mov
adc
test
dec
ss
mov
mov
sbb
inc
cli
pop
jmp
gs
loopne
add
leave
and
xchg
pop
shll
iret
gs
pop
mov
push
and
movl
pushf
scas
dec
and
stc
xlat
push
pop
daa
lahf
addb
adc
das
test
addr16
les
icebp
xchg
mov
or
test
mov
mov
movsl
mov
mul
cmp
test
fsubrl
xchg
pop
cmp
hlt
xor
pop
pop
mov
dec
jmp
aaa
push
loop
mov
adc
lea
push
cwtl
and
adc
xorl
das
add
push
or
out
adc
or
outsb
aad
mov
or
or
insl
inc
subl
loopne
sbb
ljmp
mov
jmp
repz
das
xor
mov
cmpl
pop
push
sub
outsb
pusha
pop
xchg
sub
jb
pop
shll
fwait
mov
lock
fmuls
lea
pop
adc
inc
das
pop
add
out
shl
xchg
test
mov
in
in
arpl
mov
ret
outsl
in
popa
clc
fstpl
jle
cli
lcall
rcrl
sub
in
fsubl
aas
cld
mov
cltd
push
mov
jae
cmp
ds
addr16
leave
add
jg
push
in
mov
mulb
ds
cmp
call
movsl
das
repnz
and
std
std
in
push
sub
pop
orl
imul
test
jp
arpl
ljmp
stos
in
fnstenv
adc
jl
xor
call
add
repnz
mov
je
inc
daa
mov
push
inc
and
mov
mov
fsubl
loop
movsl
movsb
fwait
popa
jp
je
in
imul
jo
inc
pop
jmp
mov
or
mov
outsb
andb
mov
cmp
or
dec
adc
mov
pop
ljmp
push
ljmp
inc
pop
gs
xchg
add
jno
dec
out
das
inc
out
addr16
sbb
xorb
mov
es
lret
fidivs
js
lods
mov
incl
outsb
xchg
test
pushf
cmp
jp
cmpsl
ret
rcll
mov
xorl
push
push
popf
scas
ror
mov
fisttpl
mov
std
sahf
xchg
in
repnz
add
dec
pop
mov
mulb
jb
pop
push
ret
sbb
dec
dec
xchg
pop
dec
ss
and
scas
arpl
ret
popf
sbb
insl
dec
hlt
dec
stc
jg
stos
inc
sub
inc
int3
pop
cmp
rol
aas
out
shll
imul
movsl
les
xor
jmp
sub
fsubl
mov
push
insb
mov
mov
lret
xlat
xlat
in
mov
xlat
mov
pop
in
inc
or
movsl
lret
lret
mov
fwait
jb
loopne
ja
psubd
mov
inc
pop
sbb
icebp
jnp
push
sub
bound
jg
xor
jns
in
scas
inc
cmp
mov
adc
jmp
sbb
cmp
cmp
xlat
sub
sbb
pop
cs
mov
inc
aad
test
rolb
pop
sub
imul
loopne
inc
test
in
fdiv
cwtl
stos
or
sbbl
imul
jns
sub
jo
mov
mov
mov
popa
loop
or
push
or
adc
xchg
sbb
outsb
mov
pusha
dec
lcall
cmp
or
inc
shl
jge
sbb
sarb
mov
pop
adc
insl
lea
inc
in
fs
push
jbe
inc
into
inc
gs
out
and
dec
mov
xchg
fbstp
add
hlt
sub
sahf
jg
adc
and
call
or
jbe
inc
push
popa
pop
in
lret
inc
in
cld
cwtl
cltd
mov
sbb
mov
xchg
shrb
aad
jge
mov
mov
mov
test
adc
daa
mov
dec
outsl
jle
jno
les
jecxz
flds
subl
mov
int
daa
daa
inc
xchg
test
dec
push
sbb
push
addr16
dec
or
ss
arpl
add
popf
xor
mov
push
in
lds
mov
das
xchg
mov
std
jo
ja
ret
test
pop
nop
lds
notb
lds
pop
imul
repz
xor
int
push
and
aaa
xchg
test
sub
xchg
xchg
into
stc
and
bound
inc
in
pop
ds
fiadds
test
das
les
push
rol
add
xor
sub
push
and
xchg
jp
or
push
out
pushf
mov
lahf
out
sub
or
out
or
inc
pop
mov
mov
inc
sbb
ffree
lret
mov
sarl
dec
push
sbb
fnstcw
in
ds
mov
sahf
cs
fistl
aam
mov
cwtl
out
push
shr
mov
mov
cmp
mul
lcall
outsb
xchg
push
fisubs
lods
and
cmpsb
stc
xlat
jns
or
cs
cmp
in
shrb
mov
jecxz
pop
lcall
adc
xlat
and
xchg
sbb
add
repnz
jno
pop
icebp
dec
scas
inc
jb
add
shll
dec
test
loopne
les
sub
es
fisttpll
lahf
dec
inc
push
es
es
push
mov
add
push
repnz
das
or
pop
add
and
arpl
icebp
test
cltd
daa
adc
ret
push
inc
inc
pop
shlb
insl
mov
sub
lock
ds
cmp
divb
inc
cld
dec
xchg
push
imul
fwait
adcl
outsb
and
mov
push
sub
addr16
nop
pop
or
insb
add
cmpsl
mov
arpl
and
or
adc
cmp
xor
cmpsb
movsl
jecxz
aaa
out
aam
push
scas
mov
idivl
adc
ljmp
or
repnz
sbb
into
pop
in
jmp
and
mov
lret
insl
push
je
subb
or
scas
ret
dec
adc
aaa
out
push
imul
fdivs
out
adc
fnstcw
scas
or
sar
dec
push
xlat
mov
fwait
adc
enter
aas
adc
adc
pop
sbb
jno
push
cmp
insb
hlt
cmpsb
xchg
push
call
fadd
call
aad
jae
fbld
and
test
out
mov
das
rorl
push
ja
fdivrs
movsb
or
jmp
xchg
and
stos
inc
sub
incb
add
inc
ljmp
mov
mov
enter
jb
cs
lods
pop
dec
cmp
inc
daa
icebp
sahf
pop
outsb
ret
push
je
and
popf
mov
call
test
lahf
pop
imul
dec
push
dec
mov
loopnew
mov
mov
icebp
mov
inc
sahf
sub
pushf
and
xchg
mov
imul
sti
int
lea
or
hlt
and
out
sub
cmp
sub
in
jge
and
ss
aas
test
test
fstpl
jae
xchg
cmpsl
repz
jb
adc
int3
xchg
movsb
andb
mov
push
gs
sahf
cmp
aas
imul
adc
inc
mov
out
aad
and
inc
push
in
and
inc
aaa
push
xchg
jl
or
or
xor
mov
pop
push
lock
aas
dec
in
fsubrs
and
into
stc
mov
xchg
dec
aaa
jbe
fistpll
shl
pop
lock
sbb
or
scas
cmp
pop
fwait
test
pop
repnz
sub
mov
xor
rcrb
dec
dec
jp
mov
pushw
pop
or
sub
lcall
sbb
cmp
aas
aad
aad
push
dec
fisttps
mov
xchg
push
mov
inc
fidivrl
fucomi
loope
inc
cld
add
ds
cltd
jo
andl
ret
movsl
cs
mov
mov
sub
mov
rcll
mov
xlat
arpl
xchg
sub
or
push
or
mov
insl
dec
sbb
or
dec
xchg
incb
ljmp
dec
xchg
push
movsl
pop
nop
push
out
push
jmp
arpl
mov
pop
out
inc
sbb
push
jbe
jne
push
mov
into
sbb
ret
mov
dec
dec
loopne
call
adc
adc
pop
imull
sub
std
xchg
test
and
xchg
sbb
mov
push
mov
psubusb
push
cmpsb
dec
and
sbb
cmc
mov
sub
mov
sbb
and
push
jmp
or
push
jle
sub
mov
dec
mov
xchg
addb
push
insb
adc
sbbl
jbe
jne
fsubs
sub
cmp
inc
cmpsl
call
cmp
and
pushf
push
inc
in
sbb
cmp
xorb
inc
sbb
mov
jo
push
xor
push
xor
pushf
adc
mov
cmovl
jle
notl
adc
mov
or
or
test
pushf
testl
cmpsb
imul
jne
stos
mov
sub
mov
in
mov
dec
cltd
lret
pop
lea
in
xor
sbb
xchg
cmp
mov
mov
mov
lret
nop
and
test
js
leave
xor
cmp
or
xchg
hlt
adc
and
cmp
sub
push
out
stc
xchg
addb
jns
aad
cmp
pop
sub
fnstsw
pop
xor
xchg
pusha
dec
fcmovnbe
cmp
stc
cmp
fsubl
std
and
lods
in
pusha
sti
js
scas
fsub
test
xor
cmp
push
sti
xchg
mov
ljmp
js
adc
clc
lock
cmp
sbb
jp
insl
rorb
pop
subl
inc
mov
jmp
dec
lahf
stos
push
outsl
pop
sahf
mov
into
enter
fs
and
sti
jecxz
icebp
adc
pop
jmp
int
pushf
cli
lds
inc
or
lods
cltd
mov
mov
iret
clc
iret
jl
shlb
cmp
push
icebp
jmp
cmp
push
sbb
lock
inc
adcb
xor
jo
shl
ss
mov
adc
fstps
adc
and
popa
ja
pop
push
push
rol
fiadds
add
mov
push
mov
test
arpl
jo
mov
lret
push
test
mov
bound
rcll
pop
dec
daa
xchg
lods
xor
jle
lret
std
ret
roll
xor
inc
fptan
adc
dec
outsb
roll
or
call
cmpsb
jns
das
jne
arpl
add
add
imul
dec
add
adc
psubusb
mov
in
int3
sbb
mov
shr
je
pop
repnz
sub
sub
icebp
loope
push
es
aad
scas
insl
movsl
inc
daa
xor
mov
int
mov
mov
mov
lret
cs
enter
mov
push
push
inc
test
push
std
fucom
dec
pop
push
pop
in
mov
inc
dec
pop
aas
push
psubw
xor
dec
inc
cltd
jne
cmp
dec
cltd
jbe
out
arpl
out
push
daa
lods
lret
js
fistpl
jae
data16
mov
inc
pushf
add
bound
jmp
imulb
xchg
adc
repnz
jo
aam
xchg
stc
cmpsb
cmc
inc
into
cmp
jno
ss
aas
mov
dec
test
sub
jo
in
sarb
insb
hlt
daa
xchg
push
int
xchg
les
push
cltd
and
inc
pusha
ja
push
sarb
adc
add
jle
pop
xchg
or
out
sbbb
out
add
popf
sub
fdivl
rorb
jae,pn
xlat
lds
cli
jmp
or
xchg
mov
xchg
popf
xor
push
pop
int3
push
sub
jle
lcall
inc
lds
jge
jbe
rorb
push
mov
dec
movsl
pop
pop
xor
dec
aad
idivb
and
call
mov
or
mov
dec
xor
gs
cmp
int3
mov
pusha
ret
pop
xchg
pop
adc
sti
mov
mov
jbe
ret
filds
je
and
stos
imul
das
jle
push
xchg
mov
xor
sub
or
sbb
adc
and
pop
sbb
test
push
lock
outsb
cmp
sub
loop
stos
lcall
fdivp
and
in
jne
test
or
xchg
sbb
in
push
rclb
data16
jae
pop
sub
or
xchg
int3
nop
stos
mov
mov
repnz
iret
push
push
rclb
jne
adc
sub
orb
out
pop
sub
xchg
push
scas
xor
xchg
aad
int3
jae
ja
movsl
sub
subl
mov
imul
cmp
cmp
insl
jb
pop
inc
loope
or
movsl
mov
and
std
inc
pop
add
add
lcall
mov
xchg
std
pop
cmpsb
inc
test
lret
aas
outsl
les
push
push
jbe
loop
mov
cmp
out
pop
dec
inc
and
jecxz
subl
pop
sbb
ret
adc
shrb
sbb
sub
pop
mov
ret
rcrb
pop
mov
popf
or
mov
sbb
or
mov
dec
jae
cli
mov
push
inc
in
mov
arpl
enter
xor
mov
and
insb
sub
ljmp
pushf
push
cmp
and
imul
mov
xchg
in
cltd
aam
cwtl
mov
clc
or
push
push
cmpsl
and
mov
mov
out
push
inc
mov
or
jmp
and
xchg
sbb
push
insb
jle
test
lods
testb
xchg
ficompl
dec
cs
jle
push
cwtl
gs
cmpsl
sbb
lahf
jne
enter
add
inc
sbb
lock
ljmp
add
jg
clc
mov
fistl
inc
ret
out
pusha
lahf
call
dec
xchg
xchg
daa
mov
fwait
xor
adc
fcoms
cmp
mov
mov
cmp
jae
popa
mov
insl
inc
popa
dec
mov
push
push
sbbb
mov
out
loopne
aaa
xor
lea
cmp
out
leave
popl
pop
cli
sbb
mov
sbb
xor
push
push
sahf
inc
push
lret
pop
call
jb
and
std
xlat
andb
imul
inc
mov
sbb
mov
into
movsl
in
les
ret
cmp
sbb
sti
sbb
inc
lcall
les
call
pushf
cmp
in
test
lods
loop
aad
fidivs
pop
inc
mov
dec
out
cmp
mov
dec
stos
out
pushf
fisubrl
dec
jnp
hlt
out
adc
sbb
es
out
cmp
jns
cmp
lcall
cmpsb
in
cmpsb
lret
or
jp
bound
lods
add
jbe
cld
lret
push
dec
cmp
push
lahf
stos
xor
loope
mov
fildll
cltd
test
mov
frstor
xor
push
and
lcall
xor
fldt
gs
sbbb
popa
clc
in
sub
add
ret
inc
loope
lret
iret
cmpsb
jb
jne
lods
xchg
outsb
dec
mov
rcrb
pop
xor
nop
es
aaa
and
gs
add
fistps
xchg
or
or
and
cld
adc
jns
movsl
mov
adc
aam
xor
xor
cmpsl
mov
cwtl
repz
fstp
adc
mov
add
mov
xchg
rcrl
xchg
dec
cmp
enter
push
push
movsl
xor
sbb
loopne
push
insl
mov
and
insl
jmp
mov
cmp
insl
mov
out
xchg
clc
lock
inc
sub
mov
sbb
mov
sti
xchg
mov
fistpl
adc
sub
jnp
es
cmp
adc
loope
add
cld
stos
pop
stos
sahf
xor
dec
mov
push
pushf
fdivl
daa
or
fs
pusha
jmp
push
mov
mov
pop
xor
hlt
stos
mov
push
les
int
fistpl
data16
adc
sub
xor
sbb
mov
test
pop
je
js
push
js
sarl
xchg
and
rorb
andl
icebp
pop
dec
das
cli
out
xchg
adc
jl
sub
sub
cmp
xchg
dec
dec
mov
lods
repz
stos
shr
sarl
lods
jl
jo
rolb
mov
lret
mov
and
or
or
mov
push
mov
pushf
ds
cmc
and
test
shll
mov
xor
sub
sbb
jb
push
andb
push
aad
xor
xlat
push
fstp
xchg
scas
out
lret
push
push
push
xchg
popa
aaa
and
dec
and
lret
lret
sub
lahf
loopne
sbb
pusha
iret
jecxz
or
std
xor
filds
hlt
mov
addr16
mov
pop
mov
mov
sarb
adc
nop
pop
icebp
dec
clc
aas
fsubrs
pop
or
mov
andb
mov
pusha
cmp
clc
xor
xchg
lea
mov
xlat
and
mov
mov
sub
iret
gs
imulb
cmp
cwtl
or
testl
insl
idivb
nop
in
pop
jo
cmp
test
xchg
or
je
add
popa
mov
or
rcl
movsl
cmp
lahf
popf
ss
ret
fists
sti
inc
lret
cltd
lock
mov
shlb
inc
inc
fistpll
sub
cmp
push
stos
pop
imul
pop
push
xchg
outsb
or
inc
roll
or
push
or
pop
lds
in
pushf
out
roll
test
andb
fdivrl
or
insb
mov
pop
movsb
and
mov
push
or
jo
cmpsb
sub
mov
je
aad
lret
mov
lret
fwait
jnp
xchg
push
dec
cli
push
jne
ret
out
pop
rcrb
out
notb
stc
or
icebp
mov
fcom
sub
fadds
hlt
mov
sub
sahf
lods
mov
lret
mov
lretw
jne
jmp
testl
cmp
mov
js
outsb
daa
mov
insl
add
neg
lret
mov
push
add
cltd
sbb
add
dec
lahf
sub
dec
add
es
test
xor
sbb
mov
hlt
into
pushf
xchg
loop
dec
jmp
sbb
mov
mov
xchg
lods
outsl
lcall
sub
shrl
push
and
je
stos
push
negl
pusha
add
cltd
xor
sbb
inc
mov
out
xchg
mov
mov
stos
es
mov
dec
sahf
out
xchg
rorl
xor
out
mov
cmc
test
add
pop
data16
mov
xor
sbb
jl
inc
mov
arpl
or
adc
sub
pop
fadds
clc
repz
or
out
mov
push
aam
sbb
push
jmp
hlt
push
inc
cmp
in
pop
mov
and
repnz
xor
push
test
test
out
andb
mov
daa
clc
pop
repz
inc
push
dec
and
jg
lods
clc
xor
inc
sub
xlat
iret
cld
inc
lret
push
sub
sub
xor
out
stos
xor
sarl
iret
sbb
mov
xlat
je
pop
leave
inc
subb
stc
ljmp
push
pop
or
sbb
lcall
and
mov
lods
sbb
mov
inc
clc
es
sbbl
lods
clc
roll
out
cltd
inc
fnstenv
call
mov
sbb
mov
mov
xor
pushf
loope
sub
ds
int
gs
cwtl
das
mov
sub
out
cmp
iret
xor
sbb
push
xchg
test
sub
leave
add
and
sti
popa
lods
xchg
xor
mov
sbb
sarl
loopne
and
cmc
out
scas
xchg
stos
inc
shl
mov
sbb
push
xor
pop
imul
and
pop
das
test
cmpsl
jg
fstps
les
push
sbb
clc
aaa
into
sub
push
add
stos
jg
or
cvtdq2ps
mov
sub
add
inc
test
pop
int3
push
xor
dec
push
inc
sbb
jb
sbb
adc
inc
mov
mov
xchg
mov
test
ret
pop
cmp
push
cmp
add
sbb
sbb
jno
call
lock
or
mov
ljmp
jecxz
insl
rorl
and
pusha
push
mov
dec
jae
push
mov
and
out
cmp
lock
sti
push
cs
pop
add
or
fcmovnu
je
imul
mov
sti
or
pop
nop
daa
or
aaa
pop
stc
call
daa
inc
rcr
dec
mov
jl
loopne
lods
pop
clc
mov
cmp
scas
negb
dec
scas
inc
pop
adc
lds
dec
adc
lods
fsubrp
cmpb
jmp
pop
pop
dec
aam
pop
push
push
icebp
xchg
stc
jmp
mov
mov
rcrl
dec
pop
dec
notl
jnp
loopne
mov
into
lds
xchg
cld
pop
scas
jecxz
into
xor
cmpsl
aad
int
jl
lds
sahf
in
ret
fisubrs
or
push
jmp
lods
dec
arpl
inc
ficomps
mov
orl
sub
fsubrs
fcompl
xchg
stc
mov
cmp
mov
cmp
int3
shll
mov
pop
rcr
fnstenv
mov
mov
xchg
jmp
mov
mov
xor
mov
lea
testl
and
dec
and
int3
or
es
sub
mov
and
dec
jecxz
sbb
add
or
pop
imul
push
xchg
jo
mov
out
dec
dec
jecxz
jg
mov
mov
sub
mov
adc
push
xor
movsl
or
and
dec
cmp
push
sbb
in
ret
pop
add
rorl
lahf
pop
mov
call
cmp
and
inc
insl
jnp
imul
add
mov
pop
popa
loopne
sahf
push
mov
pushf
pop
inc
stos
fisubl
mov
xchg
dec
jbe
std
jl
stos
cmc
jne
adc
mov
popa
fcoml
nopl
sbbl
out
and
add
xor
xor
mov
fabs
cmp
xor
inc
push
lcall
rolb
cmp
aaa
stos
mov
les
ret
cmp
outsb
push
lcall
int
jb
cltd
pop
xchg
stc
nop
fisubs
push
jns
mov
int3
sahf
pushf
dec
lods
hlt
out
mov
add
jmp
les
jb
test
xchg
push
push
dec
out
xchg
sbb
dec
jbe
sub
pop
in
std
rcll
nop
mov
inc
fmuls
mov
imul
mov
iret
jge
das
push
mov
sub
lods
jle
ljmp
inc
add
ret
sub
adc
pop
mov
pop
inc
sbbl
scas
sub
dec
loope
repnz
pop
lods
lcall
shrl
pop
stos
loop
std
daa
fs
ret
dec
test
push
adc
mov
loope
pop
icebp
pop
lea
mov
repz
push
mov
in
cmpsl
scas
scas
jno
rcrb
sbb
mov
idivb
xor
push
add
fcomip
les
push
rcrl
or
xchg
xor
sub
adc
jnp
in
adc
add
test
fcomi
cwtl
cmc
pop
lret
stc
fstpl
es
xor
shrl
or
fwait
and
and
icebp
movsl
in
rol
lcall
push
jnp
outsb
add
mov
stc
xchg
ror
repz
stc
xor
xchg
out
movsb
adc
fisttps
add
loop
mov
incb
aam
add
rcl
or
add
dec
jae
dec
pushf
in
rol
inc
jb
add
popf
xchg
test
add
sbb
jae
je
or
mov
mov
repnz
mov
cmc
dec
inc
fists
call
aaa
push
fnsave
add
mov
sahf
mov
push
sahf
pop
cmp
or
pop
dec
push
push
sub
pop
fdivl
xchg
dec
ret
shrb
in
sbb
mov
movsb
repnz
xchg
lret
xor
pop
dec
inc
push
jge
cmp
sub
cmpsb
push
clc
push
inc
ret
mov
pop
inc
push
xlat
nop
out
scas
xor
and
repz
daa
out
mov
inc
lea
lret
adc
inc
dec
adc
inc
out
imul
cmpsl
mov
in
ret
data16
call
andl
fst
jl
fsubs
push
add
sub
dec
insb
add
xor
and
fcom
inc
sub
pop
in
lea
test
add
jnp
fistpl
test
js
inc
pop
mov
cli
pop
dec
add
sti
jnp
in
lahf
loop
shlb
add
and
je
out
mov
jne
xchg
add
adc
rcrb
gs
xchg
sub
sahf
xor
insl
and
pop
cs
shrb
orb
push
aaa
pop
or
aas
dec
pop
mov
cmpsb
cmpsb
aaa
mov
imul
mov
xor
pop
jnp
dec
sub
pop
cmpsb
mov
icebp
test
jge
mov
rcr
outsl
outsb
mov
jl
nop
notb
jg
mov
cld
mov
imul
mov
insl
sbb
cmp
lahf
mul
in
sub
inc
jg
movsb
lods
push
sbb
mov
rcl
and
sti
std
shll
lods
inc
cmpsl
cmp
xor
add
add
jnp
inc
in
sbb
enter
call
mov
sbb
into
cld
mov
enter
push
in
ret
push
test
jae
adc
push
call
mov
sbb
mov
push
fwait
lock
push
mov
in
mov
lock
mov
push
cmp
mov
inc
mov
xchg
aas
push
mov
xor
fbstp
mov
mov
cli
adc
mov
mov
fdivl
mov
stos
xchg
dec
xor
sub
push
add
ret
outsb
sub
cmpsb
add
mov
cmp
mov
add
jmp
insl
mov
lcall
repnz
jmp
mov
inc
pop
out
xor
xor
cli
mov
or
mov
pop
lret
inc
dec
aad
test
inc
jae
mov
sub
mov
mov
lock
in
dec
in
mov
add
dec
adc
cmp
gs
ljmp
cmpsb
les
insb
inc
xchg
adc
add
push
icebp
out
hlt
push
mov
aam
push
aas
lret
jnp
inc
push
and
imul
push
cmp
jle
add
int3
mov
sbb
xchg
pop
xor
lds
imul
clc
jae
scas
movsb
sbb
inc
aad
stos
push
into
int3
movsl
mulb
rcrb
enter
jo
mov
cmpsl
stc
popf
mov
daa
stos
sbb
repz
ret
out
lahf
fadd
xchg
test
test
jae
shlb
fmulp
ret
mov
pop
xlat
outsl
mov
in
out
out
aas
pusha
lods
lods
cltd
pushl
scas
loope
notb
cmc
pop
and
mov
push
loope
data16
xor
jbe
mov
xchg
inc
or
xchg
xchg
adc
push
or
int3
mov
call
adc
mov
shrl
out
mov
jo
xchg
cwtl
sti
insl
push
test
pop
lcall
jecxz
sbb
out
xchg
and
jns
xor
loope
dec
icebp
cmpb
push
test
mov
lahf
scas
add
out
imul
xchg
sarb
adc
cmpsb
insb
js
lea
test
pop
sahf
jno
sbb
lret
sti
xchg
pop
mov
andl
jae
divb
into
aad
sub
sub
cwtl
das
jbe
sbb
push
inc
mov
xchg
jmp
fmuls
jno
and
bound
insb
xor
adc
mov
jge
inc
xchg
pcmpeqd
mov
dec
jmp
shlb
shrb
stc
mov
movsb
push
mov
lcall
repz
aas
ja
bound
adc
in
push
sbbb
push
and
pop
jns
nop
or
inc
aad
xor
jo
test
lock
cwtl
pop
mov
and
and
xchg
jb
rcll
out
mov
loop
sub
sbb
fldenv
xchg
adc
xchg
add
addl
pop
add
or
fdivrs
xlat
bound
or
or
adc
pusha
ljmp
mov
cmp
xchg
lock
insb
daa
or
out
loope
xchg
js
ficompl
fdivrs
mov
pop
jmp
cmp
push
jl
dec
jecxz
loopne
ljmp
sub
rcll
icebp
sbb
cmp
adc
mov
jecxz
adc
pop
add
xchg
push
arpl
scas
and
pop
pop
cld
fwait
jne
js
test
daa
add
popa
mov
lock
ret
loop
pop
jae
add
push
mov
jns
int
popa
dec
dec
test
shlb
movsb
popf
lret
add
jp
dec
and
cmc
shrb
rol
cmp
rorl
dec
shl
dec
lahf
sbb
cmp
mov
dec
das
jns
mov
or
jmp
mov
in
fidivs
fs
aad
and
cwtl
stos
cmpsb
nop
cmpsl
out
dec
jg
sub
movsb
lea
pop
insb
mov
inc
insb
notb
xor
mov
adc
icebp
in
xor
dec
bound
dec
out
je
xchg
pop
cmp
arpl
in
xchg
js
ds
mov
insb
push
sbb
insb
and
sbb
jmp
out
xchg
mov
movsl
cmp
mov
mov
aaa
and
popa
and
iret
add
or
data16
std
fisttpl
or
insl
cltd
gs
pop
add
add
sti
jno
sub
sub
push
cmp
jp
pop
decl
jp
or
or
in
add
mov
lea
sub
negl
in
nop
fdivrl
and
hlt
mov
fld
push
xrelease
push
add
push
sahf
fistl
pop
cmp
addr16
pusha
inc
mov
das
mov
adc
test
addps
jmp
and
in
fisubs
push
jb
mov
add
addr16
mov
adc
ja
push
xchg
repz
sub
notb
into
or
lods
out
xchg
push
out
mov
lcall
das
cmp
mov
iret
fildl
repz
clc
and
cmp
xchg
jg
jle
cltd
je
cmpsl
aam
mov
xlat
outsb
movsb
mov
insl
jge
mov
xchg
mov
ror
xchg
cli
mov
bound
jns,pn
cmp
pop
lea
aaa
jnp
sbb
push
sub
sbb
dec
clc
pushf
lods
fldcw
fs
js
adc
mov
dec
mov
mov
add
subl
or
icebp
jp
clc
cmpsb
xchg
jle
mov
lea
pop
or
cmp
cmpb
xchg
add
dec
fadd
jb
push
mov
mov
jae
push
cs
xor
loope
mov
stos
xchg
adc
sbb
add
fcompl
bound
lcall
int3
dec
sub
scas
cmp
cmpsb
inc
clc
adc
mov
xor
sbb
movsl
je
jne
jb
inc
jmp
addr16
pusha
pop
cmpsb
cmp
sub
xor
dec
insb
jl
repnz
xchg
fs
ljmp
cmp
push
out
jnp
repnz
movsl
xor
inc
mov
int
das
or
mov
mov
mov
adcl
jecxz
push
lgs
mov
inc
jo
cmp
mov
sub
adc
popf
sub
mov
mull
in
push
test
lock
fwait
adc
cmp
aam
shll
inc
insb
sub
lea
xor
sbb
lods
adc
and
pop
outsb
mov
pop
cmc
and
sub
inc
fiaddl
sub
and
inc
rcrl
insb
add
inc
roll
mov
decl
rcl
std
jne
jae
and
or
mov
mov
push
jo
shrb
cmp
adc
ljmp
xor
mov
cmpsl
mov
fsubrs
cmp
push
sbb
inc
push
adc
inc
add
xor
lahf
and
fstp
imull
cmp
xchg
hlt
aaa
sub
xchg
aas
pop
fwait
or
cmp
add
dec
xchg
sar
sbb
dec
sbb
jge
add
cmpsl
inc
jecxz
jo
pop
rorl
push
outsl
lahf
pop
or
fs
loopne
pop
xor
das
pop
outsl
cmp
push
jbe
pop
movsb
mov
popa
dec
test
cmp
clc
pushf
aam
lea
cmp
insl
lock
outsb
es
repnz
sub
insl
or
xchg
mov
popf
pop
and
mov
rcr
xchg
out
fs
sahf
test
or
or
mov
je
mul
aas
jle
ds
insb
pop
mov
push
fwait
std
lcall
in
push
sub
inc
out
jns
mov
insb
xchg
test
mov
ds
push
insl
dec
dec
fidivrs
xor
lods
pop
lock
sub
dec
dec
jp
mov
add
sub
leave
lahf
mov
stc
jo
aaa
js
jmp
test
mov
or
push
faddl
or
jg
inc
ja
pop
mov
pop
pop
das
data16
lea
imull
sub
jmp
or
mov
add
iret
rcrb
rcr
add
jge
test
sub
mov
xor
lea
cmp
adc
pop
out
test
jmp
xchg
inc
jmp
aas
test
pusha
stos
fs
pop
ja
insl
push
xchg
ja
mov
test
pcmpgtd
xlat
and
or
fimull
add
lods
pop
lods
ljmp
inc
push
cld
outsb
icebp
sahf
sbb
mov
lock
data16
in
les
cmpsl
or
mov
sbb
pop
mov
stos
test
gs
xchg
int3
movsl
or
push
add
cmc
pop
cmpsl
mov
fs
cmpsl
lods
inc
xchg
sub
enter
sahf
push
std
iret
faddl
push
mov
dec
daa
inc
jo
cmp
xchg
sub
lahf
add
sarl
je
jo
enter
in
test
movsb
or
jne
sub
xchg
mov
add
xlat
mov
pop
mov
ret
aam
mov
dec
loopne
mov
jno
loop
xchg
mov
push
xchg
push
ficompl
mov
dec
in
dec
les
mov
push
dec
jae
adc
adc
mov
add
outsl
mov
mov
mov
andl
stos
mov
rclb
pop
xchg
mov
mulb
mov
out
mov
stos
out
push
jb
or
xor
loopne
mov
mov
testb
and
arpl
aam
mov
loop
lcall
xorl
push
popf
mov
shlb
mov
push
sub
jae
imul
cli
inc
or
mov
push
std
adc
inc
mov
jle
cltd
cmpsb
lahf
pop
scas
hlt
mov
in
pop
repz
cs
adc
xchg
and
jmp
mov
mov
mov
mov
cmc
jg
cli
xchg
pop
adc
or
push
sub
sti
scas
dec
pop
mov
cmp
or
xor
jb
xor
cs
repz
push
mov
stc
mov
mov
add
push
sub
xor
fwait
and
cltd
jmp
xchg
pop
aaa
popf
mov
sbb
cmp
insb
movsl
and
pop
insl
ljmp
pushf
and
stc
pop
outsb
sub
test
loope
mov
cmp
jo
xor
pop
rcrb
lea
rolb
xchg
pop
add
lds
mov
push
addl
pop
fidivl
pop
andb
clc
adc
repz
mov
xchg
clc
xor
aad
xchg
pop
and
loop
cltd
pusha
test
imul
lret
fdivrp
mov
mov
jno
mov
inc
and
in
xor
inc
arpl
iret
and
in
inc
in
std
xor
decl
mov
gs
xchg
push
stos
sbb
iret
push
xor
pop
mov
or
sub
sbb
subb
adc
mov
cmpsl
clc
rcll
adc
in
jp
pop
cmp
int3
imul
cmp
mov
movsb
inc
scas
popa
outsl
fidivs
push
inc
mov
cmpsb
mov
cld
inc
mov
pop
lcall
pushf
jg
int3
leave
mov
sti
push
insb
and
push
inc
stc
adc
xchg
mov
lock
inc
push
pop
mov
out
push
nop
inc
adc
sub
push
sub
das
cmp
gs
cmp
aam
jae
push
dec
dec
popf
pop
test
outsb
xor
xor
lret
in
ja
pop
xor
mov
fdivl
mov
xlat
cmpsl
dec
inc
test
xchg
leave
outsb
add
ja
pop
and
dec
mov
adc
pop
cmp
out
mov
add
cmc
mov
push
cs
fisttps
or
add
pop
ret
push
or
push
lods
lcall
fcomp
push
out
in
xor
push
xor
arpl
adc
pop
or
xchg
gs
sbbl
aam
sbb
pop
ja
push
test
subl
and
enter
fcoms
sub
inc
or
cs
test
dec
push
out
and
adc
add
xchg
cmp
add
fs
mov
dec
dec
call
inc
sar
xchg
shl
push
mov
jl
mov
decb
mov
push
jne
mov
mov
cmp
mov
adc
pop
dec
out
repz
xchg
sti
xor
testb
imul
aad
rcrl
jb
xchg
pop
jle
sbb
adc
xchg
insl
sbb
rcrb
inc
ret
pop
lods
sbb
fistpll
xchg
sbb
out
xor
fcomps
lds
and
sub
sbbb
jb
xchg
ja
push
mov
mov
hlt
dec
movsb
js
mov
mov
pop
pop
or
jnp
xchg
mov
jbe
cmp
xchg
xor
cld
push
pop
and
scas
pop
pushf
and
jg
stos
lcall
xchg
push
adc
daa
popl
mov
pop
add
loop
jmp
aaa
mov
push
fs
push
icebp
rcl
bound
fbstp
test
xor
cmpsl
mov
pop
dec
hlt
mov
xchg
mov
js
dec
xchg
mov
dec
inc
or
testb
jge
test
push
lods
jle
mov
mov
add
out
inc
xchg
add
aam
add
mov
fwait
adc
push
jge
shr
jo
jns
rorb
loop,pt
push
fwait
mov
test
orb
sbb
push
je
or
and
adc
push
inc
add
inc
aam
inc
mov
add
and
fidivs
xor
lock
pop
cmp
cmp
inc
jno
arpl
mov
out
xor
mov
sar
ds
loope
adc
push
pushf
sub
cwtl
lods
shrl
mov
out
imul
mov
pop
lahf
dec
fstl
std
nop
jg
mull
test
stc
push
filds
dec
int3
sahf
hlt
scas
aam
out
aas
std
jo
xor
cmp
jo
jle
mov
push
sti
add
sbb
or
repz
sub
sarb
mov
cmp
cmp
daa
shll
push
xor
mov
popa
sub
xor
and
iret
xchg
adc
cmc
sbb
mov
xor
pop
scas
inc
xchg
je
jp
cmp
leave
testl
rcl
imul
pop
movsl
lods
push
cmp
call
push
mov
imul
repnz
mov
rorl
lea
lret
push
cmp
cmc
pop
jp
std
in
das
mov
pop
sbb
ja
and
mov
sub
inc
fadd
dec
imul
add
mov
push
xchg
xchg
stc
sub
sub
movaps
cmp
sbb
outsb
mov
rcrb
sub
insb
inc
or
imulb
mov
ds
outsl
push
neg
adc
loop
hlt
xor
xchg
out
sub
sub
test
or
repz
xlat
sub
insl
dec
push
in
jecxz
lret
cmp
mov
sbb
test
push
mov
enter
pop
or
std
adc
aad
pop
xor
popa
clc
fisubrl
rorl
stos
es
mov
jge
mov
fsts
mov
or
mov
shlb
fldcw
decb
iret
inc
popa
stc
mov
lods
cmp
inc
push
lret
push
push
out
call
xor
lahf
repz
ja
and
push
and
fsincos
es
jg
xchg
es
bound
in
xchg
jnp,pn
and
pushf
mov
inc
cmp
jp
cmpsb
jno
xorb
mov
mov
xchg
add
repnz
dec
cmp
xchg
sbb
adc
or
cltd
je
cmpsl
enter
jns
lods
fucomp
imul
popa
mov
xor
jne
inc
pop
jmp
aaa
popf
test
xchg
pop
aam
lea
imul
sub
data16
lret
clc
pop
sub
inc
pop
ror
ss
xor
sbb
sbb
fs
daa
xchg
out
xchg
add
jecxz
popf
and
shlb
repnz
mov
fldt
lret
popa
adcb
push
or
rcrb
inc
aam
cmpb
icebp
nop
push
cmpsl
movsb
loope
test
add
inc
and
aad
or
test
jge
mov
loope
xor
pop
mov
mov
orl
inc
pusha
sub
xchg
cltd
dec
scas
sub
push
sbb
test
rorl
popl
jle
shll
push
sub
testl
jle
jecxz
les
mov
pop
fisttpl
xchg
loop
jbe
repnz
pop
mov
sbb
test
push
dec
push
add
dec
dec
faddl
xlat
xchg
rol
dec
repz
out
mov
insl
call
and
inc
in
aas
lea
aam
enter
pop
mov
js
xchg
fisttpl
adc
adc
ss
cmpsl
adc
pop
test
adc
mov
sbb
mov
xor
pop
notl
aad
xlat
lret
fadd
mov
jb
sub
pop
movsb
lea
sub
jo
out
lcall
mov
jne
out
lods
xor
add
test
push
leave
push
push
mov
fwait
xor
enter
aas
paddsw
jge
daa
ljmp
mov
add
push
mov
js
inc
mov
stos
ljmp
aam
sbbl
sbb
xchg
int
pop
sbb
adc
pop
xor
adc
push
jl
cmc
mov
fists
sub
xchg
mov
sub
out
inc
adc
out
insl
add
test
imul
rorl
sbb
movsb
hlt
aad
imul
les
dec
mov
sub
or
lock
mov
adc
std
xor
fadds
pop
addl
insb
stos
add
ret
ret
nop
inc
jmp
mov
or
lods
repnz
lcall
xor
rorl
lret
int
cmpb
gs
in
test
xchg
pop
js
mov
sbb
imul
mov
out
xchg
icebp
sbb
sub
loop
xchg
sahf
cli
fldenv
fistpl
dec
mov
xor
das
mov
stos
inc
xor
mov
fwait
push
lods
lret
cld
or
insl
mov
stc
popf
and
sbb
aaa
je
stc
loopne
ret
adc
mov
sub
dec
dec
icebp
insb
xchg
push
lret
cmp
mov
inc
lret
mov
dec
outsl
cmp
sub
mov
cwtl
pop
lds
jecxz
cmp
fistpll
jb
jge
mov
and
insl
stos
popa
clc
pop
outsl
imul
mov
test
jp
fs
into
add
ret
pusha
jae
shll
mov
insb
mov
pop
roll
cwtl
xor
xchg
es
jl
push
mov
sub
dec
push
push
test
sbb
pop
dec
xor
jge
out
cmc
push
icebp
mov
xchg
jbe
or
leave
add
add
mov
adc
insl
mov
aas
dec
enter
aaa
or
imul
loope
push
int3
push
gs
push
cld
outsl
push
aad
or
ljmp
adc
xchg
mov
sahf
push
fldenv
or
cwtl
add
in
push
aaa
stos
push
movsb
inc
mov
pushf
movsb
dec
dec
add
imul
sbb
loope
sub
popa
cmc
setae
jns
fcom
std
adc
divb
xor
push
or
mov
adc
cmp
pop
mov
mov
fstpt
jl
scas
shlb
jmp
sbb
cmp
add
cmpl
push
mov
dec
int3
lret
test
aam
mov
lcall
sub
push
cmp
pop
hlt
subps
jg
jp
and
stc
popf
lret
push
xor
outsl
dec
test
pop
sub
shll
test
lcall
in
xchg
push
mov
xchg
loope
rep
xor
dec
repnz
loop
lock
cmp
in
stc
aas
adc
mov
push
lcall
sbb
sbbl
jmp
stos
arpl
or
or
sub
jo
inc
mov
fiadds
or
dec
cmp
inc
faddl
arpl
xor
aam
push
xlat
cld
outsl
fldenv
xlat
test
mov
fisubl
cmpsl
inc
popf
cmp
rcrl
inc
and
lcall
in
jg
rcrl
mov
sub
dec
rol
mov
sbb
aam
mov
adc
add
add
jbe
flds
jmp
cmp
or
push
imul
and
cmp
adc
adc
dec
nop
push
add
add
imul
sbb
ror
xor
push
es
cwtl
fsubr
cmpsb
adcb
and
push
cmpsl
js
icebp
dec
adc
mov
jb
lea
xlat
jp
pop
adc
aam
lock
pop
cmpsl
dec
xchg
out
aad
mov
xor
lret
call
lea
outsb
mov
mov
xchg
add
pusha
out
aas
push
sbbl
mov
mov
fcomps
mov
shrb
add
mov
mov
orb
repnz
leave
jge
popf
and
aam
in
xor
adc
stos
inc
js
repz
fiaddl
fstps
rolb
mov
pushf
fcoms
and
mov
add
imul
xor
jmp
lods
test
fimull
test
bound
mov
js
fiaddl
adc
dec
or
mov
pushf
adc
pop
les
imul
lea
push
cmpsl
test
into
data16
xchg
sub
mov
add
push
mov
addr16
mov
adc
scas
mov
psubsb
mov
pop
in
xor
lcall
cli
and
icebp
shrl
push
push
icebp
push
cltd
negb
lock
xor
sbb
and
jle
aam
or
or
les
addl
sbb
int3
int3
out
sub
fcompl
cld
fisubrs
dec
dec
add
sbb
inc
inc
mov
addr16
adc
jle
push
mov
call
pop
mov
es
lods
fwait
and
sbb
adc
lcall
mov
push
add
ljmp
push
mov
push
add
sub
xchg
or
lods
ljmp
pushf
data16
lret
scas
mov
orb
bound
mov
ds
cmpb
xor
xor
push
push
and
or
adc
notb
push
push
mov
sub
cmc
sbb
adcb
dec
cmp
adc
scas
jno
das
add
fdivrs
sub
data16
std
lock
ret
jg
mov
rcl
xchg
enter
push
in
dec
dec
sub
and
aaa
cli
jne
leavew
mov
idivl
fidivrl
push
test
xchg
repz
jne
aas
pop
cmpsl
jae
xchg
jmp
jp
mov
divl
inc
or
mov
push
stos
subb
aad
fiaddl
mov
testb
push
iret
jle
cwtl
pushf
dec
out
or
shr
mov
movsl
and
add
ret
outsb
cld
xchg
mov
aad
nop
repz
jg
test
in
jo
cmpsb
add
sbb
add
adc
scas
and
pop
idivb
mov
xor
pop
pop
fucomi
gs
jmp
jmp
subl
sbb
cmp
xor
sbb
push
test
xor
aad
cwtl
ljmp
popf
dec
jb
xor
adc
push
aad
js
mov
dec
pop
xor
rcl
xorl
mov
jbe
pushf
mov
push
cmpsb
cmp
push
les
fidivrs
push
loop
loopne
cmp
std
mov
xchg
lret
or
mov
adc
add
add
or
mov
or
les
xchg
enter
xor
sbb
pop
sti
sti
xchg
or
aad
outsl
iret
ss
bound
and
inc
in
mov
cmc
repz
jp
push
stc
je
addr16
lret
push
xchg
add
test
mov
or
push
mov
mov
fidivl
divb
je
cmpsb
arpl
dec
fisttpll
adc
add
aaa
mov
xchg
cmc
jmp
dec
add
loop
out
in
in
cmpsl
sti
sub
filds
add
and
jg
sub
and
add
xchg
and
loope
jae
push
jmp
mov
divb
lds
push
fdivl
dec
dec
rol
dec
aas
mov
push
mov
aad
xchg
lret
stos
mov
sbb
daa
mov
das
push
enter
or
jno
jno
scas
sub
movsb
popf
imul
jecxz
inc
dec
mov
fnstenv
rcrb
xlat
pop
jo
leave
int
inc
xchg
lret
mov
mov
int
scas
call
jmp
cmp
jp
nop
mov
cli
sub
cli
shr
mov
jnp
add
imul
or
cmp
shr
xchg
pop
mov
bnd
add
adc
icebp
pop
sub
sbb
dec
add
push
js
and
xchg
pop
mov
push
fcmovne
sub
das
inc
dec
mov
mov
xchg
pop
dec
dec
sub
aas
pushaw
cmp
push
bound
movsl
inc
mov
lock
enter
fsubs
lcall
fildl
pop
pop
mov
xchg
cld
xchg
pop
mov
repz
sahf
sbbb
and
mov
popf
cmp
dec
fidivrl
dec
clc
lds
xor
mov
lods
leave
enter
inc
fdivs
pop
fucomp
cmc
orb
aaa
out
mov
push
mov
test
jmp
iret
jp
xor
pusha
sbb
xchg
cmp
sub
jno
call
cwtl
aad
daa
bound
jp
aam
xchg
mov
es
lcall
jg
xor
out
pusha
repz
jge
push
out
aas
popf
dec
xchg
dec
aam
dec
shll
scas
and
xchg
in
shr
cmpsl
out
xchg
sub
jmp
dec
fnsave
pop
jle
enter
sub
cmpb
bound
addr16
cmpsl
and
mov
stc
adc
in
mov
pop
movl
or
pop
or
mov
sbb
xchg
addb
aas
ja
ficoml
inc
push
pop
lret
js
jnp
inc
loopne
sbb
or
es
loope
jp
inc
test
mov
mul
enter
rol
cld
cmp
cld
fcmovbe
repz
mov
cmp
mov
arpl
lds
xor
cmc
mov
add
jmp
jnp
sub
push
orb
lods
js
cwtl
adc
into
mov
adc
in
mov
cltd
pop
cmp
add
or
pop
push
jne
xchg
dec
mov
out
dec
dec
add
push
mov
addr16
push
jle
pop
ss
pop
add
jno
xchg
add
mov
loop
push
nop
in
mov
pop
int3
push
mov
js
subb
jo
push
stos
mov
xor
adc
imul
call
shl
adc
pop
lahf
lock
adc
mov
in
stos
int
andb
out
sbb
inc
pop
movsb
fldt
sbb
inc
jp
xor
jnp
cmp
xor
or
mov
outsl
cli
lock
popf
pop
repz
dec
in
std
dec
int3
jp
sbb
mov
or
rcr
jns
gs
sti
stc
popf
xor
out
add
xor
mov
fwait
sub
cld
lods
call
loop
sahf
sub
mov
adc
or
imul
daa
imul
outsl
jmp
cmpsb
sbb
jge
dec
xor
sub
xchg
repnz
movsb
std
add
insl
dec
out
cmp
or
imul
sub
in
notl
mov
outsl
sbb
xchg
addb
jb
mov
rorl
cmpsl
aad
fcomps
mov
sbb
pop
dec
fisubrl
popa
jno
jns
fs
or
lods
jmp
je
test
push
stos
cltd
xor
pop
or
adc
icebp
mov
into
movsb
jp
cmp
fwait
ret
rcr
xchg
or
mov
in
bnd
jle
adc
dec
push
push
sti
push
mov
cmc
xor
push
clc
test
sbbb
and
inc
aad
sub
repnz
insl
sti
dec
and
push
mov
dec
pmaxub
fldenv
pop
push
or
lea
jb
or
sarl
icebp
add
fldcw
sub
mov
xor
outsb
push
out
cld
test
mov
lds
push
push
lahf
lods
inc
dec
test
movb
sub
mov
inc
addl
or
arpl
sub
add
jmp
dec
int3
adc
xor
imul
xchg
dec
gs
inc
mov
daa
xchg
data16
movsl
cmp
fwait
inc
fimull
push
mov
pop
test
and
lahf
dec
mov
std
aaa
add
int3
xchg
in
loopne
inc
or
int
fs
call
xlat
aas
hlt
ja
shrb
jecxz
pop
lcall
push
sarb
jns
mulb
add
in
add
imul
dec
add
subb
push
cltd
inc
fimull
push
jecxz
nop
push
inc
mov
orl
push
js
scas
sub
lock
imul
cmp
incl
sbb
mov
ficoms
sub
loopne
rcrl
hlt
add
pop
stc
jecxz
mov
push
ss
aaa
in
push
aad
in
sahf
pop
xchg
fstps
mov
push
mov
test
and
fwait
sbb
repnz
mov
mov
push
push
fwait
jbe
test
lock
sub
or
sbb
cmpsl
lret
xor
popa
push
or
mov
mov
dec
fdivrl
movsl
jo
cld
push
pusha
and
push
test
lods
rcr
adc
sub
mov
jecxz
dec
cmp
and
lods
push
stos
es
jb
rorl
and
enter
jmp
mov
incl
fadd
cmpsl
pop
pop
cltd
arpl
dec
iret
cmp
mov
mov
mov
test
pop
sub
enter
ret
pop
je
bnd
cs
xchg
adc
jo
or
insb
daa
fmuls
cmp
loopne
das
rcl
sub
pop
outsl
jge
fbld
push
leave
ljmp
mov
cmp
push
and
jne
xorl
dec
sub
lcall
dec
mov
test
outsl
out
dec
mov
xchg
fisttpl
and
aas
pop
dec
sahf
xchg
dec
inc
lahf
pushf
mov
cmpsb
jmp
and
and
les
pop
push
dec
dec
shll
dec
test
add
test
jmp
add
stc
inc
sbb
push
test
imul
ja
xlat
ljmp
lahf
repz
or
dec
mov
jnp
pop
imul
out
es
sub
lods
adcl
mov
loopne
sarb
inc
xchg
push
pop
dec
pop
mov
sbb
adc
lret
jae
push
jmp
xchg
inc
xchg
mov
jb
adc
idivb
fisubrl
int3
idiv
push
stos
ja
push
jg
dec
jbe
push
adc
mov
fmuls
mov
fwait
xchg
xor
sub
xchg
das
test
jns
test
jns
xor
loop
jmp
cli
inc
xchg
shl
mov
mov
hlt
lret
fdivl
out
push
rol
push
cli
daa
les
xor
mov
js
jp
lea
cmpsb
and
pop
pushf
xor
cmp
dec
in
inc
cli
adc
clc
xchg
pop
roll
adc
mov
ret
outsb
push
dec
sbb
outsl
imul
out
xchg
xor
jbe
loopne
push
or
adc
cmpl
jmp
fsubs
cmp
hlt
in
mov
cld
or
sbb
push
push
mov
lret
movsb
icebp
and
mov
mov
negl
repz
lods
ljmp
pushf
jg
inc
fidivrs
mov
push
ljmp
ljmp
mov
cmp
adc
jo
ret
mov
and
call
push
fsubrs
outsb
test
xchg
fisubs
enter
in
and
outsl
fdivl
stos
mov
arpl
movsl
mov
ljmp
add
cwtl
test
cs
mov
lcall
ljmp
mov
add
sbb
adc
je
stos
jbe
jne
ror
aad
loop
popa
enter
xchg
push
imul
inc
stos
push
mov
cmp
dec
mov
clc
or
shl
mov
sub
popf
int
mov
aaa
mov
xchg
or
clc
inc
pop
cmp
jno
outsb
and
fucom
cltd
std
and
stos
orl
mov
popf
xor
movsl
cmp
bound
add
popf
sti
outsb
cmp
sbb
jns
or
mov
adc
xchg
cmp
pop
xor
inc
push
adc
inc
push
sbb
outsl
pop
scas
inc
push
sub
cmpsl
call
mov
push
mov
int
inc
aas
push
jmp
inc
dec
push
mov
push
or
push
inc
adc
iret
fucomi
pop
adc
mov
push
xorb
inc
push
lret
cli
push
pop
gs
xor
pop
xor
adc
mov
pushf
popf
pusha
dec
inc
jg
ljmp
lds
sti
ret
mov
js
imul
push
cltd
and
je
clc
inc
sbb
adc
in
xor
inc
ud2
pop
cmp
xor
rol
pusha
xor
push
lcall
jmp
cmp
lds
jge
pop
sarl
jmp
dec
shr
stc
insb
rorb
pop
mov
mov
dec
sub
rorl
pop
jle
cmpl
xor
cs
cmp
inc
mov
js
cwtl
push
mov
cmpsl
mov
fnstsw
xor
pop
jecxz
fcomi
je
aad
add
push
std
pop
test
mov
xor
shll
xchg
ljmp
and
xor
sbb
in
or
dec
mov
loope
dec
in
xchg
dec
in
dec
stos
xlat
outsb
sbb
push
insl
xor
inc
in
std
pop
pop
nop
cli
dec
push
cwtl
cmp
jl
mov
jle
out
or
pusha
outsb
adcb
cmc
xor
shll
push
mov
and
std
adcb
push
sub
mov
jl
sbb
and
ljmp
out
pop
mov
mov
out
mov
xchg
addr16
pop
dec
cmp
orb
lret
popf
pop
jg
mov
xchg
mov
fwait
pushf
pop
xchg
mov
and
test
dec
pop
pop
inc
or
loopne
inc
pop
or
lods
mov
pop
pop
jo
sub
repnz
xchg
shlb
mov
sub
pop
jp
xchg
inc
lock
jb
sub
decb
movsb
cmp
xlat
or
inc
movsl
aaa
outsb
pop
jb
jb
pusha
shrb
ja
lcall
sbb
loop
mov
dec
mov
mov
call
in
gs
dec
icebp
cmpsl
cltd
dec
pop
add
cmp
iret
sub
cmp
jb
inc
ret
bnd
test
imul
or
aaa
jo
cmp
cmp
push
call
and
jp
adcb
sbb
pop
int3
test
add
xor
test
imul
dec
loopne
sbb
push
xor
dec
pop
mov
adc
jl
fs
jnp
xlat
mov
inc
jno
dec
in
push
ja
sub
sbb
ljmp
xchg
test
mov
bnd
xor
inc
xchg
mov
lock
add
push
lret
leave
adc
sbb
in
xorl
sub
cmp
dec
add
out
out
shll
or
lock
xchg
jns
pop
push
ret
sahf
xor
fldenv
mov
inc
stos
cmp
lock
xchg
xchg
je
aas
leave
mov
lock
sub
les
loopne
xchg
sbb
sub
lahf
mov
add
rolb
xchg
sarb
adc
ret
xchg
pop
sub
sub
push
movsl
cltd
ss
add
mov
push
add
add
clc
sbb
mov
popf
push
jae
test
or
aas
sub
jo
mov
xor
repz
and
in
mov
xchg
xchg
dec
sbb
lret
xlat
ljmp
sub
dec
rclb
fimull
mov
mov
mov
mov
cmp
jmp
hlt
pop
sahf
and
mov
adc
out
push
iret
and
jo
jnp
dec
insl
sub
pop
fdivl
scas
mov
dec
mov
cmp
xchg
int3
pop
test
cmp
das
adc
nop
data16
leave
cltd
jmp
mov
and
xchg
lcall
int3
jmp
popf
sbbl
mov
mov
cmp
out
aaa
idivb
pop
pop
bnd
movsl
jge
out
or
rcl
dec
add
xchg
push
mov
sbb
fs
mov
es
xor
cmp
int
adc
mov
mov
leave
pushf
mov
mov
or
add
jge
cmp
pop
test
inc
cli
adc
and
sbb
in
rcr
push
fisubl
jmp
cmp
loope
sbbb
jmp
mov
test
dec
aad
imul
jne
sbb
sub
insl
add
stc
mov
sbb
out
inc
cmpsb
cmp
xor
jmp
out
aas
jne
dec
ljmp
mov
testl
jne
into
sbb
mov
nop
xchg
lcall
xor
mov
add
scas
adcb
sbb
mov
xchg
nop
push
sub
cmp
es
adc
push
stos
shll
int
xor
mov
pop
and
int
xor
fisubrl
cmp
mov
adc
fdivs
test
inc
cmp
cli
jo
aaa
into
pushf
xchg
test
out
mov
adc
fcmovnb
rclb
jae
into
ds
push
pop
faddl
push
icebp
adc
jb
je
dec
pop
int3
lret
fiaddl
jno
dec
imul
incl
xlat
loopne
test
push
popf
cwtl
negl
lods
into
fs
ret
xchg
mov
add
out
and
and
push
jnp
fisubrs
gs
inc
push
mov
push
out
addr16
cwtl
divb
jle
push
sub
insl
push
je
xlat
sub
xchg
fldl
je
mov
xchg
testl
ds
adc
pop
inc
push
pop
les
mov
pop
mov
leave
jmp
inc
inc
cmp
ss
lock
enter
mov
push
daa
pop
scas
inc
dec
jno
pusha
shll
dec
inc
push
dec
notl
insb
push
mov
aam
cmp
js
addr16
adc
aad
test
fnsave
jg
popa
ficomps
aad
push
pop
filds
sahf
fsubrp
stos
lds
inc
pop
jnp
mov
xlat
add
adc
inc
and
jecxz
pop
daa
ds
mov
dec
ds
sbb
jns
mov
test
imul
data16
shrb
es
mov
in
jle
mov
repnz
and
frstor
outsl
xchg
sbb
jg
orb
or
mov
jg
inc
sbb
jo
stos
xchg
cmp
ja
fistpll
jmp
adc
xor
pop
lahf
mov
jnp
es
out
test
hlt
shlb
xlat
push
adc
xchg
dec
fcomip
ljmp
and
push
pop
lret
dec
in
repnz
mov
sbb
add
sbb
mov
xchg
mov
lahf
outsl
mov
cmp
aad
adc
shr
cmp
adc
leave
pmaxub
je
lock
sbb
cmp
cmc
mov
pop
movsl
lds
add
sub
stos
popf
mov
test
cld
aaa
push
jno
out
sbb
insb
mov
fisubrl
sub
hlt
pop
pop
addr16
shll
js
addr16
cltd
jo
clc
leave
mov
mov
add
mov
pop
cmp
pop
rol
dec
dec
sarb
push
dec
stos
mov
jne
icebp
ja
dec
xchg
gs
mov
mov
add
sub
or
push
leave
inc
repz
mov
push
sbb
inc
scas
jmp
jae
jmp
bound
xchg
and
dec
sub
pop
and
cli
push
sbb
dec
cmp
das
xchg
scas
insb
add
cmp
repz
inc
add
cld
inc
int3
sbb
js
mov
ds
imul
rcrb
jge
dec
iret
mov
xor
loopne
push
les
xor
imul
and
aam
xorb
adc
out
mov
das
adc
in
mov
daa
jb
jl
clc
push
andb
dec
insb
dec
repnz
dec
pusha
in
enter
mov
popf
stc
or
jg
xor
add
hlt
xchg
add
popf
push
lods
push
dec
ror
fs
sahf
bound
inc
stos
push
cs
fcoml
inc
repnz
popf
das
jae
xchg
lds
pop
pop
cs
stc
xor
and
imul
mov
lret
dec
sbb
mov
adc
fstpl
xchg
cmpb
xlat
popf
push
xor
sahf
bound
data16
insb
sarb
mov
sbb
flds
cli
mov
jnp
lcall
in
add
pop
mov
lahf
sub
out
cmp
and
dec
dec
pop
jecxz
pusha
sti
roll
xor
sbb
cmp
aas
lret
inc
sub
outsl
std
mov
jmp
enter
xchg
xor
sub
dec
in
call
insb
add
mov
cmp
cmp
enter
xchg
hlt
push
mov
hlt
mov
lahf
pop
mov
out
movsb
adc
addr16
lret
imul
sbb
or
ljmp
pop
inc
mov
sti
and
mov
fisubrl
push
cwtl
jp
sahf
xlat
out
js
pop
push
pop
test
add
stos
xchg
sbbl
sub
enter
inc
mov
ja
inc
popf
adc
call
inc
psrlw
jecxz
pushf
adc
add
sub
in
xor
push
xor
js
mov
add
sub
dec
xchg
xchg
jbe
cmpsl
cmovns
shlb
in
sub
xchg
repz
xchg
xchg
cmpsl
loop
das
cs
adc
repz
mov
int3
or
cltd
outsb
xor
sar
movsl
dec
mov
ret
pop
or
pop
mov
xor
dec
push
insb
je
sbb
pop
pop
xchg
pop
dec
hlt
das
es
fiaddl
add
sub
call
xor
jns
push
xchg
dec
xor
cmp
push
imul
pop
xorb
aaa
call
fld
pop
add
xlat
out
push
cwtl
pushf
xor
daa
sbb
fsubr
int3
dec
sbb
jnp
outsb
mov
int
out
push
les
sbb
and
in
js
loopne
cli
inc
cmpb
lret
addr16
sbb
into
push
pop
out
out
cmp
fcompl
and
mov
pushf
pop
in
push
inc
sbb
pop
jbe
fcom
out
mov
aad
mov
cli
sbb
imul
lahf
ret
lods
daa
insl
out
popf
mov
stos
inc
movsl
sbb
dec
cmp
adc
push
fdiv
cmp
call
sbb
js
rep
and
xor
pop
mov
mov
mov
jg
call
sub
dec
stos
mov
mov
pop
adc
ss
ret
clc
adc
loopne
sbb
leave
mov
stos
daa
popa
loop
mov
shll
in
xchg
fstpl
dec
cmp
jle
out
xchg
inc
pop
jge
xor
xlat
fwait
sub
dec
fsubl
scas
int3
pop
inc
jmp
pop
mov
jne
hlt
test
arpl
aam
cmp
ret
lock
data16
loopne
jmp
push
mov
mov
dec
cmp
push
shr
mov
xlat
xor
or
mov
js
xor
stos
push
sub
icebp
das
sub
adc
cmpsl
fucomp
loopne
and
addr16
mov
icebp
pushf
test
xor
imul
hlt
sahf
cmp
pop
mov
pop
clc
inc
mov
adc
inc
lret
das
push
jo
in
mov
jns
cld
xchg
jbe
movsl
ficoml
rorl
idiv
scas
cmc
ljmp
and
sub
mov
lahf
ss
ret
dec
adc
in
test
inc
rol
adc
movsl
jp
pop
shll
xor
adc
mov
cmp
push
in
pushf
orl
mov
ror
out
sti
lret
dec
js
mov
ret
ror
jo
xchg
lret
inc
arpl
mov
aas
push
inc
jle
insl
lods
test
mov
les
insb
ret
mov
andb
lret
sub
or
int
xlat
sbb
movsl
mov
mov
ja
push
lock
inc
add
popa
mul
lods
rcrb
push
jmp
stc
int
ja
push
pop
pushf
sbb
nop
jb
mov
stc
lea
ja
or
ret
aas
add
mov
clc
xchg
out
mov
push
jmp
mov
mov
pop
sbbl
jecxz
jge
test
mov
popa
adcl
cmp
push
iret
xchg
push
cmp
sbb
xor
mov
sub
mov
fwait
cli
out
insl
and
inc
in
jno
push
mov
mov
popa
or
scas
icebp
adc
pop
pop
jle
clc
push
repz
pop
add
loopne
in
enter
sti
in
or
sbb
or
bound
nop
mov
divl
jecxz
sub
sbb
push
mov
es
mov
les
lret
mov
lret
les
bound
or
out
lods
in
pop
add
icebp
sti
xor
xchg
adc
pavgb
and
push
mov
in
cmp
imul
adc
ss
iret
loopne
inc
lcall
xor
xlat
or
mov
xor
or
adc
lcall
add
push
shr
mov
dec
movsl
xchg
cwtl
stos
addl
out
out
cmp
testb
cmpsl
data16
test
scas
push
dec
ds
shl
mov
in
mov
cld
push
fs
cmc
aas
xlat
mov
pop
push
ret
xlat
xchg
fmull
mov
in
lds
xor
pop
lcall
jp
inc
mov
test
rcrb
fstpl
inc
add
stos
sti
or
push
loope
lcall
imul
xor
inc
push
push
cwtl
xchg
sub
sarl
stc
push
pop
and
nop
inc
mov
xchg
mov
sbb
push
push
mov
aam
fmuls
sbb
cmp
clc
or
iret
in
gs
out
btc
test
dec
gs
fwait
cmp
and
repnz
or
test
push
inc
in
xchg
jecxz
pusha
inc
jle
sbb
adc
or
pop
adc
sub
dec
movsb
loop
inc
xchg
enter
cmp
cs
xchg
das
test
rcrb
xlat
add
mov
xchg
pusha
mov
mov
data16
aad
lret
xchg
sub
sub
add
jb
dec
mov
fcoml
call
add
rcl
loopne
data16
pop
lret
mov
jno
sub
in
arpl
xchg
dec
fwait
addr16
cwtl
insb
call
mov
cli
js
in
push
adc
aam
aas
ret
and
dec
push
xor
inc
push
iret
mov
es
jae
or
ret
je
lock
cltd
orb
and
fbld
subl
int3
push
fsubr
fldcw
sub
mov
es
pop
test
movsb
aaa
jns
mov
enter
cmp
adc
ret
fisttpl
and
xlat
movb
in
mov
cmpsb
mov
cmp
fwait
ret
icebp
fsubrl
push
push
insl
mov
les
mov
pushf
stos
xlat
xchg
outsb
cmp
test
pop
movsb
inc
mov
int
into
sahf
dec
fmuls
lret
jecxz
mov
add
shlb
mov
jns
fcompl
gs
mov
dec
xchg
jo
jl
js
rcll
or
lock
aad
push
and
pop
dec
mov
pushl
movsl
and
fidivs
stos
in
ja
or
xor
insl
inc
push
push
cmp
add
xor
cmp
and
je
fcomps
dec
pop
xchg
and
mulb
cmpsb
sbb
xchg
adc
mov
jns
out
ss
sbb
mov
dec
sub
psubd
outsb
push
sbb
cmp
insb
jle
sbb
mov
push
outsl
in
loope
adc
inc
xor
inc
fsubl
inc
cwtl
push
xchg
xor
mov
rcl
jae
mov
lods
std
push
pop
mov
mov
subb
scas
roll
sub
or
jns
adc
dec
push
inc
scas
addl
xchg
sub
jns
stos
pop
ficompl
fs
jno
mov
add
jp
pusha
cltd
mov
xchg
mov
shrb
int3
dec
repz
sbbl
sahf
jle
inc
jmp
mov
xor
sub
sarb
xor
cmpsb
sbb
and
jnp
rcrl
out
test
xchg
mov
xor
ss
fldl
pop
mov
add
xor
inc
mov
mov
cmp
and
xor
jo
outsl
fnsave
jle
jle
shl
mov
int3
adc
inc
xchg
fnop
and
test
sub
inc
cmpsl
sbb
xchg
jns
push
xor
dec
mov
xchg
mov
lcall
fldenv
dec
movzbl
les
jecxz
add
aaa
xchg
xor
push
fstpt
xchg
jns
bound
and
std
push
push
stos
lea
inc
pusha
out
data16
das
pop
mov
fiaddl
mov
into
fldt
outsl
jns
enter
ja
leavew
sbb
jo
mov
testl
adc
cmpsb
stc
sahf
hlt
into
pop
outsl
cmp
adc
push
pushf
mov
dec
stos
dec
and
pop
test
popa
inc
stos
jl
icebp
roll
jp
add
rdtsc
leave
sub
jo
test
push
aam
xor
dec
or
push
sub
movsl
mov
in
dec
jmp
sahf
jmp
aas
insb
push
dec
fstl
insl
sub
jbe
sub
pop
insb
inc
jg
or
rcll
jnp
into
stos
pop
add
stos
data16
fistps
sbb
sti
xchg
xchg
arpl
das
roll
xor
mov
les
cmc
int
sub
outsl
daa
mov
jbe
pusha
xlat
add
in
movsl
sub
out
or
sarl
pushf
and
push
mov
mov
sub
and
pop
jmp
int3
mov
pusha
pop
push
pop
dec
dec
xor
fcoml
gs
sbb
in
push
cmpsb
push
sbb
shlb
pop
mov
dec
mov
adc
pusha
xor
pusha
adc
movb
stc
sbb
js
or
lods
repz
inc
ds
cmpsb
icebp
inc
aam
pop
jmp
and
in
pop
xor
mov
dec
mov
popf
cmpsb
cmpsb
fwait
rcr
jp
adc
mov
add
in
je
or
mov
or
sub
add
dec
int
out
mov
std
ss
std
pop
test
add
mov
push
pop
add
sub
js
pop
scas
sbb
sbb
rcr
inc
cmc
shr
cmp
mov
mov
adc
shlb
enter
ja
sub
sbb
dec
movsb
xor
mov
mul
or
and
and
ret
stos
cld
lcall
lahf
stos
pushw
dec
push
mov
flds
and
inc
push
lret
sub
add
sub
jmp
rcrb
dec
loopne
and
js
push
push
andl
stc
add
dec
dec
mov
mov
mov
add
std
adc
mov
shl
mov
fcomi
lds
sbb
inc
insb
dec
mov
test
jl
inc
test
push
adc
ror
jnp
cmp
xor
sbb
adc
insb
scas
jl
rol
sbb
xor
mov
ret
ret
fisubrl
adcl
pop
into
sbb
repnz
int3
adc
idivb
push
cmp
stos
and
mov
mov
iret
jecxz
in
inc
cwtl
adc
pop
jmp
ja
inc
subl
aam
in
cmp
test
adc
push
test
in
sub
in
jnp
rorb
popf
ds
sbb
fistpl
push
sbb
ja
aaa
pop
xor
cld
lods
adc
and
popa
cmp
fidivrl
call
in
scas
inc
je
pop
push
push
push
mov
dec
pop
cmp
mov
add
push
and
jp
stos
mov
xor
pop
bound
loope
movsb
sahf
ret
mov
sub
mov
or
sub
or
lcall
sub
mov
xchg
sub
jb
test
bswap
pop
out
test
out
sbb
lds
lock
data16
dec
ds
jp
inc
int
das
sbb
adc
push
mov
out
rcrl
mov
cli
mov
mov
pop
jp
mov
xor
out
aad
and
psadbw
inc
lea
push
and
mov
subl
sbb
mov
xchg
push
mov
xchg
inc
lods
inc
std
cmp
sub
imul
ds
push
negl
in
mov
and
mov
ret
push
imul
loope
rcl
imul
lock
cmp
movsl
test
notl
movsl
mov
aam
jg
pop
insb
and
test
xchg
inc
shll
test
mov
int
lret
push
and
pusha
imul
inc
cli
mov
inc
sbb
inc
ss
es
pop
push
je
and
cli
roll
jle
int
xchg
mov
sarb
jecxz
jae
jnp
inc
push
gs
jns
jno
and
xchg
jnp
sub
test
testl
mov
push
cmp
push
mov
xchg
std
cmp
data16
out
push
jbe
mov
lods
cmpsl
xchg
jo
jo
cmpsb
fiaddl
pusha
cmc
sub
pop
sbb
mov
mov
dec
leave
testl
push
dec
jbe
jl
inc
fldenv
dec
pusha
testl
and
xchg
mov
xchg
adc
adc
arpl
test
pop
cmpb
push
out
jo
call
inc
sbb
push
cld
sti
mov
sbb
mov
jge
or
ds
xor
xchg
hlt
les
xchg
imulb
mov
lret
pop
cmp
andb
outsb
iret
int3
xchg
fs
cmpsb
pushf
lret
aam
movl
fistpll
fidivs
pop
fdiv
inc
cmpsb
cld
xchg
fsubs
stc
nop
in
insl
add
mov
lea
clc
and
lret
fisubs
xsaves
push
shlb
imul
xchg
subl
sti
xchg
xor
int3
fadds
sbb
and
fildll
add
lret
cs
and
imull
sub
dec
inc
cmp
cwtl
arpl
stos
outsl
in
outsb
pop
nop
ss
mov
in
rolb
js
xchg
push
in
dec
into
pop
daa
inc
arpl
out
mov
insl
xchg
push
or
sub
sub
pop
xlat
push
mov
inc
test
mov
cli
pushf
xchg
mov
lds
push
sbb
loopne
insb
sub
cld
xchg
mov
push
jmp
push
xchg
addr16
stos
cmp
fmull
adc
jge
add
lret
dec
xchg
mov
cmpsl
mov
in
mov
lods
mov
scas
imul
mov
adc
mov
sbb
and
adc
bound
lods
inc
push
xor
iret
aam
jl
push
jne
movsb
decl
sub
or
cltd
xchg
ljmp
jne
push
out
sahf
gs
xor
arpl
jne
stos
fisubs
jae
jne
xchg
lret
lods
and
dec
jnp
lret
mov
xchg
add
mov
mov
loopne
je
push
inc
jp
icebp
loopne
xchg
push
push
es
sbb
cmp
push
xchg
dec
jecxz
jns
out
aaa
inc
xlat
or
cmp
mov
mov
jno
jne
popa
scas
xchg
xorl
dec
inc
fwait
mov
pop
das
sbb
repz
jecxz
mov
sub
in
dec
dec
cli
pop
cmp
ret
notl
push
dec
movsb
adc
and
mov
test
notb
je
push
repnz
xor
lret
int
mov
pop
jle
pusha
cwtl
lds
jecxz
lahf
cmp
repz
dec
push
mov
push
ljmp
push
inc
sub
jg
jnp
inc
push
cmp
xor
xchg
xchg
cmpl
xchg
mov
movsl
pop
mov
divl
dec
add
sbb
lods
out
add
outsb
popa
jae
inc
dec
inc
lock
iret
data16
push
pop
out
mov
jmp
iret
push
and
fadd
shrl
cmp
pop
scas
xchg
sub
into
mov
in
or
inc
xchg
pop
push
xor
imul
jbe
ror
sbb
or
inc
enter
ret
lods
fstl
sub
sbb
cmc
inc
data16
lret
addr16
jge
rorl
je
mov
sbb
in
adc
add
imul
adcb
lea
adc
or
inc
stc
outsl
inc
push
int
push
adc
jno
fsubs
inc
xor
sub
add
out
call
in
in
das
icebp
orb
xchg
mov
mov
jge
jg
xchg
pusha
sub
pop
and
pop
sbb
lahf
sar
dec
cmp
dec
out
loop
outsb
andb
mov
jl
leave
and
movsl
xchg
aas
sahf
ds
roll
repz
push
inc
mov
and
test
mov
sbb
mov
cmp
imul
mov
inc
subb
clc
xchg
sub
fwait
sub
xchg
rolb
fisubl
cmpsl
mov
rcrl
pop
lods
mov
sub
repz
mov
jecxz
negb
loop
int3
dec
sbb
insl
sub
mov
dec
sbb
dec
pop
pop
push
imul
mov
and
lock
cld
test
in
adc
mov
and
adc
push
jno
shlb
sub
out
fisubrl
enter
repnz
mov
fmuls
arpl
push
push
fsubr
cmpsl
inc
mov
jns
subl
rcrw
cmp
push
decl
ret
jg
or
rorb
mov
push
les
sbb
xor
sub
pop
cmp
lcall
mov
rcrl
inc
mov
cmc
aam
sbb
inc
inc
iret
mov
jbe
pop
popa
push
lcall
stos
cmc
pop
cmpb
mov
xchg
into
arpl
cmp
lods
mov
inc
daa
add
movsl
xchg
repnz
enter
jl
outsb
inc
push
mov
roll
add
inc
shrl
mov
cmp
es
dec
lods
in
popa
shrl
cmpb
pop
outsl
jo
jb
add
stos
paddw
xchg
fidivrs
lock
int
out
js
or
out
dec
mov
in
loop
pop
sbb
notl
inc
mov
push
fdivp
xor
loopne
icebp
shrl
jbe
xor
cmpl
push
loopne
cmp
mov
xchg
outsb
hlt
push
jge
jno
je
ds
lods
test
and
movsl
pop
sub
popa
sbb
lock
mov
or
dec
addr16
insl
pushl
div
jae
mov
movsb
inc
sbb
mov
ss
fnstcw
jae
sti
sbb
mov
notl
mov
and
cli
les
xchg
and
jnp
out
ds
xor
aam
ss
sar
add
test
mov
add
jl
mov
les
push
cmp
sbb
push
lods
fbld
aas
xchg
add
xor
pop
adc
cmc
mov
mov
mov
lds
cmp
add
repz
fcompl
xchg
sbb
enter
lcall
adc
xor
xchg
mov
popa
ja
aam
loope
xchg
addb
cmp
ret
mov
mov
aas
xor
sub
xchg
hlt
int
xchg
adcb
mov
push
add
int
sahf
jmp
or
xchg
enter
mov
inc
movsl
fsubrs
negl
mov
repnz
loopne
mov
jecxz
adc
dec
pop
popf
jae
xchg
movsl
dec
pop
imul
pop
cmp
scas
ja
sbb
movsl
and
xchg
cmp
leave
fnstenv
fbstp
and
insb
or
mov
rcrl
stc
nop
lds
mov
subb
or
idivl
inc
xlat
leave
mov
add
push
cs
pushf
test
xor
fnstcw
test
pop
inc
pop
push
add
jle
jo
inc
stos
push
jle
or
or
mov
xchg
sub
push
scas
loope
jge
daa
fwait
lock
int
test
cmc
test
fnstsw
xor
sbb
mov
test
inc
ljmp
mov
mov
dec
sub
xchg
adcl
js
neg
sub
mov
mov
or
test
pushf
lcall
mov
cmp
aas
stc
loopne
out
mov
or
icebp
aam
adcl
movsb
int
adc
adc
add
mov
aad
ja
je
loopne
mov
xchg
sti
or
inc
imull
sbbb
adc
jg
jl
cmp
out
push
lds
push
push
mov
adc
fnsave
pop
sahf
and
inc
and
test
aad
inc
inc
aas
or
xlat
dec
sub
mov
cltd
jge
mov
test
shlb
and
ss
dec
mov
psllq
pop
mov
cmp
sbbl
jb
imulb
clc
in
xchg
das
test
mov
jl
jge
shrb
push
or
sbb
divb
scas
sbb
cmp
push
sub
aad
adc
imul
and
dec
push
mov
mov
leave
inc
imul
aam
imul
repz
xlat
xchg
add
push
jb
jb
pop
daa
inc
push
cld
int
jb
xchg
and
or
mov
ret
in
adc
mov
call
mov
add
pop
add
loope
outsl
cwtl
inc
pop
lret
mov
loopne
clc
and
sub
and
pop
insl
xchg
andl
mov
mov
rcrl
inc
jecxz
in
mov
aaa
sbb
sbb
or
andb
push
and
stos
lcall
push
cmp
pop
xor
sbb
jbe
in
mov
mov
sti
into
xchg
lahf
and
movsl
aas
and
into
pop
dec
mov
xchg
mov
add
aam
testb
adc
sahf
dec
push
js
movsl
loope
inc
dec
stc
and
mov
jle
mov
popa
dec
sbb
cmp
pushf
jle
xchg
cmc
cmp
test
mov
in
sbb
sahf
jnp
xor
icebp
inc
and
pop
and
mov
xchg
mov
jne
mov
hlt
pop
mov
adc
mov
dec
int
pop
ljmp
test
arpl
aad
inc
sub
ljmp
mov
mov
cmp
je
pop
xchg
out
xor
pop
gs
or
cmpsl
pushf
daa
or
dec
pop
dec
jecxz
aaa
sub
ljmp
push
mov
pusha
mov
mov
pop
add
mov
gs
cmc
orl
push
lods
push
jo
cmp
and
pop
inc
jo
mov
xchg
es
scas
sti
imul
mov
push
pusha
ds
push
adc
push
jns
fsubr
jbe
sahf
xor
push
fiadds
es
jle
add
pop
xchg
jle
and
jnp
repz
aaa
out
andl
or
pop
repnz
nop
repz
jb
ds
sub
jo
push
jne
rcr
aas
jmp
fldcw
adcb
aas
mov
andb
jb
aas
addr16
pop
or
insb
pop
mov
les
aam
mov
enter
aam
jne
andb
pop
test
or
leave
push
and
xchg
mov
dec
lcall
cmp
push
scas
mov
cmp
pop
xor
xor
mov
and
adc
inc
leave
shlb
out
fwait
es
subl
ja
inc
mov
jns
std
or
aam
in
shlb
fwait
lret
push
popa
cmp
or
mov
add
aaa
push
nop
loopne
loopne
aad
xor
inc
jns
out
mov
rclb
mov
icebp
ret
stos
jae
add
shlb
lret
push
mov
mov
push
pop
mov
nop
sbb
lods
cli
push
sub
icebp
lret
arpl
rclb
xchg
scas
mov
xor
arpl
aad
jnp
ljmp
push
inc
mov
lock
jl
xchg
pop
pop
call
ja
aas
stc
mov
ret
repz
je
sub
lahf
push
mov
divb
repz
fisttpl
arpl
loop
hlt
pop
jmp
pusha
out
push
jbe
call
cmp
mov
mov
out
nop
mov
pop
and
cmp
jnp
outsl
fisubrl
cmp
pop
or
add
add
pop
out
iret
sub
mov
push
inc
inc
lock
fdivl
push
ja
pop
jbe
inc
out
pop
cmp
jg
sub
dec
sbb
out
pop
cmpsb
lods
sarl
sub
mov
sub
repz
jo
outsb
or
adc
xchg
xchg
xor
int
scas
bound
movb
dec
outsl
js
mov
je
daa
scas
das
pop
jne
jb
lods
outsl
cmp
fsubr
xchg
mov
lods
jbe
iret
cli
data16
mov
loop
je
nop
dec
dec
sbb
lcall
jle
cmpsl
lds
sahf
insl
inc
fildll
or
mov
dec
mov
cmp
ret
loope
pop
in
jl
sbb
rcrl
ds
in
or
jae
sbb
xchg
lcall
scas
daa
js
ret
lods
mov
inc
dec
mov
dec
cmp
mov
inc
sbb
jmp
arpl
add
add
add
testb
cmp
cmpsl
out
sarl
mov
xor
fidivs
call
rcll
mov
sub
daa
add
lret
push
jne
dec
fs
xor
dec
dec
dec
call
cmp
jnp
fistpl
daa
pop
cli
inc
js
sbb
dec
mov
gs
insb
addr16
stos
and
jne
out
inc
ljmp
inc
js
scas
sub
mov
clc
call
and
loop
push
movsb
xor
push
aad
adc
cli
cli
fs
outsb
lahf
cmp
or
icebp
pmaxsw
test
in
sahf
loope
rorb
pop
hlt
cmp
jnp
icebp
jo
pusha
adc
pop
sub
repz
popf
int3
inc
cmp
in
adc
xchg
out
adc
add
mov
ficompl
and
jnp
sbb
mov
push
out
jno
mov
mov
mov
mov
outsl
dec
xlat
or
xchg
ficomps
and
loopne
pop
jecxz
pop
jmp
mov
cmpsl
mov
xchg
scas
pop
cmpsb
add
pop
jo
or
pop
sub
test
daa
sub
pop
jno
in
sub
push
mov
cmpsb
lods
mov
or
fiaddl
dec
jno
mov
jae
mov
sbb
cmpb
sub
js
pop
leave
lahf
xchg
cmpl
xchg
pop
fwait
dec
pop
jne
pop
xor
pop
icebp
lret
or
movsl
cmp
roll
mov
or
xchg
inc
sub
dec
outsb
test
bound
enter
pop
in
jle
mov
in
ret
pusha
notl
arpl
sub
inc
js
sub
push
adc
andl
inc
mov
push
into
cltd
push
jb
test
add
xchg
and
hlt
mov
cmp
add
xchg
add
rsm
adc
test
adc
pop
les
fdivl
xchg
jbe
arpl
in
clc
push
outsl
ror
xlat
outsb
out
cmp
push
mov
mov
inc
repnz
jae
xor
mov
jnp
aad
sarl
add
into
xor
cmp
mov
clc
pop
mov
orl
add
ljmp
ret
pop
add
lds
js
add
movsl
test
mov
pop
xor
cli
jge
sti
dec
leave
dec
sbb
es
es
jle
scas
les
sbb
rclb
aaa
mov
ds
ret
fisttpll
in
int3
or
jmp
and
outsl
add
mov
cmp
add
push
pop
shrl
pusha
jb
andl
cmp
shll
orb
mov
out
das
js
popa
psubsw
cs
jno
xchg
je
lods
dec
mov
add
icebp
dec
fstp
push
lret
inc
iret
sar
cmpsl
js
pusha
and
push
lret
mov
in
inc
int3
dec
adc
cwtl
dec
xor
cmpsb
cld
cs
pop
stos
cwtl
sub
cwtl
adc
pop
jg
fdiv
or
out
lahf
sbb
cli
pushf
push
fwait
mov
dec
movsb
jbe
cltd
pop
bound
loopne
fsubl
mov
repnz
dec
cmc
mov
ret
adc
sbb
shrl
cmp
dec
jmp
xchg
cmc
repnz
xchg
sub
push
push
cmp
push
outsb
jle
xor
mov
and
mov
and
xorb
add
adc
cmp
mov
cli
addr16
mov
sahf
mov
popa
inc
mov
test
dec
int
das
cmp
xor
sbbb
movsb
fimuls
sub
ret
jno
dec
gs
outsb
shl
mov
out
inc
pop
pop
popf
les
cmpb
jnp
jecxz
jno
jne
jle
add
mov
push
decl
stos
es
dec
js
test
push
adc
imul
sbb
rcr
and
dec
dec
pop
lret
adc
outsl
dec
cli
xchg
mov
and
ljmp
insb
mov
ret
inc
scas
jecxz
cmpsl
lods
pop
dec
and
into
cs
arpl
dec
and
int
bound
and
fs
pushf
inc
push
out
fstpt
out
sub
mov
aaa
scas
pop
mov
stos
into
insl
ficoml
sbb
mov
cmp
notl
out
push
jne
out
cmpl
mov
adcb
test
pop
push
dec
xchg
push
out
stos
xchg
stos
or
pop
dec
rcrl
mov
mov
xchg
icebp
repz
add
sbb
les
iret
pusha
loope
sub
sbb
add
mov
das
sbb
pop
dec
push
lret
sub
in
clc
movsl
cmp
push
stos
cmp
jmp
sbb
mov
fstpt
pop
mov
flds
ret
cmp
lods
addb
mov
mov
cltd
es
jle
das
sub
rclb
or
cmp
add
xor
cld
jb
cs
sub
push
ret
subl
sub
sub
dec
in
cmp
arpl
sarl
push
mov
jmp
jne
lahf
cli
loopne
inc
jg
iret
and
jo
adc
pop
adc
test
in
push
xchg
pusha
add
mov
lds
mulb
lret
nop
or
xlat
repz
jle
inc
mov
fidivs
out
and
aam
and
lock
pop
and
int
sub
loopne
lcall
or
mov
ret
mov
subb
sbb
pop
repz
push
mov
xchg
mov
add
cmp
stc
push
nop
jnp
sbb
jge
lret
shlb
fcompl
adc
mov
repnz
adc
cmp
jo
and
out
xchg
in
mov
outsl
jb
xor
xor
nop
pushf
jnp
jp
call
cmp
mov
xchg
dec
jne
push
add
stos
xchg
push
ss
push
iret
cmp
push
je
imul
rclw
jnp
or
dec
xchg
cld
xchg
xor
and
lods
adc
jb
mov
pusha
lahf
jo
or
push
jbe
mov
sbb
pop
cmp
xchg
scas
sbb
or
cmpsl
pop
aad
cmpsb
cmc
aaa
or
cmpsb
lret
repnz
mov
scas
inc
jmp
pop
les
pop
rcll
stos
xchg
notl
xlat
xor
in
in
iret
loope
mov
test
int
push
jb
ffreep
pop
xchg
stos
rcrl
push
add
fadd
ds
out
es
test
xchg
push
out
sbb
mov
sub
pushf
aaa
fs
add
imul
jmp
cmp
jae
rcl
jae
loopne
push
adc
xchg
sub
daa
inc
xorl
and
movsb
push
inc
fnsave
loopne
fwait
das
sti
sbb
dec
pushf
xor
or
imul
aad
xchg
or
dec
xchg
push
xor
scas
arpl
cmp
ss
dec
lods
or
dec
push
insl
imul
dec
adc
cmp
das
pop
ret
dec
loop
jnp
fs
imul
add
in
bound
out
ja
iret
inc
jno
sub
flds
mov
insb
jo
ficoml
inc
push
ds
push
add
pop
xor
cltd
cmpsl
or
add
xchg
push
scas
in
test
jnp
sbbb
and
in
and
lea
jne
inc
stc
mov
adc
mov
xor
sbb
adc
pop
das
jle
xchg
clc
jl
in
in
or
cmp
xchg
js
xchg
das
into
push
jmp
stc
shr
addb
shlb
enter
jp
inc
mov
sbb
or
insb
mov
fcmovnu
dec
inc
cmc
nop
push
imul
cmc
bound
pop
imul
scas
mov
pop
xchg
xor
dec
sub
movsl
dec
pop
ret
lods
jg
aad
ret
testb
cli
adc
popa
shll
inc
ficoml
dec
cmc
jge
fdivrs
rcll
out
push
pop
addr16
nop
sub
outsb
push
mov
xchg
aad
js
sar
sbb
hlt
loopne
es
andl
jl
loopne
inc
std
das
cmp
dec
pop
jp
push
and
cmp
adc
lret
xor
scas
sub
inc
punpckhwd
sbbb
mov
fsubs
test
ret
mov
shll
mov
xor
popf
sub
cmc
jp
in
mov
xchg
cmp
lcall
xchg
mov
inc
jecxz
adc
cld
rcr
mov
adc
and
bound
jmp
ljmp
jnp
push
and
or
sbb
idiv
push
mov
inc
pusha
sti
jp
mov
pop
xchg
xor
jecxz
in
outsb
adc
dec
cmpsl
add
les
and
and
jmp
sub
lahf
pop
pushf
outsl
in
lea
add
out
mov
cmc
push
inc
jge
aam
call
icebp
cmpsb
jne
jecxz
aad
stc
xchg
inc
xor
sub
adc
out
into
pop
ret
pop
push
lcall
testb
pop
loope
pop
mov
sub
outsb
add
lods
std
ret
push
xor
call
out
and
inc
cli
cmp
shrl
lcall
inc
pop
xor
adc
push
jno
test
xchg
cld
pop
push
incl
and
adc
fisubrl
jge
xor
lret
mov
xchg
inc
daa
aaa
into
pop
inc
pop
cmp
jns
mov
dec
adc
mov
fwait
ljmp
arpl
push
into
lea
ja
xchg
fldcw
sub
pop
bound
dec
dec
pop
jp
cmp
dec
jns
sbb
ds
andb
pop
sahf
addr16
dec
sbb
hlt
xor
xor
xchg
movsl
popf
dec
add
dec
pop
aad
push
push
adcl
dec
jmp
or
sbb
dec
mov
xor
push
inc
fiaddl
cli
dec
xchg
or
lds
lahf
xchg
aam
daa
jno
imul
and
xchg
std
int3
das
out
cwtl
arpl
push
hlt
mov
mov
sahf
push
shrb
cmpsl
cmp
and
jmp
divb
lret
sbbl
add
repz
xchg
adc
xchg
enter
hlt
push
jae
xchg
mov
inc
xchg
mov
mov
fs
sub
jmp
in
int
pop
repz
push
jp
pop
push
sbb
push
fldt
add
leave
jae
jecxz
cwtl
lret
fwait
hlt
sub
lret
daa
mov
lahf
cmpsb
inc
fs
jb
repz
and
mov
add
in
clc
out
mov
adc
add
xor
pop
gs
and
daa
jecxz
pop
mov
push
push
xchg
push
inc
repz
fldt
jge
cmp
cmp
icebp
adc
mov
into
xor
mov
inc
repnz
mov
inc
stc
add
ja
xchg
push
das
pop
nop
pop
icebp
and
leave
movsl
lock
aad
push
xchg
jp
push
mov
js
int
or
fidivrs
or
dec
pop
adc
sub
xor
nop
out
cs
popa
sub
and
addb
jg
daa
sub
and
add
add
push
jnp
sbb
push
popa
jns
test
pop
lock
adc
cli
jle
push
sbb
daa
mov
mov
dec
jle
jg
mov
cwtl
xchg
fdivs
cmpsl
imul
call
ja
sbb
push
pushl
and
and
add
pop
imul
push
pop
movsb
ljmp
out
xor
xchg
jns
fwait
jae
push
loop
and
cmc
push
sub
icebp
int
pop
jnp
nop
mov
lods
outsl
mov
aam
add
dec
or
jno
or
jecxz
push
adc
scas
pop
mov
and
adc
popl
rolb
adc
ss
aam
add
and
dec
ljmp
push
sarl
mov
jg
pop
scas
or
bound
enter
aam
jp
insb
aam
fsts
int3
cwtl
or
inc
in
dec
bound
ss
into
sbb
lds
aam
cld
ficoml
sbb
aad
inc
sub
or
sarb
adc
mov
push
flds
insl
jecxz
xchg
and
or
or
mov
or
lods
sbb
repz
aaa
xchg
mov
xlat
sahf
xor
mov
mov
push
rcll
mov
movsl
push
aaa
idivb
pop
dec
in
out
mov
js
cld
inc
mov
pmulhw
cld
in
or
ja
in
pop
dec
adc
cwtl
imul
roll
sbb
aas
pop
cmc
xchg
pop
dec
and
jl
ss
inc
sbb
cmp
popf
cld
leave
call
add
fisubl
push
scas
push
mov
out
xchg
decb
mov
mov
rcrl
loope
and
ret
jl
inc
cmp
in
dec
loopne
icebp
push
insl
das
jb
or
dec
sbb
mulb
inc
outsb
xchg
roll
mov
or
mov
inc
xlat
fsubrl
pop
jb
repnz
and
or
xor
in
dec
pop
mov
lret
mov
jge
adc
aas
add
js
scas
mov
inc
ficoms
addr16
jb
ja
sti
or
add
push
cmp
adc
fsubp
jl
negl
xor
sub
mov
mov
xorl
fnstcw
iret
mov
mov
lcall
jp
cmp
push
hlt
cmp
inc
pop
xor
nop
dec
push
pop
insl
lea
mov
jnp
add
pusha
cmp
push
jmp
pinsrw
les
ss
daa
fcomi
dec
adcb
gs
jno
movsb
scas
mov
mov
fstl
insl
or
stos
mov
rorb
adcb
and
addb
xor
adc
mov
repz
fucomip
pop
sub
mov
in
dec
je
mov
mov
in
push
xlat
rclb
sbb
in
faddp
mov
les
fisubrs
into
pushf
scas
push
dec
arpl
insl
insl
and
inc
shl
ds
sti
idivl
jne
push
lahf
mov
int3
clc
dec
jns
adc
xchg
int3
and
repnz
add
scas
mov
es
test
jae
dec
mov
jge
and
and
stos
popl
das
adc
pop
xchg
ss
jb
dec
outsb
fs
pop
stc
enter
pop
mov
lcall
scas
sbb
add
loope
outsl
push
mov
shrb
sbb
insl
mulb
out
idivb
pop
dec
jecxz
out
adcb
mov
or
or
add
sub
scas
jle
pop
mov
inc
pop
stc
popl
mov
filds
mov
aam
lods
mov
daa
stos
hlt
xor
push
rcl
xor
mov
fs
fwait
cs
or
adc
and
cmp
mov
out
out
rclb
adc
addr16
sbb
and
daa
out
gs
and
inc
loop
jo
add
pop
xor
pushf
pop
push
popl
aaa
into
hlt
das
in
popa
adc
push
pop
pop
insb
add
mov
pusha
femms
fs
in
out
push
mov
inc
aam
lock
ss
mov
or
jle
mov
shll
adc
and
xchg
pop
fldt
dec
outsb
add
push
xchg
pop
lret
rcl
xor
dec
popa
cli
into
mov
data16
outsl
cwtl
rolb
cwtl
mov
sbb
call
xchg
xchg
xor
jl
mov
xchg
test
fiadds
xor
jcxz
and
add
cs
fcmovb
pop
or
xchg
sbb
sbb
jmp
das
push
lods
mov
gs
and
jmp
dec
cs
jge
sub
adcb
in
dec
fmuls
cmp
imul
bound
pop
jns
mov
cmp
add
push
inc
out
jo
ds
out
add
scas
lods
and
std
imul
les
or
in
hlt
ja
xchg
sbb
ds
lahf
or
idivl
jb
add
mov
or
fbstp
mov
mov
pop
push
outsb
cmpsl
mov
sbb
push
sbb
or
xor
je
pop
jp
jnp
cld
pop
ss
adc
mov
xor
mov
bound
sbb
das
popf
jmp
ret
shr
hlt
sbb
and
das
cmp
inc
cs
add
mov
push
scas
mov
jae
outsb
jle
cltd
add
inc
cld
mov
adc
jb
sub
jb
sbb
mov
decb
aam
insl
ficoms
aas
lret
hlt
int
dec
sub
notl
test
cmpsl
and
jo
pop
jp
dec
mov
pop
sub
inc
cwtl
cli
xchg
lret
inc
jne
sbb
pushf
cmpsb
int
fnstcw
repz
adc
xor
xor
into
lods
sbb
push
cmp
int
mov
cwtl
mov
pop
mov
mov
notb
shlb
and
inc
mov
jb
aas
ss
add
shr
and
rcll
mov
mov
mov
jp
or
test
sub
xlat
fsubs
mov
jl
jo
pop
ds
xchg
cmpsl
mov
rcll
jns
push
pop
inc
dec
jecxz
sahf
sbb
int
mov
adc
cmpsl
adc
push
and
push
adcl
jg
arpl
insl
mov
adc
in
sbb
push
iret
sbb
dec
adc
push
cmp
and
popa
add
adc
arpl
das
cmp
inc
out
pop
aaa
ljmp
adc
icebp
push
dec
mov
mov
out
or
jl
cmp
pop
mov
and
inc
pusha
mov
mov
arpl
int3
shrb
and
mov
and
sbb
test
test
cli
push
sbb
rcr
cmp
ret
scas
jae
arpl
pop
in
pop
add
dec
push
xchg
sbb
sub
out
fnstcw
cli
inc
leave
pusha
jp
cmp
xchg
and
movsl
xchg
xlat
xor
xlat
loop
repnz
pop
fidivl
stc
sahf
sub
sub
mov
aaa
pop
bnd
cmp
in
jns
pop
mov
aaa
movsb
cld
ds
jb
aaa
mov
fidivrs
call
or
hlt
notb
insb
cmpsl
sub
sub
insl
out
jl
pop
push
aas
ficoms
inc
pusha
daa
mov
jnp
dec
imul
jle
ret
cli
pushf
ret
jecxz
out
fs
sbb
test
inc
push
pop
mov
mov
loopne
shll
mov
imul
ss
sbb
mov
mov
cli
test
cmp
mov
sbb
negb
and
aam
loopne
sarb
jle
pop
call
fidivs
fs
mov
jbe
pop
jnp
adc
aaa
into
cs
push
in
jmp
sub
pushf
aad
mov
adc
push
lods
mov
mov
in
mov
fdivrs
out
inc
mov
xchg
sub
adcl
daa
outsb
das
inc
test
imul
or
fadds
cmp
mov
lods
push
mov
cmp
and
sbb
mov
popa
loopne
dec
and
fwait
je
lods
cltd
sub
and
sub
stos
test
mov
movsl
icebp
outsb
pop
lods
xchg
push
mov
cmp
repz
or
in
mov
inc
fwait
cli
clc
mov
scas
lret
sbb
js
mov
pop
dec
loopne
addr16
outsb
lcall
pop
xor
push
scas
inc
inc
pop
jg
jne
enter
ds
arpl
cmp
mov
xlat
push
xor
pusha
pop
scas
pop
dec
shll
adc
out
pushf
add
inc
ds
out
pop
loop,pn
cmpsl
imul
cmp
lahf
or
test
addb
bound
xchg
push
out
cmpsb
push
daa
sub
dec
mov
imul
adc
fsts
icebp
aam
push
xor
and
sarb
popf
repz
aaa
dec
lock
and
shll
shlb
aam
iret
mov
leave
and
dec
loop
or
xor
inc
rcll
popf
fimull
jmp
sub
andl
xchg
mov
mov
and
fsub
mov
outsb
jmp
add
les
mov
repz
imul
pop
push
cmp
ja
pushf
xor
adc
mov
imul
subl
lret
cld
xchg
leave
shll
mov
orb
into
popf
lea
clc
stos
repnz
lods
mov
fldl2t
xor
inc
add
sub
bound
into
gs
icebp
sbb
stos
lea
mov
fbstp
push
jmp
cmp
jo
arpl
shlb
add
aas
sub
xorb
cmpl
stc
push
out
cmp
xor
pop
dec
fstpt
mov
dec
jbe
cwtl
outsb
jne
push
shlb
add
and
lds
cmp
outsl
cmp
xorb
pop
cltd
icebp
jb
out
xor
sub
shrb
add
sub
repnz
rcl
push
mov
test
pop
pop
test
lret
lret
lahf
jge
add
dec
arpl
fidivs
shlb
out
lds
push
push
lret
test
and
int3
add
mov
stos
and
mov
pop
pusha
int3
add
cmp
push
out
cmpsb
push
push
jmp
dec
out
pslld
jb
push
adc
sahf
popa
jno
inc
mov
cmp
mov
adc
cmp
jo
mov
out
mov
mov
adc
insb
lods
pop
cmp
fwait
dec
add
cmpsl
mov
mov
adc
fildll
mov
in
std
pop
pop
aaa
fwait
cmp
aaa
sub
jg
cmpl
fsts
das
into
add
sahf
cmp
jbe
out
xchg
jno
dec
rorl
adc
fidivs
mov
jg
dec
in
lods
in
mov
fiaddl
and
xlat
into
sbb
xchg
stc
jns
jb
cld
movsb
test
pop
mov
fistpl
push
sub
mov
xchg
add
sub
loop
enter
and
sbb
xlat
adc
jne
stc
inc
scas
sbb
dec
pushf
insb
scas
xchg
pop
shlb
xchg
rorl
jmp
adc
rol
lock
fldl2e
es
ror
and
in
les
lock
mov
cmp
into
pop
dec
icebp
mov
in
push
lret
inc
pusha
dec
pop
outsl
lea
sbb
fisubl
js
mov
andl
test
dec
xchg
inc
popf
sbbb
push
rcl
push
add
mov
or
test
out
mov
out
or
mov
cld
jns
popf
push
cmp
sub
sbb
loopne
pop
in
lcall
push
in
mov
loopne
xchg
mov
push
lds
fdivs
mov
xchg
les
enter
cmp
push
inc
add
add
fbstp
hlt
jl
repnz
sub
ja
sti
pop
mov
inc
xchg
push
push
add
cmpsl
sarl
adc
movsl
mov
jmp
and
cmp
jl
pop
in
enter
cmc
pop
cmpsb
inc
sbb
fs
cmp
mov
dec
test
jae
mov
ss
xchg
ljmp
test
or
lea
lret
cltd
jo
push
test
test
xor
xor
insl
and
mov
mov
inc
shll
sahf
push
imul
notb
mov
mov
bound
fwait
mov
push
mov
cmp
mov
mov
and
dec
adc
push
dec
pop
mov
and
ljmp
fsubs
jmp
sti
sbb
xor
dec
jge
pop
scas
fwait
cmp
or
mov
sbb
decb
mov
adc
inc
push
lahf
push
lods
mov
repz
test
add
sti
inc
cs
test
mov
notb
ja
mul
xor
test
arpl
push
stos
sbb
jno
out
xchg
mov
paddd
mov
or
jbe
inc
mov
fwait
mov
cld
mov
xchg
in
adc
xchg
add
jl
push
and
popa
sbb
or
fnstsw
xchg
punpckhdq
insb
adc
add
xchg
xor
xchg
xor
sub
mov
lret
inc
mov
jecxz
pop
xchg
cmpsb
xor
push
pusha
mov
ret
fsubrp
jns
das
loopne
fdivr
jns
jecxz
xor
mov
and
aas
es
popf
xorb
sub
movb
jno
mov
or
jecxz
xchg
push
xchg
mov
cmc
sbb
stos
jp
lahf
lret
ss
rcrb
into
mov
test
leave
cmpsb
inc
push
inc
jb
dec
sbb
scas
xchg
scas
push
cs
pushf
fdivs
out
add
std
jmp
rclb
mov
lock
push
jns
jo
or
das
mov
sub
jns
int3
sub
pop
dec
add
cmp
shlb
loopne
mov
lret
fdivrl
iret
sbb
push
jnp
or
into
xchg
imul
in
jg
cmpsb
idiv
push
cld
add
cld
in
lahf
cmc
cmc
jnp
mov
jmp
inc
pop
pop
lret
loop
repnz
mov
mov
test
jg
clc
iret
data16
sbb
std
out
cwtl
cs
mov
mov
fwait
imul
insl
mov
test
cmpsb
test
add
outsl
and
jne
roll
push
jge
or
xor
movsb
push
test
ds
cmc
cmp
aaa
repz
pop
movl
aad
lahf
lea
push
in
scas
es
mov
enter
lret
pusha
sub
out
bound
push
outsl
or
mov
aaa
imul
data16
or
lret
aaa
nop
jnp
stc
or
dec
into
xlat
aad
cs
mov
data16
je
xlat
testb
jg
xchg
xchg
pop
jle
pop
mov
insb
sbb
or
jg
lret
sbb
lea
leave
cmp
sbbb
jo
je
push
mov
sbb
iret
ss
jne
inc
cmpsl
adc
ja
cmp
bound
add
repnz
push
in
popa
xchg
xchg
adc
and
leave
addr16
cli
inc
stos
mov
notb
xor
jmp
aas
adc
pop
push
fstpl
push
ss
fcomps
fisubl
sub
rorl
mov
cld
inc
fnsave
test
fs
jb
xchg
add
adc
leave
sub
xor
xor
jmp
int3
and
in
cli
xor
or
stos
test
pusha
pop
shlb
cwtl
pop
mov
or
insl
pop
xchg
or
fwait
jle
adc
push
mov
xchg
push
push
sbb
inc
imul
loop,pn
insl
cs
pop
add
push
or
mov
mov
inc
call
xchg
insl
outsl
sub
adc
fsubs
mov
ret
in
dec
loopne
or
push
and
cmpsb
jnp
adc
aas
dec
enter
aad
sbb
and
sti
xchg
popf
dec
gs
pop
and
out
mov
add
mov
xchg
lock
loopne
je
popa
cmpsb
push
rcll
mov
jo
xchg
xor
mov
push
xchg
or
xchg
push
or
fnstsw
cmp
int
cmp
push
outsl
push
jo
mov
pop
gs
fisubrs
mov
pop
ss
sub
fs
jl
jecxz
xchg
mov
mov
out
pop
ret
jl
inc
pop
xchg
pop
inc
rcrb
push
sbb
int3
jg
and
imul
mov
dec
das
repnz
push
frstor
js
xor
divb
inc
push
sahf
dec
pop
mov
insl
movsl
and
imul
adc
jmp
loopne
aaa
cli
outsb
adc
movsb
inc
jnp
shll
add
jecxz
xor
jae
fsubs
jecxz
push
int
cld
xchg
mov
mov
inc
and
xor
scas
jge
adc
test
dec
call
es
inc
movsb
inc
push
pop
push
jmp
mov
xor
sbb
adc
inc
int3
adc
ret
in
push
push
testb
mov
movhps
push
jp
or
jl
lods
adcl
js
aaa
aaa
cwtl
icebp
mov
pushf
pushf
ss
test
shr
into
adc
mov
or
shlb
add
mov
push
sub
xchg
jg
aaa
test
in
fstps
cmp
jbe
mov
lods
in
pop
cmpsb
insb
jae
je
push
outsb
jle
push
xchg
push
fidivrs
jnp
das
xor
mov
xchg
mov
sarb
dec
fbld
or
in
mov
out
xor
xchg
std
sub
dec
hlt
cli
xchg
jl
ret
sbb
cmc
out
lods
shrl
sub
adc
pop
inc
mov
stos
imul
cmp
xor
xchg
mov
push
mov
push
mov
push
test
sub
mov
lock
cmp
es
or
bound
out
pop
mov
lds
call
les
fimuls
or
pop
mov
push
js
aaa
pop
cwtl
xor
mov
xor
repz
pop
in
mov
aad
mov
clc
dec
leave
orb
pop
sub
cmp
mov
pop
ret
loop
negb
xor
inc
lea
mov
aam
out
pop
out
sub
lcall
and
hlt
mov
fs
jbe
icebp
movsl
mov
pop
sbb
call
ds
popf
cmc
mov
outsb
xchg
jno
push
rcrb
ret
push
pop
add
enter
jecxz
adc
sub
jb
test
imul
push
ret
dec
loope
js
or
sbb
test
xchg
subb
aaa
mov
mov
add
and
cmp
aas
xchg
push
andb
xor
lods
inc
in
out
aas
push
push
call
insl
aam
or
test
clc
xor
sub
lahf
jge
sbb
cmp
and
loopne
mov
daa
ret
push
jmp
out
dec
fcoml
dec
fsubl
adc
sbbb
fildll
and
jecxz
popf
add
xor
dec
mov
ror
aam
div
outsb
pop
test
pause
sbb
repz
jg
mov
inc
add
lret
cli
xor
inc
cld
add
into
lret
bound
pop
xchg
or
ret
pop
stos
pop
fisttps
push
mov
pop
es
addr16
mov
lds
fwait
pop
pop
push
ss
xor
jo
inc
cs
jl
imul
mov
aaa
in
sbb
adc
loope
lcall
jmp
cld
jmp
mov
add
mov
and
inc
outsb
dec
cmpsl
inc
gs
divl
fsubrs
sub
inc
ficompl
jnp
subl
dec
push
ljmp
jb
mov
orb
sub
add
inc
jl
jl
sarl
adc
mov
fcomps
ds
lods
adc
jl
or
iret
fcom
and
or
test
iret
add
pop
andl
in
rorb
imul
gs
jge
pop
sbb
lds
xor
pop
cmp
or
ret
repnz
and
cmp
pop
add
in
mov
shrb
xchg
fucomi
repnz
out
mov
lret
mov
mov
loop
mov
xchg
cmpsl
lret
cld
enter
pop
ret
and
jae
pop
dec
out
sub
sbb
in
cmpsl
into
cli
rclb
loop
mov
pop
xor
push
cmpsl
nop
shl
dec
out
std
dec
push
jae
mov
sbb
int3
mov
add
pop
stc
xor
inc
fs
popa
jno
shlb
mov
xchg
and
pop
mov
inc
sbb
cmp
pop
pop
out
push
cmpsl
jbe
mov
jnp
xchg
fisubs
push
stc
xor
cmp
xor
and
add
dec
xor
mov
rorl
xor
out
mov
outsb
js
aas
popf
cltd
cwtl
and
test
es
and
push
mov
cmpsl
push
mov
pushf
sbb
outsl
stos
mov
xchg
or
jnp
insl
sbb
xchg
inc
ret
pop
jne
pop
jnp
pop
pop
out
lea
ret
xchg
fmulp
xor
repz
sub
aad
pop
sub
lods
pop
hlt
fst
cmp
lea
imul
mov
lods
movsl
adc
add
fwait
imul
mov
js
aaa
iret
loope
scas
jns
inc
add
mov
adc
in
push
stos
or
or
popl
sub
icebp
cmp
out
fbld
xlat
popl
jne
shl
push
out
xor
mov
push
pop
je
fisttpll
xchg
sbb
cmp
mov
ret
jo
add
dec
lret
sub
jo
cmp
xor
iret
jae
cltd
mul
cmpsb
adc
mov
repz
and
and
fdiv
xor
push
ss
leave
and
xchg
call
leave
bound
out
xor
mov
scas
aaa
nop
das
ss
jle
sbb
into
push
cmp
mov
mov
das
insl
add
mov
fnstsw
ret
xor
fucompp
pop
xchg
js,pn
mov
dec
cs
leave
incb
outsl
arpl
pop
adc
in
out
or
push
test
mulb
stc
jmp
jg
adc
sarb
pop
cmp
add
lods
lcall
sbb
test
jae
lock
mulb
ss
out
add
sub
insb
addr16
adc
rclb
js
test
push
pop
arpl
sub
jnp
xchg
inc
xor
or
movsl
cmp
movsl
lods
jmp
fwait
sub
imul
mov
movsb
leave
testl
xchg
xorl
adc
xlat
xchg
jp
cmpsl
stc
nop
fnstcw
cmp
inc
popf
pop
add
mov
sbbb
or
xchg
jns
scas
mov
xchg
cmpsb
and
push
mov
out
lcall
loope
xchg
cmp
out
fisubs
xchg
or
jbe
adc
lcall
fstpt
int
fisubrl
popa
insl
push
cmp
aaa
jne
and
adcl
shr
icebp
adc
add
arpl
sbb
mov
fidivl
imul
enter
pop
dec
jecxz
xor
pop
cmpsl
push
pop
inc
fadd
inc
neg
in
sub
shll
cmc
daa
inc
inc
movl
fisttpll
xchg
out
imul
or
cmp
add
mov
push
xchg
fstl
lods
into
inc
fstpt
mov
aam
imul
jle
mov
or
lods
push
in
dec
dec
push
sbb
add
shlb
or
pushf
loop
into
mov
xor
adc
inc
add
xchg
jne
cmp
sub
pop
test
inc
test
adc
dec
adc
in
adc
push
in
jl
adc
popf
je
add
mov
ljmp
xchg
jle
adc
add
pop
add
js
cmpsb
pop
jne
push
mull
sub
mov
test
inc
pop
mov
push
fwait
pushf
notb
scas
aam
cld
xchg
shl
push
incl
mov
lcall
in
dec
pop
jp
mov
xchg
lret
pusha
gs
fsubrl
dec
scas
jp
outsb
xor
outsl
ja
sahf
loope
inc
leave
jns
std
and
inc
test
in
adc
rorl
repz
pop
dec
sub
fbstp
sub
push
sbb
fldenv
test
mov
cltd
adc
imul
pop
loop
jge
cmpsb
sub
iret
push
aaa
addr16
jno
aam
shr
fiaddl
mov
jns
xor
jbe
pop
or
jp
test
mov
aaa
pop
repnz
loope
cmp
jns
adc
push
push
dec
std
inc
popf
jecxz
leave
pop
leave
inc
mov
mov
mov
lods
loope
cmp
cltd
std
push
inc
xor
jbe
mov
in
push
out
enter
cmpsl
test
jmp
jns
push
xchg
int3
push
jp
or
cmpsl
xchg
mov
jecxz
stc
push
negb
in
imul
push
adc
ljmp
jno
sahf
lahf
xlat
into
jge
ss
pop
adc
sbb
jecxz
fiaddl
add
mov
pop
fimull
lea
mov
xchg
icebp
mov
les
das
lahf
lret
or
xchg
test
sbb
push
cmp
mov
leave
mov
ds
mov
and
dec
xchg
jo
clc
mov
pop
jle
xchg
jno
nop
cltd
in
jnp
or
xchg
sub
pop
jp
mov
adc
mov
ret
or
ss
add
sbb
or
decl
push
jae
mov
xchg
cmpsl
mov
pusha
jle
sar
nop
decb
cmpsb
aad
repnz
fwait
rcrb
and
inc
fldt
add
xchg
lahf
hlt
mov
adc
orl
mov
add
inc
mov
in
stos
pop
fwait
sbb
lret
adc
cmp
popf
fadds
inc
sub
ror
repnz
fwait
push
in
lret
fs
mov
cmp
mov
mov
push
imul
cltd
jmp
loop
mov
mov
xchg
xchg
push
jmp
mov
xor
cmp
loope
fmuls
or
cs
into
outsl
cmp
movsl
sub
shl
xchg
push
dec
or
cmpsl
aas
and
inc
cwtl
xchg
fpatan
mov
and
fwait
lock
pop
push
sub
push
mov
sub
xchg
pop
dec
xorl
sub
stc
xchg
sub
xor
dec
sbb
sub
push
or
jae
into
push
xor
rol
pop
popf
sub
push
adcl
and
lret
pop
jmp
stos
cmp
cmp
aas
jbe
sbb
fstpl
in
movsb
jns
ja
push
push
add
test
and
insb
adc
repz
int
or
adc
mov
movsl
idivl
mov
or
pop
and
jne
inc
insb
testl
mov
je
ds
fidivrl
lea
sbb
pop
nop
add
and
pop
outsb
sub
lea
fs
adc
sub
rcrl
mov
loopne
decb
sub
push
sbb
or
pusha
jmp
cwtl
outsl
mov
adc
mov
pop
nop
sub
pop
icebp
mov
scas
inc
mov
stos
ss
or
in
pop
jnp
out
aam
and
int3
cs
fs
aam
add
es
jae
sbb
std
pop
pop
push
jmp
lcall
push
cld
push
mov
mov
mov
mov
adc
rcrb
xchg
repz
dec
loop
jo
test
mov
lret
adc
rclb
mov
jl
push
pop
add
adc
sbb
addr16
in
and
sub
sub
movsl
jb
mov
xor
inc
pop
push
and
sub
mov
fucomip
sbb
pushf
push
outsb
xchg
mov
sbb
test
decl
imul
aas
mov
jne
call
and
sub
push
bound
inc
mov
jae
mov
sbb
ljmp
cmpsl
adc
and
dec
push
addr16
add
mov
faddp
mov
in
into
sub
cld
or
out
mov
sahf
aam
push
add
cmp
fs
movsl
ljmp
neg
scas
fsubrl
xor
cs
in
shl
into
pop
loop
xor
push
add
aaa
clc
xor
sbb
pop
testb
jo
mov
push
ret
xchg
lcall
jp
sbb
jbe
or
aam
outsl
into
cld
jecxz
movsb
imul
xlat
cwtl
test
mov
call
popa
inc
adc
aad
sub
aaa
push
call
xchg
ss
xor
or
daa
mov
pop
fwait
sbb
push
idivb
xor
add
mov
mov
ss
mov
inc
sbb
into
and
push
jns
ljmp
ret
ficomps
mov
mov
int
and
dec
mov
cmp
sbb
cmp
push
lcall
and
inc
sbb
aam
mov
adc
icebp
dec
pop
sti
seto
dec
fcmovnb
movsb
jle
fisubs
pushf
xor
jge
dec
inc
repz
dec
xor
mov
inc
mov
or
data16
fs
pop
mov
dec
and
dec
jge
arpl
cmp
pop
push
push
loopne
add
leave
dec
cmpsb
lock
add
fistl
nop
fs
sub
jmp
xor
jns
mov
push
jbe
inc
stos
and
in
mov
icebp
mov
mov
inc
and
loopne
cmc
aam
cmp
push
pop
jge
call
rcll
cmp
subl
ret
xor
mov
ror
fwait
xor
cmp
stos
shrl
adc
fwait
xchg
in
addl
pop
sahf
push
ret
mov
aad
xorb
out
xor
movsb
sarb
outsb
add
mov
aas
xchg
dec
lret
sub
and
jae
rcrl
je
ret
fldl
sbb
push
push
mov
add
out
cmp
push
add
iret
mov
cs
cmp
pop
xor
push
scas
imul
or
stc
adc
adc
pop
repz
lods
mov
jno
adc
jp
mov
dec
sbb
outsl
call
inc
sub
movsb
jb
jp
scas
ds
pop
out
out
pusha
sub
push
push
cmpsl
mov
mov
movsl
cmp
stc
or
test
cld
aas
push
int3
sbb
push
hlt
sub
dec
hlt
xchg
push
ss
pop
fadd
andl
inc
mov
xor
icebp
or
push
jl
test
lods
in
test
add
orb
adc
sbb
cmc
addb
add
mov
out
sahf
or
daa
mov
in
xchg
xor
push
xor
test
mov
in
dec
pop
xlat
add
insl
repnz
jne
xchg
cmp
in
xchg
aad
dec
shll
dec
orl
mov
negb
outsb
jp
stos
jp
jmp
xor
jle
dec
and
int
cmpsb
or
xchg
leave
test
rorl
push
add
xchg
or
pop
fwait
xor
add
bnd
or
mov
sub
hlt
nop
clc
or
shll
imul
dec
sahf
fucomip
mov
lahf
mov
or
mov
outsl
in
jp
push
adc
xor
mov
ljmp
cmpsb
out
cli
xor
enter
and
psrlq
test
iret
testl
arpl
fsubr
lds
jne
sbb
lahf
mov
sbb
cmpsb
dec
out
xlat
adc
lods
into
clc
loop
pop
cmp
nop
sub
fnstenv
out
cmp
incb
pop
pop
mov
push
bound
shlb
popa
fsubs
iret
dec
cmpsb
sbb
jge
cld
dec
sub
dec
imul
mov
pop
mov
mov
jge
pop
dec
xchg
aad
scas
scas
mov
loopne
add
mov
data16
scas
inc
aas
mov
inc
mov
pop
mov
test
mov
fiadds
popf
pop
jl
xor
arpl
or
mov
jnp
repz
or
in
rclb
cmpsl
dec
jne
fidivs
inc
adc
and
cli
cld
mov
gs
leave
clc
sahf
sbb
ds
sbb
lock
xchg
add
xchg
pop
insl
or
lock
mov
inc
out
jmp
cwtl
cmpsb
cmp
into
icebp
cmp
out
daa
push
mov
xchg
in
sbb
cmp
cmp
lcall
xchg
in
test
pop
int
cmp
or
in
pop
mov
into
and
cltd
cmp
push
js
jnp
je
sbb
and
add
mov
mov
es
std
jnp
add
or
cli
xchg
pop
jp
movsl
mov
jle
out
pop
push
popf
dec
mov
popf
xchg
out
sub
mov
mov
gs
fdivl
js
ja
sub
mov
and
into
cld
lcall
xor
out
out
test
pop
adc
mov
into
lock
push
add
xchg
inc
pop
dec
adc
cwtl
fsubs
xor
in
dec
pop
mov
mov
cmp
sbb
ficomps
mov
orl
xchg
je
cmp
gs
xchg
jmp
pop
in
andb
popa
cmp
pushf
sbb
call
mov
pop
jae
adc
inc
push
adc
jne
push
or
sahf
cld
cmp
rolb
out
cmpsl
lahf
pusha
fsts
outsb
add
ljmp
cmp
xor
fnsave
mov
jle
fs
int3
pop
incb
lods
hlt
rclb
iret
popa
clc
add
and
mov
adc
fwait
pop
xchg
lcall
push
sbb
into
adc
sub
pop
jge
mov
daa
lahf
nop
daa
mov
push
scas
cli
sti
jno
pusha
out
pop
mov
stc
fldcw
xchg
stc
inc
imul
notb
jge
sbb
sbb
adc
stos
inc
and
adc
xor
pop
imul
jns
jbe
rcll
push
mov
sbb
sarl
ficomps
push
loopne
sub
sar
push
les
inc
stos
push
inc
sub
and
ficomps
dec
lret
scas
cmpsb
stc
jne
mov
or
addl
pop
imul
adc
inc
cmpsl
hlt
cld
loop
cs
cmp
dec
js
cmpsb
cmp
and
cli
mov
mov
or
sti
mov
sub
popf
and
dec
dec
lods
fisttpl
jecxz
les
lea
pop
pop
cs
ljmp
loope
ja
mov
out
mov
jmp
or
inc
fs
iret
xor
ficoms
xor
ds
cmc
mov
and
mov
and
pop
lods
mov
dec
sub
cwtl
jecxz
jno
mov
test
push
test
push
ds
rcrl
xchg
pop
xor
pop
retw
push
sahf
xor
cmp
mov
push
cmc
and
inc
push
fstpl
and
add
dec
loopne
stos
adc
hlt
addr16
xor
sbb
or
mov
dec
clc
notb
xlat
inc
mov
push
mov
nop
call
dec
xor
inc
js
push
bound
mov
mov
scas
sub
push
mov
lock
pop
pushf
pusha
repz
xchg
in
lods
fwait
das
jno
stos
sti
mov
andl
jl
test
leave
pop
rcrb
aas
ret
dec
cmp
pop
jne
push
dec
mov
insl
mov
divb
mov
orb
push
sub
dec
xchg
sarb
or
out
repnz
in
stc
cs
sbb
and
aas
push
xor
popf
push
mov
mov
movsb
loop
adc
dec
flds
sub
stos
push
push
fisubs
inc
pop
jg
cmp
divb
xchg
daa
clc
or
insl
xchg
das
arpl
mov
mov
ret
sbb
int3
andb
daa
addr16
outsb
out
cli
and
call
adc
sarb
mov
in
jmp
mov
lret
xchg
jg
sbb
mov
std
add
je
mov
adc
int
mov
loopne
jne
loop
fnstcw
adc
mov
std
jl
pop
mov
movsb
mov
jne
das
sub
push
into
cs
jne
pop
pop
xchg
sbb
loop
gs
pop
addl
lahf
lods
push
repnz
xchg
stos
ja
ss
jmp
sbb
pop
jne
xchg
daa
in
rorb
rcll
roll
dec
cld
aad
pop
jecxz
add
add
pop
jb
mov
xchg
fwait
repz
and
push
pop
aam
aas
jae
xor
mov
or
adc
sbb
addr16
lock
repnz
cmp
mov
dec
pop
xor
into
into
jae
mov
push
out
xchg
sar
push
jmp
mov
add
push
testl
xor
adc
and
dec
mov
pop
dec
xchg
mov
mov
sub
mov
inc
aaa
movsb
lret
fdivrl
inc
mov
out
and
pop
into
xchg
sub
jnp
sbb
xor
imul
iret
aad
testb
jge
or
adc
arpl
popf
clc
pop
xchg
sub
imul
stc
sbb
int
cmpsl
sbb
fidivs
outsl
mov
cwtl
ja
pop
loop
and
fsts
out
test
mov
mov
out
ljmp
sub
jp
xchg
inc
faddp
rcl
push
mov
jne
rcrb
out
movsb
push
loopne
cmp
js
sub
xchg
sub
in
mov
lret
out
fldcw
inc
inc
pop
push
test
sub
lds
ljmp
mov
leave
pusha
jmp
mov
pushf
inc
ljmp
pop
adcl
and
sbb
xchg
pusha
jg
popf
jg
mov
sbb
imul
std
arpl
jne
mov
lea
lods
std
mov
or
test
jecxz
sub
int3
arpl
cli
inc
int3
jno
mov
xlat
add
xchg
movsb
fistpll
or
or
out
mov
xor
data16
sti
xchg
enter
add
jp
push
mov
jbe
push
push
ret
test
daa
inc
xor
popf
xor
imul
jl
mov
adc
push
adc
add
mov
fnstsw
or
lahf
cmpsl
pop
mov
call
adc
jge
ds
pop
pop
push
adc
mov
aam
xchg
in
insb
sti
out
nop
clc
xor
cmpsb
push
ret
sub
enter
movsl
fwait
loope
inc
call
data16
lret
push
ljmp
ljmp
cld
or
jno
cmp
push
and
jo
mov
dec
push
cld
adc
mov
in
lret
inc
or
aam
mov
loopne
fistpl
mov
ljmp
faddl
push
aas
pop
jl
test
inc
mov
and
stc
addr16
dec
scas
xor
movsl
push
push
jno
cmp
jecxz
mov
jg
add
adc
pop
xchg
xor
mov
rol
jae
push
fcmovnbe
call
mov
mov
and
loopne
jae
adc
ss
int
repnz
jge
mov
pop
out
sbb
ss
mov
or
leave
js
inc
fistps
push
xchg
imul
cmp
aad
jmp
sti
push
sub
cltd
pmaxub
aas
jb
in
pop
jl
das
fwait
cmpsl
pusha
iret
icebp
or
jle
movl
popf
and
mov
addl
inc
shrb
dec
lds
sub
testl
xchg
pop
xchg
sbb
lret
mov
jmp
xor
dec
sbb
in
in
stc
nop
lcall
mul
cli
je
xor
mov
scas
mov
dec
movsl
jecxz
cmp
bound
mov
sub
mov
mov
xchg
fadd
xchg
ret
test
xor
repnz
aam
mov
jle
jne
push
push
ficompl
mov
popa
clc
pop
jo
cmp
lods
mov
mov
adc
ret
pop
jge
sbb
jmp
mov
mov
jg
cmp
dec
test
mov
bound
imul
lea
icebp
mov
pop
xchg
mov
xchg
aas
insb
test
mov
iret
lahf
cs
dec
sub
repz
je
cltd
pusha
or
jmp
inc
mov
adc
daa
pop
scas
mov
mov
or
int
inc
inc
fucomp
in
xchg
fsubr
orb
mov
add
pop
lret
or
mov
inc
andb
addl
sub
jle
imul
shll
lods
rorb
repnz
fdiv
cmp
push
loop
and
xchg
fsubrl
pop
bndstx
cmpsl
adc
cmpsl
jne
adc
scas
inc
sbb
aas
dec
mov
divl
sub
daa
enter
push
mov
mov
and
lods
mov
xchg
int3
ja
push
add
push
inc
dec
pop
jp
pop
repz
pusha
and
in
jp
dec
lret
std
sbb
or
pop
and
jno
inc
xlat
or
imul
xchg
outsb
loop
addr16
out
insb
aaa
leave
dec
xor
stc
pushf
mov
mov
inc
cwtl
jne
adc
test
test
or
dec
cmc
mov
pop
dec
dec
pop
mov
setge
pop
xchg
xor
push
shrb
inc
fldl
push
fcoml
test
jno
or
mov
iret
xchg
sub
outsb
xorb
pop
mov
xchg
push
mov
push
scas
cld
cwtl
mov
movsl
sbb
rcrb
leave
push
out
cs
int
dec
dec
andb
add
inc
das
aaa
test
jp
std
or
mov
gs
insb
sub
dec
repz
jge
jne
rolb
scas
mov
dec
stos
insb
repnz
sbb
cwtl
ss
out
mov
icebp
xlat
ds
cmp
call
sbbb
lahf
std
sbbb
mov
jp
push
int3
pop
jne
push
insb
xchg
out
and
adc
cld
or
mov
pop
hlt
les
push
incl
xchg
mov
lods
jp
mov
in
pop
or
dec
push
xchg
adc
insb
xchg
and
imul
mov
mov
rcrl
cmpsl
clc
and
mov
shl
inc
adc
adc
xchg
rcrl
or
mov
out
add
cmp
es
dec
push
jnp
sub
jecxz
jnp
dec
icebp
dec
pop
xor
ret
dec
icebp
push
inc
rol
cmc
aas
js
mov
pop
or
cmpsb
adc
aas
cmpsl
popf
push
inc
loop
cmpsl
daa
sub
ret
shlb
out
lcall
cltd
and
testb
cld
adc
es
jo
dec
pop
mov
mov
sbb
jnp
popf
lods
movsl
push
insl
jecxz
and
cmpsl
xor
int
inc
dec
mov
repz
push
and
dec
sti
xchg
cmp
xlat
jnp
or
sti
test
adc
dec
jbe
out
cmpsl
imul
dec
mov
lock
lahf
adc
sub
lods
js
adc
and
pop
and
dec
dec
loop
jns
insl
icebp
adc
sub
sub
aam
addr16
int
xor
jae
xor
mov
movsb
jmp
insl
add
xor
xchg
sub
loope
testl
pop
jmp
mov
shrl
aas
adc
sub
and
adc
inc
pop
int
daa
mov
ret
sarb
iret
icebp
lcall
popf
dec
mov
scas
dec
sbb
iret
inc
ds
js
mov
mov
xor
lcall
adc
fisttps
adc
fisubs
insb
cmp
cmp
aam
pop
mov
int
push
lock
xor
xor
jns
jp
mov
xchg
lea
pop
rcrl
insb
add
insb
mov
dec
mov
jae
imul
shr
mov
sbb
mov
mov
enter
lds
es
daa
out
repz
lcall
js
movsb
out
fildll
cmp
sbb
pop
shlb
mov
int
int
fistl
cwtl
mov
and
mov
mov
push
fimuls
push
cmp
in
xchg
mov
add
mov
adc
insb
jg
imul
sbb
fdivs
test
clc
pop
std
pop
fldenv
dec
test
arpl
dec
push
div
lea
sub
dec
push
lahf
mov
or
fnstenv
inc
js
or
push
and
sub
sti
xchg
cmp
xor
loopne
loope
add
push
mov
popa
cld
and
into
cmp
xor
mov
imul
jns
lock
lcall
pop
push
dec
lea
pop
fs
cmp
and
loope
rcll
in
test
popa
loop
jae
mov
or
ffree
pop
iret
xchg
sub
fisttps
jge
or
mov
push
outsl
xchg
xchg
iret
jae
or
mov
push
add
sub
loope
or
xor
imul
sub
shll
test
stos
mov
outsb
loopne
mov
mov
adc
aam
arpl
popa
cmc
sbb
mov
movsb
ljmp
jg
mov
das
jl
mov
les
mov
or
dec
cmp
pop
xor
pop
cmpsb
xor
mov
out
xor
test
adc
xor
mov
hlt
xchg
dec
movl
or
nop
es
pop
mov
pop
cmp
test
mov
or
push
push
std
loop
push
add
jg
scas
inc
in
rcl
int
in
out
or
pusha
jg
push
in
into
cmc
xchg
movmskps
inc
movsb
rorb
ss
push
dec
jmp
push
jmp
mov
jl
mov
popf
stos
jo
lcall
lcall
pushf
jb
arpl
mov
sti
jnp
and
xchg
xchg
jmp
arpl
cs
iret
sub
or
sbb
andl
hlt
test
jne
lret
pop
loopne
dec
icebp
pop
cltd
je
inc
cmpb
in
push
mov
scas
cmpsb
inc
dec
rorb
pop
push
and
and
pop
repz
incb
out
mov
aad
in
cld
daa
mov
rorl
shll
loop
imul
xchg
insb
stos
push
out
push
jl
cmp
jmp
adc
aas
pop
push
jmp
or
cmpsb
xchg
ss
add
aam
in
in
push
aas
lahf
divl
dec
mov
push
jne
xor
cld
test
pop
jg
stc
push
pop
sub
fsubrl
movsb
mov
aad
xchg
testb
or
das
xor
pop
or
into
scas
xchg
jp
scas
std
adcb
sub
sub
in
popf
xchg
jno
fidivrs
nop
ljmp
fldcw
gs
gs
mov
jg
cmp
jp
or
insb
pusha
pop
shll
mov
ret
dec
psubsb
xchg
add
jp
or
xor
ljmp
inc
push
daa
mov
test
xlat
dec
push
push
xor
repnz
dec
outsl
or
fidivs
imul
mull
xor
push
stc
inc
push
ljmp
jmp
fdivl
sbb
dec
or
std
movsb
scas
mov
push
cmp
and
enter
fisubrs
xor
pop
pop
sub
out
cmp
adc
mov
push
outsb
jl
out
bound
mov
mov
fwait
mov
dec
adc
sub
pop
jl
inc
imul
jecxz
xchg
pop
into
jno
mov
push
sbb
pusha
cmpsb
ret
sbb
push
sbbb
jb
imul
pop
jle
test
lods
adcb
loope
add
jb
cmc
and
shll
mov
mov
ret
lret
push
icebp
data16
mov
sub
pop
aad
cmp
mov
adc
or
sub
jbe
ret
mov
mov
sbbb
lret
add
cmp
loopne
lret
and
dec
and
imulb
mov
cmp
lcall
adc
push
imul
push
xchg
jp
pop
lods
mov
mov
add
lock
cmp
test
pop
xor
xor
stos
dec
addr16
fmull
and
shlb
bound
sbb
iret
pop
popa
out
or
testl
cmovp
popf
push
sbb
inc
and
shl
xchg
or
xchg
repnz
stc
nop
ret
ds
sbb
sbb
sahf
jl
mov
fcompl
and
cmc
adc
ljmp
cmp
adc
push
sahf
loop
jo
ljmp
cmc
mov
sbb
vfmaddss
jge
les
mov
subl
pop
scas
leave
gs
inc
shrl
add
stos
cmp
cltd
test
ret
jnp
add
and
subl
inc
out
test
mov
addr16
or
les
stos
lret
fidivs
bound
cmpsl
dec
dec
mov
dec
andl
or
or
or
jno
sub
out
arpl
adc
dec
xor
cld
push
or
adc
jo
mov
mov
dec
rclb
sub
stos
adc
popa
jp
xchg
push
pushf
call
jb
sti
xor
aaa
cmc
inc
fcoml
sbb
mov
jle
les
mov
mov
xchg
and
popf
pop
call
pop
cmc
stos
mov
repz
mov
mov
lcall
sbb
in
fdivrl
push
mov
pop
dec
xorl
imul
push
mov
add
fadd
lock
adc
fdivl
or
lods
cmpsl
xchg
push
jl
cmp
repnz
pop
aas
inc
lock
loopne
mov
repnz
imul
lret
xlat
mov
psraw
mov
xlat
loope
hlt
push
ljmp
pop
push
sbb
fcompl
cmp
xor
shl
jge
fdivrl
dec
lds
push
mov
mov
sti
jnp
test
out
adc
andl
xchg
mov
cs
dec
cmp
ret
sahf
pop
mov
mov
cli
and
push
cmp
push
sbb
std
pushf
stos
aam
push
iret
push
cmp
je,pt
xchg
cmp
mov
stc
mov
xor
lea
pusha
jno
xchg
rol
iret
push
insb
push
xor
mov
xchg
and
shl
sarb
aad
fucomp
adc
cmpsb
cwtl
jns
rorb
inc
jb
mov
sbb
ds
jmp
nop
adc
mov
arpl
sub
dec
sti
subb
jbe
push
dec
pop
sahf
xor
mov
adc
sti
mov
push
inc
repz
lahf
loop
dec
mov
cmpsb
es
incb
test
aaa
loopne
mov
mov
lods
sub
and
push
sub
mov
lahf
mov
inc
cmc
shlb
jne
int3
je
pop
lahf
and
cld
test
cmpsl
jle
inc
and
aas
lea
mov
sub
dec
scas
add
jge
test
or
dec
fstps
push
das
test
and
aas
xor
and
dec
mov
push
outsl
pop
sub
les
pusha
inc
mov
insl
sub
and
mov
jne
adc
cld
mov
pop
ret
sbb
mov
xor
lds
movb
sarb
push
jne
lds
sti
adc
in
xor
pop
sahf
sbb
mov
stc
out
subl
arpl
into
les
sub
hlt
jmp
pop
pusha
dec
adc
int3
cmpsb
xor
push
xchg
outsl
push
daa
push
mov
jp
fs
std
fldcw
mov
ss
xlat
pop
leave
in
lds
sbb
popa
jle
fucomip
cmp
jne
ret
xchg
sub
mov
and
loope
inc
mov
in
cmpsl
cmp
or
fsubl
or
call
and
xchg
jge
fidivl
in
mov
jo
pop
stos
mov
mov
fsubl
pop
mov
lret
jno
std
push
cmp
mov
outsl
push
and
xchg
ret
popf
lea
lods
add
xlat
popf
add
inc
cmc
pusha
mull
jb
leave
dec
add
and
hlt
push
xchg
pop
fadds
sahf
sub
addr16
outsl
adc
notb
sbb
movsb
test
push
mov
cli
cmp
insl
push
mov
mov
pop
xchg
nop
xchg
mov
ja
cli
xchg
inc
test
std
adc
lahf
or
repz
add
int
rcrb
addr16
cmp
loop
in
push
push
xor
inc
shlb
and
jl
and
push
cld
pop
cltd
xor
fs
mov
or
in
sub
aad
inc
rolb
or
mov
js
or
push
lods
sbbl
movsb
sub
testb
test
xchg
xor
sub
inc
popa
sub
imul
dec
push
pop
add
lock
jmp
xor
xor
sub
mov
gs
das
mov
negl
or
leave
cld
stc
pop
jo
and
mov
dec
cmp
and
scas
push
adc
xchg
dec
jbe
int3
cmpsl
outsb
test
xchg
mov
shlb
out
adc
mov
cmpsb
sti
addr16
jae
and
in
fwait
xor
jge
out
cld
add
in
xor
popa
mov
adc
dec
push
arpl
lret
mov
test
push
jg
cmp
testl
sbb
xor
pop
push
sub
repnz
cmp
int3
xchg
jns
pusha
arpl
cmp
orb
in
mov
sarl
fmul
out
or
loope
xchg
xor
insb
sub
inc
pop
repz
imul
jnp
dec
out
dec
popf
addb
mov
in
cli
or
pushf
and
shrl
sbb
shl
and
pop
adc
mov
pop
call
dec
or
mov
insb
add
lods
inc
dec
adc
mov
inc
sbb
outsl
sbb
jb
sbb
add
xchg
xor
imul
inc
lds
adc
insl
lret
add
in
movsb
rcl
xchg
xchg
push
mov
stos
cltd
je
push
and
scas
call
sbb
hlt
mov
fs
jl
mov
adc
or
pop
xchg
sub
popa
xor
mov
inc
pop
mov
subl
mov
push
insb
jle
lds
mov
and
xor
lods
bound
lods
push
test
je
xor
jo
sbb
jg
add
mov
testb
mov
cmpsb
sbb
mov
mov
mov
std
jns
cmp
jecxz
in
std
adc
push
dec
push
sbbb
push
and
fbld
push
pusha
movsl
pop
jl
sbb
jecxz
jno
out
xchg
sahf
stos
adcb
test
xchg
sbbb
inc
shlb
adc
in
xlat
imul
mov
inc
sub
out
in
push
test
nop
sub
inc
addr16
jmp
aas
hlt
add
ret
sub
inc
and
out
cli
nop
das
push
add
loope
loope
ljmp
iret
xor
cmp
pusha
mov
lret
add
pop
dec
or
and
int3
or
stos
aas
dec
lsl
ljmp
in
out
notl
pusha
int
add
stos
or
and
push
sub
int3
lds
rcrb
mov
lods
ret
leave
loopne
dec
cs
shll
sub
lret
addr16
sbb
mov
in
into
insb
or
out
imul
adc
push
les
test
outsl
aas
movl
add
mov
call
mov
ret
dec
mov
mov
test
cmp
mov
ret
cmpsb
mov
push
mov
ret
cmpsb
rclb
out
mov
ret
outsb
iret
cmpsb
rclb
pop
dec
mov
je
inc
mov
rcll
test
lds
add
lock
rcrl
out
push
scas
repz
sub
imul
fnstsw
xchg
les
push
out
scas
sbbb
test
aam
das
sar
mov
addr16
stc
leave
out
adc
rcll
mov
scas
popf
mov
cmp
pusha
push
adc
aam
adc
cmp
inc
xchg
pop
imul
and
mov
jle
pop
or
add
leave
cld
xchg
mov
je
mov
fcompl
pop
loop
pop
pusha
mov
inc
scas
int
fcmovne
sbb
jmp
imul
push
adc
inc
ja
mov
sub
push
mov
dec
mov
xor
addr16
xorb
add
dec
pop
cmp
or
fadd
loopne
adc
lret
lahf
ja
roll
sub
pop
push
jno
add
xchg
and
dec
loope
add
imul
in
fwait
negl
and
pop
push
insb
jl
inc
jb
mov
jg
iret
sub
add
popa
and
mov
cli
shl
mov
adc
sbb
bound
cs
pop
dec
fimuls
iret
pop
push
lret
jle
insl
mov
xlat
repz
xor
pushf
fs
das
push
popa
pop
adc
cmc
and
aaa
adc
jnp
inc
decb
in
inc
or
jns
cmp
ret
xchg
cmp
push
xchg
cmp
sub
lahf
aad
roll
or
adc
loopne
test
ss
adc
cwtl
lock
test
jmp
jmp
pusha
sbb
ds
cwtl
and
in
fstpl
add
scas
jg
fsubrs
testl
stc
in
test
push
cmp
xor
jo
adc
adc
in
pop
js
fsubr
popa
pushf
loop
popw
ja
mov
test
icebp
cmp
das
mov
dec
add
idivb
icebp
inc
mov
dec
xchg
insl
neg
sbb
xor
mov
outsl
mov
add
or
push
xchg
sub
add
into
jns
mov
sub
push
in
inc
dec
into
gs
jae
lcall
sub
repz
inc
inc
sbb
dec
xchg
xchg
shrb
mov
shl
jmp
mov
add
dec
cmp
jge
sbb
dec
push
jne
imul
daa
mov
pop
jb
imul
divl
aas
out
iret
dec
loope
mov
mov
pop
rcl
bound
aaa
lahf
imul
bnd
out
jnp
xchg
pop
pop
dec
jg
aam
dec
add
xorb
iret
xchg
mov
sbbb
or
add
add
xor
dec
mov
xchg
gs
dec
fimuls
dec
enter
hlt
dec
test
inc
lea
pop
cs
daa
rorl
dec
mov
daa
mov
out
inc
cmp
loopne
cld
aad
cli
imul
mull
scas
sub
rol
imul
insl
adc
jge
inc
lcall
push
ljmp
jb
imul
add
xor
bound
js
cmp
mov
push
jne
out
sti
mov
xchg
mov
movsb
xor
and
cwtl
dec
notl
ljmp
testb
pop
lock
mov
pop
mov
shll
or
stc
sub
xchg
dec
lods
add
loope
mov
movsl
xchg
pop
in
mov
jl
lock
enter
adc
iret
pop
fnsave
jg
testb
sub
imul
int3
add
sbb
ss
aad
cmp
xchg
lods
push
shrl
xor
cmc
js
sti
mov
jmp
jmp
add
jo
dec
aaa
push
or
jb
adc
push
das
mov
jmp
stos
inc
cmp
enter
mov
pop
out
cmp
das
fs
daa
sub
arpl
ss
pop
outsl
imul
lods
aas
filds
fld
jns
dec
and
lea
inc
fmul
jge
imul
xchg
enter
sbb
mov
rorl
fs
or
add
aam
pop
jle
cli
pop
add
or
and
mov
int3
xor
sti
mov
fucompp
orb
fs
scas
loope
fstp
loope,pt
stos
add
into
dec
sti
sbb
inc
fisubrs
pop
fistps
mov
pop
insl
mov
int
mov
cmp
cmpsl
rcr
cld
ret
testb
test
jp
mulb
fnstenv
sub
out
xchg
and
fnstenv
enter
push
pop
test
fwait
or
lret
sbb
inc
dec
pop
bnd
adc
xchg
cltd
shll
stos
data16
fucom
xchg
adc
xchg
dec
mov
fnstenv
lret
loop
cmp
push
sub
sbb
jge
mov
jge
fwait
int3
enter
sbb
outsb
mov
loop
js
loopne
xchg
adc
sub
add
call
outsl
and
xor
mov
jecxz
xlat
into
mov
out
divb
adc
outsl
mov
jae
cli
jne
xchg
jae
xchg
push
enter
movsl
xor
push
mov
in
sub
jp
inc
xor
test
and
out
fwait
insl
xor
cld
lcall
pop
enter
icebp
insl
xor
lcall
bound
or
add
scas
mov
orl
je
mov
mov
test
mov
mov
pusha
cmp
pop
dec
shlb
shll
xor
ljmp
jne
add
add
xchg
mov
stos
out
xor
and
mov
sub
mov
mov
dec
dec
mov
mov
into
insl
lds
pop
mov
ja
insl
fdivs
lret
sub
daa
mov
or
fwait
js
adc
dec
jbe
mov
mov
mov
ds
outsb
fwait
btc
ss
xor
lds
filds
mov
ds
cs
sub
sbb
adc
adc
cwtl
push
mov
fimuls
div
mov
movsb
xchg
xlat
jge
push
inc
xchg
daa
fcomi
movsl
cmp
or
mov
inc
imul
sub
mov
cs
jg
adc
inc
inc
js
mov
andl
mov
xchg
out
push
fmuls
pop
out
jno
popa
sub
fdiv
outsb
mov
or
cmp
push
imul
and
nop
cwtl
mov
leave
sub
sbb
or
fnstcw
push
icebp
fwait
pop
decb
lds
xchg
pop
addr16
jne
in
mov
or
mov
cli
push
xor
push
xor
jb
aas
sbb
mov
lods
addr16
inc
lret
pop
mov
jnp
dec
lds
xor
std
insl
lahf
arpl
mov
rorb
cli
inc
std
mov
fstl
inc
test
push
pop
push
cmpsl
sub
pop
lret
out
pop
test
and
jns
lcall
mov
xor
adc
fxch
sbb
aaa
stos
push
xor
sub
popf
and
iret
sub
mov
addr16
cmpsl
into
or
jge
test
aam
out
pop
in
test
mov
xor
inc
xchg
push
jmp
mov
call
add
pop
mov
adcb
inc
cltd
and
rcrl
add
mov
mov
fimuls
pop
add
pop
pop
inc
jg
gs
lea
mov
fistps
cmpsb
sub
lock
sbb
rol
push
imul
jp
pusha
hlt
fcoms
lret
cmp
adc
mov
lahf
push
mov
xchg
inc
add
ret
dec
fdivrl
sbb
add
lock
inc
or
hlt
cmp
mov
pop
in
or
pop
scas
clc
data16
xchg
cli
xchg
ret
lret
or
lahf
pushl
push
ljmp
jb
xchg
jns
mov
sub
adc
stos
std
gs
and
inc
wrmsr
cld
mov
pop
in
int
jae
pop
es
push
pop
movl
leave
sub
ljmp
in
cmc
jne
test
int
pop
adc
fcoms
mov
sbb
aas
insb
push
push
ljmp
aad
in
cmpsb
xchg
scas
imul
lcall
and
dec
cmpsw
mov
push
inc
in
pop
sub
pop
jl
jl
inc
xlat
pop
mov
je
filds
test
jno
xchg
and
test
test
sbb
xlat
enter
push
mov
push
jmp
repz
inc
mov
sub
mov
xlat
out
dec
nop
push
dec
in
dec
cmp
add
mov
loope
dec
gs
sbbb
and
jmp
dec
or
fwait
jnp
cmp
mov
sbb
insl
je
add
push
das
es
insl
out
jge
subb
outsl
test
cmpl
push
fsubs
rcr
add
sbb
das
push
adc
xor
mov
nop
ss
jo
fisubrs
or
movsb
into
adc
leave
fs
and
pop
in
pop
xchg
cmp
jl
call
push
push
mov
das
jg
xchg
jle
out
rcrl
and
call
fidivl
sahf
dec
cmp
pusha
iret
push
out
cmp
test
int3
insl
and
xor
sub
jnp
mov
jns
negl
mov
call
jbe
fwait
adc
xchg
sub
mov
and
dec
push
mov
test
sbb
loope
std
cmp
rcll
lock
inc
hlt
sbbb
lret
pushf
pop
ror
mov
mov
add
mov
sbb
pop
push
sub
ret
je
sub
in
lock
xor
mov
pop
movsl
cs
lar
mov
fcmovnbe
das
test
cmp
das
gs
shl
enter
mul
in
and
aam
dec
lret
int
lcall
cwtl
das
and
mov
call
test
sub
or
jno
push
mov
fcoms
scas
or
das
mov
imulb
mov
mov
add
sub
push
and
fcmovnbe
lcall
ljmp
fcoml
ret
mov
out
sub
outsl
add
lcall
clc
aam
adc
js
cmpb
pop
or
lods
cmpsb
cmp
xchg
je
fcomps
sub
sbb
cmp
add
pop
rolb
dec
sbbl
xor
push
jnp
mov
inc
push
outsb
pop
xor
loopne
bound
xor
xchg
inc
pop
cmpsb
jp
lods
inc
fcomp
xchg
sbb
pop
mov
mov
leave
jns
movsl
pop
mov
mov
aaa
mov
lods
and
jb
cmp
sbb
imul
mov
sub
shrb
mov
mov
out
lds
outsb
ja
mov
test
jp
fmull
push
scas
mov
dec
out
movb
rorl
mov
clc
cltd
dec
dec
cltd
mov
cmp
jno
inc
or
dec
sbb
and
xchg
push
stos
mov
insl
jge
or
idivl
inc
fmuls
lcall
and
inc
fists
dec
in
loop
andb
and
push
ljmp
cmp
xor
xchg
imul
lock
icebp
js
inc
or
out
push
and
xchg
das
push
fwait
jae
xchg
lret
cmp
pop
call
dec
pop
jnp
fs
cmpsl
aaa
xchg
insb
test
push
lods
mov
cmpsb
mov
jg
mov
ret
xor
cmp
loope
pop
aam
les
xchg
mov
ret
enter
scas
inc
ds
push
inc
xor
adc
lock
cmpxchg
aad
adc
fisubrs
inc
jb
test
lods
jmp
push
pop
popf
xor
addr16
jg
popf
xor
test
push
mov
mov
aam
test
std
and
add
pop
movsl
les
push
imul
sahf
pop
and
and
inc
and
mov
mov
push
scas
pusha
leave
fldenv
into
sub
fildl
sahf
dec
mov
dec
jne
enter
stos
arpl
adc
mov
xor
in
addr16
aas
cmpps
enter
dec
mov
jae
movsl
mov
pop
cmp
push
jno
or
mov
mov
mov
or
mov
pop
stos
in
loope
jb
jge
mov
adc
cmp
sbb
gs
inc
leave
and
sub
lahf
rorb
hlt
adc
fists
inc
movb
stos
sub
adc
jbe
jge
xchg
sbb
in
dec
mov
imul
ss
in
push
and
push
lods
push
dec
pushf
call
shrl
xor
pusha
pop
out
ret
daa
inc
mov
mov
adc
mov
push
test
mov
shrl
loope
push
pop
enter
lcall
and
pop
fs
cmp
cmp
adcl
inc
mov
in
cwtl
xor
and
lret
sti
xor
add
stos
popf
mov
out
lea
stos
push
pop
jmp
dec
fnstenv
hlt
out
into
and
and
shl
adcl
stos
sti
pop
movsl
cmp
mov
jge
jge
jmp
sbb
adc
add
sub
stos
jg
xchg
sbb
add
jbe
out
mov
mov
dec
cmpsb
adc
sbb
jno
sbb
push
fs
xor
dec
xlat
cmp
outsb
jle,pn
mov
leave
imul
repnz
jl
outsl
pop
dec
iret
loope
shlb
sub
test
icebp
add
fdivr
or
jbe
mov
add
push
mov
scas
ja
lock
inc
dec
cmpsl
movsb
mov
jbe
sbb
bound
mov
mov
jbe
in
ret
mov
ds
rorb
outsl
mov
lcall
mov
in
in
das
testl
mov
inc
in
cmp
cs
fxch
lods
jle
xchg
push
add
xchg
addr16
sbb
test
es
ret
cltd
or
dec
lret
movsb
xchg
mov
insb
rol
mov
jnp
loop
cmp
jbe
imul
gs
jno
adc
jne
sub
mov
push
rorl
ss
inc
mov
std
sbb
sbb
mov
enter
rcll
scas
lcall
pop
sub
sub
adc
pop
pop
test
sti
fwait
sub
pop
addr16
shr
outsl
mov
mov
pop
jb
cmpsb
push
adc
loopne
and
adc
leave
pusha
push
xchg
jge
sarl
fdivrs
stc
mov
jge
xchg
sub
repnz
daa
xor
sbb
stc
loop
in
xchg
ds
rcl
push
dec
mov
jge
jns
push
lds
mov
pop
sahf
rcll
add
sbb
das
and
mov
dec
sti
stos
js
xchg
add
jle
notb
lahf
loope
dec
jmp
int
cwtl
push
insl
jmp
xor
or
cmp
bound
sub
jle
ljmp
jp
xchg
cld
add
aaa
adc
arpl
gs
test
cs
vpunpcklqdq
ljmp
inc
iret
int
xor
cmp
xlat
pop
push
out
jo
aam
xchg
cmc
leave
arpl
pop
cmp
insl
hlt
aaa
pop
mov
cltd
mulb
lret
sbb
dec
jnp
cmp
orl
dec
roll
mov
test
ss
jo
ret
push
mov
fsubrp
inc
sbb
out
aaa
push
inc
out
dec
scas
rolb
mov
insb
jb
mov
popa
push
inc
sbb
rcr
push
mov
enter
sub
push
jbe
popa
mov
mov
cltd
lock
enter
scas
subb
push
adc
jmp
xor
adc
or
out
outsb
push
lret
lret
dec
push
loop
push
loopne
mov
sbb
fistpll
mov
fcoml
push
jp
repnz
cmp
pop
jne
pop
imul
loopne
and
cmp
fucomip
jmp
call
dec
pop
cmp
push
xchg
lea
mov
mov
mov
lret
scas
and
insb
mov
lahf
in
enter
xchg
icebp
jbe
adc
cltd
pop
dec
sbb
incb
ss
xor
ds
push
adc
add
shl
jmp
scas
mov
les
sbb
rcrl
hlt
test
cmp
scas
or
xor
jno
bound
dec
addr16
test
mov
xchg
cmpsb
jp
sub
rcrl
insl
xor
pop
in
std
and
cmp
addr16
adc
xor
mov
repnz
jle
pop
push
sbb
xchg
mov
adc
push
or
in
fsubrs
mov
mov
xchg
ljmp
jmp
xchg
sbb
sbb
sbb
or
sub
inc
fsubr
loopne
cs
into
mov
pushl
mov
imul
mov
fnsave
or
aaa
hlt
xchg
arpl
lret
movsl
dec
mov
lret
test
cmp
scas
xchg
inc
icebp
cmp
test
lret
lock
sbbb
adc
aad
lods
or
jp
cmpsl
aaa
dec
mov
or
xlat
and
pop
jae
mov
lods
or
aas
outsb
ja
iret
push
test
xchg
xor
bound
mov
cmpl
aaa
push
or
inc
fldl
out
lds
and
scas
add
jcxz
fdivrs
divl
inc
std
sub
sbb
pop
filds
inc
inc
sub
fsubp
lcall
bound
fwait
leave
sub
jae
outsl
push
inc
push
mov
imulb
mov
and
pop
test
fmul
pop
mov
xchg
in
repz
or
mov
push
xchg
xchg
jge
mov
loopne
fcom
push
sbb
out
mov
dec
repnz
adc
out
cld
test
out
cwtl
xor
push
push
das
xor
aad
xchg
test
and
mov
scas
js
icebp
dec
gs
imul
insl
cmp
push
jns
aas
stos
jmp
xchg
mov
dec
dec
mov
shlb
xchg
lcall
test
adc
repz
stc
nop
aaa
and
pop
mov
pusha
pop
jns
sub
cwtl
jno
andb
sbb
jne
cmp
xchg
xor
in
rorl
stos
mov
popf
mov
cmpsb
repnz
xor
jp
jne,pn
clc
or
test
lds
icebp
popf
or
mov
push
cmp
adc
orb
stos
or
xchg
rcll
mov
pushf
cli
rorb
mov
aad
pop
push
jecxz
push
in
fidivrs
movsb
repnz
pop
add
inc
outsl
clc
sbb
rcl
pop
pop
les
adc
outsl
loope
or
push
jle
dec
hlt
jl
and
popf
cmp
int
out
xchg
sub
loope
or
mov
pop
mov
ds
lea
shll
out
mov
mov
fcompl
arpl
rep
int3
or
data16
and
mov
ret
ret
sarb
fucomi
mov
and
shl
dec
leave
adc
add
jmp
adc
outsl
orl
lods
outsb
push
mov
loopne
sub
fdiv
test
int3
orl
pop
test
test
inc
dec
int3
movsl
dec
cmp
iret
call
test
mov
icebp
cmp
leave
out
or
inc
sbb
mov
lods
pushf
cmp
popf
mov
or
mov
push
std
jg
adc
ret
insl
jae
adc
movsb
cmp
sub
aas
jp
sbb
sbb
jo
mov
xorl
or
mov
cmpsl
jp
and
mov
lcall
mov
fbstp
mov
push
jmp
cld
xchg
push
sbb
xor
adc
pop
repnz
cmc
mov
es
or
mov
and
cltd
outsb
decl
xor
ja
popf
cld
sbb
and
inc
out
inc
xor
xor
jle
popa
pop
sub
jl
pop
mov
addb
mov
lcall
pop
and
out
lock
push
pushf
sarl
call
aas
dec
ds
lea
and
xor
push
push
sbb
in
call
fimull
jnp
mov
test
mov
out
cmp
cmp
mov
sahf
xor
imul
add
inc
into
daa
dec
lods
jg
mov
ret
rol
negl
add
andb
mov
mov
pop
sub
ret
jne
mov
cld
inc
jne
cmp
push
xor
repz
or
push
cmp
in
dec
jle
sbbl
dec
subl
movsb
lods
negl
jbe
loopne
dec
push
repnz
xchg
sub
mov
push
lcall
iret
aad
mov
ljmp
pop
xor
sbb
cmc
aas
flds
popa
inc
std
ss
push
cvtps2pd
or
out
es
push
dec
xchg
repz
push
fs
outsb
push
xor
push
lock
loope
mov
shll
inc
dec
out
js
je
mull
sbb
push
add
inc
xor
psrad
cwtl
test
push
cs
imul
pop
scas
sahf
cmp
ljmp
pushf
test
mov
fisubs
imul
dec
cmpsb
lods
repz
addb
inc
sub
repz
xchg
test
inc
add
mov
fstpl
dec
mov
insb
scas
xor
int
shll
and
inc
idivl
push
fsubs
sub
or
mov
test
push
adc
jbe
pusha
jnp
repz
sub
pop
dec
pop
sbb
andl
hlt
ret
sbb
mov
movsb
cmp
shll
mov
jp
mov
jns
jecxz
mov
push
les
enter
ljmp
pop
test
xchg
pusha
js
ds
and
push
arpl
cltd
xchg
jne
call
jg
adc
xor
inc
stos
add
aaa
stc
cmp
stc
xorb
push
or
and
pop
hlt
push
repz
or
mov
xchg
sub
rcll
sub
dec
cmp
mov
xchg
inc
fsubs
das
push
inc
test
shll
and
ss
jge
jl
xor
fnstsw
fidivrs
ror
xor
push
cmp
push
adc
jo
dec
sbb
imul
adc
repnz
mov
orb
pop
rcrl
push
stos
mov
xor
add
nop
lahf
popf
out
mov
cwtl
sub
mov
xor
stos
push
sub
push
xlat
in
fs
out
ret
inc
sub
call
mov
nop
imul
outsl
fmuls
divb
xchg
imul
mov
add
pusha
inc
icebp
pop
sub
xor
mov
mov
fcoms
aas
xchg
push
mov
push
repz
dec
jbe
push
gs
or
sbb
xchg
cmc
pop
adc
hlt
adcl
shll
xlat
rorb
and
cmp
les
jno
xlat
mov
jge
pop
jo
les
xchg
loop
sahf
lock
loop
call
add
sbb
out
mov
mov
push
movsb
cmp
cmp
loopne
loop
imul
jg
fsubs
or
pop
daa
sbb
jae
sub
pushf
push
ret
outsb
add
jmp
push
mov
or
fisubs
shrl
lds
mov
scas
inc
xchg
pop
inc
inc
xlat
xor
testl
and
jbe
cmp
mov
std
cltd
inc
mov
and
adc
or
adc
push
fstpt
lret
cmp
imul
cmp
mov
inc
es
sub
in
fldcw
or
dec
dec
and
xchg
shlb
xor
mov
imul
add
xchg
pop
push
leave
pusha
xchg
in
jns
sub
add
mov
cmp
mov
fistl
push
mov
pop
cmc
fisubrs
jl
xor
insb
add
mov
loop
dec
in
jns
add
jne
fmull
jp
cmp
mov
sub
icebp
mov
dec
inc
fdivrl
cmpsb
arpl
jne
cs
pop
out
sub
adcl
xor
xchg
stc
stc
mov
sub
cmpsb
cmp
adc
sub
inc
or
cmp
fs
out
pop
sbb
inc
fildl
mov
xchg
cmc
mov
mov
pop
testl
je
fs
sub
sub
pop
fiadds
fildll
dec
in
cltd
lcall
out
mov
inc
push
inc
loopne
jae
lods
inc
popf
mov
lret
push
in
cmp
dec
loop
dec
inc
fidivrs
insl
add
mov
mov
pop
hlt
aad
outsl
loope
sahf
lock
data16
call
jns
mov
cmp
ffree
pop
mov
sbb
addr16
xchg
xchg
aad
cli
push
mov
sbbl
cmp
notl
scas
sub
xor
mov
mov
loope
and
inc
jl
je
lds
jp
mov
fstps
sbb
xor
arpl
mov
js
xchg
lret
add
scas
and
dec
addl
push
vpxor
push
std
shrl
or
fildl
jnp
and
loopne
paddd
subb
mov
dec
hlt
dec
in
in
test
divb
daa
push
xchg
dec
std
cmp
das
xchg
sub
divb
pusha
dec
sbb
pop
testl
jnp
ljmp
ret
adc
sub
in
test
mov
add
and
push
out
scas
inc
push
rolb
add
cltd
xor
pop
and
pop
fldcw
ret
mov
ss
pop
inc
lock
mov
fstpl
mov
call
shll
and
mov
pop
cmc
rcl
jle
pop
repnz
repz
daa
mov
and
je
cmpsl
xchg
stos
inc
enter
in
jmp
pop
push
in
dec
xor
mov
lcall
test
loopne
pop
adc
xor
inc
aaa
loopne
imul
repz
in
mov
insl
lds
lea
mov
insl
pop
cmc
lahf
enter
lea
mov
pop
insl
mov
mov
je
adc
pop
jnp
jmp
into
loop
jnp
cmp
jg
dec
scas
mov
xlat
out
push
popf
test
jle
in
mov
and
jno
sahf
xor
xlat
jl
adc
data16
scas
xor
fiadds
jo
subl
addr16
mov
outsl
push
sahf
fwait
cmp
leave
mov
vsubps
arpl
test
mov
outsb
add
xchg
push
stos
inc
mov
xchg
sub
bound
iret
xchg
pop
enter
inc
xlat
mov
pusha
test
pusha
int3
arpl
test
lahf
mov
jo
mov
test
mov
outsl
push
jmp
cmpb
mov
mov
outsl
xor
popf
xchg
jge
bound
mov
outsb
dec
jecxz
xchg
xchg
mov
mov
test
lds
push
sahf
xor
mov
insl
mov
mov
jae
sub
je
jmp
fwait
jp
jae
mov
test
jns
lods
stos
jb
mov
je
mov
jns
stos
jle
sub
jg
pop
scas
jl
pop
mov
ss
bound
xchg
jle
and
mov
or
xchg
movsb
cmp
mov
jnp
bound
xchg
insl
les
andl
jno
popf
mov
insl
call
pop
shlb
mov
xchg
insb
add
shll
and
imul
lcall
dec
jge
fildll
popa
jle
xchg
mov
dec
jmp
daa
shrb
pusha
push
jmp
flds
pushf
fidivs
push
pop
sahf
ss
adcb
stc
jne
das
mov
dec
call
push
lods
inc
cmp
aad
rcrl
test
fnsave
repz
cmp
ss
adc
lret
push
pop
jae
in
mov
sbb
ds
fildll
mov
and
bnd
and
pop
icebp
outsl
inc
xchg
sub
loop
pop
cmc
xlat
cmp
sbbb
mov
in
hlt
rclb
mov
je
nop
daa
sub
hlt
ss
inc
dec
jecxz
div
xchg
mov
and
sub
test
imul
sub
in
cld
adc
out
data16
push
shr
hlt
add
lcall
out
and
stc
fnstenv
daa
sbb
and
ss
cld
inc
fdivs
jl
icebp
mov
pop
repnz
inc
xlat
mov
jl
jge
mov
mov
cld
jns
xchg
sub
outsl
inc
fstpl
xchg
shll
dec
in
dec
rcrl
sahf
xor
lret
int
push
loope
addb
leave
fsubrs
ljmp
call
or
jno
rcrb
mov
sti
xchg
adc
dec
loop
add
push
xor
shrb
shrb
or
mulb
push
popf
sub
and
add
es
xor
pop
and
test
mov
cli
xchg
ds
leave
sbb
add
jmp
aas
mov
ret
negl
aaa
into
inc
lock
stc
xchg
inc
test
loop
cmp
roll
xor
stc
push
push
fs
xorl
test
fadds
xchg
test
or
fs
sub
pop
jne
jl
sti
lods
repnz
adc
iret
outsl
xchg
inc
mov
and
lret
je
jmp
xchg
and
jns
repnz
imul
inc
xchg
adc
xchg
jecxz
push
sbb
addr16
imul
sarb
pop
xchg
sub
mov
in
cmp
imul
push
pop
cmpsb
dec
out
lret
bound
shlb
dec
xchg
jl
adcb
movsl
pop
hlt
xlat
or
adc
adc
sahf
xor
sub
or
pop
dec
sub
hlt
jne
sub
inc
cmp
loop
sbb
ja
or
sbb
pop
mov
sahf
xchg
sub
and
popf
icebp
leave
push
sti
jbe
enter
loope
cmp
jne
jg
test
es
lea
dec
aad
or
xor
in
sub
stos
adc
cmc
shl
pop
icebp
mov
ret
es
iret
cmpb
cmp
sub
xchg
insb
scas
pop
aas
sbb
ljmp
or
fisubl
stc
xor
out
push
jmp
adc
inc
stos
add
adc
fstpt
repnz
fwait
and
sbb
fldcw
xchg
in
adc
ficompl
dec
test
clc
add
xor
sbb
bound
lret
dec
mov
stos
push
jnp
out
mov
inc
lahf
xor
insl
in
push
push
hlt
jns
les
inc
xor
push
out
jns
pusha
pop
mov
xor
imul
mov
enter
mov
pop
jo
sahf
xchg
sbb
xchg
xor
pop
sti
sbb
dec
out
orb
in
je
mov
fstpl
fcomps
mov
je
mov
dec
out
hlt
push
mov
xchg
pop
mov
and
jns
sub
add
mov
fildll
hlt
sub
mul
and
jge
cmp
and
inc
mov
sbb
xchg
je
fdivl
cmc
mov
lock
add
out
and
in
fdivl
mov
clc
fistps
iret
pop
pop
mov
lock
imul
and
jge
or
sbb
mov
pusha
mov
cmc
int
lods
inc
xchg
mov
add
movq
cmp
loope
inc
loop
xchg
dec
or
outsl
sbb
ficompl
sbb
mov
jge
test
and
mov
lock
xchg
mov
rcll
ljmp
push
mul
in
ss
fstpt
stos
add
in
sbb
sti
mov
cmc
and
out
in
bound
cmc
mov
and
mov
xchg
out
cmpsl
shlb
lds
xchg
scas
mov
lcall
imul
repz
shlb
push
enter
sub
inc
mov
js
push
in
stos
cltd
rorl
pop
out
fwait
lods
inc
sbb
outsb
cmpsb
leave
test
mov
mov
pusha
test
dec
mov
arpl
jge
xor
out
jbe
dec
inc
adc
adc
or
xor
cli
fsubrs
sub
dec
sbb
sbb
jg
mov
pusha
adcb
es
jnp
sub
clc
dec
sahf
xchg
or
bound
adc
xchg
xor
test
sbb
fsubrs
aaa
leave
repz
and
push
lret
cmpsl
adc
aam
jne
fsts
mov
aas
call
jge
xor
nop
je
mov
arpl
dec
test
mov
rol
cmp
jo
sbb
mov
fcomi
xchg
iret
fldl
pop
sub
sbb
pop
sbb
sub
stc
int3
data16
sahf
pop
jne
test
sub
rcll
mov
xchg
mov
mov
stos
adc
pushf
nop
sbbb
out
inc
das
adc
or
add
adcb
jo
adc
movsl
xor
jns
in
add
faddl
adc
sbb
jmp
ror
ficoms
leave
ds
xlat
imul
and
mov
xor
hlt
shl
loope
inc
movsb
repz
clc
sub
cmp
pop
jl
mov
pop
inc
pop
int3
xor
jl
fcmovu
inc
ficompl
call
pop
mov
or
mov
ss
push
andb
cmpps
mov
arpl
mov
jno
rcrl
test
ret
jb
fldt
adc
loop,pn
addr16
aam
inc
inc
mov
aam
inc
in
xchg
dec
adc
mov
shrb
iret
addl
and
cmc
test
inc
mov
mov
or
dec
ror
cmp
repnz
push
add
test
jle
test
sti
sub
into
push
out
cltd
push
in
cs
outsl
mulb
mov
daa
mov
cmpl
push
add
pop
and
mov
adc
xchg
movq
icebp
xor
mov
push
int3
iret
nop
jmp
and
insb
add
xchg
shlb
add
lret
shr
cmpsb
mov
fimuls
jle
frstor
fninit
int3
inc
fldt
call
bound
sub
test
dec
jbe
imul
lods
mov
push
in
adc
repz
fisttpl
das
in
jl
cmp
mov
fmull
lock
loope
jae
push
mov
daa
mov
int
pop
dec
mov
pop
pop
sub
ja
inc
jno
in
sbb
or
addr16
dec
pop
add
pop
sub
adc
andb
adc
push
notb
ss
jae
mov
mov
rep
rol
pop
and
rcrb
sbb
mov
loopne
jg
dec
dec
shrb
mov
adc
movsl
pushf
xchg
sbb
imull
dec
shrb
and
dec
out
pop
mov
icebp
add
inc
inc
xor
push
and
or
and
push
jle
lock
push
popf
xchg
cmp
push
mov
push
leave
add
fmuls
inc
dec
rol
pop
add
sub
imulb
jnp
insb
mov
push
or
add
es
cmp
mov
push
ret
aas
ljmp
push
cli
or
stc
imul
js
add
xchg
lea
xchg
pusha
test
in
mov
ficoml
stc
lock
imul
adc
or
in
sbb
adc
cmc
push
out
cmp
dec
rcr
xchg
lret
repnz
out
and
daa
rcr
push
ljmp
data16
popf
addb
pop
fldl
jl
pop
inc
nop
cmp
inc
data16
ja
push
pop
sahf
inc
mov
sub
push
jo
and
pop
mov
bound
scas
push
bound
xorb
and
xchg
xchg
sbb
push
subb
inc
xacquire
inc
mov
mov
in
push
mov
ljmp
mov
mov
dec
mov
ss
push
mov
arpl
mov
mov
cmp
cmovg
fwait
rcl
cmp
movaps
je
lock
xor
iret
gs
dec
int
orb
ja
mov
outsb
jle
loop
divb
sub
fists
push
cmp
pushf
insl
aas
xor
push
mov
push
add
shrb
out
call
clc
aam
or
stos
test
ljmp
jno
js
cmc
daa
fsubrl
sbbb
lods
out
xor
std
and
pop
mov
insl
int3
aaa
pop
lds
aad
fisttps
fldt
int
rolb
ret
aas
call
cs
dec
dec
in
pop
inc
jns
push
push
loop
dec
pop
jge
pop
leave
pusha
jno
fisubrl
std
cmp
adc
mov
std
adc
jecxz
mov
add
test
sbb
fidivrl
int3
cmp
or
aaa
xchg
mov
pop
or
fcoms
cmp
pop
cltd
lods
jl
xchg
pop
int3
and
xor
sbb
push
xchg
and
dec
pop
xchg
inc
rorl
nop
sub
lock
push
lret
push
lret
xabort
ret
fs
leave
pusha
int
jle
jmp
xchg
xchg
mov
outsb
popf
jg
popl
cmpsb
outsl
cmp
mov
les
faddp
mov
es
jae
jnp
lret
fiadds
dec
mov
ljmp
adc
rclb
dec
ret
lahf
test
ja
out
jp
add
cld
xlat
dec
in
pop
aam
lods
xchg
daa
lea
sub
sti
inc
loop
cmpsl
cmp
jecxz
cmp
inc
jp
cmp
test
mov
test
icebp
sub
cmpsl
movsl
pusha
add
mov
xor
inc
popl
call
push
mov
sti
xor
testb
inc
mov
hlt
mov
int
cmpb
mov
das
stc
or
ss
mov
lret
sbb
and
jne
dec
dec
in
fs
jnp
iret
popf
jo
pop
xchg
mov
pushf
jg
pusha
imul
add
stc
cltd
inc
into
inc
pop
adc
andb
sti
mov
fsubl
xor
test
jno
idivl
xchg
callw
test
pop
adc
es
js
inc
jge
ljmp
scas
movsb
addr16
sub
jne
mov
hlt
and
ret
jns
movsl
inc
or
jmp
adc
lock
add
roll
aad
adc
mov
imul
aad
movsl
ret
pop
je
push
mov
lods
or
lcall
aas
jmp
mov
adc
in
mov
adc
jae
jae
mov
jno
or
cmp
lea
xor
push
cmp
adc
insl
sub
push
jge
les
push
mov
pop
mov
xchg
js
jp
push
cmp
mov
addr16
mov
cmp
xchg
mov
icebp
insl
add
leave
cmp
lret
daa
inc
ret
aad
mov
cmpsl
gs
cwtl
lret
ficomps
addl
stos
adc
ljmp
pop
rcrl
mov
sbb
fistpll
cmp
out
test
in
lock
fistl
ffreep
fbld
in
dec
out
mov
ss
mov
mov
pop
into
jg
rcrb
scas
repz
loop
loop
jle
xlat
sub
movb
lods
pop
adc
dec
rorb
jae
cmp
or
push
jae
ja
and
cltd
cltd
insl
decb
sbb
mov
popa
sbb
xchg
xor
push
push
sub
pushf
lea
add
sbb
push
lcall
push
xchg
mov
repz
cmpsl
aaa
roll
int3
push
rorb
inc
push
cld
sbb
inc
push
or
rcrl
add
movsb
mov
mov
sub
subb
push
in
add
dec
inc
test
adc
pop
jnp
enter
xchg
dec
jp
in
push
inc
ja
push
daa
adc
xor
mov
out
sub
sub
nop
daa
lret
in
push
jmp
adc
mov
fdivl
adc
inc
jne
mov
sub
pop
inc
outsl
mov
sti
lods
xchg
xor
ja
cmp
mov
loopne
loope
push
mov
cld
mov
and
push
iret
aas
mov
loope
outsl
call
or
scas
lea
mov
leave
mov
sti
ret
outsl
mov
sbb
out
cltd
loop
mov
mov
ret
nop
ja
xchg
xor
and
js
lret
dec
rol
push
xchg
outsb
pop
shrb
hlt
xlat
dec
xchg
mov
jg
mov
hlt
dec
xchg
ja
test
mov
jbe
gs
mov
faddp
sbb
cltd
xchg
stc
jl
int
cmc
mov
mov
fisubs
popaw
imul
inc
pandn
pop
les
mov
push
addb
and
inc
jle
adc
cmp
cli
loopne
out
stos
sub
neg
out
sbb
mov
add
push
repz
int3
pop
push
push
into
imull
iret
sub
xor
int
xchg
sarl
push
xchg
cwtl
ret
pop
mov
pop
and
jp
mov
mov
std
data16
cmpb
inc
lods
out
imul
test
pushf
sub
lahf
inc
jl
imul
lea
pop
in
jo
mov
push
lcall
and
sub
outsl
repz
dec
cmpsb
ret
dec
negl
pop
test
sti
sub
pop
lcall
sbb
xchg
sarl
sub
add
dec
sbb
lds
iret
arpl
aaa
mov
aam
jl
mov
sub
testl
in
scas
sbb
push
cmpsl
std
inc
cmpsl
mov
cmc
dec
in
jecxz
aaa
leave
lret
sub
leave
into
in
in
test
pop
xchg
add
or
rorb
xor
adc
les
ljmp
and
bound
int3
inc
push
shll
out
mov
clc
faddl
xchg
inc
and
cmpsl
pop
repz
jo
mov
mov
mov
int3
cmp
adc
shll
faddl
ret
fdivs
scas
pop
test
mov
jne
inc
lret
push
xchg
es
dec
sahf
xchg
push
or
jl
xor
or
and
jl
ljmp
cmp
cs
mov
or
push
sahf
cmpsb
test
outsb
std
and
cmp
lea
lret
add
daa
out
andb
or
rorb
jg
sbb
lds
mov
xor
stc
xor
shr
in
pop
cmpsl
js
scas
inc
addr16
ja
push
sub
jle
incl
pop
push
adc
push
scas
popa
jno
jmp
pop
jne
aam
xchg
inc
mov
sbb
dec
xchg
test
sbb
push
push
cmc
mov
in
mov
psubq
xsha256
cmpsb
xchg
jnp
idivb
outsl
pop
adc
dec
fcomip
outsb
into
push
xor
stos
inc
push
mov
lock
dec
jle
lret
loopne
lahf
iret
jl
mov
push
popa
lods
jle
faddl
pop
gs
push
xchg
jl
scas
push
sub
sbb
pushf
mov
push
xor
xor
inc
push
fdivl
push
push
sbb
inc
push
loope
fwait
lahf
aam
add
mov
call
and
aam
jle
js
xor
xchg
and
inc
cmp
arpl
xchg
xchg
lea
xor
aad
adc
push
ret
out
or
push
repz
xlat
mov
pop
push
adc
inc
adc
xchg
sub
jl
jecxz
xor
fstl
push
cmp
xchg
sbb
jecxz
orl
test
add
inc
lret
dec
inc
pop
lock
xor
roll
fcompl
xchg
cmp
repnz
jp
into
cmp
jne
stos
jmp
ret
ffreep
stos
xchg
jecxz
outsb
shl
mov
pop
int3
cltd
rcr
sbb
inc
fstl
pop
mov
stos
mov
in
addr16
jp
jnp
mov
arpl
outsl
fdivs
jp
mov
xor
pushf
mov
push
dec
cmp
mov
xor
or
lods
add
roll
sub
mov
mov
mov
or
aas
mov
out
jecxz
mov
fistl
fs
push
mov
adc
lahf
test
jmp
inc
mov
loopne
mov
shrl
jle
fsubrs
push
jmp
inc
mov
lods
push
mov
pop
mov
daa
sahf
cmpb
sbb
push
mov
adc
out
orb
lret
imul
push
test
sbb
mov
repnz
add
add
lret
jb,pt
xchg
bound
divb
or
popa
mov
inc
pop
adc
jns
mov
sbb
scas
sti
xor
addr16
inc
inc
cmp
lods
sbb
push
or
xor
jmp
sub
sbb
dec
lds
call
mov
pop
lret
dec
ret
loop
shll
xor
jg
mov
in
or
pop
sbb
push
cmp
std
jo
dec
out
and
pop
shrb
adc
or
call
pop
add
pop
and
push
xchg
sub
lods
ret
mov
aad
pop
inc
and
fs
outsb
push
and
jl
xchg
sub
fs
test
je
lcall
mov
test
add
scas
push
push
mov
ret
sahf
insl
shl
sbb
sub
pop
std
inc
ret
xlat
dec
mov
and
cmp
popa
mov
and
xchg
sub
adc
or
xchg
nop
and
inc
test
sbb
rorl
adc
mov
es
add
imul
xor
push
rcl
dec
shrb
sahf
cmp
mov
fstpt
push
xchg
loopne
out
neg
inc
lret
dec
stc
rclb
xchg
sub
nop
jl
pop
les
push
test
inc
dec
dec
loope
push
es
mov
aam
sbb
icebp
sub
lret
dec
add
cmp
push
or
xorb
shlb
xchg
imul
lahf
and
cli
into
xchg
ds
mov
cs
jmp
hlt
sub
add
push
movsl
jecxz
sbb
inc
imulb
sub
je
outsl
lock
sub
jns
insl
rcrb
xor
repz
adc
aad
mov
loope
cmp
repz
sahf
dec
pop
jp
pop
dec
fs
push
push
insl
cltd
pop
and
push
pop
jb
dec
jae
mov
dec
sub
jae
jbe
jo
sub
test
adc
push
mov
sub
pop
lds
jg
in
dec
arpl
push
es
orl
dec
mov
nop
push
lahf
gs
sbb
xlat
lds
push
test
mov
in
push
cltd
leave
fidivrl
repnz
je
mov
jns
filds
insb
xchg
xchg
adc
into
mov
jle
roll
mov
adc
xor
mov
jp
pop
mov
push
mov
jb
cmp
arpl
sub
or
mov
std
sbb
mov
jge
cmpsl
cmp
jbe
inc
cmpsl
call
add
rcll
sbbl
ret
test
daa
dec
std
mov
dec
stos
push
dec
mov
fimuls
lret
mov
rcrl
call
mov
and
dec
out
sub
dec
inc
fidivrl
int3
cmp
lahf
js
xlat
aam
mov
movsb
addr16
sbb
bound
pop
out
clc
in
das
iret
mov
ljmp
jmp
or
ds
cltd
mov
andl
jmp
mov
or
mov
clc
and
or
inc
fwait
sbb
mov
cmpsl
jge
jecxz
xor
mov
add
push
add
into
push
fidivs
lahf
mov
push
or
in
cmp
sub
sub
movsb
mov
fidivrs
rdmsr
fstpl
push
sbb
add
sahf
in
test
cld
xor
test
sub
test
jns
fildl
es
movsl
pop
repnz
push
cmp
add
inc
mov
xchg
mov
mov
mov
xchg
adc
jge
loope
mov
xchg
daa
shlb
ljmp
lret
dec
mov
out
inc
jno
gs
jle
or
dec
sarl
dec
out
dec
cmp
fwait
call
loopne
add
sbb
dec
rclb
fisttpl
xor
and
out
ljmp
xchg
clc
and
lods
rcrl
dec
and
cmp
mov
fistps
jecxz
mov
sub
sub
gs
pop
rep
xchg
sbb
and
stos
add
cmp
add
outsl
mov
in
out
push
lea
pop
push
ds
pop
ja
lahf
nop
pushf
cmp
xchg
mov
push
call
sub
popa
add
jnp
jnp
in
xor
mov
in
pop
arpl
cli
and
mov
repnz
rcr
divb
jmp
fcmovnu
inc
lock
enter
enter
ret
js
pop
inc
pop
in
cmp
les
test
in
sbb
icebp
mov
adc
movsb
jb
lahf
xchg
push
push
lods
xorl
pop
lret
orb
or
mov
cmp
mov
addr16
dec
iret
in
and
mov
pop
cmc
popf
sub
sbbb
add
adc
push
scas
pop
hlt
pop
lahf
jmp
sbbb
pop
sahf
outsl
adc
fwait
inc
nop
and
mov
adc
popa
clc
or
cmp
jg
mov
fstps
xor
sub
push
pop
add
push
ss
jo
push
fsubrs
shl
mov
testb
adc
das
js
lret
xor
or
push
out
sbb
pop
mov
lds
inc
mov
stc
jne
in
or
adc
mov
ret
hlt
mov
adc
data16
cmpsl
xor
fcomps
std
xchg
push
stc
push
jmp
jae
mov
dec
jno
cmp
inc
push
out
ja
in
out
xchg
push
in
les
sbb
pop
bound
rclb
nop
pop
out
rcrl
dec
push
loop
add
xchg
sub
push
xor
insb
mov
mov
mov
fistpll
adc
into
mov
pop
hlt
bound
jnp
adc
ss
jo
sbb
ljmp
jno
xchg
arpl
out
mov
or
xchg
sub
sub
call
add
push
pop
notb
jge
out
mov
mov
call
jle
pop
push
mov
mov
pop
push
mov
out
dec
popa
lahf
jbe
mov
fldl
dec
xchg
push
in
cs
add
les
dec
jnp
les
leave
ret
loopne
dec
pop
arpl
das
inc
lods
mov
aad
xor
int3
fnsave
cmp
xchg
dec
pop
movsl
and
ds
and
xor
in
or
ret
add
in
in
sbb
push
inc
mov
es
and
push
pop
push
js
add
or
push
test
mov
push
imul
mov
jmp
lcall
pusha
push
mov
xor
push
cmp
xchg
pop
mov
cmp
aaa
jne
cmp
mov
add
push
sahf
pop
push
mov
push
pop
push
pop
inc
fsubrp
hlt
sarl
sbb
adc
and
rorb
popa
fstpl
mov
xor
xchg
xor
add
push
push
loop
inc
push
sub
loopne
test
movsl
roll
push
shl
fcoml
push
mov
aad
xchg
or
outsl
stc
jmp
aam
adc
xchg
mov
mov
add
push
popl
mov
lds
fdivrs
pop
xchg
fidivrl
mov
xchg
inc
test
lock
mov
movsl
sbb
pop
or
xchg
lea
nop
dec
popf
fidivrs
add
loopne
fdivl
rcrb
push
pushl
dec
ds
xor
dec
push
mov
add
mov
nop
shll
fwait
cltd
out
shl
lret
cltd
mov
jnp
arpl
jno
js
insb
iret
push
sub
icebp
xchg
xor
cmp
add
les
mov
daa
ljmp
imul
mov
or
mov
fs
mov
or
and
xor
inc
int3
push
out
sbb
jb
mov
test
movb
cmp
scas
jno
addb
push
xchg
xchg
cli
jge
mov
mov
add
aaa
arpl
push
mov
hlt
xchg
push
out
cltd
pop
push
movsl
dec
cmp
push
inc
dec
dec
loop
pop
stc
dec
ficomps
mov
out
adc
loopne
push
ljmp
out
test
testl
sub
mov
mov
std
xchg
scas
lret
mov
mov
pop
sbb
dec
jecxz
aam
lock
gs
scas
inc
addr16
mov
pop
fidivs
cwtl
push
mov
sbb
jl
test
inc
xlat
test
mov
ja
adc
test
pop
lock
pushf
xor
sbb
mov
sbb
call
insl
xor
mov
push
adc
inc
adc
dec
push
add
adc
push
add
dec
into
gs
mov
mov
mov
out
imul
je
dec
ret
adcb
pop
shl
outsl
rorl
cmpsl
das
mov
ret
xchg
xchg
fcom
test
lret
outsb
call
enter
cmc
sbb
aad
out
push
or
push
add
cld
scas
mov
loopne
push
cld
pop
icebp
scas
xor
aam
cwtl
aas
sahf
add
add
les
xor
outsb
cmc
loopne
lahf
inc
mov
call
lock
loopne
jmp
inc
mov
mov
push
into
cli
int
cmp
repnz
mov
add
mov
pop
pop
or
les
jne
push
sbb
sarb
dec
js
sub
stos
xor
shlb
add
xorb
sti
xchg
push
dec
dec
out
je
sbb
mov
pop
shrb
scas
out
dec
jmp
out
ja
in
sbb
cli
pop
push
dec
iret
xchg
and
cmp
jl
push
dec
mov
stos
inc
or
cli
inc
or
or
cs
dec
mov
mov
mov
andl
add
push
outsb
hlt
cmpb
sub
negl
cmp
scas
shrl
pop
adc
sub
push
psrlq
test
cmp
sti
cmp
mov
add
loope
sbb
push
divb
pushf
mov
mov
inc
pop
cs
mov
insl
lock
jge
es
xchg
aaa
pop
or
es
xor
inc
pop
mov
out
fisubrs
mov
orl
push
xlat
cli
data16
push
sub
xchg
mov
lret
mov
cmpsl
mov
stc
arpl
fiaddl
mov
stos
sarb
rcll
mov
test
jae
mul
sub
scas
leave
scas
das
xchg
mov
and
and
push
xbegin
lock
iret
jne
mov
dec
arpl
pop
xchg
mov
testl
push
add
insb
out
mov
rep
lcall
add
sbb
mov
mov
ja
jle
lock
mov
jge
dec
pop
adc
inc
push
dec
ret
mov
xor
sub
out
in
sub
jle
mov
push
or
sti
ds
scas
sub
mov
outsb
scas
sub
jnp
mov
push
mov
mov
insb
pop
sti
dec
cmp
push
lret
xor
cs
xchg
jnp
fimuls
or
xchg
push
lret
movsb
out
push
add
mov
jg
mov
cmpsl
xor
pop
cmpsb
xor
lods
mov
sub
push
aam
ss
stos
sub
sbb
mov
movsb
daa
mov
call
mulb
xchg
inc
push
fistpl
mov
loope
sub
jge
sbb
sbb
sahf
sbb
pop
lret
mov
in
scas
sub
rcrb
xor
sub
adc
adcl
mov
jb
fsubrs
test
jg
sbb
inc
arpl
cmp
out
roll
mov
out
cmpsl
xor
std
dec
or
adc
mov
movsl
mov
out
fists
std
xchg
jb
out
mov
out
pop
nop
inc
cmp
cmp
test
jg
iret
fcmovnbe
test
loopne
xor
fsts
lds
jnp
sbb
and
flds
push
push
sbbb
xor
out
nop
inc
inc
stc
cmp
into
mov
jle
enter
add
fdivrl
pusha
mov
stc
addr16
adc
mov
mov
jle
inc
fsts
or
xor
push
int
push
pusha
out
mov
dec
lods
pop
pop
testl
lcall
or
popl
es
lahf
xor
and
imul
sbb
lret
push
add
ret
push
mov
sbb
je
inc
pop
stc
xchg
insb
ljmp
pop
stc
dec
inc
pop
mov
cwtl
sub
sbb
inc
pop
stc
or
call
pop
in
push
test
pop
stc
mov
lods
sub
mov
jns
inc
pop
repz
add
rclb
sarl
xor
insb
repz
movsl
mov
stos
dec
wbinvd
ja
cs
ds
or
jmp
inc
or
fnstenv
ss
in
loope
rolb
pop
or
jae
ret
mov
arpl
nop
das
inc
or
ret
iret
fistpl
pop
add
lds
jp
fdivr
xchg
sub
pop
lds
scas
dec
inc
mov
fstpl
xlat
xor
add
cmovo
ficoml
ret
iret
inc
pop
lcall
push
notl
ret
nop
and
das
mov
test
or
test
mov
xor
mov
adc
lret
rclb
sbb
iret
pop
imul
dec
mov
cmp
and
ret
inc
mov
mov
mov
sarb
pcmpgtw
inc
pop
lock
movsb
xchg
push
fidivs
inc
or
adc
pop
fst
lret
or
fimull
jns
mov
inc
or
push
jae
out
adc
out
inc
inc
orl
lret
mov
inc
or
and
pop
inc
push
pop
push
or
arpl
xor
and
jl
xor
bound
pop
inc
or
es
lock
repnz
sbb
jnp
testl
dec
add
add
inc
cmpsb
fiadds
hlt
cmp
sbb
sti
arpl
mov
cmpl
sub
mov
dec
in
outsl
in
jp
mov
mov
push
dec
mov
scas
sub
cmc
test
aas
repz
movsl
cli
movsb
xor
into
sti
hlt
gs
movsb
insb
in
inc
sbb
jno
nopl
dec
jecxz
pop
insl
xchg
rolb
sarl
nop
adc
sbb
or
ret
js
cmp
clc
pop
fs
popa
subl
adc
dec
dec
push
add
dec
push
and
adc
hlt
aad
mov
adc
xchg
cli
inc
and
test
fnstcw
sub
bound
xor
arpl
mov
addb
filds
stc
pop
mov
xchg
inc
enter
dec
pop
mov
cmp
sbb
mov
nop
aaa
mov
cmp
ret
xchg
mov
bswap
lods
mov
fimuls
rcrl
sub
cmpsb
insb
ljmp
or
fcomps
cmp
jae
adc
add
pop
insb
add
mov
jns
adc
push
add
push
out
jne
sbb
clc
int
and
movsb
cli
popa
sub
aaa
pushf
lea
rorb
mov
vpmulhuw
fsubrs
pop
ret
addr16
mov
dec
loopne
roll
sub
cmp
mov
jns
notb
insl
fstpt
mov
std
pop
icebp
aaa
outsl
in
push
ljmp
out
clc
pop
fs
out
push
lahf
mov
scas
popa
shrl
adc
gs
jbe
xchg
xor
lahf
nop
cmp
cmp
xchg
adc
pop
addr16
or
push
iret
fiaddl
sub
mov
lods
mov
xchg
adc
pusha
inc
int3
inc
adc
cltd
mov
push
out
test
cmp
and
mov
in
movsl
pusha
sub
or
pop
negl
xchg
cmp
shlb
xor
and
pop
xor
sub
loopne
dec
ucomiss
adc
clc
je
xchg
stos
in
jne
mov
jmpw
jmp
lret
ret
jo
cmpsl
push
dec
dec
adc
dec
adc
sub
stos
sub
cmp
ja
adc
cmp
outsl
mov
sbb
mov
mov
mov
cmpsb
jmp
sahf
nop
cmp
cmpsb
shrb
and
jmp
es
stos
es
rclb
dec
pop
dec
or
xchg
icebp
pop
popa
mov
enter
mov
mov
cmp
scas
daa
mov
add
ficoml
add
xor
ds
aad
dec
or
mov
cld
push
pop
mov
sbb
popa
adc
shll
fs
mov
in
xor
popa
jecxz
inc
ret
xorb
pop
push
imul
xchg
pop
rorb
push
inc
adc
popa
cwtl
mov
push
add
ja
enter
call
mov
or
push
cli
fstps
xchg
or
lcall
jle
adc
mov
lods
test
jle
negl
outsb
pop
add
out
std
pusha
dec
inc
cs
pushf
repz
jno
dec
data16
xlat
push
clc
cmp
pop
mov
dec
sub
mov
je
stc
pop
pcmpgtw
mov
pop
aad
sub
sti
shll
xchg
or
flds
in
jge
pop
inc
bound
fistps
xchg
repz
sub
icebp
clc
pop
es
popa
repz
cmp
jnp
mov
in
lret
stc
sub
out
xchg
pop
ret
xchg
or
fnstsw
push
fidivl
sti
sbbl
stos
dec
and
aas
lcall
cmp
sub
ror
loopne
subl
cltd
inc
sub
cmpsb
sub
aad
dec
push
repnz
or
mov
xor
lret
inc
adc
adcl
addr16
pop
dec
lcall
ds
negb
and
lahf
scas
jmp
xor
push
dec
popl
ror
cld
loope
jp
in
fdivrs
imul
jl
sub
mov
ret
popa
gs
clc
shll
mov
pop
add
vaddpd
lcall
fiadds
into
mov
mov
sbb
pop
add
inc
inc
mov
pop
iret
pop
mov
cmp
mov
jb
mov
jo
sub
pop
jmp
ficoms
jmp
sti
sbb
inc
fbstp
add
pop
out
popa
sbb
xchg
cmp
fldl
je
int
or
or
stos
fwait
inc
cwtl
jbe
mov
jl
aam
outsb
cmpsl
xor
jne
jecxz
mov
cmpsl
jl
push
dec
mov
pop
mov
pushf
shlb
in
in
test
sub
xor
and
sub
mov
lods
mov
mov
add
cmpsb
es
mov
inc
adc
jno
xor
rclb
inc
jle
aad
jle
push
jnp
std
std
adcl
and
stos
sbb
jg
mov
cmc
mov
fidivs
stos
push
add
leave
lods
sub
cmp
imul
jne
notl
jbe
shr
aam
push
or
in
aad
roll
jne
inc
adc
imul
loop
imul
lock
fiadds
aam
and
pusha
fwait
sub
cli
cmp
adc
jg
insb
mov
jmp
or
xor
add
pop
adc
xchg
inc
cs
jno
pusha
out
dec
push
fstpt
adc
push
dec
add
mov
fwait
dec
fnstsw
ret
xchg
aas
or
arpl
stos
daa
inc
andl
insb
sbb
fistpl
inc
outsl
in
push
inc
leave
mov
dec
fdivrl
adc
bound
or
ret
xor
das
pop
std
stos
aad
sub
mov
lods
data16
lret
jle
sub
popf
cmp
pop
mov
fsubs
inc
lfs
cmpsl
xor
xor
addr16
cmc
bound
inc
fs
cmpsb
lcall
out
sahf
jno
push
mov
rclb
dec
inc
call
in
ljmp
ret
sub
adc
addr16
mov
pop
je
cld
rcll
adc
cmpsl
ljmp
inc
shll
xchg
fstpt
push
jbe
cs
lock
lock
dec
addr16
xchg
jg
xlat
jns
stos
push
or
mov
mov
stos
dec
adc
lret
xchg
push
and
in
jbe
pcmpgtd
push
leave
out
enter
sbb
xchg
cmp
cmc
sbb
mov
push
pop
out
jno
mov
jg
jmp
inc
or
aaa
cwtl
movsl
adc
ds
cli
lahf
sub
sahf
leave
test
lret
inc
cmc
push
cli
xor
push
jle
mov
mov
iret
mov
mov
pop
add
out
xchg
pop
lds
testb
cmp
rcll
ret
push
cli
jne
adc
lcall
psubb
call
shll
push
add
test
data16
pop
idivl
push
mov
jbe
or
cltd
stos
cs
shrl
movl
dec
adc
mov
xchg
stos
xor
adc
in
jecxz
xor
sub
arpl
cmp
push
push
cli
test
sahf
inc
ret
mov
xor
fwait
or
faddl
ret
push
fwait
mov
and
imul
scas
ror
jbe
pop
pop
mov
sub
xchg
cmp
cmp
lock
jge
pop
fldt
mov
stos
mov
call
sahf
insb
and
mov
cmp
push
sarl
add
cmp
jnp
xchg
push
and
in
jnp
jns
or
fistps
mov
mov
mov
outsb
mov
rorl
and
dec
mov
mov
mov
mov
pusha
in
ds
mov
cmp
or
add
cmp
jbe
pop
xor
pop
mov
lret
mov
movsb
sub
adcb
neg
out
repnz
jne
mov
movsb
iret
mov
mov
dec
jge
pushf
cmp
arpl
ja
and
insl
sub
pop
incb
xchg
test
mov
xlat
sbb
or
and
inc
xor
in
cmp
ss
shr
jbe
push
sub
mov
inc
pop
scas
mov
pop
add
mov
fnstcw
adcl
popf
dec
inc
push
add
pop
stc
mov
mov
in
addl
stos
xor
mov
popf
jle
jmp
mov
mov
sub
pop
push
ret
int
push
mov
cmp
lret
mov
or
pop
into
adc
sbb
lods
scas
xchg
pop
push
sbb
add
lcall
out
lahf
pop
cld
icebp
sbb
push
test
mov
insl
dec
mov
pop
jg
or
and
ljmp
dec
or
mov
mulb
push
gs
sub
insl
jmp
push
mov
dec
xchg
mov
ja
cmp
jb
fsubrl
and
or
pushf
inc
addr16
pop
mov
stos
jbe
bound
mov
dec
fldenv
push
add
popa
sbb
mov
cmpsl
jmp
cltd
jg
lahf
movsl
xor
add
popa
idivb
cmp
insb
std
lds
pop
mov
mov
imul
aad
addb
iret
mov
and
daa
cmpsl
loopne
add
clc
repz
pop
stc
lret
pop
les
hlt
dec
in
jg
and
ja
pop
jns
les
icebp
fistpl
mov
clc
aam
adc
lfs
adc
dec
add
ret
xlat
sub
mov
daa
cmp
loopne
out
xchg
cltd
xor
cld
or
xchg
push
jno,pt
add
sub
dec
xor
mov
dec
mov
add
popf
inc
jl
inc
pop
leave
jo
jecxz
sbb
add
cltd
ret
scas
cmp
lods
xor
sub
jne
out
movb
xchg
mov
testb
movsl
cmp
test
sub
mov
mov
cmpb
add
or
or
dec
pop
jp
jo
and
popf
cmpsb
jbe
jno
mov
mov
jecxz
dec
adc
mul
imul
jmp
dec
mov
cmp
xor
pushf
sub
push
add
xor
mov
cmp
imul
mov
into
inc
push
pop
std
jl
pop
cld
jecxz
out
cli
dec
or
fdivs
lds
fidivrl
and
aam
fiadds
or
cltd
xor
push
push
dec
push
test
loop
out
leave
jle
add
bound
push
nop
jno
js
fdivrl
div
pop
insl
fcoms
adc
cltd
mov
scas
sbb
outsl
out
or
ja
enter
shll
mov
in
xor
in
test
xor
bound
or
xor
adc
out
mov
scas
insb
out
xchg
imul
mov
cld
popa
xchg
mov
out
xchg
push
adc
std
fstpl
int3
shlb
add
rorb
arpl
sbb
imul
cs
in
push
mov
pusha
cld
pusha
icebp
loop
in
insl
pop
cli
or
scas
pop
rolb
xor
and
jecxz
pop
clc
jne
xor
cs
mov
lahf
call
xor
mov
out
stos
pop
mov
adc
cld
inc
data16
mov
xor
push
mov
nop
mov
scas
in
jbe
pop
cmc
pop
cmp
xor
nop
dec
nop
jbe
add
xor
aas
push
inc
or
das
mov
inc
inc
or
cmp
test
mov
je
jbe
in
es
les
mov
mov
jnp
andl
test
dec
adc
out
jb
mov
in
jo
jmp
push
movsl
in
pop
in
fadds
push
or
mov
mov
pop
push
jge
add
hlt
xchg
cmp
pop
mov
xchg
dec
xchg
ret
outsl
cli
cmp
cmp
lcall
or
fdivp
std
pop
or
repz
xchg
jp
arpl
sahf
inc
in
mov
mov
gs
push
cli
push
jae,pn
jnp
sub
das
out
ret
mov
xor
arpl
lret
lds
jae
out
push
sbb
cmpsl
cwtl
cmp
push
mov
fidivrl
lds
xchg
mov
mov
sub
push
add
pop
sub
sarl
sub
push
popaw
notb
inc
adc
lea
mov
insw
inc
adc
jnp
ss
pop
cli
loopne
addr16
xor
mov
xor
jbe
xchg
pop
xlat
mov
ljmp
adc
or
fldl
pop
dec
je
sub
inc
ss
mov
daa
jne
cmpsb
xor
movsb
sub
int3
pushf
cmp
popa
ret
repnz
ss
adc
xchg
iret
adc
fwait
jmp
mov
hlt
mov
in
xchg
enter
int3
arpl
inc
add
pop
sub
pop
ret
mov
stc
nop
push
cld
es
das
aas
sti
pusha
push
aas
lret
nop
sub
cwtl
inc
sbb
adc
xchg
push
adc
sahf
mov
in
sbb
cmpsl
pushf
dec
sbb
mov
stos
xchg
and
sub
mov
or
sarl
jle
lret
mov
inc
scas
inc
or
xchg
rorb
stos
sbb
mov
xchg
cmp
cmpsb
jo
rcrb
ds
or
jb
add
sti
inc
or
and
inc
stos
push
cld
or
adc
repnz
ret
out
mov
test
adc
lods
nop
ds
or
jb
leave
orb
or
and
dec
test
xor
in
jae
lds
pop
add
daa
mov
pop
or
cld
and
xchg
jmp
in
jbe
xchg
inc
outsl
pop
cld
psubusw
xchg
pop
sarb
lret
xor
cmp
inc
xor
lea
pushf
jbe
sahf
push
out
fadd
xchg
inc
clc
add
xchg
and
cmp
mov
jno
std
rcrl
orb
mov
xchg
jne
jg
push
std
and
and
ja
sbb
rorl
out
jno
addr16
jno
insb
mov
push
and
sbb
js
xor
outsl
pop
pop
ja
loopne
mov
imul
push
es
shl
pusha
lcall
mov
sbb
jmp
jmp
inc
fidivrs
ficoml
mov
mov
scas
add
je
add
push
push
lds
into
or
or
mov
and
add
pushf
inc
dec
push
in
insb
push
xchg
stc
push
dec
dec
fwait
cmp
xchg
pop
sti
incl
shrl
dec
sbb
pop
pop
outsb
pop
cmp
std
pushw
jg
rcl
inc
inc
push
icebp
add
lea
xor
test
cmp
gs
popf
and
jbe
xchg
lcall
in
test
cmpsb
lods
ss
sbb
test
dec
rsm
mov
cltd
inc
xor
dec
adc
aad
jle
aad
ss
jg
scas
addr16
or
pop
fldl
mov
sti
gs
negl
in
cli
data16
mov
xchg
cmp
iret
mov
jb
xor
test
insl
icebp
aam
lret
in
jl
adc
hlt
gs
mov
mov
sub
xchg
cs
mov
int
sub
lds
aam
adc
outsb
jmp
mov
adc
imul
ret
push
add
fdivs
test
and
aaa
push
rcll
add
push
jp
into
xchg
jno
loop
bound
mov
scas
adc
sbb
push
xchg
ds
push
dec
std
gs
sub
mov
loope
test
lea
out
aam
dec
push
cli
xchg
mov
cld
fisubs
mov
push
in
jb
std
dec
adc
inc
or
jnp
insl
lea
lock
xor
pop
jmp
mov
cmp
jle
loop
inc
fs
ret
or
rorl
or
jns
scas
gs
cmp
xchg
aas
xchg
xchg
lods
fldcw
lds
sbb
rep
lahf
inc
mov
fldl
fbld
daa
mov
adc
stc
daa
data16
push
cmp
pop
push
sti
xchg
adc
pop
xchg
and
mov
fdivrl
int3
nop
mov
mov
xlat
enter
fsubs
sub
mov
inc
aaa
mov
or
add
mov
test
incl
mov
add
xor
outsl
add
add
adc
stc
nop
dec
mov
pop
andl
cmp
loopne
mov
imulb
std
arpl
out
pop
mov
xchg
add
imul
add
adc
jne
popf
stos
bound
jbe
and
lock
xor
push
clc
jl
jae
mov
js
push
movsl
rolb
pop
hlt
inc
adc
es
std
jb
mov
or
mov
lea
ja
fmuls
pop
pop
lcall
dec
hlt
pop
enter
push
pop
loope
mov
test
adc
mov
xlat
jg
je
inc
ds
cmp
and
push
or
sti
jno
xor
fstl
dec
adc
add
mov
stos
lds
popa
sub
inc
stos
fs
add
rorb
adcl
hlt
rcll
mov
repnz
push
je
xor
jl
stos
call
cmc
roll
xchg
push
add
xor
inc
push
ds
addr16
pop
pop
sahf
xor
addb
dec
or
and
sub
negb
adc
das
pop
mov
pop
lret
ljmp
out
outsb
adc
in
jl
cmpsl
mov
mov
gs
ficoms
fs
dec
or
cmp
cmpb
or
xor
int
lahf
inc
push
push
nop
cmp
pusha
in
cmp
mov
mov
filds
mov
mov
jle
lcall
sub
cmp
shr
adc
inc
or
jne
lcall
fnstcw
test
push
jbe
rorb
cltd
lcall
test
sbb
mov
cmpsl
sbb
in
imul
sub
cwtl
and
stos
sub
ds
inc
outsb
fdivl
sub
loop
mov
mov
lahf
fbstp
cwtl
lods
stos
mov
sub
jg
mov
cmp
scas
sub
jb
out
outsb
cmp
cld
dec
and
rorb
cmp
mov
leave
xchg
scas
mov
inc
mov
sub
insb
pop
jbe
insb
test
push
cli
mov
or
add
add
xor
filds
fnstcw
pushf
fisubs
push
push
insb
out
mov
fnstsw
test
je
out
jl
add
int
test
pop
and
les
sub
fnstsw
xor
cmpsb
jbe
jl
fsubrs
lea
add
jle
imul
arpl
mov
mov
ja
sbb
push
add
scas
jae
pop
xorl
gs
sbb
stos
in
lret
mov
cli
dec
or
sub
pop
aaa
fsub
jne
sub
mov
sub
test
pop
data16
xchg
andb
enter
mov
ficomps
in
jne
mov
arpl
pop
lcall
into
jl
popf
sbb
ss
lret
addr16
mov
orl
sahf
aad
cltd
cmp
add
ja
js
push
and
in
test
xlat
mov
stc
mov
mov
xlat
xorb
es
cmp
ja
dec
or
insl
and
add
repz
sahf
cmp
pop
mov
repz
fdivrl
out
adc
pop
push
or
test
pop
fcmovnu
jp
inc
pop
mov
jmp
imull
stos
jbe
mov
and
push
test
jno
fld
mov
sbb
insl
out
adc
aam
daa
mov
push
xor
push
or
mov
push
iret
xchg
mov
lods
add
rcrl
js
sbbl
push
test
mov
aaa
fwait
sub
and
cmp
adc
mov
add
push
sub
push
jg
mov
lcall
sbb
pop
es
pushf
add
pop
pop
lret
leave
mov
scas
mov
lea
push
add
adc
test
in
mov
cmp
xor
in
sub
ss
clc
and
addr16
loop
shlb
sbb
jg
ss
add
addl
mov
adc
dec
or
cmp
cmp
cmp
sbb
jns
rorl
adc
jbe
xor
mov
rclb
inc
adc
ficompl
pusha
hlt
add
in
sub
sub
xor
push
dec
aam
or
icebp
push
adc
test
inc
push
mull
mov
scas
cmp
xor
leave
and
cmp
faddl
jbe
lds
std
stc
cmpsl
sub
add
sbb
dec
adc
in
out
xchg
repnz
mov
mov
inc
std
mov
push
out
int3
dec
xor
shll
out
push
inc
and
rolb
sbb
push
push
mov
mov
xchg
inc
sbb
sbb
lea
dec
pop
inc
and
cltd
add
es
stos
dec
or
xchg
outsb
jmp
jbe
stc
pop
bound
int
xor
and
mov
push
pop
scas
inc
mov
mov
pop
scas
dec
adc
lods
xor
orl
mov
xor
je
push
loope
sbb
addb
cld
cmp
mov
pop
add
mov
into
xchg
test
fnstsw
mov
das
mov
outsb
add
sti
nop
scas
xor
push
pop
mov
aaa
nop
arpl
jo
jb
mov
int3
xchg
lahf
test
addr16
loop
mov
jl
data16
hlt
jg
sbb
int3
inc
fadds
or
pop
cmp
pop
decb
pop
xchg
sub
sub
pop
loop
jb
enter
xchg
sbb
cmp
cmp
pop
pop
mov
sub
dec
xlat
js
xor
enter
mov
test
inc
adc
and
and
or
je
sti
xchg
pop
xchg
inc
or
cmpsl
xor
insb
dec
push
in
jl
mov
or
lret
mov
mov
push
fwait
imul
in
push
cmc
fidivrl
imul
out
lcall
mov
mov
movsb
add
mov
ret
add
mulb
jns
lret
sbb
ja
mov
out
adc
pop
sti
sub
andl
jl
aas
into
mov
imul
jae
cli
lcall
push
push
mov
scas
sub
lret
jge
fcomps
les
mov
mov
in
leave
andl
adc
mov
cmp
ret
cwtl
cld
pop
and
push
decl
aad
insb
pop
lods
outsb
add
or
mov
jmp
jns
push
add
xchg
lods
out
test
js
je
add
jae
test
ret
std
pop
clc
sbb
adc
dec
cmp
orb
fadds
lods
aas
movsb
mov
mov
je
lods
ljmpw
or
pop
add
dec
xchg
data16
pop
xchg
cmp
jmp
cli
xchg
leave
cmc
das
daa
dec
sbb
lcall
imul
lcall
icebp
mov
std
dec
loope
inc
mov
test
ret
pop
xchg
sbb
cmpb
sbb
mov
cs
movsl
jge
jg
jl
xchg
outsb
cltd
inc
pop
fiaddl
adc
and
aad
fcoml
dec
adc
scas
mov
and
mov
xchg
lock
cld
popa
popa
out
xchg
cltd
js
sub
shll
mov
test
movsb
sub
shlb
out
test
mov
movsb
sub
mov
push
jp
mov
negl
sarb
add
xchg
xlat
imul
mov
or
pop
popa
scas
fadds
sbb
popf
inc
notb
pop
sub
push
mov
dec
mov
fadds
inc
aam
test
mov
jbe
jb
shrb
icebp
lods
or
loopne
sub
das
gs
xchg
push
dec
loopne
mov
sbb
mov
movsb
cmp
test
pop
ret
inc
mov
ja
lcall
ss
fbstp
pop
sbb
xchg
jb
cmp
fistl
pop
lock
dec
ja
cmpl
xchg
sub
mov
mov
ficoms
push
arpl
data16
or
test
inc
sub
jae
or
lds
shrb
inc
fiadds
cmp
cld
push
mov
sbb
enter
xor
jbe
sbb
push
dec
test
xchg
mov
fidivs
fcomps
mov
ret
hlt
sub
rcrb
sbb
lods
addr16
cwtl
into
jne
add
xchg
sub
jbe
je,pt
dec
cmpsb
pop
xchg
sub
mov
dec
in
out
test
push
sahf
pop
out
xchg
stos
or
loopne
std
sub
cs
xchg
dec
dec
loopne
mov
sbb
mov
movsb
cmp
repz
inc
mov
ja
cltd
rcrl
call
push
push
sbb
xchg
jno
cmp
ficoml
pop
lock
cmp
push
dec
ja
xorb
out
push
mov
mov
fstl
push
bound
iret
data16
or
test
inc
sub
jb
or
les
lods
in
push
iret
inc
fiadds
cmp
cld
push
mov
sbb
mov
jbe
sbb
push
dec
test
xchg
mov
fidivs
xlat
sbb
repz
rcrb
sbb
lods
cmp
xchg
int
or
mov
xchg
sub
jbe
cmp
mov
movsl
pop
xchg
sub
mov
dec
loop
out
xchg
shrl
insb
or
xchg
test
dec
loope
sti
sub
sub
push
loopne
mov
sbb
rorb
movsl
cmp
icebp
test
pop
ret
pop
mov
jbe
loope
loope
rcrl
add
sbb
push
mov
cmp
cmp
fcoms
pop
icebp
sub
cmp
adc
js
jle
push
out
data16
xchg
sub
mov
fistl
imul
lock
or
movsl
sbb
aas
sub
jo
or
ret
shrb
inc
fdivrp
xor
data16
push
mov
mov
lds
ja
sbb
pop
dec
cmp
jbe
aam
mov
mov
cmp
push
adc
inc
js
out
test
lret
cld
mov
out
out
xchg
sub
or
cmp
dec
mov
ret
shrl
scas
mov
loopne
lock
shrb
imul
xchg
cmpsl
push
movsl
fmuls
sub
sub
add
mov
push
in
push
cmp
and
pop
mov
cmp
jns
xchg
ret
add
cwtl
xor
loopne
sbb
mov
cmp
xchg
insl
movsl
cmp
mov
negl
sub
cmp
adc
adc
out
fs
xchg
cs
test
mov
mov
and
xchg
sub
inc
shrl
sub
dec
pop
xchg
icebp
mov
jg
addr16
sbb
out
test
es
push
dec
loop
js
shrl
dec
xor
push
sbb
dec
xchg
sbb
fcmovb
pop
or
mov
js
push
ret
cmp
mov
loopne
fwait
rcrl
xchg
out
and
sbb
lock
cmp
xchg
leave
ja
sti
mov
lock
xchg
sub
cmp
dec
mov
ret
hlt
lods
mov
ficoms
shrb
imul
xchg
push
movsl
or
sub
sub
add
mov
pop
in
push
ds
xchg
mov
cmp
jecxz
fists
add
sbb
mov
cmp
xchg
imul
mov
negl
fistpll
rcll
dec
jp
jl
pop
out
bound
jbe
mov
mov
and
xchg
sub
inc
aam
jbe
mov
pop
xchg
repnz
jge
scas
ljmp
add
or
push
dec
jecxz
jbe
shll
dec
xor
pop
sbb
dec
xchg
sbb
fcmovb
pop
or
mov
jns
adc
pop
inc
addb
mov
loopne
cltd
rcrb
mov
mov
cmp
push
push
sbb
icebp
cmpsl
pusha
cmp
xchg
enter
mov
lock
xchg
cs
add
outsb
mov
mov
rcl
rep
mov
fcoml
mov
shrb
push
lock
mov
dec
in
cmc
sub
es
imul
inc
dec
loope
mov
and
cltd
push
aas
aaa
jmp
sbb
mov
movsb
cmp
in
ficoms
add
pop
push
and
push
ds
mov
mov
fidivrs
rorl
dec
jp
jnp
pop
out
popa
pushf
cwtl
das
into
xorb
out
mov
and
xchg
sub
inc
aam
jne
mov
pop
xchg
repnz
jl
scas
jmp
out
test
cmp
lds
or
push
mov
jne
shll
dec
xor
decb
cmpsb
cmp
sahf
fld
pop
or
mov
jns
adc
pop
inc
jg
xchg
mov
loopne
cwtl
rcrl
mov
mov
cmp
push
or
pop
icebp
cmpsb
pop
cmp
nop
js
stc
mov
lock
xchg
cs
add
xor
push
xchg
sub
repnz
repnz
shrb
adc
lock
mov
dec
in
hlt
sub
and
inc
dec
loope
mov
and
cwtl
push
aas
ss
mov
in
fstl
add
push
push
and
imul
pop
repz
rorl
dec
jp
jp
pop
out
pusha
fwait
cwtl
das
int
jbe
mov
mov
and
xchg
sub
inc
aam
je
mov
pop
xchg
repnz
jnp
lods
call
out
test
cmp
lds
mov
mov
fildll
adc
dec
xor
decb
cmpsb
cmp
popf
fadd
pop
or
loop
pop
adc
pop
inc
jle
xchg
scas
gs
xchg
rcrb
mov
mov
cmp
push
or
mov
je
icebp
movsl
pop
cmp
pop
js
clc
mov
lock
xchg
cs
add
xor
mov
sahf
push
xchg
sub
icebp
test
dec
ficoml
repnz
imul
mov
push
movsl
rorb
dec
in
repz
and
imul
inc
dec
loope
mov
and
xchg
push
aas
xor
push
pop
mov
cmp
in
fmull
add
adc
ss
xchg
push
mov
mov
fdivrl
rorl
cs
out
pop
lcall
mov
mov
pop
aam
sub
inc
aam
jae
mov
pop
xchg
repnz
jp
lods
out
cmpsl
sbb
out
test
cmp
lds
or
push
mov
jae
shll
fcomip
xor
decb
cmpsb
cmp
pushf
xlat
les
mov
loop
pop
adc
pop
inc
jge
xchg
scas
fs
xchg
iret
push
mov
mov
cmp
push
or
icebp
movsb
pop
cmp
mov
js
imull
xchg
cs
add
xor
dec
popf
push
xchg
sub
lock
mov
fsts
repnz
shrb
adc
jg
cs
push
movsl
rorl
dec
in
repnz
and
mov
jne
mov
loope
push
aas
xor
xchg
mov
movsb
cmp
in
fisttpl
add
adc
and
addr16
rorb
pop
repz
cmp
or
jp
js
pop
out
pop
cltd
cwtl
das
lret
jg
or
push
rcll
jb
mov
pop
xchg
repnz
jns
stos
out
cmpsl
pop
int
test
cmp
lds
or
jecxz
jb
ret
push
push
lds
imulb
mov
popa
pop
push
cmp
fwait
aad
pop
pop
mov
loop
pop
adc
pop
inc
jnp
xchg
lods
arpl
js
int
mov
mov
xchg
call
or
mov
jno
repnz
ret
jns
cmc
lods
pop
icebp
ficoms
cwtl
das
dec
js
xor
dec
pushf
push
xchg
sub
out
movsl
mov
xlat
adc
mov
shrb
adc
jge
das
out
push
movsl
iret
or
cmp
sub
and
add
scas
mov
loopne
push
inc
xor
xchg
xchg
movsb
cmp
in
fimull
lcall
and
mov
sbb
mov
pop
hlt
and
cmp
or
adc
pop
out
pop
cwtl
cltd
xor
jge
or
sbb
aas
aad
jno
mov
push
xchg
repz
ja
addr16
lret
out
test
aaa
das
push
mov
mov
fldt
or
mov
pusha
adc
cmpsl
ds
xchg
push
mov
jecxz
pop
push
ret
pop
inc
jp
cwtl
stos
popa
loope
xchg
int3
pop
mov
mov
xchg
out
ds
pop
push
mov
jo
repz
ret
hlt
stos
pop
icebp
fcoml
js
das
imul
insb
out
mov
hlt
mov
shrb
arpl
test
jnp
xor
out
push
movsl
int
dec
out
out
sub
pop
pop
insl
add
inc
dec
loope
lods
mov
fists
stos
inc
xor
xchg
xchg
movsb
cmp
out
add
sub
loopne
adc
mov
arpl
sbb
mov
pop
cmc
and
cmp
or
jbe
pop
out
pop
xchg
lcall
ljmp
add
insl
jo
mov
push
xchg
hlt
mov
jne
cmpsl
in
test
sti
ss
addr16
movsb
dec
mov
mov
fisubrl
rorl
sub
push
aas
mov
xchg
add
es
pop
or
pop
jns,pt
cltd
stos
pop
loope
xchg
lret
and
in
aas
dec
add
pop
hlt
mov
sarl
test
lcall
push
xchg
sub
in
mov
cmc
mov
shrb
bound
stos
xchg
inc
lock
xor
in
push
movsl
lret
push
push
out
in
sub
sbb
ds
loope
lods
mov
ficoms
stos
inc
xor
xchg
test
movsb
cmp
out
fmuls
add
sub
loopne
cmovl
mov
bound
sbb
mov
pop
cmc
and
cmp
pop
inc
jl
jne
pop
out
pop
xchg
lcall
jmp
xchg
sub
cmp
mov
push
nop
hlt
mov
je
cmpsb
jecxz
test
cli
xor
or
in
insl
sub
sahf
fldcw
rorb
sub
and
push
aas
mov
xchg
add
movsb
cmp
and
ret
pop
cmp
pop
loope
nop
lret
sti
mov
xchg
jecxz
aas
dec
add
mov
outsb
pop
hlt
lahf
push
cmp
xchg
jnp
repnz
icebp
fsts
lcall
addr16
sub
in
mov
cmc
mov
repz
popa
adc
js
xor
in
push
movsl
lret
out
jmp
ret
sbb
outsb
add
outsb
stos
mov
fisttpll
stos
inc
xor
xchg
test
out
xlat
mov
pop
mov
fsub
ja
dec
and
popa
popf
inc
xlat
into
sbbb
out
pop
cmc
and
cmp
push
inc
jl
je
pop
out
pop
xchg
lcall
call
xchg
sub
cmp
insl
insl
and
mov
jae
push
adc
out
xchg
xor
sbb
movsl
dec
test
mov
sub
popf
xlat
insb
add
mov
mov
pop
adc
inc
jge
aas
scas
xchg
xchg
rol
pop
add
in
push
or
pop
cmp
pop
loop
nop
enter
mov
xchg
loop
aas
dec
add
mov
insb
pop
hlt
popf
push
cmp
adc
cmpsl
pop
repnz
lcall
gs
jle,pn
insl
ljmp
mov
pop
adc
ja
xor
loop
xsha1
cmpsb
leave
add
xor
sub
add
insl
test
imul
loop,pn
push
adc
enter
movsl
cmp
mov
ret
pop
mov
fsub
js
dec
and
popa
fwait
inc
xlat
int3
sbbb
push
aad
rolb
inc
jl
jb
pop
lock
xchg
lcall
out
dec
sbb
xchg
sub
cmp
insl
imul
dec
push
mov
mov
fists
test
stc
xor
bound
xsha1
cmpsb
dec
orl
insb
sub
add
mov
mov
pop
adc
inc
jnp
aas
lods
mov
xchg
into
pop
add
in
push
or
pop
cmp
pop
jecxz
nop
and
loop
aas
dec
add
mov
push
hlt
fwait
push
ds
mov
pop
repz
lcall
arpl
das
jle
insl
call
or
mov
repnz
and
adc
ja
xor
loopne
adc
xor
lds
push
outsb
add
insl
cmpsl
mov
stos
inc
sub
mov
adc
enter
cmpsb
cmp
rorl
add
and
inc
and
pusha
cltd
inc
xlat
lret
mov
jmp
cmc
sbb
cmp
add
es
icebp
push
xchg
lcall
in
dec
push
int3
xchg
sub
imul
hlt
mov
adc
clc
das
xor
pusha
sbb
cmpsl
dec
orl
pushf
shrl
mov
mov
pop
adc
inc
jns
aas
stos
arpl
pop
mov
ds
or
pop
cmp
lcall
and
loopne
inc
xlat
inc
add
mov
cltd
push
aas
test
pop
hlt
or
jnp
sub
push
xchg
dec
cltd
xor
outsb
out
mov
iret
pop
testb
pop
adc
mov
mov
xor
ficoms
push
out
jmp
outsb
add
insb
movsl
mov
xlat
lea
mov
loope
and
dec
enter
cmpsl
ds
out
roll
add
and
jecxz
or
add
enter
mov
pop
cmc
sbb
cmp
adc
pop
repnz
lcall
loop
dec
adc
xchg
cs
xor
mov
push
mov
mov
fistl
test
imull
adc
mov
das
fwait
shrl
mov
mov
push
add
test
test
lret
cld
mov
aas
out
in
dec
or
pop
cmp
lcall
and
fists
xlat
inc
add
mov
xchg
push
inc
xlat
cmpl
cmc
aad
fwait
xor
pop
mov
xor
xlat
outsb
in
mov
lea
out
insl
and
stos
mov
mov
leave
fcoml
push
out
call
outsb
add
imul
add
loopne
and
dec
enter
test
gs
out
iret
xchg
pop
mov
jnp
inc
and
pop
xchg
inc
xlat
jg
mov
out
cmc
sbb
ds
cmp
and
repz
lea
adc
lret
cld
xor
insl
gs
hlt
mov
fsts
test
imulb
xor
pop
pop
adc
scas
imul
add
mov
mov
push
push
insl
add
jne
aas
cmpsl
popa
mov
xchg
enter
mov
inc
out
in
dec
pop
enter
add
mov
and
ficoms
inc
xlat
inc
jmp
mov
xchg
push
inc
xlat
xorb
cmc
aam
fwait
xor
mov
xor
xlat
outsb
jecxz
mov
lea
out
insl
and
stos
mov
mov
xor
fistl
out
out
sbb
add
push
mov
aam
insb
add
fisttps
pop
jnp
test
fs
out
into
test
pop
mov
add
and
in
or
mov
pop
xchg
inc
xlat
lds
mov
out
cmc
pop
sarl
aad
cmp
and
mov
adc
leave
cwtl
das
sti
xor
insl
fs
dec
dec
test
mov
fcoms
test
cmc
sub
pop
push
adc
lods
push
insb
add
mov
mov
push
or
test
cmpsb
pusha
mov
xchg
mov
inc
in
in
dec
push
enter
add
mov
add
fstl
inc
xlat
inc
and
mov
loope,pt
sub
lret
push
or
push
and
mov
out
outsl
adc
notb
dec
dec
outsb
mov
jge
loope
jb
mov
fiadds
loopne
cs
inc
div
aas
mov
sbb
movsb
xor
test
orl
gs
in
shll
pop
int3
lcall
fnstsw
mov
fxch
mov
xor
mov
fs
cs
das
push
push
jge
dec
ja
jl
stos
adcl
push
les
add
std
test
xchg
add
movsb
cmpsl
and
adc
nopl
aam
sbb
sbb
jns
sbb
aas
sbb
shrl
dec
je
orl
jmp
add
jae
jbe
mov
xor
ljmp
or
ja
arpl
xor
test
aas
jl
mov
repnz
and
and
pop
mov
mov
push
test
mov
loope
cmp
daa
xor
and
add
outsb
shll
push
mov
mov
es
pop
enter
jmp
lahf
out
sub
imul
call
or
xlat
outsl
add
inc
sbb
xchg
cltd
pop
jo
add
push
cmp
add
mov
fmuls
xchg
mul
sbb
mov
lahf
test
pop
push
xor
xchg
jae
or
sub
dec
mov
mov
mov
test
mov
xchg
inc
push
stos
loop
jns
aas
cmpsb
add
cmp
and
leave
jge
mov
mov
stos
leave
adc
lahf
imul
or
std
xor
xor
dec
pop
pop
push
and
add
jle
loop
xchg
hlt
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
fisubs
adc
add
mull
mov
popa
and
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jmp
test
inc
mov
insl
ret
ficompl
pushf
and
repz
popa
cmp
lret
pop
or
jns
xor
xchg
out
jnp
jle
mov
imul
lret
fistpl
gs
leave
pop
es
cmp
push
cs
pop
bound
imul
xor
add
pop
mov
outsb
jmp
inc
xchg
sub
cld
pop
pop
mov
xchg
mov
sbb
idiv
sub
pop
and
outsb
adc
mov
insl
loope
lods
pop
fdivrp
xchg
xor
leave
in
jecxz
fisttps
mov
fildl
adc
jb
xorb
mov
fldl
pop
stc
mov
jl
inc
jno
push
dec
jl
stos
setne
inc
jne
and
adc
ficoms
cmp
xchg
notl
sbb
mov
xor
cmp
jg
shrl
sub
loope
btr
xchg
stos
mov
pop
pop
loop
inc
sbb
ds
dec
pop
sub
loopne
inc
mov
loop
pop
inc
repnz
add
scas
fimuls
pop
inc
ds
inc
jnp
push
shr
jnp
outsb
push
push
xchg
adc
xor
loopne
or
xchg
mov
lea
sarb
test
mov
push
jp
add
hlt
psubq
add
mov
insl
xlat
outsl
jns
data16
int
adc
js
mov
xor
js
mov
pushf
cld
decb
xchg
push
movsb
jo
fists
shlb
inc
adc
hlt
popf
push
pushf
clc
insb
les
xchg
mov
pop
test
dec
jl
cmpsb
scas
pop
ljmp
xor
ret
dec
sbb
fcmovne
push
loopne
mov
inc
mov
cltd
mov
dec
test
xor
je
stc
scas
subb
pusha
in
sub
and
cwtl
rol
jns
lods
repnz
sbb
cmp
