sbb
add
push
sub
int
in
cmp
imull
notb
mov
mov
das
push
mov
subb
pop
mov
ret
mov
pop
inc
pushf
arpl
sub
flds
in
loop
shll
jl
cmp
jecxz
movsl
xchg
sarl
orb
imul
add
xor
shlb
ss
adc
mov
or
add
cmp
push
or
push
and
imul
out
stc
sub
movsb
ds
inc
hlt
es
ret
ret
push
xchg
movb
repz
cmpsb
mov
cmp
out
mov
fists
jp
scas
xor
ret
fchs
inc
adc
pop
outsl
add
shlb
decb
cmp
push
fwait
pop
dec
sub
cmp
push
sbb
mov
cwtl
push
jbe
adcb
sub
adc
stos
push
pop
pushf
jmp
adc
aaa
mov
negl
add
push
pop
scas
jg
mov
data16
or
in
jl
jp
fxch
mov
iret
inc
mov
pushf
jge
dec
sbb
jl
ljmp
orb
mov
cmp
or
inc
fistps
mov
and
ja
jae
inc
add
xchg
loope
cmp
cmpsl
mov
mov
loop
sub
push
nop
pop
scas
clc
mov
stc
mov
xorb
sti
or
ret
push
lods
cmp
mov
and
stos
lret
scas
loop
repz
inc
adc
inc
xchg
aad
dec
xchg
sub
les
imul
aaa
daa
pusha
push
push
sbb
pop
and
hlt
jb
call
adc
lret
stc
cmc
xchg
jmp
out
fmul
xchg
mov
pop
ds
jmp
sbb
mov
inc
mov
dec
push
jp
sub
xchg
lahf
loop
les
shlb
push
or
or
aam
or
lods
rorb
adc
adc
and
cwtl
or
movsb
sbb
aas
add
pop
sub
fidivrs
aad
and
mov
scas
push
cli
jo
js
mov
sub
gs
imul
out
add
xlat
call
sub
mov
push
pop
cmpsl
push
add
or
or
pop
addr16
jno
or
imul
xor
shrl
dec
addr16
js
jno
aad
jae
mov
jne
dec
or
pop
std
mov
mov
dec
inc
leave
cltd
mov
pop
clc
out
movsl
cwtl
inc
stc
movsb
pushf
mov
insb
aad
enter
test
add
mov
cli
cli
adc
push
cmp
mov
adcl
repz
add
addr16
movsl
daa
jmp
jno
inc
cltd
dec
dec
jne
jmp
sub
popa
add
xchg
fnstenv
dec
sbb
into
aas
nop
bound
xchg
lods
mov
mov
movsb
shrb
lods
pop
inc
aad
in
stos
dec
xchg
cmpsb
mov
inc
cmpsb
jmp
ss
add
push
orl
je
mov
fdivl
xchg
pop
scas
lods
xchg
not
popa
les
mov
push
rolb
and
pop
nop
pop
sti
aaa
out
pushf
pop
cmp
mov
sbb
pop
mov
jl
mov
lea
scas
ja
or
aam
fdivrs
sbb
fcmove
push
ljmp
pop
dec
and
out
ljmp
mov
and
pusha
sub
mov
in
xchg
mov
popa
jmp
das
rep
and
cmp
aad
scas
idiv
fisttps
xlat
cli
fbstp
jmp
cld
es
filds
leave
jecxz
outsl
outsl
mov
outsb
test
popa
cld
mov
iret
xorb
dec
mov
and
mov
push
mov
hlt
xchg
push
jnp
xchg
lret
fisubs
sti
xchg
dec
jne
xchg
sgdtl
imul
xor
sub
fcmovne
mov
nop
push
cli
add
aam
shll
or
pop
xor
jns
jl
in
and
mov
push
bsf
fwait
push
gs
rolb
icebp
popa
push
jno
mov
xor
cmp
aam
scas
pop
push
mulb
aad
fcomps
xchg
mov
lds
imul
fdivrs
andb
insl
ss
jp
and
repnz
inc
sti
xchg
lods
inc
adc
nop
or
mov
pop
pusha
xchg
imul
gs
cld
xchg
or
jno
xor
inc
stc
mov
pop
and
scas
cmp
cmpsb
cmp
iret
mov
sub
xor
inc
arpl
rcrl
sbb
aam
dec
data16
cli
xlat
dec
cmp
ret
pop
fwait
xor
or
xor
mov
fildll
jae
xchg
push
lods
rorl
scas
movlps
lahf
jns
insb
jge
test
test
push
xchg
add
xor
jbe
out
or
in
cmp
xor
mov
and
stos
dec
xlat
in
xchg
sarl
std
enter
hlt
cmpsl
dec
aaa
cmpsl
inc
inc
movsl
pop
fsubp
ja
and
int
rol
push
jp
xor
mov
xor
popf
mov
add
hlt
test
xlat
or
mov
adc
out
dec
jmp
or
sub
pop
imul
sub
dec
push
pop
in
push
inc
sbb
adc
sub
or
repz
mov
imul
test
test
mov
mov
xor
adc
cmp
mov
lea
xchg
pop
out
adc
adc
sub
insl
ret
cmp
sub
lcall
lds
mov
or
scas
imul
cmp
inc
lcall
rorl
sub
mov
in
mov
lds
inc
popa
jo
or
xlat
inc
loopne
mov
movsl
xchg
movsl
sahf
into
addr16
mov
mov
stos
hlt
dec
clc
pop
test
add
rclb
test
dec
aas
in
loopne
adc
fldenv
mov
rcll
call
jp
xchg
dec
inc
mov
pop
jb
mov
icebp
gs
sub
lds
dec
popf
mov
push
daa
pop
out
add
add
mov
add
lahf
rcrb
xor
mov
int
xchg
out
pushf
jb
inc
pop
dec
in
loope
adc
ret
je
xor
mov
shll
into
cmp
push
hlt
test
std
fmuls
js
mov
mov
jb
jge
rcr
and
and
push
outsl
jno
shlb
scas
divl
out
mov
xlat
ret
or
mov
imul
sub
out
mov
xor
dec
inc
mov
mov
scas
popa
dec
push
cmp
xor
pop
out
xchg
mov
pop
mov
jecxz
cmp
mov
aad
dec
push
bound
xor
push
jmp
cmpsb
mov
dec
frstor
in
shll
sub
pop
jg
add
cltd
push
test
dec
ljmp
lahf
push
lds
mov
push
loop
cmc
push
ret
lds
std
lahf
mov
je
and
ds
sahf
mov
lock
sub
mov
add
les
xor
repnz
xchg
mov
adc
repz
jb
rorl
leave
sbb
jl
inc
push
jnp
adc
icebp
into
lret
and
enter
int
sub
scas
scas
jnp
mov
int3
xchg
cmp
mov
and
inc
cmpsl
xor
int
imul
mov
adc
xor
push
ljmp
hlt
int3
sub
les
adc
pusha
sub
ljmp
repnz
imul
sbb
and
repnz
or
dec
mov
call
pop
daa
movsb
mov
lret
pop
imul
xor
jecxz
addr16
test
xchg
icebp
cmp
js
sub
cmc
pushf
out
xor
xchg
lea
dec
pop
test
out
fstps
xorb
or
shrl
iret
fistpl
lret
ja
rolb
adc
fimull
adc
cmp
lret
cmpsl
adc
lret
lahf
mov
inc
shlb
ret
sub
xor
xor
mov
push
addps
xchg
jl
lds
das
xchg
pop
cmpsl
lock
pop
mov
mov
push
notb
test
idiv
mov
dec
xchg
push
cwtl
icebp
sbb
sub
and
jg
and
adc
test
fsubrs
fcoml
push
popa
add
mov
loop
fs
cmp
les
aad
pop
inc
inc
xchg
repnz
mov
lock
testl
xchg
xchg
mov
sub
adc
xor
xor
out
push
add
stos
or
adc
sbb
outsb
fisttps
push
adc
xchg
inc
mov
aas
lea
cwtl
push
jae
ds
dec
mov
out
mov
pop
jb
xchg
aaa
pop
add
mov
jmp
pop
add
out
cmp
sub
enter
inc
pop
adc
or
aam
in
andb
out
lods
jecxz
mov
cmp
je
ljmp
cmp
pop
aam
add
js
mov
cmp
ja
and
xchg
xchg
loopne
popa
outsl
jle
cmp
xchg
xchg
pop
lahf
js
iret
fwait
loop
pop
jmp
test
shll
test
aas
xor
cmpsb
and
fstps
cmp
std
imul
stos
out
xchg
test
movsl
xor
dec
and
lea
in
push
cmp
xchg
sub
or
jle
dec
xchg
sbb
mov
jne
insb
and
push
call
ljmp
les
push
aaa
ja
out
out
gs
jns
adc
fdivrl
mov
inc
sub
mov
add
dec
inc
test
xor
out
and
push
addb
int
ljmp
movsb
in
inc
and
popf
into
xor
dec
mov
icebp
inc
mov
loopne
mov
xchg
push
cmp
jno
cli
out
or
stc
cltd
or
enter
lahf
or
int
cmp
push
roll
push
daa
lret
xor
dec
mov
scas
mov
ret
ftst
xchg
pop
imul
jg
mov
out
pop
imulb
hlt
pop
and
or
out
xor
sbb
roll
dec
xchg
jne
rcrb
repnz
cmpsb
xor
icebp
shlb
jnp
into
push
adc
mov
and
test
mov
js
jns
mov
inc
fsubrl
cmpsl
adc
es
scas
cmp
jae
sahf
adc
mov
or
cwtl
xor
pop
into
cli
mov
aas
call
mov
pop
in
addr16
mov
xchg
pop
cltd
test
addr16
inc
and
sbb
jns
int3
xchg
cmp
sbb
mov
scas
sarb
add
test
iret
mov
ds
out
test
out
sub
sbb
inc
jmp
cmpsb
sbb
push
fwait
or
or
dec
push
push
fsubrs
jecxz
outsb
popf
inc
aaa
cmp
cwtl
xchg
js
mov
mov
dec
aad
push
sahf
test
rorb
add
mov
outsl
lcall
push
mov
push
xorb
adc
fs
mov
test
mov
and
xor
lea
ss
stos
fsubrs
push
xchg
aad
call
adc
sbb
dec
cli
pop
jae
sub
scas
out
jns
fcoms
call
mov
testb
and
andl
pop
adcl
arpl
pop
push
icebp
sbb
cmpsl
jb
push
mov
ret
addr16
inc
and
mov
xchg
out
push
mov
mov
xchg
pop
inc
cmp
out
inc
adc
and
push
adc
out
mov
mov
inc
scas
add
mov
adc
rorb
or
mov
sub
fs
fadd
es
mov
add
scas
out
test
dec
fcoml
outsl
pop
sbbl
ret
pop
mov
lret
out
icebp
sub
idiv
dec
push
sti
mov
repnz
shl
aas
dec
adc
xor
jg
sub
pop
pop
in
sbb
js
pop
flds
stos
adc
test
leave
bound
ds
arpl
enter
sub
and
push
push
stos
cwtl
addr16
sbbl
push
xlat
mov
fcoml
std
mov
mov
daa
inc
add
movsl
cltd
ljmp
lods
cltd
cwtl
cmp
adc
orb
les
js
inc
out
mov
decb
jne
in
fucomp
push
push
movsb
fwait
bound
xor
stc
daa
push
add
pop
xchg
and
mov
dec
xchg
push
cltd
stos
bound
adc
sti
adc
cmpsb
dec
cmp
mov
ja
movsb
xor
es
mov
mov
and
push
sbb
jb
lcall
fstps
arpl
lods
sbb
and
pop
xchg
xchg
arpl
jecxz
mov
lret
cmp
lods
xor
xchg
je
sub
dec
fwait
mov
out
push
stos
mov
int3
in
sub
sub
and
push
and
inc
ret
fdivl
xchg
cmp
xor
fldcw
mov
je
mov
dec
mull
sbb
clc
adc
subb
sbb
roll
shrl
gs
lcall
sub
and
dec
adc
popw
jmp
fdivrl
ss
repz
mov
hlt
ja
iret
shrb
sbb
clc
shll
in
xor
jecxz
xor
sbb
jbe
push
leave
adc
and
adc
add
jo
xchg
popf
push
lock
mov
jle
sub
lea
outsb
lret
xchg
and
push
pusha
aad
inc
pusha
das
xchg
sub
xor
nop
pop
iret
and
stos
dec
or
shlb
adc
int
ds
add
out
mov
dec
xchg
das
jl
stos
lcall
pop
rcrb
lahf
les
xor
loope
data16
jnp
rol
stc
cmp
rclb
mov
stos
loopne
aad
das
fmull
sahf
or
xor
inc
insl
rcl
out
dec
ret
xchg
pushf
sub
bound
in
repz
movsl
xor
js
inc
arpl
cltd
jp
or
fwait
mov
xchg
mov
or
lea
fistpl
movsl
inc
add
movsb
sub
pop
pushf
sahf
mov
inc
rolb
cmp
ja
sbb
jmp
outsl
loope
inc
lcall
in
jmp
inc
jno
dec
insb
jbe
mov
movsl
jle
bound
dec
xor
stc
and
loopne
push
js
dec
cli
add
push
mov
les
push
clc
jne
push
mov
or
push
mov
outsl
rclb
add
daa
ficompl
xor
dec
push
scas
cwtl
sub
ret
loope
sub
ss
push
push
fwait
pop
movsb
mov
and
into
fs
jns
sub
std
std
rorl
ret
inc
push
and
sub
xor
movl
sub
adc
mov
shl
outsl
or
add
call
dec
int3
add
push
mov
out
jp
push
mov
pop
arpl
andb
or
lods
sbb
jl
test
inc
fs
repz
fwait
cmc
push
dec
jmp
push
notb
mov
inc
pop
repnz
push
jo
shr
mov
imul
scas
mulb
lret
mov
jmp
mov
lods
and
movsl
or
dec
out
scas
sbb
and
pop
aaa
fld
xor
pop
add
call
inc
xor
mov
inc
mov
adc
pusha
fildll
adc
inc
xchg
bound
rorb
add
imul
repnz
sti
fldt
insl
les
es
fists
xor
or
xchg
dec
push
cmpsl
sub
imul
int3
or
lret
dec
in
shrb
aas
inc
ljmp
imul
lds
xchg
xchg
inc
xchg
enter
out
add
fdivl
xchg
notb
sbb
stc
cmc
outsl
movsl
rclb
jae
pop
lock
cltd
pushf
sbb
inc
mov
jne
and
push
daa
mov
mov
sbb
icebp
jns
or
jg
addl
mov
jle
sbb
inc
outsb
aas
mov
xchg
aam
mov
vmaskmovdqu
leave
testl
jl
push
push
js
add
popa
push
fsubr
push
ja
inc
xchg
fs
lock
mov
push
into
add
or
out
and
mov
jne
lahf
dec
and
mov
xchg
inc
icebp
push
jnp
loop
jbe
lods
cli
scas
fsubl
push
mov
dec
fisubl
bound
in
jbe
inc
js
idivl
stos
loop
sub
jg
cmp
cli
mov
fisubs
fistl
mov
ss
negb
mov
cmp
out
shrb
jle
aad
testb
daa
mov
icebp
mov
jns
mov
je
clc
jo
jg
addb
push
bound
push
fiadds
loope
mov
lret
mov
scas
in
enter
stos
jp
cli
imul
bound
cmp
mov
push
out
mov
sub
pop
jo
inc
adc
and
mov
loop
cmc
cmpsb
sub
outsl
sbb
pop
push
push
sub
sub
test
cmp
inc
repz
mul
stc
roll
cld
inc
push
ret
dec
mov
out
out
add
outsb
push
cmc
mov
adc
pop
ljmp
pop
je
xor
jle
sub
push
es
pop
iret
xlat
cmp
jmp
fucomp
add
jo
or
dec
adc
and
xchg
sub
imull
sbb
mov
fsubrs
pop
sbb
cmp
mov
in
aas
cwtl
repz
or
xlat
fnstsw
cmc
lret
sbb
xchg
and
inc
outsb
and
sub
pop
out
jecxz
lret
adc
cld
movsl
movsl
add
shlb
out
mov
pop
jl
popa
mov
sub
iret
ss
ret
shr
sub
aam
inc
dec
lods
inc
pushf
outsl
movsl
xor
xor
shl
sbb
sub
and
sahf
adc
sahf
pop
mov
jno
or
aad
lea
jmp
sbb
lds
notl
pop
ds
lcall
mov
inc
cmc
pop
movsb
jp
push
fsubl
jae
inc
lods
outsl
pop
daa
xor
pusha
sbb
in
mov
xor
sti
sbb
pop
imul
lods
mov
mov
mov
jecxz
xchg
aad
and
aad
test
loope
fnstsw
lahf
jmp
lcall
fbld
inc
sar
add
mov
sti
pop
popa
scas
cmp
stc
icebp
jg
movsb
cwtl
cmp
mov
jo
ds
lock
fwait
lret
out
sbb
add
xchg
adc
ss
mov
jo
jb
or
roll
lea
mov
outsl
jnp
push
sahf
add
xchg
dec
cmpsl
inc
in
mov
jmp
mov
fdivrl
lds
xchg
inc
lret
jcxz
pop
addl
sbb
mov
xlat
in
outsb
stos
subb
aaa
push
in
ss
cmp
lds
sub
push
nop
fiaddl
arpl
inc
mov
insl
lods
sar
dec
jl
pop
push
aad
mov
rcrb
imul
nop
jg
mov
cmc
sti
mov
nop
sub
repz
addr16
dec
sub
mov
xor
sahf
xchg
sub
test
push
push
add
fdivl
aad
jbe
xchg
stos
nop
jb
adc
rorl
xor
mov
stc
jge
test
scas
mov
rorb
ja
cmp
sbb
xor
bound
mov
out
mov
imul
unpckhps
and
adc
dec
test
push
ja
inc
pop
pop
data16
cmpsb
sbb
dec
lods
sbb
cmc
adc
test
pop
loopne
pushf
fcompl
iret
cltd
adc
out
pop
int3
xchg
test
lock
add
dec
loopne
inc
jb
and
repz
cli
cmp
mov
pop
shrb
push
xchg
loopne
rclb
fldcw
cli
xor
mov
mov
mov
push
aam
dec
push
test
adcl
push
pop
enter
sbb
cmp
fcmovb
ds
mov
fistps
insl
pushf
pop
lahf
subb
push
icebp
shrl
ret
mov
mov
push
jns
rorb
insb
jb
sbb
or
in
pop
mov
dec
out
hlt
mov
scas
in
jbe
ss
icebp
rcll
mov
dec
xchg
call
or
icebp
ja
dec
jge
repnz
outsl
orl
dec
repz
repz
ss
leave
cmc
inc
mov
rcr
add
daa
and
mov
mov
inc
mov
cwtl
test
cmc
sub
fmulp
movsb
pop
add
push
push
and
sahf
rol
or
lahf
jnp
iret
jge
fcmovb
xchg
in
shl
loopne
xorl
pusha
lods
cltd
pop
das
jne
xor
es
push
jp
pop
xor
shrl
xor
sbb
loope
test
jo
push
ret
popa
xchg
jp
jb
or
subb
outsl
jmp
mov
call
xchg
sub
les
xlat
jo
sub
scas
aaa
cmp
test
sub
das
sbb
ja
pushf
push
rep
int3
cmp
cs
test
daa
ja
shll
outsl
js
popf
pop
dec
pop
in
mov
and
push
das
xchg
and
fs
push
mov
fwait
das
pop
add
mov
mov
cmp
push
stos
int3
aaa
push
xchg
add
data16
inc
scas
sbb
fwait
jmp
jno
sub
and
cmp
sbb
lret
into
jae
loope
roll
jle
shll
and
sub
jne
xchg
clc
repnz
jbe
jmp
rcrl
dec
lahf
das
mov
sahf
test
mov
mov
inc
ss
mov
hlt
dec
push
xor
scas
mov
mov
testb
rcr
xor
xor
mov
jl
jg
sti
pusha
jg
push
fstps
pop
pop
test
sbb
test
std
dec
cmovge
cmpsl
gs
sbb
repnz
cmp
mov
mov
cmp
dec
sub
sbb
filds
xchg
out
jnp
fsubs
enter
dec
and
dec
popa
bound
movsb
jmp
inc
add
pushl
cltd
inc
or
iret
jecxz
mov
push
cmp
or
daa
xchg
rclb
xor
dec
in
test
in
push
insb
xor
roll
xlat
cmp
cmp
lods
mov
pop
aaa
pop
stos
mov
push
in
push
push
cli
test
inc
lds
out
daa
lret
xchg
xor
loope
mov
pop
enter
fs
fstsw
jne
dec
lahf
xchg
xchg
addl
jne
adc
adc
cmc
cmp
leave
das
rorb
jae
pop
and
mov
push
mov
pop
scas
lret
pop
popa
jbe
push
aas
jle
mov
ds
xor
or
arpl
imul
je
sbb
repnz
push
movsb
adc
pop
call
imul
and
mov
mov
mov
xchg
xchg
rcl
lret
xor
js
xchg
out
rclb
add
cmp
call
and
cld
insl
cmp
adc
mov
push
mov
inc
jle
lock
stos
in
inc
leave
push
gs
push
arpl
lods
bound
xchg
jno
or
add
std
cmp
jp
dec
ficomps
es
mov
and
mov
shrl
and
pop
sub
lret
sub
imul
xchg
out
test
sub
push
adc
in
xor
dec
push
das
rclb
xchg
adc
je
ljmp
fs
cmp
mov
int3
scas
pop
movsb
rolb
add
icebp
aaa
jnp
test
adc
pop
mov
aas
in
imul
insb
jo
add
xchg
aad
xor
lods
fcompl
jae
and
fcoml
dec
pop
int3
movsl
lock
cmp
mov
das
ret
mov
adc
push
rorb
js
lcall
cmp
lods
xchg
sbb
xchg
sub
cmc
int
out
add
mov
ficomps
cmp
imul
inc
mov
cltd
sbb
lret
lret
xchg
dec
and
ljmp
adc
sahf
out
lds
repnz
lret
adc
and
pop
jp,pt
and
pmullw
arpl
adc
icebp
neg
push
cmp
into
iret
xchg
jecxz
xor
das
shl
xor
mov
sbb
or
sub
add
mov
sub
cld
pop
sbb
inc
mov
cltd
mov
mov
xchg
fcmovnb
cltd
lds
addr16
movb
pop
fs
mov
push
add
fstpl
push
fnstenv
nop
int3
scas
mov
hlt
aam
bound
push
cmp
lods
sbb
ret
loope
jns
popf
gs
ficoms
pop
xchg
popfw
mov
and
jge
ret
ror
arpl
pushf
out
and
jno
and
jl
jl
scas
pop
mov
push
pop
pop
aad
fld
push
test
sbb
sbb
sub
rcl
mov
mov
mov
mov
pop
and
leave
and
mov
ljmp
jp
push
aam
addr16
lea
aam
cltd
sub
jle
jg
inc
lods
inc
ljmp
arpl
inc
push
pusha
push
push
jl
xor
pop
push
pop
or
push
jne
adc
sub
xor
push
jl
xchg
mov
sahf
cli
fcoml
cmpsl
rcrl
inc
dec
and
sbb
xor
aad
inc
add
jno
inc
mov
inc
test
fbld
cmpsl
sarl
sub
ficoml
addl
sub
rep
fwait
insl
mov
mov
adc
dec
insb
xor
mov
in
shrb
add
pop
int
out
mov
push
ljmp
ja
xchg
push
cli
lods
or
movsb
jbe
and
ret
mov
jg
add
js
fisubl
xor
fsubrl
nop
or
push
sbb
sbb
cmp
add
or
push
and
dec
or
insl
mov
fs
cmp
inc
sbb
jns
xor
aas
push
inc
mov
or
jnp
icebp
out
pusha
lahf
mov
hlt
fwait
mov
cmpsl
fisubl
pop
add
sbb
add
adc
mov
add
pop
das
in
hlt
jp
cmp
and
cs
xchg
xchg
repnz
shr
inc
cmc
dec
in
test
xor
outsb
aad
ja
scas
idivb
xor
loopne
mov
sbbb
sub
rcrl
add
dec
dec
and
xor
push
pop
dec
or
call
mov
int
inc
xchg
stc
in
adc
vpmaddwd
data16
jno
mov
push
jge
dec
adc
jmp
les
scas
jecxz
or
cwtl
bnd
pop
aaa
adc
pop
mov
shlb
ss
jbe
sbb
stos
test
js
popa
lahf
out
imul
out
loop
fnstenv
iret
pop
mov
out
xchg
inc
or
es
push
pop
shl
mov
aam
fadd
leave
cmp
push
in
jns
sub
pop
popf
and
and
clc
out
out
paddusb
cmpsb
into
push
iret
cmc
cmp
lret
js
arpl
or
daa
test
rcll
enter
arpl
cmp
out
xchg
lods
adc
aam
jmp
xor
or
adc
or
inc
data16
lods
mov
cltd
mov
push
ret
sbb
outsb
lret
push
test
and
das
xor
mov
aas
aaa
xor
xor
sbb
lcall
xchg
lock
push
dec
pop
jmp
sbb
xchg
mov
push
sbb
jne
mov
ljmp
test
push
cs
xchg
clc
xchg
cli
neg
pop
mulb
scas
xor
mov
call
cld
jg
push
jne
fwait
push
shrb
sub
cmpsb
mov
inc
ret
loope
add
xchg
and
rorb
sahf
xor
idiv
push
jb
fnstsw
xlat
cmp
jnp
inc
sub
and
hlt
insl
sub
sub
dec
repnz
inc
jg
insb
out
mov
add
and
sbb
push
sbb
xchg
mov
xchg
mov
or
jb
js
cmpsb
mov
aad
mov
jmp
xor
cltd
or
add
jb
repz
or
ss
xchg
jbe
int
divl
clc
cmp
xchg
sbb
int
repz
jl
shrb
fnstenv
mov
cli
push
xor
jg
std
imul
mov
mov
aam
add
jo
mov
cmpsl
sub
inc
pop
jae
das
lds
sbb
xor
cmp
adc
sub
mov
inc
les
inc
sar
fstpt
mov
jmp
xchg
lock
mov
mov
sub
jo
lods
insl
xchg
push
rcll
stc
outsl
in
adc
cmpsb
ror
mov
xchg
dec
movsl
add
cmp
jno
push
jnp
ljmp
lret
pop
or
cmp
pop
std
and
push
cmp
sbb
daa
test
imull
or
xchg
mov
stos
cwtl
cmc
enter
sar
pop
add
inc
rcr
jb
pop
push
hlt
mov
jbe
stc
xchg
pop
shlb
in
xchg
dec
addr16
fsubrs
lret
or
jg
jbe
inc
cltd
mov
cmp
and
movsb
shll
aam
mov
push
xor
mov
pop
addr16
cmp
les
lock
mov
pop
push
les
rcr
and
inc
pushf
mov
jnp
mov
arpl
xchg
jb
rcl
mov
xchg
cwtl
or
adc
inc
xor
push
idivl
notb
push
mov
push
stos
push
and
xchg
ret
mov
sub
stc
mov
inc
scas
pop
dec
xchg
jae
xchg
pop
insb
add
sbb
in
dec
lret
xchg
sahf
and
jno
sbb
push
jp
dec
cli
adc
add
mov
enter
jp
mov
test
arpl
cmp
xchg
fldl
sub
sti
mov
fs
cli
pop
div
test
cmc
jecxz
mov
outsl
cmp
push
mov
xor
fildl
inc
mov
nop
leave
dec
cwtl
sub
les
jg
aam
mov
sbb
xchg
sub
and
outsb
mov
sahf
sbb
sbb
icebp
sbb
push
mov
sub
jecxz
xchg
je
push
xor
xchg
out
mov
jns
sbb
mov
rorl
inc
in
pop
sti
mov
inc
pop
dec
jle
mov
inc
jnp
loopne
cmp
add
je
inc
fisttpl
imulb
fmuls
add
insl
jge
xlat
cmp
aaa
xor
adc
cmp
lret
adcl
xchg
mov
dec
imul
sbb
jb
mov
mov
test
cltd
loop,pt
jp
cmp
filds
mov
pop
fs
es
es
jb
and
sarb
push
sub
xchg
mov
ret
jmp
push
jecxz
stos
add
adc
or
inc
ja
and
addb
in
data16
int3
cmp
xorb
mov
rclb
loop
cli
bound
inc
ja
js
sub
cwtl
mov
mov
int3
fisubl
es
mov
cmpsl
push
dec
cmp
mov
jbe,pt
mov
mov
lahf
in
fwait
stc
insw
leave
xchg
jbe
lret
jae
mov
xor
fistpl
jl
icebp
add
xchg
add
and
push
dec
sub
mov
fstpt
jge
test
push
sbb
push
out
push
lahf
push
jo
adc
adcl
loopne
cmp
jne
xor
icebp
and
aaa
test
jg
mov
xchg
test
fnstenv
popf
and
imul
lcall
mov
mov
add
and
rorl
lret
ret
mov
outsb
cmp
inc
inc
sub
insl
cld
setl
pop
jl
push
enter
mov
cli
ficomps
mov
jne
or
xlat
inc
mov
mov
fcompl
xchg
pop
insb
in
lds
xchg
sbb
or
dec
cmp
inc
push
fwait
jo
push
repnz
or
test
pop
xor
ss
inc
dec
rcll
jns
fisubs
jbe
mov
es
or
mov
jb
push
jne
push
iret
mov
lahf
mov
ficomps
adc
pop
or
test
insb
shlb
cmp
push
xchg
inc
test
int
sbb
std
push
into
jbe
in
cltd
sub
adc
fildl
data16
jl
mov
stc
in
xchg
daa
aam
aam
jl
adc
jle
imul
test
jbe
mov
mov
dec
imulb
jp
xorb
add
adc
push
mov
les
cmp
icebp
loope
in
sbb
push
inc
aam
into
mov
ja
leave
cmove
xchg
or
scas
mov
clc
xor
scas
ficoms
add
and
sub
sti
cltd
insl
sub
pop
inc
out
xchg
pop
inc
es
pop
test
stos
ss
popl
ds
lods
scas
pusha
cmpsl
sti
xor
xor
fstpt
fldenv
outsl
std
aas
mov
jmp
test
mov
popa
in
mov
and
mov
inc
adc
loopne
repnz
pop
sub
mov
hlt
xchg
dec
cmpsl
inc
dec
sti
aas
xchg
pushf
and
mov
outsl
add
movl
or
inc
mov
mov
pop
pop
cltd
mov
jle
xor
mov
add
pop
loop
je
mov
sbb
js
fcoms
cmp
test
sbb
mov
mov
pop
jae
inc
mov
mov
fdivs
mov
gs
inc
adc
addl
fwait
jb
jmp
push
mov
jo
mov
add
mov
cmp
mov
push
inc
or
std
jo
sub
mov
sbb
data16
or
sbb
mov
push
pop
mov
or
push
decl
sbb
ret
sub
incl
pushf
add
out
mov
movsl
push
pushf
es
dec
leave
test
sahf
inc
mov
adc
cltd
movsb
call
out
mov
jbe
add
adc
push
or
loope
sbb
xchg
xor
jmp
sbb
jae
xor
clc
int3
mov
sub
xchg
pop
sub
psubsb
or
aad
jg
mov
fsubs
out
pop
ja
xchg
inc
test
mov
push
mull
fiadds
lods
jmp
outsl
leave
cmp
es
loopne
jb
arpl
lds
cmp
inc
push
add
in
add
fidivl
pop
sbb
jmp
cmpsl
filds
push
xlat
xchg
add
lods
stos
nop
xor
popl
and
dec
rclb
std
in
mov
popa
inc
cmp
sub
sahf
frstor
movsb
or
ret
add
mov
ss
cmp
jl
add
jb
out
add
fistps
mov
stos
shl
xor
mov
js
loopne
fstpl
shll
lds
xor
das
jne
arpl
inc
jl
cmp
test
dec
cmc
lcall
pop
iret
lret
mov
imul
mov
rcrl
out
mov
fistl
mov
aad
adc
jne
cmpsl
mov
cmpsl
rcrb
pop
arpl
mov
loop
and
inc
lret
inc
cmc
jb
fidivs
shl
out
pop
cmp
mov
pop
test
mov
push
cmc
mov
xor
in
sub
push
jecxz
call
mov
scas
rol
and
push
xor
je
in
call
lods
mov
aas
aaa
insw
xor
dec
mov
push
lea
adc
bound
cmp
fiaddl
sub
bound
idivb
xchg
add
inc
mov
xchg
movsl
sahf
aas
inc
sbb
movsl
lret
sub
sub
pop
pop
jns
pop
xchg
sub
repz
mov
mov
push
loope
adc
lea
shlb
test
cmp
jne
jae
sub
inc
mov
shr
dec
or
clc
sbb
cwtl
pop
out
bound
lcall
dec
and
outsb
xor
test
lret
jge
inc
sub
pop
xchg
lods
jno
in
jo
shll
and
add
in
adc
loop
test
lret
int
jne
and
and
jnp
push
jno
cmp
xlat
jle
aas
add
and
fistl
cmpb
or
outsb
enter
cmp
sbb
adcl
popf
jbe
pop
sbb
xchg
jle
imul
mov
ffree
mov
xor
inc
xchg
jae
imul
sbb
and
hlt
fidivs
imul
shrb
inc
sarb
jns
ljmp
int3
xchg
mov
iret
movb
cmp
xadd
fnstenv
mov
ficompl
add
outsl
mov
sbb
jg
pop
mov
push
push
fisttpll
in
shr
mov
and
dec
shll
mov
lret
xor
push
negb
or
jle
das
ret
sub
addb
xor
pop
jge
andb
add
loop
xchg
jmp
clc
popf
add
pop
pop
or
ret
mov
outsb
push
pusha
bound
xchg
sbb
jge
scas
inc
adc
bound
fidivrl
sub
lcall
and
cmp
out
outsl
daa
mov
inc
sbb
pop
cmp
xchg
sbb
mov
push
and
pop
or
xor
mov
inc
lret
cmpsl
popa
jge
cmp
or
xor
mov
adc
mov
inc
fildll
pop
insb
add
fldpi
fucompp
add
aas
pusha
cld
shrl
lods
mov
loop
imul
sbb
pop
pop
sub
jecxz
icebp
ficoms
dec
test
push
daa
push
cltd
jnp
out
push
out
dec
cmp
icebp
and
xchg
mov
cwtl
fistpll
mov
lods
mov
sub
scas
sbb
xchg
xor
sti
add
pusha
ret
call
testb
push
les
jns
cmp
sub
dec
mov
adc
add
and
xor
add
sbb
pop
ljmp
js
movsl
and
push
dec
dec
pop
jg
and
push
xchg
push
insl
dec
gs
pop
inc
cmp
pop
push
icebp
and
xchg
inc
stos
xchg
pop
inc
mov
lret
icebp
inc
jp
dec
fstps
insl
adc
clc
shlb
adc
xchg
xchg
data16
lcall
cmpsb
xchg
jbe
es
rorl
fisubs
pop
mov
dec
scas
in
shlb
or
cmpsb
aaa
imul
fcom
test
xor
add
cmpl
dec
jg
aaa
sbb
pop
or
xor
dec
mov
gs
fs
mov
stos
cld
shrl
lods
xchg
mov
cmp
arpl
ds
mov
and
mov
call
daa
fwait
and
mov
movsl
sub
lcall
aaa
sbb
dec
insb
sub
pop
adc
inc
lea
addr16
lock
imulb
push
cmp
or
mov
pop
push
sbb
jmp
insl
and
sbb
jp
data16
push
rolb
shlb
xchg
xchg
mov
dec
popl
xchg
add
aas
push
push
jno
mov
cmpsb
dec
ret
dec
push
les
or
ja
out
loope
inc
cmp
jl
jmp
and
lretw
bound
fs
xchg
cmp
cmp
pop
sub
in
in
js
cmpsl
push
aaa
scas
ja
push
sub
sbb
inc
pop
aad
pop
jnp
stos
and
outsl
insl
sub
pop
pop
fnstcw
shrl
cmp
and
iret
or
mov
pop
std
int3
sti
adc
xor
cltd
ficoml
or
int
pop
lea
push
in
inc
shr
pop
pop
or
int
iret
jg
or
jbe
jecxz
push
pop
xchg
xchg
dec
in
arpl
jns
call
xorl
push
inc
aas
or
xchg
aam
lds
xchg
pop
jle
pop
or
out
push
pop
cmp
pushf
dec
jo
pop
enter
scas
mov
mov
pop
jb
add
in
cmpl
pushf
xchg
mov
xchg
imul
mov
out
lret
dec
jecxz
movsb
shlb
cmc
lods
sbb
cli
dec
xchg
je
popf
shlb
pushf
ret
xor
lret
lret
add
add
ret
repz
push
sub
imul
shll
repz
cli
pop
xchg
shlb
pop
add
lods
jmp
in
push
xor
or
xor
std
push
movsb
mov
jne
and
pop
pop
or
dec
push
out
and
mov
es
enter
jne
add
call
cmp
repz
mov
pop
sbb
mov
xchg
sub
sub
xchg
lds
mov
dec
inc
test
jmp
and
das
pop
insl
sbb
lret
cmc
cwtl
ficomps
push
dec
pushf
push
cmpsl
push
mov
add
dec
xor
lock
xchg
inc
pop
fnstsw
xchg
pushf
cmp
movl
hlt
sti
sbb
push
adc
fsubs
xor
sbb
add
lock
cmp
adc
xchg
out
pop
sbb
pop
xchg
insl
into
and
aad
repz
call
ficoml
mov
mov
jno
jo
smsw
rolb
xchg
sbb
sub
xchg
jae
cmp
or
jo
shll
out
enter
insl
js
mov
mov
nop
mov
jg
int
loope
fstl
xchg
loopne
repz
mov
jae
cwtl
or
cmp
fadds
mov
mov
jno
push
int
fcmovnb
jns
les
add
movsb
adc
xor
daa
out
xchg
sbb
jb
aad
pop
lods
ljmp
add
into
xor
lcall
sbb
adc
mov
loope
cmp
jp
testb
mov
sbb
mov
cmpsb
sbb
fisttpll
jo
inc
sbb
mov
roll
jns
sbb
cmp
repz
push
ja
std
adc
loopne
hlt
shrb
test
cmp
lcall
les
les
mulb
dec
fisttpll
xchg
js
adc
and
scas
cmp
ss
jo
repz
inc
inc
data16
popf
pop
cwtl
mov
xchg
cwtl
ret
mov
mov
or
scas
pop
in
jno
mov
or
sbb
pop
icebp
movsb
stos
nop
push
movsb
out
add
pop
pop
icebp
int3
mov
mov
out
stc
loop
outsl
aaa
jbe
cmc
add
lods
dec
roll
xchg
ffreep
inc
jb
rolb
xchg
in
add
push
mov
into
xchg
or
inc
cmp
mov
aam
jo
jl
inc
sbb
dec
jbe
jbe
pop
pop
out
andl
sarb
push
jno
adc
test
data16
sub
add
nop
push
repnz
call
jge
scas
fimuls
in
frstor
mov
pop
inc
orb
sbbl
dec
popf
loopne
insl
in
adc
jb
mov
sub
push
sub
pop
sub
cmpsl
into
aaa
out
sbb
cmp
xor
repz
push
addr16
mov
fwait
mov
cmc
push
dec
xchg
xor
add
lret
cmc
mov
sub
lcall
and
gs
inc
xlat
int
add
in
pop
imul
lods
aaa
jnp
test
cmpsb
mov
cmovnp
insl
in
imul
cwtl
outsb
xchg
ljmp
mov
or
and
push
ljmp
scas
mov
jno
mov
push
push
mov
popa
sbb
popf
lds
incb
xlat
shll
mov
sub
fs
cs
sbb
imul
in
movsl
inc
hlt
mov
pop
or
stos
adc
fstpl
mov
mov
and
mov
stos
and
mov
jg
sbb
loopne
sbb
int3
mov
jo
loope
jae
lret
seto
rol
je
push
aam
lret
sub
or
adc
test
lahf
push
inc
stos
add
cltd
dec
pop
rcrb
push
sub
mov
arpl
or
sub
dec
jecxz
ficompl
je
sahf
sub
or
js
ss
jl
dec
or
addr16
call
mov
push
mov
lds
cld
out
pop
mov
in
cmp
iret
das
lods
lock
add
movsb
push
hlt
dec
iret
repnz
loopne
es
mov
vpunpckhwd
jp
xchg
push
jb
in
nop
jnp
sbb
sbb
adc
xor
js
scas
inc
addb
fstps
dec
pop
outsb
ficoml
adc
adc
setge
push
js
pop
push
mov
sbb
pushf
aaa
and
imul
push
cmpsl
push
jl
in
xchg
add
in
cmpsb
loope
das
mov
jmp
mov
cmpsl
cmpl
pop
stc
enter
int
push
adc
divb
cld
sub
jecxz
or
mov
fnstenv
jae
mov
pop
sub
test
loop
and
in
iret
or
or
xchg
xchg
ss
bound
sti
mov
stos
mov
push
in
subb
aas
mov
in
out
js
ja
mov
dec
lret
inc
push
orl
cwtl
jg
daa
add
repnz
into
xor
dec
sarb
mov
inc
lods
pop
mov
scas
mov
cltd
dec
add
notl
sbb
push
xchg
fsubrs
xor
and
fistpll
insb
mov
ss
in
test
repnz
mov
cmc
pop
fsincos
pop
push
inc
sub
imul
testb
pop
jecxz
mov
cmp
sar
jecxz
jne
jle
dec
aaa
add
outsb
mov
dec
dec
rolb
xchg
dec
xor
xor
adc
scas
repz
dec
pusha
ja
mov
gs
out
push
fs
mov
push
cmp
aas
das
aas
addr16
fs
jmp
into
jne
shl
jo
or
fistps
sbb
outsl
mov
xchg
mov
fldcw
mov
xor
push
push
inc
or
ljmp
out
jg
jnp
push
jb
sub
add
in
inc
andl
faddp
jmp
repnz
cld
pop
sub
loope
sbb
pop
pop
lea
inc
rorb
lock
mov
sbb
push
cli
mov
aas
xchg
pop
ss
addr16
iret
shll
mov
stos
jg
popa
sbb
in
aad
pop
aad
into
sub
mov
xlat
int
push
cs
push
imul
jo
adc
popf
mov
imul
fsubs
mov
mov
sbb
es
std
loope
js
inc
add
jl
es
movsl
lods
adc
sbb
stc
nop
xor
fisttps
cmpsl
call
or
shll
sbb
scas
aas
outsl
sub
ja
mov
cmovl
mov
mov
and
bound
fs
shl
out
iret
jb
loope
mov
leave
scas
cld
fs
js
mov
mov
jg
or
ja
test
out
xchg
xchg
dec
xchg
andl
jp
and
mov
dec
outsl
clc
or
test
mov
cs
and
inc
mov
xor
adc
in
inc
out
int
bound
scas
cmpl
and
les
sub
dec
add
test
sbb
push
cmp
sbb
inc
jne
add
mov
adc
iret
fidivrs
sub
dec
or
xor
fstps
inc
mov
jae
jle
mov
imul
jns
push
fistpll
jbe
sar
mov
mov
loope
bound
mov
or
mov
fcmovu
clc
add
fstl
imul
jnp
push
lods
mov
mov
or
leave
mov
fldcw
mov
movsb
cld
repz
add
xor
test
lcall
test
cmp
hlt
cli
xor
jmp
mov
aas
push
mov
rol
push
lods
andb
pushf
fldpi
ja
xor
cmpl
mov
add
adc
pop
inc
scas
test
fs
add
arpl
test
mov
call
lds
mov
call
shll
ds
mov
repnz
adc
xchg
sti
xchg
leave
push
mov
les
lahf
mov
nop
sub
jbe
js
leave
out
aaa
mov
popf
pop
mov
lret
orb
icebp
jle
xor
out
jmp
iret
adc
pop
push
dec
aas
fimull
in
mov
lret
cmc
pop
xchg
lret
xor
xchg
dec
adc
and
jbe
repz
mov
sub
lock
xchg
fldl
and
pop
mov
jae
add
or
icebp
jno
outsl
bound
sub
inc
cld
mov
jnp
xchg
stos
pop
inc
popa
jge
adc
or
das
cmp
ret
gs
lahf
outsb
cmp
arpl
push
cmp
mov
jne
movsb
lock
push
sahf
adc
shl
and
arpl
and
movsl
outsl
xchg
pop
pop
shlb
jmp
fiaddl
adc
push
cmp
mov
pop
call
xchg
icebp
fildl
and
lahf
xchg
scas
mov
sbb
daa
jp
inc
cmp
or
lods
ljmp
test
in
iret
fnstsw
fwait
subb
movsl
sarl
in
and
xchg
lret
into
jmp
inc
and
or
pop
sbb
jecxz
test
dec
cmp
test
add
inc
xor
mov
inc
xchg
loope
loop,pt
sbb
push
cmc
sub
adc
pushf
cli
pop
ss
fsubs
sbb
aad
push
dec
je
shrl
sub
or
xchg
out
sti
pop
mov
rcrl
xchg
enter
lock
shr
and
sub
nop
jle
cmpsb
push
jbe
xchg
mov
test
lock
cs
imul
and
jmp
and
push
dec
dec
popl
pop
xlat
xor
xor
push
pop
cwtl
xchg
lea
xor
cltd
and
dec
addr16
add
and
xchg
fwait
and
mov
rcll
mov
add
push
lods
jb
pop
or
xor
cmp
dec
shll
push
add
int
ja
mov
xchg
inc
lahf
scas
or
jecxz
mov
and
xchg
inc
inc
cmp
ds
fucom
repz
imul
xor
push
pop
jne
cmp
mov
cltd
shll
je
mov
clc
mov
stos
mov
scas
add
inc
mov
or
sub
ja
movsb
push
push
ret
inc
jns
loope
fists
aam
sbb
and
jmp
mov
lea
sti
decl
lock
out
dec
mov
movups
inc
popa
fidivl
inc
mov
ss
add
sbb
inc
dec
cmpl
push
dec
cmp
outsb
dec
bound
sub
pushf
sub
push
add
stc
push
push
stos
sub
jle
xchg
cmpsb
dec
jecxz
repz
mov
xor
orl
loopne
or
lds
or
orl
and
pop
icebp
aas
adc
adc
out
lea
mov
jbe
mov
mov
scas
add
xchg
push
cmp
orl
xor
pop
fimuls
and
xchg
daa
xchg
xor
mov
and
adc
xchg
insl
nopl
pop
xchg
sahf
mulb
pop
xor
bound
stos
push
pop
adc
shlb
push
fsubrs
sub
std
cmp
inc
jbe
and
or
push
push
add
mov
dec
mov
or
sbb
hlt
addl
hlt
xchg
dec
or
add
mov
or
mov
adc
les
stos
dec
pushf
fisubrs
push
xor
and
jecxz
mov
cmp
lcall
mov
mov
xor
adc
jmp
out
pop
outsb
fwait
fs
mov
push
pop
push
les
push
jl
cs
cld
mov
push
push
dec
adc
pop
mov
inc
pop
push
xlat
jp
jmp
add
jo
push
call
inc
xchg
xor
pushf
inc
or
sub
popf
jg
xor
add
push
fnstenv
sub
ljmp
les
dec
cli
aam
and
add
push
ljmp
mov
dec
fstpt
sbb
aam
out
add
sub
xchg
cmpsl
adc
rcl
notb
push
mov
push
cmp
popa
jge
ja
in
pop
imul
push
sbb
xchg
xor
xlat
repnz
mov
ljmp
loop
mov
lods
cmp
add
xchg
decl
sub
pop
popf
and
daa
mov
jb
push
int
imul
pop
pop
and
sbb
push
pop
stc
hlt
mov
fs
and
push
inc
in
xchg
dec
mov
xor
fcmovnu
mov
lcall
and
out
pop
ret
inc
xchg
push
cmc
nop
cmpl
nop
popf
hlt
sbb
mov
in
jle
sbb
rorb
inc
or
rcll
pushf
bound
fwait
loopne
mov
fnstsw
pushf
mov
pop
mov
jl
das
cmp
adc
push
cmpl
push
mov
adc
and
in
jb
ja
sbb
mov
lock
push
mov
das
les
gs
test
fmuls
scas
testl
xchg
test
dec
mov
leave
jno
jbe
inc
out
mov
sbbl
movsb
fsave
int3
xchg
loop
fistl
mov
or
ja
scas
and
jmp
lds
mov
mov
sbb
sbb
leave
mov
cmp
and
jp
inc
pop
xor
fwait
js
mov
xor
jle
or
cmp
inc
mov
xchg
inc
jg
xor
fwait
and
pusha
cmp
out
outsl
in
fs
adc
scas
cld
push
inc
and
jnp
jnp
jmp
das
ss
jecxz
sarb
lahf
xchg
imul
adc
fdivr
ljmp
mov
into
test
cmp
and
ss
enter
and
and
in
adc
cs
adc
inc
dec
jns
push
cmc
mov
out
mov
out
dec
out
mov
fimull
imul
or
mov
psubw
and
in
lahf
dec
aam
hlt
dec
int3
lock
pusha
scas
push
in
mov
sar
cmp
shlb
xchg
dec
mov
daa
mov
jmp
push
loop
cmp
mov
mov
repnz
fisttpl
mov
repnz
js
inc
cmp
aad
add
push
or
loopne
shll
mov
inc
mov
add
jne
add
mov
pop
mov
mov
xor
gs
sbb
adc
test
xchg
adcb
dec
dec
mov
xchg
gs
enter
out
in
sar
mov
mov
mov
test
in
fnstcw
iret
hlt
xchg
mov
mov
cmp
mov
pop
inc
ss
movsl
idiv
and
fs
sbb
xchg
cmp
inc
xor
jb
mov
dec
test
or
cltd
rol
sub
orl
mov
notb
repz
gs
pop
and
cmp
stos
jae
fbstp
das
xchg
icebp
jg
cli
jg
nop
push
jmp
mov
inc
insl
fcom
in
fstpt
sub
imull
ja
dec
imul
hlt
adc
out
sarb
pop
xor
xchg
mov
sub
mov
insl
mov
std
cmp
js
adc
orl
and
inc
ret
xor
xor
sahf
add
aas
jnp
in
shll
rorl
push
les
and
adc
sbb
cmp
out
xor
jg
loope
push
xchg
ret
inc
fisttps
mov
cmp
pop
push
jl
mov
pushf
test
dec
fcmovb
cltd
adcl
movsb
mov
dec
enter
inc
test
cmpsl
das
and
mov
aaa
mov
stc
lds
cmp
jne
shr
loopne
imul
test
and
dec
mov
mov
out
fwait
adc
call
dec
mov
data16
mov
outsb
and
jbe
mov
xor
xchg
xorl
or
mulb
mov
push
push
mov
test
sbb
push
push
fdivl
sahf
fchs
jecxz
mov
rcrb
mov
lea
mov
fcompl
cmpsb
into
xchg
and
pop
mov
fcmovb
xchg
cs
call
xor
cmp
and
aam
xchg
and
shlb
repnz
and
hlt
and
scas
or
add
mov
stos
addb
outsl
pop
lcall
and
mov
mov
sub
push
outsb
or
daa
pop
mov
dec
ljmp
movsb
push
int3
mov
test
repnz
xchg
push
pop
or
mov
lahf
fs
filds
dec
addb
dec
mov
cwtl
outsl
incb
ret
ljmp
scas
lcall
ret
fucomp
pop
and
push
int3
mov
popa
adc
or
ret
cld
and
cmp
cmpb
addr16
push
or
mov
sahf
inc
jge
jl
and
cmp
mov
push
mov
xorb
aad
sbbb
and
rcrl
loop
test
sub
add
adc
jbe
cmp
pop
sub
cwtl
sub
or
sbb
xchg
jnp
sbb
adc
pop
mov
cmp
inc
das
mov
lds
ja
loope
inc
div
rorl
pop
jae
push
ljmp
push
or
icebp
cwtl
jp
mov
inc
int
dec
ss
push
adc
push
mov
jmp
pop
inc
outsb
mov
pop
cltd
pop
sarl
mov
insb
lods
rorb
test
imul
movsl
xor
jno
push
push
test
mov
repnz
add
push
and
iret
mov
dec
jl
repz
mov
cmpb
pop
mov
in
js
aam
dec
lea
inc
push
jp
xchg
push
xor
rolb
xor
jns
cmc
stos
data16
xchg
inc
push
sub
sub
cwtl
jns
repnz
cmpsb
jle
xchg
insb
sbb
movsl
andb
xchg
cmp
lahf
mov
lahf
shlb
push
jo
and
je
cmp
jb
ror
aas
adcb
sahf
pop
jle
cs
push
fisttpl
imul
add
mov
cltd
pop
xchg
mov
inc
xchg
stos
mov
lret
lret
pop
pop
in
jb
leave
test
gs
dec
push
sub
int3
push
xor
sbb
dec
in
test
adc
pop
push
dec
and
jge
pop
inc
adc
ret
sahf
inc
or
cmpsl
out
add
sti
mov
jnp
xchg
push
mov
mov
out
mov
ds
flds
xchg
dec
xor
push
jno
pusha
ds
testb
mov
pop
jns
repz
js
pop
mov
clc
xchg
xchg
test
das
push
inc
jns
imul
cs
xchg
je
das
cmp
lret
gs
out
pushf
ds
ja
mov
jg
fidivrs
sbb
shl
jg
or
mov
mov
insb
popf
xchg
jmp
fsubs
lcall
xchg
mov
out
jo
into
sbb
jge
outsl
sbb
xor
push
pop
sbb
sbb
cmc
adc
fstpt
jno
incb
ror
cmc
xor
ret
lods
sbb
mov
inc
stos
ficomps
or
pop
push
cwtl
mov
sbb
and
cmpsb
jnp
lahf
bound
lea
icebp
and
inc
scas
dec
pop
and
sub
loope
cli
lcall
mov
out
outsb
pop
lock
xchg
push
mov
js
cmp
cld
mov
rclb
faddl
cltd
and
adc
jb
fcoml
aaa
cmpsb
push
push
aad
cmp
int3
sarl
mov
insl
in
notl
mov
mov
or
xlat
popa
or
xor
inc
xchg
xor
sbb
or
xorl
pop
sub
xchg
sbb
mov
mov
mov
cli
mov
stos
push
cmp
addr16
cmp
xchg
jne
scas
jb
mov
sbb
xchg
stos
push
cmp
in
das
inc
mov
xchg
pop
pop
mov
nop
loop
sarb
pusha
sbb
or
xchg
cmp
mov
adc
cmp
mov
jecxz
mov
hlt
adc
scas
or
pusha
mov
xor
enter
mov
xchg
lea
mov
inc
rcll
inc
push
jae
sub
clc
push
fisttps
imul
push
cltd
xor
xlat
insb
mov
sub
push
call
xlat
inc
sbb
mov
cmp
fstpl
dec
add
jp
xor
cltd
bound
fdivrl
cs
mov
pop
mov
leave
push
rclb
addr16
lods
push
xor
mov
mov
lods
in
bound
push
js
decl
lcall
pop
mov
mov
lds
xchg
sbb
push
aam
sbb
stos
xchg
sbb
ret
fcompl
pop
mov
and
imul
jb
mov
pop
and
icebp
jo
addr16
mov
mov
idivl
mov
std
xchg
mov
sub
or
out
iret
mov
lahf
lcall
sbb
std
pop
xchg
jb
mov
mov
mov
imul
fnstsw
rorl
cmp
add
jecxz
cwtl
dec
out
push
es
pop
xor
in
xchg
jg
mov
push
add
out
fsubl
xor
pop
or
sarb
pop
dec
pop
nop
imul
xor
pop
mov
rolb
or
mov
rclb
aam
cmp
psllq
addr16
imul
outsl
dec
push
cmpsb
lahf
dec
jge
inc
insl
dec
mov
into
mov
nop
lret
data16
xchg
dec
jecxz
add
adcl
xor
test
cmpsb
adc
testb
push
push
mov
scas
cmpsb
jae
sbb
cmc
out
and
inc
test
jae
pop
imul
mov
ret
pop
fwait
fs
adc
jo
mov
jne
ret
push
jne
adc
das
scas
scas
mov
sti
rcll
inc
jne
push
aad
xor
aam
inc
xor
dec
les
hlt
push
xchg
add
ss
cmp
fmull
mov
or
das
mov
loope
loope
int3
sub
sub
repnz
cmp
scas
cmp
in
sbb
push
cld
jnp
pop
add
adc
jle
fdecstp
stos
aaa
push
insb
xor
push
mov
test
inc
repz
sti
pop
add
mov
mov
and
call
test
dec
sti
out
scas
xor
call
insl
or
leave
fwait
xchg
lds
pop
test
int3
dec
ja
nop
xchg
and
and
shrb
dec
adc
xlat
mov
cmp
sbb
icebp
outsb
cwtl
scas
xlat
xor
sbb
xchg
adc
xor
aam
mov
cmc
mov
xchg
inc
js
mov
stos
dec
push
sbb
shr
inc
lret
aad
jmp
inc
or
pop
inc
xchg
pop
xor
push
cmp
test
in
mov
pop
jns
pop
imul
test
xchg
and
pop
dec
mov
dec
out
pop
fnstsw
cmpsl
adc
push
lock
repnz
out
adc
call
jae
popa
popa
jl
aam
sahf
mov
mov
fwait
es
and
push
shrb
fwait
cs
cmp
sahf
xchg
insb
jecxz
xchg
and
test
repnz
and
ljmp
iret
and
out
push
xchg
xchg
pxor
add
jb
int
jp
scas
pop
fidivs
jmp
call
xchg
push
data16
pop
sbb
push
mov
or
push
and
mov
icebp
add
jmp
cmp
lods
cmp
fisubrl
adc
outsl
std
dec
mov
outsb
add
mov
fsts
sbb
push
popa
or
mov
js
pop
inc
mov
subb
rcrl
or
mov
jnp
mov
push
addb
pusha
mov
sub
mov
outsl
xor
xchg
push
je
outsb
pop
sbb
adc
and
mov
into
jl
ret
add
pop
jecxz
cmp
data16
movsl
repz
into
mov
push
int3
flds
pop
add
sub
out
int
dec
cmp
adc
adc
dec
or
mov
pusha
or
lret
add
mov
mov
jne
inc
in
add
push
add
and
adc
hlt
jl
out
or
into
push
lahf
mov
icebp
pop
or
jne
cmp
test
lret
jl
imul
xchg
stos
clc
lea
pop
out
add
ja
push
and
rcrl
shlb
lret
push
or
add
mov
mov
pop
push
cwtl
stos
lahf
int
ljmp
enter
pop
sub
das
fs
cmpsl
inc
xchg
mov
push
lods
inc
in
aad
sahf
pop
sbb
xchg
inc
lock
xchg
sub
sbb
push
sar
ret
or
mov
mov
mov
jae
xchg
sub
lret
pusha
mov
stc
in
jecxz
loop
pop
sub
jns
fildll
outsb
in
adc
and
adc
loope
push
imul
add
and
mov
in
int3
repnz
sahf
lock
lock
inc
jo
cmc
and
xchg
adc
aaa
cmp
and
out
adc
xlat
mov
ljmp
pop
loopne
jmp
popa
push
into
push
mov
dec
push
sarl
fcoms
hlt
mov
push
xor
dec
mov
rorb
mov
outsl
or
jge
lea
enter
adc
shlb
mov
jg
rolb
xor
in
js
jl
jge
mov
lods
and
mov
inc
jg
out
lock
pop
call
lods
in
jmp
xchg
xlat
fucom
aad
lahf
stos
rcr
mov
aas
mov
xchg
lock
lock
cltd
dec
fdivs
out
outsb
fs
mov
cmc
ret
movsb
out
mov
cmp
outsl
sbb
lods
sub
rcrb
mov
cmp
loopne
out
mov
mov
xchg
sub
dec
jns
adc
test
scas
aad
mov
mov
inc
dec
jb
lcall
lret
ret
fisubl
lds
cmpsb
stc
cmp
jg
lcall
bound
fucomi
jl
add
out
pop
inc
imul
mov
popf
xchg
pop
jl
pop
stos
mov
mov
aam
pop
nop
xchg
leave
pop
ljmp
mov
sub
cmp
cmpsb
pop
cld
jecxz
inc
push
mov
push
xlat
xchg
adc
movsb
fs
dec
dec
in
dec
mov
jb
add
cwtl
jo
dec
cmp
xor
andl
xchg
sbb
xor
push
sbb
lods
jo
imul
js
xchg
inc
mov
repnz
inc
mov
and
and
mov
sub
dec
test
addr16
dec
stos
ret
ret
out
ret
adc
or
ljmp
adc
push
addr16
add
adc
pop
stos
aam
mov
cmpsl
pop
inc
nop
sbb
sub
daa
idivl
mov
lods
or
outsb
mov
and
and
fldl
push
dec
icebp
ss
adc
fldl
inc
jg
jmp
cmp
mov
mov
fwait
insl
and
aaa
jnp
sahf
inc
call
sbb
push
xlat
mov
or
push
cmp
into
sti
lods
push
jg
fsubrl
clc
sub
adcl
push
jle
xchg
or
jnp
mov
cmp
pop
xchg
pushf
lods
xor
sarb
pop
mov
lods
imul
cmp
mov
pop
sbb
pop
std
aas
lahf
out
int
xchg
or
dec
xchg
icebp
sbb
fidivs
or
push
arpl
mov
insb
out
pushf
mov
xchg
jae
mov
mov
jge
mov
cmp
mov
scas
rorb
pusha
or
loopne
or
xchg
jns
rcl
sbb
gs
lret
push
fistpl
lods
je
outsb
ror
clc
push
call
les
cmpb
stc
pop
dec
inc
lahf
xchg
push
xchg
arpl
inc
lods
fwait
in
fisttpll
imul
or
sbb
mov
push
mov
sbb
xchg
mov
outsl
mul
insl
pop
add
dec
jno,pn
je
mov
sti
xor
xchg
adc
cs
movsb
and
sahf
ret
jo
movsb
xchg
sub
xchg
rorl
mov
add
mov
scas
scas
ja
dec
mov
push
mov
dec
and
mov
nop
cmc
imul
dec
int
push
into
jns
fwait
sahf
or
add
dec
imul
push
sub
pop
repz
out
jbe
push
loop
push
in
out
pop
mov
xor
mov
outsl
fwait
pop
add
popf
les
outsl
sarb
adc
xorl
in
pusha
sar
xchg
loopne
xor
popa
js
stos
aas
dec
push
sbb
jmp
dec
lds
roll
mov
scas
jge
add
jnp
cwtl
pop
add
xchg
xor
push
out
arpl
testb
add
mov
xor
xor
fdivs
in
mov
or
in
dec
or
xor
xlat
std
insb
outsl
adc
and
int3
inc
pop
and
push
jo
push
xchg
xor
inc
jo
popa
xor
cmp
xchg
jno
push
mov
xor
andl
aaa
sub
add
mov
or
out
stos
sub
add
inc
aad
mov
mov
negl
es
jl
sub
sarb
jle
aam
sub
sub
pop
loopne
fidivl
pushf
adcb
mov
or
popf
mov
jae
orb
scas
xchg
add
es
fsubp
popa
into
out
mov
push
jmp
out
notl
dec
imulb
out
pop
das
cli
sbb
call
neg
xor
fiadds
cmp
xchg
dec
loope
test
outsb
stc
xor
dec
stos
out
sub
cmc
idiv
out
push
in
dec
push
push
jl
ss
xor
rorl
sub
jo
pop
mov
ja
std
shrb
inc
pop
ss
icebp
xor
ja
push
or
inc
mov
inc
rclb
push
mov
jp
sahf
nop
push
ja
xchg
mov
adc
stc
fxam
jmp
dec
mov
ja
pusha
add
jne
xchg
leave
cmp
je
imul
jbe
pop
inc
mov
bound
push
mov
stos
gs
enter
popf
add
aam
int
mov
inc
mov
mov
je
jecxz
mov
xchg
jbe
pop
sub
in
test
pop
push
fildl
mov
adc
popf
push
mov
mov
dec
xor
into
xchg
jbe
pop
mov
mov
sbb
pmaxsw
fwait
jle
cmp
push
push
lcall
inc
sbb
pusha
mov
fs
sub
mov
movsl
pop
xchg
add
std
xchg
popa
adc
iret
shlb
in
or
int3
pop
fcoml
jae
aad
xor
add
es
inc
ret
inc
out
dec
insl
ja
cmpl
pop
sub
adc
lahf
loope
mov
adc
in
cmp
mov
lock
daa
jg
les
dec
xchg
addr16
das
sbb
and
les
mov
sub
pushf
inc
or
push
add
fmuls
fdivrs
jp
jecxz
stos
jle
loop
jbe
mov
or
pop
cmp
lock
lcall
cmc
repnz
out
es
pushf
inc
loopne
in
out
pop
xchg
push
fwait
push
vpmacsww
xchg
outsb
jp
push
push
push
adc
hlt
jg
mov
sub
rcl
sub
lock
addb
xchg
dec
shrl
cmc
xchg
dec
push
xchg
lea
mov
loop
iret
dec
cmpsl
mov
pop
sbb
jg
mov
push
xor
ret
mov
or
aam
push
xor
lcall
xchg
je
inc
sbb
in
mov
jl
pop
call
inc
hlt
insl
and
imul
jb
xor
and
mov
adc
add
out
xchg
pop
lcall
divl
mov
dec
jecxz
cltd
or
pop
jge
and
push
jle
ss
mov
jg
dec
cmp
inc
loope
xchg
inc
mov
out
jp
aam
fdivs
xor
les
popf
mov
shlb
cld
jbe
jb
inc
inc
enter
out
adcb
mov
xchg
lret
into
iret
xor
hlt
jns
cmp
stos
pushf
out
sub
push
fldcw
int3
cltd
testl
imul
repz
andl
andl
xor
shr
pushf
add
pushf
sub
je
add
shrl
insb
xchg
arpl
in
push
push
sub
sub
test
adc
js
test
pop
pop
addr16
mov
mov
mov
mov
das
rcl
cltd
pop
push
xor
loopne
and
scas
dec
adc
cltd
dec
lret
sarl
xor
fstps
sbb
pop
dec
add
test
ret
cmp
inc
cmp
add
push
orl
mov
or
cmp
or
sbb
pop
inc
mov
sbb
fsubrl
sbb
xor
mov
adc
sub
cli
jmp
xchg
pusha
addb
cld
outsl
pop
inc
push
cmp
lods
addr16
cmpsl
pop
jp
and
mov
inc
xlat
pop
jle
adc
xchg
imul
mov
test
sub
xor
scas
adc
pop
lock
call
pop
inc
push
pop
and
je
dec
ret
inc
or
push
lods
pushf
push
adc
das
xor
jns
xchg
mov
adc
add
sbb
push
xchg
into
jne
pop
repz
lock
mov
or
push
lret
mov
pop
fwait
dec
ret
push
dec
xchg
pusha
ret
and
sbb
xchg
xchg
xor
test
mov
push
jecxz
jp
mov
pushl
sub
jb
push
xchg
jnp
les
pop
xchg
xor
aaa
lods
xchg
fucom
dec
out
sahf
xor
mov
cmpb
dec
in
enter
pop
xor
push
xchg
dec
xchg
cld
or
pop
jg
cmpsl
leave
mov
loopne
aam
sbb
das
out
popa
lea
cmp
sub
sbb
jmp
lret
xor
fisubrs
hlt
xor
jae
inc
mov
sub
adc
mov
jg
outsl
cwtl
dec
ret
sub
mov
adc
dec
pushf
in
jae
xchg
arpl
in
stc
push
mov
mov
mov
addr16
pop
mov
sub
mov
jne
cmp
in
das
stos
loopne
pop
mov
es
xchg
jno
mov
stc
int3
ds
push
lock
int
mov
in
xor
xchg
xchg
inc
push
ljmp
pop
and
mov
inc
iret
sbb
sbb
push
sbb
pop
push
mov
stos
jno
pop
push
xchg
mov
xchg
dec
out
les
or
push
add
xchg
dec
loop
in
dec
das
addr16
cmp
cmpsb
jb
ficomps
add
or
ljmp
xchg
fisubs
inc
inc
js
lahf
dec
or
popa
jge
shlb
lea
enter
mov
push
mov
popf
psubw
cmp
dec
pop
into
out
lahf
and
cmc
push
std
jnp
mov
bound
pushf
inc
jae
mov
inc
call
add
sub
movsb
cwtl
pop
dec
pop
sub
cmp
inc
add
movsb
mov
stc
movsb
popf
or
mov
push
push
outsb
inc
insb
adc
out
mov
aam
imul
or
cs
or
hlt
push
jl
ds
inc
sbb
popa
imul
jo
jmp
cmpsb
sbb
maxps
mov
xchg
jl
jg
or
or
xor
roll
xchg
imul
popa
mov
mov
sbb
jl
add
pusha
in
inc
pop
jle
int
nop
push
clc
out
pop
dec
or
sub
adc
fstps
push
shlb
mov
lahf
fstps
pop
inc
add
pop
out
fcomi
push
push
fadds
ret
leave
mov
add
fwait
sub
mov
fdivrl
mov
ret
mov
mov
cmpsb
jnp
loope
mov
idivl
out
testb
leave
dec
stc
mov
in
sbb
dec
int
mov
loopne
cmpsl
sbb
pop
mov
cld
enter
sar
dec
inc
insb
mov
push
ret
jl
ss
leave
or
loopne
lods
mov
int3
in
in
sbb
adc
int3
mov
adc
xor
insl
pop
lods
lret
fsubrs
out
addr16
jle
out
daa
aam
movsl
add
daa
or
in
add
xchg
loope
cmp
xor
scas
xlat
pop
mov
stos
fisubrs
mov
push
xor
in
adc
mov
es
test
int
js
sub
jne
xchg
imul
cltd
xchg
inc
mov
cmc
add
rcrl
iret
pop
inc
dec
clc
movsl
add
pop
cmp
fldt
adc
mov
mov
pushf
add
xchg
mov
test
mov
pop
add
divl
movsl
pop
adc
mov
jno
push
shl
adc
xchg
inc
subl
movsl
scas
xchg
test
imul
push
jl
mov
xchg
icebp
push
int3
mov
add
xchg
test
or
mov
or
ljmp
cmc
icebp
pop
pop
call
and
loopne
jne
addb
add
lret
aaa
adc
push
xchg
push
daa
mov
mov
in
mov
ss
mov
jp
aas
outsl
xor
mov
inc
xor
repz
stc
decb
out
stc
and
xchg
fisttpl
push
pop
mov
sub
mov
pusha
or
mov
push
pop
xlat
es
push
pop
mov
pop
xchg
jb
mov
mov
scas
testl
mov
lahf
scas
inc
sti
or
mov
out
mov
lea
pop
data16
sub
dec
xor
xor
fs
addl
mov
into
jns
xchg
sbb
lret
add
fcoms
loope
clc
lret
adc
out
pop
jl
pop
adc
clc
jp
imul
out
insb
push
push
or
lods
dec
xchg
dec
adc
pop
cmp
sbb
insl
mov
inc
pop
shll
xchg
shlb
inc
jmp
mov
pop
call
pop
and
ret
cmpsb
lods
and
mov
pushf
sub
adc
into
xchg
jle
imul
dec
fnstenv
cmc
sub
fwait
stc
stos
mov
sbb
inc
outsb
xchg
fs
and
gs
cmp
inc
das
push
add
cmpsb
cli
and
cli
data16
jb
les
cmp
ss
aaa
repnz
push
jecxz
xlat
mov
lret
repnz
inc
mov
xchg
stos
jb
and
insb
out
movsb
fdivrs
lret
pop
in
iret
cmc
mov
ljmp
cmc
mov
and
inc
scas
inc
push
mov
ds
pop
js
and
push
ljmp
inc
mov
sbb
and
xchg
sbb
xor
mov
pop
idiv
xchg
js
adc
dec
addb
call
lahf
dec
push
cmp
pop
decb
xor
ja
outsl
lods
mov
and
cmp
sub
push
dec
addb
mov
repz
adc
cmpsb
pop
mov
pushf
loope
xchg
movl
les
imul
push
push
in
mov
das
mul
mov
cmp
adc
loopne
mov
add
push
jnp
scas
ret
mov
enter
pop
add
loop
imul
or
movsl
ds
mov
mov
cltd
mov
adc
push
xchg
push
sbb
xlat
mov
push
popf
imul
cli
call
jmp
mov
loop
shll
daa
testb
pusha
sarb
sbb
push
jp
iret
loopne
mov
aaa
out
and
ds
ds
pop
je
xor
dec
ror
xchg
mov
dec
sbb
jg
pop
mov
aas
out
daa
mov
ja
out
mov
xchg
loope
lock
xor
cwtl
jno
xor
xchg
sub
stc
sub
mov
sar
adc
cmp
add
jle
scas
ljmp
aas
cmpsb
push
cmp
xor
rcl
push
imul
inc
xor
xor
lcall
loop
adc
mov
mov
cmc
aaa
fistps
mov
mov
out
jb
inc
inc
arpl
sub
xchg
sub
pop
pop
pop
xor
push
fldl
add
mov
dec
hlt
pop
cs
cmp
dec
mov
jb
and
insl
gs
push
xchg
or
inc
add
dec
sbb
addr16
jmp
push
pavgw
test
inc
shll
pop
mov
pusha
scas
mov
mov
sbbb
imul
bound
push
and
loope
lret
jb
mov
sub
sahf
and
ja
lods
lock
pop
mov
ja,pt
stos
dec
xchg
jns,pt
pop
nop
xor
clc
dec
add
cmc
pop
in
cmp
inc
pop
xchg
push
add
daa
pop
pusha
mov
mov
inc
js
jno
cmp
movsb
out
mov
and
xchg
es
je
or
int
sbb
push
jb
test
in
scas
push
xor
push
repnz
movsb
pop
les
jb
mov
mov
addr16
push
xor
mov
test
clc
pop
or
xlat
adc
scas
mov
lods
rcr
test
pushf
daa
lret
int3
pop
imulb
mov
out
sub
xor
test
stos
movsb
fistpll
sub
ret
test
sbb
mov
daa
dec
push
in
xchg
mov
fstpl
mov
adc
xchg
jecxz
fwait
mov
dec
nop
sbb
add
sub
pop
jmp
mov
adc
jne
fisttpll
jp
adc
xor
and
adc
mov
mov
jp
stc
jle
dec
shll
scas
mov
sub
test
rep
or
sbb
jns
dec
rcrb
out
xchg
test
mov
rcll
xchg
or
lcall
inc
and
lods
sub
jle
xchg
cmc
insl
mov
xchg
cmp
sub
mov
sbb
cmp
lds
testb
aad
sbb
addb
sbb
cmc
sub
negl
lock
hlt
shrl
repnz
enter
clc
pusha
arpl
mov
sbb
sbb
pop
dec
bnd
inc
inc
xor
sahf
repnz
imul
mov
mov
mov
xchg
and
mov
xor
push
movb
lret
sti
pop
leave
xlat
pop
lcall
mov
xor
sbb
xor
dec
ljmp
jp
adc
xchg
call
fistpl
sub
jne
pop
jns
jl
pop
out
push
adc
fbstp
mov
pop
jnp
loopne
xor
mov
sbb
mov
inc
ja
push
insb
cmpsb
xchg
xchg
lods
fadds
outsl
inc
push
mov
mov
and
cltd
jb
xchg
call
mov
fisttps
imul
pop
add
mov
jge
fimuls
inc
bound
pop
sub
dec
jo
dec
pop
or
mov
fiadds
popf
mov
jmp
cmpl
lock
loopne
push
mov
push
inc
sti
hlt
mov
jnp
inc
cld
addr16
imul
shll
or
ljmp
gs
in
lret
mov
icebp
push
loop
xor
test
cli
dec
leave
nop
push
sbb
push
add
cld
ljmp
test
mov
add
loopne
cs
adc
jg
imul
popl
xlat
xchg
scas
mov
cli
xchg
fmuls
xor
xor
divb
mov
xor
mov
jnp
xchg
mov
fsubrs
test
addr16
xor
inc
jge
into
or
pop
mov
mov
cmp
xor
rcll
sahf
mov
xchg
lcall
aad
enter
loope
imul
or
mov
dec
bound
jp
out
pop
xor
inc
fmuls
or
les
mov
gs
repz
aad
mov
lock
push
rolb
aaa
pop
lret
jno
sub
mov
mov
lods
and
les
outsl
mov
push
lahf
push
stos
sbb
xchg
push
mov
lahf
mov
jg
es
lds
fsubrl
dec
sar
ja
cmp
xlat
insl
lahf
jbe
hlt
and
add
sbb
push
jns
fimull
scas
movsl
ds
stc
or
test
daa
in
mov
rolb
mov
cmpsl
mov
xchg
push
sbb
sub
test
xchg
test
lods
jnp
inc
scas
ret
aam
dec
and
cwtl
cld
lcall
pop
dec
in
leave
mov
pop
lds
mov
fs
cmpsl
in
es
nop
movsl
mov
dec
lcall
lret
leave
sub
pop
mov
mov
imul
and
adc
ret
insl
jnp
lods
adc
js
cmp
cmp
push
pushf
ret
cmpsb
cmp
or
cltd
jae
cmp
test
shrl
fcompl
cs
fsub
mov
scas
and
xor
or
icebp
jg
cmp
and
cld
imul
cmc
push
mov
push
xor
xchg
add
xchg
mov
dec
out
mov
scas
sub
jno
pusha
fldenv
testb
or
cld
fstps
xchg
loop
mov
fwait
mov
jg
xchg
sbb
fisubl
pop
arpl
jno
shr
or
cli
sub
imul
mov
mov
test
or
pop
divb
popa
cmp
outsb
shrl
js
sub
add
xor
mov
mov
jno
stc
xchg
cli
shrl
mov
imul
stos
xlat
outsl
push
push
rclb
ss
cli
mov
mov
jle
cs
pop
jg
jb
rcrl
sub
cwtl
mov
outsb
movsl
pop
ds
jg
cmpsl
pop
jp
sub
loop
fs
fistl
enter
fucomip
mov
and
fcmovb
sar
fildl
subl
leave
std
cmp
hlt
and
mov
sub
es
or
outsb
cmp
dec
adc
cmpsl
mov
insb
lds
mov
pop
jp
adc
mov
lock
cld
mov
int3
inc
xor
fsts
mov
je
cmp
dec
or
sbb
mov
sahf
pop
hlt
shufps
and
mov
lret
into
lock
sub
shrb
fdivl
imul
jb
rcll
jae
and
inc
stos
mov
stc
push
mov
mov
add
movsb
test
mov
ror
fwait
int3
sub
adc
cltd
xchg
mov
jne
sub
sub
ret
mov
loop
shlb
cmp
pop
pop
mov
mov
aad
sub
mov
lods
pushf
loopne
or
mov
jb
add
mov
dec
dec
sarb
pop
mov
jns
loope
sub
out
insb
and
mov
outsb
sub
repz
dec
popf
inc
sub
shll
ds
mov
out
xchg
out
fwait
out
pop
cwtl
and
outsb
mov
or
cli
dec
pop
sub
gs
push
js
hlt
enter
mov
and
add
pmuludq
int
cmp
dec
or
xchg
adc
ret
jge
mov
or
mov
sbb
adc
push
repnz
outsb
adc
arpl
cli
mov
lods
mov
mov
xchg
xchg
add
push
xchg
cli
jne
dec
adc
push
inc
cwtl
push
and
cltd
inc
fdivp
stos
sarl
xor
pop
js
xchg
xchg
test
dec
mov
ds
push
push
adc
inc
mov
dec
jle
pop
dec
out
cli
xchg
mov
rcrb
test
jp
sahf
push
fucomi
and
inc
test
jecxz
xorl
fwait
aad
rorb
je
cmpsb
xor
imul
mov
ja
rol
les
shr
rol
or
jns
rol
cmp
inc
and
jg
push
cmp
mov
dec
push
cmp
xchg
shrl
xchg
sbb
adc
mov
insb
add
inc
jg
and
mov
or
ja
sub
fsubrs
xchg
pop
orl
aad
scas
or
in
adc
lods
and
mov
pop
push
mov
lcall
in
mov
mov
sti
pop
push
xor
jecxz
jge
imul
out
loopne,pt
aam
mov
or
dec
adc
ljmp
pop
sti
push
push
and
in
jae
and
xor
push
adc
test
ss
adc
iret
aam
pop
adc
sub
add
jns
fisttpl
jl
clc
lret
sahf
xchg
add
xchg
jbe
adc
push
outsl
mov
lea
push
movsl
add
pusha
loopne
lods
pop
fwait
xor
pop
inc
and
mov
addr16
or
mov
push
iret
xor
loopne
mov
int
or
jns
cmp
pushf
ficomps
push
inc
daa
repz
lods
ffreep
cld
addr16
stos
jecxz
push
xchg
insl
dec
aad
sbb
pcmpeqw
dec
cmp
add
loopne
mov
ret
inc
push
and
adc
mov
xchg
aas
test
aam
lods
lcall
or
aas
adc
dec
inc
dec
lcall
sbb
mov
mov
add
and
stos
and
pop
dec
add
pop
and
rcrb
inc
jne
fcoms
lahf
fs
inc
jns
push
les
inc
xchg
jmp
pop
lret
test
dec
cwtl
out
mov
inc
dec
dec
and
leave
xchg
push
mov
lea
movl
mov
ljmp
inc
push
mov
out
dec
add
xchg
out
int3
stc
lea
pop
sub
incl
pop
inc
std
insb
push
inc
mov
js
inc
leave
sub
sahf
cmp
pop
ljmp
in
lock
add
push
jne
sub
in
outsb
xor
imul
mov
sbb
xor
and
jge
in
mov
adc
add
jbe
xchg
movsbl
cmp
dec
cmc
nop
in
int
in
mov
loop
sbb
xchg
stos
ds
and
xor
xlat
stc
mov
mov
jg
out
dec
aam
gs
nop
pop
sbb
add
jb
sub
js
jo
mov
adc
repz
add
insl
test
xchg
xlat
scas
dec
out
push
jb
das
ret
cwtl
xchg
ja
insb
std
add
inc
xlat
sbb
cltd
cltd
dec
adc
xchg
enter
rorl
or
lret
pop
movsb
sbb
lret
cli
sbb
cmp
fildl
les
mov
sbb
insl
fidivrl
ljmp
add
add
rcrb
jl
or
push
cs
mov
lahf
and
mov
mov
pop
mov
jg
into
je
lcall
fnstcw
ds
add
sbb
orl
inc
jbe
push
and
arpl
call
mov
push
jp
mov
add
jnp
mov
or
mov
pop
jge
divb
push
fst
int3
mov
sahf
xchg
addr16
and
pushf
cltd
shrb
cmc
outsb
jle
stos
inc
insb
mov
sub
pop
xchg
aam
cmp
inc
je
pop
inc
xor
loopne
xchg
pop
pushl
sbb
sarl
pop
pop
add
sbb
xor
aam
sbb
pop
jl
xor
cmp
sbb
jp
loopne
adc
mov
or
and
cmp
jge
mov
fsubrs
xchg
push
pop
sub
nop
insl
add
shl
cli
ljmp
lods
in
in
mov
push
jnp
xor
rorb
jmp
jle
xor
dec
fadd
inc
mov
addl
dec
push
push
push
mov
xchg
and
pop
or
add
sbb
sub
popf
sbb
dec
xchg
mov
inc
dec
xor
pop
mov
aam
add
decb
lahf
xchg
fwait
ss
nop
xchg
adc
sbb
ffreep
xchg
pusha
pop
push
mov
enter
jno
into
pushf
and
lret
mov
xor
out
jle
adcb
adc
test
outsb
rorl
lret
xchg
mov
ret
push
push
in
je
ss
jmp
xsave
dec
nop
mov
mov
insb
dec
pop
or
jb
rorl
jnp
dec
pop
or
or
jg
cltd
xchg
mov
fstl
outsb
lahf
pop
movsl
sub
nop
aam
insl
test
push
dec
lods
ret
mull
insb
shl
push
arpl
icebp
hlt
mov
sub
cmp
fiaddl
cltd
jg
mov
inc
loopne
or
ficoml
stos
out
lcall
mov
fsubrl
mov
shll
dec
sbb
mov
sub
add
je
sbb
pop
andl
jbe
outsb
fists
xor
jp
punpcklwd
test
mov
aaa
pop
xchg
rclb
dec
inc
pop
insb
popf
pop
stos
jne
test
imul
test
lods
int3
lcall
inc
push
inc
xor
pop
fdivrp
in
mov
call
fistps
dec
or
lods
sahf
sub
sub
jp
test
ret
loop
icebp
pop
sti
mov
aad
sub
adc
adc
sbb
inc
add
rolb
cmpl
cli
in
pop
adc
dec
inc
mov
ret
inc
push
push
jo
popa
sbb
ret
xor
sub
mov
jp
loopne
xor
mov
push
fnstenv
jp
mov
pop
push
jo
out
add
adc
decb
out
scas
fs
ret
dec
sti
cltd
bound
mov
inc
xor
das
adc
movsl
or
and
ret
sbbl
out
ret
test
jbe
dec
jne
adc
cmpsl
push
subl
nop
adc
mov
pop
mov
clc
sub
stc
mov
dec
loop
cmc
jg
aam
pushf
fwait
cmp
jae
push
push
lds
subb
fld
adc
fstpl
and
cld
sti
mov
lahf
loopne
lods
rolb
jns
ret
test
jle
mov
mulb
sbb
mov
rclb
fs
into
ficompl
pop
jnp,pt
fisubrs
mov
pop
or
jno
lcall
insb
jbe
int
push
mov
out
pushf
inc
dec
add
pushf
cmp
push
mov
inc
mov
sarb
cli
cltd
das
inc
std
inc
jne
lahf
ficompl
enter
lds
bound
in
push
mov
mov
pop
dec
xor
test
add
jne
inc
dec
jl
test
xor
jge
push
fiadds
xor
cmp
mov
fisttpll
pop
pop
pushf
dec
jge
fcoml
jnp
lds
jle
in
lret
jnp
loopne
sub
gs
jae
jno
or
ret
adc
mov
ficomps
subb
js
jecxz
or
jb
das
xchg
test
jne
and
or
pusha
scas
xchg
sub
sbb
repnz
or
aam
out
hlt
lahf
pushf
mov
dec
stc
or
jne
push
jno
je
sub
mov
jne
xchg
mov
push
xor
adc
mov
xor
in
adc
jge
cli
mov
notb
inc
cwtl
sbb
mov
cli
mov
push
mov
jae
lahf
icebp
les
xor
mov
sub
inc
push
enter
shll
addr16
dec
mov
test
orl
xor
test
xchg
add
mov
jecxz
xor
aad
add
cmp
mov
lret
insb
pop
sbb
orl
stos
movsb
movsl
clc
loope
lahf
mov
xchg
lds
xchg
mov
cmp
push
pop
xchg
cwtl
push
aad
or
pop
loop
ror
cld
sbb
xchg
mov
cmp
ljmp
jle
aaa
roll
pop
icebp
clc
push
rol
outsl
xchg
call
push
mov
mov
popf
pop
mov
insb
or
test
jae
inc
mov
cmpsl
repnz
jle
sbb
std
imulb
mov
inc
jnp
push
pop
das
je
test
arpl
and
cs
add
mov
pop
mov
or
adc
loopne
cmp
jae
movsl
mov
push
mov
fisttpll
jmp
dec
mov
xlat
pop
dec
mov
and
ds
fdivr
loope
and
add
mov
inc
cmpsl
add
scas
jo
hlt
inc
test
pop
xchg
pop
jnp
in
pop
add
xor
pop
out
test
movsl
add
inc
ja
sub
sub
mov
inc
test
test
jno
xor
sbb
lret
xchg
scas
xlat
or
mov
adc
daa
fbld
cmpsb
jns
fidivs
sbb
not
inc
push
add
sub
xor
lret
xor
and
fwait
jg
sub
inc
aaa
int3
clc
test
pop
das
enter
mov
fs
sub
enter
scas
jno
jb
xchg
sbb
push
fidivl
gs
leave
sbb
je
mov
jbe
xchg
vphaddbw
sub
out
and
sub
jo
nop
notl
sub
or
pop
mov
dec
cmpsb
adc
icebp
inc
ret
xchg
inc
mov
mov
sti
inc
enter
xchg
mov
lds
cmp
sub
das
orb
fmulp
jmp
push
cmp
mov
xchg
fs
mov
mov
sbb
je
xchg
test
sub
lret
stc
into
pop
out
and
movsl
int
or
mov
leave
dec
xor
mov
loope
stos
mov
les
jbe
mov
out
icebp
dec
push
cmpsb
xchg
xchg
icebp
repz
xor
push
inc
outsl
xchg
ja
mov
notb
out
lock
lods
rclb
or
or
mov
stc
inc
sub
mov
loopne
pop
adc
callw
mov
add
jno
rcll
add
adc
mov
and
sbb
mov
lahf
fiaddl
or
imul
cld
sbb
rclb
xchg
mov
cmc
out
and
scas
cwtl
mov
push
fisttpl
mov
mov
jb
clc
inc
out
outsl
xchg
or
pushf
repz
jp
mov
seto
mulb
dec
pop
insb
stos
insl
inc
cs
and
repnz
mov
inc
lcall
mov
cmp
sub
pop
xor
add
ret
mov
scas
into
into
nop
xchg
and
push
push
add
xchg
mov
mov
inc
add
dec
xor
and
loop
sbb
addl
sub
push
lcall
nop
test
cmpsl
push
fdivl
mov
loopne
jg
mov
pop
scas
rol
fcompl
add
insb
mov
int
xor
fsubrl
filds
xchg
lock
inc
ret
xor
sub
add
popf
cs
dec
movsb
scas
xor
mov
cmp
fmull
outsb
repnz
ret
call
addr16
adc
push
push
inc
aas
lods
mov
int
in
in
lahf
fstps
cld
aad
gs
or
data16
lea
add
popa
daa
stos
cltd
push
xchg
pmulhw
inc
push
dec
ds
sti
shll
iret
dec
in
jns
fadds
xchg
stos
cmp
xchg
lret
mov
xor
cltd
outsl
dec
inc
jle
jecxz
nop
mov
stos
das
lret
mov
xchg
mov
dec
cmpsl
adc
cmp
cli
dec
lock
in
repz
and
pushf
out
push
pusha
pop
fstp
jne
faddl
push
and
fisubs
mov
jns
sti
je
roll
dec
cmp
cmp
sub
pop
fadd
mov
push
adc
rcl
fisttps
mov
in
popf
fnstsw
repz
dec
sub
or
sar
cmp
push
rcrl
std
mov
scas
mov
call
jnp
or
fmuls
and
mov
in
leave
je
dec
xor
outsb
lret
lock
cltd
out
ds
mul
push
test
lods
cwtl
pop
adc
cmpsb
mov
lret
cwtl
pushl
ljmp
call
sub
push
aaa
dec
imul
pushf
mov
aad
and
mov
jmp
pop
idiv
mov
sub
sti
pop
add
inc
lods
in
adc
sbb
adc
add
or
and
and
icebp
ret
lock
mov
xchg
loop
add
fwait
sarl
sub
dec
jl
repz
mov
adc
hlt
dec
lods
xchg
fidivl
pop
push
aam
pop
jb
add
xor
pop
lods
fbstp
sbb
adc
lods
adc
mov
aad
mov
sti
mov
idivl
dec
or
pop
outsw
out
lret
lock
mov
or
mov
jns
push
xchg
notl
xchg
out
sub
int3
mov
cwtl
sub
pop
and
cmpsl
xchg
test
leave
xor
cmpb
and
sbb
out
lods
mov
out
test
movsl
jge
sbb
fldcw
sub
jmp
outsb
fwait
pop
mov
sbb
and
out
pop
add
fwait
pop
ficomps
test
pop
out
scas
mov
inc
in
pop
sub
insl
repz
out
loop
pop
dec
and
and
jno
cld
add
out
shlb
or
movsl
mov
jl
push
sub
cmp
push
mov
jle
jg
fcos
xor
rorb
mov
dec
pop
addr16
pop
outsl
jl
cmpsb
push
jb
sete
mov
sub
shrl
dec
sub
or
push
mov
rcr
sar
mov
add
sub
push
stos
arpl
jns,pn
push
xlat
xchg
lret
inc
ss
or
sti
repnz
and
call
lret
scas
inc
repnz
icebp
out
mov
mov
cmp
pop
rcll
popa
mov
shll
push
pop
sahf
jns
pop
and
add
sbb
xchg
sbb
in
and
les
hlt
and
cmp
ret
mov
sbb
add
out
sbb
leave
add
xchg
cltd
lahf
rcrb
or
iret
sbb
sub
sahf
add
mov
dec
xchg
imul
adcb
aam
sbb
or
pop
rorl
ret
mov
xchg
jnp
jmp
mov
adc
xor
jb,pn
pushf
inc
inc
cmp
fcompl
jecxz
or
stos
pop
popf
loope
into
xchg
mulb
pop
je
jp
inc
dec
lods
data16
mov
lock
mov
sbb
add
stc
or
push
test
fists
arpl
fdivrl
jbe
pusha
adc
shlb
ror
push
int
js
jl
mov
out
xchg
dec
movsl
mov
aam
cmpl
lea
dec
and
jb
jns
mov
incl
and
add
or
aam
inc
cmpsl
push
movsb
jne
sahf
sti
repnz
cmp
dec
or
aas
lcall
push
icebp
addb
or
inc
scas
xlat
inc
shl
xchg
sbb
sbb
jnp
sub
rcrb
adc
and
jo
fnstenv
lods
add
gs
ja
sbb
add
cld
inc
fbstp
xchg
in
mov
rcll
mov
into
inc
cmpb
sahf
sub
mov
pop
scas
jns
inc
xchg
dec
addr16
imul
andl
test
cmp
mov
int3
nop
mov
dec
jmp
push
or
aad
sub
push
mov
addb
pusha
fs
gs
sub
test
sub
cmp
mov
int3
aam
mov
pop
jno
jmp
sub
ljmp
mov
cmpsb
sub
inc
imul
aas
dec
addb
push
lahf
and
xchg
sti
xchg
dec
inc
mov
jae
inc
or
scas
mov
pop
jbe
mov
mov
lods
sub
dec
push
std
into
and
test
fsts
mov
mov
xor
xchg
lods
pop
lods
loop
xor
mov
fistps
add
sahf
mov
in
xchg
adc
dec
push
arpl
jno
dec
movsl
daa
mov
pop
pop
clc
lock
fistpl
cmp
or
and
and
sub
sbb
fistl
xchg
imul
mov
pop
in
jne
pusha
inc
sub
out
push
ljmp
aam
in
inc
pop
jmp
out
xor
dec
cli
mov
sub
dec
addr16
mov
int3
rcll
andb
dec
popa
test
jo
test
cwtl
lds
fldt
movl
ret
clc
push
mov
mov
ret
jne
lods
cld
shl
lds
push
pop
xchg
sub
jmp
jns
mov
data16
mov
out
add
adc
jb
add
mov
pop
sub
mov
jo
pop
stc
adc
inc
sub
shll
cmpsb
out
mov
ljmp
dec
mov
aam
loop
push
mov
jecxz
add
push
cmp
ja
push
push
push
jne
add
out
xchg
lret
je
pop
jnp
add
addr16
dec
and
into
push
enter
mov
loop
movsb
add
adc
xor
add
or
sub
stc
or
mov
pop
mov
cs
popf
js
or
xorl
xor
rorl
push
sbb
jge
cld
cmp
cmp
mov
sub
int3
push
iret
mov
add
adc
or
mov
lds
jno
mov
or
push
xlat
es
and
adc
jp
clc
push
fistpl
xchg
jge
rcrb
add
xor
fwait
insb
sbb
rcrb
xchg
cli
mov
mov
insl
xchg
mov
ficomps
dec
push
add
cli
inc
ss
inc
adc
lock
fildll
nop
mov
imulb
das
test
and
and
sub
cmp
mov
pop
lods
fbstp
fildl
sbb
pop
aas
pop
inc
in
cmp
ss
mov
or
in
pop
push
packssdw
daa
cmp
repz
imul
ficompl
dec
cmp
push
cld
xor
adc
push
ljmp
xchg
mov
mov
cli
dec
rcr
aam
sti
addr16
fxch
addb
pop
sbbl
cmp
repnz
data16
mov
or
loope
adc
cmp
or
and
fdivr
outsb
jmp
pop
decb
and
xchg
push
es
andb
adc
sub
bound
outsb
inc
push
loop
es
or
aam
lret
sarl
add
test
jl
mov
dec
push
repz
or
and
imul
inc
xchg
ljmp
fstpl
xorb
lret
fs
jle
ss
sahf
scas
jg
stos
test
sbb
int3
adc
xchg
sub
cld
mov
xor
fadds
hlt
test
pop
adc
pop
cmp
fstl
adc
push
and
test
mov
ja
or
sahf
xor
adc
bound
fsubs
inc
push
fildl
jge
add
stos
add
sbbb
fidivl
cmpsl
into
and
hlt
lret
pop
or
andb
cmp
jno
into
scas
fistpl
lds
push
call
or
pop
pop
mov
nop
cli
fsub
mov
dec
cmp
xchg
std
or
mov
ret
mov
popf
addr16
inc
sahf
cmp
scas
outsb
jp
fwait
add
pop
arpl
pop
xlat
repz
imul
clc
in
or
inc
es
fstp
mov
imul
mov
out
xor
mov
push
mov
aas
mov
popf
ljmp
cmp
push
mov
mov
outsl
fmuls
sub
xor
xor
cmc
scas
jns
dec
ds
shll
jl,pn
lods
xor
lods
mov
cmp
jl
and
jg
enter
cmp
pop
push
movsl
les
int
lock
cmp
cmc
xlat
adc
cli
inc
dec
subl
or
lods
sub
xchg
inc
inc
jae
int
nop
imul
jp
dec
shl
mov
adc
daa
add
stos
test
cmp
mov
sub
fmuls
mov
dec
jg
cmc
cmp
mov
stc
in
jle
in
les
xchg
and
aaa
imul
or
popa
push
add
dec
jo
in
push
gs
mov
and
push
push
lds
push
fisttps
aaa
stos
mov
pop
add
cmc
mov
insb
in
cwtl
mov
xchg
pop
repz
popf
daa
les
sub
lret
sbb
inc
xchg
push
mov
inc
hlt
or
test
xor
test
aaa
mov
ss
mov
int3
out
scas
daa
daa
mov
inc
cmp
or
out
test
adc
or
mov
insl
pop
clc
add
xchg
jmp
adc
dec
xchg
or
loop
xor
inc
aas
xorb
pop
push
inc
shrb
mov
fimull
lods
jp
pushf
mov
sbb
arpl
xchg
emms
push
mov
sti
mov
enter
mov
fucomp
data16
das
mov
fbld
fwait
mov
outsb
int3
inc
in
xor
into
outsb
sahf
sti
stos
adc
dec
ret
push
je
jnp
aam
loope
mov
rclb
pop
cmp
dec
jo
fcmovb
test
mov
push
pop
push
stos
aad
sub
shrb
repnz
cs
inc
popf
adc
rol
dec
fisttps
outsl
fs
jnp
cmp
push
xor
scas
adc
mov
mov
stos
and
subb
push
call
shr
sub
cwtl
movsb
push
std
dec
sub
fwait
push
sbbb
es
iret
lds
rol
xchg
push
sarb
les
cmpl
pop
aaa
outsl
enter
pop
adc
ror
movsb
xor
jns
and
jbe
arpl
stos
and
adc
xchg
pusha
jp
and
cmpsl
dec
ja
repnz
lods
fsubs
sbb
jg
mov
push
dec
push
mov
jns
in
nop
add
or
dec
sub
sbb
es
pop
pop
mov
adc
push
jb
sub
hlt
pop
sbb
mov
inc
repnz
jno
and
fmull
dec
mov
dec
out
inc
inc
and
xchg
cwtl
inc
mov
sbb
iret
pop
insl
jecxz
int
cmp
sbb
ret
and
pop
std
sbb
mov
dec
xchg
lahf
dec
xor
dec
add
or
dec
ret
dec
fimuls
or
rol
arpl
xor
in
addr16
aam
leave
mov
xor
shll
jo
mov
push
push
pop
test
inc
fildl
in
cmp
pop
ret
xor
and
scas
daa
daa
stc
pusha
add
test
push
xor
arpl
or
in
cmp
mov
mov
push
stos
xchg
xchg
and
int3
fimull
push
ljmp
push
loopne
push
adc
jle
stos
sbb
out
sub
jo
add
sub
xchg
mov
pop
adc
sbb
pop
fs
loope
inc
pop
popa
clc
jns
mov
mov
and
js
jnp
push
xchg
mov
aad
mov
mov
pop
iret
mov
jo
lods
in
inc
adc
sbb
fadds
pop
jne
test
jbe
mov
mov
mov
test
aas
or
shll
subl
adc
inc
mov
subl
inc
fs
movsb
push
scas
fldt
mov
adc
add
ja
inc
sub
jno
and
popf
jne
lock
and
out
xchg
and
jge
mov
cmc
sbb
dec
pop
jmp
sub
sub
xchg
pop
mov
xor
shlb
jl
out
adc
lods
mov
pop
dec
mov
outsl
mov
adc
pop
stos
cmpb
adc
pop
inc
andl
push
leave
pop
or
xor
aam
mov
pushf
cltd
ljmp
xchg
lcall
inc
jge
loop
cld
pop
mov
fdivr
orb
lcall
lret
sbb
mov
adc
pushl
test
iret
ljmp
out
pop
or
fsubp
inc
lea
enter
add
xchg
jae
jne
xor
ja
leave
lea
ljmp
push
daa
xor
and
jnp
jp
sub
addb
dec
bnd
popa
iret
jb
jb
cmp
daa
movsl
and
mov
cmp
ja
ret
pop
or
cmpsl
daa
or
in
and
cmp
mov
outsl
mov
fwait
dec
sub
ret
data16
xor
mov
stos
cmp
rcrl
inc
rclb
xchg
nop
ret
fidivrs
ja
stos
or
mov
enter
xchg
mov
push
sbbl
es
mov
fisubrs
pop
scas
scas
mov
xor
pushf
sub
cltd
mov
sbb
jge
adc
scas
lock
loope
test
pop
or
negb
xchg
rcrb
js
cmp
jmp
lds
dec
repz
shll
ds
movsb
fwait
leave
and
gs
test
sub
inc
ljmp
adc
or
rcr
mov
sub
add
adc
or
lods
lock
xor
sbb
jne
test
pop
lahf
jbe
sub
sbb
out
inc
and
or
daa
ret
mov
cmp
loop
lahf
dec
xchg
out
test
pop
xlat
dec
jge
in
cmp
dec
stc
nop
jmp
sar
jmp
icebp
rcrb
mov
es
dec
loop
and
sbb
xchg
cmpl
push
test
and
test
xchg
jle
inc
and
pop
rorl
mov
fsubrl
jle
aaa
ret
push
mov
insb
lcall
in
xor
loopne
adc
or
incb
hlt
inc
sbb
push
push
mov
shr
inc
andb
nop
mov
sbb
fldcw
lods
sbb
jl
push
jmp
mov
mov
ds
jno
xchg
sbb
mov
rol
outsl
xor
mov
mov
sub
shlb
pop
stc
and
xchg
jb
repz
adc
inc
je
mov
pop
mov
push
das
fists
fistl
sbb
jle
jmp
es
push
jle
lods
repnz
push
out
pop
and
xor
or
std
jne
stos
jbe
add
dec
stos
add
mov
xcrypt-cfb
cmpsl
loop
nop
mov
insb
cli
mov
insl
jnp
sbb
pop
lahf
mov
push
xor
mov
add
xor
mov
mov
lods
out
ljmp
jl
in
out
pop
ja
bound
rcrb
loope
xchg
pop
imul
mov
int
mov
in
in
test
roll
aam
inc
es
cld
pop
dec
cmpl
sbb
rcl
andb
push
lcall
adc
cmp
sbb
mov
ret
test
jg
sbb
pop
or
jg
mov
sahf
jnp
insl
sbb
fcmovnb
mov
into
and
xor
xchg
or
xor
jo
outsl
pushf
shlb
mov
scas
mov
jne
jne
pop
in
and
and
pop
negl
fwait
push
pop
mov
idivb
adcl
loop
cmp
mov
cld
inc
les
out
test
pop
ja
lahf
loop
or
mov
ljmp
pop
and
adc
pushf
dec
inc
or
jne
ror
push
jle
add
rcrb
loope
out
jp
notb
imul
dec
mov
jecxz
imul
fildl
push
mov
aam
stos
mov
pop
add
pop
loopne
sarb
movsb
in
imul
fld
icebp
enter
jnp
fsts
adc
xchg
pop
push
add
add
dec
in
pushf
cmp
mov
fsts
mov
fs
pop
cmp
popa
fdivrl
xor
popf
xor
pop
jae
adc
push
xchg
mov
sub
and
add
nop
stos
cmp
sbb
sti
adc
cmp
jne
push
push
hlt
xlat
dec
mov
mov
and
into
cltd
sets
jg
cld
rcrl
inc
int3
pop
adc
sub
inc
pop
cwtl
movsl
sbb
jmp
in
inc
mov
das
xor
mov
lret
pusha
mov
lds
or
adc
lods
mov
std
jmp
jecxz
test
scas
dec
mov
sbb
es
cmp
pop
test
cmp
adc
in
and
inc
push
rorl
mov
sub
inc
pop
sub
scas
out
fimuls
in
es
sbb
jl
mov
sub
fadds
and
xchg
popf
testl
sbbb
std
push
rcll
dec
push
inc
roll
fwait
xor
imul
and
dec
push
xchg
pusha
js
pop
int3
sbb
add
shrl
cltd
add
push
jno
mov
insb
iret
push
stc
aad
mov
js
hlt
inc
mov
mov
inc
pop
inc
inc
cmpsb
andb
lock
dec
pop
rorl
pop
test
stos
adc
sub
sahf
jl
cwtl
movsb
test
pop
mov
push
inc
ja
stc
mov
and
lods
cmpsb
out
ja
sub
mov
shlb
jmp
dec
cmp
cmp
cmp
flds
arpl
push
xchg
jae
mov
push
lahf
dec
pop
imul
adc
push
test
fildll
stos
out
adc
ljmp
mov
lret
call
pop
mov
das
push
push
nop
out
hlt
jns
aaa
aad
jge
into
sti
stos
loop
xor
call
mov
dec
pushf
dec
jp
sbb
mov
enter
cli
pop
icebp
imul
inc
inc
mov
push
pusha
movsl
inc
lea
mov
ljmp
dec
and
adc
sbb
jge
xchg
mov
fadd
or
movsb
movsb
jo
popf
xchg
cmp
out
icebp
dec
ja
pusha
adc
and
in
push
divl
hlt
out
and
jmp
mov
jmp
mov
lret
std
stc
addr16
pop
sbb
ret
test
mov
daa
loopne
aaa
mov
xchg
sub
in
insb
pop
shr
mov
mov
dec
dec
in
bound
or
sbb
testb
adc
cld
jg
cmp
jae
repnz
pop
decl
loope
sub
pop
orl
push
add
enter
dec
je
mov
sbb
dec
dec
orl
insb
add
lods
jl
dec
mov
rol
arpl
das
iret
das
inc
nop
xor
daa
push
push
push
sub
aaa
or
out
and
aaa
pop
lahf
add
lds
ss
adc
adc
xor
sub
cmpsb
dec
sar
adc
xchg
mov
test
mov
dec
shlb
pop
into
or
sti
sub
jle
jno
pushf
mov
xor
pop
pop
fcmovbe
sahf
es
imul
mov
dec
sub
stc
fnstenv
mov
xchg
ret
mov
call
pusha
in
test
sahf
mov
inc
dec
icebp
add
aas
adc
xor
repnz
cmp
add
fs
cmp
iret
shrb
sbb
and
cld
in
fprem
orl
fsubrs
inc
add
in
mov
dec
imul
faddp
push
and
aad
or
lret
test
inc
mov
and
or
rcrl
mov
into
adc
cmc
jae
leave
xchg
push
mov
ljmp
lcall
popa
ja
jle
fists
mov
lods
pushf
ss
push
add
sbb
or
testb
ljmp
lret
bound
cmpsb
bound
ds
lahf
sbb
adc
xchg
shl
adc
enter
popa
into
pop
stc
sbb
repnz
push
inc
pop
rolb
inc
out
dec
out
pusha
sbb
imul
mov
pop
loope
dec
cs
into
sbb
cmp
jno
decl
xchg
xchg
fwait
mov
xchg
sbb
or
mov
mov
add
or
test
lods
xchg
cmpsb
jne
ret
stc
mov
jo
pop
int3
inc
xchg
mov
inc
test
and
out
jmp
lods
sahf
cli
and
insl
jae
or
mov
dec
clc
mov
mov
icebp
fdivrs
les
testl
lock
adc
fsub
incb
mov
adc
or
mov
mov
hlt
mov
xor
gs
push
out
lea
inc
testl
filds
dec
sarl
dec
int
cmp
ffreep
xor
cmc
fstpl
mov
adc
fisttps
cmc
or
inc
mov
lods
in
adc
es
push
mov
mov
scas
cmpsb
push
jnp
daa
pop
pop
push
outsl
fldt
in
pop
daa
cmp
jge
jl
mov
fbstp
mov
loop
cmpb
mov
jl
mov
jl
les
lods
scas
inc
incb
fistpl
mov
mov
scas
pop
icebp
and
sbb
sub
in
mov
scas
cltd
inc
enter
notb
sbb
icebp
jecxz
mov
dec
cmpsl
dec
std
push
add
sti
xchg
mov
and
std
pop
fs
movsb
imul
jnp
or
gs
xchg
push
push
sbb
rcrb
test
or
rclb
sbbb
jl
ficomps
lret
popa
pop
sub
lret
pop
sbb
sbb
in
rcr
lock
adc
cmpsb
jnp
xor
dec
xor
mov
cmpsl
addr16
or
fldl
fbld
aas
pop
mov
jns
inc
clc
sub
vmxoff
or
out
push
rcrb
scas
xchg
add
in
aaa
mov
cmc
daa
lcall
test
repnz
xchg
loopne
outsl
ja
loopne
scas
pop
filds
popf
adc
add
adc
nop
fstl
xchg
loop
jo
cld
jno
push
popf
pop
mov
divb
loop
pusha
ljmp
or
mov
inc
enter
xlat
mov
sbb
notl
loop
adc
sarl
into
fmuls
loop
sti
add
fimuls
mov
or
cmp
pusha
inc
lock
fisttps
mov
wrmsr
fdivrs
flds
mov
mov
ss
es
sbb
movsb
jno
dec
stos
in
aas
test
or
lods
inc
xchg
ds
cmp
loop
inc
out
dec
aad
mov
push
inc
fsubrl
xchg
sbb
lret
mov
iret
mov
cmp
enter
jae
test
mov
jg
aas
mov
push
mov
cmp
push
sub
pop
xchg
fs
leave
es
test
mov
adc
andb
push
adc
bswap
flds
jns
lahf
jecxz
mov
inc
cmp
rcrl
enter
and
cwtl
and
jnp
and
out
pop
cmc
test
mov
xor
rcl
in
pop
mov
mov
cmpsb
mov
mov
mov
mov
pop
imul
xor
inc
mov
loope
lds
push
lcall
aas
xor
fsubrl
rolb
in
and
les
jns
sub
movsl
mov
push
adc
add
adc
cmc
ljmp
mov
cmp
adc
add
push
add
scas
int3
dec
sbb
test
jp
inc
popl
xlat
add
les
xorl
pop
xor
arpl
push
rclb
insb
add
dec
jmp
outsb
addl
adc
dec
jl
test
jno
cwtl
movsl
std
lret
add
adcl
xorl
xchg
inc
sbb
out
fwait
or
adc
sahf
mov
jb
sbb
loope
ds
outsl
je
push
jne
bound
adc
or
inc
and
lods
xor
mov
test
cmp
add
rol
fimull
pop
and
or
pop
add
es
or
adc
pop
mov
nopl
rol
push
mov
push
imulb
cmp
sub
arpl
pushf
test
mov
pop
mov
test
movsl
xchg
sub
fnsave
sarb
int3
dec
fcmovbe
aam
outsl
cmpsl
ja
pop
push
into
push
xchg
dec
push
add
cmp
stos
push
lcall
mov
out
and
adc
in
add
mov
rcrl
loop
ficompl
xchg
sbb
jno
sarl
inc
or
pusha
mov
xchg
push
mov
mov
rclb
sbb
popa
and
addb
mov
jns
ret
push
popf
xor
mov
ljmp
xchg
stos
xor
mov
scas
daa
loopne
movsl
mov
push
jno
dec
nop
adcb
xchg
inc
int3
pop
rcrl
or
fcomip
pop
mov
dec
es
ss
push
subb
das
mov
stos
cmp
int3
adc
roll
adc
pop
nop
daa
cmp
push
ret
cltd
pop
sub
sub
cmpsb
sub
data16
sbb
int
popf
pop
cli
push
and
inc
cmp
push
adc
dec
cmpsb
mov
cmpsb
imul
shll
adc
icebp
je
lods
inc
dec
cwtl
call
mov
push
aas
test
mov
into
ljmp
int
sbbl
pop
add
and
push
fprem1
rorb
cmc
shlb
push
pop
test
insl
test
dec
lods
sbb
out
lock
sahf
xorb
xchg
adc
push
enter
dec
push
mov
or
lods
test
loopne
cmp
or
fidivl
sbb
stos
or
xchg
cli
in
je
adc
fbld
push
ret
pop
jmp
cmp
mov
je
fwait
subb
mov
je
daa
out
das
dec
arpl
arpl
xchg
scas
pop
aad
mov
jbe
lods
or
dec
adc
insb
or
cmp
pop
sarb
jae
push
fildll
cmpsl
dec
xor
pusha
pop
jae
or
jge
clc
sbb
inc
popa
fnstenv
gs
shl
and
sbbl
or
pop
leave
std
cmc
add
adc
subb
mov
loope
dec
fidivl
cmp
mov
out
sub
popa
mov
popf
ljmp
lret
inc
xor
add
das
xchg
xorb
nop
jmp
inc
mov
inc
add
test
ja
jae
fwait
lods
subb
xchg
xor
jo
mov
sar
inc
sbb
cld
adc
adc
enter
and
dec
shlb
insl
and
hlt
add
and
andb
test
cli
imul
sti
mov
sub
mov
loope
bound
les
repnz
jb
pop
ljmp
pop
jnp
ja
addr16
push
in
inc
scas
pop
vdivss
loope
sub
cmc
data16
in
test
jno
lods
call
cmp
mov
pop
sub
jnp
sub
idiv
jp
inc
mov
mov
mov
in
jbe
cld
arpl
jmp
das
popa
adc
dec
xor
xor
inc
or
cmp
xchg
aaa
and
iret
push
or
andb
pop
xchg
cltd
cld
cmpsl
add
jae
or
outsl
outsb
out
stc
push
test
sbb
out
call
jmp
daa
jge
xorb
fnsave
fildl
sahf
mov
lcall
jp
xor
add
rcrl
cmp
add
sahf
pop
pushf
dec
gs
iret
loopne
sub
das
lods
xchg
xchg
decb
jns
cwtl
pop
sub
lods
xor
and
jns
subl
roll
xchg
ja
adc
sarl
rcll
adc
mov
push
ja
push
rclb
push
push
lret
xchg
mov
rolb
rol
pop
jle
xchg
xchg
cmp
ja
or
lods
and
push
pop
popf
call
mov
adc
dec
sub
ficomps
xchg
push
mov
test
aad
xchg
mov
jae
xchg
imul
jne
cmp
add
sub
push
and
fwait
adc
push
sbb
inc
scas
insl
imul
dec
sub
push
into
xchg
ja
ss
mov
lock
insl
daa
int
fsubrs
clc
mov
andb
inc
push
movsl
xor
je
es
jbe
out
push
popa
sbbb
pushf
cli
pop
add
repz
popf
arpl
in
cltd
inc
sbb
out
cmp
xchg
mov
out
dec
aam
jbe
pop
daa
movsb
stc
and
adc
ret
shr
int
arpl
dec
js
xchg
sbb
jmp
or
mov
jecxz
mov
xor
dec
aam
imul
shlb
std
loop
xor
pop
mov
mov
mov
ds
mov
in
jge
mov
mov
daa
outsb
push
popf
lahf
and
jnp
sbbl
dec
sub
cmp
inc
sub
fstpl
movsb
adc
mov
retw
push
jo
pop
mov
add
and
mov
mov
divb
inc
add
testl
das
adc
movsb
aad
out
and
fildll
stc
adc
or
rcll
adc
hlt
xor
shlb
stos
inc
ret
popa
sub
ja
out
loop
stc
lret
mov
shll
jecxz
add
mov
mov
movsl
jo
in
adc
xor
add
pop
or
adc
test
add
pushf
adc
lahf
pop
outsb
add
iret
and
loopne
fcomp
pusha
push
in
icebp
mov
adc
imul
cli
mov
dec
xchg
cmp
add
out
adcb
jge
xor
push
arpl
adc
dec
pop
push
push
jmp
mov
ror
push
out
bound
sub
mov
out
inc
inc
mov
roll
mov
pop
stos
imul
inc
ds
jbe
mov
mov
add
imul
arpl
fcmovb
repnz
pushf
iret
enter
in
lcall
mov
dec
cltd
push
ret
adc
out
out
mov
and
pusha
cli
lock
int3
test
jns
mov
xor
pop
aam
dec
pop
cs
sahf
cmp
jo
xchg
or
adc
das
pop
aaa
mov
lea
mov
sub
mov
loop
mov
push
inc
mov
pop
jo
dec
es
cmpsl
dec
aas
int
cmp
je
mov
xchg
les
mov
std
fwait
in
jl
mov
cmp
mov
and
pop
es
jecxz
cmpsl
imul
cwtl
xor
pop
sub
add
roll
push
xchg
cld
ret
jge
je
inc
mov
ja
clc
je
inc
shll
adc
fdivs
insb
mov
in
or
loope
xor
cmp
or
jecxz
or
jp
jl
popf
leave
data16
or
orb
roll
shll
idiv
aas
sub
pop
insb
dec
xor
inc
inc
mov
pop
lret
dec
imul
xchg
imul
or
pop
lea
cmp
push
dec
mov
jae
cli
jnp
mov
xchg
inc
shlb
pop
adc
pop
std
add
mov
nop
sub
repnz
mov
xor
or
pop
mov
jbe
out
icebp
imul
cltd
sub
xlat
inc
hlt
adc
fmuls
sar
cs
rcl
add
and
aaa
int3
notl
xchg
lock
jle
outsl
stc
mov
fyl2x
lahf
aad
push
cmovne
xchg
out
mov
add
jl
adc
jecxz
loop
jp
cwtl
mov
stos
inc
sti
jecxz
lods
sbb
and
inc
add
in
or
enter
lds
sub
inc
lahf
insb
sub
das
popa
pop
inc
jl
into
outsl
add
fstl
js
insb
pop
int
mov
adc
cmp
push
je
cld
idivl
jo
and
lret
pusha
pop
xchg
inc
mov
xor
jns
mov
jns
mov
cmp
xchg
test
lock
lods
mov
out
jge
xchg
adc
cltd
idivb
pop
orl
mov
jp
mov
iret
dec
lea
pop
fstl
in
shlb
dec
das
jmp
inc
lods
leave
in
inc
jns
xchg
jo
sbb
and
jns
aaa
jmp
pop
and
jecxz
test
or
test
xchg
inc
dec
lods
adc
test
andb
icebp
pop
push
jnp
adc
dec
push
mov
pop
inc
mov
mov
dec
mov
mov
dec
xchg
or
mov
mov
mov
sbb
push
ljmp
mov
lcall
adc
test
scas
inc
pop
jmp
mov
adc
pusha
shlb
mov
xor
bound
pushf
imul
jbe
dec
imul
sbb
mov
mov
stos
frstpm(287
xchg
and
test
fnstcw
or
test
xchg
loopew
movups
adcb
lcall
mov
mov
mov
xor
push
outsl
xor
enter
cmp
mov
stos
dec
adc
movsl
popa
push
jg
dec
int3
negl
push
mov
jne
gs
aam
or
add
xchg
inc
out
jb
push
sub
ds
int
or
arpl
gs
or
mov
inc
dec
cld
or
rcrb
gs
addb
lds
mov
jg
sub
cmc
pop
enter
push
int
lcall
testl
clc
sbbl
ss
jne
adc
add
clc
push
icebp
adc
ljmp
jmp
sub
dec
divb
mov
in
das
movsl
sbb
pop
enter
xchg
adc
inc
jno
aas
js
cltd
ss
lods
add
jbe
repnz
fadds
cmc
and
xchg
movsb
pop
stos
cmpsl
ficomps
out
pop
add
into
jbe
pushf
add
mov
fistl
push
in
mov
and
dec
dec
hlt
jo
pop
jb
mov
xchg
pop
xor
cmp
mov
cld
aas
test
jmp
mov
lock
xchg
repnz
jp
leave
add
xor
and
stos
sarb
pop
adc
insl
outsb
dec
mov
cmp
daa
mov
dec
pushf
jmp
mov
xchg
add
outsl
push
add
test
sti
jmp
inc
mov
jl
and
movsl
dec
xlat
xor
jae
insl
pop
mov
test
insl
movsb
adc
imull
stc
inc
cmp
test
pop
subl
jmp
mov
cmp
test
mov
ret
push
dec
xlat
xor
ljmp
ret
sbb
jno
inc
mov
pusha
mov
xor
cli
and
iret
orl
pop
popf
cmpsb
fstl
cmp
and
dec
mov
push
or
or
std
jmp
imul
jne
xor
fs
dec
pop
out
aas
dec
int
idiv
mov
movq
add
push
clc
xor
xor
xchg
inc
test
cmp
fsubl
mov
add
loopne
push
lods
mov
into
cmp
add
test
mov
mov
outsb
add
sahf
sbb
pop
dec
cli
sub
add
mov
out
cltd
mov
mov
fisttps
jae
jnp
rorb
add
mov
imul
push
pop
xchg
push
in
insb
mov
shl
add
jmp
mov
dec
stos
arpl
int
lea
cvtps2pi
add
pusha
pop
or
fs
mov
sub
jns
mov
in
test
dec
and
cmp
mov
nop
and
ret
lret
insb
fsubp
out
hlt
push
mov
in
loope
or
fimuls
pop
call
xchg
push
and
and
dec
lods
mov
cmp
mov
and
insb
fnstcw
push
pop
aaa
and
inc
dec
fisubrs
and
pop
addr16
test
icebp
add
bound
andl
sub
cmc
lods
xchg
stos
cmp
mov
xor
lds
insb
js
sub
and
xor
sub
mov
xchg
jge
mov
leave
cltd
rcrl
daa
daa
or
mov
inc
adc
out
sarl
gs
push
mov
xor
out
mov
lock
movsl
divb
add
cld
lods
xchg
xchg
adc
push
mov
inc
xchg
or
xorb
xlat
movsl
jl
out
xchg
test
pusha
outsb
iret
mov
mov
add
xchg
mov
aad
sbb
fnstsw
xchg
lods
lods
cmpl
jle
cs
loope
jae
xchg
dec
add
fs
xor
xchg
mov
cmp
mov
push
int3
adc
imul
test
jle
ja
adc
outsb
shlb
aaa
cmp
shll
imul
std
and
lds
adc
dec
cld
sub
test
mov
add
cmp
jno
ljmp
push
jnp
sbb
xor
push
push
cmp
test
and
or
pop
into
popf
insl
popf
dec
out
push
xor
sarl
xchg
push
inc
inc
mov
xchg
pop
and
ret
jnp
jmp
pop
add
mov
ds
ret
adc
loopne
inc
mov
addb
addr16
loopne
push
push
test
xor
or
call
pop
pop
cmp
cli
xor
inc
cs
jge
push
push
inc
cvtdq2ps
scas
fwait
mov
sub
test
ficompl
movsb
and
inc
mov
gs
jg
leave
jp
xchg
or
jo
loop
mov
pop
ret
pop
sub
jo
xor
jae
mov
je
cmpsb
fs
icebp
icebp
or
fimuls
aas
nop
stc
or
loop
dec
xchg
cmpsl
gs
fcompl
repnz
push
bound
mov
cmpsl
ja
clc
icebp
adc
scas
cs
pop
pop
fbld
lock
test
das
mov
xchg
push
push
mov
inc
mov
lds
pop
add
add
xor
bnd
ret
or
shlb
sbb
ljmp
imul
nop
loop
xchg
inc
xchg
add
dec
mov
jle
mov
sahf
dec
cld
pop
aad
dec
lahf
out
jb
push
mulb
inc
pop
pop
xor
pop
loop
insb
subb
loope
sub
nop
in
cwtl
dec
inc
xor
cli
fimuls
shl
pop
bound
fwait
jp
mov
mov
mov
out
push
lahf
outsl
xor
or
loopne
inc
loop
sub
test
add
push
xchg
inc
ret
idivl
lea
and
pop
mov
add
jmp
test
pop
std
xchg
lret
xor
or
subl
mov
iret
jle
mov
stos
rcrb
shr
fdivl
das
push
or
scas
add
pop
mov
sub
or
popf
cmp
in
test
sub
icebp
mov
push
sbb
mov
inc
mov
inc
sbb
shr
sub
pop
loope
push
adc
sbb
mov
sarl
fwait
movsb
bound
mov
adc
fldenv
inc
fsubrl
insb
dec
mov
divl
adc
pop
std
sub
in
xchg
lcall
jl
ja
pop
add
enter
ljmp
mov
dec
mov
pusha
cwtl
mov
insl
push
xor
push
enter
fwait
pop
fsubrp
add
pop
cs
aad
sbb
xlat
or
movsb
pop
or
push
inc
shl
jmp
fcmovnbe
jo
xchg
add
xchg
push
out
iret
mov
imull
dec
imul
cltd
or
xchg
jle
xchg
out
aas
mov
sub
cmp
and
xor
imul
aas
add
inc
aas
popa
in
stos
test
dec
add
outsl
push
inc
sub
jne
insb
add
jbe
and
adc
or
or
or
scas
mov
in
inc
pushf
ficompl
push
imul
dec
add
pop
inc
mov
xchg
xchg
js
inc
cmpsl
rcr
mov
sahf
and
sbb
pop
repnz
xchg
pop
scas
jl
adc
ret
xchg
fisubl
in
push
repz
rcll
cmp
dec
xchg
ljmp
fisttpl
pop
sbb
cmpl
sbb
popf
push
adc
or
push
sub
cmpsb
inc
and
push
mov
mov
loop
push
mov
data16
and
inc
xor
xchg
mov
adc
or
or
add
mov
xor
pop
adc
mov
fnclex
rclb
xchg
sub
iret
call
xchg
leave
mov
inc
push
jp
sti
loopne
pop
cmp
push
cwtl
inc
aam
xorl
nop
mov
sbb
sbb
orb
xor
add
sbb
mov
mov
imul
mov
fistpl
sbb
cmp
pop
mov
mov
jo
repz
es
or
lcall
dec
mov
loop
adc
or
lcall
jmp
call
popa
into
adcb
bound
stos
dec
andl
dec
aas
mov
xlat
adc
mov
repz
clc
push
inc
adc
rcr
ljmp
or
popaw
mov
out
sub
xchg
std
sbbl
ds
xchg
add
mov
inc
pop
call
add
inc
cmp
data16
rorl
call
xchg
push
stos
jg
push
sub
int3
imul
add
cmpsb
dec
push
adc
aad
in
mov
xchg
dec
out
xchg
xchg
pop
roll
xchg
scas
sub
enter
int3
pop
mov
xor
inc
push
hlt
mov
xor
neg
mov
test
bound
js
mov
sub
sbb
mov
mov
sahf
popf
ds
es
insb
push
jl
push
xchg
push
cmp
pop
cld
daa
prefetch
or
in
lcall
xchg
stos
aad
cmc
repz
mov
insl
pop
adc
fs
inc
adc
cli
and
push
andl
test
mov
cmpsb
or
add
xor
jb
push
pop
aad
lret
fwait
aaa
lret
in
xor
dec
push
outsl
sub
mov
fcompl
xlat
jno
shll
lret
sbb
pop
sahf
add
inc
xor
fbld
ja
and
inc
pushf
push
adc
or
add
in
or
mov
fidivl
insb
mov
inc
pop
push
lcall
pusha
in
fistl
call
jmp
mov
push
repz
fcomps
imul
adc
pop
shll
jecxz
mov
lods
cmpl
dec
fnsave
or
and
xorl
sarl
je
or
mull
jnp
cmp
cmc
push
push
lds
push
mov
pusha
mov
fsubl
jg
jns
mov
lds
cmp
std
dec
dec
pop
add
push
push
mov
cmc
test
arpl
sub
xor
ja
add
sbb
add
subb
mov
mov
mov
jns
mov
repz
lahf
shl
out
lock
mov
out
fxch
fs
daa
or
dec
jmp
mov
call
iret
xlat
ret
scas
or
adc
pop
pop
mov
pop
sarb
pop
fidivrl
lods
push
addl
xlat
out
sub
aas
adcl
and
jge
lcall
mov
cmp
and
jmp
test
ja
popf
mov
gs
push
mov
mov
lea
add
test
adc
movsl
pushf
dec
cmpl
mov
cmp
mov
lret
push
mov
mov
dec
out
add
pop
les
mov
ds
call
ss
loope
adc
test
sub
add
stos
mov
hlt
push
xor
and
int
xchg
shrl
mov
xchg
mov
in
out
mov
jne
out
dec
cmpsl
sub
cltd
fstpl
aas
jecxz
fcmovb
lret
jns
lea
test
jge
je
fdivr
jb
aad
mov
cs
push
stos
fisttpll
mov
arpl
insb
dec
and
lock
dec
cli
mov
xor
fsubrl
pop
jle
sarb
pop
mov
xchg
mov
aaa
xlat
lods
push
mov
addr16
jecxz
ficomps
mov
push
sub
repnz
sub
mov
xchg
aam
hlt
pop
pop
ret
sbb
pop
sub
in
jmp
pop
xchg
out
dec
inc
scas
push
pusha
lret
iret
adc
jae
jo
ret
shll
and
pop
cs
lock
mov
inc
cltd
popa
ret
ja
xchg
cltd
cltd
test
push
mov
xchg
xchg
cmp
out
xchg
in
leave
repnz
ret
out
cmp
gs
push
pop
sub
sbb
mov
hlt
pushf
jp
xchg
pop
add
repnz
daa
jle
lret
inc
push
jb
xchg
mov
push
fiadds
and
xchg
cs
or
dec
cmpxchg
add
jg
inc
xchg
mov
xchg
jg
xchg
enter
mov
sbb
xorl
stc
pop
pop
cmpb
movsb
xor
fisttpll
fistpll
gs
jle
roll
mov
add
xchg
pop
jno
and
cltd
push
rclb
cli
mov
pop
mov
mov
mov
mov
and
and
inc
or
sub
inc
sub
jo
lock
sub
mov
ret
roll
es
fstps
jno
pop
and
xor
es
xchg
aas
scas
insl
cmp
xor
pop
sbb
mov
sbb
stos
dec
add
inc
xchg
ds
cli
faddl
mov
dec
cld
cmp
jg
int3
fisubl
dec
std
movsl
mov
nop
pcmpeqb
inc
inc
adc
fcmovb
jle
pusha
and
sti
lea
int3
mov
std
hlt
pop
loopne
out
ss
push
jnp
pushw
xchg
shl
xchg
inc
or
sub
outsb
rolb
into
or
inc
cmpsb
mov
jne
popf
out
fisttpl
rorl
sub
adc
lods
scas
popa
cmp
js
in
in
lods
adc
notl
and
fsubrl
inc
sti
ret
ja
jecxz
jl
inc
stc
inc
add
push
movb
out
enter
insl
push
dec
or
adc
jg
mov
push
es
popa
stos
xchg
lods
mov
cmc
add
imull
loope
stos
pop
loopne
xor
lock
cmc
or
pushf
pop
add
arpl
or
pop
dec
jmp
pop
cltd
stos
cmc
sbb
clc
les
popa
pop
aam
fnsave
mov
mov
jmp
xchg
cli
add
sbb
les
mov
cmp
xchg
dec
jo
imul
push
add
xchg
adc
mov
sub
pusha
pop
movsl
in
pop
divb
jmp
movsb
xchg
mov
aas
mov
and
sahf
sub
jbe
sbb
jbe
pop
call
xchg
xor
test
leave
dec
push
pop
push
sub
mov
jo
xchg
xchg
lea
into
dec
test
inc
dec
inc
rcrb
test
hlt
push
pusha
sbb
arpl
loope
xlat
mov
imul
ret
in
xchg
shlb
mov
stc
outsl
sub
jl
cltd
cmp
push
pusha
fnstenv
pop
and
add
int3
dec
lahf
add
adc
mov
daa
popa
cmpsl
inc
mov
pop
into
fistps
add
cmp
cltd
fisubl
push
pop
pop
xlat
xchg
shll
cmc
mov
sbb
cmpsb
push
push
push
daa
ljmp
fst
mov
sbb
movsl
cmp
push
add
adc
cmpsl
stos
dec
imul
jno
push
fsubrp
or
fstps
pushf
adc
pextrw
es
sbb
and
mov
fildl
mov
test
push
cmpsl
dec
and
loopne
and
shll
stos
outsl
cld
and
mov
mov
add
jecxz
idivl
aas
mov
or
and
mov
pop
std
cli
push
adc
hlt
jl
mov
neg
lods
push
iret
jne
stos
push
mov
test
adc
cmpsl
repz
xchg
or
ljmp
sahf
dec
dec
push
fstl
repz
jae
lahf
lret
mov
negb
add
sbb
xorb
pop
cmp
jg
push
les
daa
daa
pop
add
insl
rorl
and
mov
lahf
rolb
pushf
loopne
adc
insb
sbb
popf
mov
cwtl
inc
into
test
add
inc
mov
cmc
and
pop
mov
ror
mov
and
jnp
mov
clc
adc
mov
arpl
int
stos
xor
cmpsl
outsb
pop
inc
mov
push
into
mov
daa
orb
mov
push
inc
aad
lret
mov
push
cmpsb
or
add
mov
outsl
es
mov
cld
cmp
sub
mov
int
mov
hlt
cmp
mov
scas
and
pop
mov
mov
fwait
cmp
mov
sbb
pop
push
pop
dec
or
mov
or
xor
fcomps
scas
mov
in
rcll
mov
loope
mov
fimull
mov
imull
sub
inc
in
mov
and
pop
fdivl
rcr
and
cltd
mov
mov
pop
loopne
adc
insb
push
imul
imul
mov
in
into
add
xchg
mov
add
ret
int
sub
nop
jl
addr16
or
rol
jmp
iret
mov
push
aam
fsubrl
sub
popf
sbb
jne
xor
pop
ret
sbb
fcomps
hlt
xchg
outsl
xor
fcomp
nop
data16
xchg
cmpsb
xorb
in
cmp
aaa
mov
rorl
inc
shrl
jne
rcrb
adcb
les
shl
loope
push
pop
leave
ret
aam
adc
lods
cld
and
add
sbb
aaa
jg
insl
cmpb
jecxz
jecxz
lret
mov
shll
jo
mov
cwtl
xor
js
hlt
fsubs
dec
mov
scas
fimull
pop
xchg
jg
cmpsb
pop
inc
aaa
mov
or
push
icebp
mov
mov
movsb
loop
pop
jnp
pop
mov
push
cmp
push
pop
jmp
push
xchg
xor
cmp
inc
aas
rorb
inc
mov
cmp
jno
mov
jp
and
xor
rcrl
test
mov
and
in
fldenv
lret
inc
gs
lret
iret
pop
outsb
or
daa
pop
inc
pop
lret
push
bound
push
jl
and
test
aad
jle
mov
push
push
idivb
rolb
movsl
inc
movsl
lds
in
ds
bound
mov
dec
jge
fbstp
xchg
dec
xchg
and
dec
lock
loop
cmpsl
add
outsb
je
test
sbbb
dec
out
mov
mov
inc
in
xchg
daa
lret
mov
stos
pop
sub
xor
and
or
sahf
testb
ljmp
push
push
jle
inc
popa
sub
popf
lahf
cwtl
pop
xchg
mov
and
push
cltd
sub
xor
cli
pop
aad
inc
decl
scas
pop
bound
insb
xor
dec
cmp
test
cmp
ja
mov
or
mov
movsb
jp
pop
leave
out
cmc
mov
stos
pushf
fcoms
mov
sti
cmp
roll
sbb
shlb
popf
cwtl
lea
fmuls
clc
push
xchg
and
xchg
jge
sbb
mov
or
lods
addr16
add
out
movsb
shrb
cli
into
push
push
xor
add
insb
sbb
addb
negb
xor
inc
in
clc
fistpl
rcr
in
outsl
xor
aam
stc
ds
mov
imul
mov
unpcklps
das
mov
addr16
fcmovnbe
int
pusha
sti
xor
les
mov
nop
mov
loope
add
push
cmp
jge
cwtl
adc
in
xchg
movsl
ret
mov
stc
adc
cltd
out
rorl
idivl
adc
dec
repz
pop
mov
mov
lahf
test
aas
lret
pop
in
add
pop
mov
data16
iret
insb
adc
xchg
ret
push
jmp
push
shrl
pop
ret
cmp
lods
lods
push
mov
adc
cmp
aam
push
sbb
adc
xor
jno
push
cld
inc
mov
sub
adc
sbb
push
jns
bound
rorl
cmp
icebp
pop
jae
mov
adc
popf
inc
movsl
int
fidivl
cmpsl
jne
lds
inc
cmp
pop
ret
jge
mov
loope
mov
xor
add
mov
sbb
out
ficompl
addb
and
mov
xor
mov
stos
mov
clc
push
fs
xchg
stos
pop
clc
jl
and
sub
or
pushf
stc
test
mov
jae
sub
push
mov
mov
or
ja
mov
test
xchg
fdivr
xchg
call
pushw
in
aaa
mull
push
inc
cmp
lahf
cli
daa
sbb
fmull
cmc
dec
inc
je
js
mov
and
and
inc
push
rcll
in
xchg
out
jae
cmp
and
sub
xchg
into
or
mov
mov
jp
ja
mov
iret
add
and
fistps
inc
jle
push
mov
fimull
mov
jmp
add
dec
fdivr
jmp
jmp
cltd
pop
clc
cs
clc
iret
idivb
ss
adc
aas
jne
ds
addr16
or
cmp
jno
ret
out
sbb
pop
ja
add
lahf
test
daa
cmp
push
cmp
cwtl
or
lahf
sbb
mov
push
shlb
gs
dec
mov
xchg
inc
aam
dec
and
aas
das
sub
ret
jne
ds
inc
adc
jbe
les
add
mov
outsb
add
pop
xlat
cld
jno
add
ret
out
or
test
mov
jno
out
lcall
cs
add
cmp
adc
xor
inc
mov
les
in
jmp
test
fs
loop
xor
test
cmpsl
leave
xchg
sahf
icebp
inc
add
dec
aaa
ret
lret
mov
jmp
mov
call
addr16
inc
out
aaa
js
fldenv
or
out
pop
cli
iret
js
icebp
clc
inc
jae
out
out
mov
out
gs
adc
daa
mov
fstpt
addr16
or
mov
fdivs
mov
mov
shl
stos
test
mov
mov
push
fwait
addr16
mov
mov
test
inc
mov
cmp
int
enter
loopne
mov
cmp
push
test
mov
sub
fnstenv
enter
fists
fisubrs
leave
test
xchg
dec
mov
sbb
mov
in
mov
scas
or
sub
repz
xchg
push
insl
scas
jns
adc
test
call
sbbl
in
dec
loopne
push
les
mov
jno
inc
in
sbb
js
dec
nop
in
in
or
jge
pop
push
js
stc
jle
lcall
push
add
orl
push
or
xchg
pop
or
ret
adc
aas
out
add
pop
test
dec
jno
aas
or
lret
adc
ret
gs
dec
dec
push
repnz
mov
mov
add
jne
sub
jmp
call
fistpll
popf
dec
into
movsb
xchg
in
hlt
cwtl
popf
fcmovnu
lods
jne
test
mov
js
mov
inc
mov
fwait
dec
xchg
pusha
lret
jno
out
loop
jg
sbb
ja
ret
jg
repz
shl
das
sbb
mov
fld
cmp
sbb
out
mov
pop
sbb
mov
mull
test
cmpsb
fs
ffreep
push
push
mov
dec
fs
pusha
jbe
in
das
pop
ret
movsl
popa
lahf
and
imul
andl
add
xor
pop
jge
outsl
call
jb
es
nop
push
push
mov
xchg
sbb
iret
addl
cmpsl
int3
mov
pushf
adc
cmpb
or
fwait
jg
in
push
xchg
and
arpl
xchg
daa
or
inc
xor
outsl
pusha
push
sbb
cmp
mov
aad
mov
subl
pushf
inc
pop
int
cmc
xor
shll
and
add
leave
lods
inc
pop
push
std
imul
sti
clc
dec
icebp
adc
ret
adc
xchg
push
push
mull
mov
outsb
cmp
daa
push
or
fidivrs
lcall
leave
mov
data16
mov
dec
js
or
cmp
stc
dec
stc
mov
mov
mov
add
cwtl
sbbl
jg
jg
pop
xor
fmul
mov
jl
gs
addb
sub
scas
push
cli
sahf
rorl
cmpsl
sbb
mov
adc
outsl
mov
ja
cltd
xor
shl
sub
sahf
mov
jmp
mov
jecxz
rcrb
xor
popf
sbb
xlat
pusha
call
xchg
shlb
mov
dec
jo
in
sub
stos
xorb
fstpl
adc
fldl
leave
add
lret
loope
xor
dec
pop
add
add
in
insl
pop
or
pop
mov
or
leave
inc
das
mov
sbb
pop
push
adc
push
mov
lahf
cmp
stos
inc
and
stos
mov
fstl
pop
cmpb
or
dec
or
cltd
pop
push
adc
imul
insb
test
or
add
outsl
dec
ds
mov
mov
std
nop
stos
jmp
enter
dec
hlt
push
sti
push
xor
pop
ja
pop
adc
fistpll
xchg
movsl
rorl
dec
xor
popa
mov
mov
pop
jmp
xchg
je
or
xor
or
push
mov
cmp
loop
xor
push
xorl
mov
es
fisubrs
in
cmp
je
ds
add
stos
lahf
es
and
add
hlt
xor
mov
int3
dec
push
ss
stos
pop
pop
push
sub
jmp
lds
jnp
xor
push
push
jno
mov
stc
add
push
in
mov
mov
sub
inc
rep
mov
jo
lock
lods
fcoms
pop
ret
rcrb
aaa
and
mov
sti
scas
clc
push
mov
sub
lret
jle
outsl
pushf
jg
add
mov
adc
mov
movsb
call
cmp
dec
data16
lahf
shll
sub
in
cmpb
scas
mov
jnp
xor
sbb
mov
pushf
push
sbb
mov
outsb
pop
cmp
push
fstpl
ret
out
xchg
mov
mov
in
sub
xlat
iret
daa
dec
iret
out
jne
hlt
int
mov
jmp
cmpsb
and
test
inc
xor
xchg
pop
add
pushf
cmp
fistl
dec
fwait
add
les
push
rcr
stc
ret
call
push
iret
inc
pusha
pop
sbb
dec
jno
pop
movl
cld
mov
mov
push
add
jmp
or
es
adc
cmp
push
fs
ss
bound
inc
mov
scas
dec
and
sahf
push
js
fs
in
adc
sbb
pop
push
test
icebp
test
loop
xchg
imul
in
ja
pop
fldenv
cmp
leave
fs
cli
xor
pop
sahf
fimuls
fidivl
jge
sbbb
jns
sar
sarb
mov
sti
pop
and
loop
loope
add
xchg
dec
inc
dec
punpcklwd
and
xchg
jmp
lahf
aaa
les
ret
lret
call
adc
int3
pop
add
test
testl
scas
repz
sub
pop
sub
add
insb
mov
sti
push
dec
push
mov
into
pop
inc
outsb
rorb
sbb
mov
xor
rorb
aaa
js
nop
testl
add
jo
fcoml
mov
outsl
fidivl
cwtl
aad
xchg
mov
cmp
jb
int3
push
in
shll
pushf
mov
cmc
cmpsb
out
xchg
in
outsl
divl
ljmp
push
mov
inc
movsl
in
stos
jbe
pop
sub
ja
pop
test
nop
jnp
lahf
mov
out
mov
mov
stos
cmpb
cmp
icebp
jo
sub
jno
cmp
inc
loope
repz
lcall
mov
inc
rcrl
mov
data16
jp
ret
adc
int3
xchg
js
test
push
int3
cli
cmp
push
es
data16
jne
mov
inc
sbb
dec
inc
xchg
adc
out
out
lds
xor
clts
push
popl
jl
add
test
sub
loop
loopne
or
or
adc
fisttps
notb
jo
mov
cmc
mov
inc
inc
mov
sahf
xchg
add
les
mov
fwait
and
das
and
pushf
pop
sarl
addr16
jmp
movsl
push
fisubl
mov
sbbb
cmp
sub
cwtl
xor
adc
cmp
cmp
lcall
adc
push
aam
popf
mov
jp
lahf
mov
lods
sti
add
inc
push
mov
or
aad
sub
add
lret
jg
adc
cs
mov
das
out
dec
je
sbb
lret
fidivl
pop
pop
jecxz
jecxz
imul
mov
sahf
imul
dec
stc
idiv
fidivrl
ja
mov
mov
data16
add
pop
stc
jmp
pop
mov
lret
inc
inc
dec
mov
sbb
push
jmp
inc
mov
lcall
add
pop
loopne
inc
mov
jae
movsl
or
inc
pop
test
mov
ljmp
mov
sahf
mov
xchg
test
push
sbb
cmp
fsubl
or
mov
mov
push
push
imul
add
add
xor
popf
stos
fnstsw
mov
or
sahf
lcall
adc
fadds
fidivrl
test
jg
insb
ret
pop
cmpsl
scas
pop
sub
and
loope
sbb
mov
xchg
ss
nop
in
inc
aam
mov
clc
fdivrl
fcmovnbe
js
adc
mov
xor
inc
jmp
aaa
fisubs
imul
stos
loop
push
iret
mov
in
sub
and
jno
push
leave
add
sub
dec
pop
sub
jbe
push
push
adc
push
clc
sbb
stos
cmc
or
pusha
and
stos
jo
imul
and
or
sbb
jne
cmp
scas
jnp
xor
cltd
xchg
sbb
out
mov
scas
xchg
jecxz
sar
dec
mov
loope
sub
inc
push
lret
sbb
mov
cli
dec
dec
mov
sti
push
mov
or
mov
push
sub
xor
fdivs
sub
mov
repnz
inc
inc
mov
adc
invd
mov
push
pop
mov
sub
xchg
outsl
addl
inc
jns
cmp
lods
sbb
loope
adc
enter
cmp
addb
in
ss
sub
aaa
pusha
push
pop
and
push
pop
or
popf
ds
aad
or
adc
pop
mov
jp
pcmpeqd
imul
leave
roll
icebp
jnp
mov
loop
jecxz
cmpsb
cli
out
fsub
sbb
adc
in
mov
sbb
nop
sub
inc
pop
shll
pop
stos
mov
cwtl
mov
and
stos
in
cmpsl
movsb
stos
jae
frstor
push
or
mov
aas
loop
mov
iret
lret
movl
mov
std
test
movsb
inc
fcomps
inc
mov
and
jae
inc
sub
sahf
in
adc
xor
pushf
stos
es
pop
or
cmp
push
pop
jmp
add
cs
arpl
repnz
lods
sbb
pop
xchg
inc
cli
add
cmp
imul
pop
repz
notl
inc
push
rcrb
mov
lea
cmpsb
sub
stos
inc
cld
xor
cmpb
sbb
sbb
aas
adc
push
enter
test
xor
jecxz
nop
sub
les
std
mov
mov
add
enter
dec
or
mov
and
outsb
inc
mov
lds
xor
jecxz
push
mov
jns
repnz
or
mov
mov
daa
dec
adcl
add
jae
ja
jnp
hlt
or
daa
dec
loopne
aam
bound
pop
jle
push
jl
test
addr16
mov
pop
or
jo,pt
movsb
popa
sbb
scas
aad
pop
ds
aaa
push
cwtl
mov
or
inc
xor
movsb
int3
scas
add
dec
dec
popa
ret
xlat
pop
popa
or
sbbl
lods
es
dec
mov
fsubrs
inc
push
mov
enter
dec
sysret
cmpsl
mov
mov
push
jbe
cmpsl
mov
mov
jp
or
mov
push
mov
arpl
jnp
mov
ja
andb
pop
mov
push
push
add
xor
mov
das
or
pop
push
scas
iret
adc
and
mov
pop
inc
out
fbstp
inc
mov
push
iret
push
rol
add
dec
mov
pushf
int3
cwtl
enter
adc
pusha
adc
jle
cwtl
cmpsl
mov
mov
in
jge
mov
pusha
sahf
ror
and
je
inc
loop
pop
sarl
cwtl
adc
gs
lea
mov
pop
add
xor
shll
dec
xor
cld
fmuls
jmp
inc
out
enter
and
cs
xor
inc
arpl
pushf
loop
outsl
popf
dec
pop
movsl
out
pop
and
dec
les
sbb
out
inc
fwait
pop
jno
inc
fisttps
cmp
push
sbb
inc
push
or
repz
mov
and
ja
lds
test
gs
jns
inc
xor
jle
stc
cmpsb
adc
std
cmc
mov
push
xchg
mov
int3
mov
push
lea
fmul
aam
jo
dec
jge
sar
dec
mov
lahf
in
dec
push
jne
hlt
pop
cmp
dec
xlat
pop
in
jecxz
loop
push
outsb
jmp
xor
jg
mov
addr16
andb
test
pop
insl
popa
push
mov
mov
or
out
and
ds
mov
cmp
sub
cmc
ret
and
cmp
mov
adc
out
out
add
cmp
pop
pop
rcrb
inc
lods
or
fadds
push
mov
pop
popf
inc
outsl
dec
std
or
xchg
push
jnp
repnz
adcb
cmp
popa
mov
push
stos
sbb
adc
inc
push
in
pop
shrl
push
rcrb
ss
sub
shll
mov
mov
mov
or
in
jns
mov
xorl
pop
in
cld
fucomp
inc
iret
fstl
movl
mov
lret
lods
into
outsb
and
lock
scas
stos
pushf
push
mov
sub
inc
dec
int
xor
jl
add
jns
dec
sbb
jmp
scas
bound
dec
call
pop
pop
nop
les
dec
xor
adc
dec
es
fiaddl
pop
insb
cmp
adc
mov
das
sti
push
adc
or
lds
loope
sub
sbb
int
loopne
imul
mov
lods
rdpmc
push
adc
push
shlb
push
shufps
xchg
enter
pop
push
mov
xchg
push
int3
in
cmp
pop
sbb
xchg
and
push
pop
fcmovb
lcall
push
xchg
sub
out
aas
push
fstpt
dec
imul
adc
push
mov
sub
mov
and
jne
jg
push
sub
push
stc
movsb
push
addr16
inc
and
mov
pop
scas
decb
jle
out
icebp
lcall
xchg
or
loope
ret
sbb
dec
sahf
xchg
mov
sbb
jmp
bound
xchg
jns
push
push
mov
sub
sbb
inc
in
and
in
add
mov
xchg
into
inc
xor
stos
xchg
add
aam
addr16
sub
sub
mov
cmovle
push
mov
pop
lods
jecxz
pop
sub
fucomp
mov
sbb
fwait
ljmp
outsb
sarl
pushw
sub
mov
mov
in
sbb
mov
mov
mov
bound
addr16
nop
pop
mov
loope
aad
xor
cmc
vsubpd
test
dec
aas
ja
mov
jp
insl
ror
lcall
aas
or
sub
jns
test
test
scas
mov
dec
scas
sub
jno
xchg
and
movsl
add
test
in
sbb
xchg
or
cmp
stos
insb
int3
cmp
sbb
decb
lret
nop
mov
loop
jo
pop
cmp
push
jecxz
or
xchg
and
push
pusha
sub
inc
push
jo
dec
cmp
jo
dec
and
ja
cmpsl
mov
mov
sbb
xorl
dec
pusha
sbb
iret
inc
loopne
dec
and
fwait
dec
jp
inc
int
dec
test
pushl
pop
aas
or
insb
xchg
shlb
cmc
mov
push
in
adc
and
push
cli
stc
popa
lock
cwtl
cmp
jns
lret
loopne
jl
and
cltd
insb
mov
fildll
fistpll
mov
sub
sub
ds
mov
fsts
es
sub
sbb
mov
aas
xchg
jl
pop
jp
mov
jg
int
adc
xchg
pop
shrl
mov
lds
mov
cltd
jge
aad
sub
fs
cs
cli
mov
jp
mov
sub
fistpll
popa
push
add
stos
pop
dec
or
ja
in
pop
inc
add
lcall
outsl
daa
rolb
and
aaa
sbb
jbe
std
fists
jecxz
xlat
xor
iret
out
xor
jno
ds
lds
fs
sbb
es
and
xor
iret
xchg
push
icebp
int3
addb
xor
inc
or
jnp,pt
sbb
int
into
mov
out
clc
mov
xchg
fldcw
fdivp
aaa
sarb
orb
int3
test
jb
inc
bound
out
pusha
repz
xor
and
enter
adc
inc
jb
pop
pushf
xchg
jp
pop
pop
out
stos
xchg
insl
pop
adc
in
jae
push
cmp
or
inc
and
mov
pop
adc
in
adc
lret
add
or
cmp
jl
jb
into
and
fsubl
and
jg
mov
pop
xchg
mov
jp
jnp
pop
aaa
fcmovnb
out
mov
add
mov
push
movsb
mov
mov
sub
insb
das
push
xor
xor
rolb
jge
sub
dec
push
or
adc
ss
fnstenv
aas
push
pop
and
and
inc
xor
or
je
cs
sbb
cwtl
ljmp
xchg
xchg
mov
inc
popa
jp
push
xor
cmp
in
or
pop
fcoml
loop
repnz
and
cmp
jl
fcoml
sub
scas
repnz
mov
daa
adc
icebp
pushf
mov
push
into
mov
shrl
dec
jp
repz
ficoms
addr16
mov
leave
std
and
inc
or
xchg
popa
jecxz
xchg
stos
scas
scas
in
sub
test
cmp
cmpsl
pop
pop
push
cli
jae
mov
stos
dec
movsl
adc
mov
in
add
push
cli
mov
jg
filds
shll
cmpsb
js
jo
fmuls
lods
sbb
push
in
xor
dec
pop
sub
pop
inc
cs
or
xchg
aam
sub
outsb
dec
adc
mov
push
add
xchg
adc
or
mov
adc
or
and
test
mov
ljmp
mov
imul
jbe
js
inc
lods
aad
roll
je
les
shlb
daa
ret
hlt
cmp
mov
inc
sbbl
fildll
je
lods
rcll
and
add
mov
xchg
mov
push
cld
nop
fwait
dec
push
ret
pop
jo
js
sub
pop
mov
out
jmp
or
sahf
mov
dec
movb
and
pop
xor
cmp
ss
mov
xchg
out
popa
je
fnsave
dec
xchg
sbb
repz
stc
fsts
mov
loope
push
push
sub
cs
mulb
or
stos
inc
mov
and
pop
je
inc
adc
push
into
xchg
js
aad
aad
mov
fsubs
in
mov
and
mov
push
shrb
ds
xor
mov
sahf
sbbb
mov
mov
loop
jne
or
dec
and
add
pop
aaa
fists
shlb
and
jle
adc
imul
lret
call
pop
in
mov
xor
aam
add
and
pop
shrb
mov
and
outsl
dec
and
and
push
pushf
jle
cs
mov
pop
enter
xor
adcl
lock
sbb
adc
mov
stc
or
cwtl
mov
mov
mov
call
test
dec
mov
rcrb
mov
push
and
rcrl
lods
mov
push
dec
push
popl
add
pop
rcl
jae
pop
jne
xor
dec
repz
cmpsl
push
sub
push
pop
push
xor
xor
andl
xor
and
adc
xor
or
mov
adc
stc
pop
int3
push
add
sub
test
int
jge
iret
mov
icebp
jae
ds
in
and
gs
jae
jae
jg
orb
push
rorl
push
das
fcmove
jl
aaa
sti
or
sbb
pop
out
push
mov
dec
push
or
sbb
loopne
loopne
test
lock
negl
jecxz
add
xchg
pop
ret
idivl
push
or
icebp
add
pop
adcb
lret
add
fnstsw
push
imul
sti
add
lret
aaa
jbe
jmp
push
cwtl
jp
lock
cs
pushf
das
xchg
orb
sti
bound
push
and
mov
aaa
mov
mov
test
sub
xor
push
xchg
out
jo
inc
fwait
cs
hlt
sbb
sub
push
in
jg
mov
mov
or
cmp
sti
dec
sbb
fs
bound
pop
sub
dec
insb
or
aas
mov
xchg
mov
movsl
cmc
mov
add
loop
cwtl
neg
out
aad
sub
and
call
push
mov
sbbb
cli
fisubrl
lahf
inc
repnz
bound
lods
sub
sbb
into
or
jge
pop
xor
cli
sti
sub
push
jle
jecxz
mov
sub
mov
repnz
enter
cmp
xchg
mov
leave
loopne
lods
aad
es
loop
mov
les
ret
test
cmp
jmp
inc
bnd
push
outsl
xchg
ds
leave
adc
mov
jns
cwtl
jle
jg
push
jb
mov
cmpxchg
pushf
push
xchg
inc
arpl
cmc
jno
faddl
scas
sti
pop
and
pop
inc
jbe
movsl
fdivrp
sbb
loop
pop
pusha
mov
fldcw
mov
sti
daa
xchg
cmc
hlt
cwtl
ret
out
in
jb
pop
add
adc
pop
or
adc
adc
or
in
push
xor
pop
subb
push
pop
jmp
lret
xchg
in
push
push
mov
and
xor
sub
mov
ret
push
iret
lods
dec
and
xor
call
jns
imul
and
loop
push
mov
sub
je
inc
scas
lods
repnz
mov
push
add
xchg
dec
test
ja
mov
pop
sti
fmulp
mov
cmp
fcom
adc
xchg
xchg
fsubrs
mov
or
push
sar
mov
pop
inc
leave
sub
inc
sub
sub
sub
dec
into
push
ja
fwait
ds
mov
mov
lods
mov
sahf
aas
movsl
ja
imul
cmpsb
mov
movsb
or
pop
dec
mov
mov
push
in
push
dec
jge
sub
ds
jp
add
jl
cmpsl
fstpt
mov
mov
repz
in
mov
sub
inc
dec
les
push
into
pop
jp
push
or
sbb
int
adc
push
dec
push
es
inc
sub
cmp
jb
pusha
into
stos
and
mov
xchg
and
sbb
aad
adc
mov
lds
or
cmpsl
pop
repnz
rol
fidivrl
xor
cmp
push
jg
push
pop
inc
pusha
or
jmp
fldl
cmp
cmc
inc
in
and
shl
xchg
mov
xchg
jae
xchg
cli
sbb
and
out
xchg
loop
sahf
mov
cmpsb
out
imul
shlb
pop
jle
int3
dec
jno
adc
testb
and
lahf
mov
scas
leave
call
aas
jae
es
outsb
cmp
push
test
insl
and
dec
mov
lret
cmpsb
lods
jns
pop
cmpsl
daa
notl
lahf
sbb
ja
jg
sbb
push
andl
inc
ret
mov
clc
dec
daa
and
pop
pop
aas
jbe
mov
ljmp
jp
clc
jge
or
mov
pop
mov
iret
sarl
push
fstl
xor
es
cmp
in
scas
in
int
insl
and
jbe
add
xlat
js
sub
into
mov
aad
xor
jo
js
push
adc
adc
xchg
mov
sbb
xorb
or
pop
dec
test
das
rcrl
mov
dec
popa
stos
fstpt
lock
out
jno
in
sbb
pushf
dec
enter
push
mov
mov
pop
xchg
je
ret
mov
flds
in
adc
ss
ljmp
and
repnz
cli
sbb
pop
insl
adc
lcall
sbb
insl
jle
ss
fldl
and
mov
dec
mov
mov
mov
and
and
scas
pop
insb
pop
pop
jnp
int3
iret
stos
out
dec
sti
sub
jnp
negb
bound
mov
mov
cmp
jno
lret
pop
fstpt
arpl
push
add
mov
mov
pop
dec
push
dec
loope
sbbl
out
stc
addr16
fnstsw
test
mov
lcall
mov
and
imul
xor
mov
popf
ss
ret
and
negl
sbb
stos
sbb
push
push
sbb
adcb
dec
call
inc
inc
nop
popf
cmpsb
mov
pop
sbb
cld
pop
push
dec
adc
adc
popf
inc
test
add
cmc
sub
rcrl
cmp
or
fsubs
pop
xchg
sub
rorb
lock
int3
adc
and
jecxz
addl
xchg
mov
jmp
imul
popa
adc
adc
aad
dec
jnp
cmc
adc
mov
into
or
push
jne
sub
ret
arpl
divl
out
and
xlat
call
push
fwait
aaa
mov
mov
mov
xor
iret
fcomps
jo
sub
xlat
jmp
mov
xchg
push
stos
mov
out
lods
dec
shlb
iret
nop
jp
xlat
push
out
cmp
jno
mov
mov
stos
mov
pop
xor
sub
in
xor
jno
popa
mov
rcll
or
loope
in
fstps
lock
or
ljmp
pop
cwtl
std
inc
scas
xor
mov
fidivrs
lahf
out
pop
in
shrb
mov
mov
sbb
jne
ficoml
xchg
ss
fsubl
or
cmp
xchg
in
mov
and
or
outsl
jnp
nop
and
cmp
push
mull
dec
add
sti
insb
andb
and
jecxz
inc
iret
or
cli
xchg
inc
inc
add
dec
icebp
mov
add
adc
cltd
repnz
mov
dec
adc
adc
ret
ja
mov
inc
sbb
negb
mov
iret
mov
xor
inc
ja
scas
push
mov
dec
adc
jbe
mov
xchg
cmc
mov
test
adc
push
add
jge
pop
imul
iret
jns
test
aam
inc
adc
jno
outsb
xchg
clc
in
sub
repnz
mov
add
mov
cmp
push
sub
out
inc
in
lea
adc
xchg
cmpsl
imul
push
xchg
or
mov
clc
push
or
pop
pop
aam
lret
and
cli
dec
push
clc
cmpl
rorl
mov
adc
in
push
xchg
inc
iret
fcom
jne
fcoml
cli
jo
xchg
addr16
mov
adc
andb
adc
cmp
sub
inc
xor
insl
inc
fdivr
lret
sbb
data16
fldenv
pop
push
das
jg
cltd
jmp
dec
fstpt
pop
adc
int3
pop
cmc
add
fisttpll
ud2
cmp
jmp
push
rclb
jp
pop
in
fwait
cmp
push
imull
mulb
test
flds
cwtl
jo
sarl
sub
mov
dec
test
enter
mov
leave
jg
sbb
adc
dec
sbbb
xor
dec
sbb
out
pop
mov
out
cmpsl
or
dec
mov
adc
mov
popf
clc
mov
imul
icebp
lds
pushf
mov
dec
adc
mov
jbe
push
or
cmp
stos
add
push
notl
xlat
fstpl
mov
sbb
pop
js
add
insb
xchg
dec
es
loopne
inc
sub
fcmovne
cmpb
cwtl
mov
arpl
divl
mov
mov
pop
dec
mov
les
aas
test
fstps
in
mov
mov
gs
jmp
lret
ljmp
mov
sti
pop
jp
fsts
test
dec
mov
mov
mov
mov
cmc
xor
imulb
inc
aas
scas
mov
add
pop
aad
sbb
jb
test
push
inc
sub
jo
test
fdivs
adc
out
add
jbe
mov
mov
out
add
dec
cmp
js
push
or
cwtl
lret
and
ds
sbb
adc
lret
hlt
pop
sbb
adc
add
sbb
outsb
or
or
lds
push
fstpt
fmul
sub
add
test
push
sbb
movb
cmp
lods
add
cmpxchg
and
and
jge
mov
and
outsb
push
testl
xchg
and
jo
dec
test
pop
pop
imul
push
fcmovne
outsb
xlat
inc
and
das
gs
insl
test
jbe
loope
cwtl
imul
lock
jecxz
jo
mov
int
in
push
inc
cltd
test
arpl
pushf
lret
daa
and
inc
pushf
popf
mov
popa
inc
outsb
movsl
adc
cmp
add
fdivrl
push
push
pop
inc
dec
leave
sbb
mov
adc
dec
test
push
sti
iret
das
fidivrs
idiv
jne
mov
mov
jne
mov
and
jmp
lds
xor
pop
mov
push
cld
nop
fimuls
dec
fiaddl
sub
in
mov
jb
mov
jle
push
cmp
jnp
jge
push
lds
inc
fstpt
mov
lret
cmp
mov
jnp
sub
mov
das
cs
add
mov
mov
in
imul
fidivs
fcoms
pop
and
mov
sbb
sub
test
enter
inc
leave
jp
jmp
xchg
aad
dec
shll
xchg
adc
les
dec
movsb
rcr
les
test
and
shll
push
sbb
mov
ljmp
jnp
xchg
cmp
sbb
xchg
cwtl
sbb
stos
adc
filds
cmpsb
mov
add
jmp
adc
fcoml
nop
mov
push
mov
xchg
pushf
adc
dec
mov
cld
inc
rolb
and
and
mov
push
jl
jno
adc
nop
scas
add
mov
aad
test
jmp
add
cs
imull
outsl
jne
out
sub
xchg
vmovntps
mov
jnp
cwtl
cli
mov
andb
enter
addr16
lods
or
push
mov
das
add
lock
hlt
adc
or
dec
mov
fstps
jmp
iret
or
outsb
mov
inc
cmc
fcom
mov
xchg
push
xlat
jecxz
mov
shll
fmuls
push
and
mov
movsb
xor
mov
int3
popa
outsb
outsl
arpl
mov
aas
push
xchg
loopne
ss
add
mov
cmpb
repnz
dec
imul
js
das
or
movsl
pop
pop
sarl
cmpsb
xor
outsl
jmp
lret
out
imul
dec
shl
xor
push
adc
xchg
pop
cmp
out
fs
and
push
arpl
out
or
dec
pop
xor
fs
jmp
sbbl
test
add
mov
pop
lcall
lret
pusha
adc
enter
pushf
jo
xor
lcall
push
mov
cmpsl
xor
movsb
fnstsw
inc
sti
dec
sub
ret
cmc
sti
jecxz
mov
ja
lret
es
je
lods
jne
or
cmp
in
push
pop
orl
cwtl
out
icebp
mov
sar
mov
outsl
sbb
sub
stc
pop
in
das
pop
pop
xchg
dec
mov
test
rclb
sbb
out
inc
mov
pop
add
out
fsubrl
rolb
xlat
xchg
sbb
call
in
or
dec
stc
pop
lahf
mov
adc
push
add
std
ss
int3
das
ljmp
out
shrl
mov
sbb
mov
outsb
fisubl
mov
movsl
dec
mov
add
xor
xchg
mov
aas
sti
fwait
scas
dec
pop
loop
loopne
jae
mov
add
or
mov
stc
inc
and
and
sub
inc
test
dec
pusha
push
out
dec
pop
leave
cld
sti
sti
repz
fdivs
cltd
fistpll
les
cmpsl
in
sbb
add
jo
icebp
inc
repz
pop
dec
or
fsubr
xchg
sub
popa
mov
mov
xlat
add
jb
movsb
xor
subl
and
mov
pop
sub
pop
stos
jns
xorb
pop
notl
mov
insb
jo
inc
push
repnz
inc
pop
decb
test
ja
jbe
sahf
jae
gs
andl
adc
loopne
movsl
push
adc
inc
lret
out
fwait
rolb
popf
shll
push
or
push
dec
pop
frstor
jb
dec
cmp
mov
inc
repz
pop
rcr
loop
repz
out
jl
inc
xchg
fsubrs
ja
push
inc
int
cwtl
xlat
xchg
dec
add
xchg
cmpsl
jnp
fisttpl
movsb
insb
pop
xchg
arpl
es
mov
sub
cmp
add
jge,pt
fsts
push
lret
push
sarl
push
inc
out
inc
fs
or
js
sub
into
addr16
cld
inc
mov
fimuls
test
cld
xchg
sbb
and
test
in
bound
push
mull
enter
int3
aad
dec
xrelease
clc
sub
jae
je
jne
sbb
insl
ds
push
pop
mov
sub
dec
jle
cld
mov
addr16
jbe
push
clc
insb
inc
int3
mov
mov
adc
in
push
push
cmpsl
cmp
outsl
iret
add
pop
xlat
or
jecxz
xor
inc
sbb
outsb
aad
dec
mov
inc
xchg
out
lods
mov
push
add
push
lds
pop
rcll
or
pmuludq
jb
pop
aaa
gs
gs
es
mov
or
std
jge
fwait
and
adc
push
call
enter
push
inc
dec
add
xor
adc
dec
inc
pop
dec
xor
loope
cld
push
xor
out
popl
dec
pop
push
clc
imul
scas
ds
xor
test
add
xchg
popa
rep
xchg
pushl
addr16
pop
xchg
das
and
sub
aaa
mov
outsb
pop
pop
push
mov
lea
add
pop
js
xchg
or
lock
cmp
stc
xor
push
adc
inc
jb
out
pop
and
ljmp
jmp
dec
daa
sbb
inc
es
xor
add
mov
loop
pop
sub
and
movsl
mov
cmpl
imul
jle
pop
sbb
xlat
sbb
jno
inc
and
and
test
stc
cmp
adc
popf
outsb
lret
pushl
push
xchg
mov
insb
cmp
repz
add
mov
es
js
jecxz
dec
pop
push
inc
ret
cmp
adc
or
or
mov
divb
out
pop
sarb
xlat
fimull
push
xor
repz
orb
dec
lock
cmpsl
stc
ret
push
push
xchg
push
nop
lret
pop
jmp
jb
jmp
add
inc
mov
cmpsb
icebp
inc
and
jl
sub
and
cmp
aam
loopne
mov
stc
scas
add
outsl
pop
and
xor
inc
stc
leave
addr16
je
call
mov
push
jg
clc
fwait
push
rol
imul
xchg
push
xchg
imul
imul
xor
cmp
pop
in
sbb
cmp
gs
inc
pop
orl
xchg
jp
cmpsl
mov
std
out
add
inc
fst
add
mull
add
or
xor
xchg
sti
stos
daa
popf
add
sbb
and
jmp
pop
stc
ret
subb
arpl
dec
cwtl
iret
insl
in
dec
mov
stos
fs
push
adc
cmpsb
loope
inc
push
icebp
pop
mov
sbb
and
fimull
outsb
xor
call
or
out
jno
stos
out
mov
sbb
stos
sbb
out
pushf
xchg
out
add
mov
pop
fmuls
jo
or
fidivrl
shl
mov
jle
jbe
fldt
sub
fdivrp
js
addr16
shrb
test
mov
mov
loope
dec
xchg
sahf
imul
xor
mov
adc
jecxz
cmp
jg
stos
xor
push
cmpsb
out
scas
pop
movsl
cltd
shll
cmp
dec
xchg
mov
pop
push
pop
movsb
pop
daa
cmp
movsb
jmp
shll
mov
sbb
inc
mov
pop
stc
pop
inc
mov
repz
push
mov
jns
test
lods
mov
inc
outsl
and
enter
movsb
cmp
fwait
je
cmp
cmp
mov
sub
fldenv
fprem1
sub
imul
or
mov
stos
pop
dec
mov
roll
std
adc
aaa
xchg
cmp
lods
loopne
aam
cmp
scas
jnp
std
lds
cmp
addr16
ret
cmpsl
das
in
rclb
js
stos
add
jg
out
mov
rcrl
mov
aam
shll
das
imul
cmp
ret
push
or
cs
mov
pushf
daa
inc
cmp
pop
test
add
subl
shrl
out
test
lcall
jo
fdivs
push
cmpb
lods
rcll
sti
add
or
jmp
mov
or
lods
inc
test
ret
mov
ret
jae
stc
pop
daa
nop
add
and
inc
jp
xchg
xor
pop
loopne
lods
sub
xchg
mov
push
loope
cmpl
mov
jge
push
pop
out
cmp
and
enter
add
jl
push
cmp
cltd
lret
lret
orl
ret
call
jle
jb
pop
scas
outsb
aam
les
scas
mov
jne
lret
testl
cs
pop
adc
das
xor
popa
dec
xchg
pop
and
enter
lret
cmpsb
imul
dec
inc
xchg
leave
fwait
call
mov
cmp
or
push
xchg
add
ret
and
mov
loope
pop
daa
mov
cmpsl
test
in
sub
addl
cmp
popa
mov
push
fiaddl
cmc
pop
out
push
gs
sarb
jmp
movsb
cmpsb
cmpsl
movsl
push
fadds
nop
or
mov
add
sub
sahf
adc
add
testl
out
arpl
out
push
je
push
nop
stos
lods
ja
mov
add
xchg
add
data16
in
mov
push
arpl
jbe
idiv
jg
xor
inc
jo
cmc
inc
jp
xor
ja
icebp
inc
cmp
lods
mov
popa
jle
imul
pop
push
adc
add
aas
ds
and
adc
pusha
pop
and
mov
xchg
cld
xchg
mov
add
fcompl
jo
ret
cltd
or
xchg
mov
daa
ret
xor
xchg
mov
pop
sbb
xor
jno
pop
cmp
adc
std
in
sub
loope
xchg
stc
mov
mov
popa
and
inc
aaa
cmpsl
push
cmc
or
jnp
push
push
cmp
addr16
loope
ds
sbb
lea
fpatan
loop
outsb
gs
xlat
or
mov
shrl
repnz
test
sbb
test
dec
xchg
pop
dec
in
mov
mov
xchg
cmp
mov
jb
and
adc
mov
test
add
mov
mov
mov
movsb
andl
mov
sub
out
xchg
push
rcl
into
int3
lock
ljmp
or
push
xor
lods
lea
dec
push
in
mov
sub
mov
or
pusha
rcrb
out
mov
and
subb
xchg
push
and
fistpl
push
lea
ss
jl
pop
xor
in
jmp
pushl
inc
sti
gs
xor
add
pop
std
orb
insb
jecxz
icebp
popf
dec
in
cltd
jmp
rcll
in
sbb
xchg
pop
jnp
out
and
sbb
xor
pop
mov
or
test
mov
jb
call
cli
mov
cmpsl
fstpl
mov
lret
stos
or
sub
xor
test
enter
and
fldt
pop
push
leave
mov
lret
mov
scas
je
cmp
mov
orb
or
cli
aad
lcall
popa
in
mov
stos
out
sbb
xchg
xor
jecxz
sbb
jae
push
add
fmuls
test
mov
xchg
lea
js
xchg
sbb
bnd
es
jae
or
cwtl
sbb
jns
mov
int3
loopne
jbe
inc
lods
add
pushl
add
mov
and
dec
adc
mov
push
inc
daa
push
out
add
jmp
es
adc
push
pusha
xor
les
or
icebp
inc
add
movsl
xchg
loopne
cmp
fistpl
cs
lcall
pop
sub
roll
ficompl
js
lcall
cmp
cmp
decb
arpl
out
mov
int3
mov
ret
mov
and
adc
out
outsb
fistl
push
pop
xor
sbb
pop
sbb
call
or
inc
cs
sub
test
ja
add
adc
je
mov
data16
iret
sahf
dec
inc
jl
xor
test
push
xchg
dec
xor
push
and
mov
xor
jns
movsl
mov
mov
adc
mov
lsl
out
dec
aam
int
jnp
int3
mov
xchg
popl
es
or
cmp
icebp
mov
aad
inc
je
push
cmc
pop
scas
fs
jno
movsb
ss
inc
ja
out
mov
fs
xorb
push
in
ret
mov
xor
shrl
lahf
cmp
cmp
rcr
movlps
sbb
jmp
je
and
mov
fldpi
mov
rolb
lret
pop
add
mov
sti
dec
mov
repz
sarl
jge
in
mov
loop
idiv
test
sub
dec
popf
mov
xchg
push
and
push
aad
mov
push
add
push
call
clc
cli
dec
lcall
push
shlb
cmp
add
pmullw
push
sahf
push
inc
push
pop
ret
gs
mov
cmp
push
insb
or
dec
pop
aam
arpl
in
pop
and
insl
mov
or
or
sahf
jae
push
xor
jge
pop
dec
mov
daa
mulb
aam
dec
adcl
add
stos
rcrl
dec
cmp
sub
mov
mov
daa
mov
loope
icebp
pop
adc
sub
or
dec
lods
aad
aam
xor
cmp
je
xchg
stos
scas
mull
repz
push
xchg
push
mov
mov
rcrl
jp
xchg
lahf
jno
xorb
out
hlt
dec
mov
mov
mov
cmp
fs
loop
inc
push
dec
cmpsl
stos
push
in
jb
fwait
xor
inc
ljmp
orl
push
rcr
out
sub
mov
sar
fs
push
cld
lret
mov
fsubs
inc
mov
jb
mov
in
mov
xchg
lock
int
shlb
sub
leave
imul
pop
or
push
cld
sub
lret
mov
xor
xchg
jb
lcall
stos
sbb
inc
adc
and
push
dec
inc
xor
cli
add
cmpsb
or
insb
arpl
sub
jecxz
mov
add
sbb
scas
sbb
mov
xor
push
mov
xor
mov
ljmp
sub
mov
xchg
xor
ds
loop
cltd
pop
mov
stos
dec
add
mov
adc
sbb
dec
in
repnz
or
in
inc
lea
xchg
xor
mov
jne
es
xchg
lods
bound
repz
mov
add
jns
in
lea
shlb
hlt
xor
cmp
jns
mov
mov
dec
movsb
call
imul
lea
out
scas
out
scas
or
pop
or
popa
mov
cli
mov
xchg
shl
stos
lods
data16
pop
inc
cmp
mov
je
sbb
fbstp
insl
lret
fsub
das
mov
sbb
test
jecxz
pushl
pop
arpl
es
push
call
adc
jecxz
fdivl
cs
gs
mov
mov
inc
xchg
in
xchg
js
inc
in
fistl
ds
xchg
push
iret
jecxz
outsb
pop
dec
dec
mov
lods
adc
icebp
stc
mov
cwtl
pushf
into
mov
les
push
je
andl
cmp
sarl
movsl
jg
sub
cltd
lcall
out
xchg
insl
dec
cmpsb
ja
rcr
mov
and
xor
sub
mov
xchg
cmpsb
jae
push
shlb
shrb
cmp
mov
adc
mov
sbb
jnp
aam
jp
das
outsl
out
dec
aaa
int3
pop
pop
fs
inc
cmc
pop
popf
pop
jno
push
je
out
inc
aaa
or
cmc
cmc
in
test
imul
sub
push
rclb
popa
lods
xchg
dec
pop
sub
mov
push
push
outsl
lret
inc
scas
mov
xor
loope
movsl
cld
std
mov
addb
xor
ss
add
add
iret
cmpsl
dec
mov
pop
mov
lods
push
enter
sbb
fnstsw
loopne
arpl
ret
pop
mov
mov
sbb
dec
cld
sbb
push
movsb
jb
lahf
pushf
fstps
mov
sub
mov
inc
jp
mov
jg
cmp
loope
and
fs
repz
imul
adc
int3
pop
pop
out
ret
test
xor
js
leave
loop
cwtl
sahf
jo
mov
xor
mov
hlt
and
inc
in
pop
add
sub
sti
lahf
add
push
cmc
mov
sub
sub
fldcw
inc
sbb
mov
xchg
lahf
lret
ja
jge
pusha
loopne
test
rorb
cmp
mov
push
icebp
clc
inc
add
add
int
rorb
lods
mov
add
xlat
ljmp
cld
mov
push
adc
int
repnz
cmp
push
push
push
sub
or
pop
leave
fldt
mov
push
and
jecxz
jae
imul
enter
js
shl
sbb
lods
cmp
cmp
add
jne
rorb
cmp
cmp
dec
sbb
ds
rclb
xchg
lahf
mov
and
das
xor
and
xor
in
popf
xor
sbb
daa
xchg
lret
clc
sbb
and
pop
mov
arpl
pop
xor
cs
pusha
adc
stos
push
jecxz
clc
push
sbb
jge
cs
mov
dec
cmpsl
add
jmp
lds
push
mov
push
xchg
xchg
push
pop
int3
or
mov
pop
mov
mov
dec
bound
push
leave
jecxz
add
add
and
inc
in
sti
fnstsw
or
pop
push
and
sbb
push
jne
fldenv
inc
jo
inc
cwtl
mov
sti
or
jle
jbe
fstpt
push
ss
push
and
mov
movsbl
hlt
insl
jmp
insl
in
cld
lret
adc
in
jl
lret
push
mov
push
lret
ss
lea
add
xorl
mov
jge
out
popf
mov
fwait
shll
imul
rcll
out
and
inc
pop
loop
int
test
aaa
cmp
pop
je
test
lcall
cli
cld
mov
loop
sub
imul
dec
stos
repz
inc
aad
cmc
sbb
lock
and
cli
sti
add
ret
cltd
mov
sbb
pushf
adc
sub
andb
test
rorb
or
imul
stc
sbb
xchg
imul
xchg
inc
jecxz
or
outsb
inc
icebp
cli
add
stos
pop
mov
cmpsl
pop
cmc
outsl
outsl
test
mov
insl
xchg
sbb
icebp
pop
nopl
insl
xchg
mov
cmp
jmp
inc
out
mov
add
gs
aam
xor
cmp
adc
pop
push
inc
inc
and
cltd
loopne
mov
subl
or
mov
test
insb
sbb
aas
sahf
cltd
icebp
dec
sub
mull
mov
jb
jp
dec
push
pop
outsb
xchg
add
push
fwait
xchg
inc
frstpm(287
lea
mov
test
xor
je
pop
push
mov
inc
push
iret
dec
mov
cmpsl
out
test
loopne
ss
dec
cld
fidivl
inc
sbb
mov
pop
into
sbb
sbb
stc
and
cmp
es
repnz
adc
pushf
xchg
or
std
ds
jle
mov
clc
sti
mov
fcoml
data16
fistps
lret
xorl
rol
lock
inc
sbb
sub
or
jno
jg
cmp
js
int3
cli
aas
mov
mov
fmuls
lret
push
cmpsb
mov
cs
mov
pushf
push
cmpsb
jmp
mov
jp
pop
cmp
mov
insb
fsts
cmc
mov
ret
out
and
mov
mov
lret
push
jecxz
inc
les
pop
sbbb
pop
pop
cmpsb
pop
push
fmul
dec
fisttpl
popa
mov
repnz
xor
sub
xchg
div
loop
jo
out
pop
fsubr
icebp
and
test
or
sahf
arpl
icebp
or
mov
sahf
add
jge
dec
pop
test
or
cmp
cmpsb
jle
push
jae
push
sbbl
cmpsl
test
and
sbb
mov
mov
sarl
outsb
sbb
sbb
lret
loope
lret
push
xchg
cmp
add
xchg
ja
ds
mov
jne
ljmp
mov
sbb
add
es
add
insb
in
into
lock
popf
scas
divb
jb
cmpsb
pop
fstpt
inc
push
adc
jb
fiadds
jg
insl
push
mov
ja
xor
sbb
push
iret
imul
mov
cmpsl
bound
cmp
push
pop
xlat
mov
test
incb
repnz
dec
ret
imul
jmp
fdivs
push
aad
cmp
enter
aas
aaa
outsb
mov
xchg
in
adc
push
fistpl
lcall
rclb
mov
stos
sbb
and
les
loopne
push
fnop
aaa
cwtl
dec
xor
outsb
test
sub
out
adc
gs
xor
jne
loope
push
in
in
add
cli
xchg
hlt
jb
int
xlat
cs
pushf
xor
dec
out
xchg
fsts
sahf
fidivrs
iret
adc
std
popf
dec
rcr
lds
cmp
iret
fcmovu
ja
aad
mov
fnsave
stc
out
ja
mov
push
test
jle
mov
stos
ret
dec
dec
push
sub
mov
icebp
xor
mov
jne
lcall
call
add
or
xchg
or
mov
push
or
xchg
js
xchg
ret
loop
add
pushf
hlt
into
hlt
cmp
xchg
icebp
lea
ja
and
cwtl
inc
mov
arpl
push
or
pop
int
mov
lods
push
push
jg
and
sahf
jecxz
mov
mov
cmp
repnz
mov
icebp
fnstcw
pop
mov
test
xchg
das
lods
fwait
mov
lcall
or
ret
mov
inc
shl
and
mov
add
mov
jo
push
pop
inc
in
in
xchg
movsb
imul
mov
ret
or
cmp
jbe
jmp
add
popa
call
push
outsb
xchg
add
push
aam
mov
gs
xacquire
adc
pop
xchg
and
sbb
adc
cmp
dec
dec
pushw
stc
shll
test
lahf
fbld
gs
jl
pushf
dec
sahf
pop
out
fs
mov
cmp
push
jo
das
lcall
fnsave
jo
pop
movsb
ljmp
adc
ja
cmp
push
mov
or
repnz
push
pop
sub
nop
push
add
push
mov
mov
push
mov
pop
xchg
addl
jl
test
mov
test
jae
pop
scas
xchg
mov
pop
ss
nop
in
xlat
inc
jl
xchg
aas
sbb
cmp
sahf
stc
popf
pop
in
pushf
lcall
fwait
pusha
pushf
sarl
pushf
insb
xor
leave
out
cli
aaa
xor
stos
outsl
rorb
out
cmc
sub
or
jl
mov
inc
mov
sarl
dec
mov
inc
or
movsb
push
sbbb
mov
xor
insb
sbb
add
adc
orb
je
sbb
dec
popa
cmp
lock
icebp
popf
push
dec
je
shll
inc
stc
add
addb
add
ja
mov
and
fs
rol
cmp
xchg
mov
push
inc
xchg
mov
lea
outsb
fs
dec
mov
daa
fcomip
inc
fildl
add
inc
push
pop
dec
outsb
adc
cli
add
dec
mov
lahf
jbe
lods
rorl
ficoms
adc
sbb
lods
lods
cli
cli
repz
fwait
scas
leave
push
jne
xchg
xor
inc
jnp
and
sbb
inc
xor
movsb
inc
cwtl
mov
cmp
sbb
mov
adc
hlt
fimull
xchg
and
mov
push
ss
cmp
outsl
insl
lds
push
out
sub
push
jb
scas
jns
jnp
xchg
repnz
mov
shll
insl
pop
out
sbb
cltd
in
sbb
bnd
leave
sub
in
loopne
std
rcl
test
push
test
and
ds
out
in
xchg
pop
les
ja
test
daa
inc
ljmp
mov
bound
cmp
lcall
adc
loope
push
and
jno
adc
mov
into
inc
fistl
adc
mov
in
aad
inc
mov
push
xchg
jo
sbbb
adc
ja
mov
movsb
aam
cmpsb
into
dec
test
inc
mov
pop
loopne
popf
insb
hlt
inc
xlat
push
jns
pop
dec
dec
adc
and
pop
pop
lds
mov
xchg
pop
cmc
mov
out
ljmp
mov
mov
js
jno
xchg
shlb
inc
inc
jnp
cmc
mov
jg
aaa
ljmp
and
fs
cmp
fimuls
cmp
and
pop
push
ret
jle
lock
sbb
add
into
test
push
mov
mov
mov
adc
lret
push
sbb
je
es
daa
dec
or
stos
cmp
sub
ss
sub
and
mov
and
xlat
dec
inc
xchg
inc
imul
movsb
push
xor
sbb
loop
cmp
cs
add
negb
pop
dec
push
mov
test
xchg
insb
aas
inc
leave
mov
call
loope
in
cmpsb
leave
in
fdivrs
sub
les
xchg
mov
mov
push
scas
add
repnz
cmpsl
and
pop
add
push
push
cmp
aaa
xchg
pop
pop
add
dec
scas
jb
mov
pop
cld
popa
add
movsb
mov
fstp
fimuls
and
and
inc
lret
cs
arpl
fisttpll
add
mov
pop
jge
mov
dec
iret
dec
pop
in
mov
into
jl
jg
stos
movsb
out
jnp
inc
mov
inc
or
inc
jnp
mov
add
cmp
mov
ds
notl
cld
in
mov
cmp
ficoml
mov
push
jns
bound
adc
jnp
jno
insb
xor
xor
jg
popa
es
lret
jecxz
jb
sbb
cmpsb
arpl
sbb
dec
jp
add
fisubrl
jmp
rcl
fdiv
scas
add
ret
lret
mov
or
cmp
pop
push
int
imul
ret
test
test
ds
pop
es
ret
inc
gs
aam
jmp
push
jecxz
add
xchg
pop
pop
push
addr16
xchg
add
es
lock
inc
add
xchg
test
lret
jmp
jge
pop
cli
sub
test
jp
sahf
push
mov
je
mov
subl
adc
adcl
adc
fbstp
movsl
mov
lock
lods
pop
lcall
cmp
add
subb
rcrb
cli
and
cmpsb
pop
or
mov
mov
pop
repz
lods
pop
push
sbb
push
pop
sbb
adc
pop
popa
and
xor
popf
xor
push
mov
cmp
out
mov
mov
icebp
cld
aas
jg
mov
and
xor
push
in
push
scas
dec
ja
or
sbb
push
xchg
xchg
mov
xchg
inc
ds
fwait
dec
ret
xor
out
shl
arpl
sbb
lds
inc
jns
lret
incl
mov
sbb
xor
lea
lods
pop
cs
decl
imul
push
push
cmp
popf
test
sub
rcl
fstl
add
mov
sub
insl
dec
mov
inc
sarl
mov
test
add
cmp
cltd
gs
loope
fisttpl
nop
xchg
int
jns
rorl
mov
sar
or
sbb
adc
repnz
mov
pop
xor
insl
jge
inc
test
and
inc
shlb
int3
add
xchg
cmp
mov
adc
sub
out
pop
in
test
and
pop
pop
xlat
fs
fadds
push
sbb
xor
pop
sub
repnz
adc
push
fs
cmc
loope
jmp
out
push
daa
xor
loopne
or
jae
xchg
insl
xor
jecxz
mov
mov
push
in
sbb
push
mov
push
xchg
pop
jo
cmp
je
mov
cs
mov
sbb
loope
xor
xlat
enter
scas
pop
pop
inc
push
popf
das
dec
and
adc
cmp
jp
pop
scas
dec
adc
inc
jns
scas
and
outsl
add
movsl
jecxz
repz
in
in
idivl
pop
scas
sbb
sbb
movsl
push
fcmovnbe
clc
das
jns
lahf
xor
dec
and
lock
enter
mov
out
out
adc
sbb
add
push
mov
push
xor
push
or
shrl
loope
mov
xor
pop
dec
mov
hlt
sbb
dec
lret
test
push
xor
fidivs
ficoms
stc
fbld
xor
stc
aaa
and
ret
push
cmc
pop
lods
andl
insl
and
pop
push
pop
lods
ficomps
stc
jg
mov
repz
or
dec
aam
cmp
jnp
rclb
adc
jle
mov
push
xchg
int
ror
mov
incb
push
mov
xchg
xorl
hlt
stos
nop
stc
pop
jns
adc
data16
pushf
mov
and
int
shll
xor
jge
cmp
shrl
pop
mov
stos
push
test
dec
scas
into
sbb
enter
xchg
xchg
lret
frstor
pop
mov
sub
sbb
ja
xor
jl
adc
andl
frstor
xor
mov
sub
fistpll
or
sub
jmp
and
call
loope
cmpsb
jnp
mov
jnp
add
xchg
jnp
xchg
pop
inc
mov
pusha
push
loope
xchg
or
mov
inc
das
aad
popl
ret
das
cmp
mov
xchg
inc
dec
fstps
xchg
push
bound
arpl
or
fwait
jbe
test
dec
es
stos
jl
cmpsb
call
out
xor
mov
out
mov
mov
jp
xor
fiadds
jb
test
mov
mov
into
pop
mov
inc
xor
outsb
int
xor
lret
into
inc
imul
sarl
push
add
loopne
inc
xchg
daa
xorl
clc
scas
lcall
bnd
pop
pop
and
dec
ffreep
cld
push
int
bnd
mov
sbb
xchg
xor
cltd
popa
dec
or
sbb
daa
insb
pop
sahf
inc
shr
and
idivl
cmp
sti
cwtl
pop
sub
mov
jne
sub
dec
sub
dec
and
int3
loop
dec
ret
js
sbb
hlt
fisubs
mov
enter
mov
popf
dec
cld
or
or
mov
lods
xchg
clc
ffreep
jmp
inc
add
push
xor
dec
dec
ds
push
jp
mov
add
push
imul
test
push
xchg
or
mov
mov
pushw
cmp
jmp
fsubr
repz
adc
mov
sarl
xor
aam
mov
les
out
pop
add
jecxz
add
xchg
jge
lds
test
push
cmp
and
cmp
mov
mov
in
and
pop
pop
imul
jo
push
test
mov
mov
xor
and
and
les
test
loopne
jl
mov
add
in
daa
insl
clc
ret
xor
jb
push
sbb
movsl
push
cmp
mov
pop
mov
and
jge
pop
in
xorl
cmp
jmp
and
js
mov
xchg
repnz
cltd
shrl
lahf
loope
dec
or
pop
mov
xchg
ljmp
js
sbbl
cs
stc
aam
popf
xchg
repnz
aas
cmp
xlat
xchg
cld
enter
enter
dec
fdivrl
and
aaa
pop
cli
ret
xchg
xchg
inc
push
imul
inc
pop
lods
sahf
rorb
or
sub
add
pop
fstpt
mov
stos
inc
pop
xor
popa
sbb
aas
out
mov
mov
inc
mov
push
sti
dec
in
xchg
movsl
fisttpll
cltd
and
pop
pop
insl
out
out
jp
cmp
xchg
lcall
sub
mov
je
out
pop
jp
js
dec
inc
push
iret
add
jnp
insl
js
lock
repnz
pop
mov
and
xchg
jge
sahf
lea
jno
inc
jecxz
imul
dec
adc
or
cmp
outsl
xchg
mull
andb
lods
stos
xchg
mov
cmp
xchg
inc
rcr
cmp
push
hlt
fs
dec
xchg
and
cmp
int3
push
xchg
in
ret
sbb
dec
sbb
mov
aam
rcrb
mov
cmp
jns
xchg
fildl
pop
aam
adc
push
mov
inc
push
push
or
fdiv
sbbl
mov
out
or
fistps
aaa
or
inc
push
lds
cmp
lods
inc
pop
pushf
xchg
nop
mov
pop
int
lcall
repz
dec
xchg
xor
cmp
std
iret
aad
push
jmp
test
or
mov
sbb
or
cmpb
cs
jno
js
ds
jecxz
out
pusha
addb
test
pop
mov
adc
pop
and
push
pop
xchg
popa
aam
int3
hlt
sub
sbb
bound
and
lock
and
adc
iret
in
xlat
inc
imul
mov
fwait
test
fs
sub
sahf
pop
push
xor
sbb
ficompl
sub
add
incb
ds
nop
pop
enter
shrl
sbb
mov
push
adc
add
push
and
adc
stos
push
cli
pop
dec
popa
push
adc
das
hlt
push
shrb
dec
imul
mov
movb
mov
fldcw
lcall
mov
and
cld
fs
cmpsl
out
pop
btr
mov
jo
dec
test
and
aad
stos
aas
imul
xor
rcl
mov
pop
in
mov
and
sbb
mov
decb
les
out
mov
mov
loop
adc
cmp
sysret
mov
mov
arpl
sub
sbb
xchg
adcl
xor
clc
and
arpl
pmulhw
iret
arpl
repz
sbb
scas
loopne
jg
cld
cmp
shlb
ret
mov
sub
push
add
js
add
cwtl
in
pushf
ret
push
xchg
scas
fwait
mov
pusha
xchg
lods
dec
cmp
mov
xchg
push
push
sahf
and
aas
xlat
push
sahf
cmpb
add
adc
mov
inc
ljmp
jbe
shll
das
dec
mov
insb
inc
or
sahf
lock
or
mov
cwtl
adcb
xchg
add
movsb
mov
cmpsl
mov
jae
fldcw
push
pop
xchg
jle
xchg
bound
jne
xor
push
test
je
repnz
stc
inc
or
sbb
or
sub
adc
mov
pusha
fucomip
push
movsb
jns
push
ja
cwtl
pop
mov
add
adc
mov
adc
loop
sub
test
outsb
push
arpl
cmpsl
stc
daa
push
shrb
ret
or
sbb
xorb
lret
data16
sbb
aam
dec
dec
sti
decb
negb
sahf
es
and
in
cld
rorl
lahf
adc
pushf
insl
jg
mov
push
pop
fwait
js
jnp
xchg
jnp
push
aaa
ja
cmc
cmp
ret
clc
pop
cmp
sbb
mov
lret
fwait
loop
ss
add
ds
sahf
rcl
xor
cmp
mov
inc
sbb
mov
cmp
mov
push
push
xor
je
pop
orl
xchg
icebp
or
or
or
lret
dec
xor
push
sbb
decb
sbbb
add
cmp
shlb
fbld
iret
or
push
pop
popa
adc
pop
arpl
aas
icebp
dec
sbb
imul
rcrl
movb
sub
and
wrmsr
popa
shrb
cltd
inc
lds
cmp
jo
clc
fwait
lods
bound
sbb
out
fcomps
ja
pop
mov
nop
push
ss
mov
and
shlb
xlat
repnz
dec
ret
inc
mov
les
and
xchg
dec
dec
xor
jnp
sub
mov
pushf
cmc
test
xchg
aam
orb
movsb
mov
push
pop
jne
jno
pushf
adc
adc
dec
outsl
cmp
xor
fstpt
dec
jl
adc
mov
mov
sbb
sub
cmp
push
xor
sub
out
xchg
in
sti
mov
nop
mov
inc
or
es
outsl
add
insb
sbb
mov
mov
push
out
leave
jmp
sbbl
xchg
and
and
push
or
mov
jno
popa
sarl
movsb
mov
cmp
jne
aaa
cmpsb
fld
out
leave
add
hlt
insb
icebp
xor
insb
jge
xor
hlt
sbb
add
leave
push
mov
jnp
adc
fwait
push
xor
jbe
js
mov
lea
imul
lret
jecxz
pop
fs
roll
jge
jge
push
cmpl
arpl
mov
je
popf
pop
add
je
cld
xchg
inc
push
inc
or
jne
sub
insl
test
or
push
sbb
xchg
pop
sbb
mov
inc
push
lods
sub
arpl
mov
jg
and
sub
lods
adc
popa
testb
in
lcall
repnz
mov
in
adc
stos
add
imul
pusha
inc
mov
dec
push
leave
nop
shlb
xchg
push
mov
loopne
bound
xchg
jae
out
push
cli
mov
add
pushf
ret
or
ret
mov
daa
mov
jl
lahf
in
mov
adcb
loopne
cld
dec
lods
jecxz
xor
bound
jnp
mov
inc
add
push
cmp
adc
mov
nop
cmp
pusha
push
orb
cmp
adc
lret
shr
add
testb
push
fcomps
mov
dec
outsl
call
lods
imul
adc
fs
and
pop
js
cli
xor
push
rclb
jp
push
cmp
mov
shlb
leave
or
jmp
loopne
int3
cmp
ja
in
into
rcrl
stos
scas
jmp
or
add
fcoml
loop
out
pop
push
clc
clc
popa
and
inc
xor
adc
aas
cmp
push
insb
cwtl
std
loopne
popa
xchg
pop
test
pop
jecxz
cmp
mov
xchg
cltd
ret
testb
cwtl
int
cld
ss
shll
inc
inc
mov
fnstenv
leave
jge
push
sarl
shlb
testl
xor
jne
jbe
js
cmpsl
xor
sbb
sbb
je
jnp
fwait
shlb
clc
mov
and
sbb
popa
lea
mov
cli
and
adc
xor
jno
xchg
push
pusha
ja
das
xor
pop
flds
pop
mov
xlat
pop
push
jbe
aam
push
mov
or
cmp
lea
je
dec
add
insl
test
fistps
cmpsb
out
and
xchg
test
rorl
dec
adc
xchg
jo
cmp
in
fildl
fsubl
xchg
cmp
insb
daa
dec
sbb
lret
ret
xlat
and
xor
push
fistps
out
ret
shll
popa
and
stc
ret
push
add
aas
sti
ficoms
xchg
insl
cmp
adc
xchg
clc
jg
xlat
cmpsb
mov
jg
lea
add
faddp
je
xchg
and
mov
jbe
gs
pop
inc
or
testl
test
popa
pusha
push
lea
ss
xor
mov
je
sub
clc
cmc
inc
lss
add
cmpsb
fdivrl
adc
in
dec
movsb
out
sti
fisubl
cwtl
mov
xchg
cltd
or
push
cwtl
inc
cmp
jl
fwait
in
xchg
mov
sti
inc
cs
xchg
int3
lahf
popf
pop
xchg
mov
aas
mov
idivb
gs
loop
mov
mov
xor
sub
rcl
hlt
std
lds
jne
fcompl
xchg
dec
push
dec
jno
in
repz
test
mov
inc
jns
and
and
mov
xchg
inc
mov
shrl
sti
mov
std
pop
lret
out
das
adc
mov
lret
xchg
icebp
mov
ja
or
push
xchg
sbb
out
mov
pop
data16
jecxz
mov
sub
sarb
fwait
sbb
pusha
in
test
test
mov
mov
mov
fs
repnz
push
mov
mov
jge
test
outsb
cmp
shll
jecxz
and
or
mov
jg
push
pop
fcmovnu
imul
inc
dec
cwtl
add
aam
jg
dec
sub
sbb
nop
lcall
pop
sbbb
je
aam
jo
jb
cmp
mov
adc
or
adc
daa
add
mov
xchg
jne
imul
out
das
push
pop
addr16
pop
mov
mov
lea
xchg
push
lock
sbb
inc
sub
js
mov
mov
jae
push
push
add
push
sub
pop
and
in
fmuls
adc
xor
mov
das
push
xchg
adc
inc
scas
inc
xor
jmp
adc
mov
mov
aad
pushf
ficoml
sbb
lods
cmpsl
repz
lahf
or
mov
xchg
or
pop
loopne
xorl
iret
arpl
aam
jbe
std
add
fildl
fs
lds
push
sub
loope
je
iret
test
xcrypt-cfb
cmpsl
bound
xlat
outsb
lcall
push
orb
jns
add
xchg
adc
cmpb
aad
shlb
dec
clc
mov
add
adc
mov
in
std
xchg
ss
push
stos
pop
insb
test
in
push
pop
les
add
push
adc
jg
push
es
sti
xchg
jae
std
bound
inc
xchg
push
subl
iret
pushf
adc
aam
inc
fdivrs
push
sub
sub
jp,pt
cmp
test
inc
xor
add
or
jle
aad
imul
push
ljmp
xor
lahf
mov
lret
mov
into
cmpsl
jecxz
jmp
adc
add
pop
lret
nop
inc
sbb
pop
adc
dec
cmpl
mov
test
cli
pushf
dec
inc
ficoms
mov
push
jp
fcomps
cmp
dec
xor
insl
ficoml
frstor
iret
movsl
pop
ss
mov
jecxz
cmp
xchg
vmwrite
cmp
leave
jnp
enter
lcall
adc
pusha
push
xor
push
stos
xor
xor
gs
push
cltd
push
push
sti
loope
clc
or
jne
in
repz
cmp
sti
in
xorb
mov
pop
std
mov
pop
fnstsw
fstp
outsl
lods
cs
pop
pop
add
in
cmp
test
mov
jmp
mull
cld
repnz
jp
in
cli
cmp
dec
push
leave
xor
xor
and
clc
lcall
add
in
insl
dec
xor
pop
in
jns
pop
mov
xchg
cmpl
add
or
jle
push
mov
sti
xchg
push
mov
pop
inc
adc
adc
clc
xor
jmp
and
iret
mov
xor
xor
ja
push
mov
aad
inc
test
lcall
mov
adc
stos
push
es
inc
loop
push
outsb
dec
sbb
cmpb
lea
sub
xchg
pop
movsb
lods
dec
push
xchg
mov
loopne
sub
aas
jge
adc
fwait
jno
or
mov
lahf
and
mov
cmp
aaa
cmp
pop
fnsave
mov
add
fs
mov
scas
add
icebp
je
dec
jg
shrl
and
inc
mov
jae
addr16
idivl
shlb
shlb
int3
gs
adc
dec
jno
aad
stos
inc
mov
add
ret
mov
rclb
sahf
inc
dec
fst
mov
scas
jl
cmp
jp
int3
mov
add
stc
and
mov
dec
push
jne,pn
inc
cmpsl
sub
add
jge
or
sbb
insb
dec
fwait
jnp
sbb
and
lock
xchg
repnz
pop
inc
and
mov
sbb
aad
jne
bound
leave
stos
sub
repz
stc
out
decl
stos
hlt
adc
sti
xchg
loopne
jns
aas
pop
cmp
push
nop
lock
adc
mov
xlat
loop
pop
mov
nop
scas
sub
inc
sbb
dec
movsl
xor
pop
rcr
sub
jo
loopne
aaa
and
cmp
sbb
lods
mov
aaa
hlt
lods
adc
lods
and
sub
fldenv
and
test
in
xchg
mov
jbe
mov
pop
in
mov
jno
xor
test
icebp
dec
testb
mov
mov
push
inc
or
adc
idivb
mov
or
fnstsw
adc
jne
leave
cmp
mov
xchg
pop
insl
add
arpl
cmp
jecxz
xor
int3
fnstenv
int
jbe
sbb
enter
xchg
cmp
sub
mov
pop
lret
ret
rcr
sub
mov
sub
pushf
dec
or
mov
cmp
or
add
es
mov
lock
insb
xchg
add
pop
dec
mov
add
inc
cs
xchg
push
xchg
push
scas
lods
push
and
dec
jns
mov
stos
pop
mov
push
add
dec
mov
outsl
addr16
dec
add
stos
jle
jbe
add
sbb
or
sbbl
negl
mov
icebp
sbb
push
lret
jmp
imul
loope
and
mov
adc
mov
mov
mov
mov
adc
shlb
mov
sbb
pop
and
pop
mov
xchg
lea
add
dec
sbb
fbld
push
adc
mov
jl
mov
mov
jg
leavew
movsl
les
and
out
mov
xor
sub
cmp
xchg
or
mov
dec
jne
push
cwtl
setno
and
ss
mov
push
and
test
out
and
mov
lods
jae
and
repz
adc
cli
loopne,pt
subb
push
sub
xbegin
mov
xorl
lock
add
leave
sbb
xchg
movsl
cltd
clc
mov
ljmp
cmp
adc
fcoms
xchg
imul
pop
and
pushf
cmp
or
dec
pop
js
hlt
and
ss
aaa
cwtl
xchg
pop
repz
mov
jmp
pop
ret
mov
mov
scas
pushf
roll
and
pop
xor
vmwrite
jg
jmp
scas
std
test
cltd
je
sbb
xchg
pop
push
ds
sarb
and
mov
xchg
ret
shll
cmp
pop
out
std
bound
ror
in
or
aas
fisubs
push
movsl
cltd
xor
add
das
out
subb
xor
adc
iret
dec
sbb
or
mov
loopne
mov
xchg
cmp
push
xor
xchg
jne
inc
and
popa
movsl
imul
test
inc
rclb
into
lahf
mov
dec
cmp
stc
test
enter
add
cld
out
xchg
fimull
jo
in
jmp
pop
stos
ficomps
sub
shl
sbb
xor
cltd
adc
lcall
loop
xchg
mov
mov
push
out
das
idivb
fs
out
cwtl
hlt
push
xor
and
adc
push
adc
and
decb
inc
jmp
sbb
pusha
xlat
enter
push
or
jae
decl
stc
add
inc
cld
lods
xor
inc
ja
mov
lods
xchg
js
sub
fimuls
dec
sarb
jnp
scas
data16
jno
sahf
movsl
lret
loope
and
ret
shrb
test
add
adc
cmp
lods
mov
in
sub
daa
xchg
xchg
scas
xchg
cmp
test
ja
sahf
push
and
mov
sub
xchg
clc
push
out
lock
lods
icebp
inc
sub
push
nop
bound
dec
bound
mov
inc
cs
in
or
jg
jmp
incb
sbb
pop
repz
dec
sub
jle
xor
lock
adc
mov
adc
out
cmp
dec
push
adc
xor
and
push
lods
ret
push
ret
xchg
loope
cwtl
xchg
shr
scas
push
mov
sbb
xchg
sbb
mov
sbb
mov
loop
jge
mov
sbb
and
out
sub
adcb
xor
mov
mov
in
jae
aaa
rolb
adc
sub
pop
lock
rcll
out
xor
adc
das
mov
sbb
pop
inc
push
je
test
mov
xchg
js
test
xor
imul
dec
dec
mov
out
or
sub
pop
std
out
dec
mov
shr
xor
adc
fisubl
sub
stos
in
push
jp
sarb
add
fidivs
push
push
and
cmp
test
and
popa
out
movsl
add
push
das
ret
mov
inc
scas
jg
jmp
cmp
lahf
outsb
loope
mov
repz
push
and
orb
bound
loope
sub
cli
inc
lds
mov
jp
idivb
mov
aad
mov
sub
mov
jno
inc
std
in
shll
icebp
stc
mov
jl
mov
jge
cli
xchg
arpl
cmp
jne
push
aas
fimuls
jmp
arpl
jbe
je
jns
jmp
inc
repz
ljmp
push
fwait
sub
xchg
ret
shr
mov
dec
xor
sbb
dec
pushf
push
shll
movsb
out
pushf
fistps
sbb
ja
sbb
mov
cmp
int
or
into
mov
mov
adc
test
mov
cmp
out
xor
pop
ja
test
fbstp
adc
mov
js
push
loopne
pop
mov
leave
ffreep
fimuls
rolb
sarb
in
jle
pop
push
int
cmpsb
jnp
push
sbb
xchg
jge
sub
sub
pop
repz
les
xor
lods
or
sub
mov
mov
mov
dec
jg
incb
lcall
ja
lods
cmpsb
scas
lds
loope
mov
mov
sarl
add
xchg
add
inc
fcmovb
mov
rcrb
sbb
daa
push
imul
jecxz
inc
adc
icebp
jae
push
mov
and
cmpsb
inc
andb
cwtl
mov
pop
jne
and
mov
pop
jo
ja
push
mov
div
sub
add
les
sub
nop
aas
mov
imul
dec
nop
mov
insl
ja
xor
shrl
sbb
pop
mov
fwait
lea
mov
loope
or
add
cld
xchg
inc
push
sbb
pop
int3
inc
mov
into
lret
andb
mov
mov
negl
sbb
xor
mov
shl
jmp
nop
pop
iret
je
subb
ret
out
push
fsubrs
mov
dec
add
flds
in
sbb
jge
push
repnz
cmp
cmp
loopne
jecxz
or
dec
push
sub
cs
aad
inc
pop
dec
orl
aam
jno
or
sub
out
leave
into
sti
notl
cmpsl
sub
movsl
rorl
sub
je
gs
jb
mov
iret
movsl
popf
aam
push
xchg
scas
push
pop
jg
jmp
gs
dec
pushf
lock
js
divb
je
or
cwtd
in
sub
xchg
rcl
mov
popa
and
xor
mov
stos
adc
jne
lods
cmp
xchg
cmc
jae
aad
adc
fidivrs
or
sub
jmp
mov
push
mov
hlt
scas
outsb
gs
imul
jle
stos
aaa
push
out
xchg
clc
out
popf
ja
xchg
fsubrl
sub
popa
xor
sbb
std
in
xor
fnstenv
imul
inc
inc
add
out
mov
outsl
pushf
outsl
and
cmp
rorl
sbb
loop
lahf
sbb
and
xor
dec
push
repnz
dec
pusha
or
repnz
loop
dec
add
and
pop
cli
and
test
pop
ret
add
lods
test
fldenv
outsb
repnz
mov
lfs
dec
adc
int
aas
xchg
xchg
inc
ret
dec
fcmovnbe
mov
mov
hlt
cli
push
mov
and
and
add
push
testb
mov
aaa
add
mov
test
scas
jmp
xor
in
lea
mov
loopne
in
fcomps
or
or
cmpsl
fldt
fistpll
or
ljmp
cmp
mov
aaa
and
xor
daa
cmp
daa
aad
test
scas
imul
jbe
adc
mov
push
cmpsb
mov
call
fidivrl
jo
aam
test
pusha
ss
and
bound
sub
bound
xchg
nop
or
fistpl
sub
jp
hlt
xor
mov
inc
adc
pop
push
push
mulb
add
in
das
pop
cmp
adc
insb
sbb
out
lock
jmp
or
call
stos
test
push
shlb
push
mov
jge,pt
cmp
and
xlat
cmpsl
je
scas
insl
cwtl
std
pop
enter
repz
test
fstpl
stos
add
sub
and
xchg
icebp
lret
shlb
lock
xor
xchg
jp
xchg
or
jne
mov
andb
out
sahf
ljmp
adc
sub
inc
into
bound
jae
jne
lret
mov
and
not
sub
vpackssdw
scas
lcall
push
mov
imul
shr
or
mov
sub
jle
scas
arpl
and
arpl
xchg
sub
mov
mov
adc
shlb
scas
in
jae
movsb
and
das
mov
fisttpl
mov
movsl
lret
jg
or
lret
into
insl
sbb
jp
add
push
push
mov
xlat
imul
xor
pop
sbb
repnz
sub
push
fwait
jmp
dec
popf
aaa
idiv
jb
fisubl
adc
lods
imul
sarl
xor
mov
aam
das
and
sbb
mov
mov
das
or
aam
je
pusha
out
ljmp
loopne
dec
cmpsl
jns
xchg
mov
and
mov
and
fcompl
sbb
es
inc
mov
fmuls
shl
push
inc
stos
cltd
xchg
xor
push
mov
mov
sbb
aaa
popa
xchg
das
rcrb
loopne
mov
imul
inc
pop
imul
inc
push
fcoml
call
outsl
shlb
mov
lds
push
les
sub
dec
xor
or
xor
mov
xchg
dec
rcl
stos
sar
enter
push
cli
mov
movsl
pop
push
cmp
fisubl
pop
sub
sub
test
or
inc
jb
call
outsb
rorb
jge
stos
mov
std
lods
fdivs
adc
mov
inc
jns
dec
bound
xor
gs
cmp
jge
sub
jno
inc
or
or
cwtl
fbld
daa
xchg
adc
sbb
push
sbb
push
add
and
jno
mov
scas
mov
cmpb
jl
jg
fdivp
jbe
and
inc
and
fstps
push
jecxz
add
jg
sub
xchg
ja
mov
add
inc
mov
mov
or
adc
lods
inc
scas
lret
hlt
int3
inc
outsl
sbb
enter
mov
push
out
lcall
cmovb
or
sbb
xor
push
pop
sub
pop
clc
pushf
pop
cmp
pop
cltd
xchg
aas
jge
div
mov
push
pushf
and
sbb
or
clc
es
lret
xor
jb
sub
loopne
sub
inc
ret
xchg
stc
pusha
jmp
push
mov
stc
mov
gs
mov
out
filds
fdivs
cmp
pop
andb
outsb
jne
push
jns
cmp
and
push
movntps
inc
or
pop
push
bnd
stc
jmp
or
fsubs
imul
lret
sti
and
xchg
add
outsb
xchg
xchg
jecxz
mov
xchg
stos
dec
imul
xor
roll
xor
sub
mov
sar
cwtl
sar
movb
pushf
dec
lods
mov
xlat
push
imul
sub
mov
mov
adc
enter
aad
ss
lret
out
call
add
xchg
pop
fldl2t
push
add
gs
mov
cmp
push
mov
inc
jle
aam
jnp
in
js
sbb
fisubrl
sbb
scas
push
push
test
push
push
xchg
nop
shl
mov
adc
gs
mov
cltd
sti
pop
mov
sbb
jne
pop
and
sub
xor
mov
out
fcmovu
dec
push
xchg
mov
fildll
sub
in
sbb
push
push
inc
mov
add
dec
add
cmp
lods
pop
in
pop
cld
mov
lcall
xor
xlat
pusha
jbe
cmp
lea
mov
cmpsb
xor
idiv
fst
cs
xchg
repz
dec
clc
aaa
or
mov
push
xor
dec
adc
std
cmp
out
jecxz
cltd
fst
scas
call
fsub
jae
nop
outsb
mov
mov
pop
xchg
loope
outsl
jae
xchg
mov
mov
jae
adc
fstl
xchg
in
xchg
fidivrl
push
add
inc
sbb
push
aad
shll
loop
jl
into
inc
xor
adc
or
subb
movsb
dec
dec
inc
xchg
sbb
mov
cmp
int
xorl
into
les
jmp
sbb
cmp
fwait
push
jmp
mov
inc
mov
push
in
xor
mov
mov
jnp
sbb
inc
je
jmp
call
nop
test
mov
push
xchg
loop
outsl
jb
push
rcll
rorl
and
jb
int3
ss
sub
out
jns
inc
adc
clc
out
jno
aam
scas
test
adc
cltd
inc
loope
pop
push
out
jo
scas
aas
aam
mov
mov
das
test
fs
cmpsb
xor
sub
xor
xor
add
push
pop
sbb
mov
lret
rolb
and
call
pop
int
in
mov
mov
test
and
cli
rorl
xchg
flds
test
jo
xchg
mov
mov
loopne
dec
sar
aaa
sub
pop
cmpsl
testl
out
retw
shl
push
adc
jp
add
sub
test
push
sbb
sbb
imul
push
adc
mov
mov
mov
subl
xlat
xor
or
in
push
test
shr
lret
ffreep
imul
out
jg
fistpll
push
jae
sbb
mov
mov
mov
inc
mov
jnp
push
jnp
cmp
popf
iret
mov
xor
pop
push
push
pop
mov
xchg
sarb
into
stos
adc
cmovs
adc
gs
mov
mov
cmc
or
inc
mov
lods
adc
jns
mov
cld
jae
imul
jp
sub
test
scas
data16
mov
cmp
inc
lods
leave
add
jne
push
sbb
mov
fs
insb
xchg
rcrb
jns
fs
pop
in
dec
je
pop
shll
push
in
lock
and
mov
hlt
or
leave
call
dec
jnp
cmp
and
fwait
int3
scas
xlat
adc
adc
push
rorl
mov
fistps
scas
pop
pop
scas
xchg
xorb
sbb
or
mov
in
repnz
push
mov
sub
add
mov
dec
imul
pop
out
repz
ss
xor
mov
int3
and
pop
jl
jae
jb,pn
sub
popf
test
lods
xchg
daa
inc
hlt
lret
movsl
push
inc
insl
std
jbe
mov
das
incb
mov
cs
mov
sbb
mov
adc
xlat
aam
fiadds
mov
cmp
pop
cs
sarb
mov
dec
cmc
outsl
pop
cmp
pushf
mov
jne
adc
fxch
fcoms
out
imul
adc
pop
bound
lret
inc
repz
nop
loopne
pop
arpl
cltd
sahf
mov
mov
or
lahf
sbb
fadds
sbb
call
xchg
enter
jmp
sub
mov
sbb
pop
loopne
sbb
mov
es
cmp
shl
or
dec
cmp
xlat
and
pop
sub
cld
gs
mov
ds
imul
add
je
fs
fwait
lahf
cmpsb
fisubrl
inc
push
in
lahf
xchg
enter
xchg
sbb
ficomps
pop
int
mov
out
in
cmp
push
mov
push
push
mov
jle
push
shrb
stc
and
lahf
daa
mov
push
jle,pt
test
ret
stc
sbb
dec
mov
lcall
inc
dec
les
push
push
xchg
adc
jmp
pop
aaa
sahf
jge
dec
stc
mov
push
jmp
es
sahf
mov
xor
jl
jp
mov
mov
ljmp
push
data16
icebp
ljmp
jno,pt
pushf
mov
rclb
add
pop
pop
pop
aaa
test
outsl
mov
mov
inc
or
jne
loop
outsb
jnp
aas
inc
paddd
mov
push
pop
movb
jmp
and
mov
dec
adc
xlat
adcl
shlb
test
xlat
pop
lock
push
adc
pop
add
xchg
sti
dec
or
js
mul
push
out
mov
pop
jmp
adc
lcall
or
rol
mov
mov
xor
xchg
in
sub
push
lods
or
push
les
test
lds
aam
cmc
push
paddsw
shlb
mov
dec
ss
fidivrs
pop
sbb
ret
call
ffreep
xchg
roll
test
rolb
and
sub
and
xlat
jae
cld
aas
or
jbe
stc
cwtl
andb
and
das
add
adcl
mov
xor
inc
daa
insb
xor
mov
mov
add
lret
imul
adc
jne
mov
inc
mov
inc
pushf
fs
push
or
data16
push
adc
out
dec
inc
out
mov
sbb
lret
cmp
push
mov
cwtl
scas
lret
or
ss
js
in
cmp
daa
dec
adc
pop
insb
into
jbe
je
ja
xchg
call
les
dec
mov
inc
nop
jmp
mov
cmp
das
cs
fimull
mov
add
ret
add
cmc
xchg
add
push
push
sub
or
inc
jp
and
and
imul
mov
fs
mov
gs
mov
js
sti
imul
mov
aas
sbb
rcrl
pushf
in
shl
lods
xchg
or
push
inc
push
push
adc
or
xlat
push
lret
sarl
cmp
sahf
das
xor
orl
dec
and
lret
daa
push
sti
ds
pop
adc
test
loopne
stos
pop
dec
adc
frstor
int
or
mov
loopne
xchg
and
dec
popa
and
dec
mov
adc
rol
and
inc
mov
loopne
sbb
cmp
push
cmp
pop
jp
negl
cmc
icebp
pop
aam
cmp
mov
sub
mov
mov
xchg
aaa
orl
push
icebp
or
and
jae
push
jge
mov
rcll
push
addr16
jno
in
xchg
and
jl
addl
dec
cmp
xchg
out
mov
mov
sahf
pop
push
mov
mov
pop
fimull
jns
imul
in
call
cmp
ret
shrl
push
inc
pmulhw
lret
rcll
mov
and
pop
add
push
xor
push
je
inc
jmp
orl
mov
add
adc
mov
mov
xchg
aad
pusha
lock
mov
inc
pushf
cwtl
adc
pushl
shll
pop
mov
cli
jo
lcall
add
and
aad
sub
inc
mov
cmp
divb
scas
adc
mov
cs
add
jge
lods
movl
mov
push
outsl
mov
push
add
add
ret
stc
das
shll
popl
pop
gs
or
mov
add
pusha
cmp
int
push
dec
stos
jl
add
cmove
test
push
pop
shlb
cmc
aam
rorl
fcom
jne
iret
sub
mov
fwait
jb
outsl
jmp
fnstsw
out
fisttps
sahf
ror
shll
xor
cmpsb
adc
add
cltd
paddusb
gs
xorl
cli
push
jno
mov
iret
cmpsb
pop
sbb
stc
ds
cmp
cmp
mov
mov
cmpsb
sub
sub
sub
sti
lods
xchg
mov
and
int
mov
je
push
in
dec
lock
mov
into
push
mov
mov
fcoml
jns
xchg
sbb
pusha
jo
pop
loope
in
testl
mov
sbb
sti
dec
in
adc
adc
out
cltd
mov
push
sbb
aaa
xchg
push
loopne
inc
aaa
inc
cmpsl
lods
sti
push
fadd
aam
into
jnp
jno
mov
push
pop
xor
add
mov
insb
enter
jno
bound
jl
dec
mov
pop
sub
sbb
sahf
jecxz
mov
rcl
shrb
popf
arpl
xor
jmp
xor
mov
xor
or
push
pop
adc
push
sarb
mov
mov
or
push
mov
add
mov
repz
push
sbb
outsl
xor
and
xchg
and
mov
nop
pop
mov
mov
jmp
pop
mov
insl
mov
sub
data16
into
sub
cmp
scas
xor
out
jnp
bound
fs
mov
sahf
data16
mov
sbb
ja
clc
popa
dec
divl
lds
xor
xor
lahf
gs
aam
jle
sub
push
std
dec
ds
push
js
and
mov
push
dec
aam
add
xchg
popa
popa
mov
cld
xor
xor
or
cmc
jp
jo
xchg
or
jbe
sub
subl
xchg
mov
mov
repnz
add
lea
mov
add
stos
call
mov
dec
and
adcb
js
mov
jbe
bound
and
je
leave
mov
arpl
pushf
mov
and
xchg
mov
cld
out
loopne
mov
fadds
pop
pop
ja
aas
leave
sahf
jno
fsub
mov
dec
mov
mulb
fcmovne
and
scas
jbe
add
inc
adc
fdivs
mov
pop
lea
out
jno
lret
push
inc
in
jge
adc
shrb
inc
inc
in
or
fdiv
mov
clc
mov
jecxz
or
mov
pop
mov
mov
and
sbb
fadds
test
aaa
cmp
sbb
or
adc
ljmp
das
jbe
inc
xor
and
push
inc
or
push
pop
outsb
loop
iret
mov
jle
mov
fbld
add
aas
enter
push
rolb
cmp
lods
negl
cmp
imul
and
mov
icebp
jle
popa
or
pop
or
in
pusha
or
aam
out
inc
fnstenv
in
es
loope
fcmovu
lret
sub
pop
lret
fwait
xor
iret
lock
adc
fldcw
cld
dec
hlt
mov
lret
mov
or
emms
cld
xchg
mov
dec
leave
aas
fcoms
cmp
mov
add
loopne
stc
popf
jo
mov
pop
pop
inc
popa
icebp
fs
cmpsl
add
pop
push
ds
jbe
sbb
pop
and
es
mov
pop
fsubl
xchg
adc
cmp
movsb
pop
rcl
add
fwait
aaa
adcl
test
shrd
aad
xchg
mov
int
dec
mov
sbb
rcr
mov
inc
jo
sbb
and
das
daa
pop
stos
sub
stc
pusha
pushf
fadd
cwtl
stos
idivl
jo
in
fidivrl
cmc
imull
dec
outsb
jp
inc
mov
pop
mov
mov
inc
in
popa
and
repz
nop
and
lahf
mov
in
or
inc
test
out
or
or
ljmp
cmc
mov
cmovge
mov
scas
mov
jle
or
sub
dec
push
pop
mov
lret
cmp
test
jmp
rcrl
scas
mov
jbe
and
mov
cwtl
and
pop
dec
adc
vinserti64x4
push
cmp
cmpsb
mov
mov
repnz
and
mov
pop
dec
mov
xchg
push
mov
int
andb
or
cmp
rclb
add
fcoml
cmp
adcl
rclb
cmpsl
adc
push
pop
mov
in
fsts
mov
fidivs
dec
xchg
sbb
jmp
test
test
lcall
int
push
in
andl
pop
fs
ja
mov
mov
es
pop
xor
xchg
repnz
or
test
sub
stos
fwait
mov
adc
stos
adc
int
dec
jp
pusha
xlat
test
mov
jae
sub
mov
imul
into
xchg
mov
call
ficoms
ds
lds
inc
insb
cmp
mov
inc
in
call
scas
scas
in
adc
pop
loop
das
fstl
andb
test
sub
mov
push
mov
pusha
mov
addb
xchg
lret
jp
lret
bnd
das
jo
push
sub
and
xchg
add
push
ja
inc
or
outsl
inc
shlb
into
pop
cmp
xor
mov
sbb
and
fiaddl
sub
cmp
rorb
sub
xchg
bound
jg
mov
add
pusha
leave
jmp
dec
arpl
sub
inc
cmpsl
and
add
inc
mov
andb
mov
mov
fildll
push
pop
sbbb
shll
mov
js
cmpsl
push
sub
neg
add
sbbb
leave
ja
hlt
lods
call
jnp
xor
pop
flds
mov
lds
mov
test
sub
pop
mov
frstor
rcrb
adc
lods
data16
std
es
les
sbb
push
mov
mov
mov
push
js
mov
adc
stos
pop
int3
js
jno
in
pop
add
call
sbb
testb
mov
fwait
mov
gs
sbb
push
jecxz
inc
aam
loopne
add
in
lods
inc
sub
pop
in
jmp
xchg
outsb
rcll
pop
dec
dec
sub
lods
mov
lret
idiv
adc
das
and
xor
movsb
pop
test
shll
pop
bnd
dec
mov
dec
inc
pop
pop
leave
das
andb
lds
push
std
rcrb
imul
pop
lret
sub
scas
xchg
add
push
rclb
jne
cltd
in
rclb
dec
push
in
ret
mov
xor
xchg
in
jp
or
cltd
and
test
dec
mov
sub
movsb
mov
fstps
scas
outsl
mov
int3
inc
lcall
mov
push
mov
push
cmpsl
nop
lahf
int
jb,pt
icebp
fstps
sbb
leave
pop
add
xlat
ds
bound
cmp
add
cld
inc
cmp
sbb
sbb
repz
fistps
push
negb
or
and
mov
fcmovnu
std
ss
ret
xchg
add
into
scas
test
aam
out
fldt
cmp
mov
lcall
and
inc
ljmp
dec
aam
jns
fimuls
pop
stos
jb
xor
int3
mov
pop
dec
or
out
sbb
adc
jp
adc
repz
add
dec
adc
mov
mov
push
mov
fimull
pop
jl
lahf
js
iret
jns
cltd
sbb
dec
jecxz
jnp
shlb
cmp
lock
dec
sti
test
mov
or
lcall
pusha
push
cmp
shrl
lea
dec
fs
imul
js
stc
hlt
sbb
adc
insb
mov
lret
repz
or
xor
sub
stos
and
and
jg
mov
mov
or
lea
cwtl
adc
cmp
dec
jge
sar
mov
lcall
jle
in
nop
repnz
mov
pop
pusha
fimuls
pop
rorl
lret
fmull
mov
xchg
push
das
stc
cmc
lcall
lahf
cmp
shl
cmpsl
inc
imul
sbb
ss
xchg
sahf
sub
mov
nop
or
push
push
mov
xchg
jnp
mov
dec
inc
nop
push
data16
js
je
loope
movsb
sub
repnz
popa
mov
dec
cmpsl
adc
lods
pop
pop
xor
ss
mulb
adc
dec
not
and
dec
xchg
out
daa
mov
sub
cli
or
cld
mull
test
test
xchg
imul
xchg
aad
xor
mov
xchg
mov
jmp
sub
sub
add
mov
pop
or
mov
inc
movb
movsb
and
push
xchg
xor
int
fwait
cmp
fs
arpl
lret
aas
cwtl
sbb
inc
clc
push
sbb
std
or
es
rcrb
shrl
test
fstpl
adc
push
cli
popf
int
pop
jne
ret
jb
sub
xor
xchg
xor
xor
mov
jp
aaa
xchg
cmpl
cld
js
fdivl
stos
sbb
filds
add
cmp
xor
sub
mov
dec
pop
push
cmpsl
cmp
jb
push
push
lret
xchg
rorl
fsubrl
repnz
mov
pop
mov
fwait
hlt
lret
jne
rcrb
test
pop
mov
movsb
pop
imull
js
rorl
fwait
dec
fs
aaa
jno
cld
mov
and
mov
insl
hlt
dec
rorb
jmp
sub
cli
xchg
jle
bound
ljmp
mov
popa
dec
mov
push
push
stos
iret
push
pop
mov
ret
daa
inc
lahf
fsubr
js
or
sbb
push
dec
pusha
or
jo
sbb
fimuls
xor
push
jo
aaa
inc
dec
jle
ret
jl
jbe
lock
imul
outsb
loope
arpl
adc
jmp
and
cli
les
iret
in
cmp
mov
sbb
mov
jne
bound
sahf
movsl
lret
test
or
inc
sbb
dec
cmc
outsl
xor
add
add
push
xchg
xlat
dec
xor
lea
shll
lcall
lea
and
adc
rolb
inc
dec
mov
fildl
jecxz
sub
insl
pop
ss
xor
mov
sarl
and
sbb
xchg
mov
cmp
mov
jmp
dec
inc
les
add
add
fnclex
stc
imul
sub
or
lcall
cmp
cmp
test
mov
iret
pop
cmc
sbb
adc
movsl
jl
inc
xor
and
adc
rclb
mov
shrb
jle
scas
and
leave
fsubs
fsubl
lret
xor
cmp
cwtl
into
fsubs
arpl
lret
xorb
mov
lret
pop
and
out
push
loopne
les
jae
scas
jl
mov
scas
pop
in
mov
sbb
push
sbb
js
jle
mul
inc
jecxz
int
and
insl
mov
jns
pop
mov
jne
jns
push
pop
pop
xor
repz
pmaxsw
mov
pusha
pusha
pop
ror
jmp
lahf
xor
lret
push
cmpsb
inc
or
lret
cwtl
and
xor
dec
rcr
cld
sbb
ss
push
adc
cmp
mov
push
lock
jne
pop
loope
mov
pop
mov
popf
push
mov
pop
xlat
in
cmp
jp
xchg
mov
ja
or
cmpsb
push
les
orl
hlt
push
lcall
out
pop
les
and
mov
pop
adc
xchg
rorb
mov
aaa
mulb
push
add
and
jp
dec
adc
jo
inc
add
arpl
adc
nop
divl
push
mov
gs
stc
mov
lret
push
pop
push
add
pop
mov
std
aad
xchg
pusha
ss
pop
or
int3
xchg
adc
jb
push
pop
shrb
bound
mov
out
je
insb
push
arpl
lock
lods
inc
stc
fmuls
aas
cltd
cmp
into
push
add
fmuls
lods
add
test
push
je
fistpl
sub
and
fs
adc
jbe
fldl
dec
movswl
mov
daa
lods
adc
push
pop
and
mov
jg
adc
lcall
jo
dec
cmp
mov
sub
adc
repz
insl
pop
adc
data16
mov
sarl
jp
xor
cli
fwait
xor
xor
stos
or
leave
in
or
jae
fsub
jb
or
sub
sub
movsb
mov
and
js
inc
notl
cmp
xchg
or
scas
xchg
leave
mov
ret
insl
std
push
pop
mov
ret
xchg
ds
repnz
mov
jo
adcb
stos
jo
test
dec
push
lods
or
sbb
shll
js
scas
cwtl
iret
sub
enter
stc
xchg
pushf
push
cmp
cmp
es
inc
lods
movsb
fs
add
xchg
imul
jp
pop
sbb
lcall
imul
movl
clc
int3
mov
repnz
mov
ret
xor
pop
push
int
push
mov
push
sbb
test
or
inc
pop
or
or
push
addr16
in
jp
mov
cwtl
nop
fisubrl
or
imul
std
flds
cmc
pop
jns
movsw
ss
and
xchg
jo
rorl
imul
jecxz
xor
pop
xorl
pop
pop
in
les
ret
cmc
push
lcall
iret
fidivl
mov
inc
mov
lock
or
imul
lret
sub
fs
js
push
movsb
call
pop
data16
std
sbb
sbb
jb
or
aas
pushf
inc
dec
out
jg
adc
xor
cs
jmp
in
xchg
icebp
xchg
push
mov
jae
and
loop
in
cmpsb
stos
pop
fiaddl
and
test
sbb
mov
popf
mov
inc
cmp
push
hlt
push
popa
xchg
fadds
es
movsb
call
jmp
push
lods
inc
inc
icebp
lods
ficompl
cld
mov
adc
dec
mov
xchg
cmpsb
out
add
ret
adc
add
pop
les
mov
pop
jb
cmpl
addl
leave
repnz
insl
xor
loop
dec
dec
es
cmpsb
jg
pop
idiv
mov
pushf
into
aad
test
arpl
mov
inc
jb
sbb
iret
inc
mov
cld
dec
out
mov
addr16
dec
das
jbe
inc
scas
enter
repnz
mov
sbb
xor
sub
add
fucomip
or
daa
aaa
jns
mov
inc
mov
mov
out
jbe
ffreep
xchg
ret
add
ljmp
jb
inc
out
push
mov
jmp
or
std
fidivrl
xchg
cmpsb
mov
fbstp
notb
dec
inc
or
mov
stos
inc
mov
push
icebp
negl
jne
jns
insb
int3
in
push
outsb
and
test
sbb
adc
stc
aas
imul
dec
cmp
inc
and
repnz
pop
sarl
and
adc
dec
dec
xchg
jnp
jb
scas
das
mov
aam
sub
mov
repz
hlt
push
jne
inc
mov
xchg
add
add
ret
or
adc
adc
into
xor
push
cld
lods
fidivrs
push
pop
call
je
lcall
push
cli
mov
mov
enter
mov
daa
jnp
adc
test
clc
lret
jo
popf
leave
imul
loopne
fldz
or
mov
push
push
daa
xor
fwait
cltd
insb
xor
pop
sbb
dec
xor
cs
jnp
or
loope
ret
lds
out
mov
inc
adc
xchg
add
cltd
insl
push
mov
inc
push
and
repnz
daa
and
psraw
dec
mov
dec
filds
xchg
je
push
pop
mov
mov
push
or
arpl
imul
mov
mov
xchg
loope
stos
fcompl
push
lods
jp
es
fidivrs
dec
mov
pop
xorb
jae
jb
lock
popf
cmp
sahf
xchg
jge
push
in
cmp
in
out
xchg
inc
lret
xor
js
sbb
cmp
pop
mov
push
sbb
repz
dec
sbb
sbb
mov
lret
pop
xchg
imul
inc
jae
push
jmp
outsb
push
fwait
imul
test
jb
add
scas
and
xchg
add
lret
mov
fidivrl
jae
lods
pushf
xchg
in
shrb
inc
loopne
cmp
int
jmp
mov
xor
mov
pushf
jno
iret
scas
stos
ds
mov
sbb
xor
push
rol
cmp
les
sub
ja
mov
xor
sbb
or
sbb
movsl
enter
lds
sbb
jge
add
mov
jl
fcomps
inc
mov
imul
rcrl
xchg
jns
adc
sbb
and
scas
jbe
or
imul
fs
cmp
fs
test
add
add
mov
mov
mov
xchg
xor
scas
sbb
popa
in
sbb
movsl
cmpsl
cmc
pop
pusha
addr16
push
imul
shll
sahf
sbb
push
pop
lcall
jecxz
cmp
xchg
push
ret
cmp
mov
xlat
xchg
and
or
cli
or
cmp
imul
cld
inc
test
imul
sub
jecxz
daa
fistpl
jp
mov
adc
insl
push
loopne
pushl
pusha
jp
jecxz
imul
add
sbb
pusha
jmp
inc
mov
jns
xchg
add
pushf
mov
test
or
cmp
mov
cmpsb
jl
cwtl
and
push
rcrb
imull
or
jl
icebp
jmp
dec
fdivl
push
or
sbb
rcll
sbb
adc
cmovnp
stos
add
out
push
ret
pop
into
sbb
add
ret
adc
jl
sbb
outsl
inc
mov
out
fwait
lea
cmc
and
loopne
push
les
out
icebp
lcall
sub
leave
lahf
mov
jno
js
or
inc
jl
pushf
dec
mov
ds
mov
pop
mov
mov
pop
loope
int3
cmp
sbb
jecxz
inc
mov
inc
lcall
jae
int
push
cmpsb
xchg
pop
ret
fbstp
test
inc
in
ror
mov
xchg
sahf
jecxz
scas
popf
fwait
cltd
cmpsl
ja
ret
and
lds
fistpll
inc
push
or
fwait
mov
mov
mov
out
fdivs
and
pop
xor
and
lcall
jno
pop
fxch
stos
xchg
xor
mov
sbb
push
xchg
dec
inc
add
adc
fiaddl
push
loop
je
enter
sahf
add
ja
lahf
loop
rolb
lcall
inc
scas
mov
mov
sbbb
mov
cmp
cs
test
fcoml
hlt
sbb
arpl
mov
inc
idivl
mov
xor
ret
out
jg
and
mov
sbb
cmp
cltd
std
mulb
cmp
in
fwait
test
add
rcl
pop
sbb
adc
aad
dec
popf
dec
add
sbb
push
insb
mov
xor
or
xchg
aam
sub
and
fwait
mov
jle
aaa
inc
push
xor
decl
sbb
sahf
mov
dec
xlat
mov
mov
mov
test
mov
sets
les
mov
adc
inc
xor
sub
xchg
mov
je
ja
mov
movsl
stos
add
push
fcomi
jmp
ds
xchg
lcall
xchg
aam
sub
sub
clc
xchg
std
mov
cmp
sbb
std
sub
in
imulb
mov
insb
sub
subl
jle
lods
jae
adcb
sub
addl
sarl
jp
stos
ror
inc
adc
fnstsw
loope
jb
lods
jge
das
outsb
test
imul
nop
and
mov
push
xchg
mov
jl
ret
rorl
jmp
inc
dec
test
nop
adc
push
repz
mov
jnp
or
fwait
mov
jmp
je
aaa
push
fstp
hlt
sahf
xor
add
fcoms
icebp
out
push
jg
mov
mov
pop
out
push
jmp
add
cltd
xchg
or
stos
and
jge
xorb
test
mov
loop
ror
inc
andb
mov
adc
dec
push
aaa
ret
jg
jbe
push
daa
cmp
xchg
add
jnp
out
into
cmp
xchg
push
fidivl
mov
jno
inc
rorb
mov
loopne
sub
dec
aaa
iret
xchg
popf
add
lret
cmp
clc
jmp
mov
pop
cmc
pop
mov
jb
scas
xchg
in
mov
mov
daa
jno
orl
push
xlat
dec
adc
inc
ljmp
call
test
repz
insl
addl
inc
cmp
fsubp
push
cmp
and
add
add
dec
jp
mov
sbb
hlt
fdivrs
mov
fs
or
xor
imul
dec
iret
push
fld1
pop
adc
dec
fucom
aad
xchg
push
fsubs
sahf
or
xor
inc
mov
ljmp
dec
jecxz
pop
sbb
mov
dec
jae
cmp
push
ds
fnsave
pusha
and
and
xchg
call
in
js
out
dec
in
inc
sub
adc
test
dec
lock
pop
fcmovne
mov
mov
pop
jp
cmp
test
push
cmc
clc
or
push
mov
and
mull
xor
lahf
addl
jp
loope
pop
xchg
in
sbb
mov
jle
inc
dec
jle
dec
jne
dec
mov
repnz
das
std
add
in
ret
enter
lret
and
and
adc
in
mov
shlb
xchg
stos
fdivs
mov
mov
shrb
rclb
sub
ja
adc
sarl
ss
out
jmp
inc
int
je
data16
pushf
mov
pop
clc
testb
popa
sbb
jmp
and
add
and
push
inc
stos
pop
and
aaa
test
inc
push
out
add
test
lds
mov
inc
in
and
xlat
cmpsl
push
add
std
adc
xchg
out
fistps
sarl
pop
pop
stc
add
pop
adc
int3
aam
adc
aam
in
push
xlat
inc
xor
sub
xchg
pop
sahf
sub
cmp
and
shll
sbb
test
sbb
mov
push
nop
adc
dec
imul
xor
sbb
xchg
les
sub
mov
into
mov
ret
jecxz
lret
scas
push
inc
jae
adc
and
movsb
xor
es
stos
xchg
dec
iret
adc
insl
clc
mov
stc
pop
push
pop
push
imulb
daa
sub
mov
xor
loop
lret
mov
cld
addb
fcomps
xchg
xor
push
ljmp
jns
pop
das
and
rcrb
inc
inc
in
loopne
call
sub
xor
xchg
mov
and
stos
push
mov
arpl
jl
cmp
cmc
sub
add
jp
jno
mov
jge
push
fcomps
stc
inc
add
and
rorl
dec
mov
inc
xor
cmp
mov
dec
inc
mov
jne
inc
rclb
pop
icebp
xor
pop
jae
xor
inc
fisttpl
push
pop
je
stos
enter
jl
out
pop
jbe
shl
leave
cwtl
mov
mov
inc
fsubl
stos
dec
cmpsb
xchg
out
mov
push
imulb
das
mov
dec
movsb
sbb
cld
repnz
fistpll
inc
les
loope
cmpsb
cmpsb
xor
out
ljmp
pop
repnz
mov
adc
jmp
sahf
je
cmp
popf
aaa
orb
out
xchg
mov
loope
jb
arpl
cli
loopne
jecxz
jmp
scas
out
sbb
xchg
lock
imul
fwait
and
adc
lahf
adcl
cmp
loope
stos
in
stos
or
jno
out
ja
negl
lret
pop
repnz
mov
ret
int
push
test
daa
sub
mov
sub
imul
cs
mov
inc
lahf
std
or
xchg
negb
addr16
pop
pop
stos
fsubs
in
mov
loopne
cwtl
hlt
std
bound
test
mov
pop
icebp
int
and
enter
lahf
les
jae
cmp
mov
push
add
je
mov
ret
pop
std
daa
in
dec
pushf
push
jb
test
dec
xlat
ds
xchg
roll
xor
insl
stos
mov
sub
inc
add
or
fisttps
ss
jns
adc
loopne
adc
into
lock
inc
test
bound
jmp
iret
mov
mov
sub
or
ds
sub
or
mov
clc
out
mov
and
push
jno
ja
icebp
pop
mov
inc
mov
pop
jg
clc
leave
inc
mov
repnz
mov
rorl
lods
and
lds
push
jl
je
mov
dec
fistps
xor
fnstsw
inc
pop
dec
and
bound
nop
mov
lcall
icebp
outsb
mov
or
sbb
stc
xchg
mulb
pop
daa
pop
inc
xor
stos
rcrl
int
xchg
cld
dec
adc
sahf
lahf
outsl
je
and
sub
lahf
sbb
lahf
ss
ja
loop
jle
roll
sub
sarb
cmp
mov
push
mov
sub
dec
adc
jge
push
aam
cli
mov
xchg
daa
add
stc
ret
stos
jo
jl
jp
mov
mov
mov
loopne
pop
and
int3
xchg
stos
cmp
cmp
push
daa
ss
jle
daa
inc
fadds
imul
push
out
lods
jb
cld
loop
pop
andb
rol
ljmp
or
push
xor
cmpsb
sub
pop
cmp
xchg
data16
and
jle,pn
sub
or
icebp
push
pop
sbb
lods
pop
push
sbb
gs
fdivrs
idivb
icebp
fs
xor
fisttpll
das
cmp
in
mov
push
lret
sahf
das
roll
push
dec
cli
or
mov
jge
cld
mov
into
leave
shlb
movsb
jmp
into
mov
fwait
jecxz
outsb
pop
popf
rcl
into
test
inc
int
mov
mov
lock
inc
call
aaa
push
or
test
pop
imul
mov
and
mov
dec
std
push
jl
xchg
imul
cld
les
push
and
xor
xchg
push
data16
loopne
adc
fcomps
sbb
mov
dec
pop
mov
out
jecxz
xor
xchg
out
in
xor
fs
xor
lcall
cmp
mov
fisttps
mov
jmp
ret
aam
adc
pop
scas
inc
lcall
dec
jbe
adc
test
mov
mov
xchg
mov
or
sub
sbb
adc
cmp
jnp
xchg
jecxz
mov
in
add
dec
and
inc
jns
add
or
cwtl
leave
jp
fidivrl
sub
dec
pop
dec
sub
jne
cmp
mov
fistpll
aaa
fcmovnu
and
fmul
jns
insl
fstp
lret
negl
jmp
push
in
aad
cltd
std
push
js
dec
push
xor
call
push
sbb
out
push
dec
popa
ficoml
pop
and
mov
addr16
daa
outsb
xor
mov
adc
inc
push
fistl
lock
insl
xchg
pop
cmp
push
push
adc
xchg
jecxz
dec
and
add
repnz
xor
pusha
popf
out
lret
mov
mov
mov
sub
cmp
and
pop
mov
adc
inc
shrl
sti
or
shlb
into
fisttps
add
ret
mov
push
and
push
sbb
pop
pushf
into
pop
dec
shrl
stos
mov
pop
shlb
loopne
in
push
dec
mov
addl
out
push
or
subl
ret
rcl
push
pop
push
in
aas
cld
fsubs
aaa
test
push
mov
dec
sbb
out
fwait
popa
cmp
inc
cld
out
pop
fucomp
sbb
push
stos
mov
push
std
std
imul
das
dec
pop
scas
adc
out
xor
add
popa
clc
jne
stos
ror
push
fldenv
aam
jmp
sub
sub
das
mov
mov
ja
loop
mov
leave
mov
mov
cmpsl
mov
ret
loope
ja
or
addr16
fcomp
jl
mov
pop
test
xchg
sbb
xchg
push
sub
xor
dec
mov
or
int
sarl
cltd
and
push
xbegin
arpl
andb
add
sbb
add
pop
aad
aad
xchg
test
sbb
jle
lcall
in
pop
fdivrs
lahf
fwait
mov
in
pop
push
data16
or
sbb
cld
xor
mov
jno
js
out
add
mov
inc
push
mov
mov
aad
cs
xlat
lock
fldcw
jno
mov
sbb
stos
cmp
js
ss
movsb
sub
mov
ljmp
xor
adc
testl
xor
fistl
mov
mov
and
ror
mov
add
imulb
repz
enter
sub
pop
gs
inc
test
repz
incl
jno
mov
jecxz
push
add
xor
mov
push
sub
aam
stc
lcall
shrl
jbe
enter
xor
jbe
pop
jo
jecxz
jl
mov
sub
add
or
mov
push
push
sub
push
xchg
inc
das
push
push
xor
ss
pop
orb
iret
gs
pop
cmp
inc
adc
mov
mov
sarl
gs
jno
sbb
dec
notb
and
push
or
inc
add
and
sbb
mov
xorl
sahf
jb
fnstcw
fistps
hlt
push
lds
jo
mov
jg
xor
and
fidivrs
cs
stos
xor
loope
sbb
adc
dec
psubd
sub
popf
or
pop
pop
pop
push
xchg
jl
inc
enter
xor
dec
std
mov
push
repz
or
and
and
arpl
out
incl
xor
mov
leave
aaa
out
pop
push
popa
mov
mov
mov
or
inc
mov
or
add
pop
ficompl
sub
addr16
or
jp
cltd
pop
mov
loopne
jo
add
sbb
lea
jnp
and
cmpsl
out
mull
push
aaa
cmp
fsub
hlt
adc
mov
push
lahf
gs
inc
call
les
shl
inc
adc
mov
flds
sbb
nop
xor
inc
xchg
pusha
insb
lcall
fadd
popa
ret
xor
dec
popf
addb
dec
pushf
cwtl
jle
sbb
mov
pop
nop
arpl
jno
add
outsb
xchg
or
aas
out
lret
test
pop
adc
mov
cmp
gs
mov
push
jle
pop
dec
call
pop
pop
lea
scas
loopne
data16
icebp
sti
inc
jns
xchg
inc
mov
pop
stc
fstps
div
sarl
xchg
adc
xchg
pop
aam
loopne
mov
jl
ds
push
daa
xchg
pop
pop
data16
out
cmpsb
cli
add
movsb
int
jnp
icebp
pop
fists
cmp
sti
addr16
sub
clc
ficompl
ljmp
aam
outsb
cmp
xor
mov
sbb
sbb
test
push
cmc
pop
fsubrl
jmp
sub
inc
mov
in
jb
or
sbb
fcmovne
mov
adc
xchg
repz
xchg
push
dec
push
xor
outsl
jbe
insb
rclb
mov
xor
mov
sbb
xor
cmp
cmpb
dec
push
or
jnp
fldt
xor
subb
std
lds
push
sub
inc
add
jmp
push
pop
subl
ja
lods
aam
scas
dec
cltd
jbe
xchg
int
dec
push
or
mov
jl
jle
lock
jmp
xchg
xchg
fstl
fidivrs
mov
es
loopne
mov
cmp
fisubl
cld
mov
movsb
loope
sub
and
mov
xchg
repz
xchg
faddl
loope
into
lock
pop
push
push
inc
enter
adc
and
lds
inc
in
push
test
pop
cmpsb
ret
add
dec
lret
push
sub
inc
mov
sbb
ret
mov
insl
mov
imul
inc
ret
les
test
pop
sub
nop
and
push
jg
out
cmpsb
pushf
dec
xor
mov
popf
out
fadd
mov
xor
in
mov
dec
xor
jge
mov
sbb
js
imul
adc
test
pusha
inc
xor
rclb
dec
sbb
pushaw
jns
cmc
pop
stc
mov
dec
and
ret
scas
fwait
rorb
sbb
rorl
adc
add
xor
mov
sub
adc
orl
push
sbb
inc
jbe
cs
lret
popa
stc
je
pushf
test
ret
imul
int
sbb
sti
lcallw
sbb
aam
lahf
rclb
fldt
jl
lcall
or
enter
lds
std
cwtl
mov
fsts
cmp
nop
dec
xor
push
xchg
xor
dec
bound
imul
pop
or
cli
cwtl
lret
out
jle
mov
outsl
jmp
test
lods
or
mov
int
aad
sub
mov
add
call
and
repnz
adc
repnz
mov
adc
fisubrs
aam
pop
mov
push
mov
imul
mov
mov
js
pop
push
out
mov
insl
lcall
push
cmp
pop
cld
push
mov
push
adc
call
adc
adc
scas
mov
in
xor
pushf
subb
iret
xchg
test
jnp
inc
xor
mov
ja
push
xchg
jae
jge
xchg
push
dec
movsb
arpl
sub
xchg
adc
faddl
fnstsw
lret
andl
arpl
sbb
mov
add
fldcw
icebp
mov
jmp
scas
pop
dec
jo
mov
sbb
rcrl
stc
sub
xor
sbb
loopne
scas
out
push
dec
inc
pop
fdiv
sub
cs
icebp
add
push
pop
inc
ljmp
push
sub
shrl
aam
push
scas
in
add
cmp
jl
adc
lds
fmull
outsb
ss
in
ds
adc
cmp
mov
flds
sub
movsb
push
bound
push
popa
or
loop
and
in
cmp
lea
out
cwtl
push
mov
or
cld
outsl
pop
cmp
xor
gs
inc
cs
fidivs
sub
push
or
or
lahf
fbstp
popf
jl
stc
pop
cwtl
sbb
inc
enter
xchg
dec
test
movsl
xchg
lods
repz
cld
add
clc
nop
jnp
add
mov
adc
clc
test
xor
push
sbb
sahf
pop
ljmp
orb
int3
int
inc
repnz
scas
pop
sub
adc
clc
movsl
mov
pop
jmp
fisubs
mov
jecxz
and
mov
jp
mov
inc
push
sub
or
sarb
sub
push
pop
push
xor
xor
sub
mov
lock
xor
mov
jg
adc
lret
in
sbb
pop
push
push
insl
ret
adc
xor
lods
les
lock
test
repnz
clc
dec
repz
mov
dec
mov
test
push
xchg
push
daa
sub
cmpsl
mov
aam
sbb
pop
hlt
or
push
rclb
inc
addr16
in
repnz
xchg
sahf
dec
fmull
ret
sub
xchg
mov
imul
lea
xor
xor
lret
lea
ja
xchg
rclb
arpl
lods
pop
enter
mov
inc
push
loope
adc
xchg
lods
mov
sbb
stos
popf
daa
in
icebp
cmp
sub
add
bound
xor
jns
jo
cmpsl
and
into
cwtl
out
mov
push
mov
pmulhw
inc
dec
and
popa
mov
dec
clc
xchg
aas
es
mov
in
rcrb
faddl
int3
mov
lahf
mov
enter
sbb
repz
xor
push
sbb
icebp
lret
lock
xchg
shlb
cmp
jp
pop
scas
int
test
mov
push
repnz
incl
push
js
or
pop
mov
icebp
xchg
cs
pop
leave
daa
xchg
popa
lock
jno
test
mov
mov
jno
add
or
ja
xor
inc
cmp
data16
adc
mov
add
outsl
pop
cmp
mov
in
dec
mov
mov
das
xadd
rorl
xchg
aaa
dec
ljmp
xchg
jp
xor
push
fidivrl
addb
sub
or
into
xor
dec
add
mov
stos
mov
jne
shrb
mov
orb
sub
fiadds
out
push
std
dec
test
stos
ljmp
out
jb
jae
sub
jno
rcll
add
ss
mov
xlat
pop
shll
lret
sahf
inc
fwait
inc
add
sbb
add
cwtl
dec
rcr
mov
xchg
adc
loope
mov
int3
adcb
pop
out
add
cmpb
test
mov
dec
pop
mov
in
mov
add
and
push
jge
lret
jo
int
pop
dec
sub
addl
out
daa
jg
mov
negl
sub
add
lods
fcoml
lea
xor
stos
push
pushf
mov
pop
lahf
add
loopne
insb
aaa
ljmp
ficomps
lcall
push
bound
mov
push
mov
xor
sub
pop
sub
test
push
mov
leave
jmp
xchg
mov
mov
add
into
sbb
and
sbb
cli
cmova
dec
mov
imul
lods
sub
cmp
insb
xor
clc
aas
addr16
mov
pop
imul
imulb
push
dec
cld
or
imul
leave
or
loope
sub
sbb
sub
mov
std
mov
jmp
cltd
inc
mov
gs
orb
xor
stc
jo
loop
std
shlb
or
xchg
dec
sub
mov
pusha
jg
cwtl
xlat
jb
inc
sbb
xlat
movsl
pop
sbb
inc
es
sub
fwait
xchg
sbb
inc
scas
fcmovnbe
sbb
mov
ljmp
ljmp
jne
rorb
inc
mov
inc
ds
or
inc
mov
and
dec
test
je
adcl
test
mov
shlb
mov
das
cmp
xor
inc
mov
adc
les
mov
sbb
lods
leave
pusha
or
inc
ja
mov
jae
mov
pop
jmp
dec
push
into
icebp
jp
fs
inc
scas
sub
out
cmc
ds
arpl
shl
mov
scas
imul
mov
subb
cmc
gs
or
mov
mov
call
scas
test
mov
push
cmp
lds
dec
sub
jmp
aas
mov
int
test
insl
lods
cmpsl
and
repnz
testb
dec
mov
adc
mov
push
and
pop
push
mov
push
add
adc
dec
mov
imul
popf
imul
jae
fcompl
fimull
shll
push
movsb
mov
push
cmp
testl
inc
cmpsl
pop
clc
pop
sub
mov
mov
stos
xchg
outsb
les
jg
arpl
fisubs
mov
cmp
test
dec
or
scas
xlat
sti
addr16
lock
sbb
jb
idivl
dec
js
cmp
sbbb
inc
inc
add
ljmp
mov
jmp
pop
jnp
je
js
adc
pop
xchg
push
and
jne
xor
mov
roll
sub
fimuls
loope
push
jmp
inc
pop
and
pop
aam
or
out
lahf
xchg
ficomps
testb
push
or
arpl
stc
jb
fstpl
aam
out
fsts
sbb
sar
sbb
cmp
xchg
xor
sbb
and
adc
mov
outsb
lods
popf
cmp
je
jle
mov
jne
push
push
lret
cli
mov
stos
nop
xor
aam
add
sbb
ljmp
mov
pop
mov
sub
lock
dec
or
mov
sub
arpl
jle,pn
jne
pop
nop
xor
js
mov
dec
sbb
dec
pop
pop
xchg
push
dec
lds
mov
mov
cmpsl
mov
out
fnstsw
imul
rcrb
add
add
lahf
jno
adc
add
add
fst
fldt
mov
in
cmp
inc
or
jle
mov
insb
add
mov
pusha
divl
lods
mov
fcmovne
jmp
mov
fmul
loope
ret
sti
hlt
inc
jne
xchg
push
pop
lea
les
int3
cli
dec
or
lcall
lods
jmp
xor
jmp
scas
lret
sub
test
sbb
mov
in
lea
cmp
sahf
xchg
mov
fcmove
rcrb
xor
test
out
dec
push
aam
adc
mov
out
push
dec
gs
jae
fidivrl
repz
ss
mov
sbb
mov
fwait
mov
sub
sub
mov
mov
mov
cld
jg
cmp
enter
repnz
dec
mov
jge
adc
xor
rclb
mov
fs
jno
fisubrs
loopne
insl
lahf
movl
and
std
push
lock
or
inc
push
lods
rclb
or
out
or
jp
mov
push
or
ficompl
and
aad
sub
mov
push
and
es
dec
repnz
ja
aad
popf
das
sbb
lret
test
adc
xor
adc
inc
and
aam
lods
sub
jmp
adc
xchg
gs
stos
in
jecxz
sbb
add
dec
outsl
xor
mov
push
in
out
sub
inc
lds
pop
jmp
mov
imul
jle
repnz
or
sbb
pop
or
ret
mov
imul
sub
hlt
movsl
sub
leave
pop
aaa
push
sub
imul
sub
xchg
fsubp
lret
insb
jo
push
and
sbb
mov
add
repnz
popa
push
mov
sub
fwait
cli
jmp
test
mov
imul
mov
rcrl
sub
xor
ret
sbb
mov
xchg
pop
adc
pop
rol
dec
add
in
aam
cmpsl
pop
mov
pop
mov
xchg
repz
mov
adc
movsl
jecxz
ja
push
pop
and
push
mov
dec
les
arpl
insl
data16
std
aad
mov
fsubl
xchg
arpl
fs
xchg
mov
stc
fisttpll
push
repnz
sub
pop
test
pop
mov
fistl
jp
push
add
gs
aam
inc
mov
xchg
popf
pusha
adc
int3
popf
sti
faddl
push
daa
xchg
sub
or
int
mov
push
repz
repnz
mov
cmpsb
call
inc
adc
stc
out
mov
iret
outsb
and
push
cmp
mov
mov
dec
sub
popa
xchg
dec
arpl
xchg
xchg
cmp
in
into
mov
sub
js
lea
fisubs
in
adc
mov
and
scas
imul
insl
xchg
sub
ds
sub
sbb
ret
enterw
mov
je
push
adc
mov
mov
ds
scas
movsb
pop
cmp
and
and
ret
ja
imul
ss
scas
es
shlb
fsubs
xor
call
popa
hlt
push
sub
pusha
pop
lret
jne
je
xor
jl
out
push
mov
insl
adc
inc
sbb
dec
pop
jle
push
outsb
lods
pop
repz
rcrl
lods
test
mov
push
repnz
jno
pop
jae
push
cwtl
mov
jno
repnz
sbb
fwait
scas
mov
hlt
inc
scas
or
iret
sbb
xchg
mov
cmc
inc
enter
movsb
pusha
pop
outsb
push
cmp
mov
scas
loop
pop
mov
iret
out
xchg
movsb
cmp
xchg
mov
push
adc
xchg
lock
dec
mov
sub
js
push
sub
cmp
sbb
test
ss
test
mov
xor
adc
fwait
xlat
fisttpll
mov
adc
repz
xchg
or
xchg
call
mov
outsb
cltd
outsl
add
out
insb
ret
add
push
aas
bound
out
aas
mov
dec
mov
lock
pop
dec
cwtl
jmp
lcall
jle
dec
rcrb
arpl
inc
mov
pop
popa
jns
add
fldl
nop
aam
loope
pop
xchg
xor
in
push
outsb
test
imul
sbb
imul
pop
cmpsb
pushf
sub
cmp
or
xchg
pushf
outsb
xor
dec
in
sub
adc
sbb
or
add
scas
fs
movsl
shlb
push
sahf
lock
sbb
scas
mov
scas
lret
pop
adc
push
in
mov
push
inc
sub
push
mov
pusha
mov
fst
shlb
movsl
notb
scas
xor
push
xchg
jmp
out
bound
cmp
out
fisubl
imul
popa
mov
push
add
fisubrl
cld
add
inc
stos
movsb
lock
movsl
bsf
or
cwtl
push
cmp
add
jmp
mov
pop
adc
pop
pop
rcll
xchg
aam
aaa
fisubrl
pop
lock
int3
gs
jmp
dec
stos
add
test
add
mov
sbb
outsb
adc
cmp
outsb
add
or
mov
popf
adc
ljmp
pop
loopne
ljmp
insb
out
leave
cmp
cmpsb
mov
inc
stos
addr16
push
pop
push
mov
jp
vcvtps2ph
loop
cmpsb
jp
cld
jecxz
cmpsl
sub
movsb
rcr
cwtl
aam
pop
mov
and
mov
xor
mov
in
cmpsl
sub
orb
and
or
xchg
lea
inc
inc
push
mov
and
mov
sub
sbbl
mov
and
bound
addr16
mov
or
je
sub
scas
dec
or
fdivr
push
mov
clc
jge
dec
pusha
add
push
test
cmpsl
scas
xor
and
dec
xor
push
loop
jae
addb
xor
xchg
or
adc
and
nop
subb
cmp
rclb
rolb
xchg
mov
sub
mov
or
inc
outsb
xor
je
cmpsl
mov
mov
int3
arpl
cmp
cltd
mov
in
or
mov
sahf
or
and
mov
bound
push
sti
mov
sahf
adc
mov
test
out
push
xchg
and
mov
sbb
push
fbstp
insl
movsl
sub
int
int
lahf
sbb
jmp
scas
lahf
mov
cltd
inc
out
or
jbe
or
lret
shlb
sub
push
das
and
iret
notl
in
push
out
dec
sbb
jge
mov
dec
bound
gs
pop
je
adc
call
fimull
mov
jp
xchg
in
mov
pop
mov
push
dec
and
mov
pop
sub
in
or
dec
jle
mov
int
or
and
sub
inc
hlt
push
mov
push
loopne
fildll
adc
mov
lahf
inc
fmulp
mov
sahf
iret
dec
xchg
xlat
shrb
pop
add
add
jne
inc
dec
lods
push
dec
mov
test
pusha
push
sbb
xchg
in
out
stos
add
inc
push
lock
ret
test
out
jg
imul
ret
xlat
adc
mov
pop
push
lea
jns
adc
and
cmp
xor
add
mov
je
jmp
mov
dec
dec
add
adc
shlb
out
jne
xor
or
movsb
push
aad
fidivrs
push
jo
mov
xorb
cmp
repnz
leave
or
inc
push
jmp
cmp
or
and
mov
push
lea
inc
adc
mov
mov
sbb
mov
movsb
jns
scas
rcll
and
mov
pop
cld
dec
or
xchg
and
pop
pop
mov
dec
jle
push
dec
xchg
imul
xchg
movsl
imul
dec
jp
cmc
xchg
out
movsl
lock
sub
ja,pt
gs
jmp
pop
push
pop
ss
xchg
sbbl
nop
in
sub
mov
xchg
test
or
cltd
mov
out
das
test
push
fmuls
dec
jmp
ror
stc
and
sbb
cmp
mov
cmp
cmc
sarb
or
ds
rolb
pop
jne
data16
or
jb
push
mov
or
lcall
fistpl
lahf
sub
mov
outsl
mov
cld
test
lods
in
imul
mov
enter
xor
mov
mov
adc
xor
pusha
sub
daa
pop
test
mov
rolb
insb
mov
in
jns
pop
mov
xlat
out
xchg
cs
inc
outsb
fbstp
jb
jp
jno
sub
orl
xchg
iret
xchg
cmp
jl
loopne
pusha
lods
fisttpl
call
push
mov
dec
push
pushf
cmp
je
out
cld
add
movsb
imul
ret
lahf
stos
leave
int3
aaa
adc
sti
xchg
mov
mov
mov
cmc
mov
sub
mov
int
fists
pop
mov
mov
dec
jo
inc
push
stos
jmp
push
cld
out
pop
daa
popf
addr16
cmp
or
or
shr
cmp
xchg
adc
mov
push
cmp
lcall
or
and
cltd
sub
test
pop
and
push
dec
testb
adc
das
sti
mov
xchg
pop
xchg
pop
mov
in
cmp
lods
sbb
adc
cmc
outsb
popa
jns
cld
cli
into
push
cwtl
sbb
jae
shrb
xchg
test
test
and
xor
pop
fdivrs
jecxz
jmp
xor
sub
fdivrs
scas
mov
lahf
jne
mov
xor
outsb
fcoms
adc
std
cmc
cmpsl
decl
popa
jns
pop
jns
mov
pop
int3
jb
or
push
adcb
ja
fwait
mov
xchg
stos
out
filds
ds
divb
adc
xchg
mov
dec
sbb
mov
pop
lods
cmovle
and
jmp
lds
push
cmp
or
pop
push
icebp
xor
nop
in
mov
inc
or
outsb
imull
jno
popa
mov
jg
out
mulb
lret
mov
inc
cwtl
movsl
stos
insl
inc
xchg
stc
jns
cmp
mov
out
pop
cmc
test
xchg
mov
dec
and
inc
aam
mov
movsl
mov
or
cmp
mov
cmp
rcrl
sbb
add
or
popa
jb
cmp
lret
sbb
adc
mov
xlat
ds
or
mov
shrb
inc
cmp
negb
cmp
adc
sub
andb
mov
xchg
sbb
dec
pop
flds
cmp
je
dec
in
sbb
mov
shrl
in
mov
mov
adc
xor
push
jne
test
ljmp
pop
inc
cmpsl
jne
dec
pop
fs
int3
stos
shl
lahf
sub
add
out
out
mov
cmpsb
pushf
or
adc
jmp
popa
leave
fwait
or
stos
xchg
cmp
pmullw
imul
pop
pop
pop
out
lahf
mov
cs
ds
lret
pop
sbb
inc
mov
mov
loopne
inc
outsb
mov
cmp
cmc
mov
pop
fsubp
movsl
shlb
ret
mov
or
jb
pop
pop
sbb
pop
sub
loope
xchg
je
push
xchg
xor
imul
fcoms
imulb
fwait
stos
or
jb
inc
divb
add
pop
js
out
popf
lret
or
mull
and
sbb
cs
adc
jl
sub
test
jmp
in
sub
imul
psllq
test
or
add
mov
sbb
and
adc
pop
fwait
shl
mov
aad
adc
xor
addr16
adc
test
dec
mov
or
sub
loopne
mov
or
sti
cltd
push
mov
sbb
int3
jmp
sbb
sub
incb
popa
xchg
inc
in
sbb
pop
pop
aas
and
imul
sub
fnstcw
dec
mov
inc
test
in
or
xor
xchg
test
pop
or
push
inc
stos
sub
mov
cmc
and
int3
fistpl
pop
lods
jae
stos
imul
repnz
inc
loop
leave
jecxz
push
and
fdivr
int
fcmovbe
aas
leave
cmc
sbb
mov
aaa
mov
jle
xlat
adc
dec
xchg
in
and
mov
xor
mov
loopne
xchg
adcl
mov
or
pusha
pusha
call
adc
xchg
fisubrl
aas
mov
xchg
jo
les
in
sub
lods
mov
sbb
in
cltd
or
cltd
fsub
shrl
cmp
cs
je
mov
test
fildll
lods
dec
sar
or
loop
add
push
push
xchg
dec
arpl
xchg
cmpsb
addr16
jp
and
and
sub
pushf
jge
aaa
mov
ds
xchg
jg
dec
fisttpll
mov
xor
add
xchg
fs
or
cmpsb
icebp
dec
push
adc
dec
cmp
mov
xor
sub
test
cmp
cmc
rolb
ljmp
dec
ljmp
mov
fucom
pop
orb
daa
and
mulb
adc
outsb
and
nop
lcall
ss
call
or
ljmp
loop
jle
icebp
pop
xchg
or
cmpsl
insb
loopne
popa
xor
and
cld
inc
lea
ret
jne
mov
or
shl
std
sub
fwait
stc
std
into
cs
pop
and
push
mov
mov
dec
xchg
mov
cltd
pop
and
les
pop
mov
sbb
and
or
ficompl
iret
cwtl
dec
cmp
into
ja
jp
stos
es
aam
movsb
lret
arpl
mov
daa
in
jge
shr
add
dec
cmc
jecxz,pt
outsl
and
xchg
rorl
jne,pt
or
icebp
mov
hlt
mov
sbb
mov
frstor
mov
mov
mov
jp
repz
xlat
dec
adc
pop
fsts
push
addl
jp
fisubl
aaa
cmp
pop
xor
ret
and
jecxz
xchg
cmc
lahf
testl
add
fisubrs
data16
inc
dec
adc
cs
dec
mov
imul
jo
xor
scas
repnz
ficomps
lea
xchg
fs
loope
mov
adc
cmp
lods
fs
mov
adc
stos
ficompl
jae
jne
xchg
add
outsb
mov
push
xchg
jecxz
adcl
data16
mov
ds
sbbl
nop
pop
xor
pop
sbb
mov
sub
aad
lds
xor
jno
push
fdiv
mull
pop
loope
xor
fwait
jne
adc
stos
lahf
mov
ja
mov
lock
pop
std
sub
call
jle
inc
mov
cmp
int
data16
xchg
aam
sub
out
mov
cmp
mov
frstor
xlat
xor
cmp
repz
mov
ret
fucomi
adc
jmp
xlat
sbb
adc
mov
movsl
jno
mov
aam
movsl
cld
je
lock
jnp
push
dec
sbb
pop
jmp
xor
mov
popl
cmc
stos
fs
jmp
fs
add
inc
pop
sbb
scas
fnstenv
rol
jno
inc
lret
pop
add
and
stos
or
bound
cmp
xchg
bound
pop
add
jbe
mov
sub
sbb
sub
adc
pop
shll
inc
int3
rorb
cmp
adc
xor
add
nop
insb
jo
push
pop
pop
decl
cmp
pop
fstps
dec
mov
ret
loope
ja
cld
fisubl
popa
push
adc
xor
lods
push
hlt
fbld
imul
dec
mov
jnp
inc
inc
push
mov
inc
sbb
inc
and
mov
inc
cmp
and
inc
cmp
in
adcb
adc
cmpl
jg
sub
cmpsb
inc
mov
push
lock
das
int3
mov
mov
jb
inc
lock
lock
cmp
ds
adc
jle
pop
lret
add
sbb
std
shrb
sub
jns
or
jge
test
mov
mov
cmp
xor
and
add
adc
push
repz
repnz
push
fisttpll
xchg
clc
mov
mov
inc
mov
inc
jmp
mov
pusha
aad
jne
xor
sub
cmpsb
es
loope
pushf
out
sub
fs
popa
mov
data16
icebp
cmp
sbbl
fwait
mov
daa
mov
stos
lahf
cld
pushf
adc
cmp
pop
cli
popa
mov
es
sbb
inc
in
or
ja
imul
lcall
xchg
pop
ds
ret
cmp
mov
sarb
mov
cmpsb
imul
ljmp
add
xorb
jp
lods
mov
nop
dec
mov
nop
and
cli
or
jb
inc
fsubr
idivb
cmp
rcl
imul
cld
js
stc
js
mov
arpl
test
push
ret
sbb
sbb
loopne
in
dec
cmpsl
adc
int3
xchg
pop
or
push
push
daa
data16
insl
xor
xchg
sub
int3
mov
clc
sbb
push
mov
cltd
imul
cmpsb
or
mov
inc
pop
daa
cmpl
aam
iret
cld
and
sbb
cmpsb
es
enter
nop
push
rcr
outsb
ljmp
add
fidivrl
lods
mov
int3
and
add
mov
adc
scas
fbld
and
mov
lods
jg
cltd
mov
or
xchg
and
ret
sbb
je
adc
clc
loope
xor
mov
aad
cmp
push
xchg
pop
sbb
lahf
ds
lahf
repnz
sbb
push
popl
and
mov
cmc
sahf
xchg
xchg
movsl
xor
loopne
jle
fildll
mov
shll
and
xor
rcrb
mov
and
fcompl
cmp
adc
xor
push
nop
cmp
jb
jmp
xlat
popf
inc
sub
or
xor
add
pop
mov
pop
test
pop
pop
aaa
and
push
int3
pushf
pop
je
push
mov
int
dec
les
clc
imul
imul
and
rclb
les
jbe
outsl
adc
adc
or
loop
inc
sti
xor
outsb
das
inc
mov
int3
mov
mov
sub
out
lahf
push
jle
popa
mov
ds
stos
out
lahf
xor
loopne
sub
cmpsb
mov
pop
test
fs
in
cli
aaa
bnd
push
shrb
mov
mov
adc
loop
mov
jo
cmpsb
dec
sub
xlat
xchg
xchg
push
jecxz
inc
in
dec
jbe
xchg
movb
insb
roll
aam
cmp
mov
dec
out
sahf
aad
cmc
repz
iret
and
add
xchg
repnz
mov
sti
xor
jmp
test
and
lahf
loop
in
shlb
add
pop
fildl
aad
mov
pop
add
lcall
cwtl
loopne
in
scas
and
daa
or
adc
mov
pop
stos
pop
mov
jno
adc
jbe
and
sbb
inc
or
aas
cvtps2pi
inc
faddl
cltd
dec
icebp
inc
lds
ds
pop
mov
test
adc
aad
stc
dec
add
repz
jne
dec
mov
lock
sub
sub
xchg
sub
aaa
push
add
xchg
popf
sub
mov
xor
movsl
dec
push
or
aam
jp
scas
lret
and
fwait
and
out
ret
pop
out
ds
mov
in
lds
jno
push
fs
repnz
mov
fstp
mov
enter
inc
add
jg
ucomiss
push
dec
push
jae
pop
xor
dec
cmp
clc
cmp
push
js
xor
mov
sbbl
push
push
je
push
jle
xchg
imul
sub
outsl
mov
ljmp
xor
xchg
jnp
movsl
dec
das
fisttpll
jnp
jmp
mov
arpl
push
cmp
out
xor
mov
enter
imul
sbb
mov
pop
pop
sbb
ja
das
dec
xchg
pop
stc
cs
or
out
in
test
jns
outsb
cmc
divb
jl
mov
inc
lock
or
and
jnp
pop
sahf
jp
dec
rolb
rolb
xor
sti
arpl
xchg
out
xchg
mov
adc
jl
jnp
lods
dec
adc
sub
loopne
cmpsb
sahf
in
scas
pushf
jmp
pusha
push
xchg
iret
adc
xchg
scas
rolb
std
negl
add
loope
and
aas
loopne
lahf
mov
subb
or
mov
dec
inc
jecxz
cmp
shlb
push
jne
mov
xchg
ja
xor
nop
and
adcl
pop
cmp
icebp
nop
fsts
int3
jbe
mov
sti
in
jne
daa
cmpsb
cmc
push
mov
repnz
int3
and
cli
add
inc
mov
ss
push
xor
xchg
and
lock
pop
cmp
loope
xchg
push
loop
in
mov
loopne
div
imul
movb
out
testb
xchg
fcomps
jg
pop
scas
rcrb
sub
add
lret
bound
jns
in
pop
dec
and
lods
push
fcmovnbe
mov
adc
cmp
xor
cmp
cmpsb
mov
test
xor
repz
lret
push
ds
dec
xor
fnstsw
in
in
stc
xor
dec
push
cmp
lret
test
push
mov
adc
arpl
push
cli
xchg
and
lds
pop
mov
mov
hlt
scas
andl
mov
pop
cld
cmp
xchg
loopne
repnz
pop
test
int
add
arpl
cwtl
dec
and
jnp
je
lret
xchg
xor
and
dec
outsb
scas
testl
cmp
cwtl
cmp
loop
dec
mov
cmpsb
sub
push
clc
rcrb
dec
mov
cmc
loop
xlat
xchg
mov
out
jns
sarl
push
cmp
fwait
cmpsb
push
mov
push
jg
pop
mov
mov
roll
sbb
add
popa
cmp
jns
mov
mov
lock
ret
push
int
xchg
add
lcall
lods
mov
in
xor
cli
lret
push
cmp
subb
jo
adc
adc
lods
xor
aas
outsb
test
inc
mov
movsb
movsl
pop
stc
xchg
pop
push
andb
aad
pushf
loopne
sub
cmp
fildll
outsl
adc
orl
ret
hlt
lds
mov
pushf
cmpb
sahf
shlb
xchg
bswap
xchg
xchg
popf
mov
jecxz
xchg
mov
push
xchg
xchg
dec
dec
pop
ss
push
jne
ret
mov
xor
and
in
inc
adc
jb
xchg
jecxz
inc
repz
clc
les
push
stos
mov
in
addr16
mov
ror
mov
inc
wbinvd
lret
gs
in
add
cwtl
sub
popa
add
mov
add
mov
cwtl
mov
fisubl
shrb
push
loope
xor
push
jns
sub
mov
fisubrl
ss
jg
xchg
inc
shll
pop
icebp
push
push
es
sbb
xchg
sti
mov
inc
shr
repnz
mov
cmp
ret
jae
cmp
fsub
sub
sub
pusha
sub
push
mov
cltd
cmp
xor
sbb
or
cmc
inc
add
xor
jno
hlt
js
adc
cmp
out
jne
jo
xor
cld
in
into
pminub
adc
inc
add
orb
lcall
mov
add
test
cmp
and
mov
push
lret
cli
jns
pop
mov
jmp
pop
stos
mov
fcomp
cmpb
xchg
sub
cltd
iret
mov
shll
xchg
pop
add
xchg
adc
mulb
shlb
inc
je
xchg
popf
pop
cmp
mov
pop
into
sahf
stc
popa
or
daa
mov
pusha
xchg
mov
mov
dec
lahf
jo
notl
mov
cmpsl
pushf
lret
add
sbb
push
pop
mov
dec
jp
or
test
add
push
mov
ja
and
std
xorl
mov
sub
mov
es
ds
jnp
inc
xchg
cmp
enter
sbb
daa
xor
mov
cmp
dec
in
fnstenv
mov
dec
mov
jbe
fcomps
test
sbb
cli
mov
std
stos
in
stos
outsl
jp
popf
mov
adc
test
or
mov
mov
imul
xor
inc
stc
adcl
xlat
sub
sub
js
dec
add
ret
or
add
aam
repz
loope
dec
push
adc
sub
inc
gs
sbb
incl
xor
or
dec
fidivl
out
test
jo
push
pop
fnsave
in
cmc
fadds
shlb
loop
push
fwait
std
rol
sbb
xor
push
push
leave
and
nop
in
jae
push
rcrl
push
out
int
mov
jns
repz
out
fs
subb
mov
inc
pop
jmp
mov
add
mov
movsl
dec
test
scas
fsubl
cmp
int3
xchg
rorb
xchg
out
fists
push
inc
lret
mov
sbb
movaps
lcall
mov
push
mov
jae
add
fisubrs
pop
in
ss
or
push
pop
mov
inc
jle
stos
adc
and
pop
mov
cld
dec
pop
dec
or
jne
fucom
pop
inc
jns
ds
xchg
out
mov
cmpsb
rorl
xor
inc
jp
stos
adc
pushf
test
push
inc
xor
in
cltd
lahf
je
pop
mov
pop
xor
popa
add
xor
sti
jmp
stos
push
mov
outsl
xchg
push
xor
jo,pt
mov
nop
mov
fsubrs
lock
pop
fstpl
mov
leave
push
xorl
icebp
insb
lahf
daa
cmp
xchg
jb
cmp
lret
lret
dec
test
iret
sbb
shld
mov
mov
add
xchg
pop
xor
and
ds
fnsave
cmc
cs
inc
ljmp
movsl
mov
mov
push
xor
mov
mov
mov
mov
fwait
jmp
insb
lods
push
dec
ja
and
jg
fistpll
hlt
mov
lret
fsubrs
pop
data16
orl
mov
pop
mov
iret
push
leave
roll
popa
cmp
mov
xchg
fs
aad
jecxz
adc
popf
outsb
mov
imul
fldenv
mov
stc
mov
notb
stc
adc
rcll
daa
adc
outsb
push
scas
repz
repz
push
push
decl
pop
fwait
sti
mov
insb
pushf
mov
mov
pop
lods
push
inc
dec
mov
movsl
imul
lds
or
xchg
xchg
xchg
aad
stos
sbb
aam
aas
jae
push
sbb
sub
adc
cmp
rolb
in
sub
test
push
rcll
dec
cld
adc
shll
mov
mov
dec
jno
mov
mov
fisubrl
pop
insb
out
xlat
pop
cmp
and
inc
add
mov
sti
data16
mov
lahf
daa
lret
inc
push
pop
shl
lds
add
cwtl
ss
ret
les
subb
popf
pushf
loop
std
jne
insb
enter
push
inc
xor
add
inc
aaa
fcmovu
mov
movsb
lret
or
test
sahf
mov
add
rcl
pop
pusha
jnp
jae
je
xchg
ss
dec
movsb
add
in
cld
inc
lock
mov
mov
repz
xchg
jns
mov
or
mov
sbb
jne
cmpsb
mov
lcall
jns
scas
jcxz
pusha
loope
in
daa
or
push
sbb
pop
ss
test
rcll
jp
inc
fildl
jmp
jg
sbb
mov
add
adc
cmp
jle
jp
mov
aad
cmp
jne
js
xor
pop
jmp
movsl
movb
int3
sahf
cmc
mov
sbb
shl
dec
xchg
divl
xor
mov
std
out
dec
mov
fimull
incb
es
inc
sti
and
add
mov
sub
lret
es
pextrw
cmpsl
clc
sub
pusha
mov
jecxz
mov
xchg
out
jg
mov
or
test
push
or
imul
insb
xor
mov
movaps
aam
in
sti
aad
push
aas
mov
mov
es
cmpsl
push
clc
pusha
lret
pop
lods
or
mov
jg
mov
int3
xchg
sbb
mov
enter
inc
aam
dec
nop
mov
mov
popf
int
repnz
xchg
cs
mov
mov
in
jle
xor
jp
sbb
push
mov
sbb
cltd
dec
push
pop
and
or
je
lock
arpl
test
ficoml
pop
gs
aas
or
or
pusha
sbb
push
dec
jns
xchg
std
rcrb
pop
adcl
imul
out
cltd
mov
dec
pop
push
lret
pop
inc
repz
add
arpl
lcall
pop
push
daa
lea
jnp
pop
insb
push
cwtl
or
cmc
test
cld
sub
stos
je
inc
rcll
dec
gs
sub
hlt
jmp
shll
jnp
sti
pop
leave
gs
std
xchg
rorb
inc
pop
imul
pop
xor
push
xchg
sbb
push
cmp
sahf
nop
and
mov
dec
mov
jmp
adc
scas
jp
je
dec
sub
mov
clc
sub
add
or
cmp
cmpsb
lahf
movsb
loop
lock
pop
push
mov
shrl
daa
pop
scas
add
shlb
scas
fimull
movl
hlt
lahf
xchg
mov
sbb
ret
ficoms
movb
mov
outsb
mov
out
insb
sahf
arpl
add
daa
jmp
jne
mov
pop
push
jnp
dec
mov
sbb
jl
jb
add
cmp
cli
or
movsl
adc
mov
xchg
jmp
mov
push
mov
xchg
lea
jo
inc
sbbb
cs
xor
sarl
jle
movsb
add
add
flds
shl
movsl
xchg
outsl
cmpsl
pop
pop
jg
cmp
and
mov
out
sbb
and
push
add
insl
push
xchg
ret
sbb
clc
out
adc
pop
mov
xchg
xchg
push
into
gs
xlat
psrad
rclb
push
mov
ds
lret
fiaddl
xor
test
inc
test
arpl
rcl
pop
mov
xor
das
cmp
mov
push
ret
adc
loope
movsb
loope
test
lods
adc
fsts
jbe
or
adc
adc
cmp
push
mov
xchg
sti
cmpsl
idivb
rcll
push
sbb
mul
and
push
ret
push
dec
xchg
mov
or
adc
shrl
sub
inc
or
xchg
cmp
sahf
pop
push
shlb
aad
jl
xor
pop
xlat
outsl
lret
stos
pushf
call
xor
ljmp
or
inc
mov
xchg
sti
gs
mov
int
lds
mov
fimull
out
adc
loop
repz
sahf
out
insb
fistpll
aam
push
rclb
push
lret
lahf
pavgb
cwtl
mov
fmulp
pusha
cld
pusha
adc
push
jnp
into
push
fstl
shr
lock
adc
adc
repnz
adc
inc
cmpsb
icebp
es
cmp
jno
mov
addr16
sbb
cmp
lret
jno
pop
in
adc
test
addl
movsl
stos
xchg
in
xlat
sub
xor
dec
xor
stos
les
adc
sbb
sbb
jae
jecxz
adc
sbb
inc
movsl
mov
add
mov
fcmovu
or
arpl
js
bound
fbld
jo
add
aaa
int3
pop
inc
pop
pop
adc
nop
enter
pop
push
mov
and
cli
jmp
mov
push
push
pop
push
cmp
stos
add
pop
add
lcall
outsb
repz
fsts
mov
fmuls
push
je
mov
add
shlb
add
jg
mov
pop
xchg
add
jb
mov
outsb
sbb
mov
push
or
jnp
lret
lock
iret
adc
jb
push
test
push
sbb
cltd
in
clc
adc
mov
push
mov
inc
sahf
mov
jne
add
movsb
jl
dec
pop
jnp
xor
push
mov
js
sbb
mov
in
mov
xor
xor
test
stos
ja
popl
lret
xor
fiadds
std
xorl
arpl
insl
push
mov
shlb
lods
cmp
in
gs
insl
sbb
xor
push
dec
inc
insb
add
dec
inc
sbb
aam
aas
mov
mov
lods
subl
sbb
or
out
jle
fisttpll
dec
das
adc
adc
out
sbb
xor
lahf
ret
scas
lahf
push
pop
mov
fxrstor
cmp
test
bound
mov
and
lock
dec
and
sub
jb
sti
and
call
inc
cmp
pop
dec
add
push
lds
imul
lods
sti
and
out
jns
adc
sub
lods
hlt
cmp
popf
adc
and
ja
out
or
in
js
cmp
pop
aad
inc
loop
xchg
adc
xchg
cmp
sub
int
adc
cmp
dec
cmc
rorb
and
fcompl
pop
scas
xlat
and
outsb
lret
aam
subb
test
divl
sbb
sbb
inc
push
mov
xchg
mov
ss
cmpsl
dec
push
push
xchg
and
xchg
mov
cmpsb
imul
icebp
fsubrp
push
mov
in
xchg
test
mov
inc
icebp
lret
push
cli
and
xor
outsl
les
pop
sbb
in
pop
xor
push
call
lock
and
pop
xchg
jnp
loop
and
fmul
sahf
xchg
jb
aam
cmp
aaa
push
fstpl
push
clc
out
cmp
add
adc
insl
cmpsl
mov
push
je
stos
cs
jb
mov
push
jmp
subl
mov
pusha
stc
pop
popa
mov
mov
mov
jae
ficompl
repz
or
aam
popf
rorb
lret
inc
xchg
adcl
mov
mov
adc
repnz
cmp
ds
inc
xor
push
cltd
push
leave
pop
push
mov
fldcw
aam
add
rcrb
xchg
jno
xchg
cmp
xchg
lahf
jnp
imul
icebp
in
insb
test
cmp
dec
std
cmpl
adc
dec
xor
movsb
push
sbb
in
shl
jb
sub
mov
push
add
in
hlt
and
fimull
lods
cmp
in
push
pop
js
fdivp
mov
adc
sbb
shl
xchg
ficoml
inc
inc
fadd
cld
int3
inc
xor
int
cmp
out
iret
dec
pop
and
es
adc
cs
in
and
ret
dec
cmp
les
cmp
movsb
cmp
or
push
push
mov
pop
cmp
jbe
jecxz
scas
out
out
pop
movsl
das
ss
mov
fdivr
jmp
mov
xlat
rcrl
cwtl
xor
dec
adc
ja
mov
rcr
mov
movsb
scas
xchg
icebp
movsl
pushf
fimuls
stos
mov
sbb
xchg
addl
mov
js
ficoml
test
out
or
mov
lods
bswap
ret
lds
pop
aaa
test
and
loop
loope
sbbl
jo
jmp
out
ficoml
cmp
xor
dec
out
sti
das
pop
dec
sub
sahf
out
fildl
sahf
xor
imul
mov
pop
fidivs
mov
test
pop
roll
sbb
dec
or
xor
hlt
lret
les
in
cmp
and
xchg
dec
mov
adc
inc
popa
out
call
movl
and
xchg
dec
or
lcall
sub
push
push
add
dec
mov
rcrl
sbb
sbb
lds
jp
mov
mov
mov
mov
loopne
mov
push
jbe
subps
inc
xchg
mov
mov
popf
inc
pop
les
mov
sub
test
outsb
outsl
ljmp
sub
out
cs
mov
int3
inc
cmp
pop
sbb
notl
fistpl
orl
mov
mov
jl
dec
test
aas
jle
icebp
jnp
into
lret
cs
mov
icebp
in
xor
into
stc
mov
jae
mov
pop
mov
push
rcll
ss
sub
lock
addl
enter
ret
or
push
push
sbb
shrb
imul
sahf
icebp
add
mov
mov
fmull
pop
push
test
scas
lds
loop
xchg
popf
fld
pop
in
pop
sti
test
insl
in
add
push
nop
dec
xor
jl
insb
scas
cmp
inc
mov
pop
push
or
pop
mov
loopne
lahf
fcomi
fcomps
or
jge
and
shrl
xor
das
xchg
and
lahf
push
jne
cmpsl
adc
lods
fnstenv
js
or
sbb
dec
xor
aad
daa
or
dec
add
jo
popa
pop
gs
aas
pop
std
outsb
movsb
repz
push
popf
pop
mov
add
push
add
dec
sub
add
mov
je
and
enter
push
jne
push
nop
push
xchg
adc
popl
dec
cmp
cmc
lea
pop
xor
mov
test
sub
repz
jbe
push
and
scas
lock
js
push
push
andl
daa
fdivrl
daa
adc
pop
dec
sahf
mov
mov
dec
adc
xchg
fisttpl
cltd
fadd
xchg
outsb
add
jmp
les
fildll
add
xchg
mov
or
addr16
lds
pop
fcmovnbe
xchg
fidivrl
push
push
gs
push
pop
pop
cltd
mov
fidivs
outsb
shl
mov
gs
popa
stos
and
xchg
cs
andl
adc
jg
dec
mov
aam
in
push
ss
sub
jecxz
ljmp
cld
fwait
mov
adc
jbe
and
addps
sub
pop
mov
or
test
loopne
rcrl
mov
cmp
jmp
stos
pop
lahf
mov
cltd
cmpsb
jg
pusha
push
js
push
lret
test
jo
and
pop
and
pop
jb
lcall
push
and
sub
jmp
mov
fwait
ljmp
shrl
push
std
adc
xchg
add
adc
cmpsl
adc
mov
xor
xlat
mov
mov
xor
loopne
lds
cmp
mov
sub
jae
into
adc
rclb
push
push
jecxz
push
lea
push
fildl
xor
cmpsl
push
and
push
enter
out
push
push
sbb
inc
rcrl
clc
and
pop
cmp
mov
ror
push
dec
cmc
push
cmp
inc
jo
movb
test
adc
adc
es
aad
cwtl
subl
pop
in
gs
out
negl
sub
popa
je
add
cmpsb
sahf
movsb
loopne
testl
add
pop
dec
lods
sbb
mov
fwait
ds
lcall
cmp
xchg
pcmpeqd
pop
ja
sub
or
ljmp
xor
loop
fs
imul
xchg
insl
mov
faddl
sbb
loop
add
jg
mov
push
sub
cli
pop
push
xor
or
sub
cmc
rolb
dec
shll
dec
xchg
data16
sub
push
out
lods
push
lods
jo
sbb
push
sbb
mov
mov
mov
hlt
iret
test
xchg
int3
popf
xchg
mov
and
sub
jbe
and
or
xlat
stos
mov
push
xorl
adc
nop
subl
scas
es
je
xchg
shl
mov
xchg
sub
les
pop
sub
loopne
fwait
rclb
xor
push
mov
rolb
pop
pusha
ret
jecxz
pop
test
stc
push
divb
stos
sub
std
pop
clc
xorb
and
xchg
lds
xor
pop
xor
xor
ljmp
test
fidivrs
push
cmc
clc
fs
shl
mov
xlat
pop
and
dec
sti
insb
jg
xacquire
jmp
push
sub
xor
xchg
cmp
loopne
leave
mov
gs
and
aaa
and
sahf
xchg
pop
shrl
or
shlb
mov
pop
lahf
lahf
inc
pop
sub
push
imul
call
arpl
jo
ljmp
push
cmp
jecxz
and
xor
push
popa
mulb
scas
push
xlat
pop
mov
loopne
out
xchg
cld
test
or
jp
fdivr
insb
xchg
jno
adc
dec
mov
ljmp
pop
int3
and
push
pop
idivb
imul
fldcw
xor
dec
jnp
pop
test
fcompl
dec
mov
sub
mov
mov
inc
inc
or
mov
insl
ja
insl
inc
mov
scas
not
ljmp
push
ljmp
xchg
and
int3
jnp
mov
lods
test
addb
pop
jl
clc
xlat
bound
ficoms
dec
dec
cwtl
jb
sbb
sub
fwait
xchg
lea
push
pop
xlat
out
fnsave
mov
add
adc
cltd
scas
jp
dec
push
test
rep
test
nop
add
mov
mov
adc
adc
ljmp
jg
mov
int
adc
fistl
test
sub
pop
pop
xchg
xchg
adc
push
sbb
push
je
and
adc
fs
jp
sti
add
rorl
push
or
mov
push
inc
add
cli
push
xor
push
fbstp
in
rcr
roll
add
dec
lret
sahf
push
lods
andl
popf
subb
fldt
ret
fidivrl
andl
hlt
imul
dec
fadds
cld
mov
lods
and
dec
lcall
stc
sbbl
add
dec
jl
je
push
rol
pop
shlb
push
in
mov
lock
lahf
in
rcrl
lods
cmp
lea
jge
mov
repnz
mov
fcomp
xor
sbb
push
testb
in
jae
jge
xchg
test
movsl
call
out
cmpsb
push
lods
int3
or
or
dec
cmpsb
in
mov
icebp
mov
lahf
xchg
mov
push
dec
mov
jno
shll
stos
jge
les
sbb
xor
sub
cmp
test
in
and
sbb
or
movsb
gs
rcr
pop
jbe
jne
jo
mov
xchg
jp
add
dec
ljmp
xchg
sub
mov
inc
loopne
popa
js
test
cmp
sbb
dec
pop
push
lret
dec
mov
mov
xor
xlat
ds
lahf
dec
mov
xchg
pop
pop
jns
xchg
fistpl
ret
push
push
unpcklps
sbb
mov
sbb
jb
and
scas
pop
push
or
sbb
pop
push
lods
push
xor
pushf
imul
enter
pop
stos
pop
add
adc
movsb
adc
mov
jle
clc
push
sbb
aas
jecxz
jno
xchg
push
aas
or
dec
les
lods
pushf
dec
add
jno
movsl
scas
data16
aad
mov
mov
sbb
adc
cmpsl
jle
mov
test
stc
mov
sub
out
out
lock
mov
mov
addr16
int3
dec
repnz
rclb
xchg
and
jb
pause
cmpsl
je
std
cmp
cmp
pushf
and
push
popf
dec
call
push
aad
jnp
sbb
inc
jmp
xor
into
cmp
rcrl
aad
inc
hlt
mov
divb
aas
pop
push
stos
adc
push
aam
pop
sbb
loope
mov
dec
add
aas
inc
pushf
loopne
fsubr
sub
push
inc
test
mov
or
and
jns
cli
stc
rcrb
push
cmpsb
cld
in
aad
xchg
icebp
iret
or
mov
push
das
push
cli
mov
pop
adc
sbb
sar
loopne
pop
scas
mov
into
insb
xor
mov
add
add
loop
adc
inc
mov
and
mov
or
iret
cmp
sub
mov
add
test
imul
jle
mov
mov
inc
imul
dec
nop
xlat
mov
movsl
loopne
lods
enter
icebp
jp
into
pop
xchg
rorl
lds
inc
xor
mov
pop
or
aaa
test
decb
bound
out
lret
sbb
jno
xor
rorl
scas
mov
or
notb
aam
and
es
fisubrs
loop
aad
push
lcall
mov
insb
cbtw
pusha
xchg
xchg
mov
sbb
mov
xor
xlat
mov
imul
sbb
lea
mov
inc
mov
pop
das
xchg
test
and
icebp
mov
mov
fstpt
sub
loope
repz
flds
movd
mov
push
sarl
xchg
imul
dec
negl
xor
cmp
test
out
loopne
shrl
bound
xchg
and
mov
xchg
sub
ficomps
dec
push
fists
mov
in
push
cmpsl
mov
jg
icebp
mov
ret
xlat
popa
mov
mov
jbe
out
adc
movntps
js
int3
dec
cmpsb
js
fnstcw
lods
push
jp
sub
bound
pop
aaa
sbb
adcb
mov
pop
jnp
shll
dec
mov
inc
loope
jne
sbb
rorb
dec
es
mov
out
mov
adc
xor
out
scas
add
jge
cmp
scas
jne
xor
jo
mov
sarb
add
push
dec
xchg
adc
adc
mov
xchg
daa
dec
push
mov
adc
sahf
jno
fs
das
pop
sub
pop
inc
sub
or
out
je
mov
leave
lods
push
xchg
sbb
mov
mov
inc
sahf
imul
push
sub
push
cmp
jae
jne
rcr
inc
ljmp
push
mov
idivl
pop
adcb
cmpsl
int
pop
popa
xchg
ret
cmp
mov
push
xchg
mov
insl
inc
xor
es
push
cmc
adc
push
cmpsl
stos
ljmp
push
and
je
adc
jg
sub
and
or
in
dec
daa
gs
rcrl
loop
je
push
or
pop
mov
xchg
gs
push
xchg
or
cmp
xor
imul
aad
inc
sub
xor
mov
jb
sub
leave
mov
cmp
xor
inc
dec
into
inc
and
das
mov
dec
inc
jle
hlt
and
fidivl
bound
cli
dec
dec
fmuls
cmpsb
inc
mov
sub
and
pop
leavew
pop
into
pop
mov
xor
cmp
push
addl
mov
sub
jge
or
insb
adc
sbb
mov
push
fsubrl
fstpl
or
or
pop
cmpsl
ror
loopne
mov
orb
pop
xchg
nop
sub
push
jecxz
dec
or
int
xchg
cmp
and
sbb
xchg
mov
sub
sub
nop
insl
mov
adc
dec
sub
hlt
add
std
xor
adc
shr
or
out
sbb
adc
lea
xchg
fucomip
mov
push
lds
mov
mov
cvtdq2ps
movsl
sub
xor
repz
cmp
push
inc
mov
or
dec
sub
pushf
sub
add
popf
mov
jle
push
fsubrp
ret
fdivr
pop
jb
sub
add
aaa
adc
cmpb
dec
xlat
xchg
lds
sub
sbb
bound
mov
jno
repz
jmp
pop
mov
repz
or
in
int
dec
shrl
sbb
mov
push
ss
or
jno
dec
cmp
cmp
imull
gs
fnstcw
jo
mov
enter
repnz
in
fs
insl
rorb
mov
imul
sub
jmp
iret
lahf
ret
cltd
lds
mov
dec
pop
jmp
mov
pop
in
xchg
push
ljmp
sub
or
mov
or
mov
loopne
ret
rcl
xor
sarb
fwait
inc
ret
in
shr
cmp
lret
frstor
nop
push
inc
movsl
loope
fcoml
pop
fcoms
nop
cmp
adc
gs
fdivrl
movsb
pop
mov
cmc
xchg
mov
xor
fildll
fcomps
pop
sbb
push
sbb
loop
loopne
mov
cmpsl
push
or
aas
lcall
or
mov
addr16
sarl
sbb
divb
lahf
push
inc
jge
orb
xlat
outsb
pop
and
std
hlt
in
fucom
lcall
adc
notl
push
aas
pushf
testl
xor
pop
shrl
out
or
push
es
imul
icebp
mov
add
lods
push
es
xor
into
rcrl
addr16
mov
and
mov
mov
lods
push
xor
pop
stos
and
addb
dec
and
clc
jg
mov
jecxz
out
enter
jae
ja
out
rorl
push
je
and
push
cmp
add
sahf
test
cmp
mov
loop
stos
xchg
cmp
das
mov
aam
testb
or
out
incb
clc
ret
cmp
cli
ja
push
stc
mov
mov
lahf
mov
jl
popa
mov
sbb
popa
xchg
in
xchg
fldenv
in
rep
push
popa
xchg
xchg
mov
dec
fwait
nop
icebp
xchg
mov
call
mov
mov
mov
adc
jecxz
pop
loope
lods
rclb
lahf
clc
out
je
inc
jbe
faddl
negl
or
jge
inc
pusha
jb
inc
aaa
andb
mov
and
mov
add
inc
xchg
push
ret
fistl
decb
por
lods
ss
xchg
sbb
mov
ljmp
cwtl
mov
jle
inc
cmp
jbe
sbb
mov
cmp
inc
dec
jmp
daa
and
in
sarb
xchg
pop
or
add
jnp
cmpsl
cmpsb
ret
mov
gs
fldt
mov
jl
mov
imul
sub
sub
jle
push
int
push
or
mov
adc
dec
jecxz
or
xchg
aaa
pop
fcompl
je
xchg
push
in
movsb
push
daa
jns
shr
ds
adc
push
scas
sbb
or
push
fucomi
subb
jle
sbb
cmp
ret
cmp
mov
sbb
shl
cmp
pop
dec
dec
mov
dec
and
jmp
push
bound
les
xchg
jb
mov
sarb
and
pop
mov
or
mov
test
aas
fs
ror
adc
mov
xor
or
mov
pop
jb
popf
xor
dec
sub
pop
or
xchg
repnz
xor
xchg
adcb
sbb
push
push
imull
cmp
ljmp
cmc
push
mov
or
cmp
repnz
jg
dec
ljmp
rcrl
jg
push
jl
adc
aaa
push
scas
out
pop
scas
incl
jb
scas
xchg
xlat
mov
test
gs
js
stos
or
xchg
xor
pop
jo
inc
sbb
or
adc
data16
aaa
fstl
mov
jg
imul
and
repnz
push
xorb
pop
daa
mov
sarb
xor
int3
rol
xor
push
sbb
pushf
mov
jge
lock
or
stc
addr16
nop
sub
or
sahf
sub
sar
sub
sarb
in
popa
dec
sbb
aad
xchg
je
fs
mov
jge
aad
test
outsl
mov
lret
pop
pushf
hlt
xchg
cld
stos
add
mov
and
scas
incl
ret
mov
cmp
sti
fs
fcmovb
leave
and
aad
std
dec
outsl
sbbb
iret
jp
adc
popa
jge
mov
ljmp
fnstcw
aaa
call
pop
mov
cwtl
add
pop
pushf
add
dec
cltd
in
mov
pusha
xchg
out
push
mov
testl
pop
adc
adc
lret
or
mov
push
pop
xchg
out
or
xchg
outsb
sbb
nop
data16
shl
aaa
jecxz
iret
sahf
scas
out
push
fildll
dec
or
jl
out
les
mov
sbb
adc
adc
push
dec
cli
pop
rcll
xchg
add
jno
insb
sub
and
sub
fdivs
sub
mov
jnp
aam
mov
cmp
inc
push
push
mov
cmovne
sbb
in
xchg
sbb
repz
enter
lea
scas
or
call
stc
out
jbe
or
cmpsl
push
addr16
lahf
sub
outsb
or
and
mov
adc
jns
in
adc
mov
fcmove
movsl
or
mov
mov
xchg
sub
test
push
frstor
and
hlt
int3
int3
int3
fidivrl
cwtl
stc
icebp
out
xchg
imul
sti
push
pop
inc
imull
into
jmp
and
leave
sbb
pop
scas
and
xchg
cmp
or
insl
jns
loopne
jecxz
rcrl
or
fisubrs
push
jbe
outsl
pop
bound
addr16
mov
jge
or
xor
mov
lods
mov
add
and
and
push
pop
xchg
lea
xor
jecxz
hlt
lcall
push
loop
in
xchg
pop
or
das
cmc
fs
fisttpl
testb
push
ja
mov
in
mov
push
adc
repnz
or
inc
dec
dec
lock
xchg
subl
hlt
pushl
sbb
push
sub
jmp
hlt
mov
jb
mov
inc
sbb
inc
lods
xchg
and
and
inc
mov
inc
inc
scas
ret
mov
mov
leave
icebp
mov
adc
sahf
outsb
enter
pop
dec
pop
stc
cmp
xor
cmpsb
dec
mov
push
test
lods
fidivrl
pop
xchg
pop
adc
lahf
xor
lods
arpl
ja
push
out
iret
push
std
pop
pop
in
in
shlb
orl
jns
pop
loopne
aad
call
inc
mov
arpl
rclb
cmp
pushl
or
inc
aas
xchg
scas
cmpsl
jg
mov
cwtl
sub
dec
std
clc
mov
pop
cld
mov
iret
jmp
popa
cld
faddl
push
lret
lock
pop
pop
mov
cmp
scas
add
pop
or
push
aaa
pop
add
push
aas
cltd
add
cmp
out
std
shlb
mov
fldcw
stos
jg
push
stos
std
mov
adc
les
icebp
pop
popf
loope
pop
mov
mov
lods
jo
xchg
test
jmp
cltd
test
or
ret
xor
dec
and
aas
or
lock
leave
or
xchg
add
stos
inc
dec
jb
addb
and
jp
mov
cmp
jl
leave
mov
movsb
xchg
xchg
xchg
data16
cmc
push
xchg
push
add
sbb
decb
bound
sbb
shl
popa
adc
inc
xchg
push
cld
inc
ret
sahf
sti
or
int
lods
icebp
push
dec
in
sub
lahf
mov
pop
addr16
data16
out
fucomp
sbb
push
mov
fld
imul
gs
jg
mov
mov
and
daa
xchg
lret
dec
inc
inc
insb
mov
test
and
sahf
out
and
push
std
daa
lods
adcb
mov
mov
faddp
sbb
inc
lods
test
jg
dec
adc
imul
xchg
xchg
int3
dec
outsb
sbb
gs
ss
loop
fsubl
cwtl
and
push
pop
adc
or
add
inc
repz
popa
mov
ljmp
out
fistps
sub
shrl
outsl
pop
in
sub
mov
xchg
jne
int
les
outsl
cli
cltd
iret
mov
lcall
sub
adc
sbb
mov
cmp
in
xchg
xor
scas
or
cmp
or
shr
outsl
in
je
popl
inc
mov
xor
pusha
ret
cmp
dec
xor
sbbb
inc
popa
ficoml
mov
fsubl
lea
sub
aaa
cmp
outsl
cmp
jo
dec
xlat
not
cmp
dec
dec
mov
add
push
sub
mov
sub
and
xor
mov
pop
js
mov
mov
jnp
in
xlat
jmp
out
loop
xchg
cld
out
sbb
dec
mov
insb
inc
jae
ljmp
push
hlt
insl
inc
and
push
jmp
outsl
jns
mov
mov
fadd
outsl
cli
fsubr
cmovle
rep
adc
pop
sub
lock
rcrl
jmp
mov
arpl
data16
call
int3
mov
inc
adc
xor
jecxz
cmp
push
std
adc
jl
jg
js
sub
mov
dec
xchg
xchg
stos
and
sbb
cmp
adc
mov
mov
xor
in
jle
js
ja
mov
sub
leave
clc
stc
mov
inc
mov
imul
out
add
push
mov
pop
test
jno,pn
or
xor
cltd
decl
push
pusha
pop
rorl
lods
sbb
popf
cmp
cltd
inc
lcall
pop
push
daa
mov
and
stc
adc
shlb
out
repnz
stc
movsl
into
vhaddpd
mov
loopne
aaa
movsl
into
sti
pop
xchg
jmp
sar
fs
inc
js
sbb
xchg
push
sub
xchg
adc
push
outsl
hlt
dec
inc
pop
mov
dec
fsubs
lock
or
mov
mov
xlat
notl
jo
ja,pt
repnz
dec
xchg
jmp
mov
push
mov
in
inc
mov
or
push
adc
jl
aam
addl
fwait
das
icebp
enter
std
mov
scas
sbb
movsb
daa
scas
dec
push
lahf
inc
cmp
pop
pushf
int3
cs
sti
sbb
pushf
andl
stos
xchg
inc
push
inc
and
test
pop
lds
mov
add
les
je
add
cmc
addr16
mov
xor
dec
sbb
add
enter
dec
out
dec
jb
int3
iret
imul
cmpsb
cli
jecxz
out
ret
mov
lds
sti
xchg
fisttpll
mov
sar
pop
cmp
insb
arpl
add
lret
xor
int3
popa
addr16
aaa
sbb
pop
and
fwait
cmp
fisubrs
add
pop
lock
cmp
out
jecxz
push
push
and
pop
mov
scas
adc
imul
ds
sub
or
cmp
inc
mov
out
cmp
mov
or
or
sub
sub
jge
call
sub
and
jmp
test
adc
sub
xchg
sbb
das
divb
arpl
outsl
xor
sbbl
xchg
test
push
testl
pop
loop
sub
cmc
and
mov
test
pop
movsb
xor
clc
pop
jbe
daa
jl
loope
aam
orb
xchg
or
cwtl
mov
rcl
stc
dec
leave
scas
testl
daa
test
xchg
sub
sahf
dec
adc
decb
sti
sbb
mov
popa
sbb
icebp
jge
loope
pop
mov
inc
popl
push
ljmp
sbb
sub
out
test
fiadds
test
lea
clc
fldt
mov
insb
in
mov
sub
outsl
gs
pop
pop
scas
pop
and
inc
das
mov
pop
sub
push
xor
imull
int3
sub
mov
repz
fnstsw
mov
xchg
fwait
jo
jo
fimull
mov
popa
xchg
jmp
iret
mov
daa
enter
movsl
lea
jae
imulb
jo
loopne
int
popf
xor
mov
adc
ficompl
xchg
jnp
push
test
lret
je
push
xchg
and
jl
mov
lret
cld
scas
jle
lret
aad
sub
sbb
loop
into
in
lcall
or
adcb
hlt
in
jns
ficompl
mov
pop
movsw
aad
cmp
xor
sti
sub
test
sub
push
mov
add
mov
dec
mov
lds
arpl
mov
add
in
call
jg
mov
pop
testb
push
enter
lea
dec
loop
hlt
sbb
push
and
ficomps
bound
loop
inc
sub
test
dec
push
sbb
cs
jae
push
jp
scas
adc
xor
add
imul
ficoms
sub
stc
adc
clc
xchg
scas
cmp
or
sub
aam
rorl
dec
out
mov
or
mov
sub
out
push
fstpt
repz
jle
stos
xchg
lret
stos
cmp
xor
sarb
pop
jnp
xchg
enter
or
mov
cltd
pop
movsb
jmp
push
and
mov
pusha
into
gs
mov
pop
in
pop
loop
cmp
cmc
stc
lret
fcomps
xchg
fwait
adc
cmp
sbb
xlat
pop
icebp
pop
in
test
ds
cmp
pop
cmp
fsts
cld
idiv
adc
or
test
aam
fidivrl
mov
out
lods
sub
dec
xchg
xchg
jmp
jno
sahf
in
mov
aas
movsb
rol
leave
stos
cmp
loopne
fs
jl
sbb
or
sub
movsb
xor
or
mov
int
es
ja
jbe
push
cli
push
xor
cmp
push
adcb
fsts
rorl
fnsetpm(287
stos
dec
fstl
icebp
popa
add
jle
push
pop
mov
push
mov
scas
clc
sarb
fs
into
test
pop
outsb
paddb
mov
test
jne
addb
lods
jecxz
lds
lcall
cmp
mov
xor
cmp
addr16
jle
fcoml
nop
dec
mov
sbb
leave
jge
adc
add
xchg
mov
pusha
sarl
xor
cmpsl
xlat
push
xchg
mov
adc
bound
dec
in
pop
adc
inc
sahf
test
pop
xor
mov
inc
add
and
pop
adc
leave
repz
pop
pop
shl
sub
sub
jmp
dec
xorl
add
xchg
mov
pop
sub
jns
mov
sbb
jne
inc
sub
rolb
cmc
mov
mov
stos
stc
aas
or
push
fdivrs
mov
pop
add
rorl
stos
lods
mov
mov
outsb
lods
sbb
sti
dec
or
movsb
sar
mov
sub
mov
inc
add
les
int3
pop
push
stos
mov
or
stc
int3
dec
or
mov
ljmp
ret
icebp
push
pop
fwait
loopne
stos
mov
push
inc
hlt
outsb
mov
xor
or
push
adc
pop
negl
push
xchg
sub
mov
cmp
repnz
test
fnsave
adc
mov
lea
sarl
mov
aaa
fisubrs
outsl
adc
push
fdivr
out
mov
mov
sub
pop
jp
call
jae
cli
mov
jno
mov
out
mov
iret
mov
mov
cltd
xorl
cltd
inc
pop
cwtl
cli
jbe
cwtl
arpl
ja
or
inc
fistl
add
mov
test
mov
test
in
dec
cmp
mov
mov
cli
xor
es
nop
je
fnstcw
xor
xchg
dec
cmp
mov
fstps
out
rclb
add
ljmp
mov
jecxz
inc
aam
pop
idivb
loopne
pop
ficoml
pop
push
xchg
sbb
insb
subb
push
xchg
in
push
dec
int
int
pop
lock
xor
rcrb
sar
fdivl
arpl
mov
xchg
js
into
xlat
in
xchg
or
xchg
push
pop
mov
xor
sub
cmp
xor
out
lahf
push
mov
pop
scas
cmp
mov
sbb
sahf
aad
inc
das
mov
pop
stos
aas
insb
add
fistpll
ficoml
je
mov
imul
mov
add
pop
fisubs
adc
sub
je
xorl
mov
cmp
sub
mov
in
sarl
fidivl
cld
testb
jae
push
pop
add
sub
sbb
sbb
push
outsl
pushf
iret
sbb
sub
xchg
jo
add
pop
in
test
or
xchg
sub
loope
mov
mov
xchg
sti
jge
mull
out
popa
xor
out
bnd
push
testl
cld
sub
push
sbb
dec
mov
fadds
mov
clc
sti
in
pop
aas
je
xchg
mov
fstps
mull
addb
rcll
mov
addr16
mov
adc
xchg
into
dec
sub
mov
jle
xchg
sti
into
and
sub
mov
pop
mov
jge
repnz
sbb
rcrb
stc
push
dec
push
arpl
pop
rcrb
clc
xchg
ss
popf
adc
cmp
push
in
movsl
imul
lret
xchg
insl
mov
sbbl
mov
cli
iret
jnp
sbb
aad
push
jbe
stc
clc
mov
sub
std
movsb
roll
test
pop
adc
int
popa
pop
loop
mov
jns
fstl
scas
or
movsl
xor
xor
jle
out
mov
jnp
sbb
and
inc
cmc
popf
pop
pop
ror
stos
movsl
push
shlb
xorb
or
lret
sub
or
dec
adcl
ss
cmpsb
pop
mov
bound
sahf
iret
jns
insb
jo
pop
cmp
addr16
mov
scas
outsb
std
pop
xchg
data16
popl
ljmp
xor
icebp
fisttpl
add
mov
outsl
mov
cmp
pop
or
dec
dec
pop
add
sub
loope
int3
mov
popf
sbb
or
jecxz
adc
testb
cmp
loopne
jne
enter
add
idiv
rorl
dec
inc
rclb
arpl
xchg
and
pop
test
mull
roll
xchg
mov
add
dec
push
dec
in
inc
pop
pushf
icebp
cmp
sub
adc
sub
mov
pop
sub
dec
jp
pop
shl
inc
adc
pop
loopne
lahf
and
xor
dec
aas
push
arpl
into
add
cmp
es
cmc
inc
mov
pop
cmp
mov
or
push
pop
std
inc
pop
mull
call
push
push
mov
inc
test
loop
sub
push
idivl
lods
stc
sti
pop
sbb
cmp
inc
add
dec
push
push
mov
repnz
push
push
dec
scas
cmp
out
cmp
xchg
pop
pushf
adc
or
leave
add
sub
adc
in
je
mov
xor
sbb
and
cmp
das
rcll
test
pop
lods
mov
push
pop
add
jno
dec
pop
aaa
dec
pop
mov
callw
jns
add
dec
and
inc
xor
add
lea
outsb
xchg
mov
dec
or
mov
pop
cmpb
push
push
push
pop
or
or
pop
push
popa
dec
dec
shld
mov
mov
data16
stc
mov
sarb
stc
sbb
subl
cmpsl
mov
and
fwait
or
mov
jne
pop
and
mov
lcall
adc
jmp
scas
jne
and
fidivs
adc
lret
stos
or
pop
add
push
inc
outsb
mov
push
pop
push
pop
push
out
dec
mov
mov
and
fs
rorl
mov
ss
cmp
mov
repnz
mov
les
mov
xchg
dec
inc
in
push
call
pop
and
enter
push
clc
cmp
fldl
and
add
in
cmpsb
or
ds
loopne
jne
xchg
outsb
je
jle
dec
cmp
lahf
jmp
das
stc
cwtl
enter
jns
shl
testl
outsb
call
lcall
imul
inc
pop
lcall
cli
adc
loope
push
inc
movsl
imul
cmc
and
mov
scas
push
into
xchg
xor
shll
mov
dec
popa
pushf
sbb
cld
adc
movsl
sub
push
lahf
pop
xchg
mov
rolb
xchg
pop
clc
imul
push
dec
loop
mov
test
arpl
aaa
out
xor
adc
aas
dec
push
jo
scas
outsb
sbb
fiaddl
sbb
aaa
mov
mov
ss
pop
sbb
or
mov
xor
push
xchg
inc
pop
in
mov
jbe
mov
xor
in
sahf
cmp
or
add
push
mov
movsb
mov
movsl
fisttpll
add
cmp
fiaddl
xchg
xchg
in
pop
enter
faddl
xor
mov
test
sub
or
mov
xchg
push
into
popa
lret
add
pop
ja
dec
mov
je
sbb
mov
int
mov
out
inc
fldcw
sub
xor
push
stc
std
add
or
dec
iret
out
pushf
je
push
dec
rcrl
mov
add
mov
jae
adc
mov
add
shll
mov
mov
sbb
andl
xchg
xchg
ret
lret
jmp
imul
sub
shll
dec
fsubrs
dec
out
enter
loop
loope
sub
adc
fdiv
gs
pop
jb
out
es
inc
xor
push
lods
test
mov
adc
cmp
pop
imul
insl
xchg
mov
xchg
jecxz
aad
mov
call
test
dec
mov
sahf
and
ja
mov
lret
xchg
lds
sub
cmp
clc
pop
xor
scas
ds
in
xchg
cmp
ret
jbe,pt
xor
and
shll
imul
pushw
aad
mov
or
sub
lcall
data16
and
xchg
les
add
mov
imul
add
ljmp
bound
sbb
push
mov
pop
push
addb
cmp
pop
sbb
lret
ss
inc
adc
shl
sub
xchg
sbbl
out
adc
stc
jae
cltd
cmpsb
inc
popf
ds
mov
int
cltd
lret
pop
aam
sbb
or
adc
add
fwait
clc
fadds
cmp
aad
pop
pop
cli
lods
push
pusha
aaa
out
jl
fmuls
cmp
loope
fistpll
push
jp
adcl
icebp
mov
lock
jnp
pop
loopne
fistpll
call
and
cld
xor
rcll
adcl
push
fdiv
inc
in
inc
je
jnp
xchg
cmc
sub
mov
lret
push
push
adc
inc
paddd
ja
gs
xorl
imul
mov
out
testb
aad
sub
xchg
stos
std
inc
or
mov
lcall
cwtl
arpl
inc
pop
adc
je
or
faddl
sbb
cmpsb
subl
fcmove
ljmp
pop
in
push
cmp
jae
and
das
fs
loope
xchg
out
lret
add
add
add
mov
fildll
lods
pop
out
cmp
mov
mov
adcl
xor
adc
das
loop
loope
bnd
jg
mov
xor
gs
jmp
ljmp
fcomps
popf
pushf
adc
fbld
inc
and
or
push
test
hlt
imul
mov
jp
adc
jne
movl
repz
jbe
mov
mov
or
inc
sti
pop
add
insl
add
lcall
inc
mov
popa
add
loopne
xor
jo
ja
mov
arpl
jl
dec
xchg
and
and
mov
mov
lds
add
cli
add
stos
or
adc
cmp
out
jmp
inc
sbb
das
stos
insb
pop
negl
cmpb
add
inc
enter
xor
hlt
xchg
push
add
lret
mov
mov
push
test
push
jb
popa
hlt
xchg
and
nop
stos
test
adc
icebp
mov
clc
xchg
out
outsl
fucomp
mov
dec
fdivs
in
push
jne
in
stc
cltd
or
jl
mov
sbb
push
push
sbb
insb
loop
int3
popa
or
into
sbb
out
fnstenv
pop
pop
sub
fs
jmp
imul
pushf
int
repz
mov
mov
into
push
mov
mov
popa
cltd
dec
arpl
outsl
sub
leave
cli
iret
test
mov
xor
cmp
es
lods
push
mov
inc
mov
dec
and
aam
mov
xlat
loope
push
mov
shrb
lock
js
aam
lcall
movsb
push
stos
mov
in
lret
call
add
js
sub
test
sbbb
sbb
test
pop
das
xchg
stc
mov
xlat
xchg
jno
scas
cltd
ret
cld
stc
aas
add
push
push
xchg
xlat
sti
add
jmp
xchg
adc
jmp
ljmp
scas
add
dec
sub
stos
inc
cmpsb
sub
xor
imul
adc
pop
insb
lock
enter
aad
adc
xor
testl
mov
adc
leave
adc
andl
roll
les
les
jns
xor
daa
add
movsl
loopne
das
ds
and
push
lods
sti
jbe
push
pop
mov
test
inc
pop
pop
jecxz
jne
xchg
and
out
lea
xchg
inc
in
add
movsl
sti
xor
jmp
loopne
aam
fisubl
cmp
dec
gs
stos
nop
adc
fstl
dec
adc
pop
pop
aaa
xchg
fistpl
call
jp
push
subb
out
cmp
daa
clc
daa
push
loop
or
sub
arpl
mov
sub
or
scas
aad
cld
inc
pusha
das
sub
icebp
dec
imul
pmaddwd
inc
and
mov
or
stos
xorb
je
repz
sbb
stos
xor
fcmovnbe
cltd
xlat
in
dec
cmp
nop
dec
gs
test
sbb
stos
sbb
aam
push
jecxz
leave
cmc
jnp
lock
loopne
fcomps
mov
mov
or
mov
pop
xor
dec
mov
mov
subl
xchg
das
mov
jno
ds
add
jnp
xchg
rorl
ficomps
mov
cmp
gs
adcb
popa
sbb
es
mov
sbb
lods
jnp
mov
leave
out
movsl
adc
repz
movsb
mov
fisttpll
mov
ret
mov
sbb
rcll
push
xlat
arpl
jg
xchg
out
daa
adc
mov
les
int3
xchg
inc
push
not
cmpsl
cmpsb
push
mov
out
std
fcoml
loopne
fnstcw
into
pop
jmp
lcall
dec
movsl
sbb
xchg
or
sub
jecxz
addb
shlb
pop
loopne
sbb
adc
adc
mov
movsb
xchg
pop
xchg
lods
pop
xchg
repz
fcom
outsl
mov
ret
add
jne
fisttpl
iret
cli
sub
and
pop
cli
lcall
fwait
movsb
or
shlb
push
jg
in
and
ss
in
cmpsl
mov
stos
dec
movsl
cs
inc
mov
out
xchg
lods
cmp
and
scas
adc
sahf
dec
out
gs
movsl
and
sti
fstp
ret
mov
jp
pop
int
inc
mov
out
push
bound
mov
popf
mov
cmp
sub
jb
lcall
cmpsb
add
enter
mov
sub
aam
pop
pop
mov
pusha
sbb
arpl
push
jbe
push
pop
inc
pop
sub
hlt
pop
adc
mov
bound
jne
push
xor
and
call
cmp
lcall
push
leave
pop
data16
pop
cmp
and
pop
repz
inc
mov
add
xlat
fdivs
loop
gs
pmaxsw
adc
aaa
cli
xlat
mov
inc
rorl
jb
aad
mov
add
pushf
xlat
stc
mov
sub
push
push
mov
bound
mov
push
sbbb
fwait
cmp
xchg
in
jg
inc
clc
out
lds
mov
xor
push
cmp
je
ficoml
shrl
rolb
mov
mov
adc
and
fdivl
mov
hlt
sub
adc
lret
aas
scas
cmp
pop
lret
dec
inc
inc
xchg
mov
int
inc
out
fsubrs
popf
sub
aaa
ret
clc
xlat
es
xchg
es
mov
shlb
push
pusha
sub
std
jecxz,pn
out
push
pop
push
sub
flds
sub
pop
addb
in
cmp
mov
inc
pop
rcrl
outsb
test
and
outsl
in
nop
loop
test
es
xchg
jmp
jno
jg
popf
lock
xor
inc
xchg
jp
in
xor
enter
ljmp
repnz
sti
repz
adcl
sti
and
push
imul
leave
cld
mov
xchg
xchg
xchg
mov
mov
jo
bound
sub
ficoml
std
testb
stos
cld
dec
icebp
adc
std
sbb
xchg
mov
je
mov
loope
nop
mov
push
add
pushf
add
add
cmp
pop
in
push
das
lock
and
shld
repnz
inc
jb
lods
sub
push
cmp
insb
adc
repz
les
cli
lods
testb
and
dec
ja
sbb
mov
adc
outsb
stc
mov
cld
xlat
xchg
into
repz
int
sti
sbb
test
arpl
pushf
cmpsb
jmp
sub
adc
loope
pop
arpl
movsl
mov
loop
fwait
stos
xchg
jo
in
out
inc
add
mov
pop
xchg
call
sub
mov
xchg
sub
ss
repz
xchg
sbb
jnp
add
xlat
pop
and
fisubrs
fmuls
sub
mov
insl
scas
adc
mov
jge
aad
fwait
mov
jge
mov
mov
mov
outsl
pushf
cmp
popa
mov
jnp
xchg
aaa
loope
mov
test
mov
lret
outsl
in
pop
pop
add
mov
test
in
xlat
xor
inc
fcomps
xor
leave
loopne
cli
xor
outsb
stos
cmp
leave
aad
leave
push
or
mov
rolb
pop
shl
adc
push
jae
sub
inc
nop
mov
out
push
mov
xchg
xor
add
lahf
add
jmp
andb
push
lods
mov
clc
fwait
roll
leave
cwtl
mov
test
ret
dec
iret
inc
and
inc
sahf
lcall
jl
sahf
stos
stos
adc
outsl
es
xchg
push
sbb
call
stos
or
inc
cwtl
out
in
cmp
enter
mov
mov
lcall
pop
fistpll
das
daa
mov
mov
call
js
cmpsl
or
aad
fstpt
inc
lock
nop
pop
adc
jmp
lods
inc
jmp
lcall
lds
movsb
push
jns
mov
andl
int
test
fisubrl
insb
enter
pop
mov
and
clc
push
inc
cli
test
fwait
jne
mov
pop
pop
sub
jo
inc
mov
rol
int
xor
out
mov
test
push
inc
inc
aam
fs
sbb
dec
sahf
test
mov
es
scas
test
cmp
add
scas
xchg
loope
pop
cmp
push
divl
mov
cwtl
repz
mov
punpckhwd
fisubl
push
mov
sub
aaa
in
arpl
sahf
sbb
jmp
shl
cld
sub
out
mov
sbb
call
in
repnz
iret
mov
daa
scas
stc
push
push
push
dec
and
adc
push
push
push
xchg
notl
sbb
jne
jbe
jle
dec
in
push
pop
sbb
jecxz
mov
cmp
push
pop
jae
js
xor
roll
inc
adc
dec
jnp
and
add
cmp
and
enter
sbb
xor
dec
xor
mov
sbb
jecxz
rcl
je
or
das
xchg
push
xor
cmp
xchg
and
iret
jmp
js
pop
jno
sbb
mov
movsl
push
jle
iret
inc
lock
call
dec
sti
pop
fildll
out
aam
hlt
ja
inc
pop
sbb
mov
clc
leave
add
cmc
jecxz
add
or
pop
push
ja
movsb
mov
mov
cmpsl
loopne
dec
call
fcom
mov
sbb
sub
int3
mov
or
cmp
xchg
jmp
xlat
pop
repz
addr16
stc
push
lods
adc
imul
in
jg
pop
mov
arpl
jp
jle
sar
aad
incb
dec
sub
pop
loopne
nop
jecxz
es
cmp
ret
inc
inc
clc
add
ss
add
and
sub
out
test
inc
mov
imul
inc
pop
test
outsb
or
addr16
pop
pusha
pusha
push
sbb
inc
pop
popa
or
ljmp
jmp
cmp
in
jmp
stos
cmc
add
add
adc
pushf
add
cmp
adc
or
xlat
push
lods
and
pop
fnstcw
loopne
add
and
cwtl
repnz
jne
push
ljmp
idivl
aad
dec
js
add
loopne
push
repnz
pop
jg
sbb
stos
shrl
arpl
in
and
fldl
std
fs
push
stos
lret
call
ds
sub
inc
cmp
aad
sub
daa
sub
cmp
ja
lcall
inc
inc
shrb
cmp
nop
xchg
aad
mov
lea
ret
clc
loope
sub
shl
or
cli
outsl
retw
xor
in
sub
lock
sahf
cwtl
pop
mov
or
or
mov
xor
and
jns
push
aaa
xor
cmp
test
cmp
mov
mov
mov
cmpsb
inc
lret
cmp
jle
or
pushf
int3
lret
andb
clc
daa
mov
dec
add
jecxz
cli
jmp
dec
mov
es
dec
jae
in
jmp
mov
sarb
rclb
adc
ss
adc
xor
pushl
sub
fwait
fwait
lret
mov
mov
and
inc
lret
rorb
fwait
je
mov
iret
cmp
mov
fs
sbb
xor
out
dec
mov
push
cmpsb
dec
jne
or
popf
into
add
scas
ds
js
shlb
aam
stos
pop
mov
popf
jbe
dec
dec
jb
pop
dec
shlb
and
in
mov
cmc
add
stc
cld
lret
stc
lods
fiadds
jns
mov
insb
lods
cmc
and
loopne
push
dec
mov
call
icebp
fwait
adcb
bound
inc
or
sub
lret
pop
aam
xchg
sub
int3
xchg
xchg
add
aam
imul
jo
daa
push
inc
xor
clc
sbb
cmp
jge
adc
pop
scas
and
aaa
and
dec
xchg
clc
xchg
dec
add
sub
fdivr
pop
stos
into
imul
hlt
icebp
dec
pop
xchg
and
push
loop
out
push
mov
mov
dec
dec
fldenv
je
lahf
or
cmpsb
mov
sub
sub
jae
adc
in
test
inc
inc
dec
into
mov
ficoml
or
xor
mov
lock
pop
and
add
xchg
out
mov
xchg
mov
std
push
lods
rorl
lds
enter
call
jb
popf
mov
addl
ljmp
insl
adc
out
mov
cwtl
push
jbe
xlat
or
pop
push
clc
inc
inc
xchg
js
imul
rorl
es
popf
aas
sbb
test
dec
adc
gs
mov
leave
jecxz
lcall
shlb
xchg
xchg
frstor
mov
ljmp
sub
mov
cmpsb
ljmp
xor
pop
icebp
dec
inc
pop
jle
mov
mov
mov
jae
ljmp
lcallw
xor
and
xchg
pop
loope
xchg
daa
pop
in
mov
mov
lahf
adc
and
loopne
aad
cmp
imul
addr16
mov
jle
movsl
cmp
outsl
subb
inc
test
rcrb
xor
or
jne
gs
stos
or
cmp
outsb
cltd
pop
movsb
orl
push
and
sar
mov
lcall
ret
sub
fs
enter
popa
rolb
cmpsl
cmp
call
jns
cmp
shl
pop
movsl
int
stos
inc
bnd
andb
add
popa
incb
cmpsb
int
mov
sub
mov
in
popf
or
rclb
leave
add
out
mov
adc
fbstp
cmovp
cmpsl
js
push
and
loopne
roll
out
cmp
xchg
addr16
rcrb
aam
loopne
add
inc
sbb
jns
lret
mov
lcall
roll
pusha
add
and
dec
ret
pop
jbe
fistpl
push
divl
lahf
xor
push
inc
fs
lea
aas
push
or
jbe
outsl
mov
jmp
lods
dec
mov
sarb
mov
push
adc
sti
popf
or
xor
mov
mov
pop
cltd
sbb
fucomp
inc
dec
imull
jmp
mov
in
cmp
cmp
and
aaa
push
add
or
mov
adc
andb
test
dec
ja
sbb
mov
test
jl
cmp
push
fs
adc
lods
sub
sti
mov
jnp
add
lret
and
cld
cmp
std
mov
sbb
shrb
or
lods
jb
dec
int3
loope
add
ljmp
jge
add
cmp
scas
cli
mov
push
mov
outsl
mov
daa
mov
mov
in
inc
ret
cmp
sti
pop
xchg
pop
cwtl
sbb
fdivrl
subb
fcomp
jge
pushf
cmc
jp
loopne
adc
sbb
mov
andl
scas
jecxz
and
ficoms
dec
mov
pop
out
inc
call
lods
std
cmp
in
xor
rolb
dec
mov
imull
in
jle
daa
xor
pop
mov
xor
push
sbbl
sbb
mov
sar
inc
xchg
mov
js
and
pop
mov
sub
or
or
enter
or
lcall
mov
lahf
scas
in
mov
repnz
rcl
fs
inc
xor
icebp
fadds
nop
cmp
outsl
mov
dec
or
sub
push
or
mov
jno
movaps
mov
dec
xchg
out
outsl
jae
push
mov
add
ja
inc
ret
je
mov
scas
lea
lea
or
xor
dec
xor
testb
pop
xchg
ret
in
or
lods
icebp
mov
rorb
pop
dec
xchg
or
adcb
into
add
and
div
das
mov
jns
fbstp
inc
xlat
insl
xchg
sbb
jnp
dec
imul
test
int3
jg
pushf
lahf
pop
push
or
imul
mov
fbstp
mov
add
add
adc
lds
mov
movl
push
mov
addr16
jnp
xlat
mov
bound
add
jns
movsb
or
xor
adc
xor
jbe
xor
aas
pop
pop
xchg
pusha
xor
xchg
and
xor
and
fisttps
nop
mov
push
mov
ret
fnsave
dec
fs
adc
sub
out
xchg
dec
cmc
jns
cmpsb
sub
bound
pop
jae
sub
inc
les
mov
cmp
jle
sub
inc
les
lcall
sbb
mov
dec
loope
loopne
fisubs
jnp
adc
shl
sub
out
or
push
adc
cmp
addl
pop
and
xchg
int
test
jb
and
push
fdivrs
sbbl
sti
or
mov
arpl
mov
pop
enter
mov
pop
mov
repz
fistpl
adcl
in
clc
inc
popf
loopne
jno
cmp
iret
dec
mov
pusha
push
fcoml
xchg
jle
and
imul
les
mov
inc
mov
test
mov
fdivs
dec
lret
xchg
pop
mov
arpl
fidivrl
inc
push
dec
xchg
dec
jbe
inc
xchg
jbe
mov
sub
imul
dec
mov
and
mov
movsb
pop
mov
pop
in
push
push
enter
xchg
int3
dec
jp
das
mov
adc
xchg
cmp
ret
sub
aad
dec
stc
repz
fbld
inc
mov
pusha
scas
hlt
shlb
icebp
ret
fiaddl
sub
pop
inc
repz
push
xor
push
or
imull
cmpsb
inc
add
jo
roll
xor
fsubrl
inc
xchg
pop
out
outsb
les
add
ljmp
xchg
or
mov
mov
or
cmp
sahf
push
dec
dec
xchg
cmp
cmp
push
pop
xchg
js
mov
sbb
loope
lods
iret
jl
fisubrl
dec
dec
out
mov
rcrb
push
test
loopne
test
shll
loopne
add
or
pop
dec
js
jno
pop
mov
mov
push
popf
jmp
jno
mov
into
iret
popf
push
push
stos
mov
pop
jl
pop
adc
xchg
sbbl
nop
pop
xor
out
shr
call
sbb
xchg
aam
dec
jnp
sahf
mov
fisubl
mov
jbe
pop
out
scas
mulb
es
les
or
aad
loope
cli
out
sbb
or
aam
push
pop
xlat
stos
insl
mov
cmp
mov
cmp
enter
out
shll
add
jno
xchg
pushf
sbb
leave
mov
test
inc
pop
pop
out
rcrb
xlat
pop
jmp
getsec
mov
inc
adc
jbe
popa
adc
xor
cmp
test
dec
lret
add
addl
dec
subb
lods
addr16
push
push
lods
lret
iret
mov
push
ljmp
add
push
inc
mov
adc
or
sahf
and
iret
rcll
aaa
cmpsb
daa
or
imul
int3
mov
int
lcall
sbb
push
push
and
xchg
popa
cmpsb
push
mov
movsl
out
cmp
push
ret
stos
dec
push
repz
mov
into
repnz
das
adc
repz
pop
int3
movsl
repnz
inc
out
scas
fs
mov
scas
mov
ret
mov
cmp
jnp
push
dec
push
xor
popf
outsb
or
ljmp
dec
jns
jno
and
call
jbe
pop
into
mov
ss
mov
cmp
nop
xchg
sbb
cmp
outsb
movsb
mov
fnstsw
daa
adc
jge
rclb
dec
or
hlt
add
dec
outsb
pop
leave
cmp
adc
inc
mov
imul
dec
cld
mov
test
scas
mov
xchg
lret
shll
mov
xor
push
adc
add
aaa
aaa
pop
scas
aam
and
mov
cwtl
fnsave
adc
cmc
sti
mov
mov
pop
and
daa
inc
mov
pop
mov
sti
int
add
or
lea
imul
xchg
xor
xchg
mov
icebp
shlb
movsb
pop
xor
dec
cld
lock
cmp
out
push
pop
jne
outsl
dec
in
pop
fsts
in
push
ficoms
in
or
inc
sbb
cltd
divb
xchg
cmpsl
sub
js
addps
out
rep
mov
hlt
or
cmp
mov
adc
dec
jnp
push
xlat
outsb
sbb
add
jecxz
mov
test
xchg
out
jnp
ja
adc
sbb
xor
in
pop
or
sub
pushf
fmuls
cmp
jmp
xchg
jo
lea
fldenv
push
sbb
sbb
mov
xchg
xor
dec
and
mov
les
jg
outsb
in
xor
jae
dec
pop
push
dec
fiaddl
mov
xor
mov
jge
sbb
dec
mov
jmp
xchg
sbb
popf
mov
into
mov
test
int3
insb
shlb
stos
mov
outsb
jns
and
pop
sub
clc
jb
jg
cmp
xor
lock
push
xor
pop
gs
xchg
mul
shlb
sbb
mov
fsubs
imul
sub
xchg
mov
add
pop
mov
lock
mov
js
sub
pusha
addr16
jg
fidivl
cmc
cmpsl
xchg
dec
stos
lret
sbb
xor
mov
push
icebp
leave
mov
nop
mov
push
or
add
nop
cmpsb
xor
jae
test
jb
subl
push
inc
pop
adcl
ss
adc
popa
movsb
mov
lds
adc
sub
sbbl
icebp
jbe
aad
xchg
fisttpll
test
mov
es
es
movsb
ss
into
mov
aas
add
inc
add
mov
nop
gs
lds
out
lret
fwait
scas
pop
popl
in
push
mov
push
scas
mov
adc
xchg
and
fwait
imul
test
jno
inc
shlb
dec
jecxz
hlt
mov
and
in
fdivs
test
cli
sbb
jo
push
and
ljmp
jp
outsb
sub
xor
movb
in
aad
fdivs
mov
jp
pop
or
jns
mov
mov
pop
outsl
mov
movsb
xchg
cs
call
pusha
fs
inc
jp
icebp
shrb
mov
popa
inc
bound
cmpsl
pop
mov
xor
mov
inc
or
mov
jae
or
mov
fcmovnu
inc
push
push
into
pop
lret
jge
out
inc
insl
inc
mov
movsb
lds
pop
or
mov
lahf
ret
lds
mov
rclb
stos
pop
adcl
mul
jb
loopne
or
add
loop
add
jb
jmp
jbe
lcall
xchg
push
imul
mov
loop
mov
fldt
pop
aad
mov
add
add
add
inc
and
adc
inc
lock
addb
push
add
mov
stos
out
sub
pop
mov
lcall
sbb
iret
inc
mov
pop
cltd
out
adc
sti
repz
test
add
loop
sub
or
out
jmp
jmp
popf
sub
fisttpl
or
mov
inc
and
movsb
data16
mov
lcall
lock
pop
pop
inc
cs
mov
lods
sub
push
aam
or
add
or
in
xchg
jno
xlat
push
cmp
jnp
pop
cltd
rclb
add
jg
test
in
adc
mov
insb
loopne
movsl
pop
mov
sub
add
push
add
dec
jo
and
and
and
push
mov
pop
sahf
jecxz
sub
shlb
inc
jae
jg
daa
insb
jp
and
push
test
and
negl
dec
fidivrs
inc
xchg
jg
fmuls
cld
dec
jecxz
sti
mov
in
xor
ret
xchg
lock
mov
or
adc
sbb
dec
cpuid
cmp
and
int
sysexit
test
test
xchg
push
jmp
unpcklps
or
add
and
dec
stos
cmp
stos
fs
jmp
cmpsl
or
lcall
pop
inc
div
sub
sahf
mov
mov
jge
ror
or
xlat
cld
push
xchg
fldpi
and
xchg
ds
add
mov
sbb
add
movsl
dec
push
je
hlt
jl
cmc
dec
jae
dec
repz
pop
sub
xchg
mov
in
xchg
popa
cmc
or
enter
lcall
pusha
pusha
jg
sub
jb
neg
jae
stos
and
jns
mov
ret
or
in
pop
popa
mov
fdivp
pop
dec
addl
cwtl
enter
packsswb
inc
idivb
jmp
testl
nop
xlat
daa
xor
pop
mov
subb
clc
lret
leave
cltd
in
in
dec
push
push
imul
insl
sti
mov
cmpb
cmp
dec
sbb
mov
jae
loopne
popa
cmp
sbb
mov
insl
pop
ret
aad
xor
sbb
push
pop
je
jmp
mov
mov
insb
jle
pandn
mov
into
test
lret
cmp
ja
movsb
movsl
fsubrs
add
ss
arpl
gs
pusha
iret
fwait
pop
testl
adc
sbb
jno
fsub
insb
popf
addr16
lods
mov
fnstcw
and
into
lret
repnz
int
mov
das
insb
sbb
xchg
inc
pop
mov
jle
aas
push
ljmp
pop
mov
out
ja
mov
test
or
leave
mov
lock
inc
mov
mov
sub
inc
mov
xlat
or
mov
lret
push
mov
aaa
pop
stos
jnp
sub
jbe
ljmp
fs
into
ret
push
xor
inc
repnz
outsb
add
jl
add
int3
inc
shll
jecxz
and
xor
stc
cmp
test
loopne
movsb
or
and
mov
outsb
xor
mov
ret
into
inc
mov
mov
ds
ror
fimuls
jge
lods
movsl
stos
fistpl
push
cld
aam
orb
dec
outsl
inc
ror
mov
or
push
cmc
aad
dec
test
fsubl
or
dec
ja
fiaddl
hlt
push
scas
out
outsl
push
es
outsl
jp
cmc
jp
loopne
sub
das
mov
push
xchg
xor
test
insl
cltd
mov
dec
inc
jno
dec
lea
out
dec
div
mov
xchg
popa
dec
jecxz
psubb
mov
push
sbb
jo
sbb
mov
lods
xchg
xor
xchg
jne
out
pop
addr16
mov
cltd
flds
xchg
dec
std
push
adc
add
cmp
mov
call
stc
xor
lcall
or
das
mov
pop
std
int3
cmpsb
out
cmpsl
in
and
ljmp
jmp
sti
jb
sub
sub
lahf
mov
gs
jne
negl
sub
fld
sub
jnp
mov
pop
incl
or
cmp
shrl
mov
aaa
rolb
jle
and
scas
sahf
sbb
js
pusha
or
dec
xor
lods
dec
push
lods
jae
rclb
mov
xor
mov
fisubl
push
das
mov
inc
roll
jge
add
pop
in
into
lcall
add
addr16
mov
mov
mov
mov
inc
fcompl
cld
mov
ret
cltd
pop
fcmovbe
mov
push
pop
jnp
push
mov
and
ljmp
inc
lods
xchg
add
mov
add
stc
or
shll
clc
int
push
add
ljmp
push
jg
add
jecxz
movsb
pushf
sub
cmp
mov
dec
push
cld
xchg
ja
sbb
cmp
inc
aaa
fldl
subps
push
jl
fs
push
icebp
and
xchg
mov
cmpsl
outsl
push
mov
repnz
pop
ljmp
sbb
cmp
mov
inc
or
xor
xchg
loopne
imul
jbe
push
push
sbb
mov
jbe
cld
cmp
in
out
pop
or
inc
sti
mov
pop
cmc
mov
ja
ja
or
cmp
daa
push
fs
xchg
inc
jno
mov
inc
es
push
lock
adc
or
jno
sub
mov
xchg
xor
or
or
lods
cwtl
stos
jno
rcrb
push
xchg
rcrl
shr
inc
mov
int3
fisttps
rcrl
aad
jns
in
lds
dec
inc
xorl
push
movq
xor
gs
mov
in
adc
pushf
sub
sub
sbb
mov
in
inc
es
in
and
aad
pop
js
out
imul
xor
imul
sub
push
jo
mov
pusha
das
and
sub
nop
or
lahf
sub
dec
dec
mov
into
mov
inc
cmp
or
mov
mov
lods
ret
pop
push
shr
test
xchg
icebp
pop
dec
shll
pop
adc
cmp
sahf
cli
push
lods
inc
cmp
stc
push
scas
inc
loop
sahf
inc
and
xor
stos
inc
mov
adc
movb
imul
push
cmp
bound
xor
mov
cmp
ss
stos
jb
push
cmpsl
mov
push
mov
std
stos
push
ja
out
push
xchg
xor
mov
jg
in
inc
mov
mov
aaa
pop
add
xchg
in
lret
jle
xchg
adc
shlb
out
dec
jae
outsb
call
xchg
adc
mov
pop
jae
in
aam
std
aaa
jp
insl
mov
jmp
sub
inc
lock
int
subb
test
push
xchg
test
cmp
xor
repz
or
xchg
outsb
lock
addl
sbb
dec
cltd
xor
add
dec
ja
mov
fidivrl
in
sbb
repz
and
cltd
ds
data16
push
ret
gs
or
lods
adc
mov
imul
outsl
rcrl
test
insl
and
mov
leave
lock
xorb
and
mov
pop
sti
rcr
mov
stc
cmp
xor
mov
pop
bound
mov
inc
sbb
adcb
das
sub
adc
jl
mov
and
ret
rol
xor
mov
mov
loopne
stos
sbb
mov
shrb
pop
inc
mov
mov
js
adc
cmpsl
stos
pusha
lret
out
pmaddwd
enter
pop
sub
pop
insl
pop
idivb
add
jmp
ret
mov
dec
dec
push
aad
out
push
in
fwait
inc
std
aaa
lds
repz
lahf
or
cmc
push
push
and
aaa
lea
daa
cld
loop
js
lock
lea
add
jp
jae,pt
push
fwait
and
jb
jne
mov
std
add
mov
sbb
vcvtdq2ps
cmc
jo
stc
push
mov
xor
add
xor
ret
dec
enter
jb
xor
or
jl
js
adc
gs
movsb
rclb
pop
mov
mov
aad
ret
idivl
xor
jae
fwait
in
push
adc
int3
xor
fucom
or
aam
in
push
push
pop
push
xchg
fs
shlb
jge
dec
inc
int3
or
and
cs
xchg
les
sbb
iret
cmpsb
js
repnz
lahf
dec
mov
push
test
jp
scas
hlt
fildl
push
mov
in
imul
pusha
mov
or
jbe
mov
leave
cli
mov
aas
xor
xchg
test
jnp
cli
sub
daa
jecxz
aam
fisubl
ror
sub
mov
clc
inc
lods
xchg
outsl
mov
repz
mov
adc
pop
pop
notb
or
inc
jl
pop
pop
or
scas
xorl
inc
mov
mov
cmp
insl
push
jne
mov
inc
jmp
pop
and
mov
dec
loopne
adc
pusha
in
mov
aaa
jne
out
hlt
push
xor
std
arpl
aaa
cltd
cli
inc
xor
das
jle
ret
adc
jg
pop
add
repz
aad
hlt
paddb
mov
xchg
call
pop
pop
and
js
mov
cmpsl
xor
sub
jb
inc
jns
pop
jnp
or
mov
push
mov
inc
push
mov
inc
dec
mov
push
jns
inc
adc
mov
into
aas
ret
jmp
imul
inc
cmp
arpl
mov
adc
dec
sbb
cmpsl
cmpsb
pusha
push
jp
repnz
push
jle
rorb
xor
sbbb
dec
xchg
dec
sbb
ret
insl
enter
jae
adc
xchg
dec
pop
std
movsb
clc
xchg
pop
incl
sbb
pop
outsl
in
idivb
fwait
int3
mov
jo
xchg
add
lock
fcomip
mov
pop
enter
mov
mov
or
out
or
mov
mov
jmp
mov
jmp
stc
and
in
push
into
jp
mov
int3
push
ja
in
fcomps
push
mov
popa
out
mov
mov
fstps
mov
das
jns
xchg
pop
call
or
xchg
or
das
mov
into
iret
inc
out
sub
cmp
pop
repnz
push
outsl
roll
xchg
sub
adc
lock
cmp
movsb
dec
das
dec
cmp
sub
fists
mov
call
call
push
lret
mov
out
fdivrl
sbb
fsubl
ljmp
or
mov
mov
xchg
xchg
pusha
aaa
push
lret
jne
mov
push
daa
enter
in
mov
jne
out
hlt
icebp
das
add
decb
ja
xchg
call
gs
mov
push
sti
cs
jb
cmp
daa
dec
or
shrb
aas
add
cmp
mov
aaa
icebp
mov
aad
cmp
sar
adc
cmc
adc
inc
fcomi
jge
mov
lods
lahf
mov
and
lret
inc
push
out
pop
test
in
pop
pop
adc
xorl
aaa
cld
jp
aaa
push
in
in
pushf
or
add
and
inc
sahf
bound
nop
push
mov
push
mov
sub
push
dec
ds
mov
add
mov
adc
loop
leave
mov
sbb
sub
fwait
mov
jns
scas
shll
inc
lret
addl
or
cld
or
jbe
mov
not
in
fcomps
xlat
call
pop
dec
xor
aam
out
push
es
imul
adcl
add
hlt
pop
mov
dec
cmc
sbb
jb
fadds
push
and
cmpb
sub
dec
mov
orl
fnsave
cmpsl
out
sbb
mulb
cmpsl
sub
mov
iret
inc
rol
push
arpl
mov
jb
call
jbe
xor
dec
push
mov
test
scas
xchg
or
cltd
js
sub
lea
rcrl
pop
jb
xchg
rcll
xchg
ficoms
hlt
mov
into
pop
fisubs
in
enter
inc
leave
lcall
cmp
xchg
xor
pop
das
rorl
add
add
push
mov
loopne
jle
jns
mov
xlat
or
pop
fyl2x
cmp
loop
rorb
loope
sarb
mov
sub
test
mov
dec
es
jae
dec
cs
loope
dec
add
es
nop
jecxz
mov
jno
cmp
lods
jle
sub
xchg
stos
xor
mull
lret
add
inc
scas
hlt
cmp
mov
insb
cs
push
add
test
mov
jb
jge
push
mov
lcall
jb
xor
inc
cmp
xor
adc
out
popa
inc
dec
outsl
cld
xorl
add
sub
add
xchg
imul
xchg
push
sbb
out
call
rolb
icebp
xchg
sub
cmp
pushf
mov
lea
pop
pop
dec
stos
and
and
pop
je
mov
inc
int3
nop
cltd
sbb
or
aad
jp
daa
imul
xor
xchg
shlb
pop
sub
mov
cmp
and
xor
mov
out
popf
lods
daa
push
mov
aam
xchg
xor
cmpsb
sbb
adcl
lods
or
mov
mov
lret
ljmp
ret
adc
lds
inc
leave
sbb
mov
fbld
push
mov
lods
xchg
push
imul
clc
adc
jge
push
movsl
xchg
mov
into
popl
dec
in
cmp
jecxz
daa
push
sbb
dec
nop
xor
outsl
repnz
mov
les
or
lahf
mov
testl
std
push
addr16
notb
mov
lahf
push
sbb
or
outsl
andl
xchg
mov
xor
js
push
ja
std
and
add
imul
inc
pop
sbb
mov
sub
sub
sarb
std
add
or
sahf
mov
out
std
jo
sub
pop
inc
call
fistpll
xor
bound
les
iret
xor
mov
mov
jae
fnstcw
jns
sbb
mov
loope
cmc
xchg
mov
sbb
cmp
outsb
shll
dec
push
dec
ror
call
dec
xchg
sbb
int3
das
cmc
cli
mov
mov
cmc
mov
xchg
jo
mov
dec
pop
pminub
das
xor
xchg
stos
fisubs
cmp
inc
roll
cmp
in
cmp
jge
shlb
cmp
scas
cmp
xor
and
rclb
sub
ret
xchg
add
push
lahf
sub
enter
sbb
xor
dec
push
popf
cmp
mov
push
mov
movsb
mov
fs
in
inc
lcall
xchg
in
dec
inc
das
rcrb
ficoml
pop
loope
jl
push
dec
nop
fadd
aad
rolb
fdivl
les
or
gs
push
mov
popf
and
iret
sarb
sub
push
push
call
jb
xchg
and
lds
or
notl
push
cmpsl
xor
bound
mov
adc
cltd
mov
inc
push
mov
mov
nop
jecxz
into
fwait
bound
clc
loop
js
mov
ja
shlb
sbb
aas
aaa
sub
ret
lods
mov
movsb
das
pop
pop
mov
aaa
cmp
adc
jl
arpl
push
push
and
jmp
cmp
xor
pop
bound
test
pop
shr
outsb
add
xchg
fsubs
test
popf
cwtl
int3
dec
scas
in
js
aam
lcall
lahf
cmc
inc
cmp
sahf
xchg
out
mov
shll
loop
lods
pop
inc
imul
out
pop
leave
mov
xchg
sub
add
rolb
pop
sub
insb
imulb
in
lods
cmp
orl
ss
mov
inc
xor
pusha
test
ud1
cmpsb
mov
je
faddl
andl
xchg
mov
pushf
inc
mov
int
in
cli
mov
mov
in
mov
mov
mov
push
retw
out
stc
inc
je
insl
pop
and
jo
mov
mov
sbb
jb
in
pop
std
lcall
or
mov
or
cld
fisttps
mov
sub
dec
xchg
xchg
insl
mov
xchg
sub
aas
test
test
outsl
repz
push
repnz
push
adc
mov
in
enter
inc
addr16
lret
and
sahf
pop
nop
popf
jg
arpl
mulb
aas
add
stos
xchg
dec
sbb
mov
jmp
push
mov
loopne
xor
and
sub
push
pop
dec
xchg
fcoms
inc
into
push
or
sbb
sub
int3
rcrl
lcall
inc
jge
and
fistl
loop
popf
dec
mov
xchg
lahf
xchg
dec
popf
ds
je
pop
je
push
jae
sub
int
cmpsb
lret
mov
je
mov
push
pop
or
popf
loopne
mov
xor
je
fstl
pusha
jge
mov
jne
push
mov
insb
add
and
in
adcl
pop
daa
add
inc
mov
std
mov
aas
outsl
sub
jle
mov
in
movsl
pop
mov
mov
pop
fsubrl
dec
dec
sbb
ljmp
ds
outsl
or
inc
push
fadds
lock
xchg
out
lahf
dec
dec
jb
xchg
stos
mull
dec
and
mov
test
mov
mov
xchg
shlb
divb
dec
dec
rep
mov
xchg
cld
fisttpl
pop
cmp
dec
mull
cmp
out
test
cmp
mov
outsl
xor
and
jbe
leave
jle
scas
dec
add
cmp
cmp
cmpb
test
sub
jbe
pop
cmp
push
inc
jno
xor
ffreep
repz
mov
movsb
pop
popa
out
mov
xor
add
mov
jecxz
mov
imul
fsubr
push
mov
jecxz
mov
or
or
mov
push
or
sbb
sub
aaa
sbb
mov
mov
and
inc
lcall
data16
outsl
adc
lret
notb
jne
mov
clc
jae
and
pop
mov
mov
enter
sbb
adc
xchg
push
jp
aam
cmc
lods
dec
pushf
add
jbe
jo
cmp
mov
bound
sub
aad
std
cld
in
xchg
pop
mov
pushf
addr16
pushf
or
adc
cmp
fldt
fwait
sbb
leave
mov
mov
arpl
pop
adc
jmp
push
sti
test
int3
jno
xchg
cmp
sbb
lahf
push
jecxz
pop
stos
pop
call
int
mov
jge
jae
inc
mov
or
aas
cmp
shll
sbb
mov
inc
adc
fs
pushf
je
cmpb
das
mov
repz
nop
in
push
mov
adc
pop
adc
pop
adc
sub
stc
xchg
out
loop
adc
push
pushf
jo
out
lock
scas
adc
les
jl
or
fistpl
adc
data16
loope
pusha
cmpsl
adc
aaa
and
fidivrs
xor
dec
sub
jle
adc
xor
jge
and
loope
aam
ja
fsubp
or
cmp
adc
sbb
fistl
aam
xor
fcomip
xor
and
fmull
sti
adc
shrl
icebp
mov
xchg
jmp
add
aam
push
xor
fs
les
ret
pop
inc
add
xor
cmp
sub
test
cmp
mov
xchg
out
call
cmpsb
mov
mov
sbb
adc
add
sbb
ret
mov
test
jno
jbe
push
imul
push
pushw
pop
je
xchg
and
shlb
andb
scas
arpl
inc
addb
xchg
ficomps
jns
and
aas
mov
adc
mov
mov
or
in
arpl
adc
popf
xchg
jns
inc
jae
ja
subb
mov
jb
pop
dec
sti
or
or
jb
repnz
xchg
pop
cmp
mov
mov
adc
mov
fisttps
mov
add
pop
xor
repz
mov
xchg
int
lcall
mov
in
or
sti
je
inc
testb
mov
cltd
cmp
mov
mov
pop
orl
icebp
test
inc
adc
inc
mov
adc
movsl
jbe
dec
imul
cmp
jnp
dec
jmp
out
sub
push
adc
jmp
in
insl
mov
repnz
pop
xchg
inc
push
xchg
mov
dec
sbb
dec
push
cmpsl
addb
add
aaa
stos
inc
lock
or
into
lret
cmp
xchg
repz
out
push
in
pop
scas
sarl
sti
hlt
in
gs
sbb
xor
cmp
mov
and
pushl
loop
push
push
xor
and
mov
or
mov
cmc
mov
cmpsl
ljmp
jmp
scas
mov
mov
ljmp
jb
add
jns
pop
cld
or
addr16
jno
loope
subb
or
adcl
adc
cmp
movsb
popa
inc
fimuls
cmp
pop
jmp
adc
addb
jl
lret
dec
add
stc
out
dec
xchg
out
outsb
lahf
or
inc
push
test
jns
mov
mov
sarl
mov
mov
mov
dec
inc
inc
call
mov
mov
aas
loopne
mov
xor
in
mov
push
jb
lcall
jo
sbb
mov
adc
or
lds
insb
xchg
jl
add
daa
jnp
sub
mov
mov
push
or
popf
into
shll
mul
shlb
xchg
push
jmp
iret
jge
jmp
jns
insb
jp
jmp
push
std
push
adcb
outsl
dec
fstp
stos
hlt
mov
adc
and
push
or
push
pusha
add
pop
fs
outsb
addr16
xchg
and
rorb
dec
in
cmpsb
xchg
lcall
out
lret
inc
cmp
jmp
lds
sub
in
je
mov
jns
in
add
cmp
stc
scas
stc
pop
mov
pop
les
pop
xor
movl
or
cwtl
iret
orb
cmpsl
mov
lret
out
cmp
test
push
cmp
add
adc
jbe
in
pop
add
cmp
loopne
adc
mov
test
and
mov
xchg
call
jno
out
adc
push
test
aaa
xor
mov
add
sbbl
xchg
bsf
pusha
repz
stos
xor
cwtl
and
xchg
enter
js
cmp
pop
mov
mov
mov
xor
xchg
test
and
jl
fsubs
and
mov
orb
loop
std
js
mov
adc
adc
negb
sub
inc
or
push
inc
les
inc
xor
jae
sahf
push
mov
jle
stc
xchg
fisubrs
enter
imul
outsb
jmp
pop
pop
lret
out
push
js
jae
and
into
xchg
adc
push
mov
shl
sti
daa
inc
or
pop
fidivl
jnp
pushf
scas
fstl
dec
sbb
popf
into
pop
jle
aas
subl
fcompl
insl
or
mov
xor
push
adc
jnp
insb
xor
in
dec
pushf
jmp
scas
xlat
jne
jp
orl
adc
hlt
pop
loop
cmp
push
cs
mov
adc
and
mov
and
sbb
inc
push
sbb
lds
xchg
cs
xor
sar
cli
xchg
mov
rolb
mov
jl
add
adc
outsl
pop
testb
mov
lret
mov
insl
push
mov
movsbl
in
ja
dec
scas
cmp
dec
xlat
xchg
test
dec
aas
adc
sub
push
ret
loopne
stos
jnp
pop
and
jb
call
or
xor
xchg
aaa
loope
ljmp
aam
ficomps
inc
ja
sbb
mov
fs
outsl
or
inc
test
ljmp
adc
sub
pop
repnz
int
fisubl
test
lret
popf
arpl
cli
lret
or
faddl
or
ret
mov
arpl
iret
mov
mov
adc
or
inc
gs
test
jp
aaa
sarl
inc
repnz
adc
test
inc
push
pop
mov
inc
or
test
add
xor
addr16
adc
lret
inc
jnp
dec
fiaddl
sub
xor
mov
and
pop
pop
push
cmpsb
jecxz
ljmp
fldenv
inc
pop
jb
pop
xlat
test
mov
jbe
cmovno
mov
pandn
push
pop
mov
subb
sub
push
ljmp
add
loopne
add
scas
cltd
lret
aas
sub
mov
and
jl
inc
jle
stc
aam
cs
sub
pop
in
cli
rcrl
push
iret
fisubs
push
scas
shlb
add
popa
int
js
pushf
mov
add
sbb
mov
mov
out
rclb
aaa
jecxz
and
sarl
shrb
and
fs
xor
sub
fisubl
test
mov
daa
jg
push
jae
test
mov
push
inc
lds
sti
pusha
pop
je
cmp
lret
xchg
xchg
fsubrs
stc
fistpl
cmp
and
into
adc
dec
hlt
fldcw
mov
jecxz
adc
lahf
subl
fucomip
sbb
gs
add
cmp
push
adc
jle
mov
push
popf
dec
inc
push
mov
or
xlat
inc
sub
adc
mov
dec
test
pop
or
stc
push
push
adc
sbbb
call
or
je
sbb
lock
mov
into
xchg
aas
jp
inc
sub
jecxz
sub
mov
fisubl
xor
sub
fdivl
cltd
pop
cltd
and
gs
in
pop
lock
cmpsb
xor
scas
bnd
inc
jp
pusha
call
js
sahf
mov
rclb
mov
xor
std
jne
cmp
loopne
pop
and
out
push
inc
out
pop
enter
divl
mov
or
loopne
aaa
xor
mov
aad
repnz
mov
or
cwtl
and
pop
mov
insl
push
test
in
out
jnp
cwtl
imul
test
pop
out
cld
mov
insl
and
cmp
lahf
pop
test
push
das
mov
sbb
jnp
cltd
mov
mov
push
shlb
sub
rclb
insl
and
je
imul
pushf
push
adc
pop
cmpb
sub
int
adcb
bound
inc
loopne
xchg
xchg
mov
in
repz
add
out
xchg
ret
popa
cs
subl
ret
jmp
add
stc
into
les
addr16
in
int
imul
lods
lcall
inc
add
push
mov
mov
mov
les
inc
jmp
inc
pop
insl
sbb
lahf
jo
out
lods
aad
imul
pop
inc
cld
int3
adc
addl
ficoml
push
mov
inc
fsub
imul
pop
stc
adc
cs
jle
es
dec
fstpt
mov
mov
daa
push
fwait
jl
sbb
push
ret
dec
jb
mov
sti
and
test
xor
outsb
daa
stc
into
cmp
pop
shl
xchg
push
sahf
xor
lds
push
xor
xchg
dec
cmp
sub
scas
in
add
jnp
or
jge
xchg
stos
mov
lock
lods
shl
stos
dec
subl
jmp
mov
mov
in
cmp
or
sti
pop
and
cmp
jo
push
mov
xchg
dec
dec
testb
dec
mov
mov
sti
cwtl
mov
fcomps
sbb
ds
test
push
mov
jns
mov
pop
dec
push
outsl
nop
in
mov
in
sar
push
jge
adc
sub
sub
movsl
or
push
xchg
icebp
or
push
mov
xchg
loopne
sbb
test
mov
nop
cmpsl
mov
and
scas
ret
movsl
loope
cwtl
mov
ds
add
mov
or
and
xor
sbb
cmc
and
stos
mov
pop
mov
pop
cmp
call
pop
add
xor
repnz
outsl
pushl
out
popf
sbb
mov
pop
dec
gs
cmp
lock
sub
fwait
xlat
sub
leave
add
aad
cmp
outsl
cs
test
push
fsubl
mov
push
js
adc
adc
dec
dec
arpl
loope
mov
lea
outsb
lods
je
pop
sbb
jbe
mov
pop
pop
bound
dec
cmp
test
lds
addl
ffree
loope
lahf
fcompl
into
iret
fidivrl
cmp
les
out
call
rclb
cmp
popf
adc
jge
imul
adc
xchg
mov
pop
out
and
test
in
xor
insb
mov
mov
pop
out
ss
push
xchg
push
mov
jne
loop
push
cmp
in
nop
jg
mov
mov
pushf
into
mov
psubw
or
loope
out
mov
push
aad
popa
add
and
and
lock
cmpsb
test
mov
adc
ret
les
orl
cmp
adc
and
pushf
dec
out
or
jnp
sbb
pop
pop
pop
and
cs
inc
iret
imul
pop
in
xor
aas
add
aas
sahf
sbb
lret
mov
dec
out
jo
xor
fsubr
mov
fcoms
or
mov
aad
cld
orl
sarb
test
mov
mov
adc
add
mov
add
sbb
aaa
fcomp
mov
or
fisttpl
adc
lock
loop
iret
lahf
int
dec
push
pop
add
jp
and
push
mov
mov
bound
mov
shlb
xchg
add
dec
testl
outsl
or
xchg
ja
loop
cmp
push
xchg
pushl
mov
insb
test
xchg
cmp
bound
inc
mov
xchg
loopne
pop
xlat
int
add
or
lock
rolb
les
and
jg
xorl
mov
jecxz
loop
push
add
sbb
xchg
lret
add
sbb
inc
push
pop
loopne
scas
call
int
inc
pop
pop
loop
mov
inc
lods
gs
jl
popf
loop
clc
out
cli
rcl
jp
or
movsl
fstl
xchg
ljmp
sub
lea
pop
shlb
ror
out
sub
into
inc
sahf
cmp
jl
pop
loopne
das
stc
dec
ja
movsl
mov
cmp
ljmp
push
pop
in
cld
xor
cwtl
sbb
outsb
or
es
or
popa
push
int3
jae
fstpt
hlt
clc
loop
jmp
into
xor
int3
adcl
lret
shll
test
dec
sbb
mov
das
adc
repz
mov
data16
push
pop
pop
movsl
cld
pop
cld
fisubl
xor
outsb
sbb
cmc
enter
lret
or
add
mov
xchg
add
fistl
xchg
ret
jl
fidivs
jl
push
or
push
lods
dec
call
cmp
cmp
and
mov
pop
jbe
mov
jmp
loop
adc
cmp
sahf
or
or
mov
dec
rcll
mov
sbb
out
xor
xor
daa
or
scas
leave
mov
push
push
out
xchg
mov
mov
cwtl
aaa
xor
pop
xchg
in
mov
ror
cmp
sbb
or
jbe
inc
sub
and
push
cs
adc
xchg
stc
and
jae
test
cmp
xor
push
inc
or
sti
pop
push
aaa
xchg
ss
lret
push
ret
mov
push
fistpl
repz
inc
mov
repz
jno
cs
mov
mov
lods
add
jb
lds
loope
arpl
dec
or
in
mov
pop
adc
mov
arpl
dec
rorb
std
cwtl
fsubr
inc
push
push
xchg
xor
mov
loopne
inc
xchg
aad
mov
add
jle
dec
mov
addr16
xchg
ja
and
pop
sub
iret
push
fndisi(8087
jo
loopne
stos
sbb
out
jbe
dec
xor
add
enter
lfs
mov
testb
push
or
aaa
pop
pop
push
ds
inc
fistps
push
adc
push
xor
stos
mov
pop
loopne
cmp
and
push
loope
sbb
sub
and
inc
inc
inc
dec
mov
and
sub
fimull
out
sbb
add
mov
jmp
lret
push
push
or
add
jge
inc
mov
cli
xor
fneni(8087
sub
and
or
or
out
or
movsl
pop
sbb
call
pushf
sub
jae
mov
bound
cmp
adc
sub
pop
in
out
xor
push
out
sbb
sub
insb
sub
push
xchg
fisubs
or
lcall
fisttpll
pop
push
mov
jae
int
or
push
jae
scas
cli
sub
add
add
jle
enter
orl
in
sub
inc
mov
arpl
test
jb
cmp
xor
pushf
and
cmpsb
leave
fsubrs
movsl
mov
repz
mov
lods
jb
xchg
adc
or
lret
scas
iret
cwtl
jae
sbb
shlb
add
sbb
out
xchg
cmc
insb
and
push
aas
lods
mov
pop
jae
xchg
rcll
pop
arpl
mov
scas
jmp
lock
loopne
adc
xchg
mov
add
push
jp
mov
cmpsl
pop
adc
ja
push
push
test
pop
gs
xor
outsl
cmp
scas
jl
xor
mov
xor
pop
sbb
bnd
pop
jge
pop
imul
push
pop
xchg
pop
inc
gs
in
dec
xchg
adc
sub
mov
fxch
inc
pop
mov
dec
sub
sahf
inc
mov
loope,pt
xlat
cmp
pop
addr16
iret
shr
sbb
loope
scas
cltd
mov
cwtl
xor
lret
push
jnp
sub
mov
jne
je
fwait
push
push
aaa
cld
mov
movsb
addb
mov
into
mov
out
pop
mov
sub
lds
popa
inc
and
dec
cmp
xchg
mov
lock
sarb
je
pop
mov
ret
sub
xchg
cmp
adc
in
adc
mov
out
pop
sbb
mov
in
adc
dec
hlt
aad
push
imul
xor
push
cld
aam
movsb
movsl
jp
or
nop
popf
push
jecxz
arpl
jno
mov
adc
sub
insl
inc
mov
xchg
addr16
out
cmp
mov
inc
mov
xor
adc
movsl
ljmp
dec
dec
out
jns
int3
push
scas
das
cmpsl
arpl
ss
xchg
popf
inc
cmp
xor
mov
out
lods
mov
pop
pop
aas
stos
xorl
test
and
pop
rcl
test
push
xchg
xchg
outsb
shll
inc
push
adc
out
jp
sbb
inc
ficomps
mov
outsb
xor
mov
mov
adc
scas
aaa
loopne
mov
je
jmp
pop
std
cli
enter
cmp
aam
and
xor
lret
add
int3
xor
repnz
push
push
out
adc
mov
adc
lods
dec
jns
lret
mull
or
mov
loop
daa
iret
int3
out
jmp
dec
xchg
es
or
cld
mov
and
orl
xor
xchg
sub
lret
mov
aad
dec
and
jno
dec
mov
arpl
inc
orb
jne
in
or
pop
or
ret
loope
rol
adc
and
dec
and
orl
das
enter
mov
fldt
jl
in
jmp
mov
nop
jae
test
jl
push
jo
mov
cmp
sbb
mov
pop
fadd
push
sbb
mov
sbb
xor
clc
xor
fcomps
popf
mov
repnz
fdivp
cmpb
xor
mov
adc
test
xchg
push
fwait
test
cli
sub
inc
xchg
jno
adc
loop
cmpsl
xor
inc
xor
lret
hlt
push
scas
arpl
das
cmp
adc
or
sub
mov
rclb
mov
push
enter
mov
movsl
pop
inc
in
adc
and
mov
out
push
xchg
xor
pushf
cmp
adc
test
pop
sub
pop
in
std
sbb
sub
mov
mov
inc
fs
adc
push
jg
arpl
pop
mov
xor
imul
dec
ja
dec
jge
xchg
cmp
es
je
in
dec
mov
xchg
sahf
xor
jne
adc
inc
popf
insl
xchg
sbb
hlt
mov
mov
xor
std
out
fwait
aad
or
xor
jo
out
jge
dec
push
jg
sub
inc
cmp
lret
push
or
mov
mov
sub
out
pop
shlb
inc
fcmovu
pop
dec
pusha
aaa
inc
gs
sbb
and
lcall
je
and
mov
mov
jo
cmpsl
mov
cmpb
cmpsl
repz
cmp
imulb
popf
cmp
mov
in
fdivrs
stc
add
mov
sarb
or
mov
mov
push
repnz
popa
mov
cmp
and
mov
cmpsb
xor
lods
adc
insb
pushf
dec
push
movsb
icebp
mov
fildl
push
push
into
std
and
test
loop
push
cwtl
nop
xor
inc
out
sub
cmc
inc
test
push
dec
mov
sbb
js
mov
ja
push
mov
mov
int
sub
xchg
daa
xchg
fs
push
fwait
push
cs
cmp
add
shl
bound
sub
jnp
test
push
xchg
pop
pushf
fists
dec
nop
pop
aam
pop
repz
mov
arpl
fnsave
pop
aam
rcr
out
adc
inc
push
aam
repnz
std
xor
add
insl
shlb
jecxz
xor
xchg
cwtl
clc
add
add
inc
insb
push
lock
xor
jle
lea
test
and
shlb
out
les
negb
mov
pop
das
jbe
and
mov
in
sbb
shrb
mov
xorl
mov
cmp
push
lds
movsb
inc
pop
shll
inc
jae
sbb
or
in
ss
jo
xor
cmp
sahf
jno
insl
fsubr
scas
cli
push
sahf
decb
mov
cmp
ljmp
out
or
sub
movsb
mov
enter
cwtl
xor
push
push
push
add
mov
sub
std
or
pop
push
iret
lock
gs
sbb
xchg
stos
repz
and
int
popf
xchg
arpl
sbb
xor
jmp
jl
jl
inc
movsl
shlb
mov
lods
test
dec
call
dec
ss
cld
lahf
dec
lret
push
cmc
cmc
jns
loopne
movsl
push
je
loop
outsl
out
test
add
pop
mov
mov
dec
insb
sbb
cwtl
call
in
add
ret
test
xchg
inc
jo
mov
sbb
jbe
cli
js
fwait
push
bound
loopne
sub
cmp
std
sub
add
cld
test
add
inc
data16
int
ss
jp
sub
cmp
sub
cltd
push
mov
cs
rorb
pop
adc
sub
into
xchg
jb
iret
xor
int
stos
lret
ljmp
test
cmovns
mov
stos
cmp
icebp
xchg
cmp
sub
adc
xchg
sbb
push
call
xor
mov
daa
xchg
cmp
mov
ret
mov
sbb
pop
in
xor
pop
lret
into
sbb
xchg
addr16
or
rorb
jg
aam
arpl
or
mov
or
loope
push
and
mov
mov
sbbl
sub
das
xchg
out
nop
cli
pop
pop
mov
xchg
push
arpl
ret
jnp
cld
xchg
out
pop
jecxz
fcmove
jne
adc
enter
jae
fimuls
ret
push
movsb
xchg
jp
std
sub
xchg
faddl
dec
xor
cmpsb
jae
xor
xor
inc
cmp
adc
inc
test
std
sub
fisttpl
lahf
movsl
pop
xor
jb
out
cmp
or
test
push
loope
add
je
loopne
sti
mov
test
in
negb
in
inc
cmp
shr
or
inc
add
daa
loop
dec
pop
lods
cmp
mov
adc
adc
mov
pop
cmp
xlat
ficompl
push
scas
shlb
push
sbb
mov
jns
subl
push
xor
mov
xchg
aaa
adc
cwtl
pop
sahf
aaa
ret
sarb
rclb
movsb
push
push
xor
test
push
dec
and
pop
pop
jo
dec
push
xchg
or
call
cmpsb
push
inc
and
inc
push
adc
jns
or
clc
jno
dec
xor
std
mov
mov
fisttpl
jecxz
and
xchg
cmc
into
ja
push
aaa
sub
mov
jp
leave
pop
iret
iret
fisubrs
mov
andb
xor
popl
add
xor
mov
pop
jecxz
xchg
test
jecxz
mov
nop
js
push
dec
cmpsb
pop
fwait
mov
add
lods
cmp
adc
lea
test
jmp
aas
mov
mov
mov
and
jae
out
pop
aam
subl
cmp
gs
or
xchg
dec
push
daa
xlat
mov
add
shrl
test
jne
test
push
lock
stos
lock
aam
sahf
andl
das
xchg
mov
cmp
mov
ljmp
xchg
jmp
ja
and
scas
mov
or
jns
cli
adc
lahf
push
xchg
cmp
sub
push
jmp
jmp
inc
bound
dec
mov
outsl
sahf
or
negl
cld
imul
outsb
or
rclb
test
fistl
jmp
cltd
nop
jnp
xor
lahf
jnp
mov
sbb
sbb
loop
push
jo
lret
in
into
fdivrl
aas
int
pop
out
pop
mov
xchg
inc
adc
xlat
leave
push
imul
inc
and
pop
shlb
div
movsl
cs
mov
jle
mov
mov
mov
pop
push
mov
lret
in
or
ja
inc
mov
cmp
xchg
mov
lock
lock
lds
mov
std
pop
and
fsubrl
shr
cmc
repz
imul
pop
test
cmp
fwait
jb
jg
mov
loopne
pop
sbb
call
cld
outsl
das
or
out
dec
hlt
cmp
lea
lret
rcrb
push
cmp
inc
aad
and
cs
fdivs
jb
lods
jge
adc
sbb
pop
stc
push
movsl
lds
push
push
xchg
push
mov
scas
shl
scas
dec
jg
and
scas
lds
repz
mov
dec
pusha
push
sbb
mov
adc
jne
add
jno
bound
adc
stos
icebp
cmc
mov
add
jae
jae
push
cld
outsl
sub
mov
faddl
in
xchg
mov
enter
xor
sahf
fxch
enter
mov
test
lds
dec
add
lea
dec
stc
pmaxub
dec
sbb
in
sbb
pop
dec
jmp
enter
sbb
and
cmp
sub
fwait
std
scas
fistps
ret
lods
scas
lods
sbb
shrb
push
jle
fbld
mov
cmp
into
into
rorb
or
js
divb
daa
imul
icebp
ss
mov
or
mov
fists
or
rcrl
sbb
out
sbb
or
popa
fistps
lods
in
sahf
pop
popa
jmp
add
inc
jecxz
sub
or
pushf
rolb
dec
daa
cmp
lret
or
cltd
and
pop
test
aas
repz
into
repnz
add
sub
lds
xchg
pushf
and
jb
xor
out
stc
lds
xchg
cmpsl
pop
or
das
mov
sub
or
xchg
addr16
aaa
inc
cmp
mov
es
jmp
mov
xor
dec
sbb
push
fwait
dec
cmp
mov
cmp
dec
jle
ja
cwtl
adc
and
xchg
fsin
sub
outsb
cmp
xor
aas
psubb
xor
ret
fs
and
jle
inc
cs
dec
push
inc
roll
cmpsl
push
sbb
adc
sub
sbb
mov
inc
ja
clc
mov
fildll
push
inc
cmp
push
cmp
sahf
xchg
shrl
jno
popa
add
loope
mov
pop
adc
popf
xchg
mov
popl
lahf
mov
addl
sbb
les
add
cwtl
sub
test
or
test
push
mov
mov
mov
aam
pop
fbld
lods
fidivrl
pop
les
dec
mov
inc
loop
outsb
in
pop
pusha
leave
inc
sarb
arpl
and
dec
cmpb
inc
enter
pop
les
addl
popf
sbb
add
dec
je
pusha
mov
pop
or
jno
into
movsl
adc
cmp
mov
mov
pop
adc
inc
mov
sub
push
jp
sub
pop
jle
nop
mov
gs
sub
mov
insl
add
in
ds
push
or
bound
addb
jmp
shlb
sbb
ret
mov
pop
stc
repz
test
pop
les
lods
clc
movsl
pop
stc
popa
nop
ja
rorb
pop
jnp
pop
lret
push
jnp
ss
push
mov
cmp
out
and
push
fbld
sbb
push
pop
xchg
cmpb
ljmp
pop
jge
sti
and
cwtl
mov
pushf
xchg
aas
sbb
jae
xlat
dec
push
push
lret
cmc
jecxz
mov
add
adcl
repz
xchg
push
addr16
push
xchg
inc
xchg
jne
xor
push
shll
sub
les
mov
mov
lret
stos
add
sahf
enter
pop
mov
aam
fidivrs
jmp
hlt
mov
lock
int
out
adc
lods
out
push
pop
jo
mov
or
adc
inc
mov
xor
sahf
ds
and
inc
lret
inc
mov
dec
leave
lahf
push
movsb
mov
jno
and
popf
cmp
inc
pop
stos
pop
lcall
pop
hlt
ja
adc
mov
insl
outsb
scas
xchg
movsl
adc
out
mov
mov
rcr
loopne
lahf
repnz
push
ss
mov
mov
sbb
adc
xchg
lock
into
push
mov
scas
jb
lods
pop
int3
or
push
add
xor
loope
jne
xchg
mov
push
cli
fisttpll
and
jmp
mov
or
sahf
sub
add
jmp
xchg
sub
push
mov
aam
push
add
pop
xchg
xchg
jmp
cmp
jl
dec
aad
sbb
push
xchg
adc
jne
mov
out
mov
jnp
fstps
cmp
jnp
lods
mov
cmpsl
movsb
xor
dec
xchg
cmpsl
add
push
cmpsl
loopne
int3
jno
cld
push
mov
test
and
cs
push
mov
push
inc
mov
movsb
andl
insl
sbb
push
cltd
xchg
icebp
adc
lds
outsl
jb
mov
add
stc
inc
cmp
out
mov
fidivrl
fs
cmp
sub
in
mov
mov
or
decl
cmpsb
mov
cmp
arpl
jne
arpl
sbb
jo
and
imul
pop
or
int
ss
idivl
bound
ljmp
je
lock
mov
inc
mov
mov
pop
int3
test
sahf
movsl
cmp
mov
adc
push
pop
mov
mov
xchg
mov
in
push
jl
cmp
sbb
cli
push
jmp
cmp
lahf
push
inc
push
jo
js
and
mov
jge
icebp
cmp
mov
ret
cld
mov
adc
popa
aaa
fs
loopne
mov
ja
sbb
or
ljmp
cmpl
inc
xchg
jl
arpl
fs
frstor
jb
mov
stc
add
jmp
sbb
stos
in
das
sarl
push
push
inc
or
data16
int
mov
xlat
sbb
xchg
lcall
mov
pop
mov
jo
mov
out
shll
insb
std
ss
mov
arpl
jg
and
mov
std
pop
jp
mov
cmp
and
jmp
fwait
mov
movsl
pop
inc
cwtl
repz
test
and
int
mov
xchg
leave
cli
xor
cld
es
mov
inc
dec
jnp
adc
add
jge
and
sahf
and
bound
outsl
mov
cmp
dec
pop
iret
outsl
pop
cmp
jg
cmp
pop
jae
test
ljmp
roll
sbb
mov
sbb
pop
inc
stc
int
cmp
in
mov
loope
loopne
pushf
lret
imul
les
pop
dec
dec
js
xchg
popf
shl
pop
outsb
sbb
or
cmp
push
push
sbb
lock
jae
mov
mov
lock
mov
addl
xchg
push
mov
divl
in
mov
push
cmp
pop
push
test
xor
inc
cmp
or
into
sub
add
pop
dec
bound
enter
pop
rcr
imul
dec
fsubs
mov
xchg
hlt
test
ja
imul
mov
push
add
mov
jns
fcmovnb
shl
aas
out
nop
clc
adc
mov
dec
add
inc
aam
hlt
jnp
shlb
pop
cmpsb
js
inc
arpl
push
push
jae
aaa
scas
out
fnsave
mov
into
sbb
pop
out
fmull
and
dec
scas
cmp
sti
inc
in
push
sbb
mov
pushf
mov
or
adc
imul
imul
fnstsw
sub
cwtl
adc
fwait
inc
cmp
push
clc
mov
bound
imul
fdivl
inc
add
adc
inc
fisttpl
dec
push
xchg
push
mov
out
pop
xor
mov
xorl
loopne
jno
andl
sbbl
mov
gs
or
insl
incb
pop
cmp
fidivl
mov
inc
jb
nop
push
repz
outsl
sub
xlat
cltd
fcmovne
mov
inc
scas
fistpl
cmp
and
pop
es
cmc
mov
pop
fcomp
mov
lcall
xchg
dec
mov
push
nop
pop
ret
orb
jle
adc
sbb
adc
push
gs
push
add
jmp
lock
mov
inc
and
in
mov
bound
sub
jae
jne
fwait
lcall
or
ja
adc
out
sub
out
rclb
orl
insb
insl
std
mov
push
jno
mov
dec
xchg
cmp
cmp
xorb
sahf
pushf
rcll
fsub
inc
add
imul
les
aaa
ror
push
xorb
mov
shll
sub
dec
test
mov
out
fcoms
or
arpl
cli
xor
or
sub
sub
pop
ret
popf
mov
out
in
cmp
insb
pop
mov
push
outsl
pop
flds
jge
ss
dec
mov
ret
mov
fld
lcall
outsb
loop
jp
mov
insb
mov
lds
shrl
ss
add
and
add
and
cmpsb
mov
data16
jle
and
es
icebp
push
mov
pusha
pusha
pop
mov
daa
or
sbb
cmp
test
inc
sarl
sub
out
je
int
sbb
mov
outsl
in
jmp
add
sbb
mov
mov
xchg
flds
ret
cwtl
lods
inc
sub
fidivs
and
mov
or
int
aas
out
fstpl
add
imul
stos
pop
outsl
sbb
inc
xchg
das
mov
int3
in
pop
adc
mov
jge
sub
and
outsb
jl
jl
inc
fsubrp
pop
xchg
hlt
adc
int
lds
push
lock
inc
cltd
data16
rorb
mov
sub
xor
push
imul
rcrl
sbb
xor
sbb
or
stc
repz
adc
imul
out
jmp
xchg
insb
aas
or
sub
fsubrs
fistl
aaa
push
sti
iret
sbb
push
out
cmp
scas
cmpsl
and
inc
aad
sub
insl
ds
les
pusha
jg
mov
test
rolb
xchg
mov
repnz
pushf
lcall
jno
xchg
mov
int
cltd
cmpsb
fcmovnb
cmpsb
fbstp
pop
popf
add
sub
sbb
jl
outsb
lret
leave
sub
adc
jl
mov
add
std
add
push
dec
les
lcall
xorb
push
jae
outsl
cld
test
int3
or
mov
flds
pop
je
push
jmp
or
insb
jl
push
sub
out
in
mov
mov
in
push
ret
popf
repz
xor
mov
cmp
cmp
rorl
test
xchg
sub
xchg
pop
push
adc
mov
xor
mov
push
xor
pop
or
xchg
sub
mov
ss
push
rcrb
push
jp
mov
cmp
xor
and
xor
int3
sub
dec
outsb
jo
pop
add
loope
mov
xchg
cltd
push
adc
cli
sbb
cmpsb
cltd
outsb
jle
rorb
lret
test
ss
push
xchg
lds
addr16
das
ret
cli
lret
jb
push
adc
xor
test
cmp
jnp
pop
adc
fs
jg
adc
mov
neg
dec
adc
cmp
call
loopne
addb
jmp
cmp
jne
fdivrs
xchg
jle
pop
or
ror
xchg
aaa
inc
inc
sbb
inc
add
jg
and
xchg
lcall
ds
lahf
sbb
cmp
inc
mov
int3
sub
lahf
inc
mov
mov
ret
imul
lods
push
leave
inc
cs
sub
mov
leave
lcall
xchg
in
cmp
dec
xchg
loope
outsb
aas
repnz
add
into
cld
movsb
imul
jecxz
insl
in
or
xor
mov
fisubs
jl
pop
mov
mov
xchg
mov
jmp
or
sbb
push
out
insl
lock
push
mov
xlat
leave
jp
ss
sub
inc
out
popf
adc
and
pop
mov
pop
decl
std
popa
cmp
mov
pop
loope
push
popa
ror
jns
fstpl
movsb
xlat
test
faddl
sahf
jge
imul
enter
test
cmp
mov
mov
cmc
call
add
sbb
lahf
push
ljmp
stos
xchg
adc
negl
push
test
pop
inc
int3
pop
mov
fildl
orb
dec
mov
or
or
dec
push
push
inc
ret
popa
ret
jne
aam
xlat
dec
jmp
sub
sti
dec
pop
popf
xor
call
xchg
sbb
pop
jl
mov
ja
dec
out
mov
xor
nop
mov
and
mov
mov
mov
movsb
repnz
pop
mov
sbb
mov
push
push
jne
push
add
sub
cld
inc
cs
lcall
xchg
ds
nop
mov
xor
dec
lock
fsubl
inc
insl
cmp
xchg
in
xchg
mov
sahf
int
xchg
mov
or
clc
lret
xor
aas
push
mov
and
adc
fwait
in
popf
lock
mov
mov
add
and
sub
cmp
pop
lret
mov
stc
lock
imul
cltd
out
pop
xor
inc
bound
adc
psubsb
in
xchg
out
fstpl
fidivs
cmp
mov
pop
aam
inc
daa
jg
lret
xor
daa
adc
ss
filds
movsl
push
and
jl
daa
cmp
mov
adc
xorl
and
jmp
dec
sub
or
pusha
lea
pop
pop
fistl
jmp
push
movsl
mov
pop
xchg
fwait
push
mov
sub
ret
inc
enter
repnz
sbb
jp
cmc
inc
and
jno
sarl
sbb
push
add
andl
mov
fndisi(8087
jecxz
add
cli
shlb
iret
adc
dec
shll
push
cmp
mov
shlb
sbb
gs
insb
cmp
sbb
lds
inc
dec
sti
jno
sarl
xchg
jg
add
in
cltd
pop
and
dec
rol
lcall
hlt
jo
sub
imulb
clc
mov
add
mov
push
xor
mov
or
xlat
jns
in
mov
dec
cmp
jp
pop
cmp
add
lods
arpl
add
ret
or
xchg
ljmp
inc
movsl
xchg
std
mov
mov
cld
or
movsl
cmc
mov
out
lea
xchg
rcrb
jecxz
sbb
loop
sbb
decl
add
insb
fnstcw
mov
sbb
xor
bnd
std
shlb
int
ds
push
add
jo
aad
stos
lods
lahf
ja
and
mov
mov
arpl
push
mov
mov
aad
xchg
ja
in
aad
xor
jge
jg
dec
mov
mov
in
cmpsl
push
aas
imul
sub
out
addr16
lret
dec
out
pop
mov
orl
mov
jo
jbe
shl
pop
lock
insl
std
repnz
es
into
push
sbb
fwait
lods
jne
cmp
jbe
xchg
jle
ret
movsb
rcll
cli
mov
or
push
push
mov
xor
mov
xor
push
lret
scas
mov
cmp
sbb
push
lods
xchg
and
sub
xchg
mov
jg
inc
icebp
into
ret
lret
xor
push
push
es
stos
stc
jne
mov
idivl
push
and
lahf
push
pop
sbb
xor
outsl
jnp
loope
cmp
cmp
fistps
loope
dec
cmp
xchg
pop
out
aad
test
lds
cmp
jns
jae
push
out
movsl
inc
cld
call
xchg
dec
enter
leave
jl
mov
les
rcrb
push
dec
add
in
repz
add
or
fldt
arpl
lods
mov
xchg
or
mov
push
or
xchg
pop
mul
or
cwtl
leave
fwait
pop
out
and
jb
andb
xor
jnp
pop
xchg
ds
jg
aaa
fdivl
daa
inc
sub
pop
mov
lods
lahf
mov
jnp
push
sub
gs
in
xchg
icebp
es
lds
pop
loope
dec
aam
aam
mov
dec
xchg
mov
popa
fs
jno
call
mov
mov
arpl
xchg
jp
and
jno
cli
xchg
mov
add
xlat
leave
cmpb
jae
call
sbb
inc
pop
jae
dec
pop
nop
xor
inc
add
cmp
shlb
insl
adc
aaa
cmpsl
mov
lods
bound
xchg
push
out
mov
pushf
lea
lock
outsl
jg
test
movsl
jno
xchg
mov
nop
out
push
push
sbb
bound
stos
ss
dec
fs
jo
hlt
dec
inc
inc
aam
mov
push
dec
mov
jmp
lock
roll
call
mov
jbe
sub
imul
stos
bswap
xacquire
mov
orl
mov
test
jo
ret
sbb
xor
jb
test
adc
andl
xchg
ss
popf
outsb
out
push
lret
rolb
cltd
lahf
fdivs
jmp
stos
out
sub
jg
int
bound
cmp
cmpsb
jae
icebp
loope
push
insb
getsec
push
sbb
or
ljmp
mov
repnz
inc
push
adc
adcb
adc
test
data16
outsb
out
orl
cltd
or
add
es
jmp
mov
bound
data16
push
fwait
push
ss
mov
pop
jnp
insl
and
jmp
popf
scas
cmp
dec
inc
dec
dec
dec
pushf
stos
out
fiaddl
lahf
pop
xor
cmc
scas
dec
scas
js
dec
ds
lds
out
sarl
fs
jbe
xor
jmp
or
test
xchg
mov
neg
les
jbe
aaa
sub
lds
jo
xor
push
mov
add
call
xchg
xor
mov
sub
sub
jge
push
push
mov
pushl
xchg
sub
xchg
negb
adc
scas
mov
aaa
pop
out
test
fxch
ret
sub
popa
stc
push
stc
popa
mov
iret
jg
push
pop
fsubrl
mov
out
lcall
and
push
sbb
addr16
xchg
cltd
push
and
sti
outsb
ret
cld
mov
jl
pop
lods
ss
jecxz
push
jo
rol
iret
mov
inc
pop
cmp
stos
test
arpl
repnz
lock
push
fisubl
inc
imul
jb
xchg
fxch
test
mov
sbb
je
mov
fisubrl
xchg
jns
mov
jb
rep
loopne
xchg
cmp
inc
push
aad
adc
jg
inc
std
add
jns
shr
mov
mov
in
sub
mov
adc
loopne
lds
mov
dec
mov
push
repnz
and
popf
sahf
aad
add
xor
add
loopne
lods
es
ds
jne
and
shlb
add
inc
mov
jge
test
push
or
outsl
jo
cmp
or
dec
xor
stos
xchg
imul
popa
mov
sahf
cli
ret
in
out
fimull
mov
or
pop
data16
lods
or
and
or
xchg
add
mov
push
mov
sub
xchg
xchg
add
repnz
data16
pop
pop
mov
jp
xor
negb
iret
adc
push
fistps
popf
mov
lea
add
ja
pop
or
lcall
pop
fistpll
js
aad
lods
xor
sti
mov
pop
push
mov
dec
ss
mov
sahf
xchg
mov
xchg
sahf
adc
sub
rorl
aad
xor
mov
stos
clc
out
vmovaps
mov
mov
cmp
imul
sbb
add
jno
fchs
xchg
loopne
das
rcrb
iret
inc
pusha
push
sbb
and
or
sbbb
ljmp
or
inc
jae
out
add
call
out
popf
pmaxub
adc
repz
aaa
sarb
cmpsl
sub
jecxz
jle
in
scas
push
iret
push
lahf
lret
and
lahf
shrl
xchg
pop
add
jmp
mov
and
js
sahf
dec
lret
xor
in
jmp
jae
inc
cmpsb
push
or
mov
sub
and
test
mov
mov
add
rcrl
cmpsl
sbb
fsubrs
xchg
dec
xor
cmpsl
pop
cmpsb
mov
mov
mov
fimuls
cld
nop
jl
dec
sbb
add
sbb
or
and
cltd
xor
push
loopne
cs
jg
push
je
sbb
pushf
arpl
cwtl
push
pop
push
aam
inc
call
shl
lcall
data16
hlt
out
popa
push
bound
jle
aaa
cmp
push
jecxz
lds
and
sub
test
inc
daa
loop
cmp
addb
xchg
push
cmc
jl
sbb
rcrb
pusha
cmp
mov
data16
mov
sub
fistl
int
es
mov
dec
mov
mov
xchg
fmulp
or
imul
mov
es
ss
cmpsb
ror
pusha
push
popa
notl
pop
sbb
call
xor
lahf
pop
fnsave
xorb
js
call
call
pop
pop
sub
jb
test
adc
cmp
adc
pop
or
mov
dec
add
dec
inc
mov
pushf
inc
popa
enter
pop
fists
repnz
cld
aam
add
xchg
into
shr
inc
or
inc
pop
pusha
mov
repnz
pop
and
notw
aas
lcall
inc
rcrb
negl
jg
sub
fbstp
lahf
pusha
sti
addl
ljmp
mov
stc
cwtl
add
in
or
aas
pop
xchg
sahf
mov
or
hlt
jg
pop
or
repnz
push
mov
xchg
arpl
mov
movsb
pop
ror
mov
inc
inc
mov
inc
adcb
rorl
jb
outsb
je
bound
sub
dec
mov
test
ja
dec
and
faddl
leave
push
dec
xchg
test
push
aad
pop
sub
decl
dec
inc
ljmp
fs
std
dec
jp
rclb
xchg
lock
fsubrs
in
js
mov
lock
std
stos
sbb
xchg
loop
inc
pop
mov
cmpsl
mov
sub
sub
adc
inc
cmovnp
inc
jg
stos
lds
dec
fnstenv
out
rcll
cltd
mov
pop
rcl
mov
inc
das
pop
loope,pn
push
lcall
inc
sub
inc
xchg
jg
jg
daa
aas
jp
cmc
dec
jle
mov
roll
inc
cwtl
js
imul
mov
stos
mov
xor
cmp
and
xor
xchg
add
xor
jmp
js
inc
cmp
loopne
mov
popa
jmp
insb
insb
fwait
iret
das
repnz
cmpsb
xor
aaa
mov
sub
dec
xor
ret
pop
push
jmp
mov
jmp
aam
test
add
jp
jae
mov
mov
mull
jno
lret
in
sub
loopne
mov
lock
dec
mov
sbb
into
pushf
sbb
out
rcll
daa
push
and
in
into
push
mov
mov
fnstcw
push
xchg
cwtl
push
push
stc
out
or
adc
dec
rolb
jl
lods
test
out
pop
jg
in
mov
jg
or
test
mov
sbb
cmp
daa
mov
in
shlb
lahf
out
lret
push
xchg
dec
arpl
cmp
stos
adc
dec
out
mov
stos
fnsave
ds
mov
mov
pop
stos
sbb
cld
in
push
scas
jle
arpl
push
icebp
mov
data16
xchg
in
inc
in
jb
push
mov
xor
bound
and
in
adc
jmp
or
pop
sub
insl
xchg
fdivrs
lods
mov
imul
pop
sbbl
push
shr
xor
add
test
sub
pop
ret
jnp
dec
addl
xchg
cmpsl
mov
cli
push
push
sbb
mov
negl
shl
scas
popf
sbb
jecxz
in
mov
jmp
movsb
les
in
or
xor
dec
inc
and
jns
sbb
daa
stos
or
clc
sbb
pusha
push
or
movsb
jmp
lret
add
jns
add
sbb
les
jg
adc
pop
cmc
dec
in
mov
push
and
cmp
sub
inc
aaa
add
xchg
mov
inc
sti
adc
fisttpl
idivl
or
push
lcall
mov
repz
imul
out
cltd
js
jns
adc
or
push
insb
stos
push
lods
aas
cmp
rorl
dec
push
out
pushf
sti
roll
pop
xor
lods
rcrb
or
xchg
por
stos
out
add
inc
test
sbbb
jae
shlb
leave
jb
xchg
stc
lods
xor
popf
out
inc
xchg
sub
dec
movsb
lret
add
lret
fiadds
std
pop
xor
and
and
mov
popf
mov
test
jnp
pop
pop
push
cltd
daa
in
mov
xchg
pusha
aad
adc
xchg
mov
leave
mov
cmp
dec
or
pop
repz
mov
cmp
xchg
loope,pn
iret
jp
popf
xor
std
dec
lcall
in
pushl
push
cmp
jbe
and
std
xlat
mov
sahf
pop
sbb
in
rcll
pop
jle
daa
fdivrp
mov
push
in
dec
or
xchg
outsb
cmp
dec
fwait
mov
fcomps
iret
out
lret
mov
jg
hlt
sahf
push
aad
xorb
aaa
ret
rorb
adc
dec
cmpsb
subb
sbb
or
jnp
adc
sahf
iret
shlb
push
add
ja
or
call
repnz
fiadds
or
mov
daa
in
mov
cmpsb
pop
push
sbb
rcrb
dec
mov
xchg
test
pop
dec
and
or
push
dec
push
xor
pop
push
xor
in
pop
xchg
mov
jo
inc
adc
lcall
mov
push
mov
cmpsl
imul
test
ret
add
cmp
jecxz
mov
mov
mov
push
ds
dec
mov
adc
cmpsb
xchg
std
sbb
aad
sbb
add
je
scas
mov
cli
ret
imul
pop
jp
ss
les
mov
pop
and
insb
push
dec
pop
xchg
mov
inc
out
fbstp
rcrl
pusha
ds
sbb
gs
iret
push
cli
mov
or
adc
xchg
jo
sahf
aam
xor
test
cmp
jbe
fisttpl
mov
ljmp
mov
jg
or
lods
lret
cmc
mov
shlb
mov
cwtl
xor
sbb
in
shrl
xchg
add
in
icebp
mov
fs
add
pop
xlat
iret
inc
jl
cli
inc
stc
ds
xchg
in
mov
arpl
fildl
test
inc
jnp
pop
or
aaa
pop
lahf
arpl
cmp
add
lock
into
xor
popa
addr16
ror
ret
adc
add
std
jnp
inc
cld
lods
lds
sub
sahf
sub
sub
push
paddb
jl
add
mov
rorl
and
xchg
add
out
or
outsb
jg
les
add
inc
cmp
fwait
dec
sbb
enter
jns
ficomps
dec
mov
jo
rolb
add
ret
pop
adc
daa
adc
and
mov
cmp
test
dec
cwtl
insb
je
ds
aad
test
push
insb
iret
dec
mov
pop
repnz
out
shl
push
int
pop
jg
lods
out
jle
and
mov
repnz
inc
jecxz
dec
inc
adc
mov
pop
outsl
popf
pop
icebp
sahf
fcoms
in
add
xor
lea
mov
or
out
arpl
dec
mov
imull
icebp
xchg
mov
setno
popf
jbe
xchg
pop
loope
push
xchg
fisubs
jecxz
or
rcrb
in
xchg
ficoml
in
xor
sub
jge
add
lcall
pop
mov
cmp
push
into
mov
jno
lret
ret
and
lret
mov
arpl
xor
mov
mov
leave
out
scas
or
cmp
inc
mov
mov
dec
dec
inc
xchg
in
dec
aam
in
clc
in
push
sbb
pmaxub
push
fildl
negb
or
leave
or
stos
ds
call
lock
xor
stc
lahf
xor
cmp
clc
jmp
inc
and
cli
in
insl
shlb
dec
mov
sub
es
and
mov
xor
aas
mov
cwtl
cli
sbb
sub
sbb
repz
dec
js
pop
mov
cmp
and
loopne
xor
jecxz
and
push
shll
cmp
jmp
xor
cmp
jnp
lahf
add
mov
cltd
loope
test
stos
fiaddl
mov
loopne
pop
adc
bound
fs
and
jl
jne
xor
push
int3
outsb
out
or
add
jae
jbe
and
loope
push
xchg
push
dec
inc
leave
cli
stc
std
xchg
sti
sub
or
cltd
and
lock
pop
xor
lret
scas
ljmp
daa
inc
test
push
push
pushf
pop
test
inc
test
inc
pop
xor
daa
jge
jns
daa
ficomps
ljmp
sahf
push
divb
fdivrs
ljmp
push
sbb
jns
jns
and
xor
add
xchg
stos
sub
jne
and
push
mov
mov
mov
and
push
cmc
sbb
cmp
fiadds
mov
mov
mov
jge
loop
insb
lahf
int
jp
cld
sbb
popa
nop
xor
adc
push
jo
enter
inc
xchg
xor
int3
sbb
xchg
jo
mov
cmp
mov
std
pop
int3
inc
popf
gs
xchg
xchg
insl
mov
pushf
rorl
scas
popf
dec
xchg
adc
das
aam
sub
or
cli
mov
outsb
inc
insb
sub
add
ffree
cmp
cmp
test
loopne
jnp
adc
lahf
or
pop
xchg
daa
out
push
jp
pop
imul
out
add
call
or
ficoml
stc
call
xor
cmp
mov
lahf
push
sub
push
mov
ficomps
or
xchg
jg
arpl
stc
cs
pop
dec
jbe
mov
cld
pop
nop
stos
mov
inc
mov
lahf
mov
add
icebp
lcall
xchg
xchg
paddq
pop
cmp
xor
mov
cmp
jl
loopne
and
sbb
fldcw
cmp
stos
lret
loop
cmpsb
loopne
insb
je
enter
ljmp
jb
xchg
sub
pop
outsl
movsl
dec
fdivp
mov
mov
into
xorb
dec
daa
mov
sbb
popf
ficoms
jle
movsb
les
xchg
loopne
scas
lea
or
mov
cmpl
roll
mov
or
sub
ss
sub
mov
or
xlat
xor
rorb
jb
repz
repz
xchg
test
test
adc
mov
ret
test
lahf
pop
sbb
jg
stc
icebp
cmpsl
cmpsl
push
mov
sub
sarl
push
and
dec
mov
and
rclb
ljmp
jae
sub
jecxz
sbb
mov
inc
fists
mov
jno
scas
mov
test
jb
mov
sbb
into
mov
sbb
sub
icebp
ds
cmp
call
std
loope
mov
ja
sbb
into
mov
mov
sub
insl
push
jl
cltd
xchg
dec
jo
out
add
pop
ds
adc
xchg
xor
mov
fisubl
xchg
or
mov
fdivp
mov
into
cltd
xchg
int
div
stos
rcll
fdivl
out
std
sub
mov
mov
fistpll
pop
add
add
and
aad
sbb
or
dec
loop
nop
push
add
pop
addr16
xchg
in
pusha
or
xor
cld
insl
xor
out
stos
dec
fimuls
hlt
test
add
imul
mov
icebp
out
ret
jmp
sub
outsl
adc
bound
mov
fbstp
scas
push
adc
sub
idivl
pop
subl
popf
lcall
mov
nop
inc
enter
sbb
jp
cs
std
insb
inc
pop
lods
les
call
iret
pushf
lds
in
out
mov
pop
repz
inc
jl
repz
push
adc
dec
adc
cltd
ja
jns
add
and
and
sub
ret
cmp
insb
push
mov
fdivr
push
or
push
jmp
xor
cltd
cmp
lcall
addr16
test
andb
pop
add
icebp
pop
pop
or
sbb
icebp
hlt
stos
aaa
and
xorb
in
inc
dec
dec
movsl
sahf
cmp
lcall
scas
add
adc
xchg
push
cmp
add
inc
sub
aas
mov
shrb
sub
pop
sub
and
dec
fisubs
mov
jp
xor
cmp
lea
mov
lock
fsts
fwait
ds
arpl
ja
icebp
inc
es
out
ljmp
sub
sbb
stos
cltd
cmp
xor
and
mov
fdivrl
mov
push
lods
pop
push
jb
pushf
sub
inc
xchg
or
add
push
xor
into
adc
dec
adcl
rcl
jle
into
xlat
into
or
mov
fwait
mov
cmpb
sbb
in
shlb
mov
jnp
nop
xor
sbb
jl
jne
mov
out
iret
clc
push
roll
int
mov
or
cs
xchg
rolb
dec
arpl
faddl
pushf
add
jecxz
adc
pop
push
fstl
xor
jnp
cmp
push
imul
cmp
popa
cltd
rolb
jmp
xlat
xor
push
or
in
jno
loopne
jmp
icebp
mov
xchg
sbb
clc
dec
jbe
cmp
cs
cmp
inc
popf
dec
and
subl
aad
pop
fisubs
mov
cli
hlt
mov
clc
xor
loope
mov
mov
ljmp
mov
or
jecxz
sub
lcall
pop
test
mov
mov
add
fadds
arpl
addr16
in
sbb
movsl
cld
sub
sahf
loopne
pushf
dec
andb
loope
sub
stos
adc
pop
add
in
push
leave
mov
pusha
cmpsb
in
outsb
inc
lock
mov
mov
xor
inc
add
mov
movsl
sub
cmpsb
arpl
idivl
add
ds
aam
sbb
mov
lea
sub
mov
pop
shrb
shll
and
adc
adc
jo
xor
aas
sub
icebp
push
stc
adc
repnz
pop
push
mov
js
adc
hlt
push
scas
lods
cmp
fwait
xchg
aas
xchg
push
and
pop
and
mov
push
movsb
sbb
pop
cs
mov
repz
out
mov
lods
jge
add
aas
xlat
jno
push
sbb
xchg
ficoms
nop
cltd
cmc
rorl
inc
cmp
sub
dec
ss
sbb
loopne
hlt
loop
push
addr16
jge
cmpsb
jno
aad
shl
pop
mov
shl
jae
imul
push
pop
flds
mov
push
jmp
pop
je
out
jne
fnstcw
cld
addb
xlat
stos
mov
add
lret
mov
mov
jle
insb
stos
push
das
mov
push
adc
sahf
pop
sbb
pop
dec
push
mov
sbb
jae
sub
mov
lahf
pop
mov
or
lret
movb
cli
out
shlb
stc
inc
cmp
repnz
call
into
inc
mov
cmp
test
xchg
in
pop
scas
nop
scas
xchg
xchg
imul
mov
or
loope
or
scas
pop
cld
xchg
xchg
cmp
pusha
dec
es
jecxz
dec
lea
ficomps
std
push
mov
cmp
add
fimuls
sahf
int
loope
dec
xchg
pop
test
mov
ds
xchg
cli
cmp
cmpl
pop
xor
cmp
push
jecxz
shl
aam
jne
in
fdivr
sbbb
and
push
and
mov
mov
mov
xchg
dec
jg
inc
or
scas
cld
popl
in
pop
jmp
mov
into
scas
fildl
pusha
sbb
lcall
std
fs
xchg
leave
xchg
mov
aam
aaa
dec
aaa
popf
jo
dec
sbb
xor
addr16
dec
and
icebp
dec
ret
mov
in
mov
rcll
xchg
and
jge
jle
push
push
inc
cld
adc
fmull
adcb
cld
ds
mov
mov
inc
rcrl
pop
aas
add
add
push
jge
out
icebp
sarb
nop
testl
ljmp
xchg
lcall
movsb
shl
sbb
sub
in
xor
jo
scas
out
aaa
out
jns
cmc
insb
fistl
jp
cld
jno
xchg
xor
push
mov
dec
jge
aad
add
and
xor
add
hlt
outsb
and
push
pop
hlt
jne
dec
cld
xchg
repnz
sub
pusha
sbb
inc
mov
sbb
sub
pop
xor
xchg
loop
pop
mov
ret
mov
loopne
cmp
mov
insb
filds
inc
jg
sbb
int3
lds
into
pop
jl
repnz
cmp
sbb
add
add
xchg
bnd
lret
daa
push
sub
mov
cmpsb
leave
sub
stc
and
or
movsb
in
mov
add
inc
mov
fidivl
std
mov
adc
jge
and
fdivrs
and
nop
fcoms
fsubr
repz
arpl
push
and
xchg
out
in
mov
rcr
xor
mov
and
adc
notb
movsb
jb
shlb
jmp
mov
mov
test
out
mov
into
mov
inc
sarl
je
sub
cmp
test
stos
pop
jb
test
outsl
xor
mov
or
mov
lock
imul
test
mov
fld
push
mov
ja
idivl
xorl
lret
rorb
add
sub
mov
push
inc
es
loop
cmp
mov
sbb
test
int
leave
pop
repz
inc
leave
cmp
mov
mov
mov
mov
xor
inc
cmp
dec
mov
insl
pushl
sub
push
sbb
je
repz
mov
pop
mulb
loope
xlat
mov
enter
push
in
leave
and
push
mov
jno
arpl
orb
repz
mov
sbb
arpl
idiv
loop
clc
psubusw
addr16
fisubs
add
and
push
loopne
or
lea
sub
mov
jbe
lret
xchg
inc
ss
addb
stc
xchg
mov
adc
adc
lods
and
out
repnz
shlb
push
ljmp
ret
stc
in
fistps
divl
and
in
fcompl
mov
pop
adc
sub
fistps
dec
out
fldcw
or
rcrl
add
repz
mov
push
std
fmuls
jbe
xchg
cmpb
int
imul
fidivrs
add
dec
insl
popa
shlb
push
adc
add
ja
fidivrs
xor
mov
cmp
mov
pop
pushf
mov
sbb
mov
mov
mov
sbb
push
lea
gs
orl
scas
sub
dec
es
add
cwtl
popa
xchg
push
insb
fs
mov
xor
outsl
push
cmc
pop
decl
aaa
adc
sbb
adcb
push
jp
or
pushf
js
out
popa
std
inc
aam
cld
cmp
out
dec
inc
ljmp
cmp
push
cwtl
inc
pop
pop
jno
xor
lods
movsb
sbb
adc
adc
stos
roll
pop
adc
loopne
idivb
push
cmpsl
nop
mov
fsubl
repnz
dec
pop
rolb
cmpsl
dec
dec
aad
mov
ljmp
pop
xor
std
int3
sbb
aaa
daa
cmpsb
mov
loop
aad
insb
push
mov
lds
add
inc
cmpsb
movsl
jae
out
xchg
in
arpl
mov
dec
sub
in
mov
pop
rcrb
fldcw
addl
cmpsl
jo
xor
imul
cmp
out
cmp
mov
repz
inc
shld
mov
mov
hlt
jnp
push
inc
lock
dec
aam
loopne
push
sub
rol
ds
xor
or
mov
out
xchg
sbb
inc
pop
pop
jmp
enter
imul
dec
js
movsb
pop
ja
pop
aam
jg
arpl
push
mov
inc
ja
pop
loop
pushf
xchg
cmpsl
xchg
int3
xchg
push
js
push
mov
dec
scas
xchg
bound
adc
push
jae
mov
loop
pop
cmp
lods
movsb
mov
lret
decb
aaa
gs
sub
sub
in
scas
fdiv
dec
stos
in
push
pop
into
inc
fwait
cmp
pusha
fadds
call
hlt
insl
js
rcll
in
xor
push
ss
push
call
inc
sbb
push
sub
fidivs
or
lret
int3
push
mov
jb
pop
into
mov
mov
nop
dec
into
aad
addl
jl
movsb
sbbl
mov
or
mov
es
scas
sub
sub
xchg
mov
mov
stc
jns
xchg
lea
lahf
mov
jns
fcmovbe
sub
sub
js
popf
arpl
jge
xor
stos
sti
xchg
loop
mulb
jnp
xor
jmp
adc
jmp
out
cltd
push
sub
add
fidivs
pop
lcall
fdivs
lahf
sbbb
xor
mov
decl
jle
push
jmp
add
dec
sbb
mov
adc
push
lret
dec
fstps
dec
into
imul
call
scas
push
cmpb
mov
cwtl
jp
int3
add
aam
leave
pop
insl
or
mov
jl
cmp
xchg
add
xchg
outsl
push
loopne
shll
movsb
mov
and
clc
fisubrl
in
fildll
lret
out
es
mov
fsts
je
adc
or
pusha
pop
subb
insb
es
pop
or
xchg
xchg
cli
push
jb
or
imul
insl
into
mov
pop
ljmp
pusha
lods
into
mov
xor
add
subl
test
mov
test
stos
sbb
pop
daa
jecxz
pushf
js
shr
xchg
decl
or
imulb
dec
aaa
outsl
cmp
mov
push
rcl
addl
lods
mov
push
pop
and
shl
add
add
add
add
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
nop
xor
inc
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
add
mov
add
add
add
adcb
add
push
add
add
add
add
add
add
add
or
add
add
test
add
sub
add
add
add
nop
add
addb
add
or
add
xchg
adc
add
add
add
addb
add
or
add
add
add
xchg
decb
add
add
add
sbb
add
inc
add
addb
add
or
add
add
add
xchg
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
roll
in
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
sbb
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
dec
add
je
and
inc
add
insl
add
jne
outsb
add
arpl
popa
add
add
outsb
add
and
inc
add
jb
jo
add
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
add
popa
add
insb
add
and
inc
add
outsb
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
data16
add
add
add
imul
inc
add
jb
outsl
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
call
add
add
aam
add
add
cs
add
add
cmp
add
inc
aam
add
add
data16
add
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
outsl
jae
push
jb
arpl
add
jae
imul
