push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
call
add
add
add
pop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
call
add
add
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
call
add
add
add
xor
mov
mov
pusha
call
add
add
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
call
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
call
add
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
je
mov
sub
jg
mov
je
popf
pushl
pop
dec
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
call
add
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
call
add
add
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
call
add
add
add
add
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
or
xor
add
cmp
je
add
xor
movl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
call
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
call
add
add
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
call
add
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
call
add
add
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
call
je
add
cmpsb
and
add
and
add
and
add
and
add
add
push
and
add
add
loopne
add
mov
add
and
add
fisubl
add
int3
and
add
and
add
add
and
add
and
add
and
add
add
add
add
bound
add
jle
add
pushf
and
add
and
add
and
add
and
add
add
cmp
add
adc
add
sub
add
ret
add
add
add
and
add
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
test
add
dec
and
add
add
add
add
and
add
and
add
and
add
add
push
and
add
add
loopne
add
mov
add
and
add
fisubl
add
int3
and
add
and
add
add
and
add
and
add
and
add
add
add
add
bound
add
jle
add
pushf
and
add
and
add
and
add
and
add
add
cmp
add
adc
add
sub
add
ret
add
add
add
and
add
add
and
add
add
add
add
rolb
dec
gs
jo
gs
jb
jns
aad
inc
gs
gs
inc
imul
gs
jb
jbe
je
push
jb
imul
push
add
add
je
jne
jb
outsb
je
push
add
add
fs
imul
add
enter
jae
gs
popa
insb
jne
add
gs
jb
arpl
jae
gs
jo
add
popa
je
inc
jbe
outsb
je
add
call
inc
imul
bound
gs
add
adc
push
gs
insl
gs
push
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
popa
jo
jb
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
repnz
imul
jb
je
arpl
add
dec
add
insb
outsb
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
outsb
je
outsl
insb
add
popa
je
dec
jne
gs
add
imul
je
imul
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
gs
popa
jae
inc
jb
outsl
jb
add
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
je
gs
jo
popa
jbe
add
pop
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
gs
jo
popa
jbe
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
add
push
gs
outsl
add
push
fs
outsl
addr16
imul
add
add
push
fs
outsl
jne
je
jb
add
add
push
outsl
addr16
imul
push
inc
dec
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
roll
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsl
pop
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jl
jl
lods
lods
lods
add
cmpsb
cmpsb
push
mov
mov
mov
ret
ret
stos
leave
leave
lret
lret
int3
rcl
in
rcl
shl
iret
rcl
hlt
int
int3
hlt
enter
leave
enter
in
mov
mov
lods
stos
lods
lea
cltd
fwait
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
leave
not
rcl
cld
fcomp
xlat
std
xlat
xlat
fdivr
xlat
fcom
aad
dec
ror
dec
int
aad
aad
ror
sar
ret
std
mov
mov
lods
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
vpaddd
lret
ror
sar
aad
aad
fcomp
xlat
call
fcom
call
aam
dec
int
dec
int
call
aad
dec
int
inc
sarl
mov
scas
scas
std
cmpsb
cmpsl
cmpsb
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
or
sbb
push
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
int3
into
call
rcl
call
xlat
call
fcom
call
aam
into
into
into
dec
leave
leave
dec
int3
int3
inc
mov
rol
mov
mov
jmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
fs
das
push
prefetch
sbb
cmp
aaa
cmp
cmp
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
iret
sar
aad
aad
aad
aad
iret
iret
iret
dec
enter
mov
mov
mov
ljmp
mov
popf
xchg
cwtl
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jle
jge
jg
jge
jno
jno
popa
arpl
push
dec
dec
xchg
cmp
inc
inc
mov
jo
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
leave
dec
lret
lret
leave
leave
inc
ret
mov
mov
ljmp
mov
fwait
call
xchg
xchg
cwtl
xchg
cwtl
fwait
cltd
cltd
in
addl
push
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
outsb
add
pop
or
jnp
xchg
lea
incb
jp
idivb
jl
outsb
outsl
jo
addr16
push
ret
jge
jp
jns
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
test
popf
popf
pushf
call
xchg
decl
xchg
xchg
mov
mov
xchg
mov
jp
jp
das
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
mov
jge
jg
jb
jno
je
jae
jge
jle
addb
xchg
push
cmp
ss
and
jg
jge
cltd
fwait
fwait
lea
stos
icebp
lods
lods
lods
sti
lods
lods
lods
stos
stos
lods
stos
stos
test
std
fwait
fwait
cltd
xchg
xchg
xchg
decl
jge
jp
jns
jl
jns
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsl
out
scas
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
or
inc
inc
dec
imul
xchg
xchg
leave
fwait
fistps
lcall
mov
mov
mov
mov
mov
fwait
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
call
lcall
incl
mov
xchg
xchg
xchg
popf
sahf
sahf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
xchg
in
xchg
jne
or
add
or
or
es
push
dec
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
xchg
std
mov
xchg
call
sahf
sahf
jmp
lods
pushl
movsl
scas
mov
xchg
test
rorb
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cwtl
fwait
decl
mov
call
xchg
nop
xchg
xchg
xchg
pushf
pushf
popf
movsb
movsl
mov
movsb
movsl
movsl
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
popa
jne
je
mov
jle
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
aaa
jge
mov
jbe
mov
movsl
mov
mov
mov
mov
mov
add
mov
add
pusha
adc
mov
ljmp
popf
decl
nop
call
xchg
xchg
call
xchg
lcall
mov
movsl
movsl
std
mov
cwtl
cltd
out
nop
xchg
nop
xchg
les
cwtl
fwait
in
xchg
cwtl
out
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
jnp
mov
jnp
mov
jae
mov
outsl
ljmp
adc
stos
or
lods
or
mov
jge
mov
mov
stos
pushf
movsl
movsb
movsb
and
add
shll
adc
mov
ljmp
popf
call
xchg
xchg
lcall
popf
pushf
jmp
popf
pushf
call
xchg
xchg
call
xchg
nop
call
cwtl
cltd
cld
cwtl
cwtl
popf
stc
lahf
cltd
sahf
stc
sahf
xchg
pushf
cld
sahf
mov
xchg
insb
mov
xchg
push
jge
cwtl
dec
jp
fwait
cmp
fwait
sub
push
push
jmp
ljmp
adc
lods
pcmpgtd
scas
adc
mov
push
mov
imul
adc
mov
fwait
scas
mov
scas
lods
scas
mov
mov
mov
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
mov
jmp
mov
cwtl
decl
mov
xchg
xchg
xchg
js
fwait
jo
fwait
fs
xchg
dec
jnp
xchg
cmp
imul
push
pusha
decl
or
call
add
cltd
add
sahf
push
pop
ljmp
sbb
mov
outsl
pushl
jo
mov
and
and
shlb
inc
aas
cmp
xchg
scas
mov
scas
lods
mov
mov
movsl
movsl
add
pop
pop
adc
scas
mov
shlb
lcall
mov
jmp
stos
stos
jmp
fwait
pushf
call
pop
ja
mov
decl
decl
push
pop
incl
push
push
incl
add
mov
push
call
add
cltd
add
lahf
add
or
mov
jo
mov
ja
mov
sub
mov
sub
sub
dec
xor
dec
inc
mov
leave
scas
inc
mov
mov
movsl
mov
mov
add
push
push
adc
test
ljmp
sahf
jmp
test
ljmp
lods
lods
pushl
scas
scas
jmp
jno
incl
or
push
incl
add
push
incl
add
xchg
push
decl
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
enter
lret
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
cmpsl
ljmp
popf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
call
add
sahf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
mov
roll
fmuls
call
dec
xchg
fimull
fisttpl
fistl
call
xchg
std
mov
mov
mov
lahf
mov
add
dec
dec
adc
jl
movsl
sahf
mov
jmp
test
pushl
mov
pushl
mov
mov
scas
mov
movsb
mov
decl
pusha
call
push
pop
decl
or
lea
push
call
add
sahf
add
mov
add
stos
add
mov
gs
and
mov
aad
cwtl
call
push
cltd
fsts
fistl
ficomps
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsl
test
sahf
lahf
mov
add
inc
inc
adc
ja
lahf
cltd
popf
jmp
lahf
fwait
lahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
and
and
call
and
xchg
sbb
nop
or
nop
add
xchg
add
cltd
add
mov
add
lods
add
mov
gs
mov
xor
fcomps
ficompl
fbld
fisubs
jmp
cmpsl
jmp
cmpsw
call
push
call
test
xchg
mov
cmpsb
cmpsb
mov
lahf
mov
add
add
add
inc
inc
adc
jae
lcall
jmp
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
lcall
lcall
sbb
pop
call
pop
jmp
add
lods
add
mov
pushw
adc
roll
frstor
jmp
outsb
stos
jmp
outsl
lods
jmp
jb
call
jne
in
jae
out
jne
in
je
out
jb
jmp
xchg
mov
cmpsb
test
lahf
mov
mov
add
add
add
jg
cmp
adc
insl
js
mov
pushf
pushf
fwait
pushl
mov
mov
mov
mov
mov
cmpsl
scas
lcall
xor
lahf
cmp
lahf
aaa
je
mov
push
call
add
sahf
add
add
stos
add
mov
pushl
add
sbb
fsts
jmp
ja
jmp
jg
in
xorb
lock
push
test
ljmp
inc
mov
stos
cmpsl
sahf
pushf
pushf
daa
mov
mov
add
fs
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
ret
mov
mov
mov
cmp
inc
jge
mov
ss
lcall
lcall
add
test
add
mov
data16
mov
add
shlb
movsb
call
mov
icebp
pop
push
pop
push
xchg
ret
xchg
push
xchg
ret
stc
xchg
clc
mov
out
nop
mov
inc
ret
clc
stos
lods
test
xor
pushf
add
add
add
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
nop
pushl
mov
mov
inc
ret
ret
mov
jle
lcall
dec
cmp
dec
test
movsl
xor
pusha
lcall
add
cmpsl
add
lods
add
mov
arpl
mov
add
leave
push
outsb
call
xor
in
xchg
ret
push
lcall
repnz
negl
cld
popf
int3
cli
popf
into
sti
cwtl
lret
xchg
ret
mov
cli
mov
mov
mov
xchg
popl
fwait
cltd
lcall
ss
or
cmp
outsb
dec
dec
dec
jecxz
pop
popa
call
mov
mov
mov
mov
inc
leave
enter
sar
mov
ljmp
dec
xchg
mov
push
pop
lcall
add
lods
add
mov
arpl
mov
add
movl
je
fiadds
in
lea
push
cmpsb
into
push
cmpsb
int3
stc
cmpsb
int
sti
test
cli
movsl
into
cli
test
sar
cld
test
sar
negb
int3
dec
enter
mov
into
mov
xchg
xchg
add
lcall
xor
xor
or
bound
push
xlat
jae
jno
mov
sarl
mov
ret
mov
dec
enter
rol
mov
cmpsb
jmp
push
mov
scas
dec
xchg
sahf
sbb
lcall
pop
ljmp
arpl
mov
add
int
outsl
call
add
adc
out
pop
test
negl
sar
cli
mov
cld
mov
cli
mov
mov
mov
std
mov
std
mov
pushl
sar
cmc
movsb
mov
call
leave
lret
mov
mov
lahf
mov
xchg
or
add
add
xor
sbb
sbb
outsl
outsl
outsl
mov
mov
fcom
jmp
xlat
test
int3
into
dec
lret
leave
lret
leave
leave
leave
inc
enter
mov
mov
lods
push
mov
lods
cmp
popa
jmp
add
mov
fs
mov
add
iret
add
fadds
jae
fiadds
je
call
jno
sti
scas
aad
mov
cld
mov
fdivr
mov
xlat
cld
mov
fdivr
inc
mov
lret
jmp
mov
call
lret
into
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
in
pop
call
out
test
jecxz
leave
fsub
fcmovnu
fdivr
aam
std
int3
ror
mov
push
cmp
sub
mov
add
mov
mov
add
leave
add
aam
jae
faddl
jbe
jecxz
js
out
das
xchg
push
mov
cli
mov
inc
loope
inc
loopne
inc
fdivrp
inc
loopne
dec
std
leave
fdivrp
dec
loopne
dec
dec
sti
mov
lret
lret
sar
mov
mov
xchg
adc
add
add
incb
incl
incb
repz
or
in
in
pop
in
out
in
sub
in
in
dec
call
jmp
call
aad
fstp
jmp
mov
xchg
test
jns
movsb
push
jmp
ljmp
add
mov
add
int3
add
xlat
add
add
call
inc
fwait
cli
mov
loop
dec
loop
std
into
in
dec
in
dec
in
dec
loope
dec
loop
shl
shl
call
jecxz
shl
cli
ret
out
mov
xlat
inc
ret
cmpsb
test
mov
xchg
xchg
add
add
add
incb
std
incb
cmc
clc
testl
repnz
push
out
icebp
out
pop
out
repnz
cmp
out
out
pop
fsubp
loope
mov
xchg
sti
lahf
es
pop
pop
jmp
add
mov
inc
add
enter
roll
jno
fiaddl
jbe
in
jns
in
movd
cmc
pop
test
sti
mov
shl
cld
iret
jecxz
std
shr
call
out
shl
std
out
call
jmp
fucomi
fucomi
std
shl
push
ret
in
leave
lret
test
xchg
xchg
and
xchg
xchg
add
std
cld
add
std
stc
add
sti
clc
add
div
or
shll
sarl
negb
add
cmpsb
add
lods
add
mov
add
lret
add
add
fildl
ja
call
sbb
clc
jne
cli
std
fsubr
std
fldl2e
std
fucomi
std
fsubr
std
fucomi
fucomi
loopne
std
fucomip
fucomip
std
aam
push
aad
out
fdivr
rcl
sar
stos
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
mov
loop
add
leave
sbb
stos
jnp
repnz
jmp
add
mov
add
into
add
add
loopne
jne
jmp
sub
cld
shl
fcomip
fsubr
fsubr
cld
aam
cld
shl
cli
iret
loopne
sti
iret
loopne
stc
int
stc
int3
fdivrp
cmc
ret
out
mov
fcomp
sti
mov
mov
fwait
fwait
lcall
fwait
lcall
add
add
xlat
add
enter
mov
mov
lcall
add
mov
arpl
mov
add
roll
outsb
fadds
jae
loopne
jp
call
aaa
xchg
sti
xchg
cli
lret
cli
lret
jecxz
cli
clc
mov
sar
repnz
into
push
mov
int3
jmp
mov
sar
ljmp
imul
fsub
cmc
fsubrp
mov
mov
xchg
add
add
add
int3
add
mov
cmpsl
loopne
xor
jmp
add
mov
gs
mov
add
into
or
rorb
jne
fisttpl
ja
loopne
cmp
dec
cwtl
jmp
scas
int3
call
mov
std
loope
cld
fisubrs
neg
mov
enter
int
into
rcl
shl
xlat
fcmovnb
call
in
test
in
out
popf
ljmp
push
stos
stos
lods
adc
test
test
sahf
lahf
movsb
add
rolb
ret
ret
pop
mov
stos
aam
dec
cmp
cmpsb
push
imul
and
mov
ja
mov
inc
xchg
ret
push
stc
lret
test
mov
out
mov
enter
enter
lret
rcl
int
aam
shlb
aam
jg
fcmovnu
jb
loopne
gs
jecxz
out
out
jmp
div
sub
div
and
repnz
sbb
fcmovnu
or
mov
int3
add
add
add
rol
mov
mov
les
imul
sbbb
xchg
cmpsb
sarb
test
mov
pushf
lret
mov
leave
int3
jp
into
iret
addr16
ror
push
iret
rcl
dec
aam
inc
rcr
xor
daa
fistpl
fchs
fcoml
fsubp
loop
loope
in
out
jmp
in
icebp
out
add
cld
testl
std
incl
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
les
leave
xor
int
daa
int3
ror
and
aad
sbb
aad
adc
aam
or
fcom
push
rcr
xlat
add
add
add
in
add
jmp
add
aad
incb
mov
mov
add
rol
ret
mov
mov
mov
mov
push
rol
or
leave
enter
enter
leave
add
rolb
rcr
aad
aam
aad
aad
aad
xlat
fadds
loop
xlat
aad
add
loop
add
fstp
add
in
add
repnz
std
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
ret
mov
mov
mov
stos
test
dec
cmpsl
cmpsl
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
scas
adc
mov
aam
iret
iret
jmp
aad
cmc
rcl
sar
into
ror
cli
int
int
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
iret
xlat
aad
call
xlat
xlat
dec
rcl
dec
int
dec
int3
lret
mov
mov
lods
stos
stos
icebp
xchg
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
je
jae
fs
inc
dec
inc
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
int3
lret
rcl
call
aam
dec
lret
lret
mov
sarl
ljmp
popf
sahf
xchg
xchg
xchg
jmp
outsl
outsl
xchg
pop
adc
add
add
add
add
add
jg
addb
jl
addl
aam
push
mov
push
push
push
stos
push
insb
insb
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
fstpt
mov
sar
mov
vshufpd
mov
mov
test
fwait
fwait
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
popf
cwtl
cwtl
fcoml
addb
jl
jge
jns
jns
jns
jns
jp
jp
jb
jae
push
push
push
cmp
je
pushf
popf
sahf
mov
lods
scas
repz
lods
lods
sti
scas
scas
scas
std
test
cmpsl
std
pushf
pushf
sahf
call
test
call
mov
scas
jmp
scas
scas
leave
cmpsb
cmpsb
movsl
cltd
jb
je
adc
adc
add
add
add
add
outsl
outsb
outsl
pop
nop
mov
loop
lcall
mov
mov
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsl
orl
cltd
repnz
xchg
xchg
std
mov
call
sahf
popf
ljmp
stos
scas
std
mov
mov
stc
mov
mov
movsl
mov
jg
pop
popa
pusha
or
lods
mov
movsl
lahf
mov
decl
nop
call
sahf
sahf
sti
mov
cltd
lcall
push
push
jo
pop
push
outsl
insb
insl
outsb
xchg
subl
nop
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
mov
out
lods
lods
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
xchg
call
cltd
fwait
lcall
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
lea
out
xchg
jbe
notb
pop
jg
pushf
dec
jp
mov
aaa
ja
mov
jb
scas
sbb
insb
pushl
pop
mov
mov
scas
scas
jle
movsb
movsl
push
popa
popa
pusha
or
mov
lcall
popf
popf
jmp
mov
xchg
decl
addb
xchg
jae
cld
xchg
pusha
cmp
dec
js
xchg
cmp
nop
daa
call
lcall
punpcklbw
cmpsl
pop
push
pushl
sbb
mov
and
rcrb
mov
scas
scas
xchg
lahf
popf
lahf
adc
add
add
pop
popa
popa
or
lods
mov
stos
mov
mov
ljmp
test
lcall
pop
jnp
mov
imul
mov
pop
incl
add
push
call
add
cmpsl
or
je
mov
das
jge
lds
jge
enter
leave
xor
shrl
movsb
cmpsl
cmpsl
test
add
add
add
pop
or
movsb
test
ljmp
scas
scas
pushl
mov
jmp
inc
jno
mov
pop
decl
or
xchg
push
decl
add
lahf
add
cmpsb
add
mov
outsb
inc
cmp
rolb
call
inc
call
inc
xchg
fmuls
call
arpl
stc
mov
mov
mov
std
add
add
add
pop
or
sahf
mov
ljmp
mov
pushl
mov
ljmp
push
jnp
pop
popa
call
pop
pop
decl
add
xchg
add
sahf
add
add
scas
add
jbe
rorl
fstps
fistpl
ficomps
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
cmpsl
xor
addb
add
add
dec
pop
jge
jp
popf
xchg
lcall
lods
scas
pushl
mov
mov
lcall
cs
lcall
and
call
add
lahf
add
add
mov
arpl
mov
xor
jecxz
stos
jmp
jo
call
jo
in
jb
jmp
cmpsl
mov
shrl
addb
dec
dec
dec
pop
insl
outsb
insb
bound
cwtl
xchg
ljmp
mov
mov
mov
jne
lcall
cmp
popf
sub
xchg
or
pop
jmp
popa
pushl
or
call
dec
xchg
jmp
jp
jmp
mov
in
test
push
xchg
push
mov
mov
test
push
lcall
add
sub
push
push
dec
pop
pushw
mov
mov
mov
mov
ret
inc
mov
sahf
jmp
inc
cmp
fwait
push
pop
jmp
add
mov
fs
mov
adc
jmp
pusha
mov
push
xchg
push
cltd
cwtl
enter
lret
lcall
loope
inc
mov
lods
popa
mov
add
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
inc
pushl
push
xchg
lods
dec
cmp
and
add
cmpsl
add
mov
arpl
mov
add
fisubl
cmp
jl
push
movsb
int3
push
cmpsl
into
clc
test
cld
stos
sar
sti
stos
iret
lods
sar
sti
cmpsl
lret
jmp
mov
inc
rol
stos
stos
stos
jne
pushf
sahf
or
add
add
push
dec
dec
aaa
jae
jae
test
int
out
into
int
lret
sti
enter
enter
mov
mov
test
inc
jg
mov
add
mov
arpl
rolb
dec
add
fiaddl
xchg
push
xchg
std
mov
cld
mov
fcos
cld
mov
xlat
std
mov
sar
ljmp
repz
scas
mov
add
add
add
add
or
aad
dec
loope
fsubp
loope
fstp
fadd
fcmovnu
fcmovnu
aad
xlat
out
mov
addr16
test
je
cmpsb
or
scas
add
mov
add
xlat
add
or
lock
mov
cld
ret
loope
inc
loop
dec
loopne
inc
loopne
dec
loopne
dec
loope
sti
out
mov
lret
divb
pushf
sahf
sbb
add
add
std
incl
std
std
add
jmp
or
in
in
sbb
in
jmp
call
in
xchg
mov
mov
mov
add
mov
inc
add
iret
add
faddl
je
ljmp
std
ret
std
iret
out
call
out
shl
aam
call
std
shl
push
fcos
fmul
sar
mov
mov
mov
add
add
std
add
incl
cld
incb
aad
push
mov
pop
mov
lahf
or
stos
add
mov
gs
add
rolb
jo
fiadds
jbe
out
pop
mov
clc
mov
cld
shl
fucompp
fldl2e
fsubr
xlat
jmp
std
xlat
call
push
fdivr
loopne
xlat
sti
mov
popf
popf
das
add
add
int3
int3
int3
or
arpl
lods
add
mov
add
roll
jno
loopne
ja
out
xor
sti
int
clc
lret
loopne
test
xlat
repz
out
sar
in
aam
out
aad
ljmp
ljmp
stos
das
std
incb
aam
push
mov
jb
or
insb
inc
sbb
int
jnp
xlat
cs
fists
clc
jecxz
mov
out
loop
leave
jmp
fnstsw
leave
faddp
sarl
jecxz
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsb
les
push
xchg
mov
nop
fidivrl
andb
int3
mov
ret
ror
aam
lret
insl
aam
int
aam
iret
dec
fdivrs
loopne
in
frstor
jecxz
repnz
jmp
or
std
std
add
add
add
std
incl
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
leave
leave
and
rcl
pop
rol
adc
rcl
or
loopne
or
int3
into
add
std
std
add
incb
fwait
cltd
cltd
add
mov
or
into
int3
int3
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
lcall
rol
mov
enter
enter
sarl
mov
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aad
std
rcl
sar
iret
int
std
mov
stc
mov
test
sarl
gs
pop
pop
add
add
add
add
add
add
add
add
jb
jb
push
dec
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
aad
dec
into
iret
dec
mov
mov
scas
lods
lcall
mov
push
add
add
add
add
jae
je
xchg
aad
outsb
outsb
ret
arpl
outsb
outsb
outsl
jb
popa
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cwtl
cwtl
lds
jb
daa
es
add
add
add
add
jb
je
popf
xchg
lcall
test
clc
xchg
or
addl
dec
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
popf
lcall
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorb
stos
movsb
test
test
mov
xchg
xchg
xchg
cld
sahf
pushf
sahf
cmc
cwtl
cwtl
cltd
in
addb
popa
popa
fs
jl
mov
xchg
mov
pushf
mov
pushl
push
cltd
mov
lods
scas
push
stos
stos
stos
add
add
add
cmpsl
mov
scas
test
cld
xchg
xchg
xchg
lcall
fwait
lcall
lcall
xchg
mov
loope
jne
out
nop
bound
std
lcall
ljmp
pop
jo
mov
insb
pushl
popf
lods
lock
mov
imul
int3
add
test
pop
scas
cmpsb
stos
test
popf
sahf
popf
jmp
movsl
call
push
js
nop
inc
je
mov
imul
sbb
pop
call
or
scas
sbb
pushl
es
shlb
inc
ds
mov
mov
subl
jae
push
movsb
fwait
mov
cld
test
cmpsl
pushl
mov
lcall
sub
decl
or
mov
decl
add
mov
adc
shlb
dec
ds
iret
inc
mov
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
movsl
mov
add
push
imul
cmpsb
lahf
movsb
cld
scas
lods
scas
pushl
mov
ljmp
cmp
nop
pop
decl
pop
push
call
add
lods
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsl
call
pushf
mov
mov
mov
cmpsb
cmpsb
cmpsb
pop
add
add
popa
popa
popa
adc
popf
pushf
pushf
cld
mov
scas
mov
mov
scas
lcall
jo
cltd
and
call
add
lods
add
mov
xor
jmp
jns
in
jnp
push
jle
out
jle
ficompl
mov
movsb
mov
add
dec
dec
dec
adc
imul
mov
mov
mov
rol
mov
bound
lcall
add
add
mov
gs
pop
insl
fisttpl
in
mov
notb
push
xchg
jmp
cmpsb
inc
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
cld
rol
inc
ret
ret
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
gs
add
aam
ja
ljmp
stc
stos
sar
cld
scas
sar
std
scas
sar
std
scas
sar
in
scas
enter
rcr
cmpsb
cmpsb
ds
incb
xor
jo
scas
mov
mov
aam
mov
aad
fnop
rcl
out
lret
leave
lret
cli
mov
mov
jmp
fs
add
aad
jae
call
mov
std
mov
fdivr
inc
std
rcr
std
rcr
icebp
mov
ret
in
test
dec
jg
jg
add
add
stos
stos
lods
add
in
in
or
jmp
out
outsb
fcomp
fldenv
mov
add
mov
add
fldl
out
cmp
dec
in
std
shl
call
in
shl
shl
push
fcos
aam
into
in
scas
lods
scas
popa
addl
add
std
incb
std
std
push
lret
lret
shrb
sahf
sbb
lods
add
mov
add
jecxz
jp
repz
movsl
inc
loope
cld
call
std
shl
std
aam
stc
shl
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
cld
lods
add
mov
push
je
fstpl
jg
ljmp
cli
in
mov
shl
call
ret
shl
out
aad
jmp
fcmovnu
scas
ret
ret
ret
push
cltd
lcall
rol
or
pushf
stos
xchg
dec
and
shll
js
mov
mov
lret
adc
int
fxch
into
pop
dec
jecxz
loope
call
in
out
sbb
rol
add
mov
cmp
movsb
lods
arpl
mov
ret
mov
les
int
fisttps
int
int3
or
push
incl
addl
add
stos
std
incl
rol
add
std
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
dec
loope
xlat
jecxz
or
push
cwtl
pop
sbb
mov
insl
movsl
cmp
into
cmp
pop
repnz
adc
jns
jb
adc
cwtl
das
idivl
mov
dec
or
insb
popf
pop
pop
repnz
jns
loopne
adc
xor
xchg
push
mov
xchg
aam
flds
insl
add
cli
repnz
mov
lea
cmpsl
jle
test
enter
dec
jecxz
push
out
xchg
add
add
fsts
and
sbb
inc
xlat
jle
les
lahf
pop
cmc
rclb
jl
and
add
ja
push
mov
cwtl
mov
sarl
fistpl
or
hlt
mov
js
pop
xchg
adc
mov
adcb
aam
push
jg
lea
mov
stos
inc
xor
adc
push
and
out
xchg
pushf
stos
inc
into
subl
dec
pusha
icebp
fimull
jg
das
stos
inc
pusha
push
add
mov
and
call
fldcw
pusha
js
andb
shll
xchg
push
repnz
fistl
jae
mov
and
stc
push
lds
divb
pop
test
pop
repnz
leave
mov
negl
aad
push
sbb
dec
jno
mov
les
test
mov
xor
inc
into
xchg
mov
movsb
cmp
clc
popl
jne
pop
cmpsl
sub
lods
pop
enter
jp
lret
stos
sbb
xchg
dec
int3
push
jmp
sub
xor
push
dec
mov
jg
dec
out
nop
test
nop
cli
jecxz
pop
adc
ss
push
mov
lcall
cmp
and
ds
incb
repz
lahf
and
push
je
cwtl
das
xor
xchg
jns
int
lcall
and
sti
push
inc
xlat
xchg
fdivl
test
cmc
fldcw
xchg
lahf
cli
jl
sub
pop
lret
aad
add
mov
sub
or
dec
loopne
push
inc
fidivs
mov
gs
test
xchg
fsubs
jnp
stc
fbstp
mov
cltd
out
std
xchg
jle
and
rcrb
mov
cmp
and
push
out
je
jnp
xor
cltd
xor
mov
fdivrs
dec
outsb
stc
aad
sub
repz
in
test
or
and
dec
in
fildl
or
imul
sub
mov
sbb
sbbl
cmp
mov
pop
ret
es
jp
jp
je
aaa
add
decl
sbb
or
cmp
movsb
sub
push
in
idivb
adc
rclb
sub
mov
shrl
adc
addr16
lret
icebp
mov
fs
test
mov
mov
mov
ret
repz
dec
loopne
adc
add
addr16
fisubs
and
mov
mov
pop
inc
movsl
rcrl
in
xchg
clc
fbstp
mov
cltd
out
std
xchg
jge
and
iret
pop
aas
mov
cmp
and
out
jae
jnp
xor
cltd
xor
movsl
mov
xlat
cmp
insb
sub
repz
in
test
adc
data16
das
and
dec
in
fistl
scas
adc
and
pop
test
enter
mov
add
xsha256
cmpsb
push
jecxz
loop
jbe
sub
sub
hlt
xchg
imul
pop
and
pop
push
aad
rolb
xchg
mov
adc
mov
repnz
sub
je
mov
out
ret
pop
lods
or
ds
xchg
sti
pusha
mov
xchg
sbb
orl
pop
in
enter
inc
fidivl
ret
notl
sbbb
mov
fldcw
add
cli
shrl
lret
add
mov
mov
movsl
sbb
sar
cld
xchg
lcall
shr
outsl
dec
jecxz
or
movsb
cmp
pop
popf
xor
sbb
dec
scas
and
lcall
cwtl
jecxz
pop
hlt
jp
cmpsl
jno,pt
mov
shrb
sub
jns
xchg
sub
inc
lods
rcrl
sbbl
insb
movsb
xlat
outsb
fnstenv
movsl
cmp
aas
dec
loopne
scas
sub
fidivs
mov
jge
xor
bound
mov
push
jg
jmp
popa
cmpsb
in
xlat
mov
lahf
ss
or
les
pushf
jg
outsl
push
pop
cmpsb
fbstp
les
clc
dec
and
sub
aas
lret
sti
dec
jg
jg
icebp
mov
data16
imul
ja
es
loopne
mov
outsl
push
push
out
dec
mov
dec
call
ss
addr16
mov
dec
mov
lcall
pop
inc
fimull
mov
nop
add
sbb
push
mov
push
mov
xor
xchg
arpl
sbb
push
mov
push
lods
sti
xor
adc
dec
out
int3
or
add
iret
data16
movsl
cmp
mov
pop
lock
mov
arpl
push
xchg
lret
push
out
xor
bound
cmp
pop
mov
sub
icebp
xor
mov
sbb
icebp
xor
mov
pop
pop
mov
repnz
sub
fists
mov
sbb
push
cs
pop
les
ret
push
sub
shrb
mov
cmpsb
loope
sbbb
aaa
arpl
cmp
cltd
imul
adc
addr16
stos
loope
out
test
aaa
xor
gs
andl
les
inc
or
insl
mov
and
js
push
and
les
clc
dec
xchg
sub
das
push
jmp
stos
pop
lock
mov
cld
push
cltd
xor
xchg
jnp
iret
sub
std
push
aas
subb
jge
cwtl
xlat
outsb
int
xchg
sub
mov
testb
int3
and
xchg
adc
call
or
xlat
outsb
pop
and
mov
jae
shrb
inc
fdivrp
bound
sub
addr16
jnp
ljmp
outsl
xchg
or
push
pop
shrb
jno
mov
xor
decb
stos
inc
dec
pop
adc
in
lahf
mov
dec
jecxz
in
ljmp
push
cmp
pop
xor
stos
dec
jecxz
stos
pop
icebp
loopne
push
ljmp
pop
testb
push
out
fildll
jno
sub
mov
dec
xor
jg
rclb
mov
shl
jmp
movsl
cmp
cmp
insb
jno
adc
enter
fsubrp
lods
inc
sbb
xchg
sub
sbb
jp
inc
fdivrs
popa
lea
dec
xchg
sub
pop
mov
movsl
or
lret
or
cmp
fbstp
call
jno
sub
cmp
call
xchg
sub
add
cmp
call
sbb
mov
xor
iret
xchg
call
mov
xlat
mov
shrb
lds
xchg
sub
frstor
mov
cli
and
push
push
adc
hlt
inc
jl
dec
stos
imul
mov
mov
push
lods
dec
push
es
mov
ds
stc
stos
push
push
dec
std
icebp
or
insl
or
lahf
push
pop
xchg
shrb
add
stos
aaa
out
test
jecxz
mov
jge
testb
add
test
sbb
test
pop
cs
cmpsb
inc
pop
fmuls
aad
sub
dec
pusha
adc
jle
stc
nop
bound
push
call
sub
jb
add
xchg
andb
push
mov
xor
not
in
daa
lret
cld
dec
je
jle
lock
xchg
sub
lcall
mov
jnp
and
pop
jge
xchg
out
sub
ljmp
or
mov
add
adc
cwtl
or
pop
ds
inc
jmp
or
bound
push
call
sahf
xchg
jns
lds
imul
or
xchg
push
pop
lock
sbb
fistps
or
sbb
loope
xchg
lock
pop
stos
addl
cmpsl
loope
andl
and
fisubrl
jbe
int3
sub
adc
inc
cmpsb
adc
lods
cmp
cmpsl
push
scas
xchg
popa
dec
cmp
adc
adc
clc
leave
sbb
enter
pop
das
test
rcrb
push
stc
rolb
inc
es
xor
ret
rcl
mov
cwtl
xor
movsl
dec
pusha
jo
mov
pop
dec
inc
inc
stc
pop
stos
xchg
and
test
sti
and
rcll
nop
pop
sbb
xor
xchg
cltd
xchg
pop
mov
stc
arpl
sahf
push
testb
int3
jbe
movsl
pusha
dec
imul
sub
ja
mov
sub
les
fwait
rcll
lcall
fwait
jne
sub
push
mov
jp
inc
jp
test
addr16
dec
jo
mov
lret
int
fcmove
testl
bound
mov
repnz
and
sub
cmp
call
adc
mov
xchg
andps
jge
cmp
aas
inc
aad
iret
inc
repz
lock
push
push
sub
jno
jbe,pt
mov
js
fdivl
test
xorl
xacquire
ljmp
add
jno
and
loop
jle
icebp
ja
jno
daa
mov
ss
fwait
loop
icebp
ja
icebp
das
xchg
lods
pusha
xlat
push
mov
jle
imul
dec
cmpsl
testl
mov
mov
cmp
sbb
sub
mov
push
and
aaa
lods
push
sub
arpl
xlat
mov
inc
pop
push
mov
fnsave
dec
push
dec
es
gs
or
xor
aad
sbb
pop
xchg
std
xorl
jmp
and
mov
insb
lods
ja
rorl
mov
adcb
mov
in
fs
test
and
xorl
das
lds
in
jl
jecxz
push
ret
aas
movsl
or
xlat
bound
mov
sbb
int
dec
imulb
mov
pop
sbb
dec
or
mov
mov
addr16
push
aad
sub
stc
push
xlat
stos
cmp
lods
pusha
das
xchg
inc
push
push
hlt
imul
out
mov
std
iret
ja
sub
out
xchg
fs
inc
sbb
jecxz
jns
pushf
ficompl
vpunpckhwd
stos
sub
pop
mov
inc
ljmp
mov
or
sbb
jbe
xor
repz
sbb
mov
pop
scas
sbb
sub
sbb
roll
or
xchg
sub
stos
cmc
mov
in
mov
pushl
lret
sbbl
push
push
in
dec
in
xchg
sub
ljmp
push
dec
xchg
sub
data16
adc
test
adc
add
cmpsb
mov
std
sbb
xlat
lahf
fnstenv
clc
inc
jb
nop
arpl
les
aaa
mov
xchg
push
in
cmpl
lcall
and
cli
cmp
lret
lods
inc
mov
leave
lret
bound
pushf
outsl
push
enter
outsl
loope
and
mov
scas
pop
sbb
and
popa
pop
dec
push
ljmp
sbbl
or
lahf
mov
lods
inc
icebp
bound
mov
lret
cld
mov
sti
xchg
cmpsb
or
push
push
iret
sbb
mov
sarl
in
mov
fnstenv
lods
sbbl
cmp
mov
mov
mov
shlb
fcomps
push
jns
xchg
dec
das
jl
cmp
push
lcall
lods
mov
out
xor
insl
outsb
push
xchg
int
movsb
cmp
in
test
xchg
adc
enter
insb
dec
jne
out
outsb
add
add
pop
and
adc
inc
fsub
cmp
inc
mov
int
pop
add
add
insl
insb
mov
add
mov
xchg
push
movsl
mov
insb
cmpsb
sbb
fwait
shrl
loop
cli
and
fisubrl
xchg
jecxz
pop
cmc
rorl
cmp
out
push
les
or
jns
jmp
push
ret
das
add
push
push
mov
mov
jle
mov
add
icebp
sbb
and
lods
cmpsb
inc
fadds
movsl
dec
out
sbb
dec
cmp
insl
add
push
xchg
sub
mov
dec
mov
mov
and
leave
pusha
mov
shl
jle
mov
add
sarl
mov
iret
mov
data16
sub
out
inc
test
push
sub
adc
xchg
mov
vcvtsd2ss
jne
mul
js
dec
cld
xchg
ja
call
pop
fs
iret
push
adcl
mov
fmull
xor
clc
test
insb
mov
mov
pop
or
aam
int3
js
stos
in
mov
mov
xor
pop
stos
ds
inc
push
jmp
cpuid
jo
lret
sub
and
test
daa
lods
inc
push
or
dec
jg
call
addr16
dec
push
popf
xor
test
pop
and
mov
sbb
jmp
add
shll
add
pop
push
dec
loopne
je
push
jae
addr16
out
lea
add
xchg
loope
inc
idivb
lret
jo
dec
daa
sub
push
pop
or
xchg
xorb
mov
lret
lret
mov
or
and
push
gs
in
mov
popf
xor
loopne
or
xchg
sub
fnstenv
jbe
inc
mov
fcmovu
jne
lods
adc
xchg
dec
sbb
imul
dec
test
call
add
cmp
xor
lds
test
sarl
inc
sbb
mov
out
fdivrl
inc
rcr
jno
outsb
xor
pop
xchg
in
sbbl
push
jmp
adc
cmp
xlat
mov
push
dec
lods
inc
jne
jbe
and
lret
dec
xchg
sub
xor
jg
push
ret
pop
mov
loope
shll
repz
fists
cmpsl
inc
push
mov
aam
movsl
mov
repnz
jae
push
jns
or
xchg
xchg
and
scas
in
pop
ja
aaa
into
inc
mov
push
in
inc
cwtl
testb
xor
sbb
cmp
test
scas
inc
or
int
pop
imul
jmp
imul
or
ja
daa
mov
add
and
mov
xchg
lods
inc
fcomps
mov
lea
and
stos
inc
mov
xlat
leave
pusha
leave
mov
out
sbb
pushf
pop
dec
cmc
mov
ja
mov
jno
inc
fcomp
lcall
pop
popf
push
call
fwait
dec
outsl
push
xor
and
or
inc
setge
outsl
lret
sub
jo
in
lea
leave
testl
cmp
inc
fxch
xlat
pop
repnz
dec
out
and
adc
shrl
lods
pop
xchg
cs
mov
jae
mov
sbb
shrl
ret
rolb
mov
mov
mov
add
lds
ds
mov
sbb
cmpsl
stc
push
pop
shrl
lcall
and
cmpsb
cmp
xchg
mov
pop
mov
jns
cmp
mov
push
hlt
mov
es
rcr
inc
fisttpl
xor
and
call
cltd
push
outsl
push
and
dec
lea
or
inc
and
test
jno
out
pop
es
and
jl
inc
and
mov
and
add
xlat
push
sub
into
jg
cmc
cmpsb
out
pop
lahf
iret
jl
mov
cmpsb
cmp
or
mov
and
shrl
mov
xchg
dec
or
mov
lcall
shl
icebp
mov
cli
dec
loopne
and
cmpsb
push
mov
sub
sbb
orl
out
imul
les
mov
lods
in
jnp
cmpsb
cmp
insb
inc
les
mov
test
cmp
mov
add
cmpl
mov
lods
insb
add
cmpsb
ljmp
inc
or
int
adc
and
mov
lret
cmpsl
ds
popa
clc
fdivs
pop
mov
jg
test
popf
xor
sti
add
movb
mov
loop
pusha
in
pop
ds
push
call
repz
repz
jp
stc
jecxz
test
adc
xlat
pop
pop
mov
cmpsl
cmp
mov
aad
adc
cmpsl
lcall
mov
xor
pop
inc
pop
jae
pop
cmc
inc
xchg
aam
adc
adc
cmpsb
lcall
idivb
aam
cs
insl
pop
das
pop
repnz
mov
jns
push
lea
test
pop
fbstp
repz
cmp
sbb
out
dec
scas
inc
addr16
int
jge
mov
sbb
inc
push
dec
sbb
test
cmp
std
shl
mov
flds
lcall
and
mov
scas
inc
out
push
jmp
or
jo
push
xor
xchg
test
and
cmp
into
add
lret
sub
decb
cmpb
pop
sahf
jle
mov
mov
pop
and
shrb
addr16
clc
movsl
icebp
add
pop
in
mov
aas
popf
xor
lods
ds
mov
repz
fidivl
shrl
mov
rorl
in
add
xchg
sub
lods
mov
xchg
addr16
sub
mov
inc
lds
xchg
mov
into
gs
sbb
mov
cmp
jnp
or
repz
sarb
addr16
mov
inc
fisubs
jno
fisttpll
es
or
sbb
mov
cmp
fnstenv
cwtl
rclb
testl
xor
cld
xchg
sub
mov
fsub
mov
xlat
in
push
in
cmp
push
in
je
adcb
ja
ret
mov
arpl
out
xor
push
pushl
push
mov
dec
gs
xchg
insl
in
push
mov
mov
cmp
pop
jo
and
rcl
mov
adc
stos
xchg
cmpsb
mov
adc
idiv
push
jmp
adc
jle
pop
mov
sub
in
cmc
mov
push
jmp
mov
nop
movsl
cmp
shll
pop
mulb
or
cmp
sbb
or
scas
nop
jle
sbb
pop
dec
xlat
push
cmp
mov
push
mov
xor
and
dec
add
decb
jmp
or
sub
pop
add
dec
out
daa
aaa
pop
mov
sbb
add
fs
movsl
push
jae
in
pop
ds
int
mov
pop
stos
orl
cmpsb
pop
lret
push
xor
mov
pop
loop
add
or
or
icebp
push
sbb
movsb
int
mov
aad
pop
out
fimull
add
mov
in
add
ss
in
mov
sar
pop
inc
or
lea
movsl
jmp
dec
test
xor
push
roll
pop
mov
ds
inc
enter
ret
sbb
in
adc
dec
and
sub
mov
leave
xchg
cmpsl
mov
data16
pop
xchg
lea
pushf
adc
out
dec
addb
jno
pop
fadds
mov
lret
aad
inc
xor
push
out
lahf
or
rcl
push
push
fnstcw
mov
xchg
pushf
int3
push
or
push
mov
lods
rcrl
xchg
imul
cmp
xor
sub
xchg
imul
push
cmp
jp
sbb
pushf
divl
into
scas
push
inc
negl
imul
sarl
out
hlt
mov
clc
arpl
pop
sub
and
sahf
shrl
inc
sub
mov
lret
add
out
cmp
mov
outsl
repnz
call
add
test
daa
xchg
les
xchg
and
mov
call
cli
sti
push
xchg
adc
sub
sti
nop
mov
jns
adc
push
adc
jge
mov
sahf
xor
mov
xor
mov
push
mov
test
push
sub
adc
bound
xor
dec
and
push
or
sub
pop
js
cmpsb
flds
fsub
add
dec
int3
or
jae
cs
dec
call
bound
add
cli
adc
push
fildll
out
push
lea
jmp
ret
dec
mov
negb
data16
inc
or
test
pop
repz
dec
popf
mov
je
jns
cwtl
xor
jecxz
lock
loopne
and
mov
rolb
dec
adc
xchg
cltd
mov
or
in
jge
loopne
les
sub
or
push
pop
mov
xor
jae
or
pop
nop
dec
inc
or
in
mov
rolb
loop
dec
and
xlat
jns
cmp
popf
dec
add
int3
fldcw
jg
push
jp
cmp
xor
jno
xchg
mov
add
xor
das
sub
mov
insl
outsb
cs
mov
add
or
jno
int
xchg
lock
sbb
aam
mov
popa
xor
in
sbb
call
arpl
lods
repnz
data16
sbb
mov
hlt
adc
loope
and
mov
push
and
inc
rorb
in
fnstcw
jns
xchg
cmpsb
pop
lods
jns
inc
dec
pop
ja
inc
jl
jb
aam
lcall
jns
mov
xor
notb
scas
lock
mov
mov
imul
int3
cmpsb
js
and
jp
test
les
sbb
iret
std
fidivrl
xor
jb
pop
mov
jle
out
mov
cmpsl
repnz
lcall
popf
test
cli
ds
adc
insb
add
cwtl
sbb
jp
xchg
jle
and
push
std
sub
mov
cmp
sub
inc
loopne
mov
jno
shll
push
ja
xchg
or
sahf
movsb
jne
mov
aas
in
xor
dec
jo
dec
shrl
clc
insl
mov
addb
dec
xchg
sbbb
out
lods
lds
std
into
in
cs
imul
mov
xor
fcoms
mov
orb
sbb
pop
roll
outsl
ja
psubb
or
mov
xchg
jnp
jl
fcompl
in
mov
pop
sub
add
popa
loop
ret
pop
testb
ficoml
sarb
sti
imul
loop
xchg
pop
mov
lds
cld
mov
hlt
push
mov
jnp
or
mov
or
or
or
mov
cmp
and
xor
cmp
cmp
data16
ret
scas
xchg
mov
shrl
cmp
add
push
and
mov
das
out
jnp
mov
js
adc
sbb
cmp
ss
adc
pop
mov
out
enter
test
cs
sti
push
cmp
fstps
pop
push
hlt
jge
inc
cli
xchg
cs
aas
clc
call
fcmovb
mov
jbe
xchg
outsl
pop
lock
add
test
cltd
dec
pop
jbe
pushf
sbb
outsl
adc
std
cwtl
mov
out
dec
sbb
jmp
or
frstor
push
aam
and
test
mov
div
iret
xor
pushf
inc
shrb
push
lret
inc
pusha
out
xor
mov
or
push
xor
jo
test
pop
add
dec
xchg
adc
cmp
jmp
out
xchg
sbb
dec
js
rolb
loop
aaa
icebp
aaa
incb
mov
popf
push
dec
push
xor
imul
out
stos
mov
bound
push
stos
pop
std
and
rcll
in
push
lods
loopne
adc
pop
popa
dec
add
gs
scas
sbb
imul
sbb
stc
add
adc
sti
push
int
test
andl
outsl
and
mov
imul
jb
mov
data16
mov
jb
xor
sbb
mov
sbb
sbb
pop
add
mov
inc
testb
dec
mov
sub
fimuls
xor
js
xchg
pop
out
xlat
movsb
xchg
jno
pop
loop
testl
decb
jge
jl
jge
mov
jge
mov
inc
nop
stos
mov
addb
pop
add
push
aaa
xchg
insb
fistps
mov
into
add
mov
jb
and
dec
xchg
fwait
or
frstor
ucomiss
dec
cmp
xchg
sahf
adc
cs
pop
and
or
aas
push
or
sbb
mov
push
mov
test
int
add
jecxz
ret
inc
fisttps
push
cli
es
in
insl
loope
push
or
push
loop
xchg
rcpps
es
stc
or
push
outsb
repnz
pushf
negl
les
addl
jmp
pop
sahf
dec
add
lock
sarl
cmpsb
inc
inc
cs
and
adc
add
fwait
sub
adc
cmp
dec
mov
jne
pop
xchg
mov
push
inc
mov
fnsave
mov
movsb
cmp
xor
sbb
mov
leave
icebp
ret
fs
icebp
xchg
popf
push
jb
stc
cmp
pop
sahf
aaa
jle
pop
mov
pop
sub
test
add
push
movsl
dec
or
cmp
cs
sbb
fdiv
mov
nop
and
jb
inc
fs
mov
jmp
into
pop
out
cmc
ja
rcrb
hlt
test
sarl
fwait
push
and
pushf
cmp
jge
mov
sbb
mov
dec
jl
out
jg
outsl
adc
mul
imul
push
std
xchg
mov
aad
jecxz
mov
cmpsb
cltd
mov
mov
xchg
rorb
inc
enter
xchg
mov
and
and
andb
sub
inc
add
add
test
mov
scas
or
mov
add
jge
jecxz
sbb
mov
adc
orl
imul
imul
inc
jne
out
jp
and
fwait
fs
pop
jo
aas
cmp
mov
xor
shlb
xchg
mov
movsl
mov
mov
imull
jno
mov
sub
inc
cmp
pop
pop
jbe
mov
sub
sub
clc
xchg
mov
cmp
out
cmp
dec
xor
or
or
das
mov
in
in
shrb
jb
mov
into
jmp
mov
popf
into
xchg
inc
xchg
dec
arpl
ljmp
adc
enter
mov
fwait
xlat
sbb
jae
mov
test
pusha
jecxz
mov
or
and
pop
in
out
cmc
inc
jge
fistpl
push
dec
movsl
xchg
push
xor
dec
lret
sahf
xchg
fdiv
push
dec
cmp
ror
mov
sub
ss
or
ret
mov
out
cmpsb
adc
push
cmp
xchg
fmul
push
mov
stos
fldenv
pop
clc
jae
dec
lds
adc
jbe
sahf
mov
cmp
sub
leave
int3
int3
mov
inc
dec
jp
jae
pop
sbb
lret
hlt
mov
out
dec
ljmp
in
or
push
xchg
daa
ret
mov
cmp
jecxz
adc
xchg
out
rolb
mov
and
xchg
cmp
add
jle
addr16
loope
cmp
insl
push
and
push
push
out
rcrl
mov
adc
repnz
cwtl
mov
adc
adc
ja
cs
insb
push
sub
pushf
lods
add
cmp
xor
nop
lock
jbe
incb
addr16
mov
mov
ret
mov
dec
or
pop
pop
mov
push
lods
xor
cmp
mov
fisubl
insb
mov
sarb
out
out
test
inc
sub
in
into
dec
outsl
lea
xchg
add
mov
add
loop
test
out
test
outsl
jnp
xchg
data16
add
mov
les
jmp
test
jp
scas
jb
xor
mov
rcll
cmp
and
xor
push
sub
sub
repnz
mov
sti
in
in
inc
insl
pop
push
dec
dec
jg
rol
and
xlat
or
rorb
push
lahf
or
cmpl
sti
jne
movsl
add
add
pop
aas
rcr
adc
inc
sub
rolb
or
dec
adc
jg
outsl
jns
mov
pop
call
loop
sbb
dec
mov
fs
sub
dec
sub
and
outsb
pop
pop
or
cmp
shlb
add
lret
loop
add
sbb
sub
pop
enter
xor
outsb
fnstenv
cmp
popf
cmpsl
xchg
xor
xchg
stos
mov
mov
jg
pop
sbb
pop
jmp
and
les
shlb
ret
fcmovne
or
mov
insb
lcall
dec
ljmp
mov
add
sbb
mov
call
ljmp
ret
inc
cmp
inc
clc
cmp
jbe
lea
adc
call
js
mov
cmp
and
cs
sub
and
mov
xchg
xchg
sbb
out
data16
or
or
jg
pusha
adc
xor
xchg
dec
fwait
lret
and
cmp
and
xlat
js
outsl
adc
flds
fldenv
rcr
mov
mov
test
andb
mov
mov
insl
fwait
js
cwtl
jp
jns
jbe
jb
ljmp
mov
das
push
sbb
jp
xor
shrb
repnz
shr
shlb
xchg
or
ret
jns
imul
jecxz
mov
xor
push
pop
mov
sbb
and
jbe
inc
mov
aas
ret
xor
mov
dec
movsl
and
es
push
dec
cmp
mov
jp
or
sub
orl
test
cmp
fdivs
push
jns
jg
jns
test
cmpsl
sub
or
popl
scas
inc
xor
xor
fimuls
pop
pop
sbb
test
cmp
push
out
pop
mov
mov
ljmp
lods
popf
in
iret
mov
cmc
je
sbb
jnp
dec
gs
dec
add
inc
jmp
fsubs
lock
jo
add
mov
inc
loope
inc
jnp
je
das
dec
adc
xlat
push
sbb
or
xchg
out
popa
mov
mov
ret
push
roll
cld
push
mov
mov
inc
mov
loopne
frstor
out
cld
insb
xor
into
rolb
inc
mov
fdivs
cmpsl
adc
je
insb
cli
inc
bound
shrb
cmp
and
pop
dec
sbb
cmp
lods
rorl
scas
scas
mov
inc
loope
ss
rclb
mov
push
or
iret
inc
push
jae
mov
flds
jge
cmp
pusha
into
inc
shlb
test
sti
iret
push
call
cmpb
movsb
xlat
pushf
cld
sub
pmulhw
dec
mov
fwait
xchg
mov
out
mov
fcoml
jb
repz
push
js
xchg
test
adc
and
mov
icebp
xchg
jo
pop
pop
add
adc
cmc
mov
inc
push
jmp
mov
mov
in
jnp
inc
scas
dec
scas
adc
js
fnstcw
pop
mov
mov
xchg
test
push
lods
mov
dec
test
fidivrl
mov
lea
jno
add
dec
popa
sbb
cli
push
cmp
add
in
ficomps
in
cmp
in
cmp
test
mov
les
popa
out
fwait
dec
jmp
aam
mov
pop
scas
mov
jno
dec
scas
jle
out
mov
xor
loopne
mov
adc
mov
cwtl
insb
lret
xchg
jle
ret
imul
add
into
out
push
sub
leave
add
jno
or
or
push
and
mov
sbb
push
fidivrs
imul
pushf
xor
idiv
hlt
pop
sub
inc
fs
jbe
pop
notb
push
stc
sbb
mov
inc
imul
fiaddl
jae
pushf
repz
cmp
icebp
push
xchg
adc
mov
xor
int
fstl
jecxz
push
and
cs
les
mov
jmp
mov
scas
repz
adc
cmp
push
rolb
adcl
vmovaps
push
jns
fstpl
xchg
or
lcall
aad
mov
je
push
jp
mov
mov
mov
sub
dec
ficoms
push
pusha
bnd
or
sbb
or
inc
push
or
sbb
cwtl
stos
push
int3
adc
mov
insl
jmp
and
sub
popa
jg
shld
popf
add
je
std
shll
nop
das
clc
or
xor
aas
sub
testl
icebp
mov
add
xchg
out
filds
push
aaa
mov
popf
xchg
out
mov
push
sub
lock
mov
mov
pop
cmpsb
cmp
sub
dec
cmp
xchg
dec
data16
lock
ret
jne
std
push
mov
nop
lret
mov
loopne
push
sub
hlt
mov
mov
jecxz
cli
daa
test
and
jae
in
dec
mov
xor
add
cltd
or
js
mov
xor
rclb
std
pop
outsl
loope
mov
inc
fs
dec
fdivs
xorb
jno
rolb
adc
mov
lret
call
dec
leave
rcrl
rclb
js
mov
icebp
cmp
push
push
mov
jp
rclb
ror
pop
dec
inc
cmp
mov
shr
fdivl
lods
or
cmp
or
dec
imul
lock
insl
sub
lock
lcall
arpl
ret
pop
outsl
in
lods
jecxz
outsl
cmp
mov
ret
cmp
pop
add
mov
sahf
mov
push
xor
mov
inc
rcrl
push
cwtl
fisubl
xchg
mov
and
fbstp
nop
sub
dec
pop
xor
pop
pop
push
pop
movsb
jno
dec
pushf
iret
aaa
pop
mov
add
jmp
mov
xchg
movsl
sub
int
in
daa
cmc
sbb
xor
mov
adc
fldl
cs
push
inc
mul
xorl
and
pop
fmull
push
pop
daa
mov
pop
aam
gs
lods
adc
fs
fs
loop
dec
xchg
ljmp
pop
arpl
dec
or
incl
cmpsl
rclb
inc
pop
mov
rorb
or
sbb
sbb
cld
mov
dec
fst
les
bound
cld
rcrl
or
aaa
insl
jl
notl
int3
in
cld
mov
in
in
rorb
mov
out
in
test
insl
dec
cltd
icebp
das
imul
daa
push
mov
test
js
pop
rcrb
cli
adc
stc
xchg
dec
pushf
xchg
out
dec
out
gs
inc
mov
cltd
std
inc
imul
hlt
insb
fnstcw
pop
cli
dec
out
cmp
and
mulb
in
idiv
popf
das
cli
inc
fucom
jb
imul
fdivl
and
mov
add
pop
xchg
xor
sbb
mov
lret
fstl
ss
mov
lods
adc
dec
addps
xor
popf
sarl
sub
lret
cmp
dec
pop
sub
mov
xor
std
push
mov
add
sub
pop
in
push
cmp
cwtl
loopne
dec
rcrl
ljmp
push
adc
push
cmp
aad
jae
outsb
mov
scas
dec
stos
and
outsl
or
imul
xchg
add
ficoms
or
mov
popf
es
loop
mov
mov
push
xchg
rorb
dec
cmpsl
fimuls
cmp
push
xchg
fstps
addb
jb
inc
pop
mov
push
js
pop
inc
dec
pop
adc
mov
pop
or
scas
and
adc
push
ss
lods
and
cmp
ret
aaa
and
test
mov
inc
xlat
pop
xchg
pop
inc
mov
adc
sbb
lock
shrb
aas
xchg
jge
and
testl
xor
outsl
jmp
out
adc
int
push
sub
inc
and
add
icebp
mov
mov
sub
dec
mov
sub
xchg
fsubs
push
rclb
add
push
sbb
rolb
sub
jo
xor
loopne
call
ficomps
mov
xchg
mov
fcomps
pop
fisubrl
jmp
xchg
gs
rorb
inc
pop
dec
adc
add
pop
push
imul
jo
scas
aam
dec
cwtl
enter
repnz
jo
subb
adc
das
jmp
or
mov
inc
lret
dec
mov
xor
lods
cs
adc
hlt
inc
push
cmp
jl
es
ljmp
lods
out
jecxz
leave
or
sub
popf
jg
cmp
sbb
cs
mov
dec
out
mov
sub
push
adc
shl
pslld
push
adc
and
or
jl
dec
movsl
out
popf
xor
loopne
xor
clc
xor
pop
pop
icebp
and
lds
mov
push
lahf
xchg
aas
jns
push
add
sub
inc
cmpsl
or
clc
rcll
push
cmp
rcll
je
cmc
sub
loopne
push
cmp
jno
mov
inc
test
pushf
adc
mov
and
dec
jle
and
sub
clc
jno
add
xchg
lods
mov
add
adc
fsubr
cs
sub
push
test
lret
xchg
incb
push
push
or
xor
aad
pop
xlat
cld
jecxz
cmp
pop
push
xor
or
adc
xchg
lods
xchg
pop
roll
xchg
xor
incl
sub
mov
popa
add
and
mov
aam
inc
pusha
mov
fs
js
insl
jns
fdiv
rcrb
push
mov
xchg
mov
lret
in
jl
pop
adc
outsb
adc
dec
fstpl
xor
int
mov
sbb
jbe
cmp
pop
push
push
in
inc
mov
insb
aad
adc
leave
sub
scas
push
push
mov
mull
push
and
sub
and
sbb
sbb
pop
and
adc
xlat
mov
jae
jle
stc
mov
mov
pop
int3
xchg
fists
fdivl
mov
popf
stc
pop
push
mov
jmp
gs
pop
adc
imul
daa
jmp
ds
ss
cmc
lock
imul
mov
dec
pop
mov
in
sarb
mov
das
clc
cmp
cmp
jmp
les
add
stc
inc
pop
and
or
fsubrp
cltd
mov
insb
and
and
or
mov
lret
hlt
xor
or
pop
bound
lods
add
add
mov
stos
out
and
cmpsb
pop
sbb
adc
cltd
cld
jae
push
clc
mov
data16
mov
test
cld
icebp
mov
mov
adc
mov
mov
cmc
mov
pop
and
int3
ljmp
cmpsb
dec
or
loopne
cmp
mov
mov
pushf
inc
adc
outsb
and
inc
mov
insl
add
cli
loopne
jb
je
icebp
pop
sbb
jl
cmc
lret
clc
push
test
out
addr16
jae
in
cmp
xor
sub
aas
ret
arpl
cmpl
or
test
xor
shrb
sbb
icebp
pop
hlt
lcall
jno
push
cmp
cmp
cmp
xlat
sub
pop
fisubrs
sbb
xor
xchg
test
sub
jle
pop
fildll
or
pop
push
call
inc
in
lock
aas
mov
jmp
rorb
mov
repz
lcall
xchg
or
cmp
cltd
jl
cmpb
testl
push
aad
sub
mov
or
fidivl
sbb
mov
add
cmpsb
or
fcmovu
mov
addr16
push
stos
and
testl
cmp
cld
outsb
xchg
lret
inc
scas
lahf
out
and
push
movsb
mov
xchg
and
inc
dec
inc
xchg
push
arpl
or
aam
cmc
push
add
xchg
sbb
mov
leave
popf
insl
xchg
jecxz
inc
pop
shl
std
loope
dec
inc
inc
mov
jmp
or
xchg
jae
and
mov
ret
xchg
bound
jnp
cmpsl
add
push
push
push
in
sub
in
popf
aaa
jno
xor
cmp
jmp
mov
loope
pop
inc
ljmp
cmpsl
push
daa
aad
fs
fidivl
scas
addr16
ja
cmp
movsl
je
mov
adc
in
mov
push
pop
test
push
xchg
pop
sub
push
loope
es
fs
dec
test
sbb
or
xchg
ss
adc
dec
cli
fnstsw
jae
push
cmp
ds
movsb
lcall
test
mov
in
push
stc
or
jnp
pop
push
dec
movsl
cmc
mov
xchg
mov
jo
pop
xchg
mov
and
out
mov
push
pop
rorl
xchg
and
leave
pushf
dec
mov
das
pusha
scas
add
jecxz
repz
ret
jno
cmp
aaa
sub
jne
shrb
adc
movsl
lret
lahf
aad
xor
xchg
xchg
cmp
pop
jo
nop
jno
bound
jb,pt
cmp
int3
bound
cltd
fcompl
stos
das
jae
aad
sbb
mov
xor
or
mov
inc
add
out
ds
sub
bound
pop
std
jge
hlt
nop
addr16
add
dec
cmpsb
shr
mov
insl
mov
aas
dec
enter
cmp
jb
xchg
adc
jne
jae
insb
lret
ret
loopne
movsl
adc
lea
cmp
cmp
imul
and
ljmp
mov
shl
daa
setb
sub
mov
les
iret
arpl
pop
add
xchg
inc
pop
test
adc
sbb
xchg
jae
pop
inc
dec
mov
adc
pop
mov
xchg
dec
sbb
inc
pop
sbb
pop
mov
push
rorb
andl
test
cmp
push
mov
jo
sub
or
and
dec
out
cltd
push
nop
js
push
xor
enter
xchg
xor
imul
mov
push
in
sahf
xchg
outsb
sbb
and
adc
jge
cmp
int3
sbb
dec
or
lret
mov
mov
and
fidivrl
or
movsb
rcr
jp
add
add
mov
aaa
fs
mov
sub
inc
call
sub
inc
add
sub
out
ret
fistps
movsl
leave
sti
outsb
pop
and
stc
jge
push
cltd
outsb
jmp
jmp
inc
and
xor
mov
or
pop
mov
jg
stos
jge
pop
je
mov
mov
xor
xorb
push
addr16
cmc
or
xor
add
mov
adc
loope
mov
packssdw
jne
add
fisubs
mov
pop
hlt
mov
loop
jmp
dec
jge
ret
xor
mov
pop
mov
pop
mov
sub
mov
dec
mov
hlt
xchg
lds
push
mov
mov
mov
mov
aam
or
orb
mov
loop
mov
popf
daa
addr16
cmp
mov
repz
xchg
dec
pop
pop
fdivrs
add
and
dec
movsl
mov
pop
fcompl
dec
jg
xor
sub
inc
mov
pusha
pop
xchg
cmp
and
dec
jns
adc
mov
in
into
pop
and
sbb
adcb
mov
xor
cld
inc
enter
lds
dec
mov
xor
sbb
sar
cmp
repnz
xchg
inc
loopne
movsb
xor
jg
scas
les
mov
pop
sub
ljmp
jl
fcom
sti
jo
in
loop
pop
leave
imul
sti
sar
xlat
sahf
dec
xor
dec
sahf
leave
out
xor
or
cmp
inc
aam
test
int3
lea
lods
gs
mov
xchg
push
mov
ret
jns
jle
xchg
shrl
xchg
out
iret
fdivs
mov
repz
mov
pusha
sbb
xchg
shrb
aaa
je
push
shl
jno
lret
inc
ret
testb
js
int3
rcll
cltd
and
ret
cmpl
stos
push
xchg
jae
les
mov
jge
sbb
mov
xchg
dec
and
add
mov
mov
out
mov
push
ret
xchg
xchg
test
inc
mov
call
aad
lods
mov
mov
aam
xor
jnp
mov
or
ljmp
pop
mov
aas
dec
shr
fcoms
inc
fidivl
ja
pop
out
stos
add
sub
notb
cmp
cli
and
mov
add
push
outsb
test
fcoml
out
idivl
mov
mov
adc
ret
aam
dec
js
xor
dec
xor
pop
stos
mov
push
jo
sbb
sti
sub
sub
js
mov
adc
mov
xchg
rorb
data16
stc
das
aaa
movsl
sbb
sarb
adc
loopne
ljmp
std
popa
in
test
and
pop
mov
arpl
push
int3
out
decl
inc
cwtl
dec
dec
lea
lods
mov
and
dec
call
mov
inc
dec
mov
rcl
repz
mov
push
jmp
adc
jae
aas
mov
xchg
sub
mov
inc
in
outsb
add
cmp
out
test
lods
push
movsl
fstl
arpl
stos
out
fcoml
in
std
add
aam
and
daa
mov
mov
mulb
inc
jge
xchg
aad
cmp
out
test
mov
nop
outsb
jnp
pop
scas
sub
xor
stos
and
xor
jae
jo
and
mov
jbe
insl
add
cwtl
lods
inc
lret
pop
insb
jmp
pop
sbb
loopne,pt
jo
mov
adc
int
in
movsb
push
mov
mov
fisttpl
lahf
or
dec
fistpll
fcompl
or
test
rcrb
add
jbe
push
aad
dec
pop
js
sub
lret
mov
std
jnp
mov
into
adc
mov
les
in
push
sub
inc
les
imulb
loope
pop
mov
dec
mov
test
and
out
mov
lcall
sub
push
les
push
lea
lods
jle
xlat
popa
iret
data16
clc
adcb
mov
adc
inc
popf
cld
xchg
popa
data16
lcall
lahf
in
cmp
insb
push
and
imul
xor
add
sbbl
inc
jge
jg
insl
pushf
enter
mov
popa
clc
dec
or
mov
insl
shrl
push
sbbl
mov
xchg
fadds
mov
andb
and
jge
lcall
repz
stc
sub
push
out
adc
cmpl
loop
ret
lea
mov
dec
loope
flds
lcall
and
mov
sbbl
aam
cmp
leave
ret
pop
repz
es
dec
jns
jns
outsl
aam
cltd
les
mov
arpl
dec
add
shrl
pusha
sbbl
in
mov
mov
cltd
aas
pop
and
andb
cltd
mov
inc
fs
daa
add
in
xorl
mov
outsl
push
shr
dec
jecxz
cmc
call
arpl
mov
test
mov
fisubs
push
xor
sbb
dec
mov
scas
lods
out
iret
imul
xor
pop
lock
push
add
lahf
lods
outsl
push
shlb
xor
int
inc
push
jmp
mov
lret
lahf
lods
xor
shr
cli
mull
mov
inc
push
lds
stos
and
cld
cmc
or
inc
dec
pop
idivb
mov
adc
mov
hlt
in
in
jb
push
mov
jne
pop
jl
orl
adc
aad
pop
str
mov
push
cld
xchg
test
lods
inc
iret
data16
cmp
cmp
repnz
in
test
aam
push
in
sgdtl
cwtl
cmp
pop
sahf
imul
mov
loopne
sbbl
add
cmp
scas
inc
pop
pop
xor
xchg
push
movsb
cmpsl
mov
arpl
add
cmp
cmovs
adc
test
pop
shll
adc
sub
pop
mov
push
daa
mov
int3
mov
jmp
out
xlat
outsb
sbb
aaa
aaa
cmp
popa
pop
ret
pop
addl
out
fcompp
int3
arpl
add
cmp
inc
pop
pop
test
stos
cmpsl
movsl
xchg
sub
movl
sahf
daa
and
adc
pop
movsb
xchg
jg
iret
cmp
sub
and
pop
dec
aaa
into
jae
std
xchg
movsb
xchg
sbb
into
push
in
add
out
xchg
and
testb
leave
mov
and
adc
pop
divb
cmp
stos
xchg
js
iret
int3
pop
repnz
sub
std
xchg
inc
dec
push
icebp
sahf
xchg
mov
push
sti
lock
sub
xchg
inc
dec
scas
inc
ja
mov
aas
ret
ret
std
in
negb
push
cmp
jmp
dec
loope
mov
xchg
aam
out
push
adc
dec
das
mov
push
cltd
jns
jg
mov
dec
out
add
push
aas
sbb
mov
pop
stos
inc
mov
mov
shl
cli
mulb
xor
es
push
std
xchg
lea
xchg
mov
out
cmc
mov
push
mov
in
lods
mov
test
test
dec
push
cmp
xchg
xchg
scas
push
jmp
lock
std
xchg
and
inc
push
jmp
xchg
popf
mov
js
call
dec
out
xor
mov
mov
data16
fnstcw
test
sbb
xchg
mov
mov
loopne
mov
inc
cmp
outsl
popa
outsl
push
cwtl
nop
sub
enter
lock
fdivl
inc
pop
scas
js
shrb
cltd
pop
hlt
iret
ret
div
aaa
into
sub
aaa
into
dec
dec
xor
jg
popa
clc
test
and
stc
push
in
and
jno
pop
inc
testb
sahf
aad
enter
add
push
in
adc
xchg
sub
xchg
sub
jle
inc
lods
test
pop
mov
insl
std
aam
pusha
add
icebp
mov
xchg
push
insl
or
mov
ret
inc
fdiv
adc
inc
sbb
dec
pop
repz
outsl
jp
pushf
mov
sbb
mov
mov
pop
inc
pop
mov
mov
pusha
xchg
scas
shrb
mov
xchg
in
jmp
sub
push
lods
xor
or
andl
cmp
and
jns
sub
jb
pushf
xor
ja
les
xchg
xor
sub
popa
jnp
xlat
je
xchg
repnz
cmpsb
shl
or
sbb
xor
and
sbb
xlat
jb
sub
push
enter
sbb
xor
jo
mov
out
test
pop
mov
fcomp
insl
pop
cmp
sbbl
adc
pop
ret
aas
leave
ljmp
jecxz
pop
adc
ja
mov
popa
pop
out
lds
iret
jo
repz
dec
push
mov
inc
sahf
insl
shll
mov
je
mov
add
ss
shrl
les
sti
cmpsl
push
hlt
fsts
andb
mov
pushf
inc
mov
jnp
cwtl
cs
xchg
loop
int3
add
mov
push
mov
in
mov
jb
mov
aam
inc
or
and
pop
roll
cltd
iret
jb
cmp
pop
lret
out
punpckhdq
pop
fcmovb
imul
or
js
fstpl
xchg
xchg
adc
cmpsb
in
mov
cmc
xor
push
jbe
jl
jecxz
xor
adc
pop
mov
int3
insl
in
sub
jge
pop
pop
fnsave
in
lea
mov
cmp
jge
push
outsb
or
or
mov
mov
das
lret
mov
js
fcoms
stos
dec
out
out
in
test
jp
xor
adc
test
inc
cmc
dec
mov
jo
lahf
in
mov
and
shll
xlat
popa
aaa
shl
jg
dec
add
push
shrb
push
push
xchg
test
pop
fstpl
adc
cmpsb
add
push
fdivl
rep
jbe
movsl
push
push
inc
fldenv
push
sbb
je
shl
xchg
or
lahf
mov
iret
sbb
scas
push
sub
add
xor
push
movsl
xor
in
add
cmp
cmp
cli
dec
das
rorl
rorb
jge
push
fwait
xor
mov
and
outsb
mov
aas
sub
in
add
jnp,pt
sbb
lret
ret
lods
std
int
sbb
pop
jecxz
sub
xchg
insl
or
add
or
push
mov
fcmove
outsb
hlt
aas
sub
pop
or
push
out
sub
lret
xor
hlt
sbb
push
sub
xchg
movsl
pushf
inc
out
mov
adc
cli
or
imul
fwait
js
and
mov
lds
adc
test
dec
mov
aad
mov
push
in
out
fcomps
out
test
ja
mov
ja
clc
mov
loopne
lods
adc
jecxz
push
xor
int
aas
add
out
xchg
and
or
aaa
into
adc
ss
loopne
jge
cmp
shlb
xor
and
outsl
push
das
fwait
xor
into
gs
lret
cld
aad
jle
push
mov
push
sub
pop
mov
les
test
cmp
pop
jle
dec
and
push
push
push
xor
mov
xchg
clc
adc
jb
sbb
mov
arpl
xchg
xchg
imul
pushf
mov
mov
out
or
cmp
dec
jecxz
pop
jp
mov
rcll
enter
xlat
outsb
xor
jne
xchg
pushf
xchg
and
xor
inc
fdivs
pop
iret
xchg
inc
pop
divb
in
test
jae
adc
or
pushf
xor
jg
shrl
loop
mov
addr16
mov
and
mov
mov
cmp
sbbl
addr16
push
jbe
stos
jno
pop
mov
pop
cmp
pop
sub
xchg
insb
add
rcrb
xor
push
out
jae
fidivl
xchg
test
mov
in
subl
xchg
sub
adc
push
adc
cltd
xor
dec
loop
cmpl
xchg
fbstp
test
xor
and
jne
in
cli
xchg
pop
xchg
jnp
inc
jg
stos
scas
addr16
sub
mov
aas
loop
pop
add
jecxz
cmp
and
push
jne
push
xchg
js
push
fdivrl
imul
adc
dec
cmp
pushf
pop
imul
rorb
cli
mov
into
fstpl
sbbl
pop
repz
jnp
jne
cmpsb
pushf
jmp
sbb
int3
add
aam
push
ret
jp
call
ljmp
sbb
insl
scas
aad
cltd
mov
dec
aam
push
inc
loop
inc
arpl
jbe
imul
stc
jbe
outsb
test
mov
xchg
imul
cltd
or
and
ja
mov
xchg
test
cs
push
dec
inc
fildl
daa
insl
hlt
inc
and
mov
les
and
mov
aaa
lahf
daa
out
jns
dec
mov
cld
iret
pop
mov
jno
mov
iret
out
add
add
dec
inc
fidivrs
icebp
jl
jecxz
jp
ret
aas
or
jae
mov
add
frstor
pop
cmc
mov
mov
adc
stos
mov
es
fcompl
icebp
mov
pop
push
out
cld
adc
cmp
mov
push
in
andb
cltd
mov
pop
es
dec
in
and
ja
jne
lahf
ss
int3
arpl
pop
lds
xchg
ljmp
lahf
lahf
xor
xchg
mov
mov
insl
add
and
insl
jg
pusha
test
or
sbb
or
pusha
pushf
cmp
into
arpl
mov
inc
js
jb
jmp
cmp
cmp
mov
mov
sub
and
pop
hlt
xchg
nop
lock
xlat
imul
mov
aas
sub
outsl
jge
dec
outsl
ljmp
adc
inc
faddl
and
push
mov
test
mov
cld
sub
jne
lods
pusha
negl
sub
sahf
xor
rcr
test
or
int3
mov
inc
fwait
xor
mov
testb
sbb
mov
movb
adc
mov
mov
mov
pop
stos
sarb
push
mov
pushf
and
ret
pop
inc
and
xchg
add
insl
xor
adcb
mov
xchg
jecxz
les
data16
imul
pop
dec
dec
in
mov
js
das
push
rclb
mov
test
fwait
mov
int
cmp
in
mov
jge
lock
loope
lock
push
jmp
out
sbb
mov
sub
or
push
jmp
dec
data16
mov
into
push
call
push
iret
push
out
rcrb
dec
repnz
cmc
jecxz
fidivs
adc
test
pop
repz
outsb
sahf
xor
dec
sub
out
imul
testb
or
inc
fdivrl
ds
out
scas
mov
ss
outsb
sub
dec
daa
xor
push
mov
add
gs
inc
inc
int3
arpl
cmp
xor
test
lods
inc
test
fbstp
das
fidivs
mov
jg
inc
mov
adc
repz
lods
inc
ficomps
into
ss
pop
sbb
dec
pusha
div
mov
add
pushf
xor
ds
adc
sbb
jno
pop
data16
dec
mov
and
xor
sti
fs
mov
cli
pop
mov
push
sub
fmull
leave
jp
fbstp
std
fs
sub
lods
jbe
filds
lahf
ss
mov
jg
mov
inc
bound
fdivl
popa
mov
test
xchg
out
add
dec
lods
inc
cmp
inc
flds
cmp
jmp
mov
jle
jae
sbb
xchg
and
jg
adc
jns,pt
into
gs
out
outsb
mov
in
cmpsb
cmp
xchg
sahf
in
adc
lret
xchg
ss
inc
data16
je
fidivl
repz
and
sahf
xor
aam
fnstenv
xchg
lods
inc
in
ss
sbb
mov
out
xchg
call
xor
mov
and
push
mov
int
mov
pusha
imull
xor
arpl
pushf
xor
ljmp
adc
fsubrs
mov
or
movsb
cmp
shl
jns
sbb
addr16
hlt
mov
lret
mov
mov
xor
push
out
pop
icebp
and
insb
add
sub
lds
mov
rcll
inc
mov
push
push
lcall
and
mov
cmp
mov
dec
es
mov
int3
and
loopne
int
pop
icebp
mov
ljmp
mov
lret
inc
xchg
sub
cs
xor
xchg
mov
lret
lret
mov
add
cwtl
xchg
sub
cmp
lods
inc
pushf
sbb
push
mov
scas
out
and
adc
mov
mov
sbb
ret
mov
pop
repnz
add
lret
xor
mov
jns
xor
shll
outsb
sbb
es
dec
ljmp
fistpl
or
mov
add
cmc
dec
loop
enter
in
xchg
xlat
jle
aas
mov
lea
cmp
fidivrl
lret
test
and
xchg
mov
sarl
repz
out
out
outsb
add
outsb
test
das
fldt
daa
pop
sahf
ret
sahf
push
movsl
sets
imul
mov
inc
lea
popf
mov
cmp
cmpsl
imul
cmp
and
xchg
aad
aas
ficoms
mov
int3
arpl
adc
dec
xchg
addr16
mov
fnstenv
mov
jne
in
jmp
pop
daa
data16
cwtl
ficompl
je
lret
daa
mov
jle
mov
loope
shlb
icebp
add
je
insb
add
aam
xor
pop
ret
cmc
lcall
cmpsb
dec
dec
in
and
jnp
sbb
cmc
adc
inc
fsubrp
add
mov
fidivrs
pop
insl
data16
popf
into
jo
rcrb
repnz
fucom
inc
shrl
adc
addl
rclb
or
xchg
in
test
jp
aad
test
scas
mov
out
xchg
fsubs
mov
ljmp
test
xchg
clc
es
stos
inc
out
sarb
sahf
ffreep
lret
stc
push
in
nop
cmp
mov
aas
mov
push
cmpsb
push
lock
and
movsl
stc
aad
pop
lock
xchg
je
lods
mov
cmp
dec
xor
xchg
add
fidivl
inc
in
ss
addl
into
cmpsl
ret
push
mov
cmpsb
mov
sbb
movsl
pop
jbe
dec
and
leave
push
nop
dec
loopne
adc
mov
mov
mov
dec
loopne
push
testb
xchg
jl
sub
in
push
mov
xor
sbb
jp
loope
add
inc
adc
orl
mov
mov
xor
in
mov
mov
popf
sub
test
loopne
jge
dec
cltd
xor
sub
cmp
inc
das
ret
mov
fnsave
insb
add
popf
out
into
sub
cli
popf
mov
mov
cmp
popa
clc
sub
int3
push
ret
mov
pop
testb
stc
sub
imul
lahf
lds
cld
iret
jno
inc
mov
and
gs
mov
add
sub
adc
stc
popf
sarb
repnz
xor
jne
loopne
adc
andb
push
rcrl
mov
cld
and
cltd
xor
data16
enter
xchg
cli
xchg
sub
pusha
data16
xchg
out
popa
clc
loopne
jo
xchg
xchg
sub
inc
lcall
cmc
lods
inc
es
sub
mov
pusha
imull
xchg
call
pop
mov
mov
and
mov
test
xor
int
mov
jecxz
notl
sti
adcb
push
or
jae
jecxz
pushf
xor
jecxz
adc
scas
inc
stc
sbb
mov
jge
mov
lret
jb
mov
fists
push
jne
scas
inc
fs
cmp
mov
mov
rcr
ljmp
sub
lahf
pop
nop
repnz
jge
mov
cmp
inc
fildl
ds
stc
push
insb
pop
repz
jae
pop
movsl
fisubrl
or
popf
xor
test
sbb
cmp
aam
pop
pop
sar
repz
loope
pop
adc
mov
jp
xchg
lods
arpl
int
int
mov
mov
jmp
dec
add
xor
push
out
push
xchg
xchg
mov
rorb
mov
test
inc
xchg
inc
in
cmpb
pusha
out
or
xor
sub
sbb
or
lea
inc
fisubrl
and
cld
inc
xlat
sub
dec
pop
cmc
xorb
adc
mov
xor
jo
dec
mov
mov
insl
int
adc
mov
aad
lret
adc
pop
xchg
xor
fwait
outsl
push
or
push
mov
subl
fs
test
add
les
lcall
and
pop
push
inc
fildl
mov
clc
adc
jg
in
add
lock
or
loope
dec
shll
cmp
push
mov
test
testb
testb
out
jmp
int
scas
pop
icebp
fs
mov
shlb
mov
cmp
cmp
dec
xchg
jmp
dec
sbb
fsub
jnp
and
lea
mov
and
xchg
aaa
sub
addr16
pop
repnz
loop
repz
jae
jns
outsb
add
outsl
ret
cwtl
das
hlt
outsb
mov
pop
movsl
arpl
insl
push
and
imul
mov
adc
sahf
inc
add
scas
je
adc
divl
jne
call
jmp
dec
fstpl
pop
mov
icebp
mov
shll
leave
ret
push
das
add
je
into
fsubl
inc
push
fwait
clc
int
call
cmpsb
mov
cmp
shrb
in
adc
dec
loop
push
fdivl
fidivrl
or
int3
xchg
cld
jecxz
out
jp
sub
ret
pop
pop
or
js
sbb
insl
dec
fnsave
repnz
jecxz
cmpl
ss
mov
ja
sub
pop
es
arpl
fcmovnbe
outsb
int
sahf
xor
cmpb
push
ja
dec
test
das
aad
popa
and
insb
xchg
call
fimuls
mov
jp
cmp
pop
jp
outsb
insb
ret
hlt
outsl
fdivl
jae
push
movsl
fs
insl
push
and
cmp
xlat
outsb
notb
mov
inc
or
outsl
jp
aam
aaa
mov
outsb
mov
popf
jecxz
mov
andb
xchg
mov
sub
push
cmp
test
xchg
dec
jecxz
jl
jecxz
repz
and
movsl
mov
xlat
aas
pop
sahf
mov
xchg
sub
ret
mov
les
ret
cmp
mov
insl
data16
push
movsl
mov
add
mov
int
pop
mov
iret
pushf
xor
jne
in
icebp
push
popf
loop
js
push
adc
out
test
mov
mov
inc
pop
ja
dec
add
in
outsb
mov
mov
mov
and
aaa
xchg
push
das
movb
pop
lock
pop
hlt
popf
icebp
imul
scas
sub
fldcw
jo
mov
rcl
outsb
ret
xchg
mov
repz
jp
adc
cmc
mov
std
xchg
sub
pop
mov
pop
push
in
dec
shrl
rolb
cmp
insl
lds
negb
insl
add
inc
jne
xor
xchg
cs
inc
fidivl
adc
pop
inc
dec
cwtl
das
cmp
aad
xor
ds
xchg
jmp
jo
mov
and
cmp
push
push
nop
daa
inc
adc
inc
jbe
pusha
push
lcall
jecxz
lret
insb
mov
sahf
cmpsb
nop
daa
sbb
jns
jg
insb
jno
hlt
mov
lea
stc
es
imul
arpl
lcall
or
fldl
ss
cli
xchg
icebp
sti
test
jmp
fildl
cld
in
lods
jl
les
pop
adcb
lds
dec
sbb
fdivr
xchg
or
fwait
pop
cmc
pop
js
jg
or
sbb
imull
hlt
mov
imul
lcall
pop
adcl
pop
mov
in
adcl
inc
fdivrl
push
in
loopne
imul
aam
lds
or
imul
jbe
fwait
cmpsl
hlt
mov
and
scas
push
in
fists
inc
flds
sub
popl
push
in
cmp
lret
sarb
add
mov
test
or
pusha
insb
mov
pop
out
sbb
testl
or
xor
push
and
lods
out
push
fsubrs
outsl
push
pop
sbb
mov
lcall
or
pop
jecxz
xlat
outsb
out
adc
lods
test
cwtl
lcall
stos
pop
push
in
dec
dec
inc
fdivrl
call
das
sahf
mov
adc
ds
pushf
mov
into
mov
mov
push
xchg
cmp
pop
insl
cmpsl
push
lods
sbb
rcrl
jno
push
arpl
shrl
xchg
push
in
add
xor
lods
xlat
lcall
stc
ss
sbb
jecxz
sbb
jno
or
idivb
mov
insl
mov
popf
fists
rcrb
lea
insl
js
ja
jle
push
out
stc
mov
popa
jle
mov
loopne
dec
in
push
leave
pusha
mov
mov
sbb
cmp
sub
sub
dec
in
stos
pop
hlt
fmull
insb
cmp
dec
inc
fidivrs
mov
mov
cmp
cmp
pop
jmpw
sbb
fbstp
dec
daa
mov
or
sub
xor
mov
stos
mov
push
out
pop
push
pop
mov
sbb
and
or
mov
mov
mov
loopne
or
mov
pop
jnp
jo
sub
dec
lea
js
mov
sti
mov
sub
lods
loope
fisubs
scas
push
cltd
repz
sbbl
mov
cmp
imul
xor
pop
out
and
adc
sbbb
pop
out
add
mov
inc
xchg
mov
cmpsb
imul
sti
xchg
addr16
int3
arpl
jecxz
mov
dec
rorl
sub
jecxz
sti
jno
in
jle
stc
sbb
mov
mov
mov
shlb
or
adc
hlt
mov
inc
in
pop
push
into
gs
andb
mov
mov
and
and
jae
nop
jnp
add
out
xchg
dec
loope
adc
mov
xor
les
mov
out
out
sti
xchg
inc
popa
sbbl
stc
push
xchg
sub
inc
call
and
div
mov
incb
mov
in
ss
out
and
push
pusha
testl
int
loop
cmc
pushf
xor
mov
scas
inc
aad
or
cmpsl
add
fld
pop
add
les
inc
popf
lds
cltd
xor
adc
test
and
sbb
xor
gs
push
popf
push
in
cld
adc
aad
push
pop
dec
add
xor
sti
xchg
mov
mov
frstor
cli
xchg
adc
mov
push
cmp
test
xchg
addr16
dec
jecxz
xchg
push
popf
or
jle
es
xchg
lods
mov
add
sub
add
mov
mov
ret
cwtl
cmc
mov
mov
test
cwtl
clc
jmp
gs
fdivr
push
mov
mov
xchg
jae
aaa
movsl
mov
pushf
and
pop
hlt
pusha
push
jmp
dec
out
sbb
cltd
insb
fbstp
adc
mov
cwtl
xchg
into
mov
add
jbe
sub
popf
cltd
jge
subb
sbb
loopne
sbb
xor
stos
dec
sub
in
insl
loop
jmp
mov
sbb
jecxz
add
mov
xor
hlt
push
adc
bound
pop
out
inc
mov
pop
pop
cmp
stc
mov
and
xor
dec
jle
push
jecxz
ljmp
mov
mov
sbb
lods
sub
in
les
mov
test
mov
out
aas
and
mov
add
mov
push
push
push
aam
xor
int
rcl
adc
jg
mov
mov
pop
inc
mov
mov
inc
and
cli
mov
lahf
aaa
lods
mov
cmp
xor
adc
cmpsl
das
or
scas
mov
xor
out
cmp
fsts
sbb
or
adc
sbb
xchg
cmp
in
adc
nop
popf
orl
mov
xorl
mov
ljmp
xchg
cmp
xorb
adc
scas
pop
orb
loopne
shl
mov
dec
ja
xor
and
aam
icebp
xor
xchg
loope
add
add
dec
or
int3
xor
and
mov
pop
push
dec
dec
out
scas
xor
mov
negl
sub
mov
jmp
fstsw
jge
push
sbb
pop
mov
and
and
in
popa
xor
leave
nop
lea
mov
mov
scas
cmp
stos
shrb
imul
call
cld
push
cli
jno
imul
arpl
icebp
rol
ljmp
in
mov
lods
jg
loop
mov
xor
testl
jp
test
outsl
and
mov
pusha
jmp
mov
pop
movaps
jmp
pop
or
xlat
aad
test
mov
add
jmp
add
pop
outsl
int3
nop
test
fsts
pop
cmp
mov
int
jmp
push
or
adc
cmp
lock
adc
pop
pop
add
popf
xchg
sub
sarl
or
cli
sbbb
push
pop
ret
push
jb
test
mov
mov
mov
inc
or
test
pop
add
fdivrl
aaa
pop
pop
adc
test
stos
pop
js
dec
sub
cmp
das
xor
lods
popf
mov
js
in
into
add
lret
insb
ret
mov
cs
push
lret
push
mov
and
std
push
jecxz
loop
pop
inc
sti
and
test
sub
inc
mov
jg
pop
test
sbb
mov
loope
fcmove
pop
clc
nop
in
lods
sub
jmp
mov
push
into
shrl
mov
ja
dec
dec
add
aas
enter
jecxz
repz
loopne
fdivrs
sti
sub
int
dec
push
rcrl
pop
jl
or
jge
adc
cwtl
xchg
jp
mov
fldenv
in
aam
repnz
clc
sbb
or
jp
push
pusha
cmc
and
divb
xchg
subl
into
dec
mov
scas
mov
movsb
mov
mov
scas
sub
aad
movsb
adc
hlt
push
popf
shll
xor
or
lcall
lahf
cmpsb
sub
xchg
loope
push
pusha
movsl
xor
push
push
scas
cmpsb
mov
sbb
add
nop
dec
push
rcrb
xor
sbb
add
pushf
mov
call
jns
and
rcrb
call
loopne
leave
push
outsl
leave
dec
ror
in
stos
loope
inc
mov
add
mov
inc
gs
insl
jns
movsb
xchg
loop
ljmp
inc
out
mov
push
sbb
mov
xchg
adc
sub
popa
pop
xchg
outsl
hlt
sti
mov
mov
xor
dec
notb
stc
sar
loopne
pop
jo
test
mov
rcll
jl
pusha
cli
cmp
pop
aaa
ds
mov
dec
add
adc
test
icebp
jg
sub
in
loope
sbb
loopne
jbe
pushf
divl
stos
shr
cmp
ds
jp
dec
and
mov
lock
mov
mov
add
shll
mov
data16
mov
lcall
arpl
push
jl
out
movsl
adc
push
sub
mov
fimuls
jne
mov
cwtl
mov
push
and
dec
loop
nop
push
pusha
repz
int3
push
xchg
jns
adc
jge
daa
ret
sub
mov
movsl
mov
sti
and
jno
call
insb
xor
loopne
arpl
add
mov
mov
push
data16
in
dec
dec
dec
pop
pop
lret
nop
jmp
and
xor
call
adc
and
ja
xor
repnz
inc
cltd
sar
mov
rcll
call
out
mov
test
dec
mov
bound
inc
rol
sub
and
sbb
loop
jmp
js
hlt
xchg
inc
outsl
repnz
xlat
fcomps
int
inc
int3
jp
xor
jae
addr16
shrl
lret
and
push
jbe
push
aas
scas
inc
jno
repnz
xchg
lret
sbb
out
pop
jo
enter
popf
push
mov
mov
dec
fildl
outsl
xchg
xor
mov
test
mov
fdivrl
scas
scas
mulb
mov
mov
dec
mov
mov
sarl
cmpsl
je
divb
cli
inc
mov
rorl
dec
sbb
and
or
inc
mov
sub
cmp
push
ljmp
daa
stc
stc
sub
dec
ftst
sub
pusha
inc
rorl
fnstcw
pop
lcall
pop
call
test
in
and
icebp
out
xchg
mov
out
bound
rcll
je
mov
mov
mov
adc
mov
push
out
pop
push
mov
mov
mov
add
mov
inc
xor
int3
jp
inc
sub
cs
arpl
push
push
push
push
push
fdivrl
fs
dec
sbb
inc
push
lods
pop
cmp
cld
xor
das
cmpsl
ret
pop
rorl
fdivs
fisubrl
pop
push
add
cmp
add
lods
shlb
test
mov
jns
sbb
cwtl
mov
push
lds
dec
cmpsl
pop
push
fs
jo
js
cmpsb
pop
mov
or
sti
xlat
aas
mov
push
push
add
jae
lods
stos
push
outsl
push
inc
mov
scas
mov
pusha
push
mov
cli
push
jecxz
in
jl
cwtl
or
call
sahf
jge
lgdtl
test
inc
nop
sahf
ret
lods
inc
mov
mov
sahf
dec
sbb
insb
pop
pop
lock
push
and
gs
in
xor
testl
add
das
or
push
addr16
sbb
imul
add
arpl
xor
dec
push
sbbb
xchg
imul
repnz
mov
cmpsl
pop
dec
fdivl
subb
mov
cli
xchg
rcl
inc
fadds
repz
and
inc
xchg
sub
jge
test
mov
lret
leave
fwait
das
push
mov
test
aam
setae
les
repnz
sub
push
test
cmpsl
mov
dec
out
imul
popf
sbb
dec
mov
mov
lahf
adc
inc
repnz
rclb
pop
cmc
jnp
and
adc
sub
lcall
inc
mov
pop
xor
lret
inc
clc
repz
push
ljmp
jno
mov
les
frstor
jns
inc
stos
sahf
push
mov
int3
pop
lock
and
out
push
inc
pop
cmp
into
or
mov
push
jmp
adc
scas
inc
jb
or
nop
add
lea
mov
pop
notb
insb
adc
arpl
fwait
sti
lods
xor
pop
arpl
sbbb
test
divb
jge
or
cmpsb
sub
je
jl
shrb
int
out
insl
sbb
push
mov
xchg
sub
mov
mull
or
ss
and
popf
popa
rclb
scas
shll
mulb
sbb
jb
push
imul
jae
mov
mov
cmpsl
dec
lods
add
xlat
aad
pushl
sti
xchg
push
aam
dec
cmpsl
jo
out
pop
mov
aam
addr16
pop
xchg
sub
scas
scas
inc
loopne
or
stos
add
gs
sub
std
push
in
addl
or
mov
ret
test
push
movsb
cmp
fs
into
imul
sbb
mov
mov
xchg
inc
xchg
mov
mov
call
cmp
out
cli
xchg
insl
or
cmp
js
mov
ss
scas
xchg
sub
arpl
mov
xor
jnp
ljmp
fidivrl
sbb
je
xchg
mov
montmul
cmpsb
add
xchg
sbb
fnstsw
roll
repnz
aam
dec
test
inc
fistpl
dec
loop
jle
sub
loopne
mov
add
out
xchg
mov
int3
mov
xchg
daa
into
pop
sahf
sbb
and
mov
in
mov
jo
xchg
lods
inc
mov
stc
nop
cmc
in
imul
pop
inc
fmull
test
testl
mov
jecxz
and
pop
hlt
aam
rcrl
arpl
out
fbstp
or
sarl
add
and
insb
add
sar
mov
ja
push
aad
add
mov
out
cmp
sti
and
in
movsb
icebp
mov
or
sbbl
mov
and
movsl
lds
sub
scas
gs
fcomp
gs
lret
xor
sub
fsubrl
mov
out
mov
shlb
rorb
mov
mov
fdivl
pop
mov
enter
leave
jo
mov
addr16
jo
lock
loop
out
lds
cmp
cmp
hlt
mov
mov
loopne
lcall
push
lret
enter
pop
adc
clc
push
mov
cmc
gs
or
lahf
lds
push
movsl
mov
inc
fdivr
lods
dec
loop
cmpsl
iret
data16
outsb
add
jecxz
or
ret
jbe
jecxz
loope
mov
outsb
add
hlt
or
push
jp
dec
loopne
fwait
sbb
mov
in
lock
shlb
adcb
roll
les
inc
mov
mov
jmp
gs
stc
or
add
or
adc
int
movsb
mov
sub
mov
inc
xlat
addr16
rcrl
fistpl
addr16
in
in
sbb
movsbl
js
cmp
mov
lods
inc
xor
sbbb
imul
xchg
enter
or
dec
int
sub
ja
jb
loopne
xor
sub
iret
pushaw
xchg
dec
in
inc
test
es
mov
mov
mov
xchg
dec
pop
lock
pop
pop
push
pop
jnp
xorl
arpl
aad
notb
and
or
lahf
sbb
jl
cmp
sub
into
mov
leave
fwait
loope
stos
rolb
xchg
sub
push
decb
push
js
fidivl
cltd
les
push
dec
jecxz
sub
sub
mov
cmp
xchg
push
std
xchg
inc
or
push
gs
push
lds
out
sti
fucom
jp
sbb
stc
nop
aam
enter
pop
sahf
scas
inc
arpl
xor
or
inc
sbb
cmpsl
dec
addr16
pop
lock
mov
jnp
mov
icebp
in
call
lahf
ss
pop
js
mov
fidivl
inc
adc
inc
pop
push
in
dec
loope
into
sbb
leave
pusha
pop
mov
jg
jo
pop
testb
popf
xor
and
mov
or
scas
imul
cmp
cmpsl
movsl
pop
out
test
popf
xor
jo
fldenv
xchg
sub
insb
add
cli
testb
rorl
add
adc
scas
mov
jmp
mov
xorl
cmc
jmp
out
jp
push
or
out
sub
into
scas
inc
cld
das
popf
xor
sahf
sbb
mov
cli
xchg
fs
mov
xor
test
fcom
pop
div
stc
cmp
ljmp
les
fisubl
inc
xor
xorl
aaa
into
imul
mov
or
jge
aam
push
ficoms
out
lods
fcomps
lock
imul
cmp
lods
adc
jl
and
xchg
movsb
ret
or
push
movsl
mov
mov
push
lret
sub
xor
andl
ds
push
push
adc
mov
adc
ss
cmpsl
lcall
mov
fldt
push
out
jmp
loopne
inc
fisubrl
iret
mov
int3
push
cwtl
das
mov
pusha
push
call
sub
out
dec
ja
cmp
pop
into
gs
adc
iret
dec
jno
enter
insl
sbb
sbb
push
xor
xchg
lea
push
clc
icebp
lods
cs
insl
pop
int
xor
loope
repnz
lcall
pushf
jo
ret
pushf
jbe
outsb
add
or
jl
outsl
sub
fs
or
or
xchg
sub
push
pop
inc
lahf
cmpsl
ds
pop
test
fisubl
add
clc
push
dec
loop
sbb
mov
and
pop
mov
xor
xor
outsl
push
inc
xchg
out
xchg
gs
ss
xchg
cld
imul
sbbl
mov
cld
xchg
scas
adc
xor
jmp
es
push
push
fnsave
or
out
sbb
mov
pop
out
xchg
sbbl
ss
scas
inc
dec
xlat
xchg
adc
mov
imul
iret
data16
add
add
mov
xchg
sub
movsl
push
mov
fwait
daa
sti
sbb
cmp
jbe
repnz
inc
enter
push
and
icebp
xor
pop
jo
sbb
movsb
adc
push
aaa
mov
mov
lret
mov
frstor
into
insl
pop
sahf
mov
dec
fnstenv
add
mov
fs
push
in
add
mov
cwtl
fdiv
mov
mov
pop
scas
fmuls
jb,pt
mov
push
inc
sbbl
jno
and
fidivs
test
jae
call
inc
fisttpll
stos
cmp
sbb
jle
scas
jne
pop
mov
scas
inc
shll
push
loop
data16
pop
cmc
testb
cli
or
add
test
neg
nop
sbb
jne
shlb
fstl
lea
jl
sbb
cltd
mov
jbe
sbb
and
test
cmp
psadbw
lea
dec
in
mov
xor
jno
movsb
xor
add
cmp
ds
in
push
or
popa
fbld
aas
and
push
sbb
or
adc
and
xchg
adcb
mov
shlb
inc
pop
fcmovnb
into
fwait
xor
stos
es
jmp
enter
mov
test
ret
add
cmp
lods
mov
push
loopnew
cli
aam
jg
sbb
jne
in
pop
dec
rorl
mov
jl
or
adc
cmp
mov
push
popf
mov
subl
jns
push
mov
inc
fdivrs
lahf
dec
pop
repz
imul
into
pop
cli
insl
sahf
and
sbb
fnstcw
jmp
hlt
inc
push
mov
js
cmp
push
jno
sub
jnp
pop
xchg
leave
mov
pop
mov
loope
fsts
inc
rcll
cltd
insl
in
pop
lea
sub
lret
xchg
aas
mov
decl
or
and
adc
repnz
mov
adc
enter
cmp
out
mov
adc
loope
dec
or
imul
lock
rorl
movsl
add
stc
les
cmpb
cltd
dec
add
push
movsl
and
outsb
cmpsl
lods
movl
add
aaa
arpl
fnsave
jae
jge
cmpb
dec
cwtl
subb
sub
jge
jae
sbb
pop
xchg
fwait
mov
xor
jns
cmpsl
cmp
inc
int
push
icebp
inc
das
cmp
andb
xchg
mov
xor
in
js
daa
pop
push
call
jp
outsl
push
mov
lea
out
shrb
add
jae
lret
xchg
push
movsl
lds
sub
pop
cli
push
popf
sub
dec
loope
dec
and
jge
push
fxch
fldl
mull
xor
jne
ret
xchg
pushf
xor
xlat
loopne
or
mov
xchg
pop
cmp
sbb
scas
nop
mulb
mov
popa
ret
ror
jo
rol
mov
fbld
rcl
inc
mov
loopne
xor
lock
and
bound
cltd
xor
test
shrb
mov
cli
int3
scas
call
or
xchg
add
scas
mov
addl
or
inc
jbe
jp
mov
inc
cmpsb
data16
xchg
push
inc
pushf
enter
test
lods
mov
bnd
or
cmp
cmc
mov
cwtl
das
je
stos
movsl
mov
dec
loop
xor
testl
push
out
push
repz
test
mov
out
sti
das
sub
stos
inc
inc
dec
dec
in
fs
pusha
xchg
lahf
imul
mov
jle
repnz
and
push
popf
cmp
cmpsl
ja,pt
and
mov
inc
fchs
jmp
jp
add
xor
add
xchg
popf
xor
loop
aam
sti
mov
in
and
sub
inc
std
lcall
push
mov
daa
in
mov
and
sub
mov
jl
in
icebp
popf
js
iret
adc
inc
loope
or
xchg
xor
shlb
out
out
jl
mov
fistpl
mov
pop
adcb
sub
push
mov
xorb
mov
call
adc
rolb
add
fs
pop
mov
lds
jl
push
xor
fldt
and
outsb
clc
icebp
iret
mov
and
xlat
lea
movsb
jmp
cmp
mov
xchg
inc
or
or
inc
inc
pop
hlt
xchg
out
or
dec
add
enter
std
jne
insl
fs
adc
pop
jl
shrl
cmp
dec
dec
mov
cmpsb
pop
push
popa
inc
mov
jge
andb
fwait
and
cltd
push
in
mov
push
aam
mov
lcall
jbe
insl
adc
mov
add
leave
lret
mov
adc
push
test
lods
xchg
insl
dec
sub
aam
and
dec
fidivrs
iret
dec
xchg
loopne
hlt
subb
out
mov
mov
imul
js
jbe
dec
mov
jp
decl
mov
mov
data16
mov
pop
add
das
mov
jecxz,pn
xchg
adcb
sarb
lods
inc
and
inc
leave
popa
jbe
pop
icebp
xchg
cwtl
jmp
or
sbb
xchg
sub
cmp
mov
xchg
mov
mov
fisubs
or
xor
cmpsl
xchg
andl
xor
inc
inc
mov
push
xchg
pushf
fdivl
mov
cli
nop
and
lods
inc
inc
inc
sbb
xchg
xchg
cmp
enter
ljmp
mov
cmp
pop
and
shlb
inc
adc
fidivl
cmpsb
mov
sbb
mov
sub
scas
pop
iret
xlat
outsb
add
lds
or
xlat
outsb
pusha
pusha
add
push
pop
jge
movsb
aaa
in
imull
dec
shr
popf
mov
adc
sbb
cltd
lret
and
dec
push
iret
imul
fidivl
lret
outsb
jns
jle
in
mov
ficoms
add
enter
pop
fwait
sahf
xor
ja
cmp
enter
fstl
mov
xchg
rcl
mov
push
in
ret
inc
into
gs
cmp
test
lods
std
xchg
push
jb
out
arpl
imul
icebp
sub
xchg
sahf
insl
jecxz
cmp
bound
xchg
dec
sbbl
cmp
jge
pop
pop
leave
inc
inc
mov
mov
jmp
push
sbb
ds
dec
scas
sbb
jl
adc
cmp
jne
stos
cmpsb
or
aaa
mov
out
fnstenv
incb
int3
call
push
shr
xlat
movsb
popa
in
inc
sar
pushf
xor
mov
cmc
repnz
push
adc
mov
add
std
xchg
fidivl
shl
ficoml
and
imul
rcrl
mov
sub
lret
les
arpl
inc
incl
aam
mov
imulb
sub
mov
pusha
mov
fimuls
dec
jle
out
sub
add
mov
and
inc
and
jb
mov
fldcw
clc
push
dec
call
clc
dec
mov
sbb
inc
inc
mov
ja
push
out
push
out
fnstcw
outsb
divb
call
add
sbbl
pushf
or
mov
xchg
adc
call
call
std
js
push
imul
cmc
leave
push
aam
lods
cmp
ficoms
fnsave
push
test
mov
jo
mov
pop
and
pop
cmc
incl
lds
sbbl
lods
mov
jl
insl
xchg
push
sarl
in
mov
fistl
sub
orb
dec
loop
stos
cmp
cmc
and
lret
cmp
jae
sbb
mov
mov
les
xor
loopne
addr16
mov
inc
fsubl
roll
lock
ljmp
mov
jmp
rorl
sbb
add
lea
dec
xchg
ret
pop
imulb
call
mov
dec
adcl
push
xor
mov
je
xor
or
inc
scas
mov
popf
inc
ja
ret
and
xchg
leave
dec
loopne
dec
add
cmp
pop
mov
dec
lds
test
adc
int3
arpl
sub
lcall
andb
push
jmp
or
xchg
cmp
and
fidivrl
lods
dec
xlat
sbb
ljmp
sub
fs
in
sub
inc
fcoml
mov
inc
push
push
mulb
imul
inc
or
and
jbe
rorl
ss
dec
test
jbe
mov
clc
je
je
sbb
jg
scas
inc
mov
fstl
insb
and
cld
xchg
fildl
pop
lods
cld
push
jmp
int3
sbb
fstl
enter
lret
addr16
pop
pop
mov
dec
mov
icebp
mov
mov
mov
inc
add
xlat
outsb
xchg
push
push
in
dec
inc
xor
cmp
movsl
cmp
add
in
clc
loope
xchg
rorb
xchg
inc
sub
imul
add
add
rorl
push
shrl
add
repnz
stos
and
jmp
push
scas
cmp
mov
rclb
out
jg
pop
fsubrl
je
rorl
or
jmp
jae
mov
and
les
shr
loopne
cmp
push
clc
in
jne
aaa
and
lret
add
mov
adc
data16
cmp
xchg
xchg
stc
fcmovnbe
mov
das
or
push
inc
pop
ja
jnp
xor
push
push
jecxz
and
mov
or
loop
pop
add
ljmp
mov
mov
pop
cmpsb
lcall
test
inc
jno
and
pop
and
imul
outsb
xor
or
rcrb
pop
push
insb
mov
test
and
jecxz
dec
mov
lret
out
xchg
mov
addr16
add
xor
sbb
nop
adc
sarl
cmpsb
sbb
sbb
push
dec
or
inc
push
pop
ret
dec
fdivl
xchg
mov
push
pop
inc
rcll
pop
loop
das
and
daa
inc
push
push
je
cmp
gs
mov
repnz
roll
xchg
push
fiadds
and
flds
scas
pop
icebp
aam
mov
out
sbb
loope
movzbl
xor
bound
push
pop
fs
jge
xor
push
push
enter
inc
mov
das
mov
aas
loop
and
inc
sbb
jne
jp
dec
inc
pop
ljmp
cmp
xchg
rclb
jae
pop
lock
scas
lods
push
push
dec
sub
stc
cwtl
das
sub
mov
mov
jno
dec
xchg
fiaddl
mov
or
push
roll
js
xor
xchg
mov
mov
cwtl
dec
popf
dec
push
stos
xabort
dec
xchg
pop
pop
movsl
leave
loop
dec
fwait
push
lods
int3
insl
ds
adc
mov
stc
int
pop
lcall
and
cwtl
push
and
lock
sub
ja
shrl
sbb
cmp
push
lahf
mov
inc
mov
jb
xlat
sub
scas
mov
jle
mov
push
insl
add
cmc
mov
dec
cmp
inc
pushl
adc
mov
rclb
or
xor
fs
lods
and
ss
jg
push
mov
fs
push
clc
xchg
pop
idivl
cmpsl
and
dec
cmc
inc
mov
jno
pop
out
repnz
ret
das
xor
and
ret
cwtl
mov
aas
xchg
sub
fwait
xor
mov
inc
fucomi
shrl
mov
out
pop
rolb
sti
sbb
cs
lds
adc
xor
in
mov
or
sahf
repnz
movsb
push
mov
inc
arpl
mov
xchg
lahf
ss
lea
adc
jp
xor
clc
int
int3
jno
push
je
ss
andl
add
adc
adc
mov
nop
mov
xchg
shl
lods
xchg
jle
mov
mov
xchg
mov
fdivl
mov
or
mov
std
xor
sub
xor
mov
and
aas
push
cmp
fistps
cmc
psubsb
sbb
ds
mov
icebp
push
sbb
popa
daa
jl
push
xchg
push
cli
inc
xchg
sub
mov
xchg
jle
rcrb
cs
repz
xor
pop
outsb
aam
lcall
cli
out
in
sub
cs
outsb
outsb
lods
ss
xlat
cmp
ss
push
test
test
xor
outsl
arpl
mov
xchg
dec
push
out
ljmp
aam
arpl
sub
adc
mov
nop
fwait
lods
arpl
jmp
cmc
mov
fidivrs
les
sub
add
enter
mov
mov
bswap
mov
fstl
mov
cmp
movsl
mov
jo
and
push
push
hlt
or
jle
and
hlt
cmp
cmp
loop
stc
aas
fistpl
fcoml
in
lcall
cli
or
dec
sub
xor
dec
jge
mov
insl
dec
push
sbbl
jo
dec
sbb
pop
sbb
inc
inc
sbb
mov
inc
sbb
add
add
add
push
mov
push
pop
es
ret
mov
dec
dec
mov
out
sub
inc
pop
sbbl
xchg
mov
hlt
sub
xor
inc
bound
and
lods
pop
jno
test
pop
xchg
daa
sbb
pop
sub
and
cmp
ss
push
jmp
jle
aas
int3
pop
adcb
cltd
xchg
fisttpll
xchg
fisubrl
sti
sahf
or
sub
inc
fsubrs
repz
adc
das
xchg
xchg
lds
dec
cmp
lret
dec
data16
fs
and
sub
shrb
adc
fisubs
ret
sti
mov
xchg
inc
pop
std
sahf
add
leave
pusha
add
xchg
pop
push
and
clc
addr16
push
xor
daa
push
orb
fimuls
sbb
inc
test
add
jae
adc
fsubrs
cmpsb
push
int3
mov
fsts
inc
adc
roll
testb
je
test
push
push
inc
inc
jg
jae
and
mov
cmp
mov
mov
mov
mov
sbb
push
andb
mov
gs
pop
ja
test
xchg
xchg
xor
or
mov
rolb
jns
mov
inc
std
push
jecxz
test
xchg
mov
jecxz
les
andb
fcompl
fnsave
dec
jnp
xor
jno
das
fs
push
cmc
add
mov
rdtsc
enter
test
mov
int
loopne
int3
into
xor
std
icebp
adc
fld
in
adc
faddl
pop
xchg
sahf
mov
mov
mov
push
cmp
sub
in
lea
rolb
fdivrs
lea
xor
mov
add
repnz
pop
add
pop
into
lahf
adc
adc
ror
jge
dec
cmp
outsl
cltd
mov
ss
insl
or
cmpl
pop
faddl
mov
std
mov
pop
push
add
lods
scas
pop
mov
sarb
xlat
push
call
adc
sub
sbbb
lret
jb
je
jnp
daa
mov
inc
cmp
mov
cmp
inc
dec
mov
and
gs
fnsave
and
add
cmp
xchg
inc
stc
dec
pop
mov
dec
pop
rcr
add
push
inc
mov
mov
das
or
dec
cmp
das
mov
ja
out
test
pop
mov
lock
pop
jns
add
imul
and
das
adc
sbb
call
xchg
call
mov
decb
popf
cmp
xor
cli
popw
enter
inc
out
test
pop
mov
ret
mov
add
xchg
jge
rcl
pop
int3
scas
mov
xor
cld
fs
test
out
sub
jnp
movsl
cmp
pushf
sub
xchg
ficoml
or
mov
nop
fdivs
sbb
icebp
movsb
cmp
fsubrl
jae
cmp
test
in
out
pop
or
sbb
sbb
adc
cltd
enter
sub
jp
dec
imul
loopne
pop
sbb
pop
or
fisttpll
xchg
shll
fwait
xor
cmp
pop
testl
xchg
jnp
xchg
mov
dec
add
xor
fisubs
xor
insl
lahf
loop
add
mov
mov
jne
push
lds
lret
mov
test
test
push
cld
out
stos
xor
loope
push
mov
lret
mov
test
lock
xchg
rcll
imul
add
jge
fmull
xor
jno
mov
loopne
movsb
ss
mov
push
jmp
jbe
adc
xor
pop
dec
push
ss
enter
mov
pushf
daa
adc
mov
add
push
push
jbe
lods
jno
xchg
imul
arpl
movsl
mov
insl
fsubl
jecxz
aas
addr16
idivb
pop
cltd
daa
cmc
clc
sub
jg
in
pop
push
out
push
repnz
test
testl
push
cwtl
aaa
into
leave
das
cmp
sbbl
cmp
mov
pop
call
enter
inc
aas
or
push
dec
lea
int3
popa
sub
insb
cmp
mov
jo
notl
jge
dec
cld
sbb
subl
jnp
sub
ficompl
mov
shrb
xor
in
xor
push
jge
adc
xchg
aas
in
sub
push
pop
jp
jge
imul
jae
rorb
push
cmp
mov
out
mov
add
push
add
pop
mov
test
jmp
lret
sahf
sbb
shrb
cmp
mov
cmp
pop
xchg
movsb
std
and
mov
je
sub
mov
or
rcll
inc
mov
mov
pop
popa
cltd
push
jle
jle
negb
mov
fsubrs
outsl
idivl
stos
sub
shll
jne
loop
or
lret
dec
fwait
sar
fs
cli
loope
jns
clc
sbbl
and
ss
inc
inc
fstpt
adc
push
cmp
or
push
popa
xchg
xlat
sub
in
sub
leave
add
dec
mov
xor
inc
rcrb
repz
gs
or
dec
cmpsb
jg
jl
adc
mov
jno
add
ret
push
daa
popf
xor
mov
jg
jno
ljmp
cli
push
inc
in
mov
ret
enter
out
jle
mov
rcrb
pop
stos
test
loope
popa
push
scas
pop
xor
jbe
or
stos
addl
aad
sar
lock
pop
or
cmpsb
dec
es
mov
jns
sub
aad
or
pop
subl
popf
loop
test
mov
adc
xor
das
fists
and
mov
leave
imul
les
xor
repz
xchg
rsm
jl
and
aad
xchg
pop
add
push
call
lods
loopne
imul
add
cmp
imul
adc
aaa
out
std
add
lret
icebp
cmc
movsb
sub
inc
sub
cld
mov
sub
out
int
inc
fs
dec
addr16
ljmp
jns
dec
jp
sbb
call
in
jmp
push
sbb
test
stc
clc
cmpsl
dec
pushl
into
inc
rcl
jge
mov
push
add
push
nop
in
add
movsl
mov
lahf
scas
adc
xchg
mov
sub
cmpsb
xchg
pop
jmp
mov
out
pushf
into
cld
jo
loopne
and
test
or
outsb
cs
sbb
or
mov
or
pop
enter
inc
in
sbb
xchg
nop
mov
mov
pop
and
test
lret
sti
imul
in
dec
xchg
loope
xchg
mov
adc
mov
cmp
ret
mov
aaa
push
aam
mov
es
fsubs
mov
add
imul
out
and
scas
adcb
data16
imull
pop
push
or
cltd
sub
sbb
dec
loop
push
icebp
xor
bound
lea
pop
xor
ds
shrl
popl
pop
mov
data16
in
lcall
mov
lea
cmp
cld
sub
aad
push
sbb
add
js
pop
mov
sbb
jg
and
mov
pop
xchg
cmp
loop
fdivrl
lret
push
mov
ja
stc
xchg
into
mov
xor
mov
cmpsb
in
add
insl
stc
adc
test
scas
addr16
xchg
dec
cmc
mov
sahf
xor
or
push
xchg
xchg
shrl
sti
mov
sub
adc
pop
push
stc
adc
lods
xor
inc
js
sbb
enter
jne
lock
test
adc
push
frstor
lock
push
or
adc
xchg
subl
ss
testl
aad
hlt
mov
insl
int
cmpsl
cmp
xor
ljmp
je
add
xor
add
mov
pop
and
dec
cmp
int3
arpl
and
inc
dec
dec
fisubrl
das
pop
pop
sub
out
push
pop
flds
push
cmp
in
mov
sub
dec
mov
cmp
aaa
pop
ficoms
push
loope
xor
mov
fiaddl
pop
mov
rol
pop
cmc
xchg
mov
jo
jg
aas
sbb
jmp
rol
pop
add
lock
mov
add
push
jmp
test
inc
xchg
push
jo
or
imul
jmp
es
imul
cmpsl
xchg
ret
cmp
mov
aam
mov
movsl
mov
leave
mov
jno
ret
outsb
stc
cld
in
lds
push
jae
push
pop
jmp
dec
cmp
pushf
cs
push
sbb
mov
pop
in
inc
mov
mov
mov
lock
add
jns
sbb
dec
inc
sbb
push
push
cmp
inc
xor
out
je
aaa
or
adc
cmp
fcoms
push
cmp
mov
mov
sbb
pop
stc
clc
mov
xchg
jne
push
cmpsl
or
and
mov
push
fisttpl
call
pop
push
mov
jnp
and
mov
les
mov
fsts
and
or
aam
fwait
in
ficoms
mov
push
in
out
push
or
pop
enter
fiaddl
int3
je
cli
dec
pop
repz
inc
fadds
sbb
mov
adc
inc
add
repnz
dec
aad
pop
jecxz
pop
cmc
sub
mov
cmp
fwait
sbb
cmp
pusha
sahf
dec
test
int
inc
js
push
dec
das
movb
fsubrs
jb
dec
ds
mov
adc
push
jmp
sbbb
gs
lret
xchg
adc
and
inc
hlt
sub
and
int3
inc
lcall
pop
scas
loope
cmp
rol
pop
ret
fldcw
push
jecxz
mov
outsb
add
inc
mov
cli
adc
jle
push
popa
clc
lea
push
or
cwtl
test
test
mov
inc
lock
sahf
loope
jge
leave
in
cmp
add
repnz
fwait
xor
pop
lock
cmpsb
cmp
aad
mov
mov
into
mov
inc
dec
leave
jl
fisubrs
xor
dec
gs
xlat
outsb
push
mov
js
inc
fsubrs
sub
enter
jne
into
dec
out
cmp
cmp
jb
testl
pop
cmp
mov
inc
imul
aaa
pop
cli
xchg
imul
dec
mov
iret
outsb
xor
dec
inc
inc
fstl
lds
jb
int
pop
cmp
insl
insb
sub
insl
mov
adc
out
test
mov
inc
fmull
lods
arpl
and
mov
sahf
xor
jmp
sub
and
stos
inc
mov
sub
pushf
mov
xor
push
aas
adc
ljmp
xchg
xlat
outsb
repnz
jl
xchg
movsb
popf
xchg
sub
es
movsl
cmp
inc
fnstenv
jg
outsb
mov
testl
fstps
push
cli
arpl
sub
sbbl
jne
inc
fdivrl
dec
mov
addb
fdivl
into
sbb
ret
add
popf
in
jmp
mov
push
in
aaa
push
adc
repnz
mov
or
imul
fldenv
enter
fidivs
sub
lcall
mov
cmpsb
jl
shrl
jb
push
or
jne
dec
jecxz
in
sbb
leave
pusha
fs
jg
adc
loop
jle
lcall
sub
fdivs
push
mov
xchg
cmp
xlat
js
inc
dec
fldenv
fimuls
test
ja
out
in
jg
add
sbb
call
dec
jecxz
or
or
shrb
aas
fildl
dec
jecxz
imul
data16
or
push
xchg
xor
pop
adc
xchg
test
lods
inc
mov
push
lds
iret
data16
sbb
ljmp
test
mov
mov
dec
outsl
sbb
mov
jb
outsb
adc
enter
add
and
xchg
outsl
xor
cwtl
mov
jp
xlat
pop
roll
shrl
mov
jecxz
imul
js
shrl
cltd
cs
or
inc
test
adc
sbb
jo
push
jo
lods
inc
dec
xchg
xlat
push
adc
outsl
inc
jb
insb
movsb
push
pop
xor
push
scas
test
add
test
pop
fndisi(8087
mov
test
sti
insl
test
aam
mov
push
dec
add
sub
or
mov
subb
pop
xchg
dec
in
jg
add
cmp
pop
xchg
dec
fisubl
dec
add
subb
pop
icebp
cmp
mov
mov
inc
mulb
mov
mov
jbe
push
inc
js
inc
mov
mov
push
out
lods
std
and
outsl
or
pop
dec
pop
out
jl
mov
out
data16
rcrl
mov
lods
inc
mov
repnz
inc
enter
inc
into
mov
aam
mov
jae
mov
jb
jnp
test
cmp
leave
insb
xchg
lcall
pop
xchg
sbb
xchg
push
mov
sbbl
push
inc
outsl
ror
pop
cmpsb
repnz
je
dec
aad
rolb
cmpsb
push
jge
add
pop
das
in
cmpsl
fcoms
xchg
test
mov
xor
popf
adc
push
je
xor
int3
mov
nop
jae
into
jne
insl
cmpsb
pop
xor
outsb
xor
addb
or
in
xchg
or
cwtl
ret
push
inc
add
xor
addr16
adc
or
cs
popf
rclb
mov
jno
mov
jno
cmp
lahf
fsubrl
popf
xor
pop
shrl
out
pop
pop
sahf
rclb
aam
data16
dec
inc
les
pop
lock
xor
xor
adc
sub
dec
loope
cmp
mov
dec
loopne
inc
jno
xor
adc
or
fs
test
leave
test
pop
test
stos
mov
add
movsl
xchg
mov
jle
xchg
test
jge
dec
adcl
add
mov
push
dec
filds
sub
in
push
ret
pop
mov
jl
and
mov
jns
test
push
and
push
mov
fldenv
call
out
xchg
gs
mov
ds
xchg
xchg
xor
jg
mov
scas
inc
out
bound
test
insl
insb
loopne
popa
xchg
sbb
loop
pop
scas
sbb
sbb
mov
push
clc
push
call
dec
imul
pop
mov
test
aam
mov
push
and
jo
mov
add
push
out
xchg
pop
repnz
push
popa
dec
loopne
inc
fiadds
adc
lods
inc
xchg
mov
adc
cmp
repz
bound
pop
out
inc
xorl
xchg
aam
and
mov
sub
pop
or
dec
xchg
pop
mov
pop
or
inc
outsl
adc
pop
jnp
lea
sub
pop
ja
ljmp
cmp
outsb
test
cltd
lcall
mov
xchg
pushf
fsts
mov
jmp
out
mov
out
or
fidivrl
iret
or
mov
adc
xchg
aaa
out
daa
mov
adc
push
mov
jae
jno
jl
stc
mov
ds
add
mov
xchg
test
sbb
mov
fldenv
cli
jg
out
test
adc
jle
jae
and
mov
push
inc
lea
jbe
xchg
xor
inc
fidivl
push
js
insl
push
xor
push
mov
jge
je
rorb
xor
sub
fwait
jg
jne
ret
lret
shl
push
mov
imull
dec
xchg
mov
repnz
mov
mov
fcompl
mov
out
xchg
fxch
outsb
add
call
or
and
mov
leave
pusha
adc
sub
mov
ret
sub
loope
xlat
outsb
adc
push
xchg
xor
pop
jae
leave
pusha
repnz
mov
sub
lea
dec
ret
pop
jno
enter
mov
das
push
mov
xor
cmp
ret
pop
insb
xchg
out
sub
mov
inc
push
xchg
lcall
in
jg
push
ret
popf
xor
xchg
ret
pop
and
inc
les
jmp
mov
lods
aam
insb
adc
aam
incb
sbb
mov
dec
in
sub
pop
mov
or
adc
jno
cli
xor
imul
mov
add
insb
add
and
imul
jne
sub
int3
arpl
aam
xor
cmp
fbstp
pop
addr16
data16
and
mov
mov
xor
lock
mov
hlt
add
inc
cmpsb
push
push
call
jecxz
or
cmpsb
lds
push
out
jmp
cmp
imul
mov
push
push
mov
dec
pop
xor
pop
cmpsl
xlat
outsb
fnstenv
nop
daa
rcll
aas
mov
shl
jl
fbld
jl,pn
xlat
outsb
stos
popf
aam
cs
cmp
dec
xchg
sub
scas
jge
pop
dec
shl
jnp
imul
xchg
mov
outsl
push
repnz
jno
adc
jge
leave
mov
sti
addl
sbb
jl
pop
int
nop
fidivrl
mov
rolb
fucomip
adc
xchg
movsl
push
xor
pushf
movb
mov
pop
cmc
int
inc
fldt
lret
inc
out
stc
mov
fiadds
ret
push
in
xorl
into
and
insl
add
inc
xor
mov
ret
js
and
daa
mov
cmpsb
aaa
push
jmp
fbstp
mov
sbb
mov
idivb
jecxz
in
pop
divb
pop
mov
cmp
adc
pop
into
gs
sub
push
orb
jno
push
lods
out
stos
inc
les
aaa
into
cmp
fbstp
pop
pop
hlt
mov
testb
adc
test
xor
push
or
in
test
ret
insl
add
cli
dec
loopne
pop
mov
dec
addr16
jge
test
sbb
add
pop
xor
push
out
mov
xor
fbstp
or
std
xchg
fsubs
adc
push
or
push
scas
loope
xor
xor
xchg
in
enter
pop
mov
jp
jns
cld
lahf
push
push
cmp
imul
sti
out
les
jae
or
lods
cmp
rclb
rorb
ror
popa
add
fdiv
push
push
jmp
xchg
fdivp
xchg
dec
inc
lds
jg
sub
mov
mov
repnz
cmp
mov
jns
popa
jp
inc
dec
pop
jecxz
adc
jbe
add
push
dec
fiaddl
dec
add
sub
or
insl
adc
imul
jmp
fmul
add
jno
pop
adc
sarl
repnz
ret
pop
ficomps
cmp
arpl
pop
loopne
aad
gs
xor
dec
sub
sub
mov
mov
jecxz
dec
push
das
cmp
add
shll
rorl
add
mov
push
adc
mov
push
push
dec
xchg
and
lock
out
stc
loopne
mov
lea
mov
mov
std
in
push
call
sti
insb
call
xor
in
push
seta
ret
fists
js
mov
cmp
popa
pop
icebp
xchg
jae
cld
cmp
xchg
rcrl
push
mov
rorl
shlb
sbb
sbb
push
fcomip
enter
ret
xchg
sbb
push
cmpsb
mov
xor
stos
aas
or
loope
loopne
push
jle
mov
outsb
insb
mov
mov
cmp
inc
cmp
and
xchg
dec
je
jg
inc
fidivs
push
repz
lret
ds
pushf
jo
mov
xor
adc
aas
or
shll
shl
lds
mov
mov
pop
mov
int3
pop
mov
xchg
call
mov
fadd
adc
popf
pop
sub
jns
push
and
push
push
xor
xchg
mov
mov
mov
sarl
jl
pusha
mov
jmp
in
stos
in
or
jg
sbb
repz
gs
insl
jge
xchg
mov
inc
mov
imul
mov
in
aaa
pop
cmp
int
jae
test
cmpl
pusha
cmc
inc
pop
pop
rcrl
mov
cmp
es
dec
lock
jecxz
ss
fistl
mov
mov
push
pop
push
shrb
fldt
fldt
dec
mov
shrl
outsb
shll
mov
push
push
insb
jns
sbb
in
test
sbb
push
cltd
aaa
lret
mov
pop
enter
xor
shr
fwait
test
add
lahf
push
aad
fcmovnu
mov
loop
sbb
aad
jo
jg
xor
orl
jge
sub
ret
add
jg
ficoml
clc
popl
mov
sub
outsb
sub
push
testb
je
and
and
push
cmp
xlat
icebp
icebp
sbb
stc
repz
mov
ret
rcrb
imul
outsb
push
dec
sbb
mov
invd
lahf
inc
outsb
xchg
mov
mov
shll
cwtl
dec
fisttps
sub
jl
or
mov
mov
sbbb
push
jo
lock
mov
es
jns
xor
pop
fwait
adcb
out
xchg
mov
mov
pop
mov
cwtl
ds
mov
call
in
jmp
lcall
aad
sub
mov
push
inc
jmp
cwtl
jmp
lcall
mov
add
fs
repz
int
xchg
pop
jp
add
sub
dec
fwait
les
adc
xor
repnz
jae
dec
stos
arpl
xchg
mov
ficomps
mov
xor
jecxz
cmp
inc
add
ret
pop
jmp
test
fsin
jne
lods
inc
mov
cmc
enter
inc
push
mov
outsl
add
or
bound
aam
dec
imul
stos
in
xor
cli
lods
lock
popa
mov
xchg
fcoml
add
jbe
icebp
insl
adc
push
push
pop
dec
rdpmc
mov
cmp
inc
rorl
xchg
push
xchg
sbb
add
sbb
insl
fnsave
in
inc
push
fcoml
out
xor
in
pushf
arpl
or
and
push
lahf
ss
ljmp
mov
xchg
add
jge
js
cmp
and
adc
test
xor
xorl
dec
pop
jmp
cmp
push
mov
inc
xlat
repz
imul
jo
sbb
mov
hlt
std
dec
and
kmovw
mov
dec
pop
push
and
ja
xchg
xchg
leave
push
cld
inc
in
ljmp
jge
push
cmp
ret
aaa
push
mov
dec
mov
movsl
mov
mov
xor
and
dec
xor
jnp
adc
pop
mov
fsub
cmpsl
bound
test
movsl
cld
mov
xor
es
xchg
sub
stc
or
pop
iret
daa
mov
fsubl
outsl
clc
mov
mov
jnp
sbb
les
pop
dec
outsb
xchg
mov
inc
cld
inc
scas
test
popf
inc
mov
ljmp
jno
cmp
adc
cmp
push
xchg
daa
mov
xchg
inc
out
mov
pop
add
orl
fadds
pusha
arpl
inc
pusha
fwait
adcl
fs
cmp
fucom
mov
lods
rcr
sub
pusha
test
daa
mov
mov
push
inc
sub
das
idivb
test
mov
jne
stc
and
mov
leave
stos
push
mov
jmp
in
scas
cs
adc
mov
add
xor
mov
out
es
and
xor
add
daa
int
add
shrb
mov
mov
add
push
flds
add
mov
in
and
call
orl
or
pusha
and
jecxz
mov
jecxz
unpckhps
rolb
std
lea
add
jecxz
add
mov
js
xor
mov
add
or
fisubrl
mov
pop
add
push
in
sbb
dec
mov
cmp
sbb
aaa
ret
sub
jnp
inc
lods
mov
roll
jp
stos
inc
push
pushf
ret
inc
jp,pn
jno
jg,pn
mov
orb
xchg
inc
lods
or
cmp
add
xor
jmp
iret
dec
pop
dec
jno
inc
out
pushf
lods
xchg
pop
adc
sbb
mov
jl
in
push
rcrb
add
icebp
je
leave
mov
xor
xchg
in
or
adcb
pop
cmp
js
mov
mov
adc
or
leave
das
cli
mov
sub
jmp
cmpsl
cmp
stos
cmp
pushf
test
cwtl
mov
lret
pop
and
scas
add
mov
pop
and
lret
mov
cmp
inc
sbb
push
xchg
jo
lret
push
lods
dec
xchg
mov
stos
mov
ret
xchg
add
aad
out
add
jns
push
mov
in
stc
pop
inc
loope
in
cs
push
lods
xchg
fcomip
pop
dec
mov
mov
push
and
push
jl
add
pop
pop
sbb
shl
mov
xchg
xor
fdiv
mov
fiadds
sub
in
pop
xchg
addr16
push
out
and
sub
add
xor
push
movsb
and
aad
dec
add
inc
rcr
push
cmpsl
sbb
push
sub
mov
jp
sub
xlat
xchg
cmove
mov
jle
and
leave
lods
lods
rcrl
lcall
mov
and
in
movlps
xchg
sub
inc
mov
lods
jg
push
es
mov
push
sub
lds
mov
pushf
js
xor
jle
into
mov
shrl
lret
les
fbstp
lds
mov
sbb
and
jns
ret
mov
out
push
and
and
sbb
fdivrl
pop
scas
lret
dec
popa
pop
jo
mov
or
jmp
mov
jecxz
adc
int3
adc
jno
fisttpl
hlt
push
out
loope
jb
xchg
jge
pop
lock
lahf
push
nop
inc
xchg
out
nop
mov
cmpl
into
jbe
push
jbe
xor
bound
setns
jge
cld
xchg
xchg
sub
insb
mov
call
adc
mov
icebp
push
rcll
add
add
cmp
rorl
push
leave
jecxz
or
fldt
dec
adc
pop
mov
test
push
mov
and
xor
sub
out
inc
jno
mov
mov
rol
pop
je
sub
pop
xchg
in
in
ja
rcll
das
add
repnz
sbb
dec
sahf
xor
dec
addr16
je
lcall
ds
je
enter
pusha
mov
mov
nop
push
pop
dec
pop
divl
lds
stos
xchg
in
inc
lahf
ljmp
cmp
sbb
xor
inc
loope
leave
pusha
pusha
lcall
xor
push
in
xor
loop
in
je
imul
xchg
cmp
shrl
mov
jmp
push
std
dec
or
cmp
add
ret
test
jns
out
mov
or
xor
vmovaps
ljmp
xchg
or
ret
xchg
mov
xor
pop
cmp
sahf
or
pop
or
in
iret
cwtl
add
jle
add
sub
sub
mov
pop
repnz
std
hlt
icebp
cltd
jns
lret
adc
jmp
pop
lcall
and
mov
xchg
xor
pop
adc
fbstp
adc
mov
test
fwait
push
fnsave
int3
loopne
mov
popf
lods
fnstsw
jno
inc
psubd
shl
pop
daa
and
ss
sub
stos
push
xor
mov
or
and
leave
in
pop
jb
cmp
or
je
xor
cwtl
roll
xor
jno
lods
outsl
and
jmp
insb
pop
pop
mov
cmpb
in
sbb
inc
sbb
push
mov
loope
xor
test
pop
lret
bound
daa
jmp
je
popf
inc
push
leave
push
xor
sbb
test
imul
cmpsb
mov
in
inc
gs
add
mov
mov
hlt
sub
and
inc
push
mov
sbb
dec
pop
cmp
jae
jns
stos
and
sub
lds
push
mov
mov
mov
xor
mov
xchg
mull
andl
inc
pushf
sub
and
xor
andb
mov
push
adc
js
das
cmp
xlat
jbe
pusha
test
sub
mov
ret
pop
xchg
mov
push
jmp
xchg
cld
data16
mov
dec
push
ss
cmp
fdivrl
scas
jbe
ja
sarb
dec
data16
hlt
int3
mov
xchg
fldl
lgs
mov
mov
sti
xchg
push
push
in
mov
add
push
cmp
jecxz
mov
push
in
roll
int
mull
int
adc
inc
movsb
stos
jbe
fwait
arpl
xor
xchg
lods
outsl
mov
js
fptan
or
jo
xchg
andl
insb
sub
ja
imul
add
or
nop
sub
inc
test
movsb
push
adc
and
inc
pop
shlb
enter
mov
and
xor
addr16
xor
pop
fists
xor
push
notl
push
jp
xchg
push
mov
mov
pushw
es
sarl
cmp
xchg
testl
push
xchg
lds
lods
nop
push
lahf
cltd
cmpsl
hlt
xor
shll
sub
jne
pop
and
pop
out
inc
add
mov
jmp
lods
inc
popf
lods
inc
into
cmp
push
add
lret
lret
into
or
mov
inc
push
dec
stc
mov
popa
imul
andl
or
sub
scas
jns
pop
sbb
xchg
enter
xlat
mov
pop
adc
leave
xchg
mov
add
aas
jle
xor
mov
pop
push
pushf
stos
add
xor
or
sbb
call
mov
jns
les
mov
les
stos
dec
jle
cmp
ljmp
push
cmp
adcl
pop
fstp
andb
outsl
ret
mov
hlt
jl
out
shll
mov
cmp
sbb
xchg
test
mov
xchg
mov
test
push
loop
int
outsb
adc
sahf
lret
mov
inc
push
jp
dec
sub
jno
jl
fisubrs
cmpsb
clc
lahf
into
cmpl
jno
fwait
out
loope
movsl
pop
and
mov
lds
cmc
repnz
in
and
or
test
shrb
cs
pushf
mov
push
paddsb
push
cmp
mov
pop
mov
or
pop
cwtl
xor
mov
inc
ret
xlat
in
cmpsl
lcall
ret
inc
jno
xor
call
aaa
push
jl
push
mov
sahf
jne
arpl
xorl
out
pop
les
add
lock
lret
push
mov
cmp
lahf
mov
sub
loop
or
jge
xchg
subb
pop
and
jno
clc
stos
ja,pn
adc
icebp
sbbb
and
dec
lea
stos
push
pop
adc
add
add
xorb
jl
cltd
lock
orb
pop
sub
cmpsl
mov
out
scas
mov
imul
and
push
out
xor
adc
pusha
jg
and
pop
notl
sbb
or
lcall
dec
or
mov
jb
jne
in
outsl
push
adc
cmc
mov
ja
and
inc
popa
sti
popa
jmp
rorl
fwait
pop
or
pop
movsl
adc
pop
jp
lds
dec
sbb
ljmp
gs
insb
pop
pop
mov
lahf
jae
sbb
cwtl
cli
mov
shrl
ljmp
je
stos
xchg
mov
mov
inc
fmul
mov
sbb
movsb
lods
pop
sahf
orl
add
popf
push
insb
pop
sbb
dec
mov
es
shll
daa
mov
fldl
sub
adcl
scas
jle
push
sub
incl
pop
jecxz
mov
push
cli
mov
jno
xchg
filds
adc
add
out
ss
and
push
and
js
bound
pop
cltd
adc
shrl
push
add
jecxz
and
in
sub
jl
jae
mov
cmp
sbb
mov
jo
push
sub
lea
and
jne
push
into
stc
jl
jo
sbb
jb
cmc
out
lock
dec
sarb
mov
xor
sbb
push
jl
out
sub
jns
inc
push
pushf
inc
sub
xchg
sarb
out
ja
mov
add
dec
scas
les
xchg
xor
pop
sbb
lret
pushf
sbb
pop
ret
mov
and
pop
iret
jecxz
jne
loope
sti
mulb
lea
adc
jg
adc
pop
test
fdivrl
out
cwtl
push
iret
ret
adc
rcll
out
clc
adc
add
insl
es
rclb
cmp
enter
pop
hlt
addr16
xor
into
push
adc
mov
bound
mov
mov
inc
pop
fs
subl
rol
movsl
mov
leave
pusha
xor
popa
jp
subl
ds
xchg
sub
adc
sub
xor
dec
fisubrs
lret
in
or
push
mov
stos
sub
arpl
cli
incb
or
pop
lret
inc
dec
push
test
lock
cmp
lret
jge
jmp
ja
mov
fcompl
or
cs
push
addb
xchg
scas
inc
and
push
lods
ret
je
sti
push
outsl
daa
into
pop
cmpsb
jg
push
ja
inc
mov
enter
cwtl
popa
adc
fwait
mov
aad
jle
jns
push
out
shrb
sbb
jge
mov
jmp
or
xor
lods
jp
cmpsl
add
repnz
insl
push
lcall
ss
and
stos
cs
jne
jp
jbe,pn
test
popf
lcall
or
das
and
push
dec
mov
cli
push
push
cmp
jle
and
roll
mov
inc
inc
shl
test
test
add
in
mov
or
mov
sub
or
enter
repnz
and
aam
inc
shr
scas
xchg
pop
hlt
and
jle
sti
incb
cmp
sub
imul
jge
loopne
je
cwtl
inc
stc
sbb
imul
iret
outsb
in
int3
cld
add
insb
js
sbb
sbb
stos
mov
pop
sub
stc
repz
adc
inc
inc
scas
dec
fstpl
jnp
and
pop
aam
je
jbe
add
cltd
insl
out
cmc
adc
mov
xlat
insl
aaa
popa
out
rorb
lods
xor
ret
test
in
cli
sbb
outsb
and
adc
xchg
dec
dec
push
fisttpll
cltd
push
mov
and
push
cltd
pop
cmp
sti
inc
in
mov
sbb
or
cmpl
sbb
mov
mov
and
mov
and
pop
jecxz
enter
sub
lcall
imul
lds
mov
callw
add
sub
dec
push
jne
imul
sbb
sbb
in
ja
add
pop
stos
fs
adc
testb
cmp
xor
adc
test
cli
out
mov
mov
shll
xchg
outsb
pop
push
inc
out
cmc
mov
stc
std
in
mov
push
ja
aaa
test
cmpsl
cmp
testl
xchg
mov
xchg
jge
adc
clc
cmp
pusha
stc
aad
inc
push
pop
inc
cli
jmp
push
sbb
cmc
data16
dec
test
sub
mov
imul
lcall
inc
hlt
dec
pop
mov
jbe
and
mov
outsl
out
jge
lret
daa
adc
lea
outsb
notl
out
mov
sbb
inc
adc
fstp
dec
pop
mov
jge
stos
sbb
jge
orl
int3
xchg
xchg
sub
fmuls
cmp
rorl
add
test
sub
test
add
sub
out
xor
mov
sub
dec
mov
dec
cmp
mov
in
jno
mov
inc
xor
cmp
ret
push
loopne
cmp
xchg
out
cltd
xchg
mov
sub
mov
mov
push
jg
arpl
mov
notl
aad
push
rorl
stos
insl
mov
scas
push
mov
mov
sbb
jno
fucom
push
stos
inc
dec
add
inc
dec
mov
into
mov
push
mov
aaa
sub
mov
and
sbb
movsb
lock
sbb
ja
inc
push
mov
aam
mov
les
sahf
sbb
ds
push
divb
jns
arpl
push
xor
fisubrl
or
sub
stos
in
mov
inc
push
add
mov
and
mov
rcrb
in
cmp
mov
pushf
mov
xchg
mov
je
test
and
adc
leave
sbb
leave
dec
inc
hlt
lods
fbld
enter
fsubrs
stos
lods
sahf
dec
repnz
lret
into
fistps
ljmp
lods
sbb
out
insl
mov
dec
push
push
pop
mov
dec
aad
enter
and
mov
imul
movsb
mov
divl
cmp
pushf
lret
mov
sahf
clc
inc
loopne
xchg
mov
mov
loope
adc
aad
xor
add
xor
out
jns
fnstenv
mov
inc
arpl
jno
push
jne
lock
jnp
jmp
jl
dec
mov
test
add
xor
pop
jns
push
call
inc
mov
mov
mov
pop
into
mov
jecxz
mov
out
jle
xor
mov
fsts
dec
stc
pop
lcall
dec
je,pt
adc
jl
fnstcw
adc
mov
lds
jle
and
shrb
xchg
mov
test
insl
xor
dec
loopne
lock
ja,pt
jo
addr16
jp
insb
sti
pop
sbb
dec
jg
lcall
iret
fcmovnu
pop
pop
in
stos
push
aas
fmuls
pop
sub
aad
daa
or
sub
xor
bound
mov
jno
or
push
cltd
ss
lret
sti
cmp
test
dec
mov
sbb
inc
mov
sbb
cmp
fs
xlat
aad
leave
or
outsb
inc
pop
jle
xchg
mov
aam
xor
pop
pop
aaa
cmp
sahf
out
arpl
aad
aas
add
mov
fisubs
inc
cld
bound
pop
adc
or
mov
pop
pop
or
or
and
add
inc
add
lret
rcrl
stos
or
pop
sarl
data16
cmp
cltd
xor
xlat
mov
aam
and
shll
push
pop
xchg
js
xchg
and
mov
mov
popa
clc
jg
push
pushf
inc
ret
push
jmp
xchg
add
das
jmp
mov
cmp
push
rcrl
orl
pop
pop
xor
jecxz
rclb
jp
add
xor
jl
mov
add
loopne
sub
sub
sub
dec
shl
mov
fdivrl
mov
iret
mov
sbb
aas
add
in
fwait
cs
gs
and
pushf
xor
push
cmc
mov
xor
pop
pop
movsb
ds
std
aad
mov
sub
outsl
daa
add
ss
inc
ficoml
fisubrl
je
arpl
xchg
mov
mov
cmp
mov
cmpsl
mov
pop
mov
sarb
and
pop
fisubl
cmpsb
xchg
mov
cmp
lcall
mov
cs
inc
cmp
call
cmp
or
sbb
pop
adc
inc
outsb
test
jb
and
fs
push
inc
inc
mov
push
adc
iret
push
pushf
fldt
inc
lret
push
mov
sub
hlt
pop
cmc
xchg
jl
in
fcomps
andb
out
das
aad
add
daa
popf
in
adc
and
ljmp
push
mov
inc
push
mov
or
enter
pop
lods
inc
sbb
jne
pop
inc
nop
mov
loop
dec
pushf
pslld
lds
outsl
cltd
pop
clc
outsl
xchg
cmp
imul
loop
jns
bound
mov
enter
mov
dec
js
adc
pop
push
addr16
inc
divw
lret
cs
fcomp
hlt
or
lock
clc
mov
sub
lods
pop
jge
sub
js
loope
movsl
mov
cs
dec
test
jb
sbb
pop
push
cmc
lock
jns
push
xchg
jmp
mov
and
insl
sbb
inc
dec
mov
mov
jo
into
ds
test
cmc
leave
cmp
aad
js
push
jne
sahf
mov
cld
test
inc
sbbl
ret
insb
sbb
mov
cmp
push
push
push
movsl
test
adcb
mov
xchg
push
mov
fucom
add
or
push
sub
push
in
sbb
xlat
xlat
inc
adc
clc
pop
cltd
imul
adc
in
jno
inc
je
jne
inc
outsb
cwtl
adcb
jmp
fwait
cli
test
lcallw
in
pop
sarl
mov
in
sbb
int3
push
push
fbld
mov
pop
call
mov
data16
fwait
adc
xor
or
adc
inc
push
dec
push
sub
pop
enter
push
push
dec
shlb
sbb
sbbb
xchg
cmp
iret
pop
out
mov
mov
cmp
shrb
pop
mov
sahf
dec
enter
gs
jge
pop
cs
fistpll
xchg
push
add
cmp
sub
pop
jmp
ss
xor
cs
push
mov
aam
add
sub
je
je
pop
lods
pop
popf
inc
cli
or
das
push
movsl
jge
fisttps
push
sub
push
jno
cmc
mov
xor
push
adc
jb
ret
scas
int3
roll
into
sub
inc
fdecstp
sar
sbb
cmpsl
ret
inc
loope
int3
push
xchg
cmp
push
popa
pop
fisubrs
mov
push
mov
jne
jae
cmpsl
push
loope
sbbl
lahf
add
sbb
leave
and
inc
fcompl
cmpsl
and
inc
pop
inc
sub
cmpsb
cmpsl
sbb
outsb
add
jns
pop
jecxz
xor
fcoms
add
ljmp
push
in
xor
jp
mov
sbb
mov
cmpl
mov
mov
sbb
lods
pushf
add
cmp
lods
add
pop
sub
cltd
xchg
lea
mov
mov
call
xchg
jo
jmp
in
adc
dec
mov
jno
fldcw
jnp
or
notb
or
insl
cmp
filds
lret
xlat
xor
outsb
push
sbb
and
pop
outsl
rorl
add
jg
repz
andb
das
cmp
sar
adc
sysret
push
cmp
fidivrs
scas
jnp
outsl
lods
xor
xor
testb
dec
push
imul
arpl
fistl
test
xchg
xlat
or
movsl
inc
aad
push
pop
mov
xlat
outsb
pop
daa
adcb
mov
jo
test
mov
popf
mov
push
and
orb
out
sbb
popa
mov
inc
out
mov
and
cmc
ss
inc
cwtl
inc
ret
xorl
sub
call
mov
mov
gs
adc
push
dec
xor
ja
jo
js
popf
test
ss
sbb
pop
gs
lea
mov
fldt
xor
xchg
inc
sub
cltd
test
jno
jne
ljmp
or
leave
pusha
lret
and
adc
mov
xor
fsts
jo
sbb
mov
push
mov
pushf
mov
ljmp
jmp
cmp
icebp
jl
mov
fwait
mov
int3
and
push
sbb
push
je
xor
stos
jnp
dec
bound
sbb
lods
mov
mov
sub
nop
push
enter
test
fs
cmpsb
in
push
flds
bound
addr16
pop
in
nop
out
add
insb
push
in
jnp
xchg
xchg
jp
cmp
pop
cltd
mov
jnp
and
dec
push
jle
mov
or
xrelease
push
mov
add
add
mov
imul
ss
cmc
clc
dec
stos
inc
inc
test
sbb
les
fidivs
daa
pop
mov
ljmp
push
out
and
int3
scas
rorb
shrl
push
call
push
inc
div
pop
out
push
dec
bound
xor
lds
and
push
inc
xchg
xchg
jno
das
mov
inc
sbb
jae
lock
mov
and
scas
inc
dec
roll
gs
mov
es
cltd
imul
inc
jp
je
push
fstpt
sbb
mov
mov
sti
sub
popf
and
sub
push
dec
bound
test
inc
jecxz
inc
sbbb
andl
js
pusha
jecxz
inc
fs
scas
sbb
or
stos
and
cmp
push
fs
stc
lods
js
dec
push
pop
cltd
xor
stos
cmpl
jno
movsb
xchg
push
rcrl
xor
lods
inc
add
or
jbe
sub
inc
sti
push
push
and
dec
add
mov
iret
fidivrs
xchg
lods
into
movsb
xchg
mov
repnz
mov
and
mov
pop
mov
cwtl
push
cmpsl
movsl
push
loope
rorl
and
rorl
popa
jno
and
xor
fucomi
mov
divb
add
cmp
inc
sbb
lds
lea
mov
pop
dec
pop
xchg
loopne
loope
popf
xchg
push
addr16
loopne
out
mov
mov
insb
aam
push
inc
jecxz
push
pop
outsl
in
jo
cmp
aaa
mov
ja
adc
xchg
daa
nop
mov
mov
iret
mov
and
push
jbe
into
pop
shlb
mov
mov
pop
ds
pop
jo
rep
mov
push
lcall
cmp
addr16
jb
pop
adc
fcmovnu
mov
pop
int3
dec
push
mov
pusha
pop
push
push
mov
inc
in
out
inc
xchg
aam
andb
in
fcoms
jge
into
xchg
cmpl
data16
xor
js
fnstenv
cmpsl
xchg
sub
mov
jp
fdiv
cmp
or
js
mov
aam
imul
jne
movsl
mov
or
or
outsl
sbb
jecxz
sub
sub
push
mov
dec
mov
jno
mov
xchg
mov
mov
lock
insl
call
mov
inc
push
push
add
je
push
loopne
xchg
dec
add
iret
push
nop
stos
outsl
fsubl
outsb
cmc
outsl
cmc
cmp
adc
xchg
call
cmp
fmuls
jo
mov
subl
mov
sub
cwtl
data16
shlb
fsubrs
fisubrs
cli
stos
inc
outsb
jl
or
aam
rol
jle
pop
inc
pop
or
inc
or
testb
sbb
les
ljmp
xchg
xor
in
ljmp
in
lcall
pshufw
lret
hlt
or
stos
cmp
jecxz
sub
sti
xchg
inc
jp
mov
ja
mov
pop
test
jg
jo
adc
mov
test
ja
in
test
or
adc
sub
in
fiadds
pop
rorb
xchg
loope
lock
mov
or
xchg
push
lcall
xchg
insb
in
iret
cmpb
stos
fildll
jns
fidivs
sbb
in
push
pusha
or
jne
loope
and
sti
shrl
je
jns
stos
xchg
add
dec
and
sub
jmp
test
jnp
jb
pop
jmp
lds
std
test
outsl
xorl
enter
sub
dec
out
jns
mov
push
mov
dec
xlat
push
jl
mov
out
sub
movb
aam
pop
jbe
cmp
xchg
inc
inc
loope
lret
adc
mov
cmc
call
mov
outsl
daa
fcmovnb
xlat
jbe
jno
jmp
scas
sub
insl
stos
sti
es
enter
mov
or
lock
outsb
push
xchg
push
sti
stos
bound
xchg
lret
stos
xor
lret
xchg
push
jecxz
lods
mov
and
xchg
into
pop
add
lahf
ss
fbstp
nop
mov
jg
clc
add
popf
or
adc
into
pop
out
sbb
xchg
ss
pop
pop
or
sbb
or
iret
mov
sti
pop
bnd
shlb
xor
inc
mov
fsqrt
push
or
inc
fstp
jl
out
lahf
stos
and
je
jl
outsl
push
mov
xchg
xor
lea
dec
out
jl
and
xchg
inc
lcall
notb
jp
sti
xchg
cmp
les
rcrb
mov
shrl
sarb
jmp
rcrb
icebp
pop
test
fwait
ss
and
aad
popf
test
mov
mov
ss
mov
movsb
adc
call
pop
rcrl
lret
xor
test
or
xor
test
std
sub
or
data16
push
in
flds
mov
jmp
test
les
cmc
mov
shl
lds
inc
adc
xor
imul
popw
sub
push
jge
xor
sahf
pop
insl
mov
aad
in
arpl
mov
pop
or
cmp
mov
mov
jmp
gs
adc
push
decl
and
pop
lret
jg
enter
aas
push
adc
xchg
xor
test
cmp
sti
sbb
xchg
in
pop
shl
movsl
push
mov
mov
out
pop
jno
jecxz
aas
mov
cmp
push
or
mov
imul
sbb
cld
ret
sbb
mov
int3
ficoms
or
jp
cmp
pushf
adc
pop
lods
mov
je
jg
je
lcall
push
jmp
lcall
loop
xchg
stos
jle
xlat
loop
dec
loop
pusha
or
mov
fimull
sub
and
push
adc
int3
fldcw
xchg
jae
sbb
mov
sub
mov
subb
scas
inc
or
xor
nop
in
inc
popa
adc
aam
or
fadd
out
in
and
imul
xor
mov
daa
push
pusha
push
stos
leave
pop
mov
sahf
ljmp
ret
mov
mov
dec
cmp
scas
std
sahf
push
mov
ffreep
shll
pusha
cmp
xchg
jp
leave
fstpt
mov
fstpl
sub
mov
add
repz
mov
cltd
cmp
test
dec
pop
xchg
pop
mov
cmpsb
adc
dec
test
mov
mov
fidivl
xlat
push
fs
cld
pop
repz
mov
mov
dec
mov
and
sbb
lods
repz
fildll
push
xlat
add
out
xor
scas
xchg
sub
or
cs
dec
push
jnp
lcall
leave
dec
fwait
mov
and
fs
repz
cld
leave
shl
sbb
xchg
js
movsb
adc
popf
idivl
orl
ds
xchg
sub
outsb
sub
stos
pop
outsb
outsb
jl
cmp
cs
cmp
jg
pop
out
rolb
xor
or
cmc
push
cmpsb
imul
inc
scas
add
lods
mov
cli
rorb
test
cmp
push
enter
in
mov
xorb
loopne
push
nop
push
xchg
ljmp
inc
cmp
in
mov
dec
aam
sbb
xor
mov
sub
stc
mov
pop
mov
rorb
inc
cs
fsubrl
inc
leave
and
jg
in
push
push
out
push
outsb
pop
mov
int3
out
inc
push
call
ljmp
xchg
sahf
sti
icebp
cwtl
out
push
xor
jbe
xor
pop
push
jo
int3
ret
xor
adc
subb
fbstp
adc
xchg
push
xchg
mov
in
movsb
jmp
enter
add
sub
add
push
test
xchg
cltd
movsl
cmc
mov
cmp
pop
mov
xchg
outsb
and
mov
cmc
test
sub
push
or
xor
add
sbb
in
sbb
xor
lods
in
adc
jmp
or
mov
sti
jne
xor
test
add
jg
push
andb
shr
sbb
ds
jle
lods
scas
outsb
inc
test
jbe
pop
jbe
jae
mov
in
dec
shl
mov
sbb
jns
cmp
into
push
pop
icebp
cmpb
std
gs
cld
xchg
xchg
test
pop
roll
mov
cwtl
jmp
daa
imull
or
jns
sub
loope
int
lods
int
enter
aaa
mov
stos
and
add
scas
lcall
jle
push
mov
arpl
std
lods
insb
mov
ret
dec
mov
cmp
sbb
jnp
ss
pushf
or
loopne
mov
xchg
add
in
mov
mov
xor
inc
nop
lds
lock
repnz
ja
lret
pop
hlt
fcomi
fcomps
inc
roll
or
insl
mov
fistpl
cmc
or
sbb
or
outsb
sarl
outsl
testl
dec
add
push
movsl
cld
ret
scas
dec
rolb
sub
pop
xor
mov
fidivs
das
jmp
aam
in
sub
clc
stc
out
out
mov
imul
loop
xor
pop
icebp
adc
push
xchg
push
push
mov
jne
repz
mov
js
out
xchg
pop
lock
push
ja
xchg
lds
adc
mov
leave
imul
call
mov
repz
xchg
pop
jb
inc
cmp
ja
fstl
push
shll
popf
daa
dec
push
call
and
adc
lret
loop
or
sub
in
lret
jo
inc
and
xchg
push
out
pusha
push
mov
mov
mov
int3
xchg
push
xlat
stos
lods
sbbb
jecxz
pop
shll
pop
jnp
xchg
test
scas
or
scas
icebp
es
fsubl
inc
aaa
fildll
icebp
insb
jl
lods
mov
inc
jmp
jmp
sahf
jge
pop
mov
cmpsb
xor
arpl
rclb
mov
dec
arpl
push
iret
gs
cli
inc
push
in
xor
test
sub
shl
jecxz
es
enter
xor
divl
jle
fldcw
pusha
test
mov
push
or
mov
ljmp
xchg
pop
xchg
mov
lret
adc
lea
add
jmp
mov
mov
filds
adc
cld
aad
clc
add
scas
or
and
testl
sub
mov
push
cwtl
int3
orb
xchg
int
push
jecxz
fwait
sarl
leave
sbb
mov
mov
lcall
mov
sbb
mov
bound
jns
jp
int3
and
pop
out
xchg
and
jnp
cmp
test
xchg
fiadds
pusha
aas
cmp
xchg
xor
fldlg2
sbbl
cwtl
xchg
popa
lea
adc
xor
gs
xchg
mov
or
fbstp
es
pop
into
mov
mov
dec
add
shr
inc
in
jnp
mov
lret
and
inc
rcrb
in
mov
insb
sub
test
jecxz
sbb
popa
pop
stos
cmpsl
ret
das
sub
stos
dec
mov
mov
mov
xchg
fcom
js
call
push
int
xor
outsb
inc
inc
lret
jbe
cmp
add
mov
mov
add
xchg
outsl
or
rcrl
xchg
push
cld
fcomip
sub
inc
mov
mov
jno
xchg
mov
mov
test
xor
orb
mov
cmp
adcl
pop
call
testl
fbstp
xchg
lds
stos
jmp
aaa
mov
imul
inc
es
or
cmpsb
mov
jnp
xchg
mov
scas
push
loop
flds
iret
mov
shl
mov
push
fistps
mov
into
mov
popa
clc
icebp
shrl
push
add
cmp
jecxz
push
divb
mov
inc
shr
ja
ljmp
pop
dec
pop
fwait
js
or
fucomip
jbe
hlt
xchg
int3
sbb
or
arpl
arpl
fs
test
enter
mov
outsb
add
mov
adc
mov
fisubrl
add
ficoms
add
or
js
sub
add
xor
xor
sub
aad
imull
adc
pop
sbb
stc
pop
and
sti
sub
and
jne
mov
es
cmpsl
and
add
dec
push
dec
pop
outsl
sbbl
xchg
clc
fldcw
mov
sbb
rcll
cmpsl
ds
cmp
pop
cs
inc
movsl
lret
xor
sub
inc
nop
mov
out
or
repnz
in
mov
dec
add
and
mov
inc
cmp
icebp
data16
inc
xor
add
lret
pop
add
iret
cmpsb
or
inc
inc
or
sub
mov
mov
stc
aad
cwtl
sbb
mov
cmpsl
cmp
movsb
mov
mov
or
mov
sub
shrl
cltd
call
lea
xchg
cld
test
popf
cwtl
sbb
fmull
mov
pop
ja
insb
adc
and
seta
pop
bound
mov
push
inc
in
xor
std
bound
and
dec
xchg
jle
xor
ret
and
adc
repz
push
mov
push
push
sbbl
shl
bound
ljmp
lcall
lea
xor
push
mov
adc
mov
mov
jecxz
and
mov
cmp
mov
filds
jge
xor
inc
jp
ficompl
mov
dec
ret
lcall
clc
push
mov
dec
pop
lock
in
in
sub
sub
sub
pop
lahf
loop
in
mov
pushf
or
pop
cmp
mov
mov
je
fistpl
fdivrs
and
shrl
and
xor
mov
and
adc
jae
sub
repnz
aas
repz
cmp
lock
fdivs
fwait
push
rcrl
rcrb
popa
jbe
push
les
test
or
and
xor
std
or
vphaddwd
add
and
push
push
add
mov
test
pop
mov
les
jns
insb
mov
fdivs
pop
inc
filds
cmp
pop
loope
pop
mov
loope
movsb
testl
sub
cmpsl
lods
or
clc
sub
pusha
adcb
cli
inc
shll
arpl
aam
and
mov
sub
push
or
add
xchg
jle
xor
push
adc
mov
es
ss
add
push
scas
pop
je
inc
inc
iret
gs
fstl
xor
test
pusha
lods
movsb
dec
aas
idivl
push
xor
sub
std
arpl
pushf
mov
dec
or
out
mov
montmul
cmpsb
add
push
test
push
cmp
dec
mov
jl
in
outsb
add
inc
out
mov
or
inc
out
stos
fs
push
xor
movsb
jg
pushf
sahf
adc
sbb
mov
loopne
xor
inc
or
sbb
pop
sbb
add
insl
dec
outsb
or
mov
hlt
xor
ret
pusha
push
jl
test
add
je
sub
and
pusha
dec
adc
aad
mov
pop
push
imul
add
lea
jl
jbe
lcall
mov
cld
out
fwait
bound
aas
push
adc
inc
lds
xchg
dec
in
adcl
sbb
cmp
outsl
jl
insb
adc
add
push
inc
sbb
hlt
ja
mov
xchg
fiaddl
repnz
popa
xchg
sbb
pop
insl
xor
cmpsb
sub
test
in
in
inc
xlat
adc
mov
arpl
or
sbb
pusha
cwtl
pusha
in
fisubrs
dec
pop
jnp
stc
roll
jl
int
repnz
addr16
and
jnp
sub
pop
cwtl
cmpsl
inc
mov
ss
sub
lcall
adc
mov
repnz
dec
or
cmpl
sub
repz
mov
cmp
adc
dec
sbb
aam
subl
scas
dec
insl
aas
loopne
stos
mov
and
cmp
insb
cmp
outsb
or
or
mov
jge
jg
nop
push
sbb
mov
push
add
jp
insb
sti
pop
cmpsb
sub
popa
mov
lds
imul
dec
pop
arpl
outsb
outsl
shlb
push
adc
les
mull
jl
cltd
xor
mov
mov
sbb
sahf
ss
int3
fs
adcb
adc
loope
inc
repz
out
and
sub
pusha
or
imul
fbstp
in
xor
xor
iret
jle
aam
push
and
add
sti
imul
imul
mov
clc
stos
lret
push
inc
iret
sbb
insb
or
xchg
dec
gs
xchg
into
xor
movsl
popf
out
push
inc
dec
xor
daa
pusha
sub
xchg
stc
data16
lock
xchg
xor
popa
add
rcl
cmp
addl
push
bound
xor
dec
ret
sahf
or
sbbl
js
enter
mov
outsb
jle
iret
pop
cltd
ret
push
cmp
loop
in
mulb
lods
fsubl
xchg
sbb
in
cmp
popa
mov
mov
cs
add
mov
jbe
cmp
sti
div
mov
mov
mov
imul
mov
and
arpl
mov
into
in
push
cltd
inc
rcrb
inc
jmp
out
shlb
leave
mov
lret
lret
jecxz
push
faddl
mov
jp
lea
movsb
nop
xor
dec
mov
pop
imul
or
std
sti
je
rol
xor
test
sub
mov
xor
les
jg
sub
cwtl
arpl
sar
inc
mov
les
fs
pop
mov
mov
xorl
lcall
testl
and
mov
sub
push
sub
mov
or
or
lods
insl
sti
rcrb
into
int
arpl
sub
or
and
xchg
push
inc
lcall
pop
lret
sbb
push
sub
in
ja
popa
pop
sbb
insl
inc
push
or
mov
mov
pop
ret
sub
repz
mov
outsb
cmc
jb
jl
push
add
and
add
ljmp
sbb
mov
pop
ret
imul
outsl
pop
and
mov
mov
out
cmpsl
dec
inc
inc
dec
fbstp
jae
add
adc
mov
cs
push
mov
insb
aam
mov
add
mov
int
fucom
mov
push
lock
cld
subl
pusha
clc
je
inc
lret
jg
nop
jge
lret
jmp
imul
jb
sub
mov
mov
cmp
mov
sbb
nopl
push
jo
mov
inc
lret
mov
adc
sbb
repz
pop
jmp
push
push
insb
stc
add
ljmp
inc
pop
adc
fs
push
mov
lcall
or
dec
call
sub
pusha
mov
or
jbe
cmp
mov
sub
adc
arpl
xor
sub
fisubs
loope
in
inc
pop
push
xchg
movsb
mov
add
inc
addl
lret
push
dec
add
mov
shrl
push
mov
xor
sahf
mov
imul
add
cmp
insb
aas
dec
imul
jo
pop
imul
jae
je
imul
lds
add
movsb
push
mov
dec
int
iret
jg
sti
sbb
sbb
mov
push
or
xchg
ss
pop
shr
cmc
mov
jnp
ret
stos
test
dec
sub
adc
insl
std
fdivrl
mov
xchg
hlt
mov
xor
push
push
fsubl
push
pop
mov
sbb
outsb
mov
shr
les
jmp
ljmp
or
add
lds
fcoms
push
lcall
jecxz
add
push
xchg
imul
stos
sub
icebp
call
push
int
sub
inc
pop
jne
mov
je
and
sbb
xchg
or
sub
push
out
das
push
gs
aas
push
jno
andb
jne
mov
inc
repz
jmp
stc
xchg
fildll
xor
stos
xor
and
push
inc
push
fsubr
cwtl
aad
or
sub
test
jo
add
mov
in
pshufw
jle
leave
push
add
or
lods
outsl
cmpsl
addr16
inc
jns
cmp
fcmovnb
insl
jno
dec
test
xchg
mov
incl
decl
mov
pop
stc
nop
sbb
adcb
pop
mov
iret
cmp
inc
loopne
ret
push
xor
mov
or
cli
add
push
ss
sub
sti
or
sub
mov
cmp
mov
int3
out
dec
sub
or
call
in
or
aaa
pop
add
data16
adc
xchg
mov
mov
daa
arpl
sbb
ret
movsb
ret
out
and
xchg
jle
mov
push
icebp
je
xchg
push
enter
fucomip
lds
push
imul
lahf
imull
dec
xchg
add
das
push
sub
lock
pusha
jo
pop
test
aam
add
test
hlt
ljmp
out
popa
jns
inc
jp
jle
or
xchg
dec
fwait
ret
add
pop
lea
mov
les
push
adcb
push
insl
adc
inc
dec
test
add
dec
xchg
adcb
fisttpll
mov
xor
mov
aaa
inc
lahf
jp
mov
xor
and
adc
sub
mov
sbbl
outsb
jg
jge
lcall
mov
aaa
sbb
leave
push
pop
ljmp
icebp
sub
stc
bound
adc
sbb
aaa
pop
sti
mov
divl
xchg
lds
shll
sub
insl
hlt
and
sub
add
add
and
lret
pop
jmp
iret
sbb
mov
scas
mov
add
cmp
add
push
stc
cmp
pop
cli
jp
pop
or
insb
xchg
xor
loopne
adc
sbb
incl
popa
jmp
cmc
push
mov
pop
popa
mull
jle
jle
adcb
push
add
jmp
sahf
push
subl
aad
xor
mov
dec
aas
pop
xchg
sub
xchg
xor
fucomp
or
push
adc
cmp
cmp
pushf
or
cmp
hlt
adc
in
rorl
mov
scas
fnsave
gs
lds
push
flds
popa
xorl
or
out
lahf
out
pop
in
mov
pop
add
mov
into
ret
movsl
adc
add
aam
popf
or
mov
pop
and
and
mov
test
fstpt
sahf
outsb
mov
push
in
mov
gs
sbb
test
insl
jbe
std
hlt
or
fisttpl
std
and
adc
cmp
stc
gs
dec
cli
jne
xchg
add
push
push
pushf
dec
inc
stc
pusha
add
ljmp
jmp
cmpl
not
push
pop
xchg
insb
add
xchg
iret
mov
daa
lods
psrad
je
jle
dec
inc
rcrl
repnz
jl
xchg
push
add
adc
mov
dec
jno
mov
xor
adcl
scas
cmp
lea
dec
hlt
sub
out
rcll
push
or
mov
ret
pop
sar
add
add
sub
mov
les
jne
sub
jbe
xor
dec
loope
sbb
push
ds
inc
dec
ficoml
fnsave
in
mov
cltd
sbb
hlt
push
cmpsl
popl
push
out
mov
mov
test
adc
jge
stos
adc
add
test
xchg
daa
pop
mov
jg
xchg
call
sub
cmp
cwtl
std
imul
pop
hlt
mov
sbb
add
and
pop
test
xchg
call
cmp
xchg
stc
insb
push
sub
mov
mov
add
test
or
testb
push
shlb
push
iret
mov
push
mov
scas
shlb
leave
fimuls
xor
push
push
inc
xor
cmp
popf
dec
out
cld
lods
add
loopne
dec
xchg
mov
and
clc
jae
and
les
adc
mov
daa
cmpsb
hlt
mov
mov
sbb
cli
imul
cmp
sub
outsl
mov
pop
mov
aaa
ror
mov
sbb
cmpb
dec
test
movups
xor
and
add
push
scas
push
mov
lea
push
mov
fs
jno
les
inc
pop
lret
hlt
js
pop
imul
dec
mov
mov
shld
imul
push
out
ret
cmp
push
fmull
daa
clc
inc
insb
adc
int3
xlat
jmp
fwait
push
clc
add
repz
lds
pushf
pop
jbe
dec
stos
mov
push
add
inc
aas
push
sbb
lcall
imul
sub
add
cli
push
adc
mov
push
jge
cmp
fwait
push
rcrl
add
xor
inc
pop
mov
into
dec
cs
ljmp
adc
inc
sub
cmpsb
mov
inc
fdivrp
xchg
add
mov
adc
xchg
mov
cmp
add
jecxz
xchg
xor
push
dec
sti
outsl
test
mov
movb
imull
pop
int
cmc
mov
insb
sti
repnz
or
cmpsb
push
sbb
push
or
jns
loopne
stos
or
rcrl
pop
and
shll
jae
dec
ds
test
jae
xchg
mov
rolb
nop
rcrl
ret
mov
adc
dec
test
sub
je
xchg
xchg
mov
fisttpl
lret
sub
enter
sub
aad
jbe
mov
xlat
outsb
pop
ljmp
push
jae
xor
dec
inc
cmpb
mov
xchg
sub
mov
aad
out
xlat
fwait
addr16
push
jbe
scas
pusha
xchg
cmp
ss
xchg
push
adc
jecxz
push
jne
cmp
sbb
xchg
icebp
pop
mov
aaa
push
push
mov
fimull
jne
pop
dec
add
adcl
inc
stos
test
inc
lods
cmp
or
pushf
adc
aad
hlt
ss
insl
ja
jp
xchg
lret
test
call
jmp
imul
pop
dec
mov
sbb
ss
and
add
aas
ret
dec
enter
push
out
mov
gs
sti
fdivrl
shll
adc
mov
xchg
fucomip
inc
rcrb
clc
jo
fs
insb
sub
sbbl
das
lret
icebp
mov
les
or
jae
dec
jecxz
or
add
aad
lods
nop
mov
hlt
mov
mov
sahf
leave
fxch
test
jne
add
xor
mov
imul
sbb
insb
test
loop
and
jle
inc
shl
xor
rcr
pop
stos
inc
xchg
dec
jg
cli
cltd
enter
popf
mov
ljmp
call
and
cli
sbbb
stos
mov
mov
or
mov
push
pop
inc
stc
sbb
xlat
outsb
std
cmp
push
push
loopne
jb
xor
jno
pop
rclb
mov
jecxz
ja
jmp
ret
repnz
xlat
pusha
loop
sub
push
in
push
les
stc
bnd
pop
int3
adc
fs
adc
cltd
inc
mov
push
leave
and
mull
je
and
dec
out
dec
push
push
add
xchg
stos
xor
jnp
int3
sbb
inc
or
xlat
pop
outsl
or
popf
mov
sub
icebp
test
inc
mov
xchg
ret
jo
sbb
jmp
or
shrb
dec
in
scas
jns
sub
insb
fistpll
int
mov
and
in
jae
jo
or
loope
lret
mov
in
pop
ss
xchg
or
rcrl
push
jbe
mov
test
rolb
xor
and
mov
outsl
push
fists
mov
popf
cmp
pop
adc
adc
jae
das
les
cwtl
or
stos
xchg
pop
xor
sbb
sahf
push
ror
lds
jnp
push
sub
subl
cld
cmp
jmp
nop
xrelease
in
xor
pop
lahf
jg
or
inc
add
int3
pop
dec
aaa
pop
out
lods
js
or
add
roll
lahf
popa
push
jmp
lret
rcll
out
popa
push
mov
cmp
jbe
and
aas
fildll
pop
cmpsb
inc
mov
stos
inc
roll
push
insb
data16
jb
pop
shrb
pop
stc
je
jl
dec
scas
sub
dec
ffreep
cwtl
mov
in
xchg
xchg
sub
mov
xor
and
xchg
daa
sub
loopne
jmp
jmp
orl
data16
popa
clc
inc
xchg
xchg
add
add
dec
add
shlb
stos
xchg
into
pop
shrl
sbb
lods
cmp
in
test
sub
stc
jg
lahf
sub
aaa
dec
pop
dec
es
mov
fimuls
xor
cmp
js
enter
mov
aas
jmp
push
ljmp
insb
inc
fistl
leave
ficoms
loopne
inc
mov
mov
adc
cld
add
shrl
dec
pop
lcall
and
mov
or
es
lahf
loop
xchg
adc
dec
cmp
jmp
movsb
fcmovnu
add
shr
push
mov
inc
ret
or
roll
dec
push
lahf
enter
nop
sub
cmpsb
dec
out
mov
cmp
or
pop
scas
les
pop
stc
or
xor
mov
ret
js
idivb
shl
push
push
mov
jmp
lea
rcrl
or
aas
dec
std
adc
insb
sahf
lods
push
lock
or
pop
test
push
fstl
and
push
xor
incb
push
adc
mov
ss
ja
cmp
pop
mov
or
inc
out
rclb
arpl
arpl
adcb
xor
mov
jp
inc
fsincos
xor
xor
iret
pusha
idiv
jle
dec
cld
and
push
push
sahf
push
fmul
leave
pusha
xchg
pop
or
or
outsl
pop
lret
xchg
mov
subl
cmpsl
push
pop
adc
adc
and
dec
pop
scas
xchg
push
mov
test
cmp
jge
mov
jecxz
push
sahf
pop
rolb
pop
or
dec
loope
and
jae
loope
inc
adc
fidivrs
sbb
add
in
cwtl
cmp
and
mov
mov
jg
and
pop
mov
test
inc
xorb
push
lret
sti
xchg
dec
mov
cmpsl
sbb
jg
dec
mov
mov
mov
rolb
pop
push
fbld
jmp
fnsave
pushf
popa
in
cmp
ds
jns
cmp
ror
sbb
test
movsb
mov
push
scas
xchg
lds
mov
movsl
pusha
push
sub
jl
inc
xlat
mov
sub
fs
or
jp
or
adc
xor
lret
fidivrs
lahf
push
int
mov
fsubrp
xchg
fadd
in
faddp
loope
cmp
fmull
and
dec
out
cmp
sub
mov
ljmp
xchg
popa
jecxz
jmp
sub
jb
pop
dec
sbb
daa
lret
mov
xor
sub
bound
xchg
pop
jg
adcb
or
lods
mov
mov
sub
clc
push
push
mov
leave
leave
dec
fldcw
adc
imul
pop
sub
addr16
dec
iret
fisttpl
sub
sahf
out
jmp
das
test
fsubr
jmp
ljmp
fidivs
shll
sbb
lods
sbb
cmp
call
loop
rcrb
xchg
mov
out
push
adc
xor
loopne
add
sub
fwait
cld
fsts
inc
out
lcall
inc
or
jmp
push
mov
movsl
adc
push
bound
cmp
lods
mov
mov
jle
sub
or
pusha
fbstp
outsl
sbb
in
int
jno
mov
popf
ss
outsl
mov
sbb
fsubrl
pop
test
fs
std
cmp
pop
lret
inc
les
das
mov
xchg
mov
push
outsl
inc
push
shll
and
push
or
xor
jl
or
pop
dec
shll
movsb
mov
lods
add
cmp
lea
xchg
popf
jl
adc
scas
inc
inc
out
dec
xor
test
fimuls
adc
gs
push
dec
movsb
mov
pop
xor
lea
adc
pop
movsl
fwait
imul
pop
mov
mov
stc
inc
stos
cmpsl
mov
cmpsl
dec
in
enter
aam
mov
movsb
out
daa
addl
sub
insb
inc
test
jns
xlat
inc
xor
hlt
add
addr16
cmp
xor
adc
adc
test
xor
xchg
cmp
scas
imul
lret
fs
add
push
repnz
or
mov
fsubrs
into
pop
inc
inc
xchg
out
mov
popf
mov
sarl
dec
sub
imul
adc
sub
push
shl
pop
pop
fstps
dec
std
ss
pop
ja
cmp
int
inc
loop
lods
iret
in
out
inc
ret
xor
mov
testl
lea
add
cmp
xchg
jge
pop
pop
push
jl
mov
jg
xchg
pop
les
leave
pop
in
mov
gs
lock
shll
loope
aaa
xchg
stos
bound
cmpsl
xor
scas
adc
and
pop
rorb
icebp
shrl
adc
push
shr
je
add
ljmp
imul
dec
in
inc
clc
sbb
loope
ret
sbb
sub
movsl
rcrl
mov
repnz
std
push
push
push
or
bound
es
dec
stos
out
jnp
ljmp
fdivl
es
sub
xorb
jo
stos
sub
hlt
fsubs
cmc
faddl
incl
xchg
in
or
cmc
jge
mov
jb
jnp
inc
xchg
sbb
inc
outsl
test
jns
imul
ficompl
push
jne
pop
outsb
sbb
test
fisubrs
lret
jo
popf
sub
dec
push
lock
sub
ret
lock
mov
test
or
notl
jne
pop
int3
in
jne
cmp
cmpsl
xchg
mov
mov
pop
xlat
pop
fbstp
inc
sub
pop
adc
pop
frstor
adc
es
or
ss
aam
dec
pop
hlt
inc
insb
sub
leave
xor
sbb
inc
dec
push
adc
pushf
ror
cmp
dec
jbe
pop
xchg
aaa
push
repnz
adc
jo
sahf
in
mov
jl
dec
mov
sbb
hlt
and
sbb
into
testl
das
dec
loop
inc
mov
jg
insl
mov
sahf
sub
aad
in
ljmp
out
stc
mov
int3
xchg
enter
mov
lret
lret
arpl
dec
mov
push
inc
repz
cs
aaa
into
xor
out
outsl
fbstp
mov
push
push
and
pop
jb
cli
cmp
push
mov
sbb
dec
loope
sub
add
popa
clc
ja
jp
pop
fcoms
addb
or
ja
sub
mov
mov
dec
out
cmp
jno
xchg
out
jl
test
jle
xor
adc
test
xor
cld
ds
lods
sbb
in
fnstcw
pop
aas
push
jae
fwait
loope
jmp
int
sub
mov
inc
incl
out
lods
mov
pop
sbb
inc
mov
add
sti
inc
lea
mov
lea
cmpsl
pop
hlt
mov
popf
mov
gs
bound
dec
xchg
mov
roll
mov
jge
sbb
lahf
jmp
jo
cmp
pop
call
jns
mov
fildl
cmp
cmp
inc
pop
mov
dec
inc
push
pusha
pop
out
mov
inc
iret
mov
or
lea
xchg
test
cmc
mov
cmp
jbe
pop
sbb
cwtl
cmovl
lret
js
into
cmp
dec
dec
rcrb
rorl
add
loopne
das
push
addr16
xor
int3
sahf
out
ret
xchg
mov
add
in
or
repnz
repnz
mov
sub
push
stos
aaa
lcall
xor
rorl
mov
inc
es
in
lahf
lcall
loop
mov
mov
adcb
pop
jge
sbb
scas
cmp
test
and
lret
cs
dec
mov
in
aam
imul
test
cltd
mov
test
jmp
push
jmp
mov
mov
outsl
fwait
mov
rol
repnz
mov
shr
inc
push
inc
dec
je
addl
mov
pop
outsl
rol
lds
ret
ret
mov
inc
xlat
and
test
fwait
jg
ret
jmp
or
ja
js
cmp
pop
xor
andl
cmpb
nop
or
sub
sub
cmc
cli
lret
jge
jge
dec
sahf
xor
sbb
in
loope
inc
jl
mov
outsl
shll
cltd
ja
jo
add
and
and
repnz
mov
aaa
mov
in
mov
cmpsb
lock
call
nop
sarb
sbb
pop
test
adc
push
jb
aaa
ret
jae
ficoml
test
mov
imul
sbb
push
scas
scas
inc
push
and
xchg
sti
cmpsl
lock
scas
xor
lret
lcall
int3
mov
add
leave
es
jbe
lahf
repz
add
add
imul
mov
mov
popa
add
ds
push
movsl
pop
add
sub
cmp
sti
dec
fs
jg
sub
xchg
fwait
in
jle
add
out
int
dec
out
jo
xorl
dec
fs
pusha
or
mov
cld
dec
pop
je
js
into
xor
das
adc
inc
insb
jp
scas
xor
fsubrl
push
test
pop
adc
inc
or
dec
in
lock
cmpsb
cmp
lret
out
mov
mov
clc
call
sbbb
xor
push
pop
je
cmp
mov
dec
daa
cmc
sbb
add
mov
mov
rol
repz
dec
push
cltd
arpl
lods
ficoml
jmp
dec
ss
push
aas
imul
or
and
and
jecxz
fcoml
xchg
gs
stc
jnp
mov
jge
insb
add
mov
aam
lea
jl
repnz
push
push
adc
push
daa
mov
pop
lock
lods
repz
cmpsb
inc
sub
mov
inc
leave
int3
add
mov
mov
add
imul
shrl
stos
scas
jns
mov
in
sub
ret
jb
sub
mov
xor
fs
ja
xchg
mov
dec
cmp
xchg
xor
xor
adc
out
xchg
and
into
icebp
and
rclb
mov
out
outsl
scas
iret
fistpl
cmp
loope
pop
dec
insl
cmpb
in
movsb
push
or
cmc
out
aaa
cmc
fcmovb
jge
popf
pop
mov
add
arpl
lahf
shrb
inc
fs
pushf
imul
mov
fisubrs
lcall
into
fdiv
imul
icebp
mov
mov
addr16
mov
lret
movsl
test
aas
lds
nop
sbb
mov
xchg
andb
mov
leave
mov
or
fiaddl
or
adc
sub
cmp
cltd
scas
push
les
and
jb
imul
push
cmc
fimull
lods
push
mov
mov
vmovddup
lret
jge
jo
mov
lods
out
shr
dec
lods
mov
dec
fs
mov
sti
adc
cld
testl
xor
les
cmc
sub
scas
fimuls
sti
ss
ja
test
adc
add
and
xchg
cmpsl
in
dec
leave
pusha
sbb
cmc
test
pop
mov
in
sbb
jb
xor
iret
nop
mov
jmp
imul
fucomip
mov
xor
jb
ja
sbb
dec
mov
incb
je
xor
push
sub
cld
bound
repnz
dec
push
addl
stos
jecxz
sub
mov
stos
xor
ret
push
push
lods
test
mov
test
js
inc
icebp
sub
outsb
pop
in
lahf
vmovntps
mov
sbb
into
push
xchg
outsb
mov
into
dec
dec
aam
sub
lods
lock
outsl
imul
or
fsts
cmp
mov
pop
shlb
int3
sbb
test
leave
sbb
orl
fildl
inc
aaa
test
adc
enter
aam
jmp
xchg
add
daa
shrl
cmp
imul
out
xchg
or
inc
ficomps
push
jmp
or
idivb
ljmp
data16
push
addr16
popf
scas
or
push
cli
ss
jbe
arpl
add
cld
adc
jno
sbb
mov
dec
or
or
arpl
sbb
adc
jae
enter
repz
push
push
jo
xchg
pop
cld
ljmp
lret
bound
jle
mov
mov
xchg
push
lods
adc
lods
mov
push
lret
fsubrs
sub
pop
jp
enter
incb
movsl
adc
aaa
test
rcr
dec
arpl
or
out
add
xorb
push
lods
adc
sub
into
xlat
outsb
add
cmc
cmp
and
icebp
dec
pop
and
lods
pop
jnp
adc
pop
repnz
jge
rorl
stos
pop
inc
jne
loopne
out
xor
dec
dec
in
sti
cmp
adc
notb
xor
cmp
cmp
or
icebp
ss
xchg
pop
xchg
pop
push
dec
sbb
stc
inc
scas
addb
xchg
popa
popa
and
mov
data16
pop
ja
cltd
iret
jns
inc
mov
cmc
movsb
repnz
test
pop
addr16
cmp
in
dec
pop
test
lahf
inc
mov
jne
orl
incb
fsubs
adc
cmp
and
dec
js
sbb
sbbb
shrl
dec
shrl
int3
icebp
dec
lods
inc
mov
loop
pop
adc
xchg
jbe
mov
dec
push
aas
xchg
xchg
rcrb
idivb
inc
ss
fs
push
dec
mov
loop
shrl
mov
data16
call
xchg
mov
ss
es
ret
sti
jns
xlat
xchg
push
jmp
inc
sub
fcmove
xor
pop
xor
repnz
add
xchg
cli
sbb
add
jae
xor
adc
call
out
pop
imul
add
int3
imul
mov
mov
lret
mov
pop
addr16
jp,pn
fsubs
das
fwait
in
push
lea
jle
mov
xor
enter
cmp
pop
rcr
jge
push
cmc
fists
rcrb
push
dec
les
jns
cmp
hlt
addr16
daa
xchg
test
xor
fsubl
inc
pushf
or
lret
pushf
call
add
pop
cmp
add
pop
push
sbb
xchg
lret
jle
les
inc
mov
mov
and
scas
xor
enter
shlb
dec
add
sbb
loopne
popf
push
jle
push
in
mov
sbb
mov
cmc
ret
fisubs
out
jae
es
or
js
sbb
cmp
adc
pop
insb
add
out
mov
xorl
das
cwtl
clc
mov
mov
sbb
data16
insl
cwtl
push
sbb
jle
mov
cmc
pop
js
push
das
ja
into
test
mov
inc
lods
leave
and
arpl
mov
lahf
std
jg
inc
mov
and
sbb
dec
xor
gs
lock
inc
xor
and
and
jae
push
in
xchg
js
jmp
jns
popf
jo
pop
movsl
add
fistpl
aaa
xlat
decl
xchg
mov
stos
lds
push
xchg
sub
out
mov
iret
push
sub
std
xor
mov
popa
mov
xchg
mov
stos
pop
imul
iret
cltd
cmp
movsl
cmp
mov
test
std
push
add
jmp
lret
andb
xchg
mov
dec
push
in
mov
mov
fsubrs
aad
and
pop
je
les
inc
std
shll
punpckldq
cs
ret
repz
imul
rcrl
inc
push
js
mov
rolb
scas
int3
inc
popa
jns
imul
push
lods
xchg
cmp
push
jp
fnsave
jbe
rol
jbe
insb
sub
fdivs
push
sub
jge
fildll
lock
aad
insl
sub
rcrl
xlat
bound
add
les
inc
in
push
popa
shll
jle
lock
mov
adc
push
sub
xor
addr16
sar
xchg
hlt
cwtl
popa
mov
mov
push
jmp
out
mov
adc
test
sbb
aam
cmpsl
push
mov
call
mov
add
xchg
pusha
jb
inc
push
mov
jle
dec
xor
adc
dec
sub
push
insl
mov
lret
jp
inc
nop
ja
dec
sbb
jae
jp
addr16
push
push
jae
das
add
sub
mov
hlt
xchg
jbe
shl
jmp
pop
sbbb
jno
mov
add
cld
sub
xchg
jle
inc
loop
pop
icebp
xchg
int3
cmc
push
inc
push
add
mov
aaa
into
out
mov
jp
adc
rolb
stc
inc
mov
mov
mov
inc
testl
arpl
clc
jno
popa
je
cmp
ja
test
imul
iret
mov
mov
push
and
mov
dec
cmpsb
sbb
jb
ret
sahf
xor
loopne
mov
lods
pushf
fistpll
push
test
jo
adc
add
jecxz
mov
pop
mov
add
stos
sub
push
out
mov
fsubrl
push
xor
mov
mov
in
add
sub
inc
jecxz
lock
adc
in
and
dec
cmp
aas
out
data16
mov
call
cmp
ss
pop
aas
imul
cld
mov
outsb
mov
rcr
dec
mov
cwtl
jns
es
ret
rcr
movsb
adc
push
cmp
jne
stos
fxam
mov
int3
test
lcall
mov
aam
mov
adc
jle
aaa
jne
and
faddp
mov
cmp
push
and
das
frstor
cmp
jmp
inc
fildl
filds
pop
push
adc
xor
add
xor
xchg
xchg
dec
aaa
outsl
shll
ficoml
mov
mov
mov
nop
adc
dec
fdiv
pop
shrl
mov
cld
xchg
and
mov
int3
cli
lock
xor
jmp
inc
nop
sbb
xor
xor
mov
test
adc
insl
pop
mov
add
scas
scas
push
xchg
outsl
add
adc
or
gs
jg
mov
mov
sbbl
inc
bound
and
push
movsb
bound
mov
cltd
lods
call
or
pop
jns
sub
aad
mov
fldt
lret
ucomiss
pop
inc
sbb
ret
jne
jae
dec
hlt
mov
int3
xlat
mov
dec
fdivp
or
xor
jl
fwait
xchg
xchg
inc
leave
shl
jbe
lret
cwtl
in
inc
mov
sbb
xchg
mov
lahf
dec
cmpsb
nop
test
mov
sub
xchg
inc
aas
sub
lock
sub
rcll
inc
repnz
or
popf
pop
daa
cli
add
cwtl
icebp
cmc
ss
adc
mov
in
push
add
sbb
mov
mov
popa
negl
xor
fcoml
ds
outsl
and
xor
jns
inc
sub
and
dec
add
lds
cld
imul
dec
lcall
jnp
xchg
xchg
test
mov
mov
adc
pop
stos
cmp
push
test
lret
sub
inc
add
adc
insl
adc
je
mov
and
pop
and
scas
xchg
fldl
inc
lds
add
sub
jae
jmp
cmp
sub
xor
inc
scas
lock
pop
icebp
xchg
cmc
aas
int3
iret
xor
push
fimuls
mov
xor
jge
pop
mov
cmp
imul
test
arpl
add
lea
pushf
add
dec
or
ss
jge
mov
imul
sub
cmpsb
xchg
inc
in
mov
mov
pop
pop
fimuls
mov
cmp
xor
xchg
adc
imulb
push
push
outsl
push
jne
das
cmpsb
outsl
rorb
jp
sub
lret
mov
fsubrs
je
out
ja
mov
or
mov
or
aaa
pop
lods
mov
sbb
cmp
pop
out
mov
jge
sub
mov
or
pop
lods
lret
lea
scas
inc
pop
xchg
cmp
call
or
popa
addr16
jp
scas
arpl
inc
jle
in
mov
xchg
in
ficoms
movsl
jo
jo
insl
mov
or
mov
fistpl
inc
es
xor
imul
cmp
or
pop
cs
fsubrl
pop
push
cmovle
xor
addr16
push
xchg
dec
adc
inc
mov
jbe
fcmovu
add
ss
mov
push
arpl
or
call
mov
les
cld
pushf
cli
xor
jae
std
cltd
clc
ds
mov
cld
fldcw
jp
ja
pop
bound
push
inc
add
orl
loop
add
lahf
out
sub
fiaddl
pop
js
sub
cld
aam
push
rclb
xchg
subl
cltd
aad
lods
and
adc
ja
push
xchg
push
je
dec
clc
mov
fcomp
int
mov
mov
fadd
cld
fdiv
push
and
rcr
ja
dec
and
sti
aaa
dec
es
adc
inc
mov
ljmp
pop
or
mov
stos
ja
scas
out
lods
mov
out
cmpsl
cmp
jb
loop
mov
fdiv
mov
movsb
hlt
jbe
cmp
pusha
sub
push
inc
enter
fcoml
push
xchg
pop
jb
jg
in
mov
jmp
imul
ret
xlat
mov
cli
sbb
aad
ficomps
or
repz
mov
xchg
push
data16
bound
mov
divb
adcl
outsl
fs
sbb
in
fldt
sbb
das
adc
outsl
sti
cmp
cmp
or
leave
xchg
inc
mov
mov
inc
mov
int
or
mov
cmp
mov
insl
test
push
mov
jns
test
pop
mov
fsubrl
or
lods
daa
and
enter
scas
mov
vaddsubpd
pop
test
dec
dec
dec
lea
fnstcw
cmc
jle
bound
and
push
repnz
mov
add
jle
and
xchg
or
and
pop
imul
aaa
call
mov
fisubs
jle
sahf
int
enter
mov
jbe
adc
mov
outsl
sbb
add
pop
adc
or
mov
stos
loopne
fcoms
adc
pusha
stc
cmpsl
fwait
aam
xchg
sbb
rorb
cmp
loop
fucomp
cwtl
ja
jle
mov
sbb
xlat
or
lea
pop
jb
mov
cmp
jns
roll
sbb
xchg
test
push
jle
test
nop
mov
sub
cltd
rorb
push
jl
dec
dec
pusha
mov
in
push
cmp
jnp
aad
cmp
sbb
pop
mov
imul
stc
lret
sub
jae
jl
adc
lea
xchg
rolb
cmp
inc
imul
shlb
cmp
addl
clc
mov
call
imul
pop
mov
loop
mov
pop
cmp
inc
mov
push
in
adc
jo
mov
into
test
sub
fildl
inc
mov
test
jmp
and
jmp
jp
or
xchg
out
mov
adc
xor
push
std
pusha
jne
pop
adc
xor
sub
out
cmpb
cmp
into
pop
sub
xlat
out
xchg
icebp
adc
jb
in
mov
scas
cmpsb
fistps
sbb
and
mov
and
insb
lods
push
loop
fidivl
cli
push
jno
add
pushf
sub
push
loopne
cmc
jge
loopne
inc
fdivrl
fidivs
frstor
sub
pop
popf
jp
xchg
dec
movsb
cmpsb
push
jmp
cltd
les
out
push
push
addr16
and
pushf
push
cmpsl
aad
popf
and
push
hlt
inc
xlat
es
lock
gs
and
inc
jecxz
push
mov
dec
fcmovu
mov
push
push
mov
faddl
xor
inc
inc
push
mov
dec
orl
insb
lods
inc
sahf
pop
imul
cmp
insl
lret
dec
in
adc
inc
mov
push
fs
dec
inc
fcompl
aas
xchg
adc
cmp
orl
push
rcrb
pop
scas
sbb
xor
push
iret
aas
jae
out
xor
or
dec
pop
pop
fwait
iret
gs
cs
xor
xor
cmpsl
dec
add
mov
mov
or
dec
fisubrs
repnz
aam
setne
pop
fucomp
les
cs
movsl
pop
pop
adc
lret
mov
dec
sub
pop
cmp
jg
filds
aam
out
in
jae
arpl
sbb
push
mov
push
push
push
popf
xor
pop
cld
outsl
push
push
mov
fmul
clc
inc
int
outsl
stos
jmp
mov
fwait
ljmp
push
mov
mov
cmp
sbb
or
mov
jl
pop
jnp
push
xchg
bound
imul
sbb
dec
mov
das
pop
addr16
in
lcall
aaa
scas
inc
adc
xchg
push
xchg
jl
mov
enter
pop
mov
loope
repnz
cmc
jge
add
xchg
test
adc
fistpll
scas
pop
lret
sub
std
jnp
test
push
and
mov
xor
mov
ja
inc
fucomi
xchg
test
dec
das
sbb
cld
adc
or
mov
out
mov
in
clc
test
mov
pop
jmp
mov
in
in
push
mov
mov
push
add
fdivs
jg
jmp
call
lcall
iret
test
cmp
shrb
pusha
notl
rolb
jle
mov
mov
imul
mov
pop
pop
adc
dec
and
stos
inc
xchg
jne
movsl
xorb
inc
arpl
mov
enter
pop
mov
sbb
shll
and
and
iret
mov
cmp
pop
cmp
push
lret
lods
fwait
sti
adcl
movsl
add
cmp
adc
repz
sub
push
shll
std
mov
xor
dec
jmp
sbbl
lahf
pop
pop
in
dec
int3
imul
lret
and
or
call
mov
mov
push
mov
lds
xor
cmp
jecxz
adc
xchg
add
rcrb
call
cmp
imul
mov
add
aam
negb
gs
mov
add
add
popf
xchg
outsl
add
popf
sub
loopne
sbb
bound
in
inc
mov
ds
in
pop
push
ds
fstp
aas
cli
xor
mov
push
subb
loope
mov
iret
out
xchg
mov
mov
inc
push
mov
xchg
ss
loopne
push
add
mov
and
mov
jge
mov
dec
inc
jne
cld
sub
and
loop
pusha
divl
mov
lcall
and
pusha
cmp
lret
enter
pop
jmp
push
push
ret
mov
js
pop
mov
mov
repnz
call
hlt
cld
lea
int
sub
insl
pop
les
rcrl
xchg
mov
cmp
lea
push
push
mov
and
push
jge
xchg
scas
cmp
dec
stc
fwait
mov
dec
aas
push
aaa
pop
ficomps
jae
push
push
and
pop
ret
jns
sbb
sbb
imull
cli
mov
cli
test
lods
cmpl
xor
add
push
inc
pop
xor
dec
pop
push
popa
inc
loopne
inc
mov
imul
inc
sbb
out
adc
jae
sub
loope
dec
nop
dec
cs
mov
clc
cmp
pusha
clc
cmpb
push
rcl
popa
fcoml
mov
xchg
lods
arpl
pop
xchg
rcr
enter
xor
in
fldl
test
jle
test
adc
dec
out
cmp
lret
repz
das
sbb
sahf
iret
lds
imul
dec
add
lahf
lret
xor
mov
pop
vrsqrtss
out
pop
test
sub
or
outsb
sub
inc
mov
dec
cmc
mov
xor
rclb
jp
stc
leavew
push
fcomps
push
cmp
pop
aaa
jp
pop
adc
inc
in
push
jb
out
push
cld
cmpl
fcmovu
jle
andl
push
sub
push
fisttps
adc
out
aas
jno
fldl2t
daa
inc
stos
cmp
scas
rcrb
pop
cli
sbb
pop
and
mov
or
push
xchg
push
inc
add
dec
outsb
jnp
shll
and
stos
test
xchg
jp
dec
call
js
in
cmpsb
inc
jne
loope
sbb
xlat
mov
push
xchg
xor
fdivl
fisttpl
push
iret
xchg
push
mov
xchg
rdpmc
popa
shrb
push
push
jnp
bnd
lea
es
sbb
jns
mov
sub
out
sbb
dec
add
aam
inc
and
pop
fldcw
icebp
push
pushf
cs
scas
loopne
cmpsl
ds
add
jbe
loope
js
cld
push
lods
lea
enter
fst
cmp
rcrl
xchg
add
imul
push
pop
mov
sub
jmp
xor
or
sbb
js
mov
xchg
jl
mov
mov
cwtl
inc
scas
and
int3
cmp
gs
mov
cvtps2pi
aas
insl
inc
sahf
pop
dec
scas
inc
jl
xor
fdivl
outsl
mov
lea
cli
xor
xchg
aad
add
pop
insb
lcall
mov
mov
or
push
stos
sub
cmpsb
ror
fstl
adc
cmpsb
es
ja
mov
dec
int
jp
insl
dec
pop
leave
xor
inc
mov
cmp
jmp
lds
cld
xchg
jecxz
push
sbb
add
mov
divl
pushf
scas
pop
jbe
adc
mov
mov
sti
es
dec
mov
ss
jae
fstl
maxss
imul
mov
add
lods
vucomisd
icebp
push
xor
movsl
ret
cmpsb
lret
pop
lock
fs
popa
dec
in
sbb
imul
inc
xchg
inc
fidivs
pop
cli
rcrl
arpl
or
lcall
xor
push
addr16
popa
inc
insb
cmp
scas
push
mov
inc
repz
jl
fcoms
cs
push
jo
adcb
inc
in
or
pop
jbe
push
jb
repnz
sub
dec
jb
out
sbb
test
jecxz
dec
leave
xor
mov
out
mov
int3
jo
xchg
sbbl
mov
sbb
jge
rcl
xacquire
cltd
hlt
test
mov
data16
jno
rorl
mov
mov
mov
mov
mov
add
mov
lcall
call
push
sub
enter
push
jbe
ljmp
pushf
xor
or
mov
or
das
flds
sbb
lods
dec
jg
mov
push
mov
mov
xor
pop
and
xor
push
inc
jecxz
fbstp
adc
push
jecxz
lcall
mov
test
jle
add
xchg
push
addr16
data16
adc
or
into
add
lods
enter
stos
inc
fstp
rcrl
mov
test
ret
pop
inc
pop
je
enter
rcl
ret
pop
mov
xchg
mov
pop
pop
adcb
and
mov
lcall
inc
jecxz
in
rcll
xchg
sub
js
mov
lods
icebp
mov
aas
mov
jmp
adc
lret
lret
cmc
sub
out
mov
sbb
addr16
neg
test
loopne
cmp
xchg
dec
ret
pop
pop
repnz
push
jns
daa
in
pop
in
movsb
enter
xchg
adc
xchg
dec
inc
sahf
push
mov
xor
dec
mov
pop
dec
lret
ret
ret
testl
pop
dec
mov
xor
mov
fwait
xchg
std
xchg
jmp
repnz
and
inc
adc
mov
or
lcall
or
jl
mov
in
sub
ret
loop
jp
in
sub
fucomp
pop
out
sarb
xchg
icebp
jbe
inc
pop
cli
xchg
cmp
sbb
scas
sub
add
and
jp
lods
test
jnp
mov
lahf
lcall
push
sbb
dec
sub
aam
data16
imul
inc
andb
insb
sub
or
aaa
dec
mov
or
cmp
lock
sti
rcl
ret
push
xlat
clc
dec
loopne
in
push
imul
dec
data16
stc
fidivl
and
loopne
incb
fdivrp
cwtl
aas
sub
iret
sahf
mov
loop
std
jl
out
in
je
xchg
xor
cmpsb
cmp
inc
repnz
call
aad
xchg
mov
movsl
cmp
mov
mov
and
or
inc
je
mov
outsl
pushf
xor
xchg
notb
daa
xlat
neg
pop
xchg
mov
cmp
pop
xlat
outsb
nop
out
lcall
int
rcll
mov
jmp
mov
subl
daa
adc
out
mov
push
xchg
cs
jno
push
test
fidivrl
push
repnz
add
mov
fidivrs
adc
cmpsb
lock
pop
pusha
clc
jl
lret
movsl
das
sahf
jg
pop
icebp
jns
and
mov
fwait
xor
les
sbb
aad
push
mov
jnp
cmp
cltd
std
push
dec
dec
loop
add
dec
sub
arpl
fdiv
xchg
pop
call
cmpsl
std
pop
andb
inc
or
mov
aaa
fwait
jbe
jnp
pop
cmpsb
jne
sub
repnz
push
dec
push
inc
cmp
jl
notl
in
add
jno
rcr
aas
sbb
dec
pusha
arpl
adc
popa
mov
push
outsl
rcrb
lea
xchg
dec
loope
fsubs
lret
movsl
add
adc
stos
enter
adc
fisttpll
scas
out
lods
int
sub
sub
fists
or
call
call
push
imul
sub
adc
and
rolb
dec
add
sbb
test
pop
repz
insl
sub
dec
and
ja
mov
mov
xchg
push
scas
ss
lods
cs
mov
les
adc
pusha
pop
xor
xchg
lcall
icebp
mov
sub
ret
jo
hlt
mov
test
in
pop
das
loopne
mov
sub
and
repnz
jb
imul
inc
rolb
sarb
sub
ret
pop
fidivl
leave
rclb
enter
fimull
lret
pop
cmpsl
mov
inc
cs
ds
out
lods
xchg
sbb
decl
int3
pop
xor
lret
xchg
cmp
adc
ficompl
std
stos
mov
fwait
push
pop
pop
out
lea
popf
cmpsl
push
jl
mov
inc
push
pop
jg
pushl
ret
cs
insl
sbb
rolb
sub
sub
inc
and
scas
push
lret
in
fdivl
stc
nop
ja
cmp
ror
jo
popf
dec
push
mov
shr
sti
test
push
in
icebp
aad
add
inc
mov
lcall
push
neg
jo
scas
jmp
and
in
and
imul
and
mov
shrl
jmp
mov
fsubs
xchg
xchg
dec
fsubrs
xchg
lods
inc
or
cmp
je
adc
mov
sbbl
cli
aam
arpl
cmp
int
inc
jnp
xor
in
icebp
pop
mul
mov
cmpsb
cmp
mov
stc
nop
incl
and
sbb
and
lods
pusha
out
cli
xlat
test
mov
push
inc
flds
incb
icebp
mov
jb
clc
arpl
xchg
sub
stos
inc
fstps
fs
mov
xlat
testb
inc
movsl
cmp
icebp
pop
hlt
loop
xor
jl
xchg
sub
mov
lea
jmp
sub
aam
mov
lcall
mov
cwtl
das
sbbl
pop
adc
xor
xchg
insl
add
lcall
nopl
in
cmpl
jo
sbb
mov
mov
aam
loop
mov
fstps
add
sub
xchg
popf
test
mov
lds
push
inc
sub
iret
test
les
pop
mov
aam
bsf
push
jle
out
gs
lret
sbb
sub
xor
jg
and
xor
cmp
inc
movsb
pushf
mov
jne
mov
cltd
jne
adc
cld
xchg
flds
sbb
int3
stos
int3
mov
sub
je
shlb
mov
scas
jl
and
mov
jmp
xchg
sub
and
mov
dec
or
data16
es
jae
add
push
jge
test
jp
jge
mov
pop
repz
adc
test
add
jle
jns
jae
pop
scas
and
adc
roll
bound
dec
std
xchg
cmp
call
push
mov
inc
sbb
xor
lock
xor
fwait
xor
add
cmp
xchg
sub
jmp
das
inc
add
sub
pop
fs
pusha
and
inc
fisubs
in
divl
cmp
in
out
push
or
mov
xchg
jg
pop
mov
inc
fisubrs
cmpsb
mulb
mov
aad
add
push
out
sbb
jecxz
mov
in
jno
push
dec
xchg
pop
into
sbb
sbb
pop
lods
lods
mov
idiv
movsb
mov
pop
cld
xchg
mov
addr16
sub
orl
sub
jno
mov
mov
adc
ss
pop
xchg
jecxz
push
sahf
push
in
mov
test
xchg
cmp
mov
arpl
sub
int3
roll
fisttps
aas
aaa
mov
out
loop
jne
mov
scas
fistpll
sub
xchg
in
out
aad
sub
pop
fldt
popa
in
mov
fistl
stos
mov
fidivl
rorl
lcall
lcall
out
dec
sbb
fwait
adc
sub
adc
shll
enter
sub
or
pusha
data16
int
push
mov
mov
dec
xchg
sub
ret
or
sub
dec
sub
lods
mov
xor
data16
incb
rep
mov
fld
faddl
push
jg
inc
idivb
or
into
pop
pop
clc
jns
mov
dec
or
push
stos
or
je
mov
sub
xchg
mov
ds
jb
fnstcw
or
jl
fsubrs
or
mov
imul
addl
test
jl
stos
vpaddusb
orl
push
fs
das
ds
push
je
xchg
lds
addr16
pop
pusha
int3
arpl
cmp
les
dec
test
aad
lcall
inc
xlat
hlt
fstpt
testl
jo
and
lcall
and
jp
pop
sub
hlt
dec
add
rolb
rcll
mov
shrl
insb
das
test
sarl
add
mov
push
scas
mov
jge
out
ds
xor
mov
nop
mov
int3
cltd
sub
lods
popa
or
jbe
stos
xor
push
xchg
xor
ret
and
push
sbb
fdivs
out
dec
pop
test
hlt
flds
imul
inc
push
shlb
rcrl
sbb
jle
push
mov
mov
add
in
mov
shl
ss
sbb
push
add
mov
outsl
push
adc
jl
pop
int3
lea
pop
jg
and
je
lock
in
aad
loop
mov
xor
cmp
leave
in
dec
jecxz
iret
inc
xchg
js
push
cli
sub
and
vpunpckhdq
movntq
hlt
fs
and
pusha
rol
imul
ja
xchg
test
scas
popf
mov
rorb
push
leave
scas
and
xchg
mov
fcmovnu
jno
clc
mov
inc
fildll
aam
mov
fs
sbb
das
mov
notb
scas
js
lcall
xchg
or
das
sbb
sbb
push
repz
or
inc
fucomip
sbb
jmp
mov
xchg
mov
dec
dec
jo
adc
stos
mov
stos
push
andb
test
movsl
arpl
mov
lds
adc
push
dec
and
call
in
mov
repz
inc
mov
mov
cmpb
or
cltd
and
in
imul
push
push
or
inc
pop
insl
xor
mov
ret
xlat
push
and
inc
xchg
xor
xchg
mov
xor
pop
das
stos
mov
dec
add
add
pushf
scas
xchg
daa
cmp
nop
jno
clc
movsl
add
sub
push
lods
xlat
inc
divps
cli
inc
pop
and
es
xchg
inc
aas
adc
adc
mov
and
cmp
ja
aad
jbe
jno
lods
stc
nop
fildll
out
les
push
and
sub
test
fidivl
cld
adc
clc
jo
cli
scas
in
loop
fildl
iret
movl
int
outsb
js
rcr
and
push
sti
sub
bound
movsb
loope
rolb
in
mov
mov
push
fcmovne
sub
sarl
xlat
outsb
repz
das
mov
mov
dec
add
and
adc
mov
mov
ret
xor
fwait
aaa
jg
out
das
cmp
mov
jle
or
popf
test
mov
fcoml
out
and
in
lret
dec
mulb
inc
xchg
pop
sbb
mov
push
sbb
jecxz
adc
rolb
cmp
jle
jno
test
ja
adc
add
jnp
push
call
mov
dec
lret
pushf
xor
mov
inc
push
in
fnstenv
push
push
ja
fildl
xchg
pusha
dec
and
sbbl
ja
out
xchg
push
pop
mov
xchg
fistpll
pop
ret
or
jnp
lcall
jns
pop
dec
adc
jecxz
or
ja
cmp
je
mov
es
lock
inc
push
mov
je
sbb
std
mov
movsb
stc
call
push
lock
push
imul
push
jo
je
cmp
and
fiaddl
out
stos
jmp
mov
into
les
loope
cmp
and
pop
std
cmp
cmp
out
jnp
dec
pop
test
adc
insl
subl
or
clc
insl
mov
push
xchg
mov
ret
xchg
loopne
mov
repz
scas
lahf
repnz
jb
adc
lock
pop
push
insb
pop
ret
mov
int
fwait
bound
mov
jmp
xchg
inc
rol
and
pop
popf
jne
mov
sbb
dec
add
sti
xchg
jg
lds
fucomi
outsl
das
jge
popa
cmp
pushf
imul
and
sar
or
sub
sbb
roll
fadd
outsl
loop
jbe
shll
in
loope
pop
push
pop
shrl
and
jp
stos
out
data16
rcrl
pop
fidivs
add
mov
jmp
ss
xor
nop
jl
inc
sbb
sub
xchg
pop
call
cmc
js
mov
addr16
mov
cmp
scas
jo
lods
inc
inc
jne
sti
jg
lret
cmp
sahf
adc
ja
cltd
das
lret
int
push
jl
push
sbb
hlt
cltd
test
push
or
cltd
add
out
rorb
jge
fadds
aam
test
mov
inc
sub
ficomps
pusha
xorb
or
add
push
and
xlat
fcomps
movsb
cmpsb
jns
cmc
pop
fbstp
imul
and
add
dec
cltd
mov
adc
ljmp
mov
rcl
pusha
jle
testl
dec
std
sahf
aad
mov
xchg
dec
fmulp
xchg
insb
jg
xor
xor
mov
inc
push
or
mov
in
xor
mov
std
popa
push
sbb
mov
in
push
aam
xchg
xchg
negb
popf
int
ss
push
or
mov
out
pop
sbb
adc
sbb
pop
insb
push
add
scas
mov
icebp
add
fistpl
test
imulb
movsb
push
push
mov
add
es
pop
cmp
movsl
hlt
repz
in
lret
sub
mov
lret
leave
and
add
fcmovu
fldt
mov
sub
xlat
push
lahf
pop
jecxz
adc
std
and
pop
cltd
std
enter
fdivs
or
adc
neg
clc
insl
in
mov
mov
push
push
push
pushf
ja
iret
lea
mov
push
jb
mov
les
adc
aam
or
popa
cld
fwait
movsb
insb
cmp
sahf
lods
lock
dec
cmc
scas
sbb
jo
sti
ds
ret
ds
xlat
imul
pop
cmc
insb
inc
jle
sti
lea
mov
lcall
aaa
mov
adcb
pushf
js
inc
pop
in
mov
sub
pusha
pop
dec
push
cmp
adc
fisttps
jg
mov
cwtl
jno
in
aad
mov
faddp
lds
stos
xlat
mov
pop
outsb
sbb
xchg
add
cmp
jg
arpl
ljmp
pushf
ds
sbb
push
jns
adc
xchg
adc
test
lods
sbb
xchg
adc
loope
dec
adc
push
jge
rclb
and
js
jp
jp
stos
cmp
stc
scas
cmpsl
mov
or
out
cli
out
pop
pop
loopne
lcall
mov
das
mov
pmuludq
xchg
mov
xor
mov
iret
mov
cmpb
and
jne
cmpsb
jecxz
mov
and
data16
push
jae
fs
mov
inc
lods
mov
fildll
lret
lret
jae
mov
cmp
sub
jge
inc
inc
cmp
clc
gs
scas
xchg
mov
or
mov
mov
adc
push
pushf
mov
mov
js
loopne
mov
pop
jo
push
pop
ds
dec
scas
sti
popa
mov
pop
mov
pushf
dec
ficoms
gs
mov
jge
and
dec
xchg
mov
in
iret
pop
scas
shll
das
adc
inc
repz
or
out
cmp
mov
jecxz
xor
mov
cmp
pusha
add
mov
inc
cmp
rolb
lods
adc
mov
push
xorl
scas
pop
cmpsb
pop
sub
pushf
dec
mov
mov
pop
pop
andb
std
sub
cmp
and
testb
jmp
xchg
addr16
sbb
push
push
cmpsl
int3
decb
xor
xchg
push
mov
sbb
push
ds
mov
xchg
pop
pop
enter
dec
sarl
push
jbe
and
mov
mov
add
stc
decb
push
jo
inc
fisttpll
test
cmp
sbb
lahf
rcll
mov
sub
xlat
cmp
imul
jmp
or
mov
popf
push
ljmp
cmp
xlat
lods
repz
and
sbb
add
orb
les
xor
fnstsw
xor
andb
xchg
test
xchg
call
leave
mov
pop
add
sub
shll
jo
in
add
lret
ds
mov
mov
and
shll
sbb
je
xchg
pop
ficoml
sub
leave
cmp
les
scas
ret
pop
cmp
push
mov
pop
mov
cmp
call
inc
add
pop
jbe
out
sbbl
test
aas
push
push
jae
lds
popf
and
lea
mov
push
subb
enter
mov
cmp
add
ds
jnp
xchg
imul
jae
mov
and
mov
scas
jbe
or
push
cltd
lahf
popf
mov
adc
push
repnz
iret
or
sbbb
jmp
insl
pop
adc
jp
mov
jp
mov
push
in
fsubr
nop
das
flds
addb
jns
adc
push
adc
pop
inc
jbe
pop
into
or
shr
gs
mov
sub
movsl
nop
lods
inc
insl
sub
fwait
pop
xrelease
lret
jne
mov
in
push
pop
jecxz
push
cli
movsb
mov
mov
in
jecxz
jecxz
dec
repz
sahf
inc
pop
lock
imul
inc
push
fstpt
xor
jb
pop
mov
data16
xchg
les
into
pushf
movsl
std
rorb
aaa
mov
je
mov
xchg
punpcklwd
test
imul
inc
scas
pop
lods
jb
scas
dec
cmc
addb
cmp
push
orl
lods
xor
fsubrp
inc
mov
cmp
repnz
scas
jl
sahf
jecxz
int
lods
dec
sbb
ret
ds
js
xchg
jne
in
fwait
outsb
hlt
je
repz
leave
sahf
adc
sbb
or
dec
mov
adc
xchg
dec
mov
aam
xchg
dec
pusha
enter
or
sub
stos
insb
out
mov
lods
out
fdivl
into
int3
ss
push
mov
inc
jle
scas
sub
lahf
enter
sbb
es
lahf
sub
pop
ss
push
leave
dec
loope
mov
inc
xor
icebp
dec
xchg
jae
and
lock
lods
add
addr16
inc
jp
shr
and
mov
sbb
decl
jle
xor
mov
out
cmc
pop
cmc
adc
faddl
push
mov
cmpsb
push
insl
cmp
or
inc
sub
lahf
pop
push
data16
pop
sub
das
sub
jb
lea
mov
xorb
xchg
mov
push
icebp
popf
int3
mov
arpl
adc
cmp
adc
inc
jnp
popf
in
cmpsb
ret
fwait
lds
and
mov
jle
and
lods
xor
jl
pop
aaa
fsubl
sub
decb
cmp
scas
movsb
sbbl
leave
aas
sbb
ss
shrl
sbb
pop
cmp
mov
xchg
jno
and
sbb
mov
adcb
push
mov
mov
loop
pop
xchg
mov
cli
gs
mov
push
outsl
fldenv
mov
hlt
shl
push
stos
push
adc
lds
xor
out
push
sbb
or
cmc
pop
add
inc
scas
inc
stc
mov
add
psllw
pop
data16
jle
ja
aad
push
mov
cli
adc
mov
xor
adc
aaa
pop
shl
xor
aas
mov
mov
jno
mov
xchg
jl
shll
out
mov
aam
xchg
and
aas
dec
adc
jge
stos
inc
pop
jbe
add
sub
idivb
cltd
push
scas
sahf
pop
paddb
pop
sbb
mov
inc
pop
lret
xchg
pop
adc
jb
pop
mov
cmp
movsb
testb
push
fwait
imul
adc
add
xor
dec
push
push
add
loop
cmp
kxorb
outsb
cmpl
outsl
mov
pop
lcall
jge
add
add
bswap
sub
lahf
push
push
js
enter
gs
insl
pop
movl
mov
enter
inc
xor
dec
push
addb
mov
shrb
sbb
and
xor
push
ljmp
nop
addl
cwtl
fistpll
pop
das
in
add
aaa
lret
sti
cwtl
fcompl
inc
jmp
push
lcall
jmp
imul
and
xor
data16
call
popa
and
xor
test
fnstcw
mov
adc
mov
ret
lcall
in
std
or
call
mov
sub
push
jbe
fnstenv
jge
jecxz
popl
mov
popf
fadds
xor
andl
or
sub
scas
or
loope
lret
es
pop
aad
stos
fidivl
das
and
jno
pop
addr16
jno
sahf
pop
or
mov
out
aas
imul
jecxz
mov
mov
sbb
add
sbb
or
scas
mov
repnz
jns
and
inc
pushf
sbb
ja
xchg
int3
sbb
cmp
addr16
sti
dec
ret
stos
jle
fistps
xchg
in
cmp
push
mov
add
nop
push
mov
ficomps
cmc
das
and
mov
mov
mov
inc
mov
mov
insb
push
out
push
jno
cmp
or
lcall
shrb
roll
idivb
cs
pusha
mov
cltd
push
or
mov
pop
sub
jmp
push
pop
lcall
push
and
add
inc
movsl
cwtl
and
xchg
test
mov
ss
js
lea
xchg
cs
inc
fisubs
mov
int3
arpl
lea
jg
pop
vmovq
loope
call
mov
lods
sarb
dec
jg
mov
inc
popa
sbb
push
gs
sub
xchg
jp
jnp
sbb
add
stos
jbe
pop
out
xor
jl
data16
jns
push
nop
fs
add
sub
mov
subb
insb
mov
imul
lock
out
push
jmp
aaa
lea
icebp
jge
inc
mov
in
push
lock
adc
mov
insb
adc
je
gs
iret
dec
push
mov
jae
pop
sbb
lds
into
xchg
or
mov
jp
mov
lahf
clc
mov
iret
inc
xchg
aam
push
push
xor
movsl
inc
outsl
jns
and
sbb
cmpsl
js
repnz
arpl
adc
sbb
xchg
hlt
adc
notb
js
mov
fmuls
sbb
movsb
repz
dec
add
shll
mov
insb
shlb
add
fidivs
jg
lods
sub
or
jne
or
fwait
mul
or
dec
out
cld
xchg
popf
out
fs
sbb
leave
adc
adcb
lds
je
test
mov
inc
shlb
pop
and
sti
shr
sub
popa
jo
jns
dec
stos
ljmp
pop
daa
sahf
and
rorb
ss
cmp
cmp
testl
bound
iret
pop
sub
jnp
jb
test
in
out
not
ja
shrl
push
xor
fsubl
add
test
lret
sti
addb
iret
mov
mov
fsubrp
mov
push
xlat
pop
adc
cmp
jno
outsb
cwtl
lds
pop
lods
mov
aam
jle
fdivp
out
gs
mov
xchg
pop
xchg
icebp
xchg
scas
cmp
push
ja
cmc
xor
mov
jo
insb
push
pop
jl
repnz
hlt
jge
mov
jbe
jp
addr16
sub
pushf
xor
or
dec
pusha
in
push
pop
lods
mov
adc
pop
push
xor
adc
or
in
dec
or
das
sub
push
imul
test
loope
mov
andb
jo
inc
enter
sub
mov
sub
sub
loope
mov
aaa
into
arpl
push
cld
je
mov
or
jo
mov
in
inc
cs
xchg
aaa
adcb
sbb
jo
cld
or
mov
cmp
out
adc
xor
mov
sti
mov
adc
repnz
jg
mulb
push
jg
add
ljmp
test
mov
push
subb
jl
adc
adcl
sub
and
fsts
mov
mov
pop
repnz
add
push
ja
or
xchg
xor
lods
pop
mov
add
or
rorl
inc
scas
mov
and
jecxz
mov
rcl
adcb
data16
arpl
xchg
fisttpl
sbb
jg
outsl
push
jl
fsubs
push
mov
jecxz
or
cld
lods
push
jl
dec
fisttpl
xchg
lods
pop
movsb
or
and
sub
push
cmp
push
mov
lcall
push
add
jne
pop
xchg
jmp
int
add
jge
cs
pop
scas
sbb
ja
stos
jbe
adc
mov
jne
mov
sub
pop
pusha
or
jge
mov
shl
mov
inc
and
mov
xlat
cmc
jae
insl
icebp
inc
test
ret
add
loopne
inc
enter
in
int3
push
xchg
adc
adcl
test
aad
mov
pop
push
mov
in
dec
cld
in
stos
aam
mov
arpl
jge
lds
sahf
shrl
mov
push
or
loopne
xor
dec
mov
jmp
sub
mov
cmp
add
rol
data16
xchg
push
push
scas
in
cmp
arpl
adc
or
fistpl
xor
pusha
push
mov
movsb
mov
pop
movsb
inc
push
mov
dec
push
loop
jae
ja
or
rol
in
sbb
adc
daa
lret
dec
inc
inc
lods
push
xor
shr
and
pop
pop
push
cmp
mov
mov
dec
bound
push
cld
adc
in
mov
mov
push
and
fsubr
push
push
add
bound
jecxz
mov
out
inc
xchg
out
mov
inc
cmpsb
push
jmp
push
mov
dec
iret
inc
or
lret
aam
nop
mov
mov
add
stos
sub
cld
and
lods
lret
out
inc
ljmp
mov
in
xchg
adc
fcmovnbe
repnz
fnsave
push
in
pop
lds
xchg
bound
lcall
mov
lret
je
inc
fisubrl
inc
popa
inc
hlt
popa
clc
imul
jecxz
xchg
das
test
jne
inc
in
clc
stos
jne
sbb
inc
push
insl
cld
mov
sub
jmp
or
int
add
jbe
lahf
loopne
mov
loopne
sub
xor
call
and
andb
lret
or
jbe
adc
push
cs
mov
in
test
adc
push
rcrl
lods
dec
xchg
cld
imul
fstps
sbb
jb
scas
aam
out
jb
cld
jbe
mov
mov
fldz
popf
fnsave
loopne
lcall
xor
dec
loop
inc
pop
lock
mov
ja
in
mov
shll
and
les
stos
mov
repz
ret
sbb
lock
and
aad
add
and
and
and
test
inc
ljmp
push
jge
dec
scas
and
jecxz
aaa
cmp
je
es
adc
psubw
mov
mov
or
add
push
xor
lea
out
inc
push
out
popf
jp
mov
lock
mov
ret
or
jecxz
add
dec
fucomp
shl
jp
and
add
mov
push
cmpsl
in
push
push
out
popf
xor
outsl
outsb
test
int3
mov
pop
lret
mov
mov
push
out
adc
xchg
push
aad
movsl
vmovdqa
aad
out
mov
out
add
xor
or
push
pop
test
mov
ds
add
and
dec
xor
cltd
notl
loope
inc
mov
pop
mov
mov
into
sbbl
mov
pop
mov
inc
jmp
into
push
xor
mov
jge
jl
and
shl
jae
mov
push
push
mov
cld
adc
lahf
rorb
push
adc
mov
push
jnp
sub
outsl
aaa
sub
push
insb
imul
outsl
roll
sti
mov
push
out
pop
cmp
shll
outsb
cmpsl
inc
cwtl
lret
push
adc
cltd
lds
gs
jp
mov
mov
adc
stos
rcrb
out
cltd
outsl
xchg
and
add
loopne
into
stc
and
xor
xor
and
pop
enter
xor
lods
mov
adc
jmp
frstor
pop
jne
iret
pop
jp
shll
in
enter
xor
sbb
cmpsl
push
lcall
mov
cmp
mov
lahf
push
mov
loope
add
test
lret
jae
or
push
popf
mov
rol
mov
fcomp
shrb
sub
add
aam
sbb
push
xchg
sub
cmp
mov
xor
cmpb
push
movsb
xor
adc
push
jmp
push
xor
mov
jle
test
push
sbb
lea
fdivrl
push
test
cmp
sbb
inc
or
dec
push
mov
fidivrs
and
sbb
insb
pop
lods
mov
fimull
fldenv
fistpl
cmp
repnz
out
mov
cmp
mov
sbb
or
jne
sahf
and
jne
stos
cwtl
loopne
daa
lahf
xor
andl
and
cld
leave
loopne
imul
jle
xchg
xchg
fnstenv
mov
es
ljmp
aaa
loope
pop
popf
xchg
pushl
cs
mov
setge
fistpll
dec
and
and
aas
add
xchg
repnz
fwait
nop
push
mov
xchg
mov
or
ss
fidivrs
pop
mov
fwait
hlt
inc
xchg
inc
subl
mov
aas
or
fwait
jge
int3
call
pop
xorb
cmp
arpl
lret
inc
pusha
push
or
sbb
shrl
sub
jmp
push
mov
xor
mov
call
mov
sti
gs
std
xchg
out
mov
push
and
dec
pop
dec
outsb
adcb
inc
sti
push
mov
fxch
pop
sbb
mov
xchg
fnstsw
cmp
sub
adc
lahf
mov
hlt
cli
cmc
jb
aam
jl
push
mov
push
popf
icebp
add
sub
push
ds
sub
sbb
mov
repnz
or
sbb
xchg
out
sub
add
inc
xchg
pop
out
fcmove
cmp
sbb
or
or
pop
xchg
cld
nop
push
cs
mov
mov
mov
jo
std
inc
lret
inc
cld
outsl
insl
inc
sub
sti
mov
movups
jns
push
adc
test
aas
fldcw
cmpsb
scas
aas
andb
dec
sub
int3
mov
pop
pop
add
sbb
push
out
in
hlt
xchg
jl
ja
repz
sbb
insl
jmp
inc
sahf
sbb
jle
int3
in
and
out
inc
ficompl
adc
jl
ljmp
out
xchg
movsb
xchg
lret
add
mov
sbb
clc
cmp
sbb
icebp
dec
adc
int
arpl
aam
rolb
aas
mov
push
dec
mov
fdivl
mov
outsb
ret
mov
idivb
repnz
gs
mov
mov
aam
std
pop
aad
sarl
int3
idivl
iret
imul
mov
js
inc
pop
mov
movsb
pop
outsb
in
fists
mov
jns
std
mov
mov
xor
repz
cs
rcr
xchg
jo
repnz
fistps
fisttps
cmpsb
fnsave
lods
pusha
std
cmp
xor
jnp
mov
cltd
dec
shlb
and
xor
mov
sbb
pop
test
xor
pop
mov
rorb
lods
stos
jbe
dec
cmp
cvttps2pi
cmpsl
and
jo
scas
loope
cmp
aad
enter
or
stos
mov
inc
xchg
mov
sbb
gs
mov
xchg
test
scas
fnstcw
addb
fsubl
imul
aas
sbb
int
pop
mov
adc
movsb
and
xor
jg
sub
xchg
push
dec
jecxz
mov
push
inc
push
adcl
inc
mov
cmp
in
out
push
popf
popa
jmp
popf
fisttpl
stos
jge
add
fcomip
or
lcall
insl
rcrb
imul
into
arpl
or
jg
subl
or
lret
sbb
test
add
push
add
lea
insl
add
inc
std
filds
arpl
xor
mov
in
xor
loop,pn
mov
jecxz
jle
movsb
jecxz
jnp
lods
jg
jno
cwtl
imul
enter
lods
jmp
iret
mov
add
dec
mull
popa
and
popf
lods
int3
add
movsb
push
pop
jp
push
push
adc
sbb
mull
xchg
movsl
push
ljmp
jno
xchg
xchg
into
mov
cltd
test
inc
in
clc
jecxz
xor
add
sbb
pop
jmp
ljmp
pop
and
xchg
pusha
cmp
mov
jae
dec
fmuls
pusha
movsl
scas
sbb
push
int
stos
jmp
cld
xor
jo
aaa
push
mov
sbb
scas
mov
hlt
pop
mov
arpl
adc
push
call
mov
repnz
rclb
in
jnp
pop
sub
imul
inc
add
jae
mov
aas
inc
mov
ss
xchg
data16
and
cmpb
subb
jne
cmpb
cmp
mov
dec
test
rcrl
sbb
mov
push
pop
mov
stos
add
dec
stc
mov
in
push
pop
ret
mov
fimuls
mov
lahf
repz
mov
adc
push
gs
fwait
dec
fnstenv
or
je
pop
daa
push
or
mov
mov
jmp
loopne
dec
sar
clc
pop
mov
in
sbb
push
and
sub
push
ss
ja
add
cwtl
sub
cli
xchg
xlat
in
add
testl
add
decb
popl
adc
mov
mov
xchg
pop
loopne
jecxz
dec
mov
mov
and
add
jns
shll
mov
movsl
jg
into
push
in
orl
sub
cmpsb
in
pop
and
pop
stc
cld
outsl
push
sbb
jg
bound
movl
dec
and
xchg
inc
pop
mov
std
lret
push
mov
inc
xor
cmpb
shrb
cmp
sbb
jge
jge
jge
inc
ss
lock
sbb
les
ret
pop
in
in
pop
dec
adc
sarl
sub
xor
testl
jmp
iret
add
pop
rcrl
popf
inc
xor
arpl
adc
popa
jne
stos
push
in
push
xlat
adc
mov
outsb
lds
repnz
fcmove
lea
sbb
jbe
mov
mov
unpcklps
sbb
mov
bound
pusha
jl
cld
cmp
clc
inc
push
fisubrl
inc
scas
push
int
leave
dec
leave
test
gs
shl
sub
lret
icebp
push
push
pusha
aaa
mov
pop
ret
lret
subl
mov
and
outsb
mov
push
cltd
pop
mov
fstl
out
xchg
sahf
pop
testb
mov
mov
lods
push
jne
xor
lock
test
test
sub
xchg
jle
lds
sbbb
roll
call
enter
mov
or
ret
shl
cmp
fwait
sub
mov
rcl
ror
mov
dec
xor
mov
mov
test
in
adc
cmp
scas
ret
lods
les
dec
mov
xor
inc
std
test
jno
push
repz
aad
cmp
jo
icebp
lea
std
idivl
mov
clc
cmp
sub
mov
imul
xorb
movsb
in
clc
pop
scas
mov
sarl
mov
adc
inc
mov
imul
cltd
cmpsl
out
in
cmp
add
aas
adc
xchg
mov
stos
xchg
or
pushf
fsub
dec
mov
mov
mov
sbb
in
or
sub
bound
xor
adc
mov
push
outsb
jmp
inc
push
add
xor
jmp
inc
aad
fnsave
xchg
lcall
add
mov
loopne
out
inc
sub
mov
cli
into
popf
mov
dec
cld
outsl
push
push
xor
test
orl
movsl
sbb
adc
cmpps
push
in
dec
dec
gs
outsl
je
mov
iret
jp
in
imul
js
std
pop
or
stc
xchg
xchg
ja
xor
call
sbb
int
outsl
hlt
push
mov
inc
insl
jne
sub
insl
xchg
adc
add
pop
cmpsb
push
in
and
loope
or
lcall
test
mov
push
popf
sub
mov
ret
outsb
movsl
cmp
sbb
mov
outsl
mov
ret
cli
lret
clc
mov
xchg
popa
les
mov
mov
arpl
cli
test
jnp
scas
xlat
jmp
orl
jmp
aas
pop
out
cmp
enter
push
scas
push
dec
lcall
inc
lcall
sahf
xorb
jle
or
dec
repz
jmp
cmp
add
rcl
xchg
sub
push
lahf
fwait
mov
cmc
test
nop
jb
sbb
or
aad
aaa
push
in
pop
pop
test
mov
popf
cmpsl
scas
repnz
push
mov
push
hlt
imul
xchg
pop
or
or
jmp
jl
lret
and
or
loop
cmp
mov
add
cmp
inc
push
xor
popa
outsb
scas
xchg
negl
xchg
lret
ds
mov
jne
test
int3
jg
push
mov
push
and
divl
std
add
push
pop
or
popf
cmp
cltd
stos
aaa
fstpt
aas
in
sbb
test
dec
test
xchg
mov
lret
outsb
lahf
int3
mov
pop
add
mov
arpl
mov
fstl
xor
ficompl
stos
lods
inc
sbb
into
ss
mov
dec
in
push
mov
and
pop
jmp
xor
mull
movsb
jge
lods
sub
pusha
jle
jle
fnstsw
xchg
call
mov
cmpsl
pop
push
add
jns
push
jae
fisubs
into
fwait
shl
stc
adc
pop
sbb
not
fwait
cmp
xchg
shlb
sub
out
push
int3
mov
mov
push
and
jb
mov
inc
rolb
fisubs
ret
pop
idiv
nop
out
inc
pop
loop
sbb
lahf
push
ss
in
loope
mov
ret
inc
out
shll
pop
icebp
sahf
sub
and
clc
call
pop
mov
popf
cmpsl
jp
cmc
pop
test
sub
cmp
dec
orb
or
leave
dec
inc
jb
pop
cld
pusha
pusha
add
cmc
xor
cmpsl
arpl
outsl
mov
mov
inc
add
mov
addb
xchg
mov
loop
push
dec
inc
iret
mov
inc
rcrb
icebp
add
mov
cmp
mov
mov
inc
xchg
pop
mov
lea
outsl
push
ret
jnp
push
sahf
dec
pop
jg
aaa
xor
das
sub
sub
addr16
or
push
out
push
js
jg
mov
loop
sbb
xlat
add
push
repz
and
pop
jne
hlt
pop
das
inc
shll
sub
iret
sbbb
dec
addr16
lret
das
ds
fwait
add
add
das
loope
mov
push
push
pop
and
push
outsb
jmp
adc
mov
hlt
add
mov
mov
inc
bound
mov
inc
cmp
xor
cmp
pusha
add
dec
fisubrl
cltd
or
icebp
pop
mov
inc
inc
mov
push
push
cmp
sub
shl
or
bound
sbb
inc
in
jmp
or
pop
xor
fwait
sub
push
pop
das
movsl
sub
imulb
rcrl
arpl
sbb
jne
jge
fimull
adc
pop
adc
push
testb
scas
and
test
rcrl
call
out
call
fldenv
dec
stc
fst
stos
rorl
ret
sbb
inc
jbe
mov
and
sbb
adc
jne
das
mov
and
ss
ss
icebp
scas
push
mov
loop
pop
int3
dec
test
das
addr16
cmp
pop
adc
pop
loop
out
inc
mov
push
push
lahf
aad
mov
adc
or
adc
in
push
cmp
mov
push
xchg
sub
loop
jbe
fists
mov
shll
adc
push
mov
shll
sub
repz
cmp
lods
iret
into
je
mov
hlt
dec
scas
jg
jle,pt
daa
add
out
sbb
mov
imull
sarb
or
mov
lahf
fnsave
or
sbb
lods
xchg
inc
adc
lret
push
push
push
ret
jmp
in
imul
adc
mov
ljmp
call
lds
sbb
insl
ds
lods
outsb
mov
sbb
xchg
test
pop
dec
lock
mov
xor
sbb
cmp
cld
nop
into
push
ret
mov
inc
jne
jnp
cmpsl
out
in
out
hlt
or
push
add
jns
out
push
jecxz
push
lahf
jns
loop
rorb
loope
pop
outsl
cmpsl
ret
jns
lcall
aam
sub
and
cmc
and
jne
jmp
sti
inc
jae
adcl
sbb
test
inc
or
jmp
dec
jecxz
js
dec
test
adc
subb
sbb
jmp
in
and
das
adc
insb
jle
lea
dec
dec
pop
adc
mov
add
mov
imul
inc
mov
lret
repz
je
icebp
cltd
and
add
leave
movsl
divl
pop
jb
dec
cmp
scas
daa
mov
sub
mulps
jo
shll
xchg
mov
and
mov
test
or
push
adc
mov
hlt
test
adc
and
sub
into
dec
dec
pop
sub
jnp
jle
push
jmp
add
xchg
mov
insb
xchg
jl
adc
enter
imulb
dec
sub
sbbl
xchg
in
mov
mov
stos
add
dec
dec
cmpsb
test
pop
mov
loope
cmp
pop
ljmp
push
inc
lret
mov
lret
adc
mov
out
call
test
addr16
dec
andb
jno
cmc
and
es
dec
shrb
sub
in
mov
xchg
mov
pop
sbb
mov
notl
adc
insl
xchg
test
jnp
pop
xchg
sbb
inc
lret
mov
gs
mov
pop
jecxz
addl
sbb
pusha
xchg
cwtl
ss
sbb
xchg
mov
cmp
imul
test
js
cli
jne
adc
out
dec
xor
insl
out
outsb
xor
sub
js
iret
pop
seto
sahf
adc
mov
xor
cmp
popa
clc
push
cmp
xchg
add
lds
ret
or
jecxz
and
ret
xchg
mov
leave
test
pop
cmp
dec
shll
push
push
jg
sbbl
icebp
sbb
and
rcll
leave
xchg
sbb
mov
nop
sub
ret
mov
insb
popa
add
std
inc
xchg
add
cwtl
in
test
pop
mov
in
push
cmpsb
mov
mov
aaa
pusha
frstor
int3
push
gs
leave
out
add
movd
gs
lcall
and
mov
loope
fmuls
out
addl
dec
or
inc
mov
mov
popf
ljmp
jle
mov
push
push
testl
aam
repnz
enter
pop
lock
inc
ja
hlt
dec
bound
fcompl
fidivl
cltd
sahf
dec
sahf
fsubs
scas
shlb
inc
into
push
push
lcall
inc
out
lret
xchg
test
lahf
les
or
sub
jb
pushf
jmp
xor
and
jnp
mov
leave
aam
jge
mov
xchg
aaa
ss
out
push
sbb
das
sub
mov
inc
jno
jmp
data16
sub
cwtl
stos
sub
test
lock
hlt
adc
scas
gs
sbb
shlb
mov
loopne
mov
cmp
lds
add
inc
xchg
call
jle
jne
add
faddl
sti
push
push
in
insb
je
lret
xor
jbe
mov
les
pop
insl
test
mov
add
mov
push
imul
daa
hlt
dec
push
ss
jo
test
push
mov
aaa
into
outsb
pop
fwait
gs
enter
xor
lds
mov
jge
inc
cmp
jne
pop
out
cmp
sarl
xor
push
nop
mov
sarb
dec
xor
mov
inc
divl
bound
pop
dec
in
dec
lods
hlt
cmp
mov
sbb
inc
outsl
stos
icebp
shlb
fildll
es
ds
dec
pop
mov
rclb
push
pop
ja
mov
xchg
out
xchg
jns
test
push
div
pop
movb
jle
fs
jo
imul
or
fnsave
iret
mov
lahf
sbbl
mov
or
pop
popf
aaa
scas
cltd
or
pop
and
mov
push
mov
pop
xor
dec
cmp
mov
pop
dec
push
syscall
cmp
ss
xchg
dec
shlb
lods
push
mov
xlat
and
push
or
fiadds
jecxz
je
std
sbb
xor
push
xchg
outsl
subl
bound
and
dec
fistl
or
repz
sti
jae
inc
jmp
ficoms
in
rcl
mov
sbb
aam
mov
mov
push
movsl
out
aad
xchg
rcl
sbb
push
fsubr
xor
mov
cmp
add
inc
rcl
pusha
mov
dec
mov
cwtl
in
sub
repz
inc
mov
scas
cmp
fmull
scas
jg
pop
inc
popa
jg
jnp
mov
js
pop
stos
mov
loopne
cmc
mov
cli
jg
sbb
test
rol
lret
adc
in
push
outsl
ds
insb
mov
pop
insl
mov
cmp
nop
cwtl
xor
or
mov
imul
mov
lods
push
jo
fsubp
test
idivb
gs
lret
adc
fadds
pop
js
sbb
push
jne
cltd
mov
dec
push
sarl
sub
mov
stos
stos
js
iret
cmp
subb
in
mov
cmp
cwtl
lods
xchg
int
jecxz
cwtl
and
mov
mov
pop
jmp
mov
pop
inc
das
notl
popa
popa
sahf
sbb
fcmovnb
pop
or
scas
loop
scas
add
pop
mov
add
out
xor
in
inc
test
fisubs
or
xchg
xchg
pop
lcall
gs
inc
pop
xchg
or
les
xchg
dec
call
add
and
popf
or
sub
pop
lods
xchg
jge
in
int3
jo
xchg
add
add
fistpll
and
aas
enter
or
xchg
push
sub
in
out
mov
cmp
scas
popa
insl
sub
cli
test
js
xor
fdivrs
sub
jb
clc
and
sbb
mov
ret
repz
or
or
movsb
insl
fadds
lret
add
push
ss
scas
out
push
dec
xlat
ficomps
idivb
scas
test
enter
or
jb
incb
jmp
inc
popf
cwtl
stos
mov
adc
test
mov
sbb
jne
ljmp
jno
outsl
shl
mov
jne
pop
das
jns
pusha
jl
mov
dec
jecxz
push
popf
int3
add
ss
dec
jmp
test
imul
pusha
dec
inc
pop
adc
pop
rorl
cmp
loopne
pop
shrl
xor
jbe
xor
push
jecxz
pop
lock
pop
add
pop
arpl
cld
jl
xlat
cmp
push
mov
push
adc
imul
cmp
xchg
cmpsb
jnp
or
mov
add
xor
jnp
jmp
mov
popa
mov
and
rcrl
mov
fidivrl
cmp
xor
bound
jmp
inc
in
out
lret
bound
fnstcw
fsubl
shrb
mov
mov
pop
jno
cmp
inc
pop
rcll
movsb
adc
out
xchg
cmpsb
xchg
int
pop
jg
mov
sahf
mov
out
stos
xor
aas
sub
pop
lock
cmp
leave
mov
mov
lahf
bound
outsb
scas
push
pop
pop
mov
je
mov
cld
cmp
jecxz
stc
aaa
push
in
in
data16
out
mov
aas
cmp
out
cld
pop
ss
jl
xor
popf
push
jns
je
and
shrb
pusha
cmc
sub
pop
popf
mov
xchg
sub
jg
outsb
dec
loopne
xchg
push
outsb
cmc
or
xor
int3
loop
add
scas
xor
xchg
adc
outsb
add
inc
jecxz
das
mov
push
cld
xchg
andb
out
fcomps
lds
jnp
mov
stc
xor
sbb
rorb
cltd
das
into
repz
lods
out
mov
and
iret
and
cmp
lea
jecxz
in
pop
xor
xchg
insb
add
loop
imul
dec
mov
fisubs
sbb
ss
cmp
inc
mov
insl
cmp
xor
mov
push
mov
and
insb
cmp
pop
popf
push
mov
scas
ss
inc
fildl
ret
pop
dec
sbb
adc
loopne
fcomps
movsb
gs
je
into
xchg
aad
xor
jg
arpl
ss
test
xchg
icebp
stos
test
orl
pusha
jne
test
mov
sbb
lahf
ss
das
arpl
inc
cmc
inc
push
xlat
subb
or
ds
mov
pop
mov
sbb
pop
sub
hlt
sub
hlt
lds
notb
les
jmp
xchg
sub
xor
sub
mov
int
jecxz
mov
or
cmp
pop
sahf
mov
inc
aaa
xchg
sub
mov
mov
sti
inc
and
mov
dec
outsb
cmpl
enter
mov
push
xchg
xchg
and
mov
call
or
and
and
and
out
scas
pushf
jno
aas
mov
xchg
jge
dec
dec
fistpll
movsb
in
mov
stos
xchg
aad
cmp
jbe
movsl
mov
adc
test
xor
in
cmpl
mov
sbb
cmp
push
pop
push
adc
aaa
xchg
dec
ja
sub
dec
dec
loope
pop
aaa
pop
jnp
push
addr16
mov
sbb
pop
cmp
lcall
cmp
mov
ficompl
pop
cld
testb
cmp
mov
fdivp
cmp
int3
lret
aas
push
adc
data16
popf
xor
sub
fstpt
mov
repz
fidivrl
std
subb
mov
push
jnp
jbe
push
jmp
xor
cs
mov
sbb
adc
idivb
test
lret
push
jne
dec
cmpsl
jae
movsb
adc
insb
inc
cmp
call
stos
clc
pop
mov
xchg
fcoms
stos
inc
rorb
sbb
and
call
pop
mov
loopne
mov
mov
cwtl
pop
jae
and
add
out
mov
sub
or
test
sub
jge
dec
fmull
movsb
xor
mov
fdivs
and
clc
or
and
sub
cmc
and
mov
clc
jae
sub
pop
xor
lods
lcall
xor
push
xlat
sbb
outsl
xorl
enter
xor
ret
ror
lds
mov
cmpsb
cli
adc
idivl
jns
test
lret
inc
adc
stos
aad
mov
adc
jl
xor
cmpsb
sahf
mov
sub
add
cmp
dec
insb
jmp
scas
jmp
dec
sub
mov
clc
add
sub
jmp
xchg
sub
mov
add
pop
jno
and
ret
mov
sarb
mov
outsl
jae
mov
add
mov
sbb
mov
jmp
add
aam
arpl
lahf
push
inc
aas
jae
sub
daa
pop
in
std
jl
les
cs
orb
movsl
rcll
adc
ret
cmc
jbe
aad
inc
pusha
sbb
push
movsl
repnz
cmp
xchg
insl
mov
push
in
testb
insb
xchg
aad
jp
lret
sti
in
inc
leave
or
cs
int
push
jge
stos
xchg
and
dec
in
clc
adc
sub
push
ljmp
movsb
adc
push
fisttpl
fs
sahf
pop
or
movsb
dec
in
cmpsb
dec
inc
outsl
cmp
pusha
jne
imul
dec
fisubl
fcmovb
rorl
mov
sub
or
or
or
sub
or
ja
inc
insb
aam
dec
repnz
push
or
push
xchg
pop
fsts
mov
cld
mov
fld1
sub
stc
pop
cmpsb
aaa
jbe
cmc
xor
and
adc
pushf
stc
jae
sub
enter
lock
jecxz
dec
and
sub
gs
rcll
dec
ljmp
es
lea
movsb
leave
pop
rorl
popa
dec
hlt
in
sbb
inc
mov
cmp
lock
popa
ret
push
aaa
dec
inc
fistl
pop
adc
fdivrp
inc
testb
cs
out
leave
test
test
mov
and
or
mov
iret
xor
mov
and
mov
push
xor
xchg
roll
mov
xor
loopne
inc
ret
jae
inc
push
cmpsl
mov
mov
std
mov
nop
lock
sbbl
call
out
jo
orl
mov
lods
pop
fmulp
mov
jl
push
pop
icebp
cmpsl
cmpb
enter
xorl
movsb
aam
adc
ret
popf
mov
stos
add
aam
mov
les
lret
xchg
mov
dec
fbstp
fs
jb
je
iret
xchg
into
arpl
or
repz
out
add
push
int
mov
fwait
add
lret
sbb
sbb
sub
mov
fincstp
push
mov
scas
mov
jne
shll
push
js
loope
pusha
pop
lods
xor
hlt
js
mov
les
insb
pop
xor
dec
lahf
adc
in
cs
cmpb
pop
mov
aad
daa
dec
fimull
push
fsubs
icebp
dec
hlt
cmp
js
aas
cmpsl
jecxz
and
or
cs
push
ja
sbbl
mov
insl
stc
dec
sbb
out
adcb
and
cmp
adc
stos
pop
push
fs
gs
jbe
enter
mov
jb
sbb
mov
aaa
add
pop
test
jnp
jne
and
pusha
xchg
cwtl
lcall
xor
stc
cmp
jle
sub
fldcw
aas
lods
dec
repnz
pop
push
add
mov
sahf
mov
or
xchg
push
outsb
sub
or
dec
or
sub
push
or
xor
enter
test
inc
jg
push
je
xchg
xchg
mov
leave
xchg
sub
fdivs
mov
ljmp
outsl
mov
dec
insb
out
leave
pusha
cmpsl
pop
cmc
hlt
push
inc
je
jbe
jnp
cmpsb
add
xor
mov
jle
mov
and
mov
mov
cmpsl
sbb
jo
pop
mov
ret
mov
mov
enter
adc
push
pop
adc
enter
push
les
xchg
mov
pop
cmp
xchg
repz
inc
adc
lods
xor
out
std
lret
adc
inc
dec
aaa
negb
ds
ftst
or
sbb
aad
jmp
jge
mov
ret
std
push
addb
dec
sar
or
popf
stos
fsubrs
mov
inc
dec
repz
test
xchg
loope
mov
js
jecxz
mov
lcall
lcall
repz
cmp
adc
lret
gs
mov
ret
lcall
jne
add
jbe
movd
lock
mov
jb
dec
fstpt
stos
add
addr16
lock
mov
lret
sub
ret
push
call
cmp
jle
jns
jno
in
test
psubsb
xchg
inc
mov
sub
repnz
sahf
test
or
jb
add
inc
sbb
adc
sbb
push
call
push
test
mov
mov
jo
orb
or
jne
xchg
mov
dec
add
cmp
jb
sub
fldt
inc
dec
lcall
mov
fstps
sub
and
fldcw
cmp
ret
out
xchg
cmp
mov
sbb
stos
inc
idivl
lahf
dec
xchg
cmp
lds
xor
mov
fsubr
call
fs
mov
push
sbb
and
push
sub
popa
and
mov
inc
fsubs
cwtl
lods
aaa
pop
add
sti
mov
fildl
cld
lret
nop
sahf
xor
push
push
sbbl
mov
sub
jge
jle
ss
in
mov
sub
sbb
inc
jae
xor
insb
data16
xchg
sbb
icebp
adc
cmp
mov
cmp
rorb
cli
pop
jae
je
add
cmp
out
adc
lea
sub
scas
in
std
loopne
add
sbb
mov
and
lea
jge
stos
sub
mov
adc
sbb
enter
and
dec
out
test
cwtl
push
in
jmp
inc
mov
and
push
push
ds
js
pop
out
inc
in
or
mov
dec
call
insb
clc
inc
ds
add
out
decb
adc
adc
std
mov
orb
sti
pop
imul
adc
mov
and
jle
mov
jo
and
dec
aad
pop
sbb
lahf
loopne
xchg
xchg
push
jecxz
cmc
mov
aas
pop
mov
adc
adc
or
push
add
pushf
notb
into
push
lea
or
mov
push
cmp
ret
rcl
cli
dec
add
xchg
mov
xor
insl
add
pop
fistps
fidivrs
lods
ds
mov
ret
pop
push
int3
fadds
enter
sub
push
add
inc
xchg
push
je
mov
and
cwtl
dec
sahf
add
cmc
int
push
mov
xchg
jns
push
fldl
dec
lcall
cmp
es
scas
inc
mov
rep
pop
stos
clc
cmpsl
xchg
cmp
or
mov
pop
sub
outsb
hlt
addr16
imul
sbb
xor
int3
sarb
lret
inc
push
cs
ljmp
inc
lds
jecxz
psrlq
adc
test
into
sub
out
inc
sbb
cmp
mov
fwait
xor
in
popa
fdivl
sub
push
imul
cmc
xchg
test
filds
pop
dec
sub
xchg
pop
daa
imull
ret
repnz
mov
adc
stos
fsubrs
rclb
scas
xor
pop
outsb
or
adc
out
sub
les
andb
jl
lret
jg
adc
or
gs
js
mov
push
mov
shll
sarb
cwtl
in
mov
jg
ficompl
roll
push
aam
sub
xorb
sbb
inc
cs
dec
dec
xchg
jl
add
mov
popl
cmc
jp
dec
cmp
ja
std
ror
jbe
shll
jmp
and
jmp
adc
faddp
push
fidivrs
shrl
rorb
into
div
or
scas
sbb
bound
ljmp
push
sub
cltd
mov
fld1
sub
lea
xor
ss
fsubs
push
cltd
push
xor
push
inc
mov
je
xchg
jno
pop
or
rcrl
add
rclb
push
mov
lds
roll
outsb
sbbl
jmp
push
jecxz
test
adc
lea
iret
mov
adc
int
icebp
fisubrl
mov
pop
out
imul
cmp
pop
mov
decl
cltd
pop
loope
jb
jns
jns
jge
cmp
and
gs
shrb
mov
jmp
mov
test
inc
xchg
sub
int3
popf
stc
je
imul
dec
sub
iret
push
xchg
adc
int3
mov
call
add
xchg
imul
mov
lock
aam
inc
pop
cmpsb
negb
xor
stc
adc
lcall
pop
xchg
stc
bound
inc
pop
mov
lock
sub
inc
push
js
ret
ds
jecxz
push
aad
mov
sbb
mov
ret
inc
push
and
inc
mov
into
mov
outsb
sbb
outsb
test
imul
into
or
stos
sbb
inc
mov
mov
mov
and
dec
push
and
or
cmp
cs
insl
cmp
jae
jno
dec
sub
cwtl
xlat
out
xchg
sbb
pop
mov
ficoml
insb
notb
popf
cmpsl
sti
adc
subl
mov
lcall
and
jmp
ds
int3
je
jnp
pop
inc
push
dec
mov
hlt
out
xchg
mov
dec
and
cmp
sbb
incb
pop
ret
repz
push
mov
jmp
add
mov
inc
mov
cmp
xchg
or
fiaddl
aad
cwtl
pop
mov
cmc
repnz
test
jae
push
imul
loop
sti
hlt
bound
sbb
xor
loop
mov
pop
pop
dec
fcoms
ret
cmp
adc
mov
and
rolb
add
mov
pop
jno
fwait
cmp
adc
cld
inc
jecxz
xchg
adc
sahf
sbb
lds
data16
ljmp
lods
sub
mov
push
sti
and
fiaddl
inc
ss
shlb
insb
push
add
cmpsl
cld
ror
aad
mov
aam
insb
push
fiaddl
jo
loopne
push
inc
pop
push
mov
jg
cmp
jnp
andps
lret
push
cmp
jns
or
sarb
fidivl
or
sub
xchg
popa
add
jo
or
movsb
lods
out
std
sub
and
inc
shl
jb
iret
mov
fisttpl
lahf
int3
push
scas
xchg
fldl
lret
idiv
sbb
das
adc
ljmp
jne
cmp
push
mov
fisttpl
inc
in
xor
mov
mov
jae
lds
fidivrs
js
movsl
mov
inc
cs
sbb
pop
push
xchg
aaa
xchg
dec
aaa
cmpsb
cmp
movsl
cmpsl
fsubr
mov
mov
fistpll
call
lret
lods
push
add
ljmp
adc
pop
sub
in
cmp
std
xchg
divb
pop
outsb
pushf
sbb
push
push
clc
jnp
inc
lds
sbb
xchg
dec
or
int3
outsl
aas
aas
int3
fbld
jno
and
orb
jecxz
add
sub
lods
mov
nop
out
test
outsl
stos
call
in
adc
jge
jg
repnz
ret
sbb
and
cmp
insl
jge
inc
out
mov
mov
jecxz
int
mov
xor
jmp
sbb
xchg
jb
dec
sub
cmp
jo
pop
fsts
testl
kmovb
and
sbbb
mov
pushf
or
sti
push
in
push
ja
addr16
popa
ljmp
cwtl
outsl
ret
loope
mov
mov
cmpsl
out
xor
sub
adcl
jp
push
mov
mov
push
enter
xor
adc
mov
lret
xor
pop
push
gs
jae
mov
xor
rclb
mov
into
ss
loop
lock
jbe
mov
subl
cwtl
inc
cmc
mov
adc
sub
out
std
xchg
push
popa
cmpsb
mov
shr
outsb
lock
cltd
nop
movzwl
mov
and
shrl
push
sahf
and
and
movsl
xchg
out
xor
loop
mov
mov
mov
sbb
jnp
push
inc
scas
or
xchg
push
stos
outsb
fistpll
lret
lcall
cmp
movl
xchg
test
mov
sbb
into
push
adc
adc
push
sti
pop
cmpsl
icebp
xchg
rol
movsb
push
lods
sub
insb
jl
cwtl
stos
addl
push
out
cmp
pushf
rcr
jo
ja
inc
jno
cmp
outsb
lods
enter
sbb
mov
icebp
pop
xor
les
jns
mov
cmp
mov
lret
jl
stos
pop
test
sub
lret
adcb
push
outsb
mov
pop
in
cmpl
jne
int
into
das
mov
popa
aad
addr16
add
mov
xlat
push
fisttpl
imul
inc
shl
jbe
push
sub
inc
enter
fiadds
push
cmp
and
mov
fstl
lods
daa
das
fs
insl
rclb
jg
inc
sbbb
sbb
xchg
push
test
mov
pop
outsb
lods
lock
out
dec
leave
mov
repz
repz
notl
xchg
or
or
pop
add
add
xchg
aam
adc
mov
adc
out
mov
pop
fdivrl
stos
sub
jecxz
dec
inc
mov
mov
xchg
enter
jno
pushf
dec
arpl
gs
nop
or
pop
pop
cmc
add
daa
push
xchg
pop
test
int
dec
mov
fdivrp
adc
sub
pop
pop
js
xor
mov
cld
orb
and
or
negl
xchg
out
mov
sahf
push
push
mov
add
lock
inc
pop
aas
add
sbb
and
xchg
jle
ret
jns
jp
insb
add
ljmp
popf
push
push
data16
je
fwait
movsl
or
loop
sbb
xchg
cmp
jnp
mov
or
xchg
inc
pop
ret
inc
data16
and
cmp
push
dec
add
nop
and
or
iret
gs
pop
lds
pop
repnz
pop
cmp
cli
and
inc
test
int3
or
lahf
dec
aad
inc
aam
es
cmp
push
je
pop
sub
call
or
std
sub
arpl
fnstsw
sub
add
and
es
sbb
sbb
sarb
inc
pop
les
cmp
dec
fcmovnb
sub
bound
iret
jo
jae
inc
arpl
xor
dec
xor
xchg
cmpsb
push
sub
cmp
xchg
mov
leave
sahf
loop
aad
xchg
insb
std
cltd
pop
mov
je
lock
mov
sbb
cmp
pop
xchg
mov
jbe
sbb
xchg
cmp
inc
xor
in
xchg
xchg
popa
xor
or
jnp
ljmp
xor
aas
push
in
cmc
pop
sub
mov
and
out
stos
push
filds
leave
xor
shll
scas
vcvttps2dq
cltd
stos
loope
fisubrs
xchg
nop
mov
jb
lods
dec
fsts
ds
sbb
je
fucomip
sbb
push
cmp
fistpl
mov
frstor
inc
fstpt
pushf
arpl
pop
ret
push
mov
xchg
pop
and
stc
pushf
jo
mov
inc
sbb
out
xchg
fmull
loope
push
repnz
or
lock
inc
mov
pop
cmpps
mov
out
inc
pop
add
xor
arpl
or
rclb
mov
jne
jb
mov
or
add
adc
pop
and
xlat
push
clc
xchg
fisubl
repz
stc
nop
sbb
aad
arpl
rcrl
shl
imul
scas
inc
cli
call
push
push
inc
xchg
or
div
xchg
add
stos
add
enter
mov
add
pop
lods
and
pop
sub
and
lods
mov
fstl
inc
jne
data16
ljmp
scas
leave
sbb
mov
dec
jp
inc
lods
insl
adc
cmp
es
inc
call
or
cmp
dec
and
ja
sbb
imul
shl
mov
mov
out
test
adc
mov
hlt
xor
and
mov
pusha
mov
mov
add
std
movsl
cmp
jecxz
push
in
mov
out
push
loope
les
mov
rorb
mov
inc
sti
adc
repz
xchg
and
jecxz
sub
mov
fsubrl
sti
cmp
inc
push
dec
outsb
out
or
test
sbb
test
aas
add
sbb
and
adc
idivl
cmp
or
sbb
adc
lock
cmp
imul
cmpsb
divl
loopne
loopne
aas
adc
cmovb
in
lret
inc
and
imul
and
lahf
or
shll
pop
fistpll
fstl
mov
or
cmp
sbb
sahf
xor
push
jae
stc
cwtl
popf
dec
cmp
or
or
stc
test
mov
pop
mov
pushf
repz
outsb
add
xchg
fimuls
xchg
xor
cmpsb
adc
lret
shlb
icebp
in
addl
bound
xchg
das
leave
fildl
inc
repz
pushf
std
pop
adc
push
push
lods
jne
mov
dec
outsb
jp
cld
push
cltd
mov
push
bts
test
stc
mov
out
fldcw
add
shl
je
sti
ljmp
or
test
mov
in
jno
lret
inc
out
je
sahf
sub
jne
leave
jle
loop
cli
outsb
das
mov
lock
mov
in
sbb
test
cltd
mov
jmp
pushf
fldl
nop
mov
mov
popf
sbb
cltd
sub
jecxz
out
lcall
fldt
jo
maxps
push
testl
xchg
test
jmp
adc
mov
into
mov
sub
sahf
cmp
mov
out
sahf
fmull
test
push
std
ficompl
inc
cltd
mov
adc
xchg
rol
sbb
es
pop
and
mov
movsl
mov
enter
out
mov
cwtl
mov
inc
lds
loopne
xchg
xchg
xchg
fidivs
push
out
xchg
gs
xchg
adc
inc
lds
mov
ljmp
mov
repnz
mov
sbb
scas
push
mov
movsl
xor
dec
pop
sbb
ret
sbb
lds
mov
cmpsl
xchg
dec
jecxz
lock
stos
push
fsubrl
push
outsb
leave
int3
lret
loopne
cmpsl
daa
inc
fistpl
pop
cmc
pop
pop
mov
lods
and
out
push
int
xchg
xlat
sub
pop
clc
sbb
fimull
mov
mov
arpl
pop
ret
jp
shl
imul
xor
ret
mov
outsl
sub
clc
js
imul
pop
mov
add
ja
clc
nop
xor
scas
or
in
ret
mov
pop
and
push
push
ret
filds
cmpsl
sub
ss
scas
adc
scas
mov
outsb
mov
mov
iret
out
inc
mov
movsb
sub
int3
sbb
mov
cmp
shl
fidivrs
sub
sar
sub
push
pop
cmp
adc
lcall
aas
push
outsl
ret
mov
sar
sahf
jg
lock
jl
push
out
or
inc
test
mov
pop
popa
orl
or
pop
pop
sarb
sbb
adc
fs
roll
add
dec
mov
lret
fstpt
inc
adc
and
cwtl
stos
inc
sahf
xor
cmp
inc
js
push
adc
mov
ljmp
out
or
xchg
and
inc
cs
cltd
sbb
popf
xchg
push
mov
lahf
xor
jno
inc
sarl
ds
stc
stos
int
jmp
sbb
fwait
and
sti
jnp
push
dec
inc
pusha
dec
jb
sub
mov
push
ret
push
push
sub
pop
pop
mov
sub
adc
mov
movsb
xlat
mov
icebp
jnp
js
jg
cld
lcall
in
jg
mov
jns
cmp
icebp
pop
icebp
jae
stos
xchg
xchg
popa
fdivrl
push
cmpb
clc
sti
pop
adc
sbb
jbe
xchg
subb
pop
and
or
lahf
enter
das
ljmp
cmp
int
mov
adc
cld
xchg
mov
popa
sbb
xchg
add
mov
lahf
xor
repz
jmp
int3
lods
test
clc
insl
or
mov
js
insl
int
loope
lea
or
inc
lods
aaa
jbe
jbe
andl
sbb
js
mov
ljmp
xchg
dec
mov
in
adc
mov
dec
mov
jb
push
mov
pop
fsubr
cmp
mov
jo
pushf
push
lret
sbb
pop
sbbl
data16
cmp
sti
xchg
rol
push
call
or
mov
out
jnp
int
das
lods
fistl
data16
mov
xchg
std
enterw
addr16
sub
sub
push
nop
loopne
mov
loopne
cmp
dec
xchg
inc
clc
dec
test
in
icebp
mov
adc
xchg
lahf
push
fwait
cmpsl
clc
mov
call
inc
es
or
imulb
ljmp
cmp
test
jle
and
or
int3
arpl
sahf
and
addr16
xor
pop
mov
xor
xor
test
jb
or
mov
mov
loopne
addb
mov
out
cmpsb
pop
prefetch
fsubs
inc
lahf
ret
icebp
clc
xchg
in
or
loopne
dec
repnz
sbb
fs
pop
out
push
mov
add
daa
xor
add
lret
and
pop
adc
pusha
dec
sub
jo
ret
fs
popa
dec
xor
aas
ret
repz
xor
dec
pop
leave
inc
dec
pop
jle
fildll
out
roll
pop
js
pusha
pop
loope
in
mov
fildl
xchg
mov
enter
dec
pop
adc
mov
sbb
jp
xchg
add
sbbb
pop
fdivr
mov
pop
or
ds
mov
in
sbb
lock
push
movsl
out
ss
inc
ret
repz
mov
xchg
gs
rorl
into
add
cs
dec
out
and
loope
testl
mov
push
lcall
in
pushl
out
or
sub
dec
jecxz
jnp
into
popa
cmpsl
adc
mov
into
pop
lahf
decl
add
or
ret
mov
lods
push
sub
cld
xchg
leave
int3
in
arpl
xchg
sahf
adc
inc
imul
in
add
xor
push
jmp
pop
pop
repz
cli
in
mov
sbb
fdiv
dec
dec
cltd
mov
mov
or
pop
imul
movsb
inc
add
and
out
lahf
jmp
mov
cmp
xor
les
pop
mov
dec
pop
mov
sbb
mov
jp
push
int3
cld
xor
fs
xchg
sub
es
aad
mov
scas
dec
xor
xor
push
cmp
push
push
dec
repnz
out
mov
dec
pop
leave
jg
ficoms
and
xchg
movsb
mov
test
test
xchg
bound
sbb
jp
or
mov
push
sub
ret
std
jbe
outsl
adc
inc
lea
mov
movsl
test
xor
sbb
insl
enter
add
push
jb
pop
jno
mov
add
jle
xor
jne
and
adc
pop
addr16
das
jbe
mov
xchg
adc
std
or
fisubrl
xchg
mov
movsb
xor
movsb
or
sub
dec
fldcw
and
cli
aad
sub
clc
aaa
out
push
pop
jb
add
adc
loop
push
mov
clc
das
pushf
cltd
test
mov
mov
daa
repnz
pop
jmp
clc
ret
jmp
jmp
sahf
xchg
mov
xchg
push
mov
fdivrs
mulb
xchg
xor
js
aaa
xchg
data16
add
das
mov
hlt
rcrb
mov
scas
and
mov
fcoml
imul
push
pop
add
xchg
mov
xor
pushf
or
xor
inc
lret
jmp
and
jp
std
sbb
subl
loopne
adc
out
push
xchg
or
adc
lods
les
push
inc
popf
or
inc
sti
insl
or
pop
idivb
dec
xchg
and
jge
cwtl
mov
sub
sub
xor
iret
xchg
inc
cmc
sbb
out
push
das
dec
mov
lcall
push
mov
cmp
andb
movsb
out
fucomi
xor
outsb
cltd
inc
fwait
pushf
jno
jle
push
pusha
mov
gs
in
push
in
inc
mov
shr
bound
sbb
lahf
in
outsb
push
in
xchg
outsl
push
or
cmp
popf
and
push
jmp
pop
js
pop
stos
jg
ret
adc
fdivrl
mov
cwtl
cmp
jne
pop
inc
inc
mov
cmp
popw
push
out
mov
cmc
out
sbb
insl
outsb
adcl
iret
loop
and
dec
push
ss
xorl
inc
push
fnsave
push
pcmpeqd
lds
dec
enter
push
popf
mov
fidivrs
in
inc
xor
mov
hlt
push
mov
into
jl
divl
out
mov
shll
mov
and
mov
aas
das
inc
xchg
cmp
inc
ljmp
xor
in
push
pop
jmp
movsl
icebp
pop
test
or
xor
enter
jnp
in
add
mov
fxch
push
mov
incb
adc
repz
dec
out
add
jns
pop
cmp
adc
fnsave
sti
test
mov
and
adc
inc
dec
arpl
and
sub
test
lods
sahf
icebp
xchg
sbb
cmp
das
subl
xorb
mov
in
xchg
sbbl
jmp
scas
mov
sub
and
xchg
sub
add
gs
sub
add
dec
mov
inc
push
add
loopne
psubsw
loopne
mov
or
cs
mov
jp
inc
sub
aam
and
les
sbb
mov
cmpb
mov
xchg
imul
sahf
enter
sbb
popf
aas
xchg
imul
dec
mov
int
inc
frstor
mov
nop
stos
es
xchg
dec
xchg
sub
add
cld
sbb
movsl
dec
out
dec
sahf
xchg
aas
sub
mov
cmpsb
sti
rclb
js
repnz
lcall
push
fbld
push
jno
jl
bound
adc
and
jae
sbb
cli
mov
dec
ret
add
shlb
and
ja
in
or
pop
inc
ljmp
sbb
push
mov
mov
std
mov
dec
out
stos
inc
lods
mov
xchg
sbb
fnstenv
in
xchg
dec
adc
cmpsb
cmp
pop
movsb
ficoms
and
or
inc
adc
mov
jno
mov
insb
sti
push
sarb
sbb
mov
fisttpll
stc
int3
jo
add
lods
dec
adc
popf
stc
cwtl
push
ud2
mov
jns
bound
aas
jmp
jmp
cmp
push
and
lods
int
fucomip
into
fcoml
sbb
shl
les
pop
pop
and
or
testl
mov
and
and
pop
into
sub
sub
sub
lds
jnp
and
pop
outsb
push
adc
in
sub
xchg
adc
outsl
xor
push
test
adc
inc
ret
push
adc
cmpsl
add
xchg
or
push
repnz
adc
push
cmp
movsl
rcl
stos
mov
inc
mov
idivb
call
or
and
and
adc
jno
sti
sbb
cmp
testl
and
adc
aaa
adc
push
mov
movsl
leave
xchg
cli
mov
in
in
nop
cli
mov
fcoms
lds
sbb
xchg
lret
shl
insb
cwtl
adc
es
movsl
sub
shll
xor
cmp
mov
and
sbb
or
imul
stos
cmp
jecxz
aaa
adc
xor
sti
movsb
fs
xchg
pushf
jbe
mov
inc
xchg
and
jmp
mov
sub
movsl
repz
xchg
and
loopne
jmp
aas
pop
rep
xlat
data16
mov
push
lods
pop
xor
sbb
loope
bnd
mov
fdivrs
pushf
or
out
cmp
nop
cmp
xorb
pop
xchg
fcompl
lcall
add
jmp
sub
xor
mov
movsl
mov
scas
cs
repnz
ffreep
fisttps
add
xchg
js
and
hlt
adc
iret
sub
push
out
cmp
cmp
jl
movl
aaa
sub
pop
shl
cmp
pop
jmp
sub
jno
cli
jne
faddl
push
jl
aaa
int
inc
out
sbb
inc
mov
mov
insl
ss
mul
add
mov
push
jmp
pop
pop
bound
clc
sahf
sub
dec
adc
xchg
jo
dec
js
xlat
shrl
xor
pusha
scas
xchg
repnz
fisubl
fsubrs
pop
dec
and
xor
lcall
xor
aaa
dec
imul
mov
stos
dec
cmpsb
mov
addr16
test
rorb
out
bound
ret
outsl
movsb
daa
mov
jle
mov
xor
jge
mov
ret
xor
ds
push
cld
sbb
pause
jge
fsubs
dec
pop
data16
fnstsw
ret
data16
lret
jmp
and
sbb
aas
pop
mov
or
add
push
fwait
inc
cltd
jmp
aaa
and
inc
push
popa
sahf
pop
adcb
xchg
jo
rcl
clc
pop
adc
xor
inc
push
loop
push
and
jl
sub
dec
ffree
add
and
inc
fistps
push
mov
inc
and
dec
pop
hlt
mov
mov
lahf
push
pop
dec
and
jge
out
sbb
xchg
lret
and
jae
push
mov
sub
sbb
push
mov
xchg
xor
cmp
aam
ljmp
inc
pop
stc
pop
popf
stc
sbb
mov
sub
and
jno
or
and
aas
sub
fcomi
or
adc
pop
out
push
push
mov
shl
bnd
sbb
sbb
mov
lret
cmp
jl
inc
mov
scas
and
and
and
jae
mov
lds
inc
loopne
mov
in
fwait
cli
sub
mov
jmp
outsl
mov
movsl
aas
movswl
jecxz
inc
adc
mov
push
or
mov
inc
jmp
fnstenv
or
mov
outsb
test
cltd
test
sbb
jb
xor
inc
mov
pop
test
icebp
out
jno
ror
lcall
mov
inc
xchg
pop
shrb
rol
in
clc
imul
sti
daa
inc
and
jb
inc
in
adc
aaa
enter
adc
test
xchg
fimull
pop
sbb
push
fildll
imulb
rorl
mov
rcrl
lret
lods
cmc
inc
and
inc
callw
xchg
stc
or
int
xor
test
je
lret
mov
and
mov
xchg
aam
andl
adc
outsl
jns
push
xchg
push
psubq
dec
sub
mov
cwtl
pop
sub
xor
out
mov
cmp
xlat
mov
push
nop
pusha
jne
mov
and
sub
push
inc
ss
fmuls
leave
and
xchg
sti
fidivs
mov
fwait
push
mov
mov
scas
xchg
mov
xor
jle
jns
pop
ret
dec
in
in
enter
push
or
ret
ret
sbb
jp
mov
dec
mov
rorb
sub
mov
push
pop
es
popa
push
or
xchg
aaa
add
lock
lods
pop
arpl
inc
fdivrs
mov
call
and
push
fdivrl
cld
xchg
jbe
popf
inc
bound
mov
cltd
faddl
sub
push
fnsave
dec
inc
lcall
inc
clc
enter
in
mov
into
fcompl
in
pop
lods
jb
loopne
into
push
lahf
test
and
or
jg
std
dec
mov
mov
xor
xchg
jbe
adc
sti
cwtl
cmpsl
cwtl
lahf
dec
add
nop
mov
xchg
adc
ss
lock
in
mov
xchg
into
mov
dec
mov
je
xlat
xor
mov
xchg
jnp
orl
icebp
adc
loope
cld
push
out
or
xchg
sub
sbbl
sti
adc
dec
add
jmp
enter
pop
test
xlat
xchg
jne
ret
and
push
gs
push
mov
out
vmovapd
xor
in
push
movsb
fnstenv
mov
sti
xchg
shl
pushf
jo
dec
sub
pop
testl
xchg
sub
cs
aas
cs
es
mov
xor
and
pop
push
cltd
add
rcrb
movsb
ds
push
or
cmp
lods
stos
sti
jb
sbb
and
repnz
xchg
fwait
addr16
mov
push
aas
and
loop
loope
shlb
aaa
dec
cmp
cmp
imul
jno
repnz
push
call
bound
inc
lahf
push
mov
lods
aas
jle
sub
pop
mov
lahf
and
ljmp
jne
pop
addr16
pop
jecxz
pop
mov
test
lret
lock
adc
mov
sbb
in
dec
int
and
scas
sbb
cs
sub
movntps
dec
imul
push
inc
rcll
fldcw
cwtl
subl
xchg
in
push
lods
in
aaa
into
xchg
jle
pop
enter
jp
mov
lea
es
jno
es
mov
xor
mov
pop
xlat
mov
and
fistl
cs
sub
shlb
push
mov
sbb
dec
mov
fs
add
sub
js
mov
mov
loope
mov
cmc
push
sbb
sub
cmp
fistps
fs
aad
mov
sbb
outsb
mov
xchg
inc
sub
adc
mov
ret
out
cmp
popf
test
aad
cmp
dec
jmp
pop
int
in
repnz
fimull
jle
int3
xchg
in
push
xchg
add
test
push
pop
into
push
dec
pusha
cmc
clc
mov
incl
cmp
xchg
daa
loopne
dec
out
dec
xor
xchg
push
hlt
mov
mov
stos
mov
cmp
mov
loop
sbb
lahf
sahf
lahf
in
jbe
mov
jne
add
sbb
and
sarb
das
add
sbb
shll
bound
adc
dec
lret
fcoms
enter
imul
mov
pop
push
call
pop
cmc
mov
jl
pop
cmpsl
mov
sbb
pop
mov
mov
stos
out
scas
cs
xchg
lea
xor
xor
cmp
sub
stos
test
inc
jmp
call
xchg
insl
or
adc
addr16
cltd
in
mov
ret
mov
sarb
xor
jge
lods
je
inc
daa
sti
dec
je
lock
std
cld
ds
mov
addr16
jg
and
mov
push
in
adc
lods
pop
test
cmp
call
enter
mov
rolb
mov
lock
sub
in
stos
ljmp
cmp
ds
std
jge
insb
js
push
divl
rcrb
lcall
add
mov
pop
xor
or
push
xor
je
cli
dec
lods
icebp
xchg
out
das
dec
jmp
rcl
inc
sti
iret
jle
shlb
and
stos
enter
mov
xchg
mov
mul
jmp
and
gs
xchg
push
jecxz
jb
mov
out
jae
cmpsl
cmp
jmp
incl
pop
mov
je
mov
mov
ffree
test
call
add
push
int
fiaddl
push
xchg
lock
jg
sub
cld
or
jle
xchg
jno
repnz
hlt
addr16
pushf
push
repz
cli
xchg
push
sub
add
outsb
xor
insb
fists
insb
fstps
bsf
xor
pop
leave
rcr
scas
imul
popf
rcrb
cli
pop
popf
movsl
pop
iret
addb
out
in
add
imul
les
test
xchg
xchg
and
and
pop
in
subl
inc
cmp
or
dec
pop
outsl
adc
sahf
dec
fisttps
pop
test
insb
fstpl
push
pop
jge
xchg
rdpmc
mov
cmpsb
jmp
out
or
into
clc
sub
sub
iret
pop
stos
std
sbb
mov
push
mov
push
add
repnz
mov
iret
insb
or
mov
push
movsb
jp
xchg
scas
push
mov
fcoms
repnz
in
lock
sarb
inc
sbb
mov
ja
pop
fcomps
lcall
dec
aam
mov
outsb
mov
out
imul
mov
fs
mov
fnsave
mov
mov
ret
xor
in
aad
dec
xorb
je
or
ja
cmp
call
push
xor
mov
lds
sarb
inc
mov
dec
xor
pusha
push
xchg
mov
mov
mov
cs
pop
into
push
test
jno
pushf
loope
adc
movsl
inc
adc
shll
xchg
inc
lcall
in
or
fstpt
adc
mov
sbb
dec
inc
pop
addr16
scas
stos
cwtl
loope
aaa
adc
and
sbb
mov
fwait
mov
test
dec
push
rorl
mov
and
inc
lcall
mov
pop
test
bound
sub
inc
pop
and
js
repz
lea
inc
test
nop
outsb
xlat
aad
nop
sub
xor
mov
test
mov
dec
mov
or
rcrl
les
or
inc
movsl
xchg
stc
sub
movl
shrl
or
cmpsl
out
mov
mov
fwait
call
out
cmpl
mov
mov
push
xchg
cmp
movsl
push
in
jge
hlt
or
loopne
mov
insl
dec
dec
xlat
ja
mov
cli
push
add
inc
loopne
pop
dec
dec
iret
or
out
push
hlt
inc
push
push
jp
push
ljmp
ss
stos
adc
push
fcoml
mov
lock
dec
test
adc
or
out
aad
push
test
push
aad
aas
fcompl
cmpsb
cmp
cli
arpl
jbe
and
scas
adc
testb
jle
inc
pop
leave
fnsave
sub
cmp
cli
aam
jo
adc
pop
inc
mov
mov
lret
bound
inc
adc
cmp
ss
push
jg
lds
mov
out
or
shlb
imul
dec
jo
pop
sub
jns
ja
out
jae
sti
inc
insl
mov
test
icebp
mov
out
ret
mov
jb
inc
jae
jmp
sub
xorb
mov
mov
rcll
pop
shrl
out
push
or
test
mov
stos
and
out
popa
sbbb
pushf
test
cld
paddb
clc
mov
xor
std
lds
jle
std
call
inc
inc
mov
ror
cwtl
mov
fldcw
mov
jne
mov
js
pop
stos
clc
mov
cmp
add
sti
out
sbb
sbbl
cmp
movsl
loope
sti
imul
sub
mov
roll
ljmp
pop
aas
push
push
xor
rorb
loop
lods
lods
pop
mov
lret
pop
pushl
pop
push
jl
sbb
mov
addr16
popf
js
jmp
dec
loopne
push
je
or
sbb
loope
mov
inc
fisubrs
dec
sbb
scas
es
div
push
fistps
xor
out
sbb
rcll
sbb
movsb
das
aad
imul
dec
dec
pop
jle
insl
cmc
mov
jbe
insb
xchg
adc
jbe
loop
out
fsubr
mov
jae
inc
cmp
adc
xchg
scas
stc
cwtl
fdivp
inc
xor
pop
inc
add
fdivrl
leave
data16
je
cs
jno
popf
test
inc
and
call
sbbb
jp
imul
sbb
jns
mov
adc
dec
rcr
insb
in
shrw
leave
push
mov
mov
in
jle
mov
mov
add
inc
sti
fwait
inc
xchg
mov
mov
adc
mov
sub
mov
icebp
in
scas
out
imul
xchg
loop
dec
mov
push
xlat
mov
inc
testb
fiadds
mov
mov
and
cld
cwtl
std
pop
lret
ret
shr
fmuls
mov
repz
ljmp
xor
sbb
hlt
inc
test
rclb
lock
sbb
imul
loop
push
gs
test
cmp
and
es
pop
pop
sbb
mov
jnp
cmc
inc
push
mov
mov
fsubs
aad
xlat
and
outsl
jno
mov
adc
jg
ds
leave
xchg
jnp
enter
and
jae
jns
push
jnp
or
sahf
pushf
in
dec
stos
dec
cltd
push
jg
pop
pusha
mov
push
adc
sbb
sbb
jbe
add
sub
mov
inc
push
push
into
jae
std
mov
jns
mov
test
into
mov
stos
jg
dec
cmp
xor
xchg
xor
mov
clc
add
addr16
mov
cli
daa
inc
dec
jp
in
lods
jecxz
leave
loope
cli
mov
into
scas
ret
in
or
pusha
jmp
ret
lret
cmp
loopne
out
cli
inc
xchg
in
push
mov
sbb
push
or
rcrl
sub
das
es
cmp
sbb
pop
adc
pop
icebp
inc
sbb
sbb
fistpl
aam
mov
cmpsl
cwtl
pop
mov
cmc
cmpsl
test
cmc
sbb
xchg
add
jge
inc
lret
jnp
sub
sbb
pushf
pushw
mov
dec
pop
push
sbb
dec
ss
loopne
arpl
adcb
dec
or
pushf
lret
je
cmpsl
jp
xor
in
insl
sbb
mov
stc
fnsave
les
out
fdivrl
in
in
movsb
sbb
push
inc
xorb
shlb
lds
xor
imul
fisubrl
scas
jle
iret
push
dec
mov
ljmp
mov
or
push
cmp
xor
pop
push
aaa
jbe
mov
movsb
mov
adc
sub
pop
xchg
add
push
mov
mov
fwait
jl
xor
lock
add
int3
dec
in
lahf
inc
lcall
and
and
adcb
cli
aas
xor
jnp
xchg
sub
or
sub
into
ret
xchg
sub
int3
pop
fsubrp
out
pop
and
xchg
dec
out
cmp
into
mov
jb
and
addr16
push
iret
push
ficomps
addr16
xlat
or
push
pop
fstpl
jge
cmp
xor
cli
lfs
lods
and
bound
sti
leave
mov
xchg
stos
sub
jl
sub
lahf
lcall
sbb
adc
add
sub
rolb
js
into
sbb
add
out
xchg
loope
std
lods
mov
fmulp
aam
ss
out
enter
xchg
jmp
cwtl
cmc
sbbb
pop
enter
sbb
lcall
cmpsb
aad
lahf
mov
mov
adc
test
adc
inc
pop
xchg
sbb
dec
sub
aaa
insb
jecxz
ficoml
add
cmp
xor
xchg
movsl
pop
mov
and
mov
xchg
aaa
mov
inc
or
out
xor
rcll
sub
loop
icebp
mov
jbe
jge
pop
call
add
andb
dec
call
insb
outsl
mov
mov
ret
out
cmp
mov
aaa
leave
mov
scas
mov
fsts
int
notb
dec
out
bound
cld
sub
dec
pop
mov
in
xor
cmp
out
mov
inc
mov
mov
jp
pop
xchg
inc
rol
mov
sarb
repnz
les
cwtl
jle
push
out
add
mov
dec
mov
mov
rcrl
push
pop
inc
scas
xor
or
ret
inc
cld
js
fbstp
cltd
out
mov
pop
sti
push
ss
jo
dec
push
push
rorl
les
cmp
xchg
add
imul
sub
repnz
xchg
stos
xchg
or
cmp
pop
scas
leave
mov
xchg
stos
mov
aam
inc
shld
mov
jge
outsl
add
repz
push
pop
adc
jne
sbb
shrl
add
inc
andl
pop
mov
fisubrl
cmp
xor
faddl
ds
pusha
lcall
shr
scas
mov
xlat
shrb
ss
in
fsubs
loopne
push
fwait
enter
movsb
cli
imul
cmp
mov
sub
pop
xchg
mov
stos
aas
sti
repz
stos
sbb
dec
mov
testb
outsb
adc
mov
xchg
pop
dec
pop
and
in
xor
dec
jb
cltd
das
lcall
int3
pop
jl
adc
mov
hlt
decb
jge
call
leave
cmp
or
mov
push
cmp
cmp
addr16
and
sahf
outsl
lcall
jle
mov
aas
std
xchg
or
push
sub
rol
inc
fs
scas
rep
or
jmp
jns
mov
les
orl
sub
ja
pop
into
jae
shl
cmp
out
xchg
adc
cmpsl
popf
jbe
icebp
orl
stc
je
out
out
push
aad
les
add
stos
mov
or
cmp
in
test
xchg
or
pushf
cli
mov
cmpsb
stos
cmpl
mov
or
ljmp
mov
xchg
jno
jbe
adc
jl
sarl
mov
mov
into
push
aad
scas
pop
mov
fcmovne
fldl
jg
subb
pop
les
sub
push
data16
in
aam
mov
fcmove
pop
popa
clc
iret
cli
pop
js
pusha
cli
test
mov
cmp
and
xor
cmp
shlb
mov
imulb
imull
cltd
push
es
dec
xor
fwait
sub
pop
sarl
scas
fistps
outsb
xchg
or
add
in
std
test
je
leave
dec
xchg
inc
xlat
arpl
cmp
test
xchg
mov
sbb
add
jg
pop
and
rol
jb
xor
fcompl
ret
jle
inc
popa
cmp
hlt
ljmp
rcll
std
inc
ficoms
dec
std
enter
cmp
pushf
dec
adc
out
popa
iret
rcr
out
rcl
xchg
nop
cmp
cwtl
push
pop
mov
fisttps
popf
lahf
jb
test
xor
lock
nopl
pop
cmpsb
or
in
or
cmp
popa
mov
rorb
cltd
inc
cmp
or
movsb
iret
sbb
adc
or
dec
movsl
xor
arpl
out
jae
or
std
shll
movsb
movsb
insl
subl
jl
xchg
fwait
dec
or
pushf
jnp
xchg
les
subb
cltd
mov
xchg
and
out
xchg
loopne
xchg
or
imul
stos
sub
sbb
jae
loop
jg
cmpsl
out
push
inc
ljmp
mov
loopne
mov
jae
cmc
out
jge
inc
pop
jge
mov
push
inc
movb
sbb
jmp
sbb
dec
or
testb
mov
aas
daa
neg
dec
sub
mov
je
cs
test
clc
stos
rcrb
and
popa
sbb
loopne
mov
adc
add
jbe
adc
dec
bound
xchg
pop
inc
adc
adc
addr16
mov
push
mov
pop
dec
filds
push
shll
std
sbb
ror
xchg
and
inc
fucom
pop
adc
jne
sbbl
inc
cwtl
aam
xchg
mov
cmp
sub
int
push
jb
out
stc
jae
jge
pop
xchg
cmp
mov
repz
jp
icebp
adc
push
in
in
push
sub
push
je
nop
repnz
test
mov
aaa
arpl
js
sbb
mov
stos
out
rolb
data16
push
xchg
mov
test
jmp
dec
and
dec
pop
inc
das
push
add
dec
test
das
shll
dec
cmpsb
sbb
add
cmp
pop
adc
add
xor
mov
adc
sbb
jbe
es
stos
jnp
fsubrl
mov
lods
add
cmp
xor
test
sbb
stos
xchg
inc
mov
inc
and
fisttpll
sub
jg
sub
jle
mov
enter
adc
fmull
ja
mov
pop
adc
xchg
add
or
mov
sti
out
lret
jecxz
pop
cmc
sarb
rol
scas
xchg
sbb
pop
adc
fwait
lahf
add
cmpsl
mov
or
test
mov
or
pop
add
pop
lock
xorl
sahf
pop
into
and
dec
mov
push
pop
dec
inc
cmp
ljmp
push
mov
movsb
stc
adc
pop
sbb
adc
xchg
lahf
jp
dec
andb
adc
shll
xor
xchg
mov
das
bound
arpl
or
mov
fsubrs
cmc
xor
mov
jb
repz
test
dec
int3
mov
loopne
cmp
in
inc
in
ret
stos
push
dec
pushf
js
test
aaa
aam
push
dec
mov
or
mov
sti
shrl
outsb
rorb
push
adc
popa
pop
mov
addr16
push
mov
sub
addps
lods
mov
pusha
les
add
lret
js
call
push
push
xor
push
aaa
jmp
bound
cli
pushf
xchg
les
fsubrs
rorl
das
lock
cmp
cmp
aas
or
sub
sub
hlt
mov
dec
inc
or
in
int3
jg
iret
jge
cmp
xlat
es
fwait
jnp
mov
dec
sub
pop
and
push
sbb
sbb
and
adc
inc
enter
jb
cmp
testl
stos
cli
sbb
dec
sbb
xor
subl
add
add
in
insb
ret
pop
mov
dec
xlat
cmc
dec
nop
imul
pop
xlat
jp
cmp
pop
iret
ljmp
out
clc
sbb
fsubrs
sbb
mov
pop
out
xchg
dec
mov
js
push
pushf
jg
adc
popf
add
sbb
and
mov
jmp
jae
xor
loopne
fwait
stc
aam
xor
mov
push
jb
repnz
push
lcall
ja
xor
fidivrl
jg,pt
callw
sbb
aam
or
mov
mov
cltd
push
movsl
lret
pop
inc
jmp
lods
das
pop
inc
iret
lret
xor
shlb
inc
and
sbb
dec
cld
mov
mov
daa
cmc
insl
adc
popf
push
mov
add
sbbb
inc
orl
subl
pop
sub
jge
daa
das
sub
stos
dec
lcall
pop
insl
push
mov
jae
adc
gs
mov
imul
sbb
mov
aam
enter
sbb
int3
jle
mov
js
push
or
or
mov
sub
mov
sbb
or
imul
jge
outsb
adc
dec
add
mulb
cmp
adc
mov
pop
in
xor
dec
or
sub
shl
lods
sub
adc
fimull
int
mov
and
popa
pushf
stc
or
sub
aad
push
dec
cmp
sbb
mov
and
cmpsl
mov
jo
cmp
xor
mov
aaa
fisubl
clc
jne
loopne
xor
pushf
in
dec
push
inc
nop
outsb
jmp
call
daa
test
adc
lret
push
mov
xor
push
nop
arpl
insl
lret
daa
into
jne
add
xchg
mov
push
jmp
loope
pop
jbe
in
fwait
xchg
lods
and
pop
iret
stos
inc
xor
adcl
and
in
lods
ljmp
xchg
repz
fptan
movsb
mov
mov
inc
fdivr
hlt
nop
aaa
adc
and
test
add
mov
sub
ljmp
add
sbb
pop
adc
push
nop
negl
mov
jo
fiadds
xlat
outsl
lret
sahf
push
sarl
in
cmp
and
insl
sbb
push
shll
gs
mov
mov
cli
pusha
iret
add
pop
hlt
and
ficomps
sti
pop
jge
je
mov
mov
fwait
stos
les
and
inc
jae
push
inc
data16
fwait
mov
jbe
cmp
lock
add
ja
pusha
mov
fstps
push
jmp
movsb
pop
int3
flds
lock
adc
adc
inc
ja
xchg
out
imul
pusha
mov
xor
imul
inc
push
call
dec
pop
ljmp
mov
in
outsl
or
pop
lock
jmp
add
push
adc
add
mov
loop
push
add
sub
push
ret
or
mov
leave
test
fwait
imul
or
xlat
push
sub
xor
cmp
shl
pop
pushf
xor
pop
mov
xchg
push
fsubr
xor
enter
add
push
out
fimuls
dec
cmp
movsl
js
aam
xchg
lds
pop
mov
push
jge
inc
imul
fcmovnb
adc
ficompl
cmc
dec
dec
popa
lock
jl
mov
jne
sahf
ja
cld
sbb
xchg
loopne
daa
push
loop
in
nop
int
dec
aas
orl
xchg
and
mull
mov
push
or
cltd
inc
jmp
divb
sahf
add
repnz
lret
jo
sub
sub
sub
jecxz
inc
adc
push
test
test
xor
xor
jae
xor
test
iret
movsb
mov
in
push
mov
dec
lret
mov
jmp
and
std
leave
ret
push
adcl
inc
mov
jno
cmpsb
mov
ficompl
popf
xchg
mov
data16
dec
aaa
fcomp
adc
out
jmp
jle
imulb
cltd
sahf
outsb
loope
xor
lds
cli
xor
lock
aas
andl
mov
and
stos
push
popf
mov
mov
mov
cmp
into
insl
inc
clc
push
pop
adc
mov
add
and
std
push
insb
out
and
popa
dec
outsb
push
test
xchg
xchg
lea
repnz
ljmp
dec
rcrb
call
mov
jl
lahf
and
mov
add
xor
push
andl
es
sbb
dec
jge
sub
movsb
call
mov
movsb
repnz
test
insl
push
leave
dec
mov
push
inc
push
mov
incb
shll
xlat
andl
in
insl
ret
mov
stc
push
aam
in
ret
adc
in
fisttps
mov
xor
dec
out
push
stc
stos
mov
add
das
fidivs
inc
lds
push
jle
clc
push
dec
dec
mov
or
mov
arpl
mov
rorl
mov
and
sub
add
jl
out
scas
fstps
dec
mov
push
lahf
mov
dec
jb
fisubrl
xorb
mov
sbb
jle
push
fldl2e
cld
xchg
loopne
clc
and
xchg
lods
int3
push
adc
jnp
or
pop
add
test
xchg
movsb
jl
jnp
gs
call
sub
mov
test
loop
push
jne
les
jle
mov
dec
xor
scas
out
dec
xchg
dec
inc
mov
mov
mov
xor
ljmp
pop
subb
push
fwait
sbb
ret
push
cwtl
das
js
mov
dec
lods
into
mov
mov
pop
mov
lea
popa
inc
inc
cmc
pop
hlt
and
int
sbb
mov
inc
sbb
adc
daa
or
mov
push
xlat
add
mov
xchg
arpl
mov
negb
sub
xor
in
lods
xor
jl
dec
add
mov
jmp
enter
mov
xchg
sub
adc
nop
into
daa
or
xchg
xor
sbb
arpl
daa
lods
xor
pop
js
sub
adc
and
in
add
es
orb
mov
stos
jno
adc
adc
cmpsl
int
jp
xchg
mov
mov
insb
test
ret
fldl
test
psllw
punpckhdq
sbb
mov
dec
push
sbb
dec
cmp
sub
fs
jl
push
sahf
mov
iret
frstor
mov
xchg
cmp
pop
mov
add
sub
iret
pushf
jg
push
sbb
shll
jb
mov
fsubl
cmp
push
xor
std
or
pop
dec
repnz
stc
aad
sbb
and
push
stos
mov
lock
mov
inc
xor
enter
dec
jecxz
xor
sti
in
or
dec
push
or
jl
imul
pop
jnp
mov
imul
inc
gs
jle
mov
movnti
dec
es
into
enter
adc
rcll
ds
pop
mov
out
sbb
inc
loopne
mov
nop
pop
cmpl
push
adc
out
or
push
or
arpl
loope
test
xor
imul
push
jge
push
ret
mov
lods
loope
fdivl
out
xchg
out
imull
in
sub
rorb
xchg
cld
mov
and
pop
xor
push
pop
lret
shrb
fs
cmc
sbb
out
in
fdivrl
adcb
je
lods
xchg
mov
fstl
add
add
pop
mov
mov
mov
ds
mov
into
sub
mov
cmp
rcll
add
jns
ds
int
pop
add
testl
sbb
lahf
or
push
xchg
xor
fwait
mov
push
out
pop
cld
outsl
cmc
repnz
pop
insb
test
dec
sbb
push
test
jb
ds
in
xchg
inc
adc
rcrl
loope
cmc
mov
or
out
notb
arpl
ja
and
into
push
cmpsl
cli
cmc
comiss
shrl
sub
popa
cmpsl
jbe
xchg
pop
xchg
adc
and
mov
test
std
xchg
pop
mov
sbb
xlat
xchg
push
js
add
lcall
es
loop
sub
pop
mov
mov
rclb
pop
adc
mov
fstps
lods
xchg
pop
pop
in
nop
jge
arpl
sub
lods
test
pop
mov
xchg
jns
stos
mov
xlat
in
mov
xchg
xchg
mov
or
adc
push
and
ss
jg
push
icebp
pop
pop
xchg
lret
jmp
fstl
lds
mov
lods
in
xchg
gs
out
hlt
mov
pop
test
push
popl
jmp
shll
mov
jle
inc
out
mov
cmp
das
aas
dec
int3
sbbb
or
gs
or
xor
movsb
movb
leave
pusha
inc
data16
xchg
int3
call
mov
daa
sub
movsl
lcall
jb
xor
adc
sbb
jmp
ss
insb
cmpsl
inc
icebp
shll
lds
pusha
mov
sbb
jle
data16
mov
addr16
insl
add
out
cli
add
add
cld
push
test
fnstcw
jge
addb
repz
call
lret
add
aaa
mov
sbb
mov
cwtl
out
mov
rcrb
out
adc
xchg
inc
cmpsb
dec
in
mov
lahf
push
and
jne
pop
fisttpll
sbb
es
mov
or
jnp
cmp
xchg
popa
sbb
in
add
jg
mov
pop
adc
mov
sarl
add
add
xor
daa
loop
ja
arpl
test
mov
jg
mov
lahf
push
push
ss
dec
pop
adc
ds
lea
mov
dec
adc
cmpsb
push
sahf
fcmove
hlt
mov
push
pop
mov
in
or
xchg
sub
sbb
jp
les
pop
aaa
stos
add
stos
inc
xchg
es
fsubrl
dec
arpl
call
sahf
xchg
push
xlat
mov
inc
jg
jb
and
imul
or
and
js
and
in
pop
push
subb
out
dec
stc
imul
cwtl
xor
inc
jp
insb
mov
dec
fcom
mov
fsubrs
jmp
pushf
in
rol
filds
inc
and
xor
mov
aad
popf
jbe
jb
pop
sbb
pushf
mov
cmpsb
scas
pop
cltd
mov
mov
mov
add
es
push
data16
iret
repz
xchg
arpl
inc
gs
or
mov
stc
nop
mov
mov
cmpsb
jns
sbbl
outsb
inc
aaa
push
ja
xchg
inc
gs
test
jno
inc
popa
xchg
bound
loope
push
mov
mov
xchg
inc
fadd
aaa
js
je
fs
sbb
push
sub
nop
stc
push
mov
push
je
pop
in
mov
imul
imul
scas
in
fsub
sbb
shrl
xorb
pop
push
and
cmpsl
xchg
mov
rorb
push
cmp
cmp
rclb
ret
jecxz
pop
out
int3
mov
enter
add
push
aas
loope
xor
lahf
mulb
aas
xchg
sbb
adc
inc
fsubs
out
jns
mov
mov
lock
sub
jp
xor
imul
inc
and
push
lods
imul
ds
inc
test
popa
out
sbb
je
dec
cmp
mov
push
movzbl
mov
mov
les
clc
sbb
repnz
sbb
out
test
shl
js
inc
xchg
pop
adc
fsubs
mov
popf
nop
dec
movsb
pop
mov
js
arpl
mov
mov
lahf
test
je
insb
add
ret
cmc
or
lcall
pop
call
xor
sahf
xchg
sub
pop
mov
mov
cld
test
pop
jg
lcall
aad
sahf
les
subl
dec
lods
icebp
mov
sub
call
aaa
pop
adc
pop
sub
and
pop
pop
ds
in
dec
loop
dec
mull
sarl
jb
xchg
mov
ror
jl
push
and
push
les
push
std
cmp
rcl
popa
sub
pop
adc
mov
nop
dec
inc
dec
cli
rorb
aam
jns
xchg
inc
sub
lret
cltd
xor
mov
cmp
popl
test
jae
or
push
cmp
xchg
ficomps
mov
or
loopne
mov
cs
cmp
pop
sbb
test
xchg
jp
xchg
loopne
movsl
inc
insl
inc
push
jge
imul
decb
xor
clc
jae
inc
push
mov
fstp
adc
and
cmp
in
jns
cwtl
je
sub
pop
repz
into
push
add
inc
fnsave
add
dec
and
inc
fwait
xor
je
jge
idivb
push
loopne
jmp
sub
cmpsl
popl
mov
shlb
lods
fsubs
lret
dec
inc
sub
jmp
xor
or
xchg
mov
repz
scas
add
add
sub
mov
push
gs
pop
and
cmp
loopne
sub
fmuls
ficoms
ds
or
adc
pop
dec
cltd
in
fimuls
iret
sbb
adc
je
bound
xchg
jno
jo
cmp
push
pop
mov
stc
nop
in
adc
pop
push
pop
pop
or
adc
sub
add
push
add
js
je
movsb
rolb
loopne
adc
sbb
add
mov
or
or
mov
fidivrs
and
enter
push
dec
and
rcr
jo
insl
das
mov
rolb
jg
or
and
push
aad
mov
sub
inc
jb
nop
adc
cmc
stos
pop
loopne
mov
repnz
pop
orb
lcall
ds
push
sbb
ja
dec
inc
shlb
jg
xor
cmp
sub
mov
out
adc
les
inc
pop
in
out
mov
imul
cs
in
pop
inc
mov
cltd
jne
dec
out
pop
and
insl
inc
hlt
inc
stos
xchg
pop
jno
xlat
ljmp
ljmp
xor
or
xchg
fnsave
movsl
int
xchg
or
cmp
xchg
insl
cmp
sarb
cmp
subl
jbe
inc
push
mov
cli
sbb
pop
lods
jecxz
rcll
mov
pop
sbb
cmp
add
les
lret
shl
sti
into
loop
push
add
icebp
add
mov
test
add
or
mov
mov
aas
loop
pusha
and
jcxz
mov
inc
mov
test
arpl
lahf
int
adc
scas
sbb
lret
add
add
jg
mov
mov
imul
xchg
das
inc
jns
fcoms
dec
dec
int
mov
dec
bound
inc
adc
cli
cmp
inc
lcall
cmpsl
xchg
mov
inc
movsb
adc
pop
outsb
lea
repz
and
clc
mov
out
cmpsl
nop
jecxz
jae
pop
ficoml
xor
lds
xchg
lods
nop
push
ljmp
pop
popa
mov
inc
pop
cmc
push
ljmp
jno
jno
outsb
add
enter
aaa
jmp
leave
pusha
ja
xchg
mov
out
mov
je
pop
and
es
sbb
out
mov
in
inc
rclb
rcrl
mov
cmp
lcall
cmp
cld
lcall
je
xchg
jge
lea
mov
push
or
mov
dec
sbb
je
popa
fcomip
xchg
in
enter
xor
push
mov
or
mov
push
dec
mov
enter
pop
mov
inc
fstpt
push
and
shll
int3
mov
fcoms
test
dec
add
cmp
stos
inc
and
xchg
sbb
movsb
cmp
aam
or
test
inc
adc
cmp
out
cs
xchg
imul
mov
subb
xorl
call
mov
mov
imul
jge
xchg
in
jge
cmp
jp
out
jbe
stos
in
lock
or
nop
lahf
daa
sbb
daa
or
scas
ret
or
push
lods
and
xor
cmp
xchg
sub
in
in
divb
inc
icebp
add
mov
repnz
fldl
jo
cld
fnstsw
mov
arpl
cld
stos
imul
mov
repnz
movb
fdivrl
out
insb
push
fidivs
into
xor
fs
dec
sbb
cwtl
mov
and
xchg
sbb
dec
rolb
xchg
adc
test
mov
push
push
lods
cmp
int
bndstx
fstpl
xchg
fdivrs
lods
and
push
sub
add
push
out
lea
inc
enter
push
daa
mov
ficomps
push
jne
mov
stos
mov
dec
in
inc
bound
push
mov
mov
stos
mov
mov
inc
dec
inc
loope
or
ss
sub
adc
icebp
in
std
adc
pop
test
stos
cmp
mov
inc
mov
dec
xchg
xlat
jb
fmuls
add
stos
and
sbb
aas
lahf
pop
cmp
into
fcompl
rol
gs
jae
xchg
cmp
dec
and
pop
push
push
or
dec
pushf
mov
out
cld
mov
jmp
popf
sbb
xchg
ja
mov
add
xchg
mov
loope
loop
aam
daa
mov
ficoml
mov
mov
add
xchg
mov
out
insb
scas
inc
pusha
lds
dec
pop
call
jno
into
jnp
jns
pushf
pop
dec
mov
fnstcw
jmp
rclb
imul
ret
movsb
push
lods
mov
jp
xor
xchg
jg
lret
stc
mov
adc
ret
pusha
xor
xchg
dec
and
jmp
fcmovnu
inc
roll
sbb
in
fwait
sub
int
jnp
cld
lods
inc
pop
mov
xor
push
sbb
push
mov
lret
add
sub
in
xchg
xor
pop
out
or
cmp
or
pop
aaa
adc
in
cmp
mov
jno
pushf
lret
pop
sub
push
enter
inc
aad
gs
xchg
or
call
outsb
icebp
jns
leave
movsb
inc
rorl
inc
in
adc
int3
pop
loop
mov
add
inc
movsb
test
push
mov
int3
mov
lret
jmp
lock
sbb
clc
sbb
jge
or
outsb
jnp
arpl
sbb
jb
leave
insl
mov
and
movsb
ja
and
cmp
insb
jmp
mov
xor
adcl
scas
aam
pop
cs
jecxz
mov
rclb
cld
loope
push
pushf
sbb
inc
cld
es
pop
out
out
outsl
mov
mov
and
fs
adc
cmp
inc
fists
dec
sbb
jg
pop
or
dec
lock
out
sarb
cmpsb
lcall
shl
mov
push
hlt
ljmp
inc
call
aam
push
cltd
ret
daa
cltd
push
movsl
insb
das
mov
mov
mov
fstpt
scas
hlt
add
push
adc
es
out
movsl
icebp
fwait
insl
dec
lahf
les
xchg
movsb
pop
sub
pop
jl
xchg
jns
rclb
sbb
out
es
jbe
jno
mov
adcl
push
sbb
jnp
repz
cs
mov
ja
addb
add
and
maxps
mov
xor
mov
dec
and
enter
loopne
shll
inc
in
inc
in
xchg
cwtl
fs
aam
mov
jo
mov
imul
bound
daa
or
push
or
or
cwtl
cs
rorb
xor
popf
mov
xchg
sti
push
push
imul
mov
out
cmp
cmc
pop
jno
std
sbbb
xchg
das
sub
add
inc
add
mov
mov
pop
lret
jle
xor
movsb
mov
or
frstor
pop
sub
adc
subb
cmp
imul
cmpb
sub
xchg
fucomip
mov
jns
add
pop
jp
mov
xchg
jg
mov
aam
and
fcomi
lock
and
int
cli
jg
jle
insb
hlt
ds
lret
sysret
sahf
jbe
notl
jo
mov
sarl
xchg
das
sub
cmp
inc
fldcw
pop
mov
leave
les
and
sbb
mov
and
enter
jle
inc
dec
popa
jle
ret
pop
dec
mov
pop
cld
outsb
xor
call
notl
adc
mov
pop
enter
mov
fs
ds
jge
push
es
add
cltd
loope
and
jg
mov
cmp
pop
sub
ss
xchg
xchg
je
bound
lods
out
xchg
hlt
loopne
stos
scas
or
sti
dec
lcall
std
sub
repnz
cmpsl
cmp
fsubp
sbb
cmp
stos
mov
and
in
add
dec
lret
bound
icebp
jmp
stc
inc
insb
aad
sahf
push
push
je
int3
pop
or
roll
or
dec
mov
cli
or
cmpsb
sbb
lods
inc
push
ja
dec
loopne
test
adc
inc
and
and
pop
ja
adc
adc
int3
arpl
imulb
sbb
leave
dec
dec
js
stos
inc
push
out
dec
fisubs
into
outsb
clc
in
popf
imul
leave
cli
or
mov
jb
mov
in
pop
scas
cmp
cmp
jg
mov
loop
sarl
pop
lcall
cwtl
xor
cmp
fstpt
pop
and
imul
cmc
cmpsl
test
jg
lods
jle
mov
push
arpl
dec
jp
sahf
mov
test
cwtl
xor
cmp
mov
push
enter
ja
mov
scas
cwtl
aad
sbb
and
inc
out
lcall
ja
aam
adc
mov
and
arpl
xchg
push
xorb
clc
sti
push
movsl
xchg
push
mov
gs
and
fistl
pop
adc
mov
mov
fsubrl
mov
test
clc
jno
add
jae
ja
or
mov
jns
jae
popa
outsl
adc
cli
or
loope
cmp
fisttpl
std
test
ret
les
shll
out
push
pop
out
add
lods
lret
cld
int
aas
rcrl
push
lock
in
xor
test
stc
jmp
sub
mov
or
js
xlat
mov
mov
stos
lea
mov
into
mov
mov
stc
xchg
mov
aad
fildll
push
pop
lahf
rclb
out
dec
aaa
loop
outsb
fdivrs
fwait
subb
shlb
dec
popf
mov
leave
inc
fwait
inc
imul
enter
and
fists
fildl
push
mov
comiss
lret
sub
movsb
adc
lea
pop
xorl
inc
mov
xchg
jp
push
inc
loop
jg
nop
mov
in
std
jnp
pop
sbb
jno
mov
aaa
sub
and
ljmp
shll
mov
movsl
cld
call
mov
or
filds
sub
push
lods
test
mov
lds
loop
push
shrb
out
test
fwait
xor
pop
cmp
rorl
out
test
aas
rep
lods
push
aad
xchg
add
push
jecxz
sbb
xchg
mov
xchg
add
xchg
subl
aas
xchg
stos
pop
jae
lcall
sarb
inc
stos
das
sbb
cmp
add
dec
test
pop
lret
and
sbb
push
ss
jle
dec
inc
jnp
jl
sti
pusha
jmp
push
loope
stos
es
loope
mov
lock
loopne
popl
test
jnp
fimull
sbb
cmpsl
adc
in
movsb
jo
mov
hlt
int3
push
fnstsw
imul
pop
and
pop
and
dec
fnsave
mov
mov
pop
adc
fnstenv
test
pop
js
adc
negb
test
rcrl
pop
cmp
xchg
movl
lcall
xlat
imul
stos
test
lods
out
test
xchg
add
jb
fucom
test
pop
jp
lods
das
sub
pop
jle
addr16
and
jp
rdtsc
cmpsl
test
dec
cmp
and
sub
mov
jmp
sbb
pop
xor
mov
shlb
sahf
stos
outsb
addb
addr16
fcompl
sbb
out
add
and
jb
mov
mov
mov
lds
nop
addb
dec
js
fsubr
push
cs
mov
cwtl
xor
mov
jle
pop
call
push
clc
push
pop
in
mov
mov
in
hlt
cld
xchg
insl
sbb
dec
add
sub
mov
pusha
nop
mov
cmp
loope
ds
insl
stc
adc
push
jmp
das
aaa
test
dec
xor
lds
jnp
fnstenv
sbb
stos
mov
jnp
and
mov
nop
fldt
setle
add
rsqrtps
or
push
cmp
aad
or
pop
jle
movsl
xor
cmp
das
sarl
inc
stos
lahf
inc
mov
dec
jmp
inc
xchg
mov
int3
fisubs
cmpsl
sub
xchg
push
icebp
aad
gs
loopne
pop
lds
cmp
jo
cmc
cmp
inc
test
xchg
pop
dec
repz
out
ret
call
and
pop
call
push
pop
jo
test
addr16
adc
jg
or
cmpsb
mov
js
fcoms
jp
push
cmpsb
add
or
loop
and
pop
out
jge
je
cli
pop
std
leave
int
dec
pop
push
fdivrl
cmp
ss
sti
xor
and
out
xchg
dec
jnp
out
nop
dec
cwtl
push
pop
xor
mov
mov
ss
notb
or
push
in
les
mov
jno
testb
aad
stos
push
lcall
sbb
mov
stc
aad
test
cmc
mov
pop
mov
insl
mov
rorb
addr16
bound
clc
rcll
cmp
ret
iret
dec
lcall
in
fdivrs
xchg
cmp
outsb
add
xor
std
dec
mov
push
clc
ja
xor
add
sahf
gs
lret
cmpb
cmp
pop
mov
daa
sarb
pop
cld
movsl
aaa
mov
push
clc
jae
dec
loopne
ret
repnz
iret
nop
jnp
popa
cmpsl
ss
inc
inc
int
sarb
lds
xorb
jmp
mov
jecxz
dec
xchg
dec
sbbb
sbb
repnz
cltd
xchg
lcall
call
jae
out
test
cmp
ss
insl
in
shl
push
mov
in
add
xor
in
test
lock
sub
dec
mov
popf
mov
xor
mov
repnz
sub
adc
sub
mov
xor
shr
test
test
pop
sub
dec
fildll
xchg
dec
pop
int
sbb
out
mov
sbb
bound
scas
mov
dec
mov
push
lret
mov
inc
mov
addr16
sbb
clc
pop
loopne
scas
push
fbld
adc
sub
mov
and
jne
or
mov
insb
scas
mov
loop
xor
or
into
gs
jnp
jne
test
push
movsl
mov
xchg
mov
pushf
in
xchg
add
mov
xchg
stc
and
sbbb
sbb
mov
stc
xchg
cwtl
pop
add
xchg
popf
sbbb
or
and
popf
lahf
xor
pusha
add
add
rclb
mov
jno
push
xchg
ret
rcll
fwait
push
sub
mov
ret
repz
dec
mov
xchg
and
jp
in
stc
dec
sti
jle,pt
call
mov
or
cmpsb
dec
mov
jnp
xchg
lcall
or
cmp
mov
sbb
je
xlat
jmp
inc
cltd
mov
lret
imul
push
xor
ret
jo
rol
mov
icebp
mov
pop
in
cmp
xchg
push
sbb
xchg
xchg
inc
cs
dec
pop
test
xor
xchg
push
mov
cmovae
pop
jne
test
je
pop
inc
les
inc
and
ja
dec
add
push
or
xchg
imul
mov
popf
or
xor
shrl
push
loop
mov
fidivl
inc
xchg
pop
mov
push
or
arpl
call
sbb
jo
lods
pop
sbbl
dec
iret
dec
hlt
lret
lahf
idivl
testb
insl
adc
jp
aaa
stos
jb
inc
idivl
sbb
test
js
fcoms
shl
ja
xchg
pop
cld
je
loope
rcll
loop
nop
jnp
mov
int3
cmpsl
ds
push
ljmp
lods
arpl
fcoms
adc
cmp
outsb
loope
fcomps
jp
cmp
and
push
ja
xor
and
lahf
lret
shll
lcall
dec
in
test
jno
out
or
inc
cmp
imul
jae
mov
mov
aas
out
test
lcall
inc
sub
pop
fs
sahf
xchg
mov
and
jns
jbe
cld
jns
jnp
pushf
xchg
mov
xlat
in
jmp
jecxz
lahf
cmp
in
rolb
icebp
xchg
test
cmp
mov
mov
test
repnz
shll
ret
out
mov
lret
rclb
lea
js
fnstcw
into
test
hlt
xchg
inc
bound
push
add
mov
push
jmp
mov
cmp
inc
arpl
mov
adc
mov
sbb
mulb
xchg
pop
mov
xor
repz
and
iret
std
xchg
adc
push
jns
int3
add
incl
out
je
xchg
gs
push
xchg
sub
inc
enter
call
jge
repz
push
jecxz
adc
inc
xchg
mov
mov
cmp
pop
nop
daa
xchg
ret
insb
fistpll
or
pop
leave
iret
jo
add
imul
sub
in
push
negb
stos
dec
mov
or
or
xlat
mov
xchg
and
lds
mov
orb
inc
xor
pop
cmpl
nop
std
xchg
sbb
cwtl
sbb
lret
mov
cli
pushf
aas
xchg
lahf
pop
dec
mov
cltd
mov
in
mov
dec
fiadds
add
fisttpl
cmp
mov
stos
pop
jbe
jnp
cltd
sub
popa
fsubrs
lret
or
inc
jge
sbbb
pop
jmp
jecxz
testb
cmp
push
stos
sub
dec
xor
cmp
or
jge
xor
cmpsb
mov
in
int3
add
or
shr
push
mov
les
pop
sti
shrl
xor
xor
jae
fildl
lcall
fidivrl
enter
pop
mov
loope
xchg
insl
sub
pop
jb
sbb
adc
jb
iret
in
jne
adc
loope
aam
sbb
add
and
xchg
xchg
rclb
lds
push
push
mov
sub
aas
pop
in
push
cs
push
hlt
adc
aad
pop
scas
mov
sub
lret
push
nop
gs
push
push
dec
out
sub
xchg
jno
dec
arpl
lcall
mov
test
mov
shlb
sbb
lds
imul
cli
or
hlt
jns
es
jns
andl
mov
addl
mov
lret
add
sbb
cmc
pop
or
jecxz
test
xchg
dec
add
mov
xor
push
movsb
aas
jge
hlt
jbe
fiadds
sub
jl
and
push
or
es
push
add
scas
movsb
stc
mov
sbb
cmp
aas
dec
dec
lods
pop
fwait
xor
out
pop
adc
divl
loop
ljmp
lock
movsl
das
lahf
mov
fcoml
jno
orl
idivb
adc
cmp
xor
jb
cmpsl
mov
int
mov
push
mov
sti
stos
add
mov
or
jecxz
nop
out
mov
ja
cli
cs
push
add
and
sub
fcomps
dec
mov
mov
xchg
popf
sub
jge
pop
dec
sbb
mov
pop
cmpsb
or
repnz
sub
insl
cmp
mov
clc
cmpsb
jge
dec
push
xchg
xor
nop
jne
add
dec
sub
mov
pop
outsb
add
pop
cmc
loop
push
mov
jp
mov
jnp
mov
jns
test
xlat
push
cmp
jg
pop
cmp
fs
push
mov
gs
pop
lahf
orl
sbb
ret
jecxz
stos
and
and
pop
jns
inc
stos
and
mov
out
pop
sti
push
xor
es
xchg
jge
push
test
fcompl
rorb
gs
data16
lcall
ss
xorb
cmp
int3
shlb
mov
cs
les
imul
or
clc
inc
mov
in
or
rcr
test
sahf
add
or
cmp
in
je
fnsave
repnz
fisubs
xchg
mov
cltd
xor
cwtl
adc
or
push
xor
and
sarb
cmpsl
cmp
xchg
adc
pop
inc
es
mov
jecxz
xchg
movsb
push
insl
mov
popa
insl
sti
or
sub
lock
movsb
dec
or
jg
push
mov
sti
shrb
sbbl
xchg
loopne
xchg
jbe
ja
and
pop
insl
xor
lock
repz
ret
and
ja
sbb
ret
mov
mov
aas
sub
cmc
fists
out
cmpsl
shrb
maskmovq
idivl
xor
xchg
cmp
mov
lahf
and
fcompl
int3
xchg
sub
mov
or
test
mov
push
ljmp
inc
dec
je
xchg
das
lods
push
loop
test
mov
adc
mov
fiadds
push
xor
add
int
leave
lods
mov
test
cmpsb
push
das
std
lods
sub
or
push
mov
adc
push
pop
mov
push
mov
and
bound
decl
outsl
imul
les
lret
sbb
add
jecxz
mov
insb
inc
adc
pmaddwd
popf
jo
nop
cli
cmpsb
loope
out
push
xchg
mov
and
mov
pop
cmpb
mov
fnsave
enter
adc
inc
icebp
sbb
inc
mov
xchg
add
in
inc
push
push
cmp
jle
pop
insl
mov
dec
and
insb
add
cmp
push
test
add
and
lea
or
sub
cmp
add
lock
test
imul
enter
test
scas
in
xchg
daa
mov
jno
or
xor
cltd
inc
andb
push
outsb
fstps
xchg
pop
dec
cmp
sub
lds
mov
data16
mov
jbe
push
xchg
or
rcl
xchg
in
les
sbb
or
icebp
push
push
fnsave
xchg
in
cld
xchg
xor
stos
mov
lahf
out
jae
ret
lret
mov
lcall
xor
bound
xchg
stos
pop
xlat
sub
xor
popf
out
sub
imul
inc
scas
jle
outsb
lock
lea
mov
iret
jle
aad
mov
cli
sub
ljmp
inc
into
push
daa
jo
aaa
scas
je
movntq
push
sub
mov
imul
jo
test
dec
lods
push
andb
sbb
testb
sub
lret
roll
test
punpckhdq
test
in
xchg
pop
or
adc
add
pop
inc
xchg
in
stos
in
cwtl
pop
sbb
and
xchg
mov
in
sbb
sti
aas
push
xchg
push
orl
dec
xor
mov
or
stos
mov
test
xor
add
sbb
pop
dec
std
xchg
addb
js
and
loope
stos
fisubl
mov
mov
mov
adc
repnz
pop
enter
dec
in
testb
push
adc
cs
jg
lahf
faddp
lods
fdiv
inc
mov
imul
imul
xor
or
imul
sub
sbb
xor
xchg
xor
adc
inc
stc
mov
std
or
pop
jo
jl
jecxz
pop
pop
test
cmp
fstps
aas
cmp
ss
xor
or
out
jg
pop
cmp
push
sbb
xchg
xor
inc
repz
jmp
push
jecxz
inc
jb
test
xchg
fsubl
scas
adc
xlat
add
aam
mov
test
dec
cld
xchg
jp
pop
cmp
pop
xor
or
aam
sbb
imul
or
mov
adc
push
frstor
xsha1
cmpsb
or
mov
fcmovnbe
jmp
jle
or
or
xor
repnz
and
xchg
fcomp
and
sub
jecxz
mov
popf
or
sub
cmp
sti
mov
and
xchg
scas
mov
xlat
inc
xchg
lods
xor
lret
bound
leave
ret
inc
dec
xor
inc
gs
dec
and
fimuls
jge
sbbl
and
or
jge
push
pop
and
lds
xchg
pop
lret
pop
jb
mov
jge
out
fcoms
daa
add
aaa
dec
fs
aam
inc
push
inc
cmc
fnstenv
sbb
shrb
push
dec
push
arpl
fistpl
scas
mov
std
int3
fidivrs
fs
adc
adc
mov
bound
mov
dec
sbb
and
and
xor
rol
sbb
clc
dec
cmp
jp
ss
loope
lret
fs
movsl
inc
xor
cld
into
aas
dec
notb
fistpl
inc
dec
xor
mov
jle
arpl
hlt
mov
daa
stos
ds
pop
jne
pop
push
jnp
fildl
jp
or
fnstsw
xchg
jg
fsts
dec
pop
jne
jbe
stc
cmp
sub
dec
les
cmc
in
setle
lret
jae
push
jo
mov
and
sti
xchg
xorb
push
xchg
xchg
xor
mov
popf
mov
movups
add
or
into
pop
jne
xchg
pop
les
popf
std
or
dec
and
repnz
inc
mov
fisubrl
enter
sbb
xor
xlat
int
sub
in
clc
mov
les
sbb
pusha
push
jl
rcll
int
ss
jl
adc
mov
inc
sub
jmp
pop
jge
out
xchg
inc
test
fwait
adc
je
lods
ljmp
popf
ja
inc
cltd
cmp
testb
out
cmpsl
push
adc
into
icebp
out
xor
nop
stos
cltd
loopne
push
xchg
mov
hlt
mov
popf
and
arpl
and
push
daa
mov
subl
mov
ja
lock
adc
push
cmp
sbb
sbb
jge
xor
xchg
push
in
inc
mov
ret
dec
push
rorb
je
or
jge
mov
scas
fcoml
push
stos
xchg
inc
mov
inc
mov
or
in
xor
push
mov
lret
mov
fucomip
shll
mov
mov
invd
es
cmpsb
push
jmp
mov
or
mov
xor
lds
repz
and
movb
add
lods
popa
lods
subl
mov
aaa
out
pop
hlt
mov
daa
jb
scas
jo
ja
push
cli
addr16
ret
cmp
aad
arpl
xor
adc
push
ret
hlt
and
xchg
pop
stc
fbstp
jge
jb
aaa
jl
cli
add
push
ss
adc
mov
jae
cmp
daa
xchg
or
lret
add
inc
inc
sbb
stos
sbbb
sahf
lcall
jno
xchg
arpl
push
xchg
imul
imul
mov
add
insl
cmpsl
ljmp
add
insl
cmpsl
shrb
int
repz
test
xor
pop
outsl
pushf
lea
mov
loopne
jmp
pop
ficompl
mov
xor
push
mov
and
ja
mov
icebp
movsl
and
std
in
dec
fists
sbb
and
sub
xchg
sahf
or
in
loop
fs
stos
orb
mov
mov
outsl
fidivrl
mov
or
popf
stc
subb
mov
sahf
xor
movsb
je
icebp
das
and
mov
pop
bound
adc
inc
addr16
jae
xor
inc
lds
jle
inc
lock
push
into
imul
insb
add
std
sub
in
popa
js
loop
jecxz
mov
xchg
push
jle
sub
and
sub
popa
or
lock
pop
out
and
mov
daa
mov
aam
shlb
in
sbb
push
xor
ja
add
push
popf
cmp
sub
inc
lret
std
mov
fldenv
mov
test
mov
lods
mov
mov
rcrb
xchg
nop
addr16
pop
out
popa
dec
dec
add
mov
push
nop
das
out
das
ret
ret
sub
cmc
mov
icebp
rcr
rclb
xchg
xchg
stc
jmp
mov
shll
inc
aad
sti
xchg
insb
xchg
jnp
ret
mov
xchg
xchg
movsb
rol
mov
cmpsb
and
movups
push
lods
mov
fnstenv
cld
xor
mov
testl
mov
popa
repz
xchg
les
sbb
sbb
bound
cld
lahf
addl
cld
clc
jae
jbe
adc
fndisi(8087
ja
sbb
xchg
mov
adcb
pop
scas
mov
adc
cmp
addr16
fmul
subl
sbbl
pop
jg
fbstp
and
pop
popf
fs
mov
std
pop
add
sti
push
xchg
imul
outsl
andb
insb
dec
fstpt
add
dec
sahf
jno
rolb
js
xchg
bound
lock
leave
jae
sub
push
sbb
mov
mov
sahf
sub
cwtl
das
sbb
or
or
scas
lods
cmp
inc
pop
and
or
test
fnsave
or
sahf
or
daa
lcall
xor
jge
add
mov
sbb
mov
adc
push
sbb
cmp
pop
inc
xor
jmp
dec
push
jnp
loope
xor
cmp
push
mov
and
out
cmc
aaa
mov
mov
xor
inc
fstps
insl
cmp
outsl
rol
in
movsb
out
push
ljmp
jbe
adc
movsb
inc
movsb
inc
pop
loop
movsb
mov
or
pop
dec
push
out
jb
loope
cmpl
sbb
ficompl
add
gs
bound
xor
and
fs
dec
and
pusha
mov
lods
and
std
cmpl
bound
call
or
sarl
xor
mov
cltd
or
loop
mov
daa
sub
bound
insb
xchg
stos
outsb
push
lea
sub
cmp
lahf
out
orb
xchg
subl
loope
adc
mov
lods
lret
xor
cmp
dec
shl
arpl
mov
ret
pop
or
loopne
jl
cmpsl
ret
inc
int
or
outsb
ret
call
mov
icebp
mov
adc
mov
rol
shrb
add
inc
add
ja
or
out
jb
cltd
leave
xor
cmp
loope
dec
daa
popf
lods
fs
push
popa
outsl
mov
popf
add
inc
inc
push
je
pop
hlt
loop
mov
xchg
mov
push
int
and
or
movsb
xchg
push
mov
fisubs
add
jne
movsb
and
inc
cwtl
jnp
or
fstpt
sbb
mov
rorl
and
lret
outsb
sbb
clc
inc
out
inc
iret
outsb
ss
push
inc
inc
push
mov
mov
inc
out
sub
add
stos
ljmp
scas
stos
cmc
cmp
or
out
dec
sbb
and
lcall
mov
push
and
sbb
call
cld
in
push
lods
lods
add
flds
je
cmp
xchg
push
dec
out
jo
push
cwtl
movsb
xchg
bound
shl
pushf
in
aas
mov
pop
loop
jg
mov
or
scas
push
mov
aam
ds
ljmp
stos
fldenv
mov
xchg
test
cmc
or
mov
das
cmc
stos
pop
icebp
lock
dec
in
push
js
or
aam
xor
rcrb
ret
fidivrs
pop
dec
and
mov
popa
jl
xchg
pop
lea
jge
jg
mov
loop
and
xor
test
mov
add
mov
push
out
xor
jecxz
mov
int
divb
into
jecxz
cmp
into
cmp
dec
lea
or
test
jp
ja
mov
push
jmp
movsb
out
xlat
fisubl
cmp
je
lock
push
mov
add
pusha
and
pop
ss
sub
xlat
pop
xchg
xor
addr16
inc
push
iret
push
or
sbb
mov
mov
lcall
in
add
add
xchg
clc
push
jne
cli
xchg
pop
les
insl
lahf
sti
sub
xor
mov
test
ljmp
inc
adc
inc
cmpsb
pop
fldt
fdivrl
nop
es
iret
test
testl
adc
pop
mov
adc
and
mov
xor
roll
lods
nop
insl
clc
push
dec
sbbl
sub
push
aam
scas
addr16
andb
inc
jmp
jbe
xorl
stc
xchg
cmp
push
out
mov
adc
or
sub
or
jp
pop
xchg
sub
sub
pop
repnz
inc
inc
sar
gs
rcrb
jl
stos
push
imul
movsl
or
sub
push
mov
mov
pop
jnp
xlat
int
movq
mov
push
mov
adc
bound
inc
xchg
adc
xchg
or
cmc
inc
mov
cmp
inc
lock
jbe
lds
sub
cwtd
stos
insl
loopne
xor
xchg
sub
dec
mov
dec
sbb
mov
lcall
test
mov
adc
loopne
imul
shl
nop
sbbl
imul
lods
sbb
xor
test
ss
pop
sti
jns
rcrl
ret
mov
pop
sahf
adc
sarl
sahf
in
sarb
xchg
lods
repnz
jo
lods
cmpsl
hlt
pop
aad
add
sub
rorl
mov
icebp
insl
jl
jp
inc
stos
and
psrld
jae
ja
adc
daa
lcall
adc
pop
cmpsb
or
push
cmp
fsubr
xacquire
pusha
or
push
call
jbe
ret
outsl
enter
mov
mov
pop
insl
loopne
sarl
stos
call
pop
movb
inc
xchg
xor
enter
jb
repz
lods
dec
sahf
lahf
push
xchg
aam
lret
add
in
pop
daa
push
sbb
addr16
or
cld
cmp
fldt
repz
mov
push
or
lods
mov
mov
inc
testl
bound
cmc
fwait
adc
sub
cmp
or
add
imul
int3
dec
arpl
imul
pop
sbb
jno
mov
push
sub
ret
inc
mul
cmp
and
insl
sub
cmp
pop
push
mov
jmp
in
push
lods
es
pop
cmp
cmp
mov
jne
jno
insl
push
xchg
push
jo
imul
or
jle
out
sbb
inc
cmpsb
add
mov
std
and
int3
into
mov
xchg
cwtl
out
xor
shll
sarl
jle
dec
mov
lahf
loopne
mov
repnz
icebp
or
loopne
mov
xor
ret
inc
es
pop
inc
mov
into
and
jle
fucomip
dec
lahf
push
lahf
repz
mov
mov
dec
pop
orb
xlat
fiaddl
enter
pop
mov
push
mov
mov
mov
jmp
jns
xchg
outsb
cltd
sti
lret
out
mov
sbb
call
out
arpl
testb
fnsave
shlb
jmp
xchg
aas
popf
push
stc
popa
mov
jbe
repz
sub
ja
push
in
inc
iret
fisubl
repnz
lock
jnp
idiv
xchg
div
shrb
leave
bound
sbb
lret
xchg
and
push
or
in
sbb
add
shll
jno
inc
mov
mov
shrb
jl
push
inc
lret
out
lcall
gs
outsb
xor
sbb
and
pop
dec
mov
push
std
inc
rclb
int
sbb
call
xorl
stos
jl
idivb
sub
repz
dec
cmpsb
ja
mov
ja
movsl
jmp
xlat
sbb
lret
dec
xor
jns
outsl
jo,pt
pop
out
dec
xchg
lds
hlt
in
loop
jp
xor
sub
fsts
js
push
shr
pusha
test
or
mov
add
sub
push
adc
rcrb
adc
mov
push
stos
in
or
fistpll
imul
mov
push
shrb
adc
xlat
lods
inc
cmc
dec
cmpsb
sub
scas
add
lds
or
pop
xchg
sbb
fcmovbe
imul
push
dec
sbb
je
cmpsl
adc
flds
fs
push
jg
or
and
and
mov
mov
pop
xchg
inc
push
mov
xor
insl
xor
cmpsb
aas
lret
into
pusha
xor
lock
ret
push
stc
xchg
inc
lods
aaa
or
in
jb
lret
mov
sahf
xchg
cmpsl
or
mov
ret
testl
imul
push
sti
inc
lods
ret
leave
pop
xor
sub
mov
out
adc
pop
or
into
cmp
imul
xor
mov
test
loopne
xor
mov
xchg
std
out
xchg
stc
fistl
xor
insb
dec
lahf
lods
sar
xor
imul
sbb
add
repnz
fs
mov
or
mov
scas
outsb
add
xor
dec
inc
dec
cld
out
sbbb
jl
test
bound
mov
fwait
dec
mov
sub
stos
xchg
iret
hlt
dec
or
jns
es
adc
add
xor
mov
mov
jl
xchg
push
xor
pushf
dec
lcall
add
arpl
scas
ljmp
inc
jmp
pop
out
icebp
xor
xlat
out
push
sub
jmp
jae
ds
mov
pop
dec
dec
xchg
aam
out
dec
mov
pop
in
imul
sbbl
or
sbbl
or
pop
call
push
cmp
fiadds
xchg
and
cs
and
sub
lods
sbb
ret
mov
test
test
dec
lods
push
adcb
xchg
mov
bound
fcoms
jae
mov
shrb
jne
std
xor
ficomps
xchg
imul
movsb
jo
inc
dec
loope
mov
lahf
add
out
adc
or
fsubrl
add
sbb
jb
cmp
mov
repnz
hlt
out
jae
stc
andl
loop
das
mov
xchg
xor
mov
jl
xor
ret
mov
pusha
bound
loope
test
lret
sti
out
das
dec
xchg
std
or
lods
addl
dec
outsb
add
push
rorl
adc
rcrl
jns
lock
sub
repnz
dec
xor
add
lea
push
popa
cmpsb
dec
mov
jmp
push
sub
push
xor
or
xchg
and
sahf
sub
scas
out
adc
fidivrl
mov
push
nop
testl
and
fs
lods
ss
outsb
loope
outsl
je
js
test
mov
jae
sbb
mov
out
testl
pop
inc
inc
lods
inc
jns
sub
jne
call
repnz
rep
dec
in
ret
dec
negb
mov
aam
add
mov
jle
mov
pop
xor
outsl
aad
or
in
jecxz
mov
fwait
mov
xlat
or
dec
popa
add
cli
pusha
retw
jle
shlb
clc
xchg
daa
stos
or
call
in
scas
sahf
andl
jle
ficomps
pop
cmp
dec
jne
mov
iret
ret
rorb
sub
cmpsl
test
bound
inc
add
cltd
testl
mov
orb
std
xchg
cmpsb
stc
insl
mov
mov
out
cmpsb
fmulp
data16
mov
cltd
and
loopne
es
adc
outsl
ss
icebp
or
push
fwait
and
dec
sub
or
jmp
add
fdivp
rorl
mov
dec
mov
pusha
aam
pop
adc
jae
sbb
in
fists
add
jbe
push
xor
xchg
or
mov
sbb
or
dec
fbld
and
mov
fsub
jle
mov
push
cmp
xchg
jno
test
sbb
or
dec
jne
sbb
shll
sub
leave
test
stos
aaa
adc
xchg
dec
lcall
mov
cwtl
decb
js
adcb
scas
mov
pusha
jo
enter
sbb
dec
lods
mov
sub
addr16
jp
je
sbb
loop
jo
sarb
lret
rclb
jl
xchg
leave
sahf
pusha
push
mov
or
and
rcl
aas
push
mov
icebp
ljmp
xlat
clc
popa
pop
adc
sarl
lret
out
sbb
ja
sqrtps
outsb
out
inc
mov
add
xor
shll
push
push
cmp
jae
xor
mov
inc
fstl
sbb
xor
rcrb
sub
inc
call
vpslld
movntq
loopne
mov
ds
mov
lock
imul
xchg
lds
xor
imul
lcall
fisubrl
stc
repnz
fcoms
mov
sbb
stos
cmpsl
fbstp
and
in
lea
bound
mov
inc
fdivl
add
mov
lods
pop
adc
inc
es
sti
pushf
scas
xor
bnd
or
divb
das
cs
and
imul
sti
push
adc
or
into
sbb
mov
jl
test
in
movsb
out
mov
imul
lods
rcrl
inc
insl
into
sbb
lahf
ret
push
test
shll
insb
popf
or
testb
mov
push
xor
lods
xchg
jbe
xchg
sbb
and
dec
fdivl
mov
les
jbe
pop
repnz
push
dec
push
pushf
in
xchg
cmp
es
mov
in
dec
insl
push
jnp
jecxz
dec
push
call
mov
mov
push
test
ljmp
xchg
negb
js
sbb
les
mov
adc
dec
outsb
cli
xchg
pop
out
rcl
jp
call
iret
pop
icebp
jne
add
out
add
pop
lea
sub
push
andb
data16
jle
push
bndstx
shl
clc
in
ror
cs
add
lods
mov
fisttps
mov
mov
mov
lret
and
psubsb
adc
dec
scas
push
divl
inc
shll
xchg
jmp
lods
inc
jne
add
xchg
mov
mov
push
jp
sbb
aaa
jns
gs
add
cmp
mov
xlat
test
or
cli
push
pop
pop
xchg
adc
sbb
fmull
add
mov
gs
repz
add
pop
in
add
mov
movsl
out
stos
les
sub
cltd
outsb
mov
bound
jns
or
lods
sub
aas
sub
sub
xor
loopne
jecxz
add
sub
pop
xor
enter
sub
pop
jecxz
jl
jns,pn
mov
jno
ja
iret
lcall
lea
sub
adc
and
cmpsl
xchg
xor
hlt
cmp
xchg
mov
mov
icebp
adc
aaa
sbb
adc
inc
xchg
pop
scas
enter
or
add
stos
fidivs
clc
adc
sub
arpl
sbb
icebp
mov
imull
push
cli
lea
xchg
cmc
sbb
orl
aas
sarl
fcoms
sub
sub
or
dec
jbe
insl
cmp
rcl
jmp
push
sub
pop
cwtl
ljmp
pop
inc
push
mov
push
stc
adc
inc
stos
jb
push
jno
sbbl
and
leave
add
orl
test
and
xorl
mov
xchg
jle
inc
inc
jl
sbb
rorb
xchg
pusha
movsb
pop
push
ljmp
jno
push
lret
xor
or
in
test
xchg
cmpsl
shlb
jge
imul
jbe
lcall
inc
and
leave
xchg
jae
fstpt
jb
xchg
mov
dec
pop
lret
lcall
in
stos
dec
push
xchg
cmp
cmp
mov
xor
fcom
jle
sub
cli
icebp
jo
call
int
repnz
jl
mov
std
imul
pop
push
shrl
test
subb
popf
mov
pop
nop
lahf
rcrb
sbb
mov
dec
mov
scas
sarl
jp
scas
clc
loope
cltd
add
rclb
sub
into
sbb
jge
outsl
daa
scas
sbb
lds
mov
mov
and
adc
mull
scas
adc
std
enter
out
filds
adc
jecxz
add
mov
mov
rclb
in
popf
mov
repnz
fidivrs
pop
mov
mov
mov
cmc
aam
inc
push
pop
mov
push
test
lret
rclb
adc
jg
scas
leave
lret
fs
sar
xchg
inc
and
adc
pushf
xchg
inc
je
jbe
sti
cmp
pop
xchg
sub
out
jno
cmp
xchg
test
jo
sbb
pushf
outsb
sbb
incl
xchg
push
repz
mov
movsl
in
sub
in
lret
cld
jo
mov
adc
push
repnz
and
loope
dec
shr
push
mov
inc
hlt
aaa
push
xor
and
xor
stos
inc
out
xchg
sub
dec
out
cmpsl
dec
add
sbb
push
stos
cmpsb
out
not
jge
mov
sbb
push
add
and
mov
pusha
cmc
adc
adc
std
in
sbb
cmpsb
push
data16
inc
lock
xchg
mov
push
cmp
dec
lahf
daa
or
cltd
ret
lods
xchg
push
lcall
add
mov
iret
pop
mov
adcl
adc
mov
push
sahf
rcll
xor
xchg
movsb
dec
shll
xchg
sub
ljmp
mov
imul
add
mov
cmp
or
roll
jns
insb
add
sarl
pop
pusha
outsl
mov
add
stos
mov
out
or
sbb
or
xchg
fldenv
test
shrb
loop
pop
icebp
jnp
mov
sub
push
xor
or
aas
mov
sub
out
jb
pop
sar
jl
or
stc
jo
mov
pop
lcall
mov
or
in
test
icebp
shrb
or
mov
fisubrs
sbb
lds
adc
inc
inc
inc
mov
fidivrl
dec
mov
lret
mov
sbb
std
dec
lock
test
daa
std
xchg
xchg
mov
add
push
mov
mov
adc
mov
das
addr16
adc
pop
inc
divl
adc
sbb
arpl
adc
pop
call
dec
out
mov
xchg
mov
subl
push
cld
xchg
andl
dec
sub
cmp
adc
sub
mov
cmp
xor
rcrb
stos
or
adc
pop
repz
cld
shlb
lahf
dec
xchg
aas
popf
jmp
test
lret
pushf
lods
ret
or
jno
gs
mov
aad
lahf
push
arpl
icebp
je
rol
insb
add
rorl
mov
fwait
jne
cltd
mov
pop
in
jg
sub
mov
test
xchg
mulb
mov
mov
les
push
ficompl
divl
push
jle
dec
and
mov
js
adc
and
xchg
push
jae
sub
fnsave
push
add
mov
xchg
fdivl
jo
scas
shrl
aam
jmp
mov
aam
adc
mov
dec
pop
mov
xlat
fwait
jne
inc
jp
adc
jb
ljmp
xchg
test
or
lcall
push
popf
sbb
pop
and
xchg
sbb
cmp
mov
loope
das
push
stos
dec
pop
lds
dec
idivl
loope
mov
outsl
jmp
mov
ja
mov
dec
push
scas
mov
scas
arpl
or
xor
fistps
mov
ss
negb
adc
in
pop
rorb
add
inc
xchg
jns
rolb
roll
iret
push
inc
ss
mov
xchg
pop
mov
push
pop
xchg
adc
inc
icebp
push
sbb
or
cmp
push
inc
dec
pop
mov
sub
daa
pop
pop
xchg
cmp
aaa
outsb
out
scas
aam
push
adc
addl
repnz
and
dec
jbe
or
or
pop
cmp
mov
sahf
xor
xorb
rcll
clc
mov
jae
xchg
push
ret
sub
insb
adc
sahf
add
mov
pushf
repz
stc
adc
in
nop
jae
andl
imul
xchg
loopne
dec
sbb
test
and
mov
and
mov
pop
dec
pop
jbe
jge
iret
loope
outsl
push
sub
paddw
cmc
jle
cmp
pushf
jg
fdivrp
lcall
in
ret
leave
sub
addr16
push
xchg
mov
jg
and
pusha
mov
sub
or
hlt
cmpsl
lret
insb
jg
call
sub
notb
lods
mov
jbe
push
push
int3
adc
mov
cltd
popa
ljmp
int3
mov
lcall
jne
pop
cmc
ret
dec
cmp
push
lcall
popa
or
loop
cmp
cmp
jg
jns
adc
jb
fmul
test
fldenv
add
xor
ljmp
cmp
cmp
fstps
cs
cmc
aas
xchg
mov
fsubrl
lret
adc
movsl
cmp
jmp
jg
rolb
add
inc
call
and
scas
lds
stos
imul
and
popf
das
iret
jp
mov
test
ss
jo
xchg
cmp
sarl
rolb
mov
lds
movsl
je
lret
cld
inc
in
test
pusha
push
mov
mov
in
add
les
jnp
sbb
dec
shll
icebp
jp
arpl
outsl
sbb
add
and
ficoms
mov
pop
dec
xor
out
xchg
clc
or
cwtl
xor
mov
mov
push
sahf
sub
stc
aaa
cmpb
push
js
push
stos
xor
mov
addr16
jecxz
fimull
mov
pop
call
and
popf
jns
inc
mov
dec
xchg
mov
lods
dec
and
pop
lea
mov
xor
int3
arpl
push
xor
sarb
and
sub
js
dec
ret
je
ss
addr16
lods
pop
mov
arpl
popa
jnp
pop
jno
and
leave
pop
lahf
cli
inc
fwait
jne
sbb
call
dec
or
xchg
in
sub
cltd
outsl
push
sarl
push
lea
dec
mov
fdivl
dec
fsubrs
jecxz
cli
xchg
adc
std
sub
outsb
pop
or
and
cmp
dec
jns
mov
push
sarb
cmpsb
rclb
jmp
repz
cmc
sbb
mov
xrelease
fs
ss
jae
notb
ds
fsubrs
aad
test
popa
stos
xchg
aam
mov
pop
pop
movsl
push
mov
loopne
jno
out
or
inc
out
jl
lock
mov
stos
adc
ret
push
aam
fnstcw
dec
ror
mov
in
nop
pop
imul
imul
jmp
add
inc
jg
jb
xor
fs
adc
push
mov
lret
and
mov
lcall
stos
movsl
sub
mov
mov
fnstcw
addr16
mov
mov
icebp
lods
mov
or
nop
popa
data16
push
lcall
sub
pop
jmp
inc
inc
and
jbe
out
es
xor
add
xchg
std
cmpsb
lock
ret
mov
int3
loopne
lcall
ret
add
push
test
and
cmp
shlb
aad
push
sbb
adc
outsb
sti
dec
arpl
cmc
sbb
test
out
xchg
dec
cld
iret
js
imul
sub
xchg
adc
cs
clc
pop
dec
mov
gs
adcl
jb
sub
fdivrs
add
loopne
movsb
xorl
fs
scas
xchg
scas
jnp
sub
jns
fstpl
aad
out
pop
ret
popf
rcrl
icebp
cmp
and
pop
add
xor
pushf
xor
pushf
aas
loope
mov
fwait
lock
js
jb
or
lahf
repnz
lods
xor
cmp
lods
mov
aas
mov
pop
lea
mov
fnsetpm(287
dec
or
cmp
repnz
adc
dec
pop
xchg
js
jp
loopne,pn
out
xor
icebp
les
aam
je
pop
mov
jne
jbe
icebp
and
adc
mov
sub
pop
xchg
loopne
or
mov
jne
movsb
jecxz
inc
xchg
jb
imul
stos
movsl
xchg
fisubrs
cwtl
pop
mov
je
cmpsb
mov
dec
pop
dec
push
inc
jmp
test
mov
fsubl
stos
inc
push
pop
pop
fdivrs
inc
pop
mov
scas
cmc
aaa
frstor
jne
push
movsb
xchg
stc
adc
aaa
testl
sahf
jns
jb
mov
pop
or
lret
mov
cs
bound
pop
and
pusha
xchg
hlt
fmull
clc
pop
or
mov
inc
push
xor
inc
sbb
sahf
and
arpl
fidivs
pushl
add
inc
push
and
repnz
sub
push
ljmp
inc
cld
dec
ss
mov
out
aad
lods
dec
push
test
jns
sti
popf
cs
jmp
aad
lods
adc
dec
and
pop
jns
push
daa
sub
shrl
sbb
cli
pushf
jns
adc
cmp
push
aam
repnz
pop
push
repnz
mov
sub
cmpsb
push
xchg
or
push
mov
and
cmp
fldl
sahf
jmp
dec
aam
or
adc
fisttpll
mov
and
aad
mov
les
inc
outsl
xor
sahf
in
ljmp
and
movsb
xchg
inc
subb
sub
fstps
sbb
ret
cli
sbb
add
shl
add
or
and
pop
lahf
jmp
mov
jp
loopne
shl
dec
or
test
dec
loopne
imul
fsubl
jns
adc
dec
fidivl
push
inc
pop
and
xlat
jle
pop
dec
sub
into
es
inc
sub
shrl
fmulp
jae
cmp
sub
push
pop
cmc
inc
incl
loop
rorl
stc
inc
mov
fucomi
aam
dec
fdiv
or
mov
jmp
mov
out
pop
jns
out
xor
dec
fmuls
push
jb
in
rorb
out
fwait
sti
inc
std
fsubs
mov
adc
dec
sub
les
jge
loop
arpl
add
lret
push
xchg
sbb
adc
xchg
fwait
sub
pop
jmp
int
in
mov
divl
pusha
movsb
ss
fldt
jge
repz
loope
add
or
add
stc
push
loop
insb
sbb
into
xchg
lods
repnz
push
ljmp
or
pop
inc
fdivrl
imul
fcoms
test
jl
out
push
xor
pop
mov
jle
xchg
cmpsb
mov
aas
pop
lret
bound
stc
mov
loope
cmpsl
repnz
flds
lret
fs
sbb
rcl
or
aam
sub
ds
movsb
sar
mov
dec
pop
dec
or
repz
and
add
mov
aad
bound
or
mov
gs
and
loopne
push
xchg
orl
popa
or
aam
mov
cmpsl
cli
push
fldcw
pop
adc
orl
mov
dec
xlat
sub
lods
std
inc
mov
sbb
inc
push
mov
stc
jp
xchg
mov
out
cwtl
sbb
pushf
jg
add
dec
add
lock
pop
push
mov
mov
dec
or
rolb
sbb
mov
jnp
movsl
ss
or
sbb
arpl
adc
shlb
mov
mulb
sbb
mov
test
cmp
les
mulb
imul
pop
sahf
aam
jbe
loope
movsl
icebp
loopne
sbb
pop
jbe
cmc
fisttps
cmp
imul
pop
xchg
aad
test
movsl
loopne
and
adc
sub
fwait
push
mov
dec
bound
xchg
mov
cmp
loope
push
lret
addr16
push
lock
push
divl
or
xchg
popa
fmull
mov
pop
sbb
jg
adc
shrl
je
in
xor
out
bound
rcl
push
shrl
or
pop
xchg
data16
pushf
mov
cld
mov
pop
aad
cmpsb
jns
cmpsl
in
sub
cli
lds
dec
adc
shrb
dec
fsubrs
inc
add
lret
faddl
subl
pop
cmpsl
cmp
cld
rcrl
add
pop
cltd
add
cld
repnz
arpl
lret
insl
push
lds
lret
pop
in
scas
fwait
adc
xchg
sbb
mov
pop
xor
dec
incl
sahf
xor
mov
sbb
mov
and
ss
mov
adc
cmp
xchg
sub
jo
cmp
lahf
clc
mov
movsb
jmp
into
sbb
or
adc
test
add
cmp
push
lea
or
mov
and
sahf
je
sbb
imul
sbb
adc
and
jp
lret
sbb
and
jo
hlt
cwtl
shrl
xor
sti
sub
mov
dec
outsl
jnp
pop
es
into
lds
dec
mov
mov
jecxz
or
subb
inc
dec
xor
es
xorl
mov
test
shlb
shrb
inc
adc
scas
mov
fdivrs
inc
lcall
and
xor
mov
or
jecxz
mov
cmp
lods
lahf
or
lea
shll
sbbb
sbb
imul
andb
pop
inc
setle
xor
push
cmp
std
in
ret
stos
aas
dec
loope
pop
aas
in
subb
or
scas
dec
jns
jno
nop
xor
scas
adc
sbb
mov
lahf
lret
mov
in
lds
inc
xchg
addb
icebp
fwait
lret
cmp
cmp
jmp
fcoml
arpl
lods
dec
inc
mov
sub
mov
lret
adc
pop
sti
push
les
or
jbe
sub
aaa
xor
mov
dec
mov
mov
aas
xor
lods
xchg
jo
sar
push
and
fidivrl
aas
dec
inc
repnz
or
mov
arpl
push
cmpsb
cmp
cmp
in
dec
dec
arpl
sbb
imul
push
adc
lock
dec
rcrl
cmp
out
sub
adc
inc
sbb
or
sbb
inc
push
add
cmpsl
pop
jl
pop
jns
xchg
outsb
xlat
outsb
rolb
out
lcall
jge
in
pop
dec
pusha
fnstenv
test
mull
inc
sub
push
inc
adc
xchg
inc
outsb
fisttpl
cmp
or
and
adc
repz
add
in
aas
shll
push
jmp
hlt
scas
fidivs
rcrb
adc
lret
xor
lcall
insl
add
sbb
add
sti
xor
les
movsb
imul
push
push
imul
gs
mov
leave
pusha
sub
dec
out
fsub
or
daa
rcrl
jmp
into
push
jns
icebp
mov
pop
xchg
ja
test
adc
add
mov
in
jg
cmp
cli
int
rep
stos
rclb
outsl
rol
dec
add
out
bound
jmp
cmovne
cmp
insb
jae
dec
icebp
sub
scas
outsl
popf
pop
ret
push
xchg
repnz
cs
mov
mov
sub
ljmp
sub
mov
push
inc
push
insb
dec
popa
and
shrb
neg
call
inc
ret
dec
sbb
lret
and
outsb
pushf
inc
inc
sub
dec
ret
push
scas
inc
adcb
or
sub
pop
pusha
pop
clc
or
aad
mov
rol
cmp
iret
mov
cmp
das
mov
cmpsl
xor
ljmp
mov
push
push
xchg
mov
sbb
jle
popf
outsl
add
adc
jmp
lret
xchg
lea
push
lods
data16
jecxz
jle
mov
lret
fsubrl
cmp
or
add
pop
or
jb
daa
out
andl
out
or
out
or
mov
xor
mov
pop
data16
jmp
add
je
in
test
js
ljmp
mov
fstpt
cmc
push
or
push
push
gs
adc
test
es
dec
add
jge
loope
and
sbb
and
fimuls
dec
loop
out
dec
adc
mov
dec
ficoms
repnz
adc
insb
xchg
jge
ret
mov
inc
int3
adcl
addb
inc
cmc
or
add
sub
xor
decl
add
int3
mov
add
stos
bnd
jp
add
aam
adc
dec
filds
in
or
lcall
sub
push
imul
push
stc
dec
lret
mov
xor
repz
fsubs
ret
jp
sbb
shrb
add
shll
negb
jg
pop
fs
mov
cmpsb
js
or
or
add
cmc
out
jns
push
lahf
arpl
xchg
lret
std
jl
shlb
iret
add
push
pushf
lret
sub
fnsave
inc
xlat
inc
push
add
add
jo
andl
mov
repnz
jmp
in
cwtl
xor
xchg
movsl
stos
xchg
fs
mov
add
stos
xchg
prefetch
pop
addr16
adc
fcoms
push
jne
ret
into
sub
sbb
jmp
mov
and
mov
adcb
mov
das
icebp
xchg
dec
shrl
fsts
sbb
cli
mov
inc
sbb
mov
nop
push
int
mov
mov
push
jae
mov
jb
fwait
les
imul
xchg
push
jo
outsb
sub
insb
mov
inc
test
push
mov
mov
jns
pop
imul
shrb
sbb
dec
push
sar
outsl
ret
shlb
nop
xor
insl
in
pop
add
mov
inc
jne
aas
or
sahf
insb
int
adc
or
stos
mov
fwait
xor
decb
repnz
aaa
fucom
lret
mov
sbb
xor
sbb
or
hlt
inc
test
add
adc
xor
pushf
mov
dec
out
push
lock
dec
push
mov
scas
mov
aam
mov
arpl
pop
push
inc
cwtl
sbb
push
cmp
adc
ss
divb
xor
push
imul
addr16
push
cmp
push
inc
lods
fdivl
pop
ja
pop
cmpsb
dec
pusha
push
jp
and
repz
push
jg
mov
fldcw
test
push
push
rorb
arpl
jbe
xor
loopne
iret
sub
dec
mov
add
hlt
and
jl
mov
xchg
xor
lods
mov
pop
mov
pop
ja
pop
dec
es
push
das
pop
xchg
out
test
loope
popf
call
loopne
es
push
notb
repz
inc
dec
jg
loop
outsb
adc
inc
xchg
addr16
xchg
jno
jp
in
lods
mov
lcall
test
in
mov
pop
pop
xchg
je
sti
rcr
mov
sub
dec
inc
and
in
cmp
fmulp
lds
cmpsl
mov
push
jecxz
add
out
inc
adc
cmp
aad
rorb
xchg
daa
dec
dec
scas
pop
subb
or
dec
aam
lret
subb
xchg
jl
or
pop
call
or
xchg
test
mov
lods
and
xchg
aad
jo
subb
pop
loope
pmulhw
aas
jbe
adc
cmc
aaa
aad
enter
aam
dec
out
cmpb
and
cmpsl
lods
dec
inc
mov
shlb
sub
inc
cmp
or
test
inc
and
or
aas
mov
mov
pop
iret
sub
loop
push
xorl
rorl
sti
mov
stos
sbb
andb
push
fstpl
cmp
clc
insl
fs
pop
or
adc
ss
fcompl
xchg
xchg
cmpsb
pop
outsb
sbb
cmc
outsb
aas
mov
push
insb
push
lahf
mov
insl
jge
imul
loop
sub
aam
popf
fstp
dec
cs
mov
ja
lods
and
cmp
in
nop
cld
movnti
test
nop
mov
adc
sbb
divl
lret
jne
jo
mov
movsl
cmp
js
mov
pop
xchg
pop
cli
xchg
jl
sbb
jge
inc
add
cmc
in
cmpsl
loop
cs
filds
cmp
in
xchg
and
movsl
mov
lret
shlb
in
jns
or
flds
pop
adc
out
pusha
ss
ficoms
pusha
push
jg
inc
pushf
add
xor
flds
push
push
push
ljmp
insl
in
test
push
cmp
sub
jge
pop
ds
inc
jg
out
mov
dec
pop
sub
push
filds
sub
push
dec
cmp
inc
pop
cli
xchg
push
addr16
je
mov
xor
ss
jo
jns
xor
rcl
out
mov
les
mov
addr16
test
lock
imul
shlb
sub
icebp
jae
cmc
mov
in
fimull
in
lods
in
jb
xchg
arpl
mov
jmp
mov
out
pop
jmp
shrl
push
mov
scas
mov
mov
orb
pop
mov
call
cmp
pop
test
cltd
cmp
mov
or
xor
mov
sbb
jge
mov
in
ds
push
mov
ds
xor
or
cmp
lods
call
mov
pop
push
loop
pop
outsl
jnp
pop
push
in
cmp
and
mov
xchg
inc
das
inc
jmp
clc
cmpsl
jecxz
or
ja
jl
xchg
sbb
adc
ds
mov
xchg
cwtl
stos
mov
js
ret
cs
push
and
aam
addr16
or
or
push
jbe
test
inc
push
jns
popa
mov
stos
es
mov
dec
add
jl
notl
pop
and
fwait
mov
jp
push
lods
cmpsb
cld
sbb
mull
inc
mov
jbe
in
cmpl
jg
mov
push
xlat
fidivrs
pushf
inc
fidivrs
inc
adc
pop
in
xor
out
mov
jmp
xchg
mov
rorb
jne
fld
dec
adc
cmp
sub
std
mov
test
ret
push
out
loop
jnp
xor
jmp
mov
icebp
adc
xor
leave
movsl
addb
jle
mov
xchg
lea
push
sbb
scas
movsl
pop
in
jle
test
lahf
faddl
enter
xchg
xor
repnz
jl
cmp
mov
cmpsl
sub
movsb
push
cmovb
or
add
notb
mov
aam
add
mov
pusha
add
xor
dec
sbb
sub
jae
pop
push
xchg
insb
xlat
mov
dec
in
les
shll
les
ficoms
ss
movsb
jnp
xor
mov
xchg
add
mov
cmp
jp
fs
push
mov
xor
addl
mov
push
sub
loope
mov
gs
popf
pop
pop
sbbb
or
stos
adc
pop
dec
mov
out
adc
mov
fsubrl
adc
cmp
daa
cmp
cltd
xor
enter
or
outsl
or
mov
dec
push
jne
ljmp
lcall
insl
mov
jbe
iret
mov
pusha
push
in
pop
imul
cmpsl
push
test
pop
addr16
mov
popf
cmp
je
dec
cmp
jo
sbb
out
push
mov
inc
xorb
push
mov
mov
cmp
das
xlat
cli
es
cltd
xlat
repz
mov
stos
sbb
xchg
dec
insb
adc
push
mov
xor
xchg
insl
mov
lret
pusha
xor
xor
data16
cmpsl
jl
je
aad
and
mov
jmp
add
fucomp
arpl
lret
fs
jl
test
xlat
mov
fimuls
xchg
pop
pop
jb
cs
mov
pop
xor
fnstsw
lea
sub
mov
int
iret
scas
mov
popf
mov
fistl
cmpl
mov
ljmp
sub
add
pop
fdivl
xor
rorb
push
inc
out
jae
push
test
lea
pop
or
enter
pusha
testl
icebp
pop
lahf
sti
ret
insb
jl
test
mov
or
sub
adc
mov
cwtl
push
bound
jl
sbb
or
daa
repz
out
xchg
push
cmp
dec
pop
xor
xor
push
pushf
in
jmp
test
sub
lcall
rcrl
lds
cmp
shl
cmp
sarb
popa
or
sub
outsl
push
sahf
clc
inc
mov
jg
or
mov
loop
cltd
aam
mov
adc
je
jno
pop
dec
pop
jl
sub
push
pop
and
fldcw
insl
fsubr
stos
push
bound
sbb
test
stc
mov
jbe
js
jne
fcmovnu
aam
pop
fimuls
popa
arpl
test
add
and
std
outsl
mov
sub
mov
jnp
pusha
lcall
jp
pushf
in
push
pushf
scas
std
or
inc
cli
dec
fadds
ror
cwtl
mov
inc
pop
jns
clc
iret
cmp
add
pop
inc
cmpsl
jle
mov
push
scas
adc
push
jae
hlt
sub
das
push
fwait
std
push
int
xor
add
cmp
pop
loopne
push
cmp
dec
bound
inc
addr16
xchg
inc
fnstsw
pop
ds
mov
popa
filds
add
leave
inc
mov
xchg
cmp
lock
stos
jae
sub
stc
push
mov
add
out
dec
inc
xor
xchg
data16
mov
sbb
mov
push
pop
ret
ljmp
adc
aaa
ljmp
or
cmp
cmp
arpl
daa
xor
scas
mov
dec
push
cmp
fidivs
xchg
fiadds
and
imul
mov
mov
and
daa
xlat
jo
lods
int
or
into
jp
mov
les
push
xchg
mov
lgs
sbb
in
popa
jo
cld
mov
ret
cmpl
adc
inc
cmp
pop
pusha
cmpl
mov
adc
ror
stc
jo
inc
xchg
inc
arpl
jmp
es
cwtl
inc
xor
outsl
in
enter
cld
in
xor
push
je
mov
iret
imul
pop
aam
xchg
xchg
mov
mov
cmp
jo
scas
cmp
adc
leave
adc
pop
pushf
sub
out
cmpb
leave
cmc
pop
add
out
mov
cmp
inc
adcl
jne
push
lods
inc
daa
add
cmp
and
or
insl
test
sbb
add
sbb
cmp
ljmp
rcr
xor
rcrb
adc
inc
cmpsl
xor
dec
hlt
int
add
ljmp
xchg
cmp
ror
mov
loop
push
jecxz
adc
mov
mov
jp
or
lahf
and
ret
fdivl
sub
shll
xchg
bound
xchg
and
dec
jae
cmc
xlat
xchg
fidivs
jnp
fwait
mov
adc
mov
int3
lea
in
pusha
sbb
test
loop
iret
add
xor
sbb
add
xchg
dec
mov
mov
lcall
mov
sbb
or
sbb
dec
movsb
sub
pop
mov
aad
sbb
xor
and
stc
cmpl
push
imul
mov
into
lods
push
fldcw
test
and
shrl
cwtl
adc
ret
jp
mov
popf
nop
mov
inc
mov
add
mov
fisttpll
les
adc
mov
cmc
xchg
adcl
shlb
loope
sub
mov
or
fs
pop
mov
aas
mov
sbb
mov
jmp
pop
and
loopne
fwait
cmpsl
pop
cmc
fwait
cmp
lock
mov
aaa
pop
mov
and
imul
mov
cmp
ljmp
xor
pop
mov
movsl
inc
inc
push
in
js
sbb
dec
mov
call
xlat
xchg
mov
push
cmp
push
mov
inc
cmp
pop
mov
push
xor
inc
mov
in
loope
in
les
and
add
inc
cmp
mov
inc
mov
inc
out
pop
jmp
mov
cwtl
push
xor
push
adcl
rclb
inc
fcompl
mov
sahf
jno
fwait
clc
or
iret
mov
fs
dec
movsb
jecxz
jmp
imul
aaa
stc
and
push
movsl
sbb
outsb
call
cmp
out
sub
sub
bnd
in
in
pusha
sub
or
es
popf
pop
movsl
in
dec
test
insl
flds
or
add
cmp
jno
in
jmp
push
jns
sub
scas
pop
mov
jb
jae
test
mov
rclb
push
test
sbb
inc
lods
dec
jns
loope
shll
sahf
fchs
clc
bound
mov
imul
mov
sub
popf
xor
fistpll
negw
push
xchg
gs
adc
or
icebp
pop
test
pop
pop
std
dec
loope
sub
out
pop
dec
jmp
in
adc
sbb
xor
dec
adc
fsts
jle
adc
xchg
fisubl
mov
rclb
adc
xor
pop
lds
cmp
adc
xchg
idivb
aaa
xchg
dec
push
sub
adc
add
in
ljmp
jne
leave
movl
lahf
xor
notb
cmpsl
lea
mov
and
ja
out
push
mov
sahf
add
gs
add
test
jns
je
lcall
adc
mov
fs
mov
dec
mulb
cmpsl
cli
nop
add
scas
xchg
in
pop
mov
outsb
arpl
add
xchg
adc
inc
pop
inc
adc
inc
gs
das
jnp
cs
sub
imul
aaa
lcall
in
insl
ljmp
ja
mov
cmp
cmp
add
cli
or
jecxz
scas
xchg
insb
xchg
pop
lds
sub
mov
negl
jp
psrad
jge
mov
pop
cmp
adc
xor
ja
inc
lret
sbb
fs
popf
dec
cmp
sub
pop
adcb
add
popf
je
sub
inc
in
push
subl
sbb
xlat
subb
shr
xchg
sbb
call
xor
insb
js
outsl
add
or
mov
clc
lret
mov
adc
inc
test
inc
pop
sub
cli
bound
nop
fisttpll
faddl
scas
jg
sbbl
ja
fnstenv
je
test
pop
stc
and
shrb
xchg
mov
cmp
xor
jecxz
insb
aas
rol
cmp
xor
int3
adc
adc
fistpll
insb
lret
cltd
push
in
lret
pop
fcoml
scas
xchg
fcoms
pop
adc
inc
insl
push
in
xchg
inc
sbb
loope
sbb
out
imul
pop
push
jle
inc
dec
adc
int3
leave
cmpsb
js
pop
test
jg
pop
das
and
jbe
jecxz
mov
push
test
arpl
out
repnz
or
or
pop
mov
in
jl
mov
jo
mov
ss
mov
shll
pop
clc
dec
fistps
adc
nop
xor
pop
repnz
fnstenv
in
jo
fsubl
mov
fistpll
ljmp
inc
pop
stos
sbbl
pop
pop
and
pop
orl
mov
or
push
mov
int
loope
pop
mov
or
ss
sub
adc
sub
mov
sbb
mov
pop
lds
loopne
ret
sub
leave
imul
mov
in
xor
mov
pop
in
loope
jb
outsl
lods
cltd
push
jno
nop
adc
leave
jo,pt
jo
into
jo
mov
shlb
adc
es
xchg
out
test
jo
cmpsl
je
or
adc
sbbl
sti
push
inc
inc
mov
jbe
decl
cmp
imul
or
push
push
repz
inc
xchg
and
scas
push
loope
inc
inc
and
xchg
jmp
ret
xchg
dec
jns
inc
fldcw
negl
jle
adc
dec
sbb
lret
mov
ljmp
mov
enter
and
out
stos
sbb
pop
push
cmp
cmp
pop
sub
movsl
repz
xchg
test
pop
mov
mov
fs
jae
imul
pop
popa
mov
xor
mov
cwtl
pop
jecxz
xchg
mov
enter
icebp
imul
cmp
or
cmp
insl
sbb
in
jle
ficompl
pop
cmp
nop
cmp
movsb
outsb
jo
sub
mov
xchg
jmp
xor
cmp
ffreep
push
jmp
or
jb
add
cli
test
stc
push
xor
mov
arpl
adcl
aad
cmpsl
repnz
movsl
dec
mov
mov
push
jnp
push
sub
ror
add
ja
fcompl
outsb
adc
cmpsl
mov
subl
out
adc
fidivs
cmp
mov
out
inc
stos
xor
jmp
cmpl
orb
sbb
mov
dec
sti
pop
sub
mov
jmp
mov
jnp
dec
fbstp
adcb
push
xor
adc
sub
mov
scas
adc
jae
jmp
xor
int3
icebp
sbb
test
dec
pop
or
push
xchg
dec
push
mov
test
divl
out
mov
add
and
adc
mov
fists
mov
daa
fdivrl
sbb
fistl
lds
repnz
ds
sbb
cli
dec
ja
insb
test
ret
out
xor
dec
dec
shll
cmp
mov
in
push
sub
adc
mov
and
je
and
xchg
dec
xchg
ja
push
mov
popf
add
lods
idivb
xchg
add
cmpsb
dec
out
mov
mov
daa
mov
pop
cmpsl
ja
or
inc
xlat
sub
xor
mov
mov
scas
mov
push
xor
aam
lea
stos
dec
sub
inc
fnstenv
enter
add
sbb
dec
cmpsl
dec
pop
aas
outsb
add
adc
jg
sub
pop
sbb
jle
and
add
mov
mov
adc
lea
cmp
fisubrl
sbb
aam
pop
lock
cmp
test
mov
fcompl
sti
push
or
fisubrl
push
arpl
subl
jg,pn
lods
ss
jecxz
aam
and
pop
std
inc
clc
mov
shlb
pop
pop
out
push
ljmp
xchg
enter
in
aaa
out
dec
js
cmp
clc
and
sbb
sbb
add
xchg
or
mov
dec
or
jg
mov
add
sbb
adc
pop
inc
loopne
out
fyl2xp1
xor
dec
adc
imulb
aas
je
or
or
xor
and
push
or
orb
popf
loopne
xchg
jo
add
xor
xchg
add
lods
push
mov
stos
add
jae
test
fwait
push
cmpsl
sub
js
sub
dec
push
xchg
test
call
fiaddl
loopne
jmp
xor
cltd
jp
out
lahf
inc
push
push
ss
cli
and
xchg
or
mov
sahf
add
inc
rcll
test
xchg
testb
fdivl
dec
xchg
cld
popl
mov
loope
xchg
mov
pop
rcrl
add
scas
push
imul
test
lcall
jmp
fdivs
inc
sub
cld
push
bound
push
jle
dec
adc
xor
push
push
mov
daa
mov
fiadds
jo
mov
fistpl
orl
subl
jp
in
and
outsb
js
ret
jmp
inc
mov
or
adc
rcr
pavgw
adc
mov
rorb
arpl
dec
adc
fs
out
jl
sbb
test
mov
leave
out
mov
mov
ss
inc
push
imul
cli
gs
mov
pop
lcall
mov
push
jge
mov
push
in
xchg
mov
push
movsl
jl
sbb
or
mov
inc
stos
mov
in
lock
arpl
push
mov
xchg
or
lret
adcb
ljmp
jbe
jb
bound
or
cmp
lods
adc
lds
aas
lods
fdivl
jns
jae
mov
add
lods
clc
sbb
mov
jg
fists
cltd
mov
scas
out
adc
xor
jns
mov
and
lods
enter
into
nop
pushf
inc
pushf
mov
bound
jb
mov
cltd
loope
ljmp
stc
subl
adc
repnz
and
leave
mov
das
rdmsr
dec
and
inc
cmp
pop
push
pop
jle
dec
insl
test
cmpsl
pop
sbb
push
and
push
inc
in
xor
aam
pop
jo
mov
mov
jns
pusha
sub
sbb
mov
jle
mov
inc
push
jb
xor
mov
add
inc
ljmp
out
test
jnp
inc
mov
fs
push
mov
ds
call
sbb
xchg
jnp
les
mov
es
add
xchg
shll
dec
mov
lret
in
cmp
xor
imul
cmpsb
lock
mov
repz
adc
mov
mov
cltd
int
call
push
sbbb
xchg
fnsave
fdivrs
data16
sarb
aam
andl
out
lods
mov
mov
jp
push
xchg
jae
out
scas
inc
inc
in
ja
lahf
jo
dec
xor
push
add
mov
repz
cmp
ret
pop
xchg
pop
mov
js
mov
push
xor
push
hlt
nop
sbb
setp
mov
xchg
pcmpeqw
das
js
xchg
lods
in
or
dec
inc
std
cmp
xor
push
cmc
into
daa
push
jnp
mov
inc
sbbl
imul
xchg
fnsave
push
dec
or
int3
mov
xchg
pop
sub
dec
jecxz
stc
push
inc
loopne
fidivrs
adc
lods
cmp
dec
test
mov
push
ret
ret
xor
movsb
sub
pop
rorl
pop
jl
sub
ret
cmpsb
inc
pop
adc
ss
mov
inc
aas
rcrb
mov
out
jns
xchg
int
call
add
jl
inc
enter
testb
repz
sbb
xor
pop
pop
popf
jl
add
pop
xchg
jle
enter
dec
pop
pop
ds
mov
xlat
insl
xchg
out
sub
pop
push
imul
and
pop
stc
xor
jle
sbb
les
cld
dec
in
jle
leave
sub
imul
push
sub
subb
cmp
bound
jle
sub
xchg
pop
in
pop
ret
push
cmpsl
adc
mov
outsb
add
pop
ja
dec
imull
dec
jge
xchg
sub
sub
icebp
cmpsb
cmp
add
push
ds
sahf
insl
dec
push
ljmp
jno
or
xor
xchg
cmpsl
iret
gs
sti
in
clc
sub
push
in
sbb
add
aam
jae
out
andb
lret
jno
sbb
cltd
jp
cmc
mov
xchg
mov
xlat
es
scas
inc
negl
fs
daa
xor
or
dec
hlt
outsb
cmp
inc
jmp
cmp
sub
xor
add
ret
dec
xor
rcrb
lea
cli
jae
push
stos
and
aas
push
xor
cmpsb
add
xchg
ficoml
mov
pop
push
insl
dec
aad
cmp
fmuls
int
and
test
push
cmp
mov
rol
pusha
jne
or
cltd
nop
inc
lret
mov
xor
jmp
lret
lds
add
lock
push
inc
inc
mov
sub
xor
jle
mov
mov
adc
jp
les
aam
je
add
lcall
gs
cs
pusha
fstps
movsl
xchg
hlt
out
loop
or
std
mov
mov
sbb
jecxz
into
in
cltd
outsl
cmp
addr16
nop
testb
loop
adc
sbb
inc
nop
adc
in
pushf
inc
mov
or
repnz
mov
es
sub
adc
sub
sub
rolb
xchg
jno
insb
jne
lahf
sbb
shlb
shrl
mov
sub
sub
xchg
xor
repnz
mov
imul
inc
push
in
jmp
push
lcall
pop
outsb
jno
adc
fadds
mov
leave
push
mov
mov
in
add
insl
push
mov
stos
mov
push
fs
add
mov
mov
mov
insl
cmc
fisttpl
mov
in
idivl
mov
inc
add
mov
pop
or
xchg
mov
les
and
xchg
inc
imul
push
aam
scas
jnp
sahf
test
scas
inc
xor
inc
inc
lahf
push
push
je
into
and
leave
mov
mov
in
int3
and
notl
push
xor
lret
xor
push
adc
cmp
adc
push
xchg
inc
push
testl
lret
push
ljmp
add
jbe
lret
cmpsb
mov
or
call
stos
mov
mov
fdivl
adc
inc
fsubs
leave
shll
xor
repnz
aas
push
push
xlat
fisttps
xor
jecxz
repnz
inc
adc
imul
push
inc
fisubl
jo
stos
pop
cmp
xor
inc
rcr
mov
ljmp
lcall
inc
gs
fbld
jmp
xchg
cli
loope
insl
leave
setle
mov
ja
add
clc
or
das
stc
jne
daa
int
mov
stc
sub
inc
mov
cmpsl
adc
shl
je
lret
es
cmp
lret
push
and
adc
sub
pop
icebp
add
sub
cmp
ljmp
arpl
sbb
cmp
jle
inc
sbb
je
test
clc
mov
je
pop
addr16
push
mov
mov
sarl
jb
mov
cmpsl
fcompl
imul
fucomp
cmp
push
mov
pop
mov
xchg
in
lret
xlat
sbb
sub
movsb
loop
add
cmpb
je
adc
mov
jno
aaa
lods
je
or
add
jb
sbb
repz
xor
das
out
inc
sbb
scas
jb
mov
push
or
test
outsl
daa
in
xchg
sub
push
fwait
mov
push
stc
sub
out
mov
in
mov
fwait
inc
cmc
out
fwait
aam
stos
mov
pusha
and
test
adc
cwtl
sbb
xor
or
inc
imul
seta
pusha
or
adcb
dec
and
dec
in
les
cmpsb
aas
xchg
out
pop
lds
mov
mov
push
popf
shlb
jo
dec
movsl
fdivrp
loopne
cmc
mov
jno
sub
pop
lret
dec
push
mov
sbb
pop
push
dec
test
lods
shrl
or
test
sub
mov
adc
xor
addr16
stc
push
jmp
jecxz
sbb
mov
aad
fdivrs
pushf
adc
jbe
addr16
scas
push
cmp
sbb
dec
das
fisubl
es
cmp
xchg
test
mov
fistpl
jp
push
repnz
and
and
mov
xchg
push
push
xor
sbb
arpl
push
in
cs
mov
push
lods
fistpl
pop
rorl
test
repz
repz
gs
sub
mov
bound
mov
add
pop
aaa
cmp
stos
shrb
fidivl
imul
popa
sub
pop
jge
out
sub
jl
stc
mov
mov
nop
daa
xor
ficoml
cmpsl
mov
lahf
cmp
subl
pop
sub
add
jg
mov
testl
ss
jge
push
test
lock
scas
push
lret
cmp
adc
pop
jno
add
ljmp
push
dec
andb
pusha
sbb
test
test
jnp
repz
sbb
or
mov
lcall
in
cmp
jle
xor
cmpsl
aaa
cmp
imul
xor
ret
sbb
orl
dec
push
sub
dec
jnp
addr16
movsb
pop
int
xchg
int
in
aaa
movsl
call
movsl
xlat
popa
cmp
js
add
xor
loopne
fidivs
add
lock
test
and
push
push
scas
push
push
cs
fcmovne
mov
dec
or
adc
xchg
sub
jecxz
repz
xor
shll
out
ss
mov
in
fdivrl
leave
adcb
inc
xor
sbb
jns
sbb
and
movsb
cmp
div
dec
adc
das
call
je
adcl
loopne
sub
nop
ss
imul
jmp
movsb
xchg
pop
fidivrs
xchg
inc
je
cmc
xchg
divl
and
pop
mov
add
out
xchg
adc
cli
inc
adc
in
ja
mov
hlt
loop
outsb
in
out
xchg
inc
pop
movsb
cmp
cld
lea
lods
inc
push
jmp
bound
int
xlat
ret
push
ds
idivl
out
xor
inc
inc
aaa
int3
xor
mov
pop
pop
mov
dec
ja
cmp
mov
into
adcb
sahf
push
sub
mov
jmp
xchg
jmp
mov
int
pop
pop
pop
cli
xchg
mov
in
jbe
mov
xor
in
aas
xlat
call
inc
pop
imul
jg
paddusb
mov
pop
lods
cmp
mov
push
dec
leave
mov
shlb
xor
sbb
or
mov
pop
xchg
rorl
inc
mov
pop
aas
outsb
test
dec
mov
shrb
pop
addl
xchg
and
or
subb
shl
ljmp
stos
repnz
leave
mov
pop
fcmovnu
cwtl
rcrl
lock
repnz
cmpsb
loopne
cs
aad
push
mov
cmc
inc
sub
cmpsl
ds
jmp
mov
cmp
mov
cmp
ficomps
lret
ds
adc
lret
cwtl
mov
mov
lret
repnz
mov
fstps
sub
mov
test
and
mov
push
cmp
cld
orb
inc
lods
jge
std
das
push
add
addl
in
sahf
push
mov
sub
and
push
sarl
sbb
cmpsl
push
sbb
inc
lods
aad
sub
cmp
xor
aam
or
hlt
jle
int
sahf
sbb
push
and
xchg
and
dec
scas
jmp
jns
lea
add
out
movzbl
inc
push
xchg
scas
test
test
jmp
or
mov
and
aas
and
pop
jo
rol
cs
xor
outsb
gs
ret
xlat
cwtl
clc
mov
filds
notl
xchg
mov
pop
hlt
decb
clc
jns
dec
fld
cmpsl
push
sub
test
movsb
sub
add
cmc
sbb
mov
push
out
into
jno
fs
bound
mov
sub
and
push
jnp
sbb
cld
data16
sbb
scas
out
mov
sbb
cmpsl
xor
popa
enter
xchg
xchg
stc
xchg
gs
sbb
push
xchg
sti
nop
sub
mov
mov
push
aas
ret
aam
cmp
or
fimull
jb
adc
out
mov
mov
dec
sarb
cs
ja
dec
dec
lret
shlb
push
adc
mov
mov
sbb
outsl
int
jg
lret
jnp
inc
sbb
in
mov
mov
loopne
test
sbbb
xchg
push
stos
push
push
repz
jmp
push
in
je
and
nop
cmpsl
mov
xorl
or
in
call
outsl
mov
push
clc
in
insl
pop
mov
jmp
or
ret
lcall
dec
pusha
gs
fisubl
adc
addb
xor
mov
xor
adc
enter
inc
sbb
xor
scas
xchg
cmp
fildll
dec
loop
cmp
push
outsb
jne
lock
test
leave
in
sti
dec
movsb
jle
lret
cmp
outsl
popf
mov
jmp
adc
mov
inc
sub
dec
stos
dec
mov
addr16
jl
fs
in
ja
loop
and
ss
rorb
adc
clc
out
repnz
dec
pusha
xchg
arpl
sbb
inc
xor
jmp
iret
sbb
dec
out
lds
stc
aaa
popf
divb
mov
add
inc
fisubs
cmp
jne
xchg
push
inc
in
mov
push
out
xchg
mov
or
push
mov
iret
jbe
push
pusha
imul
adc
cmp
stc
jle
lahf
push
push
scas
into
mov
cmp
mov
gs
add
pop
lds
mov
xchg
hlt
pop
movsl
pusha
mov
movsb
or
adc
ret
jg
insb
int3
fsubl
push
mov
and
lahf
xor
and
mov
and
push
sbb
stc
add
int3
xor
bound
dec
mov
les
aad
xchg
push
in
dec
dec
fcomps
dec
push
out
and
scas
pop
sub
adc
bsr
movsb
dec
mov
pusha
xchg
xor
dec
fstps
fwait
icebp
push
aam
std
xor
fcmovb
js
in
dec
add
imul
vcvtps2dq
mov
mov
in
inc
ficoms
sbb
jb
faddl
adc
cmpsb
popf
in
or
cltd
lods
adc
pop
lahf
xor
lcall
push
sub
mov
mov
pop
outsl
jns
sub
cmp
rol
fcomps
aam
in
test
test
cmpsb
mov
push
loope
jle
outsl
sub
dec
stc
xor
shl
adcl
dec
enter
jo
orl
ret
loop
sub
xlat
sti
pop
imul
das
push
lret
cmp
jno
mov
add
xchg
popf
push
test
mov
and
fisubrl
das
loope
lcall
adc
add
sub
inc
pop
and
mov
movsb
js
test
jns
fs
sub
rol
repnz
jl
dec
cmpsb
loopne
sahf
pop
sub
mov
ret
sbb
clc
mov
stos
arpl
inc
repnz
cmp
add
lret
adc
sahf
pop
push
out
call
sub
int
pop
sbb
je
sbb
out
dec
xchg
shlb
imul
fnsave
jns
ss
cli
dec
sbbl
jmp
adcb
adc
cwtl
std
pop
out
jbe
dec
out
mov
les
push
mov
in
notrack
mov
xchg
ret
mov
and
fsubs
xlat
aam
mov
movsb
fwait
jg
jae
mov
jle
ret
or
outsl
leave
xchg
mov
out
xchg
or
xchg
push
or
inc
repz
xor
push
mov
fcmovnu
in
add
cmpl
gs
mov
xchg
cmp
lds
mov
mov
pop
scas
xchg
jae
int
sub
cmpsl
push
clc
cli
xchg
sbb
jo
xchg
js
and
jae
shlb
dec
mov
shrl
sub
pop
xchg
and
cmpsb
xor
popa
mov
xor
xchg
and
cmpb
call
filds
enter
in
and
loope
enter
cmpb
push
adc
xorl
cld
mov
gs
or
adc
jmp
adc
cmp
inc
iret
pop
mov
mov
dec
daa
and
sti
dec
aam
jns
aam
inc
and
or
sub
xor
inc
out
pop
pop
out
pop
test
mov
and
adcb
movsl
push
ficoml
js
out
cmp
test
or
lods
inc
es
cli
lret
xchg
mov
xchg
pop
push
mov
pop
sets
std
pop
inc
cmp
sbb
pop
lahf
inc
pop
sbb
lods
xor
jmp
popa
xorl
cmp
je
jno
mov
and
add
or
jle
lods
jg
fadds
cltd
popa
mul
add
cmpl
movsb
inc
adc
dec
mov
inc
push
cmpsb
add
stos
jmp
mov
es
mov
mov
frstor
data16
in
out
pop
out
cld
shlb
and
pop
cmp
dec
mov
icebp
shrl
xor
cmp
clc
out
xor
fsubrl
aam
mov
popf
pop
cmp
enter
in
xor
mov
je
xchg
sub
xchg
sbb
jmp
and
cmp
popf
mov
int
push
rcrb
adc
cmpsl
cmp
push
xchg
add
or
or
xor
adc
loope
inc
dec
pusha
mov
hlt
mov
mov
test
jo
ljmp
mov
bound
pop
repz
fwait
pop
ljmp
ja
mov
lret
adc
mov
xchg
hlt
out
out
repz
add
xchg
cmp
imul
inc
cmp
insb
gs
mov
test
push
test
insl
je
shl
es
gs
shl
nop
int3
pop
lods
mov
pop
add
test
lret
jno,pt
sub
push
mov
add
cwtl
outsb
pushf
jge
cmpsb
mov
xchg
out
ds
pop
sub
mov
push
out
sbb
add
jge
mov
test
out
andb
mov
push
mov
fdiv
push
adc
inc
mov
dec
mov
or
mov
in
jp
mov
and
cmp
sub
mov
push
addps
popf
push
add
mov
xchg
scas
push
sbb
jge
into
or
repnz
adc
adc
leave
jl
std
or
mov
pop
std
or
pop
aaa
outsb
mov
mov
ficoml
xchg
mov
and
sub
sbb
jae
lea
mov
into
sub
sub
pop
mov
add
in
sbb
loope
call
in
dec
idiv
push
int3
arpl
sbb
gs
mov
std
pop
adc
das
pop
mov
lret
out
xchg
jp
loop
fsubr
sub
mov
sub
hlt
mov
xchg
and
dec
push
adc
das
jg
cmc
mov
lds
movsl
lds
fucomi
sub
das
scas
inc
inc
scas
and
fistpll
div
sub
sub
push
lret
and
push
mov
ss
xchg
ljmp
pop
gs
out
mov
sbbb
mov
std
iret
dec
push
mov
xchg
push
cmp
jnp
cmp
and
nop
in
lods
jmp
xor
inc
in
ljmp
mov
loope
add
jge
and
stc
nop
mov
xor
cmpsl
pop
mov
lock
push
ljmp
inc
xchg
sub
outsl
lahf
icebp
popf
xor
gs
subl
mov
in
rolb
xchg
add
add
aaa
ds
mov
in
adc
or
in
rcr
inc
pop
or
out
cmpsl
std
push
iret
and
adc
sbb
out
scas
push
les
lcall
test
imul
push
and
cli
xchg
cmp
pop
subl
outsb
adc
ret
cmp
sahf
mov
cmpsl
into
nop
stos
bound
test
imul
outsb
pop
adc
sub
jge
dec
cwtl
push
mov
push
fdivl
vpunpcklwd
cli
push
pop
roll
adc
and
xlat
test
sbb
jl
xlat
cs
test
mov
out
adc
loope
mov
js
mov
fucomip
xchg
mov
ret
pop
repnz
lret
divb
sti
mov
mov
xorl
int
insl
cwtl
sbb
sbb
rorb
pop
sbb
mov
scas
push
sub
mov
push
xor
xchg
inc
pop
cmc
data16
xchg
lods
mov
cmp
dec
mov
cmp
pop
loope
xlat
pop
dec
imulb
cmp
mov
aad
popf
pop
mov
adc
stc
popa
aad
xchg
sbb
loop
mov
rclb
out
popa
add
push
les
inc
cmpsb
jmp
inc
repnz
shr
jp
mov
imul
lcall
push
push
or
dec
pop
mov
xlat
es
cmc
adc
arpl
mov
dec
stos
dec
push
sbb
jo
sbb
ret
outsb
mov
push
or
lods
dec
inc
stc
inc
add
ds
and
repz
stos
cmp
xchg
xchg
mov
mov
push
mov
cmp
mov
add
xchg
mov
mov
imul
outsb
mov
pop
loop
out
outsb
fcoms
fildl
sti
shlb
push
mov
pushf
hlt
fwait
and
loopne
xchg
jmp
aad
insb
rcrb
incl
test
dec
sbb
dec
jmp
lock
push
cwtl
decb
movsb
jmp
outsb
cld
xchg
mov
imul
stc
mov
xor
jnp
stos
jnp
adc
popa
jbe
add
sarb
movsb
cli
cli
inc
loopne
out
pop
inc
adc
popl
mov
inc
out
stc
mov
fstps
xor
xchg
adc
mov
adc
lods
push
sub
sbb
adc
scas
xlat
pushf
sbb
jns
pop
mov
rcl
daa
fildl
scas
imul
into
and
mov
inc
lods
add
mov
xchg
or
dec
inc
mov
jmp
xchg
test
pop
xchg
out
xchg
jecxz
lods
repnz
lods
imul
ja
outsb
mov
shlb
imul
lahf
xchg
mov
lds
sbb
mov
pmaxsw
xor
mov
sub
test
sahf
and
jge
inc
repnz
cmp
mov
sub
cmp
leave
add
sub
xchg
lcall
mov
add
dec
xor
xlat
fisubs
xlat
and
dec
sub
bound
push
daa
lret
jge
ret
aad
xchg
insl
lds
xor
jo
pop
inc
inc
out
push
je
mov
mov
adc
ds
pop
inc
push
out
inc
push
fisubrs
pop
inc
cmpsb
shlb
ljmp
es
mov
inc
mov
nop
cld
xor
loopne
and
mov
sub
inc
push
dec
popa
mov
xchg
fs
inc
xchg
sub
insb
sbb
testl
jb
xchg
fwait
inc
xlat
or
mov
pushf
imul
lods
mov
movsb
into
loopne
push
inc
test
pop
pop
sbb
add
xorl
dec
pop
pop
loop
fnstsw
sbb
mov
pop
cmp
repnz
adc
inc
dec
xorl
lds
pop
or
sub
pop
pop
stc
movsl
xor
dec
gs
cwtl
pop
out
xor
or
dec
add
fdivl
and
or
push
xor
pop
mov
cs
jecxz
xchg
lods
icebp
mov
push
mov
out
inc
adc
add
pop
lcall
outsb
mov
add
xor
mov
pop
xor
fld1
jbe
popf
cld
cmpsl
mov
mov
lret
fisubl
popa
jmp
call
sbb
rorl
sahf
test
pop
push
jb
sub
dec
add
pop
aaa
loop
xchg
lods
push
mov
push
fdivl
adc
lea
add
call
xchg
or
sbb
insb
popf
gs
push
sbb
push
btl
inc
jbe
mov
xor
rol
mov
ljmp
inc
stos
lds
dec
shrb
mov
test
pusha
cmp
mov
test
cmp
js
rorl
lahf
mov
jl
xlat
push
subb
dec
dec
mov
out
in
jg
lock
or
sbbl
mov
mov
add
fs
popf
mov
push
xchg
jmp
repnz
adc
push
imul
pop
xor
cli
xor
fs
js
orl
clc
in
add
ja
cmpb
outsb
inc
mov
mov
cmc
adc
xlat
push
out
xchg
dec
leave
push
mov
mov
shlb
in
jp
aaa
addr16
and
call
dec
lcall
inc
inc
into
pop
dec
fs
insl
sbb
inc
sbb
inc
mov
repnz
test
mov
fwait
lret
xchg
inc
fnstcw
roll
inc
inc
sbb
and
cmp
mov
rorl
mov
roll
shlb
xlat
js
inc
shrb
jp
rcl
add
xchg
in
mov
xchg
or
mov
jge
mov
sub
jmp
stos
icebp
push
xor
iret
adc
jb
and
jge
pop
jmp
adc
outsl
jbe
loope
pop
daa
iret
xor
cmp
scas
loope
ret
js
inc
and
xor
in
shrb
loop
nop
test
pop
push
or
iret
cmpb
push
pop
push
mov
sub
jb
jne
rep
or
das
cmp
dec
fwait
popf
daa
lcall
inc
push
popf
inc
movsl
jl
dec
lret
in
sub
enter
ret
mov
mov
sub
fidivl
xchg
sbb
dec
pop
notb
xor
xor
jbe
sub
or
xchg
adc
jmp
mov
adc
push
dec
movsl
rcrb
push
sbb
mov
push
inc
mov
andl
and
xchg
jle
mov
and
xchg
shlb
cmp
sub
push
lahf
out
cli
mov
aad
push
pop
add
imul
cmpsw
hlt
repz
in
test
test
jne
dec
jl
sub
aam
xchg
dec
data16
mov
dec
in
das
inc
imul
xchg
ds
loope
in
fbstp
pop
jae
mov
push
or
mov
inc
test
and
mov
mov
imul
jo
dec
fistpl
or
repnz
out
fs
jmp
or
aaa
mov
fidivrl
push
lret
add
bound
push
mov
aaa
and
imul
xor
out
pop
pop
push
mov
into
mov
add
jnp
dec
dec
jb
jp
mov
mov
fimull
jl
sti
pushf
iret
sub
pop
add
lea
mov
outsb
outsb
lds
dec
cwtl
or
push
lock
push
mov
clc
daa
scas
dec
ljmp
push
add
int3
mov
or
or
and
lds
int
add
pop
test
dec
cmp
and
pop
xor
ret
cld
xor
shrl
pop
or
sub
inc
shrl
jl
in
jns
xchg
les
test
pop
call
dec
pop
testb
inc
shr
fidivl
pushl
lock
in
cmp
cmp
cmp
xlat
jmp
es
repnz
nop
mov
jge
lds
dec
outsl
stos
inc
mov
ror
lds
mov
movsl
xor
and
and
ret
jno
mov
cmp
push
fwait
cwtl
pusha
les
mov
cld
out
fbstp
mov
mov
call
lcall
mov
adc
fwait
mov
bound
xchg
frstor
and
add
aaa
fcompl
mov
ret
ja
popf
mov
and
dec
mov
push
push
test
mov
fimuls
test
cmp
pop
in
loopne,pn
rolb
jbe
mov
xchg
and
mov
xor
fmull
mov
mov
dec
mov
pusha
mov
int3
jo
repnz
push
adc
test
fisttps
hlt
faddp
sub
mov
sub
mov
rclb
xchg
xchg
stos
int
sbb
fistpll
add
dec
lock
adc
cmpsb
lock
fdivl
mov
insb
jle
mov
sub
jg
jp
das
jnp
jecxz
outsb
pop
sub
nop
outsb
mov
pop
loop
lahf
mov
xor
mov
pop
aaa
cmp
loop
pop
xor
cwtl
dec
and
lods
in
cmp
out
xchg
jle
mov
loope
loopne
push
mov
adc
ds
ds
lds
push
pushf
add
outsb
lds
loop
in
out
mov
pop
ret
filds
push
pusha
sti
insb
addr16
aaa
test
std
adc
addl
adcl
xchg
mov
or
add
jns
xchg
xor
push
cwtl
insl
iret
push
data16
insl
cld
xchg
paddb
inc
scas
imul
xchg
sbb
mov
pop
iret
cli
xchg
ret
or
lret
jg
daa
aaa
pop
jno
sbbl
cmp
hlt
sbb
loop
rcll
lcall
popa
or
roll
push
sub
xchg
movsb
sub
push
pushf
jle
mov
lret
notl
leave
lcall
je
jle
xor
lcall
mov
inc
in
and
sbb
js
mov
xor
loopne
outsb
push
cmc
lahf
scas
push
adc
daa
pop
push
shll
push
jns
cmp
daa
push
pop
loope
or
pop
es
int
push
adc
pop
mov
movups
push
loopne
lret
jle
add
loope
xor
push
jae
scas
sbb
and
mov
cmp
pop
hlt
jae
or
or
fwait
mov
cmp
sub
mov
inc
out
lcall
mov
fcoms
into
mov
jb
mov
push
cmp
dec
sbb
fwait
nop
daa
cmp
subl
pop
pop
cmp
orl
push
lods
movsb
aaa
lahf
bnd
xchg
inc
data16
jne
nop
stos
int3
pop
xor
jge
int
addr16
out
stc
push
xor
lcall
push
push
ficoml
sub
call
aas
pop
hlt
mov
inc
lret
mov
pop
jae
xchg
cmp
in
stos
add
mov
pop
sbb
push
xchg
jmp
pop
pop
and
push
adc
xchg
add
mov
in
stos
add
fcom
scas
inc
jecxz
dec
loop
sub
int
movsb
cmc
mov
push
fnstenv
mov
push
cli
inc
sahf
subb
pop
pushf
cli
sub
mov
sub
rcll
push
lahf
ss
cli
scas
jb
sahf
mov
pusha
and
es
in
dec
leave
sub
jecxz
adc
pushf
loop
dec
dec
fdivrs
repnz
mov
ret
add
pop
std
dec
test
roll
xor
outsb
sub
popf
daa
pop
int3
push
mov
cli
jg
test
push
cwtl
sbbl
push
insl
mov
shll
sbb
sub
cltd
sbb
inc
push
fsubrl
jbe
inc
gs
cmp
push
mov
jge
xchg
enter
mov
xlat
adc
shrl
shlb
inc
push
sbb
jp
inc
mov
push
pop
pop
test
mov
in
aam
testl
add
kmovb
imul
push
ret
stos
pusha
test
push
stc
fstpt
lea
hlt
cmpsb
lock
iret
or
or
xor
insb
pop
xor
jbe
addr16
push
mov
adc
push
add
movsl
test
mov
push
hlt
fisttpl
jmp
add
popf
sub
aaa
lea
jno
icebp
lret
dec
stc
jmp
and
scas
adc
jp
std
mov
xchg
sub
les
cli
daa
xor
sahf
sub
jne
jge
mov
stos
jmp
lds
lcall
repz
jno
xchg
jmp
mov
movsl
xchg
imul
lods
ljmp
jno
cmp
dec
pop
pop
sub
pop
mov
ds
in
scas
inc
int
mov
addl
and
lcall
cmp
add
lods
and
or
jb
mov
mov
jle
push
cli
aad
out
arpl
movsl
nop
and
cld
sbb
fisttpll
iret
orb
push
jne
push
jne
lcall
mov
das
cmp
add
lret
bound
push
pop
scas
out
or
repnz
test
cmp
adc
inc
sub
fsubrs
pop
rorl
loop
movsb
or
pop
mov
sub
adc
push
inc
pop
imul
notb
call
adc
add
jmp
outsb
push
pop
xchg
stc
fidivrl
push
rcrl
mov
pop
out
xor
push
sahf
mov
jnp
and
dec
inc
push
add
inc
xchg
loop
scas
push
out
and
adc
hlt
gs
fadd
xchg
dec
movsb
fcomps
push
cmpb
fs
xchg
pop
pop
movsb
xorb
add
gs
mov
jnp
ret
dec
ja
dec
sub
iret
out
cs
stc
pop
push
cltd
jl
xchg
in
xchg
jp
std
jp
and
mov
jmp
xor
sbb
jbe
js
push
movsl
cmp
sub
es
dec
nop
mov
pop
sub
jmp
or
cmp
pushf
push
daa
and
loope
imul
mov
jg
stc
pop
mov
aam
mov
or
or
movsb
addr16
out
push
jne
out
jae
lds
imul
mov
jnp
mull
sarl
sub
fnsave
fsubs
jle
repnz
push
pushaw
or
inc
lcall
jns
pop
lock
out
add
fiaddl
adcl
adc
sbb
mov
mov
mov
pop
sub
imul
pop
inc
lods
cmp
test
mov
out
jne
lcall
stos
arpl
out
test
clc
pop
mov
ss
outsb
test
xor
mov
enter
lock
add
jg
xchg
cwtl
xchg
rcrb
xor
xchg
dec
in
rcl
or
mov
das
lods
xchg
sub
call
push
sbb
movsb
cmp
iret
dec
mov
cmp
dec
icebp
mov
jae
mov
xchg
test
repz
pop
decl
aam
xchg
scas
pushf
adc
or
imul
push
jmp
mov
pop
sbb
scas
cmp
in
mov
adc
stos
push
inc
mov
mov
fcompl
or
int3
addr16
push
ss
jae
sub
iret
xchg
mov
cmp
fs
lea
andl
xchg
test
rcl
imull
test
inc
sbb
pop
fcompl
daa
xor
das
dec
loop
jp
push
xchg
or
mov
ljmp
cmp
cmpsl
popf
pop
pusha
add
add
pop
scas
clc
repz
mov
movsl
adc
mov
rorb
cs
pop
ret
ss
cld
dec
ret
sbb
xor
xchg
lcall
xchg
sahf
add
lods
xor
out
cli
xchg
mov
fiadds
call
xchg
jecxz
mov
push
int
pop
dec
mov
pmuludq
popa
iret
sub
xchg
outsb
or
aad
imul
out
mov
and
sub
jne
repnz
sbb
sbb
mov
xor
fs
out
aas
jbe
dec
mov
fcoms
cmp
mov
iret
xchg
fisubrs
lret
jne
test
dec
or
pop
sbb
mov
cld
fbstp
hlt
and
gs
jge
sti
and
repz
aaa
mulw
data16
repnz
pop
sarb
jns
jmp
jo
mov
insl
cmp
mov
test
xchg
inc
cmp
jo
cltd
inc
imul
std
int3
int3
mov
lret
push
jnp
mov
pop
fcomps
ss
push
adc
jo
adc
sahf
jecxz
push
mov
ja
and
aaa
dec
adcl
jecxz
loopne
cmpsl
sbb
nop
pusha
rcl
mov
jp
imul
fisttpll
add
push
jp
mov
push
lds
inc
mov
das
cld
mov
jae
mov
fsincos
and
push
push
lods
pop
mov
adc
fwait
out
xor
or
or
mov
mov
jns
paddsb
mov
je
outsb
loope
and
xor
sar
pusha
and
fisttpl
push
call
dec
stc
cmp
stc
adc
xchg
pusha
aad
mov
gs
ret
sti
movsb
add
in
lods
add
pop
neg
xorl
fndisi(8087
pop
rcll
pop
fdivrl
data16
mov
loopne
push
cltd
push
aam
sub
fdivrl
gs
sbbl
or
cmp
loop
and
rcll
jbe
cmpsl
test
gs
loop
test
push
cmp
in
xorl
and
jge
sub
mov
dec
aam
add
subl
push
frstor
dec
inc
std
and
xchg
in
inc
loop
stos
dec
inc
xlat
push
cmc
jmp
ja
pop
pop
in
daa
or
cmp
jge
push
stos
in
xchg
fucomip
pushl
sahf
cld
inc
adc
fisttps
sbb
and
and
shl
and
in
daa
inc
ficompl
jmp
and
inc
jnp
xor
xchg
mov
sbb
into
jnp
mov
out
ljmp
ljmp
les
lods
ljmp
insl
fisttpll
out
add
pop
xchg
scas
dec
cmp
fisubs
xchg
arpl
js
les
xchg
iret
mov
xchg
pop
pushf
cld
inc
aam
ja
out
arpl
push
or
mulb
jo
inc
test
push
or
mov
adcb
and
xchg
rcrl
sbb
dec
idiv
mov
icebp
pop
ds
test
lock
mov
dec
movsl
fisttps
sub
or
jae
xchg
push
sub
mov
push
fucom
xor
lret
hlt
xlat
sub
ret
jp
lds
lds
add
xor
adc
in
inc
insb
mov
jge
lret
lret
lret
or
pop
sub
xchg
cs
mov
push
ljmp
testl
jmp
jns
fcmovbe
mov
jo
xchg
sub
cld
popf
or
cltd
pop
cmc
lret
inc
jecxz
lock
and
add
gs
test
xor
xor
and
jns
cs
hlt
add
xorb
jl
jp
sbb
jnp
inc
leave
fistpl
add
xor
and
add
aas
xchg
jecxz
sub
cli
lahf
xor
xlat
sub
test
je
pop
leave
fs
int
je
clc
addr16
jb
pop
stos
push
fmuls
inc
sbb
mov
and
jbe,pt
fsts
xor
mov
cmp
jg
mov
mov
dec
clc
xor
cmc
pop
imul
add
sarb
stos
inc
mov
xchg
dec
pop
int
add
out
sbb
dec
pop
mov
dec
scas
add
jecxz
jnp
and
cmc
jle
enter
subb
push
sub
pop
repz
ljmp
rorb
mov
sbb
inc
pop
ss
bswap
imul
sub
sub
dec
imul
xchg
stos
and
mov
pop
imul
fwait
stos
ret
mov
xor
sbb
loope
push
dec
out
dec
aaa
cmp
cmp
push
inc
lods
ds
sbbb
xchg
decl
xor
outsl
pop
xchg
sbb
ja
push
cs
icebp
jns
into
shrb
mov
pop
lods
ljmp
pushf
pop
mov
out
rolb
pop
mov
jnp
sbb
jo
ja
adc
sbb
sub
repz
mov
adc
shr
adcl
pop
mov
aad
sub
xchg
imul
scas
pushf
jg
sbb
dec
lcall
and
mov
sbb
mov
adc
sub
gs
xlat
sahf
and
shll
sub
fs
sbb
jns
adc
lock
sbbb
ja
sub
outsb
test
pop
lds
xor
xchg
mov
bt
addr16
movsl
jp
pop
sti
push
test
out
test
pushf
jecxz
enter
sub
xchg
pop
adc
mov
iret
or
bound
scas
fcomip
mov
cmp
outsl
pop
pop
mov
mov
mov
mov
cwtl
cmpsb
adc
pop
jp
subb
cs
cmc
push
jmp
add
jns
adc
imul
arpl
ja
stos
inc
add
lods
loopne
aad
ret
orb
mov
scas
push
or
or
sbb
or
pushf
ret
cmpsb
mov
sub
stos
inc
mov
adc
dec
dec
push
loope
xchg
aaa
add
xchg
sbb
rcl
int3
push
out
sbb
mov
xor
inc
shl
xchg
scas
xchg
fimull
fbstp
push
ret
mov
into
and
mov
cwtl
mov
cmpsl
pop
dec
rorl
daa
popa
flds
aaa
pushf
dec
aam
lret
pop
pop
mov
jmp
sub
fwait
xchg
push
jl
sub
push
pop
loope
out
sbbl
gs
xchg
xchg
sub
adc
cmp
push
ds
arpl
xchg
inc
les
xlat
cmp
daa
mov
test
xchg
add
xor
fdivs
lahf
outsl
xchg
test
pop
jg
lret
xlat
outsb
cmpl
insb
fsubrs
add
sub
mov
dec
xor
ficompl
repz
push
mov
in
jnp
popf
push
add
stos
mov
enter
xor
push
and
push
inc
nopl
imul
ja
pop
test
xchg
sub
mov
popf
xchg
cmp
cs
divb
pop
push
adc
jge
push
nop
daa
jno
cmp
or
mov
data16
push
bound
aam
sub
mov
bound
sub
inc
test
ljmp
outsl
aas
pushf
push
add
or
popa
faddl
sahf
lcall
imul
popf
je
dec
into
in
outsl
dec
push
cmpps
and
iret
dec
pop
out
jg
mov
xor
bound
mov
push
aam
push
notb
stos
jns
ljmp
movsb
loope
or
ret
and
xor
cmpl
repz
popa
jmp
fcmove
xor
fs
rcll
in
and
in
call
pusha
test
je
cmp
jg
insl
pop
jge
adc
mov
cmp
pop
test
push
cmc
aad
out
sbb
add
inc
dec
loopne
lea
das
test
shrb
xorb
ds
mov
or
inc
pop
imull
out
rol
jne
repz
gs
mov
inc
xchg
jae
jae
mov
es
fcmovu
mov
lock
mov
fiaddl
ret
add
push
mov
xchg
in
add
imul
fwait
pop
rclb
scas
nop
lret
ret
or
mov
mov
push
mov
and
movsl
jp
ds
outsb
bound
sbb
cmp
jecxz
dec
fs
es
xor
btc
mov
sub
push
rclb
sahf
ja
jmp
jmp
add
lods
int3
mov
push
test
fldt
daa
mov
mov
ret
sbb
jns
push
jecxz
shrl
jo
xchg
scas
test
mov
pop
ret
push
and
push
cmpsb
inc
ljmp
dec
lea
fisubl
or
push
dec
divl
or
jb
jnp
mov
xor
push
cld
cmp
jns
mov
stc
mov
loop
popf
add
mov
push
stos
sub
in
inc
or
mov
xchg
adc
mov
xchg
xchg
jmp
lods
sar
ds
push
cmpb
sub
loop
test
add
fisubrl
cmp
clc
xchg
test
loop
test
fldcw
je
sbb
jg
sbb
xchg
pop
jl
inc
scas
mov
jae
fucom
shrl
mov
or
ljmp
dec
sub
mov
cmp
inc
aad
out
sub
pop
pop
ficompl
std
fbstp
fadds
stos
xor
inc
out
popf
out
jp,pn
add
dec
repz
scas
pop
cmp
jmp
pop
adc
rorb
jne
push
sub
sbb
jb
xchg
ret
mov
cmp
mov
stc
test
dec
imul
cwtl
jae
cmp
cs
mov
mov
jle
imul
xor
push
stc
gs
and
xchg
sub
daa
add
jb
push
cwtl
negl
or
or
sub
fwait
xor
stos
in
popl
jge
sbb
cmp
fistl
test
sarl
leave
shl
adc
daa
repnz
and
dec
jp
scas
aaa
jno
enter
cmp
ds
pop
test
mov
xchg
xchg
out
inc
sbb
les
ret
xor
mov
mov
jo
mov
lods
dec
jg
jg
jo
pop
gs
sbbl
std
sarl
pop
sbb
in
imul
popf
leave
fwait
and
mov
mov
popa
cs
lods
inc
jmp
std
mov
dec
push
inc
pop
fiadds
and
mov
les
add
outsl
or
sbbl
fsubrs
cmovns
fldcw
scas
push
or
testl
bound
out
cmpb
xor
xchg
push
sbb
mov
fdivs
or
pop
mov
cmp
pop
icebp
movsl
aas
insl
mov
scas
dec
aaa
or
jmp
pop
dec
repnz
xor
shl
jmp
int
inc
dec
mov
pop
bnd
std
shrb
pop
pop
xchg
push
jns
xchg
or
cltd
idivb
int3
cmp
cmp
insl
add
popf
mov
fstpl
sbb
outsb
shll
cmpsb
in
jl
subb
xchg
daa
mov
jge
rcl
scas
xlat
fwait
movsl
jo
mov
adc
xchg
cmp
mov
cmp
out
cld
xchg
outsb
sbb
push
mov
in
mov
les
inc
mov
mov
xor
inc
ds
out
jmp
xchg
mov
sbb
jp
scas
sbb
ret
add
adc
dec
dec
dec
sbb
xlat
insb
aad
sahf
clc
dec
pop
movsl
insb
sub
or
mov
xor
out
dec
fisubs
repz
or
fnstsw
arpl
push
stos
and
pushf
add
pop
sbb
xor
movsl
ljmp
cltd
das
mov
fnsave
cld
cmp
pop
subl
cmpsb
cmp
scas
xchg
shl
sar
push
mul
dec
add
popf
fistpl
rol
movsb
jg
jg
insb
push
mov
out
jbe
jle
adc
inc
lea
lea
adcb
cmpb
add
push
pop
mov
xchg
sub
lods
push
jne
lahf
scas
xchg
sarl
xchg
pop
je
hlt
push
inc
sbb
dec
and
add
outsb
enter
insl
dec
mov
xchg
pop
adc
push
jo
pop
cmp
mov
lods
popa
gs
cmp
xorb
stos
xor
dec
xchg
int3
push
jmp
inc
enter
mov
xchg
fidivs
incb
and
jne
mov
push
cmp
lcall
xchg
dec
sub
cli
in
jb
mov
mov
jge
dec
fbstp
mov
icebp
push
mov
repz
sub
outsb
pop
push
jle
test
cvtdq2ps
or
jbe
xor
in
pop
cmp
push
imul
sub
negb
cmc
gs
add
xlat
into
fisttps
lods
movsl
pop
movsl
jmp
jg
es
fucomp
cli
push
cld
rcrl
in
pop
mov
fisttps
sbb
int3
pop
int
incb
in
lcall
fidivl
mov
jbe
xchg
pop
stos
ret
clc
mov
fbstp
inc
lahf
xlat
insl
arpl
aas
dec
popf
test
mov
fildll
adc
ss
out
push
mov
in
lret
jne
jo
xchg
xchg
inc
fcmovb
nop
xchg
push
fmuls
cmp
stc
fnsave
icebp
sub
in
loope
iret
add
add
popa
cmp
scas
int
adc
andb
stos
loop
fmuls
and
ficoms
push
loopne
sub
add
xchg
mulb
mov
push
dec
imul
sbb
outsl
push
stos
mov
xchg
pusha
inc
cld
js
sbb
mov
mov
aas
xchg
mov
cmp
adc
pop
push
fdivr
ret
push
es
xor
mov
xchg
adc
mov
ljmp
jmp
arpl
mov
nop
pop
add
iret
sub
loope
mov
dec
or
hlt
cmp
jae
sub
and
mov
mov
and
imul
mov
and
popf
adc
and
rcl
push
push
notl
scas
jno
das
xchg
jbe
test
dec
shll
push
or
mov
inc
sub
daa
push
in
out
xchg
pop
jbe
mov
rcrl
mov
in
fbld
lcall
or
sub
call
mov
pushf
jge
in
jg
push
test
jecxz
xchg
jae
mov
jno
scas
inc
mov
or
fdivrs
cmp
cmpsb
push
xchg
and
int3
push
scas
cmpl
int
rcrb
sti
add
inc
leave
and
push
adc
shl
cmpl
je
repnz
push
add
or
test
aam
imul
shl
jo
cmp
testl
dec
dec
inc
mov
out
addr16
test
movsb
popl
es
push
cmc
test
cltd
push
cltd
xor
xor
or
shrb
nop
push
sub
xchg
xrelease
adc
test
xor
js
addl
inc
cmpsl
mov
dec
xchg
cmp
sahf
or
mov
fstpl
mov
mov
pop
movsl
pop
repz
sarl
cmpsb
cmp
dec
inc
inc
mov
out
pop
rorb
repnz
loopne
aaa
inc
xchg
movsb
popf
lods
and
dec
dec
insb
nop
loop
xor
in
push
ret
pop
cmp
daa
dec
insb
aad
lahf
inc
std
pop
mov
les
adc
cmp
jo
lret
stc
and
addr16
scas
test
mov
xor
ljmp
xor
jecxz
push
sbb
pop
jmp
and
lods
cli
testb
or
and
jno
stc
jae
popa
rclb
xchg
mov
sub
popf
sbb
ficompl
mov
lret
jge
pop
xor
push
fimull
push
std
xor
cmpsl
jae
adc
and
mov
std
nop
dec
jo
xor
dec
mov
je
pop
xor
pushf
pop
jae
pushf
inc
push
mov
jg
sub
sub
outsl
es
lods
jae
test
rorl
sbb
in
fidivs
dec
sub
sahf
xor
dec
pop
inc
call
test
das
cmp
test
lods
pop
stc
sti
lret
pop
gs
and
adc
mov
dec
ja
fsubl
cmpsl
xchg
dec
xchg
mov
sahf
push
shrb
in
inc
pop
movsb
inc
add
mov
clc
jbe
movsb
ret
scas
ds
dec
push
cwtl
xchg
cmp
das
in
cwtl
and
pop
lret
and
and
lods
inc
dec
xor
inc
in
in
jne
dec
mov
dec
les
ret
in
adcl
jne
das
test
sub
outsl
ret
jl
shlb
dec
call
mov
data16
add
scas
lcall
cmp
outsl
out
push
sbb
push
movsb
hlt
mov
and
xchg
and
dec
enter
test
or
cmp
mov
nop
sbbl
mov
pop
loop
sbb
rep
fbstp
mov
rorl
xrelease
into
popa
ffree
pop
addr16
xor
cmc
gs
test
lcall
ja
xor
push
js
out
or
xor
hlt
pop
push
int3
cwtl
pusha
jae
mov
pop
sahf
fcmovb
push
jp
cmp
test
xor
sti
adc
mov
add
sub
sub
test
jae
sub
movsb
into
mov
mov
or
mov
mov
lods
call
test
mov
arpl
push
fidivs
xchg
pop
repnz
push
fyl2xp1
sbb
mov
scas
aad
sbb
roll
ficoml
scas
dec
push
or
rorb
pop
and
es
push
pushf
pop
dec
push
add
fldl2t
sbb
punpckhbw
adc
cmp
pop
cmp
sbb
adc
sti
inc
stos
inc
jnp
fcoms
scas
mov
jnp
je
dec
dec
adc
in
mov
cmp
leave
imul
dec
jns
sub
inc
jne
loope
cmp
leave
int
sub
pop
pop
mov
xchg
lea
cmpsl
push
out
scas
pop
cmp
shll
dec
xchg
add
mov
jno
xchg
push
out
or
mov
mov
dec
loopne
je
movsb
xchg
cmpsb
cmp
stos
rcrl
lret
push
out
test
mov
xlat
sti
aam
xchg
cs
dec
xor
cmc
dec
dec
test
cmp
es
pop
push
add
pop
xor
sbb
adcb
fsubrl
mov
fisttpll
call
mov
addr16
or
inc
xor
push
roll
jmp
call
pop
xor
fwait
lcall
das
hlt
cmp
add
dec
jns
dec
in
sbb
ds
mov
pop
sub
mov
sub
in
push
rorl
testl
fisubl
insl
sbb
adc
cwtl
sub
repz
pop
and
int
pushf
inc
ja
pusha
test
lahf
push
bound
jle
cld
xchg
lods
inc
aad
and
sti
lods
xchg
dec
sbb
cltd
push
push
int3
arpl
cmpsl
ljmp
lahf
push
in
xchg
andb
push
shlb
sbb
and
cmp
adc
push
fstl
adc
adc
mov
loop
fsubl
pop
hlt
push
std
testb
xabort
clc
inc
or
call
mov
adc
mov
xor
lock
loope
pop
mov
add
icebp
movsl
cmp
shl
cmp
cmpsl
scas
pop
sub
lahf
pusha
insb
cmp
pop
mov
inc
sti
jbe
dec
mov
rcl
insb
mov
push
iret
fldt
loopne
xor
jo
push
aaa
xor
push
push
inc
sbb
mov
push
in
test
imul
filds
ss
cltd
add
lcall
xor
or
mov
mov
popf
mov
add
ja
dec
sti
push
pop
inc
xchg
mov
out
test
xchg
in
sub
adc
pop
and
icebp
fildll
pop
mov
and
cmp
push
insb
pop
aaa
into
dec
icebp
je
mov
cmp
sti
or
jno
pop
jae
push
push
addr16
mov
in
ds
clc
cmpsb
cwtl
xchg
out
movsb
out
xchg
test
outsb
arpl
hlt
insb
les
push
add
and
inc
scas
inc
addr16
and
insl
div
push
and
movsl
pop
cmpsb
movsl
lea
add
mov
and
push
mov
decb
divl
push
fistps
dec
mov
sbb
and
shrb
dec
jns
fwait
jl
out
pop
xchg
in
jo
pop
jb
push
cmp
cli
jg
leave
clc
or
mov
sbb
mov
push
ljmp
into
imul
push
test
push
push
cmp
cli
mov
cmp
fwait
pop
aaa
pop
ljmp
movsl
dec
dec
sbb
in
sub
fistpl
rcrb
pop
add
sub
mov
xor
jno
fsts
sbb
push
lods
push
xchg
test
popf
pushf
push
movsb
sbb
test
outsb
mov
xchg
xorl
lock
iret
push
imul
insl
lahf
add
vmovmskps
fildl
das
addr16
jo
push
ret
add
mov
aad
and
cmc
xchg
cmc
pop
cmp
std
dec
testb
cmp
gs
das
pop
dec
stos
cld
xchg
fsubrl
add
inc
test
and
subb
imul
outsl
cltd
xchg
push
mov
popf
fwait
lcall
clc
adc
movl
adcl
data16
add
dec
shr
ret
add
mov
pop
imul
pusha
mov
mov
mov
jecxz
lock
ret
mov
das
test
jecxz
btc
mov
lock
out
je
adc
and
or
test
ss
add
adc
pop
lock
and
movb
jl
iret
jne
out
push
insb
js
push
adcl
test
and
das
lds
mov
insl
or
cmpsb
sub
adc
pop
inc
mov
xchg
pop
addr16
sbb
dec
and
cmpsl
outsl
les
mov
dec
incb
push
sbb
enter
std
cs
dec
mov
push
test
sbb
cmpsb
cmp
imulb
aam
inc
shrl
aam
xor
cltd
movsl
jo
cmpsb
mov
mov
cmp
lret
lret
repz
ljmp
mov
dec
divps
dec
mov
mov
or
shll
out
repz
scas
mov
jmp
mov
daa
popa
and
mov
aas
and
loop
enter
fistpll
les
popa
stos
xchg
mov
ss
adc
xchg
jbe
dec
mov
je
lahf
xor
in
aas
lock
cmpsl
pop
std
xchg
add
push
shll
leave
ret
jbe
fimull
bound
sub
inc
xlat
adc
sub
xchg
add
push
stos
mov
push
ret
adc
gs
or
jmp
nop
enter
jno
inc
pop
shl
and
or
scas
cmp
fbld
mov
xchg
data16
mov
push
push
inc
in
xchg
dec
in
jmp
adc
mov
add
daa
jae
arpl
xchg
repnz
push
sbb
push
pop
push
icebp
mov
aas
out
sub
in
and
test
jo
jg
popa
clc
xor
xchg
imul
ja
pop
test
lcall
js
cmp
xlat
pop
enter
push
or
rclb
xchg
add
mov
jl
loop
fwait
push
jno
mull
push
jle
sbbb
and
sti
scas
mov
repnz
ja
pop
idivl
mov
and
imul
jne
xchg
fs
pop
in
scas
popa
push
shlb
pop
icebp
jns
ret
lcall
sahf
hlt
sbb
daa
push
pop
jb
jo
sub
stc
cmp
add
jge
leave
cmpsl
push
or
cmp
sub
mov
mov
push
arpl
mov
or
outsb
idivb
cmpsl
imull
xchg
dec
testb
aad
loope
xchg
scas
add
sub
int3
push
adc
scas
mov
ja
lods
in
cli
xchg
lret
jp
push
adc
adc
xchg
jmp
or
inc
pop
fbld
xchg
scas
push
xor
lods
rclb
mov
or
pop
lock
mov
inc
push
xor
out
aas
popf
mov
sbb
fsts
pop
je
push
shlb
daa
lods
dec
and
push
outsl
fs
xchg
sub
cli
mov
mov
pop
mov
stc
xor
lea
xlat
adc
sahf
xor
pop
int3
in
clc
std
inc
in
and
sti
roll
pop
ja
push
xchg
pop
xor
inc
xor
into
gs
jecxz
push
push
sub
cmpsb
mov
inc
xlat
hlt
and
inc
push
cwtl
lea
ds
fmull
inc
repz
adc
sar
ds
dec
xchg
mov
xchg
push
int
enter
pop
fisubs
mov
in
sbbl
into
movsb
pop
jo
add
add
xchg
jae
push
sahf
mov
jo
lea
push
jns
mov
int
adc
or
enter
jge
and
fidivs
pop
lock
js
es
and
mov
cwtl
das
inc
lods
loop
dec
adc
cmpsb
cmp
add
hlt
and
test
cmpsl
ret
js
adc
lret
fldcw
push
sbb
loope
in
jecxz
or
adc
push
xchg
jmp
rcrb
jnp
pop
stc
rorb
cmpsb
or
cwtl
mov
outsb
cmpl
xlat
rcr
mov
jecxz
sarb
and
cli
xchg
popf
lods
lds
xchg
insb
inc
negb
shlb
pop
adc
mov
clc
in
lahf
test
std
jae
rclb
out
xchg
fstpt
rcrl
xlat
outsb
and
mov
or
xchg
xchg
fsubs
mov
stos
sbb
mov
aaa
into
fstp
testb
scas
push
in
fbld
sbb
push
push
movsl
xchg
adc
ja
or
mov
push
mov
sbb
and
cld
mov
stc
xchg
add
inc
sbb
sbb
mov
nop
daa
jo
jle
arpl
push
xchg
cmpsl
push
or
test
dec
push
test
xor
sahf
jl
lds
sbb
scas
and
pop
icebp
jp
loopne,pn
das
inc
in
inc
pop
out
jno
in
pusha
pop
scas
jbe
loope
cmp
push
dec
or
outsl
push
cli
lret
cmp
inc
ss
xchg
leave
je
je
mov
pop
adc
jle
xor
orb
out
and
lahf
mov
and
or
mov
std
cmp
fcoml
lret
mov
and
pop
add
xor
dec
and
std
lock
cs
push
jmp
fld
loopne
in
jb
mov
stc
shlb
les
loop
addr16
sbbl
push
and
mov
xor
cmp
push
cmp
and
xor
mov
mov
jns
fisubrs
jle
int
mov
pop
aad
outsl
add
sarl
subl
push
push
inc
mov
and
lret
test
aad
cmp
xor
mul
shrb
aas
adc
add
lahf
jb
sub
ljmp
cmp
cs
xchg
rcll
inc
call
cmp
mov
mov
push
push
mov
mov
aas
repnz
lret
es
outsb
mov
xor
daa
inc
mov
mov
mov
ljmp
ss
pop
dec
dec
or
cmp
sub
sbb
pop
and
dec
jecxz
xchg
mov
int3
xchg
out
inc
dec
in
jo
jl
das
mov
lea
jle
mov
pop
fidivs
dec
sbb
xor
cld
sub
std
dec
and
call
mov
test
dec
mov
jnp
andb
stos
cmc
mov
cld
insb
in
sbb
pop
and
aad
leave
das
pop
addr16
jo
sbb
mov
dec
mov
repz
pop
xor
cmp
push
mov
mov
in
push
lods
xchg
mulb
in
loopne
out
roll
lcall
cmp
push
scas
adc
stc
dec
xchg
fidivrl
lahf
inc
mov
in
fnsave
xchg
jbe
or
lret
push
xchg
daa
pop
lret
int
mov
sbb
cmp
push
and
cmp
xchg
sbb
or
and
and
loop
scas
dec
cwtl
sbb
psrad
mov
and
pop
and
adc
cmpsl
adc
push
lods
push
cltd
pop
into
mov
ret
cs
lods
inc
sbbl
into
cmp
sbb
mov
jmp
cmp
data16
xchg
mov
mov
test
jle
out
cmpsl
int3
mov
push
cmp
push
xor
xchg
adc
iret
adc
daa
shr
mov
loopne
lea
cmpsb
xor
mov
push
loopne
xchg
push
dec
sbb
cmp
std
add
mov
daa
sbb
inc
in
in
xchg
xadd
jae
pop
inc
adc
inc
jno
cmp
push
ficomps
or
xchg
fst
xchg
sub
shl
mov
cwtl
in
repz
in
push
mov
cmp
out
ss
push
ljmp
insl
mov
pop
test
sahf
sbb
mov
cmp
sahf
loope
inc
push
and
push
test
adc
sbb
add
div
movsb
cmp
sbb
mov
pop
hlt
jmp
cld
jnp
test
mov
jp
mov
js
mov
or
leave
ds
lcall
daa
cmp
mov
jge
lcall
sbb
stos
scas
mov
iret
sub
test
or
fisubl
mov
mov
push
lods
andb
mov
xor
xchg
cmpsl
pop
xor
movsb
cwtl
js
lock
push
jecxz
pop
int3
mov
rol
jp
and
mov
pop
cmpsb
movsl
adc
mov
es
add
xor
in
sar
cmp
dec
lcall
lods
dec
cmpsl
lahf
ror
arpl
jg
mov
adcb
xchg
push
lret
scas
test
iret
pop
jmp
mov
pusha
xchg
rcr
cmc
neg
push
sbb
or
data16
or
ret
pushf
lea
dec
cmp
adc
cmp
adc
or
and
cld
adcl
shrb
xlat
cli
xchg
pusha
jge
loopne
pop
cmp
xorl
loop
in
sub
pop
dec
dec
enter
cmp
pop
divb
cmp
xchg
mov
leave
test
setle
mov
test
sub
fcmovb
fidivrs
or
rcrb
nop
inc
mov
adcl
xchg
orl
andl
call
adc
addr16
popa
mov
xor
jecxz
jmp
fmulp
inc
aas
dec
jbe
mov
xchg
adc
lret
aaa
cli
xchg
cmpsl
xchg
jae
xchg
leavew
ss
je
imul
imul
stc
in
push
xor
xchg
imul
pop
mov
jecxz
push
mov
and
xor
jg
adc
rcrl
out
hlt
dec
jae
in
aas
jge
adc
addr16
or
mov
test
adc
inc
sbb
gs
cmp
stc
notb
cmp
gs
adc
sub
scas
outsb
jnp
flds
add
push
pop
mov
hlt
adc
sub
push
mov
aam
clc
icebp
pop
cmp
sbb
mov
sub
pop
push
xlat
jle
pop
cli
xor
scas
jp
xor
jmp
jmpw
rcll
test
shrb
xchg
dec
adc
aad
cmp
orb
push
test
inc
pop
imul
mov
loopne
sahf
push
jmp
or
es
cld
adc
into
insl
sahf
ja
insl
cmp
dec
xor
addr16
push
insl
adc
lcall
cs
jb
jle
pushf
xchg
imul
into
inc
mov
popa
push
jmp
das
xor
cmp
add
aad
lods
fwait
push
or
pop
ljmp
idivb
mov
sarb
shrb
sti
pop
push
pop
dec
mov
idivl
fildll
or
xchg
mov
mov
aam
in
push
and
dec
mov
cld
aas
std
inc
cmp
in
fildl
inc
or
movsb
fwait
xor
add
lea
inc
push
pusha
test
xchg
jns
pop
lock
sahf
xchg
ja
inc
ja
inc
loop
adc
testl
and
stc
inc
fcoms
add
adc
ss
pop
jg
push
adc
lea
xor
mov
notl
filds
les
gs
call
cmp
and
mov
sbbb
dec
pop
jns
jmp
fs
jp
test
repnz
mov
and
sbb
outsb
and
mov
mov
mov
es
inc
mov
push
dec
loope
add
sub
mov
push
les
pop
mov
sub
jb
shrl
xorl
in
rorb
jecxz
mov
sarl
xchg
adc
sbb
mov
ret
repz
mov
int3
leave
pop
dec
jbe
dec
push
sti
xchg
dec
pusha
lret
repnz
jmp
sbb
in
dec
lock
pop
nop
mov
mov
dec
dec
xor
push
leave
das
cmp
jne
fisttps
mov
sarb
int3
arpl
jmp
int3
push
popf
stc
fistl
xor
mov
mov
push
notl
fdiv
int
jecxz
cmp
push
or
and
or
and
mov
or
jge
jl
test
lret
sub
inc
fisubl
inc
popa
clc
cwtl
xchg
pop
das
fdivrs
xor
add
fistl
fstpl
inc
mov
add
insb
aam
add
dec
mov
dec
pop
mov
pusha
sub
das
call
dec
loopne
lods
push
lods
pushf
movsb
addr16
push
lods
pop
or
sub
stos
es
sub
lods
sub
push
adc
xchg
sub
push
mov
iret
pop
xor
js
aaa
mov
xchg
sbb
les
leave
mov
cltd
jo
jmp
jmp
mulb
inc
add
cmp
jns
daa
pop
mov
lds
xor
fs
pop
cmp
and
sbbl
call
push
sbb
cmp
xchg
cmpsb
jge
loope
push
imul
sbb
mov
mov
mov
out
sub
std
sbb
ds
pop
imull
test
add
push
fbstp
cld
mov
rorb
sub
add
xor
movsl
fwait
lret
xchg
dec
jnp
clc
bound
adc
lds
jo
outsb
fsubrs
mov
rorb
popa
int3
mov
xchg
repnz
int3
outsl
daa
cmpsb
in
mov
xor
push
mov
mov
lds
xchg
jbe
or
testl
cli
cmpsb
mov
xlat
fcmovne
mov
out
fs
repnz
jb
mov
jne
sbbb
adc
neg
stc
int3
gs
jl
lret
in
icebp
sbb
popl
mov
ret
fdiv
stc
cmp
dec
dec
pop
enter
test
lds
mov
cli
xchg
inc
dec
adc
mov
push
pop
pushf
xor
shrl
test
sti
mov
enter
std
std
shlb
sub
inc
notl
or
fisttps
mov
pop
in
push
add
cmp
mov
fisttpll
pop
jb
imul
sbb
test
pop
push
cmpsl
adcw
dec
mov
jl
outsb
movsl
aaa
push
in
xchg
ss
lods
cmp
inc
push
xor
dec
mov
fldt
push
cwtl
sbb
or
orl
mov
repz
std
clc
enter
mov
fnsave
pop
pop
imul
aas
lods
repz
sbb
movsl
dec
insl
jp
les
lea
push
gs
cmp
pushf
das
mov
movsl
cmp
xor
adc
decb
and
js
test
push
aaa
into
dec
test
cmp
orl
test
pop
push
fidivs
pushf
pop
adc
push
scas
lea
bound
mov
ds
cmc
push
adc
scas
adc
les
mov
das
or
sbb
mov
lock
ret
int
push
jnp
add
push
push
push
jo
add
loopne
es
push
push
jb
and
lds
out
adc
leave
enter
sti
mov
xor
jmp
xlat
xchg
dec
lret
push
mov
push
imul
dec
sbb
cmc
insb
lds
or
mov
push
pop
mov
push
cmp
sub
push
imul
jae
xlat
aad
ja
cmp
jbe
sbb
data16
dec
mov
incb
mov
aaa
icebp
enter
cmpl
popa
clc
inc
das
cmp
mov
call
aad
mov
lret
jne
push
into
int
gs
ljmp
nop
inc
out
in
outsl
pushf
sub
xchg
and
cmp
addl
cmp
fldcw
outsl
leave
adc
mov
jno
loop
inc
cwtl
or
pop
aas
shl
mov
xchg
cltd
iret
cmp
incb
cmpsb
adcb
adc
mov
xor
inc
leave
dec
push
mov
fistps
mov
popa
mov
mov
push
pop
mov
dec
clc
in
push
jp
pop
xor
loop
aad
xor
setg
mov
fistpll
inc
mov
divb
add
out
outsl
cmc
stc
and
insb
mov
inc
lcall
aad
ds
cmpsl
mov
les
pop
fbstp
popf
jge
push
idivb
xor
dec
rol
iret
xchg
shrl
lods
inc
hlt
mov
loope
pop
movl
ret
and
stos
stos
pop
and
int3
jb
or
out
testb
mov
pop
mov
add
jnp
mov
adc
loope
mov
fldcw
sahf
cli
dec
scas
neg
mov
xor
fdivs
movsl
mov
inc
xlat
cmp
aad
add
or
cwtl
jg
and
and
add
xchg
fucomi
mov
mov
adc
mov
je
adc
mov
xchg
pop
je
cmp
mov
gs
inc
fdivs
arpl
sbb
adc
leave
sbb
pop
iret
push
rorb
mov
adc
mov
call
roll
lahf
fiadds
or
jg
push
imul
xor
inc
ds
jge
cmp
aas
popf
fldl
xor
xchg
mov
and
pop
or
dec
pop
stos
jnp
sti
xor
cmpb
icebp
pop
add
jecxz
sbb
stos
and
in
outsl
sbb
or
and
outsb
jl
fwait
lods
vphaddbw
imul
adc
add
mov
pop
mov
orb
icebp
xor
mov
jnp,pt
fidivl
jo
mov
jbe
mov
push
mov
shrl
inc
cmp
iret
cmpb
mov
pop
call
jmp
insb
push
mov
iret
test
and
mov
lods
cmp
mov
xor
and
mov
bswap
cltd
push
push
pop
outsb
xchg
scas
xchg
and
insb
push
mov
jne
lea
jg
nop
icebp
cmpb
js
in
test
lock
inc
aam
rol
jbe
mov
arpl
sbb
stc
and
rcrb
mov
or
cmpb
ljmp
bound
in
std
rcrl
mov
dec
dec
fnstsw
out
addr16
out
xchg
jmp
out
cltd
repz
sub
pop
xlat
out
jge
cwtl
mov
jae
out
test
icebp
repz
push
lock
xorl
fcmovne
gs
or
imul
jge
mov
icebp
mov
les
cmc
pop
ja
aad
ret
repnz
xchg
cmpsb
mov
repnz
pusha
cmp
fcomi
ror
jne
mov
imul
shl
mov
xchg
ret
rcrl
xor
jmp
adc
sub
mov
pop
in
mov
sub
mov
mov
roll
add
popf
mov
mov
fidivrs
imul
mov
dec
mov
cmp
mov
outsl
sti
pusha
mov
pop
aam
test
in
scas
out
sarl
inc
cmpsl
mov
push
inc
data16
mov
divl
mov
stos
jne
dec
mov
mov
rcl
jnp
sbb
sbb
mov
inc
and
insb
repz
nop
push
ret
inc
nop
lahf
daa
int3
and
xor
push
mov
xor
sbb
jecxz
xchg
pop
je
push
cltd
in
pop
mov
or
lret
bound
or
jns
clc
jns
xchg
cmp
fisttpl
icebp
mov
int3
cmpsb
xchg
pop
sub
push
jmp
in
pop
dec
aaa
jb
test
inc
testb
sub
jae
xchg
mov
pop
jbe
push
lods
mov
or
push
sub
mov
les
shrl
pop
ret
push
shlb
pop
icebp
mov
repz
jmp
fimuls
push
inc
pop
mov
pop
ds
xchg
mov
add
mov
lret
push
or
inc
or
lret
jge
es
sub
jae
ss
push
rcll
push
dec
and
bound
ss
xchg
icebp
sbb
push
daa
push
push
pop
outsl
loop
cld
and
test
adc
add
sbb
pop
pop
mov
fisubrl
popa
fcomps
bswap
imul
pop
clc
mov
dec
cmp
pop
repnz
and
loop
pop
call
mov
add
and
inc
test
arpl
push
shl
fs
add
lcall
loop
inc
fcomps
ljmp
or
push
sbb
or
outsl
adc
mov
insb
icebp
movsl
les
into
int
not
std
das
jecxz
xor
enter
cmp
out
aaa
cmp
jne
loop
icebp
fldenv
add
push
add
daa
xchg
cs
mov
iret
cs
pop
add
stc
dec
mov
inc
or
cmp
add
pop
xor
outsb
cmp
adc
mov
mov
adc
adc
push
push
movsb
call
xchg
sahf
subb
or
aas
jb
xchg
xor
mov
es
or
mov
cmp
clc
pushf
jg
mov
mov
sahf
mov
daa
adc
jg
test
divss
popa
xor
xchg
cmp
mov
xor
xchg
or
insb
jecxz
bound
add
mov
xchg
add
push
test
js
mov
adc
push
pop
cs
int3
dec
push
jns
sbb
mov
std
or
push
lea
aaa
aas
insb
scas
icebp
inc
aas
xchg
test
inc
dec
dec
out
iret
xor
pushl
push
or
xchg
pop
inc
je
lahf
imul
in
or
push
jl
sub
pushf
and
jecxz
xchg
insl
into
xchg
pop
lea
sahf
ret
test
negl
jb
xor
fstpl
aas
inc
lret
icebp
sub
sbb
movsl
cld
add
insl
jle
mov
sbb
insl
or
imul
repz
dec
testb
mov
sbb
cmp
pop
stc
mov
adc
and
imull
xchg
jb
jo
mov
push
pop
nop
jecxz
add
pop
addr16
les
cmp
mov
les
adc
mov
cmp
jmp
cmp
pop
cmpb
adc
cmp
dec
xchg
mov
sahf
cmp
sub
pop
jae
jo
rorl
or
hlt
pop
mov
xor
dec
sbb
cmp
ljmp
push
xchg
cmp
cmp
cmc
push
push
fadds
xchg
gs
sub
jns
ret
outsb
andb
loopne
or
enter
pusha
cmp
jae
rcrl
adc
cli
xchg
bound
aad
adc
outsl
sarb
add
lcall
mull
or
sarb
out
out
les
mov
inc
dec
ds
imul
dec
or
add
sub
jp
negb
in
cmp
pop
aad
mov
inc
push
leave
cmp
in
pushf
adc
and
clc
inc
lcall
cmp
mov
mov
fdivrs
pop
lret
lods
sbb
hlt
movsl
mov
sub
mov
in
mov
cmpsb
mov
fdivrs
jl
pushf
push
leave
or
dec
iret
jmp
movsb
imul
mov
mov
ret
call
jecxz
pop
ficoms
jbe
sub
jecxz
jle
popa
call
mov
loopne
in
mov
mov
shlb
jae
or
cs
xchg
inc
sub
or
push
test
mov
aad
shll
jmp
pop
add
cmp
xlat
fbstp
add
ret
in
jae
roll
xlat
out
mov
cwtl
movsl
bound
or
jmp
or
dec
stos
mov
dec
pop
mov
mov
loope
cmp
in
cmpsl
stos
icebp
pop
inc
lods
jne
imul
push
mov
lahf
addr16
and
loope
jns
lds
stos
adc
sbb
outsl
daa
out
sbb
data16
pop
aaa
xor
ret
jle
xor
rcrl
jno
mov
mov
movsl
icebp
insb
adc
dec
shll
movsl
testb
jmp
pop
adc
push
testb
sahf
xor
lcall
mov
dec
jne
mov
ret
xchg
xchg
fdivrs
mov
movsb
pop
out
jg
fwait
sti
push
aad
or
fimuls
adc
pushf
les
aam
pushf
push
jno
call
mov
or
mov
adc
enter
jp
popf
loop
mov
stc
or
xchg
js
lock
cltd
pop
lock
pop
and
inc
adc
pop
inc
and
in
test
mov
xchg
sbb
js
or
pop
dec
dec
das
dec
pop
repz
mov
fcomps
push
popf
sub
xchg
mov
or
inc
adc
in
call
xchg
scas
lds
cmp
movsl
pop
xchg
sub
testb
hlt
sub
mov
xlat
and
mov
pop
stos
pop
pop
jne,pt
mov
test
pop
push
leave
mov
stc
xchg
dec
dec
adc
mov
decb
push
mov
fistl
fs
mov
test
mov
ficoml
lods
mov
push
xor
xchg
push
lds
int3
dec
fistpll
mov
sahf
clc
cmp
je
cmp
sub
jmp
lods
sbbb
iret
pop
imul
sbb
jne
call
mov
outsb
mov
fwait
cmpsl
add
outsl
out
out
mov
in
jns
fs
mov
shll
xlat
dec
aad
xchg
push
cmpsb
imul
sbb
in
pop
sbbl
aam
jp
loope
or
sbb
je
pop
in
push
aas
push
inc
sub
add
leave
push
mov
mov
and
jl
fistps
add
xor
sti
pushw
mov
push
jae
xor
call
cmp
xor
or
hlt
inc
dec
je
dec
cmpsb
or
push
fistps
xchg
adc
mov
popf
imul
ljmp
mov
jmp
mov
or
pop
sar
jae
or
dec
mov
mov
pop
cmp
xchg
mov
scas
inc
inc
les
mov
fsub
ljmp
sub
stos
dec
and
adc
subl
sbb
sbb
addr16
or
bound
repz
dec
lcall
pop
mov
xor
push
add
mov
mov
loopne
jmp
mov
mov
lret
mov
ret
dec
cmp
insl
add
xchg
jge
or
adc
fildl
xchg
push
lret
out
lock
lock
sub
imul
mov
cmpsb
int3
cmpsl
mov
dec
pop
mov
pop
dec
clc
push
cmc
mov
fsubs
xor
subl
inc
out
dec
js
xchg
mov
pop
push
daa
ss
fidivrs
stos
lods
pop
add
and
fsubr
lds
lahf
testl
ljmp
jno
or
sti
mov
sub
aad
cli
sbb
lods
pushf
daa
out
xchg
jae
nop
sub
pushf
pop
mov
mov
xchg
scas
mov
pop
out
aam
add
cmp
mov
pop
add
push
lds
ja
xchg
stc
cmpsl
cltd
inc
leave
xchg
movsl
cltd
je
mov
xchg
andb
sbb
mov
in
ret
pop
cmp
xchg
mov
xchg
popf
scas
dec
and
loop
fwait
in
mov
push
jbe
jg
inc
pop
sbb
push
inc
sti
into
popa
jbe
pop
jne
xchg
out
mov
cmp
arpl
bndstx
mov
es
fdivp
je
stc
lret
lret
xchg
movsl
jnp
sub
xlat
icebp
lcall
imul
jbe
or
and
xchg
les
push
xlat
outsl
sbb
bound
ss
in
inc
mov
and
mov
lcall
push
mov
out
sahf
adcb
fabs
dec
xchg
shrb
call
push
mov
aad
shlb
clc
cmpsl
scas
and
shlb
xchg
dec
inc
stos
pslld
mov
adc
add
fisubrs
xchg
xchg
movb
fstpt
xorl
xchg
fistl
lcall
pop
ja
and
xchg
xor
cmc
dec
xchg
in
adc
mov
pop
cmc
add
loopne
mov
mov
pop
jb
and
pop
cmp
xlat
out
add
daa
aaa
mov
add
lods
fists
adc
push
lods
mov
jo
jmp
iret
es
test
sbbl
pop
mov
inc
adc
jl
jle
mov
pop
add
xchg
fistl
nop
lcall
cmpsb
mov
cmp
pop
ret
pop
fnstsw
daa
jo
arpl
sub
pop
add
xor
mov
out
push
scas
mov
flds
aad
push
scas
pusha
lds
mov
cltd
pop
sub
mov
mov
pop
cwtl
jmp
arpl
insb
ljmp
cmp
or
addr16
cmpsb
cwtl
mov
mov
fwait
cld
add
lods
jp
enter
sti
ds
pop
out
mov
aaa
or
mov
sahf
inc
pop
lds
sbb
sub
or
push
lret
xor
adc
aas
sbb
pushf
push
sub
stc
movsl
out
cmp
dec
outsb
or
add
or
dec
fnsave
pop
xor
pop
sbb
jge
mov
fnstsw
mov
mov
aam
sub
adc
mov
fwait
push
and
call
imul
stos
cmp
cmp
add
mov
arpl
xchg
test
mov
pop
rol
lcall
jmp
repnz
push
push
mov
and
jg
pusha
aam
dec
lcall
hlt
stc
or
inc
xchg
sub
xchg
cmp
xlat
icebp
dec
mov
shr
xchg
repnz
daa
add
pop
stos
rol
cmp
cmpb
in
rclb
fstpt
jl
xor
test
fs
shl
int
divl
or
add
aam
das
push
fdivl
orb
mov
xor
xlat
dec
dec
stos
inc
test
mov
in
or
cmp
cmc
push
shlb
sti
popa
movsb
ja
insl
lods
xchg
cs
inc
mov
mov
imul
or
jl
cmpsb
scas
cld
dec
push
jp
jg
test
mov
testb
push
xchg
out
inc
push
and
cmpsb
jmp
jl
mov
inc
pop
das
push
cmpsb
add
mov
mov
inc
inc
sub
sahf
lods
fadd
fldenv
xor
cli
das
cmp
les
adc
jg
js
cmp
insl
cmc
lock
lods
sbb
insl
mov
loope
stos
test
ja
arpl
and
test
sbb
sub
sbb
adc
or
xor
sbb
stc
pop
imul
test
leave
popf
xor
inc
scas
xor
xchg
call
xchg
mov
inc
push
sahf
sbb
cmp
pop
pop
push
cmp
into
sarb
iret
jo
push
stos
mov
cvtpi2ps
shrb
mov
fnstsw
loopne
mov
xor
pop
dec
inc
push
ret
cmpsb
mov
les
icebp
movsb
mov
adc
jmp
and
sbb
data16
jl
mov
cmp
movsb
dec
or
aas
outsl
add
push
movsl
incb
lock
mov
cwtl
push
jg
push
mov
loopne
and
jmp
lds
sbbl
lods
aas
lahf
dec
out
sbb
aas
push
movsl
icebp
sbb
xor
xchg
cs
lahf
cld
or
js
pop
lcall
push
add
out
pushf
repz
dec
dec
in
mov
gs
push
fdiv
add
out
ljmp
push
xchg
or
ffree
ret
and
pop
adc
dec
shl
lods
fwait
outsb
fs
rcrb
aad
and
fwait
sub
lods
out
shr
inc
dec
fimull
sbb
cmc
mov
inc
jns
cmpsb
adc
pop
mov
xchg
sub
push
mov
mov
dec
lock
testl
mov
adc
iret
jmp
addl
add
in
or
cmc
adc
cmpsl
sbb
enter
sub
pop
cmp
shlb
dec
add
xchg
mov
push
fidivl
dec
dec
iret
data16
xchg
push
xor
dec
sbb
ljmp
xchg
mov
cld
mov
push
inc
xchg
push
gs
movsb
pop
rclb
das
mov
cmp
inc
xchg
lcall
push
mov
ja
pop
mov
addb
out
mov
adc
jae
mov
jmp
cmpsb
xor
jae
mov
clc
cmp
inc
lock
sbb
loope
jbe
push
jo
inc
mov
and
fsubrp
add
outsl
lcall
mov
push
mov
stc
daa
mov
jg
adc
xchg
idivl
outsl
mov
mov
sub
adc
sbb
or
pop
je
imul
fistl
dec
pop
inc
pop
add
hlt
mov
pop
jno
sbb
push
mov
les
enter
hlt
std
dec
sbb
outsl
ret
repz
out
jge
inc
cli
adc
cwtl
push
shrb
pop
xlat
incb
daa
in
mov
jle
mov
add
pop
mov
movsl
pusha
and
loop
adc
mov
insb
fnstsw
arpl
push
add
dec
jb
out
sub
mov
dec
push
dec
xchg
imul
push
mov
xor
cwtl
xor
rol
jge
lret
pop
stos
push
outsb
mov
lea
int3
in
inc
inc
stos
rcll
punpckhbw
sbb
and
aas
lods
ja
aaa
iret
movl
mov
stos
add
push
pop
loope
xorl
sub
mov
lds
into
lcall
bound
push
icebp
frstor
scas
mov
mov
addr16
jmp
into
loope
ljmp
mov
cmpsb
cmc
xor
xchg
adc
ret
rcrl
lods
inc
movsb
mov
mov
cmp
fidivs
inc
push
in
out
lds
cwtl
fwait
sbb
iret
xor
jb
mov
jmp
or
sbb
pop
cmp
push
push
test
xor
cmp
or
hlt
mov
mov
aas
outsb
minps
scas
jns
out
lods
push
ret
aam
bound
shr
jl
scas
push
push
sbb
push
xchg
stos
inc
adc
xor
or
ds
pop
mov
out
ss
push
shl
jae
mov
and
cmpsb
fidivs
fimull
movsl
aam
outsb
int3
enter
fucom
xchg
cmpsl
sbb
push
dec
jnp
scas
jmp
xlat
rcrb
in
or
inc
cmc
data16
lock
loopne
xlat
jmp
add
getsec
into
ds
mov
sub
pop
movups
rcr
mov
jns
xchg
mov
jno
push
mov
or
xor
mov
cmp
cmp
icebp
mov
xchg
movsb
add
repnz
ret
outsl
out
dec
in
insl
add
sub
incb
cli
je
repz
adc
addb
adc
push
jb
add
arpl
test
mov
sbb
adc
jecxz
adc
jnp
jb
scas
jecxz
add
or
test
xor
dec
pop
test
fisubl
push
mov
push
mov
mov
andl
dec
int
hlt
mov
xor
loop
mov
int
outsb
ds
add
xchg
addl
sbb
jp
out
cld
mov
add
xor
mov
xor
xchg
pushf
push
add
pop
ror
mov
pop
bound
mov
enter
lcall
sahf
orl
arpl
or
push
mov
mov
adc
xchg
add
push
add
mov
push
jle
and
push
in
popf
pop
pop
jne
cmp
in
cs
fisttps
stos
inc
je
aad
jecxz
xchg
jno
test
movsb
stos
sub
shlb
lea
inc
popf
cmpsl
subb
leave
xchg
jno
cltd
mov
sbb
pop
daa
xchg
add
leave
in
mov
push
incb
jb
fadds
test
jmp
add
bound
je
adc
lods
mov
xchg
mov
leavew
int
fwait
dec
xchg
bound
std
push
mov
or
test
movsl
mov
xor
xchg
inc
mov
fs
in
std
xchg
in
mov
scas
mov
inc
aad
out
xchg
repz
nop
xchg
sub
push
daa
jb
inc
loopne
addb
or
jle
xchg
mov
jg
lret
sub
aas
push
daa
sub
jp
dec
mov
sub
dec
xor
push
sbb
imul
mov
or
cld
cmpsb
test
add
inc
in
shrl
pop
loope
or
movsb
xor
xchg
fnsave
push
in
jb
into
popf
test
daa
sahf
insl
test
enter
leave
pushf
inc
add
or
ja
jbe
jbe
jp
loop
pusha
or
lea
pop
frstor
mov
movsb
sbb
cmp
lcall
std
pushf
cmp
xchg
inc
orb
or
idivb
cmp
jl
sahf
in
pop
les
mov
sbb
aad
incb
mov
lcall
adc
cmp
add
xor
xchg
jnp
rcrb
sbb
lds
push
data16
mov
cltd
jmp
jmp
or
mov
mov
rcrb
dec
push
cli
stc
xor
adc
sbb
mov
sarb
or
inc
jge
jp
cmp
jno
xrelease
sbb
jge
mov
shlb
pop
jae
xchg
dec
ret
clc
jecxz
stc
cltd
mov
cwtl
cmc
cmp
push
add
mov
inc
in
ret
adc
mov
stc
call
or
xorl
loope
adc
ret
pop
push
stos
xchg
loopw
sbbb
out
mov
mov
cli
clc
inc
in
cmp
js
lea
mov
enter
rcrl
mov
gs
or
in
loope
sti
push
mulb
sub
mov
sti
aad
out
add
insl
jnp
clc
add
push
fwait
mov
pop
cmpsl
mov
lea
push
in
loop
lahf
aaa
lods
shrb
xchg
scas
add
add
or
dec
call
sub
mov
lea
data16
and
shld
mov
push
jecxz
loope
sbbl
adc
pop
leave
fwait
sbb
sbb
outsb
sub
mov
mov
jno
shll
or
sub
and
test
xchg
push
rep
inc
and
mov
data16
int3
mov
mov
jb
scas
sub
shlb
adc
mov
ljmp
pop
add
xchg
and
popf
xchg
mov
or
push
mov
xor
xor
loope
fisubrs
add
push
daa
jecxz
pop
adc
cld
orb
loopne
pop
cmp
negb
stos
mov
push
repz
sbb
jns
pusha
cmp
inc
gs
dec
gs
ds
cmp
daa
xlat
pop
push
jne
jne
sub
pop
pop
cltd
cmp
into
mov
rorb
lock
sti
inc
pushf
mov
and
and
cld
outsb
inc
fstps
and
cli
mov
mov
pop
iret
arpl
scas
int
jecxz
sub
pop
push
and
ljmp
xchg
ljmp
rcll
and
mov
pop
xchg
sub
cwtl
mov
cld
add
movsb
adc
xchg
insb
inc
cmp
xor
test
aad
jmp
popa
dec
jg
pop
inc
xchg
popa
jp
and
stos
push
aas
shll
std
add
or
cwtl
sbb
in
adc
jno
inc
jb
jge
rol
push
mov
stos
outsb
add
and
xchg
pop
ss
cmpsl
js
pop
xchg
dec
dec
mov
int3
movsl
out
mov
insb
hlt
mov
and
mov
lret
out
popa
fbstp
pop
xchg
stos
test
push
mov
and
testl
movsb
dec
in
cmp
sub
std
sbb
mov
lods
jmp
cmp
xor
cmp
mov
pushf
jecxz
sbb
xor
lods
cmc
mov
in
xchg
test
inc
dec
mov
lret
faddl
push
or
push
jecxz
mov
notb
mov
mov
and
inc
pusha
add
je
cltd
push
xchg
test
dec
stos
or
cltd
xor
push
cmp
push
dec
fnstcw
inc
cvtps2pi
fildll
mov
dec
fnstenv
repz
mov
rol
mov
test
adc
push
cmc
loope
adc
dec
mov
iret
mov
xlat
jb
and
ljmp
xor
repnz
sub
cld
int
push
fs
orb
mov
scas
mov
cltd
mov
pop
in
fnsave
iret
call
imul
adc
dec
cmp
cmpsl
jo
out
dec
jmp
sti
and
ljmp
scas
xchg
mov
lahf
lret
and
ficoml
mov
mov
movsl
mov
push
out
adc
aaa
adc
xchg
add
mov
mov
push
mov
imul
int
data16
pop
cmp
pop
mov
push
inc
pop
bnd
jae
lcall
inc
filds
lea
leave
push
and
in
push
aaa
jne
xchg
or
outsb
clc
cmp
sbb
dec
xchg
jno
xor
stos
inc
add
out
xor
cmpb
cmp
lret
pop
jle
pop
inc
mov
xor
imul
lret
xor
repnz
rcr
jno
outsb
jl
ret
lods
in
xor
xor
xor
dec
out
push
fiaddl
or
xor
mov
aam
xchg
sub
mov
rol
push
loope
xchg
jecxz
or
and
repnz
insl
push
mov
or
aaa
mov
sub
jb
jnp
mov
mov
test
jecxz
inc
push
jecxz
xchg
pop
dec
adc
sub
jae
pop
loop
jge
mov
je
or
outsb
and
ret
push
jl
fsubp
out
sarb
sarl
aam
pushf
lcall
ja
mov
cmp
mov
push
rcll
shrl
sub
fsts
psadbw
je
fidivrs
pop
fists
mov
in
jl
icebp
test
es
unpcklps
aaa
jns
jbe
adc
fildl
out
loope
inc
int3
shlb
jl
jbe
xchg
test
divl
je
or
mov
mov
mov
shr
lods
and
leave
mov
mov
lret
add
hlt
xlat
lret
add
mov
imul
lods
pop
mov
push
sarl
sti
jnp
dec
sbb
xchg
push
andb
pop
test
fstl
pop
mov
scas
inc
and
stc
mov
mov
sub
mov
test
inc
out
xchg
pop
gs
addr16
ds
imul
push
push
sub
xchg
or
inc
pusha
ljmp
les
pop
xor
gs
xor
mov
loope
ss
out
cmp
xor
sub
test
dec
lahf
jo
out
push
hlt
pop
sbbb
cmpsl
call
mov
and
js
ficompl
jbe
div
sbb
mov
mov
jp
test
mov
mov
nop
imul
and
xor
es
xchg
cwtl
or
mov
mov
rcrb
xchg
sub
xlat
and
xlat
mov
sbb
push
lea
rcrl
sub
jae
nop
dec
test
mov
loope
ficoms
dec
leave
loope
sbb
cltd
sahf
lods
ljmp
es
fdivs
mov
out
push
xor
inc
xor
loopne
or
test
inc
jnp
sub
and
fcoml
enter
loope
std
cltd
add
stos
inc
jge
stos
test
dec
mov
sti
and
lea
dec
rorb
xor
add
adc
or
mov
push
int
ret
sub
fcmovb
push
and
xchg
lret
jne
jmp
dec
ficomps
lock
mov
or
fidivs
push
insl
je
cld
inc
dec
and
mov
hlt
jbe
loope
inc
push
inc
xor
jo
or
fnstcw
inc
push
mov
loopne
sahf
pusha
ss
test
lret
mov
pusha
shlb
lods
mov
bound
adc
cmpsb
pop
rol
fsts
loopne
enter
mov
arpl
mov
cs
imulb
mov
rcll
clc
lret
popa
push
xor
mov
add
fbld
sub
add
xor
xchg
popa
dec
mov
aad
aaa
mov
insl
inc
imul
cmp
int3
out
jge
rcrl
dec
nop
cmc
push
stc
scas
call
movsb
xchg
sub
mov
push
or
nop
aaa
popa
lret
adcb
push
sbb
jge
nop
pop
mov
push
mov
push
adc
push
push
das
fldt
jae
xchg
cmp
popl
sbb
in
dec
loope
in
loope
mov
jo
lea
stc
and
xchg
xor
movsl
mov
in
mov
jne
dec
pop
lods
call
xor
jbe
sbb
mov
adc
and
ret
or
movsb
sbb
mov
push
push
jge
mov
fldl
andl
stc
fdiv
push
pop
or
lods
cltd
and
fimull
orb
pop
add
lods
sub
pop
out
sbb
add
sub
outsl
xor
adc
jbe
mov
mov
add
or
jae
out
nop
push
pop
stc
add
mov
daa
test
pop
repz
xor
mov
mov
dec
and
and
jle
repnz
push
add
pusha
lods
fmull
jmp
orl
jl
push
sbb
cmpsb
iret
jp
ret
sbb
aam
sub
dec
or
lock
cmp
mov
sahf
subl
or
jb
cmpl
push
jns
insl
loop
jb
mov
lahf
inc
pop
movsl
or
xchg
stos
cmp
fwait
adc
mov
movsb
jb
add
adc
insl
cwtl
mov
jp
mov
fstpl
orl
mov
daa
mov
mov
add
mov
sar
fnstenv
out
mov
jp
push
push
ss
out
push
inc
and
add
nop
rclb
in
into
pop
enter
inc
callw
inc
sbb
inc
int3
xor
mov
popa
pop
cmp
daa
arpl
xchg
out
mov
pop
in
or
mov
mov
lods
subb
adc
cld
lret
std
aas
pusha
stos
aas
jno
out
pushf
scas
or
in
js
clc
sbb
or
jo
and
daa
jp
or
out
pushf
pop
arpl
popa
pop
sbb
orb
push
adc
incl
fcompl
je
fisubs
adc
pop
lods
stos
add
or
add
insl
icebp
jnp
popf
pop
adc
inc
ficomps
daa
push
adc
push
testb
jecxz
lret
cltd
lahf
out
test
pop
and
movsl
imul
cmp
leave
popf
adcb
ljmp
stos
call
jo
mov
push
sti
add
push
adc
mov
jns
les
cmpsb
or
cmp
fsubrl
push
dec
dec
movl
mov
daa
cmc
cwtl
es
lds
loopne
fisubl
add
cs
cli
mov
and
out
mov
pop
mov
cmp
jge
push
out
dec
mov
pop
xchg
push
stos
lds
pushf
test
xchg
add
dec
jmp
mov
sti
jge
out
inc
fldenv
cwtl
pop
call
xchg
xor
xor
jmp
movsb
mulb
mov
int
pusha
add
es
xor
xor
pop
and
jnp
clc
popl
movsl
mov
mov
loope
mov
hlt
movsl
icebp
aam
and
mov
dec
insb
add
adc
stos
out
dec
mov
test
adc
enter
pop
dec
push
mov
lods
jp
sahf
and
jno
lods
fisubrl
out
call
mov
xor
cli
inc
movsb
xchg
pop
inc
or
adcb
mov
and
js
xchg
mov
addr16
imul
inc
jne
dec
mov
jmp
daa
jge
jmp
mov
add
fildll
das
les
cmp
arpl
lock
push
icebp
mov
loopne
jmp
or
xor
out
movsl
popf
stc
jmp
iret
mov
test
stos
inc
inc
xchg
je
pop
mov
lds
ss
cmp
sti
mov
repz
jno
push
sarl
fwait
mov
sbb
fs
and
andb
mov
lods
xor
pop
lock
orb
negl
pop
mov
es
mov
daa
cmp
lahf
data16
mov
xchg
mov
mov
jnp
pop
jae
xor
jbe
and
nop
mov
movsb
xor
lret
inc
inc
pop
cmpl
sbb
or
lods
lahf
sub
pop
sub
fdivl
clc
cmp
mov
sbb
push
scas
lods
ss
adc
lods
aaa
stos
and
mov
add
rcll
mov
scas
iret
dec
filds
mov
and
mov
mov
add
cwtl
mov
ljmp
mov
mov
fisttpl
or
xor
ret
pop
cwtl
jae
int
ror
ficoms
scas
fistpll
sahf
adc
mov
mov
lahf
cmpsb
inc
dec
push
stos
call
cmc
stos
cmp
cmp
mov
jmp
repz
sbb
ss
or
inc
je
cltd
out
testl
inc
jle
lods
icebp
into
lahf
lret
popa
cmp
inc
jns
pop
jne
addr16
cltd
inc
add
repnz
mov
pop
cmovnp
scas
lret
out
sahf
push
in
popa
cmp
add
push
push
mov
test
mov
stos
xchg
dec
cltd
adc
cmp
jo
adc
jecxz
sub
dec
push
jge
dec
pop
mov
jl
adc
lods
and
pushf
push
pop
adc
add
cmp
sbb
xor
pop
push
lods
bound
test
subl
jne
and
mov
pusha
insl
adc
daa
leave
mov
mov
cmp
mov
dec
pop
shlb
cmpsl
outsl
xorl
jle
loope
jle
outsb
mov
in
mov
mov
mov
sbbl
adc
mov
fbld
sub
jp
mov
jne
xchg
ja
jle
sub
repz
xor
lods
std
push
aas
loop
testl
pop
out
and
cli
jecxz
insb
pop
mov
sbb
adc
mov
cmp
andl
xchg
ja
stos
mov
cli
mov
popa
mov
xchg
ret
imul
movsb
jb
out
stos
mov
dec
or
dec
sub
inc
fldcw
lret
pusha
cmp
push
call
adc
outsl
dec
sub
mov
mov
fldl
orl
adc
mov
flds
addr16
lea
loopne
in
test
inc
pop
into
lods
push
ljmp
call
xchg
mov
xchg
sub
stc
push
push
movsb
xchg
mov
shrl
mov
xor
jle
fcoms
push
cli
pushf
and
adc
adcl
mov
and
pop
lret
lds
iret
loopne
mov
pop
add
fisubs
outsb
movsb
ja
add
or
mov
or
add
aaa
dec
push
in
jne
inc
adc
lock
jg
cltd
cmpsl
scas
call
xor
test
lret
in
adc
sbbl
xor
xor
sahf
mov
popa
es
xlat
and
or
jb
add
and
inc
ds
neg
mov
adc
sub
fisubrs
xor
les
shl
cmp
xchg
add
insl
leave
les
test
mov
ret
nop
push
mov
push
push
test
sub
aas
lea
scas
xchg
push
pop
repz
stc
aam
push
mov
add
movsb
adc
jl
test
movsb
push
andb
dec
stos
mov
fldt
nop
dec
fadds
mov
in
cmp
in
adc
pop
mov
xor
insl
pop
mov
lds
jmp
mov
inc
sub
loope
jnp
in
mov
xchg
jns
lahf
and
in
shlb
pop
test
xchg
scas
sub
orl
push
adc
scas
mov
in
cmc
mov
mov
cltd
xor
daa
dec
xlat
sbbl
mov
scas
out
fadds
stc
xor
lret
mov
inc
insl
andb
pop
loopne
stos
pop
mov
adc
cmp
in
arpl
pop
push
test
xchg
or
xchg
cmp
cmp
rcrl
cmc
repnz
mov
leave
pusha
jnp
shrl
or
fcmovbe
in
jecxz
shl
mov
call
nop
enter
movsb
jmp
inc
pop
push
lods
cmpl
lret
sub
scas
cmp
mov
gs
adc
lea
dec
mov
pop
ficoml
cltd
xorl
push
mov
sti
push
add
fwait
mov
rcll
adc
test
jne
or
outsb
cmp
mov
jnp
mov
aam
dec
push
xchg
jnp
leave
loope
insl
adc
xor
stos
mov
pop
pop
lret
push
out
cld
cmp
repnz
sub
pusha
out
stc
mov
roll
push
loopne
and
lcall
ss
insb
daa
cs
out
rcl
repz
dec
jne
jg
and
add
es
pusha
mov
push
sbb
nop
out
cmpsl
shr
test
or
xor
cs
mov
cltd
cltd
imul
in
aaa
adcb
pop
cmpsl
out
negb
cmc
test
dec
pop
mov
jbe
jb
cmp
outsb
push
mov
sbb
xlat
or
adc
jno
xchg
mov
xchg
outsb
jecxz
dec
imul
xor
mov
push
int3
test
in
sahf
out
adc
xchg
xor
imul
sbb
mov
roll
je
ja
aad
movb
jecxz
lds
mov
fdivs
push
cmpsb
jp
stos
push
mov
sub
cmp
and
inc
sahf
jmp
shr
orb
sub
add
cmp
and
dec
pop
sub
out
lea
cmpsb
inc
mov
or
sub
es
cmp
nopl
jns,pt
xchg
mov
xchg
out
push
fldt
or
cmc
inc
cld
fcmovb
push
push
mov
test
adc
testb
daa
outsl
sub
ljmp
gs
dec
cmp
aaa
fistpl
cs
jg
dec
dec
mov
sahf
lods
adc
push
outsl
ret
xor
loopne
jg
adc
push
mov
sbb
jb
mov
adc
xrelease
les
bound
mov
test
out
enter
ja
add
or
mov
lods
adc
cmpsb
cmp
rclb
icebp
iret
jecxz
mov
aad
mov
pop
repz
rcr
fs
mov
xchg
sahf
shrl
pop
sahf
push
cmpsb
orl
inc
pop
cmp
ret
pop
mov
mov
out
sahf
rorb
push
stos
push
cmpsb
jno
out
add
inc
ds
aaa
ficoms
lock
jns
xchg
xchg
loop
and
js
in
cld
pop
test
dec
std
idivl
sub
int3
mov
mov
daa
in
lahf
icebp
push
dec
mov
adc
leave
inc
push
sarl
arpl
popf
fcomp
js
repnz
mov
pusha
dec
mov
cmpl
fidivs
xchg
dec
shrl
repz
fsubr
push
es
loope
arpl
cmp
js
jmp
leave
sub
scas
xor
dec
dec
push
mov
pop
lods
dec
jbe
mov
aam
pop
jg
adc
mov
xchg
pop
mov
mov
clc
xchg
sub
insb
jecxz
push
inc
jne
sbb
jp
mov
arpl
jge
pop
mov
adc
push
adc
fbstp
outsl
cmp
std
dec
shrb
mov
mov
imul
fwait
scas
push
inc
ss
push
jb
jbe
outsb
lea
repz
std
add
fdivl
test
cmp
pop
cmpl
ss
fbld
adc
aas
ja
lahf
and
sarb
or
lcall
inc
cwtl
repnz
push
lea
int
mov
fcoml
sub
pop
cmc
inc
sbb
dec
in
adcb
pop
xchg
cmp
xor
mov
test
fsubrs
cmp
frstor
clc
outsl
faddl
fistps
notb
sbb
enter
arpl
cmp
mov
fs
jl
pushf
and
xor
bound
rclb
pop
out
cmp
pop
stos
mov
ret
aas
jl
or
andl
adc
push
lock
dec
mov
in
test
cmpsb
repz
mov
jecxz
jle
es
mov
mov
cmc
mov
inc
cld
enter
in
pop
fnstsw
mov
popf
mov
ret
and
jns
fwait
xchg
xchg
aaa
mov
scas
xchg
into
cli
push
mov
bound
mov
jns
pop
dec
aad
aaa
sti
cmpsl
cmc
push
ret
nop
daa
dec
adc
stc
imulb
inc
imul
xchg
insl
jge
mov
adc
jo
or
cli
mov
xlat
stc
xor
lahf
popa
cmc
fimuls
fwait
cmpsl
add
mov
jbe
insb
shrb
test
pop
cmp
loop
inc
fldcw
adc
arpl
aad
pop
fisubl
jecxz
enter
and
pop
cmp
sar
lahf
mov
dec
loopne
mov
pop
push
pushf
mov
dec
int3
jo
xchg
and
push
push
ds
dec
pop
sbb
mov
hlt
or
lret
pop
inc
fisttpl
push
mov
jo
insl
mov
dec
rep
jno
sub
xor
push
mov
aaa
mov
daa
jmp
lea
mov
xchg
and
jae
xor
outsl
test
inc
mov
mov
jb
sub
jp
push
inc
or
pop
push
lret
aas
outsb
aaa
std
daa
mov
push
add
lcall
stc
dec
mov
jno
pop
iret
cmp
sub
push
push
mov
daa
addl
stos
push
mov
imul
fsub
push
lahf
push
xor
je
push
dec
sub
ss
add
mov
ret
fcmove
out
adc
or
mov
or
mov
cltd
adc
jle
jbe
cs
test
imul
push
dec
hlt
mov
pop
scas
sub
sti
or
inc
insl
or
pop
int
cmpsl
iret
or
mov
fistpl
outsb
cltd
pop
repz
xor
mov
fsubrs
mov
andl
xor
dec
xchg
add
daa
xchg
clc
cmpsl
enter
lahf
push
test
int3
mov
stos
jmp
and
cmpsl
imul
popa
jbe
mov
pusha
sahf
or
es
fnstsw
push
shll
js
cs
push
jmp
push
xor
inc
cmp
push
sbb
mov
cmp
jmp
imul
or
push
stc
addr16
jg
pusha
orb
pop
cmc
shll
daa
or
incl
fwait
cmpsl
movb
std
add
cld
rcll
push
jg
jg
pop
inc
loopne
inc
sub
xchg
push
pusha
stos
jmp
jbe
hlt
popa
es
push
je
cmp
cmp
loope
pop
add
data16
insl
int
sahf
and
aaa
les
mov
ret
fcmove
jno
insl
cmp
cltd
inc
fprem
dec
pop
clc
lret
xor
mull
in
negl
adc
mul
push
sbb
or
sub
sbb
sub
add
addr16
test
popf
test
push
inc
filds
fcmovnb
adc
insl
jl
mov
add
pushf
adc
push
xacquire
add
insb
or
cmp
ss
loope
popa
xor
data16
hlt
ja
xor
sub
jp
jg
pop
icebp
mov
sub
pop
js
xchg
xor
dec
inc
das
pop
mov
mov
test
fildl
out
stos
leave
lcall
pushf
or
xchg
lahf
lret
cmp
stc
xor
inc
sbb
pop
mov
push
cmp
ds
sahf
ljmp
mov
mov
mov
lret
mov
leave
test
es
lcall
sub
jl
lods
adc
nop
cmp
jbe
data16
popa
or
mov
xchg
jae
les
mov
fwait
adc
inc
aad
mov
xor
in
shll
subl
mov
aad
sbb
sub
xor
jmp
fwait
repnz
stos
pop
lock
test
mov
xor
mov
stc
lds
stc
and
dec
lods
je
sti
jmp
cmp
bound
add
xchg
inc
int
mov
bound
ja
pusha
ror
loopne
add
jg
push
mov
pop
leave
pusha
out
jbe
and
adc
sarl
sub
inc
bound
lods
and
cs
mov
out
iret
jns
inc
les
sub
roll
mov
pop
inc
das
pushf
cmpsl
les
xchg
dec
popf
data16
loopne
loope
mov
sub
lret
cmp
fists
fsubrl
test
or
and
mov
dec
mov
fstpl
jl
sbb
push
dec
gs
adc
jmp
pop
or
fisubrl
inc
fnstcw
stos
pusha
mov
stos
xchg
es
add
cmpsb
mov
rol
repz
cmp
es
mov
xchg
jle
sbb
push
sbb
outsb
jnp
bound
pop
fildl
or
cmp
fistps
jmp
icebp
adcb
bound
dec
pusha
ror
jecxz
xlat
daa
outsl
sub
xchg
mov
add
and
lods
xor
jb
inc
js
addl
cltd
sbb
mov
mov
inc
test
aas
fs
xchg
js
pop
push
aad
movsl
dec
mov
cld
xchg
repnz
les
ss
cmp
adc
jecxz
ss
mov
imul
lea
jmp
cmp
mov
je
imul
mov
pop
shlb
jl
shlb
and
cld
mov
inc
push
arpl
sti
and
push
adc
pusha
cltd
sbb
mov
lahf
fs
arpl
clc
stos
pop
loopne
incb
ret
xchg
cmp
sub
push
mov
inc
jp
push
lock
enter
cli
adc
mov
inc
mov
lock
pushf
dec
out
xchg
sub
aad
call
mov
mov
negb
aas
jne
outsl
sub
and
lret
adcb
jno
jp
or
lods
dec
sarl
stc
iret
xchg
maskmovq
testl
es
jl
or
lcall
in
stos
mov
xchg
pop
out
aad
subl
cwtl
mov
shll
xor
shrl
mov
push
mov
jae
or
aaa
nop
ds
lea
bound
popa
gs
push
cmpsl
xor
scas
sub
or
jno
push
sub
jbe
lds
outsl
add
popa
divb
cmpsl
xor
hlt
mov
fbstp
add
jno
stc
lods
cli
push
aas
add
mov
xchg
dec
push
cmc
outsb
mov
mov
sbb
dec
dec
das
pushf
pmaxub
dec
adc
jle
es
pop
dec
pop
sub
push
xchg
adc
or
sub
jg
or
loop
jl
scas
add
mov
repz
inc
cs
dec
pop
out
add
adc
sbb
mov
enter
inc
ret
icebp
cmp
test
or
out
pop
outsb
push
jo
jne
mov
mov
popf
cmp
std
sahf
mov
fisubrl
jecxz
stos
cmp
fdivrs
fstpl
movsl
leave
mov
fldcw
out
xchg
int3
sbb
jle
loopne
stos
and
montmul
cmpsb
inc
inc
xchg
sbb
mov
lahf
mov
jno
pop
in
mov
jne
or
jmp
push
mov
stos
mov
mov
jne
popa
orl
lock
pop
mov
mov
insb
jbe
lret
inc
loope
mov
or
sbb
fistpll
fsubl
mov
ret
stos
mov
shrb
mov
aas
push
pop
fsubrs
cmp
mov
lcall
movsb
mov
out
es
fwait
or
mov
cmc
out
xor
xor
cmp
push
pop
ljmp
mov
cltd
std
add
rcl
inc
adc
int
sbb
scas
enter
pop
iret
xor
jnp
inc
adc
subl
nop
pop
cli
add
sub
mov
dec
pop
jbe
arpl
xchg
jl
pop
xchg
sbb
outsl
jnp
mov
in
mov
adcl
sub
mov
shll
mov
pop
lods
push
mov
push
cmpsl
sbb
pushf
repnz
xchg
sub
imul
out
mov
cmp
xchg
je
out
adc
call
dec
dec
aaa
ss
jno
sub
cltd
xchg
out
lods
cmp
jo
mov
into
mov
xorb
jno
jbe
jg
and
lahf
jno
rolb
lds
jecxz
sbb
sub
add
lds
stos
cmp
aaa
int3
jno
pop
aad
xor
cmc
into
int3
inc
mov
adc
xchg
push
mov
pop
push
fildl
xchg
inc
sub
or
mov
jo
cmp
aaa
mov
pusha
and
je
lds
dec
jmp
pushf
jnp
fmulp
inc
push
int
hlt
pop
inc
loop
mov
fsub
jge
adc
inc
out
adc
les
in
repnz
xlat
lret
mov
sarl
out
gs
add
push
sbb
daa
xchg
aad
mov
mov
ret
das
enter
inc
fstps
popa
clc
movsl
mov
dec
in
jg
das
das
aad
fcomi
adc
ret
ret
stos
pop
dec
xchg
stc
or
aaa
mov
aad
jne
test
push
rcr
ljmp
sub
adc
push
imul
lahf
dec
xchg
loop
add
in
sti
inc
fsubrp
pop
sbb
jno
jae
fstps
or
loop
movsb
inc
aad
outsl
iret
daa
popf
int
daa
jb
aam
pop
test
rorb
xchg
jns
xchg
insb
mov
jge
xor
inc
cmp
mov
cmp
clc
xor
fs
sbb
ss
push
xchg
sbb
xchg
jae
add
mov
iret
and
sarl
adc
dec
mov
adc
or
pop
mov
mov
ja
ds
sbb
sub
icebp
mov
test
xchg
es
shll
jge
xor
mov
add
inc
pop
push
jmp
or
dec
loop
dec
and
fistpl
dec
mov
sbb
xchg
jge
fists
xor
lock
mov
mov
or
add
sbb
mov
in
dec
jno
add
dec
cld
mov
ret
mov
pop
das
mov
mov
jno
out
adc
adc
sub
test
js
les
lea
andl
in
outsb
adc
add
jg
std
cmp
fisttpll
fadds
mov
mov
icebp
mov
rep
adc
jl
xchg
orl
ljmp
mov
push
fistl
xorl
mov
lods
lds
int
imul
ss
dec
mov
imull
push
jnp
shlb
loope
xor
cmp
fbstp
inc
mov
or
dec
push
inc
push
hlt
mov
repz
pop
cmp
ss
fimuls
pushf
fs
cmp
xchg
pop
dec
sbb
xchg
shr
idivl
add
mov
mov
mov
push
data16
xchg
and
sti
fdivrs
subl
jge
sub
enter
push
jle
cmpsb
push
test
mov
cwtl
cmpl
into
mov
out
push
jb
or
mov
xchg
jb
lret
dec
pusha
mov
ds
into
cmp
decb
pop
or
sbb
popf
clc
movsb
ret
pushf
xor
dec
pop
daa
rolb
mov
jecxz
out
add
xchg
out
out
adc
daa
lds
test
out
ja
add
pushf
cmpsl
outsb
xlat
sbb
inc
ret
leave
pusha
cmc
xor
iret
xor
adc
adc
inc
inc
push
jo
lods
push
mov
add
popa
hlt
inc
cwtl
push
xchg
rcrb
int
pushf
jb
in
dec
xchg
hlt
push
test
lcall
es
dec
jecxz
icebp
js
add
sbb
dec
mov
sahf
sbb
dec
dec
cli
sbb
enter
xchg
jmp
fsts
cmp
push
and
iret
lcall
out
inc
lahf
mov
in
add
jne
dec
cwtl
mov
test
jmp
cwtl
leave
inc
or
push
out
inc
movsl
fcompl
mov
xor
inc
mov
or
cmpsl
fdivrl
cli
jns
xor
enter
mov
dec
xor
xchg
out
js
icebp
pop
dec
fwait
and
adc
xor
ja
cmp
adc
addr16
test
xor
pop
loop
pop
insl
shrb
jae
popa
sub
rol
dec
push
adc
fsub
ret
daa
out
test
or
push
cltd
lcall
divl
and
add
xor
std
data16
dec
dec
and
dec
xor
jmp
pop
add
in
ss
leave
lods
inc
dec
fisubrs
ret
ret
nop
push
push
cltd
dec
btc
sub
data16
cmp
inc
pop
fisubs
xor
inc
mov
ret
xchg
and
jge
pop
cld
sbb
nop
addr16
mov
xchg
pop
lods
mov
sub
icebp
xchg
cmpsl
mov
xchg
pop
cwtl
push
loope
xor
pop
cli
dec
test
push
gs
pop
jecxz
test
lods
ja
sub
je
and
cs
fsubl
or
xor
or
cld
adc
cmc
adc
aad
faddl
mul
mov
mov
lock
imul
outsb
stc
out
les
adc
dec
lods
push
adc
repz
scas
inc
pop
ffreep
aad
mov
push
popf
daa
outsl
iret
and
sbb
std
mov
add
shll
mov
mov
dec
call
adc
roll
cmc
pop
sbb
mov
inc
insb
enter
cwtl
repz
push
fcoms
data16
dec
sub
adc
mov
cmp
arpl
imulb
adc
imul
iret
mov
mov
shld
das
lods
aam
lcall
or
mov
pusha
stos
ljmp
shrl
mov
jb
das
shll
add
or
cld
cmp
out
jo
in
pop
dec
mov
adc
mov
push
jno
out
sbb
xor
sbb
add
lds
pop
js
mov
jbe
scas
xor
xor
and
jno
pop
jl
in
je
popa
and
mov
aad
popf
pop
bound
aaa
sbb
aam
add
stos
cmp
je
adc
xor
and
add
ret
rcrl
lret
ss
push
xchg
add
lds
mov
pop
jne
xchg
rol
lcall
mov
sbb
sarb
lea
jmp
pushf
pop
insl
adc
or
rcl
push
ja
rorl
inc
cli
ljmp
daa
jecxz
jp
xchg
ss
cli
mov
mov
decl
sbb
fsts
ds
cmpsl
fiaddl
stc
mov
jp
push
jno
fucomip
pop
mov
test
shl
dec
pushf
fisubs
inc
cmp
add
es
cltd
or
sbb
push
lods
iret
movl
push
cmp
xor
test
mov
xchg
and
lods
ret
lret
out
sbb
lret
call
pop
xor
scas
les
jge
hlt
or
scas
jne
es
pop
pop
xchg
ja
fwait
call
push
inc
inc
gs
aam
xchg
xchg
cmpsb
and
mov
mov
int
mov
scas
fiadds
push
inc
fmul
mov
push
jmp
test
inc
flds
xchg
jecxz
movb
jno
sub
mov
iret
scas
mov
test
je
and
push
mov
test
sti
movsl
icebp
xlat
xchg
imul
mov
xchg
mov
and
loopne
cs
mov
das
sbb
mov
ret
repz
push
addr16
adc
mov
sti
cld
in
xor
jmp
mov
sarb
cmpsl
ss
aam
test
push
adc
adc
xchg
adc
fnsave
test
adc
cld
xchg
mov
sbb
xchg
stos
jmp
inc
lcall
daa
jnp
aad
push
mov
add
rorb
xchg
adc
icebp
push
mov
dec
movsb
fldl
push
mov
xor
jns
fucomp
inc
xlat
push
dec
imul
sahf
push
mov
jb
push
add
call
outsw
inc
adc
mov
out
xchg
push
addb
cmc
mov
cmp
mov
inc
jo
jnp
mov
jg
dec
scas
xchg
adc
lcall
pushf
ss
add
pop
in
mov
jae
or
shld
popf
mov
or
mov
inc
jecxz
cs
inc
mov
jl
loope
pop
adc
cs
mov
ret
push
sub
pop
jns
push
imul
add
imul
push
fiaddl
cmpsb
fs
sar
mov
aaa
ds
cmp
sbb
clc
pop
jl
cmpb
pop
addr16
jbe
mov
stos
dec
pop
mov
dec
pop
add
movsb
push
and
push
mov
fwait
and
aas
sub
dec
jecxz
and
add
in
adc
push
mov
mov
in
jge
aad
rcll
mov
scas
lahf
jnp
test
decl
sbb
fwait
xor
push
mov
int3
sub
repz
sbbb
in
push
mov
push
subb
out
mov
adc
mov
roll
repz
js
mov
cli
jmp
mov
adc
mov
mov
mov
mov
or
jl
bound
movsb
mov
mov
fcomps
popf
scas
stc
inc
mov
push
sahf
lods
mov
arpl
stos
mov
push
out
jno
or
sbb
fs
push
xor
in
cld
and
xchg
and
aad
mov
sbb
cld
test
mov
repz
mov
sub
cmp
jg
ljmp
mov
push
jp
test
rcrl
sub
jp
stos
xchg
push
xor
arpl
sbb
mov
pop
outsb
testl
xor
dec
in
das
cwtl
stos
pop
sub
push
pop
fldt
dec
cmp
aaa
lods
pop
mov
add
push
addb
jb
cmc
or
inc
imul
xchg
sbbb
fucompp
testl
inc
into
rolb
push
fsubrl
rorb
push
arpl
pop
js
fsubs
inc
aad
clc
pop
sbbl
adc
jne
shrb
ret
jb
cmp
daa
pop
inc
cmp
inc
dec
scas
dec
xor
movsl
sbb
test
pop
xchg
lods
mov
mov
xchg
dec
jle
mov
dec
or
sub
inc
jmp
fdivl
mov
jne
mov
jae
sarb
aad
inc
xchg
fsubrs
and
xor
sbb
add
push
outsb
xchg
aad
jbe
xor
xchg
pop
mov
cwtl
mov
jne
cmp
leave
push
xchg
xchg
adc
xor
stos
jp
iret
inc
jbe
sub
xor
mov
cmpsl
mov
mov
sbb
cmp
leave
push
fimuls
scas
and
cmpsb
jne
adc
push
jmp
adc
jno
cmp
popa
movsb
pop
call
fstps
xor
movsb
sbb
loop
adc
test
loopne
lcall
mov
and
cli
jle
fdivl
and
mov
leave
int
jo
fsts
pusha
jmp
aad
fadds
mov
fdiv
mov
popf
xor
cmpl
cmp
fisubs
scas
dec
inc
xor
stos
xorb
dec
mov
cmpsl
jp
shrl
adc
cmc
sbb
add
or
dec
and
movsb
cmp
dec
jns
add
pop
pusha
loop
imul
sub
xchg
loopne
into
jno
enter
cmp
sbb
cmpb
outsb
lock
sbb
push
cmp
or
pop
pop
mov
sbb
pop
popf
repnz
dec
pop
lock
rolb
add
sub
out
mov
inc
mov
mov
pop
jne
xchg
dec
aam
jle
adc
sbb
dec
call
in
pop
in
jg
int3
mov
ja
pop
pop
enter
std
cltd
mov
iret
out
fwait
bound
mov
repz
sub
imul
inc
push
outsl
jbe
lret
stc
jae
pop
movsl
sbb
out
mov
mov
ja
xchg
xchg
aad
imul
cmp
jnp
pop
jnp
stos
jno
jg
jbe
hlt
cmpsl
stc
add
dec
inc
adcb
mov
xor
mov
popf
xor
es
outsl
test
mov
xchg
xor
notl
dec
pusha
addr16
in
xchg
jne
outsl
daa
cltd
jmp
pop
pop
cmp
decl
rorl
xchg
sub
push
adc
dec
xchg
jge
fs
mov
sub
adc
and
js
sub
and
rclb
shrl
popa
popa
les
pop
addr16
fsubrp
xor
call
add
and
data16
adc
rclb
sti
repz
adc
adc
jecxz
cld
adc
repnz
or
sbb
loope
sarb
dec
and
mov
cmp
mov
mov
rcrl
sbb
mov
push
dec
popf
jl
pop
jge
orb
inc
outsb
add
aam
lcall
jo
in
xchg
xchg
out
cmpsl
ds
pushf
or
cmc
mov
pop
pop
mov
mov
sbb
int3
sbb
imul
mov
xlat
sbb
hlt
xor
cmpb
adc
sbb
or
mov
push
enter
mov
mov
pop
cmpsb
mov
jle
sub
outsb
jl
fbld
mov
cmp
xchg
dec
mov
lret
sub
lods
mov
imul
test
sub
push
loop
sub
dec
mov
pop
xor
mov
test
sti
mov
sti
popf
scas
pop
std
cli
loop
jmp
mov
rorl
aad
xchg
mov
ss
std
sbb
jl
dec
fdivrs
ja
mov
in
push
xor
xor
ret
or
and
pop
iret
sbb
push
out
sbb
mov
pop
cmp
test
cmp
mov
dec
pop
divb
outsb
shrl
outsl
add
pop
inc
movsl
dec
mov
and
lcall
mov
repz
lods
outsb
xchg
push
frstor
push
int
and
leave
xlat
popa
js
pop
sub
fs
imul
xchg
shr
dec
aad
testb
ss
sub
inc
enter
xor
lret
jo
jnp
insl
es
cmpsb
iret
insb
mulb
sub
repnz
sbb
push
sbb
scas
mov
pop
lock
ds
movsb
dec
pushf
lods
sbbl
mov
daa
into
pop
sub
jo
mov
fisttpll
testb
fsubrp
push
je
pusha
scas
stos
lods
ss
inc
adc
out
out
and
ficomps
mov
data16
loopne
inc
sti
pop
aaa
test
jne
jp
enter
push
ljmp
push
sub
scas
sarl
jb
les
mov
sti
jbe
add
mov
popa
fldl2t
jb
add
les
mov
jo
sub
fidivrs
inc
push
push
pop
jne
or
push
fs
aaa
push
loope
push
and
test
xchg
or
jae
pop
movsl
clc
adc
adc
shlb
mov
sbb
in
cli
dec
mov
cmp
mov
mov
cltd
pusha
shl
cmp
lds
lds
xor
cmp
enter
inc
fnstsw
arpl
mov
test
test
sbb
lock
jbe
fs
into
insb
add
cltd
xor
push
hlt
cmp
mov
rcrb
or
in
jle
in
inc
and
jae
shlb
repnz
shl
cmp
xor
mov
cmp
mov
decl
movsl
cltd
mov
add
xor
push
call
dec
leave
outsl
inc
sub
sarl
cltd
dec
cmc
icebp
insb
jecxz
mov
pop
std
lods
out
jp
lahf
in
inc
iret
mov
pop
mov
ret
xchg
and
in
notb
cmp
imul
xchg
mov
xchg
xchg
xor
push
sbb
or
cmpsl
test
test
sti
mov
inc
sbb
imul
pusha
add
ljmp
imul
in
test
in
es
test
hlt
dec
dec
push
sbb
pmaxsw
les
adc
pop
loop
leave
jae
sbb
or
mov
xchg
xchg
mov
mov
out
cli
and
das
fucomip
test
sbb
fstl
xor
je
dec
fildl
and
stos
push
subb
pop
cmp
and
push
cmp
into
sub
fiaddl
insl
xlat
scas
pop
xorl
sbb
imul
push
xchg
jnp
fistpll
mov
jg
mov
sbb
mov
xor
xor
add
cmp
sub
jge
mov
cs
mov
jge
fcomps
subl
in
std
and
dec
stos
cmp
cld
or
lds
int
pop
xlat
fldcw
in
mov
or
sar
aad
xchg
xchg
scas
mov
jecxz
sbb
push
sbb
mov
scas
in
vphaddbw
push
aas
imul
icebp
mov
or
aad
inc
in
jno
cmp
mov
or
sbb
gs
cmp
loop
fiadds
loop
jp
mov
icebp
pusha
mov
mov
add
int3
push
aad
fstl
dec
and
icebp
fdivp
out
cmp
inc
lret
mov
out
movsl
aam
sbb
and
push
insl
sbb
mov
xchg
cltd
mov
cmpsb
mov
sub
mov
mov
fwait
out
test
stc
addr16
orb
nop
fs
push
pushl
xchg
xor
jp
pusha
lods
mov
cld
xor
cwtl
pop
stc
mov
cld
enter
pusha
aad
pop
pop
push
push
or
jge
mov
adc
jmp
sbb
popa
xchg
divl
mov
push
jnp
hlt
pop
jns
push
out
or
ljmp
sbb
jb
xlat
loop
cmp
inc
fwait
lods
inc
mov
mov
test
lods
out
rcrb
xor
sarb
iret
push
lods
leave
mov
fwait
xchg
fisttpl
mov
inc
pop
cs
imul
sbb
iret
je
add
push
xchg
insl
mov
in
adc
call
dec
push
push
jecxz
lods
fildll
add
xchg
icebp
pusha
loop
adc
insl
sub
push
in
pop
loopne
lds
push
or
fstpt
loop
mov
sarb
lcall
pop
sbb
xor
test
xchg
dec
or
test
lahf
xor
push
in
sub
jae
cmp
stos
mov
sbb
mov
dec
testb
out
xchg
hlt
out
xor
ja
push
add
xchg
mov
push
sbbl
mov
xchg
jp
fwait
addr16
push
fbld
leave
mov
or
sbb
jle
icebp
xchg
push
pop
dec
fstpl
mov
pusha
mov
push
ljmp
cltd
std
and
in
mov
xchg
fdivs
js
inc
or
sti
in
ffreep
and
fstpt
mov
adc
cmpsb
sbb
sbbb
sub
sbb
movsb
int
aaa
sub
add
out
pop
out
mov
pushf
xlat
scas
push
scas
cmc
adc
and
imul
fwait
push
jo
sarb
mov
inc
scas
jg
test
xchg
div
aaa
scas
sbb
scas
add
imul
cmp
xchg
iret
lahf
fcmovne
lds
cmc
xor
dec
xchg
push
jo
inc
sbb
cs
pusha
or
mov
jmp
xchg
push
dec
adc
imul
inc
dec
xchg
lahf
ss
or
mov
lods
dec
and
add
pop
das
mov
adc
mov
nop
sbb
cmpsl
dec
inc
push
lret
add
arpl
lods
addr16
jp
or
adc
or
pushf
sub
jb
pop
aas
push
shr
arpl
lret
xor
loope
rclb
cmp
cmp
dec
arpl
out
out
sub
loope
mov
or
fdivrs
imul
cmc
pushf
mov
or
or
push
sub
push
lods
and
or
scas
lcall
add
push
mov
sub
mov
xor
aam
ljmp
in
add
cmp
call
subl
dec
or
jbe
subb
movsl
aas
cmpsl
arpl
popf
jge
lahf
push
or
out
xchg
stc
jmp
cmp
decb
adc
insb
dec
rcr
push
pushf
movsl
push
scas
das
ror
inc
push
xor
addl
fs
push
jge
dec
in
jmp
fxch
add
xorl
xlat
data16
sub
xorb
cmpsl
mov
jge
mov
xchg
and
sub
rolb
push
hlt
jmp
repnz
jb
dec
scas
arpl
aam
adc
and
outsl
in
leave
or
test
rcll
inc
pop
jmp
xchg
out
mov
test
add
jns
pop
in
or
pop
add
loopne
jae
lcall
popa
repnz
jne
cmp
jns
aas
pop
lock
bound
cmpsl
std
dec
push
fdivl
cmp
jp
fcmovu
sub
lods
inc
pop
clc
daa
ljmp
push
lods
subb
mov
sub
inc
cmc
xor
push
rcrl
lock
shll
pushf
mov
push
push
sahf
test
mov
sub
xchg
pop
sbb
inc
dec
or
mov
icebp
lods
sub
lahf
jecxz
mov
pop
lret
push
data16
jbe
sub
lret
and
push
repnz
enter
xchg
sbb
adc
stc
add
inc
rclb
jge
push
enter
add
lea
jo
std
inc
in
or
sbb
add
mov
pop
mov
xchg
xchg
loop
sub
mov
loopne
dec
mov
hlt
mov
aad
imul
popf
hlt
xorl
xchg
xchg
mov
push
mov
lock
and
stos
inc
mov
push
xor
or
cwtl
pop
sub
adc
sub
and
frstor
out
iret
fistl
cltd
inc
loopne
xchg
popf
pop
mov
out
push
fldl
or
in
cmp
inc
cmp
imul
fnstenv
mov
into
ffreep
pop
test
sarl
in
mov
cmp
jecxz
jl
aad
divb
loope
les
lds
fidivs
pop
add
insl
js
mov
rorb
pop
sbb
int
adc
and
fildl
test
enter
xchg
stc
xchg
out
inc
cmp
jmp
cltd
movsl
out
scas
std
insb
shrb
iret
jmp
lahf
jp
xor
notb
jnp
inc
dec
out
xor
inc
xchg
sub
cmp
stos
mov
aad
fdivl
loop
lret
or
daa
adc
fnsave
add
arpl
iret
mov
dec
fs
popf
pop
clc
xor
or
mov
scas
add
add
ja
and
lcall
sbb
pop
ret
imul
add
add
jecxz
gs
pop
mov
add
insl
out
cmp
xor
test
imul
mov
gs
inc
and
push
in
ds
iret
xlat
movsl
sbb
push
outsb
add
mov
bound
pop
lods
and
fidivrs
sti
jnp
loop
lahf
cmpb
adc
hlt
add
scas
dec
shll
dec
or
lds
fdivp
sub
jbe
jle
daa
pop
lods
lods
pop
ja
xor
cwtl
fisttpll
mov
inc
iret
hlt
int
es
sub
inc
pop
ds
xchg
push
std
mov
test
cs
iret
iret
mov
pop
add
jmp
js
faddl
bound
adc
int
xor
mov
sub
es
movsl
fs
insl
sbb
sahf
in
inc
repnz
xlat
xor
dec
push
push
push
push
add
iret
push
push
inc
jge
lods
mov
insb
xor
sbb
inc
ljmp
inc
shrb
dec
cmp
inc
push
push
sbb
scas
jno
pop
and
shlb
push
out
adc
mov
lcall
pcmpeqd
dec
jmp
jne
or
push
inc
sub
pop
xor
push
jecxz
sbb
and
add
pop
pop
lods
add
xor
js
cmp
xchg
cmpsb
subl
or
int
mov
dec
push
jecxz
test
hlt
mov
adc
pop
and
cmpsb
push
sti
pop
in
daa
xor
cwtl
inc
or
cmp
pop
ret
mov
cmp
movsb
aam
jmp
add
fildl
adc
scas
stc
jno
ds
or
insl
mov
cltd
add
cmpsb
push
pop
cmp
adc
in
dec
loop
dec
fisubs
in
aam
jbe
or
jnp
xchg
push
fcompl
lahf
or
das
data16
mov
ds
je
pop
aas
js
jecxz
es
aam
cmp
sahf
push
push
popf
xchg
mov
aaa
in
jne
mov
pushf
mov
call
loop
outsl
enter
mov
daa
mov
aas
loope
movsl
add
inc
cmpsl
adc
fmulp
mov
icebp
or
fists
xchg
cmp
jge
sahf
test
clc
movsl
insb
pop
push
mov
or
pop
add
in
push
in
jbe
lods
fsubr
shlb
repnz
iret
fcomps
adc
cwtl
pusha
inc
jl
mov
add
jb
jecxz
sbb
aad
push
lahf
push
sub
jo
jge
xor
jp
and
mulb
cmp
scas
adc
mov
inc
inc
jle
insl
mov
mov
cmc
jb
insl
jle
pushf
add
insl
mov
add
push
movsb
inc
ret
mov
mov
lar
push
xor
dec
cmpsl
push
das
outsb
or
or
call
pop
dec
pop
ret
cmp
pop
ja
xor
hlt
int
mov
or
dec
pop
es
or
lds
cmp
out
add
sbb
dec
je
push
movsl
jge
clc
shll
nopl
outsl
inc
xchg
insb
add
cmp
ret
lahf
and
mov
adc
pop
xchg
fnsave
cmp
dec
in
mov
xchg
insb
arpl
or
sbb
imul
andl
adc
repz
add
popa
xor
xchg
cltd
outsb
pop
in
fstpt
lret
cmpsb
jne
push
push
or
push
ja
jns
inc
out
cmpsl
inc
xchg
xor
js
lock
jge
xchg
push
dec
imul
popf
clc
xchg
jmp
mov
sub
sub
sbb
mov
pop
lock
mov
popf
xchg
ja
pop
test
js
lea
adc
popa
stos
xor
shrl
sbb
dec
mov
dec
in
lds
mov
xchg
xor
sub
leave
pop
sahf
jp
xchg
mulb
fidivl
jmp
sbb
andb
dec
fdivl
sub
dec
fucom
sahf
negl
pusha
in
jne
inc
mov
into
fisubs
sbb
data16
movsb
into
fcomps
test
sub
in
stos
ss
notl
push
xor
and
imul
pop
push
jne
aas
into
daa
xchg
ret
sti
jno
pop
mov
jge
or
jp
dec
inc
mov
and
jno
push
fbstp
fdivr
daa
roll
pop
lahf
and
stc
push
shl
xchg
adc
sahf
lret
rclb
mov
inc
jle
orb
and
jne
pop
scas
inc
dec
dec
add
imul
adc
dec
pop
addl
or
pop
mov
adc
pop
imul
and
adc
cmp
pop
mov
mov
in
sub
push
adcb
es
adc
xchg
mov
or
and
mov
fs
lret
dec
cli
push
out
add
xchg
int3
push
les
add
jb
xor
insl
inc
adc
mov
outsl
ret
jns
jns
aaa
lret
jb
insl
add
pop
xchg
mov
call
dec
mov
out
ds
test
pop
sahf
out
adc
loop
jae
testb
ficomps
stos
xchg
dec
sub
mov
and
cmp
lods
insl
call
outsl
jmp
mov
xlat
repz
xor
addr16
mov
cmp
mov
imul
pop
mov
ficoml
aam
orb
push
rcrb
outsl
and
push
mov
fcmovnu
inc
lds
imul
scas
ret
cmp
ja
dec
xor
mov
inc
movlps
xorb
sbb
daa
pop
and
jl
mov
cmp
and
hlt
jns
mov
sub
push
cwtl
mov
out
push
in
lods
ljmp
and
mov
fs
mov
adc
cmp
mov
push
insb
mov
mov
mov
xchg
jmp
or
jb
outsb
mov
push
loop
add
push
inc
jne
bound
aad
ljmp
jbe
inc
push
cmp
enter
pop
addr16
xor
call
cld
test
sub
push
sub
popl
imul
inc
in
add
jecxz
mov
xor
cli
sub
dec
push
out
jp
inc
adc
filds
push
and
jmp
pop
cmp
clc
pop
xlat
out
into
dec
fnstsw
fcompl
lds
mov
push
adc
lock
pushf
push
fsubrp
jmp
xor
push
sbb
jp
mov
or
out
dec
and
add
loop
les
rcrb
jg
fidivrs
mov
lret
xchg
sub
push
mov
dec
clc
mov
push
dec
pop
hlt
inc
sti
xchg
sub
mov
in
xchg
push
inc
lahf
das
add
inc
repnz
inc
aas
fstpl
pop
ss
nop
lock
cmp
jp
xor
pop
mov
ljmp
sbb
fsubrp
clc
cmp
cli
add
andb
rcrl
mov
mov
std
jno
fcoml
sbb
sbb
pop
int
mov
rcll
cs
sub
mov
bound
js
notl
fwait
mov
call
arpl
mov
roll
mov
push
cmpsb
or
arpl
mov
insb
lea
adc
lret
jbe
outsl
addl
cmpsl
lods
mov
arpl
inc
inc
cld
leave
add
inc
aaa
ljmp
int
cltd
and
loope
jge
push
cmpsl
inc
inc
ficomps
hlt
jbe
outsl
fistl
in
cmp
out
clc
and
dec
scas
add
dec
pop
sbb
add
mov
inc
sbbb
push
subb
inc
insl
inc
dec
sahf
pop
in
cld
dec
les
incb
or
rcll
fs
sarl
xor
lret
xchg
loop
arpl
xor
jne
xor
mov
fidivrl
inc
jp
sahf
clc
ja
loop
or
mov
sbb
insl
inc
dec
das
shl
gs
push
adc
sbb
data16
bound
mov
cmp
aam
pop
icebp
dec
or
popf
and
enter
cmp
cmpsb
mov
xor
sbb
loop
imul
clc
int3
mov
xor
inc
cmp
xor
push
fildll
and
and
or
mov
or
add
cs
data16
cmp
sub
jg
aaa
lret
nop
and
sbb
aam
push
pop
and
mov
cli
daa
or
jne
jmp
out
jle
sahf
mov
in
push
and
xor
cmpl
fiadds
or
daa
sbb
inc
xchg
fstpt
sbb
mov
ja
pop
mov
mov
xchg
bound
inc
lea
adc
pop
imul
out
test
sub
insl
sub
ret
data16
fs
rcrl
into
and
loope
mov
mov
fs
rep
ljmp
test
xchg
loope
in
fimuls
outsb
add
ja
addl
mov
aad
mov
outsb
js
lds
mov
inc
fdivrs
push
popf
pushf
stc
mov
ss
or
faddl
xlat
jnp
inc
and
outsl
aam
mov
movsl
cmp
pop
mov
inc
sbb
out
xchg
jg
inc
sbb
mov
call
rcrb
loopne
sahf
sti
addl
stc
imul
pop
cmc
je
sub
in
stos
ljmp
negb
outsb
xchg
out
stc
mov
add
sub
pop
cmp
push
dec
dec
cmp
adc
seto
int
xor
sbb
ds
inc
lds
sbb
add
xchg
int
fwait
pop
stc
and
out
idivb
push
ret
rorl
or
mov
push
sbb
repnz
inc
jne
push
mov
push
mov
jg
test
push
test
cmp
inc
popf
jp
and
and
mov
ja
dec
in
je
add
lret
lods
pop
mov
mov
dec
rcll
xor
movsl
cmp
movsl
mov
pop
in
repnz
cwtl
cmp
jns
mov
or
shlb
dec
loop
jae
mov
sub
pop
pop
sbb
aas
das
xchg
sbb
mov
ljmp
movsb
cmp
inc
loope
fisubrl
ret
in
jp
mov
loopne
sbb
adc
addr16
dec
sti
inc
fsubrl
and
or
or
mov
fmull
xchg
notb
and
in
ljmp
sbb
gs
cli
jbe
pop
add
in
adc
ljmp
inc
cltd
jmp
dec
and
push
mov
in
aas
sbb
cmp
int
push
cli
xchg
fadds
popf
inc
push
scas
dec
in
push
js
lgs
pop
xor
lahf
ss
shrl
or
dec
dec
ja,pt
in
outsb
xchg
sub
pop
ret
inc
push
pop
xor
sub
adc
add
jae
cmp
push
push
push
popf
pushl
into
pop
add
nop
nop
aad
outsb
pop
mov
xor
aam
push
or
or
into
lea
into
fstps
push
pop
and
inc
das
cmp
mov
test
fisttpll
popa
jg
sub
cmp
xor
fistps
adc
pop
dec
push
xchg
mov
rcrb
in
push
repnz
sub
lret
bound
pop
xchg
addr16
push
ficoms
fildl
ljmp
call
enter
ljmp
outsl
cmp
and
inc
adc
out
data16
mov
in
jecxz
mov
sbb
stos
out
dec
fsub
movsl
and
orl
jae
and
sbb
xor
pop
fidivs
lret
sbb
dec
stc
cmp
cmp
sahf
mov
ja
cltd
sub
adc
sbb
sahf
stos
push
mov
bswap
and
pop
adc
sbbl
jns
aaa
adc
outsb
gs
std
bound
in
sub
jno
mov
pop
or
iret
adc
mov
cmp
sub
lahf
dec
mov
out
sbb
adc
inc
cmp
lcall
and
xchg
xchg
aas
mov
cmp
jle
inc
push
push
cmpl
lods
dec
mov
jg
push
loop
xchg
adc
dec
or
push
jo
jo
mov
xchg
mov
std
shrb
out
ja
sbb
jle
xor
std
inc
pop
mov
push
sub
movsl
lret
inc
jecxz
jnp
xor
outsl
andl
in
jl
pop
add
roll
jmp
push
lock
test
xchg
lock
loop
not
movsl
inc
lret
popf
mov
iret
dec
inc
pushf
push
push
stos
adc
aas
adc
out
in
das
adc
outsb
sub
enter
xchg
dec
cwtl
imul
inc
inc
xchg
jg
shll
xor
pop
ljmp
mov
stos
jg
rcll
xchg
push
loope
adc
mov
test
fdivs
movsb
mov
hlt
mov
in
inc
movsl
cmp
test
pop
dec
push
out
cmp
or
sub
mov
jb
imul
and
insb
out
add
inc
sbb
mov
andb
popf
xor
xlat
inc
push
mov
xorb
cmc
and
sub
fiaddl
leave
adc
out
inc
xchg
scas
dec
lahf
push
hlt
test
test
inc
cmc
fnstsw
scas
insb
jne
mov
mov
addr16
adc
mov
sbb
in
adc
mov
enter
mov
mov
or
ss
daa
mov
dec
out
outsl
sub
adc
mov
jns
ss
stos
imul
scas
lret
push
in
xchg
mov
mov
lret
leave
call
push
mov
jo
lock
jae
subl
es
xor
rolb
push
aaa
and
and
xchg
pop
push
das
cmp
mov
insl
jge
decl
xor
shrl
into
dec
fcmovnb
xchg
and
in
iret
loopne
cmp
arpl
dec
lret
cmp
push
jmp
dec
pop
adc
addl
ficompl
adc
icebp
gs
sbb
mov
movsl
shrl
das
sti
or
orb
adc
xchg
pop
scas
sbb
xchg
sbb
out
or
mov
mov
mov
js
xor
mov
ret
push
push
cmpsb
add
nop
pop
add
pop
jne
arpl
add
test
test
rcll
repnz
lret
cmp
adc
daa
jno
jno
xlat
aas
mov
lea
adc
mov
cltd
popa
arpl
cld
lods
pop
sub
mov
bound
dec
add
js
mov
fldz
imul
pop
mov
ret
ljmp
fldt
inc
test
cmc
dec
movsl
arpl
push
insl
int3
pop
adc
out
outsb
pop
ret
imul
pop
add
add
movsb
aaa
xor
sub
push
xchg
xchg
and
lret
lock
loope
cmpsb
std
push
xchg
es
mov
push
test
pop
jl,pn
xor
mov
sahf
les
add
dec
cmp
mov
call
or
shlb
in
xchg
popa
jg
repnz
cmp
je
aas
xchg
jmp
pop
jg
movsl
out
xor
pop
push
dec
je
mov
aad
cli
xchg
ss
jmp
shll
cmc
in
mov
rorb
mov
xchg
cmp
mov
mov
jg
dec
testb
pushf
aad
mov
ja
mov
mov
aaa
xor
and
mov
xchg
sbb
in
ds
dec
cmpsb
or
or
movsb
sub
adc
mov
aaa
jne
add
mov
cmpsl
les
cwtl
mov
adcl
mov
push
add
gs
or
dec
insl
jo
out
mov
mov
push
push
mov
shrl
test
mov
and
out
sub
outsl
testl
arpl
xchg
inc
sub
push
daa
push
jb
jbe
xchg
push
push
push
push
cmpsb
add
frstor
xor
in
push
sbb
mov
jno
lods
push
aas
shrb
scas
mov
in
xchg
aaa
ss
add
lods
mov
dec
mov
or
repnz
dec
mov
jp
and
or
sbb
pop
das
fidivs
pop
add
ds
dec
mov
push
sahf
push
popa
and
add
loope
xchg
pop
add
fldenv
orl
ficoml
or
mov
push
inc
xchg
xchg
stos
in
sub
jnp
pop
mov
outsl
ds
dec
sbb
jne
jbe
xor
xchg
aaa
fisttpl
pop
loop
clc
lret
add
or
das
test
dec
imulb
gs
in
outsl
stos
sbb
ds
les
imul
ds
clc
out
mov
pop
insl
insb
xlat
into
cmp
jnp
or
fisttpl
pop
fisubs
cmpsb
out
xchg
pop
mov
dec
cmp
ss
fcomps
daa
push
inc
mov
pop
inc
fisttpl
jno
cs
stos
jmp
andb
scas
scas
inc
aad
jb
andb
addr16
pop
inc
fld
insb
das
pop
test
hlt
cmp
cmp
jmp
cmp
in
inc
stc
ret
push
add
vmovhpd
pusha
dec
jge
aas
xor
ds
xchg
aam
adc
out
lahf
or
mov
fs
mov
shlb
lret
dec
cld
jge
mov
scas
or
out
mov
jecxz
ret
lds
or
push
push
cmp
xchg
mov
in
cmc
das
pop
or
dec
push
adc
dec
fld1
or
mov
je
je
sub
dec
push
adc
cmp
and
sub
xchg
jnp
push
cmp
loopne
mov
mov
dec
dec
push
cwtl
aas
imul
in
daa
xchg
mov
out
cmp
orl
cld
cmpsb
jl
daa
stos
or
adc
fnstenv
push
andl
pop
dec
bound
inc
aam
test
inc
cmp
cld
fidivrl
in
pop
push
push
add
jae
and
in
mov
lret
out
sti
pop
aad
fsubrs
fwait
ds
adc
or
inc
xor
fisttpl
loope
mov
fsubp
sub
mov
lea
rorl
mov
mov
rclb
sub
imul
lods
xchg
ret
sub
call
adc
push
pushf
hlt
inc
cli
pusha
cmp
cwtl
aaa
sbb
es
movsb
ds
pop
out
mov
mov
xor
sbb
sub
adc
mov
cmpsb
sub
mov
adc
mov
xchg
mov
lods
inc
mov
es
mov
mov
sbb
sti
jl
mov
add
mov
mov
adc
adc
bound
xchg
push
popf
mov
mov
pop
jb
jp
jl
les
js
sbb
xchg
mov
inc
xchg
and
cwtl
pusha
mov
mov
fnstcw
scas
xchg
aam
repz
rorb
jno
sti
adc
movsb
arpl
jo
js
es
decb
push
jo
je
cmp
jno
jmp
or
mov
loopne
pop
or
xchg
mov
mov
cmp
js
mov
adc
sbb
fmull
fcompl
add
lret
data16
std
jle
inc
nop
in
push
ret
ss
push
push
pushf
sbb
fldl
testl
adc
inc
scas
adc
push
fisubrl
cmp
jns
adc
pusha
dec
xorps
jbe
rorb
notl
sub
fldcw
andb
xor
xlat
and
xor
mov
cmc
or
test
add
add
add
adc
and
stc
nop
addb
sbb
cmpsb
dec
in
jae
xor
xchg
aad
imulb
mov
sbb
dec
sub
shl
outsl
jle
je
mov
cmp
or
cmp
sub
ret
lds
cmp
test
pushf
xchg
insl
cld
or
dec
in
aas
fwait
test
inc
imul
roll
popl
or
sbb
jbe
mov
das
test
aad
movsl
mov
je
and
xor
sub
jbe
fisubrl
dec
call
pop
cmc
aaa
in
xchg
jo
mov
insl
mov
and
mov
dec
aad
out
sub
lods
rcl
testb
mov
cmp
test
push
dec
sti
pop
imul
adc
dec
imul
faddl
and
lret
repnz
sub
jg
lcall
or
repz
imul
jle
cli
jne
mov
out
shlb
xor
adcl
sbb
lahf
push
mov
cmp
int3
push
std
mov
int3
jns
shll
mov
cli
or
lret
imul
scas
daa
adc
mov
test
js
sti
outsl
sub
ljmp
pop
hlt
shr
fistps
and
jno
punpcklbw
push
aam
or
push
push
sarb
mov
mov
cmp
xorl
rclb
inc
addr16
xor
add
mov
fdivrl
push
adc
dec
jmp
mov
push
cmp
aam
pop
popa
clc
cmpsl
ret
jle
adc
enter
mov
cmpb
pop
das
movsb
cmp
addr16
mov
scas
and
jb
pop
aad
jge
xchg
and
mov
mov
push
sbb
aaa
add
mov
adc
cmp
mov
sub
imul
cli
add
movw
pop
pop
shrl
outsb
push
sbb
mov
mov
popa
sahf
rclb
lret
bound
les
out
or
lods
xor
and
setns
mov
aam
pop
mov
rorb
lea
call
repnz
pusha
test
jno
nop
shlb
pop
push
ret
mov
mov
cli
push
out
addr16
jae
daa
mov
out
jo
jmp
ss
jnp
cmp
lahf
dec
and
sbb
sarl
jmp
cmp
lea
inc
cld
jo
and
jmp
arpl
push
sbb
sub
ljmp
push
dec
mov
adc
sti
xchg
pop
mov
sbb
cmp
lods
fcmovnbe
xchg
hlt
mov
repz
mov
stc
xchg
lods
imul
rclb
jae
mov
popf
and
ja
aaa
sub
xlat
pop
pop
adc
leave
loopne
int
sarb
dec
cmp
ret
pop
jo
out
jmp
nop
jno
shl
mov
insb
jbe
lahf
mov
xchg
stos
mov
les
dec
xorl
int
add
pop
sarl
loope
in
inc
and
lock
and
scas
push
je
shlb
mov
or
add
cmp
adc
sbb
jb
jge
push
ss
sbb
enter
adc
add
mov
insl
xlat
testb
and
in
jmp
test
or
in
or
loop
mov
les
xchg
and
lods
cmc
xchg
adc
stos
push
push
jo
lret
dec
into
xor
jne
sub
xchg
dec
mov
sub
push
movsl
out
cmpsl
cmp
fucomip
add
nop
jno
adc
push
icebp
outsb
jne
mov
cmpsl
sub
dec
cli
pushf
fsubrs
sbb
cwtl
jbe
xchg
int3
or
call
pop
mov
cli
xor
cmp
pop
push
cmc
sub
cwtl
pop
jl
xchg
xor
les
rcrl
mov
push
insl
pop
mov
outsl
repz
test
fbstp
dec
sub
sbb
js
sarl
scas
inc
insl
repz
insb
add
xchg
add
xor
cli
test
movsb
fsubrs
cwtl
fnstsw
daa
jns
sub
popf
or
icebp
jle
loope
dec
cmp
stc
and
push
add
subb
push
cmp
std
cs
fcompl
cmc
mov
xlat
leave
lret
es
mov
lods
cltd
mov
and
test
inc
out
lea
enter
std
push
mov
leave
sti
jp
jns
imul
repnz
jae
mov
mull
ret
cli
inc
mov
std
les
test
leave
cmp
push
cwtl
inc
xchg
leave
into
dec
mov
or
mov
adc
push
cmp
sub
cmpsb
adc
sti
xchg
cwtl
mov
jnp
call
mov
js
dec
idiv
push
enter
sub
cmp
je
xor
cmp
and
mov
push
mov
aaa
fiaddl
cmp
ljmp
es
add
ljmp
outsb
xor
iret
cmp
cs
jne
sti
mov
dec
pop
fcoml
mov
push
clc
popf
push
xchg
pushf
xchg
enter
pop
dec
mov
push
fdivrs
aad
inc
leave
inc
dec
popa
loope
and
pop
or
xchg
add
call
aas
dec
xor
clc
jne
cmp
out
ja
outsl
fmul
sbb
inc
pop
out
and
mov
sbb
and
clc
push
sahf
inc
lods
cs
loopne
aad
jb
xchg
mov
mov
ljmp
mov
push
inc
outsl
aas
ds
popa
insb
shll
sub
insl
mov
sbb
dec
cmpsb
in
jg
push
enter
leave
mov
jae
out
call
xchg
adc
mov
repnz
mov
inc
inc
das
push
repnz
ss
jmp
jns
popa
stos
insb
ror
fdivs
jg
ljmp
idivb
cs
add
sub
mov
add
test
mov
xor
xlat
mov
cmp
push
filds
arpl
fildll
ret
mov
inc
iret
pop
cltd
cmp
js
loop
dec
pop
add
jne
xor
inc
mov
or
or
ljmp
imul
jmp
mov
push
sti
test
sub
fnstsw
jb
rcrl
xor
shr
inc
push
inc
dec
xor
inc
cmp
imul
mov
repnz
cli
cwtl
cli
mov
nop
pushf
rorl
mov
or
les
push
dec
add
push
jmp
aad
or
mov
cmp
jno
xchg
mov
jns
add
dec
inc
push
mov
xchg
aaa
cmp
icebp
into
adc
sbb
imul
sub
add
loopne
stos
push
aas
loop
jno
cmp
cld
enter
mov
jl
call
js
adc
mov
xchg
jo
and
mov
mov
fwait
rclb
cmc
int3
pushf
xchg
iret
mov
outsl
les
push
mov
pop
xor
cmpsl
popa
jl
and
ret
sub
mov
std
mov
int
mov
imul
lock
pusha
fs
fbld
xchg
subl
mov
dec
ljmp
lret
loop
jo
dec
lock
popa
rclb
jns
int
addr16
in
mov
sbb
and
mov
add
imulb
sahf
adc
jecxz
add
shll
push
dec
push
jge
dec
fisttpl
movsb
mov
leave
inc
pop
sub
ljmp
hlt
jecxz
stos
jecxz
mov
push
stos
scas
pop
adc
adc
add
fwait
mov
in
fwait
lods
lret
mov
adc
xchg
cmp
stos
mov
sbb
pop
fnstenv
int
push
imul
lock
lcall
push
or
cmp
ja
push
cltd
popl
add
and
cli
jne
cld
mov
push
iret
imul
call
ss
insb
scas
sbb
popa
cmp
negb
mov
outsb
ljmp
mov
inc
xlat
cmp
mov
fstps
xor
cli
jp
in
push
andb
jecxz
enter
shlb
mov
cmpsb
inc
nop
std
out
in
xchg
insb
pop
dec
sub
hlt
mov
into
ljmp
cmp
jae
pop
and
xor
dec
popf
and
or
sbb
xor
inc
push
sbb
mov
lods
lea
push
xchg
add
dec
dec
sbb
and
pop
rcl
fmull
mov
stc
out
mov
out
add
iret
cmp
push
fcmovnu
cwtl
sbb
adc
xchg
cmp
lret
cmp
mov
lahf
and
add
loope
lock
mov
in
rcrl
in
add
pop
jge
shrl
mulb
aad
jae
pop
in
inc
push
sti
jle
push
cmp
in
adc
sub
jbe
adc
out
dec
xlat
scas
out
mov
in
orl
lock
or
lds
push
scas
pop
daa
mov
arpl
fiadds
or
rep
shrl
xchg
sub
add
fistpll
lods
add
sbb
cld
xchg
insl
fstp
cs
das
xor
js
stos
pushf
fwait
sti
add
push
lods
jbe
mov
movsl
fldt
repnz
add
mov
or
fdivrl
inc
mov
shlb
and
mov
rclb
mov
mov
adc
stos
pop
xor
pop
jae
je
ret
inc
in
test
jle
stos
pop
or
sbb
jo,pn
add
sub
xor
aas
js
pusha
sbb
jmp
cmp
iret
or
mov
xchg
mov
in
mov
mov
adc
clc
sub
sbb
popf
shll
test
add
push
cmp
sub
aam
imul
pop
rcrl
insb
lods
jne
xchg
arpl
add
cmp
push
or
outsb
jge
stos
lods
mov
xor
pop
mov
dec
movsl
call
shr
stc
aaa
sbb
mov
add
adc
and
insb
add
xor
xchg
lret
cmp
jno
and
stos
cmp
push
fnstenv
in
inc
inc
sub
clc
aaa
inc
popa
leave
pusha
xchg
cli
add
out
mov
addr16
scas
fiadds
out
adc
imul
js
and
push
mov
insl
in
nop
add
mov
jne
xchg
es
jno
dec
in
xchg
fadds
add
push
xchg
jp
sub
cmpsb
hlt
add
cmp
pop
and
lds
inc
fcmovbe
adc
pop
dec
loope
jmp
fcomps
js
mov
jg
iret
outsl
pushf
and
cmp
and
dec
lahf
sti
add
pop
dec
xchg
gs
xchg
daa
ljmp
push
inc
xor
cwtl
scas
outsl
data16
jae
mov
mov
mov
and
cld
or
lds
mov
into
aaa
dec
pop
bound
mov
mov
fsubrs
sbb
mov
jecxz
adc
fcoms
sub
inc
jno
je
inc
push
pop
push
push
bound
ss
mov
pop
lret
out
mov
jl
test
repz
mov
cmp
into
in
or
in
push
mov
sahf
mov
sub
repz
fisttpll
icebp
rcrb
or
outsb
push
push
mov
jle
or
inc
adc
out
lret
push
loope
dec
fs
mov
sbb
jbe
xor
scas
imul
lods
les
or
ror
and
mov
fstpl
rcl
push
jmp
fmul
pop
int3
inc
and
aam
test
rcrl
loope
loopne
lret
mov
sub
pop
popf
gs
pop
push
sub
inc
or
fidivrs
push
sub
mov
shl
fildl
scas
mov
push
inc
stos
adc
enter
push
icebp
fidivrs
pop
mov
pusha
sub
pop
adc
negl
outsl
sub
inc
pop
adc
ret
add
pop
fbld
mov
push
inc
push
test
rclb
sti
sbb
mov
mov
mov
mov
or
or
mov
pushf
lods
stc
adcb
cmp
jae
pop
xor
inc
std
sbb
jg
out
in
enter
pop
push
enter
std
push
inc
ljmp
shll
jle
inc
inc
pop
ja
push
insl
call
inc
mov
fistpl
cmpsb
leave
mov
dec
imul
inc
pop
dec
aad
mov
ret
loop
mov
cmpsb
xchg
fmuls
imul
xchg
jge
mov
nop
mov
dec
pop
mov
jb
inc
mov
loop
mov
int
repnz
cmpsb
add
push
shrb
or
out
add
mull
pop
lock
lds
mov
cmc
mov
imul
cli
clc
daa
mov
adc
push
mov
jmp
xchg
dec
pop
inc
dec
pop
adc
je
xchg
jmp
ret
jns
rcrl
icebp
imul
add
repnz
es
dec
loopne
xlat
mov
bound
adcl
or
xor
pop
je
fistpll
sbbb
push
movsb
push
out
inc
cmp
xor
outsl
add
cld
xchg
push
leave
pop
mov
sbb
mov
mov
cmc
sarl
out
je
ja
idivb
mov
push
jne
push
adc
adc
int
mov
inc
cs
add
andb
mov
jp
ret
pop
mov
jo
aas
insb
dec
jecxz
inc
push
cmc
cmp
sbb
aad
sti
into
faddl
aam
outsb
outsl
adc
test
mov
or
jg
scas
dec
xor
xor
dec
loopne
call
fisubl
test
or
push
lahf
bound
cmp
fs
add
push
test
mov
clc
bound
adc
js
adc
hlt
popa
and
mov
cmp
sub
ljmp
inc
jg
loope
fisttpl
xor
outsl
jae
jne
insb
mov
jae
or
mov
xchg
std
or
fwait
arpl
cmp
imul
push
clc
or
dec
fbld
xchg
jp
add
jmp
icebp
mov
sub
mov
sahf
cli
add
das
adc
fcmovne
push
xchg
pop
or
aaa
fimull
mov
mov
inc
rcrb
xor
sbb
test
stc
cli
lea
inc
dec
jmp
lahf
sub
cmp
cmp
ds
push
outsb
fwait
cmpsl
loopne
adc
sar
aam
mov
in
jo
daa
ret
subb
popa
push
mov
dec
mov
xchg
movsb
or
repnz
jge
sbb
add
cld
mov
jmp
je
inc
ja
je
jle
or
push
imul
add
adc
adc
jmp
sub
mov
arpl
mov
add
mov
sub
scas
fiadds
enter
out
xchg
lds
xor
ljmp
dec
popf
xor
nop
lock
pop
sbb
lods
call
mov
outsb
mov
push
cmp
inc
adcl
mov
dec
cmp
mov
xor
shrb
into
sbb
dec
cmp
jle
inc
push
ljmp
popa
es
in
mov
and
adc
pop
inc
sbb
mov
jne
cmp
mov
jne
int3
xlat
and
popa
clc
push
ljmp
lock
dec
push
testl
mulb
out
outsl
sub
push
and
cmp
test
xchg
pushf
inc
sub
add
je
sub
stos
outsl
test
sbb
jno
loopne
xchg
loope
lods
jmp
loop
cltd
push
icebp
popa
jmp
daa
cmp
or
gs
push
loopne
or
cmc
adc
push
mov
mov
xchg
xor
hlt
push
add
jp
add
xchg
negl
and
aaa
cs
xchg
sub
iret
mov
adc
or
mov
subl
dec
dec
jno
sbb
push
scas
cmp
iret
test
scas
fldz
cltd
cs
jnp
movsl
sub
stc
bound
pusha
das
mov
xchg
gs
jmp
mov
in
xor
sbb
jl
fsubrl
jnp
xchg
in
test
pop
mov
idivb
test
loope
icebp
inc
mov
test
sub
xchg
insl
xor
and
mov
jns
fsubl
mov
mov
jmp
cmp
fxsave
rcrl
mov
lret
xor
fcomps
cmc
in
adc
xor
dec
lods
pop
sbb
adc
mov
cmpsl
dec
loope
dec
fmuls
mov
loope
pop
lock
cmp
jp
lret
imul
iret
fistpl
ficoml
jmp
subl
je
jle
pop
push
mov
sub
xchg
add
fidivs
and
jns
divb
pop
adcb
inc
pop
push
es
lods
or
sbb
mov
push
test
mov
pop
movsb
nop
std
lret
int
mov
dec
dec
ficomps
psllq
xor
dec
sub
adc
insl
dec
loope
mov
iret
frstor
std
dec
sub
leave
test
dec
popa
push
inc
push
mov
and
imul
stos
or
mov
std
mov
push
and
in
clc
push
dec
xor
sub
in
fwait
sub
lret
repz
xor
add
mov
popf
repnz
test
cmp
push
fldt
adc
dec
jne
sub
pushl
ret
mov
add
push
mov
xchg
xlat
in
inc
ljmp
ds
jno
jbe
lds
call
inc
pop
sahf
ljmp
sub
das
inc
jns
fsubr
cwtl
popa
inc
fistl
cmp
imul
divl
adc
lret
xchg
or
stos
fisttpl
xchg
jle
sub
jl
xor
sti
jle
pop
pop
inc
dec
ret
enter
cmp
dec
cld
mov
nop
insl
aad
pop
jp
push
xchg
jmp
fdivrs
insl
xor
pop
outsb
lea
movsb
mov
xor
mov
inc
insb
push
jae
orb
push
fcmovne
je
cmpsb
jo
mov
iret
sub
enter
andb
xor
add
addr16
xchg
cmpsb
inc
sbb
adc
cmpsb
xchg
lea
push
lea
jge
or
adc
iret
lods
js
cmpsb
inc
ja
sti
nop
jle
jmp
dec
pushf
sub
dec
cmpb
movsl
fldpi
scas
xlat
dec
loope
bound
fldenv
js
sbb
pop
add
jge
adc
pushl
xchg
int3
enterw
xchg
push
imul
pop
jg
sub
xchg
pop
out
push
dec
or
xor
dec
ret
xor
lods
adc
mov
imul
pop
mov
sbb
or
sbb
mov
add
fwait
scas
mov
stc
mov
add
fwait
xchg
orl
mov
leave
mov
sub
jp
sub
pop
cmp
ja
std
clc
sbbb
lds
adc
push
mov
push
hlt
dec
cmpsl
xchg
jl
enter
mov
sbb
out
jp
jae
mov
jecxz
mov
lods
xorl
pop
push
mov
inc
jo
mov
loopne
out
bound
mov
daa
iret
xchg
in
push
and
dec
stc
nop
jb
cltd
es
aad
push
pop
movzbl
jnp
imul
fcmovbe
push
mov
inc
ss
sub
adc
xchg
cmc
mov
sbb
mov
push
sbb
or
pop
jo
mov
lret
scas
leave
push
lods
or
or
fdivr
pop
or
nop
mov
push
or
sbb
imul
sbb
iret
pop
push
mov
inc
ja
shlb
ret
pop
in
xchg
addr16
cwtl
jae
leave
mov
mov
sub
in
xor
notl
cmp
inc
push
push
mov
xor
xchg
push
xor
mov
fwait
mov
jne
repnz
cmp
push
xchg
sub
inc
jg
jae
xor
add
dec
jle
xor
pop
push
or
mov
xor
xchg
jo
std
test
in
add
in
scas
adc
or
movsb
inc
ljmp
out
mov
loopne
sbb
add
cmpsb
jae
fnsave
daa
sub
addl
cwtl
mov
loope
cmp
std
push
adc
jns
jmp
jecxz
mov
fnsave
push
xor
add
xor
pop
xlat
movsb
inc
pusha
sti
popf
std
lods
imul
pop
mov
icebp
lea
pop
adc
or
das
icebp
or
dec
jecxz
jbe
lret
xchg
or
fstl
loopne
sub
inc
sbb
out
lahf
pop
sbb
jmp
lret
popa
sti
inc
mov
stc
push
pop
jmp
int
and
movsb
fnstenv
shrl
xchg
cli
push
iret
fdivrl
xchg
dec
jae
mov
lock
dec
inc
dec
out
loop
sub
sub
xor
mov
fs
xchg
lods
inc
pop
xor
dec
fcomi
inc
out
dec
pop
mov
leave
lahf
scas
adc
outsl
mull
cltd
std
lret
cli
xchg
shlb
cmp
cmp
dec
add
dec
shrb
and
clc
ss
imull
shr
pop
pop
mov
ret
pop
aaa
test
inc
inc
popa
xor
push
xchg
sub
repz
mov
leave
adc
adc
insb
cli
mov
inc
xlat
inc
dec
push
sahf
mov
inc
push
stos
repz
pusha
test
xchg
test
fwait
sbb
es
or
js
xor
shld
nop
or
jnp
outsb
sub
in
ret
outsl
cmp
test
cli
dec
sub
jl
cmp
or
jno
mov
popa
mov
jecxz
ss
inc
sub
mov
mov
push
addr16
pop
test
shll
mov
adc
cmp
xor
hlt
divb
mov
ds
mov
std
mov
sub
jp
push
test
xchg
sete
into
iret
adc
sarl
popf
pop
enter
pop
and
insb
lret
mov
dec
xchg
lea
hlt
insl
popf
sbb
call
out
test
int
jg
xchg
push
inc
test
clc
jae
popf
inc
fwait
mov
adc
sub
fxch
adc
push
inc
out
adc
or
inc
mov
sub
lret
imul
push
in
dec
push
cmpsb
popf
nop
add
hlt
test
mov
scas
hlt
mov
lahf
aad
int
mov
dec
mov
jp
jle
ret
cs
pop
insl
inc
sbb
lret
inc
xchg
hlt
dec
fmull
xchg
paddsw
popf
sbb
ljmp
lcall
dec
mov
add
stc
or
dec
or
and
add
cmc
aad
int
adc
repnz
in
cld
hlt
xchg
and
jmp
xlat
jmp
cmc
mov
fucomi
daa
push
push
out
arpl
cmp
sbb
jo
push
add
pop
dec
xchg
dec
dec
xchg
jmp
jbe
pop
sub
hlt
daa
mov
xor
pop
adcl
sti
or
xor
ja
mov
mov
add
in
jbe
cmc
push
int
add
addl
xchg
mov
ljmp
inc
mov
jg
imul
jnp
cmp
mov
pop
inc
mov
daa
aaa
or
inc
jp
pop
xor
cmpsb
cmp
cwtl
stc
popf
cwtl
dec
cli
andb
xchg
mov
popf
ja
lret
dec
inc
push
insl
inc
aas
push
clc
adc
scas
cmc
mov
cvtps2pd
cs
adc
xor
and
fdivl
mov
insl
inc
ja
xor
lahf
mov
dec
sub
hlt
and
dec
cltd
leave
jle
and
inc
lcall
and
int3
and
or
into
js
cmp
dec
dec
dec
sti
adc
dec
scas
into
mov
les
inc
mulb
dec
sbb
leave
adc
aam
pop
scas
in
ret
scas
iret
push
pop
cltd
test
push
int3
mov
sbb
mov
scas
cmp
call
dec
jns
shlb
and
mov
imul
mov
dec
mov
push
incl
adc
mov
cmp
adc
or
xor
add
jb
lret
cltd
push
fmuls
ret
out
or
xchg
or
inc
repz
std
jo
xchg
fadd
test
ja
dec
xor
test
adc
xchg
call
inc
fwait
outsb
push
cmp
cltd
jbe
sbb
addb
mov
daa
jmp
add
cmpsb
fstpt
aam
cmp
iret
inc
in
idivb
xchg
fnstsw
push
sub
repz
adc
jmp
add
data16
lods
jmp
outsl
mov
xor
adc
lret
or
xor
pushf
and
js
sti
in
xor
lock
push
mov
xchg
popa
mov
fistpl
jl
xchg
popf
jmp
mov
mov
mov
or
nop
ds
mov
mov
mov
les
push
jg
call
xchg
scas
xor
int
and
std
push
lods
sub
repz
push
pop
xchg
rol
and
imul
lods
aad
xchg
inc
pop
or
pop
pop
mov
int3
lods
pop
pop
or
jecxz
pop
addr16
popa
inc
add
push
fisubs
cmp
sbb
pop
cli
sti
mov
jp
adc
or
cmp
push
pop
push
push
jle
add
xor
cli
imul
push
or
sbb
cwtl
cmp
xor
and
cltd
rorl
mov
or
mov
in
adc
adc
push
testb
or
ja
sahf
sub
cmpsb
mov
int3
inc
mov
fs
pop
or
inc
mov
loope
inc
cwtl
std
add
inc
inc
add
mov
xlat
pop
ss
pop
jae
sub
mov
and
push
and
cwtl
pop
inc
pop
jae
ja
hlt
test
leave
mov
cmpsb
xor
cmp
push
enter
cmp
aad
push
push
arpl
fsts
jl
enter
mov
out
xchg
je
cmpsb
movlps
sbb
mov
scas
ds
lahf
not
sbb
pop
mov
filds
out
jg
adc
aad
test
les
add
mov
clc
mov
or
and
xchg
push
add
mov
jno
or
jp
adc
jne
lock
frstor
cmp
clc
inc
pop
in
out
cltd
lods
inc
outsl
mov
cmp
seta
adc
pop
dec
jnp
rcll
js
and
stc
adc
sbb
je
pusha
out
inc
sbb
fsubrp
jmp
and
cld
sub
xchg
sub
repz
shr
xchg
adc
and
push
aas
dec
sbb
jns
pop
cmp
pop
dec
fildl
push
mov
out
scas
cmc
call
xor
and
pop
lods
je
fucomip
mov
loopne
xchg
sbb
cwtl
popf
xor
inc
jl
aaa
popa
mov
sbb
mov
pop
out
in
push
ret
mov
negb
dec
sub
adcl
test
mov
xchg
es
sahf
lahf
outsb
fwait
clc
mov
adc
roll
fisttpll
arpl
xor
mov
ret
pop
and
ret
iret
sub
bound
xchg
out
cmp
pushf
fwait
repz
inc
cmp
pushf
push
jne
popa
iret
and
mov
repz
jne
pop
repnz
xor
jne
xor
loopne
data16
lock
fisubrl
xor
pop
icebp
inc
add
je
fnsave
testl
clc
jae
jmp
fbstp
cli
mov
scas
ja
add
loopne
push
out
jg
repnz
jae
gs
fnstenv
decb
jl
fildll
fnstenv
repnz
mov
testl
jno
cmc
mov
jno
in
sub
loop
shrl
jle
mov
lock
in
push
out
jl
lret
shlb
icebp
xchg
sub
repnz
loope
pop
hlt
push
repz
outsb
add
mov
sbb
cld
jp
int3
imul
xchg
mov
sub
out
ljmp
pop
inc
push
es
andl
or
stos
mov
sbb
jae
cld
in
lock
dec
in
push
sbb
in
cmpsb
outsl
push
push
testl
or
clc
jge
enter
mov
cs
fwait
xchg
bound
lahf
negl
pop
xchg
fnstcw
sbb
add
clc
mov
cmp
push
ljmp
neg
popa
add
sahf
nop
stos
ret
lods
stos
inc
or
enter
cmp
push
sub
mov
aad
iret
pop
insl
cld
pop
decb
pop
jge
jmp
jbe
cmpsl
out
iret
mov
xchg
jmp
fimull
mov
push
xor
mov
daa
fists
mov
cmpsb
jge
push
pushf
das
outsl
hlt
in
int
and
lret
enter
js
cmpsl
jg
or
or
out
aam
jae
jecxz
cmc
sbbl
push
ffreep
in
fists
add
je
add
cmpl
or
adc
bound
rcl
dec
or
pop
xchg
and
jb
out
shrl
xor
in
test
loope
icebp
adc
out
mov
push
adc
sbb
hlt
xchg
mov
xlat
add
adc
sub
pusha
iret
test
jecxz
mov
repnz
sbb
insb
fidivs
adc
mov
cmp
ljmp
or
sbb
out
data16
aad
or
flds
icebp
jns
sti
ds
lods
push
push
inc
hlt
int
addr16
mov
dec
and
push
cmp
push
fsubl
test
orl
nop
cmpsl
jae
mov
movsb
fwait
in
hlt
iret
shll
dec
sub
mov
data16
daa
mov
mov
cwtl
push
xchg
jecxz
lret
out
mov
sti
imul
pop
xchg
mov
xor
mov
ret
sbbw
push
int
jne
test
inc
pushf
pop
adc
ss
xchg
sub
mov
in
jle
inc
mov
jg
movsl
pop
inc
pop
xchg
icebp
mov
test
adc
push
test
mov
adc
dec
jl
or
jp
lret
jae
out
xchg
mov
scas
lea
adc
jb
jae
inc
fcoms
adc
enter
mov
xchg
mov
pop
and
jp
f2xm1
movsl
mov
push
test
enter
imul
jne
xchg
out
add
mov
mov
cmp
bound
mov
jecxz
push
push
fdivs
out
subb
aas
out
pop
dec
loopne
insb
mov
adc
jo
aad
push
repnz
lcall
sub
dec
push
push
scas
aam
test
mov
pop
subb
xor
scas
cmc
mov
mov
in
inc
pop
push
cmc
or
lds
notb
jno
lahf
lods
aad
sbbl
and
scas
leave
ret
jge
bound
mov
pop
out
jmp
movsb
cli
lods
adc
inc
xchg
cmp
push
mov
dec
push
xchg
movsl
xor
sub
sub
add
and
mov
cmc
ljmp
sub
repz
dec
les
dec
in
cmp
push
repnz
aas
mov
push
fwait
xchg
sub
roll
and
pop
jle
sarb
and
movsl
pop
push
push
rorb
outsb
jnp
sti
jecxz
test
ret
cs
sbb
repnz
and
nop
push
dec
dec
jnp
jp
sbbb
sti
cmp
dec
out
inc
mov
cmpl
xchg
out
cwtl
insb
iret
inc
pop
xorl
movnti
sbb
mov
inc
push
mov
mov
iret
sahf
or
jnp
shll
fadd
outsb
sub
inc
cmp
mov
test
in
rorb
test
scas
rcrb
jns
jae
sbb
std
jo
arpl
pop
fwait
ret
or
cmp
pop
cli
push
ret
mov
rol
fs
insl
cs
loopne
cld
es
aaa
fnsave
inc
pop
jae
andb
sahf
or
dec
out
mov
xchg
add
cmpsl
mov
xchg
lahf
xchg
mov
jae
inc
inc
and
mov
iret
into
and
pushf
pop
fdivl
adc
mov
and
cmpsl
inc
xchg
pop
test
cmp
shll
cmp
outsl
jp
sarb
iret
add
xorl
add
jp
cmp
add
fists
inc
fsubs
enter
adc
adc
mov
je
dec
and
movsb
fidivl
or
sub
push
js
mov
push
incb
paddusw
xlat
fwait
sub
jb
sub
dec
xor
jg
and
adc
iret
or
popa
jo,pn
push
mov
psubw
push
mov
or
cmc
pop
add
ror
sahf
lret
mov
jbe
in
stos
inc
iret
mov
js
xchg
mov
adc
sbb
xchg
ret
movsb
mov
mov
add
pop
mov
push
or
ds
repz
jl
mov
daa
mov
or
push
jno
popf
pop
dec
add
stos
push
cmp
jg
adc
out
scas
insb
je
jns
test
repnz
fildll
cmc
jmp
dec
pop
xchg
jl
into
mul
add
or
xor
cmpsl
jmp
sti
scas
insl
out
sbb
mov
mov
inc
pop
sub
inc
push
jae
scas
add
sahf
xlat
outsb
mov
push
add
sbbl
add
sti
push
imul
dec
cli
pop
fnstenv
or
sub
data16
testl
jns
loope
call
sbb
inc
sbb
mov
push
adc
sub
add
jno
mov
pop
mov
fisubs
shll
mov
loope
jp
mov
mov
movl
inc
call
add
xchg
jb
xlat
outsb
insb
xchg
pop
sub
test
lret
filds
pop
and
int
int3
outsl
cmp
xchg
sub
pop
xchg
fadd
dec
ret
jns
sbb
imul
push
in
xchg
movsl
and
repz
mov
aaa
jmp
testb
arpl
lret
fmulp
lret
mov
mov
mov
mov
jge
fiadds
sbb
cltd
or
pop
test
fbld
xchg
mov
cld
stos
push
jb
adc
add
jge
andl
cmp
push
out
or
lret
sbb
mov
mov
bound
xchg
cli
call
xchg
and
cmpsl
sahf
pop
xor
cld
push
cmp
or
test
fiaddl
inc
out
push
xchg
scas
ja
inc
in
test
mov
movsl
daa
jae
cmp
and
leave
jecxz
and
jle
leave
stos
mov
jno
testl
int
jo
insb
push
shrl
fcmovnbe
xchg
or
nop
xchg
mov
in
inc
add
xchg
movsl
imul
pop
cmc
dec
scas
rclb
aam
enter
mov
test
mov
stc
imulb
rclb
xor
or
mov
faddl
push
cs
insb
dec
xor
call
lcall
jo
or
les
test
rcrl
ljmp
stos
jbe
mov
push
sbb
fbld
pop
pop
jne
frstor
scas
hlt
xchg
mov
pop
movsl
popf
bound
inc
addr16
dec
pop
repnz
in
out
lods
repnz
mov
pop
jns
aas
mov
fiadds
pop
in
shll
sub
inc
pop
jecxz
sub
xor
pop
test
mov
sub
fs
faddp
adc
enter
or
fs
xor
inc
push
mov
js
adc
add
leave
test
fisubl
mov
mov
divb
shl
imul
sarb
test
scas
push
test
mov
int3
add
insl
popf
lock
adc
loop
pop
jne
aas
mov
pop
inc
or
sbb
cmpsl
mov
mov
cmp
xchg
sub
push
les
inc
jae
mov
mov
leave
outsb
jae
jnp
cmp
xor
pop
and
ret
sub
lods
pop
mov
xchg
xchg
pop
xor
repz
repnz
lret
mov
push
ss
subb
stos
sbb
push
js
js
xchg
rorb
jns
iret
fistpl
mov
sti
xchg
sahf
std
lret
lcall
aaa
dec
sub
lcall
rclb
xchg
popl
push
dec
and
mov
ret
push
and
ds
pop
dec
test
lret
cld
popf
aaa
bound
xchg
sub
fdivrl
cld
hlt
mov
adc
pop
ret
xor
nop
push
mov
outsl
pop
pop
mov
ret
push
jo
mov
ficompl
or
out
xchg
push
push
fs
push
mov
sbb
jecxz
cmp
outsb
loop
test
lret
xchg
jle
cli
xchg
push
out
test
adc
adc
out
cmp
mov
movsl
xor
mov
sbb
out
push
je
push
fmull
and
inc
jns
xor
push
aas
xor
inc
pop
fimull
pop
repnz
sti
hlt
push
pop
sub
cmp
gs
in
mov
cli
pushf
pop
pop
sbb
cmp
jo
ss
jp
pop
mov
int
mov
rclb
cmpsl
or
sub
push
pop
into
jb
test
dec
rcrl
mov
mov
sub
adc
dec
dec
jns
sub
or
cs
fwait
test
sub
mov
mov
push
cmp
testl
dec
jno
imul
pop
cmpsl
in
sti
and
add
jbe
or
dec
insl
jmp
dec
inc
fwait
les
in
ds
inc
loopne
jb
mov
or
sbb
mov
scas
shll
pop
or
add
ja
jae
push
in
out
es
sub
ds
fadd
lock
das
cli
ds
jmp
dec
gs
shrl
aaa
mov
inc
aas
cmp
mov
jle
jle
inc
mov
inc
lret
in
in
add
decb
jns
cmp
cmpsl
xchg
adc
or
mov
test
lahf
das
and
es
ds
data16
add
int
mov
cmp
aam
cmc
call
xchg
js
sbb
add
sahf
fcompl
mov
jbe
test
sub
push
cmp
jne
adc
jae
jo
into
insl
imul
pop
add
mov
idivl
pushl
aad
or
jg
pop
jnp
dec
pop
jno
mov
outsl
in
sarb
cmp
push
lds
jp
sub
in
pop
scas
lock
pop
mov
push
jp
iret
je
nop
incl
mov
ret
in
fdiv
xor
imul
repz
rcll
rcrb
sahf
cmc
or
add
inc
or
push
push
mov
test
fwait
lret
push
cld
inc
and
mov
ret
push
pop
jmp
movsb
out
mov
enter
inc
clc
in
mov
leave
into
daa
pop
mov
push
outsl
mov
push
push
fldl
mov
add
adc
mov
sbb
out
ds
mov
mov
pushf
cli
xchg
into
adc
rolb
popa
dec
loopne
jge
add
addr16
cmpsl
mov
imull
jmp
int
xor
sub
dec
pop
cmp
mov
in
dec
and
cmp
out
clc
fdivrl
jns
or
xchg
push
mov
mov
xlat
movsl
lock
push
loope
pusha
mov
fstl
push
addr16
add
stc
xchg
jp
dec
and
push
mov
dec
popa
into
ja
jg
inc
dec
mov
ljmp
xor
inc
orb
mov
mov
cmpsl
aas
rcll
inc
cld
fs
in
pop
jne
addl
int3
imul
pop
mov
inc
sbb
adc
in
lret
xor
or
addr16
repz
xlat
pusha
cmp
shlb
sbb
dec
pop
mov
scas
xor
jle
insb
sub
push
mov
pop
lahf
xor
adc
or
ja
ret
adc
das
xorl
popf
lods
pushf
xorl
stos
loopne
in
stc
rclb
in
mov
imul
dec
clc
inc
dec
cmp
negl
inc
xlat
subb
testl
sub
fildl
lea
sub
mov
cmp
xor
xor
lea
mov
loop
cmp
icebp
cmp
dec
sub
arpl
or
aaa
inc
mov
mov
leave
out
xor
sub
bndstx
xor
pop
stos
jle
stc
and
sbb
pop
std
lea
xor
jp
push
add
ja
xchg
cmpsl
icebp
dec
popf
stc
mov
mov
xchg
dec
sbb
xchg
int3
out
jle
jle
shlb
ss
sub
lds
aaa
mov
clc
js
mov
dec
dec
inc
iret
clc
cmp
mov
popl
pop
dec
cltd
add
jne
dec
mov
pop
loop
test
in
or
lret
mov
movb
jnp
and
mul
jne
mov
pop
ds
jne
jae
mov
rdpmc
xchg
cmp
fdivl
xor
in
adc
mov
adc
jb
in
inc
jg
jne
je
nop
inc
shr
repnz
int
stc
xlat
sbb
cli
sbbl
pusha
sub
adc
pop
sub
mov
cmp
loopne
mov
xchg
jnp
mov
push
xor
ljmp
sub
dec
mov
jmp
scas
inc
jnp
ds
cmc
cmp
pop
arpl
scas
fidivl
ror
mov
cmp
sti
mov
cmc
pushf
dec
mov
ret
int3
cld
jg
jg
mov
xor
loopne
mov
leave
xor
and
test
inc
call
stos
xor
push
rsqrtps
enter
in
repnz
out
cli
inc
lods
ss
insl
scas
xchg
inc
push
lock
jb
xchg
mov
testl
mov
repz
push
xor
cs
xor
pop
xchg
sub
sub
mov
jge
js
add
lret
and
pcmpgtw
imull
dec
lods
ja
aas
mov
in
jmp
insb
sub
push
jae
push
mov
inc
push
scas
pop
dec
popl
jae
int3
mov
cmp
out
xchg
add
push
dec
and
xor
daa
lcall
or
mov
addr16
lret
pop
ja
dec
pop
mov
sub
popf
les
or
idivl
pop
pop
repnz
push
sub
daa
sub
xor
mov
dec
or
shr
movsb
push
imul
lds
cwtl
pop
push
xchg
hlt
or
jl
push
mov
dec
out
xchg
movsl
sbb
push
pop
cmp
shlb
adc
jge
repnz
dec
mov
dec
cmp
xor
mov
push
in
mov
add
inc
pop
cmp
hlt
out
test
stos
arpl
push
and
scas
cmp
std
inc
bound
lcall
loope
jmp
push
data16
ficoms
fs
gs
xor
xchg
cmp
scas
mov
aam
iret
pop
fistps
out
imul
mov
or
add
aaa
sub
xchg
gs
lret
sahf
push
rorb
push
ljmp
jno
jbe
popa
lret
sbb
lds
pop
shll
dec
dec
push
xchg
push
pop
in
dec
adc
push
loop
pop
pop
gs
sbb
outsb
stos
ss
jp
shlb
in
cs
xchg
xchg
js
jae
scas
pushf
call
leave
cmp
popf
and
sub
sbb
shrl
aaa
repz
ficompl
push
cltd
adc
dec
dec
add
dec
sub
cmp
sub
insb
pop
faddl
jp
jmp
lea
mov
movsb
and
jnp
mov
adc
stos
lret
xor
in
jno
cmc
dec
sti
fwait
test
dec
jmp
icebp
fs
or
loope
shrl
cwtl
pop
out
inc
push
lahf
push
stos
add
xor
and
leave
mov
out
das
bound
inc
call
dec
mov
sub
inc
jne
mov
std
jne
out
popf
xchg
mov
sbb
das
and
jecxz
lret
std
xchg
dec
jmp
mov
fnclex
jns
cld
inc
mov
cltd
add
cwtl
hlt
std
inc
sti
cli
aaa
mov
das
mov
adc
outsb
aas
and
clc
popa
push
cmc
jge
test
push
adcb
add
push
hlt
mov
mov
mov
and
ret
std
addr16
or
or
rol
adc
add
or
insb
fcoms
out
jb
push
mov
mov
and
je
sub
mov
mov
sub
inc
cli
jecxz
cld
outsl
ret
mov
push
mov
arpl
out
mov
ds
std
out
xchg
fdivrs
xor
imul
sub
inc
mov
cmpsb
cld
ss
xor
cvtps2pi
inc
lods
jp
pop
mov
aaa
stc
neg
cwtl
sti
mov
les
in
mov
pop
mov
push
inc
xchg
sbb
xchg
or
inc
clc
jle
sahf
push
lcall
inc
xlat
add
pop
xor
loopne
lds
call
sahf
push
call
dec
cmp
jae
in
decb
sbb
adc
mov
test
xor
fcom
pop
and
bound
out
mov
mov
sub
push
mov
fcom
inc
add
jmp
scas
inc
push
movsl
jl
pusha
daa
int3
imul
or
orl
int3
lret
push
add
addr16
and
cli
lret
push
jmp
xor
test
inc
fimull
out
cmpsl
cmp
and
and
repnz
data16
orb
sbb
cli
enter
jge
xor
xchg
inc
add
out
pushf
lods
mov
je
rol
rcrb
and
mov
cmp
mov
push
clc
sbb
outsl
loop
les
out
xor
rclb
mov
pop
xchg
fmuls
stc
xlat
outsb
clc
cmp
jno
cmc
mov
mov
imul
xchg
cwtl
dec
jmp
push
movsl
mov
mulb
call
mov
dec
nop
or
push
dec
cltd
push
gs
aad
add
mov
mov
iret
mov
mov
adc
cmc
xor
jl
mov
and
cltd
xchg
daa
lcall
push
sbb
mov
lds
sub
push
clc
clc
mov
sbb
mov
pop
push
inc
fcos
add
lods
or
lea
adc
out
sbb
mov
scas
fsubrp
cld
pop
dec
lock
sahf
iret
and
jecxz
adc
jo
outsl
fwait
mov
cltd
hlt
ret
add
pop
sub
fildll
mov
jno
or
add
sub
dec
dec
xor
repnz
dec
in
or
or
jl
push
fwait
mov
jle
cltd
pop
or
pop
ja
and
mov
sbb
enter
test
outsb
add
add
pop
je
lock
dec
xor
adc
ljmp
jno
in
pushf
jnp
fimuls
fildll
shrb
jnp
mulb
enter
bound
fs
push
pop
adc
mov
lds
les
out
mov
xor
imul
push
inc
movsl
jne
pop
cmp
enter
pop
push
dec
fisubl
pop
adc
sub
or
sub
jns
and
cld
test
sub
inc
mov
jbe
mov
mov
dec
adc
std
fisubrs
std
push
je
push
pushl
stc
adc
cmp
mov
mov
leave
fnstsw
jb
push
popf
call
dec
xor
mov
shlb
out
shl
mov
pop
sahf
stos
jl
jnp
dec
jns
push
lahf
lahf
shrl
das
test
push
pop
stc
cld
xchg
divl
outsl
cmp
inc
adc
lcall
cwtl
stos
arpl
adc
insl
sub
xchg
xlat
jmp
lcall
or
inc
adc
ja
xchg
lods
inc
sbb
pop
enter
xchg
sub
mov
stos
dec
mov
mov
mov
movsl
mov
jae
mov
in
jae
lods
inc
leave
adcl
pop
addr16
and
mov
js
mov
jecxz
mov
jl
fimull
out
ficoms
mov
adc
pop
pop
mov
ds
jno
test
sarl
lcall
jge
xchg
push
stos
inc
or
xorb
push
gs
pop
ds
scas
mov
pop
vpperm
sbb
into
dec
xor
mov
sbb
mov
mov
xor
ret
xchg
or
stos
icebp
or
mov
and
pop
int3
xor
or
fsubl
iret
stos
test
nop
int
jne
mov
adc
push
mov
mov
mov
fs
stc
in
lret
and
insb
xor
es
pop
ds
pop
cmp
xor
cs
insl
pop
cld
push
mov
enter
sbb
dec
push
cmpsb
into
stc
mov
in
fs
cwtl
push
adc
imul
scas
icebp
imul
popa
in
or
mov
cmp
or
xchg
mov
scas
cmp
cs
inc
inc
ljmp
jmp
mov
mov
bound
ja
push
in
ss
push
push
adc
push
dec
adc
pop
pop
xor
aam
test
jle
or
sub
pop
inc
ljmp
clc
mov
pusha
mov
sub
leave
outsb
ret
leave
enter
stos
repz
into
mov
mov
arpl
mov
pusha
negl
addb
dec
rcrl
rorl
lods
loop
cs
jp
cmpsl
jecxz
imul
or
push
push
jmp
mov
push
xor
in
jp
pop
cmc
fisubs
pop
adc
cmpsl
out
sbb
dec
lock
jg
subb
or
push
and
cltd
mov
cmp
leave
mov
loopne
insb
push
adc
enter
mov
ds
sbb
mov
mov
mov
fdivrl
lock
andl
dec
shr
test
movsl
or
mov
popa
enter
lret
and
outsb
pop
cmp
jg
mov
push
pop
repnz
mov
pop
pop
jmp
inc
inc
rep
xor
or
ljmp
pop
fnstenv
fldcw
stos
jne
and
push
aam
mov
fsubrl
cmc
xchg
js
jg
jecxz
inc
and
jb
stos
xchg
popa
inc
cltd
sbbl
hlt
lret
sbbb
dec
mov
mov
jecxz
mov
push
sbb
aam
push
xor
frstor
mov
xchg
bound
inc
pop
xlat
or
mov
shr
cmp
xchg
and
shll
daa
sbb
sbb
fildll
jge
sbb
stos
addl
adc
push
sub
jo
in
insb
add
jmp
and
and
xchg
aaa
xor
hlt
je
es
sub
popf
lods
inc
push
push
xor
xchg
fdivl
and
mov
or
cmp
jg
test
jne
popl
pop
es
mov
mov
aas
cmp
test
push
or
xor
pop
outsl
mov
cmp
fcmovbe
lock
xchg
cwtl
push
or
lods
and
add
gs
out
stc
popf
test
inc
jmp
lret
stos
inc
lock
ficoms
sub
dec
ret
mov
mov
xor
in
push
testl
cwtl
jne
pop
arpl
es
lret
sbb
jne
cmp
repnz
push
mov
int3
arpl
jg
jecxz
inc
mov
sub
repz
cwtl
and
add
clc
in
pop
out
fldcw
cmp
jg
jmp
sub
std
mov
test
add
repz
mov
stos
dec
out
xchg
or
loop
dec
dec
push
mov
xor
cmpsb
les
js
repnz
sbb
sub
popa
ret
add
repnz
loopne
in
xor
cmp
jge
iret
scas
and
sbb
inc
jecxz
mov
cmpsl
stc
mov
cmpsb
xor
loopne
pop
out
inc
sbb
inc
aam
push
ljmp
mov
addr16
cmp
pop
add
roll
sbb
jmp
mov
adc
jo
cld
push
xor
mov
sbb
sbb
jmp
pop
push
xlat
pop
lds
pop
test
repnz
jmp
adc
fsubrl
hlt
mov
aad
pop
out
dec
arpl
loope
repz
pop
mov
mov
pop
cmp
adc
pop
xor
rol
jl
stos
idiv
adc
jno
add
jb
cltd
push
mov
cmp
pop
jo
push
cmp
sub
aas
sub
xchg
add
cli
popl
push
sbb
push
cmp
mov
xchg
mov
adcb
incb
jge
lret
lret
lcall
mov
mov
inc
sbb
dec
mov
push
sub
movsl
xchg
icebp
mov
rorl
imul
adc
mov
sub
ljmp
lea
mov
inc
push
cmp
or
loopne
jb
xchg
mov
insb
pop
in
outsb
sub
lcall
cwtl
sti
xchg
nop
loop
leave
inc
xor
pop
xchg
or
cmp
xchg
push
pop
lock
aaa
leave
pop
cltd
pop
stc
mov
imul
loope
jo
fwait
inc
fidivrs
or
mov
push
push
cmp
movsl
hlt
or
aam
add
push
inc
inc
adc
jbe
adc
adc
ss
push
je
outsl
out
dec
mov
roll
ficompl
and
sbbl
adc
mov
add
and
aam
inc
push
fsubrs
fistps
mov
inc
fsts
aas
adc
idivb
mov
xchg
je
das
test
pop
jmp
test
inc
push
pop
lret
cmp
xor
subl
mov
mov
loopne
mov
xchg
lds
jne
jg
add
sbb
jl
bound
mov
adc
adc
inc
ret
jae
adc
mov
js
mov
sbb
fcompl
rcr
insb
sbbl
dec
pop
jns
rcrl
inc
jle
dec
fs
std
inc
test
mov
ss
leave
stc
mov
and
adc
rolb
mov
add
and
test
xchg
mov
inc
or
and
int
push
add
loopne
jbe
arpl
div
sub
mov
in
ret
cwtl
test
cltd
icebp
orl
cmp
mov
sub
outsb
and
bound
dec
jp
gs
cmp
lcall
cmpsl
mov
loop
enter
fs
pop
jae
dec
pop
scas
js
pushf
das
in
movsl
sbb
nop
mov
push
lods
fwait
xchg
test
es
cmp
and
adc
gs
cmp
mov
outsb
cmp
lea
icebp
cmp
xlat
insl
mov
hlt
mov
or
xor
and
xor
jmp
inc
pop
loop
and
fcoms
fwait
test
push
movsl
in
sub
aaa
cmp
pop
std
jle
xchg
movsl
icebp
negl
push
fnstsw
add
fisubs
push
stc
nop
mov
insl
sub
mov
jb
rcrl
xor
adc
mov
dec
mov
sbb
jge
lahf
jns
add
stos
cmp
mov
add
stos
add
cmp
xor
hlt
es
push
fsubl
dec
pop
adc
inc
jns
sbbl
pop
jl
add
sahf
mov
xchg
mov
add
adc
inc
mov
pop
mov
mov
aad
lea
fnstcw
jge
das
push
outsb
test
sbb
push
and
xchg
xchg
int3
stc
pop
add
sbb
dec
and
or
mov
jb
and
es
stc
daa
aaa
into
out
add
pusha
add
push
push
sti
fwait
mov
test
jmp
mov
xchg
pop
inc
push
nop
jecxz
jae
sbb
xchg
mov
in
push
dec
and
imul
subb
lret
inc
dec
out
or
cmp
scas
hlt
loop
xor
cltd
push
push
out
movsl
mov
loop
add
aas
mov
ljmp
jno
sarb
insb
xchg
push
xlat
nop
pop
push
add
in
daa
pop
out
lret
xor
repnz
lret
adc
ja
cmp
dec
jle
mov
push
inc
fisubs
into
xor
fld1
imul
xor
imul
out
inc
cltd
sub
aam
in
cmp
adc
sub
shlb
or
movsb
push
cmpsb
mov
or
mov
lods
push
jne
jns
ljmp
mov
sbb
out
loopne
inc
push
sub
andb
pop
xor
push
test
dec
sub
aas
pusha
push
lds
or
mov
int3
loop
mov
fisubrs
sub
aas
jl
ljmp
enter
adc
jb
add
ds
mov
cmc
mov
sbb
xor
adc
sahf
imul
fisubs
jnp
pushl
adc
xor
xchg
fldcw
cltd
pop
mov
clc
jae
out
fildl
cli
push
add
cmp
push
je
pop
sti
aas
cmp
mov
shl
jne
mov
cmpl
xchg
dec
mov
adc
out
pop
sbb
orb
xchg
sub
std
aaa
jmp
addr16
aam
sbb
cmpsb
clc
push
pop
jbe
and
iret
mov
mov
popf
fdivrl
fmul
pop
jb
in
mov
in
lods
fsubs
and
pop
test
inc
xchg
and
stos
cmpsl
inc
fcmovnb
stos
jae
jg
sarb
cmp
sahf
repnz
sbb
pop
and
int3
push
in
push
cmp
jne
push
add
shrb
dec
loop
jns
and
jle
xor
outsl
push
fdivrl
push
pop
aaa
dec
outsb
mov
pop
pop
pop
scas
mov
sbb
xlat
ficoml
mov
data16
xlat
sub
jmp
pusha
or
repnz
sbb
aam
sahf
mov
adc
jbe
mul
xlat
lods
pop
int
adc
sbb
std
std
add
incl
xchg
out
dec
pop
aas
xor
repz
lret
xor
shld
negl
push
js
lret
add
mov
jo
jo
sub
aad
jecxz
cmp
movsb
sbbb
cs
lret
add
scas
mov
mov
jb
clc
clc
or
sub
mov
mov
test
aaa
insl
pop
loope
pop
pop
add
insl
add
pop
hlt
mov
pop
jnp
pop
jb
into
clc
pop
cmp
push
jno
lret
aas
mull
shr
mov
es
dec
and
test
mov
or
or
lods
in
aas
push
nop
hlt
push
adc
mov
daa
decb
loope
lahf
popa
push
add
adc
je
call
sbb
test
ret
out
adc
outsl
dec
outsb
daa
je
insb
jno
inc
jbe
inc
mov
into
or
pop
mov
push
add
and
out
les
stos
inc
pop
dec
pop
cmp
popf
and
test
into
loop
leave
test
jle
movsb
outsl
lahf
jb
mov
aam
clc
add
push
mov
jmp
dec
cmpsb
insl
dec
imul
pop
daa
and
mov
push
pop
lret
pop
mov
inc
stc
xlat
xchg
xchg
or
push
push
test
mov
and
cmp
and
sbb
lret
dec
cmpsl
xor
xor
xor
pushw
cmp
mov
fs
fwait
lods
mov
jmp
mov
push
jmp
sbb
rorl
jb
fimull
pop
mov
roll
sbb
pop
jb
sub
add
fsubs
inc
sub
jne
mov
push
cwtl
dec
push
call
mov
lahf
enter
out
push
push
stos
push
cs
aas
mov
sub
bound
inc
les
mov
and
or
ss
enter
xorb
sahf
lea
pop
sbb
xchg
mov
pop
in
subb
or
sbb
and
daa
xchg
aam
sub
xchg
cwtl
js
add
loop
ret
mov
je
dec
jg
push
in
arpl
movsl
insl
je
pop
dec
dec
mov
sbb
and
pushf
adc
mov
dec
xlat
mov
les
loopne
sub
addl
insb
xchg
lock
int3
adc
int3
scas
shrl
mov
xor
sbb
xchg
xor
mov
or
insb
sti
jp
out
add
mov
loopne
notb
jnp
add
test
imul
jnp
adc
into
pushf
inc
fcmove
adc
adc
bnd
aas
fisubs
pop
outsl
rol
inc
mov
push
cmc
adc
rclb
mov
mov
cmp
inc
cmc
pop
dec
fisttps
es
push
and
dec
push
std
xor
mov
es
sbb
mov
movsb
filds
or
les
mov
mov
ret
pop
loop
mov
cs
das
dec
add
cmp
jns
mov
idivl
iret
stos
mov
outsl
pop
mulb
mov
xchg
cld
inc
add
fstpl
mov
adc
outsb
mov
js
ficoml
push
popa
cmp
cld
dec
jecxz
jmp
sti
fmull
jle
push
push
imul
inc
shr
jmp
loope
mov
mov
push
popf
enter
test
js
movsb
repnz
dec
testb
outsb
stc
cmp
aam
aas
sahf
sti
inc
cli
dec
rcrb
inc
sbb
mov
fwait
inc
mul
fucomp
mov
pop
push
push
mov
popa
xor
jp
inc
push
pop
pop
jns
mov
xor
inc
inc
jns
xor
xor
jge
aam
call
adc
movsl
jmp
inc
dec
dec
aam
jg
loopne
ss
popa
ja
cmp
pushf
aad
dec
add
icebp
movsl
inc
or
ret
lods
test
inc
jne
outsb
add
lcall
xchg
mov
adcb
sub
lcall
xor
fs
mov
jmp
cmp
pop
test
or
push
xor
fsubl
sbbl
inc
in
lahf
fimuls
xor
dec
jecxz
mov
cmp
mov
adc
inc
lods
mov
aam
mov
mov
xchg
lods
sub
add
jge
jmp
jge
inc
adc
js
mov
ljmp
sbb
pop
push
in
shrb
mov
pop
cld
xchg
shlb
cmpsl
mov
inc
cmp
ret
stos
xlat
push
cmp
lock
sarl
push
das
dec
mov
push
xchg
leave
popl
cwtl
sbb
arpl
testb
cmp
insb
push
push
mov
pop
dec
fadd
xchg
mov
cs
cwtl
scas
push
iret
mov
or
xchg
cmp
ss
dec
mov
lret
fidivrl
dec
mov
jmp
push
cmpsl
sti
mov
xor
and
push
enter
insb
sbb
popf
mov
xchg
jo
dec
jne
mov
jae
jne
sti
lods
sub
shr
or
push
inc
adc
adc
add
std
testl
mov
sub
pop
repnz
xchg
push
nop
out
jne
ret
notb
dec
movsb
xor
or
pop
rcr
rcll
inc
sbb
and
es
test
push
leave
std
and
scas
xchg
pop
lret
cmp
lods
aam
leave
mov
add
mov
into
loope
or
stos
pop
lock
nop
sub
jbe
jnp
or
mov
loope
call
fistpll
ds
jne
dec
xlat
lds
jecxz
test
call
out
les
dec
lds
sbb
sbb
clc
scas
ret
iret
jg
stc
les
cld
dec
ds
inc
repz
add
test
aad
jo
scas
andb
push
sub
jg
sahf
push
outsb
cmpsb
sti
fcomps
fwait
pusha
leave
xor
cmp
cmp
inc
push
sbb
aad
push
mov
push
xlat
jl
insl
repnz
ja
inc
push
cmpsl
mov
xor
xor
repnz
push
mov
rorb
jge
or
pop
jmp
xchg
adc
or
add
imul
lock
mov
push
fdivrs
decl
fwait
stc
fdivrs
sbb
jle
shlb
push
xor
xor
mov
push
imul
sub
mov
sbb
lock
js
pop
mov
xchg
fcoms
xor
out
mov
xlat
cmp
dec
mov
or
dec
out
jmp
inc
mov
dec
outsl
loopne
dec
fildll
add
addr16
cltd
out
and
mov
rol
mov
mov
mov
ret
mov
ja
and
int3
push
scas
jb
decb
inc
int
or
mov
pop
pop
flds
clc
cmpl
pop
icebp
lcall
ret
test
adc
mov
sbb
sub
cwtl
inc
xchg
das
arpl
add
out
mov
xchg
test
jae
int3
xchg
mov
push
loopne
push
add
sub
cmc
dec
mov
adc
cmp
mov
dec
jle
sti
adc
movsl
dec
pop
aam
mov
lods
mov
in
pop
sbb
jp
xor
outsl
ret
int3
lret
outsb
lds
lretw
dec
lahf
icebp
insb
es
push
inc
lcall
and
js
xchg
arpl
mov
xchg
loopne
add
test
adc
xor
jge
fs
and
clc
add
int3
jge
mov
cmp
mov
mov
xchg
xchg
fisubl
xor
inc
gs
cld
sbb
int
pushf
xor
add
mov
cmpsb
sub
mov
cmp
je
shlb
loop
xchg
mov
fsts
sar
test
icebp
aam
and
xchg
inc
and
sub
adc
dec
bound
mov
ficoms
mov
mov
shrb
ret
inc
ja
cmc
jne
ds
add
inc
adc
mov
pop
loope
adc
out
es
shll
iret
xorb
push
fisubl
movsb
jne
pop
loop
and
fcmove
push
mov
stos
add
ret
add
ss
les
push
test
out
test
enter
cmpsb
jo
jle
test
mov
int3
lock
cmp
sub
cmp
es
push
testb
popf
clc
aam
inc
mov
hlt
arpl
test
inc
fisubrl
int3
dec
pop
ds
dec
push
loope
dec
stc
pop
add
inc
cmp
add
xor
test
xchg
lods
fucomip
daa
shld
cli
pop
mov
xchg
pop
ljmp
cmp
and
fidivrl
into
loop
adc
cmp
xchg
pop
xor
sbb
sbb
sbb
imul
lods
ja
mov
pop
and
push
jge
xchg
mov
call
or
roll
pop
lock
mov
mov
outsl
push
shlb
push
mov
cs
inc
pop
xchg
adc
pop
stos
rcrb
test
inc
jmp
outsl
xor
jmp
mov
add
lret
rolb
and
int
pop
mov
adc
xor
pop
inc
inc
add
cmp
xchg
xor
cmp
push
in
push
lods
ret
or
xchg
shlb
dec
popa
loope
icebp
push
jmp
inc
stos
xorb
or
fstps
repz
inc
stos
cmp
jg
in
push
pop
or
mov
es
loope
or
test
and
pop
gs
mov
mov
adc
jg
cmpl
imul
adc
out
lahf
hlt
stos
and
mov
fwait
je
mov
test
shrb
addl
pop
mov
push
icebp
popf
mov
mov
dec
pop
mov
jmp
xor
pop
and
pop
rclb
ss
outsl
xchg
sahf
mov
jmp
mov
mov
sub
cli
xchg
dec
xchg
jg
xchg
lahf
inc
sbb
dec
cld
mov
cs
popa
xorl
fbstp
add
inc
popa
and
push
cmp
movsb
xabort
push
test
sbb
hlt
in
xchg
fimuls
negb
aad
jecxz
push
cmc
stos
inc
iret
sbb
inc
lret
push
hlt
mov
imul
loopne
lcall
cmpsl
jp
imul
sbb
sbb
adc
cmp
fiadds
xchg
sti
pop
hlt
sub
ljmp
adc
dec
ret
xchg
insl
add
mov
lea
sti
cltd
and
dec
stc
aam
xor
and
and
pop
adc
push
xchg
xor
cmp
movl
test
inc
xchg
jns
orl
xchg
mov
ljmp
std
or
push
pop
shl
jns
xchg
jmp
mov
rclb
cmp
mov
jmp
or
sub
leave
mov
out
mov
mov
pusha
jp
or
rclb
lret
jae
sbb
inc
pop
imul
test
xor
mov
sub
repnz
pusha
stos
inc
daa
outsb
ss
jmp
cmp
filds
repnz
sub
sub
lds
mov
xchg
or
pop
ljmp
push
inc
popf
push
add
xor
xchg
dec
jecxz
or
lods
push
cmp
bound
in
push
mov
aad
or
test
xchg
out
notl
xor
aas
addl
dec
pop
ret
sti
push
sub
or
mov
cmpsb
mov
iret
sub
es
sbb
push
repz
xchg
fildll
xchg
sbb
mov
das
and
adc
mov
xor
mov
addr16
stos
ss
andl
outsb
mov
xchg
cltd
mov
loopne
mov
inc
fsubl
insl
in
adc
mov
xchg
aaa
lcall
cmp
adc
add
sbb
js
sbb
add
xchg
scas
mov
jbe
icebp
leave
mov
adcb
call
add
stos
aaa
stc
mov
jle
lret
stos
mov
dec
dec
std
cmp
mov
dec
pop
inc
add
or
popa
int
or
cwtl
cmp
sub
mov
mov
cmp
sbb
dec
push
int
fucomip
pop
mov
jmp
xchg
push
daa
loop
or
clc
loopne
fisttpll
push
push
pop
orb
jbe
or
lea
add
dec
pop
add
aad
jecxz
test
stos
stos
cmpsb
out
cld
fadds
inc
rclb
adc
xor
arpl
jl
push
lock
ljmp
rorl
mov
dec
iret
das
mov
push
cwtl
jb
lock
lret
xor
jae
xorl
pop
mov
sub
jo
nop
push
test
test
xor
loopne
lcall
cltd
test
mov
inc
mov
push
inc
aas
adc
cmp
inc
dec
push
es
cmpsb
pop
dec
mov
cmp
das
add
cmp
sbb
mov
gs
inc
sbb
aam
pushf
add
repnz
sbb
sub
cwtl
inc
inc
icebp
xor
jb
xchg
or
xchg
mov
movsb
pop
add
add
in
icebp
ljmp
inc
pushf
popa
mov
fildll
loop
xchg
dec
push
rcrb
out
jae
in
jl
push
xor
dec
jge
data16
sbb
scas
ret
shrl
icebp
mov
dec
mov
mov
push
jb
mov
or
pop
aaa
addr16
movsl
fadd
inc
mov
mov
shll
jo
xlat
mov
xlat
outsl
dec
pusha
add
fyl2x
jmp
or
adc
xor
roll
and
mov
loop
jbe
push
pop
mov
sti
dec
arpl
jb
jbe
mov
nop
xor
lods
or
lods
adc
or
sti
js
aaa
jbe
adc
lret
inc
call
dec
xlat
xor
push
add
mov
mov
add
inc
ja
int3
mov
mov
stos
and
shlb
sub
xchg
ds
imul
jae
jo
mov
and
leave
fnstenv
cltd
push
fwait
into
cmp
in
push
add
aam
ss
mov
mov
pushf
pop
adc
je
sbb
fcomps
das
push
repz
ds
in
cmpsl
xlat
sbb
cmp
cmp
fldenv
pop
cli
lds
gs
sbb
lods
js
sub
jno
xchg
enter
cld
push
jne
ds
push
jle
loopne
out
test
mov
dec
sbb
lods
dec
movsb
repz
rcll
xchg
fists
or
fs
fiaddl
adc
fiaddl
jmp
push
dec
pop
or
fwait
lods
lret
cmp
jb
mov
push
sub
bound
mov
nop
test
jns
stos
dec
mov
ljmp
insl
add
push
mov
cltd
xor
outsl
and
les
loopne
outsl
iret
addl
bound
mov
inc
jge
mov
xchg
push
cmp
or
nop
arpl
fnstcw
test
xor
or
jp
pop
cmpsl
in
lds
in
adc
gs
xchg
sbb
iret
mov
mov
leave
sbb
test
lods
call
adc
xlat
test
fidivrs
test
adc
daa
sarb
cli
xchg
andb
subb
mov
add
stos
add
jae
pop
sbb
fsqrt
or
mov
fsub
lret
aas
loop
dec
sbb
test
shrb
ds
aam
inc
shll
push
pushl
filds
or
outsb
add
sub
lock
push
jp
stos
cli
push
push
mov
clc
dec
and
loope
push
mulb
aas
test
push
lods
jne
fxch
andl
push
lret
adc
xchg
add
mov
js
xchg
jp
aam
mov
jnp
aas
daa
jno
out
and
rcr
add
mov
ret
mov
in
mov
cmpb
jge
and
adcl
add
cltd
std
pusha
jns
js
lret
mov
in
xchg
icebp
xchg
add
in
jg
clc
js
fidivl
pusha
dec
ss
icebp
icebp
inc
fnstenv
cwtl
daa
push
dec
or
nop
sub
subl
cmp
lods
cmp
lret
sbb
addr16
pop
xor
out
outsb
out
inc
adc
pop
in
aas
push
push
inc
pop
mov
push
xor
xlat
sub
cld
pop
aad
xchg
and
xchg
xchg
adc
mov
sub
test
cmp
ljmp
bswap
add
push
sub
dec
mov
add
push
fistpll
pop
jnp
dec
sbb
test
adc
roll
fsubrl
sbb
bound
cld
cmp
test
and
loope
and
nop
jnp
mov
mov
in
push
cmpsb
xor
bnd
xorl
push
loope
mov
insl
divl
xlat
pop
call
pop
cli
xor
popa
dec
xor
int3
scas
jne
jmp
sub
fisubl
jg
xor
popa
jle
mov
addr16
mov
test
mov
adc
or
into
jne
movsb
nop
faddl
std
push
jecxz
jb
subb
inc
dec
loope
xchg
mov
xlat
and
jmp
or
mov
push
mov
pop
ret
outsl
sarb
in
dec
imul
repz
imul
xor
sti
add
cs
repnz
test
scas
jg
xorl
jae
mov
or
mov
scas
cltd
xor
jge
jmp
or
pop
sti
lret
pop
aad
fcoml
inc
pop
movsb
cmc
adc
sub
ss
ljmp
inc
push
mov
sub
jmp
testb
pop
mov
lds
or
insb
jnp
mov
fucomp
mov
and
push
sub
cld
jg
push
pop
enter
xor
push
xlat
and
test
and
jno
es
dec
scas
lret
mov
lahf
hlt
adc
popa
add
pop
push
mov
or
adc
pop
sub
pop
outsb
push
scas
test
jne
jge
pushf
dec
pop
push
mov
mov
inc
sub
mov
or
ljmp
add
push
xchg
adc
or
cmp
push
xchg
pusha
inc
in
mov
pop
daa
notrack
dec
das
ret
int3
test
and
test
test
decb
mov
sti
daa
mov
jbe
les
lea
test
outsl
and
scas
sahf
xor
ss
clc
in
rolb
int3
mov
clc
clc
sbb
ds
aam
push
inc
roll
es
pop
sub
or
cli
cmp
scas
int
adc
cmpsl
cli
jne
jge
daa
and
push
daa
mov
fidivrs
cmpsl
aaa
inc
dec
stos
andl
push
adc
mov
pop
popa
dec
in
jp
mov
cmp
arpl
push
outsb
loop
pop
lods
in
test
ss
jl
cmpsl
pop
shl
js
xchg
ljmp
shll
cmp
adc
jecxz
dec
ret
daa
cmp
push
repnz
cwtl
xor
outsb
mov
lret
mov
lcall
pop
jno
mov
lea
mov
xchg
push
ss
push
ficoml
and
sbb
xor
cmp
xchg
cld
lcall
in
clc
and
cmp
sbb
jl
jmp
std
mov
popf
inc
xlat
outsb
xor
mov
adc
inc
mov
lods
shl
ja
adc
jne
and
xchg
lock
dec
dec
aaa
adc
jo
or
pusha
cmp
and
fists
pop
hlt
jnp
rclb
movsb
je
loop
push
cmp
adc
mov
cld
cli
lock
shll
jge
add
xor
jecxz
rcrl
cmp
mov
xchg
sub
push
idivb
mov
jns
jo
adc
mov
push
dec
sub
adc
cmp
add
cld
shlb
in
lcall
cmp
mov
mov
cmp
clc
mov
std
push
cwtl
sbb
in
jle
icebp
ja,pn
mov
mov
add
and
push
or
stos
repz
in
dec
mov
lret
xchg
inc
mov
jl
fbstp
imull
gs
or
into
stos
pop
push
daa
lret
and
je
push
sub
aad
add
hlt
mov
subb
sarl
xchg
xor
sti
sbb
or
in
leave
jp
push
and
rorb
cmp
test
out
mov
adc
test
inc
mov
imul
xor
mov
in
ljmp
mov
mov
in
and
mov
mov
cmp
lods
aad
test
je
aaa
loope
negl
xor
add
test
mov
dec
in
push
or
mov
pop
ljmp
lcall
mov
adc
or
and
xlat
incl
adc
cmp
xlat
vmovsd
je
rcrb
xchg
mov
ja
sub
and
cld
dec
push
jge
insl
add
loopne
xor
loope
lret
xchg
out
movsb
jecxz
sub
dec
mov
xchg
decb
lret
jns
gs
jmp
mov
idivb
jp
add
mov
lret
shl
out
jp
push
mov
sub
push
loop
push
aam
adc
cltd
mov
lret
jge
loopne
js,pn
cmpsb
mov
mov
out
rorb
mov
mov
mov
xchg
dec
jbe
fadd
data16
ds
jge
ljmp
sarl
outsb
or
mov
fstpl
lock
leave
sub
fists
imul
in
sahf
out
mov
cmp
test
loop
mov
cmp
push
fucomip
out
push
pop
out
ljmp
sahf
gs
sbb
jb
mov
push
mov
sub
inc
dec
loopne
dec
xchg
mov
cli
push
testb
cmpsl
fldl
adc
push
icebp
jo
dec
sbb
stos
mov
cmp
adc
push
stos
xchg
ds
mov
cld
push
xorb
mov
dec
ror
sbb
add
pop
mov
rcrl
jp
loop
push
pop
insb
mov
das
push
sti
incb
daa
add
inc
mov
imul
scas
orl
push
stos
xchg
push
lods
jne
mov
push
scas
mov
dec
shr
fisttpl
mov
sbb
rcr
pop
or
jecxz
in
mov
sbb
push
cltd
iret
mov
fwait
cmp
add
pop
dec
mov
sahf
xchg
inc
clc
loope
pop
add
adc
push
aad
orl
fiaddl
arpl
mov
and
jb
fistpl
sti
repz
test
jo
rorl
adc
pusha
jge
outsb
xchg
gs
lret
test
dec
adc
cwtl
ja
dec
fdivs
mov
mov
mov
arpl
int
and
or
sub
push
and
sbb
in
in
mov
repnz
in
mov
loop
idivl
push
sbb
cmc
mov
xor
ds
sub
xor
and
lret
addr16
shrl
xchg
movsl
xor
push
das
push
insb
filds
mov
test
mov
das
mov
lods
in
jae
mov
aad
and
push
cli
xchg
mov
fstpl
ja
add
inc
fnsave
shl
jmp
fs
loopne
out
test
mov
pushf
xchg
pop
test
push
pop
mov
adc
xchg
sbb
test
mov
faddp
fstl
test
or
mov
iret
lret
je
dec
ljmp
loop
sti
out
jo
fdivs
pop
scas
rolb
add
mov
adc
lret
adc
xchg
jmp
out
pop
or
inc
jge
mov
push
sub
mov
pop
scas
scas
lea
cmc
cmc
pop
mov
pop
dec
lea
dec
mov
sub
in
mov
add
mov
call
jg
jbe
pop
mov
sbb
mov
dec
je
jmp
ret
xchg
lea
iret
xchg
ljmp
add
and
in
rcr
std
cltd
sbb
push
pushf
xchg
xor
sbb
lret
cmp
insl
add
scas
xchg
stc
sbb
mov
pop
mov
fidivrl
movsb
jne
pop
cmp
xor
inc
jle
les
jecxz
imul
sbb
cs
cmpsl
cmp
mov
add
push
and
outsb
jae
jge
in
mov
outsb
outsb
adc
or
orb
jns
aas
push
xchg
pop
std
adc
adc
and
std
push
mov
int
fiaddl
xchg
popa
lds
out
lcall
and
shrl
jge
inc
sarl
loop
dec
jecxz
imul
cmp
mov
faddp
lcall
and
jae
mov
xchg
icebp
repz
cwtl
sub
adc
pop
mov
leave
dec
pusha
into
pop
push
ljmp
in
rclb
data16
pusha
aaa
pop
aas
adc
jecxz
lret
rorl
aam
int
shlb
lcall
in
jo
int
aaa
mov
dec
in
jo
lret
sbb
pop
inc
jl
aas
mov
pop
insb
adc
iret
xor
inc
inc
cmp
fcomps
pop
jg
add
mov
push
jle
and
adc
lods
cmpl
dec
stos
inc
dec
movsb
les
push
iret
loope
inc
in
cmc
mov
in
adc
lods
call
sbb
mov
or
and
jb
shr
lock
push
adc
mov
fisubs
pop
push
xchg
out
cmp
inc
je
push
pop
cmp
shrb
sbb
sub
jg
jg
add
jmp
mov
mov
call
add
mov
leave
push
or
mov
inc
xchg
sub
inc
cltd
pushf
dec
enter
and
and
fdivl
hlt
ds
cmp
stc
adc
lea
shl
jno
out
cmp
mov
mov
xchg
loopne
outsb
mov
adc
inc
and
imul
out
pop
out
xor
inc
dec
mov
jl
cwtl
sbb
mov
inc
iret
call
sbb
xor
adc
and
mov
roll
add
gs
xchg
add
adcb
sbbl
into
xchg
cwtl
mov
jno
sahf
xchg
scas
clc
dec
adc
xchg
mov
ficompl
xchg
xchg
pop
aaa
push
lcall
movsb
icebp
icebp
cmp
movsl
mov
fwait
ss
pop
dec
cld
sarl
pushf
cmpb
divl
cld
adc
inc
adc
into
jb
mov
mov
pop
adc
stos
mov
jns
xor
pop
insb
and
cli
mov
xorl
lock
push
inc
pop
in
ja
lock
push
js
int
inc
inc
notl
sbb
push
pop
xchg
out
lea
mov
in
xchg
mov
mov
dec
rorb
add
popf
mov
enter
or
xchg
pop
cltd
push
xchg
in
xor
jge
dec
in
push
lret
std
test
xor
leave
inc
fwait
or
std
rsqrtps
pop
ljmp
mov
inc
outsb
das
ljmp
mov
push
es
xchg
dec
push
cwtl
hlt
mov
lret
mov
xchg
maxps
add
push
push
fisubs
push
js
inc
lahf
int
std
incb
fisubrl
pop
sahf
jo
outsl
es
sub
pop
in
dec
push
outsl
std
fs
outsl
dec
inc
fildll
inc
add
push
in
add
pop
inc
push
mov
mov
cmpsl
ds
ljmp
pop
dec
mov
iret
lcall
outsb
iret
shl
fisubs
out
push
push
ret
and
or
mov
jp
xor
rol
jmp
push
push
sbb
call
fstl
dec
fldt
shrl
jmp
add
dec
mov
dec
pop
xchg
dec
mulb
dec
cli
push
sub
xor
pop
cmp
sbb
ja
iret
repz
cmp
push
push
mov
sar
jp
dec
pop
clc
sub
loop
aas
hlt
aas
push
jmp
cmp
jp
pop
imul
lods
movsb
popa
fwait
and
and
xor
or
lret
mov
adc
inc
fs
xchg
xor
and
bound
cmp
cmc
mov
pop
or
scas
or
rorl
ret
adc
dec
das
sbb
cmc
pop
pop
iret
xor
and
pushl
arpl
int3
lds
mov
xchg
scas
mov
xor
mov
bound
popa
jge
pop
jl
jmp
sbb
inc
xchg
int3
aam
add
es
lds
je
insb
or
xor
pop
mov
add
aam
inc
fstps
je
or
and
xchg
xor
mov
pop
aad
jmp
pop
mov
jl
xchg
rorl
and
dec
ficoms
xchg
xchg
scas
push
and
movb
cmc
dec
pushf
mov
jns
pop
movsl
stos
out
sbb
lret
add
ljmp
out
adc
das
inc
mov
xor
fisubl
push
pop
push
xor
inc
fdivrs
lock
test
movsl
js
jl
gs
mov
or
mov
add
je
js
push
data16
xchg
outsl
xor
mov
popf
rolb
call
adc
pop
mov
addr16
int
xchg
inc
lcall
inc
or
xor
in
imul
and
push
push
aaa
and
pop
adc
mov
cmpsl
fldcw
cmp
jle
scas
mov
mov
inc
test
std
cltd
mov
mov
scas
inc
test
bound
adc
daa
inc
push
enter
xchg
les
dec
roll
es
mov
test
push
push
jno
jl
cmc
or
jl
lcall
and
sub
cmp
dec
lret
xchg
mov
lea
int3
pop
jle
xor
mov
adc
inc
pop
sbb
jne
repz
or
xor
aam
popa
fsub
rorl
fadd
cmpsb
cmp
out
vucomiss
mov
or
sub
inc
push
cmc
and
data16
inc
fsubs
repz
out
cwtl
call
add
xor
adc
mov
ds
cmp
incl
idivb
pop
jp
push
xor
push
js
int3
into
loop
das
push
sbb
fwait
aas
push
mov
pop
mov
push
cmpsl
sbb
sbb
in
sbb
sbb
xor
xor
adc
iret
fidivl
jbe
out
pop
mov
shlb
jae
js
adc
iret
cmp
pop
ret
jl
imul
js
imull
dec
stc
mov
ja
lock
sbb
cmp
pop
sti
push
add
jns
sub
jae
mov
out
mov
je
aaa
aas
dec
cmp
daa
xchg
push
out
jb
aas
mov
in
jp
jmp
test
std
je
sbb
push
iret
loop
out
push
xchg
data16
aaa
inc
fidivl
data16
iret
addr16
popa
add
add
adc
pop
pop
das
mov
xor
dec
jecxz
jl
push
pusha
and
add
pop
push
sub
pop
int
jle
and
les
adc
xchg
ljmp
imull
mov
aas
lods
and
insb
in
sahf
add
jge
cld
push
mov
fstl
in
sbb
pop
icebp
das
gs
mov
mov
sbb
jmp
push
mov
clc
pop
repz
std
rcll
shrb
mov
jg
insb
jg
pop
arpl
lea
loop
and
push
shll
cmp
repz
ret
inc
rcrb
sbb
sar
fbstp
in
mov
sarl
pop
mov
mov
jge
les
repz
in
arpl
fnsave
jmp
clc
adc
mov
scas
faddl
cli
stos
test
adc
sti
cmp
adc
andl
mov
imulb
sub
jnp
stos
inc
xchg
add
leave
pusha
jmp
dec
jb
icebp
sub
jno
loop
loop
sub
sbb
inc
adc
scas
add
mov
or
or
xchg
sub
sub
sub
xchg
cmp
cmp
lcall
mov
mov
sti
int
or
aas
jae
jmp
test
inc
mov
mov
sub
stos
and
pop
in
sti
sbb
int
lock
cmp
ret
push
imul
out
lcall
adc
inc
adc
adc
xor
add
adc
cmp
adc
cmpsb
mov
stos
loopne
in
test
xor
clc
sbb
loopne
dec
xorb
xor
and
loope
add
and
cltd
jne
xor
mov
shr
add
fidivs
stos
repz
mul
cmp
inc
ret
fwait
pop
push
mov
stc
or
fsubr
mov
mov
pop
mov
pushl
decl
pop
fdivs
push
and
shrb
sahf
das
repz
push
push
add
xchg
mov
test
popa
fadd
xor
push
jne
mov
mov
decb
outsl
dec
enter
mov
mov
enter
sub
mov
inc
mov
adc
fistps
pop
cmpsl
sbb
mov
pushf
dec
aaa
jno
loop
lret
mov
out
aaa
jg
jecxz
push
lds
mov
fstl
cmp
pop
pop
fiadds
scas
data16
clc
push
mov
test
pop
iret
fwait
loop
mov
sub
nop
xor
jne
jnp
mov
movsb
push
push
push
andb
ficoml
xchg
pop
xchg
shl
imul
mov
or
push
xchg
in
in
lds
call
jle
jg
inc
mov
int3
mov
xchg
out
test
out
adc
das
fbstp
jb
jb
sub
fcompl
sub
fnsave
aaa
inc
inc
pushf
jge
push
sbb
pop
rorb
jb
and
xor
sub
xchg
xor
pop
fsubp
xchg
inc
jl
popa
jne
pop
orl
pushf
call
xchg
sbb
pop
daa
jge
mov
stos
scas
and
arpl
xchg
test
out
sbb
mov
sub
or
mov
xchg
mov
add
jecxz
mov
sub
js
lret
jp
add
sub
mov
inc
iret
outsb
ja
ret
sub
cmc
popa
dec
pop
imul
mov
insl
test
popa
push
push
mov
cs
call
aas
lret
and
push
push
jmp
sbb
ja
stos
jecxz
add
pop
xor
mov
icebp
add
or
inc
aaa
std
mov
fidivs
iret
lds
inc
fmull
leave
pushf
stos
clc
pop
out
mov
sti
test
popw
or
test
mov
pop
sti
add
nop
jns
push
scas
repnz
push
or
xor
pop
je
mov
jno
daa
lcall
sbb
push
inc
push
jns
cmp
fisubs
pop
add
pop
scas
mov
mov
xchg
fnstcw
andl
pop
imul
cmp
cmpsl
imull
loopne
lahf
push
xchg
inc
test
mov
pop
xor
shrl
or
pusha
sti
inc
icebp
mov
iret
out
jge
es
sub
test
push
add
daa
or
jno
leave
stos
mov
sbb
inc
push
inc
repnz
in
sub
dec
dec
push
jbe
xchg
cmp
in
and
int
repnz
xchg
mov
add
push
pushf
scas
je
and
push
mov
mov
icebp
jne
xor
shrb
scas
mov
cmp
push
not
cld
out
cmp
movsl
inc
mov
popf
movsb
pop
repz
mov
fwait
lret
sbb
pop
icebp
roll
in
addr16
xchg
in
bound
mov
push
cmp
aas
lock
sbbb
mov
add
xor
in
add
lcall
or
push
push
in
mov
push
inc
cmp
inc
cmp
out
mov
adc
add
lret
adc
fs
mov
add
mov
mov
dec
hlt
xor
cmp
jp
lret
sbb
decl
popa
xor
mov
cmp
mov
sub
stos
jp
subb
jnp
xor
dec
mov
adc
popf
push
sbb
mov
jle
pop
xchg
insb
jp
repnz
enter
pop
mov
lods
jmp
dec
push
lods
hlt
addr16
shl
jnp
mov
test
or
pop
shrl
js
push
aas
inc
push
mov
imul
dec
lahf
xor
jl
loop
pushf
out
aas
aad
inc
pop
loope
daa
xabort
sub
dec
mov
mov
cwtl
jns
hlt
movsl
jecxz
push
sub
loope
xor
inc
inc
adcl
fcomps
inc
or
pushf
add
mov
mov
ja
add
xor
je
movsb
xchg
das
bound
and
xor
jge
fcmovu
inc
pop
push
inc
xchg
fsubs
sub
push
push
fisubrl
clc
leave
cmpsb
movsb
ja
sbb
xchg
aam
notb
aad
sub
fiadds
clc
lods
js
and
stos
or
jecxz
sub
push
mov
and
out
fidivrl
xchg
lds
sub
push
mov
cmpps
mov
hlt
and
cmpsb
adc
xlat
push
out
jne
xor
cmp
mov
push
mov
pop
cmpsb
mov
mov
lcall
je
sbb
and
and
xlat
loope
xlat
cmpsl
xchg
pop
add
adc
dec
mov
cmp
or
sbb
in
clc
aas
lcall
imul
imul
enter
push
sub
clc
push
scas
insb
in
sbb
decb
mov
fisttpl
into
jl
lods
enter
push
mov
mov
mov
mov
sub
mov
inc
orl
nop
rorb
out
push
sbb
je
sti
aaa
fwait
mov
sub
cwtl
adc
sbb
imul
push
cmp
test
inc
sbb
xchg
mov
xchg
add
mov
jmp
mov
adc
mov
sahf
mov
test
xor
mov
xchg
sub
out
cmpsl
push
pop
xor
daa
jp
adc
mov
sbb
shrl
shl
adc
jg
sbb
fnstcw
mov
cwtl
cmp
imul
or
xchg
and
sbb
lcall
or
cmpb
out
push
loopne
adc
xchg
jno
sub
mov
add
fcmovnu
sbb
call
js
mov
and
push
sahf
adc
sub
inc
test
inc
invd
mov
push
and
mov
mov
lea
inc
push
sbb
in
scas
fs
and
dec
scas
sbb
insl
jp
cs
adc
ret
pop
xchg
cmp
sub
or
jl
xor
mov
pop
cmp
pop
lahf
out
xchg
les
fcoml
pop
lock
xchg
std
scas
fiaddl
pop
dec
fimull
mov
js
lea
fnstcw
lcall
in
jl
jmp
and
push
mov
xor
int3
inc
inc
xor
insb
or
test
sahf
je
insl
jle
les
cmp
mov
cmp
loopne
xor
xlat
fisubs
movb
mov
lock
stos
xchg
add
repnz
mov
andb
sbb
push
sub
push
movsl
mov
sbb
cmp
cmp
fcomps
in
pop
insb
xchg
dec
insb
jne
jo
cmp
mov
or
jecxz
adc
divb
ja
jnp
jae
inc
pop
pop
lods
sub
jb
push
pushf
pop
ds
mov
test
into
add
pop
fdivrs
or
enter
fistl
mov
sbb
movsl
dec
dec
mov
mov
mov
ljmp
add
and
push
cmpsl
adc
or
push
add
sub
test
jg
or
loop
pop
mov
lea
mov
xchg
mov
loope
aad
nop
out
cs
imul
lea
jmp
push
mov
and
mov
push
cli
mov
popa
hlt
mov
dec
out
rcll
pop
je
mov
out
mov
imul
mov
adc
sahf
push
repz
and
rcrl
xchg
aam
mov
aam
xchg
dec
jns
mov
cmp
imulb
sarl
aam
lcall
inc
jno
sbb
bound
xchg
add
sbb
jl
push
mov
sarb
loopne
inc
cmp
aaa
and
out
testb
mov
aad
cmp
push
shll
inc
add
adc
fldt
jne
leave
push
pop
mov
sarb
xchg
outsb
xchg
pusha
inc
dec
pop
pop
xchg
push
stc
push
inc
lcall
lods
jo
scas
or
inc
pusha
notb
mov
mov
xor
inc
dec
xlat
rcrl
rcr
push
popf
inc
cli
xor
jge
stos
lahf
adc
sbb
xor
insl
cmc
jecxz
push
in
aam
xchg
loopne
inc
push
stos
cmc
int
jg
push
leave
ficoms
add
xchg
movsb
xchg
mov
xchg
ljmp
jne
fldenv
mov
mov
insb
inc
movsb
adc
and
sbb
les
sbb
bound
pop
dec
jns
jmp
movsl
dec
mov
test
sar
pop
pusha
std
mov
mov
fidivs
mov
inc
adc
aam
mov
in
ret
xor
adc
test
cmc
stc
das
shll
les
mov
add
ljmp
xor
outsb
adc
pusha
inc
fdivl
into
push
je
push
push
pop
lahf
int3
subl
out
mov
inc
xor
scas
fs
lock
mov
insl
push
xlat
icebp
cmp
je
jno
pop
cmp
cmp
xlat
leave
ss
int3
mov
aam
pusha
clc
mov
stos
cld
aaa
sarb
xor
fwait
mov
and
pushf
xchg
jg
mov
fwait
push
jno
jae
daa
cmp
ljmp
lcall
imul
jae
jl
dec
xchg
add
imull
sbb
sbb
add
or
cmp
dec
dec
push
out
push
sbb
jnp
leave
mov
mov
push
push
mov
pop
dec
lret
in
jle
xchg
mov
mov
data16
dec
lods
jno
mov
fildl
sub
mov
xor
jp
fnsave
adc
rclb
pop
fmull
mov
movsl
cmp
clc
rol
ss
dec
popa
cmp
xor
mov
out
lcall
mov
insb
pop
imull
push
aas
cwtl
insb
sub
pop
outsl
mov
xchg
pop
xor
inc
inc
fisubl
dec
mov
gs
ss
pop
and
and
xchg
cld
pop
add
aas
push
cmp
ret
pop
xor
xor
out
dec
mov
clc
js
sub
enter
mov
inc
jg
push
mov
jns
xchg
or
mov
lds
lods
dec
fiaddl
dec
cmpsb
mov
bound
rorl
pop
cmc
imul
and
cmp
mov
push
jns
fisttps
pop
out
mov
lcall
andb
jae
cmp
int
cmp
faddl
push
enter
test
push
and
addr16
movl
idivl
cltd
and
std
mov
test
sahf
nop
push
mov
sub
mov
sub
inc
dec
inc
adc
push
adc
add
outsb
in
sub
inc
movsl
lds
arpl
inc
mov
sub
mov
out
in
int
popa
or
popa
je
outsl
sarb
js
js
pop
mov
dec
addr16
rcl
and
jo
jmp
xchg
clc
add
pop
repnz
dec
shrb
push
xor
mov
lds
fidivs
outsb
jecxz
test
mov
mov
mov
shrl
jb
pushf
sub
es
jo
rclb
jl
add
jge
push
test
push
add
sub
shll
lock
cmpsb
sbb
cmp
sbb
movsb
xchg
xchg
dec
ficoml
cmp
movsb
dec
mov
rcrl
dec
lahf
aad
cmp
cmp
and
xor
jnp
pop
sub
leave
je
mov
push
hlt
leave
xor
addr16
mov
mov
fs
xchg
sbb
push
pop
shrl
mov
ja
test
jnp
mov
mov
mov
pop
shrb
shrl
fld
fidivs
icebp
mov
rorl
jg
mov
or
lock
js
mov
andl
dec
mov
rolb
leave
sub
test
adc
dec
mov
es
rolb
bound
lcall
adc
jmp
imul
adc
std
add
dec
pop
clc
cmp
mov
gs
xlat
jle
les
lea
gs
dec
mov
add
in
mov
lea
xchg
inc
mov
lods
jge
sahf
xchg
hlt
xchg
repz
adc
cld
or
jmp
in
flds
call
sbb
mov
ret
mov
movsl
addr16
mov
push
mov
or
lret
pop
movntq
push
call
pop
aaa
mov
imul
test
dec
mov
push
pop
jo
lock
adc
into
dec
mov
lret
push
arpl
push
sub
inc
pop
das
sti
inc
test
incl
jle
js
push
lods
xchg
insb
gs
push
sti
and
or
das
vmovups
mov
in
cmpl
or
dec
dec
insl
shrl
jl
sub
xchg
mov
into
fcmove
inc
or
leave
push
cwtl
jne
ret
inc
scas
sbb
lods
add
xchg
test
inc
lcall
pop
call
xor
lods
mov
jle
int
shll
jae
xchg
hlt
sti
add
mov
mov
in
inc
cs
mov
jg
jo
or
or
jp
add
out
push
xchg
or
sub
rsqrtps
loop
lea
cmp
imul
pushf
cmp
movups
and
divb
pop
push
fisttps
cmp
fisttpll
mov
ss
cwtl
das
inc
lret
sub
sti
ss
mov
inc
and
pop
lods
pop
adc
pushl
cmpsb
ss
dec
push
adc
lods
fistl
mov
sbb
sbbl
xlat
add
pop
mov
xchg
xchg
sub
push
inc
push
lahf
add
adc
xor
mov
and
mov
inc
sti
test
arpl
adcb
ljmp
outsl
mov
mov
in
mov
pop
stc
xchg
xor
fwait
fwait
jecxz
sti
fnstcw
sub
repz
push
ds
pop
movsb
enter
jns
pop
mov
push
push
in
xchg
aad
ret
adc
jo
rep
inc
in
aas
fwait
cmpsb
je
mulb
cmpsb
inc
and
sbb
data16
push
ljmpw
jp
mov
xchg
mov
jbe
cmp
fildl
lret
mov
test
add
pop
dec
inc
fdivp
jg
cmp
inc
mov
inc
mov
dec
stc
ret
mov
mov
fwait
into
ss
out
push
push
clc
mov
inc
aas
lcall
push
mov
insb
insb
aaa
push
jns
push
punpcklbw
xor
mov
call
cmp
jp
add
pop
dec
xchg
sub
cmpsl
inc
dec
pop
pop
outsb
aam
inc
xchg
js
jl
insb
scas
pop
loopne
aas
mov
xchg
addl
sbb
cmp
sub
enter
add
sbb
pop
loopne
nop
xchg
ret
repnz
call
cmp
pop
test
inc
pop
cmp
sub
es
xchg
push
adc
test
inc
push
cs
dec
jb
push
mov
adcb
adc
add
aas
push
cld
dec
or
out
inc
push
cmp
insl
mov
iret
pop
sbb
ja
sbbb
cltd
lret
xchg
shll
std
push
cmp
js
or
enter
insl
xchg
jbe
loopne
jne
or
push
loope
sub
dec
ljmp
addb
shrl
fdivp
adc
xchg
fmuls
mov
out
dec
sub
jb
fstl
sbb
into
add
mov
test
pop
sub
jne
mov
jnp
push
jne
or
aam
imul
mov
cld
call
or
mov
dec
pop
cltd
into
sbbl
lea
jg
arpl
or
xor
ret
dec
in
adc
mov
inc
push
sti
pop
xchg
jp
or
pushf
out
adc
pop
xchg
push
push
stos
out
and
jne
inc
insl
imul
rclb
push
pop
pop
in
int
inc
mov
mov
xchg
ljmp
jne
inc
or
mov
push
test
aaa
dec
cmp
aas
movsb
push
mov
fsubr
cmp
sbb
ficompl
mov
inc
popa
outsl
add
out
push
addl
arpl
popf
pop
cmpsl
leave
mov
enter
repnz
popf
sbb
mov
jg
adc
adc
xchg
push
addb
aas
inc
push
repnz
aam
xchg
sub
repnz
dec
jns
ror
dec
int3
pop
icebp
faddp
pop
adc
add
mov
jp
nop
push
sub
test
pushf
pop
xchg
push
push
cmp
adc
fucomi
mov
fidivl
in
xchg
fidivrl
cmp
loop
inc
pop
jnp
arpl
das
adc
ret
xor
xor
loope
rclb
add
push
clc
fwait
stc
jne
iret
das
adc
sub
js
movb
xchg
int
test
aas
adc
or
mov
xchg
movsb
cld
xchg
mov
ret
mov
add
mov
jmp
xor
mov
neg
cld
cltd
or
pop
hlt
in
in
in
sti
test
cmp
mov
add
ds
fsts
out
push
sub
mov
jnp
mov
inc
adc
lcall
and
cmp
into
pusha
ror
xchg
cmp
into
leave
pop
loopne
jne
clc
push
jb
roll
cmp
jg
jecxz
test
mov
mov
mov
sub
ds
sub
sar
scas
jb
push
mov
inc
inc
sub
pop
and
fildl
xor
imul
mov
pop
push
adc
ret
orb
pop
pushf
mov
call
lcall
movq
sarl
in
pusha
mov
daa
decl
rolb
sbbl
inc
pop
jle
addb
xor
leave
sub
jbe
mov
jnp
mov
xor
jne
testb
add
xchg
sub
cmp
jle
xor
jo
insb
mov
rcrl
int3
mov
repnz
call
stos
test
adc
sub
adc
cmpsb
adcb
adc
sub
in
inc
or
fcoml
inc
out
jae
nopl
sub
leave
sbb
clc
ja
mov
cmpsl
push
inc
push
and
arpl
sub
push
jno
enter
inc
les
xchg
pop
pusha
mov
mov
bound
mov
jg
jg
ja
cmpsl
pop
adc
inc
xor
sbb
push
lea
and
out
cltd
push
add
loopne
arpl
dec
fbld
fwait
sbb
std
push
scas
and
sti
xchg
mov
inc
pop
pop
cwtl
repnz
lret
inc
addr16
xchg
dec
cld
or
in
push
and
push
jg
lret
mov
mov
test
insl
lret
and
xor
test
mov
mov
or
adc
jo
sbb
xchg
lcall
mov
add
mov
ljmp
mov
cmp
xchg
xor
out
xor
xchg
cmpsl
inc
pop
fstps
push
push
das
repnz
mov
add
outsb
test
inc
shrl
repnz
ret
push
lcall
pop
movsb
std
xorb
cmp
je
divl
jns
inc
mov
cwtl
scas
pop
adc
rep
bt
popf
movsl
aad
mov
shrl
aas
cmp
aad
pusha
adcl
leave
lds
add
jl
sarl
enter
rcrl
mov
les
adc
fistpll
daa
and
cltd
mov
fsubp
dec
xor
dec
mov
pop
cli
scas
inc
sub
out
in
enter
sub
push
jecxz
lods
push
or
push
xor
pop
test
sbb
jge
sub
jp
pop
sub
shl
jmp
loope
jne
adc
sbb
nop
adc
xchg
mov
or
or
ret
mov
push
popa
rcll
sub
hlt
outsl
ret
in
scas
lods
insl
sub
xor
negb
mov
xor
push
lock
xchg
push
loopne
testl
adc
jp
pop
mov
mov
mov
shlb
mov
pop
repnz
addr16
outsl
stos
jns
das
push
lods
cmc
je
push
xor
mov
hlt
dec
cmp
dec
jecxz
push
stos
pop
pop
enter
adc
lahf
dec
push
fnstsw
push
sti
test
test
mov
daa
mov
mov
xor
dec
mov
cld
scas
loop
adc
and
out
outsl
daa
int3
inc
sbb
mov
adc
fadd
xchg
bound
out
mov
add
cltd
loop
ret
xor
insl
push
popf
pushl
pop
jb
fmull
rcll
xor
push
cmp
add
test
fnstcw
cmpsb
in
or
fisubrs
sbb
or
loop
xchg
push
pop
popf
jmp
mov
stos
cld
mov
lcall
dec
push
outsl
daa
jl
stos
imul
pop
cmpsb
mov
push
mov
push
out
bound
outsl
jo
addr16
out
clc
jae
ja
hlt
imulb
push
jns
or
add
lds
pop
loop
notl
fcompl
dec
xchg
into
hlt
xor
xor
or
loop
dec
adc
fcoml
dec
insl
clc
sbb
aas
lds
cmc
mov
push
jg
aam
pop
imul
inc
xchg
out
pop
shrb
bound
jae
mov
addl
adc
and
add
sub
xchg
ja
sbb
push
insl
sub
xchg
mov
mov
imul
std
adc
push
adc
addr16
fcoml
jle
movsb
mov
gs
adc
loope
mov
mov
push
push
inc
or
dec
inc
fistpll
cwtl
mov
push
lock
fiaddl
push
je
aas
jmp
sub
xor
inc
frstor
and
add
jmp
or
push
push
adc
imul
out
xorl
lcall
aam
xchg
fwait
test
fisttpll
cli
xchg
lods
jno
push
mov
cmp
xor
fcomps
sub
inc
daa
ja
add
mov
iret
scas
inc
and
stos
push
bound
mov
flds
dec
jle
lret
mov
inc
ss
imul
mov
inc
cmp
push
cmp
movsl
stos
das
out
test
pop
mov
fidivl
iret
orb
inc
cltd
lds
and
pushf
pop
mov
rol
push
xchg
stc
cmp
dec
or
int3
jge
mov
shll
cmp
dec
pop
insb
push
mov
cmp
push
leave
dec
add
out
shlb
cs
imul
inc
xor
arpl
gs
push
rclb
push
ljmp
xchg
rcrl
shll
in
cmp
xor
sub
xchg
imul
mov
pop
mov
pop
sub
cmp
cmovge
dec
repnz
mov
xchg
pop
adcl
nop
divl
imul
movl
sbb
adc
jns
sbb
cmp
jno
gs
dec
icebp
clc
jae
lods
jp
mov
jecxz
mov
pusha
scas
inc
subb
js
adc
jecxz
jno
outsl
shrb
push
sahf
fimull
mov
xor
xchg
pop
sub
pop
pushf
mov
push
lahf
out
dec
mov
hlt
cmp
xor
inc
lock
in
push
testl
rcrb
jne
pop
mov
loop
clc
pop
addr16
adc
enter
mov
mov
mov
ljmp
jmp
imul
mov
jno
and
call
lea
mov
dec
popa
fdivrl
inc
pop
adc
inc
cli
cmpsl
xchg
jge
out
shlb
aam
mov
xchg
dec
js
jbe
push
in
push
xchg
xor
inc
cmp
sbb
sub
xchg
cwtl
das
add
xchg
ds
loop
repz
sbb
nop
mov
lock
xchg
movsl
mov
loopne
pop
testb
dec
mov
push
lret
sbb
push
icebp
push
jle
rcll
cmovne
jl
xor
insl
loope
sbb
sbb
hlt
mov
dec
mov
adc
call
xor
pop
cmp
mov
inc
sti
sti
lcall
ret
mov
aam
inc
popf
loopw
lock
insb
inc
xlat
popf
popf
xchg
dec
cmpsb
jle
ja
jl
mov
xchg
jb
cmp
ljmp
popa
fisubrl
ret
mov
scas
adcb
punpckhbw
xchg
inc
mov
xchg
ljmp
clc
jbe
push
sarb
sbb
stos
inc
mov
xor
nop
aas
mov
std
inc
pop
lret
out
call
shl
mov
pusha
cmp
shl
mov
fidivrs
jp
iret
sub
push
jmp
push
jb
popa
cld
push
jg
leave
rcrl
xchg
push
add
cs
pop
push
and
insb
mov
inc
test
and
sub
mov
bound
inc
repnz
lret
adc
jno
fs
cmp
push
or
jmp
jl
push
cmp
inc
test
pop
fnsave
jnp
push
xchg
push
xchg
mov
mov
nop
dec
and
push
ficoml
and
sbb
std
cmpsb
and
fimuls
jge
stos
movsl
mov
ja
add
cli
and
push
mov
int3
mov
inc
dec
dec
jmp
mov
jle
sub
xor
pop
dec
push
sub
iret
pop
hlt
xchg
lock
mov
mov
xchg
outsb
jmp
sbb
pop
lret
addb
ret
aam
adcb
int
dec
sbb
in
or
repz
xchg
ret
fistps
adc
push
cmp
mov
pop
out
cmp
xchg
or
ret
push
popf
pop
mov
iret
ret
dec
jmp
ds
xchg
sub
mov
into
enter
mov
in
cmp
push
fcmovnbe
dec
adc
mov
mov
int
dec
scas
mov
sbb
pop
outsb
mov
jl
mov
jmp
cmp
int3
aam
arpl
sbb
add
in
std
or
dec
sbb
adc
push
test
cmp
mov
subl
fists
iret
mov
decl
rclb
cmp
jl
or
dec
and
add
test
and
pop
mov
add
dec
push
fimull
ror
mov
jb
push
lcall
xor
push
test
xlat
sbb
jge
test
incb
jmp
in
mov
jmp
fdivs
or
pop
dec
fwait
lods
push
jg
fwait
mov
outsb
sub
xchg
outsb
ficomps
shll
int3
mov
push
leave
xchg
das
push
dec
and
cmp
outsb
adc
lock
jmp
mov
cmpsl
rol
mov
divb
loop
iret
lahf
mov
or
into
and
movsb
stos
lods
add
addr16
pushf
mov
fs
xchg
inc
fisttps
repz
lods
mov
and
aam
call
mov
scas
out
inc
and
jmp
sbb
mov
lahf
cmp
and
enter
stos
cltd
mov
sahf
mov
and
mov
popf
pop
pop
rol
loopne
xchg
jmp
inc
rcrl
in
pushf
push
and
inc
push
leave
inc
fs
sti
or
je
iret
es
push
orb
psllq
movsl
push
loope
sub
push
ret
into
jp
arpl
mov
jmp
xor
mov
add
mov
rorb
mov
dec
adc
push
push
xchg
ret
pop
cmp
fst
add
inc
ss
push
out
bound
mov
lret
inc
mov
jb
shll
popa
stos
jno
insb
dec
shrb
sbb
sbb
inc
xor
insb
pop
jae
jnp
sahf
scas
push
lock
bound
adc
lods
sbb
adc
lret
or
and
dec
xor
jl
inc
out
push
jno
enter
or
sbb
lods
sbbl
mov
scas
outsl
add
fdivs
mov
cmp
outsl
adc
insb
imul
ret
mov
sahf
outsb
add
pop
jbe
mulb
and
cmp
and
dec
mov
addr16
xchg
pop
adc
flds
flds
or
je,pt
mov
mov
xchg
push
jle
mov
insb
and
out
cmc
test
and
inc
test
xchg
outsl
mov
icebp
mov
jg
fnstenvs
pop
cmp
dec
pop
dec
adc
mov
ja
arpl
adc
insb
push
add
sub
mov
ret
mov
jns
inc
das
sbb
mov
pop
imulb
xchg
push
jle
loopne
arpl
dec
adc
fbstp
insl
imul
sub
cld
lods
test
stos
stos
ficoms
fmull
mov
xor
inc
adc
cmp
mov
ds
cmp
push
inc
pusha
cmp
adc
push
inc
mov
and
cld
adc
inc
adc
popf
xor
push
mov
out
mov
push
xor
repnz
xchg
inc
jecxz
lock
add
mov
mov
or
mov
movsl
adc
pop
test
and
mov
scas
mov
push
popf
dec
jb
lock
and
mov
xchg
mov
shl
scas
pusha
lret
mov
pushf
arpl
iret
ljmp
ja
or
lcall
push
push
je
fdivl
push
inc
push
add
pushf
inc
add
rclb
into
fprem1
mov
dec
sbb
dec
cmp
out
cmp
sbb
sbb
inc
cmp
push
xor
iret
outsb
xchg
fisttpl
jge
sbb
ja
or
ret
pop
xor
lcall
jne
mov
pop
gs
inc
fs
inc
in
int
xor
std
push
push
jg
adc
fdivrl
cmp
repz
loop
rcrl
rolb
scas
arpl
lods
inc
mov
cmpsl
push
mov
aad
imul
xor
mov
fisubrl
lods
xor
dec
ror
mov
scas
mov
jecxz
xchg
jnp
inc
stos
sbb
sub
ljmp
xor
mov
add
loopne
sub
stc
pop
mov
loopne
mov
jne
or
sub
mov
cwtl
add
cld
adc
sub
sbb
xchg
out
pop
ret
and
fsts
push
adc
subl
pusha
das
bound
xor
and
pop
xlat
fdivl
mov
test
movsb
cli
mov
fmuls
mov
adc
inc
push
dec
xchg
out
inc
fs
or
daa
outsl
in
adcl
loope
hlt
cs
popa
dec
scas
ret
sti
pop
popf
mov
xor
xlat
jnp
xor
mov
jge
shrb
fdivrs
inc
sub
scas
mov
pop
inc
jmp
movsb
xchg
dec
adc
xor
adc
cmp
mov
mov
es
cmp
ja
lods
mov
out
cmpsl
xchg
and
push
mov
adc
add
dec
out
and
xchg
sbb
inc
jne
mov
addr16
jne
movb
push
int
out
dec
add
call
sbb
mov
add
jb
lahf
sbb
loope
xor
outsl
test
into
mov
add
stc
clc
or
add
sbb
sti
daa
scas
jg
inc
sub
outsb
rcrl
dec
test
jno
mov
aas
xchg
je
adc
cmp
or
sbb
cmp
pop
mov
jl
xor
inc
mov
mov
adc
stc
mov
fs
popf
call
cmp
in
scas
cmp
cwtl
pop
movsb
xor
mov
sub
ret
jae
dec
sub
testl
in
jno
pop
dec
loop
ds
scas
lods
mov
and
sbb
jo
repz
aaa
pop
cmp
mov
sti
test
sbb
cmp
mov
sti
inc
lret
cs
mov
sbb
inc
push
or
orl
int3
ja
in
test
mov
cmp
sarl
xor
mov
pop
imul
jmp
lcall
jnp
sbb
mov
push
jmp
lds
push
call
pop
outsl
imulb
je
xchg
cmpsb
push
ljmp
fs
pop
repz
dec
adc
sbb
mov
pop
jns
pusha
jno
mov
bound
cmc
setns
xchg
mov
fsubp
mov
insb
cmp
aaa
loopne
fsub
add
mov
lds
xor
mov
sahf
data16
mov
lcall
mov
mov
rcrb
or
iret
xchg
clc
outsb
sbb
int3
mov
fs
aaa
loopne
pop
sub
dec
popf
call
inc
adc
adc
or
and
mov
mov
lock
inc
push
clc
dec
push
push
sbb
stc
nop
xor
dec
sbb
idivl
inc
or
sbb
xchg
dec
sub
jl
outsl
push
rcrb
loopne
in
in
std
xor
cmp
sbb
sbb
arpl
shll
adc
mov
or
jl
test
xchg
dec
outsl
mov
sbb
pop
mov
lret
std
and
push
std
imul
dec
mov
ja
scas
sarb
mov
jecxz
addr16
ret
out
ret
pop
test
lods
iret
insb
aas
dec
insb
sub
inc
mov
mov
push
sbb
stc
insb
cmp
das
push
sub
cld
and
pop
andb
mov
gs
xlat
es
xchg
dec
notb
pop
jle
sub
jg
cmp
dec
stos
pop
stc
dec
scas
sub
and
insb
push
mov
inc
push
adc
adc
stos
push
jns
inc
or
adc
or
sbb
or
fld
ss
xchg
repnz
mov
std
mov
nop
sub
test
mov
push
cmp
add
ret
dec
add
out
andb
nop
xchg
sbb
pop
mov
mov
test
and
sbb
das
dec
sub
jl
ja
push
loopne
popf
rolb
int3
push
pop
dec
movsl
std
mov
sub
jmp
ljmp
shrd
add
inc
sbb
add
js
xor
cmp
ret
int
andb
push
xchg
jge
cwtl
ss
xor
xchg
push
jmp
bnd
xchg
jno
lods
repz
daa
pop
test
cmp
cs
push
mov
xchg
outsl
push
sahf
xchg
add
inc
jl
insl
scas
or
inc
sarl
cmp
lods
mov
sti
fnstcw
test
push
cmp
or
adc
xor
dec
mov
xlat
andb
neg
add
pop
sub
aad
push
pop
ss
adc
sbb
xor
out
mov
adc
inc
enter
mov
mov
cmp
into
cmc
gs
sub
sbb
mov
push
stos
pushf
lret
addr16
ss
lds
xchg
jb
iret
mov
negl
push
dec
fwait
jp
jle
mov
xchg
lcall
xchg
rol
sub
fcmovne
xchg
sbb
pop
inc
mov
imul
clc
shlb
and
cli
mov
int3
out
push
rcll
shrb
insb
or
lret
mov
daa
jb
xchg
sbbb
pop
pop
push
push
mov
xchg
mov
addb
addl
jbe
scas
adc
push
or
sbb
fcomps
jno
push
std
mov
das
and
cs
shrl
push
inc
mov
xor
xor
fnstcw
adc
xchg
add
xor
sub
adc
insl
loopne
repnz
mov
or
adcb
mov
xchg
jno
test
push
lods
testb
pop
push
mov
xor
ret
xor
movswl
xor
xor
jecxz
inc
mov
add
imul
shl
insl
aaa
pop
lds
lock
daa
icebp
std
hlt
rcrl
mov
cli
jmp
les
mov
sar
xchg
outsb
sahf
jno
inc
sbb
fsubl
stc
or
cltd
aaa
xchg
dec
test
cs
mov
xor
aad
mov
jge
in
jae
xchg
scas
fs
rol
xor
test
pop
into
mov
ret
mov
test
sbb
enter
insb
push
ljmp
movsb
inc
xor
cmp
push
in
aas
add
add
push
rcll
test
sti
sbb
xchg
jnp
add
mov
mov
cmp
ret
push
dec
int3
dec
lcall
push
ljmp
mov
dec
sub
out
xchg
mov
jae
adc
add
jle
add
inc
ss
dec
mov
push
pop
pop
addr16
mov
cmp
adc
aam
xor
cmpsl
and
mov
mov
pushf
xor
inc
bound
xor
pop
mov
adcb
mov
adc
mov
xchg
mov
sbb
sbb
or
xchg
xor
lahf
push
push
inc
cmp
jg
mov
subb
mov
insb
lret
jo
add
cld
push
xchg
add
cmp
pusha
xor
mov
in
shr
call
mov
mov
push
mov
push
xchg
imul
cmc
mov
andb
pop
sti
je
cmp
and
aaa
adc
insl
dec
lods
cmpl
mov
fs
bound
insb
sub
loop
cmp
pop
ljmp
fwait
cld
test
jp
movsb
inc
mov
int3
out
adc
rcrl
inc
push
push
shr
mov
repnz
stos
movsl
sbb
std
push
ljmp
push
jmp
xlat
or
out
cmp
add
adc
sbb
pop
push
sub
and
testb
call
push
lock
jbe
ret
jbe
jbe
outsl
xchg
push
ret
lods
pop
pop
xor
pop
shll
cmp
inc
jo
js
fnstsw
push
cltd
std
fisttpll
add
pop
cmc
nop
daa
daa
jnp
int
mov
rclw
rcr
and
iret
in
aad
jp
push
fwait
jmp
loope
xchg
cmp
jmp
jb
test
ret
rorl
test
dec
mov
lds
inc
and
lahf
push
mov
leave
enter
lcall
sbb
pop
push
xchg
pop
xlat
pop
popf
mov
dec
cmp
mov
ja
ret
aam
lcall
out
mov
movsb
xchg
mov
sbb
jbe
inc
aad
sbb
mov
push
mov
daa
mov
fimuls
add
sub
ja
cli
outsb
sub
aaa
daa
lods
adc
sub
adc
loopne
sbb
mov
insb
fbld
iret
jle
in
pop
xor
inc
lds
incl
mov
sub
xor
xor
popa
mov
lret
cmp
scas
call
cs
out
jp
xchg
add
aaa
lds
sbb
sbb
insb
fistps
cmp
addr16
xchg
out
add
push
fs
repz
test
xor
mov
imul
fildll
dec
mov
mov
push
inc
dec
xchg
mov
fistpl
cld
ret
outsl
add
jne
push
lds
xchg
test
in
in
in
stos
add
sub
ud2
mov
jbe
stos
out
cli
xchg
jmp
mov
jle
jp
dec
pop
call
test
neg
sbb
push
mov
loope
xchg
rcll
arpl
ret
adc
fsubrs
mov
stc
and
sbbb
addb
das
mov
dec
dec
scas
jmp
xchg
xchg
popf
xor
mov
push
ret
sbb
aam
mov
daa
popf
push
pop
ret
notb
sub
push
test
push
pop
jns
insb
fwait
or
jmp
adc
cmp
je
cmp
enter
mov
push
cmp
aaa
push
sub
inc
mov
inc
lret
hlt
cmp
sarb
mov
xchg
ljmp
repnz
or
clc
mov
lock
jae
xchg
add
cmp
movsl
jecxz
imul
add
cmp
sub
xchg
ss
ja
cwtl
std
jns
cmp
imul
jno
loope
imul
cmp
mov
hlt
mov
pop
cmp
ja
lea
push
stc
test
sub
add
in
add
jnp
out
fmull
xor
cmp
in
and
scas
sub
pushf
add
mov
xchg
xchg
into
xor
je
aad
rorl
xchg
cmp
xor
lcall
scas
xchg
push
jae
mov
xchg
es
mul
sub
dec
fs
add
jmp
adc
push
cmpsl
jmp
cmp
insb
test
test
push
lea
inc
roll
xchg
pop
xor
out
adc
cmp
bound
mov
rcll
filds
int3
or
inc
push
jmp
imul
lret
fnsave
outsl
xlat
dec
mov
jg
dec
pusha
inc
jg
out
mov
outsl
daa
stos
repnz
out
mov
sub
add
cmpsl
sub
fidivl
imul
mov
add
xchg
in
or
xchg
dec
js
pop
fwait
sbb
or
jle
cli
xchg
sub
push
stc
cltd
push
lahf
popf
adc
add
dec
dec
mov
ds
xchg
add
mov
loop
leave
cmp
arpl
push
push
inc
lods
outsb
cmp
fldenv
push
push
icebp
sti
aad
arpl
mov
dec
das
inc
push
or
cli
test
stos
dec
cmp
dec
pop
mov
mov
cmp
es
addl
lret
fiaddl
pop
xor
fcmovnu
xchg
dec
dec
mov
and
into
jge
mov
aas
xlat
adc
inc
fisubrs
inc
out
mov
lds
dec
mov
test
in
movsl
push
push
and
push
add
leave
cmp
push
in
aad
test
outsl
cli
xor
fdivrs
addl
fwait
out
inc
inc
mov
xchg
xchg
hlt
cmpsb
test
cwtl
test
aad
xchg
jo
xchg
sub
sarl
cmp
enter
call
xor
ljmp
popa
ljmp
ja
pop
mul
sbb
jb
mov
dec
adc
js
push
jbe
je
xchg
stos
mov
jle
jne
mov
and
fbld
es
sti
and
repz
mov
in
add
cmc
jecxz
pusha
icebp
sbbl
xchg
aad
push
js
testl
lret
out
mov
lods
and
shll
shl
movsb
xchg
bound
rcrb
and
lods
lahf
xchg
mov
repz
cmpsb
dec
ja
mov
test
pop
inc
loope
mov
jmp
and
es
dec
cmpsb
xor
push
lock
inc
lret
popf
cwtl
int
pop
testl
jmp
fsubrs
movsb
orb
pop
pop
lcall
dec
lds
test
push
and
ljmp
fucom
cs
ljmp
int3
cmp
xchg
outsb
in
cli
mov
cwtl
clc
cmp
mov
cmc
inc
lock
in
rcll
f2xm1
jns
rcrb
jle
rcr
mov
sub
mov
xchg
add
mov
jge
in
scas
movsb
loopne
sbb
add
or
icebp
xchg
cmp
fwait
aad
int3
jo
rol
and
adc
dec
fdiv
cld
push
test
outsb
and
je
stc
fs
pop
mov
add
pop
cmp
sbb
jge
sub
mov
cli
cmp
push
or
xchg
mov
add
data16
push
cmpsb
xchg
xor
out
cld
sbb
std
or
mov
xchg
add
lahf
push
testl
inc
ds
push
xchg
ret
iret
pop
je
outsb
jl
aam
sahf
rcrl
imul
and
jns
mov
sbb
jp
push
into
mov
cwtl
push
adc
int
ja
lret
xor
xchg
test
std
mov
push
mov
ret
loop
xor
xor
fists
jecxz
lods
aam
or
and
xchg
cmpsb
or
jmp
aad
sbb
pop
jae
mov
aad
cltd
sahf
or
sbb
scas
xor
adc
sarl
and
lcall
shl
push
nop
dec
shrl
mov
into
fmul
adc
mov
xchg
pop
push
pop
fisubl
mov
ret
nop
jmp
pop
pop
sbb
pop
sub
push
pop
mov
cmp
xor
fsubs
mov
push
incb
lcall
xchg
aad
in
repz
fstpt
and
dec
mov
adcl
ftst
push
push
mov
cmp
mov
jno
out
cmc
mov
adc
xchg
dec
arpl
mov
imul
nop
out
cmc
push
jge
xchg
pop
aam
stos
fcos
icebp
mov
cld
mov
in
ss
dec
cmp
push
lea
mov
out
call
in
push
in
xor
shrl
jnp
mov
dec
mov
xchg
in
xchg
mov
insl
dec
jns
popf
pop
cmp
mov
xor
jbe
push
lret
stos
das
cmp
lods
inc
or
push
pop
ret
mov
xor
mov
inc
pushf
outsl
fadds
mov
orl
rcl
mov
out
call
repnz
aas
mov
or
cmpsl
cli
jbe
sub
sub
cli
sti
sbb
es
mov
xchg
or
stos
in
mov
lcall
xchg
pusha
fistl
dec
xor
out
sbbb
adc
shlb
sbb
ja
cmp
jp
and
push
fwait
rcrb
inc
ja
add
add
pop
mov
mov
int
mov
sub
cmc
add
movl
push
stos
leave
mov
pop
xor
lcall
addr16
and
outsl
inc
xlat
movsb
out
shr
pop
xor
xor
xchg
pushf
addr16
inc
stos
insl
ja
popa
js
arpl
lcall
sbb
std
push
andb
cmp
movsl
pop
pop
aaa
shlb
repnz
push
jne
stc
lds
into
push
mov
mov
xchg
push
aaa
pop
fiaddl
stos
cmp
stos
fstpl
mov
in
sub
daa
pop
aam
js
insb
pop
cwtl
fs
mov
fdivr
push
test
out
push
push
xor
in
pop
push
cltd
xor
push
test
in
and
mov
enter
call
call
jnp
mov
adc
cltd
jecxz
lods
add
add
mul
adc
xchg
stos
adc
movsl
inc
bound
mov
test
mov
add
xchg
push
jns
out
pusha
lcall
xor
stc
nop
sbb
mov
or
js
clc
xchg
loop
lods
les
icebp
push
iret
and
imul
inc
sub
test
mov
lea
inc
inc
outsb
mov
and
mov
fisubrl
cmp
lret
rclb
insl
fldl
mov
out
testb
push
in
mov
xchg
icebp
into
gs
jnp
jg
out
test
and
or
cmp
cmc
pop
cmpsb
push
xchg
sub
std
push
push
mov
mov
xchg
iret
lea
sbb
add
mov
shrb
fdivs
aam
fst
ret
rcrl
cmp
cmp
nop
jmp
cmpb
cmp
mov
ror
fdivp
or
in
push
jmp
push
shrb
push
out
sbb
mov
stos
ljmp
sahf
clc
cmp
mov
mov
add
inc
jbe
leave
push
stos
arpl
je
cmpsb
idivl
mov
inc
mov
test
sti
xchg
cmpl
shl
dec
adc
scas
sbb
outsl
fadds
ret
add
shrb
pop
push
out
xchg
fimuls
enter
scas
pop
jp
fnstenv
lock
ret
mov
mov
inc
pop
lock
in
cs
adc
mov
lea
mov
jmp
inc
mov
dec
aam
jle
mov
out
cmp
dec
notb
push
mov
popa
adc
jno
inc
cmp
pop
lods
inc
inc
in
xor
xchg
lahf
inc
in
div
sbbb
ficomps
loopne
inc
aam
cmc
sub
jno
pop
mov
inc
cmpb
jbe
mov
aaa
jnp
push
jp
pop
mov
xor
das
pusha
jo
push
ret
xlat
bound
repz
into
imul
pop
iret
push
sub
adc
xchg
in
inc
push
xchg
leave
pusha
adc
scas
jmp
mov
add
fwait
clc
in
inc
lret
mov
test
mov
negl
pushf
push
push
iret
inc
pop
sub
dec
popa
push
inc
fucomip
cmp
lock
xor
adc
aaa
push
outsl
imul
dec
dec
mov
popa
ret
ror
shl
jl
mov
cmpsl
jns
or
ljmp
xchg
jmp
or
out
popa
mov
mov
pop
ret
outsl
adc
mov
mov
arpl
je
insb
push
sbb
push
add
sbb
out
mov
sbb
sub
lods
and
int3
loop
fs
sbb
sub
lods
sarb
pop
mulb
pop
jl
pop
icebp
cli
mov
fcoml
stc
ja
mov
and
les
mov
mov
pop
xchg
mov
in
repnz
cmp
loop
cli
xchg
mov
dec
jg
les
ss
cmp
cli
push
jmp
inc
and
maskmovq
divl
sbb
out
outsb
clc
sbb
add
lods
xor
mov
int
daa
outsl
enter
mov
jb
pop
scas
cltd
push
or
adc
xchg
imul
call
arpl
add
adcl
xor
lahf
mov
mov
rcl
inc
xlat
cmp
leave
and
cmpsl
popf
scas
fimull
jnp
jge
out
and
dec
imul
stos
in
iret
and
fcoms
and
mov
mov
adc
jbe
pop
mov
sbb
std
xchg
mov
movlps
jnp
std
outsl
mov
cwtl
adc
dec
jecxz
push
outsl
xor
stos
inc
inc
cwtl
jp
xchg
in
xor
dec
sbb
and
inc
sbb
push
sbb
ds
call
push
stos
xor
push
dec
mov
in
je
dec
imul
notb
popa
xor
cmpsb
mov
add
pushf
out
and
cli
dec
dec
aaa
ret
jno
sbb
or
inc
repnz
mov
xchg
mov
fdivrs
jae
repnz
push
stc
lret
mov
mov
jecxz
sbb
or
fidivs
xchg
dec
inc
rcrb
bnd
pop
in
pop
scas
sub
ss
push
mov
dec
push
daa
xchg
js
mov
or
int
add
mov
ror
or
data16
lret
push
int3
mov
std
jp
sbbl
fdivr
popa
push
in
add
xchg
sbb
jecxz
push
jmp
sub
jo
fdiv
mov
mov
cwtl
xor
test
jnp
and
sub
lcall
jmp
xchg
or
mov
jne
jne
dec
inc
ret
pop
ss
enter
mov
pop
mov
int3
dec
push
stos
xor
gs
dec
idivb
ret
lcall
popa
ljmp
test
adc
aas
incb
fnsave
shll
or
or
lcall
clc
adc
aas
jnp
adcl
sbb
sbb
xchg
xor
out
out
mov
shrb
or
or
xchg
sahf
clc
popf
inc
and
cwtl
sbb
jg
mov
adc
mov
sbb
jo
jl
ret
adc
xlat
icebp
mov
add
incb
insl
sbb
mov
cmp
imul
push
aas
mov
stc
in
xor
aaa
dec
lcall
in
stos
push
popa
fucomp
call
and
push
daa
in
sti
lcall
jmp
mov
cmp
popf
sub
cmp
jle
pop
sub
inc
mov
or
dec
pop
dec
and
subb
mov
dec
push
jns
inc
scas
push
test
sbb
and
pop
push
and
inc
jnp
sti
and
jle
xchg
sbb
lcall
sbb
xor
inc
cmpsb
mov
leave
or
push
insl
int3
jg
lock
fadds
sbb
cmp
stc
and
insb
lock
xchg
mov
add
push
ja
sub
dec
rcrl
push
out
hlt
pop
inc
cmp
adc
dec
call
loop
aas
aam
sub
jp
stos
mov
pop
or
jae
or
mov
insb
call
mov
repnz
xchg
pop
cmpsl
mov
clc
shrl
mov
jge
stos
test
iret
inc
aad
adc
pop
cmp
mov
cwtl
pop
xor
clc
enter
add
inc
aam
push
jno
adc
je
icebp
jg
repnz
rclb
icebp
inc
loop
les
out
outsl
cmp
testb
lods
stos
test
mov
pop
mov
psubsb
adc
popa
cli
xchg
or
arpl
repz
adc
sti
mov
pop
jmp
es
sub
scas
xchg
out
sub
mov
mov
in
popa
xchg
ss
mov
dec
mov
es
lods
cwtl
incb
fld
dec
dec
sar
mov
jmp
adc
and
repz
gs
lret
pop
cmp
rorb
and
stos
int3
arpl
pushf
sub
mov
jb
pop
lods
subb
add
xchg
fistps
push
jb
std
imul
mov
or
jg
fistpll
fs
fistps
fwait
cmpsl
orb
scas
mov
aad
jno
mov
fadd
out
push
aad
or
mov
push
pop
mov
and
xor
sbb
push
mov
insl
cmp
sbb
or
jecxz
bound
shr
in
pushf
in
cmpsl
pop
cmp
jo
rclb
cmp
cltd
mov
lcall
cmp
shlb
dec
sti
mov
mov
jb
lcall
repz
xor
lods
subl
repz
add
repz
sahf
sub
vmread
movsb
push
shll
outsl
dec
and
pop
jecxz
xorb
mov
adc
add
sub
dec
push
mov
sub
add
sahf
in
cmp
subb
dec
sbb
push
sub
pop
add
push
mov
pop
out
xchg
test
push
fstp
xchg
pop
pop
xor
mov
jae
dec
inc
xchg
adc
fwait
sbb
fs
jbe
inc
and
sub
jmp
add
xor
call
add
divl
sub
mov
je
stos
daa
mov
lea
ret
push
fbstp
ljmp
xchg
and
ficomps
push
shl
scas
or
shl
lods
xrelease
sub
addr16
mov
dec
push
lahf
scas
inc
shlb
dec
int3
pop
repz
incb
adc
repnz
lret
fnsave
out
outsl
jle
aaa
adc
ljmp
mov
push
mov
pop
add
pop
pop
cmp
mov
mov
sub
fs
clc
push
jnp
pushl
adc
xchg
cs
inc
jecxz
dec
sbb
pushf
xlat
adc
mov
cld
das
jge
mov
push
mov
xchg
mov
or
xchg
pop
and
insl
test
paddb
lcall
in
mov
imul
hlt
mov
xor
jno
loop
inc
xchg
mov
inc
test
pushf
testl
repz
fadds
and
ljmp
ja
push
stos
xchg
shlb
dec
js
enter
dec
cmp
dec
dec
fcmovu
fistl
lods
mov
shll
or
push
test
push
gs
std
pop
pop
rcll
fidivs
mov
test
jbe
mov
sbb
test
popa
mov
movsl
sbb
push
pop
jp
pop
mov
fnsave
fdivr
outsb
test
mov
inc
mov
lds
movsl
or
in
je
or
sbb
mov
in
push
mov
sub
adc
out
pop
scas
call
pusha
aad
sub
push
dec
outsl
getsec
mov
addr16
pushf
cmpsb
lret
pushf
aam
sub
out
nop
mov
rolb
mov
xor
pop
cmpsl
out
fs
fisubrl
and
sbb
aas
dec
xor
addr16
into
mov
mov
sub
cmpb
aad
imulb
push
outsl
pop
mov
pop
mov
mov
pusha
or
hlt
clc
es
xlat
mov
or
sub
cs
out
mov
dec
push
push
inc
jmp
imul
push
inc
push
cmp
and
out
enter
and
orb
test
out
bound
pop
fistps
test
jns
mov
add
imul
jae
or
pushf
arpl
pop
dec
mov
outsb
and
mov
dec
icebp
inc
int3
cmp
add
out
push
push
dec
xchg
or
adc
xorb
pop
enter
cmp
add
outsl
inc
into
imul
stc
out
xchg
dec
mov
test
inc
jns
ds
jae
lods
pop
sbb
fs
push
xor
xor
dec
mov
sahf
add
popa
push
mov
inc
push
iret
fsubl
fsts
pop
mov
jb
aam
push
sbb
jnp
stos
fstps
test
push
xchg
popf
mov
dec
mov
add
xor
andl
nop
js
jl
sarl
fs
leave
lds
mov
ret
and
lret
inc
pop
jmp
mov
iret
pop
and
mov
sub
insb
xlat
inc
ret
scas
dec
push
adcl
ss
into
lret
push
mov
mov
pop
lds
sti
jns
call
pusha
out
mov
jbe
sub
insl
adc
sahf
sbb
fstpl
lea
cmp
adc
push
xorl
dec
mov
adc
sbb
and
cli
xchg
in
pop
mov
ret
movsl
mov
or
sarb
fcoml
add
jns
pop
stos
nop
mov
sub
leave
sbb
enter
std
mov
out
int3
adc
sbb
jle
subl
push
test
mov
notb
cltd
cmp
in
cmp
mov
mov
out
jbe
mov
icebp
stos
les
add
mov
pop
fdivs
dec
xor
scas
mov
push
cwtl
lods
pop
adc
subb
adc
test
or
xchg
mov
out
repnz
xchg
push
fnsave
xor
out
imul
out
pop
incl
test
push
mov
lret
call
pop
and
inc
pop
push
imul
jnp
in
test
movb
lock
fdivs
jecxz
or
inc
int3
arpl
ret
stos
xchg
jmp
cli
lods
jp
sahf
mov
adc
jmp
lds
jp
into
movsl
es
or
fisttpll
fidivs
mov
mov
insl
cld
and
xchg
nop
enter
jns
push
mov
dec
loope
decb
addr16
sub
mov
add
in
push
call
push
add
ret
sbb
add
aam
test
jbe
dec
repnz
cli
fildll
xor
sub
push
jnp
add
cmpsb
cmp
movsb
push
mov
adc
jae
vmread
pushf
or
mov
icebp
enter
adc
stc
inc
jg
and
aas
adc
vpermd
push
lods
push
faddl
mov
test
cmpsb
lods
outsb
jle
dec
lea
data16
or
push
mov
mov
rcr
sub
into
jmp
sbb
fucom
adc
das
aas
jp
sbb
jb
daa
nop
fldl
cld
mov
mov
jo
lcall
and
cld
bound
sbb
mov
dec
ds
xchg
push
ja
xchg
or
dec
push
adc
xchg
sub
xor
push
push
outsl
jne
jmp
clc
adc
xlat
sbb
inc
cmpsb
testb
or
cmp
jge
test
xchg
ja
scas
push
xor
ret
cmp
orl
inc
xchg
leave
pusha
or
xorl
push
add
adc
into
call
xchg
decl
and
inc
out
subb
mov
clc
inc
nop
repnz
cmp
cmpl
cmpsb
lock
or
push
in
rclb
mov
icebp
xchg
cmp
cmp
cmp
cmp
insl
sbb
add
daa
adcb
popa
pop
mov
jecxz
cmp
cmp
push
sbb
in
push
push
jo
jo
mov
and
pop
fstpt
ret
pop
mov
out
dec
dec
outsl
or
sub
add
add
shlb
stos
inc
repz
aam
mov
mov
fstl
mov
test
gs
call
or
dec
sub
or
daa
and
scas
xor
or
mov
and
loope
in
popf
sbb
ret
std
scas
xor
ret
popa
inc
mov
jbe
dec
add
or
movsb
dec
cmovno
and
insl
or
insl
les
dec
dec
pop
lret
test
call
inc
dec
pop
ss
in
pushw
mov
clc
and
mov
pop
sub
pop
cmc
add
xchg
push
in
das
lods
dec
jecxz
dec
movsb
mov
imul
pop
xchg
lcall
testb
jno
sbb
sarb
stc
or
xor
dec
dec
lods
inc
cld
lret
fs
and
fwait
in
mov
push
mov
ljmp
ljmp
insb
scas
mov
jne
xchg
pop
push
cmp
push
mov
pop
push
mov
mov
std
jge
add
add
push
das
clc
xor
mov
sbb
mov
aad
fnstsw
fmull
sarb
xorl
fadds
daa
les
pop
jge
sub
dec
push
sar
and
cmp
lock
jno
in
jae
push
movsl
shrb
xchg
or
rorl
add
pop
xchg
in
add
push
inc
mov
adc
sub
or
idivl
mov
xchg
push
xor
mov
ljmp
inc
push
les
cmpsl
dec
shr
mov
loope,pt
push
bound
and
sub
fisttpl
std
xchg
nop
shlb
fnstenv
inc
push
inc
int
dec
jmp
xor
pop
mov
jnp
mov
mov
testb
cmp
icebp
mov
shll
hlt
fs
stos
aaa
mov
push
out
xor
pop
mov
or
outsb
mov
push
in
xchg
ja
jns
xor
xchg
mov
bound
loop
dec
jl
jae
movsb
sti
sub
push
jmp
cmp
push
jmp
cmp
lcall
enter
and
mov
pop
and
dec
dec
and
pop
and
xor
mov
cwtl
xchg
push
movsb
cmpsl
dec
adc
mov
cmp
sti
mov
inc
lahf
jmp
cmp
push
loopne
imul
lret
in
cmpsb
lock
xor
mov
adc
mov
repnz
xchg
and
testb
mov
daa
lea
xchg
lds
inc
ljmp
imul
fs
adc
and
mov
decl
cmp
jo
t1mskc
lcallw
xor
test
cs
xchg
lcall
rcll
lea
and
inc
xchg
xchg
mov
jae
fsubrs
aaa
shl
scas
cmp
push
pop
hlt
stos
ja
mov
movb
outsl
jo
movsl
out
add
mov
es
es
das
lahf
adc
cwtl
dec
mul
sub
out
out
xchg
inc
test
jae
pop
in
sti
js
andl
scas
int
mov
add
cltd
lock
and
adc
or
xchg
in
push
push
mov
push
ja
push
shr
loopne
scas
push
cmp
dec
je
out
insl
sbb
mov
enter
shl
fldl
dec
xor
cmp
subb
into
test
or
xchg
xchg
nop
pushf
repz
insb
push
hlt
mov
adc
shrl
aad
sub
iret
push
ret
hlt
add
add
push
mov
pusha
icebp
aaa
sbb
out
pop
pushf
cli
pop
mov
in
cmpsb
cmc
mov
les
pop
xor
dec
test
jno
in
cmp
dec
mov
roll
jnp
sub
dec
cwtl
pop
repnz
dec
mov
jmp
xor
push
stc
popa
mov
ljmp
js
shrb
pop
lods
addb
jle,pn
cmp
aaa
dec
sub
push
mov
adc
mov
out
adc
fs
sub
add
addr16
mov
adc
xlat
and
nop
push
repz
add
scas
xor
stos
ret
dec
popf
jnp
fdivl
out
test
js
fstps
push
sub
jae
adc
mov
jne
jae
subb
cmp
jge
mov
mov
stos
sbb
fildll
lods
adc
and
xlat
scas
fmuls
scas
xor
pop
sbb
or
adc
jno
or
mov
arpl
sbb
mov
sub
xor
add
lds
sub
pop
outsb
cwtl
mov
ret
test
jecxz
mov
mov
push
jbe
ss
add
lea
cmp
add
test
mov
push
jp
mov
jbe
mov
incb
xchg
sbb
popf
push
mov
push
rorl
xchg
xchg
and
jp
ja
lods
int3
adc
sarl
mov
or
rcr
push
pop
push
movsb
sub
out
sbb
jg
sub
mov
mov
lret
test
adc
arpl
and
mov
pop
sub
xchg
mov
adc
lahf
icebp
nop
add
xor
xchg
cmp
cmpsb
imul
cltd
hlt
aas
jl
sub
enter
dec
inc
cli
aad
fadds
hlt
loop
adc
aaa
roll
pop
loop
jnp
jno
jb
fistps
cmp
in
daa
pop
sahf
pop
or
dec
pop
imul
mov
push
add
mov
jae
es
mov
mov
sbbl
pop
sub
inc
mov
inc
aas
cmp
xchg
lods
inc
fistpll
jnp
mov
inc
jp
sub
sbb
aas
jp
es
rcrb
popa
add
jmp
cmpsl
pop
cmp
push
aas
dec
adc
inc
leave
inc
arpl
push
inc
push
in
nop
adc
xor
add
push
pop
xchg
leave
cmp
cwtl
and
es
lret
push
cltd
leave
adc
sbb
push
cmp
add
mov
cltd
imul
stos
jmp
outsl
fmull
xor
addb
addr16
jge
arpl
jle
sub
test
pop
shlb
lds
dec
movsb
out
dec
sahf
add
push
repz
sub
sahf
push
lea
mov
xchg
adc
mov
fidivrs
push
popf
mulb
push
jne
xchg
push
aas
fwait
ss
cmpsb
xor
jmp
add
push
icebp
scas
lret
xorb
sub
jb
mov
and
mov
adc
nop
push
mov
pop
mov
test
mov
in
or
cmp
stos
leave
mov
fstl
shrl
pop
shll
push
pop
lds
mov
and
adc
fwait
jne
loop
dec
inc
adc
mov
xchg
inc
data16
sarl
jp
and
je
fildl
dec
out
dec
sbb
cmc
pushf
jp
xor
push
int
iret
xor
adc
pop
mov
add
inc
pop
lea
cmp
pop
rcll
fiadds
xor
jg
jb
xchg
loopne
add
rorl
pop
test
sub
sbb
and
repnz
add
aas
pop
je
out
mov
in
or
mov
push
lock
mov
daa
ja
add
out
insl
sahf
daa
scas
lcall
stc
and
and
mov
stos
rclb
std
adc
repz
insb
mov
inc
mov
stos
das
faddl
dec
sbbl
mov
inc
test
push
dec
int3
fsubp
dec
add
add
and
push
xlat
rorl
aas
loopne
push
rcl
inc
bound
les
movsb
xor
cltd
mov
inc
push
or
out
push
jl
pop
push
pop
xor
mov
xor
rcrl
popa
dec
clc
loope
jne
sahf
or
xchg
decl
jp
xchg
outsl
test
out
sahf
jb
insl
in
pusha
icebp
or
hlt
push
scas
mov
inc
scas
push
add
lods
xchg
xor
mov
ret
loop
fadds
pop
in
sub
cwtl
fsubrl
sub
in
xor
jle
sub
lret
decb
mov
les
dec
fdivrp
cmp
xchg
mov
jmp
xchg
or
lock
cld
pop
not
cld
adc
hlt
push
xchg
pop
sbb
cld
subb
dec
stos
xchg
inc
pop
mov
insb
xchg
popa
add
mov
vrsqrtps
mov
push
fldenv
or
and
jge
je
cmc
lds
aad
mov
dec
inc
inc
rol
pop
test
rorl
fstl
mov
insb
pop
cmc
push
adc
mov
aad
jmp
data16
mov
vphaddbw
and
out
test
cltd
mov
jg
inc
cmp
in
push
sahf
mov
bnd
inc
ljmp
adcl
sahf
movsb
in
test
mov
fnsave
sahf
or
test
std
leave
movsl
lds
in
dec
jl
aaa
pop
les
sub
mov
or
inc
repnz
and
mov
xor
push
lock
jns
dec
and
fsubrp
dec
jb
mov
jne
add
orb
daa
inc
ficompl
cpuid
sbb
sub
push
arpl
aas
outsb
sub
into
lods
pop
lock
jbe
xchg
cmp
push
or
dec
mov
jp
add
iret
mov
dec
mov
nop
mov
lret
insl
inc
mov
adc
int3
mov
xchg
sbb
and
and
ret
dec
jns
sub
dec
sahf
test
xor
mov
mov
arpl
add
cmpsl
jns
mov
or
xlat
pop
stc
push
sbb
adc
scas
popa
test
add
mov
mov
fs
pop
jno
adc
dec
jns
pop
es
dec
xchg
cli
sub
mov
into
push
popf
scas
je
imul
mov
int
ljmp
in
loope
pop
or
adc
leave
xor
sti
in
bound
stos
ljmp
bound
inc
sub
clc
scas
call
lods
mov
mov
test
dec
inc
pop
jbe
jge
xchg
test
sbb
repz
outsb
imul
xchg
iret
stos
in
popa
mov
mov
dec
mov
shrb
mov
or
mov
fwait
mulb
inc
imul
js
xor
push
repz
or
cwtl
dec
sar
xchg
or
dec
pop
scas
and
push
or
dec
mov
stos
in
repz
pop
mov
addr16
mov
into
ret
aaa
xorl
sub
xor
scas
sbb
shlb
decl
cmp
pop
xchg
std
call
and
mov
push
shll
jne
out
sub
enter
and
shrb
scas
orl
out
fs
sbb
mov
fimuls
mov
adc
mov
inc
pop
and
pop
lahf
xchg
jno
lahf
mov
dec
or
mov
xorl
daa
mov
push
imul
or
xchg
push
mov
cwtl
aaa
mov
cmp
pminsw
mov
dec
and
aad
in
inc
dec
add
dec
popa
fisubrs
lgs
clc
out
adc
pop
ret
enter
pop
sub
inc
sbb
mov
jmp
mov
inc
mov
repz
or
cltd
dec
test
sbbb
test
fs
cmp
pop
in
jp
adc
sub
test
clc
mov
or
punpckhdq
dec
lahf
hlt
outsl
daa
cmp
sbb
dec
ljmp
mov
rcl
and
ret
icebp
or
xor
loop
push
scas
push
shlb
mov
or
add
sbb
push
jecxz
pcmpgtd
sarb
xor
xor
xor
mov
adc
push
inc
jne
sbbl
add
inc
sub
repz
out
inc
test
jl
stos
jmp
push
push
into
enter
push
out
lret
jnp
ret
and
es
in
xchg
rcrl
mov
out
sub
mov
mov
ret
or
sub
sbb
and
lcall
in
push
clc
test
jge
add
cmp
inc
and
inc
fs
loope
leave
cmp
call
pushf
xchg
cmp
in
mov
imulb
mov
jge
add
mov
subb
mov
and
xor
das
test
push
push
ror
cmp
popf
in
jmp
jmp
scas
iret
pop
sbbb
cmc
jecxz
cmpsl
daa
dec
dec
pushf
dec
jecxz
add
andl
mov
cmp
pushf
es
btc
and
fucomi
lods
xlat
nop
stos
jge
cmc
int
cmp
or
pop
fwait
shl
pop
imulb
pop
movsb
test
jbe
sub
inc
ja
push
cmpsb
push
mov
je
dec
sub
outsb
add
dec
xor
dec
icebp
inc
jmp
jo
js
sbb
cmp
mov
and
orl
subb
cmp
cwtl
das
push
cwtl
test
lret
adc
adc
hlt
jecxz
mov
push
adc
ret
mov
subl
test
subb
fisubrl
stos
jmp
sbb
jnp
mov
and
mov
or
push
call
mov
mov
mov
push
dec
cmp
jp
cld
arpl
adc
dec
sub
mov
lock
pushf
xor
xchg
add
sahf
or
inc
cmp
in
or
xor
data16
fcoml
leave
and
mov
cmc
mov
ja
imul
cmp
or
xchg
mov
jbe
cmp
cmpsl
repnz
push
jo
enter
dec
jp
icebp
fmulp
and
sub
ret
fstpl
jmp
movsb
xchg
and
shl
pop
imul
sahf
push
notb
inc
imul
fucom
lock
insl
ja
inc
xor
movsb
cmp
cmpsb
adc
sbb
jne
fdivrs
push
fs
cwtl
fdivl
sbbb
add
and
sbb
mov
test
subb
pusha
scas
loope
js
jecxz
mov
mov
adc
inc
push
add
cmp
es
xchg
push
dec
inc
jge
addr16
in
aas
jo
jecxz
xor
pushf
scas
sbb
jb
add
in
push
mov
or
arpl
adc
jl
adc
fs
adc
xchg
xchg
sbb
lret
push
shll
enter
xor
mov
pop
mov
sbb
xor
and
lea
or
inc
stc
cmp
iret
ret
jae
push
inc
out
adc
aaa
hlt
adc
mov
cmp
xchg
mov
jo
and
lds
lret
jno
enter
nopl
mov
push
repnz
sbb
dec
sbb
xor
mov
push
cmpsl
cmpsb
dec
sbb
rcrb
mov
nop
daa
sbb
cwtl
jg
dec
add
cltd
in
cmpsl
add
dec
pop
sub
fsubs
xor
pop
add
jg
pushf
mov
mov
jns
std
shlb
lret
test
and
xchg
mov
inc
cmp
inc
sahf
cmp
lret
bound
xchg
mov
push
and
mov
lods
mov
movsb
psubsb
push
jb
xchg
cmp
imul
pop
jp
jecxz
dec
pop
xor
pop
fisttpl
decl
inc
add
sti
cmp
aam
jp
es
cmpsb
es
pop
inc
inc
adc
cli
pushf
jnp
sbb
adc
mov
dec
push
movsl
leave
int
enter
lds
push
and
cmp
imul
pop
out
mov
add
fsubr
dec
loop
xchg
mov
xchg
imul
push
sub
mov
inc
inc
ret
addr16
sub
and
add
xor
stc
lock
and
mov
pop
sub
pop
cmpsb
push
insl
movsl
xchg
fdivrp
dec
loopne
ds
xor
mov
testl
loope
inc
aas
addr16
add
push
fsubrs
loop
mov
ss
insb
addr16
cmp
or
xchg
mov
push
stos
shr
push
popa
lcall
lcall
dec
adc
inc
jp
and
addr16
adc
sub
bound
add
xlat
addl
pop
cmp
daa
dec
adc
jle
cmp
fadds
pop
sub
das
xchg
out
xchg
ds
adc
mov
ja
or
daa
cmp
into
into
jno
loopne
in
inc
pop
add
cmpsb
les
lret
rcrb
and
out
inc
dec
sahf
in
negb
or
gs
cmp
xor
xchg
test
jmp
xor
dec
fs
in
outsb
inc
fwait
bound
jg
mov
pop
jmp
test
mov
push
adc
jnp
jp
gs
mov
iret
loope
loopne
lock
ret
sub
fidivl
je
aas
push
dec
lods
or
xorl
jmp
test
mov
xor
mov
ret
and
jns
pusha
ss
push
jnp
lret
push
repz
xchg
push
call
shll
pop
or
scas
call
lds
loopne
aad
das
addr16
and
jle
imul
test
cmp
push
or
test
nop/reserved
lret
and
in
test
inc
jnp
in
ja
pop
mov
enter
push
and
decb
push
stos
push
ja
enter
outsl
sub
xchg
or
sarb
scas
or
bound
arpl
cmp
aas
in
mov
incb
mov
imul
adc
pop
adc
cmpsb
pop
cli
add
mov
xchg
movsb
mov
push
fisubs
pop
jb
jecxz
push
adc
sub
sub
inc
lcall
jmp
mov
jo
mov
shlb
fnstenv
pusha
cwtl
ret
loope
je
xchg
subb
lret
cmp
fisubrs
scas
nop
daa
cmpb
lret
dec
fidivl
add
mov
fwait
sbb
mov
ret
mov
pop
aas
shl
popf
sub
es
xchg
sub
adc
scas
js
pop
jg
aam
test
fnstenv
loop
loopne
push
icebp
pop
dec
xchg
mov
push
jb
jecxz
sbb
jg
arpl
add
push
clc
andb
aad
cmp
cs
ret
fs
cmp
jae
rcrb
push
mov
lret
adc
push
out
inc
iret
outsl
in
lods
cwtl
nop
in
add
mov
and
int
cmpsb
jns
xchg
repz
sbbl
insl
js
lahf
call
faddl
xor
out
lahf
push
jg
ja
push
cmpsb
jbe
pop
sub
pop
orl
outsl
sbb
test
cmp
dec
adc
mov
xlat
and
pop
cmp
mov
test
mov
lea
push
std
inc
aaa
dec
stos
inc
repnz
mov
mov
jbe
sbb
loopne
loop
mov
and
sbb
addb
sbb
add
dec
or
rcrb
xchg
imul
or
cmp
out
cmc
lea
lret
pop
bound
ret
mov
push
xchg
push
pop
loopne
add
sub
inc
sbb
es
shrb
or
mov
sahf
lods
or
fidivs
mov
ljmp
push
mov
or
xchg
inc
mov
dec
jb
scas
xor
and
mov
aas
aad
adc
mov
and
sub
jb
mull
mov
mov
xchg
push
int3
adc
into
fadd
mov
lods
fidivrs
out
mov
test
mov
xor
shlb
sbb
outsb
adc
stc
shlb
mov
into
dec
outsb
fidivrs
fisubl
push
call
clc
jg
mov
add
mov
outsl
lret
lock
sti
mov
loop
cwtl
jecxz
inc
xchg
jnp
out
inc
cwtl
inc
repnz
dec
sahf
push
lahf
repnz
jo
push
xor
ret
cmp
test
pop
jo
pop
out
mov
add
test
cltd
imul
dec
xor
call
add
push
fldcw
adc
cmp
arpl
and
inc
push
sbb
addr16
test
pop
push
push
popf
sub
lret
jne
insl
jge
inc
and
pop
fbld
mov
add
push
daa
push
mov
sbb
ja
mov
sbb
sbbl
jns
aad
call
or
mov
adc
push
fisttpll
aas
in
nop
lods
mov
test
loop
pop
push
dec
xor
pop
dec
loope
jmp
clc
out
std
push
push
outsl
xchg
adcl
adc
mov
loope
jo
js
test
ja
sarb
add
jae
and
adc
repnz
xchg
sub
pop
add
push
clc
sahf
adc
mov
ss
fdivs
and
push
icebp
scas
out
xchg
insl
aam
mov
hlt
xchg
loop
sbb
mov
aaa
les
or
popa
and
dec
push
ss
int3
or
decl
or
xchg
dec
int3
lods
xor
jne
jmp
fldcw
idivl
out
sub
pop
mov
int
enter
xor
push
lret
aad
push
imul
or
adc
jns
push
or
sbb
push
jmp
mov
icebp
movsl
inc
mov
bound
jmp
lods
xchg
les
mov
test
fnstsw
push
adc
mov
cmpsb
ljmp
mov
pop
gs
xchg
stc
loope
jo
mov
arpl
and
inc
mov
cmc
pop
arpl
mov
bound
aaa
fldenv
in
sti
and
cld
or
sub
out
push
sbb
push
pop
aaa
cs
mull
leave
add
push
test
dec
lods
into
mov
jge
adc
xchg
or
adc
mov
mov
je
call
nop
jnp
roll
xchg
jl
add
movsb
mov
fmull
xchg
stos
in
lcall
cmc
inc
mov
jge,pn
js
pusha
pop
mov
movsb
push
sbb
mov
mov
sub
xchg
adc
scas
adc
mov
movsl
pushf
pop
inc
mov
mov
sbbb
pusha
enter
xchg
sub
hlt
mov
iret
out
push
and
and
mov
or
pop
ret
shll
rclb
adc
dec
and
push
dec
aam
outsl
mov
cmp
fsubrs
scas
dec
pop
push
mov
xor
icebp
in
and
pop
in
sub
roll
or
pop
popf
dec
cmp
testl
add
push
lods
jp
dec
data16
mov
inc
leave
into
call
cmp
jb
sbb
lea
lcallw
popa
nop
push
push
fildl
pop
xor
shrl
inc
fs
out
in
test
shl
repnz
popf
sbbb
lods
mov
fcmove
jmp
sti
fwait
inc
and
aad
testl
push
cmp
fidivrs
push
adc
rorb
sbb
jne
xor
inc
sub
xchg
sbb
ret
xchg
repz
fstps
aam
mov
ja
les
jnp
mov
mov
scas
ror
xor
pop
push
inc
bound
fs
mov
out
or
xor
test
push
out
and
lea
int
push
aas
mov
dec
cmp
mov
icebp
aam
xor
add
mov
xchg
fisubrs
mov
jmp
popf
inc
xchg
dec
xlat
das
addr16
fdivs
fiaddl
je
mov
xchg
fnstsw
sbb
jns
cmc
jmp
sti
jp
or
dec
xchg
sbb
jno
mov
jecxz
ja
sarb
hlt
shll
add
scas
cwtl
stos
cmpsb
in
cmpsl
mov
jle
dec
sbb
add
shlb
pop
imul
inc
push
fcomi
jge
xchg
jae
dec
mov
add
out
mov
xchg
push
push
lds
out
jo
add
adc
or
iret
cmp
push
sub
adc
sbb
lods
ja
and
cmp
mov
mov
inc
jb
pusha
lock
pusha
jp
pushf
mov
je
sbb
sahf
ss
insl
jo
fnstcw
notl
jbe
fnstsw
mov
subb
mov
mov
iret
fistl
lds
push
call
in
jo
and
je
lahf
enter
xor
popf
call
cmp
xchg
sub
int3
cmpsb
ret
cmp
pause
or
ret
pop
dec
inc
sub
push
mov
fcomps
repnz
mov
inc
push
cwtl
rorl
adc
jecxz
adc
push
scas
xor
sbb
dec
jp
mov
repnz
lahf
or
mov
xor
push
fiadds
arpl
fcompl
cmc
xor
popa
int
cmpsl
xchg
mov
dec
insb
adc
mov
out
inc
scas
clc
pop
and
jno
out
movsl
dec
inc
dec
outsb
mov
outsl
lret
insl
mov
addr16
sub
mov
and
addr16
and
push
insb
sub
jp
arpl
or
dec
arpl
jg
inc
outsl
add
inc
rcr
repnz
push
xchg
mov
jmp
cmp
jmp
lcall
inc
ljmp
fcoms
pushf
jb
jle
stos
xlat
cmpsb
xchg
into
inc
adc
push
mov
insl
test
fstpl
ret
mov
sahf
xchg
pushl
mov
xchg
pop
iretw
pop
push
repnz
in
dec
pop
push
jmp
outsb
jl
orl
fdivr
ss
cli
fnsave
int
jp
sti
nop
pop
sbb
lret
imul
ret
rcrb
repnz
aam
adc
xor
arpl
fwait
or
mov
mov
fisubrs
into
sbb
mov
sbb
inc
fistpl
cmp
add
stos
or
sahf
inc
cmc
mov
sub
insl
out
adc
mov
clc
daa
dec
in
pop
pop
stos
inc
hlt
imul
pop
mov
sarl
dec
sti
xchg
pop
cwtl
inc
loop
gs
sbb
inc
fidivrs
sub
data16
repnz
sbb
mov
dec
sbb
jl
aaa
push
nop
and
cltd
push
mov
adc
cli
xchg
sahf
mov
ret
rcr
sbb
fmuls
aam
stc
lahf
pop
not
inc
insl
dec
add
jge
pop
es
scas
data16
jmp
jmp
sbbl
dec
sub
ja
sbb
lahf
aas
divb
insl
jno
inc
push
imul
jg
push
xchg
dec
xor
sub
adc
andb
jmp
je
mov
cmp
push
test
push
xor
mov
dec
add
cmpsb
lock
imul
test
inc
je
push
ljmp
scas
cli
fs
mov
movsb
xchg
fucom
inc
mov
retw
js
dec
mov
pop
and
add
adc
xlat
jbe
sarb
icebp
pop
cmp
adc
inc
es
cmp
aam
lds
mov
and
inc
push
sbb
and
vmptrld
pop
call
sub
jmp
shrb
dec
loope
mov
jl
push
sbb
dec
ret
pop
shrl
ss
loop
stos
pop
mov
in
mov
aas
mov
test
xor
icebp
dec
jo
enter
adc
in
pop
push
jb
ss
push
adc
or
inc
xchg
data16
pop
repz
xchg
inc
and
mov
fwait
cmpsb
add
push
jbe
sub
mov
das
push
sbbb
jo
jle
xor
mov
test
out
cmp
popf
jge
push
lcall
dec
push
add
fstps
jmp
sbb
stc
popf
das
fstl
mov
jmp
insb
divl
shr
pop
daa
add
movsl
mov
push
jmp
ss
lods
js
lret
in
adc
mov
and
pop
cmp
pop
inc
push
sub
popaw
and
bound
push
daa
arpl
lea
dec
and
adc
aaa
xchg
daa
cli
insl
cmp
out
adc
lahf
jno
subl
cmpsb
add
push
xchg
push
jne
cmp
cwtl
in
arpl
je
push
insb
insl
push
data16
xor
pop
cwtl
lods
and
mov
out
inc
out
dec
cmp
jl
xor
cmp
or
mov
pop
jl
sbb
ss
xchg
sbb
add
mov
inc
fisubrs
shl
cmp
sub
mov
dec
leave
int
fsubs
cld
out
ds
inc
int
dec
inc
push
mov
pop
sub
dec
cmpsb
and
xor
and
popa
xor
stc
fcmovbe
mov
adcl
add
aam
and
push
cwtl
sub
std
and
ds
mov
in
pop
loopne
sub
test
pop
in
stos
adc
pop
xor
push
loope
es
and
mov
sti
inc
add
imul
je
fs
arpl
adc
mov
scas
and
aas
add
call
jno
xchg
mov
sbb
hlt
pop
insb
and
dec
sub
sahf
lret
fwait
cmpsb
std
pop
fidivrl
and
cld
scas
jle
bound
ret
add
xlat
mov
push
pop
cs
mov
imul
hlt
ja
dec
cmpl
dec
push
xor
push
mov
jl
fwait
outsl
fistpl
testb
adc
lods
inc
adc
sbb
lret
loopne
xchg
divps
jmp
leave
pop
push
js
shll
push
pop
and
mov
test
fists
fnstsw
xchg
std
xor
jp
rolb
lea
mov
inc
iret
mov
mov
xchg
out
add
jle
dec
js
inc
sbb
sbbb
cld
jnp
stc
inc
mov
sub
pop
push
sbb
or
sub
jnp
push
scas
shl
mov
mov
ljmp
mov
sub
dec
pop
mov
rcrl
adc
push
cld
jns
sub
mov
into
push
push
out
fwait
cmp
ret
in
sahf
pop
int
test
mov
cmp
xchg
xchg
sub
or
fisttps
mov
xchg
jle
cltd
aas
mov
mov
nop
xchg
cmc
lea
fisubs
sub
sbb
out
andb
inc
dec
das
rolb
arpl
ljmp
inc
mov
inc
mov
mov
mov
push
scas
inc
xchg
sbb
mov
ljmp
call
or
mov
loopne
inc
sbb
fdiv
cltd
test
scas
icebp
pop
jb
std
adc
mov
iretw
sub
icebp
pop
cmp
in
mov
imul
inc
js
xchg
mov
popf
push
gs
je
int3
xor
jne
subb
gs
lahf
mov
cmp
hlt
sarl
sub
in
jbe
jmp
jbe
jl
in
data16
int3
or
adc
in
and
aam
inc
push
leave
xor
mov
sbb
inc
jecxz
mov
cmpsl
ret
pushf
add
mov
push
loop
pop
popa
loope
and
add
xor
sahf
fbstp
push
pop
aaa
fists
cmp
inc
dec
sbb
and
loopne
mov
mov
mov
mov
std
aam
out
les
push
stos
in
ret
cmc
xchg
jnp
roll
push
mov
adc
lods
loop
clc
loope
ss
shlb
cli
or
and
lcall
jmp
mov
rcr
fdivl
pop
adc
inc
mov
xchg
popf
in
inc
and
loopne
out
mov
iret
xor
popa
jg
xchg
sti
rcl
rol
mov
cmp
addr16
data16
cmc
in
arpl
stos
es
sub
cld
add
jno
aam
fistps
jbe
call
mov
mov
dec
and
mov
test
mov
mov
mov
je
ds
mov
lods
aam
faddp
pop
imul
imul
sub
and
jg
gs
push
int3
pop
push
inc
bound
add
cmp
sub
pusha
push
inc
sbb
popa
push
mov
repnz
outsl
fisubs
or
lret
xchg
gs
mov
mov
mov
loope
jle
pusha
fistps
mov
sar
lcall
mov
gs
mov
js
outsl
sub
mov
sbb
add
outsb
daa
pop
out
inc
push
shrl
xchg
or
fsubr
xchg
and
xor
jl
mov
lcall
movsb
in
dec
jle
xor
shlb
pop
dec
movsb
icebp
in
mull
jecxz
jbe
push
bound
mov
xchg
jne
xchg
lods
gs
scas
xor
enter
mov
sub
mov
pop
lods
ss
pop
dec
jp
divb
jge
sbb
sbb
adc
xor
and
std
nop
push
pop
icebp
faddl
push
stc
add
lret
push
popf
adc
xchg
ficoml
movsb
mov
mov
inc
or
sub
sbb
stos
xor
xor
inc
push
mov
cmp
push
xchg
mov
pop
mov
cld
mov
mov
popf
aam
inc
notl
inc
fimull
dec
jnp
adcb
aam
je
fnstenv
fs
shr
notl
insl
inc
adc
or
hlt
nop
sub
mov
daa
and
mov
hlt
scas
daa
add
fmulp
or
adc
test
and
push
add
jns
add
popa
xor
inc
insl
fyl2x
xchg
and
mov
cmpsb
jns
sub
lods
clc
xchg
pop
cmp
xor
mov
add
mov
cltd
int3
inc
or
pushf
cmp
adc
add
sti
cmc
mov
pop
lods
inc
cmpl
xor
inc
push
xor
idiv
inc
scas
adc
add
fwait
push
fwait
sti
movsb
and
push
lds
sahf
jg
ret
loope
fsubl
ljmp
fptan
test
cmp
push
leave
mov
lea
mov
rol
fcompl
popa
xorl
dec
and
cld
stos
cmp
mov
movsb
cwtl
cli
pop
clc
fisubl
or
js,pn
mov
loop
pop
push
push
fstpl
xchg
inc
xchg
adc
sub
das
add
dec
push
imul
xor
pop
sub
cli
stc
sar
scas
sbb
hlt
int
inc
dec
add
lods
imul
sub
sub
push
xor
push
push
jb
aas
adc
test
popf
push
mov
je
cmp
pushl
add
fcmovnu
adc
rcrl
mov
push
pop
pop
add
or
jle
dec
imul
daa
adc
and
cltd
push
jb
shll
jecxz
je
mov
popf
in
sti
iret
and
popf
call
testl
sub
mov
fstp
js
push
xor
cmp
inc
push
jno
add
sbb
leave
dec
pop
mov
testb
stc
lea
push
jmp
xor
lret
cmc
mov
push
mov
sbb
jl
in
jns
push
lahf
xor
push
cmpsl
jp
mov
adc
lret
sbb
or
xchg
out
add
les
aad
lods
xchg
inc
shrb
cmp
insl
mov
adc
mov
jmp
mov
loopne
clc
insl
testl
ret
js
cmpsl
test
mov
push
xlat
pop
xchg
sub
and
aad
jae
cmp
pop
je
mov
nop
jmp
outsb
jnp
test
das
or
inc
xor
ret
jl
push
push
jbe
adc
push
lcall
xor
push
daa
cmp
push
outsl
dec
cmp
rcll
sahf
lods
jp
es
or
lock
adc
insb
mov
popa
ds
inc
jo
insl
or
cmc
in
shr
in
jecxz
lods
sbb
push
hlt
push
movups
sbb
xchg
movsb
ds
and
shll
pop
addb
inc
xchg
push
dec
inc
sahf
sub
fcmovbe
repnz
and
int
jmp
cmp
xor
int
adc
fcompl
sub
cmpsl
idivl
pop
lret
in
jg
pop
add
dec
lods
mov
mov
ljmp
ret
cmp
outsb
cmp
jb
cmp
fs
cli
push
iret
mov
lcall
dec
jmp
rorb
mov
notb
adc
ss
std
icebp
jle
cli
inc
push
sti
lods
add
inc
gs
adc
push
adc
cli
idivl
lods
mov
fadd
insl
jb
mov
mov
cmpsl
ret
push
adc
mov
jecxz
inc
push
addr16
fucomip
mov
pushf
aam
outsb
dec
cmp
jecxz
sbb
dec
xchg
repnz
or
push
push
adcl
lods
cld
and
jo
mov
aaa
and
test
scas
test
scas
ret
std
inc
push
cmc
jbe
or
and
fwait
cld
div
sub
iret
shl
jge
insl
js
push
jnp
lods
lods
daa
cwtl
test
rcrl
add
cmp
jno
imull
mov
or
lock
out
pop
mov
mov
fldl
iret
xor
mov
sti
movsl
out
adc
lds
xor
hlt
frstor
scas
cmp
loopne
jmp
cli
adc
pop
mov
bound
stc
xor
fnstcw
clc
outsl
aaa
lcall
into
lea
pop
push
inc
fcmovb
pop
sbb
jb
in
add
stos
sub
xchg
fldt
dec
push
ljmp
es
inc
cld
dec
mov
imul
ret
stos
in
mov
addr16
mov
scas
arpl
mov
jne
push
jg
mov
xor
data16
cmp
mov
pop
movsb
jns
aaa
pop
pushf
stos
mov
lret
lahf
push
lcall
lret
xchg
shlb
push
push
adc
xlat
mov
push
push
testb
pop
lret
js
mov
lods
insl
or
or
mov
rcll
or
loope
cmc
rclb
insl
out
mov
or
cmc
sub
movaps
fists
scas
mov
js
jne
or
sub
xor
sbb
mov
in
in
data16
cli
xchg
out
int
add
mov
addb
mov
jge
sahf
xor
cmp
dec
pop
aam
lock
push
call
repnz
outsl
add
and
mov
in
outsb
cmp
pop
stos
out
xor
mov
pop
inc
in
adc
sbb
pop
popf
xor
call
mov
scas
push
sub
adc
pop
dec
xchg
xchg
add
mov
idivl
addr16
aas
pusha
fldt
in
negl
adc
popf
mov
lret
out
mov
mov
sti
lret
sar
sub
inc
mov
daa
ja
aas
iret
in
jge
xchg
mov
lahf
pop
inc
bound
cmp
sub
mov
fs
addb
test
out
push
mov
mov
fsubr
lcall
aas
adc
test
jbe
loopne
pusha
dec
xchg
inc
cmp
cmp
aam
mov
sbb
nop
mov
test
cmc
push
adc
and
rorl
into
or
repz
jecxz
cmc
xchg
js
mov
jmp
and
mov
pop
sahf
add
sub
inc
and
sub
mov
mov
inc
stos
popf
ror
pop
in
andl
mov
push
sbb
pusha
andb
or
sbb
lret
xchg
bound
aaa
add
and
rorb
jp
repnz
test
inc
fimull
xor
or
inc
scas
push
cmpsb
pop
loopne
loop
mov
shrl
xchg
and
sbb
cmpb
and
and
mov
ret
ss
adc
iret
test
sub
push
out
aas
mov
fisttpll
rolb
cwtl
inc
and
push
ror
push
stos
jno
lea
xor
mov
dec
dec
fcomi
test
ret
sbb
popa
scas
jg
adc
cwtl
mov
lods
jp
sbb
xchg
add
mov
add
jmp
push
mov
mov
add
movsb
shlb
add
mov
add
mov
dec
jbe
es
or
push
mov
lods
mov
pop
pushf
aas
int
mov
mov
clc
or
outsl
adc
pop
dec
xor
cmp
out
test
add
sti
cmp
sub
fnstenv
fsubs
xor
in
pushl
bound
pop
insl
push
xor
fsub
test
out
xchg
ds
cmp
and
sti
push
push
insl
fldenv
daa
repnz
pop
popf
int3
push
sub
pop
jno
jl
inc
mov
mov
dec
adc
mov
lcall
adc
cmp
leave
stos
call
add
dec
test
push
push
xchg
fs
je
ret
shll
dec
xor
jg
add
add
xchg
inc
xlat
lds
pop
cmc
pop
data16
mov
sbb
aam
push
dec
sbb
cmp
xor
xchg
push
imul
push
outsb
push
mov
lea
fcoml
dec
mov
stos
gs
dec
loop
add
mov
test
lret
sbb
mov
les
xor
sbb
pop
cmp
jl
shlb
inc
movsb
hlt
fidivs
xor
push
sub
mov
jmp
std
mov
scas
es
pushf
sub
jmp
cmpsl
pop
and
push
clc
xor
fs
pop
sahf
sbb
es
cmpsl
pop
icebp
popa
xchg
movl
or
les
movsl
popf
inc
xchg
daa
jns
adc
inc
push
repz
pop
and
je
mov
and
mov
xchg
push
xchg
ljmp
ficomps
sub
pop
mov
xor
aaa
out
loope
inc
fldenv
pop
dec
into
sbbl
out
filds
adc
or
mov
push
fnsave
pop
cmp
push
add
xorb
mov
into
or
rclb
test
lret
clc
std
inc
icebp
lret
pop
lods
xchg
popa
push
sbb
jae
lds
repnz
outsl
aas
dec
cltd
jp
xchg
sahf
pop
dec
rcl
sbb
addr16
xchg
sub
loope
std
adc
jnp
mov
lahf
mov
push
mov
jp
pushf
addb
stos
xchg
test
jl
gs
pop
mov
mov
xor
pop
jg
scas
cwtl
call
push
jl
xchg
out
jae
inc
in
sbb
sub
or
lret
xchg
lcall
shr
cmp
pop
lods
and
mov
je
les
xor
lahf
xor
push
pop
incl
test
mov
das
cmpsl
sbb
mov
mov
and
push
test
push
in
mov
push
add
adc
leave
sarb
xchg
daa
dec
out
jmp
in
lods
xor
cmp
add
xor
or
cld
nop
es
cmp
inc
pop
mov
test
ret
out
sbb
sbb
and
subb
sbb
lret
pushw
push
pushf
shr
int
rclb
or
popf
lods
mov
insl
movsl
push
sub
add
hlt
inc
gs
xchg
jns
push
xor
adc
sbb
outsl
imul
cmc
mov
aad
in
sti
pop
insl
sub
bound
jbe
inc
inc
fnsave
mov
xor
leave
xchg
or
cmc
in
xor
popa
xor
mov
mov
cwtl
stos
inc
lret
mov
lret
rorb
ja
jne
negb
inc
push
aad
lock
push
sub
push
das
pop
mov
and
sub
xlat
rolb
adc
addr16
pop
repz
dec
loopne
pop
cmc
cmp
div
dec
scas
int
mov
add
fwait
in
add
jmp
mov
stc
adc
cld
dec
clc
or
ret
jns
out
scas
in
test
push
jno
add
aaa
test
cld
fnsave
pop
mov
insb
and
imul
xchg
shld
insl
xlat
push
add
jno
insl
adc
adc
and
xorl
cmp
pop
cwtl
enter
inc
popa
lods
js
ficomps
daa
adc
and
push
movsl
push
add
inc
repnz
data16
decl
xchg
cmc
dec
sub
mov
or
test
in
outsb
add
inc
bound
pop
xlat
addl
fdivrl
andb
inc
mov
or
jne
es
enter
dec
sbb
sub
test
in
mov
ja
push
add
mov
jb
inc
pop
or
repnz
cmp
jmp
js
mov
add
and
sbb
lea
push
jnp
inc
in
mov
call
push
out
inc
pop
sbb
icebp
or
ds
outsl
push
test
jb
enter
cmc
dec
and
sahf
shll
test
testl
xchg
jbe
out
add
xor
outsb
addb
mov
popa
stos
inc
xchg
mov
pusha
fs
dec
adc
scas
inc
dec
bound
fisubs
cmp
imul
push
call
sub
xor
sbbb
repz
xchg
call
adc
mov
pushf
jnp
shll
pop
ffreep
mov
xchg
jmp
add
cmc
shr
push
in
insb
push
daa
dec
adc
pop
sarl
stos
cmp
popa
cwtl
int3
decb
add
clc
and
push
push
sbb
fdivs
icebp
aas
pop
movsb
inc
sbb
pusha
dec
xchg
jmp
dec
push
imul
out
addb
gs
cwtl
and
adc
jg
arpl
jbe
orl
and
pop
lcall
adc
xchg
add
addb
test
mov
xchg
pop
imul
sub
cmp
popa
jno
enter
xlat
and
lods
inc
test
add
pop
mov
repnz
sub
jo
mov
xchg
pop
xchg
or
dec
mov
subl
add
push
ds
dec
push
pop
mov
scas
loope
sbb
stos
mov
cmpb
push
sub
pop
sub
hlt
xchg
notl
mov
push
mov
fxch
rorl
add
addr16
fdivl
test
aaa
or
test
mov
cmpsb
call
or
dec
dec
sbb
sub
jge
xor
lods
inc
lods
jb
fwait
sub
movsb
dec
aam
push
mov
adc
cmp
dec
fistl
les
fisubrl
in
jp
int3
les
fisttps
out
and
loope
push
je
ror
dec
test
out
push
loope
dec
mov
iret
fidivrs
push
rcrb
jnp
imul
pop
dec
addb
jp
sbb
sbb
fiadds
out
cld
mov
pop
cmc
push
add
inc
jl
icebp
mov
hlt
mov
mov
popf
daa
stos
rol
mov
and
mov
xlat
push
push
jmp
or
pop
mov
mov
mov
bound
cmp
outsb
jl
repz
popf
cmc
or
push
sbb
dec
fildll
loope
lds
dec
mov
out
fimull
nop
outsb
pop
add
movsl
cmpsl
pop
out
pop
cmc
jmp
pop
cmp
lret
mov
scas
jp
shrl
fwait
mov
or
fs
adc
sbb
push
cld
ljmp
and
jnp
stc
jmp
mov
pop
sbb
dec
pop
mov
adc
mov
out
jle
jp
push
mov
stos
mov
inc
add
notl
dec
test
xor
pop
mov
fstl
add
mov
fnstenv
xchg
mov
cmp
pop
js
fcompl
adc
je
test
testl
das
cmp
push
or
or
sub
xchg
cmp
dec
push
out
fwait
cs
jmp
mov
xor
das
dec
xchg
lods
ja
insb
add
sbb
mov
lret
sti
in
inc
in
orl
push
loop
nop
stos
icebp
int
pop
pop
ret
insl
in
push
faddl
pop
insb
mov
push
pop
outsb
mov
xchg
mov
popf
mov
cmpsl
ret
outsl
jns
dec
and
dec
rol
cmp
ljmp
mov
aad
addr16
push
pop
scas
into
pop
mov
dec
addr16
je
icebp
imul
cs
push
xlat
inc
mov
cmp
cwtl
xor
jne
mov
xchg
inc
inc
repnz
lret
hlt
mov
jge
mov
stos
inc
stos
in
mov
dec
enter
pop
imul
sub
leave
push
repz
and
int
xchg
xchg
enter
inc
adc
push
stos
call
in
std
pop
insb
insb
repz
hlt
outsl
jnp
mov
xor
inc
je
fsubr
stc
or
fs
inc
xlat
imul
sbb
gs
fsubr
ficoms
pop
mov
cmp
sbb
mov
add
cltd
mov
imul
mov
xchg
or
adc
aas
xchg
sub
imul
aaa
cmp
lcall
sub
and
pop
mov
and
lea
inc
pushf
pop
imul
roll
bswap
pop
std
outsb
add
dec
jno
cmp
pop
cltd
mov
fs
fwait
mov
rcrl
jmp
fldenv
xchg
mov
mov
jo
sub
out
xchg
test
pop
fsubs
add
jmp
jae
jo
clc
sub
test
or
subl
divl
andb
mov
arpl
pop
scas
popf
xor
fistl
dec
aam
lea
addr16
add
dec
popa
cld
and
leave
add
mov
cltd
fiaddl
sub
jge
push
xchg
xor
sahf
pop
icebp
push
cmpsb
and
insl
sub
cli
movsl
xlat
mov
adcl
xchg
mov
push
popf
or
aaa
outsl
or
push
lods
insl
rcl
outsb
lds
loopne
sahf
mov
outsl
adc
mov
jecxz
testb
sarb
iret
stc
lea
scas
inc
mov
pop
int
xchg
subl
addl
scas
mov
push
xchg
xchg
mov
lcall
mov
xbegin
push
in
or
mov
and
cmpsb
aad
and
js
mov
xchg
adcl
cltd
adc
mov
ret
push
in
std
clc
int
xor
lock
mov
and
or
lret
add
out
movsl
loop
std
xchg
aaa
clc
pop
dec
cs
mov
xlat
jbe
arpl
sarb
mov
movsl
cmc
push
cmpsl
ret
push
mov
adc
sub
pop
and
fs
push
jno
adc
inc
rdtsc
enter
rcrb
shr
mov
into
loope
pop
cld
das
mov
shll
pop
jecxz
or
stc
add
mov
sub
imul
adc
mov
pop
aaa
mov
loop
out
inc
pop
push
test
js
push
mov
push
xchg
or
pop
push
xchg
push
jno
cli
jo
loope
fcoml
mov
xchg
sbb
enter
mov
out
mov
ss
out
in
pop
repz
adc
or
lahf
je
add
sub
jmp
mov
jl
mov
mov
repnz
loopne
mov
xchg
test
mov
aad
test
ds
mov
mov
pop
pop
and
pop
loopne
imul
lret
fidivrs
cmp
push
lock
fistps
aad
dec
inc
and
lds
xchg
cmp
pop
fwait
ret
cmp
cld
aas
mov
lahf
adc
dec
dec
les
pop
out
cmp
ja
pop
mov
cltd
and
adc
xor
outsb
xorb
and
inc
jg
mov
push
cmpsb
sub
cmp
mov
insb
add
ror
out
and
xchg
cmc
mov
repz
xor
test
les
xorb
or
mov
movsb
mov
stos
and
enter
test
sub
sub
sub
fmuls
dec
daa
movsb
orb
out
stos
cmp
xor
arpl
aas
ljmp
gs
pushf
sti
dec
loopne
mov
ljmp
pop
or
fnstenv
iret
cld
cli
dec
or
push
addr16
inc
int3
arpl
mov
cmpsb
push
mov
add
xchg
jo
dec
or
push
and
jmp
loope
jo
rcll
std
cmp
shr
mov
pop
cmpsb
mov
test
ret
icebp
cmpl
sahf
xor
sti
push
je
nop
inc
popf
dec
inc
mov
push
mov
fnstsw
ljmp
enter
insl
adc
add
cmp
sub
xchg
xchg
sbb
loope
loope
mov
scas
xlat
jnp
lods
and
imul
lock
or
js
stc
push
gs
sub
push
ja
dec
roll
shl
movl
mov
sub
cmpsl
iret
mov
add
js
lret
inc
and
add
pusha
mov
fdivrp
sbb
mov
inc
loop
scas
xchg
adc
inc
jmp
jg
and
lods
adc
mov
enter
fldcw
sub
sbb
ds
jae
ds
ljmp
jmp
mov
fbld
ret
jne
xchg
enter
jmp
xchg
push
pop
cmpsb
cmp
mov
les
sub
mov
gs
lret
xor
cmp
dec
inc
push
out
call
stos
sub
xor
jp
sub
aaa
popa
push
pop
and
pop
push
dec
lcall
pop
outsb
int3
pop
pop
test
hlt
lea
sub
sahf
leave
fiadds
mov
cltd
inc
xchg
es
sub
div
movsb
les
test
les
cmp
sbb
add
or
xor
arpl
mov
lcall
xchg
or
dec
mov
cmpb
jae
jae
jecxz
pop
sub
out
idiv
testb
and
jae
incb
sbb
inc
jecxz
add
repnz
insl
mov
in
cwtl
sbbl
fcomi
popf
xchg
dec
or
adc
add
jp
and
clc
shrb
mov
es
fisttpll
push
push
push
inc
sbb
or
jge
lock
add
lret
into
int
mov
pushf
pushf
jg
push
jnp
or
out
mov
mov
fnstcw
fsubl
mov
repnz
in
cltd
dec
push
jo
cmp
push
lea
jns
jmp
into
adc
int
push
or
cmp
xchg
pop
ljmp
and
ret
ljmp
scas
jb
lea
leave
add
fucom
xor
add
push
mov
ds
fcomps
lock
loope
popa
stos
pusha
add
jl
pop
add
sbb
inc
outsb
cld
cmp
and
mov
jge
xchg
jnp
rcl
movsl
sbb
pop
in
add
sub
cwtl
loopne
sub
pop
push
arpl
adcl
les
loope
sub
arpl
jle
and
or
push
notl
pop
mov
mov
ffreep
pop
mov
std
push
jno
pop
out
mov
xchg
and
sub
push
ja
repnz
push
in
pusha
outsl
jle
or
or
clc
aas
cmp
jecxz
dec
pushf
shll
inc
cmp
adc
and
mov
sti
rcrb
popf
add
jns
sub
push
jae
nop
lock
imull
daa
cmp
sub
pop
adc
mov
shr
rclb
mov
push
jne
in
inc
mov
notl
out
mov
sub
adc
in
inc
mov
aam
outsb
sbb
sbb
xor
movsb
aas
sub
push
push
fdiv
fwait
cmpsl
cs
jo
lahf
insb
add
adc
cmp
sub
idivl
xchg
cs
and
pop
gs
pop
adc
aaa
in
sbb
sub
sbb
xor
in
jp
push
in
andl
adc
aam
jo
out
ja
push
out
aaa
test
add
scas
pop
movsl
xlat
je
sbbb
xor
adc
push
mov
test
imul
jno
and
and
sbbl
popf
clc
leave
mov
mov
push
inc
mov
dec
and
cwtl
or
cmp
sub
jl
loope
ljmp
dec
lods
stos
movsl
vmovsd
hlt
or
pop
xchg
enter
insb
insb
dec
lret
jmp
jae
imul
mov
int3
fiadds
sub
mov
add
loope
push
lods
sbb
lcall
jnp
movd
insb
mov
ss
push
mov
cmc
xor
adc
dec
sbb
enter
jg
sub
popa
pop
mov
call
lods
mov
jne
fbld
int
dec
incl
sbb
pusha
pushf
hlt
xchg
lock
push
cltd
pushf
rorl
sub
and
xchg
mov
push
fsub
ja
xchg
movsb
cmp
push
ret
shl
push
sub
enter
jecxz
jb
jbe
aad
mov
mov
cmp
jle
sub
mov
aas
cmpsb
push
jge
pop
sub
sub
xor
scas
lahf
popf
stos
movl
mov
and
lahf
lahf
or
mov
and
add
es
shrb
and
lcall
push
imul
fwait
xor
jo
repz
push
or
inc
add
dec
icebp
mov
lock
subb
out
lcall
jg
out
inc
jge
mov
jge
fbstp
popa
jnp
jp
cmpsb
mov
xor
nop
pop
addr16
es
loope
test
je
aas
xchg
pop
in
movsl
fcomip
lea
add
rcr
fs
push
xlat
sbb
jmp
mov
push
xlat
mov
fistpl
sub
pop
or
insl
aam
in
popf
push
cmpsl
dec
popf
mov
call
decb
jae
inc
and
test
and
inc
push
fnstenv
loopne
loope
push
pusha
aam
popa
sbb
fsubl
test
pop
mov
test
mov
stos
xchg
sub
movb
jnp
das
or
mov
mov
dec
pop
fcmovnb
cltd
mov
ss
mov
xchg
mov
addr16
call
out
js
mov
push
sbb
lret
adc
fs
aaa
sbb
cwtl
stos
push
lea
push
testb
in
pop
lods
loop
pop
into
jnp
sub
jge
int3
push
lret
jb
scas
daa
ljmp
jnp
mov
dec
xor
mov
popf
xor
mov
xchg
adc
mov
out
shlb
xchg
in
push
aam
imul
mov
bnd
and
cli
xchg
dec
fwait
sbb
shlb
jns
loope
adcl
pop
or
aas
jge
or
dec
jns
mov
lcall
in
mov
std
cmp
repz
aad
lods
pop
subb
je
inc
add
leave
mov
movzbl
lcall
jbe
inc
ret
mov
cli
pop
xlat
push
out
push
sbb
mov
sti
mov
jb
pop
in
sbb
xor
icebp
mov
loopne
or
pop
cmp
pop
adc
dec
push
dec
mov
xchg
cmpsb
jge
cmc
shl
push
jp
dec
stos
sbb
cmp
cwtl
in
jp
jmp
push
sbb
pop
mov
sub
jo
loopne
negl
sub
pop
jl
pop
pop
and
in
push
loopne
push
out
loope
inc
push
fisttps
pop
mov
push
push
adc
pushf
adc
addr16
mov
jecxz
fdivs
imul
jne
jge
das
xchg
or
jg
insb
sub
cmp
inc
fisubl
pop
aas
mov
add
aam
hlt
mov
push
sub
pop
jne
cmp
xor
dec
aam
into
popa
aas
push
xchg
imul
imul
movsl
sub
adc
stc
nop
xor
pop
stos
jmp
and
int
sub
mov
pop
enter
scas
mov
or
sbb
ja
sub
popf
sub
dec
cwtl
mov
mov
xchg
or
xchg
ds
dec
mov
nop
mov
mov
fimuls
ret
add
mov
imul
mov
les
rclb
push
mov
jge
sahf
scas
sbb
or
imul
jo
leave
xor
fwait
leave
pop
sbb
lods
mov
sub
jg
mov
sbbl
mov
cmpsl
insb
pusha
sbb
icebp
jmp
pop
or
aas
xor
xchg
push
mov
popa
lret
insb
cmc
ret
jge
in
push
push
inc
loope
fs
int
and
stos
xchg
jne
aas
cmpsl
mov
rcl
push
mov
aaa
rorb
mov
subb
adc
dec
ret
xor
popf
adc
push
in
or
fnsave
adcb
nop
lock
fdivrl
jp
leave
and
lahf
push
xor
push
xor
iret
jns
ja
pop
adc
sbb
pop
enter
js
mov
jl
dec
sub
jl
cmpsb
ret
enter
sbb
push
inc
fimuls
in
fwait
into
mov
repnz
sbb
add
ror
in
add
loope
scas
push
xor
imul
adc
push
jp
sti
xchg
pop
pushf
xchg
data16
bound
sub
cmp
push
mov
mov
popa
adc
or
pop
push
sub
data16
stos
imul
or
mov
test
outsl
push
add
cmp
icebp
jmp
or
stc
enter
mov
clc
dec
in
dec
repz
xchg
ret
or
fdiv
pop
movsb
in
or
adc
leave
sarl
dec
xchg
test
ja
mov
ds
out
mov
movsb
and
jo
in
cld
push
push
in
jp
xchg
jge,pt
clc
aaa
dec
add
shr
inc
xchg
add
movsb
sbb
stos
aas
ljmp
and
or
inc
cli
xorb
jmp
movsb
pop
dec
cmp
cmpsb
cmp
popf
xchg
sbbl
scas
imul
imul
mov
sbb
dec
xor
mov
lret
aas
insl
testl
sbb
xlat
or
add
and
scas
xor
pop
jno
xchg
sub
rcl
test
std
cmp
push
ret
imul
add
mov
jns
call
jb
and
imul
scas
es
std
xchg
icebp
and
test
popl
rorb
sub
xchg
call
inc
jecxz
xlat
fwait
sbb
js
mov
scas
adc
arpl
outsl
ss
loop
dec
int
push
sbb
out
and
inc
pusha
aaa
cwtl
test
sbb
out
dec
movsb
repz
lcall
aad
fimull
or
das
mov
mov
scas
xchg
or
push
or
jnp
mov
add
repz
push
pop
push
inc
loopne
adc
outsl
jo
jge
sbb
fldcw
stc
inc
aam
notl
fsub
xchg
pop
testb
mov
sti
or
mov
and
fadds
lret
cli
icebp
jb
hlt
sahf
dec
mov
pop
stos
push
fcmovu
mov
popa
jbe
sub
mov
xlat
mov
int
inc
loopne
call
int3
xor
int
imul
jecxz
mov
mov
pop
cmp
xor
push
dec
add
dec
mov
imull
inc
pop
aaa
pop
mov
pop
mov
testl
add
mov
jno
outsl
adc
xchg
sbb
mov
pop
pop
loop
stos
loop
xchg
fcomi
sahf
pop
or
add
mov
mov
pop
mov
xor
or
lret
push
fldpi
mov
test
inc
outsb
addb
scas
add
fs
xchg
pop
popl
nop
push
or
mov
lods
inc
dec
stos
dec
xchg
es
in
push
push
or
popf
sub
pop
dec
popf
sub
divl
imul
cld
wrmsr
nop
shrl
pop
inc
dec
lea
mov
shr
les
push
ljmp
ror
stos
je
fwait
cmp
data16
and
fs
cli
xor
loopne
rcrb
pushf
hlt
cmp
movsb
es
pop
in
sbb
pop
test
in
add
fsubl
pop
notb
jno
or
or
jmp
mov
lock
shlb
inc
fsubrp
mov
test
imul
push
rol
sub
rclb
pop
cmp
gs
out
movsl
pop
inc
shlb
jecxz
jl
test
push
je
testl
testb
sahf
mov
dec
jg
sbb
leave
adcl
aaa
jno
out
les
mov
push
inc
mov
dec
loope
adc
xor
inc
push
hlt
xor
sub
add
or
lds
adc
xor
in
jnp
pusha
mov
sti
mov
bound
rorb
jmp
ja
jle
mov
ret
outsb
jmp
stos
push
jge
mov
sub
fst
mov
dec
push
pop
adc
pop
jb
adc
mov
sbb
rol
incl
mov
cmc
ret
into
loope
add
mov
lret
and
or
loopne
jae
addr16
xchg
add
cwtl
jne
push
outsb
ss
push
nop
inc
test
cmpsb
lock
jmp
or
lds
mov
xchg
push
dec
mov
sti
clc
sub
iret
jo
add
xor
lahf
pop
movsl
push
call
dec
mov
fidivs
flds
mov
mov
push
mov
adc
and
in
pop
fcompl
lods
rorb
fdivr
cmc
sub
jb
test
add
mov
loopne
sub
popa
cmp
xor
daa
mov
inc
xchg
inc
mov
mov
pop
out
and
jbe
dec
imul
arpl
jmp
xchg
loop
mov
lea
mov
int
aas
test
lret
sbb
aaa
lret
das
jl
dec
pop
mov
xlat
mov
and
repz
stos
movsl
xchg
leave
xor
or
pop
lods
js
ljmp
jno
pop
imul
loop
cmp
pushf
lods
repz
sub
inc
xor
lea
or
nop
jmp
mov
ja
inc
das
sbbb
gs
arpl
mov
test
xorl
add
cmp
popf
xchg
cmp
cmp
cmp
xor
add
ljmp
xor
cmp
push
push
mov
fdivl
cs
cmp
bound
sti
jo
in
ret
fldenv
mov
orl
stos
lds
popf
hlt
leave
push
mov
mov
ret
pop
ds
je
idivb
jb
sbb
sbb
popa
or
hlt
mov
xchg
mov
int
shll
rolb
xchg
jg
cs
mov
push
cli
mov
lock
in
and
mov
jns
int
pop
jb
sbb
mov
inc
stc
out
movsl
inc
adc
jmp
and
and
lods
loopne
iret
insb
push
cmp
push
dec
movsb
push
xchg
lods
adc
dec
mov
cmp
enter
std
inc
fldenv
push
and
push
and
fisubrs
add
ret
ljmp
jmp
mov
gs
push
jb
cmp
outsb
add
aam
jg
sbb
jns
add
pop
jns
inc
shl
out
add
js
adc
jmp
pop
pop
push
out
mov
outsb
cld
push
push
add
sbbl
sub
xchg
cmp
push
hlt
pop
jmp
jb
cmc
mov
lret
mov
mov
dec
bnd
fwait
mov
xchg
inc
sbbb
mov
sub
ficoms
cwtl
sbb
arpl
push
repz
push
daa
push
push
xor
test
jecxz
mov
sbb
in
cmp
or
lcall
dec
out
std
ds
testl
ret
arpl
mov
out
sub
adc
je
xchg
mov
and
adc
ret
cmp
mov
mov
rcrl
in
repnz
push
loope
mov
ja
inc
arpl
sbb
sub
push
int3
pop
mov
push
cmpsb
fisttpll
and
dec
mov
jnp
mov
push
mov
or
dec
xchg
mov
lds
stos
pop
out
sbb
ljmp
inc
adc
mov
out
mov
sbb
test
jbe
fbld
dec
mov
aas
lahf
sub
aam
decl
cld
scas
icebp
ljmp
or
or
mov
xlat
add
jecxz
inc
and
jne
aam
dec
mov
out
sub
and
xor
ja
and
dec
jae
hlt
out
insb
inc
adc
sbb
insb
sti
out
fldl
jge
es
pop
xor
or
mov
movsb
es
mov
pop
insb
sbb
std
sub
gs
scas
inc
nop
ret
pop
fs
mov
mov
sbb
aaa
push
test
lret
lods
subl
lds
jl
in
data16
mov
gs
dec
mov
out
lock
mov
rcll
jns
and
jno
orl
pop
fdivp
push
pop
movsb
sti
pop
lods
xchg
jae
add
cli
dec
xchg
ds
jo
icebp
xchg
les
mov
xor
push
sub
mov
sub
fsubl
push
pop
push
dec
and
push
jp
mov
daa
adc
pop
push
push
movsl
dec
add
sub
ret
fisubs
popf
movsl
cmp
cmc
and
inc
popa
cmp
stos
adc
gs
or
xchg
mov
mov
stc
enter
das
fwait
xor
es
jo
mov
xchg
in
call
jp
adc
ja
inc
fcomps
pop
adc
jle
in
fstpl
xchg
nop
daa
adc
ljmp
jmp
shrl
fwait
push
sbb
adc
ljmp
lret
cmp
add
test
and
xlat
stos
ja
lds
movsb
push
pop
mov
dec
call
insb
push
daa
inc
fistpl
call
dec
dec
sbb
jecxz
sbb
sbbl
outsl
aas
aad
stos
stos
mov
nop
pop
aaa
cmovl
loop
jae
push
mov
pusha
adc
sbb
mov
and
cli
mov
mov
adc
jb
add
jae
mov
sbbl
cmp
mov
jle
es
loope
aaa
jl
out
cmp
xor
adc
outsb
es
repz
lret
movsl
sub
jecxz
aas
jb
or
out
or
std
mov
jl
pop
xsave
mov
adc
pop
xor
data16
ja
int
lods
cmc
leave
mov
push
hlt
lcall
int3
movlps
xor
popa
jne
pop
cmpsl
push
pushl
inc
mov
push
sbb
xchg
dec
js
sti
stos
sbb
cmp
sbb
test
xor
rclb
std
out
cld
mov
xchg
jae
shll
test
sbb
dec
dec
orb
shll
push
mov
loope
push
push
out
mov
and
loopne
mov
popf
and
jmp
inc
dec
push
aaa
sarb
inc
aas
jp
push
push
xlat
movsl
cmp
adc
bound
sarl
push
jmp
push
mov
imul
arpl
adc
loop
and
jne
jne
and
pop
inc
int3
or
push
sub
and
mov
frstor
out
call
xor
cli
cmp
stos
mov
outsl
sbb
or
adc
jnp
ljmp
popf
push
pop
cltd
sub
lret
jne
lock
in
addr16
cmpsl
and
test
add
pop
pop
cli
xor
inc
cmpsl
sub
incb
sbb
push
imul
jecxz
stos
cmp
add
scas
cmp
aaa
xchg
xor
lods
faddl
cmp
cmpsb
into
xchg
stos
cli
dec
stos
cmp
xor
sbbl
sarb
fldl2t
imul
sub
or
jns
das
je
add
iret
leave
popa
add
xchg
and
into
and
pop
leave
xchg
into
push
jp
inc
loop
sbb
jmp
push
insl
inc
add
ss
fldt
daa
outsl
jmp
pop
xchg
mov
pop
scas
push
xchg
push
movsb
jle
lods
loopne
inc
xchg
movsb
sub
popa
mov
mov
les
dec
jnp
ds
lods
inc
cmp
ret
dec
loope
dec
push
out
xor
mov
mov
ljmp
pop
pop
sahf
dec
test
add
fbld
mov
icebp
mov
addr16
pop
outsb
jecxz
call
fcompl
sub
push
ret
mov
das
mov
xor
repz
hlt
mov
daa
xchg
sub
cmpsb
mov
xchg
dec
fnstenv
inc
ja
cmp
add
shlb
roll
cltd
pop
sub
add
fisttpll
dec
cli
loop
mov
push
inc
and
jl
adc
mov
rorl
call
cmp
and
pop
push
sbb
dec
cmp
add
sahf
cmp
lret
or
mov
push
lock
cmp
push
das
ret
pop
shrb
push
adc
mov
hlt
jle
rolb
lea
stos
pop
xor
mov
out
daa
lds
fisubs
es
insl
mov
or
adc
push
imul
inc
sub
fcmovb
mov
cli
and
jg
sub
aad
jne
daa
or
inc
sbb
jle
push
and
mov
addr16
xchg
mov
mov
fbld
xor
jbe
sub
ljmp
lock
out
cld
not
popa
movl
xor
jo
adc
push
jbe
mov
mov
repnz
or
add
daa
in
movsb
fbstp
popa
dec
add
sarl
fs
das
cmp
ss
add
test
push
repz
repz
jmp
push
pusha
mov
mov
les
rcrl
mov
pop
jmp
inc
in
jb
push
mov
jbe
pop
test
iret
xchg
addr16
and
call
mov
adc
mov
popf
xor
mov
push
aas
sbb
popa
add
jns
outsl
in
pop
xchg
nop
xchg
cs
xor
imull
sub
dec
and
sub
mov
into
enter
adc
pusha
mov
and
stc
popf
inc
sub
pop
addr16
or
push
pop
mov
push
mov
sti
leave
aas
mov
and
bound
daa
mov
int3
lcall
or
inc
pushf
push
push
clc
mov
cmp
mov
aam
pop
jno
es
repnz
xchg
mov
shlb
adc
xchg
add
jae
int
adc
aas
xlat
push
sub
sub
and
lock
or
add
sub
movb
mov
rol
addps
mov
xor
mov
jnp,pt
rolb
cld
cmp
idivl
fidivrs
aad
push
js
hlt
sub
cmc
pop
aad
rorb
mov
lahf
xchg
es
inc
mov
mov
test
inc
pusha
loopne
and
fisttpl
stos
adcl
push
dec
xor
mov
adc
cmp
xor
push
pop
imul
test
cmpb
mov
xor
les
cs
lea
mov
mov
pop
lock
xchg
sub
arpl
mov
or
pushf
sub
inc
xlat
mov
fcompl
sub
mov
aaa
int3
cmp
std
pop
insl
fistpl
cmpb
cmp
and
jb
inc
push
cld
xchg
aas
mov
fbld
push
addl
sub
sub
push
aaa
pop
pushf
push
and
ficoml
jnp
fnsave
aad
rcrb
cld
xchg
nop
sbb
mov
insb
lahf
cltd
cltd
pop
xor
dec
fnstenv
bound
jp
and
add
lods
ljmp
lock
les
mov
cmp
xchg
mov
movsl
jecxz
fnstcw
cmp
int
gs
fbstp
outsb
in
loopne
inc
fdivs
out
xchg
pop
push
pop
mov
fcomps
fistpll
add
ja
dec
pop
adcb
jmp
ljmp
mov
lods
sub
adc
out
sub
sbb
push
xchg
inc
es
cmp
enter
jno
sbb
sub
cmp
dec
dec
sbb
clc
adc
inc
mov
pop
mov
lods
notl
xchg
mov
pop
cmc
xor
rcrl
jl
roll
push
bound
mov
sub
add
addb
cwtl
mov
cmp
push
dec
fistpll
xchg
out
xlat
inc
or
push
pop
sbb
shrb
popf
je
push
div
adc
jae
imul
repnz
js
and
mov
sbb
dec
frstor
push
fsubrs
out
xchg
inc
fisubrl
dec
es
out
stos
arpl
sbb
mov
cld
fwait
stos
xchg
mov
jge
loope
mov
mov
mov
into
cmc
dec
xchg
mov
mov
cmp
dec
insl
jg
ljmp
adc
cmp
leave
je
push
push
push
notl
test
jle
jne
enter
pushf
lret
stc
push
jne
fbld
mov
cmpsl
ds
cmc
inc
lods
xchg
icebp
mov
fwait
call
jns
sbb
xchg
inc
sbb
push
fwait
jecxz
or
dec
xor
bound
or
or
pop
push
in
mov
pop
push
mov
adcl
ds
les
xor
xchg
and
cmpsb
push
jecxz
sbb
int
fs
inc
push
and
dec
or
push
jmp
rolb
in
icebp
pop
loopne
mull
fsubrl
orl
ljmp
cwtl
call
pop
arpl
xchg
lods
xor
scas
inc
movsb
ret
std
iret
cmp
cmpsl
jge
in
push
sahf
cs
loop
pusha
push
adc
mov
stos
xor
push
dec
repz
aam
push
add
pop
ret
repz
in
test
lds
mov
inc
fldcw
rorl
imul
push
sbb
dec
add
ret
icebp
cs
push
adc
xor
cmp
mov
xchg
mov
pop
sbb
imul
inc
cwtl
jle
sbb
subb
lcall
cmp
inc
push
lea
push
repz
orb
lea
sti
hlt
and
fists
leavew
cld
and
js
sbb
outsl
sub
sub
push
push
outsb
mov
insl
stos
lds
mov
dec
stc
mov
inc
fwait
testl
in
adc
mov
icebp
sbb
mov
out
xchg
sub
pop
int3
sbb
jmp
leave
add
inc
in
out
and
push
jle
add
shr
addl
lods
mov
pop
sub
out
inc
dec
and
data16
sbb
in
mulb
add
stc
or
ljmp
add
xchg
xor
insl
sub
push
mov
cmp
and
mov
pushf
adc
or
sub
sub
push
leave
pop
mov
shll
add
xchg
cs
xor
push
xchg
iret
dec
push
les
pop
cmp
mov
mov
ja
clc
mov
insl
inc
sbb
pop
sub
daa
cmp
ret
insl
pushf
aaa
pop
pop
cmpl
orl
scas
inc
jle
adc
out
sbb
es
rcrl
inc
xchg
lock
repz
add
sbb
inc
out
mov
and
test
in
out
push
lea
push
dec
pop
pop
add
aas
movb
dec
pop
pop
mov
leave
lods
cmp
xchg
or
push
jbe
inc
rorb
and
aam
hlt
jns
adc
mov
mov
shrl
insb
adcb
and
out
jnp
out
arpl
xor
jmp
scas
sbb
fistpll
hlt
jl
pop
scas
lahf
mov
mov
push
jb
in
or
mov
pop
push
test
cmp
pop
rorl
scas
je
mov
and
mov
icebp
xor
ret
or
add
xchg
fdivl
adcb
dec
push
jecxz
push
xchg
outsb
out
in
xchg
add
adc
mov
test
pop
jo
lahf
or
dec
ljmp
pop
cmp
jecxz
xchg
add
les
and
cmp
jge
mov
jp
adc
shlb
shll
push
push
push
fidivl
les
xchg
and
imul
imul
cwtl
sub
outsb
movsl
mov
jno
mov
sbb
mov
ljmp
sub
jmp
pop
dec
fistpll
mov
test
adc
enter
loope
inc
daa
aam
loope
push
xchg
ret
ja
pop
adc
add
and
gs
loopne
mov
in
out
jnp
das
push
in
outsl
ret
add
cwtl
clc
or
popa
pop
adc
pop
out
pop
sub
data16
jp
or
mov
stos
lret
cwtl
out
dec
in
xor
pop
jmp
repnz
xchg
xor
movsl
inc
bound
adc
jle
inc
xor
gs
sbb
rclb
mov
mov
adc
xor
ficompl
imul
push
add
sbb
ss
pop
push
loopne
adcb
sbb
decl
xchg
mov
push
sti
add
call
inc
pusha
bound
and
xor
mov
add
xchg
fadds
outsl
lcall
aam
mov
int
xchg
cmpb
dec
pop
fistl
movb
daa
mov
push
inc
jge
jne
inc
scas
sbb
xor
jo
fnclex
jns
xchg
push
jbe
inc
add
jns
pop
stos
or
jecxz
test
in
inc
inc
jae
jb
insl
push
xor
ds
outsl
mov
arpl
outsb
aad
mov
jmp
test
fcmovu
gs
inc
gs
in
jne
cltd
mov
icebp
lret
or
cmpsl
push
push
sub
out
lods
out
sahf
in
inc
xchg
add
cmc
adc
jne
pop
jp
sub
and
mov
or
jns
stos
jnp
test
mov
add
xor
outsb
js
fs
test
rorb
ja
sahf
add
xor
and
mov
mov
inc
jmp
testl
repnz
pop
sti
or
outsl
mov
xchg
clc
inc
mov
adc
repz
mov
mov
into
aas
add
push
lret
test
mov
cmp
ret
pop
mov
inc
ds
fdivrl
and
ds
xchg
mov
push
xchg
adc
sbb
pop
jge
cmp
std
mov
lahf
inc
int3
mov
push
xor
jb
sub
inc
lock
cmpsl
and
lcall
test
adc
stos
subl
mov
ret
test
inc
dec
repz
sbb
jp
cmp
les
dec
dec
mov
dec
xchg
cwtl
mull
lods
popa
xor
outsl
out
lock
add
inc
int
hlt
jbe
addb
sbb
fcmovbe
test
add
scas
pop
insb
pop
movsb
sub
movsl
repz
inc
push
in
popf
sbb
sbb
cmp
xlat
jle
mov
roll
pusha
push
andb
les
clc
push
adc
inc
fs
popa
mov
rol
stos
out
aas
arpl
jno
sbb
clc
int3
ss
push
inc
push
pop
push
jb
cmc
lods
push
inc
faddl
imul
and
dec
stc
imul
sbb
jmp
mov
leave
jmp
sub
adcl
jbe
push
xor
sbbl
xor
sbb
loopne
cmp
fs
jp
jle
push
lods
or
adc
push
add
xor
inc
jecxz
mov
add
adc
and
inc
xchg
xchg
mov
sub
nop
push
int3
imul
mov
xchg
inc
pop
sti
cmpsl
mov
xchg
sbb
cmpsb
cmp
adc
aaa
fucomi
out
jae
std
movsb
ss
add
xchg
xchg
movsb
mov
pop
add
and
inc
cmp
cli
ljmp
loope
js
mov
mov
aaa
repz
sub
and
push
mov
leave
jmp
mov
faddl
fs
xor
or
outsb
movsb
pop
icebp
popa
cmp
push
leave
jg
fisubl
call
ljmp
std
mov
mov
mov
mov
adc
lret
mov
bound
xor
js
xor
and
sbb
lret
adc
insb
cmp
enter
xchg
cmpsl
dec
xchg
lods
jle
sbb
std
scas
jo
shlb
sbb
dec
xlat
repz
stos
ss
popf
call
and
inc
or
outsl
daa
shld
inc
lods
mov
xchg
jg
mov
mov
push
icebp
loop
pop
aas
in
jl
or
dec
push
jno
xor
in
xchg
adc
mov
cs
xor
inc
fnstenv
fists
std
or
xor
in
adc
call
and
push
and
sub
lods
into
sub
dec
les
lcall
pop
xchg
cwtl
and
scas
jl
cmpsl
and
xchg
jns
cmp
xchg
pop
lock
rep
aas
dec
cmp
sti
mov
jnp
inc
mov
jle
and
xor
sbb
arpl
inc
jo
add
shrl
inc
orb
icebp
scas
fidivl
or
repnz
fcomip
sub
imul
aad
out
push
cltd
dec
repz
mov
jp
sarb
lcall
int
mov
bound
push
js
fdivl
fldt
pop
add
pop
ja
test
xchg
lahf
ret
mov
data16
stc
cmp
sti
mov
leave
sub
cli
add
and
mov
or
out
push
xlat
test
xchg
dec
dec
push
dec
cmp
xchg
inc
fdivs
stc
pop
imulb
push
sbb
mov
push
mov
cwtl
call
jne
cmp
int
jmp
jne
xchg
jbe
inc
das
cld
mov
mov
stos
or
dec
fninit
ret
adc
sbb
shrl
push
das
xor
and
shll
aam
adc
xor
jecxz
outsb
dec
xchg
sub
cmp
iret
fists
icebp
mov
test
xchg
cltd
mov
sub
xchg
lds
das
insl
sbb
fidivl
sbbb
jbe
mov
and
xchg
inc
addr16
ret
repz
jmp
mov
fs
sbb
xchg
sub
cmp
push
push
out
inc
dec
sbb
push
test
sub
cs
cmp
dec
mov
jecxz
popl
mov
lcall
jb
sbb
mov
in
mov
adc
jno
or
xor
into
scas
mov
jbe
push
out
xor
stc
shl
mov
jle
lock
sbb
and
xchg
inc
in
std
mov
out
aad
cmp
enter
ret
cmp
addr16
aam
sbb
ds
cmp
mov
and
add
dec
ss
jb
cmpsl
mov
jns
out
xchg
fsubrs
pop
sub
mov
xchg
sbb
call
ja
mov
stos
sbb
ljmp
rcrb
out
push
xchg
mov
jecxz
dec
test
jae
xor
test
jp
cmp
bound
xlat
jmp
gs
adc
xlat
mov
add
hlt
lock
mov
popf
bound
and
jp
cltd
xor
negl
mov
scas
jle
popf
add
mov
sbb
fwait
andl
mov
mov
retw
mov
fdivr
push
and
xor
adc
inc
pop
imul
mov
clc
fdivrs
push
mov
cmp
icebp
mov
imul
cwtl
or
push
test
daa
movsb
cmp
movsl
cmpsb
mov
out
les
clc
sub
jnp
je
push
add
ret
sbb
test
xor
dec
jne
inc
rclb
push
adcl
sbb
outsb
push
inc
in
inc
mov
dec
pop
adc
inc
jge
dec
sub
cmp
scas
push
cmp
test
adc
mov
lods
jp
adc
jb
sub
sub
sub
jo
out
sub
leave
pusha
es
fcmovnbe
lret
mulb
in
aad
inc
addr16
mov
inc
or
or
jge
fildll
jae
cld
fsts
popa
jae
adc
movsl
test
adc
aam
mov
pop
pop
loop
add
negl
add
inc
fcmovnu
pop
imul
scas
push
pop
imulb
mov
imul
mov
xlat
aaa
and
mov
lods
push
mov
push
jg
xchg
add
bound
mov
subl
sbb
cmpsb
lret
mov
push
mov
mov
cld
add
xor
nop
jl
repnz
dec
jno
sub
je
xchg
clc
push
in
mov
inc
and
pusha
cmp
xor
inc
loope
call
seta
daa
enter
scas
les
or
inc
mov
mov
fists
cmp
jne
mov
mov
aaa
cmp
pop
sub
dec
or
push
add
pop
pushf
xor
jmp
shlb
inc
mov
call
sub
mov
push
pop
addr16
mov
aad
xchg
jbe
fidivrl
insl
mov
decl
pop
push
test
sbb
fwait
mov
call
in
pushf
push
mov
cmp
gs
xor
das
jle
cltd
fistps
mov
ret
lods
pushf
test
movl
fs
mov
stos
and
push
pop
xlat
jne
repz
xlat
jne
xchg
out
cmp
adc
roll
adc
pop
mov
jno
xchg
push
jmp
mov
jbe
arpl
jp
cld
or
push
dec
push
aas
sti
aas
insb
leave
mov
push
lds
or
inc
arpl
pop
jg
mov
or
popf
sbbb
push
push
xchg
shl
mov
cmp
imul
mov
push
mov
pop
or
loope
out
xchg
and
loope
mov
fcoml
push
sahf
int3
out
cmp
cmp
imul
or
mov
cmpl
insb
mov
jge
and
xor
sbb
or
addl
aam
inc
clc
cmp
data16
inc
out
das
cs
jmp
mov
mov
cmp
iret
jo
ret
mov
jp
clc
xchg
mov
divb
pop
pop
xor
cmp
inc
pop
int
cmp
and
sti
xchg
mov
je
mov
dec
ds
dec
mov
adc
pop
lods
xor
das
ja
xor
fildll
xchg
adc
fistpll
xchg
lods
sahf
add
int3
scas
mov
sti
pusha
cmp
insb
xorl
aam
xor
push
cltd
les
push
pop
jecxz
sbb
les
lret
sbb
test
mull
adc
scas
push
mov
cltd
xchg
arpl
andb
pop
repz
nop
or
mov
aam
jecxz
pop
cmp
push
negl
sub
and
popa
mov
mov
out
jl
pusha
lcall
cmp
xchg
cmp
fptan
xchg
bound
mov
hlt
leave
fiadds
push
and
test
xchg
pop
out
movl
mov
adc
mov
loopne
add
jnp
in
fstps
or
pop
mov
addr16
adc
aad
xchg
test
lds
daa
mov
xor
out
xchg
xchg
testb
adc
lock
imul
mov
push
mov
rcr
jns
imul
xchg
dec
lods
dec
repz
gs
ds
xchg
nop
ret
dec
cltd
pop
cwtl
lret
cmp
xchg
dec
data16
mov
adc
and
imul
lock
dec
in
fnstsw
add
sbb
ljmp
sub
in
sub
and
sub
inc
push
or
ficompl
and
cwtl
jae
cltd
or
inc
arpl
ljmp
cmp
sbb
push
pushw
scas
hlt
dec
push
aad
adc
xchg
pusha
mov
popf
call
push
xchg
out
cwtl
sti
sub
ret
pop
call
add
push
and
jns
xor
push
fdivs
fistpll
das
test
test
mov
das
cmp
pop
sub
int
fidivs
jle
jmp
dec
push
push
push
testl
fwait
stos
lods
dec
fsubrl
push
jg
xchg
pop
xchg
mov
out
mov
stos
mov
adc
jl
mov
insb
in
out
jnp
xchg
outsl
add
or
cmp
test
mov
mov
push
jne
add
jnp
sbb
cmp
adc
lods
push
stos
out
jg
and
faddl
push
ja
mov
pop
jge
imul
mov
test
xor
stos
push
ljmp
aaa
std
jo
into
or
idivl
lods
int3
xlat
pop
cmp
cwtl
arpl
and
cmp
int3
outsl
nop
xchg
jmp
push
lahf
addb
pushf
add
out
and
mov
rcrb
xchg
inc
mov
jnp
cmpsb
mov
add
or
and
sbb
push
sub
inc
dec
xchg
test
iret
scas
push
mov
aad
pop
gs
mov
cmp
jbe
cltd
cmp
mov
std
loop
xorl
sub
sub
jnp
lcall
test
test
sti
imul
mov
pushf
push
add
push
and
mov
icebp
aam
in
or
outsb
mov
pop
gs
loop
jp
mov
movsl
loopne
pop
nop
push
out
andb
push
arpl
stos
mov
mov
pop
sub
bound
adc
cmp
dec
bound
fisttpl
adc
test
cmp
and
sub
pop
sub
cmp
test
sarl
insl
cltd
loop
mov
lock
fidivl
push
iret
insb
test
lret
mov
pop
adc
and
add
fidivrl
test
or
mov
sbb
rcrb
xchg
inc
aad
push
or
test
dec
mov
aad
inc
sub
pop
push
sbb
add
pop
push
mov
dec
adc
lahf
pop
ds
jns
ret
add
mov
mov
ret
hlt
roll
fwait
push
dec
repnz
and
test
test
repnz
jle
mov
pushf
out
lea
xchg
jae
mov
pusha
sbb
les
imul
dec
pop
sub
insb
lldt
sub
pop
push
add
sub
cmpsb
and
or
or
shrb
mov
add
clc
stc
pusha
mov
sbb
rorb
lods
fstp
and
into
cmp
jns
mov
inc
nop
and
clc
jno
jns
pushf
nop
mov
inc
stos
rsqrtps
add
bnd
jg
adc
sub
addr16
mov
pop
std
popf
jbe
jmp
mov
push
ja
shr
mov
movsl
mov
dec
testl
jp
pop
lret
xlat
sub
mov
test
sbb
adc
push
cmpsb
push
inc
loopne
je
sub
cld
mov
pop
in
test
loope
in
mov
pop
nop
jecxz
mov
sbb
enter
push
arpl
cmpb
lods
adc
push
fadds
pop
dec
sbb
sub
push
pop
cmpsb
popa
clc
loope
adc
push
fidivl
shr
or
fidivs
cmp
arpl
fucomi
and
cmpxchg
scas
aaa
iret
adc
jb
cltd
lods
add
push
mov
jp
and
sbb
jb
or
dec
sbb
pop
inc
cmp
lds
add
divb
pop
pop
add
insl
sbb
push
je
mov
dec
imul
aas
jle
push
dec
filds
xchg
inc
das
jb
mov
sbb
or
mov
cmp
mov
js
nop
fwait
mov
test
loopne
mov
sub
push
pop
pop
out
or
shrb
sub
or
jo
pop
sub
and
push
lock
fimuls
mov
arpl
imul
and
xor
inc
mov
out
imul
loope
cmpsb
push
cwtl
dec
andb
popa
mov
mov
hlt
popa
push
es
xchg
mov
test
add
enter
je
fstpt
or
xchg
inc
pusha
push
fs
sbb
loopne
pop
jno
add
xor
imul
bound
jecxz
cmp
fisubrs
mov
arpl
inc
dec
ljmp
enter
ret
call
jp
xor
lods
mov
sbb
sbb
aas
adc
daa
inc
push
ja
xor
push
mov
cmp
cmc
and
addr16
outsl
jge
jecxz
sbb
je
movsb
inc
mov
es
icebp
sbb
mov
outsb
and
cltd
filds
xor
mov
inc
dec
mov
add
jp
or
mov
sub
out
shlb
sub
xchg
adc
jns
xor
jne
scas
pop
inc
push
paddw
xor
xchg
rcl
lret
jbe
xchg
cmpsb
mov
enter
dec
xchg
dec
out
xchg
call
sub
xchg
xor
frstor
addr16
mov
shlb
xchg
jnp
cmp
fidivl
and
repz
sbb
std
adc
fstpl
ret
dec
icebp
push
ljmp
sub
outsl
dec
aam
cmp
pop
mov
leave
ficoml
pop
andb
sti
fwait
cmp
and
mov
mov
sub
mov
mov
stos
jecxz
sub
pop
dec
pop
sub
in
sub
andb
adc
ret
inc
mov
out
fcomi
push
push
and
add
aam
sbb
pop
mulb
fwait
mov
xor
adc
jmp
fwait
daa
cli
jo
mov
ret
jg
dec
sub
pusha
xchg
inc
lds
adc
out
xor
adc
pusha
xchg
sbb
ret
mov
and
filds
fbld
dec
inc
mov
int
imul
jno
inc
xchg
sub
and
xchg
push
cmp
mov
pop
xchg
stos
stc
mov
in
jp
or
and
and
add
mov
push
notl
idivl
mov
pop
xchg
es
sarl
lret
in
xchg
mov
and
xchg
and
mov
jbe
std
inc
sbbl
xor
ret
push
ja
shrb
sub
sti
ja
and
xchg
test
xor
js
add
negb
push
pushl
lret
jbe
mov
pop
mov
shll
jbe
ja
in
pop
adc
pop
ljmp
adc
mov
andl
cmpsl
inc
jbe
insw
fsubp
mov
or
rol
aad
or
das
repz
fidivrs
fsubr
push
test
dec
int3
mov
sbb
mov
lods
cmpsb
cli
nop
xchg
iret
mov
jns
leave
or
mov
cmp
xchg
aam
mov
jns
inc
lods
cmp
xor
sbb
popa
stc
pop
cmp
push
shl
cmp
lock
inc
push
cli
nop
loope
adc
add
loop
sbb
pop
mov
std
out
adc
mov
test
jmp
cmc
add
pop
negb
subb
ret
push
push
jmp
dec
popf
and
push
aam
xor
cmp
cmpsb
notb
enter
stos
inc
jp
fdivrl
adc
inc
jnp
ret
jmp
call
out
flds
ljmp
mov
mov
aaa
push
bound
sbb
in
repz
divb
ret
orl
shl
xor
pop
inc
arpl
dec
add
dec
in
inc
pop
andl
aam
es
stos
add
pusha
pushl
gs
pop
xor
pop
jecxz
test
jmp
lods
pop
inc
gs
test
scas
inc
js
testb
add
test
cmpsl
dec
sub
push
sbb
mov
jp
xor
or
inc
cltd
xor
aad
repz
xor
mov
andb
in
popf
or
push
xchg
adc
cli
or
push
aad
pop
shlb
js
scas
shlb
pop
sub
push
aam
je
addr16
pusha
shl
ficoms
int3
mov
lock
rorb
push
in
jg
test
lret
addr16
mov
test
imul
test
dec
jle
lods
mov
dec
mov
push
out
push
sbb
and
inc
pop
aas
inc
insb
xchg
pop
mov
mov
xor
loope
and
or
mov
xor
cmpsl
jb
or
inc
xor
ss
dec
int
imul
mov
mov
rolb
sbb
pop
sti
and
add
cltd
or
ss
movsl
lock
and
lret
popf
cmpsl
ljmp
iret
imul
push
or
int
jp
leave
cmpsb
add
in
lods
sub
cmpsl
lds
xor
repnz
push
loope
in
popa
mov
adc
push
insl
cmp
xor
out
add
gs
shlb
adc
test
or
pop
jne
shll
dec
in
sarb
iret
add
sbbl
and
push
push
insl
in
sbbl
add
std
sbb
test
jns
inc
jbe
cltd
cmpsl
fwait
jbe
int
in
test
push
jns
xchg
add
iret
stc
in
test
push
jns
jg
add
adc
in
test
adc
and
add
xor
lock
daa
icebp
jge
aas
stc
lock
lea
dec
sar
inc
mov
test
ficoms
fistl
or
xor
movsl
js
fwait
mov
inc
inc
jecxz
add
inc
sub
sbb
rcr
fstpt
lods
es
push
ss
shl
insb
mov
stc
imul
jnp
loope
dec
push
mov
inc
out
jp
repz
pop
and
shl
dec
out
xchg
mov
test
push
adc
add
push
mov
scas
and
push
lea
loope
cwtl
lret
cmp
push
inc
aad
jl
jo
add
mov
xor
mov
bound
jo
and
movb
addl
ds
mov
jo
ss
inc
out
sbb
cmp
and
xor
rcl
lret
hlt
loop
loopne
addl
aas
push
dec
add
clc
xchg
das
xor
pop
mov
clc
repnz
fsubrp
test
and
mov
mov
pushf
in
mov
sti
fs
rclb
aam
icebp
loop
sub
pop
mov
lea
mov
add
sub
mov
mov
inc
mov
mov
fwait
lea
ret
xor
dec
iret
lcall
aaa
lds
frstor
push
rclb
inc
sahf
repz
loope
into
cmpsb
add
or
xor
xchg
mov
and
xchg
mov
jp
cmp
jmp
xchg
aas
rcll
fbstp
sbb
sar
inc
test
dec
dec
dec
std
adc
aaa
mov
pushf
or
jb
mov
push
je
pusha
cmpsb
adc
out
xchg
mov
mov
test
adc
cmp
pusha
ja
dec
repnz
loopne
sub
js
mov
sbb
out
sub
mov
out
pop
into
sub
cli
paddw
shrb
es
loopne
lock
jl
cltd
mov
jne
pop
in
hlt
adc
les
jns
lret
xlat
shrb
sub
imul
movsl
stc
dec
jmp
mov
push
xchg
stos
mov
jo
mov
sbb
lods
dec
cmp
mov
imul
lcall
sub
pop
cmp
hlt
loope
sub
sbb
adc
mov
jo
sbb
pusha
int3
cmp
fistl
pusha
es
leave
inc
xchg
fisubs
movsl
and
sub
roll
flds
fmull
dec
fcoml
in
fucom
xlat
imul
mov
mov
movb
fsubr
cmp
in
pop
and
mov
pop
in
cmp
inc
and
stos
or
insb
scas
xchg
push
jecxz
mov
xchg
cmc
sbb
sub
lea
popa
sub
sub
pop
xor
pop
jbe
popa
ss
sar
jnp
push
ss
lcall
icebp
fisubrl
pop
dec
jo
lcall
xor
and
mov
mov
mov
aad
inc
in
xor
je
jge
scas
sub
push
dec
adc
jl
clc
sub
loop
dec
push
adc
cltd
or
push
cmp
rcrl
inc
in
push
mov
bound
xchg
aad
add
mov
mov
mov
in
das
and
dec
nop
lock
loop
or
popa
mov
out
data16
and
mov
movsl
jb
das
aam
sbbl
fstps
cli
push
out
or
jne
int
dec
xchg
push
stc
lret
inc
dec
out
rcrl
ror
lahf
mov
jae
out
inc
stc
push
nop
gs
lcall
into
sub
jle
out
lahf
lahf
dec
lcall
iret
jecxz
push
jne
int3
mov
sub
sub
sahf
push
mov
or
push
pop
repnz
adc
push
sbb
rcll
add
in
dec
and
shrl
test
arpl
insl
xchg
or
cmpb
mov
dec
xlat
je
or
push
repnz
dec
fs
mov
fwait
dec
lods
ljmp
pushf
mov
sub
push
ljmp
xor
jmp
in
pop
xchg
xchg
sub
push
les
orl
push
mov
fmull
add
test
push
or
cli
cltd
push
mov
fs
jecxz
adc
mov
pop
jecxz
aam
or
and
dec
push
iret
add
adc
adc
or
scas
test
xchg
mov
jl
and
xchg
jae
jb
or
fimuls
cli
push
xor
cmp
mov
insl
push
cmp
adc
pop
mov
sbb
push
aam
test
adc
inc
sub
pusha
ret
insl
lock
in
jle
shlb
sub
cmp
jno
dec
insl
dec
es
and
and
sahf
insb
mov
and
sub
aas
push
and
inc
and
push
push
or
jmp
fsubr
shl
jecxz
sarb
sbb
mov
xor
jno
xchg
bound
adc
lods
push
inc
outsl
gs
aad
push
les
mov
push
fistpl
sti
sub
adc
push
adc
mov
sbb
push
cltd
dec
popa
xor
dec
mov
andl
adc
dec
jp
add
fbld
jbe
cmp
inc
in
repnz
cwtl
das
inc
adc
inc
cmp
imul
xor
int3
add
mov
sarb
pop
sub
insl
test
adc
inc
lret
fdiv
xchg
dec
sbb
mov
cmpsl
test
jmp
loopne
rcl
je
insb
mov
and
pop
ja
pop
sbb
fcoml
cmc
nop
rclb
in
pushf
sahf
mov
xchg
lods
and
add
dec
mov
cmpl
jg
or
jae
jne
sbb
xor
in
or
fnsave
stos
mov
in
or
xor
in
pop
addr16
cmpsl
cmp
push
jne
fidivs
aad
cld
xchg
jg
sub
lods
xchg
add
mov
adc
std
sbb
xchg
fiadds
mov
stos
call
cmp
aam
in
jbe
pop
jle
cld
es
xchg
sub
inc
stos
pop
lds
lds
jns
pop
ds
shrl
popa
sti
stos
adc
je
adc
and
xchg
ret
call
xchg
js
inc
lods
dec
pop
cmpsb
xlat
int
sbb
jmp
mov
in
fists
adc
ret
inc
jae
mov
adc
pushf
inc
and
adc
add
xchg
jno
push
cmp
sub
std
daa
mov
mov
sbb
inc
and
xor
push
push
movl
lret
enter
outsb
in
push
or
leave
jne
ret
test
pop
adc
cwtl
in
test
fcomip
push
movsl
sub
cltd
adc
adc
jo
insl
mov
pop
pop
repz
inc
dec
pop
jb
incl
mov
sub
dec
jnp
xchg
shrl
mull
mov
test
lahf
test
or
scas
loope
pop
loop
imul
mov
negl
cmp
or
mov
inc
push
mov
leave
fldcw
jg
mov
pushf
cmc
sti
and
xchg
fbstp
mov
and
jnp
in
dec
xor
testb
add
jle
shrb
lock
xchg
jl
add
inc
in
mov
add
add
ret
lods
push
lds
mov
adc
decb
lock
xchg
and
pop
cmp
sbb
das
xor
icebp
pusha
fidivl
adc
fwait
push
loope
cmp
mov
fldl
xchg
adc
push
cmpsb
cmp
nop
nop
jae
inc
mov
aaa
insb
lds
xor
adc
jno
leave
pusha
jmp
mov
scas
movsb
roll
ficoml
lret
xor
icebp
push
push
jno
adc
mov
pop
jb
iret
push
data16
rcrb
jge
test
pop
jnp
jge
in
movsb
mov
add
loop
sub
sarb
pop
repnz
int
int3
aam
lds
in
pop
out
movsb
mov
cmp
cltd
imul
pop
push
shl
loop
cmp
rcr
push
mov
jnp
add
and
repz
gs
fdivr
js
mov
adc
loopne
and
push
push
idivb
or
fs
cmp
push
adc
cs
shr
xlat
jl
mov
test
test
std
cmp
mov
loopne
cmc
pop
jmp
mov
mov
and
outsl
outsl
mov
lahf
fnsave
adc
outsb
sbb
into
hlt
mov
insl
in
scas
stos
cld
push
in
adc
into
lret
push
lret
stos
mov
cmc
into
cli
test
sub
sbbb
in
cmp
daa
xchg
nop
sub
movsb
xor
cmpsl
push
dec
ret
pop
jl
sub
jo
fs
ds
pop
sbbl
ss
push
cs
bound
add
mov
cmc
idivl
cli
pushf
inc
movsb
mov
mov
jg
repnz
xchg
add
sub
test
mull
jne
jg
inc
and
nop
gs
xchg
push
aas
cwtl
repnz
mov
outsl
mov
imul
mov
cltd
popa
out
xchg
std
cmc
mov
stc
push
in
add
sbb
int3
movsb
addl
add
push
xchg
idiv
or
stc
push
xor
cmc
into
gs
add
in
cwtl
mov
pop
mov
dec
add
cmpsl
add
leave
pushf
test
xchg
pop
hlt
mov
mov
or
fwait
push
or
jb
sbb
push
nop
pop
mov
enter
jbe
mov
ss
fwait
mov
in
dec
sbb
mov
out
jl
mov
in
repz
loopne
pop
lcall
rclb
dec
test
insb
push
jl
xchg
add
pop
sub
iret
iret
fs
test
adc
lods
fcmovnb
xchg
dec
dec
imul
add
sub
jb
shl
add
ret
lret
push
je
sbb
fs
inc
mov
test
sub
fs
fwait
out
cld
cmp
jp
push
test
cmova
fsubl
or
xchg
pop
xchg
jb
dec
mov
pop
jbe
out
jl
dec
adc
mov
lock
or
cmp
push
mov
xlat
popf
cli
cmp
sbb
out
sahf
out
popa
jo
aam
push
test
cwtl
cmc
mov
insl
in
dec
sbb
subb
test
cmp
sbb
mov
inc
push
mov
stos
mov
imul
lret
pop
cmp
nop
jbe
sub
pop
or
sub
ficomps
insl
jns
inc
push
jnp
insl
xor
mov
fs
stc
push
mov
dec
rcrb
dec
jne
jecxz
stos
sbb
xchg
shr
mov
pop
inc
push
adc
lock
iret
xor
mov
jge
sub
lods
subl
mov
scas
frstor
int
adc
jno
xor
cmpsl
test
xchg
fs
cmp
inc
cwtl
cmp
push
cld
mulb
pop
pop
xchg
pop
jmp
jno
push
addb
inc
popa
xor
fwait
ds
inc
pusha
out
frstor
lss
mov
sti
mov
call
jno
in
pop
mov
sbb
bound
cmp
adc
cli
pusha
fcompl
push
lods
lret
lcall
sub
pop
stc
aas
jne
arpl
lods
add
mov
or
mov
loopne
std
sub
pop
rorb
jne
das
popa
cltd
and
jecxz
outsb
jmp
sti
cli
fcmovnu
mov
addr16
inc
inc
sahf
xor
int
push
hlt
add
inc
inc
sub
mov
lea
scas
mov
push
xor
je
xchg
push
sub
or
mov
nop
pop
mov
in
xchg
xchg
inc
and
xlat
sub
or
xchg
sub
xchg
ret
pusha
ss
xchg
xor
push
mov
pop
les
sbb
test
sahf
sbb
mov
add
movl
fucom
jne
jno
and
mov
xchg
mov
fisttpll
adc
or
data16
scas
mov
in
dec
adcb
add
jecxz
es
xchg
cmp
inc
test
es
mov
adc
mov
das
mov
mov
push
shrb
sbb
mov
mov
pushf
or
cmp
int3
xchg
jns
lret
fsubl
in
xchg
and
add
cli
mov
push
inc
mov
push
rcrl
out
lret
movsb
pop
jne
adc
pop
sub
cwtl
das
inc
insb
hlt
dec
sbb
sub
dec
sbb
dec
lea
call
push
cmc
or
ret
sub
stos
push
adc
fwait
and
aas
and
loope
push
xchg
or
jmp
xchg
leave
push
push
sbb
stos
lahf
movsb
fcomps
andb
lods
xorl
sbb
nop
jnp
adc
out
mov
cmp
and
xchg
jbe
mov
data16
mov
sub
cmp
mov
fdivrs
mov
or
push
hlt
mov
rclb
and
in
cmp
nop
gs
sbb
xlat
jnp
nop
push
call
jmp
nopl
mov
or
pusha
ret
mov
push
aas
mov
inc
push
in
aaa
pop
adc
fstpl
repz
jo
adc
sbb
lret
inc
test
jmp
insb
inc
inc
jo
xchg
dec
xchg
jmp
lahf
xor
sub
ss
add
test
inc
pop
mov
inc
mov
stos
inc
pop
xchg
dec
fistl
jns
xor
nop
jns
dec
nop
daa
jge
icebp
movsl
push
scas
push
cmpsb
mov
mov
outsl
or
push
clc
ret
outsl
lock
sbb
push
push
repnz
jbe
push
jmp
adc
rcr
and
cli
pushf
sub
jno
or
ds
sub
cmp
adc
negb
and
mov
decl
in
mov
push
imul
mov
push
cwtl
fnstcw
push
test
push
add
sub
xchg
lock
into
stc
xchg
imul
mov
xchg
cmp
arpl
mov
and
mov
bound
inc
and
mov
fwait
cs
pop
mov
mov
int3
push
mov
mov
sbb
cmp
stos
inc
stc
pop
sbb
imul
fwait
mov
and
inc
movsl
cmp
hlt
push
test
push
dec
in
inc
or
std
rcrl
out
push
dec
cmp
fdivl
push
or
xchg
cld
lcall
jno
lcall
mov
xchg
push
pop
mov
mov
xchg
scas
test
scas
push
adc
jns
fwait
adc
xchg
push
dec
sub
loopne
cmp
adc
and
mov
in
lahf
fwait
cmpsl
cmpsb
xchg
cmp
fnsave
mov
cltd
mov
not
loopne
xor
push
insl
jge
sub
or
pop
shr
inc
data16
nop
pop
lret
sub
repnz
outsl
rorb
out
popf
loope
pop
ja
inc
mov
jle
jnp
jbe
int
mov
or
xlat
pop
push
inc
dec
frstor
nop
cmp
xor
rclb
fisubs
mov
jmp
push
cmp
inc
pushf
ljmp
pusha
lds
in
daa
out
repz
or
lcall
cwtl
cs
pushf
mov
xor
and
jg
jg
jmp
lahf
adc
mov
test
lret
push
jb
cmp
cwtl
pop
jne
jecxz
lock
lods
xchg
pop
push
out
sbb
ficoml
dec
add
mov
fnsave
test
inc
push
or
rcll
scas
and
stos
lock
xorb
cmp
mov
cwtl
cmp
push
test
rcr
int3
rorb
and
popf
mov
inc
adc
lret
pop
stc
pop
adc
cmp
xlat
inc
fstl
les
xor
pusha
and
ds
mov
mov
mov
cltd
in
rcll
pop
sbb
xor
xor
mov
jo
xchg
pop
cwtd
or
inc
push
aas
pop
sbb
mov
inc
gs
aam
mov
jp
or
mov
xchg
lret
shll
inc
gs
rolb
test
jb
sbb
or
mov
ret
outsb
stos
jmp
popa
js
lahf
mov
cmp
aad
dec
sbb
mov
ja
and
pop
adc
cld
addr16
in
fnstsw
fistl
mov
and
into
xchg
out
xor
pusha
mov
jnp
icebp
cwtl
outsl
dec
dec
dec
push
pop
cmp
aad
jecxz
lcall
ljmp
fldt
mov
or
cmpsb
das
mov
lret
mov
dec
xchg
sbb
dec
popa
divl
or
add
inc
mov
mov
movsl
jg
adc
iret
aad
dec
mov
xor
cmp
sbb
js
fdivrs
jo
out
ret
test
xor
sub
pop
aaa
idivb
lods
adc
out
jnp
rcl
lds
pop
adc
cs
test
sub
repz
lods
bound
ds
fs
xchg
push
out
adc
bts
dec
out
jae
adc
leave
es
loope
into
and
sub
jge
test
in
and
imul
jne
xlat
sbb
jge
mov
dec
std
pop
sbb
cmp
jb
xchg
sarl
cmc
mov
push
stos
rolb
icebp
insb
xor
insl
mov
movsl
out
mov
mov
sub
cmc
fadds
pop
or
sub
popa
adc
sar
and
repnz
pop
out
sub
loope
xor
arpl
jns
sbb
jg
adc
mov
add
xor
push
jae
fsubs
outsl
lods
dec
mov
push
mov
test
fwait
fmuls
and
stc
je
mov
jmp
push
pop
outsb
adc
lret
pop
mov
lods
pop
out
dec
cltd
test
adc
divb
jl
mov
add
cmc
daa
ret
pop
shl
dec
xchg
std
in
push
out
dec
ljmp
aas
dec
adc
js
mov
mov
pop
icebp
push
inc
test
aad
xor
cmp
imul
orl
arpl
or
dec
sti
mov
adc
jp
nop
repz
push
mov
int3
mov
xorb
sub
lcall
leave
pop
shlb
ds
and
and
jbe
notb
jbe
mov
repz
cmpsb
xor
rcrb
adc
inc
fbstp
mov
lret
leave
pop
repnz
out
xor
or
les
mov
xchg
jp
nop
mov
sub
jo
mov
add
sbb
add
or
mov
fstpt
lds
std
mov
out
mov
adc
sub
enter
test
xchg
test
xchg
mov
icebp
mov
in
xchg
imul
imul
xor
push
inc
inc
inc
dec
and
xor
int
pusha
inc
mov
lcall
add
test
inc
xchg
pop
inc
pop
lea
lahf
xchg
jecxz
mov
xchg
in
sub
sub
jg
or
sbb
adcl
outsl
lea
subb
into
mov
pop
iret
mov
jno
or
jb
sbb
sbb
jp
and
pop
cmc
push
sub
cmpsl
ds
dec
fisubs
fistpll
sub
jae
cld
popa
aad
fs
aam
or
and
cmp
cmp
jg
fldenv
add
fistpll
jno
mov
movsb
dec
add
sbbb
jmp
hlt
es
or
push
mov
adc
sar
scas
arpl
xchg
or
sbb
sub
and
cmp
xchg
sub
je
loop
arpl
dec
out
test
ss
mov
outsb
mov
jmp
int3
outsb
adc
sbb
aad
insl
mov
or
mov
sbb
add
js
sub
mov
add
jno
inc
gs
mov
lock
jae
test
inc
sbb
push
ss
out
popf
jo
sbb
les
fldt
push
jl
adc
fs
fimull
fwait
mov
icebp
addr16
lds
jge
cmp
add
into
push
sbb
cld
frstor
xor
les
mov
mov
sub
lcall
jmp
or
int
jecxz
pop
popa
test
fistl
cmp
mov
pushf
imul
fs
stc
mov
js
push
xchg
pushf
cmp
jp
add
xor
adc
lods
negl
pop
loopne
fwait
fimull
gs
stc
lret
push
add
inc
pushf
leave
pusha
into
popfw
stc
lret
mov
xor
or
frstor
out
cltd
out
lret
stos
mov
lods
das
inc
dec
jecxz
pop
inc
ficoml
jge
ja
popa
xor
sbb
enter
clc
bound
out
daa
mov
shlb
cmp
subb
test
mov
fwait
and
xor
jmp
sbb
and
mov
mov
insb
inc
daa
outsl
ljmp
jo
dec
loop
xchg
test
mov
ss
leave
dec
dec
push
inc
pop
lock
and
adc
mov
cmp
jge
mov
fstpl
dec
sub
ja
jnp
fnsave
xchg
add
inc
pusha
divl
cld
xchg
push
mov
lea
pop
xor
cmp
stos
jmp
call
adc
pop
pusha
ret
pop
xchg
inc
xor
sub
std
lcall
leave
sub
mov
jmp
and
and
adc
lahf
ss
sahf
xchg
out
scas
fidivl
outsl
mov
sahf
lock
leave
insl
sbb
mov
mov
xchg
dec
push
ret
mov
les
addr16
cwtl
in
jns
mov
inc
fidivl
cmp
push
cld
cltd
xor
jbe
out
cmpsl
dec
mov
jle
mov
lods
jg
or
rorl
add
push
call
fisttps
test
ss
cwtl
adc
cmp
pusha
divl
push
jle
test
cmpsb
cmp
in
sti
xchg
sub
dec
mov
jl
cmpsl
lea
adc
sbb
das
sub
cmp
jo
movsl
cmp
movsl
push
movsl
mov
pop
in
sub
and
xchg
cmp
lahf
sub
mov
and
add
mov
mov
andb
outsl
call
or
mov
adc
pop
push
sbb
fwait
xchg
pop
mov
mov
cmp
data16
pop
mov
jmp
cwtl
sbb
cmp
mov
int
mov
lcall
pop
in
fwait
xor
andb
xor
push
call
fcoml
jo
dec
std
mov
sub
xchg
pop
xor
repz
fnstcw
lcall
lock
out
xchg
shrb
inc
outsb
add
and
xchg
sub
push
adc
mov
enter
addr16
stos
inc
mov
mov
imul
xchg
push
mov
lahf
pop
in
cmp
jnp
mov
aam
jns
xchg
gs
pop
icebp
push
xlat
xchg
mov
ret
idivl
jmp
inc
leave
dec
jecxz
bound
cwtl
and
or
js
mov
adc
movsl
inc
int
clc
cli
xchg
xchg
sbb
iret
dec
mov
dec
jecxz
je
lahf
add
bound
rolb
pop
pop
hlt
inc
mov
cwtl
in
in
test
mov
or
push
call
imul
stc
and
roll
xchg
jne
in
subl
xchg
sub
jns
insl
sbb
shrb
mul
ja
xchg
ljmp
lock
inc
stos
inc
ja
out
sbb
je
fs
and
incb
cmp
pop
es
std
in
loope
xor
in
jecxz
and
mov
sub
cmpsl
and
daa
mov
jnp
add
flds
popf
cmp
mov
jecxz
movsl
adc
jne
inc
inc
jp
jns
out
xchg
movsl
in
sbb
xchg
sub
jb
push
lods
adc
icebp
mov
inc
clc
je
out
adc
add
inc
inc
cmp
je
ds
mov
scas
jecxz
adc
imul
dec
adc
punpckhdq
cmp
in
mov
repz
mov
or
cltd
xor
mov
push
jmp
ss
sub
and
cmp
cs
lcall
call
sub
icebp
sbbb
scas
inc
fstp
cli
mov
pushl
mov
mov
xor
dec
jne
dec
in
stos
jle
fildl
mov
sbb
xor
and
nop
daa
jae
sub
das
jbe
aad
sub
xchg
sub
inc
je
ja
cmp
sub
in
test
dec
xchg
sub
jl
cmpsb
sub
sub
icebp
test
sub
and
jge
xor
adc
sbb
out
inc
jo
jbe
mov
sbb
cmp
rorl
popa
jbe
add
and
adc
inc
dec
sbbb
xlat
ss
scas
mov
fists
jae
inc
dec
out
jl
xchg
sub
lods
and
inc
aaa
mov
data16
sub
push
mov
adc
push
xor
xchg
sub
mov
mov
adc
jle
insl
jae
mov
adc
jmp
aad
test
das
push
sub
repz
mov
mov
cs
sub
dec
in
lret
testl
fs
icebp
jo
pop
mul
movsl
mov
fdivs
fwait
xor
je
jnp
jnp
mov
fsubrs
push
out
clc
sbb
ds
lods
imul
test
pusha
divl
fdivrs
or
and
dec
sub
cmp
mov
push
mov
pop
icebp
lock
mov
les
inc
push
gs
loop
jno
ret
jae
jmp
push
push
movsl
cmp
int3
arpl
sahf
xor
xchg
mov
popf
call
or
jns
xor
push
mov
movsb
fbld
mov
clc
sub
sub
dec
dec
in
cmpsl
shrl
popf
int
lret
mull
and
sbb
jg
icebp
mov
jnp
lret
nop
icebp
mov
jmp
sbb
cmp
fmul
mov
cli
push
fistps
xor
adc
inc
out
adcb
fidivrs
push
add
aaa
das
push
out
pop
test
xchg
imul
sub
xchg
pop
push
and
push
fwait
xor
leave
das
stc
pop
push
jg
xchg
dec
in
lcall
pusha
in
jmp
xor
shll
add
pushf
xor
adc
jecxz
sub
mov
mov
and
insb
add
stos
add
or
aas
mov
mov
mov
sub
or
iret
out
or
xchg
mov
xor
fcmovnb
fisttpl
mov
dec
pop
add
add
stos
push
fwait
xor
stos
ret
pop
loope
xor
dec
pop
inc
pop
cmp
std
lcall
sbb
mov
scas
in
inc
pop
dec
add
shr
fwait
pop
in
mov
xchg
push
ja
inc
std
sbb
sub
push
lahf
dec
jo
jl
lret
loop
popf
mov
lret
push
pusha
ja
in
popf
mov
jmp
xchg
ds
bound
hlt
or
xchg
cld
xchg
ret
or
movsl
and
dec
xor
jl
cwtl
jb
into
mul
jp
out
dec
adc
aas
mov
insl
scas
xchg
faddl
testl
test
mov
push
sbb
dec
loop
bndldx
jb
or
ret
mov
fld1
out
cwtl
adc
mov
cmp
pop
mov
mov
daa
ljmp
inc
enter
imul
es
shlb
ss
shlb
negb
scas
jle
push
cmp
addr16
data16
cld
or
push
jg
and
daa
cmp
inc
andl
pop
cmpsl
sub
or
mov
cmp
mov
test
outsl
and
roll
movsb
andb
test
lret
std
pushf
jmp
xchg
rorb
lds
aas
rorl
sub
mov
out
and
mov
sbb
fsubrs
lock
mov
and
popa
mov
adc
xchg
fs
sub
add
mov
addb
mov
inc
aas
xchg
push
cmp
imul
inc
pusha
mov
adc
mov
sub
bound
cmc
cmp
cmpsl
cmp
bound
add
scas
sub
adc
mov
in
pop
enter
sub
stc
inc
shlb
cld
xor
test
in
jle
loop
mov
imul
fstpl
imul
adc
dec
out
pop
xchg
add
push
inc
xchg
test
mov
sub
inc
xchg
and
mov
mov
es
lods
pop
cmp
jo
pop
mov
ret
adc
jmp
mov
xchg
jge
mov
cltd
xor
cli
inc
xchg
data16
xchg
xchg
xor
hlt
decb
str
ret
xchg
add
add
test
xor
in
aaa
mov
and
and
popf
pushf
sbb
sbb
mov
clc
sub
out
rol
shrl
mov
loopne
aad
or
lret
pop
mov
in
repnz
and
idivl
and
mov
or
jns
fcoms
in
sbb
add
xchg
sub
or
and
pop
into
xorl
jb
aam
pushf
push
dec
jecxz
cli
mov
fdivrl
mov
add
push
mov
in
jno
xorl
iret
or
aas
in
sub
sub
pushf
pop
add
movsl
sbb
jnp
ret
sub
xchg
mov
sbb
cmpsb
popa
and
mov
mov
mov
mov
pop
mov
ja
dec
aas
test
dec
cmpb
scas
jne
cmpsb
cmp
adc
clc
xchg
andb
pop
add
xor
sub
and
cld
adc
ret
mov
out
loope
jo
cmp
lock
and
int3
jbe
out
leave
data16
push
mov
sti
ljmp
scas
push
inc
lds
in
repnz
sub
mov
or
popf
fsubs
jbe
jae
dec
mov
shlb
dec
cmp
fisttps
push
lret
out
in
je
into
aaa
test
cs
iret
mov
adc
jo
lock
add
fimuls
fists
xor
mov
test
and
jo
pop
xor
cwtl
pop
mov
jecxz
inc
mov
pop
jecxz
add
jge
adc
testl
dec
adc
js
and
arpl
push
inc
flds
xor
and
jg
lahf
stc
and
lds
push
sbb
mov
jno
lret
lea
cmp
sub
sub
or
mov
xchg
out
out
pop
pop
popa
lahf
xorb
sbb
jne
xchg
dec
cld
xchg
jl
pop
iret
jge
aaa
fcompl
pusha
inc
int
lahf
xor
mov
imul
dec
das
adc
push
push
lock
push
aaa
imulb
lock
daa
push
mov
jnp
push
inc
divl
lret
cmp
fnstenv
out
rorb
cmpsl
jae
ror
mov
jmp
mov
ja
cltd
xchg
mov
sub
cltd
xchg
fistpll
inc
lods
mov
push
mov
imul
cwtl
fldl
int3
inc
rolb
leave
fimuls
jo
stos
fsubl
in
jecxz
inc
fndisi(8087
add
test
scas
xsha256
cmpsb
xchg
mov
aad
or
jge
sub
sub
popf
imul
out
dec
sbbb
mov
out
jl
flds
push
pop
pop
mov
push
sub
dec
ja
sahf
xor
xchg
mov
sahf
popa
mov
repz
ja
jl
fnstenv
aam
mov
push
nop
lods
cmpsb
jg
pop
inc
int
lahf
movsl
insl
sbb
xor
movsl
sahf
mov
not
inc
xchg
xchg
bound
insb
add
aam
cltd
fiadds
je
in
cltd
adc
std
mov
inc
mov
sub
or
push
in
ss
or
inc
sub
jnp
fs
pop
inc
gs
cmp
dec
insb
aad
push
dec
mov
xchg
dec
xchg
mov
sub
mov
xor
sti
jnp
pop
mov
mov
testl
aaa
jmp
cli
jne
push
inc
scas
dec
int
push
ljmp
cmp
jns
jb
lea
cltd
inc
sbb
movsl
dec
pop
shlb
dec
loope
adcb
mov
mov
xchg
imull
and
fiadds
repz
cmp
jno
stos
dec
cs
mov
in
add
cmp
mov
mov
out
subb
mov
shll
insl
add
cmp
pushf
std
jns
cli
push
shr
ret
sbbb
test
cwtl
mov
pop
jbe
stos
xchg
hlt
gs
fcomp
pop
leave
call
fidivs
int
sub
in
push
outsl
add
lods
or
or
and
adc
es
dec
jb
cli
xchg
cmpsb
inc
ret
cmp
mov
jecxz
jne
inc
jecxz
pop
scas
cs
wbinvd
fs
mov
shll
push
in
iret
mov
push
xor
cmpsl
ljmp
loopne
or
add
or
andl
test
test
ljmp
fs
ja
xor
jmp
jge
jp
and
mov
test
and
scas
nop
adc
out
jno
andl
scas
stos
pop
testb
push
enter
jmp
fsubrs
loope
fdivrs
jecxz
push
push
aas
aam
stos
xchg
xor
xchg
dec
jecxz
sub
cmp
rcll
unpcklps
cmp
add
lods
or
xchg
addl
xchg
addl
push
mov
jecxz
arpl
shrl
daa
aad
xchg
in
outsb
sahf
fcompl
lds
sahf
shlb
out
sti
xchg
leave
pop
inc
mov
fists
test
call
scas
rorl
sbb
les
adc
ss
mov
stos
data16
pop
iret
arpl
mov
popa
push
shlb
and
jg
idivl
jmp
idivb
icebp
pop
or
test
shrl
mov
cmc
adc
cmc
stos
les
roll
jp
out
mov
cltd
adc
sbb
jnp
in
enter
mov
hlt
sbb
das
dec
fimuls
imul
int
mov
pop
fwait
sbb
mov
pop
fcomps
loop
mov
mov
test
lcall
jl
mov
dec
in
stos
dec
mov
pop
sub
pop
sbbl
push
cmp
insl
sbb
mov
icebp
push
jmp
sbb
xor
in
das
mov
test
ja
movsl
in
inc
repz
jne
xor
mov
in
lahf
xorl
jae
mov
mulb
shll
ret
sarb
sub
das
test
push
mov
leave
mov
fidivrl
mov
scas
ja
push
cli
lret
outsl
add
out
sarb
mov
dec
mov
in
mov
lret
stos
enter
mov
cli
aad
lret
sarb
enter
leave
mov
xor
inc
or
sbb
inc
lods
les
clc
sar
mov
leave
jbe
in
sbb
call
cmp
test
sti
cs
out
das
mov
shrb
not
aas
xlat
sub
dec
mov
mov
out
cmp
clc
xchg
mov
cmp
test
lcall
mov
in
xchg
sbb
cltd
ds
into
popa
inc
fiadds
pushf
nop
int
push
adc
ret
xlat
xor
pusha
stos
in
ds
mov
or
test
out
stc
mov
sahf
xchg
cwtl
clc
and
push
xchg
xchg
call
ficoml
stos
push
mov
jge
inc
int
xor
aas
repz
pushf
xor
push
jecxz,pt
pusha
push
xchg
ss
adc
jbe
insb
mov
xchg
push
jmp
cmpsl
movsb
pop
hlt
lods
das
icebp
adc
or
ret
adc
stc
in
sub
jae
popa
xchg
pop
add
dec
jns
addb
pop
std
jae
pop
movsl
lret
mov
mov
push
cmpsb
pop
pushf
iret
pop
or
repz
inc
and
inc
cmc
xor
loopne
hlt
pop
int3
and
stos
pop
push
aas
aad
test
xchg
xchg
pushf
lcall
sbb
cltd
loop
xchg
loope
pusha
idivl
pusha
xchg
jnp
xchg
inc
cmpsl
adc
ds
cs
cmc
add
mov
in
sbb
mov
adc
sub
out
lret
stos
rcrl
mov
push
mov
adc
outsl
fldenv
mov
ja
cmpsb
push
lahf
pop
in
push
jo
cwtl
push
out
lods
push
xlat
dec
lahf
call
cmp
jmp
les
scas
mov
fidivl
xor
out
adcb
test
mov
jmp
orb
imul
movsb
cmp
lea
lret
dec
fwait
add
xor
or
jmp
adc
push
clc
mov
cli
xchg
into
jg
call
mov
sub
fmuls
scas
pop
cltd
mov
mov
mov
mov
fcom
and
mov
push
stos
data16
pop
sbbb
dec
xchg
mov
sub
mov
je
dec
incl
stc
mov
sbb
adc
sti
inc
test
lret
pop
sub
push
mov
and
sbb
test
pop
xor
push
hlt
jb
jns
mov
mov
push
sub
adc
arpl
cld
and
cmp
mov
rorl
or
lcall
push
add
mov
das
aaa
jne
aaa
push
jecxz
aaa
jns
sbb
aam
pop
imul
jmp
cmp
stos
mov
rcll
sbb
out
imull
shll
cli
rcrb
aad
mov
cmp
fucom
mov
sbb
fmul
mov
pop
mov
add
xor
into
push
jp
les
xor
mov
pop
cwtl
loopne
mov
push
mov
stos
out
nop
nop
pop
test
imul
xchg
dec
roll
hlt
xor
jmp
aas
cs
adc
mov
sbb
xchg
jle
insb
push
cld
cmp
push
fsubs
ja
ss
pop
lret
pop
test
or
push
inc
shrb
push
es
sub
mov
push
cmpsb
lods
loop,pt
jecxz
mov
movsb
sbb
sti
lods
insb
pushf
or
xor
add
ja
lahf
and
aad
popf
cld
and
mov
fists
icebp
out
and
cld
and
dec
add
pop
fisubs
jo
lret
bound
sti
test
enter
xor
xchg
or
cs
mov
ja
lcallw
sbb
out
and
int3
xor
jne
mov
outsl
push
fcoms
outsb
sahf
xor
mov
scas
dec
stos
mov
ljmp
hlt
negb
or
xchg
mov
inc
les
pop
ds
adc
sbb
push
fwait
in
sbb
mov
jmp
cli
and
add
push
xchg
mov
test
xchg
fxch
dec
loop
cltd
lods
scas
ret
into
in
push
in
test
cli
ja
nop
inc
stos
ja
addps
std
lret
mov
push
pop
inc
ret
jecxz,pt
push
movb
adc
aad
mov
inc
ret
xchg
aam
jbe
fmulp
mov
dec
ret
mov
cmp
enter
dec
leave
aas
imul
rclb
pop
sarl
subb
add
xchg
test
insl
lahf
mov
lock
adc
cltd
push
fldenv
push
shlb
inc
into
jle
or
xchg
out
inc
les
fstps
icebp
inc
ficompl
mov
ljmp
or
stos
fnsave
loopne
orb
adc
mov
dec
mov
repnz
mov
dec
mov
mov
js
xchg
xlat
fdivs
loop
lret
push
test
fnstsw
cld
add
push
cmpsb
sbb
mov
push
jns
cmp
insb
fsubl
xchg
addb
cmp
outsb
fwait
dec
ret
xor
adc
sub
fwait
xor
sbb
cltd
es
xlat
sbb
ret
sub
pop
in
cld
mov
pop
sarb
loope
cld
mov
inc
fcompl
rcl
pop
add
in
add
and
call
pop
movb
sbb
and
push
int
xchg
out
xchg
mov
dec
mov
xchg
arpl
xor
out
mov
das
mov
addr16
and
jb
outsl
xchg
out
adc
scas
movsb
push
inc
mov
stc
sub
lret
outsb
xor
xor
push
cli
in
jns
call
outsl
inc
lds
or
jae
push
push
xor
adc
xchg
ja
adcb
out
je
repnz
push
sbb
mov
into
mov
adc
sbb
push
addb
pop
push
mov
sbb
sbb
cmp
pop
das
std
and
push
fidivl
jecxz
mov
stos
loope
clc
ret
inc
fdivp
shr
xor
pop
lret
rcrb
icebp
shll
mov
mov
jmp
lods
and
and
dec
mov
xor
push
das
ficoms
xor
add
adc
pop
lods
add
es
imull
inc
inc
gs
pop
push
out
test
dec
cmpb
insb
mov
inc
xchg
xchg
jns
push
xor
add
bound
add
xchg
repnz
mov
xchg
jbe
sub
xchg
xchg
adc
cmp
sti
sub
sbb
xchg
mov
lret
inc
stos
mov
cmp
mov
jle
cmp
mov
loop
out
je
mov
push
xchg
iret
ds
stc
xor
lahf
pushl
sbb
out
sarl
sahf
loop
jl
pop
rcrl
mov
outsl
repnz
lock
lcall
fisttpl
pop
sahf
cmp
jbe
sub
test
popf
jle
sub
lea
push
jbe
push
dec
sub
push
test
mov
cmp
js
mov
jo
jge
fs
dec
xchg
xorb
xor
and
popf
jg
rorl
ss
cmp
stos
inc
push
rcll
xor
mov
ds
addb
loopne
push
in
test
addr16
pop
rorb
push
cmp
jg
sbb
xchg
leave
ja
push
test
xor
cmp
mov
icebp
add
and
push
mov
and
pushl
adc
push
adc
mov
movhps
lcall
jp
rorl
fwait
mov
stc
mov
rclb
mov
js
mov
in
je
aad
xchg
xchg
bnd
repz
and
jl
cli
adc
mov
xchg
cs
rcll
sub
flds
dec
jp
mov
xlat
xor
pop
lods
clc
jmp
jecxz
mov
xor
test
sub
cmpsl
arpl
add
dec
xchg
xlat
push
test
xchg
push
or
pop
cmpb
push
shrb
xchg
dec
cltd
add
inc
jo
push
cltd
xor
imul
or
jge
xchg
inc
xchg
out
pop
dec
xchg
mov
jmp
stos
outsl
xchg
or
jle
pop
xchg
mov
sbb
test
rclb
push
inc
sarl
jmp
or
xlat
xchg
sbb
stos
add
lahf
ljmp
dec
loopne
loopne
push
imul
adc
pusha
scas
cmp
and
push
fcoms
xor
call
call
cmp
sbb
jecxz
shll
mov
nop
sub
jmp
lods
lods
data16
dec
rorb
stos
sub
clc
test
inc
repnz
int
cltd
fdivs
or
sarb
outsl
aam
cmp
pop
stos
sbbb
int3
pop
insl
shll
jg
nop
mov
push
add
and
push
shlb
dec
jno
aas
push
mov
dec
insb
das
in
pusha
les
aaa
bound
inc
jae
andl
push
rcl
xor
xchg
lods
cmc
cmp
loop
cmpsb
ljmp
mov
push
or
lret
lret
cmp
fldcw
add
lods
fsubl
push
fwait
xchg
adc
shrb
test
add
add
ja
push
inc
xor
stc
xchg
dec
imul
jbe
shrl
xchg
cmp
mov
add
test
adc
dec
test
inc
cmp
add
test
aaa
out
mov
repnz
mov
jp
fdivs
lret
aas
push
shlb
lock
rcll
jecxz
shl
sub
push
xorl
hlt
mov
sbb
or
push
add
push
loop
mov
jg
pop
mov
mov
jno
inc
scas
addr16
or
push
test
aad
je
cmp
and
insl
lods
sub
idivb
sub
mov
sbb
call
sbb
aam
or
or
mov
cmc
js
daa
push
imulb
ja
movsb
pop
cmp
outsl
mov
dec
cmp
lock
mov
sub
and
push
dec
sub
dec
stos
inc
mov
jmp
mov
mov
das
movsb
jle
shlb
aad
mov
iret
cmp
fs
aas
aad
lods
xchg
imul
ja
addl
fwait
scas
test
and
out
push
mov
shll
fdivrs
dec
les
aaa
call
std
xor
ret
aam
jecxz
repz
daa
fsts
add
or
iret
xchg
in
ret
ja
xlat
mov
insb
add
push
rclb
pop
xchg
push
sub
inc
or
and
fisttpl
lret
cmp
scas
mov
dec
sbb
lds
xor
jno
mov
xchg
sbb
adcb
jg
or
mov
mov
adc
in
mov
cmp
fwait
xchg
sbb
lock
rcll
pop
repnz
test
shlb
jns
fcomps
icebp
cmp
js
mov
mulb
mov
scas
inc
popa
loope
mov
xorb
xchg
ja
fldt
push
or
or
aaa
sub
jno
push
push
lods
pop
xchg
inc
pop
icebp
pushl
aas
loop
mov
sub
sbb
push
cmp
inc
lds
mov
in
dec
cmc
push
addr16
or
es
pop
cmc
testl
f2xm1
inc
ret
sbb
fstpl
push
adc
fstpl
je
shrb
test
repz
adc
push
jecxz
push
fbld
inc
mov
scas
je
lcall
inc
in
xor
iret
xor
and
push
scas
dec
cltd
das
jns
jmp
ds
outsl
add
jns
and
jb
cltd
inc
inc
fldl
inc
jb
jne
cmpsl
subb
pop
lods
je
xchg
sub
xor
adc
arpl
out
lods
mov
push
in
pushl
adc
xor
les
mov
scas
cmpl
adcl
mov
push
jo
adc
dec
rorb
cmp
jnp
sarl
aas
inc
xlat
jo
rorb
lds
test
fisttpll
cmp
movsl
pusha
loope
in
or
xchg
jle
mov
pop
lret
mov
pop
add
pop
mov
fisubrl
jmp
ret
cmpsb
aaa
xlat
cmp
sbb
inc
jne
sti
and
mov
imul
mov
cmpb
leave
pushf
lahf
andb
xchg
jge
jbe
fwait
dec
aam
sbb
je
insl
fnsave
inc
mov
cli
adc
or
sbb
sub
insl
aam
popa
cmpsl
push
roll
push
xchg
jp
pop
push
mov
outsb
pop
test
imul
movsl
mov
xor
loop
inc
mov
loopne
aas
push
stos
outsl
cmpsl
jnp
pusha
sbb
xchg
mov
cmp
nop
fwait
mov
mov
insl
mov
jecxz
push
dec
cmp
inc
repnz
adc
test
push
sub
fwait
mov
scas
inc
push
bound
imul
xorb
pop
xorl
shrw
sub
fldt
subb
or
mov
sub
add
es
mov
repz
fsubrl
lret
sti
addr16
sbb
sbb
mov
aaa
mov
ret
hlt
pusha
cld
xchg
xchg
adc
sbb
lcall
mov
push
push
out
mov
jne
fistpl
in
nop
cld
xchg
sub
mov
or
dec
mov
addl
mov
mov
in
test
lods
iret
data16
mov
xor
or
push
movsl
sub
aas
gs
jo
inc
fisubrs
xchg
sbbl
dec
gs
jp
mov
sbb
cmp
cmp
mov
je
inc
mov
xchg
adc
sbb
sbb
sbb
or
jae
pop
loope
in
adc
sub
shrb
sub
fisubrl
subb
or
mov
sub
add
inc
frstor
shll
inc
fsubrl
leave
arpl
cli
mov
sbb
mov
aaa
mov
sarl
xchg
adc
je
mov
mov
addr16
xchg
cltd
add
shlb
push
push
out
xchg
iret
cmp
pop
push
in
sti
xchg
sub
dec
mov
addb
mov
mov
mov
in
test
stos
iret
data16
mov
xor
or
sbb
ds
outsl
testb
xchg
sbbl
dec
gs
jns
mov
sbb
jmp
or
cmp
mov
jne
adc
mov
xchg
arpl
mov
test
mov
sub
xchg
sub
pop
out
jp
rcrl
outsl
push
int
fbstp
out
mov
fistpll
mov
fwait
sbb
sbb
outsl
lcall
shr
rcrl
add
xor
dec
popf
push
sbbl
lock
outsb
add
and
mov
jb
xor
int3
xchg
inc
fld
in
ds
out
notl
inc
pop
mov
fdivrs
or
pushf
jae
das
pop
out
pusha
cmp
int
push
scas
fistl
mov
xor
loop
xchg
sub
add
cmp
pop
das
stos
pushf
imul
std
out
xchg
xchg
pop
jle
cmpsb
jge
loope
adc
add
pop
xor
push
jecxz
lret
jbe
cmp
clc
aad
fldl
mov
adc
cmpsl
push
dec
add
sbb
les
and
push
jecxz
bound
xor
inc
push
mov
pop
imul
aas
mov
rcl
inc
rcll
mov
and
fbstp
and
shll
cmpsl
jl
call
inc
inc
or
stc
push
test
les
ja
stc
push
push
pop
xrelease
ja
rorb
mov
adc
xchg
sbb
mov
fsubrs
push
add
in
add
cmp
mov
jecxz
jns
mov
daa
in
scas
idivb
jnp
jge
push
jl
gs
fisubl
in
sub
mov
loopne
xchg
je
push
pop
inc
lret
xorl
or
jae
xchg
out
loopne
fildll
call
mul
test
mov
fstps
fcomps
pop
cld
sbb
out
push
movsl
pop
data16
lret
int
mov
cmp
inc
mov
xor
daa
xor
cmpsb
mov
in
push
xchg
xlat
or
mov
mulb
imul
cmp
dec
movsb
xor
push
or
aas
mov
cmp
jbe
aam
add
push
jmp
mov
adc
mov
cwtl
mov
scas
push
sbb
sub
inc
dec
cmp
sub
outsb
xor
lret
mov
add
jo
sub
sub
push
lea
outsl
clc
cmp
test
jl
pop
add
hlt
arpl
lods
lods
lods
insb
fldt
cmp
xlat
mov
add
idiv
dec
in
dec
aad
jae
mov
pop
inc
inc
pop
mov
nop
out
mov
arpl
aaa
pushf
decl
dec
repz
mov
adc
mov
int3
xor
mov
fstl
pop
hlt
into
dec
push
mov
add
pushl
addl
add
sbb
aad
or
cltd
sub
cmp
add
pop
pop
pop
sub
mov
fs
xor
cmpsb
jl
sbb
pop
jmp
xchg
out
xchg
dec
loop
push
testb
jmp
xor
mov
dec
and
mov
rorl
and
sub
test
or
dec
jg
cmp
movsl
cmp
scas
iret
data16
ds
iret
leave
pusha
shl
sub
jo
jp
xchg
xchg
adc
and
sub
pop
mov
js
cld
dec
jecxz
mov
and
in
mov
pop
repnz
xor
jne
lret
jns
std
xchg
cld
xchg
leave
push
xchg
inc
mov
mov
lods
jb
xchg
add
rcll
rorb
inc
push
lods
je
jle
mov
cmp
dec
xchg
inc
or
fs
xor
jne
jle
push
inc
inc
adc
add
lcall
in
push
es
xor
std
pop
out
loopne
mov
rol
add
push
mov
mov
xchg
sub
jbe
jbe
fcmovnbe
aas
inc
push
or
push
adcl
fucom
jbe
nop
push
enter
jne
or
mov
or
push
add
cmp
imulb
adc
jne
or
inc
push
or
dec
fcoms
sbb
clc
lahf
sub
cmpl
push
mov
jmp
cli
popf
inc
fsubrs
push
jae
test
cmpsl
fs
sbb
into
xchg
sbb
test
mov
jge
test
dec
jbe
and
xchg
xor
cltd
pusha
enter
jae
or
dec
clc
pusha
ss
xchg
mov
scas
js
add
faddl
inc
xchg
cmp
test
mov
cmp
repz
jp
jo
add
popf
xchg
push
arpl
jg
adc
test
mov
mov
mov
pop
insl
xor
adc
arpl
mov
mov
js
dec
adc
mov
inc
or
lock
subb
shll
adc
fs
cmp
adc
cmp
das
inc
push
movsl
lods
jno
icebp
mov
pop
std
jecxz
sahf
mov
mov
cmp
sarl
lcall
sub
icebp
pop
insb
inc
jno
in
xorb
cli
fs
stos
or
mov
lods
push
or
cs
sbb
cwtl
mov
int
pusha
andl
mov
scas
mov
add
roll
stos
mov
mov
mov
in
movsb
mov
mov
push
jmp
test
sub
inc
and
enter
add
lret
cmpsb
icebp
sbb
add
dec
cmp
mov
inc
mov
lock
lret
sbb
movsb
jle
lcall
mov
sub
sub
aas
int3
pop
sbb
add
jnp
sub
sub
ds
inc
insb
add
sarb
fwait
outsb
in
loopne
fidivrl
stc
pop
neg
adc
mov
push
jno
loopne
test
outsb
bound
or
pop
clc
loopne
test
stos
sub
lock
imul
popa
mov
aam
adc
push
add
mov
popa
arpl
je
adc
jmp
shrb
xchg
mov
and
repnz
pusha
insl
data16
jnp
ja
mov
jecxz
int3
loop
mov
mov
mov
cltd
insl
data16
jp
xchg
xor
arpl
scas
rep
and
mov
js
xor
mov
mov
cmp
jns
pop
div
arpl
lods
dec
ljmp
xor
ret
xchg
sub
mov
leave
stos
sub
adc
imul
jmp
xchg
inc
and
rolb
iret
cwtl
mov
jb
je
outsl
and
sub
cwtl
cmp
and
pop
mov
es
std
pop
loop
sbb
add
cmp
xor
sub
mov
test
mov
mov
mov
adc
rep
mov
imul
pop
cli
aaa
cmp
jp
sub
daa
or
sbbl
lcall
cmp
jmp
or
popf
cld
ds
mov
test
jecxz
jo
popl
jne
iret
repnz
stos
inc
mov
cli
xchg
pop
or
test
test
mov
fucom
jno
aad
add
fldt
arpl
mov
mov
jge
dec
clc
pop
enter
jbe
inc
adc
jno
js
cmp
pusha
int3
test
je
pop
fdivrl
icebp
mov
mov
out
enter
fdivrl
mov
inc
pop
mov
push
jge
xorb
aad
or
fdivrl
adcl
pop
pop
fnstsw
xorl
rcrb
fnstsw
sbb
push
mov
push
mov
popa
fnstsw
jnp
fldcw
mov
xor
loop
fs
repz
jnp
push
fnstcw
xchg
imul
xlat
ss
fidivrl
adc
mulb
jnp
fidivrl
push
xor
cmp
rolb
push
ja
stos
jl
fnsave
bound
outsl
in
cs
cmpsl
loope
pop
sahf
lret
subl
enter
jp
outsl
jmp
mov
xchg
inc
dec
lods
imul
mov
movsl
das
test
jno
outsl
adc
mov
leave
dec
negb
xchg
aam
cmp
add
lods
ds
xchg
adc
add
lret
pop
lea
mov
sarb
test
or
stos
nop
sbb
dec
or
inc
adc
mov
shlb
add
mov
mov
mov
nop
xchg
add
adc
lret
mov
rcll
iret
sbb
add
hlt
pop
or
movsl
cmpsl
pop
jge
mov
enter
orb
pop
add
lods
xor
inc
or
push
mov
rolb
aam
imul
sbb
mov
mov
sbb
pop
add
push
push
hlt
pop
pop
test
xor
jecxz
inc
or
divb
lds
hlt
pop
dec
iret
xchg
aaa
cmp
sub
lret
das
scas
cld
jbe
xor
inc
movsb
push
add
fwait
out
outsb
in
mull
cmp
mov
lcall
std
pop
push
push
out
mov
xchg
lods
jmp
addb
lret
pusha
mov
jg
adc
sub
and
sti
je
mov
mov
addr16
out
enter
jns
cli
jge
lods
jb
imul
push
or
cmp
rcrb
arpl
lcall
test
or
push
cmp
pop
cltd
inc
adc
test
sub
cli
mov
jmp
lds
and
or
mov
and
mov
std
in
hlt
pop
mov
test
add
dec
daa
sub
push
adc
mov
fdivrs
mov
cmpb
xor
or
adc
lods
lea
addb
in
mov
test
and
push
je
into
adc
inc
adc
cmp
add
std
and
pop
mov
xor
adc
popa
clc
or
cmp
cltd
mov
dec
or
pop
cmpsl
sub
int
jno
iret
or
jbe
jge
pop
out
pusha
push
sti
fsincos
dec
push
pop
or
dec
adc
jle
push
or
add
shrl
testb
pop
sti
push
xor
jg
dec
push
push
insl
and
icebp
cmp
lods
fistpll
popf
xchg
call
aam
out
lahf
addr16
inc
clc
mov
lahf
in
insb
imul
inc
adc
vrcpps
in
and
fwait
loope
je
or
push
mov
out
mov
sbb
jl
les
inc
sub
sub
repz
mov
mov
jns
fsubs
aas
lds
inc
or
pop
push
stc
das
jmp
loopne
test
clc
imul
pop
xor
mov
flds
ret
xchg
push
cmpsl
pop
clc
pop
nop
cwtl
aaa
push
mov
jns
mov
ret
sub
clc
cmp
rolb
jecxz
fwait
adc
orb
nop
fnstcw
mov
adc
dec
push
mov
popa
pop
jecxz
pusha
jle
in
jge
and
popf
jmp
iret
cld
mov
xor
mov
dec
jae
fistl
fwait
mov
aas
test
mov
mov
sub
pop
stc
xchg
orl
push
mov
jb
inc
or
sarl
pushf
mul
sub
out
repnz
xchg
loop
sti
cli
iret
dec
or
jne
adc
in
insl
movsl
xor
cmpsb
push
dec
inc
movsb
xor
rclb
mov
cmp
fdivrl
and
jno
and
pop
and
cmp
mov
mov
or
inc
test
mov
and
loope
es
cmp
pop
pop
adc
aam
dec
inc
fdivrl
pop
repnz
dec
adc
mov
xchg
inc
or
je
cwtl
mov
lret
xchg
jge
mov
insl
mov
sarl
and
mov
jne
dec
cwtl
das
jp
cld
xchg
and
jnp
add
cmp
sbb
dec
xor
daa
fnstenv
push
add
or
jbe
mov
std
xchg
mov
mov
or
mov
gs
std
adc
push
nop
loop
lcall
hlt
movsb
xor
xor
adc
cmp
sub
and
adc
int
cmp
sbb
daa
loope
push
ret
aaa
xor
hlt
mov
jmp
test
outsl
cmp
dec
ljmp
cli
int
imul
sbb
aam
inc
pop
inc
pop
rcll
add
jno
nop
lret
xor
sbb
adc
xchg
mov
clc
add
and
lods
xor
mov
push
jne
push
jne
test
ja
pushf
call
sti
filds
nop
xlat
jl
movsb
dec
adc
pop
les
test
popa
mov
xchg
push
cmp
add
mov
sarl
scas
test
mov
pop
clc
or
in
push
fnstcw
inc
fwait
cmp
movsl
shl
jno
mov
out
or
js
mov
mov
test
push
sarb
mov
and
int
loopne
sbb
add
aad
and
and
xor
enter
pop
sbb
push
mov
fwait
jb
movsl
test
movsl
sub
movsb
std
bound
mov
pop
and
rorl
or
xchg
cltd
cmp
nop
lcall
xchg
xchg
push
repz
jmp
repnz
add
in
pop
adc
sub
and
gs
cmpsb
xor
mov
dec
or
arpl
lods
sub
and
xor
mov
popf
cmp
scas
inc
adc
cmp
push
sbb
lret
mov
mulb
mov
xor
adc
push
add
subb
and
js
mov
cmpsl
das
enter
gs
jo
jnp
gs
testl
xchg
xchg
sub
inc
or
lods
sbb
addr16
call
mov
popf
outsb
inc
flds
xor
test
es
mov
mov
pusha
hlt
pop
sub
jmp
lret
insl
aas
cmpsb
xor
les
mov
mov
pop
decl
das
mov
fwait
jg
into
pop
std
pusha
std
sbb
mov
jne
dec
adc
dec
inc
or
cvtdq2ps
leave
test
shrb
pop
out
nop
jmp
push
fwait
jns
jle
roll
sbb
cmpsl
stos
push
not
mov
dec
in
lret
sti
pop
and
dec
in
imul
mov
push
push
lret
or
pusha
movsl
sub
lcall
stos
in
fbstp
sub
jns
aas
jne
dec
add
push
or
test
mov
faddp
idivl
popf
mov
and
or
pop
data16
sarl
jno
rorl
test
and
xchg
aam
jl
leave
roll
stc
inc
or
dec
fildl
scas
test
hlt
mov
cmp
loope
nop
and
fsubs
push
and
js
out
xor
daa
cmpsl
enter
mov
imul
cmp
sbb
cmp
daa
fistpll
pop
sub
and
mov
xor
push
int
jnp
add
pusha
orb
rcll
sti
loopne
pop
inc
push
faddl
sbb
mov
lcall
xor
data16
sub
push
add
sbb
hlt
int
gs
adc
sbb
mov
fisttps
popa
out
xlat
cmp
mov
mov
aaa
ja
add
xlat
push
clc
repz
push
hlt
in
mov
jecxz
xchg
pop
add
pop
pop
cltd
cmp
test
xchg
or
les
js
cltd
cmp
data16
push
jne
ret
xor
mov
test
inc
bsr
mov
mov
aas
cltd
stc
mov
and
in
insl
ret
cmp
jle
pop
mov
faddl
cltd
lcall
stos
clc
bound
inc
or
stos
mov
adc
adc
cmp
pusha
std
popa
and
int
jle
jge
test
mov
mov
outsl
jne
or
xchg
xor
in
or
aam
inc
mov
out
movb
ret
sti
inc
adc
xchg
enter
xor
stos
xor
es
sbb
pmullw
lret
nop
jbe
push
cld
fisubs
mov
js
jg
adc
pop
dec
inc
inc
adc
cwtl
sub
fistl
into
mov
sarb
dec
aam
cmp
jo
pop
ret
ss
jo
add
dec
fstpl
rolb
imul
clc
pop
aaa
movsb
jns
shll
fdivrs
push
movsb
fimuls
jg
xor
jb
xor
pop
cmc
loop
sub
adc
inc
or
inc
scas
cmpsb
xor
xor
mov
jmp
ljmp
inc
or
orl
push
jl
xor
ja
sub
push
lahf
mov
mov
out
out
pop
filds
mov
mov
lcall
jns
outsb
test
cld
lds
adc
dec
in
cmp
sti
int
mov
sbb
sbb
mov
movsl
ljmp
xchg
sub
les
icebp
mov
push
jnp
jno
in
jl
dec
adc
outsb
adc
sti
jne
out
add
repz
pop
push
scas
xor
shl
outsb
mov
orl
loopne
fmul
cmp
jbe
mov
xchg
add
fildl
cmpsl
cltd
lock
dec
sarb
xchg
pop
clc
outsb
or
scas
push
jns
mov
lret
inc
push
mov
es
scas
xchg
adc
cli
imul
adc
std
pop
orl
ficomps
ret
movsl
ss
test
fisttpll
push
add
add
mov
pop
subb
fisttps
data16
jb
xchg
inc
mov
fwait
aaa
ret
stos
cmp
push
sti
inc
adc
int
sub
add
fcmovnu
mov
lret
sub
hlt
push
idivb
sbb
ja
call
pop
test
push
lcall
and
xchg
push
adc
jae
cmp
cmp
jb
inc
and
rcrb
in
addr16
ret
test
nop
inc
mov
movsl
jb
dec
sbb
sbb
xchg
loopne
xchg
dec
test
inc
push
dec
adc
add
pop
pop
sahf
aaa
insb
sbbb
jae
movsb
call
div
bound
cmc
popa
repz
in
imul
cli
loopne
in
cmp
int
inc
jg
sar
xchg
add
and
hlt
in
mov
push
push
inc
inc
jmp
pop
pop
xchg
xchg
aaa
or
into
xchg
mov
and
pop
and
test
push
xchg
ss
mov
ret
mov
sahf
test
repnz
jo
enter
pop
callw
mov
cs
xchg
cmp
mov
push
enter
jmp
fsubr
std
pop
in
ljmp
fdivl
inc
ret
imul
dec
push
inc
mov
rolb
push
pop
jmp
clc
pop
not
movntq
or
mov
dec
adc
daa
add
outsl
out
mov
jp
inc
and
pop
add
jp
icebp
sbb
cmp
gs
test
mov
lock
jmp
xor
adc
mov
movb
lret
sbb
mov
pop
jns
mov
push
add
lds
push
flds
mov
mov
mov
addb
bound
inc
shlb
dec
cmp
daa
adc
orb
neg
xchg
jb
in
insl
jge
xchg
aas
clc
push
adc
les
mov
cmp
in
out
stos
decl
push
sub
rolb
pop
or
push
orb
sub
rorl
push
add
test
xor
pop
lds
hlt
fstpl
jecxz
add
negb
mov
push
mov
cmc
lret
xchg
das
mov
sbb
insb
xchg
push
outsl
hlt
jbe
pop
int3
pop
gs
mov
jne
sbb
orb
out
cld
sub
jns
je
leave
xchg
leave
popa
dec
adc
mov
stos
sub
cltd
faddl
push
into
cld
pusha
mov
mov
lea
ret
add
std
and
fs
out
push
mov
test
cs
xchg
inc
adc
mov
push
out
xor
add
pop
inc
adc
sahf
or
insl
out
lret
add
add
pop
xchg
aad
jo
inc
adc
mov
lahf
jg
idivl
inc
out
or
xchg
sahf
ret
nop
aaa
into
rolb
sahf
lods
inc
adc
fdivrl
xor
loopne
in
adc
or
std
shrb
test
jnp
pop
fnstenv
cmp
fucomp
negb
add
cs
sub
ja
mov
cmc
loop
aad
mov
or
jno
cmpl
cmp
cs
pop
test
scas
cmpsb
mov
orb
dec
adc
repnz
fdecstp
dec
adc
adc
out
movsb
xor
sub
flds
hlt
pop
add
pop
mov
test
fcom
roll
adc
dec
adc
das
imul
xor
push
inc
pop
add
mov
testl
sbb
xchg
sarl
sub
test
ds
clc
jo
jae
loope
add
ficoml
les
call
pop
and
cmp
jb
mov
ds
pop
shrl
pusha
cld
adc
mov
clc
add
insl
fwait
jmp
aam
lret
xor
loopne
fwait
mov
sahf
aas
lds
sbb
gs
lcall
divb
dec
pop
iret
outsl
icebp
pusha
or
sub
loop
add
sar
into
mov
or
mull
daa
mov
jge
cwtl
inc
mov
aas
sahf
jne
xor
cld
pop
sub
mov
and
cs
jecxz
sarl
xchg
inc
hlt
or
enter
mov
xor
cmp
cmpsl
cmpsl
sub
js
add
loope
mov
mov
adcl
cmp
shrb
rol
pop
add
xchg
das
fwait
inc
jno
into
xchg
clc
popa
fldl
shrl
pushf
sub
sbb
loopne
les
dec
inc
faddl
xor
icebp
pop
rcrl
in
adc
sbb
mov
sbb
icebp
sub
or
dec
cmp
mov
mov
mov
jae
jns
mov
jae
add
or
mov
stc
mov
test
sti
xchg
push
in
mov
mov
pop
std
fldt
ret
gs
ss
dec
loopne
pop
cmp
mov
sbb
dec
frstor
fstps
sub
les
outsl
jmp
inc
out
imul
inc
adc
pop
inc
adc
lret
cmp
sbb
mov
mov
xchg
ja
push
xchg
into
das
std
clc
xchg
sub
pop
xor
into
sbb
movsb
jp
mov
add
add
lods
es
inc
or
ss
xchg
mov
mov
loop
mov
jnp
adc
cmpsl
inc
fidivrs
shrb
jno
mov
jp
add
shll
scas
sbb
pop
cli
mov
lahf
cmp
fcomps
pop
jg
popa
clc
pop
push
jecxz
cmpb
shl
pop
dec
nop
aas
movsl
mov
mov
push
shll
aad
addr16
push
pop
jne
xchg
outsb
sahf
inc
pop
jg
adc
stos
das
push
fwait
call
jmp
insb
push
stos
xor
mov
dec
adc
ret
leave
cmp
icebp
idiv
adc
adc
jl
mov
sub
fidivs
jmp
ret
mulb
dec
cmp
inc
out
ret
mov
adc
ret
or
sbb
adc
push
push
push
sub
add
sti
pop
xchg
add
fstpl
push
and
scas
fmuls
xor
mov
xor
jecxz
fnstcw
shrb
cwtl
add
leave
sbb
mov
cmp
push
sbb
loope
js
aas
lods
cmp
sub
xor
jp
out
mov
fsubs
cs
ret
dec
jge
ficompl
ret
and
psrlw
xor
mov
scas
mov
jbe
shlb
addr16
test
jb
add
enter
lock
or
mov
mov
ja
ds
in
je
dec
xchg
cmp
mov
adc
test
mov
cmp
outsb
repz
inc
stc
push
aas
lcall
mov
cmpsb
jno
fmuls
adcb
pop
shll
mov
lods
sub
mov
mov
lock
mov
and
sbb
inc
or
sub
aas
cmpsb
ret
cmp
into
xchg
inc
in
scas
rclb
test
mov
mov
mov
leave
cmp
das
cwtl
inc
lds
or
xchg
mov
sarb
xchg
pushf
inc
jno
imul
push
mov
lret
dec
adc
push
add
dec
cmp
inc
call
div
pusha
ret
dec
xchg
and
incl
int
jecxz
add
mov
ljmp
jp
pusha
ljmp
cmpl
lock
jge
lock
pushf
inc
inc
jg
mov
mov
pop
inc
inc
mov
add
and
adc
push
fstpt
jo
cmc
cmc
mov
xchg
cmp
in
jb
pop
filds
jg
call
push
xor
and
jb
clc
daa
cmpsl
jno
pop
add
addr16
out
cli
and
lods
sub
cmp
mov
pop
xchg
sbbl
iret
mov
or
push
daa
push
push
push
dec
mov
sbb
std
aam
lcall
xor
ja
mov
dec
leave
mov
add
je
repnz
adc
jo
jnp,pn
jl
xor
lcall
dec
adc
jg
loope
nop
cmp
repnz
clc
mov
fiaddl
xchg
push
scas
xor
lods
ss
fwait
push
int3
push
in
ret
xchg
xchg
fwait
loope
xchg
into
push
iret
pop
les
lahf
sbb
hlt
push
call
xor
out
inc
test
in
push
jg
xchg
mov
inc
or
mov
test
loop
lods
ss
repnz
adc
cmp
sbb
mov
cmp
and
mov
jns
jmp
call
cwtl
jns
ret
mov
cmp
stos
mov
push
xor
ret
daa
or
sbb
add
dec
xchg
xor
lea
xor
in
int
push
cmc
jb
dec
push
add
popf
mov
xchg
add
sub
and
mov
jb
and
loopne
dec
push
lahf
xor
dec
add
jmp
mov
inc
or
xor
pusha
mov
dec
push
mov
pop
adc
stos
aaa
adc
mov
mov
sub
mov
mov
std
pop
cs
inc
adc
ss
dec
mov
test
sbb
fistl
rorb
lcall
add
xor
popf
xor
push
inc
or
dec
gs
daa
lcall
jle
movsb
mov
into
repnz
popa
in
ja
cmc
jecxz
mov
stos
inc
adc
flds
xlat
push
repz
push
adc
jge
pop
push
add
mov
sarb
pop
sub
out
std
cli
xchg
xor
xlat
outsb
arpl
adc
je
push
inc
shlb
cwtl
pop
decl
mov
fs
sahf
aas
mov
jnp
push
cld
inc
outsl
sarb
xchg
push
stc
mov
xchg
scas
lea
adc
daa
mov
dec
iret
mov
scas
xor
fbld
push
out
not
jnp
sarb
mov
xchg
pop
pop
mov
or
fiaddl
xor
add
ja
fs
mov
mov
stos
movsl
mov
sarl
dec
mulb
lret
cmp
int
and
cmp
loopne
insb
sub
outsl
pop
xchg
mov
mov
add
ss
add
dec
cli
ficoml
inc
or
or
jnp
xchg
xor
mov
scas
fadds
sub
shlb
or
mov
aam
rcl
lahf
jnp
popf
ja,pt
scas
sub
outsb
xlat
test
add
sbb
leave
jle
lods
cs
data16
xchg
push
add
int
pop
mov
pop
mov
jae
shrl
ljmp
dec
cmpsl
das
push
ja
and
xchg
outsl
fidivrs
pop
orb
ja
cld
add
xchg
leave
jmp
arpl
push
jno
xchg
sarl
out
or
cmp
adcl
sub
cmp
xor
pop
pop
adc
cltd
aas
bound
jecxz
je
std
sub
je
icebp
movsb
cs
push
mov
insl
rorb
dec
loop
mov
ljmp
es
push
fsub
outsb
and
ret
xchg
mov
mov
xor
xor
les
mov
shrb
mov
cmpsl
sub
fdivl
sbb
nop
cmp
push
icebp
pop
and
xor
ds
adc
push
pop
add
cmp
lds
mov
mov
outsb
out
xchg
pop
xlat
test
iret
loopne
decl
loopne
test
in
outsb
mov
mov
lods
push
pop
push
mov
nop
xor
bound
jo
imul
adc
inc
cltd
inc
inc
inc
cmp
dec
mov
mov
mov
lahf
cmp
mov
mov
ds
shll
cmp
cmp
sti
pop
fisubs
sub
rcr
test
loope
mov
lahf
cmp
stos
fdivrl
or
jp
mov
shlb
sbb
nop
ffree
xchg
data16
add
daa
mov
mov
dec
push
jns
movsl
das
cltd
gs
push
imul
mov
imul
add
dec
push
add
cmp
and
dec
or
cmp
in
out
inc
dec
sbb
and
inc
enter
jmp
and
in
xor
mov
std
sbb
mov
pop
jle
ss
icebp
scas
sub
insl
dec
adc
int3
xor
sub
push
idivl
enter
push
pusha
xchg
xor
lods
int
les
mov
or
sub
jne
aas
cmpsb
sub
push
or
mov
stos
ss
lahf
push
cmp
push
and
sbb
scas
cmp
int3
cwtl
mov
sarl
and
data16
xchg
fs
jl
push
mov
mov
xchg
or
loop
in
sahf
inc
and
ja
jo
or
stc
push
pop
clc
sub
aaa
arpl
mov
aas
sahf
movsl
test
test
push
icebp
pusha
cld
jae
hlt
repz
or
lret
mov
mov
out
insl
movsl
test
icebp
pop
shl
rolb
sub
pushf
cmp
neg
jp
ljmp
ljmp
int
xchg
inc
mov
out
scas
test
jp
iret
and
loopne
loop
sbb
lods
sub
inc
fstpt
loope
cltd
inc
push
xor
inc
lcall
sbb
cmp
ja
les
cwtl
push
aam
adc
cmpsb
mov
pop
out
insb
sbb
lds
cs
mov
iret
mov
pop
cld
xor
lods
sub
into
sub
add
push
xor
xor
rolb
mov
mov
push
inc
inc
pop
cmc
jb
mov
sbb
sub
les
shrl
mov
scas
dec
add
test
cmp
mov
lea
cmpsl
movsb
xor
das
pushf
cmp
rorb
das
cmp
inc
push
xchg
sub
pop
enter
xchg
mov
inc
fucomp
daa
stc
pop
push
leave
nop
loopne
in
jae
icebp
mov
in
insl
fs
jg
push
mov
cli
cmp
ljmp
jnp
into
scas
xor
pop
jns
clc
mov
mov
loope
add
dec
int
in
jne
and
cwtl
repz
loop
add
shl
shrb
loope
mov
mov
movsl
out
test
sar
inc
pop
fildl
orb
loope
mov
mov
fidivl
jge
push
mov
lcall
lods
aad
loop
mov
fadds
aam
std
popa
fadds
dec
adc
adc
sub
fbld
cltd
orb
mov
lods
hlt
pop
sub
jo
insl
clc
jecxz
or
push
sbb
xchg
pop
dec
mov
jecxz
in
imul
shll
jp
or
add
xchg
cmp
adc
or
cmpsb
loope
sub
or
jmp
pop
pop
add
lock
scas
stos
call
fistpll
xchg
mov
mov
cmpsl
xchg
inc
int3
in
jl
adc
scas
sub
arpl
lea
push
sbb
and
fnstsw
cmp
dec
inc
dec
cli
pop
movsl
lahf
add
add
movsb
das
sbb
int
inc
subl
dec
and
mov
jb,pt
mov
mov
mov
daa
sahf
sbb
dec
or
int
gs
inc
xchg
jns
mov
and
adc
ret
and
sbb
popa
push
jmp
mul
jl
mov
add
push
xor
adc
inc
sbb
push
jl
movsl
sub
aas
test
loope
daa
stos
test
sub
and
fcomps
sarl
lret
cmp
negb
test
sub
pop
mov
rcrl
out
jae
add
inc
xor
mov
test
mov
pop
icebp
mov
fstpt
or
cs
sub
scas
xorl
pop
and
jno
sub
xchg
clc
movsl
lods
leave
push
lods
cli
int
ret
sbb
loop
insl
push
ljmp
jno
icebp
les
daa
inc
pop
cmpsb
cmp
xchg
push
pop
pushf
mov
loop
out
or
cmpb
or
xchg
mov
mov
in
inc
fnsave
push
pop
repz
push
fs
test
adc
stos
cwtl
das
mov
dec
xor
push
jg
aam
test
repnz
repz
xchg
and
inc
sbb
jl
ss
popf
dec
jecxz
jmp
jmp
lock
and
jb
jo
mov
jne
nop
daa
ret
xchg
cmpsb
cmp
push
ljmp
push
loop
outsl
mov
cmpl
jecxz
mov
xor
mov
addw
pop
icebp
mov
fidivrl
or
adcb
sub
sahf
xor
mov
mov
imul
daa
lock
clc
cmpsl
jp
movsl
stos
enter
int3
sub
std
sbb
loop
insb
push
ljmp
jno
lock
xchg
cmc
adc
cmp
xchg
imul
arpl
mov
jmp
cmp
add
mov
mov
scas
daa
mov
in
inc
fnsave
add
fs
test
adc
stos
cwtl
das
fdivr
mov
dec
xor
jle
aam
sbbl
mov
repnz
xchg
and
adc
ja
lds
ss
pushf
dec
jecxz
ljmp
and
mov
je
nop
daa
ret
cmp
adc
aaa
int3
arpl
loop
outsb
mov
cmpl
push
mov
xor
mov
addb
pop
icebp
mov
stc
add
daa
adcb
sub
sub
lods
jg
dec
mov
mov
imul
lock
stc
nop
cmpsb
js
movsl
test
lret
sti
sbb
int
sbb
loop
imul
imul
out
roll
inc
adc
cmp
xchg
les
mov
fs
or
cmpl
add
lea
mov
scas
sub
loop
inc
fidivs
add
push
gs
adcl
xchg
das
mov
dec
cs
mov
imul
repnz
icebp
sti
xchg
and
adc
jbe
lds
aaa
into
enter
lret
jmp
push
pop
cmp
or
mov
jb
xchg
sub
xchg
cmpsb
cmp
adc
les
ss
push
mov
cmpb
or
adc
daa
mov
arpl
pop
icebp
mov
arpl
add
js
or
sbbl
pop
jns
ss
jge
dec
scas
int3
mov
imul
and
xchg
cli
xchg
movsl
jbe
movsl
cmpsl
sbb
stc
sbb
into
dec
sbb
dec
push
in
fwait
insb
imul
out
mov
xchg
sub
cmpsb
cmp
xchg
les
mov
gs
loop
ljmp
cwtl
cmp
or
mov
cmp
fidivs
add
push
gs
adcb
mov
cwtl
das
fdecstp
mov
dec
sub
dec
aam
sbbb
mov
lock
xchg
and
adc
jne
lds
aaa
into
cltd
dec
jecxz
call
push
push
cmp
insl
aas
mov
jno
xchg
sub
xchg
cmpsb
cmp
adc
les
xor
loop
imul
xchg
mov
fistps
mov
cs
mov
bound
pop
icebp
mov
arpl
add
js
or
xchg
sub
stos
jl
dec
scas
lret
mov
imul
and
xchg
xchg
movsb
jne
movsl
cmpsb
lds
scas
test
ret
clc
pop
aaa
into
dec
sbb
dec
imul
popf
mov
xchg
lock
xchg
sub
cmpsb
cmp
xchg
les
mov
gs
loop
jmp
or
cwtl
cmp
mov
lea
aam
incb
das
add
push
gs
adcl
sbb
cmpsb
cwtl
das
fdiv
mov
dec
sub
mov
imul
je
mov
sti
xchg
and
adc
je
lds
aaa
into
cwtl
dec
jecxz
out
in
sbb
push
sbb
mov
jo
xchg
sub
loopne
inc
adc
les
xor
fs
jns
xchg
cmpb
or
cvtps2pi
mov
popa
jg
fdivl
shll
add
js
pop
and
sbb
xchg
sub
test
lret
cld
into
shrb
push
fdivl
and
xchg
cli
xchg
mov
les
scas
cmc
sub
notl
aaa
into
inc
sbb
dec
push
imul
in
mov
xchg
sub
adc
inc
xchg
arpl
pop
xchg
mov
gs
loop
call
or
cwtl
cmp
mov
mov
cmp
fisubrs
add
dec
gs
adcb
test
cwtl
das
xlat
hlt
mov
dec
sub
push
jp
aam
jle
fnsave
repnz
out
sti
xchg
and
adc
jae
lds
aaa
into
lds
push
in
pop
ljmp
imul
sub
fildll
pop
push
xor
fs
loop
imul
or
push
sub
mov
pusha
jle
fsubrl
shlb
add
js
push
and
sub
test
mov
lods
leave
mov
imul
and
mov
cli
xchg
mov
ret
repz
into
inc
pop
dec
jecxz
push
in
xchg
imul
ljmp
sub
pop
mov
nop
lds
into
gs
jecxz
out
in
test
or
cltd
cmp
mov
mov
ds
sti
inc
fisubrs
pop
repz
cld
jg
jp
andl
das
repz
dec
sub
push
jns
aam
jge
fnsave
repnz
in
sti
xchg
pop
repnz
jb
lds
aaa
into
les
push
in
push
jmp
jae
push
mov
outsb
mov
cmp
adc
les
xor
fs
push
mov
xchg
mov
fcompl
mov
sub
mov
pop
jge
fsubrl
iret
arpl
add
js
add
es
sub
cmpsl
jns
dec
stos
enter
int3
shrb
sbb
jae
pop
icebp
mov
cli
xchg
mov
rcrl
repnz
into
inc
push
dec
jecxz
gs
in
xchg
push
jae
jmp
or
ds
pop
mov
popa
lds
into
gs
jecxz
out
in
test
push
or
mov
ds
cli
inc
fisubrs
pop
repz
dec
gs
jle
jp
sbbb
das
aad
mov
dec
sub
push
js
aam
jl
fnsave
repnz
in
sti
xchg
push
icebp
adc
jno
lds
into
ret
xchg
dec
jecxz
in
in
adc
aaa
jae
imul
xchg
sub
scas
inc
psrad
pop
adc
int
arpl
jmp
mov
add
or
push
mov
sub
mov
pop
jl
fsubrl
into
arpl
call
js
add
sbbb
and
sub
cmpsb
ja
dec
test
lret
cld
sbb
je
sbb
sti
xchg
lahf
jo
cmpsb
mov
ret
repz
iret
inc
adc
jecxz
fs
in
xchg
pushw
cwtl
mov
or
mov
xchg
sub
or
ds
mov
mov
pop
xchg
scas
iret
data16
jecxz
in
out
test
or
xchg
mov
cmpsl
sub
fsubrs
dec
fildll
cld
pop
repz
dec
jp
sbbb
das
shl
mov
dec
daa
inc
rclb
aam
jp
fidivs
fwait
repnz
jmp
xchg
sbb
aas
sbb
jb
cmp
ret
jecxz
jecxz
in
adc
push
sbb
je
push
mov
cmp
push
loopne
pop
adc
into
bound
loop
gs
mov
add
pop
fstps
mov
sub
mov
pop
jnp
fs
dec
js
add
sbbl
and
cmp
mov
imul
sbb
mov
cld
xchg
sahf
outsb
lahf
mov
sub
rolb
dec
jecxz
arpl
xchg
fs
xchg
mov
or
mov
pop
jmp
or
dec
lea
pop
scas
shlb
mov
jp
add
xchg
add
cltd
xor
or
mov
cmpsb
sub
xlat
cmpsl
ds
clc
dec
loopne
cli
pop
repz
jl
jp
jle
test
lahf
cwtl
das
shl
mov
dec
and
inc
aam
js
fbstp
cltd
repnz
ljmp
push
sbb
jo
cmp
rcll
out
adc
push
push
xor
mov
imul
mov
or
das
iret
popaw
xor
jns
sub
mov
add
push
xlat
push
mov
sub
rcrb
rcrl
inc
fisubrs
int3
gs
std
int
ud0
test
push
and
cmp
rclb
shrl
pop
fbstp
sbb
mov
std
xchg
pushf
insb
adc
out
mov
cmp
inc
adc
inc
popa
pop
out
xchg
bound
xchg
mov
or
out
xchg
sub
or
dec
mov
pop
lea
jnp
out
xchg
add
lcall
and
aad
aas
xlat
testb
stc
pop
hlt
sub
jp
jnp
jge
test
out
mov
dec
and
rcrl
aad
ja
fbstp
cwtl
repz
call
adc
insl
ds
outsl
mov
sarb
loopne
out
adc
imul
xor
gs
push
mov
dec
or
lds
iret
pop
xor
jp
sub
mov
add
add
pop
mov
es
push
sub
fisubrs
lret
sti
int3
jns
sbb
sbb
cwtl
das
push
outsl
mov
dec
movsb
ret
hlt
notl
repz
std
xchg
lcall
mov
mov
cmp
ds
inc
pop
pop
out
nop
popa
insb
add
mov
and
add
sub
pop
test
dec
mov
pop
mov
in
out
xchg
add
xor
movsb
adcl
ret
inc
xlat
hlt
dec
loopne
clc
pop
cmc
sub
js
jl
jl
test
popf
lcall
icebp
mov
pop
jb
insl
jbe
fbstp
xchg
hlt
mov
out
xchg
sbb
adc
imul
sarb
ficoms
psrad
xor
arpl
xchg
sub
xlat
mov
or
pop
push
sub
pop
das
in
popa
jle
test
rorl
mov
push
and
rclb
aad
jbe
fisubs
enter
lret
jp
std
sbb
push
insl
mov
dec
mov
aad
notb
fbstp
pop
hlt
mov
std
xchg
cwtl
push
test
ljmp
sarl
dec
out
pop
pop
out
mov
add
scas
jbe
loope
mov
in
xchg
sub
push
stos
inc
cmp
dec
xchg
pop
mov
out
fdivrp
out
xchg
dec
or
mov
shll
loopne
negl
sub
jbe
jge
jnp
test
pushf
fwait
xor
ljmp
and
rcrl
xlat
outsb
jne
fbstp
xchg
cmc
mov
in
xchg
push
ljmp
imul
sarb
fcoml
or
das
jne
popa
xor
and
xchg
sub
mov
pop
fcmovnb
pop
or
cs
pusha
jl
test
iret
or
add
es
push
je
fisubs
gs
test
test
dec
sbb
mov
dec
mov
ret
insl
cmc
adc
jbe
push
cmc
mov
std
xchg
xchg
imul
mov
mov
cmp
cmp
pop
out
mov
add
fbstp
xchg
sub
add
mov
test
pusha
mov
out
out
xchg
incl
movsb
jle
and
shlb
dec
loopne
negb
daa
inc
addr16
jne
jge
jp
test
fwait
fwait
xor
jmp
mov
pop
outsl
inc
xlat
outsb
je
fbstp
xchg
cmc
mov
jecxz
xchg
adc
aaa
sbb
insb
mov
sarb
fistl
or
insl
add
jne,pn
pusha
xor
sub
aam
dec
push
fcmovb
pop
or
iret
pop
sub
in
test
into
or
add
sub
push
and
push
jae
fbld
data16
test
adc
pop
test
sbb
cmp
rcrl
insl
repz
ja
adc
mov
xchg
xchg
adc
sbb
out
xor
ljmp
out
pop
pop
lock
add
fidivs
xchg
sub
add
inc
ss
mov
test
pusha
mov
out
fdivr
out
xchg
incb
movsb
jge
and
iret
mov
dec
loopne
cmc
pop
mulb
inc
addr16
je
jge
jns
test
lcall
sbb
mov
pop
outsb
inc
xlat
outsb
jae
fbstp
xchg
cmc
mov
loop
xchg
adc
adc
cmp
enter
sarb
ficoml
or
insl
add
sub
mov
adcb
mov
mov
add
daa
iret
pop
sub
jl
jp
test
or
add
sub
push
and
push
jb
fbld
les
cmc
jnp
stc
push
test
sbb
cmp
mov
insl
repnz
ja
adc
mov
xchg
xchg
adc
out
xor
jmp
or
cmp
lock
mov
mov
loope
xchg
sub
add
dec
adcl
mov
jle
imul
xchg
std
add
movsb
jl
and
into
mov
dec
loopne
hlt
pop
mulb
inc
jge
js
test
cltd
fwait
xor
out
cmp
in
mov
pop
insl
inc
xlat
outsb
jb
fbstp
xchg
cmc
mov
loope
xchg
adc
adc
cmp
enter
sarb
fsts
or
insl
add
sub
or
xor
sub
shlb
pop
or
iret
pop
sub
jl
jns
test
int3
or
add
sub
push
and
push
jno
fbld
ret
data16
hlt
jnp
clc
adc
lcall
insb
mov
pop
in
mov
loopne
inc
adc
mov
xchg
xchg
adc
in
xor
call
or
cmp
lock
add
fsubrl
xchg
sub
add
dec
adcb
xchg
out
out
xchg
cld
add
movsb
jnp
and
int
inc
fcom
out
dec
loopne
repz
mulb
addr16
jb
jge
ja
test
out
cmp
in
mov
pop
insb
aas
xlat
outsb
jno
fbstp
xchg
cmc
mov
loopne
xchg
adc
adc
cmp
enter
shlb
fcoms
or
insl
add
sub
pop
xor
sub
shll
pop
or
in
pop
js
test
lret
or
add
sub
dec
and
push
jo
fbld
ret
repz
notl
xor
mov
dec
popf
mov
insl
lock
cmc
mov
xchg
xchg
adc
in
xor
out
cmp
or
cmp
lock
add
fldt
xchg
sub
add
dec
adcl
aam
out
fprem1
out
xchg
sti
add
movsb
jp
and
int3
lahf
inc
fcom
in
dec
loopne
repnz
mulb
inc
addr16
jno
jge
jbe
test
xchg
fwait
xor
in
cmp
jmp
push
sbb
xlat
outsb
jo
fbstp
xchg
cmc
mov
xchg
adc
adc
fs
xor
push
mov
mov
fsubrl
push
sub
pop
das
mov
popa
jge
sub
shlb
pop
or
push
sub
jl
ja
test
lret
sti
into
and
dec
and
push
outsb
dec
fistps
shlb
les
adc
xor
mov
push
pushf
mov
xlat
outsb
out
or
ja
adc
lea
xchg
nop
arpl
xchg
mov
mov
mov
leave
out
cmp
xor
push
call
xchg
push
mov
lea
cli
xchg
sub
add
jg
lret
mov
call
xchg
inc
or
mov
lret
fxch
jmp
loopne
icebp
pusha
mull
ds
outsl
inc
jle
jne
test
xchg
pushf
xor
jecxz
cmp
aaa
rcrl
fsubrs
mov
jbe
nop
testb
in
stos
adc
ss
cmpl
mov
push
out
aad
out
push
fldt
or
mov
pusha
jnp
sub
into
mov
add
enter
iret
push
sub
jge
jne
test
enter
int
mov
dec
pop
inc
fcoms
dec
fistps
mov
jge
cmc
adc
xor
mov
push
fwait
mov
pop
call
or
ja
maskmovq
testl
xchg
scas
sbb
mov
push
and
lcall
rep
mov
inc
pushw
sub
mov
inc
cmp
xchg
mov
inc
and
push
sti
filds
cwtl
out
fst
xor
addr16
rorb
loope
addr16
jg
daa
sbb
popa
out
cmp
or
fistpl
push
ja
push
daa
pop
add
and
jp
shrl
jnp
inc
loopne
sbb
mov
adc
fiadds
jp
sarl
loopne
lret
xor
pop
sbb
repz
and
push
icebp
pop
sbb
ffree
dec
jbe
and
xchg
push
jne
jne
mov
xchg
pop
jp
mov
add
sbb
sti
testl
jo
sub
scas
dec
dec
push
pushf
ds
in
push
loop
pushf
push
fwait
sub
cmpb
std
jecxz
dec
loope
aad
scas
or
repnz
insl
pop
add
jl
pop
sbb
repz
and
pop
push
sub
ss
push
cld
cld
pusha
in
mov
data16
or
push
inc
mov
cmp
shrl
lods
call
popa
div
sub
std
dec
push
inc
or
add
out
mov
nop
xor
dec
push
sbb
xchg
out
fs
and
mov
sbb
mov
dec
aas
or
xor
add
movsl
aam
or
xchg
roll
out
cmp
shr
xchg
ret
dec
loopne
cmp
inc
mov
ja
xor
or
loop
gs
js
mov
xchg
sti
sti
mov
movsl
xor
mov
pop
movsl
mov
fisubl
fimull
cld
xor
jne
lcall
add
iret
pop
lods
mov
adc
imul
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jne
push
mov
lret
adc
push
lods
xor
mov
sbbl
mov
push
outsb
mov
les
outsb
xchg
fld
loope
adc
scas
mov
lahf
cld
cli
sbb
test
xchg
out
dec
outsl
push
push
xor
mov
mov
mov
icebp
aaa
add
dec
insl
pop
lcall
das
and
push
cmp
sbb
inc
adc
cltd
mov
out
mov
add
dec
jae
cld
and
sub
clc
or
and
mov
jo
pop
mov
ja
pop
cmc
or
out
or
repz
adc
repz
adc
pusha
les
and
cltd
sub
mov
inc
addr16
sub
fmuls
ret
or
lods
push
sub
add
push
or
adc
in
hlt
stos
loop
dec
jp
mov
adc
loop
ss
ds
test
in
sub
outsb
aam
dec
mov
pushf
loope
bound
fnstsw
and
cs
xchg
ret
sub
pop
or
out
jns
int
sbb
lods
jnp
insl
rsm
icebp
pop
or
cmpsl
pop
lds
cwtl
mov
fwait
sub
addr16
add
ficompl
xchg
clc
sbb
xchg
or
test
dec
cmp
sbb
lret
lea
cmp
data16
mov
sub
gs
mov
mov
push
sbb
int
int3
imul
or
xchg
repnz
filds
add
rcr
or
lods
insl
inc
imul
push
xchg
and
hlt
add
in
mov
movb
shlb
in
push
sbbb
iret
push
sarl
testb
push
mov
enter
addb
adc
mov
add
test
push
mov
pushf
mov
or
cmc
mov
dec
mov
push
arpl
call
xchg
jecxz
mov
add
gs
movsb
lods
ret
mov
mov
icebp
mov
aad
inc
ret
mov
int
xchg
xchg
inc
push
mov
stos
hlt
ret
aad
dec
mov
and
cmpsl
shll
push
add
xor
inc
push
xor
sbb
sarb
lret
cmp
movsl
lods
cmp
jmp
jge
test
out
sub
pop
movsl
nop
movsl
push
dec
cmp
dec
lds
fisubrl
and
dec
mov
les
mov
xchg
add
mov
fwait
xor
mov
out
fsubl
xchg
std
shl
sahf
roll
mov
xor
jmp
into
add
mov
and
mov
add
mov
dec
cli
push
inc
or
inc
dec
repnz
mov
nop
pop
push
or
iret
pop
cli
mov
add
cli
les
sub
sbbb
roll
movl
sti
inc
mov
pop
repnz
enter
jmp
mov
ljmp
lret
xchg
inc
mov
dec
mov
xorl
icebp
xorl
sahf
jg
movsb
mov
jne
ja
pusha
push
adc
pop
cmpl
outsb
jle
pop
cmpl
lds
cmp
xchg
cmp
outsb
sbb
and
xchg
das
sar
adc
into
movswl
lret
sbb
aas
jl
into
inc
shrb
dec
xchg
push
inc
bound
ficompl
adc
jecxz
mov
loope
jecxz
adc
and
push
sbb
xchg
lahf
frstor
pusha
jle
cmp
std
sub
ds
lcall
cli
mov
cmpsl
inc
mov
decl
add
xchg
or
sahf
pop
daa
and
fsub
test
fstpl
sarb
cltd
arpl
push
xchg
pop
push
jno
movsl
pop
hlt
mov
test
imulb
incb
adc
jg
push
jbe
jbe
stos
repnz
add
pusha
bound
ja
jb
decb
enter
and
andl
lahf
jl
or
test
je
add
fsubs
cmpsl
sahf
daa
cmp
inc
dec
push
int3
mov
or
mov
rolb
popl
test
dec
pop
push
test
adcl
mov
sbb
mov
out
in
pop
std
scas
cmp
cltd
sbb
cltd
leave
add
cmp
out
cmp
ss
pop
mov
xlat
jle
dec
push
mov
pop
icebp
cltd
pop
and
repnz
and
pop
adc
ss
xchg
sbb
sbb
insb
or
sub
daa
dec
push
ds
call
push
scas
cmp
gs
stos
pop
sub
lcall
push
mov
xor
jecxz
loopw
int
pop
inc
test
lea
call
jle
or
mov
fwait
bound
stos
stos
mov
test
and
aas
jl
adcl
inc
and
cmc
outsb
xorb
lcall
das
data16
ljmp
jns
sbb
pop
roll
xchg
pop
and
and
inc
jnp
pop
das
insb
ljmp
xor
xchg
cld
push
jge
push
xchg
outsb
test
into
adc
ss
outsb
xchg
and
fisubrl
cmp
mov
leave
add
andb
stos
popf
sbb
cmc
bound
cwtl
enter
fstl
xor
xor
in
add
stos
dec
mov
sahf
loope
loop
gs
xchg
sub
pop
sarl
mov
loop
pop
mov
push
insl
popa
mov
mov
cltd
push
stos
mov
ret
push
lods
cmp
enter
push
adc
xchg
pop
and
push
add
and
stos
fiadds
ja
jnp
test
push
dec
mov
adc
mov
xor
rorl
xchg
scas
xor
mov
adc
cmp
rolb
cltd
aaa
mov
scas
loop
xchg
jmp
lret
inc
jns
jg
or
inc
mov
mov
jbe
adc
imul
stc
xchg
imul
sub
xchg
insl
push
fcmovnbe
sub
push
push
jge
nop
jno
xchg
and
sbb
repnz
mov
ret
ss
cltd
xchg
iret
loope
out
pop
pusha
movsl
fnstsw
xchg
push
inc
dec
fcmovu
aam
mov
push
push
xchg
sbb
inc
pop
dec
mov
sbb
push
mov
cltd
stc
add
xchg
ret
inc
or
filds
lds
push
xchg
cmpl
out
xorb
outsl
push
leave
xor
dec
in
add
xchg
add
cmp
pusha
cwtl
jmp
sbb
mov
xchg
lds
daa
add
dec
mov
fstpt
in
sub
mov
sub
mov
sahf
pop
test
lds
sahf
sub
pop
outsb
jle
jnp
cwtl
mov
lods
fistl
dec
imul
or
jns
cmp
lods
scas
add
push
scas
fxch
push
into
rolb
adc
mov
dec
inc
insl
mov
sbb
add
xchg
movsb
mov
pop
cmp
lret
sub
fcompl
sahf
filds
icebp
xchg
xor
daa
inc
mov
data16
std
test
xor
into
sti
shl
sarb
sbb
fwait
mov
imul
out
lret
clc
in
addr16
shrl
and
push
insb
lock
int
push
xchg
loope
cltd
test
push
sub
stos
inc
stos
cmpsl
imul
pop
mov
imul
mov
movsl
inc
and
mov
cmp
add
xor
or
lea
or
movsb
jecxz
mov
jp
call
xchg
jb
popa
test
mov
mov
add
jmp
xchg
int
mov
xchg
lahf
adc
mov
cld
push
sub
inc
adc
cmpsl
in
pop
sub
fiadds
int3
xchg
lret
xchg
or
and
adc
test
in
pop
jmp
mov
aad
cmc
xchg
jo
xor
mov
popa
nop
subb
or
gs
push
or
cmp
lret
adc
push
