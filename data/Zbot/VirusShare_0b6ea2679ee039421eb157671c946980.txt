jo
ss
je
movsb
adcl
testb
mov
mov
ret
fsubrs
xchg
add
out
sub
lock
pop
jp
ror
xchg
ljmp
aam
cmp
inc
add
sub
shlb
aaa
jns
sub
xchg
pop
sarb
imull
add
cmc
loope
iret
lcall
xor
and
fsubl
sbb
add
xchg
pop
mov
int
sbb
jge
rcl
jle
lahf
jp
aad
mov
mov
jns
lahf
sbb
xchg
xlat
xchg
ja
mov
xchg
jb
xchg
pop
scas
iret
into
xchg
cmpsb
ror
xchg
scas
dec
xlat
xchg
xor
mov
pop
mov
lods
ror
xchg
scas
or
add
or
or
nop
inc
fwait
mov
ror
jl
pop
test
lods
push
into
xchg
lods
inc
cmp
add
pop
pop
scas
iret
into
xchg
stos
pop
in
adc
into
sbb
fcompl
add
jge
pop
loope
mov
sbb
dec
and
into
xchg
scas
ror
xchg
addr16
push
scas
aaa
jl
xchg
inc
aad
out
inc
sarl
mov
pop
push
and
int
arpl
int3
adc
lods
shlb
sbb
into
xchg
mov
rolb
adc
sbb
enter
xor
scas
iret
into
xchg
cmpsb
xchg
rcll
add
or
outsb
inc
sbb
or
or
sub
roll
and
mov
ret
add
adc
sbb
into
xchg
jae
fildl
mov
shl
jg
and
mov
rcll
lcall
adc
lret
sbb
lcall
xchg
inc
push
shll
xor
mov
mov
lcall
stos
fcmovbe
sub
out
push
out
xor
mov
scas
ror
sbb
je
xchg
push
int3
mov
and
into
sbb
addr16
xchg
aas
int3
mov
and
into
sbb
aam
into
stos
xchg
cmpsb
mov
and
xchg
cmp
pop
out
aam
mov
cmp
push
lahf
jl
jp
pop
cwtl
and
xchg
cmp
out
xchg
lcall
adc
lds
sbb
xchg
sbb
rcrl
clc
aad
fistpll
mov
ret
push
ljmp
and
inc
in
aas
cmc
mov
loop
and
pop
call
nop
mov
aam
cltd
push
xchg
xchg
jb
xor
aam
out
mov
pop
mov
adcl
loope
cmp
mov
inc
mov
ror
add
add
xchg
or
adcl
nop
inc
mov
vmwrite
mov
stc
pop
scas
loopne
aam
ror
jl
jl
jp
sbb
pop
ficompl
std
into
xchg
xchg
or
inc
pushf
scas
int3
aam
das
push
adc
pop
xchg
inc
inc
es
mov
mov
aam
adcl
cwtl
shll
into
xchg
xchg
in
jp
ror
xchg
xchg
ret
and
negb
sub
ljmp
pop
mov
sbb
repz
clc
sahf
or
das
jecxz
loop
push
leave
xchg
ljmp
into
mov
adc
mov
into
mov
scas
adc
into
xchg
scas
cld
repnz
adc
in
leave
push
adc
out
int
xchg
sahf
adc
into
xchg
clc
pop
cld
test
out
cmp
cli
cmpsb
add
xchg
scas
cmp
stc
fstpl
lods
into
into
xchg
mov
loopne
shll
dec
mov
sti
lods
test
adc
nop
leave
pop
sub
adc
nop
int3
std
out
popa
es
scas
ror
int
add
shll
fists
scas
ror
nop
mov
out
popa
cmp
cli
scas
inc
mov
loopne
mov
xchg
push
adc
push
mov
ror
sbb
daa
es
into
into
xchg
sub
stos
jmp
ror
xchg
mov
ror
int
or
shll
fists
scas
ror
sbb
fcomps
and
or
scas
inc
roll
dec
ret
xchg
cmp
pop
cs
fsubr
ss
fld
pop
sbb
les
or
mov
cmp
scas
inc
pop
xchg
lods
fdivs
shll
ficoms
and
into
ljmp
pop
pusha
and
or
clc
sub
fimuls
fisttpll
in
push
and
and
int3
dec
xlat
xchg
cmp
pop
loopne
pop
adc
mov
xchg
mov
repz
push
jle
add
jl
loopne
pop
dec
sahf
mov
rorb
and
jae
mov
xchg
mov
xchg
cmp
xor
pop
sbb
pop
sbb
xor
pop
sub
cs
flds
and
mov
mov
into
popf
test
pop
mov
iret
inc
sub
lret
xchg
xchg
fmull
sbb
sub
inc
xchg
mov
rorl
mov
mov
pop
fisttps
xchg
int
push
shl
and
cli
add
dec
pop
lods
inc
mov
xchg
or
outsb
or
and
dec
sub
cli
in
inc
pop
clc
loop
xor
scas
je
xchg
imul
xlat
xchg
cmp
xchg
popa
pop
or
loopne
push
mov
mov
pop
jns
rcll
nop
and
into
xchg
mov
adc
iret
xchg
xor
push
ss
ror
int3
scas
inc
cltd
sbb
cmp
mov
and
into
sbb
popa
roll
scas
inc
fistpl
nop
inc
lahf
mov
iret
inc
lcall
jo
pushf
ror
sbb
fcompl
out
pop
pop
stos
mov
call
pop
fidivrl
inc
ret
jge
pop
sbb
mov
push
fcomip
xchg
lss
adc
scas
adc
into
pop
scas
hlt
ljmp
xchg
rcll
sbb
pause
inc
shlb
test
test
pop
xlat
mov
xchg
mov
in
and
pop
and
rclb
mov
icebp
loop
les
mov
in
fisubrl
push
fcoms
iret
mov
shlb
mov
jno
adc
xor
clc
cli
loopne
dec
outsb
cs
dec
pop
cmp
in
inc
xchg
std
add
adc
push
push
xchg
dec
add
xchg
scas
xor
push
inc
xor
jbe
sbb
xor
fsubs
xchg
dec
cmp
dec
insl
inc
cli
or
in
shll
outsb
in
jo
rclb
xchg
dec
test
cmp
test
js
jbe
ss
aad
sbb
ljmp
mov
sbb
std
pop
xchg
movsb
lcall
mov
je
xlat
mov
inc
or
mov
into
iret
push
pop
dec
leave
xchg
ja
mov
xorl
int
mov
in
je
jp
iret
imul
aad
cltd
inc
push
mov
shl
pop
scas
push
sti
stos
mov
cmp
leave
and
push
popa
push
and
mov
sub
pop
mov
fdivrl
iret
pusha
cli
mov
add
xor
or
js,pn
xor
out
rol
dec
out
lock
lods
fsub
jge
adc
jbe
xor
stos
jmp
das
adc
rclb
ds
outsl
pushf
fcmovne
insb
or
or
xchg
mov
jbe
dec
mov
scas
cmp
ja
cld
les
cltd
sub
mov
lret
push
jne
mov
scas
ss
xchg
arpl
fdiv
movsb
daa
mov
in
into
das
jo
addr16
pop
xchg
pop
imul
inc
lahf
and
xchg
scas
pop
xor
shlb
shl
std
fldl
mov
cmpsl
add
cmp
push
je
fimuls
ret
lret
dec
jne
push
push
out
push
lods
adc
push
cmp
iret
pop
mov
les
xchg
repnz
push
mov
leave
push
mov
imull
rolb
decl
mov
cmp
xor
jae
les
cmp
scas
and
jg
shrb
cmp
insl
fstl
mov
ljmp
iret
mov
int3
rorb
xchg
pop
pop
cmp
shll
scas
aaa
stos
jl
rol
popa
inc
rolb
and
mov
and
xchg
jecxz
mov
cmpsl
scas
cmp
add
rolb
dec
mov
sbb
xchg
daa
nop
int
mov
ret
mov
lods
ja
scas
xlat
xchg
ret
ss
mov
or
and
cli
jns
inc
scas
jbe
shrb
sub
js
iret
fimuls
mov
and
jmp
stc
xchg
cmovle
sti
test
xor
ret
pop
iret
inc
je
gs
push
subb
jmp
and
movsl
ret
loopne
lods
cmp
scas
mov
fstps
jmp
sahf
inc
stc
mov
and
nop
cmc
mov
cmp
cmp
adc
pop
pop
rcll
leave
getsec
push
inc
adcl
repz
cmc
pop
fcmovbe
sahf
mov
lret
pop
stc
popa
jb
mov
insb
mov
shll
jae
out
inc
and
inc
xchg
or
or
lret
jle
mov
shrl
dec
shll
adc
xchg
repz
jecxz
mov
lret
leave
lret
pop
lcall
push
add
adc
jecxz
out
shlb
push
bnd
or
ljmp
shlb
xchg
filds
rcll
xlat
mov
pop
add
lret
pop
iret
lea
push
sti
cld
xorb
cltd
loop
pop
out
push
mov
sub
sbb
jmp
pop
fsubrl
push
pusha
sub
xor
movb
adc
push
jae
popf
add
dec
outsl
xlat
pop
or
movsl
fstl
xchg
mov
nop
jg
cld
push
add
jne,pn
sbb
or
xchg
mov
dec
pop
fwait
sbb
imul
xchg
jo
inc
sbb
adcb
xchg
mov
push
sbb
inc
cmp
mov
lret
aad
mov
cmpsl
xor
add
bound
pop
sahf
jnp
loop
xchg
cmpsl
xchg
aad
mov
jmp
and
push
orb
aad
outsl
xchg
dec
roll
scas
stc
jb
fsts
push
orps
push
and
jge
testb
jae
shl
mov
ss
fs
inc
aam
out
mov
iret
loope
jbe
xchg
jmp
lahf
pop
mov
loopne
das
fcoml
lods
aam
mov
test
pop
adc
aas
test
lret
cmp
ret
rclb
jae
adc
dec
adc
mov
or
fs
pop
xor
and
sub
pop
push
arpl
adc
xchg
clc
repnz
stc
lods
add
pop
fldcw
push
mov
xor
cmp
mov
jbe
mov
in
mov
or
in
ds
push
jo
xchg
and
fistps
ficoml
insb
inc
xchg
arpl
inc
sub
xchg
lea
push
sbb
inc
hlt
popf
jbe
and
js
daa
divb
mov
in
addr16
pop
inc
add
in
daa
insb
sub
loope
inc
cmp
arpl
jns
jb
cmp
inc
xchg
xchg
mov
ret
scas
mov
lcall
pop
outsl
jge
xor
aas
inc
dec
movsl
and
negl
mov
insb
sub
sub
scas
cmc
hlt
and
add
xchg
sub
and
loop
xor
xchg
imul
out
ljmp
lea
outsb
cvtdq2ps
pop
mov
inc
aas
scas
mov
ds
test
jb
pop
push
pop
aas
xchg
xchg
lds
cmc
loop
repz
in
sub
sti
add
xchg
pusha
sub
in
xor
jmp
mov
leave
xchg
xchg
movsl
cltd
inc
scas
fptan
popa
mov
test
imul
inc
es
cld
sub
xchg
mov
repnz
shlb
jae
out
add
pop
into
loop
loope
aaa
xlat
xchg
dec
xchg
lea
and
mov
pop
loopne
mov
inc
mov
mov
fbld
inc
shll
clc
sub
subb
cmc
inc
in
mov
jb
ja
fwait
in
lret
pop
movsl
mov
vrsqrtss
popa
mov
shl
cmp
dec
pop
stos
shlb
icebp
ja
push
sbb
loop
mov
sbb
and
dec
pop
popf
cltd
mov
pusha
jl
adc
inc
hlt
ljmp
adc
xchg
or
loope
aaa
les
rcr
popa
sbb
loop
mov
sbb
and
repnz
add
push
xor
fstps
imulb
iret
rcrb
test
es
push
lret
mov
ror
icebp
xchg
sbb
dec
mov
sbb
in
bnd
xlat
inc
xchg
repz
negb
adc
insb
popa
sbb
movsb
pop
std
cmp
lock
out
mov
sbb
xchg
popf
inc
push
adc
mov
test
nop
rcrb
movsb
outsb
hlt
mov
pop
popa
shll
mov
lahf
aas
cmp
add
fdivp
lcall
push
repz
jl
jns
sti
adc
rcrl
movsb
dec
hlt
dec
fidivrl
dec
mov
adc
pop
pop
stc
loopne
aaa
or
or
mov
scas
aas
inc
or
repz
mov
das
mov
int3
cmp
jne
sub
adc
rcrl
movsb
push
hlt
pop
popa
adc
xor
arpl
mov
inc
ror
icebp
cwtl
aas
cmc
jge
repz
mov
sbb
aaa
hlt
repnz
pusha
jecxz
repz
rcrl
test
popa
stos
mov
adc
and
jp
push
aad
xchg
aas
loop
sbb
loop
mov
sbb
jg
cmc
mov
or
movsb
rolb
add
pop
jbe
aaa
hlt
lock
mov
adc
or
dec
loope
cmp
pop
adc
out
imul
xchg
sbb
loop
mov
sbb
pop
repnz
mov
xor
or
test
xchg
movsb
sbb
popa
cli
mov
adc
loope
aaa
push
pop
pop
rorb
sbb
adc
and
insb
pop
ss
inc
repz
rolb
mov
in
lcall
adc
loope
aaa
in
xchg
rclb
out
repz
mov
sbb
and
dec
sarb
push
rcr
adc
shl
cmp
lods
popa
outsl
mov
adc
push
aaa
mov
rcl
icebp
in
mov
out
and
pop
pop
or
lret
lds
adc
rcrb
movsb
push
hlt
mov
mov
adc
vandnpd
aaa
leave
pop
xchg
rorb
loope
or
sbb
loop
mov
sbb
and
pusha
cmp
mov
lds
into
movsb
mov
popa
shll
aaa
out
push
shlb
cmovo
out
or
das
and
repnz
mov
rcll
xor
adc
mov
test
mov
adc
loopne
aaa
sub
push
shlb
pusha
sbb
loop
mov
sbb
pushl
repz
cmp
cmp
call
mov
popa
xlat
mov
adc
mov
loopne
aaa
jbe
inc
rclb
inc
sbb
loop
mov
sbb
insb
repnz
cmp
repz
rol
mov
rcrb
movsb
add
popa
insl
mov
adc
sub
test
icebp
sub
out
push
sbb
jecxz
mov
sbb
and
pop
lea
lahf
dec
repz
adc
notb
adc
rcrl
test
popa
and
dec
loope
cmp
test
cmp
add
lcall
repz
mov
sbb
and
bnd
test
repz
shll
jmp
pop
mov
ficompl
jle
push
adc
add
nop
loope
aaa
int
and
aas
shufps
loop
mov
sbb
lahf
add
xchg
repnz
shl
push
imul
adc
rcrl
movsb
mov
loopne
mov
mov
cs
loope
aaa
push
pop
mov
inc
loop
mov
sbb
and
movsb
jmp
push
adc
not
movsb
fiaddl
lock
mov
pop
lcall
adc
ljmp
pop
cmp
lret
icebp
aam
sbb
adc
test
push
sub
and
xor
adc
mull
das
rcrl
test
push
adc
mov
aaa
mov
lock
aas
mov
adc
repnz
push
xor
out
jmp
repnz
xor
negl
adc
pop
stc
mov
ds
mov
outsl
data16
aaa
stos
pop
jb
add
lret
aas
ficoml
sbb
loop
mov
sbb
andl
or
mov
pop
negb
movsb
sub
mov
mov
adc
xchg
mov
pop
inc
rcr
lock
aas
dec
hlt
sbb
loop
mov
sbb
je
pop
mov
sbb
dec
rcrb
testl
movsb
arpl
rcr
mulb
mov
adc
jmp
cmp
icebp
jb
enter
loop
mov
sbb
mov
imul
int3
sahf
repz
clc
pop
jno
pop
adc
rcrl
mov
insl
popa
aaa
mov
adc
mov
aaa
and
dec
aas
out
xchg
bnd
adc
out
push
int
sub
das
jnp
xchg
jmp
jge
ljmp
out
shll
les
sbb
pusha
xchg
hlt
loopne
mov
mov
xor
adc
shlb
xor
cmp
aaa
adc
leave
push
mov
lods
inc
rcll
ficomps
movsb
scas
push
xor
mov
icebp
je
iret
and
mov
test
pop
push
cld
jmp
and
xchg
xchg
cmp
xchg
sbb
les
jmp
in
lods
lea
jge
pop
ss
scas
sahf
or
shrb
ret
iret
loop
xor
in
adc
scas
dec
adc
nop
sbb
scas
scas
fyl2xp1
and
push
pop
adc
push
mov
inc
push
and
cmpsl
shl
add
pop
out
call
adc
negl
fstl
or
dec
jne
jb
ret
xor
cmp
sbb
lahf
jmp
scas
dec
andl
aad
mov
xor
aad
mov
xor
push
loop
pop
outsb
push
and
cs
and
push
mov
les
fistl
and
iret
icebp
out
sub
xchg
dec
loopne
rcrb
outsb
sub
mov
jl
jbe
mov
scas
and
inc
aas
push
xchg
out
pop
aam
gs
cmpsl
sbb
cmc
movsb
dec
test
adc
or
jo
sbb
dec
xchg
and
dec
pushf
mov
rcl
and
inc
int3
scas
add
jle
sbb
mov
push
push
int3
xchg
and
lret
or
mov
std
pop
mov
mov
imul
iret
mov
fistpl
push
mov
inc
add
imul
nop
xchg
xchg
xor
fstl
jmp
scas
out
and
push
mov
aad
jmp
scas
mov
cmc
pushf
mov
std
test
pop
in
cmp
subl
sbb
dec
xor
mov
inc
les
push
lret
add
aad
inc
lcall
int
loopne
ret
xchg
add
pop
sub
push
mov
shr
mov
into
mov
jge
mov
cmp
sbb
add
lahf
pusha
push
and
xchg
mov
and
jns
dec
sbb
into
and
div
jbe
adc
xor
dec
sti
imul
sbb
arpl
cltd
xor
into
data16
push
jne
mov
scas
imull
pop
iret
mov
jge
ss
or
and
xchg
cmp
pop
mov
xor
pop
cmc
rclb
rolb
jle
xor
lahf
and
sub
mov
adcl
inc
dec
jbe
xor
dec
rorl
fwait
jnp
out
xchg
mov
push
scas
mov
daa
push
xor
lock
fdivrs
dec
ret
insb
test
xchg
push
iret
pop
sbb
orb
add
test
or
ss
add
inc
nop
inc
xchg
adc
push
mov
lcall
scas
ja
cmpsl
loope
shrb
mov
push
iret
pop
movsl
fsubp
and
add
movsb
cmpsb
pop
aad
addl
jo
mov
cmp
sti
xchg
sti
mov
push
iret
mulb
insb
lock
iret
xchg
cwtl
add
inc
lea
aaa
in
jmp
shrb
out
cmp
push
xchg
paddusb
dec
in
jge
or
idivb
xor
jbe
dec
push
inc
fwait
or
fs
sub
xlat
or
bnd
in
pushf
jl
int
in
or
dec
adc
lcall
mov
add
push
rclb
cs
in
xchg
add
mov
popf
push
or
iret
fsubl
cmp
fidivrs
out
inc
xlat
push
scas
scas
cmpsl
inc
popa
shrl
xchg
xchg
pop
or
jns
test
out
xchg
jle
jae
lock
xlat
inc
stos
repz
and
adc
stos
popa
pop
mov
adc
sub
mov
xchg
aaa
loop
xor
aas
gs
mov
sbb
and
cmp
es
test
ss
inc
imul
adc
pop
adc
push
hlt
push
fimull
adc
sbb
xchg
mov
mov
jmp
aas
shrl
repz
mov
sbb
aad
rcrb
popf
repz
sbb
insl
adc
rcrl
movsb
loopne
js
out
and
push
loope
aaa
add
add
iret
repz
loop
mov
jno,pn
and
pop
repz
cltd
xchg
negb
movsb
xor
sbb
pop
bound
cmc
aaa
icebp
push
arpl
or
inc
aas
fbld
mov
sbb
and
fcom
les
scas
xchg
fcomi
rorb
pop
int3
movsb
imul
add
xor
pop
aaa
loopne
rcl
lock
inc
enter
sbb
and
mov
sub
repz
xchg
pusha
lods
imulb
nop
movsb
jne
add
lods
popa
divl
aam
loopne
cmp
pop
push
sarb
lea
repz
mov
sbb
and
cmp
push
fsts
sub
repnz
xor
lds
popa
movsl
mov
mov
rcrl
leave
shlb
inc
aas
in
sbb
jecxz
mov
sbb
and
jno
mov
lods
rorb
out
rcrb
mov
or
mov
adc
and
pop
loope
aaa
add
sub
insl
loop
mov
sbb
sbb
push
repz
sar
icebp
testb
rcrb
movsb
cmp
lods
ficompl
popa
pop
mov
adc
push
adc
loope
cmp
icebp
cld
aas
adc
and
cmpsl
repz
rclb
imull
adc
mov
popa
enter
imul
loope
cmp
push
sti
rcrb
or
mov
sbb
pop
repnz
call
inc
repz
shlb
idivb
adc
sbb
rcr
orl
push
sbb
xchg
cmp
push
ljmp
bnd
xor
insb
and
out
mov
jge
mov
fbld
cmp
loope
mov
pop
data16
lock
mov
adc
cmp
fcom
pushf
out
pop
push
mov
inc
adc
pop
pop
movsb
lods
hlt
pop
fiaddl
adc
clc
add
pop
push
shl
lock
ljmp
fcomps
fsubl
bnd
jne
push
cltd
push
lods
repz
shl
xchg
or
adc
pop
xchg
movsb
xlat
cmc
mov
mov
loope
mov
or
icebp
sarb
and
repz
mov
sbb
and
pop
adc
push
and
push
repz
shlb
notb
jo
pop
mov
popa
adc
mov
jg
adc
arpl
mov
inc
dec
xor
repz
shrl
jne
js
lds
movsb
jge
add
dec
popa
dec
mov
adc
and
aaa
lcall
inc
stos
pop
sbb
jecxz
mov
sub
pop
sbb
mov
adc
rcrb
movsb
lret
hlt
adc
mov
adc
mov
aaa
adcl
pop
aas
pop
pushf
sbb
loop
mov
sbb
and
xchg
pop
mov
sbb
es
inc
divb
movsb
xor
and
mov
adc
cmp
insl
loope
aaa
mov
ret
icebp
pop
aas
shlb
mov
sbb
push
push
repz
idivl
inc
movsb
insb
hlt
xchg
fimull
mov
jb
pop
pop
mov
sahf
icebp
jo
ljmp
add
push
and
repnz
mov
pop
or
shr
out
mov
push
test
cmpsb
adc
pusha
mov
loope
aaa
cmp
insb
rcl
lock
jbe
sbb
call
push
movsb
inc
pop
add
icebp
repnz
shlb
js
pop
xchg
movsb
add
push
fidivl
test
out
pushf
pop
stos
cmp
push
sbb
xor
push
pop
or
mov
or
mov
adcb
loope
aaa
lods
pop
or
loop
and
jo
sbb
loop
mov
sbb
int3
imul
shll
notb
adc
fwait
lahf
mov
adc
faddl
loope
aaa
stc
push
xor
xor
inc
xchg
sbbb
loop
mov
sbb
and
sbb
loope
repz
or
xchg
aas
rcrb
movsb
call
popa
cmpsl
mov
adc
out
out
loope
aaa
cmc
push
ds
lock
mov
repnz
std
lea
lods
mov
add
outsl
pusha
inc
divb
rcrb
movsb
push
hlt
push
popa
jbe
ds
pop
mov
loope
aaa
mov
icebp
bound
cmp
sbb
loop
mov
sbb
cmp
xor
push
ror
negb
movsb
push
hlt
adc
mov
adc
mov
int
into
aaa
adc
inc
sarb
icebp
mov
jae
sbb
loop
mov
sbb
mov
fwait
repz
sarb
not
pop
rcl
shr
push
jns
sbb
pop
fsubrs
or
xor
scas
filds
andl
jmp
mov
xchg
mov
aam
xchg
aas
push
out
repnz
icebp
and
iret
or
movsb
inc
push
adc
xchg
loopne
int
xor
add
xchg
sbb
rclb
test
les
xor
mov
loopne
popa
in
int
cmpsl
jmp
and
and
insl
pop
sub
repz
jmp
movsl
out
shlb
rolb
imul
jnp
ror
jle
dec
test
rclb
or
iret
mov
cld
jno
js
shrb
xor
test
mov
pop
xchg
push
lods
cmp
cs
rorb
mov
mov
pushf
pop
sub
or
pop
fwait
pusha
cmp
dec
push
and
add
pop
or
iret
inc
addr16
loope
rcr
xchg
push
es
adc
jo
into
mov
fildll
and
push
bnd
or
adc
push
scas
movsb
sub
outsb
shl
jns
mov
iret
fildll
inc
jmp
xchg
xchg
test
jb
mov
je
rorb
mov
and
mov
xchg
pop
push
adc
xor
cmc
dec
mov
jae
data16
cmp
lock
or
mov
jo
test
mov
add
mov
shrl
mov
xor
icebp
adc
jae
or
in
scas
xchg
out
lret
push
repnz
sarb
mov
mov
out
lcall
arpl
inc
pusha
iret
aad
stos
clc
pop
fwait
add
add
jae
ret
testb
repnz
mov
movsl
or
xchg
mov
pop
enter
xchg
aaa
fidivrs
mov
nop
fisubrl
mov
call
je
mov
xchg
or
jne
in
flds
cmpsb
fs
sub
xchg
dec
rolb
into
ds
and
into
insl
icebp
fildll
scas
testb
aad
into
daa
out
popf
or
xchg
negb
jle
mov
pop
or
jns
nop
jno
pop
jg
cmp
adc
push
js
cmc
addr16
mov
jg
mov
cmpsb
pop
fcmovu
outsb
lods
pop
xchg
dec
sub
add
in
xlat
test
adc
jge
scas
xchg
adc
xchg
or
insl
clc
add
mov
cmc
lret
xchg
clc
jp
fistpll
sarb
dec
cs
dec
ret
sub
sarb
or
in
and
add
pop
iret
or
lods
js
jno
mov
cmp
cmp
sbb
add
rorb
cmpsl
lods
stc
repz
ljmpw
out
rorb
mov
mov
xchg
std
xlat
push
sub
gs
lods
adc
jecxz
stc
ljmp
push
and
add
lods
xchg
rorb
inc
jnp
test
pop
cmp
in
jb
dec
adc
lods
cmp
rcrb
int3
mov
cmpsl
push
and
movsl
mov
inc
cmpsb
dec
xchg
adc
cmp
rol
rcrb
lcall
mov
pop
shrb
popa
pop
jo
es
sbb
lods
mov
cmp
bound
push
dec
push
mov
nop
jle
mov
sub
cs
dec
cmp
push
inc
and
cmc
shlb
push
fdivrl
hlt
sbb
or
fcoms
test
mov
mov
fwait
xchg
pop
iret
xchg
add
mov
lods
into
adc
adc
or
iret
int
les
xchg
jbe
add
popa
icebp
mov
mov
sarb
fstps
adc
adc
mov
shlb
cmp
jle
ss
inc
add
pop
mov
loopne
push
pop
inc
push
scas
mov
jmp
add
fcom
leave
push
daa
in
push
xchg
xchg
push
pop
jg
lods
stos
adc
adc
outsb
test
xchg
push
stos
repnz
mov
cmpsl
fisubrs
and
ss
je
add
push
dec
ja
out
xchg
jle
push
ljmp
aad
lret
pop
push
nop
lahf
jne
loopne
mov
shll
loopne
push
sti
xor
lods
ja
gs
pop
add
rclb
push
cs
xchg
stos
fmulp
scas
popa
cmp
mov
pusha
or
inc
lods
icebp
movsl
mov
cmc
fidivrl
push
adc
pop
arpl
push
jecxz
cmp
ficompl
push
push
push
lcall
lock
jge
dec
mov
push
push
add
shr
ret
adcb
std
movsl
jns
shll
shrb
pop
out
sub
and
mov
pusha
pop
sub
pop
jnp
push
insl
hlt
jne
jle
aam
dec
repz
push
add
sub
fidivrs
je
out
loop
xchg
hlt
add
sub
bound
xor
pop
aad
call
iret
push
idivb
mov
mov
dec
fidivrs
cmp
pop
mov
xchg
inc
xchg
ds
mov
lea
sbb
fisttpl
cmp
rolb
iret
dec
rolb
add
mov
xchg
shrb
sbb
jle
sub
and
cmp
mov
add
shlb
loopne
xor
adc
jne
xor
xor
push
aaa
mov
lret
shrb
dec
sbb
ljmp
mov
rcrl
sbb
mov
sbb
ret
mov
cmp
lret
out
pop
mov
xchg
js
lods
rcr
push
xor
movsb
adc
dec
push
jmp
xor
shlb
test
iret
jl
jns
inc
movl
inc
cmp
adc
push
cmp
pop
xchg
xor
jp
ret
aas
mov
and
xor
fsubr
pop
mov
repnz
aaa
pop
sti
and
sbb
pop
in
cmp
iret
xlat
sub
repz
icebp
xchg
adc
mov
movsl
push
mov
imul
jmp
inc
mov
fcoms
mov
mov
and
scas
mov
cmpsb
mov
xchg
enter
mov
in
sarl
mov
ficomps
mov
pop
out
ret
notb
lea
shrb
imul
xor
pop
into
cmpsb
scas
mov
push
sarb
mov
cmp
dec
sub
xchg
xchg
sbb
push
aaa
xor
push
jns
inc
cwtl
in
rcrb
pop
mov
sub
mov
int3
xor
xchg
pop
std
sbb
mov
jns
jbe
scas
leave
scas
dec
push
xor
inc
mov
ud0
iret
mov
mov
std
and
mov
jbe
leave
iret
adc
xchg
jns
orl
and
fiaddl
lret
pop
stos
mov
dec
jo
test
and
test
arpl
inc
pop
dec
xor
stos
rclb
outsb
mov
fiadds
ret
mov
inc
rcrb
inc
pop
out
sbb
sbbl
fimuls
push
int3
sti
push
mov
idiv
push
mov
xlat
add
xor
ret
jmp
pop
inc
cld
mov
sti
adc
out
pop
jno
jl
sahf
jge
xor
scas
call
push
fnstsw
lcall
mov
pop
push
xor
xlat
jo
rcrb
mov
popf
scas
fdivrs
push
rolb
jne
sbb
fistpl
lods
or
shlb
mov
sbb
scas
aaa
dec
sub
mov
pop
dec
dec
insb
nop
lret
pop
xchg
mov
into
sbb
pop
or
test
jge
scas
cltd
insl
pop
sbb
repnz
cmp
andb
mov
pop
or
dec
jno
ror
or
inc
enter
inc
sbb
addr16
rclb
xor
add
notl
mov
insl
andl
outsl
scas
jnp
nop
inc
jecxz
scas
jb
mov
arpl
hlt
push
ret
jnp
jnp
bound
std
in
jle
fcoms
push
aad
stos
push
sbb
xchg
scas
lock
gs
and
and
mov
cwtl
in
sbb
ds
call
popa
adc
dec
mov
xchg
lea
das
xlat
xchg
push
dec
or
xor
lods
xchg
mov
dec
daa
xchg
rorb
out
daa
iret
fdiv
aam
push
mov
nop
cltd
ljmp
int3
pushf
in
cli
cmp
cmpsl
mov
das
or
jae
xchg
and
lods
ljmp
mov
inc
cmp
add
inc
mov
lea
lcall
mov
fists
push
arpl
cmp
enter
cmp
mov
push
mov
xor
xor
fldcw
repnz
jecxz
dec
jb
push
pop
cs
sar
inc
repnz
shr
cmp
mov
dec
pop
daa
push
mov
jns,pt
flds
or
divl
mov
rorl
add
xchg
dec
icebp
int3
in
xchg
jb
rep
outsb
inc
mov
arpl
inc
xchg
or
pop
das
icebp
sbb
mov
bound
cmc
pop
xchg
imul
test
leave
push
subb
fisubl
out
sub
test
movsl
dec
lods
mov
sbbb
rorl
mov
iret
sub
pop
int3
fwait
ss
jp
xlat
scas
les
add
mov
scas
cmp
add
sarb
sbbl
dec
shr
or
or
inc
cs
xchg
pop
lret
repnz
cmp
femms
hlt
mov
pop
xor
mov
pop
dec
push
push
lods
mov
sub
aas
push
jmp
mov
sti
aad
xchg
rcl
dec
mov
jg
mov
in
jne
and
jno
sahf
repz
xor
or
push
ret
xor
popf
mov
push
into
ficoml
mov
iret
iret
push
mov
inc
inc
add
in
push
out
call
mov
scas
xchg
mov
dec
cltd
fiaddl
out
xlat
imul
xlat
int
mov
stos
lods
enter
je
mov
xchg
insb
jl
and
adc
int3
cmpsl
xor
movsb
sbb
xchg
cmp
jo
idivl
shlb
repz
ficoms
and
xchg
das
mov
hlt
loop
mov
stos
xor
cwtl
bound
pop
call
pop
sarb
add
add
pop
sub
cmp
xchg
or
xchg
xor
test
cmpb
into
cwtl
lods
adc
mov
test
mov
scas
sbb
shl
iret
cmp
mov
push
iret
pop
mov
jo
mov
shlb
mov
fmulp
inc
pop
mov
jo
dec
push
xchg
iret
fidivl
outsl
cld
xchg
iret
lahf
xlat
jae
and
stc
pop
mov
gs
into
mov
sbb
in
pop
jno
lahf
push
stc
mov
jno
push
mov
pop
jecxz
jge
cmp
int
pop
lds
int3
inc
mov
lret
dec
sbb
sbb
and
rclb
sbb
cltd
in
fdivs
repnz
movsl
inc
fnstsw
scas
not
cld
cmp
jecxz
inc
adc
movsl
push
das
iret
and
pusha
xchg
aad
arpl
fmuls
cmpsb
outsl
ror
xchg
in
int
mov
bound
or
outsb
fimull
sti
mov
mov
jge
sub
push
push
mov
in
daa
ds
cwtl
mov
add
stos
cmp
int
imul
addr16
jp
gs
lret
out
dec
sbb
imul
adc
roll
andb
cmp
insb
lods
test
pop
mov
outsb
xor
icebp
jg
sub
scas
ja
jg
rorb
rcll
lret
iret
fwait
mov
xchg
mov
inc
adc
cld
rcrb
inc
or
xchg
lods
or
pop
rcll
ret
lods
xchg
sarb
outsl
std
loope
cmc
mov
or
xor
pushl
repz
inc
add
push
rorb
das
inc
mov
jne
je
cli
mov
sahf
pop
in
out
mov
sub
hlt
push
aas
addr16
mov
mov
in
in
lods
jg
mov
pop
iret
add
out
js
mov
xor
cmp
in
and
cmp
xchg
adc
mov
jo
shr
rcl
leave
out
iret
cmpsl
je
xchg
clc
outsl
imul
out
cmp
push
fwait
popf
xor
jnp
xchg
mov
jo
and
adc
shlb
fistl
pop
dec
decl
loop
push
aam
add
xchg
xor
scas
ret
into
rorl
movsb
push
push
pusha
sub
add
lock
xchg
xchg
addr16
push
fwait
daa
fldenv
mov
cwtl
scas
mov
adc
dec
pushf
iret
fistpll
shll
aas
adc
push
das
rcl
inc
add
imul
lcall
pusha
mov
mov
adc
loopne
lret
mov
fs
scas
imul
daa
sti
scas
xor
sbb
in
lret
movsb
iret
pushf
fs
inc
sbb
xor
push
insl
mov
mov
shlb
inc
sbb
test
pop
xchg
fdivp
xor
push
cmp
insb
dec
and
iret
rcrl
nop
lods
test
call
or
jge
loop
sub
mov
sbb
jne
cltd
mov
rol
lahf
loop
pop
and
shrb
sti
imulb
stc
shrb
ret
aaa
sbbl
add
pop
sub
push
shrl
mov
stos
sub
jo
push
lcall
jmp
inc
jle
mov
jl
cmpb
mov
clc
adc
cld
stos
iret
repnz
mov
mov
scas
rolb
insb
jo
mov
cmp
jp
add
push
sti
or
jl
push
pop
sti
popa
dec
iret
dec
sbbb
nop
fcmovbe
jne
aam
mov
mov
iret
imul
xchg
cmpsb
push
cli
jmp
add
loop
mov
int
jne
dec
push
mov
adc
push
xchg
xchg
scas
cmp
xchg
add
xor
popa
push
push
mov
mov
mov
sarb
cmp
fisubrs
pop
rclb
add
dec
add
insl
js
xchg
das
jg
jae
inc
xchg
iret
jno
adc
mov
fstpl
lret
cmp
mov
mov
das
scas
adc
inc
jle
scas
mov
cli
xor
xor
mov
push
push
or
repz
mov
mov
jnp
ljmp
lahf
pop
cmc
push
add
psrlq
js
add
dec
lds
dec
shrb
push
and
mov
push
rorb
sbb
adc
into
aam
loopne
or
aad
lcall
inc
adc
fdivrl
movsl
fs
adc
fldcw
mov
outsb
or
pop
shll
stc
aad
jmp
movsl
pop
mov
ficoms
dec
imul
test
lea
cwtl
loope
test
pushf
in
scas
imul
out
xor
push
xchg
sahf
mov
and
stos
test
imul
iret
aas
jns
addl
xlat
dec
fldcw
shrb
cmpsl
lahf
cmp
gs
hlt
int3
or
pop
std
ret
xor
xchg
subl
das
addr16
movsb
mov
and
shrl
dec
push
mov
dec
adc
ljmp
add
in
push
stos
bound
scas
mov
icebp
jbe
in
shlb
inc
sub
iret
enter
dec
sub
push
int3
es
inc
push
mov
sub
xchg
outsb
idivb
mov
or
inc
mov
push
mov
adc
mov
jmp
push
int
bound
arpl
or
lods
push
jge
mov
shl
mov
jnp
in
or
sahf
popf
rolb
outsl
xchg
mov
cmpl
mov
xchg
jl
stos
pop
popf
aaa
scas
clc
push
jbe
sahf
scas
imul
push
xchg
arpl
hlt
cmp
scas
add
add
mov
fiaddl
jecxz
adc
pop
scas
orl
dec
or
add
jae
call
scas
add
jnp
mov
les
jl
cld
sub
insl
xchg
xchg
cmp
rcrb
fwait
iret
pop
xlat
icebp
cmpsl
mov
stos
mov
sbb
cwtl
shlb
mov
mov
lret
mov
sub
xor
fnstcw
leave
add
sar
fildll
dec
insl
push
lret
iret
stos
pop
push
and
inc
mov
jne
adc
addr16
fs
movb
cmp
mov
cwtl
jle
out
inc
scas
lock
ret
jl
and
ds
push
iret
jecxz
fwait
into
mov
push
lock
push
aam
sub
sub
cli
pop
push
insl
out
aaa
loope
push
xlat
inc
call
mov
out
push
int3
imul
data16
insl
imul
insl
dec
test
pop
push
test
cmc
data16
iret
mov
adc
or
rclb
dec
jno
sub
mov
iret
adc
sti
test
xchg
adc
scas
cmp
mov
call
xchg
jp
sahf
repnz
mov
sub
sbb
rclb
outsb
push
ljmp
lret
dec
sarl
dec
cmc
mov
ds
cmp
xchg
stc
sti
push
sbb
add
xchg
mov
mov
je
fists
inc
or
mov
push
pop
pop
scas
sub
pushf
jmp
mov
adc
and
scas
or
cwtl
sbb
rclb
inc
xchg
shll
fwait
lea
mov
sub
ljmp
lret
and
test
loopne
js
pusha
mov
dec
sbb
test
mov
and
ja
daa
shrb
dec
mov
fadd
sub
imul
jg
sbb
xor
iret
pop
sbb
or
lods
mov
xchg
mov
add
rcr
pop
out
fwait
push
dec
int3
aas
out
xchg
xchg
lcall
dec
aaa
mov
xchg
scas
push
in
xor
mov
fsts
and
clc
call
popf
insb
mov
in
ja
out
das
cmp
or
adc
push
jno
nop
imull
aas
sarb
sbb
xchg
aas
test
mov
fcoml
shl
jmp
stc
mov
lods
shlb
xchg
orl
hlt
and
adc
mov
lcall
pop
push
outsl
insl
loopne
sbb
shrb
mov
jae
out
lods
leave
movsl
nop
in
xchg
sub
mov
and
repnz
out
loop
fldcw
popf
test
adc
sbb
lret
int
outsl
pusha
dec
ljmp
jae
xlat
inc
or
xchg
cmp
push
fnop
lds
add
ror
es
inc
jnp
dec
ret
cmp
in
pop
int3
fs
dec
icebp
sub
xchg
mov
mov
and
into
stc
xchg
out
icebp
in
push
add
mov
lahf
push
flds
xor
mov
adc
lret
movsb
scas
xchg
xchg
add
dec
push
ss
lcall
lcall
inc
sarl
xchg
fwait
push
xor
dec
pop
andb
add
or
scas
fiadds
fstl
inc
fs
hlt
cmp
mov
imul
fisttpll
sbb
imul
imul
cmp
iret
dec
out
pop
dec
rclb
repz
cmpsb
mov
je
mov
adc
dec
or
aaa
push
shlb
mov
int3
idivl
mov
test
xchg
cmp
imul
inc
mov
inc
mov
pop
adcl
inc
sahf
jg
in
test
pop
mov
imul
mov
xlat
loope
bnd
loop
jne
lea
fimull
lods
lock
mov
imul
in
and
out
lret
loop
imul
pop
mov
pop
filds
insl
outsb
sarb
in
or
cmpsl
nop
idiv
push
pusha
pop
mov
cmpsl
shll
inc
movsb
pop
xor
mov
jno
and
imulb
xchg
jge
movl
movsb
sbb
repz
xchg
mov
pop
das
pop
into
jnp
dec
sub
leave
jle
pop
into
aas
dec
dec
and
pop
out
jo
xchg
fiadds
add
mov
adc
shr
jns
std
or
test
jns
rorb
pushf
sub
jnp
ret
inc
mov
pop
push
ss
xchg
movsb
sbb
pusha
add
push
adc
adc
rclb
fs
xor
jnp
xor
push
aaa
es
dec
adc
or
mov
mov
sahf
rcrb
cmp
mov
or
add
xchg
pop
cltd
jp
sbb
pop
jecxz
pop
and
mov
lret
inc
mov
push
push
xchg
add
in
sub
inc
jmp
cmp
das
mov
fdivl
pop
mov
sbbb
inc
scas
cmp
mov
and
mov
out
fwait
cmp
popf
adc
jle
int
daa
fcompp
data16
dec
and
push
mov
dec
js
or
jle
les
cld
pop
outsb
mov
sarb
js
sub
xlat
lahf
iret
push
ficompl
leave
xchg
lret
xlat
sbb
es
lahf
inc
ds
push
scas
dec
adc
nop
push
out
mov
fisttpll
jns
scas
fwait
pop
popl
into
xchg
inc
rcrl
arpl
gs
stos
xlat
rcrl
mov
xchg
ja
mov
js
sbb
lret
popa
cmp
jmp
push
je
add
scas
ja
pop
or
inc
jle
push
mov
push
es
bound
or
aad
rorb
shlb
or
lock
pop
adc
repz
popa
stos
out
scas
mov
les
shlb
jmp
mov
ret
adc
out
lea
jno
scas
push
xlat
fs
jbe
dec
loope
cmp
xor
inc
js
xchg
sbb
mov
xchg
mov
leave
xchg
dec
cwtl
jo
push
xchg
fdivs
movsb
in
dec
jp
mov
arpl
scas
mov
sub
test
dec
stos
sub
push
in
cs
cmpsl
subb
xor
call
in
icebp
dec
outsb
cmp
int
jle
popa
jo
sti
popf
pop
ret
aam
scas
sti
notl
aas
pop
dec
adc
sbb
adc
imul
mov
lcall
dec
cmc
add
stc
mov
xor
scas
pop
mov
sbb
inc
or
aaa
add
push
iret
mov
xchg
sub
mov
adc
and
fneni(8087
scas
cmp
arpl
mov
push
add
orl
loop
sbb
xchg
ja
dec
xor
inc
dec
or
aas
incb
push
fwait
pop
inc
mov
pandn
movsl
loope
leave
mov
js
push
sbb
cmp
pop
xor
test
sub
ret
fwait
pop
xchg
aaa
orb
shrl
leave
int
mov
scas
xchg
fwait
mov
enter
test
lock
mov
iret
out
jg
xchg
unpckhps
fnstsw
test
in
fsub
xchg
mov
adc
xchg
sbb
sub
adc
jb
lahf
iret
adc
aad
ret
mov
xchg
inc
scas
jle
insb
lods
rcr
int3
scas
jae
xor
mov
push
aam
mov
jbe
mov
or
jmp
or
out
insl
xor
sub
test
adc
scas
loopne
outsb
pusha
out
jmp
les
idivb
nop
stos
scas
clc
jae
insl
rolb
pop
jnp
aas
lahf
inc
xor
scas
inc
mov
cmpsb
pop
repnz
jnp
iret
bound
cmp
out
jno
loope
mov
mov
out
mov
rorl
test
ljmp
in
aad
jo
and
xchg
std
orl
cld
test
jne
jl
popa
rolb
and
sbbb
xchg
lock
and
add
mov
and
mov
out
push
int
repnz
pushf
cmp
jle
pop
sbb
mov
xchg
jns
adc
add
inc
dec
scas
cld
aaa
mov
rolb
jle
push
or
out
mov
stos
push
ror
mov
push
data16
xchg
adc
ss
std
sub
mov
cmpl
test
and
sbb
insl
dec
xchg
scas
int
jmp
xor
jno
cmpsl
aam
ja
xchg
int3
ret
sub
and
jbe
or
push
scas
sbb
xor
iret
xchg
mov
psllq
mov
rclb
cmp
adc
sub
sbb
in
push
jge
in
push
popa
in
pop
insl
scas
cmp
xchg
adc
inc
push
add
xchg
jo
bound
push
sbb
das
and
imul
pop
jle
scas
jle
sub
add
hlt
sbb
test
rcll
std
adc
test
cld
xchg
insb
mov
mov
add
jne,pn
out
cmp
daa
dec
push
lret
out
dec
xchg
xorl
cld
xchg
sub
pop
lret
cld
int3
mov
movsb
jae
dec
xchg
push
lock
pop
int
or
adc
in
scas
push
inc
sbb
xchg
xor
scas
sahf
mov
add
pop
xchg
mov
inc
out
push
out
lahf
rorb
or
xchg
mov
sub
rcr
shlb
aam
in
xorb
mov
sub
push
adc
fisubrs
sbb
xor
and
cltd
loope
mov
sti
jecxz
xor
sbb
rol
and
cmp
add
repnz
xchg
add
jbe
pop
inc
cmpsl
mov
scas
mov
loop
rclb
and
xchg
fnstsw
adc
mov
fs
xchg
mov
je
cwtl
fwait
inc
cld
lods
jns
adc
icebp
lock
iret
scas
pop
pop
rorl
into
push
mov
in
repnz
imul
jns
iret
aas
mov
push
xchg
sbb
mov
insl
sbb
inc
div
shlb
hlt
add
int
cmp
ljmp
inc
or
push
jl
xchg
je
inc
out
test
mov
je
shlb
mov
popf
dec
rcrb
js
imul
mov
sbb
push
and
iret
negl
push
add
and
or
insb
mov
pop
sbb
loope
test
sti
lock
aad
shlb
sbb
data16
inc
call
mov
or
test
xlat
std
les
or
cld
mov
loopne
insb
mov
mov
sub
out
mov
lods
pop
je
scas
and
outsl
fimuls
mov
jge
jbe
popf
je
jecxz
enter
and
ret
xchg
ror
jns
call
xchg
dec
or
sbb
mov
pusha
push
xor
dec
shll
jbe
test
sbb
dec
lret
js
push
xchg
outsb
or
mov
sbb
cltd
mov
xor
movsb
jle
xchg
mov
push
and
lods
mov
and
cmc
push
or
and
xor
lret
mov
sarl
test
push
xor
pop
out
cmpsb
daa
stos
fisubrl
mov
add
sarb
mov
scas
shl
fcmovbe
xlat
and
sbb
pop
js
push
scas
add
in
cmpsb
mov
shr
popa
dec
sarb
sbb
out
sub
pushf
je
inc
sti
sub
mov
cmp
stos
and
mov
push
jmp
loop
outsb
iret
cmc
sbb
mov
mov
test
imul
cs
scas
inc
repz
sahf
test
js
dec
mov
pop
gs
mov
sbb
pxor
adcl
sarb
in
in
push
sahf
xor
xchg
popa
arpl
sarb
int3
scas
sbb
popf
add
inc
mov
imul
xchg
cmp
stos
pop
cmpsb
inc
roll
dec
fwait
sarb
cmp
leave
shll
scas
icebp
sub
pop
scas
cmp
ret
adc
push
sub
mov
lea
push
rcll
or
dec
mov
push
xchg
or
mov
rolb
iret
and
loopne
mov
scas
and
ds
js,pn
cmc
addr16
or
inc
sub
lods
xchg
mov
push
in
insl
les
iret
les
dec
and
inc
mov
or
insb
inc
sub
iret
xor
cmp
push
jae
mov
rorb
clc
adc
and
and
outsb
imul
sbb
inc
out
movsb
or
cli
ja
xor
add
stos
mov
out
daa
push
pusha
sbb
mov
push
roll
into
data16
je
mov
pop
test
xlat
sarl
sbb
and
push
cmp
std
shrb
sbb
mov
iret
stos
pop
jp
fists
mov
into
xchg
and
and
loopne
adc
dec
adc
in
add
sub
mov
roll
push
jecxz
fsubr
test
dec
scas
push
mov
dec
jmp
mov
pop
pushf
out
sbb
jae
packsswb
mov
jo
xchg
jp
push
or
inc
sub
in
xor
js
and
mov
sbb
inc
dec
mov
out
xchg
aam
dec
and
or
jb
push
scas
fdivs
adc
jbe
ret
outsb
fildll
iret
mov
xchg
je
mov
xchg
lret
int3
adc
adc
ret
repz
pop
xor
test
outsb
mov
or
outsl
or
and
push
out
and
mov
lahf
out
insb
xchg
xlat
jmp
mov
outsb
cmp
addb
das
xchg
shrl
cmp
and
test
loop
inc
test
jb
sub
ljmp
lods
rcl
inc
dec
mov
dec
cs
mov
cmc
and
aam
sbb
lods
lock
mov
ss
outsl
lcall
movsb
xor
dec
cmpsb
mov
push
pop
into
enter
ds
scas
inc
pop
lahf
xor
mov
js
add
shlb
lea
xchg
int
loop
scas
cmpsl
rcrb
movsb
xchg
adc
test
push
lret
shrb
xchg
in
xchg
jge
jge
popf
jp
jne
add
test
xchg
sub
push
pushf
cld
outsb
pop
inc
movb
fmulp
mov
adc
xchg
mov
adc
sub
xor
mov
stc
cwtl
je
hlt
out
pusha
shlb
or
daa
dec
sub
pop
mov
outsb
dec
in
jb
loope
jb
ret
out
scas
dec
shlb
dec
inc
bound
or
rclb
push
sbb
loope
pop
mov
xchg
push
out
cmp
fdivrp
mov
pusha
popf
test
xchg
sub
pop
nop
xchg
lcall
mov
into
mov
xchg
pop
add
js
inc
mov
push
and
push
in
ret
jne
cmp
xchg
pop
xor
fistpll
mov
cs
adc
jl
mov
sbb
cld
dec
rcrb
scas
adc
mov
ljmp
xchg
addr16
int
sub
in
scas
mov
sbb
imul
add
into
pop
jecxz
js
movsl
nop
xchg
inc
ret
scas
loopne
js
jae
push
sub
adc
iret
xor
mov
jb
adc
mov
or
hlt
in
je
sti
dec
mov
iret
stc
outsl
and
xchg
dec
jmp
cmpsb
fcomp
add
adc
inc
xor
lds
xchg
repnz
jge
stos
repz
scas
cs
sbb
iret
sarb
jae
and
aas
xchg
pop
mov
push
stos
and
into
insb
stos
or
mov
lahf
mov
or
jne
or
mov
mov
sti
inc
das
out
mov
lds
or
push
ja
add
xchg
shlb
out
rcll
push
iret
mov
into
sub
xor
ljmp
and
cwtl
mov
xchg
pop
lret
push
cwtl
int3
cmovl
or
sahf
dec
fisubrl
shlb
push
ret
xor
xchg
rorl
jnp
mov
stc
out
mov
out
into
mov
jg
testl
test
and
and
rorb
mov
add
xlat
sbb
jecxz
push
inc
negl
add
xchg
and
sbb
sbb
mov
sbb
xlat
inc
loop
popf
ret
loop
ret
mov
scas
mov
cmp
lods
das
into
popfw
cmpsb
mov
mov
into
pushl
sbb
jp
pop
or
idivl
ret
repz
dec
fldcw
ror
or
lcall
fildll
mov
jmp
jno
add
mov
mov
movsb
fs
xor
leave
xor
inc
inc
adc
push
and
cld
lds
scas
orb
stos
lods
push
mov
popf
adc
mov
inc
jl
paddw
adc
fiaddl
scas
push
mov
in
and
lahf
xchg
repnz
lret
je
in
pop
fnop
push
imul
cmp
dec
pusha
scas
push
xor
popa
jge
cs
mov
add
push
outsl
dec
adc
mov
pop
cmp
test
cmp
pop
gs
jp
adc
into
jnp
shl
outsb
enter
sub
push
mov
std
iret
imul
adc
stos
je
xchg
outsb
stos
or
mov
scas
int
dec
pop
mov
ror
mov
or
in
call
jne
inc
fdivr
and
push
mov
xchg
push
cmc
scas
sbb
mov
dec
inc
mov
movsb
xchg
shrb
mov
pop
imul
or
movsb
mov
outsl
out
xor
adc
leave
add
into
lea
cmpsl
add
int3
cmp
test
das
aam
mov
sbb
in
outsl
pushf
mov
shlb
jb
sbb
or
iret
dec
adc
fwait
and
enter
jnp
popa
fsubrl
lds
add
je
lods
pusha
cmpsb
in
and
loope
cmp
icebp
bound
test
mov
pop
cmp
cmpsb
and
testb
fildll
mov
sub
in
mov
pusha
repz
sti
sbb
push
movsl
scas
xor
loopne
push
imul
pop
fs
loope
stos
mov
in
subl
testb
xor
pusha
loop
into
dec
mov
or
cmp
jge
fsubrs
cmpsb
jmp
pop
scas
stos
mov
cld
rorl
enter
sti
stos
fisttps
scas
mov
push
mov
mov
cli
lods
mov
icebp
pop
out
push
mov
into
inc
addb
addl
mov
loopne
rcl
out
inc
pop
scas
cmp
int
shrl
cwtl
sbb
iret
daa
push
hlt
add
xchg
jns
jae
imul
stc
sbb
inc
push
bound
xchg
pop
adc
test
or
ljmp
jo
out
pop
push
jbe
dec
shrl
inc
or
xchg
sub
andb
pushf
lods
cmpsl
pop
lea
shrl
push
cmpsb
pop
mov
mov
or
xchg
and
pop
aad
jmp
push
dec
pop
data16
fsts
out
inc
hlt
cwtl
adc
into
sbb
aas
cltd
sub
rolb
lock
bound
shlb
fmul
dec
faddl
dec
jg
fxch
daa
mov
xlat
dec
les
or
xor
insb
xchg
jnp
andl
das
mov
mov
mov
leave
dec
xchg
mov
adc
into
popf
mov
rcl
lahf
rorb
xor
mov
iret
out
sbbl
lret
xchg
ret
mov
mov
cs
jle
sub
pop
mov
test
test
mov
lret
andl
mov
jg
cltd
int
xchg
fwait
sahf
jb
pop
mov
out
in
scas
lods
sahf
cmc
scas
rorb
inc
add
mov
pop
movsb
dec
stos
xor
mov
cld
push
jmp
psrad
pop
in
rorb
pop
ja
aas
rolb
jl
adc
or
lret
xchg
xchg
in
sti
jae
lea
mov
cld
adc
repz
nop
and
mov
jno
adc
pop
scas
nop
pop
mov
mov
popf
rol
or
out
icebp
and
outsb
rolb
cmc
fists
daa
jno
cmp
je
sbb
jno
or
xor
das
push
xchg
fs
lret
xlat
fsubrl
xchg
mov
fcmovnb
lahf
jae
sbb
push
jecxz
stos
jle
insl
pop
jae
add
sbb
lret
lret
pop
testl
scas
cli
inc
bnd
mov
iret
adc
adc
mov
cltd
push
push
std
sub
test
hlt
xchg
shl
mov
xchg
call
sbb
and
sub
out
or
add
hlt
stos
daa
jno
iret
in
imul
adc
mov
sub
cltd
rcll
or
pop
or
rcrb
dec
mov
mov
xor
or
iret
clc
sub
setns
pop
xchg
scas
inc
dec
inc
dec
dec
sbb
in
into
loop
popf
jo
cli
dec
xchg
aam
or
dec
or
sahf
xchg
jecxz
stos
sbb
rolb
push
outsl
rcrl
xchg
stos
iret
sbb
pop
sbb
mov
push
fmull
add
sahf
scas
fnstenvs
shr
mov
inc
pusha
iret
jb
popf
sti
jp
ret
je
lods
loop
je
pop
nop
scas
lds
sub
std
mov
pop
adc
dec
rclb
mov
push
iret
movsb
dec
roll
test
lcall
sbb
push
lahf
push
jno
mov
call
jnp
push
xor
roll
dec
js
or
lret
add
mov
mov
sahf
fsubrp
fsubr
scas
in
mov
shr
push
shrl
mov
stos
and
inc
push
xchg
cwtl
lahf
add
sbb
pop
cmc
cli
xchg
inc
jnp
imul
shlb
icebp
scas
push
into
ja
push
addb
in
mov
insb
scas
sub
data16
sarb
and
js
xor
in
lret
scas
or
cwtl
stc
xchg
pop
xor
xchg
scas
xor
xchg
jp
sub
sbb
loop
jmp
shrb
adc
divl
inc
push
or
xor
popa
adc
dec
cmp
fadds
cltd
add
outsb
or
mov
in
inc
hlt
into
scas
test
mov
xor
jge
mov
add
xchg
mov
dec
cmc
pop
mov
xchg
cld
loopne
jle
nop
std
outsl
cs
test
rcll
cmp
pop
popa
loopne
cmp
and
and
xlat
mov
mov
out
sub
push
shlb
pop
pop
sub
xchg
pop
scas
pop
push
jge
jne
out
fxch
sbb
arpl
xchg
mov
xor
or
xor
fstpt
mov
sbb
test
cld
dec
popf
xor
punpckldq
data16
sar
add
stos
cmpsl
push
aad
jne
out
dec
push
jmp
add
scas
std
cmp
mov
cmp
lds
dec
pop
es
iret
rcrb
bound
sub
sub
call
scas
imul
pop
or
xor
dec
cmp
xchg
scas
sub
adc
sbb
sbb
andb
sbb
or
in
dec
sbb
shrl
roll
pop
test
repnz
frstpm(287
scas
fiaddl
pop
test
test
hlt
xchg
jg
mov
shrb
call
pop
adc
dec
xor
test
test
cmp
frstor
call
test
lret
loop
shlb
out
loopne
mov
fdivp
into
pop
int3
jnp
mov
outsl
sbbl
icebp
xor
loop
xchg
mov
or
sub
lcall
add
imul
sbb
cld
pop
or
sub
jge
cmp
shl
aam
movsb
cmp
hlt
sub
test
ljmp
pop
dec
xor
ds
mov
sub
idivl
imulb
lcall
ret
jge
int3
push
inc
lret
cmp
dec
add
sbb
je
pop
lea
dec
pusha
loope
fmuls
repnz
int
mov
mov
xor
sbbb
mov
mov
ja
negl
dec
aas
pop
push
aam
dec
jg
jbe
inc
sub
fnsave
or
popf
cli
leave
xchg
jb
inc
out
cwtl
push
std
aaa
iret
mov
mov
cld
xor
stos
push
incb
repz
add
stos
cmp
jbe
xor
out
shrl
ss
in
cltd
repnz
cmp
dec
scas
test
cltd
cltd
lods
pop
dec
cmp
or
mov
mov
mov
loopne
pop
fidivs
lock
cmpsb
inc
mov
mov
ja
push
sub
fxch
ds
push
or
mov
popf
push
xchg
adc
mov
je
leave
cmpsl
rclb
push
sub
adc
dec
rclb
push
shll
and
cs
loop
push
out
jecxz
cli
outsl
int
outsl
cltd
cs
xchg
iret
cltd
int3
orb
orl
out
fcomp
xchg
jp
xchg
lds
test
pop
dec
adc
cmp
xchg
out
xchg
xor
push
mov
out
or
lds
adc
mov
lock
sti
mov
int3
call
cmp
imulb
rcrb
inc
sbb
xor
iret
out
clc
sub
xchg
dec
and
xchg
mov
xor
push
in
scas
sub
xchg
inc
hlt
mov
cmp
pop
shl
jb
or
cmpsl
jns
jbe
pop
push
xchg
sub
imul
rcrb
cmp
or
push
and
mov
std
jmp
shl
inc
lds
int3
jmp
scas
in
ss
or
shll
push
mov
push
pop
mov
lahf
xchg
xor
iret
jl
and
adc
dec
int
xor
dec
out
imul
push
and
inc
or
mov
jge
scas
sub
dec
movsb
xchg
test
aas
mov
out
xchg
jg
das
out
test
dec
rcrb
cmp
shlb
inc
pusha
lods
fstl
mov
negl
sub
push
xor
xchg
xchg
loop
std
scas
xor
je
rolb
test
xlat
xor
popf
iret
sub
push
or
cmp
pop
push
mov
sbb
mov
xchg
insb
inc
mov
out
pop
les
pushf
iret
pop
iret
cmpsb
aaa
dec
fwait
xchg
test
or
mov
fsubs
fdivl
scas
mov
jp
cmp
jns
leave
insb
inc
int3
scas
pusha
adc
xor
mov
adc
dec
add
pop
cmp
mov
call
xchg
outsb
imul
adc
incb
push
jle
mov
mov
stc
ja
inc
iret
and
fbstp
fisubrs
mov
xchg
cs
push
sbb
out
xchg
or
or
xlat
xchg
xor
nop
out
clc
adc
xlat
pushf
repnz
in
movsb
add
mov
sahf
std
loop
sbb
mov
mov
lret
iret
jmp
mov
lret
cmp
ss
push
push
in
xor
rclb
cwtl
push
mov
lcall
fwait
dec
imul
mov
shrb
dec
es
mov
or
sbb
std
and
inc
icebp
insb
loope
mov
or
inc
test
xchg
sbb
and
xlat
push
jo
scas
sub
and
rolb
cld
cmp
dec
jnp
xor
sbb
lea
inc
jge
leave
scas
imul
or
hlt
jg
jecxz
inc
fs
imul
pop
rorl
and
mov
mov
js
fbld
out
ljmp
insl
dec
mov
sbb
inc
test
xchg
jnp
pop
stos
mov
iret
clc
or
mov
into
ja
pop
or
and
push
sbb
push
push
pop
imul
mov
mov
dec
and
inc
xchg
cli
adc
ja
lea
inc
idiv
cwtl
scas
push
test
int
push
xor
or
xchg
and
add
and
sub
out
in
mov
sub
xchg
xchg
push
push
sahf
add
xchg
xchg
adc
mov
adc
push
push
ffreep
flds
call
idivl
iret
lds
xchg
xchg
popa
sbb
or
stos
rclb
push
jl
sub
int3
cmp
divl
dec
sarl
dec
mov
or
sbb
mov
mov
popa
iret
xor
movsl
jle
adc
lods
xchg
sub
adc
dec
mov
pop
loope
xchg
sahf
outsb
inc
jnp
scas
xchg
jno
scas
xchg
scas
rorl
rol
clc
cmpsb
cwtl
js
ljmp
mov
add
fwait
sub
push
pop
nop
outsb
cwtl
iret
js
adc
cltd
ror
sbb
lods
int
aam
push
adc
or
movsb
lods
push
loopne
adc
sbb
in
test
sub
rcrb
mov
es
add
bound
add
inc
lret
and
dec
dec
into
sahf
scas
repnz
lods
in
push
lcall
outsb
bound
xchg
mov
daa
idivb
push
fdivrl
scas
out
ret
lods
roll
or
add
dec
sbb
or
rolb
xchg
sarb
enter
popf
inc
fs
mov
xchg
xchg
cwtl
cli
lret
add
mov
jnp
inc
into
xchg
ror
hlt
jno
incb
pop
mov
push
xchg
mov
loopne
mov
add
cmp
call
lods
inc
add
fistpl
mov
inc
mov
pusha
inc
add
scas
mov
cltd
push
fs
in
sti
stos
iret
sub
std
xchg
or
push
lock
cmpl
enterw
adc
es
pop
subl
imul
cmc
test
jns
push
or
jnp
jl
adcl
sti
int3
hlt
icebp
rol
or
adc
pop
js
hlt
ljmp
xchg
push
sub
inc
inc
xchg
jl
jle
xchg
andb
cmp
jp
lret
nop
xchg
test
test
push
mov
mov
sbb
xchg
andb
dec
add
movsl
sti
scas
test
out
cmp
aaa
and
mov
mov
xor
add
jno
mov
lahf
lds
shll
pop
inc
xchg
pop
je
xchg
jnp
jmp
lods
out
jge
sarb
jo
in
inc
ss
add
sbb
aaa
xchg
test
adc
insb
scas
jb
gs
movsl
cmp
push
je
loope
jbe
mov
and
mov
pop
adc
cmp
fsub
into
call
test
lods
or
xlat
add
sub
push
sub
iret
pop
push
aad
fst
call
inc
jmp
popa
fsubr
scas
scas
adc
add
mov
or
cmpsb
inc
subl
pushf
addb
scas
sub
xor
dec
sarb
xor
add
dec
or
aam
mov
bswap
dec
cld
xchg
pop
pop
pop
jo
xchg
mov
and
ljmp
loopne
fistpl
shlb
scas
push
scas
imul
std
cmp
cltd
xchg
sub
jge
aas
dec
pop
shlb
lret
xchg
sub
mov
push
adc
dec
dec
fst
loopne
sarb
xchg
jo
inc
xor
cltd
negb
in
cmpsl
repnz
in
mov
inc
cs
xor
or
inc
fistps
mov
scas
mov
std
popf
jmp
imul
iret
pop
into
inc
mov
or
jo
pop
testb
mov
dec
movsl
adc
into
loope
aas
in
into
sti
and
aaa
aas
pop
iret
mov
cmp
faddp
inc
cltd
xor
clc
xchg
mulb
iret
pop
call
pop
setb
pop
or
dec
push
add
cmp
pop
shll
cmpsl
mov
shlb
add
orb
jns
push
xchg
xor
jmp
or
imul
les
fs
cmp
and
scas
iret
or
cwtl
jmp
rcrl
lret
pop
call
rcrb
jcxz
scas
loop,pn
ja
push
cmpsl
xchg
jnp
xor
push
mov
loope
neg
les
les
jns
scas
inc
cwtl
add
shrl
pop
cli
fbld
push
push
cmp
xchg
inc
pop
cs
addr16
mov
dec
mov
ds
push
data16
imul
add
jl
jbe
rorb
mov
stc
aas
nop
leave
mov
ficomps
push
xchg
aaa
inc
iret
lahf
jl
aad
or
ret
enter
out
sbb
call
fldenv
sub
sub
jg
idivb
mov
mov
jecxz
xchg
out
notl
lcall
shlb
sub
clc
into
notb
sti
cmp
xchg
mov
push
call
xor
in
scas
sar
insl
out
jecxz
inc
rolb
push
adc
lret
mov
add
xchg
mov
nop
fstp
cld
movsl
shll
insl
adc
mov
repz
pop
cltd
dec
xchg
nop
cmpsl
ljmp
fsts
cld
call
outsb
mov
xchg
ss
dec
jecxz
dec
or
cmp
scas
mov
dec
ret
pop
frstor
bound
into
and
xchg
cmp
jb
idivl
dec
test
sbb
mov
popf
aam
scas
sub
xchg
sub
or
xchg
cmp
dec
lret
loopne
sbbl
or
in
mov
dec
pop
dec
test
dec
int
lods
gs
pop
sbb
int
lock
loopne
rorb
movsb
pop
inc
or
test
adc
fwait
xchg
mov
xchg
jle
shll
sahf
add
xor
and
push
out
jnp
add
jmp
hlt
into
pop
movsl
jb
fstps
cmpb
xchg
mov
stos
loop
andb
mov
pop
rorb
xor
adc
out
push
and
jo
pop
sar
lcall
iret
pop
push
xorl
cltd
data16
adc
jmp
movsb
lret
xor
cmovp
push
sub
inc
lahf
or
daa
jmp
xchg
outsb
fadd
xor
mov
sbb
inc
mov
test
out
cmp
mov
dec
fisttpll
cld
out
mov
fwait
and
mov
jns
adc
or
inc
push
add
pop
outsl
shrb
pop
lds
jl
xchg
add
cmpsb
pcmpeqb
enter
shlb
iret
push
cmp
or
shrl
popf
inc
mov
push
adc
negl
int3
shll
addr16
mov
cmp
jne
lds
xor
out
pop
pop
jl
scas
mov
imul
les
push
pop
aam
xchg
icebp
popf
inc
pop
xchg
fucomip
jne
ss
or
clc
mov
dec
ret
lods
add
xor
jp
shll
push
out
les
mov
pop
pop
lea
into
xor
clts
out
or
push
test
mov
outsl
mov
push
aas
inc
pop
hlt
je
jb
push
ret
and
aas
gs
scas
cmp
test
sahf
add
jl
dec
mov
ljmp
mov
stos
xchg
pop
pop
xchg
stc
test
scas
mov
jo
loop
push
dec
adc
iret
sub
dec
push
lock
clc
inc
call
roll
mov
mov
mov
call
fidivrs
out
xchg
and
push
add
mov
cmp
popa
iret
cmp
dec
insl
xlat
dec
mov
jno
xor
or
lahf
lcall
loope
clc
iret
mov
adc
xchg
test
gs
jle
scas
out
lds
mov
into
push
push
ss
jno
jle
add
je
jne
dec
das
pushf
out
sub
or
lock
mov
fstps
xor
shr
jne
rcl
out
js
xchg
jne
lcall
scas
cmpsb
lret
repz
scas
int
in
rorl
fisttpll
add
int
jbe
mov
push
mov
lcall
mov
scas
mov
aad
xorb
xchg
push
cmpsl
sub
lret
dec
loop
in
xchg
cld
clc
daa
out
popa
pop
scas
mov
dec
cmpsb
dec
stos
enter
nop
inc
push
js
adcb
insb
std
test
scas
and
and
or
pop
js
xchg
rclb
mov
repnz
lock
fcmovnbe
pop
mov
rep
ljmp
rorb
sbb
iret
ret
outsb
jae
fcoms
mov
pop
jb
scas
and
pushf
dec
push
out
cmp
ljmp
add
outsb
and
push
enter
mov
push
or
out
xor
mov
dec
jns
xchg
cwtl
push
xor
or
cmc
rcrb
insb
mov
adc
fwait
xchg
aam
cld
aad
pop
jb
shlb
adcb
adc
lods
push
push
inc
scas
dec
dec
sbb
pop
push
add
sarb
shl
test
lret
jo
mov
iret
mov
daa
mov
arpl
xchg
xor
test
aaa
mov
gs
sbb
jmp
mov
and
push
negl
dec
mov
xor
outsl
test
imul
int3
jecxz
dec
sbb
movsb
rcll
into
jo
repnz
ror
in
dec
jp
shll
leave
loope
sti
lods
test
or
mov
subps
fs
movsl
imul
cmp
lods
and
add
add
jno
idivb
jp
loope
mov
lret
and
psllw
repnz
xchg
int
dec
shlb
cmpsl
sub
mov
mov
inc
das
jns
pop
iret
daa
inc
cs
jbe
xchg
out
sbb
and
add
adc
rep
cltd
jb
cltd
and
push
iret
pusha
lret
push
push
jbe
dec
std
xchg
jae
mov
inc
xchg
mov
pop
jbe
jno
pop
imul
in
inc
popf
pushf
dec
xchg
add
into
push
pop
fnop
lea
inc
pop
iret
imul
mov
xchg
sub
das
pushf
fsubp
rorb
sti
jg
enter
xchg
or
sub
xchg
jbe
sbb
lea
loope
mov
arpl
push
and
mov
cmp
gs
js
push
add
mov
jae
das
data16
or
jp
sbb
pop
sub
ljmp
imul
cli
push
push
adc
mov
into
lret
movb
pop
stos
ds
scas
les
cmc
cmp
daa
loopne
adc
scas
mov
fnsave
out
inc
xchg
xchg
rcrl
adc
andl
subl
jge
push
jns
rcrl
insb
lods
mov
daa
scas
lods
scas
outsl
jae
fistps
pop
and
dec
pushf
or
mov
aad
mov
sahf
mov
rorb
inc
shll
cmp
cltd
xor
sbb
jne
inc
mov
repz
cmp
jle
fs
iret
add
xchg
dec
mov
das
push
jge
add
mov
xlat
mov
mov
inc
mov
mov
lret
jmp
lret
jmp
les
scas
leave
in
sahf
rorb
into
push
jge
push
fadd
mov
cmc
pop
mov
enter
xchg
xor
pop
lret
inc
iret
lds
movsb
sbbb
mov
pop
pop
inc
pusha
lods
adc
dec
or
jmp
and
stos
aas
scas
sbbb
jmp
cmp
push
cmc
loop
jns
push
ficompl
and
cs
js
adc
sub
shlb
or
into
add
xor
cld
add
jecxz
pop
mov
sti
or
lahf
sub
mov
ds
std
loopne
push
add
ljmp
iret
rcrl
rcrl
pushf
shll
adc
push
xchg
or
inc
mov
lret
mov
lods
rcl
push
ss
test
dec
push
and
out
inc
adc
xchg
jp
xorb
lret
mov
lds
add
outsb
je
mov
cmp
into
subb
add
hlt
cmp
pop
js
xchg
mov
cmp
scas
adc
ljmp
mov
xor
xchg
cmc
dec
scas
out
xor
fst
imul
sbb
repz
notl
mov
cli
xor
cmp
adc
in
add
inc
push
sub
jg
dec
dec
adc
lret
fisubrl
sarb
xchg
int
enter
test
add
insl
push
sub
fcmovu
fstpt
in
andl
cmp
outsb
cs
sub
sub
jmp
scas
ret
push
sub
rclb
pusha
out
data16
into
adc
ficomps
xchg
cs
leave
out
dec
jp
ds
cmp
mov
iret
or
int
add
negb
into
xchg
fadd
imull
loope
xchg
into
enter
xchg
iret
int3
iret
mov
fsts
lret
sbb
adc
into
jnp
push
ds
xor
push
adc
into
movsl
and
int3
mov
popl
mov
cli
test
mov
adc
jg
dec
push
add
fwait
mov
cwtl
dec
clc
xchg
sbbb
inc
les
mov
loope
dec
nop
mov
xchg
xor
loop
ds
push
lret
mov
cltd
add
stos
xchg
mov
push
outsl
inc
dec
mov
leave
scas
push
mov
push
enter
das
jo
mov
scas
int
insl
sahf
dec
inc
xchg
aas
divb
jmp
std
hlt
std
add
dec
xchg
pop
out
and
xchg
into
mov
jbe
ret
js
inc
mov
ja
xchg
push
mov
sti
and
mov
jmp
shlb
mov
aad
movsb
scas
cmpsb
into
xlat
data16
fcomps
subb
push
sub
add
scas
mov
mov
in
lcall
lret
mov
mov
sbb
push
idivl
iret
mov
stos
push
popf
xchg
movsb
dec
daa
sbb
and
aam
stos
ljmp
scas
push
inc
xchg
psadbw
loope
mov
pop
push
leave
push
scas
add
dec
mov
aad
mov
xchg
dec
stc
xor
cmp
adc
jp
mov
lods
mov
cltd
mov
mov
int3
mov
or
inc
jmp
add
push
imul
test
rorb
xor
sahf
pop
dec
cmp
pop
xchg
or
xchg
ja
aad
mov
lcall
in
aam
pop
cmpsl
pushf
ret
jg
jecxz
adc
shlb
dec
pop
jmp
mov
scas
dec
mov
fadd
xchg
sarl
pop
xchg
notb
nop
jnp
dec
mov
or
aas
enter
dec
les
mov
xchg
lds
repnz
out
xchg
sbb
repz
je
adc
loop
add
dec
and
sarb
xor
push
les
fstpt
jbe
and
out
xchg
cmp
xchg
sar
jp
jmp
cmpsb
movsl
fwait
lcall
iret
and
push
push
mov
mov
xor
daa
pop
imul
sub
mov
lds
adc
cmc
xor
push
cmp
loopne
adc
sbb
mov
iret
rorb
rcrb
jns
xor
rol
ret
pusha
pushf
repz
sub
adc
or
cmpsb
pop
inc
adc
insb
cmpb
mov
rcrb
lods
pusha
call
jmp
cmp
mov
repnz
sbb
in
push
sbb
xchg
dec
nop
iret
shl
sbb
mov
fcmove
jb
flds
xchg
jmp
filds
pop
inc
xlat
push
cmp
movsl
mov
push
or
ret
test
xchg
fisttpll
not
cmp
mov
gs
cmp
xor
xor
jmp
xchg
jle
out
mov
enter
jo
imul
push
scas
dec
fdivp
stos
inc
cmp
mov
scas
push
in
shrb
pop
pop
out
or
hlt
test
clc
insb
in
in
dec
pushf
lods
clc
or
xor
aaa
insb
jns
push
sub
iret
pop
push
movsb
add
jo
xor
inc
bound
xchg
scas
inc
push
jno
shll
stc
jl
into
aaa
jbe
or
cltd
rclb
jg
cltd
pop
les
iret
inc
iret
sarl
xchg
hlt
inc
xor
shll
sarb
mov
scas
xchg
or
cmp
add
jecxz
push
scas
xchg
add
leave
pop
push
rorb
leave
leave
xor
fptan
imul
aad
in
ds
xchg
iret
or
enter
mov
xorl
sbb
sbb
mov
rcll
int3
test
push
jb
mov
gs
xor
adc
imulb
call
jmp
cwtl
or
sub
push
jns
je
call
jl
pusha
mov
popf
mov
mov
add
dec
aas
stos
or
outsb
pop
fstpl
fwait
xchg
ja
shll
pop
loopne
je
loopne
loop
add
inc
push
cli
mov
xor
cmp
rcrb
dec
nop
movsb
iret
push
aam
cmp
aad
inc
arpl
and
dec
ret
fistl
int
je
rol
inc
inc
xchg
mov
sti
test
cmp
cld
xchg
hlt
cs
mov
neg
ljmp
adc
and
into
pusha
mov
and
cmc
cmp
dec
jmp
mov
inc
and
iret
shlb
add
ror
ret
pop
xchg
jb
in
pop
jae
sbb
lcall
mov
mov
xchg
sub
fidivl
cmpsl
push
cmp
and
movsb
pop
push
inc
not
xchg
mov
cld
add
lea
int3
lahf
or
add
adc
icebp
mov
scas
jb,pt
dec
jge
mov
fimuls
cltd
mov
cld
or
mov
jbe
aas
cmpsl
popa
aaa
mov
cmpsb
push
xchg
mov
fisubrs
adc
cmc
scas
loop
aad
rclb
push
mov
jb
cmc
enter
mov
mov
daa
aad
insl
pop
subl
lcall
inc
lods
mov
bound
mov
pop
stos
dec
out
mov
push
fldenv
test
test
dec
xchg
fcom
rcrb
fcmovnb
bound
ss
ret
iret
js
inc
fs
lock
mov
rolb
js
aaa
fucom
loope
xchg
inc
mov
cs
lret
rorl
data16
or
insb
mov
popa
jecxz
outsl
jns
pop
sbb
xchg
and
sub
out
into
push
add
jb
in
dec
add
fs
adc
adc
fnsave
je
pop
sub
jbe
rcr
nop
push
jne
movsl
das
cld
das
loope
lahf
into
pusha
mov
shrl
pop
into
xor
arpl
aaa
clc
imull
rclb
test
int
xchg
and
shlb
insb
mov
push
fcoml
add
lret
pop
scas
loop
scas
mov
push
and
xchg
mov
iret
and
lret
push
lock
lahf
adc
push
sar
mov
cmp
xchg
icebp
mov
scas
jl
pop
clc
aad
push
dec
jg
dec
inc
xchg
xor
das
inc
lret
xor
sbb
imul
clc
cld
or
sti
sub
push
mov
repz
lret
lcall
pop
mov
xchg
jno
jl
mov
mov
scas
add
mov
inc
jle
sahf
mov
cmpsl
test
or
hlt
xchg
inc
mov
jne
inc
nop
mov
lods
call
jo
push
mov
shlb
lock
push
rorl
xchg
mov
pop
ds
outsb
rclb
push
sbb
iret
inc
cmove
push
push
xchg
and
std
rorl
leave
int
add
testl
fisubrl
sahf
inc
and
into
xlat
sbb
je
jg
wbinvd
iret
add
gs
lods
push
outsb
xchg
cmp
aad
dec
outsb
cltd
push
mov
sbb
xchg
dec
push
cli
fs
nop
adc
sbb
push
fxch
mov
mov
pushl
or
add
into
pop
cmpl
sub
test
iret
outsb
sub
int
xchg
repnz
jge
in
fdivs
mov
mov
mov
sbb
iret
adc
jnp
xchg
insl
sub
leave
push
arpl
popl
sbb
in
stc
scas
hlt
nop
mov
pop
lods
and
pop
jp
mov
sbb
xor
and
sbb
inc
test
mov
push
mov
mov
outsb
mov
cmpsl
scas
insb
xchg
mov
rclb
sbb
lahf
pop
xchg
dec
rolb
cmp
or
mov
pop
cmp
sub
mov
mov
je,pt
push
loop
push
arpl
jp
stc
inc
mov
lcall
adc
dec
xchg
xchg
dec
cmp
add
dec
in
je
shlb
dec
dec
stc
bound
fwait
iret
sbbl
loop
jle
aam
adc
negb
add
scas
xchg
dec
dec
rol
es
xchg
push
pop
adc
loop
xchg
cmp
pop
cmovg
imul
scas
hlt
imul
add
or
addb
add
sahf
push
dec
inc
lods
scas
or
setno
pop
xchg
push
test
mov
leave
add
or
outsb
or
xchg
addr16
mov
insl
sub
fwait
pop
xchg
hlt
out
xchg
mov
xor
pop
loope
sub
sarl
adc
push
shlb
push
mov
sbb
xlat
and
pop
aam
repnz
fiadds
outsb
add
scas
pop
sub
notb
sbb
inc
pusha
push
imul
inc
ret
in
mov
xor
subb
scas
lret
rcrb
idiv
ss
mov
faddp
jmp
into
pop
sbb
cmp
out
fcomi
sahf
and
xor
mov
jge
shr
cs
sbb
lods
iret
pop
test
sub
fsubr
mov
mov
pop
xor
sub
xchg
xchg
movsb
fisttps
and
pop
or
or
mov
mov
or
adc
sbbb
xchg
lods
repz
bswap
pavgw
shrl
xchg
cmp
sub
mov
jo,pn
or
add
mov
xor
or
mov
cltd
je
rcl
or
outsl
fstpt
fdivs
mov
repnz
inc
xchg
push
add
adc
out
rcrb
and
sbb
fidivs
cmp
and
repnz
mov
mov
test
mov
push
movl
subb
mov
add
test
push
sub
lods
pop
int3
popa
mov
or
push
lock
push
or
ja
scas
cltd
xchg
sub
fisttps
inc
xor
les
inc
pop
fsubs
jo
ljmp
push
fcmovne
sbb
mov
mov
push
addl
jg
push
inc
xchg
xor
repz
fcom
rclb
mov
pop
test
cmp
out
testl
scas
mov
or
dec
mov
cli
pop
iret
fs
pop
pusha
or
xor
pop
fs
scas
fldt
shrl
cmpsb
jae
cwtl
gs
ja
nop
and
mov
mov
and
shlb
add
in
lcall
pop
lahf
rolb
xor
fnstsw
adc
bound
mov
out
pop
or
mov
lahf
mov
dec
mov
xchg
sbb
scas
push
inc
push
mov
mov
ret
or
jp
scas
sub
mov
push
push
mov
stos
xchg
iret
aam
hlt
jmp
push
mov
fdivrs
sahf
cld
pop
inc
adc
into
or
sub
ret
push
fsub
jge
sub
mov
push
shll
dec
mov
icebp
into
ljmp
aam
pop
inc
stos
movsl
jmp
ljmp
ret
and
xchg
mul
in
inc
mov
mov
ljmp
mov
push
fsubrs
pop
test
pop
add
fdivrs
aas
scas
fwait
xor
aas
jo
pop
and
out
and
ljmp
jo
or
xchg
mov
cmp
fidivrs
adc
sbb
aad
xor
outsl
lahf
adc
rclb
data16
rcrl
mov
fdivrs
in
cld
rclb
jns
cmp
lds
jle
scas
sub
mov
pop
mov
into
scas
jbe
mov
mov
aad
sbb
mov
rcr
popa
pop
mov
dec
mov
jle
scas
push
inc
add
cmc
cltd
mull
inc
jg
or
xlat
adc
dec
addb
mov
movsl
inc
aam
adc
dec
ret
mov
jg
jp
aas
cltd
stos
loopne
jbe
jecxz
call
dec
mov
cmpsb
aaa
das
lods
push
push
dec
shlb
lea
xor
add
into
into
xchg
filds
sbb
dec
cmp
andb
cli
pop
mov
movsb
notb
push
push
push
adc
sbb
pushf
mov
rcrb
jns
bswap
xchg
xchg
sub
push
dec
fdivrl
into
pusha
lret
lret
cwtl
cltd
mov
shl
push
add
outsl
addr16
int3
rorb
cmp
ret
rorb
cmp
iret
sub
sbb
push
inc
jae
xchg
or
push
adc
popf
adc
jne
add
imul
cli
es
push
fisubrl
xlat
lcall
dec
push
add
pop
and
lahf
iret
mov
mov
loopne
inc
in
lods
and
lods
xchg
jno
dec
mov
xchg
push
mov
xchg
data16
sbb
add
into
outsb
mov
rolb
jmp
shlb
mov
push
das
pop
adc
sbb
rcrl
xchg
cmp
fs
scas
cmp
sahf
jmp
loop
into
add
jae
enter
xchg
sbb
mov
xor
xchg
xchg
scas
pop
cmp
ror
pop
and
fwait
repnz
iret
andb
or
shll
xchg
or
mov
pop
mov
enter
test
ljmp
jns
mov
or
out
lcall
popa
xlat
test
and
sub
and
sarb
stos
fisubs
jae
xor
pop
arpl
mov
push
sahf
jb
mov
cmpsl
mov
xchg
push
jg
adc
mov
outsl
sbb
inc
ret
jbe
jle
fwait
push
or
or
add
push
cmpsl
xchg
pop
fnstsw
push
ss
orb
fisubrl
ds
stos
sub
xchg
clc
jne
xchg
pop
or
stc
imul
adc
je
orb
imul
rol
loopne
cmc
dec
push
xchg
inc
dec
inc
scas
es
jns
loop
popa
into
dec
ss
mov
push
clc
xchg
scas
inc
stos
leave
lods
and
mov
push
insl
cmp
int
push
pop
sahf
dec
sbb
dec
iret
repnz
aaa
int
push
rcrb
les
cwtl
ljmp
stc
pop
adc
sahf
jnp
sti
and
leave
outsl
inc
cmp
push
cld
mov
nop
out
add
xor
bound
mov
xchg
ret
ret
jle
popa
leave
lret
aad
adc
test
sbb
fnstsw
push
scas
dec
mov
push
dec
jne
stos
arpl
imul
into
scas
fs
icebp
push
xchg
mov
iret
popf
pop
hlt
pusha
xchg
cmp
sahf
cltd
sub
or
jbe
jnp
cmpsl
rclb
xchg
adc
xor
inc
xor
push
insl
and
scas
sub
lret
in
aad
sbb
mov
sbb
cltd
cmp
clc
flds
shll
add
mov
in
lods
fs
push
jmp
inc
cmpsb
dec
mov
xchg
movsb
aas
adc
lret
xchg
fiadds
test
inc
pop
cwtl
iret
or
jge
ja
push
stos
je
push
stos
testb
out
cltd
pop
pop
adc
shrb
push
nop
mov
jmp
inc
add
rclb
fs
test
sub
mov
inc
scas
push
pop
fistps
xor
xchg
push
xchg
and
add
pop
scas
mov
fwait
jnp
mov
fdivl
ficompl
mov
dec
mov
and
pop
cmp
lcall
iret
les
and
push
mov
jno
imul
mov
out
adc
rcrb
data16
mov
jecxz
pop
pusha
mov
mov
fsubrl
mov
adc
shlb
pcmpeqb
mov
hlt
into
or
rclb
cmpsb
shlb
mov
das
mov
jns
daa
into
out
xor
sub
fimuls
mov
out
ficoml
xlat
mov
mov
mov
xchg
adc
inc
dec
pop
mov
dec
push
enter
les
jmp
pop
gs
mov
jb
fidivrs
test
cmp
fistpll
cs
imul
push
imul
inc
in
shrl
sub
movsb
daa
mov
enter
inc
les
or
push
adcl
andb
iret
ret
cmpb
lret
mov
jmp
or
bound
mov
inc
jb
ret
daa
jns
pop
and
inc
cmp
shrb
mov
shrb
xor
xchg
fwait
jecxz
iret
adcl
out
dec
xchg
loopne
and
add
sub
inc
or
cmp
add
stos
shl
rorl
and
jns
popf
andb
stc
push
fbld
mov
and
add
inc
pop
push
test
cmpsl
in
dec
jl
push
mov
xchg
sbb
aas
lahf
lods
sbb
sub
mov
into
and
in
popf
ds
pop
mov
ret
jnp
push
adc
leave
daa
ret
popf
rcrb
ret
pop
movsb
rorl
cmpsb
inc
fs
arpl
shll
jl
dec
sbb
mov
pop
lret
pop
scas
mov
fnstcw
rcrb
pop
jb
xor
and
hlt
push
mov
xor
inc
lcall
jo,pn
lahf
jo
mov
scas
out
mov
orl
and
inc
in
scas
xchg
jle
and
and
xor
ret
jbe
mov
scas
jge
test
xchg
ja
cmp
shll
ljmp
sbb
imul
xor
xor
jno
jae
jne
out
or
xchg
cmp
shrb
push
and
lea
push
rol
mov
aam
iret
loope
or
adc
rorb
repnz
in
pop
sub
clc
inc
scas
mov
cmc
push
sbb
adc
inc
sub
xor
xor
rclb
xor
jno
testb
inc
or
into
xor
xchg
movsl
xchg
pop
mov
sarb
or
xor
fwait
lret
cmp
xor
xchg
rolb
jb,pn
adc
or
inc
lds
aam
addl
lret
scas
aaa
or
or
xor
gs
data16
fst
cmpw
int3
popa
xchg
push
adc
sti
loopne
add
test
xchg
in
add
jbe
lret
stc
mov
xchg
cld
or
jge
loope
mov
repz
sub
pop
pop
push
fistl
sbb
rcll
cmpl
imul
and
mov
dec
jae
mov
sbb
or
jl
rcl
sbb
leave
imul
je
rep
divl
rorl
popa
cwtl
mov
in
nop
int
frstor
fwait
mov
mov
aam
lcall
xor
imul
icebp
aad
mov
dec
dec
push
and
xchg
insb
sar
jle
test
push
sbb
dec
ss
mov
mov
or
sbb
loop
mov
and
sarb
pop
mov
enter
cmc
out
mov
mov
rorb
rol
xor
mov
dec
xchg
ss
call
popa
imull
dec
cld
in
cmpsb
repz
jne
sar
add
push
fistl
js
lret
push
add
int3
call
mov
cltd
add
inc
test
ss
movsl
or
xchg
int
imul
pop
xchg
scas
iret
push
je
subl
add
loope
out
shll
inc
iret
mull
xor
xchg
rcll
or
enter
xchg
mov
and
add
lahf
scas
sbb
cmp
scas
and
jmp
xor
into
data16
mov
stc
xchg
push
cld
leave
cmp
xor
enter
pusha
xchg
cltd
shrl
pop
inc
add
into
adcb
push
jle
rcrb
mov
pop
scas
mov
rcll
sbb
push
mov
xlat
in
mov
mov
push
nop
in
call
sbb
xor
xor
sbb
and
xchg
sub
pop
test
pop
and
icebp
js
mov
push
scas
cmp
fistl
mov
cltd
iret
in
dec
imul
inc
paddusw
jle
inc
daa
xchg
inc
fdivrl
ds
cwtl
pop
pop
xchg
mov
loopne
scas
stc
mov
and
addb
scas
shll
out
mov
rorb
push
push
orl
push
fstps
xor
cmp
sbbb
in
aad
mov
push
or
test
in
ss
clc
dec
push
adcl
add
mov
fs
testb
mov
cmp
sub
and
and
lcall
ljmp
stos
jle
and
sub
outsl
jg
call
shll
into
inc
in
in
mov
dec
mov
pusha
scas
into
fsts
fadd
lret
xchg
add
sub
shrb
test
int3
ret
in
xor
std
cli
jae
xchg
imul
and
int
in
add
stos
int3
mov
and
into
icebp
adc
xchg
mov
movsb
mov
movq
mov
jmp
lods
int3
xor
addr16
test
xor
jmp
std
xchg
sbb
sub
push
add
fsubrs
andb
inc
scas
cmp
or
je
inc
rorl
adc
hlt
push
push
mov
adc
push
push
pushf
cli
cs
cmpsl
or
or
fidivrl
mov
cltd
xor
and
mov
sarb
jl
sub
jb
adcl
dec
rorb
scas
mov
sbb
out
ret
shrb
sarb
jae
add
cmp
iret
movsl
jecxz
mov
in
scas
lock
jae
push
sbb
jnp
xchg
fmul
pop
rcrl
pusha
sbb
adc
into
insb
push
mov
out
xchg
push
xlat
xchg
jle
aam
lods
inc
add
loop
or
mov
rol
xor
push
pop
inc
outsb
mov
dec
cmp
xchg
ret
sti
movsl
iret
pop
daa
sbb
shlb
jle
inc
inc
nop
lret
loopne,pt
mov
cmpsb
daa
aam
rcll
popf
lock
dec
pop
dec
fcmovb
mov
mov
mov
inc
inc
mov
shl
push
mov
add
scas
iret
and
dec
xchg
repnz
int
mov
sbb
xchg
aas
enter
fwait
push
in
jg
and
movsl
insl
sti
cli
cmpsl
into
or
add
xchg
loop
or
xlat
popa
in
ja
jo
int
mov
sbb
cs
cld
jmp
movsl
outsb
xchg
pushf
aaa
jnp
arpl
mov
xchg
inc
bound
inc
sahf
scas
in
loop
shrb
lret
shll
iret
pop
sarl
jle
iret
push
lock
fistl
or
adc
or
dec
fisttps
push
cli
insb
jecxz
and
inc
idiv
mov
imul
lret
jmp
or
insb
sub
push
das
iret
movsl
sbb
sti
daa
dec
jp
push
stc
sahf
or
xchg
shl
or
mov
dec
jns
dec
test
lock
or
sti
into
dec
aaa
imul
jno
or
imul
jne
int3
sub
outsl
dec
int
fisttps
mov
sub
mov
cmpsl
pop
ja
push
inc
shl
lahf
int
sbb
scas
lea
mov
push
or
pop
and
inc
scas
nop
sbb
push
jecxz
sbb
push
sbb
cmp
adc
loop
pop
mov
addb
and
jbe
mov
rcl
or
jae
dec
insl
add
mov
testb
shlb
mov
iret
fcomps
jmp
mov
xor
jp
cltd
call
outsl
adc
pop
lds
push
fisttpll
jge
movd
sahf
shl
sbbb
mov
xchg
dec
or
push
sub
xchg
dec
rcrb
flds
sbb
cmpsl
rep
fwait
call
mov
in
cmovl
repnz
jp
or
xor
scas
xchg
jbe
lcall
out
sarb
pop
or
add
jo
cmp
inc
xor
mov
scas
and
pop
aad
or
inc
stos
xchg
xchg
aaa
addl
fimull
test
jne
xor
pushf
rclb
cmp
call
js
testl
ror
pop
mov
jno
xchg
sbb
add
orb
pop
loopne
mov
subl
xchg
add
pop
pop
xchg
cwtl
dec
cmp
xchg
add
fimull
shrb
in
rcr
mov
lds
shll
mov
lea
xlat
sub
add
shrl
dec
ss
int3
lea
cs
cmp
mov
cs
ret
es
rcll
leave
push
adc
push
scas
mov
lods
xor
out
out
and
inc
sub
fs
test
popf
into
or
pop
adc
jbe
lods
and
cmp
add
scas
bound
xlat
xchg
int3
iret
jno
repnz
fcmovnbe
push
fucom
xchg
addr16
jge
cmp
out
movl
inc
scas
les
cmp
inc
in
cmp
call
pop
add
xor
repnz
in
xchg
xchg
lea
jnp
mov
mov
out
sbb
cwtl
mov
pop
xor
fiadds
sahf
dec
xor
mov
test
nop
insl
in
xchg
loopne
push
adc
jae
popf
jl
push
xchg
mov
cmp
fstps
inc
fidivrs
pop
jp
add
int
arpl
lods
imul
scas
dec
jne
fcos
daa
push
pop
lock
pushf
add
push
scas
cmc
inc
cld
dec
rol
addr16
loope
xchg
inc
jbe
cli
scas
pminsw
pop
aaa
xor
ret
loopne
xor
ss
lret
cmp
pop
fcoml
dec
mov
push
xchg
notl
xchg
mov
fst
mov
fmul
mov
test
scas
xchg
mov
sbb
xor
dec
cmp
jmp
jb
scas
lods
mov
pusha
rcrb
addr16
adc
in
dec
scas
push
xor
lcall
dec
cs
mov
mov
cmp
ljmp
mov
mov
scas
pushf
in
add
push
es
xor
popf
pop
scas
clc
dec
mov
xor
xor
ficoms
jmp
pop
push
dec
fmull
lea
sub
mov
roll
jge
jmp
mov
repnz
or
movsl
ljmp
sub
pop
out
xchg
mov
push
scas
cmc
hlt
cmp
mov
arpl
movsl
icebp
sub
in
out
cmc
pusha
fcompp
inc
daa
mov
dec
std
mov
xor
movsl
mov
sbb
lods
dec
sub
mov
popf
pop
fisttps
xor
xor
dec
les
or
pop
push
fidivrs
shll
iret
cmp
mov
in
jno
lods
rclb
pop
pop
sbb
out
xchg
rcll
inc
xchg
push
push
lahf
scas
faddp
fucomi
comiss
mov
mov
fcomps
sarl
loopne
dec
gs
arpl
mov
iret
cmpsl
aad
mov
sbb
filds
psrlw
mov
pop
dec
inc
loop
cmpsl
scas
lcall
rolb
iret
and
out
adc
out
pop
xor
int
or
mov
in
mov
aam
out
and
shr
and
fwait
mov
inc
push
gs
out
add
gs
roll
xchg
jb
sub
or
lret
shrb
xor
cwtl
shlb
pushf
iret
in
cmp
mov
or
jp
out
xor
scas
sub
aaa
cmpsl
lods
fcoms
pop
mov
das
cmp
into
aam
mov
int
dec
rcrl
xchg
xchg
dec
jnp
iret
sti
inc
and
mov
fldenv
negl
pop
mov
ret
test
sub
iret
mov
in
leave
jb
shl
mov
mov
cmp
aas
and
mov
cmpsl
sti
cmp
cmp
ret
mov
mov
or
mov
cmp
outsl
scas
jae
ret
push
cmpsb
popf
pop
push
int3
cs
push
sub
insl
inc
adc
xor
daa
stc
ljmp
lahf
add
cmpsb
scas
lock
rcl
xor
addr16
mov
mov
iret
int
cmp
jne
addr16
xlat
scas
shrb
repz
cltd
mov
inc
mov
insb
shr
jne
xor
cmp
test
and
scas
dec
lods
rcl
mov
pushf
xlat
mov
or
jmp
jb
lcall
xchg
into
jne
pusha
aam
mov
repz
lds
mov
shl
leave
mov
out
into
in
pop
sbb
adc
adc
cli
out
sbb
enter
xchg
xor
jne
pop
jne
xchg
cmp
dec
jb
outsb
jno,pt
pop
mov
pushf
xor
sbb
gs
cmp
dec
movsl
dec
scas
dec
aad
out
xor
enter
or
shlb
jo
push
mov
ljmp
xor
lret
ds
loope
mov
dec
and
jnp
sar
pop
mov
fdivl
fstps
lcall
inc
jl
add
mov
adc
movsl
and
xor
fwait
movsl
ror
xchg
clc
fwait
cli
enter
xchg
mov
dec
icebp
out
lods
and
mov
scas
push
push
or
rorb
jae
jbe
pushf
stos
in
dec
jnp
js
mov
lret
xor
xchg
sub
or
lock
rclb
std
jge
xor
iret
pop
jmp
push
test
pop
jg
or
lock
mov
xchg
mov
fadds
mov
inc
and
les
fdivp
or
rcll
fdivr
jg
push
or
jno
dec
loopne
xchg
add
int
gs
jg
fistps
lret
add
push
inc
icebp
js
into
and
sbb
jb
sti
fistl
ret
loopne
or
insl
rclb
inc
xor
pop
decl
stos
and
inc
dec
pop
cmc
xchg
inc
insb
mov
xchg
add
dec
xchg
push
mov
push
inc
popa
xchg
mov
mov
mov
cli
add
loopne
mov
dec
jns
aas
das
ljmp
aad
and
push
stc
xchg
mov
js
cmc
mov
jmp
adc
notb
sahf
aaa
mov
es
add
sub
jne
mov
outsb
ficompl
fnstenv
xchg
testb
xchg
nop
inc
loop
es
dec
push
shl
nop
push
cmp
jle
push
xor
cmc
sahf
mov
xlat
push
js
shrl
cmp
and
mov
test
sbb
mov
lret
mov
stos
in
cmc
sub
push
cmp
clc
popa
or
popa
mov
movsb
ficoml
adc
mov
xchg
xchg
std
mov
push
mov
out
pop
inc
xchg
sarb
and
enter
mov
cmp
or
or
inc
adc
out
test
xchg
jmp
iret
pop
xchg
inc
lret
or
iret
pop
es
dec
xchg
icebp
test
mov
lods
int3
push
in
jecxz
cmovo
scas
iret
add
shlb
mov
iret
notb
xor
xchg
mov
lcall
scas
mov
data16
bound
andb
inc
add
pop
push
lcall
arpl
mov
mov
out
int3
and
pop
outsb
xchg
cwtl
xchg
shll
arpl
jno
mov
pop
mov
push
xchg
cld
rcll
pop
or
inc
push
out
xchg
mov
test
lahf
iret
xor
or
or
fcmovbe
mov
adc
pop
adc
xor
cmp
scas
rcrb
dec
inc
leave
lcall
add
out
cs
adc
or
lret
jno
rep
sub
loop
ror
jl
add
iret
aaa
loopne
dec
mov
mov
pop
dec
or
into
mov
inc
fcompl
sub
cmpsl
scas
leave
pop
scas
lea
push
xchg
dec
iret
stos
data16
mov
add
prefetch
or
jl
inc
mov
repz
or
xchg
push
dec
mov
sbb
mov
cmp
pusha
dec
ficomps
inc
movsb
scas
mov
inc
mov
adc
or
faddl
jg
dec
cwtl
inc
shlb
cli
lret
push
pop
jne
inc
iret
dec
cli
leave
push
mov
jl
mov
rolb
ret
inc
xchg
iret
mov
xorb
int3
lret
adc
pop
xor
scas
or
subb
xlat
push
fwait
pop
iret
jnp
jo
inc
jge
out
int3
xchg
mov
ljmp
mov
push
xchg
inc
push
xlat
iret
or
int3
repnz
std
jp
or
dec
out
mov
push
aaa
xor
out
ret
scas
xchg
lcall
ficomps
scas
inc
cld
outsb
iret
rcr
int
sbb
loop
mov
lret
ljmp
pop
test
mov
push
outsl
out
ret
and
mov
cmp
dec
inc
push
cld
popa
das
scas
mov
cmpsl
or
add
xchg
inc
push
fdivrs
outsb
inc
xchg
je
insl
push
stos
mov
xchg
sbb
out
dec
cmp
xor
scas
or
in
shrb
cmp
mov
push
xchg
cmpsb
in
sbb
sarl
nop
imul
xchg
pop
pop
add
fwait
je
movsl
test
rorb
xor
ret
push
mov
nop
cmp
xor
outsl
mov
lret
loop
scas
sbb
ret
xorb
pop
jb
pop
mov
cmp
xchg
jecxz
fldcw
add
jb
or
xchg
mov
xor
xchg
in
push
sbb
out
hlt
mov
pop
pop
add
cmp
xchg
pusha
mov
imul
scas
pop
test
push
sarb
sub
iret
sbb
fs
fcmove
inc
jae
dec
push
adc
mov
les
les
scas
arpl
mov
es
push
jl
cmpsb
jo
jno
inc
mov
cld
out
shlb
out
xchg
xchg
xchg
icebp
adc
mov
xchg
pop
rclb
pop
pop
cmpsb
js
push
iret
mov
test
sbb
inc
or
or
xor
repnz
fbstp
ss
and
movsl
subl
mov
sbb
mov
mov
pop
je
in
mov
push
adc
xchg
ljmp
sub
cmpsb
mov
or
mov
xchg
loope
sbb
adc
iret
cmc
aam
mov
dec
lods
das
xchg
mov
clc
push
xchg
adc
test
or
movsb
or
fwait
out
mov
cli
into
mov
push
sbb
dec
pop
ds
pop
adc
jle
jmp
mov
dec
jo
xor
lods
pop
mov
pop
imul
xchg
mov
or
nop
pop
xchg
icebp
into
sub
rorb
mov
xchg
loope
decb
inc
loope
and
ficoml
mov
ljmp
pop
cmc
pop
cmp
pmulhuw
adc
ss
cmpsb
mov
xlat
xchg
scas
adc
mov
adc
push
aaa
inc
adc
dec
mov
or
scas
inc
sub
fsubrp
pop
aam
out
push
push
int
aas
shlb
into
push
mov
insl
sbb
clc
outsb
xorb
shlb
lods
mov
xchg
or
ja
cmp
arpl
orb
imul
sbbb
cltd
inc
rclb
jle
add
outsb
sarb
rol
pop
mov
mov
lods
sbb
jae
xchg
sbb
push
sar
sub
and
or
lods
sarl
sub
fs
in
and
leave
ret
das
cmpb
push
cmp
ficompl
xchg
in
sarl
ds
jge
cmp
jns
fisttps
fistpll
outsb
in
xchg
orl
push
shrb
inc
bound
mov
jbe
test
dec
cmpsb
into
iret
fisubrs
dec
dec
cmpsl
pop
cmpsl
cmpsl
mov
push
bound
jmp
mov
mov
rorb
mov
adc
popa
cmp
imul
adc
mov
rcl
ljmp
in
cmp
rcll
adc
negb
arpl
iret
roll
dec
add
adc
adc
dec
xchg
mov
mov
repz
pop
push
fwait
pusha
dec
adc
xchg
jo
scas
scas
rcrb
lods
cmp
divb
mov
jne
xor
jmp
jbe
xchg
xchg
xor
adc
inc
xchg
daa
cmpl
stos
fisttpll
popa
dec
repz
popa
lcall
ja
sbb
mov
daa
cmc
test
aas
es
mov
xchg
into
adc
mov
add
xor
push
scas
movq
fsts
outsw
mov
popf
sarb
sub
cmpsl
push
sti
out
insb
add
push
fwait
scas
daa
mov
push
rcr
inc
inc
aad
jge
sub
mov
rcrb
cwtl
jl
test
testl
aaa
rolb
sbb
xor
scas
mov
iret
sub
into
iret
inc
out
fcmovnbe
xor
jne
xchg
sbb
data16
aam
adc
scas
pop
xchg
or
shlb
je
rolb
xor
lcall
mov
inc
cmpsb
xor
dec
lock
push
push
inc
pop
flds
movsl
mov
jnp
mov
xor
jge
jno
insb
xor
decl
pop
arpl
int3
loope
imul
pop
fld
jne
cltd
fisubrl
iret
pop
sti
repz
or
in
sub
iret
cmp
and
in
inc
xor
xchg
imul
push
pop
arpl
push
mov
mov
dec
adc
mov
mov
sbb
and
shl
inc
movsb
aam
xorl
cmc
scas
sarl
cmp
mov
insl
insl
pop
jle
xchg
lahf
xchg
sbb
out
loop
sub
gs
hlt
xchg
and
and
and
jp
xor
inc
shr
sbb
faddp
mov
ja
scas
cmc
sub
clc
rorb
cmpsb
sbb
iret
xor
adc
mov
pop
mov
test
xchg
jmp
movb
rcr
mov
jmp
mov
icebp
pop
ret
xchg
cmpsb
dec
xor
jg
or
std
mov
js
push
xchg
and
xchg
pop
adc
cmp
cmpsl
xchg
jg
bound
sarb
jecxz
call
fmuls
adc
paddusw
ret
pop
xchg
scas
xor
in
pop
and
leave
adc
ss
arpl
xchg
outsb
flds
jb
les
std
mov
stos
xlat
sub
lea
mov
ds
gs
int3
ss
adc
fisubrs
sub
out
dec
jle
iret
cld
pop
inc
loop
frstor
push
fwait
int
scas
cli
add
sub
imul
test
hlt
mov
adc
push
roll
mov
pop
xor
mov
cmpsb
jae
jg
movsb
jp
add
mov
aad
sbb
dec
add
int
faddp
nop
push
scas
sbb
addb
pop
pop
dec
dec
testl
ljmp
test
into
ficomps
cmc
scas
mov
shll
or
pop
push
out
mov
jnp
aam
into
mov
loop
scas
lret
lea
lock
scas
rcrb
mov
adc
inc
pop
push
cli
lock
dec
xchg
js
hlt
jp
orb
mov
outsb
and
jae
rolb
mov
mov
pop
cmp
xchg
int
sbb
mov
in
out
xor
cltd
mov
sti
push
sti
nop
push
add
addr16
aam
or
shlb
pop
xor
test
xchg
pop
adc
jle
rclb
das
jl
das
adc
into
jnp
sbb
xor
mov
bound
add
sub
xchg
push
adcl
adc
dec
push
cmp
mov
lods
shlb
add
xor
cld
push
test
inc
aad
xchg
cmpsl
je
sbb
sub
push
ret
movsl
rorl
push
mov
mov
rorl
xor
adc
add
test
inc
scas
insb
push
or
shlb
fnstcw
and
lcall
out
mov
mov
jns
jl
mov
scas
iret
xor
cltd
adcb
push
xchg
xchg
mov
iret
jg
xchg
adc
pop
adc
scas
in
jle
mov
mov
xchg
leave
in
push
mov
shlb
test
push
in
push
scas
rcl
pushf
shll
pop
addr16
pop
stc
add
mov
jecxz,pn
xchg
in
stos
dec
dec
mov
rclb
sub
mov
scas
mov
in
xor
scas
cmpsl
mov
cmp
popf
imul
cld
mov
cltd
loopne
and
scas
test
add
add
inc
xchg
jmp
mov
sbb
gs
mov
cmp
mov
daa
push
cmp
mov
insl
ds
imul
movsl
pop
mov
dec
loop,pn
enter
mov
insb
lds
xor
push
ljmp
dec
scas
add
mov
lods
add
andl
test
fidivrl
scas
add
into
sub
sub
cmp
les
std
or
je
rcrl
icebp
cmp
and
outsl
jae
adc
dec
cmc
jp
mov
sub
movsb
pop
fldt
in
scas
jnp
mov
sbb
mov
dec
scas
add
mov
mov
cmp
into
daa
jne
mov
subl
xor
mov
push
or
mov
xchg
scas
mov
ret
jecxz
pop
mov
rcl
cmpsb
pop
add
cmpsl
sarl
pushf
enter
xor
sub
ljmp
xchg
movsb
or
daa
iret
mov
and
ss
inc
push
ret
push
inc
lea
rcrb
jl
rclb
test
xor
into
cs
push
mov
cmp
push
call
aas
mov
paddusw
jbe
jbe
pushf
iret
daa
adc
sti
jg
mov
cmp
xchg
stc
mov
fiadds
inc
stos
jae
mov
pop
mov
inc
scas
xchg
jg
push
pushf
push
lahf
shlb
push
jns
and
rcrl
sarb
inc
cltd
fsubrl
jbe
sub
mov
add
mov
adc
mov
aam
cmp
mov
push
xchg
mov
push
fstl
jle
rcrl
dec
rcrl
cld
inc
iret
dec
push
lea
cmp
lods
jle
movsb
sub
mov
or
lods
testl
lods
xchg
iret
aaa
inc
test
add
xchg
iret
xchg
ror
cmc
loope
outsl
add
cmp
call
ret
adc
adc
mov
jg
cmc
add
cs
add
jl
sbb
daa
pop
pop
xor
or
inc
iret
mov
nop
pop
lods
xchg
inc
sbb
add
inc
mov
jle
lret
dec
sub
sahf
mov
sub
repz
je
mov
mov
xchg
insl
inc
pop
in
pop
inc
std
dec
adc
out
data16
jmp
dec
in
repnz
rclb
ja
jne
inc
sub
push
call
lret
xor
xchg
lret
hlt
sub
mov
sbb
pop
mov
cld
push
nop
scas
cwtl
notl
lcall
cmp
aam
pop
inc
shll
repz
repnz
mov
adc
inc
mov
pop
dec
and
mov
jne
xchg
jge
sbb
push
ljmp
scas
nop
movsl
lcall
xor
push
pop
ja
lods
cmp
scas
test
out
out
mov
pop
pop
xchg
iret
in
mov
pusha
lods
xchg
add
jle
xor
jmp
cltd
movsb
sub
sbb
movsl
out
cs
jb
sbb
pop
jl
xor
mov
in
loopne
data16
jb
xchg
cmp
cltd
and
fsubl
xchg
or
mov
outsl
jp
loop
aad
aaa
push
mov
or
sub
xchg
jb
adc
cmp
xchg
push
inc
mov
fidivrl
jmp
add
iret
lahf
xor
sbb
stos
stc
aaa
jbe
mov
mov
add
inc
jge
ror
lcall
rclb
pop
fisubrs
xchg
or
xchg
iret
int3
sub
test
iret
jnp
popa
pop
pop
xlat
adc
xlat
rorl
js
dec
pop
sub
iret
dec
pop
xor
xchg
sahf
pop
je
ror
mov
int3
jmp
inc
dec
xchg
mul
cli
xchg
shrb
fisttpll
mov
ficoms
dec
push
mov
int
js
mov
sub
and
iret
push
iret
aas
push
or
jne
mov
lret
add
ja
mov
setb
loope
pushf
aad
fidivl
mov
test
push
rcrb
adc
mov
inc
sub
das
push
int
fwait
repnz
clc
outsb
js
sahf
mov
out
paddb
xor
popa
outsl
jno
rcrb
nop
cmc
or
rol
adc
jae
sub
push
rorb
lods
pusha
push
pop
jp
dec
adc
lds
add
daa
nop
and
insb
rcrb
push
xchg
andl
mov
inc
mov
shr
push
dec
mov
shll
dec
dec
dec
mov
pop
outsl
push
gs
mov
mov
push
stc
add
xchg
int3
mov
inc
add
pop
lret
scas
andl
pusha
test
movsl
lock
sub
mov
add
loopne
cmp
frstpm(287
adc
scas
repnz
movsl
inc
test
out
cmp
sub
mov
fiaddl
xchg
push
sti
lahf
xchg
movsb
icebp
lods
xchg
adcb
sub
inc
push
push
dec
repz
mov
cwtl
jb
in
mov
sbb
xor
testl
iret
jae
push
fisttpll
inc
or
sbb
mov
and
xor
sub
xchg
inc
imul
scas
add
pushf
fisubrs
or
mov
adc
push
xor
iret
sub
mov
fwait
xchg
aam
mov
inc
fistl
or
push
xchg
inc
pop
xchg
mov
rclb
push
test
addr16
into
mov
mov
sar
fidivrs
adc
paddsw
sub
cmp
push
lods
fstpl
push
mov
in
inc
cld
fcomps
inc
ret
repnz
scas
jl
push
shlb
into
pop
pushf
and
shlb
popa
jge
jmp
rorb
mov
and
push
scas
xchg
fs
pop
mov
fsubrl
clc
mov
insb
push
sub
xchg
iret
lea
test
int3
mov
js
mov
out
or
inc
lods
in
xchg
bound
popf
push
sub
cmp
shl
bound
xchg
mov
push
iret
call
lcall
add
aaa
push
fs
mov
push
scas
inc
sub
jb
testl
fmull
inc
xchg
add
out
pop
aaa
inc
shr
stc
push
in
adc
rol
enter
lock
mov
mov
jae
mov
rclb
lds
push
dec
pushf
popa
and
mov
imul
sbb
bound
les
loop
add
dec
sub
mov
faddp
rcrl
fwait
mov
inc
ret
adc
out
outsb
sahf
int3
gs
aad
jne
or
popf
sub
push
mov
cs
xchg
ret
mov
ss
rolb
les
dec
xor
movsl
dec
sahf
scas
jbe
or
jne
dec
cmp
test
cs
sbb
lds
decl
fstl
adc
push
les
clc
pause
jmp
push
mov
fidivl
out
icebp
push
fisubl
or
xchg
add
pop
addps
inc
mov
rolb
or
mov
addr16
push
add
adc
xchg
repz
test
in
jne
and
dec
daa
int3
addb
mov
addr16
xchg
fidivs
push
outsl
add
jg
mov
imul
nop
jge
out
subb
orb
scas
mov
lahf
in
insl
movsb
bnd
scas
outsl
scas
inc
cmp
mov
out
mov
hlt
hlt
sar
dec
fstpt
out
scas
ficompl
loopne
les
sbb
and
xchg
iret
subl
dec
xchg
pop
jno
addr16
leave
outsl
and
test
or
outsb
mov
jne
lea
push
dec
outsl
aad
push
jno
in
dec
pop
xchg
stc
test
movsb
adc
mov
outsb
rolb
xchg
pop
imul
fidivs
and
insl
loop
outsl
iret
cmpsl
mov
sub
enter
pop
xlat
into
jno
adc
sbb
jnp
dec
lea
movsl
jl
les
rcrl
xchg
out
inc
cmpsb
into
rclb
jnp
lahf
lret
push
sbb
mov
into
mov
add
jl
inc
lahf
dec
inc
out
inc
cmp
rclb
inc
mov
iret
sbb
enter
pop
lods
and
ss
aad
out
scas
aas
mov
fisubl
ss
cmp
hlt
movsb
pop
ja
neg
dec
lcall
push
jmp
xchg
imul
cld
adc
in
ja
lret
imul
mov
repz
dec
mov
scas
rcl
mov
aad
mov
leave
aad
adc
pop
inc
jp
mov
sbb
push
repz
sub
inc
mov
jl
ljmp
xchg
ljmp
or
xor
scas
mov
jb
jne
pop
gs
iret
fcmove
inc
push
lcall
mov
push
mov
mov
mov
or
shlb
jae
jnp
gs
iret
out
popf
rorb
xchg
ljmp
adc
scas
mov
pop
lret
mov
push
in
and
shrb
mov
lret
rcr
push
cmp
mov
xchg
lock
xor
lock
repz
test
xchg
and
jle
enter
mov
xchg
inc
jl
cld
jns
mov
int
fistps
sahf
push
mov
xchg
rorb
adc
fcom
sbb
stos
popf
jnp
dec
add
addl
rorl
mov
adc
xor
daa
adc
xchg
rorl
add
scas
mov
xchg
out
mov
stc
push
push
shll
ror
repnz
cs
xchg
rcl
and
pop
popa
sub
xchg
jmp
sub
pop
add
pusha
jne
pop
add
iret
out
and
stc
hlt
mov
das
test
mov
push
loope
into
lret
out
dec
negb
lods
push
int3
jae
push
imull
cmp
movsl
lret
lods
and
or
faddp
cs
push
dec
or
inc
imul
sar
popf
push
loopne
fstl
cmp
sbb
fsubr
in
mov
and
sub
push
and
jmp
loop
mov
fsubl
pop
ljmp
jmp
repnz
enter
rcr
push
push
sub
lock
aaa
shl
pop
mov
mov
xchg
dec
adc
jp
mov
and
or
in
pop
cmp
adc
insl
mov
cltd
inc
mov
movsb
dec
icebp
adc
aam
sbb
mov
inc
sbbl
popf
stos
iret
mov
outsl
sbb
jno
mov
ljmp
mov
scas
subl
repz
rol
sub
inc
iret
ds
push
sahf
pop
out
clc
movsl
or
shll
mov
sbb
mov
jle
hlt
jl
lcall
lods
adc
cmpsb
jbe
gs
xchg
ljmp
mov
inc
dec
shll
or
fisttps
movl
scas
sbb
and
and
call
scas
mov
jle
std
dec
test
jmp
or
jb
dec
repnz
mov
test
mov
cmp
stc
adcl
fmuls
gs
shlb
jno
mov
xchg
push
pop
aad
mov
mov
cmp
outsl
dec
adc
scas
lds
not
arpl
dec
nop
iret
lahf
sti
fistpl
push
or
mov
stc
cmp
mov
lret
cli
inc
inc
out
imul
mov
pushf
sbb
pop
cmp
movsb
ret
push
jno
inc
xchg
cmp
cs
je
pop
ret
rcl
jb
out
dec
dec
repnz
mov
lock
popf
inc
sub
scas
cmp
mov
xlat
inc
and
jnp
out
sub
lret
pop
xchg
jb
adc
xor
jne
scas
es
cmp
sub
and
sar
lahf
std
scas
outsl
dec
cmp
clc
push
insb
jl
sub
xor
and
mov
addr16
and
jl
sti
daa
xor
adc
mov
dec
jle
cld
jno
and
ja
mov
mov
into
test
in
js
dec
push
aas
inc
push
pop
xchg
jo
hlt
repnz
mov
rcrb
jge
jo
mov
pop
stc
fnstcw
aam
and
cmp
xchg
mov
cmp
fisubs
pop
xor
xchg
imul
pop
cs
adc
cmp
hlt
ret
add
xchg
hlt
push
scas
mov
outsb
shlb
enter
adc
jbe
fcmovu
dec
pop
pop
je
aas
or
mov
cltd
out
jg
jmp
rcll
jo
and
cmpb
mov
outsb
push
xchg
loop
cmpb
and
cmovle
mov
scas
cli
test
int
cmp
sub
aad
pop
jecxz
clc
fld1
outsb
dec
aad
inc
xchg
rcrl
cmpsl
jb
push
iret
in
pop
xchg
nop
add
cltd
adc
out
adc
aaa
push
xchg
popa
lret
xlat
push
mov
inc
and
cs
insl
rcrb
int
jae
jnp
imul
and
pop
push
orb
cmp
xor
scas
sbbl
xchg
jns
aam
into
cltd
flds
inc
sbb
mov
popf
cmp
loope
daa
and
and
sbb
stos
movsb
das
sbb
leave
adc
rorb
jmp
adc
into
inc
pop
sub
mov
icebp
sbb
add
scas
nop
pushf
push
xor
mov
scas
pusha
insb
fistl
enter
mov
xchg
aam
adc
ljmp
push
adc
sub
bound
add
scas
add
adc
and
push
daa
sarb
outsb
sbbb
pop
hlt
jge
jg
push
and
shlb
mov
mov
and
push
ja
scas
fldenv
shlb
or
xor
insb
movsl
inc
shrb
sub
adc
pop
jae
repz
xchg
aaa
notb
mov
daa
aaa
shrl
add
dec
jae
les
push
mov
iret
xchg
xchg
xor
movsb
cli
jge
das
xchg
js
popa
dec
mov
daa
sub
or
iret
lret
leave
popf
pop
sbb
call
inc
jge
sub
adc
scas
inc
loope
cmp
xor
inc
pop
iret
ja
jp
push
jp
push
xchg
and
adc
jo
pusha
jb
sbb
ljmp
repnz
inc
out
adc
or
adc
icebp
sti
jb
and
fwait
cmp
scas
popf
push
inc
cmp
pop
push
es
xor
pop
mov
fdivs
jp
aas
or
sarb
rol
sbb
sub
mov
mov
rclb
push
mov
and
in
mov
popa
addr16
sar
sbb
jno
push
shrb
mov
mov
fldl
aad
pushf
fs
enter
int
xchg
adc
das
lock
loope
adc
cmp
dec
xchg
scas
fistpl
sahf
scas
pushf
bound
popa
mov
pop
pop
rclb
push
cltd
jne
jl
iret
call
sbb
mov
sub
adc
iret
sbbl
mov
nop
push
outsb
test
fistl
sti
movsl
test
xchg
mulb
inc
sbb
and
push
fdivs
xchg
cmpsl
les
sahf
push
sub
push
call
jmp
stos
xor
adc
data16
shll
mov
loop
sub
inc
fucom
mov
paddq
xchg
popf
call
push
stos
cs
iret
mov
pop
and
int
push
push
icebp
test
fstpt
push
sub
mov
dec
inc
ss
jb
sub
inc
adc
or
pop
and
iret
cmp
xor
rcl
loope
xor
or
push
iret
andb
mov
adc
sub
jne
mov
scas
xchg
jle
rcll
fldt
hlt
int3
pusha
cmp
fbld
push
cmp
push
pushf
mov
je
outsl
dec
push
in
rorb
mov
je
push
adc
sub
in
arpl
andb
mov
outsl
rcrb
jno
popa
inc
aaa
xlat
sbb
scas
add
fdiv
into
into
xchg
mov
data16
dec
mov
scas
jecxz
testl
leave
cmpsl
push
call
daa
jo
scas
inc
les
sarb
sahf
adc
add
and
xchg
xchg
jge
stos
inc
pushf
jnp
iret
add
rcrb
lods
std
adc
imul
pop
movsb
dec
inc
push
jnp
mov
shll
mov
test
xor
jge
adcl
mov
inc
icebp
mov
add
xchg
mov
adc
cli
test
shl
jmp
jg
lock
pop
iret
pushf
out
out
shlb
xor
rcrb
mov
gs
shrb
in
adc
push
xchg
negl
or
xor
xchg
aam
ret
mov
pop
add
mov
mov
xor
jge
pusha
daa
lret
dec
ss
rcl
cmpsl
hlt
lods
mov
jnp
iret
sub
bound
stos
xchg
pop
mov
or
iret
enter
decl
sbb
nop
and
cmp
cwtl
js
inc
jno
xlat
rolb
xchg
enter
push
out
and
mov
xchg
dec
movsb
pop
sub
mov
loopne
push
and
sub
arpl
rcl
pop
pop
jmp
pop
aaa
int3
sub
das
mov
dec
xchg
sbb
ret
jb
pop
jns
fstl
cmpsb
mov
adc
test
pushf
shlb
dec
popf
mov
jns
cmp
and
xor
icebp
xchg
call
dec
push
out
xor
ljmp
insl
les
ret
scas
fistl
out
adc
xchg
testb
scas
popa
addl
fcmovne
sub
mov
iret
aam
fildll
or
out
inc
sub
cld
into
xchg
push
mov
push
jge
decl
add
rcll
mov
sub
adc
sbb
sbb
fmul
call
test
testl
inc
pop
out
add
mov
fucomp
iret
xlat
fimull
lret
dec
sbb
insl
xor
mov
jbe
arpl
inc
or
xor
scas
sbb
add
sub
cmp
scas
pop
mov
call
inc
cwtl
jbe
je
jae
out
into
pop
cmp
dec
xchg
adc
addr16
mov
jns
scas
xor
nop
add
sub
dec
jg
jge
inc
push
pop
push
fwait
sub
leave
pop
insl
mov
inc
imul
sub
and
mov
dec
loopne
mov
outsb
cmc
fsubrl
push
fcoms
push
mov
loope
mov
cld
movsb
jmp
inc
call
movsb
out
jle
iret
iret
pop
cmp
sbb
mov
cmp
lock
sbb
test
lods
cwtl
or
push
repz
inc
pop
in
xchg
sbb
adc
lds
cli
jge
loopne
mov
xchg
jmp
push
sti
adcb
jno
push
or
scas
and
test
cltd
insb
out
jo
into
rorb
clc
mov
xchg
or
dec
rcrb
mov
leave
iret
lahf
int3
xchg
or
out
adc
push
ror
ret
lods
pop
sub
mov
pop
inc
xor
sub
scas
lods
dec
and
sub
xchg
aad
loopne
and
dec
mov
imul
mov
or
inc
cmp
je
mov
push
cmpsb
jae
sahf
rcll
popa
fdivs
jne
xchg
shr
int
dec
outsb
sub
inc
jge
push
ret
jmp
scas
mov
and
into
sti
iret
inc
mov
das
jecxz
mov
mov
je
faddp
mov
add
dec
ljmp
call
jbe
pop
movsb
mov
xchg
lea
push
mov
stc
pushf
cli
xchg
adc
ret
stc
lret
daa
unpcklps
aad
andl
clc
inc
xchg
int3
cmpl
stc
cmp
and
push
or
add
popa
sub
in
xchg
loope
xchg
and
push
pop
dec
ss
or
iret
movsl
sub
pop
rol
mov
add
cmp
sub
fwait
adc
mov
sub
shlb
jp
and
mov
xchg
add
or
aaa
aam
daa
jl
lss
loope
out
xor
shl
fbstp
cmpsb
lock
xchg
rorb
and
loope
roll
outsb
int
in
inc
jp
inc
add
aas
insb
movsb
stc
push
sub
adc
rcll
xor
fistpll
push
outsb
leave
xor
mov
add
pop
mov
jg
movsl
xchg
shr
nop
mov
sub
or
sub
sub
xchg
xchg
outsb
mov
fldenv
iret
in
lcall
fstpt
cmc
xchg
mov
push
pop
push
dec
or
rcll
movsl
sbb
jge
or
shl
testl
repnz
aaa
movsb
shll
ljmp
xchg
jno
icebp
pop
leave
push
and
xchg
or
js
dec
push
pop
orb
push
mov
cld
dec
xchg
mov
rcll
push
cmpsl
and
iret
fsin
adc
ret
sbb
lcall
and
mov
sbb
stos
scas
lock
lock
pop
ds
in
mov
jl
push
mov
rcl
ret
jae
jae
fst
mov
fidivs
jmp
add
rolb
aas
mov
sub
test
add
jmp
cltd
mov
nop
fstps
mov
mov
adc
push
dec
adc
call
dec
inc
and
mov
sarb
jp
test
lret
or
push
scas
pop
sahf
xchg
mov
sub
addr16
std
scas
add
cs
shrb
inc
ficoms
shlb
arpl
mov
sub
sarb
imul
ret
sub
sub
xchg
inc
cli
and
jp
jbe
jecxz
pop
scas
push
jge
ja
fstpl
push
fildl
jmp
fnstsw
xchg
les
jno
jae
xchg
mov
popf
iret
out
roll
dec
adc
sbb
push
dec
and
loopne
popf
sub
mov
loopne
aam
dec
inc
addr16
adc
pop
xchg
xchg
incb
cltd
hlt
push
mov
fidivs
iret
mov
in
pop
xchg
xorb
dec
fstpt
lahf
ret
sub
imul
mov
stc
shll
inc
inc
mov
loope
scas
bound
mov
int3
insl
pop
mov
jo
dec
je
addl
adcb
inc
sbb
sbb
subl
daa
mov
std
daa
fcomps
dec
iret
rcrb
loope
jg
mov
xchg
les
aas
fs
out
ficomps
fdivrs
scas
cwtl
syscall
daa
shlb
mov
rcrb
pop
ljmp
movsl
dec
nop
mov
pop
jecxz
cmp
and
loope
cld
xor
push
cmp
test
cmp
jae
mov
lret
rolb
sbb
iret
adc
push
adc
sub
push
jne
add
scas
mov
insl
shll
push
and
cld
and
xlat
mov
std
xor
out
and
mov
sbb
pop
fcmove
mov
cs
xchg
fidivl
add
and
icebp
push
add
shl
inc
sbb
dec
push
ds
inc
jbe
mov
scas
ret
pusha
cmp
fistps
ret
mov
xchg
fs
shlb
sti
test
adc
into
mov
stc
scas
and
push
mov
icebp
xchg
jno
mov
dec
dec
scas
pop
popa
outsb
lea
mov
lock
push
mov
dec
mov
xchg
lock
xchg
stos
pop
std
xor
and
in
cmp
push
mov
ss
mov
lcall
pop
rcll
mov
jb
adc
stos
cwtl
and
mov
inc
pop
cmp
gs
sahf
loopne
ret
insl
sub
sbb
popa
inc
shrb
out
cmpsl
add
pop
fists
jecxz
int3
fdivl
lret
adcb
mov
mov
daa
sbb
shll
test
cmp
adc
mov
push
dec
inc
lret
clc
mov
jo
rcrb
cs
or
movb
in
scas
ss
pop
insb
out
in
mov
out
mov
outsl
push
adc
xchg
js
rclb
xor
xchg
roll
and
daa
scas
icebp
pop
out
stos
aam
push
dec
cwtl
xchg
movsl
sub
add
dec
sar
in
cmpsl
push
rolb
out
repnz
rclb
mov
insb
rorl
cli
clc
lds
in
ficomps
cli
lcall
mov
inc
xchg
add
out
clc
mov
xchg
xor
xor
int3
loop
into
daa
mov
and
aas
mov
inc
loopne
inc
stc
mov
aam
rcl
enter
xlat
sbb
imul
pushf
push
mov
in
push
jge
pop
push
push
add
cs
into
adcb
fs
mov
mov
imul
pop
pop
cmpsl
jnp
scas
lock
jmp
roll
xor
jl
mov
xchg
or
scas
push
movsb
adc
aad
into
add
iret
xor
dec
mov
xchg
int3
cmp
and
ret
adc
cld
mov
imull
add
inc
ficoml
stos
repnz
push
pop
fcoml
js
imul
push
fisubrl
and
adc
xor
xchg
sbb
ret
pushf
sti
dec
testb
fwait
sbb
sub
xchg
stos
mov
lds
mov
out
jb
xchg
mov
das
je
cs
mov
rcrb
xchg
add
iret
mov
loope
cmp
shrb
lods
xor
mov
scas
mov
or
mov
in
aad
dec
shl
mov
fildl
push
aad
data16
insl
test
jb
out
xchg
dec
paddb
sbb
mov
scas
xbegin
lea
or
jle
sub
mov
iret
loop
dec
mov
pop
pushf
leave
or
mov
daa
push
push
repnz
scas
popf
xchg
daa
jns
sbb
call
adc
mov
gs
leave
xchg
sti
aaa
lea
pushf
inc
pop
imul
repz
mov
fsubl
xchg
sub
ret
sub
iret
scas
or
or
push
mov
xchg
xchg
mov
sub
xor
xchg
or
fsubp
cld
mov
faddp
shlb
cmp
insb
mov
jg
jae
repz
xchg
clts
aaa
jecxz
iretw
stos
xchg
push
xchg
ljmp
test
xlat
pushf
scas
mov
dec
mov
push
movsb
out
dec
in
xchg
out
scas
fistpl
pushf
and
cli
mov
cltd
pushf
and
cmpsl
lock
stc
repz
add
push
lock
mov
and
ret
pop
fwait
ror
ret
mov
sub
inc
mov
es
sub
rcll
mov
cmp
xor
push
xor
scas
push
xchg
pop
repz
pop
gs
insb
pop
fsubrp
mov
adc
leave
adc
rorb
sahf
mov
add
or
iret
sbb
shlb
pushf
mul
pop
sahf
cwtl
xchg
mov
int3
lret
adc
sbb
fcomp
mov
push
add
negl
mov
jge
jp
sbb
shll
sbb
stos
jg
js
lea
orl
xlat
cltd
and
sub
cli
ja
jne
dec
hlt
sub
xchg
into
sbb
or
std
shll
pop
xchg
rclb
lods
in
data16
xlat
stos
rcl
cmp
mov
mov
in
pusha
sbb
scas
shl
push
lret
enter
adc
outsl
pushf
ja
pop
iret
int
mov
scas
lea
rcr
iret
gs
icebp
mov
mov
in
shlb
aam
jne
mov
fnstenv
jp
fbld
pop
popa
pop
arpl
cwtl
mov
cli
aad
out
fldl
pop
inc
cmp
cli
pusha
mov
int
fs
inc
shrl
and
scas
push
enter
test
popa
pop
dec
ret
mov
fdivrs
cmp
mov
or
rcl
jbe
insl
imul
aas
inc
pop
xchg
dec
mov
mov
xchg
in
test
loopne
and
pusha
and
rol
rclb
pop
iret
dec
sub
xor
frstor
arpl
movsb
rolb
mov
fld
data16
cmp
push
xchg
xor
cmp
jbe
ficompl
scas
in
sub
lods
and
push
pop
int
rcrl
pusha
mov
lods
pop
cmc
push
adc
add
inc
rorl
ljmp
aam
icebp
mov
pushl
int3
xchg
jecxz
rol
cwtl
insl
cmpsl
int
mov
cmp
mov
rcrb
out
bound
sbb
jno
or
dec
jne
jge
cmp
push
sub
insb
xchg
mov
es
push
jge
test
fs
mov
out
sub
fists
jle
sbb
nop
ljmp
jecxz
ss
xchg
pop
sahf
cmp
inc
nop
cmp
pop
in
push
add
not
cmc
mov
mov
mov
add
ficoms
mov
aas
xchg
loopne
aad
dec
cltd
ja
test
cld
and
enter
in
inc
cmp
mov
test
scas
cld
adc
subb
push
test
inc
pop
scas
insb
xor
sub
jp
or
sub
add
jl
jbe
cli
lods
xchg
mov
or
insb
popa
cli
insb
add
pop
scas
gs
call
sbb
int
and
hlt
or
pop
xchg
and
les
push
stos
ds
scas
data16
jno
rcrl
mov
ficoml
fadd
cmpsl
ret
fisttpl
pop
adc
push
push
mov
mov
adc
pop
sub
int3
fistpl
in
andl
dec
dec
into
fwait
mov
out
fistl
sbb
iret
insb
arpl
mov
jg
outsl
popf
adcb
test
add
and
popf
pop
in
push
fldl
loopne
nop
jne
pop
sub
mov
addr16
outsl
iret
shrl
xor
int3
outsl
xchg
push
popw
mov
push
outsb
inc
adc
and
iret
jo
sahf
stos
dec
gs
out
push
scas
aad
or
xchg
jmp
dec
xor
sbb
lcall
iret
jnp
pop
into
rcll
lock
insb
scas
add
bound
xlat
ret
stos
mov
testl
scas
mov
jge
shll
out
mov
scas
icebp
sub
iret
mov
cltd
sub
xor
adc
pushf
cs
or
inc
mov
inc
mov
test
incl
xchg
mov
xor
clc
jp
pop
into
test
push
stos
adc
xor
push
ss
sarb
sub
adc
lret
lahf
mov
scas
test
andb
imul
mov
jnp
scas
aas
xchg
cmp
into
xor
xchg
adcb
mov
adc
clc
or
shlb
mov
jg
mov
cli
xchg
pop
mov
rcrl
mov
inc
dec
lock
or
pushf
nop
and
jp
aaa
subl
push
xchg
cwtl
insl
rorl
sub
dec
adc
mov
sbb
lret
test
imul
gs
or
mov
lcall
pushf
enter
andl
lret
test
jmp
push
push
jg
xchg
jmp
test
lds
sub
fidivs
cmc
es
inc
movsb
push
cmp
xchg
mulps
out
lds
in
mov
mov
mov
mov
xor
orl
mov
dec
shlb
or
jmp
mov
mov
in
push
dec
and
push
cld
pop
hlt
dec
push
jo
imul
mov
mov
das
aaa
push
sub
xchg
pop
arpl
mov
jo
push
cmp
jnp
fwait
into
aad
flds
jecxz
push
adc
mov
lea
push
inc
add
or
flds
scas
dec
dec
xlat
shrl
rcrl
bound
xlat
jnp
mov
cmpsb
xchg
ss
push
add
scas
and
cltd
pushf
shrb
pop
cltd
inc
cmpb
push
mov
out
lret
scas
pusha
xor
adc
push
fidivrs
add
inc
mov
into
cmp
mov
int3
scas
or
into
mov
in
dec
push
pop
mov
jecxz
ds
pop
xchg
ja
fwait
jg
xchg
icebp
gs
cmc
iret
imul
xchg
or
push
mov
fwait
push
sbb
iret
pushf
lods
add
into
xor
int
out
xchg
xchg
insb
jnp
in
lods
cmp
cmp
sbb
sarl
stos
loopne
rcll
ficompl
jae
push
sarb
shlb
cmpsb
or
adc
dec
arpl
xchg
cld
scas
adc
sub
aad
pop
pop
adc
iret
jmp
inc
repz
push
jo
imul
push
pushf
scas
or
jmp
mov
iret
mov
je
jae
rcr
in
in
insl
add
xchg
mov
xchg
popa
lods
sbb
jmp
mov
dec
outsl
stos
sub
scas
inc
pusha
lods
adc
jo
xchg
fcoms
push
inc
iret
dec
std
push
shlb
or
xchg
xchg
adc
and
cmp
in
scas
jge
imul
xor
shrl
mov
enter
jp
mov
imul
add
insb
rolb
pop
sar
jnp
inc
cmp
scas
mov
and
sbb
imul
jae
jl
pop
or
int3
dec
jl
in
xor
iret
add
lahf
shrb
rcrb
sub
mov
adc
mov
testb
or
pop
decl
xchg
scas
stc
mov
pop
scas
shlb
and
rcrb
add
and
ja
and
push
or
sar
cmp
fdivrl
fidivrs
mov
sar
adc
repz
push
push
pop
fisttpll
mov
mov
xchg
dec
adc
jnp
jge
sub
push
lahf
ret
cmc
xchg
ret
mov
cmpsb
rolb
and
sarb
and
dec
mov
movsl
out
sahf
std
adcl
loope
inc
fsubr
lret
cltd
aam
mov
scas
sahf
push
sub
lock
test
inc
sbb
mov
sti
cmp
shll
or
pop
aas
pop
mov
arpl
mov
sti
mov
mov
jnp
mov
aaa
aad
sub
and
movsb
ror
xor
inc
mov
cwtl
adc
dec
shlb
iret
lahf
jnp
cmp
out
mov
xchg
scas
hlt
push
adc
dec
scas
or
mov
xor
shl
test
insl
out
lcall
dec
shl
cmp
data16
cmp
jb
sahf
xchg
mov
dec
xchg
fsubs
jb
lock
fcomps
push
inc
mov
add
shlb
js
mov
call
mov
dec
fs
or
mov
in
icebp
or
cs
jo
fs
pop
ret
fistl
adc
add
mov
mov
sahf
std
xlat
push
mov
xor
lock
lret
xchg
mov
cmp
xlat
dec
xor
roll
fsubl
cwtl
mov
jmp
roll
scas
fsubl
loopne
mov
data16
jae
cld
scas
test
inc
das
scas
ds
mov
divl
dec
pop
inc
push
mov
iret
int3
mov
pop
add
enter
imul
mov
inc
test
ss
and
rcl
mov
mov
outsb
mov
sub
hlt
jbe
push
adc
test
cmp
bound
pop
jle
xor
rolb
outsb
cmpsl
mov
sbb
popa
xchg
pop
push
push
outsl
pop
in
xchg
xchg
js
iret
loopne
and
lret
xchg
or
pop
test
test
ficompl
push
mov
push
ret
lcall
es
dec
adc
sbb
push
insl
xchg
xchg
mov
dec
sarl
xor
push
iret
movsb
push
dec
push
mov
lahf
pushf
and
adc
sub
sbb
fadds
mov
mov
xor
mov
cmp
jp
daa
mov
into
adc
leave
shl
cwtl
js
dec
sub
adc
push
and
rclb
testb
scas
in
outsb
dec
out
leave
inc
mov
cmp
in
push
sub
mov
jge
data16
out
fnstsw
jmp
das
jge
push
or
shll
mov
int3
icebp
roll
or
incb
jo
aam
stc
cmp
bound
or
les
dec
fstl
mov
cmc
movl
push
push
push
sub
xchg
mov
sub
push
push
jge
lock
lock
mov
push
xchg
pop
fcomps
cmp
xchg
outsl
in
sub
test
scas
cmpsl
inc
xor
scas
jmp
hlt
and
jecxz
sbb
mov
adc
mov
dec
insl
mov
adc
lahf
inc
mov
jle
xchg
cwtd
xchg
pop
fdivr
and
mov
ret
inc
xchg
ret
jo
jno
xor
and
dec
inc
or
lret
pop
fisubl
sbb
lock
or
mov
pop
dec
dec
lahf
je
cmp
out
repnz
add
in
scas
mov
outsl
push
jl
popa
scas
add
xchg
mov
adc
xor
and
iret
arpl
or
xchg
loope
ret
mov
in
in
mov
mov
lods
gs
lcall
mov
jb
dec
mov
xor
jl
testl
inc
rcrl
scas
dec
int
ret
push
iret
ret
pop
cli
or
sub
cld
sbb
test
xchg
scas
jne
imul
mov
sbb
mov
hlt
stos
arpl
xorl
push
iret
or
aam
fistl
xchg
xchg
in
das
les
in
push
lret
mov
and
xor
call
divb
in
lods
add
xchg
rcl
div
pushf
ljmp
pop
stos
xchg
rorl
int3
int
push
and
scas
sbb
add
rclb
and
loope,pn
sbb
cmp
les
mov
aam
adc
lods
sbb
cld
scas
test
adc
jnp
in
hlt
cmp
or
mov
adcl
fistpll
mov
push
ret
orb
add
dec
subl
dec
mov
mov
xor
mov
out
rolb
ret
insl
repz
sbb
and
scas
jb
xchg
das
dec
loopne
and
or
xchg
scas
sbb
shrl
add
je
jg
jbe
jl
sbb
mov
out
and
stos
scas
pop
push
scas
push
fistpll
insb
js
adc
pop
int3
pop
push
das
xor
frstor
shlb
fdivrl
shll
loope
aas
sahf
push
out
in
lret
int3
mov
outsl
jge
jle
aad
scas
rcrb
push
mov
loope
ja
sbbl
iret
cmp
enter
rorb
mov
ja
lock
cli
mov
inc
rclb
lcall
scas
add
decl
repnz
or
xor
inc
xchg
mov
test
xchg
or
inc
inc
les
adc
mov
sub
test
test
bnd
out
xchg
cwtl
or
inc
punpckhbw
shll
rcrb
pop
insb
mov
shlb
pushf
sahf
pop
iret
bound
mov
xor
rorb
mov
cmp
int
in
out
test
cmp
xchg
sbb
sahf
scas
aam
rclb
jne
orl
out
lahf
rorl
push
ret
rolb
sbb
lods
iret
out
stos
or
je
mov
icebp
push
or
inc
mov
mov
cmpsb
xchg
iret
push
rorb
cmp
repnz
adc
inc
imul
xchg
jno
xchg
push
aaa
popa
sahf
into
adc
inc
jne
mov
push
cmpsb
loope
shlb
ds
iret
stc
insl
mov
rolb
arpl
lret
push
xchg
xchg
jmp
fldl
jmp
mov
pop
popf
xchg
xlat
lret
das
in
jmp
fidivs
xor
sti
daa
xchg
sahf
cmpsl
pop
repz
mov
fiadds
pop
into
jp
in
nop
addr16
inc
dec
xchg
lock
mov
imul
in
jo
cmp
pop
cmpb
push
inc
adc
icebp
scas
mov
imul
nop
jmp
sti
mov
mov
ljmp
sbb
add
sub
iret
test
negb
jge
loop
add
in
mov
jmp
dec
sbb
out
lcall
cmp
loopne
shl
jp
es
insb
bound
rorb
cltd
loopne
lock
aas
xchg
pop
xchg
mov
stos
xchg
inc
ror
lea
adc
rcrl
sub
adc
imul
mov
and
xchg
add
pop
mov
ficomps
out
xchg
movsb
adc
mov
lock
adc
cmp
push
pop
int
inc
pop
call
jb
sub
push
mov
test
test
hlt
adc
cmp
mov
cmc
add
dec
stos
ret
movsb
lods
xchg
mov
push
jne
push
xor
inc
sarb
cmp
dec
jmp
mov
push
sbb
lods
fwait
xchg
sbb
sbb
inc
gs
test
sti
in
cmp
xchg
testb
xlat
pop
sti
imulb
shl
xchg
loop
lret
push
insl
cmp
mov
outsl
iret
mov
xor
push
cli
arpl
mov
xor
adc
rorb
mov
outsb
push
sbb
sti
xchg
mov
aam
aad
ja
jno
jno
xchg
mov
lcall
scas
stos
push
sar
sarb
pop
dec
nop
in
mov
shll
aaa
cmpsb
pop
xchg
rcrl
pop
push
fwait
ss
outsl
xchg
repz
inc
mov
scas
jo
int
dec
repnz
jl
dec
ficomps
sub
test
push
xor
adc
jl
insb
nop
inc
mov
inc
mov
jbe
push
mov
mov
lds
lcall
fistl
mov
or
iret
scas
xlat
fsubl
mov
inc
out
xchg
pushf
sbb
popa
mov
scas
mov
shrl
lods
rcll
in
into
xchg
pop
xchg
jo
addr16
xchg
mov
sub
loopne
adc
push
jg
scas
dec
rcl
sbb
push
dec
fimull
xchg
xor
inc
pop
lods
mov
pusha
pop
sbb
adc
aaa
cmp
add
xor
call
jp
fldt
push
cld
pusha
xchg
packsswb
std
or
popf
adcl
xchg
inc
or
call
scas
test
icebp
outsb
shlb
lret
fidivs
mov
lds
lret
mov
lret
xchg
movsl
lahf
adc
aad
mov
adcl
movl
mov
jecxz
negl
mov
ret
or
test
push
inc
iret
stos
mov
out
scas
mov
aad
fbstp
mov
pop
jmp
xchg
add
jg
insb
or
xlat
mov
scas
jo
shlb
in
test
aam
cld
sub
push
nop
lret
outsb
aas
fwait
dec
lods
adc
pop
clc
push
mov
and
mov
pusha
and
xor
arpl
lcall
or
inc
cli
xor
nop
cs
mov
scas
into
out
adc
int3
loope
das
xor
push
cmp
aad
aam
shl
mov
fisttpll
add
push
push
dec
and
shrb
adc
add
iret
dec
sbb
dec
push
lds
lods
or
lret
sbb
test
in
sbb
iret
popa
rolb
fstps
pop
dec
ret
std
mov
lahf
jg
in
xchg
lods
push
fsub
and
into
inc
inc
lret
inc
mov
push
lcall
popa
jno
stc
mov
xchg
jp
sbb
lds
adc
fnstenv
xchg
lret
out
cmp
cltd
xchg
pop
mov
mov
inc
testl
cli
enter
xor
test
movsb
pop
xchg
fdivs
iret
shlb
or
mov
popa
jp
mov
mov
fists
divb
pop
rolb
mov
ror
sbb
iret
subb
mov
daa
clc
inc
mov
stos
lds
movsl
addr16
sub
enter
sarb
mov
mov
mov
ss
repz
cmpsb
jbe
pop
sub
aaa
dec
ret
jnp
scas
add
lret
cmp
push
loop
in
push
decl
fisubrs
test
xchg
int3
decb
xor
outsl
mov
js
sbb
stc
mov
jmp
or
out
or
insb
or
shrb
out
mov
iret
xor
loope
mov
je
lds
jl
dec
sti
sbb
popa
adc
stos
scas
xchg
stc
push
hlt
inc
cmp
rorb
bound
xchg
sbb
sbb
andb
push
call
out
rcrb
dec
push
incl
push
rolb
jb
and
inc
inc
pop
cmc
movsl
mov
jl
adc
in
rol
add
push
insb
cmc
pop
xchg
outsb
outsl
and
mov
fimuls
scas
mov
addr16
mov
movsl
add
pop
aaa
iret
call
xor
mov
push
dec
std
sbb
xlat
in
ss
iret
mov
clc
xlat
ljmp
or
inc
sti
scas
adc
jo
rcrl
nop
aad
mov
data16
cmp
add
dec
mov
popa
or
mov
push
repz
fwait
and
aas
icebp
dec
sbb
inc
js
in
xchg
inc
jns
xor
add
je
rcrb
mov
out
sahf
test
or
cmp
jmp
or
xlat
and
testl
mov
gs
sbb
cmp
or
cmpsb
xor
cwtl
cmpsb
dec
inc
int
lahf
and
inc
sbb
jge,pt
les
adcb
or
popa
nop
or
xchg
push
inc
dec
outsb
xorps
adc
fmuls
dec
faddp
push
test
adc
sbb
and
fcmovne
hlt
jp
jmp
mov
int
popf
popa
or
cli
lds
xchg
adc
loopne
sub
int
cld
lock
out
icebp
pop
pop
sbb
js
out
shll
and
das
insb
and
fnsave
mov
fcomp
and
rorb
lcall
pop
jb
push
sbb
inc
shl
cs
lahf
int3
mov
xor
in
dec
mov
scas
adc
mov
rorb
js
mov
mov
xchg
jl
testb
loope
insb
shll
push
mov
mulb
out
jno
adc
mov
in
pushf
sub
clc
xchg
inc
mov
ficoms
shlb
xchg
test
sarl
sarb
outsb
leave
es
bound
xchg
or
out
cmc
inc
adc
pop
rorb
mov
mov
scas
cs
imul
lods
adc
jns
jo
sbb
sahf
clc
mov
out
pop
pop
adc
sbb
inc
outsl
xchg
sbb
pop
aad
out
gs
mov
jbe
cs
dec
inc
push
add
ret
pusha
inc
enter
lahf
adc
sub
outsb
outsb
scas
je
adc
pop
ss
iret
negb
out
imul
out
pushf
cmp
dec
shrl
clc
into
out
clc
lods
mov
rclb
fldcw
insb
fsubrs
es
push
xor
dec
lret
or
stc
inc
shrb
mov
mov
loope
add
out
push
rolb
inc
test
sbb
mov
mov
xchg
push
xor
mov
mov
sti
mov
insl
outsl
xchg
js
xor
add
adc
les
in
inc
scas
cmp
xchg
fdivrl
cmc
jl
pop
add
mov
bound
xchg
mov
pop
lret
pusha
test
mov
xor
sbb
movsl
xor
cmc
mov
dec
mov
test
push
push
ficomps
daa
push
mov
arpl
add
jb
fcompl
movsl
loopne
icebp
iret
add
adc
push
out
iret
pusha
push
cs
and
cltd
je
add
mov
pop
push
push
stos
fs
add
repnz
xchg
ss
pop
fldt
cltd
sbb
int
sub
xlat
push
adc
add
jge
xchg
inc
testb
sbb
fwait
leave
pop
adc
ficoms
cwtl
mov
push
rorl
int3
movsl
leave
into
mov
push
or
scas
rclb
daa
fldt
pop
sbb
pmaxub
les
repnz
push
sbb
add
ljmp
sahf
rol
jl
mov
sti
hlt
popa
dec
adc
mov
dec
lock
pop
popf
xchg
imul
mov
scas
pop
ret
jle
shlb
pop
push
lcall
out
not
lret
mov
jmp
aam
cmp
and
jg
lock
jle
xchg
in
aas
mov
cli
in
mov
xchg
jo
mull
mov
or
sti
dec
and
cli
movsb
or
cwtl
xor
in
fs
xor
lahf
loop
cmc
int3
in
lcall
add
les
ss
mov
cmp
shrb
adc
scas
daa
rclb
into
mov
push
ds
daa
mov
pop
push
jmp
testb
std
lahf
rcrl
int
adc
repnz
mov
movmskps
fsubrl
mov
lods
push
rcrb
mov
or
cmp
xchg
fwait
mov
sbb
iret
pop
xchg
sbb
fmuls
xchg
pop
popa
insb
scas
jp
loop
xchg
xchg
hlt
mov
scas
jl
xorb
push
pop
mov
pop
mov
imul
cmp
cmpl
arpl
sbb
cld
in
out
sti
mov
mov
in
nop
js
sbb
iret
movsl
jae
mov
mov
adc
mov
iret
mov
in
addr16
rolb
lds
in
add
into
dec
and
cli
test
shrl
dec
jns
cmp
inc
cmp
cli
mov
clc
and
ret
into
cld
sarl
mov
insb
shrb
adc
push
scas
mov
scas
imul
je
xchg
and
loop
andl
sub
leave
clc
mov
je
popa
adc
dec
lods
add
jnp
lods
jmp
jb
cmp
in
xor
jl
int
xchg
fwait
jno
inc
xlat
mov
iret
mov
mov
pop
mov
lret
jne
adc
out
les
inc
mov
popf
xchg
aad
push
cmp
iret
pop
adc
leave
add
jmp
subl
pop
jno
jnp
aas
and
shlb
cmp
jne
add
stos
fsubrs
jnp
xchg
popl
pop
jbe
data16
mov
inc
cmp
xchg
in
adc
sbb
loopne
loopne
scas
int3
inc
sbb
dec
cmpsl
cli
and
xchg
mov
jbe
sarb
insl
cmp
shrb
inc
pop
pop
pop
pop
sub
aaa
xchg
mov
mov
adc
xor
mov
xchg
jnp
adc
push
into
lahf
and
sub
insb
jo
push
push
push
and
fsubrs
and
add
out
jp
xchg
aas
xchg
jmp
mov
sti
dec
cmpsb
and
mov
call
and
orl
ficoml
jbe
out
cs
or
mov
cmp
rcrb
adc
xor
aas
cmpl
popf
outsl
fisubs
cltd
stos
xor
icebp
push
lds
jmp
inc
pop
xchg
shr
pop
lcall
out
inc
adc
mov
sarb
sub
iret
pop
jo
cmp
inc
and
pusha
push
iret
sub
sbb
xchg
push
push
xchg
les
sbb
aad
mov
scas
xchg
cmp
aam
cmpsb
lock
ret
sub
dec
enter
xchg
xor
mov
fwait
jge
add
push
inc
push
mov
sub
lret
inc
shl
mov
lods
outsl
sarb
mov
rolb
push
nop
sub
mov
push
dec
or
shlb
mov
cmc
fstl
aad
jl
jne
cli
iret
es
shr
pop
push
stos
int
pop
sbb
into
shlb
int
leave
iret
pop
inc
aas
mov
lds
rolb
and
jnp
imul
xchg
scas
push
out
push
push
mov
and
jae
fcom
stos
shlb
into
pop
pop
mull
fnstenv
shll
iret
cmp
xchg
add
mov
pop
stc
mov
iret
stos
or
push
xchg
lcall
push
js
xchg
push
lret
inc
mov
scas
cli
mov
push
rcrb
scas
mov
mov
and
movsl
push
sbb
mov
push
shlb
sbb
sbb
ljmp
or
sarb
push
pop
incl
lock
iret
clc
cli
cmc
and
rcll
push
mov
push
push
scas
scas
fmuls
cs
rorl
insl
stos
push
mov
mov
xchg
push
sub
xchg
ja
fstps
push
xor
inc
xor
vmaxss
xchg
scas
inc
pop
lcall
fldt
add
xchg
jno
adc
xor
mov
iret
pop
and
mov
mov
dec
jbe
fucomi
mov
push
cmc
mov
push
push
pop
sahf
or
mov
cwtl
pop
or
xchg
sbb
aad
xchg
ror
cwtl
pop
fwait
jnp
fidivs
dec
push
adc
scas
jno
mov
aas
test
aaa
data16
add
dec
cmp
add
leave
gs
or
ret
scas
add
push
int3
ljmp
addb
add
imul
mov
sub
jge
out
sahf
cltd
lcall
xlat
or
push
das
inc
sbb
inc
jl
dec
and
pop
fcmovbe
mov
stos
adc
iret
mov
ja
scas
pop
mov
xchg
addb
jmp
cmp
xlat
add
dec
mov
lea
mov
push
fwait
and
xchg
mov
jo
ja
addl
jo
mov
clc
loopne
mov
scas
mov
ljmp
mov
loopne
test
pop
cmpsb
scas
pop
leave
pop
test
test
add
mov
add
jp
shlb
sub
inc
andb
and
mov
pop
popf
or
in
or
inc
scas
adc
imul
cmc
jl
jbe
cmpsl
pop
ds
lret
xchg
add
mov
notl
push
dec
adc
sahf
shr
xchg
fldl
iret
xor
push
popf
repz
cmp
pop
xchg
iret
fcoml
mov
je
es
cmp
mov
mov
movsl
mov
add
lods
shl
mov
sbb
xorb
fmuls
shlb
stc
test
gs
jno
repz
jno
loopne
mov
mov
stc
xor
scas
adc
sarb
or
mov
push
inc
cmp
pop
sti
sarb
lea
ficoms
adc
cmpsb
or
pushl
scas
lcall
xchg
mov
stos
out
iret
mov
sbb
lock
pop
outsb
imul
ds
icebp
sub
pop
xchg
rcll
lods
cmc
mov
iret
outsl
shl
add
mov
enter
inc
adc
adc
add
xchg
repnz
and
add
lock
and
adc
mov
shlb
neg
scas
inc
dec
sbb
shll
out
mov
idiv
scas
mov
in
and
daa
pushf
mov
sbb
jo
xchg
jle
aas
xor
scas
aam
adc
push
lahf
pushf
sub
cmpsb
fnstcw
jmp
stos
mov
insb
lods
fdivrp
shl
xchg
sbb
lcall
stos
enter
xor
rolb
pop
addl
popa
pop
iret
in
or
mov
xchg
sbb
cltd
or
and
icebp
dec
jg
and
in
or
pop
iret
adc
add
mov
adc
xchg
xchg
add
pop
mov
out
mov
lock
inc
mov
sbb
scas
cwtl
shr
int
dec
jbe
loop
les
lock
lea
jecxz
xchg
xchg
push
adc
xor
add
xchg
fnstsw
in
sub
xchg
push
push
xchg
xlat
sbb
mov
pop
cltd
mov
in
and
scas
fstl
xchg
jmp
test
std
push
sti
rorb
mov
and
push
push
jns
jo
popf
test
ret
stos
push
lods
lret
data16
xor
popf
scas
mov
in
scas
mov
xor
into
decl
sub
sti
out
movsl
dec
inc
fwait
adc
cmp
fidivs
push
push
in
add
pop
sub
pop
loopne
sbb
mov
aaa
mov
xchg
repnz
in
and
push
into
rorl
xchg
inc
add
cmpsb
xchg
jge
pop
mov
cltd
jp
xor
gs
adc
jmp
adc
xchg
mov
ret
add
test
sar
dec
inc
push
aad
xor
or
pop
adc
push
jecxz
movsb
dec
ds
gs
rcr
lahf
leave
das
mov
sub
mov
xchg
jp
pop
adc
or
lds
mov
and
or
pusha
mov
js
cli
push
imul
shlb
sbb
sti
out
js
cwtl
imul
in
xlat
rcr
std
and
into
push
sub
mov
pusha
jne
mov
rorb
in
xor
daa
aad
mov
iret
push
aas
mov
daa
adcl
iret
sub
jl
inc
xchg
outsl
test
sahf
xchg
mov
aam
jle
pop
out
fwait
lods
mov
adc
out
into
lret
sti
in
pop
adc
pop
xchg
loopne
add
mov
cld
cmp
imul
pusha
mov
or
add
arpl
cmp
imul
mov
xchg
stc
leave
scas
add
rclb
mov
aad
cmp
iret
or
jl
xchg
sub
mov
xchg
arpl
dec
bound
inc
adc
mov
les
jns
ljmp
jge
in
mov
cwtl
outsl
xor
mov
ret
fimull
xchg
mov
jb
mov
add
mov
add
adc
mov
aad
pop
cltd
dec
jb
rcrl
in
js
jl
rcr
cld
popf
cmp
and
sbb
aas
lcall
aaa
inc
pop
iret
fwait
xor
imul
cli
fcoms
ret
scas
xor
dec
rorb
shll
iret
add
push
sbb
outsl
pop
inc
sahf
jne
pop
addl
push
inc
pop
mov
shrl
cmc
push
aad
iret
jnp
sahf
jecxz
rcl
mov
xchg
mov
jo
cld
shl
lahf
push
in
adcl
lcall
inc
push
nop
mov
ljmp
aas
popa
push
scas
test
xchg
filds
or
push
daa
iret
cs
add
insb
inc
push
out
repnz
imul
jbe
pop
add
or
inc
jge
and
mov
adc
shl
or
mov
cwtl
pop
pop
sub
sub
dec
pop
mov
jl
in
iret
lahf
movsb
sub
adc
xchg
and
xchg
mov
ds
jne
sbb
jnp,pt
decb
sahf
push
add
pop
push
mov
or
mov
leave
push
push
fnsave
les
xchg
push
sahf
inc
xlat
jg
mov
mov
cltd
dec
shll
testb
inc
es
outsl
cwtl
inc
cltd
mov
or
ret
cmp
aas
xchg
lods
aas
js
enter
not
pop
scas
jbe
ret
stos
rolb
lahf
test
adc
ret
push
jmp
and
enter
fmulp
aam
dec
sarb
cmpsl
push
mov
cld
mov
and
mov
scas
pop
inc
xchg
cmp
scas
push
push
push
dec
dec
dec
call
inc
rcr
cwtl
testl
push
xor
push
sarl
mov
rcrl
push
sbb
push
or
jns
addr16
mov
dec
mov
cs
mov
add
out
rclb
int3
rcll
mov
adc
fildll
clc
test
out
mov
orb
aaa
push
in
sbb
cmp
or
out
adc
dec
jne
gs
rorb
movsl
frndint
into
or
in
xchg
add
push
out
inc
jbe
pmaxub
and
dec
adc
cmc
test
cmp
dec
sub
cltd
loop
insl
out
jl
mov
and
bound
mov
mov
sub
scas
xor
stos
fcmovnbe
fucomip
add
lcall
or
xor
mov
insb
push
inc
pop
aad
std
lods
arpl
nop
sbb
call
dec
add
mov
dec
xchg
call
or
push
pushf
iret
dec
or
xchg
mov
mov
rolb
add
repz
out
shlb
test
xchg
sub
ret
add
add
sub
sub
pop
mov
in
mov
filds
enter
add
shrl
xor
lock
pop
mov
xchg
movsb
push
push
je
mov
rorb
jge
xchg
mov
rolb
movsb
lret
xlat
lret
sub
push
inc
xchg
mov
mov
mov
sbb
test
mov
out
cli
mov
jno
lock
lods
in
test
enter
stc
shrb
dec
xchg
push
or
rolb
loope
push
mov
lret
mov
push
pusha
xchg
sbb
push
call
in
int3
pop
push
and
sbb
stos
jb
push
dec
scas
mov
fiaddl
jmp
or
scas
sbb
pop
push
jo
out
lock
out
cmp
pop
in
mull
sarl
xchg
or
xchg
xor
dec
ret
iret
lods
leave
xor
ficompl
xchg
test
mov
cs
push
scas
std
in
cmp
shll
int3
stc
int3
sti
inc
imull
lret
push
rol
or
cs
push
sti
add
or
loop
loopne
rcrl
sti
cltd
iret
mov
stos
mov
or
cmp
push
jbe
in
and
and
cmpsb
mov
repz
popa
sub
cmp
mov
jb
lea
or
cltd
iret
add
sub
out
xlat
sti
stos
push
das
dec
ficoms
lret
out
lods
icebp
shlb
dec
popf
data16
popa
iret
out
fstl
cmp
inc
jo
pop
jae
mov
addr16
add
outsb
or
andb
shll
cmp
scas
jmp
xchg
or
das
xchg
scas
xchg
and
jns
jae
inc
dec
adc
and
jo
shl
enter
testb
jmp
xchg
fcom
mov
bound
or
movsb
lret
dec
arpl
pop
jmp
mov
repnz
cmpsb
js
shr
xchg
fldt
pop
sarb
fs
scas
and
inc
not
push
xor
mov
or
pusha
ds
xchg
mov
or
xchg
ret
push
or
xchg
or
xchg
mov
cmp
aas
and
dec
xor
xchg
jmp
loope
cltd
push
mov
fidivl
int
xchg
xchg
mov
fisttpl
es
out
jg
shll
or
dec
rclb
mov
push
out
push
out
pop
lret
xchg
rorb
int
cmpsb
mov
ss
push
scas
out
jnp
jno
cmp
pop
jns
pop
adc
mov
lds
push
adc
sub
out
push
and
push
call
dec
mov
pop
xor
jo
idivb
sbb
push
les
iret
adc
aam
imul
ja
push
in
pop
dec
mov
mov
rolb
movsb
subb
rorb
in
xor
fldl
scas
inc
pop
push
push
andl
shlb
jmp
xchg
mov
iret
inc
je,pn
out
mov
movsl
pop
mov
mov
pop
insl
decl
xchg
or
loopne
pop
and
mov
mov
lods
sbbl
rol
cmp
pop
iret
dec
add
je
das
jl
lods
cmp
lods
daa
dec
and
movsb
mov
sahf
popa
sbb
mov
xor
bnd
cs
scas
loop
lea
daa
xlat
add
fidivs
push
xchg
scas
cmc
mov
insl
adc
jge
ljmp
aam
jne
adc
testl
inc
and
aad
dec
push
ja
mov
or
sbb
jmp
cli
shll
inc
popf
sbb
call
lret
xchg
scas
lods
sub
pop
mov
iret
hlt
inc
test
mov
sahf
int3
dec
sub
or
aam
sbb
aaa
test
ja
stc
adc
pop
add
cltd
int3
pop
rcl
mov
in
lsl
rorl
push
sbb
stos
dec
jae
loop
mov
jmp
mov
xchg
mov
fsubrs
mov
dec
xchg
jo
xchg
sub
add
or
test
shrb
insl
dec
in
cli
test
ss
mov
ja
sub
out
or
scas
jae
jbe
or
fdivrl
pop
fsubl
push
push
mov
push
xor
fists
imul
add
adc
repnz
dec
mov
pop
and
sbb
xchg
addr16
sbb
mov
mov
xor
jnp
call
shlb
xchg
mov
repz
idivb
xchg
scas
cs
jns
rcrb
push
enter
je
mov
push
add
push
push
dec
mov
jbe
sbb
outsl
into
ds
mov
pop
pop
cmp
gs
push
mov
sbb
cmp
scas
or
add
and
lock
mov
loop
dec
lods
xchg
fdivr
push
push
js
daa
mov
push
iret
pop
shlb
inc
mov
adc
scas
pop
xor
repz
or
cmp
mov
xchg
fisubl
rol
incl
scas
lods
out
fisttps
iret
pmulhuw
push
fmull
daa
imul
fwait
ret
inc
je
pop
mov
scas
enter
out
orb
cs
rcrl
sub
mov
iret
je
stc
scas
lock
mov
adc
scas
rcrl
pop
push
nop
sarb
cmpsb
sub
adc
in
mov
push
add
fsubp
jge
test
jmp
rcll
inc
out
push
push
iret
repnz
ret
jmp
xchg
pop
cli
lret
mov
mov
mull
jae
adc
xor
xchg
jb
jl
stos
fiaddl
scas
dec
fucom
xlat
or
mov
ljmp
repz
scas
lcall
jno
shll
sti
jns
int
mov
sbbb
mov
dec
rclb
div
call
aas
movsb
adc
mov
ror
jne
in
add
sub
jns
push
fidivl
mov
mov
mov
jg
imul
in
notb
out
jno
loope
jp
scas
les
les
mov
fidivrs
or
test
xchg
mov
roll
dec
es
mov
scas
cli
scas
es
mov
xchg
xchg
xchg
mov
outsb
adc
aas
test
and
mov
popa
and
pop
imul
adc
pop
stos
rolb
mov
inc
ficoms
xor
jb
fcoms
jae
insb
bound
rolb
mov
mov
cmp
scas
dec
xor
inc
mov
rdmsr
dec
scas
fnstenv
jl
pusha
scas
xor
out
mov
gs
clc
mov
pop
pop
inc
dec
popf
scas
mov
outsl
xchg
or
std
movsl
xchg
in
inc
pop
lret
xor
pop
add
or
mov
jmp
jnp
xchg
jge
std
popf
ljmp
or
in
pop
scas
and
jne
shl
sub
and
fldenv
iret
scas
cmp
jle
psadbw
not
push
insl
jmp
inc
pop
daa
jbe
mov
scas
push
or
xchg
jmp
iret
pop
adc
mov
dec
xchg
push
cmp
dec
dec
push
cwtl
fiadds
sar
imul
out
cli
sub
mov
fnsave
stos
jns
cmc
adc
pop
and
push
mov
inc
out
ret
iret
imul
jmp
adc
orb
push
test
mov
adc
mov
psrlq
mov
jbe
pop
enter
xchg
add
pushf
xor
nop
sub
test
shl
mov
pushf
and
fisubs
mov
jb
rorl
dec
call
sub
xchg
and
fcmovu
add
aaa
das
xchg
in
iret
adc
inc
mov
scas
jo
out
inc
vmovshdup
mov
push
ror
enter
outsb
outsl
mov
in
pop
add
insb
sahf
out
cmp
adc
jae
sbb
and
add
insl
dec
adc
out
into
in
mov
fdivl
inc
xchg
scas
push
js
pop
shlb
fs
add
movsb
cmp
cmc
inc
xchg
test
inc
data16
fistpll
jmp
push
test
je
je
xchg
inc
xchg
dec
iret
dec
and
add
jl
fisttps
inc
cwtl
mov
in
in
mov
scas
or
and
sbbl
es
scas
jp
lahf
xchg
shl
add
inc
add
out
or
daa
sbbl
aaa
shll
push
xchg
xlat
imul
cmpsl
sub
insb
icebp
or
xchg
movsb
mov
mov
dec
mov
clc
aad
pop
inc
mov
push
mov
mov
inc
es
xchg
jbe
and
jle
sub
cmp
mov
dec
out
fimull
int3
testl
xchg
dec
adc
mov
jbe
pop
dec
cmp
xor
cmpsl
inc
mov
push
ljmp
xchg
push
inc
in
mov
addr16
fwait
mov
int3
fidivrl
cld
insl
jmp
insb
lods
divl
inc
pusha
xchg
cmc
cmp
out
iret
jmp
data16
iret
ret
lods
mov
cwtl
sub
jnp
ds
fldt
jb
cli
gs
sub
scas
outsb
out
xchg
arpl
push
dec
jbe
mov
jae
dec
mov
test
inc
and
aad
mov
cltd
notb
pop
xchg
push
xor
mov
cmp
stc
idivl
hlt
es
shl
notl
loopne,pn
lods
iret
mov
mov
imul
aam
mov
cmp
add
xchg
xchg
popa
rorl
dec
cmp
out
inc
pop
dec
inc
scas
dec
sahf
rcr
mov
mov
hlt
push
ja
mov
outsl
or
sarl
xchg
mov
or
rcll
cmpsb
push
lahf
dec
and
std
ja
scas
ror
call
in
xchg
pop
add
cmp
lcall
bound
lods
push
pop
xchg
xor
jmp
scas
nop
test
sbb
xchg
xor
fisttps
repz
cmp
sti
push
jmp
aaa
lods
scas
dec
sub
movsl
shlb
mov
sbb
cwtl
test
cmp
iret
jp
cmp
dec
lret
aaa
cmp
mov
ljmp
dec
fsts
cmp
sub
scas
pop
dec
in
mov
add
mov
enter
aas
lcall
pop
lods
jne
scas
insb
iret
mov
xchg
cmp
xchg
sbb
fcompl
jnp
mov
mov
sub
add
sub
and
mov
repnz
scas
mov
sub
scas
lahf
insb
mov
jnp
mov
repz
jns
scas
imul
mov
test
pop
push
iret
xlat
or
push
adc
call
pop
rolb
in
xor
outsl
sub
stos
repnz
mov
mov
popf
dec
je
imul
shll
repz
xchg
or
jl
mov
xchg
add
mov
pop
scas
jno
mov
fwait
rolb
popa
out
in
iret
out
sbb
pushf
imul
pop
notl
daa
outsb
iret
iret
fwait
inc
dec
lock
cmp
mov
pop
ss
das
sbb
push
jle
push
cmpsl
pusha
nop
jecxz
pop
cmp
dec
scas
stc
popf
fxch
inc
adcb
ljmp
scas
xor
ds
aas
jecxz
add
pop
ror
ss
sbbl
shlb
dec
inc
jge
push
loopne
js
stos
notl
sub
call
lock
mov
add
jns
pop
adc
or
cli
lret
insb
mov
out
cmp
and
adc
iret
data16
in
lahf
adc
clc
dec
mov
pop
xchg
mov
push
pop
xchg
es
nop
sub
testb
adc
fisubrl
sarl
pop
movsl
mov
xor
pop
cmpsb
cmp
mov
jl
mov
cli
push
ror
and
xlat
add
xchg
inc
xchg
mov
push
sub
movb
fstps
rcr
arpl
stos
sahf
mov
decl
outsb
xor
iret
lods
xchg
xchg
push
cltd
cwtl
pop
xchg
in
jnp,pn
aaa
sub
jg
or
push
mov
push
add
cmp
into
les
iret
add
cwtl
int
dec
sbb
cltd
sbb
mov
push
jge
int3
out
push
out
fldcw
xchg
mull
sbbb
mov
mov
inc
int3
xchg
sbb
pop
mov
rorb
sbb
lret
sar
sub
adc
rcrb
mov
dec
pop
sub
inc
xchg
add
out
imul
int3
inc
mov
xchg
aaa
xor
or
cmpsb
aaa
rorl
mov
cwtl
mov
xlat
cmc
cwtl
shrb
shl
sti
mov
inc
clc
xchg
into
sbb
scas
popf
cmc
fcmovb
xchg
xor
fildll
push
dec
push
mov
mov
scas
fcmovu
mov
mov
call
fimuls
mov
push
xchg
stc
sar
dec
jnp
fdivrs
or
fcmovnbe
loopne
dec
add
xchg
jge
xlat
pop
in
insl
xchg
adc
cli
push
mov
xchg
scas
xor
dec
jne
insl
mov
inc
sub
xchg
inc
rcl
dec
xchg
adc
push
movsl
fnstenv
mov
cltd
xor
or
loope
mov
pop
mov
add
pop
dec
dec
xchg
lods
fbld
pop
gs
add
loopne
push
cmpsb
sahf
mov
push
jno
xchg
lock
mov
pop
add
xchg
loope
sbb
enter
in
into
xor
mov
ret
bound
pop
mov
dec
popf
xchg
imul
aas
rolb
das
jle
ret
jg
mov
mov
mov
movsb
nop
push
aad
pop
aad
inc
sub
mov
cmp
inc
or
shll
push
jmp
mov
lahf
inc
es
mov
cmp
fdivl
loope
mov
dec
xchg
inc
xchg
and
mov
xchg
xchg
fwait
nop
mov
mov
outsb
jno
xchg
sbb
ret
cld
in
sub
xchg
sub
inc
sbb
stc
shll
inc
iret
and
fstl
and
mov
repz
stos
sbb
ror
and
xor
push
divl
jg
fidivl
dec
cmp
sub
sub
xor
scas
sbb
les
or
sub
mov
scas
repnz
xchg
rolb
mov
lret
dec
fstpt
outsl
scas
and
push
inc
das
mov
sahf
lahf
sub
jg
push
xchg
in
rorl
in
or
adc
aad
mov
inc
cmp
pop
ss
aas
cmpsl
adc
adc
scas
add
lahf
inc
in
shrb
xchg
insb
push
outsl
test
fisubrs
jne
lret
sub
jae
dec
imul
push
das
mov
adc
testb
mov
jae
xchg
xlat
cli
into
add
daa
sarl
mov
adc
into
mov
sbb
dec
cltd
mov
jecxz
mov
scas
pop
adc
negb
mov
out
pop
mov
imul
adc
shlb
pop
mov
insl
xchg
xor
cmpsl
int
pop
ret
in
out
popa
cwtl
scas
fwait
leave
mov
xchg
sub
mov
aad
movsb
scas
rcll
data16
push
pop
int
pop
and
or
inc
fldl
fists
jno
aam
gs
or
push
popa
lret
cmpsb
xor
push
das
cmpb
shlb
xor
cmp
push
jecxz
int3
out
mov
scas
das
dec
mov
adc
pop
sbb
jg
scas
test
int
jmp
pop
ret
adc
mov
sub
ds
cmp
jbe
jp
mov
adc
std
aad
int
fidivl
inc
rcrb
shlb
pop
pop
fdivrp
push
or
scas
mov
sbb
imul
sbb
ss
fisubs
sbbb
rclb
popf
cs
sub
push
xlat
xchg
iret
pop
or
adc
mov
subl
or
dec
xchg
or
data16
jl
hlt
pop
daa
jle
push
xchg
mov
mov
xchg
fldcw
outsb
rcr
mov
xchg
adc
cs
xchg
jg
clc
insl
mov
jbe
lahf
xor
mov
jge
push
std
mov
scas
filds
sbb
orl
rcrb
aaa
loopne
mov
popf
imul
xchg
push
jmp
sub
mov
dec
popa
shll
out
jp
and
mov
sub
push
stc
bound
xchg
xchg
adc
mov
xor
js
mov
imul
es
jo
jae
cmp
adc
inc
lds
mov
aad
lret
das
movsb
pop
mov
loop
in
mov
adc
movsb
xor
scas
sub
fs
and
stos
cli
enter
inc
jae
scas
sbb
add
mov
push
leave
dec
fldcw
les
push
sbb
fsubp
ret
ss
iret
loopne
pusha
dec
xchg
das
daa
xchg
add
int3
xor
scas
add
sarb
mov
pop
pushf
sbb
sub
mov
int
mov
push
jnp
and
inc
sbb
int
xchg
repz
jmp
sbb
popa
shl
fsubrl
test
xchg
inc
pop
sbb
cmp
inc
jns
mov
xchg
scas
rol
xchg
mov
es
mov
flds
int3
decl
iret
add
fidivrs
sub
rcll
movsl
scas
ja
fstpt
imulb
loope
int3
adc
fisubrs
in
das
lods
pusha
pop
push
jecxz
adc
scas
xchg
or
mov
xchg
xor
cmpb
imul
shrb
pop
int
outsl
loopne
adc
and
xchg
inc
arpl
sbb
test
cmp
out
lret
in
jns
push
or
icebp
into
fidivrl
fisttps
pop
loope
ds
scas
sbb
test
adc
lds
rcrb
repz
and
push
mov
mov
and
andl
pushaw
gs
icebp
test
xchg
add
adc
mov
mov
push
mov
add
iret
das
stos
xor
pop
sbb
push
out
scas
cmp
shl
rorb
or
hlt
arpl
sbb
fucomi
pop
in
add
mov
inc
sbb
xchg
adc
frstor
sub
inc
xchg
mov
testb
leave
pop
scas
jg
mov
inc
shlb
xor
lret
scas
sbb
xchg
inc
push
inc
pop
xlat
cmc
mov
add
rcl
movsb
jnp
sbb
je
push
icebp
cmp
test
push
insb
iret
xor
xor
jle
inc
sub
xor
sbb
int
jae
pop
hlt
and
lcall
sbb
mov
ret
out
loop
or
xor
jbe
popa
xchg
aad
ja
push
stos
ret
xchg
mov
out
rolb
adc
mov
mov
testl
lahf
es
inc
cmpsb
addr16
imul
scas
pop
inc
arpl
xlat
repnz
outsl
push
fmuls
mov
pop
mov
cld
subb
mov
xor
sbb
insl
sub
neg
popa
xchg
mov
test
cld
int3
repnz
fs
mov
jb
mov
rcll
mov
or
scas
pop
cmp
and
mov
inc
xchg
cmc
and
ss
mov
mov
cld
lret
xchg
mov
out
sarb
sub
xchg
lcall
xchg
pop
dec
and
mov
loop
lret
xchg
in
mov
dec
xchg
out
push
mov
je
rclb
xchg
and
cs
pop
leave
xor
int
or
inc
adc
bound
dec
fmul
push
iret
xchg
xor
ds
aaa
pusha
rcll
ja
test
pop
adc
loop
aad
incb
ss
ja
jne
mov
into
nop
inc
icebp
loopne
mov
aam
and
mov
adc
les
push
sarb
movsl
arpl
iret
inc
fs
test
cmp
xchg
sbb
lock
inc
dec
int3
scas
xchg
pusha
movsl
rolb
shrl
das
es
and
mov
inc
lcall
ds
push
rcl
and
js
dec
ljmp
scas
jmp
cltd
mov
testb
jecxz
mov
pop
dec
aam
sub
mov
insb
mov
iret
or
push
jmp
das
ljmp
jne
dec
call
decl
arpl
and
sbb
rclb
mov
pop
fidivrs
jns
xchg
jecxz
mov
nop
sbb
add
xor
push
dec
scas
mov
out
in
test
sub
scas
in
cmpb
js
lods
ss
mov
mov
and
adc
cmp
push
push
lods
xchg
lahf
pusha
mov
or
insl
scas
jmp
sbb
leave
cmpsb
jg
adc
jl
inc
sahf
lcall
sbb
adc
dec
scas
rcl
push
inc
dec
dec
aas
xor
mov
mov
test
or
hlt
out
sbb
xor
pop
std
xor
arpl
sub
jg
adc
addr16
test
test
sbb
fidivl
daa
cmp
xchg
pop
fstps
subl
or
fcoms
pop
xlat
or
and
arpl
and
xchg
stc
cmp
pop
iret
bnd
mov
out
jne
fldt
cmpsb
sub
aaa
scas
and
inc
gs
and
sub
into
or
or
in
std
jmp
popf
out
mov
push
inc
adc
nop
cmpsb
mov
movsl
iret
xchg
mov
rolb
push
mov
iret
mov
pop
iret
nop
dec
iret
dec
dec
aad
stos
mov
xor
jl
adc
enter
iret
iret
js
rclb
push
adc
sbb
inc
xorl
out
or
bswap
inc
jmp
ret
popf
cmp
xor
or
cmp
aas
push
btr
in
cmc
stos
xor
movsl
and
cmp
dec
xchg
iret
or
clc
cmpsb
daa
xor
push
mov
shlb
push
lret
or
aas
scas
sarb
sahf
fstpl
mov
pop
pop
iret
sbb
add
sbb
lcall
xor
lds
inc
shlb
sub
outsb
inc
call
pop
push
pop
dec
xchg
ja
scas
popa
sbb
mov
sbb
rclb
pusha
data16
shlb
mov
sbb
inc
xchg
mov
ss
push
lods
cmp
test
aas
fwait
dec
sbb
int3
pop
jmp
fisubl
aas
push
clc
mov
push
jmp
mov
cmp
out
sbb
sbb
add
xorb
pop
sar
into
pop
shl
fildll
mov
sbb
rcll
je
cwtl
push
xor
push
and
jmp
cltd
insb
mov
test
adc
mov
mov
mov
mov
fcmovnbe
daa
dec
in
cli
divl
lods
inc
mov
lea
dec
sbb
fwait
jp
out
xorl
push
push
inc
clc
nopl
xchg
out
xlat
out
sub
cmp
int
jnp
das
inc
cmpsl
xchg
iret
call
xchg
mov
jg
fstpt
xchg
ja
jecxz
add
mov
sahf
xchg
movsb
adc
int3
cmp
pop
add
xchg
sbb
jg
jecxz
negl
rolb
test
popf
rcl
sub
nop
pop
call
or
dec
js
xor
mov
out
test
mov
sbb
push
jbe
and
mov
mov
aas
xchg
rorb
sar
add
mov
sbbl
inc
dec
xchg
xchg
or
divl
and
repnz
xchg
scas
jb
rcr
or
sub
xchg
test
scas
cmp
aas
pushf
shrb
mov
cmp
lods
xchg
sbb
imul
xchg
in
lret
fwait
pusha
lahf
inc
pop
mov
mov
or
mov
into
cs
pop
data16
pusha
dec
xchg
xchg
mov
add
fs
in
inc
imul
shlb
inc
jb
in
out
sbb
in
sti
or
lods
data16
shlb
sti
push
aam
dec
ret
hlt
sbb
sbb
lret
xor
or
aad
int3
push
lret
cmp
jp,pt
add
xchg
test
loopne
jle
stos
xchg
ja
cltd
xlat
mov
movl
mov
inc
mov
sub
lds
not
shl
lea
cli
mov
push
iret
outsb
cwtl
in
test
shlb
push
xchg
inc
scas
mov
mov
es
cmp
das
ljmp
iret
mov
xchg
leave
xchg
and
test
cld
sub
daa
mov
ljmp
scas
aam
push
and
data16
adc
sub
pop
sub
popa
push
mov
jb
xchg
iret
in
pop
jae
xor
cmp
dec
imul
xor
fistpl
scas
cmpsl
pop
sarb
dec
adc
daa
and
scas
jbe
xor
roll
cs
mov
mov
cwtl
sti
add
cld
sub
int
or
xchg
mov
lea
addb
push
test
xor
aaa
xchg
pop
adc
xor
mov
rcrl
loope
scas
mov
cltd
sbb
sbb
add
mov
call
push
push
fisttps
popa
or
mov
xor
adc
mov
mov
aad
hlt
stc
adc
push
or
cmc
jg
mov
rolb
je
and
insb
ror
rorb
iret
aam
push
dec
sub
adc
sbb
push
or
es
in
push
nop
xchg
lods
mov
stos
adc
aam
push
xor
cmc
into
sub
dec
dec
mov
cld
shrl
imul
iret
sbbb
dec
mov
cmc
mov
pop
negb
jge
or
mov
push
fisttpll
in
sbb
mov
cli
int3
inc
das
xchg
insl
jne
inc
cli
movsb
adc
sbb
push
xchg
or
test
lea
cmp
fsubs
adcb
fsubr
popf
and
jg
pop
les
out
stos
idivl
inc
mov
pop
cmpb
cs
out
adc
test
js
mov
test
scas
jno
inc
test
xor
sub
loopne
arpl
inc
cmp
mov
and
loope
xchg
clc
xor
scas
or
inc
cmpsb
push
push
pop
dec
fnsave
fs
adc
into
and
rcrb
repz
iret
pop
mov
ret
xchg
xchg
cltd
jnp
push
xchg
outsl
aam
cmc
sar
jmp
mov
adc
int
mov
push
adc
dec
test
inc
push
stos
jbe
push
rol
or
shrb
adc
fistpl
push
loopne
iret
stos
sub
xchg
or
or
fistps
hlt
outsb
and
cs
in
mov
outsb
ret
scas
xorl
shlb
aad
adc
inc
lcall
push
les
fiaddl
jg
pop
out
xor
mov
xorl
xchg
loopne
je
add
mov
mov
adc
sbb
loopne
and
rolb
mov
iret
jge
adc
mov
stos
or
mov
js
jmp
mov
clc
je
xor
adc
mov
inc
in
push
dec
dec
xor
or
or
daa
and
insb
leave
into
test
mov
sub
or
int3
inc
std
add
adcb
xchg
mov
sub
shl
mov
jne
stos
dec
jl
test
xlat
sub
inc
imul
mov
cli
cmpb
mov
out
push
loopne
in
ret
test
scas
rcr
mov
std
loope
or
mov
cmp
add
xor
shr
lds
lahf
jbe
ror
jmp
or
or
ret
or
sbb
inc
dec
out
xchg
rcl
sub
test
cmovno
cld
or
xchg
scas
sbb
loop
fwait
iret
pop
and
inc
test
xor
stos
sti
outsb
jne
iret
push
outsb
dec
mov
xchg
stos
mov
icebp
out
aam
negl
jb
add
rcl
ja
xchg
mov
mov
in
sahf
int3
push
add
ss
je,pn
lock
imul
pop
sub
adc
xor
sbb
enter
ficoml
lcall
ljmp
lret
cmp
or
and
std
xor
outsb
les
shrl
rclb
pusha
shll
xlat
shlb
lahf
repnz
cmovne
pop
pop
jns
test
scas
pop
insl
scas
fldl
push
iret
rolb
test
iret
push
andb
iret
xorb
shll
out
fcomp
out
iret
xchg
sbb
jmp
sbb
jbe
repz
or
jae
push
mov
notb
mov
or
aad
push
add
fwait
repnz
test
imul
mov
adc
and
shrb
sub
shrb
mov
cwtl
jae
cmp
sub
jnp
gs
cmp
push
inc
call
cmp
mov
outsb
iret
pop
and
adc
adc
xlat
pop
fiaddl
xor
mov
pop
outsl
scas
cmp
imul
in
adc
mov
lahf
jge
fstps
repnz
pushf
out
mov
es
lret
out
outsb
adc
xchg
add
aam
adc
repz
outsb
mov
mov
repnz
mov
add
jns
xor
mov
push
ret
push
xor
jp
mov
test
xlat
xchg
mov
cmpsb
dec
hlt
xchg
ficomps
sub
adc
and
mov
pushf
jmp
xchg
fs
mov
mov
call
call
sbb
test
sub
jmp
in
daa
arpl
or
ds
xor
mov
rorb
cmp
xchg
loop
daa
push
iret
inc
sub
rorb
xchg
push
xchg
repnz
enter
int
mov
xor
xchg
inc
fcomip
das
rcll
iret
jae
lea
xchg
cmp
sbb
stos
das
outsl
inc
fs
sbb
push
mov
jnp
xchg
xchg
xchg
imul
xchg
jle
cli
jecxz
jns
add
in
test
imul
ss
inc
inc
jbe
in
sub
pop
cwtl
or
iret
orl
pop
out
ficompl
iret
stos
pop
addr16
gs
jns
cmp
xor
or
cmp
mov
iret
roll
and
xchg
adc
dec
cmp
jno
pop
scas
rcrb
mov
orl
mov
cmp
or
xchg
in
add
jp
aas
mov
mov
jne
sbb
mov
xchg
jmp
dec
ficoms
popa
int
pop
test
adc
sahf
out
jmp
call
jnp
iret
mov
fisubrl
or
subb
out
mov
mov
sbb
out
js
jecxz
shlb
repnz
shl
imul
jno
loope
pop
or
xchg
mov
jns
xchg
shrl
push
jg
rcrb
lds
shrl
and
mov
inc
pusha
loope
mov
xchg
mov
stc
cs
iret
jg
cmp
mov
pop
xchg
fsubs
or
jo
adc
lods
in
scas
outsb
leave
sub
add
shl
add
imul
inc
test
mov
les
pop
push
scas
jle
pop
xor
lods
lret
pop
pop
test
push
hlt
cmpsb
cmp
lahf
scas
and
push
shlb
jp
mov
lcall
dec
or
test
iret
call
mov
pop
faddl
push
dec
popa
pop
iret
arpl
cmpsl
stos
loope
into
xchg
push
or
leave
push
enter
jge
add
dec
fs
rolb
pop
or
hlt
push
and
rorl
mov
clc
das
xchg
out
mov
dec
dec
test
push
lds
into
sarb
bound
fstpl
push
rolb
clc
rcrb
adc
icebp
lods
scas
and
sub
sarb
cmp
lcall
inc
cmc
shll
ja
adc
imul
mov
inc
int3
mov
outsb
xchg
inc
adc
rorb
scas
mov
xor
sbb
pop
push
repz
sub
xchg
inc
in
inc
insl
push
adc
lcall
cmp
push
cs
into
adc
xchg
ret
pop
jg
xchg
sbb
pushf
push
push
cmpsb
sub
rcrb
and
dec
jae
scas
mov
push
xchg
pop
or
jecxz
xchg
iret
jecxz
lea
icebp
xor
mov
imul
jns
mov
mov
lret
cmpsb
aaa
inc
xchg
xorl
dec
sub
test
fistpll
mov
cmc
aam
mov
inc
mov
imul
jge
mov
repnz
mov
outsl
pop
adc
and
cmp
rol
cmp
imul
outsl
add
scas
cli
sahf
adc
adc
push
xchg
xor
dec
adc
sbb
add
xchg
setne
cltd
xchg
scas
add
out
fisttps
mov
push
xor
mov
add
iret
je
xor
jge
movsl
fiadds
push
popf
leave
mov
jmp
push
mov
repnz
popf
push
iret
xor
rcr
mov
je
dec
add
imull
rolb
mov
pusha
mov
or
xchg
mov
in
cltd
add
lahf
aas
cmp
xchg
ljmp
sub
sub
sbb
mov
pop
mov
xor
test
mov
cltd
push
adc
icebp
scas
inc
es
sbbl
adc
cmpsb
ss
and
je
popa
iret
mov
adc
sahf
mov
fstps
xchg
lock
push
xchg
jg
xlat
lret
cltd
adc
pop
bound
xchg
inc
dec
out
stos
scas
sti
dec
test
sarb
sarl
aad
cmp
into
aas
mov
aam
das
xor
dec
lret
scas
push
iret
dec
sbb
shrb
out
jecxz
jle
jle
fcoms
les
call
faddl
adc
push
xor
add
xchg
add
lods
cmp
push
pushf
or
stos
cmp
fistpll
inc
jbe
xchg
cltd
insb
cs
iret
ficoml
lea
xor
movl
gs
mov
roll
negl
pxor
xchg
test
xchg
ja
in
sahf
loopne
cmpsb
lock
sarb
lea
stc
pop
cltd
iret
mov
fs
push
inc
inc
adc
mov
push
fistl
sbb
iret
fwait
scas
xchg
jbe
pxor
adc
pushf
jl
jmp
in
rcrl
ds
leave
pop
jbe
xchg
mov
cmp
cld
scas
ret
jne
xor
lea
sub
add
sbb
mov
mov
or
or
jl
cmp
rolb
popf
sar
ret
negb
jo
les
xlat
rcrb
lahf
or
call
lds
orl
adc
jmp
ret
sub
jne
sbb
jl
push
jmp
scas
push
xchg
jns
shl
dec
xlat
aam
out
mov
iret
push
sub
movsb
xchg
adcb
push
bound
xor
mov
sbb
jns
iret
xor
test
mov
notb
ror
repz
mov
pop
fidivrs
dec
pop
jb
push
aam
cmpsb
fsts
or
add
or
or
ss
loopne
pushfw
subl
xchg
push
es
andl
stos
sbb
pop
iret
dec
xor
test
xchg
lret
movsb
mov
jo
pop
mov
cmp
sub
jae
popa
pop
adc
insb
cmp
mov
sarl
pusha
dec
mov
stos
push
fsubl
lods
in
mov
mov
cltd
mov
add
stc
push
push
push
insl
fsubl
xchg
mov
xchg
jg
shll
dec
xchg
fstps
jmp
ret
jl
xor
add
cmp
sbb
aaa
clc
test
scas
mov
sub
cwtl
push
lock
movsl
cmp
xor
push
pop
nop
xchg
or
and
pop
loopne
pop
stos
scas
sub
sarl
test
hlt
shll
into
lds
push
rcrb
add
fwait
cmp
out
scas
mov
xor
sbb
mov
mov
test
and
lret
dec
call
push
or
aas
xor
sub
lret
inc
iret
mov
and
mov
das
in
je
aas
fdivrs
jne
test
popa
adc
mov
scas
loop
xchg
push
cmp
cmp
fidivl
jl
test
mov
push
xchg
cmp
fildll
push
pop
dec
inc
dec
scas
xor
lret
paddw
jnp
dec
scas
js
outsl
and
or
testl
push
adc
in
repz
xchg
lcall
andl
das
pop
scas
fsts
xlat
rol
ds
mov
jo
mov
mov
std
pop
rcll
and
and
jae
sub
push
fwait
out
dec
jo
jnp
daa
bnd
scas
jbe,pt
dec
rol
and
cmp
mov
shrb
xchg
jmp
call
sbb
sbb
leave
pop
inc
stos
xchg
cmpb
inc
test
and
cmc
cld
ret
in
sub
pop
dec
pop
jp
jbe
xchg
mov
cmp
xchg
add
popf
popa
out
inc
xor
mov
or
or
adc
cmpl
push
sub
and
mov
push
inc
jg
mov
ror
sub
lods
mov
out
lcall
popf
add
lret
mov
or
call
rorl
push
jge
jecxz
jnp
pop
dec
outsl
iret
sub
mov
push
push
cmpsl
and
or
fidivrs
orb
pop
aas
jp
cwtl
jne
push
cmp
iret
inc
lods
loop
mov
pop
fistl
jns
shrl
pusha
iret
add
aad
jne
das
lret
mov
push
gs
add
shr
mov
fisubrs
inc
adc
cwtl
push
push
aas
iret
lret
add
xor
inc
add
cmp
fldcw
iret
rolb
jae
jb
ret
cmpsb
sbb
and
cmp
fcmovbe
mov
pop
xchg
into
jmp
push
mov
test
push
pop
inc
mov
adc
xchg
or
jb
sahf
jecxz
cmp
cmpsl
lret
sahf
arpl
inc
sub
insb
mov
imul
or
jge
aad
jg
imul
push
and
mov
mov
xchg
xchg
pop
lods
cmp
jp
fcmovne
adc
rolb
leave
xchg
shlb
add
sub
push
mov
mov
stos
mov
sub
mov
and
lcall
and
cs
js
xchg
xor
into
mov
sub
shlb
subb
jg
dec
xchg
iret
mov
out
and
mov
sub
cmp
and
into
push
mov
lock
adc
and
out
and
outsl
sbb
roll
ret
or
fsubp
or
xchg
fwait
insl
xchg
xchg
dec
or
sbb
in
mov
cmpsl
adc
inc
out
fpatan
push
push
insb
loope
cltd
and
out
sarb
scas
push
fs
pushf
jbe
roll
jnp
ds
jmp
scas
xchg
and
fldt
mov
push
orl
je
sar
cmp
or
jne
out
in
mov
sub
add
imul
dec
icebp
iret
scas
outsl
jmp
in
into
arpl
jne
mov
outsb
cwtl
push
fsubrl
inc
push
or
lods
sub
push
ret
xor
xchg
xchg
in
xchg
xor
sub
sub
idivb
and
push
loop
jp
dec
ror
mov
cmp
push
shrl
nop
mov
inc
in
dec
ds
mov
dec
push
pusha
pusha
sti
ja
rclb
inc
xor
repz
jecxz
out
xor
rolb
xor
movsb
mov
iret
in
xchg
push
out
xlat
test
mov
adc
fstl
xor
shrb
dec
mov
sbb
jmp
adc
or
push
pop
xchg
xlat
mov
xor
enter
cld
scas
jno
mov
jo
jle
rol
sub
iret
xor
iret
std
aaa
rclb
ror
jnp
out
test
cmpsb
ret
mov
add
sbb
das
or
fmuls
cmp
ss
cmp
and
mov
int3
sub
scas
ljmp
orb
mov
pop
movsl
adc
imul
or
push
mov
into
sbb
xchg
decb
mov
mov
add
js
xlat
mov
daa
xchg
or
repnz
ficoml
daa
xor
loop
scas
xchg
and
scas
fiadds
das
push
ja
iret
pop
notb
ret
ret
xchg
pop
push
xorl
in
inc
push
mov
lret
lds
jnp
sub
cmp
mov
mov
or
xchg
data16
out
sbb
ljmp
lret
fcoms
adc
inc
and
inc
pushf
aas
sahf
pop
sbb
pop
mov
iret
xor
pop
ret
add
sub
test
sbb
andl
mov
or
jl
lret
hlt
fcompl
jle
xchg
fnstsw
testb
push
cmp
test
inc
mov
or
mov
and
dec
cmp
xlat
xor
int3
pusha
xchg
sub
pop
mov
insb
shlb
into
dec
shll
iret
insb
out
xor
adc
mov
jbe
fmull
in
ret
das
imulb
sub
and
nop
daa
xchg
ret
push
lret
pop
icebp
sub
mov
sbb
sub
imul
fldl
std
add
push
pop
dec
fnstcw
popa
xor
adc
sub
inc
ds
and
adc
pop
mov
dec
xorb
inc
xchg
adc
into
inc
jmp
insb
out
lock
insb
iret
pushf
cmc
es
imul
icebp
mov
mov
call
xor
in
ret
rolb
mov
dec
lds
xchg
cmp
fisubrs
dec
scas
or
pop
lods
xchg
ljmp
jg
and
std
aaa
in
scas
mov
rcll
and
jecxz
enter
lds
decb
lret
cwtl
rclb
subb
xor
leave
call
into
into
imul
scas
xor
xlat
cld
mov
inc
or
push
nop
andb
mov
pop
bound
rcll
push
stos
add
mov
jge
inc
xor
lret
pop
xchg
push
dec
mov
adc
stc
add
mov
je
lahf
fdivrl
mov
mov
dec
out
xchg
adc
mov
xchg
cltd
push
jne
push
inc
scas
test
push
fistps
cmp
aaa
cmp
sub
mov
cli
dec
int3
js
dec
jmp
jnp
lds
popa
mov
fwait
lret
mov
jp
inc
das
int
push
je
pop
and
std
fisttpll
lds
jmp
xor
ror
out
adc
xchg
jmp
and
ret
xchg
sbb
enter
lahf
inc
rolb
mov
das
pop
aad
mov
jns
mov
outsb
hlt
inc
or
out
repnz
lret
fsts
dec
add
aad
out
sbb
cltd
xchg
add
lock
rorb
in
dec
lods
inc
mov
out
xchg
fcmove
aad
rcll
add
xor
sbb
negl
insl
or
cld
roll
nop
push
fs
push
shl
jbe
xchg
lcall
xchg
pop
enter
dec
jbe
add
xchg
jl
les
pop
xlat
jmp
mov
pop
daa
or
and
mov
add
dec
sti
mov
iretw
test
dec
fisubrs
xchg
or
push
xchg
testb
scas
bound
jmp
shrl
add
ds
cmp
scas
xchg
mov
test
rcl
pop
ror
testb
call
cs
pop
test
sarl
fs
clc
es
xchg
andb
sub
jbe
test
pop
cli
outsl
mov
lods
shlb
push
cwtl
sbb
sahf
ljmp
mov
imul
nop
aad
scas
jbe
sub
nop
cld
sbb
xor
adc
iret
pop
add
dec
sbb
pop
rcrb
jp
xchg
movsb
repnz
pop
xor
lcall
stos
dec
and
pop
xor
cwtl
xlat
jge
push
mov
enter
jecxz
push
mov
scas
mov
push
pop
mov
stos
iret
xchg
dec
fidivrs
imul
mov
cmp
xor
fcmovbe
repz
mov
mov
lcall
ret
xchg
xlat
push
xchg
pop
movsb
xchg
dec
or
jmp
scas
pop
dec
ja
shlb
ret
out
and
iret
nop
push
xchg
mov
divl
or
repnz
inc
test
cmp
shrb
cmc
add
out
into
dec
xchg
das
mov
test
rclb
and
jge
sbb
roll
lret
or
popa
jmp
test
pop
and
mov
outsb
sarl
add
jb
jle
push
icebp
scas
ljmp
xchg
jne
test
dec
dec
lret
mov
lods
sti
pop
movsl
nop
cld
stos
dec
sub
jl
xchg
fmuls
mov
sbb
jb
addr16
hlt
cmpsb
iret
lcall
and
cmpsb
pop
shlb
cs
xor
lret
mov
lds
inc
iret
imul
icebp
jno
fcmovu
dec
mov
ljmpw
scas
outsl
xlat
mov
pop
movsb
pop
fcomps
je
fiadds
inc
push
mov
insl
mov
stos
mov
jl
inc
rcrb
je
call
push
xchg
ret
push
add
push
iret
inc
cmp
fiadds
cmovae
gs
out
insb
fadds
iret
xor
inc
lret
push
jl
iret
lcall
loop
cmp
adc
or
shlb
mov
pop
icebp
fsubrl
sar
adc
insl
rcrb
inc
push
jno
out
or
cwtl
and
xor
ret
xchg
das
inc
fimuls
push
or
lahf
mov
sub
outsl
mov
cld
jae
sub
or
sarb
fldt
loop
scas
cltd
out
idiv
pusha
and
sbb
inc
mov
lods
iret
mov
sbb
pushf
les
xchg
sarl
nop
aad
es
lock
add
xor
push
push
mov
pop
jl
mov
cli
scas
fstps
call
mov
inc
in
jno
sub
xor
mov
popa
inc
xor
lds
scas
dec
add
and
xor
pop
iret
repz
jge
stos
xor
xchg
enter
daa
popa
out
aad
shrb
mov
cli
std
jne
push
shrb
jne
call
stos
lods
mov
imul
push
test
cltd
jb
sbbb
shl
mov
mov
into
mov
outsb
mov
roll
xor
sar
inc
jo
daa
xor
ret
pop
lea
outsb
lods
rcrl
fdiv
dec
mov
std
into
jle
jbe
movsl
aas
adc
pop
rclb
cltd
aas
mov
push
pop
lahf
ds
inc
mov
fisttps
xchg
fnstenv
jle
jb
sub
sar
pop
fstl
inc
sub
cs
sarb
cli
mov
sbb
xlat
jl
push
or
negl
pop
iret
mov
and
cwtl
push
mov
or
adc
xor
xor
shlb
jb
xchg
test
popa
test
sub
in
sbb
stos
sti
repz
fcmovnbe
mov
fninit
adc
jbe
ljmp
je
mov
lret
jnp
ja
xchg
sub
gs
dec
sbb
pop
sub
add
outsl
fwait
cmpsb
iret
xor
fchs
aad
xor
or
xchg
nop
lods
mov
mov
fs
push
leave
aad
xchg
popw
mov
mov
imul
sarb
test
lcall
mov
testl
sbb
rolb
mov
pop
pop
out
mov
pop
sub
stc
cwtl
test
imul
cld
push
iret
aaa
inc
insl
dec
je
and
xchg
sarb
int
cs
xor
adc
xchg
dec
arpl
incl
les
iret
xor
fcoms
mov
xchg
inc
sub
push
test
das
or
dec
gs
frstor
mov
push
addb
in
inc
push
hlt
xchg
xor
rcl
ret
pop
xor
inc
iret
or
mov
pop
mov
cli
pop
xchg
xchg
mov
jb
lret
inc
mov
dec
imul
xchg
ret
fidivs
inc
xchg
lcall
sbb
lock
pop
mov
jnp
adc
sarb
mov
ret
pop
sub
test
test
sbb
rorl
push
dec
nop
int
mov
int3
into
or
sub
push
cmp
out
vphadddq
pop
imul
mov
pop
fcmovnu
xchg
lock
and
aad
mov
xor
dec
out
or
inc
xchg
sbb
popf
jno
inc
jmp
cwtl
pop
scas
mov
xor
push
mov
add
mov
jnp
imul
lret
lret
mov
jns
data16
mov
scas
roll
fistl
fdivrl
xlat
inc
mov
sbb
sbb
imul
add
jo
shl
mov
xor
loopne
icebp
mov
jne
addb
inc
int
ret
iret
pop
repnz
lret
push
hlt
stos
into
xchg
loope
sti
mov
out
test
iret
mov
lret
fidivl
jmp
mov
ret
scas
popf
sbb
push
cmpb
mov
inc
imul
loop
rorb
clc
orb
call
out
stos
popf
icebp
xchg
adc
pop
mov
cmpsb
xchg
scas
cmp
loop
inc
scas
rclb
hlt
nop
movsl
shlb
cmp
pop
mov
jecxz
dec
int
inc
inc
mov
repnz
cs
jnp
inc
xchg
dec
mov
cmpsl
cmpsb
pop
cmp
mov
rclb
sbb
fs
mull
add
in
add
test
mov
iret
pop
aam
inc
inc
test
out
pop
mov
movsb
test
stos
sub
adc
fbstp
jb
xchg
popa
xchg
mov
pop
or
leave
add
cmp
int3
sbb
ja
sub
and
and
enter
into
inc
out
dec
nop
rcll
andl
push
mov
jge
sub
xchg
jb
xchg
addr16
bswap
scas
mov
outsb
mov
xchg
das
sbb
push
or
std
aas
gs
stos
pop
scas
sti
insl
cli
not
jns
jb
fwait
mov
push
ljmp
mov
or
popf
or
or
mov
inc
sti
test
fmuls
iret
or
mov
and
mov
fs
sub
je
sub
mov
xchg
mov
ficoms
cmpsb
lcall
mov
xor
enter
cmp
cwtl
shrb
rclb
add
mov
push
inc
lret
dec
test
outsb
pop
popa
xchg
inc
mov
add
scas
mov
mov
or
stc
stos
imul
and
psubusb
sbb
pop
rcl
jl
xchg
in
inc
adc
cmp
mov
lds
cs
jno
mov
mov
lahf
out
iret
sbb
lods
xchg
push
jne
sbb
mov
subb
fstpl
cmp
out
insb
lock
cs
push
ljmp
xor
mov
scas
mov
mov
pop
jne
iret
divl
icebp
lcall
mov
mov
and
adc
mov
sbb
rolb
jae
and
stos
loopne
push
pop
dec
jbe
enter
filds
jo
dec
lea
ds
je
pop
pusha
scas
add
mov
fdivrl
hlt
mov
xchg
stos
dec
mov
lds
xchg
pop
lahf
lcall
add
mov
dec
js
inc
fs
mov
sub
idivl
sub
mov
scas
int
setne
push
push
sub
mov
outsb
xchg
iret
mov
pop
lret
cmpsl
sbb
lret
ss
mov
fidivrs
repz
iret
pop
cmp
jb
roll
stos
scas
in
push
and
bound
dec
mov
shl
xlat
push
aad
scas
stos
mov
lock
pop
aaa
in
or
shlb
std
cmp
xchg
cmp
fnsave
jae
mov
stc
pushl
outsb
mov
push
jb
outsb
jno
iret
cld
lds
cmc
stc
push
loope
outsl
into
cwtl
lea
rclb
sub
push
iret
mov
mov
xchg
shrb
push
and
adc
in
xchg
movsl
jmp
cmp
leave
xor
mov
js
rolb
mov
addb
push
dec
mov
xchg
mov
push
push
sarb
sahf
in
loopne
mov
iret
mov
into
jne
mov
jg
bound
addr16
push
mov
inc
lcall
rorb
dec
fistpll
add
in
adc
xchg
aaa
xchg
ret
insb
pop
fidivrs
dec
ljmp
xchg
mov
xchg
imul
sub
je
cmc
ss
out
adc
sub
inc
jmp
sbb
xor
in
mov
dec
jne
ja
out
mov
ss
xchg
ret
addr16
fiadds
ror
sbb
rcrb
mov
xchg
lods
scas
fcoms
xchg
push
pop
mov
fmuls
push
inc
les
sarb
xchg
dec
adc
ret
scas
pop
cmpl
mov
rclb
ds
inc
sub
cmp
sub
push
out
sub
cmp
movsl
push
sti
cmp
scas
and
xchg
not
mov
lret
push
push
inc
xchg
or
ret
dec
cs
sbb
cmp
shlb
adc
popf
or
dec
addr16
jns
and
dec
jns
test
lret
fldl
nop
idivl
call
filds
jl
or
sub
add
insb
inc
scas
je
push
dec
mov
sub
shr
adc
add
adcl
inc
xchg
xor
sub
movsl
out
mov
lea
mov
lcall
pop
cld
cs
dec
cmp
int
rorb
lods
mov
jecxz
jnp
lcall
jg
scas
aas
mov
scas
mov
adc
clc
frstor
lcall
repz
inc
xchg
xchg
in
repnz
popa
sbb
mov
sbb
xchg
push
sbb
sbb
and
into
push
sbb
sub
roll
test
push
movsb
bound
mov
repz
sar
add
push
jge
into
inc
sbb
cli
lock
xchg
mov
iret
cs
dec
mov
ror
sub
repz
fcoml
aaa
jb
rolb
iret
cmp
pop
xor
inc
ret
push
jle
dec
scas
inc
adc
je
push
or
dec
dec
mov
pop
and
aas
outsl
xchg
pop
stos
scas
das
cmpsb
loop
ret
scas
pop
mov
cmp
xchg
gs
mov
dec
dec
ljmp
addr16
add
aad
sbb
push
xchg
xor
xchg
out
fld
or
mov
iret
insl
adc
pop
inc
out
ljmp
inc
dec
dec
and
scas
lcall
xchg
mov
sbb
dec
add
inc
rcr
mov
mov
sub
nop
mov
stc
xchg
shlb
mov
cmpsb
ds
and
daa
fisubrs
out
fisttps
cmpsb
sti
mov
repz
fsubs
in
mov
lcall
mov
push
iret
sub
orl
aam
or
imul
add
mov
or
repnz
stos
jns
inc
mov
push
pushf
jbe
leave
iret
jmp
mov
mov
or
xchg
dec
jo
cmc
push
mov
lret
icebp
mov
dec
cs
cmpsb
push
loopne
sub
sub
xchg
adc
out
call
shrb
mov
and
push
mov
iret
fldl
xchg
repz
and
push
xor
shl
mov
scas
mov
xor
cmp
dec
iret
mov
fs
xchg
push
pushf
addl
int
loop
xor
or
repnz
shll
repnz
ss
mov
mov
in
mov
push
adc
scas
std
aam
dec
xchg
lret
or
addr16
add
xchg
mov
xor
jecxz
pusha
add
loop
ljmp
shl
mov
arpl
jecxz
icebp
or
cmp
jmp
call
pop
ficoml
sub
xchg
test
pop
and
rorb
icebp
mov
dec
bound
xor
enter
scas
sub
xchg
cmp
lret
cmp
push
jge
sub
xor
cs
inc
lods
lret
adc
sbb
fcoms
in
idivl
jns
shlb
adc
or
je
outsb
push
and
inc
adc
push
sarb
movsl
adc
iret
sbb
xchg
rorl
mov
fdivrl
xchg
jo
mov
subl
and
sbb
inc
xor
xchg
cmp
dec
xchg
es
xchg
adc
out
pop
sahf
arpl
push
mov
pushf
pushf
popf
lds
lock
in
add
jmp
jno
movsl
scas
les
lods
add
mov
mov
daa
iret
dec
or
cmpsl
scas
lock
dec
arpl
sbb
js
inc
fwait
pop
rcl
mov
sub
into
in
dec
cmp
adc
xchg
mov
sbb
imul
mov
or
adc
inc
sbb
inc
iret
movsb
jp
pmaddwd
mov
sahf
hlt
test
fmull
scas
fcomps
mov
popa
sarb
xchg
aaa
cltd
jg
mov
rorb
lock
clc
jo
jmp
sbb
popf
dec
push
popf
cltd
jb
xlat
inc
mov
dec
mov
xchg
rol
xchg
add
out
mov
and
cmp
pusha
rcll
bswap
dec
cmp
hlt
dec
popa
cmp
out
iret
js
add
jmp
outsb
movsb
insl
outsl
xorl
or
and
gs
dec
inc
mov
add
cmc
enter
ja
leave
aas
scas
les
and
pop
loop
push
jge
adc
incl
mov
cmp
ja
pushf
into
mov
into
mov
adc
sub
sbb
or
fmuls
repnz
mov
push
add
or
cmp
add
push
imul
cld
push
lea
push
add
inc
cmpsb
sarl
xchg
xor
adc
cld
scas
jg
stos
jo
pop
addl
mov
xchg
adc
jne
in
cwtl
add
leave
mov
stos
shl
jmp
rcr
into
xor
rcrl
jmp
mov
adc
and
loope
scas
pushf
sbb
fidivs
pop
fwait
pop
andb
nop
mov
mov
ljmp
mov
call
flds
cmp
imul
jg
mov
aad
mov
xchg
fcmovnbe
adcb
pop
add
mov
icebp
scas
pushf
aaa
aam
fildl
push
sub
push
jmp
push
movsb
xchg
mov
aad
jne
or
daa
popa
iret
xor
sbb
xchg
pop
or
pop
scas
cmp
mov
or
fistpl
pop
mov
sub
bound
mov
in
or
dec
subl
insl
xor
xor
into
inc
call
insl
mov
outsl
into
mov
or
movsb
cli
fbstp
sbb
jb
push
notb
cmp
add
jb
loope
mov
jb
out
inc
jge
mov
pushf
dec
lock
inc
mov
in
inc
les
sbb
pusha
dec
mov
cmpsl
mov
push
pusha
xor
lods
ds
fdivs
scas
pop
and
adcb
nop
mov
push
sahf
xchg
sahf
shl
mov
cmp
fnstsw
mov
or
rcr
in
xor
and
xor
popa
pop
arpl
dec
xchg
jmp
mov
mov
mov
ja
sub
fwait
aam
in
mov
in
stc
mov
daa
mov
ljmp
aaa
icebp
pop
inc
pop
iret
mov
jns
jne
inc
cmp
lock
ss
cmc
sub
mull
sbb
int3
mov
mov
cmp
repz
fs
push
jmp
lcall
out
mov
cmp
rcll
inc
daa
mull
cmpsb
xchg
mov
test
push
xlat
mov
and
pop
jge
ret
mov
aad
xor
cs
inc
rcrl
push
mov
outsl
mov
rcrb
xor
clc
sbb
mov
lods
xor
iret
adc
mov
out
in
mov
pushl
sub
sbb
arpl
add
into
sub
int
imul
fdivl
lds
iret
xlat
sub
int3
testl
loope
iret
jne
pop
inc
pop
int
cmp
push
sbb
lea
movaps
xor
sahf
aam
in
popa
mov
pop
xchg
into
or
adc
mov
scas
cltd
mov
adc
jnp
out
aaa
add
scas
int3
and
shlb
ss
lahf
mov
imul
xchg
outsl
lods
mov
adc
or
xchg
fwait
add
jb
out
rcll
pusha
fcoms
test
lret
jnp
pop
fistps
xchg
cltd
scas
pop
push
mov
xchg
mov
jmp
push
scas
jno
mov
rcl
mov
sbbl
cmpsb
inc
int
push
jp
dec
loopne
xchg
xchg
push
iret
ficoml
jns
fistps
rcll
or
push
add
push
scas
xor
shrb
push
cli
mov
shlb
dec
xor
mov
shl
and
jne
mov
fs
xchg
ss
and
imul
xchg
icebp
sahf
arpl
push
push
cmc
pop
jge
pop
daa
mov
je
shlb
insb
repnz
rcrl
xor
lock
mov
addr16
pop
idivl
or
ficoms
lods
sarb
or
mov
sub
rcrb
jns
and
add
daa
sub
aas
adc
fsubrp
out
jne
dec
pop
clc
pop
cmpsb
mov
and
add
push
aad
jmp
int
lcall
and
dec
jae
roll
scas
das
test
mov
sub
or
mov
test
decb
dec
fs
or
or
push
mov
rclb
cmpsb
xlat
ja
inc
and
sub
push
mov
fwait
orb
sbb
jp
ss
sbb
sarl
xor
pop
sbb
into
inc
call
xor
addl
push
les
shrl
sub
cmpsl
in
xchg
int3
sub
inc
std
sbb
scas
add
frstor
cli
cmpsb
cmp
shl
xchg
mov
arpl
js
jecxz
rcl
sub
cmpsl
add
loopne
jmp
outsb
add
jp
xchg
mov
jne
adc
call
movsl
and
in
int3
loop
cmp
sub
mov
xlat
bound
outsl
movnti
cld
mov
dec
into
aaa
iret
inc
jno
jne
in
cmpsl
xchg
sarl
push
and
rorb
inc
push
push
push
adc
loope
shrb
add
lea
add
inc
mov
movsl
leave
xchg
das
and
js
mov
int3
xchg
lret
and
jmp
pusha
xchg
fdivp
in
in
pop
push
pop
push
and
jns
iret
leave
mov
scas
insl
xchg
adc
mov
hlt
push
jae
jg
imul
sti
push
popf
or
xchg
fadds
out
icebp
mov
and
movsb
push
or
rolb
dec
ljmp
iret
je
movsb
xlat
xchg
lods
cwtl
push
mov
dec
mov
into
test
mov
ss
xchg
cmpsb
push
cmp
sahf
sub
add
bound
xchg
xchg
pushf
gs
dec
stos
das
test
dec
xchg
jae
outsb
lret
dec
sub
mov
fwait
scas
jns
cwtl
movsl
xchg
jmp
xor
add
dec
lcall
or
pushf
ret
int
pop
loope
dec
add
jmp
pop
pop
push
roll
fucom
dec
cmp
outsl
jecxz
mov
sub
mov
rcll
mov
das
lock
rcr
shrl
outsb
pop
dec
add
bound
rcll
outsb
pop
ss
iret
pusha
mov
fmuls
in
mov
int
int3
addr16
jno
sbb
ss
hlt
mov
daa
cmp
dec
mov
pop
sti
sahf
inc
mov
xor
mov
out
sbb
push
pop
xchg
dec
xor
mov
and
or
movsl
shlb
cltd
int3
push
jo
out
cwtl
popf
rorb
push
lcall
les
rol
pop
jle
aad
and
iret
mov
test
jl
lcall
inc
adc
movsb
dec
scas
add
xchg
jne
dec
test
adc
mov
loope
sbb
femms
add
clc
int
dec
pop
dec
cmpsb
push
insl
enter
rclb
aaa
loopne
add
sub
inc
jne
iret
int
mov
into
aam
adc
shrb
sahf
gs
iret
xor
xchg
cmp
jp
int
les
xchg
and
pop
mov
push
dec
xchg
xor
xor
movsb
jnp
add
push
jle
imul
imul
scas
dec
fimuls
ret
loop
sbb
in
jp
dec
jmp
out
test
scas
ficoms
cmp
outsb
ficoml
jne
cmc
push
scas
mov
xor
rorl
mov
sti
dec
and
jp
pop
repnz
enter
jmp
orl
loop
ljmp
iret
xor
sub
popf
mov
scas
add
push
mov
inc
and
mov
test
out
mov
or
test
ljmp
add
add
insb
sbb
ret
jge
push
mov
dec
cmp
sbb
inc
lock
das
push
std
hlt
lret
sar
mov
int3
mov
icebp
sarb
ret
dec
stos
or
add
push
ret
push
dec
iret
cmp
sub
add
imul
scas
mov
jp
cmp
stc
push
cltd
adc
test
push
mov
das
std
sub
vfrczsd
iret
add
cmp
repnz
inc
jecxz
iret
inc
lock
inc
jno
mul
xchg
adc
pop
arpl
scas
iret
inc
test
xchg
xchg
int3
iret
cld
in
test
inc
pop
scas
xchg
and
sar
mov
ret
lock
cmc
shl
push
xchg
dec
xchg
xor
pop
popf
jne
iret
mov
je
mov
xchg
jbe
sbb
push
push
push
mov
imul
dec
aad
mov
mov
jno
scas
jp
insb
dec
cmpsb
scas
mov
add
sti
mov
iret
ljmp
pop
xchg
push
enter
test
jno
or
push
mov
in
cmc
lahf
in
lods
cmp
out
scas
lret
dec
sti
into
aam
add
jle
add
cmp
fiaddl
ficoms
aad
ret
jnp
in
sbb
jne
cmc
stos
adc
orb
mov
pop
mov
dec
pop
push
popf
rcll
sahf
sbb
ret
mov
es
das
int3
scas
jg
adc
pop
andb
sbb
xor
stos
lcall
xchg
pop
push
fwait
pop
or
ds
scas
push
cltd
les
stos
ficomps
iret
xor
pop
jbe
xchg
push
mov
repnz
xlat
repz
jle
lods
xchg
adc
out
cmpsl
enter
lret
mov
lods
shrb
fmul
outsl
dec
push
xchg
iret
call
add
loop
mov
out
xchg
push
lcall
out
sahf
cmp
fimuls
push
adc
or
mov
popf
mov
pop
shrl
bound
pop
mov
iret
xchg
lods
add
or
cmpsb
and
or
dec
push
gs
xlat
inc
mov
mov
jmp
lret
inc
dec
or
and
pop
fbld
lret
push
mov
dec
lahf
iret
cmp
in
out
xor
inc
sbb
sub
ret
popf
xor
xchg
jnp
dec
jne
addr16
stos
push
int3
scas
sub
shll
xchg
popa
mov
mov
cmpsl
out
cmp
fldenv
pushf
callw
es
ficomps
add
xchg
jle
xchg
xor
mov
scas
int3
inc
push
mov
dec
or
dec
in
adc
punpcklbw
jge
push
daa
xlat
sub
dec
jne
xchg
aaa
in
and
das
push
jecxz
icebp
push
or
and
rcll
outsl
cwtl
cltd
ret
hlt
lods
lcall
iret
aam
subb
mov
xchg
mov
cmpsb
or
ja
mov
gs
xor
imul
mulb
cs
or
or
jecxz
shlb
xor
or
loopne
mov
or
push
lcall
shlb
xchg
jno
pop
shlb
lock
mov
call
rcrl
xchg
das
scas
or
adcb
jo
daa
adc
lahf
popa
pop
push
dec
dec
mov
mov
out
mov
or
test
icebp
ret
inc
pop
sub
xchg
into
push
mov
popa
mov
iret
xchg
jle
sub
leave
adc
inc
psubw
adc
lods
add
std
xchg
mov
das
jno
xchg
xchg
ret
adc
sub
sahf
std
nop
xchg
cmpsl
test
iret
add
repz
rcl
aad
pop
push
pmaxub
test
and
stos
lock
mov
dec
inc
mov
dec
cmp
sbb
pushf
or
rcr
adc
and
dec
dec
in
arpl
es
scas
gs
aam
or
scas
lret
shll
xor
jecxz
in
jge
xchg
dec
ljmp
sbb
stos
rcrb
in
fs
and
mov
loop
rclb
and
push
loopne
aam
cltd
or
scas
ja
pusha
jge
cmp
sbb
dec
insb
ret
int3
push
sahf
repz
or
xchg
push
cmpsb
test
jae
ret
dec
scas
repnz
lods
rclb
lock
mov
mov
inc
xchg
fwait
push
mov
sbb
into
iret
dec
sub
arpl
aaa
popf
xchg
xchg
popf
sub
push
or
js
cmp
xchg
into
xchg
pop
mov
cmc
mov
inc
xchg
icebp
xlat
jge
push
add
rolb
in
rcrl
mov
pop
xchg
mov
shrb
xor
pop
add
scas
aam
mov
push
xchg
dec
test
and
iret
jecxz
jne
enter
xchg
cld
mov
cmpsb
mov
fidivrs
sub
cmp
rcrb
faddl
rcl
jmp
add
mov
xchg
sarb
cmp
sahf
shrb
fadd
lahf
jp
shll
aam
movsb
dec
pusha
imul
nop
dec
inc
xchg
imul
adc
orb
push
int
pusha
cmc
outsl
fidivrs
pop
scas
int3
test
xchg
es
cmpsl
cwtl
adc
mov
jne
arpl
push
cld
push
cmp
dec
inc
je
int3
shlb
xchg
rorb
adc
fldcw
out
jp
hlt
push
add
rolb
mov
rclb
lea
subl
or
pop
xlat
sub
push
ret
xchg
lea
xorb
pop
sub
sub
rorb
movb
inc
hlt
gs
adcb
adc
push
cld
movsb
out
cmp
adcb
push
arpl
ret
out
andl
xor
mov
inc
xchg
xchg
fcoml
stos
cmpsb
enter
lret
jp
jmp
push
push
aaa
incl
mov
inc
adc
sbb
call
int
push
fmulp
mov
leave
scas
sbb
inc
repz
xchg
sub
xchg
out
adc
into
xor
mov
adcl
mov
cltd
and
arpl
aas
mov
lods
jg
mov
lcall
inc
or
jecxz
cli
mov
fnstcw
push
cmp
out
test
mov
xchg
rorb
ret
inc
mov
scas
push
or
cld
shlb
gs
aam
and
in
cwtl
mov
xchg
inc
imul
xchg
pop
sbb
stos
bound
push
add
lret
out
xchg
fcom
hlt
push
push
fs
mov
or
aam
xchg
push
or
hlt
ror
aam
aas
dec
fbstp
dec
lret
dec
pop
jg
mov
dec
and
jecxz
orb
outsb
iret
jo
xor
dec
es
xchg
aam
movsl
inc
call
xchg
cmp
hlt
bound
xchg
mov
nop
xchg
add
push
das
nop
sub
adc
jbe
fldl
outsb
push
and
mov
adc
bnd
int
mov
xchg
pop
bound
jns
mov
loope
scas
clc
sub
js
sub
das
in
std
adc
jb
xor
jmp
adc
push
jnp
imul
ljmp
xor
int
mov
xchg
xlat
out
push
dec
jl
xor
arpl
cmp
mov
xlat
inc
test
popf
popf
scas
xorb
shrb
outsb
pop
fisttpll
mov
pop
push
scas
xor
jg
push
sub
lahf
jg
test
fbld
addr16
icebp
into
lahf
mov
or
cltd
add
adc
in
stc
sub
adc
les
sbb
rclb
inc
dec
jecxz
dec
dec
mov
or
jae
mov
outsl
inc
out
repnz
in
adc
xchg
cld
or
shll
aam
stos
cmp
iret
mov
pop
test
movsb
mov
fwait
scas
add
dec
pop
shlb
arpl
popf
out
into
dec
and
add
lahf
xor
add
rcr
mov
jns
and
push
lret
jb
dec
comiss
pop
xchg
inc
jb
ffree
lcall
int3
pop
fidivs
pop
leave
mov
addr16
push
or
dec
popa
inc
xlat
pop
cmpl
adc
mov
sahf
scas
shrb
shll
es
popa
daa
int3
pop
enter
clc
mov
lret
mov
cmc
sbb
jle
rorl
dec
lret
pusha
jns
outsl
rcl
mov
jmp
out
xchg
xlat
popa
ficomps
imul
xchg
push
add
mov
add
lret
scas
mul
cs
clc
xchg
adc
sub
scas
cmp
ret
xchg
into
testl
ss
sub
scas
inc
pushl
push
mov
dec
dec
scas
pop
xchg
shrl
movsb
jecxz
je
js
addr16
ljmp
fimuls
ja
inc
loop
mov
jo
mov
addr16
or
int
sub
mov
dec
mov
pop
pop
aam
je
pop
sub
shl
xchg
push
xchg
adc
pop
pop
push
inc
ret
testl
lods
add
ljmp
lods
prefetch
pop
scas
mov
inc
xchg
or
jmp
mov
xchg
or
push
shll
mov
rolb
mov
mov
inc
mov
xchg
test
mov
inc
xlat
outsb
in
push
scas
fcompl
std
xor
push
push
xchg
dec
push
in
scas
pop
fwait
cmpsl
hlt
shlb
jae
or
push
orb
xor
mov
xchg
cmp
pop
cmp
data16
dec
inc
adc
dec
xchg
jp
rcr
aas
sub
es
inc
jbe
outsl
data16
gs
sub
pop
mov
icebp
into
sbb
pop
sbb
shll
hlt
add
iret
adc
dec
bound
gs
into
andb
lret
rcrl
lahf
and
in
lea
frstor
out
dec
or
cmpsl
xlat
ss
pop
das
pop
shll
mov
mov
xor
scas
jo
out
in
cltd
shr
xchg
xchg
pop
int
test
xor
bound
push
fadd
shll
int3
mov
aad
stos
pushl
mov
dec
fnstcw
mov
and
inc
and
mov
xchg
inc
gs
jno
jecxz
daa
add
sbb
and
sarb
subl
imul
es
iret
inc
fmul
pop
cmp
or
xchg
inc
addr16
pop
jmp
push
fildll
sub
mov
scas
lea
xlat
xor
cwtl
mov
shll
mov
lret
add
shlb
dec
ds
lahf
rcr
cmc
rorl
repz
stos
jne
mov
xchg
sti
inc
push
int3
pop
mov
popf
add
mov
test
cs
xchg
addr16
add
and
inc
gs
shlb
enter
dec
sahf
iret
xchg
xor
into
imul
sbb
pop
push
pushf
sub
sub
jge
and
inc
lcall
jle
xlat
adc
mov
inc
xor
lds
shlb
mov
ret
push
adc
pop
scas
mov
leave
jl
fwait
cmpb
xor
aad
shlb
andl
popf
pop
fs
xchg
xlat
sub
call
pop
push
xor
cmp
inc
jp
push
rclb
jno
lcall
inc
sub
stos
mov
les
push
sahf
jo
scas
pop
and
sub
mov
cwtl
xor
in
sahf
iret
xchg
data16
adc
xchg
fnsave
out
push
and
fwait
mov
and
shll
movhlps
jg
ss
mov
es
pop
jns
cltd
fdivrl
fisubl
adc
out
cmp
xlat
inc
inc
push
ljmp
jle
daa
mov
mov
push
sbb
mov
shrb
push
inc
rcl
in
mov
inc
cmp
repnz
mov
stc
into
push
sub
jg
jge
xchg
adc
push
rcrb
in
lret
and
mov
dec
scas
xor
mov
dec
cmp
scas
xchg
inc
enter
xchg
sub
adc
nop
jb
test
xchg
add
push
es
icebp
and
scas
mov
pop
xchg
into
fimull
lret
lds
jmp
pop
xchg
add
dec
sbb
cmp
pushf
cmp
cld
in
cs
sbb
adc
inc
cwtl
xchg
mov
or
cli
stos
pop
or
rolb
ss
inc
in
scas
mov
sbb
pop
xlat
cwtl
out
pop
test
outsl
push
jge
dec
js
das
jmp
inc
rcl
jecxz
or
jl
xor
lods
loope
push
and
cmpb
lock
andl
notb
sbb
cmc
iret
xchg
lcall
outsb
adc
sbb
insb
xchg
dec
jo
jnp
push
push
stos
mov
scas
sbbb
shr
je
inc
cltd
jae
or
xor
insl
or
adc
mov
arpl
adc
jecxz
iret
or
int
xchg
adc
mov
add
jg
fs
xor
scas
inc
push
and
adc
or
cmc
pop
andb
add
dec
bound
pop
das
add
rcrl
repz
inc
ja
or
push
mov
sarb
repnz
rorl
xor
and
xchg
sti
addr16
mov
add
cwtl
pushf
ficoms
mov
dec
dec
or
test
ss
fdivrp
mov
adc
test
out
xor
push
int
push
mov
cld
cmc
jbe
pop
test
mov
adc
std
jl
imulb
push
xchg
or
mov
scas
sbb
ret
mov
mov
aad
mov
pushf
mov
sbb
scas
cli
je
std
or
mov
xor
incl
inc
int
or
adc
mov
xchg
aaa
or
pop
dec
notb
add
inc
ds
orb
aam
mov
aam
stc
cmpsl
lret
cmc
popf
mov
sbb
mov
jbe
or
jle
add
sbb
scas
mov
pushf
adc
out
int
in
in
test
adc
push
jae
or
jno
rolb
add
clc
scas
aad
jb
rcrb
out
dec
iret
ljmp
push
cltd
lds
lods
jo
and
jo
insb
ss
jne
adc
jl
js
sbb
aad
jge
adc
stos
mov
jle
adc
cmp
adc
sbb
mov
push
mov
loopne
movsb
add
push
test
into
cld
add
fs
xchg
xchg
lret
jne
jns
js
add
adc
mov
scas
add
mov
int3
nop
ljmp
lret
sub
mov
dec
in
or
mulb
mov
lds
lods
cmp
dec
and
in
fsts
xor
mov
rcl
or
fsubs
lret
sub
add
xchg
adc
pop
cmp
pop
shl
addr16
mov
popa
lret
sub
pop
es
clc
gs
into
mov
pop
mov
int3
mov
pop
add
scas
cmp
adc
mov
scas
insl
fisubs
fsub
sub
lods
push
xchg
push
pop
add
inc
xor
in
out
leave
sarb
jnp
mov
rcll
mov
fldenv
xor
mov
int3
sbb
popf
or
int
mov
push
pop
inc
mov
ret
bound
jecxz
xchg
sahf
or
push
push
xor
test
pop
jg
mov
cmpsb
sbb
push
xchg
mov
stos
test
ret
cmp
ds
into
shll
jg
sub
fnstcw
movsl
mov
adc
cmp
pop
shll
sub
mov
jg
mov
mov
shll
xchg
fbstp
sub
iret
popa
xchg
and
xchg
clc
gs
addb
xchg
gs
icebp
mov
ficompl
mov
pop
call
popf
mov
ljmp
repnz
sub
jl
movsl
leave
pusha
into
fcomp
xor
jb
shl
daa
jle
mov
push
repz
sbb
pop
mov
int
adc
adc
xor
ret
ds
loopne
jg
lock
gs
ja
cmp
mov
and
into
iret
ficomps
cmp
inc
iret
js
cld
shr
and
xor
out
xchg
lds
and
xor
inc
fidivl
mov
pop
lock
push
cmp
scas
sbb
and
xlat
xchg
dec
fisttpll
add
dec
push
jns
shlb
nop
sub
test
stc
into
call
fldl
cmp
rclb
pop
mov
shrb
std
add
loop
cltd
jbe
adc
adc
mov
loopne
xchg
or
lock
mov
xchg
test
jp
sarl
add
push
lret
stos
push
stos
test
les
mov
adc
rcrb
add
push
xlat
callw
dec
into
adc
lods
jo
in
movaps
arpl
push
add
inc
and
add
out
shl
sub
inc
sub
mov
xchg
lds
pop
jb
xchg
inc
sahf
cmp
shrb
jecxz
xchg
ret
xor
cmp
sub
sub
inc
xchg
xchg
add
sbb
ss
mov
fwait
dec
and
aas
rcrl
xchg
or
inc
jg
outsb
rcl
out
jge
jae
jns
das
mov
adcb
add
sub
pop
push
push
les
fnstsw
imul
inc
and
jge
sarb
fidivl
iret
outsb
shrb
mov
and
scas
loop
data16
sar
dec
into
push
outsb
dec
ror
jae
or
mov
sub
les
scas
xchg
fisttps
mov
enter
mov
inc
in
lcall
jns
or
and
scas
cmp
stos
mov
mov
scas
stos
ss
insl
jp
sub
push
lods
jns
mov
push
cmovle
mov
inc
push
inc
test
stos
mov
cmpsl
loopne
ja
or
in
jecxz
xchg
and
pop
xchg
jnp
inc
shll
sub
adc
add
movsl
cmc
pop
xchg
add
lock
mov
in
jo
push
int3
jo
outsb
xchg
clc
lcall
ret
push
scas
push
call
cmp
mov
inc
mov
hlt
vmulsd
arpl
push
cwtl
and
adc
mov
call
test
xlat
stc
xchg
outsb
or
xor
sbb
or
aas
xor
nop
ret
mov
rcl
addl
xchg
iret
dec
out
and
mov
jecxz
xor
gs
lods
fnop
shrb
and
mov
cmc
add
xor
ror
loop
aad
je
mov
cmp
iret
adc
cwtl
imul
aaa
shlb
push
cmp
pop
lret
bnd
vmwrite
ret
test
push
inc
mov
pop
xchg
and
xor
push
xchg
clc
lea
popa
rolb
mov
iret
xchg
dec
sti
adc
jg
pop
mov
cli
rcrb
scas
lcall
fisttpll
dec
mov
fs
mov
jne
shlb
sar
mov
or
or
fdivl
and
das
mov
jnp
aad
push
xchg
lds
repz
mov
scas
cwtl
cmp
rclb
adcb
pop
leave
iret
jmp
xor
ficoms
dec
lods
js
mov
aad
daa
adc
mov
test
sub
cmpsb
iret
daa
dec
jbe
leave
cmp
add
fcmovnbe
mov
jb
push
les
adc
int3
fstl
fs
jnp
lds
cld
pop
iret
xlat
sbbl
inc
shlb
out
sbb
repz
cmp
iret
in
push
jg
push
jae
push
pop
rclb
push
iret
sub
ret
mov
xchg
and
sub
cmp
enter
or
push
das
cmp
jns
mov
lret
out
into
jo
dec
in
jmp
loop
dec
iret
cmc
pop
add
aad
fcmovbe
sub
jge
cltd
stc
dec
jb
shrb
pop
mov
mov
mov
iret
pushf
dec
test
iret
sub
sbb
add
bound
pop
outsl
cs
dec
aad
lock
outsl
sbb
inc
push
xchg
outsb
and
add
loop
movsl
scas
ret
test
aas
adc
out
pop
and
add
scas
lock
jno
shlb
outsl
adc
leave
sub
mov
test
inc
or
inc
lock
dec
iret
cmp
bound
lret
aaa
and
es
scas
subl
out
iret
adc
sub
shll
xchg
hlt
push
jb
iret
iret
daa
pop
cltd
jle
stc
outsb
jp
call
mov
scas
mov
addr16
popa
ret
push
nop
fdivr
test
out
cmp
xor
shl
mov
cwtl
aas
mov
xchg
mov
push
xlat
mov
mov
cmp
adc
int
inc
mov
add
mov
leave
pushf
out
scas
xchg
add
scas
mov
pop
dec
je
bound
sti
test
mov
cs
sbb
push
iret
aas
inc
pop
data16
out
xchg
test
es
aaa
lahf
jae
in
outsb
inc
mov
dec
and
dec
icebp
les
xchg
mov
aaa
fisubrs
cmp
mov
jbe
mov
pop
pusha
and
test
sub
mov
pop
in
push
fcoms
popf
pop
std
mov
repnz
popa
adc
fisubrs
pop
enter
dec
dec
scas
pop
sub
popf
inc
xchg
sahf
lret
add
adc
stos
scas
xor
or
push
xor
bound
push
and
and
mov
into
pushf
or
push
ss
fsts
rcrl
jb
fwait
add
jecxz
mov
stos
punpckhbw
dec
aad
in
mov
adc
pop
enter
out
sarl
xor
mov
ljmp
cmp
sbb
movb
cmp
adc
out
rorb
push
sub
nop
test
imul
lds
sarb
notb
pop
adc
jnp
and
icebp
and
shl
sti
sub
rcr
lock
pusha
mov
mov
fidivl
sub
js
dec
dec
and
iret
or
test
out
sub
enter
cmp
mov
mov
xor
iret
pop
push
lahf
ret
dec
fistl
cmpsb
sub
fstl
lret
in
outsl
lds
jo
pop
not
inc
mov
dec
mov
mov
js
xchg
das
jmp
scas
cltd
dec
shl
mov
xlat
scas
pop
xchg
pop
cmpsb
xor
dec
cmp
jb
scas
aam
inc
imul
scas
xor
jbe
and
mov
mov
cmp
lock
addr16
xor
xor
mov
add
pcmpeqw
cs
dec
les
movsl
scas
adc
mov
add
out
xor
sbb
sub
mov
icebp
iret
xlat
and
add
lahf
ljmp
ds
dec
cwtl
sub
ror
xchg
pop
dec
add
pop
jbe
dec
cmpsl
push
iret
sahf
loop
push
inc
sub
lock
mov
sbb
xchg
bnd
or
out
cmp
lods
xchg
jbe
lods
fcomi
ret
rcrb
fistpll
aam
add
divl
sub
xchg
inc
fists
xchg
pop
icebp
fdivs
std
add
cmp
adc
js
cmp
lret
push
scas
add
test
gs
in
fldcw
rclb
cld
lods
out
lret
jbe
jae
test
insb
push
sub
aas
xor
sub
inc
in
out
mov
stc
cmp
mov
iret
mov
add
gs
jmp
xor
inc
mov
adc
mov
iret
cltd
vmwrite
shll
adc
shl
dec
int
subb
test
daa
iret
daa
pop
repz
shrb
cmp
repnz
adc
ja
scas
aas
pop
cmp
push
mov
test
pusha
insb
imulb
in
cltd
stos
mov
aas
shr
cmp
pop
xchg
xor
xlat
pop
sub
fcomps
pushf
lret
in
mov
rorb
pop
inc
fmuls
or
pop
gs
icebp
mov
inc
jecxz
aad
or
dec
dec
scas
xchg
jno
xor
and
pop
add
xchg
out
sbb
call
jne
adc
repnz
int
sarb
and
xor
ret
mov
jl
iret
sbb
outsl
xchg
in
cmp
lret
daa
mov
mov
movsb
xchg
mov
rcr
dec
push
cmpsl
push
xchg
std
les
xchg
mov
shlb
pop
movaps
imul
cli
scas
lahf
or
rol
xor
jl
daa
int
push
iret
mov
in
push
mov
push
icebp
lea
pop
lods
cmp
adc
pop
adc
sarb
incb
lea
int3
sub
in
or
in
jg
dec
jae
scas
int3
adc
cltd
inc
lods
cmp
mov
jns
movsb
dec
mov
xchg
push
decb
iret
mov
cmc
push
xchg
test
adc
lret
inc
scas
loope
push
cmp
mov
pop
decb
mov
call
jb
popf
and
xchg
fmul
xchg
jmp
mov
scas
fnstenv
dec
shll
and
adc
mov
sub
or
ja
in
mov
stos
lcall
scas
out
gs
cmp
cmc
data16
mov
iret
bound
push
adc
add
div
xchg
in
scas
push
inc
pusha
cli
adc
add
mov
int
out
cwtl
and
scas
fcompl
xchg
jb
sbb
fstl
add
add
xchg
mov
push
cmp
push
mov
fldenv
idivb
bound
rol
xchg
pop
orl
pop
fdivrp
enter
add
mov
pop
repz
scas
fs
imul
in
add
das
push
mov
fsubrs
lret
icebp
js
and
insb
jnp
es
cmp
scas
mov
mov
arpl
stos
jle
cwtl
iret
mov
rcr
out
sub
dec
xchg
pcmpgtb
fisubrl
sysret
out
sub
pop
nop
xor
aad
rcll
and
xchg
popa
mov
jb
iret
xchg
dec
dec
lods
pop
stc
cwtl
fildll
xchg
insb
xor
cltd
ret
jns
mov
xchg
sbb
imul
loope
lret
out
inc
mov
and
mov
mov
out
loopne
or
sar
push
jmp
repz
inc
inc
xor
xor
mov
test
xchg
bnd
cmpsb
adc
jns
sbb
std
scas
test
lret
dec
jae
mov
iret
jle
and
ds
rcll
or
adc
xchg
mov
int
xor
jg
xor
sahf
adc
scas
xchg
fwait
jle
pop
and
out
or
js,pt
nop
and
in
dec
lahf
enter
jns
fcmove
lock
cmpsl
out
push
in
xchg
xor
repz
add
push
push
mov
adc
mov
mov
mov
aam
xchg
jp
push
into
add
mov
je
push
xchg
xchg
xchg
leave
shlb
cs
fistps
in
add
xor
push
sub
call
sub
out
or
scas
aam
scas
enter
mov
inc
push
inc
jns
dec
cmp
mull
ret
in
push
test
in
mov
mov
scas
xor
inc
rol
mov
mov
mov
and
mov
push
jns
mov
jns
fiaddl
mov
xor
mov
inc
mov
popa
in
pop
push
rorl
cmp
cld
and
lea
jp,pn
xchg
push
shrl
shl
pop
call
cwtl
iret
xor
cmc
xor
lods
rorb
xchg
push
xchg
pop
pop
jne
sub
xchg
lahf
mov
rcll
fmul
dec
adcb
lret
xchg
mov
insb
out
data16
rorb
out
adc
lcall
push
or
lock
and
mov
xchg
test
scas
test
inc
add
lock
and
push
xchg
mov
mov
push
sub
sbb
xor
ss
inc
nop
in
or
rorb
sbb
shrl
cmpsb
ss
cmp
xchg
mov
and
jmp
pop
mov
jns
shrb
cli
outsb
xlat
into
mov
rclb
mov
dec
cld
ret
scas
mov
ficomps
test
sub
dec
in
jmp
lcall
iret
adc
mov
xchg
jge
out
fld
add
pop
iret
dec
mov
js
fcoms
xchg
fsubrp
cmp
aam
daa
sbb
shrb
pop
add
pop
jbe
jg
push
pop
ror
rcl
sub
popa
add
inc
fdivs
rorb
ret
outsb
push
or
xchg
fidivs
fcom
mov
dec
add
add
xchg
jecxz
in
dec
mov
test
add
cmp
and
xor
jmp
cmpsl
into
call
das
add
subl
mov
sbb
or
loope
mov
mov
mov
push
jecxz
js
mov
push
fwait
cli
xchg
daa
push
std
clc
mov
mov
ja
aam
xchg
sub
add
xor
ja
mov
add
dec
sbb
pop
cs
cmp
fsts
addr16
mov
aas
and
xchg
daa
int3
fwait
mov
pop
scas
jge
sbb
rorl
xor
iret
push
ja
decl
out
push
mov
fnstcw
pop
popf
dec
fsin
aad
pop
xlat
in
dec
scas
testb
jg
jl
int
and
pop
sbb
lds
xor
repz
fisubl
xchg
sti
sbb
and
mov
push
and
mov
xor
push
push
ja
pop
sbb
out
xchg
iret
push
nop
lcall
sub
outsl
xchg
push
nop
inc
in
mov
jmp
jbe
stc
dec
shlb
xor
test
cs
lea
xlat
fidivs
popa
or
or
lock
out
aad
sub
pop
xor
mov
test
xchg
stc
shr
jp
out
out
icebp
lcall
pushf
in
leave
xor
divb
imul
push
mov
xor
cli
dec
js
xchg
mov
push
insl
mov
mov
xor
fists
in
xor
inc
repnz
sub
xchg
and
and
in
inc
iret
out
dec
rolb
or
loopne
mov
cs
xlat
push
scas
cltd
jle
dec
adc
iret
fcomi
into
sbb
scas
dec
sub
out
cmp
xlat
cmp
movsl
dec
in
add
jg
jbe
mov
jmp
inc
push
jge
rclb
mov
loopne
clc
cmp
or
xchg
cmpsl
fcoms
fmull
xchg
xor
mov
into
or
lret
test
mov
aaa
fcomip
fcomps
addr16
dec
sub
inc
insl
movsw
les
or
scas
add
fcom
fmul
js
test
dec
iret
pop
stos
ror
outsb
movsb
push
xor
dec
lods
mov
jmp
sahf
mov
je
out
jg
mov
xor
mov
or
mov
jno
pop
push
xor
sar
cmp
mov
jo
jecxz
cs
jo
rclb
out
or
iret
lret
xor
dec
inc
add
mov
add
jne
adc
cmp
scas
jns
or
rcrb
mov
add
ud0
adc
leave
pushf
mov
test
mov
mov
cwtl
cmp
scas
jo
push
inc
pusha
push
xchg
cltd
and
subl
cs
arpl
mov
loop
xor
lcall
scas
push
popa
jns
shlb
cltd
enter
mov
push
pop
lret
sub
add
mov
scas
lods
insb
iret
call
in
cmc
cmp
scas
clc
jp
adc
rolb
mov
push
xchg
lahf
std
add
hlt
lcall
daa
cli
test
ret
stos
push
adc
enter
ja
jmp
add
mov
mov
jle
ss
or
ss
js
scas
xchg
ljmp
xchg
subl
mov
pop
or
push
sets
dec
iret
mov
rcrl
pop
cmp
lcall
jmp
pop
lods
jecxz
dec
jns
lods
mov
scas
int
dec
test
jo
pop
daa
pop
inc
scas
mov
in
cli
dec
fimuls
inc
sbb
pop
hlt
shlb
mov
inc
pop
mov
mov
adc
rorb
cli
push
adc
insb
rorb
sbb
rcl
jmp
ljmp
mov
mov
jge
aam
push
inc
stos
mov
mov
jns
fstp
or
dec
mov
pop
dec
sbb
mov
pop
adc
insb
or
lret
push
sub
mov
pop
dec
or
push
iret
arpl
add
iret
daa
jbe
inc
icebp
in
adc
into
fimuls
movsb
jmp
dec
je
mov
insl
xchg
pop
repz
loope
add
adc
stos
xchg
xchg
jb
lea
jne
and
add
or
mov
mov
pop
sbb
fs
addl
jl
cli
enter
rcrl
jae
sub
loop
clc
into
pop
arpl
jge
cmp
int
std
push
or
cmp
loope
divl
scas
and
pop
sbb
pop
xor
dec
dec
inc
xor
rcrb
inc
jl
adc
push
lea
in
aam
out
xor
sub
hlt
popa
xchg
out
jne
mov
sbb
adc
mov
xchg
jmp
sbb
mov
iret
negl
inc
ss
push
iret
out
inc
outsl
add
cs
scas
repz
outsl
cwtl
dec
xor
jle
mov
lods
adc
test
fcmove
push
jne
pop
mov
daa
xchg
fcomps
mov
pop
inc
into
loop
or
shll
lea
pusha
push
mov
xchg
xchg
pop
xchg
mov
inc
pop
gs
andb
xlat
mov
dec
outsb
adc
aad
cmp
out
int3
int3
xchg
stc
dec
outsb
mov
sbb
hlt
lret
in
xchg
ret
fistps
in
scas
insb
cld
push
dec
shlb
scas
decb
pusha
sbb
adc
sbb
dec
adcb
adc
adc
push
cmp
out
jmp
daa
outsb
shll
and
inc
cmp
sbb
arpl
rorl
stos
and
inc
add
jecxz
loope
jg
mov
mov
xchg
fistpl
call
jns
aam
fs
cmpsb
das
push
pop
and
jmp
lock
rorb
data16
les
pop
int3
inc
subb
icebp
or
and
cwtl
jle
iret
adcl
cmp
and
rorb
dec
cld
mov
mov
imul
lock
dec
adc
dec
dec
and
js
insl
pop
shlb
das
fimull
rcrb
cmp
out
xor
xor
sarb
jbe
imul
in
sub
imul
or
push
mov
push
push
push
and
ja
fnstcw
div
daa
and
arpl
mov
dec
ffree
outsb
scas
pop
sarl
push
sarb
popf
mov
popa
iret
push
jne
out
out
dec
in
nop
mov
adc
push
sarl
aas
inc
dec
in
insl
jnp
stos
mov
rorb
outsl
mov
das
scas
das
adc
ret
inc
add
jb
push
pop
popf
xchg
iret
adc
and
push
xchg
xor
xor
adc
xor
loop
rcrl
push
mov
and
bound
xor
test
pop
mov
push
and
fbld
push
ret
xorb
add
push
or
push
jnp
cmpsl
adc
rcr
sbb
xchg
xor
ret
bound
imul
mov
inc
popw
mov
adc
mov
std
xchg
xchg
cmc
jo
bound
xchg
xchg
inc
faddl
test
push
ljmp
mov
test
xchg
xchg
inc
nop
push
mov
inc
scas
and
adc
repz
inc
pop
iret
and
les
xchg
gs
dec
outsl
cmp
inc
pop
xchg
cli
add
fstpl
adcb
scas
outsl
push
sub
and
ja
dec
sbb
cmp
adc
loop
fidivs
test
data16
loopne
mov
mov
or
scas
xchg
nop
mov
mov
mov
and
sbb
adc
jle
xchg
jle
addr16
aad
jecxz
dec
cmp
test
es
sub
pop
mov
mov
mov
rolb
jbe
movsl
hlt
loope
dec
iret
xor
ljmp
cltd
shlb
fisubs
add
push
in
cmp
aas
test
mov
lds
pop
mov
lods
out
add
aam
mov
inc
sbbl
dec
mov
sub
ljmp
sbb
sti
cmp
outsl
pop
gs
xor
sub
push
and
add
mov
or
push
cs
int
lock
pop
scas
js
mov
shlb
or
jns
iret
outsl
mov
mov
lret
jge
sub
xor
rol
jb
and
scas
sarl
imul
in
test
dec
leave
inc
or
or
mov
shlb
popa
adc
inc
push
xlat
pop
imul
jg
sbb
push
jbe
pcmpgtd
fnstenv
jmp
jo
mov
lret
mov
pop
sbb
out
loope
mov
adc
or
ret
xchg
imul
rolb
jp
push
inc
js
aas
iret
mov
es
pop
mov
sbb
xchg
adc
adc
push
fbstp
loopne
sub
jae
push
mov
add
mov
dec
xchg
enter
xchg
nop
outsl
sti
or
packsswb
push
jmp
pushf
aaa
sbb
xchg
int
inc
xchg
xor
cmp
fsts
adc
cmp
xchg
jp
rorl
stos
ss
rcll
stc
movsb
xchg
push
xchg
lret
jg
xor
cmp
movsb
pop
jb
shrb
ss
inc
mov
stos
iret
pop
adc
pop
popa
sub
mov
cmp
cmpsb
push
add
and
lcall
into
jecxz
push
lods
shl
in
xchg
jb
xchg
mov
out
sbb
hlt
jbe
push
mov
sbb
mov
lret
lret
push
das
pusha
enter
or
scas
add
rclb
cli
into
test
jle
jg
shlb
xchg
push
dec
and
jo
mov
popa
scas
jo
insb
adc
jl
sbb
push
sti
in
scas
dec
sbb
and
add
rclb
gs
or
decl
lret
xchg
jae
scas
xor
in
adc
push
xorb
ficoml
sub
xchg
inc
shlb
xlat
jno
imul
jae
scas
cmp
ja
shl
insb
push
xor
cwtl
dec
inc
sbb
adc
cwtl
xchg
pop
sbb
add
mov
add
mov
sar
dec
cmp
lahf
dec
and
data16
dec
pop
inc
cwtl
jl
rol
jb
sub
out
out
iret
popf
icebp
push
jo
insb
popa
mov
mov
xchg
call
and
fisubl
rorl
lret
mov
jp
jbe
gs
outsb
fistpll
mov
xchg
push
xchg
mov
and
dec
push
or
test
lahf
mov
and
fmul
ds
mov
icebp
add
sarb
test
adc
iret
fnsave
popf
push
mov
dec
dec
es
xlat
dec
xchg
mov
adc
xchg
xchg
push
je
jmp
iret
jns
or
mov
mov
cmc
cmp
mov
shr
push
add
fucom
inc
xchg
mov
mov
xchg
cmp
sbb
mov
adc
aas
mov
xor
shrb
sahf
xor
push
into
mov
pop
std
inc
mov
iret
mov
pushf
aad
cwtl
cld
movsb
cmp
push
pop
adc
xor
xchg
xchg
hlt
ret
pushf
sbb
push
xor
stos
scas
idivl
xchg
in
mov
ljmp
jb
cmp
mov
test
std
push
lcall
loope
iret
pusha
cmp
mov
shlb
sbb
xor
and
adc
inc
and
and
fcmovbe
cmpsl
push
addr16
push
es
stos
push
loopne
mov
cmpsl
imul
mov
cli
test
and
cs
dec
out
jno
or
xchg
loopne
stos
mov
hlt
sbb
loop
dec
addr16
or
fwait
pop
scas
jo
rcl
std
stos
mov
cmp
rorl
int
mov
xchg
xchg
xor
ljmp
and
inc
movb
sbb
rcl
add
inc
jb
outsb
mov
rcll
sti
jns
jne
aas
scas
ljmp
out
aaa
notl
fisubs
lods
mov
lahf
fcompl
push
xchg
jae
rol
push
scas
cmc
pop
iret
repz
or
xchg
out
lret
jecxz
push
mov
and
pop
movsb
cwtl
push
jecxz
cs
call
lcall
xor
out
shlb
test
insl
mov
xchg
sub
mov
cs
dec
pop
inc
mov
or
shrl
pop
mov
mov
scas
pop
addl
pop
sbb
loopne
push
ss
mov
mov
xor
sti
push
push
test
stc
mov
sub
dec
push
sti
aam
out
insb
scas
repnz
and
xor
cmp
sbb
out
sahf
loopne
lret
adc
in
xchg
hlt
jecxz
or
mov
fsubrl
shrb
sahf
cmp
lahf
inc
xorl
scas
mov
mov
test
inc
xchg
lds
ret
or
shl
add
cmp
sub
rorl
ja
clc
mov
adc
cmpsl
std
xchg
xor
lods
rolb
out
cmp
cmp
mov
scas
out
cltd
and
fadds
clc
mov
push
call
mov
rolb
xchg
inc
pop
mov
mov
push
shlb
test
adc
cmp
movsl
inc
lahf
xchg
popa
cmp
js
and
fldenv
cmp
mov
ss
scas
pop
dec
data16
repnz
out
push
mov
mov
mov
lods
add
test
mov
cmp
out
inc
iret
movsl
sbb
mov
js
pusha
movsl
push
popa
lods
cltd
adc
adc
inc
fs
incb
hlt
xchg
out
mov
push
mov
and
rcrb
out
leave
xor
sub
pop
in
nop
mov
push
sub
std
xchg
xchg
jp
dec
push
jo
das
les
push
fisubrs
or
je
dec
sbb
dec
or
cmpl
add
bound
aam
mov
jbe
orl
inc
pop
test
lods
shrb
xchg
dec
leave
rorb
pusha
pop
fwait
ja
shlb
imul
jp
test
xlat
dec
push
sub
lahf
push
jecxz
sahf
stos
shrb
lsl
mov
mov
or
jl
inc
dec
imull
push
pop
scas
out
imul
rclb
int3
inc
jp
add
pop
push
mov
pop
adc
push
push
cmp
mov
lds
add
mov
sarb
xchg
cmp
call
cmp
call
lods
xchg
dec
dec
ds
or
daa
insl
insb
xchg
repnz
movsl
jbe
hlt
enter
scas
mov
scas
add
rcl
xchg
push
and
sbb
cmp
pop
xchg
xchg
mov
jge
addr16
mov
nop
test
sub
xchg
xchg
iret
aam
mov
or
aas
cwtl
xchg
jne
push
jnp
jnp
xlat
mov
rorb
adc
call
iret
mov
mov
pop
xor
leave
inc
mov
mov
pop
dec
imul
mov
sahf
dec
outsl
cmp
or
jle
xor
jns
sahf
insl
rcrb
out
xlat
and
dec
lret
xchg
xchg
fsubrl
scas
adc
daa
mov
outsb
les
push
mov
jle
mov
bound
cmpb
outsb
cmp
cmpsb
stc
ror
pusha
push
jb
mov
add
fstps
pushf
sub
cmp
loop
add
pop
adc
xor
mov
add
xor
js
lods
xor
cs
js
lods
adc
out
aam
repnz
lret
movsl
out
mov
scas
aas
in
clc
arpl
dec
in
test
loop
inc
dec
test
xchg
xor
fs
mov
out
jno
incl
out
adc
xchg
or
test
dec
xor
shlb
push
cmc
into
fldenv
jge
seta
in
gs
mov
pop
xor
rol
out
shl
call
mov
jmp
shll
leave
push
int
out
iret
cmp
push
mov
testb
cmp
cltd
inc
popl
pusha
ja
dec
xchg
xchg
loopne
push
movsb
and
xlat
inc
mov
dec
aad
sbb
pop
shrb
jp
inc
dec
mov
pop
rclb
jbe
pop
jecxz
lret
loop
shll
mov
test
cmp
rolb
jge
insb
mov
testb
add
aad
or
sbb
call
xchg
fmulp
mov
mov
out
add
js
sti
push
iret
xchg
inc
sbb
adc
jge
push
test
xchg
into
pusha
and
adcl
mov
neg
mov
mov
cltd
divb
cmpsl
js
iret
xor
loopne
pop
addr16
daa
shll
cmp
jle
sub
fidivrl
ljmp
lret
pushf
inc
je
rcr
gs
into
mov
dec
outsl
xchg
xchg
push
fcoms
or
out
mov
rcrl
fmul
inc
sub
daa
sti
lahf
jle
and
pop
cltd
and
vscalefsd
push
mov
cmp
mov
adc
add
mov
inc
setp
aam
mov
xchg
inc
subb
dec
lods
mov
cmpl
push
dec
js
orb
stos
and
push
and
aas
push
xchg
ror
aam
add
mov
jo
sub
scas
or
shlb
lcall
or
movsl
scas
mov
rorb
xor
outsl
mov
push
inc
fxch
scas
shll
jnp
movsl
popf
adc
insb
lods
or
push
rcl
sti
dec
lcall
rclb
mov
jno
or
adc
sbb
xchg
daa
movsb
stos
push
cmp
inc
iret
daa
test
aas
pop
mov
xchg
aas
pop
dec
pop
cmp
test
lret
out
adc
pop
rcll
mov
in
xor
inc
pop
jae
mov
inc
aad
xchg
les
mov
xor
jle
push
mov
scas
lahf
pop
in
jnp
out
pop
stos
in
jecxz
sub
adc
xchg
add
inc
rcrl
fs
shlb
xchg
std
imul
loope
xchg
push
or
xchg
inc
dec
xchg
push
push
cmp
sub
mov
sub
fdivs
or
popf
fildl
dec
leave
push
mov
iret
leave
stos
je
mov
mov
push
enter
scas
mov
cltd
sarb
sbb
cltd
scas
mov
mov
pop
xchg
mov
push
inc
sub
mov
test
shlb
outsb
inc
push
rorl
icebp
add
and
rcl
cmpsb
aaa
mov
jecxz
pop
icebp
lahf
rorb
lds
cli
loopne
fisttps
mov
and
scas
lds
inc
dec
rorb
and
out
cmc
xorb
jmp
js
mov
sar
int3
imul
in
cs
pop
jns
adc
dec
insb
xchg
push
fdivrl
decl
ds
scas
xchg
nop
xchg
loopne
test
xlat
nop
cwtl
fsubl
shlb
imul
xchg
jb
cmp
test
scas
inc
sahf
cli
in
pop
xchg
sahf
test
dec
repnz
leave
divb
sbb
mov
scas
test
pusha
dec
xorl
jl
test
cs
mov
add
aad
push
leave
mov
dec
jo
scas
xchg
in
sbb
test
rcl
dec
in
mov
addr16
xor
dec
pop
dec
mov
iret
and
scas
shrb
and
ret
inc
sub
in
lock
push
pop
scas
inc
pushf
shr
shl
insb
fdivl
sub
cmp
dec
rorl
dec
popf
push
push
cmpsb
inc
scas
iret
movsl
pop
pop
mov
xchg
addr16
push
stos
ficomps
mov
adc
xor
xor
xchg
or
push
xor
mov
jne
inc
cld
mov
push
cmpsb
adc
mov
mov
in
imul
jae
scas
dec
lods
out
adc
or
leave
in
nop
iret
gs
aas
jns
inc
pop
or
adc
push
data16
cmp
js
test
mov
das
in
std
push
push
xchg
cmp
movsb
inc
mov
sub
inc
rcll
adc
rcrl
mov
add
jns
sub
or
iret
scas
mov
adc
lcall
sahf
or
leave
xlat
scas
ret
sbb
in
inc
sti
ret
lock
cwtl
rcl
lods
bound
shlb
mov
iret
addr16
lods
add
cmp
dec
xchg
lret
psubusb
int
dec
mov
push
sub
sbb
scas
pop
and
insb
mov
mov
cltd
divl
push
mov
xlat
cmp
aam
cmpl
sahf
push
out
aad
push
pop
es
in
dec
push
fs
pop
in
pushf
inc
ljmp
mov
mov
inc
xchg
jmp
test
mov
mull
mov
pushf
push
pop
or
adc
leave
pop
jp
push
mov
stos
scas
push
out
sarb
mov
xchg
mov
iret
loopne
pop
dec
or
inc
fcoml
pusha
mov
cwtl
test
xor
jge
out
in
pop
aam
cmp
push
mov
lcall
mov
fucom
test
mov
and
xchg
ljmp
inc
cmp
imul
call
repz
pop
fidivl
push
ret
shrb
jl
inc
inc
mov
scas
in
pop
push
shl
adc
lods
mov
subb
out
std
addb
fdivrp
sahf
mov
sarb
jne
int
cmc
into
bnd
or
mov
cltd
mov
add
mov
sti
add
mov
dec
iret
shrb
aaa
xlat
insb
pushf
in
call
sti
and
dec
xchg
xchg
add
loope
rorl
inc
mov
scas
or
in
pop
jge
nop
push
in
inc
out
shrl
fisubrl
sbb
shrb
lock
dec
mov
push
negb
in
or
es
pop
mov
test
roll
push
fsin
sub
into
out
mov
pop
notl
mov
ljmp
outsb
subps
ror
test
out
lea
iret
dec
xor
push
nop
inc
push
addr16
jle
xlat
and
ds
xor
jp
adc
or
mov
imul
hlt
xor
cwtl
dec
jle
dec
mov
enter
xor
inc
insb
adc
rcr
movsl
xor
pop
sbb
mov
and
repnz
mov
insb
jge
jno
cs
inc
stc
lret
and
jmp
iret
cmp
pop
inc
aad
dec
xchg
mov
mov
subb
int3
pop
mov
sbb
pop
js
leave
cmp
jge
jo
sbb
jp
jb
imul
shrl
dec
inc
mov
bound
in
in
and
notl
push
mov
xchg
scas
scas
subb
rolb
inc
pop
aas
xor
leave
iret
inc
pop
pop
add
pop
adc
call
lcall
or
xchg
loop
std
mov
pop
add
jnp
xchg
xchg
mov
out
out
test
popf
sbb
mov
xchg
aam
or
mov
xchg
popa
scas
lock
sub
loop
mov
lods
into
aam
mov
sbb
call
xor
mov
rcr
movsb
jbe
aaa
and
fidivs
pop
xor
ficoml
lahf
scas
pusha
and
pop
mov
ds
ret
sbb
fnstcw
bound
pop
dec
arpl
jmp
scas
fnstenv
stos
filds
shrb
xchg
decl
sahf
push
lods
mov
jb
mov
jno
or
ljmp
sbb
inc
jecxz
mov
sub
in
cmpsb
and
ror
loopne
cwtl
out
inc
jbe
lcallw
mov
xchg
or
cld
lea
push
lahf
cmp
in
jno
lahf
outsl
ja
shlb
sub
add
ret
decl
adc
mov
mov
int3
iret
sub
xchg
out
xchg
in
pop
lahf
imul
fnstenv
push
mov
fimuls
jae
sahf
and
cltd
dec
out
scas
nop
cltd
ret
xor
jecxz
hlt
mov
lret
xor
adc
es
inc
mov
adc
scas
jns
jno
shrb
iret
cmp
adc
mov
out
jmp
fnstenv
loop
push
iret
add
mov
call
mov
outsl
divb
shr
popw
fstpt
sbb
roll
fwait
movsl
and
cmp
scas
pusha
rcr
adc
or
dec
pop
pminub
mov
stos
push
or
dec
std
jmp
xor
popf
lea
xchg
xchg
jno
adc
fcoms
jbe
stc
loopne
push
push
iret
xchg
rorl
jecxz
shrb
mov
adc
cltd
cmc
into
cmpb
xchg
rclb
add
jne
push
push
int
cltd
mov
cld
push
push
xor
inc
mov
cmp
push
out
cmp
mov
div
dec
xchg
popf
fcmovnb
insb
or
adc
out
sbb
jno
sbb
mov
adc
pop
adc
sarb
lods
addr16
pop
lcall
and
mov
jo
cs
iret
push
lret
xchg
loopne
cmp
daa
in
inc
jmp
mov
aaa
push
bound
arpl
pop
ret
in
jne
pop
sbb
scas
icebp
sbb
mov
call
and
xor
xchg
mov
lods
stos
es
outsb
add
dec
xor
jae
std
out
fnstenv
lret
cmpsb
push
xchg
shll
scas
test
sbb
jae
repz
jmp
mov
mov
pop
jb
iret
rcrl
mov
mov
mov
xor
adc
arpl
mov
lret
iret
jnp
fidivs
loope
dec
cltd
push
ljmp
pushl
xor
scas
push
stc
in
add
and
jo
aad
sbb
xchg
int3
jb
daa
jmp
popl
xchg
lcall
nop
fst
mov
cwtl
sub
lahf
or
add
mov
mov
mov
mov
iret
shll
add
out
arpl
xchg
scas
ljmp
cli
stc
cmp
lcall
jae
inc
adcl
in
push
movb
adc
mov
sbb
aas
adc
stos
gs
shll
outsb
jg
addr16
inc
mov
push
mov
sub
loope
test
jnp
sahf
sbb
sahf
and
cmpsb
stc
out
std
notl
cmp
pop
push
adc
fcmovne
xchg
int
in
addr16
push
adc
scas
fnsave
insl
shlb
hlt
jbe
fidivrs
jecxz
cld
shrl
mov
divb
arpl
outsb
aad
or
pop
xor
mov
push
jb
jnp
mov
lret
or
mov
fwait
xor
ret
rorb
scas
dec
fldl
and
inc
mov
rcrl
popf
repz
xchg
ja
push
fcompl
sarl
shlb
js
into
test
ficoms
repz
ja
in
in
mov
add
iret
insb
push
inc
pop
js
test
ds
notl
data16
jmp
cld
in
sub
bound
inc
cltd
push
mov
xchg
inc
and
add
or
repnz
lahf
cmpsb
jb
jne
inc
add
ror
stos
cmp
iret
aad
loopne
inc
sbb
push
lcall
and
je
jge
fsubrs
rolb
pusha
add
push
add
cmp
pop
psubusw
in
cs
iret
cmp
movsb
or
stc
movsl
pusha
test
scas
insl
rcrl
ljmp
mov
and
arpl
push
and
shrl
decl
sbb
or
js
mov
iret
sahf
in
test
add
stos
lret
jmp
rclb
loope
mov
divb
cli
js
jmp
or
push
popf
idivb
xchg
sbb
inc
std
push
inc
cmpsl
iret
mov
pop
cmp
jge
xchg
inc
dec
sub
pop
pop
dec
cmpb
rorb
cmp
mov
xchg
outsb
iret
mov
cwtl
aad
xchg
jg
scas
sbb
pop
xchg
xor
cmp
mov
outsb
xchg
xchg
pop
movsb
dec
iret
shlb
mov
sbb
cwtl
mov
xchg
loop
fwait
xchg
mov
xchg
mov
xchg
cld
mov
dec
dec
jmp
mov
xchg
ficomps
xchg
lods
mov
mov
stc
insb
rolb
pop
lcall
lret
int3
add
push
popa
or
pop
sbb
fwait
les
popa
ficoml
xchg
iret
scas
ss
and
cmp
shll
mov
push
lret
mov
out
jnp
imul
push
mulb
movsb
leave
shlb
in
mov
out
cs
iret
xor
push
stos
cld
cmp
jns
push
add
fnstcw
iret
inc
inc
mov
push
nop
xor
jl
repz
xchg
sub
cwtl
cmpl
jl
xor
sub
xor
into
out
xchg
cmpsl
sbb
outsb
mov
lods
push
je
iret
ficoms
movsb
loopne
pushf
adc
jmp
and
cmc
push
and
mov
adcl
stos
dec
sub
push
xor
subl
add
jne
fisttps
enter
cmp
mov
and
dec
xchg
mov
mov
mov
imul
shrl
mov
or
aas
add
sbb
scas
loope
jo
lods
inc
jl
cmp
popa
cmove
cmp
inc
mov
imul
scas
arpl
rclb
sbb
push
stc
mov
rclb
fcmovu
adc
iret
and
stos
xchg
sub
pop
shll
ss
jnp
in
sbb
sub
imul
ror
or
push
rcrl
inc
stos
mov
adc
scas
lods
sarb
mov
imul
gs
xchg
xchg
lock
test
jg
mov
inc
insl
xor
rcrb
push
mov
in
pop
jmp
sub
popa
xchg
int3
in
mov
jmp
data16
mov
xchg
ret
rorb
adc
inc
movsb
xchg
xlat
jbe
cmp
mov
jo
dec
mov
mov
and
jle
jno
cmp
mov
rclb
dec
iret
fdivp
xor
rorl
xchg
or
gs
ljmp
sub
add
outsb
arpl
iret
jle
mov
fisubs
rcrb
out
push
or
cld
int3
movd
xchg
pop
sbb
jb
movsb
in
in
in
imul
xchg
imul
shr
sub
popa
mov
mov
mov
xchg
out
jb
ss
cli
pop
push
pushf
cmp
xchg
repz
jp
test
and
xchg
std
jnp
pusha
pop
xor
jge
sub
outsl
sbb
xorb
shrb
cmp
xlat
jp
leave
fstpl
leave
mov
mov
cs
pop
or
mov
mov
pusha
push
mov
out
or
inc
pusha
iret
je
lock
adc
scas
push
rcrb
add
testb
jns
mov
les
mov
outsb
push
iret
mov
sti
pop
scas
repz
in
mov
xchg
jbe
lds
fs
mov
sbb
mov
iret
loop
fadd
bound
push
xchg
je
mov
cmp
popa
jl
fwait
sub
lret
pop
add
xchg
or
pusha
pop
mov
cmp
adc
ja
jns
mov
add
je
out
jl
or
push
rcl
and
cmpsl
inc
fldl
sbb
mov
aaa
fsubl
dec
enter
bound
mov
sub
cmp
dec
scas
sub
xchg
loopne
inc
clc
sbb
aam
xchg
pop
scas
je
aaa
jnp
ret
in
out
call
test
cmp
xor
cld
lret
rorb
jge
push
pusha
rorl
inc
cmp
lcall
lea
sub
jmp
sbbb
fs
push
or
sub
xlat
jle
adc
scas
cmp
inc
gs
jb
push
mov
jl
leave
scas
aaa
fldenv
inc
int
mov
mov
dec
sbb
fbstp
and
pushw
loope
push
xchg
movsl
mov
mov
incl
ljmp
dec
mov
scas
cmp
rcll
push
mov
jmp
mov
pop
pusha
xchg
sbb
xchg
test
mov
mov
jge
sbb
outsb
jg
scas
mov
dec
testl
hlt
cmp
scas
fistpll
add
adc
jg
or
rcll
out
pop
icebp
fsubrl
mov
repz
leave
cmp
xchg
add
fsub
mov
adc
lds
mov
xor
gs
mov
or
filds
incl
jns
xchg
and
xor
cmpsl
add
sarl
out
pop
pop
orl
hlt
add
out
lods
scas
mov
arpl
mov
or
ror
or
jnp
lods
and
adc
or
aad
sbb
xchg
call
rorl
shlb
push
gs
iret
push
mov
pop
pop
lods
cmp
pop
push
out
loop
dec
jle
scas
sbb
pcmpgtd
xor
sahf
mov
scas
scas
arpl
pushf
lods
dec
rol
adc
idivl
test
add
xchg
jge
mov
jle
inc
xchg
ss
scas
push
dec
negl
addb
or
fwait
bnd
or
roll
mov
out
xchg
bound
cmc
add
xchg
lods
sub
arpl
jae
scas
sbb
sub
and
sub
lret
fildl
cmpsl
int
sbb
mov
adc
and
pop
cwtl
xchg
idivb
cmpsb
xor
inc
test
add
adc
scas
ror
insb
cmp
ljmp
mov
pop
mul
jl
xchg
mov
xlat
jg
mov
rolb
lcall
orb
icebp
into
mov
ds
pop
sub
or
lods
scas
cli
adc
mov
push
or
stc
es
rol
outsb
push
mov
jae
add
fists
mov
shlb
imul
adc
xor
std
dec
mov
jge
jb
loop
lea
shrb
push
adc
xchg
cmp
adc
imul
pop
stos
xchg
cmpsb
ror
in
je
das
jne
xchg
and
ror
sub
xor
pop
fimuls
inc
sysenter
lret
add
cmp
stc
and
xor
xchg
nop
jmp
mov
cmp
cmp
push
xlat
stos
ljmp
mov
popf
xor
sub
xor
rcll
daa
popf
sub
pop
fisttpl
adc
add
pop
push
cmc
mov
and
inc
mov
scas
fistpll
lret
inc
cmp
mov
iret
sbb
rolb
out
pusha
dec
adc
lahf
ficomps
adc
cmp
scas
push
jp
and
dec
mov
sub
js
sub
enter
xchg
repnz
push
xchg
lea
in
repz
stos
inc
lds
and
sbb
scas
mov
outsl
mov
shl
icebp
mov
cmc
into
leave
imul
pop
or
sahf
xor
xor
scas
xchg
ficoml
shrb
imul
ret
loope
iret
je
pop
aaa
sti
ljmp
pusha
es
and
fimuls
rclb
jbe
loope
xor
xor
jg
faddl
mov
jno
imul
cli
push
ret
in
cltd
nop
popa
xchg
pop
sarb
jne
inc
lds
xlat
ds
faddl
mov
lea
lcall
jge
mov
inc
inc
push
or
daa
sarb
adc
test
xchg
inc
rorb
fidivl
push
mov
std
shlb
arpl
ror
inc
outsb
div
sub
mov
leave
xlat
jecxz
cmc
mov
mov
stc
ret
jo
and
push
and
stos
shll
insl
pop
push
add
icebp
add
sub
or
mulb
fdivs
testb
das
rolb
jle
sbb
addr16
dec
jmp
cmp
add
subl
jge
dec
and
mov
aaa
xor
stos
jo
or
iret
xchg
pop
pop
or
push
lret
repnz
ret
xchg
dec
mov
adc
sub
xchg
addr16
inc
fidivrl
inc
aad
out
lea
mov
and
andl
outsb
sbb
or
nop
push
leave
rcl
xchg
aad
pop
imul
cltd
lahf
xchg
lea
mov
ss
iret
push
xorb
sub
ret
xchg
shll
cwtl
lret
insl
dec
inc
loop
push
scas
test
into
shll
test
and
mov
ljmp
xchg
pop
sub
push
push
gs
xchg
jmp
clc
xchg
pop
pop
adc
scas
mov
mov
call
mov
mov
dec
sbb
test
mov
rcll
test
loop
out
mov
shrl
inc
mov
xchg
jle
pop
mov
sub
loop
rclb
ss
push
xor
insb
addb
andb
push
ss
adc
xor
jle
mov
das
repz
sub
enter
and
xlat
mov
into
lahf
xchg
divb
xchg
outsb
push
and
push
push
imul
mov
outsb
aad
xchg
push
pop
std
jne
mov
jg
scas
sbb
xor
iret
mov
imul
mov
rcr
xchg
dec
or
and
fdivl
jp
jb
xor
and
or
in
std
sbb
adc
call
stc
pop
dec
cmp
sbb
xchg
push
popa
xor
jne
sub
fsubl
aaa
push
fwait
adc
xchg
push
mov
and
mov
loope
cld
adc
sti
stos
xchg
and
js
out
push
pushf
pusha
dec
dec
scas
pusha
aas
jnp
shrb
sbb
rcr
movsl
imul
xchg
pop
scas
inc
push
xor
insl
test
sub
jge
cmpsl
cmpsb
xchg
dec
push
xor
leave
inc
scas
dec
in
adc
test
adc
test
std
repnz
dec
enter
adc
cmp
jb
pusha
fs
or
scas
dec
ljmp
jno
test
sarb
mov
cmpsb
cwtl
mov
scas
pop
xlat
add
mov
inc
in
xchg
sbb
roll
in
xchg
ret
fucomip
pop
nop
gs
clc
inc
rcr
dec
lds
sbb
adc
sub
stc
cmp
out
js
xchg
mov
call
mov
mov
xorl
fwait
cmp
cltd
push
iret
sub
push
daa
sbb
push
sbb
mov
adc
test
leave
call
xchg
pop
jle
xchg
out
inc
pushf
sub
and
aam
shr
pop
mov
fcmove
adc
or
xchg
dec
mov
rcl
cld
or
pop
scas
sub
or
jp
das
jbe
push
inc
jmp
nop
fwait
xor
and
and
rcrb
jge
ss
ret
cs
mov
fdivrl
into
push
sub
mov
stos
and
loope
imul
mov
push
cmp
scas
mov
jo
xor
or
pop
jne
mov
xchg
insl
xor
and
in
daa
mov
push
icebp
shlb
xlat
pop
rolb
or
pop
scas
dec
imul
or
fsubs
push
rorb
aam
mov
std
or
xchg
xor
jmp
aaa
fistpl
ret
push
dec
sbb
je
je
iret
in
cmp
ds
dec
xchg
dec
xchg
adc
push
mov
scas
or
mov
mov
pop
cli
lahf
ljmp
cmpsl
ss
in
rcr
dec
loop
movsb
push
cld
scas
sbb
xor
sarl
cmp
jnp
add
push
rdmsr
mov
mov
lahf
iret
lahf
pop
lret
pop
out
mov
popf
push
dec
nop
xor
adc
jbe
scas
pusha
sub
push
lcall
icebp
sbbl
lahf
scas
mov
xchg
rorl
les
rcrl
mov
sub
pop
xor
dec
jne
ror
pop
jp
mov
rorl
inc
fldenv
scas
mov
and
fsubs
stc
mov
cmpl
xchg
in
xor
fs
fcmove
lret
mov
xor
rcrb
ljmp
je
sub
testl
and
and
or
into
adc
mov
imul
xchg
or
mov
jmp
cs
pop
sbb
rclb
dec
scas
xchg
jae
into
jmp
scas
arpl
cld
or
add
push
push
ds
mov
pop
xchg
cltd
mov
addr16
lock
cwtl
bound
inc
or
dec
mov
sti
push
insl
pop
adc
add
add
rclb
sbbl
jg
pop
dec
and
push
iret
push
jno
icebp
test
lcall
pop
es
loope
iret
scas
xor
add
lods
dec
xchg
dec
pop
int
out
and
repnz
pop
jno
xchg
aaa
fidivl
in
pop
iret
out
inc
mov
dec
outsb
jo
xchg
adc
jnp
decb
jge
jg
aas
xchg
fdivs
in
jg
inc
test
mov
test
lret
roll
scas
mov
imul
repnz
sbb
mov
jo
jmp
xor
and
fisubrl
jae
pop
cmp
scas
std
jns
inc
dec
scas
scas
dec
inc
adc
enter
push
mov
cmp
outsl
mov
xchg
lahf
adc
push
mov
or
add
scas
xchg
mov
dec
or
pop
add
aam
and
push
inc
mov
mov
xchg
push
pop
insb
scas
fstpl
ret
sub
sbb
sbb
test
scas
sbb
in
dec
rol
or
cwtl
or
jo
mov
sarb
sbbl
push
rcrb
out
adcl
dec
fildll
lds
jb
cltd
add
cmp
andb
and
xchg
mov
mov
xchg
rcl
jl
pop
stos
adc
fstps
roll
mov
iret
dec
std
into
andl
xor
sbb
pop
mov
shlb
sbbb
inc
test
sub
sub
mov
lods
push
add
popa
shl
inc
test
call
mov
adc
pop
push
scas
das
mov
mov
push
inc
iret
outsb
imul
movsl
cmp
xchg
lea
ljmp
imul
pop
shrb
cmp
adc
repz
popa
sahf
faddl
mov
popa
pushf
jle
outsl
or
adcb
testb
mov
lock
pop
scas
cmp
dec
dec
inc
xor
pop
rcl
inc
cmp
mov
dec
jg
sahf
add
scas
in
mov
or
outsb
rcr
xor
push
cltd
retw
movsb
sub
xor
jo
rclb
enter
jns
shl
add
fmull
pop
jecxz
mov
incb
iret
imul
push
xchg
mov
dec
call
mov
sti
daa
insb
out
xlat
gs
stc
ja
xor
and
mov
xorb
and
sub
mov
int
xor
rolb
pop
inc
ds
or
xchg
daa
dec
test
sbb
or
inc
xchg
lods
mov
lods
rcl
movsl
out
outsl
push
hlt
cld
into
enter
in
jge
xchg
push
and
dec
and
loope
scas
lret
loope
lods
scas
push
stc
loopne
adc
rcrl
cmp
push
pop
xlat
mov
iret
popa
cmpsb
in
xchg
incb
popa
sub
mov
or
rorl
cwtl
and
or
stc
dec
sub
xchg
pop
aaa
adc
shlb
push
push
mov
sub
insb
add
rcrb
or
jmp
mov
ljmp
and
into
cld
dec
cmp
and
jo
push
xchg
dec
loop
notb
pusha
daa
in
sbb
stos
dec
scas
outsb
fsub
gs
lahf
xchg
les
das
enter
aam
js
mov
icebp
jae
out
js
iret
jbe
insl
ljmp
inc
cmp
icebp
adcb
jns
jae
out
mov
fisubs
loopne
pop
mov
and
cs
and
fisubrl
push
cmpsb
mov
dec
fisubrs
jle
adc
nop
iret
mov
sub
aad
icebp
push
xchg
lret
cwtl
enter
js
data16
rorb
push
fcmovbe
lret
sarb
cwtl
mov
andb
leave
cmc
imul
cld
clc
xchg
sbb
cmp
jb
stos
dec
in
sbb
jbe
xor
test
mov
xlat
lea
andl
mov
outsl
inc
adc
inc
jmp
xor
ret
ljmp
jb
dec
cld
pop
scas
aas
push
je
in
mov
mov
mov
lahf
push
insb
xchg
daa
push
rcl
mov
pop
add
fsubrs
fisubs
mov
jmp
mov
jne
jne
in
mov
pop
sbb
neg
sub
outsb
shlb
sub
jl
pushf
cmp
lea
test
add
scas
mov
jmp
insl
mulb
pop
mov
ja
pop
shlb
popf
icebp
and
sbb
insl
xchg
jmp
das
rcl
mov
sub
subl
shrb
jo
cmp
inc
or
iret
jne
mov
sbb
xchg
mov
ljmp
adcl
pop
add
mov
ds
mov
adc
push
loope
rcrl
pop
std
inc
mov
call
sbb
add
mov
ret
lods
sub
in
fnstenv
out
xchg
pop
inc
stos
enter
jge
push
scas
jecxz
jecxz
sarb
inc
adc
cmc
xor
in
testb
fcmovnb
insb
les
mov
or
scas
pop
arpl
xchg
out
mov
xchg
push
xlat
rcrl
gs
pushf
fcomip
xchg
mov
ss
lock
sbb
push
xchg
out
popf
cltd
add
mov
je
dec
addr16
sarb
cltd
mov
push
mov
insb
pop
cmp
or
mov
rolb
dec
inc
rcrb
scas
sarl
popa
xor
xor
push
cmp
sbb
xchg
lcall
test
dec
test
mov
sbb
jno
out
in
cmp
scas
sbb
push
mov
or
inc
imul
mov
cmpsb
ficompl
das
xchg
or
or
rclb
fldcw
and
jmp
ja
arpl
inc
stos
and
mov
mov
aas
xchg
push
jle
or
sub
jae
xor
xchg
cmp
and
dec
or
or
jg
cwtl
scas
insl
lcall
xor
test
iret
hlt
mov
fsubrp
lea
shrb
clc
sub
cld
mov
pop
int
jg
es
push
sti
mov
incb
scas
mov
les
mov
or
inc
std
cmp
dec
inc
jge
push
call
jo
cwtl
lock
cld
xchg
adc
mov
dec
aad
lds
pop
mov
sbb
or
popa
ror
push
xor
sub
mov
scas
cmp
mov
mov
lret
inc
adc
fsts
pop
leave
rolb
cmc
rorl
or
test
jg
sbb
or
rorb
arpl
gs
rclb
hlt
push
movsb
loope
into
vmovdqa
or
mov
out
cmpsb
mov
shl
aaa
mov
aad
push
stc
ss
rcl
add
sbbl
mov
in
push
cmp
pop
fucompp
arpl
jo
js
push
jno
scas
fsts
iret
inc
lea
popa
nop
and
push
test
xchg
fwait
cmp
xor
jmp
mov
push
lcall
adc
inc
dec
dec
pop
mov
outsb
adcb
ret
cld
mov
jle
mov
fs
dec
or
lahf
lds
rolb
iret
or
adc
mov
mov
js
iret
jne
cmovge
and
mov
data16
xor
mov
mov
mov
fwait
pushw
sar
adc
pop
int
pop
mov
rcr
daa
cs
xchg
and
push
lret
dec
mov
mulb
sbb
loope
rclb
and
in
lcall
jle
clc
std
adc
cmp
loop
das
aas
in
vmread
inc
iret
xor
int
xchg
mulb
scas
mov
loopne
fdiv
pop
inc
shrb
hlt
fsub
or
inc
es
xchg
cmp
xchg
mov
jmp
scas
sub
js
subl
xchg
jle
out
insl
js
xor
pop
xlat
xorb
cwtl
addr16
push
cmp
push
stc
pop
mov
in
loop
dec
add
xchg
bound
add
sbb
pop
jge
test
sub
pop
pop
scas
sbb
aam
shl
push
stos
les
jmp
xchg
rorl
jmp
stc
loopne
cltd
aaa
ret
nop
movsl
sub
mov
or
negb
pop
clc
mov
call
movsl
cmp
adc
or
shlb
mov
jecxz
out
addl
mov
xchg
shl
xor
pushf
nop
inc
jge
cld
movl
movsb
cmp
jl
shll
xchg
aam
daa
aas
cmpsb
sbb
fsubr
movsb
push
sbb
push
test
and
movsb
mov
shlb
push
cld
neg
jno
popa
pop
push
ljmp
cmp
dec
in
cmp
ja
push
xor
pop
scas
push
push
sti
adc
mov
iret
mov
lea
inc
mov
push
inc
int3
xor
testl
cmp
lds
rol
fists
cmp
dec
dec
xor
push
mov
sbb
dec
popf
jmp
and
or
shl
xchg
push
pop
fistps
mov
rorb
movsl
shrb
aaa
pop
xchg
in
xchg
mov
les
fbld
fildll
cmp
or
or
aam
test
mov
rcrb
adc
sub
mov
fisubrs
pusha
rcll
sahf
bndstx
lock
xchg
iret
mov
out
cmp
addl
fbstp
xor
jb
jae
jle
mov
xor
pop
cmc
popa
ds
scas
adc
sbb
sbb
test
jae
xchg
sbb
and
lea
jg
mov
popf
cmpsb
iret
sbb
cltd
mov
lods
xchg
inc
mov
or
cwtl
pushf
jge
push
insl
sbb
rolb
cmp
lgs
sahf
test
int3
xchg
shrb
cmp
shrl
imul
pop
xchg
mov
scas
mov
mov
fmuls
jae
jle
push
xchg
in
shr
out
in
pop
push
or
dec
jmp
and
idiv
mov
jne
stos
iret
aad
int3
imul
rorl
fsubrl
fsubr
cmpsl
xchg
sub
into
push
mov
lahf
pop
enter
mov
sbb
jb
mov
mov
inc
push
mov
pop
and
shrb
fs
imul
push
mov
gs
mov
xorb
inc
mov
dec
and
pop
jmp
dec
jb
sbb
push
shl
sub
aas
enter
jo
lea
stos
popf
in
in
dec
or
sub
cmc
into
xor
cmp
iret
xchg
orb
loope
pop
mov
jne
jge
sub
xchg
leave
jno
enter
mov
push
in
add
xlat
mov
xor
mov
lret
fisubrs
shl
scas
jg
stos
xchg
pop
sbb
loope
in
mov
pop
sarb
outsb
int3
mov
mov
jmp
dec
or
dec
addl
into
vpaddusw
orb
in
xchg
xor
mov
lret
mov
dec
and
dec
aad
sub
dec
inc
imul
rclb
imul
iret
insb
push
repnz
outsb
ljmp
aas
cltd
dec
add
jp
jns
shl
sub
roll
dec
rorl
iret
pop
push
xor
sub
cmp
mov
push
scas
pop
jle
push
jl
dec
adcl
mov
mov
xchg
xor
enter
jle
fldl
stos
push
and
mov
roll
push
mov
jg
fs
push
roll
add
scas
xor
loope
sarb
xchg
into
sub
push
iret
ss
outsb
push
rorb
push
jo
int
dec
xor
std
arpl
adc
mov
adcl
or
push
shrl
es
xchg
mov
ljmp
mov
shll
adc
test
rcr
dec
inc
loopne
push
std
push
out
xchg
pop
ljmp
fprem
inc
cmp
je
scas
sbb
mov
inc
sbb
popl
iret
jne
dec
lcall
mov
xchg
test
push
ja
stos
scas
or
pop
andl
fs
fmulp
je
mov
iret
and
mov
adc
fs
in
lret
movsb
mov
jno
cmpl
adc
jb
mov
scas
xchg
adc
xlat
pop
ja
xchg
out
pop
enter
mov
fwait
adc
gs
fidivl
pop
stc
add
jecxz
pushf
sti
js
les
pop
xchg
push
shlb
call
sub
in
pop
sbb
inc
xchg
insb
mov
or
inc
jge
into
lds
xor
test
fldcw
dec
mov
popf
cmp
outsl
aad
test
sbb
xor
mov
mov
in
pop
rcrl
cwtl
imul
dec
push
mov
pop
mov
rol
sbb
lret
mov
jle
mov
xchg
test
cmpsb
pushf
bound
iret
orb
cmpl
jecxz
ja
imul
sahf
cmpsl
and
lahf
ret
push
mov
sub
insl
lods
ja
fldcw
and
pop
mov
into
jge
xchg
gs
sar
ljmp
sub
add
xchg
cli
add
xchg
mov
sti
fistpl
scas
div
sbb
shlb
or
mov
scas
add
rcl
inc
push
xor
pop
repz
outsb
shll
fistpll
in
lea
flds
push
sbb
mov
in
adc
mov
xchg
out
and
pop
loop
iret
or
jae
mov
pop
xchg
mov
repz
push
rorb
out
hlt
iret
shlb
test
js
pop
cli
rorl
lret
mov
mov
in
cmpsb
xor
mov
cltd
dec
out
out
push
shr
outsl
mov
icebp
jo
into
jecxz
jmp
stos
repz
lahf
ja
sti
sbbb
jno
pop
mov
sahf
fcompl
jns
imul
xchg
xchg
arpl
imul
adc
out
in
test
test
rol
sub
pop
arpl
adc
mov
adc
pop
push
insb
iret
push
je
popa
sub
adc
adc
scas
sbb
subb
inc
inc
notl
cli
jp
or
dec
or
lret
mov
pop
ljmp
cmpl
push
jne
popa
lret
aas
iret
adc
mov
ror
xchg
push
ja
jge
aaa
jb
rorb
add
shrb
mov
not
mov
bnd
out
scas
pop
rclb
daa
add
sbb
lock
cmc
inc
xchg
aam
pop
les
test
test
mov
push
leave
out
popa
cmp
into
dec
mov
and
xchg
lods
std
xchg
xchg
popa
xchg
dec
iret
xor
push
sbb
rcrl
out
mov
mov
xor
lret
fsubrp
bound
rolb
xlat
jg
push
cli
pop
and
push
nop
push
sub
addr16
out
inc
jmp
jecxz
xchg
sub
xlat
fcompl
mov
loope
sub
mov
mov
imul
or
xor
push
adc
sub
aad
xorb
pop
dec
cmp
mov
mov
lods
int
xchg
aam
add
inc
adc
aas
lret
adc
fwait
push
mov
inc
mov
rcrb
push
sub
jg
inc
clc
inc
jbe
xor
scas
repnz
inc
pusha
jmp
bound
dec
push
xor
pushf
add
bound
jne
rcl
push
adc
cmpsl
add
leave
fucom
loop
inc
lods
inc
push
cmpsb
shrb
lods
xchg
out
xchg
pop
or
roll
cwtl
xor
mov
pop
mov
pop
jp
mov
loopne
adc
pop
inc
and
out
outsb
xchg
adc
ljmp
pop
sbb
jb
je
arpl
or
pushf
sahf
lret
js
add
gs
inc
iretw
or
dec
mov
xchg
jl
jo
mov
cmovge
mov
pop
sbb
scas
or
cmpsb
xchg
and
outsl
jg
idivb
movsb
jns
jg
inc
add
or
inc
sub
hlt
dec
outsl
xor
mov
push
icebp
daa
call
adc
movb
push
out
xchg
jno
or
inc
call
mov
mov
mov
out
ficomps
mov
push
mov
cmp
add
cld
add
cmc
rorb
jae
imulb
pop
mov
cmpsl
jnp
mov
std
jg
add
mov
adc
nop
cmp
int
mov
imul
es
orb
rol
test
loope
shrl
scas
xchg
xchg
fldcw
jecxz
push
xor
cmp
sbb
sub
sbb
xchg
or
jae
aad
dec
subl
sahf
xchg
xchg
pop
mov
push
stc
xchg
test
cmp
adc
fcomp
xorl
leave
jbe
jb
testl
cwtl
or
outsb
scas
push
sbb
sar
jns
xor
mov
push
in
mov
xchg
push
sbb
push
sbb
mov
nop
xchg
aaa
pop
push
push
in
sarb
xor
fsts
add
stos
push
dec
push
mov
sub
stos
mov
jns
xchg
mov
std
in
rcrl
out
mov
scas
bound
jp
rcl
inc
dec
nop
push
lock
xchg
mov
or
or
cmp
dec
jb
popf
jmp
xor
cld
add
scas
xor
xchg
fdivp
mov
mov
jecxz
lret
xchg
add
xor
icebp
stc
fistpll
sub
mov
scas
push
xor
mov
les
adc
sti
shll
aaa
rolb
shrl
adc
aad
inc
fdivs
outsl
and
ret
push
cmpsl
mov
jp
mov
scas
pop
clc
xchg
push
add
xlat
add
push
in
jbe
movsb
xchg
lret
add
jmp
jg
pop
iret
ja
in
and
mov
pop
aas
mov
mov
insb
movsb
mov
aad
jne
test
xchg
mov
iret
or
xchg
pop
mov
sub
je
inc
xor
and
fs
cmovno
jge
xor
lret
and
push
cltd
lods
mov
push
das
jns
sar
mov
test
xor
dec
mov
mov
pop
outsb
cmp
push
mov
mov
test
push
dec
xchg
popa
mov
in
fs
inc
cltd
in
test
out
push
cmp
mov
into
push
popf
push
fldcw
loop
cs
leave
je
push
fcoms
adc
dec
mov
push
fnstenv
pop
leave
fldcw
insl
add
adcb
or
jno
xor
fmul
divps
cs
sbb
mov
movsl
lcall
int3
push
sub
insl
imul
shll
pop
clc
scas
and
in
xchg
repz
adc
lds
jb
add
mov
mov
pop
add
pop
lds
cmovg
adc
lahf
inc
ret
jns
xchg
xorb
xlat
xchg
fcom
pop
repnz
dec
sub
aaa
test
out
lahf
cmp
xchg
or
divl
scas
cmp
stos
int
int3
shrb
and
scas
fucomp
pop
push
sarb
inc
fstl
cltd
psadbw
and
sbb
mov
rcll
daa
sub
jmp
cld
sahf
iret
and
divb
aam
cli
push
cmc
push
xor
aas
mov
or
lods
int
xchg
pushf
pop
imull
jne
or
push
and
push
mov
lret
mov
shl
subl
aaa
fdivs
adc
adc
adc
negb
iret
sbb
into
mov
sub
fstpl
xchg
scas
push
jb
into
je
xchg
push
aaa
jge
stc
lcall
ds
testl
mov
xchg
push
or
into
sub
adc
dec
inc
mov
jl
mov
mov
hlt
movsb
push
enter
or
xor
lcall
mov
and
ror
dec
mov
pop
pop
xlat
divl
cmp
loop
sahf
jge
shlb
cmp
adc
dec
out
inc
ret
subl
push
mov
nop
aam
lods
test
mov
iret
pop
push
gs
les
pop
rcr
gs
push
hlt
mov
out
shlb
adc
mov
movsb
in
adc
icebp
or
cld
rclb
ss
pop
in
sub
orl
ljmp
or
or
out
mov
sbb
js
push
cwtl
or
mov
fwait
sbb
add
into
fwait
add
sbb
das
and
repnz
or
push
cmc
or
jl
xchg
outsb
dec
lods
shrl
mov
iret
jo
stc
pop
insb
shr
ret
push
daa
push
mov
add
out
mov
sarb
mov
ret
nop
mov
xor
xchg
rcrb
xchg
clc
ja
mov
stos
xlat
scas
and
es
jno
xor
mov
or
dec
xlat
ja
inc
mov
scas
fimull
cltd
push
and
pop
inc
bound
popf
xchg
add
mov
mov
test
xorb
mov
lods
lock
ret
mov
pop
nop
add
ror
pop
stc
xor
lret
ds
add
cwtl
xor
or
mov
loop
stos
mov
jne
xor
mov
sar
mov
sbb
sbb
aas
shll
xchg
fwait
pop
mov
xor
leave
dec
sbb
and
das
out
scas
xchg
stc
mov
jbe
sub
push
hlt
pop
js
sarl
xchg
sub
or
mov
cmpl
add
repnz
adc
and
inc
adc
rcll
out
scas
gs
repz
cmc
scas
dec
push
adc
sbb
loope
repz
loopne
dec
out
int3
cmp
xor
sbb
ret
cmp
movsb
mov
test
fimuls
or
xor
sbb
jl
arpl
outsb
insl
xor
sbb
rcr
test
pop
cli
cmp
mov
out
mov
pop
adc
lret
xchg
cs
add
mov
stos
roll
dec
xchg
push
int3
and
out
daa
arpl
addr16
or
int
test
and
es
ret
lret
mov
pop
scas
xchg
sbb
sti
push
lret
push
std
les
pop
mov
int
mov
mov
pop
mov
scas
sbb
sub
pop
testb
fsubrl
mov
cmp
iret
jno
xchg
orb
out
aam
sahf
scas
lret
popf
or
movsb
aam
inc
fsubrp
xor
shlb
xor
pop
dec
jge
jg
fimuls
sub
add
push
nop
sub
std
nop
rclb
push
cmp
add
xor
es
cmc
rol
outsl
push
adc
mov
enter
dec
scas
inc
repnz
ret
orl
out
pop
sbb
push
pusha
jecxz
fcoml
pop
scas
mov
xchg
loop
nop
or
in
ficoms
rcl
inc
push
adc
scas
iret
int
or
pop
xchg
pop
dec
pop
sbb
aas
enter
addl
sbb
mov
push
ds
and
mov
ss
cmc
scas
sbb
or
ja
adc
es
mov
repnz
pop
shl
cwtl
mov
shrl
outsb
cmp
das
lds
or
jg
inc
jl
cs
jecxz
mul
mov
mov
adc
stos
xchg
gs
xchg
clc
fs
sahf
cmc
daa
mov
inc
xchg
shrb
shl
push
or
iret
mov
mov
sbbl
scas
jns
mov
mov
insb
xchg
iret
movb
cmpsb
iret
push
daa
xor
or
inc
idiv
inc
ret
in
roll
test
fsubrs
repz
mov
iret
in
in
adc
xor
jecxz
mov
xchg
lock
jns
mov
scas
mov
cmp
mov
aas
add
cmp
sbb
fistl
push
push
stos
add
sti
push
pop
out
mov
xchg
cmpsb
mov
ret
sub
stos
outsl
test
sub
mov
jo
scas
fwait
sbb
jbe,pt
dec
stc
cmp
push
xor
iret
adc
mov
lock
cmp
loop
hlt
je
dec
jo,pt
pop
scas
stos
jecxz
mov
push
pop
push
mov
mov
sbb
fldl
pop
mov
imul
dec
jb
sub
sahf
pop
int
and
xchg
in
popf
and
out
out
mov
inc
mov
xchg
aam
xor
imul
or
push
sub
xchg
imul
mov
leave
repnz
xchg
fldcw
hlt
rolb
ret
mov
scas
sub
adc
call
cmc
xor
xlat
cwtl
aas
and
fstpl
mov
ss
dec
sub
pop
dec
mov
cli
or
sbb
out
nop
inc
mov
into
int
hlt
lock
push
xchg
ret
out
xchg
jb
push
pop
icebp
push
push
cmp
inc
lea
mov
adc
fdiv
add
lea
dec
pop
inc
or
stos
scas
cmc
cmc
fistps
jno
or
adc
xchg
xorb
popf
cmpsb
push
dec
dec
sub
das
mov
idivl
dec
push
call
pop
in
pop
push
add
iret
fists
sbb
jp
loope
roll
cmp
popa
mov
push
xchg
dec
cmpsl
or
pop
enter
jb
in
in
mov
lods
pop
inc
frstor
scas
std
dec
into
movsl
inc
dec
mov
pop
inc
add
iret
fs
xchg
cmpsb
sub
sub
adcb
jecxz
inc
mov
add
icebp
pop
push
in
inc
iret
jge
mov
int
enter
xor
inc
inc
scas
sbb
out
fcom
mov
xor
jmp
mov
push
xor
repz
std
shrb
rorb
cmp
sub
movsb
xchg
imul
loope
aas
mov
jns
adc
push
lahf
sub
nop
insl
add
icebp
or
mov
lods
dec
inc
xchg
pop
dec
setb
adc
in
pop
rcll
push
and
lds
and
lds
and
notb
daa
pop
scas
mov
mov
pop
xchg
cmpsl
xchg
inc
jnp
adc
pop
or
fisubrs
ljmp
insb
in
xchg
inc
push
repz
adc
shrb
inc
or
mov
lds
test
gs
imul
jmp
shl
icebp
mov
sub
jecxz
fiadds
sub
iret
jp
cltd
xor
es
lcall
pop
rorl
inc
dec
shlb
in
or
cmp
pushf
iret
popf
add
pxor
fidivl
iret
add
shlb
sahf
add
xor
mov
cmp
dec
push
sbb
enter
sbb
push
mov
jg
scas
rorb
add
js
hlt
into
mov
ficompl
pop
mov
pop
xor
push
rorl
pop
inc
adc
scas
sub
cmp
shrl
add
shll
jl
out
cs
jp
fcompl
lds
into
scas
dec
rorb
sbb
pop
inc
in
pop
push
xchg
push
jae
add
divb
inc
fmull
cli
or
iret
int
dec
movsl
pop
out
rcll
fsub
dec
xlat
fisttpll
push
jg
je
fwait
mov
aam
cld
shlb
mov
lock
iret
dec
push
mulb
push
cmp
add
cmpsl
push
inc
sbb
jnp
out
aam
push
lret
add
mov
push
imul
push
shr
bound
cmpsl
lahf
ljmp
mov
and
add
inc
sahf
add
pop
sub
mov
push
jge
add
inc
xchg
arpl
loop
pop
xchg
sbb
rsqrtps
imul
jbe
adc
scas
or
and
fsubr
dec
add
or
shlb
clc
mov
lret
subb
add
js
int3
arpl
and
lahf
xchg
mov
into
std
movsl
xor
shrb
add
iret
ljmp
es
pop
add
lds
in
imull
cmp
scas
xchg
test
cmpsb
divl
rolb
mov
je
push
iret
stos
popa
divl
pop
or
jb
shrb
sub
mov
and
iret
mov
or
scas
popa
sarb
sbbb
lods
in
xchg
cmp
rcrb
jne
and
inc
fsubr
cmpsl
pop
dec
add
and
xchg
fwait
mov
mov
int
sbb
jne
sahf
and
lahf
popf
ror
les
nop
cmc
inc
test
into
fsubs
sub
pusha
out
push
pop
rorl
mov
lahf
iret
repz
sub
xchg
adc
sbb
mov
add
rcrl
sub
add
push
and
iret
imul
push
push
add
int3
cmc
sub
cmp
int
jo
call
je
dec
test
jl
mov
aam
inc
cli
and
leave
push
insl
roll
and
insl
pop
sub
call
pop
icebp
sub
iret
aas
mov
data16
mov
jb
movsl
lds
cmpsl
in
and
in
pop
movsb
out
mov
cmpsl
je
push
jae
push
scas
outsl
cmp
in
mov
xchg
out
xor
stc
jno
sbb
mov
popa
cltd
pop
pop
jmp
in
movsl
inc
shrb
lret
cmc
adc
into
shlb
inc
mov
xor
xchg
xorb
aaa
stc
mov
and
ds
lock
aad
sub
subl
shr
imul
push
mov
pop
jns
and
xchg
sbb
adc
out
aas
lods
lds
pop
xchg
adcb
idivb
mov
loopne
jecxz
mov
and
add
shrb
add
sarb
enter
inc
push
rolb
jg
adcl
push
aaa
or
arpl
mov
pop
iret
in
out
sbb
add
std
sbb
scas
dec
jle
loope
nop
clc
into
gs
mov
aaa
jno
mov
and
xor
xor
sub
insl
test
ljmp
lea
std
cmp
jecxz
push
std
rolb
inc
mov
push
scas
addl
mov
ficompl
popf
into
fimuls
push
xor
push
lret
aas
pop
dec
enter
and
dec
mov
icebp
jo
mov
lahf
xlat
lds
push
nop
fsubr
dec
dec
xchg
imul
push
faddl
push
int
sub
into
add
shr
mov
loop
cli
adc
push
push
xchg
inc
int
xchg
sarb
outsl
insl
xor
out
js
rol
roll
or
and
cmp
divl
pushf
addb
sub
aad
push
jns
je
adc
and
push
roll
shl
int3
iret
imul
pusha
into
ret
sbbb
fsts
adc
enter
adc
scas
js
jl
in
inc
stc
clc
pop
inc
test
loop
pop
mov
nop
inc
fucomp
rcrb
fdivs
insb
add
push
jno
adc
xor
outsb
rolb
mov
dec
iret
and
mov
xchg
arpl
jae
aaa
push
xor
out
push
adc
repz
pop
mov
movsb
mov
jl
ret
mov
lahf
scas
or
icebp
sub
shr
fmuls
xchg
iret
dec
movsl
sub
lret
iret
fcmovb
adc
cs
adc
out
mov
mov
in
sbb
jae
stos
in
or
sbb
lock
sbb
icebp
or
movsl
fwait
and
add
xchg
nop
scas
xlat
mov
in
cli
daa
test
dec
xor
jg
into
js
sbb
lret
cmpsb
push
loop
sbb
jle
mov
nop
jle
adc
sbb
sub
out
inc
xchg
fidivrl
mov
fistpl
in
cmp
sbb
push
jmp
mov
mov
ret
push
not
jmp
shr
enter
rclb
jge
into
stos
test
push
pop
aam
rcll
xchg
lret
mov
pop
jmp
xchg
in
push
ds
add
pop
rorl
and
shl
les
int
lcall
or
data16
stos
jp
rorl
js
add
xor
and
push
xorb
mov
and
fsub
sbb
pop
pop
or
cmp
cmpsl
in
pop
mov
setb
xlat
push
jecxz
mov
dec
scas
scas
sti
rcl
movsb
sbb
cmp
rcr
add
dec
adc
pop
mov
or
lret
rcrb
aas
je
push
scas
mov
stos
test
int3
push
sarb
sub
rclb
inc
cmc
push
add
mov
call
fwait
mov
out
or
push
sub
movsl
fisubrs
pop
mov
xchg
fsub
pop
mov
push
scas
pop
jg
cmpsl
shlb
lods
mov
iret
mov
lcall
or
mov
inc
inc
or
scas
mov
jmp
shlb
sbb
mov
mov
fdivp
rcll
push
jb
leave
sarb
data16
ret
scas
fsubrl
cmpsl
mov
jno
shr
mov
adc
xchg
lcall
pop
test
fs
cwtl
mov
add
scas
jno
scas
int3
push
jmp
pop
add
rcrb
stos
cwtl
das
cmc
pop
cld
leave
jo
in
or
gs
mov
addr16
sub
xchg
sahf
push
aas
sub
je
pop
sahf
pusha
cmp
mov
dec
cld
push
repz
xchg
mov
sbb
sub
enter
rcl
int3
add
pop
fcmovb
js
lret
loope
sbb
mov
insl
adc
sub
sub
testb
test
pop
pop
sti
xor
mov
mov
enter
lods
shl
roll
sbb
in
xchg
cld
mov
add
ror
sub
sub
adc
jl
addl
adc
in
cli
xchg
fadd
in
push
ret
in
leave
cmp
push
dec
sub
scas
xchg
cmp
cmc
sti
xchg
test
in
inc
or
sbb
enter
shlb
or
int3
jecxz
shll
std
inc
fistl
xchg
push
je
push
fisubs
inc
jne
inc
xchg
ljmp
sbb
push
sub
sbb
mov
mov
cs
rolb
inc
add
sub
mov
lret
sbb
jge
push
mov
mov
scas
arpl
fildl
out
mov
mov
dec
scas
or
inc
push
and
jne
mov
xchg
jp
daa
dec
mov
mov
sub
lret
xchg
cs
cli
xchg
rcll
into
test
push
rorb
xchg
xchg
jmp
add
mov
adc
arpl
dec
fisttpl
out
int3
mov
xchg
push
xor
sub
pusha
xor
fstpt
pushl
mov
enter
push
js
jg
adc
push
sub
repz
shlb
mov
xor
and
lahf
out
ljmp
add
mov
sub
push
pop
rcrl
rorb
or
dec
je
aad
sub
jg
xor
int3
jle
dec
inc
cmp
jae
push
iret
orl
and
test
cltd
or
mov
popf
popa
adc
in
test
shlb
lock
pop
out
mov
cld
cmpsl
jmp
fnsave
or
xchg
pop
mov
popa
mov
pusha
xchg
iret
jmp
out
add
in
add
jmp
push
jne
scas
fstps
jp
dec
iret
sub
in
xchg
ret
ss
sti
std
jae
push
pop
mov
cmp
push
add
popf
lret
int3
mov
or
aas
mov
das
mov
shlb
call
push
sarl
orl
jo
insl
mov
in
pop
push
dec
push
inc
jmp
mov
sarb
sbb
mov
mov
mulb
shrl
aas
rcll
out
ja
shll
jo
aam
shlb
cmpsb
pop
xchg
push
enter
inc
fcmovnu
xchg
sub
and
clc
cmp
jo
pop
loopne
mov
mov
scas
xchg
shrl
inc
push
add
out
mov
test
sub
cs
xchg
cmpsb
fidivs
mov
lock
dec
jo
aam
cmp
into
sbb
ret
stos
popf
mov
or
pushf
dec
outsb
fmull
sub
jmp
cwtl
outsl
cld
xchg
sarb
mov
mov
aam
jge
mov
int3
bound
addl
adc
cwtl
rclb
test
adc
mov
in
out
mov
add
xchg
scas
jno
cmpsb
sub
mov
xchg
xchg
out
in
sbb
xchg
jbe
pushf
jp
fwait
pusha
pop
aas
scas
xchg
mov
xchg
add
cmp
xchg
ficoms
jnp
push
out
shlb
nop
enter
add
ja
stos
jbe
add
xchg
pop
pop
xor
cmp
daa
mov
jno
fistl
cltd
ljmp
dec
rcrl
dec
sti
out
xor
loope
xchg
cmp
lret
or
test
out
or
cld
popf
and
rcll
xor
push
mov
popf
xchg
xlat
xchg
pop
inc
subb
cwtl
out
into
into
scas
arpl
and
test
mov
lcall
add
inc
cwtl
sub
les
shrl
shl
repnz
iret
movsl
xchg
pusha
sbb
adc
xchg
dec
push
stos
lock
outsb
mov
cltd
cmp
fiadds
mov
inc
dec
pop
mov
ljmp
rcl
xchg
mov
negl
movsl
aad
addr16
adc
mov
dec
xlat
mov
pop
mov
loopne
cmp
scas
sete
shlb
xlat
mov
adc
imul
adcb
mov
cmp
mov
add
mov
jmp
pop
stos
shlb
in
adc
or
cltd
push
aaa
push
adc
cmova
ss
mov
loop
xor
xchg
mov
ss
mov
std
ds
jo
xchg
in
and
pop
push
add
sub
mov
sahf
or
rclb
xchg
lcall
add
pop
dec
fs
mov
and
aaa
xchg
out
xchg
mov
fldln2
sbb
scas
push
popf
sbb
push
jl
rcr
dec
das
jb
xor
loop
sub
enter
dec
jecxz
cmp
xchg
jb
aas
cltd
fnstsw
test
sqrtps
sub
pop
int
imul
fidivl
cmp
fldenv
and
pop
sahf
push
add
sbbl
lock
mov
out
shl
fsubrl
jge
mov
ljmp
mov
xchg
mov
fisttps
fsubrs
rcr
mov
and
push
xchg
outsl
sbb
mov
mov
mov
xlat
inc
xor
cmp
adc
int3
cwtl
bound
shl
jecxz
jl
mov
or
lods
jns
popa
scas
pop
pop
mov
inc
pop
scas
aas
cs
sub
push
add
cwtl
add
lahf
adc
sub
fwait
inc
cmp
mov
mov
and
fiaddl
scas
dec
mov
mov
jns
sbb
push
mov
in
cmp
dec
clc
mov
mov
xchg
add
outsl
push
movsl
je
lods
cmpsb
dec
jae
push
loop
pusha
imul
mov
jns
fmuls
imul
lcall
cmp
xchg
sbb
fs
push
add
xchg
sti
ja
idivl
adc
or
into
dec
push
pop
stos
mov
and
sub
mov
jge
inc
rolb
jmp
mov
orb
lahf
loope
jnp
mov
jno
loopne
dec
outsl
sub
rcl
and
dec
jo
cmp
sarl
cmp
xchg
iret
stos
nop
sub
or
mov
dec
sbb
sbb
int
sub
pop
lock
jb
xchg
and
push
fs
inc
inc
push
imul
xchg
rcrb
inc
adc
iret
aas
pop
sbb
xchg
mov
adc
mov
xlat
je
push
add
push
scas
or
addr16
aad
rcl
sub
cmpb
ds
adc
or
xor
mov
mov
xlat
jno
fwait
xor
test
mov
into
out
enter
std
push
and
stos
setb
push
mov
test
imul
rorb
mov
rol
jbe
jmp
rcll
jbe
cmp
or
inc
ja
jecxz
sbb
stc
fs
sub
xor
out
xlat
into
push
push
out
out
int3
je
loop
pop
test
pop
int3
into
popf
lcall
stc
scas
ja
add
in
js
sbb
rcrl
xchg
jmp
scas
popa
cmpsl
jns
mov
outsb
ret
xor
aas
iret
stos
jl
hlt
push
or
decb
cmpsb
push
std
mov
ret
sbb
fxch
outsb
fxch
rcll
jno
add
mov
aad
mov
lea
nop
jmp
loopne
nop
xchg
jo
inc
lds
orb
sub
lret
mov
rclb
add
iret
add
adc
xchg
lret
bound
pushf
or
scas
push
inc
xchg
xor
iret
idiv
inc
fdivl
adc
insb
xchg
add
pop
addr16
mov
xchg
sub
jge
iret
mov
push
pop
sbb
hlt
xchg
cmpsl
dec
and
sub
addr16
stos
js
mov
cld
arpl
mov
orb
adc
add
add
inc
jne
xchg
rorl
mov
inc
iret
xchg
test
push
mov
pop
aam
jge
ja
es
jecxz
cmp
cltd
dec
lods
jmp
shll
iret
pop
jo
sub
xchg
gs
xor
cmp
shrl
aam
and
jecxz
inc
mov
iret
adc
enter
js
in
shlb
pop
and
sti
jle
adc
idivl
and
fs
inc
or
and
test
mov
arpl
lret
push
add
scas
mov
fiaddl
xor
add
mov
or
aam
push
jmp
out
cwtl
iret
out
movsb
cmpxchg
mov
rcrb
dec
aaa
popa
push
mov
hlt
out
lahf
ss
daa
cmp
cmp
cs
sbb
push
adc
loopne
in
scas
mov
dec
mov
in
cmp
push
mov
loop
into
adcl
mov
or
mov
or
dec
adc
dec
jmp
pop
hlt
pop
mov
scas
aaa
mov
imul
push
loop
cs
imul
cltd
pop
jb
or
lea
mov
sub
mov
iret
fisubl
dec
outsb
daa
movsb
cltd
mov
lock
dec
or
mov
movb
xchg
rorb
rcr
dec
jns
nop
dec
enter
subb
push
iret
movl
notb
test
cltd
mov
mov
out
mov
std
pop
jb
outsl
rorb
enter
mov
repnz
mov
jmp
stos
sub
dec
mov
daa
ja
out
sbb
mov
movsl
iret
mov
sahf
out
pop
repnz
rorl
push
lds
in
loopne
bound
out
sarb
bound
sbb
jae
or
and
test
mov
or
dec
mov
jg
movsl
adc
xchg
inc
sub
mov
add
sbb
int
mov
mov
xchg
jmp
ss
jo
mov
xchg
jl
xor
nop
lret
stos
pop
add
ja
adc
shrl
sahf
lods
lret
inc
iret
sbb
or
adc
jnp
xchg
or
inc
negb
or
popa
arpl
lcall
xchg
test
jae
pinsrw
cmpsb
xor
lret
pop
iret
in
cld
out
in
push
xchg
fsts
lock
enter
scas
or
sub
mov
imul
jns
add
scas
outsb
push
in
scas
fs
push
pushf
ljmp
fldcw
fisubrl
rolb
xchg
std
push
lods
dec
jnp
inc
out
sub
push
ds
pop
push
scas
les
nop
mov
dec
jbe
scas
xlat
sbbl
popa
sarb
lds
shl
aam
mov
xor
xchg
aam
xchg
mov
leave
jmp
and
mov
jne
int
push
test
dec
pop
mov
mov
gs
stos
push
adc
xchg
nop
rcr
mov
pop
iret
push
mov
mov
stos
ljmp
pop
scas
imul
fsubr
daa
movsb
sbb
cmp
pop
jno
iret
mov
push
std
cmpsl
or
adc
xchg
or
pushf
jb
fisubl
call
mov
cmpsl
xchg
iret
mov
xor
scas
mov
stos
movl
push
pop
pop
lods
pop
icebp
inc
nop
ret
pusha
in
or
iret
pop
es
dec
shlb
test
movsb
adc
iret
pop
sub
inc
fbstp
test
xchg
ds
xor
lock
add
xchg
adc
cmpsb
cmpsl
sbb
xchg
cs
mov
xchg
aam
js
push
or
and
les
aas
push
mov
mov
add
sahf
mov
clc
scas
fwait
xchg
mov
rorb
in
mov
dec
jo
into
xchg
push
sbb
test
aad
and
and
xor
fs
mov
push
popa
loope
cmp
add
or
pop
sub
scas
sti
lss
mov
icebp
movsl
dec
dec
xchg
mov
lahf
shr
jle
inc
pop
ficomps
iret
jg
enter
in
push
scas
adc
pop
or
out
ja
clc
push
es
ja
shlb
xor
adcb
rcrb
cltd
mov
loopne
mov
scas
or
push
add
xchg
cmp
xchg
jb
test
cltd
iret
mov
sbb
pop
hlt
push
idivl
scas
scas
sti
fidivl
fcomp
ss
rol
pop
enter
stos
sti
into
jecxz
hlt
jg
sbb
and
shll
cltd
scas
push
xor
mov
push
lahf
mov
es
iret
xchg
data16
pop
sarl
cwtl
add
add
jb
inc
mov
repz
xor
mov
cmp
xor
mov
lahf
dec
outsl
sub
mov
add
test
sub
es
gs
dec
mov
add
inc
into
cmc
xor
scas
sbb
inc
outsl
repnz
aaa
sarb
stos
sub
adc
cld
mov
insl
jnp
mov
or
loop
inc
iret
rcr
inc
cmp
in
repz
mov
push
add
outsb
lods
test
and
inc
movl
dec
mov
int3
dec
enter
cmp
out
push
cmc
es
into
xchg
inc
in
xorb
ja
pop
jl
rcll
xchg
mov
push
movsb
rcrb
inc
pushf
mov
pusha
out
iret
push
cwtl
test
ljmp
out
push
jecxz
imull
sti
mov
out
pop
lret
call
cld
jl
xorb
fildll
sbb
scas
jb
push
push
rolb
sub
xchg
iret
mov
xchg
xchg
pop
xchg
xchg
mov
lcall
or
mov
jmp
and
cmc
js
fidivs
movsb
in
add
dec
and
inc
xlat
sub
xchg
sub
js
iret
cmp
jmp
andb
or
mov
mov
ss
adc
mov
lret
jl
mov
aad
xchg
por
roll
js
iret
mov
xchg
rcrl
add
fcoms
and
lods
dec
sub
rcl
cwtl
and
iret
call
sub
lock
pop
xlat
pop
iret
xchg
outsb
cltd
jb
push
mov
pop
ds
loope
scas
push
dec
push
shlb
xor
fisubs
cmp
sarl
xor
inc
ja
shl
pop
fstl
or
in
lods
std
rcrb
arpl
je
pop
imul
xor
inc
or
cmp
xor
mov
cmp
xchg
dec
outsb
xor
push
imul
sti
push
mov
mov
lods
sbb
push
xchg
push
fildl
shl
lret
inc
aaa
pop
sarl
outsl
sbb
sbb
jno
jp
xchg
mov
je
mov
pusha
push
push
shlb
out
inc
cltd
xchg
in
push
jbe
jbe
inc
pop
outsl
sbb
aas
fs
adc
stc
mov
ret
jb
xchg
dec
call
sbb
stos
dec
scas
leave
and
push
lret
shl
cmp
push
iret
mov
lds
out
and
xchg
xchg
or
into
push
insl
test
mov
lahf
sbb
stc
pop
xor
lcall
out
push
fmulp
inc
add
fcoml
inc
les
cmpsl
sub
nop
mov
inc
test
xor
lods
sub
aas
xchg
popf
mov
aas
into
out
ror
lret
aaa
push
add
xorl
scas
jecxz
add
dec
fwait
push
xchg
jmp
mov
pop
jnp
loopne
scas
or
mov
enter
data16
int
dec
popf
mov
scas
or
cltd
push
rorb
je
lods
popf
cmp
rcl
dec
dec
add
mov
adc
or
mov
into
lret
clc
jb
and
xchg
dec
pop
and
jle
push
cltd
push
sub
mov
out
mov
mov
dec
aas
jno
aad
push
scas
jmp
jg
lret
mov
adc
xor
xor
lock
pop
add
jecxz
sti
mov
mov
mov
xchg
cwtl
leave
or
fidivrl
push
cli
negb
cmp
sahf
int3
cmp
xor
ror
mov
hlt
cs
mov
nop
cmp
jae
lods
loope
or
fsubrp
and
in
repz
inc
mov
jl
loope
lcall
js
es
into
add
cmp
loopne
or
rolb
shll
jae
sbb
loope
shrl
lret
js
iret
ss
pop
mov
fdivs
sbb
mov
outsl
adc
adcl
fwait
scas
jo
int
shll
jbe
fldenv
push
lock
or
mov
das
pop
push
sbb
pushl
div
sbb
pop
stos
sarb
jmp
ret
pop
or
add
xor
dec
xlat
stos
xchg
iret
mov
cmp
imul
scas
jno
scas
movsb
xlat
sti
mov
adc
and
push
cmp
int3
add
push
sbb
jbe
fwait
mov
jae
iret
jl
xor
out
adc
dec
hlt
jl
test
push
out
mov
and
add
lahf
lock
push
and
mov
repz
add
xchg
pop
mov
mov
movsb
dec
fidivl
out
xchg
addl
dec
sub
mov
pop
stos
jecxz
call
out
mov
xor
scas
mov
push
enter
es
fbld
pop
jmp
test
jno
pop
hlt
inc
pushf
pop
shl
mov
and
scas
popf
std
xchg
pop
inc
hlt
pop
mov
pop
aad
scas
cmp
fisubs
or
xorl
incb
lahf
into
scas
xorb
push
jmp
jg
and
aad
and
cmpsl
std
ror
cmp
jno
icebp
add
sbb
iret
test
sti
shlb
iret
or
fs
dec
cmc
push
sub
dec
nop
inc
jne
mov
fildll
shl
mov
pushf
mov
or
dec
stc
add
dec
scas
mov
aaa
repnz
push
mov
add
lds
xchg
lods
sbb
daa
cmc
lods
push
xlat
fwait
inc
mov
mov
shrl
mov
cltd
iret
out
mov
pop
xchg
mov
rcr
test
cmc
scas
xor
xchg
sahf
jbe
xchg
cmp
pop
fmuls
and
fiaddl
pop
mov
dec
xchg
notl
pop
into
lahf
es
xchg
dec
scas
mov
sti
shlb
test
iret
gs
ss
mov
inc
sub
je
inc
adcb
mov
xor
pop
xchg
popf
mov
popa
or
sub
popf
nop
subl
rolb
bound
jle
popl
pusha
pop
cld
adc
xor
xor
mov
cmpsb
psubsw
mov
call
into
xchg
adc
or
rclb
cltd
shlb
iret
sti
movsb
dec
inc
insb
mov
cmp
jbe
mov
icebp
movsl
inc
scas
hlt
ficoms
out
cmp
ror
jbe
sub
pop
cli
ror
add
daa
add
xor
sbb
xlat
dec
push
mov
mov
movsb
add
adc
xchg
xor
into
mov
xchg
xchg
sub
push
xchg
sub
dec
mov
pop
outsl
mov
addr16
push
subl
movsl
sub
inc
les
push
sbb
int
movsl
jnp
insb
test
fsubrs
rcrb
ja
lea
add
xchg
or
xchg
inc
test
sti
or
lret
popa
vpmulhuw
mov
test
pop
fadds
cltd
mov
mov
aam
in
and
scas
sub
mov
mov
mov
push
lods
out
scas
mov
sub
rcrb
sarb
xor
mov
in
into
lahf
mov
sti
sub
push
shlb
aam
xchg
or
and
int
mov
cmp
aaa
rclb
xchg
xchg
xor
lods
cli
rcl
and
adc
add
pop
cwtl
pop
xor
roll
scas
push
sub
insb
mov
in
jecxz
lock
rcrb
pop
jecxz
add
test
jmp
aaa
and
lods
ficomps
and
out
mov
ficoms
aad
addl
cmp
jle
into
adc
loopne
jb
je
jmp
sub
into
shrb
jge
xchg
xchg
cmp
mov
xchg
and
mov
lods
or
outsl
lret
ds
inc
outsb
sbb
push
push
scas
xchg
pop
bound
mov
test
lea
mov
jbe
cli
push
dec
testl
inc
sub
xchg
sub
divb
xchg
in
and
pop
dec
lea
xchg
xor
call
mov
xchg
mov
stc
xchg
in
jecxz
mov
lods
aaa
lret
enter
call
leave
xchg
out
cs
or
add
adc
scas
pop
imul
clc
subb
aad
aam
mov
repz
mov
xchg
lods
rcl
sub
push
add
push
sub
rolb
sub
shlb
cld
rorb
loope
lahf
aam
pop
inc
ljmp
idiv
scas
xchg
cmpsl
js
mov
sbb
ret
pop
scas
aaa
jl
mov
aaa
mov
ja
mov
addr16
xchg
in
and
dec
dec
or
push
out
loopne
das
pop
add
loop
ficompl
or
mov
sub
mov
imulb
jl
scas
icebp
lret
rcll
sbbb
sarb
out
xor
dec
pop
xlat
inc
jae
nop
jmp
fs
xchg
in
sub
gs
add
xchg
popa
in
mov
jecxz
rcll
scas
stos
shrl
sbb
fadd
mov
adc
iret
or
push
dec
fcomps
repz
ret
mov
lods
cs
aam
add
inc
test
cmpsb
xchg
cmp
add
ss
xchg
xchg
cs
movsl
mov
push
iret
pusha
add
in
in
int3
into
pop
iret
out
cmp
jns
rcr
lea
cli
in
cmc
and
mov
pop
lret
xchg
les
jb
das
outsl
adc
iret
enter
pop
lock
stos
cltd
sbb
int
cli
test
int3
xchg
push
rcrl
pop
xor
int
movsb
mov
mov
pop
addl
repnz
mov
mov
xchg
dec
inc
mov
bound
test
aam
xor
mov
or
lahf
xchg
inc
cmp
ja
loop
roll
jmp
lock
push
testl
cmp
xchg
adc
ficoms
call
jne
inc
jmp
sub
mov
ret
shll
dec
ret
jle
push
pop
loope
iret
sub
aad
jo
mov
js
shrb
inc
mov
iret
mov
inc
dec
fwait
adc
mov
arpl
sbb
add
lret
pop
jns
jns
add
test
std
or
sbb
fsubrs
xchg
mov
stos
stos
mov
xchg
dec
mov
cmc
or
add
iret
adc
call
adc
lds
mov
int3
sub
std
dec
leave
cmp
push
jp
mov
iret
pop
sbb
test
mov
inc
inc
mov
sahf
jp
inc
rcrb
add
int
sub
xchg
fwait
neg
outsb
int3
ficoms
or
cmp
mov
fcmovbe
scas
popf
fisttps
fcmovnbe
and
or
iret
sbb
cmp
mov
mov
xchg
movsl
xchg
scas
lea
orl
into
xor
cmp
mov
lods
sti
pop
cmp
ret
sub
addb
mov
cli
in
int3
mov
daa
jo
mov
rcrl
shlb
lahf
inc
dec
dec
xor
addr16
das
mov
sahf
mov
mov
scas
mov
cmp
dec
gs
cld
into
insb
es
or
mov
mov
inc
cmpsb
call
hlt
frstor
sub
or
jge
xchg
popl
push
inc
pop
loopne
pop
fptan
in
and
lret
mov
jmp
or
fdivrs
jp
adcl
xchg
loopne
jno
mov
jne
jns
shrb
xchg
sub
adc
ljmp
xchg
jp
push
clc
pushf
sub
adcl
mov
cmp
sbb
push
jo
les
mov
ficompl
mov
cld
mov
pop
adc
imul
pop
leave
push
in
stos
aad
rclb
test
xlat
into
mov
jnp
push
xchg
push
inc
lret
mov
xchg
mov
push
test
lcall
inc
mov
leave
mull
cmc
pop
sarl
test
shlb
sbb
jae
iret
inc
ljmp
xchg
mov
imul
push
sub
push
xor
jb
rorl
cmpsl
shlb
mov
iret
push
or
clc
xchg
int3
push
mov
outsl
frstpm(287
cmp
sbb
push
lcall
rorb
or
xchg
or
add
dec
loopne
adc
xchg
js
loop
ss
mov
mov
fsubr
dec
fwait
push
iret
jne
mov
pushl
and
xchg
data16
xor
pusha
int
sub
lods
lea
xchg
and
stos
lahf
cmp
inc
aam
xchg
setp
shll
add
lret
xchg
cmp
inc
push
cmc
xchg
outsb
adc
insb
mov
dec
call
scas
sahf
lcall
aas
ds
sub
jae
push
dec
push
xchg
add
xchg
stos
sbb
xchg
cmpsb
pop
sbb
inc
add
or
add
inc
jecxz
add
add
scas
jl
dec
push
ds
inc
outsl
movsb
add
adc
sub
scas
cld
in
sub
push
aad
pop
cmpsl
nop
mov
test
add
sub
or
mov
pop
in
mov
rorb
add
into
push
jo
cmp
scas
mov
das
adc
pop
jbe
mov
xchg
push
sub
jecxz
or
rolb
push
rcr
arpl
daa
fmul
jmp
cmp
mov
or
dec
arpl
ret
stc
dec
addl
nop
in
leave
andl
fdivrs
fisttpl
sbb
pop
mov
jne
popf
pop
rcrb
scas
sahf
loope
jge
adc
fcoms
jle
fcomp
fcompl
xchg
call
mov
sub
loope
pop
scas
dec
mov
gs
adc
test
and
ret
and
stos
scas
out
add
rcrb
shrl
mov
inc
push
aam
rorl
sub
push
inc
inc
cs
mov
cmpl
stos
pusha
outsb
enter
jnp
dec
inc
aam
aaa
sbb
fs
cmp
shl
pop
xor
mov
repz
in
push
dec
mov
fmulp
push
sbb
stos
or
push
inc
test
push
clc
add
sbb
mov
xchg
lock
out
imul
pop
or
fisubrl
sarb
insl
int
iret
xchg
or
aaa
mov
out
cmp
cmpsb
adc
bound
pop
sub
mov
pop
pop
scas
inc
ret
shl
push
mov
fnstenv
insl
iret
mov
cs
adc
lret
int3
jmp
sbb
mov
sbb
iret
lahf
inc
xchg
jle
and
cmp
sub
pop
arpl
pop
or
cmp
icebp
push
into
jge
fnstcw
testb
or
sti
dec
shlb
xor
clc
push
inc
dec
inc
cmp
icebp
sub
test
xchg
adc
and
adc
xchg
hlt
pop
shll
pop
cmp
je
inc
or
or
add
ret
fstl
sbb
or
pop
dec
sub
mov
les
ljmp
dec
cmpsl
rol
xlat
pop
cld
xor
inc
cmpsl
lret
mov
test
cmp
sahf
cmc
mov
lods
outsb
test
loop
add
scas
rcl
mov
xor
sub
mov
mov
enter
iret
notl
cld
sbb
js
or
add
out
mov
dec
mov
adc
cmp
rclb
loop
lret
xchg
mov
dec
jbe
jo
inc
cmp
dec
add
pop
adc
test
inc
decb
mov
scas
xlat
dec
pop
shl
movsb
inc
push
loop
xchg
mov
lahf
mov
dec
iret
add
cli
loope
cmpsb
stos
push
xchg
push
into
sbb
mov
scas
iret
daa
mov
or
jb
stc
sbb
xchg
pop
jl
movsl
arpl
rcrb
stos
lea
push
xchg
rorb
jecxz
lret
roll
nop
stos
pop
bound
sub
push
iret
call
lcall
mov
outsl
movsb
add
scas
push
dec
dec
sub
test
mov
aad
lods
iret
sbbl
push
test
mov
mov
push
lods
fsubrs
adc
xchg
adc
cmp
insb
cwtl
lods
daa
ret
scas
dec
sbb
cmp
shll
jne
jae
mov
or
inc
jecxz
adc
dec
or
scas
or
pushl
mov
dec
lcall
mov
cs
loope
mov
mov
xchg
mov
aas
loopne
jnp
cmc
and
sbb
xor
adc
jno
xchg
xor
dec
int
lea
out
cmp
jmp
and
iret
adc
adc
jge
add
int3
pop
lods
push
enter
subb
mov
xorl
es
add
dec
jne
fldenv
mov
rorl
lods
roll
shrb
dec
ss
aad
pop
aam
pop
test
xchg
stos
jle
push
rcrl
out
xchg
mov
nop
jae
scas
cmc
shrb
pop
fldenv
mov
adc
js
shll
dec
nop
push
outsl
cld
push
cmpsl
scas
shrb
fldcw
jnp
scas
mov
or
inc
rclb
or
subl
pusha
pop
xor
mov
dec
push
shrl
rcrl
inc
rclb
pop
ret
inc
je
fs
sub
sub
test
xchg
arpl
or
adc
into
lods
data16
xchg
test
out
push
popl
xchg
pop
sub
cs
adc
xchg
loop
out
adc
and
xchg
and
sub
femms
shll
or
ja
mov
cmp
jnp
sub
icebp
arpl
cmpsl
std
mov
xchg
xchg
ljmp
cmpsb
or
dec
inc
and
fidivs
pop
or
push
repnz
push
sarb
pop
imul
inc
jl
aaa
mov
int3
shlb
mov
out
jb
iret
call
mov
lcall
hlt
or
mov
pusha
out
mov
std
and
mov
sbb
pop
dec
xor
cmpsl
mov
xchg
loopne
mov
in
sbb
xchg
stos
repz
lods
mov
insb
iret
mov
into
mov
jg
loopne
mov
add
aad
je
mov
enter
jno
mov
or
push
push
scas
out
divl
push
mov
ljmp
je
lret
popa
dec
sbb
lods
jecxz
push
dec
fcmovnbe
xchg
iret
pop
xchg
in
xor
or
fisubrl
jae
popf
push
pusha
pop
xchg
lret
jp
outsl
dec
xchg
jle
fbld
adc
adc
das
shll
insb
cltd
cld
jno
cs
mov
and
test
jg
and
xor
cmp
iret
adc
aas
pop
jbe
je
adc
or
mov
adc
jb
xlat
adc
cld
std
and
cmp
mov
out
mov
repz
xor
sbb
aam
ficoml
jmp
pop
adc
sub
jns
clc
xchg
inc
xor
add
jns
lcall
rcll
mov
pop
out
js
push
mov
dec
jmp
pushf
imul
out
push
out
or
or
jne
mov
cltd
mov
adc
push
mov
or
dec
mov
enter
addr16
jp
xchg
add
fcmove
mov
adc
dec
mov
mov
xchg
jg
mov
scas
add
sti
push
mov
je
adc
scas
fstps
and
loopne
rcl
jno
lock
cmp
loope
mov
xor
mov
sti
std
fcompl
mov
out
or
pushf
test
jp
push
inc
lods
xchg
rorb
jg
mov
fs
shrb
call
hlt
imul
fcmovnu
xchg
insb
push
inc
mov
or
push
xor
xor
iret
pop
sbb
pop
xchg
mov
sbb
xchg
mov
call
jo
mov
icebp
or
or
dec
lea
enter
fistl
test
xchg
shrb
mov
ss
popa
js
mov
mov
mov
nop
jb
jb
inc
or
cmp
or
cmp
loop
jp,pn
mov
mov
cmc
popa
arpl
call
jl
lods
data16
rcr
and
add
sarb
mov
cld
scas
dec
mov
pop
bswap
imul
adc
ja
and
or
or
mov
pop
or
add
icebp
mov
int
test
loope
mov
mov
sbb
sbb
iret
pop
fld
dec
arpl
cmp
shrb
roll
cld
into
in
test
mov
pop
pop
or
xchg
shlb
pop
mov
je
rolb
xchg
push
add
rorl
mov
mov
push
xchg
mov
and
jae
shrb
jae
out
clc
xor
out
nop
mov
frstor
mov
std
repnz
push
das
fs
and
in
fstl
cmpsl
pusha
aam
cwtl
rclb
lods
xor
loope
mov
xchg
fidivrs
cmpsl
lea
mov
jo
add
jl
fisubl
cmp
jo
jp
adc
xchg
dec
fldt
es
push
aad
cs
outsl
ja
sbb
sbb
imul
test
and
xchg
or
inc
movsb
xlat
ret
gs
scas
sbb
cli
pop
jno
xchg
push
inc
push
pop
icebp
push
or
xchg
out
xchg
in
sbb
xchg
mov
adc
mov
into
jns
aas
mov
loopne
sub
iret
mov
push
sub
rcrl
mov
pop
shrb
mov
jbe
rol
or
xchg
fmulp
mov
in
out
xchg
pusha
iret
sbb
out
mov
xchg
xchg
xor
inc
inc
sbb
adc
inc
sub
mov
cs
fucom
sbb
bound
shrl
rcl
cmp
push
iret
fistl
mov
xchg
jnp
jmp
int
push
xchg
pop
pop
push
ja
iret
pop
rolb
sbb
dec
das
jmp
iret
cmpsb
int
mull
in
xchg
pop
lds
xor
lea
scas
movsl
movsb
mov
call
push
int3
sub
test
jb
push
pop
dec
int3
and
mov
enterw
loop
mov
fstpl
xchg
push
je
ret
iret
mov
fidivs
xchg
mov
and
cld
or
add
ja
cltd
jb
lret
cmp
sub
ss
dec
push
cli
scas
and
dec
aaa
mov
add
icebp
pop
outsl
cli
fildll
enter
mov
push
clc
jge
cmp
push
adc
pop
ror
pop
ret
repnz
cmp
mov
ljmp
xor
pusha
jle
lods
cmpsb
mov
pop
jmp
sarl
lock
cmpsb
mov
movsb
fidivl
cmc
fisubrs
sub
lcall
adc
add
add
rcrb
mov
movsl
iret
cmp
push
aas
mov
out
cmpsl
xchg
or
ljmp
sahf
fimuls
scas
xchg
outsl
jbe
shrb
xor
sbb
inc
xor
test
xchg
icebp
dec
pop
push
push
popf
and
rol
cltd
or
or
sarb
jno
and
pop
sahf
rorb
subps
shrb
push
add
aaa
es
and
lds
jmp
xor
mov
xchg
xchg
xchg
into
sub
movsl
lds
iret
fnstsw
pop
je
bnd
push
inc
cmp
dec
mov
test
push
arpl
iret
sub
xor
hlt
xchg
inc
int3
sbb
pop
mov
sbb
xlat
dec
add
push
pop
in
loop
sbb
inc
scas
mov
inc
mov
shr
into
fcmovb
adc
adc
inc
sub
lret
xchg
sti
or
outsl
cmp
in
dec
jnp
cmp
fs
adc
rol
xchg
pop
adc
rorl
sbb
rclb
out
mov
lret
icebp
aaa
jg
mov
mov
xchg
sti
rcl
shlb
insl
call
cmp
xor
mov
mov
add
or
xor
test
jb
cmp
dec
shrb
sub
ret
addr16
shrl
xchg
lods
xchg
bound
push
sahf
jmp
inc
mov
mov
mov
leave
sbb
ret
scas
out
stos
data16
lret
jle
or
aad
pop
push
ret
adc
xlat
roll
jle
or
mov
dec
sub
mov
mov
jle
out
imul
iret
xor
xchg
frstor
xchg
leave
fistpll
mov
mov
dec
rclb
push
and
push
scas
inc
ret
roll
sahf
jnp
aaa
stos
and
xchg
push
ds
cwtl
clc
js
sti
sbb
insb
into
add
xor
scas
xchg
insl
mov
popa
xchg
std
xchg
mov
and
add
sbb
jb
aad
xor
enter
in
outsl
xor
adc
outsl
sub
enter
repnz
into
rclb
in
nop
cmpsb
das
jb
lret
iret
int3
mov
jp
xor
and
leave
in
xchg
outsb
les
push
rcr
scas
xchg
inc
inc
ror
mov
test
or
cmp
push
push
sub
sub
aas
cmp
mov
xchg
jno
sahf
or
pop
sub
push
cmp
scas
xor
jns
outsl
mov
icebp
mov
rol
xchg
sbb
or
add
jbe
fsubs
xchg
test
xchg
mov
rol
adc
shl
ret
xchg
leave
jb
push
pusha
xor
cmp
pop
cmp
lcall
mov
pop
xchg
and
les
mov
push
cmp
mov
and
sbb
dec
es
int
inc
daa
dec
xchg
rcrb
push
lds
fs
mov
movsl
popa
fsubrs
and
out
outsl
in
pushf
sbb
loop
add
in
notl
fdivl
dec
fstps
dec
mov
or
push
cmpb
iret
popa
div
ret
gs
jb
mov
adc
mov
cli
stc
jecxz
bound
sbb
lea
jno
iret
loope
jmp
sbb
in
mov
add
out
push
cwtl
jae
shrl
mov
or
inc
mov
cwtl
insb
aam
push
sar
scas
add
sti
shlb
sbb
adc
testl
out
aaa
aam
mov
hlt
jp
stc
dec
das
pop
mov
rclb
idivl
cmp
jl
iret
mov
push
enter
cs
mov
dec
or
data16
loopne
cmp
xlat
xchg
add
clc
repz
push
daa
setp
add
xchg
and
inc
mov
cs
aam
mov
mov
xchg
shrb
stc
jnp
or
rcll
push
in
aas
pop
insl
dec
xacquire
xchg
pusha
mov
xor
sti
sahf
icebp
bound
jmp
sub
pushf
xor
sbb
andb
shlb
push
shrb
das
cmpsb
xor
jge
int
leave
scas
dec
popl
sbb
push
mov
jecxz
jl
scas
std
xor
cwtl
rolb
xor
xchg
ror
scas
adc
leave
push
rcrb
cmp
cmpsl
fidivl
pop
call
aam
adc
add
fistpl
scas
aas
cmp
fcmovbe
xchg
sub
fwait
or
xor
hlt
stc
scas
add
adc
das
jns
stos
scas
iret
out
or
in
mov
lods
iret
repz
lcall
push
iret
aad
sbb
in
and
dec
les
in
dec
mov
into
repnz
sbb
sbb
sub
test
adc
loope
cmc
shr
sarb
xor
iret
add
push
push
scas
ljmp
inc
xor
into
pop
adc
mov
imull
testl
adc
ljmp
xlat
xor
xor
cmp
mov
in
mov
in
fdivrp
mov
int3
or
ds
add
scas
inc
jbe
into
sarb
dec
andl
data16
xchg
adc
leave
push
insl
sub
push
aaa
cld
jno
dec
adc
cmp
push
and
pop
rcll
pushf
sti
adc
xchg
mov
rcll
jl
shlb
repz
mov
cmp
adc
in
push
inc
jmp
outsl
rorl
movsb
adc
mov
shlb
js
mov
jo
rorb
stos
loopne
jo
in
enter
test
and
mov
cmp
add
jne
add
ret
int
hlt
rorb
out
push
push
xor
sub
test
sbb
ja
fistps
add
push
popf
pop
sub
lret
mov
cmp
test
inc
sbb
into
xchg
adc
ds
add
adc
outsb
xchg
push
mov
add
cmc
into
add
jne
mov
sub
pushf
push
sub
fidivl
out
ja
out
in
inc
xchg
faddl
pusha
dec
repnz
mov
inc
adc
shlb
cmpsb
int
int
scas
shlb
adcb
sbb
xlat
test
pop
adc
or
data16
pop
push
fisttps
push
loope
sub
mov
cmc
repz
mov
shll
xor
jns
adc
mov
aaa
clc
or
jnp
lcall
fdivrs
aaa
xor
mov
nop
ja
sahf
scas
lock
mov
sub
ljmp
dec
xor
ret
add
sar
xchg
hlt
dec
scas
repz
popa
dec
adc
mov
jg
push
fwait
sarb
mov
adc
mov
mov
std
ja
dec
not
inc
das
push
stc
mov
hlt
adc
pop
xor
out
mov
mov
jae
inc
rorb
add
or
rolb
and
test
pop
xchg
ljmp
push
cmp
mov
hlt
xchg
sbbb
cmp
inc
inc
push
arpl
fmuls
adcl
into
adc
and
jnp
cwtl
scas
xchg
add
imul
sbb
pop
xor
aas
adc
in
cmp
ret
dec
stos
cld
test
lcall
push
xlat
cmp
in
addr16
and
scas
int3
mov
jns
and
mov
arpl
lods
sub
nop
xchg
cmp
and
push
ljmp
lds
mov
dec
stos
add
push
or
iret
and
push
adc
arpl
push
add
loope
xchg
hlt
into
call
xchg
mov
push
lea
imulb
or
sbb
mov
repz
psraw
sbb
clc
and
data16
ljmp
and
push
arpl
inc
in
rorb
daa
xorps
cmp
loopne
std
lret
fstl
or
stos
iret
lods
pusha
insb
push
mov
and
mov
lods
lret
roll
iret
ret
jecxz
stos
arpl
cltd
cli
xchg
adc
fmuls
mov
sbb
hlt
mov
adc
add
lods
stc
lahf
gs
hlt
pop
sub
imul
int
call
xor
dec
in
in
popf
popf
xchg
add
push
fimuls
ret
inc
scas
add
lock
loopne
dec
popf
or
inc
pop
mov
in
sub
mov
shrb
push
push
push
mov
daa
aad
pop
fbld
jae
pop
test
push
add
rcll
inc
xchg
shrb
lock
outsl
mov
cmp
shlb
mov
push
mov
mov
fdivl
mov
jl
repnz
stc
rclb
ss
push
shl
dec
scas
or
push
sub
pop
add
inc
adc
sbb
push
sbb
rcrb
out
adc
xchg
pushf
testl
insl
mov
add
stos
inc
pop
scas
push
and
sar
and
iret
pop
outsb
std
push
popa
lock
repnz
mov
lahf
scas
out
ss
xchg
iret
add
adc
push
inc
into
scas
ffree
rcrb
shl
adc
test
iret
nop
mov
loope
iret
or
test
add
add
or
ss
pop
jae
dec
arpl
cmp
sub
scas
call
adc
sarb
mov
push
or
les
shr
bound
bound
push
pushf
mov
dec
fbld
cmp
mov
je
shll
mov
xor
into
sub
xchg
jle
cmp
mov
iret
gs
dec
incl
adc
stos
mov
pop
or
iret
in
or
pusha
data16
sub
add
je
test
mull
xchg
adc
xchg
fbld
sbb
or
xchg
pusha
movsl
sbb
xchg
popf
and
iretw
inc
pop
lret
int3
sbb
iret
es
mov
and
popl
shlb
aaa
scas
leave
sub
mov
out
ret
push
out
mov
mov
xchg
pop
add
cmp
jne
das
push
mov
subl
ret
out
test
les
xchg
and
lcall
lods
cmp
jbe
lcall
outsl
into
jno
xchg
mov
xchg
fisubrl
clc
shlb
push
test
aad
subb
cmpb
cmc
pop
or
mov
or
push
rcl
cmp
stos
fdivl
iret
cwtl
or
lcall
dec
sbb
push
stos
subl
add
push
ret
lods
sub
ljmp
adc
xlat
sti
int
loop
pop
xor
sbb
cltd
mov
pop
scas
scas
xchg
dec
mov
sbb
jg
push
jl
and
adc
out
rcrl
outsb
mov
mov
dec
mov
push
or
pop
popa
or
or
or
stc
rolb
les
popa
dec
xchg
cltd
ret
repnz
out
xor
lea
xrelease
mov
sub
shlb
push
xchg
dec
iret
pop
push
xchg
xor
sarb
int3
ds
xchg
test
xchg
fldlg2
pop
xchg
or
out
cmp
inc
into
movsb
xor
scas
cld
jne
jno
jo
lret
and
mov
xorl
mov
push
je
scas
insl
inc
xchg
rorl
fst
stos
leave
out
les
cmpsl
jg
rcrb
jns
adc
xorl
int
scas
jecxz
jg
fcmovbe
mov
fimuls
sbb
jmp
subl
fst
jae
or
int3
aam
xchg
inc
rolb
test
lret
rcll
shrl
stc
pop
scas
mov
test
sbb
int3
nop
nop
imul
aam
adc
sarb
aam
loope
shl
mov
mov
out
push
lahf
jo
lea
ljmp
push
dec
shrb
enter
aam
rol
sbb
sub
rclb
leave
ljmp
mov
sbb
cmpb
jecxz
out
fwait
insb
or
mov
test
xor
sbb
add
rcll
push
pop
inc
aas
cmpsl
dec
scas
gs
cli
mov
mov
mov
dec
outsl
iret
sbb
movsl
mov
ror
ds
or
add
cmp
xlat
imul
add
scas
daa
xor
jmp
jne
movsl
inc
jmp
add
ret
mov
xchg
leave
jno
xor
hlt
into
or
or
mov
adcb
push
popa
aam
dec
lock
and
sahf
in
in
mov
dec
and
inc
sbb
xchg
xchg
xor
pop
fldl2e
leave
stos
push
mov
jnp
xchg
clc
xlat
jbe
pop
add
hlt
dec
inc
scas
int
jo
rorb
out
pop
ljmp
xor
ret
lcall
lock
fdivrp
into
dec
js
dec
cld
das
bound
xchg
mov
repz
scas
and
sti
rolb
adc
lret
fnstcw
roll
sub
jle
push
shrb
and
push
movsb
dec
add
xor
loop
mov
sbb
xor
nop
scas
das
cmp
aad
dec
xchg
adc
jae
mov
out
and
faddl
adc
jns
nop
lret
dec
jbe
repz
ja
iret
addr16
pop
push
xchg
scas
shlb
xchg
enter
dec
inc
cmpsb
inc
nop
xchg
fdivs
xchg
cli
mov
ror
sti
ljmp
jecxz
mov
fists
cmpsl
push
fcomps
loop
iret
movsb
xchg
jmp
aas
out
or
rorb
cmpsb
aas
xchg
mov
test
push
rcrl
loope
in
inc
xchg
scas
gs
or
aas
push
lahf
push
inc
sarl
mov
lret
mov
cwtl
dec
pushf
vcvtsd2ss
scas
jns
scas
orb
loop
pop
xchg
movsb
fisubs
push
lods
test
scas
lret
loopne
out
mov
pop
cmp
das
shrb
cmc
outsb
sbb
mov
mov
push
xor
jecxz
mov
push
xchg
repz
jae
movsl
mov
and
pop
mov
mov
xor
mov
xchg
pop
cmp
sub
and
ficomps
iret
and
andl
or
stc
scas
sbb
out
shll
loope
shrb
sarb
orl
fnstsw
add
sub
adc
cmp
outsb
push
mov
pop
clc
shrb
into
adc
iret
cmp
cld
int
mov
std
lret
sahf
mov
std
lods
mov
and
dec
sub
ret
inc
mull
sbb
in
fwait
mov
mov
dec
nop
out
testb
push
fs
lahf
dec
pop
cmp
data16
repnz
xor
into
imul
out
popf
cmp
rorb
inc
fs
scas
push
jecxz
sub
or
push
push
insl
mov
xchg
fisttpl
shll
or
dec
in
adc
dec
rolb
clc
rorl
jg
mov
fldz
int
xchg
cmpsb
div
adc
iret
fs
jbe
jmp
out
cwtl
pop
cmp
subb
sub
jne
pop
xlat
das
jb
push
dec
loop
lods
and
ficomps
jl
xchg
pop
test
mov
scas
mov
mov
test
pop
add
xchg
movsl
dec
scas
subb
sub
inc
movsl
iret
add
adc
loop
adc
sarl
in
sub
out
sbb
stos
pop
xchg
mov
mov
hlt
cmpsb
mov
cmp
cmc
filds
mov
out
shll
mov
inc
scas
xor
adc
xchg
ljmp
push
test
scas
fsts
in
rcl
jno
mov
push
adc
imul
jg
jle
xchg
gs
jbe
popf
cs
popf
test
shlb
sub
iret
clc
mov
mov
cmp
movsl
xchg
mov
mov
out
xchg
scas
xor
cmp
scas
fidivs
dec
mov
pop
xchg
push
popa
jb
pop
mov
shll
mov
sti
int3
pusha
push
jp
iret
div
in
out
xorb
push
lock
sub
in
sub
dec
rclb
adc
mov
push
mov
in
adc
mov
mov
mov
push
mov
xchg
push
fsubs
iret
add
ljmp
sbb
iret
testb
inc
add
and
das
mov
mov
daa
std
xchg
scas
aaa
pop
insb
sbb
or
ror
sub
or
cmp
push
add
add
loope
sarb
xchg
pop
mov
jg
cmp
sbb
sub
push
dec
sbb
jne
arpl
mov
out
jbe
inc
mov
mov
sub
cmc
xchg
cmp
ds
mov
jmp
mov
xor
push
mov
jle
scas
mov
sbb
lcall
xchg
sarb
adc
lods
fistps
rcrb
jecxz
jne
daa
sti
scas
les
mov
les
or
inc
int
inc
lret
fdivrs
mov
adc
or
dec
es
into
add
xchg
mov
shlb
sti
or
push
iret
push
movsl
repnz
xchg
repnz
inc
mov
nop
ja
lock
iret
iret
pop
test
stc
xchg
cmpb
mov
mov
lock
orl
das
sarb
and
in
mov
iret
push
lds
aad
and
rcrb
icebp
pop
xor
shrb
push
push
nop
testl
setg
jl
movsb
xor
or
ja
dec
ja
or
jno
cmp
jmp
fucomi
mov
adc
pop
aas
cmp
neg
mov
dec
mov
fst
xor
lahf
jp
out
std
out
mov
xor
dec
inc
cltd
rorl
mov
stc
ror
mov
cmp
aam
test
fdivs
inc
gs
lahf
mov
mov
push
sbb
lods
test
ret
cltd
or
cmc
xcrypt-ecb
cmpsl
dec
rclb
xchg
pop
xchg
aad
sub
and
incl
or
add
jb
xchg
dec
mov
add
mov
in
cmc
inc
ret
into
xor
pop
mov
mov
fidivrs
jbe
in
iret
lret
adcl
lret
cli
adc
int
mov
inc
xchg
lock
hlt
xor
mov
ja
pop
nop
dec
add
pushf
push
stc
pusha
cltd
and
push
jno
sbb
scas
shl
fstps
shll
rorl
sub
pop
sbb
mov
insb
sbb
scas
inc
push
loop
cwtl
sahf
inc
scas
dec
xor
hlt
rorb
lcall
repz
xor
mov
adc
pop
pop
inc
fistpll
or
je
xchg
gs
and
inc
pop
cmp
jae
jge
cmp
mov
std
mov
adc
lds
xchg
cwtl
xor
sarb
pop
clc
shl
jae
loope
jno
shll
push
add
xchg
stos
js,pn
add
scas
lds
shlb
lds
mov
lds
clc
push
lods
popa
xchg
andl
mov
rcl
loopne
mov
ss
test
mov
xor
rcr
aam
out
lahf
popf
sub
aam
xchg
push
lahf
dec
stos
and
or
icebp
or
scas
cs
mov
jecxz
mov
xor
popa
mov
lods
int3
sub
sbb
and
push
ret
scas
stos
test
jp
jo
mov
jno
scas
fs
jae
out
mov
mov
mov
mov
mov
in
enter
xchg
lods
cmp
mov
cmp
shrb
fcmovbe
enter
dec
scas
jl
cmpb
cmp
xchg
iret
fcomps
add
sub
jo
lret
hlt
mov
cli
out
and
inc
stos
sbbl
cwtl
mov
and
xchg
mov
mov
sti
jnp
in
scas
pop
cmp
or
imul
pop
and
scas
jmp
lahf
inc
dec
mov
arpl
mov
arpl
push
leave
push
stos
loopne
js
xchg
enter
adc
xchg
sub
pop
jno
test
sbb
cli
leave
push
sarb
aad
cmp
in
mov
and
mov
push
call
inc
lahf
rcll
jnp
sub
rorl
jmp
scas
push
pop
aam
nop
movsb
xor
or
leave
iret
cs
pop
xchg
adc
dec
lea
dec
es
cmpsl
pop
jae
fwait
inc
xor
or
scas
into
popa
cmp
enter
fidivrl
adc
fisttps
test
cmpsb
bound
xor
fs
bound
xchg
iret
movsb
cmpsb
cltd
add
push
test
adc
fbld
nop
xor
and
jge
or
xchg
dec
incb
cmpsl
arpl
fmul
sub
mov
ja
adc
andl
or
or
adc
leave
test
scas
lods
loopne
adc
xchg
push
daa
or
mov
and
scas
adc
ja
insl
inc
mov
add
pop
stos
adc
inc
loop
dec
inc
xchg
adc
cld
mov
cmp
adc
adc
mov
mov
mov
mov
not
adc
jg
push
push
leave
lods
jae
mov
out
mov
int3
push
adc
cs
ljmp
sti
push
divl
imul
push
add
rorb
jb
adc
stos
iret
push
popa
push
cmp
lods
mov
push
pop
adc
in
inc
jb
add
rolb
xor
fsubl
data16
inc
shr
mov
push
mov
mov
xchg
xchg
test
shll
fsub
data16
xchg
push
scas
sub
fisttps
scas
sahf
shlb
rcr
sarl
negb
bound
insl
mov
stc
fcmovu
jecxz
les
scas
mov
or
and
mov
mov
sbb
cmp
jmp
je
repz
inc
movsb
xchg
cmp
nop
push
aaa
xchg
push
scas
mov
imul
rcrl
enter
push
add
das
xor
xchg
cmp
add
xchg
ret
mov
jb
cs
gs
adc
imul
pop
pop
sbb
aaa
and
shrl
xchg
jge
or
add
scas
js
test
das
and
adc
test
sbbl
clc
popa
cmp
xchg
subl
stos
add
shlb
lock
push
imulb
sbb
xchg
adc
cmc
add
scas
stos
or
push
mov
and
leave
adc
imul
cli
or
into
shrl
mov
sti
scas
inc
mov
mov
add
outsl
stos
inc
lret
addr16
pop
xchg
add
movb
mov
ret
scas
sbb
mov
repnz
or
mov
pop
inc
test
xorb
mov
shll
shl
inc
ljmp
in
fmul
in
xchg
xor
push
jl
cmpsl
add
cmp
ret
fisubrl
rorb
sbb
outsl
dec
clc
mov
cmpsb
mov
push
inc
xor
daa
sub
sbb
push
mov
xchg
es
insb
aas
in
cmp
push
push
iret
pop
or
inc
mov
xor
xor
and
into
imul
cmp
fidivrl
mov
scas
loopne
dec
jb
or
out
into
mov
orl
fisttpl
xchg
pop
lods
push
bound
fcmovne
in
test
or
mov
popf
cltd
stos
mov
iret
lock
cmp
adcb
cmpsl
xchg
cld
cld
stos
insb
aam
pushf
add
out
cmc
adc
jb
imul
push
and
sub
movsb
jno
mov
xor
aam
outsb
shr
pusha
and
lret
sbb
dec
lret
dec
cmp
daa
nop
cltd
adc
sbb
jno
sti
jae
jle
inc
mov
mov
fisubrl
lods
push
cld
in
into
jnp
cwtl
pop
lret
pop
ret
js
inc
and
stos
and
xor
cmc
and
movupd
mov
or
mov
in
push
add
movl
push
enter
iret
dec
dec
insl
jno
mov
or
jg
cs
iret
adc
jne
jae
ja
jno
push
or
mov
mov
in
lret
sub
mov
aad
mov
movsl
mov
sbb
enter
jge
or
iret
shll
icebp
add
cld
xchg
stc
xor
cwtl
notb
and
mov
scas
cmpb
scas
stc
push
sbb
xor
fstpt
pusha
dec
pop
and
xchg
and
imul
aas
push
enter
and
int
scas
ret
push
mov
push
dec
mov
sbb
mov
xchg
fsubrl
xor
into
mov
and
fisttpl
jnp
adc
cmp
negb
iret
in
sub
sbb
push
mov
xchg
push
lds
jp
mov
xlat
sbb
xor
inc
jmp
out
sti
mov
mov
inc
xor
dec
mov
sahf
mov
repnz
xchg
out
xchg
sbb
xchg
adc
ljmp
aaa
insb
mov
push
pop
xor
lods
jle
enter
xchg
scas
fstps
fildll
cwtl
enter
jg
shlb
mov
and
jne
fidivs
into
xchg
nop
adc
imul
xlat
xchg
xchg
xor
mov
scas
jbe
fwait
add
rcrb
addr16
daa
addr16
loopne
mov
incb
scas
fs
fst
or
insb
idivl
outsb
pop
loopne
ss
rcl
xor
cmpsb
xchg
out
in
test
ds
ja
inc
arpl
adc
outsb
jle
nop
mov
imul
pop
in
mov
shlb
enter
ror
mov
mov
hlt
xchg
iret
ljmp
sti
js
bound
rclb
ss
gs
dec
shrb
jae
loopne
adc
aad
sbb
dec
jae
sub
fisubrs
repnz
push
mov
int3
dec
pop
popf
cmc
pusha
cmpsl
xchg
negb
mov
outsb
sub
aad
aaa
daa
test
movb
scas
loop
popf
imul
mov
mov
mov
jbe
cmp
mov
loopne
inc
loopne
ss
dec
lcall
mov
jnp
fildl
pop
shrb
test
inc
push
cmpsl
and
outsl
jo
rcrb
in
sub
imul
scas
loope
dec
inc
push
and
jp
lret
push
scas
sbb
movsl
test
clc
call
cltd
rclb
xchg
jo
fstl
xor
sahf
mov
pop
iret
push
add
aaa
iret
out
mov
les
loopne
pop
xchg
adc
sbb
divl
add
popa
push
dec
and
add
and
push
mov
inc
or
and
adc
andb
add
dec
pusha
add
add
add
add
mov
add
add
sbb
add
sub
add
adc
add
add
add
and
push
arpl
inc
add
sbb
and
sbb
add
add
add
add
add
imul
add
orb
andb
orb
movsb
inc
add
or
add
and
push
adc
ret
or
inc
or
inc
and
or
addb
or
xchg
or
mov
add
or
jno
rolb
dec
add
bound
push
add
inc
add
mov
add
jno
add
add
add
inc
add
add
add
add
sbb
push
test
inc
cmp
addb
andl
test
xor
mov
add
pop
push
add
add
inc
add
sub
and
add
loop
sub
sbb
adc
add
or
and
inc
add
add
test
or
andb
add
adc
addb
and
pop
adc
add
loope
add
rorb
mov
add
sub
add
or
sub
addl
add
xchg
aaa
add
adc
dec
pop
lea
add
or
adc
push
sub
add
and
or
add
sub
add
and
add
add
adc
cmp
andb
dec
xor
inc
nop
adc
mov
mov
adc
inc
adc
jb
test
add
shlb
add
mov
inc
mov
xor
ljmp
add
orb
dec
sub
add
push
and
or
add
adc
in
inc
or
outsb
xor
add
rolb
sub
or
adc
inc
add
lds
xchg
enter
add
sub
inc
add
add
or
add
mov
or
adc
add
adc
mov
sbb
adc
adc
xor
add
adc
and
movsl
sbb
or
or
adcl
inc
adc
add
mov
adcl
adc
add
adc
or
cwtl
lock
rorb
add
jbe
adc
cmp
or
add
dec
add
roll
add
add
add
mov
popa
adc
and
mov
nop
adc
mov
or
xor
orb
adc
or
subb
add
inc
add
and
add
add
add
test
add
ret
add
add
add
and
inc
test
add
and
adc
lock
inc
add
rorb
sbbl
or
add
add
add
orl
mov
push
adc
or
add
add
jl
add
in
and
and
or
or
or
rcrl
addb
loopne
add
add
adc
adc
sub
orb
pusha
sub
add
sbb
add
add
andb
add
pusha
add
add
rolb
or
add
and
or
bound
pusha
add
xchg
or
nop
sub
cmp
add
addb
and
add
adc
and
or
or
and
test
and
add
add
and
adc
xor
and
pusha
sbb
add
adc
int3
push
xor
adc
or
dec
test
add
adc
add
sub
add
add
add
mov
xchg
add
push
orb
adc
mov
adc
add
push
and
and
push
add
inc
and
add
shlb
push
add
or
sbb
adc
adc
and
mov
lods
mov
or
adc
add
fmull
or
shrb
add
andb
lock
add
add
dec
inc
sbbb
add
test
sbb
xor
inc
add
adc
and
xchg
rolb
add
mov
cltd
adc
mov
xor
andb
mov
pop
arpl
orb
inc
and
adc
or
add
and
add
loope
push
addb
inc
or
leave
inc
adc
or
or
add
inc
push
mov
mov
sub
add
adcb
or
fs
add
adc
mov
xorb
test
inc
or
andb
push
add
and
xchg
cmp
add
xor
int3
add
addb
adcb
unpcklps
pop
sbb
nop
and
sbb
pusha
mov
bound
addl
inc
fcoms
push
jo
or
adc
inc
and
test
test
add
add
add
jo
push
add
les
lcall
push
or
sbb
inc
add
add
add
movsl
sarb
pop
adc
or
add
add
add
push
cmp
or
add
cmp
cwtl
add
sbb
jo
add
inc
or
add
add
add
and
inc
movsb
and
sarb
add
or
add
inc
jo
push
or
inc
and
mov
or
push
addb
add
push
add
add
sub
mov
sub
addl
adc
adc
xor
add
pusha
cmp
and
jo
mov
add
sub
enter
or
or
add
and
dec
and
add
fiaddl
hlt
mov
adc
add
inc
inc
add
add
add
add
add
xor
mov
add
and
mov
or
push
adc
push
add
addl
add
andl
push
pop
sbb
mov
or
or
cmp
mov
dec
add
add
or
xor
sub
js
cli
or
add
or
mov
or
xchg
or
and
and
mov
pop
test
pop
adc
add
add
adc
add
clc
adc
or
mov
add
inc
mov
or
add
add
or
push
or
mov
inc
andb
add
or
xor
pop
add
add
inc
add
leave
or
inc
or
inc
inc
inc
add
pusha
mov
or
add
add
notl
add
or
inc
adc
xchg
add
inc
xchg
add
rolb
mov
and
rorl
fmuls
add
sbb
inc
mov
and
cmpsl
sbb
add
test
add
add
arpl
lds
add
nop
test
addb
mov
inc
add
add
and
pop
sbb
adc
add
add
and
inc
adc
lds
addb
inc
arpl
add
sub
sbb
inc
dec
add
add
add
inc
push
sbb
push
add
push
outsb
sub
push
sub
inc
xor
or
inc
es
les
cwtl
addb
add
ret
sahf
sbbl
pusha
test
sub
test
and
and
inc
xchg
inc
pop
add
inc
add
aad
dec
adc
add
cwtl
inc
mov
mov
or
adc
test
add
mov
add
push
adc
les
add
dec
add
mov
or
or
pop
adc
xor
icebp
addl
add
subl
add
popa
add
inc
nop
mov
or
sbb
push
sbb
inc
xor
inc
or
adc
mov
popl
add
add
add
loope
push
add
add
sub
adc
xor
inc
xchg
inc
rorb
adc
add
xor
add
and
or
mov
pop
and
dec
push
sub
add
or
adc
sub
inc
adc
mov
pushf
mov
inc
inc
sbb
adc
push
pusha
or
xor
add
and
adc
addb
add
add
or
xor
add
mov
inc
adc
addb
adc
xchg
test
enter
lods
add
sub
add
adc
inc
pusha
mov
and
xchg
and
and
mov
cmp
pushf
pusha
dec
add
orb
and
inc
mov
adc
sbb
cmp
xchg
add
or
add
add
add
add
and
dec
pusha
test
add
push
inc
and
push
inc
add
dec
and
xor
push
or
loop
inc
add
add
and
sbb
bound
add
dec
add
or
dec
adc
rclb
add
mov
add
mov
add
ret
add
imul
inc
add
dec
mov
or
arpl
int3
adc
pop
inc
clc
pushf
push
add
and
outsb
cmp
inc
and
sub
add
and
pop
sbb
add
bound
inc
adc
add
add
or
ret
or
adc
and
add
mov
and
add
push
or
orb
jl
add
add
add
int3
adcb
mov
test
add
add
sbb
test
push
add
adc
push
inc
orb
inc
add
dec
xchg
add
add
adc
sbb
add
or
insl
or
inc
add
dec
add
inc
mov
add
sub
or
and
mov
pusha
adc
add
sbb
add
add
add
pusha
add
and
mov
push
add
add
cmp
cmp
movb
add
cmpsb
adc
add
or
add
add
addb
cld
xchg
rolb
nop
add
xorl
addb
add
test
push
sub
popl
mov
and
cmp
add
sub
add
inc
nop
add
add
push
push
mov
pop
inc
or
and
rorb
or
inc
adc
add
sbb
orb
mov
add
adc
movsb
sbb
ret
lcall
add
jo
and
and
push
dec
orb
add
and
inc
orb
xor
and
or
or
add
add
adc
addb
inc
inc
adc
or
add
test
or
inc
or
sbb
add
imul
addb
xchg
adc
adc
jno
push
add
pusha
and
xchg
test
and
lds
add
jle
or
adc
xchg
or
add
inc
and
test
add
add
roll
andl
inc
or
mov
add
adcb
inc
add
ss
mov
adc
xor
push
mov
pop
add
mov
adc
addb
and
sub
mov
push
cmp
or
rorb
add
inc
mov
add
add
push
es
xor
loopne
rolb
and
add
inc
add
add
adc
fs
add
dec
add
and
or
pusha
add
mov
andb
orl
add
add
and
push
add
add
bound
add
or
adcb
xchg
inc
and
add
add
nop
add
inc
push
and
add
and
xor
adc
sub
add
sbb
shrb
inc
add
pop
add
subb
test
mov
or
in
and
inc
aam
xor
xchg
inc
add
add
add
inc
add
add
movsb
mov
jo
xchg
dec
or
adc
add
or
adc
add
outsb
and
add
or
adc
sbb
add
add
and
mov
adc
dec
pusha
orl
mov
and
mov
adc
add
test
shlb
and
add
inc
add
adc
xor
or
orb
sub
cmp
adc
inc
xor
and
or
sbb
pop
test
jo
imul
push
add
or
lret
mov
mov
mov
or
cmpl
add
test
add
dec
add
test
rolb
adc
inc
add
rclb
inc
add
inc
add
inc
sbb
add
dec
inc
add
add
es
sbb
sbb
add
mov
or
add
aam
add
and
dec
adc
nop
int3
add
mov
push
add
test
push
add
rolb
inc
jno
dec
push
add
inc
add
adc
nop
sbb
sub
nop
adcb
add
fisttpll
add
and
dec
inc
or
add
loope
inc
push
or
sub
adc
pop
push
or
add
add
push
mov
arpl
adc
sub
xor
mov
adc
adc
inc
add
jo
sbb
xor
sbb
add
pusha
and
sub
rclb
roll
adc
add
add
add
sub
rclb
inc
or
add
add
hlt
dec
rclb
movsb
and
nop
add
add
add
adc
push
add
add
inc
aad
pop
sub
pusha
add
or
dec
inc
add
adcb
cmp
add
push
call
movb
fwait
mov
sbb
or
inc
loopne
add
or
and
sbb
int3
mov
adc
imul
test
sbb
or
add
dec
push
or
add
add
test
addb
or
imul
mov
mov
cmp
push
lahf
gs
add
and
and
sub
add
addb
add
adc
add
loopne
inc
dec
or
dec
adcb
push
sub
adcb
adc
or
test
pusha
add
push
add
pusha
addl
xor
orb
or
push
add
shlb
sbb
adc
and
adc
add
and
inc
pop
inc
or
add
sub
add
add
nop
push
rclb
inc
and
or
adc
adc
add
or
inc
rcrb
insb
add
or
mov
addb
push
add
push
or
mov
roll
xor
adcb
inc
mov
cmp
test
orl
add
or
add
dec
add
sub
adc
dec
add
inc
and
les
sbb
mov
mov
mov
dec
xor
adc
dec
addb
or
xchg
add
pop
add
mov
or
add
add
addb
add
and
add
add
add
mov
mov
andl
mov
rolb
dec
inc
adc
add
mov
and
inc
xor
addb
adc
shlb
adcb
stos
addl
insb
test
or
add
add
xor
xor
and
add
xchg
add
add
add
add
adc
dec
dec
or
mov
movsl
nop
add
xor
ss
data16
and
pusha
or
push
add
xchg
add
and
inc
add
addb
adc
or
nop
test
and
or
add
add
inc
add
adc
add
mov
add
inc
dec
inc
or
add
add
xor
pusha
fs
mov
les
xor
xchg
rolb
adc
and
adc
add
dec
add
cmpsl
or
adc
add
inc
add
add
and
adc
add
test
xor
daa
fs
adc
lret
das
xor
mov
inc
add
add
sbb
or
add
cmpsb
push
or
pop
xchg
and
nop
mov
dec
add
add
test
add
adc
sbb
nop
adc
add
rclb
add
les
dec
orl
inc
add
xchg
movsb
add
mov
and
add
add
pushf
add
and
mov
adc
add
and
xchg
xor
xchg
adc
arpl
add
dec
add
inc
sbb
sbb
adc
rolb
or
addb
rolb
roll
push
add
inc
nop
inc
fwait
or
nop
es
and
dec
push
add
and
add
cmp
and
pop
xchg
jmp
inc
test
and
add
adc
cwtl
add
xor
add
add
sbb
sub
mov
sbb
adc
add
add
and
sbb
add
adc
inc
add
leave
pusha
inc
orb
add
and
inc
or
mov
adc
adc
or
dec
dec
mov
dec
add
adc
add
or
or
pop
test
add
inc
push
lock
inc
or
inc
inc
inc
push
add
add
add
adc
inc
and
add
lods
mov
movsl
add
inc
pop
or
add
and
add
xorb
adc
test
mov
aam
add
xor
js
shlb
or
and
add
rcll
adc
insb
pop
movsl
nop
add
orl
xchg
andb
or
mov
add
add
xchg
add
and
inc
and
inc
mov
inc
add
and
add
xor
and
and
add
rol
nop
inc
andb
inc
add
add
dec
and
inc
sbb
add
cmc
mov
and
add
or
or
insl
inc
nop
or
add
adc
add
add
inc
or
add
mov
add
inc
nop
rorb
and
push
or
dec
jo
adc
add
es
add
xchg
adc
xor
sbb
and
or
add
and
push
add
outsl
addb
add
sbbb
add
sub
inc
and
or
pop
xor
add
add
add
adc
mov
add
or
add
sbb
and
xchg
adc
cmp
and
add
push
ret
sub
and
add
inc
xor
inc
and
addb
adc
and
or
or
sbbb
inc
add
pusha
add
adc
inc
adc
popa
push
add
mov
add
or
inc
adc
push
add
inc
roll
or
dec
addb
inc
mov
test
adc
add
addb
add
mov
sbbb
add
add
add
push
adc
orb
inc
add
mov
inc
add
or
push
sub
add
add
sub
add
and
add
add
add
je
xor
xchg
and
adcb
mov
adc
rolb
inc
and
pusha
inc
add
and
cmp
add
lods
jmp
and
dec
xor
rorb
xor
add
or
nop
add
popl
add
add
sahf
adc
test
add
adc
add
movsb
add
inc
add
or
mov
adc
add
add
dec
mov
inc
sbb
or
adc
pop
adc
push
rolb
or
and
inc
xor
mov
or
add
add
push
add
push
add
xchg
and
dec
add
inc
imul
push
mov
mov
bound
push
inc
add
inc
adc
nop
adc
add
add
add
subb
add
add
adc
sbb
xor
inc
add
add
add
dec
adc
adc
sbb
add
stos
add
dec
and
or
sub
add
adc
or
add
and
mov
call
inc
rolb
inc
les
repnz
sbbb
xchg
adc
or
inc
and
andb
fldenv
add
in
add
add
add
adc
pusha
and
sbb
add
dec
enter
add
pop
xchg
inc
inc
add
xor
adc
and
dec
sub
or
and
sbb
adc
dec
test
inc
xor
mov
add
add
sbb
mov
add
add
add
jno
adc
push
sbb
or
outsl
rolb
inc
in
add
add
add
inc
inc
orb
adc
pusha
inc
or
or
and
sub
inc
and
add
adc
call
and
add
or
dec
add
add
mov
or
xorb
push
inc
add
add
push
push
add
nop
add
sbb
add
addb
sbb
test
call
inc
inc
add
add
insl
dec
or
arpl
addb
add
cmp
add
add
or
sub
add
les
test
or
add
or
inc
or
nop
add
inc
sub
add
mov
or
adc
or
pop
adc
inc
or
add
rcll
add
or
or
push
lds
fsts
add
addb
xor
add
mov
adc
add
inc
sbb
add
inc
sub
cmp
pusha
add
nop
and
pusha
add
add
inc
orb
inc
mov
inc
add
loope
orb
or
ret
or
inc
inc
imul
cwtl
add
dec
pop
adc
rolb
jno
xor
and
and
add
or
add
rolb
nop
cmpsb
bound
inc
mov
adc
rclb
inc
test
sbb
test
add
inc
adc
xchg
add
add
dec
inc
pop
inc
pusha
nop
test
cmp
adc
add
rolb
inc
sbb
add
sub
adc
push
add
inc
adcb
or
add
inc
and
adc
inc
add
enter
xchg
push
rclb
inc
mov
inc
inc
jb
and
mov
add
and
sbb
mov
ss
add
and
mov
insl
adc
add
js
andb
add
add
fs
push
cmp
orb
xor
adc
inc
sbb
pusha
add
inc
adcb
mov
add
push
cmp
sub
add
push
add
add
add
mov
or
push
add
or
inc
adc
adc
sub
and
adc
add
sub
add
push
orb
adc
push
inc
add
sbb
addb
inc
bound
sub
lret
rolb
scas
orb
add
orl
add
add
movsl
inc
sbb
aam
addb
adc
and
inc
xor
or
inc
popa
add
add
add
push
inc
sub
and
or
adc
or
inc
or
sbbb
push
inc
addl
inc
adc
movsb
or
adc
xchg
shll
inc
and
inc
add
cmp
adcl
inc
mov
adc
cmp
stos
add
add
add
add
add
inc
or
add
xchg
add
dec
add
mov
inc
or
inc
orb
xor
add
add
xorl
add
cmpsb
mov
addb
mov
sbb
inc
inc
shlb
push
test
in
orb
add
adc
and
insb
and
xor
add
mov
adc
adc
adc
add
xor
adc
or
add
add
inc
and
sub
nop
add
add
mov
fs
or
mov
push
adc
dec
add
adc
inc
adcb
add
add
adc
clc
cwtl
mov
ss
or
psrad
add
adc
add
sub
xchg
add
orb
or
sub
pop
add
push
or
pushf
mov
or
add
add
dec
inc
adc
cld
or
mov
sub
and
inc
push
adc
add
or
js
inc
add
add
and
inc
or
xchg
and
mov
adc
inc
add
add
lods
add
add
test
add
and
inc
inc
rcll
addl
add
add
add
xchg
add
and
and
lcall
dec
pop
add
or
add
add
or
inc
dec
and
scas
add
and
add
adc
push
add
or
and
or
fcoml
and
adc
insb
sub
sub
mov
adc
mov
sub
dec
push
sbb
and
and
test
jl
sbb
add
add
push
sbb
add
or
inc
and
pop
or
add
add
sbb
add
add
xchg
add
and
and
and
adc
and
xchg
inc
or
andb
adc
or
sub
mov
adc
and
inc
add
adc
add
push
or
push
loopne
add
push
cs
adc
inc
add
add
inc
xorl
inc
dec
and
cmpb
sub
add
xor
xor
cmp
adc
inc
add
inc
add
andb
add
inc
add
push
insb
mov
inc
push
bound
test
dec
or
or
sub
rorb
add
mov
push
jo
push
inc
sbbb
sbb
roll
add
adc
pop
add
adc
and
sub
add
push
and
les
inc
adc
push
push
cmp
add
adc
movsb
or
adc
inc
adc
add
add
add
xor
sub
and
adc
and
cmp
add
xorl
dec
xchg
mov
orb
inc
add
test
inc
and
sub
add
inc
or
and
sub
or
push
sbb
xor
dec
add
adc
or
and
lret
add
add
sub
xor
or
add
or
aas
adc
sub
add
dec
inc
and
add
add
mov
sbb
push
mov
xchg
pusha
je
mov
sbb
push
add
inc
xor
and
roll
add
add
or
loopne
add
or
pusha
inc
mov
sbb
or
inc
leave
add
add
inc
inc
add
push
add
dec
test
push
or
enter
rorb
add
nop
sbbb
add
mov
push
adc
adc
sbbb
and
sbb
sbb
leave
test
adc
add
mov
xor
inc
adc
dec
mov
addb
inc
add
and
mov
push
adc
dec
add
add
add
inc
xor
adc
inc
inc
inc
mov
add
addb
nop
add
add
stos
add
and
add
orb
and
bound
adc
and
and
add
add
and
in
add
loop
adc
add
or
or
inc
push
popa
push
dec
mov
pop
pusha
test
add
addl
inc
and
add
inc
add
in
je
and
inc
or
add
and
add
or
add
dec
shlb
mov
xor
adc
or
addl
stos
inc
add
sub
adc
add
xor
add
add
or
dec
inc
sub
push
sbb
rcrb
leave
movsl
and
xor
and
add
inc
add
sub
adcb
or
inc
and
xchg
mov
adc
inc
mov
mov
and
insb
push
pusha
and
xor
adc
add
rclb
inc
andb
mov
and
and
xor
pusha
push
add
add
mov
add
popa
loopne
shrb
popa
sub
push
dec
adc
and
or
movb
or
adc
add
add
or
add
gs
xor
pusha
inc
es
jb
add
add
push
adc
mov
adc
nop
add
ret
push
rorb
sbb
lods
add
add
mov
adc
and
sbb
loop
add
add
or
or
inc
and
inc
add
push
inc
gs
add
add
mov
xor
addl
sub
add
mov
pusha
xor
xor
add
push
pusha
inc
inc
add
inc
add
or
and
xchg
add
adc
dec
add
add
nop
add
mov
cwtl
and
or
push
add
push
xchg
add
pop
lods
inc
adc
ror
pop
and
lds
or
add
xor
add
or
xor
xor
and
adc
dec
test
jo
add
pop
lcall
inc
test
add
inc
orl
push
bound
rclb
movl
add
mov
inc
add
push
add
add
mov
add
add
add
test
add
add
adc
add
leave
add
add
mov
and
adc
add
test
add
sub
adc
add
add
and
or
enter
adc
adc
xor
add
and
push
and
sbb
add
add
add
add
add
xchg
adc
adc
xor
and
cmpsb
add
and
inc
adc
addb
adc
hlt
movsb
push
mov
add
rolb
jecxz
add
adc
add
push
inc
add
dec
cwtl
mov
adcb
and
push
mov
add
push
or
and
les
or
addb
xor
fs
dec
cmp
dec
test
in
js
add
and
rorl
adc
add
add
rcll
add
sub
inc
and
add
add
adc
lret
rolb
and
add
nop
or
and
or
add
add
xor
and
xchg
add
and
adc
les
adc
mov
orl
or
adc
inc
sub
adc
adc
add
or
adc
inc
add
add
add
dec
ss
orb
and
pusha
cmpsb
or
mov
subb
fiaddl
and
or
adc
mov
add
mov
mov
dec
add
sbb
add
or
add
or
xchg
lea
and
xchg
add
insb
ret
mov
adc
adc
add
mov
pop
add
mov
rolb
push
dec
add
and
add
and
add
inc
push
add
add
add
add
adc
dec
add
inc
addb
rorl
clc
adcb
orl
or
addb
push
mov
mov
add
add
nop
adc
add
push
add
adc
push
add
rolb
es
inc
add
cmp
sbb
add
sbb
and
adc
dec
and
and
adc
cmp
add
or
add
inc
add
mov
adc
add
dec
mov
or
sbb
pop
add
sahf
adc
nop
adc
or
or
das
add
and
add
add
add
add
add
lock
add
inc
test
add
nop
sub
push
or
and
leave
dec
push
add
movsb
aam
cwtl
and
add
dec
adcb
adc
orb
adc
add
add
mov
nop
adc
add
and
sub
sbb
les
add
enter
xor
inc
inc
add
xchg
or
adc
adc
add
rolb
add
add
dec
inc
add
and
pushf
and
add
and
xor
or
and
outsb
orb
add
in
test
and
adc
and
andl
add
inc
and
add
and
or
sbb
nop
add
adc
sbb
cmpsb
sub
or
add
sbbl
push
add
add
push
add
add
pop
xor
sbb
add
and
add
addl
mov
inc
addb
pop
inc
add
or
sub
inc
add
xor
add
add
enter
mov
jo
sub
adc
and
add
add
out
or
or
and
sub
or
add
sbb
sbb
orb
add
and
jno
leave
mov
push
adc
jno
xor
test
or
push
aad
add
addb
mov
adc
and
inc
xor
add
adc
add
adc
inc
sbb
mov
nop
and
test
sub
rolb
adc
add
push
inc
inc
cmp
push
pop
rolb
cltd
pusha
add
or
adc
and
dec
adc
and
add
inc
add
mov
add
je
or
subb
pop
in
add
push
add
or
add
add
add
inc
add
addl
inc
inc
adc
or
pop
inc
rorl
sbb
or
or
dec
sbb
xchg
adc
add
add
icebp
add
add
adc
add
test
add
add
add
add
inc
jbe
and
pusha
sbb
addb
orb
nop
xor
nop
and
mov
or
xchg
or
and
and
and
or
popa
jmp
add
sbb
add
or
add
add
add
add
and
dec
or
or
push
sub
mov
addl
or
pop
xchg
dec
sbb
add
add
add
mov
adc
add
add
cmp
add
addl
pushf
or
or
or
inc
and
add
add
dec
mov
xchg
push
or
add
sub
aam
and
mov
and
rolb
xor
nop
lret
jb
ret
or
xchg
sbb
repnz
gs
inc
adc
mov
test
sub
add
dec
ss
or
add
or
add
add
inc
add
ret
scas
inc
cmp
xor
or
inc
or
or
dec
add
inc
and
add
adc
add
add
mov
adc
aaa
sub
add
mov
inc
addb
and
add
inc
cmpsb
rcrb
or
mov
sub
cmp
adc
adc
add
and
mov
adc
or
or
adc
mov
cmp
lret
mov
inc
adc
add
add
test
nop
and
push
popf
adc
xchg
adc
add
or
or
inc
add
push
nop
push
or
test
add
or
lcall
add
inc
add
push
inc
inc
or
subb
and
push
xor
pusha
pusha
add
add
nop
inc
add
movb
in
rolb
add
inc
sbb
mov
add
push
add
add
sub
insb
or
add
sub
addb
inc
adc
call
adc
cmp
mov
add
and
sub
inc
mov
cmp
sub
add
add
dec
sbb
or
rorb
add
adc
xchg
inc
and
leave
or
pop
inc
mov
add
addl
push
or
adc
test
dec
adc
add
add
dec
add
xorb
inc
or
add
add
call
cmp
add
addb
and
adc
mov
add
xor
mov
test
and
pusha
add
adc
adc
and
and
dec
push
add
add
inc
mov
or
rolb
or
dec
mov
inc
add
sbb
loopne
pusha
cwtl
addb
add
enter
orb
test
addb
bound
sub
add
add
add
shrb
adc
sub
add
mov
rclb
cmp
pop
and
int3
adc
adc
xor
jecxz
adc
test
pusha
add
or
mov
xor
add
adc
or
add
or
addb
leave
xor
and
pop
test
loopne
in
adc
sbb
add
adc
xchg
inc
cltd
inc
or
add
ret
inc
addl
or
add
dec
inc
or
pusha
sbb
je
adc
push
inc
add
adc
arpl
add
rolb
add
inc
adc
adc
xorb
add
orl
add
sbb
push
sub
adc
mov
adc
add
inc
adc
bound
add
push
and
or
add
nop
sbb
nop
add
pop
adc
nop
pop
add
add
add
add
mov
roll
add
push
add
and
add
inc
inc
adc
or
add
add
inc
push
sbb
es
inc
sub
or
inc
inc
add
sub
or
popa
sbb
add
add
sub
inc
inc
add
cmpb
add
and
lds
add
adc
inc
dec
and
mov
add
push
and
xor
inc
add
andl
push
inc
inc
inc
loope
mov
add
sub
jns
xchg
adc
add
adcb
inc
add
push
cmp
andb
push
test
or
nop
cmp
sbb
mov
adc
or
add
xchg
add
add
push
mov
in
or
add
push
and
add
add
add
orb
add
add
ret
xchg
mov
or
adc
inc
rol
and
adc
mov
sbb
adc
sbb
push
inc
ret
dec
mov
test
inc
add
add
add
add
loopne
add
mov
xor
or
dec
mov
or
rclb
and
jb
xor
loop
add
add
or
inc
adc
mov
test
int3
dec
rorb
add
cmp
addb
adc
inc
xor
add
inc
andb
add
sub
lea
or
sub
add
loope
sub
add
or
inc
movsb
mov
mov
add
sbbb
add
or
push
xor
add
push
mov
jns
push
sbbl
cwtl
addb
mov
mov
adc
pusha
mov
push
fiaddl
sbbb
add
jno
add
bound
add
pop
add
add
test
add
adc
inc
add
cmp
enter
rorb
fs
or
lret
sbb
adc
inc
add
or
push
and
adc
and
add
loop
add
add
mov
aaa
or
nop
addb
dec
add
inc
inc
inc
sub
push
rolb
test
mov
add
push
adc
add
and
pop
add
add
jbe
inc
add
xor
add
or
add
addb
pushf
and
add
jl
mov
adc
mov
jo
push
add
adc
cmp
push
add
adc
or
inc
enter
jo
or
pop
addb
adc
push
or
shlb
mov
add
lock
add
add
add
and
or
enter
xor
and
add
pop
loope
inc
sbb
inc
sub
add
add
adc
or
and
adc
test
mov
dec
and
add
add
sub
add
pusha
adc
addb
enter
pusha
inc
inc
add
add
push
mov
add
sub
and
add
mov
add
xor
add
or
rorb
or
add
xor
add
inc
add
and
fs
adc
add
pop
jo
inc
add
sub
rcrl
jne
popa
mov
dec
or
add
add
mov
lret
addb
push
subb
pusha
add
faddl
nop
js
inc
add
inc
or
add
ret
adc
and
add
and
add
or
popa
push
inc
dec
and
xchg
mov
add
add
popa
dec
and
or
mov
inc
inc
adc
inc
add
test
adc
add
add
adc
sbb
or
add
or
les
rolb
or
add
or
and
cmp
add
or
addl
or
adc
cmp
inc
add
add
dec
rolb
add
add
and
mov
push
addb
add
addl
inc
cmpsb
or
add
adcl
rolb
add
mov
bound
stos
add
and
or
or
adc
add
or
loop
shlb
mov
add
addb
mov
nop
add
sub
xor
add
and
push
addl
mov
rclb
or
adc
mov
inc
add
sub
push
inc
add
add
mov
dec
or
daa
cmp
adc
add
or
popa
movsb
or
push
sbb
mov
or
add
add
inc
sub
add
pusha
add
add
dec
push
push
inc
nop
addb
and
xor
movsb
addb
popa
or
inc
sbb
sub
pusha
dec
or
add
xchg
push
mov
inc
adcb
add
mov
inc
pop
jb
push
and
inc
push
add
add
adc
jb
dec
movsb
add
add
or
or
add
add
xor
add
add
inc
addl
adc
mov
ret
or
pusha
add
sbbb
movsb
and
movsb
addb
mov
add
inc
push
or
and
orb
adc
add
add
add
add
xchg
inc
push
xor
add
add
inc
add
or
cmpsb
add
sbb
push
and
mov
inc
or
adc
andb
pusha
push
add
inc
orb
add
and
push
add
add
and
or
add
add
sbb
add
sbbb
push
add
addb
orb
adc
or
add
testb
andb
inc
rcl
add
push
add
inc
add
cmp
add
and
add
or
ret
add
inc
sbb
add
add
and
pusha
add
add
add
or
mov
inc
or
add
or
add
inc
sbb
jae
add
cmp
mov
es
loopne
pop
inc
addb
xchg
lds
adc
or
add
cltd
movsb
push
add
or
and
add
inc
adc
inc
add
add
add
and
mov
and
sub
mov
sub
lds
addb
add
sbb
inc
bound
add
lods
inc
add
add
mov
mov
add
stos
pusha
inc
roll
xchg
adc
add
add
mov
nop
cmp
fs
addl
xchg
add
jo
or
rcrl
andl
inc
adc
or
adc
add
add
roll
sbb
and
add
add
movsb
sub
in
add
jo
dec
inc
add
sub
test
or
or
sbb
add
add
movsl
inc
add
inc
inc
push
add
add
adc
adc
add
fs
or
mov
add
sub
cmp
or
and
push
and
add
pop
and
and
or
add
add
sub
dec
loope
add
add
add
and
test
addb
and
adc
xor
and
test
mov
or
add
sbb
orb
add
pusha
or
push
mov
sub
adc
rorl
or
or
add
fdivrs
ret
inc
or
adc
loopne
adc
les
es
xchg
inc
bound
mov
and
or
add
or
and
add
push
adc
adcb
add
imul
sbb
adc
xor
add
add
inc
nop
add
les
add
adc
and
rorl
adc
mov
add
dec
mov
nop
inc
or
add
dec
inc
and
pusha
add
add
dec
adc
pop
or
sub
or
add
push
add
add
add
adc
and
push
sub
add
movsb
sbb
xor
inc
adc
inc
add
add
pop
mov
and
sbb
mov
or
addb
and
lods
add
add
inc
adcb
es
adc
sbb
cwtl
xchg
and
test
push
add
dec
add
in
enter
add
test
cmp
add
nop
adc
add
add
and
or
mov
dec
push
pushf
add
add
andl
add
test
mov
xor
andb
test
mov
or
or
and
or
inc
sub
add
xor
inc
add
adcb
adc
add
adc
sbb
or
bound
xchg
inc
add
add
outsb
push
cmp
adc
push
loopne
adc
inc
adc
nop
add
inc
ret
ret
and
or
add
and
mov
adc
add
mov
call
inc
inc
nop
dec
add
loopne
adc
and
add
and
adc
xchg
add
adc
add
push
or
add
inc
and
pushf
or
add
mov
dec
ret
mov
add
mov
add
sbb
add
and
adc
add
adc
dec
adc
add
rclb
or
test
mov
add
inc
rcll
adc
or
adc
add
add
xchg
add
add
inc
inc
mov
inc
test
push
push
dec
inc
adc
xor
xor
add
push
and
add
inc
push
mov
jb
add
mov
add
pop
or
inc
rorb
or
inc
adc
popa
inc
adc
adc
mov
add
push
push
cmpb
or
sbb
andb
ret
add
add
addb
mov
dec
aam
dec
add
inc
add
andl
add
add
shlb
xorb
sub
xchg
add
push
or
adc
push
repz
add
cwtl
inc
shlb
xor
nop
and
dec
add
inc
adc
addl
xorb
add
dec
and
adcl
add
adc
test
inc
test
inc
adc
dec
adc
int3
adc
jne
orb
inc
add
nop
and
inc
and
add
daa
add
and
test
mov
xor
test
sbbl
dec
add
adc
dec
or
addl
in
adc
adc
add
push
and
roll
add
mov
subb
mov
and
add
mov
push
addl
inc
data16
andb
adc
and
nop
add
mov
mov
imul
add
add
mov
pusha
and
xor
or
push
and
push
mov
sub
add
add
sbb
and
adc
test
or
and
inc
pop
inc
sbb
and
cwtl
push
add
adc
xor
inc
adcb
nop
push
add
add
dec
add
inc
or
lea
add
test
add
add
sbb
imul
fadds
add
addl
test
inc
sub
imul
and
or
add
outsb
or
clc
add
inc
inc
add
add
adc
addb
push
test
adc
nop
push
add
add
add
sbb
jns
add
and
and
add
mov
loopne
add
add
mov
adc
add
lods
test
add
or
addb
out
lds
or
sub
add
inc
add
add
add
add
mov
orb
mov
or
nop
or
add
sbb
or
adc
ret
add
orl
add
inc
mov
in
inc
add
mov
adc
mov
xor
add
push
xorb
and
xor
add
add
clc
add
rorb
and
add
nop
add
push
add
or
test
add
and
inc
sub
add
mov
add
or
test
inc
add
add
xchg
or
loopne
inc
or
inc
add
popa
xchg
mov
mov
or
xchg
sbb
or
sbb
add
or
pusha
xor
push
push
add
add
aam
add
push
add
addl
inc
add
adc
and
add
or
cmp
add
and
adcl
push
or
push
insb
push
adcb
xor
roll
jecxz
or
mov
or
adc
xor
add
inc
add
inc
add
adc
xchg
adcb
inc
xor
addl
or
mov
inc
and
pop
and
add
dec
mov
add
add
orl
mov
inc
add
add
add
or
add
add
or
cmpsb
xor
leave
push
xchg
inc
orl
add
add
add
movsb
and
rolb
cmpsb
shlb
xchg
and
inc
adcb
add
or
test
popa
pop
add
or
inc
pusha
or
xchg
inc
mov
add
or
inc
adc
mov
sub
adc
add
mov
add
inc
add
pusha
push
add
addb
les
add
cwtl
adc
fisubl
cmpsb
push
or
or
mov
add
and
sbbb
add
add
les
aam
push
add
inc
adc
and
add
subl
xorb
or
and
push
add
sbb
and
andb
xor
andl
xor
add
or
dec
push
and
add
inc
loopne
add
mov
orb
rolb
or
dec
pusha
add
pusha
and
adc
push
rcll
sub
or
rolb
subb
xchg
test
and
sahf
xchg
xor
fadds
add
add
in
and
add
push
or
add
xchg
sub
sub
add
add
adc
test
sbb
lds
xor
hlt
add
or
add
inc
inc
or
enter
shrb
dec
or
add
xor
inc
test
adc
cs
loopne
pusha
push
add
add
movsb
andb
test
mov
adc
push
and
xor
and
push
add
addb
inc
add
adc
add
inc
sbb
addr16
ret
mov
or
and
pusha
roll
xor
sub
push
add
andb
cmp
push
inc
dec
andb
or
add
and
mov
add
and
sbb
inc
or
push
or
lret
andl
stos
inc
jno
adc
dec
aad
inc
xor
and
imul
add
adc
add
nop
and
pop
push
and
adc
jl
subb
add
mov
or
sbb
adc
xor
jno
inc
popa
add
or
or
inc
jo
and
andb
add
add
addb
add
add
add
push
mov
pusha
inc
mov
inc
add
mov
push
add
movsb
or
inc
orb
cmp
or
orb
adc
shlb
xchg
adc
nop
adcb
inc
inc
inc
in
push
or
add
and
xor
mov
adc
dec
pop
pop
inc
inc
inc
add
add
add
and
leave
dec
inc
or
sbb
push
addb
add
adc
inc
je
dec
dec
loopne
and
fsubs
push
add
adc
add
dec
ret
add
pop
mov
adc
inc
bound
cmp
inc
add
and
adc
mov
orl
inc
fwait
and
add
add
sbb
es
xchg
shlb
rclb
cmp
xchg
in
and
adc
sub
loopne
scas
xorb
inc
nop
adc
or
add
leave
mov
add
push
push
add
enter
cmp
nop
adc
push
sbb
addb
add
add
jbe
inc
adc
mov
adc
adc
js
mov
sub
add
add
adc
and
icebp
and
mov
and
pushf
add
adc
or
add
add
xlat
in
rolb
adcl
sbb
xor
or
sbb
inc
orb
adc
or
sub
push
add
and
add
and
adc
adc
loope
push
inc
adc
add
adc
adc
pusha
adc
add
add
adc
mov
dec
or
add
sbb
add
cmp
and
pop
and
fsubs
add
add
out
add
andb
mov
and
nop
push
mov
inc
and
dec
adc
add
add
xchg
add
add
jno
or
pop
add
rclb
add
add
add
inc
popa
fs
cwtl
addb
add
add
add
push
jb
or
sub
es
adc
sub
les
sub
add
sbb
mov
dec
xor
add
jo
sbb
add
fwait
adc
cmp
jo
test
add
add
sub
or
push
push
sahf
or
add
and
or
add
pop
and
add
adc
adc
sbb
or
add
or
add
and
xor
add
mov
movsb
add
loope
movb
inc
push
pusha
or
push
les
push
inc
add
add
adcb
mov
inc
or
inc
data16
mov
add
lcall
dec
push
add
add
add
pusha
add
rolb
dec
add
subb
dec
inc
add
add
or
add
add
loope
inc
and
add
adc
loope
push
adc
nop
inc
nop
test
adc
push
or
mov
add
pop
stos
mov
or
lret
dec
adc
outsl
add
add
inc
add
adc
movsl
movl
or
or
xchg
add
ss
mov
adc
sub
and
adc
adc
add
add
add
addb
or
or
add
and
add
es
sbb
sbb
mov
cwtl
adc
addl
adc
add
pop
aam
add
or
add
adc
sub
and
add
in
or
adc
pop
or
movsb
add
add
push
mov
rolb
add
mov
and
add
add
or
sbb
rol
and
mov
or
push
or
cwtl
add
add
out
add
and
or
notb
add
xchg
xor
and
push
lcall
pop
andb
and
es
and
and
adc
push
orb
and
ret
xor
or
pusha
or
adc
add
adc
add
or
inc
add
les
nop
adc
mov
mov
pusha
add
add
xchg
add
xchg
or
add
and
adc
inc
adc
and
cmp
addb
add
adc
xor
jo
je
sub
xor
rolb
xor
addb
and
and
pusha
add
xchg
fs
fwait
add
add
sub
add
and
push
test
dec
xor
shll
inc
cmp
add
or
ret
adc
addl
or
inc
add
or
push
add
adc
cmp
push
xor
push
cmpsb
push
inc
inc
add
add
adc
sbb
nop
addl
sub
add
les
xchg
inc
dec
ret
add
pushf
add
cltd
mov
adc
inc
push
test
add
addl
cmp
adc
sub
add
dec
push
pusha
add
sbb
add
or
lea
sbb
rolb
inc
and
adc
push
inc
nop
int3
and
mov
mov
add
adc
and
add
add
addb
sbb
and
add
rorb
add
push
add
adc
mov
or
xor
es
add
inc
shlb
inc
dec
add
rcll
add
jo
dec
inc
inc
mov
inc
add
sbb
add
add
jb
or
roll
add
push
or
add
sbb
adc
add
mov
and
add
inc
sbb
inc
cwtl
add
adc
and
dec
inc
add
mov
adc
xchg
orb
or
pop
orl
add
mov
mov
test
lea
add
loopne
or
add
add
adc
mov
add
add
cltd
mov
push
rol
add
cmp
xor
and
add
les
add
lret
test
inc
loopne
add
add
sub
xchg
xchg
add
add
nop
sub
and
adc
add
and
dec
dec
add
add
push
adc
adc
or
sbb
test
mov
sbb
add
add
push
or
addl
adc
or
pop
jb
addb
adc
add
or
push
add
pop
add
addb
pusha
add
shrb
add
loopne
and
add
add
add
add
sub
or
xor
add
popf
adcb
subl
adcb
test
xor
or
sbb
orb
add
pop
push
mov
sub
movsb
add
xchg
push
sub
push
add
or
add
add
inc
sarl
push
add
addb
inc
or
dec
adc
mov
add
cmp
lds
pop
inc
push
pop
roll
mov
adc
sarl
rorl
mov
or
andb
cmp
inc
dec
inc
add
mov
mov
or
or
test
andl
or
or
cmpb
add
test
add
adc
pop
add
es
add
add
roll
nop
dec
inc
add
in
sub
push
call
add
push
mov
sub
cmp
je
xor
mov
mov
mov
push
call
push
xor
cmp
jne
mov
mov
lea
push
call
mov
cmp
je
mov
xor
call
push
push
call
add
push
call
add
call
cmp
je
sub
cmp
je
mov
pushl
pushl
call
sub
mov
mov
cmp
je
cmp
jne
cmp
je
sub
mov
cmp
jne
xor
mov
mov
mov
push
push
call
add
mov
mov
add
cmp
jne
xor
mov
push
push
push
push
call
add
mov
mov
add
cmp
jne
cmp
je
mov
mov
mov
sub
mov
push
call
add
push
push
call
add
mov
push
push
call
add
push
push
push
push
call
add
push
push
call
add
cmp
je
xor
mov
cmp
jne
add
mov
cmp
je
add
mov
mov
mov
cmp
je
sub
test
jne
cmp
je
xor
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
push
call
add
mov
mov
mov
and
push
push
push
call
add
mov
mov
cmp
jne
xor
cmp
jne
push
push
push
push
push
call
add
mov
xor
call
xor
mov
or
cmp
je
xor
mov
mov
mov
xor
mov
push
push
push
call
add
mov
test
jne
mov
mov
mov
call
push
push
push
push
call
add
sub
mov
cmp
jne
mov
cmp
je
cmp
je
add
mov
push
push
push
push
call
add
push
call
add
mov
sub
mov
cmp
jne
add
mov
add
mov
test
je
mov
push
push
push
push
push
call
add
mov
push
push
push
call
add
push
push
push
call
add
add
mov
mov
push
push
push
push
push
call
add
cmp
je
add
mov
push
push
push
push
call
add
cmp
jne
xor
test
je
mov
mov
mov
push
call
add
lea
add
mov
push
push
push
call
add
add
cmp
jne
mov
cmp
je
test
je
add
cmp
jne
sub
mov
cmp
je
mov
push
mov
mov
add
call
push
mov
add
mov
mov
call
call
xor
mov
cmp
je
mov
mov
sub
mov
cmp
jne
and
mov
mov
mov
mov
shr
mov
add
push
push
push
push
push
call
add
push
call
add
cmp
jne
push
call
add
push
push
push
call
mov
test
jne
mov
mov
xor
mov
push
push
push
push
push
call
add
mov
mov
mov
sub
push
push
push
push
push
call
add
call
mov
mov
sub
mov
sub
mov
cmp
je
mov
mov
xor
push
call
add
pushl
push
pushl
call
sub
mov
call
push
call
add
addl
push
push
push
push
call
add
mov
mov
mov
call
mov
push
push
call
add
add
push
push
push
push
call
add
mov
mov
push
push
call
add
mov
mov
mov
push
push
call
add
mov
push
push
push
call
add
mov
call
mov
cmp
jne
sub
push
push
push
push
push
call
add
push
push
call
sub
cmp
jne
sub
push
push
call
add
push
push
push
call
add
push
call
sub
push
push
call
add
push
push
push
call
add
mov
push
call
add
push
push
push
push
push
call
add
cmp
je
mov
cmp
jne
mov
xor
mov
mov
mov
push
push
push
push
push
call
add
mov
call
mov
cmp
jne
push
push
call
add
push
push
call
mov
call
xor
cmp
jne
mov
push
push
push
push
push
push
call
sub
mov
push
push
push
call
xor
mov
call
mov
push
push
push
call
mov
push
push
push
call
cmp
jne
mov
mov
push
push
push
push
push
call
mov
push
call
mov
push
push
push
call
add
mov
push
call
xor
mov
mov
mov
mov
push
push
push
push
push
push
call
mov
add
cmp
je
and
mov
mov
cmp
je
mov
xor
cmp
jne
mov
mov
mov
mov
call
cmp
jne
sub
mov
push
call
add
push
push
call
add
cmp
je
xor
mov
cmp
je
mov
push
push
call
add
mov
push
push
push
push
push
push
call
push
push
call
add
push
push
push
call
xor
push
call
add
push
push
push
push
call
add
push
push
push
push
push
push
call
push
push
push
call
add
call
and
push
push
push
push
call
add
mov
mov
cmp
jne
push
push
push
push
push
call
add
cmp
je
push
call
add
push
call
add
mov
cmp
je
mov
xor
cmp
je
mov
add
push
push
call
add
push
push
push
push
push
call
add
call
mov
mov
add
call
push
push
call
add
mov
pop
mov
pop
push
push
push
push
push
call
add
pop
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
call
push
mov
xor
push
call
add
push
push
push
push
push
push
call
add
push
mov
sub
cmp
jne
mov
push
push
push
call
add
push
push
push
call
add
mov
mov
movl
mov
sub
push
push
call
add
test
jne
mov
push
push
push
call
add
push
push
push
push
push
call
add
mov
call
mov
mov
mov
mov
call
mov
xor
cmp
je
mov
cmp
je
mov
push
push
call
add
call
sub
cmp
jne
cmp
jne
sub
mov
cmp
je
mov
mov
cmp
je
mov
mov
mov
mov
test
je
mov
mov
sub
mov
cmp
je
mov
add
mov
mov
mov
or
push
push
push
push
push
call
add
push
call
mov
add
mov
cmp
jne
mov
add
mov
mov
or
je
mov
and
mov
addl
add
mov
cmp
jne
xor
cmp
jne
mov
mov
sub
mov
cmp
je
and
mov
mov
mov
lea
push
push
push
push
push
call
add
inc
xor
mov
mov
cmp
jne
xor
cmp
je
add
mov
mov
mov
mov
mov
xor
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
sub
mov
xor
cmp
jne
mov
mov
test
je
mov
sub
mov
mov
mov
cmp
jne
cmp
jne
push
push
push
call
add
mov
mov
mov
mov
sub
mov
push
push
push
push
push
call
add
mov
mov
mov
sub
mov
mov
cmp
je
mov
add
mov
mov
push
push
push
push
call
add
mov
pop
xor
mov
push
call
add
pop
mov
xor
mov
pop
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
push
mov
push
mov
mov
push
test
je
push
call
add
mov
and
push
push
push
push
push
call
add
mov
cmp
je
xor
mov
rdtsc
xor
mov
mov
mov
mov
mov
mov
mov
add
test
jne
sub
mov
cmp
jne
mov
push
push
push
call
add
mov
and
push
push
call
add
mov
cmp
je
mov
push
push
push
push
call
add
push
call
add
rdtsc
mov
mov
mov
mov
sub
mov
mov
mov
or
mov
mov
mov
pop
mov
mov
mov
cmp
je
mov
pop
mov
pop
sub
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
push
add
push
push
push
push
call
add
push
test
je
add
mov
mov
call
mov
push
mov
sub
mov
push
push
push
call
add
cmp
jne
push
push
call
add
mov
mov
mov
add
cmp
je
cmp
jne
xor
cmp
je
cmp
je
mov
test
je
mov
cmp
jne
mov
mov
cmp
jne
mov
cmp
je
mov
add
cmp
jne
mov
test
jne
mov
cmp
jne
mov
or
cmp
jne
mov
cmp
je
or
cmp
je
cmp
jne
cmp
je
sub
mov
mov
decl
sub
cmp
jne
mov
add
test
jne
mov
cmp
je
mov
add
cmp
je
sub
mov
cmp
jne
sub
mov
mov
mov
mov
add
mov
mov
roll
add
mov
cmp
je
and
mov
mov
mov
rorl
mov
sub
mov
addl
or
mov
add
add
cmp
jne
mov
xor
cmp
jne
cmp
je
mov
mov
cmp
jne
sub
cmp
jne
mov
mov
mov
mov
sub
test
jne
sub
mov
mov
mov
mov
mov
mov
jmp
mov
push
push
push
call
add
or
mov
mov
cmp
jne
sub
push
push
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
add
mov
pop
push
call
add
pop
mov
mov
pop
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
movl
movl
mov
add
push
mov
add
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
movl
mov
mov
lea
mov
mov
lea
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
movl
mov
mov
lea
mov
mov
mov
lea
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
movl
mov
mov
lea
mov
mov
mov
lea
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
cmpl
je
cmpl
je
mov
test
je
mov
movsbl
sub
mov
movb
mov
mov
mov
movzbl
movzbl
add
mov
movzbl
movzbl
xor
mov
mov
movzbl
movzbl
sub
mov
mov
movsbl
mov
movsbl
lea
mov
mov
movzbl
shl
mov
mov
movsbl
sub
mov
mov
mov
movsbl
test
jne
jmp
mov
sub
mov
mov
add
mov
movzbl
xor
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
cmp
je
mov
mov
mov
mov
mov
push
or
mov
mov
cmp
jne
mov
cmp
je
add
mov
cmp
jne
test
je
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
cmp
je
xor
mov
push
mov
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
or
mov
mov
mov
mov
cmp
jne
mov
sub
mov
mov
cmp
je
or
mov
xor
cmp
jne
mov
mov
mov
pop
cmp
je
mov
mov
or
mov
pop
cmp
je
mov
xor
cmp
jne
add
mov
mov
cmp
je
mov
mov
cmp
je
xor
mov
pop
sub
mov
leave
ret
add
inc
sbb
fmull
and
pop
test
hlt
ljmp
or
xchg
popa
icebp
xor
cltd
and
popa
inc
mov
in
rorl
jl
add
arpl
and
inc
scas
int
lds
ficoml
or
iret
cmp
lret
sbb
cltd
push
addl
push
pop
daa
iret
iret
arpl
pushf
add
movq
sub
out
xor
mov
inc
lret
sahf
incb
cltd
mov
pusha
fiadds
iret
add
mov
filds
xchg
ret
mov
std
mov
or
sbb
mov
rcr
mul
xchg
jp
clc
xchg
and
and
mov
lret
test
dec
icebp
sbb
xchg
mov
cmp
xor
mov
mov
addr16
outsb
outsb
dec
insl
repz
shlb
aad
pop
iret
jl
xchg
fwait
std
imul
push
cld
ja
aad
and
int3
lods
rcll
pushf
cli
div
xor
xchg
fisttps
xchg
das
movb
stos
outsl
pop
pop
xorb
push
lods
les
stc
cmpsl
xchg
xor
shll
stc
fistpll
shrb
add
fnstsw
adc
mov
xor
inc
push
and
repz
push
xchg
sti
cmp
inc
xor
inc
scas
cltd
stc
js
fs
and
out
pop
push
fdivrp
lret
rol
lret
leave
rcrb
sbb
lahf
rorl
mov
cmp
or
jl
lock
jo
scas
les
push
xchg
xor
and
push
push
stc
push
insb
dec
mov
adc
pop
mov
jl,pt
pop
sub
scas
fwait
lahf
jo
sarb
inc
and
push
dec
push
mov
lret
loopne
shr
rol
inc
pop
fst
lods
jno
dec
iret
adc
and
mov
cs
add
repz
lock
mov
popa
xchg
dec
mov
mov
sub
je
sbb
xchg
imul
out
xor
out
xor
fdiv
es
cmpsl
out
and
mov
inc
sbb
push
mov
and
ficoms
je
fldl
ljmp
jne
pop
push
std
icebp
sarl
stos
mov
sbb
push
xchg
jae
jne
pop
push
fwait
movsb
cmp
rcr
pop
test
adc
mov
iret
sahf
fbld
scas
mov
adc
and
ret
js
or
scas
stos
mov
xchg
mov
push
inc
movsb
push
xchg
fnstcw
mov
xor
jmp
push
sbb
fisubrs
push
mov
out
out
jo
or
test
pop
stos
aad
das
sub
push
push
pop
push
in
push
hlt
cmp
inc
jmp
cmpsl
jle
lret
test
dec
cmp
cli
xchg
ror
cmp
jne
loopne
inc
into
stos
xchg
aad
adc
cli
adc
fmull
in
stc
sbb
icebp
mov
ss
pop
xchg
iret
adc
xchg
mov
xchg
or
cmp
pop
or
pop
add
sarb
nop
jg
or
daa
iret
cmpsl
test
jae
sti
xorl
std
sub
popa
iret
out
nop
push
dec
mov
rol
daa
cwtl
icebp
hlt
sbb
dec
ds
scas
dec
and
lds
fidivrl
iret
into
dec
stos
inc
scas
arpl
into
test
xchg
outsb
pop
adc
adc
addr16
xchg
dec
icebp
mov
mov
fwait
je
lods
or
mov
and
mov
pop
popf
sbb
dec
or
xchg
out
daa
mov
shlb
call
adc
loop
mov
fmulp
ljmp
aam
jnp
cmp
cmpsl
or
insb
pop
scas
test
xor
mov
cmp
in
pop
sub
and
pop
fisttpll
mov
xchg
cwtl
out
jno
sbb
les
push
or
sub
cwtl
xchg
enter
dec
mov
lret
inc
lret
mov
jmp
jp
push
dec
dec
fstpt
and
or
mov
adc
dec
xor
mov
add
mov
rolb
aam
stc
adc
mov
outsl
cwtl
adc
call
lock
test
jge
and
dec
pop
mov
andb
ss
jmp
into
bound
jmp
push
xchg
dec
mov
push
dec
negl
scas
mov
cmp
shl
ret
pop
jmp
adc
jg
scas
fnstenv
std
add
pop
aam
push
inc
sti
jle
test
pushf
fbstp
and
in
jge
pop
pop
adc
fistps
pop
icebp
push
nop
call
lahf
les
mov
jmp
cmc
xor
mov
xchg
xchg
int
ja
out
cmp
dec
adc
pop
scas
mov
sub
arpl
push
insl
xchg
addb
mov
sub
das
jo
cltd
outsb
xlat
add
and
hlt
jb
push
popa
adc
mov
or
gs
int
das
and
imul
add
scas
mov
cmp
mov
jmp
iret
nop
imul
lea
xor
jne
inc
cmp
iret
mov
rorl
jge
push
jno
cmp
leave
testb
jb
mov
sbb
mov
ret
xchg
or
jno
and
out
inc
sbb
cli
test
int
out
out
pop
pusha
enter
sti
shrl
adc
fcoms
out
scas
lock
imul
enter
hlt
ja
mov
iret
outsl
jmp
mov
jp
xchg
fwait
and
mov
mov
cmp
test
sbb
shrb
movsb
rcrb
mov
addr16
clc
mov
out
lret
mov
out
adc
aad
shl
mov
ljmp
repnz
fucomp
dec
mov
mov
push
repz
into
das
cmp
outsb
arpl
notb
out
dec
xchg
cmc
pushf
xlat
test
add
hlt
inc
stos
iret
adc
and
mov
add
pop
cmp
mov
mov
push
insb
in
xchg
fwait
das
sub
stos
jl
es
inc
dec
dec
ret
mov
dec
mov
inc
movsl
pop
add
dec
test
inc
fimuls
push
inc
je
and
int3
sbb
mov
jo
cli
test
and
lods
ss
inc
mov
or
test
popa
adc
cmp
test
xchg
pushl
int3
dec
add
inc
dec
sub
insl
inc
rcrb
ds
and
iret
ret
int
push
scas
xchg
int
dec
push
add
je
scas
xchg
jecxz
xchg
roll
mov
test
or
addr16
or
xchg
xor
pushf
mov
mov
roll
jb
cmp
cmp
fnstsw
scas
or
pusha
in
dec
pop
mov
cltd
push
dec
iret
dec
fwait
mov
and
xchg
cmc
pop
aaa
int3
call
xchg
cmpsb
mov
xchg
cld
xchg
mulb
xlat
outsb
or
adc
xchg
inc
rorl
jae
mov
fwait
ja
stos
and
mov
dec
dec
loop
adc
cs
pop
popf
jecxz
mov
ud1
rolb
and
cmp
cs
idivl
loope
xchg
add
in
and
inc
pop
fcmovnb
imull
inc
add
les
mov
fnstenv
ret
js
movsl
rclb
mov
mov
jp
push
sbb
fwait
adc
push
rol
iret
out
cmp
mov
xchg
xchg
es
push
sbbb
popa
add
lds
jo
mov
xor
out
sbb
les
push
scas
lds
pusha
inc
shlb
inc
test
push
test
cs
xchg
sahf
adc
lods
int3
mov
mov
mov
cmpb
imul
repz
sbb
fwait
pop
je
dec
mov
or
es
jo
rolb
cmp
cmpsl
cmpsl
rolw
popa
stos
mov
iret
mov
imul
daa
mov
mov
insl
mov
mov
xchg
lahf
mov
cmp
jmp
clc
cmp
adcb
sub
mov
scas
fiadds
cmp
mov
mov
lods
sub
mov
cmp
test
jb
iret
lcall
imul
stos
cmc
xchg
jmp
into
adc
push
in
vmulsd
outsl
fucomip
cltd
std
inc
iret
ds
mov
pusha
rorb
addl
cmp
icebp
push
pop
fnstsw
xchg
aaa
xchg
jae
das
or
pop
mov
fsubs
xchg
cmc
das
insl
ja
push
fcoml
push
xchg
scas
test
xchg
jb
fiadds
push
inc
mov
scas
shld
pop
sar
adc
sbbb
sbb
or
sarb
sbb
flds
add
xor
dec
int3
pop
sbb
xchg
sbb
stos
inc
orb
test
mov
scas
sub
in
push
xchg
mov
or
iret
scas
pusha
push
test
xchg
inc
dec
xlat
sub
aad
jmp
scas
xchg
mov
loope
ljmp
jns
ljmp
test
push
inc
aam
adc
imul
cli
mov
mov
sarl
ss
scas
lods
sub
adc
and
arpl
mov
xchg
fiaddl
in
dec
sub
xchg
and
rcr
xchg
mov
rcr
jne
xor
pop
mov
outsb
and
add
loop
fwait
cmpsl
outsl
adc
insb
dec
or
pop
gs
xchg
pushf
popa
push
jo
outsb
and
into
lret
fsubr
gs
call
in
mov
ljmp
sbb
dec
ja
xchg
pop
or
sbb
and
cmp
ret
stos
or
add
mov
xor
rcrb
lds
rolb
es
in
xlat
push
sti
xor
push
addr16
mov
sub
jbe
outsb
xor
jns
pusha
repnz
mov
inc
sub
mov
dec
mov
out
rclb
je
std
mov
je
dec
out
add
ret
test
daa
sub
adc
cmp
in
mov
mov
add
jae
jge
lods
adc
scas
push
loop
shl
mov
adc
ret
rclb
test
sub
subl
jmp
leave
lcall
xlat
loopne
sbb
pop
xchg
jmp
xchg
add
aam
arpl
ret
xor
call
xor
and
cwtl
fsubrs
mov
pop
sbb
clc
pop
xchg
xor
jecxz
pop
addr16
stc
ja
cld
int3
sti
outsb
cmp
adc
and
dec
rcrb
jne
flds
sub
inc
clc
sbb
fistl
sbb
inc
iret
xchg
les
lret
outsl
mov
fisubs
outsl
enter
pop
lea
or
cmpsb
push
mov
mov
sub
andb
or
push
imul
lods
stos
inc
mov
add
dec
stos
push
mov
test
inc
jmp
loop
push
addr16
add
movsb
adc
xchg
stos
jno
in
lock
rol
add
or
movl
iret
and
in
inc
push
fildl
jnp
ds
xor
sbb
add
daa
xchg
cmp
sub
sub
inc
inc
add
dec
mov
into
cmc
sti
outsl
xor
jae
scas
sbb
inc
rolb
mov
xchg
xchg
xchg
imull
sbb
movsb
dec
push
xlat
adc
cli
sbb
xchg
jecxz
adc
add
aam
ret
scas
dec
inc
imul
add
or
outsl
iret
rorl
xlat
sub
xchg
imul
outsl
mov
mov
sbb
popa
das
rcr
insb
popa
mov
mov
mov
in
push
jecxz
insb
mov
dec
mov
lds
jno
xchg
lret
outsl
push
mov
pop
popa
xchg
push
jae
mov
and
inc
ljmp
adc
test
iret
dec
xor
cld
lds
es
mov
dec
xchg
sahf
cmp
mov
mov
sub
inc
jnp
fcomi
xor
lods
mov
push
jmp
xlat
sub
xor
test
and
cld
sbb
mov
adc
cltd
test
or
cld
xor
loopne
jge
das
jb
stos
xchg
and
pop
out
mov
iret
hlt
inc
fnsave
xor
pop
push
into
jmp
aas
dec
rcll
sti
repz
push
add
xchg
push
xor
pop
orb
aaa
dec
divb
ds
jle
sub
lea
lods
scas
repnz
cmp
dec
push
hlt
ja
push
push
nop
cmp
lret
mov
xor
pushf
iret
pop
jo
test
inc
sar
or
xchg
stc
mov
or
ret
cwtl
dec
or
rcrl
repz
int3
imul
int
mov
jb
mov
sbb
pop
outsb
jo
daa
scas
xchg
jge
mov
xor
data16
mov
pop
adc
lahf
fsubp
aam
mov
jnp
cmp
lret
fstl
cmp
pop
nop
pop
mov
sub
aaa
or
mov
imul
iret
divb
sarl
ja
lret
fisttpl
adc
fidivrl
imulb
ja
or
push
insb
cld
or
jb
push
sub
adc
fs
cmp
stos
repz
xchg
and
mov
cmp
iret
push
xchg
dec
js
push
clc
iret
scas
sbb
or
jbe
lods
fistps
repz
scas
ja
addr16
shr
popa
ja
sbb
push
inc
std
in
mov
addr16
out
cmc
movsb
xchg
das
pop
dec
shlb
and
xchg
hlt
cmpsl
mov
add
xor
bound
xor
testl
adc
sti
xchg
hlt
push
aas
push
xchg
ds
lret
out
test
fucom
push
scas
icebp
cmp
xchg
rclb
jg
sbb
cmp
pop
pop
loopne
into
sub
movsl
adc
xor
imul
aad
fiaddl
mov
call
out
mov
cmpsl
xchg
pop
test
xorb
lods
push
jp,pt
xor
mov
lgs
aad
roll
icebp
sarl
test
push
xchg
add
jno
clc
inc
jo
jo
loopne
cmpsl
scas
sub
or
bound
jae
loop
push
adc
mov
shl
pop
jecxz
imul
add
sub
fwait
ja
mov
sub
shlb
push
mov
xchg
popa
push
scas
fisubrl
repz
nop
sbb
mov
adc
aam
mov
mov
xchg
in
xor
mov
int
dec
sahf
add
pop
jp
mov
in
scas
pop
jnp
pop
ret
cmp
fcompl
loopne
xchg
sub
loopne
jle
mov
scas
std
imul
or
mov
rcr
cmovs
xor
dec
aaa
or
lea
pop
sbb
sbb
shlb
outsb
iret
dec
repz
shrb
iret
mov
imul
cmp
inc
sub
mov
rcrl
repnz
add
mov
xchg
arpl
sarb
cli
into
sbb
sbb
daa
scas
in
and
pop
or
int3
pop
xchg
push
scas
dec
rcrb
rorb
call
iret
scas
lret
pop
sub
lret
cltd
ljmp
xor
shr
jle
dec
cmp
out
nop
push
xor
mov
rol
loope
xchg
in
xchg
mov
push
pop
push
negb
xchg
stos
insb
sub
jecxz
mov
push
mov
in
push
xchg
sbb
out
xchg
pop
adc
inc
out
loope
in
pop
out
jae
cmp
sbb
push
jbe
adc
xor
push
and
insb
hlt
sbb
sarb
mov
sub
daa
push
nopl
out
fmul
jb
iret
lcall
mov
loopne
xchg
cmp
mov
mov
rcl
fbld
gs
into
inc
jns
cld
in
or
lds
pop
and
jb
sbb
sub
addr16
cmp
fildll
shlb
xor
into
fsubr
leave
pop
jle
in
xchg
cmp
dec
test
cmpsb
sub
aaa
scas
dec
mov
imul
in
or
and
or
jl
int
gs
jmp
xor
pop
iret
xchg
leave
mov
rcll
mov
mov
pop
cmp
inc
jo
sbb
insb
or
dec
flds
cs
xor
insl
scas
fcoml
push
jecxz
loopne
mov
mov
xor
testl
adc
push
or
clc
sti
add
dec
mov
js
mov
jecxz
iret
and
cmp
mov
fdivrl
dec
scas
leave
cmpsb
xor
test
mov
test
xchg
stc
in
nop
xchg
neg
lret
sub
rclb
push
mov
ljmp
mov
loop
pop
je
aad
adc
aaa
xchg
xchg
and
xchg
xchg
lcall
xlat
lahf
cmp
inc
scas
push
jg
lret
popa
lret
pushw
dec
int
iret
cld
insl
mov
or
pusha
xlat
sbb
push
push
iret
mov
aaa
data16
fbstp
dec
push
cmp
mov
insl
iret
mov
add
xchg
xlat
jge
cmp
scas
insl
mov
mov
mov
xchg
sub
pop
jg
aad
setle
sbb
rcll
pop
test
add
xor
push
mov
shll
sbb
mov
ret
lea
adc
xchg
cmc
xchg
mov
sbb
mov
jp
pop
xchg
imul
and
es
ficoms
pop
dec
cmp
sbb
sarl
mov
cli
xchg
xchg
cwtl
icebp
rcll
and
incb
dec
jp
or
pop
xchg
nop
into
jp
inc
repz
in
outsl
outsb
fildl
sti
cmp
es
cld
das
in
imul
mov
push
lods
test
mov
daa
xchg
nop
mov
mov
inc
mov
les
outsb
outsb
adc
pop
jl
mov
outsl
ret
mov
xchg
sub
leave
loopne
mov
mov
xchg
sti
xchg
scas
stos
stos
or
sbb
mov
lahf
scas
int3
and
xchg
pop
into
dec
int3
mov
jmp
bnd
rcll
lock
sub
or
mov
jle
jae
and
xchg
xchg
sbb
ret
xor
lods
pushf
shlb
in
pop
mov
lcall
or
jbe
mov
jmp
rclb
mov
aam
xchg
push
imul
mov
iret
cwtl
les
addb
lods
and
imul
cmpsb
mov
mov
xchg
outsl
xor
fcomps
mov
mov
jns
add
adc
arpl
xchg
dec
aas
test
mov
test
xchg
or
sahf
xchg
pop
scas
and
outsl
push
fnstenv
out
test
xchg
aas
dec
cld
mov
lret
jp
ror
push
popa
insl
fmuls
popf
xchg
imul
and
sbb
or
pop
movsb
addb
fcoml
stos
xchg
cmp
bound
lea
sbb
inc
cmp
inc
loop
data16
cs
adc
out
xchg
push
rcr
mov
outsb
push
sbb
scas
push
adc
sarl
dec
aaa
inc
add
int
or
loop
fs
cmc
push
pop
jns
popf
mov
sbb
xchg
in
inc
adc
int
xchg
sbbl
shl
sub
mov
arpl
pop
nop
into
sub
cmp
push
loop
inc
xchg
push
mov
sahf
jno
mov
aam
iret
mov
cmp
inc
sahf
xchg
dec
mov
call
sub
shrl
sbb
adc
mov
xchg
xchg
pop
xchg
lret
shrl
loopne
pop
dec
cld
fists
test
pop
fidivrs
jg
scas
fimuls
call
scas
add
insb
fadds
es
sbb
add
or
rcrl
push
sbb
in
repz
out
add
inc
pop
insl
aaa
push
insl
fsubp
jo
xchg
and
inc
mov
pop
sbb
push
negl
fwait
arpl
test
sub
loope
sbb
pop
je
scas
aas
sbb
out
in
jp
lods
iret
mov
sub
push
cltd
imul
and
iret
lahf
data16
stos
fucomp
scas
push
cmp
or
mov
and
push
xchg
idivb
iret
mov
add
and
sbb
jg
js
xchg
inc
or
inc
sarl
ficoms
mov
cs
mov
pop
or
add
push
stos
xchg
fisubs
cmp
mov
iret
xchg
pushf
aad
pop
add
add
lcall
xor
loop
out
call
rorb
jnp
cli
out
jae
scas
cmpsl
sub
jge
jge
pop
pop
xor
mov
fmull
add
add
inc
iret
mov
mov
push
fwait
jno
arpl
adc
mov
cmp
or
add
leave
cmp
push
sahf
or
test
stc
sbb
rcll
mov
and
into
sub
bound
cltd
daa
pop
mov
iret
and
rcrb
pop
fisttpll
xor
inc
pop
and
fucom
inc
arpl
and
dec
mov
ret
ja
enter
push
pop
aam
sbb
icebp
mov
xchg
ljmp
lea
xor
jnp
or
movsb
pusha
mov
and
cmpsb
je
scas
mov
mov
imul
clc
mov
rcr
mov
mov
adc
rclb
lea
sbb
inc
movsb
dec
cmp
xor
rcrb
ret
jl
xchg
sub
xchg
nop/reserved
and
fs
mov
scas
fcompl
clc
out
or
xchg
mov
insb
out
orb
gs
popf
lret
mov
test
xlat
cmp
in
rorb
push
cwtl
arpl
push
and
push
xchg
xchg
fsub
fmull
xor
add
imulb
xor
call
cmc
inc
dec
inc
sbb
out
or
pop
add
dec
dec
and
add
ret
rcrl
jnp
nop
popa
mov
push
mov
sub
push
xor
cltd
popf
push
stos
xchg
movsl
js
imul
xor
insl
pusha
mov
cmc
push
push
jge
mov
dec
iret
aaa
in
faddl
in
mov
mov
rcll
mov
or
mov
jge
and
mov
pop
das
or
out
cmpsl
adc
push
std
jne
cs
push
iret
mov
mov
xchg
xorb
or
ret
mov
mov
cmp
or
shr
fcmovbe
fs
xchg
pop
imul
ja
push
xlat
jle
jo
push
cltd
inc
rorl
mov
iret
out
in
icebp
sub
mov
flds
adc
cs
xchg
inc
push
add
scas
cmp
adc
repnz
mov
sahf
push
iret
or
addl
push
mov
shlb
push
fcmove
add
push
lock
xchg
insl
test
ss
repz
jb
pop
add
lret
push
push
stos
pop
mov
imul
cli
aad
mov
xchg
sub
sub
popa
and
call
incb
mov
jnp
out
push
mov
js
and
mov
sbb
inc
mov
jle
iret
cmp
sub
add
xchg
add
mov
add
push
or
xor
add
add
and
add
pop
add
sbb
inc
inc
add
adc
adc
add
inc
add
add
add
adc
add
and
add
add
mov
inc
xor
or
adc
addb
inc
add
push
add
pusha
les
inc
inc
sub
inc
adc
add
addb
push
add
inc
addw
add
add
mov
add
or
adc
add
add
loop
or
add
inc
add
add
push
add
add
add
cmp
sbb
inc
add
add
inc
adc
add
mov
add
mov
and
mov
pop
add
add
and
xor
and
adc
inc
add
or
push
or
sbb
sbbb
add
adc
inc
xor
dec
adc
add
and
add
xorb
test
cmpb
add
dec
sub
bound
adc
arpl
es
or
movsb
addl
addb
inc
add
addb
inc
push
sbb
imul
or
and
push
inc
add
add
adc
add
mov
loopne
adc
adc
add
popa
push
addb
adc
adc
add
adc
add
and
add
add
add
sbbb
add
out
add
push
add
addb
andl
add
sub
and
or
or
nop
add
les
pop
and
or
add
sbb
inc
inc
add
add
and
inc
mov
mov
push
add
sub
pop
inc
dec
add
add
push
add
add
and
xchg
adc
sbb
int3
add
adc
andl
add
add
push
add
or
inc
add
add
add
add
add
add
rcrb
adc
add
mov
add
add
or
or
add
sub
inc
inc
lret
push
inc
add
rclb
push
add
add
add
dec
or
add
add
sub
inc
add
add
inc
andb
inc
add
add
and
inc
add
add
xor
addb
add
or
pusha
add
adc
add
andb
add
add
addb
and
add
cmp
inc
add
and
mov
ret
add
sub
adc
add
add
add
push
add
add
adc
loopne
and
sbbb
add
and
add
add
adc
or
dec
test
dec
and
inc
or
rolb
or
add
pop
push
mov
inc
add
or
inc
xor
add
roll
add
xor
add
and
add
bound
add
inc
test
or
add
dec
and
and
adc
inc
or
pop
push
add
add
test
or
mov
sbb
add
add
add
add
mov
sub
popa
add
add
and
inc
add
add
add
mov
adc
addb
add
addb
add
rolb
and
lcall
add
inc
inc
dec
nop
inc
add
inc
addl
add
rolb
mov
add
addb
test
aam
pusha
adc
add
rorb
add
add
add
add
adc
xchg
mov
mov
sub
inc
add
roll
and
xor
adcl
inc
pushf
and
add
add
xor
adcb
pusha
stos
add
inc
add
and
and
sub
add
inc
add
addb
and
or
add
add
shlb
sbb
add
adc
dec
add
sbb
add
inc
add
popa
adc
inc
add
and
add
and
add
sub
inc
pusha
add
mov
push
and
add
add
inc
addb
add
add
add
dec
add
shlb
jno
inc
push
xchg
jp
and
add
inc
adc
inc
adcb
addb
add
or
or
push
inc
and
sub
add
jo
or
inc
inc
push
add
or
inc
pusha
inc
add
cmp
xor
pusha
xor
mov
add
scas
add
add
nop
add
orb
add
cwtl
mov
inc
or
add
add
xor
sbbb
adc
and
add
add
test
add
or
or
jo
add
mov
addb
fiaddl
add
adc
add
add
xchg
popa
add
add
inc
add
or
add
sub
add
pop
dec
add
add
inc
add
or
add
or
add
inc
and
sbbl
add
aam
push
add
sub
inc
and
or
adc
add
and
stos
dec
xchg
add
add
add
add
inc
and
add
add
add
inc
add
inc
add
add
andb
or
addl
add
add
add
sbb
and
inc
inc
and
nop
add
add
add
orb
adc
add
cmp
add
add
add
inc
mov
addl
cmp
and
or
or
adc
or
pop
push
add
push
add
pusha
test
add
inc
dec
and
inc
add
add
or
test
or
fmull
add
add
add
dec
or
adc
add
outsb
andb
adc
add
addl
inc
adc
add
add
orb
mov
roll
test
add
and
addl
add
add
and
add
adc
add
or
add
inc
pusha
bound
mov
or
or
add
add
push
or
rolb
inc
add
add
adcb
andl
add
add
mov
adc
outsb
rolb
or
add
add
adc
sub
add
add
add
add
or
andl
and
add
push
add
add
push
sub
add
add
add
pushf
add
add
inc
inc
sub
and
fs
inc
mov
sbb
sub
adc
or
mov
arpl
andb
add
pop
add
add
inc
and
or
inc
and
xchg
add
add
rolb
add
add
add
or
aam
inc
add
add
mov
dec
inc
add
inc
inc
add
add
shlb
add
add
or
adc
add
add
add
add
or
addb
or
add
pusha
add
nop
add
add
xorl
loope
arpl
pusha
inc
cmp
add
inc
inc
mov
add
and
add
mov
xchg
or
push
adc
sbb
sub
add
add
push
inc
adc
sub
push
add
add
adc
or
addl
add
dec
or
push
inc
add
inc
add
bound
inc
inc
add
inc
push
adc
inc
mov
dec
sbb
inc
adc
add
adc
add
add
add
xor
movb
or
lock
add
and
sub
cwtl
inc
or
cwtl
xor
push
add
sub
add
add
and
add
bound
or
add
and
or
adcb
movsl
add
add
xor
add
push
inc
add
add
or
push
inc
add
add
inc
adc
add
add
add
sub
add
or
inc
or
and
add
add
add
test
adc
or
add
add
mov
nop
or
shlb
add
add
inc
add
dec
or
inc
adc
add
add
add
cmp
nop
inc
or
push
add
add
xor
andb
add
or
or
xor
or
dec
popa
push
sbb
rorb
pushw
roll
inc
add
push
add
inc
js
mov
bound
and
and
add
add
or
and
dec
add
addb
rolb
add
adc
nop
inc
add
and
add
or
sbb
push
add
add
and
or
add
xor
dec
or
and
adc
or
add
add
inc
cmp
or
mov
adc
adc
inc
addl
adc
add
add
add
or
addb
add
or
add
adc
sub
xchg
add
add
add
add
adc
push
add
adc
and
xchg
sbb
adc
and
xor
fsubs
enter
add
mov
ret
adcb
add
push
add
add
sbb
adc
addb
add
or
adc
mov
add
inc
adc
xchg
adc
adcb
xor
add
icebp
adc
mov
add
sbb
addb
jb
inc
add
or
dec
add
add
add
add
add
addl
add
adc
inc
mov
insb
adc
add
or
add
mov
add
or
add
add
add
inc
cmp
add
add
addb
es
and
add
add
inc
adc
or
add
add
nop
add
add
inc
add
and
inc
rolb
and
adc
inc
or
add
add
inc
add
add
mov
adc
add
or
xor
inc
add
inc
adc
adc
rorb
push
add
add
add
addb
inc
add
add
add
pusha
add
add
mov
add
cmp
xor
add
add
add
add
movb
add
jge
nop
nop
xor
lock
add
add
or
inc
add
add
or
adc
dec
mov
mov
sub
cmp
adc
add
xchg
add
inc
add
add
add
fs
add
add
or
and
add
nop
add
add
and
and
add
addl
or
add
and
enter
les
pusha
push
add
add
test
add
add
pusha
add
mov
and
adc
push
add
loopne
or
adc
sub
add
adc
add
add
or
mov
inc
add
dec
add
sub
add
add
int3
add
addb
movsb
add
sub
rorb
dec
mov
addl
test
add
add
or
or
dec
fcoms
xor
adc
sbb
popa
add
inc
add
add
test
add
sbb
add
and
bound
add
insb
pop
ret
adc
add
enter
add
xor
dec
adc
adc
add
add
adc
dec
add
addb
adcl
or
test
inc
sub
or
or
add
mov
xor
add
pusha
add
sbb
dec
or
add
nop
inc
add
and
add
add
add
add
add
or
add
push
inc
add
push
or
xorb
or
inc
push
or
test
rolb
inc
sub
add
rorb
add
test
or
adc
or
mov
add
faddl
dec
or
addb
rcrb
add
adc
add
and
add
mov
or
or
add
and
pop
add
addb
test
add
push
sub
ret
add
or
or
mov
add
add
mov
or
inc
add
rolb
add
add
push
add
xor
add
sub
inc
add
add
inc
add
add
add
cmp
add
add
push
and
test
inc
inc
or
and
or
addb
push
data16
and
and
add
add
adc
or
addb
add
push
add
leave
xor
add
test
addb
data16
add
enter
add
adc
and
enter
add
add
inc
inc
add
andb
sub
add
and
ret
or
and
inc
add
or
or
add
addb
adc
pusha
add
xchg
add
push
call
add
or
inc
.byte
.byte
.byte
dec
mov
add
fdivl
add
shlb
add
add
add
add
pop
mov
add
mov
add
add
add
add
jl
add
inc
mov
add
mov
add
mov
add
mov
add
mov
add
add
cmpsb
mov
add
add
sub
add
push
add
fdivs
add
xchg
mov
add
add
add
mov
add
push
mov
add
loop
add
in
mov
add
pop
mov
add
add
clc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
les
add
push
mov
add
xor
add
pusha
mov
add
add
mov
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
lcall
add
add
xor
add
call
mov
add
mov
add
inc
mov
add
pop
mov
add
mov
add
jo
add
cmpb
add
mov
add
les
add
dec
mov
add
add
add
adc
add
insb
mov
add
repnz
add
and
add
sub
add
add
out
add
xchg
mov
add
mov
add
add
add
add
add
mov
add
les
add
add
add
cmp
add
cs
add
xchg
mov
add
jo
add
cwtl
mov
add
dec
mov
add
sarb
add
mov
add
mov
mov
add
mov
add
jb
add
adc
add
mov
add
sbb
add
hlt
mov
add
sarb
add
add
inc
add
inc
add
sbb
add
mov
add
subb
or
add
rolb
hlt
sbb
add
dec
inc
inc
push
xor
cs
insb
add
add
arpl
inc
gs
jb
jbe
jb
gs
jb
jo
imul
add
fs
push
push
xor
add
add
jo
insb
gs
outsb
jne
add
add
arpl
inc
gs
jb
jbe
jb
gs
jb
jo
imul
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
jb
popa
je
dec
popa
imul
add
inc
gs
je
dec
popa
outsb
fs
add
add
push
jp
jo
arpl
imul
push
imul
jae
gs
push
imul
outsb
jbe
insb
imul
jae
insb
gs
dec
inc
imul
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
dec
outsb
addr16
inc
add
add
dec
outsl
popa
fs
imul
add
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
add
push
gs
imul
bound
push
arpl
add
inc
gs
gs
arpl
outsl
ja
jb
je
je
add
add
jp
outsl
push
gs
jne
arpl
add
add
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
js
add
add
outsl
bound
inc
insb
insb
outsl
arpl
add
push
gs
jb
push
inc
add
add
je
outsl
arpl
gs
outsb
outsw
push
add
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
outsl
jae
push
jb
imul
jb
popa
jo
imul
popa
insb
insb
dec
popa
insl
gs
imul
add
je
jbe
je
inc
arpl
js
add
push
inc
dec
push
push
cs
insb
add
add
aas
pop
aaa
imul
pop
ja
je
popa
jae
imul
inc
add
add
jae
outsb
arpl
je
gs
insl
bound
inc
inc
push
inc
inc
dec
pop
pop
add
add
jne
insb
outsl
arpl
imul
inc
pop
pop
pop
add
add
addr16
imul
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
jae
jb
popa
insl
bound
inc
inc
inc
inc
pop
add
add
aas
xor
jb
popa
insl
bound
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
gs
je
push
imul
inc
inc
push
inc
inc
pop
pop
pop
add
add
outsl
arpl
pop
inc
inc
inc
push
imul
push
xor
pop
add
add
addr16
outsb
je
imul
inc
inc
inc
inc
inc
dec
push
inc
inc
inc
pop
add
add
aas
aas
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
pop
add
add
jb
popa
fs
imul
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
dec
inc
pop
add
add
aas
pop
cmp
je
gs
insl
inc
inc
aaa
inc
inc
add
add
aas
outsb
fs
inc
pop
inc
inc
inc
push
outsl
jae
jb
popa
insl
inc
inc
inc
inc
push
xor
pop
add
add
aas
aas
xor
je
gs
insl
bound
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
add
js
addr16
inc
jae
jb
popa
insl
bound
inc
inc
push
inc
inc
dec
push
inc
inc
dec
inc
pop
add
add
aas
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
pop
add
add
aas
xor
je
gs
insl
pop
ja
je
popa
jae
imul
inc
inc
inc
inc
push
xor
pop
add
add
aas
aas
xor
je
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
push
xor
pop
add
add
aas
xor
gs
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
inc
pop
add
add
jne
fs
insb
outsl
ja
imul
inc
inc
push
inc
inc
dec
pop
pop
add
add
aas
aas
pop
inc
gs
gs
imul
inc
push
inc
pop
dec
inc
pop
add
add
aas
jne
fs
insb
outsl
ja
jae
imul
push
inc
inc
dec
pop
pop
add
add
aas
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
inc
pop
add
add
je
insb
insb
addr16
imul
inc
inc
push
inc
inc
dec
pop
pop
add
add
aas
aas
xor
insb
bound
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
aas
outsl
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
inc
push
xor
ss
inc
inc
push
xor
inc
push
xor
pop
inc
pop
add
add
jae
gs
arpl
je
gs
insl
bound
inc
inc
push
inc
inc
dec
pop
pop
add
add
aas
xor
jb
je
gs
insl
bound
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
add
aas
arpl
jb
imul
inc
pop
dec
inc
pop
add
add
aas
pop
inc
jae
imul
insl
inc
inc
push
inc
inc
pop
pop
pop
add
add
insb
outsl
arpl
inc
imul
pop
pop
pop
add
add
jae
je
inc
imul
inc
dec
dec
inc
pop
add
add
aas
aas
xor
jb
je
gs
insl
inc
inc
push
inc
inc
inc
push
inc
inc
dec
dec
inc
pop
add
add
aas
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
add
jb
popa
fs
imul
inc
inc
push
inc
inc
inc
inc
push
xor
inc
inc
dec
inc
pop
add
add
aas
pop
aaa
gs
gs
imul
inc
add
add
aas
aas
pop
inc
imul
insl
inc
inc
push
inc
inc
push
inc
pop
dec
inc
pop
add
add
aas
xor
jae
jb
popa
insl
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
pop
inc
jae
imul
push
inc
inc
push
inc
pop
dec
inc
pop
add
add
aas
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
pop
pop
add
dec
push
push
inc
push
dec
cs
insb
add
add
dec
jo
inc
fs
imul
popaw
arpl
gs
jb
fs
je
popa
insb
jae
add
dec
jo
inc
fs
imul
popaw
arpl
jo
popa
je
push
push
outsl
outsl
imul
outsl
add
add
dec
jo
inc
outsl
outsb
imul
data16
jb
add
add
jb
fs
imul
jae
jb
gs
popa
add
add
jb
fs
imul
je
jns
gs
add
dec
jo
inc
fs
imul
jb
gs
outsb
outsw
add
add
jb
outsl
outsb
imul
outsb
jae
outsl
jb
inc
gs
popa
outsb
fs
add
add
jb
outsl
jb
push
gs
jae
add
add
jb
fs
imul
jb
gs
outsl
outsb
outsb
arpl
add
dec
jo
inc
fs
imul
gs
outsb
outsw
add
add
jb
fs
imul
arpl
outsb
inc
outsb
jne
add
add
dec
jo
inc
fs
imul
popaw
arpl
outsb
jne
add
add
jb
outsl
outsb
imul
jbe
jb
gs
jae
add
add
dec
jo
inc
fs
imul
gs
outsb
outsw
add
add
jb
outsl
outsb
imul
gs
popa
arpl
gs
outsb
outsw
add
add
jb
fs
imul
jb
outsl
outsb
outsb
arpl
add
jb
fs
imul
gs
je
add
dec
jo
inc
fs
imul
gs
gs
outsl
outsb
outsb
arpl
add
jb
fs
imul
jb
jb
je
imul
dec
jo
inc
fs
imul
insb
gs
jb
je
je
add
add
dec
jo
inc
fs
imul
data16
jb
add
add
jb
outsl
outsb
imul
jbe
jb
popa
arpl
jo
add
dec
jo
inc
fs
imul
je
jns
gs
gs
add
add
jb
outsl
outsb
imul
gs
popa
arpl
jb
outsb
jae
outsl
jb
inc
outsb
jne
add
add
jb
outsl
outsb
imul
outsb
jae
outsl
jb
inc
outsb
jne
add
add
dec
jo
inc
outsl
outsb
imul
jbe
jb
imul
arpl
dec
inc
inc
push
push
xor
cs
insb
add
add
push
imul
jo
dec
imul
jb
xor
outsl
insl
push
je
add
add
push
popa
jb
xor
outsl
insl
dec
cmp
add
push
popa
jb
jae
jb
jb
insl
push
xor
add
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
add
push
popa
jb
jae
jb
jb
insl
push
cmp
add
push
popa
jb
outsl
outsl
insb
inc
jb
insl
push
dec
xor
add
add
inc
inc
inc
inc
push
push
inc
pop
pop
push
imul
push
popa
jb
arpl
bound
add
push
popa
jb
arpl
outsl
insl
push
xor
add
add
gs
jb
popa
jns
jb
popa
je
push
arpl
add
add
jb
dec
xor
outsl
insl
inc
jns
add
add
jb
jns
outsl
jne
add
add
push
popa
jb
outsl
outsl
insb
inc
jb
insl
inc
popa
je
add
add
jb
xor
outsl
insl
push
dec
xor
add
add
jb
xor
outsl
insl
inc
popa
je
add
add
jb
cmp
ja
add
add
jb
popa
je
inc
jb
insl
inc
imul
popa
jb
xor
outsl
insl
inc
jns
add
push
popa
jb
dec
cmp
outsl
insl
dec
cmp
add
add
jb
jae
jb
jb
insl
inc
popa
je
add
add
gs
jb
popa
jns
gs
jb
jns
popa
je
add
push
push
inc
inc
dec
dec
cs
insb
add
add
inc
push
inc
outsb
dec
gs
add
add
inc
outsb
arpl
jo
add
add
inc
arpl
imul
gs
add
add
inc
push
inc
gs
popa
jae
push
popa
jb
insl
add
add
inc
push
push
gs
data16
imul
add
add
dec
popa
jae
push
gs
imul
add
add
inc
gs
jb
jns
popa
jae
add
add
push
outsb
jb
imul
jb
gs
add
inc
push
dec
insl
jo
jb
dec
gs
add
inc
push
inc
js
outsl
jb
dec
gs
add
inc
push
inc
gs
gs
popa
jb
insl
add
add
inc
jne
insb
imul
jns
add
add
inc
arpl
jo
add
add
inc
jne
insb
imul
jae
add
add
push
imul
add
add
inc
push
push
gs
jb
jbe
popa
jb
insl
add
add
inc
push
inc
gs
jb
jns
gs
add
add
push
gs
popa
jae
push
popa
jb
insl
add
add
inc
push
inc
outsb
push
popa
outsb
outsl
insl
add
add
push
imul
jb
gs
add
inc
push
inc
jb
popa
je
dec
popa
jae
add
add
inc
push
inc
gs
jbe
dec
gs
add
inc
push
inc
gs
jae
jb
gs
add
add
inc
gs
jb
jbe
popa
jb
insl
add
add
inc
push
dec
popa
jae
inc
popa
je
add
add
inc
push
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
inc
push
push
gs
gs
popa
jb
insl
add
add
add
add
add
add
add
add
adc
add
add
add
mov
mov
add
add
add
add
add
add
adc
add
mov
add
jl
add
push
add
add
add
add
mov
add
mov
add
fdivl
add
shlb
add
add
add
add
pop
mov
add
mov
add
add
add
add
jl
add
inc
mov
add
mov
add
mov
add
mov
add
mov
add
add
cmpsb
mov
add
add
sub
add
push
add
fdivs
add
xchg
mov
add
add
add
mov
add
push
mov
add
loop
add
in
mov
add
pop
mov
add
add
clc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
les
add
push
mov
add
xor
add
pusha
mov
add
add
mov
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
lcall
add
add
xor
add
call
mov
add
mov
add
inc
mov
add
pop
mov
add
mov
add
jo
add
cmpb
add
mov
add
les
add
dec
mov
add
add
add
adc
add
insb
mov
add
repnz
add
and
add
sub
add
add
out
add
xchg
mov
add
mov
add
add
add
add
add
mov
add
les
add
add
add
cmp
add
cs
add
xchg
mov
add
jo
add
cwtl
mov
add
dec
mov
add
sarb
add
mov
add
mov
mov
add
mov
add
jb
add
adc
add
mov
add
sbb
add
hlt
mov
add
sarb
js
out
in
fsts
jo
jbe
and
movsl
jl
add
push
das
rclb
adc
ror
adc
push
in
xchg
and
jge
int3
sarl
insl
mov
or
cld
ss
lret
pop
lcall
mov
xor
mov
adc
das
jp
cmovge
rcl
push
jle
fistpl
decb
dec
add
outsl
mov
dec
lock
scas
mov
cltd
cltd
pop
mov
cs
loopne
std
iret
mov
iret
insb
sub
inc
push
insl
pop
inc
adc
int3
push
dec
loop
mov
pushf
or
mov
popa
jl
sub
imulb
xchg
jge
inc
push
jnp
pop
pop
jmp
mov
push
repnz
daa
xchg
cmpb
out
int3
push
movsb
mov
scas
insl
mov
mov
shrb
insl
int
inc
pop
scas
xor
loopne
pop
rcrb
inc
mov
in
mov
adc
and
xchg
push
jno
adc
xor
push
or
pop
faddp
std
pop
repz
ficoml
outsl
in
jae
out
fldenv
add
xor
scas
pop
test
xlat
shr
jo
add
repnz
repz
cltd
in
icebp
clc
jmp
sub
jae
fucomip
movsb
rcr
test
xlat
pop
mov
push
xor
leave
scas
int3
pop
sub
dec
push
out
jmp
xor
int3
xchg
out
outsl
ds
fsub
daa
movsl
fisubs
fsubs
jmp
rcl
test
or
insb
jbe
hlt
lock
out
push
jl
cmp
sub
dec
adc
movsb
shl
mov
fs
fwait
shr
adc
movsl
mov
or
cs
popf
testl
mov
imul
cwtl
inc
mov
mov
lds
xchg
les
push
test
stos
and
jno
popf
push
addr16
cmc
jne
jbe
mov
pop
mov
mov
aad
faddl
movsb
call
mov
fisubl
pop
adc
sti
push
addr16
and
hlt
cli
xor
ret
pop
repnz
fstl
clc
xchg
popf
mov
movsl
pushf
or
sub
cld
stos
mov
dec
test
sub
push
push
addr16
cmp
xor
ror
xchg
sub
test
rorl
orl
inc
inc
fistpll
sbbl
sub
shl
je
imul
xchg
adc
pop
sbb
dec
xchg
cmc
jl
cltd
fcompl
clc
shlb
jns
xchg
iret
mov
out
push
jae
outsb
je
sub
mov
les
jbe
iret
mov
add
add
rcll
jg
scas
xor
iret
adc
jg
pop
inc
popf
stc
leave
cwtl
xchg
cld
in
les
imul
mov
fnstenv
leave
outsb
ror
lahf
xchg
ljmp
cli
movsl
mov
bound
jmp
ficomps
les
sub
xor
inc
push
push
sub
and
repz
lret
push
add
mov
and
pushl
inc
add
sbb
mov
iret
loopne
and
cs
jnp
pop
mov
iret
loope
in
mov
pop
popf
rcl
in
out
jno
jb
ret
push
movl
stos
cltd
loop
adc
pop
inc
jb
in
hlt
shll
cmpsl
popa
xchg
rorl
sub
lods
iret
das
lods
mov
cmpsb
xchg
xchg
mov
addr16
jecxz
mov
add
push
iret
iret
aas
inc
inc
jg
xchg
adc
jo
pop
scas
insl
sbb
pop
daa
popa
jae
xchg
scas
dec
and
mov
push
lds
imul
add
adc
gs
add
cwtl
popf
iret
xchg
inc
fiaddl
xchg
adc
daa
and
rorb
scas
aam
sahf
fdivrs
cwtl
xchg
leave
dec
scas
pop
in
clc
int
fistpl
pop
pop
sub
subl
dec
fwait
push
cmp
jbe
imul
push
cli
and
push
rorb
rcrl
in
pop
xchg
iret
dec
xor
fs
xchg
sub
insl
mov
mov
iret
iret
and
xchg
scas
pop
mov
xchg
inc
sbb
add
jno
and
ror
mov
in
sub
sti
call
scas
xchg
pop
push
rol
sti
or
in
dec
mov
or
adcb
dec
mov
into
out
popl
jecxz
cmp
dec
inc
ja
in
aas
sarb
mov
adc
or
or
scas
mov
fwait
sbb
out
mov
mov
orl
mov
mov
adcl
push
pop
mov
mov
rol
rcl
fsubrs
icebp
das
imul
jecxz
addr16
subl
iret
add
cwtl
std
mov
and
ljmp
stc
push
icebp
movsb
lcall
pushl
aad
and
xlat
lods
ficomps
jb
xchg
sbb
dec
stos
fs
xorl
xchg
push
repnz
clc
push
mov
fildl
into
inc
int3
cltd
out
xchg
mov
and
loopne
aam
aad
pop
cmp
test
fistpl
movsl
cmp
adc
shlb
popa
xchg
aad
sub
lcall
xchg
lret
aas
repnz
mov
xchg
cmp
mov
icebp
push
imulb
repz
mov
xchg
cld
out
jbe
sub
mov
mov
out
push
xchg
add
cmc
push
loop
cltd
nop
in
mov
cmpsb
sbb
and
add
in
cld
xchg
lahf
jmp
pop
mov
push
fadd
sbb
cmp
dec
push
cltd
pop
lock
cmpsb
flds
iret
sahf
scas
aas
push
push
imul
test
imul
xchg
orb
movsb
das
xchg
cmp
imul
bound
push
movsl
loop
nop
sub
adc
jbe
out
dec
int
aad
dec
sbbb
xchg
sub
sbb
xchg
addl
inc
jns
scas
mov
ret
out
fcmovu
ds
push
leave
movsl
stos
jnp
cmp
mov
jmp
push
call
pop
cmp
icebp
shrb
sbb
push
daa
gs
add
dec
xor
mov
lods
ja
loop
orb
inc
mov
aaa
fisttpll
push
sub
fsubs
int3
dec
addr16
mov
push
addb
pusha
fdivp
sarl
and
add
data16
das
scas
push
sub
in
pop
lahf
or
hlt
mov
es
inc
shrl
outsb
jbe
je
in
jo
iret
sub
push
jo
lds
mov
pop
mov
addr16
and
mov
push
push
sbb
xchg
mov
aad
lods
pop
add
xor
mov
mov
aam
shll
lods
test
pop
scas
lret
movsb
rcrl
push
pushf
insb
adc
mov
jo
enter
insl
ja
rorl
push
pushf
iret
mov
out
mov
jmp
jecxz
hlt
mov
fisubs
or
andl
dec
xor
out
jle
test
ret
movsl
rcl
xor
add
dec
out
sbb
aad
add
adc
das
mul
daa
iret
cld
xor
push
cld
loop
std
xchg
movsl
fsubs
aad
shlb
cmpsb
xchg
lcall
scas
inc
fisubrs
add
mov
mov
aam
or
cmp
jne
fisubs
push
out
popf
xlat
sub
jbe
shlb
sub
rclb
dec
scas
cmpsb
or
pop
jb
adc
push
sbb
sahf
mov
popa
inc
fbstp
scas
xchg
dec
shrb
in
hlt
mov
outsb
cwtl
jmp
faddl
loope
cmp
sbb
xchg
xchg
pop
push
and
popl
shrb
mov
shlb
in
add
pop
jbe
icebp
or
sbb
andb
in
mov
js
sub
xor
and
mov
sti
daa
lods
add
xchg
xchg
pusha
jg
xchg
mov
popa
scas
call
and
jb
icebp
xor
and
ja
sahf
ljmp
cltd
cmc
pop
sar
pop
cwtl
aaa
test
mov
push
lcall
outsl
fisubrs
adc
mov
mov
mov
into
lea
aam
pop
adc
jge
xchg
jl
out
jecxz
fidivrl
add
adc
xchg
add
mov
movsb
mov
scas
dec
or
cmp
jae
xchg
xchg
sbbl
fbld
add
sub
aaa
in
mov
adcl
ret
cmp
cli
ja,pn
add
cmp
or
cmp
sbb
cmp
movsl
sbb
jbe
fistps
pop
push
sbb
repnz
scas
outsb
loope
mov
subb
mov
movb
adc
lds
push
mov
jno
aam
iret
in
pushf
xchg
sahf
cmp
inc
and
fisubl
inc
shll
fisubrl
mov
divl
test
or
or
aas
scas
popa
dec
jl
shrl
cltd
pusha
sub
mov
iret
shll
dec
pop
pop
rclb
push
mov
stos
fldcw
ror
add
jmp
iret
cltd
lret
out
add
xchg
jg
jmp
mov
roll
shl
mov
rcrb
es
ret
lret
or
inc
xchg
sti
inc
ss
adc
dec
hlt
mov
inc
add
rcll
fldl
cs
clc
cmp
movsb
in
sub
lock
repz
adc
pop
std
scas
scas
in
pmullw
loop
and
out
das
and
sarb
fmuls
nop
mov
negb
jecxz
push
mov
add
outsb
or
int3
stos
jmp
push
xchg
mov
int3
sar
jno
loopne
mov
mov
inc
punpcklbw
mov
cwtl
push
outsb
aam
mov
sarb
mov
push
mov
movsb
in
mov
ud2
mov
inc
aad
mov
push
ror
aaa
xchg
sbb
jle
mov
adc
jmp
adc
rcrl
mov
sbb
in
out
dec
pop
mov
pop
sub
mov
push
push
call
movsb
mov
fdivrl
cmpsb
aam
rolb
dec
xchg
insl
xchg
sarl
and
or
fidivrl
cmpsl
notb
inc
sbb
test
mov
push
fisttps
mov
rclb
push
xchg
mov
dec
ja
gs
push
call
jmp
add
fucom
and
jp
int
cli
jmp
and
insl
pop
in
cli
fst
push
mov
iret
or
and
jb
xchg
test
pop
jno
or
and
mov
cld
out
lea
nop
fcomps
in
push
out
mov
add
xor
xlat
mov
rcll
cmp
sbb
sbb
fldl
ret
mov
xor
cmp
adc
xchg
test
add
stos
mov
jb
xor
pop
xlat
out
mulb
leave
stc
cmpsb
cltd
mov
and
sbb
pop
mov
push
xchg
jp
xchg
pop
add
icebp
push
ret
imul
dec
mov
lcall
pop
outsb
push
fcomip
stos
mov
or
jecxz
jge
scas
fdivp
call
jnp
push
fdivl
jmp
sub
imul
and
jp
jmp
in
inc
cmp
adc
popf
decl
xlat
jns
cmp
sarb
cmp
mov
insb
imul
fisubrs
es
mov
adc
movsb
and
mov
and
cwtl
enter
or
inc
and
leave
incb
movsl
adc
push
lea
lahf
lods
fiadds
test
outsl
xchg
or
xor
stos
push
repnz
insl
fisttps
push
rorl
mov
loop
mov
inc
frstor
in
dec
jnp
mov
lods
sbb
jne
push
jge
outsl
pop
xchg
out
xlat
push
mov
cs
xchg
and
stos
rolb
adc
cwtl
jge
loop
int
adc
mov
dec
lret
mov
push
adcl
inc
xchg
out
int3
mov
adc
xchg
push
hlt
lret
sbb
iret
push
fists
outsb
jmp
ja
and
pop
push
addr16
fwait
or
xchg
cmpsb
push
movsb
cmovne
inc
mov
adc
js
iret
lcall
adc
and
adc
loope
cmp
aam
fiadds
hlt
lds
mov
lock
aad
mulps
dec
cli
dec
outsl
cmp
inc
mov
lret
js
sub
repnz
cmp
rcrb
sub
jp
in
iret
andb
in
jne
leave
lock
mull
mov
inc
adc
aad
repz
loope
ret
jae
inc
or
mov
ljmp
mov
mov
mov
lahf
mov
mov
fisubrs
add
push
loopne
mov
and
add
int
shrb
rcl
pop
out
mov
sarl
rolb
push
adcl
jns
cmp
xor
movl
out
in
jecxz
movsl
mov
lock
mov
clc
das
mov
ret
and
sub
xor
sbb
mov
push
push
dec
mov
push
dec
cmpsb
stos
sbb
mov
cmp
cmp
inc
ficomps
sbb
loope
push
xchg
push
shl
sbb
aas
or
xchg
xchg
loopne
enter
and
sub
fidivrl
das
mov
cmp
push
add
psrlq
xchg
jmp
imul
and
sti
jg
loop
inc
rorl
scas
mov
xchg
dec
scas
or
or
nop
imul
inc
ljmp
rcrl
jbe
test
je
lret
add
inc
repz
mov
and
pop
popf
lds
jecxz
clc
test
out
movsl
add
pusha
out
adc
mov
or
xlat
repnz
sti
push
push
dec
xlat
lods
jmp
fldlg2
dec
cmpsl
aam
mull
xchg
mov
fidivrl
fbstp
pop
inc
shlb
sahf
ja
orl
jmp
jb
sbb
iret
xchg
inc
jecxz
pop
lea
push
cmc
mov
and
xor
pop
pop
ljmp
xor
hlt
repz
aad
cmc
stos
or
leave
mov
jne
addl
testb
mov
push
pop
pop
jg
jns
lcall
mov
ficomps
jl
jne
in
sbb
test
sbbl
out
mov
ret
movsl
daa
jg
add
jecxz
mov
das
stos
or
cmp
or
rcrb
xchg
adc
int3
sbb
mov
cmc
arpl
cmp
mov
shll
out
xchg
add
push
sbb
call
mov
xchg
aad
negb
loope
dec
shrl
mov
addr16
cwtl
or
push
jbe
leave
inc
stos
jmp
xor
sbb
popw
insb
sub
sub
mov
int
imul
stos
mov
inc
sti
dec
jo
orb
sub
jo
cli
pop
or
cmp
insb
jno
inc
lahf
popa
cmp
add
movsb
push
ja
aaa
xchg
xchg
push
or
roll
or
movsl
mov
mov
ja
and
cli
loop
adc
fnstenv
sbb
inc
popf
mov
sbb
or
dec
fbld
pop
and
cmpsb
int
inc
fcoml
inc
clc
pop
sahf
outsl
or
add
jnp
repnz
ss
cmp
sbb
mov
xchg
mov
stc
jbe
mov
xlat
fcmovne
dec
addl
adc
or
cmp
mov
jmp
pop
pop
movsl
jle
sti
cmpsb
cltd
add
pop
sbb
lret
pop
adc
aas
push
dec
cmpsb
pop
fcmovnu
test
jecxz
sahf
scas
pop
sub
mov
sahf
xchg
xchg
rcr
xorl
into
mov
mov
scas
cmp
mov
inc
xchg
xor
imul
jno
lock
cltd
push
fldcw
out
cmp
gs
pusha
hlt
xchg
and
loope
push
aam
hlt
inc
inc
xor
repnz
xor
pushf
mov
inc
mov
aam
cwtl
loop
xchg
push
icebp
test
imul
xchg
pushf
adc
ficoml
dec
sub
mov
jp
stos
push
mov
inc
or
push
xchg
xchg
leave
mov
sbb
or
fwait
pop
push
adc
cmp
cmp
test
add
push
and
fistpl
lock
mov
insb
mov
pop
lret
cmp
mov
ret
and
pop
les
adc
sub
sub
in
dec
ja
jae
inc
mov
fisubrl
push
inc
leave
mov
adc
rclb
int
xchg
movsb
enter
imul
or
out
mov
fldenv
lret
ljmp
jge
mov
mov
out
sarb
cmp
mov
sbb
shl
push
sub
pop
leave
xor
xlat
push
aad
test
jl
mov
fnstsw
or
loope
repnz
pop
mov
xchg
enter
push
sub
aam
ficompl
es
lods
xlat
jb
dec
inc
ret
mov
adc
jmp
icebp
mov
adc
pop
add
xchg
fisubrl
out
mov
inc
jns
jp
sarl
mov
hlt
xor
adc
rorb
sub
test
shll
repz
pop
xchg
ja
ja
shl
add
cmp
or
dec
inc
cwtl
fidivs
arpl
loopne
push
lret
pop
sub
sub
pop
mov
xlat
lret
lcall
rorl
add
negb
mov
xchg
push
mov
ds
cmpsl
xchg
std
mov
mul
sbb
cmp
mov
xor
cmpsl
or
push
dec
repnz
push
jo
xor
add
cwtl
out
add
repnz
inc
sti
or
jecxz
sbb
fdivr
repnz
hlt
pop
xchg
mov
sbb
scas
pop
rolb
and
dec
test
fstpl
sbb
mov
into
testl
push
and
jbe
xchg
fs
fidivrl
fwait
addr16
mov
xor
mov
and
mov
mov
dec
je
popf
sub
cmp
stc
ss
and
leave
sidtl
or
cltd
xor
lods
sbb
cmp
js
and
scas
cltd
aam
pushf
iret
subl
lock
xchg
add
daa
cmp
cmpsb
repnz
push
fadds
sbb
sbb
shl
insb
or
std
xchg
jg
push
and
ja
subb
lahf
push
movsb
mov
popa
jmp
cmp
and
push
enter
xlat
cmpsb
in
mov
mov
jae
mov
mov
mov
test
nop
mov
je
xchg
xor
roll
in
out
pop
mov
cld
mov
pop
mov
shll
enter
loop
fsts
imul
and
jmp
jno
adc
dec
daa
scas
cmpsb
add
or
dec
cli
cmp
inc
or
fstl
xchg
mov
fsubs
mov
enter
shl
sti
imul
sbb
push
jecxz
es
push
orb
cmpsb
mov
jne
mulb
jae
add
mov
and
dec
pop
rolb
dec
enter
cmpsl
mov
sbb
push
dec
and
pop
push
add
add
xchg
lahf
pop
sarb
lods
testl
movsb
push
inc
xor
fstpt
inc
mov
ret
fiaddl
or
shl
add
mov
and
sahf
in
push
mov
shll
sahf
jge
sub
aaa
and
js
xchg
dec
adcb
sub
ljmp
adc
mov
mov
mov
sub
xor
mov
popf
scas
push
dec
insb
scas
jg
pusha
push
cmp
shll
inc
adc
ret
mov
xchg
hlt
daa
lret
imul
sti
xchg
loop
test
jge
or
rclb
xor
cmp
pushf
fmuls
lret
fisttpl
les
or
xor
push
mov
sbb
and
add
and
icebp
fidivl
sbb
and
and
dec
push
pushf
and
test
js
add
rcr
mov
sbb
sub
add
pop
pop
icebp
adc
loop
mov
sbb
add
dec
loop
mov
je
xlat
mov
adc
enter
pop
aas
xor
and
ss
scas
or
cmp
int3
sbb
push
cmc
adc
stos
cmc
xor
mov
cmp
cld
or
add
inc
push
sbb
fwait
rcr
into
in
sarl
sbb
shl
and
lcall
fcompl
add
sahf
inc
adc
iret
rcrb
adc
and
sbb
inc
inc
mov
jp
movsl
jnp
ljmp
call
push
adc
shlb
mov
jae
adc
xorl
xchg
push
std
xchg
xor
xor
add
and
push
into
sbb
add
out
add
mov
push
add
push
and
add
adc
lcall
sbb
xchg
js
fimull
sbb
sbb
cld
xor
jb
sbb
aaa
inc
mov
js
add
jle
ret
psadbw
mov
cmp
cmp
add
push
cs
push
test
push
xchg
adc
cli
jbe
push
notl
lret
mov
add
imul
insl
or
shlb
pop
adc
scas
idivb
mov
fnstenv
mov
fadds
popf
jns
dec
stos
mov
lock
xchg
or
in
adc
ror
fmuls
in
lock
inc
cmp
scas
or
decl
movsl
jl
mov
fsubl
fadds
or
add
inc
adc
sti
ss
pop
inc
dec
aam
or
jp
xor
mov
lahf
dec
add
incb
inc
or
ret
sbb
and
inc
mov
mov
incb
pop
add
adc
jae
sbb
cmp
lock
inc
mov
jns
fstpt
and
popf
jb
ds
inc
outsb
mov
mov
leave
xor
std
call
dec
int3
push
aad
in
xchg
mov
mov
sbb
loopne
rorl
mov
mov
pop
imul
ss
dec
out
aas
cmp
add
or
and
cmc
fbstp
inc
mulb
jecxz
sbbb
int3
std
fcoms
xchg
push
jmp
mov
sbb
imull
sub
and
sbb
gs
testb
mov
push
xchg
mov
cmp
sbb
sbb
fwait
or
xchg
xchg
push
mov
pop
and
xor
sbb
jnp
mov
inc
and
cmpb
pop
inc
jne
lret
jae
fsubr
sub
loope
cmp
fmuls
lods
divl
mov
test
inc
mov
stc
test
iret
push
and
sub
dec
adc
sub
adc
hlt
dec
or
ss
push
and
imul
in
mov
ja
mov
mov
or
in
out
pop
push
ret
xadd
movsb
add
mov
cmp
jle
jmp
and
iret
push
in
pusha
add
inc
push
jb
inc
dec
xor
fs
xor
arpl
dec
jbe
jp
xor
cmp
dec
jp
insl
jne
inc
push
push
pushw
cmp
imul
ja
insl
push
pop
jp
outsl
dec
jbe
dec
push
inc
xor
cmp
js
outsb
outsb
jp
jns
dec
dec
jp
jb
xor
popa
push
dec
pop
push
dec
pop
pop
insl
jae
inc
js
aaa
cmp
jp
insl
bound
jns
push
dec
xor
xor
jp
imul
xor
jbe
jae
inc
jae
dec
aaa
jns
aaa
inc
xor
jne
push
jbe
jb
imul
dec
outsl
cmp
data16
inc
jbe
push
pop
popa
push
outsb
ss
dec
jae
inc
inc
bound
jp
jbe
dec
inc
addr16
inc
push
inc
inc
xor
aaa
insb
dec
push
inc
ja
push
inc
push
push
dec
inc
push
xor
add
add
je
cmp
addr16
outsl
jb
js
js
inc
inc
push
outsl
jo
pop
pop
xor
inc
inc
inc
ja
inc
data16
data16
inc
jae
push
push
imul
dec
jae
jp
dec
xor
addr16
push
cmp
jp
push
popa
push
addr16
outsb
jno
addr16
inc
insb
je
arpl
cmp
add
add
jne
dec
data16
inc
cmp
jo
pop
gs
inc
js
dec
push
xor
xor
dec
jae
push
dec
push
xor
ja
push
jb
popa
popaw
jne
push
addr16
xor
insl
dec
inc
je
push
js
addr16
imul
push
jp
xor
arpl
js
aaa
jns
push
dec
jno
push
xor
push
jno
jo
xor
dec
dec
arpl
xor
fs
pop
push
jns
push
push
dec
bound
push
inc
dec
xor
popa
pop
fs
pop
je
inc
cmp
arpl
dec
jbe
inc
addr16
xor
pop
push
insl
ss
jp
jo
xor
outsb
cmp
jae
jb
inc
xor
arpl
popa
jo
aaa
jae
addr16
push
insl
pop
dec
push
pop
popa
inc
jno
gs
insl
js
push
insb
insl
dec
inc
dec
push
jne
insb
cmp
bound
push
inc
inc
add
je
insb
inc
push
dec
xor
pop
outsl
outsl
jns
arpl
push
ja
jbe
gs
data16
push
bound
push
addr16
push
jns
pop
dec
xor
jbe
dec
inc
jo
insb
insb
jb
jo
push
xor
pop
push
ja
xor
ss
dec
jae
push
bound
inc
xor
cmp
push
pop
imul
dec
dec
dec
outsl
xor
imul
pop
push
je
push
ja
xor
inc
push
jne
aaa
cmp
jae
dec
push
cmp
jno
add
add
popa
insb
dec
jo
inc
pop
push
jne
dec
push
push
inc
inc
dec
inc
ja
jne
gs
dec
dec
xor
push
pop
push
outsb
inc
xor
cmp
inc
addr16
push
jns
jns
aaa
push
dec
pop
ss
jns
popa
cmp
jbe
add
cmp
ja
add
add
xor
arpl
xor
pop
jae
dec
pushw
data16
dec
dec
push
push
jo
push
inc
arpl
outsb
bound
inc
je
inc
insb
outsl
cmp
inc
je
push
push
bound
arpl
bound
jp
insb
arpl
pop
dec
xor
dec
xor
gs
push
xor
pop
inc
jns
xor
addr16
xor
xor
dec
inc
inc
jo
push
pop
push
push
push
pop
xor
xor
popa
push
fs
data16
cmp
xor
jo
push
pop
inc
gs
dec
aaa
dec
xor
jp
xor
inc
jb
outsl
push
inc
gs
js
pop
jp
push
push
jo
jp
insb
jns
ja
popa
push
push
xor
pop
inc
je
insl
push
jae
jne
jb
jb
pop
outsb
ss
xor
pop
inc
pop
push
jae
pop
jp
push
jp
xor
fs
aaa
inc
dec
aaa
xor
cmp
push
popa
inc
dec
xor
imul
add
push
cmp
cmp
inc
addr16
inc
ss
outsb
push
je
xor
xor
fs
xor
inc
data16
push
dec
pop
dec
jno
dec
push
addr16
bound
push
jae
pop
inc
inc
jns
addr16
inc
inc
inc
dec
dec
js
jp
inc
xor
aaa
inc
inc
inc
push
je
outsb
arpl
push
xor
inc
dec
inc
addr16
jbe
jae
ss
fs
fs
insl
dec
imul
outsb
dec
js
imul
jp
popa
dec
push
jno
dec
push
xor
push
push
dec
imul
add
inc
dec
dec
push
inc
outsl
push
xor
xor
dec
inc
xor
inc
inc
dec
ja
inc
jb
cmp
jo
cmp
outsb
pop
dec
jo
ss
push
push
jp
push
imul
push
fs
popa
pop
dec
inc
push
jns
dec
ja
arpl
push
ja
push
push
jb
arpl
js
xor
xor
dec
ja
dec
jns
push
xor
xor
jne
js
jne
inc
xor
dec
jo
jo
push
gs
push
xor
push
xor
dec
gs
inc
cmp
jno
outsl
cmp
imul
js
jo
push
outsb
push
imul
push
dec
outsb
dec
push
pop
push
push
dec
imul
push
dec
ja
xor
push
push
dec
push
push
insl
jne
push
dec
jbe
dec
push
dec
bound
jne
push
aaa
pop
xor
inc
dec
push
inc
inc
dec
push
dec
push
xor
cmp
add
cmp
negb
mov
or
jno
or
gs
js
aaa
outsl
pop
push
xor
bound
bound
push
dec
jo
inc
popa
ja
jne
gs
inc
push
xor
inc
push
inc
push
inc
xor
js
jbe
jbe
add
xor
pop
xor
push
dec
xor
je
cmp
pop
xor
insl
dec
inc
inc
cmp
dec
inc
xor
addr16
xor
push
je
push
jns
jo
jno
arpl
cmp
dec
aaa
xor
ja
jp
insl
inc
jns
dec
inc
xor
xor
dec
inc
inc
cmp
inc
xor
jo
imul
push
arpl
push
dec
ss
jae
pop
xor
js
push
cmp
cmp
add
dec
imul
inc
gs
inc
cmp
ja
insb
jno
imul
ss
jo
ja
dec
xor
outsb
outsb
aaa
inc
xor
insb
dec
insl
addr16
push
ss
fs
push
jo
inc
inc
outsl
push
jne
inc
inc
data16
dec
dec
push
cmp
push
dec
insb
push
inc
ss
imul
popa
dec
push
inc
je
jne
xor
dec
inc
jne
dec
insb
jp
dec
jp
cmp
popa
dec
push
data16
push
inc
push
dec
xor
push
outsb
pop
add
add
xor
je
jbe
insb
inc
push
dec
popa
imul
push
pop
dec
push
ss
dec
inc
xor
imul
push
dec
cmp
cmp
inc
insb
jae
popa
jae
arpl
outsl
insl
popa
xor
push
inc
imul
arpl
dec
inc
jae
pop
cmp
push
cmp
push
dec
dec
xor
xor
push
jns
inc
data16
dec
jns
jo
jp
dec
addr16
dec
ss
dec
popa
dec
inc
inc
push
dec
push
jns
arpl
dec
dec
push
gs
popa
push
bound
inc
inc
jo
jp
dec
dec
push
outsb
ss
imul
xor
push
inc
jbe
add
add
push
inc
cmp
ss
pop
pop
inc
dec
inc
dec
dec
xor
push
jne
push
inc
dec
dec
pop
inc
inc
push
inc
pop
popa
inc
xor
jno
inc
outsb
push
inc
imul
insl
cmp
add
add
push
xor
jno
gs
pop
jns
jbe
dec
insb
xor
cmp
ss
outsb
inc
fs
xor
xor
dec
push
dec
inc
popa
push
insb
push
jo
arpl
jbe
xor
insl
dec
add
add
inc
bound
outsb
icebp
and
test
fs
dec
loopne
add
insl
pop
inc
push
jbe
inc
jno
addr16
dec
ja
push
ja
dec
je
outsb
inc
dec
cmp
jns
jns
push
aaa
inc
cmp
dec
push
push
fs
xor
imul
push
push
inc
insb
xor
insl
aaa
push
push
push
push
push
cmp
inc
push
jae
imul
dec
inc
inc
inc
xor
jp
push
js
cmp
dec
cmp
arpl
imul
gs
push
ja
push
push
imul
popa
push
aaa
xor
push
push
imul
inc
push
push
pop
push
ss
dec
xor
aaa
jno
jno
push
push
jns
dec
inc
xor
popa
xor
jb
dec
popa
dec
jae
pop
pop
jbe
jne
dec
xor
push
cmp
dec
xor
inc
pop
xor
aaa
add
add
dec
inc
xor
push
dec
push
pop
xor
push
push
jno
aaa
inc
jae
jne
aaa
jp
addr16
xor
aaa
jp
inc
js
xor
jae
push
bound
arpl
push
xor
dec
dec
jb
pop
inc
outsl
pop
push
jno
push
bound
arpl
xor
push
outsb
jo
data16
dec
jp
fs
jns
inc
arpl
dec
jp
jb
jp
bound
outsl
imul
pop
jo
insb
dec
jae
dec
push
imul
push
add
pop
outsb
outsl
ja
push
outsl
cmp
ja
jno
je
outsl
push
dec
pop
je
arpl
push
dec
ja
inc
insb
xor
outsl
gs
imul
insb
jae
jae
add
add
cmp
push
xor
dec
push
push
cmp
push
imul
addr16
bound
jns
addr16
inc
inc
bound
imul
xor
push
dec
push
push
insl
ss
push
dec
outsb
jp
je
push
jae
addr16
dec
push
inc
jne
popa
xor
push
popa
outsl
push
push
inc
push
xor
ss
add
add
aaa
dec
inc
pop
outsl
inc
inc
jp
dec
xor
dec
xor
dec
ja
inc
jo
xor
jns
inc
jns
dec
inc
dec
popa
push
imul
cmp
insl
pop
xor
ss
push
push
imul
pop
add
add
dec
add
add
add
add
add
add
add
push
jno
push
dec
dec
pop
inc
inc
imul
xor
dec
dec
insl
dec
push
jne
xor
addr16
aaa
jns
js
fs
push
inc
jae
dec
push
xor
jno
popa
arpl
push
jne
js
insl
xor
xor
gs
dec
inc
push
cmp
xor
jns
imul
outsb
inc
js
push
inc
inc
dec
dec
insl
xor
dec
push
ss
push
ss
ja
imul
jb
cmp
pop
inc
inc
inc
inc
push
je
xor
data16
cmp
push
imul
xor
js
cmp
insl
bound
pop
outsl
xor
bound
inc
ja
fs
jno
jp
je
dec
je
jbe
inc
inc
inc
inc
xor
je
jbe
inc
pop
push
pop
je
jne
inc
gs
ja
jbe
jbe
jae
dec
inc
js
dec
ja
inc
inc
inc
push
xor
push
add
add
add
xor
push
dec
inc
dec
dec
dec
arpl
gs
inc
push
jne
xor
jo
xor
push
inc
dec
insl
xor
push
push
dec
insb
push
push
gs
jbe
ja
js
jp
jp
gs
bound
dec
pop
push
inc
jno
popa
ss
dec
push
bound
jae
push
jp
insl
push
cmp
jns
jae
jbe
push
jb
inc
push
push
push
ja
aaa
push
data16
dec
jae
inc
jbe
push
jb
addr16
inc
inc
dec
ja
insb
push
outsl
dec
cmp
inc
jb
push
dec
je
dec
imul
xor
dec
outsb
xor
jae
je
push
dec
dec
dec
pop
cmp
popa
aaa
aaa
cmp
jp
dec
je
inc
dec
xor
cmp
xor
jbe
add
add
xor
xor
ja
dec
inc
dec
inc
outsl
ja
push
dec
push
inc
ss
push
inc
xor
dec
pop
push
xor
jno
xor
jne
push
xor
inc
jns
pop
outsl
push
ja
jns
outsl
popa
push
push
dec
popa
fs
jae
xor
dec
push
outsb
pop
jb
dec
push
inc
ss
je
jne
outsb
insb
push
pop
push
pop
insb
bound
xor
add
inc
dec
jno
push
jp
outsl
push
pop
jno
jae
inc
inc
xor
dec
je
cmp
ss
xor
push
aaa
push
inc
dec
push
inc
je
push
fs
arpl
dec
cmp
popa
inc
popa
inc
dec
jp
inc
inc
push
aaa
bound
jb
push
dec
ss
insl
pop
imul
push
dec
inc
insb
push
dec
dec
jno
inc
xor
pop
jp
xor
push
outsb
imul
insl
je
pop
inc
insl
pop
dec
xor
cmp
jbe
arpl
push
jne
jb
push
jo
dec
push
push
inc
jb
outsb
inc
outsl
jne
jo
inc
dec
dec
inc
push
imul
push
push
xor
gs
jae
dec
dec
cmp
push
push
insl
xor
insl
jne
xor
cmp
inc
push
aaa
inc
outsl
push
xor
add
outsl
push
push
inc
jbe
jp
js
addr16
jno
inc
push
inc
pop
dec
dec
push
insb
imul
ss
dec
arpl
cmp
push
xor
push
je
imul
dec
jo
insl
jp
inc
jno
inc
pop
aaa
jno
dec
push
dec
push
push
je
popa
inc
aaa
dec
dec
pop
je
inc
dec
xor
pop
outsb
push
imul
xor
dec
outsl
outsb
popa
js
dec
inc
inc
inc
push
xor
push
dec
push
outsl
cmp
inc
dec
js
outsl
jae
cmp
addr16
inc
push
addr16
inc
xor
push
outsb
insb
jbe
aaa
jae
push
inc
push
add
add
push
aaa
xor
xor
xor
pop
push
jo
push
xor
xor
outsl
data16
outsl
cmp
ja
jb
dec
dec
push
dec
push
jb
pop
push
outsb
xor
insb
imul
inc
xor
push
pop
dec
ss
jne
jns
aaa
pop
imul
inc
xor
push
xor
inc
xor
ja
dec
dec
inc
dec
jp
jp
inc
insl
jb
addr16
insb
jp
push
inc
xor
xor
jne
inc
gs
pop
aaa
arpl
dec
ss
jbe
xor
dec
dec
fs
inc
dec
xor
jns
dec
imul
xor
imul
push
xor
dec
jb
inc
pop
bound
xor
xor
push
jbe
popa
push
push
push
dec
xor
xor
jbe
outsb
jp
push
xor
addr16
dec
inc
xor
addr16
jne
push
data16
push
cmp
jp
inc
inc
dec
push
inc
inc
addr16
insb
imul
dec
aaa
jns
add
dec
jae
jne
inc
cmp
xor
dec
dec
xor
xor
dec
inc
fs
inc
inc
push
pop
jno
xor
bound
pop
push
imul
xor
xor
jae
imul
jo
js
dec
dec
inc
dec
pop
xor
jb
js
inc
imul
jo
jbe
push
aaa
dec
js
push
push
gs
jne
dec
imul
imul
dec
jp
jns
jne
cmp
push
fs
jns
jns
inc
jb
inc
insl
dec
js
inc
push
aaa
jne
ja
jo
jb
dec
aaa
jp
ss
dec
arpl
inc
cmp
xor
cmp
addr16
jno
xor
xor
dec
dec
popa
inc
imul
je
push
jb
dec
bound
push
jno
xor
inc
xor
dec
popa
push
push
push
js
push
push
add
add
or
jb
jo
je
jbe
jb
inc
xor
jne
outsl
jb
inc
jne
gs
popa
dec
push
push
jp
inc
dec
imul
jno
fs
jp
jbe
inc
jp
insl
xor
pop
insl
outsl
xor
cmp
push
cmp
insl
fs
gs
dec
inc
je
arpl
jno
inc
cmp
push
push
push
xor
dec
fs
push
imul
xor
inc
pop
dec
inc
cmp
inc
pop
je
xor
inc
inc
jp
data16
xor
jo
insl
ja
push
outsb
jo
dec
xor
inc
push
js
xor
addr16
xor
xor
cmp
inc
jp
dec
push
pop
imul
insl
pop
dec
inc
js
pop
xor
js
jne
jne
dec
push
jae
dec
pop
xor
push
insl
bound
popa
inc
push
inc
dec
xor
ss
push
aaa
xor
push
dec
outsb
dec
dec
inc
fs
data16
jne
jno
data16
jne
dec
data16
push
push
push
xor
xor
je
cmp
insb
push
dec
push
popa
cmp
js
jo
push
xor
aaa
inc
outsl
xor
jp
push
dec
jbe
dec
push
inc
dec
xor
push
push
jb
je
inc
push
inc
jo
xor
push
imul
dec
push
push
outsl
add
add
inc
jp
jne
dec
push
dec
addr16
xor
push
je
imul
jae
push
inc
xor
add
imul
inc
arpl
xor
push
inc
dec
cmp
cmp
cmp
jne
inc
insl
jns
arpl
push
imul
js
jo
cmp
dec
imul
data16
js
xor
push
inc
ja
dec
insb
inc
outsb
push
dec
push
inc
dec
xor
inc
dec
dec
push
outsb
inc
dec
popa
gs
push
dec
dec
fs
pop
outsb
dec
push
dec
insl
inc
inc
jno
inc
push
inc
xor
insl
js
jbe
push
insb
xor
inc
push
jb
jbe
push
fs
pop
inc
data16
dec
popa
xor
inc
jns
push
js
jae
imul
dec
add
add
push
jb
insl
fs
dec
push
popa
cmp
inc
ja
xor
ja
pop
xor
dec
insb
push
push
jo
push
jbe
xor
arpl
push
inc
dec
xor
imul
outsb
push
jne
dec
inc
dec
push
dec
dec
pop
pop
dec
inc
inc
aaa
push
dec
push
jns
dec
dec
ja
dec
jbe
outsb
cmp
pop
fs
pop
push
outsl
popa
dec
inc
popaw
jo
inc
inc
dec
dec
add
push
dec
dec
inc
inc
imul
xor
cmp
xor
inc
aaa
arpl
xor
inc
popa
ss
dec
ss
dec
jae
dec
outsl
cmp
jbe
ja
jp
push
dec
inc
inc
push
bound
push
fs
ja
xor
push
inc
xor
jns
imul
jp
outsb
jo
dec
insl
jns
cmp
push
dec
jae
push
push
inc
inc
fs
arpl
fs
xor
dec
push
imul
imul
cmp
push
dec
outsb
push
push
dec
jo
pop
jns
jo
dec
je
dec
xor
inc
push
inc
imul
aaa
dec
pop
je
push
imul
jo
push
dec
jne
xor
ja
push
push
xor
cmp
ss
pop
push
inc
xor
imul
arpl
xor
xor
xor
imul
add
je
inc
dec
dec
dec
cmp
xor
outsl
xor
cmp
push
push
dec
je
outsl
js
jb
inc
fs
dec
push
push
outsb
jno
imul
dec
dec
xor
inc
insb
inc
js
push
jae
dec
xor
aaa
dec
inc
jp
add
add
addr16
jp
dec
pop
pop
outsb
insb
dec
fs
push
dec
push
insb
jb
dec
dec
push
imul
inc
je
dec
jno
xor
arpl
inc
jb
cmp
cmp
jns
jbe
arpl
xor
jne
inc
jne
jno
insl
push
fs
dec
aaa
push
push
je
dec
addr16
xor
dec
imul
jbe
jbe
dec
pop
inc
xor
xor
dec
dec
cmp
xor
add
add
and
andb
push
outsb
dec
imul
dec
js
ja
xor
aaa
outsb
dec
jbe
insl
xor
imul
bound
inc
dec
dec
xor
xor
insl
gs
dec
gs
aaa
push
popa
dec
push
jno
js
push
xor
je
cmp
jb
inc
push
je
js
js
push
je
bound
pop
jae
dec
push
bound
push
imul
push
dec
bound
dec
fs
dec
inc
outsb
jbe
imul
xor
push
inc
inc
inc
outsl
push
gs
inc
dec
xor
dec
push
pop
dec
inc
xor
jno
jbe
jp
push
insl
jae
jo
addr16
dec
cmp
push
inc
inc
jp
insl
push
jae
add
jae
imul
insl
arpl
insl
popa
cmp
push
outsb
aaa
push
insl
insb
fs
dec
arpl
aaa
aaa
inc
dec
xor
jo
outsl
addr16
popa
push
pop
dec
pop
push
dec
xor
push
xor
inc
aaa
jbe
inc
outsb
push
dec
push
dec
outsl
imul
jo
fs
add
add
push
add
add
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
faddl
add
jo
add
add
add
add
add
mov
add
add
add
add
add
push
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
sbb
add
adc
add
or
add
add
add
adc
and
add
push
adc
and
add
js
add
and
add
pushf
pop
add
and
add
rcrb
add
add
add
add
push
sbb
sub
add
push
add
add
jb
ja
add
outsl
add
add
and
inc
add
add
push
add
add
add
add
outsb
add
dec
add
add
and
jno
cmp
push
add
add
add
xor
dec
add
dec
add
add
jns
cmp
inc
add
ja
arpl
outsb
add
jns
dec
add
dec
add
and
dec
add
insb
add
dec
add
push
add
add
aaa
add
outsl
add
xor
add
add
xor
push
add
add
and
js
dec
add
inc
add
add
add
xor
data16
push
add
cmp
dec
add
inc
add
jbe
and
dec
add
dec
add
push
add
inc
add
dec
add
and
jb
js
xor
insl
add
add
xor
inc
add
add
inc
add
add
sub
jo
pop
add
and
cmp
xor
inc
add
dec
add
add
add
add
outsl
add
je
imul
add
ja
jne
je
push
add
add
pop
add
jne
add
push
add
arpl
bound
jp
insl
add
add
add
add
add
jp
jne
and
inc
add
add
popa
add
add
add
xor
outsb
add
add
add
dec
add
push
add
jne
jns
push
add
add
add
add
insb
add
dec
add
add
add
dec
add
add
push
add
add
and
dec
add
insb
add
outsb
add
xor
cmp
xor
imul
push
add
add
xor
add
add
jno
data16
add
pop
add
cmp
xor
xor
add
jne
inc
add
and
push
add
inc
add
add
add
push
add
add
jb
ja
add
outsl
add
add
and
inc
add
add
push
add
add
add
add
outsb
add
dec
add
add
and
jno
cmp
push
add
add
add
xor
dec
add
dec
add
add
jns
cmp
inc
add
ja
arpl
outsb
add
jns
dec
add
dec
add
and
dec
add
insb
add
dec
add
push
add
add
aaa
add
outsl
add
xor
add
add
xor
push
add
add
and
js
dec
add
inc
add
add
add
xor
data16
push
add
cmp
dec
add
inc
add
jbe
and
dec
add
dec
add
push
add
inc
add
dec
add
and
jb
js
xor
insl
add
add
xor
inc
add
add
inc
add
add
sub
jo
pop
add
and
cmp
xor
inc
add
dec
add
add
add
add
outsl
add
je
imul
add
ja
jne
je
push
add
add
pop
add
jne
add
push
add
arpl
bound
jp
insl
add
add
add
add
add
jp
jne
and
inc
add
add
popa
add
add
add
xor
outsb
add
add
add
dec
add
push
add
jne
jns
push
add
add
add
add
insb
add
dec
add
add
add
dec
add
add
push
add
add
and
dec
add
insb
add
outsb
add
xor
cmp
xor
imul
push
add
add
xor
add
add
jno
data16
add
pop
add
cmp
xor
xor
add
jne
inc
add
and
push
add
inc
add
add
add
push
add
add
jb
ja
add
outsl
add
add
and
inc
add
add
push
add
add
add
add
outsb
add
dec
add
add
and
jno
cmp
push
add
add
add
xor
dec
add
dec
add
add
jns
cmp
inc
add
ja
arpl
outsb
add
jns
dec
add
dec
add
and
dec
add
insb
add
dec
add
push
add
add
aaa
add
outsl
add
xor
add
add
xor
push
add
add
and
js
dec
add
inc
add
add
add
xor
data16
push
add
cmp
dec
add
inc
add
jbe
and
dec
add
dec
add
push
add
inc
add
dec
add
and
jb
js
xor
insl
add
add
xor
inc
add
add
inc
add
add
sub
jo
pop
add
and
cmp
xor
inc
add
dec
add
add
add
add
outsl
add
je
imul
add
ja
jne
je
push
add
add
pop
add
jne
add
push
add
arpl
bound
jp
insl
add
add
add
add
add
jp
jne
and
inc
add
add
popa
add
add
add
xor
outsb
add
add
add
dec
add
push
add
jne
jns
push
add
add
add
add
insb
add
dec
add
add
add
dec
add
add
push
add
add
and
dec
add
insb
add
outsb
add
xor
cmp
xor
imul
push
add
add
xor
add
add
jno
data16
add
pop
add
cmp
xor
xor
add
jne
inc
add
and
push
add
inc
add
add
add
push
add
add
jb
ja
add
outsl
add
add
and
inc
add
add
push
add
add
add
add
outsb
add
dec
add
add
and
jno
cmp
push
add
add
add
xor
dec
add
dec
add
add
jns
cmp
inc
add
ja
arpl
outsb
add
jns
dec
add
dec
add
and
dec
add
insb
add
dec
add
push
add
add
aaa
add
outsl
add
xor
add
add
xor
push
add
add
and
js
dec
add
inc
add
add
add
xor
data16
push
add
cmp
dec
add
inc
add
jbe
and
dec
add
dec
add
push
add
inc
add
dec
add
and
jb
js
xor
insl
add
add
xor
inc
add
add
inc
add
add
sub
jo
pop
add
and
cmp
xor
inc
add
dec
add
add
add
add
outsl
add
je
imul
add
ja
jne
je
push
add
add
pop
add
jne
add
push
add
arpl
bound
jp
insl
add
add
add
add
add
jp
jne
and
inc
add
add
popa
add
add
add
xor
outsb
add
add
add
dec
add
push
add
jne
jns
push
add
add
add
add
insb
add
dec
add
add
add
dec
add
add
push
add
add
and
dec
add
insb
add
outsb
add
xor
cmp
xor
imul
push
add
add
xor
add
add
jno
data16
add
pop
add
cmp
xor
xor
add
jne
inc
add
and
push
add
inc
add
add
add
xchg
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
in
add
and
cmp
pop
add
add
add
add
add
add
add
add
hlt
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
rolb
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
outsl
add
add
inc
add
add
outsl
add
push
add
inc
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
pop
add
push
add
xor
outsb
add
add
jns
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
je
outsl
add
imul
add
add
add
add
outsb
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
push
push
inc
gs
xor
mov
je
test
push
dec
rcrl
mov
jle
jge
lods
stos
or
arpl
mov
shll
inc
mov
inc
add
iret
xlat
push
jb
rcr
xchg
jge
test
shll
pop
adc
dec
mov
add
pop
inc
imul
push
adc
dec
fs
mov
in
daa
test
xlat
das
fisubrs
push
inc
movsl
iret
fcmove
fsubrl
cmp
or
sub
sub
iret
popf
ja
or
rcll
imul
dec
daa
sbb
aam
add
inc
pop
xchg
inc
scas
sahf
add
push
lods
call
iret
das
jbe
test
nop
xchg
in
mov
imul
mov
and
cmp
lret
mov
pop
repnz
into
ja
fwait
xlat
std
out
xchg
lods
in
aad
sbb
fs
mov
enter
call
jne
rep
fadds
rcrb
daa
mov
loope
mov
push
add
xchg
pop
sub
lret
out
pop
jl
nop
adc
pop
xchg
cmc
enter
fdivp
loopne
aam
enter
jge
cmp
imul
mov
sub
rorl
jns
iret
or
jg
pop
insb
adc
dec
mov
outsb
sbb
mov
int3
and
in
inc
jmp
adc
adc
jmp
mov
scas
outsl
xchg
loope
roll
xchg
mov
orl
scas
lcall
mov
lock
iret
cltd
out
add
lds
mov
cmpsl
movsb
popf
push
scas
insl
jmp
sbb
mov
lds
adc
xchg
and
add
jmp
add
or
addr16
jge
pop
arpl
ja
push
dec
jle
sahf
cmpsl
sub
stos
jecxz
sbb
and
in
cmc
pop
dec
std
and
jnp
or
xchg
lahf
xchg
aam
fstpl
and
in
test
lahf
cmpsb
push
mov
cwtl
scas
xor
xchg
mov
insl
fs
ficoml
fdivrl
cmp
scas
mov
mov
rcr
mov
loope
xchg
decb
mov
popf
cmp
loope
mov
jmp
adc
out
push
mov
int3
outsb
xchg
mov
shrl
mov
and
push
xor
and
mov
pushf
fldl
cs
xchg
add
mov
in
pop
add
pop
daa
mov
xchg
cmpsb
mov
dec
imul
roll
mov
nop
xor
movsl
ja
out
scas
les
stos
add
data16
stc
xchg
sar
and
mov
dec
dec
scas
aas
jg
mov
lock
repz
adc
sub
cmp
xor
mov
push
scas
in
jmp
rcrl
pushf
rol
mov
inc
adc
dec
shrb
in
jecxz
stos
inc
mov
and
iret
dec
push
ficoms
xor
mov
inc
mov
lret
test
jno
frstor
mov
xchg
lods
iret
and
xchg
cmp
xlat
xor
push
aam
rcll
dec
test
xchg
sub
nop
insb
dec
lods
or
mov
iret
das
aas
aad
out
orl
addl
inc
add
pop
repz
rclb
pop
daa
fs
out
mov
jle
dec
sub
xorb
scas
call
sub
cltd
ljmp
mov
pop
shrl
fs
mov
jae
mov
xchg
jns
sti
or
sar
int3
arpl
mov
stos
push
sbb
shlb
inc
bound
hlt
jg
push
xchg
dec
imull
adcb
xor
clc
lcall
push
popa
push
rclb
into
mov
lea
cmpsb
add
mov
stc
sbb
or
add
scas
sbb
insl
xor
out
xchg
mov
sbb
mov
inc
xor
jp
add
pop
push
mulb
pop
xchg
sub
enter
pop
xchg
rcl
add
fldl
into
jmp
mov
push
lods
roll
cmp
add
mov
push
into
cmpsl
xor
inc
push
int
aam
adc
sbb
push
int
mov
clc
aam
pusha
xchg
imul
and
xchg
jp
xor
xchg
xor
out
mov
test
rolb
push
adc
fisttpll
scas
sub
xor
push
cli
rcrl
pop
fwait
shrl
into
fnstenv
push
jecxz
adc
mov
lock
cmp
sahf
jb
jo
mov
sub
dec
movsb
sbb
mov
mov
cmpsl
mov
xchg
xlat
fsts
sti
aaa
xor
nop
leave
nop
cmp
orl
inc
push
jle
dec
and
xor
stos
lds
mov
popa
lock
repz
rorb
cmp
fsubl
lret
loop
jo
movsb
rcrl
js
popa
nop
imulb
lods
and
test
lret
stos
lds
and
mov
xchg
or
outsl
jnp
daa
push
and
out
loop
jl
in
xor
out
inc
movhps
xchg
sbb
and
xor
mov
push
call
mov
cld
mov
popf
and
sbb
daa
pop
test
lret
or
aad
dec
mov
loop
es
dec
xchg
jns
xor
and
aam
push
xchg
ror
xorl
pop
mov
jo
clc
inc
xlat
sbbl
push
cmpb
lock
call
fisubrs
mov
inc
inc
mov
fildl
shll
mov
push
push
push
mov
test
mov
push
pop
outsb
roll
jb
mov
leave
mov
lahf
sbb
rcrl
inc
mov
loop
stos
lods
pop
mov
clc
loop
pop
into
mull
push
jle
fbld
iret
shl
outsb
lret
or
push
das
inc
mov
mov
dec
jp
popa
jge
lea
push
loopne
je
pusha
sub
adc
push
mov
into
adc
rorl
adc
fsubl
dec
out
and
popa
xor
shlb
into
aad
jmp
out
adc
cmp
xor
rcr
pusha
repz
inc
push
test
xchg
pop
cwtl
lock
adc
scas
sar
jge
fisubrs
jp
inc
iret
mov
jno
int
xchg
cli
mov
or
cmp
jl
jb
ss
jns
or
or
mov
inc
dec
cmp
jbe
xchg
mov
push
add
das
dec
out
push
cmpsl
movnti
loopne
lret
lods
sub
iret
mov
push
sahf
dec
jg
or
fisubs
or
pop
stos
scas
jecxz
gs
ss
jge
call
test
jle
movsl
icebp
fistl
push
ljmp
and
add
jecxz
repz
pusha
jle
dec
in
loope
inc
scas
clc
mov
xchg
movsl
sbb
sbb
fucomp
mov
dec
dec
jns
pusha
jb
jo
fs
mov
aas
iret
scas
and
sbb
mov
fdivp
ret
sub
shrb
mov
out
cmp
sti
push
cmp
sub
inc
add
push
sbb
scas
xor
mov
jmp
iret
ss
jo
mov
add
xlat
xchg
mov
cmpsl
cmpb
jmp
scas
test
popf
loopne
int
pop
mov
or
iret
mov
addr16
cwtl
dec
jo
and
adc
jae
iret
and
inc
popf
push
sar
xchg
mov
jae
fidivl
pop
sbb
add
jo
mov
int
mov
sbb
push
and
clc
cwtl
push
push
jns
pop
or
xchg
fsubrl
adc
cld
lahf
dec
cmp
pop
pop
test
insb
sub
fcmovu
cmpsl
mov
fists
xor
mov
mov
sub
push
xchg
jo
mov
push
mov
lret
jmp
scas
lock
sbb
je
mov
sub
iret
push
rcll
rol
xchg
stc
cmc
jg
je
xor
mov
shr
daa
mov
push
xchg
lret
fwait
mov
outsb
shlb
pop
test
inc
rcl
push
mov
test
imul
push
xchg
mov
mov
mov
mov
movsb
adcb
xor
sti
sub
mov
push
lcall
mov
inc
lret
loopne
fcoms
pop
xchg
push
jo
rorb
int3
inc
adcb
dec
shll
or
enter
xchg
icebp
jbe
rcl
jg
divl
or
shlb
out
mov
inc
sbb
mov
xchg
into
pop
out
inc
dec
mulb
mov
fwait
sbb
mov
xchg
fcoms
push
in
push
out
cmpb
scas
cmc
int3
stos
mov
rorb
ljmp
into
inc
mov
add
js
xchg
xchg
addr16
mov
jbe
push
lds
shl
js
ret
pop
gs
sbb
inc
stc
push
add
mov
rorb
mov
and
testl
dec
int3
sbb
mov
imul
pusha
mov
dec
add
rcl
daa
inc
lahf
inc
mov
insb
fildll
fldt
dec
es
mull
fs
jmp
push
ret
lods
in
fisubrl
and
out
xchg
pop
adc
xlat
cmp
or
xorb
in
fcomps
xchg
rcrl
fmulp
test
iret
out
adc
xchg
je
add
test
dec
or
xor
xchg
push
outsb
adc
aam
mov
and
scas
mov
das
adc
push
sbb
jne
jecxz
dec
xchg
inc
jl
mov
inc
shrb
cmp
fs
je
aas
xlat
pusha
nop
xchg
ljmp
or
push
sub
mov
loopne
shlb
xchg
jnp
mov
and
ret
xchg
in
in
fcomi
jae
xchg
in
dec
sbb
das
shll
iret
adc
ja
lods
jp
or
ret
fdivrl
into
mov
cmp
in
repz
push
push
push
and
push
mov
sbb
scas
fs
out
mov
lock
mov
dec
inc
scas
subl
popf
jae
mov
jnp
daa
ss
jle
fdivl
adc
mov
iret
jecxz
ret
sbb
sbb
loopne
mov
enter
xchg
mov
iret
inc
mov
fsubrl
xor
sbb
xchg
ret
aas
daa
jb
sbb
out
movsl
out
or
pop
xchg
mov
cmpsb
dec
stc
push
into
dec
jmp
stos
jp
iret
sbb
movsl
hlt
int3
cwtl
mov
sub
and
ja
aaa
into
inc
jl
mov
push
push
or
js
push
adc
mov
jg
out
xor
mov
rcr
test
pusha
sub
loopne
pushf
and
in
ror
fsubl
lods
ss
jle
cli
arpl
pop
or
jae
into
xchg
jne
and
mov
iret
test
sub
loop
addr16
xchg
dec
mov
add
pop
mov
scas
mov
int3
dec
shlb
xchg
icebp
mov
ss
jecxz
add
lret
orb
mov
cmp
or
fisubl
inc
gs
xchg
insl
pop
rcrl
fnstcw
sub
xchg
popf
lret
xor
xor
xchg
call
fisttpl
add
into
in
fs
iret
xor
sbb
int
mulb
mov
push
sbb
das
cmp
aam
push
xor
lret
test
cwtl
mov
pop
jne
into
pop
leave
adc
and
pop
mov
pop
lods
dec
adc
or
rcr
loope
inc
xchg
insb
andl
push
adc
xchg
xor
nop
iret
ljmp
add
sub
inc
and
je
vunpcklpd
dec
or
neg
das
push
cmp
cmp
nop
aaa
xchg
pop
push
hlt
mull
pop
xor
mov
xchg
mov
frstor
xlat
push
cli
outsb
iret
fabs
xorb
push
insb
cltd
add
mov
cmp
sub
mov
sub
mov
mov
adc
shrl
scas
adc
out
ficomps
stos
pop
scas
icebp
shr
mov
cmpsb
daa
or
arpl
xchg
ret
lea
fcomps
xchg
mov
outsl
push
into
rorb
sbb
rclb
xchg
orl
leave
and
adc
add
scas
mov
sbb
sbb
rorl
imul
cmp
popa
cltd
xchg
jge
inc
out
nop
inc
dec
adc
and
mov
sbb
dec
nop
movsl
dec
dec
lret
and
pop
iret
pop
pop
jp
inc
xor
xlat
sarb
push
or
push
push
cmp
xchg
fcmovb
mov
jb
sbb
popa
mov
das
pop
mov
scas
aas
lahf
idivl
aad
dec
mov
sahf
dec
add
inc
daa
insl
or
pop
rcrb
das
ret
cmp
mov
adc
mov
cmpsb
insb
mov
dec
ljmp
negl
xchg
popf
mov
adc
adc
mov
icebp
xchg
pop
inc
ljmp
mov
gs
in
sub
es
out
adc
stos
pop
in
push
xchg
push
iret
push
arpl
in
rcll
mov
add
mov
xchg
pop
cmpsl
sub
cli
shll
insb
popa
mov
lock
fisttps
iret
jne
enter
mov
sarl
sahf
lret
ja
in
rcr
jle
sub
jmp
jnp
in
and
mov
or
popf
insb
pop
fnsave
jmp
adc
mov
outsl
or
pop
adc
jbe
in
pop
iret
das
push
nop
addr16
mov
movsb
outsl
fcomip
jp
and
iret
xchg
inc
les
xchg
cltd
jmp
pop
inc
inc
xchg
lock
jp
cld
enter
mov
inc
push
mov
mov
push
pop
shll
ss
pop
or
daa
push
sbb
sub
or
mov
lock
xchg
xchg
orb
jns
fcmovnb
jo
out
test
out
test
rclb
sahf
push
push
jp
scas
jne
dec
lret
shl
cld
negl
jbe
ret
inc
sub
cwtl
xchg
cmp
mov
xlat
xchg
cmp
mov
nop
dec
inc
xor
pop
rcl
xchg
popa
scas
xor
movsl
mov
fs
scas
adc
mov
addr16
aaa
addr16
les
shrb
inc
test
outsl
cmp
dec
les
jg
adc
xor
sahf
xor
repnz
cmp
pop
ror
push
sbbl
jmp
cmp
shrb
rclb
clc
pop
fs
lea
stc
cmp
movb
inc
fcmovbe
mov
fs
dec
scas
pop
dec
xchg
sbb
jns
js
and
cld
sub
adc
jp
push
cmp
loope
cmp
test
sub
in
leave
pusha
aaa
rcll
jge
cmpsb
mov
ljmp
in
popf
aas
xchg
popf
sub
loopne
or
jl
mov
scas
negb
mov
xchg
xchg
movsb
bound
aad
xor
mov
dec
jne
pop
mov
andb
scas
enter
ret
push
xorb
xor
push
add
xchg
je
push
xchg
cmp
hlt
adc
xchg
cmpsl
sbb
iret
sub
sub
cltd
pop
push
cld
arpl
or
sbb
push
sub
and
adc
xorl
sub
ror
sahf
mov
lcall
in
xor
mov
mov
dec
sarl
sub
pop
jns
inc
lods
cs
iret
mov
dec
dec
aam
ss
nopl
ds
cld
into
mov
sahf
xchg
adc
cmpsb
lret
subb
or
mov
loop
popf
cmpb
xor
jae
cmp
nop
sub
mov
cmp
mov
mov
cmp
adc
fistpl
mov
xor
dec
mov
outsl
mov
and
dec
clc
lea
push
xchg
adc
adc
sahf
rep
mov
testl
mov
adc
lds
inc
push
ja
cltd
sub
push
mov
sub
xchg
xchg
in
pop
mov
add
iret
stc
jg
in
mov
mov
mov
jmp
imul
pop
cmpsl
fs
cmc
dec
movsl
xchg
cwtl
mov
and
scas
outsl
pusha
lret
sub
mov
das
xchg
addb
mov
push
std
xor
xchg
and
dec
iret
and
or
xchg
mov
into
adc
add
scas
je
inc
pop
shr
jmp
gs
push
dec
xchg
in
and
scas
lea
lds
add
pop
ret
pop
xchg
out
mulb
add
fdivs
scas
lea
xor
cmp
dec
pop
movsb
lret
mov
or
pusha
adc
add
mov
mov
pop
shr
loop
lea
incb
das
push
imul
int3
fbld
sti
int3
xchg
idivb
mov
xchg
aam
iret
adc
or
jmp
xchg
cli
ljmp
mov
sub
xchg
push
mov
jmp
cltd
xchg
mov
out
mov
pop
pop
scas
dec
jns
dec
rolb
popa
pop
jecxz
sub
iret
cmp
clc
hlt
loop
mov
jl,pt
add
pop
imul
scas
dec
push
inc
mov
lahf
dec
xor
adc
push
mov
sbb
cld
mov
dec
iret
sub
fdivl
xchg
sub
insb
xchg
pop
and
outsl
cld
sbb
in
pop
clc
mov
sbb
lret
mov
push
xchg
sub
rclb
xor
mov
das
dec
js
xchg
cmp
repnz
cmp
in
iret
testb
in
mov
sahf
adc
popa
iret
jle
inc
sub
add
rcll
shlb
iret
add
icebp
cmpsl
fcmovnb
jp
aad
jge
lea
test
jne
out
sbb
rolb
bound
sbb
hlt
jne
iret
rcl
shll
pop
mov
ja
movsb
mov
xor
inc
iret
outsl
sarl
sub
mov
aam
scas
movsb
cmpxchg
cs
adcb
sub
cld
call
sub
rcrb
adc
aad
push
outsl
sti
push
cmpb
in
mov
stos
push
jne
ret
and
adc
gs
test
mov
das
dec
xchg
jne
add
mov
jg
dec
sbb
nop
insl
xchg
int
cmp
cmp
push
and
add
scas
mov
iret
jae
popf
inc
mov
loope
ds
pop
dec
sub
sbb
rorl
push
stos
int
test
outsl
push
mov
add
arpl
fiadds
jno
push
out
aaa
iret
add
stc
xor
repnz
pop
sub
push
fidivrs
pop
xchg
mov
ret
aam
xchg
in
iret
xchg
cmp
imul
das
fdivl
roll
mov
lea
sub
sbb
jno
sub
lods
movsb
int3
push
and
or
fstpl
xchg
add
and
ror
mov
mov
rorb
stos
jg
into
arpl
inc
adc
aam
jge
dec
sbb
insl
scas
fidivl
mov
ja
lock
or
and
idivb
sti
std
cmp
movsl
imulb
les
int3
xchg
sub
scas
mov
dec
mov
nop
das
scas
ss
lds
mov
jnp
lock
mov
lods
dec
jno
mov
imul
dec
gs
adc
cmp
int
mov
iret
out
mov
into
lock
mov
repnz
inc
ret
or
cmp
ror
nop
popa
sbb
aaa
gs
sub
pushf
xchg
cli
dec
adc
ret
in
sar
sub
sub
dec
mov
cli
xor
lds
mov
inc
and
pop
mov
mov
adc
fsts
insl
sti
ret
inc
pop
aas
iret
aaa
jle
add
popf
dec
pop
inc
and
adc
or
add
icebp
hlt
mov
arpl
decb
fisttps
rcl
inc
mov
push
stos
inc
xor
mov
rcll
inc
push
mov
pushf
popf
sbb
add
inc
or
add
daa
data16
das
jg
sub
insb
ljmp
fcoms
cmpsl
jmp
inc
and
lock
pop
sub
jne
mov
das
into
pop
std
lea
pop
fiadds
scas
in
adc
rcl
pop
fidivrl
mov
lock
pop
and
jecxz
push
xchg
sarb
cmpsl
out
iret
mov
jge
xchg
repnz
call
mov
fwait
and
xchg
bound
push
xchg
cmp
iret
xchg
gs
mov
roll
jmp
mov
lds
pop
arpl
divb
adc
inc
fldcw
jo
xchg
push
cwtl
nop
ret
test
call
jne
jge
cmp
call
mov
pop
scas
inc
jmp
movsb
cpuid
jnp
daa
outsb
or
sbb
xchg
xor
sub
adc
xchg
jns
xchg
xor
iret
mov
xchg
sub
xchg
or
negb
lea
xchg
fsubs
mov
inc
mov
imul
pop
lods
mov
rolw
fbld
cli
movsb
pop
nop
fnstsw
xchg
roll
shlb
add
xchg
cmp
aad
adc
into
dec
xchg
lds
fstpt
lods
lock
xchg
iret
test
fsubrl
into
xor
cmp
dec
inc
repnz
arpl
lcall
and
int
sub
int
dec
sbb
rolb
loopne
fcmovnb
mov
out
mov
int
inc
scas
stos
dec
dec
xchg
cmp
add
lcall
stos
xor
push
adc
lahf
or
inc
and
sub
mov
scas
add
sub
push
int3
lcall
jle
das
and
ficoms
jbe
adc
inc
and
aam
jae
popf
mov
stc
jmp
xor
xacquire
sarb
mov
xchg
mov
xchg
imul
mov
js
popf
scas
aas
mov
mov
pop
mov
mov
jnp
scas
ljmp
or
push
jle
lcall
and
jp
rorb
popf
pop
fidivrl
xor
xchg
push
xchg
int
or
sub
dec
jo
shl
pusha
pop
aaa
mov
cmpsl
or
rcl
push
loope
xchg
cmp
daa
sahf
xor
ljmp
cli
or
rcl
in
dec
inc
mov
add
int3
mov
jae
ror
lea
sbb
mov
jge
fsubrl
mov
outsl
inc
cwtl
xchg
shlb
loop
mov
repz
mov
xchg
mov
push
mov
fcomps
rcl
pop
shrl
shlb
fldl
stos
scas
add
xchg
jb
imul
pusha
sbb
cmpsl
cltd
mov
push
imul
mov
ja
lcall
add
fcoms
and
jae
mov
inc
iret
push
push
and
fs
xchg
hlt
jmp
daa
fadd
out
mov
mov
pop
xchg
cwtl
cli
movsl
pop
jge
fbstp
into
dec
xor
push
pop
and
mov
loopne
outsl
dec
scas
notb
mov
testb
pop
adc
rorb
je
mov
pop
cmpsl
dec
popa
xor
scas
cmc
jge
inc
dec
jl
jbe
stos
jmp
mov
jbe
scas
sbb
or
jo
fdivr
push
loope
into
push
sbb
jno
ror
xchg
insb
pushf
jae
loopne
shl
jno
mov
push
inc
out
adc
scas
push
push
movsl
cwtl
ja
xchg
jb
pop
iret
pop
out
lods
push
dec
lret
leave
fdivl
add
fldenv
push
pop
cmc
mov
dec
iret
lahf
adcl
mov
push
mov
mov
jle
xchg
jmp
pop
data16
push
mov
and
sar
fidivrl
dec
push
sbb
fstpt
sub
daa
repnz
iret
insb
jle
daa
mov
enter
adc
das
inc
gs
add
aad
bound
test
outsl
rcll
negl
pushf
iret
sbb
inc
or
shlb
mov
mov
sbb
js
sbb
xchg
sbb
in
fcomps
out
iret
fwait
sub
push
or
mov
cmp
and
iret
nop
inc
rcrb
in
into
cmp
push
or
inc
inc
filds
cmp
mov
xchg
mov
mov
ffree
adc
jae
fcomip
inc
or
in
out
and
push
jbe
gs
cmp
adc
xchg
fldenv
xchg
inc
adc
scas
xchg
xchg
jl
rcll
rcr
sbb
aam
xchg
adc
jb
in
xchg
and
je
cmp
adc
push
jb
outsl
test
push
adc
sub
iret
dec
xchg
fildl
aam
outsb
push
mov
push
inc
push
adc
ror
pop
and
cmp
push
lea
push
pop
sub
mov
movsb
gs
loope
jg
punpckhwd
cmp
scas
ja
sub
shlb
fisttpll
adc
sub
xchg
cmp
push
pop
rorl
cmp
mov
adc
mov
ss
into
cmp
pop
repnz
pop
in
mov
cli
stos
xor
adc
push
shlb
aad
hlt
into
mov
fs
iret
mov
xchg
rorb
adc
ljmp
mov
or
sbb
sbb
or
call
sqrtps
fsubrs
mov
lods
pop
or
mov
repz
push
fdivp
pop
arpl
stos
out
or
adc
pop
mov
adc
sti
and
jecxz
add
jg
push
cmc
aas
ficoms
imul
inc
outsb
popa
adc
xchg
pop
adcl
test
dec
add
pop
sarb
idivl
into
shr
or
out
inc
pop
int3
add
shll
fwait
adc
adcl
dec
push
popa
xlat
cmp
ljmp
mov
rcll
xor
xchg
jbe
enter
rcr
adc
cmp
popa
add
js
in
or
pop
or
repnz
or
int3
fistl
movsl
fdivrs
shrb
sub
inc
inc
subb
lcall
sub
add
scas
fcmovnbe
dec
pop
bound
cmp
xchg
mov
cmp
dec
inc
scas
iret
push
pop
or
in
xchg
outsb
push
push
in
inc
shr
out
dec
fs
mov
jae,pt
mov
xchg
adc
mov
lret
and
xor
xor
ja
jo
sub
push
shr
int3
mov
jle
mov
call
clc
add
je
ja
fstps
idiv
out
xor
adc
iret
test
stos
dec
in
bound
xchg
jb
jb
dec
ja
js
jne
addl
out
mov
mov
push
shll
add
in
lods
and
stc
jecxz
scas
mov
data16
sarl
leave
or
cwtl
lods
sbbl
kmovw
cld
adc
mov
dec
scas
push
cmpsl
dec
cmpsl
fucomi
mov
jge
push
cmpsb
mulb
push
imul
call
xchg
mov
pushf
cli
aaa
clc
xchg
pop
insb
int
movsl
ficoms
cltd
add
test
sbb
sahf
mov
ret
iret
fildll
stos
jns
xor
xchg
sar
jmp
call
rorl
and
sub
jg
fnstsw
or
ficoml
cmpsl
cmp
fs
gs
sbb
movsl
jmp
xlat
sub
das
repz
cli
and
cmp
mov
fwait
lock
cmpsb
push
jge
add
cmc
scas
cltd
ljmp
frstor
test
adc
push
sbb
cmp
sbb
sub
sub
dec
mov
ljmp
inc
lods
cltd
rorb
pop
test
sbb
xlat
call
fwait
ja
ljmp
imul
mov
cmp
adc
or
xchg
stc
into
jmp
mov
fldenv
mov
xchg
ds
mov
pop
adc
and
out
and
mov
jno
je
out
test
cmp
jne
dec
mov
pop
lret
cmp
push
mov
mov
scas
inc
xchg
push
shrl
xchg
into
jle
push
xchg
iret
mov
jp
cmp
xchg
lods
pop
mov
shrl
inc
and
adc
ret
jno
cs
adc
jp
adc
inc
lea
xchg
xlat
mov
lea
inc
scas
dec
psubq
int3
shrb
inc
stc
dec
xchg
fcompp
icebp
xchg
lret
dec
adc
lods
and
pop
aam
xor
mov
cmp
rolb
adc
popf
xchg
mov
ret
cmp
int
mov
and
popf
cmpsb
pushaw
mov
xor
lock
mov
into
scas
xchg
test
cmp
mov
xor
jns
addb
mov
push
mov
sbb
pop
movsb
roll
add
sahf
sti
negb
fabs
lret
fst
dec
sbb
lock
ret
mov
fistpll
push
push
sbb
arpl
cmpsb
mov
notl
xchg
jmp
pop
push
pop
xlat
outsl
xchg
rorl
jo
sub
cmp
pusha
pusha
push
out
xchg
shlb
mov
ret
and
xchg
push
out
ret
shrb
inc
mov
and
iret
sti
cmp
cli
int
add
ds
mov
aas
shll
cwtl
pop
mov
aas
sub
or
sbb
int3
out
cmc
xor
pop
adc
les
xchg
jmp
jns
lods
cmp
jae
push
cs
and
icebp
pop
lods
mov
clc
pop
xchg
movsl
cwtl
lods
loop
sahf
jmp
scas
xlat
xor
sub
popf
jno
pop
add
xlat
cmp
sahf
or
jns
test
sub
jo
mov
inc
sub
scas
pop
adc
and
comiss
pop
rorb
iret
data16
popa
lea
daa
das
iret
cwtl
fbld
cmp
scas
jmp
fwait
mov
adc
repnz
pusha
xor
xchg
sbb
rcl
rcrl
xorl
add
pop
loop
cmp
xchg
in
outsl
or
dec
cmp
repz
scas
push
aas
das
mov
mov
cmpsb
pop
scas
push
iret
ja
addr16
out
xchg
sub
pusha
cmp
or
mov
fscale
sbb
jmp
fyl2xp1
jp
push
ds
sahf
loope
test
push
mov
cmpsl
stos
sbb
adc
jnp
jnp
test
xor
mov
push
stos
and
sbb
jnp
mov
inc
cmp
xlat
or
add
fcoml
jge
or
shll
mov
ret
cmpsl
push
push
cmp
out
lds
dec
incb
pushf
int
ss
xchg
repz
push
sub
jo
jne
inc
or
sahf
push
sahf
mov
push
or
xor
nop
inc
xor
iret
pop
sbb
and
mov
inc
push
jp
mov
pop
leave
xchg
sbbb
repz
rorb
lock
je
leave
int
pop
adc
scas
cmp
jge
ret
shr
pop
or
iret
lcall
mov
in
inc
je
jmp
cs
dec
jmp
lret
add
mov
shlb
stos
add
scas
mov
add
xchg
repnz
sub
loopne
out
enter
stos
pop
imul
xchg
mov
movsb
in
xchg
insl
aad
sti
mov
cmp
mov
and
xchg
xchg
test
add
add
jle
mov
xchg
out
inc
mov
mov
daa
push
mov
mov
xor
pop
fsts
lcall
loope
add
sahf
push
add
faddl
and
push
xlat
sub
adc
or
or
idivl
es
and
xor
sbb
rcrl
sbb
xor
push
push
and
cmpsb
iret
sahf
mov
add
in
rclb
cld
iret
scas
in
cmc
pop
sub
sbb
xchg
sub
shll
fsts
sub
ret
mov
push
xchg
jbe
jne
lahf
push
int
or
test
cmp
clc
cmp
pop
push
mov
fidivl
lahf
xchg
cmp
mov
inc
inc
out
xchg
scas
cs
fildl
dec
and
mov
jnp
loop
push
and
scas
push
jle
jge
sub
imul
imulb
aam
loop
jbe
shlb
mov
lahf
jns
int
sub
xchg
mov
std
ficoml
inc
rclb
test
lods
lock
popa
mov
pop
mov
mov
sbb
pop
pop
fsts
cwtl
cmc
xor
jo
lret
insb
and
test
lret
fiadds
inc
out
xor
or
shrb
xor
out
jecxz
out
into
mov
rclb
sarb
mov
sbb
imul
or
mov
je
lods
aad
ret
dec
iret
adc
cs
ficoml
movsl
mulb
ret
leave
adcl
sbb
push
mov
xor
add
pop
out
or
scas
mov
cmpsl
out
lret
fisttpll
idiv
scas
mov
jg
das
adc
js
shll
ret
cltd
mov
ljmp
sub
in
inc
sahf
inc
stos
nop
repnz
mov
cmpsb
lahf
fnstsw
mov
mov
mov
add
incb
sbb
iret
imull
adc
xchg
pcmpgtd
popa
mov
xor
jmp
lea
adc
and
xchg
adc
inc
and
add
test
scas
dec
cmc
shlb
mov
dec
lea
jo
mov
nop
jne
mov
adc
out
fidivrs
cltd
arpl
ret
and
out
sub
push
mov
cmp
test
xchg
das
xchg
mov
in
scas
xor
cmp
mov
dec
ljmp
or
scas
lret
dec
bound
out
data16
xchg
dec
ret
jmp
mov
xchg
cmpsb
in
test
inc
mov
xor
les
cmpl
dec
outsl
cmc
and
mov
shlb
xor
or
movsl
lods
fbld
clc
aam
cmpsl
pop
xor
scas
loop
cmp
mov
fcomi
sbb
scas
imull
sbb
int
cmp
lahf
push
pop
scas
mov
xchg
scas
rcl
adc
pop
push
or
rorl
sub
add
pop
adc
outsl
sbb
adc
adc
into
rcll
in
insb
rclb
mov
sbb
pop
lea
dec
fcoms
sbb
movsb
sbb
shlb
jo
jle
mov
int
data16
mov
sahf
std
es
ror
push
mov
dec
cltd
xchg
xchg
lret
std
int
movsl
movsb
jge
or
sarb
gs
and
mov
pop
les
jbe
stos
mov
cmp
stos
call
xchg
sahf
add
cmc
cmp
dec
scas
subl
xchg
xchg
dec
jne
xlat
cmpsl
ds
iret
stos
mov
stos
cltd
pop
lret
sub
sub
into
sbb
flds
lds
iret
out
push
and
xor
dec
out
inc
repz
mov
inc
int3
dec
scas
sub
iretw
sub
je
add
mov
dec
xlat
push
repnz
int
push
shlb
inc
push
sub
in
stos
cmp
aam
xchg
pop
lret
pushf
push
jns
dec
jl
sub
push
fisubrl
lret
and
adc
pop
or
lea
xchg
inc
aaa
es
xchg
jl
push
xor
in
fidivs
sbb
lret
lock
fisttpl
icebp
adc
jno
sar
ret
or
popfw
iret
shrl
mov
popa
outsb
xchg
inc
in
sbb
inc
or
int3
scas
adc
imul
jmp
std
sbb
out
test
clc
xchg
inc
cmpsb
rcr
pop
ret
or
mov
xchg
rolb
mov
imul
dec
sar
scas
insb
fcompl
insb
push
adc
mov
lcall
shrb
pop
adc
hlt
stos
aaa
iret
jmp
nop
enter
xchg
test
add
pop
mov
gs
mov
xor
mov
jno
nop
sbb
xchg
cmp
les
rolb
adc
js
out
mov
in
sbb
add
dec
pop
scas
sar
xchg
rcrl
sub
inc
adc
mov
nop
fwait
jae
xchg
iret
cmpb
js
into
jge
jb
mov
test
xchg
adc
mov
sahf
sbb
pop
inc
mov
shlb
push
icebp
pop
shll
jne
out
push
mov
adc
jecxz
ljmp
leave
scas
int
jle
das
aam
add
nop
pop
nop
pop
ret
in
ret
or
sti
leave
cmpsl
out
mov
adc
cmpsl
ret
push
sbb
jb
scas
iret
xor
mov
iret
adc
or
scas
pop
gs
jbe
aaa
push
cmpsb
lods
iret
cmp
inc
cwtl
outsl
sahf
lcall
fcmovne
adc
xchg
scas
xchg
iret
sub
fstl
jg
test
adc
fldl
and
rcrl
xchg
gs
fidivs
inc
enter
pop
dec
sub
xchg
sub
outsl
or
iret
jno
jp
es
and
xchg
scas
iret
scas
and
fimuls
dec
lret
out
loope
push
lods
and
mov
dec
xor
dec
or
sbb
js
out
cmp
push
cmp
adcb
and
push
repz
adc
lahf
addb
int
dec
pop
lock
xchg
sbb
xlat
jo
mov
or
dec
inc
xchg
jge
and
jp
cmp
mov
scas
mov
testl
mov
xorb
cmp
push
jg
shld
mov
aas
mov
sti
repnz
push
leave
xchg
jbe
push
push
popl
adc
cli
jnp
mov
push
mov
dec
mov
push
mov
cmp
lcall
jmp
and
pusha
outsb
mov
mov
sbb
shlb
xchg
mov
ljmp
mov
mov
push
sbb
imul
adc
xor
xchg
insb
ret
iret
leave
cmovp
loop
insb
enter
inc
mov
dec
hlt
into
lret
lahf
aas
mov
or
lods
xor
xchg
in
xor
lcall
push
std
mov
jo
das
add
mov
stos
test
sub
inc
out
outsl
cwtl
clc
inc
bound
inc
push
scas
ficoms
push
cmc
rol
add
pop
dec
je
iret
loop
ja
dec
xchg
cmp
fdiv
push
lcall
fildll
push
rclb
sti
js
inc
jno
fldcw
int3
aas
mov
inc
shl
jnp
xor
test
js
mov
inc
out
xchg
and
add
fisubrs
and
lds
push
jb
cwtl
scas
js
jbe
adc
cmc
inc
bound
lret
hlt
out
sub
sar
lods
and
sbb
lods
popf
add
mov
or
jae
mov
lea
jge
push
icebp
xor
sarb
pop
mov
xchg
outsb
sub
inc
push
mov
dec
rclb
pop
movsl
subl
daa
lret
mov
in
inc
or
sbb
mov
xor
mov
or
push
pop
stc
xor
rorb
push
mov
xor
outsb
xor
xor
xor
push
lea
cmc
push
mov
mov
sahf
iret
pop
jo
cmp
je
add
es
mov
in
mov
mov
cltd
xchg
xchg
out
sarb
call
push
dec
je
dec
lods
xchg
mov
iret
pop
sbb
push
hlt
xchg
out
lds
sub
shlb
pop
hlt
rcl
jne
iret
popa
or
aaa
inc
or
clc
mov
pop
adc
repnz
adcl
pushf
iret
xor
jne
inc
aas
dec
leave
xchg
lods
out
lds
jmp
push
adc
cli
cmc
xchg
xor
sbb
out
sbb
ficompl
jecxz
js
sbb
loopne
or
pushf
mov
ss
into
js
mov
movsl
xchg
fidivrs
add
adc
dec
idivl
mov
loop
sar
xchg
lahf
xor
fnstcw
mov
rclb
xchg
test
xor
movsb
mov
lds
xchg
stos
adc
movsl
daa
fsubp
jne
cld
outsb
aad
push
outsl
inc
push
mov
mov
or
jmp
lea
lds
scas
xorb
leave
fisttps
mov
mov
arpl
or
std
push
test
mov
push
inc
shll
push
insl
pop
stc
je
sbb
jbe
repz
xchg
sub
imul
fmulp
out
in
ret
loopne
xchg
push
jae
or
les
clc
scas
xchg
out
repz
push
push
iret
and
loop
in
pushf
adcl
clc
leave
push
stos
sti
dec
mov
xchg
mov
mov
or
scas
and
scas
and
in
out
aas
iret
lret
stos
or
into
shrl
scas
int
out
inc
add
xor
xchg
shlb
enter
mov
adc
mov
out
sahf
cmp
out
hlt
dec
mov
push
dec
int3
or
scas
push
mov
sub
sti
in
xor
sub
cmp
je
jmp
rcrb
jo
ja
ss
insb
scas
jb
xchg
clc
mov
test
mov
pop
lds
loopne
push
pop
getsec
lret
in
cs
notl
mov
mov
xlat
jnp
lcall
ror
div
push
pop
jg
daa
inc
aas
in
hlt
sbb
pop
movsb
movsb
mov
cmp
rclb
fstl
adc
dec
pop
xchg
dec
or
scas
xchg
pop
dec
xchg
push
push
test
imul
sub
outsb
cmp
lret
scas
cmc
mov
xchg
mov
sbb
lock
ret
lea
addr16
pusha
scas
adc
xchg
jge
stos
and
je
dec
sbb
jmp
mov
or
pop
add
aad
sbb
mov
and
push
loopne
and
insb
pop
sbb
iret
iret
imul
fwait
scas
or
xchg
pop
push
xor
mov
jmp
addr16
add
xchg
inc
adc
aad
pop
call
inc
out
rcll
sub
sbb
nop
cmp
sahf
stos
inc
adc
pop
mov
xchg
ss
xor
push
in
xor
iret
shlb
dec
shll
stos
orl
mov
das
inc
jl
scas
mov
scas
cmp
adc
rorl
fdiv
sbb
rcl
push
loope
cmpb
mov
add
add
push
jle
pushw
aad
pushf
test
mov
decl
add
push
cli
aad
sbb
or
mov
push
insb
mov
xchg
push
or
xchg
sub
dec
push
or
iret
pop
xchg
rolb
xchg
pop
push
xchg
dec
pop
push
pop
or
push
pop
data16
sub
mov
lods
push
xchg
xor
jbe
aad
add
movsl
popa
jp
shrb
sahf
lret
add
pushf
lahf
aas
push
and
push
hlt
inc
hlt
imul
aas
std
xor
daa
in
adc
jns
xchg
dec
loopne
jecxz
rclb
mov
in
sti
xchg
std
sub
and
imul
sahf
mov
push
pop
mov
vpsubsw
call
iret
movsb
gs
inc
mov
stc
insl
mov
addr16
inc
pop
scas
cltd
notl
out
popf
sub
nop
pusha
inc
add
fstps
repnz
js
mov
sub
fsubs
fidivrl
mov
push
mov
addr16
jmp
and
sub
and
sbb
das
or
mov
sti
mov
and
push
imul
jmp
sbb
scas
scas
push
mov
mov
clc
cmp
or
loopne
inc
scas
aas
cmp
cltd
mov
out
loope
mov
test
iret
test
imul
psubsw
push
shlb
jbe
or
scas
cmp
or
shrl
cmpsb
or
jb
iret
subl
and
fcoml
mov
or
int
repz
fnstsw
fisubs
lret
pushf
rorb
sbb
bound
popa
flds
and
add
sub
cmpsb
push
daa
dec
sbb
enter
in
xor
in
mov
sbb
ds
shrb
scas
mov
stos
iret
js
pop
addb
lahf
out
xor
sub
int3
dec
mov
fisubrs
into
movb
jecxz
fnstsw
xor
out
stos
enter
cmp
mov
push
xor
loop
mov
iret
cwtl
cltd
clc
add
aad
mov
iret
out
push
and
scas
mov
or
mov
out
and
dec
in
jnp
jae
mov
jmp
xor
scas
clc
push
cmpsl
out
lahf
xchg
mov
fstps
scas
mov
mov
sub
fs
lods
popl
inc
push
scas
sbb
ret
jno
mov
fmul
xchg
jb
cmp
les
sarb
repnz
iret
aad
in
lock
int
xchg
jg
xorb
repz
imul
xchg
repz
leave
push
pop
push
scas
mov
scas
and
xchg
in
ja
cmp
add
xchg
iret
add
ljmp
pop
mov
in
sti
mov
mov
in
test
sub
jle
icebp
pop
ror
or
scas
js
xorb
orl
std
push
lods
mov
sbb
cs
in
fdivrl
dec
divb
dec
rcrb
dec
xchg
or
sub
rol
push
sbb
pusha
sahf
cmpsl
mov
xchg
mov
xlat
test
xchg
inc
js
scas
fstl
arpl
popf
pop
ret
dec
inc
nop
stc
int3
xchg
xchg
push
jle
lods
add
dec
xchg
cmpsb
inc
add
scas
jbe
mov
mov
mov
xchg
scas
pop
insl
aas
sub
in
sub
sarb
ss
mov
jb
ds
push
adc
rep
mull
shrb
popf
in
sub
cmpsl
popa
jno
push
out
repnz
or
or
jle
sbb
addr16
jmp
ficomps
cmpsb
loop
sbb
jle
mov
sub
adc
ljmp
loop
std
push
push
sahf
das
stos
int3
add
out
push
rcr
sbb
mov
ficoms
mov
lret
push
aaa
lcall
lea
xchg
clc
iret
popf
mul
dec
inc
inc
ja
pop
rorl
ret
xchg
lea
mov
adc
test
cmc
xor
shll
pop
repz
ja
into
sbb
scas
push
mov
enter
frstor
iret
inc
push
pop
or
sbb
add
cmp
test
cmpsl
in
mov
sbb
fwait
adc
jmp
idiv
imul
popf
xchg
adc
xchg
sub
mov
in
jnp
jne
rcrb
adc
cmp
pop
sbb
push
and
add
mov
hlt
fisubrl
push
adc
cmc
inc
data16
loop
shl
scas
pop
xor
adc
xchg
or
sarb
ss
push
cs
inc
rolb
or
rorb
jl
cmp
cmpxchg
inc
sub
or
xor
ljmp
jbe
add
sub
cli
repz
xchg
jmp
mov
test
scas
jg
mov
inc
inc
pop
icebp
fcomps
sub
imull
or
fnstsw
mov
sarb
jecxz
data16
push
inc
fstpt
pop
sub
shrl
aad
xchg
cmpsl
scas
es
orb
fsubrl
sar
cmp
sbb
arpl
outsl
mov
pop
fcompl
out
add
aas
fwait
mov
das
cmp
pop
shrl
cmp
push
sbb
adc
jae
scas
pop
sub
sbb
test
lret
pop
sub
adc
mov
dec
xchg
jno
mov
mov
in
and
add
les
adc
xchg
cmp
add
pop
xor
sbb
sbb
rcrl
mov
clc
movsl
add
add
sub
dec
xchg
scas
xchg
sti
lods
cmp
ljmp
imul
jns
iret
test
push
insl
and
les
xchg
test
cmp
outsb
lock
or
xor
cmp
sbb
lds
fcoms
fistpll
repnz
push
mov
push
add
les
repz
enter
xchg
jno
adc
pop
aad
fsts
push
les
jp
iret
sbb
outsb
repz
push
rorl
es
lods
mov
loopne
lcall
inc
push
inc
rcl
out
mov
mov
mov
imul
rcr
ret
mov
pop
rcl
outsl
sbb
rolb
out
xorb
ficompl
adc
and
cmpsb
xor
loope
iret
inc
fstpl
pusha
jbe
aaa
xchg
adc
pop
xor
scas
pop
out
in
rcll
push
cmp
inc
addl
mov
sub
in
dec
or
bound
adc
lret
push
mov
dec
shlb
iret
xor
in
adc
mov
push
sub
and
mov
lahf
pop
mov
ds
shrl
in
jmp
cmpsl
mov
aad
add
scas
loop
push
aaa
shrl
mov
iret
push
adc
lea
test
or
xchg
mov
xor
mov
cmp
mov
mov
sub
notl
cltd
xchg
sub
aaa
mov
sub
mov
pop
clc
push
lret
sbbl
xchg
mov
test
sarl
lahf
iret
in
scas
or
movsl
mov
lret
mov
sub
push
in
push
mov
fwait
imul
xchg
inc
push
mov
adc
stos
add
cmc
push
mov
dec
pop
xor
sbb
scas
sbb
leave
lods
push
xchg
ss
pop
pushf
pop
iret
cli
pop
insl
aam
test
out
inc
push
add
sub
loopne
cmp
loope
pushf
daa
imul
xchg
xchg
mov
cwtl
jo
repnz
or
jnp
xor
push
scas
test
add
cmp
in
mov
sbb
pop
adc
shlb
jbe
adc
add
dec
xchg
fdivrp
or
fdivr
in
push
jecxz
push
xor
shlb
scas
out
pop
xchg
push
sub
push
int3
scas
subb
in
cmp
pop
pop
xchg
xchg
xchg
xchg
pop
add
jae
inc
xchg
dec
push
mov
add
rclb
sbb
fsubp
data16
mov
outsl
pop
ja
cli
sub
xchg
xorl
scas
sub
sbb
push
or
xor
out
lock
mov
jo
ret
mov
shl
cmp
lcall
mov
mov
mov
mov
out
mov
scas
push
cmp
xor
mov
gs
pop
cwtl
mov
aas
pop
out
xchg
xchg
cmp
or
mov
mov
lock
xchg
arpl
imul
jb
dec
fcoms
scas
cli
lods
leave
mov
fwait
jb
inc
push
push
jmp
or
xchg
jmp
out
jae
jb
std
xchg
sarb
js
and
data16
xchg
add
inc
mov
scas
push
add
cmp
inc
pop
sahf
xor
mov
scas
and
in
mov
lods
or
push
mov
sub
mov
dec
mov
pop
sub
pop
sbb
ss
and
xchg
jmp
cld
lock
and
sbb
mov
repz
add
push
jmp
and
clc
mov
xor
mov
notl
pop
push
icebp
mov
rorb
in
sbb
sub
xchg
push
sub
fisubrs
xor
push
sub
mov
adc
and
das
call
lret
push
lcall
comiss
mov
jmp
and
insl
and
ret
xchg
data16
xchg
sub
subl
paddsw
cmp
int
mov
mov
jo
jbe
jb
mov
jo
add
and
xlat
scas
cmc
mov
repnz
cmpsb
rcrb
hlt
sub
inc
dec
xorl
rorl
repnz
pop
lea
jle
xchg
sarb
dec
sub
mov
or
cmp
push
pop
das
jp
jno
inc
lds
pop
iret
out
adc
fdivs
stos
mov
jmp
mov
fsubrp
and
xor
fists
xchg
lahf
psubd
aas
jb
inc
inc
mov
xor
mov
push
cmp
scas
mov
adc
mov
iret
out
mov
sub
push
xchg
pop
xor
push
or
insb
cmp
fnstenv
push
jp
hlt
sbb
ljmp
or
xchg
xchg
mov
dec
loopne
mov
and
inc
xchg
ret
icebp
rcl
sub
mov
push
pop
push
repz
mov
xchg
pop
dec
lods
mov
filds
cs
jbe
mov
push
pop
push
shlb
jne
test
iret
aas
or
mov
xchg
fnsave
pop
dec
mov
and
scas
gs
push
xor
fisttpl
pop
sarl
mov
movsl
ljmpw
cld
cmpsb
arpl
xchg
add
sbb
mov
mov
fdiv
and
push
xchg
mov
cmp
pushw
or
or
and
movsl
iret
jmp
sbb
icebp
mov
out
loopne
stc
jno
inc
loope
dec
fstpt
push
dec
pop
pop
and
mov
ret
and
push
dec
test
jno
imul
xchg
inc
xchg
ljmp
xchg
rorl
popa
dec
ror
xchg
pop
and
push
adc
cwtl
loope
imul
mov
outsb
mov
xchg
addb
repnz
sbb
movsb
cmc
sti
jo
or
push
pop
lret
xor
ficomps
push
pop
jo
cmp
mov
add
lea
xchg
jmp
mov
leave
dec
sub
ja
mov
fwait
pop
rolb
fiadds
jmp
xchg
dec
cltd
into
jno
test
inc
push
and
icebp
pusha
sub
sbb
mov
mov
addl
and
or
stos
jo
insb
mov
cmp
loop
ret
outsb
popa
xor
and
jg
shlb
scas
fs
adc
mov
jge
out
lcall
jl
lahf
add
xchg
mov
or
mov
iret
mov
enter
fcoml
inc
xchg
outsl
adc
mov
addr16
scas
jle
js
inc
and
subb
lods
and
xchg
outsb
xchg
mov
lcall
mov
into
pop
jge
std
dec
cltd
pop
sub
lock
lds
xor
mov
lock
xlat
xchg
int3
scas
pusha
adc
pop
iret
pusha
inc
add
lea
pop
and
add
scas
aas
xor
and
xchg
xchg
jns
xchg
cmp
adc
add
test
xchg
jbe
mov
pop
insb
add
sbb
stos
mov
psubsb
mov
cmpsl
aam
cs
shl
adc
mov
mov
mov
iret
scas
dec
sbb
aaa
xchg
dec
fmulp
pop
push
adc
bound
xor
dec
inc
pop
sbb
adc
into
add
lea
lahf
hlt
dec
stos
dec
xchg
mov
adc
into
sub
aam
sbb
lret
jmp
jb
sahf
mov
lret
rorl
pushf
lods
adcl
vpavgb
fldt
cmpsl
rorb
dec
push
cltd
mov
roll
addl
or
pop
ret
pusha
scas
cltd
push
sbb
scas
sbb
fsts
sub
nop
scas
or
mov
dec
adc
mov
aad
sub
and
lsl
aad
cmp
into
cmp
and
xchg
fistpl
inc
lods
sbb
mov
and
xor
clc
pop
cmp
test
outsb
sarb
inc
push
ja
in
dec
mov
dec
mov
mov
adc
cmpsl
adc
jbe
jno
mov
dec
push
pushl
adc
test
push
es
mov
cld
outsl
xchg
jecxz
or
mov
cltd
sub
mov
mov
push
push
dec
lahf
xchg
mov
iret
mov
or
insb
xchg
adc
jmp
mov
nop
notl
adc
mov
dec
mov
bound
pop
xchg
out
in
jnp
pop
jecxz
addr16
aad
push
xchg
and
lret
pop
xor
dec
mov
xchg
les
stos
std
inc
xchg
test
out
cmc
mov
mov
cmp
stos
xchg
push
sub
dec
or
iret
sbb
mov
es
rcr
sbb
or
stc
cmpsb
add
test
outsl
out
mov
fisttps
inc
or
mov
dec
js
add
fnstcw
jae
daa
scas
sbbb
and
mov
mov
add
seto
loopne
xchg
dec
or
add
xor
push
jp
pushf
scas
fsts
jle
mov
push
push
sub
enter
fs
iret
insb
aas
enter
and
xchg
rcll
inc
out
rorb
sbb
mov
repz
dec
aad
stc
notb
es
push
or
xchg
mov
cltd
jne
cmc
adc
iret
mov
cwtl
push
xchg
add
push
inc
rolb
xchg
imul
mov
lods
rclb
orl
adc
scas
mov
out
jmp
stos
out
sbb
ljmp
popa
arpl
sub
push
int3
sbb
frstor
adc
push
xor
ret
test
dec
jp
xor
out
mov
dec
out
jp
jbe
idivl
push
add
imul
repz
push
add
xchg
or
iret
roll
sbb
cltd
stos
xchg
or
pop
stos
lret
les
dec
out
scas
jg
ds
jns
cmp
loop
add
mov
inc
push
jb
mov
push
fwait
in
mov
add
cmp
xchg
push
ljmp
xor
call
into
xchg
push
out
fwait
add
ss
fwait
shll
xchg
pop
jge
push
fcmovnb
aas
jmp
fisubrl
rcrb
cmc
inc
and
lea
iret
sub
imul
xchg
bts
inc
and
xchg
ljmp
cli
adc
push
inc
push
mov
dec
dec
push
shl
ds
cmpsb
mov
rcrl
xor
dec
pop
mov
dec
lret
jae
popf
xchg
lea
scas
mul
pop
outsb
fmuls
out
push
xor
arpl
dec
iret
bound
mov
cmp
cmp
mov
push
xor
rcrb
jp
pop
stc
dec
adc
or
shlb
sub
cs
mov
dec
xor
cwtl
mov
imul
mov
cld
out
into
push
mov
mov
or
mov
adc
inc
mov
push
push
mov
cmc
daa
iret
push
xchg
loope
lock
inc
mov
push
xor
and
inc
lcall
rcl
sbb
and
xchg
or
mov
stos
dec
adc
je
push
xchg
into
sub
jecxz
call
ficomps
mov
addl
jg
pusha
je
pop
mov
xchg
push
out
sbb
int
je
push
push
cwtl
push
popa
les
movsb
pop
pop
out
xchg
ud0
pop
mul
fs
cltd
adc
sub
sti
pushf
loop
mov
aas
jno
xchg
popf
je
sarb
pusha
xor
insl
adc
leave
inc
push
xchg
add
loop
jge
les
mov
iret
lods
arpl
inc
xchg
mov
shrl
les
jl
scas
xchg
cltd
mov
cmpsl
push
xchg
enter
decb
out
mov
inc
jb
pusha
int3
mov
iret
cmp
or
inc
and
mov
fidivs
xchg
out
adc
cmp
neg
or
js
mov
loopne
dec
pop
scas
ja
sbb
sahf
cld
add
bound
mov
iret
out
jmp
jbe
fidivrl
mov
xchg
sub
cli
and
stos
pop
insb
jp
add
cmp
fidivl
xchg
push
mov
mov
call
aam
add
rcl
mov
cli
sub
mov
mov
lahf
in
cmp
rolb
fcoms
sti
xor
ret
outsl
gs
xlat
mov
bnd
push
push
scas
adc
fidivrs
notb
or
rcl
push
fidivrs
enter
push
mov
inc
fcoms
sbb
add
mov
push
in
rorb
bound
daa
jle
ss
iret
xor
mov
lods
in
mov
adc
insl
xchg
push
notl
cltd
test
pusha
xor
fdivs
gs
mov
xchg
out
cwtl
jle
inc
xor
lods
mov
pop
and
push
adc
inc
cmpsl
mov
dec
add
addr16
lahf
mov
lret
mov
and
mov
js
mov
nop
xor
movsb
xlat
inc
les
call
adc
xchg
cmp
cmp
das
shrb
mov
sbb
mov
sub
or
repz
inc
jge
sbb
sti
shlb
push
int
add
out
outsl
jo
punpckldq
adc
mov
sub
xchg
not
out
add
fcmovne
ja
das
fst
xchg
sbb
cmc
cmc
sbb
dec
imul
or
dec
push
cmp
iret
icebp
mov
add
jo
enter
xor
xor
nop
xchg
test
jae
inc
sahf
addb
pop
shrb
sarl
arpl
xchg
cmp
fsubs
das
xchg
jp
and
jmp
and
scas
or
sub
ret
xchg
pop
in
addr16
or
popf
push
xor
xchg
fs
loope
loop
fidivs
cmpsl
add
xchg
or
pop
call
in
or
dec
inc
xor
push
add
stos
dec
inc
xchg
mov
fnstenv
inc
adc
sbb
stos
nop
push
addr16
scas
add
pop
cli
sub
and
cs
cmp
scas
movd
pop
adc
scas
dec
xchg
dec
out
fwait
dec
and
xor
push
pop
js
adc
xor
rcrb
shr
xor
adc
lods
inc
sub
xchg
lock
adc
lcall
and
stos
fwait
pushf
repnz
in
lds
adc
and
or
decb
mov
es
icebp
aas
dec
scas
xor
inc
fwait
outsl
or
mov
movsb
cmp
call
fistps
fidivs
or
mov
fwait
stos
sbb
cld
inc
sub
sub
pusha
subb
shl
mov
int
data16
and
jnp
imul
sarb
imul
adc
push
push
sarb
jo
sbb
idiv
cmp
jns
frstor
out
int3
int
in
cmpsl
pusha
push
adc
xchg
and
pop
scas
js
push
dec
shlb
rcl
adcl
lds
imul
jo
mov
sub
dec
das
xor
pop
cmp
xchg
push
rorb
cmc
ffree
jne
and
nop
sbb
cmpb
mov
push
loopne
push
stos
mov
pop
in
sub
in
push
nop
icebp
mov
pop
xchg
adc
in
rcr
loopne
add
mov
scas
adcb
mov
and
lret
jg
pusha
or
out
shll
pop
pop
inc
cmc
dec
aam
mov
into
shlb
cmp
jmp
mov
inc
fdivs
dec
bound
xchg
imul
scas
js
sub
xlat
addr16
mov
xor
add
cmp
scas
lcall
and
sahf
mov
cmp
mov
test
mov
push
sbb
xchg
scas
cs
ds
or
rolb
pop
stos
rcrb
mov
shr
mov
dec
out
into
lods
iret
mov
ret
xchg
cmp
rcrl
pop
sub
cmp
dec
xchg
ljmp
or
xor
push
gs
dec
pop
ss
mov
fcom
roll
scas
cmc
loopne
xlat
or
into
in
out
shrl
cmp
dec
scas
mov
dec
fmuls
mov
ljmp
fcmovu
rcrb
mov
mov
mov
addr16
repz
jo
arpl
and
xchg
cld
shlb
and
in
aad
enter
lock
mov
pop
decl
fstl
mov
incb
lret
cmpsl
push
lea
fidivl
mov
sbb
lret
scas
das
iret
mov
jbe
dec
popf
mov
icebp
mov
cmpsl
mov
pop
cmp
jae
mov
neg
imul
adc
es
pushf
es
mov
mov
adc
fsts
dec
pop
adc
test
add
iret
imul
sbbl
pop
xchg
jb
pushw
out
iret
insl
cmp
jno
xchg
in
sub
pop
mov
int
lods
icebp
cs
push
cltd
out
rorb
pushf
xor
pop
lret
in
or
adc
aam
and
cmp
call
stos
ds
stos
gs
mov
cs
sar
xlat
cmp
mov
loop
mov
sub
insb
lds
fstps
lods
gs
sbb
mov
mov
popa
into
das
mov
xlat
outsl
xor
icebp
push
xchg
in
push
push
push
cmp
lahf
addr16
adc
inc
xchg
repnz
xchg
in
sti
dec
clc
scas
fwait
add
iret
insl
xor
repz
xchg
xchg
jle
rcl
pushf
ds
iret
lcall
jbe
sbb
pop
mov
mov
fldcw
paddd
aaa
int3
sarb
ja
add
pop
push
mov
shlb
pop
mov
popf
fldenv
shrb
mov
push
cmpsl
pop
adc
push
sbb
or
sub
xchg
xchg
pop
mov
not
dec
adc
pop
mov
push
sahf
in
out
lret
sti
pusha
fisubrs
mov
xchg
sub
pop
cltd
ret
fsubrl
leave
mov
fisttpl
decl
mov
pop
popa
loopne
cs
inc
mov
sub
pop
fmuls
mov
mov
loopne
ficoms
mov
mov
mov
pop
jp
shr
xchg
pop
xor
xor
adc
lods
mov
in
cmp
fcoml
lock
dec
prefetchw
or
sbb
daa
andb
xchg
xchg
out
and
mov
fs
push
adc
imul
push
mov
cmp
sub
pop
sbb
adc
lds
dec
push
xchg
arpl
mov
sub
arpl
push
jbe
jmp
ret
push
iret
adc
lret
and
sub
loopne
push
mov
cmp
ds
sbb
xchg
pop
mov
insb
cmp
push
cmpsl
mov
ret
cmpsl
rcl
adc
jbe
iret
in
mov
je
in
and
cmp
movsl
dec
pop
mov
fs
mov
xor
shr
test
in
mov
pop
movb
ror
out
cmp
scas
push
cmp
pop
sub
shlb
pop
out
adc
outsb
stos
inc
xchg
xchg
into
jbe
fcompl
and
ficompl
rolb
mov
insb
xchg
jg
loopne
rol
es
adc
xchg
adc
les
inc
iret
je
bound
ss
lret
iret
repz
in
jecxz
decl
subl
cwtl
push
sub
into
or
cmc
movsb
xor
iret
je
int
daa
cmp
sub
push
xchg
fsubs
imul
add
pop
sub
mov
dec
xor
sub
cld
xchg
lock
test
repz
addr16
mov
dec
scas
nop
icebp
mov
sbb
cli
mov
std
mov
test
js
imulb
shlb
push
fwait
xlat
cmpl
push
adc
aad
add
inc
imul
pop
test
orl
enter
aad
gs
push
adc
sub
es
std
aad
mov
shll
shl
mov
xchg
iret
addr16
iret
js
pop
fsubrs
jne
rcrl
aaa
cmpsl
dec
xchg
sub
sarb
push
fcomps
shrl
pop
and
ljmp
pop
mov
iret
ror
push
or
sub
stc
lahf
inc
hlt
adc
out
adc
mov
mov
and
mov
and
icebp
into
cmpsb
or
scas
inc
xchg
push
adc
int3
loopne,pt
test
insl
pop
inc
cwtl
rcr
add
bound
gs
mov
aaa
mov
xchg
xor
dec
fisttpl
data16
fisubrs
xlat
imul
dec
cltd
push
inc
testl
and
test
dec
push
push
cmc
lock
out
push
xchg
cmp
js
test
cmp
shrb
fdivrp
das
jo
sub
divl
ret
xchg
mov
outsl
sub
push
rclb
jmp
xchg
xor
adc
push
xor
xchg
dec
nop
mov
fsubrl
rclb
add
insb
xchg
mov
adc
divl
mov
lods
scas
jle
shr
loopne
out
es
jp
and
scas
mov
std
iret
push
sti
imul
shl
push
shr
mov
sbb
scas
das
jle
xor
repnz
push
js
lcall
int
lea
xor
test
loop
jge
mov
pop
fs
stos
pop
xor
mov
inc
inc
push
sub
add
jo
lret
repnz
psrld
idivb
push
sub
dec
aad
push
pop
jb
push
inc
repz
scas
jns
cltd
mov
jo
or
cmpsl
pusha
mov
arpl
popa
cli
lods
fnstsw
loopne
outsl
pop
leave
mov
fldt
scas
xchg
cmp
out
clc
cs
or
shlb
std
fadd
adc
sub
sbb
xchg
mov
or
int3
je
sbb
or
into
sub
sbbb
gs
add
push
fistpll
mov
scas
repz
out
adc
dec
xchg
jle
dec
dec
sub
sbb
mov
sub
jae
xor
push
push
xchg
fs
mov
cmp
rorl
scas
hlt
dec
or
rorb
dec
les
pop
ljmp
lea
mov
sbb
pusha
jmp
dec
xchg
cmp
mov
jmp
ret
loopne
iret
scas
push
sarl
das
int
and
sbb
cmpb
call
outsl
arpl
dec
ror
fst
aad
mov
sub
out
or
iret
iret
and
cmp
outsb
pop
mov
icebp
pop
or
and
or
adc
sbb
fstps
push
pop
xchg
xchg
test
lcall
iret
fadds
notl
xchg
mov
ds
dec
outsl
out
fistpl
insb
lcall
in
xchg
xor
xor
scas
js
femms
rorb
es
loope
inc
adc
movsb
jmp
das
mov
hlt
lret
out
cwtl
adc
xchg
sahf
xchg
lret
xlat
dec
comiss
push
xchg
push
pop
lret
jp
add
scas
cs
lods
shlb
aaa
pop
jle
aad
xchg
mov
prefetch
fstp
add
jp
dec
cli
mov
add
test
pushf
hlt
cs
xor
pop
iretw
rclb
mov
inc
jo
mov
test
jo
mov
push
inc
inc
aaa
rorl
jge
xchg
shll
cltd
shll
add
xchg
mov
dec
test
inc
gs
scas
arpl
mov
cmp
imul
xor
imul
in
aas
dec
xchg
jecxz
and
pop
mov
aaa
cmpb
test
sti
rcll
cmc
lock
lahf
lahf
ror
dec
inc
cs
cmc
mov
fs
xor
out
ret
aad
xchg
movsb
inc
cmp
movsb
lcall
xchg
lret
pop
aad
dec
jb
push
incb
filds
xchg
jno
cmp
mov
mov
scas
mov
daa
fwait
mov
aaa
cmpsb
repz
push
mov
fmull
sbb
pop
nop
scas
cmp
adc
and
into
lds
lods
xor
xor
hlt
inc
cmp
fnstenv
fstpl
aam
jnp
hlt
hlt
cmp
cmp
or
mov
or
and
loope
xchg
fimuls
sbb
cmpsb
cwtl
sahf
mov
scas
and
int3
pop
rorb
sbb
lea
out
and
insw
in
test
repnz
insl
jle
add
scas
daa
inc
adc
leave
movsl
cmpsl
mov
xor
into
fwait
inc
mov
rcrb
adc
iret
mov
shll
insl
icebp
mov
shll
aas
pop
pop
xchg
lcall
xor
inc
test
mov
cltd
scas
insb
out
test
repz
adc
leave
out
ficomps
cmp
xchg
in
insl
les
pusha
jecxz
push
sub
call
xchg
jb
daa
insl
aad
push
and
fwait
xor
scas
cmp
cmpl
scas
mov
xor
mov
jne
movsl
and
lods
rolb
sub
mov
mov
pop
fidivl
es
xchg
dec
cmp
pop
mov
popa
mov
scas
nop
mov
gs
test
pop
jle,pn
jb
ficompl
xor
ret
push
mov
mov
insl
int3
int
addr16
into
ret
fwait
in
in
add
icebp
cmpsb
fcomps
iret
bound
arpl
mov
sti
fistl
lods
sti
shll
rcl
test
xor
sar
nop
filds
sbb
shll
pop
jo
clc
rcrb
into
cmp
mov
dec
push
sar
jp
adc
pop
fcomip
into
inc
stc
lret
in
fcoms
test
mov
and
mov
leave
sbb
mov
into
daa
pop
adc
or
xchg
sub
adc
psllq
iret
or
lods
pop
and
out
subl
sub
outsl
mov
sub
mov
in
lcall
gs
push
or
testl
xchg
pusha
movsb
loop
mov
out
sbb
add
btr
into
pop
iret
xor
inc
xorl
push
jle
jge
sub
scas
xchg
pop
sub
shrl
inc
shl
aas
out
test
xchg
mov
mov
or
push
cmp
jg
jecxz
scas
out
leave
mov
aam
dec
clc
dec
or
std
push
popa
sub
add
xchg
mov
adc
inc
xchg
fwait
jmp
fsts
insl
shl
push
ret
hlt
outsb
test
pop
iret
fnsave
pushf
pop
inc
lret
push
xchg
arpl
aas
aam
out
sub
aam
dec
sahf
lcall
xchg
cmp
int
pushf
push
push
int
add
sti
and
scas
mov
mov
ret
insb
ret
mov
cmpsb
cmp
jbe
sbb
add
adc
inc
sub
pop
imul
sarb
push
pop
in
or
and
ja
cmp
mov
call
jg
mov
sti
and
cmpsb
sbb
xor
xlat
xlat
lahf
xchg
lret
and
fisttpll
xchg
mov
outsb
pop
pop
out
shrl
data16
or
push
out
jge
xchg
clc
insb
and
iret
xchg
xchg
iret
roll
xor
ficoml
adc
fadd
ror
cmpsb
lods
xor
xchg
les
stos
and
inc
hlt
das
xchg
ror
lea
icebp
mov
fwait
shrb
mov
dec
iret
xchg
pop
sbbl
xchg
fnstcw
xor
dec
ret
and
rsm
ljmp
jmp
mov
cmc
xor
shlb
add
xchg
cmp
push
cmpb
dec
pop
out
ja
cs
cmpsb
int
out
scas
jg
pop
and
jge
push
lcall
jb
rolb
mov
add
xchg
js
iret
leave
jmp
loop
xchg
cwtl
inc
jno
sub
popf
rcll
mov
and
into
imul
out
int
scas
aad
jle
shrb
arpl
mov
dec
lds
jo
insl
pop
sub
fwait
xchg
and
shr
lret
jns
into
add
dec
adc
arpl
shrb
adc
out
jne
push
decb
rolb
pop
jmp
xlat
pushf
sbb
das
dec
mov
test
mov
push
sbb
daa
xorl
jp
mov
cmp
and
fisubrs
fistps
jmp
aas
scas
fdivp
shll
das
mov
aad
je
push
mov
scas
cmpsl
cmp
fcmovnu
mov
pop
dec
xchg
scas
mov
mov
add
insl
or
jbe
cmp
dec
jnp
outsb
mov
scas
jge
push
mov
xchg
loopne
or
mov
insl
xor
xor
rcr
pop
shr
pop
cli
adc
notl
test
fs
iret
sub
test
lea
push
fnstcw
shlb
ret
loopne
repz
jg
and
outsl
or
aas
inc
pusha
mov
cmc
mov
sahf
jmp
ds
lea
ljmp
sahf
dec
jge
dec
jmp
test
aaa
xchg
fists
in
adc
mov
lea
outsb
sti
mov
mov
inc
data16
fildl
sbb
shlb
scas
push
push
in
iret
stc
pusha
lock
mov
scas
and
stc
inc
or
jae
push
adc
cwtl
mov
pop
push
lds
pop
xchg
adcb
adc
iret
test
cmp
or
imul
dec
mov
sub
shrl
andl
add
xor
shrl
push
dec
jo
inc
dec
iret
jmp
sub
and
shr
call
lods
xchg
fisubs
mov
shl
loop
sbb
clc
imul
fwait
push
pop
cmp
cmpsb
and
aas
out
pop
stos
xchg
ja
test
fists
scas
sbb
sbb
adc
cli
fs
and
aaa
iret
mov
jae
out
cmpsb
sahf
ret
popf
cmp
aad
add
mov
mov
ja
mov
ljmp
jo
mov
imul
xchg
xchg
shrb
shlb
lcall
push
jbe
pop
rcll
pusha
inc
or
mov
imul
in
lods
in
pop
push
inc
xor
dec
sbb
scas
mov
shlb
sub
xor
aam
push
loop
push
mov
cmp
mov
push
int
dec
fisubrl
xchg
push
pop
arpl
mov
inc
lds
cli
pop
sbb
call
cmpsb
loope
mov
in
jae
mov
push
sbb
dec
pop
mov
adc
inc
and
rorl
cmp
inc
insb
push
mov
xor
xchg
cmp
inc
xor
add
push
icebp
imul
ds
xor
mov
fcmovne
mov
scas
mov
push
sub
shlb
pop
add
mov
push
or
pop
push
sub
sbb
std
xchg
cli
push
cwtl
cmpsl
enter
inc
xchg
pop
xor
jb
sub
pop
or
test
push
pop
in
sbb
outsb
xchg
jb
rorl
mov
sbbl
dec
or
test
mov
scas
pushl
sbb
int3
cmpsb
mov
push
push
mov
rcr
rorb
incb
dec
lods
sub
jbe
scas
cmove
loopne
xor
ret
pop
iret
push
dec
adc
push
ljmp
pop
cli
push
in
fsubrl
or
mov
mov
jo
loopne
mov
xchg
out
arpl
loope
sub
int3
add
int
jge
out
or
sub
jnp
xchg
stos
aaa
or
dec
mov
or
xchg
cmc
adc
xor
or
movsl
scas
inc
mov
inc
shrl
xchg
mov
into
jae
jge
cmp
dec
push
cmp
push
iret
xor
xor
xchg
incl
pop
roll
and
lock
paddw
mov
mov
out
ss
in
cmc
rol
inc
adc
or
mov
idiv
je
test
jmp
bts
mov
mov
out
push
jl
pop
fsubrl
scas
and
ret
fmulp
pop
iret
sub
sbb
subl
mov
dec
push
insl
xor
mov
add
shrl
pop
iret
nop
sbb
lcall
push
pop
call
jbe
lods
mov
ficoml
and
xchg
xchg
loopne
popa
aad
in
hlt
loope
push
mov
sbb
dec
iret
call
push
adc
sub
int3
jb
dec
les
nop
in
rclb
fimuls
rorb
push
mov
or
inc
iret
jg
pop
sti
xchg
cmp
std
lcall
xchg
sbb
leave
inc
xchg
push
sti
stos
in
lret
adc
mov
pop
rcll
mov
in
in
ds
insb
add
call
mov
cmp
cld
xchg
cmp
add
negl
dec
push
sbbl
arpl
insl
adc
inc
xchg
cmp
enter
xorl
jbe
jbe
mov
or
sbb
out
fwait
iret
jno
rcr
push
dec
in
enter
xor
into
dec
xchg
int3
out
mov
loope
adc
es
mov
adc
inc
cmp
jbe
inc
jbe
popl
in
lcall
add
fstl
pop
scas
popf
imul
imul
test
inc
fs
jl
fmul
scas
jle
lret
push
pusha
mov
iret
add
mov
xchg
imul
pop
pop
mov
loopne
fs
cs
xchg
push
loopne
jmp
pop
stos
inc
mov
rcl
push
lret
xchg
lods
pop
adc
outsl
rcr
inc
aam
andb
lds
loop
adc
fstpl
sub
dec
into
es
out
pop
xor
inc
and
jge
iret
icebp
aaa
or
scas
pop
dec
adc
popa
inc
xchg
scas
pop
mov
add
xchg
cmp
fistps
jp
mov
orl
aaa
lahf
test
jno
scas
or
cmp
xor
cs
out
and
fistl
push
xchg
stos
mov
jo
clc
outsb
scas
xor
adc
pusha
ljmp
add
iret
and
xor
cltd
popa
cmp
xchg
xchg
pop
add
in
dec
test
cmp
add
push
pop
scas
int3
sarb
dec
push
mov
jne
mov
div
cmpl
adc
mov
sbb
adcl
xor
mov
call
mov
jge
push
iret
loopne
movsl
xor
push
inc
lock
mov
iret
loopne
pop
fmul
clc
sub
xchg
add
sahf
je
in
int3
clc
scas
dec
mov
cmp
mov
aad
dec
or
leave
push
cmp
or
aad
or
add
push
rcll
sbb
sub
mov
jne
lock
inc
ret
sbb
push
movsb
iret
mov
inc
jmp
and
rorb
mov
jnp
iret
push
lods
shrl
cli
ja
shrb
mov
jge
fstpl
dec
stc
xchg
fisttpll
mov
adc
push
pop
mov
jnp
adc
pop
scas
inc
and
pusha
mov
push
out
popl
and
sub
loop
fs
loopne
jne
rolb
imul
invd
or
callw
mov
mov
xor
iret
pop
iret
jo
sti
xor
pushf
fwait
int3
xchg
cmp
lcall
call
jl
jecxz
shr
pop
inc
lea
push
outsl
xchg
jmp
mov
xor
sbb
jns
rcl
rorb
xor
xorl
jno
cmpsb
jle
lahf
and
mov
mov
repnz
fnstcw
ds
dec
lret
cmp
out
dec
lret
in
and
mov
push
mov
pop
imul
iret
mov
mov
rcrl
adc
mov
inc
jnp
clc
mov
mov
lock
xlat
sub
mov
outsb
dec
or
insb
scas
xor
xchg
repnz
add
xchg
xchg
dec
mov
int3
outsb
gs
mov
xor
cmp
fbstp
mov
fmuls
cs
icebp
xchg
in
leave
fidivl
add
mov
bound
pusha
daa
mov
shrb
adc
push
les
inc
dec
mov
inc
cmpsl
cmp
lcall
push
sarb
imul
pop
cwtl
and
or
mov
xor
add
std
aas
inc
test
push
push
hlt
pushl
xchg
enter
movsb
inc
mov
enter
inc
shll
cmp
xor
scas
pop
in
sbb
adc
add
enter
or
pop
push
cmc
mov
jne
and
js
rol
push
lock
loope
inc
rcr
pop
mov
sbb
out
hlt
enter
aaa
lods
outsl
in
cmp
cld
mov
insb
fcoml
sahf
ja
pop
and
push
mov
and
jb
pop
or
adc
jb
int
cmp
and
sub
push
scas
shll
test
lret
jg
pmullw
add
outsl
aad
fsubrl
xor
adc
cmp
push
fdivrs
push
jmp
mov
pop
inc
lods
xchg
pop
xchg
sbb
pop
inc
cmp
scas
fwait
dec
add
inc
mov
sbb
ret
cld
add
fs
addr16
std
cmp
lret
dec
sbb
jb
test
jne
jnp
xor
and
cli
and
in
xchg
pop
std
scas
cmpsl
test
roll
jl
les
dec
jge
xchg
scas
filds
or
rcll
lea
sbb
xchg
aad
jno
mov
imul
xchg
test
adc
xchg
mov
mov
xchg
adcb
xlat
adc
dec
mov
jmp
mov
lods
pop
pop
in
xor
out
in
cs
daa
sub
jb
sbb
pop
cltd
fsubrl
outsl
daa
xchg
xchg
mov
or
repz
imul
aaa
iret
sub
xchg
cmp
fimuls
aaa
push
aam
mov
add
data16
sub
sub
iret
add
fnstenv
fcmovb
inc
xor
ror
adc
loope
scas
add
and
inc
arpl
mov
and
mov
test
lods
inc
call
inc
into
xchg
mov
xchg
enter
inc
clc
outsl
out
icebp
add
cli
subb
aaa
jmp
or
cltd
movd
aad
in
popa
ja
xchg
and
jo
mov
idiv
insl
sbb
lret
xchg
xorl
mov
or
add
das
jno
inc
jl
mov
aas
adc
mov
mov
es
jge
sub
xor
shrb
xchg
std
mull
out
notl
outsl
mov
outsl
cmp
loop
fiadds
faddp
pop
test
inc
mov
sub
scas
mov
in
lea
int3
jbe
or
pop
inc
loop
mov
or
pop
mov
mov
and
lret
jbe
insb
push
cmp
fistl
cmc
lcall
add
decl
push
xchg
inc
rclb
dec
xor
frstor
rep
mov
sbb
clc
mov
sbb
adc
out
pop
sbb
in
into
pop
sahf
out
or
scas
es
fcmovnu
into
shrb
push
xchg
or
mov
xchg
aas
jge
int3
aam
inc
iret
out
jmp
add
ljmp
repnz
mov
cmp
fwait
sub
fwait
nop
xor
ret
cmp
lods
push
or
fcoml
ds
pop
popa
push
sarb
cmpb
jle
mov
add
adc
add
dec
mov
data16
pusha
xchg
sub
shll
jns
shrl
xchg
jbe
fwait
aas
or
in
pop
mov
in
jle
jo
xchg
ja
push
xchg
cltd
idiv
jg
enter
mov
push
pop
dec
cmc
inc
xor
lcall
inc
and
iret
cwtl
mov
int
xchg
insb
cmp
xchg
adc
xchg
push
adc
leave
int3
cmp
add
or
lods
and
cltd
xchg
out
jne
xchg
and
xchg
fists
push
jg
mov
mov
add
lods
xchg
into
cmp
mov
es
outsb
scas
push
push
mov
and
cmc
pop
pop
jmp
scas
orl
rorb
xor
xchg
sbb
xchg
cs
pop
bound
insb
mov
push
push
bound
loopne
adc
mov
and
push
mov
push
fcoms
push
jne
ds
or
ds
nop
push
sarb
pushf
sti
cld
into
ss
or
hlt
xchg
push
add
sub
mulb
aad
outsb
scas
ficompl
lea
aas
sbb
fstp
xor
push
adc
ss
in
add
mov
jns
pop
and
scas
dec
xchg
sbbl
cmpps
add
or
jle
or
mov
fld
cmp
scas
jp
daa
enter
add
rcr
ds
mov
js
je
out
xchg
pop
xor
cmpl
add
mov
out
or
jo
mov
rcr
into
xchg
daa
inc
sub
imul
xor
iret
xchg
icebp
adc
xchg
sahf
mov
cmp
pop
mov
add
pop
scas
jle
xchg
adc
arpl
loopne
push
jecxz
sbb
shrb
xchg
xlat
mov
rol
scas
lcall
sub
cmp
lods
cmc
sbb
gs
les
xchg
into
lret
push
inc
sbb
adc
add
mov
lock
xchg
jl
pop
or
std
test
pop
xor
xchg
mov
mov
push
rcrb
and
xor
shlb
sbb
mov
cli
data16
dec
push
jge,pt
mov
mov
test
xor
sbb
ds
shlb
das
scas
mov
or
jle
scas
xchg
or
push
jmp
add
cmp
inc
xor
negb
into
add
mov
cmc
out
mov
push
or
or
xor
push
aam
mov
jl
mov
mov
ja
cmp
add
lock
rcl
push
repz
sbb
xchg
test
pop
inc
inc
les
mov
iret
jmp
jle
popf
xchg
jmp
cwtl
pop
add
arpl
rcrl
add
inc
xor
mov
pop
push
push
ret
and
stos
scas
xor
clc
xor
inc
cs
xchg
or
and
aas
movsl
test
add
xchg
les
les
mov
aas
hlt
or
jb
xor
mov
fcoml
je
sarb
adc
fs
shlb
and
sub
iret
test
ss
iret
push
leave
lret
and
dec
ficoms
and
sti
aam
iret
inc
push
jmp
xlat
iret
rcll
push
xchg
inc
or
shr
scas
mov
ljmp
xchg
shll
inc
inc
add
out
scas
jno
fcompl
mov
dec
dec
movsl
sub
xor
scas
add
mov
stos
add
out
enter
std
fldl
out
rolb
repnz
dec
imul
into
imul
repz
fcompl
pop
xchg
xorb
iret
leave
jb
or
fs
sar
mov
jp
repz
jmp
je
sub
cwtl
xor
out
xchg
cli
jne
sbb
mov
loopne
xchg
cmp
rorl
mov
loopne
push
jb
mov
divl
and
mov
add
jle
xchg
roll
jp
fisttpll
scas
stos
neg
xchg
rcrb
cmp
cmpsl
jl
xchg
push
iret
adc
movsb
mov
xchg
jmp
jno
out
sahf
outsb
nop
push
sub
xlat
jl
inc
dec
adc
into
scas
shl
cmp
push
stos
cs
inc
cmp
push
xor
push
idivb
lock
sub
dec
jns
movsl
jmp
adc
mov
notb
dec
sbb
mov
lods
xor
mov
fadd
adc
mov
mov
mov
push
pop
dec
test
xchg
iret
dec
loopne
fcoml
out
fwait
iret
dec
or
add
scas
inc
cs
jns
popa
cmc
lret
bnd
es
shlb
mov
rolb
js
mov
jb
jbe
mov
sub
gs
xchg
ret
jb
mov
in
pushf
xchg
sub
scas
imul
lahf
mov
movsl
mov
pop
xchg
xchg
jne
pop
pop
popa
repz
scas
arpl
shl
pop
daa
inc
das
stos
sbb
in
sub
lods
mov
fld
int3
outsl
mov
iret
dec
xor
and
data16
ljmp
frstor
scas
sbb
rol
aad
outsb
mov
sub
and
shr
aaa
movsl
js
cmc
push
rcrb
clc
sub
aad
ror
xchg
pop
add
xchg
cs
cltd
pop
xchg
test
sbb
jmp
hlt
push
mov
mov
lret
test
inc
dec
out
jl
or
pop
cmc
xor
adc
xchg
data16
pop
dec
test
fisttps
notb
enter
jmp
xchg
icebp
stos
cmp
lds
xor
push
test
scas
push
mov
out
mov
or
scas
sub
call
sbb
jae
jo
iret
jnp
imul
cmp
adc
push
das
sbb
scas
fnstenv
adc
cmp
loope
sub
mov
mov
xchg
sub
and
mov
dec
jns
movsl
cmp
leave
mov
pop
hlt
shrb
scas
push
push
inc
orl
imul
push
mov
mov
iret
loop
outsb
sub
clc
sub
pop
mov
in
nop
pop
iret
pop
cmp
push
jmp
adc
scas
std
lcall
das
in
repnz
and
or
push
neg
cs
sub
sub
imul
imul
and
scas
and
imul
psubd
mov
mov
mov
adc
xchg
jp
shlb
and
jle
js
inc
shl
inc
pop
mov
aaa
inc
cmpsl
stc
inc
shlb
dec
repz
jmp
gs
out
jb
into
notb
rcrb
std
imul
lcall
mov
out
jge
xlat
pushf
add
mov
xor
dec
iret
call
mov
lret
inc
insl
push
and
aam
cmp
scas
push
pop
loope
sbb
sbb
mov
mov
sub
popa
stos
aam
xchg
sbb
cs
popa
fwait
ds
adc
ret
jmp
add
xor
fcomi
repnz
sbb
xchg
outsb
loope
shlb
or
into
test
sbb
rolb
ret
jmp
push
fnstsw
pop
pop
mov
jl
shlb
mov
stos
mov
ss
fisubl
and
jbe
or
mov
psubq
rclb
inc
fdivl
scas
push
dec
mov
mov
das
dec
xchg
in
jmp
lock
mov
and
popa
push
divb
push
jecxz
lods
sbb
jge
mov
dec
add
add
ficomps
iret
mov
std
add
jecxz
aaa
cmp
insl
mov
mov
rorl
cltd
sub
jmp
xorl
jle
adcl
std
or
adc
in
inc
mov
lcall
outsl
jmp
inc
xor
inc
mov
cmpsb
int
scas
push
fnsave
mov
mov
hlt
cmp
stc
xchg
mov
cmpsl
popf
call
pop
xchg
mov
cld
sub
mov
mov
push
add
jg
repz
jmp
pcmpgtd
sub
xcrypt-ctr
cmpsl
pop
inc
iret
jo
mov
repz
iret
cmp
cld
fists
ret
mov
fcoms
dec
pop
ret
add
andl
rorb
rol
rcl
sbb
loop
lods
mov
shrl
ficoml
mov
addr16
and
xchg
scas
xchg
mov
call
loop,pn
in
jle
xchg
sub
pop
bound
jle
sti
ja
or
iret
mov
xlat
arpl
inc
sub
scas
fnstcw
scas
jb
rolb
ljmp
stc
adc
out
xor
pop
pop
pop
dec
shlb
pop
dec
mov
fcmovne
jnp
dec
aaa
mov
sub
xchg
sbb
mov
mov
aaa
sub
xchg
mov
xchg
imul
cmc
and
dec
mov
adc
xor
icebp
inc
bound
pop
loop
loop
in
rcrl
leave
push
jb
inc
and
faddp
xlat
aaa
inc
iret
sbb
faddl
outsb
iret
or
mov
mov
ret
and
test
lock
push
hlt
movsb
pop
xchg
and
setl
sbb
push
ret
rcl
mov
push
outsb
or
jbe
icebp
mov
divb
insb
jns
mov
cmpsl
outsl
cmpsb
test
dec
or
push
add
pop
subl
rorb
es
iret
and
or
insb
gs
xchg
rorb
sbb
movzwl
insl
data16
orl
aam
push
xchg
pop
or
bnd
scas
jb
test
sbb
xlat
dec
xor
scas
jnp
lret
std
ja
jmp
in
shrb
pop
das
aad
sub
pop
ljmp
mov
and
pop
divl
and
mov
push
icebp
daa
shrb
fnstsw
loop
mov
xor
mov
pop
xchg
nop
mov
mov
sub
nop
push
sbbl
aas
cs
push
jb
adc
xchg
jo
hlt
addr16
dec
push
push
idivl
in
sub
mov
cmp
jnp
inc
xor
bound
out
pop
into
cmpsb
loopw
mov
dec
rolb
sub
lcall
push
mov
mov
imul
mov
scas
enter
mov
fisttpll
lods
cmpsb
shr
scas
hlt
fsubrl
mov
lods
iret
stos
push
jge
ret
shlb
scas
add
jb
sbb
sahf
mov
iret
pop
and
mov
and
sti
xchg
xchg
sbb
dec
scas
sbb
out
sar
daa
mov
dec
pushf
les
js
daa
shrb
int3
add
std
imul
xor
add
dec
inc
nop
xchg
xchg
outsl
subl
not
icebp
out
or
bound
adc
int3
push
xorl
fldenv
xor
sar
sarl
jecxz
aam
outsb
rcrb
mov
cltd
iret
inc
in
das
jl
cmc
xor
inc
arpl
into
sahf
mov
stos
in
xchg
jb
hlt
sub
pop
inc
mov
dec
test
jmp
out
mov
sbb
push
stc
arpl
jb
jge
cmc
rcr
push
psrlw
inc
lahf
clc
jp
shl
ljmp
mov
ss
lods
decb
out
mov
push
scas
imul
or
xor
pop
pop
xchg
xchg
mov
xor
push
int3
or
jle
scas
xchg
fwait
and
xorl
mov
mov
sbb
divb
out
mov
sbb
loopne,pn
nop
shrb
sbb
mov
and
mov
int
push
add
or
lods
inc
in
loop,pn
testl
ret
push
dec
in
iret
ljmp
adc
sub
fldenv
jne
adc
int3
ret
roll
push
mov
mov
hlt
or
or
shlb
and
stos
xor
push
call
xchg
out
js
xor
inc
mov
es
sbb
mov
jne
adc
cld
cltd
scas
sbbl
pop
mov
movsb
out
adc
arpl
int
or
cmp
leave
dec
sub
mov
into
mov
cld
imul
cmp
xchg
loopne
pop
int
lea
int3
shll
mov
push
int
push
dec
outsb
or
push
fldcw
sub
pushf
jb
mov
in
push
outsb
fmull
test
in
pushf
xchg
push
xchg
ret
outsl
jb
iret
pop
dec
dec
negb
push
rclb
pop
jo
mov
nop
or
insb
lret
aad
pop
mov
xchg
sbb
stos
pusha
les
xchg
out
inc
pop
out
xchg
nop
push
xchg
and
test
iret
movsb
push
or
movsl
out
mov
stos
dec
jge
push
aas
sbb
arpl
leave
xchg
stc
scas
mov
jmp
rcl
mov
psubusb
mov
pop
loop
xchg
aad
data16
popa
xor
xor
xchg
sub
dec
outsl
in
mov
lea
mov
addr16
jne
pop
bound
fs
enter
out
sub
scas
movsb
pop
adc
cmp
fdivrs
scas
into
pop
jle
shr
push
pop
pop
lods
insb
and
mov
lods
dec
xor
mov
test
mov
inc
sub
dec
movsb
mov
xchg
cmp
adc
inc
test
push
imul
rcll
jl
xchg
mov
mov
sti
scas
sahf
jae
in
xchg
imul
xchg
leave
mov
movl
scas
fs
mov
mov
add
stos
mov
in
insb
pop
out
sub
inc
pop
scas
ds
and
push
stos
scas
jae
adc
jo
mov
sub
xchg
cmc
scas
aas
mov
out
out
fldt
xor
test
aad
xchg
inc
mov
and
xchg
xlat
imul
dec
lods
push
push
fdivrl
adc
and
shll
fsubrs
movsb
xchg
scas
sti
js
in
dec
mov
cmp
iret
mov
xor
mov
mov
into
push
outsb
push
mov
xchg
dec
pushl
rolb
les
mov
addr16
mov
jmp
in
es
or
sti
jo
negl
sbbl
cmp
xchg
std
das
ss
push
test
fs
scas
stos
push
xchg
pop
scas
adcb
push
mov
dec
mov
mov
mov
iret
xchg
cltd
iret
enter
icebp
sti
test
mov
push
xchg
addr16
lcall
fnsave
mov
xchg
jge
ret
in
mov
mov
sub
fdivs
jl
int3
lret
outsl
cmp
xchg
aas
or
fwait
in
aaa
arpl
xlat
lret
fcomp
flds
test
or
xor
lahf
fwait
mov
jno
iret
cmpsl
cli
lea
lods
sub
sub
mov
mov
and
xchg
mov
push
xchg
mov
mov
sahf
insl
shll
xor
mov
loopne
lret
or
std
adc
add
shl
scas
sbb
mov
cs
inc
les
rorl
aaa
in
sbb
ljmp
mov
les
scas
mov
cmc
mov
pop
loop
mov
pop
mov
cmpsb
cmp
adc
test
mov
add
xchg
lock
mov
fadds
sbbl
mov
std
mov
and
jge
mov
mov
xor
call
int
xchg
lea
inc
imul
adc
add
ljmp
xchg
add
aas
movl
roll
mov
add
sub
pop
addr16
mov
jnp
scas
fidivrs
or
or
jmp
in
ret
scas
mov
mov
jp
sarl
lret
xchg
dec
xchg
loop
jg
gs
andb
lds
and
or
sbb
lret
xor
hlt
repz
mov
decl
lahf
in
mov
adc
jno
cmp
mov
lahf
jl
shlb
and
cmp
in
ror
or
stos
xchg
enter
mov
bnd
jns
shrl
rorb
mov
add
icebp
mov
xchg
push
fcoml
out
sub
scas
out
enter
lock
mov
rorb
fbstp
iret
or
xchg
mov
xchg
imul
insl
cmp
and
jnp
xchg
pop
pop
adc
jb
lds
mov
inc
scas
xor
ds
out
sar
add
mov
adc
pop
int
cltd
icebp
popa
jmp
and
pop
jno
xchg
cmp
lahf
cwtl
sbb
jo
cmp
imul
pop
daa
iret
or
xor
negl
jb
ss
or
rclb
scas
mov
or
in
outsl
fiaddl
sub
sbb
imul
mov
push
mov
rcr
cmc
aad
ficompl
dec
test
mov
push
push
shrb
stc
xchg
inc
idiv
push
lods
jmp
inc
loop
fidivrl
mov
data16
movsl
xchg
sbb
mov
xchg
mov
sahf
cmp
movsb
in
movsb
push
es
inc
cs
sbb
pop
adc
mov
fistps
pusha
ret
scas
pop
es
shlb
cli
mov
add
pop
dec
fwait
jo
aad
inc
int
js
mov
dec
xchg
mov
into
lret
into
sbb
fs
sub
jb
repnz
stos
out
cltd
outsl
dec
mov
inc
mov
loope
add
mov
fbstp
mov
jns
cmp
clc
cld
imul
pop
mov
out
call
mov
daa
mov
call
fwait
pop
xchg
add
xor
cli
xchg
call
jg
aam
inc
loop
sbb
cmp
iret
stc
ret
lods
jmp
mov
ret
pop
cwtl
add
popa
or
or
nop
movsb
pop
mov
not
out
in
rclb
stc
jbe
es
add
mov
xchg
or
push
call
xchg
mov
jae
in
xchg
jl
in
hlt
xchg
jno
fwait
xor
scas
jns
test
addr16
inc
lods
fs
inc
call
inc
ss
scas
adc
mov
shlb
add
imul
scas
xorl
aam
es
add
mov
cmpsl
subb
mov
dec
pfacc
in
arpl
xchg
pop
jl
fadd
fwait
sar
loopne
test
js
iret
pop
inc
out
aam
imul
lret
aas
jns
sbb
imul
mov
xor
aam
das
shlb
inc
mov
sbb
and
sbb
pusha
icebp
ret
ds
lret
scas
cwtl
aaa
sti
dec
out
lcall
push
mov
scas
int
xchg
inc
shl
mov
ds
inc
cmc
sub
xchg
add
inc
loop
or
test
xchg
out
pop
xchg
lock
adc
mov
pusha
in
movsb
ret
in
sub
jmp
cmp
out
adc
xchg
push
mov
lret
mov
mov
or
orl
sub
jno
mov
mov
dec
stos
xchg
repz
arpl
inc
and
rclb
das
outsl
into
push
arpl
xor
and
mov
daa
mov
inc
mov
adc
scas
push
out
mov
sbb
or
xchg
iret
push
mov
test
pop
xchg
bound
adc
inc
cmpsl
jp
sbb
and
loopne
je
dec
mov
xchg
iret
inc
xlat
in
and
adcl
sar
xlat
mov
lods
sti
cmp
jo
and
and
out
iret
ret
sahf
scas
and
xchg
cmp
jg
cs
in
mov
mov
iret
sub
stc
lods
fs
lods
insl
iret
push
mov
sub
cmp
jnp
lods
out
mov
xchg
dec
mov
xor
mov
sub
adc
loop
and
push
cmp
cmpsl
adc
push
adc
jl
xor
mov
imul
mov
inc
push
and
inc
or
mov
shll
mov
dec
jmp
fs
aaa
sub
nop
stos
lret
ss
adc
or
or
pushf
add
iret
sti
xchg
and
cs
rclb
xor
xchg
add
jge
cli
mov
dec
call
das
xchg
and
fnstcw
insb
dec
popf
add
test
scas
xor
add
or
xchg
adc
or
mov
scas
mov
lea
jns
arpl
leave
cwtl
mov
mov
adc
test
pop
xchg
sarb
dec
pop
mov
repz
jb
scas
lahf
cmp
adcl
push
push
pop
mov
dec
xor
xchg
xchg
inc
add
pop
pop
push
cmc
rorl
add
stos
shrb
loopne
fdivl
inc
lahf
add
into
gs
outsl
inc
insl
xchg
cwtl
mov
pushf
sub
insb
adc
scas
cmc
ljmp
pushf
pop
push
mov
into
ds
pop
data16
sbb
inc
add
ret
mov
ret
inc
test
mov
clc
pop
and
popa
stc
xchg
into
or
sub
xchg
sub
jmp
stos
mov
out
mov
loop
xchg
pusha
cs
dec
sub
leave
nop
lret
call
mov
xchg
aaa
out
sub
out
shlb
xor
fistpll
jmp
iret
inc
cli
jne
xchg
cmp
sbb
push
dec
mov
or
fstpl
push
pop
cltd
jo
sbb
mov
shrb
push
mov
pop
jbe
ljmp
cmp
adc
roll
gs
ss
inc
inc
ds
jp
push
and
cmp
pop
es
jb
jp
mov
fdivrs
aad
mov
sub
jg
dec
addl
ljmp
dec
mov
dec
and
add
sarb
scas
les
loope
xchg
mov
jo
inc
das
std
cltd
jo
test
mov
mov
or
test
jae
add
xor
adc
fsts
add
sub
xchg
xor
dec
ret
fldcw
cmp
mov
bound
jno
cmp
fcom
fistl
ret
in
xchg
xchg
data16
pop
lcall
or
mov
cmp
ljmp
sahf
xor
shr
pusha
mov
lret
push
dec
push
and
scas
push
mov
cmpsl
sti
shll
cmp
andb
loop
bound
cltd
ds
push
xchg
hlt
adc
out
ss
jmp
scas
insb
and
mov
js
jo
sarl
mov
jle
mov
fists
test
mov
jb
gs
out
loope
ljmp
pop
xchg
movsb
jns
jp
test
inc
xchg
into
fists
and
add
hlt
scas
add
inc
test
rorb
pop
pop
jns
and
mov
mov
pop
xor
dec
gs
xchg
fists
pusha
dec
and
ds
add
repnz
add
xacquire
or
insl
xor
xchg
push
rolb
add
mov
ja
rcrl
ret
xchg
loope
fcompl
xor
clc
in
in
sti
movsb
push
and
xlat
push
cmp
mov
cmp
scas
mov
setno
push
pop
dec
cld
jmp
jg
push
sub
sbb
cwtl
outsl
dec
lret
test
xchg
fwait
mov
push
loope
jge
inc
pop
mov
xlat
jmp
sbb
push
cmpb
and
jbe
mov
arpl
dec
inc
lret
gs
idivb
enter
jbe
lock
sub
addr16
enter
xor
xchg
and
mov
in
mov
dec
aas
decb
add
sarb
in
in
rcl
icebp
into
enter
lret
xor
test
ljmp
sub
scas
push
push
int
rclb
lret
add
mov
mov
push
fcomps
ja
inc
xor
stc
dec
push
aad
iret
pop
sub
dec
aam
xor
cmpsb
inc
mov
das
cmc
into
adc
jg
loop
mov
sbb
fdivl
push
mov
dec
jb
repz
xchg
jbe
xor
call
les
insl
scas
in
xor
mov
repz
adc
fistpll
scas
xchg
ss
rorb
mov
cs
jmp
add
sahf
lcall
sbb
andb
in
xor
xchg
mov
jge
mov
pushf
dec
push
aam
dec
inc
mov
mov
cmp
outsb
jl
pop
mov
xor
xor
hlt
pushf
scas
lods
dec
mov
rclb
orl
and
xchg
mov
out
dec
test
lods
push
xchg
out
scas
xchg
cmp
ror
fs
rolb
adc
sub
test
fcompp
jnp
rorb
pop
xor
cmpsb
add
into
sub
testb
iret
and
jb
xchg
adc
mov
dec
xchg
push
loopne
loop
mov
cmp
insb
in
das
jmp
test
data16
rol
dec
fwait
test
sti
aad
mov
sbb
filds
cmp
jb
rcr
insl
gs
iret
pop
rorl
xchg
pop
out
xchg
pop
subb
jae
iret
scas
lret
cmp
rolb
push
add
ret
and
loope
mov
mov
mov
std
sahf
scas
or
mov
adc
je
fst
push
push
gs
sub
pushf
mov
stc
adc
loop
enter
pop
sub
jg
mov
and
fbld
aad
push
xchg
ficoml
pop
scas
ret
adc
mov
daa
lods
lods
lods
bound
add
cltd
daa
les
xchg
aas
dec
scas
ljmp
cs
xor
push
fs
jae
jg
mov
rcr
imul
sarb
or
jo
jge
xchg
mov
jb
frstor
pop
mov
aam
inc
lcall
jecxz
daa
out
dec
stos
jb
sarb
lahf
mov
or
or
pop
pop
in
adc
jo
popf
mov
jnp
and
in
and
fwait
cmp
mov
aam
xchg
jle
add
sbb
sahf
add
or
loope
nop
jnp
and
cmp
ret
cwtl
hlt
inc
rolb
jge
sbb
or
lcall
fisubrs
add
and
dec
stos
mov
bound
cmpsl
mov
inc
cmp
mov
fsqrt
mov
lret
arpl
scas
stc
jo
int3
inc
lahf
scas
xchg
push
call
jge
dec
inc
into
xor
and
les
adc
into
mov
les
and
sbb
mov
mov
cwtl
cli
pop
lret
mov
dec
jmp
sbbl
sbb
loop
push
scas
fnstenv
aam
push
das
jmp
out
push
cmp
push
mov
jo
sarb
orb
sti
cmp
mov
flds
std
xor
rclb
in
inc
lret
iret
outsb
adc
pop
xchg
insl
cmpsb
mov
cmp
push
push
adc
inc
pop
dec
cmp
xchg
hlt
xor
int
xchg
sbb
adc
dec
das
or
xor
inc
jno
mov
rorb
pop
jne
push
mov
clc
int3
mov
mov
dec
test
lods
jno
xchg
fisubs
stc
or
pop
loop
cli
into
stos
in
mov
mov
or
xchg
adc
iret
or
lcall
sbb
pop
cmp
jae
int3
xchg
and
out
mov
scas
cwtl
sar
xchg
rcrb
lret
popa
mov
dec
stos
push
pop
ds
xchg
add
les
popa
aaa
test
dec
scas
in
and
rcrb
push
bound
xor
rcll
test
jp
aam
or
xor
fwait
scas
mov
cli
aas
jae
cmpsb
mov
fistpl
out
lds
add
add
add
adc
dec
add
add
add
add
cmp
add
int3
roll
pop
add
