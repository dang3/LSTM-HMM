push
mov
sub
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
shr
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
movl
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
push
mov
push
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
cmpl
je
jmp
mov
push
call
mov
push
call
push
mov
push
call
lea
push
mov
push
call
mov
mov
mov
add
mov
mov
push
mov
push
call
xor
jmp
mov
imul
mov
mov
shl
mov
mov
and
movzwl
mov
mov
shr
and
movzwl
mov
xor
jmp
push
push
mov
push
call
lea
push
mov
push
call
mov
push
call
push
mov
push
call
push
mov
push
call
push
push
mov
push
mov
imul
push
mov
push
call
push
push
mov
push
mov
imul
push
mov
push
call
xor
jmp
push
push
mov
neg
push
push
mov
push
call
mov
push
call
mov
push
call
push
mov
push
call
lea
push
mov
push
call
jmp
push
call
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
mov
mov
movl
movl
movl
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
push
mov
push
call
push
call
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
je
xor
jmp
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
push
push
call
mov
push
push
call
push
push
push
push
push
push
push
call
mov
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
mov
mov
push
push
mov
push
call
add
mov
add
mov
popa
mov
jmp
nop
nop
jmp
nop
jmp
xor
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
cmpl
jne
mov
mov
mov
cmpl
je
lea
push
mov
push
mov
push
call
add
mov
add
mov
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
inc
add
jns
jae
je
add
xor
xor
pop
add
inc
add
jb
imul
add
js
add
add
push
dec
inc
push
push
push
dec
dec
add
add
add
sub
inc
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
xor
xor
add
add
outsb
gs
jo
outsb
dec
gs
add
dec
add
outsb
add
add
xor
xor
inc
add
xor
xor
xor
xor
sub
add
inc
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
cmp
inc
add
pop
add
outsb
add
jb
outsl
add
push
add
jb
jbe
add
xor
xor
add
xor
add
add
add
adc
add
adc
add
nop
xor
cwtl
xor
mov
xor
adc
cmpsb
adc
add
sub
cmp
sub
arpl
sub
mov
cmp
sub
push
aas
cmp
gs
push
popf
aas
push
add
fiadds
add
stos
adc
add
and
cmc
and
loope
xor
jp
mov
xor
and
xor
and
xor
and
xor
and
xor
and
insb
and
xor
and
xor
and
xor
dec
xor
and
dec
and
push
and
xor
and
xor
and
xor
and
jnp
add
mov
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
and
xor
test
pop
xor
dec
and
xor
pop
and
ss
adc
ljmp
ss
es
ss
jne
ficoms
add
ficoms
add
ficoms
add
ficoms
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
add
add
pop
inc
add
jg
inc
xorb
arpl
add
jns
jb
bound
push
add
sub
and
jb
arpl
inc
inc
add
and
inc
jne
insb
inc
pop
popa
outsb
cmp
inc
ficoms
add
sbb
je
imul
bound
outsl
je
ficoms
add
sbb
add
jle
outsl
leave
popa
inc
imul
bound
ficoms
add
cltd
jae
dec
mov
pop
popa
outsb
cmpb
adc
add
adc
ljmp
add
adc
mov
inc
add
adc
push
adc
and
dec
jle
inc
inc
jne
gs
jle
adc
jb
bound
add
push
add
cmc
jae
outsb
sti
jl
xor
je
insb
ficoms
add
sti
popa
jbe
in
fs
add
jae
jae
add
mov
jbe
lods
fs
add
add
mov
jb
mov
inc
jp
outsl
arpl
adc
add
outsl
insb
inc
jp
outsl
arpl
adc
add
jnp
popa
dec
inc
imul
aaa
jge
add
jp
je
jb
push
sub
je
cmp
jbe
jo
jge
outsl
std
adc
add
jne
outsb
add
xor
je
insb
ficoms
add
sbb
push
int3
jnp
gs
dec
gs
adc
add
mov
add
stc
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
add
stc
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fsubp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
ficoms
jmp
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
loop
add
inc
cmpsl
dec
jmp
fstl
add
loop
add
fcoml
add
sub
add
mov
add
fstl
add
in
adc
jmp
fstl
jmp
add
adc
in
fisttpll
add
fstl
add
fisttpll
add
fstl
add
sbb
jmp
add
fstl
addl
inc
std
incl
adc
aaa
std
pushl
or
add
inc
or
add
add
add
pop
or
add
testl
add
or
add
add
cld
add
imul
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
ja
add
xchg
add
stc
adc
fiadds
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fmulp
outsl
cmpsb
jge
add
mov
stc
adc
fdivrp
mov
incl
cli
add
fdivrp
add
fdivrp
add
ficomps
add
jle
pop
popa
push
pop
add
fimuls
add
stc
jecxz
fdivrp
or
fdivrp
lret
add
stc
add
fdivrp
add
fdivrp
add
fidivrs
add
sahf
iret
jno
cli
out
add
adc
adc
adc
daa
ficoms
jmp
add
adc
add
ficoms
jmp
add
push
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
xchg
add
xchg
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
stc
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
fdivrp
add
add
stc
add
fisubrs
add
daa
mov
add
bsr
faddp
mov
add
aaa
lret
add
dec
lret
add
inc
lret
add
jae
add
arpl
add
lahf
lret
add
jge
add
mov
jmp
fstl
idivl
fstl
and
mov
fstl
icebp
mov
fstl
lea
fstl
and
adc
fstl
icebp
mov
fstl
lea
adc
fstl
push
lret
jmp
ret
sbb
ret
cmp
rcr
pop
ret
xor
ret
jmp
rcr
add
lahf
push
add
imul
push
add
lahf
push
add
lahf
push
add
sahf
push
add
lahf
push
add
sahf
push
add
cltd
push
add
fstl
add
push
add
fstl
add
mov
add
js
add
dec
push
add
push
add
push
add
dec
push
add
cmp
add
xor
add
add
mov
add
mov
add
fldenv
add
jmp
add
or
mov
add
imul
add
gs
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
add
lahf
add
fistpl
add
fdivrp
mov
fdivrp
mov
fimuls
add
sbb
add
cmp
mov
fisubrs
mov
ficomps
add
xchg
mov
fsubrp
mov
mov
fidivs
mov
faddp
mov
fisubrs
add
mov
add
fdivrp
scas
add
and
aad
fisubs
aad
ficoms
add
popa
aad
fsubp
lods
add
lds
lods
add
adc
stos
fstl
mov
fstl
stos
stos
fstl
jge
fstl
arpl
fstl
cmp
fstl
cmp
stos
fstl
fldt
fstl
repz
add
adc
lods
fstl
xor
fstl
lods
fstl
jae
fstl
imul
fstl
cmpsl
lods
fstl
xlat
lods
fstl
imull
adc
mov
adc
lods
fstl
sbb
adc
aas
inc
adc
xorl
add
adc
inc
adcb
and
add
jb
add
add
adc
out
jne
add
push
adc
cmpsl
dec
adc
inc
push
adc
dec
dec
adc
pop
xor
add
adc
iret
xor
add
xchg
adc
decl
adc
out
mov
add
jae
add
imul
inc
jae
add
imul
fstl
add
adc
add
mov
add
add
add
mov
cmpsb
add
pop
cmpsl
add
mov
adc
add
ret
iret
roll
stc
roll
mov
add
mov
adc
cmpb
xorb
xorb
add
cwtl
add
outsl
cwtl
add
cwtl
add
ja
add
sbbl
add
xchg
add
sub
add
icebp
lcall
add
lcall
fidivrs
mov
add
dec
mov
add
jno
add
cmp
add
xor
add
or
add
mov
add
mov
add
xchg
mov
add
mov
add
inc
mov
add
ja
add
test
mov
add
fimuls
roll
fld
add
push
roll
sti
rolb
xor
add
imul
ficoms
push
rcr
jns
fstl
dec
rcr
pop
rcr
inc
rcr
adc
rcr
sti
mov
fstl
cmc
mov
fstl
sbb
fstl
sub
fstl
sbb
fstl
dec
rcr
repz
fstl
daa
rcr
jae
add
adc
fstl
pop
rcr
lods
rcr
scas
rcr
mov
fstl
ja
fstl
repz
add
fstl
add
fstl
stos
rcr
lahf
rcr
mov
fstl
add
verw
ltr
pop
mov
and
add
jns
ltr
pop
verr
sbb
add
add
add
popf
push
add
popf
push
add
mov
push
add
popf
push
add
push
add
push
add
mov
push
add
mov
push
add
and
add
sbb
add
and
add
inc
aam
add
aam
add
aam
add
aam
add
mov
aam
add
aam
add
add
dec
aad
add
add
jnp
add
mov
iret
add
add
cltd
add
aas
lcall
adc
add
test
add
dec
aam
add
aam
add
aam
add
add
ret
adc
add
fimuls
ret
add
lahf
ret
add
fsubp
add
fiadds
aad
fisubrs
add
fidivrs
rolb
roll
fimuls
aam
fisubrs
roll
fisubs
add
imul
add
daa
aam
fsubp
roll
fimuls
roll
fdivp
mov
add
or
add
fidivrs
mov
add
adc
fstl
pop
mov
ficoms
sbb
mov
adc
add
nop
out
add
nop
mov
mov
adc
add
nop
jmp
ficoms
test
mov
ficoms
call
add
nop
clc
add
nop
mov
ficoms
nop
fldl
ficoms
push
add
nop
inc
mov
fstl
stc
add
nop
ljmp
nop
add
xor
add
sub
add
fstl
xor
adc
jg
adc
adcl
adc
and
adc
sbb
adc
inc
xor
add
sub
add
xor
add
movlps
out
movlps
aad
movlps
ret
movlps
sbb
lods
adc
jmp
mov
add
adc
dec
jbe
add
data16
sub
add
push
adc
testl
add
xchg
add
xchg
add
dec
xchg
mov
out
jo
dec
addr16
out
sbb
cmp
mov
testb
push
jae
shrl
sbb
cwtl
minps
adc
cwtl
mov
in
repz
repnz
xchg
adc
in
stc
sti
and
fcompl
pop
out
ljmp
lods
xor
jmp
mov
or
adc
test
pusha
fidivrs
mov
add
popl
push
xor
dec
add
pop
outsl
mov
sbb
dec
call
push
xchg
mov
mov
out
cmp
faddl
dec
incb
into
ja
divl
mov
sub
fcmovu
int3
adc
int3
movsb
movsl
rclb
and
xchg
lahf
sub
fisttpl
push
fcomps
adc
add
movsl
mull
xchg
lea
add
shrb
int3
imul
popf
int3
mov
jo
add
fisubs
jae
or
push
lar
lods
push
xor
int3
mov
jo
add
fisubs
jo
test
pop
subl
cmpsb
jmp
popf
int3
mov
jo
add
fisubs
sub
pop
pop
push
push
push
fisubs
add
adc
ret
aad
add
fstl
add
movsb
inc
lea
adc
cs
mov
std
aaa
movsb
inc
insl
dec
rclb
mov
mov
gs
sbb
aaa
rclb
xchg
adc
scas
gs
in
pop
pop
xor
jle
movsb
mov
clc
push
push
add
mov
fcmovbe
mov
shrb
jb
bound
adc
adc
lea
lahf
cmp
add
aaa
jge
push
repnz
sbb
rcll
sub
mov
dec
add
adc
xorl
sbb
adc
add
js
mov
inc
mov
inc
add
adc
inc
cs
addr16
addr16
rclb
stos
cmp
sarb
std
lcall
cs
adc
xchg
std
pushl
fs
add
or
ds
ficoms
jns
dec
sti
xor
iret
jns
add
pop
jecxz
test
adc
add
mov
mov
mov
sbb
push
and
cmp
out
jl
add
mov
aaa
sbb
aaa
mov
andl
mov
out
dec
add
out
int
push
movsb
mov
into
ror
dec
std
fldcw
js
dec
xchg
shr
adc
lcall
jmp
incb
sbb
in
ficoml
loope
loop
jns
sbb
in
add
adc
add
adc
sbb
in
fcoms
leave
add
adc
add
adc
add
adc
popf
adc
add
adc
add
adc
popf
adc
add
adc
pop
adc
popf
adc
add
adc
add
adc
add
adc
add
fcoml
add
fcoml
adc
fists
jmp
fstl
add
adc
jmp
aad
add
aad
add
loopne
add
in
add
aad
add
rcl
add
loopne
add
in
add
aad
call
in
add
in
add
aad
add
shlb
add
in
add
aad
add
shlb
or
jmp
aad
add
shl
add
loopne
add
in
add
negl
sub
negl
mov
sbb
add
sbb
add
pop
add
sbb
sbb
mov
jecxz
mov
sub
xchg
je
ja
xor
ja
enter
or
add
and
ja
test
inc
sbb
add
test
aaa
sbb
sbb
or
inc
sbb
sbb
aaa
sbb
push
add
sbb
sbb
negl
add
leave
push
pop
fidivs
or
mov
mov
fidivs
or
or
faddp
add
fidivs
or
fsubp
or
fidivs
mov
xor
mov
fmulp
add
fidivs
or
fidivs
or
fidivs
or
mov
in
movl
fidivs
or
mov
jp
adc
or
adc
or
adc
add
adc
or
or
jmp
or
or
adc
jmp
add
adc
or
adc
or
adc
or
adc
add
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
jmp
or
stc
add
adc
or
adc
or
add
fisubrl
add
aad
add
aad
add
add
in
add
fisubl
add
aad
add
aad
call
in
add
aad
add
aad
add
ljmp
jmp
aad
add
in
add
fsubrl
add
aad
add
aad
add
ljmp
jmp
aad
call
in
add
aad
add
aad
add
ljmp
add
aad
add
aaa
pop
sbb
pop
sbb
add
cmp
notl
jns
notl
cmp
pop
sbb
add
or
imul
sbb
or
mov
mov
mov
dec
add
sbb
add
mov
push
add
push
add
mov
sub
ja
jne
ja
xor
add
or
add
and
add
add
add
push
inc
add
ljmp
mov
pop
fidivs
or
fsubrp
add
mov
jge
mov
cmp
faddp
add
fidivs
or
fidivs
or
fidivs
add
fidivs
mov
adc
in
ret
fsubp
add
fidivs
or
fidivs
add
fidivs
or
fidivs
or
fidivs
jmp
or
adc
add
adc
or
adc
or
fldl
popf
adc
or
adc
or
adc
add
adc
or
jmp
jmp
or
adc
or
jmp
or
adc
or
adc
or
adc
or
adc
add
adc
or
adc
or
adc
add
adc
or
adc
or
adc
or
verw
aad
add
in
add
in
add
ficomps
add
aad
add
in
add
add
cmpsb
add
fidivs
add
aad
add
in
add
in
add
fisubrs
add
aad
add
in
call
aad
add
aad
add
in
add
loop
add
jmp
in
add
in
add
mov
add
aad
add
in
add
loop
add
push
xor
add
and
inc
adc
add
aaa
sbb
add
sbb
add
loope
daa
movb
pop
sbb
add
adc
add
cmp
negl
js
pop
sbb
add
adc
add
lds
add
sbb
sbb
add
adc
or
mov
mov
sbb
adc
add
mov
push
add
sbb
add
sbb
sbb
xchg
decb
mov
fidivs
or
fidivs
or
mov
jmp
fidivs
or
mov
cltd
fsubp
push
fidivs
or
mov
leave
push
fidivs
or
mov
mov
fidivs
mov
dec
fidivs
cld
add
mov
push
fidivs
or
fidivs
jmp
or
adc
or
jmp
or
adc
or
or
stc
cld
fcoms
jmp
or
adc
or
pushf
adc
or
or
mov
jmp
cld
int3
adc
or
or
jmp
or
adc
or
or
jmp
cld
ficoml
jmp
or
adc
or
adc
fiaddl
cmp
jmp
aam
add
bound
add
in
add
in
call
aad
add
in
add
in
add
add
mov
stc
and
add
in
add
in
add
aam
add
add
add
in
add
in
add
aam
add
loop
add
in
add
in
call
aad
add
in
add
mov
add
stos
les
dec
aad
add
xchg
pusha
add
xchg
adc
mov
addb
push
pop
add
xor
ja
ret
addr16
or
inc
pusha
add
and
aaa
les
add
addb
movl
daa
push
push
add
pop
add
sbb
test
cmp
pop
js
pop
cmp
test
adc
mov
sub
mov
mov
mov
or
mov
dec
add
or
fidivs
sti
adc
out
add
out
sub
mov
je
mov
xor
mov
lret
or
fidivs
cld
stos
fidivs
sti
test
mov
inc
fidivs
or
fidivs
sti
sbb
mov
lcall
sti
jl
mov
cmp
mov
fcmovu
lds
pop
fidivs
mov
sub
mov
mov
fidivs
jmp
cli
movsb
adc
or
adc
sti
sub
jmp
sti
pushf
adc
or
adc
sti
lods
adc
cli
cwtl
adc
or
adc
sti
mov
adc
cli
js
jmp
sti
pop
adc
sti
pushf
adc
cli
cmp
stc
or
adc
sti
mov
jmp
jmp
or
adc
sti
movsb
adc
cli
or
sti
or
adc
sti
inc
adc
sti
hlt
adc
cli
mov
add
mov
add
mov
add
movsl
dec
add
movsb
movl
jmp
test
add
add
add
jmp
gs
add
fs
add
out
add
push
aaa
add
inc
idiv
call
jmp
xor
push
add
and
add
out
add
adc
pop
add
add
add
out
add
cmc
ds
in
call
out
add
aad
add
mov
add
mov
mov
mov
dec
add
or
add
or
add
adc
xchg
or
add
or
bound
add
or
add
add
sub
and
and
add
adc
or
or
or
add
or
add
or
add
pop
add
push
or
add
or
push
ljmp
pusha
fidivs
or
fstp
or
or
out
or
add
mov
or
fidivs
add
fidivrs
add
fidivs
add
ret
add
fisubrs
add
fiadds
add
cmpsl
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fisubrs
add
fisubrs
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
repnz
adc
add
push
jecxz
aad
cmc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
ljmp
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
in
adc
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
testl
add
pop
adc
add
sldt
testl
add
sldt
mov
add
mov
add
les
add
rorb
add
invd
add
adc
adc
add
or
jmp
or
imul
sbb
or
fistl
add
adc
add
adc
or
sbb
or
sti
adc
add
invd
add
invd
add
add
fsubp
add
fiadds
add
fiadds
add
fiadds
or
mov
or
xor
add
add
cmc
add
fidivs
or
cmc
add
fidivs
add
fidivrs
add
fsubrp
add
fisubrs
or
sbb
add
fimuls
or
int
or
or
add
fdivrp
add
fidivrs
or
int
or
dec
add
fidivrs
add
ficoms
out
add
adc
out
scas
add
adc
add
adc
add
adc
add
adc
adc
add
adc
out
mov
add
adc
add
adc
adc
add
adc
add
adc
out
daa
add
adc
add
adc
add
adc
add
adc
out
aaa
add
adc
add
out
aas
add
adc
neg
or
outsl
fimull
add
fisttpll
add
or
test
or
sub
or
or
or
mov
or
enter
dec
fimull
add
fisttpll
add
or
mov
fimull
add
fimull
add
or
clc
fisttpll
add
fisttpll
add
or
and
or
mov
loop
add
inc
loop
add
fisttpll
add
loop
add
loop
add
push
adc
add
adc
add
adc
add
or
cmp
add
or
add
or
sbb
add
adc
add
or
mov
or
or
add
or
ljmp
or
stos
adc
add
or
or
bound
add
or
add
or
and
or
loop
or
rorb
add
cld
add
fisubs
fmulp
add
fdivp
add
fidivrs
or
mov
add
fidivrs
add
fidivrs
add
or
lcall
add
sbb
or
fiaddl
ficomps
or
pop
add
or
cmp
fidivrs
add
faddp
add
faddp
add
fidivs
add
fidivs
add
fiadds
add
fiadds
add
or
jb
or
adc
add
adc
add
adc
xlat
adc
out
adc
adc
add
xlat
adc
add
adc
add
xlat
adc
out
mov
add
adc
add
adc
add
adc
add
adc
add
adc
xlat
adc
out
addb
adc
add
adc
add
adc
add
adc
add
adc
xlat
adc
out
cs
adc
add
adc
scas
fiaddl
add
add
pop
add
faddl
add
pop
add
pop
add
fiaddl
add
fldl
add
fldl
add
fldl
add
faddl
add
pop
add
pop
add
faddl
add
fiaddl
add
fisttpll
add
fisttpll
add
fmull
add
or
push
fisttpll
add
or
jbe
or
fisttpll
add
fmull
add
fisttpll
add
add
or
data16
add
or
add
wbinvd
add
adc
add
or
sub
or
sbb
or
cwtl
wbinvd
add
push
or
enter
fmuls
or
pop
adc
add
or
add
wbinvd
add
push
or
cmp
or
dec
wbinvd
add
wbinvd
add
push
or
mov
push
or
add
adc
add
wbinvd
add
or
sub
or
test
or
mov
or
xchg
pop
add
or
fimuls
pop
fcompp
add
ficomps
add
fidivrs
add
faddp
add
fiadds
add
add
ficoms
add
fidivs
add
fiadds
add
fisubs
add
fiadds
int
pop
add
ficomps
add
fidivrs
pop
fisubs
add
fisubs
or
out
or
movb
fiadds
or
xchg
or
push
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
fistl
out
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
add
out
or
loope
or
loope
or
lock
pop
or
aam
or
jmp
or
jecxz
or
fildl
or
roll
or
ljmp
repnz
or
jmp
add
cmc
flds
in
roll
in
add
fucom
add
cmc
flds
in
roll
in
sbb
or
in
rcrb
or
add
mov
or
push
mov
push
push
xchg
add
push
jno
push
push
addl
push
push
jno
push
push
jno
push
push
inc
add
push
xor
push
push
push
add
push
xor
push
push
inc
add
push
adc
push
push
xor
push
push
xor
push
push
add
wrmsr
add
movups
add
sldt
movups
add
add
sldt
add
cmpxchg
add
cmpxchg
pfrcpit2
adc
loope
adc
fldenv
adc
jmp
lret
adc
adc
movsb
sbb
enter
ror
push
pop
leave
push
pop
icebp
rcrl
test
sbb
adc
out
sbb
mov
sbb
mov
sbb
mov
sbb
ret
sbb
add
ret
sbb
in
sbb
in
sbb
aam
sbb
aam
sbb
les
sbb
hlt
ret
cmc
ret
in
add
in
add
aad
repnz
or
sbb
or
sbb
or
sbb
or
pop
repnz
pop
ljmp
pop
fimull
pop
lret
pop
ret
pop
cli
or
pop
repnz
pop
add
or
and
or
pop
fimull
pop
lret
pop
ret
pop
cli
or
and
or
and
or
jecxz
cld
and
or
and
or
and
or
and
or
and
or
aam
or
add
or
hlt
decb
sbb
in
or
jmp
push
pop
icebp
add
pop
or
out
or
loope
or
fcomps
or
out
ljmp
fldln2
add
clc
in
call
clc
int3
call
sti
iret
add
sti
iret
add
fcmove
add
add
fucomp
add
aad
add
std
jmp
add
cld
enter
rolb
adc
adc
mov
push
push
mov
push
push
roll
push
add
add
pop
pop
addb
pop
scas
or
sbb
or
sbb
or
sbb
sbb
outsl
or
sbb
sbb
aas
or
sbb
pop
sbb
cs
sbb
fiadds
sbb
fiadds
sbb
cs
sbb
cs
sbb
ds
sbb
incb
sbb
sub
or
sbb
push
sbb
fldl
sbb
add
lahf
sbb
les
sbb
hlt
scas
sbb
hlt
mov
sbb
in
sbb
aad
sbb
aad
sbb
lds
sbb
cmc
scas
sbb
repnz
add
fidivs
add
fidivrs
add
fidivrs
add
fidivs
add
fisubs
add
fisubrs
movsl
add
fidivs
add
fcompp
add
add
ficoms
sbb
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
flds
ficoms
loope
ficoms
or
adc
add
adc
add
adc
add
adc
ficoms
test
add
adc
ficoms
add
jecxz
add
fcoms
add
stc
test
add
aad
add
fsts
add
in
adc
jmp
mov
test
add
std
adc
jmp
lods
adc
add
sbb
inc
sub
cltd
rorb
pop
pop
xor
jo
sbb
jmp
sbb
push
test
int3
jns
test
loopne
xor
bound
insb
push
pusha
jle
inc
popa
out
leave
imul
add
fnstsw
test
sbb
insl
ss
hlt
mov
test
cmp
fs
imul
and
mov
clc
add
cli
lret
ljmp
dec
jmp
pusha
aad
jecxz
mov
cmp
add
andb
rorb
or
mov
fstpt
lods
adc
xlat
xor
dec
filds
fcompl
dec
repz
ret
add
scas
cmp
shlb
add
scas
mov
fidivrl
mov
and
mov
mov
cwtl
or
aaa
outsl
icebp
enter
inc
push
popa
lahf
out
jo
inc
fsubrl
mov
fcmovnu
dec
jecxz
jbe
adc
jns
jle
outsb
mov
xchg
mov
mov
out
mov
or
fwait
push
aas
and
push
shll
mov
scas
popf
push
mov
or
jp
das
add
mov
repnz
fisttps
sub
fstps
mov
jl
lcall
mov
cld
sbb
lea
mov
insb
push
pop
push
push
jmp
add
or
inc
mov
push
xchg
add
insl
loop
nop
ret
notl
fmul
fsubrl
mov
lret
aaa
adc
adc
inc
cmpsb
sbb
aad
or
mov
sbb
int3
mov
push
cmp
and
and
mov
out
pop
jno
sub
jb
mov
xor
bound
out
loop,pn
or
add
leave
pop
push
lcall
pop
je
sarb
cld
xchg
lret
fadd
jae
xor
gs
xor
outsl
dec
push
cmp
push
in
pop
or
xchg
jge
jg
lock
das
or
mov
push
imul
add
push
mov
sbb
mov
or
daa
mov
fsts
sti
push
frstor
mov
mov
pop
repnz
imul
fisttps
add
mov
aas
lods
mov
dec
ficomps
or
push
sbb
andl
lahf
jbe
pusha
sbb
aam
xchg
outsb
out
lock
add
mov
shrl
pop
mov
or
mov
or
adc
add
jnp
mov
mov
mov
lods
sub
pushf
test
shrb
xchg
fsqrt
movsb
fiadds
lret
mov
subb
insl
fcoml
or
in
or
loope
cli
pop
fimuls
jge
sub
mov
add
mov
orb
jno
lods
pop
mov
add
mov
cmpsb
sub
ja
cmp
dec
cmp
xor
dec
sub
dec
dec
out
fstps
jecxz
popf
fdivrp
xor
popa
cmp
cmp
xor
nop
movsl
in
call
add
mov
sub
out
xchg
xor
xor
cmp
movsb
xor
and
mov
ret
inc
mov
mov
data16
sbb
pop
xor
push
fs
mov
js
and
not
mov
adc
and
or
mov
adc
jmp
fdivrs
pop
push
mov
push
mov
pop
adc
add
push
sub
test
push
sbb
cmc
jmp
xor
insb
cmp
jge
aaa
pop
push
cmp
fxch
xor
ror
test
cli
mov
hlt
jecxz
push
mov
rcr
lods
mov
roll
cli
rorl
fcoms
fdiv
js
movsl
dec
out
popa
fcmovb
scas
or
aaa
test
cwtl
sbb
cwtl
addl
cmp
fwait
cld
outsb
sub
test
mov
mov
pop
int
dec
call
lahf
pop
lret
cmp
mov
repz
test
popf
push
jbe
xor
popa
pop
mov
nop
inc
mov
inc
scas
jo
mov
sbb
negl
sub
aad
in
sbb
jp
inc
xor
pop
and
es
mov
xor
mov
fs
outsb
inc
outsl
lahf
jmp
rcl
test
cli
out
repz
adc
mov
mov
outsb
ficoms
shll
movlps
test
pushf
mov
pusha
in
jle
sbb
test
jne
push
add
add
cmp
cmc
adc
and
mov
jmp
cmp
pop
jae,pt
out
push
mov
push
sbbl
pop
sbb
cmp
aam
mov
cmp
in
movsl
inc
sub
jns
push
pop
mov
cmp
xchg
iret
push
push
rolb
mov
fsubs
andb
cmp
cmc
fwait
gs
adc
jl
or
test
addb
pop
mov
or
pop
sub
sub
add
cmpb
leave
ret
movb
fwait
push
sti
adc
xor
lahf
ret
push
std
aam
sbb
jnp
inc
dec
cmp
push
flds
adc
sbb
pusha
push
mov
incb
fwait
test
aad
xor
int3
in
mov
xchg
lcall
cmpsb
test
mov
and
addr16
out
pop
scas
adc
inc
out
pop
mov
repz
sub
shll
repz
in
rol
ja
add
ss
inc
jae
mov
add
mov
int3
daa
pop
push
ds
insb
pop
or
sub
fsubr
xor
daa
sbb
add
ficoms
repnz
scas
gs
push
mov
mov
mov
lcall
push
jg
dec
jg
xor
pushf
sub
sub
fidivrs
jo
inc
or
or
inc
add
leave
cmc
ffree
mov
xchg
pop
daa
repz
xchg
shrl
shll
movl
fiadds
sarb
call
pop
sub
daa
sti
js
fsubrp
pop
addr16
out
in
push
push
fxam
cli
inc
add
mov
mov
xor
pop
xchg
jno
xor
fisubs
stos
cltd
insb
xchg
imul
push
bound
inc
xchg
xchg
das
dec
std
pop
push
imull
jecxz
sub
sbb
mov
xchg
das
mov
js
arpl
pop
popf
xchg
lret
data16
fldl
jmp
cld
addb
xlat
inc
sub
into
incb
dec
mov
notl
jnp
out
fisubrl
mov
js
push
pop
cmp
sbb
cwtl
xor
xchg
push
dec
insb
into
std
cmp
cmp
pop
and
hlt
pop
adc
fsts
int
jno
test
jg
push
adc
repnz
pushf
ror
mov
push
inc
pop
adc
sub
and
xchg
aas
scas
mov
lret
imul
fdivrp
pop
push
fsubrl
dec
jle
mov
movsl
inc
mull
cmp
mov
mov
aas
mov
and
ja
add
test
roll
leave
test
ds
inc
add
xor
lret
push
jne
mov
decb
outsl
cmp
rorb
pop
sbb
push
or
sbb
les
popf
or
push
pop
or
mull
repnz
mov
enter
lds
and
hlt
jmp
stos
idivb
imul
inc
mov
int
loop
iret
cmp
jae
mov
cmp
or
std
bnd
mov
icebp
or
mov
push
lods
or
movsb
pop
cltd
inc
mov
fsubr
mov
or
adc
xlat
es
icebp
xchg
test
sbb
and
into
xchg
into
adc
add
jecxz
sahf
jne
inc
js
out
xchg
add
scas
dec
mov
repz
loopne
repnz
add
add
jmp
leave
je
scas
and
call
out
xor
cmpb
out
jbe
and
mov
shlb
pusha
hlt
test
aad
dec
pop
ret
push
pop
mov
sbb
mov
sbb
push
outsb
movsl
pop
loop
or
sbb
out
nop
jns
loopne
js
jp
jp
inc
into
jnp
sub
data16
push
insl
cmpsl
inc
fsubrs
push
lcall
add
push
das
loopne
adc
mov
bound
iret
and
adc
pusha
cwtl
mov
outsl
gs
pop
sub
gs
jmp
addr16
inc
mov
dec
mov
inc
dec
subb
dec
and
dec
jnp
cmp
jns
jno
int
jle
cmova
jno
aas
inc
jbe
addl
cmovo
sub
push
mov
hlt
lock
loopne
xor
jne,pn
out
ret
mov
jnp
clc
push
or
cmp
push
jl
adc
mov
pop
or
pop
inc
jns
pop
es
movsb
pop
mov
push
pop
popf
push
outsl
pop
pop
mov
xor
loopne
pop
mov
mov
and
pop
out
repz
add
jns
fdivrp
cmp
dec
mov
jecxz
cmc
test
xor
mov
in
pop
and
stos
cmc
xor
hlt
jbe
adc
insl
rcl
repnz
xchg
call
lret
aam
sub
aad
mov
pop
jb
add
add
subl
inc
or
lock
add
pop
in
mov
test
mov
jno
das
test
push
mov
cmp
mov
test
mov
push
pop
jl
cli
mov
ret
add
cmp
mov
int
push
int
fiaddl
lret
xor
movsl
dec
xor
jb
push
mov
out
rolb
outsb
mov
xchg
enter
leave
mov
push
pop
lds
rcrl
ret
dec
adcl
add
insl
xchg
inc
mov
out
xchg
movsb
pop
mov
shll
adc
mov
xchg
popf
or
out
cltd
xor
lahf
lcall
pushf
inc
mov
inc
add
popl
jne
mov
or
mov
ja
mov
cmp
sbb
sbbl
test
xchg
jmp
xchg
scas
test
add
fisubs
scas
jl
sub
fcmovb
lods
lods
das
icebp
cmpsl
xor
cmpsb
add
xlat
je
imulb
mull
lods
jo
mov
aaa
sti
ret
mov
xchg
add
mov
rolb
mov
mov
decb
mov
mov
addb
mov
adc
mov
sbb
mov
add
fimuls
or
xor
jb
in
jb
bound
xchg
ficoms
int3
inc
imul
pop
lret
sbb
movsb
mov
xor
popa
movsb
test
fdiv
bound
jge
movsb
divb
fwait
lods
sbb
les
dec
imul
dec
sbb
into
stos
push
lods
dec
test
adc
rcrb
loope
mov
add
lods
iret
hlt
mov
push
in
shll
hlt
sbb
jo
mov
lret
pop
sub
movsl
sbb
add
ret
sbb
aas
fldl
test
xchg
cmpsl
xchg
data16
dec
mov
mov
push
pusha
jmp
pop
outsl
repz
jp
sbb
rclb
popa
lds
rcl
mov
jb
xor
daa
adc
rcll
push
mov
inc
add
popf
sub
dec
scas
mov
les
add
mov
jnp
test
push
inc
fsubs
mov
mov
aas
in
sub
mov
mov
lods
enter
add
lret
xchg
xor
out
cmpb
insb
cmp
leave
add
imul
stos
pop
ret
dec
loope
lret
cmpsb
mov
adc
sub
push
incb
imul
add
leave
push
add
adc
add
mov
or
lods
loop
cmpl
sub
insl
xchg
test
lcall
dec
xchg
sub
inc
mov
pop
clc
or
sbb
dec
push
jge
icebp
cmpsb
sbb
xchg
mov
test
in
mov
out
jno
jg
leave
daa
xchg
stc
icebp
imul
roll
cmp
rcl
mov
pop
in
inc
loope
ja
push
dec
loop
call
mov
scas
aaa
enter
loop
in
push
sbb
call
addr16
loopne
gs
push
pop
lods
bound
jnp
mov
or
push
mov
xchg
in
mov
pop
stos
xor
stc
lea
imulb
ss
adc
push
aam
or
loope
ret
sbb
cmp
cld
dec
icebp
aas
dec
cmc
addl
repnz
push
adc
pop
add
dec
xor
insl
push
push
sub
fwait
pop
test
pop
not
cmp
mov
jge
pop
out
sbb
hlt
fisttpll
mov
jae
push
xor
lcall
pop
rolb
pushf
loop
popa
ret
rorb
cltd
pop
xor
xor
in
test
xchg
ret
fildll
out
jae
add
ljmp
cmc
mov
test
xchg
inc
and
cmp
enter
add
stc
faddl
pusha
inc
or
movsb
dec
or
push
cmpsb
or
out
push
xchg
mov
inc
out
cmp
jne
push
or
adc
stc
mov
sahf
inc
ret
xchg
xor
insb
cmpsb
jmp
sbb
mov
add
sbbb
ret
ja
cmpsl
cmp
sub
test
jp
xchg
cmp
jo
in
lea
sahf
add
and
xorl
adc
xchg
cmpl
mov
jmp
icebp
push
subb
aam
push
mov
sar
jle
aad
xor
outsb
add
jbe
jmp
rcrb
sub
test
push
sbb
ret
repz
cmpsl
test
and
pop
lahf
ss
sbb
lock
mov
ficompl
fs
shll
test
in
mov
jge
jmp
rcrl
ss
fildl
xchg
insb
mov
mov
and
clc
sub
add
fisubs
or
icebp
or
jp
out
sub
movsl
jmp
and
in
loopne
mov
lock
fsts
push
dec
mov
push
jl
adc
pop
lret
lahf
hlt
push
into
hlt
add
jp
dec
fldenv
pop
sarl
cld
mov
jl
mov
loop
mov
push
cli
daa
inc
ffreep
sub
push
inc
es
or
xchg
jne
add
fmul
add
push
or
jge
sub
out
and
insb
dec
and
add
decl
xchg
jbe
sub
cmc
mov
push
pop
sar
cli
add
loop
aaa
in
lds
push
iret
push
sub
pop
iret
and
lods
cmp
jg
icebp
adc
pop
adc
adc
vmrun
enter
imul
xchg
vmovups
mov
xor
push
popa
mov
mov
js
lea
pop
xchg
pop
xor
pop
mov
add
push
cwtl
sbb
cmp
sub
popa
xor
cmp
lret
cs
bound
xor
inc
xor
dec
fildl
movsl
jnp
adc
les
loop
xchg
xlat
call
ljmp
sbb
dec
add
sarl
dec
gs
pusha
pop
sub
call
das
loop
mov
xchg
xlat
arpl
hlt
sti
fidivrs
sub
fsts
popf
push
mov
xor
sub
sti
loope
dec
mov
or
add
dec
add
int
adc
rolb
pop
es
add
test
sbb
and
inc
mov
mov
cwtl
mov
mov
dec
or
movsl
aaa
pop
insb
xor
cmp
push
mov
jp
loop
sti
push
shlb
inc
not
mov
adcl
pop
mov
in
jne
aad
hlt
es
inc
sub
pop
or
mov
sbb
add
cltd
add
jge
out
int3
stc
paddd
out
pop
cmp
sub
add
sub
imul
cli
pop
mov
jo
mov
adc
xor
hlt
pop
push
orl
aas
scas
jge
dec
mov
add
mov
dec
pop
xchg
jmp
inc
xchg
cltd
or
xor
aaa
fidivrl
daa
dec
cmc
sub
push
pusha
xchg
mov
arpl
ret
xchg
out
daa
mov
jns
cld
mov
sbb
add
sbb
outsb
movsl
loope
xchg
xor
lret
add
fcompl
mov
sub
dec
mov
adc
out
popf
testl
je
push
xor
and
mov
sub
mov
add
jle
add
cmp
or
or
test
xorps
lcall
adc
scas
repz
mov
ret
shr
in
mov
and
rcl
jbe
loop
out
mov
subl
adc
pop
nop
fidivs
inc
ja
test
and
push
add
or
sahf
ljmp
and
shrl
iret
inc
std
loope
cmp
sarb
mov
push
mov
shrl
es
inc
sbb
ja
mov
sub
mov
js
stos
cmp
nop
dec
scas
lea
push
iret
popa
addr16
inc
fmull
repnz
dec
ret
push
xchg
add
dec
push
mov
push
notl
lods
addr16
cmpsb
sub
sub
inc
lods
sbb
fcompl
mov
aas
adc
or
xchg
jmp
out
push
sarb
loopne
dec
lea
sbb
sbb
lret
ds
cs
jo
mov
movb
mov
add
push
test
adc
bound
xchg
cli
dec
and
in
loope
stos
std
and
cwtl
dec
or
mov
mov
shlb
test
imul
fidivl
aaa
sbb
xchg
movsb
fwait
add
fstpl
in
sbb
or
sahf
jl
xor
jecxz
test
pop
aas
xchg
pop
popa
clc
add
cmpsb
add
out
outsl
xchg
and
and
gs
scas
stos
and
jecxz
sub
sarb
lock
lods
or
repnz
or
leave
inc
insl
mov
inc
repz
clc
pop
mov
in
in
jne
cmc
das
xor
push
mov
mov
jne
out
xor
push
mov
mov
jns
in
cmp
jns
add
push
sbb
shrl
testl
jle
cmc
shrb
cld
inc
sbb
xchg
xchg
inc
push
jae
cmpl
ret
les
or
nop
xchg
into
lret
push
add
ret
dec
leave
mov
lock
lret
pop
push
adc
imul
pop
push
xchg
dec
cwtl
push
adcb
add
mov
shlb
mov
xchg
ficomps
xlat
sub
out
cmpsl
aaa
mov
mov
test
std
adc
pop
clc
and
dec
lret
outsl
xor
loop
jne
nop
imul
mov
cmp
pusha
jns
cmp
addr16
mov
xchg
out
cmp
or
sti
mov
mov
and
cwtl
xor
add
mov
ja
push
into
js
gs
mov
xor
jmp
xor
adc
sub
aas
dec
movsl
lea
nop
pushf
mov
sub
cmp
mov
push
je
mov
push
mov
andb
imul
pop
xor
fstps
mov
xchg
mov
push
stos
ret
mov
sub
rol
inc
mov
dec
mov
adc
pop
adc
pop
jmp
push
pop
add
test
sub
xchg
pop
add
mov
sbb
push
xchg
fstl
pop
inc
push
jb
out
pop
or
rclb
push
push
and
sbb
xchg
pop
test
mov
test
or
imul
stc
in
sbb
enter
pop
outsl
enter
dec
cmp
dec
sbb
sbb
dec
mulb
jmp
jg
rolb
rolb
lea
fwait
stc
add
int3
cmp
xlat
push
push
loop
std
jne
or
insb
xchg
cmp
andb
add
adc
inc
xor
jbe
aas
pop
loope
inc
sbb
cmc
jge
xorb
sub
dec
add
mov
test
jmp
hlt
outsl
enter
mov
jno
inc
or
jg
iret
jbe
test
inc
test
rolb
lret
sbb
jmp
repz
aaa
cli
cmpsb
push
fdivp
xchg
mov
cmp
xor
bound
or
dec
jmp
dec
mov
dec
inc
mov
xchg
adc
jno
lods
adc
outsl
jb
fldcw
ret
xor
cmp
stc
mov
cld
push
inc
sbb
test
fs
popa
jns
fiaddl
inc
mov
js
jl
shll
lea
test
mov
mov
jl
jge
cmp
mov
mov
mov
sbb
ret
divl
cmc
ret
and
adc
push
ss
cmp
mov
jae
and
call
kandw
jg
ljmp
cld
jns
out
sbb
in
jbe
mov
out
scas
mov
hlt
jo
in
cs
outsb
add
repz
loope
movsb
push
repz
es
add
cmp
mov
dec
inc
out
add
adc
lods
shll
lcall
mov
enter
fmuls
cmpsb
les
adc
addr16
and
movsl
xchg
fldt
or
mov
xlat
ret
mov
sub
cmp
pop
lea
and
loopne
fs
mov
pop
push
xchg
outsb
add
movsl
ret
repz
xlat
out
mov
mov
add
xchg
adc
nop
mov
cwtl
xor
mov
sub
repz
mov
and
jo
adc
fadd
fstpl
into
mov
iret
dec
or
and
pop
fdivl
sub
mov
rclb
divl
xor
xchg
inc
dec
sub
rcrl
jbe
cmp
shlb
test
inc
push
add
add
ret
or
outsb
jne
inc
pop
pop
int3
stc
mov
mov
or
paddsb
pusha
xchg
cmp
dec
push
jg
dec
sbb
add
rorl
pop
xlat
xor
cmp
mov
lret
mov
mov
cwtl
shll
movsl
arpl
xchg
out
and
push
mov
das
rclb
add
and
mov
sub
sub
push
adc
rcr
in
sbb
dec
mov
sbb
mov
mov
mov
or
mov
pop
pop
mov
fcoml
push
mov
icebp
jecxz
rcl
nop
or
sbb
adc
add
and
pop
push
pop
push
imul
in
xor
aam
add
mov
jl
push
int3
mov
jb
shrb
xchg
daa
cmp
xchg
scas
mov
movl
test
jb
negl
pusha
add
popa
mov
jne
add
imul
pop
ss
rcll
push
rcrl
int
ljmp
add
mov
cmp
pop
cmc
mov
and
dec
in
sbb
sub
gs
dec
popf
fdivs
ja
movsb
add
out
int
test
sbb
sub
jmp
daa
jns
sub
addr16
dec
inc
and
int3
inc
loop
sti
mov
andb
cmp
lahf
scas
mov
scas
js
icebp
add
je
cmc
insb
inc
adc
sbb
adc
xchg
sahf
stc
adc
inc
lock
cltd
sub
rcrl
ficompl
push
xor
std
arpl
mul
add
adc
jge
jg
mov
add
mov
sarl
in
mov
loope
adc
add
push
mov
out
sbbl
add
dec
pop
add
xor
popf
fs
or
js
pop
fisubrl
in
int3
stos
in
aam
mov
ss
lods
add
push
mov
and
lcall
test
ja
outsl
xchg
hlt
cmp
repnz
sub
je
sbb
clc
mov
cmpl
dec
mov
ret
rcll
inc
sub
imul
test
add
adc
cwtl
int3
shr
cwtl
mov
fcoml
sbb
rolb
xchg
add
add
xchg
and
fstps
cmp
jmp
imul
mov
push
mov
push
mov
xorb
repz
jl
cmp
dec
fcmovb
mov
jo
xchg
fstl
mov
mov
call
push
cmp
sahf
addl
imul
push
pop
mov
inc
sub
add
jl
lock
cld
int3
or
sti
rorb
sub
data16
ficompl
lods
das
outsb
inc
leave
cmpsl
es
ds
or
sub
cltd
add
sbb
mov
pop
or
dec
out
loop
notl
sarl
loopne,pn
sub
sub
popf
testl
jbe
idiv
xlat
or
push
cmp
mov
std
xor
gs
dec
mov
testb
xchg
ret
jge
out
mov
rcrb
int
mov
negb
jg
jecxz
inc
out
ret
imul
sub
push
pop
jmp
stos
aas
xchg
mov
into
je
dec
test
shll
inc
pusha
pop
daa
movsb
jo
push
and
sub
sbb
adc
std
jg
xor
call
mov
or
mov
cmp
xchg
xchg
cld
push
ljmp
push
out
out
mov
test
fistl
mov
push
fisttpll
data16
pop
mov
lock
out
rcll
mov
jp
shlb
xor
push
dec
notl
fstps
cmp
jnp
pop
pop
roll
xchg
xlat
xchg
or
cs
sbb
es
adc
je
stos
mov
jl
and
leave
mov
mov
xor
loope
decl
shrb
add
cwtl
jae
test
push
in
pop
shl
jge
ss
or
in
jb
inc
scas
ficoml
mov
cmp
jmp
incb
das
insb
adc
or
pusha
sahf
addb
mov
jns
push
pop
add
sbb
hlt
arpl
push
hlt
mov
push
add
xchg
roll
push
sub
and
dec
dec
inc
xor
std
mov
xchg
pop
cmp
sbb
mov
lods
cs
jmp
shrb
pop
sbb
cmp
jns
lea
repnz
lret
pusha
call
into
mov
mov
mov
mov
inc
fnstenv
lods
and
jno
in
clc
popa
cmp
stos
cmpsb
mov
adc
push
fisubs
inc
aam
sub
jp
loope
enter
dec
scas
mov
sbb
movsl
jbe
and
jmp
stc
add
cmpsl
dec
scas
push
pop
lock
icebp
cld
sub
xchg
mov
mov
pop
sbb
jb
add
and
negb
jns
mov
and
sub
shlb
cltd
enter
sahf
push
xor
ss
adc
push
and
sub
mov
mov
pushl
mov
fmuls
js
mov
fs
jecxz
xlat
push
scas
insb
add
mov
test
das
adc
and
aas
sti
sahf
sub
ror
icebp
data16
and
sbb
cli
pop
movsl
das
pop
fimull
shlb
addr16
cli
dec
ja
xor
sahf
addb
out
mov
push
add
jge
or
mov
cmpsl
iret
cmp
rcl
dec
sub
add
test
loopne
nop
lock
xlat
jp
xor
push
stos
or
dec
push
inc
enter
cwtl
cmp
cmpsb
and
loope
jp
jb
xchg
aas
ficoms
icebp
ljmp
add
fstpl
add
fstl
add
fstpl
add
stc
fldl
add
loop
add
fidivl
add
add
push
add
or
jecxz
lds
add
mov
add
cmpsl
adc
add
adc
add
adc
add
adc
add
adc
fs
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
adc
add
adc
add
es
add
or
add
roll
js
sbb
js
add
js
add
js
add
js
add
js
add
jp
add
imul
adc
dec
add
fimuls
adc
dec
add
fidivrs
add
fisubs
pop
fisubs
sbb
jo
sbb
jae
sbb
inc
add
ficoms
sbb
fimuls
sbb
fidivs
jmp
jno
xchg
fidivs
jmp
jo
ljmp
js
sub
fldl
inc
hlt
inc
and
fcoml
dec
clc
dec
out
sbb
add
adc
insb
sbb
adc
sbbl
test
jmp
jle
xchg
fldl
jecxz
and
pop
mov
ficoms
sbb
shrl
sbb
sub
sub
add
and
shrl
xor
adcl
add
adc
jmp
sbb
sti
jns
jne
jno
add
fstl
or
in
pop
icebp
fstl
add
loope
pop
loop
call
add
hlt
decl
add
mov
dec
cmp
ret
add
adc
cmp
fs
mov
dec
jns
mov
jp
mov
inc
loope
jmp
fucomp
mov
and
iret
fucomp
incl
adc
add
push
outsl
mov
xor
jne
bound
call
or
add
adc
add
or
add
and
add
popa
fs
push
fstpt
add
pop
fs
jmp
inc
outsb
mov
outsl
shrl
outsb
jnp
imul
cmp
je
insl
js
and
jb
outsb
insb
xor
adc
add
add
adc
adc
add
xchg
add
in
add
dec
fisttps
fisubrs
push
push
jae
inc
or
sbb
ja
out
pop
cld
adc
and
lret
cmp
loopne
rcl
popa
fisubs
fbld
sti
and
or
or
push
pop
or
or
pop
mov
and
fisubs
add
fimuls
jae
pop
add
fidivs
cmp
push
fisubrs
add
fidivrs
add
adc
add
adc
add
adc
pushf
adc
add
adc
insb
pushf
adc
imul
pop
dec
test
fisubl
mov
fldenv
or
fimull
push
mov
cmpsl
mov
fiaddl
mov
cltd
pop
sbb
lret
mov
jp
or
cmpsl
mov
fsts
xchg
sbb
mov
flds
sbb
mov
flds
jnp
daa
mov
lret
bound
ja
jo
jbe
cmp
ja
push
xorl
push
xorl
xor
ja
xor
ja
xchg
icebp
jbe
sarl
jbe
cmp
test
jae
jbe
xchg
xchg
ja
jae
jbe
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
mov
sub
jmp
xor
add
xor
xor
ss
das
xor
add
or
popa
arpl
gs
inc
imul
pop
jno
jae
jne
add
jns
testl
arpl
js
addr16
cmp
imul
insl
outsl
pop
fs
repz
out
imul
adc
add
adc
add
adc
add
add
xchg
add
adc
add
add
inc
adc
add
imul
add
imul
add
imul
add
fisubrs
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
lcall
xchg
mov
jo
jns
outsl
pushl
outsl
ljmp
outsl
incl
popa
adc
pop
pop
pop
jo
pop
push
jo
pop
dec
jo
pop
jmp
push
fcoms
loope
sub
jo
pop
es
in
in
add
pop
push
jo
pop
push
jo
pop
push
jo
pop
outsl
icebp
pop
imulb
pop
out
outsl
loope
out
in
in
std
loopne
outsl
leave
pop
into
outsl
rcrl
mov
pop
mov
test
pop
jmp
jmp
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
ss
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
notb
add
notb
add
push
adc
add
adc
add
adc
add
adc
add
sgdtl
sgdtl
mov
add
mov
add
sgdtl
sgdtl
mov
add
mov
add
xchg
add
xchg
add
fisubrs
add
imul
add
imul
add
imul
add
imul
add
fisubrs
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
imul
add
adc
add
pmulhw
loopne
loope
xlat
pop
add
or
adc
call
push
rolb
rorl
test
and
das
add
sbb
daa
std
push
or
xor
pop
cmc
ss
sub
pop
in
fcomps
test
out
repz
out
fimuls
fbstp
jecxz
ljmp
dec
in
out
inc
loope
repnz
fnsave
out
cmp
add
fidivs
xor
pushl
mov
jp
xchg
jle
pop
popl
popa
add
pop
dec
jg
push
dec
adcl
addr16
mov
mov
andl
scas
jns
lahf
mov
outsl
mov
mov
sub
push
and
inc
lret
sbb
mov
rcll
adc
cmp
leave
cmp
lds
jae
shll
jmp
push
imul
ja
icebp
repz
cmc
imull
stc
sti
dec
call
add
adcl
pop
jg
or
fwait
pop
or
adc
or
sbb
or
pop
out
and
jecxz
es
sub
cmp
sub
xor
and
aaa
add
sub
cmp
sub
aas
inc
je
arpl
gs
cmp
imul
outsl
ja
jno
jae
jne
outsl
insb
jns
imul
daa
push
inc
inc
add
mov
dec
and
rclb
dec
push
or
lret
pop
adc
ljmp
pop
bnd
gs
mov
xchg
xchg
dec
mov
mov
sahf
jno
mov
cmpsb
jns
fwait
stos
test
xchg
scas
sbb
scas
mov
loop
mov
push
sub
sbb
xor
lret
ss
and
push
rorb
add
mov
inc
fidivs
jae
pop
mov
imul
lods
arpl
push
pop
lods
data16
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xlat
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
add
adc
jmp
inc
push
pop
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
push
rcll
mov
adc
jmp
fstl
add
fstl
add
fstl
add
add
call
adcl
add
adc
add
adc
add
adc
add
adc
add
out
call
out
jg
adc
add
adc
add
adc
add
sti
xchg
add
xchg
add
adc
add
add
inc
adc
add
add
shr
pushl
adc
add
inc
adc
add
add
aaa
adc
add
adc
add
adc
add
add
notl
add
fisubs
add
push
add
fisubs
add
imul
add
push
add
fsubrp
addl
insl
pop
sbb
xor
pop
add
imul
sbb
sbb
push
adc
add
push
adc
int3
aaa
adc
int3
aaa
adc
in
aaa
adc
pop
ljmp
in
or
int3
push
adc
int3
push
adc
int3
aaa
adc
int3
aaa
adc
in
aaa
adc
pop
ljmp
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
dec
xorl
xorl
inc
inc
iret
sub
xorb
lock
push
fsubrp
pop
jle
sub
push
fadds
inc
mov
ds
mov
jbe
xchg
jge
test
xchg
test
pop
imul
insb
imul
mov
imul
and
mov
xor
cwtl
add
andb
xchg
sbb
dec
push
pop
jbe
or
mov
pop
jb
das
jle
pushf
pop
mov
and
mov
lds
mov
fidivs
mov
nop
jne
inc
pushf
flds
mov
clc
int3
mov
ljmp
gs
or
addr16
bound
and
add
mov
test
mov
push
fimuls
pop
repnz
int3
dec
pop
je
xor
jbe
in
ficomps
shrb
push
pop
mov
cmpsb
xchg
popa
or
shll
add
mov
add
fidivs
add
pop
adc
ficoms
add
xchg
add
ficomps
add
sbb
add
fidivrs
add
add
in
add
mov
add
fimuls
add
fidivrs
add
ficoms
cmpsb
add
adc
ficoms
or
add
adc
sahf
adc
add
adc
add
adc
nop
sahf
adc
add
adc
nop
sahf
adc
add
adc
add
adc
push
adc
add
adc
add
ficoms
popa
nop
push
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
ljmp
add
jecxz
add
fistl
add
jecxz
add
fsts
jmp
adc
fistl
add
jecxz
add
fistl
add
add
adc
jmp
adc
fsts
add
fmull
add
fsubr
and
loop
push
ljmp
add
fcoml
add
ljmp
add
fmull
add
fmull
add
fmull
add
loop
add
loop
add
stos
adc
add
inc
add
adc
inc
add
adc
add
repz
inc
add
add
jmp
inc
add
adc
xchg
pushf
inc
add
adc
add
lcall
dec
lcall
cmp
add
add
add
add
push
add
pushf
inc
add
adc
sbbl
add
adc
add
inc
add
add
add
fisubs
add
lret
test
xchg
add
fisubrs
inc
fiadds
or
stos
xchg
bound
push
fdivp
test
and
ficomps
add
faddp
test
inc
add
popl
or
lret
test
ljmp
fimuls
add
faddp
test
stos
add
mov
add
fsubp
test
jns
xor
fdivrp
test
insb
add
ficoms
test
addb
dec
test
adc
test
adc
add
adc
test
adc
add
adc
add
adc
add
adc
sahf
adc
test
adc
add
adc
test
adc
test
push
adc
push
adc
add
adc
test
adc
fcoml
stc
test
adc
xchg
adc
add
adc
xchg
adc
mov
pusha
sar
cld
fstl
add
fstpl
add
sar
in
fstpl
push
pusha
sar
stc
fstl
dec
pusha
sar
push
fstl
add
fstpl
jle
fstpl
add
fstpl
add
fstl
add
frstor
decl
adc
lcall
adc
jg
push
add
ficoml
add
pop
sar
jmp
adc
adcl
add
xchg
inc
add
adc
add
inc
add
adc
inc
add
addr16
inc
add
xchg
inc
add
or
jg
inc
add
adc
add
inc
add
adc
add
xchg
inc
add
or
inc
add
adc
add
xchg
inc
add
push
or
setae
cld
adc
add
xchg
inc
add
xchg
inc
add
or
daa
xchg
inc
add
sahf
add
xlat
test
xchg
or
daa
xchg
fimuls
add
fisubrs
test
xchg
add
aaa
test
add
lahf
test
ja
or
fwait
test
add
ficoms
add
fisubrs
add
fimuls
pop
ficomps
add
fimuls
add
faddp
addl
add
fidivrs
add
fsubp
add
ficomps
jle
enter
push
adc
sbbl
mov
out
adc
add
adc
sbbb
sbb
adc
or
addl
adc
aam
xor
add
adc
add
adc
sahf
adc
sbbl
movsl
addl
adc
aam
loope
sahf
adc
add
adc
sbbl
ja
loop
roll
loop
add
pop
sar
icebp
frstor
add
pop
sar
mov
mov
add
adc
lds
and
cltd
xchg
pop
add
add
pop
add
aaa
pop
add
loop
add
es
add
loop
add
pop
pop
add
fstl
mov
fisttpll
add
fstpl
stc
es
add
pop
pop
add
fisttpll
leave
push
pop
add
fisttpll
icebp
mov
add
and
imul
add
imul
add
or
aas
add
pop
aas
add
or
add
aas
add
push
add
lcall
add
or
aas
add
pop
aas
add
pop
aas
add
or
mov
aas
add
or
add
adc
inc
pop
aas
add
aas
add
pop
aas
add
pop
add
ficomps
fiadds
add
fsubrp
add
fidivrs
aad
add
fwait
add
fdivp
add
dec
fdivrs
fidivrs
fdivrs
fisubs
or
imul
fisubrs
or
fcmovnbe
aas
fidivrs
add
xlat
aas
add
aas
fdivp
add
fisubrs
add
fisubs
aas
ficomps
fdivrs
add
fisubs
incb
rclb
fstp
sbb
mov
add
adc
fmuls
adc
out
adc
fdivr
adc
jmp
adc
fcomp
adc
fmul
adc
in
adc
add
adc
test
adc
sbb
xchg
add
adc
add
adc
add
adc
xlat
jmp
adc
xlat
fsts
sub
adc
xlat
add
adc
add
adc
xlat
mov
and
inc
pop
add
and
or
cmp
ficoml
add
cmpsl
add
nop
fst
ljmp
add
cwtl
fucomp
call
call
mov
add
fimull
or
pop
add
xchg
add
inc
ficompl
mov
add
xchg
frstor
add
frstor
add
lock
add
movsl
fldl
add
add
fisttpll
add
mov
or
xlat
data16
add
cmp
xchg
data16
add
cvtps2pi
arpl
add
pop
add
aas
add
push
or
mov
add
aas
add
push
aas
add
push
aas
add
or
push
aas
add
or
add
or
aas
add
or
add
push
adc
sti
push
aas
add
or
add
push
aas
add
or
add
aas
add
movsb
add
fidivs
add
fidivrs
add
ficoms
aas
fdivp
add
xchg
aas
fisubrs
adc
fidivrs
add
add
xchg
add
ficomps
aas
ficoms
lret
aas
fidivs
add
fimuls
aas
fimuls
add
fisubs
add
ficomps
add
fidivs
add
fidivs
sar
cld
add
fidivrs
add
fidivs
add
fiadds
in
add
adc
fsts
inc
mov
jnp
add
je
add
test
addb
push
add
adc
cmp
inc
add
adc
add
adc
xor
adc
add
adc
add
adc
xor
adc
add
adc
add
adc
adc
fcoms
pop
add
adc
add
adc
fcoms
add
add
sbb
xor
fisttpll
add
frstor
add
fst
add
fst
add
fadds
adc
scas
add
rolb
fnsave
add
fstl
add
pop
add
fisttpll
add
fcompl
add
fmull
add
fsubl
add
add
fsub
add
fsubrl
roll
fdivl
add
testb
test
adc
push
add
adc
daa
add
and
add
add
xor
add
adc
sbb
adc
add
adc
add
adc
add
adc
add
adc
insl
add
adc
add
add
sub
imul
adc
pop
adc
add
adc
mov
push
add
fldl
cmp
loope
adc
rolb
and
sti
add
add
dec
fucomip
add
out
add
testb
fcomip
add
fistps
add
fistps
add
sbb
dec
fistps
add
fbld
add
aam
push
add
pop
add
fists
add
fbld
add
fisttps
add
fistpll
add
cmp
dec
fistps
aaa
fbstp
add
add
dec
add
aad
ds
mov
or
mov
or
filds
inc
pop
inc
add
dec
add
jg
push
pop
jge
push
pop
addl
pop
jns
inc
pop
inc
add
pop
add
xchg
add
jge
sbb
pushl
cmp
jnp
cmp
jp
addb
pop
xchg
push
pop
je
pop
pop
jne
push
pop
mov
inc
pop
addl
xor
insl
add
pop
push
add
or
xchg
or
mov
cmp
test
or
push
xor
out
xor
inc
xor
mov
dec
xor
dec
xor
out
xor
pop
xor
push
xor
out
xor
out
xor
xor
sbb
xor
sbb
xor
xor
aas
sub
ss
xor
out
xor
daa
xor
sub
adc
sub
xor
xchg
xor
add
or
pop
adc
push
call
adc
push
test
and
je
and
jae
and
adcb
push
adcl
daa
push
jg
sub
adc
push
int
sub
int3
adc
push
mov
adc
push
mov
adc
push
notb
xor
adc
adc
push
add
xor
repnz
push
add
adc
push
iret
adc
push
out
adc
push
popf
adc
push
xchg
adc
fimuls
inc
loopne
add
inc
add
push
add
add
push
add
mov
inc
loopne
add
nop
add
lea
dec
fcomps
add
add
mov
add
xlat
add
fadds
push
loopne
add
mov
push
loop
add
fiaddl
add
add
roll
push
fcmove
add
iret
add
loopne
pop
loop
add
into
add
sti
add
xchg
add
popl
and
cltd
add
out
ja
fcoml
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
in
sub
add
lahf
add
adc
add
adc
add
adc
add
or
sub
adc
cs
or
add
or
xor
out
add
add
fdiv
add
fdiv
add
fadd
add
add
mov
fdivr
add
fadd
add
fdivr
add
fadd
add
add
fmul
add
fmul
add
out
dec
fsubl
add
fsubl
add
fsubr
add
sbb
or
sbb
add
fsubl
add
fsubr
add
into
adc
add
adc
add
adc
add
adc
add
mov
sbb
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
mov
pop
adc
add
das
adc
stos
fst
decl
ffree
call
clc
ljmp
fstpl
ljmp
fstpl
dec
fisttpll
dec
ffree
scas
fnsave
call
xchg
frstor
xchg
frstor
xchg
xchg
xchg
fldl
lcall
cltd
lcall
pushf
fucomp
popf
fstl
lcall
popa
adc
jle
cmp
jl
xor
jp
pop
incl
push
cmp
adc
inc
adc
ss
cs
das
adc
sub
int
sub
adc
decb
adc
jbe
cmp
ja
cmp
adc
pop
adc
decb
pop
incb
pop
push
adc
sbb
pop
pop
adc
mov
dec
add
enter
rorb
dec
add
jnp
dec
movsl
or
inc
xchg
adc
dec
xchg
icebp
and
adc
xchg
jp
and
add
and
pop
xchg
and
xchg
and
insb
and
push
and
and
lods
and
sbb
and
or
and
or
and
mull
and
into
and
stos
xor
and
xor
pusha
and
xor
and
xor
sub
cli
xor
and
stc
xor
and
xor
and
xor
and
aaa
and
aaa
xchg
and
and
lds
adc
or
ss
bound
or
and
or
ss
mov
or
test
lret
mov
clc
stc
incl
add
stc
mov
std
sti
stc
sbb
adc
and
sbb
xor
adc
sub
and
add
enter
mov
lret
clc
add
test
pop
mov
orb
mov
mov
push
adc
mov
and
mov
es
fimull
push
fmuls
push
push
or
push
add
stc
or
push
xchg
out
mov
push
int3
lock
mov
orl
adc
add
sub
and
lock
sbb
es
adc
pop
push
cld
out
and
int
xor
lahf
jmp
push
dec
jmp
push
xchg
jmp
push
xor
mov
or
lret
or
clc
out
xchg
or
add
jmp
mov
or
adc
movsl
or
clc
ljmp
shll
dec
jmp
and
dec
fisttpl
es
shr
pop
dec
jmp
and
inc
fldt
rorl
adc
push
es
and
clc
loop
pop
sti
pop
cli
add
add
fucomp
pop
daa
aam
mov
and
shr
and
mov
add
and
loopne
and
shr
ljmp
sbb
daa
and
push
scas
add
sbb
sub
mov
sbb
sbb
add
xchg
and
push
movsb
and
sbb
sbb
sub
out
sbb
andb
sbb
mov
and
add
add
movsl
pop
rolb
fwait
pop
aam
sub
aad
sbb
add
pop
pop
fadds
dec
pop
fiaddl
fldt
paddusw
lahf
pmaxub
xchg
pandn
test
push
loope
fcmovne
push
loop
lret
fcmovnb
push
in
in
push
in
in
out
out
push
out
fisttps
call
fcomi
push
ljmp
or
add
rorl
add
call
jg
or
nop
adc
rclb
adc
loopne
adc
xchg
adc
call
push
pop
adc
into
push
pop
adc
push
pop
adc
push
cmp
in
push
xor
adc
push
aaa
adc
push
sahf
adc
push
mov
adc
push
xchg
adc
push
adcb
push
jge
ljmp
adc
push
adc
push
sub
push
sub
lcall
sub
mov
push
and
adc
push
scas
adc
push
mov
mov
adc
push
add
decb
mov
into
fisttps
lcall
or
xchg
into
out
ds
in
inc
into
call
or
daa
out
ljmp
out
rorb
or
into
or
or
add
aad
pmaxsw
or
add
fmuls
shl
or
vpaddusb
add
sbb
push
test
push
je
push
push
push
sbb
push
push
sbb
push
inc
sbb
push
jo
push
push
pop
sbb
push
pop
sbb
push
xchg
sbb
xor
sbb
xor
xor
push
sbb
xor
pusha
sbb
xor
cmp
pop
sbb
xor
cmp
or
cmp
sbb
cmp
sbb
cmp
xor
sbb
xor
sbb
sbb
mov
inc
xor
xor
inc
xor
mov
inc
bts
setb
dec
out
lahf
or
out
scas
or
out
int
dec
out
les
iret
rorb
add
jns
push
iret
js
push
scas
ja
push
scas
testb
cmc
or
scas
cld
or
pslld
psubq
pavgb
psllw
out
in
or
out
fimuls
out
sti
or
out
hlt
or
iret
or
pop
iret
pop
or
popa
scas
add
mov
or
add
test
sahf
or
mov
nop
or
add
or
mov
or
scas
or
or
mov
dec
add
or
add
xor
inc
or
add
incl
xchg
decl
test
push
or
incl
jo
adc
imul
add
lahf
decb
pushf
call
or
loopne
testl
out
xor
xlat
xor
xlat
xchg
xor
out
xor
out
xor
xlat
xor
adc
xlat
ja
inc
enter
lock
add
test
dec
std
mov
dec
std
outsl
and
outsb
and
std
insb
and
outsb
and
mov
jns
addl
jp
push
mov
jl
loope
adc
loope
adc
add
adc
add
call
jmp
add
push
jmp
add
cmp
cmp
add
jo
pushl
adc
add
jmp
add
jmp
add
in
lcall
adc
add
jmp
add
add
jmp
add
lcall
add
call
adc
add
jmp
adc
add
decl
cwtl
cmp
fisubs
add
fwait
cmp
fiadds
add
lcall
faddp
cmp
ficoms
add
cmp
fidivrs
add
fidivrs
add
fidivs
add
ficomps
add
fisubrs
add
fmulp
aaa
add
sub
add
lret
fisubrs
add
fisubs
add
fisubs
add
lds
add
or
add
aaa
add
or
cmpl
ficoms
jo
ficoms
roll
adc
ficoms
lret
adc
ficoms
enter
xorb
adc
add
ficoms
je
ficoms
fldl
ficoms
addr16
ficoms
or
ficoms
push
aaa
ficoms
incl
ficoms
push
aaa
ficoms
adc
adc
ficoms
add
adc
ficoms
or
aaa
ficoms
cld
add
adc
add
adc
add
adc
ficoms
leave
add
adc
js
adc
enter
pop
jmp
adc
pop
add
adc
mov
adc
cmp
fstl
add
adc
test
adc
lahf
test
add
adc
sahf
or
add
adc
orl
adc
jo
adc
inc
loop
add
adc
sbb
adc
push
enter
loop
add
fstl
add
fstl
add
test
add
fstl
add
or
add
add
adc
add
pushl
add
add
pushl
add
icebp
aas
adc
add
ljmp
add
iret
lcall
add
mov
sldt
sub
or
add
lcall
fdivrp
stc
or
add
clc
or
add
incl
fdivrp
pushl
add
add
incl
fdivrp
pushl
add
or
xor
fisubrs
add
stos
add
fiadds
add
sbb
add
pop
xor
add
push
xor
add
adc
add
fiadds
add
lea
add
dec
xor
fimuls
add
fsubrp
add
fimuls
add
adc
xor
add
xchg
mov
mov
je,pn
mov
nop
fs
loop
int
aad
push
and
adc
sti
add
or
js
lahf
pop
mov
and
lods
adc
mov
aad
pop
jl
push
stos
add
jne,pn
mov
testb
cmp
in
or
mov
stos
mov
xor
ret
jge
xchg
jle
xor
jne
mov
jnp
lret
add
push
mov
sbbb
rorl
inc
inc
imul
das
aas
popf
imul
xchg
fsubl
fs
ss
cmpsb
adcb
sbb
fucomi
jecxz
mov
data16
das
mov
call
adc
imul
pop
ljmp
imul
lods
repnz
aam
xchg
cmp
mov
lea
cwtl
mov
and
movsb
outsb
mov
aam
dec
jnp
push
lret
xor
sti
neg
fldcw
insb
and
sbb
out
pushf
mov
xor
dec
jbe
and
sub
adc
add
ud1
shlb
loop
aas
xor
dec
jnp
lret
out
add
push
movsl
ja
arpl
notb
out
pop
push
lods
and
imul
add
and
aas
or
sbb
fimuls
sub
and
fldenv
je
mov
popf
fcmovnb
arpl
mov
icebp
stos
add
lock
icebp
add
xor
lcall
jne
jmp
inc
clc
imul
mov
scas
repz
test
pop
push
into
repz
repz
pop
iret
mov
pop
and
xchg
cltd
push
and
push
and
adc
test
aam
popf
in
testl
or
rorw
popf
push
sub
sarl
cld
lods
and
in
idivb
out
stc
leave
out
stc
int
and
xchg
ret
inc
or
fnstsw
lret
cmpsl
push
or
adc
cwtl
xchg
xchg
ror
in
clc
stc
in
idiv
in
idiv
in
testl
bound
fidivrl
xchg
pop
add
daa
fldenv
ja
cld
xlat
pop
cltd
push
mov
pop
adc
movsl
loop
add
add
cmp
cli
std
cmp
repnz
jp
insb
sub
cmp
je
outsb
fcomp
lea
cmp
addl
cmp
mov
pop
adcl
icebp
je
std
addl
cmp
in
cmpsl
aam
adc
test
xchg
js
inc
mov
cmp
test
cmp
lahf
sub
orb
add
movsl
outsl
cltd
inc
mov
xchg
and
cwtl
mov
pop
insb
aaa
cmp
scas
pop
dec
cmp
out
and
addr16
mov
lods
mov
jns
mov
push
inc
pop
push
mov
stos
sbb
aas
sti
sub
aas
mov
add
push
fbstp
mov
xchg
andb
fildl
lods
xchg
daa
cmp
jle
push
ficomps
ljmp
mov
mov
pop
negl
ljmp
nop
bound
jmp
cmp
fsincos
or
mov
mov
ljmp
add
popa
adc
imull
cmp
jne
das
idivb
insb
imul
lahf
push
xchg
enter
sbb
xchg
pop
or
stc
test
fdiv
fnstenv
add
in
add
xchg
xchg
jle
fimuls
adc
fldt
cmpsl
or
mov
fwait
loop
cmc
jmp
sub
cltd
loop
imulb
loop
idivb
addb
pop
jae
pop
sub
adc
push
test
mov
enter
cmc
test
xchg
cmc
xchg
jecxz
cmc
and
sbb
outsb
jp
mov
mov
mov
add
xor
mov
xlat
loope
hlt
mov
loope
hlt
test
shlb
imul
int
push
pop
mov
lahf
pop
add
jns
inc
rolb
aaa
test
bound
pop
or
mov
sub
mov
pop
and
xchg
add
aam
mov
pushf
xchg
cmp
lret
push
ret
sti
mov
push
mov
cs
out
push
imul
loop
arpl
sub
cmp
sub
data16
sbbl
or
adc
dec
mov
jecxz
mov
test
or
mov
jl
cmc
dec
imul
jg
and
pop
pop
sub
sbb
fistpl
scas
dec
in
push
pop
xor
daa
xor
mov
dec
mov
jno
ja
dec
or
dec
cli
sbb
in
dec
cmc
pop
jne
test
aas
repz
cmpl
jp
inc
out
add
stos
add
ficomps
push
inc
fisubs
push
inc
fisubs
inc
fisubs
push
inc
fisubs
dec
inc
fidivs
dec
inc
fisubs
dec
inc
fidivs
push
inc
fisubs
push
inc
fisubrs
push
inc
ficomps
inc
fisubrs
dec
inc
ficoms
jbe
add
adc
dec
push
adc
ficoms
dec
dec
push
adc
ficoms
and
adc
ficoms
or
adc
ficoms
ficoml
adc
ficoms
pop
push
sahf
adc
adc
push
sahf
adc
ficoms
inc
push
sahf
adc
ficoms
sbb
adc
ficoms
movsb
dec
sahf
adc
ficoms
xchg
dec
push
adc
ficoms
xchg
adc
dec
add
adc
ficoms
dec
dec
push
adc
adc
push
push
adc
call
fstl
add
fistl
add
fstl
add
fcoml
add
fstl
add
fcoml
add
fstl
add
stos
sar
enter
sub
mov
call
fstpl
call
mov
pushl
je
jmp
jno
pushl
outsb
sar
fadds
insb
sar
push
imul
lret
dec
dec
sar
and
sar
pop
dec
sar
sbb
push
dec
sar
add
sar
mov
mov
push
add
adc
adc
add
fidivrl
add
adc
adc
adc
add
add
add
or
add
out
jb
mov
add
or
add
in
aas
add
jno
data16
imul
pop
jb
shll
jp
jno
outsl
shlb
ljmp
add
sub
add
adc
insl
fisubrs
add
fimuls
add
fiadds
add
adc
insl
fiadds
fimuls
fisubrs
add
fidivrs
insl
add
cltd
add
fisubs
call
jecxz
dec
xor
or
push
or
sti
add
ficomps
or
cmpsl
inc
fsubrp
pop
inc
ficoms
pop
inc
fisubs
cmpsl
inc
fisubrs
pop
inc
fimuls
inc
fiaddl
push
loop
ficoms
inc
ficomps
inc
ficoms
fistpl
adc
jecxz
adc
fcompl
adc
aad
adc
add
adc
iret
or
loope
add
adc
scas
or
xchg
ret
add
adc
xchg
lret
mov
inc
xchg
out
sub
out
xor
test
cmp
add
mov
mov
add
inc
mov
adc
rol
sar
mov
sar
inc
clc
xor
push
mov
fstl
add
cmp
mov
ret
cmp
jnp
xchg
gs
xor
jbe
inc
enter
adc
add
sub
mov
loope
clc
sbb
adc
or
out
fstl
add
pop
mov
inc
dec
movsl
inc
dec
add
cmpsl
jbe
ficoml
add
sti
hlt
or
adc
sub
cli
stc
loopne
add
or
mov
pop
movsl
lock
and
or
jecxz
add
repz
stc
sti
iret
loopne
out
repz
in
mov
hlt
out
fdiv
cld
movsl
mov
lcall
or
add
sub
add
or
push
aaa
or
add
faddl
out
inc
push
rcrb
ret
add
or
arpl
jbe
addr16
fs
lods
arpl
sbb
add
fiaddl
sbb
out
add
add
jbe
nop
pop
jg
orb
mov
movsb
pop
test
outsb
xchg
jno
xor
xchg
ja
xor
xchg
inc
jle
xchg
pop
outsl
ja
outsl
cli
add
ficomps
and
inc
dec
sub
inc
cli
add
fidivs
cmp
dec
movsb
jo
dec
mov
incl
outsb
mov
cmp
push
imul
fsubp
scas
cmp
jmp
jp
aad
adc
inc
popf
aad
mov
ficoms
pop
and
adc
mov
subb
xchg
outsl
pushf
push
mov
ja
push
movsb
imul
xchg
mov
push
jnp
ret
ficoms
pop
jp
in
inc
jno
jge
or
mov
cmp
loop
mov
scas
inc
cmp
fcmovnbe
push
xchg
lds
sti
in
jg
repnz
lcall
fstl
add
mov
jl
mov
add
aad
adc
jmp
cmpsb
nop
dec
mov
mov
cwtl
and
or
movsb
test
inc
repnz
dec
mov
mov
andl
lcall
enter
add
mov
movsb
mov
push
xor
call
push
sub
loope
jl
mov
adcl
inc
xchg
shrb
cmp
cltd
out
pusha
outsl
scas
mov
xor
aad
addr16
mov
cmpsl
mov
add
ret
mov
xchg
lea
adc
add
sub
sti
sub
pop
in
or
inc
cld
cmp
cmp
aad
mov
shrb
add
ficomps
test
jns
add
and
scas
xchg
inc
push
lea
push
movsb
lea
add
cmp
mov
popf
xor
mov
xchg
inc
mov
add
lea
pop
imul
or
int3
add
add
mov
loopne
xor
stc
shl
aaa
cli
adc
idiv
inc
push
in
in
ss
movsb
push
out
or
in
roll
fbld
call
cmc
int3
pop
out
mov
sbb
aad
ss
add
dec
loope
aad
fdiv
in
scas
mov
or
or
adc
cli
daa
loopne
add
add
jg
ficoms
aam
notb
mul
sbb
xchg
imul
mov
or
aas
movsb
lds
orb
jno
sub
ss
andps
add
outsb
pusha
dec
add
je
notl
cmp
loope
jle
int3
add
and
out
pop
fsubp
pop
inc
sbb
cmovbe
fstl
add
icebp
cli
dec
call
add
xchg
jp
mov
xchg
cmpsb
xorb
mov
pop
es
mov
inc
loopne
xchg
jmp
pusha
push
add
inc
add
divb
add
add
lahf
jno
xchg
jl
stos
outsb
xor
cwtl
mov
sub
cmp
jmp
icebp
pop
jp
icebp
pop
cmp
stc
push
sub
sti
inc
push
in
icebp
and
repz
test
das
adc
xchg
xchg
adc
fwait
cltd
daa
adc
cmpb
cwtl
jg
in
xchg
mov
mov
mov
push
lret
jle
imul
add
fisubs
jae
pop
je
mov
jo
push
xorb
js
xchg
push
testl
pop
sarb
ret
cmp
push
and
ss
sarl
cmpsb
xor
add
jb
shlb
lahf
outsl
add
nop
insb
out
ret
movsl
jnp
mov
jmp
dec
xor
jmp
cmp
in
pop
das
and
sbb
add
adc
adc
add
daa
aaa
sti
lret
sbb
sti
les
adc
in
ret
in
lret
inc
in
mov
repz
ficoms
or
cmp
sub
roll
jnp
stos
cmp
push
mov
xor
movsl
in
dec
cltd
jmp
and
ficoms
add
mov
movsl
push
hlt
mov
jl
lods
stos
pop
push
lods
mov
mov
inc
mov
mov
jmp
loop
xlat
fildl
movsb
stos
rcr
jmp
insl
jae
and
arpl
jbe
daa
sbb
push
inc
cs
pop
inc
jmp
sahf
jnp
sbb
dec
push
jmp
pop
lock
out
out
cmp
loop
sub
pop
cltd
sub
add
clc
and
jmp
imull
aas
outsl
out
daa
ja
add
sbb
loopne
pop
dec
into
lret
cli
inc
in
in
add
adc
add
inc
in
dec
dec
fadd
pop
push
lds
ror
dec
mov
incl
pop
cmp
or
add
out
adc
add
rcrb
cld
fnstenv
test
push
xlat
push
jg
aam
dec
iret
mov
add
push
pop
xchg
mov
fisubs
inc
adc
icebp
jle
sbb
ficoms
ljmp
rcl
xor
testl
lods
mov
add
fiadds
push
clc
daa
pop
push
jecxz
testl
lret
sub
sub
add
mov
mov
ficoms
cmp
xchg
insb
mov
mov
fidivs
aas
filds
mov
xor
mov
sahf
jbe
or
je
xchg
xchg
mov
dec
xchg
xchg
addb
push
cwtl
fisttps
jl
mov
push
pop
xchg
das
inc
xor
cmp
rcrl
pop
out
add
adc
pop
sbb
adc
xchg
js
add
adc
ret
stos
inc
jmp
add
shll
jmp
mov
cwtl
push
inc
mov
xor
enter
add
adc
push
adc
mov
test
mov
xor
add
fistps
cmp
fstl
add
fcoms
sbb
fstl
add
ret
ds
leave
scas
inc
nop
scas
ljmp
mov
mov
inc
lea
in
gs
out
xchg
mov
fstl
add
mulb
lock
lret
push
xor
mov
dec
or
mov
fwait
bound
xlat
ljmp
das
xor
in
add
or
or
orb
add
add
add
ja
add
stc
insb
mov
lea
pop
add
jae
gs
cmpsl
jl
cmpb
insl
test
add
cwtl
lods
cmpsl
insb
pop
mov
jp
mov
add
test
add
or
out
insl
outsb
fimuls
bound
pop
mov
add
imul
jno
pop
mov
imul
inc
lret
xchg
aas
fistl
dec
inc
shlb
push
loope,pt
inc
cmp
sub
dec
xchg
aaa
and
push
lock
push
jecxz
inc
sub
adc
pop
in
adc
add
fsubp
xor
jns
sarl
cmpsl
adc
cmp
shll
add
xchg
mov
movsl
fldenv
cmp
fldcw
jb
mov
lcall
pushf
data16
xchg
pop
jns
adc
lret
xor
pushf
aam
aas
xchg
cmp
xor
add
sub
into
or
add
cli
call
sbb
sub
xchg
pusha
or
adc
scas
xchg
addr16
cmp
decl
fstl
add
and
ljmp
rcl
stos
jmp
call
enter
and
ret
sub
fsubrp
pop
rclb
sub
cli
lock
repz
jecxz
out
ds
sub
fstl
add
repz
add
add
iret
sbb
sahf
fadds
sbb
mov
push
test
pop
pop
inc
cli
cmp
xor
add
adc
add
into
push
push
cld
or
add
adc
add
scas
test
je
in
inc
ja
lods
sbb
mov
in
dec
cmpsb
mov
and
mov
add
add
jns
xor
lods
andb
int3
push
add
aad
xchg
cltd
aaa
adc
add
rcl
inc
adc
add
in
push
add
call
std
testl
xor
incl
fiadds
in
xor
in
jmp
ljmp
stc
add
paddb
daa
or
shll
aam
xor
add
stc
in
add
popf
adc
add
fidivrs
jno
insb
popa
push
cltd
jbe
je
push
out
add
dec
cmp
stos
das
das
iret
xchg
psubusb
xor
cmc
aas
sub
enter
aad
or
aad
sbb
inc
sub
out
sub
repnz
out
add
das
shrl
packssdw
ficoms
arpl
adc
add
lods
nop
dec
cmp
mov
jnp
imul
mov
push
jae
je
push
xchg
push
cmpsb
push
push
jp
dec
jle
adc
mov
popa
mov
sarb
imul
mov
popf
bound
movsl
push
xchg
stos
jbe
popa
mov
inc
je
xchg
push
insw
mov
outsl
add
cmp
ficoms
add
jne
nop
push
sub
cmp
pop
cmp
jbe
push
inc
inc
jno
dec
jns
sub
adc
inc
lds
adc
mov
push
and
je
push
xor
aas
and
xchg
sub
adc
insl
lret
pop
lods
fstl
add
add
dec
pop
cltd
dec
and
pop
lds
adc
sbb
stos
xor
dec
pushf
jne
inc
add
mov
xor
jl
addr16
mov
cmpsl
frstor
add
pop
or
out
sbb
fimuls
add
les
inc
dec
add
enter
mov
repz
mov
daa
loopne,pn
pop
cmp
xlat
fstps
aam
sub
aam
cmp
shll
push
mov
movsl
mov
or
push
mov
add
adc
or
neg
and
in
repz
scas
in
pop
je
cmp
jno
jp
cs
insl
push
imul
jp
lea
jae
pop
jae
ret
dec
test
xchg
dec
push
cmpsb
push
pop
movsl
dec
xchg
insb
xchg
dec
mov
ds
sbb
inc
mov
dec
push
xlat
add
cltd
mov
mov
rcrb
mov
xchg
add
test
mov
jbe
test
mov
js
add
or
xorb
mov
imul
mov
xchg
fprem
insl
push
jg
call
out
loope,pt
pushl
mov
cltd
shlb
add
adc
xor
xlat
call
inc
mov
insl
sub
int3
adc
push
jmp
add
inc
sbb
add
into
sub
jmp
int3
cld
lock
loop
outsb
mov
lock
mov
data16
cmp
push
ficoml
add
ret
mov
repz
cld
adc
shl
int3
xchg
ljmp
xchg
fsincos
cmc
scas
out
in
rcrb
mov
aas
rorl
ds
in
cmpsb
and
in
xchg
sbb
fstl
add
adc
clc
std
xlat
jo
add
push
mov
aaa
adc
add
sub
popf
xorb
add
jge
imul
jb
xchg
mov
jg
adc
add
js
lea
lahf
add
out
add
adc
add
cltd
jae
in
lahf
jnp
mov
add
lahf
pop
imul
jge
jmp
push
push
or
add
mov
xchg
fwait
mulb
add
xchg
sahf
repnz
add
ficoms
imul
xchg
jae
add
fisubrs
xor
or
sub
dec
adc
add
call
lret
aaa
dec
ret
or
add
fdivrp
ljmp
fucom
add
fdivrp
aam
add
leave
data16
fisubrs
std
adc
and
or
add
decl
fdivp
testb
fdiv
psrad
mov
cmp
lcall
imul
add
adc
push
loope
cmp
aad
ss
and
xor
jg
lcall
sub
fimull
adc
jmp
sti
std
cld
push
clc
add
push
repz
fwait
sbb
stc
leave
add
sub
mov
cmp
lret
push
jge
fiadds
jle
lcall
dec
fildll
imul
xchg
dec
pop
mov
fstl
add
dec
or
add
mov
out
cmpsl
lods
scas
test
mov
push
mov
jmp
cmp
jp
imul
push
jnp
and
jno,pn
add
xchg
cltd
rcl
mov
fwait
and
add
mov
add
insb
pop
inc
and
cmp
mov
scas
lahf
xor
scas
mov
pushf
insl
nop
mov
mov
adc
mov
dec
pop
movb
adc
add
lsl
hlt
jmp
lock
or
add
and
sldt
cmpb
test
add
popf
xor
add
jge
faddl
push
add
sub
jae
push
add
add
imul
or
add
mov
fdivrp
mov
cmp
ds
or
and
test
jns
imul
cmp
cs
fisubs
mov
add
fsubrl
sub
scas
xor
mov
ficomps
sub
test
dec
inc
xor
call
adc
add
fidivs
cli
out
nop
xchg
add
icebp
adc
adc
add
adc
ss
sbb
add
adc
add
or
dec
xor
push
in
shrb
loope
out
sbb
push
out
pop
adc
dec
aad
add
aas
adc
add
into
adc
lcall
movsb
inc
in
stc
inc
mov
scas
inc
mov
cmp
add
inc
mov
jp
dec
fstps
insb
int3
bound
mov
cwtl
andb
fdivs
lds
add
add
push
pop
sbb
outsb
clc
cld
sbb
fstl
add
ds
add
adc
scas
adc
add
push
xor
jmp
sbb
aam
adc
jl
mov
adcl
pop
enter
repnz
push
in
fcoms
add
fisttpll
fstl
add
test
push
add
mov
xorb
add
add
add
inc
add
inc
add
add
bound
add
dec
inc
add
dec
inc
add
dec
inc
add
add
xchg
add
xchg
add
ja
add
xor
enter
insl
dec
inc
add
dec
inc
add
dec
inc
add
adc
and
xor
movlps
pop
adc
add
adc
adc
xor
das
adc
pop
adc
add
adc
add
fimuls
lods
inc
fidivrs
inc
sti
inc
ficoms
lods
inc
ficoms
imul
adc
fidivrs
push
jae
in
popa
jb
in
add
ds
jae
shlb
fbstp
fidivrs
je
mov
mov
je
lret
scas
inc
dec
mov
imul
cmpsl
test
xor
add
mov
gs
adc
jae
outsb
jge
dec
imul
add
adc
push
xor
cmp
cmp
jmp
push
adc
pushl
pop
or
jno
outsl
aam
ficoms
xchg
call
or
add
stc
or
adc
pop
xchg
dec
mov
push
sbbl
add
adc
ja
adc
or
pop
lea
and
inc
mov
xor
gs
rclb
sahf
in
push
mov
xchg
cld
addr16
adc
adc
orb
pop
inc
lds
rcll
add
adc
mov
xchg
cld
lock
movups
scas
test
subb
dec
movsb
rcll
data16
mov
orl
sub
rcll
inc
in
mov
jecxz
adc
pop
ret
add
inc
add
aaa
inc
add
pop
push
and
sldt
cmpsl
pop
push
push
out
add
or
add
add
aas
add
in
add
aas
add
fistpll
add
jecxz
add
out
add
out
add
jmp
aas
add
jmp
add
inc
add
out
add
call
inc
add
jmp
inc
add
inc
add
mov
inc
inc
xchg
mov
dec
dec
add
test
push
pop
popa
jl
push
imul
jno
daa
js
xor
jl
xor
xor
in
lret
xor
sub
testl
add
adc
and
in
jo
repnz
je
mul
js
ret
and
adc
sbb
inc
inc
mov
mov
push
push
add
adc
daa
cli
xor
daa
mov
mov
mov
scas
pop
jle
mov
jae
xchg
push
outsb
pop
jmp
add
adc
add
adc
add
adc
popa
xor
imul
dec
jo
jnp
imul
pop
add
adc
ficoms
add
add
adc
add
adc
add
sti
adc
add
adc
add
adc
add
adc
mov
fstl
add
dec
add
fnstsw
jge
adc
stos
fnsave
mov
jae
jnp
jns
cmp
push
add
loop
add
dec
add
jno
push
fisubrl
jmp
fidivl
aas
loop
add
add
je
add
aas
add
fidivl
add
fstl
or
frstor
jmp
fisubl
add
loop
add
fisubrl
add
fstl
add
fs
add
add
adc
add
adc
add
add
inc
push
pop
dec
inc
adc
add
inc
add
xchg
inc
add
cmp
aad
inc
add
pop
cmp
lock
mov
inc
add
inc
add
cmp
leave
cmp
mov
adc
add
and
loop
inc
add
pushf
add
add
and
xchg
sub
fidivs
arpl
jb
stos
jae
fisubrs
imul
stc
add
add
scas
outsb
inc
mov
jb
cwtl
pop
add
scas
outsb
inc
insb
mov
jnp
jne
dec
sub
cmp
add
jbe
daa
push
bound
dec
arpl
push
sub
fs
sub
xor
pop
jb
add
decl
push
je
jmp
pusha
jb
adc
ficoms
movsl
pop
add
dec
les
je
dec
mov
adc
add
adc
add
adc
mov
jp
adcl
lea
mov
push
add
adc
inc
adc
dec
adc
add
adc
add
adc
add
adc
adc
add
adc
add
adc
add
lock
add
adc
psrad
std
mov
ja
fcmovu
pop
add
fstl
add
rcr
add
fstl
xchg
xchg
imul
xchg
fnstsw
jmp
sbbl
sbb
pop
aad
std
lahf
aam
sti
cld
mov
inc
dec
pop
jo
add
xor
ss
xor
inc
insb
cs
cmp
jmp
push
pop
jo
shlb
push
icebp
xor
shrb
insb
fisubrl
arpl
sub
add
mov
add
outsb
outsl
sub
outsl
adc
push
insl
je
aaa
adc
add
adc
pop
adc
add
jno
inc
pop
insb
gs
addl
imul
aas
insl
outsb
arpl
js
sldt
adc
je
push
jns
dec
add
jb
jo
imul
outsl
outsb
fs
add
enter
loopne
bound
ficomps
add
fidivs
add
ficoms
add
fimuls
add
fiadds
sbb
inc
fdivp
jbe
fdivp
jbe
fsubp
sbb
divb
add
loop
inc
ficoms
inc
fisubs
add
lods
add
fidivrs
add
jp
dec
fiadds
add
ficomps
add
fiadds
add
fisubs
add
pop
add
ficoms
jle
fsubp
sbb
divb
ficoms
ljmp
adc
sbb
adc
ja
adc
and
pop
adc
add
ficoml
or
add
adc
add
adc
add
adc
add
adc
add
xchg
jo
jmp
add
adc
add
adc
inc
adc
adc
cmp
ds
adc
out
adc
add
adc
or
and
cmc
add
push
add
loop
add
adc
and
lods
sbb
or
fstl
add
adc
and
fstl
add
orl
cmpsb
dec
add
jne
add
fstl
add
fstl
add
dec
push
mov
dec
add
xchg
push
inc
lods
fstl
add
xchg
adc
pushf
incb
sub
sub
fstl
add
inc
inc
and
adc
add
push
push
mov
add
cli
pop
inc
inc
rcrl
add
lds
dec
mov
add
rclb
dec
mov
add
les
push
add
add
xchg
inc
dec
push
xchg
inc
jg
add
ja
dec
push
sbbl
push
inc
pop
adc
add
inc
dec
add
adc
add
push
inc
dec
pop
adc
add
pop
notl
add
inc
inc
inc
inc
adcb
add
inc
push
dec
clc
push
push
add
sub
sub
push
push
fisubs
inc
inc
sbb
add
fidivs
inc
add
or
lock
je
fbld
fcompp
je
out
pop
arpl
pop
bound
in
outsl
shr
add
lret
add
int3
pusha
je
sahf
outsb
mov
movsl
je
mov
push
outsb
jge
imul
fidivrs
insb
mov
fimuls
gs
popa
insb
inc
adc
ficoms
dec
pusha
xor
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
mov
add
adc
add
adc
std
ljmp
call
or
add
adc
ficoms
roll
adc
push
ficoms
testb
out
cmp
adc
add
xchg
adcl
add
adc
add
adc
scas
and
jnp
jo
dec
loop
add
sbb
push
imul
dec
daa
bound
add
aas
pop
add
sbb
gs
or
add
dec
add
ficoms
sahf
cli
dec
add
mov
add
adc
add
push
adc
shl
add
in
adc
shr
adc
shr
adc
int
data16
adc
xchg
adc
mov
add
fists
add
add
push
add
cmc
push
add
mov
fimull
or
fimull
or
jb
pop
pop
add
icebp
outsb
jae
fcoml
add
jne
imul
add
ja
add
mov
inc
push
push
int
std
xor
xchg
movl
mov
enter
push
cmp
add
push
add
aas
push
je
jae
mov
ud0
icebp
in
pop
sub
orl
add
jbe
je
ljmp
shll
mov
lret
into
sub
sub
ja
push
mov
adc
mov
jns
roll
push
jno
cmp
pop
addl
adc
sarl
jns
mov
dec
stos
cld
push
imul
mov
pop
and
push
or
jns,pt
or
jp
add
dec
into
pop
adc
mov
jbe
fnstcw
sub
fsincos
stos
rcll
jp
fstl
shrl
pop
fsubrl
jmp
xlat
cmp
ja
out
xor
mov
adc
adc
jp
aaa
dec
cmpsl
iret
lock
xchg
pop
adc
pop
sbb
mov
sti
push
push
push
js
xchg
popa
push
bound
imul
js
sar
stos
add
out
pop
push
sti
jno
js
clc
mov
xchg
incw
enter
fstl
add
sahf
push
out
loope
push
vunpcklps
mov
fiaddl
insb
pop
psubusw
das
jmp
adc
loop
jl
fisubl
cmpsl
pop
imul
xor
ret
test
jb
xchg
out
adc
xor
sub
jne
pop
mov
add
out
ljmp
inc
push
push
dec
bound
in
pop
leave
cmp
bound
mov
aam
ror
pop
hlt
adc
mov
pop
pop
inc
xor
push
cmp
out
mov
shlb
ss
push
mov
push
dec
add
adc
out
dec
into
dec
cld
cmp
popa
xor
dec
push
pop
clc
add
dec
xchg
inc
fsubrp
push
pushl
ljmp
shr
ljmp
bound
pop
xor
cmp
lods
idivb
fwait
or
fisttpll
push
je
out
out
call
pop
adc
mov
std
sbb
out
add
lret
subl
add
add
movsl
in
fidivrs
mov
mov
jg
inc
setle
mov
cmp
jmp
add
dec
inc
fidivs
mov
push
jmp
add
mov
setle
dec
and
push
jmp
add
or
nopl
mov
push
jmp
add
jge
lds
test
push
adc
mov
cmp
scas
mov
push
adc
jge
jmp
add
addl
jge
inc
jmp
fnsave
mov
mov
push
push
test
lcall
dec
std
icebp
inc
jmp
add
mov
or
loopne
add
jmp
jmp
loop
pinsrw
add
inc
fsts
sub
mov
int3
sbb
push
add
in
inc
jmp
loop
dec
test
add
movsb
insb
in
aaa
lods
sbb
stos
push
add
push
mov
inc
aaa
lods
scas
adc
inc
adc
mov
push
lods
jecxz
pop
lods
mov
inc
adc
mov
and
jecxz
lods
push
ja
mov
mov
fs
mov
push
adc
stos
dec
add
push
adc
inc
ja
pop
adc
pop
dec
add
fiadds
out
jmp
sub
push
test
jg
adc
xchg
popf
jmp
add
aas
inc
cmovo
xchg
popf
jmp
add
aas
lret
fiadds
in
jmp
add
jg
or
in
ljmp
outsb
ret
inc
add
or
in
ljmp
mov
aas
adc
in
dec
jmp
add
loopne
inc
fidivs
dec
add
dec
jmp
add
inc
inc
fidivs
mov
dec
jmp
add
mov
adc
dec
jmp
add
ret
mov
ljmp
add
into
cltd
dec
gs
adc
adc
sbb
dec
mov
push
jmp
inc
lcall
loop
mov
sahf
fwait
push
daa
sbb
push
dec
pop
jmp
jmp
adc
push
jg
out
loop
aad
xor
inc
sahf
adc
inc
pusha
incb
mov
cld
gs
jmp
fsubl
inc
jmp
sahf
adc
aam
ljmp
push
adc
inc
adc
add
testl
or
aaa
or
add
adc
aaa
cmp
inc
popa
or
mov
hlt
je
mov
inc
cmp
lea
icebp
dec
push
out
jae
fldl
pushl
out
adc
add
dec
add
lahf
mov
add
cli
cmc
call
call
jl
pop
leave
lds
push
insb
loopne
in
jmp
push
xor
adc
ficoms
xchg
lock
std
cmp
push
dec
push
sbbb
mov
add
fmulp
ficoml
push
mov
sarl
and
push
add
xor
jecxz
outsb
int3
inc
add
arpl
call
in
stc
add
sbb
add
xchg
test
sub
fisttpl
mov
loope
out
inc
add
push
push
push
jge
dec
test
outsb
push
int3
orb
mov
adc
lds
loope
testb
mov
inc
hlt
fcoml
jmp
sti
add
push
jmp
xor
jbe
sbb
or
mov
aad
sub
rcrb
imul
pop
add
and
ficomps
in
mov
insb
inc
es
ret
or
imul
rclb
mov
popf
mov
insl
add
int
fcmovnbe
out
les
divb
xchg
divl
mov
or
push
cmp
pusha
les
add
or
cmp
int
je
mov
sbb
pusha
mov
jle
cld
jmp
shll
pop
into
cmp
sbb
int
in
sub
inc
pop
fisttpll
add
add
adc
jb
jmp
loopne
xor
fldt
adc
xor
jmp
mov
adc
dec
aad
leave
hlt
push
mov
push
xchg
arpl
cmp
dec
notl
adc
or
jb
pop
sbb
call
or
jb
adc
push
int
std
sar
aam
add
rol
ret
les
cld
add
push
dec
mov
in
rclb
fdivl
negb
pushf
dec
cld
cld
jae
sbb
push
push
ljmp
gs
inc
notl
test
pop
adc
lea
jns
dec
ret
sub
fisubrs
push
mov
mov
add
movsb
xor
adc
add
or
push
adc
jmp
sub
je
shl
daa
fdivrl
aam
stos
int
aas
fisubs
push
std
xlat
ljmp
push
add
imul
xchg
fnsave
cli
dec
sahf
mov
add
pop
decb
jmp
cli
push
or
adc
fisubs
mov
popf
and
lds
push
add
xchg
stos
divl
sbb
fstp
adc
add
ficoms
aam
adc
push
adc
fisttpll
jo
dec
lret
sti
jmp
push
jmp
rclb
ss
roll
push
jmp
cmp
les
add
outsl
inc
or
add
add
xchg
xchg
jmp
rcll
push
sub
lea
lret
shlb
add
leave
imul
push
leave
adc
nop
or
jb
sbb
je
fs
mov
je
int
and
pop
lea
pop
mov
arpl
test
rol
adc
jmp
add
pusha
push
mov
mov
cld
or
inc
jmp
and
jae
insb
and
inc
push
call
mov
cwtl
inc
in
push
lock
jb
fsubs
jmp
std
jne
in
or
dec
add
cwtl
inc
lock
rorb
lcall
test
test
pusha
add
jge
push
add
jb
in
push
addr16
push
das
adc
pop
test
mov
stos
dec
adc
adc
jne
out
or
pop
or
out
fsubl
pusha
or
fisubs
sbb
ja
mov
idivl
ret
das
mov
aaa
call
push
xor
fisttpl
popf
or
jmp
out
aas
fidivs
sti
mov
xchg
mov
mov
mov
xlat
decb
mov
cmp
arpl
popa
or
or
push
add
push
add
jmp
mov
fidivrs
insb
sbb
pop
xor
mov
insb
ret
call
adc
lds
fcmovb
sbb
xor
xorb
fisubrl
enter
dec
loope
jb
test
xor
adc
loope
rcr
fmuls
fptan
sbb
lds
lret
movsl
dec
out
shr
out
ljmp
adc
add
xor
xor
lcall
mov
mov
pushf
mov
push
add
mov
pop
push
jge
test
jmp
or
mov
ffree
adc
rolb
add
fnstsw
jmp
push
cltd
xchg
andl
dec
in
ss
dec
mov
push
xchg
sbb
mov
xchg
dec
scas
sbb
sub
adc
jmp
add
std
idivl
mov
lea
add
inc
lret
adc
xor
vandnps
lahf
jb
out
add
add
xchg
or
mov
xor
inc
mov
cs
jb
adc
pop
cmc
vandps
jg
jg
add
aam
push
lea
jmp
mov
incl
pusha
aam
pop
sar
hlt
das
faddl
int3
jle
inc
mov
lea
mov
inc
gs
xchg
push
hlt
jecxz
pop
scas
add
fdivp
inc
in
fsubrp
inc
hlt
pmulhuw
push
insb
lret
pop
mov
adc
mov
fs
cmp
pop
sbb
inc
pop
jne
dec
push
insl
mov
incl
mov
aad
fidivrs
inc
in
mov
rclb
mov
xchg
xlat
jne
sub
into
stc
add
fists
jmp
jmp
les
push
jo
xchg
inc
mov
test
sub
ficoms
insl
insl
ficoms
jmp
sbb
add
cltd
out
fidivs
aad
add
shll
mov
out
lea
les
pshufw
mov
mov
adc
fs
mov
arpl
pop
sub
pop
inc
mov
aad
add
and
shrb
sbb
jb
cmp
sub
xchg
jp
rolb
dec
lock
push
ret
mov
cli
adc
iret
not
jno
gs
cmp
stos
and
data16
inc
ret
insl
sbb
bound
sbb
les
je
push
or
call
les
test
mov
cltd
out
shl
jne
gs
ds
out
lea
into
xchg
ret
inc
add
mov
pop
js
mov
std
data16
mov
mov
addl
mov
cwtl
inc
call
push
cltd
jae
and
test
clc
inc
mov
pop
push
mov
push
int3
push
push
fisttpll
jb
jae
mov
or
shrb
push
sub
add
psllw
jne
pop
mov
inc
add
loop
push
ret
leave
inc
subb
je
fists
fidivs
jg
scas
sbb
je
in
add
xchg
add
je
ds
lock
add
gs
lea
lea
push
in
jg
pop
add
out
or
cltd
rorl
xor
fdivs
sbbb
or
sbbl
cld
jg
mov
sar
test
ljmp
das
adc
xchg
fucomp
jle
mov
imul
pushf
xlat
imul
inc
ds
push
in
push
xchg
adc
add
sub
ficoms
jo
pop
icebp
out
fidivrs
jmp
pop
movsb
mov
mov
inc
inc
incb
xor
inc
mov
adc
add
xchg
lock
adc
fisttpll
mov
adc
repnz
push
push
xor
xor
test
or
inc
and
add
lock
aam
and
pop
mov
pop
mov
fisubrl
clc
mov
sbb
dec
push
idivl
ljmp
pop
add
hlt
flds
rclb
add
xchg
jmp
stos
mov
jb
pop
add
fisttpll
or
fstl
push
jo
mov
push
verw
testb
mov
clc
push
loopne
mov
add
mov
clc
cmp
add
xchg
add
ja
dec
clc
mov
loop
test
test
adc
mov
mov
push
aam
push
add
push
adc
cmp
inc
cmp
decb
pop
push
inc
cmpsl
adc
push
cli
insl
xchg
xchg
rorb
dec
sahf
inc
cmp
dec
shl
xor
adc
mov
insb
rolb
fisubs
testb
cwtl
iret
je
inc
mov
mov
push
les
fnstcw
in
push
sahf
cmpsl
mov
cmpsl
add
pop
testb
test
mov
add
and
aaa
andl
add
pushl
xor
fstps
fiaddl
xchg
lret
push
xchg
pop
add
cmpsl
add
repz
aas
fimuls
cmp
fidivrs
adc
hlt
call
inc
add
jmp
ficoms
jl
adc
out
add
or
jo
jb
jmp
dec
imul
mov
sarb
cs
pop
rcll
and
push
stc
adc
nop
add
and
addb
inc
jmp
push
ficoms
jb
lods
adc
add
push
cmpb
scas
sti
pop
shll
push
dec
or
cwtl
and
sti
sbb
xchg
push
call
aaa
mov
out
ficoml
add
xor
inc
jmp
lahf
mov
stos
xchg
jb
and
out
jmp
xor
mov
sbb
mov
inc
jle
xchg
cmp
fstl
push
pusha
mov
and
pop
jp
call
arpl
push
push
mov
cmp
testl
mov
inc
or
jb
pop
push
push
incl
xchg
mov
jo
push
lock
bound
mov
lds
push
nop
insb
sbb
aam
push
push
mov
ret
outsb
push
notl
les
mov
decl
push
add
inc
clc
mov
cmp
pop
xchg
jmp
aaa
je
insb
rorl
push
fbld
ret
jae
es
xchg
lret
adc
aad
add
push
pushf
out
fldl
add
aaa
add
cmpsl
ja
cmpsb
es
mov
ds
clc
aad
sub
fisubs
add
push
in
jno
mov
cmp
js
lock
ret
sub
adc
mov
cmpsl
add
in
jmp
add
dec
sbb
cmpsl
add
popa
pop
add
pop
adc
push
add
popa
jb
stc
inc
in
add
pop
scas
mov
lods
cli
insl
sub
adc
push
adc
xchg
sub
mov
xchg
mov
in
jae
adc
push
sub
adc
push
jbe
mov
or
adc
add
push
jmp
add
sbb
divb
adc
cli
scas
mov
pop
sbb
psubw
sahf
adc
xor
xchg
or
jge
jmp
add
test
mov
add
adc
mov
cltd
repz
fstl
call
mov
aad
add
sub
lret
sti
sbb
adc
jmp
pop
das
add
frstor
xchg
xchg
push
call
outsl
mov
add
fimuls
outsl
rclb
add
enter
fstl
push
jo
aaa
add
fisttpll
add
pusha
sbbl
idiv
mov
pop
mov
inc
and
adc
sbb
or
add
add
movups
adc
add
push
mov
mov
add
mov
les
inc
out
cmp
in
add
push
mov
out
add
or
je
xor
add
add
lahf
pop
adc
jb
xor
add
fisubs
push
fbld
add
push
daa
daa
add
cmpsl
jge
jb
xor
lret
mov
aas
fisubrs
fbld
add
adc
add
pushl
add
pop
fs
loope
jne
fiadds
xor
test
lret
sbb
fisubrs
jae
fildll
fsubl
xchg
add
fisttpl
push
test
test
sti
clc
out
out
add
dec
add
adc
or
adc
xor
dec
mov
dec
add
inc
fimuls
jmp
dec
push
pop
rcl
cmp
ficoms
test
xchg
cmp
call
out
adc
sub
pusha
push
icebp
adc
mov
notb
push
add
mov
sub
adc
lret
inc
fmulp
sub
ficoms
push
add
fildl
dec
pushl
pop
test
bound
cmp
push
push
negl
xchg
push
das
sahf
mov
imul
mov
sub
repz
stc
mov
jg
call
xor
push
call
dec
xchg
insb
bound
inc
rcl
or
push
adc
sbb
jae
sub
sbb
push
fidivrs
push
sub
pop
fstp
jae
add
cmp
mov
out
sub
les
add
incb
mov
inc
mov
cmp
cmc
sub
js
je
insb
leave
out
mov
std
pushl
mov
pop
imul
mov
inc
fldenv
push
jno
out
or
pop
lock
pop
inc
into
out
ja
add
cld
adc
inc
mov
jne
fisubrs
faddl
xchg
add
cmp
fcoml
repz
cs
mov
cmpsl
add
gs
add
pop
fwait
inc
dec
pop
or
rorb
je
ret
je
and
add
aam
jae
ret
je
dec
lcall
icebp
dec
sbb
cli
mov
loop
mov
test
cmpsl
add
xchg
iret
ret
dec
xchg
cmp
dec
fsubl
add
fiadds
xor
pop
sbb
pop
movsb
imul
mov
mov
add
adc
sub
xchg
lods
push
mov
ret
pop
shl
push
add
in
mov
es
sub
rcll
aam
pop
sub
add
jb
dec
mov
pcmpgtw
mov
test
adc
fcmovnu
adc
add
and
std
scas
xlat
jecxz
pop
and
shlb
in
pushf
pop
icebp
add
fwait
inc
int
dec
leave
stos
aad
push
jb
xchg
jmp
xchg
inc
mov
add
push
and
lods
mov
test
dec
mov
jmp
pop
out
sbb
loopne
push
and
jmp
fstl
je
pop
ljmp
push
mov
cmp
xchg
jl
add
and
xchg
fldenv
addr16
cld
push
or
ja
movb
movb
call
mov
outsb
out
lods
adc
mov
mov
sahf
inc
enter
call
jp
jbe
mov
das
adc
addb
decb
adc
jp
incl
pop
cwtl
cmp
mov
inc
add
aam
cltd
xor
js
mov
mov
jnp
push
mov
add
push
jge
mov
mov
mov
jp
or
pop
hlt
mov
int3
out
pushf
add
bound
andnps
inc
jne
add
jb
in
jg
sbb
mov
call
add
mov
xchg
add
mov
push
int3
ja
andb
je
xchg
jmp
pop
aam
call
xor
std
mov
mov
jo
lods
repz
out
push
jmp
mov
cs
pop
shlb
push
mov
sbb
fiadds
inc
push
mov
jo
add
test
fcoml
pusha
inc
ficompl
call
add
and
sahf
orb
jo
add
xor
xchg
ficoms
jmp
mov
dec
cmp
stos
fcmovnb
out
push
jmp
xchg
adc
sub
adc
outsb
jmp
xor
add
ficompl
add
xor
pop
push
clc
and
add
fstpl
mov
ficoml
add
movsb
mov
fsubrl
lea
fiaddl
mov
sbb
adc
xchg
xchg
sbb
cld
rcll
xor
dec
imul
cmc
fbld
rcl
pushf
inc
xchg
sub
hlt
stc
add
mov
inc
clc
inc
aam
lea
cmp
add
mov
add
imull
clc
add
repz
or
adc
jnp
add
lea
aas
xor
push
lcall
stc
add
das
ja
add
mov
pushl
insb
jae
js
rclb
adc
dec
fstl
jl
out
pushf
adc
test
sub
and
fs
aas
call
add
aaa
add
jge
add
push
cmp
mov
push
sbb
add
mov
jge
adcl
mov
jno
mov
inc
push
clc
add
add
loope
add
dec
fstpt
int3
testl
je
cs
or
ss
inc
pushl
mov
add
call
mov
add
jg
shr
inc
rclb
mov
mov
ficoms
lcall
test
xor
push
adc
dec
add
and
jmp
inc
ficomps
jmp
cmpb
adc
sub
mov
jmp
jl
test
out
mov
adc
int
imul
mov
je
ret
cmpb
mov
mov
hlt
stos
jmp
mov
add
push
push
push
and
repz
mov
ret
in
add
add
jmp
popf
xchg
ret
in
bound
pop
push
and
or
mov
orl
adc
jmp
or
add
fldl
and
xor
sub
cmpsl
aad
iret
jbe
add
cltd
andb
add
fisttpll
call
andb
add
add
xchg
jle
mov
lea
xchg
inc
call
or
xchg
add
dec
xchg
test
pop
std
lcall
call
test
dec
nop
inc
aaa
lcall
xor
mov
call
test
or
jo
add
add
add
add
lods
jb
lea
add
fimuls
or
fisubs
adc
stos
inc
add
mov
add
mov
or
sbb
add
lahf
push
push
xchg
mov
xchg
xor
jmp
mov
fbstp
add
faddp
jle
fbstp
add
fiadds
int3
je
add
jae
out
shl
imul
cli
movl
adc
gs
adc
cld
sbb
in
mov
dec
lds
pop
and
mov
loope
movsb
cltd
pushf
sbb
jmp
jg
psubsw
pop
dec
or
or
inc
testl
ret
call
filds
cmc
sbb
cmpsl
test
xchg
call
loopne
movsb
add
adc
sbb
add
cmp
ljmp
cltd
xchg
adc
cmp
xchg
jmp
dec
movsl
jmp
jne
call
scas
aad
and
stc
mov
jmp
pop
fs
fs
push
add
and
adc
lock
fstl
push
bound
mov
ljmp
mov
call
fists
test
sub
sbb
push
mov
adc
push
mov
repz
jp
pop
adc
inc
and
add
sbb
incl
push
adc
add
or
test
pop
std
ljmp
hlt
and
sub
out
sbb
push
pop
out
dec
je
mov
inc
call
mov
cwtl
andb
add
inc
pop
aam
adc
mov
inc
test
cwtl
fidivrs
stos
xor
jmp
cmovo
mov
decb
mov
and
add
push
decl
sbb
and
addl
ljmp
mov
repz
inc
inc
and
inc
or
pop
add
jge
jmp
bound
dec
sub
add
fidivs
inc
add
das
xor
mov
add
adc
or
inc
mov
dec
bound
clc
adc
pop
test
xor
lea
cmp
shr
sbb
add
xchg
int
adc
push
pop
into
sbb
pop
mov
add
adc
sub
sbb
mov
jmp
clc
pushf
adc
add
adc
mov
cmp
fidivrs
push
clc
pushf
sbb
push
popa
sbb
int
dec
call
push
into
je
cmp
and
loop
or
inc
pop
sbb
pop
or
idivb
push
test
lds
mov
sub
inc
lea
cmpsb
in
pop
jbe
xchg
mov
call
add
fcmovnb
fsub
jecxz
inc
out
rcr
adc
sub
xchg
mov
in
xor
lea
mov
pop
add
mov
cwtl
add
push
orl
out
fcoms
mov
call
mov
and
mull
mov
push
add
xchg
jb
and
add
mov
add
adc
movsl
popa
std
prefetcht2
sub
adc
punpckhbw
ss
andb
add
inc
nop
andb
add
ja
lds
mov
push
add
call
add
or
ljmp
and
jns
sbb
jmp
xchg
test
mov
inc
add
aaa
and
rcr
adc
test
push
jmp
adc
fidivs
dec
and
out
push
pop
push
mov
mov
mov
jmp
stos
add
sub
scas
je
inc
aaa
or
dec
pop
mov
sbb
test
cmpsl
add
and
stc
add
adc
add
call
add
bound
mov
add
adc
loop
testb
and
add
xchg
test
bound
and
stc
inc
mov
dec
add
add
sbb
aam
add
cmp
sbb
lods
cmp
jle
hlt
call
cwtl
ret
add
or
inc
add
cwtl
add
imul
sub
verw
sub
popf
jmp
call
dec
ds
pop
pop
jge
lret
out
sahf
outsl
in
dec
sbb
sbb
fstl
in
cmpsb
jae
rcl
sbb
popf
inc
cld
dec
add
or
stos
push
add
push
dec
sbb
adc
fstp
enter
or
pop
aam
inc
mov
pushl
imul
xchg
inc
and
imul
inc
push
push
js
dec
xchg
call
mov
mov
pop
jns
mov
push
or
pop
adc
jo
xor
adc
inc
add
iret
push
mov
adc
add
adc
inc
jecxz
pushl
inc
call
mov
ret
inc
mov
insb
push
add
rcrl
je
mov
add
push
inc
add
es
mov
scas
xchg
fistps
cmp
test
orb
icebp
mov
popf
pop
jns
sub
fisubs
cld
scas
lcall
add
popl
dec
mov
inc
add
sub
push
hlt
scas
test
faddl
xor
pusha
roll
pop
inc
and
test
mov
push
inc
jo
add
fwait
sbb
cmpsl
add
fiadds
jmp
idivl
lret
pop
adc
and
jmp
add
fisubrs
cltd
testl
sti
xor
fcmovu
sub
gs
stc
jnp
pusha
out
lahf
or
imul
test
inc
cld
adc
and
ss
ficoms
or
in
int3
test
ficoms
insl
ret
insl
pushl
loop
inc
vmovss
std
out
cltd
and
lds
test
pop
and
jmp
jne
dec
call
imul
or
das
aad
call
jb
or
negl
add
out
pop
sub
adc
aaa
pushf
adc
add
inc
and
mov
add
mov
test
sahf
hlt
add
inc
mov
jmp
fisttpll
mov
add
out
mov
fnstsw
ret
ret
into
into
js
inc
mov
inc
jno
andl
aas
push
mov
pushf
mov
mov
jae
mov
pop
dec
dec
mov
push
pushf
roll
imul
and
movsb
jae
inc
ja
push
inc
movl
movl
jmp
add
and
pop
ljmp
imul
test
and
adc
fildll
or
je
add
and
jae
stc
fwait
test
stos
add
xor
jmp
pop
push
fsubs
incl
imul
call
add
test
ds
sub
aas
and
sub
sub
sahf
popl
lcall
dec
imul
sbb
sub
and
sar
inc
ficoms
jmp
add
vandps
add
addl
jmp
dec
fcoml
jmp
fwait
bound
test
adc
mov
xchg
mov
fsubrl
ja
adc
or
psubsw
call
add
test
inc
ficoms
rorb
cld
mov
mov
fsubrl
nop
ret
out
jmp
adc
mov
dec
add
daa
pusha
mov
in
and
add
and
sahf
push
and
adc
push
and
fcmove
inc
add
mov
test
adc
jb
in
sbb
sbb
bound
fmul
ljmp
aas
jmp
fldl
mov
rcll
xchg
mov
jge
add
add
inc
and
or
push
out
add
xchg
push
call
or
lds
adc
push
dec
jns
in
pop
or
or
test
pushf
add
adc
test
imul
imul
push
cld
addb
adc
push
add
ljmp
rolb
add
xor
ljmp
imul
int
add
sbb
push
lea
mov
add
test
movsl
decb
xchg
int
fsubrl
push
push
dec
fcomps
adc
and
mov
push
lea
dec
push
sbb
add
add
ja
and
movsl
cs
push
bound
fsubrl
ja
jle
lcall
mov
je
jmp
pminub
aas
cld
int3
test
repnz
lcall
aas
out
mov
divl
insb
aas
rolb
aas
sbb
aas
loop
scas
aas
fcoms
xchg
dec
rorb
jmp
fldl
aas
stos
inc
jle
test
push
xchg
mov
cmc
mov
add
dec
movsl
addr16
orl
lahf
fwait
sub
add
jl
icebp
test
addl
dec
adc
outsl
aaa
ds
ljmp
test
mov
adc
jmp
scas
inc
lea
mov
fstl
test
add
adc
push
mov
fstps
xchg
sarl
stos
lock
xor
nop
xchg
jmp
push
add
fstl
add
xchg
pop
mov
jmp
dec
in
adc
test
push
fsubrp
fstl
data16
lods
je
int
jmp
add
adc
inc
insl
std
jmp
inc
push
xchg
rol
push
lods
outsb
xchg
or
pop
or
scas
add
or
jge
pop
jne
sub
add
pushf
lds
xchg
inc
pop
inc
mov
insb
and
inc
pop
pop
add
pop
inc
mov
mov
inc
outsl
lahf
xor
xchg
aam
mov
or
add
jae
aas
and
mov
push
push
mov
mov
mov
jns
mov
fidivrs
and
jno
xor
jle
add
enter
and
push
pop
pop
add
fsubp
cli
pop
js
or
hlt
sbb
mov
stos
stc
fidivrs
mov
xor
imulb
mov
xchg
fidivrs
pop
mov
xchg
fidivrs
mov
in
xchg
test
mov
jns
ret
fildl
add
adc
pop
sbb
adc
cltd
jecxz
nop
pop
and
mov
es
shl
rcl
call
leave
mov
adc
add
bound
push
dec
stos
sbb
pop
jg
fcompl
cmpsb
fsubr
pop
ret
fwait
sub
adc
push
push
cmpsb
lret
in
xor
imul
sub
fdivr
cmp
mov
or
insb
dec
pop
inc
pop
mov
cltd
push
add
add
das
fwait
jl
or
add
dec
adc
call
add
in
in
cltd
adc
mov
aad
adc
add
add
add
clc
add
les
dec
jne
into
add
stos
js
lock
mov
loope
jmp
aam
sbb
mov
fstl
xchg
jne
or
fldl
mov
fsts
movsb
push
cmp
cmp
add
mov
fsubs
xlat
add
mov
les
xchg
mov
btr
fnstenv
add
testb
test
add
jmp
mov
fwait
inc
lods
stos
xlat
scas
push
mov
dec
push
sub
test
call
adc
test
lods
std
jmp
inc
call
inc
push
or
add
lods
std
pop
ficomps
test
xchg
incb
addr16
imul
lahf
incb
pop
call
dec
call
pop
add
add
mov
sub
sub
scas
add
xchg
gs
fsqrt
xchg
jo
inc
or
pop
loop
add
imul
es
je
dec
lods
mov
stos
popf
adc
or
add
lods
subb
popf
andb
incb
test
adc
mov
xchg
cld
popf
mov
jo
rorl
aam
push
adc
sahf
rcrb
insb
mov
mov
add
xchg
sub
fists
sub
incb
xchg
test
pusha
pop
jmp
lods
push
xchg
fcompl
out
js
pop
add
mov
xchg
inc
add
adc
loope
xchg
mov
popf
mov
add
repnz
and
mov
add
mov
adc
push
adc
imul
add
ret
xchg
test
inc
mov
xor
adc
sahf
push
add
sti
imul
rcrb
mov
testb
das
out
inc
mov
add
rorb
stc
pop
xchg
xor
bound
mov
fstl
add
fstl
test
fists
add
movsl
sub
add
add
pop
in
pop
std
jne
fwait
subl
std
push
add
dec
call
test
lods
std
pop
sub
mov
into
or
mov
xchg
inc
in
incl
subl
std
push
inc
lods
adc
decl
jns
add
jnp
push
aam
je
fmull
test
add
je
adc
cmp
pop
pop
fsts
lcall
sub
decb
mov
lock
add
arpl
call
add
sbbl
add
xor
mov
adcb
fmulp
xchg
enter
push
fwait
decb
jns
and
xchg
and
push
jecxz
les
lock
int3
push
in
outsb
sti
stc
dec
xor
lret
or
ret
adc
mov
jg
inc
lcall
push
int
aam
pop
neg
in
int
sub
in
repz
fwait
push
push
lods
mov
jmp
xor
aad
lcall
xor
add
adc
lcall
movsb
lcall
std
cltd
sub
and
lret
inc
fidivrs
test
sbb
mov
jmp
and
lea
cltd
lock
pop
iret
in
lods
xchg
test
jbe
cmp
adc
orl
sbb
arpl
pop
push
adc
pusha
sbb
data16
push
rcrl
jmp
push
xchg
lods
test
push
lea
ja,pn
gs
and
push
addr16
mov
pop
push
or
std
push
add
inc
sbb
fstl
notb
inc
shrb
push
fimuls
mov
xorl
mov
imul
je
mov
outsb
std
ljmp
inc
fsub
xchg
jne
mov
push
sub
aam
mov
rcll
sbb
call
mov
sub
test
add
lods
mov
lahf
in
scas
add
mov
pushl
xchg
jae
lcall
ljmp
popf
dec
xor
cmp
decl
adc
sub
lea
cmp
jne
dec
xchg
adc
jge
add
decb
cmp
xchg
adc
sbb
add
negl
mov
in
std
xchg
cli
movsb
add
mov
pop
mov
or
hlt
mov
sbb
sbb
fadd
inc
push
hlt
mov
popa
cmp
push
inc
pop
incl
ficomps
xchg
cmp
xchg
or
add
add
cwtl
adc
cmp
fisttpll
das
add
rclb
ja
rolb
and
add
adc
enter
imul
mov
sbb
roll
orb
mov
xchg
addb
out
mov
insb
ret
fcoms
popa
adc
orb
adc
fmuls
mov
ja
mov
or
add
incl
dec
jl
call
jns
jmp
fmuls
inc
jmp
adc
pop
sbb
jne
jo
or
mov
fstl
addb
adc
jbe
jo
pop
ret
js
pop
jae
mov
addl
es
inc
loope
xchg
inc
sbb
adc
pusha
jmp
cltd
cmp
jl
jns
outsb
ficoml
mov
jp
or
adc
or
aam
std
decl
or
lcall
mov
or
in
mov
or
test
pushf
std
andl
push
mov
add
decb
scas
add
popf
jae
cmp
add
add
call
adc
push
sub
jmp
sbb
cmpsb
or
idiv
fisubs
jmp
pushl
lcall
jp
fadds
scas
incl
fdivrp
dec
sti
ret
test
pusha
xchg
pop
aam
fdiv
clc
loope
xchg
je
sbb
inc
scas
xchg
je
mov
mov
call
adc
mov
jl
push
sbb
mov
mov
mov
dec
jns
inc
sbb
repz
push
punpcklwd
adc
lret
dec
adc
roll
int
stc
adc
mov
mov
jbe
or
lock
push
xchg
jb
out
mov
cltd
xchg
fs
add
loopne
sbb
push
sub
fnstcw
mov
sahf
mov
cmp
addr16
jmp
mov
cld
or
sbb
dec
lods
add
mov
rorb
imul
xor
pop
inc
jp
push
popa
popa
jg
ret
rorb
add
sbb
adc
cmc
mov
lea
in
push
test
imulb
push
nop
int3
out
and
jmp
sbb
mov
push
fstl
popa
rol
push
loope
lret
scas
sbb
jmp
fstl
push
ret
jge
jb
ljmp
pop
mov
xchg
xor
dec
jg
mov
xor
add
cltd
js
clc
lahf
mov
inc
xor
jo
lea
addr16
jnp
fadds
test
xchg
pop
movb
jmp
mov
lock
xchg
jl
add
cmpb
mov
enter
xchg
mov
out
popf
faddl
lds
pushl
mov
cmp
movl
push
add
pushl
adc
fidivs
inc
add
ljmp
scas
sub
mov
filds
add
mov
xchg
pop
aaa
or
add
add
rolb
lcall
adc
xchg
mov
fldt
pop
mov
pushf
and
dec
mov
push
and
inc
add
sbb
xor
xor
movsb
out
flds
add
mov
xor
cwtl
sub
add
ficoms
mov
add
inc
jnp
or
fnstsw
shrb
mov
push
mov
jl
jnp
nop
sub
sbb
imul
push
and
sbb
addb
adc
sbb
loope
fs
loope
nop
xlat
lahf
rcr
inc
jnp
jne
jge
pop
jno
mov
aad
fwait
mov
subb
or
test
lea
fidivrs
lahf
pop
xlat
lcall
int
outsl
insb
push
jp
popa
loop
or
frstor
push
jp
out
and
mulb
push
jnp
addl
into
ja
xchg
sar
push
testl
jl
jmp
std
negb
mov
insl
mov
jmp
incl
ss
les
out
in
add
inc
jnp
icebp
pop
xorl
lods
jnp
adc
jb
jmp
cmp
inc
clc
pushf
push
or
add
and
add
push
out
jge
add
adc
cmp
xchg
cmp
ret
push
addr16
adcl
std
push
je
call
or
jl
xchg
rolb
inc
push
decb
or
xor
mov
adc
push
lahf
sub
inc
idiv
sbbl
and
cvtpi2ps
ret
fidivl
rolb
cmc
sbbl
hlt
push
cltd
xchg
xor
jmp
out
aas
fimuls
sub
cmpsb
jo
add
test
fisubs
sbb
in
test
out
cmp
push
ret
add
push
movsb
xchg
push
and
push
scas
jge
outsb
sub
addr16
ljmp
incl
jmp
faddl
dec
arpl
jae
leave
mov
add
arpl
test
add
inc
mov
ss
call
ss
push
arpl
sub
jecxz
shr
jle
xchg
push
mov
sbb
inc
and
adc
imulb
fcoml
jmp
jle
add
js
lcall
xor
push
jmp
les
adc
or
cld
jmp
mov
lods
cli
inc
and
add
jmp
out
add
fs
push
lcall
outsl
cwtl
loop
mov
insb
pop
xchg
cld
jbe
dec
call
repz
or
gs
bound
jno
jmp
push
ja
lcall
cs
shll
fldl
incb
out
add
xor
sub
les
xchg
stos
cwtl
int
test
stos
jecxz
hlt
sbb
inc
jmp
push
lret
imul
pop
mov
or
mov
fs
incl
out
pop
push
or
test
test
incl
notl
sarb
cmp
xor
xor
cli
cmc
mov
test
dec
pushl
mov
mov
push
pushl
pop
lcall
add
ud0
les
pop
lea
adc
pop
dec
idiv
call
adc
test
xchg
cs
jge
add
mov
dec
mov
jne
fsubrp
ret
rolb
add
in
xor
in
jle
xchg
mov
push
fcomip
aas
fsubrp
sbb
lock
out
xchg
bound
add
ljmp
dec
into
xchg
in
jbe
inc
xor
xor
add
fisubs
push
je
sbb
add
add
pop
aam
xor
out
cltd
andl
stc
pop
addl
fiadds
cmp
xchg
jmp
jnp
insl
popa
mov
sub
pop
adc
xchg
jbe
fidivs
scas
add
aam
jbe
push
add
push
std
std
adcb
sbb
int3
shr
sbbb
adc
xchg
fldt
es
pusha
inc
adc
lret
movsb
sub
add
push
mov
inc
icebp
push
mov
add
out
js
hlt
mov
idivl
lea
xchg
lret
cmpsl
add
pop
hlt
repz
bound
dec
loop
lea
jbe
jae
jns
pop
sbb
sti
sbb
mov
push
pusha
jb
stc
add
inc
loop
jmp
int3
testl
cld
out
es
adc
fstl
lea
incb
loopne
pushl
xor
stc
jl
repz
in
add
push
lea
mov
stc
xor
pop
pop
mov
add
imul
sbbl
inc
push
call
cld
or
inc
and
jo
push
in
mov
dec
push
and
inc
add
dec
jbe
les
and
inc
add
push
push
add
insb
out
mov
test
add
dec
push
push
call
fsubrp
stos
test
xchg
lcall
cld
fsubrl
jecxz
test
fisubrs
sbb
mov
inc
aas
add
xor
mov
push
iret
subb
add
call
add
test
jbe
add
dec
xorl
sbb
sti
or
repz
adc
aam
add
and
xchg
xorb
add
ficoms
and
xlat
and
rolb
mov
sti
loopne
mov
or
mov
out
ljmp
inc
call
adc
leave
std
adc
xchg
dec
in
mov
jmp
add
xchg
lods
add
adc
xchg
insl
ret
xorl
iret
shr
mov
and
popa
jo
roll
add
ficomps
cmc
xchg
jmp
popa
icebp
cli
lcall
fstpl
test
push
out
sub
loope
inc
jmp
addr16
negb
mov
push
add
sbb
adc
fcoms
add
pop
add
fistpl
das
mov
scas
call
outsl
jae
pop
adc
push
adc
lea
insb
and
jbe
mov
movsb
jecxz
pop
outsb
adc
push
fistl
add
pop
add
add
imul
lcall
xchg
xor
adc
jae
fmuls
sbb
aaa
adc
insb
pop
sub
aad
add
ljmp
aad
pop
or
push
add
fwait
jae
rorb
jne
jl
repnz
adc
rorl
std
jne
xchg
jae
pop
push
and
les
fadds
nop
ja
add
jbe
repnz
fidivrs
testb
imul
jg
push
dec
ret
jne
jmp
ja
jne
jg
dec
sahf
ja
adc
push
lcall
clc
or
adc
addr16
fsubrl
or
fidivrs
repz
inc
fidivs
loop
popf
xor
ror
aad
mov
cs
xlat
int
xlat
cmp
jbe
mov
ja
push
add
sbb
sub
imul
das
mul
and
push
psubsw
push
sbb
add
adc
add
lahf
shrl
jg
add
adc
sbb
add
adc
push
sbb
add
adc
push
sbb
rcll
shr
rcl
add
pop
leave
lods
shrl
insb
rol
int3
shr
jmp
sbb
inc
add
push
les
lcall
ficoms
sub
out
pop
push
sbb
insb
push
inc
movsb
mov
movsb
dec
imul
fstl
push
adc
mov
push
in
sar
imul
sar
xchg
in
je
repnz
sar
outsl
cmpsb
ja
cmpsl
loopne
aaa
dec
imul
adc
ljmp
punpckldq
and
movsb
cmp
popl
rcll
cli
push
xlat
aas
std
xchg
jnp
add
cld
fisttps
adc
mov
mov
mov
push
jmp
pop
dec
fadd
or
dec
mov
push
xchg
add
inc
jmp
push
sarb
test
arpl
sbbl
mov
inc
std
push
call
rclb
mov
lcall
mov
bound
or
inc
push
push
inc
bound
push
jo
sbb
push
add
jl
gs
or
or
and
rcr
aam
push
rorl
mov
add
sbb
add
insb
addr16
testb
push
push
add
add
add
fstpl
je
push
push
adc
push
mov
pop
decb
mov
leave
int3
pop
decl
jnp
ljmp
int
ja
mov
adc
cmp
xor
lds
in
ret
jno
movsb
pmuludq
adc
push
shlb
out
push
outsl
loopne
aam
mov
xchg
cmpsb
lret
ret
daa
xchg
aaa
stos
int
pop
imul
shlb
shr
sbbb
outsl
lds
repnz
int3
lods
repnz
inc
add
and
fcoms
shrl
push
call
mov
pop
jb
pop
inc
cmpsl
push
pop
jmp
cmp
inc
addb
pusha
mov
jp
push
je
pop
mov
push
dec
das
add
mov
loope
je
movsb
fdivr
cs
in
fstl
add
mov
jl
std
loope
add
or
push
sahf
mov
stc
jae
js
add
pop
ja
add
repz
xchg
adc
shrb
outsb
mov
je
xchg
inc
ret
jb
inc
rcll
dec
sub
add
movb
adc
insl
loope
add
push
sti
adc
shl
inc
mov
pop
jmp
ja
nop
hlt
je
xchg
cmc
call
adc
or
bound
dec
fwait
incl
adc
adc
add
adc
shlb
xchg
dec
and
jg
add
ja
enter
lret
xor
nop
xchg
js
add
fidivs
cmpsb
sub
hlt
or
mov
or
loope
insl
push
mov
mov
adc
fsubp
pop
push
lods
push
jmp
xor
mov
cli
push
add
add
cli
inc
sub
fiadds
push
xor
add
loopne
cvtdq2ps
lock
or
gs
out
sahf
ja
or
out
rolb
out
pop
dec
in
test
jmp
js
adc
mov
js
std
bound
mov
xchg
sub
icebp
pop
psubsw
add
and
mov
xor
psubsw
int
rcll
xor
lds
pop
test
cmp
push
lret
les
xor
sar
out
mov
adc
adc
mov
cld
ljmp
dec
adc
jmp
fcoms
test
clc
adc
jb
js
mov
adc
ja
int3
jae
xchg
fstl
insb
fwait
shlb
sti
je
sbb
inc
sub
jno
xor
rorb
aad
xor
inc
or
inc
jmp
movsb
jae
mov
repz
sbb
xchg
int
call
jmp
incb
jnp
jae
dec
clc
int3
hlt
rdmsr
rolb
sub
xor
jmp
das
sbb
std
je
add
movsl
push
sldt
cmp
cld
enter
pop
xor
in
sub
xchg
jne
xchg
inc
in
push
push
out
inc
xchg
aas
jmp
push
fidivl
sub
push
aaa
jns
lea
dec
decl
call
add
hlt
insb
jae
inc
lods
lds
fisttpl
call
pop
cmp
add
mov
inc
enter
push
movsb
and
mull
or
div
adc
lock
out
subb
add
xchg
mov
push
pop
xor
add
cmpsb
inc
aas
addr16
and
mov
ltr
add
fsubrp
push
fs
mov
mov
and
xorl
adc
add
ficoms
test
fcomi
imul
call
or
mov
sub
rclb
outsl
idiv
or
add
jmp
mov
popa
call
roll
js
int3
and
xchg
xor
mov
sub
adc
popa
dec
sbb
les
ficoms
fcompl
sahf
js
jns
popa
fs
fmuls
cmp
frstor
xchg
pusha
aad
fstl
fldenv
std
test
shr
xchg
out
ret
bound
icebp
xor
push
in
sbb
inc
pusha
insl
add
in
into
cmpsb
xor
je
xor
shll
push
add
pop
mov
and
pop
aam
out
loop
call
data16
je
xor
xchg
mov
add
shrb
jbe
movsl
jg
stc
lldt
rcrb
or
cli
pop
jae
shll
addr16
push
add
aas
out
decl
ss
pop
jecxz
and
pop
mov
mov
inc
mov
pop
jb
dec
push
mov
mov
ljmp
out
mov
adc
rcr
pop
mov
rclb
cmp
sub
inc
push
push
xchg
into
push
push
fsubrp
call
push
call
je
std
fidivrs
cli
mov
ss
adc
fidivrs
adc
cmp
dec
adc
fsubp
jb
push
xor
mov
cvtps2pd
into
and
ja
push
fbld
cmp
xchg
add
adc
adc
sbb
and
shufps
icebp
dec
call
push
sub
and
loope
and
addr16
push
adc
sbb
adc
push
sub
lds
xchg
pop
aam
cli
push
clc
std
xor
call
popf
xor
add
fldl
test
jl
mov
inc
fucomp
ret
xor
inc
mov
adc
add
test
out
bswap
repz
call
addb
pop
call
or
pop
cs
jmp
mov
aam
sub
sbb
push
mov
xchg
icebp
mov
rol
mov
inc
aas
jmp
xchg
shll
movsl
cmpsb
shll
cltd
adc
jmp
fstl
int
loop
bound
xor
pop
push
out
dec
adc
testb
xor
xchg
xor
adc
daa
sti
add
xor
call
adc
and
fidivrl
and
lahf
pop
decb
push
adc
pop
and
popa
mov
jmp
and
decl
xor
call
sbbb
scas
and
and
mov
ud0
out
xlat
adc
xor
scas
in
incl
jecxz
cmc
or
push
cmp
and
mov
cmp
out
in
std
ljmp
pop
ret
push
mov
loop
add
push
add
shll
fimuls
add
push
addr16
gs
iret
shl
insl
jae
jne
imul
popf
mov
add
stos
adc
fadds
push
push
outsb
decb
daa
pop
add
dec
add
ficoms
cli
add
adc
test
imul
popw
inc
std
addl
add
sbb
sahf
push
ret
inc
add
arpl
hlt
add
push
push
add
in
xchg
psubsw
push
xchg
lods
outsl
pop
pop
sbb
call
out
in
pop
mov
popa
and
mov
dec
insl
sbb
cwtl
pop
push
xchg
out
arpl
sub
mov
or
lcall
jnp
fs
iret
shrl
out
pop
fs
dec
clc
cmc
ss
or
les
pop
cmp
and
pop
or
call
jle
popa
rorb
add
stos
jno
mov
push
jb
cld
fstl
jmp
test
test
mov
nop
adc
loop
cmp
fcoml
add
inc
push
inc
push
fcompl
pop
dec
adc
push
pcmpeqd
pop
cltd
std
cltd
pop
push
pop
mov
fldl
in
popa
test
ljmp
fcomi
xor
push
adc
leave
sar
imul
push
aaa
sub
fstl
push
cli
xchg
dec
in
dec
call
add
or
call
or
inc
clc
inc
mov
loop
add
je
xor
push
add
pop
rcrl
add
pop
std
pushl
cmp
jbe
adc
add
cld
aas
add
push
mov
inc
push
pushl
nop
mov
repz
inc
fdivp
sar
mov
jb
mov
dec
adc
add
lret
aad
inc
ficoms
leave
pop
push
stos
int
loop
imul
filds
add
xchg
jecxz
sbb
add
stos
add
fdivr
cmp
insl
sbb
ljmp
or
add
jp
push
imul
cli
icebp
sub
loopne
fsubrp
mov
fbld
mov
addr16
inc
inc
cmp
dec
xchg
adc
aam
ret
lret
ret
cltd
sbb
mov
lret
loop
jno
sub
fiadds
xor
adc
push
test
push
insb
inc
call
fsubr
xor
out
outsl
jg
push
push
imul
imul
cmp
out
imul
fs
je
sbb
xchg
push
sti
jnp
shr
test
call
incl
cmp
add
leave
cli
dec
out
loopne
adc
loop
sarb
filds
sbb
into
push
out
insb
push
rorb
push
sbb
jmp
pop
inc
movsl
dec
add
sub
push
sbb
mov
call
bound
push
subl
mul
xchg
fisttps
add
or
sbb
add
dec
add
mov
ljmp
mov
out
daa
loope
incl
cmpps
mov
inc
mov
call
inc
xchg
fcom
psubw
pushl
cmp
add
adc
mov
dec
outsl
add
les
push
cli
mov
adc
push
jle
add
add
mov
cmp
or
mov
aam
or
dec
add
idivl
add
pop
leave
cmp
cmpb
into
roll
push
mov
out
mov
jmp
iret
psubsb
add
push
cltd
sub
or
in
cltd
sub
test
push
sub
fmuls
andl
jnp
out
jle
xor
inc
cmp
lock
pop
loope
inc
ljmp
cmp
loop
iret
mov
out
negl
jbe
add
jl
push
jo
out
lahf
jecxz
push
fistpll
push
or
jl
sub
aad
in
scas
sti
mov
in
add
fimuls
in
sbb
rorb
jmp
sarb
call
or
int3
packsswb
int3
cmovno
lock
lea
call
jns
push
add
push
mov
pop
or
imul
mov
mov
in
xor
mov
pop
xchg
add
lea
mov
int
jg
push
jne
xor
repz
adc
mov
aad
xchg
ljmp
dec
shr
mov
jne
cli
fildl
bound
push
bound
mov
into
xchg
sbbl
pop
xchg
stos
mov
jl
fdivrl
mov
pushf
jmp
push
mov
pop
add
rcll
adc
daa
je
xlat
dec
or
adc
mov
or
add
add
fscale
decl
adc
jnp
xchg
mov
mov
ret
push
adcb
ret
mov
sbb
add
ficompl
jbe
lahf
push
or
pop
cli
call
mov
and
mov
mov
rorl
mov
lret
gs
aas
fmulp
add
aam
or
ret
out
imul
orl
cmp
add
add
fistpll
add
ret
outsb
cmpb
orb
add
sub
fldenv
flds
lods
jns
dec
pop
incl
add
pop
ljmp
xchg
add
arpl
or
push
lods
cmp
jmp
mov
mov
adc
mov
adc
xchg
and
add
jmp
loope
xlat
bound
cmp
xlat
loope
lods
push
pop
sbb
shll
rcrb
cmp
jmp
mov
gs
dec
call
dec
pop
arpl
xchg
jmp
mov
push
in
int
inc
arpl
movb
inc
dec
jg
ficoms
xor
sbb
add
pop
push
add
sbb
push
push
add
sbb
push
bound
dec
les
loope
out
push
add
add
insb
test
inc
pop
pop
inc
cld
es
fisubrs
inc
xchg
jge
fstl
insb
sbb
insl
lcall
sahf
xchg
in
fnstsw
dec
xor
adc
into
mov
adc
loop
add
jecxz
add
scas
insl
mov
in
jecxz
test
imull
add
add
cmpl
push
mov
lret
clc
add
and
jmp
das
adc
inc
and
test
jb
mov
adcb
loopne
cmp
pop
push
add
adc
lock
dec
aam
inc
and
sub
push
jae
or
mov
in
in
subl
clc
pop
mov
daa
je
andb
pop
pop
jmp
movzwl
cmp
mov
mov
pop
or
push
jnp
call
mov
add
scas
scas
inc
dec
imul
push
test
add
lea
repz
sbb
and
cmpl
lcall
and
es
gs
or
sbb
hlt
add
cmp
addl
sub
js
lea
push
adc
and
inc
add
push
adc
and
ljmp
inc
fsubs
or
adc
and
cltd
add
adc
in
sbb
xchg
fimuls
add
in
push
mov
pop
jmp
ficoms
pushf
or
addl
push
fsts
sub
jns
jmp
push
fs
and
cmp
cltd
ficoms
je
jo
mov
jmp
fstl
orl
addl
xchg
aad
mov
sbbb
add
fisubs
add
fstl
pop
add
adc
jmp
pop
int
jmp
fstl
mov
std
pop
jb
xor
sub
lcall
popa
in
jb
xor
fstl
mov
pop
inc
negb
add
fstl
add
incb
push
adc
sbb
test
js
jecxz
aaa
or
ljmp
or
test
aaa
or
std
sbb
or
mov
xchg
cwtl
sarb
pusha
adc
jo
cmp
pusha
or
inc
aam
cmp
popa
ljmp
sub
je
xchg
inc
add
ss
mov
into
add
add
pop
fidivrl
add
pop
std
dec
mov
subb
cmp
test
es
dec
push
repz
lea
add
ret
push
sbb
cmpb
ret
enter
mov
and
cmp
jmp
test
negb
push
out
pop
push
arpl
pop
inc
loope
mov
fidivrs
add
stos
adc
fistpll
insl
call
push
or
testl
mov
sbb
and
popa
enter
pop
jg
jmp
xchg
sub
gs
mov
jae
add
cltd
out
xchg
xor
inc
add
stos
imul
mov
lret
add
ss
fdivrs
in
sbb
add
adc
lds
push
add
scas
jno
mov
jecxz
inc
adc
jmp
and
jmp
test
aas
das
fwait
xor
insb
push
add
sbb
xchg
jl
mov
cmpb
stc
cmpsb
mov
sarl
xchg
pop
addb
subl
inc
fstl
test
subl
add
adc
jmp
jne
scas
call
lret
xchg
je
cmp
test
jmp
fcoml
add
xor
out
add
xchg
push
fisttps
add
mov
scas
or
add
xchg
push
xacquire
add
xor
mov
divl
inc
xchg
adc
mov
fisttps
add
rorb
jp
or
add
push
xchg
xchg
cld
cmp
addl
dec
xchg
and
and
test
test
test
pop
ret
jbe
test
sahf
mov
cwtl
in
or
jne
mov
movsl
in
xchg
jbe
scas
enter
test
pop
xor
add
push
sbb
daa
clc
mov
xor
mov
push
sbb
jp
ret
out
pop
push
subl
sub
and
negl
pop
pop
pop
repnz
cmp
xchg
repnz
imul
loopne
sti
adc
mov
int
insb
cmp
out
arpl
and
mov
inc
ficoms
fcmovb
lcall
sbb
xchg
loopne
cld
cmp
jmp
rcr
cmp
sarb
xchg
and
mov
xchg
add
lods
addr16
jmp
push
inc
inc
adc
jg
mov
push
lea
adc
fwait
jnp
add
fnsave
out
jne
add
sbb
push
add
js
clc
insb
sbb
or
and
je
fidivrl
jmp
dec
ja
jno
clc
xor
adc
push
lahf
xchg
iret
rcrl
xor
add
ficompl
adcl
notb
data16
icebp
je
loop
inc
jmp
cmp
clc
mov
mov
or
push
loop
add
cmp
out
or
and
pop
hlt
jb
lock
shll
mov
jb
pushl
rolb
jne
or
dec
jne
idivl
inc
cmp
add
or
data16
call
rorb
pop
mov
loope
stc
add
mov
leave
dec
or
pop
mov
push
or
mov
outsb
or
roll
mov
arpl
into
add
add
addr16
or
mov
push
and
jge
xor
jge
add
mov
es
mov
jg
mov
incl
jo
mulb
popa
or
rcl
pop
or
add
jmp
sub
mov
stos
dec
das
int
jmp
andl
add
fsubs
cmp
data16
mov
int
fldl
js
jo
xchg
push
sbb
fadds
dec
mov
xchg
add
pop
cmp
lods
sub
addl
adc
mov
xchg
xorb
xchg
faddl
fmuls
fstps
adc
sub
scas
pop
call
xchg
mov
rorl
ljmp
push
ljmp
jmp
sbb
mov
pop
add
mov
data16
faddl
jae
rcll
push
mov
fsubr
pop
cmp
mov
pop
cmp
sahf
mov
cmc
repz
shrb
adc
ds
xchg
clc
mov
lret
push
adc
mov
xor
inc
inc
or
add
pushl
out
int
adc
jb
fcmovnb
in
fucom
mov
loopne
add
dec
adc
mov
or
or
rcr
mov
mov
push
js
jae
aam
push
push
aas
outsb
std
mov
mov
pop
push
fs
or
mov
out
cmp
test
sub
std
inc
xchg
inc
ja
push
push
test
adc
decb
or
adc
adc
push
addb
pop
adc
dec
adc
cmp
jmp
in
push
add
daa
add
es
adc
cmp
decl
add
je
pop
xor
movsb
jnp
pop
mov
add
sub
aas
fiadds
mov
repz
dec
push
add
dec
adc
pop
ret
jne
mov
gs
sub
lea
push
pop
sbb
dec
jae
scas
dec
orl
sub
call
adc
repnz
adc
jp
jns
dec
sbb
mov
pop
xor
add
mul
out
aam
incb
pop
callw
ljmp
or
push
out
or
lahf
adc
add
clc
stos
dec
dec
sub
add
adc
mov
cmp
dec
push
js
dec
nop
jecxz
add
adc
dec
ljmp
or
gs
cmp
sbbb
cmp
push
loop
dec
dec
pop
ljmp
mov
cmp
add
cmp
ficoms
cmp
in
movsl
aaa
inc
jmp
dec
jo
insl
sbb
mov
xchg
shl
call
sbb
in
fstl
add
out
lock
gs
inc
mov
push
and
repz
mov
lods
and
push
xchg
imulb
cld
out
sub
inc
out
cmp
sub
adc
repz
add
call
sarl
int3
dec
call
in
adc
mov
or
lcall
out
jmp
in
clc
xchg
mov
mov
std
jne
faddl
loopne
or
pop
pop
dec
xor
fs
inc
mov
mov
sbb
push
cmp
mov
push
fistpl
lds
add
adc
add
mov
add
aad
inc
dec
fptan
inc
ja
fisttps
xchg
mov
fisubs
add
daa
sti
mov
and
rolb
scas
cmp
popf
daa
push
push
push
inc
fiadds
xor
les
jmp
daa
ja
das
jg
fbstp
mov
lods
xor
out
add
addr16
lds
add
jge
xorb
fidivrl
add
push
add
push
jle
scas
subl
dec
push
cmp
pop
push
in
push
and
xchg
jg
and
cmp
pop
pushf
adc
inc
cld
dec
flds
mov
pop
xor
push
add
test
arpl
ja
stc
aad
pop
in
shr
push
push
mov
xorb
cld
pop
sbb
jb
sahf
sub
push
xchg
mov
and
xor
push
xchg
mov
and
adc
push
cmpsb
mov
inc
andl
jmp
loope
orl
aaa
mov
hlt
xor
pop
ja
icebp
xchg
sbb
fistpl
int3
notl
dec
adc
stos
xor
aaa
adc
adc
ljmp
and
sbb
sti
sbb
hlt
mov
jmp
sti
stos
fstp
push
pop
cmc
jg
mov
cs
es
subl
and
in
sbb
inc
jmp
ja
add
add
sarl
test
lret
sbb
pop
add
sti
lock
adc
mov
add
ja
or
pushl
cmc
testb
ret
push
xor
je
repz
push
push
lock
jp
fildl
add
pusha
std
decl
or
aas
adc
inc
lods
inc
and
inc
mov
pop
cmc
cmp
push
fidivs
mov
adc
pushf
xorl
into
testl
daa
into
mov
push
mov
mov
daa
pop
or
test
add
mov
daa
mov
xor
in
cmp
daa
add
add
mov
repz
stos
lds
fcompl
faddl
xchg
add
fidivs
sbb
xchg
sub
inc
scas
sbb
aas
ficoms
adc
cwtl
into
or
adc
call
ror
adc
rcll
push
insl
adc
gs
sarl
in
rcrb
sbb
add
adc
cmp
dec
xor
fs
in
rcr
inc
jge
fstp
outsl
test
ficoms
lahf
rcr
adc
arpl
std
or
lock
int3
repz
loop
cmp
push
sbb
inc
lret
xor
adc
ljmp
in
pusha
fcompp
ljmp
mov
bound
mov
test
xchg
xor
add
subl
mov
adc
arpl
xor
or
test
pop
jmp
add
sub
lods
sbbb
cmp
adc
push
adc
push
jmp
fs
movhlps
add
add
inc
or
les
cmp
or
add
out
imul
or
cmc
hlt
inc
jg
mov
test
cmpl
jo
lds
inc
xchg
mov
mov
push
push
mov
push
push
loopne
jae
mov
mov
push
or
fmuls
or
mov
enter
or
add
mov
add
or
fiadds
add
lret
aaa
push
jl
out
out
add
pop
out
sub
ljmp
cs
mov
add
cmp
call
bswap
clc
shl
gs
add
inc
pop
test
cmp
daa
lods
push
cmp
pop
or
ja
adc
push
ret
outsl
add
pop
lcall
das
push
cli
add
sub
add
into
and
cmp
adc
paddusw
out
pop
or
or
fs
dec
inc
jae
mov
pushf
out
fstpl
jmp
inc
cmp
sub
xchg
bound
dec
cmp
hlt
dec
inc
xchg
cli
sbb
in
fnsave
in
fwait
loope
pop
dec
and
stos
add
icebp
push
add
xchg
loope
pop
push
mov
cmc
ret
cltd
pop
push
adcb
sbb
in
inc
repnz
add
test
or
adc
mov
int
add
pop
daa
das
jae
das
adc
rcl
lcall
xchg
and
fistl
in
out
ret
xchg
jnp
loope
jne
mov
add
je
das
jae
loope
adc
lret
sar
outsl
jecxz
imul
test
mov
mov
and
or
adc
loope
sbbl
aas
je
or
add
xchg
cld
ljmp
adc
dec
loop
inc
cltd
mov
fidivl
pop
push
incl
imul
push
pop
mov
rolb
push
mov
dec
mov
cli
out
inc
cld
lock
adc
cmp
pushw
jmp
push
inc
sahf
idiv
stc
iret
rorl
ret
add
data16
add
mov
aas
fwait
add
jmp
adc
ror
faddp
add
fmull
pop
cwtl
repnz
add
mov
aaa
rcll
mov
mov
dec
stc
mov
push
adc
fidivrs
aas
jae
dec
aas
gs
inc
xor
push
mov
add
mov
jae
mov
push
addl
add
cmp
add
push
add
testl
push
nop
sub
sub
adc
test
adc
test
pop
sbb
pop
sub
mov
ficoms
paddw
out
mov
stc
cmpsl
mov
rclb
sahf
notl
nop
dec
jecxz
add
jecxz
stos
push
mov
add
mov
xor
adc
mov
les
adc
xchg
sbb
add
add
mov
adc
mov
ret
inc
xchg
test
lret
repz
jnp
adc
jmp
stc
xchg
adc
pop
sub
adc
inc
adc
push
divb
cmp
in
jnp
lds
sbb
push
pop
ja
push
pushl
imul
sub
mov
arpl
movq
rcrb
mov
xchg
mov
sahf
lds
vpcmpgtw
pop
sub
cmp
xchg
jecxz
dec
mov
jo
mov
jmp
data16
add
sbb
incl
por
jp
popf
data16
add
sbb
fcomi
adc
add
into
fiadds
adc
aam
jmp
je
rclb
mov
or
xor
dec
inc
rcll
sub
hlt
js
add
cs
push
sbb
push
push
out
push
sbbl
sbb
hlt
sub
mov
das
xchg
mov
out
mov
xchg
in
mov
fs
clc
push
out
or
inc
lds
repz
call
pop
add
pop
sub
fdivs
add
arpl
lea
fidivs
add
fbstp
xchg
xor
je
scas
inc
out
std
cmp
gs
xchg
pop
xchg
pop
divl
add
dec
xchg
push
jl
mov
scas
xorb
mov
sarl
sbb
movb
in
cmp
mov
cmp
and
sbb
mov
imul
add
xor
pop
mov
add
out
call
mov
and
sub
lcall
pop
sub
mov
adc
jge
xchg
pop
cmp
sub
mov
rcrb
add
sub
pop
jl
call
pusha
mov
jae
pop
sub
pop
inc
cltd
jl
add
mov
pop
sub
xor
push
or
psadbw
daa
jmp
mov
fidivs
cli
xlat
xchg
repnz
cld
lock
pop
popf
es
mov
je
pushf
ljmp
mov
daa
dec
xor
leave
lcall
fstl
add
fstpt
add
icebp
addr16
popf
nop
fnstenv
push
mov
add
call
cld
call
xchg
or
ljmp
je
ljmp
jle
cli
mov
hlt
pop
jmp
mov
testb
mov
mov
push
dec
pop
leave
test
in
xor
or
jns
lock
lea
inc
xchg
xchg
pop
hlt
mov
or
add
xor
fidivrs
test
add
shlb
in
inc
add
aaa
cmp
das
cmpl
and
add
fsub
mov
mov
or
push
cmp
sub
and
mov
xchg
sahf
add
fimuls
add
repnz
fwait
mov
sub
inc
lods
adc
cwtl
sar
inc
pop
iret
add
xlat
or
pushf
in
test
inc
sarl
push
push
adc
add
in
mov
or
add
aas
shrl
sub
add
cmp
pop
dec
xor
int
inc
mov
hlt
or
sub
push
into
icebp
xchg
in
xchg
pop
push
hlt
sbb
into
jo
xor
jecxz
push
dec
dec
or
sub
push
into
inc
mov
cmp
adc
push
and
add
cmp
ficoml
mov
repz
sbb
pushf
loope
xchg
sbb
sub
xchg
add
adc
sub
and
ror
stos
add
mov
or
or
push
pop
mov
jmp
xlat
pop
jmp
pop
add
pop
arpl
adc
and
adc
add
adcb
fstl
or
push
pushf
repz
push
out
call
add
jb
hlt
imul
jbe
jns
pop
popa
xchg
add
jnp
ja
push
push
inc
mov
inc
mov
push
out
shll
xchg
push
add
pcmpeqb
lods
cs
data16
jns
add
fs
gs
inc
add
xchg
inc
clc
or
or
jne
std
lcall
rcrl
mov
push
testb
stc
push
mov
lret
int3
push
push
rorl
cmpsl
pop
push
test
repz
jns
add
fidivs
add
sahf
add
repz
adc
mov
dec
pop
cmpl
xor
mov
cmc
gs
push
lds
mov
loope
je
sbb
test
decb
test
jl
mov
push
mov
xor
iret
in
pop
scas
decb
cmp
scas
mov
in
call
iret
lods
ret
mov
pushf
and
push
ret
lods
push
arpl
rolb
and
push
lds
and
inc
mov
adc
inc
mov
sbb
adc
xor
cld
imul
adc
adc
inc
mov
jns
ficoms
fiaddl
xchg
call
push
outsb
add
sub
xchg
std
outsb
jo
and
pop
je
out
loope
pop
add
sub
jnp
mov
jmp
addr16
fdivp
jecxz
shrb
sar
push
int
bound
movsl
or
aad
inc
fstl
or
lock
and
hlt
mov
sbb
lcall
clc
fsubl
add
movsb
push
push
adc
stos
cs
jmp
and
mov
add
mov
dec
int
shr
dec
or
cmp
or
cmp
or
dec
cli
test
mov
imul
add
dec
out
push
push
sar
mov
xchg
xor
pop
pushf
dec
ds
inc
cmp
inc
clc
adc
adc
mov
dec
mov
add
mov
jg
xchg
in
xlat
push
push
dec
mov
add
nop
inc
and
xor
xor
cmp
lcall
stos
sub
dec
xor
rorl
inc
ficoms
add
gs
das
stos
cmpsl
sti
fiadds
xor
inc
mov
hlt
sbb
push
lods
cmp
push
mov
add
add
mov
mov
mov
mov
cmp
mov
xor
push
jg
ljmp
mov
push
cs
add
inc
cli
adc
lock
jecxz
loopne
fbstp
adc
fcoml
adc
icebp
pop
int3
roll
fimuls
das
inc
adc
dec
add
mov
lcall
xor
add
es
cmp
or
mov
sub
ficoms
add
roll
push
push
xchg
cmp
out
les
sbb
inc
out
sbb
sbb
xor
loope
fldt
inc
jmp
das
cmc
imul
int
call
push
or
xchg
mov
out
add
sbb
xchg
adc
call
scas
push
add
repnz
push
icebp
jae
aaa
testl
lds
mov
mov
mov
push
adc
fdivl
add
adc
sahf
xor
xchg
and
add
or
sub
je
push
cmp
add
in
rorl
add
fidivs
cmp
cmp
or
aaa
daa
or
xchg
enter
rolb
mov
xor
xor
xchg
out
testb
push
push
inc
push
rclb
and
xchg
andl
xor
test
aaa
pop
push
and
into
dec
fimull
lcall
mov
test
imul
pop
repnz
jp
push
es
mov
jnp
mov
inc
xor
mov
adc
xor
and
std
add
add
in
jo
mov
mov
mov
cmp
inc
adc
adc
std
test
bound
xor
out
pop
fildll
xchg
add
daa
add
fcoms
mov
gs
decb
loop
xlat
xor
jae
adc
inc
loope
sti
jle
pop
push
sbbl
mov
mov
imul
sbb
aam
add
dec
loopne
sub
in
shr
jnp
sbb
roll
int
shl
add
adc
or
xchg
mov
push
lret
xor
sub
fiadds
push
lret
add
test
sub
push
and
add
pusha
mov
cli
hlt
sub
and
dec
loope
mov
mov
fcoms
fmull
test
ret
sub
aam
sub
int
pusha
add
pop
test
repnz
mov
fmull
cmp
int
xchg
sub
add
pop
icebp
pop
movb
stos
adc
repnz
mov
je
jbe
je
out
lldt
adc
push
add
push
into
push
out
cwtl
int
inc
adc
push
dec
mov
add
sub
inc
fdivrl
sub
cmp
fsubrp
fsubrp
std
jl
out
xor
or
clc
daa
jl
lds
std
inc
pop
mov
incl
push
cmc
je
test
mov
cmp
pop
in
add
push
inc
xchg
rcrb
out
psubw
test
test
jge
add
test
cmpb
scas
addr16
lods
inc
imul
sub
push
out
rorl
mov
ret
testb
shl
pop
add
gs
je
lods
xor
sti
sub
sub
ss
insb
test
or
sub
adc
fidivs
cmp
fisubs
sbb
popf
mov
out
adc
ficoms
sub
mov
ljmp
and
cld
scas
mov
sbb
push
aad
fs
shlb
lds
ficoms
jmp
cld
lods
adc
jmp
sbb
call
xor
mov
ficoms
pop
roll
int3
cmp
mov
adc
add
mov
scas
lock
pop
ja
out
adc
icebp
les
add
inc
mov
cltd
and
in
inc
jmp
test
and
call
ljmp
jmp
dec
icebp
sbb
mov
push
add
adc
insb
popf
push
test
fcoml
add
fildl
out
sahf
adc
jb
les
rcll
insl
sbb
lock
pop
inc
mov
inc
and
cmc
add
sbbl
movsb
adcb
mov
inc
mov
call
test
fs
mov
push
mov
cmp
std
decl
adc
add
mov
adc
and
testl
mov
inc
and
aas
std
xchg
adc
jae
or
and
rorl
notl
ficomps
gs
decb
xor
mov
ljmp
mov
jne
inc
mov
imul
sbbl
mov
out
cmp
popa
lods
aas
fidivs
mov
pop
and
mov
stc
rcll
popa
add
fidivrs
pop
fisubs
add
dec
inc
push
mov
push
adc
lcall
mov
mov
filds
loope
jp,pt
in
lock
rolb
subl
adc
je
and
adc
test
add
or
mov
loopne
jae
adc
lock
mov
leave
fs
inc
fstl
cmp
cmc
lea
pushf
adc
int
fwait
cld
adc
sti
inc
out
shr
adcl
xchg
roll
adc
or
jmp
cs
jmp
je
adc
lcall
jmp
leave
aas
jmp
jp
inc
jmp
fstl
mov
imul
push
fs
sbb
jmp
andl
jnp
sbb
sbb
insl
aam
jmp
fcoml
mov
add
adc
jmp
push
adc
rcl
fldenv
push
cmp
push
call
adc
inc
pop
in
inc
sub
gs
aam
push
push
mov
mov
pop
inc
add
push
je
in
into
cmc
test
mov
shr
mov
adc
mov
mov
cwtl
inc
add
mov
mov
call
fs
stos
dec
lea
imul
adc
push
ret
mov
cmp
add
sbb
cmp
sub
jno
xchg
in
lea
fiadds
adc
sahf
jb
test
sbb
sbb
cmc
sbb
gs
add
or
sbb
cs
push
into
out
test
inc
push
or
int3
fcompl
xchg
out
pop
and
pop
cmp
cmp
aas
or
sbb
dec
push
ljmp
popl
testb
ret
loop
fldl
jmp
sub
out
insl
push
jg
add
push
hlt
out
or
cmc
aaa
in
push
out
lahf
and
mov
or
mov
rorl
cs
std
sub
clc
sub
cmpsl
add
insl
and
adc
push
and
lcall
mov
jmp
mov
xor
xchg
rcr
adc
cmp
push
add
add
rorl
jmp
decl
jmp
bound
push
or
fstl
cmp
sbb
add
fstl
rcrb
je
or
xor
add
pop
test
adc
je
or
jno
call
mov
adc
shrb
loopne
mov
jmp
pop
aaa
bound
pop
push
cld
sarl
call
ljmp
adc
push
lea
cmp
mov
mov
mov
add
pop
cwtl
adc
jmp
popf
inc
cld
or
push
das
js
add
ret
vminpd
sub
xor
sbb
add
add
xchg
std
std
call
xlat
je
fsub
mov
fwait
inc
cld
iret
or
aaa
addr16
pop
adc
decl
insb
sbb
fwait
aad
stc
insl
clc
add
imul
mov
pop
push
inc
xchg
stc
or
mov
add
sub
jmp
popf
sbb
fdivrp
mov
mov
fistpl
in
mov
cltd
ss
lods
hlt
std
jns
sub
push
stc
add
or
xchg
add
movsb
xor
outsb
mov
dec
scas
leave
mov
inc
stos
add
in
ds
in
add
and
aas
cmpsl
test
mov
test
sub
imul
xchg
sbb
or
stc
jg
add
adc
stc
pop
fiadds
ficoms
pusha
mov
lahf
adc
jg
sub
adc
pop
ljmp
sub
jle
add
stc
iret
dec
ficoms
jb
pushf
fs
pop
std
iret
add
adc
pop
aaa
or
push
push
push
mov
movntq
ficoms
lcall
js
insb
adc
dec
cmp
xor
into
jmp
inc
sarl
popf
dec
sub
je
adc
jge
push
sbb
pushaw
fstpl
pop
xchg
arpl
lcall
xchg
sub
pushaw
loopne
out
call
mov
ds
and
jo
pop
bound
leave
data16
sbb
or
in
push
push
add
add
cwtl
inc
or
push
jle
and
dec
jno
mov
imul
lock
sahf
add
or
je
add
inc
std
out
in
add
call
cmp
sub
or
xchg
lea
fstpt
nop
mov
and
xchg
jns
add
cmp
sbb
test
mov
ss
movb
stc
mov
xchg
add
pop
xchg
in
fisubs
in
mov
icebp
mov
or
push
add
pop
repz
fiaddl
aas
inc
add
add
dec
push
hlt
mov
mov
pop
in
add
fdivrp
rorl
xchg
lea
in
mov
shl
mov
jb
and
pop
dec
fcoms
mov
sbb
aas
mov
test
adc
add
ret
repz
repz
daa
or
call
fistpll
adc
push
into
aaa
scas
andl
jg
pop
imul
push
call
mov
jg
push
imul
push
call
sub
sub
add
jb
adc
mov
mov
cmpsl
or
out
ficoms
aas
sub
movntq
mov
pop
add
test
pop
jge
add
add
nop
jl
aam
or
jmp
add
mov
sbb
call
dec
and
push
adc
call
pop
bound
sub
call
out
je
pop
mov
fnstsw
jb
push
push
dec
in
xor
fstl
test
outsb
aas
mov
add
call
mov
in
push
sbb
es
add
cmp
lds
cmpb
je
xchg
ret
sub
call
fs
vmovss
adc
sarb
mov
in
je
cmc
subl
adc
cmove
push
out
sub
cmp
dec
xor
dec
dec
push
test
sldt
add
les
adc
xchg
pop
and
add
lret
sar
add
stc
add
ss
stc
add
jle
cmp
sahf
jecxz
stos
aad
push
mov
mov
mov
cmpl
jnp
cli
add
fildl
fisubrs
roll
or
stos
mov
inc
daa
sub
sub
add
fdivrp
add
adc
mov
cli
cmpsl
je
mov
jge
loope
inc
decl
adc
jns
mov
fimuls
add
dec
mov
xchg
icebp
add
sub
arpl
add
out
dec
adc
add
test
pop
test
sub
pop
cltd
mov
testl
sub
arpl
add
xor
mov
clc
pop
mov
lret
cmpsl
add
mov
daa
add
adc
cmpl
xchg
fists
add
ficoml
mov
ficoml
add
int3
add
sbb
add
lods
add
add
push
or
push
sub
sbb
call
mov
std
sbb
dec
call
sahf
adc
sbb
in
pop
stos
into
add
notb
push
test
mov
popa
push
add
and
jae
enter
push
or
cmp
shlb
aaa
xchg
inc
clc
ret
cwtl
cmc
cmp
or
sub
jbe
je
push
cmpb
push
mov
out
sbb
decl
dec
add
jo
ret
dec
add
mov
icebp
andb
push
lea
add
inc
xchg
in
sub
add
xchg
dec
mov
sub
sub
mov
andb
imull
xchg
dec
xchg
mov
push
inc
sub
jmp
jmp
lret
inc
adc
cmp
cmovno
add
cmpsb
xor
adc
push
daa
mov
ss
fiadds
scas
mov
push
or
test
and
test
out
push
ror
pop
add
mov
cld
decb
add
adc
mov
adc
adc
add
stos
add
and
test
and
sti
pop
ficoms
mov
mov
dec
adc
adc
cs
and
lahf
shlb
adc
add
std
push
adc
push
out
pop
in
add
add
pusha
idiv
add
rcrb
bound
aaa
sbb
sub
aad
xchg
mov
enter
loop
or
fstl
icebp
sub
cmp
hlt
mov
push
xchg
popf
std
jle
out
insb
jmp
testb
adc
and
sub
adc
stc
nop
in
or
test
fimull
in
push
adc
push
push
lret
jmp
and
inc
adc
adc
jmp
aad
add
fucomp
add
jmp
push
addr16
push
lods
arpl
imul
clc
mov
rorl
sar
push
in
adc
cmpsl
mov
add
jne
jecxz
jmp
jge
lock
mov
scas
cwtl
adc
test
cmpsb
adc
jle
lock
movsl
adc
xchg
rorl
cmc
lea
dec
push
jl
add
add
enter
push
mov
rcll
or
push
les
cmp
out
xchg
dec
xor
ljmp
push
push
sub
adc
mov
test
mov
test
sub
xchg
repnz
out
adc
fwait
add
stc
xor
je
lcall
inc
movsb
jl
cltd
xor
fidivs
std
xor
or
adc
and
adc
out
pop
adc
cwtl
add
bound
bswap
hlt
stc
ret
fsts
mov
inc
test
fisubs
fistpl
xchg
push
sub
in
cli
ret
xchg
dec
pop
mov
jle
inc
test
push
in
xor
push
lret
ret
imul
mov
cmc
pop
xchg
shlb
fs
cmp
adc
sub
lret
and
push
add
adc
mov
xchg
clc
rcll
pusha
daa
add
sub
push
ds
and
cli
popf
cli
mov
ss
mov
jmp
lods
cmp
scas
push
add
sahf
sar
test
fstl
mov
mov
xchg
iret
jae
pop
push
aam
cmpsb
adc
jmp
add
adc
mov
jae
fsubs
ficompl
pushl
insb
arpl
insb
sti
jae
shlb
std
sbb
pushl
or
and
add
adc
push
push
movaps
incl
mov
adc
dec
stos
incb
or
push
addb
adc
adc
pop
inc
mov
jno
add
icebp
call
add
adc
ja
jmp
or
push
sbb
or
aam
int
mov
mov
mov
jl
add
or
mov
mov
add
fidivrs
jo
out
pushl
or
mov
sar
fcomip
add
sub
push
or
jmp
add
add
and
adc
cmc
aas
ficoms
cmc
aas
fiadds
add
mov
push
push
pop
xchg
popa
loopne
mov
jae
jmp
out
aas
fiadds
stc
add
jmp
add
ficoms
es
int
lods
pcmpgtd
or
pop
stc
ret
or
divl
sbb
fs
fmuls
xchg
jmp
hlt
hlt
mov
add
adc
push
adc
add
jne
add
mov
cmp
test
push
sbb
push
fidivl
nop
into
dec
pop
nop
rcll
scas
pop
dec
aam
inc
sub
cmp
add
jmp
add
sbb
sbb
and
add
or
jo
out
pushf
roll
gs
add
dec
push
repnz
in
adc
popf
imulb
xor
sahf
out
push
scas
dec
cli
std
cld
mov
push
adc
loop
inc
jge
dec
in
adc
add
add
dec
call
pop
outsb
out
push
in
cld
dec
dec
or
ja
pop
pop
jl
ret
sbb
sub
aaa
adc
push
push
xchg
movsl
sub
jae
sub
and
pop
push
adc
je
xlat
shlb
push
std
inc
push
inc
cld
mov
and
sub
lds
add
je
inc
cld
add
movb
std
incl
or
pop
inc
mov
mov
jbe
adc
gs
mov
and
jne
cmpb
out
cmp
push
fisttpl
pop
xor
fsubp
nop
sub
inc
lea
add
in
aas
fimuls
jae
mov
pop
add
fiadds
add
fidivrs
sti
vhaddps
mov
push
push
cltd
add
jmp
add
addr16
add
jmp
stos
enter
push
mov
jl
adc
pop
hlt
call
repz
hlt
out
ficoms
mov
add
mov
cs
repz
repz
push
out
sub
jne
ficoms
out
rolb
mov
test
xor
addl
repz
cld
enter
add
insb
inc
sub
push
out
adc
add
mov
add
adc
stc
adc
add
mov
cmpsb
jnp
sub
fstpl
push
sarl
xchg
push
loope
or
insl
add
push
repz
sub
adc
outsl
pop
or
pushf
stc
icebp
jae
in
incb
loope
out
ficoml
add
dec
sbb
je
ljmp
ret
loope
orl
fstl
or
jmp
sub
add
fisttpll
andl
nop
fidivrl
add
andb
adc
les
inc
push
add
popf
add
push
je
shrb
incl
popa
jmp
mov
cwtl
std
imul
loope
add
pop
cld
rorb
mov
jbe
cld
lock
add
or
push
mov
add
popf
add
or
push
pushf
sbb
mov
add
inc
pop
lock
hlt
mov
aaa
pushf
adc
out
jmp
add
or
cmpsl
enter
cmp
loope
push
decl
mov
pop
or
pushl
out
pushf
jmp
add
jge
fsubp
add
xchg
sub
lea
incl
jae
xchg
decl
add
sub
fld
dec
cmp
cli
add
fnstcw
rcr
inc
ljmp
pushl
dec
dec
pop
scas
cli
add
pusha
adc
out
pop
pop
xchg
add
xchg
xchg
repnz
mov
fldl
stos
out
outsb
add
mov
add
pop
add
push
dec
shl
add
inc
add
xor
mov
ficoms
out
xor
cs
das
es
stos
push
add
lock
add
out
fwait
lods
mull
pop
jmp
xchg
mov
fsubr
or
ficoms
call
sub
adc
add
and
les
adc
jmp
fucomp
mov
pop
pop
std
mov
ja
test
xchg
in
jg
fucomp
std
cld
mov
imul
mov
cld
addl
cltd
inc
fsts
data16
call
cmpsl
sbb
xchg
repnz
inc
stc
push
pop
or
adc
inc
add
out
addl
out
push
ds
call
ret
and
adc
add
pop
hlt
cmp
ljmp
mov
inc
sbb
aaa
popf
inc
in
push
adc
outsl
popf
mov
jbe
add
push
popf
mov
adc
cmp
add
jp
jg
out
je
sbb
add
or
mov
add
lret
xor
adc
inc
je
mov
ret
call
mov
and
addl
add
loopne
ret
adc
repnz
mov
jb
call
push
xor
add
fimuls
jno
add
imul
popa
neg
testl
inc
jp
add
mov
adc
mov
cmpsl
fdivp
add
adc
add
cs
cmp
mov
cmpsl
fdivp
add
std
rcl
adc
je
jo
cld
gs
xchg
gs
mov
out
add
mov
inc
clc
xor
push
add
in
fmull
xchg
jp
push
push
int3
mov
sbb
adc
xchg
push
jecxz
sahf
adc
rorb
add
push
adc
mov
push
inc
cmp
adc
cmp
popf
call
cld
pop
add
adc
fisubs
stc
jns
insl
ficomps
and
cltd
jmp
add
popa
pop
call
xor
and
sub
jmp
leave
push
add
test
ficoml
add
push
inc
adc
dec
dec
or
jge
or
add
clc
call
filds
call
push
jmp
adc
cmpsb
rorb
in
hlt
dec
mov
xchg
sbb
clc
push
fstpl
lock
test
ljmp
or
imul
mov
add
push
add
dec
out
inc
outsl
ds
jne
xchg
call
incl
add
sbb
lss
add
push
out
imul
push
fistpll
add
sti
jne
addl
mov
ljmp
inc
aas
push
push
movlps
add
notl
testb
je
aas
push
push
outsl
sbb
add
idiv
jae
testb
adc
push
xor
mov
sbb
add
jmp
push
push
inc
clc
jne
pop
cmp
push
mov
iret
cltd
cli
xchg
mov
or
fiadds
and
mov
testl
out
out
leave
dec
mov
fimuls
cld
cmp
and
pop
add
and
add
push
in
sahf
lret
adc
add
xchg
sbb
pop
cli
lahf
adc
mov
adc
add
sbb
mov
adc
add
aam
es
es
push
xlat
lcall
adc
ja
clc
push
aas
mov
cmp
mov
xor
push
mov
sub
lcall
push
push
ja
add
adc
loop
out
pop
pop
jecxz
push
push
sub
fisubs
daa
call
int
out
fucom
inc
inc
fimuls
sub
fcoml
test
xchg
xor
jb
sub
pusha
gs
call
aad
or
push
add
or
call
cwtl
sbb
fdivrp
js
sub
fiadds
fldenv
aas
push
xor
cmc
ficoml
test
mov
jae
push
fimull
adc
out
dec
in
push
mov
ret
in
add
iret
cwtl
adc
clc
add
push
push
jo
shll
neg
pop
pop
inc
sti
and
rcll
lock
inc
adc
ss
mov
adc
add
aas
add
lock
hlt
or
or
add
push
int3
push
push
sbb
aas
add
pop
rcrb
mov
pop
jne
add
aaa
iret
sti
and
rcll
lock
add
add
push
push
call
test
jbe
fsubp
push
adc
push
inc
add
js
call
clc
jo
add
or
add
xor
xlat
dec
std
lret
repz
jae
mov
cs
fidivrs
mov
out
std
rcll
sbb
pop
std
add
push
inc
fidivrs
and
imull
pop
sbb
add
sbb
orl
clc
inc
fdivp
insl
and
cmp
popa
jae
je
pop
hlt
cli
popf
testl
mulps
popa
inc
ficomps
out
cwtl
or
add
jb,pt
mov
sub
clc
mov
clc
jb
call
cli
add
sahf
adc
mov
arpl
fnsetpm(287
jb
xor
adc
cmp
cli
sbb
stc
xor
out
clc
xor
lret
adc
sub
cmp
mov
shlb
test
jb
or
adc
arpl
clc
int
jle
loop
add
jo
sub
cltd
clc
mov
ss
fnstsw
mov
cltd
jae
scas
in
roll
pusha
adc
jo
std
pushf
loope
std
hlt
xchg
aas
jmp
in
push
push
pop
lahf
sub
adc
pop
dec
add
popf
pop
or
mov
inc
sti
add
adc
repz
push
add
adc
inc
ljmp
sub
clc
repz
fcoml
xor
into
dec
fsubrl
ds
cli
in
push
decl
sti
xor
or
add
nop
rolb
shrb
add
cwtl
inc
fdivl
fidivl
shlb
rolb
add
punpckhdq
rcl
add
iret
push
add
in
mov
adc
xchg
clc
mov
lds
sti
or
push
pop
fildl
add
fisttpl
xor
add
mov
testl
call
gs
mov
jno
inc
imul
pop
cli
clc
add
call
push
push
add
fisubrs
add
test
testl
push
cli
cmc
std
add
xchg
cmpsl
or
ficomps
mov
repz
rorl
repz
mov
arpl
shrb
add
hlt
jbe
mov
add
lcall
add
or
push
adc
rorb
cmc
fnstenv
push
push
stos
mov
adc
cmp
jb
push
cmp
outsl
movntq
fwait
push
out
out
xchg
mov
mov
fstl
out
xchg
xchg
lods
hlt
loopne
in
scas
and
aas
insb
ss
out
fcoms
loopne
outsl
call
or
jo
out
shrb
adc
cmp
stos
imul
adc
add
mov
pushw
adc
imul
cwtl
pop
mov
aam
imul
popf
adc
loopne
adc
loop
inc
xchg
push
rorb
jmp
lock
push
and
sub
fildll
mov
adc
shlb
rcrb
fadds
xchg
sar
pop
shll
push
fsubs
arpl
stos
push
cmp
insl
movsl
jmp
std
push
mov
adc
push
add
icebp
add
mov
jg
xchg
jecxz
test
adc
add
adc
add
call
mov
jns
ret
test
add
cmp
jno
mov
dec
adc
test
mov
je
xchg
popa
cld
idivl
push
push
add
stc
imul
adc
jmp
cltd
int3
leave
jecxz
mov
sar
fdivrs
dec
lret
jecxz
push
je
inc
ret
sub
call
mov
inc
int3
std
adc
add
stc
incl
mov
fnstcw
out
mov
mov
push
mov
xchg
rcrb
add
add
mov
xor
fstpt
js
and
or
incl
xor
imulb
add
sub
stc
mov
cmp
dec
mov
es
or
cld
ffree
add
addr16
popf
adc
dec
outsl
and
pop
cmp
insl
imul
test
aam
sbb
int3
add
adc
ror
xor
pop
sbbl
dec
jge
xor
insl
sub
test
rcl
sti
push
and
xchg
pop
adc
xlat
rcll
fimuls
movsb
xadd
sti
jno
ljmp
mov
fisubs
int
int3
or
push
add
mov
mov
xor
dec
add
pop
fs
add
push
in
sbb
push
adc
dec
imul
lock
jmp
lea
cmp
in
adc
ret
cmp
stc
cmp
mov
sti
sub
and
fwait
sub
adc
push
add
add
mov
pop
notb
xchg
jecxz
jo
xchg
add
xlat
add
jmp
test
les
outsb
inc
daa
sub
pop
js
enter
push
dec
icebp
xchg
sbb
stos
xchg
fdivrl
ret
or
adc
out
fdivr
pop
sbb
js
ficoms
cmp
icebp
and
dec
sqrtps
aaa
lldt
inc
push
ret
push
mov
push
add
clc
mov
jmp
adc
je
or
pop
ds
lea
push
push
roll
fsubrp
add
fimuls
pop
inc
in
cmpsl
add
cmc
fidivs
or
push
sbb
adc
inc
add
in
cmp
pushf
fldenv
fwait
out
mov
fstps
stos
out
xor
cmpsb
stc
call
fidivrs
test
push
xchg
psubb
out
mov
out
std
and
cmp
add
insb
shll
inc
mov
pop
jae
ficoms
fcmovb
pop
cmp
adcb
sbbb
or
push
push
push
addl
push
xchg
cmp
mov
or
add
fcompp
fdivr
out
push
out
sahf
arpl
jle
in
int3
fldenv
in
pop
fsts
clc
scas
call
arpl
mov
jbe
inc
das
int3
push
out
es
add
push
ja
test
out
push
out
sub
mov
sti
roll
inc
cmp
or
or
jmp
push
shll
pop
stos
rorl
add
xchg
shlb
inc
in
fstl
add
xor
mov
pop
loopne
pop
xchg
xchg
negb
sbb
push
fmull
call
insb
popf
fisubl
add
popf
ljmp
fsts
std
cld
inc
mov
adc
mov
fs
pop
loopne
pop
fsincos
pop
or
in
mov
daa
mov
sub
add
nop
shlb
lea
inc
call
test
pusha
and
not
mov
push
push
cmp
std
mov
xchg
clc
std
test
push
call
in
xor
js
pop
pop
ds
or
mov
loopne
incl
xchg
mov
es
call
pusha
add
add
adc
push
sub
aam
push
sahf
jmp
inc
pop
pop
sub
js
fstpt
adc
das
fdivrl
and
inc
cmp
inc
mov
cmpsl
push
push
xchg
adc
call
gs
add
out
cmp
mov
add
mov
adc
pop
outsb
movb
out
mov
add
ficoms
jmp
addr16
add
imul
fsubp
push
mov
add
ficoms
mov
xor
call
rolb
out
mov
add
adc
test
add
mov
cli
pop
inc
push
ljmp
or
and
jmp
arpl
add
aad
jl
into
out
push
dec
push
jmp
sub
jmp
mov
mov
jle
add
out
mov
pop
aas
sbb
adc
adc
ljmp
out
scas
mov
jg
jle
ficompl
pop
pop
sbb
outsb
xchg
jp
fidivs
or
jmp
mov
arpl
push
jmp
xor
aas
jmp
xchg
aam
jmp
mov
jmp
test
jecxz
fstl
push
pop
add
add
ror
nop
call
dec
sar
cmpsb
fimull
xchg
or
jmp
add
out
add
adc
dec
sldt
dec
arpl
jmp
je
and
sti
jle
aad
xchg
jmp
pop
ja
jno
movl
add
arpl
push
je
mov
mov
add
inc
mov
and
dec
pop
add
test
daa
into
jge
pop
rcrb
xchg
out
pusha
inc
add
jmp
fmuls
bnd
in
test
nop
rclb
jnp
adc
ret
or
adc
pop
inc
ficoms
dec
jb
aad
pop
hlt
subl
add
jge
mov
mov
add
adc
push
jp
adc
mov
add
jo
jmp
fdivr
inc
mov
adc
mov
adc
iret
addr16
cs
rorl
arpl
add
lcall
ror
sti
mov
mov
mov
outsl
loopne
daa
imulb
call
add
in
jg
add
or
out
dec
aad
push
rcrl
out
sub
inc
fcompp
das
or
sahf
fstps
nop
jl
test
shr
in
cltd
cmpsl
pop
pop
rclb
push
inc
imul
sar
jo
xor
ficoms
out
imul
or
call
or
pop
inc
test
or
nop
xchg
push
hlt
push
push
mov
push
mov
in
nop
data16
mov
in
push
add
and
faddl
stc
fstl
jae
add
dec
clc
call
jmp
jae
push
push
lock
inc
add
mov
pop
and
mov
mov
and
into
std
out
leave
push
out
pop
movl
int
cmp
or
mov
sub
push
add
inc
adc
push
inc
inc
aam
movsb
push
pushl
inc
push
inc
inc
xchg
les
shrl
repnz
push
fnsave
inc
add
adc
add
inc
jns
push
dec
ret
push
mov
out
je
push
cmovo
add
dec
or
aaa
mov
clc
add
mov
or
jo
push
add
add
mov
call
add
loope
cwtl
loop
mov
push
pop
pop
addl
cmp
lret
mov
inc
repz
mov
aas
fisubs
loope
or
je
xor
call
fdivrp
inc
aam
xor
push
mov
inc
int
mov
imul
mov
inc
stos
mov
push
das
mov
xchg
and
sbb
std
xor
imul
xchg
loop
add
mov
aas
ficoms
jb
xchg
vmovss
push
ret
cmp
negb
imul
fcompl
pop
loop
iret
sbb
inc
sbb
les
das
out
filds
cmpsl
inc
popa
adc
add
adc
xchg
sbb
sbb
jecxz
pop
xchg
push
adc
push
add
push
add
push
sub
out
inc
and
out
fdivrl
psrlq
mov
popf
outsb
ret
pop
sbbl
sbb
pop
lds
cmp
test
jae
daa
adc
call
arpl
or
adc
lds
loope
lds
lds
or
loop
jge
push
adc
jmp
lret
lods
rcrl
cmpsl
ud0
fstl
jmp
add
push
and
pop
sbb
add
adc
add
push
ret
add
andl
adc
push
fisubs
jns
mov
or
mov
jg
add
je
push
arpl
sbbl
mov
pop
stos
ljmp
lcall
mov
sub
inc
dec
push
jno
psubsb
inc
lcall
adcb
call
fisubrs
inc
or
jbe
jae
push
xlat
jmp
dec
clc
or
mov
dec
fimull
mov
push
testb
add
mov
xadd
sub
ret
cmp
fistpll
cmp
cmp
lret
add
or
mov
jmp
push
push
fcoml
divl
call
jbe
add
fidivs
or
into
jmp
adc
nop
inc
adc
test
add
adc
rclb
jae
fwait
inc
jecxz
cmp
adc
lret
xchg
out
ficoms
je
lretw
mov
add
sub
test
test
out
mov
adc
ss
adc
insl
gs
filds
adc
outsb
mov
cwtl
mov
iret
cmp
adc
add
inc
or
test
lret
mov
mov
std
es
out
fnsave
add
dec
push
clc
pop
push
mov
rcll
adc
mov
aas
xchg
push
ds
out
sbb
fs
mov
into
mov
inc
mov
inc
xor
mov
xchg
shlb
cmp
inc
mov
mov
and
mov
inc
in
xchg
jno
push
fs
sbb
mov
cs
arpl
pop
xchg
inc
add
adc
inc
paddw
clc
pop
or
bound
adc
inc
int
ds
mov
sub
adc
or
jg
push
adc
cltd
dec
sti
orb
add
or
pushl
aaa
dec
add
fisttpl
adc
sti
jne
in
or
sbb
jne
cltd
iret
push
pop
pusha
push
xor
fsubr
mov
ret
mov
testb
call
mov
inc
fidivrs
push
int
dec
xor
pop
pushf
mov
xor
sti
fstpt
ss
rorl
rolb
add
cmpsb
add
xor
add
add
in
aas
add
or
rcrl
add
scas
lods
add
fisubs
xchg
call
xor
xchg
es
and
test
or
adc
fidivl
dec
adc
out
push
cmp
add
and
add
adc
add
add
xor
je
into
xchg
movsl
pop
fwait
dec
mov
ficoms
out
fs
add
inc
ficoml
in
fimull
or
out
xchg
sub
adc
xor
pop
push
push
jmp
pop
pmuludq
or
mov
adc
sbbb
jmp
push
mov
add
fstl
add
xchg
in
pcmpeqb
and
fsubrp
lods
lods
insb
ficoml
cmc
and
test
and
ret
pop
mov
mov
pop
call
fdivr
je
fisttpll
pop
jo
lds
fisttpll
push
in
fstl
add
arpl
aas
pop
mov
cli
fstl
add
mov
outsb
call
add
adc
pop
out
lret
push
rorl
incl
rolb
pop
orb
push
add
xchg
clc
jne
xchg
push
adc
je
jl
pop
mov
push
push
jbe
insl
test
aaa
inc
outsl
push
add
xchg
inc
pop
sub
adc
out
pusha
adc
js
dec
lea
dec
lcall
in
xor
add
jbe
mov
push
add
stos
dec
mov
add
add
jns
add
mov
dec
ret
fidivrs
or
out
push
shlb
std
xchg
mov
neg
aaa
stc
mov
loop
jb
test
vmovq
fidivrs
sub
push
jl
adcl
add
add
mov
test
fidivrs
jge
fidivrs
or
repz
adc
mov
out
xchg
hlt
or
ss
std
inc
sub
ja
ficoms
adc
lret
add
cmp
jmp
movsb
call
pop
add
fisttpl
out
testb
mov
cmp
out
inc
lds
ds
add
mov
mov
sub
sub
rcrl
nopl
xlat
lds
out
sahf
cmp
xor
add
mov
push
pop
jmp
pop
xchg
sub
push
aam
add
sahf
sbb
loope
jno
jmp
and
test
mov
and
mov
push
mov
sbb
mov
out
cmp
cmc
adc
dec
mov
mov
jmp
cmpsb
ret
std
bound
adc
adc
pop
dec
add
jmp
xchg
and
aaa
pushf
aad
pop
sbb
jae
dec
push
cmp
xor
add
call
fisttps
roll
xor
lods
add
inc
cld
xchg
pushf
add
push
mov
sldt
or
std
jae
hlt
out
xchg
or
roll
cli
ja
addl
add
call
dec
mov
enter
lea
out
cli
in
mov
push
mov
push
or
or
add
out
add
add
out
dec
cld
call
fidivs
push
or
fildl
mov
fnsave
mov
test
shlb
xor
std
xchg
fisttpll
add
inc
aam
notb
mov
jae
sub
pop
bound
add
add
sub
cmc
inc
pop
sbb
call
out
dec
add
int
je
xchg
fimuls
rclb
inc
das
mov
push
jecxz
push
inc
out
push
and
jb
cmp
aam
movsl
mov
ficoms
push
ljmp
xor
and
push
add
or
push
mov
adc
mul
mov
ljmp
push
out
sahf
inc
in
and
add
sub
or
jecxz
or
mov
or
adc
mov
adc
xor
dec
push
lods
mov
jmp
inc
or
mov
inc
mov
adc
jmp
enter
inc
adc
stos
sbb
mov
xchg
jb
test
cmp
adc
mov
jb
call
ss
mov
call
push
mov
xchg
and
jb
repz
add
loop
or
idiv
ja
loop
and
addr16
add
dec
insb
push
incb
mov
loope
pop
ret
das
rolb
rorl
divb
or
add
aaa
xchg
lds
adc
push
add
xor
sub
mov
hlt
cmp
mov
and
xchg
enter
push
mov
or
add
mov
or
push
add
fsubrp
cmp
movsl
movsb
and
fidivrs
aaa
fdivrs
sbb
lahf
pop
fsubr
aad
shrl
adc
repnz
sub
add
inc
fisubl
mov
jp
xchg
movsb
inc
add
lods
cmp
cmc
jne
sbb
lret
add
inc
fidivrs
xor
loope
lea
add
stos
test
dec
jp
inc
das
or
fwait
icebp
xchg
fidivrs
xor
and
lds
push
sarl
pop
fisubs
shl
ret
int
hlt
inc
fisubs
pop
out
lds
imul
push
ljmp
push
out
xchg
add
mov
xchg
pop
ret
mov
nop
in
add
mov
out
push
xchg
cmpsl
pop
popf
xchg
cmp
dec
out
push
daa
xor
clc
out
fmuls
cmp
movb
mov
test
mov
adc
in
mov
mov
xor
mov
mov
movsl
xchg
push
add
orl
sub
mov
mov
std
jb
or
fstl
mov
xchg
clc
fidivl
inc
xor
xor
outsb
hlt
lea
cld
jmp
pop
dec
or
mov
or
add
std
push
call
sbb
dec
push
cmp
icebp
inc
xchg
sti
adc
fbld
incl
fcomps
xlat
sbb
je
cld
adc
xor
addr16
pop
or
or
mov
add
inc
aaa
lret
mov
adc
adc
jae
mov
adc
cld
jne
int3
jno
pop
popa
adc
add
pop
leave
inc
mov
xchg
fnstenv
fnsave
push
add
leave
stos
pop
or
imul
add
jmp
inc
and
test
aas
add
adc
push
push
test
cmc
pop
in
imul
add
stos
add
push
mov
adc
adc
mov
or
cmpsl
test
in
dec
in
mov
add
inc
ficoms
test
jmp
fisubrs
add
pop
adc
push
and
jnp
xchg
inc
push
or
cld
daa
lods
push
out
mov
mov
push
ret
add
mov
cmpsl
add
sti
addb
pop
lods
add
in
pop
and
jb
push
out
mov
ret
mov
add
xor
sbb
sbb
loope
notl
mov
lret
add
loop
xor
push
push
add
mov
or
imull
or
sbb
std
fdivrl
inc
jmp
notb
sub
xchg
push
add
mov
addl
cld
cltd
notb
cltd
or
mov
mov
rorb
insb
mov
std
mov
push
cld
sbb
and
cmpsb
mov
mov
shll
cmp
jmp
ret
mov
cmpsl
or
pop
int3
jae
push
push
pop
and
inc
fidivs
adc
cmp
int3
adc
pop
xor
je
xchg
or
add
cmp
lock
and
mov
mov
inc
ja
les
lret
add
or
mov
mov
add
and
ret
pop
pop
push
sbb
pop
push
dec
ljmp
incl
cli
adc
inc
add
add
mov
pop
call
xor
in
call
add
jbe
lcall
push
and
sbb
fisubrs
adc
jmp
push
push
insl
pop
mov
cmp
add
fisubrs
les
sub
addr16
cmp
pop
jo
dec
add
loop
cmp
int3
aaa
faddl
mov
lret
jecxz
movsl
cmp
mov
adc
mov
sub
sub
leave
mov
ds
popa
roll
xlat
lcall
xor
xlat
inc
fimuls
and
fistpl
push
mov
hlt
push
dec
mov
xor
iret
ss
cmp
pop
add
test
mov
jmp
popf
inc
pop
jns
faddl
sbb
out
call
ds
call
add
test
fstl
push
addr16
pop
adc
test
dec
dec
inc
bound
push
je
pop
inc
add
fstl
std
mov
shlb
dec
ret
add
mov
mov
mov
lret
xchg
add
pop
bound
mov
std
out
jns
call
jmp
cmp
insb
add
cld
imul
lret
sti
push
outsl
push
sub
testl
sti
dec
out
mov
mov
in
xchg
mov
pushl
cld
add
jno
add
popa
in
gs
add
xor
or
stc
out
insl
or
in
dec
shr
lret
cmp
pusha
clc
call
lret
ret
movsl
fisubs
mov
sbb
lret
xchg
repz
jne
cli
dec
fsubrl
lods
sub
fcoms
cmpsl
adc
add
cld
cmp
test
add
shlb
adc
mov
jge
fidivrs
hlt
xorl
add
jns
addr16
orl
add
dec
mov
jns
pop
add
andl
add
and
xchg
imul
cmp
jns
mov
fs
add
inc
pop
test
sbb
add
inc
int3
add
mov
mov
jb
xchg
popf
and
and
daa
dec
sbb
sub
sahf
movsb
stos
push
jo
sti
test
cmpsl
les
xchg
sub
pop
test
dec
mov
and
fistpl
push
les
jae
pop
push
add
add
loope
sarl
mov
std
ret
jae
and
call
ficompl
hlt
rcrl
mov
dec
stos
out
push
bound
cltd
inc
cmc
bound
push
std
dec
outsb
pop
sbb
pop
sub
call
addr16
add
jmp
stos
std
add
mov
xchg
inc
push
mov
test
mov
push
xchg
ret
add
jl
lcall
xchg
pop
push
push
and
or
or
adc
les
adc
or
fwait
mov
inc
dec
testb
je
xchg
cwtl
clc
std
pusha
rcll
les
call
add
add
push
ret
dec
xchg
inc
jbe
xor
inc
push
xor
and
jns
adc
adc
dec
inc
pushf
inc
and
scas
idivb
push
incl
outsl
cmp
xor
xor
add
dec
and
into
adc
sbbl
xor
and
and
out
stos
outsl
repnz
mov
fistpl
mov
lcall
mov
frstpm(287
mov
mul
sbb
mov
in
fistpll
in
fdivrl
or
cltd
das
lret
jbe
dec
adc
add
fwait
adc
push
sahf
mov
lds
mov
push
lods
cmc
fsubl
mov
movsl
sbb
addr16
add
push
pop
repz
dec
jb
mov
filds
or
or
inc
jb
sbb
das
cmp
mov
jb
or
add
xor
pop
xor
movsb
mov
aaa
jmp
shrb
rcll
push
add
mov
push
push
inc
xor
lds
add
inc
mov
adc
jne
rcr
jns
std
mov
pop
daa
test
rcll
push
push
mov
cltd
clc
jb
add
jmp
xor
jmp
sbb
inc
hlt
insb
movsl
push
add
jmp
add
stos
adc
addl
add
push
int3
push
movb
sti
adc
out
add
test
sub
adc
cmpb
jno
stos
push
in
add
hlt
sbb
pop
pushl
ret
aaa
ja
jmp
or
inc
dec
clc
pop
push
dec
jmp
sti
adc
or
sbb
in
adc
hlt
or
inc
or
jl
or
dec
xor
test
push
fmulp
mov
and
add
sbb
add
adc
test
mov
sti
out
add
cs
adc
test
mov
lock
in
pop
fstpt
cli
scas
mov
adc
xchg
mov
out
mov
or
fisubrs
or
imul
mov
call
pop
mov
stc
mov
add
dec
ficompl
mov
in
outsl
add
ficomps
fwait
add
push
shlb
out
push
dec
out
lds
push
sahf
stos
add
cmpsl
cld
int3
push
out
lods
or
ss
aaa
ret
inc
mov
push
lods
mov
ret
shlb
jle
in
cmpsl
mov
jmp
imul
adc
imul
mov
push
lds
xor
sbb
and
push
fucom
sbb
pop
adc
sub
or
or
adc
cmpsl
in
popl
cwtl
inc
aad
enter
jmp
cmp
mov
dec
and
mov
sub
adc
fstl
push
xor
out
out
add
jmp
aaa
add
testb
lret
xor
pop
xor
add
inc
call
decl
and
out
mov
xchg
shlb
adc
out
jmp
movsl
clc
je
cltd
inc
and
inc
push
dec
lds
add
adc
negb
mov
adc
ret
gs
cmc
or
dec
mov
push
add
cmp
pop
inc
call
add
sti
fists
movb
shll
sub
xchg
fbstp
lods
orb
mov
adc
xchg
mov
mov
and
sbb
fistpll
and
sub
pop
test
add
test
add
inc
mov
std
dec
xor
pop
xor
or
je
xor
fucomp
jecxz
scas
into
sub
decl
mov
adc
pop
call
out
ficoms
push
int3
push
out
in
int3
flds
xchg
sub
in
inc
or
vmovss
cmp
add
das
mov
cmp
mov
stos
add
fwait
iret
rcrl
jecxz
add
lret
pmaxub
add
pop
movsb
push
movzbl
cmpsb
add
pop
pushf
mov
nop
sti
adc
leave
iret
outsl
push
adc
mov
movsb
out
pop
dec
jecxz
or
pushl
add
jg
mov
je
mov
iret
orb
dec
sbb
aaa
add
adc
add
push
mov
jne
mov
or
dec
cltd
inc
or
fisttpll
jae
jae
out
fstl
add
dec
insb
es
add
xchg
or
pop
pop
add
mov
cld
cmp
lock
idiv
push
ljmp
add
pop
adc
and
subl
jno
decb
jbe
mov
cmpsl
loope
addl
push
inc
sbb
jecxz
push
fisttps
add
inc
pop
jno
xsha1
cmpsb
or
mov
inc
sbb
push
adc
sbb
add
xchg
xchg
lds
dec
and
loop
push
pop
jno
fbld
pop
add
fadds
mov
std
jae
clc
sbb
mov
call
test
cmp
ss
decl
ret
xor
or
adc
fidivs
cmp
fidivrs
andb
or
shll
cmp
fnsave
mov
and
add
das
sub
xchg
fbstp
add
xchg
mov
cmp
mov
add
sti
and
push
je
push
mov
mov
gs
std
add
pop
inc
or
and
andl
xchg
cmp
sarl
add
adc
mov
pop
inc
mov
mov
pusha
inc
add
add
sti
adc
mov
cmp
inc
ficoms
push
cmpsl
test
packssdw
cli
hlt
add
cmpsb
movsl
mov
add
dec
jb
ret
cmp
adc
inc
gs
popa
add
xchg
add
out
out
movsl
adc
dec
rorl
pop
call
dec
pop
xchg
call
adc
add
hlt
sub
hlt
sbb
hlt
adc
ficoml
jae
mov
mov
inc
call
jb
jae
test
fnsave
jb
inc
std
mov
popf
ret
xchg
call
fstl
add
sub
bound
or
insl
mov
jl
stos
push
call
in
cli
mov
sti
jne
popa
cmpl
xor
add
stc
mov
jl
fistl
add
jnp
add
negl
lock
shlb
call
cmp
dec
cmc
je
addr16
je
xchg
pop
inc
xor
adc
cmp
sbb
pop
xchg
call
inc
ja
fs
ficomps
inc
add
pop
and
dec
cmp
popf
cmpsl
jl
fmul
fs
add
jmp
mov
lods
adc
push
in
jnp
in
or
lock
fidivs
cmp
push
mov
int3
sub
fisubs
add
sub
cltd
pop
aam
add
pushf
lds
push
test
add
mov
and
stos
xor
arpl
mov
add
jb
add
bound
inc
pusha
add
add
adc
out
shlb
or
mov
rcrl
data16
out
or
mov
fisttpll
out
mov
dec
xchg
inc
fimuls
mov
mov
push
ret
inc
adc
and
int
lds
mov
mov
sbb
push
xchg
hlt
jae
mov
mov
je
ret
jmp
mov
or
adc
std
fsubl
pop
adc
or
movsb
aad
mov
inc
push
or
mov
dec
cmp
sbb
lock
popf
adc
rcll
push
jb
test
test
fiaddl
ss
mov
adc
dec
outsb
pop
adc
or
aam
pushf
adc
rolb
xchg
inc
fwait
mov
aas
mov
aas
push
pushl
xchg
xor
iret
data16
clc
inc
jg
call
mov
adc
adc
push
mov
xchg
in
mov
sub
packuswb
add
xchg
shlb
push
fists
jb
mov
push
push
sub
jae
mov
jg
jmp
inc
and
mov
inc
ja
push
adc
out
std
lcall
mov
je
jae
push
add
addr16
and
lahf
scas
je
lahf
scas
jae
push
pop
test
add
adc
repnz
mov
int3
loope
imul
pop
scas
jae
mov
call
std
pop
adc
and
push
add
idivb
adc
or
cld
jmp
sbb
stc
js
xchg
gs
cmp
loop
push
call
add
xor
std
fisttpl
sub
adc
adc
inc
fimuls
or
rcll
add
inc
cmp
ljmp
in
in
hlt
shlb
mov
and
sbb
adc
arpl
ret
or
lret
or
and
scas
int
faddl
xchg
roll
and
icebp
inc
fs
ret
push
add
out
lock
push
jmp
lret
jle
hlt
out
cwtl
fisttps
out
lods
dec
std
lea
out
inc
xchg
out
aam
add
push
add
sbb
mov
fidivrs
std
cld
or
mov
std
gs
stos
fnstsw
inc
jmp
jnp
clc
push
push
adc
jle
xchg
std
xchg
addb
popf
adc
cmpsb
rcrl
loope
push
jb
test
test
add
or
cld
fiadds
add
sbb
cmp
xchg
jae
push
push
or
fisubrs
sti
sbbl
pop
shlb
aam
push
add
add
push
or
push
call
cld
fimuls
test
fbld
dec
incl
inc
fistps
or
push
imul
mov
sti
subl
jno
add
fstl
mov
xchg
cld
adc
mov
ret
inc
xchg
adc
notl
shlb
adc
push
or
imul
adc
fimuls
test
mov
add
lds
ret
push
mov
cmpsl
jge
or
push
cmp
stos
adc
pop
stc
out
sbb
test
pop
lock
call
lods
cmp
popf
cmpsl
xchg
test
or
cmpsl
stos
add
inc
and
in
sti
push
or
dec
pop
fwait
into
loopne
lret
out
call
pop
push
xor
fldcw
xchg
loopne
sti
es
inc
fildl
mov
loopne
test
cltd
fwait
xchg
data16
cltd
sti
cmpsb
add
add
les
ficompl
fcomps
pop
shlb
fwait
lods
cmpsb
push
stos
movsl
xchg
int3
lret
in
push
out
movsb
lcall
adc
jle
or
lds
adc
jl
inc
cmp
sbb
push
repz
push
setle
add
gs
call
loopne
pop
add
add
xor
sahf
push
or
fstl
add
fiadds
xor
inc
loope
add
or
movsb
test
call
lcall
or
insb
xchg
adc
push
add
or
sub
or
jmp
fnsave
add
add
jb
adc
add
pop
push
filds
add
data16
adc
test
in
push
mov
jg
dec
pop
ret
dec
push
or
push
or
mov
in
scas
push
add
push
inc
test
lea
jne
xchg
push
in
mov
pop
xchg
jno
pop
add
movzwl
add
add
aas
add
cmp
ljmp
hlt
call
daa
jecxz
pop
cmc
jmp
jecxz
add
loope
push
fidivrs
lea
sahf
test
les
fimuls
mov
mov
mov
add
orb
lret
out
call
push
pop
pop
adc
test
add
cmpsl
popa
cmp
mov
add
call
test
add
stc
dec
push
and
push
lds
test
adc
inc
add
addr16
add
inc
or
gs
or
sub
notb
adc
cmpsb
fiadds
push
sti
sti
inc
adc
mov
js
test
cmpsb
shrl
imul
adc
cmpsl
in
and
inc
fiadds
repz
ficompl
daa
add
mov
lods
cwtl
xchg
outsb
push
xchg
sti
out
adc
adc
cmp
pop
addb
mov
bound
mov
scas
es
sbb
cmpsl
add
fbld
lods
hlt
add
divl
xchg
jbe
cmp
mov
popf
adc
arpl
cmpsl
add
in
push
pop
pop
add
jecxz
mov
inc
adcl
mov
and
fistps
xchg
arpl
int
adc
aas
lcall
jae
mov
fstl
add
adc
mov
in
sar
jecxz
std
jmp
and
push
add
inc
or
add
pop
inc
add
je
mov
test
inc
cmp
lret
dec
vmwrite
test
xor
sti
xchg
adc
call
cmp
pusha
ds
mov
adc
hlt
in
adc
sub
cld
orl
inc
jnp
nop
push
das
xchg
xchg
ja
std
ljmp
add
imul
aad
leave
cmc
xchg
push
int3
cmpsl
jg
fimuls
push
push
mov
push
push
xchg
add
fidivrs
aas
std
add
clc
pop
pop
mov
add
daa
bound
out
ja
push
jo
dec
add
add
inc
pushf
aaa
adc
pop
adc
js
add
ja
jae
xor
inc
or
out
hlt
jno
or
shrl
idivl
fdivp
ret
je
repz
lock
adc
fidivs
pop
push
cmp
xchg
mov
in
adc
inc
ficoms
sub
ror
pop
aas
jp
cmp
and
dec
jecxz
mov
rorl
cli
inc
add
out
fiadds
add
mov
icebp
movntq
mov
lcall
addl
nop
in
jl
ret
lea
out
sahf
add
and
jmp
movsb
cmp
icebp
pop
and
jb
sbb
pushf
push
mov
jg
or
inc
xchg
pusha
push
je
cmp
sbb
xor
pop
push
cwtl
into
fiadds
roll
std
and
jp
ja
sti
lcall
call
jb
mov
fstl
ret
fisttps
dec
not
pushl
je
sub
xchg
inc
popa
pop
push
jae
movsb
push
push
mov
fucom
xor
sbb
decl
cmpl
adc
adc
fsubs
add
adcl
adc
lods
lods
cmp
inc
lods
push
push
mov
cmp
sti
roll
sar
cmp
and
movb
push
call
sbb
or
pop
adc
vcmpsd
add
popf
xor
or
sti
push
lea
push
fsubp
adc
xchg
jmp
fiaddl
lds
aad
aas
fdivp
cwtl
jp
jno
inc
cmp
mov
sub
cwtl
andl
call
push
test
jae
jp
addl
xor
sbbl
push
mov
mov
in
xchg
ja
mov
ja
mov
dec
andl
push
aas
add
sub
add
jo
pop
adc
sbb
inc
push
stc
jne
cmpsl
add
rcrl
xchg
movsb
lahf
pop
push
jmp
mov
jb
pop
mov
xor
mov
xor
negl
xchg
stos
sbb
ds
add
lea
adc
roll
jecxz
in
hlt
fadds
mov
inc
cmpsl
clc
icebp
adc
push
rorl
pop
fwait
mov
add
mov
cld
aad
fs
std
pop
data16
adc
mulb
js
popa
loop
xchg
rclb
sbb
push
sbb
test
outsb
int
cltd
add
negl
dec
clc
call
ljmp
int
sbb
mov
pop
mov
cli
popf
out
inc
movsl
push
adc
call
adc
mov
push
in
sbb
mov
test
push
movsl
jno
out
inc
cld
ljmp
aam
ljmp
je
add
xlat
sti
push
mov
jg
mov
test
movsl
decl
test
movsl
roll
out
inc
pop
pop
mov
cltd
in
push
mov
inc
or
adc
pusha
mov
das
shrb
push
cmp
mov
add
iret
notl
iret
cli
push
ficomps
or
mov
shlb
imul
in
cmp
add
mov
inc
ljmp
mov
add
dec
les
pop
xor
jae
add
arpl
adc
xchg
add
jmp
popa
js
xor
xchg
cmp
sbb
add
push
inc
add
adc
add
lds
out
or
test
ja
movb
adc
test
insl
popl
xor
repz
dec
sub
rclb
pusha
sbb
sbb
sbb
adc
out
loop
testl
fimull
xchg
xor
fisttpll
fwait
pop
xchg
lea
cld
out
rcrl
out
je
pop
pop
loop
jae
add
mov
mov
inc
cld
out
arpl
push
xor
sbb
test
push
out
mov
mov
mov
inc
adc
out
adc
and
and
jo
std
out
sqrtps
shrl
inc
or
add
add
aas
shlb
sbb
popf
adc
and
std
xchg
in
dec
fxch
aad
movsl
sub
bound
sbb
fstl
test
mov
cwtl
inc
add
ret
and
psubsb
push
stos
sti
repz
movl
int
out
mov
cld
and
push
test
mov
addb
cmp
or
add
shlb
js
cmp
add
sbb
cmp
pushl
cmc
pop
data16
add
inc
xchg
sbb
xor
pop
into
inc
jg
cmp
fadds
jb
dec
or
fisubs
add
jmp
mov
pop
push
jp
or
js
sub
jb
sbb
loop
data16
rcl
or
pushf
data16
pop
std
fidivrs
mov
addr16
movsl
leave
add
mov
add
daa
push
mov
ss
mulb
xor
dec
shl
rclb
cld
cmc
test
out
je
xchg
test
fisubl
js
out
loopne
dec
adc
pop
repnz
sbbb
ret
push
sti
mov
xchg
es
cmp
in
shl
mov
and
jle
es
int3
xchg
mov
inc
pop
xchg
int
stc
inc
ficoms
xchg
sbb
pop
jns
pminub
out
push
xchg
aad
ficoms
inc
or
pop
and
pop
inc
add
je
add
and
add
fs
push
or
into
rcll
into
addb
je
mov
fs
call
jae
js
dec
dec
orl
cmpl
fldcw
and
xchg
inc
fldcw
sbb
popf
sub
into
jl
lods
in
add
cwtl
call
add
adc
and
sbb
mov
int
add
int3
fimull
add
adc
add
and
or
cmpb
cmp
cli
mov
push
pop
mov
sti
add
mov
adc
test
incl
mov
adc
mov
push
addl
cli
dec
je
in
or
leave
negl
push
or
movsl
dec
lea
inc
jg
aas
xchg
jns
iret
mov
add
add
je
mov
stos
jne
add
adc
xor
mov
pop
jmp
dec
fstps
leave
sbbl
jg
ficompl
inc
insl
test
xchg
mov
add
or
test
mov
jnp
std
jns
cmp
mov
pushf
jne
push
gs
in
cmp
add
insl
mov
ds
push
std
adc
add
shr
addb
out
jl
out
xchg
enter
enter
enter
push
inc
cmpsl
popf
adc
add
fidivrs
jge
jl
jle
jle
imul
adc
xchg
sub
mov
les
jbe
faddl
imulb
fiaddl
lods
pushf
mov
out
push
xorl
int
adc
out
push
xchg
or
add
and
and
pop
in
add
das
int
loopne
mov
sbb
je
adc
fiadds
lret
icebp
cld
out
imul
jge
std
shlb
dec
jae
dec
loop
rcl
pop
or
cwtl
jge
jmp
dec
jnp
cmp
loop
pusha
js
hlt
icebp
es
jmp
jns
inc
jns
roll
out
scas
xchg
inc
push
loopne
add
fiaddl
aas
pop
mov
xor
add
shlb
jns
cmp
mov
adc
adc
jmp
mov
pop
lea
call
mov
sti
mov
es
adc
lock
aam
addl
cmp
add
jl
js
in
xor
cmpb
xchg
mov
ficompl
mov
stc
mov
xchg
sbb
fisubs
push
ret
lret
add
add
hlt
inc
call
mov
cmc
imul
add
lds
pop
je
jle
cli
cltd
jle
repnz
nop
adc
inc
add
add
fmul
cmpb
imul
inc
fcompl
adc
fs
add
incl
pop
mov
jg
addr16
xchg
js
add
imul
push
jbe
fs
popa
adc
faddl
idivb
push
mov
mov
inc
nop
inc
pop
mov
int3
and
nop
movsl
jl
xchg
std
fidivrl
and
testb
stc
mov
or
mov
push
movsb
pop
mov
jp
sbbl
jmp
push
subl
imul
mov
sbb
pop
add
in
call
pop
testl
sahf
add
pop
push
into
ja
ss
ficompl
sbb
add
jp
jmp
out
or
cmp
std
jmp
fmuls
jmp
popa
arpl
call
mov
add
test
lds
sub
loopne
mov
popf
add
add
test
in
mov
adc
incl
push
mov
or
dec
or
rorb
push
call
mov
adc
add
mov
add
jge
decl
xchg
rcr
arpl
loopne
jb
dec
jge
test
mov
incl
push
mov
or
or
imul
xchg
cld
incl
mov
add
xchg
dec
hlt
push
cmp
mov
jno
inc
jp
jp
fiadds
adc
xorl
lcall
jle
cmp
add
aaa
jge
add
add
std
outsb
fiaddl
add
in
xor
mov
sub
sub
aas
sbb
imul
add
xchg
push
arpl
sbb
js
pop
test
std
rcll
sbbl
push
mov
mov
add
rcr
pop
push
adc
mov
rorl
lahf
adc
addl
out
ficoms
outsb
pop
ficoms
out
ss
dec
push
pop
xchg
jbe
mov
cwtl
daa
add
pop
jne
add
call
add
adc
pop
push
sub
mov
sub
movsl
sub
pop
test
sbb
dec
lock
dec
aam
inc
mov
xor
adc
or
adc
jmp
sub
jae
adc
pop
jb
fimuls
jmp
frstor
jb
or
lcall
test
ficoml
jmp
fldl
lret
mov
push
adc
cmp
xchg
pusha
dec
or
js
add
mov
pop
and
or
orl
ret
adc
push
int
stc
jne
test
fldl
mov
fimuls
mov
mov
push
repz
or
xor
add
and
std
cmp
mov
jo
mov
aas
adc
xor
je
mov
cmp
and
cltd
xchg
std
test
push
call
mov
inc
test
pop
pop
mov
ret
push
mov
cmp
push
xor
testl
pusha
jne
gs
jns
adc
add
out
add
sub
fidivrs
add
xor
ret
in
sub
add
wbinvd
gs
cmp
imul
imul
push
mov
add
push
mov
stc
stc
aad
add
in
ret
jae
mov
fiaddl
jnp
add
mov
pop
cmp
out
push
fs
rcr
sbb
pop
aad
int3
sahf
cld
sarl
jge
jmp
jae
sbb
hlt
or
loopne
incl
adc
xor
pavgb
jl
aaa
jb
mov
jae
mov
mov
add
jnp
jl
sbb
out
and
aas
sarl
jp,pn
je
les
cld
fdivrl
bound
fsubrp
imul
lcall
push
fiadds
or
sbbl
sbb
or
push
ficoml
mov
pop
mov
rcl
mov
add
addl
sub
push
iret
lret
add
or
xchg
add
pusha
sub
pusha
sub
das
sahf
sub
jmp
stc
imul
add
or
add
dec
rorl
push
pop
add
xchg
call
lock
add
pop
cmc
push
add
sub
decl
jg
xchg
add
in
mov
sub
or
adcb
cmpl
add
ret
push
mov
or
sti
xor
hlt
jnp
and
jle
shlb
cmp
sbb
fisttpll
or
add
or
dec
jne
fidivrs
mov
push
call
imulb
jnp
cli
in
add
push
idiv
cltd
loopne
call
push
ss
pop
push
adc
addr16
xor
lods
pop
jnp
pop
or
gs
loope
mov
add
jp
sbb
cld
xorb
jl
jb
inc
cli
inc
cltd
test
xchg
adc
pushf
sbb
ret
lcall
mov
test
mov
adc
sub
loopne
pop
arpl
xor
jo
push
aad
js
xor
call
sahf
and
out
outsl
test
adc
fnstcw
or
mov
jns
rcrl
add
fwait
lods
not
cmpsl
out
testl
dec
jg
in
shlb
mov
ljmp
std
insb
sbb
insl
jae
push
dec
movsl
jmp
fbld
std
fs
add
ficoms
add
xchg
xchg
inc
aad
rorb
repnz
call
dec
add
jmp
pop
and
add
sbb
fdivrs
sti
jb
push
push
adc
leave
mov
fstl
shl
xchg
int
lret
inc
loopne
lds
jns
pop
leave
lds
add
loopne
mov
sahf
dec
or
mov
xor
mov
call
inc
aad
xor
push
and
mov
push
call
xchg
call
mov
divb
inc
cld
cld
inc
add
add
inc
push
jp
ja
rcrb
roll
inc
cld
mov
mov
add
push
cmp
push
add
das
stos
ja
push
scas
imul
sbb
add
sbb
add
jns
lea
nop
add
jg
jnp,pn
pop
xor
ds
jle
arpl
outsl
sti
test
data16
jp
fistpll
lock
add
imul
adc
jp
rcl
xorb
divl
out
ficoms
test
sub
lods
pop
inc
pop
or
cmpsb
add
xchg
mul
sub
pushf
or
dec
addr16
fisubs
lock
movsb
jnp
lret
add
xchg
and
sbb
lds
adc
push
add
jmp
or
js
pushf
stos
imul
test
imul
test
popf
jnp
fimull
aad
in
imul
add
add
rcll
adc
ljmp
xchg
fs
lcall
add
jmp
inc
add
in
cli
popf
shr
jmp
push
ret
mov
xor
xor
mov
rorl
dec
fsubs
out
data16
fstl
or
bound
cmp
loopne
jp
repz
aaa
adc
ficoms
add
in
add
jmp
dec
push
pop
cwtl
sti
inc
cmc
add
pop
cltd
rorb
jg
add
xchg
ret
mov
sub
push
or
push
imul
call
mov
call
jmp
add
dec
jb
cmp
xor
xlat
pop
pop
ja
sub
fcoml
push
repnz
icebp
push
shl
in
push
ljmp
aaa
popa
cmp
mov
or
aaa
jmp
out
adc
pop
add
shr
mov
jle
cmp
inc
je
out
cvtdq2ps
cmc
add
pop
jle
cmpsb
jae
mov
xor
repnz
xchg
icebp
or
push
je
mov
psubb
sarl
add
repnz
imul
out
sbb
add
cmp
pushf
pop
add
push
sub
sub
adc
mov
pushf
jge
push
scas
mulps
je
pop
out
xchg
adc
add
mov
mov
aad
sbb
push
push
jg
push
fcmovb
add
out
ficoms
mov
fdivrp
in
jmp
addr16
lea
jg
addr16
mov
adc
xchg
pop
aaa
xchg
add
ror
xchg
addr16
dec
pop
jmp
scas
add
andl
mov
cld
adc
adc
sar
arpl
arpl
adc
and
fisttpll
fstpl
subb
scas
addb
ficompl
sbb
stos
adc
push
push
xor
call
push
rorb
add
xor
call
aas
mov
in
pop
inc
add
or
ret
xchg
inc
add
adc
fbld
in
rcrb
adcl
push
fstl
mov
dec
cld
jbe
cmc
adc
adc
jbe
cmc
or
adc
ss
or
movb
loopne
dec
iret
dec
movl
push
xlat
push
jle
add
inc
add
test
idivl
mov
adc
sbb
dec
sbb
pop
lahf
inc
ret
inc
xchg
ljmp
cmp
mov
fimuls
lock
dec
mov
add
ret
scas
ret
ja
add
faddp
or
jnp
in
ja
add
and
fistps
push
ss
cmp
inc
pop
sbb
add
rcl
dec
add
jne
pop
push
add
and
add
mov
sti
arpl
mov
dec
pop
aaa
xchg
sbb
jns
push
jbe
inc
movb
std
rcrl
pop
lods
jns
sbb
fmulp
call
arpl
fwait
or
mov
adc
sub
adc
roll
arpl
push
into
lcall
mov
push
sbb
add
arpl
or
int3
ljmp
add
or
mov
mov
repnz
add
mov
add
out
add
adc
mov
ja
test
gs
dec
icebp
jmp
pop
mov
xor
jne
lea
pop
fstl
test
idivl
mov
rorl
lea
int3
sar
jno
pop
mov
bound
aas
jo
pop
xorl
add
lock
popf
fcoml
pop
das
pextrw
mov
test
jb
fnstsw
std
sti
popf
ret
and
mov
sub
fisttpll
loop
rdtsc
jge
inc
xchg
inc
or
add
push
jg
prefetch
shlb
cltd
stos
insb
ja
stos
repnz
movsl
push
ds
insb
adc
cmpl
movb
mov
inc
push
add
ljmp
lcall
mov
test
mov
or
add
lea
cltd
test
mov
xchg
add
inc
je
push
jb
shlb
adc
insb
bound
fidivs
shrl
wrmsr
repnz
mov
push
inc
data16
adc
arpl
pushl
xor
js
jnp
ja
push
sbbl
std
lret
daa
push
inc
fdivp
cmp
pop
mov
or
imul
fsubp
mov
jbe
loope
out
sub
xchg
sub
or
ja
add
add
stos
mov
fists
dec
add
mov
jnp
ficoms
pushf
add
pop
bound
dec
or
inc
std
lods
add
xchg
daa
sti
int
mov
sahf
fisttps
ficomps
es
or
sub
xchg
fnstsw
aam
les
lods
add
push
jo
sbb
out
and
push
mov
mov
or
push
fsubr
ret
xchg
xchg
jecxz
add
mov
test
jmp
mov
sub
imul
push
add
lcall
mov
xchg
adc
andb
pop
mov
cltd
fsubrl
insb
pop
xchg
jae
pop
std
sbb
mov
or
xchg
cmp
inc
jb
add
pop
repz
jmp
rolw
bound
aas
cmp
or
add
pop
mov
push
xchg
inc
cmp
mov
or
pop
xchg
fists
iret
adc
xor
add
pusha
les
movb
add
adc
pop
mov
test
xor
ret
dec
xor
test
pop
cmp
cmp
adc
mov
and
mov
xchg
mov
add
cltd
inc
sbb
add
cld
jne
filds
pop
pop
je
aaa
mov
jne
add
inc
out
shlb
je
loop
lods
push
out
jno,pn
push
lods
dec
aaa
and
pop
pop
mov
std
mov
adc
lods
popa
out
pop
jb
in
daa
rclb
adcl
aas
push
cmp
addr16
or
and
in
pop
inc
mov
push
or
jo
fidivrl
xchg
fbld
rolb
jmp
add
addb
pop
pop
dec
push
mov
fisubs
mov
cwtl
mov
popf
pop
mov
addl
out
addr16
push
jle
inc
push
jb
inc
push
mov
adc
cmc
fsts
out
sub
lds
or
imul
bound
cmp
data16
adc
adc
imul
shr
shlb
jo
push
insb
inc
lods
xor
imulb
sub
hlt
mov
inc
jno
adc
pop
lret
push
xchg
xchg
pop
aam
push
inc
icebp
adc
cld
outsl
pop
std
popa
and
call
xor
nop
jnp
add
fisttps
je
push
push
adc
call
lcall
jmp
push
shl
insb
pop
std
jae
or
fcomps
sti
jmp
out
shl
insb
pop
std
fistpl
dec
or
sub
or
cmp
dec
cmp
enter
pop
sldt
iret
js
jle
stc
incl
sbb
cmovo
inc
hlt
je
cli
je
mov
cmp
add
loop
adc
sahf
imul
mov
add
adc
adc
jge
pop
push
ljmp
in
cli
adc
ficomps
je
jns
xor
ljmp
std
aas
add
push
cmp
addr16
fidivs
dec
add
daa
add
mov
fs
xchg
rep
adc
push
mov
add
adc
mov
cmp
pushf
cltd
std
insl
pop
aam
push
pusha
pop
sub
push
add
fadd
and
fidivl
sar
fsubrl
jecxz
clc
mull
mov
outsb
je
inc
clc
repz
outsb
adc
pop
cmp
call
xor
jo
inc
shlb
or
imul
fdivr
iret
shl
adcb
pop
jecxz
in
dec
add
fcmovnu
insl
cwtl
add
fsts
stc
inc
cmp
mov
adc
loop
sub
mov
or
adc
sub
nop
fsubp
jl
std
shll
and
sbb
inc
push
adc
sbb
neg
rolb
adc
cmp
mov
xchg
ljmp
jmp
adc
jg
ficoms
add
push
mov
jle
fidivrl
jae
xchg
pop
or
adc
jmp
add
scas
push
adc
sar
mov
xor
fsts
fs
dec
push
and
push
int
push
fdivs
pop
pop
pop
add
cld
dec
jmp
out
ljmp
inc
and
push
jmp
sub
mov
in
shlb
push
repz
divl
pop
pop
adc
xchg
inc
mov
and
cmp
jb
jl
mov
flds
dec
push
jge
push
pusha
or
cs
dec
rdmsr
rolb
push
lcall
test
les
or
pop
ficomps
mov
pop
in
cmp
xchg
jo
loopne
divl
fidivrl
outsb
add
addr16
add
or
rorl
mov
in
xchg
imul
sbb
or
loope
push
add
icebp
ret
push
in
inc
je
push
mov
push
inc
xchg
and
mov
pop
sub
xchg
inc
pusha
xor
outsl
ficoml
iret
sar
out
add
push
cmp
or
out
jno
sahf
jle
mov
push
mov
shr
adc
stos
cs
add
adc
fsubrp
push
inc
ljmp
shl
sub
movntq
mov
leave
xchg
push
mov
add
mov
cmp
or
inc
adc
adc
int
sti
rorb
add
out
fstpt
out
cwtl
mov
sub
xchg
in
pop
gs
call
fld
addr16
adc
frndint
adc
rcrb
push
std
int3
dec
aas
jmp
and
jge
inc
jmp
ja
cld
sub
mov
aas
jmp
sbb
jmp
lods
dec
add
add
in
push
inc
jmp
pop
adc
mov
add
sti
popf
push
pop
arpl
xchg
add
xor
add
mov
repz
mov
push
std
push
cld
fsubp
fiadds
xor
add
cmp
mov
sqrtps
inc
sldt
cmp
xchg
aaa
cmp
clc
arpl
mov
dec
call
std
jg
lods
cld
inc
pop
sbb
sarl
movsb
add
mov
lds
add
pop
cmp
inc
mov
pop
gs
cs
std
pop
fisubs
cld
subl
je
add
adc
outsb
cmp
lock
stos
gs
pop
adc
lods
clc
subb
std
and
jae
out
in
jecxz
psubusw
inc
push
or
mov
stos
clc
push
in
loope
pop
test
cmp
mov
adc
jp
or
fldl
out
push
pop
cs
add
mov
orl
out
fisubs
sub
mov
lahf
out
int3
inc
add
dec
sub
jecxz
sub
add
mov
shl
xor
lea
popa
lret
insb
push
stos
orb
fstl
jmp
daa
inc
repz
dec
adc
mov
out
jmp
lcall
cs
in
test
mov
push
ret
sbb
fsubl
mov
jmp
dec
adc
loope
les
cld
movsl
es
jmp
rcr
adc
in
mov
push
je
sub
sar
imul
cltd
in
push
fcoml
xchg
mov
std
aam
adc
push
jae
jbe
push
imul
std
add
add
in
dec
or
cmp
ja
cmp
nop
adc
jne
imul
adc
inc
scas
imul
incl
aad
and
push
ss
dec
ds
jae
nop
jns
ja
scas
call
jge
adc
inc
rcrl
add
std
scas
inc
call
out
repnz
jmp
dec
cmp
incl
movb
movl
add
imul
fidivrs
add
jae
cmp
loop
add
fimuls
push
lock
add
pop
or
std
mov
aaa
pop
add
idivl
ret
hlt
mov
sub
es
pushl
sahf
sti
adc
jnp
add
push
jnp
inc
ljmp
xor
enter
int
or
cmp
rcrb
hlt
push
sbb
call
or
divl
mov
je
mov
mov
mov
dec
dec
arpl
sbb
aad
repz
xchg
loopne
flds
pop
stos
and
cmp
push
cmpsl
dec
pushf
adc
mov
cwtl
cmp
jnp
aaa
out
jno
pop
or
ror
int
fadd
pop
xchg
mov
mov
ret
fisubs
adc
clc
aad
daa
add
push
test
daa
loop
testl
jl
push
xlat
sbb
mov
fsts
push
bound
jns
in
sbb
jecxz
jb
lcall
popa
push
je
mov
pop
adc
inc
std
push
pop
push
je
int3
test
push
in
mov
adc
add
push
es
out
xor
sub
in
pop
adc
popf
dec
test
cmc
and
mov
adc
jo
dec
cmp
mov
mov
or
add
in
inc
pop
mov
cmp
das
jmp
lahf
std
ljmp
adc
or
mov
test
call
cmp
jae
sbb
jg
jmp
je
shlb
ljmp
and
mov
orps
icebp
sbb
push
jo
mov
out
lcall
add
xchg
shlb
std
nop
mov
rorb
or
inc
xchg
clc
add
adc
fiadds
imul
jo
clc
icebp
inc
jbe
arpl
pop
cmp
inc
add
aas
fidivs
or
fs
push
sbb
std
dec
xor
adc
clc
aad
outsb
cmp
inc
sbb
push
cmp
cltd
stos
pusha
adc
mov
dec
idivl
push
gs
cmp
add
scas
push
mov
pop
std
push
fiadds
push
add
or
stos
adc
pushf
pop
sub
or
xchg
fs
dec
xchg
push
push
out
nop
gs
pop
add
in
repz
dec
xor
dec
push
mov
fsubp
jno
push
cmp
adc
mov
adc
sbb
lea
adc
mov
mov
dec
out
pop
push
and
add
mov
fldcw
mov
cmpb
inc
mov
push
or
lea
nop
dec
mov
mov
fs
cld
mov
dec
test
add
and
mov
mov
jg
test
jae
fnstsw
adc
loop
std
lods
sub
data16
inc
jb
iret
push
pop
and
or
cmc
pushf
fs
call
pusha
cmpsb
dec
mov
cmp
push
aad
push
push
into
xor
std
add
sbb
adc
mov
mov
push
cmp
push
dec
inc
push
push
testl
addr16
adc
rclb
push
mov
in
lock
das
rorb
je
cmp
pop
das
xor
shlb
jmp
cmp
pushl
jl
adc
in
cmp
adc
cld
add
push
pop
adc
push
pushl
adc
cmp
shlb
add
xchg
and
jle
and
jbe
add
inc
lds
fiadds
in
pop
lds
test
xchg
push
enter
sub
into
icebp
mov
add
adc
pop
leave
cld
jmp
idivb
fiadds
fidivs
inc
inc
dec
pushl
push
ret
lds
xor
imul
and
je
add
repz
push
inc
mov
call
cmp
mov
jp
push
out
mov
mov
or
dec
int
out
push
cmp
push
sbb
push
and
int3
push
popf
sbb
push
insb
mov
in
sub
inc
mov
pop
xor
cmpsl
add
adc
sar
adc
sarb
inc
fadd
repz
inc
adc
pushf
push
fists
pop
dec
mov
push
push
and
in
add
stos
adc
loopne
cmpsl
xchg
loop
fs
movb
hlt
mov
std
adc
into
fstl
jae
movsb
roll
push
popa
push
bound
sbb
jne
add
fstl
inc
xor
lahf
push
jge
dec
inc
pop
jo
ret
mov
xor
popf
inc
ljmp
jecxz
call
jae
jg
std
decb
icebp
pop
decl
icebp
pop
pushl
idivl
cmp
clc
sbbb
rolb
jle
adc
cli
adc
and
inc
push
addb
push
mov
add
jno
inc
or
je
fiadds
jo
cmp
sti
jne
xchg
into
decl
sti
push
cmpsl
ret
mov
incl
or
repz
add
sahf
fwait
dec
ret
scas
mov
fs
int3
push
add
scas
adc
std
enter
cmp
add
or
std
aaa
rolb
fisubrs
mov
mov
je
shlb
push
mov
pop
jmp
fucomp
ljmp
fcmovne
pop
sarl
mov
add
int
mov
rolb
test
mov
sar
or
push
push
insb
in
add
in
pop
cs
fidivs
call
ds
inc
sbb
ficoms
into
roll
or
mov
cmpsl
rcr
lea
add
pop
xchg
rcll
shl
mov
dec
and
sbb
out
xor
es
xchg
lods
or
loope
jmp
cs
ds
dec
add
dec
inc
and
int
popa
lea
push
adc
fsub
sbb
adc
not
imul
mov
aas
cmp
push
fimull
pop
xlat
sbb
xor
inc
mov
outsl
add
aaa
sbb
iret
call
lds
dec
inc
adc
jo
stos
fstl
jae
dec
lock
push
sub
add
push
call
add
cmp
jmp
mov
lods
clc
fsub
xchg
dec
ds
push
outsl
cld
add
add
call
out
add
xor
dec
adc
outsl
cld
shl
aad
cltd
xchg
add
mov
orl
xor
add
push
mov
push
js
mov
sbb
fisubs
jbe
push
std
jmp
popf
cld
sbb
pop
sub
add
sbb
push
adc
insb
or
sub
jne
inc
push
push
imul
push
stos
pop
std
lret
sub
xchg
rcrb
call
test
dec
cli
xchg
push
fisubrs
leave
push
scas
mov
pop
push
in
push
std
sub
push
adc
dec
sbb
ficoms
fmull
sbb
mov
add
out
sbb
mov
mov
out
into
mov
cmp
push
or
movntq
jno
aam
lret
shl
jle
or
mov
inc
test
pusha
pop
sub
clc
inc
inc
addr16
dec
fimuls
out
add
lods
leave
or
mov
or
movsl
or
xchg
xchg
shl
mov
xchg
in
jmp
sub
test
or
jb
psrld
imul
fildl
add
cmp
ja
adc
das
fadd
sub
mov
cmp
lahf
fstpl
cmp
out
mov
iret
lcall
lea
rcr
cmp
inc
jmp
push
inc
std
sahf
pop
push
je
xchg
adc
ficoml
vpshufhw
notl
push
decl
aad
inc
movl
inc
or
and
add
fcoms
lock
push
cld
adc
cli
iret
jae
pop
xor
jo
loopne
add
rcr
mov
mov
mov
xlat
push
or
std
je
mov
push
decl
rclb
inc
aaa
or
mov
fstp
int3
repz
icebp
inc
fiadds
add
pushl
mov
ret
in
imul
aas
sti
add
rcl
pop
jo
add
ficoms
std
xchg
testb
jmp
dec
push
andl
or
test
ljmp
cld
jmp
stc
aas
fisubs
pop
add
mov
xchg
addb
sbb
in
pop
jge
ficoms
out
add
sub
or
pusha
icebp
xchg
cmpsl
ljmp
aam
jmp
adc
add
xchg
sti
push
push
mov
push
mov
out
addr16
out
jl
or
scas
sti
pop
aam
jl
and
out
ficoms
movsb
arpl
adc
push
in
and
insl
adc
mov
cmp
dec
in
js
ret
cmp
call
xchg
out
verw
frstor
push
bound
mov
rclb
adc
insb
cmovae
loope
mov
bound
int
mov
test
std
hlt
insl
and
push
or
jmp
cwtl
lea
movsb
insl
shl
push
call
fisttpll
add
sbb
cmp
fcmove
jmp
popf
mov
or
push
fildl
jmp
jmp
fcoml
testl
iret
add
or
xchg
inc
dec
mov
jle
add
inc
mov
jo
dec
push
in
pop
inc
aam
test
add
sub
push
incl
push
in
into
mov
fadds
rorb
adc
sub
and
ja
jnp
sbbb
push
int3
mov
out
sub
jbe
push
enter
push
std
cmpsb
vmovapd
add
insl
icebp
dec
jae
mov
mov
imul
incl
adc
add
es
rcr
lds
fidivrs
es
dec
pop
add
add
or
jg
fisubrs
push
jmp
jne
inc
inc
popa
sub
adc
fists
out
lds
lods
mov
mov
fadd
sub
fildl
lods
mov
out
or
or
dec
jmp
outsl
add
adc
icebp
nop
test
adc
add
xchg
pop
push
pminsw
leave
sub
ficoms
arpl
sbb
lods
mov
add
inc
shrb
ja
popa
mov
test
push
mov
js
mov
movsb
movsl
mov
test
cmp
int3
add
add
idiv
imul
xchg
rcrl
sti
rcrb
sar
ljmp
std
sub
xchg
xchg
shr
call
and
jp
lds
pop
mov
dec
push
bound
mov
push
jns
add
and
xlat
push
int3
pop
cltd
xor
xchg
shlb
sbb
call
ljmp
xor
imul
mov
orb
fmull
add
and
mov
enter
dec
xor
fadds
jmp
test
jle
add
add
fists
cli
add
jl
xor
jns
add
push
cvtdq2ps
mov
rcrb
mov
dec
add
cli
hlt
jae
fisubs
cmp
mov
jbe
cmpsb
pop
scas
push
orl
xor
pop
pop
push
mov
add
fisubrs
add
nop
mov
add
fs
push
test
fsts
push
mov
test
xchg
data16
add
repnz
std
into
sub
dec
or
out
inc
cmpsl
int
ficomps
mov
push
daa
cmp
out
dec
or
stos
pop
sub
sub
adc
push
adc
mov
ljmp
stos
imul
mov
push
cli
loopne
into
loope
cld
ror
shl
test
add
inc
add
iret
imul
pop
jb
add
or
jl
in
loop
push
inc
je
lds
hlt
dec
insb
inc
push
sbb
inc
add
jno
std
add
imul
loop
sahf
es
adc
bound
pop
bound
or
push
mov
mov
or
rol
xchg
add
test
mov
addr16
rolb
ljmp
lods
cs
mov
decb
push
jb
out
pop
mov
pop
loope
xchg
mov
jmp
fst
jb
cwtl
pop
rcrl
mov
ret
add
inc
mov
ljmp
cmp
mov
xchg
add
xor
add
mov
lock
addr16
cmp
addr16
jmp
push
xlat
mov
addr16
cmp
jge
mov
xor
inc
or
leave
adc
dec
std
addb
cld
inc
pop
mov
cld
test
aaa
cmp
fdivrl
shll
incl
jnp
mov
push
mov
cmp
orb
jmp
ds
fidivrs
sub
jp
stos
mov
mov
dec
loop
cmp
jbe
test
pop
adc
ret
jp
bound
add
cmp
cmp
ret
add
dec
rolb
ss
and
pop
das
adc
test
in
xor
push
adcl
daa
inc
pop
pop
test
add
ss
inc
jp
add
adc
sub
mov
sub
cmpsl
add
fistl
loop
xchg
js
xchg
inc
les
mov
xchg
add
xor
iret
lret
shl
js
mov
fidivl
adc
inc
xor
gs
cmp
sub
mov
sahf
frstor
filds
popf
xor
std
fbld
add
add
push
icebp
mov
aad
mov
inc
add
imul
mov
push
call
scas
in
add
dec
lds
xor
inc
adc
push
add
xchg
rcrb
fildll
mov
cld
aam
add
jmp
fmul
pop
stos
pop
cltd
in
cmp
pop
inc
mov
xchg
jge
loop
push
jb
push
inc
mov
movsb
pop
inc
cltd
jne
dec
rcrb
aaa
or
ljmp
sbb
add
sbb
pop
in
pushl
cwtl
rorb
aam
rorb
push
aas
sbb
inc
cld
adc
hlt
fmuls
cmp
cld
push
sbb
data16
sbb
or
push
sbb
gs
xor
lret
xor
mov
and
adc
jo
notl
les
cwtl
shlb
jne
clc
mov
shl
rolb
add
adc
and
mov
adc
inc
or
jge
jmp
or
inc
add
xor
dec
cmpl
mov
inc
call
inc
pop
adc
jle
cmp
scas
xor
fs
imul
or
push
inc
mov
push
xor
mov
rolb
add
pop
imul
cmp
pop
sbb
adc
pop
cmp
cmp
negb
add
fbld
hlt
push
sub
or
fimuls
or
adc
lods
int
movsb
das
cs
lods
pop
cs
mov
shl
test
test
loope
lods
and
fsubl
dec
jmp
add
adc
scas
fists
lret
loop
cld
mov
mov
mov
movsb
add
sbb
push
ficoml
inc
push
call
fisubrl
sub
add
cmp
mov
xchg
cmc
gs
or
xchg
dec
sbb
xchg
or
add
int
neg
out
jge
and
mov
sbb
sub
jb
pop
arpl
sub
fldenv
push
test
aas
push
push
bound
cwtl
inc
cmc
pop
cmp
call
bound
push
mov
lret
push
sbb
ret
ljmp
push
aad
dec
or
mov
jg
mov
dec
mov
ss
add
mov
push
push
sbb
out
out
add
notl
xor
test
jmp
jmp
adc
movl
daa
xchg
call
cwtl
inc
repnz
aaa
xchg
shlb
ret
cmp
jle
fidivs
test
xchg
jns
add
mov
je
scas
inc
call
add
addl
loopne
ds
fidivrs
roll
jno
mov
cmpsl
adc
cld
rcrl
adc
mov
adc
mov
xor
add
call
xchg
pop
ds
fidivrs
roll
out
mov
pop
gs
popf
cmp
jae
jg
fadds
xor
sub
daa
hlt
inc
int3
shl
adc
lret
rcll
cmp
testb
cmp
jmp
add
repnz
add
push
pop
inc
lahf
adc
aad
std
mov
jl
push
sub
mov
outsb
cmp
aad
hlt
mov
shl
andb
cmpsl
inc
loop
lcall
pushf
aaa
cmp
add
movsl
adc
adcl
push
je
repz
sbbl
rorb
pop
into
inc
out
stos
loopne
lods
cmc
sbb
out
notb
out
add
mov
inc
icebp
or
and
packuswb
add
dec
xlat
add
sbb
adc
xchg
mov
and
loope
inc
in
lea
rol
iretw
add
adc
add
sbb
or
adc
xchg
mov
fdivrs
aaa
adc
fs
addr16
adc
inc
inc
pop
add
inc
aaa
xchg
lock
jae
out
inc
or
pop
adc
add
lret
ljmp
aas
cld
adc
add
jae
xor
push
ljmp
xchg
testl
mov
adc
hlt
inc
pop
ret
push
mov
cmp
test
push
push
lods
push
push
push
jns
incl
ljmp
fidivs
adcl
cmp
adc
ja
sbbl
fdivs
stos
sub
xchg
mov
mov
cmc
sub
stc
push
sar
lret
aas
adc
fisubs
repz
imul
dec
sar
decl
and
std
jmp
adc
fidivs
pop
in
std
jb
mov
notl
sbb
sar
ror
out
jns
std
lock
adc
inc
sar
adc
ficompl
xchg
pop
mov
lea
scas
add
mov
xchg
add
shl
mov
or
ret
adc
test
sub
or
add
and
xor
adc
cmp
add
ret
ror
lret
ficoms
out
xor
sbb
sub
aam
or
fimuls
xchg
and
xchg
inc
cmp
cmpl
xchg
add
add
jb
rorl
sub
xchg
jmp
cmp
adc
jmp
jae
gs
inc
pop
std
hlt
std
aas
jmp
ror
jle
movsl
adc
jmp
push
lds
and
add
pop
sbb
popf
and
jb
add
std
sbb
std
pop
lods
stos
cmc
jmp
in
adc
ja
cmp
xchg
add
sbb
cld
jmp
jbe
ja
push
push
mov
lret
std
cmp
out
addl
jg
cmp
mov
mov
fnstenv
das
out
add
xchg
shlb
std
mov
sti
adc
inc
int
sidtl
xor
clc
cmp
test
add
ja
sbb
xor
sub
or
adcb
scas
or
mov
add
fs
xor
not
push
gs
fisttpll
test
shlb
and
ja
mov
lods
sub
or
clc
add
adcl
mov
jae
scas
cmp
push
add
xchg
bound
or
testl
or
cld
repz
fisubrs
je
movq
xor
fwait
xchg
stos
cmp
mov
jno
add
push
ret
adc
add
xchg
into
stc
jl
ret
imul
sub
sub
adc
lcall
faddp
imul
push
xlat
sbbl
xchg
or
fists
out
mov
push
xor
fs
or
fists
out
mov
mov
mov
movsb
in
sub
ficoms
xlat
scas
out
add
jmp
std
push
add
mov
shl
fcompl
std
pop
pop
hlt
por
adc
stos
add
xor
jmp
test
jmp
shl
push
test
leave
cmovo
test
pop
ficoms
pop
jb
mov
sarl
mov
cli
pop
push
add
in
xlat
jae
loop
or
repnz
shl
frstor
addl
adc
push
je
xchg
sbb
jbe
clc
mov
ljmp
vpaddd
xchg
stc
mov
add
iret
clc
mov
rcll
std
call
inc
push
lret
pushl
adc
add
mov
lcall
cmp
inc
pop
xchg
clc
add
stos
ds
ljmp
cmp
adc
in
jge
fiadds
add
sbb
mov
fisubs
jb
ds
rcrb
inc
or
pop
inc
jmp
sysret
sbb
mov
and
dec
ficoml
mov
iret
shl
adc
xor
pop
out
or
std
ljmp
or
cmp
push
xchg
add
add
push
adc
mov
adc
stos
push
adc
shll
inc
fisubs
and
es
rcrb
or
fcom
add
cmp
lock
xor
inc
pop
adc
add
pop
xor
fistl
sbb
adc
shl
mov
push
pop
sbb
adc
xchg
mov
pop
adc
mov
daa
sti
loop
pop
imulb
lods
sti
adc
xchg
xor
or
push
mov
sahf
adc
or
xor
imul
lods
or
loope
shr
test
andps
mov
mov
jp
sbb
adc
sub
std
aaa
repnz
push
call
inc
mov
int
add
std
aam
add
sti
push
push
cmp
push
push
mov
xchg
pop
jmp
fdivr
dec
scas
mov
jb
and
aaa
scas
lahf
or
aam
add
cmp
and
pushf
icebp
sub
mov
add
adc
and
mov
out
xchg
dec
into
rcrb
add
adc
lock
je
and
decl
push
into
inc
adcl
ror
push
push
push
adc
addr16
fists
in
mov
std
test
popa
push
call
cmp
push
inc
push
push
call
xchg
into
ljmp
lds
inc
mov
jl
inc
adc
add
mov
fs
add
jno
clc
bound
ret
test
lods
fwait
cld
stc
dec
jmp
dec
push
mov
pop
dec
add
pop
adc
std
rcr
cld
shl
adc
addr16
popl
jl
cli
rorl
xchg
push
jae,pn
mov
add
and
cmp
mov
and
cmp
sub
add
xchg
jns
rcrb
xchg
cs
inc
pop
addb
jns
add
cs
fsubl
add
addr16
fwait
cld
adc
out
xor
inc
das
sti
sbb
into
pop
push
cmp
push
sub
pop
ljmp
cld
xor
mov
cs
addr16
add
pop
jp
add
adc
add
dec
jl
adc
insb
sub
rcrl
cmp
scas
adc
mov
repz
push
pop
add
mov
sub
push
sar
fucom
mov
xor
stc
mov
jmp
mov
std
adc
adc
xor
test
into
add
adc
hlt
or
jmp
cmpsl
dec
ret
xchg
clc
jle
and
jg
fdivl
mov
pop
mov
test
xor
inc
push
pop
outsl
push
ds
out
sub
pushf
and
mov
loopne
xchg
fstl
sub
or
adcl
mov
or
adc
dec
pop
jge
pop
adc
adc
add
rolb
add
call
push
push
mov
push
mov
rorl
mov
cmp
push
mov
cltd
testl
push
adc
xchg
inc
pop
and
xchg
rcrb
push
jp
push
inc
xchg
cld
adc
aam
mov
inc
rclb
and
mov
push
std
mov
mov
das
mov
and
adc
fisttps
scas
xor
stos
sbb
repz
push
outsl
pop
rcrl
push
dec
pop
and
std
inc
xor
push
jecxz
pop
pushf
das
add
pop
out
in
rcll
cmp
cltd
sbb
int
sbb
sub
add
add
pop
iret
mov
xor
mov
out
aas
add
gs
fnstsw
mov
fdivr
add
push
lods
jecxz
mov
rorb
push
jns
dec
pusha
leave
adc
add
push
add
xchg
pop
sbb
add
add
outsl
je
add
in
jae
pop
shl
cli
imul
cli
add
call
inc
pop
xchg
jmp
cli
pop
jle
add
sbb
out
jecxz
fs
adc
jno
or
add
iret
lahf
jb
lods
sub
mov
or
and
push
or
or
pop
dec
out
push
or
and
add
push
loopne
ficoml
sub
mov
push
jmp
inc
push
cmp
xchg
mov
insb
push
jnp
sub
adc
jmp
mov
xchg
cmp
test
ja
fwait
jecxz
adc
add
ret
push
mov
adc
dec
xchg
in
inc
movq
pusha
sbb
addl
jo
pop
test
pusha
je
mov
push
rorb
mov
or
add
testb
jecxz
dec
push
je
loop
xchg
icebp
out
adc
or
rclb
sbbl
test
or
add
into
jae
mov
sbb
add
inc
or
add
cltd
mov
iret
add
enter
daa
inc
cmp
push
cmc
sub
add
fisubs
sub
lods
add
add
jp
cmpsb
sahf
adc
pop
sub
push
push
jnp
lret
or
sub
mov
sub
push
aas
cmp
js
push
fucomp
and
inc
lret
jmp
jmp
mov
jecxz
push
adc
roll
lods
adc
lret
add
and
fadd
popa
shll
hlt
or
out
nop
mov
mov
test
dec
mov
loop
fists
shr
jmp
mov
out
adc
js
push
out
pop
jbe
add
pop
ljmp
add
push
sti
jl
add
int
sub
shlb
mov
add
ljmp
mov
dec
mov
adc
pop
shll
aam
lock
ret
femms
jg
xadd
sbb
stc
xchg
mov
fstpl
add
add
testb
movsb
rorl
or
inc
ret
xor
push
lahf
xor
mov
ljmp
pop
imul
adc
jmp
jns
popa
out
fs
fstpl
dec
push
xor
sbb
pop
sti
jne
jne
mov
decl
sub
cld
adc
in
jmp
mov
rorb
mov
push
mov
add
add
dec
cmp
or
test
idiv
incl
adc
test
adc
add
jnp
nop
pusha
hlt
testl
sti
mov
in
jg
stos
adc
xlat
adc
inc
push
mov
wbinvd
or
fiadds
mov
aad
sub
out
cli
mov
mov
in
inc
mov
mov
repnz
js
add
and
cld
pop
push
js
inc
cmpl
out
add
daa
add
ja
xor
add
mov
push
cmpsl
jl
jae
jb
out
jmp
cmp
mov
push
xchg
fdivp
in
inc
fcmovb
cmp
sahf
aaa
mov
inc
mov
lcall
sti
mov
sbb
dec
sub
and
xchg
cmpsb
push
popa
push
push
sbb
xchg
stos
adc
call
and
nop
aam
dec
push
data16
out
pop
jmp
iret
pop
or
iret
jno
push
out
mov
jmp
sub
les
fistpl
push
push
sti
ficomps
roll
sbb
or
jmp
or
cmpsb
cld
sbb
mov
fmul
call
xchg
push
jns
xchg
sub
adc
pop
jbe
or
cmpsl
inc
call
ficoml
add
sbb
aad
arpl
add
lcall
sub
mov
cltd
enter
xchg
add
inc
inc
fldlg2
popf
jg
fstl
subl
les
call
ficoml
add
and
xchg
loop
mov
xor
fisubrs
xchg
lea
add
loopne
mov
jbe
or
push
mov
xchg
pushf
jp
out
rorl
inc
aaa
jg
jnp
inc
sbb
and
inc
sbb
sti
ljmp
cld
imul
leave
call
mov
jno
or
sti
incl
adc
je
jne
je
adc
cld
leave
lret
jae
jmp
imul
or
inc
cwtl
scas
test
mov
add
mov
bound
pop
test
testl
or
add
fnstsw
cmpl
fidivs
add
lock
push
and
gs
add
add
push
icebp
adc
fstpl
movb
lea
add
adc
cld
add
sahf
add
dec
sti
pop
mov
and
shl
out
jle
or
inc
repnz
minpd
add
sbb
iret
inc
or
iret
jmp
xchg
dec
cmc
rorb
push
pop
jmp
inc
fisttps
fildll
push
popf
xor
push
pop
fdivr
aam
adc
cld
loopne
or
lahf
test
mov
adc
dec
pop
push
rcll
cmp
push
sbb
mov
dec
mov
mov
stos
call
fistpl
imul
mov
rolb
and
ja
call
cmp
pusha
data16
rorb
add
enter
add
mov
xchg
or
add
add
dec
into
add
pop
adc
nop
mov
cld
xchg
sub
clc
mov
cwtl
xchg
rolb
mov
mov
and
sti
jmp
add
ja
inc
mov
incl
jo
movsl
add
ja
or
les
jmp
into
cmpsl
adc
fcmovne
dec
push
and
sbb
mov
clc
mov
push
xchg
or
jl
call
pop
add
je
je
je
and
sti
or
flds
int3
add
sti
sbb
mov
xchg
push
jno
pop
fs
fcompl
add
push
shrl
fdivp
or
sbb
inc
loopne
add
push
js
push
lret
cmp
fdivp
add
into
out
xchg
sub
es
arpl
or
mov
movsl
add
loopne
popf
xor
push
iret
or
dec
jecxz
or
repnz
pop
dec
decl
add
pop
bound
push
insb
clc
ljmp
add
jnp
sbb
and
or
sbb
sbb
sbb
add
cltd
repz
js
add
adc
xchg
lret
inc
or
iret
jmp
xor
add
inc
test
dec
sub
bound
or
orl
negb
or
cwtl
and
inc
call
sbb
pop
loop
adc
imul
mov
aam
dec
jmp
in
loop
adc
xchg
push
pop
and
xor
jbe
sub
add
push
pop
outsb
adc
add
cmc
add
cwtl
es
inc
adc
mov
sub
add
bound
das
or
mov
clc
sbbb
jo
into
clc
call
push
mov
cmc
dec
fisttpll
int3
push
xchg
fmull
cmp
cwtl
inc
adc
std
xchg
xchg
dec
add
sbb
sbb
adc
ja
mov
pop
sub
add
add
hlt
pop
add
jo
mov
or
cmpb
cli
decl
sbb
jne
sbb
stc
xor
lds
andb
pop
addl
add
pop
int3
add
arpl
add
sbb
push
jl
push
addr16
xchg
add
fidivrs
inc
inc
push
stc
add
fmulp
out
and
mov
push
and
sub
mov
jno
xchg
or
addr16
add
sub
flds
or
sbbl
testl
ficoml
push
jecxz
or
xchg
pop
outsl
ficoms
out
mov
pusha
ss
aad
mov
and
icebp
fsts
jb
in
xchg
xchg
or
testl
mov
pop
add
xchg
mov
mov
adc
lds
into
idivb
add
dec
sti
imul
jo
icebp
adc
adc
mov
adc
aad
lcall
dec
adc
pop
outsl
or
pop
out
add
fs
add
and
jmp
adc
sbb
cmp
pop
or
scas
xor
add
negl
sbb
jge
cwtl
dec
addl
insb
out
push
sub
jmp
pop
shll
xchg
out
addr16
add
push
addr16
sbb
pop
sub
subb
adc
add
dec
aaa
flds
adc
lret
add
dec
mov
std
scas
sub
mov
xchg
testl
inc
fiaddl
inc
xchg
rclb
aaa
adc
jmp
cld
lds
mov
add
aaa
fmul
xor
idivb
cld
jae
mov
cld
cmp
cmp
adc
ja
or
ret
mov
mov
lcall
les
add
incb
add
dec
lret
jge
jmp
mov
jae
xchg
aas
fisubs
or
aam
cmp
dec
faddp
mov
stos
push
inc
je
repnz
add
hlt
mov
add
rclb
out
daa
gs
sub
xchg
and
or
mov
or
add
add
pop
rolb
ljmp
out
xchg
fucomip
cmp
sub
adc
cmp
in
pop
decb
push
pop
mov
xchg
fcoml
jno
leave
xchg
es
cld
cmp
nop
shrb
mov
add
inc
jnp
imul
sub
inc
addr16
repz
out
fsubp
movsl
cmc
loope
popa
mov
test
jle
cmp
or
sub
lret
add
movsb
sbb
shll
push
in
sti
cld
rorb
jae
nop
call
not
mov
jecxz
js
mov
std
jb
inc
or
inc
fsubrp
add
pop
insb
mov
push
shlb
adc
mov
aas
shrb
mov
adc
ficompl
jns
in
fstpt
jb
push
and
jg
sbb
cmp
add
jecxz
cmp
xchg
ret
add
cmp
in
push
in
xchg
mov
aad
sub
sbb
mov
mov
ljmp
leave
sbb
out
lret
or
cmp
jno
test
std
push
addl
call
lret
orl
fdivrs
inc
sbb
push
dec
jge
jl
push
or
push
lods
pop
jmp
rcl
movb
add
lea
sahf
stos
out
fwait
push
std
lds
jo
ficoml
gs
fadds
cmc
clc
add
adc
pop
mov
mov
jle
xor
fiaddl
popa
cmp
std
in
pushf
jo
ficoml
gs
aam
adc
clc
negb
std
stc
mov
jle
xor
popf
sti
add
fisttps
inc
cmp
adc
pop
sbb
ret
or
lds
xchg
ljmp
pop
filds
jmp
jmp
insl
ret
lea
adc
in
fisttps
or
or
inc
cli
pop
add
push
adc
mov
stos
cs
aad
or
pop
adc
add
xchg
and
call
pusha
adc
adc
cmp
jecxz
stc
fisttpll
scas
sarb
insb
in
cmc
cld
out
neg
sti
out
aaa
xlat
out
pop
in
jmp
mov
vpsubq
pop
std
cld
mov
pop
insb
ficomps
cmpsb
mov
adc
sbb
fisttpll
test
es
jle
clc
push
out
stos
cli
outsb
add
testl
sar
cmp
pop
xchg
cli
inc
fnstenv
out
call
xor
jmp
sar
cmp
std
clc
cld
ficomps
sti
add
or
das
pop
or
stc
inc
loope
and
and
call
or
add
adc
aaa
pop
adc
jg
push
pop
sti
wbinvd
adc
add
dec
jae
adcb
clc
outsb
testl
test
or
incl
insl
add
aaa
testl
decl
loopne
pop
pop
adc
xorb
sti
incl
cli
sbb
div
xor
and
std
mov
loopne
jmp
testb
cmp
add
loope
xor
leave
out
int3
incl
icebp
jmp
or
cmc
daa
mov
std
mov
imul
imul
scas
jle
shl
add
sahf
or
pop
jmp
push
cld
popa
jbe
and
jmp
pop
std
dec
sub
pop
fsubrp
sti
test
or
inc
push
pop
std
sub
scas
imul
push
mov
stos
jg
aam
testb
pop
clc
jecxz
pop
adc
jmp
insb
add
adc
xchg
cmc
or
movl
into
add
out
jecxz
sub
stos
test
cmpsb
idivb
cld
dec
inc
jmp
inc
imul
testl
out
lahf
mov
mov
or
fists
push
jecxz
mov
jnp
js
mov
pushf
mov
jp
cld
cli
call
fstl
add
inc
jl
in
add
add
mov
fisubl
add
push
mov
movsb
icebp
add
icebp
ror
xchg
popf
adc
pusha
addr16
xchg
orl
adc
bound
subl
and
dec
in
notb
mov
and
or
sub
dec
xchg
shlb
movsl
repz
dec
push
mov
lahf
rorl
adc
dec
inc
jle
adc
int
sub
push
jmp
jno
jl
xchg
iret
xchg
jmp
fcoms
adc
mov
pop
hlt
mov
add
inc
mov
xchg
lahf
ret
les
add
js
ja
cmpb
or
and
jne
and
adc
sti
jne
jae
hlt
mov
jb
call
fisubs
bound
out
jmp
out
repz
mov
ret
sub
xchg
stos
xchg
push
scas
mov
stos
xchg
xchg
xor
lds
xor
add
pop
inc
xchg
fdivp
mov
jmp
cmp
mov
and
xchg
ret
inc
mov
mov
call
pop
xor
jg
jns
dec
loop
mov
and
fsubs
test
adc
pop
pop
dec
dec
jg
jge
dec
and
inc
mov
or
cmp
roll
pop
mov
pusha
pop
repz
daa
je
int3
mov
push
testl
test
xchg
adc
jmp
orb
lds
sbb
cmp
or
popa
mov
pop
mov
jae
adc
fiadds
lods
out
pop
bnd
std
push
add
mov
push
xorb
insb
sbb
daa
shrl
pop
add
fwait
cmovno
pop
repz
cs
icebp
es
inc
lea
lret
sub
sbb
mov
jmp
push
dec
xor
das
inc
jmp
cmovno
scas
bnd
call
sbb
pop
repnz
add
insb
int3
inc
mov
jmp
push
insl
cld
jmp
dec
dec
das
rol
add
bts
push
ret
adc
add
jp
std
pushl
or
mov
mov
or
bnd
clc
add
inc
jmp
js
loope
sub
mov
or
out
subb
cmp
js
dec
cld
add
shl
test
pop
sti
jg
shl
nop
inc
idivb
add
test
movsl
sub
or
or
dec
push
mov
adc
sti
rcl
pushf
mov
test
fdivrp
cmc
mov
jb
das
roll
mov
loope
repnz
push
inc
ljmp
jge
or
cmp
loope
mov
fsubp
jg
ljmp
movl
cmpsb
imul
mov
roll
adc
cmp
inc
repnz
adc
fistl
sbb
sub
icebp
cmpsb
dec
fisttps
pusha
pop
and
nop
pop
outsb
push
push
out
jne
hlt
pop
das
push
add
add
xchg
xchg
out
popa
mov
mov
mov
js
out
fwait
jmp
out
xchg
repz
xor
out
add
jle
pop
out
pop
dec
jmp
clc
dec
or
out
jno
movsl
sub
mov
call
sbb
inc
aad
cld
fisubrs
sbb
sub
or
sahf
out
xchg
add
push
adc
nop
ljmp
add
jmp
push
cli
ljmp
add
call
fisubrl
add
jp
ficoml
movsb
or
dec
loop
add
in
inc
std
and
adc
negl
bound
push
sub
cmp
xchg
xor
mul
fisttpll
sbbl
cld
adc
in
or
add
popf
inc
and
fwait
inc
and
addr16
xor
call
xor
push
push
sbb
add
test
adc
cmp
outsl
aam
mov
ljmp
xchg
mov
mov
push
testb
je
insb
pop
xor
xchg
dec
std
mov
sbb
lds
or
add
cltd
or
enter
rorb
psllw
addb
or
push
or
mov
push
xor
jmp
fdivrp
add
xor
push
cmp
repnz
testb
lock
fidivrs
dec
lock
add
cltd
dec
push
xor
mov
dec
cld
add
daa
xchg
cli
xor
lock
incb
xor
add
mov
clc
add
fsubrp
ret
call
pop
adc
add
lret
adc
push
push
adc
rcll
pop
inc
ficoms
dec
sbbb
or
jmp
add
cltd
and
shlb
out
add
jnp
hlt
out
add
xchg
and
jmp
ficoml
out
mov
stos
lcall
lret
psubd
lahf
daa
popf
outsl
rorl
fidivrs
movsb
imul
xchg
mov
shr
add
decl
pop
add
pop
mov
cld
rcr
jmp
pop
scas
ljmp
call
in
cmp
add
pop
sbb
aaa
add
in
shll
dec
popf
shrl
aaa
sub
insb
loope
jecxz
inc
cmc
pusha
stos
jae
repnz
or
iret
pop
test
pop
pop
adc
in
cld
push
loopne
in
pop
mov
fisubs
pop
sub
fsubrp
mov
in
jb
les
mov
jno
dec
jne
inc
sti
jne
xchg
adc
shlb
cld
idiv
decl
aad
test
or
add
and
in
cmp
sti
mov
adc
inc
imul
ja
cmc
add
xor
pop
push
sbb
leave
jmp
aas
cmp
jmp
sti
inc
push
adc
jb
xor
cmp
jmp
cld
mov
or
add
cld
cmp
lahf
insb
jno
mov
pop
popf
hlt
jae
mov
inc
adc
adc
sbb
addb
bnd
int
inc
xchg
cmp
jns
cmpl
cmp
or
push
jae
and
pusha
dec
and
frstor
adc
std
stos
aad
enter
push
add
mov
std
jb
push
outsl
out
dec
mov
fdivrp
dec
cmp
adc
clc
loop
in
mov
adc
mov
adc
in
sbb
mov
out
add
jmp
mov
out
or
push
call
ret
repnz
pop
push
mov
test
pop
jnp
pop
iret
jmp
popa
dec
push
sti
inc
pushf
loopne
add
adc
inc
inc
inc
mov
repz
lret
fsubs
daa
mov
push
inc
rcrl
lcall
scas
rol
lods
in
in
jmp
push
inc
es
cmpsl
orb
lea
jmp
jle
adc
mov
sbb
inc
jo
in
and
xchg
xchg
push
ficompl
xchg
adc
push
mov
cmpsb
or
cli
verw
pop
sar
push
adc
add
inc
xor
mov
ficoml
mov
testl
lahf
jns
xlat
add
xchg
dec
sysret
adc
movlps
adc
jbe
xchg
push
sbb
shl
popf
cmp
sti
test
notl
stc
jmp
out
cmp
sbb
std
sub
ja
xchg
pop
cmp
cmp
add
std
push
add
out
lcall
pop
sub
add
out
cmp
inc
adc
push
adc
enter
aaa
adc
cmp
add
jmp
movb
adc
inc
adc
add
testl
add
cwtl
rorl
cmpl
adc
je
xrelease
jbe
pop
adc
je
js
sbb
add
mov
bnd
lea
cmp
dec
out
testl
jno
jp
or
addb
stos
aas
adc
stc
add
pop
addb
push
xor
add
fmulp
push
insb
loope
inc
hlt
sub
mov
adc
jg
fists
pop
out
or
cmp
cli
xchg
inc
mov
bound
cmp
loop
stos
movups
jns
stc
movb
adc
add
incb
jecxz
add
xor
cld
mov
fisttpll
dec
ljmp
test
out
jo
xchg
shlb
aad
stc
sub
adc
jns
stc
xchg
ficoms
cmpsb
aas
ljmp
add
xchg
lcall
xchg
pop
loopne
pop
out
adc
rclb
xchg
cmp
jecxz
xor
cld
jmp
xlat
in
movsb
loope
inc
std
inc
shl
insl
fstl
add
stc
cld
call
add
adc
xor
or
lcall
popa
cmp
mov
out
jg
loopne
cld
jmp
push
in
sub
sbb
shl
add
or
ds
add
ret
inc
add
push
out
hlt
mov
or
lock
pop
mov
mov
dec
and
sti
sbb
jp
xor
jmp
je
mov
aaa
ret
or
mov
out
hlt
mov
or
mov
and
loope
or
or
xor
jmp
faddp
into
inc
addr16
cmp
test
fdivp
add
frstor
leave
fs
fsubrp
stos
or
sub
ljmp
orl
cld
loope
or
and
jb
dec
add
fidivrs
or
pushf
out
xchg
fsubrp
add
fstpl
fs
fsubrp
stos
or
xor
jg
add
cld
imul
rdpmc
add
jo
repnz
xor
ret
punpckhdq
out
push
mov
adc
nop
inc
adc
xchg
push
cmc
add
dec
inc
rcrb
lods
pshufw
mov
adc
movnti
orb
icebp
mov
and
addr16
packsswb
mov
in
sbb
and
add
pop
mov
adc
adc
ljmp
ja
adc
out
orl
popf
pop
sar
jo
faddl
adc
adc
xchg
orl
adc
in
xchg
mov
mov
sbb
jno
imul
and
out
push
fdivr
mov
fld1
cld
push
inc
sbb
add
mov
ret
repz
in
pop
fdivr
jl
mov
xlat
push
sub
dec
std
and
and
call
add
push
aaa
lret
xchg
mov
outsb
or
cmp
shrl
gs
test
jg
cmpsl
adc
test
sti
mov
xor
ljmp
inc
mov
cwtl
outsb
and
shlb
jmp
push
xchg
or
push
clc
outsb
adc
jb
sti
jne
jmp
inc
test
adc
add
dec
in
aam
call
aad
pop
inc
adc
add
jp
jb
insb
mov
je
fldenv
andl
jo
addr16
push
pop
cmp
pusha
add
faddl
pop
popa
add
out
sbb
add
add
aas
adc
xchg
ficompl
sbb
add
loope
adc
test
add
test
jmp
icebp
cld
xchg
adc
inc
rcrl
js
bnd
sub
repnz
in
mov
int
push
icebp
repz
out
fimuls
insb
cld
cmp
lea
pop
test
push
ljmp
mov
push
adc
add
push
xlat
or
sti
fisttpl
testl
cmp
add
sub
rorb
sub
ret
in
pop
adc
add
xchg
sub
stos
fldt
pushl
mov
fdivrl
inc
decb
cld
out
add
push
or
cmp
leave
or
mov
fimuls
inc
sub
pushf
jnp
add
xchg
inc
fwait
or
mov
cld
mov
out
pop
inc
push
out
or
aas
add
pop
aaa
ss
push
std
movsb
jmp
mov
cld
pusha
and
inc
add
cmp
or
mov
decl
xchg
or
filds
ficomps
adc
inc
mov
nop
loope
inc
sub
std
jmp
pop
insb
inc
xchg
ljmp
pop
push
xor
adc
add
xchg
hlt
std
add
add
jmp
jle
adc
mov
mov
mov
cmp
addl
call
xchg
decl
add
test
sarb
mov
ljmp
shrl
jns
sub
mov
in
or
out
push
adc
xchg
inc
inc
xor
aaa
stos
fldt
jno
cld
sub
adc
test
mov
or
pop
iret
out
cld
add
mov
gs
xor
fcmovbe
adc
loope
in
inc
repnz
adc
or
push
lret
adc
out
rcrb
movsl
or
fdivrp
push
jmp
push
push
call
les
data16
fmull
int
ficompl
adc
cli
daa
mov
clc
fmulp
loope
ljmp
subb
or
and
add
adc
fisubrl
jmp
jnp
sub
push
add
pushl
adc
rolb
xchg
xchg
sub
cmpsl
add
pop
filds
mov
add
push
add
es
or
ret
aam
insb
popf
arpl
int3
fcmovnbe
cld
push
mov
adc
aaa
enter
orb
ljmp
mov
fcoml
jg
add
pop
and
dec
xchg
mov
push
jecxz
mov
sbb
inc
jmp
cmpsl
inc
adc
jb
add
pop
sti
popa
adc
add
aam
out
testl
jmp
testl
lcall
mov
cmp
xchg
jno
sub
sti
jne
ds
jne
in
or
pop
or
int3
in
sti
incl
int
test
incl
subl
or
lods
in
scas
cmp
mov
xchg
aad
push
inc
push
dec
incl
shrb
inc
xor
dec
or
adc
xchg
icebp
jecxz
adc
mov
or
add
mov
shl
dec
dec
in
cld
gs
cmp
and
cld
dec
or
jne
mov
adcb
daa
jbe
addr16
mov
dec
aam
add
fsubp
outsl
pop
gs
xchg
add
add
add
gs
inc
scas
cmpsb
outsb
and
xor
stc
mov
cmpsl
dec
inc
fiadds
push
std
xchg
mov
enter
cld
xchg
out
fdivr
and
data16
shr
xor
out
es
dec
jmp
out
aam
inc
cli
push
xchg
ljmp
fwait
pop
jmp
jbe
or
ljmp
jnp
add
std
jo
sarl
or
cmpsb
cli
pop
int
add
cwtl
icebp
out
aam
dec
ja
lds
sub
mov
adc
push
dec
pop
pop
sti
mov
jo
add
jno
daa
add
pop
out
push
sbb
xchg
seta
mov
bound
jb
and
mov
jmp
hlt
aam
jecxz,pn
mov
add
or
jmp
or
popf
add
cs
or
dec
xchg
push
test
fdivrs
mov
je
or
or
call
insb
mov
sar
jo
pusha
mov
shrb
and
outsl
cmp
sub
popf
add
mov
or
jne
das
or
push
jo
adc
mov
jno
insb
xchg
sti
jne
mov
ficoms
push
repnz
push
jg
mov
jnp
dec
or
incl
mov
or
push
xchg
dec
push
decl
or
andb
decl
push
call
mov
xchg
sti
jne
jmp
and
fwait
add
aaa
cmpsb
sbb
add
in
dec
jmp
or
mov
add
mov
dec
inc
fisubs
sbb
and
imul
shr
mov
mov
mov
rorl
clc
inc
pop
pop
cld
mov
repnz
and
rcr
outsb
or
mov
jmp
jl
out
into
xor
hlt
mov
pop
jns
push
sub
mov
add
fisubs
call
mov
addr16
mov
adc
add
in
cmpb
jge
sub
jno
add
divb
andb
sahf
adc
lret
out
clc
popa
mov
roll
out
sbb
fisubs
repnz
ror
sbb
jmp
lcall
push
pusha
call
les
leave
data16
jp
sbb
inc
hlt
pop
or
add
mov
mov
lret
xchg
movsb
gs
mov
xchg
xchg
or
test
int3
jae
test
pusha
subl
push
jae
add
add
test
roll
or
test
fsub
push
es
push
cs
mov
popf
sbb
lcall
cld
out
imul
loop
dec
xor
adc
fcoms
incl
sti
inc
or
lcall
inc
adc
mov
int
inc
add
dec
inc
or
dec
cltd
add
adc
sbb
das
sbb
mov
in
add
add
mov
in
rcll
sqrtps
mov
mov
add
dec
inc
and
aam
fsubl
mov
adc
mov
into
mov
mov
xchg
out
push
rorb
add
add
fiadds
adc
incl
ds
sbb
cs
jecxz
push
cmc
call
mov
aas
add
movl
fidivs
loopne
cs
imul
cld
repz
inc
fidivs
adc
sbb
sbb
inc
incb
sbbl
nop
cmp
orl
dec
adc
cmp
cltd
mov
jecxz
and
or
hlt
mov
xor
out
pop
movsb
out
fimuls
lock
int
xchg
out
pop
sar
or
inc
lret
loopne
mov
out
addr16
inc
lds
dec
in
cmp
outsl
rclb
mov
cmc
cltd
and
out
cltd
adc
sub
loope
and
push
lcall
aad
add
jl
mov
cltd
dec
mov
fstl
mov
cld
call
mov
mov
pop
mov
xor
in
mov
cld
mov
fdivs
cld
push
mov
mov
mov
in
adc
cmp
fstl
mov
cld
inc
call
push
mov
sub
int3
mov
popa
std
xchg
mov
scas
jno
out
push
fdivrp
jo
inc
adc
cltd
jl
ja
xchg
xchg
pop
je
push
jo
jno
inc
clc
ficoms
lss
mov
sbb
xchg
lods
fucom
mov
mov
test
test
loop
sti
inc
sbb
sti
jne
popf
sar
or
xchg
cltd
mov
adc
bound
mov
call
test
imul
mov
aaa
enter
std
or
mov
adc
push
repnz
xchg
xor
cmp
mov
pop
shr
ds
jl
adcl
mov
adc
sahf
inc
inc
pop
aad
jge
or
test
cld
stc
cs
and
xor
jmp
fiadds
std
push
les
push
leave
mov
cld
dec
mov
fidivl
mov
imul
xchg
cmp
add
xchg
leave
in
sbb
cmp
fstp
push
insb
fisttps
pop
jmp
fisttps
cmpsb
inc
pop
push
sbb
es
out
leave
popa
dec
es
sub
rcrb
sarl
add
test
dec
or
imul
push
pop
pop
lds
stc
or
or
push
imul
inc
dec
ljmp
ss
and
sbb
pop
std
xchg
lds
mov
or
dec
push
push
mov
mov
add
fisttpll
jp
lds
pop
or
mov
shlb
mov
lea
out
addr16
gs
inc
sub
add
jb
cmpsb
sbb
sub
dec
roll
push
mov
aam
or
jecxz
sub
pop
and
adc
cld
adc
lds
les
inc
and
xchg
inc
and
push
add
inc
movl
pushl
sti
jne
mov
add
ja
inc
cmp
mov
aam
mov
incl
sub
or
pop
or
rcl
js
out
in
in
inc
sti
mov
lcall
pop
or
lea
push
lret
sub
jmp
insb
dec
and
dec
push
adc
fidivs
mov
xchg
adc
jmp
call
pop
cmp
jg
mov
mov
xchg
add
jp
inc
mov
sbb
xchg
add
jmp
xchg
pop
pop
cld
mov
push
or
add
pop
js
mov
xchg
fiadds
and
inc
inc
and
xchg
sub
ljmp
cmp
mov
cld
rcll
popf
add
or
lret
inc
add
lds
push
rcrb
enter
repz
xor
lds
ljmp
lret
inc
popa
dec
ret
xor
jno
push
pop
and
loop
out
lds
cmp
lds
dec
out
adc
loopne
adc
xchg
fistpl
out
add
mov
cmp
rcrl
push
outsb
and
fsub
lds
lds
mov
call
rcll
lods
leave
pusha
jmp
loopne
sbb
cld
push
jmp
cltd
jecxz
xchg
adc
inc
std
aam
push
test
cld
sub
lds
rclb
pop
inc
cltd
aam
scas
sub
flds
adc
or
mov
call
insb
sbb
ret
cld
jmp
ficoml
add
insb
push
cld
mov
push
test
add
pusha
str
lret
push
mov
jno
aaa
fld
mov
in
out
jge
or
or
sbb
ja
mov
xchg
mov
cli
iret
or
fdiv
xchg
cmc
cmp
popa
sbb
cmp
dec
sub
mov
clc
inc
sbb
hlt
and
test
gs
or
add
xor
mov
xlat
cld
ret
lahf
lahf
mov
jl
fidivs
in
shll
or
call
sti
cmp
add
add
sub
loope
jmp
rcl
pusha
or
adcl
sbb
mov
mov
movsl
lods
pop
xorl
popf
loopne
decl
xor
loop
pop
cmp
xlat
xorb
pop
test
xchg
add
ficoms
xchg
dec
pop
leave
out
dec
nop
lea
mov
pop
cld
mov
ljmp
cmp
pop
enter
jmp
fmul
add
adc
pop
enter
sbb
stos
lea
push
sub
jle
shl
mov
or
pushl
popa
dec
mov
ljmp
std
cld
add
sbb
ljmp
fcomip
inc
outsl
jno
ljmp
insl
sbb
cld
scas
xor
cmpsb
add
ds
xor
jb
fcoms
and
hlt
loope
jb
cmc
or
mov
pop
mov
add
movsb
push
rorl
mov
cld
mov
adc
lods
and
push
cmpsb
sbb
inc
imul
adc
adc
sbb
test
adc
push
lcall
ret
push
mov
push
add
mov
add
push
add
enter
mov
push
add
push
add
call
push
add
adcb
push
add
push
add
inc
push
add
xor
gs
push
add
push
add
inc
push
add
push
add
andnps
aam
push
add
add
push
add
call
out
push
add
cld
push
add
mov
push
add
add
inc
add
xor
cs
inc
add
add
test
sbb
add
and
push
adc
jp
inc
add
pop
inc
add
faddl
dec
faddl
mov
inc
add
je
inc
add
inc
add
inc
add
fs
add
cmp
inc
add
daa
inc
add
inc
add
inc
add
gs
add
test
add
adc
jecxz
out
or
or
pop
mov
and
dec
int3
and
out
lret
and
sar
negl
add
in
std
hlt
loope
and
out
and
mov
cmc
into
sub
call
adc
and
dec
sbb
and
dec
pop
adc
add
pslld
cmc
push
call
stc
out
sbb
inc
mov
and
push
sar
inc
sbb
mov
dec
dec
int3
imul
add
adc
adc
outsl
fwait
adc
addr16
bound
mov
adc
dec
fwait
adc
mov
adc
mov
adc
pop
fwait
adc
pop
sbb
in
and
push
jnp
adc
and
dec
pop
sbb
mov
outsb
sbb
mov
dec
sbb
sbb
adc
jns
adc
js
adc
push
push
add
add
push
add
push
add
popa
push
add
rcll
push
add
rcll
push
add
mov
add
mov
push
add
jb
add
adcb
push
add
fstpt
fwait
adc
add
pushl
lock
int3
pushl
or
rclb
enter
cmp
loopne
clc
mov
test
cmp
call
ficomps
push
cli
loope
and
fcmovbe
xor
or
inc
cld
ss
decl
cld
idivl
dec
shl
loop
add
roll
sbb
push
subb
inc
sbb
xor
std
stc
mov
jns
lcall
or
add
sub
xchg
iret
cld
sarl
and
rolb
stos
movl
sub
inc
sub
xor
je
xchg
mov
out
pop
mov
jb
jns
mov
xchg
out
dec
test
or
adc
mov
push
fistpll
mov
test
adc
sbb
and
add
mov
ret
push
lock
jmp
test
sub
add
sbb
outsb
or
jmp
jp
sbbl
pusha
test
adc
dec
add
popf
xchg
xorb
or
pusha
sbb
cld
push
loop
or
xor
mov
sbb
out
std
jns
insb
mov
clc
jo
popa
std
mov
fstl
xchg
cld
cmpsb
sbbl
jl
mov
xorb
xchg
push
lods
push
arpl
xchg
mov
cmp
sbb
sub
or
rorl
mov
test
or
add
pop
je
and
add
je
lcall
cmp
sarl
add
add
testl
test
adc
mov
jle
cmp
push
adc
jle
cmp
rorl
mov
outsl
nop
push
lcall
test
pop
call
shrl
mov
ficomps
adc
inc
std
cltd
neg
or
inc
std
mov
js
sub
int
outsl
clc
mov
mov
xor
mov
xor
mov
enter
out
sub
mov
gs
add
sar
in
dec
sub
add
stos
ja
pop
enter
xor
inc
fiadds
xchg
lret
cld
add
sub
out
lods
add
cltd
in
dec
test
jmp
into
xchg
mov
push
jns
test
or
sub
sub
mov
int
xchg
fwait
lahf
orb
jnp
cmc
adc
inc
into
subl
push
dec
fisttpl
xchg
pop
ficompl
addr16
lret
push
rcrl
mov
mov
jns
mov
or
repnz
add
sbb
xchg
fcmove
ljmp
push
rorb
add
jmp
jb
adc
test
fbld
adc
sub
lea
and
enter
andb
adc
pusha
sbb
je
jb
inc
jmp
int
add
filds
add
adc
push
mov
lods
jns
inc
icebp
inc
jnp
icebp
fnsave
lock
lahf
les
lds
inc
sbb
movsb
mov
pop
clc
sbb
out
xor
scas
add
popa
int
bound
shrb
lret
xor
jae
mov
add
xor
xchg
adc
mov
cld
iret
in
dec
sti
mov
int3
add
cld
push
xchg
sub
push
sti
jmp
add
ja
ss
mov
popa
adc
xor
call
or
std
cmp
inc
push
inc
fmull
jb
xor
xor
cmp
mov
or
test
mov
mov
cld
loope
cld
pop
add
xchg
add
fisubs
push
mov
cs
dec
fdivrl
push
cmpsl
or
mov
test
les
adc
add
fsubp
jg
popa
add
or
xor
add
into
das
nop
fldenv
jp
inc
test
inc
std
xor
add
sub
jb
ds
mov
cld
add
bound
stc
sbb
ljmp
or
in
xchg
dec
push
add
fadds
pop
jge
out
or
cmp
test
test
cmp
pop
and
jmp
lock
test
enter
stc
add
pop
repz
fsts
sub
mov
inc
push
scas
jp
add
aaa
inc
cmp
dec
aad
lock
sbb
out
fstl
jnp
lret
shlb
sbb
add
test
xchg
cmp
aad
int
lret
or
or
cld
jmp
rolb
aad
testl
xor
or
enter
add
pop
test
fcomip
les
loop
or
loopne
cld
jmp
mov
add
cmp
pusha
std
pushf
cli
mov
into
xchg
xchg
add
leave
sti
push
lods
push
push
push
jl
test
xor
outsb
and
dec
leave
in
cmp
sti
xor
aad
or
out
mov
inc
mov
cmp
clc
incl
or
add
sbb
mov
mov
cwtl
xlat
add
fdivr
decl
aaa
fnstcw
xchg
movb
adc
jge
out
fisttpl
sub
cmp
xor
add
xchg
loopne
jb
and
xchg
or
ja
mov
sahf
push
std
jmp
pop
daa
add
ficoms
dec
mov
xorb
xchg
add
or
or
cld
mov
adc
mov
add
adcb
lds
filds
or
test
cmp
adc
pop
cs
or
or
sub
xor
icebp
dec
std
cmpsb
and
shll
into
lds
adc
repnz
insl
lds
scas
call
inc
repz
movsl
add
es
lods
mov
scas
test
lods
lods
jge
push
lret
out
leave
mov
push
push
nop
popa
jmp
scas
push
push
cs
lret
jecxz
and
js
in
lds
push
out
push
insb
test
in
adc
out
add
cltd
mov
pop
fdivs
pop
sub
fstp
sbb
adc
sbb
shrb
dec
in
and
call
push
sub
mov
sub
fldenv
mov
loop
jle
nop
mov
fstps
pop
mov
sbb
out
sbbl
std
stos
cld
ds
fwait
xor
mov
mov
jmp
lcall
add
inc
add
fnstcw
inc
push
add
pop
leave
adc
push
cmpsl
popf
dec
adc
xchg
mov
add
hlt
cli
std
pop
shlb
push
leave
inc
add
push
insb
arpl
adc
adc
testb
add
jmp
push
call
add
ret
dec
push
enter
adc
inc
xchg
push
mov
push
hlt
push
std
je
iret
jb
pop
js
add
jb
iret
scas
push
add
mov
fstps
fistpll
std
pop
ljmp
lds
mov
add
faddp
push
push
push
or
add
in
push
xor
push
pop
or
scas
push
adc
repnz
fisubs
gs
popa
dec
adc
mov
inc
test
bound
addl
push
push
push
gs
repnz
lock
add
xchg
push
mov
jmp
xchg
mov
sub
inc
add
push
add
sbb
push
pop
aam
dec
xchg
and
test
add
ret
add
aas
pop
ror
fldl
mov
add
add
mov
icebp
add
sbb
or
add
dec
mov
lea
ficomps
adc
out
push
out
shrl
xlat
adc
out
fidivs
add
popa
dec
fcoms
popf
push
add
push
std
pushf
loope
push
pop
dec
fsubr
fstl
add
dec
in
cld
negb
pop
adc
int3
xorb
lods
xchg
jecxz
cmc
sar
cmp
mov
call
pusha
mov
jecxz
mov
jp
pop
rorb
add
in
xchg
jp
pusha
dec
fcomps
arpl
add
dec
test
jae
or
push
loopne
das
in
add
std
adc
ja
jno
iret
hlt
adc
inc
mov
or
xchg
pushf
call
jne
xchg
popa
call
aaa
lcall
push
or
sti
jne
addb
jl
cmp
or
dec
pushl
imul
call
pop
ljmp
adc
jne
jne
sbb
jnp
pushl
mov
test
mov
lret
mov
sub
mov
je
imul
xor
add
cmpb
mov
shlb
mov
sub
ds
pop
insb
lock
add
out
les
adc
push
lahf
xor
cmpb
gs
add
adc
daa
xor
mov
rolb
ss
scas
add
fnstsw
into
sub
repnz
daa
stc
mov
add
sbb
pop
sarb
mov
sbb
mov
lret
pop
mov
dec
lret
pop
add
push
fbstp
rcrl
into
push
mov
aad
fiadds
or
fwait
jmp
or
out
iret
shlb
mov
popf
mov
sbb
adc
push
nop
test
adc
clc
andb
icebp
jns
sbb
add
pextrw
push
dec
cltd
or
push
add
add
cltd
adc
sub
bound
cmp
push
fucom
mov
sbbb
ret
and
loope
adc
rcll
call
push
jmp
mov
in
add
sub
xorb
inc
jmp
mov
xchg
push
int3
pop
add
add
add
es
icebp
inc
mov
xchg
cmp
jo
or
arpl
inc
adc
or
mov
nop
xor
jmp
nop
fdivp
cmp
fstpl
mov
sti
les
aas
adc
push
mov
jns
push
adc
add
js
mov
les
rclb
adc
sar
testl
add
shrl
mov
std
test
lret
out
mov
xchg
inc
jg
fnstenv
scas
inc
sarb
xchg
push
sub
or
mov
cld
mov
aaa
aaa
adc
push
aas
or
insl
or
scas
filds
add
mov
add
push
mov
mov
mov
mov
mov
add
js
daa
fadd
jno
das
adc
ret
fdivp
adc
or
sbb
ret
stos
adc
mov
and
or
jb
inc
ljmp
adc
or
or
add
mov
imul
in
mov
pop
out
ret
adc
jl
sub
out
inc
std
and
inc
or
inc
fiadds
vmovupd
xchg
stc
insb
add
adc
or
xchg
ljmp
inc
add
xor
mov
fimuls
jmp
inc
aad
call
pop
rclb
popf
inc
jmp
add
push
add
in
pop
pop
into
cli
cld
frstor
movsl
cld
insb
lcall
lea
movsl
cld
scas
mov
add
imul
stos
cmp
sahf
data16
mov
pop
adc
cld
bound
cmc
push
sarl
sti
cmp
das
rclb
add
dec
nop
add
mov
call
push
push
or
inc
push
testl
jne
push
or
mov
aas
add
pop
xor
or
add
aas
sti
jne
push
std
call
lret
or
push
xchg
call
push
or
pop
mov
sti
jne
or
sbb
loope
jb
fidivl
shl
add
push
ljmp
fs
add
fcomps
xor
in
adc
xor
frstor
jecxz
cwtl
mov
sub
cmpb
cld
jmp
test
imul
inc
mov
loopne
xor
push
pop
sbb
add
push
push
dec
std
mov
mov
into
push
das
or
and
or
xor
add
addl
ficoml
cmp
jl
mov
stos
in
fiadds
xor
lahf
sbb
cmp
mov
mov
or
mov
ud2
mov
out
pop
xor
inc
push
xor
out
repz
std
arpl
in
push
insb
lods
int
aas
push
je
out
mov
xorb
popf
cli
xchg
add
push
adc
mov
add
lock
into
mov
call
sub
and
xor
test
push
popf
jb
mov
cmp
sbb
sahf
cld
sbb
test
jo
ficoml
test
aad
divl
mov
cmp
xor
sbb
add
jae
pop
sbb
scas
hlt
add
popf
adc
dec
rorb
rcl
jl
movsl
xlat
repnz
gs
ret
add
cmpl
je
adc
cli
test
adc
add
mov
test
xchg
ret
pop
rclb
call
xchg
testb
sub
adc
notl
loopne
push
add
dec
shrb
mov
and
jg
movlps
sub
imul
fdivrp
push
sbb
fs
test
out
adc
fidivrs
sbb
cs
ss
sahf
sub
insb
mov
clc
test
mov
mov
sub
xor
mov
lods
addr16
das
inc
add
mov
add
fidivrs
or
inc
add
jl
inc
push
ljmp
xchg
test
cmc
push
insl
cwtl
cmp
test
add
repz
arpl
dec
pop
adc
pusha
adc
movsb
or
mov
adc
add
sti
out
sbb
mov
mov
add
xchg
clc
add
xchg
rcr
fwait
out
shll
movsl
pop
into
xchg
cmpsb
cmp
fstps
mov
in
cs
fwait
mov
sbb
pop
shl
and
pop
xor
push
lahf
pushf
sbbb
fwait
xchg
jmp
fstl
cmc
mov
fucom
jb
fmull
mov
inc
push
imul
fs
pop
mov
xchg
jb
movsb
fsubrs
lds
sub
test
sub
adc
std
cmpsb
dec
add
sub
adc
int3
mov
sub
int
inc
in
jo
push
aam
and
lods
add
dec
std
add
data16
jne
popa
push
call
psubusw
mov
sti
push
das
pop
jb
fmull
xchg
jno
das
leave
inc
movsl
into
push
ja
push
adc
push
clc
jmp
movsb
mov
or
aas
add
sbb
add
movsb
mov
add
inc
mov
movsl
cmc
hlt
adc
push
sub
jg
mov
fildl
mov
push
dec
call
ljmp
fsubl
push
fiadds
push
push
mov
sbb
add
push
test
repnz
cs
out
push
mov
cmpsl
xor
addb
adc
jb
daa
lock
cld
cld
fwait
mov
popf
mov
jnp
shrb
stos
or
sub
dec
stos
jns
pop
jb
or
jge
add
ret
fldcw
mov
dec
loop
aas
or
and
mov
ficoms
out
sahf
or
add
out
in
out
rcrb
cmpsl
pop
out
fimuls
out
pop
sbb
popa
dec
fimull
cmp
sbb
cmp
jnp
pop
test
into
adc
lea
ficoms
mov
push
out
fwait
or
pop
ret
addr16
xlat
jp
std
shr
dec
out
jp
cltd
xchg
hlt
push
lret
jp
push
jmp
xlat
jp
std
xchg
in
push
add
popa
push
jb
dec
push
clc
fstl
jae
adcl
je
aad
or
add
or
repz
subb
ficoms
out
dec
mov
or
out
adcb
sub
adc
jmp
mov
fsubr
inc
mov
xchg
or
scas
pop
sbb
jmp
lds
sbb
fistpll
add
add
inc
js
push
cld
jo
in
out
or
push
mov
mov
jmp
das
adc
add
cli
icebp
push
aaa
adc
and
lret
mov
mov
add
lds
add
xchg
test
xchg
jle
sti
adc
jmp
sbb
insb
cltd
jg
out
xchg
jle
sti
adc
cmp
jo
xchg
rolb
cmp
jg
mov
sbb
mov
jb
fidivs
inc
call
cltd
and
or
outsb
ficomps
ss
pop
test
pshufw
sbbl
add
sarl
js
add
test
lods
cld
inc
sub
or
xchg
fdivp
xor
add
cmpsl
cwtl
jecxz
push
lods
sbbl
test
mov
and
lock
shrb
or
out
mov
and
cmc
out
jge
add
xor
pop
cs
add
inc
stos
push
push
leave
movsb
inc
sahf
adc
cmpsb
test
adc
or
pop
xor
adc
xchg
push
add
dec
inc
add
push
xor
fcoml
out
cmp
pop
push
xor
adcb
cmp
add
add
out
test
add
xchg
sub
mov
stc
stc
hlt
add
test
jb
pop
cwtl
jmp
add
xchg
or
fstl
cmp
add
call
loopne
cmc
test
adc
leave
xchg
fucomp
fstl
xorl
adc
pop
lcall
jmp
sbb
xchg
or
fstpl
adc
fiaddl
add
sbb
test
adc
imul
mov
call
xchg
repz
out
pop
xchg
cld
jb
stos
mov
in
adc
lds
gs
add
cmp
in
cmpsl
or
ret
pop
std
pushl
cmc
cli
lcall
push
push
lock
sti
adc
sub
jp
ljmp
data16
in
je
hlt
adc
repz
incb
lcall
mov
aaa
push
add
sub
cld
mov
addr16
mov
cmp
sub
je
sbb
mov
fmulp
cmpsb
test
ret
inc
lret
cmpsl
cld
cs
mov
addr16
hlt
sti
mov
movsl
cld
mov
cmpsl
add
bound
pop
int
push
xchg
movsl
cld
jno
xchg
incb
imul
add
push
test
inc
inc
test
add
cmc
dec
arpl
dec
pop
je
xor
bndstx
fisubs
cmp
cmpsl
repz
push
sub
std
stc
mov
sub
pop
test
cmc
loop
sub
cwtl
adc
aad
mov
outsl
add
inc
adc
jns
lods
mov
add
ficoms
stos
add
adc
jl
jno
mov
nop
fildl
shl
xorb
mov
sbb
mov
sbb
mov
mov
arpl
dec
push
inc
cmpsl
in
call
mov
pop
push
cmc
aas
lods
insb
sbb
add
loop
repnz
cmp
xchg
loop
ficoms
add
movsl
inc
call
cmpsb
enter
xchg
out
jmp
dec
rcrb
stc
call
outsb
adc
push
test
jo
orl
adc
jecxz
add
adc
adc
sub
mov
ljmp
in
xchg
mov
pop
sbb
jno
adc
xchg
stc
out
cmp
clc
sub
test
mov
xor
add
add
add
add
inc
in
mov
hlt
lret
xor
std
test
call
jmp
dec
movsb
call
cmp
lock
add
dec
imul
jne
or
sahf
xlat
mov
hlt
jp
aaa
ret
push
mov
lods
adc
out
out
aad
jne
or
jbe
lds
mov
cmp
fldl
jo
lods
inc
cmp
mulb
rcrb
jp
ds
in
out
xor
or
js
jmp
push
cmp
cmp
adcb
or
pusha
cmpsl
cld
shll
xor
add
fidivs
sbb
fs
addr16
call
add
in
cmp
popf
cmp
and
xchg
and
pusha
out
xchg
add
jne
jle
addr16
ja
je
add
ss
hlt
cmp
inc
cmp
in
mov
arpl
iret
push
sarl
sub
lods
xor
movsb
dec
sbb
add
call
out
mov
sbb
dec
fcoml
out
dec
cmp
adc
jmp
out
fisubs
aas
cwtl
or
out
push
out
mov
add
mov
push
mov
cmpsb
loope
shll
lcall
adc
xchg
mov
mov
std
add
or
inc
adc
call
movsl
xchg
cpuid
sbb
add
cmpsl
mov
add
or
adc
fstl
or
dec
mov
jmp
mov
lea
call
lret
mov
cmp
mov
mov
fstpl
roll
frstor
shll
add
xor
mov
jae
sbb
xchg
jb
jg
clc
push
test
verw
sub
add
inc
mov
xlat
clc
sub
lea
xchg
fistpll
inc
in
cmpsl
sti
jae
cltd
inc
sub
mov
xor
test
mov
std
decl
repz
call
inc
adc
pushl
sub
lidtl
pushl
jns
or
out
cmpl
cld
push
add
cld
pushl
add
leave
dec
xchg
pushf
add
ja
xor
or
jl
jg
test
inc
add
in
mov
cmc
pop
jg
pusha
add
add
gs
mov
inc
xor
sbb
inc
lods
rorl
dec
jbe
inc
mov
sub
xchg
add
inc
mov
lahf
pusha
aaa
add
sti
shlb
inc
fcompl
add
mov
test
inc
cld
mov
hlt
cwtl
adc
add
into
jno
dec
mov
pop
dec
and
cmc
add
jb
loopne,pn
xlat
push
push
xchg
stos
jg
call
ds
xchg
fwait
or
sar
mov
imul
ljmp
sbb
jns
or
add
push
mov
add
mov
inc
cli
cltd
inc
in
mov
into
mov
fcoms
out
sbb
jno
outsb
jns
rcr
cld
pop
pop
out
dec
mov
jae
mov
jecxz
add
inc
or
add
bswap
pop
lahf
hlt
dec
shr
jecxz
cmp
fstl
addl
popf
adc
lods
push
test
aam
and
andb
test
ljmp
addl
cmc
iret
inc
cmp
cld
sub
xor
cwtl
pop
icebp
js
or
sbb
std
cmp
inc
mov
rcr
xchg
sahf
fsubr
add
xchg
jns
push
xchg
jno
xor
xchg
cmp
adc
lods
sarb
test
push
test
xor
adc
adc
push
add
inc
mov
mov
xchg
xchg
popa
enter
rolb
or
cld
mov
pop
in
rclb
test
test
adc
jmp
inc
fsubp
divl
ret
inc
ja
add
xchg
add
add
ja
add
outsb
ret
inc
outsb
jp
add
clc
vpandn
mov
loopne
fidivs
cld
add
js
add
pop
lea
cmpsl
xor
cs
xor
mov
cmp
sahf
sbb
stc
push
es
ja
adc
pop
xor
jns
shlb
jg
into
jns
sbb
movsb
je
rcll
fidivs
call
cld
pop
hlt
adc
mov
adc
test
fdivrp
icebp
mov
pushf
jp
lods
add
adc
mov
pushf
pop
loopne
lds
imul
test
or
and
in
mov
fnsave
mov
push
flds
and
add
out
pop
outsb
cmc
fwait
add
dec
out
sahf
xlat
jae
data16
into
loop
cs
dec
jl
push
into
inc
out
adc
jg
std
ljmp
push
xchg
dec
scas
jne
xor
cmp
sub
ficoms
xor
loope
call
push
xchg
inc
pop
adc
add
std
dec
push
aam
insb
jbe
cld
bnd
pop
add
adc
pop
outsl
test
adc
or
cmp
jmp
adc
lahf
adc
adc
mov
orb
call
push
std
or
cwtl
and
push
push
or
xor
lret
call
add
sub
mov
sbb
str
add
dec
je
xlat
jo
mov
testl
mov
inc
mov
aaa
xchg
hlt
test
and
sar
add
iret
or
test
or
add
mov
test
xchg
bnd
ds
adc
fsubrp
xchg
xorb
add
in
dec
mov
dec
add
add
das
out
lret
lds
mov
stos
lret
test
ja
mov
inc
lods
popa
out
js
add
adc
push
arpl
iret
cld
sub
add
mov
sbbl
xor
std
stc
adc
cld
mov
mov
rcll
pop
or
mov
sub
out
sbb
add
mov
or
mov
lcall
add
mov
cwtl
addb
cwtl
and
lds
hlt
bound
out
out
gs
mov
rorl
stos
cmp
xor
push
jno
inc
push
cmp
out
xchg
mov
add
xchg
push
jle
add
das
stos
test
sti
sbb
pop
sar
lock
sub
popf
push
aad
into
dec
mov
negl
mov
fistpll
fs
loop
adc
test
push
adc
jo
insb
cmp
xor
inc
cmp
out
sub
add
add
ret
mov
mov
jno
jo
fs
cld
lcall
out
cld
push
adc
add
mov
xor
mov
cld
jae
sub
lea
cli
jmp
test
call
xchg
mov
lods
xor
jg
mov
ret
jle
adc
push
pusha
and
shlb
lods
mov
inc
pop
pop
add
xor
add
aaa
xchg
popa
in
inc
stos
add
mov
mov
repz
jl
das
adc
push
je
sub
push
and
jae
adc
jg
jle
jae
ljmp
out
jl
fbld
mov
addr16
sub
push
add
dec
push
mov
adc
cltd
repz
pop
nop
sub
xchg
jo
or
iret
push
sbb
jl
fbld
xor
sarl
shrb
cwtl
and
into
jno
push
pop
shl
jb
xor
xlat
inc
mov
push
mov
movntq
test
push
movsb
add
mov
imul
ds
xchg
pop
xchg
mov
jge
cmpb
push
lods
adc
add
jle
ret
out
shl
sbb
fdivp
arpl
in
iret
popa
push
xchg
and
lds
xchg
push
xchg
cmpsb
pmuludq
mov
ds
xchg
cmp
imulb
cltd
xor
add
loop
adc
jmp
ret
jnp
and
into
or
jp
out
add
xor
jmp
fstl
adc
cmpb
rclb
mov
ficoml
fbld
loop
jo
repnz
cld
cli
gs
insl
push
cmp
push
bound
icebp
jmp
mov
imul
or
sbb
cwtl
lahf
sti
pop
scas
bound
enter
idiv
push
call
pop
sbb
jl
or
pushf
adc
push
sbb
mov
ror
testl
mov
sbb
push
in
push
push
sub
dec
xor
mov
sti
add
adc
xchg
inc
ss
jl
call
xorl
test
ss
call
in
xor
lahf
in
fisubs
add
std
ljmp
inc
xchg
jb
rcrl
inc
push
push
aas
repnz
and
dec
out
xchg
inc
pop
adc
pop
dec
push
jno
inc
add
out
add
in
push
dec
cltd
cld
test
out
clc
loop
adc
gs
movsb
push
push
cs
adc
cmp
jmp
xor
xor
mov
add
insb
push
std
aaa
adc
sar
or
jp
jge
packuswb
adc
addl
fimuls
add
jl
cmp
add
pop
cmp
push
loopne
scas
int3
cltd
add
cltd
sahf
pmaxub
pop
jbe
pop
fidivrl
and
popa
jecxz
leave
sbb
out
and
add
out
push
out
fidivs
dec
add
adc
ljmp
aad
sub
lds
mov
add
adc
aad
mov
call
testb
xchg
jnp
mov
into
sbb
test
dec
mov
pop
js
xor
jbe
stc
inc
lret
repz
orb
inc
add
call
mov
adc
pop
jns
cmp
add
pop
adc
cmp
dec
fdivrp
out
imul
dec
lret
xchg
inc
add
xchg
adc
pop
sub
add
sti
jne
ds
adc
mov
or
pop
mov
icebp
pop
or
test
jl
pop
mov
xchg
jo
rclb
testl
xchg
cmc
fs
xor
fwait
icebp
lcall
test
rol
add
test
xchg
add
pop
mov
je
add
xchg
cli
or
mov
decl
fidivrs
sbb
add
mov
jns
arpl
add
gs
cld
jg
add
push
in
mov
push
cld
arpl
incl
in
shlb
push
inc
add
rcrb
pop
out
jnp
cld
gs
cld
mov
mov
xor
ret
jle
sarl
jge
lret
aam
sbb
mov
add
lcall
xor
jbe
pop
rcl
out
adc
sti
fs
xchg
add
adc
js
jl
enter
jns
adc
sub
xor
out
sbb
call
arpl
add
inc
sti
aad
sub
push
out
add
and
sbb
mov
sub
cli
js
cmp
adc
mov
leave
scas
add
leave
sub
pop
clc
cmp
or
adc
scas
xchg
loop
cmp
jbe
jmp
push
sub
cmpsl
mov
addl
add
jmp
inc
adc
dec
icebp
movl
cltd
adc
cltd
push
lods
std
bound
jae
pop
cli
imul
ficoml
mov
inc
std
or
inc
icebp
in
jne
stc
decl
aaa
push
out
shll
or
add
pushl
jns
add
jg
ja
or
fcomip
xchg
xchg
outsl
add
mov
stc
inc
push
das
rol
or
cld
rorl
lfs
adc
pusha
ret
je
cmp
cmpl
call
jle
jne
call
xchg
insb
add
or
xor
or
cld
adc
std
jmp
icebp
aas
fdivrp
ds
lock
cmp
add
and
hlt
scas
sbb
add
hlt
cld
lods
pop
cwtl
test
imul
js
and
sub
sar
mov
push
mov
inc
xor
sbb
add
push
movsb
mov
xor
xchg
je
mull
call
psrld
push
xchg
adc
add
or
push
mov
in
inc
fimuls
mov
std
mov
js
cmc
dec
adc
jge
jno
sub
fnsave
add
push
xor
addr16
fidivrs
insb
outsl
aas
divb
cmpsb
out
mov
add
adc
add
or
push
jb
sti
data16
sbb
mov
add
insl
inc
jae
jmp
out
add
stc
out
push
subl
adc
mov
and
out
data16
aam
fstl
mov
pop
jns
mulb
call
mov
ljmp
imul
ficoms
mov
out
dec
xchg
fiadds
jecxz
xchg
rcrl
adc
pop
clc
push
fisttps
hlt
add
xchg
jmp
jmp
jno
or
dec
dec
pushf
xchg
lea
cwtl
add
adc
inc
pop
cwtl
jno
scas
adc
add
adc
aaa
adc
jge
jmp
sub
cltd
call
les
cld
push
xor
jg
mov
pop
add
or
pop
adc
mov
xchg
xlat
je
xchg
jno
rolb
push
jns
push
add
mov
std
sub
lds
js
subl
add
testb
in
cmp
test
cld
gs
clc
mov
bound
cli
mov
int3
adc
pop
xor
cld
leave
or
ret
pushl
jns
jae
cli
mov
test
mov
jecxz
popl
fidivrs
mov
push
xchg
mov
icebp
hlt
shlb
rclb
jnp
push
adc
clc
jno
test
lock
adc
in
in
lods
shl
js
sbb
rcl
add
loope
sbb
sub
add
repnz
scas
aas
jbe
sub
repnz
pop
and
leave
add
jge
xchg
push
test
faddp
jno
and
out
fwait
sbb
add
out
fwait
adc
add
out
fwait
or
call
inc
je
jmp
jne
clc
jmp
gs
clc
jmp
cmp
pop
and
and
cld
aas
inc
dec
clc
jmp
jecxz
call
rcrl
call
cld
mov
add
adcl
mull
adc
xchg
xor
nop
in
loope
pop
cld
jbe
fdivl
add
out
push
insl
cld
mov
jns
dec
gs
inc
loope
jns
add
pushl
insl
mov
in
inc
adc
test
adc
xor
ret
inc
mov
xor
adc
pop
insl
incl
test
in
psubw
and
test
inc
add
inc
dec
push
xlat
inc
sti
adc
loope
inc
and
clc
sub
xchg
xor
test
add
adc
add
sti
je
inc
sti
je
pop
sti
je
and
adc
mov
rorl
test
adc
movb
jp
ja
js
imul
je
jecxz
je
sahf
jns
pop
mov
inc
fsubl
sbb
jns
lcall
add
ljmp
push
mov
dec
hlt
and
inc
pop
xchg
repz
mov
jne
add
fmulp
and
push
jbe
hlt
cld
pop
add
fcompp
ljmp
dec
movsb
adc
gs
xchg
adc
xchg
sbb
leave
enter
imul
push
aam
int3
test
sarb
shrl
sbb
push
popl
ficoms
inc
in
lret
daa
cli
ret
addb
mov
lret
fdiv
add
xchg
in
orb
fdivp
mov
add
pop
push
adc
js
clc
aam
aad
xor
pushf
and
mov
push
adc
fstps
aad
aas
loop
out
pop
int
aaa
cmp
pop
sahf
adc
push
push
jecxz
out
or
aad
push
icebp
mov
jae
imul
leave
sar
xor
leave
mov
inc
jnp
repnz
or
push
pop
frstor
mov
pop
imul
ret
adc
add
push
pop
bound
mov
or
fstl
std
cmp
in
cld
adc
xchg
je
pusha
in
fldenv
insb
mov
or
and
ret
and
fwait
ret
push
leave
xchg
pop
and
cld
shlb
xchg
in
jmp
mov
pop
and
lcall
mov
push
mov
cld
pop
stc
adc
sti
add
pop
xor
rorb
inc
and
xchg
add
mov
push
inc
xchg
sti
xor
cmc
jmp
mov
arpl
mov
cmc
ds
inc
adc
inc
sbb
push
fidivs
and
or
out
imul
stos
push
sbb
jl
gs
rorb
cmpsl
mov
int
mov
repnz
test
add
push
lahf
add
addr16
adc
insb
sar
mov
mov
push
aam
movb
loop
mov
pop
mov
fbld
rcll
inc
fisubrs
sar
jmp
push
inc
fsubp
lds
mov
hlt
add
js
push
popa
pop
push
add
cmp
and
xor
sub
clc
add
addr16
or
jle
ficomps
pusha
fucom
cltd
les
mov
jno
aad
pop
clc
fstps
repnz
fwait
xchg
or
fwait
mov
fbld
dec
xor
repz
iret
pop
lret
aad
cmp
mov
fdivr
out
outsl
lret
aad
daa
inc
pop
icebp
fiaddl
addr16
inc
pop
adc
out
out
push
out
scas
inc
add
in
sub
loope
add
test
push
xchg
sub
dec
xor
std
aad
adc
adc
sti
loop
mov
out
cmpsb
sbbb
call
sbb
insl
sbbb
shr
push
add
or
add
fnstsw
gs
adc
mov
out
add
popa
ljmp
imul
cmp
jbe
call
shll
add
call
enter
call
push
call
add
jl
add
xchg
call
in
sbb
add
push
cmp
inc
sub
test
call
test
notl
add
leave
movsl
cld
decl
pop
mov
add
ret
mov
push
call
push
and
push
je
ret
pop
mov
jg
jecxz
adc
fisubs
jb
fistpll
cld
pop
and
jbe
cli
lcall
dec
incb
rcr
or
add
jbe
add
inc
add
jns
addl
or
les
hlt
out
and
shrl
out
shrb
into
jns
mov
testl
pop
aam
out
test
push
xor
ljmp
add
mov
cli
inc
push
pop
xor
sbb
ret
fcomps
lock
jno
cmp
jp
mov
daa
add
stos
mov
es
pusha
shll
add
mov
adc
shrl
std
xchg
adc
lea
push
rclb
std
adc
in
add
ret
stc
shrl
pop
xchg
in
mov
xor
loope
out
rclb
out
leave
xchg
stos
push
sbb
or
adc
add
rdtsc
test
mov
pop
jle
mov
add
das
clc
pop
pop
dec
sub
out
outsl
sahf
cwtl
lds
adc
xchg
jae
stc
enter
gs
fs
cs
sbb
lea
or
rol
xchg
rcrl
lods
stc
or
int
dec
inc
lds
in
add
fisttpll
vpunpcklwd
add
add
add
call
pop
ret
lret
andl
call
sti
call
mov
call
jle
push
mov
xchg
xchg
add
dec
lock
repnz
ljmp
or
add
sbb
push
inc
loop
mov
add
xchg
sbb
dec
push
cld
fidivrs
push
mov
sub
fisubrs
mov
bound
push
hlt
or
sbb
aas
xchg
lret
fisubrs
sbbl
cmp
sub
xor
add
mov
inc
mov
int
shr
adc
fdivp
inc
jae
add
mov
push
mov
cmc
je
mov
ljmp
icebp
cmc
inc
jae
loop
adc
test
sbb
leave
adc
add
pop
imul
mov
or
ret
adc
jb
jno
jb
fidivs
in
or
std
or
adc
loop
fucomi
out
int3
or
inc
ljmp
lock
in
int
rcrb
xchg
add
stos
ljmp
inc
in
cmp
or
fsubl
pop
enter
jbe
adc
jbe
sar
imul
dec
stc
stos
call
push
push
lea
subl
sti
cld
jl
roll
jb
fs
cld
je
push
mov
xchg
cmp
into
pop
ffreep
cld
cmp
mov
mov
loope
adc
sub
pop
aas
pop
push
sar
rorl
fstl
push
pop
sub
out
arpl
pop
mov
push
aas
jno
pop
outsb
xor
mov
or
arpl
add
inc
dec
mov
jp
xchg
jno
dec
or
aad
popa
dec
pop
mov
inc
dec
push
dec
sti
push
mov
mov
mov
push
out
lock
decl
aaa
sti
adc
mov
inc
mov
xchg
inc
mov
jecxz
clc
mov
sahf
lods
inc
aaa
adc
mov
stc
cld
pushl
jmp
xchg
lock
or
jl
hlt
mov
inc
sti
push
js
add
fmulp
cmp
fdivp
aad
mov
xor
mov
rcll
cmpsl
daa
into
mov
jmp
add
jnp
fisubrs
push
arpl
jl
mov
cld
or
out
gs
cld
push
pop
xchg
shrb
adc
lcall
add
push
add
addr16
jg
bound
pop
mov
rcll
int
xchg
out
push
push
test
mov
push
jae
ret
ds
adc
jl
stc
jno
das
mov
lds
aad
in
fidivrl
in
pop
add
push
ficoms
bound
pop
roll
shl
jmp
xchg
cmpsb
neg
popl
popa
xchg
andb
jae
add
adc
call
fs
lret
inc
cmp
jb
out
orl
push
shll
cld
jb
or
pop
push
inc
or
lea
mov
test
pusha
xlat
or
cmpsl
or
mov
mov
cld
pushf
cmp
cld
xchg
movsl
xchg
lods
pop
xor
test
pop
jb
or
pop
andb
sbb
jmp
mov
bnd
rcrb
push
sub
stos
into
adc
mov
adc
cmp
cmp
out
test
loope
filds
jne
sub
jmp
add
inc
push
mov
sti
push
ja
mov
inc
faddl
lea
aaa
sti
push
stos
xchg
mov
incl
or
add
mov
ds
aaa
adc
cmp
test
push
clc
mov
lahf
cld
add
push
lea
fiadds
xor
adc
hlt
add
je
in
or
outsb
cld
icebp
xchg
shl
sti
push
add
push
mov
mov
into
jnp
sub
xchg
jg
pop
jo
sbb
rcrb
inc
jae
cmp
iret
xchg
outsl
mov
insl
cld
xchg
jp
out
cmp
add
fldt
mov
push
xchg
fdivr
imul
push
testl
dec
repz
add
adc
jb
or
stos
and
push
sbbl
bound
pop
pop
xor
pop
outsl
pop
dec
imulb
pusha
popa
je
pop
ss
mov
out
ret
push
mov
pop
in
sbb
int
add
and
in
push
frstor
int3
add
test
add
jae
jns
fldt
adc
imul
add
jb
mov
lret
mov
cmc
and
adc
fisttps
mov
push
cld
pop
es
dec
adc
add
repnz
adc
insl
adc
cli
fs
dec
bound
dec
push
cld
aaa
xchg
bound
mov
mov
push
adc
cld
push
pop
shl
mov
icebp
call
addr16
fbld
adc
and
sub
xchg
data16
xchg
cmp
sar
rcll
cld
into
xlat
loop
add
inc
mov
add
mov
mov
icebp
xchg
stos
cmp
dec
adc
int3
or
dec
call
sti
push
fadds
push
mov
mov
ljmp
mov
pop
pop
mov
rclb
jge
cmp
push
lea
in
dec
in
call
xchg
addr16
and
cmp
in
stos
in
pop
outsb
mov
in
pop
mov
aas
xchg
ficomps
aam
outsl
fildl
add
in
jb
loop
or
ss
std
cmp
xor
into
int
pop
test
pop
jle
stos
add
fdivrp
aad
push
push
clc
push
push
xlat
shrb
lcall
icebp
in
imul
xchg
ret
imul
je
jne
lods
jo
mov
imul
jnp
imul
sti
rcll
jle
inc
mov
pop
push
mov
xor
lods
push
imul
call
fs
mov
sub
push
mov
mov
jge
pop
xor
rcr
test
push
test
push
jge
icebp
xchg
je
dec
add
push
pop
int
test
dec
out
inc
aaa
cmpsl
push
mov
push
adc
cs
add
mov
lock
popa
cmp
jb
add
nop
jg
and
incl
add
xor
mov
cld
pusha
push
aas
cmp
ror
sarl
jae
cmpsb
into
cmp
rclb
pop
mov
rorb
lods
movaps
xchg
imul
out
sti
cld
hlt
test
test
pop
je
jb
pop
iret
repz
out
lock
and
out
pop
outsb
push
std
es
out
test
orl
xchg
add
sti
mov
xchg
and
mov
jo
int3
cmp
inc
enter
je
aad
mov
std
push
push
out
jno
ret
incl
call
out
lcall
aam
cmp
jg
and
jno
pop
push
ljmp
and
aaa
push
sti
xor
decl
call
sti
jne
out
jp
sti
cmp
inc
or
sub
push
movsb
hlt
cmp
add
jmp
jne
push
insl
addr16
push
loope
out
add
cmp
in
inc
or
dec
add
fsubp
jge
cmp
jne
sub
lock
mov
adc
mov
and
dec
nop
ficoml
sbbl
jge
fbld
mov
ss
arpl
rcrl
pop
cli
testl
pop
adc
lcall
or
stc
sub
push
jnp
cmc
in
fstps
out
mov
or
push
mov
enter
cmpb
test
cmp
sub
rcl
out
js
push
ss
movsl
out
ficoms
sti
dec
stc
jb
ljmpw
adc
loope
adc
lds
add
or
retw
mull
add
push
bound
loop
es
mov
mov
or
mov
inc
add
push
data16
orb
dec
push
rcr
mov
aam
mull
inc
mov
xchg
cmc
addb
jmp
sbb
mov
push
imul
sub
adc
pop
or
mov
cld
or
icebp
lods
ss
repnz
and
add
in
call
mov
clc
call
adc
fisttpl
test
adc
add
mov
pop
cs
fwait
js
jns
cli
push
add
hlt
push
add
mov
dec
in
sub
std
je
je
add
mov
call
mov
ret
lea
call
adc
add
data16
cmp
js
inc
or
pop
xchg
xchg
enter
iret
leave
sti
leave
fidivrs
dec
cmp
mov
mov
sbb
mov
arpl
cmova
fidivs
ret
pop
push
jl
mov
cmpsl
arpl
out
in
sti
push
xor
ret
ret
pop
ja
add
scas
aas
das
shlb
clc
decl
fisubrs
aaa
mov
ja
push
pop
in
cld
add
ja
fidivrs
loope
rcr
fs
ss
mov
cwtl
and
push
xchg
mov
test
dec
out
add
data16
andb
mov
dec
out
jno
in
jg
adc
add
mov
outsl
loope
cmp
push
dec
arpl
push
loope
add
cmp
mov
mov
int3
in
test
xchg
cmpsb
fldln2
popf
sub
jecxz
dec
xchg
popf
add
add
pushl
adc
inc
pop
popa
inc
cld
aam
mov
push
mov
popf
dec
andl
lock
cld
imul
add
iret
pop
push
mov
push
std
xchg
inc
adc
xchg
mov
inc
cld
out
xchg
dec
mov
fstl
add
fstl
lds
adc
jmp
ficoml
mov
add
loope
adc
add
icebp
add
pop
pop
mov
xchg
add
push
dec
push
mov
lea
xor
pushl
mov
das
adc
add
mov
jns
push
jg
lock
test
jne
add
les
test
test
add
imul
into
push
int3
cmp
test
test
ss
add
cltd
jns
mov
xchg
scas
jno
jo
adc
adc
ret
add
add
in
int3
sti
pop
int3
fisttps
xor
mov
fmuls
push
pop
mov
mov
idivl
cmp
mov
fmuls
push
arpl
mov
or
pop
jb
cmpsl
pop
dec
mov
inc
or
jae
add
mov
mov
fbstp
add
push
add
push
aaa
add
fisubs
pop
dec
out
inc
or
pop
add
ficoms
jb
stc
xchg
out
mov
aaa
sub
cmc
xchg
movntq
push
sarl
fstps
gs
cltd
loope
mov
mov
adc
pop
xor
add
fwait
stos
aas
pop
out
sbb
pop
insl
push
mov
sub
xchg
add
cltd
mov
enter
pusha
test
fwait
outsl
push
fiadds
adc
push
adc
fdivr
fcomps
push
rcr
jmp
gs
add
push
cmp
inc
je
pop
push
cld
je
inc
out
fadds
arpl
cmp
push
sub
imul
ret
cmp
cmp
icebp
movl
bound
xchg
cld
aad
fldl
inc
cmp
xlat
xchg
add
mov
xchg
lea
rolb
lcall
or
std
push
shl
push
cmp
and
adc
in
imul
add
push
faddl
lock
or
sbb
andb
sti
jl
clc
mov
orl
inc
xchg
lcall
cmp
or
pop
clc
call
out
sbb
fmull
jg
inc
cld
or
push
incl
xchg
aaa
push
pop
fistpll
in
fsub
jno
add
or
aaa
adc
insb
aad
push
int3
sarb
adc
add
or
aas
rcll
aaa
push
mov
mov
fistps
or
decb
jl
pop
imul
int
fnstenv
push
call
mov
or
sbbl
add
imull
lahf
pop
dec
mov
xor
add
xchg
loope
xor
push
mov
inc
xchg
scas
ss
inc
adc
mov
loop
pop
test
fs
loop
lods
add
adc
xor
inc
sbb
mov
daa
add
inc
testl
pushf
inc
out
xor
jge
push
mov
pop
add
inc
push
ljmp
pop
pop
mov
ljmp
sbb
shl
push
xchg
fwait
imul
pop
jbe
inc
and
mov
cwtl
fidivs
sub
ljmp
inc
cld
out
mov
jne
add
fs
into
xchg
roll
mov
dec
or
add
add
adc
cltd
aas
jmp
mov
or
leave
jae
pop
cmp
sti
loope
inc
outsb
repnz
negb
cld
pop
and
or
imul
les
or
push
or
mov
sbb
or
add
jl
push
outsl
xchg
add
jg
mov
pop
add
out
pop
in
aad
push
pop
inc
sub
aaa
sbb
xor
sti
lcall
mov
incl
push
call
pop
or
jmp
je
pusha
out
add
idiv
push
test
in
xchg
adc
add
push
dec
mov
out
je
dec
cld
cmp
cmpb
jno
add
or
imul
incl
imul
jne
sub
ljmp
mov
adc
cli
pop
decl
push
xchg
xor
mov
adc
inc
mov
mov
dec
or
fwait
arpl
add
inc
test
pop
in
leave
fidivs
add
and
add
push
enter
test
inc
loop
insb
out
cmp
xchg
in
mov
out
int3
add
mov
test
xchg
in
xchg
dec
add
addb
sbb
ret
xchg
sbb
mov
dec
outsl
xlat
push
mov
iret
and
in
mov
and
adc
ret
add
fxch
xchg
cmp
out
jl
out
test
mov
add
add
inc
sti
iret
add
shl
mov
adc
fisttps
loop
pusha
repnz
add
push
mov
fidivrs
mov
add
stos
fadds
les
in
and
mov
rorl
inc
rorl
push
add
xor
call
ficoms
push
into
dec
bound
sub
add
dec
cmp
test
pop
xorb
ret
mov
jb
xchg
ret
cwtl
aas
cld
jmp
xor
push
test
adc
jb
mov
out
mov
cld
add
mov
or
xchg
hlt
test
push
in
cld
or
cld
in
or
das
pusha
push
movb
inc
cld
pop
sub
mov
sub
out
dec
cld
mov
adc
add
pusha
or
rorb
adc
aas
nop
sti
je
adcl
insl
sti
xchg
in
adc
ret
pop
and
push
dec
xchg
jl
adc
mov
xor
mov
popf
loopne
fs
pop
jge
adc
jb
ret
repz
mov
daa
add
imul
pop
call
inc
xor
mov
pop
push
add
pusha
jle
lret
push
and
pop
mov
ret
mov
pop
ret
xchg
add
xchg
sbb
push
mov
psubusw
sub
in
mov
jmp
mov
int3
sub
imul
and
std
cmp
jmp
adc
add
xchg
rcrb
clc
in
add
push
outsb
sar
adc
pop
push
fimuls
out
and
hlt
ljmp
push
push
daa
and
repnz
out
add
addr16
pop
push
sbb
add
pushf
push
repnz
ljmp
shl
adc
rcll
push
adc
lret
call
fstl
cmpb
and
sub
and
add
sub
fs
lock
add
shlb
stos
add
cld
xchg
add
xchg
ss
mov
adc
jb
shr
loop
bound
data16
cmpsb
lea
cli
xchg
lea
adc
sbb
add
test
add
cmp
adc
adc
dec
mov
mov
mov
or
sbb
xchg
mov
je
aaa
test
adcb
add
test
push
movb
aas
or
cmp
adc
push
adc
adc
push
sti
adc
je
or
hlt
xchg
and
xchg
adc
ret
push
mov
xchg
mov
shl
mov
push
dec
pop
mov
shlb
rclb
add
daa
jg
scas
clc
cmpb
add
mov
add
jmp
repnz
fidivrs
aam
imul
mull
clc
xchg
repz
fisubs
mov
sti
stos
inc
andl
fsubrs
mov
add
pop
pop
pop
test
xor
adc
add
fsubp
add
xchg
mov
and
repnz
shll
sub
popa
mov
out
mov
push
pop
push
push
lret
fidivrs
sub
dec
roll
xor
dec
xorl
sub
fstl
mov
daa
mul
xchg
jl
mov
test
jb
into
cmp
inc
iret
shl
jl
adc
leave
add
ret
popf
hlt
push
add
loop
jecxz
lcall
in
adc
dec
adc
loopne
hlt
mov
inc
jmp
ffree
cs
int
adc
and
pop
movl
stc
inc
icebp
mov
lods
mov
fdivrp
fcompl
and
rcll
inc
push
cld
hlt
jns
inc
jmp
add
add
jmp
cmpsl
ret
mov
dec
lods
adc
fiadds
hlt
pop
aas
xchg
pusha
mov
xchg
add
dec
data16
mov
cmp
cmp
mov
xchg
jg
iret
mov
je
jg,pn
iret
adc
mov
mov
fimuls
mov
aam
mov
fldt
test
xchg
pop
clc
jno
enter
mov
out
das
xorl
jo
outsl
xchg
cld
pushl
pop
cld
push
dec
cmp
xchg
jg
sub
add
push
ds
frstor
sub
pop
or
sub
mov
rorl
lahf
sub
push
inc
add
outsl
cmp
add
aam
lea
pop
call
dec
push
add
stos
and
mov
jns
or
pop
lock
push
pop
inc
dec
sub
cmp
rcrl
or
js
jb
jp
jb
push
clc
das
out
add
sbb
push
lret
sub
cmp
adc
movsb
bound
xchg
test
popa
pusha
data16
mov
stos
out
add
ficomps
movsl
dec
push
cmp
bound
inc
cli
and
add
mov
lret
mov
sbb
or
pop
xlat
fldcw
fimull
adc
or
add
push
inc
stc
lretw
rolb
rorl
mov
jmp
mov
lret
pushl
add
adc
test
sub
dec
xor
push
mov
add
sub
xchg
mov
mov
je
lret
adc
lcall
stc
inc
stc
mov
mov
sbb
or
sbb
sub
rcr
xor
cld
fcoml
xor
jl
out
push
call
out
add
adc
add
mov
pop
add
lret
sti
incl
jle
inc
and
ret
imul
push
jmp
fdivl
push
iret
hlt
cld
push
jno
inc
push
call
dec
push
lock
xorb
enter
test
jle
mov
add
sbb
pop
sub
aaa
xlat
nop
nop
xchg
add
push
push
jno
adc
mov
lret
in
cmp
inc
ja
push
jns
mov
xchg
movsl
fsin
xor
ja
es
fistl
mov
cld
fldenv
test
cmp
xorl
mulb
inc
or
jne
add
cmpsb
movl
movb
jb
push
push
cld
sub
pop
jge
sub
push
xchg
decl
sub
add
dec
mov
in
pop
xor
out
arpl
add
test
addb
out
pop
int3
fiadds
and
rorl
mov
sbb
test
jb
stc
add
add
test
push
pop
lret
jl
xor
ret
and
pusha
lret
pop
xor
lds
hlt
and
ret
std
gs
popf
push
cmpsl
add
xor
lret
or
in
je
ret
jns
ljmp
insb
fsub
or
mov
fucompp
add
cmpsb
std
mov
mov
jg
xor
sbb
icebp
jmp
stc
mov
fimull
or
xor
adc
mov
add
fstl
je
cmpsb
add
aam
and
fs
ss
xrelease
faddp
push
add
xor
icebp
fnstsw
pop
in
adc
add
mov
cld
mov
and
adc
call
je
cmp
xchg
jno
iret
xor
add
in
or
cmp
pop
pop
jl
mov
in
push
arpl
mov
push
scas
pop
hlt
call
aam
inc
pop
add
cmp
outsb
sub
inc
inc
imul
mov
das
shlb
sub
stos
adc
add
pop
scas
pop
and
xchg
xchg
inc
mov
inc
or
mov
add
inc
or
fidivrs
and
or
imul
repz
addr16
jnp
loop
movsb
pop
push
jg
imul
xchg
in
dec
dec
test
cld
jmp
ljmp
lods
dec
cld
shl
icebp
aas
fimuls
inc
adc
sub
dec
jns
pop
pop
jnp
incl
xchg
mov
mov
and
inc
jmp
sub
arpl
sti
dec
push
cmc
push
cld
jmp
out
aas
fisubrs
xchg
mov
lds
pop
adc
mov
push
xlat
fldz
fwait
stos
jmp
sarb
rcl
out
popf
sbb
jno
add
lods
sti
leave
stos
fiaddl
int
mov
mov
sti
ss
popa
sti
pop
pop
pop
clc
inc
adc
nop
sub
or
pop
out
shr
outsl
or
fsubr
shl
xchg
cs
pop
fldl2e
pop
fstl
sub
and
jle
sbb
jmp
sahf
add
jno
sbb
adc
inc
enter
sub
jecxz
pop
cmp
bound
fists
add
sarb
mov
pop
pop
cld
lahf
pop
sub
push
sbb
adc
sub
jmp
fsubrl
adc
fstl
add
icebp
pop
jmp
mov
adc
adc
ficompl
jae
inc
fldenv
add
jo
fs
dec
adc
mov
das
test
and
aam
push
jno
dec
adc
add
rcl
inc
jg
sti
adc
lret
mov
test
imul
push
enter
adc
sbb
push
jle
imul
cli
jmp
stos
in
testl
fwait
and
xchg
ret
add
push
add
xlat
add
cld
inc
fiadds
push
add
and
gs
faddp
or
xchg
adc
cltd
mov
mov
sub
int
pop
or
jns
mov
adc
jbe
pop
lcall
mov
decl
adc
xor
inc
cmpsb
lods
cmp
ss
pop
jmp
cmp
inc
add
sub
adc
jbe
mov
mov
add
add
or
jbe
ficoms
ficompl
aam
dec
sbb
out
fs
rcll
jle
movsb
sub
pop
sbb
xchg
sub
lea
dec
mov
adc
adc
push
lret
lods
cmc
enter
push
mov
add
repz
shl
xchg
je
shrl
mov
and
cltd
fwait
sub
sub
scas
rcl
out
sbb
aam
lret
push
iret
cmpsl
inc
imul
cmp
lahf
jecxz
sbb
push
gs
mov
sub
jle
and
fstl
mov
ret
pop
pop
mov
mov
out
ds
xchg
jb
pop
iret
lret
lds
adc
cld
push
pushf
into
cld
imul
fistpll
sub
adc
and
jb
xor
fcompl
cmpsb
or
xor
mov
cmc
insl
sub
xchg
inc
lds
test
adc
add
fwait
mov
add
mov
jns
push
fwait
push
sub
dec
jmp
sar
ljmp
sar
mov
mov
rorl
sahf
cltd
sar
test
pusha
cmp
mov
test
pusha
add
adc
bound
jg
sti
incl
inc
mov
ja
clc
out
shlb
cmp
stc
jmp
or
cld
mov
xor
jbe
xorb
cmp
xchg
addr16
cld
add
or
sub
xor
ds
cltd
mov
out
add
or
lods
fisttps
rol
sti
jno
mov
out
lret
cli
mov
incl
scas
cld
push
mov
cmp
jle
jge
add
mov
cld
add
aad
inc
fidivs
sub
fcoms
out
pop
adc
add
ret
popf
out
test
sub
mov
cmp
or
mov
mov
and
data16
adc
test
cmp
mov
inc
insl
mov
xorl
adc
xchg
mov
ficoms
insb
addb
sub
add
cltd
mov
mov
insb
mov
adc
aaa
push
int3
push
sub
add
pushl
fcoms
out
and
cmp
pop
fcomi
into
leave
push
push
lcall
cmp
adc
stos
xchg
adc
inc
out
mov
push
cmpl
mov
mov
outsb
rorl
mov
mov
sti
push
mov
adc
cli
sbb
adc
jne
cld
jmp
push
sbb
std
add
adc
mov
in
call
mov
sti
jne
xchg
dec
or
add
adc
cs
xor
nop
jns
adc
dec
adc
outsl
pop
jnp
push
inc
mov
inc
sti
adc
xor
or
inc
test
mov
add
push
aam
push
data16
lret
jo
in
push
and
in
push
cmp
add
incl
inc
push
clc
jae,pt
in
lock
xor
jge
pushf
fiaddl
pop
popl
xchg
cmp
add
mov
add
ljmp
jmp
cmp
outsb
sbb
lcall
sbbl
scas
inc
pop
jbe
cmp
testb
push
push
inc
xor
or
gs
insb
scas
push
push
fstp
andnps
sahf
ss
cmp
add
sbb
imul
ret
mov
scas
aaa
mov
mov
pop
imul
in
adc
sti
scas
add
push
pop
adc
add
shrb
rclb
pop
dec
repnz
rcrb
inc
movsb
adc
add
add
fisubs
push
mov
out
loopne
mov
data16
xor
or
add
sub
fstl
jb
out
shl
adcb
mov
shlb
les
add
and
pop
jae
or
push
adc
js
and
pop
mov
push
cli
bsf
jae
push
mov
mov
mov
das
jno
cmp
loop
jl
adc
mov
stc
in
call
stc
aas
jmp
cmpsl
cwtl
testl
sbb
lahf
or
ficoml
fstpl
fnstcw
mov
stos
ljmp
pop
lods
mov
cld
mov
bound
add
adc
xchg
iret
cmp
aas
add
push
push
pop
adc
jne
out
mov
dec
cld
test
xchg
inc
cld
xchg
adc
dec
or
xchg
xchg
cmp
movsb
add
aad
or
test
jo
rcrl
mul
add
mov
lea
out
aas
add
xchg
cmc
add
movsb
std
ret
cld
je
insb
cmp
ja
add
pop
aaa
adc
ljmp
sbb
js
dec
xchg
jge
addl
sub
ds
inc
aaa
jg
jecxz
xor
fisubrs
lods
xor
sub
cld
jmp
adc
test
add
jae
sub
push
xor
sahf
in
cmp
sub
add
sar
out
adc
mov
rorb
xor
or
inc
loop
inc
jae
adc
ret
jno
sbb
jae
fildll
add
push
fwait
mov
and
loope
scas
into
lods
mov
or
icebp
pop
sub
adc
pop
sar
jae
push
out
ljmp
scas
shl
addr16
sub
ds
jmp
shrl
push
xor
ret
adc
add
add
push
sbb
popa
incb
pop
fwait
movsb
out
ss
sbb
inc
jmp
and
call
xor
lods
fldenv
or
sbb
cld
jmp
in
add
inc
jmp
outsl
aas
xchg
lea
pop
lahf
xor
shl
rorl
pusha
enter
mov
jo
pop
mov
adc
fstl
jmp
sti
adc
jb
adc
sbb
cltd
sbb
clc
push
dec
adc
cmp
mov
jg
jbe
add
lcall
or
aam
or
adc
ror
sbb
mov
inc
push
lea
in
shl
sti
decl
xchg
shrb
call
jnp
jo
jl
in
add
jecxz
test
add
sub
inc
hlt
pop
cmp
mov
mov
lock
and
adc
jne
push
add
daa
push
add
lods
faddl
fisubrs
jge
adc
cmpsb
pop
addl
mov
or
lret
adc
lods
and
rol
dec
jecxz
mov
add
mov
add
fisubs
add
fiadds
add
fiadds
and
sub
fisubrs
jge
xor
add
fwait
out
fisubrs
dec
add
mov
push
test
fiaddl
lcall
popf
in
lea
sbbl
dec
movsb
add
adc
cmp
aam
cld
pop
push
mov
rcll
sbb
add
add
push
xorb
push
into
push
shl
sbb
add
add
into
add
fstl
xchg
mov
fnsave
ja
int
rcll
fcmovnu
adc
jmp
in
popf
or
insb
add
add
les
lods
push
pop
jmp
jns
mov
popf
and
lods
popf
and
lds
xlat
fs
xor
addr16
fisttpll
je
and
adc
push
std
push
jb
xor
xor
mov
mov
aaa
jmp
push
out
lret
adc
ds
shlb
cwtl
add
dec
add
xchg
cmp
add
or
or
xlat
or
or
in
or
sti
test
popa
add
ljmp
xchg
add
xchg
xchg
dec
clc
into
push
or
push
add
add
mov
cmp
cmovns
mov
jl
add
mov
add
mov
push
or
xchg
bswap
decw
xchg
inc
or
decb
cld
inc
mov
gs
out
cmp
add
sti
cmp
jnp
cli
sub
add
sti
mov
sbb
sub
mov
and
call
xchg
imul
clc
call
mov
mov
sbb
mov
push
fadds
call
xor
shrl
insb
cmc
das
cld
pop
ljmp
adc
mov
add
fisubrs
mov
sbb
adc
add
into
negb
pop
add
add
repnz
add
mov
jl
sbb
loope
rcll
adc
adc
int3
clc
add
mov
sub
push
lds
and
mov
jb
rcrl
mov
inc
jb
cs
mov
cmp
add
sbbb
fadd
xor
es
mov
and
data16
adc
into
in
enter
hlt
adc
loop
cmp
sub
cld
pop
out
mov
fstl
subl
jmp
lea
cmp
shlb
in
add
sti
popf
push
xor
test
hlt
jne
mov
sbbb
push
std
adc
out
sar
arpl
add
cmc
lds
add
sbb
or
xchg
or
inc
cmp
sub
lret
push
jl
mov
add
lretw
add
inc
sti
je
adc
adc
loope
push
ret
ficoml
mov
cmp
in
adc
mov
xor
mov
add
rclb
or
adc
lea
add
mov
aam
mov
ja
incl
push
sti
jne
in
or
sbb
jmp
lock
push
jmp
imul
cmp
cld
lret
out
inc
fisubs
in
in
jmp
adc
push
mov
or
push
sub
push
std
das
mov
mov
sahf
add
addr16
cmp
add
sub
jb
mov
add
out
sbb
add
scas
or
push
xchg
adc
mov
adc
and
sahf
adc
cld
clc
fadd
mov
xchg
fcomps
faddp
outsl
sqrtps
xor
inc
add
adc
imul
out
jno
filds
add
cmp
add
mov
out
rolb
adc
mov
mov
out
cli
mov
or
mov
adc
sub
in
out
sbb
call
lods
sbb
adc
ds
sbb
addr16
cwtl
test
xor
into
fcoms
sub
mov
pop
add
dec
aas
or
shlb
push
out
sar
test
jns
mov
fmulp
jae
pop
lahf
or
call
loop
and
fstl
xor
call
aas
push
add
cs
push
add
addl
push
xchg
hlt
call
mov
push
data16
jb
add
je
push
fildll
sub
notl
inc
or
xchg
xchg
inc
add
push
or
add
xchg
sbb
loope
inc
lahf
or
add
xchg
inc
adc
xchg
dec
adc
sbb
call
fucomp
pop
lea
out
mov
pop
leave
xor
ffree
push
adcl
add
daa
cs
cli
pop
add
sbb
and
add
ficoms
pop
add
adc
rcll
scas
sub
push
daa
add
pop
sbb
mov
add
gs
cld
xorb
test
fmull
xorb
clc
les
sub
mov
je
jae
jb
mov
adcb
lcall
pushl
out
jno
fcoml
je
sub
js
add
adc
adc
jmp
scas
into
clc
call
inc
sbb
lods
jl
adc
add
push
xor
sbb
jp
and
push
adc
jp
and
and
inc
adc
lret
inc
and
cmp
jp
jl
ret
test
js
add
adc
jnp
rorb
adc
loope
movsl
clc
jns
add
rorl
das
pop
dec
test
in
ja
sti
fcoml
inc
imull
sbb
pushf
sbb
stc
test
jb
mul
sub
in
cltd
sub
jo
pop
bound
xor
bound
and
int
das
test
fnsave
cs
cltd
pop
and
dec
sbb
js
dec
sub
sti
aaa
lret
ljmp
js
push
and
out
test
add
adc
les
push
dec
mov
xchg
xchg
loope
push
sub
cld
adc
cmpsb
loope
ljmp
inc
jmp
subb
push
aaa
adc
lock
aaa
adc
or
or
mov
aam
sar
mov
inc
aaa
cs
int
decb
adc
push
lahf
dec
jmp
xor
jo
cmp
jmp
dec
call
mov
pop
pop
fiadds
jnp
ds
sub
imul
incl
or
or
adc
and
inc
addr16
in
push
inc
loopne
ljmp
jo
imul
stos
pop
int
out
clc
pushl
xchg
and
fldenv
loope
lcall
jb
loope
pop
mov
mov
xor
push
mov
inc
inc
out
dec
and
aam
or
rclb
clc
ret
xchg
inc
cmpsb
movsl
iret
popf
and
lret
out
subb
loopne
rorb
jnp
popf
and
test
adc
or
or
loop
sub
push
xchg
lock
jae
jle
or
call
jne
or
jnp
push
mov
negl
repz
and
je
add
sbb
mov
shrl
and
jmp
adc
jne
cmp
add
fs
or
fmul
and
sbb
add
frstor
mov
adc
in
repnz
fsubrl
dec
add
push
dec
jo
push
jnp
insb
jle
cld
jb,pt
add
push
pop
daa
repz
adc
add
add
ss
mov
ret
jge
insb
sti
je
repz
pushf
imul
fstpl
lds
inc
lods
add
sti
xor
push
hlt
cltd
hlt
call
pusha
aad
push
fdivr
call
lahf
sar
jne
in
shlb
mov
inc
mov
pop
leave
add
enter
cmp
add
push
push
push
mov
cld
dec
mov
cld
call
jp
xchg
mov
iret
xchg
call
or
sub
mov
lea
fsubp
repz
add
sahf
dec
lds
clc
jmp
clc
mov
inc
stos
div
mov
inc
mov
and
adc
mov
push
push
jl
cld
pop
jp
mov
jae
insl
movsl
idiv
call
push
jecxz
sbb
xchg
sarb
sbb
int3
mov
push
mov
jg
out
add
mov
lds
xor
add
adc
test
out
je
roll
adc
data16
push
outsb
cltd
fisttpll
hlt
sub
leave
in
negb
xchg
mov
jg
or
enter
xchg
jl
sarl
fimuls
in
fdiv
ret
dec
incl
adcl
or
inc
sub
ss
xor
flds
sahf
out
fwait
call
pop
cmp
xor
xor
out
fsts
add
fxch
add
push
inc
add
add
jp
into
stos
lcall
inc
or
fstps
push
xchg
or
pop
stos
out
xchg
mov
xchg
jmp
pop
add
or
loopne
mov
addr16
push
test
sbb
in
adc
jmp
dec
out
fs
adc
in
xchg
or
outsb
adc
cmp
lods
add
adc
call
in
pop
pop
jne
add
test
mov
xor
repz
mov
dec
pop
adc
into
pop
sbb
into
pop
sbb
int
sub
lret
call
int
adc
or
add
imul
adc
inc
pop
mov
xorl
inc
popf
and
mov
dec
adc
ret
ret
adc
ds
jmp
fwait
dec
add
jb
mov
cmpsl
add
aam
mov
int3
out
mov
adc
xchg
or
call
inc
mov
xchg
adc
mull
testb
cld
dec
add
clc
sbb
lds
mov
push
push
mov
or
fidivs
add
cmc
xlat
xchg
idiv
pop
sbb
int
add
add
inc
loop
and
dec
clc
or
add
fdivs
xchg
sub
add
and
mov
fimuls
bound
popf
in
cmp
iret
xchg
sub
mov
int3
jmp
cmpb
xchg
out
add
mov
sets
adc
arpl
nop
nop
jmp
fidivrs
push
or
fldl
push
pop
cmp
popf
fnstcw
mov
lds
push
sub
fsts
push
jb
add
in
lds
jmp
fstl
mov
mov
sahf
das
or
imul
pop
stos
ficoms
xchg
mov
add
in
pop
stos
push
rolb
jmp
mov
call
repnz
popa
xchg
in
cld
sbb
pop
popa
aas
mov
sti
sgdtl
aaa
rsqrtps
test
mov
les
dec
repz
fsubs
mov
xchg
inc
add
roll
call
dec
iret
add
adc
pop
mov
dec
jmp
mov
in
or
and
adc
lret
rcll
push
adc
cld
cmp
ljmp
or
loope
push
adc
pop
dec
adc
cmp
ljmp
or
mov
loop
dec
enter
add
jecxz
pop
pop
pop
or
lret
call
jle
mov
pop
sbb
or
xchg
mov
repnz
dec
hlt
outsb
xor
mov
loop
lahf
fmuls
aam
push
dec
add
outsb
mov
push
test
jmp
jg
or
add
sbb
nop
sub
and
imul
dec
lea
jbe
push
cld
pop
jle
packuswb
mov
xor
inc
adc
mov
clc
sub
sub
popa
ret
mov
mov
ficomps
sub
adc
sbb
sbb
ret
add
lea
sbb
push
hlt
dec
or
rorl
ret
mov
xchg
push
add
xchg
test
add
adc
fs
push
xchg
add
inc
jb
jmp
sbb
lcall
xchg
add
mov
insb
jmp
push
jb
dec
lea
sti
push
insl
std
adc
insb
add
mov
cltd
dec
std
adc
insb
jo
notl
dec
call
push
push
gs
gs
pcmpeqw
pop
clc
push
pop
mov
adc
fsubl
shr
and
fucomi
ficompl
or
cmp
jmp
jge
sti
add
push
push
add
loope
std
hlt
adc
jne
sub
outsb
shlb
rolb
add
adc
inc
mov
mov
std
jne
daa
outsb
lock
push
std
call
mov
incl
mov
in
test
cld
jne
sub
lds
shr
call
cmp
push
pop
mov
mov
test
lahf
and
lcall
ret
in
cmp
clc
fiadds
adc
pop
test
daa
imul
cld
shr
push
in
jmp
nop
adc
cld
pop
sub
push
push
int
push
push
outsl
adc
cld
mov
cmpsb
ret
fsubp
mov
mov
daa
sub
add
out
jle
ljmp
jb
mov
call
cmp
sti
sub
inc
push
std
mov
sarb
inc
scas
mov
xor
push
adc
pop
xchg
psubsw
lcall
cmp
sub
mov
cmp
gs
out
sub
repz
sbb
jle
test
xchg
fmull
pusha
mov
cmc
movsb
pop
jb
sbb
shl
add
ret
mov
inc
test
call
aad
or
ret
adc
or
ret
mov
testl
jge
xor
stos
jmp
shlb
cld
sbb
dec
and
sbb
aaa
adc
jg
insb
add
jle
jb
clc
cmp
in
call
aaa
xchg
in
add
add
sub
cmp
fwait
scas
mov
pushf
jnp,pt
add
adc
jnp
mov
dec
push
call
mov
adc
daa
dec
or
jo
adc
arpl
cmp
inc
add
push
movsl
add
jae
jbe
fisttpll
cmp
mov
aaa
je
inc
daa
jp
imul
cmp
mov
jnp
lock
mov
jge
add
push
inc
or
pop
push
push
xor
push
shl
sti
xor
cld
cmp
jne
mov
pop
dec
and
inc
xor
nop
and
pop
adc
fimuls
adc
shlb
lock
add
lcall
mov
int3
cmp
mov
int3
jg
or
in
or
mov
call
adc
mov
pop
sbb
decl
es
aas
or
sub
mov
jno
cld
push
lcall
icebp
fwait
jecxz
pop
mov
and
add
cmpsl
incl
mov
jp
cli
jmp
push
mov
outsb
leave
loope
test
jl
or
cwtl
xchg
mov
add
inc
inc
jns
mov
inc
in
or
cld
stc
fnstsw
ficomps
inc
fstl
pop
enter
ret
clc
jp
or
inc
aad
mov
mov
push
adc
mov
adc
mov
in
cwtl
mov
test
jle
adc
add
mov
ficoms
popa
mov
and
lcall
push
out
cmc
or
out
push
iret
fidivrs
add
push
mov
faddl
mov
loop
xchg
jbe
xchg
fstl
add
divl
cmc
add
nop
or
out
dec
or
cmpsl
push
push
arpl
mov
idiv
jmp
xchg
testb
fstl
sub
adc
aam
leave
insb
into
andl
aaa
mov
ror
mov
bound
stc
mov
sbb
xchg
out
pcmpeqw
sahf
in
dec
rol
mov
mov
sub
add
mov
or
add
in
dec
clc
leave
push
cld
add
cld
add
shl
pop
les
xchg
push
inc
or
leave
cld
mov
sbb
movb
dec
or
mov
sbb
mov
cmc
mov
sahf
xchg
fiaddl
jl
mov
add
sbb
add
push
add
or
popa
mov
push
dec
add
mov
push
jns
mov
call
test
ljmp
pop
leave
lret
push
add
ficoms
in
mov
push
jb
out
shr
xor
add
mov
add
push
data16
adc
add
add
push
or
adc
xchg
push
scas
ficompl
and
adc
push
pop
fs
mov
movsb
sti
push
xlat
jo
lods
cmp
add
pop
push
push
into
loop
sub
inc
idivl
pop
cmp
icebp
jae
add
pop
pop
shl
sbb
fs
sub
sbb
push
mov
adc
in
cmp
lods
add
std
subl
sbb
and
sub
loop
sti
movb
push
and
stos
pop
testl
push
dec
stc
arpl
shr
in
mov
movsb
out
inc
in
daa
mov
enter
loop
repnz
cmc
adc
stos
add
cmc
das
mov
dec
std
insb
scas
jne
bound
xchg
and
mov
insb
adc
add
pop
lret
push
aad
imul
jbe
mov
push
dec
or
jbe
mov
pop
xchg
or
add
inc
cld
xchg
fldl2e
lea
loop
ljmp
cmp
sbb
scas
fwait
pop
add
hlt
push
incl
add
std
addr16
xchg
add
xor
or
or
clc
sub
pop
roll
mov
mov
orl
inc
shll
add
add
aaa
js
cmp
hlt
mov
mov
mov
jb
add
das
add
or
push
dec
add
sti
stos
push
xchg
jno
fdivrs
cld
movsl
mov
sar
fisubs
test
incl
add
fdivrp
mov
inc
add
jmp
imul
add
lcall
incl
pop
pop
jae
jmp
adc
fnstcw
shl
jp
pop
xchg
pushl
xor
xchg
test
push
sbb
cld
and
es
lea
mov
mov
inc
push
mov
sub
jmp
ds
cmpsl
icebp
cltd
jmp
pop
xor
in
or
xchg
xchg
jle
call
cmp
mov
fidivrs
sbb
sub
nop
rolb
hlt
sbb
xchg
test
or
mov
adc
mov
xor
cmp
addb
stos
ret
sti
stc
and
mov
hlt
out
bound
xchg
idivl
out
ret
inc
and
bound
push
mov
inc
xchg
outsb
add
sarl
or
icebp
sub
adc
in
adc
sbb
push
aas
out
inc
leave
fiaddl
jne
lock
aad
sti
cmp
add
in
test
and
call
mov
xchg
add
mov
push
mov
adc
mov
je
in
pop
ret
pop
mov
std
pushl
addl
or
push
mov
fbstp
clc
call
or
addl
push
mov
add
sti
mov
stos
add
push
push
or
pop
or
push
jle
sub
xor
pushf
test
sti
jae
lods
outsl
and
jmp
jne
mov
cld
jmp
leave
cltd
pushl
cltd
xchg
bound
mov
dec
sti
sub
pop
and
testl
add
stos
jle
loop
sub
add
and
inc
add
cli
mov
aam
inc
push
lea
iret
mov
mov
jae
add
adc
jae
lret
jbe
ret
int3
gs
jae
movl
adcb
cmp
push
sbb
and
pushl
push
adc
fsts
xor
xor
inc
xor
push
jns
jl
adc
inc
out
fcompl
add
push
jmp
inc
loop
rolb
adc
inc
pop
push
jmp
repnz
and
sbb
xchg
mov
pusha
dec
xor
inc
ficoml
js
aad
js
leave
cwtl
push
cltd
xchg
sub
pop
and
ss
or
les
push
jmp
and
jmp
add
fldl
aam
lods
sbb
clc
loop
sbb
mov
adc
add
insl
add
outsb
inc
data16
in
jp
fnstsw
sti
aam
add
xchg
push
hlt
and
mov
mov
sbb
sbb
aam
aas
jmp
inc
inc
hlt
bound
jbe
sahf
fcmovb
data16
inc
stc
fcmovb
push
out
push
mov
sbb
add
in
adc
pusha
jbe
in
fcmovbe
adc
sbb
mov
pushf
pop
push
add
push
call
xor
jne
mov
cld
adc
orb
mov
imul
inc
and
jne
in
lret
int3
stos
mov
aas
push
dec
push
or
cmovo
mov
outsb
or
xchg
iret
call
jecxz
and
addb
outsb
fmull
in
test
loopne
fidivrs
add
repz
mov
aas
add
stos
sbb
into
cmp
mov
test
jns
inc
in
adc
sahf
stc
cmp
push
push
sti
stos
call
gs
int3
mov
xchg
jbe
and
xchg
stc
popf
stc
pop
ret
fstpt
std
aas
add
fidivs
sbb
mov
test
idiv
fdivl
inc
add
jl
add
negl
add
mov
mov
ja
jmp
daa
aas
fld
inc
fisubs
in
push
dec
jmp
sti
fbld
add
fs
mov
test
inc
fdivp
push
xchg
adc
imul
and
in
pop
dec
jmp
sti
fbld
leave
jecxz
inc
inc
ficoms
ds
adc
mov
adc
pushf
inc
jg
and
lea
or
add
adc
cmp
add
pop
call
enter
aaa
stos
icebp
pop
ret
xor
icebp
or
bound
jne
daa
adc
dec
cs
jmp
frstor
enter
ror
adc
adc
jmp
outsb
cmp
xor
aas
jmp
sarl
or
push
loop
jmp
fucomp
add
movsb
stc
stos
fstl
adc
xchg
faddl
add
mov
je
mov
fcompl
push
push
cmpsb
stc
inc
xchg
mov
push
out
mov
mov
mov
cltd
lods
mov
hlt
or
adc
iret
or
xchg
ret
mov
enter
add
dec
mov
orl
mov
cmp
pop
pop
psubsb
adc
incl
jnp
je
inc
das
int3
cld
test
add
mov
adc
fsubp
ret
push
push
cli
popa
mov
popf
jns
enter
decl
popf
pop
mov
sub
sbb
int3
cmp
mov
add
stc
js
jbe
std
sti
pop
jne
je
jp
int3
dec
cmp
sbb
cld
popf
stc
add
xor
ret
push
sahf
stc
pop
mov
add
or
xlat
or
cld
popf
stc
js
nop
jg
cld
popf
stc
push
sti
sarl
push
inc
ficoms
and
fidivrl
in
std
leave
adc
mov
aam
inc
fmulp
in
stos
push
jmp
call
cmc
fwait
inc
ficoms
add
push
adc
ret
ljmp
push
gs
aam
sahf
adc
ret
aaa
pop
push
dec
inc
repnz
mov
loop
jecxz
popl
aas
cmpb
call
lods
cld
rcll
push
arpl
faddl
push
inc
pop
mov
cmp
out
aas
lcall
stc
add
sbb
inc
mov
adc
adc
outsb
adc
pop
add
push
push
or
inc
call
insb
lcall
jmp
mov
cmp
jmp
rclb
bound
outsb
je,pn
or
xchg
mov
sarb
pusha
jne
inc
ret
fstl
sub
add
cmp
inc
arpl
add
push
xchg
cmp
int3
lea
mov
je
lcall
ficomps
orb
pop
jne
cltd
call
pushf
add
lahf
cltd
into
call
call
outsb
mov
int3
dec
or
or
or
shrb
clc
in
jmp
xchg
cmp
sbb
or
add
cltd
in
sbb
testl
out
add
mov
cld
mov
sub
call
popa
jae
lret
and
mov
sub
jae
add
push
bound
and
roll
inc
dec
clc
mov
loop
sbb
addr16
and
stc
incl
ss
pusha
sti
cmp
and
lret
or
add
fimuls
in
inc
lods
testl
scas
adc
and
lea
adc
loopne
jmp
cli
aad
mov
push
pop
lods
adc
outsl
fisttpl
ret
push
push
in
push
loop,pn
pop
mulb
add
inc
jecxz
jg
adc
fists
jmp
xchg
inc
adc
cli
ficoms
xor
cli
shrb
jmp
imul
ficoms
jmp
and
inc
add
stc
out
add
add
fst
adc
call
push
out
jl
in
jne
das
stc
ret
in
dec
aas
out
push
sub
add
add
push
push
out
or
test
sar
aas
jmp
mov
inc
push
shl
add
pusha
mov
ficoml
add
cmp
shl
push
add
fs
sub
jmp
out
add
jnp
pop
test
push
add
jo
inc
adc
or
inc
and
sbb
cmp
add
str
add
outsb
jae
mov
sub
pop
das
xor
add
add
outsb
add
dec
dec
add
or
je
or
push
sti
xor
mov
xchg
je
outsl
inc
pop
test
inc
push
ljmp
jo
inc
aaa
xchg
les
pop
and
inc
adc
mov
xor
fisubrs
cmp
stc
push
dec
add
sbb
push
out
pop
push
aas
cmp
je
je
roll
je
idiv
adc
leave
popf
sbb
ljmp
test
mov
addr16
jmp
or
imul
jno
and
jmp
clc
add
jmp
add
add
jo
and
cmp
cmp
stos
xor
mov
std
push
jmp
das
mov
xor
cmp
xor
push
mov
xor
mov
and
jmp
das
std
push
jmp
add
adc
fucomp
add
call
outsb
pop
out
jne
out
call
ficomps
ret
add
fstp
push
jbe
popf
add
cmp
outsb
loopne
shl
add
in
cmp
fstl
dec
aas
addr16
xchg
push
cmp
pop
pop
dec
jmp
loopne
mov
fstl
lea
fiaddl
jne
mov
popa
dec
rclb
jg
shlb
aas
fmull
or
sbb
add
inc
mov
jmp
fcoml
out
les
test
fstl
jmp
xchg
test
out
inc
call
fs
std
into
push
call
add
mov
imul
decb
inc
mov
je
jl
divl
xchg
and
pop
mov
jmp
sbb
inc
add
in
push
push
inc
adc
pop
dec
out
lea
in
and
out
mov
add
clc
lcall
push
testb
aad
add
xchg
inc
clc
addr16
call
mov
test
add
jmp
xor
fsubrp
imul
cmp
je
or
push
sarl
cmp
mov
push
in
push
insb
mov
or
or
out
shlb
outsb
loope
cmp
xchg
mov
push
mov
mov
sti
je
jne
mov
mov
add
cli
sub
fisubrl
adc
pop
out
test
push
imul
ficoms
push
shl
dec
jmp
out
imul
pushf
adc
pop
sub
mov
pop
inc
sub
sbb
xor
ficoms
gs
adc
fcoms
test
jmp
add
xchg
fcomip
in
mov
push
cltd
inc
mov
inc
push
mov
call
sub
fsubr
sbb
add
sub
cmpsl
iret
in
sub
xchg
pop
sub
fs
xchg
xchg
or
icebp
pop
je
jmp
fadds
fldcw
inc
lea
xchg
mov
cmpsb
pop
push
sbb
sub
adc
pop
pop
hlt
jb
jmp
dec
cmpsl
push
push
pop
outsb
fadds
pop
in
aad
push
pop
push
int3
dec
add
les
jne
sub
insl
fldt
lods
pop
stc
pusha
fcomps
out
push
sahf
add
fstl
push
add
or
rorb
mov
add
adc
cmp
or
divb
loopne
sbb
dec
add
add
sti
jae
cmp
fbstp
incl
sub
clc
test
pop
mov
cmp
inc
idivl
adc
mov
push
call
imul
clc
mov
cmp
aam
inc
or
sbb
bound
jo
push
or
jg
out
jae
clc
push
inc
ficoms
push
push
sbb
cmp
jmp
lock
or
add
pop
scas
add
sahf
jb
inc
push
sub
fidivrs
mov
loop
push
xchg
imul
pop
jle
dec
test
pop
incb
xchg
pushl
fsubrp
jbe
mov
call
pushl
lock
push
pop
adc
test
fiaddl
fimuls
add
jmp
outsb
aas
mov
ret
mov
and
ljmp
insb
add
sbbl
adc
jp
sub
sbbb
data16
add
js
xlat
shr
rep
xlat
inc
ficoms
pop
aaa
arpl
mov
inc
cmp
sarl
push
pop
inc
addb
add
mov
push
dec
filds
movsl
pop
add
fimull
xor
mov
cmp
push
out
shlw
popa
mov
and
jecxz
add
inc
bound
rolb
ds
sbbl
jnp
inc
fimull
xchg
aam
sahf
xchg
dec
and
xor
addl
call
insb
sbb
clc
fsincos
je
sub
mov
fisttpll
inc
add
sbb
je
cmp
jnp
jecxz
add
nop
inc
and
aaa
add
mov
add
les
sub
push
adc
imul
out
call
addl
call
push
js
int3
add
repz
adc
sub
add
not
jg
pop
jecxz
push
sub
call
and
push
pop
sbb
in
add
outsb
loopne
mov
dec
jae
imul
sub
js
mov
cmc
sti
mov
fs
cld
adc
jge
jmp
testl
stos
xlat
xor
jmp
gs
inc
mov
dec
xchg
jmp
bound
insb
cmc
je
pop
push
push
arpl
mov
sti
pop
stos
jb
sbbb
mov
out
jne
or
fcoml
lret
sub
fst
ds
in
popf
push
adc
pop
pop
pop
lods
push
insb
inc
jb
mov
out
push
dec
icebp
lds
add
jp
or
add
xor
pop
xlat
js
aad
shrl
bnd
call
jno
in
push
cld
cmp
sub
ss
ret
aas
rcrl
test
jmp
jmp
sarl
jg
lea
add
xchg
jg
pop
add
ljmp
xchg
fistl
andb
add
add
push
ret
inc
xchg
ss
imul
push
mov
loopne
bound
and
movl
or
fcos
add
add
loopne
bound
push
out
cmp
std
mov
lock
loope
bound
or
dec
out
nop
mov
sbb
jg
or
ss
stos
add
data16
outsl
mov
mov
bound
push
leave
je
sbb
cmpb
je
popf
or
mov
or
push
mov
jecxz
aaa
in
jg
xor
or
mov
data16
mov
movaps
cmp
bnd
leave
jmp
jnp
jbe
scas
into
outsl
or
xchg
idiv
aaa
or
mov
or
addps
lret
andl
lea
fimuls
jb
add
sti
mov
mov
fsubp
jnp
xchg
push
mov
add
jno
stc
in
stc
faddl
aas
pop
out
dec
movsl
call
lea
das
jmp
xor
aaa
add
cmp
cmp
push
jb
mov
pushl
cmp
aam
push
popa
sti
or
pop
dec
fidivrs
scas
add
mov
push
adc
add
lcallw
add
rcrl
stos
ds
inc
lret
jle
inc
in
jl
sti
mov
jp
mov
mov
ds
mov
push
jmp
fninit
loope
add
add
sub
call
xchg
and
call
and
insb
inc
ds
pop
inc
cmp
out
mov
sbb
mov
push
adc
and
jg
divb
and
push
lock
and
add
xor
inc
in
and
inc
out
ss
cld
cltd
test
jns
fisttpll
test
push
pop
xchg
fsts
cli
pop
or
lea
jmp
test
jns
fstl
dec
mov
pusha
repz
add
mov
push
js
add
xchg
shlb
cld
mov
mov
ljmp
imul
notl
add
popl
add
xchg
jge
out
add
add
push
mov
leave
ret
inc
dec
in
sbb
bound
cld
int
add
lea
push
addr16
xchg
pop
adc
dec
cmp
mov
add
lea
cmp
jae
or
push
sub
pop
or
hlt
iret
data16
in
pop
jae
cli
jmp
push
inc
fidivs
hlt
push
icebp
jmp
adc
mov
ss
and
jne
ret
xor
mov
leave
cli
sarl
jne
iret
xrelease
and
clc
cs
jnp
xchg
repz
add
mov
pop
xchg
or
int
incl
arpl
sti
popa
stos
js
push
insl
imul
adc
leave
inc
int3
gs
lret
sbb
leave
pop
fisubs
int3
test
fcompl
ja
aam
ja
mov
ja
test
pop
add
push
jmp
xor
mov
js
test
xchg
ss
sbb
xchg
jae
add
xchg
cmp
and
dec
push
push
mov
outsb
repz
pop
inc
add
lds
mov
lds
fcomps
pushf
cld
enter
ficoms
jmp
cwtl
ficoms
add
xchg
sti
jne
into
add
xorb
ficompl
add
push
dec
add
sub
mov
in
jae
ja
inc
mov
add
sbb
jb
les
xchg
push
bound
mov
or
daa
in
push
je
mov
loope
shl
inc
dec
or
sbb
dec
cs
push
mov
lea
in
int
mov
iret
lds
sbbl
les
addr16
dec
xchg
call
push
idiv
ret
call
ljmp
mov
ret
dec
push
enter
outsl
pop
icebp
call
sub
xor
add
and
add
add
enter
jne
pop
out
and
sbb
jp
cld
inc
ja
dec
decl
mov
mov
add
inc
dec
jns
into
sti
pop
das
dec
add
ffree
cld
popf
mov
sub
outsl
loopne
fisubs
lock
sti
pop
ja
or
popf
mov
add
filds
loope
and
aas
add
sahf
stc
popf
mov
mov
aas
loope
sbb
aas
add
test
and
lock
push
jg
add
ljmp
gs
aas
ficoms
mov
mov
pushf
or
rolb
sbb
mov
jmp
push
inc
or
or
add
adc
icebp
lret
cmp
je
adc
xor
adc
xor
adc
mov
pusha
testb
test
daa
add
jmp
push
fsts
mov
in
add
test
es
enter
push
jmp
mov
fnstsw
xchg
cmpsl
dec
and
inc
lds
cltd
inc
lds
lcall
out
cltd
pop
or
xor
mov
and
mov
add
fs
and
add
push
add
in
adc
outsb
cld
add
in
or
sbb
sub
inc
inc
int
push
ret
pop
add
sbb
test
pop
xchg
jmp
xor
test
add
pop
test
mov
mov
mov
int3
inc
and
adc
add
adc
adc
ret
in
xchg
add
push
push
in
dec
push
stos
dec
and
mul
adc
test
pop
test
inc
sub
test
dec
cli
push
mov
add
mul
adc
mov
clc
das
xor
inc
and
mov
pop
fidivs
cmp
xchg
fidivs
aaa
adc
mov
ja
xlat
repnz
neg
mov
sbb
call
mov
out
testb
stos
out
sbb
daa
or
lcall
sti
and
and
mov
or
and
out
add
mov
ljmp
imul
cmp
daa
mov
das
sti
jmp
int
add
adc
and
pusha
inc
mov
cltd
mov
inc
push
dec
fisttps
sbb
outsl
dec
mov
adc
jno
fisttps
lods
daa
idivb
mov
or
mov
or
push
and
ret
in
add
pop
dec
loope
lcall
fdivl
int3
jmp
push
insb
jmp
mov
jmp
push
enter
push
push
mov
repz
fs
sbb
in
sbb
in
pop
jo
in
and
and
daa
test
aaa
cmpsb
add
push
and
popa
shlb
dec
and
mov
lock
outsl
add
rcl
jmp
sbb
and
bound
push
adc
mov
cltd
je
in
stc
out
out
jno
add
fisttpll
add
dec
dec
inc
sbbl
test
add
jb
add
pop
test
push
add
cmp
push
in
shl
cmp
inc
adc
add
xchg
sti
je
mov
add
test
inc
push
add
pop
xor
gs
cltd
jl
rcr
mov
jmp
xchg
aas
or
int
dec
mov
sbbl
je
cltd
mov
add
les
inc
sbb
adc
lods
insl
add
cmp
and
fistl
cmp
pop
adc
or
dec
cli
and
or
enter
out
out
dec
arpl
cmp
sti
mov
lcall
jne
mov
inc
mov
push
add
mov
enter
sar
out
mov
aas
dec
and
jno
sti
fidivs
sub
pop
add
popa
addr16
sub
inc
mov
adc
sub
lds
negb
fimuls
sub
repz
loop
mov
push
mov
or
add
add
outsb
fildll
outsb
aam
ret
mov
push
pop
or
sbb
pop
in
test
adc
dec
mov
inc
out
insl
loop
sub
scas
mov
jne
imulb
insb
ret
stos
adc
aas
add
sarb
cli
and
ret
out
loop
add
add
xchg
iret
test
test
adc
add
cwtl
lock
inc
dec
pusha
adc
xadd
cmp
insb
pop
adc
jne
push
test
and
data16
rorb
mov
popa
cmp
adc
xchg
sarb
mov
inc
lds
mov
and
out
adc
jbe
jmp
add
sbb
pusha
cmp
adc
and
cmp
fstl
dec
add
add
add
mov
push
push
pop
insb
mov
ret
push
mov
in
jo
out
popa
adc
adc
pushl
xchg
les
push
test
add
inc
add
lds
add
aad
and
mov
cmp
rol
jae
shlb
stc
incl
sub
es
hlt
jmp
lea
into
push
add
adc
adc
lcall
fiadds
mov
faddl
xchg
fmulp
jmp
jne
das
test
fisubs
rolb
outsb
pop
pushf
inc
cmpsl
jg
push
cmp
add
sbb
test
push
push
outsb
cli
cli
mov
inc
mov
ret
rcl
hlt
outsb
xchg
sbbl
push
shl
scas
mov
loop
jae
xchg
mov
lea
sbb
adc
addl
ss
test
and
imul
and
mov
or
push
mov
push
cli
clc
outsl
cmp
add
add
lds
adc
fwait
je
jmp
sbb
xchg
inc
push
pop
add
aam
mov
inc
adc
add
insb
jmp
cmc
push
mov
lods
pop
or
adc
rcrl
and
fstl
add
add
and
shrb
test
fstl
xchg
movsl
or
pop
push
and
push
push
and
pop
push
and
gs
and
pop
push
and
push
push
and
pop
push
and
fs
and
jb
and
mov
bound
fists
add
push
and
sub
jmp
push
hlt
inc
xchg
outsb
xor
add
push
and
jnp
mov
add
test
sldt
out
pop
and
fmulp
mov
or
je
cmp
cmp
jmp
rsqrtps
pop
xor
pop
and
cmpsl
fists
jp
je
add
or
adc
mov
call
pop
cmp
add
mov
fisttpl
push
push
adc
ja
push
call
test
sub
jp
fwait
pop
add
cmp
fstpt
lods
jbe
push
add
jnp
ficoms
les
dec
cmpl
je
cs
and
push
ret
je
dec
or
xchg
es
testb
and
clc
into
adc
add
daa
xor
mov
jp
cli
fistpll
push
xor
pop
jae
sbb
es
and
mov
dec
ret
test
jnp
cmp
adc
lock
mov
sarb
lods
daa
pop
insb
inc
fisubrs
gs
mov
insl
dec
cli
call
or
xor
fnstenv
push
ret
add
mov
les
mov
add
adc
icebp
nop
and
sub
add
and
mov
jp
in
lock
lods
aad
inc
test
add
mov
mov
popl
xor
pop
cmpsl
adc
out
mov
mov
add
push
add
in
addr16
adc
xchg
cmpsb
or
dec
pop
into
or
inc
or
es
shl
push
push
add
and
stos
mov
add
filds
and
jle
pop
int
aaa
lds
cmp
lret
pop
scas
test
test
push
scas
mov
pop
call
add
dec
or
cltd
in
in
int
add
or
dec
aam
mov
xor
movsl
sbb
xchg
lea
shlb
xchg
roll
hlt
or
xorb
add
roll
hlt
or
xchg
jnp
mov
rcll
imul
sar
add
mov
add
cmp
divb
scas
lret
mov
mov
clc
and
sti
lods
cmc
lret
mov
pop
pop
sahf
cmpsl
addb
xor
sti
arpl
push
push
pop
out
inc
pop
cmpsb
aaa
outsb
pop
sbb
pop
mov
cmpsl
push
sti
fimull
orl
cmp
loope
call
mov
addb
cmpsl
cs
leave
mov
jl
loop
sti
sub
std
ficoms
push
sub
movsb
xchg
sub
insb
push
mov
mov
lea
inc
fiadds
popf
mov
dec
pop
pusha
xor
push
call
xor
cmpsb
add
call
add
xchg
arpl
add
insl
xor
repnz
aas
sub
adc
pusha
cmp
adc
pusha
inc
repnz
jle
lea
pop
shrb
icebp
xor
adc
adc
or
inc
fistpl
into
or
mov
cs
push
xchg
fbld
hlt
add
add
into
or
mov
pmulhuw
adc
jmp
sbb
jmp
popf
adc
ficomps
add
fisttpll
incl
inc
mov
mov
outsl
shrl
cmp
cli
mov
dec
sub
xlat
push
jne
aaa
cmp
xor
xor
mov
xor
and
inc
xor
inc
les
jno
cli
xor
push
sbb
add
cmp
mov
adc
jb
pop
mov
adc
rclb
cmp
dec
xor
hlt
inc
incb
or
mov
es
testl
mov
test
sub
cmp
movb
call
xor
push
push
sbb
xor
pop
xchg
outsb
std
addl
xchg
add
dec
daa
repnz
fidivrs
mov
dec
shll
pop
fisubs
sti
xor
xlat
add
jmp
cmp
test
rcl
mov
mov
sbb
out
sti
lret
repz
aas
ficoms
jo
ds
add
lret
fnstenv
fdiv
lret
jle
cmc
jns
pop
pop
push
dec
and
add
adc
ret
or
mov
lret
flds
xchg
fists
jmp
xor
mov
ficoms
adc
and
lea
mov
inc
sub
xchg
xor
adc
adc
mov
popa
adc
hlt
mov
adc
test
das
negb
test
mov
sbb
sbb
mov
xchg
inc
in
test
sti
aam
add
adc
mov
les
mov
add
adc
es
xchg
jl
dec
mov
nop
ret
call
mov
add
pushl
dec
add
fstl
sti
mov
push
adc
test
pusha
decl
mov
addl
aam
add
fcmove
mov
add
shlb
push
add
mov
cmp
je
dec
add
dec
or
push
sub
add
push
add
inc
lret
sbb
fcoms
sbb
add
mov
adc
add
shll
push
and
aaa
in
xchg
or
sbb
fsubp
es
dec
daa
cmp
out
add
out
xor
fimuls
subl
add
or
das
sahf
xchg
incb
mov
jnp
jl
call
int3
jnp
cmp
mov
shlb
mov
xlat
cmp
fidivs
jne
fidivs
mov
mov
imul
fsubl
jle
mov
jle
es
jg
add
sbb
push
add
icebp
shl
adc
repnz
int
pop
mov
ss
repz
testl
add
add
sar
pusha
pop
pop
cmp
xor
adc
inc
ficoms
int
ficompl
inc
add
insb
aas
mov
push
repnz
jno
add
fidivrs
lods
js
hlt
in
stos
hlt
xchg
fcmovne
mov
add
je
mov
or
in
incl
andl
lock
adc
cmc
xor
jb
mov
push
bound
adc
xchg
ss
add
cld
es
cltd
adc
loopne
sbb
cltd
push
in
xchg
push
call
add
inc
xchg
mov
dec
xchg
add
mov
sahf
dec
cmp
sub
pushf
jmp
and
call
or
adc
aaa
dec
add
cmp
pop
sub
je
loopne
inc
das
loopne
in
adc
leave
inc
decb
sub
adc
addb
jae
add
inc
mov
lret
pop
mov
shlb
and
filds
incb
cmc
push
ret
divl
add
pop
and
and
inc
data16
aam
or
cli
sub
lret
clc
mov
jp
inc
loopne
push
fidivs
std
loope
push
add
mov
lcall
mov
fidivs
dec
adc
add
je
pop
std
out
mov
add
cmpsl
addl
sahf
sbb
push
or
les
add
cmp
sti
adc
aas
add
jecxz
sbb
rcr
mov
pop
sub
add
mov
mov
adc
add
inc
sbb
out
cld
dec
lret
push
jmp
inc
aad
add
adc
pop
repnz
jmp
cld
xchg
hlt
cld
aaa
fsubrl
jmp
add
inc
mov
out
aam
repnz
jmp
adc
jmp
call
push
push
int
out
and
push
sub
push
jmp
adc
jmp
out
leave
inc
xchg
pop
push
and
loope
add
popf
adc
jmp
sbb
or
icebp
hlt
sub
jmp
push
add
mov
adc
ror
popf
inc
add
frstor
sbb
mov
sbb
push
add
lods
je
clc
adc
pop
lcall
xchg
jmp
cld
aas
jmp
add
dec
and
out
arpl
rcr
stos
jne
fs
and
popf
mov
aas
add
inc
and
fwait
push
and
fwait
dec
and
jl
cmp
adc
or
lahf
jmp
test
adc
fcomps
notl
pop
xor
rcrb
push
jl
jnp
mov
dec
add
mov
adc
test
and
mov
inc
pushf
div
mov
mov
add
mov
shll
or
pop
push
clc
out
adc
adc
fisttps
faddp
or
repz
adc
daa
sti
or
dec
mov
cld
popf
mov
sbb
fidivrs
hlt
mov
and
pop
adc
add
jp
add
sbb
push
cmp
mov
adc
dec
enter
jbe
or
adcl
movsb
mov
jne
mov
lods
repnz
add
xor
sarb
in
mov
adc
rorb
clc
cmp
sub
add
cltd
mov
xor
mov
or
lret
adc
cwtl
sbb
add
pop
popa
mov
or
movsb
es
ds
cmp
sbb
lods
inc
pop
jmp
sbb
fadd
mov
mov
stc
mov
std
xchg
cmp
mov
mov
xchg
sbb
mov
dec
sbb
outsb
out
adc
add
dec
pop
sub
adc
cmp
in
mov
jne
or
out
call
sbb
loop
lods
imulb
out
xchg
push
lods
adc
sar
cli
je
inc
sti
pop
ljmp
aaa
mov
jmp
loope
cld
sub
or
bound
add
sbb
adc
andl
add
faddl
call
pop
add
jne
gs
sub
or
faddl
ljmp
adc
inc
inc
pop
ret
push
mov
push
add
cltd
jne
dec
scas
jecxz
xor
add
js
inc
pop
fisttpl
decl
gs
cld
call
jns
incl
mov
jne
cmp
jne
nop
cli
call
or
pop
jne
call
out
add
fidivs
xor
xchg
sbb
fisubrs
repnz
testb
into
sub
adc
adc
repz
pop
bound
out
dec
xor
pop
rsqrtps
pop
sti
jmp
adc
lret
pop
mov
cmp
add
add
jbe
add
fsubs
sbbl
pop
aaa
mov
mov
sti
jae
mov
shlb
or
jne
sti
sarl
mov
out
stc
mov
out
mov
add
inc
cmpsl
adc
cmp
mov
mov
popa
sbb
das
mov
adc
ljmp
add
add
add
xchg
mov
push
sbb
stos
lds
sub
mov
xchg
pop
and
pusha
cmc
inc
fiadds
vmovss
in
mov
dec
jmp
adc
out
shlb
lret
jg
sbb
mov
mov
push
or
xor
mov
out
sbb
xchg
out
cld
push
mov
adc
cld
add
movsl
adc
pop
daa
arpl
js
lods
std
sbb
adc
stos
frstor
in
sti
aas
jmp
cmp
ljmp
inc
or
aam
adc
mov
daa
stos
frstor
in
sbb
enter
shlb
scas
mov
push
clc
icebp
in
sub
xchg
sub
xchg
add
and
je
loop
out
je
lea
add
jns
js
shlb
push
cmp
push
pop
inc
mov
xchg
xlat
push
pop
adc
call
cmp
ret
push
mov
xchg
in
sub
adc
push
int3
out
pop
je
insb
lcall
mov
addb
inc
call
push
bound
jno
dec
fadds
data16
xchg
pop
adc
inc
sbb
add
or
cmpsl
imul
xor
mov
add
fcmovu
mov
add
jmp
sub
pop
pop
sub
pop
pop
out
je
xor
xchg
sti
jno
mov
push
push
je
push
inc
test
fcomps
iret
push
xor
rcrl
inc
mov
xor
mov
cld
popf
test
pop
je
adc
fisubrs
jno
movsb
loopne
in
push
loope
jns
ret
shll
mov
rcrl
adc
mov
sarl
filds
adc
enter
inc
pop
xor
or
add
xor
jmp
data16
push
stos
fldt
push
dec
push
sub
adc
mov
xor
into
test
sbb
adc
mov
outsb
pop
iret
adc
or
xchg
push
xchg
stos
push
or
jmp
ficoml
das
test
cs
in
cmp
xchg
clc
insb
jnp
add
popf
mov
insb
jo
adc
fiaddl
ss
adc
test
lods
push
cltd
mov
mov
pop
mov
add
pop
rorb
jl
lcall
adc
fs
push
push
sti
sahf
adc
aas
out
popf
sub
jmpw
push
xchg
cwtl
ljmp
dec
add
add
nop
divl
mov
imul
xchg
add
ret
adc
inc
fistl
add
pusha
mov
add
lcall
sub
push
ret
addl
inc
and
mov
outsl
sbb
adcl
or
out
add
leave
mov
add
and
jmp
mov
bound
iret
adc
shll
add
xchg
mov
jbe
ficomps
insl
stos
push
mov
mov
mov
adc
ret
sti
pushl
das
mov
in
ficompl
icebp
mov
cli
cltd
mov
mov
dec
add
mov
ret
and
out
pop
arpl
add
fisubrs
fidivs
jnp
push
test
fisttpl
add
test
mov
push
into
pop
push
imul
mov
push
add
adc
add
or
or
fcoml
adc
cmc
and
filds
sub
add
mov
call
pop
std
outsl
aas
rcrb
add
pushf
cld
jge
add
sbb
insl
inc
nop
lcall
xor
adc
cmp
push
sbbl
and
sub
adc
fwait
dec
or
add
jmp
fstl
and
dec
and
ret
mov
lods
mov
dec
call
push
stc
test
jg
add
push
iret
ret
push
dec
cmp
jae
jne
popa
lret
insl
and
bound
cmc
and
sbb
pop
sahf
or
cmp
gs
daa
xchg
cmc
iret
xchg
jne
lock
and
sub
or
or
and
test
add
adc
add
push
add
loope
adc
cli
mov
aaa
pop
je
fstpt
pop
or
add
and
add
jnp
add
pop
or
add
notl
je
je
and
adc
add
adc
test
js
add
mov
push
inc
and
mov
add
test
dec
add
adc
jmp
popa
je
cmpsl
pop
test
or
inc
and
cmp
inc
rcll
cmp
or
cmp
gs
fldcw
add
test
jecxz
add
sub
add
test
int3
add
test
decl
pop
adc
add
and
push
arpl
call
push
push
pusha
mov
loop
inc
and
and
jns
adc
call
push
add
loope
into
add
test
andl
ljmp
xor
hlt
enter
mov
cmp
push
mov
add
adc
adc
jl
in
push
xchg
mov
add
jecxz
sbb
pop
adc
add
int
ficoms
jmp
add
adc
loopne
xchg
outsb
mov
sahf
jge
popa
push
pop
cmp
adc
outsb
cmp
mov
push
lds
scas
or
sub
xchg
ficoms
sbb
pop
adc
xor
adc
push
dec
int
xchg
add
xor
lea
rcll
mov
enter
xor
and
arpl
ss
mov
mov
lcall
fstl
mov
pop
adc
jmp
sbb
cmp
xor
add
cmp
and
pop
xor
or
inc
loope
test
jb
adc
je
add
popf
mov
or
in
or
decl
xchg
push
add
clc
inc
adc
test
jp
sub
mov
mov
in
xchg
add
pop
adc
push
cltd
push
push
pop
test
test
sbb
call
dec
int
or
adc
add
mov
cmp
repz
notl
push
dec
or
fimuls
or
movsb
mov
lea
stos
sti
jno
imul
roll
fisubrs
jp
add
lods
sti
lods
push
lods
push
loop
les
lods
add
and
subb
mov
fisubrs
xor
imul
call
pop
ljmp
arpl
std
leave
mov
sti
test
mov
sbb
bound
cmp
push
out
adcl
fstpt
insb
outsb
lods
gs
pop
mov
push
xchg
inc
sbb
addb
push
mov
xchg
js
cmp
xchg
sub
and
xchg
pusha
add
or
aaa
roll
repnz
testb
xor
test
jle
cmpl
lret
sub
xor
pop
mov
test
sti
sbb
or
loop
shl
adc
mov
pop
mov
fs
fs
sti
aam
add
shlb
jg
call
aaa
sti
mov
rclb
lahf
je
push
fistpl
ss
xor
or
add
fadds
jb
or
cmpsb
in
add
add
test
fstl
jmp
imul
pop
push
fsubp
mov
inc
xchg
mov
je
aam
and
cmp
push
or
mov
cltd
notb
add
jne
mov
jns
push
outsl
jecxz
int3
dec
or
aas
cltd
loop
xchg
and
adc
dec
add
mov
jecxz
fisubl
cmp
loopne
jmp
sbb
sti
push
jl
sub
inc
adc
push
dec
add
jo
test
xor
mov
jmp
das
test
pop
xor
arpl
pushf
aaa
test
ret
cs
test
push
fistpll
out
sbb
pop
mov
test
sahf
mov
mov
arpl
fwait
pop
out
call
mov
cmpsb
daa
fidivrs
jne
lock
test
outsl
jnp
fidivrs
mov
pusha
inc
add
popf
repz
ja
ljmp
rclb
add
adc
ja
adc
ficoms
jmp
loopne
insl
ret
xor
dec
adc
add
sbb
cmpsb
adc
add
adc
jg
add
push
loop
and
push
stc
scas
add
adc
jns
lret
xchg
test
pop
inc
pop
push
inc
and
mov
test
loopne
mov
int3
js
loopne
insl
ret
xchg
sbb
out
push
jmp
or
jb
cli
lock
fdivr
arpl
adc
add
pushf
add
iret
into
pop
aas
adc
rolb
ficoms
push
jb
loop
aas
ficoms
sub
cmp
and
push
and
aad
cmc
loop
add
out
cld
pop
loopne
loope
adc
mov
pop
sub
adc
sub
mov
fildll
adc
xchg
jno
add
into
push
pusha
mov
adc
cmpsb
xor
add
or
or
and
or
sbb
and
or
or
and
stos
xchg
add
and
xchg
adc
add
or
call
or
test
fstpt
dec
call
hlt
inc
and
loopne
mov
mov
popa
test
inc
dec
mov
js
jp
aaa
loope
inc
aaa
loope
jmp
xchg
in
jl
test
dec
test
data16
sub
adc
mov
mov
mov
sti
sub
ds
jp
mov
push
or
popf
xchg
mov
inc
cli
gs
lea
push
call
sti
sub
jns
add
loopne
sub
xchg
push
jmp
jmp
sti
dec
repz
je
hlt
aas
and
leave
jbe
add
inc
mov
sbbl
jecxz
push
cmpsl
lcall
xor
push
aad
packssdw
int3
jle
call
jmp
fwait
pop
adc
add
fldenv
ficoms
jmp
pusha
inc
add
ret
and
add
add
adc
jl
add
ja
scas
sbb
addl
and
adc
lock
popa
aam
or
adc
add
inc
cmpb
mov
push
and
adc
inc
loope
inc
add
in
add
pop
repnz
loopne
adc
add
popf
je
aad
xlat
dec
addl
mov
fisubrs
test
mov
sti
add
into
out
xchg
hlt
loop
add
pop
jecxz
jge
in
jo
lods
js
jb
adc
into
add
add
sbb
sbb
inc
mov
add
lods
lods
jecxz
jno
out
pop
push
sub
or
jne
and
push
call
cmp
mov
pushf
js
fcoml
sub
mov
data16
sub
ljmp
addr16
negb
xor
rcrl
push
mov
scas
adc
mov
pop
inc
dec
sub
mov
cmp
pushl
shll
incl
adc
adc
fdivp
inc
cld
pop
iret
add
inc
cld
mov
int3
mov
cli
test
icebp
imul
sahf
ja
inc
cmpsb
sahf
adc
inc
jns
push
xor
inc
loopne
outsl
mov
out
pop
sbb
push
repz
int3
cmp
ret
gs
aas
add
mov
add
jns
js
pop
adc
jp
shl
das
sti
lret
insl
hlt
aas
fimuls
out
lret
mov
xchg
push
cmc
cmp
loope
mov
mov
sub
jmp
vmovss
pop
dec
dec
jecxz
push
shr
xchg
std
out
mov
loopne
xor
xchg
orl
fwait
xor
sub
outsb
or
cld
in
push
fistps
test
mov
cmp
mov
js
fsts
rcll
xchg
pop
enter
add
cmp
gs
xchg
test
sub
aad
push
jno
loope
mov
flds
gs
fisttpll
push
inc
int3
sbb
loope
int
popl
pop
push
je
fs
or
jb
shlb
fldl
icebp
in
sti
jmp
imul
test
jle
xchg
pop
mov
sub
clc
lahf
sbb
mov
bound
repnz
xchg
sti
cld
adc
mov
mov
aas
dec
jmp
insb
test
dec
js
mov
jae
or
addr16
rorb
divb
addb
cmpsl
push
xor
jne
jl
bound
cmp
je
jl
dec
jmp
sbb
idivb
adc
mov
inc
push
ret
push
mov
cmp
icebp
movsl
idiv
cmp
test
fcmovne
jp
push
adc
push
xor
adc
sbb
sqrtps
test
hlt
mov
cld
fiadds
add
xchg
mov
sbb
sub
mov
xor
filds
or
aaa
mov
loope
mov
adc
mov
cmpsl
and
and
cltd
jne
imul
cli
leave
jnp
lock
jl
add
dec
test
push
add
out
add
sub
push
jae
sti
jb,pn
mov
cmpsl
dec
stc
add
jb
add
clc
adc
mov
hlt
rolb
lods
adc
outsb
jno
insl
mov
je
xor
adc
testl
or
mov
pop
inc
add
cltd
mov
add
adc
add
adc
push
shlb
mov
add
outsb
adc
add
jns
int3
test
add
adc
lahf
dec
pop
mov
mov
xchg
adc
shl
cltd
addb
mov
push
xchg
mov
fadd
add
mov
sub
and
add
sti
out
push
pop
sub
adc
jb
fcmovne
sub
adc
mov
push
inc
adcl
jmp
bound
xlat
sbb
xchg
inc
sub
and
ret
add
xchg
jle
ja
add
xchg
mov
pop
cwtl
jnp
add
add
mov
add
inc
lea
cmpsl
iret
add
divb
jp
in
testl
cmp
cmp
push
cmpsb
scas
or
or
pushl
or
add
xchg
add
or
add
fiadds
mov
fimuls
ja
add
cmpsl
jne
mov
or
mov
loopne
add
hlt
js
ret
inc
push
insb
cli
push
jp
rcl
cwtl
pop
push
mulb
adc
call
lods
add
ja
mov
arpl
lea
xor
add
incb
push
and
sahf
ja
andb
mov
push
incl
cs
or
imul
sub
adc
add
jns
ficoms
cmp
fsubp
mov
xchg
call
cmp
adc
adc
jle
stc
shrl
arpl
sbb
xchg
push
add
adc
cs
call
inc
ficoms
pop
inc
xor
jmp
cltd
fiadds
faddl
and
jecxz
xor
outsl
add
dec
add
adc
lret
add
or
adc
add
mov
outsl
jle
sti
jmp
imul
jmp
cltd
in
outsl
gs
jmp
or
add
lods
idiv
adc
jnp
fisttpll
fs
shl
ljmp
add
add
inc
vmovaps
rol
adc
jmp
fstl
data16
pop
inc
call
pop
adc
jmp
pop
push
or
push
add
fisttpll
add
out
rorl
mov
push
xor
push
push
sub
decl
xchg
sarb
cmp
sub
or
add
sbb
pop
mov
adc
mov
cmp
in
aas
adc
idiv
andb
add
test
mov
mov
or
sub
dec
or
clc
fisubs
xchg
call
xchg
sub
sub
test
ret
in
cmp
call
add
push
add
fsubrp
sbb
mov
add
inc
mov
mov
xchg
sbbb
decl
pop
call
mov
imul
mov
add
mov
addr16
stos
mov
mov
je
sub
pop
lea
clc
inc
fidivrs
es
rorl
fimull
paddusw
jno
inc
or
push
cli
and
jle
adc
add
jl
daa
in
shr
mov
xor
call
or
adc
cmp
or
lcall
lea
fists
jmp
add
push
mov
xor
add
pop
out
leave
and
lret
int
or
mov
js
add
enter
mov
sti
popf
add
lea
adc
jmp
mov
xor
add
ret
fisttpll
or
sbb
xor
mov
fcoml
add
shl
call
shrl
cmp
and
push
int3
cli
hlt
add
mov
xor
pop
js
in
mov
cltd
push
sub
jnp
sub
jg
add
arpl
insb
or
js
mov
fucomi
inc
sbb
xchg
add
les
je
mov
push
movsb
je
cmpsl
adc
sub
call
test
or
jb
bound
add
and
add
or
add
cld
or
add
lcall
inc
mov
xorl
sbb
xor
nop
inc
adc
jne
mov
loop
shlb
sbb
fnsave
inc
into
xchg
xor
jae
mov
arpl
sbb
push
ss
sub
jp
or
mov
pop
pushf
cmp
xor
jmp
add
fsubrp
xor
push
adc
dec
sbb
ljmp
mov
incb
xchg
dec
call
sbb
stos
mov
jnp
pop
adc
add
loope
leave
adc
adc
ret
pop
add
subb
sbb
jmp
fidivs
data16
cmpsb
add
push
fiadds
imul
icebp
lcall
icebp
mov
adc
sbb
xchg
add
push
lret
xchg
test
xor
mov
fwait
nop
adc
add
jmp
nop
xor
outsb
lret
add
fstl
add
daa
or
je
adc
bound
and
test
mov
jmp
sti
hlt
loope
aas
jmp
fnstsw
addl
or
and
lahf
aad
aaa
add
addr16
sti
sbb
jne
jmp
loop
rolb
test
dec
cmp
lahf
aad
aaa
add
je
adc
aam
je
jmp
fidivrl
add
cmp
mov
pushl
cmp
or
jae
dec
cmp
mov
pushl
dec
cmp
mov
inc
mov
jmp
pop
mov
ret
dec
mov
fildl
push
jecxz
jg
testl
adc
add
cld
inc
xchg
daa
std
mov
call
pop
fs
test
stos
or
ror
test
cli
jp
push
aam
inc
nop
or
cmp
pushf
add
std
mov
bound
sbb
push
pusha
ret
sbb
outsl
adc
inc
add
sbb
imul
mov
add
mov
sti
jge
nop
aas
fsubp
ret
je
sahf
mov
test
push
add
pop
mov
ficomps
mov
add
daa
call
cs
mov
test
out
fidivrs
cld
fdivrp
les
mov
add
adc
xchg
sti
in
pop
imul
add
adcb
in
ljmp
sbb
psubsw
pop
mov
nop
in
cltd
sbb
jae
aaa
out
shr
sbbb
mov
loop
sbb
mov
nop
jmp
dec
daa
pop
insl
mov
ficoms
fildl
adc
ss
adc
subl
add
arpl
xlat
ficompl
xchg
dec
fnstcw
jmp
arpl
sbb
fs
jns
outsb
imul
sub
loopne
xchg
cli
fdivrs
jmp
out
xor
insb
sbb
es
loope
insb
push
jbe
cs
out
leave
jae
mov
cld
stos
fldl
sti
cltd
pop
sbb
test
testb
scas
xchg
xor
shl
cltd
ret
fldl
div
adc
mov
lahf
cld
inc
ja
or
inc
lahf
cld
inc
inc
push
je
mov
jmp
hlt
or
cmova
push
pop
testl
add
xchg
sub
push
cmp
or
push
hlt
add
not
hlt
cmpsl
bound
in
dec
mov
jno
sbb
lret
adc
sti
inc
mov
fwait
in
lret
add
test
add
push
call
mov
jle
imul
fidivrs
sti
jns
inc
jl
test
add
addr16
pushaw
aas
dec
lret
lods
jns
and
xchg
ss
mov
cmp
push
scas
fbld
xchg
mov
lret
sub
adc
mov
xor
jne
adc
jne
dec
add
cmp
push
pop
aas
lock
push
mov
inc
scas
mov
pop
mov
aas
mov
test
incl
jo
aam
cmpsb
adc
cmp
mov
cltd
fists
jmp
mov
roll
sti
scas
sbb
sub
mov
mov
mov
inc
fimuls
adc
incb
adc
add
insb
mov
sbb
adc
mov
xor
inc
fiadds
mov
xchg
jo
xchg
xor
mov
icebp
adc
pop
outsb
inc
mov
ret
cli
aam
pop
inc
jmp
push
insb
je
adc
mov
rcll
aad
mov
insb
lea
sti
cmpsb
push
fistpl
popa
insb
sti
sbbl
clc
hlt
sub
cltd
sbb
pusha
stc
out
hlt
stos
push
ret
jno
push
fimull
loope
das
add
sbb
or
js
fwait
addr16
mov
ss
adc
xchg
jbe
jmp
jo
negl
ret
add
push
push
mov
xchg
xchg
in
testb
push
mov
xchg
filds
out
daa
and
out
jbe
add
adc
jmp
hlt
adc
call
lret
push
jne
adc
adc
push
iret
adc
or
and
adc
push
xchg
negl
jne
xchg
adc
mov
outsl
jbe
cli
test
jecxz
stc
outsb
fdivr
add
push
fisubrl
fidivrs
test
mov
mov
push
js
fcoms
shl
sbb
cmp
femms
sar
std
imul
add
jmp
sahf
ja
inc
add
inc
popl
aaa
xor
add
add
dec
inc
push
sahf
ja
or
add
fwait
mov
mov
jmp
addl
cmp
adc
idivl
xchg
sub
pop
sub
xchg
shr
bound
adc
xor
add
mov
adc
jl
adc
lret
gs
mov
add
cmp
call
addl
adc
jns
xor
add
adc
xchg
insb
jne
fisubs
rcrl
call
jg
test
add
insl
mov
mov
insb
add
sbb
add
call
add
mov
xchg
sub
push
bound
into
mov
int
xchg
in
cltd
jnp
sti
aas
add
popf
mov
jmp
fstpl
add
pusha
adc
jmp
ds
call
and
hlt
addr16
xor
push
dec
ret
rorb
push
sahf
inc
add
insb
dec
push
pop
sub
test
notl
dec
test
adc
add
sbb
push
cwtl
jp
adc
sub
pop
call
pop
ret
push
mov
sbbl
dec
lea
jno
call
js
adc
and
call
xchg
cld
inc
aaa
call
add
int
pop
xorps
idivl
sub
subl
ret
pop
mov
push
add
stos
mul
mov
test
arpl
pop
sub
mov
cli
rcrl
mov
mov
inc
aas
add
or
fmulp
or
nopl
rorb
inc
or
fiadds
push
add
mov
lods
sub
ja
cs
mov
add
mov
lds
fidivs
faddl
rorl
adc
or
pop
out
hlt
imul
mov
in
dec
and
movsb
into
insb
cmpsb
add
aad
sbb
test
stos
int
fistl
cltd
mul
push
sbb
rcl
mov
insb
inc
repz
nop
pop
imul
fistl
pop
mul
push
add
mov
inc
mov
jecxz
sbbl
pop
out
sbb
jnp
js
push
test
gs
jecxz
data16
adc
imul
movsb
frstor
inc
mov
dec
ss
insb
test
addr16
movsb
pop
sub
mov
addr16
pop
fdivp
mov
decb
mov
insb
sti
bound
xchg
pusha
push
and
sbb
push
loop
xor
aad
cmp
sub
arpl
loop
arpl
stos
sub
in
in
adc
aas
imul
out
xchg
int
rcr
add
pusha
add
or
lea
movsl
lds
pop
adc
inc
mov
adc
cmp
mov
je
testl
stc
les
nop
jo
rclb
stc
jmp
xchg
adc
test
nop
jo
adcb
add
test
xchg
into
cmpl
jne
stos
rolb
adc
call
lret
rcr
pushl
mov
dec
push
arpl
push
dec
jnp
lcall
inc
call
jmp
fisttpl
jns
out
sub
dec
xor
xor
sub
rorl
loope
outsl
push
test
cli
lret
mov
inc
fdivp
jne,pt
hlt
shll
mov
xchg
push
fidivs
lcall
jg
push
clc
push
adc
cmpsb
stc
addr16
sbb
imul
xor
out
add
cld
mov
test
add
adc
shrl
fnstcw
gs
xrelease
test
gs
or
pushf
roll
add
leave
inc
jbe
and
cmc
imul
gs
repz
cwtl
jmp
jbe
dec
jle
xchg
and
call
add
sbb
imul
jle
xchg
movsb
notl
push
add
ffree
mov
aas
inc
movsl
imul
sar
xor
aas
jmp
sbb
jmp
arpl
jmp
mov
wrmsr
stc
sbb
cmpsb
push
bound
in
adc
lcall
mov
insb
sub
push
xor
and
adc
cli
and
add
fstl
test
jno
lea
sti
fimuls
pop
cld
into
fstpt
add
imul
push
pop
jl
add
stc
xor
enter
push
mov
adc
push
icebp
cmp
add
in
clc
xor
mov
cmp
inc
add
and
nop
mull
test
orl
cmc
dec
dec
jp
mov
std
xor
dec
xor
adc
xchg
jne
filds
decl
xchg
test
mov
notb
out
inc
call
pop
mov
addr16
sub
icebp
negl
std
xor
xor
cmc
jnp
cli
xchg
jno
inc
add
andl
jge
out
inc
push
arpl
std
sbb
sti
pop
cmp
or
data16
lret
push
shlb
push
movsl
addr16
in
add
mov
jge
mov
pop
repz
js
fiaddl
inc
mov
adcb
push
adc
icebp
repnz
negb
adc
or
jl
stos
outsl
xor
test
add
dec
loop
adc
jmp
or
loop
add
jmp
add
fmull
add
inc
roll
fisubs
hlt
inc
ror
mov
popa
outsb
je
push
jno
mov
cltd
imul
add
mov
mov
call
fisubs
sub
adc
jmp
push
mov
sub
rorl
mov
imul
lods
fs
jmp
out
jne
fstl
mov
mov
fmull
pusha
mov
pop
in
pop
enter
imul
push
cwtl
pusha
jecxz
inc
pop
sti
rcr
push
adc
sub
or
add
push
mov
mov
add
cmc
idiv
jns
jmp
inc
adc
je
in
jg
sbb
pop
aas
jo
mov
test
inc
aaa
in
mov
lods
jp
sti
mov
mov
movsl
inc
fimull
adc
inc
cmp
xor
call
add
add
outsl
add
cmp
fiaddl
inc
fidivrs
decl
adc
push
xor
out
fmulp
jne
aaa
mov
out
push
test
mov
jno
jg
shrl
pop
test
js
std
repnz
push
dec
cmp
setle
cli
mov
mov
mov
sub
push
and
arpl
cli
push
icebp
mov
sti
jmp
adc
push
fldl
imul
clc
inc
imul
test
ja
bound
jmp
xor
addr16
mov
scas
js
outsb
adc
insb
mov
mov
or
push
jge
clc
adc
or
aaa
int3
mov
fdivp
pop
or
jmp
outsb
int3
adc
shr
add
or
fisubrs
out
xor
imul
shlb
pushw
xor
xor
cmp
adc
shll
lea
jmp
push
pop
ja
shll
mov
xchg
sub
cli
ljmp
sub
call
je
test
add
sti
push
pop
push
jne
adc
mov
xchg
dec
mov
xchg
push
insb
jg
in
in
add
and
cli
adc
pop
aas
jmp
sti
aam
fcmovu
push
test
mov
clc
mov
mov
pop
sti
bound
jl
fsts
inc
add
add
push
out
mov
jl
xchg
xchg
jl
xchg
testb
mov
test
mov
add
xchg
xchg
xchg
mov
pushl
add
pop
and
nop
das
call
mov
dec
push
push
notl
lods
in
idivb
fcompl
aaa
adc
adc
mov
sbb
adc
mov
testl
not
xor
test
clc
fstpt
add
psubsb
mov
pusha
incb
sbb
or
iret
out
pop
jmp
jmp
push
cmc
pop
add
imul
sti
add
mov
in
fsubp
sbb
lret
hlt
and
jno
call
and
inc
mov
mov
adc
ljmp
and
iret
add
push
std
out
jo
incl
push
xchg
cli
or
add
jb
out
icebp
push
or
lret
add
insb
mov
add
movsl
sub
mov
add
sub
push
add
je
pop
mov
ret
add
adc
pushl
repnz
lahf
aad
adc
pop
mov
fidivl
add
faddl
out
or
adc
fnsave
repnz
movsb
sub
xor
mov
or
ficoms
jmp
push
ficoms
sbb
or
sbb
push
sti
gs
pop
cltd
pop
imul
orl
add
loop
mov
loop
add
adc
or
or
adc
stos
fstl
in
push
test
push
sti
pop
pop
mov
pop
mov
daa
cltd
cli
mov
scas
push
sti
gs
add
add
loope
aas
jmp
iret
inc
xlat
inc
pop
mov
lret
fimuls
mov
mov
cmp
mov
adc
inc
fldt
push
xor
arpl
dec
sti
push
adc
add
rorl
rorb
pop
setg
por
add
push
pop
fs
xor
out
sub
testb
add
out
add
mov
xorl
inc
sbb
je
inc
or
inc
inc
jne
divl
or
push
outsl
aam
lcall
adc
push
cld
nopl
pop
add
add
divb
cli
adc
xor
pop
xchg
dec
adc
adc
call
pop
mov
add
bound
sbb
jns
mov
pop
mov
mov
and
fwait
stos
idiv
mov
pop
push
lea
cs
adc
ficoms
jmp
add
push
faddl
mov
push
aam
jmp
call
adc
adc
pop
push
aad
mov
sub
push
mov
xchg
sbb
testb
add
add
or
fmul
test
fmul
test
push
in
in
sbb
imul
rcl
pop
ljmp
add
mov
add
dec
add
test
mov
mov
lods
ss
pop
sti
sbb
xchg
cld
mov
pop
call
ja
pusha
cld
stos
fisttpll
inc
add
sub
jne
imulb
inc
pop
out
and
roll
rolb
sbb
mov
dec
xchg
push
add
sti
push
hlt
cmp
in
push
aas
jmp
rcrl
out
sar
xor
xchg
das
test
xchg
rorl
adc
inc
aaa
adc
dec
push
mov
push
in
or
add
add
adc
inc
testl
dec
lea
push
mov
mov
sbb
lret
call
pusha
icebp
ret
xchg
cmpl
add
jge
jne
push
test
mov
int3
aas
shr
cli
dec
mulb
and
add
push
cmp
fisubrs
incl
lods
add
leave
mov
mov
clc
fcoml
and
jno
jne
adc
je
xchg
in
je
adc
add
imul
push
sahf
imul
cmp
xchg
ret
cmpsl
daa
cld
call
fistps
movntq
out
sti
fidivs
gs
repnz
push
movsb
addr16
jns
lret
ltr
push
shl
aad
ret
mov
pop
scas
adc
not
test
imul
add
mov
add
or
pop
out
loopne
fisttpll
sub
pop
dec
icebp
add
int
shl
adcb
call
xor
push
adc
pop
push
loop
cmp
dec
push
add
lcall
gs
rol
xor
mov
shrb
push
xchg
sti
sub
jmp
gs
add
xor
inc
jmp
mov
pop
fimuls
cli
pop
rol
cli
push
ss
jne
mov
arpl
sbb
push
scas
call
out
lock
mov
jmp
xchg
sub
jb
dec
pop
pop
sbb
fstps
shrl
test
mov
mov
in
push
shlb
inc
bound
or
cmc
imul
sub
call
add
dec
out
cmp
push
push
inc
pusha
pop
push
inc
pusha
add
call
pusha
or
imul
mov
call
mov
dec
loopne
movsl
icebp
or
ljmp
out
pusha
testl
cs
or
les
rclb
dec
dec
xor
jmp
push
sti
fxch
xlat
imul
sbb
adc
xchg
les
add
pop
shrb
mov
int
or
mov
packsswb
das
xchg
stos
ds
fidivrl
fdivrp
add
popa
push
or
sti
jmp
or
or
js
push
push
mov
cmp
icebp
mov
aaa
shl
ret
daa
add
push
js
mov
out
lahf
pop
cli
add
fldcw
push
cmp
out
loope
push
cmp
jbe
mov
pop
fimuls
fists
cli
jmp
adc
ficoms
jo
fsts
inc
push
push
fidivl
mov
in
push
push
loop
cmpsl
sub
xor
cmpsl
inc
stos
fwait
int
dec
lock
pop
dec
push
inc
sahf
popf
cmp
ss
push
adc
pusha
mov
scas
dec
hlt
fucomi
shr
jle
mov
and
add
aam
fucomp
cmp
jbe
sbb
push
jg
lds
fsubp
fwait
lods
jae
pushf
movsb
pop
xchg
call
dec
test
jns
in
or
sti
mov
xchg
cmpsb
sti
push
jmp
shl
adc
cmpsl
sti
not
push
jne
sub
jmpw
adc
inc
xor
ret
dec
adc
imul
dec
pop
aas
add
inc
call
divb
push
cltd
ds
adc
jmp
inc
mov
mov
arpl
arpl
clc
imul
adc
and
leave
cmp
std
lds
mov
cmp
jae
aas
popa
not
rorb
jmp
jmp
popa
adc
ud0
or
das
pop
not
mov
or
stc
rorb
add
leave
jmp
dec
and
sbb
xor
sar
mov
pop
push
sti
push
pop
and
adc
adc
cmp
rclb
mov
add
or
decl
xor
cmp
fisubs
mov
mov
jl,pn
add
cli
rorl
sar
cmp
into
dec
lods
cmpsb
bound
lds
mov
fs
in
stc
fwait
push
test
cmp
xlat
add
cmc
jae
stos
push
sti
cwtl
mov
lret
xchg
mov
adc
xchg
push
insl
xchg
cld
sbb
mov
mov
ret
mov
hlt
fwait
stos
iret
call
in
inc
nop
iret
call
addr16
adc
pop
dec
dec
cmpsb
add
call
adc
in
add
stos
inc
pusha
dec
cwtl
inc
gs
sbb
xlat
and
fists
mov
ljmp
push
test
dec
sbb
push
lds
ret
add
les
push
add
popf
dec
jle
fadd
sbb
inc
sbb
dec
jno
aam
inc
adc
imul
adc
inc
add
jae
loop
sub
push
bound
fisubrl
and
fbstp
fsubl
aas
jmp
mov
and
sti
sbb
dec
aas
jmp
aad
aas
jmp
mov
dec
dec
aas
jmp
cltd
sbb
pop
aam
ret
xor
minps
punpckhwd
dec
lret
cmp
inc
outsb
add
xchg
mov
test
mov
cmp
popf
cmc
loop
lock
inc
xchg
pop
jmp
outsb
rclb
aaa
or
sti
inc
inc
dec
xor
lret
jo
orb
sub
inc
inc
sub
mov
adc
ljmp
inc
or
jb
add
sbb
fadds
lret
adc
add
fidivs
cmp
and
ss
inc
and
ss
inc
pop
pop
shlb
xlat
ds
xchg
cs
fistpll
jmp
push
add
xchg
jge
xchg
call
movsl
and
jmp
pop
adc
xor
push
pop
lds
andl
stos
mov
lods
ss
int
add
push
mov
add
add
mov
iret
test
lcall
add
arpl
mov
aad
mov
add
call
adc
xchg
add
fwait
pushf
repz
rorl
test
adc
add
pushf
or
ljmp
push
xchg
sub
jecxz
movsl
cld
dec
xlat
icebp
aad
jmp
add
dec
in
mov
loope
pop
push
push
mov
add
xchg
in
add
ljmp
mov
fldl
repnz
sbb
push
or
out
fwait
shr
dec
ljmp
aad
pop
loop
pop
nop
push
sti
cld
mov
inc
jmp
test
cmpb
pop
push
push
xchg
xor
popa
jo
lea
push
int3
sti
pop
and
cltd
mov
sbb
inc
jle
jmp
push
inc
jmp
jmp
push
pop
das
push
pop
mov
or
jl
inc
idivl
sub
es
sar
dec
adc
popa
add
enter
loope
shlb
pop
loope
clc
jae
cltd
jno
mov
mov
out
pop
push
out
and
push
sti
test
xchg
jne
add
idiv
in
into
loop
test
aas
ret
add
aaa
jecxz
jp
divb
pop
mov
xor
adc
popl
add
fidivs
pop
add
and
inc
mov
or
faddp
jp
ds
call
repz
cmp
xchg
ss
fcoms
or
fidivrl
push
fcom
stc
sbb
xor
out
testb
push
or
push
movsl
pop
jg
cmp
push
cmpsl
add
inc
roll
jo
shll
fisttps
pop
lea
movsl
arpl
xor
adc
mov
xor
push
add
pop
out
rcr
loopne
out
lea
aad
xchg
xor
movl
jo
popa
xabort
fwait
sub
inc
in
add
xor
lds
test
js
add
xor
fs
clc
push
push
repnz
inc
ljmp
rorl
pop
push
leave
addr16
mov
popa
fdivs
sbb
lcall
clc
ficompl
sti
mov
shl
mov
mov
sti
cmp
pop
push
fstp
shll
je
das
fdivrp
adc
inc
jne
cmp
sub
cmp
fsubs
das
sti
hlt
icebp
cmp
mov
fstl
jne
sub
test
pop
aam
es
int3
fists
shl
mov
add
sti
add
and
call
add
sub
lds
add
pop
xchg
aas
cmp
into
jp
ja
xor
scas
adc
pushf
or
mov
add
ds
push
push
mov
sbb
out
push
or
fildl
mov
cmp
fisttps
cli
int3
jae
sahf
push
and
jmp
mov
mov
decl
notb
nop
shlb
dec
cmp
addb
push
pop
icebp
out
out
mov
sti
sub
inc
inc
sbb
and
sti
int3
ja
mov
xchg
xchg
ficomps
adc
add
xor
push
pop
sub
push
lcall
test
sub
adc
js
xor
mov
xlat
cmp
mov
ret
fucomp
mov
mov
fbld
mov
pop
out
mov
push
lods
fists
in
outsb
adc
and
inc
dec
push
inc
sahf
push
outsb
filds
push
sub
ficoms
sub
not
testl
mov
or
add
out
push
in
sub
pop
dec
test
out
or
or
in
daa
sbb
sub
in
insb
pop
xchg
aas
dec
xchg
inc
pop
test
pop
je
add
fstl
add
push
xchg
add
pop
cmp
jmp
jg
sti
scas
xchg
jle
jmp
mov
or
lcall
fstl
push
ffree
push
bound
pop
xchg
push
rclb
insb
and
adc
sub
inc
loop
test
push
adc
sub
data16
les
jb
xchg
pop
fldcw
jp
xor
xchg
pop
cmc
push
pop
bound
xchg
mov
incl
push
addl
rorb
add
cs
add
in
adc
rorb
mov
in
les
or
out
pop
hlt
mov
call
adc
nop/reserved
call
jge
push
leave
xor
fdiv
jne
in
or
pop
add
mul
idiv
dec
std
loop
inc
aad
or
xchg
push
insl
daa
xor
das
jmp
mov
add
mov
std
fnstenv
inc
xchg
jle
into
inc
dec
jae
movsl
xchg
sub
jge
std
or
ds
push
adc
xchg
push
ret
and
les
xchg
daa
ljmp
add
or
sub
dec
mov
dec
push
test
cld
aaa
mov
add
xchg
sbb
jle
sub
add
push
mov
push
je
les
xor
jb
adc
std
adc
mov
cmp
mov
inc
shl
sub
shlb
mov
mov
or
cmp
or
mov
adc
out
pop
mov
xchg
and
iret
adc
cmp
inc
add
adc
imul
stos
push
pop
lret
hlt
mov
cmp
pop
aad
and
cmp
jns
std
and
mov
mov
je
mov
pop
pop
sub
xchg
aas
je
sub
and
add
xchg
clc
insb
adc
or
add
cwtl
pop
mov
dec
pop
mov
or
mov
sub
adc
jmp
outsb
loope
bound
adc
insl
pusha
adc
jmp
jne
cli
into
stos
xchg
lock
stos
les
fstl
add
pop
idiv
xor
xchg
inc
in
test
add
ffree
push
int3
xor
lock
add
mov
cmp
cmp
lret
mov
int
add
push
push
add
jp,pt
add
in
cli
int
fldlg2
out
jp
inc
mov
call
push
je
in
ljmp
testb
out
mov
mov
idiv
jl
test
mov
cmp
xor
xor
xor
pop
adc
pop
test
incl
ljmp
repz
incl
fisubrs
jl
idivb
jl
ljmp
jle
daa
rcll
jb
xchg
cmpsb
inc
adc
out
xorb
enter
in
dec
scas
mov
pop
out
subl
jmp
subb
add
xchg
mov
sti
xchg
mov
rorl
add
adc
add
dec
in
sbb
lock
sub
push
movsl
cmp
pop
cmp
jae
aam
adc
adc
inc
scas
loope
leave
loopne
into
roll
sub
xchg
push
pop
push
mov
ret
adc
xchg
rcl
adc
int
stos
dec
pop
cmp
jmp
add
mov
pop
add
rcrb
lret
mov
mov
fs
cmp
push
dec
das
cmp
sahf
cmpsb
or
fs
cmp
xchg
nop
lahf
jle
nop
inc
frstor
xchg
fcmovnbe
call
xor
stc
fucom
gs
adc
sarb
inc
out
add
inc
test
add
and
sti
aam
or
jmp
sbb
push
je
lcall
sbb
adc
xlat
mov
jp
out
jmp
or
push
pop
xchg
popa
add
sbb
add
sub
adc
add
mov
push
sub
test
mov
adc
lcall
pop
xchg
mov
add
cld
dec
pop
andl
mov
pop
adc
fcmovu
popa
ja
xor
xlat
push
test
inc
add
arpl
jne
lea
add
out
movsl
loopne
test
pop
push
mov
lds
stc
inc
pop
test
dec
dec
ret
arpl
sti
loope
fisubrs
xchg
rcrb
sti
gs
mov
xchg
mov
and
mov
fmuls
shlb
sti
andl
mov
mov
push
mov
test
xchg
jmp
pusha
fisubs
mov
mov
jle
fisubs
cs
lods
inc
je
mov
out
stos
rorb
ficoms
pop
push
lods
sub
inc
add
adc
cli
nop
int
pop
fnstsw
mov
sbb
mov
cmp
xchg
sbb
call
ficompl
xor
cld
push
in
repnz
xchg
and
icebp
nop
fdivr
orl
lods
sti
orb
fcomp
xchg
sbb
cld
in
fnstenv
cld
xchg
into
shr
jns
popf
clc
les
out
insl
enter
rcll
out
xchg
mov
sbb
ss
or
call
xor
jae
lds
jmp
and
sub
mov
add
mov
pop
dec
imul
and
sti
sub
insl
out
outsb
inc
daa
jmp
xchg
cmp
xor
pop
or
das
out
mov
sbb
mov
aaa
sub
pop
scas
xchg
add
andnps
pop
lldt
jl
jne
mov
idiv
add
add
jmp
inc
and
data16
shll
dec
out
add
fnstenv
pop
mov
push
test
pop
add
incl
pop
mov
inc
lds
out
inc
fimuls
in
mov
adc
cmp
inc
push
notl
mov
push
aas
jmp
push
jne
adc
arpl
inc
and
inc
rcrb
notl
jbe
push
push
sti
incl
add
ds
jge
push
inc
mov
cwtl
jnp
push
lods
mov
sub
push
xchg
mov
sarb
daa
mov
aaa
pop
inc
or
xorb
push
push
insb
sub
adc
push
push
adc
test
insl
mov
xor
or
pop
mov
push
pop
xchg
add
dec
fs
mov
and
adc
sbbl
dec
and
aam
repnz
jle
in
popf
cli
pop
out
xchg
dec
mov
mov
jns
sub
push
sbb
push
aad
or
enter
out
xor
daa
into
shr
jl
push
incb
sbb
lahf
movsb
add
xor
in
xchg
sub
daa
push
daa
add
test
xchg
inc
in
lcall
movsb
mov
aad
jb
push
daa
sub
push
inc
xchg
fstl
add
fs
insb
cltd
mov
loope
imulb
loop
pop
push
inc
into
stos
sahf
leave
xchg
sub
nop
jge
fstl
push
mov
pushf
inc
xchg
push
sub
jmp
cmpsb
mov
stc
popf
das
mov
xor
cmp
pop
add
push
jae
fdivs
pop
out
fdivrs
cmpsl
adc
mov
int3
adc
sbb
dec
push
dec
test
notl
divl
stos
pop
pushf
sbb
aaa
pop
imul
cmc
pusha
arpl
hlt
adc
call
sub
adc
cmp
add
cmpsl
dec
les
dec
mov
decl
je
icebp
xlat
adc
xchg
jg
and
pushl
pop
call
je
pop
in
dec
sti
shll
push
popa
dec
cmp
sahf
aaa
jbe
dec
and
cli
lret
sbb
inc
dec
adc
push
jne
dec
push
gs
ja
inc
sti
lods
fstl
or
shl
icebp
dec
out
add
pop
icebp
into
testl
or
in
push
shrl
push
cmp
jne
scas
test
mov
and
fimull
cli
or
cmc
inc
sarl
jno
lods
sti
add
pop
mov
push
sub
das
ret
dec
cs
out
shr
pop
pushf
movsb
dec
fisubl
xchg
add
lret
clc
iret
out
stc
rolb
sub
aam
out
shr
mov
in
aas
testb
mov
xchg
repnz
popf
xor
popa
push
xchg
pop
test
push
xor
dec
fld
cltd
jns
mov
xchg
inc
jb
lret
pop
sbb
or
shr
cmp
movsb
lods
movsb
or
cmp
dec
js
test
icebp
xchg
ret
add
push
insb
ret
adc
adc
imul
out
test
lock
sub
cmp
and
xor
je
xor
loope
and
sti
sbb
and
call
ficoml
pushf
jne
je
dec
cmp
fcomps
xchg
addb
ds
pop
mov
pop
jp
dec
jl
sub
add
inc
enter
aam
or
dec
sti
pop
jno
mov
lock
add
jae
lcall
call
jnp
jae
adc
in
mov
notl
add
into
jae
int3
pushl
rolb
divb
push
fisubrs
adc
cmp
xchg
testl
jge
dec
or
mov
inc
sti
clc
lret
add
inc
adc
push
call
or
mov
icebp
fwait
daa
aas
je
add
or
and
js
out
cld
add
cmc
xor
jne
cmp
or
testl
or
inc
or
add
lahf
mov
jmp
out
push
aas
sti
bound
test
daa
mov
call
ret
cltd
xchg
test
pop
adc
stos
add
xchg
sub
adc
ret
imul
in
pop
int
pop
lods
xchg
mov
loope
or
pusha
xor
inc
bound
and
adc
sbb
test
arpl
adc
mov
jmp
cs
loope
ljmp
add
adc
aas
sbb
in
fstps
add
push
hlt
inc
js
sti
scas
popa
push
je
sbb
sub
cld
dec
add
push
je
nop
mov
mov
outsb
add
hlt
or
mov
mov
cmp
sbb
lcall
mov
sti
insl
popf
pushf
popa
push
es
stos
adc
jno
bnd
fistps
inc
fstpt
jmp
sbb
sub
shl
mov
push
dec
incl
adc
aas
add
int
divl
xchg
clc
push
cmp
adc
adc
adc
lock
mov
ds
add
adc
push
xor
sbb
jne
shlb
rclb
xor
pop
insb
inc
mov
in
rorl
lock
je
add
mov
arpl
lea
push
icebp
inc
pop
rclb
notb
mov
pop
mov
je
in
pop
loop
sar
dec
xor
repnz
out
sti
xor
sahf
sub
add
dec
fdivr
adc
inc
adc
divl
inc
jb
mov
data16
inc
adc
jo
sbb
or
enter
inc
adc
cmc
or
xchg
rorb
sti
stos
daa
inc
jne
push
adc
mov
aaa
rolb
fbstp
incl
ficoms
repz
ss
sti
mov
push
adc
fists
jmp
add
xchg
jb
ficoms
jmp
aas
push
pop
cmp
and
call
sub
cli
call
lds
std
imul
mov
rorl
add
icebp
push
aam
dec
mov
sbb
shlb
pop
add
jns
add
or
testb
test
popf
fwait
or
and
sti
dec
aaa
add
fstl
sti
popa
aad
dec
sbb
rorl
lods
lods
mov
add
sub
adc
movsb
dec
sbb
and
and
outsb
mov
dec
adc
mov
adc
sbb
rorb
xchg
inc
jmp
shlb
push
add
int
incb
mov
jne
and
lea
push
add
cmp
add
scas
adc
add
mov
shlb
ss
sti
fwait
adc
or
mov
imul
dec
pushf
add
xlat
mov
in
xchg
in
and
cmp
add
cld
add
xchg
push
decl
adc
in
in
popf
push
sti
mov
mov
into
mov
repz
clc
inc
test
stc
mov
gs
jecxz
lds
testb
cmp
adc
fwait
in
mov
ja
cmp
add
adc
aaa
jmp
dec
sar
outsb
xor
mov
testl
fiadds
add
test
std
cmp
sbb
jns
cmp
sbb
ds
rcrl
fnstcw
cmp
aam
add
xorb
adc
je
cwtl
movsb
aaa
inc
adc
xchg
add
add
lock
cwtl
ffree
icebp
mov
mov
mov
mov
sub
rcrl
xchg
je
les
mov
add
xor
movsl
and
sub
push
lcall
dec
and
ficoms
mov
call
sbb
into
fwait
movsl
cmp
adc
push
in
cmpsb
pop
in
sahf
or
xor
push
pop
adc
mov
add
or
sarl
or
cld
xor
aas
jmp
xor
adc
arpl
adc
roll
push
je
pop
aam
push
ljmp
sbb
xor
add
sbb
in
sti
adc
mov
xchg
dec
sbb
push
push
adc
jmp
popf
and
loopne
add
or
hlt
test
push
jne
pop
aam
add
adc
jne
mov
pushf
cmp
stos
mov
divl
call
adc
adc
mov
out
inc
and
add
popa
xor
add
push
dec
pusha
fists
adc
dec
pusha
fists
mov
notl
int
bound
or
push
push
adc
adc
mov
push
pop
ds
pop
add
in
adcl
jp
pop
inc
push
mov
mov
inc
add
sub
cmp
mov
inc
adc
sub
add
mov
add
sub
or
add
fisubrs
add
cmpsl
cli
out
mov
jle
or
decl
dec
ljmp
sub
mov
iret
arpl
xchg
sahf
lods
jne,pt
mov
or
and
jp
repnz
mov
incb
mov
inc
fs
add
subl
dec
loopne
jg
movsl
cli
cmp
or
popa
ds
sub
fcompl
lods
fucomip
mov
jmp
add
inc
jb
cltd
xchg
test
add
mov
pop
and
push
outsb
add
sbb
mov
shrb
pop
ret
insl
sub
xor
or
stos
orl
pushl
sbb
aaa
sbb
jne
or
test
outsl
adc
sub
adc
imul
popf
dec
jg
sub
sti
pop
push
icebp
pop
cltd
or
ss
call
push
xor
jmp
rcll
and
bound
sahf
adc
stc
lock
test
hlt
or
add
sbb
mov
fiaddl
jnp
jmp
dec
xor
push
lea
mov
ljmp
fadds
hlt
mov
add
je
and
push
out
mov
xchg
jle
ljmp
add
adc
je
adc
add
push
adc
push
adc
and
adc
test
adc
test
mov
in
or
aas
divb
mov
inc
imul
mov
adc
ficomps
mov
add
popa
xor
ud2
push
pop
cmp
cltd
aaa
aas
fiadds
mov
aaa
aas
fisubs
adc
add
cmp
cld
popf
sub
lcall
es
cld
popf
sub
fiadds
mov
lcall
add
jmp
adc
push
inc
je
mov
iret
cli
lret
inc
adc
adc
xchg
into
call
icebp
inc
es
mov
cmc
lock
add
mov
jb
icebp
push
pop
pop
test
sarb
cli
int
cmp
push
push
ljmp
aaa
rcll
xchg
sbb
or
lcall
add
push
aaa
test
sbb
loope
lcall
pop
sbb
push
inc
xor
push
and
call
flds
popf
sbb
stos
push
add
add
int
adc
popf
sbb
rcrl
add
sahf
in
pop
add
push
je
ljmp
xor
push
repz
pop
or
push
xchg
in
push
in
push
sahf
mov
xchg
sti
popf
inc
xor
int
cmp
dec
mov
movsb
xchg
rclb
push
sti
popa
push
jne
jmp
out
add
pop
jmp
popf
sbb
lods
movsb
or
pop
into
roll
xlat
jecxz
or
jp
mov
pusha
or
or
push
push
pop
or
jae
rclb
not
hlt
iret
or
dec
out
mov
imull
test
mov
pushl
divb
jecxz
incl
mov
shlb
divl
shll
add
jecxz
insb
adc
ret
pop
stos
add
enter
push
mov
adc
push
inc
fisubrs
test
push
test
into
push
add
flds
add
fisubrs
ret
jp
sti
jno
inc
je
add
ficomps
jnp
push
sar
add
xchg
lret
inc
cmp
jo
xor
jae
xor
shll
out
mov
ficomps
pop
add
test
sub
jae
add
xchg
loope
jmp
dec
cwtl
jns
cli
adc
rcrl
sub
inc
xor
outsb
divb
push
aas
cld
xchg
pushf
loopne
sbb
clc
roll
xchg
adc
ficomps
lcall
les
push
push
fwait
test
add
fldl
rorb
mov
subl
mov
cmc
popf
loope
mov
push
int
fsubrl
add
mov
xor
sub
xor
add
in
push
repz
fadds
and
fdivrs
inc
sub
stos
add
adc
ficoml
add
data16
pop
mov
loop
je
out
adc
xchg
adc
mov
jmp
mov
sbb
jp
call
fsubrl
sti
fdivl
aas
testl
test
xor
es
out
rorb
and
add
add
cmp
pop
and
pop
lret
pop
cmp
push
add
xchg
cmp
add
cmp
jne
jecxz
or
push
sti
test
pop
pop
mov
or
ljmp
clc
mov
adc
sti
shl
shlb
enter
mov
mov
in
cmp
mov
imul
push
lahf
push
dec
add
iret
push
call
mov
sub
pop
into
push
pop
add
icebp
push
insl
notl
sbb
out
cld
sub
push
cmp
out
flds
add
mov
leave
out
mov
add
mov
push
cld
das
inc
add
push
xor
fisubrs
js
arpl
mov
lahf
lret
out
movsb
sub
fsubl
enter
call
sub
jbe
xchg
jne
inc
ficoms
dec
dec
pop
adc
test
or
in
out
ficoms
jl
sub
lods
mov
and
dec
or
cmpsb
loop
sarl
xor
test
cs
xor
mov
adc
sub
sbb
push
loope
js
rolb
in
sti
mov
dec
movsb
sub
adc
sub
adc
add
test
jmp
popf
orl
or
in
repz
add
mov
je
mov
imul
add
aam
fcomps
mov
out
push
movaps
addl
cli
popf
adc
mov
push
rolb
jle
inc
xchg
sub
mov
outsb
dec
bound
mov
mov
jne
sbb
pop
lea
int
push
mov
inc
pop
nop
shlb
add
in
jb
call
loop
js
add
mov
leave
test
sti
push
cmp
sub
mov
jne
cld
pop
lea
in
loope
adc
xor
inc
pop
xor
inc
shr
mov
inc
loope
divb
mov
mov
xor
or
inc
add
inc
sbb
imull
and
jne
jl
call
dec
push
sub
add
jns
stc
cs
sete
pop
jne
cli
loope
pop
imul
or
mov
push
mov
fdivs
pushf
add
cmp
loopne
aam
cltd
jb
call
push
adc
dec
jae
outsb
dec
sub
add
int
sbb
push
gs
jle
cmpsb
clc
ljmp
dec
mov
scas
fprem
mov
daa
cmovle
test
adc
cmp
lock
mov
mov
add
push
imull
stc
lret
mov
addr16
jg
psrad
push
lcall
rol
dec
sub
xchg
shrb
cs
in
cltd
and
adc
sbb
je
jno
push
adc
filds
cld
cmovbe
add
pop
xchg
mov
jmp
rcrl
and
je
test
bound
repnz
faddl
sub
adc
or
jg
xchg
ret
adc
data16
xchg
lret
inc
sti
ficomps
jae
inc
adc
sub
or
insb
lahf
adc
call
insb
and
add
mov
push
or
in
or
shll
idiv
mov
rolb
outsb
adc
mov
add
or
lock
push
mov
jge
outsl
sub
mov
divl
mov
jmp
call
cmp
adc
push
push
xor
or
ss
lock
mov
mov
jmp
hlt
call
push
in
dec
mov
lea
out
rcrb
mov
mov
icebp
addl
cli
ljmp
mov
aas
or
fiadds
sub
fsubl
inc
data16
shl
mov
and
sbb
stc
jle
hlt
scas
pop
push
mov
jns
test
sti
or
movsb
mov
add
jne
jbe
add
xor
lods
cmp
jmp
add
stc
pop
add
adc
ljmp
daa
jns
xchg
mov
jne
gs
repnz
mov
pusha
dec
cltd
sti
das
shll
add
add
mov
fstpt
push
adc
arpl
shll
mov
and
rorl
repnz
mov
ret
icebp
xchg
sub
loopne
sub
xor
and
repz
mov
sub
int
lock
pop
loope
and
and
jno
add
jno
add
add
push
add
jmp
add
test
jle
xchg
sti
add
add
hlt
xchg
sbb
sub
mov
icebp
cs
lea
cmp
lcall
in
cli
es
or
sahf
adc
add
adc
div
std
add
test
fstl
push
je
icebp
out
les
jge
movsl
and
add
sbb
xor
xlat
out
mov
or
mov
sub
inc
dec
les
xlat
out
push
push
push
je
mov
testb
add
push
call
adc
das
jmp
xchg
mov
or
xlat
divb
xchg
ds
sub
cmc
inc
ucomiss
incb
call
mov
aaa
and
test
jne
fistps
das
pushl
stc
sbb
inc
fdivrp
aam
sub
dec
mov
mov
adc
or
andl
imul
icebp
dec
xchg
xchg
adc
in
mov
mov
sti
sbb
mov
or
or
push
lods
sbb
pop
stc
xchg
add
cwtl
adc
stc
mov
push
cmp
add
push
push
test
cmpsb
mov
out
scas
push
xchg
adc
mov
sbb
jo
rcrl
mov
or
push
in
mov
xchg
scas
and
jp
inc
jecxz
jmp
mov
iret
addb
orb
and
pop
mov
dec
lret
sub
outsb
cmp
jmp
ret
dec
push
js
inc
divl
fdivs
sub
stc
mov
and
dec
and
and
icebp
mov
stc
and
add
lods
cltd
add
add
fsubr
pop
cmp
lret
fnsave
shrb
imul
push
and
xor
pop
stos
daa
xchg
sahf
into
mov
pop
push
or
gs
jl
mov
add
dec
push
xchg
jne
int3
add
adc
jmp
jnp
jb
or
lds
popf
xor
sbb
dec
mov
incb
aas
mov
sub
xchg
sbb
testb
push
sti
dec
mov
je
xchg
fsubr
xorl
jnp
ja
push
lock
jmp
mov
xchg
inc
hlt
sub
push
ja
cmp
outsb
fwait
test
pop
jle
or
test
pop
test
or
xorl
ds
popf
add
daa
popa
add
rol
sub
xor
jnp
fimuls
jle
rcrl
scas
xchg
sti
add
xchg
test
pop
xor
xchg
cltd
fstpt
fistpl
add
repnz
shl
fs
sbb
fisubrs
sbb
out
mov
int3
adc
inc
outsb
aas
je
adc
jecxz
enter
aad
repz
in
aas
fisubrs
repz
sti
fstpt
daa
icebp
fsubl
sahf
adc
push
and
mov
sub
lds
mov
add
jmp
push
jno
jne
fstl
aaa
sbb
pop
rcr
jbe
xchg
daa
sbb
repnz
mov
sub
sbb
or
fldenv
popf
cmpsl
lahf
add
out
xchg
das
cld
pusha
adc
sbb
shl
jbe
xchg
cmpsl
sbb
or
mov
pusha
fnop
push
mov
or
arpl
das
add
adc
pop
push
std
scas
flds
je
pop
mov
shll
sti
cltd
movsl
xor
insl
sbb
push
sti
stos
dec
push
lea
iret
add
push
push
add
or
and
dec
sub
mov
ja
loop
inc
fisttpll
ds
inc
add
add
add
and
stos
inc
movsl
jno
ds
inc
add
mov
mov
aad
pushl
ljmp
pop
xlat
cli
incl
dec
or
fs
inc
repz
mov
dec
xor
and
push
adc
adc
sub
call
shlb
sarb
push
stc
dec
cltd
push
in
dec
lret
mov
mov
stc
mov
mov
mov
dec
out
fcomp
dec
inc
jmp
cmc
aam
test
imull
fldl
aas
mov
push
repnz
push
add
xor
in
nop
add
pop
mov
xor
sub
lock
sub
sarb
add
in
shlb
pop
adc
jg
das
xchg
push
sarl
xchg
cmp
pop
sti
popa
outsb
aas
je
cmp
cmp
jnp
icebp
cmc
jp
sub
jmp
outsb
std
adc
fdivrl
xchg
cmp
xchg
ficoml
push
mov
outsb
inc
mov
and
sbb
sub
add
inc
sub
mov
outsb
adc
icebp
mov
push
icebp
sub
pop
ror
xchg
and
xchg
ret
div
inc
adc
or
in
jo
and
fimuls
call
fdivl
addb
in
add
cmp
outsb
ljmp
sti
jle
add
adc
pop
dec
or
inc
sti
sub
xor
cli
cli
ss
or
cltd
or
movsb
jmp
or
mull
jb
xchg
mov
out
jae
mov
mov
idiv
test
stc
cs
loop
movl
test
sbb
push
inc
movsl
lea
push
add
pusha
xchg
ret
sbb
sub
inc
aaa
adc
jne
sub
pop
adc
or
push
sti
inc
scas
sub
sbb
mov
lods
call
out
bound
xchg
test
imul
add
sar
test
mov
inc
mov
push
decb
nop
mov
inc
hlt
xlat
xchg
xchg
and
repnz
or
nop
mov
jne
mov
push
xor
xchg
setle
jg
stos
fcoml
jne
jbe
pop
in
cmpsl
jle
arpl
aaa
or
add
fiadds
push
xchg
sub
in
das
mov
mov
sar
mov
add
sub
adc
arpl
and
push
ljmp
and
jg
ljmp
xchg
adc
je
push
popa
lcall
xchg
push
or
test
fldl
orl
push
adc
push
mov
and
jnp
jmp
jp
push
rorb
lods
add
repz
fcoms
push
or
in
mov
sti
gs
shrd
fidivrs
sub
sbb
popf
push
sub
mov
add
pop
push
adc
jmp
ficompl
jmp
sub
sti
fstps
sti
ds
xchg
loopne
jmp
add
adc
loope
ljmp
xor
fs
sti
lahf
inc
fists
pop
or
cwtl
sub
adc
roll
adc
and
repnz
fstl
bound
ljmp
and
out
cli
cli
insl
sbb
call
add
xor
mov
sbbb
inc
ja
je
add
sub
inc
inc
push
pop
mov
sti
inc
aaa
cmpsb
out
add
adc
cmp
cld
ret
pop
pop
jne
cli
push
leave
or
inc
pop
lods
cmc
adc
sbb
xor
inc
pop
pushf
cltd
in
hlt
mov
cli
call
dec
cmp
je
insl
and
je
adc
pushl
in
orl
add
imul
andl
add
fidivs
mov
gs
cld
test
cmpb
out
out
scas
push
sti
pop
cmpsl
incb
push
sub
cmp
loope
push
add
out
repz
add
repz
icebp
aas
fmulp
cmpl
fsubp
mov
push
add
sub
in
call
pushl
jae
push
fimuls
and
insb
inc
je
insl
cwtl
and
inc
addr16
adc
sbb
mov
adc
or
add
call
xchg
popa
push
jmp
jle
clc
sti
pop
fcoms
mov
ds
std
dec
sbb
test
popa
adc
add
xchg
rcll
add
xchg
sub
pusha
sarb
adc
xchg
adc
push
and
popf
and
add
adc
cwtl
cmp
sbbb
add
cli
adc
mov
add
push
push
fisubrl
cmpsb
xor
cmp
mov
insl
loop
add
fistpll
call
dec
cli
adc
add
add
sub
hlt
bound
icebp
dec
or
pop
push
add
bound
std
adc
mov
mov
add
push
push
ds
cli
ss
sti
adc
enter
pop
xchg
mov
jmp
xor
dec
mov
cmp
cld
add
jge
sbb
andb
shrb
add
sahf
nop
incl
mov
pushl
cmc
add
idivl
xor
jne
add
cmc
adc
mov
scas
add
pop
or
sbb
je
jae
jmp
xchg
cmc
push
sbb
and
mov
mov
cmpl
divb
hlt
add
dec
fdivp
ds
add
call
out
repz
xor
aaa
cld
xchg
out
cli
repz
pop
je
ss
pop
call
or
mov
leave
pop
mov
mov
loop
mov
xor
sub
shr
shl
aas
decb
imul
add
pop
cmpl
inc
hlt
jno
pop
add
add
cs
push
push
insb
shll
mov
fsts
insl
inc
ficoms
jmp
xchg
mov
mov
add
outsl
cmp
repnz
adc
decl
lret
add
mov
ret
inc
mov
mov
stos
inc
popf
repz
ret
jns
in
roll
mov
cld
ret
or
jno
pop
add
cmp
arpl
xchg
pop
sub
jge
add
out
mov
or
xor
sbb
pop
rclb
loopne
dec
or
jge
fisubrl
xchg
mov
ljmp
int
test
add
outsb
add
jbe
inc
loope
jge
cmpsb
frstor
cmp
add
push
imul
ljmp
add
pop
pop
mov
cmpsl
in
xchg
push
push
insb
and
dec
cmpl
fildl
jmp
aad
push
pop
and
dec
add
push
call
andl
mov
ret
orl
push
push
div
adc
in
cld
cmc
jne
jg
adc
cmp
sldt
adc
addl
adc
add
pop
lea
jae
mov
adc
js
testl
jns
or
xor
mov
push
add
iret
mov
or
lret
cli
add
push
aad
push
pop
fidivs
inc
or
xchg
std
out
xor
and
call
add
jae
mov
pop
stc
out
xchg
mov
pop
orl
and
xchg
fsubp
mov
out
jmp
loopne
jbe
dec
cli
popa
lret
gs
cli
lret
jmp
shll
mov
cmp
sarl
xchg
lahf
scas
repnz
inc
mov
out
adc
mov
jno
sarb
movsb
ffreep
bsr
fs
xchg
sub
pop
sub
fisubs
sub
or
fs
adc
add
sahf
fs
adc
add
sahf
movsb
clc
loope
jns
sbb
mov
in
adc
out
rcr
cld
out
int
pop
push
mov
loope
ficomps
adc
add
adc
adc
decl
push
shl
adc
mov
xor
jmp
imul
adc
cli
xchg
out
push
xor
rorb
insl
jl
cli
loop,pn
sti
es
jmp
imul
mov
adc
inc
add
lret
fs
imul
gs
imul
insl
mov
jmp
inc
dec
pushf
jnp
xor
fsubs
jmp
loope
bound
mov
add
adc
call
jl
mov
or
pop
adc
pop
sub
push
xchg
and
adc
push
pop
jmp
lock
add
add
loop
inc
stos
cli
cmc
jne
movsl
cmc
jo
or
fdivl
xorl
mov
add
outsl
out
rsm
push
push
pop
in
imul
jne
cli
push
lods
add
add
fisubrs
scas
push
push
inc
aas
std
sbb
or
and
jo
out
addr16
mov
jo
sti
add
cmp
lds
into
mov
push
scas
out
xchg
lcall
mov
test
add
push
idiv
cli
or
js
mov
mov
pop
jb
test
lea
or
popa
daa
jns
push
pop
sbb
mov
sub
cli
lret
mov
xchg
lret
gs
push
mov
pop
shll
in
outsl
test
push
dec
jne
mov
cmp
adc
cltd
leave
xchg
fisttps
in
pop
mov
lods
arpl
int
loope
mulb
push
sbb
in
pop
aas
push
sahf
mov
repnz
adc
andb
clc
sbb
int
and
jmp
or
add
cmpsl
lret
adc
bound
sahf
mov
inc
push
inc
adc
inc
pop
xor
stos
gs
ja
push
aad
add
test
jmp
pop
xchg
sub
sbb
pushf
push
std
orb
cli
jmp
pop
adc
jmp
lods
cmove
jo
adc
mov
add
sbb
jmp
gs
add
aad
call
insb
sbb
adc
xlat
push
add
aaa
push
cli
ljmp
jl
int
mov
lahf
dec
push
in
cmc
adc
sbb
jbe
jp
inc
fcom
xlat
push
repz
and
mov
xchg
jp
stos
mov
das
fadds
imul
adc
cmp
cltd
add
mov
mov
cli
imul
cli
test
stos
add
push
aaa
mov
lret
out
push
add
pop
std
dec
cld
popf
idiv
push
mov
inc
fsubs
aaa
add
sbb
ds
sahf
idivl
dec
insb
sar
in
jmp
add
jp
sti
pop
cmp
cld
popf
idiv
shl
add
fdivrp
lods
cli
repz
aas
fmulp
jl
and
cwtl
cmp
add
fimuls
ljmp
je
je
jge
push
mov
sub
push
clc
jns
repnz
jg
adc
add
or
add
or
inc
ficomps
cmp
popa
pop
add
add
add
sti
ret
imul
pop
cld
gs
dec
jmp
ss
enter
inc
push
push
test
pop
sub
js
clc
push
les
sub
into
jecxz
mov
jmp
rcll
insl
cwtl
inc
pop
jns
stc
mov
call
add
adc
sbb
or
insl
sti
lret
or
and
inc
xchg
fcoml
out
jmp
adc
jmp
stc
fcompl
xchg
negb
cmc
pop
shl
divb
cli
push
jl
mov
push
cld
inc
in
adc
jmp
pop
mov
call
pop
jbe
cld
es
cmp
fsubr
mov
pop
add
and
and
adc
add
adc
xorb
imul
or
clc
rcrb
incl
enter
inc
dec
lret
lret
add
pusha
or
test
adc
jmp
xchg
or
adc
call
insb
pop
or
movsb
xchg
or
xor
imul
mov
idiv
ss
mov
outsb
add
bound
pop
xchg
divb
pop
fidivs
gs
mov
sti
rcrl
jle
stc
jno
pop
xor
mov
xchg
gs
mov
cs
stc
je
jo
add
testl
aas
xchg
in
call
gs
mov
pop
inc
les
repz
add
lock
cli
leave
popa
xlat
ss
hlt
jb
adc
cmp
divl
add
cmp
xchg
in
add
push
mov
pusha
and
xor
loope
pushf
mov
hlt
xor
ficoms
ss
lods
xchg
pushf
sub
add
inc
xchg
and
fiaddl
jns
cltd
mov
jmp
sub
out
aas
incl
leave
xor
cmpl
inc
fiadds
dec
mov
xor
addb
add
fistpl
arpl
adc
xchg
lods
daa
loop
insb
dec
add
and
mov
enter
imul
pop
test
adc
ret
test
add
sub
push
sub
fs
sbb
xchg
xor
fstl
ret
add
call
mov
adc
add
cltd
jae
shll
xlat
insb
popa
xor
call
mov
sub
push
xchg
push
fs
and
add
jae
enter
add
xchg
rorb
int
idiv
sub
or
les
mov
jge
add
push
or
arpl
lea
xchg
adc
pop
repnz
jmp
ret
push
mov
dec
ret
push
test
rolb
jnp
jnp
jne
add
call
insb
lret
xchg
idiv
aaa
fdivp
cs
mov
mov
adc
inc
mov
push
cli
mov
jl
xchg
cld
stos
add
loopne
dec
subl
shr
call
adc
xor
imull
call
or
pop
pop
pop
mov
add
mov
in
decl
dec
cld
cli
adc
int
jnp
jg
mov
out
andl
in
decl
xchg
and
mov
jmp
add
xchg
lods
daa
ljmp
adc
aad
outsb
out
iret
in
sub
jg
test
jmp
sub
add
cmc
push
add
add
loope
dec
mov
jno
push
test
clc
shr
jno
ja
pop
mov
mov
loope
addr16
push
jmp
in
negl
jmp
int
or
push
popa
hlt
pop
push
mov
add
dec
add
loope
jmp
aad
out
insb
int3
fs
pop
frstor
dec
adc
movsl
xchg
mull
add
jmp
daa
lret
push
in
jle
in
dec
je
jbe
adcl
rorb
mov
jbe
inc
fcmovnu
je
inc
ret
xor
mov
ret
je
test
call
add
cli
adc
xchg
xlat
add
xor
pop
mov
dec
out
cltd
insl
and
add
fidivl
xor
je
ja
jnp
mov
inc
cld
push
insl
pop
call
cmp
xor
fildll
in
xor
inc
repz
repnz
push
bound
inc
dec
ljmp
add
lahf
push
push
das
push
add
lcall
decl
mov
adcl
jnp
das
adc
xor
jne
xchg
inc
fsts
insb
or
addl
lods
pop
lea
add
pop
add
sysexit
shl
sti
cli
fldenv
ret
push
decl
inc
je
cli
ret
mov
inc
ficoml
adc
jle
int3
mov
xor
sub
push
or
add
fisubs
push
add
imulb
jp
shll
lcall
mov
mov
dec
add
sbb
iret
out
xor
mov
mov
out
adc
clc
adc
test
loopne
sbbl
mov
in
push
pop
test
rcrb
push
outsl
out
sbb
outsb
fcoml
pop
fbld
shl
les
cmp
mov
add
xchg
sub
ficoms
clc
or
add
add
add
subl
fcomip
push
mov
or
push
jmp
mov
sbb
scas
aad
je
add
hlt
jl
or
mov
hlt
push
sub
sub
mov
gs
push
insb
pop
push
fdivr
jmp
add
fdivr
imul
gs
lret
xor
repnz
lods
gs
and
lret
sti
jl
lea
lods
xlat
adc
loopne
add
or
cmpsb
aad
testl
adcl
xor
adc
pop
dec
sar
inc
xchg
sub
add
pusha
xor
add
jecxz
or
popa
or
xor
loopne
mulb
sub
cwtl
mov
add
adc
mov
call
or
punpckhbw
out
stc
push
roll
add
out
push
dec
lea
inc
push
incl
cmc
cli
xor
test
and
movsl
gs
ja
repz
fdiv
imul
out
incb
idivb
mov
ljmp
addr16
out
push
sub
addr16
mov
jo
dec
push
xor
out
out
pop
cli
push
int3
daa
jmp
jns
xchg
xchg
mov
jbe
xor
add
insl
shl
adc
mov
call
jmp
fmul
hlt
xchg
cmp
pop
push
in
pop
dec
lods
mov
clc
mov
adc
mov
xchg
xchg
outsl
mov
mov
add
sbb
jno
mov
fst
or
loope
fiadds
push
jo
adc
xor
adc
push
add
pop
int
fidivrs
insb
ret
in
and
add
xchg
hlt
in
xor
roll
cs
inc
fs
sbb
and
lcall
rorl
cli
mov
stc
sub
jmp
stos
adc
ficoml
add
sbb
aad
daa
cltd
aaa
mov
test
inc
push
pop
daa
aad
roll
addr16
jmp
lods
pop
fs
sbb
pop
aad
add
pop
ds
int
fistps
jne
adc
xchg
out
pop
mov
ja
sub
inc
xchg
mov
in
jbe
dec
cli
loopne
push
mov
stc
adc
or
lods
dec
cld
push
pop
lret
fiaddl
jne
pop
or
add
or
adc
rol
mov
in
inc
lock
xor
or
test
dec
je
mov
cmp
dec
ljmp
loop
xchg
adc
mov
mov
jne
sbb
bound
out
in
cli
adc
setl
jmp
push
jmp
add
stos
pop
add
jnp
push
cli
in
jb
gs
ss
adc
pop
icebp
push
jne
icebp
dec
add
cmp
je
sub
in
lods
test
add
pop
lock
fisubs
add
xor
jae
add
lcall
cmp
adc
in
xor
jne
pushf
pop
push
pop
icebp
test
arpl
push
jbe
mov
fiadds
int
push
pop
lds
scas
aad
pop
in
push
jmp
push
fucompp
cli
jl
or
aas
psrlw
leave
adc
xchg
in
push
ljmp
stc
inc
in
push
cmc
pop
lds
aad
pop
int3
push
jmp
push
fimull
sub
adc
loop
test
pop
add
adc
fisubl
in
fnstsw
xchg
fldenv
rclb
inc
sti
pushf
jne
lret
fsqrt
push
loop
mov
icebp
jl
rolb
inc
push
out
insb
push
sub
lea
pop
cmp
daa
mov
bound
ljmp
sti
aam
add
loop
add
mov
cmp
or
mov
fst
dec
in
or
add
out
push
bound
out
fcomps
rcrl
dec
movups
push
outsl
fmuls
lea
dec
push
inc
call
addl
test
shrb
inc
dec
inc
lea
aas
addl
sub
xor
inc
aaa
repnz
rorb
addl
cld
xor
xchg
mov
clc
mov
call
test
push
add
add
push
cmp
pop
pushl
pop
dec
push
mov
test
sbb
sub
adc
jg
add
mov
jb
in
or
push
mov
sub
pop
out
xchg
in
fsts
in
or
movsl
dec
mov
xchg
pop
push
call
lods
scas
sub
dec
in
jnp
sub
sahf
adc
mov
enter
mov
loop
or
ljmp
or
add
cmp
js
cld
jae
jne
mov
jne
fs
push
adc
rcll
arpl
leave
push
scas
jne
pop
loope
sti
pusha
mov
in
je
adc
insb
enter
lret
pop
aas
ret
mov
xchg
xor
lahf
ja
cwtl
mov
in
sbb
sbb
add
loope
inc
hlt
add
mov
fsub
xchg
push
jmp
xor
sub
out
pop
das
add
ss
xor
mov
popf
ficoms
jmp
adc
push
bound
pop
je
pusha
sar
xor
or
insb
or
or
add
mov
ret
and
add
pop
xchg
fistps
test
pop
inc
sti
sbbb
enter
aaa
incl
jne
mov
xchg
mov
movl
dec
add
test
aaa
inc
stos
shlb
jle
and
dec
into
jg
fwait
int3
cmc
jmp
cmp
lahf
arpl
pop
mov
add
bound
aad
in
xor
xchg
rcrl
lds
jg
in
push
lea
push
test
incl
cmp
adc
fisubs
add
cmp
add
inc
xor
xor
jae
xor
and
ret
mov
pusha
cld
fimuls
lret
test
mov
xchg
jae
out
lods
adc
lahf
jg
ljmp
std
sbb
jne
jbe
icebp
lret
ret
fdivl
inc
inc
inc
incl
pop
sub
popa
addr16
les
xor
mov
jnp
pushl
jo
add
adc
outsl
ljmp
jg
inc
in
test
push
jne
andb
xchg
das
outsl
fiaddl
sub
add
into
mov
test
push
sub
fdivs
push
jbe
adc
fs
sub
push
outsl
fisttpl
mov
push
push
loope
shlb
and
stos
out
ror
rcl
gs
fwait
addr16
ficoms
outsb
dec
fwait
ljmp
add
scas
push
lret
jp
loop
cli
sahf
mov
xchg
jmp
add
inc
test
or
dec
rcll
sbb
dec
lret
popf
inc
dec
insb
lock
mov
lret
add
sub
mov
inc
xor
loopne
inc
sub
push
lea
adc
imul
pushf
inc
loope
xchg
inc
in
mov
xchg
inc
mov
insb
cmp
sbb
mov
add
push
leave
ret
adcl
inc
jecxz
push
call
lock
dec
mov
dec
and
dec
aas
and
pusha
divl
addl
cmc
ret
jb
out
data16
jnp
xchg
mov
adc
jg
inc
orl
call
mov
xchg
sarl
js
add
loope
les
clc
add
push
testl
add
adc
mov
cld
fdivl
lods
xlat
rolb
add
mov
xor
mov
das
sti
jae
jne
into
jb
or
cmc
jmp
adc
lcall
loope
jo
pop
vcvtsd2si
loop
mov
jle
fidivrs
mov
jne
mov
in
je
jnp
inc
or
out
out
mov
jmp
mov
out
outsl
add
push
insl
xchg
mov
sarl
loop
mov
ljmp
adc
addl
add
xchg
lea
xchg
popf
in
lret
xlat
xchg
aas
aad
push
ja
leave
nop
xchg
clc
adc
jg
jns
mov
sub
shl
pop
push
push
jns
mov
insl
hlt
pop
lret
mov
push
pop
dec
sub
andl
mov
ficoms
pop
mov
loope
inc
push
adc
ss
dec
mov
movsb
inc
xchg
dec
icebp
movsb
adc
test
mov
hlt
shufps
mov
mov
push
xchg
inc
sub
add
dec
push
das
mov
lds
in
lret
fstl
inc
and
jb
push
mov
sub
pop
call
sub
pusha
push
fiadds
or
push
je
push
jle
pop
rcll
add
ret
mov
pop
call
jnp
incl
cltd
sbb
scas
fildl
stc
leave
xor
pshufw
dec
pop
sbb
add
add
movsl
mov
pop
fisttpl
flds
cltd
xchg
inc
or
or
add
idiv
add
inc
inc
or
cmp
mov
sbb
inc
xchg
pop
rorb
ss
add
xor
ljmp
jp
fsubrs
push
andnps
repz
sbb
or
popf
and
hlt
xchg
mov
push
push
leave
inc
aas
movsl
rcll
in
and
mov
rorb
pop
pop
mov
in
push
push
pop
sub
mov
push
add
or
sti
sbb
les
mov
fsubs
loop
or
or
add
fwait
stos
or
xor
push
out
cltd
fisttpl
fucomi
xchg
mov
push
std
lea
cwtl
sub
rcll
adc
call
loope
dec
leave
add
adc
mov
or
push
outsb
pop
repnz
sbb
pusha
fs
lea
push
leave
rorb
adc
lea
pop
aas
stos
or
sbb
rsm
sbb
and
aad
or
fcoml
cmp
addr16
add
pop
inc
loopne
lcall
aaa
movsb
jne
ljmp
cmp
adc
xchg
std
je
cltd
jns
je
dec
add
push
clc
adc
jo,pt
lods
xchg
out
push
roll
pop
gs
sub
stos
mov
into
jns
repnz
dec
or
lods
mov
scas
add
fisttpll
in
xchg
dec
jmp
mov
fisttpl
push
std
ret
outsb
ja
cli
jmp
sub
or
adcb
inc
std
push
clc
rcl
add
iret
adc
clc
leave
divl
mov
lret
orb
xor
push
hlt
mov
jl
ret
stos
push
adcl
dec
clc
hlt
jnp
push
push
cltd
push
fdivrl
loopne
or
jns
jae
outsb
adc
or
mov
adc
pop
mov
and
cli
mov
cmp
adc
jb
decl
dec
hlt
ficomps
push
rorb
or
inc
xchg
push
adc
mov
or
imul
add
inc
ljmp
xchg
inc
or
sbb
sti
in
jns
hlt
mov
jmp
add
xchg
dec
sbb
and
adc
addb
out
aam
and
decb
sahf
inc
dec
call
add
push
jno
mov
adc
repz
dec
sub
xchg
je
ficoms
push
ret
sbb
push
and
mov
pop
sub
cwtl
mov
sbb
inc
out
lcall
push
adc
or
ret
pop
fadds
rcr
jae
fcomps
in
add
pcmpgtd
adc
dec
stos
add
push
mov
inc
mov
add
sbb
add
and
add
dec
push
lods
call
fmuls
test
xlat
dec
sti
mov
ja
jg
cmp
dec
cld
jmp
cwtl
sbb
loopne
cltd
fdivr
movsb
add
add
xchg
inc
rcr
into
inc
mov
out
loopne
ljmp
ret
inc
push
pop
sti
imul
push
je
out
les
lds
std
add
dec
les
arpl
add
or
jnp
ja
std
jae
lea
xchg
xor
pop
sbb
dec
xchg
std
xchg
mov
push
in
dec
jecxz
xor
mov
xor
lea
adc
jne
in
fdivl
pop
hlt
push
xor
call
add
add
push
divl
adc
jae
shlb
lock
sbb
rcr
mov
inc
std
data16
aad
dec
inc
xlat
cli
push
cmc
pop
dec
cltd
incb
fwait
jp
xor
mov
inc
in
into
inc
inc
in
pop
int
shld
push
sbb
pop
sub
out
inc
inc
call
add
xchg
cli
xor
xchg
test
mov
or
jecxz
lods
pop
das
das
sub
xlat
inc
int
mov
xor
addr16
sbb
fimuls
add
icebp
mov
xor
sbb
test
cwtl
packssdw
adc
mov
mov
xor
or
push
adc
fidivrl
adc
add
outsl
cmp
push
inc
add
adc
mov
mov
dec
dec
mov
mov
inc
pop
cmp
xor
xchg
movd
ss
add
cmp
shll
add
lods
mov
pop
jge
sub
jge
fidivrl
or
adc
add
mov
popa
sbb
lcall
repnz
adc
xor
dec
in
add
mov
mov
arpl
bound
test
fsubrs
jbe
ss
add
dec
add
mov
cmp
push
jecxz
dec
in
push
gs
inc
gs
add
xor
clc
mov
inc
imul
or
adc
push
aaa
aas
ss
add
mov
fdivrs
mov
fadd
rclb
mov
or
add
xchg
mov
flds
jge
mov
int3
push
cld
add
mov
mov
fucom
sbb
push
cld
jmp
xchg
jnp
or
mov
mov
mov
scas
std
rolb
adc
push
xchg
inc
clc
fistps
xchg
jb
dec
mov
ret
cmpsb
xchg
inc
cld
loope
cmp
test
hlt
jecxz
cmpsb
test
inc
adc
sub
xchg
dec
fsubl
test
or
cs
dec
rcll
jg
scas
ds
or
repnz
xchg
xor
gs
xchg
xor
cmc
int
mov
mov
xchg
sbbb
mov
call
cld
adc
add
mov
leave
mov
mov
jge
xor
idivl
add
out
mov
int
add
movsl
imul
mov
add
push
mov
leave
or
inc
xchg
mov
rcrl
icebp
xor
and
lret
jmp
test
mov
decl
test
mov
jge
mov
ret
mov
pop
aam
mov
adc
and
adc
sbb
mov
punpcklbw
fisttpll
loop,pt
aaa
and
inc
add
rcrl
in
sbb
xchg
inc
push
adc
fs
push
loopne
jp
inc
inc
push
push
les
mov
fdivrl
jge
loop
inc
and
jnp
shr
push
call
jbe
adc
scas
push
out
add
push
jmp
adcb
outsb
push
cltd
pop
inc
shrb
decb
outsl
add
mov
push
xchg
mov
xchg
add
lea
add
std
jae
xchg
jnp
xchg
data16
ljmp
into
adc
mov
mov
iret
mov
mov
std
rcrl
add
push
pop
or
jmp
cld
cli
xchg
ja
add
ficompl
stc
pop
lods
cli
imul
sti
jae
jns
dec
and
pop
fcomp
push
inc
in
add
sbb
sar
sub
push
add
testb
xchg
jne
mov
jnp
shrb
sar
fwait
jp
sub
insb
sub
out
xor
pop
jne
syscall
adc
xor
gs
inc
and
cmp
xchg
in
rcll
lea
popa
iret
inc
mov
add
gs
arpl
cmp
add
cmp
mov
mov
xor
ljmp
inc
loope
adc
sub
pop
jne
cwtl
pop
pop
sbb
jmp
xor
inc
add
aad
incb
pop
gs
adc
jmp
or
adc
jmp
add
inc
fdivs
mov
inc
bound
inc
adc
dec
loope
add
pop
in
aaa
dec
repnz
ss
je
push
xor
ss
xor
jle
lcall
or
pop
sub
adc
dec
pushl
outsl
xchg
cltd
dec
pop
roll
add
xor
add
std
jmp
jb
and
xor
in
add
jne
repnz
js
mov
push
mov
xlat
mov
jp
sbb
lea
pop
sti
mov
or
push
repz
add
jbe
add
sar
loop
jne
sub
testl
add
xor
cmc
cs
enter
lds
mov
stos
pop
xchg
push
ror
sahf
dec
add
fstpl
ja
adc
dec
in
insb
mov
push
push
ss
cmp
fstpl
jbe
xor
in
pushf
out
inc
inc
cld
add
fstl
push
cld
fildl
add
cmpsb
mov
or
aaa
sbb
repz
and
dec
das
inc
clc
in
mov
cld
gs
cmp
ds
mov
cli
int
aaa
add
jae
movsb
jecxz
mull
int
mov
dec
loop
mov
movsb
push
mov
adc
test
cmp
gs
xchg
xor
shll
fnstcw
mov
add
lret
in
sarb
dec
in
jo
mov
rorl
add
adc
sbb
divps
fiaddl
xchg
or
adc
jmp
sahf
stos
jno
lds
ret
pop
ljmp
outsl
cmpsb
mov
shlb
cmp
notb
call
pop
out
cli
xchg
or
mov
and
inc
cmc
pop
sub
jmp
pop
sub
jmp
pop
lock
push
inc
cmpsl
fistl
mov
mov
dec
aam
and
add
mov
mov
lcall
dec
fmuls
add
fcoms
adcl
inc
adc
inc
dec
fdivl
lds
adc
roll
sti
or
enter
inc
out
addl
inc
loopne
mov
inc
mov
or
fadds
or
inc
cmp
addb
mov
cmp
shrl
adc
xlat
or
call
fisubs
les
jg
fisubl
dec
pmaxub
jg
mov
js
repnz
adc
movsb
add
push
call
inc
sbb
ds
dec
call
in
std
pop
arpl
and
pop
jmp
out
roll
rolb
mov
ficoml
push
stos
call
je
outsl
push
hlt
cs
lock
enter
out
pop
rcll
push
movsl
es
sti
insb
pop
or
sub
sti
mov
sbb
je
mov
lret
fs
mov
xor
cmp
push
cwtl
psubsw
cmp
gs
inc
add
add
xchg
xorl
pushf
mov
adc
gs
testb
inc
notb
sub
scas
xor
dec
mov
jg
fwait
and
adc
fld
xchg
dec
aas
xor
adc
push
sbb
adc
ret
icebp
push
adc
sbb
shl
mov
push
inc
call
sbb
xor
rorb
fstpt
inc
adc
hlt
push
ljmp
ja
imul
mov
aaa
sbb
pop
inc
test
insl
pushl
idivl
jecxz
adc
or
lds
mov
imul
mov
sbb
jge
out
mov
test
inc
or
out
rdtsc
inc
idiv
add
push
mov
ljmp
mov
test
mov
scas
jns
inc
in
xor
lret
repnz
pushl
test
xor
sbb
sbb
inc
adc
mov
adc
iret
cmp
pusha
mov
pop
add
cmpsl
lods
sarb
ret
mov
xchg
sub
popa
addl
xchg
jbe
mov
mov
add
imul
push
xchg
mov
jp
mov
popa
pop
adc
fdivs
dec
incb
sub
mov
or
stos
pushf
and
call
data16
mov
and
cmc
std
divl
mov
and
hlt
xor
xor
hlt
js
dec
les
fnstcw
push
incb
mov
jg
mov
add
ficoms
ljmp
sbb
mov
sahf
sbb
les
lods
in
cmpsl
jge
test
in
cmpsb
adc
in
mov
xchg
cmpsl
cwtl
sub
add
call
inc
xor
jns
loope
int
and
and
add
ficoms
inc
add
xor
rcr
les
mull
add
faddl
add
andb
jmp
sbb
sbb
ficoml
adc
imul
mov
fstl
xchg
ret
xchg
mov
adc
adc
lods
stos
out
jo
roll
mov
mov
mov
in
shll
xor
add
fstl
xor
fstl
xchg
in
or
adc
jmp
into
mov
add
mov
xchg
es
insb
add
cmp
pop
or
xor
sbb
jbe
in
add
push
pop
mov
clc
dec
imul
xor
dec
add
arpl
add
adc
or
sti
lret
or
addl
call
fsubr
jmp
aam
test
add
mov
jb
mov
pusha
shl
pusha
mov
cmpsl
pop
xchg
mov
pop
xchg
mov
mov
mov
pop
rcrl
push
and
or
aaa
add
loope
dec
call
jo
xlat
dec
loope
cmp
push
lods
push
dec
or
ss
repnz
xlat
dec
imul
ret
je
cs
test
dec
cli
xor
cs
xor
mov
lea
std
out
adc
xor
les
dec
push
xchg
mov
jge
test
imul
sbb
lret
shlb
call
sbb
and
pop
inc
popf
lods
je
mov
pop
xor
mov
addb
enter
sbb
cmc
push
gs
icebp
sub
pop
aam
sub
fldt
pop
shll
sbb
sbb
in
adc
and
ficoml
out
adc
shl
fstl
xchg
inc
cmpsb
sub
mov
adc
sbb
test
clc
jb
in
add
movsl
test
mov
mov
push
ds
dec
data16
fsubr
in
sbb
xchg
jne
inc
jmp
int3
mov
fstl
jg
in
mov
testl
ds
pop
testl
sub
pop
mov
sbb
inc
rclb
in
push
add
pop
mov
jae
push
adc
dec
dec
or
jne
jmp
add
rolb
cmovae
add
mov
jnp
rcll
dec
or
shl
add
pop
xor
ror
scas
inc
lcall
hlt
insb
testb
xchg
cmp
and
mov
pop
inc
and
outsb
in
mov
xchg
mov
fistpll
dec
ja
jg
test
adc
sbb
add
inc
fwait
lahf
sahf
jmp
push
add
faddp
sbb
pop
xor
fmulp
inc
and
cli
fidivs
ficomps
es
inc
or
sar
sbb
daa
push
xor
inc
clc
jbe
sar
adc
inc
insb
dec
push
inc
pop
inc
push
mov
into
adc
test
mov
pop
dec
out
cwtl
stos
inc
in
mov
nopl
add
jl
push
push
loopne
ficoms
je
in
stc
mov
loope
jmp
les
stos
dec
mov
adc
es
add
add
mov
jbe
lock
fistpll
lahf
inc
sbb
cmpsl
iret
in
frstor
cli
cld
cmp
jmp
out
pop
frstor
pop
jmp
jne
pop
jmp
inc
pop
jmp
ljmp
cwtl
xchg
cmpsl
je
xor
arpl
popf
adc
out
mov
test
adc
test
flds
call
int
test
jne
ror
or
jo
movsl
gs
dec
cld
cmp
or
pusha
mov
je
cmp
jae
scas
cs
mov
mov
jmp
mov
add
dec
xchg
out
mov
sbbl
dec
mov
bound
dec
nop
inc
idivl
call
test
adc
add
ficoml
add
cmp
cmc
test
test
enter
mov
aad
mov
outsl
cs
jo
mov
add
mov
inc
test
movsl
mov
mov
fistl
cs
jl
fidivs
or
sarl
and
pop
stos
jae
fcomi
mov
add
adc
orl
ss
fisubs
mov
jge
mov
mov
in
push
outsl
xchg
lahf
int
cmpl
sbb
cli
fidivs
mov
fld
push
or
mov
jbe
test
loope
xorb
adc
subb
imul
mov
adc
fstl
jmp
add
lods
add
icebp
mov
int
mov
loope
jmp
add
loop
and
icebp
jg
pop
jmp
and
inc
je
mov
leave
ljmp
or
iret
add
je
inc
fwait
xchg
lahf
adc
jmp
iret
xor
sub
or
pop
filds
iret
sbb
pop
call
jl
jb
push
or
pop
bound
inc
sbb
sbb
mov
adc
jmp
lret
jb
shl
fsts
push
pop
jmp
shl
icebp
fcom
mov
dec
adc
dec
add
push
mov
add
or
ret
ss
test
mov
inc
divl
imul
pop
and
inc
adc
pushl
jae
jne
imul
pop
or
aaa
adc
add
sbb
add
adc
inc
add
cmc
push
inc
mov
mov
cmc
xlat
adc
faddp
dec
push
mov
and
clc
push
in
jle
pusha
add
pusha
addl
push
push
in
or
stos
pop
fwait
xchg
mov
test
test
lcall
notb
sahf
cmpsl
icebp
dec
add
sti
cmp
xor
ficomps
sub
sub
mov
mov
or
scas
xchg
mov
sbb
fidivs
jae
sub
call
push
insl
mov
xor
adc
inc
adc
xor
aaa
cmp
adc
or
cmp
rcl
cwtl
lods
popf
mov
xchg
popf
fnstcw
adc
add
jmp
add
cwtl
out
rorl
fisubl
mov
push
xchg
jns
pop
int
cmp
ds
pop
mov
mov
push
pop
out
ds
and
mov
or
adc
cmc
add
push
in
push
gs
pop
jmp
mov
mov
pop
test
add
push
sti
push
pushf
or
adc
jmp
lahf
sahf
cli
jmp
fists
add
loope
int3
call
fnstcw
call
jb
add
cmc
push
jae
fnsave
lcall
orb
sar
ds
pop
or
adc
jmp
loop
add
lahf
aam
add
sar
push
pop
pop
or
jnp
add
testl
cli
mov
roll
andl
pop
shl
push
mov
psubq
adc
jae
test
cli
dec
push
outsl
sbb
jae
jmp
bound
xor
add
jae
les
dec
call
add
xchg
outsl
dec
outsl
sbb
test
scas
dec
neg
mov
or
ficoms
sbb
sbb
mov
fisubs
add
test
test
mov
loope
cmp
add
sbb
and
cmp
ja
add
popa
push
cmp
fs
mov
sub
pushl
daa
mov
inc
psubusw
mov
jle
cmpsb
cmpsl
or
lock
dec
in
adc
push
dec
mov
fstps
sbb
push
xor
xchg
pop
xor
sahf
inc
data16
rorl
lret
add
iret
pop
cmpl
cwtl
mov
adc
out
cltd
and
lock
cmpl
push
jns
mov
es
daa
adc
add
cmp
add
lds
adc
jmp
pusha
push
lock
inc
orl
fldl
push
divb
icebp
cltd
dec
or
in
shr
sub
call
jb
out
or
cmc
incl
test
test
subl
adc
je
or
jbe
movl
jbe
psrlw
shl
stc
ss
stc
jmp
cmpsl
add
dec
sub
in
das
xchg
iret
mov
arpl
sahf
and
jl
outsl
push
outsl
sbb
testb
add
dec
call
jae
add
add
inc
int
jmp
pusha
roll
add
dec
lret
or
loope
add
sahf
cmc
mov
shlb
dec
dec
fsts
mov
jmp
add
mov
mov
jb
cmpsb
jnp
push
add
inc
mov
push
pop
fidivs
lcall
std
sbbl
incl
aad
or
mov
or
ljmp
add
je
pminsw
shll
aam
fisubs
inc
jae
cmpsl
sbb
push
in
dec
xchg
outsb
stc
xchg
and
or
ficomps
and
and
test
incl
lahf
mov
rolb
sarb
les
pop
adc
ficoms
ljmp
and
adc
adc
in
scas
add
adc
inc
stc
call
das
out
shlb
xchg
fs
aam
xchg
ficoms
data16
out
adc
add
cs
inc
and
jge
add
movl
jl
iret
lret
cwtl
add
jns
adc
sti
loopne
vpsubusb
and
add
aaa
cmp
xlat
sbb
outsl
cli
inc
sti
movsb
int
xchg
es
loopne
cmp
leave
sub
push
das
jb
rolb
cmc
in
fisubs
dec
sub
das
add
into
mov
or
jle
into
adc
fistps
add
or
xchg
test
and
out
push
add
cmc
test
inc
xchg
call
mov
std
inc
out
sbb
pop
hlt
pushl
or
add
and
mov
or
add
fistl
add
cmp
inc
xchg
cmc
test
sbb
je
jnp
mov
std
jg
sbb
jne
jnp
fisttpl
xchg
or
into
inc
mov
arpl
bound
cmpb
mov
inc
lea
aas
mov
call
fs
mov
lahf
nop
dec
testb
and
shrb
adc
rcll
inc
fimuls
data16
adc
test
mov
add
aaa
in
push
test
add
adc
loope
xchg
push
fsts
xchg
outsb
rcrl
mov
xchg
add
or
je
cmp
ljmp
call
xchg
fsubrs
int
imul
pop
in
inc
pusha
add
icebp
adc
enter
out
outsl
rcrl
and
jecxz
push
xchg
call
js
xor
sbb
cmp
add
pop
movsl
gs
lea
xchg
test
lods
sbb
outsb
inc
fidivrl
lcall
sub
cld
add
cmovno
cmp
pop
das
ret
pushf
push
xchg
lods
sub
sbb
cmp
popf
push
or
sbb
adc
mov
fwait
ds
push
mov
cmp
dec
pusha
icebp
in
aaa
pusha
leave
in
cmp
in
aas
push
cmp
stc
ss
push
mov
jno
cli
jmp
and
nop
cli
mov
jne
jg
jne
mov
inc
or
jne
sub
in
add
jo
push
xchg
pop
inc
xor
mov
mov
xor
shll
je
and
jae
lods
sbb
inc
nop
cmc
inc
and
inc
and
inc
add
jo
call
mov
and
sbb
cmp
push
push
loope
enter
fistps
add
or
and
stos
cld
or
add
loop
mov
in
adc
add
repnz
or
sub
push
sub
dec
in
sub
mov
lret
jb
inc
les
mov
ljmp
add
in
cli
stos
rorb
aas
lock
mov
xor
and
jle
fistpll
jle
jnp
xchg
pop
add
mov
mov
push
imul
xchg
jmp
out
fstps
lcall
xchg
lahf
imul
insl
mov
loop
add
and
mov
add
fnstsw
mov
jmp
imul
mov
das
int3
shr
test
aam
push
pop
aam
jl
adc
loop
mov
das
dec
hlt
scas
stos
sub
add
sbb
add
test
jl
add
xchg
mov
data16
pushf
pop
les
test
rorl
out
out
ltr
subb
leave
sub
xchg
push
into
loopne
fs
mov
sub
sar
imul
ret
lea
repnz
xchg
loop
add
aam
pusha
or
adc
sbb
jb
jl
xchg
jmp
add
and
push
cli
jmp
popf
adc
and
mov
add
adc
bound
cwtl
je
hlt
add
lahf
mov
and
add
push
push
rcrb
push
xchg
jnp
xchg
or
clc
sub
testl
dec
or
shl
add
nop
add
pop
cmp
add
ret
ljmp
test
push
push
sbb
ds
pop
inc
loopne
dec
dec
ljmp
and
inc
pop
mov
xorl
or
in
fldenv
jp
add
add
xchg
les
jp
dec
fistpll
xchg
sbb
stc
mov
and
aaa
rorb
adc
repz
cmp
inc
rcrb
xchg
js
jmp
cld
xchg
js
inc
insl
ja
bound
push
sti
shll
inc
fdivp
mov
or
pop
dec
negb
stc
add
data16
aas
mov
adc
js
mov
jp
xchg
sub
add
clc
pusha
jmp
mov
movsb
cwtl
sub
xchg
aad
cmc
ss
movsl
pusha
aam
cltd
adc
fdivrs
add
lock
jbe
jbe
cmp
inc
je
xchg
cmc
mov
scas
int
pmovmskb
pop
pop
lods
cs
xchg
das
aam
xor
clc
push
lret
hlt
jp
mov
sbb
inc
add
inc
sbbl
add
inc
ja
out
add
sbb
inc
ret
xchg
inc
loope
rolb
jb
or
jmp
and
xchg
dec
xchg
push
dec
test
shlb
sub
pop
int
cmp
sbb
fwait
aam
call
addb
sbb
stc
jle
leave
js
test
jecxz
mov
psubsw
inc
aam
bound
aam
add
xor
inc
mov
cmc
mov
mov
cmp
mov
dec
repz
xlat
mov
pop
jno
inc
mov
cmp
xchg
dec
lock
mov
pop
xchg
pop
inc
mov
xchg
les
and
repnz
loop
add
add
mov
add
mov
lock
and
add
jae
pop
sbb
add
gs
or
cmp
sbb
push
push
fiadds
pop
lea
xor
mov
add
aas
lea
jge
inc
loop
jb
fidivrs
sti
sarl
repnz
ficoms
sahf
cmpsb
test
mov
in
push
fdecstp
adc
dec
sub
testb
push
cmpb
sbb
in
mov
std
xchg
jbe
jg
js
inc
mov
lahf
adc
imul
arpl
mov
push
cmpsb
mov
pusha
mov
lahf
aam
int
ficoms
outsb
lret
mov
mov
sub
aas
add
adc
xchg
fimuls
mov
out
add
xchg
jl
std
or
jne
lea
pop
dec
sub
stc
psubsw
fiadds
or
xchg
pop
add
adc
ret
inc
fidivrl
xchg
push
fs
in
or
pop
add
sti
iret
loopne
sbb
inc
lea
call
lea
jb
sub
rcr
loop
sbb
mov
sbb
mov
loop
add
cmpsb
sub
imul
mov
gs
cmpsb
xchg
push
xchg
sub
idivl
jle
mov
sub
and
movsl
mov
fwait
ljmp
mov
xchg
mov
lds
pop
shll
neg
xor
and
add
sbb
mov
cmp
jge
mov
sbb
pop
cmc
and
mov
movsb
pop
daa
sub
or
call
dec
push
jae
xchg
cmp
cmc
cmp
or
push
iret
cltd
hlt
pushl
insb
push
clc
mov
or
adc
add
xlat
mov
sar
mov
or
outsb
sbb
jns
sti
jmp
in
aas
fdivp
ret
or
pushf
cli
sub
jmp
add
cwtl
sbb
rcr
lcall
jns
decl
mov
xor
icebp
sbb
add
out
xchg
ret
aas
fiadds
or
fsubrp
rcrl
insl
push
gs
sub
pop
out
out
roll
jns
mov
jne
xor
jmp
test
fstl
sbb
push
std
in
xor
add
data16
in
and
lods
pshufw
xchg
stos
cmp
insl
xchg
lods
inc
mov
mov
pop
dec
rclb
mov
ret
pop
fwait
clc
or
jns
push
ficoms
gs
dec
or
sbb
adc
insl
inc
cli
adc
dec
add
fwait
mov
lea
or
test
cmp
insl
imul
mov
int
cmp
sbb
call
into
dec
inc
test
test
mov
jmp
and
pop
jmp
jb
adc
inc
add
jle
xor
push
add
adc
jmp
fstl
xchg
sbb
out
xor
jo
sbb
mov
call
ficoml
mov
xchg
inc
lds
and
xchg
sti
cmp
sbb
mov
jns
add
sti
imul
mov
aaa
adc
xor
push
inc
pop
nop
mov
or
testb
nop
pop
in
xor
add
and
cmp
arpl
add
sbb
add
and
ja
mov
test
daa
or
jp
jo
cld
ds
sub
aas
add
fisubrs
pushl
lahf
sub
test
ljmp
mov
je
mov
jp
mov
xchg
je
mov
xchg
inc
sbb
sarl
sbb
incb
fnsave
fisubs
ds
pop
inc
adc
or
cmpsb
adc
push
sbb
mov
mov
add
push
jg
or
icebp
cmp
push
xchg
adc
daa
in
shr
xchg
push
or
scas
ret
add
das
lcall
shrb
ljmp
in
inc
sbbl
sub
push
faddl
andl
or
faddl
cmc
add
mov
sbb
out
mov
jle
mov
inc
pop
jmp
stos
orb
pop
push
pushl
insl
cmpsl
fabs
xchg
xor
push
int3
push
xchg
push
std
repz
gs
jb
push
roll
cli
mov
js
cmp
testb
sbb
push
jmp
popa
roll
pusha
icebp
js
cld
add
mov
aad
dec
in
jns
jno
adc
xor
xchg
out
insb
dec
add
mov
xchg
pop
pop
out
xor
insl
mov
push
add
mov
cli
push
push
cld
repz
and
and
push
add
insb
dec
mov
in
movb
sbb
mov
cmp
aam
jp
add
mov
xchg
inc
vpshlq
popa
imul
inc
cld
jmp
xchg
mov
mov
cwtl
cmc
jne
or
pop
xchg
cwtl
cmc
test
cltd
pushl
inc
or
sbbl
cltd
jae
ficoms
mov
or
xor
cwtl
je
mov
adc
std
xchg
imul
imul
test
in
stc
xchg
orl
cmp
jb
inc
fstpl
xchg
shl
or
xor
mov
add
sbb
jmp
mov
push
test
loope
roll
fildl
je
pop
mov
mov
jmp
mov
add
adc
push
fstl
jmp
mov
adc
add
in
add
cmp
loopne
into
xchg
jnp
jg
add
ficoml
dec
lock
aad
sub
in
shr
sbbb
and
fidivs
mov
aas
addr16
mov
call
adc
xchg
add
mov
dec
mov
addb
ljmp
mov
push
or
jnp
jmp
gs
inc
sbb
dec
jg
mov
pop
aad
inc
pop
std
test
bound
mov
adc
ljmp
mov
xor
enter
mov
call
adc
adc
jb
jo
in
or
adc
push
test
fisubs
add
dec
inc
mov
bound
sbb
in
xchg
jnp,pn
test
jae
dec
and
push
movsb
jae
jno
adc
int
xor
test
adc
add
pop
jnp
and
push
movsb
roll
xchg
insb
sbb
cmp
imul
mov
call
jmp
pop
mov
ljmp
and
cmc
push
pop
cld
stc
push
xchg
jae
dec
mov
in
incb
iret
int
mov
in
arpl
add
scas
imul
bound
movsl
bound
jo
out
push
rcr
lahf
or
in
sbb
inc
mov
sub
cmpb
std
cmpl
inc
pop
bound
pusha
or
inc
int
pop
mov
popa
in
and
inc
mull
hlt
dec
imul
adc
adc
add
mov
pop
xchg
les
ja
pushf
inc
sub
xchg
pusha
int
xchg
icebp
test
xorb
xchg
movsb
mov
xchg
xchg
ja
repz
int
sbb
cmp
add
rolb
jbe
xchg
cld
adc
repnz
cmp
and
subl
pop
filds
mov
xchg
pop
push
sbb
and
clc
jle
xchg
add
add
test
adc
jnp
in
mov
insb
jecxz
add
jo
repz
test
sub
cli
ss
mov
gs
jbe
jmp
dec
mov
loop
jl
inc
xchg
leave
push
insb
xlat
ret
jno
out
xorb
addr16
dec
std
jecxz
and
push
jno
adc
ret
cmc
add
jae
cmpsb
pop
xchg
fstl
add
rolb
cli
daa
xor
jns
loop
sub
dec
pop
add
pop
adc
cli
sbb
insb
sbb
imul
or
push
cmp
cmp
adc
jmp
pop
mov
incb
cmp
jp
lahf
cmc
push
iret
mov
jae
fbld
jmp
mov
add
cltd
cmp
jo
jle
sbb
in
mov
and
inc
inc
mov
or
push
pop
call
mov
hlt
call
fsubrp
push
sub
xchg
cli
adc
xchg
push
test
sti
in
lcall
out
cs
loope
int3
shll
jbe
add
jle
jae
subl
jns
decb
or
mov
add
sti
test
sub
add
imul
out
jmp
cli
cli
roll
inc
or
push
ret
int3
inc
mov
xchg
jecxz
adc
xorb
mov
ret
jl
adc
repnz
fiaddl
fiadds
hlt
xorb
iret
negl
jae
pop
in
shr
sbbb
inc
pop
fwait
jae
xorl
mov
loope
jae
sbb
adc
sbb
and
ficoms
pop
dec
jno
inc
sub
dec
pop
add
rcll
call
shll
add
sqrtps
cld
movlps
jbe
loope
call
loop
or
hlt
or
mov
cmove
push
sbb
fcomps
jae
sub
add
rorl
mov
call
xor
inc
mov
es
sub
fs
std
or
and
sti
fsubl
pop
push
sbb
xor
loopne
jmp
add
adc
loop
mov
ret
add
xlat
or
mov
pushl
xchg
incb
test
cmp
and
pop
sbb
inc
cwtl
or
adc
imul
lret
repnz
or
testl
add
sbb
call
test
in
mov
xchg
popa
or
dec
incl
jno
ljmp
sbb
dec
fcomps
call
repnz
js
pop
ret
mov
push
mov
shl
adc
out
gs
pop
dec
mov
jmp
adc
adc
in
push
cmc
xchg
ss
fs
mov
je
pop
sbb
push
add
or
jge
test
pop
lock
add
add
push
push
add
dec
sbb
push
jp
ret
shl
les
jb
xchg
scas
ja
frstor
xchg
fwait
mov
xchg
xchg
jp
dec
mov
loop
sub
imul
jle
adc
add
fwait
mov
sub
and
int
xor
adc
fwait
mov
dec
faddl
pop
add
mov
jmp
mov
ret
mov
cmpsb
add
pop
xor
cmp
insl
xor
sbb
aad
sti
paddsb
call
cld
leave
lds
adc
in
and
ret
sbb
cli
add
mov
loopne
inc
ficoms
je
sbb
pushl
ds
pop
jmp
sub
and
add
pop
aaa
mov
add
push
dec
sbb
and
fs
lcall
mov
shrb
out
cmc
out
add
sub
adc
lds
shrl
or
imul
adc
imul
add
lret
add
jmp
or
sbb
and
cmc
add
push
add
sbb
pop
xchg
add
popf
xor
cli
aas
pushl
adc
das
xor
and
aaa
adc
call
stc
loopne
sbbl
cmp
add
jl
ret
jge
push
and
xor
inc
sbb
sbb
xchg
idivl
add
stc
roll
or
adc
push
ret
add
push
and
sbb
aaa
lcall
fiadds
or
pop
adc
jae
testl
clc
movsb
lret
bnd
push
stc
test
jle
mov
pop
push
and
shr
push
sbb
jl
clc
out
jmp
pop
jae
cmp
add
insl
cmc
jg
push
testl
pop
lock
or
xchg
fsqrt
test
dec
pushf
jle
push
cli
test
dec
push
sbb
push
aaa
clc
mov
cli
dec
mov
adc
adcl
mov
aam
daa
orl
inc
ficoms
jge
sti
xor
adc
ffreep
shlb
xchg
in
mov
xchg
test
xor
ret
add
nop
lahf
stos
or
test
ss
ficoms
cld
clc
subl
insl
movzbl
test
inc
and
ficoms
sub
fidivs
and
fidivrs
sub
fisubs
and
fisubs
and
adc
sbb
in
sbb
shll
adc
sub
adc
daa
sbb
add
sbb
push
daa
add
cmp
jno
jecxz
pop
ja
bound
add
negb
push
jb
cmp
pusha
icebp
xor
pusha
jmp
xor
jo
xor
arpl
incl
or
jne
or
lock
and
add
pop
pop
je
push
fadds
insl
xchg
fisubrs
imul
testl
sbb
sub
jae
add
pop
test
sbb
mov
sbb
mov
jnp
xchg
xchg
mov
xchg
adc
addb
sub
out
and
push
sub
out
and
inc
push
cmp
sbb
sbb
and
inc
adc
clc
or
gs
push
cmpb
test
add
inc
add
mov
fidivs
add
dec
jnp
shll
xchg
pusha
repz
jns
jg
jl
add
lcall
mov
jg
dec
repz
lcall
testb
dec
repz
fsin
pop
and
cli
pop
cmp
cli
fs
notb
ja
and
rcrl
xchg
sti
mov
fidivs
testb
jb
leave
loope
inc
cwtl
js
out
testl
not
adc
jle
sbb
add
or
leave
dec
mov
js
adc
pop
das
add
pop
aaa
cli
add
mov
mov
lcall
popa
iret
sarl
add
add
int
hlt
aam
gs
adc
std
cld
call
leave
add
or
bound
in
add
nop
lods
or
ficoms
stos
lret
nop
xor
sbb
mov
test
loopne
out
fstl
ret
sub
xlat
out
je
or
ljmp
push
lods
add
cmpsl
les
jae
pusha
pop
cli
cmp
call
dec
sbb
jmp
xchg
add
push
shll
imul
mov
fistps
sub
out
jns
neg
adc
or
fmul
jo
cmp
push
ljmp
sub
sbb
xor
sbb
jl
sub
fildl
jne
xchg
jbe
add
aaa
mov
mov
addl
inc
xchg
xchg
xchg
addl
rorl
add
add
dec
push
sbb
inc
xor
cmp
sub
lods
inc
push
adc
aas
push
mov
int3
outsb
or
cmc
lar
sbb
add
sub
fxtract
leave
cli
loope
test
adc
loopne
cmp
ret
pop
mov
jl
loope
ss
leave
or
or
ja
inc
fistpll
cmp
adc
xor
clc
add
pop
pop
std
xchg
adc
mov
dec
or
fsubp
ret
into
adc
or
adc
orl
adc
pusha
push
int
aad
popa
or
shrl
lcall
cmpl
sub
rclb
and
fdivrp
aas
inc
aad
jmp
rcr
arpl
aad
push
adcl
mov
arpl
in
fimuls
add
jns
xorb
or
ficoms
jmp
insb
gs
cmp
pop
out
add
dec
sub
ficoms
add
rorl
or
add
fwait
roll
icebp
jp
or
fstl
push
call
jecxz
jmp
pop
popf
push
cmp
enter
mov
bound
adc
scas
fimull
jmp
imul
add
or
fstl
adcb
out
rorl
xchg
shlb
popa
push
xor
and
mov
inc
cmc
push
or
rcll
pop
rcll
push
add
cmpb
sub
in
rcll
mov
loope
loop
loope
inc
adc
decl
pop
enter
mov
and
mov
mov
mov
push
jl
inc
out
jg
imul
jge
add
shlb
xor
inc
adc
test
ja
insb
add
call
push
int3
inc
add
testl
test
sub
jmp
arpl
push
cmp
xlat
cli
and
xor
bound
leave
dec
popa
fnstsw
mov
fnsave
popa
addr16
bound
mov
add
idivl
sub
xor
fwait
jo
mov
cmp
add
idivl
or
inc
fbld
pop
in
jg
pop
or
and
repz
adc
add
mov
push
shlb
adc
subl
loop
or
gs
or
jne
add
nop
lret
shl
jl
shl
jl
dec
in
and
or
add
fcomi
test
jmp
inc
pop
pop
jmp
xorb
gs
repz
or
in
lret
or
fucom
fcmovne
in
xlat
or
adc
add
cmp
xlat
in
pop
scas
sbb
shrl
push
inc
jmp
ja
cmpsl
sbb
add
sbb
ja
scas
sbb
adc
ss
cs
adc
aad
jae
and
xchg
leave
repz
ret
or
int
rclb
out
cmp
ret
add
stc
pop
rclb
stc
add
ret
pop
in
pop
rclb
out
pop
rolb
fildl
adc
es
xchg
mul
mov
test
push
cli
jg
xor
mov
fnstsw
cmp
jne
mov
adc
add
aaa
lea
xor
pop
test
adc
add
add
xchg
hlt
add
or
movb
add
jmp
inc
fdivr
push
cmp
add
mov
icebp
push
mov
mov
inc
test
adc
sbbb
jne
pop
fdivr
je
xchg
icebp
dec
push
mov
rcr
addr16
lcall
add
mov
pusha
inc
inc
lock
fisubs
jg
imul
jne
lods
mov
ljmp
push
outsb
jns
in
jg
sub
test
lcall
ss
adc
fadds
add
out
adc
jle
fildll
dec
in
jg
xor
test
lcall
cmp
filds
cmpsl
push
and
rcl
je
sub
aad
test
mov
adc
imul
add
aam
jle
in
addl
or
repnz
sub
xlat
imul
cs
pop
adc
adc
imul
jle
pop
jmp
or
filds
ficoms
sub
ficoms
stos
shr
imul
in
xchg
or
add
or
pop
push
loopne
fimuls
mov
popa
aad
or
ljmp
incl
adc
out
rolb
arpl
je
jmp
sbb
out
jg
jmp
loope
or
lret
jmp
cmp
ret
in
xchg
sti
jae
test
aam
punpckhwd
arpl
sbb
push
inc
call
popf
icebp
mov
repnz
pop
bound
add
or
or
mov
and
test
add
incb
sti
movntps
lret
add
or
or
xchg
int
or
and
adc
andl
or
aaa
icebp
and
fcomi
pop
pop
jo
pop
decl
add
add
pop
cli
incl
mov
lcall
inc
add
push
cmp
adc
movb
cli
ljmp
in
stos
sti
cltd
sbb
mov
addr16
jg
inc
add
cwtl
stos
add
ja
stc
jmp
mov
xorl
sarb
mov
add
loopne
nop/reserved
ljmp
aaa
out
jmp
call
ret
mov
outsl
fldenv
mov
ljmp
and
fmull
fisttps
dec
fsts
jmp
out
out
stos
add
cmpsb
cld
mov
or
xchg
pop
xor
push
sub
push
out
add
add
jne
je
stos
or
test
emms
add
add
push
mov
cld
dec
pop
fldcw
test
or
fcoml
jmp
add
add
mov
lea
add
out
jb
imul
loop
rorl
insb
mov
add
add
std
lock
dec
add
fstl
jmp
stos
imul
adcl
aas
dec
adc
jmp
pop
mov
mov
jmp
jle
loope
sbbl
cli
out
xchg
sbb
das
loope
imul
cwtl
stc
mov
push
out
fcoms
add
fnstsw
cmpsl
mov
push
cli
jmp
add
jecxz
add
loop
and
mov
add
psubsw
adc
jns
orb
testl
xchg
pop
mov
es
es
cli
push
or
testl
ja
mov
sbb
adc
jns
orb
notl
xor
pop
mov
and
cli
push
add
xchg
testl
hlt
aam
add
adc
pop
dec
sub
loope
dec
add
addr16
inc
fdivl
iret
jecxz
stc
sbb
dec
fucom
imul
jbe
mov
adc
je
call
mov
fisubs
inc
fsubl
cmpsl
jecxz
stc
sbb
dec
fucom
imul
leave
dec
std
mov
mov
je
out
add
in
jbe
fisubs
inc
fdivl
push
jg
addr16
jg
or
test
add
pop
adc
pop
ficoms
imul
btcl
xchg
adc
jl
or
sub
std
add
inc
sbb
sub
jecxz
stos
sbb
push
into
fnstcw
incb
popa
int3
int3
add
mov
imul
mov
or
add
jmp
fisttps
add
imul
xchg
jmp
push
cmp
insl
outsb
fstl
jmp
out
popa
add
frstor
adc
ljmp
inc
call
pop
pop
or
add
and
and
dec
add
fisttpll
jae
adc
and
or
and
loop
dec
bound
push
shrb
add
insl
popa
adc
fdivrp
xlat
xchg
pop
cli
out
pop
lock
in
adc
cmpsl
and
sub
mov
push
add
das
jnp
add
pop
aas
dec
shrl
rolb
pop
test
or
add
cmp
std
or
add
loop
and
mov
lea
or
sysret
mov
aad
or
cmp
jmp
jnp
jae
rorl
fisubrs
add
inc
and
mov
clc
enter
inc
xor
jl
jecxz
inc
add
sub
fsubp
pop
add
imul
xchg
imul
cmpsb
cli
pop
pop
mov
or
fisubrs
sbb
jle
push
lcall
sti
or
std
fisubs
add
addr16
call
pop
iret
push
or
std
fsubp
gs
jmp
addr16
add
incb
fdivr
loopne
cmp
or
das
cltd
out
data16
shll
adc
add
scas
sub
jmp
in
flds
addr16
push
call
xor
or
loopne
aaa
add
call
mov
in
cmp
push
jmp
addr16
shr
cld
pop
dec
inc
insl
test
cli
add
adc
jae
adc
imul
mov
in
lea
je
push
out
pop
jns
repz
sbb
xor
test
inc
ljmp
or
push
cli
mov
pop
jne
sub
add
cli
imul
cli
jmp
and
std
call
aaa
push
xchg
dec
cli
pop
mov
mov
test
hlt
sbb
insb
xor
jmp
add
std
call
pop
xchg
xchg
push
ret
add
push
cld
sub
mov
sbb
add
add
adc
push
pop
in
jle
add
adc
push
paddsw
notl
orb
in
outsb
add
adc
inc
imulb
jmp
mov
adc
push
fwait
push
pop
mov
ret
rcrb
xchg
por
decl
nop
iret
add
or
jecxz
rclb
test
das
jg
fidivrs
pop
adc
addr16
inc
inc
cmc
test
inc
gs
pop
lahf
cli
ljmp
ja
sbb
pushf
std
and
jl
fs
out
xchg
push
jne
mov
add
fidivs
clc
xchg
inc
push
je
ret
in
cmp
lcall
ljmp
jnp
jge
js
divl
cmp
jmp
pop
fildl
je
iret
mov
fidivs
jg
add
inc
inc
inc
filds
fbstp
incb
fstl
jmp
lret
push
dec
or
push
xchg
sbb
xchg
sbb
inc
fnsave
mov
call
loope
sub
out
xchg
and
out
sub
mov
and
out
ficoms
jmp
test
loopne
add
dec
loope
sbb
jmp
mov
lock
nopl
rcr
adc
subl
out
xchg
out
ficomps
adc
adc
imul
inc
ss
fs
leave
push
xchg
or
fstl
ret
add
out
adc
jb
sbb
fimuls
add
push
xchg
mov
pop
adc
jmp
add
sbb
fstl
add
shrl
or
adc
jmp
xchg
jmp
imul
cli
jmp
fwait
pop
test
adc
add
inc
jae
pop
dec
sbb
or
cmc
pushl
cmpsb
cli
incl
inc
or
xor
adc
mov
mov
and
inc
mov
cltd
add
or
adc
jl
sbb
jne
int3
jbe
jmp
fmuls
ret
lock
int
or
addl
loop
inc
add
dec
add
pushl
push
sbb
inc
inc
mov
bound
test
push
or
and
adc
pushf
test
cmpl
or
mov
adc
and
sarl
sub
push
push
add
cmp
or
jle
xor
sub
xchg
cmp
jg
into
stos
popa
xchg
xor
add
or
fidivrs
icebp
orl
mov
sub
and
hlt
aam
pop
dec
push
pop
push
mov
pop
icebp
sbb
jnp
and
mov
mov
jmp
test
or
and
jl
pop
adc
lahf
and
mov
sub
sbbb
call
ja
sbb
pop
push
sbb
sub
stc
mov
mov
add
cwtl
sub
les
jmp
cld
into
xchg
add
ficoms
push
sub
out
push
and
ljmp
xchg
jmp
xchg
leave
es
xchg
mov
push
ret
xchg
inc
mul
lea
out
mov
adc
out
cli
mulb
adc
inc
div
cmpsl
or
add
push
test
repz
out
mov
icebp
and
arpl
and
fnstsw
test
sbb
add
dec
and
arpl
shrb
test
int3
inc
pop
sub
push
jmp
lods
jns
fucomi
pushl
leave
cmp
shrl
int3
push
push
and
cld
and
push
mov
loope
lret
cmp
jns
and
inc
adc
pop
andb
fbstp
mov
xorl
addl
mov
and
xchg
lds
cmp
cld
add
push
addb
and
rol
lds
xor
xchg
sbb
pop
xor
xor
sar
out
sar
ss
jp
ret
repz
repz
add
lcall
repz
repz
add
decl
add
jmp
repnz
repnz
add
jne
cmp
incl
jl
mov
outsl
mov
adc
mov
lds
mov
stos
lds
add
lds
add
lds
insl
xor
jno
sub
imul
lds
xor
push
push
sub
dec
out
and
inc
or
lds
call
sub
sub
sbb
sbb
adc
or
mov
stc
cld
fwait
icebp
call
push
lcall
mov
inc
test
cwtl
inc
inc
mov
inc
xchg
lahf
cwtl
inc
movsl
mov
inc
adc
inc
sbb
cwtl
inc
sub
mov
inc
pop
cmp
inc
mov
mov
inc
add
and
cmp
inc
sub
and
cmp
inc
sub
and
jae
inc
mov
add
push
bound
inc
cli
arpl
lret
jmp
outsb
and
in
fsubrs
cmp
js
jne
js
je
xchg
inc
or
jae
sarb
pop
je
rcrb
xor
ja
or
xor
xchg
pop
out
push
xchg
pop
pop
xor
sbb
lahf
mov
rcrb
testl
sbb
popa
add
adc
cli
mov
push
inc
and
lea
push
je
push
or
cmp
add
push
jle,pt
adc
inc
mov
cmp
addb
xchg
cmp
fisubrs
sbb
ds
andb
add
fidivrs
jb
mov
sbb
daa
xor
jl
adc
data16
mov
jb
outsl
pop
fdivrl
decb
mov
jg
cmp
data16
flds
les
pop
test
vpcmpgtw
in
notl
adc
pop
cltd
inc
repz
shr
mov
mov
or
adc
mov
inc
mov
inc
xchg
call
je
or
cmp
shrl
in
mov
arpl
fwait
test
imul
mov
in
imul
arpl
mov
xchg
mov
pop
ljmp
repz
insb
inc
int
mov
lret
fsub
xchg
mov
ret
sub
adc
lret
cmc
pop
dec
or
adc
xor
push
roll
rcll
fwait
mov
cli
sub
out
jne
cli
mov
adc
inc
jmp
fstp
xchg
popa
mov
cli
jmp
cmp
hlt
sti
popf
inc
xchg
pop
call
mov
xor
adc
inc
mov
cld
adc
sbb
inc
je
add
fildl
lahf
cli
pushl
mov
popa
adc
add
add
xchg
xchg
jnp
dec
fdivr
incl
mov
popa
and
add
nop
push
sub
cmp
xor
jmp
aaa
jne
push
imul
adc
int3
mov
cli
mov
push
divl
test
add
fdivp
push
push
repnz
repnz
out
push
sbb
add
addr16
push
xchg
or
push
imul
jg
rcll
sub
inc
cli
fisttpll
sti
mov
scas
out
push
push
cli
popf
stos
cmp
insl
scas
xchg
repz
cli
push
jbe
adc
cmp
enter
xchg
add
outsl
xchg
or
rorl
push
lcall
outsb
enter
inc
inc
dec
aad
aaa
enter
inc
dec
mov
jno
add
xor
add
adc
rolb
cmpsb
imul
push
ljmp
aad
and
pushf
test
fildl
sub
add
gs
pusha
xchg
xchg
imul
cwtl
test
idivl
sbb
mov
cmp
sbb
or
cwtl
xor
lock
sbb
out
sbb
add
jno
cmp
mov
push
cmpsb
dec
js
cmpsl
xor
int3
decl
leave
stos
dec
add
xchg
push
test
cmp
mov
adc
or
jg
insl
add
data16
fstpl
mov
dec
adc
rol
adc
sbbl
xor
cmc
mov
stc
in
mov
xchg
cmp
xor
add
pushw
or
jle
icebp
pop
pop
add
cmc
jge
popf
scas
in
adc
add
jp
push
dec
into
jge
add
xchg
mov
nop
mov
fbld
out
xchg
loop
sbb
jg
adc
mov
push
adc
push
clc
dec
add
adc
cs
adc
les
xchg
mov
sbb
cmc
call
sbb
xlat
cmc
ds
inc
test
out
flds
jno
add
dec
divl
inc
cmpsl
xchg
add
ja
lea
pcmpgtd
mov
push
test
push
scas
lods
jns
push
add
mov
in
incl
or
sahf
sub
mov
orl
adc
jae
cmpsb
push
adc
mov
mov
pop
mov
imul
dec
mov
loop
push
cli
arpl
xchg
sahf
lods
inc
je
ss
add
aaa
idivb
movsl
mov
mulb
xchg
in
aas
fisubrs
cli
adcl
jmp
insl
idivb
dec
push
lahf
adc
ret
movsb
lds
xchg
xchg
dec
mov
mov
sub
push
mov
lea
add
mov
push
add
and
mov
mulb
add
lea
xchg
dec
call
mov
cmp
adc
sbb
and
repnz
adc
inc
sub
loopne
mov
jns
cs
ljmp
sub
add
fnsave
jne
xchg
xchg
push
adc
dec
ret
fidivl
cli
aam
or
pop
jp
cmpsl
push
xchg
lahf
and
ss
push
add
mov
test
test
cltd
xchg
lahf
hlt
mov
dec
out
icebp
lea
sub
xchg
mov
shll
inc
jno
ss
sbb
cli
insb
popa
mov
add
sub
shrl
sti
adc
aaa
adc
scas
stc
call
push
pop
shr
push
add
incl
mov
notb
cmp
cmp
dec
push
xchg
inc
clc
ja
cld
push
xchg
lock
adc
pop
mov
add
or
add
push
xor
jnp
cli
push
pop
out
cmp
or
out
push
jl
repnz
mov
fstl
xor
push
cli
test
test
cli
loopne
ret
fisubrs
jp
add
sub
mov
push
cli
xchg
sbb
out
xchg
int3
insb
andl
push
cli
push
lods
jns
arpl
push
dec
scas
loope
jns
idivl
rclb
push
cli
mov
rorl
mov
addl
cs
mov
push
cli
add
dec
cli
pop
push
daa
lea
dec
add
jbe
mov
outsb
orb
adc
lods
aaa
sbb
lahf
int
add
xchg
aaa
sti
push
xchg
sbb
sub
or
test
cmp
je
pusha
push
rolb
test
nop
lret
pop
inc
adc
add
mov
inc
aaa
arpl
test
test
subl
mov
lret
ret
sbb
arpl
icebp
mov
nop
call
mov
fsts
jecxz
mov
cltd
mov
pop
dec
les
lcall
mov
mov
or
subl
adc
xor
jbe
jb
xchg
jmp
fcoml
add
inc
jecxz
xor
xor
adc
pop
or
mov
cmp
xor
add
jne
mov
mov
dec
insb
push
fs
push
mov
dec
mov
das
in
lods
push
mov
xor
jae
pusha
adc
mov
sub
lds
sub
decl
cli
testb
cmc
incl
add
jne
sbb
ds
imulb
cmpl
add
loopne
call
mov
stc
fcomip
call
int3
lret
jbe
sbb
orl
or
push
or
xor
jns
lea
pusha
cmp
outsb
or
shlb
lea
jl
pop
or
addb
or
push
cli
arpl
xchg
sahf
adc
xlat
ss
push
movsl
out
cmc
add
outsl
dec
cli
push
xchg
aaa
cli
jmp
add
stc
out
xchg
out
decb
sub
jg
stos
rorb
hlt
shrb
aas
inc
adc
jns
fdivrp
dec
cli
ss
jp
cmp
jns
xor
dec
out
cmpsb
push
cli
push
lods
push
stc
sbb
push
dec
dec
or
sbb
lods
mov
test
in
adc
dec
in
xor
inc
push
rcrl
sbb
xor
inc
cmp
shr
ljmp
cltd
or
dec
imul
stos
xchg
xor
cmp
insl
inc
adc
imul
push
push
inc
rorb
push
inc
mov
xor
sbbl
rolb
imul
and
call
dec
add
imul
ret
cli
pop
pop
mov
in
ss
insb
push
add
sub
cli
mov
jne
sbb
mov
fstl
add
gs
scas
pop
lea
movsl
sbb
dec
insb
push
or
xchg
sub
mov
cli
xchg
test
adc
cli
sbb
dec
dec
mov
add
pop
jge
pop
add
aaa
out
fidivs
cli
push
sbb
xchg
lea
fdivs
ss
in
xor
jmp
nop
sbb
clc
sbb
adc
add
les
cli
pusha
fs
add
mov
pop
or
mov
xor
cmp
or
testb
cmc
adc
add
or
push
outsl
ljmp
xorb
lds
testb
dec
lcall
or
inc
mov
cld
rorb
push
scas
xor
inc
mov
enter
or
aas
push
jmp
sub
rcrb
daa
xchg
insb
dec
cli
lods
out
sbb
mov
out
popf
lcall
shl
mov
cmp
jle
data16
mov
fdivr
mov
cli
inc
xchg
xchg
jg
mov
push
add
jl
add
and
out
xchg
lcall
dec
call
cli
push
ret
fidivrs
jne
cmp
cld
cs
adc
inc
mov
xor
add
cmp
pop
fidivrs
and
add
xchg
dec
dec
rcrl
rclb
adc
jl
xor
sub
mov
inc
sbb
gs
jge
leave
popf
subl
add
xchg
sahf
and
add
fwait
shl
or
pop
leave
push
mov
lods
cltd
js
lcall
ss
lret
fstl
mov
ss
popf
out
mov
popa
xor
sti
test
xchg
ret
xchg
call
push
cwtl
call
mov
adc
lods
out
ljmp
sbb
sahf
xchg
popa
jo
mov
and
mov
das
fdivs
mov
fidivs
scas
mov
fcoml
pop
jb
mov
ror
adc
jbe
add
addl
scas
inc
mov
lods
inc
and
inc
mov
lods
inc
and
inc
mov
push
scas
inc
mov
popa
scas
inc
shlb
sub
mov
or
je
xchg
shlb
fs
adc
add
add
adc
mov
leave
call
gs
adc
add
insl
add
daa
leave
xor
adc
xor
test
ret
imul
out
test
jl
inc
iret
dec
cmpsl
fidivs
inc
add
xor
incl
fwait
incl
mov
mov
add
mov
jp
mov
and
cli
rcll
mov
push
mov
fdivrp
mull
mov
pushf
decl
xchg
leave
vmwrite
inc
das
jbe
popa
adc
pop
outsb
mov
cltd
out
ret
pop
rcrb
testb
pop
fiadds
mov
and
fstpl
pop
or
jp
call
scas
pusha
cmp
scas
cmpsb
fldcw
jo
enterw
sbb
scas
pop
in
clc
hlt
stc
adc
mov
shlb
adc
cltd
das
pop
and
push
pop
sti
pop
mov
xchg
sub
sbb
sbb
sub
das
sbb
aam
fisubl
xchg
sub
dec
icebp
loop
mov
xchg
cmp
mov
xchg
dec
and
push
loopne
loope
fmull
pusha
inc
jns
sahf
cmp
enter
test
jae
cli
fs
xor
cmp
sahf
and
and
cli
mov
insb
pop
jmp
dec
mov
fiaddl
ficompl
imul
add
ss
inc
ja
jb
cld
or
sub
cld
jmp
jns
dec
inc
fidivl
pop
jae
ret
mov
jecxz
dec
cmpsl
out
jecxz
mov
pop
cmc
adc
adcb
fisttps
add
pop
in
mov
push
adcb
lock
add
cmovo
test
clc
add
imulb
sub
jg
push
push
addb
bound
dec
call
dec
into
fidivrs
sub
sti
add
sahf
mov
jae
scas
ljmp
dec
hlt
aas
pop
cmc
jnp
dec
aaa
pop
ror
add
idivb
add
lods
jle
cli
adc
mov
jnp
adc
jns
xchg
pop
ja
add
or
aas
fldl
or
insb
and
gs
cli
data16
fnstsw
ja
dec
or
fisubs
push
out
ja
sbbl
int3
sbb
or
cmovne
jmp
sbb
mov
pop
js
in
cld
adc
aam
add
imul
incl
aaa
inc
and
pop
int3
sarl
in
push
adc
mov
test
or
fwait
lods
shlb
inc
bound
out
movsb
fdivrl
push
out
dec
sbb
xchg
and
or
pushf
fwait
sarb
clc
mov
out
cmp
sbb
incb
add
dec
out
jo
pop
je
push
out
pusha
and
pop
mov
mov
das
sub
js
pop
fmuls
bound
or
jmp
pushf
or
pusha
gs
rclb
lret
inc
addr16
ljmp
std
jae
outsb
add
lea
push
data16
stos
cs
cmp
out
int3
shll
add
or
mov
clc
decl
add
and
cmc
ljmp
push
call
push
cmc
call
ret
cmc
fstpl
call
add
cli
ret
push
push
mov
adc
add
sub
enter
sub
pop
shl
ja
cli
push
shl
mov
adc
add
inc
aam
add
sbb
cmp
outsb
adc
add
ds
ds
insb
repz
in
test
addl
fisubs
into
xchg
dec
add
dec
push
fidivs
cli
pop
pusha
je
mov
decb
leave
cld
divl
sbb
inc
cli
lcall
add
mov
fisubs
incl
add
adc
icebp
or
ret
jge
push
popf
jge
jmp
adc
outsl
loope
jmp
jbe
and
inc
or
mov
xchg
mov
sub
mov
inc
pop
push
jmp
add
cmp
rcrl
or
xchg
adc
jmp
mov
leave
inc
subl
daa
cmp
xchg
imul
and
sar
hlt
xchg
inc
add
sub
pop
std
out
ficoms
add
in
lock
daa
or
and
jmp
adc
inc
cmpsb
xchg
je
mov
jae
loopne
gs
pushf
out
adc
mov
rol
and
and
repz
cli
cmp
sbb
out
jecxz
cli
adc
mov
mov
fstl
lea
cli
dec
or
dec
jb
sar
fadd
add
sbb
leave
push
test
add
clc
push
mov
addr16
or
add
data16
shl
dec
xor
cmp
inc
cmpsl
mov
cmpl
adc
cmp
outsb
pusha
xor
pusha
cmp
jb
incl
push
data16
and
push
pop
jmp
adc
daa
imul
es
std
shl
lea
cmp
cmc
pushl
cmp
loop
shrb
lea
cmc
lcall
cmc
decl
pop
fisubrs
enter
cmp
jmp
xor
push
sub
add
fmull
mov
aam
xor
mov
xchg
ss
push
cmp
push
jno
push
push
lods
xchg
sti
jns
shl
jle
cmp
arpl
test
aaa
decl
aaa
pushl
fidivs
test
dec
sarl
mov
adc
int
decb
adc
mov
adc
add
test
cmp
add
xchg
cmp
flds
test
roll
imul
and
movsb
inc
imul
mov
adc
sbb
test
add
add
pop
movb
rcrl
ljmp
xchg
sbb
pop
jno
dec
add
cmp
mov
and
addr16
call
push
cli
add
test
push
or
insb
imul
outsl
mov
pop
pop
fdivrl
jmp
or
inc
jmp
push
das
or
pop
cli
jmp
loop
adc
add
sar
arpl
or
int3
mov
call
sar
dec
add
push
adc
sbb
sub
jbe
xchg
mull
fs
xchg
leave
push
push
cli
push
or
push
cli
add
inc
test
lahf
out
sar
mov
insl
cmp
call
fsubs
mov
fildl
lret
ret
fdiv
addl
test
enter
xchg
push
clc
incl
outsb
sbb
out
lcall
imul
pop
shl
pushf
adc
outsl
ret
idiv
pop
cmp
xlat
push
mov
xchg
out
les
xor
add
mov
adc
add
bswap
int3
incb
popa
and
jae
xchg
fwait
xor
loop
incb
loop
incb
jecxz
incb
jge
sti
inc
fidivs
add
jmp
call
outsb
rcll
add
nopl
aaa
roll
gs
add
int3
xlat
xor
cli
stos
sub
inc
fimuls
or
dec
ljmp
adc
scas
lods
cmp
repnz
mov
in
pop
add
mov
xor
fstl
lods
add
inc
inc
hlt
fcmovbe
call
mov
cli
or
mov
ljmp
inc
loop
faddp
mov
push
inc
xor
popa
push
test
and
dec
push
add
gs
add
ret
sbb
sbb
lods
scas
lea
jo
sub
push
sbb
cmc
bound
xchg
push
add
xchg
int
jl
pop
aad
mov
cmc
bound
jmp
xchg
aaa
std
call
push
aad
je
pusha
out
fstl
cli
insb
popf
push
test
fistl
add
dec
xchg
fdivrl
call
add
pop
test
addr16
frstor
jo
call
stos
mov
push
cltd
xor
ficoml
mov
xchg
mov
call
fiaddl
test
lds
add
ret
push
ret
push
jmp
adc
mov
add
fwait
bound
aaa
jge
adc
test
add
adcb
sbb
sub
add
pop
mov
jp
add
add
add
mov
cmp
cmc
lea
fisttpll
js
push
decl
or
aam
add
rcr
cli
push
sti
cld
stc
pushl
jnp
insl
adc
test
add
scas
mov
out
xchg
aaa
cli
arpl
rorb
lods
xor
fisubs
test
add
repz
jmp
or
decb
pop
add
ficomps
add
fisubs
test
lret
ret
idiv
shll
aam
sahf
mov
sub
and
aad
sbb
xor
imul
sar
sahf
ret
xor
cli
jns
insb
inc
ljmp
in
add
call
mov
or
call
sub
loopne
popa
mov
dec
mov
adc
fwait
xor
pop
in
xor
adc
pop
mov
sub
dec
aam
out
aad
mov
mov
add
or
lock
loopne
pop
mov
mov
add
inc
loop
cli
scas
or
or
xor
scas
xor
nop
dec
push
xchg
mov
int
sbb
dec
outsb
mov
sti
sub
or
adc
aam
mov
mov
mov
divl
mov
fldenv
jb
dec
test
icebp
je
pop
xchg
out
mov
ret
cmc
adc
xlat
rcl
or
cli
out
cmp
inc
fsubrp
sbb
sub
adc
pop
xchg
mov
dec
dec
jecxz
inc
dec
cmp
xlat
jecxz
adc
pop
push
call
repnz
outsb
adc
rcrl
push
int3
lret
iret
loope
mov
mov
xchg
inc
in
push
cmc
orl
fildl
cmp
sbb
inc
loop
sub
cmc
lea
dec
mov
jecxz
or
add
add
pop
and
in
cmp
out
cmp
xlat
je,pn
mov
out
add
mov
push
in
push
xchg
es
jno
shll
mov
sarl
in
sti
mov
xchg
sub
int
daa
push
decl
or
xchg
mov
paddusw
fdivs
mov
jns
pop
mov
lods
out
stos
fisubs
push
je
jg
add
bound
push
mov
or
xchg
xor
mov
daa
decb
imul
adc
sti
pop
sbb
adc
aad
sub
add
push
shll
adc
int
fld
xchg
mov
mov
adc
push
add
rolb
xchg
xor
and
popa
lret
pop
fisttpll
jmp
mov
bound
aam
jecxz
xor
stos
das
test
mov
call
std
das
sub
push
aam
mov
sar
mov
adc
jnp
out
add
pop
cli
jb
add
sub
adc
scas
mov
add
sub
dec
xchg
fs
je
scas
cld
das
in
and
xor
je
sbb
push
sub
jmp
sub
adc
fxch
jmp
mov
jg
lods
sbb
and
mov
jae
add
or
sbb
push
lock
or
add
loopne
les
leave
push
ret
in
xorl
incb
xchg
rcrb
jae
cli
fisubrl
outsl
or
cli
les
sub
inc
mov
or
dec
cli
push
pusha
stc
mov
in
mov
jecxz
add
add
aas
add
add
pop
pop
and
pop
xor
inc
sub
mov
pop
add
add
outsl
cmpsb
push
das
add
rol
adc
js
scas
mov
je
cmpsl
cmpsb
jl
mov
ret
sbb
adc
call
aam
xchg
imul
cld
or
add
jno
cli
inc
push
jg
into
mov
out
js
cli
les
aam
mov
sub
mov
pop
inc
fidivs
pop
gs
mov
pop
call
shlb
fisubrl
pop
add
imul
out
cmp
orl
pusha
and
daa
test
adc
rorb
xchg
pusha
lret
add
mov
in
sbb
icebp
pop
enter
mov
in
fdivrs
in
cmp
inc
out
cs
andl
rcrb
mov
shll
adc
in
or
in
add
shl
call
fdivr
xchg
lods
stc
lock
rorl
jo
xor
pusha
cmpsb
xor
fiadds
popa
popa
call
in
call
and
test
fstl
add
popf
jl
mov
movsb
inc
or
jb
pusha
stc
cli
lret
add
cli
scas
jae
lds
clc
es
or
jcxz
push
and
xor
jne
dec
or
cltd
sbb
test
and
adc
mov
stc
imul
pop
stc
add
add
das
call
adcb
mov
sbb
fs
stc
mov
adc
call
xor
in
adc
add
fcomps
push
mov
fistpl
add
cli
out
cmp
decl
sbb
dec
cmp
mov
dec
lea
icebp
xor
push
fimull
incl
dec
cld
mov
nop
mov
and
or
push
inc
jns
mov
ds
addr16
vmovlpd
jns
lods
fldcw
arpl
cli
sarl
addl
fistl
call
loopne
leave
cltd
out
jp
pop
sti
stc
aam
and
out
mov
add
mov
aaa
cli
pop
cmp
lret
mov
aas
fsub
dec
mov
iret
out
scas
es
outsb
adc
push
sbb
lret
pop
and
cltd
push
xchg
test
andl
rcl
xchg
push
add
adc
fsts
movsb
daa
adc
rol
xchg
mov
jl
or
gs
sub
adc
add
jp
ja
in
sbb
pop
shrl
ds
cmpsl
xor
in
and
stos
ja
in
sub
or
sbb
cs
popa
fnstsw
aam
clc
push
or
adc
ja
or
pusha
imul
cli
imul
cmc
sti
and
or
lcall
call
ret
in
fwait
jnp
add
cmc
out
scas
pop
pop
xchg
stos
popf
inc
sub
jbe
cmpsb
xor
cld
mulb
or
sbb
fdivrs
or
jmp
insb
sbb
mov
push
pop
and
jecxz
pop
cli
fs
jg
bound
xchg
push
add
rorl
daa
xchg
mov
mov
jne
cmp
inc
add
out
testl
call
push
lahf
ror
incl
roll
lock
lea
push
push
inc
aad
dec
mov
add
mov
inc
xchg
xor
mov
jp
mov
adc
minps
gs
xor
mov
or
push
add
testb
cmc
push
push
cmp
xchg
stc
xchg
add
xchg
mov
sbb
pop
pop
jno
or
and
add
cmp
add
jle
idivl
loopne
or
inc
loopne
js
test
adc
sbb
jbe
ljmp
or
icebp
rcr
idiv
and
inc
out
mov
lods
call
mov
es
lcall
stc
ret
mov
pop
ficoms
outsb
ret
frstor
scas
std
sbb
lea
es
mov
arpl
popw
int
mov
push
xchg
test
into
data16
jl
or
cmp
xchg
addr16
adc
in
adc
mov
pop
or
imulb
shl
shll
cmp
mov
jns
or
sbbl
call
iret
jge
or
mov
leave
jae
pop
sar
xchg
inc
jae
inc
cmp
sbb
xchg
mov
cmc
orb
mov
push
cli
mov
add
je
xchg
add
and
jmp
insl
lcall
ret
add
scas
pop
push
bound
out
sbb
sbb
jae
stos
xchg
js
jb
jno
loop
sar
push
int3
into
ret
add
add
das
sub
std
xchg
sbb
mov
sub
sub
add
iret
push
ret
addl
mov
dec
mov
add
mov
sbb
in
aas
idiv
dec
flds
or
sti
xor
push
std
mov
rcll
push
sub
movsl
xor
dec
rolb
cmpsb
push
cld
and
inc
cmpl
data16
pop
xchg
and
jno
ds
jle
in
cmp
ret
sar
dec
mov
fldcw
incb
and
sbbl
xorl
in
std
or
add
fidivrs
pmaxub
pop
std
xchg
mov
lahf
push
sbb
test
cmc
cmp
or
stos
std
dec
roll
enter
sbb
imull
std
push
ficoms
out
mov
and
mov
repz
addr16
repnz
hlt
fs
and
adc
pop
push
push
stos
sub
adc
add
outsb
dec
push
subl
testb
imul
xor
pop
lcall
decb
adc
xchg
iret
pusha
dec
cwtl
add
add
jge
add
adc
vaddpd
pop
adc
add
out
mov
call
rolb
fstl
add
imul
cli
jb
stc
daa
jno
add
in
jb
xchg
add
fnstsw
mov
ficoml
add
push
dec
in
pusha
xchg
test
jmp
bound
mov
adc
sbb
stc
pop
dec
in
push
fs
or
and
push
test
mov
or
aam
or
jge
out
aad
gs
call
enter
iret
sub
mov
and
incl
adc
adcl
stc
mov
hlt
add
ja
adc
inc
adc
add
movsb
out
add
mov
add
mov
pushl
or
sub
hlt
xor
dec
xor
loopne
add
xchg
icebp
mov
sub
sub
outsb
cmp
in
inc
dec
xor
das
idiv
lods
push
insl
pop
fisubrs
jmp
jno
ljmp
dec
jge
cltd
stc
and
sbbl
stc
std
xchg
into
test
arpl
cwtl
adc
test
pop
stc
nop
adc
daa
test
and
inc
jle
jmp
sub
dec
frstor
add
fisubs
test
jne
fdivrp
std
or
xchg
pop
aad
push
je
sub
in
out
xor
cli
arpl
daa
cvtps2pd
call
lods
adc
psrlq
adc
cltd
add
ficompl
add
pop
cltd
adc
add
inc
and
ljmp
push
pop
dec
mov
sbb
pop
rolb
sub
xor
sub
mov
lret
daa
mov
enter
dec
cltd
test
pop
dec
push
mov
in
lea
jg
lea
mov
ficoms
add
icebp
stc
mov
loopne
xchg
pop
enter
inc
stc
jbe
jge
xchg
push
call
add
add
out
push
in
xlat
popf
push
sbbb
push
addr16
cmp
jge
push
scas
push
or
sub
cmpsl
push
out
pop
iret
je
add
mov
fs
jo
sbb
test
push
mov
push
push
je
and
xchg
push
mov
mov
xchg
dec
in
fdivrl
push
xchg
pop
lea
cmp
jmp
jne
sub
in
enter
ficompl
loope
ljmp
add
mov
ret
mov
popa
or
fdivr
jb
or
ja
add
sub
decl
adc
imul
faddp
notb
pop
cmpsl
or
and
cmc
jne
sbb
stc
addb
pop
sbb
mov
push
fidivrs
mov
xchg
or
into
adc
aas
fidivrs
stc
push
mov
adc
xlat
pop
sub
xchg
push
sub
hlt
mov
mov
icebp
adc
push
aad
adc
pushl
test
add
hlt
adc
mov
xor
fnstcw
cli
adc
hlt
push
imulb
cli
add
dec
or
cltd
je
aas
test
dec
icebp
sbb
pop
pushf
mov
nop
pop
and
mov
mov
decb
xchg
add
shll
add
loope
test
jbe
add
adc
lock
and
add
imul
aad
and
push
out
iret
push
mov
inc
test
sti
pusha
test
sti
std
cld
sbb
push
out
or
jp
lret
add
push
mov
arpl
cli
jge
aam
or
inc
cli
add
in
std
pop
nop
clc
or
push
std
stc
jmp
jno
sub
loope
inc
jmp
push
mov
in
push
add
stc
jmp
das
inc
sbb
fldcw
jecxz
out
test
jmp
out
test
adc
shrb
or
xchg
cmp
pop
mov
sub
hlt
jo
jge
lock
add
adc
push
nop
in
mov
shrl
sbb
mov
mov
scas
xchg
idiv
pop
mov
add
mov
and
inc
mov
add
jo
push
cmp
and
or
or
add
mov
idiv
sub
divb
xchg
push
and
sbb
mov
call
fidivs
and
adc
mov
and
xchg
jb
cli
lret
xor
mov
loope
add
push
add
adc
cmc
mov
pop
and
sbb
out
cmp
or
rorl
cmpsl
add
fiadds
pop
dec
add
mov
frstor
sbb
int3
out
mov
cli
or
out
ret
in
sub
movb
pop
dec
xor
push
lea
xor
imul
imul
call
pop
cmp
xlat
bnd
adc
add
imul
add
adc
std
nop
out
fimuls
imul
xor
ret
sub
mov
out
sbb
xor
iret
sti
xchg
sti
rolb
in
out
add
adc
inc
test
or
das
cmp
cmpsb
popa
sub
add
jge
f2xm1
and
ficompl
xorl
loopne
fstl
mov
xchg
idiv
bound
or
stos
fsts
xchg
aad
std
out
iret
xchg
mov
pushf
lods
divb
push
call
xchg
sarb
lds
stc
jmp
loop
add
out
sar
into
add
or
insl
and
xchg
jmp
das
mov
mov
add
jle
add
add
or
sub
or
popl
decb
fldenv
pop
pop
adc
sbb
sbb
adc
mov
adc
mov
and
and
mov
push
testb
fcomps
call
or
lahf
sbb
ret
adc
sbb
scas
cli
rorb
std
jmp
loopne
sub
loopne
loop
stos
xchg
sbb
mov
stc
xchg
int
dec
icebp
aad
jae
sub
mov
pop
adc
shll
lods
fsts
mov
inc
cli
mov
jmp
add
xchg
and
jo
and
and
aaa
or
mov
sub
enter
cmpl
jl
sbbl
dec
or
enter
push
dec
aas
jg
sub
jl
push
outsb
leave
fxch
and
dec
add
pop
dec
ret
mov
adc
mov
call
call
into
test
adc
negb
lret
push
out
sub
fwait
xchg
clc
cmc
fidivs
sub
jbe
sbb
add
pop
shll
stc
add
in
mov
add
jmp
cwtl
add
loope
je
roll
rcl
out
stc
mov
add
imul
ljmp
js
loop
cmp
gs
cld
daa
repz
jbe
mov
in
cmc
add
notl
fsub
jns
rcr
inc
jmp
popf
cmc
cli
mov
cli
jae
jo
adc
out
add
or
jo
mov
jmp
movsl
sar
xor
push
decl
test
enter
mov
add
cmp
cmp
pop
loop
mov
cmp
xchg
out
or
pop
enter
rolb
idivb
inc
xchg
test
cwtl
cli
cmpb
test
or
in
fisubrs
push
ret
inc
ljmp
dec
xor
jg
mov
inc
mov
cmp
pushl
mov
dec
or
jnp
cmp
and
stc
jno
inc
je
pop
adc
cmp
std
lcall
add
pop
jge
fmulp
loope
cltd
out
jmp
and
aas
adc
xor
sahf
xchg
jmp
mov
mov
xlat
sbb
jmp
test
je
cli
pop
aas
add
pop
cmpsb
xchg
xor
out
addr16
cli
mov
pop
aas
ljmp
adc
repz
lret
cmpsl
in
js
ficompl
adc
mov
pusha
add
and
es
daa
add
adc
fidivl
and
push
or
loop
insb
push
jecxz
cmp
jmp
lcall
pop
mov
ret
call
ret
call
ret
call
ret
call
ret
in
mov
repnz
jmp
repnz
jmp
repnz
pushf
repnz
jb
jbe
test
loopne
and
les
test
cmc
mov
rclb
std
sbb
divw
sbbb
fstpl
xchg
pop
out
clc
push
sbb
jae
test
stc
cld
add
mov
notl
cmc
icebp
xor
jb
mov
out
popa
mov
jmp
lds
pushl
or
push
dec
fsts
lods
dec
dec
push
xchg
jge
xchg
cmc
or
jne
jmp
jbe
and
mov
incl
mov
xor
popf
sbb
mov
call
cmp
adc
stc
or
or
jmp
jne
js
and
add
or
sbb
idiv
js
jmp
mov
iret
and
xchg
mov
fmulp
loope
leave
daa
pop
add
pop
xor
pop
cmp
pop
fisubrs
in
ret
insl
aas
ficoms
xor
xchg
stc
jno
shll
clc
xchg
add
ret
pop
iret
js
mov
add
mov
sbb
repnz
adc
add
pop
rorb
xchg
mov
add
jnp
add
loop
ss
or
test
rclb
sbb
dec
jp
loope
cmp
inc
mov
or
sbb
mov
xlat
cmpsl
out
outsl
lds
out
pushf
sti
pop
push
lcall
push
and
sbb
and
or
ret
leave
and
mov
clc
mov
or
xchg
and
add
sub
clc
mov
out
inc
scas
es
add
jmp
adcb
out
add
inc
test
xchg
inc
cmc
nop
inc
push
rcr
inc
sbb
aad
push
je
jp
adc
push
subl
xchg
add
fstl
shr
out
stc
jmp
fst
inc
or
fstps
stc
jmp
es
ljmp
push
movsb
add
fstl
sbb
call
bound
insb
popf
popa
sub
jmp
fistl
add
fstl
jae
movsb
mov
ljmp
cmp
cli
adc
je
fdivr
add
in
push
je
in
cmp
mov
idiv
cmp
test
add
addb
mov
jmp
mov
mov
push
idiv
cli
push
insl
add
jne
mov
jmp
mov
outsb
mov
adc
fsub
cmp
pop
movsb
arpl
jo
cmc
fimuls
out
sysret
cli
bound
sbb
push
in
test
loop
cli
add
inc
repnz
fisubs
xchg
jge
jae
outsb
aas
out
ret
or
mov
mov
pop
cli
pop
and
pop
xor
ss
or
test
jns
lret
jle
aad
in
cmpsb
test
icebp
std
xchg
je
gs
cmp
in
fimull
and
or
mov
or
adc
lock
mov
leave
adc
stc
push
adc
stos
add
fdivs
fsts
adc
lds
mov
int3
mov
jmp
shl
out
push
sub
add
setbe
xchg
shll
in
xchg
sti
je
add
jno
cmpsb
add
jnp
cmpsb
insl
fisttps
or
push
jmp
inc
add
pusha
incb
outsb
aas
cmp
outsb
rcl
add
dec
jmp
jmp
xor
inc
test
inc
push
jb
xchg
repnz
xor
jbe
push
jge
loop
adc
mov
push
sub
stc
sbb
mov
and
call
insl
sbb
push
cwtl
popf
jae
add
sub
loope
sarb
inc
add
add
aam
sbb
rorb
in
pop
out
out
add
push
jmp
outsl
adc
jne
stc
test
sbb
shlb
test
or
xor
pop
addr16
push
idiv
rorl
mov
call
jmp
add
es
jb
in
or
sti
pushl
adc
push
enter
inc
in
sub
add
stc
mov
push
fdivr
decl
mov
shlb
add
fidivs
cli
daa
mov
inc
add
stos
cli
stos
sbb
xchg
fucomi
out
mov
cli
mov
rep
cli
add
jmp
cli
push
in
out
js
cli
xor
ja
add
stos
xchg
cld
out
push
add
adc
ja
add
js
cli
cmc
lods
cli
adc
clc
xchg
in
popf
or
cli
and
test
pop
fdivr
std
mov
add
popa
mov
out
jb
pop
inc
adc
adc
int
arpl
out
add
clc
cmp
inc
lods
or
inc
es
cmp
cmpsb
scas
pusha
cmc
push
add
xchg
cld
or
jg
mov
push
cmp
aam
lock
jp
out
mov
xor
mov
adcb
or
test
mov
cwtl
les
sub
sub
fstl
out
add
hlt
dec
daa
add
imul
stc
cld
and
mov
stc
mov
and
adc
sbb
rcrl
xchg
stc
mov
push
push
pop
mov
jae
xor
or
movsb
jp
add
jp
dec
adc
je
call
gs
add
out
icebp
fdivr
imul
adc
test
mov
push
pop
scas
int
rolb
in
cmp
dec
cmpl
divl
je
push
adc
sub
jmp
lock
test
jnp
inc
pop
bound
mov
das
ljmp
jne
xchg
cmp
incl
inc
push
test
inc
test
inc
notl
cmp
je
loopne
adc
mov
notl
or
les
jle
addr16
jp
add
pop
or
or
jle
repnz
jb
shll
add
push
test
lods
pop
pop
pop
mov
lock
idiv
push
fsubl
ltr
push
sahf
negl
or
lret
or
or
clc
idiv
ljmp
jae
or
in
adc
cli
lods
inc
push
add
shl
push
cli
pop
stc
mov
jae
outsb
inc
or
add
in
cmpsb
ja
imul
hlt
mov
push
out
sahf
pop
test
movsl
pop
add
jnp
scas
mov
cmp
and
pop
pop
mov
cli
adc
es
popf
call
data16
adc
or
rolb
mov
xchg
insb
sti
aad
push
arpl
mov
sbb
sub
adc
push
mov
fucomi
in
inc
add
ljmp
xor
mov
lret
mov
inc
add
add
fnstsw
pop
sbb
adc
fs
xor
jmp
jmp
add
jmp
add
sub
sub
mov
aam
je
mov
cmp
in
push
add
rclb
stc
mov
push
or
mov
and
or
shll
sbb
insb
push
add
sbb
pop
add
js
add
adc
ss
jg
cmp
or
or
inc
add
jo
pop
or
xor
pop
add
or
push
ret
pop
cmc
mov
pop
aas
jecxz
pushl
adc
inc
aaa
xchg
push
xor
mov
add
mov
dec
push
std
or
negl
shr
or
or
ss
add
or
cli
stc
arpl
js
push
cltd
add
jns
js
add
testl
test
lock
sub
fdiv
std
test
repnz
call
add
add
pop
inc
or
ja
add
idiv
incl
fdivp
mov
pusha
pushf
dec
fdiv
std
test
pusha
mov
idiv
test
jmp
or
int3
cmp
sti
add
fdivrp
cli
adc
adc
inc
fimuls
mov
push
adc
out
loopne,pn
adc
push
out
sbb
xchg
mov
jmp
mov
jmp
imul
mov
inc
fists
imul
es
hlt
loope
fisubrs
or
adc
ficoml
mov
out
pop
inc
jecxz
xchg
or
arpl
sbbb
lret
sub
ret
outsb
inc
fimull
std
fimuls
aad
push
or
adc
and
mov
pop
xor
mov
add
or
xor
jae
addb
clc
sbb
lds
adc
pop
adc
jmp
fstl
test
lds
call
xor
xchg
sarb
stc
xor
mov
mov
into
nop
add
jne
sbb
ud0
fstpl
fnstenv
roll
aam
fcomi
mov
dec
mov
or
cmp
or
hlt
ja
stc
cmp
sub
scas
test
inc
ja
cltd
push
adc
outsl
push
add
push
xchg
aaa
adc
xor
inc
or
inc
cmpl
mov
fcomi
jne
ljmp
sbb
divl
ljmp
lock
adc
push
cmp
add
out
push
pop
test
push
add
stc
leave
testl
je
bound
or
jae
add
jae
clc
fwait
push
notb
je
sti
mov
dec
call
sbb
cmp
pushf
out
std
push
add
sub
fwait
or
add
aam
xchg
mov
or
add
and
xorb
push
call
add
or
dec
add
adc
mul
fsubl
out
pop
add
adc
loop
sub
sub
and
and
add
push
mov
add
cmp
or
stc
and
inc
popa
push
pop
stc
add
adc
aas
jp
and
push
fadd
push
dec
arpl
mov
push
out
or
add
fistl
stc
mov
mov
sbb
sbb
push
data16
outsl
push
add
pop
push
aam
outsb
fldl
ljmp
jle
and
xor
hlt
fsts
cmc
lret
jae
call
pop
rolb
xlat
stc
inc
bound
mov
fldl
aad
jae
test
es
pop
cmp
adc
pushf
fsts
push
add
and
pushf
push
in
dec
lcall
adc
push
add
faddl
add
and
sub
jmp
xlat
xorl
fcmovnbe
xor
mov
mov
rcll
mov
loope
lea
je
push
xchg
inc
inc
mov
lret
jge
adcl
inc
sub
xor
or
jns
enter
ljmp
jmp
or
xchg
shlb
notl
fmull
and
mov
xchg
pop
ficomps
lret
mov
test
loopew
lods
add
mov
xor
adc
add
push
sub
ljmp
xchg
pop
mov
testl
sub
adc
cmp
add
daa
in
scas
fsubp
std
gs
and
stc
repz
xlat
imul
add
mov
addr16
dec
dec
loop
lock
lock
pop
filds
gs
call
xor
in
jmp
popf
mov
popa
push
jecxz
xor
hlt
lods
call
jle
xlat
pop
xchg
inc
xlat
pop
ja
mov
xor
fdivr
mull
jecxz
and
xchg
sub
sbb
sub
mov
mov
mov
or
mov
incl
lret
outsl
fisttpll
add
clc
or
add
rolb
fsubl
mov
mov
cwtl
inc
stc
xor
mov
scas
mov
cli
cmpsb
repnz
adc
dec
clc
add
inc
mov
jae
add
add
inc
push
cmp
fcompl
pop
enter
mov
xor
jmp
push
inc
stc
aam
add
jae
neg
push
addl
add
faddl
mov
jecxz
jne
ljmp
or
mov
or
push
mov
cmpb
repz
stc
inc
xchg
daa
jne
dec
dec
dec
sub
jo
jnp
pop
or
addb
shlb
je
add
es
je
es
es
jne
mov
rcrb
add
lock
addr16
rcll
orl
jno
lock
popf
in
xchg
xor
mov
add
stos
in
cmp
std
jbe
adc
mul
fucomi
std
call
push
xchg
fldt
or
std
fisubs
hlt
loope
clc
sbbl
std
test
sbb
pop
aam
add
or
cli
loope
xchg
fsubp
std
jg
push
std
subb
xchg
inc
faddp
pop
inc
sbb
stc
jno
add
scas
ficoms
out
popf
out
adcb
add
push
mov
pop
pop
andb
daa
mov
repnz
jnp
ficoms
mov
mov
mov
ficomps
mov
iret
aad
xchg
in
es
dec
xchg
jg
stc
out
test
shl
cld
mov
jb
xor
call
dec
pop
jle
xorl
adc
push
cmp
pusha
inc
in
imul
fs
cmp
pop
pusha
sub
or
jg
push
xchg
addl
adc
push
add
or
fdivrs
adc
ret
xor
icebp
jnp
test
mov
out
dec
clc
jb
loopne
jo
dec
loope
adc
or
iret
fyl2xp1
daa
inc
push
clc
shlb
int3
mov
pop
push
rcrb
sbb
or
add
and
push
or
pop
out
jne
leave
add
mov
or
out
je
icebp
cs
stc
xchg
sub
mov
popf
cmpb
push
jne
add
adc
mov
andb
jns
rcll
jecxz
mov
stc
mov
xchg
and
mov
and
addr16
jnp
test
sub
and
fidivrl
jns
jmp
add
cmpl
std
adc
dec
mov
inc
pop
hlt
xorl
adc
stos
ret
stc
clc
mov
stc
out
ljmp
int3
cmpsl
dec
mov
repnz
jmp
sbb
add
and
pop
add
add
cld
test
fmull
imul
pop
fisubrs
push
push
adc
jmp
lret
and
lock
adc
xchg
sti
in
out
pop
into
pop
mov
ja
lea
or
aaa
pop
xlat
out
int
inc
fimuls
and
pop
adc
sub
mov
ficoms
outsb
dec
notb
jb
sbb
mov
outsl
out
adc
pop
push
jns
and
mov
add
fidivrl
or
xchg
das
in
xchg
pop
enter
nop
div
add
push
mov
fidivs
fdivrs
mov
add
call
cmp
hlt
stos
mov
dec
imul
iret
jl
mov
adc
dec
adc
test
into
je
cmpsb
imul
aaa
sbb
inc
rcrl
les
jo
fdivl
pop
ljmp
push
fst
dec
add
enter
jae
cmp
pusha
adc
add
dec
cmp
cmp
loope
xor
dec
push
dec
divl
mov
add
scas
dec
cmp
cmp
inc
js
mov
imul
push
xchg
jnp
add
cmp
add
add
cmp
sub
xchg
repz
inc
std
jg
insl
inc
jl
clc
lea
adc
fldl2t
add
jae
pop
dec
stc
xor
out
xor
cmp
sbb
mov
loope
xchg
lds
push
mov
or
idiv
repnz
loope
add
jnp
gs
pop
mov
ret
mov
pop
int3
or
adc
test
sahf
mov
shlb
inc
or
shlb
testl
gs
pop
ljmp
fisubs
push
mov
fstpt
in
pushf
ljmp
arpl
adc
jle
sarl
cmpsl
inc
xlat
ljmp
xchg
daa
jo
nop
adc
enter
and
cli
aaa
outsl
ret
cltd
pushf
out
aad
aad
adc
aas
out
pmaxub
inc
in
push
and
jle
mov
push
idivl
rclb
jmp
mov
jecxz
mov
fwait
jecxz
mov
stc
ljmp
cmc
out
ljmp
xchg
int
call
scas
push
pop
push
outsb
xchg
lods
mov
xor
mov
xor
lret
push
add
mov
jae
fcmove
stc
aas
ror
jp
enter
mov
leave
adc
push
add
push
test
push
filds
and
loopne
rcrb
cmpb
add
dec
shll
divl
fs
push
mov
adcb
adc
jne
dec
rorb
shl
enter
or
lret
pop
mov
aas
stc
out
in
cld
aam
or
cmp
shl
shrb
xchg
in
jecxz
add
cmovnp
subb
xlat
push
mov
inc
das
enter
lldt
mov
call
fidivrs
or
add
fiadds
push
sarl
or
popa
add
idivl
mov
loope
fidivs
jecxz
scas
mov
or
cld
push
cs
scas
lock
xor
shll
stc
xorl
push
jne
arpl
outsl
cmp
mov
or
orl
and
inc
sbb
cmp
dec
rorb
jl
stc
adc
mov
out
xchg
call
push
push
test
jmp
push
mov
mov
fsubrl
jnp
sub
rcrl
add
xchg
testb
push
xlat
andb
outsb
repz
ret
pop
dec
idivl
sbb
jmp
ficoms
call
adc
rcrl
and
xchg
bswap
adc
out
mov
xchg
gs
fsubrl
mov
faddl
pushf
xchg
mov
sbb
lea
das
out
rcr
jg
jmp
inc
fimuls
add
jl
adc
je
pop
lret
loope
stc
push
sub
sub
lahf
call
inc
lret
stc
subw
ficoms
test
push
mov
or
iret
push
sbb
lods
enter
pop
and
mov
sub
sti
les
inc
mov
je
jl
and
add
jnp
decl
sbb
push
cmp
mov
dec
mov
and
les
dec
push
sbb
stc
and
dec
stos
popa
push
pushl
les
sarl
cmpsb
mov
ds
adc
add
dec
mov
jmp
lods
push
pop
mov
stc
lret
mov
int3
int3
add
xor
imul
insl
add
ljmp
mov
test
std
jmp
add
sarb
fdivr
jb
mov
xor
add
add
mov
mov
xor
pop
popf
cmp
decb
mov
push
xor
xor
fiadds
xor
test
out
lds
popf
movsb
ror
lcall
int3
stos
test
pop
mov
arpl
test
aas
cld
gs
and
lahf
xor
push
or
jecxz
sarl
popa
fs
pop
xchg
jmp
fs
pop
pop
sub
outsb
imull
jo
int3
repz
fs
ucomiss
data16
add
or
out
mov
cwtl
call
inc
pop
loope
rdtsc
mov
data16
mov
es
and
dec
cld
xchg
call
mov
xchg
mov
insl
insl
adc
jmp
pushf
xor
das
loopne
cmp
mov
ljmp
push
adc
ljmp
mov
arpl
add
mov
ljmp
jg
push
stc
pushf
es
cmp
xchg
cmp
test
ljmp
lea
dec
scas
test
push
test
pop
pop
test
rorl
add
ret
add
sbb
mov
inc
cmpl
adc
mov
mov
adc
mov
shrb
je
fdivrs
sbb
push
or
mov
xor
jae
xchg
jae
adc
lcall
xchg
jg
add
add
adc
xorl
outsl
insb
mov
loope
flds
cli
add
push
stc
incl
pop
sub
ja
les
test
push
mov
fidivrs
mov
test
les
fidivrs
aam
sbb
lds
das
cs
cmp
add
dec
push
mov
rorl
cli
mov
push
gs
aas
mov
sti
test
ds
or
js
push
cltd
cmc
leave
mov
add
sub
das
inc
je
pop
mov
out
inc
fyl2xp1
gs
sbbl
out
jns
lret
mov
mov
lahf
dec
mov
nop
fimull
mov
sbb
loopne
ss
mov
push
arpl
add
mov
adc
aaa
out
push
popa
xchg
xor
ficoms
data16
into
xchg
and
daa
lret
fiadds
out
flds
sbb
cmp
add
add
mov
cmpsl
mov
sbb
rolb
sbb
mov
mov
fisttpll
jge
insl
mov
inc
shl
xor
add
push
dec
stc
sbb
sub
mov
mov
mov
push
shlb
and
add
fstl
jge
fdivrs
xorl
ret
rol
repz
call
adc
test
cs
cmp
and
xchg
cmpl
cmp
les
sub
push
xorl
and
roll
pop
int3
shlb
cli
cmpb
dec
cmp
add
sub
sub
add
push
iret
icebp
dec
add
dec
insb
mov
mov
out
and
call
mov
orb
idiv
add
mov
pop
adc
pop
jl
push
ret
inc
ror
int3
xchg
iret
int3
int3
or
int3
ljmp
or
cltd
stc
inc
adc
je
mov
fidivrs
mov
add
insl
add
jns
push
push
pop
fmull
add
sub
add
sub
cmp
jnp
test
inc
xor
adc
xor
shll
paddusb
sbb
mov
imul
add
xor
mov
call
mov
xor
inc
add
xor
inc
adc
sbb
push
cmpsb
nop
lea
xchg
mov
in
sub
cmp
adc
out
mov
push
xlat
xchg
add
ficoms
leave
mov
pop
jb
daa
out
pusha
push
xchg
fimuls
arpl
outsb
lcall
pop
add
mov
andl
dec
and
inc
fidivs
call
add
mov
insl
dec
cltd
add
fnstsw
add
mov
enter
mov
in
jg
mov
pop
mov
mov
adc
and
call
fstl
test
and
jmp
loop
mov
scas
add
push
je
add
sub
adc
pusha
lret
dec
xchg
arpl
jb
dec
test
mov
jle
add
push
lret
jecxz
inc
inc
xor
push
cmp
xor
ret
dec
sbb
cmp
aas
data16
adc
rorb
mov
addl
ja
scas
jmp
inc
push
insb
mov
sti
push
sbb
pusha
add
add
xchg
adc
jno
cmc
cmp
jmp
lea
jl
cmp
addr16
insb
inc
movsb
push
fisubrs
test
aas
outsl
mov
push
popa
out
mov
xchg
popf
adc
test
or
fwait
pusha
inc
std
fidivrs
xchg
sub
fisubrs
adc
call
cmp
mov
fbstp
orl
lret
fadds
mov
mov
cmpsb
mov
test
sbb
push
mov
mov
test
pop
jge
adc
mov
rorb
hlt
rorl
insb
jae
mov
cmpsb
cmp
xchg
add
out
fimuls
jno
in
adc
push
lds
out
pop
dec
pop
add
pop
inc
scas
pop
mov
or
out
arpl
mov
sub
pusha
arpl
xlat
arpl
int3
jmp
mov
mov
xchg
and
jmp
fs
pop
insb
das
cmp
jb
clc
cld
mov
inc
adc
sarl
pop
insb
lret
cmp
stc
pop
pop
pop
xchg
mov
jge
mov
stc
jle
push
test
cltd
int3
int3
xor
cltd
int3
int3
mov
fs
mov
stc
bound
mov
test
xor
xchg
dec
xchg
pop
roll
testb
or
adc
adc
xchg
addl
inc
pop
dec
out
mov
and
loopne
dec
cmp
or
add
inc
inc
movsb
fiaddl
dec
add
mov
jmp
dec
insb
and
or
add
mov
mov
pop
insb
data16
sbb
xorl
pushl
adc
dec
jg
dec
fidivs
push
pusha
pop
ljmp
fisubrs
popa
test
loope
loope
sbb
push
sbb
xor
add
sub
jge
mov
dec
sbb
inc
test
fisubrs
add
xor
insb
jg
test
add
imulb
aad
fsubrs
jmp
push
inc
mov
test
popa
cmc
lahf
pop
test
iret
sub
push
adc
xchg
cmp
mov
mov
in
adc
pop
popa
add
mov
push
jo
add
mov
int3
adc
pop
fisttpl
cmpsl
add
xchg
xchg
mov
and
inc
fisubrs
call
add
subl
or
adc
adc
add
mov
imul
nop
negl
adc
add
jge
lds
repnz
shlb
inc
fisubrs
add
rcll
test
and
jmp
jecxz
mov
scas
xchg
pop
xchg
sub
and
push
mov
dec
icebp
pop
dec
add
test
ds
sarb
in
mov
cmp
out
cld
int3
leave
sub
testb
jmp
jne
das
mov
or
mulb
lret
push
sub
add
fnstsw
aad
loopne
dec
jb
dec
bound
dec
mov
fstl
add
cwtl
dec
js
mov
push
insb
les
add
add
pop
adc
add
adc
push
in
shrb
orl
ret
sbb
push
adc
out
jmp
add
inc
leave
adc
jb
testl
lods
push
negl
sbb
jnp
iret
or
test
insb
mov
or
xchg
fimuls
jle
call
int3
jbe
jbe,pn
shrb
idiv
sbb
push
fistpll
movsb
adc
test
fwait
push
pop
add
fisubrs
xchg
push
stos
std
call
imul
add
and
adc
test
das
andl
add
mov
adc
push
repz
data16
scas
dec
cs
fcmovnbe
adc
push
jnp
pop
insl
in
xchg
push
fsub
jb
rolb
lret
push
sarl
testl
inc
adc
jp
sub
sub
out
pushf
xchg
jge
mov
jo
add
xchg
int3
adc
adc
sub
cwtl
xchg
in
adc
jp
cltd
stc
add
mov
hlt
rclb
sahf
sub
outsl
pop
popf
out
fiadds
out
pop
xor
jp
and
in
fnsave
add
adc
push
add
adc
fnstsw
cmpl
jne
push
fsub
lcall
daa
mov
mov
and
adc
int3
shlb
stos
in
pop
or
push
push
mov
stos
pop
jbe
neg
adc
pop
fimull
js
xor
cmp
ja
stc
push
add
pushf
pusha
dec
aas
mov
mov
add
mov
add
aam
repz
hlt
inc
adc
orb
pop
int3
into
push
pop
hlt
jno
int3
jecxz
int3
int3
repz
int3
add
int3
dec
ss
mov
dec
xor
push
je
cmp
lret
je
jle
sbb
jbe
xorb
imul
leave
pop
incb
imull
mov
mov
sub
cs
or
add
hlt
xorb
jo
js
adc
pop
adc
orl
ja
rcl
std
jno
std
rcrb
jmp
lret
stc
pop
or
pop
mov
pop
add
subb
loop
mov
int3
sbb
cmc
sub
mov
je
and
or
mov
xchg
jmp
mov
mov
mov
stc
xor
lcall
push
arpl
je
push
lock
push
or
adc
aam
mov
mov
mov
adc
xlat
xchg
jns
int3
xchg
imul
out
jmp
mov
push
int3
inc
scas
stos
js,pn
out
lahf
in
ret
mov
lock
add
and
xor
iret
js
hlt
mov
sbb
ffreep
lahf
in
add
adc
push
mov
scas
inc
das
aaa
dec
movsl
cld
leave
ror
scas
sub
js
out
mov
fldl
sbb
mov
sub
gs
adc
jmp
popa
sub
push
sub
nopl
daa
add
xchg
pop
add
imul
and
inc
dec
mov
mov
test
sub
fnsave
pushl
popa
aad
rclb
and
push
push
pushf
and
add
sbb
pusha
and
push
jo
in
jmp
jne
aad
scas
xchg
inc
add
sub
not
xor
or
sarl
push
pop
or
push
pop
xor
mov
gs
int3
xor
and
std
add
aaa
adc
inc
inc
rolb
inc
adc
add
gs
int3
inc
cs
push
jno
imul
xor
push
cs
jne
cs
and
out
mov
les
stc
dec
jbe
lret
test
sub
jne
scas
sub
adc
fstps
cmpsl
mov
or
fistpll
jne
into
xor
sub
in
and
mov
lds
cmp
loop
dec
sub
add
cs
testl
fidivrs
fstps
mov
shll
jnp
jnp
gs
icebp
test
mov
das
mov
push
and
out
arpl
test
cmc
pop
inc
loop
xor
psubb
cmp
adc
stos
mull
xlat
sub
ret
adc
dec
pop
ficoms
adc
adc
push
mov
and
adc
add
or
add
cltd
mov
xchg
fbld
sub
pushf
les
fcompl
xchg
mov
ljmp
sub
jle
sbb
fistl
out
data16
jmp
fstl
jge
loop
push
push
adc
or
repnz
xadd
test
pop
or
mov
adc
adc
xchg
cmpsb
xchg
inc
cltd
in
push
jb
in
xchg
xchg
push
jno
push
loopne
lahf
enter
adc
inc
sbb
inc
decb
test
adc
add
fstl
add
push
sbb
jmp
mov
adc
test
lahf
stc
inc
fwait
cli
jb
or
lods
cmp
push
fadds
add
pop
add
adc
mov
add
lret
add
adc
add
inc
add
push
test
dec
sbbl
fsubp
stc
repnz
mov
ljmp
inc
or
stc
ljmp
stc
incl
or
rolb
idiv
fiadds
lret
inc
out
repnz
incl
shl
mov
lds
or
pushl
aas
ja
pop
fdiv
jg
mov
sti
test
bound
inc
fiadds
js
mov
arpl
sarl
rolb
popf
pop
xchg
mov
frstor
sar
xchg
mov
mov
push
push
stc
or
adc
andl
cltd
stos
jmp
push
xlat
jp
jecxz
adc
mov
scas
mov
mov
outsb
cs
and
add
cmp
out
sbb
sub
ficoms
imul
adc
mov
push
mov
adc
pop
mov
and
enter
aaa
into
adc
int3
jae
inc
add
sbb
js
sbb
inc
idivb
out
or
lock
push
test
sbb
or
cmpsb
mov
adc
jmp
mov
lods
or
cltd
push
int
dec
jmp
and
jae
jmp
imul
mov
icebp
cmpsb
add
cmpsb
stc
jmp
pushf
icebp
insb
lret
pop
sub
jmp
fstl
or
loopne
dec
jne
fcmovne
mov
inc
clc
ljmp
test
arpl
sbbl
or
add
sbbl
lret
loope
jbe
rcr
bound
push
in
mov
xchg
push
out
cmp
sbb
push
jne
dec
adc
sbb
lds
divb
sti
incl
rclb
jae
lea
ja
test
mov
add
adc
dec
pop
xchg
rcll
jnp
dec
xchg
dec
clc
inc
leave
jnp
daa
fcmovnbe
mov
jle
adc
or
cmp
xchg
lahf
mov
and
mov
fcmovu
inc
adc
mov
movsl
test
clc
test
push
repnz
pusha
jmp
imul
fidivrs
inc
sbb
into
repz
cltd
mov
add
mov
add
sbb
nop
lret
pop
cmc
mov
or
mov
dec
cld
push
test
loopne
aaa
or
mov
adc
xchg
mov
adc
sahf
lea
cmp
xor
testl
hlt
cwtl
pushf
scas
push
mov
pushf
scas
push
inc
adc
push
push
sahf
add
xchg
mov
pop
dec
fcomip
mov
lock
in
stos
jecxz
shlb
lahf
push
testl
fisttps
and
or
add
mov
ficoms
pop
dec
push
cwtl
sbb
pop
dec
fwait
cld
cmp
in
xor
rcr
xchg
adc
add
movl
nop
mov
test
cmp
bound
movsl
roll
push
add
mov
test
push
aas
clc
mov
cwtl
lods
dec
mov
fisttpll
clc
push
adc
call
pop
popf
test
mov
cmovno
add
dec
add
fs
jo
or
lods
ffree
daa
and
inc
jmp
fstl
roll
dec
add
inc
push
mov
add
dec
adc
das
push
add
mov
jne
aaa
adc
jg
add
sbb
adc
xchg
cmp
mov
jge
dec
lods
test
xchg
inc
aam
dec
aam
pop
dec
push
inc
cmp
insb
dec
aam
or
add
bound
inc
cmp
clc
adcl
add
cmp
jb
pop
aas
adc
add
orb
dec
clc
fisubrs
inc
sbb
out
call
gs
mov
inc
dec
rorb
fucom
jge
cmp
mov
call
pop
divl
add
ja
add
mov
shlb
ret
mov
jmp
test
std
fisubrs
inc
cld
fidivrs
std
sub
sub
jae
into
jmp
inc
and
cmpsl
sbbl
test
adc
pop
outsb
dec
push
fcompl
in
divsd
mov
adc
add
xchg
in
cmpsl
fisubs
mov
and
add
adc
mov
inc
xchg
push
push
inc
mov
fimuls
out
mov
adc
adcl
loop
fisttpll
outsb
inc
xchg
cmpsl
aaa
daa
call
lahf
pop
out
add
adc
jmp
fstl
je
pop
lcall
fstl
add
pushf
add
popa
iret
or
fisttpll
mov
mov
bound
int
sub
or
cwtl
std
inc
pop
lcall
cmc
in
negb
cmc
ds
in
aam
dec
xchg
inc
or
je
dec
adc
and
jge
fcoml
and
pop
loope
call
notl
jmpw
arpl
fstl
clc
pusha
sbb
roll
add
or
ja
mulb
mov
jl
cmp
add
js
cli
cli
pop
or
jne
addl
fadds
lods
int
ret
divb
xchg
adc
add
pop
enter
call
and
add
orl
aam
sbb
addl
mov
add
mov
jnp
mov
push
add
or
adc
add
gs
xchg
mov
ds
and
cltd
scas
or
fisubs
push
test
add
add
xor
add
loop
sub
jp
and
add
cmpsl
std
out
mov
lcall
add
inc
decl
fisubrs
cmp
fidivrs
std
or
test
int
push
push
clc
cmp
movsl
stc
test
mov
pop
dec
jmp
xchg
adc
xchg
cmc
imul
ret
stos
add
adc
add
stos
out
addr16
out
add
jg
dec
pushf
mov
out
fisubs
data16
xor
sub
ficoms
out
add
push
aam
adc
mov
ret
ljmp
push
data16
fldt
outsb
lret
loop
mov
add
arpl
jnp
fisttpll
test
rcll
add
add
fwait
cli
sbb
xchg
lret
fidivrl
xchg
push
mov
mov
fidivl
xchg
mov
xchg
fstl
mov
test
idivb
in
aam
outsl
sbb
inc
test
fstl
or
adc
jmp
fstl
test
js
or
push
add
pop
inc
cld
loop
push
add
xchg
dec
adc
add
addl
xchg
add
mov
inc
hlt
sub
clc
mov
insb
dec
push
xlat
insb
mov
inc
dec
adc
clc
fimuls
sub
xchg
hlt
rorb
or
idivb
push
add
mov
and
xlat
sti
add
sbb
or
push
pop
mov
arpl
jl
lret
loopne
mov
clc
add
les
ror
jns
notb
add
cs
in
push
lds
mov
jle
movsb
add
roll
and
lcall
xor
fldcw
icebp
testb
jp
ja
mov
and
add
fisubs
std
jmp
sub
add
es
lods
lds
sub
std
jmp
dec
xchg
sub
lahf
mov
movsl
aad
lock
das
ficoml
stos
sub
popa
jecxz
jle
cmpsb
add
data16
fildll
jo
pop
and
cmp
jno
out
mov
push
inc
add
xchg
jl
adc
add
dec
aas
xor
stos
ljmp
ficoms
pop
dec
push
or
or
jecxz
push
popa
cmp
cli
sahf
sub
popf
push
nop
mov
cmp
call
lea
adc
add
inc
and
adc
add
insb
cmp
test
push
fsubrs
addl
jo
sub
out
adc
jmp
ljmp
jge
fcoml
add
cmp
add
sub
mov
test
test
div
rolb
pop
dec
adc
fisttpll
test
lret
xchg
cli
and
lret
lea
lahf
adc
mov
cmp
mov
das
mov
mov
xchg
add
mov
or
adc
mov
rcr
addl
loope
rcr
pop
mov
shl
xchg
inc
push
aaa
bound
push
ja
mov
call
xorl
xor
les
add
add
mov
aaa
adc
mov
arpl
mov
dec
hlt
inc
add
scas
vcvtsi2ss
push
pop
movsl
xor
mov
sti
cwtl
and
pop
cmp
dec
sbb
add
stos
in
and
in
fs
mov
cmpsl
std
popa
pop
xor
psraw
xchg
cmp
call
fiaddl
mov
cmpsl
std
or
nop
test
mov
fcompl
cmpb
xor
in
xor
or
xchg
inc
or
pushf
sub
notl
out
stc
and
xchg
out
bound
add
add
movl
jle
mov
xchg
loop
or
mov
shlb
pop
nop
cmpsl
std
pop
dec
mov
stos
ja
mov
sub
mov
sbb
adc
add
xchg
sbb
int3
pop
dec
mov
enter
verw
fstl
sbb
mov
dec
add
sub
pushf
dec
das
xchg
aad
jnp
loop
in
bound
fildl
ficoms
sbb
add
or
pop
pop
jo
fstl
add
pop
test
jmp
fsts
add
xchg
add
dec
je
mov
test
ret
adc
push
xchg
stc
jmp
mov
incl
inc
mov
sbb
adc
stos
pusha
testl
cmpb
add
push
dec
lea
push
push
insb
push
pusha
testl
aas
fs
adc
cmp
add
fs
add
dec
fadds
stos
testl
xchg
push
add
orb
pop
fwait
push
add
add
sti
push
movsl
bnd
daa
psubw
inc
loopne
mov
xchg
test
jne
dec
xor
add
stos
xchg
push
aas
loopne
clc
adc
scas
mov
jp
lret
inc
fisubs
push
or
pusha
or
jno
xor
gs
jbe
fisubl
enter
testb
and
loope
pusha
add
cmpsl
ret
mov
stos
stc
xchg
add
cmp
std
fidivs
roll
imul
fisubs
fdivrl
inc
outsb
pop
push
test
jne
xchg
jmp
icebp
inc
arpl
fiaddl
out
in
xchg
xchg
pop
mov
xchg
dec
data16
pop
imul
out
adc
mov
jp
xchg
pop
mov
outsl
pop
jo
stos
dec
sub
add
daa
pop
push
out
fidivrs
out
ficomps
pusha
aas
xchg
and
pop
faddp
std
das
pop
add
mov
leave
call
fninit
and
int
xorl
pop
test
sahf
xchg
add
sbb
dec
cmp
push
or
and
pop
push
fcomps
add
mov
add
popa
das
add
fstpl
mov
inc
pop
int
inc
push
stc
mov
ljmp
jecxz
sub
and
nop
stc
jmp
enter
test
mov
mov
pop
sti
sar
dec
mov
addl
add
xor
shr
push
mov
pop
addl
jecxz
cmpsb
or
add
clc
add
add
adc
pop
pusha
jecxz
mov
inc
in
lret
mov
inc
inc
push
insl
or
adc
loope
mov
add
inc
push
adc
mov
idiv
test
decl
xchg
add
out
add
outsl
aad
pmaxub
or
aaa
add
jae
call
or
jl
add
ja
test
ss
movsb
add
fdivrp
es
fisubrs
aas
fidivl
or
cmpsb
dec
add
mov
mov
dec
clc
jmp
test
mov
call
ja
int3
mov
cmp
inc
push
dec
cltd
jmp
or
fiadds
xor
adc
call
ficomps
out
fisubs
cmp
push
outsb
mov
ficompl
push
jo
push
dec
test
sub
adc
jg
adc
add
in
xchg
mov
sub
cmp
adc
imul
out
sub
cmp
xor
jle
pop
mov
pop
jo
rorb
xor
cmpl
das
vpshufd
sbb
aas
pop
xchg
dec
add
shlb
xchg
leave
call
repz
jecxz
or
shl
xlat
repz
and
cmpsl
rcrl
cs
add
inc
ret
mov
repz
sbb
aas
and
push
push
mov
ficoms
sbb
dec
add
fisttpl
mov
ljmp
jecxz
dec
push
std
and
stc
jmp
or
das
mov
sub
pop
mov
pop
sti
sar
push
mov
addl
add
add
mov
or
push
mov
push
addl
jecxz
xchg
push
xchg
sub
add
xor
roll
lret
adc
add
jecxz
cmpsb
push
inc
in
iret
jae
jl
or
sbb
jbe
psraw
push
add
cmpsb
adc
cmp
aas
dec
or
sldt
push
addl
shlb
jae
push
test
js
orl
call
inc
add
sub
jge
cmpb
lds
sub
add
ja
decl
push
mov
in
add
adc
ja
lcall
mov
fsincos
xor
and
dec
decb
lock
pop
push
and
mov
shll
mulb
lds
call
hlt
addr16
fnstenv
dec
push
jg
jb
adc
les
rolb
daa
cmp
stos
xor
mov
add
pop
out
into
xchg
lods
scas
pop
fistl
jnp
shrl
mov
xchg
test
in
sbb
ret
pop
outsb
ds
cwtl
sub
popa
rcll
cmp
test
fstl
mov
jp
insb
into
mov
cmpsl
rcrb
sub
cmp
mov
xchg
fildl
rorl
sarb
cmp
rcrb
in
push
sar
cmc
pop
dec
call
fstl
add
mov
or
jmp
fstl
test
sbb
mov
xchg
push
add
fstl
add
lret
jmp
dec
xchg
mov
fstl
jge
cmp
and
add
test
fisubrs
sbb
bound
dec
push
loopne
pop
push
or
mov
inc
pop
mov
fistpl
mov
pop
shr
add
add
or
sub
mov
push
sub
xchg
ja
mov
dec
je
stos
cmp
fisttps
inc
or
testl
ja
cmp
mov
add
add
mov
or
mov
pushl
adc
mov
sbb
xor
aaa
or
xor
outsb
inc
fidivrs
push
lods
inc
lock
sbb
add
ja
jns
ja
sbbl
lcall
or
add
ja
cli
stos
fistpll
std
or
std
fisubrs
decb
nop
lret
movsb
ds
scas
or
or
fcomps
in
adcb
sbb
sbb
sbb
ds
add
ja
add
ja
add
decb
pusha
pop
scas
stc
and
popf
stc
sbb
ds
mov
cmpsb
pop
sbb
std
test
js
dec
loop
movsb
xchg
popa
and
loop
scas
repz
loopne
mov
xchg
mov
dec
mov
test
add
pop
lcall
xchg
inc
adc
fbld
add
dec
movsb
mov
orl
mov
pop
sarl
push
outsb
xchg
xlat
mov
xchg
pop
or
add
fimuls
roll
fstps
data16
cmc
add
xchg
sub
cmc
xlat
add
frndint
sbb
cmpsb
jo
mov
inc
cmp
subl
sbb
out
fists
add
pop
fidivs
mov
pop
sub
adc
cmp
jno
cmpsl
lea
adc
sbb
jge
aad
xchg
std
cs
sub
and
cmp
adc
loope
push
dec
sbb
xor
jb
adc
xor
js
xlat
fstl
xchg
enter
push
xchg
incl
cmp
pop
add
adc
cmpl
pop
mov
str
mov
mov
orl
pop
xchg
add
mov
xorb
dec
cmp
and
add
inc
sub
jnp
shll
jne
mov
adc
orb
push
pop
pop
movsb
idiv
nop
rolb
add
and
dec
or
fsubp
sahf
stc
and
ret
adc
cmp
lret
out
fidivs
in
fimuls
cmp
mov
in
cmp
xchg
in
cmp
mov
cmp
loope
cmp
in
cmp
inc
jmp
cmp
or
cmp
ficomps
ljmp
ss
cmp
call
into
cmp
adc
cmp
sbb
cmp
xlat
cmp
rcl
fidivs
sarb
jo
cmp
test
cmp
adc
ljmp
adc
lock
mov
icebp
ret
lock
push
sub
sbb
mov
ficompl
out
cmp
add
push
mov
mov
cmp
mov
sbb
mov
test
rcr
mov
pop
inc
mov
lea
add
adc
shlb
loop
ret
jg
push
cmpl
popf
sub
and
sbb
push
je
bound
ljmp
push
lret
xchg
push
and
or
xchg
int
bound
rolb
leave
xchg
inc
rorl
iret
clc
sbb
push
jne
shlb
mov
mov
outsb
aam
jb
loope
lods
popa
adc
jmp
push
jp
cmp
inc
in
pop
push
jae
imul
mov
mov
xchg
shlb
dec
cld
lods
iret
pop
pop
jbe
or
fs
adcl
inc
mov
call
adc
add
mov
pop
les
int3
mov
mov
push
xchg
inc
dec
mov
nop
cmp
jb
add
adc
inc
clc
popf
testl
daa
pop
lea
dec
call
cld
iret
sti
addl
or
or
jbe
inc
pop
cmp
fwait
mov
sahf
adc
mov
mov
cmp
and
rorb
dec
or
lcall
mov
mov
cmp
fsubl
fidivs
leave
int3
xchg
popf
mov
pop
cmp
dec
add
mov
cltd
test
push
push
cli
mov
enter
xchg
pop
xor
test
xchg
mov
aam
and
test
jle
shl
scas
popf
jl
or
js
movsb
or
mov
jle
fwait
mov
push
mov
push
push
inc
into
pop
mov
testl
in
movsb
xchg
imul
sbb
push
decl
or
andl
jle
lcall
test
xchg
push
aam
push
aad
imul
lods
dec
xchg
enter
xchg
test
or
and
xchg
sbb
mov
add
push
jge
adc
test
and
sub
xchg
hlt
or
fistps
test
pusha
push
add
mov
jge
jb
xchg
inc
loope
addb
out
js
jo
fiaddl
mov
jo
add
mov
add
adc
mov
ds
adc
int3
jae
int3
int3
xchg
dec
int3
int3
jae
int3
int3
fimull
dec
mov
and
xor
cli
push
leave
inc
dec
mov
jno
in
or
call
je
adc
pop
and
pop
andl
bound
pop
jle
add
mov
cmp
sbb
inc
fmull
add
call
std
insb
out
xor
addr16
xchg
test
incl
fisubrs
inc
imul
xchg
not
je
std
fisubrs
or
std
fsubrp
cmp
mov
lahf
add
imul
xchg
in
dec
out
std
adc
lods
mov
push
out
add
insb
fmul
sub
inc
mov
data16
sub
xchg
jb
cs
hlt
cmpb
clc
pop
pop
or
ja
lcall
pop
decl
gs
daa
xchg
arpl
fisubrs
fsubp
adc
push
data16
cmpsl
adc
aam
xor
nop
loopne
inc
out
pop
clc
pop
loope
xor
pop
data16
adc
push
leave
iret
lret
inc
dec
pop
cmp
xor
or
mov
aad
add
cwtl
stc
jnp
fmull
je
pop
push
jns
xor
or
pusha
pop
jne
sub
out
fs
inc
loope
into
out
out
xor
into
jo
or
test
sub
xchg
jle
dec
ja
out
jl
adc
ja
push
jp
add
je
xor
sti
ret
icebp
enter
ds
sbb
insb
jge
or
test
aad
push
jb
add
pop
pop
ja
mov
jb
idiv
adc
jne
test
ds
call
add
adc
movl
mov
in
push
dec
push
add
sbb
add
les
in
mov
pop
fwait
mov
ret
adc
sahf
add
hlt
add
pop
jae
dec
clc
mov
adc
push
sub
call
in
inc
notl
cld
test
mov
fildl
add
adc
into
call
adc
sbb
cmp
jge
imul
inc
fdivp
xor
add
xchg
test
push
xchg
add
hlt
pop
sub
fisubrs
iret
ficoms
outsb
call
testl
outsb
sti
xchg
repnz
push
sub
test
or
gs
cs
adc
iret
push
or
pop
insl
stc
call
pop
sti
mov
insl
std
push
push
fldenv
or
xchg
pop
xor
add
btc
adc
ljmp
xchg
pop
int3
repnz
loope
ds
lahf
mull
loop
cmpsl
arpl
out
cmp
push
sub
push
mov
pop
les
dec
pop
xor
addr16
setle
aam
arpl
pop
or
or
fiadds
loopne
push
mulb
leave
jecxz
pusha
dec
inc
or
out
add
sahf
int
and
shlb
popl
inc
repnz
sub
out
add
dec
js
iret
add
mov
insb
and
jns
dec
push
cmp
and
popa
mov
cs
mov
sti
adc
aam
out
and
add
sbb
sub
xchg
je
dec
ja
lods
pop
loopne
es
call
push
sbb
test
insb
ja
xor
lds
pop
ja
push
or
test
insb
ja
sub
pop
adc
ja
add
fcoml
dec
or
data16
pushl
les
push
pop
test
sahf
idiv
inc
leave
sti
push
cmp
or
sbb
push
mov
add
push
pop
test
cld
add
lock
sbbl
inc
fcoml
dec
push
dec
cwtl
push
inc
ja
jnp
mov
cmc
pushl
hlt
dec
cld
add
xchg
cs
and
rorb
dec
cmc
pushl
jne
xlat
xor
mov
test
xchg
sub
sbb
cld
dec
xor
adc
inc
test
push
roll
out
scas
mov
out
mov
test
out
or
add
adc
cmc
or
sub
jl
mov
xor
lcall
pop
jl
imul
push
jle
loopne
lock
or
add
adc
add
sarb
add
loop
sub
and
sbb
repnz
sub
mov
aam
ss
push
fadds
popf
jl
aam
jl
fxam
dec
push
xchg
jl
inc
mov
fistpll
add
dec
fildl
mov
int3
repnz
push
jnp
imul
enter
sbb
lea
push
and
jb
in
cltd
stc
cmpsb
popa
mov
pop
mov
test
push
push
stc
push
or
jle
push
mov
pop
fisttpll
mov
stc
push
or
sub
jae
xor
inc
push
repnz
and
call
push
or
sub
jae
and
inc
fstps
xchg
cwtl
hlt
inc
call
stc
push
or
sub
jae
mov
mov
pop
fstpl
xchg
gs
add
dec
add
ja
sti
cmpb
stos
cmp
rclb
xchg
imul
or
idiv
push
dec
je
inc
stos
testl
pop
sbb
ljmp
xchg
les
push
je
xor
testl
movsb
or
das
push
or
cmpl
sahf
jnp
sbbl
cld
sub
lea
inc
test
into
daa
lods
mov
les
pop
inc
mov
pop
mov
jl
cmpsl
ja
into
int3
cmp
pop
xchg
sbbl
jl
xchg
ja
scas
cld
xor
xchg
mov
pop
cmp
add
js
sahf
test
mov
stc
pop
cmp
add
ss
into
cld
cmp
das
repz
stc
pop
cmp
jl
data16
push
int
enter
mov
inc
xchg
stos
pop
pop
push
push
add
insb
pop
jns
and
push
mov
xchg
stos
pop
pop
push
adc
sbbl
movsl
insb
pusha
push
push
fwait
add
popa
fldl
test
xchg
sub
ficoms
outsb
inc
out
xchg
daa
pop
add
sti
pop
or
dec
add
xor
cltd
in
jns
insl
outsb
cmp
fcmovb
pop
inc
fidivrl
and
stos
sar
hlt
lock
xor
in
lret
jmp
jb
out
add
xchg
inc
subl
in
jp
push
jb
insb
test
sub
outsl
mov
dec
aaa
push
jae
jmp
pop
push
jae
pop
sar
sbb
les
jmp
jge
shrl
xor
pop
jb
and
int3
adc
cwtl
fs
jge
xchg
cmp
loop
pushf
loope
ficompl
jmp
add
in
cmp
in
lods
and
inc
sub
jmp
out
dec
mov
jne
rorl
lret
incl
rorb
jo
pushl
dec
ds
jle
hlt
je
in
cmp
pop
or
push
in
cmp
imul
jge
iret
pusha
nop
shlb
cmp
pop
jae
iret
and
addr16
adc
mov
xchg
and
into
pop
imul
rclb
add
addl
js
jbe
jp
jbe
mov
popa
idivl
sbb
jp
int
jae
testb
faddp
out
mov
imul
idivl
push
stos
lds
or
roll
jae
fidivrs
dec
gs
xchg
enter
mov
js
fincstp
inc
cltd
jae
testb
fisubrs
push
addb
stc
mov
data16
daa
adc
xor
hlt
push
xchg
fsts
xor
shlb
push
imul
ja
jl
push
out
faddp
xor
add
xchg
add
mov
push
pop
dec
pop
adc
out
jmp
lcall
imul
jp
out
push
in
movb
loopne
push
adcb
negl
push
ret
out
and
aam
cmp
out
jmp
pop
andb
rolb
es
add
adc
sbb
push
jge
ds
adc
xor
in
flds
dec
in
ret
fsts
je
mov
xchg
mov
stos
pop
inc
jae
pop
out
jmp
aad
adc
fstl
mov
dec
jl
jb
sbb
test
in
jns
pop
cld
dec
push
mov
cmp
int3
lret
test
int3
xor
jmp
inc
dec
test
out
sbb
out
sbb
inc
adc
out
adc
out
or
push
bound
mul
cmp
pop
dec
hlt
lcall
mov
and
dec
and
repnz
push
jl
or
shl
pop
inc
imul
dec
fildl
add
or
push
or
mov
xor
xlat
add
adc
fdivp
jl
fidivrs
test
mov
add
jns
shlb
std
fidivrs
into
je
addb
pop
add
lds
test
jbe
test
mov
int3
sub
ja
nop
repnz
pop
test
or
pop
mov
add
add
and
cwtl
adc
cmp
pop
and
cmpsb
push
ja
sbb
test
sarl
jb
in
xorb
ds
pushf
test
sbbb
mov
sbb
dec
jb
xor
ficomps
out
fs
add
fwait
jno
ficoms
out
fdivrp
out
lcall
add
mov
adc
mov
cmp
sub
ss
add
adc
xor
lock
andb
fs
jno
and
mov
pop
or
or
int3
sub
es
movsb
movsl
lea
pop
jne
xchg
scas
imul
in
add
sbb
xchg
xor
adc
bound
adc
jmp
or
add
jmp
push
je
pusha
pop
stc
cs
jb
stos
imul
dec
bound
jge
out
rclb
sbb
pop
roll
je
adc
cld
out
xor
out
add
sbb
mov
jnp
and
icebp
push
cld
ret
lds
jge
dec
push
jnp
rclb
cmc
push
int3
ret
push
xchg
testl
inc
negb
test
push
add
aaa
and
cld
fiaddl
jge
lret
add
add
orl
add
push
cmpb
inc
scas
repnz
call
pop
scas
add
xchg
xrelease
fmul
sti
or
jae,pt
mov
add
cltd
sbb
pop
xor
adc
jns
dec
fdivrp
fiadds
clc
add
cmc
sti
scas
out
das
push
add
inc
sub
jg
sbb
shlb
dec
sub
stos
dec
xor
push
and
or
cwtl
ficoms
out
insl
sbb
mov
out
push
xchg
inc
out
jmp
imul
mov
js
jne
arpl
loop
daa
clc
fmull
outsb
iret
xchg
popl
adc
insb
orl
adc
ficoms
xchg
or
neg
mov
pop
lret
xchg
jnp
xchg
mov
nop
popa
fiaddl
sbb
inc
xchg
or
fadds
ret
jmp
push
jnp
sahf
pop
lea
fmull
mov
roll
jb
jbe
dec
add
sbb
push
push
stc
ljmp
jmp
jmp
mov
or
and
pop
pusha
mov
push
pop
jb
lds
push
jne
std
rorb
xchg
sbb
pop
rcll
pop
add
add
pushf
loopne
testl
negb
notl
or
mov
pop
add
ret
dec
mov
cld
xor
xchg
pop
push
xor
inc
test
push
or
cld
push
add
pop
mov
mov
pop
add
pop
mov
add
or
loope
incl
add
aaa
xchg
inc
adc
xchg
jbe
je
or
push
jno
add
xor
faddp
adc
pop
jb
adc
jae
out
shlb
jp
push
lret
adc
jb
mov
ja
jl
jb
or
cld
fsubp
ret
cmp
sbbb
addl
arpl
repnz
or
ss
or
in
jns
clc
add
fsubp
add
imul
mov
push
in
cmpsl
roll
std
dec
add
adc
add
ror
out
adc
andb
fs
out
and
ficoms
outsb
push
pop
xchg
ficoms
pop
xchg
adc
add
adc
add
rorl
lahf
pcmpgtb
pop
out
int3
and
fisttpll
stos
sub
out
lds
adc
xchg
adc
addb
dec
out
ficoms
xchg
cld
loop
jecxz
bound
add
mov
jmp
loope
xchg
into
aad
mov
push
js
pop
ficompl
jmp
rcrb
mov
xchg
pop
shrl
fcomi
jb
add
test
lret
jns
shrb
cwtl
push
push
sbb
adc
cmpsl
add
add
push
ret
mov
adc
jmp
cwtl
push
call
imul
in
push
roll
insb
popf
loope
bound
out
add
pop
or
mov
rolb
mov
jl
std
mov
add
or
mov
adc
push
add
clc
jge
iret
inc
dec
adc
imul
sub
xchg
add
mov
jo,pt
ja
add
adc
jle
sub
adc
push
or
mov
cli
jge
adc
cld
hlt
pop
or
mov
addb
push
pop
in
out
push
ret
push
pop
fidivrs
cmp
mov
pop
pop
jne
gs
mov
sbb
inc
int3
add
sbb
in
lods
mov
pop
pop
addl
or
sub
call
addr16
adc
or
and
fidivrs
fisubrs
add
idiv
fidivrs
aaa
inc
and
fidivrs
test
cmp
dec
adc
mov
or
std
clc
lret
in
cmp
cltd
lret
loope
jmp
out
loopne
test
push
xor
lret
sub
daa
push
xchg
jnp
adc
out
mov
add
adc
add
dec
jecxz
sbb
dec
adc
dec
stos
dec
cmp
ret
or
pop
out
das
les
jno
out
fimuls
bound
xchg
insl
fs
jns
xchg
pop
jns
pop
add
pop
add
mov
jge
xchg
add
pop
stc
rcrb
adc
cltd
pop
hlt
pushl
imul
pop
push
mov
push
or
cmpsl
xchg
inc
int
xchg
xchg
call
loope
stc
mov
pop
hlt
scas
pop
push
scas
and
call
push
adc
push
add
pop
jle
ss
or
pop
stc
pop
mov
gs
pop
push
imul
mov
jnp
mov
fdiv
lea
dec
ljmp
in
call
fstpt
dec
lcall
cmp
test
das
ret
sub
jae
je
testb
sub
test
cmp
imul
xchg
idiv
inc
roll
test
cld
orb
cmp
push
or
out
sub
testb
inc
jl
rolb
cmpl
outsl
cli
popa
xor
cli
jo
sbb
rcl
jle
inc
fidivrs
cmp
mov
arpl
stc
sub
mov
jno
stc
push
pop
addr16
adc
cmp
cmpsl
jmp
test
jno
icebp
repz
testl
jb
pop
cmpsb
stc
sbbb
xchg
push
subb
jno
shl
sti
in
je
xchg
pop
pop
lock
aam
or
fucomp
mov
pop
mov
ja
addr16
pop
nop
cli
push
and
test
pop
adc
or
dec
jmp
push
fucom
sbbb
cmpb
insb
and
pop
fiaddl
pop
imul
lock
sahf
jne
xchg
repz
push
nop
xchg
fsts
mov
xchg
jne
rcrl
push
xorb
xchg
push
add
mov
push
push
or
aam
aad
push
push
andl
pop
push
lahf
lds
ss
mov
repnz
ret
cmc
rclb
ljmp
stc
push
mov
dec
std
or
mov
mov
stc
add
insl
stc
out
dec
add
popf
fdivr
imul
ret
out
sbb
hlt
mov
pop
call
push
sbb
jle
push
mov
lods
lea
incl
hlt
xor
out
pop
or
jle
stos
adc
xor
testb
out
pushl
fdivrl
dec
xlat
mov
mov
fimuls
lret
pushl
mov
mov
aam
xor
xor
imul
push
mov
pushl
test
cld
subb
inc
xor
sarl
xor
incl
sbb
testl
sub
xchg
test
dec
outsb
stc
cltd
fdivrl
hlt
mov
insb
stc
pop
and
sbbl
jns
bound
and
imulb
pop
rep
stc
inc
lock
cmp
insl
xchg
outsb
stc
sub
cmp
and
je
ljmp
pop
or
stc
fistl
xchg
insb
stc
loope
jle
rclb
mov
repz
push
xchg
pop
or
jb
dec
jmp
sahf
fucom
xchg
push
push
arpl
outsb
mov
push
push
jb
pop
inc
out
jmp
iret
jb
push
jae
add
jge
loop
cltd
fucomip
sbb
inc
imul
xchg
push
or
add
jb
rcll
daa
nop
and
mov
adc
iret
dec
mov
or
mull
lcall
pop
push
adc
ret
xchg
stc
xchg
inc
addb
das
pop
xchg
stc
jle
mov
xchg
mov
mov
mov
dec
or
sub
adc
call
pop
test
xor
or
push
das
mov
jecxz
mov
inc
int3
sub
mov
mov
shlb
fsubrl
ds
xchg
add
pushf
mov
in
inc
sub
cmp
mull
push
xchg
mov
sti
push
inc
push
mov
mov
or
movsb
stc
incl
insl
hlt
ljmp
les
aad
pop
lds
lret
stos
adc
int3
mov
aad
push
mov
pop
add
cmc
or
subl
je
add
test
sub
addb
inc
sbb
cmp
push
fmulp
add
sarl
cmp
lods
cmpsl
lret
fs
lret
stos
jae
int3
mov
mov
jne
pop
sar
push
in
mov
jnp
pop
testl
ficoms
jno
out
rcrl
loope
jecxz
movsl
xchg
imul
into
mov
ds
call
imul
stc
imul
je
dec
pop
lods
imul
out
or
adc
mov
push
ror
bound
inc
lret
fcompl
adc
add
sbb
xorb
mov
aam
add
adc
fnstenv
dec
es
fidivrs
add
pushf
mov
popa
in
jp
and
out
sbb
outsl
ljmp
pop
add
adc
inc
int
mov
inc
es
insb
add
inc
out
test
push
push
add
fwait
add
arpl
or
fdivs
push
sbb
jmp
lret
cmp
fstl
add
cwtl
add
add
int
out
pop
cmp
adc
int
jmp
sbb
fadd
adc
fnsave
stc
jmp
fstl
add
fstl
add
mov
jne
in
je
fcomps
popa
loop
add
incl
jmp
pushf
int3
pushl
jp
add
adc
movsl
jl
inc
mov
mov
push
movl
cmp
add
outsb
cmp
mov
inc
xchg
icebp
or
outsl
xor
ljmp
add
adc
add
xchg
add
pushf
xchg
add
push
adc
add
leave
jg
xchg
adcl
mov
mov
add
inc
add
add
and
add
or
mov
cwtl
aaa
std
pushl
aaa
std
pop
int
lds
mov
sub
imul
adc
inc
jl
add
scas
negl
clc
add
loop
jae
push
adc
xchg
mov
pop
xchg
jae
mov
add
xor
cmp
fsubp
int3
clc
popa
push
rcll
insb
test
adc
jle
jmp
adc
pop
sbb
sbb
adc
sub
add
out
sarl
dec
add
adc
pop
dec
dec
lret
push
out
add
pop
stos
aaa
stos
pop
sbb
ret
jg
sbb
add
stos
add
ficoms
out
pop
xor
lret
out
ficoms
outsb
xchg
push
call
into
or
and
adc
sbbl
sub
popa
dec
out
mov
add
fwait
adc
fistps
shr
adc
jmp
and
adc
jmp
fstl
add
pop
int3
lods
mov
int3
sbb
mov
clc
out
hlt
dec
pop
mov
dec
dec
scas
flds
lock
sbb
push
mov
sub
sub
xchg
ret
mov
setnp
sub
repnz
mov
int
add
mov
lea
les
mov
testb
lret
add
int3
cmp
adc
sbb
push
gs
dec
hlt
lock
dec
push
or
and
mov
cmp
inc
clc
lcall
push
mov
int3
mov
int3
int3
mov
int3
int3
repnz
jmp
icebp
lret
insb
or
into
addb
in
je
int
test
cmp
inc
sbb
inc
mov
mov
jl
dec
push
mov
shrb
incl
clc
jmp
push
sahf
aaa
test
clc
lods
add
gs
pop
push
adc
xor
sub
xor
and
jl
shlb
inc
xchg
sub
arpl
and
sub
addr16
gs
adc
sub
fiadds
jmp
out
cmpxchg
push
cmp
clc
dec
ljmp
sarb
pop
push
xchg
mov
stos
pop
sub
mov
lea
cld
setbe
es
data16
xor
pushf
xchg
icebp
sub
xor
jl
dec
jo
adc
shl
jl
dec
data16
pop
ret
push
jnp
cmp
ret
icebp
dec
mov
data16
add
xchg
scas
push
pop
mov
add
or
pop
into
sahf
jp
inc
cmp
pop
cs
lcall
aaa
stos
push
stos
aaa
mov
xor
sub
add
dec
icebp
pop
xor
mov
xchg
ret
sub
jmp
fstl
add
fcomip
insb
mov
pcmpeqb
and
cwtl
das
dec
adc
out
sar
imul
andb
sti
sbb
sbb
mov
stos
push
push
int3
sbb
xor
or
dec
sbbl
push
je
lea
add
mov
push
lods
or
push
push
stc
or
pop
mov
enter
aas
jl
mov
enter
ror
int3
jecxz
int3
int3
add
or
int3
add
int3
int3
push
jmp
jp
rolb
push
cmp
mov
push
stc
aaa
dec
or
or
inc
add
dec
inc
testl
cmp
mov
xor
dec
stc
notl
push
hlt
or
inc
jecxz
add
dec
mov
int3
xchg
movsb
xor
stos
jl
int3
mov
lods
jle
fidivs
std
mov
cmp
incl
or
push
push
sub
loop
ljmp
aaa
cmpsb
sbb
aaa
std
sub
xchg
jbe
pop
clc
clc
inc
mov
jb
mov
imul
fidivs
bound
add
add
repnz
mov
sub
decl
pop
std
call
stos
adc
aaa
mov
adc
add
xchg
movsb
add
adc
shll
push
stos
push
mov
mov
push
sbb
jb
pop
je
sbb
insl
fabs
cltd
jae
add
out
gs
mov
xchg
mov
adc
ficoml
out
dec
cwtl
mov
ficoms
ficompl
repnz
sbbl
jmp
sbb
add
outsl
mov
add
das
clc
flds
adc
add
fisttpll
adc
int3
sbbl
lcall
gs
adc
fwait
out
inc
and
jmp
in
mov
sub
push
cmc
fstl
test
fmuls
mov
std
lds
push
mov
loopne
add
cwtl
lea
add
pop
cmpsl
bound
add
push
mov
jecxz
add
sub
int3
popf
cs
int3
add
loopne
int3
loop
in
cmpl
push
ret
jl
sbb
add
jnp
mov
sbb
repnz
adcb
test
sbb
mov
stos
push
mov
xchg
ret
cmp
cmp
add
orl
inc
jno
add
jno
add
push
orl
pop
jae
add
cmp
inc
mov
mov
mov
std
sub
stc
test
mov
sti
addr16
add
fisubrs
mov
aaa
std
mov
mov
xchg
sbb
jns
sub
test
ror
dec
scas
leave
repz
adc
xchg
je
sahf
ds
jp
imul
in
gs
scas
js
orl
inc
adc
out
lds
fimull
das
adc
ja
sbb
add
pop
rcll
push
outsl
fdivl
stos
pop
ljmp
adc
mov
lea
fiaddl
jo
xchg
fs
out
sub
adc
add
add
xchg
pushf
pop
cltd
stos
mov
ficoms
fs
add
add
mov
out
ficoms
pushw
fadds
push
jl
arpl
adc
inc
mov
nop
adc
dec
jecxz
dec
sbb
daa
mov
fstpl
imul
mov
xchg
fwait
xchg
stos
xchg
or
fs
push
bound
fldl
fisttpll
add
cmp
sbb
mov
fbld
cmp
jmp
mov
add
add
xchg
cmc
bound
push
push
or
aas
mov
adc
xchg
stc
add
cmpb
insl
loopne
fisubrs
xor
adcl
inc
mov
jg
mov
loopne
int3
jae
lret
int3
fimull
dec
push
call
or
lret
fdiv
jmp
addb
inc
pop
add
test
add
add
fs
mov
lcall
mov
xchg
rorl
iret
incl
mov
cld
lods
pop
add
ficomps
xchg
push
xor
xor
or
jl
sub
in
lods
cmp
call
inc
jecxz
pop
mov
add
pop
lods
push
add
mov
inc
faddl
add
std
in
or
std
ljmp
mov
jae
jo
add
daa
mov
shl
xor
gs
mov
daa
std
call
pop
in
rolb
fisubs
mov
adc
and
les
mov
pop
movsw
push
xor
dec
sub
dec
pushf
mov
xchg
sti
lcall
push
add
arpl
push
pop
shrl
mov
add
adc
add
xchg
orb
add
add
xchg
test
push
popa
mov
out
arpl
xchg
sbb
cmp
adc
cmp
loope
repnz
test
ficoms
add
add
or
add
push
je
jmp
dec
jl
outsl
fistl
add
jl
jmp
fstl
and
and
xorl
icebp
pop
test
shrb
add
in
cwtl
push
cmp
jb
and
fucom
jle
xor
stc
jb
and
clc
pusha
mov
adc
incl
stc
push
adc
shll
test
pop
mov
mov
fsubrl
pop
mov
adc
in
add
hlt
enter
xchg
cmovb
clc
lcall
idivb
rdpmc
jne
or
xor
add
add
mov
push
popa
pshufw
jl
das
std
call
popa
bound
sarb
shrb
std
test
inc
std
jmp
out
test
mov
add
jmp
mov
mov
sub
cmp
push
adcb
nop
push
std
call
push
bound
xchg
adc
daa
insb
pop
add
std
incl
xchg
pusha
test
out
ljmp
add
add
or
xchg
icebp
dec
cmp
xor
in
or
jns
ficoms
jb
sub
out
sub
pop
icebp
adc
into
dec
test
in
add
xchg
mov
mov
jae
and
add
cli
mov
icebp
add
mov
hlt
ret
and
pop
or
mov
outsl
lock
ja
in
adc
mov
jg
sub
xchg
dec
jno
in
pop
imul
mov
bound
add
les
bound
jl
jmp
inc
add
mov
ljmp
add
push
mov
xchg
mov
xchg
leave
pop
jo
xor
loopne
jns
jmp
addr16
mov
in
mov
inc
adc
and
jns
and
jmp
jno
test
pop
mov
jne
jbe
or
shll
jp
mov
nop
mov
mov
adc
push
inc
adc
les
push
add
xchg
mov
push
sahf
adc
notl
jnp
in
push
xchg
push
adc
push
mov
stc
dec
push
icebp
mov
push
add
push
scas
nop
xchg
add
cs
orb
cmp
nop
mov
fdivrp
out
test
jmp
push
gs
pop
call
push
mov
mov
pop
fs
test
mov
mov
mov
mov
xor
push
xchg
push
mov
aad
decl
mov
sti
js
fwait
mov
mov
xor
js
pop
test
jmp
add
into
add
xchg
std
fstl
xchg
jmp
mov
test
gs
adc
mov
lcall
pusha
cld
pop
push
fwait
int3
adc
mov
sbb
out
or
popf
sub
mov
pop
mov
outsb
lret
jae
and
pop
add
and
dec
add
addb
jae
pop
out
jl
aas
fwait
int3
adc
push
movntq
cmp
mov
inc
ret
sub
add
adc
lcall
ljmp
sbb
jmp
jne
mov
push
verw
cli
loope
pop
push
test
push
inc
lea
xor
jb
and
jmp
bound
xor
mov
test
pop
arpl
mov
nop
mov
test
and
xor
jmp
popf
jecxz
xchg
pop
add
push
loopne
inc
dec
jns
fstl
in
les
stc
jmp
cld
fimuls
xchg
add
je
icebp
mov
orl
add
adc
xorl
push
mov
mov
shll
dec
frstor
shlb
adc
add
mov
inc
or
add
mov
or
or
divl
or
xchg
mov
ret
mov
inc
mov
mov
in
lret
xor
cmp
insl
mov
lahf
and
dec
cmp
call
push
sub
pop
adc
daa
mov
shl
sub
incl
or
shll
xchg
fisubrs
std
shlb
pop
or
sub
fsubp
shl
sub
lcall
dec
add
je
or
dec
stc
stc
popa
scas
push
gs
mov
int3
adc
pop
adc
in
adc
mov
xor
push
mov
lea
ficoms
out
mov
cmp
stos
das
pop
shr
sub
cld
pop
jno
in
adc
jl
or
ss
add
fadds
add
pop
jns
sbb
add
cli
jl
or
inc
mov
add
mov
xor
call
sbb
pop
fwait
dec
xor
insb
jne
add
stos
outsl
mov
out
add
xorl
sbb
add
add
push
xchg
fimuls
stc
and
add
cltd
rolb
sbb
push
push
bound
add
add
pop
jae
js
jmp
fcmovbe
adc
jns
jmp
add
movb
daa
xor
xchg
popf
dec
xor
call
xlat
dec
bound
mov
mov
pusha
pop
js
jmp
int3
xor
arpl
jmp
cli
mov
mov
mov
mov
daa
stc
pushl
sti
cmpl
iret
data16
orb
cmp
sbb
mov
add
sub
xchg
and
or
mov
adcl
pop
or
inc
shrl
mov
pop
dec
test
sub
xor
xrelease
addb
and
xlat
xor
stc
fidivrs
mov
fidivrs
push
stc
cmpsl
lods
in
or
cld
fidivs
cmp
jl
cmp
popa
jmp
stc
add
jno
jno
aam
std
popa
gs
int3
jl
mov
mov
xor
js
mov
testl
fidivrs
js
repnz
out
test
repnz
mov
and
gs
fidivrs
stos
adc
dec
bound
imul
fidivrs
vcomiss
cmpl
xorl
xchg
out
cmp
jp
insl
icebp
add
adc
jg
cs
pop
mov
ficoms
outsb
inc
xchg
mov
sbb
and
js
cmp
test
adc
aas
add
pop
mov
repz
mov
cwtl
add
popa
fs
fnsave
add
jmp
and
jmp
push
popa
cwtl
adc
aaa
icebp
std
jo,pt
and
jmp
lock
sub
adc
out
insb
lods
lods
jmp
add
jmp
ret
stos
push
out
dec
in
icebp
inc
bound
jg
nop
inc
dec
sub
mov
mov
movsb
rclb
out
mov
add
test
test
mov
inc
add
and
popa
out
lea
lock
test
adc
adc
into
mov
sti
into
ds
push
add
sbb
syscall
imul
cmp
mov
jne
stc
in
cmpsl
mov
adc
add
inc
sbb
bswap
sar
incl
mov
aaa
sub
call
stos
int
hlt
mov
dec
fidivs
filds
dec
sub
and
cwtl
push
inc
std
jmp
jmp
inc
ljmp
jmp
jmp
sbb
iret
sahf
insb
mov
push
dec
xchg
adc
out
fmulp
mov
mov
scas
ljmp
inc
mov
mov
xor
xor
call
lret
loopne
std
pushl
dec
sub
out
cmp
mov
xor
jo
dec
mov
pop
fcomp
loope
orb
add
roll
ficoms
fmuls
add
xchg
push
imul
out
rcr
ret
je
add
add
testb
cmp
sti
push
dec
xor
vrcpps
mov
mov
imul
loope
test
fstl
out
stos
das
add
popa
imul
dec
pop
cltd
inc
icebp
pop
sub
add
xchg
xchg
pop
pop
mov
in
stc
rcl
jmp
insb
adc
frstor
jmp
ficoml
cltd
call
mov
scas
push
push
push
call
iret
sub
jb
std
xchg
aam
inc
aad
pop
cwtl
mov
jb
test
xchg
sbb
and
mov
sub
lds
out
je
adc
pop
repz
mov
fldl
sub
add
mov
scas
pop
cmc
cmpl
jle
sub
jecxz
mov
mov
mov
pop
inc
add
js
lods
mov
adc
adc
sub
movsl
je
mov
jne
add
add
data16
pop
rcll
mov
or
push
stos
lods
sbb
inc
push
or
mov
mov
jbe
out
loopne
gs
fidivrs
inc
inc
ljmp
jmp
xchg
xor
dec
xchg
jmp
sbb
test
out
cmpsl
or
andb
xlat
mov
dec
addr16
fidivrs
jbe
xchg
mov
inc
fidivs
repz
stc
cmc
and
add
xchg
cmpsl
repz
xchg
mov
adc
cld
inc
mov
sbb
sti
mov
add
pop
xor
out
pop
mov
popa
les
int
xchg
insb
jno
out
pop
mov
outsl
call
in
adc
inc
sahf
cld
ja
ret
pop
mov
clc
lods
outsl
je
out
push
mov
out
jp
roll
fidivs
aad
cmpl
scas
mov
cmp
ja
int3
adc
add
roll
fmulp
jmp
lret
mov
int3
mov
push
int3
lods
add
data16
lcall
add
ror
jle
and
ss
pushf
or
inc
pop
sub
iret
mov
jl
adc
jmp
pop
imul
mov
pop
movsl
adc
jmp
std
adc
jmp
fstl
nop
pop
jae
in
test
jmp
jl
add
adc
add
ror
test
dec
mov
fiadds
insb
xlat
inc
rorl
rolb
xor
jnp
lret
int3
mov
adc
mov
cmpsl
xchg
mov
push
std
orb
sbb
enter
addl
or
or
aaa
std
sub
add
mov
dec
xchg
push
add
sbb
inc
add
fiadds
sbb
loope
mov
push
inc
addb
adc
nop
es
incl
xchg
and
int3
sbb
int3
adc
std
dec
pop
mov
jp
xor
data16
jmp
adc
sbb
loop
adc
adc
push
mov
add
decb
pop
jl
test
xor
mov
loop
ds
shlb
bound
outsl
jl
adc
mov
stc
add
movsl
push
mov
push
stos
push
xchg
push
sbb
mov
xchg
sub
and
add
into
pop
int3
in
xchg
pop
or
push
add
inc
sahf
cld
pop
aam
mov
cs
inc
sbb
iret
and
mov
inc
outsl
adc
and
mov
inc
sub
cwtl
jecxz
xlat
shl
loopne
inc
jnp
push
xchg
add
adc
bound
lret
xchg
sbb
adc
cmc
cmpsl
aad
mov
push
sbb
sbb
sbb
xor
mov
repz
popa
fcoml
add
dec
inc
mov
sbb
ljmp
lret
aad
dec
sbb
cs
add
jecxz
into
mov
pop
mov
adc
and
inc
call
fs
cmpsl
shlb
add
xor
add
in
xorl
push
mov
xchg
inc
or
cmp
mov
int
push
lahf
xchg
inc
cld
dec
mov
xchg
mov
add
sldt
mov
lea
aaa
pop
sbb
leave
cmp
add
mov
or
pop
or
or
xorl
stc
push
xchg
enter
lret
data16
addb
es
inc
xlat
jp
ficomps
add
sub
dec
pop
adc
jp
push
out
mov
fisubrs
xchg
scas
xchg
pop
in
std
mov
sub
clc
mov
add
sub
ljmp
fs
sub
mov
stos
es
adc
fisubrs
std
std
mov
mov
sub
add
fisubs
push
cmc
pop
roll
jl
jp
ret
xor
jmp
adc
add
shrl
ljmp
adc
push
add
imul
je
fldl
fmulp
pop
xchg
add
outsb
inc
popa
mov
ficoms
mov
mov
pop
mov
add
xchg
popf
cmp
ficoms
outsb
mov
jl
loopne
adc
add
add
mov
in
adc
mov
stos
or
adc
mov
xchg
roll
jg
bound
daa
bound
mov
jmp
mov
add
pop
push
add
sub
mov
outsl
sbb
dec
icebp
jmp
mov
mov
pop
mov
cmp
xchg
cmp
mov
popa
and
in
sahf
sbb
cmc
fstl
cmc
push
jle
pop
mov
arpl
adc
fstl
add
push
xchg
mov
add
sbb
ljmp
cmpl
adc
mov
fdiv
pop
add
lret
int3
or
lret
int3
or
lret
int3
push
mov
mov
add
mov
xchg
or
jle
mov
add
xchg
loope
sub
testb
inc
loope
push
testb
adc
jmp
mov
cmp
stc
gs
test
adc
add
cmp
or
push
xchg
clc
sbb
daa
lahf
jl
lds
jb
outsl
mov
ja
push
xor
fiadds
sbb
sub
add
out
cmpsb
and
pop
xor
jnp
mov
aas
out
sub
pop
popf
loop
dec
push
cmp
ss
std
incl
addr16
lods
sarb
sub
pop
add
out
ret
push
fbstp
xlat
mov
sub
inc
and
mov
xchg
ficoms
data16
lcall
jl
cmp
fnstenv
out
xlat
bound
int3
adc
mov
add
xor
xchg
shl
mov
add
jmp
pop
addb
int
xlat
in
mov
int
test
add
add
fisubl
ficoms
sbb
mov
and
add
mov
scas
int3
dec
arpl
pop
push
pop
adc
fstl
nop
jno
adc
bound
pop
callw
cmc
push
pop
pushf
ret
in
mov
int3
sbb
es
int3
sub
pushf
pop
sub
out
fistl
stc
lods
sbb
cmp
sub
nopl
pop
push
xchg
add
fstl
push
cmpsb
and
add
fstl
jp
arpl
jl
ss
loope
push
testl
and
add
and
incl
push
add
sub
call
iret
out
mov
testb
testl
sarl
cli
mov
adc
add
decb
mov
push
add
mov
add
xlat
dec
loope
xor
testb
or
add
inc
sbb
test
mov
inc
or
add
ficomps
std
test
mov
cmpsb
cmp
nop
push
fwait
test
dec
loopne
jns
out
jnp
fisubs
add
fisubrs
add
sbb
add
fidivs
add
subb
jmp
add
inc
jle
lea
std
popa
addr16
es
xlat
mov
adc
adcb
out
pop
into
mov
fimuls
out
xchg
rcll
ret
fwait
xor
sbb
or
add
adc
aam
dec
dec
es
xor
ficoms
out
fs
icebp
add
mov
mov
adc
lcall
lea
out
add
pop
jns
in
adc
mov
pop
sbb
pop
sub
out
pop
jnp
adc
jmp
sub
mov
fcoms
add
inc
dec
bound
push
cmpb
pop
adc
loopne
pop
adc
fstl
mov
push
repnz
inc
cmc
in
aas
jmp
add
pop
stc
push
or
push
jmp
stc
jne
ret
pop
stc
out
mov
push
jb
mov
int3
cmp
and
test
mov
shl
adc
repnz
inc
adc
inc
addr16
add
pop
mov
adc
orl
incl
aaa
adc
orl
loop
add
testl
push
ret
dec
mov
push
jge
xchg
pop
test
cmp
mov
or
xor
test
movsb
and
adc
add
push
cld
clc
int3
push
out
cmpl
mov
pop
push
xor
fisubs
outsl
pop
jge,pn
jns
sbb
imul
and
inc
loopne
fdivrp
mov
or
test
mov
daa
std
or
add
fistps
dec
fstpl
sar
stos
sub
ss
add
movsb
cmpsl
and
ja,pn
fucomp
cld
mov
sub
neg
mov
sub
neg
out
cld
mov
daa
add
fstp
cld
mov
es
fucomp
cld
mov
adc
push
xchg
adc
push
jno
popf
add
sub
jmp
add
fiadds
push
adc
push
push
adc
push
xor
popf
add
push
xor
lods
add
push
adc
popf
add
push
adc
sub
push
icebp
nopl
sub
icebp
push
icebp
cvtps2pi
jmp
add
mov
cmp
sub
ficoms
add
add
nop
add
push
out
jb
or
into
sbb
loop
or
pusha
into
scas
aad
popa
inc
add
fstl
xchg
jmp
popf
sub
jbe
jmp
mov
cld
mov
loop
std
mov
pop
push
jmp
sbb
mov
loop
std
xor
pop
push
in
loop
std
and
pop
push
in
loop
std
xor
fistps
out
loop
std
and
pop
push
out
loop
std
xor
pop
push
loope
sbb
and
pop
push
add
ldmxcsr
or
scas
push
mov
scas
push
orl
push
jb
icebp
add
or
scas
push
push
or
jecxz
inc
out
aaa
push
or
mov
add
cld
clc
dec
pop
out
mov
cwtl
out
mov
maskmovq
testb
movsl
push
out
hlt
push
imul
loop
mov
lahf
outsb
lret
daa
cmp
stos
jno
out
mov
xor
mov
xor
in
and
mov
push
dec
jg
push
add
fisubrs
or
or
out
aas
nop
cld
sbb
and
movsl
hlt
std
sub
jbe
pop
addb
sbb
test
push
inc
in
test
stc
fisubs
std
jle
roll
ficomps
mov
add
mov
sub
out
pause
fidivrs
out
fiadds
mov
dec
cmpsl
add
popa
jmp
push
sar
adc
mov
fwait
loop
fiadds
add
jmp
sbb
xchg
lds
ficoms
out
pop
dec
mov
repnz
push
add
adc
add
push
out
fcomps
pop
push
push
sti
jp
rorb
xor
add
adc
notl
out
arpl
out
in
lods
call
adc
int
fwait
jmp
add
add
lods
and
mov
sbb
pinsrw
sub
dec
add
shl
loope
in
clc
jmp
push
xchg
aad
out
sub
sub
ficoms
loope
mov
repnz
iret
test
and
push
add
xchg
adc
inc
jmp
notl
add
mov
pushl
adc
xor
lahf
ljmp
adc
xor
adc
push
mov
mov
pushl
add
adc
fiaddl
or
ja
std
pushf
inc
pop
cmp
mov
add
pushf
aaa
out
cmp
das
testl
add
adc
inc
aaa
xchg
mov
sbbl
sarb
ljmp
testl
rolb
fstp
idiv
decl
mov
sbb
in
add
and
jmp
add
mov
sub
add
mov
xor
jg
scas
aaa
add
add
and
fdivp
icebp
add
out
aas
fidivs
mov
pop
not
aas
fidivrs
stc
fdivp
cld
sub
insb
add
sahf
divl
stc
or
add
adc
push
pop
or
loop
out
push
adc
hlt
cmp
adc
test
clc
ret
rcll
daa
mov
out
sti
dec
insb
add
in
push
out
mov
or
add
push
out
xchg
out
lret
dec
add
adc
jp
mov
mov
jmp
loope
fnstcw
xchg
test
or
add
rorl
add
push
out
xchg
test
aaa
and
lcall
mov
test
pop
cmp
add
sbb
movsb
in
and
or
leave
or
pushf
dec
std
push
bound
sbb
in
roll
test
jle
lahf
cmpsb
int3
lret
pushf
or
test
xchg
inc
icebp
call
adc
xor
pop
stos
push
lods
push
sbb
popa
dec
push
xor
cmp
ds
test
jp
xchg
pop
ficoml
add
sbb
addl
mov
adc
jmp
lret
mov
mov
ljmp
jl
insb
cmp
mov
pop
and
lea
rcrl
stos
lea
clc
mov
sbb
out
addl
incb
ja
and
add
sub
in
shll
mov
xchg
or
adc
inc
sbbl
lea
lods
sbb
fiadds
inc
cmp
push
add
xor
sti
jle
fdivp
cld
jle
idiv
stc
add
fdivp
cld
or
mov
stos
fisubl
fadds
loope
stc
incb
fmuls
dec
sub
add
and
jle
and
imulb
mov
adc
stc
arpl
pop
fcomip
cld
mov
dec
hlt
jns
jne
lods
add
repz
lods
repz
inc
adc
scas
add
sti
jb
into
mov
sbb
pop
stc
cmp
out
lods
adc
sub
jle
repnz
push
ficomps
ret
jecxz
shll
test
xchg
mov
ffreep
inc
cmpsl
rclb
mov
clc
bound
sub
add
lret
or
ret
pop
popa
pop
xchg
ljmp
jmp
mov
cmp
leave
pop
pop
stos
mov
repnz
pushf
xor
adc
sub
cmc
adc
add
cltd
jmp
mov
pop
int
lea
jmp
lds
pop
pop
es
lds
xchg
jmp
add
add
dec
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
loop
add
fcoml
add
mov
stc
testb
add
jnp
stc
fiadds
stc
mov
or
add
sub
decl
sub
aaa
add
dec
sub
testl
pop
sub
testl
mov
idivl
mov
idiv
nop
aam
push
cmp
je
outsl
mov
cmp
cld
mov
adc
or
addb
push
mov
into
orl
push
or
sub
fldl
add
je
sbbl
or
xchg
xor
scas
jo
and
jo
and
outsl
fdivp
ja
mov
sbb
addr16
fdivs
push
aaa
int3
int3
das
jne
ret
inc
movb
xchg
or
xchg
adc
test
adc
add
and
jae
and
repnz
jp
add
add
idiv
and
jl
and
or
xchg
lret
inc
fs
cwtl
mov
into
in
ficoms
push
hlt
add
insb
or
xchg
and
clc
mov
fildll
adc
adc
in
fidivrs
mov
pop
adc
test
adc
popf
inc
daa
adc
dec
lret
add
mov
mov
outsb
ret
cwtl
or
mov
add
out
ficoms
loop
pop
stc
fiadds
fdivrl
sbb
add
pop
adc
rclb
popf
in
jmp
or
shl
in
jmp
sbbl
or
jno
adc
popa
dec
push
into
jg
or
lea
int
pop
push
and
clc
fiadds
mov
ljmp
and
fisubs
add
fnstsw
je
movb
jmp
lods
push
lods
sbb
mov
in
jae
xchg
loopne
mov
mov
call
inc
lldt
daa
aam
dec
lret
in
add
adcl
add
mov
adc
call
mov
sbb
adc
addl
iret
rcrl
int3
int
lret
in
insl
push
test
rorb
loope
lcall
push
fdivrl
xor
lret
loopne
ss
pop
std
fdivp
xor
push
fidivs
std
add
lret
call
and
test
fisubrs
and
jle
and
repnz
fs
test
jg
popa
inc
add
notl
movsb
push
add
sub
out
stc
stc
jbe
ljmp
jnp
pop
cwtl
mov
jle
and
insl
or
testb
stos
add
repz
stc
test
mov
add
adc
ficoms
out
jle
movb
insl
mov
sbb
lock
add
mov
add
adc
xor
pop
push
dec
inc
iret
insl
mov
mov
iret
push
daa
add
pop
dec
ret
xlat
push
out
cwtl
mov
mov
dec
jnp
lret
shl
jnp
ljmp
sub
ficompl
add
mov
sub
sub
sub
int
test
mov
in
push
push
and
mov
jno
faddl
clc
je
test
dec
sub
pop
jbe
test
imul
test
mov
mov
faddl
and
roll
jno
add
in
inc
add
inc
push
test
fcoms
push
push
testb
stc
xor
fdivrp
or
mov
or
add
mov
scas
sub
mov
rep
adc
fnstsw
orl
hlt
dec
and
in
push
pop
push
jbe
js
aam
adcl
leave
add
sub
inc
imul
xchg
adc
add
cmpsl
sbb
lock
loope
xor
push
loop
lahf
add
test
add
je
pop
je
or
sar
rorb
push
and
aam
jge
mov
clc
add
cmp
int
imul
dec
fimull
push
out
stos
cmp
or
lods
jg,pn
incb
sub
gs
inc
sub
or
or
orl
jmp
sub
adc
mov
cld
fisubrs
or
inc
or
pop
pop
stos
jmp
or
cmpl
mov
je
lret
xchg
lds
call
jle
call
xchg
lds
out
jno
mov
adc
fadds
in
add
adc
ret
xchg
sub
lret
mov
xchg
std
sub
mov
cmpsb
std
and
xchg
test
add
dec
outsb
dec
pusha
adc
test
mov
adc
loop
lea
fdivrp
leave
sbb
mov
out
cwtl
add
adc
xlat
or
test
in
xchg
arpl
sub
sbb
dec
out
incl
adc
push
pop
or
and
jp
mov
cmp
or
sub
stc
lds
inc
int
add
jb
xor
shlb
or
ficoml
add
sub
lds
mov
jno
dec
lret
in
test
and
mov
add
mov
mov
in
in
pop
push
and
add
jno
loopne
and
fadds
and
mov
push
and
ret
lock
inc
mov
movsb
mov
jmp
jmp
adc
sub
fcmovne
jbe
ljmp
in
shl
mov
mov
pop
and
sub
lock
mov
imul
add
add
repz
add
add
sub
mov
test
sldt
or
test
mov
jmp
sldt
insb
adc
inc
sbb
add
fiaddl
sarl
and
mov
lods
fcoms
aas
mov
sub
push
xor
push
add
outsb
dec
mov
adc
ss
call
test
jo
and
out
test
in
and
call
aam
cld
ljmp
sub
shll
pop
jno
fiadds
and
ss
adc
cmp
adc
or
jnp
in
mov
outsb
mov
and
mov
add
adc
fxam
jecxz
lret
sbbb
mov
jbe
pop
mov
mov
int3
mov
xchg
bound
aam
or
dec
arpl
daa
and
add
mov
jne
sub
xchg
lea
xchg
inc
sti
sar
sbb
add
test
xchg
adc
add
nop
or
pop
rcll
addr16
dec
inc
and
mov
or
jmp
pop
jne
test
addl
pop
stc
mov
test
jno
push
cld
jb
xchg
mov
std
push
and
movsb
insl
cmp
call
pop
jmp
in
add
add
adc
sbb
mov
add
add
fstpt
jl
jo
jne
shll
fsub
and
lret
in
sbbl
adc
lret
sbb
clc
inc
je
and
lret
pushf
push
inc
xor
pop
jbe
mov
inc
jbe
inc
push
je
xor
stc
jae
mov
push
mov
mov
xchg
addl
adc
or
push
and
ja
add
ret
xchg
sti
dec
inc
push
jnp
xor
in
jge
out
out
adc
sub
insb
je,pn
inc
jg
mov
push
or
pop
enter
mov
xorb
loope
or
jbe
dec
pop
jb
pop
imul
push
xor
outsb
mov
cmp
mov
push
stc
mov
mov
xor
and
dec
push
call
aam
fisubrs
fiadds
sarl
int3
std
pop
call
out
ficoms
into
push
pop
dec
repz
and
add
xchg
and
pop
fisttpl
popf
clc
outsl
mov
pop
inc
xchg
pop
add
cmc
out
and
outsl
scas
add
pop
xchg
lods
xchg
cmp
inc
xor
add
out
fsubrp
faddl
in
in
fiadds
out
sub
jmp
pop
xchg
lea
testl
cwtl
push
or
fmull
push
cmpsl
pop
add
push
ret
ja
jb
in
jbe
mov
loope
test
adc
dec
faddl
orl
xor
scas
pop
add
push
bound
cs
bound
hlt
clc
jmp
lahf
add
xor
jo
int3
mov
adc
jmp
fidivrs
xchg
jmp
pop
cs
add
repnz
mov
hlt
sub
dec
dec
mov
and
adc
add
jge
mov
jge
jmp
test
jmp
add
dec
clc
sbb
mov
add
mov
add
adc
mov
ret
push
in
rorb
dec
daa
imul
dec
leave
add
pop
jecxz
cmp
push
idiv
add
les
pop
pop
xorl
mov
loopne
adcl
mov
jmp
jns
push
shl
sbb
inc
outsb
rol
in
je
adc
loope
cmp
cld
cld
push
mov
xor
push
cmp
push
cmp
stos
add
std
ret
stos
add
cmp
mov
insb
mov
and
xlat
push
sub
mov
ljmp
in
xor
hlt
jle
mov
sti
jl
out
pop
pop
ds
xchg
call
cmp
sbb
ja
in
mov
add
outsb
mov
dec
punpcklbw
push
movsl
aaa
repnz
arpl
pop
or
test
add
push
outsl
scas
rolb
gs
fcomps
in
repnz
adc
add
fildl
out
and
xor
repz
lods
push
mov
mov
aas
stos
lcall
test
jb
add
mov
inc
push
push
lods
jae
in
mov
fldl
mov
or
int
cmpsb
add
stos
sahf
lret
mov
lret
lods
sahf
lret
sbb
in
sbb
mov
stc
push
shlb
jne
sbb
adc
dec
jb
add
xchg
sbb
sbb
sarb
mov
cmp
inc
adc
insl
enter
mov
mov
dec
mov
dec
mov
ss
dec
pushl
push
int3
int3
lret
push
int3
int3
stos
push
int3
int3
or
int3
jb
in
mov
adc
dec
dec
imul
mov
add
inc
xchg
ret
or
push
addl
rolb
cmp
sar
push
sub
mov
imul
imul
inc
je
loopne
adc
lds
hlt
mov
inc
xor
fiadds
mov
dec
and
fwait
stos
and
stc
push
fs
mov
clc
jne
clc
imul
bound
sbb
pop
out
mov
stc
dec
xchg
js
sbb
or
sarb
xor
or
insb
push
sti
and
outsl
mov
or
adc
add
sbb
add
xorb
repz
jmp
insl
or
fldenv
sti
inc
clc
mov
in
adc
mov
out
icebp
adc
movsl
and
int3
adc
add
lcall
xchg
xor
inc
mov
icebp
movsl
add
adc
push
ficoms
pop
or
andb
sub
divb
add
pop
jmp
cwtl
xlat
ret
fcoms
adc
fstpl
aas
sub
stos
aas
and
pop
or
cltd
jp
pop
inc
out
mov
call
add
sbb
lods
jmp
push
add
jmp
jo
sbb
add
add
dec
call
or
popa
mov
xchg
loopne
push
pop
or
mov
xor
imul
test
cmp
pushl
lcall
bound
test
xor
loop
pop
movsb
aas
inc
dec
test
fmul
add
sub
int3
cmp
dec
mov
jmp
adc
push
sub
add
lcall
add
sbbl
ja
clc
imul
clc
movb
fdivrp
rclb
jnp
cmp
mov
test
incb
ficoml
or
imul
mov
imul
verw
mov
idiv
test
adc
mov
and
and
jge
notl
cli
add
mov
fidivs
sti
addr16
add
push
stc
cld
fisubrs
and
nop
mov
jmp
and
jns
ljmp
call
pop
cmp
cld
jmp
in
inc
cli
push
ret
jp
test
mov
xchg
in
add
je
jp
outsb
test
mov
adc
pop
add
lds
inc
je
outsb
scas
fsts
push
or
ljmp
movb
sbb
outsb
scas
loope
sub
stc
add
cmpsl
ljmp
loope
sbb
das
ds
or
xchg
mov
or
call
scas
cmp
add
inc
ljmp
jbe
adc
xchg
and
xor
scas
inc
sbb
lods
add
push
sbb
test
dec
and
sbb
push
push
xchg
pop
mov
fcompl
punpcklwd
ljmp
sub
lock
stos
loopne
insb
outsb
call
out
out
ljmp
cs
lock
add
pop
sbb
lods
inc
aas
push
cltd
cmp
subl
repnz
dec
or
ljmp
test
and
add
fldl
push
dec
lahf
or
inc
call
addl
dec
clc
jl
xor
sub
lock
std
jnp
pushf
daa
imul
push
incl
cmp
cmpl
jae
imul
orb
push
loope
leave
maskmovq
idivl
sbb
sbb
call
maskmovq
jbe
inc
hlt
mov
imul
mov
cmpl
mov
jne
or
call
adc
push
testl
xorl
stc
add
addb
jle
xchg
xchg
jnp
bound
test
xor
rcrl
stos
or
andnps
fcoms
xor
sbbb
cld
ficomps
int
push
lods
fadds
cli
jo
lcall
cld
test
loope
dec
cli
int
push
gs
nop
repnz
xor
add
xchg
int3
push
xchg
or
adc
sbb
fstsw
adc
mov
adc
jbe
call
cld
sarl
add
adc
fprem
xor
ficoms
jle
cmp
out
lcall
mov
fisttpll
out
fisubrs
mov
pop
dec
lret
sti
bound
rcrb
push
out
js
or
xchg
aad
jbe
inc
popa
add
aad
stc
out
fisubl
cmc
orb
or
ficoms
add
sahf
inc
test
jecxz
sbb
dec
clc
sbb
out
adc
rorl
in
inc
push
push
mov
mov
out
xor
mov
addb
es
test
cmpsb
gs
jmp
mov
cli
scas
xor
roll
adc
adcl
mov
cmp
add
mov
insb
and
lahf
dec
decl
adc
incl
add
push
rol
xor
int3
jl
dec
mov
in
insb
push
or
outsl
adc
cmp
or
mov
addl
jns
testl
adc
lea
add
hlt
add
decl
orl
dec
or
or
cmovge
pop
adc
aaa
or
psubd
clc
fdivrp
dec
cld
push
scas
or
jo
in
pop
jae
mov
cld
fisubrs
gs
xchg
adc
xchg
lldt
hlt
test
jo
clc
pop
mov
adc
mov
std
shll
add
sbb
mov
idivl
jae
jae
pop
pop
jge
inc
jno
gs
add
mov
test
test
testb
loop
std
push
ficoml
outsb
dec
push
mov
push
dec
adc
ficoms
out
adc
mov
xchg
lock
stos
and
out
mov
adc
test
adc
into
jbe
push
out
jb
lcall
sbb
mov
add
xchg
sub
or
ja
xchg
sbb
cmp
cmpsl
loop
lea
sahf
packsswb
data16
xchg
mov
or
xor
or
or
test
loope
stc
mov
mov
push
dec
or
ljmp
fsubp
clc
and
out
bound
cmp
out
mov
fsubp
and
mov
aam
ds
sub
fst
sarb
mov
int
xlat
jbe
mov
push
dec
and
fs
and
fcmovbe
jp
mov
add
fdivs
xchg
cmp
fistl
shlb
inc
and
xchg
cmp
and
divl
xchg
rorb
es
lret
jmp
xchg
rorb
sarl
adc
ret
cmp
shrl
rcl
or
addr16
mull
xchg
call
sbb
mov
iret
out
add
sub
scas
cmp
sub
jbe
dec
sub
sub
inc
jne
out
neg
and
fisubs
cld
test
test
pop
push
sub
imul
cld
xchg
or
pop
call
jecxz
in
cmp
pusha
aaa
loopne
stos
cld
xchg
or
nop
adc
out
cmp
cld
imulb
add
push
cmc
aam
popf
jmp
in
ficoms
and
cmpb
sub
pop
hlt
cld
out
ljmp
sbb
dec
cmc
out
adc
nop
sbb
xchg
jns
out
pop
lock
incb
push
out
ficoms
out
jno
movsl
add
or
xlat
jecxz
add
push
out
loop
daa
fsub
or
adc
add
mov
jecxz
adc
or
loope
js
movl
push
repz
dec
daa
add
add
adc
adc
inc
fiadds
pop
bound
daa
add
shrb
push
push
push
and
shlb
addr16
and
push
and
add
into
lock
push
movb
out
test
jae
and
push
test
push
jb
stc
fmulp
in
push
test
add
iret
add
movb
in
fisubl
lock
mov
test
repnz
cld
xchg
outsl
or
loope
pop
xor
lock
int
add
jmp
push
and
mov
mov
clc
mov
mov
mov
mov
mov
int
int3
push
inc
mov
daa
push
add
jl
dec
mov
int3
dec
and
into
dec
or
and
push
jg
push
pop
jl
cld
pushl
ret
ret
int
int3
push
enter
enter
inc
lea
add
push
add
outsl
xor
stos
adc
rcl
addl
mov
add
jmp
mov
popa
mull
sbb
push
test
mov
stos
es
enter
cmc
push
push
push
mov
pop
dec
cmp
and
push
shll
add
loope
adcl
test
mov
sti
insl
add
pop
pop
or
add
cmc
lods
out
inc
jge
add
rorb
pop
pop
sbb
fs
add
inc
std
fisubs
cld
fisubrs
lcall
adc
push
jno
cli
cmp
push
pop
inc
out
test
cli
cmpsb
fisttpl
pop
pop
shl
arpl
lds
push
rorl
icebp
out
sbb
dec
cli
jbe
dec
and
dec
mov
imul
icebp
nop
xchg
bound
rcrl
ret
cmp
add
iret
pop
aas
cli
or
ret
lret
pop
dec
add
lea
pop
inc
mov
add
push
out
lock
fsubl
add
out
fcmovnbe
jb
xor
int
cwtl
or
add
cmp
adc
xor
fstl
add
push
xor
adc
adc
orb
cmp
loopne
inc
inc
stos
int
jo
jmp
inc
sub
push
fprem
jo
jmp
arpl
test
jmp
mov
push
jb
aaa
dec
stos
pop
fsts
stc
fdivs
negb
add
imul
or
xorb
add
cmc
cmp
outsl
repnz
mov
and
sub
mov
add
addl
shlb
addl
rclb
filds
or
fiadds
enter
adc
dec
and
int3
sbb
push
out
fcomi
jmp
fsubrs
insl
hlt
xor
xor
cmp
jl
addl
out
out
ret
push
fdivrp
dec
and
inc
or
inc
and
and
dec
lods
jne
sarl
mov
mov
jmp
inc
and
pusha
push
and
rcr
dec
xor
test
popa
pop
call
cltd
movsl
lock
jns
icebp
xchg
push
xchg
into
popf
jmp
cld
mov
addr16
incl
fsubrp
pop
pop
mov
pop
pop
pushf
enter
sbb
enter
icebp
clc
sbb
cld
ficoms
mov
add
adc
div
xlat
mov
xchg
adc
loopne
adc
add
adc
loopne
adc
jmp
out
ficoms
jb
xchg
xlat
or
rcll
loopne
adc
add
ficoms
push
divb
data16
adc
add
adc
notb
hlt
fists
adc
fisttps
adc
add
adc
divb
xlat
adc
repz
loope
adc
add
adc
notb
fdivr
das
cld
adc
stos
call
jmp
repz
clc
icebp
mov
add
nop
push
add
fstl
add
ss
add
pop
add
fstl
add
push
pop
pop
add
pop
pop
add
fstl
add
fprem
in
aaa
pop
add
pop
add
fstl
add
fprem
lods
cmpsb
pop
add
xchg
pop
add
fstl
add
push
fprem
pop
stos
adc
add
fstl
add
xor
clc
seta
add
xor
adc
add
incl
lock
notl
add
adc
idiv
add
cmp
jg
cmp
notl
add
nop
fdiv
decb
cmp
adc
add
fdiv
call
cmp
sub
cmp
mov
add
cli
in
mov
push
dec
jmp
pusha
adc
adc
ja
push
adc
adc
pushf
adc
mov
aaa
adc
fsubp
cld
cmp
out
aaa
add
out
xor
out
inc
out
out
jnp
out
addr16
out
ss
cld
pop
iret
out
sbb
out
pop
iret
out
adc
out
and
jmp
cld
inc
out
jmp
cld
dec
jmp
cld
test
jmp
cld
cmp
jmp
cld
and
jmp
cld
fcmovne
jmp
cld
roll
into
jmp
cld
sbb
jmp
out
fiaddl
out
push
add
add
out
add
add
out
and
out
adc
out
pop
add
add
add
add
add
add
out
inc
add
add
out
addb
add
add
add
add
add
add
add
add
add
add
add
bound
out
push
add
add
out
cmp
out
into
add
add
add
add
add
add
add
add
add
jmp
fstp
psubsw
fmull
jmp
fst
psubsw
xchg
psubsw
cwtl
psubsw
pushf
psubsw
mov
psubsw
test
jmp
frstor
jmp
jmp
add
hlt
psubsw
clc
psubsw
cld
psubsw
add
jmp
fisttpll
adc
fisttpll
jmp
fst
or
fstp
or
fstp
or
fucom
or
fucom
or
fldl
ja
aam
inc
push
cmpsb
adc
mov
pop
aaa
push
in
pop
inc
push
stc
adc
movsb
adc
push
int3
getsec
push
daa
adc
push
rorb
push
mov
mov
sysret
push
mov
pop
push
mov
testl
movsb
cmpxchg8b
pushf
movzwl
xchg
cmpxchg8b
mov
mov
mov
xchg
orb
or
js
xchg
cld
loope
out
lret
iret
out
enter
dec
loope
cld
dec
cld
inc
add
out
inc
jmp
out
cmp
out
aaa
shl
cld
xor
out
das
loope
cld
sub
out
daa
shl
cld
dec
iret
out
das
loope
cld
sub
out
daa
shl
cld
and
mov
cld
sbb
mov
cld
adc
mov
cld
or
mov
cld
add
mov
cld
sti
fdivrs
out
add
out
sbb
out
push
and
add
and
add
pop
out
sub
out
es
out
adc
out
or
out
ficompl
out
push
pop
out
and
out
push
pop
out
dec
pop
out
inc
pop
out
xor
out
sub
out
cs
out
xor
out
xchg
out
jp
out
jle
out
bound
out
push
push
out
add
push
out
xchg
out
mov
out
scas
push
add
fstp
or
fstp
or
fst
or
fucom
or
fucom
or
fldl
or
fstl
or
fisttpll
or
fnstsw
jmp
frstor
or
fstl
jmp
fnstsw
or
fldl
jmp
add
sub
jmp
frstor
jmp
fucomp
or
or
frstor
jmp
fisttpll
add
adc
sbb
js
ja
sbb
adc
or
ja
in
or
inc
adc
or
aaa
adc
or
inc
adc
push
aaa
adc
add
adc
or
notl
mov
or
pop
adc
notl
lods
or
adc
push
adc
or
adc
adc
mov
mov
xchg
mov
and
cld
jg
mov
jnp
mov
cmpsl
into
mov
ret
cld
mov
clc
into
mov
push
add
mov
push
jecxz
cld
mov
shll
cld
push
jecxz
cld
dec
cld
mov
jecxz
cld
cltd
fnstenv
cld
aaa
jmp
cld
loope
cld
pop
cld
pop
jmp
cld
adc
mov
cld
or
mov
out
ficompl
out
mov
sbb
sbb
out
jb
out
xchg
out
mov
out
mov
sbb
add
sbb
add
out
or
add
sbb
add
sbb
add
sbb
out
push
sbb
out
dec
sbb
out
inc
sbb
out
cs
out
xchg
add
out
add
add
jmp
fisttpll
jmp
fucomp
or
fucom
or
fucom
or
fstp
or
fstp
or
fnsave
or
jmp
frstor
jmp
fstpl
jmp
fstl
jmp
fisttpll
or
fldl
jmp
add
cld
or
or
or
or
jmp
push
adc
mov
adc
push
or
push
or
push
add
mov
add
push
cld
or
push
hlt
or
lock
in
or
push
in
ja
loopne
ja
fmull
inc
push
fmuls
inc
push
aam
aaa
push
rorb
aaa
push
int3
or
inc
push
enter
les
aaa
push
rorb
push
mov
or
push
mov
testl
test
pop
push
movsb
or
or
cld
mov
mov
adc
mov
fwait
out
mov
aad
cld
mov
mov
xchg
mov
xchg
aad
cld
jg
mov
jnp
mov
loope
mov
fstp
mov
outsl
aad
cld
imul
cld
addr16
mov
arpl
mov
scas
aad
cld
stos
in
cld
xchg
mov
sbb
cld
jle
mov
jp
mov
xchg
in
cld
xchg
aad
cld
aad
cld
mov
mov
xchg
mov
adc
cld
jg
mov
jnp
mov
ja
adc
add
out
mov
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
loop
out
ficomps
out
lcall
add
sbb
add
sbb
add
sbb
add
out
inc
sbb
add
sbb
add
sbb
add
adc
out
push
sbb
add
sbb
add
sbb
add
out
mov
je
jmp
add
jo
jmp
add
jmp
fstpl
add
jmp
fnsave
jmp
fnsave
jmp
jmp
frstor
jmp
frstor
jmp
fstpl
jmp
frstor
jmp
jmp
notl
inc
or
adc
pop
adc
pop
adc
or
adc
notl
and
adc
adc
or
adc
or
adc
adc
or
adc
or
adc
or
lock
adc
or
in
ja
loopne
inc
adc
or
inc
adc
or
adc
or
adc
or
int3
or
popa
or
adc
or
adc
or
mov
mov
xlat
mov
mov
mov
scas
out
cld
stos
out
cld
cmpsl
xlat
mov
mov
in
cld
fwait
out
cld
xchg
xlat
mov
xchg
xlat
mov
out
cld
mov
mov
xchg
mov
adc
cld
jg
mov
jnp
mov
ja
xlat
mov
jae
mov
outsl
out
cld
imul
cld
xlat
mov
int
mov
pop
out
cld
pop
out
cld
push
xlat
mov
push
xlat
mov
dec
out
cld
dec
out
cld
inc
xlat
adc
add
pop
out
rclb
out
pop
out
lret
add
add
out
dec
sbb
add
out
adc
out
pop
sbb
add
add
inc
sbb
add
sbb
add
sbb
add
out
lds
out
add
out
clc
pop
out
cld
pop
out
and
out
outsb
sbb
add
sbb
add
sbb
add
out
dec
sbb
add
sbb
add
sbb
jmp
add
add
fstp
pop
jmp
fst
pop
jmp
add
es
jmp
fstl
add
jmp
fnsave
jmp
jmp
fnstsw
pop
jmp
fstpl
pop
jmp
fisttpll
pop
jmp
fldl
jmp
fnstsw
or
add
or
mov
add
mov
aaa
fxrstor
aaa
rsm
or
xsha1
cmpsb
or
cpuid
or
push
sahf
or
push
lcall
setb
testl
mov
push
xchg
push
orb
push
jle
mov
jp
push
jbe
push
jb
mov
outsb
or
push
data16
push
pop
or
pop
or
push
push
or
ja
dec
or
dec
or
inc
or
mov
inc
aam
cld
inc
aam
cld
cmp
in
cld
xor
aam
cld
sub
in
cld
and
aam
cld
sbb
in
cld
adc
aam
cld
or
in
cld
add
aam
cld
std
out
cld
stc
out
cld
cmc
xlat
mov
icebp
add
mov
in
out
cld
jmp
xlat
mov
loope
mov
fucom
mov
mov
aad
mov
rcl
adc
add
pop
out
and
out
and
out
sbb
out
js
out
je
out
jo
out
insb
pop
out
dec
pop
out
inc
pop
out
inc
pop
out
cmp
out
pop
pop
out
push
pop
out
push
pop
out
dec
pop
out
add
out
fs
add
out
pop
or
add
or
add
out
xor
out
sub
out
or
out
add
out
add
out
cld
or
add
or
add
add
frstor
jmp
fisttpll
jmp
fstl
jmp
push
jmp
fldl
pop
jmp
fucomp
push
jmp
jmp
push
jmp
fstpl
pop
jmp
frstor
pop
jmp
fisttpll
pop
jmp
fstl
pop
jmp
fnstsw
pop
jmp
pop
jmp
fnsave
fimull
xchg
or
rorb
ja
into
or
lret
adc
or
aaa
adc
or
adc
or
mov
aaa
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
adc
adc
mov
jb
mov
outsb
or
adc
fisubs
cmpsl
cld
popa
out
cld
pop
out
cld
pop
cmpsl
cld
push
cmpsl
cld
push
out
cld
dec
out
cld
dec
cmpsl
cld
inc
cmpsl
cld
inc
out
cld
cmp
cmpsl
cld
xor
out
cld
sub
cmpsl
cld
and
out
cld
sbb
cmpsl
cld
adc
out
cld
or
loope
cld
and
cmpsl
cld
add
out
cld
std
fldenv
cld
cmc
fldenv
out
adcb
add
out
jl
out
nop
adc
out
mov
out
and
out
sbb
out
jo
out
fs
out
dec
adc
out
adcl
add
out
fwait
adc
add
xchg
adc
add
adc
add
push
out
cli
adc
out
pop
adc
add
add
adc
add
adc
add
fucomp
add
fucomp
add
frstor
add
fnsave
add
add
fstpl
jmp
frstor
jmp
fisttpll
jmp
fstl
add
fnstsw
add
add
testb
fldl
add
add
fucomp
add
fucom
add
add
fucomp
add
fstpl
add
fstl
add
frstor
add
fstpl
add
fisttpll
add
fldl
add
fstl
add
fisttpll
add
psubd
mov
testb
pslld
xchg
out
push
xchg
ljmp
psrad
xchg
fiadds
xchg
fiaddl
ja
push
add
rolb
inc
bswap
push
inc
bswap
push
aaa
jae
add
add
push
aaa
movzbl
aaa
lss
pop
fxsave
pop
rsm
push
testl
mov
push
pop
setp
testl
xchg
push
push
mov
push
mov
mov
xchg
fisubs
cld
sbb
cmpsl
cld
jns
cmpsl
cld
jne
loopne
cld
jno
cmpsl
cld
insl
loopne
cld
imul
cmpsl
cld
popa
fsubs
cld
pop
fsubs
cld
push
fsubs
cld
add
cmpsl
cld
add
cmpsl
cld
cld
frstor
cld
cmp
cmpsl
cld
xor
fsubs
cld
sub
cmpsl
cld
and
fsubs
cld
sbb
cmpsl
cld
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
out
je
out
adcb
add
add
adc
add
adc
add
out
sbb
out
adc
out
and
out
sbb
out
push
adc
add
out
dec
adc
add
cmp
out
xor
out
inc
adc
add
out
dec
adc
add
jmp
frstor
add
fisttpll
add
fstl
add
fnstsw
add
fnstsw
add
fldl
jmp
add
add
fnsave
add
fstl
jmp
fstpl
jmp
fldl
jmp
jmp
fstl
jmp
add
add
fldl
add
fucom
add
fucomp
add
fucomp
add
add
notl
sbb
adc
add
mov
or
adc
add
mov
cli
add
adc
add
adc
add
adc
add
adc
add
adc
add
xchg
loop
xchg
fiadds
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
movsl
fisubrl
cld
popf
fisubrl
cld
xchg
fisubl
cld
fisubl
cld
test
fisubl
cld
jge
cmpsl
cld
jns
cmpsl
cld
jne
cmpsl
cld
jno
cmpsl
cld
insl
fisubl
cld
fisubl
cld
pop
fisubl
cld
push
fisubl
cld
dec
fisubl
cld
inc
fisubl
cld
cmp
loop
cld
xor
loop
out
mov
out
les
add
mov
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
adc
add
adc
add
out
test
out
js
out
jl
out
adcb
add
out
sub
out
sub
out
adc
out
out
aad
out
rorl
out
add
movntq
call
add
call
fstl
call
fnstsw
call
frstor
call
call
fstp
call
ffree
call
call
fnsave
call
fnstsw
call
add
arpl
call
call
fstl
fdivr
mov
adc
push
add
cmp
add
dec
pop
testl
inc
jne
cmp
add
pop
mov
add
or
addl
not
xor
divl
ds
dec
daa
pop
in
in
loopne
mov
sbb
cld
dec
sbb
adc
and
sldt
decb
add
xor
or
stc
je
mov
add
jnp
fisttpll
adcl
test
add
mov
insb
cld
sbb
mov
test
test
fbstp
idivb
lea
jge
scas
add
add
cmpsb
sbb
pop
push
repnz
scas
cmpl
push
add
in
add
sti
pop
jge
fiadds
mov
rep
addl
ret
out
or
push
in
mov
movsl
ret
clc
mov
adc
push
jnp
fildl
add
test
test
sbb
add
mov
inc
fcmovne
push
and
mov
les
inc
insl
or
and
dec
mov
xor
and
inc
fisttpl
cmpsb
test
in
sub
inc
sti
pop
cmpsb
test
pop
push
fisttpll
gs
fisttpl
xchg
shlb
mov
xor
inc
push
icebp
call
sti
mov
add
jle
insb
flds
add
rolb
mov
mov
jnp
popf
cmp
cli
movsb
mov
cmp
clc
jmp
fisubs
fs
cld
call
jb
jl
std
scas
mov
and
nop
jp
cltd
and
shll
mov
jmp
andl
call
xchg
xor
or
lock
dec
int3
in
rcr
jnp
adc
mov
inc
pop
sbb
add
jne
ja
out
adc
cmp
inc
aam
mov
ret
sub
push
call
ret
fistps
loopne
rcr
testl
rcr
call
add
and
insl
add
xor
cmp
jge
mov
sbb
fidivrs
jp
fsts
pop
cld
sbb
sbb
jp
jp
mov
lret
cli
aam
fidivrs
cld
xchg
mov
leave
mov
mov
leave
mov
jae
aam
add
sbb
std
fdivrp
jge
or
inc
std
fidivrs
jp
pop
push
add
push
add
jp
jl
mov
push
sti
cmpl
inc
rcll
jle
gs
mov
or
inc
repz
and
loop
gs
repz
hlt
add
gs
sub
faddl
mov
pop
xchg
stos
and
rorl
add
xor
fdivrl
and
add
xchg
mov
push
and
sbbb
rorb
and
inc
fistl
cmpsb
sbbb
shrb
out
sub
lods
rol
movntq
pushl
test
scas
sahf
sub
ficompl
test
xchg
sahf
mov
mov
test
sub
ljmp
sbb
inc
mov
insb
sub
mov
push
pop
push
sbb
inc
and
clc
push
add
mov
xchg
inc
add
push
sbb
sub
adc
xor
call
sub
push
call
stos
mov
pop
sarb
out
cmpsb
test
push
add
shrb
cmp
push
inc
xchg
jne
jbe
out
xlat
idiv
test
sbb
sbb
pop
loope
dec
int3
nop
cld
mov
adc
mov
repz
in
mov
je
xor
enter
inc
mov
cmp
and
xlat
imul
popa
shl
pushl
push
add
dec
adc
sbb
test
add
jp
ficoms
add
xchg
ss
adc
jmp
out
arpl
clc
popf
ror
hlt
jno
jns
les
and
sbb
fdiv
push
xchg
aam
dec
sub
jl
lret
jns
xchg
lods
stc
xor
ret
lsl
ss
sbb
adc
in
vminps
add
cmpl
mov
testb
dec
mov
popf
enter
pop
and
cmpl
popf
out
fimuls
pop
xchg
stos
mov
bnd
xlat
test
push
out
pop
cmp
add
push
stos
movsl
test
add
dec
fimull
or
leave
add
jecxz
frstor
jmp
movsb
push
out
cmpsb
mov
and
dec
fdivrl
and
dec
fimull
mov
leave
xchg
lea
test
ljmp
jae
bound
or
adc
clc
stos
mov
cli
xchg
insb
test
stos
inc
or
sbb
mov
fistl
incb
or
mov
mov
sub
sub
lret
out
sbb
clc
push
bound
adc
mov
test
sub
adc
test
call
sub
adc
nop
push
call
sub
adc
mov
iret
idiv
add
jne
mov
incl
je
jne
mov
out
fincstp
pushl
sbb
sbb
lahf
xchg
repnz
jne
ja
out
fincstp
incl
out
fincstp
incl
or
jb
idiv
mov
add
cmp
out
mov
pop
push
add
loopne
mov
test
dec
popf
loopne
mov
fidivrs
dec
addr16
lret
push
sarl
aam
mov
sarl
aam
xchg
mov
std
jae
sar
andl
clc
popf
xor
fcomip
sbb
sbb
std
mov
push
cmp
fisubs
clc
sbb
pushf
cli
out
sub
dec
adc
repz
sbb
ret
int3
idiv
lea
sarl
jmp
lcall
add
inc
and
add
idiv
imul
bswap
jne
cmpsb
rol
adc
std
or
iret
dec
mov
out
loop
cs
fdiv
movsb
cltd
lds
dec
movb
cmp
lds
xchg
repz
xor
popa
lds
fucomi
sbb
dec
lds
ret
in
add
pushl
ficoms
test
rep
clc
push
lahf
and
neg
and
push
cmpsl
or
adc
lcall
inc
adcb
fisubs
test
stos
pop
sub
in
add
adc
jmp
pop
sub
in
adc
popf
xchg
test
stos
pop
sub
out
mov
test
push
push
std
hlt
aam
fidivl
test
push
add
fdivl
and
jmp
and
inc
push
popf
clc
dec
pop
sub
add
push
or
fdiv
inc
leave
mov
mov
mov
inc
movsb
xchg
cmp
jmp
int3
testl
clc
test
jnp
mov
or
repz
or
clc
cmp
test
add
ret
arpl
incl
or
fs
mov
add
dec
cltd
bound
inc
adc
pop
lods
iret
test
xor
out
fiadds
clc
pop
aad
std
mov
mov
push
add
stos
movsb
xor
ljmp
dec
test
mov
jae
add
jl
mov
or
cltd
ret
in
aaa
pop
jbe
mov
jp
stos
cmp
clc
imul
mov
push
fcomip
loopne
mov
shll
fisubs
mov
or
daa
cmpsb
push
ret
lret
sbb
sbb
stos
xor
fldl
insl
out
jp
mov
icebp
add
into
mov
out
fstpt
and
cmp
mov
gs
fmuls
int3
roll
mov
add
ret
push
cmpsb
rcrl
add
mov
lds
lods
or
jne
lea
into
pop
pop
je
xchg
cld
call
xor
inc
jmp
mov
inc
or
push
imul
test
jb
bswap
add
add
add
aas
ljmp
sub
cmpsl
iret
bound
bswap
enter
add
and
orb
out
inc
mov
test
sbb
sti
pop
jo
out
push
ja
jecxz
js
out
sbb
je
stc
mov
stos
pop
mov
xchg
cld
lea
enter
add
nop
dec
sbb
dec
stos
js
in
insb
push
lahf
and
pushl
add
insb
ds
insl
cmp
sub
jae
insl
jae,pn
insl
sub
insl
es
and
repz
rep
sbb
das
insl
push
jecxz
jae
jae
jae
jae
jae
jae
jae
inc
pcmpeqb
insb
or
test
and
mov
test
aam
fwait
test
mov
fwait
or
add
jno
clc
stc
ljmp
pop
cs
les
rcr
mov
inc
cld
sub
push
jmp
adc
sbb
bound
std
pop
fisubrs
add
scas
push
inc
mov
or
scas
movsb
cmc
data16
mov
jecxz
data16
nop
pop
mov
ltr
adc
add
shll
add
mov
jecxz
data16
add
pop
out
ficomps
clc
stos
aad
dec
mov
je
dec
jle
sahf
xor
stc
popa
xor
rcll
sbbb
ret
in
add
adc
mov
jmp
jle
sahf
out
out
test
mov
sahf
gs
in
subps
add
add
hlt
xor
subl
call
gs
mov
push
or
shll
add
sub
pop
jl
shlb
xor
pushf
jae
inc
dec
clc
pop
dec
pop
jl
fbld
add
cwtl
clc
inc
pop
sbb
call
sub
add
cwtl
mov
out
out
testl
loopne
cwtl
clc
bound
pop
jmp
fcompl
and
adc
jmp
jmp
aas
add
adc
lahf
sahf
in
decl
fldt
call
je
mov
and
inc
mov
cli
cmp
add
scas
int3
out
ljmp
out
out
fs
add
addl
cmp
add
aam
sbb
push
sbb
icebp
dec
stc
cmp
sldt
sub
out
xchg
pop
testl
fisubrs
push
add
cmpsl
test
clc
popa
idivb
cld
jnp
and
mov
pop
mov
pop
xchg
or
es
xor
stos
cmp
or
int
out
fidivl
loope
mov
test
sbb
pushf
repnz
fisubrs
loope
push
test
movsb
pop
xchg
stos
mov
adc
stc
add
into
or
shl
add
sbb
mov
ror
lcall
movsb
add
lods
or
adc
cmp
and
xor
pushf
out
in
push
push
int
ficoms
out
pushf
out
icebp
jno
adc
add
fsubrl
int3
adc
flds
push
cmc
mov
into
fcmovnb
rcrl
les
mov
xchg
sbb
loope
leave
or
jge
cltd
clc
stos
pop
movsb
or
xchg
aaa
cltd
mov
mov
sbb
jl
cmp
jmp
inc
or
jmp
jne
in
jbe
sbb
and
sahf
clc
pop
sbb
mov
repz
mov
push
or
loope
add
out
add
icebp
push
xchg
jb
clc
add
jp
jnp
xchg
adc
incl
pop
scas
inc
jbe
mov
xchg
jmp
mov
xlat
dec
call
test
jl
into
sarl
andl
cli
xor
std
out
push
incl
or
stos
pop
test
jne
xchg
icebp
add
cld
jp
out
loope
call
add
bnd
loopne
out
addr16
fsubrp
movsb
pushf
lods
pop
mov
inc
std
sub
sbb
mov
stos
cld
fisubrs
jo
jno
adc
fsubp
insb
cld
popa
stos
cld
fisubrs
mov
add
add
add
stos
cld
fisubrs
lret
cld
and
insl
cld
adc
cld
ficoms
cld
stc
leave
or
cld
jmp
test
cld
sarl
add
adc
jb
xchg
out
ficoms
out
ficoms
add
stos
xchg
push
adc
adc
insl
lcall
add
adc
or
add
out
ficoms
out
ficoms
push
enter
adc
adc
jno
xchg
out
ficoms
out
ficoms
aaa
xor
ja
and
out
ficoms
mov
adc
adc
cli
xchg
out
ficoms
out
ficoms
adc
loop
outsb
adc
adc
lea
clc
jmp
fstl
add
xchg
xchg
clc
aad
adc
jne
das
xchg
clc
jmp
fstl
add
xchg
clc
mov
or
add
fstl
add
lret
lods
leave
xchg
clc
jmp
fstl
add
das
xchg
clc
add
scas
xchg
clc
jmp
fstl
add
xchg
clc
icebp
loopne
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
sti
push
push
sti
lcall
push
sti
decl
push
sti
decl
push
sti
ljmp
sti
jmp
push
sti
call
push
sti
mov
push
sti
ljmp
leave
sti
pushl
sti
dec
sti
incl
icebp
sti
jmp
sti
pushl
leave
sti
decl
leave
sti
incl
jno
sti
lcall
sti
dec
sti
call
leave
sti
cmp
sti
fidivrs
cld
loope
mov
ret
push
ret
cld
shrl
mov
push
ret
cld
test
outsb
ret
mov
cld
fisubs
mov
cld
jno
mov
cld
popa
dec
mov
cld
add
mov
cld
inc
mov
cld
cmp
mov
cld
sub
mov
cld
adc
sar
add
out
ficoms
pop
outsl
repnz
stos
outsb
ljmp
outsb
ficoml
push
outsl
lret
outsl
ret
outsl
mov
xchg
cmp
xchg
add
xchg
outsb
lcall
outsl
add
xchg
push
jo
xchg
sub
xchg
dec
jo
xchg
dec
jo
xchg
jb
pop
xchg
pop
outsl
push
xchg
jbe
dec
xchg
cmpsb
outsl
inc
xchg
shrb
xchg
outsl
xor
hlt
jo
xchg
int3
jo
xchg
and
xchg
call
xchg
clc
cmc
mov
jns
xchg
clc
jae
xchg
clc
subl
clc
daa
dec
xchg
clc
adc
clc
add
or
clc
out
das
xchg
clc
cmc
das
xchg
clc
ret
das
xchg
clc
setne
scas
setne
mov
xchg
clc
jns
xchg
clc
addr16
xchg
clc
insl
in
xchg
clc
sub
clc
lahf
in
xchg
clc
movsl
int3
xchg
clc
int
xchg
clc
mov
xchg
clc
xchg
clc
aad
xchg
clc
and
scas
xchg
clc
pop
scas
xchg
clc
add
pop
cld
dec
pop
cld
jmp
cld
incl
cmpl
inc
mov
sti
ljmp
sti
aas
mov
cld
ljmp
and
jmp
and
call
and
jmp
cld
inc
and
jmp
and
ljmp
and
call
and
ljmp
and
call
cld
pushl
and
cmp
es
decl
cld
incl
pop
es
fisubrs
cld
and
data16
adc
data16
add
gs
icebp
push
gs
loope
gs
fs
shl
imul
shrl
mov
fs
test
hlt
fs
cltd
cwtl
fs
xchg
movsb
fs
mov
fs
jns
insb
cld
jno
insb
cld
add
fs
popa
push
jo
push
mov
jno
inc
pushf
jo
cmp
jns
xor
or
nop
xor
nop
mov
jbe
nop
shlb
nop
fdivs
pusha
jbe
xor
ss
cli
jne
jp
lret
jbe
fs
xchg
jne
mov
add
cmpsb
jne
clc
jo
out
ficoms
jnp
jp
ds
and
push
out
ficoms
loope
ficoms
out
add
nop
ljmp
add
mov
and
clc
add
clc
jmp
push
mov
roll
inc
mov
xlat
xor
clc
in
xor
clc
dec
daa
mov
xor
mov
pop
add
clc
addl
clc
jg
clc
jae
clc
popf
addr16
clc
test
clc
mov
clc
ret
inc
clc
iret
inc
clc
adc
in
daa
clc
xlat
and
clc
add
sti
incl
lret
inc
adc
add
sti
pushl
sti
lcall
adc
add
and
jmp
push
sti
decl
push
sti
ljmp
push
sti
lcall
sti
call
sti
jmp
sti
incl
sti
decl
sti
call
dec
sti
jmp
dec
sti
inc
dec
sti
pushl
push
sti
jmp
push
sti
pushl
push
sti
call
sti
jmp
dec
sti
fsubp
cld
pop
icebp
sar
cmc
sar
dec
or
cld
inc
mov
sar
xchg
sar
movsl
sar
jno
cld
sbb
sar
cmp
cld
add
ret
or
cld
jmp
retw
push
ret
scas
mov
cld
ror
cld
mov
lret
test
ret
adc
jle
cld
add
into
mov
les
les
inc
les
push
les
push
les
pusha
cmp
sub
sbb
lds
mov
lds
mov
loopne
repnz
mov
loop
cmp
fimull
jle
lret
pop
lds
mov
mov
les
mov
xchg
mov
les
mov
fcomps
mov
iret
sahf
mov
mov
push
mov
sbbl
mov
addr16
mov
cmp
mov
inc
pop
mov
lds
mov
xchg
sbb
mov
frstor
mov
lds
mov
mov
mov
and
sbb
jmp
mov
clc
fldt
clc
jmp
xchg
clc
jmp
clc
sbb
clc
das
lods
clc
pop
lods
clc
add
pop
sti
push
pop
sti
ljmp
sti
call
sti
mov
fs
decl
sti
out
sti
call
enter
sti
stc
sti
decl
test
sti
ljmp
sti
call
sti
pushl
sti
push
or
sti
jmp
sti
call
push
add
pop
push
add
enter
mov
add
xchg
sti
ljmp
or
add
pop
je
lcall
cld
lcall
mov
jns
cld
lcall
cld
lcall
cld
incl
pop
cltd
mov
pop
rolb
add
mov
dec
in
mov
inc
addr16
lcall
cld
lcall
cld
lcall
mov
and
cld
sbb
cld
lcall
cld
fcompp
int
stc
ds
cld
icebp
cmp
cld
jmp
inc
into
cld
fnstcw
into
cld
rcl
int
leave
dec
into
cld
roll
mov
push
add
mov
lcall
aam
mov
add
adc
jp
jb
jb
jp
push
ds
pop
mov
mov
dec
mov
mov
mov
add
adc
popl
adc
mov
adc
roll
add
xchg
in
sub
test
sbb
test
jge
incl
pop
out
fidivrl
add
rcll
cmp
cmc
ret
dec
ficoms
add
imull
sbb
arpl
frstor
mov
out
insl
mov
sti
bound
lret
push
mov
shrb
call
dec
or
insl
inc
fidivrl
pop
cmp
std
rep
sbb
shll
popf
add
add
mulb
mov
fldcw
shl
insl
mov
ret
add
jmp
and
aaa
add
pop
fs
and
jno
xchg
les
sub
push
sub
dec
xor
xchg
cli
add
je
push
inc
je
add
adc
sti
sbb
jmp
pop
jb
xchg
inc
jno
inc
adc
jb
sbb
mov
les
popa
repz
push
xor
push
pop
jo
sub
notl
lods
add
pop
popa
mov
push
push
inc
js
leave
fisubl
sub
mov
pop
pop
xor
sbb
mov
add
nop
sub
or
add
adc
lcall
fimull
je
fstpl
push
ja
fstp
xor
addr16
insb
rcrl
cmp
mov
sbb
mov
add
fimull
arpl
cmp
pop
jo
aas
outsb
xchg
dec
arpl
fistpl
inc
repz
les
lods
adc
xor
mov
push
add
repz
pop
adc
push
sbb
fsub
add
std
mov
pop
repnz
jbe
std
roll
out
push
pop
ficoms
mov
sub
in
and
daa
xchg
hlt
adc
xor
adc
mov
sbb
jne
pushl
jge
push
push
lahf
in
repnz
jns
incl
add
adc
and
into
iretw
stc
into
data16
cld
inc
shl
push
jmp
add
insl
rcll
imul
add
repnz
jmp
mov
stc
insb
mov
iret
cmpsb
ret
cmpsl
mov
je
mov
bound
loop
std
and
lock
pop
inc
cltd
stc
imul
idiv
push
inc
add
out
pop
or
or
ja
aaa
mov
jae
cli
sub
aaa
pop
inc
out
push
dec
add
aas
pop
gs
inc
fs
inc
add
xchg
cmp
push
aaa
add
xchg
sub
adc
popa
popa
sub
outsl
push
inc
pop
outsb
jmp
je
pop
inc
pop
jae
push
out
add
aas
je
mov
arpl
dec
add
gs
sub
inc
push
jecxz
je,pt
in
addr16
sub
sub
fimuls
push
ja
cmpsb
fidivs
adc
jnp
dec
orl
jnp
sub
inc
pop
and
fdivrp
add
dec
and
shrl
and
insl
sub
adc
dec
adc
gs
arpl
push
pushf
aaa
add
rolb
dec
or
adc
push
sub
xchg
and
ret
in
dec
fcmovnbe
adc
and
ja
inc
fnstsw
das
pop
mov
aam
ret
fildll
and
sbb
sub
sbb
in
pop
sub
adc
pop
mov
std
cli
inc
jo
stc
adc
and
lret
sub
dec
dec
add
push
pop
divb
and
mov
and
out
es
orb
mov
mov
jbe
stc
cmc
jno
mov
adc
or
dec
and
lret
and
mov
push
insb
adc
fildll
add
repz
stc
loope
cli
jmp
adc
mov
add
in
aas
insb
int
pop
loop
fcmovnbe
add
ljmp
jmp
fbld
out
jmp
dec
mov
jmp
add
ret
jnp
add
mov
shll
fnsave
aaa
sti
out
jae
sti
in
ds
add
sbb
dec
jb
sbb
aad
pop
gs
and
fisubrl
push
notl
out
mov
push
repnz
sub
add
js
dec
cmpsb
and
jb
sub
add
cmovs
and
jb
xor
pop
add
sub
push
leave
insl
imul
insb
jae
and
dec
sub
add
inc
or
pop
pop
jo
aam
push
adc
gs
imul
xlat
and
jo
inc
mov
loopne
pop
mov
push
addr16
aam
add
aas
add
push
pop
mov
xor
fimuls
inc
pop
js
xor
adc
sbb
add
ljmp
dec
pop
inc
addr16
dec
dec
pop
add
push
xor
fsubrp
add
sti
stos
and
imul
add
cli
adc
mov
sti
mov
in
mov
je
adc
mov
out
pop
mov
push
xor
cwtl
repz
sub
add
jmp
xor
add
xor
adc
inc
sub
cli
or
adc
pop
dec
repnz
in
shll
adc
pop
and
shrl
mulb
pop
pop
ljmp
pop
sbb
xchg
inc
stc
in
mov
add
sub
push
jnp
sti
jecxz
add
add
mov
add
jmp
jmp
add
fidivrl
push
hlt
add
call
push
fsubp
add
push
sbb
in
jae
mov
icebp
cld
and
in
jae
sbb
int3
stc
jmp
cmp
add
decl
shll
push
stc
data16
ljmp
mov
int
xchg
mov
insl
mov
hlt
dec
fwait
ret
add
jno
push
adc
fnstenv
imul
or
je
cmpsb
and
lcall
dec
xchg
add
aas
gs
ds
jb
sub
dec
add
adc
gs
inc
jno
jmp
gs
fisubrl
pop
jne
and
repz
stos
xor
dec
add
daa
pop
gs
xor
mov
leave
data16
pop
inc
outsb
xor
fimuls
cld
cmp
in
xchg
jo
addr16
mov
mov
int3
outsb
mov
adc
in
inc
cmpsb
addr16
cltd
fdivl
sbb
sbb
aam
pop
xchg
and
push
xchg
sub
popa
jnp
cld
leave
fildll
sbb
adc
jbe
arpl
lods
adc
add
xchg
add
pop
imul
push
imul
add
or
stos
push
repnz
ficoms
and
adc
jne
repnz
mov
adc
add
repz
add
or
and
stos
repz
xor
adc
add
incb
jge
xor
pop
mov
adc
add
repz
push
cvtpi2ps
push
or
dec
cli
push
inc
movl
add
stos
adc
out
xor
adc
add
out
mov
or
ljmp
ljmp
lahf
lret
test
cld
insl
jmp
stc
in
test
loop
push
out
repz
add
repz
add
jb
ficoml
adc
mov
out
or
lds
cmp
leave
popa
das
mov
jmp
cld
inc
add
repz
repnz
fucomp
add
mov
pop
push
scas
sub
aad
aas
gs
xor
popa
insl
bound
into
add
insb
add
imul
aas
shll
gs
gs
xchg
and
dec
popa
jmp
adc
push
cwtl
sub
mov
ss
das
insb
jne
xor
shrb
je
enter
lock
add
sub
sub
sub
add
adc
insb
fimuls
pop
cmp
dec
and
inc
sti
dec
or
add
cld
inc
fsubrl
and
fwait
or
add
jnp
push
stos
lcall
mov
sbb
ret
arpl
inc
and
fimuls
inc
cmpl
das
addr16
xor
and
arpl
decl
or
dec
sbb
imul
and
je
push
aaa
adc
push
ficoms
jg
pop
in
fisubrl
inc
in
cmp
out
dec
add
leave
adc
out
add
les
sub
jmp
add
loopne
sub
out
jp
scas
add
mov
add
mov
adc
pop
stos
loopne
sub
add
and
cmp
mov
sub
sub
xor
cmp
add
cmp
decl
loop
jmp
cmc
in
mov
cli
les
cld
in
sar
push
rol
out
pushl
and
cs
in
jmp
shl
lcallw
mov
adc
push
bound
jl
loopne
push
add
incl
shll
lahf
out
insb
pop
sti
icebp
bound
mov
int3
bound
jmp
inc
mov
aad
jmp
ret
in
ss
out
add
pop
push
jb
sub
mov
cmp
adc
xchg
sub
ja
arpl
inc
add
pop
imul
jae
add
add
sub
pop
lret
dec
sbb
ja
cwtl
add
xor
push
lds
pop
inc
inc
sete
sti
sub
mov
sub
add
or
pop
push
lret
das
jo
pop
cmove
roll
fisubs
sbb
jb
xor
dec
pop
xor
inc
inc
je
jae
ja
outsb
add
pop
adc
fimuls
xor
jno
mov
pop
pop
push
daa
insb
sti
dec
adc
cmpsl
cld
sub
cmc
lods
daa
insl
in
mov
sbb
mov
mov
push
ret
les
dec
mov
les
add
jns
inc
xorl
insb
xchg
and
xor
sbb
push
add
adc
adc
adc
and
add
cmp
or
add
pop
adc
ficoms
pop
push
adc
and
in
pop
std
ret
lret
adc
lock
adc
add
in
mov
sbb
fwait
push
add
out
leave
rsm
es
es
daa
test
in
jb
in
and
xor
mov
inc
sbb
adc
add
cltd
loop
pop
xchg
int3
decl
jmp
rclb
add
int3
bound
xchg
loop
add
loopne
incb
xor
pop
fst
bound
push
std
pusha
sbb
stc
pop
push
loop
std
mov
int
jb
clc
adc
jnp
shll
imull
mov
fdivr
lcall
insl
stos
leave
iret
insb
lcall
lret
lods
clc
in
test
std
pop
mov
sar
bound
loopne
dec
repz
dec
rclb
xor
shll
rcl
pop
jae
xor
faddl
ret
push
out
data16
adc
add
inc
gs
push
mov
push
adc
add
or
add
imul
and
xor
pop
jb
push
outsl
gs
adc
bound
addr16
pop
pop
je
push
push
aaa
adc
push
mov
push
movsl
or
xchg
sub
or
imul
rorl
arpl
sbb
jns
inc
fidivrs
and
adc
add
imul
adc
dec
xor
insl
inc
dec
sbb
js
fistpll
cs
sbb
stos
or
imul
push
sbb
xchg
cmp
xchg
and
sbb
out
adc
cwtl
adc
popf
xor
fidivs
or
push
ret
xor
out
nop
cvtpi2ps
add
out
dec
dec
jge
cmp
add
ss
push
adc
cmp
adc
sub
out
sbb
in
sbb
adc
add
loop
and
hlt
mov
sbb
out
stos
cmpxchg
sbb
lds
sbb
adc
xor
incl
adc
std
test
mov
ficoms
add
pop
jns
cmc
imul
cli
jae
loop
std
cmp
sti
insb
dec
mov
inc
pop
iret
mov
jo
fucom
std
cmp
mull
stc
std
insb
or
lock
adc
out
push
cmpsb
repz
out
adc
in
shll
sbb
pop
out
in
mov
movsl
mov
hlt
push
mov
adc
stc
bound
lret
shrb
les
dec
outsl
popa
xor
aas
mov
popa
outsb
fwait
pop
outsl
dec
mov
adc
pop
jb
push
je
stc
adc
inc
les
pop
ficompl
add
push
push
aas
gs
popa
outsb
fildl
outsl
push
fidivl
je
mov
mov
popa
jb
add
insb
xor
xchg
cmp
inc
pop
pop
jb
ljmp
inc
push
add
je
aas
sub
outsl
push
sub
push
movswl
fidivrs
and
jns
jns
mov
je
loopne
je
in
aaa
arpl
jns
inc
fistpll
pop
je
fcoms
je
ret
adc
and
bound
xor
je
lea
pop
insb
jb
sbb
adc
inc
cmp
arpl
gs
movsl
fildll
sbb
pop
dec
inc
inc
cmova
push
pop
add
add
push
add
push
mulb
pop
insl
in
pop
sbb
dec
fists
stos
and
fildl
and
int
adc
mov
sbb
repz
add
mov
xchg
int
and
repz
push
push
or
out
xor
jne
sbb
jo
das
sbb
cmp
push
xor
sub
or
adc
jmp
stos
push
sub
ret
sbb
mov
scas
add
hlt
mov
std
cli
mov
enter
shr
push
add
imull
div
imul
add
bound
loopne
bound
in
jbe
test
pop
push
jmp
iret
bound
mov
bound
fisubl
cmc
cmc
jae
call
stc
jo
loope
insb
or
repz
jmp
vmovdqa
rol
lods
clc
cmc
insb
enter
push
jmp
dec
std
pop
push
cmpsb
or
incb
sbb
dec
pop
inc
bound
pop
je
adc
add
and
arpl
outsl
add
cmp
push
xchg
xor
push
inc
outsb
mov
push
mov
xor
or
cmp
add
ds
add
add
adc
pusha
arpl
xor
add
sub
xchg
pop
jb
and
inc
pop
add
movl
or
jno
xor
sub
xchg
adc
xchg
adc
jns
sub
sahf
sbb
jle
inc
lods
xchg
pop
push
rcll
dec
mov
pop
inc
mov
sbb
jns
sbb
pop
je
stos
mov
pop
imul
cs
dec
js
lock
adc
cmp
push
imul
js
push
fildll
pop
je
adc
pop
sub
les
mov
or
adc
daa
loope
adc
or
xchg
push
sti
jmp
add
sarl
fildl
add
divl
repz
jnp
mov
lea
jmp
xor
testb
repz
adc
push
add
adc
adc
cmp
mov
cmp
jge
adc
pop
inc
mov
sbb
push
jecxz
push
cmp
decl
lret
icebp
push
or
loope
mov
icebp
out
jb
fnstcw
mov
add
out
bound
lret
in
jae
cld
fsubl
in
jae
lock
shr
push
xchg
frstor
ljmp
lret
out
jae
iret
in
arpl
fldl
sub
mov
insl
push
fcomp
dec
push
sar
pop
cmp
ficoml
sub
fldt
adc
jae
jmp
ret
push
adc
add
jo
add
add
pop
add
push
add
add
pop
inc
gs
adc
jo
and
jae
add
das
imul
les
je
jno
mov
das
imul
push
mov
pop
jno
stos
dec
pop
jno
jne
gs
data16
fs
push
pop
adc
add
cmp
ljmp
je
adc
jae
movb
sub
hlt
jae
push
int3
pop
sub
mov
jbe
les
push
rcrb
cld
sbb
icebp
push
sti
push
call
imul
xchg
mulb
test
mov
dec
mov
jmp
mov
jns
faddl
out
mov
enter
cld
push
fisubs
add
rcl
jb
daa
sti
push
jg
mulb
and
fsts
or
and
add
cmp
add
cmp
and
push
adc
xor
in
out
add
mov
mov
ret
lret
into
fidivrl
mov
testl
jmp
call
add
out
call
mov
jns
cmp
add
mov
fsubrl
jl
inc
idivb
push
icebp
jnp
inc
in
adc
mov
fidivs
aad
fdivrp
aas
in
lock
inc
ret
fisubrs
fiaddl
rol
insl
add
xchg
clc
dec
or
fisubrs
cmpsb
fiaddl
stos
les
xchg
mov
clc
lods
add
iret
ljmp
jae
outsl
mov
inc
cmc
jmp
shll
xor
pop
pushf
dec
ljmp
sub
outsl
jne
repz
mov
cmc
jmp
fmul
outsb
pop
std
hlt
dec
push
mulb
sub
mov
cs
js
insb
testl
push
icebp
ja
imul
shlb
add
adc
popa
mov
ds
ja
popa
lcall
popa
mov
inc
jae
inc
inc
push
xchg
push
and
popa
and
imul
push
aaa
adc
add
data16
popaw
outsb
mov
dec
add
outsl
jbe
gs
data16
adc
add
pop
push
repz
add
stc
loop
jbe
in
inc
ja
out
push
pop
out
jbe
push
sub
ss
arpl
add
bound
jmp
cmp
add
fdivrp
loop
push
cmp
imul
push
in
data16
push
sar
jns
add
popf
in
cmc
inc
in
dec
icebp
push
lock
fmulp
add
jge
push
mov
mov
outsl
mov
mov
xor
jp
insl
mov
cld
push
fists
ss
jnp
dec
hlt
cwtl
out
rclb
ss
adc
repnz
fiadds
in
ret
inc
loope
vdivpd
add
in
ret
xor
and
push
adc
add
in
ret
daa
add
movlhps
or
sti
repz
enter
adc
clc
push
in
rolb
lock
cli
or
call
xchg
in
iret
repz
mov
mov
mov
mov
mov
jp
xchg
out
jb
mov
mov
cmp
shlb
stc
loope
aas
std
jmp
clc
jp
lret
inc
and
rcl
xor
rcrb
push
fs
scas
jmp
call
add
shrl
out
cli
jle
outsl
int3
pushf
pop
clc
mov
sub
sub
les
inc
mov
mov
out
fstpl
imul
call
outsb
push
aaa
adc
mov
insb
fwait
jne
push
xchg
pop
pusha
push
pop
adc
mov
sub
adc
add
or
push
gs
dec
fisubl
popa
fdivs
mov
pop
jno
stos
dec
pop
jae
outsl
pop
xchg
push
add
jae
dec
xchg
imul
inc
clc
pushl
pop
jne
and
cs
insb
add
adc
outsl
test
popa
imul
fs
outsb
fiadds
cld
cmp
jl
data16
lock
in
add
cld
aas
fisubs
in
jo
out
data16
ljmp
pop
jmp
addr16
inc
inc
shr
data16
push
jmp
cmp
add
inc
imul
insl
cmp
out
or
mov
imul
cld
cmp
xchg
fbstp
cmp
ja
cmpsl
loopne
clc
fbstp
inc
cld
cmp
jge
insb
lds
add
adc
add
int3
mov
popf
rclb
mov
adc
loop
ficoms
sahf
lds
ror
inc
call
sub
add
adc
idivb
cmp
adc
cmp
sub
xor
in
pop
hlt
mov
addb
hlt
adc
sub
hlt
add
add
hlt
fidivrl
out
or
sbb
mov
ret
in
rep
int3
mov
out
lds
clc
stc
fstpl
outsb
mov
fisubs
inc
out
mov
pop
jge
into
cmp
fstp
std
cltd
in
mov
leave
pop
cmp
jae
add
lock
pop
pop
adc
cmp
loop
sub
int3
repnz
dec
fwait
mov
ljmp
in
adc
jmp
mov
cmp
adc
lret
sub
add
fcmovne
pop
xlat
cwtl
int
jmp
mov
dec
add
addr16
call
dec
fs
gs
decl
aas
popa
gs
pop
addr16
dec
push
inc
push
clc
incl
inc
xor
fs
stos
adc
add
mov
adc
push
mov
pop
arpl
or
pop
gs
jno
jb
push
outsl
adc
add
aaa
insb
popa
jecxz
push
leave
jb
add
or
push
cmp
pop
push
test
pop
fs
aaa
imul
cld
or
sahf
sarl
pop
inc
fsubrs
lcall
mov
fistpll
fimuls
push
lea
call
fldcw
imul
ds
xlat
fldcw
jp
imul
stc
push
add
lea
mov
bound
loope
inc
sub
in
dec
pop
cld
push
sub
out
mov
cld
push
or
pop
filds
or
int3
sub
cli
adc
out
push
icebp
add
iret
scas
int3
hlt
loopne
icebp
add
ror
icebp
int
mov
ret
in
out
jmp
fsubrl
loopne
in
xchg
out
shr
loop
fmull
rorb
push
popl
ret
in
push
lock
loopne
out
fsts
jl
xor
iret
fsts
add
in
xor
or
cmp
cmp
sbb
dec
in
out
add
es
frstor
out
in
loope
or
pmaxub
icebp
incl
mov
insb
and
jae
outsl
repz
ficoml
arpl
jns
jb
jns
pop
enter
les
iretw
cmp
imul
imul
jge
rep
jne
loop
jnp
shlb
fnstsw
ljmp
in
fisubrs
and
outsl
pop
add
bound
rcrl
mov
lods
mov
sub
jmp
jae
stos
les
mov
repnz
add
adc
mov
gs
jb
dec
data16
adc
mov
xor
pop
jae
xchg
jo
aaa
adc
gs
imul
ss
push
dec
jb
jne
push
pop
insb
arpl
arpl
pop
push
clc
ljmp
push
lcall
inc
xchg
pusha
pop
inc
sbb
insb
outsl
fs
mov
gs
pop
je
xor
fisubs
in
cmp
cld
inc
add
insl
clc
add
dec
sti
or
inc
pop
ds
jno
cld
inc
clc
xor
call
outsl
lret
imul
scas
xchg
fldcw
xchg
fldcw
test
jae
imul
jae
xlat
loop
xchg
jbe
jae
fstp
jae
mov
pop
add
pop
jge
aam
loope
add
push
push
hlt
dec
cmp
out
inc
sbb
bound
ret
mov
jecxz
jmp
loop
stc
idiv
enter
in
add
adc
jmp
add
int
idiv
fstps
add
loopne
out
mov
mov
mov
ficoms
add
in
mov
jl
jae
jp
sahf
call
mov
out
push
adc
loop
in
push
loop
fdivl
stc
cmp
aas
ret
inc
fisttpll
aaa
sar
call
mov
mov
call
ds
jl
sti
jg
jae
xchg
insl
lock
loop
sarb
jmp
imul
imul
fnstsw
lahf
aas
fisubs
aas
out
jae
sub
jecxz
lahf
frstor
out
jae
adc
imul
frstor
add
out
jae
stc
fnstsw
mov
dec
clc
push
xchg
inc
dec
stc
dec
dec
and
add
push
cmp
xor
or
insb
push
test
inc
rcrb
outsb
loope
clc
jmp
dec
push
data16
jb
push
decl
or
imul
data16
or
dec
dec
add
es
xor
lcall
or
pop
popa
xchg
jb
dec
pop
fs
imul
fidivs
aam
sub
mov
dec
sbb
cld
push
fbld
loope
sub
mov
or
sub
ficoml
push
sub
call
sbb
cld
jmp
in
pop
lock
add
insb
repnz
mov
in
imul
fldcw
pop
cld
adc
mov
insl
mov
mov
fbld
mov
lock
frstor
in
insl
xchg
push
clc
jg
scas
add
ret
aas
fimuls
out
push
sbb
xor
dec
mov
jecxz
ret
out
xor
lds
out
fcoml
and
or
out
repnz
rcr
adc
add
mov
scas
mov
clc
mov
adc
fistpll
sbb
mov
adc
lahf
cmp
sub
frstor
sbb
data16
mov
jmp
sub
mov
bound
mov
sbb
fwait
dec
clc
icebp
loope
jae
mov
jo
test
ljmp
pushf
ret
insl
sti
xchg
pop
les
cmp
loope
sarl
arpl
ss
sarl
mov
adc
clc
inc
bound
xor
cmp
push
inc
pop
outsb
insb
test
add
inc
insb
pop
pop
xor
xor
push
mov
add
adc
add
adc
add
adc
add
adc
add
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
inc
adc
add
add
aaa
adc
add
adc
add
aaa
cld
fidivs
cld
fidivs
cld
fidivs
cld
fidivs
cld
fidivs
cld
fidivs
cld
fidivs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
incl
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
fidivrs
cld
ficoms
out
ficoms
out
ficoms
out
daa
sahf
adc
and
adc
add
adc
add
adc
sahf
adc
daa
sahf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
ljmp
adc
add
adc
leave
xchg
or
ficoms
movl
ficoms
out
ficoms
out
ficoms
out
push
dec
out
inc
dec
sti
add
adc
add
adc
test
loope
add
adc
push
fstl
add
fstl
add
fstl
add
adc
jmp
fstl
add
add
adc
jmp
add
adc
jmp
inc
adc
fstl
add
fstl
add
pushw
inc
jmp
fstl
add
sbb
inc
jmp
fstl
add
stc
sbb
fstl
add
fstl
cmpb
inc
jmp
aaa
push
add
mov
push
add
aaa
dec
mov
fadd
sub
add
push
add
mov
inc
inc
pop
mov
test
ret
inc
pop
cmc
and
fsubrp
jnp
ss
iret
xchg
hlt
inc
std
mov
cmpsl
xchg
inc
sahf
ja
inc
lcall
inc
cmp
int3
cmpsb
dec
mov
pop
out
ror
inc
mov
fmuls
movsb
mov
push
mov
lods
je
jnp
xchg
add
loopne
hlt
xor
cwtl
pop
jno
sti
jno
add
adc
paddw
aas
cmc
lcall
ficoms
xor
dec
xor
pushf
cwtl
inc
fsts
ljmp
inc
sbb
ret
jmp
xor
or
xor
xchg
mov
sbb
add
int
xor
test
test
inc
and
mov
aam
aam
imull
or
shll
push
jle
loop
aas
cld
mov
and
adc
sbb
adc
or
repz
xor
addr16
test
pop
es
mov
jmp
and
imul
mov
or
pop
jne
lahf
movl
inc
xchg
faddl
sub
sbb
lods
pushf
push
dec
jle
movsl
imul
add
xor
ficomps
mov
jnp
aam
fmull
js
daa
sbb
add
jp
js
mov
frstor
cld
mov
mov
fildl
inc
call
mov
inc
xchg
adc
sarl
or
jg
in
push
cmp
jecxz
cltd
lret
es
dec
mov
int3
or
cmp
cld
push
adc
cmp
sbb
add
mov
push
or
jnp
jecxz
mov
cmp
jne
cmp
xor
adc
aam
sub
jle
push
cmp
fcomps
xor
imul
sub
test
sub
jno
arpl
ja
mov
push
inc
in
pop
enter
sbb
roll
scas
jns
jne
ficoms
dec
loop
cltd
xlat
in
cld
incl
fiadds
jmp
ficomps
lea
ficoms
aas
fimuls
lea
ficoms
lea
fisubrs
lea
fisubs
aas
fisubrs
lea
fidivs
lea
fsubrp
xchg
aas
fisubs
xchg
aas
ficoms
xchg
aas
fdivrp
xchg
aas
fisubs
xchg
aas
fdivrp
xchg
aas
fdivp
xchg
aas
fdivrp
xchg
aas
fisubs
mov
faddp
mov
fsubp
mov
fidivrs
xchg
aas
fmulp
xchg
aas
add
int
aas
ficoms
xchg
icebp
rcll
xchg
icebp
lret
adc
add
adc
add
adc
add
adc
add
adc
add
adc
cmp
adc
add
adc
add
adc
add
adc
xor
adc
add
adc
add
adc
add
adc
fsts
out
ficoms
out
ficoms
out
ficoms
fnstenv
mov
adc
add
adc
add
adc
xor
sbb
out
ficoms
out
ficoms
out
ficoms
das
pop
stc
adc
add
adc
add
adc
jmp
icebp
add
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
icebp
add
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
jmp
jmp
fstl
add
add
jmp
fstl
add
fstl
add
testb
jmp
fstl
add
fstl
add
add
add
push
add
mov
add
mov
add
jne
cmp
xchg
add
ja
add
ja
add
fwait
cmpb
xchg
add
ja
add
ja
add
dec
cmpb
inc
push
add
add
push
add
aaa
push
add
add
add
aaa
push
add
aaa
push
add
test
cmp
pop
push
add
testl
cmp
pop
push
add
testl
cmp
or
add
fidivs
cld
fiadds
sub
fidivs
cld
fidivs
cld
fidivs
cld
fsubp
sub
fidivs
cld
fidivs
cld
incl
fidivs
cld
fidivs
fidivs
cld
fidivs
cld
fidivs
cld
fimuls
fidivs
cld
fidivs
cld
fidivs
cld
fiadds
cld
fidivs
cld
fidivs
cld
fidivrs
cld
fidivs
cld
fidivs
cld
ficoms
fidivs
cld
fidivs
cld
fidivs
cld
fisubrs
ficoms
out
ficoms
out
ficoms
out
add
adc
lock
add
adc
add
adc
add
adc
rclb
out
ficoms
out
ficoms
out
ficoms
sub
mov
out
ficoms
out
ficoms
out
ficoms
ds
out
ficoms
out
ficoms
out
ficoms
dec
cs
add
adc
add
adc
add
adc
call
ficoms
out
ficoms
out
ficoms
pusha
call
add
adc
add
adc
jmp
std
call
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
std
call
fstl
add
fstl
add
std
call
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
inc
std
call
jmp
fstl
add
fstl
add
fstl
add
fstl
add
push
adc
add
adc
add
adc
add
or
add
adc
add
adc
add
and
add
adc
add
and
add
add
ja
add
xchg
add
push
push
cmp
ja
add
add
add
inc
adc
add
pop
cmp
aaa
adc
add
adc
add
add
mov
cmp
aaa
adc
add
adc
add
adc
add
add
notl
add
fisubs
cld
ficoms
cld
fisubs
cld
fisubs
cld
ficomps
cmp
fisubs
cld
fisubs
cld
fisubrs
cld
fisubs
cld
incl
fisubs
cld
fdivp
mov
fisubs
cld
fisubs
cld
fisubs
cld
fisubrs
aas
fisubs
cld
fisubs
cld
fisubs
cld
ficoms
fisubs
cld
fisubs
cld
fiadds
fisubs
cld
fisubs
cld
ficomps
cmp
ficoms
out
ficoms
out
ficoms
jg
stos
adc
add
adc
add
adc
add
ficoms
mov
add
adc
add
adc
add
adc
pop
jmp
out
ficoms
out
ficoms
out
ficoms
mov
rcll
add
adc
mov
or
adc
jno
adc
jno
adc
jno
adc
jno
adc
jno
adc
jno
adc
jno
adc
jno
adc
jmp
add
adc
jmp
fstl
add
in
cmp
in
fstl
add
test
sub
dec
ss
xor
stc
out
ss
jecxz
ss
fstl
add
insl
cmp
pop
jecxz
add
in
adc
fucomp
and
std
in
test
adc
rcrl
xor
adc
lock
xor
insl
add
mov
shrb
enter
repz
cmp
sbb
cmp
sbb
cmp
sbb
repz
and
sub
adc
cmp
xor
dec
cmp
pop
cmp
insb
cmp
jl
xor
mov
xor
pushf
cmp
lods
cmp
mov
cmp
fdivrl
mov
sbb
cmp
or
add
sbb
mov
and
mov
dec
cmp
sbb
sbb
and
and
fimuls
adc
and
lret
adc
lret
cld
ret
or
inc
pop
sbb
dec
pop
sub
arpl
cmp
imul
sbb
insb
or
pop
jl
lods
adc
repz
lods
jmp
adc
mov
adc
lret
adcl
ret
sub
or
inc
push
sbb
dec
push
sub
arpl
cmp
jmp
dec
sbb
pop
adc
insb
or
add
imul
cli
jb
push
cli
mov
jp
xchg
sbb
sub
sub
adc
xor
dec
sbb
stc
xor
add
ljmp
stc
lret
mov
stc
stos
sbb
clc
xchg
sbb
clc
mov
cmp
jb
inc
clc
push
push
jb
push
clc
mov
jp
xchg
sbb
stos
sbb
clc
lret
clc
mov
cmp
jecxz
cmp
add
adc
adc
add
adc
add
adc
add
sub
ljmp
aad
mov
insl
int
das
jne
int
das
in
fs
jne
adc
jmp
fstl
add
loopne
xor
fmul
xor
call
mov
xor
pushf
xor
iret
jl
xchg
iret
dec
xor
out
sub
int
and
fstp
sbb
stc
sar
xor
jmp
xor
loopne
xor
fadd
xor
rcr
xor
add
push
pop
ss
xorb
pop
sbb
adc
and
jmp
sub
jecxz
xor
lret
pop
cmp
roll
inc
aaa
dec
push
dec
aaa
inc
push
push
aaa
imul
aaa
push
push
pusha
aaa
imul
aaa
stos
pop
add
notl
add
mov
adc
sub
adcl
cmp
adc
sti
adc
ret
adc
adc
cmp
xlat
adc
adc
lods
cmp
adc
or
fidivs
adc
xor
push
adc
inc
add
sbb
pop
cmc
inc
adc
insb
in
adc
jl
sub
or
sub
adc
pop
pop
sbb
dec
pop
sub
pop
pop
cmp
dec
pop
inc
adc
cwtl
pop
push
add
adc
lock
adc
sti
adc
lret
adc
fistl
jo
sti
adc
sarl
adc
xchg
cmc
mov
jae
xor
pop
adc
add
adc
jle
mov
add
adc
add
adc
add
push
add
movsbl
in
jle
mov
adc
sti
aad
test
cmpsb
push
and
scas
push
and
xchg
push
es
xchg
push
and
orl
sub
pop
divps
imul
pop
push
jb
pop
push
je
test
ss
incl
call
dec
xor
rcrb
scas
call
xor
cmp
je
xor
out
jmp
xor
jecxz
xor
fdiv
xor
ljmp
loopne
xor
rol
xor
jecxz
xor
sarl
xor
xchg
pop
fistpl
xor
xor
les
lods
les
sahf
hlt
pop
xor
ds
ss
push
call
xor
cld
add
push
adc
bound
adc
dec
push
and
cs
es
test
cmp
mov
cmp
add
dec
aaa
jbe
dec
aaa
sbb
pusha
aaa
adc
bound
pop
push
je
push
push
jbe
adcb
aaa
scas
pop
xchg
aaa
bound
mov
aaa
mov
mov
aaa
or
loopne
pop
icebp
aaa
enter
mov
push
insb
cmp
cltd
cmp
push
push
mov
loope
pusha
add
xlat
xor
or
repnz
mov
or
movsb
xor
and
or
push
or
add
or
movsb
cmc
enter
and
sbb
fisubrl
or
lret
push
cmovle
jge
cmpb
push
fwait
test
push
add
fisubs
pushf
fsts
adc
fcoml
lds
dec
adc
cmp
pop
in
adc
popa
std
nop
adc
dec
cld
mov
xchg
cld
xor
dec
sti
lcall
cli
test
inc
cli
mov
stc
push
sbb
stc
lret
testl
or
idivb
fcomip
int
push
repz
ltr
icebp
pop
adc
icebp
insl
adc
icebp
dec
adc
icebp
out
stc
xor
adc
dec
adc
add
adc
loop
adc
jecxz
push
jle
jmp
rorb
lret
cmp
mov
pop
leave
cltd
xor
push
xor
lock
in
out
xor
aam
xor
loop
aaa
cld
aam
ss
xor
jb
jecxz
xor
dec
rcrl
cmp
iret
lea
dec
iret
adc
jmp
fstl
add
insl
cs
in
nop
sub
rcrb
leave
mov
jne
lea
push
leave
or
xlat
lock
sbb
sbb
iret
fisttpll
pop
aaa
wbinvd
xchg
aaa
and
mov
pushf
pop
or
cmp
sbb
mov
add
sbb
cmp
inc
cmp
push
addr16
sbb
pushf
cmp
sbb
xor
fistps
test
fwait
sbb
cmp
sbb
cmp
add
cmp
add
pop
jecxz
call
add
mov
fnstenv
adc
mov
aad
sbb
pop
xorb
xchg
xor
fistl
mov
adc
push
popa
lock
adc
icebp
or
out
or
xlat
xor
test
ret
dec
or
aaa
pop
pushl
cld
fiadds
inc
scas
lock
cmpps
jg
adc
in
pop
push
dec
in
lret
in
cli
push
in
ljmp
int
or
mov
testl
or
pop
mov
in
pop
daa
in
pop
and
mov
insl
in
pop
jge
inc
pop
jo
push
pop
xchg
in
sbb
in
push
fucom
fstl
repnz
pop
cmp
je
xor
ret
pop
push
stos
pop
loop
insb
push
mov
in
adc
jb
lcall
out
or
dec
in
aaa
seto
testb
out
sbb
popa
adc
loopne
adc
loopne
adc
test
fldcw
sarl
xor
pop
xor
call
jecxz
ljmp
nop
lret
adc
xor
cltd
xor
ljmp
movsb
aad
aaa
in
xor
sub
fcoms
add
clc
mov
adc
sbb
das
jnp
shrl
cld
in
outsb
cs
in
sub
dec
iret
pusha
sub
repnz
sbb
mov
jl
lcall
add
xor
add
xor
add
xor
add
mov
bound
cmp
test
cmp
push
sbb
cmp
sbb
cmp
mov
aas
sbb
cmp
adc
cmp
sbb
cmp
sbb
mov
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
lret
cmp
aad
cmc
cmp
enter
rcrb
mov
adc
test
add
incl
adc
in
dec
cmp
ficoms
pop
out
movsl
or
out
lock
out
adc
fistl
jle
pop
adc
int3
jmp
push
int3
ja
lods
mov
daa
lods
or
arpl
fimull
dec
adc
push
fs
push
mov
jbe
stc
lock
or
jmp
out
or
out
push
add
in
mov
pop
sahf
jmp
or
ljmp
gs
out
fldcw
push
add
adc
adc
fsts
fildll
adc
fildll
adc
fisubrs
push
sbb
dec
push
pop
ficoms
push
fidivrs
adc
adc
fstl
adc
pop
add
cmpsb
adc
adc
mov
fsts
xor
rcl
xor
loope
xor
fldcw
xor
out
push
xor
push
xor
loopne
xor
shlb
cmc
in
aaa
pop
in
xor
roll
xor
scas
ficompl
xor
loope
cmp
fnstenv
cmp
add
je
cmpsl
out
add
int
clc
movsl
fstl
add
lret
aas
repnz
das
and
movsl
das
fs
subb
in
pusha
das
add
call
xor
xor
add
xor
popa
xor
into
xor
std
inc
xor
std
imul
cld
pop
xor
sbb
jo
jge
sbb
xor
push
sub
add
pop
xchg
xor
mov
push
sbb
xor
movsb
outsl
push
mov
sub
push
getsec
mov
sbb
aaa
loop
inc
cmp
adc
cmp
aad
mov
push
or
sbb
mull
or
test
push
lods
aam
add
inc
lds
scas
mov
add
add
nop
push
aas
mov
aaa
mov
fdivp
adc
adcb
out
ljmp
in
inc
or
sbb
icebp
push
lret
dec
or
rorl
or
out
enter
in
mov
or
loopne
jp
mov
iret
or
jecxz
or
in
push
pop
out
add
add
adc
mov
es
add
adc
loop
adc
loop
adc
mov
sbb
scas
adc
cmpsl
fdivrl
cmpps
adc
fmul
adc
fsubl
adc
fmull
adc
fsubl
adc
fcmovnb
fcmovnu
jne
fiadds
push
pop
fisubs
mov
or
out
xor
loop
xor
xchg
mov
gs
lret
ss
movsl
ss
in
ss
ss
hlt
xor
xlat
test
xor
out
xor
xlat
loope
mov
out
cmp
fcom
cmp
outsb
cmp
iret
cmp
insl
cmp
fmuls
sbb
cmp
fdivs
sti
add
sbb
icebp
cmp
cmp
sbb
jnp
adc
add
inc
xor
incl
add
mov
jmp
xor
add
xor
incl
xor
jmp
xor
ljmp
xor
decl
xor
lcall
xor
add
xor
add
add
add
xor
adc
ss
push
fdivs
mov
cmp
insb
cmp
pop
test
mov
and
cmp
push
stc
or
push
stc
xor
out
clc
pop
adc
adc
cmp
loope
je
lods
pushl
repnz
decl
jmp
cmp
add
pop
fcmovne
mov
add
ret
shlb
call
test
lods
cld
fidivs
lods
shll
ficoms
hlt
sub
test
cmpsb
out
lock
aaa
repz
out
leave
repnz
repz
or
ljmp
cmp
mov
adc
push
fidivrs
fisubs
imulb
fnsave
xor
or
stc
jecxz
or
push
std
stos
in
add
adc
subl
movb
adc
clc
stos
fcompl
stc
scas
fldt
pop
fildl
std
mov
out
lcall
add
adc
sbb
or
rcr
cmpsb
testl
clc
data16
clc
or
adc
mov
call
aaa
and
lods
cmp
mov
pop
add
fwait
cmp
mov
cmp
xchg
cmp
jnp
dec
faddl
cmp
jae
pop
fcompl
dec
fsubl
scas
fmull
scas
fcoml
sahf
fdivrl
cmp
fsubrl
cmp
xor
pop
fcompl
cmp
and
out
fimuls
cmp
ficoms
cmp
fiadds
cmp
fdivp
cmp
fsubrp
cmp
fsubp
cmp
add
fnstsw
add
inc
aas
jo
dec
aas
js
push
aas
pusha
adc
sbb
arpl
adc
imul
adc
and
jnp
clc
adc
add
stc
jnp
add
dec
and
xor
xor
pop
xor
pop
xor
daa
xor
xor
xor
and
xor
xor
xor
push
xor
pop
xor
or
xor
and
xor
jg
dec
and
xor
xor
mov
in
mov
out
mov
loop
mov
into
int
lock
cmp
pop
mov
sti
or
mov
sbb
fdivp
xchg
add
mov
lret
hlt
push
repnz
clc
cli
add
xor
push
shll
decl
ret
out
jecxz
adc
mov
stc
xor
jecxz
enter
call
sub
adc
add
adc
repz
loope
repz
sbb
fcmovnu
int3
hlt
inc
loopne
cmc
dec
loopne
cmc
jo
testl
out
sti
push
fadd
cld
ljmp
stc
add
fstpt
jmp
fistl
jl
xchg
daa
fistpll
jnp
push
outsb
fisubs
sbb
out
adc
out
add
adc
repz
stos
repz
jbe
xchg
loop
icebp
mov
add
loope
imull
incl
jno
push
lret
xor
adc
adc
hlt
mov
xor
xchg
mov
js
xchg
mov
dec
test
repz
ss
jne
lock
xor
fcoml
cmp
cmp
fisubs
cmp
cmp
cmp
mov
jmp
loop
add
or
fldt
and
cs
lock
add
movsl
or
les
rcrb
pop
cmp
mov
cmp
pop
push
cmp
sbb
cmp
sbb
cmp
sbb
cmp
icebp
sbb
stc
push
sldt
mov
pop
in
xor
push
enter
cmc
xor
and
xor
and
xor
and
fsubl
test
inc
and
ss
xchg
add
shlb
and
repz
cmpsb
mov
add
adc
testb
test
lret
stc
cld
repnz
sbb
inc
stc
gs
stc
mov
sarb
cli
pop
enter
sar
cmp
jg
into
test
cmc
dec
mov
sub
push
mov
add
and
insb
or
icebp
stos
add
data16
out
xor
js
mov
mov
int
lock
xchg
lock
adc
movsl
in
out
push
in
lock
in
lock
cmp
xor
loop
icebp
pop
jecxz
repnz
jecxz
stc
repnz
loope
repnz
cmp
mov
sar
lock
cld
fsts
std
add
xlat
sub
cwtl
fdivs
std
rcl
std
cmp
mov
or
sbb
clc
ja
cmp
fdivrl
stc
sbb
cli
sbb
out
adc
js
adc
leave
or
dec
das
jmp
scas
sub
xchg
jmp
sub
leave
xorl
rcll
iret
cmp
inc
iret
add
enter
mov
mov
pushf
add
xor
mov
xor
xchg
lock
movl
test
aaa
jg
jp
andb
scas
pop
dec
aaa
pushf
push
xor
mov
getsec
filds
int3
xor
ss
lret
xor
cmpsl
add
push
js
lea
test
leave
adc
lret
cmp
adc
sbb
cmp
push
push
sbb
leave
push
xor
cmp
push
data16
jge
add
mov
add
popf
cmp
pop
mov
mov
ret
push
xor
sbb
pop
dec
cmp
mov
or
push
sbb
negb
push
ds
sbb
push
sbb
ds
sbb
aas
inc
add
ficomps
in
push
add
into
in
pop
iret
daa
in
sbb
dec
in
cmp
lock
push
scas
xchg
in
in
mov
repz
stc
jmp
cmp
sub
out
inc
icebp
stos
out
mov
out
hlt
cmp
ljmp
push
cmc
repnz
sbb
cld
cmp
pop
mov
cli
xor
cli
jae
fwait
cli
lahf
pop
imul
add
js
out
add
test
ja
out
hlt
adc
sti
popf
aam
idivb
add
dec
xlat
lahf
notl
xlat
out
or
jb
ficoms
and
gs
hlt
mov
aad
push
jecxz
repnz
fcomip
add
loop
repz
xor
stos
loop
out
ja
pop
lock
fnsave
lock
lock
fistpl
icebp
dec
fdivl
sub
lods
in
rcr
jmp
out
pusha
sti
cli
fdivr
and
aaa
inc
cmp
aaa
push
and
add
mov
adc
ss
add
xchg
cli
xor
pop
repnz
ss
out
xor
mov
xlat
popa
xor
xor
stc
xor
mov
xor
mov
xor
movsb
addr16
movsb
inc
xor
xchg
adc
mov
cmp
mov
cmp
sub
fisubl
cmp
push
or
add
push
dec
cmp
les
ds
push
sbb
incl
and
call
adc
add
gs
xor
pop
xor
and
shlb
nop
xor
jnp
test
and
nop
aaa
pop
lds
lret
and
scas
cmp
adc
cmp
pop
and
dec
pop
inc
cmp
pop
fwait
cmp
sbb
cmp
push
cmp
in
sbb
fsubrp
imulb
pop
lock
dec
lock
or
and
push
repnz
add
addl
repz
sub
fsubrp
repz
into
adc
fwait
in
std
into
cs
pop
scas
inc
in
es
push
in
pop
scas
dec
in
push
pop
in
orb
in
mov
mov
cltd
jne
in
mov
lods
in
mov
out
shr
fmul
or
push
int3
xor
sbb
inc
out
xor
jbe
pusha
lods
mov
js
add
jp
inc
fisubrs
mul
fists
testl
fbld
filds
mull
mov
testl
fucomip
not
fmul
mull
fsubl
clc
int3
cmp
mov
stc
fcoml
stc
test
inc
stc
rcr
stc
scas
fsubl
stc
aam
hlt
stc
add
fidivrl
stc
and
cltd
stc
and
outsl
cli
push
push
je
xor
je
xor
gs
pop
push
xchg
xor
push
xor
inc
or
aaa
dec
inc
test
and
xchg
aaa
xor
dec
add
aaa
aaa
mov
adc
repz
mov
bound
push
mov
repz
xor
xor
rcr
scas
mov
mov
push
leave
imul
rcll
mov
add
int3
mov
cmp
or
and
cmp
sbb
sbb
iret
pop
xor
rcrl
aas
push
pop
out
aas
aaa
cmp
add
inc
sbb
jle
mov
mov
xor
push
sub
add
xchg
dec
sbb
sbb
pop
sbb
xor
sbb
data16
jb
xorl
add
sbb
xor
or
xor
or
xor
fmulp
out
pop
lret
movsl
out
mov
enter
mov
cli
mov
mov
stc
fsubrs
xlat
stc
lock
clc
dec
add
cs
push
or
data16
dec
stc
jae
inc
stc
jg
cmp
out
hlt
jmp
add
push
loopne
sub
jmp
mov
in
mov
in
jb
imul
andb
jmp
push
xchg
jmp
push
xchg
jmp
push
dec
jmp
imull
lahf
negl
or
adc
out
hlt
dec
jle
imul
dec
pop
in
ja
xlat
out
add
jmp
add
adc
hlt
pop
inc
jb
movb
dec
inc
loopne
mov
adc
dec
inc
sti
clc
testl
stc
cmpsl
inc
pop
stc
push
inc
cmp
inc
mov
divb
in
cmc
dec
inc
cmp
push
inc
xchg
imul
inc
in
test
adc
negb
mov
addl
testl
lds
pop
mov
cmp
movsb
cmp
lds
sub
cmp
mov
cmp
addb
jp
cmp
test
js
mov
cmp
xor
cmp
xchg
cmp
aaa
aas
cmp
xor
cmp
xchg
pusha
hlt
mov
cmp
add
xor
add
mov
stc
aam
inc
icebp
or
mov
into
shlb
movsl
sti
pushf
ds
sbb
mov
pusha
aas
push
jb
insb
jbe
add
mov
and
cltd
aas
and
stos
aas
mov
scas
aas
aam
fdivrl
test
out
aas
inc
shl
pop
adc
add
add
xor
push
xor
add
xor
das
add
xor
add
xor
add
daa
add
xor
jmp
stc
add
xor
add
jnp
fiaddl
and
adc
jo
es
imulb
negl
repnz
jmp
aad
jmp
jecxz
push
out
ret
cli
in
mov
mov
push
test
out
add
in
in
adc
in
or
in
add
in
stc
or
push
icebp
pop
in
jmp
pusha
in
fnstenv
in
leave
xchg
in
sar
std
stc
add
fsubrp
sub
push
scas
adc
repz
inc
test
mov
repz
push
repz
inc
std
repnz
repnz
sub
mov
call
repnz
ds
lock
aas
jp
jnp
mov
cmc
stos
inc
hlt
hlt
fldl
hlt
sbb
inc
lahf
repz
mov
xor
inc
fdiv
dec
inc
mov
jmp
dec
push
in
mov
adc
xchg
dec
stos
in
xor
in
jmp
push
in
es
xor
xchg
inc
jns
lods
dec
add
imulb
clc
jmp
or
lret
xor
xorl
mov
xor
xchg
jae
insl
std
or
mov
outsb
push
das
es
out
jp
cmp
cltd
cmp
inc
cmp
ss
xor
aaa
jnp
icebp
inc
xor
jmp
fstl
add
sub
xor
push
sbb
xor
or
cs
cmc
cmpb
jae
sarb
cld
sub
mov
sti
mov
std
stc
cmpb
sti
push
cmp
divl
dec
cmc
jmp
std
adc
xor
arpl
xor
xor
add
xor
xor
add
xor
add
add
xor
add
push
sub
cld
xor
cld
pop
ss
pusha
ss
push
ss
jbe
or
repnz
or
test
notl
fldenv
ficoms
in
insb
push
fwait
in
mov
out
fsubr
lods
in
pop
in
xor
out
jmp
mov
jmp
mov
in
add
push
nop
cmpsb
in
cmpsb
pop
in
push
mov
jmp
push
mov
jmp
test
enter
shl
mov
jmp
adc
jmp
dec
xchg
jmp
dec
ljmp
dec
into
dec
shr
dec
lret
dec
adc
push
dec
sbb
push
dec
adc
push
dec
stos
ljmp
dec
lcall
dec
lret
dec
xchg
ljmp
xchg
ljmp
pop
in
sub
in
fimuls
in
push
dec
outsb
in
sbb
inc
jo
xchg
xchg
inc
cmp
jmp
rolb
idivb
pop
ss
add
ss
clc
or
testl
xorb
add
clc
jmp
add
adc
and
shr
xor
rol
xor
lret
cmp
xchg
xor
or
xlat
lods
cmp
hlt
mov
stos
mov
rorb
testl
mov
sbb
or
add
das
cmp
insl
das
push
mov
das
add
jmp
cmp
out
ja
jl
or
idiv
xchg
cmp
stc
mov
stos
cli
loop
jns
push
cmp
out
pop
cmp
clc
leave
cmp
out
fstpt
out
in
cmp
clc
or
mov
clc
dec
cmp
push
je
cld
clc
test
xchg
out
idiv
ja
cmc
push
adc
add
cld
fdivrp
in
xor
inc
decl
xor
add
xor
add
xor
push
repnz
in
mov
xlat
in
lods
repnz
mov
hlt
in
push
stos
rcr
in
enter
rcll
in
mov
in
mov
jmp
cmpsl
dec
jmp
cmpsl
adc
xchg
jmp
enter
repz
clc
fisttps
ljmp
popf
ficoml
inc
call
add
aad
pop
mov
sub
sbb
add
push
adc
hlt
push
inc
je
jae
enter
mov
sub
bnd
xlat
icebp
sahf
ds
cmpsb
ds
scas
ds
repnz
ds
jle
add
xchg
cli
icebp
outsb
ds
ds
arpl
icebp
fdivrl
std
lock
inc
imul
jne
jecxz
sarl
push
in
in
or
mov
jmp
dec
and
int3
dec
aam
sub
ljmp
out
aam
mov
mov
inc
cmp
sub
cmp
sbb
cmp
xchg
imul
cmp
xchg
cmp
pushf
cmp
sub
cmp
add
je
push
decb
xor
push
mov
ss
xorl
mov
fnstenv
pop
mov
add
add
mov
xor
stos
imul
push
test
xor
xchg
or
mov
bnd
jg
adc
adc
lret
out
cmp
loop
cmp
out
hlt
incl
jmp
add
aam
pop
xor
pop
movntq
cmp
sub
idiv
pop
fdivp
inc
or
add
fcmovbe
xor
and
cmp
iret
cmp
in
cmp
in
cmp
in
cmp
in
cmp
in
cmp
jecxz
cmp
loop
cmp
lret
aad
add
aad
movsb
stos
aad
adc
aad
adc
aad
or
cld
cmp
add
fidivs
int3
repz
cld
sbb
cld
ficomps
shll
int3
data16
into
sub
sub
xor
mov
out
adc
ficoml
ret
icebp
jno
mov
xchg
lcall
jnp
lcall
adc
ficoms
lret
aam
inc
fcmovbe
cmpsb
inc
or
incl
inc
lret
fcoms
cmp
pusha
loopne
aas
insb
loopne
add
xchg
inc
add
ficoms
pop
mov
inc
jae
inc
inc
jns
push
inc
mov
aad
inc
icebp
aam
inc
aam
inc
es
inc
not
jae
addr16
dec
inc
inc
aam
inc
movsb
aam
inc
jnp
movl
fdiv
inc
mov
xlat
pop
inc
pop
xlat
pusha
inc
cmc
add
cmp
mov
sub
jg
xorb
jle
aaa
jmp
fstl
add
xor
inc
sub
cwtl
sub
or
das
call
add
jne
cmp
cmp
xor
cmp
xchg
cmp
mov
cmp
scas
cmp
mov
cmp
in
cmp
sti
cmp
movsb
push
cmp
xchg
aaa
cmp
xchg
inc
cmp
test
add
repz
mov
inc
icebp
push
cmp
mov
cs
mov
ds
ds
ds
fsubp
ds
fdivp
ds
faddl
aas
dec
fists
aas
and
xor
iret
fldl
out
fstl
mov
fnsave
iret
fldl
aas
pop
fbld
aas
faddp
aas
das
fcomip
inc
xor
jmp
add
mov
add
ret
loope
xor
in
xor
mov
rcrb
lret
shlb
lret
shrb
mov
stos
sarb
imul
lods
imul
lods
jnp
xchg
lods
imul
lods
dec
shlb
or
sub
rorl
repz
adc
or
xor
xor
push
ljmp
xchg
lret
mov
mov
ror
mov
repz
into
adc
xor
push
stos
or
jae
jbe
xchg
or
mov
mov
roll
or
inc
xlat
lods
inc
fst
int
add
aad
inc
inc
pop
insl
inc
test
dec
inc
sbb
insl
inc
fst
int
inc
popf
aam
inc
test
int
pop
aad
inc
inc
aad
inc
sub
sbb
inc
mov
aam
inc
leave
aam
inc
rcl
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
push
add
push
add
mov
add
mov
add
push
add
push
add
mov
add
mov
add
xchg
add
xchg
add
ja
add
ja
add
xchg
add
xchg
add
add
add
ja
add
inc
push
add
inc
push
add
aaa
push
add
aaa
push
add
inc
push
add
inc
push
add
aaa
push
add
aaa
push
add
pop
push
add
pop
push
add
testl
add
pop
push
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
aaa
sldt
aaa
sldt
inc
sldt
inc
sldt
aaa
sldt
aaa
sldt
pop
sldt
pop
sldt
testl
add
pop
sldt
pop
sldt
testl
add
push
add
push
add
mov
add
mov
add
push
add
push
add
mov
add
mov
add
add
push
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
fsubp
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
ja
add
add
adc
add
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
sldt
sldt
mov
add
mov
add
xchg
add
add
sldt
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
sldt
inc
sldt
aaa
sldt
aaa
sldt
inc
sldt
inc
sldt
aaa
sldt
aaa
sldt
pop
sldt
pop
sldt
testl
add
pop
sldt
pop
sldt
testl
add
push
add
push
add
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
testl
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
add
mov
add
xchg
add
xchg
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
adc
add
add
aaa
adc
add
adc
add
add
inc
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
stc
add
fdivrp
add
fdivrp
add
fdivrp
add
add
stc
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
fdivp
add
add
testl
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
ficoms
jmp
add
adc
add
adc
add
adc
add
adc
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
add
adc
jmp
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
fstl
add
aaa
adc
add
adc
add
adc
add
adc
add
sldt
testl
add
pop
adc
add
sldt
testl
add
sldt
mov
add
add
sldt
sldt
mov
add
mov
add
xchg
add
xchg
add
ja
add
ja
add
xchg
add
xchg
add
ja
add
ja
add
inc
sldt
inc
sldt
aaa
sldt
aaa
sldt
fsubrp
jnp
fwait
dec
lret
cmp
or
jl
push
stos
mov
test
dec
or
aaa
leave
sahf
daa
adc
pop
inc
fisubl
frstor
stos
and
mov
stos
loop
fwait
jbe
lods
jp
cld
or
adc
jno
cld
add
call
push
add
inc
test
or
jge
fbld
mov
out
jle
push
sbb
test
hlt
xchg
jle
mov
stos
out
adc
mov
lods
enter
add
xchg
and
fimuls
sub
std
aad
pop
addr16
cmp
insl
shll
and
pushf
xor
daa
pop
test
ljmp
movsb
jns
cmp
ret
mov
mov
call
mov
cmp
adc
out
into
es
movsb
mov
arpl
xchg
push
xchg
lock
inc
lret
je
lret
add
loope
lods
xor
loope
les
sub
je
xor
iret
push
push
dec
mov
xor
data16
cmc
ja
push
jl
and
sub
sbb
pop
ret
add
bound
inc
xchg
outsb
aad
or
ret
inc
aad
popa
rorb
mov
add
xor
xor
xor
stc
jb
into
mov
mov
mov
gs
pusha
add
je
jecxz
cltd
add
movsl
mov
mov
push
shll
push
jnp
movsl
imul
sahf
mov
in
sbb
cmp
insl
lock
xor
jle
add
dec
das
mov
testb
cld
pop
xchg
ss
adc
mov
rcr
cmp
pop
sbbl
outsb
xchg
adc
test
pand
nop
test
push
dec
and
push
add
and
ss
mov
mov
and
jl
dec
ret
icebp
outsl
adc
int3
int3
sbb
int3
mov
or
call
push
ret
stos
mov
push
nop
inc
xor
jp
jno
push
data16
push
xchg
mov
xchg
aaa
imul
aas
and
ds
mov
cmp
int3
or
mov
xchg
mov
icebp
add
xchg
gs
fmull
xchg
gs
clc
mov
xchg
mov
xchg
push
push
clc
mov
xchg
sbb
ficoms
add
xlat
mov
pop
roll
mov
mov
movsl
dec
sbb
mov
adc
inc
xchg
lods
fstl
mov
mov
add
pop
aam
test
in
inc
jbe
scas
or
mov
gs
in
sbb
mov
adc
dec
dec
xchg
roll
lock
and
mov
cmp
int3
sub
int3
and
int3
sbb
int3
mov
out
adc
testl
stc
fdiv
sbbl
mov
push
gs
call
push
and
mov
push
fisubs
push
test
adc
cld
ficoms
add
jne
mov
nop
ret
inc
hlt
xor
or
xchg
mov
push
add
inc
call
push
lcall
mov
cmp
xor
iret
int3
sub
int3
and
int3
sbb
int3
stos
xchg
mov
add
dec
or
push
dec
or
int3
int3
mov
int3
int3
sub
push
mov
or
rcll
int3
stos
int3
int3
mov
int3
int3
sub
push
add
push
dec
mov
inc
fimuls
add
xchg
cmp
add
mov
adc
inc
add
gs
or
inc
hlt
mov
cmp
in
and
add
adc
jmp
xchg
mov
fisttpll
adc
mov
or
add
stos
or
pop
push
adc
add
in
ljmp
ret
int3
stos
int
int3
mov
int
int3
add
xchg
mov
mov
lock
inc
fidivrs
ret
int3
sub
int3
and
int3
sbb
int3
mov
mov
lea
fimuls
jl
ficoms
add
fimull
mov
test
mov
loope
inc
lret
add
in
mov
fldl
cld
push
inc
hlt
cmp
in
inc
add
hlt
mov
loope
mov
dec
sar
cli
add
push
mov
test
fldenv
testl
push
test
add
test
gs
add
test
mov
xchg
or
test
mov
fdiv
mov
cmp
int3
mov
mov
out
cmp
mov
in
add
mov
gs
call
add
mov
pop
push
lock
mov
add
adc
lock
sbb
cmpl
pop
test
add
les
push
gs
loopne
mov
add
inc
notl
addr16
hlt
mov
pop
sbb
out
adc
inc
decb
adc
push
loopne,pt
fwait
or
inc
out
mov
mov
or
adc
in
and
add
ficoms
mov
xchg
js
ficomps
sub
cmpl
pop
inc
and
add
ficoms
mov
xchg
cmp
ljmp
cmpl
adc
stos
fmull
incl
roll
cmp
mov
xlat
testl
mov
mov
gs
or
push
dec
hlt
push
push
jg
push
xchg
mov
mov
mov
mov
fldl
hlt
push
inc
in
lahf
or
mov
icebp
add
xchg
xchg
idiv
xchg
mov
pop
popf
sub
or
fstl
call
orb
fiadds
add
mov
std
inc
add
xchg
push
push
cmp
push
push
dec
or
cmp
mov
xor
int3
sbb
int3
stos
mov
mov
sbb
push
inc
fiadds
mov
xor
int3
lcall
or
mov
add
push
push
xor
gs
add
lods
xchg
push
dec
in
mov
add
dec
clc
push
cmp
mov
arpl
insb
inc
pop
push
clc
add
or
shlb
push
sbb
cmp
jne
mov
mov
mov
mov
add
mov
mov
xchg
fmuls
cld
push
or
jmp
or
rol
int3
stos
mov
or
mov
add
push
mov
push
xchg
ljmp
mov
push
xchg
scas
xchg
mov
dec
hlt
jge
push
inc
fimuls
dec
add
xchg
or
jmp
xchg
mov
or
push
push
fwait
push
and
add
sub
xchg
inc
roll
add
adc
mov
lods
push
inc
fisubs
enter
push
inc
fiadds
add
lods
push
inc
fiadds
dec
outsb
inc
call
addl
add
adc
fnstsw
mov
shl
mov
xor
int3
mov
cmp
pop
decl
cmc
push
mov
xor
int3
sbb
int3
mov
mov
add
test
mov
mov
push
cmp
cmp
mov
icebp
pop
mov
std
mov
jle
cmp
out
cmp
aas
fiadds
add
inc
sti
jmp
mov
push
push
push
push
rorl
addr16
fmull
mov
dec
out
mov
ds
sbbl
mov
add
in
mov
xchg
jns
xor
jae
push
dec
call
jae
xchg
pop
push
adc
sub
inc
adc
loopne
das
adc
mov
sbb
mov
add
inc
inc
test
fisttpll
push
push
cmp
mov
inc
call
andl
mov
shrl
inc
call
in
call
roll
add
adc
push
testb
addr16
aam
or
push
inc
ficoms
insl
or
rclb
adc
adc
cmpl
inc
adc
push
cmp
xor
adc
inc
jle
dec
xor
rorb
cmp
mov
add
ficoms
mov
arpl
inc
lock
add
pushf
push
mov
cmp
fiadds
add
gs
hlt
push
je
notl
je
push
mov
cltd
inc
fcoms
fmuls
sbb
loopne
das
popa
push
mov
mov
mov
je
inc
fisubs
xchg
stos
iret
testl
ficoms
add
adc
mov
fwait
inc
fcomp
cwtl
mov
mov
fwait
dec
loopne
je
inc
fdivrp
inc
xor
in
inc
ficomps
add
and
push
mov
lret
pop
aam
mov
es
frstor
mov
mov
inc
ficoms
add
imul
movsb
lock
add
sbb
push
and
push
mov
rorb
inc
fisubs
jne
into
testl
push
xchg
call
xor
ficoml
mov
fmull
inc
ficomps
push
addr16
testl
call
push
loopne
shll
ficoms
dec
sub
push
add
cli
repz
xchg
mov
inc
ficoms
and
adc
lea
cmp
mov
lret
mov
notl
mov
mov
mov
imul
int3
lcall
mov
sbb
int3
lcall
push
adc
cmp
push
sub
xchg
cmp
mov
pop
pop
sbb
cltd
in
push
cld
aas
fisubrs
push
mov
enter
pop
aam
mov
pop
push
push
and
push
mov
int3
mov
mov
int3
mov
mov
add
sarl
add
adc
and
add
ficoms
mov
add
xchg
inc
or
rclb
adc
test
sahf
and
ret
lret
testl
jecxz
push
inc
add
adc
add
mov
fcmovnu
push
inc
ficoms
add
fimuls
add
stos
push
mov
add
adc
add
enter
add
ss
lret
mov
rclb
adc
add
call
inc
ficoms
xor
sbb
add
push
xchg
and
adc
jecxz
push
inc
fiadds
aas
fidivrs
pusha
add
adc
add
add
outsl
fcoms
mov
and
jge
push
inc
fidivs
push
mov
lret
pop
aam
mov
pusha
call
andl
mov
mov
rcll
outsl
mov
call
lcall
add
and
mov
xchg
dec
cld
in
lock
xchg
cmp
fsubrl
mov
add
insl
rclb
sbb
mov
or
aam
mov
popa
mov
fstpl
push
inc
loop
pushl
mov
mov
add
cwtl
dec
in
push
hlt
add
xchg
inc
loopne
lds
rclb
lcall
fwait
enter
adc
or
clc
sbbl
clc
cmc
push
lock
xchg
add
add
leave
mov
frstor
mov
fstl
mov
xchg
inc
clc
pop
iret
jmp
adc
frstor
xor
outsl
mov
inc
inc
xchg
or
mov
add
inc
fdivrp
enter
push
inc
fdivrp
enter
push
inc
fidivrs
test
addr16
clc
mov
pop
mov
add
adc
mov
mov
inc
fidivs
push
and
push
call
pop
int
mov
int3
push
inc
fisubs
aad
enter
ds
xor
jl
inc
ficoms
push
enter
add
pushf
push
lcall
pop
inc
enter
lods
push
inc
fisubs
xor
pushf
fstpl
aad
int3
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
ficoms
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
mov
inc
ret
pop
push
inc
or
mov
mulb
cmp
js
jns
push
push
cmp
adc
in
push
cmc
add
cmpsl
aam
xor
pop
rorb
imul
jle
lcall
je
hlt
out
jge
dec
inc
mull
mov
mov
enter
push
push
inc
cs
cs
popa
cmp
fs
mov
pop
xchg
push
mov
leave
sub
dec
int
pusha
sbb
lods
pop
int3
shrl
mov
mov
mov
test
adc
sbb
fldt
push
and
push
dec
bound
cmp
dec
inc
mov
mov
ja
test
push
sub
inc
add
sahf
testb
mov
xchg
movsb
pop
sub
shll
mov
clc
and
arpl
aam
mov
pusha
mov
mov
jbe
mov
push
push
push
test
pop
jmp
xor
arpl
mov
shr
ret
pop
push
rclb
and
pop
mov
lock
fwait
jno
faddl
in
je
into
and
adc
push
mov
ret
cmp
pop
rcr
mov
sbb
mov
int3
inc
pop
int3
cmp
pop
or
mov
pop
inc
mov
add
xlat
mov
jmp
dec
mov
arpl
jmp
gs
dec
movsl
xchg
xor
lods
ret
or
jo
pusha
fcoml
xchg
sbbb
test
sbb
inc
scas
cmp
jbe
push
cwtl
in
insb
fdivr
lahf
or
pop
cwtl
jp
xlat
cmpsb
push
push
mov
rcll
aaa
lcall
ja
mov
or
mov
aaa
bound
mov
inc
aam
mov
mov
das
add
aam
add
sub
add
clc
xchg
add
stos
xchg
add
pusha
xchg
add
sbb
add
add
add
xor
add
sbb
add
movsb
xchg
add
mov
xchg
add
xchg
add
call
xchg
add
add
add
add
add
ss
add
ds
add
dec
xchg
add
pop
xchg
add
push
add
jp
add
xchg
add
add
add
mov
add
enter
fcoms
add
notb
add
or
add
add
add
movsb
xchg
add
mov
xchg
add
xchg
add
call
xchg
add
add
add
add
add
ss
add
ds
add
dec
xchg
add
pop
xchg
add
push
add
jp
add
xchg
add
add
add
mov
add
enter
fcoms
add
notb
add
or
add
add
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
je
inc
imul
je
outsl
fs
gs
popa
outsb
fs
gs
add
and
inc
gs
jb
arpl
fs
jae
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sbb
inc
gs
inc
add
gs
gs
jae
inc
inc
add
popa
insb
imul
je
add
add
imul
add
push
add
jb
insb
insb
push
imul
aad
inc
outsb
fs
popa
imul
push
outsl
jae
push
jne
je
gs
popa
add
gs
imul
outsl
arpl
add
inc
push
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
pop
add
insb
arpl
push
arpl
or
inc
gs
gs
dec
gs
imul
push
gs
imul
add
je
jne
inc
add
inc
inc
dec
xor
cs
insb
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
mov
add
add
add
add
add
xor
add
mov
add
add
add
adcb
add
and
add
mov
add
add
add
add
add
add
add
js
add
mov
add
add
add
add
add
add
add
pusha
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
hlt
mov
add
add
sub
add
adc
add
and
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
addb
or
add
add
add
add
add
mov
add
add
add
xor
xor
add
add
or
xor
add
add
or
mov
mov
add
add
add
decl
add
xor
add
pop
add
cld
sldt
clc
add
add
or
add
add
add
add
add
add
add
push
add
add
add
roll
add
add
add
add
add
add
add
add
add
sldt
sub
add
and
add
inc
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
jnp
mov
pop
mov
add
pop
add
or
mov
add
add
mov
add
xor
xorl
add
sti
mov
add
sti
mov
add
or
add
or
add
sti
mov
add
cmp
add
aas
mov
add
add
mov
mov
add
add
or
or
add
add
add
xor
add
add
add
add
add
xor
mov
mov
add
add
btc
add
mov
add
xor
add
mov
xor
add
add
xor
add
add
add
aas
add
mov
xor
or
add
add
add
add
mov
or
add
sti
mov
mov
add
add
add
mov
mov
add
add
add
sti
mov
lock
add
add
incl
add
add
add
aas
clc
lock
add
clc
decl
add
xor
xor
add
add
clc
pop
push
ud0
loopne
jmp
add
jmp
add
jmp
add
call
pop
inc
pop
inc
add
incl
add
pusha
add
lock
lock
cli
cld
add
lock
add
lock
add
lock
add
nop
add
or
add
add
add
lock
or
add
or
add
paddb
add
incb
add
incl
add
incl
add
push
add
add
add
dec
add
add
and
ja
imul
insb
add
xor
xor
add
js
add
add
imul
jb
jns
and
imul
je
push
add
imul
outsl
add
jae
and
add
jb
add
je
outsl
add
jns
and
imul
arpl
outsl
add
jb
jne
jo
je
sub
and
jo
insb
add
popa
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
arpl
outsl
add
jb
add
je
and
add
add
jne
je
popa
add
insb
add
and
outsb
add
insl
add
sub
and
insl
add
jae
je
and
bound
add
add
imul
insb
add
xor
xor
add
js
add
and
insb
add
arpl
popa
add
add
add
outsb
add
add
add
and
push
add
jae
je
add
and
add
jb
add
je
outsl
add
jns
add
add
add
add
add
adc
add
add
sub
add
add
and
add
add
add
call
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xchg
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
push
add
outsb
add
insb
add
xor
xor
and
push
add
add
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
push
add
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
dec
add
xor
xor
add
pop
add
add
add
jle
das
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
sub
push
add
add
add
add
add
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
fadds
add
sub
xor
inc
xor
dec
xor
xor
xchg
xor
xor
xor
xor
xor
jge
test
xor
cwtl
xor
xor
fbstp
in
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
aas
xor
jno
mov
xor
out
xor
cmp
inc
ss
shll
fdivs
fnsave
adc
mov
xor
lods
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
add
add
add
add
fidivrl
loopne
out
in
cmp
cmp
cmp
cmp
or
adc
push
cmp
and
sub
cmp
cmp
inc
cmp
dec
cmp
pop
cmp
jo
add
add
cmp
