push
mov
sub
movl
movl
mov
add
mov
lea
mov
mov
or
mov
imul
mov
lea
mov
mov
mov
add
mov
sub
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
imul
add
mov
movl
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
lea
mov
lea
mov
mov
mov
mov
sub
add
mov
cmpl
je
mov
and
add
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
jmp
mov
add
add
mov
movl
mov
and
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
cmp
jne
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
cmp
jg
movl
mov
push
mov
push
push
call
add
movl
mov
push
mov
push
push
call
add
mov
push
mov
push
mov
push
call
add
jmp
movl
mov
sub
imul
mov
jmp
call
movl
mov
add
mov
cltd
idiv
mov
cmpl
jl
mov
push
mov
push
mov
push
call
add
mov
or
mov
sub
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
and
mov
mov
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
and
sub
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
je
movl
lea
mov
mov
mov
and
add
mov
sub
mov
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
push
mov
push
mov
push
call
add
movl
lea
mov
mov
mov
sub
mov
sub
mov
mov
push
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
add
jmp
mov
sub
add
mov
call
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
or
mov
add
mov
jmp
jmp
movl
lea
mov
movl
mov
mov
or
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
shr
cmp
jae
mov
mov
mov
mov
rorl
nop
mov
xor
mov
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
imul
imul
mov
lea
mov
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
je
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
mov
jmp
cmpl
jne
movl
lea
mov
mov
mov
sub
mov
sub
mov
jmp
mov
imul
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
push
push
call
add
movl
movl
mov
imul
mov
sub
mov
jmp
movl
movl
mov
push
mov
push
mov
push
call
add
push
push
push
push
call
mov
movl
movl
movl
mov
imul
imul
mov
mov
add
mov
cltd
idiv
imul
mov
movl
jmp
mov
add
mov
mov
xor
mov
div
cmp
jae
mov
add
mov
mov
mov
jmp
movl
lea
mov
mov
mov
mov
mov
push
push
mov
push
call
add
movl
movl
mov
and
mov
add
cltd
idiv
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
push
call
mov
movl
push
mov
push
call
add
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
js
add
push
and
add
sub
add
sbb
add
mov
add
test
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
je
add
push
and
add
add
add
js
add
mov
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
scas
and
add
les
add
and
add
repnz
add
push
add
es
xor
add
inc
add
data16
je
add
andb
add
add
add
add
addb
add
popa
jae
popa
jae
popa
jae
popa
jae
popa
jae
add
dec
pop
inc
dec
dec
cmp
inc
dec
push
and
push
and
and
and
add
inc
push
dec
pop
inc
dec
dec
cmp
inc
dec
push
and
push
and
and
and
add
outsb
bound
push
imul
inc
pop
dec
push
inc
pop
push
pop
xor
inc
dec
push
pop
push
xor
xor
add
dec
dec
inc
inc
push
inc
inc
push
push
dec
push
pop
sbb
push
sbb
or
add
hlt
and
add
add
call
add
add
add
add
add
enter
cmpsb
and
add
mov
add
pop
add
mov
add
add
add
push
and
add
sub
add
sbb
add
mov
add
test
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
je
add
push
and
add
add
add
js
add
mov
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
scas
and
add
les
add
and
add
repnz
add
push
add
es
xor
add
inc
add
data16
je
add
andb
add
add
add
add
addb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
jae
inc
push
dec
outsl
je
imul
outsl
outsb
add
push
gs
imul
add
push
popa
imul
insb
gs
bound
arpl
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
jae
inc
imul
jb
add
movl
dec
imul
nop
add
je
outsb
fs
inc
imul
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
push
add
outsl
jae
dec
popa
outsb
fs
add
dec
outsl
fs
gs
imul
add
in
add
popa
insb
inc
jb
add
push
imul
imul
insb
gs
bound
arpl
add
popa
fs
imul
gs
jbe
outsb
je
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
gs
je
inc
imul
popa
imul
jo
imul
dec
outsb
je
jb
outsl
arpl
fs
js
push
inc
fs
mov
fs
insb
outsl
jae
add
inc
imul
gs
add
add
gs
js
push
add
gs
je
push
push
add
add
push
popa
imul
insb
gs
bound
arpl
add
add
je
jb
outsl
arpl
fs
js
push
add
inc
imul
gs
js
add
add
je
imul
leave
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
push
add
gs
je
push
outsl
insb
imul
add
add
gs
je
inc
inc
inc
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
sub
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
arpl
outsb
add
inc
jb
popa
je
push
outsl
jne
fs
arpl
outsb
add
and
inc
outsl
insl
bound
gs
outsb
add
inc
inc
dec
xor
cs
insb
add
imul
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
dec
push
push
inc
push
push
cs
insb
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
and
add
add
add
cmp
movsl
sub
xchg
loop
adc
cmpsl
ret
and
inc
shll
test
xchg
add
mov
inc
and
fs
add
push
add
imul
mov
addr16
cmp
adc
add
aaa
adc
pop
mov
mov
pop
xor
sbb
movsl
in
adc
mov
shlb
add
and
pop
stos
xor
mov
mov
add
or
je
inc
lret
sub
adc
jno
mov
hlt
ret
dec
sub
push
dec
les
sahf
add
sub
and
xor
cmpsl
enter
jnp
sub
inc
sbb
mov
dec
cmpsl
daa
xchg
adc
loop
lret
loope
cs
mov
loopne
mov
dec
cmpsl
test
and
fidivl
ret
and
int3
movsb
test
stos
and
cltd
loopne
pop
inc
in
add
lret
loop
or
push
movsb
ret
loope
adcb
add
sbb
or
test
mov
in
add
sub
popa
jge
sub
add
loopne
mov
inc
dec
push
sbb
mov
test
and
adc
mov
sahf
ret
and
test
or
mov
movsb
ret
and
mov
xchg
subb
cmp
out
outsl
inc
xorl
adcb
out
movsb
gs
jae
push
and
popa
inc
scas
test
dec
inc
std
or
mov
mov
jecxz
mov
das
in
loope
ret
sub
data16
add
sub
sub
add
orb
mov
lret
add
ljmp
daa
sarl
and
aaa
imul
stos
lea
or
dec
and
shr
mov
popa
adc
inc
in
or
and
mov
pop
mov
lahf
add
adc
inc
mov
push
inc
mov
jp
and
sbb
sub
push
sbb
push
sbb
and
inc
xchg
and
add
fs
add
int
popa
enter
dec
es
dec
add
add
xchg
test
and
ret
shr
mov
fwait
mov
stos
and
sbb
les
inc
add
mov
and
mov
inc
fwait
test
mov
or
out
mov
fwait
cwtl
lock
addl
sbb
xchg
cmp
lret
leave
push
loope
and
fs
and
xor
stos
inc
movsb
test
or
push
pop
adc
inc
les
xchg
xchg
jo
mov
das
stc
and
dec
sub
imul
loop
sarw
xchg
jle
cs
imul
lahf
imul
dec
inc
leave
movsl
or
fisubrs
fcomps
dec
jne
loop
subl
int
adc
shr
sbb
popf
sub
les
sub
gs
sub
lahf
shlb
test
add
movsb
xor
pusha
inc
in
xchg
pop
add
mov
adc
ret
bound
jecxz
xor
mov
inc
and
nop
inc
mov
xchg
add
pusha
xchg
or
loop
jo
sub
rol
inc
xchg
and
out
inc
cmp
seto
lods
addr16
xor
and
mov
icebp
mov
inc
lock
sbb
scas
jbe
push
test
push
mov
lock
je
cld
cs
adc
int
icebp
jbe
ret
adcb
sub
xorl
sub
xchg
out
mov
in
cmp
shlb
and
mov
arpl
mov
aam
int
pop
icebp
and
adc
fcoms
lcall
outsb
pop
sbb
mov
pop
or
add
push
xor
mov
aad
pop
in
mov
push
movhps
fstpl
xchg
push
jecxz
adc
bound
cmp
and
orb
ljmp
adc
and
pusha
cmp
add
sbb
sbb
push
scas
pop
mov
dec
bswap
xor
and
and
or
xchg
popa
adc
dec
xchg
loope
sar
int
ljmp
dec
add
in
sub
or
int3
inc
add
or
fadds
or
and
jp
jmp
je
out
dec
nop
mov
in
les
sbb
xchg
or
or
lds
mov
cmp
add
stc
test
jg
jae
into
mov
push
push
ret
adc
out
xchg
insl
mov
mov
int3
and
lea
and
bnd
and
xor
in
xor
lea
sbb
mov
ret
mov
mov
or
add
pusha
nop
pusha
jge
or
lret
add
aaa
stc
sub
scas
mov
aas
fdivrl
xor
rorl
mov
aad
lret
xchg
aam
mov
ret
div
mov
leave
repz
loope
mov
or
or
scas
inc
insl
ja
mov
push
je
push
and
ret
loope
rolb
cmp
xor
sub
push
mov
inc
dec
or
mov
sbb
pushf
adcb
mov
sbb
rorb
xchg
shl
rorl
add
sub
sbbl
mov
lcall
cli
add
mov
or
cmp
mov
arpl
in
push
or
out
ret
dec
mulb
mov
cmpl
pop
popa
mov
and
and
adcl
iret
sbb
mov
jecxz
xchg
popa
mov
xchg
test
in
push
cmp
pop
push
mov
cmpsl
int3
inc
data16
inc
and
scas
aam
les
out
call
and
mov
xchg
xor
mov
dec
cs
push
pop
dec
jge
push
xchg
cmp
jnp
fucompp
xchg
mov
out
mov
pop
mov
sub
pop
xchg
movsl
jne
mov
dec
cmp
data16
add
mov
jle
or
bound
cli
ret
jecxz
adc
adc
repz
imul
sbb
lahf
mov
cmp
push
shlb
inc
pop
jno
sbb
std
ret
push
jmp
jb
xor
mov
es
imul
sbb
dec
les
mov
xchg
xor
addl
xchg
bound
icebp
lods
cmp
add
daa
add
mov
mov
sbb
dec
std
mov
je
adc
arpl
call
add
add
add
inc
jo
and
bound
jae
cli
xor
jb
xchg
ret
or
int
je
xchg
mov
mov
pop
and
add
stos
in
icebp
adc
hlt
imul
mov
jns
mov
cltd
adc
lock
adc
lcall
pop
ljmp
cwtl
std
je
popf
std
js
lahf
std
sbb
in
xchg
jg
int3
cwtl
lahf
jne
pushf
out
jns
adc
faddl
pop
lret
pop
ret
mov
cmp
pop
js
cltd
aas
jo
xchg
outsl
jo
cltd
outsl
js
xchg
aas
js
popf
dec
jo
xchg
insb
xchg
pop
jge
cltd
dec
jno
xchg
outsb
xchg
xchg
cltd
dec
shrl
int
lahf
call
pop
cmp
sbb
cmp
in
cmp
sbb
xor
sbb
pop
adc
pop
sbb
xor
adc
das
adc
xor
sbb
xor
unpcklps
cmp
sbb
ret
mov
fwait
nop
mov
dec
cs
inc
rcll
out
adc
je
xor
jle
cmpsl
repnz
das
lock
sbb
jb
mov
inc
setno
es
out
cmc
in
scas
mov
pop
push
out
pushf
nop
xchg
pushf
mov
or
pop
inc
cld
adc
jecxz
cmpsl
and
stc
cmpsl
sbb
in
sbb
hlt
popa
adc
arpl
cld
and
pop
in
into
sbb
sub
mov
rclb
pop
inc
imul
pushl
cmp
mov
dec
into
sub
xor
inc
or
scas
pop
fcompl
cmp
scas
lods
stc
and
imul
inc
sti
mov
dec
push
sub
call
mov
or
lods
mov
mov
test
imul
outsb
mov
mov
fimull
lock
pop
fwait
hlt
cwtl
pop
fwait
clc
or
fwait
cld
clc
adc
lock
jmp
cwtl
adc
clc
cwtl
sbb
cld
test
sti
lock
sti
hlt
test
sti
clc
mov
push
lret
lock
enter
fcoms
lret
cld
fcomps
fcomi
call
sbb
clc
xchg
shrb
call
fcomps
fucomi
fcompl
jecxz
enter
les
pop
outsl
or
mov
xlat
sbb
cmp
fistps
cmp
xlat
jge
fisttpl
fisttps
dec
rcrl
dec
xlat
pop
cmp
dec
fildll
cmp
mov
cmp
lea
outsb
rorl
cmp
lea
jle
popf
xor
jle
in
cmp
or
pop
add
pop
adc
outsb
dec
mov
out
push
packssdw
pop
arpl
pop
imul
arpl
das
imul
arpl
aas
imul
arpl
dec
imul
dec
outsl
in
mov
in
mov
cld
sbbb
xchg
cld
mov
cld
mov
int3
subb
xchg
addr16
imul
outsl
sub
lahf
arpl
lahf
addr16
lahf
imul
outsl
cmp
scas
arpl
scas
addr16
scas
imul
outsl
or
mov
addr16
mov
outsl
sbb
iret
arpl
iret
insb
or
insb
xchg
aaa
or
fs
and
insb
aaa
movsb
lret
fs
lret
movsb
enter
lret
dec
xor
enter
enter
mov
mov
lcall
bound
cwtl
fmulp
ss
sbb
cmp
jb
adc
and
int3
repnz
mov
adc
hlt
sbbl
das
cld
rcrl
lock
dec
repnz
aas
clc
fcompl
aas
cld
inc
sbb
stc
sub
iret
lock
pop
stc
adcb
lock
fcomip
cmp
pop
icebp
inc
push
iret
cld
cmp
pop
cmc
sbbl
out
hlt
rcrl
xchg
arpl
pop
in
into
je
xor
dec
xchg
fistpll
xchg
fistpll
lods
pop
jg
lahf
das
jae
xchg
das
ja
lods
das
jnp
fwait
das
jg
lahf
jp
scas
out
jp
xchg
pop
jae
fwait
movq
scas
jle
xchg
jl
pop
ja
scas
emms
add
ljmp
lods
push
outsb
dec
jl
stos
dec
mov
push
ljmp
pop
cs
jo
add
xor
insb
mov
lock
jae
push
sbb
adc
jae
and
lock
sbb
cmp
rolb
icebp
xor
cmp
faddl
add
mov
add
mov
lock
hlt
inc
fnsave
cld
adc
xchg
sbb
dec
mov
adc
das
push
outsb
cmp
sub
adc
cmp
sub
add
jbe,pt
pop
push
test
pop
in
sub
cmp
push
aas
xor
adc
cmp
cmp
sbb
pop
sysexit
sub
sbb
cmp
dec
sbb
cmp
out
cmp
adc
xor
pushl
push
cmp
adc
xor
iret
xor
sbb
cmp
iret
cmp
adc
xor
fbstp
push
fistpll
push
scas
xor
cmpsb
or
outsb
mov
sbb
insb
xchg
mov
jo
xchg
je
fwait
out
je
lahf
out
js
push
pop
ljmp
pop
sub
popa
fists
testl
aad
lar
mov
jnp
pop
mov
sbb
mov
add
loop
add
loop
add
loop
adc
repnz
adc
repnz
adc
repnz
mov
adc
icebp
and
ret
mov
or
jle
test
hlt
mov
sbb
decb
lahf
cli
lea
outsl
decb
jg
pushf
adc
repnz
sbb
repnz
adc
addr16
mov
cmc
into
ja
cmc
ret
inc
out
add
lret
xchg
out
xchg
jmp
ret
imul
and
mul
out
xor
jmp
push
jmp
loope
arpl
loope
jae
inc
xlat
jae
inc
jno
jae
dec
xchg
mov
or
lea
mov
fstpt
call
arpl
jmp
flds
adc
xchg
xlat
out
jecxz
adc
cmp
push
and
loope
xchg
std
loope
out
roll
push
loop
mull
in
mull
in
ja
hlt
shl
cmc
test
xor
cmp
mov
mov
or
pusha
fnsave
hlt
js
sbb
js
sbb
jno
sti
hlt
js
sub
inc
shr
loopne
lds
inc
leave
inc
pushf
push
roll
hlt
pop
fstpl
icebp
push
fstps
sub
pop
std
cmp
pop
icebp
cmp
push
cmp
push
cmp
push
push
and
shl
mov
in
clc
adc
mov
jno
push
jle
clc
push
jle
cld
pop
jle
int3
push
mov
aam
add
fadd
rcr
sub
fcomp
mov
xor
adc
xor
jl
mov
jl
mov
lods
int
mov
test
adc
xor
pop
lahf
cmp
sbb
popf
jle
xor
pushf
xchg
out
jl
xchg
fbstp
dec
adc
add
call
scas
imul
out
into
mov
jae
mov
jle
rolb
out
add
repnz
jne
jns
cltd
idivl
xchg
lret
jno
cwtl
iret
jne
xchg
iret
sbb
and
movsl
jns
rorb
jo
add
js
pop
testb
mov
orb
loopne
mov
shr
jle
repz
jge
pop
jle
int3
pop
outsb
jbe
push
pop
jb
pop
sahf
rorl
pushl
inc
inc
lock
push
adc
orl
dec
inc
movsb
inc
inc
sub
push
and
push
sub
and
daa
test
sub
das
test
ja
xchg
shll
lds
xchg
leave
ja
xchg
int
and
roll
in
xchg
in
xchg
and
rcll
hlt
leave
xchg
das
hlt
int
and
shll
leave
add
mov
js
pushf
cmpsl
jl
nop
mov
je
cwtl
mov
jl
nop
jo
xchg
je
lahf
cmp
adc
in
sbb
cmp
sub
dec
hlt
sub
dec
clc
sub
dec
cld
sub
dec
lock
pop
hlt
cmp
pop
clc
cmp
pop
cld
cmp
pop
lock
push
or
push
or
push
or
push
sbb
jp
sbb
jp
sbb
jp
sbb
jp
call
aam
clc
call
fmull
hlt
clc
aam
clc
clc
fcomps
lock
enter
enter
enter
fcom
mov
clc
fcomp
mov
lock
lret
aam
clc
test
lret
fmul
lock
aam
clc
mov
lock
ljmp
fsubr
clc
cwtl
fdivr
cld
cwtl
fdivr
icebp
push
aam
stc
push
fmull
icebp
js
sbb
js
sbb
js
sbb
js
sbb
dec
shrb
cmc
dec
aam
stc
dec
fsubrs
std
dec
fsubrl
icebp
pop
sarb
cmc
pop
aam
icebp
sub
dec
cmc
sub
dec
stc
sub
dec
std
sub
dec
icebp
cmp
pop
cmc
cmp
pop
stc
cmp
pop
std
cmp
pop
icebp
or
push
or
push
push
into
cld
lock
fdivp
js
js
js
dec
shr
hlt
dec
aad
clc
dec
fldl2e
cld
dec
fucomp
lock
sar
hlt
pop
aad
clc
pop
fsqrt
cld
pop
icebp
sub
or
sub
or
sub
or
sub
or
cmp
sbb
cmp
sbb
cmp
sbb
cmp
sbb
or
sub
or
sub
or
sub
or
sub
sbb
cmp
sbb
cmp
sbb
cmp
sbb
cmp
call
aam
stc
call
fmull
clc
rcrb
clc
aam
stc
clc
fcomps
clc
fcompl
enter
enter
enter
enter
fcom
jp
fcom
jp
fcomp
jp
fcomp
jp
test
mov
test
mov
test
mov
mov
sub
les
outsb
xchg
sub
adc
not
or
pop
jmp
or
cmc
subb
sub
xor
mov
scas
inc
adc
jmp
mov
not
or
push
fdivl
icebp
and
ljmp
fmull
repnz
sbb
cmp
sbb
cmp
cmp
add
and
or
cmpsb
add
sbbb
lret
loop
arpl
cmp
sbb
in
inc
fs
dec
mov
cwtl
xchg
mov
cltd
outsb
mov
movsb
movb
lock
adc
fnstcw
aaa
and
leave
scas
ss
fsubl
imul
xchg
mov
inc
dec
jb
inc
adc
push
inc
inc
add
push
jb
test
lock
cmpl
cmp
adc
add
hlt
sbb
icebp
pusha
inc
leave
sbb
popa
cld
inc
xchg
jnp
cwtl
and
xchg
les
cltd
push
inc
inc
and
popa
andb
mov
insl
xchg
sub
je
xchg
inc
sub
stos
into
inc
push
xchg
dec
ds
push
add
dec
push
or
inc
bound
ret
sbb
dec
fs
cwtl
popa
nop
xchg
cltd
imul
dec
and
mov
movsl
add
mov
add
and
fsubs
and
fldcw
adc
int
inc
and
mov
loopne
ret
sub
jg
and
roll
fwait
test
aas
dec
loop
xor
jmp
or
loop
cltd
das
repnz
cli
gs
adc
and
xor
sub
je
adcl
popa
cmpsb
popa
jge
sub
js
mov
sbb
sarb
add
fcoml
lret
xor
cmpl
xor
or
shll
xchg
js
sub
imul
push
lods
out
inc
xor
ret
sbb
aas
ds
arpl
or
inc
in
ret
sbbl
imul
xor
push
test
ss
xchg
dec
out
lods
and
mov
push
and
push
fiadds
cmp
jae
je
adc
xchg
push
leave
cmp
out
adc
and
stos
mov
xlat
wrmsr
adc
mov
loope
push
outsb
push
mov
jecxz
cmc
adc
icebp
jbe
jecxz
push
jmp
mov
mov
mov
inc
fs
xor
mov
ss
jno
in
dec
addl
mov
xor
xor
sbb
jnp
xchg
cmp
mov
cmpsl
lret
loop
bound
into
xor
icebp
and
adc
in
outsl
and
or
xorl
adc
sbb
dec
adc
aas
in
or
sub
in
xor
loop
sub
xor
xor
icebp
rcrb
xorl
xor
nop
jge
dec
divb
sbb
xor
adc
jg
sbb
mov
jge
cmp
or
cli
xor
adc
icebp
and
ljmp
adc
jns
iret
stos
notl
and
push
test
pop
sub
xor
subb
adc
and
mov
repnz
shll
js
popa
or
pushl
xchg
xchg
xor
sub
js
data16
ret
fstp
mov
mov
shlb
insb
mulb
adc
aaa
jno
popa
dec
xchg
xorb
xor
movsl
sub
bound
xchg
sbb
push
mov
and
cmc
adc
arpl
mov
push
inc
rcrb
rclb
add
xor
lods
lcall
mov
sbb
push
shll
loop
jg
add
and
mov
popa
mov
cmc
repnz
mov
inc
push
mov
cmpb
adc
subl
adc
and
lahf
and
rclb
popa
push
and
add
push
xchg
dec
push
add
jb
icebp
insb
xor
xor
jnp
adc
bound
shrb
push
pop
xor
shll
addl
and
push
push
imul
jnp
hlt
mov
in
xor
fldenv
inc
mov
ja
sbb
bound
mov
mov
pop
jecxz
inc
inc
je
lock
adc
shr
add
cmp
divb
sbb
pop
push
and
adc
rclb
xchg
sub
div
or
loop
lret
cmpsb
loope
dec
test
and
pop
loope
mov
les
inc
and
adc
adc
pusha
add
repz
test
rcll
jns
testb
add
out
cmp
jne
adc
shll
sbb
fidivl
shl
and
adc
or
adc
push
adc
mov
ret
adc
gs
jne
inc
stos
scas
outsb
push
bound
adc
push
jbe
mov
notb
mov
cmpsb
and
mov
xor
adc
sbb
xor
xchg
fdivrs
andb
add
ret
popa
pop
push
xchg
repz
sbb
sub
nop
call
add
aas
orl
sub
aad
int
stc
xor
adc
push
xor
sti
loop
push
pop
xor
adc
push
repnz
xchg
jns
inc
movsl
fdivs
add
hlt
repnz
push
shlb
inc
inc
icebp
shll
orb
popf
cltd
mov
pop
push
into
mov
loope
adc
and
dec
cmc
fs
pusha
shrl
and
jae
add
loope
adc
add
mov
and
sbb
jecxz
cmpsb
popa
push
push
je
adc
repz
push
repnz
cmpsl
dec
loope
xchg
push
xchg
rcll
sbb
and
pop
push
inc
sub
sub
inc
adc
adc
hlt
xchg
shlb
test
bnd
mov
xor
arpl
mov
push
shl
mov
and
and
shlb
loopne
jo
cmp
push
pop
shlb
repz
adc
mov
fs
repz
mov
loope
xor
adc
xor
pop
cmp
cltd
sub
inc
lcall
dec
pushf
das
cmp
das
mov
dec
lahf
das
mov
dec
inc
shl
inc
and
enter
inc
jne
dec
dec
push
out
testl
cmc
dec
sbb
cli
dec
sbb
sti
dec
sbb
clc
jmp
out
sbb
fisubs
mov
push
out
xchg
add
or
and
xchg
inc
fistl
cmp
shl
call
gs
jbe
add
mov
inc
adc
sub
stos
and
sub
mov
repnz
lcall
shr
jp
lods
and
cwtl
jmp
inc
pop
dec
stos
lret
rorb
sub
sbb
pushf
ret
dec
sub
sbb
scas
aam
xchg
aas
daa
and
push
dec
hlt
and
dec
add
xchg
push
add
lods
jbe
mov
sbb
punpcklbw
xor
dec
sahf
xor
hlt
jp
insl
mov
xor
and
pusha
dec
dec
pop
aam
in
cmp
popa
and
push
out
fcmovbe
mov
xlat
movsb
outsl
pop
add
loop
shlb
das
aam
mov
sub
add
adc
pop
in
stc
and
or
add
inc
dec
jnp
xor
cmp
mov
data16
mov
test
xor
pop
cmc
xchg
mov
imul
divl
cwtl
inc
mov
mov
es
arpl
xor
or
jmp
fsubs
les
cs
fmull
sub
lods
jne
jo
pop
add
mov
lea
mov
roll
cmc
cld
loope
jmp
test
lods
add
aaa
and
insl
xor
mov
repz
mov
and
iret
test
ljmp
mov
mov
rorb
xor
add
in
inc
repz
mov
xor
pop
int
xor
repnz
shl
add
or
sahf
push
lock
pop
mov
ret
sbbb
jno
adc
jb
adc
jae
adc
insb
insb
outsl
daa
insl
inc
jo
in
inc
shll
repz
loop
ret
and
dec
hlt
sub
dec
cmc
sub
dec
imulb
dec
imull
aad
clc
sub
dec
stc
sub
dec
cli
sub
dec
sti
sub
dec
cld
sub
dec
std
sub
dec
sub
dec
ljmp
fisttpll
and
sub
inc
cmpsl
push
addl
rcl
mov
cmpsb
cmp
adc
xchg
adc
sbb
jne
stos
out
pusha
addb
sti
and
mov
imul
mov
daa
xchg
jno
mov
rorl
out
int
add
sub
ret
jg
dec
mov
jb
mov
or
push
sub
test
stos
pop
das
leave
jmp
rcrl
xor
fistpl
push
andb
hlt
jae
add
daa
push
mov
push
cld
cltd
mov
add
shrb
sbb
je
mov
mov
add
mov
mov
pop
add
outsl
dec
jno
clc
and
call
add
dec
or
and
icebp
into
ss
aaa
adc
inc
jb
pop
add
das
bound
jg
loopne
in
movsb
cmp
cmpsb
cmc
pusha
movsb
jmp
or
cs
and
add
push
fdivs
cmp
aad
inc
int3
sbb
adc
test
dec
xor
out
mov
and
shll
inc
nop
sub
aad
mov
out
das
sub
sbb
add
cmc
out
inc
je
pop
ret
ret
pop
xor
outsb
lock
das
lcall
sub
aam
push
insb
jnp
rorl
out
ss
jp
out
andb
orl
jnp
xor
cmp
cmp
xchg
mov
scas
inc
mov
xor
fdivrs
ret
cltd
jbe
jp
loopne
jmp
mov
and
and
shll
cmc
ficomps
inc
sub
mov
inc
jg
add
pop
int
rcl
cmp
jmp
into
test
mov
jmp
test
inc
fisubl
ret
lcall
cmp
enter
addb
out
mov
adc
add
and
in
fidivl
dec
jb
xchg
mov
push
sub
fistl
xchg
xlat
or
mov
jle
mov
jg
mov
fsts
add
cs
loope
les
or
sbb
xor
mov
fstpt
imul
jae
and
roll
loop
aam
loopne
test
loopne
adc
lock
pushf
xlat
pushf
loop
and
imul
sub
aas
add
cmp
push
xchg
call
add
sbb
pop
adc
inc
pop
xchg
mov
arpl
sbb
mov
and
push
repz
inc
mov
test
dec
movsb
or
and
lock
add
mov
std
and
push
dec
fisttps
or
sub
rcl
mov
ss
jle
mov
add
xor
ficoms
and
adc
push
push
insl
or
inc
sbb
je
fsubs
and
stos
sub
mov
jmp
ret
push
movsb
repnz
leave
es
adcl
minps
clc
std
movb
loope
xchg
shrb
sarb
and
lock
daa
insb
or
arpl
stc
hlt
mov
les
addr16
mov
stos
mov
or
add
or
add
mov
mov
shr
mov
aaa
pop
push
push
push
dec
and
cltd
loopne
or
js
mov
or
adc
push
aad
lret
fsub
jecxz
fdivrl
add
aam
orb
into
adc
xchg
push
or
adc
scas
imull
adc
js
and
mov
pushf
push
inc
and
push
pop
into
sub
pop
lock
sub
in
loopne
mov
mov
jae
ds
dec
add
cwtl
ljmp
fsubl
push
aas
jmp
xchg
or
and
imul
mov
adc
repz
pop
inc
inc
push
xor
jb
lcall
pop
mov
push
pop
ds
xchg
bound
sub
sub
adc
scas
nop
jb
int3
fmuls
out
mov
loopne
inc
dec
mov
popf
lods
daa
aaa
pop
out
push
mov
lret
cmp
cltd
rcl
je
add
cld
movsl
jmp
int
pushf
sbb
xor
push
and
sub
push
push
jl
and
dec
loope
shl
es
lods
imul
and
cmp
add
add
subb
in
add
ret
cld
push
lods
dec
test
dec
das
adc
pusha
test
xor
jle
lea
ss
mov
aam
fistl
hlt
stos
insl
sbb
lret
fldl
icebp
adc
add
mov
or
mov
ds
stc
je
xchg
fildl
pop
adc
bnd
xchg
das
sbb
add
cmc
iret
icebp
popf
insl
jne
out
sbb
int3
int
das
pop
pop
and
jg
rclb
dec
popf
loope
shlb
push
pop
push
fucom
xor
aaa
insl
push
jno
aam
mov
addr16
fnstenv
dec
int3
adc
cmc
jg
not
adc
sub
fmull
pop
xchg
daa
repnz
aaa
in
sbbl
loop
sbb
out
push
notb
sbb
cmp
jne
outsl
sahf
jno
and
movsb
and
xorl
cmp
push
aas
gs
adc
inc
inc
cmp
push
xchg
shlb
cltd
pushf
mov
int
xor
xchg
mov
dec
jl
out
push
pop
jbe
push
xor
clc
mov
je
mov
imul
in
fdivrs
fwait
inc
xor
mov
out
out
or
push
test
pop
mov
sub
aaa
movsb
loope
or
cmp
loope
and
push
iret
enter
pop
je
es
test
fwait
jmp
flds
pop
xor
imul
xchg
stos
call
cmpsl
adc
xchg
pushf
pop
pop
in
jecxz
sub
push
sbb
pop
jne
mov
aaa
and
push
mov
mov
inc
loope
xor
fidivs
xchg
lods
lret
sub
movsl
lret
sbb
or
push
outsl
call
sub
ret
and
and
lret
fucomip
sbb
mov
add
cmc
das
mov
lds
stos
icebp
ss
fwait
pop
xor
adc
insb
jnp
add
std
xchg
pop
sarb
mov
xorb
paddsb
cmp
cmp
sbb
mov
or
add
movsb
js
push
dec
pop
in
mov
inc
or
jle
imul
push
fisttpll
ds
sbb
stos
sub
into
loopne
inc
jae
call
sbb
in
push
xchg
fs
ret
sub
stos
push
sub
inc
cmp
jb
fwait
jecxz
into
mov
jp
lods
sbb
pop
push
mov
pushf
test
addr16
and
fsubrs
daa
mov
dec
or
jmp
push
sub
push
sub
xor
add
mov
arpl
leave
xor
cmp
lcall
sbb
inc
push
sbb
pop
or
pop
xor
sub
ret
mov
ljmp
mov
and
push
push
lods
mov
scas
je
sbb
jp
insl
cmpsl
push
cmc
push
lods
andl
xor
ret
popa
cmp
adc
adc
stos
adc
mov
sbb
xor
jmp
mov
test
jle
cli
es
push
test
mov
inc
add
test
mov
rol
mov
or
mov
lret
push
loopne
mov
mov
inc
in
sbbb
cmp
aaa
mov
add
sbbb
insb
mov
and
sub
test
lods
popa
and
lret
and
aam
pusha
cmc
outsb
jnp
push
iret
dec
mov
enter
sbb
add
ljmp
inc
in
lea
sahf
sub
inc
jno
out
push
cwtl
push
sbb
hlt
popa
pusha
and
xor
movb
imul
movsl
addl
repnz
jae
jmp
pop
mov
stc
addr16
hlt
into
orl
test
sub
push
xor
sub
mov
push
ret
sbb
scas
testb
inc
test
push
fwait
xor
mov
adc
into
icebp
dec
sub
mov
das
inc
adc
data16
sti
and
stos
xchg
xchg
lcall
cmp
push
xor
or
push
dec
cmp
and
push
pop
mov
daa
repnz
ret
outsb
jbe
jp
jno
clc
mov
mov
sub
push
sbb
insb
xchg
ret
inc
jmp
iret
mov
or
adc
sub
mull
cmpl
and
rolb
push
sbb
cmpsl
mov
fs
pop
ffree
xchg
add
loop
mov
int3
mov
and
popa
inc
sub
ds
push
push
push
mov
mov
lret
test
dec
add
push
clc
fldt
dec
jns
mov
mov
xchg
dec
and
stos
mov
sub
cmp
xchg
jno
and
cli
and
or
repnz
xchg
shl
sbb
adc
and
mov
and
xchg
pusha
push
add
and
dec
and
bound
inc
push
movsb
add
dec
leave
outsb
addr16
in
loope
and
shrb
bound
dec
cmc
outsl
arpl
loope
lret
and
mov
sub
xchg
test
leave
inc
repnz
adc
lods
movb
pop
lret
fcoml
fldcw
adc
lret
rorl
mov
shrb
outsl
not
jns
sub
stos
add
inc
mov
arpl
stc
scas
movb
push
js
cltd
pushf
ret
inc
fldcw
adc
inc
sub
fimull
shlb
fcmovnb
ja
xchg
popa
jae
daa
push
movsb
loope
adc
cmp
lahf
test
push
dec
addb
sbb
cmpsl
dec
hlt
cmovo
lret
sub
mov
and
fwait
lret
cmp
insb
popa
inc
sarl
test
lcall
test
add
test
inc
lahf
adc
add
and
roll
mov
adc
inc
sub
stos
cmp
jbe
cs
xor
nop
test
repz
xchg
or
xchg
add
call
repnz
fs
icebp
dec
and
dec
adc
shlb
cmp
mov
jle
das
push
lods
xor
xchg
test
sti
inc
jb
jae
mov
add
ret
sbb
adc
ret
sub
push
and
imul
js
daa
je
mov
inc
ljmp
sub
mov
mov
and
xchg
inc
cmp
adc
and
push
mov
mov
mov
adcb
cli
and
xor
jae
leave
scas
testb
and
rcrb
fldcw
push
test
adc
xor
adc
xor
out
imul
push
repnz
cwtl
test
jl
repnz
push
dec
inc
add
mov
inc
or
sbb
mov
daa
rcr
adc
out
jno
das
in
icebp
mov
test
pop
inc
and
add
scas
cmpsb
dec
adc
push
sub
fwait
and
and
insb
xlat
xchg
and
mov
mov
mov
jae
sub
cmpsl
icebp
mov
test
cli
inc
xor
push
cmp
ror
inc
xchg
adc
jb
mov
shlb
and
mov
adc
mov
push
sub
add
dec
xor
adc
or
test
call
dec
dec
insl
aaa
adc
shlb
and
adc
roll
cmpl
xor
and
mov
xchg
test
aas
inc
and
adc
stc
cmpsb
out
in
lock
rclb
or
sbb
lret
and
aam
mov
data16
jg
and
lea
lock
dec
xchg
push
push
sbb
mov
nop
cwtl
adc
xchg
les
mov
pop
xor
and
mov
addb
ret
push
push
push
sub
mov
clc
stos
and
ret
adc
jbe
in
inc
dec
push
mov
inc
cltd
outsl
pop
das
roll
xchg
sub
gs
jnp
and
test
lcall
jb
mov
cltd
mov
adc
inc
push
xchg
and
push
dec
sub
adc
roll
adc
and
loop
fcmovnbe
aam
xchg
jbe
das
add
xor
xchg
test
in
addb
pop
dec
cmpsb
inc
aam
push
sbb
addb
ja
xor
push
dec
es
mov
mov
lock
or
bound
xor
push
adc
daa
mov
testb
movsl
rorb
cld
mov
and
jo
push
sbb
cs
faddl
push
gs
aad
cmc
mov
cmp
pop
lahf
cmpsl
mov
insb
xchg
xchg
and
jle
mov
sub
xchg
add
and
add
sub
sub
dec
mov
ret
adc
push
cmpsb
sbb
pop
popf
out
imul
out
jae
adcl
sub
ss
xor
jecxz
movsb
popa
out
out
lea
bnd
iret
les
sbb
jmp
test
psubq
pop
mov
push
mov
push
shrb
shrb
push
loop
inc
jg
xor
andl
gs
nop
cwtl
adc
scas
lret
dec
in
dec
or
outsb
test
pop
mov
xchg
stos
out
or
inc
xor
dec
inc
outsl
nop
fbld
into
sub
push
lret
push
mov
or
cmp
xchg
sbbl
jmp
cmpsb
mov
xchg
rcrb
cmp
subb
xchg
dec
int
mov
add
cmpsb
adc
imul
and
loope
loope
push
mov
cwtl
ljmp
mov
jp
sbb
or
push
sbb
adc
xor
icebp
jnp
push
jb
lahf
addb
mov
add
fidivl
ret
or
ficompl
outsl
les
add
push
add
lods
out
xor
aam
add
rorl
mov
daa
ret
inc
lret
lock
adc
out
sbb
sbb
push
fimull
mov
mov
sahf
mov
pop
cmpb
js
mov
popf
out
arpl
pushl
add
adc
push
mov
scas
pop
cwtl
arpl
push
and
cmp
into
insl
or
add
mov
pushf
add
xor
and
mov
gs
std
pop
jbe
xchg
imul
jns
jl
xor
add
lret
add
fcmovnbe
leave
sub
push
not
repnz
outsl
jle
or
dec
add
adc
adc
xor
inc
lret
mov
out
push
leave
lds
pushf
push
or
rcrb
and
or
outsb
insb
mov
inc
and
fs
and
cmp
roll
repz
mov
sti
enter
movsl
xchg
sbb
aaa
add
or
test
fmull
stc
add
ds
inc
fnstcw
mov
add
push
popa
mov
sbb
arpl
dec
nop
ljmp
std
jne
in
or
mov
cmpsb
enter
out
nop
pusha
lock
bound
push
mov
or
aas
insb
add
repz
stc
or
fldt
popf
lock
cmpsl
push
jl
outsl
out
ret
cwtl
fisttpll
sub
rclb
scas
js
mov
ret
push
or
cmpsl
cwtl
lock
or
cmp
add
jo
inc
pushf
scas
loopne
pop
xorb
in
and
pop
inc
fnstenv
fsubs
mov
cmp
ja
shlb
mov
dec
notl
mov
out
pusha
adc
out
cmc
jge
inc
sbb
pop
add
xchg
sbb
into
sub
push
inc
dec
test
movsl
jae
dec
mov
jns
xor
scas
adc
add
call
mov
mov
flds
cltd
mov
add
out
hlt
outsl
xchg
popa
jns
mov
inc
push
fisttps
push
movups
std
xlat
test
inc
dec
jg
loope
pop
sub
inc
sbb
repz
add
push
and
sub
sti
lock
mov
in
ja
les
add
and
jae
lock
or
mov
pop
mov
inc
push
mov
sub
xchg
repnz
dec
xchg
jb
sbb
in
push
dec
lret
in
mov
gs
icebp
dec
jae
mov
and
or
ja
and
mov
sti
stos
sub
test
pop
dec
inc
or
pop
pop
cmpsl
inc
inc
inc
pop
adc
lret
cltd
imul
and
mov
andb
xor
mov
sarw
sub
stos
mov
das
pushf
test
push
inc
orb
sbb
test
inc
add
jo
inc
outsl
cwtl
xor
mov
adc
sub
lret
data16
inc
cmp
mull
sub
test
decl
add
nop
adc
inc
dec
sub
adc
add
mov
sarb
jmp
mov
mov
loop
push
pushf
test
xor
mov
scas
xchg
push
push
or
mov
inc
jmp
movb
shll
jo
adc
sbb
arpl
cmpl
mov
test
out
sub
sarb
inc
inc
sbb
sbb
dec
das
push
mov
lock
xor
cmp
je
and
sub
xchg
test
fildl
or
push
dec
movsl
dec
add
nop
sub
add
repnz
cltd
xchg
and
rcrl
add
pusha
and
cmp
mov
loope
xchg
cli
cli
cs
test
push
dec
ret
sbb
stos
mov
roll
dec
jmp
rcl
sub
push
imul
cmp
loop
outsl
and
sub
movsb
xchg
mov
addb
push
or
pusha
add
xor
pusha
xlat
sbb
leave
push
dec
shll
shlb
cmp
mov
sti
and
mov
pop
in
addb
xor
iret
adc
popa
pop
sbb
sub
pusha
shrb
and
pop
jge
fs
jne
sub
mov
xchg
test
in
adc
ret
push
fldcw
loopne
int3
ljmp
bound
dec
and
mov
popl
inc
scas
out
cmp
jnp
and
rorl
inc
or
adc
or
inc
int
dec
mov
pop
mov
orl
movsl
arpl
movsb
iret
jge
je
adc
test
lods
dec
loop
jae
jmp
push
mov
enter
lcall
das
and
push
daa
add
imul
mov
mov
test
outsl
dec
add
mov
dec
aam
adc
adcl
int3
icebp
inc
and
mov
lock
hlt
dec
inc
je
sub
movsb
mov
xor
sub
mov
stos
out
les
nop
mov
leave
bound
push
adc
sub
insl
jo
mov
push
mov
sti
sub
inc
clc
lcall
bound
jecxz
add
daa
adc
mov
mov
and
cmp
mov
xchg
jns
and
roll
fwait
test
pusha
dec
mov
test
fsubs
add
imul
shl
and
mov
mov
mov
shlb
and
les
pop
sub
dec
rolb
pop
pop
scas
inc
and
adc
aas
and
or
xchg
ret
loope
and
mov
xorl
fistpl
mov
scas
rorl
test
add
add
sbb
cmpsl
xchg
add
cltd
adc
adc
outsb
addr16
sub
bound
loope
dec
and
mov
and
mov
mov
and
xor
jns
pop
pop
movsb
iret
jno
daa
xor
adc
push
loope
sbb
adc
dec
sub
push
or
dec
hlt
push
ror
in
xchg
add
dec
dec
insb
push
movsl
and
pop
mov
pusha
adc
mov
gs
cmpl
es
test
add
stc
push
orl
cmp
xor
xchg
jge
mov
pop
insl
into
dec
popa
jle
sub
addl
mov
or
leave
cmpsl
es
xor
jo
es
xchg
add
rorb
imul
dec
daa
popa
mov
rcrb
imul
movsb
roll
test
or
or
cmpsb
inc
adc
shrb
out
and
ret
addr16
aam
rorl
mov
lea
jo
adc
cmp
pusha
out
jae
daa
xchg
movsb
jno
lock
jns
dec
test
xor
mov
popf
xchg
iret
jb
jns
xchg
pop
xchg
ret
adc
xor
loop
dec
mov
insl
push
inc
jbe
and
push
cli
mov
cltd
test
movsl
inc
push
add
dec
hlt
or
popf
push
iret
jb
jmp
add
sub
ds
adc
push
sub
mov
test
orb
adcl
fadds
xchg
and
jb
mov
mov
sbb
hlt
add
or
inc
leave
or
or
ret
and
cs
sbb
adc
add
mov
xor
and
jae
mov
adc
mov
jecxz
fidivs
shr
and
aad
pop
mov
lods
in
adcb
jb
lods
push
lret
fisubrs
pop
push
aam
mov
sub
mov
xchg
jno
cmp
sbb
mov
mov
in
rol
fnstcw
ret
jecxz
or
syscall
sbb
add
in
pop
and
cmp
cmp
rcll
cmp
pop
pop
mov
and
subl
jnp
insl
cmpsb
or
dec
andb
push
out
ret
xchg
or
std
addr16
sub
test
into
sbbl
loope
leave
js
mov
push
sub
mov
movb
repnz
jno
or
sub
loopne
push
sbbb
and
shrb
cmc
scas
adcl
rcrl
test
push
mov
loope
mov
imul
inc
adc
int
mov
pop
mov
push
ret
das
cmpsl
or
lea
and
xchg
pop
mov
cmp
fcmove
jbe
xchg
sub
mov
ja
mov
mov
xor
xor
stc
loop
add
mov
int
insl
mov
mov
xor
sahf
incl
dec
mov
out
mov
ret
push
out
mov
scas
sti
lods
stos
fnstcw
dec
mov
jecxz
xor
iret
stos
fsubl
jns
subb
pusha
cmp
fninit
adc
push
stc
push
mov
jb
iret
jge
mov
sbb
enter
pop
in
popa
pop
jno
aaa
jl,pn
insb
mov
insb
movl
sbb
push
cwtl
add
das
cmpb
mov
add
push
mov
push
pop
jmp
mov
mov
jno
in
leave
loopne
in
adc
mov
out
mov
mov
test
jge
add
sub
out
xor
loop
test
shll
incb
push
adc
lahf
mov
inc
and
cmpsb
daa
sub
mov
or
ret
scas
xchg
shl
add
adc
call
mov
lds
loop
mov
push
cmp
roll
inc
enter
es
sahf
and
jb
popf
add
adc
pop
jmp
xchg
mov
loop
cltd
arpl
inc
xor
mov
dec
xchg
and
insl
ret
stos
mov
pop
jg
mov
cmp
mov
popa
push
das
orl
stos
imul
mov
iret
xchg
inc
inc
call
inc
ss
fs
or
stos
leave
mov
inc
out
sarb
xchg
mov
arpl
xor
ret
fcoml
dec
xorb
je
ret
repnz
cmpsl
inc
ret
test
xlat
dec
jp
roll
loopne
jmp
repz
in
mov
or
enter
add
mov
lret
add
cmpsb
cmp
lcall
test
and
or
movsl
sbb
loop
test
fwait
ret
add
scas
mov
mov
add
mov
sbb
sti
xchg
in
add
dec
movsl
sbb
jl
fsubrl
in
mov
xchg
pop
mov
mov
cltd
jmp
xor
repz
out
mov
fwait
stos
stos
xchg
sub
popf
ret
imul
call
mov
and
ja
fisttps
mov
and
xchg
popa
pop
inc
xchg
loop
adc
mov
fcoml
mov
loopne
iret
nop
pop
pop
mov
loope
ljmp
arpl
adc
hlt
es
in
jnp
adc
adc
adc
out
pop
enter
clc
adc
aaa
stos
addr16
cmpsb
test
rcll
dec
and
pop
insb
es
movsl
dec
xor
sbb
aad
sbb
in
mov
jp
pop
repnz
xchg
arpl
xor
sbb
mov
in
mov
out
dec
xchg
iret
xchg
jbe
rcr
mov
push
add
sub
mov
push
adcb
mov
add
inc
or
jecxz
icebp
testb
inc
adc
ret
mov
mov
mov
aaa
sahf
loopne
inc
imul
imul
mov
dec
mov
outsl
inc
dec
bound
data16
mov
hlt
ds
in
sbb
xchg
stos
mov
les
mov
and
dec
das
adc
mov
cmp
ljmp
jae
das
adc
add
mov
and
dec
mov
dec
xor
xor
mov
mov
add
lret
xor
or
lods
mov
xor
or
xor
cld
inc
mov
jnp
psrlq
outsl
iret
sub
ljmp
add
ljmp
ja
fs
inc
mov
incl
mov
xchg
and
orb
out
pop
nop
sahf
mov
sbb
xchg
mov
lock
sbb
fiadds
outsb
add
arpl
out
push
mov
push
xor
jo
jp
es
inc
shlb
rolb
add
and
jo
add
je
add
data16
aaa
sbb
adc
ds
push
or
adc
shll
shll
dec
pop
and
cld
daa
fcmovnu
ljmp
in
neg
add
cli
iret
repnz
popf
addl
int
adc
dec
adc
fs
or
popa
dec
loopne
cmp
repnz
popa
arpl
pop
leave
inc
jmp
test
mov
loopne
xchg
mov
add
lcall
pop
mov
vmread
push
pop
imul
pop
fs
ret
popa
addl
shlb
adc
nop
loop
sbb
push
add
add
cmpsl
jmp
add
lock
lods
add
call
jae
add
aam
sarb
or
loopne
inc
shll
addl
andb
push
int
mov
jno
xchg
adc
and
ror
push
aam
jecxz
repnz
adc
movsl
pop
dec
bound
andl
dec
mov
mov
inc
stos
xlat
or
lock
sarl
pop
and
jbe
sub
movsl
ljmp
enter
sbb
callw
and
or
imul
test
cli
or
push
test
or
add
fs
push
xor
loope
pop
or
sub
in
std
int3
sbb
jne
das
loopne
es
arpl
shr
xchg
or
test
mov
ret
mov
jge
int
mov
and
outsb
pop
jg
mov
xchg
repnz
nop
jno
pusha
push
test
cmpsb
jmp
in
sub
dec
lret
rolb
popf
fidivl
cltd
and
outsl
xchg
je
sub
out
cs
repnz
mov
ret
leave
sub
lret
sbb
xchg
mov
inc
mov
push
mov
mov
dec
js
xor
mov
int3
jecxz
xchg
mov
loopne
add
stos
xchg
gs
mov
mov
mov
into
mov
push
lods
bound
dec
xchg
fs
or
or
mov
xchg
dec
mov
mov
sahf
mov
das
mov
bnd
mov
mov
test
adc
popa
hlt
push
dec
sbb
jg
push
mov
xchg
in
popa
mov
rcll
jmp
pop
ljmp
push
testb
int3
fistpl
cmc
pusha
paddusb
sbb
mov
push
in
rolb
dec
daa
loop
xchg
push
imul
leave
mov
lock
mov
bound
push
pushf
pusha
mov
xlat
mov
pop
or
sarb
add
in
mov
shlb
pop
test
movsb
xor
add
xor
int3
bound
mov
inc
lea
mov
outsb
lret
dec
mov
iret
shll
mov
mov
lret
stos
scas
pop
inc
std
or
push
xchg
in
dec
addr16
mov
dec
push
roll
mov
sbb
inc
mov
jo
or
daa
mov
inc
mov
outsl
cmp
les
inc
and
movsl
jne
or
stc
cmpl
gs
subl
mov
and
ja
or
arpl
jecxz
xor
pop
cmc
mov
rcr
das
mov
cmpl
dec
lcall
cmp
fucomip
adc
adc
jno
repz
test
lahf
pop
jb
mov
shl
and
mov
pop
hlt
add
lods
or
repz
push
xor
sbb
in
xchg
pop
loopne
push
inc
adc
inc
push
in
inc
jb
jl
xchg
les
xchg
enter
cmp
div
adc
or
jp
test
jle
nop
cmp
dec
aaa
in
or
iret
sbb
ret
pusha
jo
jecxz
loopne
xchg
iret
rol
inc
loopne
outsl
subb
mov
xchg
mov
and
or
pop
cmpsb
mov
add
dec
sbb
pop
push
arpl
out
flds
enter
out
jmp
sub
adc
movsl
push
adc
leave
push
aas
rol
out
pop
mov
in
push
ret
repnz
lea
fisttpl
cmc
jne
mov
mov
add
and
ret
and
data16
aaa
mov
icebp
roll
and
mov
fnstenv
or
sbb
ret
xchg
int3
call
xor
or
cli
xchg
and
adc
sub
mov
sbb
cmpsb
and
fucom
push
add
sub
ljmp
sbb
ds
in
sub
nop
es
enter
out
push
in
push
or
outsb
and
ficoms
jg
sbb
add
negb
or
push
pop
add
fadds
cmpsb
aas
xor
inc
out
inc
arpl
jl
cmpb
jge
inc
mov
test
jb
dec
add
ret
pop
dec
dec
mull
sub
mov
sbb
call
pop
lods
mov
imul
push
test
rclb
cld
or
add
pop
sqrtps
push
pop
inc
int
cmpsl
aam
hlt
lret
aas
add
jl
and
es
xchg
sbb
jge
or
cld
sub
jb
js
lret
cld
or
fbld
mov
filds
fldenv
add
icebp
aad
lock
scas
in
cmp
cli
daa
out
rclb
test
mov
imul
sti
ficoms
inc
sahf
dec
add
popf
push
push
jmp
inc
pop
mov
add
enter
aas
sbb
xlat
inc
xor
pcmpeqd
cmp
xchg
ja
mov
pop
sbb
push
inc
daa
pop
leave
iret
pop
scas
loopne
fstl
aam
cli
test
lret
sbb
push
lods
dec
push
or
jnp
in
insb
mov
mov
push
filds
loopne
mov
xchg
adc
jb
aas
sub
pop
push
in
in
out
lods
inc
cs
jle
loopne
inc
ret
mov
cwtl
jb
sbb
rcrb
in
mov
jmp
adc
mov
xor
pop
mov
xor
imul
xchg
xchg
int
cs
jecxz
mov
or
mov
bound
into
pop
aam
test
pop
add
ja
push
pop
adc
mov
jp
cltd
loop
ss
insl
bound
sub
daa
jne
and
fadds
sub
inc
jle
sbb
outsb
add
push
dec
dec
push
xchg
out
pop
nop
mov
jl
xchg
loopne
aas
dec
jbe
das
stos
xor
xchg
dec
mov
sub
or
decl
scas
and
mov
movsl
mov
inc
leave
pop
call
sbb
pusha
sub
dec
mov
sub
outsl
out
fcompl
push
movsb
sbb
push
jo
imul
sarl
ljmp
fidivs
sbb
imul
pop
mov
xchg
in
arpl
in
inc
push
dec
fisttps
out
out
xchg
mov
scas
movsl
hlt
mov
push
and
int3
or
sbb
mov
ret
xor
sub
and
pop
xchg
dec
push
mov
dec
mov
pusha
adc
add
xor
push
jecxz
add
in
mov
xor
stos
mov
push
mov
inc
andb
mov
cltd
cmp
mov
jle
lock
orl
adc
and
add
rorb
or
test
mov
pop
jae
xchg
add
iret
xor
mov
adc
js
ljmp
rcrb
pop
ret
and
xchg
or
or
in
jbe
cwtl
lods
lret
jp
vmovlps
in
fdivrp
es
bound
adc
mov
out
inc
add
or
dec
jo
mov
int3
mov
xorb
xchg
push
bnd
enter
cwtl
push
push
out
sti
inc
aaa
sti
mov
or
cli
jno
fs
sub
fwait
add
sub
cli
fisubrl
rcr
sub
xchg
out
in
mov
lods
inc
cmp
popa
cwtl
jae
leave
sub
sub
adc
adc
dec
leave
test
loopne
mul
sub
mov
dec
hlt
sbb
loope
sub
add
jb
sub
bound
loop
cld
insb
add
cs
arpl
out
pop
push
addr16
jae
ss
mov
leave
add
addr16
sub
xchg
xlat
in
pop
mov
adcl
mov
outsl
cmc
stc
and
jecxz
ss
sub
mov
cwtl
std
xorb
jne
mov
stos
ret
cli
xchg
ds
push
arpl
lods
and
movb
jne
sub
subl
jecxz
and
jae
xchg
pop
int
shlb
outsl
mov
stc
pop
fdivrs
adc
sub
xor
fadds
subl
cmpsl
mov
pop
lahf
push
mov
mov
jno
pop
add
mov
xor
in
mov
or
push
sbb
and
add
add
inc
or
out
cmp
inc
xor
shrl
icebp
add
add
popa
xchg
pushf
cli
xchg
sbb
add
cmp
jecxz
insl
loop
add
mov
pusha
jo
or
mov
data16
adc
rcrl
adc
sbb
xchg
or
add
adc
outsl
xchg
call
rorb
ret
cld
lcall
enter
add
bound
adc
or
mov
dec
mov
pop
adc
and
mov
or
clc
cmpsb
cmp
dec
xor
out
xchg
ficompl
std
lock
push
xor
out
or
test
inc
xor
pop
xchg
sbb
sub
lret
mov
adc
push
dec
mov
add
test
inc
jnp
push
aam
in
and
loopne
in
cltd
mov
test
push
enter
out
movsb
adc
push
jnp
nop
xor
push
lods
jecxz
sub
add
dec
in
fwait
outsl
shl
pop
aam
and
test
sahf
arpl
inc
mov
dec
loope
pushf
adc
lret
mov
dec
rolb
into
int3
xor
or
or
loopne
sbb
inc
pusha
adc
inc
dec
ds
sub
jo
sbb
ret
lods
rol
fwait
rcll
pop
int3
xchg
or
or
pop
repz
adc
add
sbb
loope
or
int
adc
add
inc
jg
insl
sub
iret
loope
imul
push
or
xor
in
jmp
add
std
adc
scas
inc
lods
test
loop
jge
jp
dec
adc
inc
mov
outsl
sub
jo
xchg
rcll
cmpsl
push
jg
mov
inc
dec
lods
and
jno
shrb
pop
into
icebp
and
jl
lods
sbb
xchg
loop
cmc
pushf
or
mov
or
fldt
and
shll
cwtl
or
inc
faddl
push
push
pop
mov
loop
sahf
add
dec
push
test
mov
lock
xor
bound
dec
lret
sub
test
sbb
xchg
inc
sub
out
xlat
mov
fnstsw
bound
sbb
jb
dec
movsb
push
jb
jmp
sub
inc
bound
nop
sub
outsb
mov
or
arpl
outsb
icebp
add
arpl
mov
pop
mov
jno
nop
dec
lcall
push
out
movsl
mov
or
inc
out
pop
loopne
mov
or
cmpsl
jbe
nop
and
js
mov
mov
jg
push
fsubrl
mov
leave
roll
cltd
sub
testl
xor
sub
repnz
clc
or
xchg
stc
mov
sbbl
xlat
pushf
jmp
add
clc
or
xchg
cmp
or
dec
inc
in
push
xchg
jno
out
addl
shr
inc
push
out
xor
inc
mov
das
in
iret
push
mov
add
sub
xor
jno
or
popa
lods
cmp
add
jp
pop
cltd
add
ret
mov
repz
call
push
jle
xchg
daa
push
aaa
jmp
cmp
pop
sbb
aas
mov
push
shll
push
mov
mov
sbb
or
pop
add
ret
pop
and
jmp
and
fcomps
push
popa
pop
ss
inc
loope
inc
test
inc
test
pop
sub
aas
out
or
sub
int
loopne
idivb
stc
push
ja
in
daa
or
and
mov
pop
mov
in
imul
or
mov
mov
aam
scas
xchg
daa
xchg
nop
add
out
and
mov
pop
sub
cld
sbb
out
int
out
outsl
dec
imul
jg
call
mov
loope
or
movsb
cli
data16
out
cltd
call
or
adc
stos
mov
push
and
out
and
adc
cs
sub
push
addr16
fidivl
or
out
repz
mov
pop
or
into
movl
cmovno
fs
cmp
lods
nop
inc
sub
add
jnp
lods
loopne
or
into
jp
add
push
fisttpl
xchg
ljmp
fisttpll
lock
jle
add
mov
mov
loope
sub
cltd
xor
outsb
dec
xlat
pusha
gs
movl
xchg
lods
cmc
sbb
mov
push
movl
jge
jl
lods
xor
imulb
inc
cld
or
xor
dec
and
pushf
pop
xor
fsubrl
test
adc
outsb
outsb
mov
lret
dec
adc
insb
adc
mov
in
mov
rcrl
out
clc
mov
sub
fdivs
xor
outsl
outsl
adc
hlt
cmp
mov
mov
or
iret
pop
mov
loope
mov
and
out
mov
cmp
fisttps
test
dec
sub
mov
loopne
xor
inc
aad
or
pop
dec
cmpsb
cmp
mov
dec
mov
dec
call
sub
dec
xor
mov
xor
cld
imul
jb
pop
and
cmp
jecxz
movsb
mov
sub
or
mov
lcall
test
inc
popa
and
repz
fcoms
add
sub
and
push
fmull
push
xchg
add
push
push
arpl
jnp
sbb
out
push
pop
xor
push
scas
mov
lea
cmpb
scas
negl
jge
mov
add
adcl
shll
ret
scas
and
adc
push
pop
lcall
jmp
jg
cwtl
rorl
jae
nop
lcall
mov
sarb
lods
cltd
cmpsl
jg
adc
dec
fsub
adc
cltd
leave
aas
out
in
inc
jle
pop
and
jne
xor
fwait
cs
adc
pop
jg
or
pushf
pusha
lahf
into
xor
js
mov
lods
cs
lret
addr16
lods
push
out
stc
xor
dec
and
out
hlt
inc
and
push
call
mov
addr16
sub
jge
test
jmp
xor
test
mov
ss
mov
jno
out
push
inc
pop
jmp
repnz
in
and
mov
das
mov
sar
insb
sbb
ds
shr
inc
cmp
test
repnz
push
int3
adc
dec
dec
mov
aas
popf
or
adc
cmpb
fadd
mov
rcrl
mov
loope
mov
push
pop
cmp
jns
add
pop
or
ss
js
das
sbb
loope
mov
out
pop
add
push
and
stos
sbb
and
mov
xchg
lea
sub
xor
pop
and
push
and
jecxz
dec
icebp
pop
es
aam
js
bound
ret
lds
xchg
mov
xor
pop
jb
loopne
bound
arpl
sbb
cli
pop
or
outsl
cli
push
mov
divb
or
fs
xor
or
sbb
enter
mov
inc
mov
mov
in
mov
in
pop
and
fwait
mov
and
dec
pop
xchg
mov
sbb
dec
or
adc
jle
mov
push
in
sbb
adc
lods
cmpsl
inc
enter
repz
loop
sbb
sub
rcrl
subl
xor
lret
mov
sub
adc
data16
pop
dec
xchg
std
or
out
push
mov
cld
test
xchg
lods
icebp
in
ss
xchg
xor
in
adc
mov
mov
mov
inc
cs
cmp
mov
repz
inc
call
lret
and
jl
lret
sbb
or
call
call
cmpsl
es
iret
je
sti
addr16
mov
or
daa
xchg
add
inc
inc
dec
jns
rdtsc
rorb
aaa
clc
or
outsb
xchg
loope
mov
insl
dec
mov
dec
fisubs
sarb
add
adc
repz
scas
scas
in
jmp
jo
sbb
mov
iret
rorl
fisttps
cmpb
dec
or
and
xor
or
push
add
sub
and
sbb
jno
sbb
adc
push
clc
xchg
data16
int3
push
push
call
outsl
sub
fsts
out
dec
cmp
adc
or
or
lea
push
xor
js
inc
inc
jno
filds
pop
mov
sub
jo
lret
dec
or
and
mov
dec
into
pusha
mov
add
mov
cld
imul
fildl
xchg
popf
repz
and
mov
or
dec
cs
insl
out
movsb
cmp
std
andl
cmpsb
test
in
pop
pop
int3
push
das
and
mov
push
test
jp
lock
and
dec
xor
pop
add
jbe
cmp
out
pop
mov
add
mov
shrb
repz
test
scas
mov
es
in
out
testl
jmp
int
fsubrl
jnp
in
shlb
sarb
or
in
add
loope
lcall
subl
insb
mov
pop
call
add
add
rolb
outsl
nop
dec
shlb
hlt
lds
push
push
lods
sbb
adc
pop
and
xor
aaa
sub
out
and
fdivrp
fmull
push
hlt
in
or
mov
push
mov
jecxz
cltd
nop
mov
stos
mov
pushf
lea
ja
jb
cmpsb
or
dec
sahf
inc
or
bound
addl
jno
add
xchg
dec
jnp
cltd
sahf
adc
jb
cld
fdivs
inc
sahf
cmpsl
cmp
cmp
push
sbb
in
adc
cmp
cli
insl
xor
fisttpl
jb
and
mov
adc
and
cli
jle
mov
shlb
out
jmp
into
das
push
dec
ret
iret
sub
push
dec
fdivrl
push
nop
sub
add
lret
jle
mov
inc
dec
cwtl
fmul
and
add
ss
fcomp
mov
icebp
jp
inc
and
stos
sub
add
pop
jo
or
or
or
call
pop
enterw
and
pop
arpl
push
mov
push
fwait
xchg
fwait
pop
faddl
es
or
push
xchg
mov
dec
scas
cmpsb
sub
bound
cwtl
add
xor
and
aad
aas
cmpsb
stos
addr16
inc
lods
and
mov
add
ds
gs
inc
dec
mov
out
cmp
jl
fbstp
push
ret
movsl
and
test
and
xchg
sub
daa
xor
cmp
ss
cmc
imul
fcmovbe
sbb
inc
arpl
inc
mov
jmp
jbe
ja
subb
mov
dec
add
mov
mov
jge
bound
mov
mov
dec
or
nop/reserved
bound
sbbl
movsl
icebp
arpl
ficompl
adc
outsb
add
cltd
popf
push
lcall
xlat
xchg
add
ret
inc
add
dec
test
lods
jno
adc
ret
out
stc
shlb
xchg
sub
xchg
mov
xlat
andl
test
sub
loop
sub
adc
xor
mov
cmp
fcmovnb
xor
xchg
repz
mov
shrl
out
xor
imul
push
mov
shlb
mov
mov
jmp
mov
call
mov
add
pop
les
rcr
jb
imul
add
push
orl
xchg
punpcklbw
cmp
and
adc
adc
cmp
pop
adc
rclb
dec
push
sub
cmc
negb
and
loop
pop
push
mov
add
nop
out
arpl
inc
adc
dec
out
imul
jmp
repz
mov
out
ja
xchg
out
lahf
jge
mov
mov
rolb
into
in
xchg
es
pop
fcompl
xor
pop
pushf
add
sti
sbb
mov
sub
inc
repz
xchg
jecxz
aam
push
fildll
xor
int
in
xlat
sbb
subb
bound
xor
sbb
ret
cpuid
aas
pop
lds
out
inc
mov
add
pop
or
dec
and
out
inc
lret
out
cwtl
xchg
fsubl
or
pop
ss
cmp
ret
inc
test
pop
inc
xor
mov
stos
mov
adc
pop
mov
xor
inc
imul
jmp
mov
and
and
out
test
adc
repnz
sarl
jo
xor
push
imul
push
das
lock
repz
xorb
ret
sub
push
jecxz
adc
shll
leave
lea
or
xchg
add
and
sub
icebp
add
inc
mov
xor
loopne
push
hlt
inc
imul
cmpsb
outsl
mov
and
sub
inc
enter
lahf
sub
stos
sub
scas
push
xchg
xor
insb
jg
inc
sub
and
daa
and
lods
or
dec
jo
enter
cmp
imul
add
addb
ljmp
enter
add
xor
daa
fidivrs
dec
adc
adc
pop
cmc
xchg
adc
inc
xor
push
in
adc
add
jg
adc
movsb
fimuls
insb
adc
add
add
sub
pop
sahf
ljmp
mov
and
dec
out
mov
cmpsb
sahf
mov
or
cs
and
in
inc
repnz
jmp
repnz
add
xchg
stos
push
das
ljmp
mov
adc
dec
sub
jmp
xor
imull
xor
jae
mov
mov
iret
push
inc
orl
test
or
mov
inc
add
mov
fildl
leave
cmc
out
push
mov
outsb
das
jno
cmp
xchg
sahf
mov
xor
mov
pop
push
stos
jae
clc
les
mov
adcb
lcall
sub
mov
out
xor
roll
cmpsl
out
mov
dec
sub
cmpsb
loopne
icebp
jmp
adc
cmpl
arpl
inc
jne
insb
or
xor
pop
sub
fbld
xor
and
sub
mov
or
adc
rolb
adc
pop
or
jmp
aam
loope
loopne
loop
jnp
divl
mov
popa
fcmovb
and
imul
inc
pop
cmc
and
xor
inc
repnz
jae
movsl
lods
loope
dec
js
xchg
mov
lret
mov
out
lds
inc
and
stos
fadd
arpl
mov
xor
mov
mov
jge
sub
and
pop
out
add
out
in
je
cld
mov
ds
jo
cmp
adc
shll
adc
int3
loope
in
adc
test
mov
cmc
pusha
ss
and
pushw
shl
adc
nop
xorb
sbb
lahf
pusha
test
push
pushf
lret
lods
gs
hlt
xor
aad
adc
adcb
xor
orb
mov
filds
and
jecxz
mov
and
iret
adcb
xchg
leave
lods
and
and
rolb
repnz
push
push
adc
out
sbb
jl
data16
js
ja
push
jmp
mov
ja
aaa
lods
inc
inc
inc
sub
mov
cmp
test
test
and
sub
dec
xor
push
mov
and
and
inc
add
or
sbb
lcall
les
add
inc
in
into
mov
add
lods
lea
mov
mov
mov
or
cmp
loopne
dec
test
aas
sub
gs
mov
xor
mov
test
je
sbb
sub
and
icebp
mov
push
add
inc
call
pusha
mov
push
call
jnp
inc
pop
popa
mov
outsb
shll
and
repnz
pop
daa
sbb
insl
call
mov
mov
add
mov
popa
test
loope
xchg
adc
push
adc
inc
aas
out
gs
lea
dec
adc
cwtl
jo
xchg
dec
sub
sub
adc
test
push
sub
sub
movsl
push
xor
pop
and
sub
sarb
push
cmp
fcmovb
mov
js
loope
or
push
and
arpl
mov
or
adc
in
sub
adc
insl
pop
adc
mov
push
mov
mov
loop
leave
inc
push
sub
loop
dec
outsl
daa
leave
ret
push
scas
jbe
pop
pop
xor
adc
frstor
shrl
push
push
cmpb
cmp
mov
mov
stos
loope
sub
rorl
lea
cmpsl
imul
lods
sub
mov
ja
inc
idivl
xor
dec
cmc
sar
or
mov
ss
dec
xor
and
stos
repz
mov
and
cs
lock
sub
pop
int3
and
add
add
fld
stos
cmpsb
js
mov
push
jae
sub
out
idivb
in
adc
pop
xorb
sbb
bound
fldt
jle
cli
cs
add
cmp
popa
punpckldq
test
orl
or
xchg
sbb
rorl
add
andl
insb
xor
sti
inc
clc
rcrl
dec
dec
cld
ja
sub
mov
lea
pop
sbb
outsl
xorb
mov
or
add
push
or
inc
js
jle
sub
roll
xchg
repz
dec
dec
sub
outsb
sahf
in
mov
data16
inc
inc
adc
add
sbb
aas
mov
pop
loopne
hlt
adc
repnz
jno
mov
in
cmc
insb
icebp
lahf
mov
inc
push
xor
dec
lret
rcr
out
xor
and
jb
mov
js
arpl
cmp
sbb
and
sub
sub
adc
sbb
dec
lods
shlb
sub
aam
in
pop
cmp
dec
cltd
mov
jecxz
insb
imul
fld
fadds
es
aad
mov
int3
mov
sahf
imul
cli
mov
cmpsb
imul
and
ret
in
mov
and
cs
pop
mov
dec
cltd
ret
jae
sbb
mov
rol
adc
fimull
push
adcl
mov
es
cmpsl
push
xorl
je
sbb
inc
lret
mov
popa
test
cmp
arpl
mov
mov
mov
iret
adc
jae
jge
cld
push
dec
stos
ja
mov
mov
lds
add
lods
adc
xchg
arpl
add
rcl
aas
sbb
in
pop
fsub
mov
mov
pushl
xor
sub
pop
loop
pop
bound
mov
andl
icebp
mov
adc
and
jl
add
fstpl
fstpt
push
pop
mov
sub
dec
ss
dec
adc
pop
xlat
lds
test
ljmp
xchg
mov
repz
inc
mov
test
popf
mov
sub
test
js
sub
dec
dec
pop
nop
mov
fidivl
adc
out
and
bound
jecxz
lcall
jbe
inc
insl
push
cltd
mov
les
mov
mov
test
outsl
hlt
mov
and
aad
arpl
mov
arpl
mov
aad
mov
loope
xchg
and
aad
bound
into
int3
adc
sbbl
sbb
js
xchg
ljmp
push
or
and
adc
adc
shll
sbb
xor
aad
subb
sbb
sbb
mov
jnp
outsb
cmp
nop
sub
adc
adc
xchg
adc
mov
loope
adc
jle
out
das
pop
nop
xchg
cmp
das
xor
xchg
inc
xlat
xchg
cmp
mov
and
ss
fiaddl
xchg
sub
sbb
lods
dec
xlat
adc
ficomps
mov
bound
xor
lods
ds
jno
loope
das
nop
shlb
lret
iret
idiv
lock
scas
jo
je
bound
jo
jg
insb
sub
sub
enter
popa
push
adcb
das
fdivrl
sbb
aam
loop
adc
repnz
das
int3
bound
add
nop
adc
lds
clc
xchg
mov
repz
or
out
and
stc
mov
push
mov
dec
xchg
sub
sub
xchg
movsb
xchg
inc
ret
mov
addr16
mov
jns
pusha
xor
arpl
push
xor
shlb
inc
lahf
xor
lods
aam
xlat
dec
inc
adc
jb
ja
push
fsubrs
pop
sahf
inc
pop
inc
ret
aam
adcb
adc
pop
jo
aam
dec
jb
sub
push
mov
sub
andb
push
inc
mov
jo
fs
xchg
pop
mov
add
sbb
cwtl
jne
cltd
mov
mov
and
mov
cmpsb
sbb
loopne
xchg
mov
mov
sub
push
and
sbbb
stos
push
dec
xor
add
jno
sahf
pop
jae
icebp
adc
xor
sar
out
rcrl
mov
or
es
jo
or
adc
popa
and
lods
pushf
cli
daa
aad
xchg
rolb
mov
pop
data16
sbb
fnclex
push
mov
aaa
leave
es
xchg
add
test
data16
pop
lds
mov
push
mov
add
mov
cmpsl
xor
orb
adc
sbb
cwtl
addb
pushf
ret
push
fsubrl
and
and
push
and
out
push
fldcw
jnp
aaa
jae
lcall
je
add
pop
frstor
sub
enter
es
mull
insb
stos
and
xlat
mov
cwtl
mov
stos
jne
cs
rcrl
and
out
test
int
sub
adc
std
sbb
xor
push
stc
add
and
scas
in
testl
inc
mov
mov
sbb
hlt
ljmp
aam
sar
lock
loop
push
sub
mov
mov
inc
popa
and
xchg
popf
ljmp
mov
and
adc
jl
movsl
and
xor
dec
loopne
inc
mov
mov
jge
arpl
mov
dec
add
mov
cld
sbb
xor
hlt
sbb
sbb
pop
mov
add
inc
addb
lds
je
or
jg
add
mov
shrl
xor
push
gs
adc
sub
add
scas
xchg
stc
repz
add
inc
adcl
pusha
loopne
sub
ret
push
int3
add
repz
cli
add
pushf
ljmp
mov
mov
and
xchg
push
stos
mov
outsl
push
fstp
test
xor
mov
outsl
insl
xor
shll
mov
sbb
xor
pusha
fimull
enter
xchg
xchg
jb
pop
addl
aad
pop
and
jl
bnd
fdivl
xchg
mov
movsb
push
das
and
and
push
xchg
nop
ss
imul
adc
sti
arpl
xchg
hlt
aad
cmpsb
loope
or
or
sbbb
cmp
popa
ja
imul
dec
aaa
mull
mov
fcomps
das
je
cs
mov
cmpb
cmp
stos
imul
and
fsub
dec
andl
pop
mov
add
cmpsl
and
adc
dec
adcb
test
nop
shrb
xor
aam
movsl
or
or
out
cld
rcll
adcb
ret
test
lods
scas
cmpsl
jb
inc
in
push
cmp
cmp
dec
inc
cmc
test
jns
xor
sbb
push
in
mov
dec
xchg
daa
adc
mov
sbb
adc
test
pop
add
mov
js
mov
or
add
mov
and
repz
scas
call
cld
in
loope
sub
repz
sbb
roll
xor
movsb
xchg
pop
xor
mov
je
fistpll
and
cmp
scas
pop
sub
sbb
movsl
fldcw
sarb
lret
bound
movsl
dec
xchg
xchg
ljmp
and
push
lds
jmp
or
mov
cmpsb
das
mov
mov
fsub
pop
push
ja
jno
cmp
pop
stc
xor
imul
dec
sti
and
cli
xchg
push
js
pop
or
jg
xchg
cmp
add
fildll
sub
notb
push
dec
sbb
pop
mov
and
add
inc
or
jne
cmc
mov
aaa
roll
hlt
adc
in
in
xchg
xor
add
stos
sbb
xor
shlb
addl
push
repz
je
sbb
add
xchg
ds
pop
popl
inc
dec
push
jo
out
cmp
xor
cld
rcrb
in
xchg
stc
or
mov
lods
insl
adc
nop
mov
push
xor
cmpl
xor
cwtl
cs
push
in
mov
clc
orl
mov
mov
and
mov
mov
repz
rorb
les
xor
dec
sbb
dec
pop
adc
jae
int3
movsb
idivl
test
movsl
jno
icebp
mov
push
mov
mov
movsb
mov
push
faddl
push
jmp
push
mov
mov
in
addb
mov
scas
js
push
and
inc
and
inc
pop
lods
lcall
mov
lods
out
xchg
dec
jne
add
jb
mov
test
push
shrd
cmpsb
icebp
sub
dec
xchg
pop
push
adc
nop
lcall
cmpsb
adc
dec
adc
mov
loop
mov
ja
sbb
mov
sbb
repnz
or
clc
idivl
cmp
sbb
inc
in
mov
ds
inc
subl
lods
inc
sbbl
sbb
xor
addl
int
mov
xor
es
mov
push
jl
pop
push
sbb
jg
mov
in
iret
add
filds
rcr
scas
xor
stc
insl
dec
loop
sub
pop
and
fdivl
adcl
mov
jb
push
xor
pop
add
inc
mov
movsl
test
xchg
and
and
push
push
inc
cs
fiadds
sub
pop
nop
mov
push
lds
jbe
arpl
lea
test
adc
mov
shlb
das
xchg
inc
and
test
mov
aad
iret
push
ret
aaa
outsb
push
xor
jae
xchg
mov
and
insb
movsl
or
or
mov
adc
gs
lock
inc
out
and
ljmp
decl
ret
jmp
les
rol
je
adc
or
sar
inc
mov
mov
leave
pusha
test
push
jae
cs
add
add
dec
push
icebp
sub
fistps
fmuls
or
sti
and
out
fwait
xchg
insl
xor
sub
push
es
adc
or
cmp
ror
jecxz
fistps
adc
push
test
push
mov
add
fildll
stos
popa
test
add
ret
pop
sub
int3
and
xchg
inc
and
jne
lock
add
xchg
loop
test
je
mov
inc
ja
fs
stos
inc
xorb
or
rcrl
or
cmp
xchg
aaa
and
xor
sti
insl
bnd
js
sub
fwait
and
outsb
int3
jl
fldl
ds
xor
dec
inc
inc
loop
xor
shll
lods
loopne
xor
mov
or
mov
imull
mov
dec
ss
xor
jb
push
sbb
xor
dec
loopne
and
mov
push
adc
test
aam
pop
fs
rol
popa
roll
add
loopne
jns
dec
sbb
and
out
dec
mov
loopne
adc
pusha
lret
sbb
dec
dec
and
mov
adc
fbstp
xchg
orb
stos
mov
inc
sub
loope
ffreep
adcl
popa
rclb
rcl
jbe
mov
and
inc
pop
and
and
jbe
std
nop
dec
mov
loop
shll
stc
popf
test
ja
xor
mov
inc
push
mov
and
inc
aad
sbb
test
inc
pop
fnstenv
cmc
adc
pushw
add
bound
and
js
add
pop
fsubl
bound
mov
ror
stos
cmp
cmc
xorb
mov
cld
add
subb
and
pop
flds
xchg
gs
and
xor
subb
sbb
xchg
arpl
dec
xor
jne
dec
xchg
cs
enter
fmulp
mov
or
mov
in
pop
inc
or
sbb
push
mov
xor
shll
jp
scas
sbb
cmp
pop
iret
ficoms
mov
in
push
pop
mov
cmp
jb
dec
stos
mov
push
mov
ss
add
jb
ret
cmpsl
mov
adcb
je
cmp
or
mov
bound
js
ficoml
push
mov
scas
ret
ss
xchg
mov
call
pop
cmp
fwait
inc
adc
lcall
pop
mov
push
jl
push
sbb
adc
cmp
pop
dec
cwtl
mov
mov
cwtl
mov
pop
adc
mov
cwtl
dec
out
fs
cmp
add
add
lods
inc
cwtl
aaa
loopne
std
adcb
fisttpll
mov
retw
mov
mov
and
movsl
ljmp
loope
in
flds
mov
add
inc
shr
xorl
flds
and
cmp
adcl
jge
inc
rolb
inc
add
add
test
das
dec
mov
rclb
fdiv
adcl
mov
in
xchg
xchg
pop
dec
xor
push
add
fistps
jb
cli
repnz
jns
pushf
dec
push
insb
mov
push
lret
lcall
mov
call
xchg
cld
mov
lods
arpl
dec
imul
xor
add
cld
iret
xchg
adc
push
clc
in
or
xchg
data16
mov
pop
cmp
sti
push
sub
subb
jmp
sub
mov
dec
rcl
stc
js
pop
inc
pop
cmp
out
xlat
subb
mov
lods
mov
sub
dec
mov
jmp
cld
jmp
push
fisttpl
hlt
out
rsqrtps
xchg
pop
imul
lahf
pushf
out
dec
push
push
int
adc
rcr
mov
cs
adc
dec
sub
adc
popa
xchg
fbstp
nop
jg
cmp
scas
ret
ja
cmp
mov
xor
mov
ja
sbb
enter
insl
in
call
cltd
mov
lock
arpl
sbb
push
hlt
shrb
out
jmp
pop
push
ljmp
rcr
aam
sub
push
and
xor
cld
mov
hlt
xchg
imul
decb
cld
bound
test
mov
repz
inc
xchg
pop
inc
insl
icebp
sub
test
cwtl
sbb
or
jb
sarl
fwait
mov
sub
insl
iret
shrb
cmp
cld
imul
aaa
push
jnp
mov
mov
rcrb
sbbb
pop
jp
pop
mov
js
aas
lea
and
inc
or
push
rorl
jmp
loopne
push
imul
mov
xlat
hlt
rclb
repnz
dec
xor
cmpsb
jb
daa
pop
mov
xor
addl
mov
or
repnz
add
int
cmpsb
shrl
cmpsb
push
in
push
and
shlb
or
push
cmc
sub
or
lret
test
sti
dec
rcl
inc
ret
xchg
dec
add
sbb
in
sbb
sub
mov
or
rol
repz
mov
aas
dec
pop
out
roll
mov
push
sbb
add
xor
jp
cmp
mov
pop
jmp
mov
cld
or
lds
sub
int
and
dec
fsubrp
inc
jae
mov
mov
push
fistps
scas
inc
or
and
stos
shl
insl
enter
xchg
repz
je
inc
pop
xchg
sarl
add
ret
mov
mov
xlat
cmp
jecxz
int
adc
sub
popf
add
lods
dec
add
jae
imul
test
sub
shlb
out
imul
arpl
es
jp
lcall
aas
or
cmpsb
inc
jmp
addb
push
mov
aam
repnz
xchg
xchg
sub
aaa
stos
rcr
add
sub
or
shrb
inc
daa
or
pop
cmpl
mov
pop
mov
xor
aam
outsb
adc
shl
push
cs
adc
mov
cmp
mov
push
adc
outsl
push
cmp
push
adc
test
ret
adcb
in
fdiv
or
xor
inc
mov
pusha
inc
mov
cmpsl
push
mov
adc
xchg
movsb
pop
cmpsb
mov
shlb
psubusw
insl
cmp
mov
pop
imul
xor
fmuls
mov
out
loop
dec
in
pop
dec
mov
cmp
rorb
xchg
adcl
jbe
lods
xor
out
sub
fsubr
hlt
addr16
and
out
iret
insl
and
inc
daa
mov
xchg
cs
inc
inc
mov
pop
pop
sbb
fldl
insl
push
push
lret
mov
arpl
in
sbb
adc
test
nop
cmp
pusha
lock
pushf
xchg
arpl
fldl
adc
or
jo
pop
push
dec
or
mov
mov
xchg
js
push
sub
outsl
and
push
add
cmc
out
mov
cmp
fwait
sub
xor
mov
mov
pop
sti
pop
insl
arpl
xchg
cmc
daa
sarb
push
pop
das
imul
out
cli
ror
repz
or
mov
mov
mov
push
push
bnd
push
sbb
mov
clc
or
push
mov
or
mov
push
and
adc
and
xchg
aaa
or
add
sub
and
push
lock
and
inc
mov
fs
pop
pop
add
xchg
insb
push
rcll
and
andb
addb
cmp
or
and
idivl
mov
orb
pop
xchg
xor
fstps
adc
mov
add
or
add
cmp
sub
mov
loop
stos
cmpsl
or
and
mov
gs
adc
and
aas
adc
cmp
data16
mov
and
add
sub
in
out
aaa
dec
out
lret
xchg
or
outsl
sti
inc
icebp
fiadds
je
xchg
test
ss
shll
xchg
mov
jle
lds
dec
into
cs
jg
push
cwtl
mov
push
xchg
in
and
fisubrl
jge
sbbb
ret
xor
fsubrl
es
mov
inc
fwait
adc
add
out
adcl
scas
les
cmpsb
and
lret
adcb
mov
cmp
push
and
movsl
inc
roll
xorb
fadd
or
cmpsb
scas
out
sub
xchg
dec
hlt
imul
push
push
push
sbb
mov
inc
mov
popl
add
hlt
mov
cmp
jno
stos
in
mov
loop
jecxz
mov
sub
pusha
mov
ds
andb
out
mov
xor
mov
cmp
ss
mov
ja
lret
mov
ror
adc
sub
jae
imul
inc
inc
mov
scas
repz
repz
pop
mov
jecxz
xchg
mov
mov
mov
movsb
push
xor
cmpsb
push
or
add
and
lods
jle
cltd
or
cmpsl
shrl
into
sbb
cmc
inc
cmc
xor
mov
inc
sub
test
icebp
xchg
hlt
mov
xor
mov
jo
adc
pusha
cs
in
push
imul
jle
outsb
test
sbb
push
push
seta
imul
jae
dec
pop
lahf
out
add
xor
jecxz
inc
repnz
xlat
cmc
push
push
xor
std
pop
mov
push
mov
test
bnd
jb
sbb
mov
sub
lods
mov
ljmp
inc
test
mov
xor
fiaddl
icebp
and
vmovdqa
mov
movsb
repnz
repz
pushf
jne
cmp
mov
aad
test
or
into
dec
jne
adc
push
lock
inc
and
shrb
cmc
je
jo
push
push
data16
mov
add
push
bound
mov
cmp
or
adc
xchg
lods
popa
pusha
mov
rolb
insb
mov
les
push
mov
xor
popl
loopne
dec
aam
outsb
add
sbb
sbb
insl
add
rorb
mov
dec
sub
sti
rclb
lods
pop
test
ret
fnsave
and
push
fwait
pop
popl
addr16
and
mov
dec
and
mov
hlt
test
aad
adcb
pop
xchg
je
xor
sbb
loopne
jo
sub
aaa
sub
and
xor
lcall
out
mulb
inc
adc
repz
fwait
in
in
test
mov
and
shll
jge
xchg
push
dec
es
dec
adc
ljmp
add
lret
jae
lods
sub
outsb
ret
inc
push
test
popf
mov
xor
nop
add
or
push
mov
lock
inc
push
jb
lods
outsb
adc
dec
mov
inc
inc
pop
jne
mov
adc
inc
lea
adc
pop
es
pop
push
out
pop
stos
jecxz
dec
mov
sbbb
add
xor
xchg
std
fistpll
dec
jno
adc
xor
sbb
ds
rcr
pop
push
lods
inc
stc
mov
shrl
jo
dec
fwait
movsb
and
inc
add
arpl
imul
cmc
sub
or
mov
sbb
cs
pop
jmp
push
dec
add
outsl
push
fisubrl
push
push
xlat
adc
stos
sbbb
cmp
adc
xor
add
mov
in
and
mov
mov
cmp
pop
andb
adc
ret
cmpl
lret
jle
add
xor
or
sub
jecxz
imul
mov
add
ret
xchg
and
and
movsl
fsqrt
pop
cmp
inc
or
sbb
cmp
xor
out
sub
push
fisubl
shrb
cwtl
sbb
filds
and
xlat
mull
aas
add
or
mov
and
lods
imul
je
jg
mov
mov
gs
adc
jecxz
repz
lea
or
or
jo
dec
add
inc
movsl
and
push
cmpl
insl
xor
ret
mov
xor
xchg
dec
arpl
cmpsb
lods
mov
cwtl
add
imul
pop
nop
enter
jns
in
mov
jle
push
bound
and
test
stos
cmp
adc
adc
and
xor
nop
dec
add
xchg
sub
dec
mov
jl
std
fucom
mov
shl
mov
add
mov
push
pop
mov
sub
mov
xchg
push
mov
cmp
push
and
mov
push
adc
or
pop
inc
cwtl
push
ret
push
cmpl
cld
sbb
sub
int
inc
push
dec
aam
adc
inc
je
lds
inc
jbe
mov
popa
xchg
pusha
cmpb
push
mov
inc
out
pop
add
push
dec
out
daa
push
popa
xchg
popa
call
mov
gs
adc
adc
cmp
mov
gs
andl
jmp
dec
mov
sbb
xor
inc
mov
jecxz
test
and
aad
cmc
mov
and
sub
xor
add
inc
faddl
mov
pop
jo
mov
ja
inc
xor
push
icebp
pop
sub
fistpll
dec
mov
aaa
inc
mov
loop
sub
rcll
test
push
iret
jmp
xchg
loope
dec
rclb
rcl
insl
inc
sub
test
mov
push
cmp
push
adc
cmp
stos
repz
jl
cmpsl
adc
jns
adc
cmpsb
loopne
and
cmp
cmpb
push
fidivl
mov
stc
xchg
and
mov
movsb
stos
call
add
pop
loope
xchg
adc
fsubrs
inc
mov
push
sbb
xor
loop
in
push
push
lahf
add
lods
jb
icebp
addr16
loope
jae
fs
xchg
xchg
cmp
and
or
fisubl
jnp
dec
mov
pusha
imul
cmp
sarl
or
filds
pushf
xor
jb
rorb
mov
xor
pop
mov
xor
ss
loope
and
lods
lcall
sbb
xchg
movsb
fs
and
push
ret
cmp
adcb
daa
arpl
out
adc
leave
hlt
lods
out
aas
xorl
and
inc
lds
xlat
inc
xor
jecxz
xorl
ret
mov
dec
rcrb
xchg
sarl
and
repnz
les
inc
popa
xchg
lret
xchg
clc
orb
loopne
pop
sarb
pop
and
arpl
jno
fs
adc
fs
pop
popf
pusha
pop
shrl
imul
out
mov
xor
or
bound
add
repz
mov
mov
lcall
sub
mov
adcl
stos
xchg
sub
imul
add
push
jmp
and
fmull
pop
fsubl
inc
and
clc
sub
cmp
std
dec
sbb
call
push
dec
filds
int3
nop
xchg
andl
in
or
xchg
xorb
adc
lds
pop
mov
dec
rorb
add
push
out
popa
mov
and
push
or
adc
stos
mov
int
dec
or
test
stos
pop
jp
or
add
les
inc
inc
mov
fisubl
lret
push
mov
xor
je
icebp
nop
sub
pop
push
and
adc
pop
lods
and
cmp
cmpsl
pop
xchg
xchg
xchg
pop
inc
fildl
mov
xor
mov
sbb
add
mov
negl
add
mov
push
out
adc
imul
jno
lods
gs
adc
xlat
adc
adc
fists
inc
cmp
mov
vunpcklpd
sti
mov
dec
inc
mov
orb
xchg
inc
xor
inc
mov
adc
mov
or
aad
aas
jmp
scas
adc
stos
and
inc
pusha
jmp
dec
fadd
xor
mov
jle
imul
inc
shl
lcall
push
sub
fs
sub
inc
cltd
popa
in
mov
and
jae
xchg
movsb
adc
xor
pop
fwait
adcl
jo
int3
sahf
mov
fimuls
xchg
or
shrb
icebp
xor
dec
inc
xchg
push
inc
xchg
cmc
pop
push
mov
mov
loope
call
xor
jle
in
inc
aam
or
divl
and
sub
cwtl
test
notb
push
out
into
cltd
icebp
in
sbb
jp
mov
sub
push
adcb
xchg
xchg
jns
push
xor
popf
mov
dec
cwtl
cmpsl
shl
add
scas
aad
out
test
negb
pop
mov
mov
mov
mov
xchg
insb
lcall
sub
enter
sub
les
rclb
xor
push
cmp
filds
or
test
push
stc
sbb
or
fiadds
cmpsb
mov
decl
adc
cmp
push
and
push
xor
lret
cmc
stos
loope
and
insb
loope
push
push
inc
fs
stos
push
sub
loop
aad
pop
adc
xlat
push
pop
repnz
add
or
sti
and
imul
aas
mov
sbb
loop
sbb
lret
mov
fisttps
jmp
cmp
ds
jne
inc
inc
sub
shlb
mov
jns
out
add
mov
outsb
sbb
out
push
jmp
pop
outsl
inc
and
lock
daa
sbbb
push
sub
aaa
fpatan
push
inc
lods
orb
xchg
in
pop
adc
clc
lock
push
orb
pop
mov
mov
add
mov
pop
xchg
jnp
add
jl,pn
mov
icebp
xchg
sbb
add
sbb
lret
mov
fs
icebp
mov
xor
clc
popa
adc
loope
in
push
push
or
pusha
and
add
test
xor
push
add
ljmp
xor
add
add
sbbl
mov
leave
push
jle
mov
mov
push
sbb
inc
mov
add
and
and
xchg
leave
cmc
das
loop
mov
gs
xor
dec
pop
jg
jo
jo
adc
jmp
adc
in
enter
outsl
loop
or
sbbb
jmp
aaa
inc
mov
push
cmp
inc
sub
or
and
nop
ret
add
or
test
mov
popfw
in
andl
dec
cmp
pop
sub
daa
call
or
push
xchg
fildl
inc
mov
out
cmpsb
sub
hlt
and
insb
push
stos
push
xchg
mov
bound
adc
or
mov
push
movsb
loop
sub
das
je
sub
sbb
mov
mulb
push
cmp
adc
mov
push
dec
mov
daa
or
fs
xchg
test
and
shl
mov
push
or
add
dec
xor
ds
sub
mov
popf
mov
xor
into
dec
and
mov
fsub
mov
push
insl
icebp
and
add
adc
sarb
mov
jmp
stos
rolb
add
ret
pop
ljmp
xchg
mov
add
inc
repz
hlt
lock
inc
xor
jo
fsubrs
xor
cltd
loope
jno
sub
mov
push
fxch
xor
cmpsb
push
jae
clc
enter
sub
inc
jl
sbb
jae
fucomip
xchg
in
xchg
sub
push
push
xchg
stc
or
in
sbb
add
loope
mov
sub
stc
xor
iret
es
test
in
pop
sahf
int
gs
mov
mov
inc
cmp
insb
movsl
push
xor
add
xchg
xor
cmpsl
jae
mov
add
aam
pop
cwtl
add
bound
jae
mov
aas
and
outsb
cmpsl
leave
pusha
das
sub
sbb
inc
int3
adc
inc
imul
sub
adc
int
addl
mov
ret
jl
ret
loop
mov
jo
add
test
cwtl
push
mov
icebp
sub
inc
enter
es
jecxz
popf
jmp
shrl
in
add
xchg
sbb
xchg
rcll
lods
sub
inc
roll
fdivrs
pop
adc
nop
and
inc
das
dec
sbb
in
lock
or
negb
or
xor
inc
sbb
scas
push
das
test
cmpsb
push
fsubl
or
push
xor
add
ljmp
or
xor
add
adc
xchg
and
add
push
mov
mov
cmp
jmp
xlat
dec
clts
sbbl
jmp
scas
sub
adc
push
adc
xchg
sahf
adc
dec
sub
jecxz
inc
inc
jl
dec
cmp
adc
shrl
fldenv
loop
xchg
stc
push
inc
push
jbe
adc
pop
add
xor
pop
mov
mov
or
xor
loopne
pusha
in
adc
inc
in
and
hlt
xor
dec
or
adc
pf2id
pop
add
mov
loop
add
and
fadd
popl
stos
clc
fistps
shlb
xor
lods
lcall
or
jo
into
cwtl
pop
call
arpl
cmp
inc
push
leave
pop
iret
mov
repnz
roll
mov
sub
inc
bound
xchg
cmpsb
inc
rorl
lahf
roll
arpl
jmp
cmp
loop
in
or
jecxz
rolb
outsb
ror
sbb
mov
std
pop
mov
xor
movsb
cmp
jns
cmp
mov
add
ds
les
add
fsub
fisubs
in
and
outsl
ljmp
out
popa
add
inc
cmp
add
or
lock
ret
popf
mov
push
add
dec
cltd
cmp
cltd
stos
sub
and
pop
movsl
inc
jmp
adc
and
jmp
mov
in
dec
repz
arpl
dec
das
add
inc
adc
and
jecxz
sub
mov
ret
sbb
fsubl
adc
mov
fisubrs
sbb
add
fndisi(8087
add
fldl
pop
jns
sbb
adc
sahf
jge
push
loop
add
pushf
jge
addl
int
or
or
addb
cmp
dec
and
push
jmp
jne
add
andb
loope
mov
mov
adc
sub
mov
test
push
jl
jecxz
mov
mov
jb
jne
call
seto
and
add
lods
cli
lock
cmp
icebp
inc
and
mov
mov
add
arpl
xorl
mov
fsubs
and
sub
les
shrl
mov
inc
or
arpl
pusha
adc
push
mov
mov
fsubrp
push
jbe
jp
xlat
sub
inc
and
jecxz
repz
push
lds
or
lock
movsb
das
leave
adc
inc
add
mov
adc
popa
inc
inc
dec
cmpsl
mov
xlat
pop
pop
mov
lea
xchg
fdivl
adc
inc
ret
or
push
mov
cli
or
sqrtps
in
sbb
loopne
in
adc
or
push
sbb
rolb
mov
fcmovnu
xor
mov
inc
push
outsb
mov
adc
dec
movsl
push
xor
mov
dec
arpl
loop
adc
dec
inc
loop
pop
push
inc
dec
add
and
div
aas
dec
pop
pop
push
dec
cli
aas
addr16
sub
hlt
sbb
jp
mov
mov
subl
repz
push
ljmp
aad
and
iret
lret
jno
test
sub
imul
ss
add
cmp
and
std
mov
cli
xchg
sarl
shll
test
jbe
add
xchg
add
popa
imul
icebp
call
icebp
add
pop
jmp
test
mov
out
sub
dec
inc
sub
push
mov
add
insl
adc
xor
imulb
ja
adc
lret
add
loopne
adc
idivb
subl
mov
ret
or
movsl
loop
cmp
add
and
adc
or
inc
repnz
jg
out
jmp
push
jne
or
mov
lahf
inc
aaa
add
push
test
inc
out
dec
mov
and
shll
arpl
and
cmpsb
add
stc
and
xor
inc
mov
aas
je
popa
add
xor
into
sbb
packsswb
and
fsubl
mov
xchg
mov
push
pushf
mov
mov
xchg
fwait
add
dec
out
sbb
inc
xorl
xor
xor
sbb
int
out
add
mov
in
and
arpl
and
unpcklps
fmull
and
repz
xor
arpl
xor
and
scas
cmp
pop
push
push
lea
sbb
rcll
mov
xchg
add
add
mov
push
lock
mov
add
popa
jg
pop
mov
pop
or
jno
cmp
xchg
es
icebp
repnz
mov
data16
inc
xchg
xchg
push
or
cmp
sub
test
iret
arpl
lock
lahf
das
aaa
fs
inc
inc
movsl
mov
stc
inc
and
repnz
push
add
out
mov
push
ret
call
or
adc
adc
mov
inc
sub
arpl
sub
imul
and
lcall
cmp
mov
rorb
and
jo
repz
push
and
jp
pop
daa
cs
xor
push
dec
fimull
fidivs
arpl
lock
push
insb
pop
rorl
xchg
cmp
dec
rcr
mov
imul
pop
popa
or
push
mov
gs
mov
stos
lock
shl
add
xlat
adc
test
mov
or
mulb
xchg
xor
loopne
add
in
dec
adc
nop
rcll
cwtl
shlb
mov
push
push
lods
insb
aas
or
mov
es
dec
insb
inc
fs
das
lock
xor
test
shll
pop
test
orl
and
clc
ljmp
lods
sub
pop
inc
mull
aad
mov
loopne
in
and
sub
cmp
fnstsw
cmpl
or
dec
das
xchg
jne
xor
or
lods
stos
repz
xor
leave
in
mov
call
fdivl
imul
test
ret
sarl
test
inc
inc
add
push
loopne
mov
orl
mov
test
mov
mov
adcb
ret
mov
add
mov
xchg
out
pop
pop
inc
adc
mov
loope
mov
ss
mov
pushf
les
out
test
mov
cmp
mov
inc
jecxz
xor
xchg
repnz
or
ret
into
popa
push
or
and
xchg
sarl
into
xor
imul
and
gs
mov
xor
jbe
lock
and
xor
cwtl
inc
jge
mov
xchg
add
xchg
adc
mov
adc
mov
push
push
inc
sub
shlb
xchg
hlt
stos
repz
repnz
nop
adc
or
scas
das
rcrb
fisttpll
int3
xchg
out
movsb
inc
test
shrb
movsl
or
js
adc
jae
or
inc
xor
adc
mov
rcl
loope
add
xor
pop
stos
xchg
mov
sbb
enter
pusha
and
xchg
xor
cld
sub
jg
insl
lock
shlb
fadd
in
das
push
je
inc
in
and
mov
aam
lret
sti
pop
test
push
mov
movb
xchg
and
es
mov
cmp
nop
push
or
pusha
out
leave
rorb
and
xor
inc
adc
sub
outsl
dec
dec
repnz
cmpsb
int
and
jbe
mov
andb
aad
les
adc
popa
dec
out
in
and
dec
add
mov
adc
inc
loop
push
push
push
inc
stos
loopne
xchg
cmp
dec
leave
insl
out
jae
jbe
js
xor
sbbl
orb
and
es
outsl
lock
hlt
paddd
mov
sbb
xor
xchg
dec
push
das
dec
mov
xchg
cmpsb
pushf
imull
fs
dec
call
hlt
xor
sub
push
mov
dec
rorb
dec
pop
inc
or
push
das
jno
je
xor
ret
js
adc
lahf
test
mov
iret
pop
xlat
repz
adc
mov
pop
sub
pop
int
cmpsl
test
dec
out
push
jmp
sub
xor
in
sbb
adc
hlt
add
fisttpl
jne
mov
movsl
and
dec
repz
mov
outsb
inc
or
jmp
sub
in
cli
xchg
xor
call
into
or
je
mov
dec
test
repnz
test
in
cmp
aam
or
add
mov
lods
inc
dec
fsubrl
adc
test
mov
cld
lret
fisubl
in
jmp
popa
xchg
push
or
mull
in
sub
lods
push
scas
adc
negl
pop
rclb
stos
inc
inc
dec
xchg
sub
aam
or
das
movsl
sub
dec
dec
xchg
mov
shl
nop
shl
cmp
push
sub
loopne
xor
cmp
lds
xchg
xchg
pop
xchg
es
jns
nop
shl
dec
and
push
scas
adc
xchg
dec
mov
mov
cmpsl
jecxz
push
mov
mov
scas
mov
dec
test
int
and
or
cmp
inc
or
xor
push
push
push
dec
xchg
in
or
or
adc
gs
xor
or
or
hlt
xchg
mov
xor
and
mov
xor
dec
inc
movsb
sub
adc
mov
sti
pop
ret
in
mov
into
xchg
jno
test
adc
cmpsl
jecxz
inc
cmpsl
adc
shrl
mov
xor
mov
movb
movsl
push
pop
loop
xchg
sub
and
mov
and
adc
mov
cld
ds
sub
mov
dec
add
push
inc
aad
inc
or
gs
aam
add
push
ret
push
pop
nop
sbb
jo
out
push
mov
or
xor
sbb
in
cmp
addb
rcr
dec
fs
xor
pushf
fcoml
and
sbb
sbb
add
adc
lea
scas
dec
test
pop
sub
scas
imul
sti
pop
cld
fs
insl
icebp
in
outsl
inc
sbb
jne
xor
addl
add
icebp
push
jno
sbb
or
cmp
mov
mov
mov
pop
xor
adc
mov
repz
popf
das
push
loop
and
in
and
xchg
or
shl
inc
jo
aas
add
fistps
arpl
sbb
and
sbb
mov
and
pop
push
test
fistl
push
shlb
nop
push
xchg
lds
popa
adc
or
push
imull
ficomps
push
xchg
imul
pop
cmpsl
sub
xchg
add
sbb
in
add
bound
arpl
mov
pop
rorb
loopne
cmp
gs
jle
mov
jmp
cld
xor
aas
shll
mov
fimull
cs
sbb
repnz
and
inc
ret
lea
xchg
cmpsb
aas
lret
adc
or
ret
test
cmpb
xor
arpl
mov
cltd
scas
arpl
arpl
adc
and
push
in
add
push
test
ds
adc
push
lock
dec
clc
dec
jecxz
mov
cmp
jle
test
or
adc
cmpsb
fdiv
xorl
icebp
popa
and
popa
fisubrs
pop
pushl
cmpsl
sbbl
pop
push
int
loope
stos
and
fnstsw
and
push
dec
adc
test
and
loope
xor
mov
add
int3
scas
and
xchg
xor
scas
push
pop
mov
push
ffree
cmpsb
sub
adc
lea
mov
daa
cmp
mov
pusha
mov
xorl
add
je
adc
xchg
dec
push
arpl
jge
mov
mov
inc
xlat
sbb
mov
xchg
sbb
inc
xchg
das
mov
sub
movsl
cmpsl
mov
out
sbb
imul
cmp
cmp
loop
sbb
enter
inc
loope
fsts
pop
jno
cmp
rorl
add
dec
dec
adc
test
push
jecxz
dec
enter
scas
jle
out
aaa
adc
icebp
in
sub
out
in
aaa
shll
jbe
leave
lret
mov
sub
xor
inc
loopne
mov
sub
add
pop
or
repnz
pop
jmp
sub
or
xchg
ret
movsl
push
call
stos
push
push
ret
lods
fstpt
and
or
xor
push
add
pop
and
and
xchg
lcall
sub
shl
insb
xchg
ret
mov
rorl
clc
jns
dec
repz
mov
sub
sub
mov
and
sub
repnz
bt
addr16
inc
ret
insb
rcll
dec
fnstenv
fistpl
jecxz
xorl
ds
lcall
inc
mov
push
xor
sub
cwtl
repz
in
mov
es
addr16
dec
js
iret
cmpsb
fs
cmp
push
xor
sbb
cmp
adc
int
aam
mov
outsl
std
ljmp
mov
sub
push
ds
and
and
popa
iret
jmp
shlb
xlat
or
jmp
aad
xor
out
and
mov
insb
call
flds
push
mov
aaa
ret
pop
out
inc
adc
and
shrl
sti
add
mov
es
lds
leave
and
test
sbb
repz
sbb
rcll
mov
xchg
mov
cs
insb
andb
fwait
xchg
cmp
jb
mov
hlt
xor
ljmp
arpl
pop
jne
push
ds
incb
mov
test
sub
mov
cli
dec
adc
mov
mov
stc
cltd
mov
loopne
push
jmp
addb
mov
mov
inc
push
je
inc
mov
pop
cmp
mov
push
test
and
add
xor
xchg
shrl
in
into
inc
mov
out
fs
inc
xchg
and
xchg
out
loop
xchg
jecxz
mov
inc
aam
or
adc
cmpsb
adc
add
daa
xchg
fwait
test
inc
mov
ljmp
mov
aas
add
dec
pop
mov
ret
add
vpalignr
test
fdiv
pop
pusha
or
fistps
pop
rcll
and
push
sub
shr
ss
movsb
stos
popa
or
jmp
pop
lret
in
xchg
inc
pop
xchg
iret
cs
jo
or
push
in
inc
out
cmp
push
xchg
mov
ljmp
push
inc
xor
inc
int3
cmpsb
mov
nop
add
cwtl
sub
repnz
push
sbb
mov
and
inc
mov
test
mov
adc
pop
shlb
mov
mov
fbld
movsl
dec
mov
adc
jecxz
jbe
bound
sbb
mov
clc
addb
ret
aaa
sub
ds
add
insb
sub
add
stos
add
fistpll
mov
pop
adc
out
jbe
jecxz
or
lret
or
and
adc
ja
call
test
aas
iret
pop
testl
xor
push
and
outsl
jmp
shrl
or
fistl
mull
movsb
idivl
sub
and
mov
sti
out
dec
lock
mov
and
jno
int3
test
push
xchg
inc
dec
adc
xor
jb
jp
jl
bound
loopne
fnstenv
cwtl
hlt
sub
and
fsub
xor
push
sub
cmpsl
pushf
add
testb
mov
mov
popa
sub
hlt
xor
push
inc
mov
mov
inc
sub
push
mov
xchg
inc
xchg
xchg
xchg
cmpl
add
add
cmp
inc
jns
adc
jae
mov
mov
and
xor
cmp
xchg
js
mov
sub
mov
inc
cmovnp
xor
test
mov
mov
imul
sub
mov
or
and
flds
cmovg
je
xchg
loope
jae
pop
fmul
jmp
fstl
xchg
sub
or
xchg
push
add
lock
paddd
mov
outsl
or
or
dec
es
fs
jge
clc
outsb
aam
and
out
in
adc
adc
inc
and
rorl
cmc
shll
out
lret
cmp
lcall
dec
xchg
in
lods
pusha
sub
adc
mov
mov
push
pop
bound
stc
notl
test
ja
push
cmpb
ds
adc
loope
add
mov
leave
xor
push
retw
add
ss
neg
pop
add
sbb
jne
push
repnz
int3
repz
cmp
icebp
and
nop
and
pop
cmp
sbb
fimull
lcall
or
cmpsl
faddl
push
call
sarl
jne
mov
dec
sub
xor
outsb
daa
mov
call
add
jmp
xchg
pop
fdivl
shlb
cmp
lcall
mov
insl
inc
push
mov
xor
or
push
repnz
mov
sbb
mov
lock
test
in
shl
sub
cmpsb
aam
pop
adc
aam
fisttpll
xor
mov
imul
test
and
mov
mov
mov
repnz
test
jnp
push
adc
xchg
inc
sub
xchg
add
fstpl
mov
idivb
in
aas
ret
test
and
and
xchg
jp
dec
cmpb
sbb
jne
imul
xchg
inc
dec
push
rcrb
orl
in
dec
sub
or
shll
adc
jecxz
int3
and
add
push
mov
es
ss
scas
xor
aas
inc
shll
nop
divb
pusha
fsubrl
mov
pop
xchg
and
or
fdivrl
or
sti
in
jnp
in
cltd
popf
shll
sbb
push
je
mov
sub
pop
add
fdivrs
push
outsl
ror
sub
scas
out
in
xchg
dec
jae
bound
push
add
loopne
xor
andb
xchg
jge
add
lods
sub
pop
repz
movsb
lock
icebp
jp
cs
pop
add
out
jge
rol
jb
adc
fldl
data16
ds
sub
mov
adc
xchg
fisubs
xchg
test
aam
sub
xor
rcll
sbb
push
punpckhwd
aad
nop
out
pop
enter
filds
popf
repz
in
mov
lret
add
xchg
jnp
or
lods
icebp
xor
repz
sub
lods
iret
push
inc
mov
rorl
in
pop
orb
js
xchg
addr16
sarl
mov
inc
sub
cmpsb
pop
cmp
jbe
test
jb
fs
sbb
pop
jnp
dec
sarb
ja
push
push
imul
dec
cmp
mov
xchg
jle
pop
lcall
ret
test
addl
mov
xlat
xor
mov
pop
inc
bound
inc
or
daa
jnp
add
xlat
test
lods
js
mov
lods
shl
cmpsl
ja
lods
loope
aas
add
jg
adc
and
and
push
rcll
cli
adc
mov
lahf
pop
pop
push
loopne
fidivrl
cwtl
test
jb
cmpl
xchg
mov
icebp
xor
je
jge
loop
mov
xchg
and
xchg
xchg
adc
stos
sahf
xchg
dec
adc
mov
add
mov
clc
mov
mov
or
mov
mov
cltd
add
jbe
inc
scas
repz
imul
push
add
dec
out
and
push
shlb
mov
pop
sbb
in
xchg
xchg
push
lods
mov
stos
cs
add
addb
repnz
int
mov
add
mov
loop
mov
jb
aaa
and
rcll
mov
dec
mov
arpl
push
into
add
xor
push
mov
push
sub
sub
mov
jno
loope
out
lock
dec
lcall
sbb
and
negl
xchg
pop
lods
adc
shlb
xchg
cld
fstps
in
mov
bound
mov
cmp
lods
sub
adc
cmc
loope
or
arpl
test
xchg
fdivr
shrb
cmp
jmp
leave
pop
ret
adc
xor
xchg
jno
inc
and
dec
data16
xchg
mov
mov
mov
mov
xchg
scas
sub
sbb
or
aaa
sbb
outsl
inc
insb
enter
inc
mov
sahf
rcll
je
or
inc
cmpsb
cmp
lret
sbb
jno
mov
sbb
push
das
adc
xor
ret
adc
shrl
pusha
inc
js
pop
imul
push
shrb
mov
inc
test
jl
adc
jge
mov
into
sbb
mov
jle
push
rorl
add
xchg
sub
ficoml
push
xchg
loope
in
inc
mov
aas
adc
xchg
icebp
addr16
inc
sbb
aas
push
lds
and
inc
cli
scas
mov
loopne
mov
mov
out
and
or
dec
jo
xchg
xorl
cmp
dec
adc
push
scas
xlat
mov
dec
es
mov
lock
mov
push
or
into
sar
popf
sarl
push
loopne
je
shl
addr16
pop
notl
xor
inc
push
in
pop
xchg
mov
arpl
xchg
rorb
movsb
imul
outsb
cmp
out
aam
sub
lret
pop
iret
dec
push
mov
mov
add
mov
pop
sarl
mov
mov
cld
inc
adc
adc
sbb
mov
shll
in
addb
push
add
mov
sbb
cmpsb
inc
rol
ss
loop
push
rorb
imul
fcoms
jo
xor
xor
and
ret
push
mov
movsl
aam
xor
shl
test
mov
mov
pop
fiaddl
gs
jae
popa
es
dec
sub
push
mov
loopne
mov
inc
out
fsubrl
les
stos
xor
adc
aaa
cmp
sub
clc
movsb
inc
pop
fists
xchg
jg
mov
pop
mov
cli
mov
bound
mov
rcl
setae
loope
mov
incb
sbb
int3
xchg
call
scas
jbe
cmpsb
fcompl
xchg
push
push
push
push
cmc
inc
pop
and
xchg
lret
jmp
inc
dec
imul
push
cld
data16
rolb
shlb
adcl
ja
and
test
adc
jge
mov
daa
std
or
leave
jnp
dec
pusha
push
pushf
sub
cmp
dec
cmp
andb
ret
mov
loope
enter
imul
int
jle
sbb
rcrb
incl
mov
add
and
out
and
js
in
das
ficompl
in
xor
cmp
xorb
mov
mov
addb
xor
mov
push
sub
lret
aaa
xchg
jle
add
fdiv
jb
dec
icebp
dec
and
repz
mov
adc
inc
mov
repz
push
mov
std
pop
pop
mov
add
rcrl
leave
test
ds
xor
cmp
inc
or
and
repnz
adcl
movnti
mov
repz
sub
and
dec
jnp
jecxz
dec
xorl
xchg
ja
add
and
adc
inc
lea
test
mov
mov
and
enter
inc
andl
mov
daa
pop
pop
dec
push
popf
adc
rcr
add
mov
pop
xor
test
test
add
adc
dec
cmpsw
mov
mulb
cmpsb
pop
aad
xchg
testl
mov
xchg
loop
jle
mov
ret
dec
push
ror
scas
sbb
js
xchg
bound
cltd
aam
fucom
adc
std
enter
mov
hlt
or
dec
rolb
rcrl
xor
andb
aad
push
sub
ret
and
jp
mov
and
cmpl
mov
and
add
lods
filds
or
xor
push
in
xchg
dec
dec
and
popa
xor
pop
in
add
or
adc
adc
out
hlt
into
rorb
xlat
and
ficompl
and
jo
mov
stc
cmpsb
into
push
mov
push
in
add
add
popa
push
movzbl
movsb
shl
int
jo
sbb
or
add
push
stos
jecxz
add
dec
test
add
xchg
out
jge
pop
dec
pop
test
and
xor
fwait
xchg
cmp
mov
mov
xor
enter
cmp
push
test
sub
repz
xchg
jns
cmp
outsl
xor
sar
mov
icebp
aad
shll
sub
gs
clc
jb
push
cmp
int3
add
inc
bound
mov
call
sarl
sbb
xchg
jbe
cs
lock
fidivl
inc
xor
pusha
mov
movsb
loop
xchg
push
cmpsb
and
jmp
fcom
adc
lahf
lods
push
scas
mov
insl
adc
mov
scas
and
ljmp
icebp
fbstp
jmp
and
cwtl
dec
add
ljmp
out
dec
das
xor
sbb
mov
push
xchg
adcb
mov
xlat
mov
loope
pop
jmp
mov
lahf
mov
rcll
test
add
mov
test
mov
add
aas
pop
nop
mov
into
out
pop
std
xor
adc
sub
iret
mov
push
dec
mov
mov
dec
cmp
clc
cmp
lds
das
push
add
or
out
xor
push
addr16
popa
inc
add
cli
or
movsl
jle
push
jmp
lds
xchg
dec
mov
jge
sub
dec
push
nop
dec
adc
and
mov
jg
add
mov
xchg
mov
jo
ja
leave
std
pop
dec
adc
jae
mov
and
pop
stos
jno
lods
lods
test
mov
xor
jno
sbb
idiv
inc
xor
lcall
std
jl
lods
mov
xor
in
rclb
xor
pop
sbb
arpl
xchg
ret
popa
outsl
cwtl
clc
nop
cmp
popa
lret
and
sub
adc
rorl
or
jmp
mov
shl
cs
mov
adc
sub
jns
mov
ret
xor
cli
add
mov
sbb
fwait
inc
dec
mov
data16
or
out
cmpsl
jle
mov
mov
push
call
popf
sbb
test
loope
ror
jmp
nop
sbb
lcall
jmp
xchg
adc
inc
repnz
mov
inc
or
rcll
xchg
inc
inc
jecxz
mov
jecxz
adc
inc
jmp
loop
fdivrs
cmpsb
je
inc
sahf
shlb
sub
mov
xchg
cmpsb
mov
in
dec
subb
lock
loope
cmp
icebp
je
inc
pusha
icebp
lods
sbb
cmp
sub
orb
mov
addl
and
test
test
lock
adc
roll
push
cltd
and
mov
lcall
and
sub
xor
int3
pushw
sub
inc
adc
scas
mov
or
mov
add
enter
mov
lahf
sbb
xchg
and
je
jl
loop
and
cmp
xor
imul
sub
or
or
and
test
leave
xchg
mov
pop
mov
push
sbb
rcrl
aad
outsl
lock
mov
mov
and
je
mov
imul
or
imul
insl
inc
and
xchg
pop
mov
dec
pop
cwtl
daa
inc
pop
sbb
cmp
mov
loopne
xchg
outsl
mov
cli
cmp
mov
repnz
in
xchg
xor
inc
jb
icebp
repz
aaa
scas
mov
jb
mov
mov
mov
mov
pushl
and
pushf
adc
xchg
dec
xchg
mov
push
sar
sbb
cmpb
jno
dec
mov
pop
inc
rcl
test
out
lea
sbb
pop
andb
inc
repz
sbb
fsubs
fsubs
push
inc
add
jae
movsb
sbb
sbb
dec
subb
xchg
sti
repz
dec
fsts
rol
xchg
test
test
movsb
cmp
and
insb
js
ret
inc
loopne
add
cmpl
subb
sub
addl
and
loopne
outsl
test
adc
push
xchg
and
add
mov
dec
mov
add
xchg
lods
add
rorb
icebp
mov
shrl
loop
cli
fisttpl
pop
mov
syscall
mov
sub
nop
movsl
mov
mov
pop
out
insb
inc
mov
pop
xor
cli
inc
mov
notl
leave
adc
push
ja
jnp
jl
dec
cmp
and
imul
gs
cmp
insl
mov
std
fbld
or
in
add
xchg
sub
ret
loope
fisubrl
sub
sbb
mov
mov
sahf
or
mov
shl
pop
mov
int3
pop
loop
or
and
cmpsb
aam
cwtl
and
sub
mov
push
sbb
sbb
sub
stos
inc
mov
lcall
xchg
adc
xchg
or
outsb
movsl
dec
shll
int3
nop
mov
sbb
xchg
xchg
mov
test
cmp
mov
sub
jmp
outsb
push
imul
dec
test
push
dec
and
mov
dec
mov
xor
pop
and
mov
inc
lret
xchg
adc
nop
orb
repnz
dec
sbb
int
xor
int
aad
repnz
jp
fsts
and
inc
or
movsb
adc
pop
pop
xchg
xor
jae
ss
or
repz
lods
lahf
cmpl
mov
xchg
lods
pop
cmp
testb
loope
fsub
mov
dec
in
jge
pushf
jne
sbb
sub
aam
inc
or
nop
sub
rorl
xorl
sbb
cmp
sbb
inc
push
sub
mov
lock
pop
pusha
and
lahf
mov
inc
movsl
aaa
es
mov
xor
add
adc
subb
scas
cmpsb
sub
xor
and
jno
lret
sub
pop
loope
in
or
xor
pop
inc
loope
jbe
sub
and
or
repz
jns
xchg
lea
loope
les
cmpsl
or
mov
mov
fwait
mov
lret
outsl
adc
push
imul
adcb
xlat
arpl
shl
je
emms
mov
inc
sub
mov
sbb
cli
rep
shlb
inc
xor
pop
shll
cwtl
cltd
cwtl
ret
and
pop
jne
pusha
push
dec
clc
repnz
jecxz
mov
mov
sub
adcl
nop
mov
inc
scas
mov
addr16
mov
add
dec
jne
sub
es
and
lock
push
and
xchg
sbb
imul
aas
icebp
imul
imull
out
leave
shll
pop
inc
ljmp
jmp
and
arpl
dec
in
icebp
ds
pop
mov
add
add
inc
mov
cli
jl
cli
adc
cli
add
inc
mov
dec
jge
cmp
inc
cmc
adc
data16
test
sbb
lret
je
fisubs
and
js
in
popf
add
cs
stc
adc
adc
xchg
or
sbb
shrl
mov
xlat
push
xor
mov
loop
bound
mov
or
mov
lret
leave
dec
adc
and
ret
pop
shrb
dec
pop
add
and
dec
loopne
movsl
movsb
jnp
add
movsb
aam
push
clc
jle,pn
push
iret
fnsave
hlt
cmp
cmp
jecxz
pop
psubsb
inc
xor
push
sti
sbbl
jno
icebp
aad
xor
xor
test
out
mov
std
xor
pushf
xor
cmc
int3
cmp
xchg
push
lret
sub
and
mov
scas
addr16
xor
or
push
daa
xlat
stos
hlt
je
out
div
dec
push
mov
xchg
clc
pop
rcrb
xor
add
mov
push
add
incb
jmp
jne
cld
jecxz
lock
cmp
jae
jg
hlt
mov
cld
and
dec
inc
sarl
cmc
clc
push
and
sti
mov
gs
push
mov
popa
push
add
add
mov
lret
push
arpl
inc
inc
sarl
push
arpl
pop
pop
xlat
xchg
cmp
jl
in
inc
dec
cmp
sub
rolb
cmp
add
arpl
mov
loope
and
jno
and
shr
and
mov
sub
xchg
mov
cmp
pop
lock
xchg
nop
and
mov
ret
ljmp
ret
lcall
xchg
fistps
sub
adc
lods
jg
or
repz
popa
jbe
mov
imul
loope
jnp
and
and
lret
cmp
out
and
xchg
dec
mov
xchg
push
pop
xor
pop
daa
movsb
and
aas
cmp
adc
mov
loope
mov
notb
filds
xor
xor
dec
cmp
mov
aaa
adc
push
cmp
jecxz
pop
xchg
fisubl
adc
adc
aaa
test
pop
mov
scas
add
and
popf
mov
andl
xor
sub
mov
loope
jle
xchg
dec
jp
arpl
push
cld
jle
push
add
lock
push
popf
xor
xorb
cmp
repz
inc
mov
dec
roll
inc
lds
dec
scas
and
stos
outsl
adcl
incl
int
in
jbe
cmp
scas
je
and
pop
stos
loop
inc
push
ret
pop
mov
insb
imul
and
loopne
inc
or
and
stos
orb
mov
jl
subb
mov
inc
or
jecxz
or
je
push
cmc
adc
mov
sub
xorb
ret
rorb
out
aaa
inc
jae
fbld
inc
repz
call
sarb
sbb
xchg
rolb
jae,pn
sbb
imul
pop
push
sub
pop
and
movsl
aaa
outsb
xor
shrl
ret
fisubs
xor
mov
push
cmp
popa
enter
add
mov
adc
sbb
inc
mov
test
ret
add
loope
adc
in
pop
mov
ret
mov
cld
sub
jmp
jge
nop
push
adc
into
xchg
and
xor
push
push
or
or
mov
loope
push
inc
xor
push
or
mov
repnz
sub
fstpt
and
inc
pop
jbe
cs
mov
in
out
insb
xor
mov
loop
dec
in
andb
cmc
icebp
lock
xchg
adc
in
inc
idivb
loop
xor
test
je
popl
jl
sub
es
and
and
cmp
stc
les
lods
dec
sbb
and
imul
movsb
adcl
pop
push
loopne
ds
insb
dec
inc
ffreep
push
addb
out
add
clc
call
shll
in
mov
jae
leave
mov
xor
fldl
push
jae
daa
into
mov
push
pop
mov
arpl
cmp
pop
dec
enter
mov
popa
or
mov
outsb
in
nop
push
notl
loop
xchg
adc
mov
xor
or
add
xor
push
dec
jge
adc
sbb
aaa
cmc
lds
push
ja
std
inc
loopne
lret
rorb
nop
rolb
push
inc
sbb
sbb
les
cld
rcr
inc
jg
push
mov
js
dec
add
jmp
adc
movsb
inc
les
inc
cmp
xchg
jno
pop
ja
and
sub
dec
scas
mov
in
stos
out
mov
push
xchg
ss
in
jbe
jb
out
sbb
and
shll
mov
aaa
gs
xchg
mov
std
pusha
push
pop
jno
pop
jg
aas
mov
fs
dec
and
jle
and
movsb
mov
ds
sbb
lods
roll
inc
and
pop
mov
sub
push
pop
addr16
and
pusha
mov
push
cld
bound
mov
pop
or
enter
sbb
add
out
sub
sub
pop
out
pushf
inc
mov
js
and
and
ret
arpl
push
pop
and
out
fistl
jle
mov
out
and
inc
or
adc
mov
rclb
lods
xchg
pop
inc
push
icebp
jno
ss
cli
and
cmp
xchg
mov
clc
in
into
mov
mov
pushf
ds
mov
mov
test
and
gs
lds
out
dec
out
bound
cs
andl
add
das
stos
lock
aad
adc
sub
add
jmp
dec
jmp
inc
mov
xchg
notl
jno
ja
jo
mov
mov
stos
mov
stos
lret
testl
mov
mov
adc
mov
add
sub
out
mov
mov
mov
jg
daa
lcall
push
or
int
xor
mov
or
cmp
dec
jmp
pop
shll
xchg
fsts
rcrb
xchg
fdivrs
arpl
icebp
js
dec
ljmp
sub
lea
movsb
sub
mov
jge
mov
jmp
loopne
xchg
adc
aad
and
and
insb
cmp
cli
inc
mov
mov
addr16
and
adc
cltd
enter
scas
and
and
sub
subl
fisttps
cs
sbb
mov
add
jmp
arpl
sub
inc
xor
xor
sub
pusha
inc
arpl
jns
pop
inc
xor
pop
mov
xor
push
sbbb
push
sbb
cmp
inc
test
mov
xchg
push
or
jl
addr16
loopne
rolb
jbe
push
mov
sub
xor
in
ret
jl
decb
and
shlb
cmpsl
ret
imul
mov
movaps
je
lods
xchg
test
subl
nop
je
call
and
test
jg
es
sti
addl
adc
mov
push
scas
push
push
sub
insl
out
add
push
and
mov
push
inc
inc
mov
adc
in
xchg
jb
shll
pop
add
hlt
jno
bound
ret
sarl
xor
lahf
pextrw
test
pop
adc
lcall
xchg
sub
jne
loopne
or
cli
push
in
iret
cmp
lcall
inc
jp
je
mov
jbe
lcall
outsb
leave
adc
imul
or
inc
mov
loopne
rorb
bound
lds
pop
clc
test
leave
push
jns
cmp
jmp
add
dec
xor
add
std
lds
mov
dec
xorb
repz
dec
lods
out
cmc
ret
adc
mov
xchg
stos
adc
mov
mov
es
pop
out
out
test
popa
dec
push
xor
leave
es
popa
add
xchg
mov
shrb
lahf
xchg
mov
pusha
add
mov
or
dec
xor
mov
fildll
xor
mov
pop
addb
jae
stc
push
addr16
dec
lahf
and
xchg
mov
repz
loope
push
sbb
inc
test
cli
mov
faddl
push
mov
xor
mov
xor
repnz
mov
scas
push
inc
xor
lock
ja
sbb
aam
xchg
dec
ret
mov
shlb
shll
xor
cmp
pop
test
clc
bound
clc
rcl
xchg
inc
pop
mov
lret
jmp
or
xchg
jle
lods
xchg
stos
ret
jecxz
mov
mov
icebp
cmpsl
add
jle
cmp
rorl
sbb
fdivl
adcl
mov
out
or
in
push
pop
adc
mov
xor
sub
adc
push
lea
aam
sti
jmp
fdivp
int
mov
inc
test
ret
mov
fs
add
stos
int3
cltd
arpl
stc
xchg
dec
inc
rcl
add
pop
xor
inc
inc
jge
subl
out
sbb
fidivs
add
je
lock
mov
ret
xchg
repz
into
js
mov
jbe
sarb
adc
push
scas
jns
daa
mov
rorb
inc
mov
and
cld
mov
or
iret
mov
fidivrs
lahf
orl
mov
das
int
sahf
dec
inc
sbb
xor
push
or
or
mov
aas
fildl
and
daa
xor
outsb
hlt
sbb
stc
jp
clc
adcl
mov
cmp
and
xchg
mov
fsubrl
repz
lret
mov
dec
inc
jbe
lods
repz
adc
test
data16
notl
inc
dec
jns
fnsave
popf
popa
incb
or
xchg
fmul
cmp
push
fstl
or
pusha
and
sbb
mov
adc
sub
mov
ja
and
adc
add
test
mov
cmp
repnz
dec
lock
xor
inc
push
push
push
addl
jle
cmpsl
lods
addb
sub
sbb
sub
in
shlb
pop
aas
push
daa
mov
and
jp
inc
inc
lods
es
les
inc
pop
sarb
lock
or
push
adc
push
scas
or
jb
push
lret
mov
inc
push
xchg
movsb
mov
in
cmp
shl
pop
adc
mov
mov
push
cli
jo
movsl
lods
push
sbb
test
mov
mov
mov
push
jge
push
sbb
or
je
sbb
gs
push
mov
add
mov
repz
add
ret
arpl
jle
dec
insl
jecxz
clc
jg
je
cmp
stos
pop
push
and
and
sbb
adc
cmpsl
pop
cltd
cmc
or
add
adc
divl
and
fcmovnb
fdivrs
in
sub
aad
xchg
inc
pop
push
call
fs
aas
icebp
lahf
cmp
sub
cs
pop
jbe
inc
pusha
xor
flds
and
in
lret
dec
mov
mulb
repnz
add
ret
push
push
and
dec
dec
loopne
fstl
test
in
pop
cmp
aas
xchg
imul
jno
pusha
mov
jbe
cmp
loop
test
jo
jns
sbb
dec
inc
pop
and
adc
add
sub
jecxz
mov
lret
push
aaa
xor
stos
jmp
clc
mov
cmpsb
ss
mov
arpl
push
lock
sub
mov
outsl
in
fadd
ret
test
cmpsl
call
pop
enter
shl
fsts
jecxz
rorl
jp
in
xchg
nop
in
jnp
mov
cmpsl
lock
push
outsb
test
shrl
pusha
outsb
push
fwait
inc
sbb
lret
pop
jp
mov
imul
pushf
xchg
daa
repz
in
push
cmp
adc
push
dec
fsqrt
or
mov
lahf
ja
xchg
icebp
cmpsl
mov
or
dec
fists
mov
push
je
ljmp
pop
mov
mov
mov
sbb
dec
jge
xor
stos
or
xchg
mov
test
dec
scas
or
adc
mov
popf
js
movsl
mov
pop
jae
and
test
mov
sbb
adc
pop
push
sbb
leave
je
xchg
adc
adc
mov
lds
add
and
data16
add
and
inc
test
dec
pop
and
inc
adc
loopne
jge
or
mov
mov
in
arpl
adcb
andl
ljmp
inc
cmpsb
sbb
int3
adc
pop
and
fidivrl
adc
mov
int3
pop
fucomip
jno
cmpsl
dec
arpl
pushf
repz
xchg
and
xchg
inc
pusha
xchg
nop
ret
repz
adc
or
movsl
cmpsb
fptan
mov
rcr
hlt
jbe
add
outsl
js
pushf
mov
xchg
sub
cmpsb
and
and
flds
popf
daa
test
pop
ret
cmp
push
mov
scas
insl
jmp
dec
fs
repnz
inc
push
addl
sub
rorb
icebp
mov
sbb
xor
out
mov
ret
dec
dec
and
jmp
add
jbe
iret
and
imul
hlt
jmp
les
or
enter
mov
pop
jns
push
jecxz
xor
or
and
mov
in
jo
jbe
xorb
mov
push
mov
fldl
add
outsb
loop
dec
pop
push
mov
int3
lods
and
insb
shll
push
ss
inc
popa
cmp
sbb
stos
and
mov
jg
mov
inc
rol
inc
cmpsl
les
xor
dec
adc
xor
mov
jmp
cmc
fwait
inc
ja
out
jnp
hlt
jp
stos
js
xorb
mov
jo
mov
dec
mov
sbb
aad
mov
lret
xor
mov
xchg
jmp
bound
ffree
insb
dec
inc
mov
sahf
cmp
popa
jle
popa
clc
repz
dec
adc
xor
dec
adc
fsubrs
das
repz
xchg
pop
cltd
dec
lea
test
test
pop
sub
or
orl
sub
sub
jb
bound
jp
negb
xor
mov
out
arpl
xor
adc
shrl
dec
sub
add
mov
sbb
lcall
repnz
mov
jne
daa
jg
out
fsts
icebp
or
fiaddl
jo
ljmp
loop
pop
mov
push
xor
dec
addb
push
cmp
or
nop
mov
or
ds
out
movsl
scas
jl
mov
jmp
mov
dec
pusha
xor
repnz
loope
pop
filds
stc
cltd
popa
adc
or
lret
sub
cwtl
xorl
sbb
cld
inc
cwtl
jns
pop
sub
subb
push
sub
cmpsb
sub
jb
loop
fists
inc
imul
add
inc
outsb
arpl
es
ljmp
adc
rclb
rcl
jns
xchg
push
cs
test
out
xchg
pop
sti
inc
movsl
mov
pop
xor
repnz
or
jl
xlat
inc
add
movb
faddl
je
adc
mov
xchg
adc
mov
and
addr16
nop
inc
add
insl
add
sbb
addr16
je
inc
xor
adc
lds
sarl
inc
rcr
or
icebp
sahf
mov
cmpsb
inc
das
call
clc
call
push
lea
sub
or
xchg
adc
sbb
repnz
xor
jmpw
add
dec
adcb
jnp
and
mov
xor
insl
sbb
jg
testb
sub
dec
dec
push
mov
movsl
jbe
and
ret
push
sbb
adc
aas
fs
xor
repnz
daa
cmp
int
pop
gs
fidivs
add
dec
push
xor
add
mov
repnz
aaa
in
subb
pusha
sbb
jns
jbe
popa
fistl
xchg
lcall
ret
and
xchg
pop
xchg
inc
into
sub
mul
int
arpl
dec
out
js
inc
xchg
add
jg
test
cld
cmpsl
dec
fildl
pop
jb
hlt
mov
loopne
and
adc
jns
bound
roll
xchg
mov
push
sbb
adc
xchg
inc
mov
popa
adc
sarb
mov
jae
dec
inc
movl
sbb
loopne
mov
rep
jae
inc
inc
mov
int3
mov
sbb
dec
ret
pusha
das
aad
icebp
sub
pushf
sbb
pop
jo
mov
insb
jmp
test
test
leave
fwait
jmp
jge
test
and
data16
mov
jne
mov
je
fnstenv
dec
ss
loopne
nop
fwait
push
add
add
pop
dec
mov
inc
adc
pop
ret
mov
inc
add
push
mov
dec
pop
push
and
pop
and
dec
xor
mov
scas
aad
cmp
or
popf
loop
out
push
lcall
shll
push
xchg
pusha
pop
sub
rolb
subb
scas
mov
fadd
cmpl
fs
and
shll
and
gs
mov
mov
mov
shl
dec
mov
sar
pop
jb
scas
std
js
test
jb
mov
adcl
aad
ret
imul
pop
pop
cmpsb
xchg
and
orb
add
and
xlat
adc
push
ficoms
imul
dec
jnp
shlb
inc
push
test
sbb
dec
pop
insb
repz
test
jge
jmp
scas
pusha
pop
jo
mov
pop
lahf
cmpsl
push
into
or
aam
cmpl
cwtl
lcall
or
mov
stc
inc
imul
or
push
sub
bound
add
add
out
mulb
fmull
frstor
and
fucomip
xchg
xchg
or
sbb
addr16
mov
cmp
ss
cmovnp
xor
mov
jae
enter
lcall
in
jmp
add
and
push
rclb
shrb
add
addr16
pop
cmp
and
sbb
jg
sub
ljmp
xchg
jno
push
jbe
test
loop
and
or
cmp
loop
xor
test
cwtl
mov
daa
cld
pop
adc
loope
cmpsb
adc
pushf
stos
nop
xchg
shlb
std
cmp
lock
test
mov
xlat
je
pop
test
fisttps
jo
cmp
push
push
pop
popa
xchg
inc
pusha
test
push
add
xlat
and
pushf
shl
dec
xchg
push
rcl
mov
xchg
sbb
in
mov
cmp
cs
push
dec
outsl
xchg
aaa
add
fsubs
sub
fwait
push
dec
ljmp
inc
outsl
xor
inc
push
mov
pop
push
lock
test
or
in
jne
idiv
stc
repz
xchg
nop
leave
rorb
jmp
xor
pusha
jmp
pop
and
testl
mov
add
lods
fsubr
or
addr16
xchg
pusha
xchg
inc
xchg
int
mov
lock
pop
ret
pop
mov
inc
inc
lea
das
adc
jmp
fs
adc
rcll
cmpsb
notb
clc
xchg
and
dec
lods
test
inc
or
js
sub
out
stos
inc
add
inc
cmp
arpl
gs
lods
hlt
add
inc
inc
out
call
sub
xchg
xor
sbb
and
int
ret
adc
xor
hlt
or
sub
add
push
icebp
or
push
and
insb
mov
sub
out
arpl
stos
sbb
jbe
push
dec
ret
dec
inc
fiaddl
rorb
fildl
test
sub
and
add
or
movsl
into
stos
mull
pusha
mov
xchg
inc
cltd
inc
ja
aas
adc
popl
loope
push
xor
mov
sub
mov
push
movsb
bound
ret
adc
cmp
xor
mov
mov
and
xchg
out
iret
insl
mov
sub
outsl
dec
add
and
lds
scas
add
cmpb
jbe
add
adcl
sbb
pop
sub
adc
add
mul
push
jmp
push
and
or
lock
xor
or
rcll
mov
fildl
adc
pop
ljmp
cmpsl
mov
push
jecxz
test
add
or
jae
mov
mov
pop
jbe
cli
xchg
push
ds
out
test
xlat
ret
mov
dec
inc
popa
mov
push
pop
inc
ret
outsl
push
adc
loopne
cmp
leave
cmp
lea
icebp
ss
jp
movsl
mov
or
repnz
outsb
dec
push
in
in
shrb
xchg
and
mov
jbe
cmp
lret
pop
sbb
mov
int3
jb
outsl
mov
fwait
sbb
cli
enter
arpl
xlat
or
and
sbb
xchg
push
lods
add
or
dec
int
sarl
test
adc
in
das
in
gs
mov
dec
outsb
dec
aas
loopne
cmpsl
mov
shrl
loop
and
pop
xor
cs
mov
cmpsb
adc
shlb
xor
inc
loop
out
mov
jmp
loop
and
adc
or
adc
dec
cmp
shll
push
jne
push
add
xor
mov
inc
add
outsb
adc
shrb
ja
xor
push
mov
test
in
loope
or
scas
mov
xchg
movsb
scas
fdiv
gs
dec
jno
jae
xchg
jno
shrb
cmp
pop
test
jmp
xchg
sub
nop
ret
int
xchg
xchg
lds
mov
sub
adc
sti
xor
mov
addr16
push
clc
mov
out
call
sub
sub
ret
cmp
cs
testl
mov
xor
insb
stos
test
std
add
add
sbb
xor
mov
sub
xchg
or
push
in
movd
mov
mov
inc
leave
inc
cmc
mov
test
push
pop
push
fwait
movsl
out
je
dec
inc
fnstsw
add
cmpsl
push
add
in
hlt
jbe
xor
cmpsl
iret
and
sbb
xchg
icebp
addr16
pop
adc
xchg
xor
mov
jge
jmp
mov
jbe
ret
sbb
iret
cmpsb
rolb
xchg
dec
push
push
mov
gs
sub
mov
fninit
push
fldt
push
fwait
mov
mov
in
mov
inc
cltd
sbb
scas
ret
repnz
lock
addr16
mov
jmp
pop
out
dec
pop
sbb
push
icebp
inc
imul
push
insb
rcll
jb
mov
mov
outsl
shl
imul
mov
mov
out
or
jecxz
push
pop
mov
xorb
mov
inc
icebp
xor
jae
inc
ljmp
orl
adcl
mov
jo
mov
adcl
popa
movb
popa
and
popa
test
cli
add
cmpsl
inc
mov
loope
sbb
shll
orl
xchg
mov
or
dec
adcb
or
subl
xchg
outsb
inc
and
andb
inc
and
xchg
adc
adc
mov
xchg
and
mov
repz
push
mov
cmpsl
inc
add
xor
mov
aaa
push
adc
mov
sub
stos
xorl
mov
add
pop
inc
inc
ret
sub
push
popa
xor
in
mov
sub
popa
add
popa
stos
push
mov
adc
push
add
pusha
jo
adcb
or
dec
mov
pusha
mov
icebp
addb
in
xor
movsb
outsl
inc
inc
jno
subb
fs
inc
lods
or
loop
adc
loopne
mov
push
loope
sbb
dec
fisubrl
lahf
inc
nop
aaa
mov
inc
testl
pop
cwtl
test
adcl
adc
inc
xor
and
nop
les
cmp
pop
xlat
js
faddp
adc
sub
insb
stc
addl
sbbl
test
jg
jb
inc
iret
add
pop
add
subb
in
in
loopne
cmp
jecxz
jg
cs
dec
imul
jns
paddq
mov
inc
xor
inc
and
sbb
loopne
jp
aam
lock
insb
mov
je
xchg
xchg
adc
sbb
lea
sub
jnp
pusha
pusha
ret
cltd
xchg
add
push
xor
cs
repnz
in
fwait
bound
les
mov
pop
in
icebp
fstpt
mov
or
test
enter
inc
sbb
jno
iret
or
ret
sub
cmp
and
in
jmp
test
adc
sti
mov
loop
dec
adc
push
inc
xor
sub
fdivp
add
lcall
xor
insb
call
les
sub
leave
mov
xchg
or
cmp
rol
pop
ret
ja
add
dec
aas
daa
int3
and
jmp
jecxz
lea
cltd
imulb
test
and
xor
loop
jae
cwtl
cmc
add
std
sub
iret
jne
cli
stos
inc
fildll
arpl
xlat
rorb
cmc
cmp
jae
sbb
imul
mov
pop
or
cmp
subb
mov
clc
mov
lcall
pop
jae
and
add
out
sub
xor
jmp
in
push
pop
pop
jo
repz
or
icebp
loop
jno
push
outsl
test
ljmp
in
shl
ljmp
inc
sub
or
loopne
sub
cmp
je
clc
pop
mov
mov
jae
jecxz
pop
lahf
and
loope
sbb
leave
test
lock
stos
js
in
mov
das
add
es
lret
std
pop
jmp
sbb
add
and
shr
sub
mov
fdivr
and
pop
and
clc
sti
repz
call
insl
lds
push
adc
test
adc
dec
repnz
decl
ss
mov
jmp
in
sbb
cs
add
fnstcw
and
lea
sub
lahf
imulb
and
cwtl
and
push
and
das
push
mov
rcll
xor
adc
dec
lock
stos
cwtl
xchg
dec
adc
and
inc
mov
rol
xchg
adc
out
adc
sub
jge
push
jecxz
loopne
mov
mov
imul
cmp
sbb
cmp
mov
jbe
sbb
mov
push
and
jae
push
lcall
adcl
daa
ljmp
jg
mov
ja
cmp
xor
xorb
arpl
or
int3
icebp
fiadds
inc
gs
ficompl
in
popf
or
test
jmp
xor
imul
or
insb
pop
pop
into
or
jno
push
test
add
das
lods
loopne
jecxz
pop
xor
inc
sbb
xchg
xor
aas
pop
add
arpl
dec
xchg
adc
andl
in
orl
inc
mov
mov
and
outsb
jns
rolb
adc
add
push
aas
imul
jle
jbe
inc
pop
int3
xor
add
jg
or
add
pop
add
popf
jecxz
xchg
mov
mov
xor
lods
sbb
pusha
adc
push
into
xorl
push
jne
cmc
fiadds
adc
iret
jmp
js
out
cmpsl
mulb
cmp
fcmovb
sub
bound
push
dec
les
mov
fcmovne
push
dec
sbb
adc
jmp
mov
cmp
sub
movl
add
jo
pop
xchg
sar
mov
pop
ret
test
filds
rclb
aas
shll
rol
pop
mov
pusha
inc
and
dec
in
add
jae
xchg
inc
push
rcll
jo
data16
loope
add
popf
and
xlat
inc
push
jb
and
nop
inc
mov
xor
xor
xor
decb
sbb
cmp
adcl
jne
sub
xor
mov
pop
daa
lock
insb
hlt
pop
mov
rorl
dec
add
dec
aaa
pusha
rcll
sub
cmp
aad
imull
out
dec
cmc
pop
mov
cwtl
lods
push
inc
or
and
idivb
sbb
add
lret
orb
pop
scas
rcrl
fsubrp
xor
rorb
fcmove
add
push
lea
cmp
xlat
push
movsb
add
movsb
dec
hlt
cmp
dec
cmp
data16
cli
icebp
andl
and
fsubr
int
out
movsb
xor
lds
sbb
mov
cmp
adc
cmpb
add
ret
add
aas
movsb
fneni(8087
das
lock
paddusb
mov
sbb
sub
jo
out
sbb
lds
inc
xor
call
add
nop
test
sahf
dec
inc
pop
mov
sub
pop
add
dec
test
rclb
push
cltd
mov
hlt
ds
and
ret
lds
mov
dec
cmpb
rorb
fwait
xchg
and
dec
xchg
inc
and
shll
dec
std
ja
mov
lods
mov
xchg
cltd
loopne
es
mov
dec
push
jl
andb
jae
sub
inc
js
and
xchg
sub
cltd
pusha
das
adc
mov
shl
xchg
orb
sub
imul
dec
es
cmp
cld
xchg
movsb
scas
xor
rorb
sub
dec
ror
push
sub
and
cs
lret
inc
shrb
sbb
xchg
aad
mov
rorl
pop
adc
das
mov
shl
frstor
outsl
jecxz
shrl
push
clc
mov
jbe
out
xchg
pop
jne
cmp
into
inc
or
dec
fisubrs
and
lahf
cmp
sub
push
loop
sub
int3
push
xchg
inc
add
negb
aam
sahf
xor
rolb
dec
icebp
mov
std
add
push
jo
repnz
cs
lahf
sub
sub
repz
mov
lods
test
psrad
or
and
adc
nop
mov
adc
fs
nop
rolb
adc
mov
push
or
movsl
fwait
xchg
in
push
loope
or
push
xchg
iret
mov
xchg
xchg
push
jmp
push
add
mov
fiaddl
out
sbb
cld
imul
popl
add
lret
sub
subb
filds
xlat
in
xlat
or
dec
mov
ja
loopne
icebp
pop
xchg
cwtl
in
and
mov
jp
xchg
adc
push
lods
add
mov
ret
xchg
pop
sbbl
xor
dec
stos
mov
ror
mov
xchg
icebp
inc
out
in
fisubl
sbb
inc
jae
movb
xor
mov
fsubl
pop
bnd
push
sub
cmpsl
imul
shll
jb
daa
mov
pushl
mov
adc
jle
push
or
adc
test
sub
inc
push
adc
pop
push
mov
loopne
add
ja
mov
ret
stos
xlat
inc
or
jb
inc
adc
xchg
cmp
iret
lahf
push
lret
dec
mov
jno
or
add
out
xchg
and
pusha
or
or
and
fndisi(8087
and
arpl
add
cmp
adc
add
jle
and
out
je
data16
jne
fucomip
cmp
fidivrs
inc
aaa
addb
fisttpl
decl
adc
cmp
aaa
and
orb
aam
rolb
loop
leave
ret
pop
fldenv
out
lods
dec
loop
pusha
or
add
sbb
mov
xor
stos
lcall
xchg
cmpsl
cmp
mov
iret
out
ret
cmp
xchg
popf
adc
wrmsr
bound
test
jmp
add
push
aas
mov
xchg
imul
or
fiaddl
les
jae
or
xchg
xor
fwait
xchg
outsl
aas
add
push
test
mov
push
sub
subb
sub
cli
jns
mov
mov
stos
popf
filds
sbbb
adc
pop
test
and
xor
stos
inc
mov
les
fildll
and
es
mov
jo
mov
lds
out
adcb
mov
scas
rcll
ror
punpcklbw
jge
lock
xchg
sbb
lret
and
punpckhdq
lahf
inc
movsb
imul
mov
and
dec
jbe,pn
pusha
insb
xchg
push
xor
jge
daa
sbb
push
mov
adc
iret
push
mov
cmpsl
mov
imul
lret
test
cmp
es
adc
xor
sub
stos
mov
dec
or
and
scas
mov
int3
dec
mov
addb
jb
repnz
jg
add
je
xchg
or
test
sub
mov
dec
xlat
stos
ds
xchg
outsb
mov
pop
xchg
inc
icebp
repnz
dec
mov
into
pop
lret
insl
dec
fstl
mov
lods
scas
jg
pop
mov
std
add
out
mov
adc
mov
inc
inc
popa
mov
mov
adc
adc
adcl
mov
and
mov
jb
repz
repz
xchg
ja
mov
imul
push
clc
jb
xchg
shrb
in
fidivs
xchg
iret
cmpsl
pusha
pop
mov
daa
scas
or
lahf
rol
cld
push
ja
jecxz
sub
add
push
inc
inc
test
xchg
sbb
adc
push
mov
sbb
xchg
mov
push
in
sub
sub
clc
pop
push
dec
fs
and
cmpsl
dec
cmp
outsb
out
lds
jg
xor
sub
or
mov
add
lods
dec
dec
jl
inc
mov
mov
inc
out
mov
add
adc
lods
and
insl
dec
push
fistl
das
dec
arpl
sbb
loope
sarb
jnp
dec
and
and
pop
ds
jp
sahf
adc
scas
popa
repz
mov
mov
jmp
and
dec
mov
cli
sbb
adc
inc
wrmsr
inc
scas
rcll
addr16
cld
add
dec
adc
call
cmp
sub
sti
inc
and
lret
repz
movzbl
pcmpgtd
xorl
subb
adc
dec
mov
mov
jmp
pusha
and
xchg
test
popa
mov
dec
sbb
in
sbb
push
pop
cmp
sub
or
jne
jb
inc
jbe
test
inc
xor
xchg
sub
nopl
andb
imul
dec
and
dec
xor
les
sub
lods
inc
and
adc
rcrl
lods
iret
add
mov
mov
mov
out
mov
in
or
scas
dec
test
mov
orb
in
add
retw
lds
aaa
gs
jmp
lods
lds
and
xchg
imull
popa
mov
cmpsl
adc
lock
fistps
jmp
lahf
in
and
fsub
mov
loop
xor
sub
or
xchg
mov
les
icebp
jecxz
xchg
movsl
out
xchg
xchg
mov
xchg
das
cmpsb
in
and
outsl
xchg
imul
mov
repnz
inc
mov
addr16
jmp
popf
adc
mov
mov
movsl
xor
cmp
xor
addr16
popf
pop
stc
add
int
add
or
add
cmpb
inc
cmpsb
inc
or
cli
inc
lods
test
popf
and
mov
hlt
cli
out
mov
lds
xor
sub
adc
push
adc
sbb
mov
fmul
xor
fs
dec
pop
ficoms
cwtl
mov
mov
shrl
daa
loopne
mov
xchg
jecxz
mov
xorl
mov
jb
mov
testb
and
repz
ret
jne
daa
or
sub
push
jecxz
xchg
xchg
lea
adc
hlt
in
sub
and
repz
movsl
and
daa
movsb
test
stos
insl
ja
pusha
pop
jo
test
clc
adc
and
inc
mov
adc
es
cmpsl
mov
fwait
sub
movsb
ret
lahf
inc
pop
or
cs
sub
into
shlb
std
dec
inc
inc
rcrb
test
daa
and
js,pn
in
or
push
mov
inc
xchg
and
jo
fs
xchg
ret
imul
dec
outsl
loopne
push
cmp
iret
jge
xchg
movl
push
fcmovu
sarl
fldl
and
out
adc
xchg
in
test
add
sbb
fdivl
test
repnz
mov
pop
mov
les
call
test
sub
ljmp
dec
xchg
mov
cmp
push
cmp
lds
sbb
dec
push
mov
or
mov
subb
mov
les
out
popa
aas
mov
lret
sbb
xchg
push
jmp
outsb
add
inc
and
icebp
cmp
push
and
arpl
inc
mov
add
pop
push
aaa
and
xor
jl
xor
add
unpcklps
out
mov
jmp
lea
in
clc
aaa
or
jo
push
jge
mov
in
add
mov
fldcw
xchg
xchg
mov
and
adc
pop
cmpsb
push
aam
lcall
xchg
inc
pusha
xchg
xchg
jmp
add
stos
in
test
xor
mov
test
fs
ret
dec
data16
sub
adc
sbb
icebp
mov
dec
or
xor
mov
dec
push
dec
nop
adc
dec
inc
push
add
das
fwait
dec
or
pop
mov
fwait
adc
jbe
cmp
loope
xchg
dec
les
call
out
xor
xchg
loopne
cli
adc
in
dec
enter
mov
push
pusha
inc
jo
mov
or
ljmp
jno
cld
fdivrl
jge
or
add
jmp
add
inc
addr16
add
sti
xchg
icebp
xchg
outsb
sbb
lods
cmpsl
and
popf
mov
loop
ja
fildll
dec
sti
push
cmp
loope
inc
add
pop
mov
leave
int
fs
mov
mov
fbld
loop
flds
jl
pop
leave
and
dec
ret
mov
xor
popl
jle
shlb
inc
pop
ret
fstl
mov
sbbl
movsb
test
pop
icebp
shll
andb
mov
insb
inc
sbb
outsb
mov
dec
std
mov
jp
push
loopne
push
andb
sub
std
cmpb
jmp
mov
mov
mov
sub
ret
out
aad
and
add
imul
lds
push
lahf
imul
jo
dec
add
shlb
andl
fwait
mov
mov
repnz
ds
lods
xor
adc
lock
mov
dec
test
bound
sbb
and
sub
push
imul
stos
sub
iret
cmp
adc
push
push
xor
addb
xchg
clc
rolb
loop,pn
add
mov
arpl
loope
pop
push
jo
lea
and
pop
jno
fldenv
and
mov
hlt
imul
adc
in
shr
add
mov
mov
xor
rcl
sbb
push
pop
call
shrb
xor
inc
das
cmc
pop
rol
pop
mov
cmp
dec
jae
sahf
adc
add
hlt
shrl
pcmpgtb
inc
dec
das
ss
out
aaa
or
pcmpgtb
pop
adc
aad
adc
push
in
inc
mov
js
shlb
data16
sub
or
lcall
lock
icebp
xchg
lods
dec
cwtl
sub
or
push
xchg
xchg
test
ss
adc
into
inc
add
icebp
xor
push
cmp
push
sub
and
xor
push
cltd
add
and
out
loope
mov
xor
push
or
inc
and
aas
mov
icebp
or
mov
pop
adc
and
cmpsl
sarb
rcll
sub
dec
cmpsb
inc
adc
outsl
inc
fldl
lods
cmp
add
in
shll
loopne
dec
out
jecxz
fsubl
repz
xorb
cmp
jae
cmpsb
push
pop
test
roll
dec
or
pop
ffreep
xorb
push
inc
xchg
mov
mov
or
repz
xchg
and
rcll
das
and
xor
xchg
repz
xor
lock
enter
sahf
adc
shll
cmp
pop
or
test
sub
jg
cs
cs
sub
clc
and
shl
sub
pop
dec
add
ljmp
pop
iret
in
add
pop
and
or
mov
cltd
insb
xchg
mov
lods
gs
cli
mov
mov
cmpl
nop
mov
push
inc
pop
and
adc
cmp
adcl
pushf
mov
cmp
jns
mov
sbb
pop
and
jns
mov
inc
mov
dec
addl
push
insl
out
inc
mov
pop
movsb
xor
push
cs
or
fistps
lock
enter
jmp
add
std
pop
stos
out
movsb
mov
xlat
mov
test
push
pop
movsl
cmc
mov
scas
xorb
and
xchg
sbb
lods
orb
cmpsb
dec
loop
mov
and
dec
inc
inc
sarl
in
dec
cli
or
xor
in
icebp
shll
cltd
xchg
in
and
mov
add
popf
leave
mov
mov
test
fildl
out
jl
dec
into
mov
add
push
das
lock
pop
es
dec
xor
push
insb
dec
xchg
pop
push
inc
push
dec
mov
clc
push
jo
arpl
movsb
shl
in
pop
dec
xchg
dec
addb
and
lcall
cmp
mov
popa
into
xchg
cmc
ficompl
imul
xlat
sub
call
add
lods
adc
dec
aaa
and
jb
lds
int
pop
divl
stos
xchg
add
mov
es
out
ret
push
pop
loop
xchg
in
adc
ja
dec
add
dec
shlb
lock
cmp
mov
dec
xchg
mov
lock
adc
adc
push
mov
lds
pop
mov
xchg
sbb
or
adc
mov
mov
push
push
jmp
repnz
sub
in
jl
and
jnp
add
mov
jb
jmp
mov
pop
fs
rcll
loop
push
pop
add
fisubrl
mov
xchg
hlt
or
fs
rcrl
mov
sub
mov
push
push
sub
mov
xorb
andb
xor
imul
inc
xlat
lods
dec
insb
jg
push
arpl
jg
and
mov
hlt
mov
xchg
enter
mov
and
subb
jo
jecxz
mov
sbb
test
lds
adc
shrb
add
bound
ljmp
mov
ret
repz
xor
pop
leave
cs
test
in
test
jge
jno
adc
lahf
in
sub
cltd
cld
pop
loop
test
push
enter
les
sahf
unpckhps
inc
sub
popa
sub
jp,pt
mov
and
adc
gs
outsb
push
mov
les
inc
rep
js
pop
ret
dec
leave
inc
xor
jae
loope
in
mov
adc
push
dec
pop
mov
lds
cmp
sbb
fdivs
or
pop
test
sbb
dec
fs
incb
or
mov
or
aas
fdivrl
inc
mov
ret
mov
add
sarl
add
mov
and
mov
xchg
pushf
loopne
mov
jno
push
stc
jnp
pop
inc
rclb
sbbb
jb
or
push
ja
fucomi
pop
sub
jns
or
add
mov
push
int3
inc
dec
or
adc
ja
xchg
and
and
mov
sahf
or
mov
dec
fs
cmp
jecxz
xchg
mov
addl
cwtl
ljmp
sub
ja
adc
fisttpll
pop
mull
scas
add
iret
je
sti
xchg
dec
mov
roll
cwtl
mov
xor
adc
popa
xor
test
push
insl
mov
or
jecxz
mov
decb
lea
es
not
lret
cmp
mov
add
in
pop
insb
and
push
clc
xchg
fiaddl
xchg
nop
dec
dec
mov
mov
jle
sub
xlat
out
add
iret
sbb
jmp
out
iret
and
inc
add
lock
push
mov
lahf
jl
cmpsl
rcr
shrb
sub
aaa
test
inc
dec
or
mov
xchg
and
in
xchg
loop
push
jb
mov
inc
mov
adc
andl
popa
jne
adc
xchg
orb
xorl
aam
inc
inc
sub
sub
push
cmpsb
mov
out
popf
out
pusha
sbb
movsb
or
notb
mov
or
sbb
xchg
rcr
nop
test
push
cmc
loope
jo
jecxz
movsl
inc
xor
inc
mov
cmpsl
gs
mov
fcompl
int
jecxz
scas
and
out
add
jmp
inc
add
ret
pop
or
shlb
inc
loop
push
pop
adc
and
leave
popa
xor
pop
ret
into
cmp
xorl
fisubrs
nop
lds
sub
scas
lds
xor
sbb
push
pushf
js
xchg
scas
or
rcrb
cmp
pop
lahf
pop
push
loopne
stos
or
mov
sbb
pop
iret
loopne
into
xorb
xchg
inc
mov
movsb
and
aam
insl
mov
insb
and
fdivp
mov
shl
add
out
lds
idiv
cltd
sbbl
mov
add
leave
pop
out
cld
adc
jl
shlb
stos
loope
nop
mov
inc
fidivrl
push
jae
cmc
out
in
inc
insb
xor
xchg
scas
lahf
ds
pop
sar
data16
loope
js
mov
add
bound
xor
je
inc
movsb
adc
inc
std
pop
cmp
stos
push
pop
cld
icebp
fisubl
mov
out
lcall
into
cs
out
data16
xchg
lods
pop
xor
or
repnz
dec
mov
jmp
andb
hlt
in
sub
and
pop
mov
les
int
bound
orb
int
cs
push
sahf
and
adc
mov
icebp
dec
add
sub
cmpb
jecxz
push
sbb
daa
push
fwait
jp
insl
imul
popa
pop
or
dec
sub
inc
test
xchg
loopne
mov
mov
test
mov
fildl
leave
inc
xor
das
subl
ja
lock
outsb
lret
lock
imul
imul
xchg
pop
xchg
sti
push
loope
add
mov
loop
xor
bound
stc
xchg
fsubs
mov
or
xchg
jnp
mov
cld
test
lods
sbb
mov
lods
arpl
xlat
inc
sahf
mov
and
das
test
int
or
xchg
pop
sbb
jmp
inc
bound
loop
shll
xchg
jl
cmp
std
fadds
sub
sti
aam
test
je
push
ljmp
test
cmp
dec
dec
mov
iret
std
sbb
outsb
mov
out
or
or
test
clc
aad
fisubs
adc
test
pusha
test
dec
scas
mov
lcall
xchg
add
adcb
cmpsl
insl
pop
frstor
sub
mov
rol
lock
inc
and
push
daa
rcll
orl
lea
jne
cs
iret
xchg
jmp
cmpsl
arpl
fimull
jns
push
push
in
xor
addr16
jb
pop
in
aad
dec
outsl
push
mov
xchg
sub
cmp
inc
push
aam
shrb
adc
mov
pop
jnp
mov
push
xor
rcrl
mov
test
mov
and
add
lret
inc
xchg
lock
stos
test
sbb
sub
jns,pn
or
orb
loope
or
xor
out
jecxz
push
repz
imul
les
jge
movsl
in
aam
inc
icebp
sbb
pop
stos
xor
dec
pop
orb
xchg
jmp
mov
nop
inc
inc
lret
shll
arpl
fwait
dec
js
imul
ljmp
inc
inc
shll
enter
fisubs
stos
inc
mov
dec
bswap
sub
inc
mov
cld
add
push
cli
lret
or
adc
aas
movsl
xor
shr
sbb
ret
xor
pusha
dec
cmp
aad
sbb
add
call
add
mov
cmp
add
push
outsb
inc
fimuls
mov
jae
or
sub
cmpsb
jmp
push
loop
mov
cwtl
mov
popf
xor
pushf
lea
movsb
jo
mov
jnp
test
sbb
cmp
push
push
sbb
repz
bound
lock
inc
cmc
mov
mov
jns
out
mov
bound
clc
test
es
and
int
ret
fmull
sbb
xor
mov
aaa
data16
inc
or
sarb
jne
adc
xor
insb
sub
shlb
inc
lea
fwait
or
add
sahf
jp
and
fildll
and
sarb
jmp
ja
lea
mov
inc
pop
push
push
lret
data16
out
test
in
push
clc
iret
ret
subb
out
dec
adc
push
sub
fidivrs
rorl
push
iret
frstor
fidivrl
pop
xchg
fcoms
push
push
hlt
popf
int3
into
popf
cmp
xchg
mov
jno
jnp
push
aaa
add
aas
lods
icebp
ret
bswap
pushf
ret
jno
adc
out
adc
int3
ja
mov
daa
sub
lea
cmp
ret
icebp
jmp
inc
fcmovnb
scas
fsubr
dec
add
xor
dec
loopne
clc
jb
jo
out
roll
enter
xchg
and
rep
adc
lock
dec
pop
mov
push
lods
lcall
jecxz
rcl
loopne
xor
pop
ljmp
mov
dec
xchg
out
inc
test
add
icebp
jns
dec
out
cmp
mov
xor
test
fsubl
mov
call
sub
mov
and
xor
mov
loope
jno
cmpsb
pop
js
add
and
aad
test
daa
pop
jmp
bound
and
xor
mov
and
sub
mov
aas
push
enter
stc
cld
push
mov
out
stc
xchg
and
xor
fcmovnb
add
inc
loope
adc
push
jmp
push
jmp
fucom
jmp
push
fistpll
imulb
jo
clc
inc
mov
roll
outsl
xor
enter
icebp
loop
inc
dec
sbb
jmp
push
dec
adc
das
push
sahf
cmp
xchg
jns
ficoms
mov
xchg
cld
fisubs
rclb
add
icebp
ja
adc
lock
push
ljmp
jae
sahf
push
sub
js
shrl
mov
add
jge
mov
aam
mov
xchg
test
jp
mov
pop
sbb
int3
mov
mov
cmp
hlt
leave
jl
fistpll
mov
pop
mov
and
dec
ret
mov
dec
rorl
orb
and
sbb
out
xor
dec
lret
fsubs
xchg
mov
in
cli
rol
pop
das
fldt
ror
mov
sbb
pop
in
inc
clc
test
or
lock
inc
in
inc
stos
pop
lret
push
sbb
lock
add
lcall
stos
or
push
pop
and
mov
sub
addb
inc
sub
loop
xor
mov
push
inc
add
mov
and
ss
jle
sarb
sar
mov
jo
cwtl
xchg
fmuls
mov
std
ljmp
mov
out
xor
jge
mov
pop
ljmp
loope
sub
sbbl
std
stc
int3
pop
pushf
adc
mov
ret
and
ja
xchg
xchg
push
pop
xor
add
lahf
cmp
popa
loopne
cli
or
imul
pop
mov
inc
nop
inc
in
jo
push
and
jno
loopne
mov
fistpl
ret
pop
ja
and
ljmp
into
xor
test
adc
sub
push
xlat
inc
adc
inc
push
pushf
stc
xor
ds
sbb
stos
mov
push
and
and
add
rorb
fwait
or
dec
push
int3
mov
test
sub
cmpsb
or
jmp
or
jp
inc
and
shr
xchg
test
dec
jge
pop
aad
fwait
addr16
jns
lcall
out
inc
add
jmp
xlat
pop
je
lcall
add
outsb
xchg
rclb
xchg
test
mov
repz
xorl
cmpl
push
ret
cmpsl
cltd
push
or
in
adc
icebp
cmc
lahf
add
lock
test
jbe
int3
and
push
std
pusha
jbe
push
xchg
cmp
hlt
jp
inc
pop
not
cli
mov
iret
into
inc
cmpsl
in
inc
setae
jae
adc
ucomiss
jno
movsb
add
das
orb
sub
push
ja
push
xor
push
cmp
dec
stos
jg
pop
out
jg
imul
xor
mov
dec
xlat
mov
jecxz
jns
inc
jg
cmpl
shlb
clc
test
daa
jbe
jns
in
adc
jbe
jo
push
and
stc
push
outsl
adc
xchg
pusha
mov
fwait
push
daa
dec
jmp
jg
jle
adc
add
and
fldenv
int
cmpsl
add
adc
daa
push
movsb
divb
dec
lods
sub
fsubp
or
dec
repnz
add
sbb
sub
ds
je
adc
add
xchg
cmp
jns
add
mov
and
jmp
pop
mov
mov
hlt
pop
icebp
push
add
sbb
mov
pop
xor
pop
cmp
movsl
insb
and
cmc
pop
xor
and
add
sub
fmull
sub
mov
dec
das
xchg
inc
dec
push
jne
push
jmp
out
push
aad
mov
ret
push
adc
jne
mov
push
or
inc
inc
pop
out
xlat
test
nop
add
in
push
scas
movsb
xor
bound
mov
lods
cli
jmp
out
cmpsb
dec
inc
mov
push
xor
push
scas
and
mov
inc
iret
xchg
pop
cmpsb
inc
nop
sbb
popl
cmp
add
into
inc
cmc
lock
out
sub
enter
mov
fcoml
and
mov
and
call
fstpl
hlt
cli
add
adc
inc
push
xor
and
in
cmovp
push
mov
lods
jbe
repnz
sbb
cmp
lods
inc
stos
fimuls
hlt
and
aam
mov
cmp
lods
cs
cmp
dec
enter
inc
mov
test
shl
inc
fcmovb
inc
xor
xchg
shll
enter
add
dec
sub
inc
sub
inc
fsubrs
inc
pushf
shrb
mov
sub
push
jno
or
or
insl
pop
inc
dec
jg
cmpsb
in
mov
outsl
push
cmp
add
sub
fildl
lea
shlb
xrelease
cld
xchg
ret
mov
popa
and
es
fnstsw
pop
iret
mov
divl
andb
aas
mov
mov
xchg
sub
mov
cmc
push
xlat
pop
aas
jge
movsb
into
nop
arpl
test
in
push
push
insb
data16
pop
mov
mov
js
inc
orl
stc
leave
mov
fiaddl
push
mov
add
mov
jae
xchg
stc
dec
mov
es
push
inc
adc
push
inc
stos
xor
cwtl
mov
lds
pop
shlb
and
xchg
das
cmp
cmp
ud0
or
xor
jecxz
into
mov
cmp
test
sahf
call
mov
sbb
clc
jns
add
cli
xchg
push
lcall
adc
mov
push
mov
add
mov
pop
imul
xor
je
aam
jb
sub
arpl
push
stc
mov
psubw
jle
int
inc
lock
and
jp
test
mov
out
push
out
sub
inc
mov
loope
sar
rcrl
mov
sbb
lock
hlt
dec
ror
cmp
popf
int
pop
cmc
jns
ret
fwait
mov
in
out
mov
out
push
movl
lods
cmc
ret
xlat
xchg
mov
mov
jb
xor
pop
hlt
loop
mov
loopne
shll
in
add
xor
arpl
sub
addr16
jne
cs
pop
push
add
add
mov
jo
cli
mov
pusha
mov
ja
stc
pushf
push
inc
cltd
arpl
sub
dec
fwait
inc
psubq
test
lods
and
shll
imul
push
jecxz
test
sub
xchg
dec
in
in
aad
shll
orl
or
add
push
aas
insl
jle
or
cmpl
dec
rorl
fiaddl
sub
mov
push
push
sarb
mov
imul
xchg
repz
push
add
mov
push
inc
sbb
or
jl
cmp
stos
rorb
and
add
or
out
and
mov
mov
jae
mov
negl
and
mov
sub
into
rolb
inc
mov
insb
xchg
cmp
shl
stos
sub
fistl
and
sub
push
inc
jne
lret
mov
and
mov
adc
sbb
xchg
mov
jl
pop
xchg
jmp
test
es
mov
outsb
lods
jle
and
inc
mov
mov
mov
sbb
movsb
cmpsl
xor
js
jae
aam
lea
mov
cld
mov
sub
popa
out
sub
or
fisttpl
xor
movsb
dec
fiaddl
or
out
cmp
andb
xchg
mov
and
adc
mov
lods
cli
cld
popf
mov
rcll
xchg
mov
cld
repz
ret
or
mov
and
adc
dec
sub
push
mov
sbb
mov
mov
add
add
das
lcall
mov
ds
pop
in
jo
mov
pop
dec
xchg
loopne
cs
push
sbb
imul
and
mov
xor
mov
mov
jne
mov
popa
jno
xchg
adc
xor
lret
lods
sbb
aaa
mov
in
pop
jno
push
adc
mov
das
mov
mov
jp
mov
call
jecxz
sub
fs
bound
mov
mov
mov
sbb
inc
push
cmp
mov
bound
xor
xor
xchg
dec
jnp
jg
int3
movsb
xor
test
push
inc
add
dec
scas
cmpsl
cmp
inc
test
aaa
and
pop
xchg
daa
add
jmp
shlb
mov
scas
cwtl
imul
jb
push
mov
nop
sbb
addl
adc
fstps
dec
stos
loopne
mov
xor
mov
xchg
leave
pusha
ljmp
push
cmpsl
mov
loope
inc
sub
sbb
and
add
and
stos
out
mov
mov
jmp
cmp
subb
adc
filds
dec
push
test
arpl
push
xlat
dec
sbb
dec
inc
lods
jb
test
push
mov
andb
xor
sub
jmp
pop
jbe
push
jl
rolb
jmp
add
shll
pop
aaa
adc
mov
lds
lret
aas
add
mov
xor
mov
jmp
mov
in
in
ds
cmpsb
call
outsl
inc
cmp
push
dec
mov
pop
or
js
adc
std
sbb
push
push
xchg
ds
jecxz
sbb
xchg
fisubl
cmp
push
adc
xor
bound
fsubrl
shl
pop
jb
jmp
mov
lock
pop
or
jge
subb
pop
push
clc
inc
pop
xor
in
adc
adc
lcall
sbb
mov
xchg
stos
mov
or
or
add
adc
lret
daa
in
dec
mov
insb
ret
and
out
js
mov
xor
out
fnstsw
pop
and
push
popa
enter
mov
inc
mov
pop
fcmovb
push
mov
jp
inc
cltd
shr
sar
add
sub
add
inc
sbb
imul
repz
leave
dec
push
add
pop
mov
mov
push
imull
je
movsl
mov
dec
je
ljmp
mov
enter
dec
push
mov
xorb
loopne
mov
ss
loopne
adc
out
push
xor
mov
add
dec
mov
sbb
sbb
mov
shll
mov
iret
and
mulb
xchg
xchg
mov
xor
out
rol
dec
add
fcompl
mov
js
ljmp
adc
addb
out
push
cltd
and
xchg
pop
mov
subl
andl
cld
xor
xor
flds
sbb
sub
je
in
insl
sbb
dec
ret
and
leave
mov
lock
cld
mov
aad
rcl
fadds
xchg
push
arpl
pop
jmp
xor
and
dec
pop
sbb
add
jns
cmp
bound
sbb
push
test
lods
xor
fwait
loopne
jge
mov
insb
sub
or
mov
addr16
dec
fsubp
mov
inc
rcrl
cmpsb
addr16
aas
notl
mov
rorl
int3
lock
in
dec
mov
push
std
push
fnsave
mov
pop
add
popf
rcrl
mov
loop
lock
loop
sub
xchg
or
shlb
mov
lret
pop
ss
xchg
mov
movsb
roll
jmp
add
iret
faddl
shl
push
mov
inc
mov
jb
cli
mov
incb
add
pop
cmp
or
inc
xlat
notl
inc
xor
loop
add
lods
inc
fistps
enter
repnz
mov
in
in
mov
imulb
mov
adc
and
icebp
lods
adc
popw
sbb
inc
bound
push
push
aas
adc
and
and
repnz
dec
push
in
or
mov
test
rorb
sub
xlat
fimuls
imul
push
xchg
push
dec
and
subl
jmp
je
test
jp
push
push
xchg
mov
dec
int
fcoms
mov
movsl
cltd
push
sub
pop
push
neg
or
sarl
movsb
sub
cmpsb
aaa
rcl
out
fimull
add
lcall
pop
inc
cs
ljmp
mov
cwtl
lds
std
mov
jo
inc
lods
imul
inc
out
cmp
movsb
bound
sub
stos
and
and
das
adc
pop
icebp
call
adc
in
adc
cmp
mov
mov
int3
inc
push
in
data16
mov
pop
insb
ljmp
push
movsl
rcll
aam
dec
insl
out
push
mov
ss
and
mov
push
mov
daa
dec
push
xchg
int3
movsl
xorb
jle
enter
mov
push
inc
mov
test
or
xchg
push
inc
lret
xor
and
in
decl
mov
or
xlat
shll
pushfw
shlb
es
fcomps
adc
mov
jbe
cmc
inc
jo
or
pop
popa
pop
pusha
xchg
les
clc
out
scas
nop
sbb
dec
cli
xchg
push
mov
push
sub
cli
jns
popa
cs
mov
clc
push
pop
jb
test
jmp
insl
or
sbb
mov
cltd
fwait
cmp
cmp
gs
and
leave
xchg
mov
mov
call
inc
gs
ja
hlt
sub
inc
cmp
mov
hlt
inc
jb
xchg
inc
cmp
jecxz
push
cmp
arpl
mov
push
mov
and
xor
or
lahf
mov
dec
jmp
sarl
jb
add
test
adc
sbb
push
pop
hlt
mov
jl
cmp
or
or
popa
mov
int
loop
ds
shll
and
or
inc
mov
jbe
pusha
stos
sub
or
stos
add
flds
xchg
jecxz
fistps
xor
imul
subb
sarl
addr16
push
call
out
xchg
fimuls
push
nop
mov
push
xlat
loop
jno
push
dec
insb
adc
mov
pop
mov
lahf
jno
shlb
sub
mov
dec
jb
add
out
popf
mov
shlb
pop
pop
pop
fldenv
xor
pop
enter
in
push
pop
div
or
lods
sbb
mov
cwtl
dec
gs
out
xor
mov
xlat
and
sar
dec
aad
fldcw
cmpsl
scas
jp
jns
mov
shlb
shlb
cmp
bound
adcb
jnp
inc
nop
aas
push
cmp
stos
shll
pop
push
push
sub
xchg
lock
iret
or
jno
add
push
rorb
xchg
xchg
adc
rol
lds
stc
adc
int
jmp
push
lods
stos
loope
push
in
ss
xorl
test
int3
outsl
mov
lret
and
adc
in
or
lods
cmp
addr16
jns
mov
imul
mov
int3
adc
mov
in
ja
push
sub
stc
fists
daa
jne
hlt
lea
dec
loopne
mov
popf
push
jb
rcll
sbb
jle
dec
iret
push
jl
adc
sbb
fmull
psubb
or
inc
scas
sbb
mov
and
xchg
xor
dec
adc
js
and
hlt
leave
hlt
imul
mov
insl
cmp
cmc
xor
hlt
jns
sbb
roll
jl
jp
js
into
or
incl
hlt
sub
aas
sub
aaa
cli
and
inc
insb
xchg
mov
insb
sub
xor
mov
pop
cmp
xlat
testb
popa
xchg
jae
add
mov
nop
xor
fsubrl
xlat
xor
inc
dec
lret
mov
popl
xor
jnp
fs
in
sbb
dec
je
xor
pop
aas
xchg
outsl
jae
sarb
xchg
fisubrl
add
or
inc
in
div
xchg
push
jno
push
add
cmp
lret
int3
stos
nop
outsl
mov
mov
pop
mov
aaa
cltd
mov
inc
cmpsl
gs
cmp
int
adc
testb
pop
push
xchg
ss
imul
sub
push
mov
pop
loop
ret
mov
add
aad
rolb
push
into
push
push
cmp
mov
out
out
cmp
aam
xchg
xchg
xorl
pop
arpl
dec
adc
or
rorb
aas
sbb
lea
iret
cmc
sbbb
stos
mov
mov
je
lret
xlat
fsts
add
clc
jmp
mov
mov
inc
iret
pop
test
or
cmp
rorb
bnd
xchg
bound
or
sarb
inc
push
and
and
inc
nop
ret
test
inc
int
cmp
lods
leave
cmp
inc
ret
xor
in
stc
inc
jg
xchg
inc
notb
leave
fisttpll
xorl
cltd
mov
sahf
xor
mov
sub
and
lret
std
out
inc
aad
cld
xchg
mov
mov
push
dec
add
and
sbb
ja
or
cmc
jnp
or
shll
test
xchg
clc
mov
insl
dec
outsl
adc
mov
pusha
loop
xor
or
add
in
loop
mulb
iret
sbb
mov
pop
mov
mov
jecxz
loopne
mov
xchg
xor
subl
mov
sbb
test
or
dec
mov
lock
cmp
sbb
enter
lcall
scas
or
jle
cs
sub
je
push
or
adc
mov
scas
jp
xlat
and
dec
xor
mov
inc
mov
xor
or
cli
cli
cmp
pop
icebp
aaa
jbe,pn
into
out
loopne
mov
repz
or
and
loope
xor
adc
push
dec
xor
cmp
push
adc
sbb
sub
pusha
inc
les
and
inc
int
and
add
int3
notl
push
mov
or
mov
inc
cli
shll
xchg
stos
movb
mov
cmc
cmp
add
and
mov
or
out
xchg
adc
and
lret
arpl
inc
push
lret
inc
jge
cmp
sub
mov
fwait
fs
jmp
push
enter
add
lret
jb
shlb
addb
jb
scas
rorb
inc
adc
xchg
out
dec
ds
dec
inc
lret
push
pop
inc
xor
rcrl
xlat
rcrl
enter
jbe
sbb
aas
and
and
sub
mov
and
ljmp
push
out
xor
push
sub
sbb
jl
std
adcb
sub
or
and
stos
and
pop
jmp
push
shll
dec
sub
les
iret
sbb
pop
sarb
andb
test
pop
dec
sbb
push
fs
mov
mov
xor
pop
nop
push
push
mov
or
pop
div
arpl
add
pushf
rcll
fbld
mov
lret
push
outsl
insb
inc
cli
pop
fmuls
and
daa
jae
arpl
mov
addr16
or
xchg
sbb
and
popf
push
inc
jg
repz
sub
ret
xor
lock
mov
adc
insb
xchg
pop
pop
xor
fdivrl
pop
xor
scas
fwait
ljmp
test
mov
xor
xor
xchg
push
andb
pop
enter
sahf
push
stc
sbb
es
aaa
push
sbb
mov
adc
add
adc
and
pop
mov
sub
ret
jmp
movsb
jb
dec
ss
and
cltd
rol
sbb
dec
loopne
sub
movsb
mov
fstpl
pop
sbb
push
xor
fwait
andl
mov
pop
dec
mov
les
cmp
cmp
xchg
push
mov
imul
sarb
and
in
sub
fcompl
aam
or
mov
cmp
into
mov
push
leave
mov
sbb
sub
mov
shll
les
sbb
xchg
xchg
and
push
cltd
sahf
les
or
add
xchg
add
cmp
daa
scas
xchg
or
inc
inc
scas
add
inc
rolb
inc
outsl
dec
aam
and
lea
jle
clc
andb
pop
gs
sub
int3
xor
pop
inc
push
inc
jo
jmp
bound
leave
dec
mov
fwait
push
inc
test
std
inc
lock
xchg
ss
push
adc
mov
jg
adc
scas
cli
push
cmpsl
negb
fildl
fnstenv
or
xlat
xor
into
xorl
push
test
dec
leave
lds
push
lock
shrb
mov
pushf
push
mov
lret
jo
lret
out
dec
mov
xchg
pop
push
sub
lods
inc
xchg
js
or
popa
xchg
pop
mov
jns
sub
into
and
insl
rcll
fsubrs
aad
inc
xchg
les
cmc
mov
jb
mov
and
mov
loope
arpl
mov
icebp
ret
jno
std
shll
ss
aaa
scas
aas
pop
xchg
lods
out
je
rolb
cli
dec
je
adc
insb
outsl
inc
stos
outsb
push
addl
enter
pop
fsubrs
test
xchg
push
jle
push
dec
sub
pop
xchg
jge
enter
ret
lcall
cwtl
cmc
mov
mov
dec
xor
pop
fcmovbe
pop
je
jbe
imul
pop
xchg
dec
jo
adc
fiadds
dec
rclb
and
dec
xchg
dec
rcrb
inc
gs
movsb
pop
lds
sti
add
shlb
xor
adc
aad
lcall
fmul
push
sub
adc
and
jb
mov
sarl
xchg
insb
scas
shlb
ret
sub
inc
jp
rclb
repnz
adc
push
xor
mov
movsb
sar
or
inc
data16
sbb
jle
mov
aaa
mov
mov
ret
and
xor
add
cmpsl
lahf
mov
andl
popa
cmp
stos
data16
sub
mov
pop
xchg
push
pop
and
mov
ret
pop
add
sub
repz
add
repnz
and
sti
jae
cmp
mov
jecxz
sbb
lahf
sub
fimull
pop
and
lock
push
cmc
inc
add
das
push
movsb
stos
xlat
jne
push
or
and
ss
inc
fadd
sbb
cmp
scas
mov
stos
leave
xchg
adc
aaa
push
xor
add
cmp
addr16
filds
mov
shl
popa
aaa
inc
mov
sub
push
cmp
int3
fisubl
mov
je
nop
adc
nop
pop
cmp
pop
in
loope
adc
jg
jo
mov
ljmp
pop
xchg
pop
enter
inc
sub
repz
jne
and
adcl
pop
sub
adc
lods
or
enter
push
and
cmpsl
mov
fcmove
xlat
lcall
push
fcmove
jl
addr16
lods
inc
and
pop
mov
add
inc
or
fwait
dec
lcall
cmpsl
push
shr
ss
xor
jae
mov
push
xchg
or
mov
add
insl
xchg
xor
mov
dec
and
shlb
shll
pop
adcb
adc
push
jb
lea
inc
pusha
cld
and
test
cmp
push
out
clc
mov
pop
pop
out
mov
jnp
add
dec
frstor
jg
mov
insb
or
int
repz
mov
mov
jno
shr
popa
pop
xchg
sub
inc
pop
sti
push
add
sub
popa
fildll
shll
cmc
lret
mov
leave
scas
push
xor
mov
push
cwtl
push
stos
xor
add
cmp
xchg
push
sti
cmpsl
ss
data16
mov
aam
jno
bound
mov
fsubrl
jb
sbb
outsl
ret
dec
aaa
data16
cs
or
sti
rolb
and
and
sarl
add
arpl
lock
push
cmpsb
mov
cmp
mov
loope
pop
cmp
jbe
pop
cmp
popa
daa
imul
scas
ficomps
pusha
xchg
fmulp
movsb
inc
pushf
xchg
fwait
fwait
dec
ret
push
nop
jl
and
cmp
rclb
add
xorps
push
xchg
dec
sti
pop
test
in
test
inc
int3
mov
test
outsl
jmp
cmc
cltd
cmpsb
adc
and
and
xchg
inc
ret
cmp
mov
xor
sub
inc
jb
roll
xchg
cwtl
jb
jnp
das
push
adc
fdiv
sti
mov
dec
stos
je
addb
aas
lods
jecxz
mov
and
call
pop
hlt
and
xor
xor
cmp
xchg
es
std
es
xchg
xchg
mov
mov
loop
push
imul
xor
xchg
push
mov
adc
lret
push
sub
je
and
sub
loopne
ja
shlb
adc
hlt
mov
scas
jno
scas
or
test
mov
mov
iret
mov
sub
mov
out
incb
cmpsl
shll
dec
adc
mov
sbb
xchg
incl
xchg
pop
fsqrt
push
popf
cmp
xchg
rorb
dec
inc
xchg
ljmp
or
inc
sbb
xchg
mov
sub
cmpsb
pop
mov
sar
iret
pop
cmpsl
inc
mov
inc
lahf
jbe
jl
jns
fcmovb
mov
mov
pop
jge
mov
mov
sarl
push
into
sbb
hlt
mov
inc
loop
and
add
mov
inc
cli
xor
sbb
stos
nop
xor
xorl
jnp
mov
jb
js
mov
mov
scas
push
mov
shll
dec
lods
pop
mulb
jnp
push
jo
adcb
adc
fsubrp
and
je
rcll
aaa
hlt
mov
mov
rorb
and
daa
repz
outsb
test
fdivs
and
nop
cmp
test
jb
int3
in
add
nop
mov
jge
and
inc
xchg
test
xor
pop
cli
pop
add
in
cmpsl
dec
xor
and
test
aad
andl
cmp
xor
push
insb
mov
cmp
and
jb
adc
mov
imul
imull
inc
xchg
xchg
cmpsb
xchg
sbb
push
inc
adcl
pop
insb
xchg
dec
jne
and
loopne
jb
dec
imul
xchg
xchg
sahf
mov
aam
adc
pop
pop
pushf
ret
sub
bound
push
add
mov
push
mov
and
push
xor
popa
scas
rcrl
or
mov
xor
loope
xchg
cmp
xchg
mov
inc
fldl
pop
cmp
int3
jmp
stos
call
inc
je
pusha
stos
or
int3
ficoml
call
leave
data16
mov
sbb
xchg
push
xor
mov
xchg
adc
int3
aad
jbe
xor
scas
lcall
inc
test
in
mov
pusha
ja
int3
dec
bound
mov
mov
sub
dec
shrb
enter
imul
icebp
lea
cmp
dec
fcmove
shr
cltd
sub
outsb
add
in
jno
push
mov
jnp
popa
das
orb
mov
xchg
xchg
stos
test
maskmovq
mull
push
jg
shlb
cmp
pop
pop
lret
xchg
aas
shll
mov
int3
insb
adc
and
adc
iret
aas
idivb
pop
mov
hlt
jb
xchg
jb
sbb
out
movsb
int
cmc
cmp
not
stc
mov
sub
push
push
insl
pop
sbb
mov
movb
popa
outsb
xor
sbb
repz
jle
adc
ret
dec
in
imul
mov
pop
sub
out
repz
xlat
inc
sub
inc
sahf
arpl
pop
iret
in
jle
into
mov
jo
push
sbb
sbb
sbbl
jo
or
rcr
out
outsb
subl
adc
pushl
dec
test
cmp
jp
mov
xor
pop
or
adc
in
lods
cmp
mov
mov
and
leave
xor
inc
push
mov
sbb
or
orb
nop
adc
dec
cltd
xor
shrl
jns
xchg
ret
rolb
mov
nop
mov
lcall
sahf
bound
dec
pop
push
js
mov
test
cmp
dec
shl
pop
lock
fadds
scas
outsb
and
addr16
cmp
push
out
adcl
frstor
fdivr
cmp
rclb
adc
dec
loope
sub
push
mov
mov
lock
sbb
dec
ret
dec
test
inc
inc
ljmp
mov
subb
into
and
pop
ja
lods
xor
mov
xchg
sub
rcrb
sub
decb
inc
push
repnz
cmc
mov
mov
push
leave
lods
cmpsb
insl
rol
push
mov
imul
sbb
mov
stos
je
pop
and
nop
adc
add
ja
into
mov
cli
mov
sbb
pop
jl
cld
cmp
fimull
test
leave
xorb
adc
mov
adc
je
jae
lock
test
stos
dec
jae
xor
arpl
test
cmp
or
xchg
insl
or
jg
lds
ss
jbe
call
aas
xchg
in
testb
push
loop
lods
dec
lods
jge
xlat
fcmovu
jecxz
pop
pop
mov
jmp
mov
das
test
or
das
aam
lods
jmp
leave
add
rep
adc
pop
lret
push
outsb
push
and
sbb
ja
sahf
pop
jns
jle
jg
sahf
jns
push
add
jmp
sarl
sarl
data16
movsb
sub
jecxz
dec
ja
push
enter
adc
jmp
inc
mov
xor
cli
cli
pop
jae
inc
lret
pop
fs
xchg
push
aas
push
jbe
push
dec
loop
popa
push
lds
pop
cmp
and
adc
hlt
and
daa
xor
add
les
pop
dec
adc
dec
loop
sub
dec
jmp
aas
add
ret
es
das
and
add
loopne
xor
or
stos
cmp
fs
mov
test
mov
std
ja
pop
cmp
sub
mov
mov
xchg
push
sub
jno
push
dec
xor
out
cli
xor
add
or
push
cmpl
mov
inc
ret
in
or
movsb
orl
inc
sti
jmp
jmp
das
lods
lods
mov
or
and
shll
add
or
pop
dec
and
add
sub
mov
in
cmp
andl
jno
loopne
add
scas
pop
movb
jae
shll
cmc
sub
rol
mov
mov
lahf
in
cmp
adc
push
aam
sub
fs
mov
faddl
das
sbb
out
mov
scas
jecxz
inc
cmp
jp
pop
in
push
and
aas
mov
cmp
aad
rcrl
mov
sub
push
mov
sub
mov
xchg
pcmpeqd
jcxz
in
idivl
dec
mov
mov
add
fistpll
lock
xor
push
cmp
inc
inc
lods
enter
mov
push
daa
inc
into
dec
sub
in
jp
call
sbb
inc
ja
sbb
xchg
repnz
push
int
sbb
or
push
xchg
push
repnz
adc
xchg
add
inc
or
xchg
and
or
flds
aas
adc
gs
sbb
dec
cld
jle
and
xorb
mov
xor
fimuls
outsl
xor
jecxz
xchg
test
lret
jg
insb
iret
lods
mov
xchg
jle
jns
aas
into
mov
sub
sub
push
into
mov
movsb
jecxz
sahf
push
hlt
adc
lret
dec
repnz
pop
jb
dec
rorl
popf
arpl
add
add
or
and
push
loop
dec
fdivs
or
int
ljmp
in
inc
jbe
bound
pop
pop
insb
add
push
inc
pusha
xor
sub
aam
popa
push
inc
add
inc
jl
mov
ret
arpl
repz
cmp
scas
lcall
movsl
xchg
inc
and
adc
shlb
aaa
add
lock
push
sbb
or
xchg
notl
and
sub
aam
pop
adc
sahf
lock
mov
mov
movsl
lahf
or
jl
ficoml
shlb
sbb
int
push
rorb
add
aaa
pop
dec
push
xchg
sub
sbb
mov
shlb
clc
call
sbb
mov
jnp
jl
cmp
pop
jo
test
repz
lea
outsl
shlb
clc
push
mov
lcall
push
dec
add
mov
fs
mov
push
pushf
decl
les
ljmp
cli
jmp
testl
mov
inc
jne
xor
xor
add
into
repz
ljmp
and
mov
loope
lahf
bound
mov
pop
and
and
sbb
dec
in
xchg
das
dec
arpl
inc
js
mov
hlt
pop
int3
xor
clc
xlat
push
lods
push
xchg
out
add
push
fsts
setbe
mov
fisubrl
jo
inc
inc
cmp
adcb
sub
push
daa
pmulhw
roll
or
mov
in
popa
inc
cmp
or
pop
icebp
pop
cld
push
adc
mov
adc
jo
add
add
clc
add
fiadds
mov
jb
aam
cmp
xor
sti
loope
jb
push
jmp
add
aas
imulb
loope
sub
xchg
mov
inc
into
out
dec
arpl
dec
mov
mov
dec
or
sbb
push
jl
shll
fneni(8087
push
sub
and
arpl
sbb
leave
add
dec
cmpsl
adc
inc
mov
cwtl
leave
aam
xor
clc
or
int3
int
inc
je
xchg
sbb
ficomps
and
outsb
xchg
jb
in
andb
jae
scas
sarb
push
fwait
mov
mov
push
addr16
cli
pop
fxch
inc
mov
ljmp
shl
cmpsb
xor
cltd
jl
adc
inc
loopne
push
enter
ljmp
add
mov
push
loop
inc
rorl
bt
add
out
dec
popa
add
call
pop
mov
or
cmp
fistpll
xor
stc
imul
xlat
jne
js
cmp
outsb
loop
testb
sbb
add
pop
stc
cmpsl
pop
movsb
iret
stos
mov
xor
pop
push
pop
jmp
push
and
rcll
repz
adc
inc
aas
lods
inc
add
dec
daa
mov
stos
add
sarb
adc
test
popa
pusha
pop
push
jp
push
movsl
xchg
sub
nop
mov
cmp
jle
pop
out
movb
stos
mov
das
jnp
push
inc
data16
jp
repz
movsl
ficoml
push
mov
mov
sub
ja
sbbb
dec
push
dec
jge
or
cmp
iret
stos
and
push
pop
mov
out
sbb
add
mov
ret
pop
xor
xor
and
add
push
ljmp
or
testl
push
jne
cmp
gs
add
xchg
cli
sbb
ss
sub
xor
mov
sub
loopne
jge
add
add
mov
mov
sub
iret
mov
adc
xchg
and
fwait
jne
fs
cmpsb
jp
inc
into
or
cmp
push
movsl
xchg
inc
rclb
xchg
repz
xchg
mov
loopne
fmull
xlat
xchg
sub
and
jo
leave
jno
or
mov
shl
mov
cltd
add
aad
jns
repz
dec
cmp
or
addr16
rcrl
sub
add
jmp
add
aaa
push
push
sbb
iret
adc
ds
adc
hlt
jne
loopne
and
xchg
jmp
das
fnstcw
test
addr16
es
adc
jae
int3
fwait
sbb
cmpsb
push
add
jmp
and
fsubrs
mov
dec
mov
mov
cmc
mov
sub
clc
jo
inc
and
mov
or
fs
xor
and
out
jmp
and
cwtl
sar
push
cmp
add
inc
jle
pop
mov
push
jmp
lods
push
lock
or
mov
pop
add
lds
and
out
sub
cmpsl
sub
out
add
inc
jo
xchg
adc
or
test
and
and
add
jecxz
lret
xlat
sbb
leave
cmc
xor
push
scas
daa
inc
and
ljmp
jb
and
bound
add
or
sbb
push
push
adc
scas
mov
xchg
aam
adc
dec
push
cli
fstpl
je
xchg
cwtl
icebp
jl
inc
sub
shrl
or
loopne
dec
push
enter
movsl
ljmp
lea
mov
sub
dec
ret
dec
sub
pusha
cmp
pop
or
adc
adc
lcall
dec
es
in
xchg
or
jo
ud1
ret
fidivrs
dec
rcrb
xor
and
stc
pop
popa
sbbb
das
add
test
arpl
adcl
fiadds
xor
int
hlt
and
adc
xor
or
and
add
push
imul
int
ret
ret
lods
dec
std
inc
ret
push
mov
and
mov
inc
sub
stos
push
ret
inc
adc
xchg
xor
pusha
mov
jns
pop
mov
pop
andl
mov
lret
movsl
adc
inc
stc
aas
andl
arpl
push
enter
call
and
in
cmp
add
sbb
pop
dec
add
sub
push
insb
stos
insb
pop
mov
adc
adc
out
xchg
clc
push
mov
divl
pmaddwd
lahf
fistl
sbb
popf
mov
push
test
jle
xchg
jae
aam
sub
add
lret
mov
push
inc
shlb
fsub
rorl
adc
inc
cwtl
cmp
sbb
dec
mov
mov
fwait
jo
orb
das
xchg
ljmp
add
cli
mov
dec
mov
inc
xor
or
pop
gs
adc
dec
retw
flds
ss
pop
das
lods
out
shl
inc
pop
pop
fidivrs
or
cltd
loopne
sbb
cld
mov
push
jg
xlat
stc
jmp
arpl
xchg
xorl
inc
pop
int3
push
out
stos
jecxz
push
adc
xor
dec
movsl
or
test
and
das
pop
mov
add
inc
ret
mov
add
lcall
mov
aas
mov
insl
jno
sub
xor
sub
push
mov
rorl
rcrl
leave
push
ret
mov
xchg
inc
and
aas
std
cmpsl
aam
push
fwait
jnp
dec
mov
push
or
lret
xchg
ja
mov
incl
push
daa
outsb
mov
dec
dec
and
insb
push
jmp
rolb
gs
test
lods
stc
imul
insl
into
push
aaa
nop
or
mov
out
add
testb
jge
int
outsl
pop
cmpsl
and
jno
push
push
inc
arpl
pop
mov
xchg
test
cmp
sahf
addb
cmp
out
dec
jnp
ljmp
sti
xor
ret
mov
fcomip
push
test
xor
es
test
or
insl
add
inc
inc
xor
adc
test
test
jnp
je
xchg
scas
add
xor
inc
stc
subl
sub
cmp
jae
inc
std
jae
sub
cmc
rorb
repnz
and
in
int
xor
and
pop
andb
pop
mov
andl
cs
or
push
mov
cld
cmpsl
mov
inc
call
fsubrp
aad
adc
mov
push
xchg
and
xor
push
cmpsl
xlat
xor
push
sub
in
add
cmpsl
icebp
cmp
pop
inc
cmp
and
gs
rolb
mov
xchg
jl
mov
mov
mov
dec
pop
scas
add
jge
bnd
pop
mov
in
cs
mov
mov
jo
add
sub
mov
test
daa
cltd
es
xor
mov
xor
scas
ljmp
xchg
mov
daa
add
aaa
xor
movsl
addb
mov
and
sub
inc
rclb
icebp
arpl
adc
pop
mov
push
xlat
daa
cs
xchg
and
lock
sub
mov
or
int3
adc
inc
add
sbb
pushf
test
adc
mov
out
sub
push
mov
ja
out
add
mov
xor
lret
sub
sarb
ret
test
das
xchg
inc
dec
and
pop
mov
pextrw
adc
movsl
inc
xorb
test
and
jnp
out
mov
jno
cmp
mov
mov
cmp
pop
addb
mov
aam
adc
cmc
imul
cmp
subb
mov
pop
fwait
ret
and
iret
jmp
push
aam
loop
stos
mov
fs
addr16
pop
push
shr
aas
std
filds
jmp
jp
and
les
inc
loope
push
jp
xchg
ss
test
and
std
pop
dec
and
sahf
lea
cltd
cmc
pop
ss
fdivrp
out
mov
add
jno
das
mov
lcall
sbb
sbb
adc
ret
add
xchg
jmp
cld
lods
jl
inc
dec
push
add
lods
std
push
mov
shll
pushf
enter
add
add
divl
or
pop
adc
jmp
inc
repnz
xor
idivl
and
lds
pop
std
or
dec
mov
fucomi
mulb
je
popf
mov
aad
fnstenv
push
xlat
xchg
jbe
mov
mov
pop
mov
fdivr
or
jmp
outsb
call
movsb
dec
mov
cwtl
test
pop
pop
push
cmp
cli
andl
xor
aaa
repnz
dec
add
mov
addb
and
clc
mov
lods
out
test
mov
faddl
outsb
and
shll
mov
inc
shrl
cmpsl
mov
test
cli
adc
cmpl
xchg
sub
out
lods
arpl
mov
inc
mov
lret
xchg
fcompl
pop
daa
mov
and
lds
pop
jnp
push
lret
mov
addr16
and
nop
mov
mov
push
inc
push
jge
jge
fucomi
add
out
sbb
pop
mov
addr16
fcoml
mov
mov
or
loope
jae
pop
mov
lret
outsl
jbe
ljmp
into
and
out
or
pop
loop
jp
nop
sub
daa
mov
mov
sub
out
test
pushf
stos
in
out
mov
je
mov
dec
push
mov
cwtl
sub
in
inc
andb
in
push
out
xor
fildl
xchg
jno
jecxz
ljmp
mov
mov
cmp
mov
or
pop
lock
ret
xor
push
hlt
xchg
pop
imul
stc
adc
fistl
decb
sub
fiadds
mov
stos
cmp
mov
jbe
cmp
push
sarl
xchg
in
cmp
add
cmp
lcall
pusha
xor
xchg
adc
roll
div
xchg
xor
sti
jae
shl
inc
imul
and
test
inc
pop
cmp
sub
stc
pop
fwait
mov
fidivrl
addr16
pop
cmp
les
enter
sub
ficoml
add
or
cmp
lea
inc
push
in
movsb
sub
ss
out
ds
mov
xchg
add
cld
push
mov
push
push
shlb
pop
and
clc
sub
repnz
cltd
call
jg
stos
and
lods
repz
mov
orb
stc
rolb
and
mov
pop
shll
mov
cs
mulb
movsl
pop
gs
ja
loop
and
addr16
test
test
pop
mov
mov
and
gs
das
cltd
pop
mov
dec
in
mov
lods
or
pop
xchg
lock
orb
dec
fcmovnb
push
mov
stos
push
repz
sub
xor
add
mov
xor
and
adc
dec
cwtl
push
sbb
hlt
xor
ds
cmpl
inc
cmp
les
and
loope
and
cwtl
nop
jge
lods
pop
mov
testb
ds
sub
mov
ret
cmpsb
cli
mov
adc
xchg
fcomp
pop
jno
mov
sbb
repnz
lea
test
xlat
in
or
or
nop
mov
mov
sbb
fdivs
xor
add
clc
popa
dec
inc
mov
pop
mov
dec
sar
cmp
pop
adc
popf
and
add
ret
dec
imul
jns
inc
xlat
fs
call
add
mov
loopne
sbb
addl
ja
add
out
mov
ret
outsb
add
outsl
and
in
push
enter
scas
mov
imul
push
outsl
cltd
adc
and
call
ljmp
or
loopne
fwait
lods
pushf
pusha
loope
pop
pop
std
adc
lret
and
daa
xor
pop
inc
xor
and
jb
fs
jecxz
test
out
dec
sub
iret
roll
ret
aad
and
loopne
pop
int
sub
outsb
cvtdq2ps
ret
inc
and
and
loope
mov
imul
pop
fs
pop
fcomps
test
push
addl
mov
mul
cmp
xlat
cmp
pusha
mov
testb
loop
pushf
shlb
push
cmc
dec
jb
inc
orb
mov
sbb
stc
gs
or
pop
dec
and
stc
xor
fs
loop
add
sub
in
or
test
aas
mov
mov
or
idiv
adc
das
inc
notb
cltd
lret
jg
xor
sahf
je
hlt
loopne
mov
xor
cmp
lret
es
push
stos
shrb
shrl
test
xor
mov
mov
or
jne
sub
or
xchg
push
add
js
cmp
xchg
push
jbe
inc
push
subb
add
adc
stos
jp
adc
pop
enter
mov
jbe
mov
leave
inc
outsb
aaa
push
push
sti
mov
cmpsl
cld
imul
loop
daa
and
or
cmc
out
dec
and
in
inc
or
scas
andb
rcll
mov
stos
inc
andl
lret
jmp
lock
pusha
ret
fdecstp
xchg
add
ficoms
nop
cmc
lock
out
or
xor
inc
push
pusha
and
xor
ret
cmp
cli
dec
stos
fdiv
stos
push
repz
in
rcrl
jp
inc
mov
cmpsl
push
es
sbb
andb
ret
dec
shrl
mov
cmp
jecxz
dec
push
adc
xor
jns
dec
inc
sub
cmc
xchg
add
clc
inc
mov
stos
lahf
or
adcl
xchg
cmp
cmc
mov
dec
mov
or
mov
rol
add
lods
or
rcll
mov
addr16
xorb
loop
adc
or
daa
pusha
xlat
mov
sarl
shrb
insl
dec
xor
and
add
fistl
lods
cmp
and
out
fidivl
mov
xchg
cwtl
dec
fnstsw
test
xchg
sbb
pop
adc
adcl
out
ror
push
movsb
mov
outsb
adc
cmp
xor
fistps
jb
hlt
imul
es
xchg
sub
lods
mov
out
sub
repz
pop
push
aam
mov
mov
fdivr
sbb
adc
push
test
push
mul
mov
mov
add
stos
xor
leave
nop
movsb
pusha
outsl
cmp
clc
notb
mov
push
out
hlt
jne
loop
je
ret
sahf
or
sbbl
cmpsw
mov
jle
and
addr16
push
xchg
fldenv
xchg
shrl
subl
and
adc
bound
aad
dec
xchg
jns
shlb
inc
and
mov
pop
mov
add
mov
jb
repz
stos
jecxz
adc
in
pop
xor
lods
dec
test
icebp
pop
sti
stos
pop
clc
jb
mov
das
cmp
push
std
shlb
iret
pop
ret
mov
lret
push
insl
xor
jo
xchg
jae
mov
push
mov
adcl
stos
fs
mov
jmp
mov
sub
mov
lock
jl
arpl
inc
add
mov
and
aas
sbb
rcrl
cmp
out
cmp
adc
and
lods
jbe
sbb
sub
out
push
mov
in
testl
push
test
ja
mov
ret
daa
push
inc
xchg
cmp
cmp
stc
and
cmc
adc
adc
push
aaa
adc
inc
mov
mov
push
nop
cmp
jbe
in
and
push
xlat
adc
jecxz
loope
fstpt
mov
dec
jnp
add
xchg
fldl
lret
mov
in
xor
dec
push
icebp
and
scas
movsb
loop
frstor
push
cwtl
ds
xor
adc
int
aas
pop
jg
cmp
movsb
lock
adc
fwait
in
xchg
sbb
mov
add
push
arpl
adc
arpl
mov
movsb
xor
mov
mov
xor
cmp
out
aad
mov
lock
pop
and
xchg
mov
sub
addr16
cmp
xor
jmpw
scas
xchg
push
xchg
gs
add
lret
inc
inc
rcrb
nop
js
xlat
insl
sbb
sbb
cli
xor
cld
jns
cwtl
cltd
insb
test
cmpsb
push
push
xchg
fmulp
ss
pop
rclb
scas
repz
or
aaa
int
sti
inc
rclb
incl
nop
push
xchg
stos
outsb
js
push
addb
and
xchg
push
aad
nop
jecxz
dec
jecxz
loope
mov
jp
call
xor
in
mov
or
add
in
sti
jne
repz
inc
stos
mov
add
mov
rcl
je
cmp
outsb
out
xor
cmc
xchg
sbb
mov
addl
data16
xchg
cmpsb
push
js
mov
bound
bound
in
lods
andb
fs
idivl
imul
cltd
popf
ljmp
sub
xor
loope
stos
aam
repz
xor
or
insl
jns
cmp
jnp
adc
imull
and
addr16
icebp
bound
cmp
adc
hlt
inc
stos
jae
xor
sbb
into
or
xorl
subl
aad
pushl
push
lods
repnz
xor
fistl
push
and
inc
mov
dec
xor
xchg
xor
jno
or
mov
mov
mov
push
inc
lret
out
out
adc
mov
mov
fst
xchg
shll
shlb
mov
movsb
mov
add
ds
shlb
loopne
adc
repnz
scas
jg
loope
and
lds
lret
outsb
pusha
jle
rcrl
sub
jmp
and
xchg
sahf
stos
xchg
or
mov
pop
lcall
imul
xor
sub
daa
jmp
lds
bound
sub
mov
inc
cmp
es
mov
js
fiaddl
and
cmp
call
es
cmpsb
jg
sbb
jnp
mov
in
lock
enter
jae
insl
rclb
xchg
xchg
mov
lds
sti
xchg
jmp
sbb
sub
das
stos
pushl
push
xlat
and
cmp
xchg
les
mov
shlb
sbb
in
xchg
lods
test
jbe
pop
inc
je
decl
outsb
xor
mov
cltd
les
loopne
nop
pop
popf
ss
gs
stos
or
adc
dec
adc
loope
xchg
mov
push
cs
jnp
ja
push
mov
inc
mov
pop
cli
lret
or
push
add
jg
lods
xrelease
roll
xchg
xchg
pop
popa
shrl
add
adc
mov
loope
jp
xor
cmp
aad
lock
inc
mov
mov
jno
imul
fiadds
lret
xor
mov
cli
push
sbb
adc
mov
cs
mov
js
jnp
fdivrs
push
add
sub
xchg
sub
out
fcompl
test
insl
xchg
repz
scas
fists
cwtl
sub
jge
mov
push
inc
inc
jmp
insb
xor
repz
imul
add
adc
arpl
push
mov
adc
sbb
ljmp
mov
xchg
jmp
inc
idivb
mov
into
push
pop
push
xchg
mov
arpl
pop
xchg
movsb
mov
movnti
sbb
xor
xor
sub
shrl
and
and
dec
nop
sarl
in
sahf
test
jno
adc
cmpsb
and
xchg
out
std
jb
xchg
sbb
jb
cmp
cld
add
test
dec
push
js
jge
cmc
xor
lods
jb
xchg
xor
scas
and
ds
lods
loope
pop
cwtl
sbb
or
test
in
or
lods
arpl
es
and
mov
adcl
mov
loopne
arpl
xchg
not
std
push
in
stos
lss
pop
ret
cwtl
and
out
sbb
das
mov
rcr
lahf
fildl
ror
xchg
sbb
sub
jo
adc
add
mov
inc
mov
mov
call
and
call
stc
xor
addb
iret
mov
pushf
scas
push
cmpsl
roll
mov
out
xor
cwtl
sub
jbe
bound
xor
scas
aam
dec
ljmp
shlb
or
or
clc
sbb
or
sbb
aad
and
push
mov
push
scas
divl
cmp
icebp
andl
mov
sbb
jbe
sbb
mov
jae
enter
xor
inc
pop
js
dec
hlt
mov
jle
and
cwtl
pop
lock
incl
test
pop
add
sub
je
outsb
mov
sahf
iret
negb
loope
bound
inc
add
ficomps
push
call
fimull
jnp
js
inc
call
lcall
pop
test
mov
pcmpeqb
aaa
cli
loop
das
push
pop
arpl
jecxz
mov
mov
stc
xorb
mov
inc
jecxz
gs
imul
inc
scas
inc
mov
pop
jb
add
jmp
repz
cmpsl
or
or
jmp
icebp
in
repnz
xor
call
les
or
push
dec
pusha
adc
in
rcrl
lea
add
or
sbbb
or
popf
sarb
pop
out
arpl
mov
stos
xchg
inc
sbb
mov
jecxz
sbb
ds
sbbl
rdmsr
mov
inc
nop
inc
imul
jns
je
shll
inc
xor
xchg
push
push
pop
fwait
sub
xchg
sarb
outsl
shlb
pxor
pop
jmp
push
xor
loopne
mov
int3
movsb
xchg
add
lods
in
and
loopne
lcall
sbb
push
stos
or
mov
cmp
std
stos
and
repz
rolb
cmpsb
jge
pop
dec
sub
pop
fisubrs
jmp
repnz
xchg
sub
mov
nop
pop
loop
addl
xor
lods
add
or
xchg
insb
ja
jecxz
mov
sub
int3
scas
xlat
pop
mov
pusha
stos
imul
and
adc
imul
outsb
in
ds
cmpsb
rclb
xor
cmpsb
mov
insl
dec
nop
jbe
and
jecxz
bound
std
dec
je
xchg
xor
and
shll
cmpsl
inc
fldcw
movb
aad
lret
daa
sarl
push
orl
adc
inc
scas
or
ljmp
loopne
pop
repnz
jae
sbb
jg
and
out
test
xlat
inc
hlt
out
inc
jb
aas
cli
das
add
jb
and
aad
push
jp
sub
pop
inc
xchg
push
das
xlat
in
mov
adc
inc
dec
ror
push
mov
popa
ret
adc
movsb
adc
xchg
jb
loope
lods
adc
js
xchg
cmpsb
stos
xchg
and
adc
sbb
loop
leave
out
push
xor
pop
add
inc
lret
into
inc
pop
lret
xchg
sub
add
pusha
push
dec
xor
stos
outsb
int3
lock
inc
add
rolb
cmp
xor
rcrb
cmp
sbb
test
jae
sbb
or
mov
js
inc
pop
add
inc
nop
adc
dec
xor
push
sahf
outsl
pop
jno
sbb
mov
and
and
or
cs
inc
push
imul
xor
cmpsl
dec
adc
in
xchg
inc
pusha
int3
mov
leave
push
cmp
sub
jnp
scas
fcmove
test
inc
lods
dec
scas
push
sahf
dec
mov
mov
mov
fnclex
cmp
jecxz
cmovs
mov
adc
pop
sub
icebp
mov
out
sbb
iret
and
rclb
popa
sbb
cwtl
mov
popf
add
aad
dec
rcrl
inc
ret
push
and
js
lahf
adc
cmp
out
and
and
pusha
js
test
pop
add
mov
xchg
pop
mov
es
mov
mov
dec
repnz
out
or
ret
test
inc
and
inc
mov
dec
dec
mulb
ja
mov
pop
add
push
test
imul
sbb
insl
add
dec
dec
cmc
repz
bound
and
rcrl
mov
pop
aad
popf
xchg
mov
shll
sub
adc
push
mov
jne
shlb
or
add
pop
mov
lods
push
andb
jae
in
mov
add
dec
xor
rolb
mov
and
rolb
outsl
fsubs
rcll
decb
scas
xchg
and
mov
fdivs
mov
test
inc
mov
gs
jg
in
add
cmp
xchg
add
pop
out
mov
or
or
push
jae
les
sub
sahf
test
adc
dec
negb
adcb
xchg
xchg
xchg
js
inc
jbe
jo
inc
jle
jl
or
inc
jmp
test
push
fsubrs
cmc
dec
insl
pop
mov
xchg
push
dec
test
mov
test
icebp
stos
cld
cld
dec
mov
or
mov
push
xor
sbb
sub
mov
fildl
test
shlb
in
xlat
bound
testl
jle
inc
mov
xorl
push
mov
push
push
adc
xlat
sub
mov
ljmp
xchg
mov
push
int3
ja
add
sbb
jnp
cs
adc
inc
out
movsl
mov
pop
push
inc
stos
sbb
call
push
ficoms
push
add
pop
push
adc
jb
pop
sbb
jge
sbb
xor
pusha
mov
pop
je
xchg
dec
mov
jae
sbb
mov
pusha
mov
lock
cmc
mov
fldcw
xchg
add
scas
nop
mov
movb
out
inc
stc
aam
dec
ljmp
imul
dec
inc
and
inc
add
mov
jb
add
stc
daa
stos
push
or
test
rclb
sbb
mov
mov
cmp
jecxz
loopne
xor
in
push
ret
and
in
in
pop
movsb
add
outsl
cmp
repnz
or
imul
fcoms
add
add
cwtl
mov
or
cli
hlt
xor
loope
fsubl
loope
insb
push
pop
repz
and
or
fidivrl
scas
mov
rcrl
dec
icebp
cs
rorl
lods
orl
movsb
sub
inc
or
inc
fidivl
cmpsb
scas
arpl
lods
xchg
aaa
xchg
adc
xor
push
cli
adc
mov
dec
add
xor
cmp
pop
sub
shlb
ret
repnz
int
std
scas
cmpsl
push
cmp
inc
dec
in
add
sarb
jnp
jl
daa
pop
scas
jecxz
xchg
inc
popa
jae
add
lcall
mov
sub
push
add
jae
mov
mov
shrb
lods
or
xor
sbb
xchg
mov
rcrl
fs
out
mov
xor
jg
rol
std
add
sarb
cwtl
mov
cmp
lods
or
pusha
mov
ja
pop
dec
or
jp
ja
mov
inc
add
repz
mov
cmp
xor
mov
sarl
jbe
mov
and
sub
pushf
inc
sbb
enter
shrl
cmpsb
pop
lret
pop
mov
gs
daa
aam
sbb
arpl
out
lock
cli
mov
adc
and
pop
and
idivl
pop
stos
inc
mov
pop
jmp
mov
pusha
lds
inc
push
lea
fs
mov
int3
xchg
ret
stc
mov
insl
ret
add
icebp
xor
dec
pop
andb
jae
sbbl
jg
mov
sbb
mov
imul
adc
leave
cs
sbb
mov
add
xor
cmc
cs
pop
cmp
adcb
call
in
popf
mov
cs
fldl
sbb
cmc
push
jp
cmpsb
test
dec
mov
lock
pop
jne
mov
adc
adc
xchg
sbb
xchg
loope
out
jnp
addr16
lock
lods
sbb
inc
adc
add
sub
cmp
jns
jmp
mov
push
repz
test
xor
jp
adc
das
lea
mov
inc
fdiv
fsts
sbb
jmp
adc
dec
sbb
inc
hlt
jmp
notl
mov
jno
in
gs
sbb
lahf
test
jge
lea
addr16
ljmp
call
sub
insl
jecxz
push
xor
sub
xor
loop
hlt
jp
dec
ret
int
outsl
cmp
sti
sbb
pop
sbb
imul
test
pushl
clc
or
insb
cmc
mov
nop
add
and
lcall
nop
movsb
arpl
daa
jno
sti
dec
movsb
inc
adc
leave
cltd
scas
mov
sbb
xor
daa
in
enter
stos
jbe
cmp
cmc
rcrb
jo
insl
lahf
dec
out
fucom
outsb
jo
pop
xchg
std
call
xchg
adc
nop
roll
push
lods
out
pop
adc
je
push
sbb
fcoml
in
mov
stos
mov
adc
pop
daa
adc
sbb
mov
ss
or
pop
push
sbbl
add
ret
mov
das
pushf
cmpsb
sub
test
xchg
bound
jns
call
bound
arpl
and
inc
dec
adcb
fs
nop
mov
push
mov
and
aam
adc
aam
add
in
das
and
or
sbb
data16
mov
lret
lahf
data16
cmc
sbb
sbb
lods
in
das
iret
dec
or
push
dec
shrb
xchg
orb
shlb
mov
and
shll
inc
shlb
out
lock
or
es
xchg
xor
scas
adc
and
pop
stc
xchg
pusha
inc
sub
inc
xchg
emms
shrl
mov
push
pop
imul
cmp
push
loop
outsl
add
insl
movsb
jno
out
lock
or
push
dec
push
fldenv
clc
repnz
adc
push
cmovno
mov
addr16
hlt
ds
pusha
les
and
loop
and
xor
xor
xchg
add
mov
andl
loope
mov
test
inc
inc
pop
or
push
mov
sbb
loope
adc
mov
sahf
jno
clc
imul
sahf
dec
out
test
cwtl
mov
andb
jmp
push
xor
xor
out
pop
sbb
push
shrl
and
mov
xchg
not
enter
xor
aas
jo
ss
arpl
into
into
bound
pop
cltd
inc
or
insb
jg
ret
push
repnz
and
out
fisubrs
fld
dec
xchg
push
cmp
imul
pop
in
cmp
or
xor
icebp
fcoml
pop
nop
stos
mov
bound
add
xor
pushf
push
sbb
adc
pop
mov
movsl
add
jbe
xor
arpl
add
out
sub
cwtl
cmp
xchg
in
add
clc
sub
jmp
imul
sahf
repnz
rcll
idivb
pop
sti
inc
sbb
inc
jae
nop
push
ret
adc
or
add
lods
adcb
push
inc
lea
adc
mov
sti
inc
and
mov
xorb
lahf
nop
cmpsl
test
pop
pushf
in
testl
fscale
in
jg
jecxz
rcrl
rcr
adc
push
add
sub
mov
push
bound
rcll
outsb
cmpsl
lcall
cmpsb
call
lods
pop
xor
dec
add
hlt
lods
loope
rorl
leave
adc
pop
arpl
or
dec
jb
inc
or
mov
jp
iret
and
repnz
sub
js
stos
inc
push
popl
adc
lret
shr
out
fs
adc
xor
divl
mov
in
out
mov
sbb
xchg
insb
out
and
sub
repnz
hlt
push
or
sub
adc
push
xor
add
push
imul
sub
xor
loop
dec
fwait
mov
inc
movlps
mov
daa
lods
push
test
xchg
dec
mov
mov
rep
xor
mov
mov
movsb
or
repnz
movsl
inc
lret
mov
inc
cmp
mov
daa
aaa
rcll
sti
pusha
test
inc
lea
or
test
push
sbb
add
xor
sarl
jae
and
dec
insb
xor
jnp
cmp
jne
cmp
sub
mov
movb
mov
repnz
lret
mov
push
frstor
loop
dec
aaa
arpl
sub
push
inc
pop
out
stos
lret
mov
sbb
jbe
cmp
sub
cmp
es
mov
ret
jmp
and
lods
int
pop
sub
leave
aam
mov
or
insb
dec
pop
sbb
xor
stos
push
jge
js
xchg
stos
add
dec
xchg
jge
push
scas
jmp
out
jl
pop
cmc
test
add
xor
mov
mov
outsl
clc
cmp
jle
pop
or
xchg
sbb
mov
pop
push
fldcw
dec
or
lret
out
mov
push
in
dec
pop
popa
bound
mov
lahf
jl
jecxz
or
clc
xor
rorb
aaa
shr
and
fxam
mov
pop
in
repz
rorl
mov
fs
add
or
mov
sbb
popa
and
shlb
mov
cmp
addr16
cmpsl
dec
jp
in
and
add
into
pop
add
sub
ficompl
adc
sub
fsubrl
xchg
ret
adc
inc
sbb
nop
or
adc
mov
ss
xor
xchg
push
enter
imul
sub
ret
cmp
and
jno
sub
bound
cmpsb
data16
push
or
and
ret
jbe
jbe
inc
mov
cltd
mov
call
pmulhuw
sbbb
add
aam
shlb
mov
aaa
shlb
in
fs
call
push
arpl
les
t1mskc
lret
lock
pop
and
push
add
test
jae
andl
cli
add
xchg
pop
mov
cltd
push
das
push
inc
sub
scas
cld
jg
je
add
push
jecxz
xor
ljmp
cli
nop
ret
add
cmc
mov
mov
loope
hlt
jmp
xchg
mov
mov
sbb
mov
push
stos
xchg
jno
jo
fs
xor
les
mov
dec
sub
adc
mov
mov
mov
cmp
lods
mov
inc
jbe
notb
inc
enter
ljmp
push
rolb
aam
mov
and
into
sub
imulb
and
xor
sub
lods
shlb
rcl
mov
jle
clc
and
cmp
imul
lea
loop
cmp
icebp
push
lahf
pop
rorl
jno
jae
mov
lret
std
out
pop
addr16
sbb
div
fildl
xchg
pusha
push
loope
sbb
or
cmp
push
cmpsb
sub
and
sahf
ljmp
cmp
or
stc
xor
roll
insb
scas
cli
insl
or
test
mov
leave
push
push
pop
xchg
inc
fidivrs
or
add
add
cmp
test
inc
add
mov
inc
push
js
inc
pop
fwait
shl
inc
loopne
push
xchg
mov
sub
push
jns
bound
pop
aam
stos
adc
fwait
inc
daa
sbb
insl
jecxz
push
xor
ficoml
das
push
mov
subl
or
jp
xchg
push
xlat
mov
or
xchg
ja
repz
loop
es
xor
rcrb
cmpb
sbb
inc
adc
push
sbb
and
jne
repz
mov
outsl
icebp
sub
and
mov
mov
imul
add
lds
sbb
jns
leave
pop
dec
stos
mov
pop
mov
and
and
cmc
stos
mulb
pop
xchg
mov
mov
imul
das
adc
inc
jp
ficoml
or
loopne
dec
scas
and
adc
mov
adc
test
dec
jp
nop
loopne
icebp
test
pushf
cmpsb
cmp
mov
lret
cltd
xorl
jne
test
js
jecxz
outsb
aas
xor
sub
mov
mov
roll
and
lods
xchg
ja
sti
sub
daa
stos
cmp
sbb
jecxz
lods
pop
xchg
and
pop
cwtl
daa
add
ret
sub
inc
bound
lock
dec
in
mov
dec
mov
dec
outsb
mov
out
arpl
nop
dec
xchg
into
in
push
or
or
xchg
inc
pop
mov
sub
add
test
sub
sub
pop
xor
xchg
push
add
mov
xor
aam
xor
nop
sub
xor
outsb
fnstsw
daa
xchg
ror
jae
cmp
xchg
jmp
in
add
fbstp
rclb
cmp
shll
xchg
mov
sbb
jmp
mov
fs
mov
js
xchg
push
movsb
dec
mov
add
outsl
leave
or
mov
dec
inc
pop
movsb
cmp
gs
into
pop
arpl
jmp
mulb
mov
out
xor
jne
mov
cmp
notl
xor
aad
test
lock
push
pop
dec
cld
inc
sbb
aas
out
std
sbb
sbb
and
scas
adc
repz
push
scas
icebp
bound
icebp
fst
ds
cmp
das
andl
shl
loopne
push
adc
mov
inc
push
and
rcl
pop
mov
loopne
jb
or
pusha
xchg
lock
scas
lock
adc
and
lret
sbb
cmp
xor
mov
xor
lret
jnp
call
dec
sti
xor
nop
or
mov
shll
cmp
dec
js
mov
loopne
mov
sub
incb
xchg
mov
push
or
daa
int
shrb
and
dec
cld
mov
cmp
sar
je
mov
push
decl
sahf
leave
pop
cmp
add
outsb
addr16
test
jnp
enter
ret
sub
sbb
mov
jbe
mov
push
and
test
push
mov
jecxz
and
jg
outsb
mov
mov
daa
sub
subb
dec
jno
sbb
in
jmp
xchg
loope
inc
add
add
repz
mov
pop
imul
jmp
add
pop
mulb
ljmp
pop
fisubrs
mov
cmp
enter
in
adc
mov
shr
scas
mov
stc
loop
add
xor
mov
and
push
mov
shl
stos
jge
mov
fstl
les
data16
sarb
mov
test
cld
fldcw
jae
push
pop
mov
test
mov
adc
mov
mov
mov
enter
shrl
out
xorl
cmp
hlt
push
fisubrl
out
mov
jns
and
cmpb
lea
loop
inc
icebp
sbb
sub
ret
and
dec
jo
lods
mov
rclb
cmpsl
ja
out
sti
push
pop
fcoml
sbb
mov
fwait
inc
xor
lret
icebp
xor
shlb
mov
jmp
lahf
lods
lea
enter
ds
mov
jmp
jmp
aaa
popf
nop
outsb
xor
xor
sub
or
push
sbb
movsl
push
outsb
mov
mov
mov
xorb
xor
fstl
sbb
jle
mov
sarl
clc
loopne
add
arpl
popa
sub
mov
inc
cmp
dec
push
adcl
jnp
gs
fnsave
adc
push
dec
push
or
mov
rcrb
lock
adc
pop
popa
jecxz
or
mov
pusha
repnz
es
sbb
int3
push
lret
stc
cwtl
mov
mov
xorb
andl
xor
lods
adc
add
xor
xchg
inc
loopne
mov
or
call
aam
or
icebp
add
add
sbb
int3
ret
adc
lcall
dec
sbb
test
push
inc
pop
inc
dec
adc
inc
aam
call
mov
mov
adc
daa
cmp
or
adc
xor
sbb
mov
and
ret
add
cmpb
clc
sbb
xchg
arpl
mov
jp
push
or
test
mov
adc
imul
cmc
cmp
icebp
bound
mov
mov
inc
inc
int
inc
pop
test
insb
in
stos
test
mov
add
cmpsb
mov
add
cltd
ret
lock
pushf
lret
cs
push
mov
shll
cmpsb
xor
add
rcr
pushf
ficoml
push
lahf
mov
jae
out
sbb
push
jnp
ljmp
clc
cld
mov
roll
xchg
test
xchg
loop
inc
sbb
xor
cli
repz
test
movsl
xchg
pushl
inc
loope
jp
das
xchg
xor
sub
mov
mov
sub
and
sti
push
lock
adc
and
jno
lret
and
and
sbb
mov
cmp
lods
imul
mov
rorb
out
push
jae
divl
mov
push
sbb
cli
xchg
xchg
and
or
sub
jle
jb
or
or
ret
lcall
add
pushf
jo
and
outsb
push
xor
sbb
fwait
push
cwtl
sbb
push
filds
shlb
xor
les
adc
adc
add
jecxz
es
add
sti
jb
adc
xor
or
inc
cwtl
test
push
pop
sub
aad
cmp
loop
sti
wbinvd
sub
mov
mov
pop
or
inc
test
push
sbb
jne
mov
mov
negb
iret
push
mov
mov
leave
stos
fcmovb
push
and
sbb
jo
pop
xchg
mov
jg
and
push
out
in
mov
xor
sbb
xchg
scas
dec
imul
inc
sub
jb
mov
or
push
inc
or
add
push
and
rcll
data16
repz
or
stos
mov
movsl
gs
outsl
or
ss
and
xchg
or
push
addb
push
scas
add
aaa
rorl
cmpsb
mov
adc
add
sahf
and
mov
lea
testl
pop
and
lret
out
sbb
in
mov
sbb
mov
out
sbb
scas
out
dec
dec
push
dec
notb
cmp
push
dec
adc
push
ljmp
cmpsb
or
gs
and
xlat
mov
imul
cmpsb
es
lret
hlt
jnp
mov
and
pop
mov
push
scas
cmpsb
popf
push
sub
pushf
scas
pusha
dec
or
add
fdivr
and
jnp
xor
pusha
cltd
or
and
and
cmpsl
or
xor
dec
icebp
loope
pop
mov
adc
mov
sbb
or
and
test
mov
roll
adc
and
hlt
add
les
movl
push
pop
lods
arpl
sub
outsb
pop
push
mov
inc
dec
fdivr
mov
xchg
xor
mov
push
dec
and
lret
add
aam
jne
xor
add
ret
lcall
mov
push
xorb
mov
jle
popl
pusha
loopne
and
shlb
stos
push
fimull
mov
inc
hlt
cli
movsb
mov
out
gs
out
or
insl
push
mov
push
cmp
out
add
fcmovnbe
inc
xchg
xchg
xlat
fadds
jp
cmpsl
cmpsl
jae
cltd
xor
jmp
jbe
xor
jne
jbe
arpl
enter
cltd
sub
cmp
sub
fistpll
gs
inc
fnstenv
std
jecxz
add
fiadds
dec
repnz
jp
scas
pop
lods
or
or
adc
ds
adcb
sub
fs
sub
ret
out
jne
or
xor
xor
mov
ret
repnz
syscall
ret
jl
movsl
icebp
lods
mov
pop
mull
sub
loop
lds
mov
test
cmp
jg
push
cmp
adc
mov
dec
jb
and
mov
sti
and
imul
pop
inc
inc
repnz
mov
aaa
pop
mov
out
imul
jecxz
test
sarb
mov
and
cli
adc
idivb
mov
in
repz
or
cmp
lock
in
push
adc
outsb
push
das
jns
push
jae
lea
and
int3
mov
add
push
into
adc
lea
cwtl
fdivp
mov
addl
nop
loope
mov
out
dec
leave
mov
inc
bound
jbe
push
cmp
cld
cmp
xchg
dec
xchg
cs
bound
imul
xchg
mov
sbb
fiaddl
rclb
sar
inc
iret
outsb
cmpsl
fldenv
xor
mov
int
js
icebp
add
in
rclb
adc
dec
sarb
push
xor
mov
mov
sub
mov
pop
js
inc
xor
out
nop
das
inc
xchg
push
push
daa
imul
sbb
rorb
inc
mov
fildll
sub
mov
pop
and
pusha
test
push
dec
dec
mov
mov
adc
cwtl
cld
mov
ja
and
lock
jnp
sub
xchg
enter
andl
push
popa
mov
jbe
fiaddl
test
iret
cmpsl
shlb
xchg
sub
divb
push
clc
lret
cmp
aaa
mov
cltd
inc
push
sbb
ja
ds
add
cwtl
add
lock
or
xchg
jmp
mov
inc
adcb
adc
mov
add
inc
sti
movl
into
enter
sbb
push
jb
or
ret
mov
hlt
inc
sarb
andl
movsl
mov
xchg
mov
inc
xlat
iret
lret
push
shrb
repz
jnp
dec
add
outsb
add
aaa
adc
xlat
pop
cmp
mov
outsl
adc
out
push
cmp
add
cs
add
sti
jge
xor
daa
lock
jmp
mull
stos
mov
sbb
lahf
xchg
fimuls
push
push
xor
lret
pop
xor
scas
push
shlb
jmp
push
cmc
mov
dec
mov
es
jo
cmp
in
ds
inc
jle
and
ja
mov
lods
mov
mov
pop
mov
jno
mov
mov
mov
fldlg2
sbb
enter
fmul
lods
mov
loope
fistl
lcall
sahf
sbb
mov
lock
lea
inc
mov
jecxz
lea
push
mov
inc
sbb
push
mov
and
dec
or
mov
cs
pusha
mov
in
xchg
sbb
movsb
xor
pop
popf
adc
test
insb
push
in
xor
sbb
repnz
add
mov
arpl
and
jecxz
and
jecxz
lock
add
pop
add
push
adc
pop
negl
loop
sbb
ret
mov
adc
dec
loop
icebp
arpl
push
aam
add
in
xor
add
mov
addr16
cmp
jmp
mov
and
mov
mov
sub
push
lods
mov
adc
adc
in
repnz
xorl
out
in
push
push
xor
mov
push
test
cmpsb
negl
fbld
xor
mov
xor
push
out
mov
xchg
dec
lahf
mov
xor
push
pop
inc
insl
inc
sub
add
xor
loop
test
fstps
hlt
jno
add
push
xchg
iret
and
cs
iret
add
adc
mov
mov
mov
add
mov
daa
loopne
push
jae
mov
inc
or
pop
stc
dec
dec
push
insl
ficoml
lret
shlb
or
add
orl
movsl
ret
loope
int3
rolb
mov
leave
andl
sahf
das
popf
add
or
push
leave
push
and
jnp
jge
push
inc
xlat
lea
mov
adc
jmp
rcrl
mov
nop
rcrl
mov
jl
mov
ja
out
adc
xor
orb
iret
sub
xor
int
cmp
dec
pop
mov
xchg
es
testb
inc
xchg
ss
jbe
xor
nop
enter
inc
xchg
sbb
dec
pop
scas
inc
xchg
aam
test
addr16
mov
mov
jp
mov
vpunpckhwd
outsl
sub
pop
cmc
or
xor
lahf
repnz
adc
fnstsw
mov
ret
lock
sub
xchg
xchg
xchg
rclb
lods
shrl
in
clc
pop
dec
inc
adc
pop
jmp
pop
arpl
or
fsubrl
rorb
out
lods
xor
out
and
add
mov
decb
paddsb
dec
faddl
loopne
cmp
rorl
push
jmp
ljmp
sbb
inc
cmp
cli
test
sub
in
lcall
mov
fwait
jo
divl
test
mov
and
pop
pusha
pusha
lods
xor
repnz
leave
sbbb
pop
ss
push
in
dec
xlat
cwtl
xorl
mov
jge
lgdtl
lds
mov
mov
dec
shll
ja
ljmp
pop
jb
add
lahf
mov
push
sub
fildl
les
inc
mov
in
ret
ja
or
daa
pop
mov
push
adc
mov
stc
push
loope
sub
test
and
stos
ret
push
xchg
add
pop
test
addr16
lods
dec
int3
es
shlb
mov
and
adc
push
xchg
movsb
inc
daa
sbbl
fs
dec
sbb
mov
enter
out
xor
and
loope
mov
cmp
cmp
lock
jno
ds
popf
test
jno
dec
inc
adc
xor
cmp
sahf
dec
flds
dec
cld
lret
test
stos
sub
pop
and
xor
mov
or
xchg
dec
nop
shrb
jae
insb
loop
and
xlat
inc
and
xchg
push
stc
pop
lcall
leave
push
inc
mov
scas
cmpsl
fldl
jle
push
pop
in
dec
mov
les
pop
aas
sub
scas
cmp
push
dec
and
sbb
dec
aaa
add
dec
jp
sahf
mov
bound
inc
clc
xchg
loop
cs
adc
cmp
xchg
and
mov
lea
rol
push
cli
inc
xchg
pop
adc
pop
xor
roll
or
mov
lahf
mov
jge
je
ljmp
aaa
or
clc
gs
ret
sub
loope
fidivrl
ror
jecxz
addb
lods
loopne
repz
adc
xor
mov
adc
jnp
bound
inc
inc
inc
pop
or
jno
push
ds
data16
ficoml
shll
mov
aam
scas
push
cld
pop
out
shll
mov
fdivs
jo
daa
push
lcall
icebp
es
lahf
pop
mov
leave
mov
leave
sti
xchg
mov
loop
and
lock
lea
arpl
sbb
jbe
stos
jbe
pop
fs
test
inc
adc
add
xchg
adc
data16
lret
add
pop
mov
xor
push
xor
mov
outsl
lds
insl
push
pop
push
int
mov
sbb
shll
adc
movsb
test
popa
sbb
sub
adc
sbb
dec
jo
or
jae
movsl
xchg
xchg
and
mov
jnp
mov
or
add
movsb
int
push
rol
movsb
inc
cmp
xchg
or
sub
pop
sbb
jae
sbb
mov
fs
mov
lcall
mov
push
cli
mov
sbb
push
hlt
jp
adc
scas
mov
dec
fisttpl
mov
nop
fidivrs
ljmp
cmp
mov
mov
cmp
add
cmc
mov
mov
add
hlt
adc
inc
jecxz
dec
jecxz
inc
xchg
pusha
push
add
push
push
das
and
lret
test
mov
sbb
mov
mulb
push
ret
loop
xorl
pop
jns
loope
cmp
push
jo
adc
frstor
lcall
xchg
loop
push
mov
mov
rol
out
shll
sbb
pop
mov
add
je
pop
je
in
add
popf
push
stc
imul
add
mov
std
mov
jge
inc
pop
push
adc
enter
sbb
into
inc
sbbb
sub
mov
fsubrl
dec
jo
jae
push
std
xchg
push
jecxz
sbb
add
shlb
cmp
es
ret
subb
lock
add
sti
add
adc
xor
jno
std
push
fdivrl
mov
loopne
jmp
lcall
das
aam
dec
and
shrl
inc
aaa
jbe
gs
mov
xchg
jno
lahf
in
lcall
xlat
scas
and
or
lcall
movsl
pop
jbe
xor
or
jno
push
inc
sub
pcmpeqw
jne
pop
cmpsb
lds
add
popa
adc
cmp
cmpb
lcall
mov
pop
out
inc
sbb
lods
outsb
add
lds
adc
insb
dec
loope
push
mov
loopne
out
gs
add
and
rcr
sbb
mov
xor
aaa
dec
inc
lods
es
lret
cmp
cli
rcll
scas
cwtl
mov
rcr
ds
popa
sub
pop
xchg
and
xchg
mov
adc
adc
je
cmp
andl
dec
lret
xchg
xor
aaa
test
fiadds
mov
daa
sbb
outsb
mov
jo
repz
dec
sub
lods
lret
fs
loopne
enter
mov
andb
aas
mov
xor
out
test
lret
scas
jg
cmp
testb
lock
pop
sub
mov
pop
mov
rcll
inc
xor
out
mov
sti
push
push
dec
inc
dec
lods
enter
xchg
rclb
fistl
scas
mov
inc
adc
repnz
pop
out
cmpsl
dec
aam
mov
sti
js
in
jecxz
push
and
jecxz
or
mov
inc
jbe
jl
dec
sbb
cmp
inc
mov
jl
scas
sub
pop
outsl
sub
jae
fsubl
imul
shl
lret
loopne
inc
sub
xorl
loop
xor
cmp
xchg
test
sbb
stc
test
push
jle
inc
lcall
mov
cmc
dec
roll
adc
inc
inc
xchg
mov
xor
inc
shlb
adc
adc
sbb
adc
xchg
cmpsl
jne
push
jmp
or
push
xor
repnz
cmp
push
inc
arpl
mov
dec
mov
fcoms
in
sub
stos
mov
lea
xor
adc
xchg
xchg
icebp
mov
ficomps
fcmovnb
in
fiadds
shl
frstpm(287
mov
fisubrl
movsb
fisubl
and
pop
cmp
decb
mov
cltd
mov
xlat
sub
out
sub
sahf
mov
ret
or
or
add
mov
fs
sbb
pop
sbb
loop
jmp
lea
sbb
insl
andl
or
push
lcall
mov
out
xor
out
and
mov
mov
fisubrl
addr16
popf
push
popf
fisubl
lods
push
out
loope
add
in
stos
or
testl
push
push
test
jmp
cmp
mov
loope
mov
and
jecxz
shll
xor
xor
pop
sub
jmp
cmpsl
and
stos
imul
sbb
mov
ja
dec
enter
jae
xor
push
and
sbb
sar
xchg
mov
jmp
lds
sub
pop
cmpl
adc
out
mov
xor
adc
inc
cmp
adc
fimull
ud0
test
lods
inc
in
push
nop
movsl
adc
jmp
jg
mov
call
sbb
pop
mov
cs
and
orb
pop
mov
test
sbb
incb
add
or
lret
xlat
mov
inc
xor
shrb
inc
test
lea
mov
lret
jg
xor
mov
fisttpl
aaa
push
cmc
test
in
jp
dec
sub
xor
clc
out
push
pop
cli
sahf
dec
mov
out
lock
jmp
mov
test
sti
add
sbb
adc
outsb
clc
rorb
repz
leave
mov
sub
push
scas
stc
add
lret
cld
aam
adc
or
pop
fsubs
mov
sbb
sub
jp
mov
test
jp
sbb
and
roll
mov
inc
rcr
adc
mov
jno
and
repz
inc
lock
adc
jle
lcall
rcr
sub
lret
inc
rolb
add
sub
lahf
sub
xchg
jle
shll
sbbl
mov
bound
and
and
cmpsl
and
adc
mov
xchg
fcoml
xlat
jecxz
bnd
pop
mov
pusha
and
fwait
int
xchg
pop
or
push
dec
inc
adc
btr
stc
pop
xor
push
inc
xor
arpl
jae
dec
inc
mov
arpl
cmpsb
pop
xchg
or
inc
repz
jno
mov
lret
out
push
pop
jne
pop
inc
mov
into
inc
mov
gs
testl
xorl
xchg
mov
and
jno
lret
cmp
dec
aad
testl
jns
xchg
mov
test
xchg
loop
push
ret
into
loop
les
fucomp
cli
pop
mov
adc
inc
ret
xchg
xor
in
add
mov
loope
xchg
push
sti
lahf
mov
ljmp
mov
ljmp
inc
fs
dec
jns
loop
mov
scas
jecxz
mov
xchg
jmp
mov
dec
jnp
out
les
in
leave
sbb
xor
inc
lret
ljmp
adc
jno
ds
dec
mov
push
adc
lock
ds
inc
incl
hlt
leave
inc
insb
ficoms
mov
fbstp
jl
shlb
sbb
push
mov
scas
es
in
cli
sbb
ss
movsl
ds
stc
adc
cltd
repnz
in
cmp
xchg
dec
out
inc
and
adc
xor
roll
inc
and
subb
and
add
mov
xor
lcall
xchg
cmpsl
and
popf
xchg
cmpsb
repnz
cld
adc
nop
jmp
fldenv
or
loop
test
ret
shll
xor
push
jo
fiaddl
mov
dec
inc
inc
rcl
adc
adc
mov
xlat
push
loop
dec
pusha
fmul
mov
sbb
dec
and
rorb
xchg
or
xor
aam
or
test
fnstenv
stc
popa
mov
jecxz
bound
fs
stos
cwtl
in
incl
jns
subb
xchg
inc
loopne
inc
mov
jns
xor
push
and
movsb
ret
cmp
or
ret
cmp
and
mov
insl
icebp
sub
filds
or
je
mov
ja
int
sub
mov
pop
xor
sar
loope
testl
xacquire
add
or
fisubrl
sbbb
add
insb
dec
repnz
sbb
pop
xor
movsl
repnz
aad
scas
push
mov
mov
ret
add
xor
aam
lds
cmp
outsl
js
mov
test
push
int3
addl
pop
test
mov
lock
testb
sub
es
mov
rclb
dec
loop
jae
mov
or
clc
cmp
mov
fwait
repz
xor
stos
stc
add
fs
jecxz
loopne
test
rcl
aam
dec
push
and
dec
aad
arpl
fildll
scas
jno
int
add
mov
rorb
fisttpll
rcrb
sub
push
shll
pop
call
loop
push
add
cmp
push
pop
ja
mov
or
notb
inc
pushf
mov
mov
scas
lods
inc
repnz
push
inc
aaa
xor
rcrb
test
xor
pusha
or
hlt
push
push
or
fistps
test
ffree
mov
pop
mov
add
testl
xlat
sub
js
rcrw
fmull
inc
inc
les
js
cmp
xchg
mov
jle
xor
push
jb
iret
clc
xorb
mov
mov
fmull
adc
jbe
sbb
ret
cltd
mov
rorb
lea
popf
cmpl
stos
stos
mov
inc
std
lahf
push
pop
xchg
addl
sub
sahf
mov
js
sbb
call
mov
mov
loopne
mov
scas
popa
orb
xchg
push
movsl
dec
or
call
push
or
mov
xchg
mov
mov
lock
negb
xchg
adc
je
mov
jns
rcl
mov
inc
add
mov
adc
sbb
or
cmp
arpl
lret
inc
add
fucompp
scas
pop
cmp
sub
mov
dec
nop
and
imul
andb
ret
jae
inc
inc
sbb
arpl
mov
fcmovnbe
lret
inc
icebp
push
aam
fisubl
fcmovu
das
add
enter
insl
lret
mov
aas
dec
std
scas
add
in
icebp
pop
push
leave
mov
xor
mov
addr16
push
push
or
xchg
les
les
imul
xor
push
incl
push
or
test
cltd
ds
fmul
int
and
test
aaa
imul
stos
xchg
icebp
adc
push
inc
xchg
rcll
adc
xchg
add
lock
std
sbb
loopne
nop
movsl
mov
mov
sub
sbb
mov
xor
or
or
daa
cli
or
fimull
stc
xor
xor
dec
xchg
mov
mov
or
arpl
movsb
xor
fistpl
adc
dec
cmp
popf
add
fs
cwtl
adc
mov
adc
add
or
hlt
and
fwait
add
stos
xor
add
sub
jo
mov
xor
dec
xor
lods
and
movsl
jecxz
and
cmp
cmp
in
scas
xchg
push
cmp
xchg
icebp
daa
mov
mov
mov
inc
sahf
mov
add
nop
cmc
aas
mov
xchg
into
jbe
lods
pusha
ret
xchg
pushf
test
shlb
xchg
pusha
rol
sub
shll
mov
mov
hlt
insl
cmp
xor
mov
imul
shrb
jno
xchg
rcrl
add
or
lock
push
mov
dec
xchg
rcrb
pop
cmpsl
push
sub
mov
comiss
arpl
and
ret
jno
push
loope
ret
push
mov
inc
push
es
cmp
cmp
push
mov
bnd
add
scas
or
dec
sub
adc
sbb
fcmovbe
push
addr16
lods
nop
push
mull
pusha
add
ffreep
dec
mov
in
and
adc
roll
jle
mov
js
shll
int3
push
faddl
add
loopne
imul
cmp
fs
insl
sbbb
dec
rclb
push
mov
xor
loopne
shrl
add
inc
adc
imul
movsb
inc
je
scas
adc
jne
popf
jo
add
out
scas
inc
icebp
sub
cmp
aas
add
mov
jnp
mov
pop
push
inc
mov
ret
jle
pusha
dec
dec
and
orl
mov
sbb
mov
and
call
nop
dec
decl
and
aad
mov
xor
sub
cmp
mov
sbb
push
insl
mov
sbb
jno
fisubs
add
jno
subl
pop
mov
and
add
ljmp
ja
dec
mov
push
inc
inc
fnsave
inc
or
cmp
sbb
fdivrs
jmp
shll
dec
jo
clc
subb
jge
mov
xor
sarb
sub
hlt
divl
int3
std
add
mov
es
mov
mov
sbb
xchg
inc
push
dec
std
addb
and
inc
mov
add
cmp
add
add
sbb
cmp
cmp
push
fstps
or
sub
add
in
dec
sub
std
jno
adc
filds
lahf
es
mov
pop
addl
dec
jo
inc
lock
movsb
mov
out
addr16
jne
dec
adc
in
or
lods
mov
arpl
fisubs
jne
out
xor
pusha
mov
out
adc
inc
inc
push
or
push
loop
and
cmp
dec
imul
fisttpll
jmp
rcr
mov
jb
lcall
mov
lret
pop
scas
addr16
mov
jg
loopne
adc
cwtl
scas
and
adc
mov
cmp
sarl
mov
xor
jmp
mov
dec
cmpsl
inc
mov
xchg
mov
or
or
add
js
sti
sbb
scas
repz
inc
push
cmpsl
mov
inc
cmp
clc
in
sbb
xchg
ret
cld
jne
mov
inc
loop
shl
mov
dec
mov
dec
clc
xor
nop
push
into
xchg
jno
pcmpeqw
jae
mov
sub
jmp
mov
inc
lock
stos
mov
test
and
add
cmc
dec
pop
push
inc
lods
xchg
and
sbb
ljmp
push
dec
pop
ljmp
dec
inc
sub
sarl
inc
jp
mov
mov
sbb
fdivs
scas
mov
mov
inc
dec
cs
rolb
mov
dec
out
mov
in
push
imul
inc
push
inc
sub
add
in
push
jl
mov
gs
push
int3
mov
adc
sub
inc
xchg
test
add
push
addb
dec
mov
cmp
add
xorl
lret
es
mov
adc
and
inc
popf
mov
jae
aam
mov
sub
sub
mov
xchg
and
adc
jb
mov
pushw
xchg
mov
sbb
shll
inc
mov
pusha
cltd
sub
jmp
stc
adc
lret
inc
arpl
mov
mov
rcrb
mov
mov
test
repnz
adc
loop
jno
xor
test
jmp
mov
inc
xchg
fisttpll
dec
ljmp
mov
sahf
cli
test
push
xchg
and
test
adc
push
and
enter
movsb
xor
add
mov
sub
psubsw
sbb
xor
xor
mov
cltd
lcall
xor
sbb
and
adc
xlat
dec
jecxz
lock
stos
jb
psllw
mov
add
sub
das
and
pop
stc
les
out
mov
mov
fs
inc
mov
jo
push
jge
xrelease
mov
ss
dec
push
inc
adc
adc
ds
lds
stos
xchg
outsl
dec
test
inc
pop
dec
xor
adc
mov
mov
jb
mov
xor
pop
mov
loope
and
or
fcoms
pop
mov
lods
popf
lods
mov
inc
xchg
xor
pop
push
clc
mov
pop
mov
fildl
mov
sub
jle
enter
lret
fcomp
sbb
popa
inc
add
dec
sub
pop
aaa
lret
sub
and
shrd
inc
and
js
fcmovne
inc
pop
add
shll
les
ret
fwait
and
adcb
dec
stc
inc
cli
into
sub
insl
test
notb
icebp
loope
xchg
in
xchg
and
xchg
inc
popa
pop
push
jae
int3
jmp
inc
dec
cmpsl
jge
mov
inc
jle
jne
xor
sub
je
inc
out
loope
ret
add
and
loopne
arpl
lcall
add
cmpsb
xor
andl
push
cmp
inc
mov
mov
inc
sti
inc
cmp
inc
loope
loopne
clc
jns
add
stos
mov
or
sbb
add
push
fimull
jns
sub
or
call
outsb
rcll
sub
mov
mov
jno
repz
cmp
dec
push
lret
add
stos
jg
xchg
aaa
mov
sbb
xor
mov
cmp
pushf
sbb
cmpsb
mov
mov
fwait
xchg
sub
add
adc
or
les
insl
lcall
xchg
shrl
inc
nop
fwait
sub
xor
sbb
add
xlat
mov
idivl
and
inc
cwtl
and
mov
dec
xchg
cmp
ret
xchg
adc
and
leave
ret
push
inc
fisubrl
sub
pop
stc
mov
mov
inc
jecxz
aaa
mov
clc
adc
or
mov
cmp
int
daa
rorl
xor
mov
jecxz
add
jo
sub
adc
fsubrl
mov
xchg
push
pop
add
sbb
inc
arpl
sti
in
xchg
jo
incl
je
rorb
lcall
dec
sub
inc
and
movsb
and
mov
cltd
daa
popf
in
push
repnz
lcall
cmpsl
fisubs
iret
hlt
and
pop
les
xchg
sbb
testl
inc
add
lock
adcl
cmp
and
mov
sub
in
scas
enter
arpl
pusha
adc
adc
lahf
loopne
sub
repz
into
inc
add
shrb
jge
ljmp
add
jecxz
test
dec
inc
enter
xor
inc
sbb
nop
xor
add
jnp
add
loop
popf
xchg
pop
mov
cmp
sbb
push
inc
inc
lds
adc
outsb
int
clc
sub
xchg
or
push
into
jae
repz
xchg
push
sub
mov
pop
pop
subl
jmp
fsubs
ret
xchg
test
fdivrs
adc
mov
xchg
mov
mov
pop
cli
aad
inc
divl
insl
es
and
daa
sub
loope
sub
push
add
gs
sahf
cwtl
gs
dec
cmp
inc
or
loop
aas
add
mov
popa
sbb
push
xor
pusha
adc
fistl
scas
xchg
xorb
or
cli
adc
sub
ffree
or
mov
xor
stos
sbb
test
sub
inc
in
jns
ljmp
adc
jnp
shlb
mov
cmc
mov
outsl
in
sarl
cmp
pusha
js
mov
and
xorb
ficoml
in
sub
inc
cwtl
ret
les
rcl
mov
mov
xchg
inc
call
lock
out
push
xor
cmpsb
ret
adc
in
mov
xor
mov
cmp
aaa
push
mov
mov
push
dec
scas
stos
mov
cmc
shlb
lock
shrb
jo
jmp
mov
jae
mov
adc
sub
popf
adc
and
or
in
and
dec
jbe
or
or
adc
pop
jmp
mov
add
add
inc
mov
lahf
dec
sub
pop
out
aam
out
push
or
mov
hlt
inc
ret
lret
test
xor
xchg
mov
mov
and
jne
mov
and
mov
popf
leave
and
cwtl
sub
inc
xchg
test
dec
add
sub
nop
mov
dec
push
cltd
test
push
xchg
dec
arpl
lea
sbb
stc
fisttps
das
pop
inc
cmpb
add
push
aam
leave
scas
pusha
lret
cli
xchg
push
mov
daa
adc
out
ficompl
pop
cmp
ljmp
and
icebp
rcr
xchg
shll
and
add
stos
add
add
daa
fiaddl
shl
dec
fcos
dec
or
cwtl
xor
mov
jge
enter
jne
lods
stos
mov
stos
mov
dec
ss
add
mov
sub
test
xor
inc
jo
repz
and
adc
mov
les
ret
inc
xor
push
push
pop
jne
adc
shrb
lahf
repnz
mov
sub
mov
adc
add
fsubl
ret
outsb
pop
ds
inc
icebp
inc
addb
sub
push
inc
mov
or
mov
xor
insb
mov
jb
dec
pusha
scas
sar
imul
and
cmp
add
fnstsw
lret
test
xchg
jg
jmp
xor
and
fsubr
ret
xchg
repnz
pop
sbb
sbb
lods
icebp
adc
mov
movups
xchg
xor
aam
scas
mov
cmpsl
and
mov
gs
aad
xchg
arpl
in
rclb
xchg
loopne
pop
out
repnz
jmp
ret
rcr
ret
jp
xor
push
lds
mov
sub
push
loope
out
push
negb
int
inc
jo
je
sbb
and
lds
jge,pn
in
push
mov
sbb
mov
push
out
adc
out
xchg
cmc
aad
cmp
and
cld
orb
push
cmc
sbb
mov
daa
faddp
xor
in
adc
and
popa
add
mov
popf
and
scas
xchg
sub
mov
dec
add
lods
sub
pushf
loopne
les
pop
xchg
loopne
adc
cmpsb
loop
in
sub
sbb
sub
push
mov
xchg
icebp
cld
aas
xor
into
jb
ret
loop
daa
fimull
icebp
out
notb
lock
gs
and
iret
mov
mov
xor
xor
sbb
std
jle
mov
mov
daa
xor
arpl
xchg
pop
stc
stc
ret
lods
xorb
add
and
call
jmp
call
inc
add
mov
jge
dec
add
adc
jb
and
imul
rolb
cmp
mov
xorb
add
push
leave
adc
mov
adc
mov
mov
xchg
mov
sbb
pop
xor
and
jbe
push
and
movsl
adc
popa
out
aas
adc
ficoms
jnp
mov
popf
mov
sahf
cmpsl
shrl
test
test
and
rcll
jns
pop
add
xor
push
repnz
jbe
mov
mov
loop
mov
addr16
or
dec
xorl
inc
in
lods
lcall
xchg
mov
sub
sbb
add
xchg
arpl
aas
mov
sbbl
add
dec
sbb
push
push
movl
loopne
push
jbe
imul
imul
mov
stos
arpl
hlt
adcb
aaa
dec
cmp
repz
out
cmp
mov
int
or
mov
xchg
push
cmc
leave
sbbb
addr16
sarb
add
xchg
mov
mov
ficoms
scas
bnd
pop
popl
push
adc
adc
add
push
sub
xlat
mov
insl
pop
inc
icebp
sbb
and
jbe
ror
icebp
xlat
addb
hlt
mov
cs
xchg
aad
icebp
insl
jl
lock
dec
divl
outsb
jg
adc
fbstp
dec
decl
cli
icebp
fwait
xchg
dec
push
mov
ss
movsl
adc
xor
dec
cmp
frstor
pop
or
mov
xchg
gs
cmp
xchg
and
data16
js
and
pusha
in
pop
inc
in
clc
and
ss
adc
pop
shlb
push
aad
pusha
shrb
mov
jmp
bound
inc
adc
mov
mov
sub
test
ret
pop
repz
jge
das
cmp
pop
pop
cmp
out
rcrl
iret
push
imul
lea
mov
add
sbb
test
dec
mov
ja
mov
jecxz
inc
pop
call
xor
test
cwtl
fiadds
addr16
and
idivb
ss
add
js
mov
dec
xor
cmpb
mov
mov
test
or
rclb
sub
enter
into
ret
stos
out
iret
shlb
pop
xor
arpl
inc
mov
addr16
xchg
andl
fwait
xor
das
inc
stos
loop
and
mov
movsb
icebp
imul
dec
loope
mov
mov
enter
mov
sub
fadds
add
xchg
jns
lock
lret
leave
sub
cmp
fwait
loope
push
out
pop
add
add
cmpsb
pop
pop
mov
dec
dec
aad
cmp
cltd
pop
jb
fidivrl
lcall
ds
gs
int3
cmp
or
subb
jne
lcall
or
bound
jl
icebp
push
push
int3
test
int3
cmp
and
dec
adc
outsb
jae
mov
sbb
imul
mov
loop
cmpsl
xchg
stc
add
mov
mov
mov
sarl
insb
jno
nop
sub
adc
ja
and
adcb
dec
and
rcl
push
sbb
xor
or
cld
ljmp
adc
mov
test
adc
pop
rcr
jo
jmp
sub
and
mov
and
jo
push
pop
xchg
adc
mov
jo
sbb
aam
pusha
inc
xor
push
and
push
jae
mov
cwtl
in
cmp
insl
pusha
xchg
in
shlb
xchg
int
adc
lret
lret
push
sbb
inc
fwait
mov
fmul
vaddpd
jl
sub
shll
adc
or
stos
adc
loopne
lods
cltd
xchg
or
cmpsb
mov
push
hlt
icebp
or
xchg
outsl
call
sub
dec
nop
fcompl
roll
imul
fisubrs
xor
gs
ss
into
pushf
movsb
and
ja
inc
lcall
xchg
pop
jle
push
popa
nop
or
fs
and
std
gs
clc
icebp
in
pusha
aaa
lds
lds
loop
dec
pusha
ret
call
jns
xchg
pushf
test
xor
mov
dec
subl
shl
int
in
sub
add
rolb
call
arpl
fucom
ljmp
aad
in
inc
icebp
shl
and
or
add
icebp
and
adc
sbb
adc
jmp
xchg
out
add
jge
or
dec
mov
leave
cmp
sbb
ljmp
sbb
addl
cwtl
adc
push
jmp
push
lcall
xchg
dec
lcall
sub
sbb
icebp
mov
jo
fidivl
stc
loopne
mov
and
push
adc
mov
sbb
sbb
add
push
ds
cmpsb
and
xor
stos
gs
loop
out
or
out
sub
jmp
das
push
jae
fildl
into
int
pop
rcrl
push
pop
add
pop
or
mov
mov
sbb
jne
mov
pop
jns
testl
dec
sarl
inc
xchg
or
mov
movsb
scas
aaa
sbb
loopne
addl
adc
int3
out
inc
daa
sbb
jecxz
adc
lahf
std
sahf
add
and
aad
push
cld
xorb
adcl
push
movsb
into
sbb
bound
ret
push
push
fldt
lret
jae
mov
inc
sbb
push
incl
imul
add
out
xchg
mov
jge
mov
jno
push
mov
jb
xor
scas
mov
xor
negb
sahf
addr16
mov
shlb
je
movsl
loop
lock
push
out
mov
loop
outsl
je
jo
adc
sysret
insb
dec
bound
inc
inc
fcmove
je
push
andps
icebp
xor
hlt
aam
test
dec
ret
jae
dec
mov
in
icebp
jg
and
hlt
inc
gs
fsub
or
in
cltd
jp,pt
test
cmp
lds
lods
test
add
stos
ret
and
inc
mov
pop
cmp
jle
jo
inc
roll
lds
push
push
sar
push
loop
mov
cmp
arpl
xlat
sbbl
cmp
out
add
aad
loop
jecxz
inc
add
or
dec
fcmovnbe
mov
or
push
rol
adc
fwait
push
add
sar
sub
call
shl
icebp
push
adc
mov
jno
je
dec
push
and
pop
sub
test
lret
cltd
cmc
mov
imul
add
insl
stos
bound
inc
pop
lahf
inc
nop
jae
adc
mov
or
das
ret
shlb
add
pop
ja
fwait
jne
push
imul
adc
dec
mov
ljmp
shlb
jg
mov
pop
hlt
bound
outsb
pushf
add
mov
xor
mov
inc
shlb
stos
mov
and
lock
xchg
xchg
sub
xchg
ljmp
add
and
jp
and
jbe
and
inc
xor
push
sbb
ret
ret
mov
sti
add
cmpsb
popa
jle
xor
mov
mov
rclb
cltd
arpl
add
mov
bnd
sbb
pusha
roll
xchg
and
push
ljmp
add
icebp
loopne
popl
andb
in
inc
pusha
std
cwtl
jl
mov
push
dec
push
mov
sub
push
pusha
mov
addr16
inc
shlb
int3
mov
imul
movsb
repnz
mov
in
outsb
add
push
ret
sbb
jno
mov
cmc
lock
stos
sbb
outsl
test
shll
mov
and
or
mov
push
lods
movsl
mov
jle
loop
stos
aas
mov
mov
pop
push
and
mov
push
jno
inc
cmp
mov
mov
sub
mov
popf
dec
xchg
lret
mov
jnp
adc
out
fwait
xchg
cmp
mov
out
mov
pop
or
test
and
mov
push
inc
xchg
dec
sarl
and
pop
add
xor
mov
lcall
repz
jae
stos
jno
pop
je
ret
test
sarb
or
loop
aaa
aas
pop
mov
cmp
jb
sbb
add
shll
jl
xchg
jo
imul
mov
test
popa
inc
sub
stos
mov
mov
aaa
ljmp
aad
add
aas
cli
push
jl
rcr
addr16
std
imul
push
outsl
and
test
fnstenv
cmp
fwait
mov
sub
rolb
mov
inc
dec
mov
pop
cmp
push
dec
sbb
shlb
xor
test
push
mov
sub
xor
ds
loop
cmp
adc
adc
sub
xor
loope
incb
icebp
pop
mov
out
dec
fistl
inc
sbbl
test
test
scas
std
xor
stos
and
and
mov
mov
test
mov
and
sub
xor
inc
test
insl
xchg
loop
and
push
fwait
rolb
adc
int
lods
insl
inc
dec
cmpb
dec
and
std
scas
das
shl
sbb
mov
xchg
xor
push
inc
adc
push
testl
sbb
js
xchg
ret
icebp
cli
ds
xchg
gs
cmpb
ret
cmpsb
mov
loopne
jp
dec
subb
cld
fs
inc
sbb
dec
cmp
fcomip
andl
addb
xchg
out
push
aad
pop
sub
or
add
inc
mov
xchg
xchg
xor
mov
xchg
adc
and
mov
lret
test
repz
xor
adc
mov
bound
mov
xchg
ret
mov
jae
insl
mov
rolb
xor
mov
rcrb
pop
xchg
jp
or
mov
roll
adc
cmpsb
addr16
jb
xorb
cwtl
jns
cmpsl
add
out
loopne
xlat
xchg
adc
and
sub
lahf
test
adc
inc
dec
stos
jp
repnz
shlb
adc
mov
das
mov
adc
shlb
hlt
push
imul
aas
sahf
mov
arpl
sbb
lcall
xchg
cwtl
loop
sbb
repnz
add
adc
dec
and
stos
xorb
xchg
xor
mov
inc
adc
and
mov
lret
stc
mov
inc
jno
popf
and
mov
push
loope
les
lcall
test
xchg
inc
shlb
outsl
pop
loop
loope
adc
push
lret
and
xor
andb
pusha
xchg
xor
adc
arpl
shll
and
mov
stos
and
mov
loopne
ret
popa
shrl
cmp
mov
loop
mov
imul
push
into
adc
icebp
sbbb
movsb
arpl
nop
arpl
jne
fisubs
je
add
ret
gs
inc
or
xchg
sbb
loop
shlb
movsb
mov
mov
popa
cmp
xor
loop
shll
dec
stos
div
shrl
push
pop
mov
mov
inc
xchg
orl
and
mov
rcrl
adc
add
xchg
adc
lock
sbb
pop
mov
sbb
add
shrb
popa
jo
xor
mov
sub
xor
xor
ret
xorl
inc
add
stc
cwtl
cmpsl
xchg
cltd
jo
sbb
or
xchg
loopne
notb
and
mov
inc
adcl
push
and
repnz
mov
dec
xchg
mov
dec
and
ja
jno
inc
and
bound
and
xor
rolb
mov
mov
pop
and
sub
and
aas
ljmp
xor
push
jae
and
popa
adcl
test
icebp
inc
add
rcll
leave
movsb
push
inc
inc
add
imul
push
jb
xor
sub
inc
in
cmp
mov
inc
jb
ret
xchg
add
xchg
rclb
movsl
and
xorl
addb
and
clc
push
and
add
and
stos
inc
je
or
add
inc
shl
lcall
mov
addr16
das
leave
adc
dec
xchg
jo
movsl
nop
pop
bound
xor
popa
inc
and
mov
mov
mov
fcmovb
and
mov
dec
mov
inc
bound
jae
mov
xor
loopne
sbb
loope
cli
addb
and
jnp
andb
jbe
adc
pop
adc
repz
inc
xor
rcrb
mov
adc
popa
inc
sbb
push
pushf
lock
mov
popa
xchg
jb
and
xor
xchg
jo
arpl
add
fldenv
add
adc
xchg
mov
loop
dec
imul
push
mov
push
xchg
test
adc
add
nop
or
fs
jp
sub
stos
lds
xchg
aam
push
cltd
shll
nop
test
cmpsl
mov
ret
sbb
inc
pop
or
movl
push
ja
xchg
pop
imul
nop
lods
addr16
fwait
and
stos
mov
push
shr
push
xchg
and
test
adc
loop
repz
or
add
jp
sub
push
or
dec
xchg
or
mov
add
imul
dec
sub
mov
nop
sub
jnp
mov
and
sub
xor
cwtl
test
lret
or
dec
xchg
or
mov
mov
or
lret
addr16
jnp
sub
stos
sub
mov
test
dec
in
lock
mov
push
sbb
dec
sub
imul
fstps
push
mov
jmp
xchg
test
stos
sub
mov
stos
push
dec
in
lock
mov
push
push
dec
sub
imul
icebp
cmp
loop
or
fwait
test
leave
dec
push
or
dec
xchg
or
mov
add
push
sbb
lret
sub
mov
nop
sub
jnp
mov
and
sub
xor
cltd
test
lret
dec
push
or
dec
xchg
or
mov
add
push
rorl
mov
nop
sub
jnp
mov
sbb
fwait
push
cmp
adc
jnp
lcall
push
stos
jnp
push
sub
popa
mov
sti
or
lcall
rcrl
insl
mov
fs
dec
sub
je
xor
stos
add
cwtl
cltd
jo
push
insb
cmpxchg
test
mov
or
mov
mov
push
loopne
rcrl
movsb
test
mov
test
push
mov
inc
sbb
stos
es
testl
ljmp
cmp
push
jnp
sub
popa
dec
push
stc
mov
add
sbb
nop
lcall
mov
dec
xchg
or
mov
add
imul
dec
sub
mov
nop
sub
jnp
mov
sbb
sahf
cmp
mov
enter
mov
xor
lret
cwtl
pop
imul
test
mov
clc
push
dec
mov
ljmp
ret
sbb
mov
jo
cmpb
sub
cmp
in
rorl
lcall
sbbl
test
inc
sbb
or
fldcw
sbb
mov
jo
cmpb
sub
cmp
in
rorl
cwtl
test
stos
dec
jb
sbbl
stos
dec
mov
inc
sbb
or
mov
arpl
sub
cmp
fwait
pop
push
sub
mov
sti
push
fwait
test
sbb
or
sbb
test
mov
dec
mov
dec
dec
push
sbb
adc
icebp
mov
loopne
xor
lret
cltd
pop
push
jno
stos
sub
mov
stc
push
cltd
test
sbb
or
sbb
stos
dec
and
mov
dec
mov
dec
dec
push
adc
icebp
mov
les
lcall
xchg
or
mov
daa
push
push
les
sub
adc
enter
add
pop
sub
nop
push
lret
jb
sub
adc
adc
shlb
xor
jb
xor
aas
imul
pusha
xchg
sbb
cmc
sub
adc
ss
and
dec
cmp
lock
lock
mov
cwtl
mov
xchg
mov
xor
inc
lret
and
fsubs
add
aam
add
rclb
xchg
pop
sub
lret
sub
xchg
jnp
lods
lret
je
jg
jno
jecxz
daa
popl
in
test
fildll
repnz
and
push
repnz
in
ljmp
push
xchg
addl
and
mov
inc
movsb
xor
mov
mov
jae
xor
and
pop
dec
shll
mov
inc
inc
shlb
pop
adc
sub
mov
dec
xchg
aaa
add
in
add
cmp
jb
xchg
shlb
out
xchg
es
jo
repz
xchg
loopne
aam
popf
add
movl
outsl
xor
call
inc
mov
pusha
dec
les
add
or
and
in
push
mov
pusha
enter
dec
rcll
orl
or
cwtl
jecxz
in
mov
mov
or
adc
les
sbb
jo
pop
xchg
jo
nop
push
cmp
movsb
sar
sbb
into
sbb
loopne
cli
or
arpl
movsl
inc
and
repnz
and
sti
lea
sub
inc
mov
push
mov
and
rolb
popa
mov
clc
cmc
cmpsl
loop
dec
jbe
push
cmp
push
test
sub
gs
es
lods
jp
loopne
orb
imul
and
sub
bound
mov
aam
and
shrb
addb
jmp
out
cmp
push
stc
and
xor
aas
mov
pusha
lret
xor
sbb
add
pusha
cwtl
adc
mov
bound
jecxz
xchg
adc
xor
int3
xor
inc
into
addb
xor
out
dec
mov
sub
jg
int
inc
rcr
xor
or
jge
stos
dec
movsb
fwait
jmp
xchg
pop
lret
sbb
inc
inc
adc
mov
dec
ljmp
xchg
inc
push
cmpsl
inc
push
insb
ja
mov
add
xchg
jmp
cmpl
gs
cld
add
fldenv
xor
mov
mov
dec
popf
call
rcrl
xlat
mov
clc
mov
mov
mov
sti
ljmp
out
xlat
addr16
and
sbb
sbb
adc
mov
or
sub
test
fistpl
xor
and
fistpll
or
lret
ds
jns
sub
pop
cmp
xchg
ret
scas
in
dec
out
push
jl
push
jecxz
add
add
or
or
mov
into
frstor
pop
xor
test
or
icebp
aam
fs
lds
sub
dec
rcr
and
dec
std
cli
fldcw
sar
dec
cmp
dec
xchg
sub
ss
inc
es
dec
aaa
test
or
out
icebp
mov
inc
cmp
push
sbb
cmp
int3
shlb
loope
das
inc
es
cmp
xchg
add
push
sbb
mov
in
push
push
inc
imul
and
inc
ds
and
push
daa
inc
ret
dec
inc
andl
fcmovbe
and
xchg
loop
rclb
or
ljmp
xor
into
aad
stos
mov
jae
test
lods
lock
ret
in
jno
data16
pop
jmp
jl
fidivrl
dec
into
cmpsl
sub
mov
mov
mov
movsb
lret
push
jp
adc
mov
les
or
push
cmp
out
mov
out
mov
inc
xor
sbbl
fistpl
push
pusha
lcall
js
lods
mov
and
imul
adc
daa
roll
sbb
jo
test
aaa
in
sub
aaa
push
into
test
ljmp
dec
dec
push
mov
ss
xor
nop
jge
lcall
rcrb
adc
pop
cltd
xor
xor
sub
xchg
ret
or
cld
cmp
arpl
icebp
fsubl
push
scas
pusha
cmp
pop
cmp
bound
push
mov
aad
and
ror
roll
mov
mov
add
push
clc
out
jnp
add
mov
mov
inc
xor
xor
mov
mov
pop
stos
xor
adc
nop
xor
inc
dec
and
roll
xchg
sub
flds
imul
lret
in
les
inc
cmpsl
sbb
repnz
shrl
push
and
sbb
cmp
shl
jns
rclb
stos
ret
cmpsl
int3
sar
and
and
lods
insl
and
sub
fadds
inc
push
pop
xor
shrb
jecxz
and
and
or
jns
dec
jecxz
pusha
lock
lahf
and
add
mov
fs
shl
add
loopne
dec
out
jmp
mov
daa
jmp
test
sub
inc
inc
jge
and
sub
aam
push
leave
mov
xchg
loope
mov
mov
mov
outsl
pop
sub
mov
es
ja
and
test
dec
sub
movsb
pop
lods
dec
inc
or
leave
push
mov
lea
orb
cmp
sub
push
add
and
dec
and
sbbl
add
dec
mov
stos
xchg
ret
push
lds
test
clc
sub
lcall
and
inc
and
lea
dec
cmp
arpl
les
das
add
nop
loop
add
push
orl
mov
ljmp
bound
arpl
lods
xchg
lcall
sub
sub
shlb
xchg
sub
xor
stos
in
imul
inc
inc
add
mov
out
ret
dec
dec
insl
daa
push
test
mov
push
loope
jmp
inc
mov
mov
adc
mov
inc
and
mov
movsl
mov
and
or
mov
add
sub
add
pusha
sbb
in
pusha
and
add
shll
dec
rol
sbb
push
mov
and
ret
loop
mov
adc
insl
imul
test
mov
test
pop
inc
inc
add
nop
dec
mov
or
hlt
mov
push
lcall
xchg
mov
out
jp
mov
test
sbb
mov
sub
cmp
mov
test
adc
jae
and
and
push
xor
xchg
lock
das
dec
lret
or
dec
pop
test
add
and
add
xchg
test
add
xor
loopne
mov
into
enter
add
ret
and
xchg
popa
jb
and
cmp
cmp
sub
jae
int3
adc
adc
shlb
test
ret
push
add
loop
sub
adc
les
and
bound
dec
imul
daa
or
xchg
lock
les
inc
pop
add
add
add
or
dec
insb
inc
pop
and
add
cmpl
sub
sub
sbbb
mov
pusha
daa
inc
cmp
leave
add
ljmp
test
loopne
inc
int3
dec
test
sub
push
or
sub
jns
sub
ljmp
repz
adc
mov
ret
xchg
sub
andb
mov
add
test
xchg
mov
mov
and
xchg
lock
inc
loopne
ja
popa
jg
jo
jb
lret
sbb
mov
das
call
das
out
cltd
xchg
xchg
adc
cmpsl
inc
divb
cmpsb
out
notb
je
jo
loop
xchg
xlat
pop
mov
push
mov
out
cmp
loop
xchg
mov
jb
mov
adc
push
addr16
push
in
xchg
negl
xchg
push
aaa
hlt
cmpsb
loope
xlat
pushl
mov
in
nop
pusha
push
movsb
inc
pushf
rclb
add
sub
adc
gs
mov
xchg
in
sbb
push
test
mov
sahf
add
adc
sbb
and
xchg
js
test
xor
in
stos
test
jnp
in
cmpb
loopne
fs
insl
in
add
sar
js
mov
jmp
in
dec
es
aam
mov
xchg
dec
popf
and
add
and
idivl
xchg
sbb
arpl
out
sub
adc
xor
inc
jp
mov
fildl
push
mov
sub
jecxz
push
fwait
push
imull
mulb
ret
mov
push
sub
sbbb
mov
std
dec
in
mov
cmpsb
dec
xchg
push
fwait
cld
cs
push
push
jg
fwait
add
fiadds
push
sub
cmp
cmp
addr16
cwtl
xsavec
cmp
jne
push
dec
test
xor
imul
subb
adc
jmp
incl
lret
andb
xchg
push
dec
add
and
add
adc
in
push
add
xchg
and
mov
movb
cli
lods
push
jno
inc
or
dec
movsl
pop
and
mov
rol
and
addr16
push
test
les
mov
mov
fldl
or
lret
adc
cmp
cltd
jle
push
loopne
pop
sub
lods
push
push
jmp
add
inc
enter
into
insl
aaa
push
mov
add
xchg
mov
and
jecxz
cmp
mov
fistpl
dec
cmp
mov
ret
sub
rorb
xor
push
ss
addr16
out
nop
and
xchg
push
xor
or
push
mov
enter
out
mov
add
sbb
dec
and
cmpsl
gs
inc
jp
jecxz
sarb
ss
mov
mov
fcmovne
or
cwtl
pop
lcall
aad
push
sub
pop
adc
es
outsl
gs
mov
jns
addb
xor
pop
xor
jecxz
cmpsb
enter
lock
push
and
and
movsb
mov
lods
add
add
push
les
jp
popa
dec
lock
inc
movw
cmp
xchg
dec
adcl
rorb
aam
call
outsb
lret
adc
out
xchg
mov
cmpsb
mov
ss
loopne
mulb
lds
adc
movsl
mov
jns
xor
xchg
in
dec
mov
sbb
pop
cmp
icebp
shlb
das
imul
lods
fiaddl
aas
lahf
hlt
and
cmp
adc
shll
out
mov
dec
add
ljmpw
ljmp
out
pop
ss
sahf
pop
negl
jmp
test
shl
pop
inc
jne
inc
jae
dec
mov
pop
push
fs
mov
mov
adc
lock
cs
adc
test
xchg
inc
add
and
ljmp
addr16
cmp
sub
mov
pop
shlb
mov
mov
dec
sub
cmpsl
sbb
repz
movsb
les
test
or
lret
sbb
dec
and
dec
mov
inc
pusha
mov
jle
cmpsb
int
push
mov
lock
in
movsl
cmp
scas
addb
adc
mov
xchg
pop
iret
push
inc
loop
mov
cs
icebp
in
icebp
mov
outsl
stos
push
out
and
jo
call
inc
leave
sbb
cmpsb
dec
sub
mov
fnsetpm(287
or
inc
adc
xor
fwait
decb
mov
lret
mov
les
jo
push
jno
mov
test
inc
ljmp
dec
pop
and
orb
cmp
arpl
mov
test
or
add
xchg
jl
or
out
and
cmp
xor
lods
in
mov
and
es
out
mov
inc
jbe
and
lock
call
and
out
sub
cwtl
sbb
add
test
sub
xchg
mov
les
push
mov
lods
add
jge
mov
daa
push
pop
and
shll
xor
daa
mov
test
out
fs
lcall
mov
adcl
xor
ret
int3
and
inc
lds
xor
xchg
mov
and
inc
out
mov
scas
int3
mov
cwtl
dec
mov
cwtl
pushf
pop
lods
add
mov
dec
out
lds
enter
pusha
jp
and
and
dec
inc
dec
mov
dec
pop
cmp
fs
pusha
je
adc
sub
cmp
inc
push
dec
xchg
lret
and
insl
push
jno
call
push
movsl
movsb
push
ljmp
xor
leave
adc
rclb
sub
mov
arpl
sub
inc
lret
insb
mov
jae
cmpsl
or
fistl
dec
push
push
xchg
aad
cmp
or
xor
sbb
inc
adc
inc
add
es
cltd
sti
arpl
push
test
mov
and
jnp
imul
mov
das
push
xlat
loopne
xchg
xchg
xchg
aam
inc
mov
je
std
mov
xchg
dec
movl
call
int3
hlt
pusha
sub
inc
movsl
ds
xchg
loop
mov
mov
mov
dec
push
xor
les
jl
shrb
imull
mov
jo
and
aad
dec
insb
in
add
push
addb
adc
xchg
mov
cmp
add
xchg
inc
aad
stos
loopne
sbb
pop
lahf
xor
or
mov
loope
sub
mov
sbb
xchg
lret
lods
xorl
imul
in
leave
xchg
ds
gs
test
add
pop
call
pop
movsl
push
stc
fidivl
fildll
les
test
and
jae
loope
and
adcb
addr16
xor
je
outsb
and
xor
imul
and
rorl
or
adc
lock
xchg
inc
out
mov
cmp
daa
jb
or
mov
mov
xchg
filds
and
lea
dec
data16
adc
add
push
mov
and
xor
aad
ja
jno
add
loope
mov
sub
or
xor
push
mov
cmpb
cwtl
addr16
stos
dec
lret
out
and
or
sbb
cld
mov
loopne
jecxz
notb
rorl
and
icebp
mov
adc
aas
cli
popf
mov
pop
xchg
les
out
mov
push
scas
loop
rcll
aad
jbe
daa
arpl
mov
sub
jb
outsb
mov
jb
jmp
mov
mov
xchg
xor
sub
in
xchg
rorw
xor
dec
or
movsb
push
gs
adc
or
adc
mov
xchg
jo
jmp
ja
insl
aas
mov
roll
lods
xchg
push
mov
and
ss
adc
in
popa
mov
xchg
es
mov
fwait
inc
dec
sahf
mov
repnz
lds
adc
mov
push
adc
cmp
mov
inc
imul
dec
jp
inc
stos
imul
ret
cltd
mov
inc
xor
cltd
fmul
sbb
mov
xchg
push
xchg
daa
out
push
sub
sub
iret
lock
push
xor
into
inc
jne
xchg
cli
mov
fisttpl
ljmp
jmp
xchg
loop
jbe
sahf
mov
and
or
inc
and
popl
dec
add
jcxz
gs
adc
add
xchg
lods
incb
les
das
fs
or
loop
dec
push
out
es
xchg
pop
adc
mov
sbb
lods
imul
push
js
xchg
add
stos
jns
divl
lcall
mov
lea
jecxz
movsb
cltd
push
push
jno
dec
out
stos
cmc
mov
add
push
jecxz
ljmp
imul
mov
xor
dec
add
cmp
movsl
push
imul
xor
arpl
sbb
add
jns
lds
aam
inc
pop
dec
jmp
jbe
push
ja
push
mov
push
mov
xchg
jle
mov
jno
pop
cmp
xor
in
div
frndint
push
add
les
and
adc
test
inc
add
lret
movsb
mov
inc
jnp
imull
add
cli
sbbb
mov
pop
or
in
lods
pop
or
ds
dec
outsl
mov
outsl
aaa
and
xlat
push
addr16
push
fs
adc
cmp
int3
and
mov
adc
inc
add
inc
add
and
andb
mov
xchg
inc
sub
shlb
fs
inc
push
lock
test
outsb
mov
inc
xor
loop
fsub
and
xor
and
ficoml
mov
lock
int3
inc
mov
fsqrt
inc
popa
and
cltd
mov
mov
or
inc
push
xchg
out
push
add
aaa
pushf
ljmp
in
mov
mov
cltd
xchg
fsubs
test
or
mov
push
xchg
insl
imul
andl
insl
loope
stos
insl
push
es
xchg
lods
dec
pop
inc
inc
dec
pop
mov
jo
mov
add
cli
xor
hlt
pop
fxtract
loopne
add
flds
arpl
ja
xchg
shll
dec
or
cmp
loop
adc
ja,pn
mov
addr16
js
and
shll
in
inc
into
out
scas
repnz
test
and
dec
cmpb
jp
loope
push
mov
and
xorl
xchg
inc
clc
xor
dec
test
popf
ja
repnz
cltd
inc
les
es
xor
inc
add
movsl
jecxz
push
inc
inc
xor
fcoml
jp
push
sbb
mov
test
scas
lret
push
leave
adc
mull
xchg
out
push
jmp
pop
adc
out
aaa
and
dec
jno
imul
lret
cmpsl
or
sub
cli
dec
sub
test
jb
inc
add
dec
fs
push
sbb
popa
mov
sbb
xchg
inc
jo
push
pop
mov
inc
fisttpl
or
lcall
lds
push
dec
mov
jb
mov
test
mov
aaa
test
ja
stos
aaa
cmpsb
fadd
data16
xor
mov
adc
cs
cltd
hlt
ja
lahf
add
repnz
or
stc
push
inc
or
movsb
or
xor
xor
dec
cmpb
push
xor
push
lea
and
pop
clc
pop
xorb
arpl
pop
div
adc
mov
push
cwtl
stos
ja
test
pushf
rcrl
cmpsl
sbb
jo
push
sahf
mov
xor
add
mov
pusha
sbb
repnz
testl
js
xchg
mov
or
orl
inc
lods
and
lahf
inc
movl
shrb
cld
inc
dec
and
inc
and
mov
pop
out
rol
or
inc
xchg
es
pusha
arpl
loopne
xchg
add
es
mov
lahf
mov
adcl
mov
adc
cmc
out
and
lods
push
pop
mov
and
imul
jg
mov
xchg
lock
cmp
lret
movsl
add
popa
inc
cmpxchg
xor
sti
test
clc
outsb
jle
add
mov
adc
cmovl
fiadds
or
dec
daa
in
add
ret
int3
and
cwtl
in
adcb
les
add
push
mov
cmc
js
sahf
andl
je
dec
inc
and
enter
out
mov
into
jae
and
push
mov
inc
test
inc
xchg
lret
sub
nop
xchg
shrb
and
xor
push
repnz
les
push
add
lret
fst
loopne
lcall
aad
pop
sbb
iret
adc
mov
mov
or
mov
push
test
mov
xchg
in
cmc
xor
pop
xchg
jne
arpl
fst
mov
shl
mov
add
arpl
push
jnp
mov
push
insl
andl
mov
pop
pop
das
or
add
enter
xor
mov
call
js
cmp
in
push
dec
inc
and
inc
add
vshufps
dec
insl
inc
fiaddl
jae
and
mov
inc
push
jg
pop
add
out
push
ss
in
dec
in
dec
pop
adc
mov
add
inc
loopne
and
dec
daa
inc
xor
nop
mov
in
add
data16
xor
adc
aas
adc
inc
cmp
adc
cmp
or
insb
pop
xor
movsl
subl
push
daa
sub
sub
dec
test
pop
test
dec
fs
xchg
nop
out
cmp
mov
insb
aaa
rorb
xchg
or
sbb
xchg
dec
out
pop
xor
popa
int3
xchg
add
cmc
xchg
outsl
push
and
sub
insl
rorb
addr16
sbb
popa
mov
enter
inc
inc
mov
in
js
outsl
xor
out
scas
or
add
or
pop
dec
cmp
in
leave
mov
mov
lahf
shrl
add
adc
dec
xor
rol
sub
mov
sbb
add
inc
add
inc
cmpsb
js
xchg
mov
jo
push
mov
cltd
xchg
movsb
imul
sti
mov
out
cmc
mov
repnz
sbb
rcrl
pop
je
lea
jns
push
ret
mov
pop
inc
dec
push
iret
xor
push
pop
xor
and
inc
rorl
dec
push
mov
mov
sub
adc
or
xchg
add
ficoms
jmp
adc
leave
sbb
pusha
scas
ss
pop
shlb
jb
push
add
enter
mov
mov
inc
test
ret
inc
aaa
or
gs
jg
std
sti
daa
mov
icebp
scas
push
adc
pop
ss
sti
xor
jae
mov
xor
mov
aad
mov
imul
icebp
subl
mov
in
mov
xor
push
mov
pop
les
dec
data16
loop
cmp
stos
jb
add
in
loopne
sbbb
add
insl
pop
xchg
jle
popa
pushf
fisubrs
mov
dec
and
imull
pop
cld
cltd
cmp
pushf
aas
push
cld
repnz
or
stos
rcll
xchg
repnz
jnp
mov
sarl
pusha
icebp
xchg
adc
cwtl
adc
arpl
mov
sbb
scas
ret
jae
and
sti
xlat
adc
mov
and
cmp
sbb
xor
xchg
sarl
mov
sbbl
and
ret
push
jg
mov
adc
dec
and
inc
popa
addr16
dec
adc
pushf
pop
pusha
push
or
and
repz
and
test
dec
loopne
push
push
ret
sub
rcrb
mov
loope
call
lock
movsb
out
test
and
xor
adc
xchg
push
sbb
and
jl
stos
jmp
sbb
inc
ljmp
xor
lret
in
mov
mov
sub
pop
inc
mov
mov
ror
push
xor
pushf
out
xor
pop
shll
jg
lods
cltd
lock
sbb
inc
or
mov
sub
mov
jmp
pop
sub
popf
xchg
or
les
stos
cmpsl
call
test
stc
imul
xor
or
shll
add
add
inc
sbb
jbe
push
leave
inc
in
pop
fnstenv
cmp
and
xor
pop
fldcw
mov
pop
data16
mov
shrl
xor
xor
jb
es
add
fsubrl
sub
xor
jg
ds
mov
mov
or
out
ja
and
in
pop
cmp
mov
push
cmpsb
push
push
cs
jg
lock
pop
mov
dec
movsb
stc
push
xchg
sbb
jp
pop
test
js
adc
call
scas
push
sub
shl
rdmsr
repz
push
push
fisubrs
push
push
out
data16
xlat
dec
lods
mov
iret
add
loop
pusha
and
mov
in
mov
fistpll
mov
das
lock
repz
shll
push
ljmp
mov
mov
lret
leave
cmpsl
pop
cmpsl
and
repz
inc
mov
je
sbb
add
adc
shll
adcl
sub
mov
sbb
mov
cmp
loopne
daa
sbb
sbb
mov
mov
sub
and
mov
fmull
out
imul
push
aas
leave
add
mov
sub
scas
inc
dec
jmp
push
sub
mov
mov
imul
sbb
sbb
mov
and
add
jbe
or
inc
sbb
fwait
or
pop
dec
xchg
sub
adc
js
js
gs
lods
pop
movsl
scas
and
ss
cmp
add
popl
mov
mov
xor
jb
pop
aad
sub
sbbb
dec
sub
out
repz
mov
lods
test
cmpsl
mov
adc
push
pop
out
aas
lcall
sbb
adc
xor
cltd
or
push
scas
sarl
xchg
neg
in
or
cmp
scas
cltd
out
int3
rcrb
aas
add
lret
imul
and
cmp
imul
jo
add
or
jns
jno
sbb
call
loop
adc
hlt
sub
scas
sub
adcl
sub
add
add
out
in
add
fdivrl
loop
xor
xchg
mov
dec
adc
add
xchg
sbb
lock
and
fisubrs
cs
and
orb
xor
nop
arpl
ret
ds
mov
add
lret
cmp
incb
fldenv
mov
lods
mov
add
in
out
sbb
push
pop
lea
shlb
jmp
cmp
loopne
lea
les
lods
xchg
inc
inc
test
filds
sbb
rolb
into
out
jae
call
pop
dec
cmc
out
and
or
jne
mov
aas
sbb
les
incb
mov
and
das
cmp
call
or
ja
rolb
inc
je
cmp
xchg
sbb
fdivr
sbb
ja
and
inc
xor
and
es
or
xchg
lods
mov
jno
nop
inc
or
adc
or
push
add
dec
add
add
cwtl
push
out
add
fstp
imul
movsl
cmpsl
cmpsl
divl
adc
dec
lret
das
fmuls
add
cltd
sub
dec
lret
arpl
pop
dec
jecxz
sbb
fstpl
sbb
in
sbb
cmc
add
mov
and
in
dec
mov
push
sub
xor
in
or
js
pusha
adc
add
and
mov
jns
dec
sbb
and
sub
cmp
inc
fwait
jmp
ret
sbb
sub
adc
movsb
mov
xorl
inc
insl
push
jnp
sub
or
int
adc
push
or
das
push
fbstp
gs
popf
in
push
or
cs
add
xor
insb
or
pop
pop
and
jge
add
inc
xor
pop
mov
lods
jmp
out
loop
add
sub
rol
or
sbb
sbb
outsb
pop
cld
jecxz
shll
rolb
movsb
sar
cmpsl
bt
push
mov
and
lcall
sbb
stos
add
dec
data16
psubsw
cmp
xor
pusha
ja
cmpsl
aas
leave
push
adc
sub
leave
call
mov
push
mov
test
jb
in
mov
hlt
add
hlt
jl
pop
call
or
outsb
and
mov
nop
mov
inc
repnz
dec
and
bound
or
inc
push
mov
fiaddl
inc
out
loop
andb
les
orb
push
or
jae
and
out
cli
adc
rolb
sbb
jb
jecxz
cwtl
stos
xor
mulb
out
negl
fsubp
shlb
out
pop
pop
push
adc
push
insl
lret
push
dec
inc
sarb
mov
dec
rcl
push
push
sbb
mov
dec
add
das
adc
cmpl
add
pop
lahf
adc
ret
pop
xor
out
inc
shl
pop
pmulhuw
dec
inc
xor
xchg
in
mov
cmpl
fdivp
dec
enter
push
pusha
es
icebp
sbb
out
ljmp
mov
loope
mov
mov
jmp
mov
ficomps
mull
lock
scas
jecxz
cmc
dec
adc
adc
movsb
sarl
stos
mov
loopw
add
lcall
cwtl
in
lea
dec
push
ret
std
sub
pop
clc
mov
mov
and
out
fimull
lret
sub
pusha
imul
lods
shrl
insb
in
orl
ret
stc
or
xchg
or
or
add
cmp
sbb
adc
inc
test
cmp
test
jmp
xchg
add
cmp
sti
mov
leave
pop
xchg
dec
mov
decb
fldt
cmp
es
ljmp
and
das
xchg
adc
and
add
popa
mov
add
mov
add
lds
cmp
movsl
popa
mov
pop
loope
les
sub
pop
xchg
leave
xchg
push
or
sbb
ds
into
orb
add
sub
push
sbb
fidivl
stos
scas
add
inc
adc
and
adcl
inc
pop
xchg
pop
pop
sub
jp
sbb
or
add
sub
iret
cmp
inc
jl
test
mov
es
push
sub
faddl
testb
lods
rol
jmp
push
notb
or
and
pusha
pusha
dec
aas
dec
adc
imul
bound
rolb
jnp
stos
sbb
pop
clc
lret
imul
inc
push
imul
sub
punpckhwd
loopne
xorb
add
push
inc
mov
push
pushf
add
loop
movb
out
dec
push
sbb
mov
dec
or
fmul
dec
inc
or
out
pop
cmpsl
xchg
loope
popa
add
in
dec
xor
sbbl
inc
bound
add
in
add
push
dec
ret
imul
inc
dec
add
shlb
nop
enter
icebp
xchg
adc
or
clc
pop
movsl
andl
cld
adc
dec
jmp
mov
iret
aad
scas
jno
insb
dec
add
lcall
dec
sahf
mov
orl
addb
and
jb
inc
das
push
ljmp
mov
pop
mov
call
imul
xchg
outsb
inc
call
or
cmpsl
outsb
mov
fcmovnu
sar
sub
mov
lods
not
push
pop
popa
out
and
shr
ja
push
iret
test
loopne
xor
repnz
jnp
pop
adc
adc
into
xchg
inc
movsb
stc
or
jecxz
inc
push
mov
das
inc
inc
jo
lcall
jge
mov
and
out
xor
mov
xchg
ds
leave
adc
and
rolb
inc
add
dec
leave
fcoms
loop
movsl
add
cmpsl
ss
int
mov
dec
mov
adc
or
xor
pop
sbb
or
dec
sbb
jae
mov
pop
incb
adc
lods
sub
out
mov
or
cmp
js
add
jecxz
sbb
incb
jg
hlt
add
lcall
lret
add
sub
xchg
rcl
mov
fcomip
sbbl
jnp
adc
add
mov
popa
sbb
aas
xor
dec
addb
daa
out
mov
push
adc
push
sub
aam
loopne
xchg
enter
cmp
mov
cs
cmpsl
cmp
inc
push
daa
in
imul
pusha
and
aam
out
xor
aaa
rorb
inc
aam
outsl
and
sub
test
cmp
stc
scas
enter
sti
add
lods
leave
xor
ss
jge
sub
in
or
add
add
xor
jnp
mov
ret
shlb
jecxz
xchg
fs
in
mov
sub
or
jecxz
movsl
jae
in
test
punpckhwd
cmp
ss
xor
sub
push
adc
test
dec
repnz
sbb
loopne
lds
ret
jp
shll
mov
iret
sbb
lods
push
arpl
add
mov
xor
divl
mov
leave
jge
dec
ficomps
and
fildll
adc
ret
data16
and
adc
adc
pop
xchg
or
inc
shll
adc
enter
push
out
or
in
outsl
jl
loopne
mov
rolb
sub
andl
loop
or
jo
repz
icebp
aam
sub
jecxz
dec
ret
add
xchg
mov
mov
cmp
inc
cmp
shl
adc
adc
int
out
inc
das
in
mov
nop
sbb
cmpsl
pop
shl
pop
mov
cs
mov
jae
sbb
sti
and
shrb
xchg
cwtl
enter
stos
xor
stos
rcrb
je
and
je
adc
shll
jno
push
movsb
cmp
adcl
add
adc
or
add
icebp
mov
test
inc
inc
xor
adc
fcom
or
push
test
icebp
in
scas
in
shrl
xchg
movsb
or
pop
sub
aam
imul
cmc
out
gs
xor
sti
push
inc
and
sbb
mov
sub
pop
lret
sbb
cmp
movsl
bound
sub
rorb
sub
iret
arpl
xlat
popf
and
cmpl
inc
scas
shll
push
insb
rolb
cmpsl
rolb
adc
mov
mov
icebp
ljmp
xchg
cmpsl
and
lock
or
sbbl
sub
mov
xor
sub
mov
orb
or
pop
ficompl
xchg
rorl
ret
jb
orl
leave
jbe
jnp
test
negl
jmp
dec
xchg
xchg
rol
jp
cmp
movsl
or
xchg
inc
sbb
sbb
xorl
pop
std
inc
arpl
mov
rcll
mov
jo
loop
movsl
push
add
jmp
mov
out
jae
cs
mov
sub
ljmp
pop
add
lds
push
push
pop
clc
xchg
rolb
aaa
jle
rcrb
in
pushf
test
or
loop
and
mov
cmp
mov
das
xchg
cmp
or
xor
scas
adc
pop
mov
outsb
push
dec
repnz
movsb
fsub
add
jecxz
out
data16
mov
add
pop
xor
pop
cmp
inc
cmpsl
loope
mov
sbb
psubw
mov
sbb
pop
or
push
pushf
lret
add
lods
iret
test
mov
mov
push
sub
pop
out
or
imulb
stos
xchg
sub
or
imul
jb
out
jmp
leave
pop
rorl
insb
inc
sub
testb
sbbb
mov
orb
pop
pusha
push
sbb
fs
call
xor
lret
and
sub
in
sub
mov
cmp
cli
rorl
sbb
mov
push
push
sub
test
rolb
sub
lods
xor
push
call
jo
loopne
and
shll
push
loopne
arpl
in
insb
sub
popa
loopne
jmp
pop
dec
mov
xor
mov
sub
push
cmp
daa
push
and
mov
and
xchg
rorb
addl
cmp
loope
movsb
arpl
or
call
dec
pop
xchg
xchg
pop
sbb
aad
pop
adc
sbb
ds
arpl
and
sbb
sub
dec
fwait
int3
cli
mov
add
gs
gs
out
rorl
jo
loop
icebp
fmull
daa
push
add
or
lcall
outsl
icebp
dec
push
scas
sbb
mov
adc
push
insb
xchg
push
inc
out
add
iret
adc
mov
jns
dec
sub
add
js
fldcw
xlat
ret
fwait
out
jmp
push
add
sub
mov
cmp
cld
lds
add
xor
mov
mov
rorl
daa
xor
loop
rorb
xlat
aaa
pop
pop
rolb
aad
cmpl
xorb
add
nop
dec
bound
or
inc
imul
xchg
mov
cmp
data16
in
lret
and
repz
nop
cld
jl
push
mov
jnp
jns
jae
sbb
insb
xor
mov
mov
sub
leave
enter
int3
movsb
std
sub
inc
cmp
daa
enter
push
jle
sbb
daa
cli
repz
inc
push
or
mov
mov
add
sbb
sub
call
xor
push
les
xor
cmp
or
not
jecxz
pop
sub
aad
cmp
jnp
jecxz
adc
aaa
imul
enter
pop
xor
mov
imul
repz
cli
rorl
xchg
adc
fwait
std
ss
dec
mov
cmp
loop
and
mov
sub
sub
fiaddl
xchg
mov
rcll
push
mov
lcall
mov
mov
loopne
testl
xor
or
repnz
and
xchg
push
fs
fs
jecxz
inc
aad
mov
mov
sbb
adc
lret
scas
pop
sti
popf
lret
push
cmp
fldenv
dec
pusha
xchg
inc
das
iret
add
stos
out
xor
xchg
loope
in
rcr
aam
and
push
jnp
xor
inc
jp
push
pop
mov
inc
aam
push
fisubl
rorb
inc
adc
loopne
inc
jae
pop
add
jecxz
add
jle
je
jae
xor
and
hlt
dec
js
je
or
aam
adc
dec
mov
xor
add
fs
mov
lcall
add
and
and
adc
add
sarl
rdpmc
sbb
sub
xchg
cltd
aam
ja
jecxz
xchg
mov
mov
xchg
cmp
test
pusha
cmp
hlt
scas
repz
subl
scas
xor
lock
pop
push
sub
icebp
dec
fisttpll
sbb
inc
pusha
pushf
dec
scas
mov
inc
add
arpl
int3
loopne
inc
cltd
sub
push
inc
or
sub
loopne
sub
dec
and
arpl
daa
hlt
bsf
movsl
imul
mov
fwait
adc
repnz
xchg
repnz
adc
add
pop
xor
or
arpl
push
sub
cmpsb
or
lds
out
rclb
mov
stc
mov
dec
adc
movsl
mov
mov
cmpb
dec
mov
js
inc
pop
dec
push
sbb
add
xor
sub
mov
test
in
ss
daa
dec
add
js
adc
cmp
mov
mov
cmp
sub
movsb
mov
stc
add
push
outsb
add
mov
nop
sbb
jne
xchg
pushf
fbld
in
xchg
aaa
adc
sub
and
mov
in
sbb
adc
scas
aam
push
cltd
ret
inc
and
imul
movsb
loopne
data16
cld
pushf
adc
cmpl
rorl
and
call
cmc
jl
push
push
sub
sub
fisubs
mov
popa
in
xor
int
mov
or
dec
mov
xchg
scas
dec
test
mov
xor
aam
mov
jecxz
es
in
pop
loopne
push
and
xorl
das
ret
xchg
fwait
test
push
mov
out
push
cmp
aam
push
xchg
test
sbb
cltd
adc
hlt
je
movsb
mov
dec
in
jb
jmp
sarb
pop
mov
into
lds
xlat
mov
push
add
lea
inc
add
in
sub
dec
ret
push
and
fs
push
dec
push
jb
add
sahf
arpl
inc
xchg
loop
mov
fwait
mov
jge
lock
cmpsb
test
sahf
outsb
sbb
gs
roll
pop
fwait
lret
pop
test
rcll
xchg
add
mov
mulb
fists
pop
idiv
push
add
clc
xchg
dec
ss
jecxz
dec
mov
ret
pop
and
mov
popa
mov
mov
lock
outsb
xor
test
out
icebp
orb
sbb
mov
cmp
cmpsb
mov
int3
loopne
out
mov
pop
mov
ja
push
mov
mov
into
inc
cmp
scas
jge
sub
int3
dec
lds
pop
pop
xchg
push
mul
arpl
test
sub
inc
popf
dec
rolb
mov
pop
pop
andl
sbb
inc
test
and
imul
rol
popf
inc
fidivrl
out
push
frstor
inc
lods
and
nop
mov
jns
adc
push
mov
ret
jno
jmp
cmpsl
mov
into
mov
dec
imul
int3
fidivrl
shl
adc
mov
sbb
xor
xlat
loope
jmp
loop,pn
xchg
jle
and
mov
mov
mov
test
mov
arpl
and
clc
psllw
inc
adc
inc
add
or
dec
sub
aaa
mov
adc
and
adc
dec
or
in
xor
stos
cmp
shlb
fsubrl
in
ficoms
popa
push
sub
xor
mov
sub
orb
ret
call
push
sahf
and
stos
inc
adc
cli
inc
mov
andb
xor
dec
adc
sbb
push
jg
push
and
popf
fcmovb
cmc
arpl
cmp
lret
xor
clc
and
inc
adc
movsl
subl
clc
xchg
lods
scas
xchg
xchg
xchg
lds
add
mov
sbb
in
ja
and
mov
xor
inc
in
mov
sbb
ja
insl
cmpb
lds
mov
shlb
inc
insb
mov
cmp
scas
in
sbbl
mov
fdivrl
xchg
icebp
push
leave
stc
sarb
rcrb
add
pop
dec
repz
xchg
inc
lock
push
and
mov
and
xor
outsl
shlb
inc
push
mov
je
push
inc
add
lods
add
inc
jno
inc
inc
divb
nop
nop
push
pop
shrb
add
cmp
aaa
stos
loope
mov
insb
xchg
shl
xor
xchg
repz
push
ja
mov
xchg
sub
hlt
dec
mov
loope
mov
jmp
add
dec
adc
mov
hlt
mov
cmpl
push
js
stos
push
lods
pop
shll
or
sbb
mov
xchg
ss
fnstenv
add
jno
mov
pop
imul
and
xchg
cmp
dec
cmp
jno
fdivs
call
popaw
ret
ret
sub
dec
inc
sub
sar
inc
movsb
lea
xchg
pop
lock
jae
stos
jmp
call
aas
out
mov
pop
add
mov
daa
push
push
test
mov
xor
repz
dec
adc
call
insl
push
mov
dec
les
cmp
movsl
call
mov
bnd
scas
cmp
jo
push
sbb
cwtl
insb
adc
and
insb
add
cli
fnsave
xchg
xchg
sbb
ret
push
xor
stc
pusha
ret
push
inc
pop
sahf
pop
fwait
pop
cmp
les
push
pop
ret
movsl
pop
cmp
repnz
dec
jne
loope
push
inc
mov
mov
pop
adc
incl
addb
and
jo
inc
or
in
xor
sub
dec
cmp
jecxz
adc
sub
repnz
test
mov
hlt
xor
push
mov
dec
dec
pusha
jae
loope
ja
cmp
repnz
sub
fmuls
xorl
imul
sub
jns
mov
mov
xchg
push
jno
mov
jle
movsb
incb
xorl
fisttpll
aas
pusha
xchg
sbb
pushf
sub
inc
xor
popa
mov
jo
push
sbb
jmp
push
das
and
jl
add
rorl
inc
jb
je
loop
cltd
bound
xor
mov
cmp
pop
ljmp
sbb
push
jo
cltd
mov
push
cmpl
repz
idivl
addr16
inc
pusha
shrb
cs
jns
push
sub
push
fstpt
pop
pop
arpl
sbb
loop
xor
lret
subb
and
sub
mov
daa
lock
or
dec
int
push
and
lock
arpl
mov
inc
mov
mov
pop
push
test
push
jb
and
mov
fistpll
scas
inc
out
fdivrl
lods
insl
mov
stos
adcl
test
mov
pusha
pusha
pop
dec
hlt
lcall
sar
mov
xor
push
dec
xchg
popf
movsl
jl
mov
jp
scas
inc
bound
xchg
movsl
dec
add
mov
cmp
jecxz
jb
xchg
loopne
mov
sbb
stos
lret
mov
repnz
mov
int
pop
inc
adc
repz
in
push
xor
cmp
mov
repz
ss
roll
sub
mov
xchg
inc
adc
cmp
push
add
movsl
mov
int
xor
imul
ret
push
loope
out
xor
adc
popa
lea
ret
pop
pop
fistpll
test
scas
gs
adc
lock
das
and
xchg
test
pop
xor
sbb
pop
pop
sub
add
mov
cmp
sbb
and
mov
dec
enter
popf
fstps
fsubl
sbb
or
test
adc
inc
icebp
inc
test
jbe
orl
stc
out
pop
shrl
ret
fimull
jno
sbb
xor
gs
dec
cmpb
out
adc
adc
push
movsb
arpl
and
hlt
pop
add
push
xor
xchg
cmc
lock
pop
or
in
mov
int3
test
daa
add
inc
test
subl
and
cs
sbb
flds
cmc
inc
inc
mov
lcall
and
nop
cli
adc
call
fwait
add
rcl
mov
mov
dec
sub
and
mov
mov
push
pop
daa
sbb
ds
mov
lock
xchg
test
lock
fcoml
rol
sti
in
repnz
push
fcmovu
rcrb
aas
clc
das
scas
rorl
push
adc
in
cmp
pop
std
or
mov
xchg
stc
dec
inc
loope
add
cmpsw
js
and
test
testb
sarl
pop
pushf
sbb
or
mov
mov
test
sub
mov
xor
xchg
mov
test
mov
sub
scas
cmc
insb
mov
fildll
mov
ss
adc
aad
lods
push
outsl
arpl
test
into
cmpsl
dec
fdivrs
adc
jo
into
test
cwtl
add
outsb
loopne
jne
outsl
js
mov
fsts
mov
hlt
mov
xor
mov
lret
fdivrs
cmp
pusha
push
lahf
pop
call
lret
mov
pushl
sbb
adc
clc
inc
repnz
and
xchg
xchg
cwtl
mov
out
ret
mov
xrelease
int
fnsave
arpl
fcomps
bts
in
inc
mov
movsl
xorb
and
stc
push
and
stos
es
rorb
loopne
iret
lods
mov
add
repnz
push
jl
ss
mov
mov
fstl
cmpsb
cwtl
push
mov
xchg
cmp
loopne
dec
jge
fildll
and
inc
jmp
pusha
cmp
scas
sub
push
dec
jns
incb
pusha
jmp
inc
mov
dec
aam
iret
test
nop
mov
fstpl
sbb
add
subb
enter
loope
out
sub
push
je
je
sub
clc
out
add
or
mov
mov
jmp
stc
cmp
bound
pop
fcmovbe
dec
jns
push
cld
rolb
aam
fsubrs
vcvtsi2ss
loope
xlat
sub
push
inc
mov
or
cmp
push
stos
stos
or
jbe
push
pusha
loope
mov
xchg
adc
call
inc
inc
es
lea
imul
add
jbe
xchg
add
jnp
call
xchg
pop
pushf
dec
cmpsl
sahf
and
cmp
pushf
insb
call
decb
daa
and
adc
cmc
imul
fsubl
xor
andl
xor
inc
out
or
push
push
sbb
div
aas
pop
sti
push
jo
mov
add
fwait
sbb
shrl
sbb
xlat
mov
in
and
fildl
ja
push
xchg
outsb
or
jne
jmp
cmp
cmc
fs
adc
insb
sub
icebp
lds
push
mov
hlt
scas
jmp
push
sbb
fnsave
xor
mov
pop
les
arpl
adc
and
mov
mov
lret
sub
imul
repz
dec
add
push
dec
scas
mul
in
out
cmp
xor
and
ljmp
andl
inc
imul
loop
xchg
xor
cmpps
jecxz
lar
jg
addr16
mov
faddp
and
or
mov
push
push
push
and
push
stos
iret
push
mov
push
stc
xor
in
repnz
push
call
add
cld
mov
out
mov
mov
jo
mov
xor
fadds
cmp
icebp
jno
push
sbb
aam
push
push
shlb
jecxz
addl
cmp
mov
inc
roll
mov
add
pop
pop
andl
mov
sub
shlb
lret
or
arpl
lret
aad
aaa
ret
push
shll
cmpsl
fs
add
sub
iret
lahf
mov
imul
dec
ret
xlat
les
fcomps
push
imull
ja
scas
jae
sub
mov
imul
test
mov
inc
in
call
repz
pop
lret
push
popa
jp
pop
or
fs
les
or
jo
dec
sahf
stos
push
and
and
mov
sbb
xor
cmpsl
or
jmp
sbb
push
dec
mov
inc
sub
mov
inc
dec
mov
test
loope
in
mov
add
cld
jmp
int
aaa
push
iret
dec
fs
shl
xchg
add
pop
ret
and
mov
movl
mov
addr16
loope
ret
in
pop
pop
pop
push
xchg
les
sbb
pop
add
xor
mov
or
sbb
dec
int3
rol
rcl
add
inc
add
add
cli
enter
repnz
add
jbe
jmp
leave
inc
sub
inc
add
mov
and
cld
add
sahf
or
jo
xor
negb
outsl
aad
mov
jno
push
push
icebp
je
push
mov
push
mov
jle
dec
jg
jecxz
add
pusha
mov
scas
mov
pusha
push
icebp
mov
pop
popa
leave
mov
lret
lock
mov
adc
xchg
addl
fnstcw
dec
mov
pusha
jns
cmp
dec
add
sarl
out
pushf
ficompl
lock
push
imul
mov
loopne
mov
adc
addb
lret
sub
or
sbb
pop
imul
dec
loopne
push
xlat
ljmp
jl
adc
std
pop
pop
mov
cld
lods
in
jmp
mov
or
ljmp
loopne
add
nop
loope
sbb
jg
mov
xchg
jns
pop
das
bound
outsb
daa
pop
sbb
sub
sbb
lods
lock
jae
popa
xchg
dec
lcall
roll
sub
jae
pop
add
mov
mov
fimuls
jle
sub
sub
shlb
or
jae
pop
push
dec
xchg
and
push
in
insb
pop
das
or
jl
setge
push
clc
shlb
outsb
loope
sub
and
sbb
punpckhbw
add
daa
pop
mov
add
das
sub
xor
pop
adc
aad
scas
movb
repnz
cbtw
cmpsb
imul
lret
loopne
inc
pop
ror
add
jl
add
add
lret
cmp
in
mov
push
sbb
push
lret
lock
leave
adc
or
mov
mov
mov
outsb
add
es
cli
add
ss
xor
out
es
xor
cmp
jle
xor
push
stos
inc
int3
sbb
lar
imul
jo
sub
jecxz
dec
ret
sub
shll
popf
roll
or
mov
adc
rcl
cmpsb
jae
ret
inc
addb
add
jle
je
add
mov
inc
lods
loope
xor
add
out
mov
fmuls
lcall
sbb
add
jb
inc
sub
pop
loop
aaa
int
dec
out
imul
pop
jmp
scas
arpl
xor
cmp
xor
add
cmpsb
iret
cs
lock
les
insl
xchg
rcl
cs
cmc
or
lods
and
cmp
and
jne,pt
push
add
cmovs
jg
fidivl
sub
jecxz
pop
call
or
push
pop
je
push
mov
cmp
shlb
fstpt
aas
and
subb
xchg
xor
mov
or
add
das
mov
in
add
and
push
fsubr
jnp
call
pop
jnp
leave
test
lret
leave
dec
orb
inc
xlat
cs
jns
cmpb
sub
pop
xchg
fdivs
fmulp
mov
or
mov
or
into
mov
push
push
dec
xor
push
or
call
sub
call
dec
aas
xchg
int
aaa
jl
mov
lcall
dec
pop
add
outsb
fstpt
xor
insl
out
xor
sti
adc
sub
mov
in
push
mov
outsl
or
mov
mov
xor
in
jle
jge
jb
inc
les
lcall
dec
call
in
adc
movsl
int3
inc
lock
loopne
das
sub
data16
jle
ds
es
sets
xchg
stc
mov
lods
outsl
or
jg
xchg
xchg
lcall
sub
cmp
add
cmp
xor
pop
repz
add
push
or
sub
aad
bound
dec
add
jb
pusha
adcb
cs
fldl
dec
xor
jl
inc
jmp
iret
push
mov
sub
sub
adc
and
and
in
aas
and
or
movsl
xchg
inc
int3
mov
fbstp
inc
ret
stc
pop
mov
inc
mov
sub
rcl
adc
push
cmpsl
and
shll
aam
adc
push
lret
or
lods
add
adc
mov
mov
mov
out
pop
rcrb
pop
sub
fnstsw
jae
iret
pop
mov
outsl
clc
inc
leave
add
mov
sbb
ret
jbe
pop
sub
popa
pop
aad
shll
ror
sbb
aaa
addr16
add
and
wbinvd
xor
and
int
aas
push
inc
cwtl
xor
and
shlb
shlb
into
int
enter
inc
loop
lcall
movsl
inc
dec
mov
data16
or
adc
mov
mov
fsubrs
cwtl
ret
lret
bound
dec
or
or
push
mov
cmp
mov
mov
push
aaa
jecxz
addr16
out
test
shl
stos
lds
fnstenv
and
in
daa
out
loop
rcr
ret
loop
xor
sbb
adc
sub
and
rcll
rsqrtps
shll
outsb
xor
push
movsb
cmp
mov
adc
je
sarl
pushl
ret
jo
lock
mov
xor
fsts
out
dec
je
sub
out
insl
inc
xor
mov
bound
imul
hlt
les
xchg
mov
add
imul
popa
adc
mov
shlb
loope
pop
and
bound
push
add
imul
push
jecxz
xchg
out
push
jp
push
adc
out
mov
and
inc
test
jmp
dec
shrb
or
jno
xor
mov
call
push
pushf
cmpsl
mov
sub
fildl
xor
jle
add
andb
aas
sub
pop
rol
lret
xor
add
add
adc
je
sbb
jle
add
mov
icebp
clc
cld
in
dec
pop
mov
and
sub
xchg
insl
dec
pop
psllw
jns
mov
jnp
cltd
adc
pop
sbb
insb
and
popa
rcr
mov
ret
lret
vpminub
out
imul
and
dec
mov
fwait
outsl
loopne
fwait
xchg
addl
or
mov
out
sarb
xchg
mov
push
aaa
imul
xor
lock
mov
nop
jge
int3
cmp
call
icebp
jb
push
pushf
cmpsb
push
mov
pop
xchg
xor
cmp
mov
adc
mov
je
push
xor
mov
mov
pushf
arpl
enter
ret
rcll
xor
sub
nop
ss
mov
pop
and
push
mov
push
fisttpll
adc
andb
xor
daa
fldt
xor
adc
fildll
jae
repz
jmp
pop
and
push
or
insl
mov
xor
push
lods
scas
sub
testb
mov
jns
xlat
push
lock
xor
int
adc
push
mov
loop
bound
loop
xchg
dec
bound
out
in
and
inc
nop
fwait
data16
jo
loope
sti
repnz
cmp
inc
add
and
pop
test
stc
in
pop
repnz
and
add
dec
xchg
les
std
into
shlb
mov
call
in
pop
mov
mov
inc
cmpb
and
dec
xlat
fsubrs
scas
movsb
mov
sbb
imulb
orb
clc
lret
adc
movsb
pop
xor
dec
mov
or
xchg
push
fnstenv
jl
jg
sbb
push
movsb
push
mov
jnp
cmc
jmp
cmp
fdivrs
add
dec
mov
repnz
or
bt
shr
nop
sub
or
push
stc
int
hlt
scas
jbe
shrb
mov
jae
push
and
jne
loop
gs
loop
cmp
imul
inc
add
scas
pop
cltd
xor
cli
xor
mov
rclb
notb
xor
push
arpl
ret
jg
jo
mov
repnz
and
nop
xor
cmp
xchg
es
test
jbe
jmp
les
jb
inc
mov
mov
cmc
repz
lock
mov
sub
add
mov
or
cmc
jnp
dec
nop
jmp
scas
gs
movsl
push
fs
cmp
sbb
and
xchg
ret
fisubs
cwtl
and
in
mov
xchg
fldenv
call
cmovae
inc
adc
pop
addr16
push
out
mov
cli
mov
data16
xor
stos
lods
add
int3
push
movsb
aas
repnz
sti
mov
scas
xchg
dec
je
cmpsl
shll
cs
jo
xor
negl
mov
scas
je
jl
adc
aaa
push
sub
lock
out
push
nop
pop
cmpsl
add
roll
shrb
add
and
mov
adc
jg
fsubs
movsb
popaw
adc
pop
mov
jno
dec
testl
sti
imul
movsl
loopne
xlat
and
add
adcl
mov
add
sub
dec
adc
sbb
inc
push
sbb
lods
mov
lret
rolb
pop
mov
or
mov
mov
fwait
and
add
lahf
test
mov
sub
push
das
jmp
dec
mov
pop
inc
sti
nop
and
sbb
jl
jmp
jne
ret
daa
add
fnstsw
in
sbb
xchg
mov
adc
ror
testb
sub
xchg
jb
lcall
sarb
fistps
jmp
mov
push
sbb
pop
adc
inc
cmp
adc
call
out
and
ss
push
mov
mov
adc
adc
push
sbb
lea
repz
pop
pop
lods
push
dec
add
les
movsl
push
push
cmp
gs
sbb
add
loopne
or
imul
xor
inc
xor
and
and
dec
rolb
or
ret
addl
mov
or
mov
ret
clc
sub
jns
imul
inc
dec
push
jne
add
jle
add
sarl
xchg
pop
jnp
ror
xorb
out
pcmpgtw
jmp
sbb
inc
out
lods
movsl
es
mov
sbb
ljmp
rol
ja
pop
pop
dec
jne
sbb
sub
dec
clc
jbe
fwait
loop
ss
or
xchg
ds
repz
sub
jno
xchg
cmp
jo
lret
mov
adc
jmp
sbb
add
cmpsb
push
add
outsl
gs
leave
sbb
psubsb
pop
jg
and
movsl
ret
jbe
xchg
ret
jbe
or
pop
jmp
dec
sbbl
sbb
mov
mov
insb
in
fnstsw
dec
add
pop
xchg
subl
popa
dec
aam
cmpsl
hlt
aam
test
push
lahf
jnp
jecxz
mov
fisubrs
push
and
popa
dec
cmpsb
bound
adc
rcrb
cmpsb
inc
mov
sbb
mov
inc
fiaddl
roll
push
pop
cmc
ss
or
inc
jo
pop
push
sub
inc
in
jae
cld
sbb
inc
dec
pushf
xor
rep
and
inc
xchg
push
ret
mov
imul
xor
mov
out
dec
mov
pop
xchg
or
enter
push
xor
das
cld
xor
sti
jmp
mov
pushf
mov
lods
xor
shl
outsb
mov
int3
adc
mov
fwait
sbb
push
push
shrb
dec
add
lds
pop
pop
out
mov
data16
pop
sbb
xor
enter
fists
je
mov
xor
xchg
repnz
mov
jge
push
push
imulb
mov
enter
neg
or
add
mov
mov
movsb
jmp
cmp
push
jo
cmp
push
ret
cld
cmpsl
dec
out
mov
icebp
je
mov
xorl
shl
mov
mov
aas
sub
test
pop
sar
idivl
sub
pop
addr16
push
mov
mov
rcrl
mov
inc
aam
movsl
ljmp
push
test
sub
cmp
pop
jae
std
dec
jle
pop
xchg
rcll
xchg
xor
lret
int3
dec
cmp
fldt
in
icebp
mov
adc
mov
mov
inc
mov
jb
scas
test
xchg
xchg
add
adc
push
and
dec
cwtl
sti
rolb
cmp
outsl
pop
push
dec
iret
arpl
add
fisttpl
adc
pop
xor
psrlw
repz
loopne
push
enter
push
and
stos
inc
rep
int
lock
push
add
jns
in
push
jae
cmp
sub
mov
dec
mov
cmpsl
push
push
mov
add
add
xor
jb
inc
rcr
ret
pop
dec
xor
inc
and
xchg
add
push
mov
mov
mov
scas
mov
add
jmp
out
mov
hlt
hlt
ss
add
mov
xor
cmp
inc
cmp
insl
xchg
mov
xchg
and
insl
pop
filds
inc
mov
xchg
inc
pop
cli
jns
jge
insl
andb
push
sub
mov
sbb
sub
test
lea
add
scas
inc
cmp
inc
shl
mov
pop
dec
lcallw
sub
push
dec
mov
push
dec
sbb
xor
xor
adc
xorl
push
cmp
movsb
jmp
and
adc
mov
fisubrl
pop
cmp
lds
xchg
add
cltd
xor
call
add
push
dec
lods
mov
rorb
cmc
jmp
out
flds
xchg
dec
jno
inc
push
imul
test
jb
stos
push
xor
stos
dec
lock
jb
ja
imul
jbe
xchg
cmpsl
and
adc
ljmp
stos
jno
jp
jmp
add
setl
or
mov
push
add
push
or
icebp
dec
cmpsl
cli
adc
and
or
cltd
jg
stos
push
mov
xchg
popa
cmpsb
insl
mov
enter
mov
or
pusha
aaa
sarl
mulb
jb
jb
xchg
inc
imul
inc
rcr
test
lea
and
ds
daa
adc
adc
fnsave
std
mov
fwait
lret
or
push
ds
loope
ds
enter
jnp
mov
clc
cmp
lcall
incb
int3
inc
add
fwait
mov
dec
pop
lods
mov
push
pusha
daa
sbb
lods
dec
xor
sub
xchg
sub
cmp
enter
sub
mov
add
xor
popa
pop
adc
or
mulb
push
repnz
aaa
aas
and
addb
stos
xchg
shl
orb
cltd
push
ret
je
mov
stos
xor
lds
sbb
mov
lods
pushf
cmpsb
xor
sbb
mov
andl
add
pop
and
push
shlb
out
jp
loop
xor
aad
xor
jns
nop
and
leave
das
jno
orb
icebp
mov
arpl
rcr
das
adc
pop
inc
adc
xchg
mov
loopne
shlb
push
icebp
dec
push
fs
push
xchg
or
xorb
or
inc
push
mov
addr16
jmp
out
mov
sbb
arpl
andb
retw
cmp
jb
push
in
mov
inc
push
or
adc
sub
fldcw
inc
sub
and
cmp
dec
push
aad
ficoml
mov
cmp
shll
and
cld
and
add
pop
adc
imul
fs
fdivrp
dec
hlt
jae
cwtl
and
aaa
ficomps
mov
sub
jo
push
sub
cmc
je
mov
dec
addr16
mov
lods
mov
jp
mov
mov
repz
xlat
iret
sub
xor
add
sbb
pop
addl
adc
adc
mov
push
cmpsb
pop
movsb
sahf
sbb
popa
int
dec
push
outsl
cs
push
pop
push
leave
adc
adcl
mov
popa
xor
lods
xchg
fistl
repz
ljmp
jecxz
cwtl
or
insb
ljmp
fdivl
jmp
push
pop
movsl
jmp
mov
mov
jecxz
sbb
mov
addr16
sub
test
cmp
dec
push
pop
or
fwait
mov
repnz
shlb
cmpsl
leave
lds
mov
out
clc
and
jl
addb
sub
dec
mov
and
orl
push
or
dec
std
movsb
lock
in
int
arpl
mov
add
and
push
shl
adc
jg
push
push
xchg
fdivrl
jmp
and
aad
inc
rclb
int3
jmp
test
cmp
xor
or
arpl
aas
popf
cwtl
push
mov
pop
pop
sub
mov
arpl
and
sbbl
test
mov
mov
stos
arpl
dec
js
push
mov
add
inc
js
js
adc
int
inc
imul
or
movsb
jle
xchg
and
mov
data16
sbb
loope
insb
lcall
mov
sbb
adc
add
or
cld
addr16
sbb
dec
fiaddl
bswap
sbb
cs
fldcw
jecxz
cmp
outsl
cwtl
sub
add
test
stc
dec
xor
out
dec
xor
orb
push
inc
fwait
and
add
jge
test
xchg
add
lahf
push
inc
sub
add
fmull
movsl
push
dec
sub
lret
in
cmp
cmp
pop
roll
stos
jecxz
mov
push
mov
and
inc
bound
pop
orb
incl
loope
jg
pop
jbe
scas
outsl
mov
push
adc
and
add
add
adc
mov
mov
mov
mov
lahf
and
repnz
mov
mov
pushf
inc
hlt
aaa
sub
sub
or
dec
mov
imul
pop
or
clc
repnz
loop
xor
inc
dec
pop
loopne
mov
shrl
hlt
sub
nop
js
movsb
pop
and
scas
popf
pop
jmp
das
icebp
mov
dec
dec
in
pop
addr16
nop
push
pop
push
fisttpll
repz
sub
cmc
mov
and
mov
clc
or
dec
mov
out
icebp
inc
mov
pop
fwait
lods
jbe
dec
mov
sub
push
fwait
pusha
sbb
add
pop
aas
lea
mulb
push
xchg
mov
inc
rcrl
mov
cwtl
mov
iret
adc
xor
sbb
mov
aas
int3
fcompp
repnz
dec
andl
js
test
and
xchg
xor
push
or
test
sbb
dec
aad
lret
repz
pop
or
pop
repz
sub
rcrl
fs
clc
inc
dec
cmp
push
add
rcl
pop
inc
mov
jo
cld
test
fstpt
nop
sub
dec
push
or
lret
sbb
adc
cmp
xor
stc
and
sbb
push
dec
mov
xchg
inc
rorl
adc
push
xor
sub
adc
and
jge
mov
shlb
sbb
jb
fistl
mov
test
add
pop
xor
push
add
ret
in
inc
lcall
hlt
push
cmp
pop
jb
sbb
std
inc
or
lock
xor
pushf
ret
pushf
mov
in
adc
insb
jge
and
push
mov
mov
lea
pop
cmp
repnz
and
jg
fistpll
arpl
pop
dec
lock
add
jmp
mov
mov
orb
arpl
push
add
sbb
jo
bound
pop
pop
imul
sti
jne
ret
out
lret
dec
cmpsl
jnp
xchg
lcall
push
imul
shll
mov
cmp
add
mov
loopne
xchg
dec
xor
adc
inc
xchg
sub
xchg
xchg
icebp
lret
pop
sub
add
ss
push
xor
jb
pop
xlat
and
stos
scas
jmp
movsb
loope
sahf
sub
sbb
xchg
scas
mov
sub
lret
mov
movsb
daa
or
xlat
mov
mov
lods
mov
fsubrs
jo
jnp
stos
sbb
adc
jge
mov
jno
andb
lods
cli
add
sbb
repz
fucom
rorb
test
add
pop
shll
in
mov
scas
es
stos
insl
mov
imul
pop
aad
dec
fmull
bound
std
cmp
clc
cli
pop
add
aaa
inc
push
and
pop
inc
xchg
int3
add
lods
jmp
mov
movsl
push
and
jne
mov
ret
das
dec
ljmp
add
cmp
aad
inc
adcb
push
aas
inc
mov
sbb
xor
std
roll
insb
add
push
add
cmpsb
push
dec
in
std
lahf
movsb
aam
push
adc
sub
adc
sti
and
inc
push
insb
das
ror
and
lods
xor
int
ret
inc
lahf
lcall
ret
call
adc
lcall
pop
inc
pop
lea
insb
push
test
outsl
jns
or
pop
outsl
pop
dec
movsb
aam
pop
pop
push
mov
fildll
divb
sub
data16
addr16
mov
loopne
incb
enter
inc
gs
add
dec
addr16
nop
or
mov
add
cmp
fs
inc
adc
aad
fidivrs
shlb
cltd
in
daa
dec
iret
popf
mov
je
xor
or
lock
xor
rcll
push
icebp
aaa
cs
xor
inc
adc
bound
lods
and
push
mov
fbld
out
mov
mov
adcb
pusha
outsb
addr16
mov
mov
in
sbb
mov
push
pop
add
nop
outsl
cli
and
jmp
mov
mov
push
repnz
mov
incb
fistpll
jle
sub
jo
ret
scas
mov
add
lods
fyl2x
jmp
mov
clc
arpl
int3
mov
mov
je
ja
aas
add
push
adc
jg
hlt
push
test
xorl
xor
push
inc
pushf
jmp
xchg
cmp
rcll
cmp
mov
push
ss
repnz
cmpsb
adc
dec
insl
lret
dec
cmp
xchg
cwtl
je
loop
cmp
push
and
add
ret
cmpsb
rorb
lcall
mov
stos
pop
enter
outsb
inc
add
lea
inc
inc
xor
call
in
mov
daa
push
out
push
arpl
adc
bswap
popa
jo
es
cmp
bound
push
rcrl
iret
sub
pop
mov
inc
sub
mov
fnstsw
out
sub
addl
iret
and
sbb
sbb
or
lret
lret
std
daa
cmp
outsb
xlat
sub
pop
sbb
into
dec
pop
xchg
or
mov
adc
mov
jg
fdivrl
fiadds
inc
add
jae
jo
rcrb
sub
scas
movsb
hlt
dec
cmpb
mov
repnz
sahf
ret
sarl
movsl
enter
ja
les
adc
jecxz
fnstsw
pop
aas
ljmp
in
add
mov
divb
sub
cmp
mov
pop
mov
adc
ret
stos
jecxz
fsubr
push
jg
and
lock
jle
mov
out
add
add
mov
das
jecxz
sub
hlt
inc
das
add
andl
inc
add
sbb
pop
inc
cs
cmp
xchg
mov
test
mov
loopne
push
dec
push
cmp
jp
mov
jno
cmpb
pop
pop
dec
shl
mov
xchg
push
test
dec
fwait
test
cmpsb
stos
lds
inc
das
loope
scas
cld
shrb
fs
dec
xor
les
ds
pop
adc
mov
pop
es
stos
pop
add
fs
or
push
popa
and
iret
pushf
sub
in
test
jno
sub
lods
dec
popl
js
lock
lahf
adc
jle
out
shll
ret
dec
push
stos
cmp
add
test
push
jb
dec
add
xor
test
insb
add
xchg
mov
mov
and
xchg
repz
inc
jl
sub
xchg
mov
push
in
and
xchg
mov
and
int
xchg
push
inc
add
mov
pop
repnz
test
add
mov
jl
addl
into
movsb
dec
loope
aas
stos
test
xor
xchg
test
mov
mov
inc
repz
shll
inc
sbb
mov
out
or
pop
sbb
fstl
inc
push
mov
cmp
divl
outsb
and
lret
aas
cwtl
or
xchg
loope
push
pop
cld
shr
out
lds
push
divb
ret
push
fiadds
pop
aam
mov
mov
sub
shlb
cli
xchg
push
mov
xor
xor
pusha
mov
xor
push
push
loop
int
mov
sbb
andb
popa
adc
out
std
and
fisttpl
hlt
jecxz
mov
jno
cltd
ret
xchg
in
mov
negb
or
out
insb
fadds
pop
fisttpl
xor
xchg
adc
aad
mov
outsb
mov
dec
push
sbb
mov
popa
jle
xlat
test
inc
nop
and
and
cmp
pop
mov
divl
and
rcll
cli
js
adc
bound
imul
push
and
jbe
sarb
sbb
int
ror
inc
inc
jl
sub
leave
pop
icebp
test
mov
rcrb
ret
lcall
and
in
rol
imul
sbb
inc
adc
sbb
cmc
add
aam
xchg
mov
inc
out
jmp
lea
fldl
jns
sbb
ficomps
mov
imul
mov
andb
fsubs
scas
hlt
cmp
mov
jae
xchg
dec
pop
pushf
jbe
arpl
push
adcb
cmpsb
es
mov
add
inc
loope
sar
jb
jmp
mov
adc
sub
shlb
fsts
fisubrs
rcr
sub
loope
roll
mov
sahf
test
xchg
adc
push
loop
xor
scas
les
xor
lds
in
inc
xchg
sbb
or
outsl
pop
in
mov
adc
rol
pushf
pop
cmpsl
loope
xlat
or
xchg
sub
xchg
sub
vsqrtpd
jns
mov
add
lret
sbb
int3
rcl
xchg
mov
fiaddl
mov
add
xchg
mov
adcb
pop
ret
jns
or
and
adc
lahf
sbbb
cld
ds
shrb
mov
jo
lahf
mov
adc
cmp
roll
and
push
jno
mov
imul
sar
into
adc
mov
jns
lods
sbb
out
out
cmp
mov
loop
icebp
in
pop
shrb
fidivs
jecxz
aad
clc
and
push
nop
push
ja
push
movsl
out
fcoml
or
in
sub
cltd
xchg
rcll
dec
pop
adc
or
das
and
shlb
je
daa
out
inc
mov
pop
sub
or
stc
push
and
dec
sub
in
mov
lahf
or
add
add
mov
iret
sarl
sbb
add
mov
cmp
repnz
cltd
or
cmc
je
sti
push
icebp
mov
or
ret
cmp
call
shlb
and
or
mov
daa
out
add
pop
push
jecxz
add
int
jmp
loopne
jge
sbb
test
inc
jecxz
jle
cmp
jp
rcrb
jl
jecxz
es
jg
je
adc
xchg
lds
add
cmp
gs
sbb
mov
shlb
lret
mov
js
jmp
aas
sbb
lods
push
push
and
fsub
sub
sbb
incl
pop
jne
cli
adc
lret
xor
xor
xor
pop
cmc
cmc
sbb
mov
clc
or
sub
dec
roll
sub
lret
les
sbb
push
push
int3
push
pop
lock
rcll
or
pop
jge
inc
lock
cmpsl
xchg
test
adc
push
or
xorl
xchg
mov
bound
pop
jo
in
aam
stos
jge
xchg
out
les
add
arpl
xchg
adc
nop
jl
cmpsl
popf
or
mov
add
jbe
cmpsl
sub
stos
and
js
out
adc
in
shll
and
adc
stos
adc
sbb
mov
stos
mov
adc
cmp
scas
sub
lea
inc
pop
jp
dec
add
add
das
cmp
pop
aas
xchg
xchg
lret
xchg
push
test
push
or
xor
pop
mov
bnd
jne
subb
into
pop
adcb
fisubs
movsb
rcrb
inc
push
sarl
ret
mov
iret
mov
leave
adc
xor
adc
sbb
add
sub
outsl
add
xchg
mov
xchg
push
sahf
add
jp
sub
mov
xor
jnp
inc
clc
jle
and
cmp
and
jns
push
dec
add
cmc
or
pop
add
icebp
ljmp
adc
cmp
ja
nop
leave
xlat
fwait
or
xchg
rorl
cmp
and
xorb
imul
adc
mov
icebp
dec
in
or
pop
xor
jae
pop
int
jno
or
sub
push
adc
mov
imul
and
jmp
mov
push
pop
ss
inc
push
stc
mov
mov
mov
call
jmp
adc
shl
adc
ss
cld
jb
sbb
rcll
repz
inc
jo
add
mov
cmp
mov
in
insb
dec
rol
mov
cmp
cmpsb
inc
ljmp
outsl
aas
dec
cmpsb
sahf
dec
and
push
sahf
rclb
repnz
adc
imul
adc
push
in
jbe
ss
jns
cltd
ja
pmulhw
das
or
pop
adc
mov
and
inc
xor
sbb
loope
fstpt
inc
xchg
inc
and
mov
aas
jno
add
mov
ret
outsl
std
mov
dec
mov
lods
fsubs
lcall
cmpsb
ror
cmp
enter
jle
scas
and
jae
sbb
ja
cmp
and
cltd
and
mov
xchg
mov
aaa
sbb
jbe
mov
and
in
inc
inc
dec
mov
mov
dec
push
sti
mov
xor
stos
jecxz,pt
inc
icebp
dec
scas
rorb
clc
test
xchg
sub
cwtl
xchg
adc
xchg
data16
popa
dec
mov
int3
add
mov
push
jae
sub
bound
and
mov
arpl
mov
ljmp
ret
xchg
or
daa
int
lods
outsb
imul
popf
xor
add
fisubrs
idivl
dec
setge
mov
mov
aas
cmp
and
add
and
pop
insl
mov
ret
lods
in
cmpsb
add
pusha
sbb
sub
pop
fnstsw
cli
mov
in
dec
adc
inc
adc
jo
add
lods
ret
stos
mov
push
fsts
push
push
mov
and
test
dec
test
dec
in
mov
push
cmp
mov
fldl
dec
xlat
add
or
mov
pop
pop
sub
orb
arpl
add
into
adc
inc
insl
add
or
fisubrs
jp
loop
mov
mov
cmp
pop
xchg
cmp
mov
pop
fisubl
fs
xchg
dec
mov
inc
sub
push
scas
test
cmp
jl
jle
stos
sub
imul
add
nop
or
pushf
and
mulb
loope
loop
pushf
jmp
jle
pop
dec
loopne
in
popa
fldt
push
cli
shlb
push
rcrl
dec
xor
mov
pop
subl
shrb
mov
sahf
inc
dec
adc
mov
lahf
jno
add
inc
dec
out
pop
dec
in
mov
inc
test
mov
xchg
mov
lahf
test
jns
jl
stos
clc
sub
mov
mov
insb
pop
out
sbb
popf
and
inc
jb,pt
sbb
scas
dec
mov
dec
rcr
cmp
or
adc
fdivs
cmpsl
imul
sub
das
inc
pushf
xor
sbb
mov
fnsave
add
jecxz
sub
xor
jg
mov
pop
pop
jae
inc
push
fs
in
push
sbb
popa
stos
sub
stc
push
fnsave
or
into
xchg
cwtl
cmp
jno
jns
mov
ljmp
orl
std
pop
xchg
mov
adc
sbb
pushf
aaa
fxch
cmp
and
jp
ds
inc
sarl
jp
fmull
pop
lds
ja
addr16
adc
sbb
xor
jo
lea
mov
fdivrp
subl
or
dec
add
pop
adc
arpl
cmp
int
cmpl
push
push
sub
push
push
lea
sbb
jae
dec
add
mov
das
into
mov
fwait
xchg
cmp
stos
fidivrs
out
rolb
sahf
movsl
xchg
add
fstps
inc
shlb
cmp
push
jecxz
adc
mov
jmp
aam
or
testl
icebp
gs
pop
inc
psubd
cltd
cli
pop
outsl
pushf
xor
push
add
mov
cld
xlat
sti
mov
mov
repz
mov
addr16
sbb
les
push
dec
outsl
push
gs
cmpb
push
push
pop
pusha
sbb
cmp
add
fsub
cmp
mov
push
outsl
or
fnsave
out
js
dec
push
mov
dec
aas
xchg
stc
pusha
sbb
adc
xor
call
and
cmp
push
jl
push
or
sub
mov
mov
gs
fisttpll
or
repz
cmpsl
inc
aaa
sahf
stc
insl
mov
ret
pop
cs
jo
aad
sub
inc
nop
aas
loopew
jg
mov
ljmp
or
test
outsb
dec
shll
cmp
dec
aas
jae
ret
scas
out
jnp
adc
push
add
imull
adc
fnstsw
and
and
aam
sub
jnp
pop
nop
push
movsl
movsb
fiadds
pop
into
sbb
dec
sub
jns
loope
or
jl
call
push
cli
data16
inc
inc
add
jp
mov
loope
pop
test
lret
insl
into
pop
push
int3
mov
das
sub
inc
inc
jmp
pop
repz
add
enter
pop
pop
dec
aad
insl
les
aaa
xchg
add
adc
xor
xchg
inc
test
pop
icebp
test
rcll
shlb
jmp
out
sbb
call
stos
jo
adc
lea
jle
shlb
add
aad
and
push
cs
hlt
jns
inc
in
mov
test
mov
cltd
out
je
lea
pushf
and
jno
adc
cmp
dec
sub
lock
lahf
ja
or
into
roll
cmp
ror
sbb
inc
cmpb
outsb
xchg
add
ret
es
out
or
xlat
mov
sbb
icebp
adc
sub
popa
ret
loop
cmc
push
cmp
pop
loope
jne
sub
popa
orl
push
test
mov
push
sub
out
aas
push
das
ds
sub
lret
daa
insb
arpl
sbb
mov
jmp
pop
pop
testl
dec
rorb
mov
and
popa
je
punpckhwd
add
mov
mov
in
adc
inc
in
test
aas
adc
inc
push
aad
fmuls
jle
lock
divl
and
nop
adcl
lds
fbld
shl
fs
je
and
testl
mov
adc
in
dec
or
inc
mov
push
xchg
ja,pt
mov
test
push
das
lods
fisubrs
cli
out
xor
dec
push
sub
in
roll
lds
add
cmp
int
pop
mov
outsl
ja
xor
dec
xor
xchg
and
aam
lret
rcll
popa
inc
xor
mov
loop
repz
sub
loop
sbb
inc
xchg
push
dec
jno
loope
into
cmp
jg
lea
repnz
loope
fimull
lret
sbb
je
aad
loopne
cmp
or
inc
hlt
dec
enter
push
mov
add
add
xor
inc
push
sbb
rcrl
dec
jno
mov
cmp
je
cmpsb
rorl
jle
and
jp
lcall
add
cmp
incl
add
aam
cmp
push
sbb
lret
fistpll
ret
xor
aas
jmp
cmp
lods
outsl
inc
cs
add
jecxz
fcompl
dec
jmp
out
nop
mov
xor
mov
sub
popf
and
lret
or
fimuls
xchg
push
or
push
add
arpl
jmp
jg
or
bound
pop
imul
clc
pop
xor
pop
sbb
jbe
decl
cmp
or
or
xchg
sub
and
imul
inc
cmp
lods
sbb
xchg
jge
sub
test
loope
in
and
imul
jecxz,pn
mov
arpl
repz
adc
fsubrp
in
inc
and
lea
jns
pop
iret
xchg
adc
loop
push
mov
adc
jno
inc
pop
cmp
xadd
xchg
bound
mov
jno
add
inc
lods
shlb
or
arpl
cmc
mov
call
stos
mov
jmp
sbb
xor
ljmp
ret
push
push
fwait
xchg
cmp
test
int3
lds
push
dec
mul
repz
adc
ret
mov
imul
mov
xchg
mov
cli
testl
adc
insl
add
inc
lret
std
inc
sbb
std
les
int
imul
mov
adc
shll
movsl
in
gs
add
xsaveopt
shll
cli
lods
mov
pusha
inc
push
adc
in
mov
push
clc
loope
imul
adc
inc
lahf
mov
js
ds
xchg
xlat
pop
fnsave
xor
loop
pop
and
sub
sbb
arpl
pop
cmp
sub
mov
movsl
mov
sbb
sbb
rep
iret
dec
adc
loopne
and
sub
push
in
aam
pop
xchg
int3
cltd
jo
out
fbld
inc
sub
loop
iret
cmpsb
push
mov
and
out
adc
xchg
popf
in
loop
xorl
ret
notb
scas
jo
testl
jle
inc
aas
inc
push
sbb
xor
test
mov
and
popa
mov
xor
xchg
in
mov
cmp
dec
mov
and
or
add
arpl
inc
cld
loope
testl
dec
jl
or
fsubrl
es
xor
mov
pop
lock
scas
jecxz
sub
mov
jge
xlat
out
xchg
test
mov
test
inc
adc
js
addr16
inc
mov
mov
lds
imul
shr
call
mov
pop
jg
adc
sub
cmp
jne
mov
imul
jns
out
xor
xlat
xchg
and
push
data16
jmp
pushf
sub
ja
and
and
xchg
sub
push
rcrb
cltd
adc
aaa
or
and
inc
ljmp
jl
inc
enter
gs
lods
ret
pop
mov
pop
lret
xor
aas
jmp
cltd
stc
jb
subb
mov
into
jg
ds
xchg
insb
leave
adc
leave
and
daa
mov
rcll
sub
dec
ljmp
cmc
lea
push
cmp
mov
cmp
bound
divb
imul
xchg
or
lock
hlt
jbe
mov
lods
push
hlt
push
jp
mov
xchg
and
or
jle
ds
sub
dec
loopne
xchg
mov
xchg
ret
cld
or
mov
cli
dec
and
push
mov
and
jo
data16
in
sub
mov
xchg
stc
cmp
inc
jo
sbb
stc
jl
jp
sub
fidivl
push
ja
aam
sbb
inc
mov
cs
inc
xor
stos
inc
and
aad
mov
mov
shlb
push
hlt
mov
subb
mov
std
jne
push
mov
not
out
cli
lea
add
inc
movsb
xor
mov
jb
icebp
fwait
cmp
sbb
xchg
or
xchg
stc
jge
lods
popf
mov
movsb
mov
cs
inc
xor
daa
dec
ret
mov
outsb
lock
and
repz
cltd
ljmp
fldenv
out
add
imul
inc
add
in
jmp
push
push
and
and
ljmp
loopne
jnp
dec
or
shlb
clc
jl
xchg
sbbb
mov
in
lcall
inc
add
and
cmpsl
pushf
mov
dec
aad
nop
aad
out
dec
push
in
add
ss
mov
decl
mov
sahf
je
mov
cmp
cmpb
sarb
movsb
es
insb
repz
dec
jmp
mov
xchg
inc
dec
out
mov
inc
jecxz
mov
dec
nop
sbb
insl
sbb
jo
stos
jb
mov
adc
insb
imul
mov
jle
popa
shlb
lods
push
icebp
sub
scas
jmp
mov
jecxz
pop
and
cmp
cmpsb
cmp
inc
adc
fildl
adc
ss
and
pop
or
aas
mov
xlat
lret
cmp
mov
xor
es
clc
clc
ds
inc
fisubs
and
icebp
cmp
call
sub
jge
and
push
dec
inc
inc
test
mov
jnp
cmp
mov
pusha
adc
xor
pop
pop
imul
inc
arpl
ret
mov
xor
dec
dec
and
repz
add
orl
cmp
add
xchg
cmp
xchg
mov
outsb
xor
or
mov
mov
fs
xor
xlat
fisubrs
shlb
inc
add
inc
jb
aaa
or
push
inc
push
nop
sbb
dec
repnz
mov
test
insb
adc
pop
pop
in
ret
adc
dec
add
sub
test
stc
jge
imul
ds
daa
adc
cmp
sarb
shll
data16
jns
pop
mov
jecxz
dec
push
leave
lret
jp
shlb
xchg
cmp
jp
cmp
in
xor
jbe
ret
xor
sahf
andl
js
or
jge
lcall
fxch
mov
push
in
addr16
cltd
faddl
and
les
jbe
mov
fnstcw
mov
fisubl
rclb
or
inc
add
neg
jp
mov
or
inc
mov
sub
aad
jae
or
dec
pop
adc
pop
push
ljmp
pop
addr16
scas
adc
hlt
stos
pop
call
inc
in
ret
daa
push
mov
add
pop
bound
mov
lret
lods
mov
loope
and
enter
jecxz
push
mov
cmc
jnp
leave
jle
ja
lods
sbb
and
add
repz
rcrb
addl
arpl
push
lret
inc
push
movsb
int3
and
js
inc
cs
mov
sar
jne
adc
inc
jge
and
stc
mov
mov
shrb
mov
loop
daa
pop
in
mov
stos
xchg
cmpsb
fisttps
repnz
fwait
push
int3
xor
mov
rcl
sahf
push
sub
jne
inc
adc
addl
sub
pushf
loop
sbb
hlt
shrb
mov
cwtl
xor
inc
xchg
push
inc
loopne
insl
icebp
ljmp
out
es
es
fcmovnu
lock
pop
lret
das
fstpt
mov
add
adcb
shrb
xchg
lret
decb
pop
mov
in
sub
movsl
hlt
mov
pusha
shlb
add
inc
je
imul
in
icebp
lods
and
scas
jl
loopne
or
lcall
aas
jge
out
dec
inc
xor
ret
xor
int
cs
pop
dec
out
stos
cltd
in
jp
jo
xor
pop
cmp
iret
shll
cmp
orb
mov
cmp
push
add
mov
pop
lcall
aas
adc
in
les
mov
push
fnsave
push
adc
xlat
push
out
cmp
orb
ret
adc
add
lods
dec
adc
cmp
fiaddl
into
xor
pop
insl
push
call
adc
shlb
push
rclb
adc
jnp
xor
out
leave
xlat
pushfw
mov
add
sbb
clc
adc
pop
roll
das
adc
out
jno
add
mov
push
shlb
xchg
stos
mov
nop
in
mov
hlt
loope
lahf
push
fiadds
movsb
sub
fistpl
xor
out
cli
subb
sbb
clc
test
cmp
outsb
jae
pop
enter
fisubs
pop
and
sub
and
add
sub
add
and
or
adc
push
mov
mov
nop
pop
in
out
inc
sub
push
and
repnz
in
mov
jnp
js
add
jae
mov
push
sub
mov
lds
inc
sbb
daa
add
stos
lods
xor
or
cmpsl
sti
insl
jge
clc
pop
pop
xchg
scas
mov
inc
mov
pushf
loope
in
out
popa
or
movsb
jl
enter
push
idivl
int3
push
pop
xor
out
in
push
ret
push
cltd
cld
fs
xor
movsb
push
inc
stc
push
adc
xor
or
sub
dec
add
iret
int3
lock
andb
bound
or
xor
loopne
cmp
inc
sti
shr
outsl
sbb
jnp
adc
and
push
aaa
add
fs
pusha
mov
mov
jmp
movsb
push
subb
xchg
testb
loop
shlb
fwait
int
aaa
repnz
test
add
mov
mov
and
or
mov
rorb
repnz
rorl
repz
rorb
hlt
test
cmpsl
fcomps
dec
pusha
stos
ret
pop
pusha
enter
jmp
ret
sbb
pusha
cld
ret
pop
pusha
std
dec
shll
push
fdiv
dec
inc
movsb
adc
iret
mov
aaa
iret
insb
xor
xlat
insb
xor
iret
fldcw
fisubrl
fldt
fsubrl
fisubrs
fildll
shr
lret
push
int3
shrb
shrb
movl
out
push
fs
pop
fs
or
or
or
or
or
out
or
fs
pcmpgtb
ret
and
shll
rol
add
jecxz
push
movl
out
push
fs
pop
fs
or
or
or
or
or
out
or
fs
pcmpgtb
ret
and
shll
rol
add
rcll
icebp
leave
adc
test
push
leave
push
push
leave
pop
push
leave
sbb
leave
sbb
leave
sbb
leave
sbb
leave
sbb
dec
sbb
push
leave
pop
push
ret
nop
imul
xchg
popa
jae
xchg
gs
xchg
imul
xchg
insl
ja
xchg
insl
je
xchg
insl
jne
cwtl
insl
jp
cltd
insl
jnp
lcall
into
pushf
insl
jle
popf
insl
jg
sahf
insl
jl
lahf
insl
pop
jne
fnstsw
and
inc
inc
loope
mov
inc
xor
loopne
adc
icebp
inc
adc
loopne
inc
pop
loopne
inc
sbb
cmc
inc
sbb
cli
inc
sbb
sti
inc
sbb
clc
inc
sbb
stc
inc
sbb
loopne
inc
pop
loopne
inc
adc
in
inc
icebp
loopne
dec
add
repz
adc
lock
adc
icebp
dec
adc
out
testl
cmc
dec
sbb
cli
dec
sbb
sti
dec
sbb
clc
dec
sbb
stc
dec
sbb
out
decl
cld
dec
adc
cmp
dec
shr
xor
out
xor
in
add
loopne
dec
pusha
in
int
jae
rol
xchg
shl
icebp
shl
rol
hlt
mov
shl
aad
mull
fcmovnb
stc
mov
fld
sti
mov
ffreep
std
mov
ffree
out
mov
mov
or
xchg
mov
das
in
and
mov
and
mov
jae
and
or
xchg
xchg
dec
jb
or
out
or
bound
dec
cmpb
movsl
lret
sub
xchg
and
addb
jo
pop
rclb
jecxz
adc
push
mov
leave
loope
cmp
adc
int3
jb
adcl
jne
or
fisttpll
pushf
adcb
sub
sbb
sahf
sbb
jge
negb
adc
stos
pop
loopne
shrl
loop
in
notl
and
lds
sbb
mov
arpl
pop
add
out
addl
mov
and
out
fnsave
out
repz
inc
mov
mov
sub
xchg
jae
in
shll
sti
cmc
xchg
dec
jge
sbb
jb
or
int
dec
in
cmp
xchg
neg
lds
push
outsl
lahf
inc
shl
jecxz
in
mov
sbb
iret
or
cmp
cmpsb
sub
icebp
cli
add
jmp
out
cltd
dec
in
push
nop
jecxz
xor
in
cmpsb
jecxz
add
div
aad
imul
aam
clc
sbb
fwait
stc
sbb
jnp
sbb
jnp
sbb
leave
fmull
js
push
nop
jp
pop
and
insb
pop
or
insl
push
and
scas
popf
stc
scas
push
sbb
outsl
jg
sbb
jo
lea
add
andl
lds
pop
leave
xchg
in
mov
movsl
dec
popa
into
lds
arpl
andl
xchg
addr16
test
cmp
push
mov
out
mov
jge
outsl
out
insl
inc
outsb
ret
cs
dec
lahf
cs
jae
mov
inc
test
adc
pop
fidivrs
lea
arpl
xchg
mov
and
out
lock
adcl
pushf
leave
cli
std
adc
repnz
sbb
xor
fwait
ss
jns
outsb
sbb
cmp
iret
sbb
mov
mov
push
fidivs
adc
jb
dec
roll
int
mov
mov
lret
ljmp
aad
leave
roll
mov
sub
xchg
out
sahf
inc
cs
cmp
adc
mov
adc
jg
or
xchg
gs
enter
cmpsl
mov
jae
inc
add
sub
or
mov
mov
and
jns
mov
xchg
add
xchg
les
lods
fisubs
lea
add
insb
ret
fsubr
shll
pop
fdivs
jmp
dec
mov
shlb
aam
ss
fmuls
cmp
fisttpll
fisttps
mov
fnsave
pop
push
pop
mov
cwtl
fbstp
iret
loopne
int3
mov
lock
popa
out
in
je
sahf
jp
outsb
pop
xchg
inc
mov
popa
inc
adc
repz
cld
jmp
shrb
mov
mov
fsub
sbb
stos
add
jle
sahf
sub
jle
scas
in
das
sbb
jae
adc
cmpsl
jo
clc
sbb
fwait
stc
int3
fimull
std
pushf
fildll
cmp
mov
push
jnp
cmp
dec
cmp
push
sub
sub
jns
adc
and
ret
bound
mov
in
adc
ljmp
daa
loopne
add
xchg
arpl
icebp
in
mov
stc
pop
add
leave
adc
mov
xlat
jle
xor
jle
cmp
adc
jne
pop
daa
jnp
inc
lret
sbb
out
xchg
xor
dec
jbe
jb
ljmp
jns
pop
fsubrl
lods
push
or
fisubs
cld
inc
ljmp
lret
jl
adc
dec
into
cmpsl
fldl
inc
fcomi
cld
xchg
fdivs
mov
push
out
loopne
shr
ja
cmp
enter
inc
mov
jmp
or
int
outsb
push
fistps
sbb
ficoms
repz
mov
xor
inc
and
pop
mov
add
and
ret
mov
adc
mov
andb
les
lret
icebp
loopne
pop
xor
inc
jecxz
out
inc
push
xor
mov
pop
push
stos
je
and
pop
mov
and
sahf
aam
ss
sar
push
repnz
jnp
jbe
lods
scas
xchg
jg
nop
lea
or
into
push
enter
xor
and
fwait
add
orb
dec
jb
bound
pop
ficompl
mov
aad
inc
mov
out
iret
dec
push
mov
test
out
and
shl
inc
loope
arpl
lcall
mov
in
or
repz
adc
rcll
or
and
out
sar
loop
ret
in
mov
add
ret
adc
mov
out
xchg
cmpsl
pop
and
scas
push
or
or
pop
mov
xlat
sbb
inc
jne
add
jo
adc
xchg
testl
push
cmpsl
jnp
sahf
lret
jns
cli
outsl
xchg
pop
jno
or
inc
add
mov
das
int3
xor
pop
aam
lods
jg
sysret
jecxz
movsb
test
and
movsb
repnz
xor
neg
test
add
sbb
jg
in
sbb
scas
cmp
mov
jbe
mov
and
cwtl
xchg
inc
cltd
call
mov
mov
push
jmp
and
in
loope
pop
div
adc
imul
aad
jbe
mov
out
daa
mov
mov
std
jp
cltd
pop
jnp
lcall
int
jge
sub
sbb
ja
lods
in
addr16
aad
int
jmp
lea
in
rclb
fs
adc
jg
in
xchg
fbstp
sub
hlt
repz
cmc
push
xlat
add
mov
mov
ds
je
cmpsl
lods
and
outsl
jns
fwait
pushf
fwait
scas
jp
cwtl
inc
imul
jl
pop
mov
pop
sub
sahf
pop
int3
jle
pop
insb
jg
pop
or
mov
sub
mov
lods
add
or
pop
and
sarb
sub
sbb
mov
and
int3
xchg
fbstp
xchg
jg
or
test
rcrb
daa
mov
out
push
flds
lds
call
sub
into
das
out
sbb
into
test
mov
and
pusha
addl
repz
loopne
push
inc
stos
ret
mov
and
xchg
jns
popf
lds
sahf
sub
mov
shlb
ret
xor
into
cs
pop
insl
sub
xor
cmp
sbb
cmp
or
fs
xlat
cmpsl
and
jmp
inc
leave
mov
int
xchg
xchg
mov
lods
xchg
sub
or
andb
dec
cmpsl
test
jae
cmc
adc
push
add
and
lock
and
mov
add
es
iret
lahf
scas
pop
fildl
stc
repz
cmp
repz
in
in
fxtract
add
push
outsl
rclb
cmc
jmp
push
jo
mov
ljmp
cwtl
push
xor
cltd
lock
in
push
nop
cmp
shlb
dec
mov
sub
lcall
test
leave
enter
and
and
pop
xor
push
shrl
lods
jns
mov
inc
mov
loope
inc
js
dec
shrb
in
stc
mov
sahf
and
jl
addr16
cmc
jae
ljmp
rol
cli
xchg
jg
fdivrs
jbe
push
negb
dec
fs
jo
es
imul
xchg
or
out
test
and
pusha
shll
jne
adc
dec
lock
push
add
jae
xchg
cmp
stos
push
daa
cmpsl
mov
imul
inc
or
xchg
xor
jo
mov
cmpsl
mov
and
or
popf
jle
sbb
jb
sub
xchg
xchg
push
ljmp
test
cmp
dec
cmp
ljmp
ret
mov
inc
rcrb
xor
jno
cwtl
ja
js
into
int3
clc
lea
jl
repnz
jo
jns
push
inc
jl
mov
jle
mov
xchg
adc
jl
test
jle
das
jecxz
adc
add
int3
in
mov
sbb
dec
insl
std
and
ret
addr16
imul
jae
push
add
pushf
xchg
js
stos
mov
test
mov
and
loopne
cli
popa
stos
or
inc
dec
cmp
test
cmpsb
pop
or
xchg
jp
jmp
dec
imul
pop
xchg
push
mov
test
bound
pop
aam
adc
cmpsl
rol
imul
ficompl
ja
arpl
pop
lock
or
push
into
xor
imul
adc
jg
add
adc
push
mov
inc
dec
movsb
jecxz
add
cmp
je
pop
daa
scas
xchg
test
sub
and
xchg
cmc
imul
cli
sti
stc
sbb
ds
stc
paddw
sub
shll
mov
mov
popl
rcrl
imul
push
push
fwait
test
mov
je
jl
xor
rorb
jae
cs
or
fs
arpl
hlt
nop
push
and
xchg
les
add
les
lcall
enter
mov
jns
les
mov
dec
push
pop
out
call
rcrb
inc
xchg
dec
pop
out
add
sub
mov
and
cmp
or
mov
movb
movsl
pop
add
add
pop
mov
inc
mov
adc
insb
int
push
jae
insb
jne
and
scas
ret
out
dec
inc
nop
add
sub
mov
pop
adc
out
subl
xchg
repz
inc
aad
add
mov
and
lahf
xchg
adc
es
pop
inc
sar
lds
stos
stos
add
in
addr16
rcl
sbb
xchg
cltd
adc
iret
cwtl
mov
sub
leave
sub
adc
sub
mov
dec
adc
adc
cmp
mov
lock
lret
mov
xor
cs
fstpt
mov
out
aas
mov
mov
lea
cmpsl
cmpsl
in
jp
loopne
mov
adc
xor
fdivrl
ds
rcrb
popa
inc
test
call
jle
jo
mov
out
sub
lea
lea
mov
mov
xorl
in
sbb
cmc
inc
test
mov
dec
inc
adc
push
iret
in
int3
dec
test
and
jb
and
xlat
test
xor
add
loop
and
orb
loopne
adc
out
or
bndstx
pop
jg
stos
jns
inc
fnstenv
jecxz
or
imul
jmp
bound
and
adc
shl
sub
pop
out
iret
dec
cmp
push
pop
and
dec
add
sbb
outsb
lods
mov
icebp
loop
add
mov
xlat
stc
mov
fists
jb
jno
push
jb
xchg
call
push
dec
or
loopne
es
adc
jecxz
stos
inc
inc
cmpsb
imul
xchg
es
call
xchg
sbb
sahf
mov
add
mov
adc
push
insl
cmc
scas
xchg
scas
inc
xchg
ret
lds
dec
and
scas
dec
push
divl
mov
ss
pop
rol
pop
dec
sbb
sarb
js
ja,pn
and
shr
add
push
jecxz
push
sti
adc
pusha
fdivs
mov
in
aam
jo
cmpsl
out
test
das
or
push
add
lret
aaa
add
popaw
xchg
insb
les
inc
or
gs
imul
aam
and
insl
push
mov
les
movsb
ret
bnd
cli
push
adc
ja
pop
push
fchs
adc
mov
shlb
mov
xor
loope
jmp
lds
clc
add
mov
incl
mov
sbb
mov
mov
pusha
xchg
roll
ret
clc
ss
and
jl
dec
sub
pop
sbb
add
xor
xorb
mov
shll
dec
inc
jmp
push
loopne
ret
arpl
cmp
fstpt
and
lods
adc
push
cld
xchg
mov
inc
sahf
mov
cmc
lret
add
cmp
arpl
arpl
rdmsr
insl
iret
mov
cmpsl
es
or
jg
in
movsb
arpl
xchg
inc
rorb
and
inc
roll
inc
pop
lcall
fwait
mov
fstp
nop
insb
rcll
pop
aas
sti
pushf
aam
std
jl
out
pop
popa
adc
cmp
pop
leave
popf
movsl
push
scas
imul
mov
shrl
and
in
loop
dec
out
xchg
outsl
xor
push
lds
sub
lret
pushf
lret
leave
and
pop
push
sar
sbb
lcall
dec
cld
add
lods
vcvtpd2dq
imul
sbb
adc
data16
fstps
pop
sub
cli
dec
ljmp
xchg
loop
pop
mov
ljmp
cmc
mov
jno
sti
jle
dec
call
mov
lds
sbb
fs
pop
fistpl
pushf
cmpl
push
in
cmpsb
and
fbstp
notl
or
add
ret
arpl
movsb
and
popa
xchg
push
imul
or
hlt
xor
cmp
adcb
nop
push
adc
inc
or
adc
xor
arpl
xchg
jmp
lret
out
xor
aam
adc
ret
or
xchg
adc
leave
and
ror
xor
inc
sub
dec
loopne
jae
sbb
sbb
sbb
out
arpl
lret
rclb
lock
bound
adc
dec
in
jb
inc
xchg
xor
add
mov
orb
add
js
push
xchg
inc
loope
mov
dec
cmp
xchg
pop
sbb
mov
sti
inc
rcll
dec
sub
and
addl
nop
es
in
adc
mov
or
add
pop
data16
stos
jae
push
out
iret
loop
sbb
xchg
cwtl
test
add
sub
xchg
mov
pop
mov
imul
or
sub
mov
lret
adc
dec
addr16
push
arpl
mov
xchg
pop
in
xchg
push
dec
adc
mov
jl
in
adc
ret
fsubl
aas
cmp
sbb
lcall
in
rcll
sarl
sti
and
push
stos
xchg
inc
jnp
add
push
ret
or
divl
xor
or
cmp
rcl
inc
mov
jmp
enter
xor
iret
sub
movsl
das
jmp
xor
call
stos
filds
mov
sub
mov
nop
mov
add
push
and
dec
lds
sbb
int
adc
jmp
push
or
pop
in
ds
add
cmpb
pop
jp
cmp
out
orl
mov
jecxz
inc
mov
inc
xor
lock
sbb
clc
push
pop
lock
jecxz
xchg
adc
pusha
or
mov
and
fdivp
add
inc
test
mov
sbb
stos
sub
xchg
jb
sbb
adcb
and
daa
xchg
cltd
sub
cmp
sub
jae
jne
push
pushf
lret
leave
xor
xor
cmp
fcompl
fcmovnbe
sub
inc
jne
test
xchg
cmpsb
stc
movsb
iret
add
add
push
ret
insl
test
jo
popa
push
jl
and
cmc
push
xchg
add
scas
mull
aad
cltd
mov
test
dec
inc
sarl
stos
in
add
xchg
out
and
ljmp
in
xor
jne
orb
add
cmp
std
js
in
stos
repz
sub
and
xchg
jge
jmp
movsb
jg
sub
fsincos
lret
pop
pop
pop
loop
lods
dec
lret
movsl
or
cltd
jb
shlb
test
pop
stos
outsl
fimuls
add
inc
and
mov
insl
sub
lods
pushf
and
xchg
gs
shll
xchg
xlat
imul
cs
mov
in
cmpsl
or
icebp
stc
mov
pop
cld
insb
fstps
mov
or
addr16
inc
addr16
cmp
rorb
push
bound
fsubrl
ljmp
into
and
dec
xchg
jmp
pop
xchg
sbb
bound
sub
xchg
ret
inc
imul
sbb
in
fmuls
add
add
add
insl
je
jmp
ret
and
jge
push
pop
mov
lods
sbb
mov
xchg
inc
icebp
out
pop
sub
popa
ds
mov
in
jns
sub
xchg
outsl
hlt
jl
add
mov
jmp
xor
popa
inc
sbb
mov
mov
mov
dec
in
push
adc
leave
ljmp
sub
loope
inc
in
add
jl
addl
xchg
fadds
add
in
les
jl
pop
mov
jecxz
loope
aam
or
cmp
push
pop
mov
sub
dec
aam
out
sbb
cwtl
outsl
jno
repnz
add
cmp
clc
jge
mov
fdivrl
outsb
push
lahf
adc
js
sahf
scas
std
mov
mov
sub
out
and
inc
add
xor
dec
mov
jg
mov
rolb
rcll
in
push
jle
sub
xor
rorb
cmp
test
and
mov
cli
int3
lret
mov
and
and
push
cwtl
dec
sub
xchg
es
mov
and
and
rol
enter
add
or
sub
mov
inc
xchg
inc
scas
int3
push
cwtl
andb
repz
sbb
arpl
jl
fists
pop
or
pop
sbb
xchg
push
mov
jmp
add
aaa
push
lret
addr16
aam
int
or
loope
lcall
stc
dec
aas
sub
xor
adcl
inc
adc
jbe
lock
arpl
ss
mov
jle
inc
testl
test
jae
out
stos
xchg
add
stos
aad
mov
jmp
in
outsb
pop
lret
dec
and
fs
in
sbb
sub
mov
push
cmp
add
ret
sbb
cmpsb
stos
std
and
enter
movsl
or
mov
mov
or
lock
shlb
add
jae
mov
add
enter
ja
sbb
jmp
xchg
test
or
movsb
jp
adc
addl
movsb
and
inc
xorb
ja
inc
sbb
xchg
leave
cmp
jae
mov
sub
fsubrs
inc
mov
mov
and
and
mul
lea
pop
arpl
inc
mov
sbb
push
lock
mov
fs
addr16
pop
addr16
sbb
stc
daa
xchg
in
push
sub
push
dec
dec
xchg
gs
out
mov
mov
sub
pusha
xchg
xor
mov
addb
pusha
inc
dec
daa
loope
sub
jmp
ret
mov
inc
inc
out
sub
sbb
repnz
xchg
mov
outsl
cli
addr16
or
popl
into
out
in
dec
jg
in
dec
mov
cmc
and
jo
sahf
imul
outsb
push
dec
pop
outsb
jne
vphadddq
into
bound
pop
scas
pop
inc
xchg
or
jl
test
decb
mov
mov
addl
movsb
icebp
clc
mov
fiaddl
dec
mov
pop
inc
mov
or
call
and
call
popa
mov
cmp
shrb
mov
mov
pop
xchg
imul
xchg
fadds
cmp
ret
imul
mov
loop
push
and
cmp
popw
ret
bound
pop
sbb
sahf
pop
inc
mov
pushf
aas
dec
fmull
dec
fwait
arpl
and
pusha
lret
or
cmp
out
sub
cwtl
adc
dec
jae
loop
jns
ror
rorb
fdivrp
xchg
mov
stos
inc
jle
xchg
push
rcrb
mov
add
lods
insb
in
test
popf
mov
icebp
dec
cmp
push
cmp
cmpsb
push
or
imull
fdivrl
repz
in
dec
xor
aad
mov
dec
mov
sub
js
sbb
in
insb
xchg
jle
and
ds
stos
inc
inc
fwait
repnz
clc
lods
mov
dec
push
loopew
hlt
sbb
add
test
nop
mov
or
inc
and
jnp
and
ret
push
shlb
orl
in
out
push
or
sub
or
fcomps
call
ljmp
rcr
in
test
xchg
iret
cmp
mov
out
shrl
jle
testb
out
lahf
mov
inc
adc
popf
xor
mov
pop
xchg
les
ljmp
popa
popa
jg
loop
jnp
and
pop
xor
mov
jo
or
pop
test
scas
mov
repz
les
push
pop
fwait
in
adc
test
sub
pop
pop
xchg
arpl
sbb
mov
or
mov
rcrl
movsl
or
jbe
dec
cmp
pop
daa
popf
fidivrs
mov
fadds
pop
inc
imul
xchg
xchg
jno
xchg
pop
push
dec
mov
adc
add
adc
aaa
mov
xor
cmp
movsl
mov
cli
mov
les
dec
sub
xchg
or
rorb
inc
lds
test
imul
jne
icebp
jg
jne
xchg
xor
loope
mov
xchg
mov
adc
pop
inc
sarl
xor
scas
xchg
iret
pop
scas
ficoms
in
cltd
out
xor
enter
cmp
sbb
lcall
out
fdivl
lret
dec
divb
arpl
popa
xor
xor
sub
xchg
nop
or
and
shrl
cmpsl
shlb
mov
mov
ljmp
inc
sahf
loope
sub
adc
pop
mov
mov
and
xor
int3
int3
pop
fnstenv
pusha
cmp
mov
sti
cs
jp
xchg
in
push
loope
jb
roll
inc
popf
lea
js
and
jmp
arpl
pusha
mov
mov
push
aas
bound
add
loopne
jge
loopne
sbb
stc
adc
insl
adcl
mov
sbb
in
xchg
or
mov
rcll
fdivrs
pop
out
test
mov
pop
loop
sub
adc
fcomps
mov
xor
adc
push
arpl
and
jne
lds
cmp
movsb
inc
je
stos
aas
cs
pusha
loopne
xor
inc
loopne
stc
mov
in
bound
imul
inc
dec
jo
push
xchg
test
sbb
inc
fsubr
dec
inc
inc
insb
push
movsb
setp
fldl
mov
ja
gs
mov
xchg
negb
add
outsl
inc
lock
jo
sub
jno
xchg
fldcw
lea
lret
mov
call
in
aad
dec
fs
add
add
add
or
xor
xor
in
repnz
push
loopne
mov
adc
lock
mov
inc
cld
push
mov
adc
pop
mov
inc
ret
fadds
push
inc
xchg
sub
dec
loopne
pushf
inc
add
stos
add
sbb
push
in
pop
aas
stc
sbb
add
add
enter
jo
add
iret
inc
add
sbb
sub
sbb
mov
pop
in
pop
inc
mov
sbb
les
sub
inc
sbb
test
ret
or
call
fcomp
push
aam
mov
aas
or
add
enter
xor
fcoms
mov
pop
addr16
or
or
pop
sbb
pop
pop
sbb
pop
rcrb
mov
mov
cmp
pop
push
in
sub
loopne
inc
mov
sbb
push
je
xor
aad
xorl
je
pushw
add
mov
pop
in
pop
inc
mov
sbb
shrl
inc
pop
mov
or
pop
sbb
cmc
pop
mov
add
test
add
mov
push
mov
and
in
sbb
dec
loope
sub
pop
pushf
ljmp
add
call
fwait
mov
xchg
sub
sub
mov
test
mov
rorb
cwtl
mov
adc
xchg
jo
aam
lds
test
dec
nop
push
cltd
mov
test
sub
jmp
add
add
mov
xchg
call
pusha
int3
subl
mov
ret
add
push
add
push
push
jae
mov
jb
test
push
pop
jmp
int
pop
sbb
outsb
cmp
inc
sbbl
mov
sub
dec
xchg
subb
add
inc
rolb
mov
enter
rcrb
sbb
add
cmp
sbb
leave
xchg
jecxz
nop
sbb
add
inc
mov
cmp
gs
ljmp
aad
dec
push
mov
movsb
mov
sbb
add
inc
pop
push
sbb
leave
xchg
jecxz
nop
adc
xchg
pop
push
push
add
inc
pop
push
int3
cmp
adc
inc
ret
add
inc
dec
push
mov
in
cmp
sbb
add
inc
pop
push
sbb
leave
xchg
jecxz
nop
adc
cmp
inc
lahf
mov
aam
add
pop
cs
sbb
cmp
pop
cwtl
add
or
or
les
xor
push
xlat
fildl
inc
andb
push
sbb
rcrb
nop
xor
arpl
mov
mov
push
cwtl
xor
xchg
lods
pop
shrl
ret
push
push
stos
insb
pop
pop
fwait
xchg
pop
xchg
mov
cmpl
das
push
cmp
push
sbb
rcrb
xchg
dec
dec
jo
or
out
adc
lahf
call
mov
xorl
nop
insb
dec
addb
push
add
loop
inc
and
inc
sbb
push
ds
ret
push
sub
push
rclb
mov
push
sbb
adc
push
pop
test
push
sbb
pop
push
and
lods
mov
add
mov
mov
mov
xchg
push
mov
or
les
nop
push
add
sbbb
add
mov
ja
xchg
sti
push
jns
adc
rclb
xor
repnz
add
cmp
dec
sbb
mov
lea
ret
mov
ss
adc
push
je
xor
pop
and
sub
movsb
or
cmp
add
mov
inc
aaa
mov
push
add
ret
es
jl
push
dec
adc
cmp
push
jl
push
dec
adc
cmp
pop
add
inc
inc
pop
cwtl
xchg
push
push
cltd
and
push
cmp
jecxz
sub
push
adc
ret
sbb
add
add
push
sbb
add
add
push
sbb
add
add
insb
add
add
add
add
add
add
and
add
pusha
add
addb
push
add
add
add
add
nop
add
addb
add
test
add
rolb
addb
add
lock
addb
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
roll
add
add
add
add
add
add
add
add
adc
add
addb
add
add
add
adc
add
add
add
cli
add
pop
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
add
add
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
js
mov
mov
mov
divl
ja
ja
mov
mov
clc
addb
mov
mov
clc
test
mov
mov
mov
test
mov
mov
clc
adcl
mov
adcl
mov
mov
decl
mov
mov
mov
jo
ja
ja
ja
ja
ja
ja
ja
jo
jg
dec
mov
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
into
dec
mov
fstp
fstp
fnstsw
dec
int3
mov
ja
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
fwait
sbb
jo
fstp
fstp
jg
dec
cltd
mov
ja
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
outsb
dec
mov
fstp
fstp
fnstsw
dec
data16
ja
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
cmp
mov
fstp
fstp
fnstsw
dec
xor
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
into
dec
mov
fstp
fstp
fnstsw
dec
int3
mov
ja
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
pushl
fstp
fstp
ja
ja
ja
ja
ja
jo
fstp
fldl
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
add
add
incl
add
incl
js
ja
mov
test
mov
mov
xorb
ja
ja
jo
hlt
dec
mov
hlt
dec
enter
fst
hlt
dec
mov
hlt
dec
enter
fst
hlt
dec
mov
hlt
dec
enter
fst
hlt
dec
mov
hlt
dec
enter
fst
hlt
dec
mov
decl
ja
ja
fldl
add
xchg
add
jo
add
incl
pop
mov
addb
mov
pop
mov
addb
ja
pop
ja
addb
ja
pop
ja
sub
add
and
add
inc
add
add
add
add
add
add
cli
stc
add
aad
add
loope
add
aaa
add
cmpsb
je
add
clc
testb
cld
sti
add
sti
cli
add
ds
add
inc
or
mov
xchg
repz
add
in
in
stc
out
jmp
add
push
push
add
loopne
add
call
loop
clc
out
out
imul
out
mov
mov
adc
cmpl
adc
lds
add
out
add
jmp
out
add
push
adc
sahf
push
adc
ret
gs
add
insb
and
leave
jae
add
insl
sbb
les
add
insl
sbb
shlb
shrb
shll
add
jne
add
jle
add
jl
add
jle
add
jne
add
subl
add
lahf
pop
add
test
add
std
cld
add
test
add
mov
add
xchg
add
mov
add
lea
add
mov
add
test
add
mov
add
test
add
subl
add
mov
add
mov
loopne
sub
loop
das
add
xchg
xor
loopne
xor
add
mov
in
sub
call
test
add
xchg
sub
add
xchg
sub
add
lea
lock
fisttpl
xor
repnz
xor
out
lcall
in
xchg
xor
repz
xor
lock
xor
out
cltd
xor
test
sahf
xor
repz
cmp
repnz
das
add
popf
xor
icebp
pushf
xor
loopne
cs
mov
xor
repnz
xor
clc
movsl
xor
add
lahf
xor
lock
xor
out
xor
ficoms
cmp
jmp
mov
or
add
sahf
xor
jmp
xor
in
mov
cmp
ljmp
cmp
lock
cmp
in
movsl
cmp
repnz
inc
add
mov
add
lods
imul
mov
dec
add
cmpsb
inc
add
fwait
and
in
mov
or
call
arpl
fisubl
movsl
mov
add
fisubrs
mov
mov
add
loope
add
les
add
sbb
jnp
sub
xchg
xchg
addl
dec
pop
sbb
stos
mov
add
and
inc
jo
add
pop
add
xchg
sbb
ss
add
dec
add
jnp
add
jp
add
jns
add
jg
add
jp
add
mov
add
dec
add
sti
repz
mov
add
xchg
daa
add
xchg
daa
add
outsl
and
cs
sub
push
rorl
cltd
sub
xor
sub
add
sub
sub
lods
xor
xor
add
test
xor
cmp
cmp
cmp
sub
cmp
aad
add
pop
add
arpl
push
push
les
fcomi
fildl
call
cld
add
scas
sub
sub
and
add
cmpsb
adc
and
sub
es
and
iret
arpl
push
movsl
and
and
das
add
mov
xor
add
cltd
cmp
and
cmp
and
mov
dec
add
jnp
push
test
add
jle
add
mov
pop
addl
or
inc
add
xchg
add
jp
add
rcll
add
xchg
jns
adc
hlt
add
aad
add
idiv
add
cld
incl
hlt
std
incl
mov
incl
inc
xchg
mov
sub
add
in
incl
in
std
add
xchg
lret
jne
add
filds
inc
gs
sbb
sti
add
incl
mov
ja
add
incl
add
mov
sahf
sahf
sahf
mov
push
pop
pop
pop
pop
pop
pop
pop
push
pop
pop
and
scas
test
loop
scas
lods
stos
movsl
mov
daa
es
es
es
daa
sub
add
lret
jmp
into
into
int
mov
sub
sub
xor
incl
mov
mov
loopne
fsubr
out
in
fmulp
lret
lret
mov
lea
xor
xor
xor
xor
xor
incl
mov
aad
xchg
ja
out
in
in
rcl
cltd
xchg
jae
ss
aaa
incl
mov
aad
mov
xlat
call
lea
inc
aas
aas
aas
aas
ds
aas
dec
xor
add
nop
xchg
rcl
xlat
lcall
push
push
push
push
push
push
gs
incl
mov
mov
cld
cld
jmp
rcl
sahf
mov
pop
pop
addr16
addr16
pop
pop
pop
je
incl
mov
mov
cld
call
int3
int
xchg
insb
insb
insb
insb
imul
add
repz
stc
cmpsb
lahf
ror
aam
enter
jl
jl
addb
incl
mov
rol
rol
rol
enter
mov
mov
incb
mov
mov
mov
scas
scas
scas
mov
mov
jle
addl
jns
add
xor
add
add
add
add
add
add
add
xor
add
std
or
sbb
sbb
add
or
or
push
or
or
push
incl
add
add
add
xor
add
sbb
adc
std
or
xchg
adc
cmp
adc
add
add
add
add
std
std
std
std
std
std
cmp
or
std
std
std
movhps
femms
ud0
add
add
add
xor
in
std
std
or
and
and
adc
sbb
sbb
add
add
add
xor
std
std
std
std
std
std
std
std
std
std
std
std
and
dec
dec
and
incl
add
add
add
xor
add
std
sbb
sbb
adc
std
std
sub
sub
sub
incl
add
add
add
xor
std
std
std
std
std
std
std
std
std
std
std
std
sub
das
sub
sub
sub
sub
add
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
hlt
cmc
divb
xor
xor
xor
xor
incl
add
add
add
xor
repnz
div
div
div
idiv
std
xor
cmp
cmp
add
add
add
repnz
std
sbb
sbb
cmp
dec
dec
cmp
add
add
add
xor
out
std
std
std
or
std
std
std
std
std
std
inc
inc
inc
inc
inc
pop
dec
push
push
inc
incl
add
add
add
xor
fwait
cmpsl
std
adc
adc
sbb
cmp
jne
push
incl
add
add
add
xor
ret
or
add
std
std
imul
incl
add
add
add
xor
std
std
std
std
std
std
std
std
std
std
std
std
popa
jne
insl
pusha
insl
pop
push
add
add
add
xor
sti
stc
pop
inc
inc
dec
dec
dec
push
push
push
push
pop
push
push
inc
dec
dec
inc
pop
dec
popa
incb
add
add
add
xor
repz
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
cmp
inc
dec
dec
inc
jbe
outsb
aas
inc
pop
outsl
fs
insl
jno
pop
popa
popa
pop
pop
pop
pop
bound
addl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
incl
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
incl
test
jp
cwtl
sub
add
sub
add
xchg
jnp
mov
mov
lds
js
test
sbb
ret
jae
add
pop
sub
add
mov
or
add
jle
add
mov
push
add
dec
str
imul
hlt
mov
ljmp
je
add
outsb
push
add
imul
add
je
add
jne
add
jl
add
je
add
je
add
mov
add
jp
add
jno
add
nop
push
add
jp
add
xchg
add
xchg
dec
add
mov
add
les
add
mov
add
mov
add
test
add
lcall
in
sub
add
lahf
inc
add
xchg
add
xchg
add
lds
add
test
add
adcl
out
adc
out
adc
jmp
lcall
out
xchg
sub
in
xchg
sub
lahf
xor
jmp
sahf
xor
icebp
cltd
xor
fsts
cmp
lds
pop
add
mov
add
cltd
cmp
mov
dec
add
stc
icebp
add
scas
inc
add
xchg
inc
add
sahf
dec
add
mov
pop
add
mov
add
mov
dec
add
mov
inc
add
mov
add
mov
inc
add
mov
add
lds
stc
rorl
lret
sti
lds
test
jne
shll
and
fistps
cmpsb
mov
incb
jl
jno
pop
jbe
add
sbb
pop
jns
add
daa
add
mov
add
sub
cmp
and
add
xor
ljmp
add
xchg
and
add
cmpsl
pop
add
leave
das
add
mov
add
ret
and
and
es
add
xchg
sub
xor
add
sub
cmp
inc
add
xchg
and
sub
sub
push
mov
add
sahf
sub
pop
jl
add
shlb
or
movsb
sub
add
pushf
cmp
add
lock
add
xchg
in
jmp
xchg
xlat
leave
add
mov
xchg
in
add
stos
cwtl
add
incl
lock
incl
mov
cmc
add
std
incb
repnz
incb
jl
incl
or
incl
js
incl
sti
incl
out
repz
add
jl
add
add
ljmp
cmpb
add
incl
movsb
movsb
movsb
add
jg
jns
jns
data16
add
add
mov
mov
mov
mov
ja
adc
sbb
sbb
mov
lods
xchg
nop
mov
and
and
popf
data16
mov
aaa
aaa
aaa
cmp
mov
sahf
pushf
lcall
dec
dec
mov
fwait
xchg
cwtl
xchg
bound
gs
jl
jge
jg
jbe
insb
imul
fs
or
or
add
mov
stos
mov
push
adc
push
mov
test
je
lahf
sub
adc
pop
add
aas
pop
pop
sub
mov
stos
mov
mov
mov
mov
mov
mov
push
pop
cmp
xor
mov
addb
mov
pop
push
mov
mov
inc
xor
push
pop
dec
dec
push
mov
jne
inc
inc
inc
inc
inc
cmp
mov
add
cmpsb
add
fucomi
add
xlat
lcall
push
push
add
push
push
add
incl
add
mov
add
cld
cld
add
aam
add
xlat
sahf
add
pop
pop
add
pop
add
pop
pop
add
incl
sub
add
and
add
inc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
add
sub
and
das
andl
pushl
jge
pushl
jns
pushl
jnp
pushl
jp
pushl
jp
pushl
jp
pushl
jno
pushl
jae
pushl
jp
incl
sbb
dec
pop
sbb
cmpl
ud0
or
cmpl
or
cmpb
incl
ds
cmpb
incl
cmp
or
cmpl
or
mov
add
aaa
sub
sub
xor
xor
pushl
xchg
daa
pushl
daa
pushl
mov
ljmp
jl
lcall
jp
lcall
cmpl
sub
xchg
sub
das
xchg
daa
pushl
mov
jmp
sbb
cmpsl
outsl
and
lcall
push
adc
popf
push
adc
popf
push
adc
pushf
push
adc
popf
push
adc
popf
push
adc
popf
push
adc
popf
push
adc
popf
push
adc
lahf
push
adc
mov
add
mov
add
aaa
xor
cmp
lods
sub
call
stos
and
decl
outsl
call
cltd
cmp
addl
mov
jmp
test
sub
daa
scas
sub
and
outsl
and
xchg
lea
dec
ja
inc
imul
les
inc
push
inc
imul
les
inc
push
inc
push
inc
imul
lds
inc
push
inc
imul
incl
add
mov
add
aaa
xor
ljmp
scas
sub
call
cmpb
sub
clc
call
fdivr
lcall
lcall
and
mov
jmp
mov
ljmp
cmpsb
sub
ss
decl
subl
call
jne
call
jne
call
jne
call
jne
call
jne
call
jne
call
je
call
jne
call
jbe
fnstcw
mov
add
mov
add
aaa
das
test
ds
xor
ljmp
sub
out
sbb
call
xchg
incl
enter
test
dec
lcall
lea
and
das
ljmp
test
pop
jnp
sub
ficoms
and
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fnstcw
jmp
mov
inc
jae
incl
add
mov
add
aaa
xor
cmp
daa
mov
inc
lcall
rcll
mov
add
adc
arpl
and
push
lcall
xchg
cmp
push
jmp
lods
sub
and
sub
sub
pop
call
sahf
cmp
jecxz
sub
loope
sub
loopne
daa
jmp
xchg
jmp
xchg
jmp
xchg
jmp
mov
jmp
mov
jmp
xchg
jmp
xchg
jmp
xor
incl
add
mov
add
aaa
das
mov
cmp
call
test
cmp
sbb
aad
and
stos
pop
ljmp
jns
sub
dec
decl
jp
jmp
test
jmp
test
cmp
inc
jne
jmp
cmp
call
xchg
sub
call
xchg
sub
call
xchg
sub
call
nop
sub
call
popf
cmp
roll
mov
add
aaa
movsb
sub
ljmp
scas
sub
decl
test
jmp
pop
leave
jmp
xor
lcall
rcll
ljmp
mov
and
lcall
jb
pushl
cmpsl
cmp
lock
lock
lock
lock
out
cltd
xor
lock
fisttpl
add
sub
sub
inc
les
xor
xor
adc
jle
call
cmc
jmp
ss
lcall
cs
decl
pop
call
mov
call
mov
and
sub
and
das
cmp
fisubs
clc
movsl
xor
push
mov
xor
mulb
xor
mulb
xor
mulb
xor
ljmp
incl
add
mov
add
aaa
sub
les
dec
mov
dec
pushl
xchg
inc
incl
mov
pushl
jae
call
inc
ljmp
dec
lcall
arpl
inc
lret
dec
pushl
cmp
jmp
mov
pushl
push
jmp
cmpsl
inc
cld
mov
cmp
cld
lods
cmp
cld
scas
cmp
std
mov
std
mov
cld
mov
inc
std
mov
cld
mov
mov
mov
xor
add
add
xor
inc
decl
push
call
push
ljmp
imul
in
imul
pop
fcomps
push
imulb
popa
call
pusha
lcall
pusha
incl
inc
jmp
andb
dec
jno
in
mov
data16
fisubl
fisubrs
fisubrs
jmp
insb
fsubrl
fildll
jmp
insl
call
arpl
lock
add
add
sub
scas
sub
pushl
mov
xor
xor
xor
aaa
mov
das
pushl
mov
pushl
mov
pushl
xor
cmp
cmp
cmp
cmp
cmp
cmp
ds
pushl
daa
pushl
mov
cmp
lock
inc
in
movsl
cmp
in
mov
xor
jmp
xor
jmp
xor
jmp
xor
in
mov
xor
jmp
xor
in
lahf
xor
in
mov
add
add
add
cltd
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
incl
add
mov
add
aaa
shlb
clc
loope
std
hlt
lock
cld
sti
cli
repz
clc
out
call
push
in
out
imul
out
clc
out
jmp
lcall
aaa
add
popf
cmp
lcall
aaa
add
popf
cmp
lcall
cmp
lcall
aaa
add
add
add
shlb
push
aad
sti
out
jmp
cld
sti
stc
icebp
in
push
in
out
imul
out
imul
out
clc
out
out
clc
out
jmp
jmp
xchg
jg
xchg
xchg
cmp
dec
sbb
inc
mov
shlb
cmp
mov
add
mov
add
aaa
shlb
std
cld
std
cli
stc
cld
stc
idiv
std
cli
stc
jmp
push
push
lcall
push
sbb
jmp
inc
or
cmpsl
inc
or
test
or
cmpsl
inc
or
add
add
shlb
incl
cld
stc
idiv
cmc
jmp
hlt
out
push
jmp
in
stc
repnz
cld
clc
idiv
pushl
push
adc
mov
adc
mov
ud0
push
ud0
push
adc
mov
adc
mov
ud0
add
mov
add
aaa
shlb
mov
sahf
jnp
mov
pop
adc
mov
jae
dec
xchg
lret
addl
mov
add
mov
add
aaa
shlb
incb
add
push
jmp
sar
repnz
push
out
push
in
in
cli
repz
std
sti
cli
inc
gs
jmp
sar
addl
insb
and
leave
je
dec
jb
inc
imul
les
incl
add
mov
add
aaa
shlb
dec
insl
sbb
lret
dec
insl
sbb
lret
dec
insl
sbb
lret
dec
insl
sbb
lret
dec
insl
sbb
lret
incl
add
mov
add
aaa
shlb
call
call
call
call
call
call
call
call
call
call
ljmp
mov
inc
in
call
je
call
je
inc
mov
shlb
shlb
call
je
call
je
call
je
call
jne
call
je
incl
add
mov
add
aaa
shlb
mov
jmp
inc
in
inc
in
inc
in
inc
in
inc
in
inc
in
inc
in
inc
in
std
inc
in
call
jl
ljmp
sarb
fisttpl
pop
jmp
lahf
pop
fadds
and
xlat
jl
incl
add
mov
add
aaa
shlb
mov
lock
in
cld
push
jmp
push
in
in
cmc
call
in
std
sti
cli
fiadds
dec
pushl
test
jmp
mov
fiadds
fldl
add
shlb
push
std
dec
idiv
cld
div
cld
clc
idiv
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
sub
jmp
lea
jmp
lea
jmp
lea
incl
add
mov
add
aaa
shlb
call
aam
push
sti
repz
push
jecxz
push
jecxz
push
jecxz
push
ljmp
stc
icebp
jmp
jmp
sub
mov
xchg
sub
push
mov
jp
out
stos
pop
in
xchg
cs
in
xchg
sub
mov
add
aaa
shlb
fcomi
les
cld
cld
sti
div
sti
cmc
icebp
sti
div
cld
clc
idiv
cld
clc
cmc
std
cli
stc
push
pushf
xor
mov
fcmovb
push
popf
xor
repnz
xor
repz
push
test
push
pushf
xor
repnz
xor
repnz
xor
add
add
shlb
out
pushf
xor
loop
push
fdivs
xor
repz
xor
repnz
xor
repnz
xor
repnz
xor
repz
xor
repz
xor
add
add
add
xor
add
add
jne
call
jne
incl
mov
cmp
jmp
mov
loop
sub
loopne
sub
loopne
sub
jmp
mov
loop
sub
loop
sub
jecxz
sub
jmp
sub
loop
sub
jmp
mov
loope
sub
loope
sub
in
sub
push
pushf
xor
add
add
add
and
add
add
jne
fldl
lret
xchg
mov
jmp
mov
jmp
mov
jmp
mov
loopne
sub
fisttps
sub
fisttps
sub
loopne
sub
fimuls
sub
flds
sub
faddl
jmp
lea
dec
mov
add
add
add
add
clc
movsb
xor
jmp
mov
in
xchg
xor
cmc
mov
xor
repz
xor
repnz
xor
icebp
popf
xor
lock
xor
out
fwait
xor
out
lcall
lock
xor
out
lcall
in
xchg
xor
jmp
xor
out
cltd
xor
repnz
xor
out
cltd
xor
mov
xor
sub
add
or
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
aas
sub
add
adc
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
jmp
and
es
pushl
mov
ljmp
mov
inc
imul
push
sbb
xchg
inc
or
decl
inc
push
call
dec
ud0
add
cltd
cmp
cmp
sub
and
sbb
ret
lcall
sahf
sub
pop
sub
es
sub
mov
je
call
je
call
je
call
jne
jmp
jl
call
je
incl
add
cltd
xor
lcall
nop
aas
ficoms
decl
mov
adc
sub
sub
and
mov
mov
jmp
test
jmp
test
jmp
mov
add
add
or
jns
ljmp
lods
jmp
lock
call
pushf
cmp
lcall
test
fsts
cs
out
xchg
sub
in
xchg
sub
out
xchg
sub
lahf
xor
icebp
cltd
xor
add
add
ss
das
call
jl
call
cmp
pushl
push
cmp
inc
call
shlb
pop
jl
stc
mov
mov
inc
mov
inc
inc
dec
cld
scas
inc
incl
add
xchg
cmpsl
pop
cmp
sub
cmp
daa
incl
xor
sub
jbe
sti
mov
push
stc
rorl
lds
test
pop
std
mov
add
sarl
dec
mov
int3
xchg
js
mov
lds
jno
int
jnp
mov
sub
lcall
cmp
xchg
sub
incl
add
xchg
add
adc
add
add
add
add
mov
cmc
push
std
jmp
jns
jmp
jae
ljmp
add
xchg
add
adc
add
add
add
add
mov
jmp
std
sti
push
in
push
out
ljmp
mov
aaa
dec
imul
mov
add
xchg
add
adc
add
add
add
add
mov
fdivr
lock
ljmp
jmp
push
cli
mov
mov
gs
xlat
jp
dec
outsb
push
incl
add
xchg
add
adc
add
add
add
add
repnz
decl
decl
inc
ljmp
xchg
xlat
leave
inc
pushf
pop
jmp
xchg
fnstcw
incl
add
xchg
add
adc
add
add
add
add
mov
jmp
push
ljmp
ficoml
inc
ljmp
call
add
xchg
add
adc
add
add
add
add
mov
ljmp
stc
call
call
mov
call
mov
pop
stc
mov
add
nop
push
incl
mov
xchg
out
les
push
lds
fcomps
sub
jmp
add
add
push
fidivrl
lret
jno
sarl
out
test
jmp
test
jmp
adcl
out
adc
jmp
mov
jmp
mov
ljmp
add
adc
add
incl
add
incl
add
add
sbb
add
sbb
add
and
add
pop
incl
add
add
add
dec
incl
add
add
xor
add
das
incl
add
incl
pop
and
add
add
push
add
and
add
add
add
add
add
adc
adc
add
add
addb
add
add
and
add
add
add
or
add
add
adc
add
add
add
add
and
add
add
add
adc
add
add
add
add
add
add
add
