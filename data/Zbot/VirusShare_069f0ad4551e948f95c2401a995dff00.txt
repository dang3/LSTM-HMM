sub
mov
xor
mov
sub
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
cmc
jae
mov
sub
mov
mov
pusha
call
add
fbstp
fistpl
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
aas
pop
fildll
insl
lret
fsubs
shr
rcll
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
inc
adc
fildll
js
rcrl
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
lds
sbb
inc
mov
jbe
fmuls
push
and
stos
adcb
or
mov
jne
sbb
sarl
out
dec
dec
push
aaa
pop
mov
leave
mov
cmpsl
icebp
into
jle
jns
lret
andb
dec
xor
cwtl
int
xor
pop
mov
adc
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
inc
fnstcw
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
xchg
push
cmp
or
dec
std
ret
out
addb
popf
sbb
ret
sub
sub
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
mov
mov
mov
sub
push
pop
push
pop
test
je
add
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
jmp
mov
pop
ret
jne
sbb
mov
movb
in
xchg
mov
cmp
and
sbb
mov
jns
out
cmpsl
push
inc
pop
fldln2
sbb
call
mov
cmpb
dec
add
das
mov
xchg
xchg
cld
int
ret
push
xor
sbb
gs
fidivs
inc
adc
mov
xor
and
fadds
lods
mov
jmp
ret
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
push
popl
mov
push
pop
cmp
or
add
and
add
and
add
and
add
and
add
and
add
add
shlb
add
add
sub
add
cwtl
and
add
add
dec
and
add
and
add
and
add
add
add
add
ljmp
add
add
add
add
into
and
add
add
jo
add
mov
add
dec
and
add
and
add
add
jp
add
les
add
test
add
fisubs
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
pusha
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
shlb
add
add
sub
add
cwtl
and
add
add
dec
and
add
and
add
and
add
add
add
add
ljmp
add
add
add
add
into
and
add
add
jo
add
mov
add
dec
and
add
and
add
add
jp
add
les
add
test
add
fisubs
add
add
add
fwait
add
je
jbe
outsb
je
add
insb
jae
jb
outsb
push
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
gs
jb
arpl
jae
gs
jo
add
insb
jae
jb
jo
inc
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
gs
icebp
add
imul
jb
je
arpl
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
outsl
popa
fs
imul
add
aad
inc
gs
gs
inc
imul
gs
jo
imul
inc
outsl
jo
inc
imul
gs
jb
jbe
push
jns
gs
add
add
popa
jo
gs
jb
jns
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
je
imul
bound
gs
add
pop
add
fs
je
insl
push
add
inc
add
outsb
arpl
dec
outsl
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
push
dec
push
cs
insb
add
add
add
add
xor
add
jo
add
pop
add
sbbb
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
popa
add
test
add
cmp
add
loopne
add
mov
add
cwtl
mov
add
push
add
add
call
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jl
jp
stos
lods
lods
add
test
mov
mov
mov
ret
lret
lret
int
rcl
shr
rcl
shl
rcl
shl
into
int3
int3
hlt
leave
leave
repz
vshufps
mov
mov
stos
stos
lods
lea
fwait
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
leave
not
rcl
cld
fcom
std
xlat
xlat
fcom
aam
rcl
sar
int
into
aad
ror
sar
ret
mov
mov
iret
movsl
mov
mov
das
xor
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
scas
sbb
mov
jnp
mov
mov
dec
lret
iret
iret
iret
aad
aad
xlat
call
xlat
fdivr
aad
dec
into
into
dec
int3
int
aad
int
into
inc
rol
mov
mov
lods
std
cmpsb
cmpsl
test
xchg
xchg
xchg
mov
pop
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
or
or
sbb
push
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int3
int3
call
rcl
call
fcom
call
xlat
fdivr
aad
aad
int3
int3
int3
dec
lret
leave
dec
int3
int3
inc
mov
mov
mov
cmpsb
cmpsb
cmpsl
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
arpl
push
imul
pop
pop
pop
fs
sbb
movntps
aaa
aaa
aaa
cmp
cmp
adc
push
pop
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
mov
dec
enter
rcl
call
aad
call
aad
ror
sar
leave
leave
leave
inc
inc
mov
mov
scas
scas
scas
jmp
sahf
xchg
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jle
jle
jle
jge
jo
jno
arpl
mov
cmp
inc
mov
jo
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
leave
dec
lret
enter
mov
mov
ljmp
movsb
mov
call
xchg
xchg
cwtl
cwtl
xchg
fwait
lcall
aas
cmp
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jp
xchg
lea
incb
jl
idivb
jnp
jo
outsl
out
addr16
jae
jne
jle
jle
jns
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
nop
incl
test
xchg
xchg
xchg
sahf
sahf
mov
ficoms
nop
nop
jle
jp
pop
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
incl
mov
std
mov
jge
jb
jo
jae
jne
jg
jge
test
xchg
pushw
cmp
cmp
and
es
jge
jle
cltd
lcall
stos
test
icebp
lods
lods
lods
sti
stos
lods
lods
lods
lods
lods
test
mov
lcall
xchg
jp
jp
jl
jnp
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
or
dec
insl
insb
imul
test
cltd
fwait
cltd
fistps
cltd
fwait
stc
xchg
xchg
std
mov
mov
mov
mov
lea
lcall
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
cmpsb
lods
add
pop
adc
scas
call
lcall
incl
xchg
xchg
xchg
xchg
pushf
popf
pushf
std
mov
mov
xchg
in
xchg
nop
nop
in
xchg
push
jne
push
push
dec
add
inc
or
or
sub
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
mov
call
mov
test
lods
test
scas
pushl
lahf
scas
mov
mov
mov
mov
ljmp
sahf
adc
add
add
pop
adc
scas
mov
ret
lcall
xchg
decl
nop
xchg
call
xchg
xchg
popf
popf
pushf
movsb
mov
test
movsb
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pop
popa
popa
jne
jb
mov
jge
test
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
jbe
mov
movsb
mov
mov
mov
mov
movsb
movsl
add
mov
add
pusha
adc
mov
lcall
mov
call
xchg
xchg
call
xchg
xchg
cltd
cltd
lcall
mov
movsl
std
mov
lcall
mov
xchg
aad
xchg
fwait
in
xchg
xchg
out
xchg
cmc
mov
xchg
cld
xchg
adcl
lahf
pop
test
movsl
dec
cmp
inc
jnp
mov
jns
mov
je
mov
insl
ljmp
adc
lods
or
stos
or
mov
jge
mov
mov
lods
pushf
mov
mov
add
shll
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
popf
sahf
lcall
popf
popf
lcall
xchg
cwtl
decl
cwtl
xchg
call
fwait
cld
cltd
cltd
sahf
stc
mov
xchg
sahf
cld
sahf
xchg
xchg
push
xchg
pop
jge
xchg
dec
js
fwait
cmp
push
pushf
push
imul
movsl
adc
jmp
adc
stos
adc
lods
adc
scas
adc
mov
imul
adc
mov
insb
mov
cltd
lods
mov
lods
lods
scas
movsl
movsb
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
pushf
sahf
lcall
movsb
movsl
jmp
mov
xchg
decl
mov
decl
ja
fwait
jo
cltd
fs
xchg
dec
jns
xchg
cmp
imul
sbb
pop
call
add
pop
lcall
pop
pop
jmp
sbb
mov
outsb
pushl
pop
outsl
mov
and
mov
pop
jbe
rolb
ret
mov
scas
scas
mov
mov
movsb
movsl
add
pop
pop
adc
lods
mov
mov
cwtl
pushf
lcall
mov
test
test
cmpsb
ljmp
cmpsb
cmpsl
lcall
jle
decl
outsl
decl
sub
mov
pusha
decl
or
addb
decl
add
nop
add
xchg
add
lcall
ljmp
push
outsb
pushl
sub
mov
sub
ret
inc
sub
cmp
movl
inc
mov
scas
lret
movsb
dec
mov
mov
add
add
add
lods
mov
push
adc
cmpsl
lods
ljmp
sahf
jmp
stos
test
stos
lods
stos
ljmp
mov
ljmp
mov
mov
mov
push
incl
or
add
addb
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
adc
mov
ss
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
movsl
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
sahf
lcall
scas
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
push
incl
pop
push
incl
add
mov
push
call
add
popf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
call
dec
mov
fmuls
call
dec
xchg
fisttpll
fistl
call
test
mov
mov
movsb
mov
lahf
or
add
add
add
add
inc
dec
adc
jnp
mov
test
lcall
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsl
xchg
decl
popa
decl
adc
pop
decl
add
nop
add
xchg
add
pushf
add
add
test
pusha
ljmp
pop
arpl
shll
int
mov
aad
xchg
fcoms
ficoml
fistpl
jmp
push
pushf
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
lahf
lahf
or
xchg
xchg
xchg
add
adc
js
mov
movsb
test
lahf
cltd
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
decl
and
call
arpl
xchg
sbb
xchg
or
call
add
lcall
ljmp
add
mov
fs
mov
xor
call
pop
lcall
mov
jmp
cmpsb
jmp
cmpsl
jmp
addr16
jmp
addr16
faddl
ret
mov
test
sahf
sahf
sahf
adc
xchg
xchg
xchg
add
inc
inc
adc
jb
lcall
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
xor
fwait
xor
cwtl
sub
xchg
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
adc
roll
jmp
outsb
lods
jmp
jo
jmp
jno
ljmp
in
jae
out
jne
in
jne
out
jae
jmp
mov
mov
test
lcall
sahf
add
add
cmp
insl
js
mov
sahf
pushf
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
lods
lcall
outsl
lcall
cmp
mov
sbb
pop
call
add
add
test
pop
pushl
add
mov
sbb
fsts
jmp
js
jmp
jg
jmp
mov
out
cmpb
lock
push
test
ljmp
mov
stos
test
sahf
sahf
pushf
daa
sahf
sahf
mov
add
add
add
add
xor
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
ret
mov
mov
lahf
outsb
mov
lcall
jmp
cmp
lcall
lcall
pop
ljmp
add
add
add
les
imul
loopne
movsl
call
mov
repnz
push
xchg
ret
push
pop
push
xchg
ret
push
xchg
ret
clc
xchg
push
pop
out
nop
sar
mov
inc
lods
test
xor
pushf
sahf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
mov
jle
lcall
dec
cmp
dec
test
movsb
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
leave
push
insl
call
xor
in
xchg
ret
push
fwait
push
cltd
push
lcall
negb
int3
sti
popf
int
sti
lahf
int3
cli
cltd
lret
push
xchg
ret
mov
dec
mov
rcrb
nop
add
add
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
ret
vshufps
mov
ljmp
dec
jg
stos
dec
mov
scas
dec
xchg
mov
or
sahf
add
movsb
add
lods
add
mov
arpl
mov
add
movl
jbe
fiadds
out
mov
push
movsl
into
push
movsb
int
stc
cmpsl
iret
sti
test
into
sti
test
sar
cld
stos
sar
cld
test
push
sahf
jmp
mov
dec
leave
int
mov
mov
lahf
lahf
sahf
dec
xchg
xchg
xchg
add
fwait
fwait
add
add
add
xor
sub
or
inc
bound
pop
xlat
jae
jno
mov
mov
ret
sarb
ret
ret
mov
dec
mov
pushl
push
test
lods
push
mov
lods
dec
test
mov
add
jmp
add
mov
fs
mov
add
into
add
add
adc
pop
cmpsb
push
popf
lret
sti
lods
aam
cld
scas
cld
scas
aam
cli
scas
sar
mov
std
mov
std
mov
mov
pushl
sar
cmc
cmpsb
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsb
outsl
outsb
mov
mov
fsubr
xlat
xlat
not
rcl
std
lret
dec
lret
lret
dec
lret
lret
inc
leave
mov
scas
ljmp
push
mov
stos
cmp
jmp
add
lods
add
mov
mov
add
rolb
outsb
fadds
jae
loopne
jne
jmp
jno
cld
lods
aad
std
mov
cld
mov
fcos
std
mov
fdivr
cld
mov
fdivr
std
mov
fdivr
clc
mov
jmp
mov
call
lret
mov
lahf
mov
or
add
add
xor
add
add
add
or
leave
movb
jecxz
out
call
test
jecxz
leave
fstp
fsubp
fcmovu
fcomp
xlat
cli
aam
fdivr
int3
ror
mov
imul
jmp
add
mov
popa
mov
add
lret
add
aam
jno
fildl
ja
in
ja
in
das
xchg
push
mov
cld
mov
loope
inc
loopne
std
loopne
inc
inc
dec
loopne
inc
dec
loopne
dec
std
lret
cli
mov
enter
into
mov
mov
xchg
adc
add
add
incl
std
std
add
incb
hlt
div
or
out
in
pop
in
out
in
sub
in
in
dec
jmp
call
out
jecxz
out
fcmovu
fucomi
ret
mov
xchg
cmpsl
cmp
movsb
adc
pop
ljmp
add
mov
add
int
outsb
call
add
fiadds
jbe
call
inc
fwait
cli
mov
jecxz
dec
in
dec
in
std
int3
in
dec
loop
std
int3
loope
dec
loope
std
iret
loop
dec
jecxz
shl
call
in
cli
fdivr
out
mov
inc
ret
out
cmpsl
test
mov
xchg
cwtl
add
add
add
incb
incb
cmc
clc
testb
repnz
repnz
push
out
icebp
out
pop
out
lock
cmp
out
in
pop
fsubp
loope
lds
xchg
sti
lahf
and
pop
jmp
add
mov
fs
add
enter
roll
jno
fildl
jbe
in
jnp
in
push
pop
test
std
shl
shl
std
shr
std
shr
call
jecxz
call
out
std
fsubr
fsub
fldl2t
std
fldl2e
std
cld
shl
push
ret
in
fcos
lret
repz
test
and
cwtl
xchg
add
cli
add
stc
add
cli
stc
add
cmc
hlt
or
aad
xor
mov
xchg
negb
add
add
scas
add
mov
add
lret
add
roll
jb
fldl
ja
out
ja
out
sbb
sti
std
fsubr
fldpi
std
fucompp
fsubr
fucomp
fsubr
loopne
fsubrp
fsubrp
cld
shl
push
ret
aad
out
rcl
sar
stos
lods
stos
lods
xchg
xchg
xchg
outsl
outsl
jo
xchg
xchg
xchg
add
loopne
add
enter
mov
xchg
repnz
and
lahf
add
cmpsb
add
mov
arpl
mov
add
int
outsl
call
add
fiadds
je
call
sub
shl
fucomip
fucomi
fucomi
fsub
aad
std
shl
cld
shl
cld
shl
stc
into
fdivrp
stc
lret
cmc
ret
in
mov
xlat
fcomp
sti
mov
mov
fwait
cltd
fwait
cmp
fwait
add
xlat
add
enter
mov
lahf
jmp
sub
add
ljmp
add
mov
add
rolb
jo
fadds
jb
loopne
jp
jmp
ss
cli
xchg
cld
leave
loopne
cli
int3
loop
cli
idivl
sar
repz
iret
push
mov
int
jmp
mov
sar
ljmp
imul
cmc
loopne
fucomip
mov
mov
xchg
add
add
add
into
lret
add
rol
mov
cmpsb
loopne
xor
jmp
add
mov
gs
mov
add
into
push
jno
rorb
fsts
jns
loopne
cmp
jmp
scas
lret
mov
out
leave
std
loope
mov
cli
fdivl
lock
int3
in
enter
rcl
shl
xlat
fcmovnb
out
loopne
in
in
test
out
out
popf
call
lret
lret
lods
lods
adc
cmpsl
test
add
ret
mov
sahf
stos
aam
dec
cmp
cmpsb
sbb
jno
mov
ja
mov
inc
test
ret
stc
leave
gs
test
mov
shll
enter
lret
rol
lret
mov
into
shlb
xlat
rcl
jg
fcmovnu
jb
loopne
gs
in
out
out
jmp
cmc
hlt
sub
div
and
icebp
lock
or
mov
int3
add
add
add
mov
roll
mov
test
pushf
cmc
mov
je
ljmp
mov
sarb
test
mov
mov
cmpsl
leave
mov
mov
leave
lret
jp
into
into
addr16
iret
push
iret
rcl
dec
xlat
inc
aam
aam
aad
fldenv
xlat
sbb
adc
in
push
loopne
in
out
ljmp
cli
cmc
add
sti
add
incb
incl
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
ret
inc
rol
xor
into
lret
ror
and
aam
sbb
aad
adc
aad
or
fcom
push
rcr
fadds
add
loopne
add
in
add
in
jmp
add
std
std
add
mov
add
ret
ret
sub
mov
mov
push
rol
or
enter
leave
movl
leave
aad
add
fcom
add
fcom
add
fcom
add
aad
add
xlat
loop
fiaddl
fnstsw
loopne
loopne
jecxz
call
add
std
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
mov
mov
mov
test
stos
dec
test
xchg
xchg
pop
add
add
add
add
add
add
scas
scas
scas
adc
mov
aam
iret
iret
jmp
aad
cmc
rcl
sar
into
ror
cli
lret
int
stc
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
aas
ds
and
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
into
ror
xlat
xlat
call
xlat
call
rcl
dec
int
dec
int3
lret
mov
mov
lods
stos
lods
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jae
jne
fs
dec
inc
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
int3
int3
call
rcl
call
aam
dec
lret
lret
inc
rol
pushl
test
cwtl
xchg
xchg
jmp
outsl
jno
push
adc
add
add
add
add
add
jg
addb
jnp
addl
aam
push
mov
push
push
push
stos
imul
push
pop
pop
cmp
aaa
aaa
pop
jno
outsl
adc
mov
mov
sar
mov
mov
mov
ljmp
pushf
pushf
call
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
lcall
pushf
xchg
lcall
addb
jge
jl
jp
jp
jns
jns
jp
jns
jb
je
push
push
push
cmp
aaa
popf
sahf
sahf
mov
scas
lods
rep
scas
scas
sti
lods
scas
scas
std
test
sahf
pushf
call
xchg
call
mov
scas
jmp
scas
lods
leave
movsb
movsl
cmpsb
cltd
je
jb
adc
adc
add
add
add
add
outsl
outsb
outsl
pop
xchg
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
outsl
orl
cltd
cltd
repnz
xchg
xchg
std
mov
call
lahf
ljmp
stos
mov
mov
scas
mov
mov
mov
cmpsb
movsb
movsl
pop
jg
jg
popa
popa
pusha
or
lods
mov
movsl
sahf
movsb
decl
lea
lcall
popf
mov
negl
addb
push
pop
pop
outsl
insb
insl
outsb
xchg
subl
xchg
lock
lcall
mov
mov
xchg
mov
mov
jge
mov
lods
stos
insl
stos
test
add
add
add
popa
pop
pusha
or
mov
in
movsb
cmpsl
call
xchg
xchg
lcall
cwtl
cltd
cltd
lcall
fwait
popf
pushf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
lea
out
xchg
jne
notb
jg
sahf
dec
jp
mov
aaa
jbe
mov
jae
scas
push
outsb
ljmp
sbb
mov
scas
mov
scas
mov
jle
movsl
mov
add
add
add
pusha
or
mov
in
movsl
test
cltd
cwtl
cwtl
lcall
mov
mov
decl
orl
xchg
jb
cld
cwtl
pop
test
xchg
dec
jp
nop
cmp
xchg
daa
imul
xchg
adc
lahf
or
ljmp
pushl
sbb
mov
and
pop
nop
mov
lods
scas
xchg
popf
lahf
sahf
adc
add
add
pusha
pop
pop
or
lods
mov
stos
mov
mov
ljmp
cmpsl
cmpsl
lcall
pop
jns
mov
push
mov
arpl
mov
pop
decl
or
mov
push
decl
add
popf
add
cmpsb
or
jb
mov
das
jle
ret
xor
enter
lret
dec
pop
cwtl
inc
stos
mov
mov
scas
movsb
cmpsl
test
sbb
add
add
popa
pop
pop
or
movsb
stos
in
mov
test
scas
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
xchg
decl
add
xchg
add
mov
add
mov
insl
inc
aaa
cmp
inc
mov
rolb
roll
call
inc
xchg
fiaddl
call
bound
stc
mov
mov
movsl
movsb
movsl
daa
std
incl
add
add
pusha
popa
pop
or
mov
ljmp
mov
mov
mov
ljmp
push
jnp
mov
call
pop
pop
decl
add
xchg
add
sahf
add
cmpsb
add
scas
add
jbe
rorb
call
pop
pushf
fcompl
ficomps
jmp
pop
mov
jmp
insb
test
lret
test
cld
mov
mov
cmpsb
stos
cmpsb
xor
addb
add
add
dec
pop
jge
jl
popf
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
lcall
cs
lcall
and
call
pop
lcall
add
scas
add
mov
xor
jmp
insl
stos
jmp
outsl
stos
call
jno
in
jae
jmp
jp
call
test
mov
test
addb
dec
dec
dec
pop
outsl
insl
imul
xchg
cltd
lcall
mov
mov
sar
mov
jmp
jbe
mov
sub
xchg
or
lcall
add
stos
add
mov
gs
or
call
inc
xchg
jmp
jns
jmp
mov
out
test
push
mov
out
mov
mov
test
push
fwait
fwait
lcall
sub
push
push
push
dec
pop
addr16
xchg
mov
mov
mov
mov
mov
xchg
jmp
sub
fwait
or
mov
add
mov
arpl
mov
push
jbe
fistps
in
xchg
mov
push
xchg
push
cwtl
stc
lcall
notb
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
ret
pushl
push
mov
stos
dec
cmp
pop
insb
lcall
add
mov
fs
mov
add
and
push
mov
sar
clc
test
sar
std
stos
sar
cld
lods
sar
stc
cmpsl
lret
jmp
mov
inc
rol
stos
stos
stos
jne
pushf
pushf
or
add
add
dec
dec
dec
aaa
jb
jae
test
int3
int
lret
into
int3
cmc
lret
sti
enter
enter
mov
popa
mov
stos
inc
jg
mov
add
mov
arpl
roll
dec
add
fildl
clc
xchg
cld
mov
std
mov
xlat
cld
mov
xlat
mov
sar
jmp
lret
rol
scas
scas
scas
mov
add
add
add
add
or
aam
dec
jecxz
loopne
fcmovnu
ffree
fcmovu
aam
xlat
out
shll
test
jae
movsl
pop
pusha
ljmp
add
leave
add
add
in
jnp
lock
mov
cld
loopne
dec
dec
loopne
dec
fdivrp
dec
loopne
cld
out
mov
lret
mov
xchg
pushf
sahf
sahf
sbb
add
add
std
add
std
incb
ljmp
in
in
in
xor
loopne
in
mov
mov
mov
add
mov
inc
add
into
add
fildl
je
jmp
outsb
mov
std
fdivrp
cld
shl
std
shl
std
shl
call
out
std
out
call
call
push
xlat
fmul
sar
mov
mov
add
std
add
incb
std
std
std
pop
push
mov
pop
xchg
popf
or
stos
add
mov
arpl
lds
push
rolb
jno
filds
jbe
out
and
std
shl
fldpi
fucompp
std
fld1
cld
fsubr
cld
fsubr
fsub
sti
shl
push
enter
rcl
sti
mov
sahf
popf
das
add
add
int3
into
into
or
bound
ljmp
add
movb
call
add
loop
jns
out
xor
stc
int
cli
lret
cmc
fsin
bnd
repz
aad
out
ret
sar
in
aad
out
aad
ljmp
ljmp
test
std
add
add
add
aad
push
mov
jb
or
mov
insl
inc
sbb
int
jl
sub
sti
loopne
pushf
clc
in
mov
out
loop
lret
mov
lret
fdivrl
sarl
in
ficompl
out
jmp
rorb
mov
add
stos
lods
stos
add
xchg
mov
ljmp
xchg
fidivrl
andb
int
mov
iret
mov
nop
aam
leave
jge
int3
insl
ror
int
aam
rorl
fcom
cmp
fnstsw
das
in
fisubs
loop
repnz
in
jmp
faddl
std
incb
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
aam
rcll
mov
rcl
or
loope
or
into
int3
add
std
std
std
add
incl
lcall
pextrw
or
int
int
stos
stos
stos
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
lcall
ret
mov
xchg
mov
mov
mov
scas
mov
stos
stos
lods
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aad
std
rcl
sar
into
iret
into
std
mov
mov
sarl
sbb
pop
add
add
add
add
add
add
add
add
jb
jno
data16
inc
inc
das
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
into
call
rcl
dec
int
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
jne
je
xchg
adc
outsb
outsb
ret
bound
outsl
outsl
insl
jb
pusha
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
lcall
xchg
cwtl
lds
jb
daa
and
add
add
add
jb
jae
pushf
xchg
fwait
mov
xchg
mov
xchg
test
test
push
push
push
inc
mov
pushf
into
movsb
mov
mov
decb
mov
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
cwtl
lcall
push
push
push
imul
jg
lea
xchg
notl
mov
pushl
xchg
mov
stos
mov
test
lods
stos
add
add
add
scas
test
xchg
xchg
xchg
lcall
cltd
cltd
lcall
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
nop
arpl
std
pushf
inc
jbe
movsl
ss
scas
sub
jo
mov
outsb
pushl
popf
lods
lock
mov
imul
int3
add
xchg
pop
scas
movsb
stos
test
lahf
popf
popf
jmp
movsl
call
jl
lea
xchg
inc
je
mov
imul
xchg
adc
xchg
or
mov
push
outsb
pushl
es
ret
inc
aas
xchg
rcrb
subl
jae
push
mov
mov
cmpsb
ljmp
scas
mov
mov
sub
mov
pop
incl
add
decl
pop
jmp
adc
shll
call
inc
mov
aad
call
push
xchg
dec
lcall
movsl
mov
add
imul
test
mov
scas
pushl
mov
movsb
call
pop
call
pop
pop
call
add
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsb
call
fwait
mov
test
cmpsl
cmpsl
pop
add
add
popa
arpl
mov
lcall
mov
mov
lcall
xor
cwtl
and
xchg
or
sahf
add
add
mov
xor
jmp
outsl
lods
jmp
js
in
jp
out
jle
out
jle
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
mov
arpl
lcall
add
pop
pushl
outsb
fimull
in
mov
hlt
xchg
push
xchg
leave
push
xchg
jmp
cmpsb
inc
mov
movsb
sub
inc
aas
inc
adc
push
xchg
xchg
mov
inc
sarl
stos
dec
cmp
movsl
add
mov
arpl
ret
call
vmwrite
in
outsb
lods
clc
cmpsb
int
stc
stos
sar
sti
lods
sar
cld
scas
sar
lods
iret
in
mov
inc
mov
movsb
ds
std
incl
xor
xor
outsl
jo
inc
scas
mov
mov
aam
mov
aad
fnop
rcl
out
lret
enter
mov
jmp
add
add
aad
jb
out
test
clc
pop
mov
cld
ret
inc
inc
fcos
out
mov
shl
test
jg
add
add
lods
lods
stos
add
in
in
or
jmp
out
outsb
movsb
daa
outsb
ljmp
add
lret
faddl
jne
out
aaa
xchg
sti
mov
cld
into
out
call
in
std
shl
call
out
call
out
hlt
enter
enter
scas
lods
popa
jg
addb
add
incl
std
push
int3
lret
shrl
sahf
sbb
stos
add
mov
add
jecxz
jp
cmc
push
movsl
inc
loope
cld
xlat
call
cld
aad
sti
aad
cli
shl
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
add
mov
or
ficomps
cmp
out
mov
aam
jmp
ror
jmp
lret
aad
jmp
fcmovnu
scas
ret
vsqrtps
add
add
rol
mov
stos
xchg
dec
and
push
mov
ret
int3
lret
mov
fdivrs
int3
adc
into
outsl
fxch
into
pop
aad
in
loope
call
in
out
sbb
sarb
cmp
movsb
lods
arpl
stos
mov
ret
mov
ret
and
ror
fisttps
into
int3
into
or
aam
push
incl
addl
add
stos
std
std
add
mov
std
add
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
mov
jmp
sbb
insl
cli
insl
xor
mov
lret
xchg
xchg
cmp
repz
pop
inc
jae
dec
es
test
clc
pop
xorb
jge
adc
enter
push
mov
pop
xchg
ds
mov
xchg
and
push
ret
push
pop
and
jle
int
fld
jmp
cmpsl
adc
and
lcall
push
or
repz
inc
xor
out
stc
jl
push
mov
vmaxsd
sbb
jae
jle
cmp
dec
or
cmp
xchg
fs
stos
push
adc
popf
icebp
test
and
jne
cmpsb
mov
xchg
popa
add
fwait
test
fidivrl
mov
dec
cmp
pop
sti
sub
js
das
xor
in
cmp
daa
adc
in
outsl
push
in
insb
rcll
pop
aam
pop
push
movsb
jae
mov
push
test
les
test
add
shll
jecxz
jl
fwait
icebp
iret
shl
pop
or
popf
pop
les
pop
incb
popa
icebp
lea
fldenv
cmp
xor
std
push
test
xor
loopne
sub
sbb
lret
mov
subb
jge
ja
mov
ficoms
cmpsl
inc
mov
xor
push
call
shr
scas
inc
jp
mov
addr16
add
pop
and
insb
into
inc
add
adc
lods
inc
ret
xlat
sub
sarb
lds
enter
mov
jb
jnp
leave
mov
or
movb
push
jno
ret
jp
mov
mov
cld
mov
push
add
pushf
cmp
shlb
push
dec
pop
mov
push
dec
pop
push
cmp
xchg
leave
push
aas
lret
dec
or
leave
mov
mov
push
cld
mov
jb
mov
insl
imul
aaa
ret
cmp
sbbb
das
xchg
pop
push
push
mov
insl
sbb
push
inc
mov
mov
dec
push
and
fwait
pushf
mov
and
in
mov
aaa
mov
xchg
stos
mov
mov
or
inc
sub
push
xchg
push
inc
cmc
jmp
push
mov
fwait
pop
or
bound
mov
jg
mov
or
dec
jmp
xorl
stc
mov
pop
lcall
or
pop
cmp
stos
xor
scas
ss
in
jae
mov
mov
sbb
push
push
inc
xor
push
mov
and
out
inc
or
out
cltd
inc
mov
pop
add
test
xchg
cmpsb
cmp
adc
jl
push
dec
lea
test
sarl
pop
add
faddl
sbb
dec
clc
out
pop
push
aam
mov
cli
xchg
gs
adc
xor
push
rolb
pop
inc
or
enter
insb
sbb
sub
cltd
add
push
add
fistps
dec
adc
jo
mov
ja
xchg
out
inc
or
je
pop
mov
mov
adc
xchg
and
ret
lahf
or
pop
fwait
and
pop
pop
jp
xor
loopne
jns
cld
xchg
mov
mov
xor
dec
jbe
sub
sub
lock
mov
jge
mov
ljmp
jno
mov
ss
xchg
xlat
ja
sarl
stc
cwtl
shr
lock
mov
sbb
andl
sbb
data16
and
adc
and
inc
mov
sbb
out
sbb
inc
mov
cmpl
add
movsb
cs
xlat
cmp
es
repz
jecxz
xchg
cld
mov
enter
outsl
or
cmc
sbbl
sub
aam
adc
imul
testb
out
fstl
add
loope
inc
mov
icebp
mov
shl
lahf
add
mov
fdivl
addr16
repnz
out
mov
adc
mov
push
call
int3
cmp
inc
gs
dec
push
push
dec
gs
push
je
pop
je
add
subb
dec
ljmp
dec
and
adc
ds
ret
and
xchg
sub
xchg
or
pop
pop
mov
mov
xor
mov
jne
mov
and
cmc
shll
cwtl
adc
in
out
sbb
and
xchg
adc
inc
dec
dec
shrl
push
fildl
push
iret
push
inc
arpl
das
ret
incb
dec
fildl
cmc
xchg
add
scas
xor
mov
repz
rcrl
push
test
and
adc
das
mov
das
test
dec
push
push
int3
pushf
xchg
xchg
inc
ffreep
ja
rcr
mov
lock
aas
jecxz
mov
imull
xor
fldt
call
add
loopne
jno
and
xor
sbb
sub
rcrb
xlat
ljmp
add
int
pop
lea
push
and
gs
test
popf
pop
aaa
insl
jge
mov
jp
xchg
mov
mov
lret
mov
and
aam
std
pop
push
insl
clc
xchg
repz
cmpb
fsubs
cwtl
testb
mov
sbb
int3
cmpsb
add
fsub
lods
clc
cmpsb
mov
in
fwait
push
lahf
ss
cmp
divl
push
mov
fdivl
push
or
pop
sti
xchg
dec
mov
sbb
and
mov
iret
inc
xchg
popa
push
in
xchg
call
je
out
pop
stos
cmc
pop
xchg
sub
push
xor
inc
pop
mov
mov
call
fistpll
out
test
or
or
fucom
stc
adc
sub
xor
pop
push
inc
fiadds
mov
mov
sbb
fidivl
imul
and
mov
jle
sbb
ror
aaa
lret
data16
mov
scas
inc
adc
fnstenv
xor
testl
repnz
nop
int3
cs
lea
test
stos
fnstenv
dec
test
lret
aam
gs
mov
push
jbe
lods
inc
pop
cwtl
fnstenv
cmp
bound
testl
jo
add
pop
ret
mov
mov
in
and
cmp
lods
inc
imul
clc
les
or
cmp
loop
jge
add
iret
scas
push
mov
lock
mov
add
shll
jb
xchg
pop
lock
test
ja
sbb
pop
scas
cs
sub
dec
ss
xor
and
imul
shll
jns
into
call
push
and
das
test
fadd
insl
add
sub
add
cmp
pop
inc
out
jle
push
xchg
outsb
adc
xchg
sbb
xchg
mov
mov
int3
stos
dec
adc
lahf
and
jnp
shrb
cmpsl
adc
pusha
inc
enter
out
cwtl
sbb
dec
mov
pop
hlt
popf
or
cmp
jnp
lock
inc
scas
pusha
mul
fs
push
xor
popf
xor
or
mov
mov
stos
mov
fnstenv
mov
enter
mov
push
out
mov
outsb
add
and
push
call
sub
dec
enter
lea
mov
test
outsl
cmc
call
jne
stc
jns
ret
pop
enter
int3
fdivp
mov
out
lahf
and
mov
icebp
pop
xchg
fidivs
ja
pop
jmp
xchg
sub
mov
decl
int
push
fistps
push
je
test
roll
hlt
test
mov
push
fs
fcoms
mov
stc
call
or
sbb
daa
mov
cwtl
add
xor
cli
orl
sbb
pop
std
xchg
jge
mov
ret
dec
mov
jae
xsha256
cmpsb
lahf
pop
hlt
paddw
je
xor
addl
pop
idivl
add
clc
lret
cwtl
xchg
or
adcb
inc
shrb
lcall
movsl
and
outsb
push
sbbb
pop
mov
dec
or
popf
jle
popf
xor
jo
or
mov
mov
pop
shlb
inc
insl
add
movsl
cmp
pop
in
orl
mov
mov
fidivrl
mov
jecxz
xor
sbb
xor
and
mov
mov
xchg
sarb
shlb
add
test
sbb
das
fadds
arpl
stos
sub
jbe
aas
push
popf
pop
testb
mov
adc
sbb
mov
inc
fidivrl
add
into
cmp
mov
mov
lcall
vpaddusb
mov
adc
mov
icebp
cmp
sti
or
sub
test
icebp
cmpsl
rcll
mov
rorb
in
xor
rcll
int
out
jmp
sahf
or
aad
xor
and
outsb
mov
repnz
out
xchg
std
pop
fs
cli
movsl
jge
icebp
cmp
int3
shl
shll
gs
cltd
lock
enter
and
xchg
das
sbb
add
in
fwait
aam
and
outsl
lds
mov
shrb
adc
inc
lds
cwtl
mulb
in
pop
adc
adc
imul
cmp
mov
pop
loope
int3
arpl
in
pop
xlat
jecxz
mov
ja
into
test
cmp
and
popa
pmulhw
mov
or
sub
pop
mov
dec
in
cld
push
jo
std
inc
aaa
pop
lock
and
or
jo
pop
cs
mov
ret
rcrl
insl
loop
pop
mov
loope
dec
xor
inc
xchg
call
mov
or
fnsave
ret
pop
xchg
cld
mov
sub
repz
jge
aam
dec
mov
nop
daa
aam
mov
out
cmc
shrd
mov
mov
mov
dec
loop
stos
inc
jns
mov
test
lret
sti
adc
in
stos
mov
dec
adc
or
mov
mov
test
push
in
in
mov
stc
add
lds
bound
mov
lock
mov
in
mov
mov
data16
addl
dec
inc
movsb
cmp
into
xor
cmp
push
in
addl
repnz
mov
loop
cmp
mov
sarl
fld
popa
clc
xlat
cli
inc
fcmovb
clc
cmp
enter
jecxz
sbb
test
data16
in
leave
xor
rorl
sub
push
inc
pop
mov
aaa
cmp
mov
ds
and
mov
adc
iret
movsl
mov
daa
mov
jb
adc
sbb
and
outsl
cmp
dec
nop
jno
in
sbb
push
ret
adc
xorl
lods
arpl
in
mov
or
test
cld
sub
icebp
lret
cmp
cmpb
call
test
pop
repz
pop
mov
jmp
push
mov
mov
xchg
div
addr16
push
mov
xchg
mov
ljmp
cmp
add
es
lods
inc
xchg
inc
push
inc
jmp
scas
mov
test
insl
mov
mov
mov
cli
xchg
or
and
inc
mov
adcb
sbb
mov
mov
jb
gs
aam
mov
insb
cmc
es
popa
mov
cli
fs
sbbl
push
mov
icebp
mov
int3
popa
clc
mov
mov
mov
fsubs
lret
bound
roll
or
call
sbb
xchg
decl
jmp
or
sbb
pushf
mov
pop
hlt
mov
fisubs
jecxz
je
roll
addr16
cmp
fnstenv
jbe
or
xlat
outsb
jbe
cwtl
das
xor
inc
mov
enter
in
jb,pt
je
dec
ja
cmp
dec
mov
push
mov
rclb
fs
jne
xchg
sub
xchg
xor
imul
pop
add
jns
lods
movsl
jp
in
lds
mov
aam
mov
hlt
ret
push
cli
lret
cld
sbb
xor
out
loop
mov
push
push
cmc
sarl
jmp
stos
xchg
fdivl
jne
negl
push
mov
mov
push
mov
rclb
divl
mov
rorl
ficomps
rcl
fldenv
mov
mov
mov
fcmovne
pop
fcmovbe
cmc
mov
sti
mov
or
cs
sub
mov
jg
xchg
sbb
fs
mov
fwait
xor
and
jae
pop
jle
add
and
fcoms
scas
inc
pop
ja
int3
inc
jge
aas
fs
faddl
cmpsl
jns
out
test
test
ss
cld
sbb
cmp
pop
mov
and
pop
xchg
inc
pop
lods
mov
inc
pop
into
cwtl
das
add
repnz
in
fnstenv
cmpsl
pusha
negl
push
adcb
cltd
mov
or
mov
mov
out
sbb
cmp
jbe
jge
dec
sbb
in
jo
in
cli
loop
sub
adc
out
cwtl
das
insl
scas
dec
mov
bound
fwait
xor
lds
mov
repz
int
js
push
push
in
xchg
lcall
lahf
pop
mov
dec
jge
cmp
mov
std
jl
xor
and
das
sbb
notl
cmpsl
jb,pt
mov
aad
inc
out
ss
and
pop
mov
fisubl
inc
mov
js
addr16
pop
cltd
mov
or
sub
pushf
adc
jae
cmp
or
inc
mov
aad
fcom
int
les
outsl
addr16
test
push
jmp
mov
faddl
out
push
inc
fstpl
mov
sbb
pop
push
scas
cli
xchg
pop
add
je
mov
push
ljmp
mov
les
jmp
push
pop
mov
aaa
and
inc
xor
in
fbstp
leave
into
and
insl
xchg
insw
add
mov
ljmp
lcall
arpl
ss
and
push
mov
pop
mov
xchg
sub
into
rclb
test
inc
repz
or
loopne
xor
push
mov
push
sbb
imul
test
pop
fsubrs
lds
dec
fbstp
out
dec
sbb
iret
fs
push
jg
sub
roll
frstor
rclb
cmp
and
inc
pop
lock
lods
inc
ja
sbb
sub
repnz
dec
ja
jnp
jns
push
pushf
hlt
mov
jb
orl
push
pop
push
or
repz
inc
jae
pusha
push
sbbl
mov
std
xchg
fst
insb
add
push
jg
call
mov
jecxz
sub
push
jmp
fwait
xchg
sub
add
pushf
out
aam
mov
loopne
and
test
lret
sti
xchg
mov
sbb
mov
xchg
int3
imul
in
xchg
rolb
mov
fiaddl
lea
call
stos
es
sub
dec
in
arpl
insl
xor
adc
mov
lds
stos
cmp
pop
jnp
cmp
pop
popf
add
jge
daa
mov
loopne
adc
xor
dec
push
jp
addr16
ret
dec
mov
subb
les
xor
ficoml
mov
and
dec
push
pop
repnz
pop
lock
loop
xchg
jno
sub
es
inc
pop
dec
shll
stos
inc
cwtl
pushf
shufps
bound
and
popa
ljmp
or
cs
cld
cmp
cmp
imul
int3
cmp
add
mov
xor
adc
adc
adc
cmpsb
xchg
and
push
into
mov
and
xchg
addr16
adc
push
cltd
jns
roll
pop
in
xor
lods
arpl
mov
inc
js
mov
jecxz
call
mul
popa
or
fnstenv
int
mov
cmp
sarb
rol
xchg
mov
mov
ljmp
and
add
pop
ljmp
in
dec
fimull
pop
mov
aam
cmpsb
xchg
xor
pop
mov
cmc
and
and
jmp
jb
jl
or
mov
xor
xchg
push
ljmp
insb
pop
push
mov
out
jne
mov
xchg
ja
mov
cvtpi2ps
pop
xor
ficompl
addr16
sub
out
xor
outsb
in
mov
dec
mov
mov
lahf
cld
xchg
shll
pop
out
mov
xor
pop
cmp
mov
test
ja
icebp
fucomp
test
lret
lock
ljmp
std
movsl
adc
shlb
sub
and
pop
jle
mov
arpl
adc
mov
lds
push
pushf
mov
jae
mov
imul
mov
lds
mov
push
jb
push
jmp
fs
nop
clc
pop
outsl
dec
mov
fcoml
jmp
scas
adc
push
out
lret
dec
gs
mov
cld
lret
or
pop
xchg
mov
sub
sbb
sbb
daa
xor
enter
gs
jne
sbb
ret
adc
test
or
adc
sbb
dec
fcoms
rolb
add
push
lods
inc
nop
add
lret
je
push
das
in
xchg
inc
push
cmpsb
and
shlb
dec
mov
jno
test
add
in
xor
sub
xchg
in
sti
lret
xchg
or
mov
pop
scas
mov
cwtl
cwtl
test
movsb
mov
rcrl
loope
cltd
test
push
push
iret
negl
pop
not
loopne
cmpsl
dec
pop
xchg
or
aam
scas
push
dec
inc
fidivrl
xor
mov
popa
pop
cmpb
lds
jg
xor
pmulhuw
mov
stos
fmuls
xchg
pop
xchg
mov
stos
call
sub
mov
out
insl
xchg
mov
or
int3
hlt
cmpsb
mov
bound
push
jb
call
cmp
int
iret
xor
jecxz
sarl
fwait
cs
jge
mov
pop
lods
test
xor
dec
or
js
jge
mov
push
rcl
dec
jecxz
push
shll
fucomp
pop
stc
jno,pn
inc
f2xm1
and
fwait
sub
mov
add
lcall
loope
sub
or
dec
imul
mov
mov
hlt
or
ret
xchg
mov
leave
mov
ds
andl
clc
jnp
nop
imul
pushf
sub
test
adc
or
pushf
xor
mov
test
jbe
nop
mov
daa
mov
fisubrl
push
sarb
cmp
mov
mov
rorl
pop
jne
lods
mov
jp
rcr
mov
icebp
mov
fs
push
jb
mov
pushf
test
fdivrs
mov
lret
xchg
pop
pop
cmp
addr16
enter
lock
jecxz
cmc
dec
fldl
loope
mov
jnp
jecxz
fcomp
xchg
leave
mov
popf
jl
repnz
loopne
pop
scas
and
dec
push
sub
jmp
cmc
inc
es
loope
out
test
test
call
in
push
or
xlat
jnp
call
flds
mov
sub
sub
test
mov
icebp
mov
mov
daa
jns
leave
pusha
dec
fisttpl
sahf
or
pusha
mov
cmp
jge
mov
shlb
cs
add
fdecstp
mov
pop
retw
mov
jo
movsl
fisubs
clc
psubsb
mov
shr
mov
sahf
add
add
cmp
lods
mov
inc
jg
xchg
lcall
dec
in
or
call
cmp
and
jmp
cs
movsl
mov
aad
mov
sub
sub
dec
xchg
in
xlat
stc
ds
lret
or
inc
and
cmc
jns
mov
dec
jb
shl
cmpsb
es
xor
jo
push
in
lcall
add
das
push
enter
cmp
pop
fs
mov
in
cmpxchg
aas
sub
sub
addl
xchg
aad
addb
pushf
in
pop
dec
or
daa
or
xchg
push
mov
sahf
push
negb
iret
les
or
and
jl
rorb
push
push
or
xchg
pushl
mov
or
stos
inc
ljmp
fists
mov
pop
mov
mov
cmp
adc
adc
push
push
jne
scas
cmpsb
jb
pop
imul
mov
cmp
in
inc
mov
cvtpi2ps
xchg
shlb
push
jnp
mov
dec
loop
add
or
loopne
ret
mov
cmc
ret
dec
lcall
and
adc
ficoml
fisttps
cmpsb
adc
enter
mov
push
out
cltd
cmc
loopne
jle
add
lret
inc
fdivrs
or
pop
ljmp
and
mov
push
scas
insb
addr16
popf
andl
xorb
shrl
imul
into
push
fimull
mov
lcall
mov
hlt
jg
adc
scas
mov
mov
mov
je
mov
and
ljmp
push
jbe
pop
movsl
cmp
inc
inc
test
mov
push
sarl
addr16
xchg
sbb
cwtl
test
cmp
xchg
gs
lods
outsl
outsl
pop
imul
loope
inc
fnsave
xchg
nop
mov
inc
fldenv
jb
mov
mov
lret
daa
cmp
aaa
cmp
imul
loope
or
ljmp
rcr
sub
je
pusha
out
push
sbb
inc
loope
adc
pop
sbb
add
xlat
fdivr
inc
push
mov
das
sub
or
sub
sbb
jne
sub
shlb
or
js
scas
sub
jne
iret
dec
xchg
jmp
addr16
mov
ja
test
insb
iret
ja
dec
pop
mov
aas
jmp
dec
outsb
add
sarb
xchg
insb
mov
pop
mov
mov
outsl
sti
xor
ljmp
and
xchg
mov
xlat
pop
mov
xchg
sub
add
inc
dec
je
test
jb
test
dec
stos
sbb
fadds
add
mov
and
jae
fstpl
and
mov
fcom
je
and
jmp
mov
push
mov
pop
imul
repnz
inc
adc
loope
push
test
xchg
xor
push
stos
movsl
add
ljmp
xchg
popa
mov
std
pop
jnp
sbb
jbe
cltd
loopne
and
dec
daa
mov
je
cs
in
sub
sbb
popf
daa
into
xchg
pop
mov
ds
out
punpcklbw
dec
adc
pop
movsl
movsl
pop
inc
loopne
xlat
and
or
dec
xchg
xchg
sbb
testl
sbb
fs
lahf
mov
jo
jp
fsin
cld
or
xor
test
cmpsl
push
mov
aaa
aad
cmova
dec
jnp
jge
dec
notb
dec
jg
mov
push
call
insb
leave
je
pop
outsb
movsb
cs
inc
repnz
mov
pushf
xor
divb
mov
mov
roll
movsl
loop
xchg
fnstsw
mov
js
imul
mov
lds
in
push
mov
outsb
cmovs
testb
nop
xor
mov
out
push
xchg
jl
adc
inc
lea
dec
mov
pop
pop
mov
jecxz
std
lcall
fs
xor
in
rclb
xor
popa
jl
std
lods
adcb
mov
jo
pop
or
sub
sti
pop
jmp
or
push
frstor
mov
arpl
cwtl
pusha
and
lret
mov
int3
cmc
mov
stc
xor
in
neg
jecxz
push
sbb
std
out
insl
cmp
cmp
jno
hlt
mov
negb
mov
aas
out
mov
or
enter
int3
push
jmp
or
pop
cmp
inc
push
je
in
inc
add
adc
jno
outsb
mov
sbb
xor
mov
shll
sbb
loop
enter
pop
mov
fstp
cwtl
cmp
repnz
insb
es
xor
jmp
out
push
mov
sub
lret
repnz
dec
jne
std
sbb
xchg
imul
cmpsl
imul
mov
out
push
push
imul
lock
ror
pusha
add
das
loopne
cmp
and
or
rol
repnz
inc
jl
outsl
outsl
push
mov
int
das
incl
sbb
xor
mov
std
insl
mov
jl
cmpsl
jne
or
mov
mov
rol
pusha
int
sub
stos
stc
icebp
mov
rolb
adc
fdivrl
add
xor
dec
rorl
subl
stc
add
push
jb
xor
ja
adc
rolb
scas
test
add
xchg
shl
xor
push
pusha
stos
lcall
cpuid
bound
mov
imul
jo
mov
sub
inc
dec
jne
data16
adc
push
xor
stos
je
adc
adc
cmp
jbe
stos
das
mov
inc
je
push
imul
int
dec
push
dec
loope
sub
pushf
mov
jbe
sahf
hlt
add
into
out
or
mov
xor
leave
clc
stos
mov
fdivrl
fsubl
pop
sbb
lods
pop
lcall
inc
arpl
fs
mov
xor
jae
dec
xchg
icebp
mov
iret
xchg
loopne
je
pop
mov
fildll
dec
inc
rorl
xchg
mov
int3
arpl
mov
mov
out
xor
mov
mov
xor
and
jg
dec
or
xchg
scas
adcl
mov
xor
pusha
mov
dec
mov
or
mov
push
mov
ja
jp
push
inc
gs
and
cs
movsl
inc
and
daa
into
inc
dec
mov
int3
dec
fwait
shll
fs
sbb
std
xchg
repnz
adc
jmp
negl
out
dec
mov
jns
pop
dec
test
adc
insl
xchg
lock
adc
xchg
mov
mov
sub
jecxz
cmp
cs
mov
pop
and
cltd
jecxz
mov
sbb
repz
xor
scas
jae
loope
mov
insl
xor
jmp
popa
fwait
xchg
cmpsb
jle
stc
les
test
push
sbb
mov
daa
clc
dec
inc
cmp
mov
int3
adc
push
fisubs
ret
add
xor
or
in
shrb
add
cli
xor
cwtl
xor
je
popf
xor
mov
jns
movsb
mov
enter
adc
pop
fmuls
mov
push
andl
push
push
orb
jnp
cmpb
sub
mov
sti
sbb
dec
push
mov
popf
cmp
push
outsb
mov
mov
sub
sub
arpl
mov
xchg
sub
mov
add
jle
jne
leave
notl
sub
cli
mov
push
lock
cmp
imul
inc
nop
lods
pop
jnp
dec
jg
sbb
push
js
test
pop
icebp
arpl
imul
fildl
mov
add
and
ss
xchg
imul
push
push
push
cmp
fcmovnbe
shlb
frstor
xchg
xor
jbe
add
add
and
in
xchg
and
lcall
xchg
cmp
ret
xchg
sbb
in
mov
stos
pusha
xor
int
scas
xchg
sub
daa
push
inc
pushl
dec
adc
fs
dec
push
aaa
pop
jae
mov
test
inc
adc
dec
bnd
lock
aas
imul
out
cmovs
pop
pusha
fdivl
je,pn
repnz
dec
fisubrs
jne
xchg
sbb
fwait
pop
shlb
add
mov
cs
in
in
daa
cmp
faddl
cs
xchg
mov
in
xlat
xchg
sub
cmp
jmp
fs
divb
adc
push
jns
and
fistps
ret
in
mov
cmp
push
icebp
mov
mov
hlt
lret
mov
mov
daa
inc
mov
mov
test
bound
adc
adc
inc
nop
inc
sub
adc
je
pop
sti
jae
movsb
jp
push
jge
push
add
arpl
mov
test
adc
cmp
dec
xor
add
inc
push
stc
mov
mov
lock
sti
cmpsl
lret
mov
inc
fcom
aam
shrl
cmc
pop
sahf
jmp
lds
rcrb
insl
jl
jge
cld
push
mov
mov
pop
mov
aam
sbb
arpl
shrb
push
movsl
pop
repz
mov
inc
loope
xor
pop
loopne
mov
cmp
addr16
jle
inc
fmuls
pop
lock
and
notl
jle
jbe
lret
inc
enter
in
dec
lock
mov
ss
std
xchg
pop
cmpsb
mov
imull
add
xor
daa
push
roll
data16
jb
lahf
scas
mov
or
dec
fs
cwtl
loop
lret
icebp
xchg
movsl
mov
xlat
cmp
in
out
iret
add
lret
xchg
mov
adc
lret
jl
jmp
or
sbb
daa
xchg
andl
jae
push
call
cmp
inc
cwtl
xchg
fs
sub
in
out
jmp
jg
stos
or
push
nop
and
gs
mov
mov
pop
lea
xchg
jbe
lds
insl
fadds
in
popa
mov
std
cmpb
push
mov
insb
mov
cli
xchg
sub
rclb
jg
sbb
gs
mov
sub
jbe
mov
in
or
mov
sbbl
and
add
inc
dec
jns
in
insl
stos
inc
popa
xchg
or
mov
inc
adc
sbb
mov
call
and
push
cwtl
mov
std
xchg
xor
pop
xor
push
pop
pop
sahf
xor
mov
mov
bound
adc
jb
daa
jmp
jne
test
clc
pop
mov
dec
sbb
dec
xchg
outsb
lcall
mov
je
xchg
or
or
fwait
lds
lahf
ss
out
shrl
xor
dec
inc
pop
mov
movsl
dec
mov
push
loop
push
ret
inc
mov
inc
cmc
xor
pop
mov
je
sbb
sti
testl
aam
aam
push
out
sub
mov
add
mov
xchg
fiadds
add
mov
repz
int
jae
push
movsl
out
mov
enter
ror
mov
fidivrs
pop
xlat
fdivs
sub
nop
jo
leave
imulb
loopne
movsb
bound
negb
inc
lea
xor
es
sarl
jmp
shlb
fistpll
mov
outsb
cli
loopne
jmp
hlt
cmp
xchg
fsubrs
filds
dec
push
sbb
in
adcb
mov
xchg
sub
mov
sbb
outsl
fucom
ja
nop
pop
cmc
roll
jns
std
xchg
stc
nop
icebp
mov
dec
fistl
or
pop
adc
pushf
xor
out
call
pushf
add
fidivs
fwait
pusha
divl
mov
or
push
mov
lret
insl
inc
inc
sub
mov
dec
jecxz
cmpsb
mov
sbb
fwait
aas
in
test
fmulp
in
add
and
out
jo
pop
adc
lods
sbbl
mov
ret
cmp
int3
dec
pusha
out
push
insb
xlat
outsb
popa
cwtl
jecxz
or
dec
stos
inc
ds
push
movsl
or
pop
lock
fildll
rcr
call
ret
rorl
outsb
loop
mov
insl
adc
ss
es
mov
jns
pusha
ljmp
push
mov
hlt
sti
shlb
mov
mov
push
push
shlb
xchg
iret
jno
call
push
pop
xor
arpl
lods
in
outsb
in
jp
push
fstl
repz
cli
xchg
pop
jle
and
mov
test
and
ret
fnsave
or
scas
mov
jecxz
dec
push
mov
lea
pop
mov
pop
dec
pop
lock
jb
fs
cmp
lahf
xor
xchg
repnz
test
lret
sti
push
insb
add
cmpsb
mov
fsubrs
adc
ret
hlt
dec
pop
jle
mov
jnp
push
add
out
inc
and
inc
xchg
ds
popa
xor
push
clc
sbb
test
mov
push
xor
jae
mov
aaa
sbb
mov
or
inc
xchg
push
in
pop
dec
repz
and
pushf
adc
cs
mov
pop
repz
or
arpl
or
jmp
mov
pop
push
inc
sub
cmp
nop
sbb
iret
gs
or
ss
in
jbe
push
mov
lea
xchg
dec
mov
cmpb
push
pushf
popf
sub
mov
mov
inc
sbb
dec
popa
inc
xlat
aam
xor
test
dec
sub
or
insl
aaa
or
cmp
or
cmp
adc
stos
dec
mov
lods
das
fildl
int3
ss
js
adc
inc
enter
fsubl
xor
jne
leave
cmpsb
das
mov
fnstcw
arpl
fidivrl
or
repz
addb
xchg
pop
call
jbe
pop
repz
mov
mov
inc
or
les
xor
mov
fisubrl
ret
loope
std
sub
loopne
push
out
insb
ss
cmpl
inc
lods
jns
and
or
ret
cli
gs
xchg
mov
movsb
jg
mov
fisttpl
sub
mov
jae
pop
sub
push
jne
sub
mov
repz
loopne
mov
gs
push
out
mov
adc
in
je
pop
out
fsubr
push
in
jle
stc
jns
mov
sbb
hlt
mov
sarl
fwait
jge
outsb
scas
mov
mov
sbb
ds
icebp
lahf
mov
cwtl
sbb
addr16
mov
call
test
cmpsb
aas
mov
call
inc
int3
in
pop
in
addps
pop
in
jmp
mov
testb
ss
call
outsb
push
xor
adc
push
and
pop
scas
dec
cmp
mov
push
movsb
in
inc
clc
leave
jl
mov
in
in
jns
mov
jg
cmpsl
jns
add
xor
ljmp
hlt
pop
aas
sbbb
enter
push
loope
or
fldcw
cmp
xor
adc
dec
dec
lret
mov
mov
dec
fimull
mov
lahf
xor
sbb
mov
cmp
mov
in
jge
cmc
jle
mov
inc
in
or
xorl
inc
ds
cmp
dec
pop
bound
lods
fnsave
dec
lods
cmp
in
fs
lock
sbbl
xchg
push
jnp
pop
insl
cwtl
xor
dec
notl
push
mov
movsb
mov
dec
ror
add
or
push
lods
mov
movsl
out
cltd
call
dec
jae
insb
into
movsl
sbb
mov
pop
lahf
or
and
and
daa
stos
jne
sub
add
adc
sbb
lock
shlb
jne
mov
test
dec
gs
mov
fcmove
mov
fldenv
pushf
or
pop
cmc
add
sti
les
add
not
jmp
jle
push
cmp
jnp
add
aas
or
jne
lods
scas
mov
jecxz
dec
ljmp
mov
loopne
pop
out
in
mov
xor
jl
inc
jl
push
sub
cltd
gs
jle
pusha
mov
in
lds
jno
xchg
in
or
and
and
bswap
and
shlb
cli
and
mov
shrb
xor
cmpsl
cmp
aad
sbb
mov
shl
sub
test
xchg
psllw
nop
add
pop
into
sub
rol
jo
sbb
outsb
adc
push
rcrl
xor
sysexit
push
mov
lahf
ss
push
xor
gs
adc
mov
je
outsl
mov
cwtl
jae
clc
sbb
push
mov
imul
ds
adc
push
aad
fldt
imul
xlat
jno
movsb
sbb
mov
jle
inc
ficomps
cwtl
pop
scas
inc
push
jne
nop
jg
test
dec
pop
sbbb
and
gs
bound
inc
jns
imul
fcmovb
xchg
sub
sarb
out
jo
sti
aas
xor
jno
jno
data16
ss
mov
sbb
push
addr16
aaa
stos
xor
cs
popl
sbb
nop
lods
insl
pop
mov
xchg
std
mov
imul
and
dec
mov
lret
jp
cmp
mov
dec
lods
xor
js
shll
adc
movsb
idivb
inc
push
pushf
mov
push
fwait
xor
and
push
inc
inc
popf
dec
arpl
lods
cs
pop
shl
ss
jb
pop
jae
mov
cmpb
jo
fsubs
push
daa
in
dec
fwait
bound
ds
ret
fdiv
jecxz
into
dec
add
js
gs
push
das
and
push
sub
xchg
fnstenv
mov
jae
push
xchg
data16
push
jl
sti
movsl
xchg
and
rorb
mov
mov
sub
fcomi
dec
jno
xchg
movsl
movsw
dec
pop
sbb
mov
sub
push
call
or
fidivl
fsubl
push
out
sbb
popf
jnp
shl
mov
xchg
pop
lock
xor
arpl
xchg
insl
test
or
repz
in
push
adc
repz
xor
dec
adc
mov
dec
test
arpl
test
cli
je
dec
cmpsl
pop
cmp
adc
cmp
ds
sbb
insb
mov
cs
negb
shrl
cwtl
adc
fs
sahf
inc
xchg
fstpt
sbb
add
cld
pop
cmp
jp
sub
and
in
lods
mov
add
call
sti
hlt
int
dec
jmp
cs
fcomps
fstl
mov
mov
mov
and
enter
mov
xchg
sub
inc
cltd
mov
jle
adc
cli
jg
cwtl
and
and
iret
push
sub
xchg
jg
fldcw
mov
jno
ret
aas
clc
add
mov
jle
mulb
jle
lahf
fbld
and
sbb
xor
xor
and
dec
adc
lds
negb
mov
nop
outsb
inc
mov
icebp
mov
popa
add
pushf
pushf
sub
inc
mov
mov
fs
adc
adc
adc
mov
test
mov
and
mov
sub
cs
pop
fnstsw
rorl
inc
nop
push
jnp
loope
sahf
cmp
mov
mov
scas
xchg
mov
xchg
divb
mov
pusha
je
jns
or
push
or
jo
ja
sbb
pop
dec
pop
mov
scas
pushf
movsb
movsl
cmp
and
shll
test
ljmp
gs
sub
mov
ds
fidivrs
ja
add
imul
leave
js
shrl
lcall
pop
fstl
adc
pop
ret
clc
jp
add
andl
pop
in
cmc
repz
or
lcall
jno
gs
cmp
lds
test
sahf
push
in
shlb
stc
jbe
ret
xchg
inc
mov
and
cs
bound
mov
mov
movsl
cmp
or
out
lods
imul
cmp
push
push
pop
or
jne
and
les
sbb
mov
cmp
inc
inc
pop
dec
push
xchg
out
subl
mov
hlt
dec
pop
dec
mov
xor
in
loope
push
mov
inc
hlt
jno
pop
icebp
jle
cld
adc
lahf
js
sar
and
and
lea
out
and
out
aas
sbb
jnp
cli
inc
cld
mov
push
pop
adc
mov
out
xor
dec
push
jne
mov
jge
inc
cld
adc
jge
stos
fs
or
sub
pop
cltd
mov
pop
mov
push
scas
das
out
and
sub
cmc
or
lret
pop
push
std
lahf
pop
mov
xchg
and
sub
xchg
sbb
jb
cmc
lret
xchg
sahf
lods
ret
jmp
jecxz
dec
jmp
leave
lock
dec
outsb
stc
cmp
movsb
mov
mov
pop
pop
es
dec
adc
test
inc
out
dec
pop
and
daa
pop
push
mov
into
mov
int3
aam
adc
and
in
jbe
sbb
mov
leave
and
inc
lods
ljmp
nop
mov
mov
sub
bound
movsl
inc
clc
or
sbb
jae
add
sbb
ret
mov
add
jecxz
rclb
dec
subl
jo
xchg
xor
mull
into
cmp
stos
out
dec
push
in
loope
scas
adc
mov
sbb
aaa
fiaddl
pop
mov
es
andl
stos
adc
pop
xchg
mov
addr16
jmp
ljmp
inc
add
jmp
mov
bound
or
sub
inc
inc
cmpsl
sbb
dec
mov
xor
in
dec
dec
adc
cmp
sub
xchg
adc
lahf
nop
cmp
iret
popa
inc
dec
insl
adcb
pop
dec
lock
addr16
sub
sbb
jg
push
ret
add
lea
shrl
sbb
mov
pop
xor
mov
mov
jl
mov
xchg
sub
rcrb
mov
adc
xchg
add
movsl
cld
iret
and
xchg
sbb
xchg
pop
pop
dec
pop
fmuls
sbb
adc
jnp
es
stc
int
xchg
scas
stc
sub
subb
insb
adc
cmp
sbb
push
dec
in
loop
pop
movsl
jns
lcall
or
sub
or
das
icebp
in
jb
mov
xor
test
pop
sarl
orb
adc
jl
in
jbe
leave
inc
and
sub
dec
stc
push
int3
push
lds
adc
cmpsb
bound
mov
add
lcall
add
xor
push
pop
out
stos
aaa
fimull
cmpsb
xor
xchg
mov
test
cwtl
es
mov
std
cmp
sbb
aaa
dec
sbb
cmp
jle
mov
dec
ret
pop
test
aam
lret
int3
sub
cld
test
dec
or
ret
hlt
and
pop
push
adc
inc
daa
movsb
xchg
inc
jmp
or
lret
adc
outsl
add
sarl
jmp
add
cltd
cmpsl
or
in
test
xor
ret
movsl
fbld
mov
call
adc
jb
movsl
lods
bound
cmp
cltd
mov
push
mov
xchg
sub
mov
call
in
sahf
out
lret
fimuls
inc
in
mov
pop
jo
int3
dec
adc
stos
into
dec
sbb
and
into
enter
dec
cmp
fs
mov
pop
push
enter
cltd
inc
sbbl
mov
insb
add
shrl
inc
mov
xchg
xchg
out
cld
cmc
inc
gs
xchg
xchg
pop
mov
xlat
out
add
mov
imull
inc
mov
aas
or
jp
sbb
je
into
mov
aad
xchg
pop
sub
mov
ret
push
mov
stos
aas
mov
out
icebp
sbb
nop
movsl
cmp
dec
or
clc
sub
xchg
mov
dec
sbb
mov
or
ret
ret
add
jbe
lcall
jns
lahf
and
dec
fsubrl
cmp
push
loopne
icebp
fadd
pop
adc
ret
bound
mov
mov
or
or
leave
fs
rol
mov
mov
andb
lret
mov
mov
xchg
out
jmp
or
lock
xor
xor
mov
outsb
xor
shrl
stc
or
dec
fsubl
les
pop
aaa
xor
jg
roll
cmpsb
pop
inc
lcall
mov
add
xchg
enter
dec
rcrb
xchg
and
push
mov
sbb
mov
mov
mov
lds
pop
xor
lret
xlat
adc
stc
and
mov
mov
popa
sbb
pop
and
lret
fstl
lahf
jb
outsl
sub
sbb
dec
dec
sub
add
mov
out
mov
test
push
out
inc
ret
pushf
cli
insb
loope
jno
addr16
add
push
mov
push
jle
or
aaa
bnd
mov
in
outsl
inc
aad
pop
cmc
cmp
and
push
inc
inc
adc
std
data16
repnz
fbld
or
ljmp
movsl
pop
lods
daa
xchg
pop
call
outsb
lcall
mov
pop
mov
mov
add
xor
movsb
pop
std
and
push
lret
sub
jae
xor
mov
cld
push
inc
push
xchg
mov
mov
ret
mov
js
push
and
dec
mov
xor
and
cmp
ret
std
shl
add
cwtl
pop
mov
int
aas
roll
add
adcl
daa
xchg
xchg
add
xor
jo
mov
xor
out
movsl
cmpl
dec
jbe
xor
test
movsb
repnz
aam
push
push
mov
fnstenv
ret
in
mov
inc
pop
xchg
xchg
sub
adc
loopne
stc
mov
dec
icebp
outsl
fsts
push
mov
popa
js
pop
frstor
aas
orps
nop
movsl
pop
les
jne
shl
mov
ja
sub
pop
or
addr16
insl
data16
notb
add
loopne
xchg
cld
bswap
ds
xchg
in
out
xchg
dec
xor
punpckhdq
inc
dec
pop
or
push
mov
dec
fucomip
dec
mov
pop
mov
push
add
inc
push
jae
fst
nop
comiss
popa
clc
dec
movl
and
and
mov
pop
outsl
ror
lock
adc
in
lods
inc
jmp
mov
rcr
dec
cwtl
xor
jbe
add
dec
add
mov
fdivl
dec
sub
or
fists
pop
icebp
xor
jp
jae
in
fs
dec
rorl
hlt
test
cmp
inc
and
pop
aad
xor
xchg
sbb
pop
cs
test
add
jbe
aaa
test
or
imul
pop
in
lahf
jecxz
inc
push
mov
jne
push
mov
cmp
or
insl
cmpsb
nop
and
test
mov
in
push
xor
adc
ret
leave
jo
mov
lock
sbb
scas
mov
fldcw
inc
mov
popl
mov
std
pop
cwtl
push
lds
cmc
mov
and
divl
mov
repnz
lret
loop
stos
adc
inc
data16
sbb
xor
lcall
and
cmp
xorl
movsb
sarb
push
sub
push
int3
leave
jbe
cld
fiadds
or
adc
cmp
les
decb
sbb
outsb
sub
pop
lods
adc
aaa
rcrb
mov
push
fwait
cmp
pop
imul
scas
scas
pop
insb
lods
mov
aas
xor
insl
lods
cltd
push
enter
xor
cli
scas
in
push
loopne
dec
in
mov
insb
jle
outsl
in
das
lods
xchg
add
xchg
push
xchg
dec
loope
mov
jge
fsts
scas
test
lods
aas
inc
cmc
enter
cmp
mov
je
neg
scas
fildl
jmp
arpl
mov
insb
cmc
in
dec
pop
inc
das
mov
fldenv
add
popa
testl
jae
je
out
ss
or
nop
scas
push
fmul
and
jmp
popa
std
clc
outsl
or
jmp
out
mov
divl
add
xchg
in
pop
cwtl
sbbb
scas
rcrb
aam
inc
push
cld
pop
dec
dec
push
cmc
jge
pop
cmp
fnsave
push
fists
mov
add
jo
mov
push
mov
cmp
cs
cli
gs
or
or
xchg
out
out
fsub
pop
ret
sub
dec
add
adc
outsl
hlt
jmp
stos
xchg
or
je
pop
pop
bnd
jl
arpl
icebp
mov
mov
add
cmp
dec
sub
mov
std
repz
dec
jge
xor
push
inc
popf
shll
fsubrl
mov
xchg
imul
pushf
pop
divl
movsb
and
test
ret
jle
lock
mov
lcall
roll
mov
jl
lahf
xor
inc
ss
lahf
xchg
and
or
das
cmp
mov
sub
ss
iret
fcmovnbe
pop
adc
out
outsb
or
mov
out
mov
add
outsl
stos
dec
jge
out
dec
adc
test
daa
add
xor
and
push
mov
fldt
cmp
fdivrl
stos
inc
add
lcall
dec
imul
flds
stos
cs
push
scas
cmp
xor
xchg
mov
adc
inc
sahf
pop
dec
jb
adc
es
addr16
fdiv
sub
sub
into
imul
push
push
mov
push
cmp
and
add
pusha
mov
xchg
jb
fwait
adc
or
loopne
push
out
xlat
pusha
andb
mov
iret
call
shlb
ret
in
cmpsb
sub
popa
xor
add
inc
imulb
nop
mov
fistps
out
mov
outsb
jl
mov
jg
cmp
aam
sub
je
jecxz
clc
enter
sub
and
fdivrs
shlb
mov
mov
ja
xor
lcall
mov
out
outsb
cld
pop
jl
push
lods
sbb
push
push
mov
shlb
je
inc
es
or
ret
fnsave
movl
ret
hlt
and
imul
dec
xchg
test
scas
popa
xchg
and
xor
pusha
mov
lock
and
loope
mov
jb
push
adc
test
scas
add
leave
xchg
test
sub
ja
out
mov
add
sbb
sub
jge
lea
add
mov
lods
mov
push
push
sti
mov
clc
pushf
mov
test
cmp
pushf
pop
jno
popf
push
negl
mov
sbb
push
test
cmpsb
gs
and
pop
fnstsw
mov
dec
mov
push
jne
jb
sti
roll
cwtl
out
std
sbbb
xchg
movsb
inc
sbb
movsl
pop
dec
sbb
jbe
icebp
ljmp
jl
inc
jge
push
popa
jl
pop
cwtl
lcall
pop
and
leave
popa
cmpsb
test
cmp
add
or
push
iret
jecxz
rcl
sbb
and
ljmp
cmp
scas
cmpsb
gs
inc
adc
ja
icebp
mov
jl
lret
push
ss
cld
mov
sub
add
dec
imul
xchg
xor
sbb
add
xor
or
aam
popl
jne
dec
out
popa
inc
cmpsb
pop
inc
sbb
sub
inc
xlat
shrl
jb
aam
pop
fmull
jp
jmp
jo
nop
lret
mov
ljmp
shll
cs
push
cmp
das
mov
mov
ficoms
pmulhuw
rcrl
scas
sbb
jbe,pt
bound
ret
shll
jg
jle
add
aam
add
sub
cmp
mov
mov
pop
mov
push
outsl
sbb
ficoms
mov
sub
roll
mov
cmp
jnp
aaa
gs
push
and
mov
xchg
loope
xchg
add
xor
xchg
in
test
jne
mov
aam
scas
inc
inc
bound
dec
fnsave
jecxz
call
rclb
scas
cmp
sub
inc
outsb
testl
inc
aad
int
jecxz
cltd
jmpw
ja
stos
test
push
iret
and
push
inc
ret
push
insb
adc
cmp
push
scas
out
daa
jmp
gs
sub
aad
add
push
push
xchg
stos
jbe
mov
pop
cwtl
inc
imul
add
out
dec
add
data16
sarl
stc
leave
mov
xor
sbb
dec
leave
popf
movsl
cmp
jmp
testb
notb
ret
pop
icebp
iret
enter
push
testl
fnsave
dec
loopne
arpl
xchg
fsubrp
xchg
pop
xor
mov
and
loope
outsb
jp
fcomp
scas
sub
sub
pop
out
xlat
outsb
and
jne
mov
push
pop
mov
aam
xchg
push
rclb
mov
sub
lock
ret
out
xchg
rorb
push
ja
in
test
sbb
and
lcall
sbb
test
pand
hlt
or
jno
pop
mov
jle
xchg
sbbl
inc
push
outsl
scas
int3
popa
pop
mov
and
fxch
shl
fldenv
inc
push
jl
adc
mov
pop
outsb
rolb
mov
mov
jecxz
cmc
pop
cmp
xchg
inc
or
in
jns
pushf
das
fcomps
mov
sub
pop
ret
pop
ror
pop
mov
add
xchg
sbb
xor
popf
push
aaa
lcall
mov
dec
xlat
shr
jle
rcl
dec
data16
dec
neg
in
pop
out
aad
xor
xor
test
and
in
pop
cmc
mov
sbb
shlb
cltd
lret
xor
adcb
stos
call
repz
or
adc
or
dec
adc
sarl
mov
adc
les
pop
mov
fcoml
inc
add
pusha
mov
jb
es
sub
out
popf
xor
sub
cmp
or
aam
lcall
js
addr16
int3
cwtl
add
in
fisubs
or
cmc
ss
or
jg
push
or
mov
icebp
int3
or
testb
pop
testb
jge
das
lock
gs
pop
out
popa
pushf
adc
inc
or
and
sub
mov
in
sti
addr16
lret
mov
push
adc
xor
adc
mov
cli
int
jae
divl
lods
outsb
aas
in
call
inc
add
xchg
or
cmp
inc
or
int3
mov
aam
test
and
je
cmpl
jno
arpl
cld
ret
pop
out
hlt
xor
cmp
sub
pop
imul
xor
cmp
mov
adc
mov
mov
lock
add
bound
movsb
xchg
cmp
xor
jns
inc
mov
pop
adc
jae
in
mov
std
and
cld
xchg
arpl
pop
out
dec
jecxz
cwtl
pop
mov
cmp
mov
loopne
stos
aas
jns
or
sub
out
ss
out
jmp
and
mov
cli
rclb
loope
clc
add
in
sbb
bound
imul
jb
jbe
inc
push
rcr
xchg
test
out
push
std
push
test
pushf
and
sub
push
mov
cmp
pushl
and
add
and
pop
cmpsl
mov
mov
push
cs
insl
xchg
cmpsb
lock
pop
and
cs
push
test
call
fmull
out
decb
and
enter
inc
mov
shll
add
loope
pop
pop
xorl
push
pusha
mov
lds
pop
divb
je
sti
lods
adc
xchg
inc
int
jle
sub
ret
adc
or
jo
test
test
enter
in
stc
push
test
mov
imull
pusha
call
push
and
or
jg
adc
mov
mov
push
roll
hlt
mov
lods
loope
dec
pop
jp
xor
jno
mov
cmp
adc
dec
dec
aad
lahf
cwtl
test
cmc
sbb
pop
pusha
arpl
in
inc
daa
mov
inc
adc
pop
inc
pushl
fnsave
arpl
addl
sbb
sbbl
scas
inc
xorb
mov
psrad
and
gs
add
xor
cmpl
lahf
inc
fdiv
mov
jmp
rolb
fs
pop
stos
out
xchg
das
pop
insl
add
lahf
je
and
sbb
xchg
and
or
pop
rclb
mov
pop
call
and
jne
ret
pop
fs
movsl
sbb
or
pop
shl
cmc
sbb
mov
push
dec
mov
jbe
and
adc
mov
in
xor
pushf
xor
mov
nop
repnz
mov
test
sub
out
mov
sbb
sub
add
in
dec
xor
sub
stos
inc
sbb
sbb
aad
push
call
repnz
pop
add
mov
mov
cmp
push
dec
int3
xchg
inc
lcall
inc
mov
js
ljmp
or
jno
insl
arpl
enter
pop
lahf
and
dec
ds
xchg
pusha
test
pop
stc
ds
dec
pop
sbb
xor
mov
xlat
jbe
mov
popf
loop
adc
aam
sub
dec
mov
inc
inc
les
insl
faddl
push
cmp
mov
pop
lcall
insl
cmp
jp
pop
mov
lret
rcr
pop
xchg
xor
pop
shll
pusha
push
stos
mov
shlb
sbb
xchg
sub
jbe
or
sub
fldt
lds
push
iret
adc
nop
mov
xor
inc
lahf
stc
dec
xor
mov
icebp
ss
jl
or
xchg
fucomp
or
fwait
outsb
not
mov
cmpsb
push
arpl
cmp
and
and
inc
xchg
bound
scas
push
rcll
ror
mov
mov
mov
add
fdivp
imul
je
movsb
pushf
xor
xorl
push
out
aam
xor
inc
outsl
inc
fsubrs
nop
pusha
cmp
jecxz
insl
out
or
push
inc
mov
lret
mov
sub
mov
dec
insl
push
mov
xchg
mov
sub
lds
jmp
and
movhps
dec
sbbb
jecxz
fisttpl
fmul
cmp
sbb
xchg
nop
push
fistpll
cli
daa
jnp
lret
aaa
dec
mov
jno
outsl
mov
test
push
cmp
repnz
in
lcall
xlat
cwtl
in
lret
addr16
ret
adc
fnstenv
shlb
pop
dec
fucom
stc
je
inc
loop
imul
or
dec
sbbl
push
jp
ja
xchg
in
push
dec
xchg
sub
cmp
and
fisttpl
sbb
mov
xor
arpl
mov
push
sbbl
js
xchg
or
add
scas
sahf
push
insb
rcl
nop
lds
or
cmpsl
sub
push
pop
dec
jb
mov
add
adcl
add
xor
xchg
sti
push
xchg
dec
cmp
jg
push
in
xor
nop
fists
out
xchg
test
out
push
jge
mov
std
xor
jne
pop
and
neg
inc
movsl
push
inc
add
out
bound
call
mov
push
sbb
or
stc
adc
cmc
mov
sub
dec
mov
movsl
dec
gs
mov
sbb
ds
xchg
ja
pop
lock
mov
enter
mov
sub
xchg
scas
fucomp
fstpl
inc
dec
aaa
jns
test
scas
notb
aam
mov
cmp
xchg
mov
xchg
sahf
fwait
decb
stc
cwtl
lods
mov
dec
faddp
dec
jge
call
sbb
nop
sbb
xor
ret
insb
gs
push
mov
push
mov
xchg
push
mov
icebp
mov
popa
aas
sbb
test
ret
mov
jb
fcompl
or
incb
inc
push
inc
loop
aaa
and
xchg
add
mov
sbb
adc
sbb
sbb
mov
inc
inc
in
cmp
arpl
cmp
lahf
stos
cmp
test
push
add
pop
insb
mov
xchg
loopne
sbb
addr16
adc
rorb
addb
push
ret
xor
xchg
int
and
clc
ljmp
lods
xchg
bound
decb
cmp
mov
jo
pop
cmc
jnp
xchg
rcll
push
jno
pop
das
pop
dec
xchg
pop
dec
jnp
sbb
add
mov
mov
cmp
push
pop
sub
mov
idivl
pop
mov
cmp
sub
popa
je
mov
ror
int3
stos
adc
mov
sbb
into
or
push
stc
rcll
shl
sbb
test
sbb
out
testb
ss
daa
pop
mov
sahf
leave
sbbl
scas
lcall
stc
push
stos
push
test
movsl
add
inc
jg
es
jl
sbb
call
sub
mov
mov
xlat
push
pop
imul
nop
dec
movsb
push
lcall
stc
add
mov
test
adc
call
lods
mov
dec
int3
dec
movsb
xor
jle
mov
adc
dec
aas
aad
sbb
ss
cmpsl
lock
pop
push
rorb
mov
adc
hlt
rclb
mov
adc
sub
outsb
sbb
in
lock
mov
add
xchg
pop
lcall
orl
cld
dec
addr16
push
inc
mov
data16
stc
pop
ja
aad
aad
leave
sub
xchg
adc
cmpb
mov
xchg
push
inc
xchg
fsubl
loopne
mov
mov
jmp
jle
out
cmp
dec
push
mov
xor
arpl
lcall
loope
adc
jl
jbe
fs
jbe
inc
push
cld
test
jns
sub
addr16
stos
and
inc
add
les
lret
lock
hlt
movl
shll
sbb
push
sbb
xchg
arpl
jbe
mov
push
cs
mov
ja
xchg
outsb
jl
shl
dec
adc
jno
cld
lcall
and
es
push
jnp
fiaddl
jns
pushf
pusha
dec
call
push
aam
inc
leave
push
jb
mov
mov
mov
clc
aaa
sti
sub
sub
or
lcall
and
xchg
dec
shl
dec
mov
hlt
and
pushf
jg
xchg
outsl
ds
and
repnz
fcomps
shl
loopne
add
or
loope
test
jl
dec
adc
mov
aam
cld
rorl
pop
ret
popa
aas
adc
dec
cld
xor
iret
jecxz
les
dec
mov
or
aam
nop
dec
lahf
scas
fdivp
mov
mov
xchg
fidivs
sub
addb
sbb
push
or
mov
scas
mov
cmp
mov
mov
inc
push
mov
mov
push
fldcw
cmp
iret
push
and
xlat
test
mov
push
outsl
movsl
fnstcw
ljmp
xorl
and
adc
mov
pop
das
stos
stos
adc
stos
mov
inc
jge
arpl
mov
or
pop
cmp
sbb
mov
ja
mov
pop
je
xor
cmp
xor
int
and
mov
test
xchg
jno
xor
dec
and
rorb
rep
mov
rcrl
xor
addb
stc
adc
out
pop
enter
andb
jne
icebp
dec
and
inc
inc
push
or
mov
hlt
bound
out
mov
lahf
sbb
sub
and
cmpsl
mov
xor
es
ja
jnp
or
dec
shll
push
sub
jmp
roll
push
ja
cmp
lods
pop
inc
test
or
test
out
mov
jnp
mov
pop
test
lret
xchg
dec
and
repz
and
push
or
imul
shrl
add
or
cmp
lock
cmpsb
adc
adc
pop
test
out
movsb
repnz
fwait
sahf
add
inc
fcompl
jmp
inc
dec
mov
ret
push
insb
cmc
std
daa
aam
push
or
xchg
adc
sub
bound
test
inc
sbb
xor
push
lahf
adc
mov
std
scas
das
cmp
xor
rdmsr
push
inc
cltd
push
pop
sahf
mov
cmp
les
out
jnp
mov
adc
and
xchg
cltd
or
test
lds
xchg
jp
test
int3
sub
push
ljmp
lock
mov
ljmp
insb
notl
pop
ret
sahf
mov
push
pop
xor
gs
enter
push
shl
push
repnz
mov
mov
ss
cmp
lea
clc
sbb
pop
scas
test
push
xchg
xor
adc
fmull
push
cmpsb
or
adc
dec
pop
and
sbb
mov
ret
in
fldt
aaa
sarb
ds
jl
dec
lock
cmpsb
adc
shrb
ja
inc
push
lea
dec
mov
pop
loope
lea
push
xlat
mov
loopne
lea
outsl
inc
push
mov
add
scas
push
mov
fcmove
cmp
loop
cli
popa
add
mov
mov
sub
cmpsb
insl
sbbb
fwait
add
inc
push
mov
notl
mov
sbb
jns
and
rcrl
push
clc
mov
xchg
and
testb
cmp
testb
aam
hlt
xchg
sbb
ficoml
test
adc
bound
imul
addr16
jne
test
lret
std
movsl
out
sub
cltd
sbb
mov
mov
bound
daa
js
inc
out
cltd
scas
mov
testl
dec
enter
cmc
pop
shlb
xchg
inc
inc
jae
mov
push
or
mov
push
imul
fwait
xor
ljmp
mov
lds
jo
int3
scas
jo
shll
cmpb
or
sub
lret
cld
cmpsl
outsl
inc
adc
aam
ret
rep
out
xor
js
sbb
mov
xor
mov
popf
pop
pushf
add
jae
adc
sahf
outsb
sub
stos
test
fstp
test
mov
jl
jecxz
sbb
nop
sbb
sbb
in
xor
xlat
imul
insl
push
into
push
lods
or
jnp
pusha
inc
sub
nop
aas
add
daa
mov
pop
or
insb
clc
xchg
or
sbb
hlt
push
add
dec
mov
lret
bound
aam
and
sbb
jl
cmp
mov
xchg
jnp
lock
xlat
mov
pop
lcall
pop
xchg
xlat
outsb
cltd
or
pusha
call
push
movsl
cmp
in
pushf
fcmovb
shrb
clc
lds
imul
or
loopne
xor
fsubs
movsb
sub
sub
lea
sub
in
jb
cmp
pushl
sbb
pop
pusha
xchg
lds
test
outsl
fisubrl
dec
jecxz
pop
jmp
jle
lea
daa
lods
pushf
orb
inc
data16
jmp
push
inc
les
jmp
xchg
inc
inc
push
out
ljmp
inc
mov
sbb
es
sub
into
xlat
mov
int
push
fdivs
out
lds
mov
mov
mov
test
movsl
sub
push
repz
pop
sbb
outsb
inc
enter
sbb
ret
bound
dec
mov
jns
push
popa
clc
test
lds
inc
push
testl
movsl
sahf
negb
stc
sbb
decb
push
mov
dec
fcompl
pop
pop
sbb
cli
mov
shr
hlt
cltd
push
loop
pop
jecxz
shrl
pop
mov
push
and
lds
repnz
faddl
xchg
jns,pn
dec
lret
cmp
js
in
xchg
push
out
fsub
dec
sbbl
adc
icebp
ud2
xor
ja
push
shrb
xlat
inc
or
xchg
fbld
dec
shll
sub
in
sub
jle
shr
sbb
mov
rcrl
push
or
xchg
sub
jae
sbb
es
pop
arpl
ret
shrl
outsb
into
pop
mov
fidivrs
mov
xor
leave
pop
add
pop
push
cmp
inc
add
in
lret
lret
xor
inc
xchg
test
or
hlt
mov
in
adc
shrb
xor
shrl
enter
mov
adc
jp
sbb
mov
aaa
add
push
sub
push
clc
or
clc
adc
adc
repz
push
jo
sti
fwait
scas
jne
lds
ret
sbb
jmp
push
xchg
sbb
in
imull
push
and
jb
sub
out
mov
adc
andl
push
hlt
into
push
mov
dec
das
cmp
inc
pop
and
adc
xchg
es
jae
xor
adc
fimull
jmp
push
mov
xchg
sbb
push
dec
aaa
and
mov
mov
lds
lret
fsubrs
and
xchg
adc
jge
inc
push
nop
sahf
cmpsb
repnz
push
lret
je
fsubs
xchg
mov
sahf
test
loopne
sbb
les
movsl
les
and
mov
gs
cmp
cmovnp
cmpsb
push
xor
aas
stos
pop
jmp
fdivrl
imul
repnz
rcrl
push
enter
scas
fdivr
and
ss
cmp
or
sbb
and
and
das
decb
jb
inc
bound
int3
push
cmp
sbb
ss
pop
daa
call
lds
mov
rcrb
int3
gs
push
push
adc
or
inc
fldcw
and
ret
adc
test
mov
sbb
shrl
xchg
fwait
bnd
pop
adc
js
xor
inc
outsb
pop
xor
dec
pop
int3
bound
arpl
idiv
inc
scas
ror
xchg
call
in
inc
fistl
jecxz
stc
adc
xlat
mov
sbb
xchg
sbb
cmp
adc
fiadds
xor
jle
aaa
mov
ss
shll
pop
or
dec
cmp
in
dec
in
push
and
pushf
movsb
sti
fwait
mov
stos
inc
inc
cli
sbb
add
dec
sbb
out
into
inc
push
fbld
shll
and
add
sbb
rorb
loop
mov
push
mov
mov
mov
jne
fidivrl
into
test
sub
ret
add
or
test
or
mov
adc
push
jno
mov
popf
cs
shrb
lcall
idivl
out
xor
mov
stc
scas
nop
rorb
loop
mov
popa
adc
dec
movsb
or
cld
adc
mov
push
jbe
jns
mov
into
mov
nop
pushf
pop
xor
xchg
inc
jb
mov
out
sub
push
xchg
rep
jns
in
gs
in
imul
mov
rorl
mov
pop
imul
je
mov
ljmp
xchg
shlb
outsb
push
mov
jno
cli
sbb
aam
loop
shl
dec
ja
jno
fstpt
mov
xor
insb
inc
lea
push
adc
jecxz
push
adc
sub
cltd
fadds
or
push
sub
daa
popa
hlt
xchg
xchg
aam
add
pop
and
bnd
lock
cmp
add
fwait
nop
cwtl
fcmovbe
mov
loopne
out
push
push
sbb
xlat
icebp
jno
clc
aas
movsb
jbe
scas
addl
dec
xor
xchg
xor
mov
and
mov
xchg
std
jb
scas
mov
push
in
push
mov
jmp
sub
jmp
into
in
cs
jb
pop
jl
mov
mov
cmp
xchg
test
cwtl
add
sahf
jb
xchg
test
add
imul
xchg
out
inc
xlat
pop
mov
jecxz
push
pop
push
sub
adc
repnz
imul
inc
fidivrl
add
mov
cmp
gs
cmp
test
bound
sbb
test
fldcw
jp
cmp
mov
mov
and
inc
dec
in
cwtl
mov
jae
push
inc
fmull
inc
sbb
imul
fwait
push
pop
scas
addb
call
xor
and
xor
pop
lea
mov
sarb
push
iret
lds
sub
jge
shll
decl
jle
push
roll
repnz
lea
adc
cwtl
ss
jmp
cmp
inc
shll
call
call
push
cld
sub
mov
or
pop
dec
add
xlat
call
pop
ljmp
add
js
jbe
cmpsb
add
or
test
xchg
aam
fwait
adc
testb
cwtl
inc
sbb
fisttpl
xchg
test
inc
cld
movsl
push
mov
sub
dec
scas
cmpsb
cmp
sbb
mov
call
jmp
outsl
mov
inc
sahf
inc
xchg
cmp
in
inc
sarb
loop
pop
rorl
hlt
outsl
inc
add
push
mov
dec
mov
nop
cwtl
mov
in
mov
mov
daa
cmp
xchg
arpl
loope
aam
lcall
pop
mov
imul
jo
jp
imul
lock
loop
cld
lret
inc
mov
xor
xlat
insb
shrl
outsl
loop
or
mov
push
icebp
scas
push
sbb
daa
bound
jl
push
cwtl
xor
push
hlt
adc
mov
jno
and
ret
mov
mov
lret
dec
or
xchg
add
daa
push
mov
sbb
pop
sbb
cmp
cwtl
sub
les
inc
fwait
sub
adc
sub
and
daa
mov
pusha
xlat
and
lock
aas
aad
or
ret
sub
cmp
into
add
jge
and
mov
push
cmp
test
jle
lds
in
cmp
mov
sub
push
dec
call
push
pushl
sbb
add
lds
aad
shlb
inc
add
jbe
dec
mov
lock
mov
dec
cld
dec
arpl
outsl
mov
sub
mov
or
add
or
jecxz
and
sub
push
bound
adc
je
mov
mov
sbb
adc
enter
pop
sub
jb
fiadds
test
ss
fistpll
sti
push
and
mov
fstl
lret
dec
mov
lea
popa
aad
scas
mov
lock
shlb
stos
push
push
fsubrp
xor
mov
cmc
sbb
mov
cmp
xor
test
adc
inc
pop
pop
rcrb
stos
adc
jmp
sub
lret
push
pop
mov
je
sub
dec
and
imul
mov
jle
jnp
mov
push
jg
out
mov
loopne
mov
test
lcall
inc
sub
das
ret
push
sahf
testb
les
sbb
pop
or
pushf
outsl
add
xchg
lcall
and
out
shll
aas
add
jno
cmp
loope
gs
cmp
call
mov
fildll
push
mov
ret
inc
and
push
push
sbb
repnz
push
cmpsl
out
fstps
insl
or
addb
xchg
sub
ss
je
sbb
push
lods
push
inc
inc
std
mov
ret
jp
sub
push
cltd
mov
rcr
andb
push
fucomip
xor
mov
cmp
repnz
push
pop
or
pop
mov
push
and
aaa
dec
jno
mov
cmp
js
cmpsl
sub
mov
in
out
popf
pop
lret
cld
test
insb
and
sbb
nop
push
dec
std
and
fsubp
push
test
jp
test
mov
mov
fldenv
lret
nop
fldt
vpaddusb
cmc
xlat
iret
pop
lahf
add
lods
dec
sub
out
in
xchg
mov
clc
cmp
mov
push
out
push
jp
ficompl
scas
fucomip
cmp
xor
and
adc
sahf
test
fcmovnbe
push
cmpsl
negb
out
cs
mov
shrb
lahf
mov
jge
sbb
in
loop
scas
mov
lods
pop
or
cmpsb
in
movsb
ljmp
and
mov
ret
cmp
pop
rcl
lds
adcb
fdivrl
rcll
xchg
shlb
je
sub
repnz
icebp
adc
mov
push
sub
dec
pop
push
adc
pop
xor
movsl
cmp
lods
xlat
mov
mov
cmp
test
pop
repz
shrl
movsl
cmpsl
ret
jge
jae
je
pop
cmpsb
cmp
icebp
mov
loopne
js
pop
jbe
sub
and
mov
xor
mov
dec
pusha
push
xchg
shrl
das
jae
or
xchg
mov
pop
jbe
and
and
add
repz
out
mov
popa
repz
inc
sarl
in
cmp
dec
mov
push
lods
or
hlt
mov
mov
jne
pop
xchg
movsb
xor
call
lret
repnz
outsl
add
orl
lret
sub
cmp
cmp
pop
dec
loopne
jne
mov
mov
cli
mov
fidivl
shlb
xchg
lret
push
sub
cld
movsb
mov
and
rclb
jnp
push
jne
push
mov
fwait
mov
hlt
xor
cli
pusha
add
xor
fimull
add
add
scas
lods
jecxz
adc
xor
jmp
push
sbb
jbe
in
subb
bound
mov
dec
in
mov
jecxz
in
stc
rorb
xor
sbb
adc
push
in
push
imul
daa
lret
jns
mov
mov
sub
stc
nop
and
push
pushf
xor
mov
xor
jo
popf
fdiv
scas
jae
sbb
dec
mov
daa
ret
mov
int
pop
mov
mov
jo
add
ja
sub
les
pop
out
push
aas
lret
loope
and
mov
push
and
repnz
adcl
dec
add
mov
mov
push
adc
add
push
fmull
push
lret
cmp
xchg
test
or
mov
rorl
cmp
cmpsl
and
dec
movsb
pop
push
push
outsb
jge
fnstcw
push
stos
inc
fists
push
fcmovu
out
dec
stc
xlat
test
pop
mov
popf
ljmp
outsb
pop
adc
pop
mov
xor
incl
adc
das
dec
cmp
in
pusha
push
sub
jl
pop
lods
add
fildll
das
testl
inc
addb
xor
nop
add
or
or
sub
and
add
fcomps
aad
xor
lods
cmpsb
lret
arpl
mov
ljmp
pushf
add
int
adc
cmpsb
mov
fidivrl
cltd
rorl
outsl
frstor
aaa
jge
lcall
loop
jb
cld
dec
jno
pop
cmp
jae
dec
xchg
jecxz
rclb
ljmp
cwtl
xor
xchg
inc
jmp
sub
jecxz
daa
outsb
sarb
add
sub
in
pop
jnp
mov
mov
mov
pop
sarb
xor
and
inc
jecxz
test
pop
rolb
dec
push
or
jg
pop
xor
stc
cmp
push
shl
jb
mov
xlat
and
mov
dec
je
fsubl
inc
icebp
mov
cs
es
xchg
add
lea
iret
lds
mov
push
daa
ds
lods
sbb
lret
mov
leave
add
cmp
push
imul
scas
mov
push
loopne
fidivl
aaa
loope
mov
pop
sbb
dec
dec
stc
cmp
sub
xor
outsb
add
inc
sbb
xor
cmp
xor
add
xor
decb
movsb
rol
mov
add
ja
icebp
scas
mov
outsb
sbb
mov
outsb
jl
push
call
hlt
andl
test
xchg
jmp
sbb
jno
outsl
cld
mov
nop
popf
shrl
adc
jb
jb
mov
jecxz
mov
or
xor
jo
and
push
sub
call
test
mov
xchg
out
pushf
xchg
mov
mov
scas
jno
mov
fdivl
cld
add
and
icebp
dec
xchg
loopne
inc
push
push
sub
mov
in
mov
outsb
aas
outsb
aad
out
sbb
cmp
outsl
mov
fisubs
out
test
sbb
popa
clc
popf
fs
xchg
dec
or
scas
adc
push
outsl
lret
ds
or
out
rcrb
jl
jge
fcmovb
adc
xor
sti
arpl
xchg
add
jne
loope
bound
mov
clc
nop
jnp
out
aaa
lret
repz
pushf
fs
push
xchg
jl
mov
mov
or
out
pop
add
jmp
sub
fsubr
iret
pusha
jbe
pop
push
and
adc
jns
clc
mov
sub
mov
or
enter
out
test
rcl
iret
lods
movsl
mov
mov
lods
and
pop
mov
ljmp
testb
sbb
xor
sbb
push
xchg
movsl
push
cltd
je
loop
adc
jae
movsl
and
std
ljmp
jl
mov
dec
out
mov
or
cmpsb
lea
sbb
or
insb
cmp
adc
aas
inc
inc
or
adc
aam
stos
adc
in
jns
and
ds
insl
pop
push
pop
test
rcrb
in
jmp
or
cmp
shrb
xor
in
sarl
pusha
or
jae
push
stc
sub
or
addb
loope
out
xchg
fbld
test
mov
mov
ds
les
sbb
sbb
lds
aas
sub
dec
repz
std
inc
icebp
pop
pushf
in
stos
push
xor
fists
sub
xor
aas
xchg
jmp
mov
imul
clc
loop
push
js
sarl
test
fstpt
fstp
imul
inc
shrl
pop
xchg
popa
clc
imul
rcrb
dec
lret
cld
pop
scas
ljmp
pop
arpl
push
or
inc
xchg
pop
jg
adc
xchg
mov
aad
dec
mov
icebp
pop
jle
mov
add
and
mov
int3
insb
inc
pop
sub
push
xor
adc
and
fs
pop
repnz
dec
fldenv
lods
push
inc
sub
sub
dec
sbb
out
lcall
or
mov
cmp
dec
pusha
leave
dec
xchg
dec
popf
lods
mov
jg
pop
mov
dec
and
cld
xor
pop
adcl
mov
out
push
inc
in
xchg
pop
mov
inc
cmp
fisubrs
lods
test
jae
dec
mov
jno
cmp
pop
lock
dec
xchg
divl
in
mov
movsl
xchg
js
dec
push
call
in
outsb
es
je
iret
shlb
stos
jnp
sbb
jns
call
push
popa
xor
xor
fidivl
mov
and
cs
call
rorl
scas
mov
fstps
js
push
dec
loop
mov
out
or
in
mov
xchg
push
push
movsb
cmp
das
ret
jnp
or
lcall
adc
sbb
push
push
js
or
gs
rol
mov
sbb
dec
mov
pop
xor
scas
les
sub
mov
sarl
fistl
lret
cld
fmull
in
push
jne
push
dec
loope
xchg
in
fsubrs
daa
inc
xor
push
aam
aaa
and
push
or
lea
mov
incl
jnp
mov
xchg
jecxz
cmp
mov
xchg
outsb
xor
int
mov
subl
xor
pop
cmpsl
ret
mov
loope
mov
cmp
and
addr16
pop
daa
xchg
jmp
push
or
fs
lahf
lcall
add
ljmp
imul
decb
add
or
sbbl
dec
repnz
testb
pop
sbb
cmp
in
ljmp
xchg
xchg
inc
jbe
adc
pushl
and
in
negl
mov
bound
loope
sub
mov
dec
lcall
test
sub
push
push
movsb
xor
jge
stos
mov
mov
testl
mov
fucomi
nop
push
push
pop
gs
mov
mov
aaa
loopne
cmp
cmpb
test
lcall
leave
sarl
adc
push
repz
lock
inc
js
jo
cmp
adc
mov
jmp
sti
sbb
enter
jnp
das
adc
dec
pop
test
inc
cwtl
xor
lret
jb
in
adc
scas
lods
pop
rcrb
xor
xor
jmp
push
sbb
imul
dec
loope
mov
loopne
jle
cmpsb
mov
push
ljmp
call
imul
scas
icebp
mov
vpcomub
mov
lea
ret
sarb
pop
and
or
test
sbb
jp
sbb
jmp
inc
fscale
aas
loop
jle
cld
pop
add
push
shrl
mov
test
or
imul
es
ja
fs
xor
add
data16
mov
mov
fldt
sbb
mov
xchg
inc
int3
arpl
mov
or
push
dec
loop
repz
mov
repnz
or
testb
pushf
inc
out
adc
dec
push
std
and
testl
cmp
push
outsl
add
shlb
lods
outsb
pop
imul
notb
popf
addl
jmp
gs
cli
inc
push
sbb
mov
mov
inc
fcomps
call
inc
testl
nop
inc
inc
repz
and
mov
inc
xor
jle
cmpsl
sub
lahf
mov
bound
jmp
dec
or
clc
jl
sub
sbbb
clc
jl
imul
call
push
push
repnz
dec
int
and
jns
xchg
sbb
das
scas
and
jmp
clc
jle
dec
push
inc
dec
jecxz
cs
dec
pop
push
mov
outsb
je
mov
es
rorb
cmpsl
pop
ljmp
inc
xlat
cmovo
ret
jl
xchg
sub
push
call
mov
xchg
cmpsb
sub
sub
push
out
repnz
popf
sub
inc
push
out
mov
in
add
and
jecxz
cltd
test
int3
mov
and
aam
andl
jge
adc
and
add
adc
cltd
and
imul
mov
popa
mov
lahf
sub
push
adc
sbb
mov
sti
jo
fcompl
add
xor
bound
lahf
cmpsb
das
pop
stos
jbe
jno
mov
scas
and
pop
repnz
cmp
into
pop
arpl
ret
and
xor
ret
pop
movsb
ficompl
rorb
push
daa
inc
or
mov
roll
xor
mov
jecxz
jmp
cmp
cmp
adc
inc
push
ds
arpl
jp
lahf
stos
pop
into
pop
pop
lret
es
cwtl
mov
push
jmp
ret
punpcklbw
hlt
jb
adc
jb
jmp
mov
mov
dec
call
ljmp
jne
ja
xor
aas
js
or
dec
out
push
jo
xchg
scas
sti
jo
adc
xchg
popf
jmp
in
mov
sub
dec
movsl
jge
shr
cwtl
icebp
jbe
dec
cmp
xchg
adcb
sarb
inc
out
jae
mov
std
int
lcall
lret
insl
loopne
mulps
mov
das
les
jno
mov
dec
and
outsl
add
jmp
xchg
clc
mov
sub
fwait
xor
dec
nop
stc
push
pusha
leave
mov
xor
dec
or
mov
movsl
ds
shr
xor
lret
mov
int3
pushf
sar
sbb
in
cmp
xchg
hlt
inc
mov
insl
ja
mov
mov
mov
outsb
popf
jg
or
sub
stc
fchs
mov
pushf
sub
sti
xor
dec
sbb
or
adc
movsl
mov
shr
imul
mov
mov
mov
gs
into
std
push
sub
pusha
lret
push
pop
sub
lods
mov
dec
xor
imul
mov
std
or
dec
repnz
fnstcw
rcrb
pop
pop
scas
inc
push
fidivs
jecxz
cmp
and
std
movsb
negb
push
dec
pop
sub
inc
sub
push
cmpsl
into
fnstenv
mov
sbb
sbb
or
outsl
rcrb
jg
out
inc
mov
pop
hlt
arpl
push
jb
push
jnp
inc
mov
jp
jb
mov
xchg
push
and
test
sahf
xor
dec
shll
mov
jecxz
dec
fsubrs
push
ja
test
jno
arpl
xchg
mov
les
adc
mov
pop
ret
mov
mov
iret
hlt
stc
inc
fldt
push
sarb
pop
push
fsubr
orb
insl
sarb
out
lods
push
imul
inc
inc
fdivl
in
xchg
push
adc
cmp
sahf
push
inc
lret
aad
mov
inc
movsl
mov
xchg
mov
inc
inc
mov
jnp
jmp
jp
jle
xor
aas
ret
mov
xor
or
push
les
or
pop
ret
xchg
push
stc
and
xchg
or
ja
mov
insb
outsb
jne
rorb
pop
sub
outsl
jae
cmp
xchg
sbb
stc
lock
xor
cmovbe
imul
mov
cld
push
arpl
xchg
sbb
sub
imul
push
loopne
fstpl
iret
sbbb
fsubl
aad
adc
mov
pusha
lds
jmp
cmpsl
add
push
inc
test
mov
push
dec
sbb
lcall
push
pop
sub
mov
lret
imul
push
push
lahf
jns
mov
es
adc
sbb
xor
cmp
mov
sbb
mull
stc
xchg
adc
pop
movsb
addr16
std
leave
gs
testb
mov
xor
add
mov
cmpb
inc
push
cltd
adc
xchg
sbb
cmpsl
loopne
add
push
lods
and
add
sbb
aas
xor
xor
testl
fbld
mov
lock
jmp
or
or
test
or
outsb
push
sub
call
dec
mov
jns
mov
imul
fucomi
mov
xchg
adc
push
pop
mov
out
and
dec
cmc
sbb
push
mov
or
or
shrb
scas
push
rolb
cli
push
inc
adc
mov
mov
hlt
inc
popa
es
add
stos
adc
fistl
pop
test
lret
mov
push
xchg
dec
push
in
mov
sbb
mov
sub
inc
fs
pushf
cmpsb
ret
scas
inc
push
mov
int
cmpsl
cmpsb
sbb
out
int
mov
out
xchg
ss
stos
lds
stos
sub
mov
cmpsb
xchg
hlt
pop
add
adcb
push
insl
js
and
inc
out
or
fs
enter
mov
psrlq
inc
leave
jg
push
loopne
hlt
adc
iret
popa
push
aaa
data16
in
add
sbb
data16
scas
mov
pop
adc
or
aad
sub
imul
mov
lock
inc
testl
sbb
mov
push
push
and
fnstcw
sub
mov
mov
add
and
adc
jne
mov
and
mov
xlat
cmp
mov
ds
and
pop
mov
mov
cmp
lret
cmp
push
iret
mov
jecxz
inc
int
add
push
jnp
mov
cmpsl
jl
ljmp
push
xchg
andb
jge
or
add
stos
dec
sub
mov
xor
bound
mov
xor
cmp
mov
pop
out
lds
repnz
repnz
jnp
lods
cli
inc
mov
inc
icebp
and
scas
inc
rcll
pop
mov
adc
cmp
sub
or
das
sbb
outsb
mov
sahf
fmul
jbe
out
iret
data16
flds
xor
iret
ficomps
aam
jmp
pop
xchg
add
test
and
push
mov
ror
jno
sbb
pop
xchg
shlb
mov
rol
xor
idivl
push
in
gs
ds
mov
mov
jle
subl
xchg
sub
mov
push
add
push
or
ja
fildll
sbb
mov
mov
jmp
mov
mov
dec
or
mov
add
jg
push
sub
sbb
xchg
dec
les
int
jp
dec
and
lock
fwait
aaa
jo
sbb
gs
sarb
mov
maskmovq
dec
jmp
cmpsb
cli
mov
pop
out
add
push
or
dec
cmpsl
push
push
movsb
rcll
mov
adc
sbb
inc
mov
std
dec
jmp
call
push
cmp
inc
pushf
add
sub
mov
inc
and
addr16
rcl
and
lock
adc
cltd
add
or
jnp
test
jmp
test
movsb
mov
in
lea
stos
es
pop
pop
or
lods
xchg
jne
mov
inc
popw
add
shll
cltd
fbstp
xor
lds
into
jnp
jne
lea
xlat
stos
inc
leave
sub
popf
arpl
mov
inc
addb
cmpsb
dec
fists
jno
arpl
rol
outsl
jge
in
pop
decb
rcr
and
push
push
stos
dec
movsb
pop
ret
inc
xor
stos
test
mov
mov
lods
lret
fs
xchg
inc
pushf
out
je
adc
sahf
sbb
ret
call
dec
lret
outsb
clc
push
xchg
inc
push
mov
jg
test
std
sbb
pop
dec
mov
dec
test
cmpsl
in
repz
idivl
or
push
adc
in
or
lret
pop
xchg
mov
or
jg
into
jo
pop
movsb
vaddpd
add
adc
pop
xor
xchg
push
inc
clc
pop
mov
test
es
xor
sub
std
push
xchg
xor
xor
imul
jne
xor
fsubrs
out
lahf
xor
jg
cmp
xchg
inc
shrb
jl
pop
daa
cmpsb
mov
mov
jae
mov
xor
pop
dec
push
leave
ljmp
push
js
scas
insl
add
std
jecxz
sbb
movsl
jno
sub
mov
cmp
aad
nop
das
std
mov
xor
push
jp
push
pop
mov
inc
icebp
sub
jge
hlt
jns
mov
add
adc
outsl
jae
xor
stc
rclb
cmp
and
fisttpll
xchg
rorb
xor
cmpsl
mov
sub
jecxz
cmp
or
jg
mov
cmp
mov
adc
inc
xchg
cmpsl
jge
outsl
push
nop
sahf
ret
xchg
add
cmp
mov
je
push
test
mov
loope
rcrl
cmpsb
jl
pop
jns
inc
ret
mov
mov
sarb
lock
ja
inc
jg
cli
es
xchg
jle
jge
push
insl
dec
pop
outsl
xchg
xor
push
test
sub
adc
lea
mov
add
sbb
aaa
jg
in
xchg
data16
femms
mov
rcrb
mov
pop
dec
lcall
xor
mov
mov
jp
loop
adc
ljmp
jo
push
cmp
in
sahf
cmpl
add
ss
push
ret
jle
lods
sbb
pop
int
mov
push
fisubl
lcall
or
dec
ljmp
push
cmp
idivb
icebp
shr
push
add
sub
lods
dec
sarb
adc
mov
movsb
push
cmpl
dec
jae
mov
jmp
js
adc
dec
xchg
or
cmp
jnp
lds
add
cmp
xlat
mov
mov
jo
and
shl
mov
lds
mov
pop
rcrl
test
inc
mov
ss
fadd
add
xor
or
push
lods
cltd
and
push
inc
cmp
pop
mov
add
push
mov
mov
arpl
adc
jbe
pop
inc
jg
or
add
sub
lea
adc
inc
sub
fbstp
xor
dec
jno
adcb
leave
ds
fs
movsb
xchg
std
xor
or
mov
movd
es
jecxz
pop
ljmp
add
mov
dec
lds
mov
ss
pop
add
pushf
xor
pop
fistpl
jae
pop
pop
push
adc
int
cs
mov
imul
adc
xchg
test
mov
and
lods
push
clc
popl
arpl
pop
adc
cmpsl
pop
repz
push
pop
sbb
mov
mov
mov
mov
insb
pop
fnstsw
pusha
das
ss
push
test
repnz
lods
flds
addr16
sub
hlt
sbb
adc
popf
cmp
mov
fiadds
jno
insb
mulb
push
lret
xchg
cmp
lods
xor
jnp
add
mov
aaa
fnstenv
mov
aas
jns
cmp
js
lea
enter
or
stos
mov
pop
stos
shlb
jne
xchg
mov
pop
mov
or
add
loope
add
outsb
sub
sub
sbbb
xor
add
fmuls
xchg
ds
sub
cmp
ljmp
add
cmpsl
sub
pop
in
jb
jmp
cmpl
jge
xor
sub
adc
aad
out
stc
lcall
rorl
add
nop
pop
arpl
and
shll
lds
into
push
clc
sub
lods
cmp
out
sti
mov
jg
iret
xorb
push
lock
testb
and
out
jae
add
jno
dec
cmp
pop
sbb
aam
cmpsb
dec
outsl
daa
loop
adc
and
sub
ret
add
jl
xor
jge
call
stc
into
inc
icebp
add
or
cmpsl
mov
add
or
dec
push
in
jns
inc
mov
rcr
xchg
push
lea
out
or
fwait
lods
adc
xchg
sub
or
sub
shll
pop
gs
fidivrl
mov
sbb
fwait
mov
lahf
test
jecxz
out
sbbb
pop
mov
or
daa
daa
cmp
adc
mov
int3
and
popl
fbld
in
xchg
icebp
js
insb
mov
dec
push
mov
push
movd
aam
rolb
cmp
push
loop
lock
frstor
sub
dec
or
orb
sub
adc
inc
adc
fs
subl
mov
pusha
pop
inc
dec
shll
add
mov
frstor
inc
ret
cld
fadd
das
push
loope
dec
jae
mov
test
jb
test
jmp
pop
out
cmp
out
mov
xlat
into
jle
sbb
cmpsl
dec
push
cmp
lods
fs
outsl
stos
xor
fsubrl
xor
enter
mov
inc
test
push
sbb
xchg
jno
xor
cmp
fbld
dec
hlt
stc
inc
test
js
push
adc
adc
popf
lea
hlt
push
sbb
push
sub
jl
adc
pop
or
mov
mov
lock
mov
pop
call
iret
sbb
shll
mov
scas
outsl
stos
sbb
dec
aas
cmp
bnd
pop
cwtl
fs
lahf
mov
cmp
inc
faddl
xchg
cltd
ss
loopne
push
sbb
pop
aas
aam
es
xor
into
or
ss
jb
movsb
dec
jns
xchg
imul
xorb
repnz
jbe
cmp
mov
jnp
adc
call
xor
jns
loope
xchg
xor
xor
sti
js
cs
push
loopne
inc
inc
pop
jne
and
fwait
push
icebp
movsb
stos
sbb
adc
cli
stos
xor
dec
sbb
lret
cmp
sub
insl
sub
push
sbb
mov
or
lods
add
sub
push
lcall
jne
out
xor
pop
mov
rorl
scas
xor
cmc
jno
shrl
mov
fdivs
push
pop
push
fistl
ret
sti
outsb
mov
ret
jmp
jns
cmc
fcmovne
jae
add
push
ja
push
rcll
mov
adc
inc
cmp
aaa
je
push
sub
pop
cmpb
inc
mov
icebp
xchg
push
add
sub
jge
dec
mov
aad
loope
dec
clc
sub
movsl
adc
cmpsl
adc
cmpb
dec
xor
insb
mov
popf
lcall
fbld
enter
dec
cmp
cmp
daa
cmp
pop
stos
rcrl
jle
mov
dec
lret
xchg
xor
jns
pop
jb
lea
stc
mov
aad
dec
adc
or
or
sbb
push
fsubl
or
cli
xchg
test
lock
idivl
lods
cmp
testb
popa
clc
out
and
loop
xchg
xchg
dec
fcmovb
movsb
cmp
mov
aaa
cmpsb
pop
ret
jg
lods
inc
mov
imul
and
imul
push
mov
mov
pop
adc
mov
xorb
clc
dec
cmpsl
mov
rorl
jns
rcrb
jle
icebp
jb
lods
sarl
addl
mov
adc
cmc
insl
ljmp
inc
cmp
insl
iret
xorl
mov
cmp
push
daa
mov
pop
mov
mov
cmp
loopne
jle
cmp
mov
mov
or
sbb
rclb
mov
inc
xchg
jl
adc
in
sbb
xchg
pop
repz
outsl
inc
add
aad
imul
sbb
stc
xchg
mov
sbb
fisubs
hlt
fs
jl
jnp
movsl
in
xchg
dec
jl
fisubrs
mov
mov
jbe
jg
and
pop
jmp
enter
stos
aas
lea
xor
in
xchg
aad
add
jno
inc
cmc
shrb
cwtl
jno
and
xchg
mov
dec
dec
lods
inc
dec
in
test
mov
int3
xchg
sub
cmc
adc
nop
shll
inc
sbb
mov
daa
pusha
xor
rcrl
repnz
rcr
cmp
cmp
lock
jge,pt
cwtl
test
adc
jo
fldenv
dec
cmpsl
mov
xchg
and
or
arpl
pop
or
mov
push
aaa
or
out
mov
cli
mov
push
ffree
fwait
xchg
jnp
neg
mov
js
leave
lea
adc
das
xor
add
movsb
or
sub
jmp
pushf
pop
cmp
dec
jo
into
loope
xor
sbb
rorb
push
lock
adc
jo
bound
pop
mov
fildll
ss
dec
mov
mov
fisttpll
mull
adc
push
mov
cmp
push
cmc
adc
lahf
gs
xchg
shlb
sbb
cmp
cmc
jo
cmp
xor
jg
jecxz
mov
mov
pop
into
adc
and
xchg
jns
mov
dec
sbb
shll
repz
sub
inc
out
ja
mov
pop
pop
adc
jne
mov
sub
aaa
in
push
outsb
push
nop
mov
in
cwtl
add
lret
loop
jo
or
jp
cli
cpuid
arpl
push
repnz
or
movsl
lds
outsl
inc
mov
add
add
dec
mov
int3
mov
fnstsw
test
pop
add
adc
and
xor
js
movsl
in
xor
mov
sti
out
hlt
inc
fs
push
mov
dec
xlat
icebp
pop
je
lret
dec
pop
divl
adc
fisubrs
lcall
push
and
inc
adc
aad
jne
mov
pop
fcmovnbe
icebp
or
xchg
data16
jp
cmc
and
inc
mov
xlat
clc
push
mov
out
mov
pop
xchg
adc
shl
cmp
int
dec
pop
inc
gs
jo
dec
mov
sub
sbb
mov
nop
cmp
inc
cmpsl
shll
inc
mov
mov
lds
in
ss
rcl
xor
icebp
testl
shll
loopne
cmc
outsb
dec
clc
adc
into
push
pop
mov
cmp
pusha
pop
jg
andb
mov
call
cmp
inc
pop
call
leave
jmp
jne
nop
add
cmpsl
mov
push
out
cs
orb
xor
aam
stc
nop
xchg
sbb
scas
push
push
ss
xchg
sub
mov
mov
rorb
repnz
lret
inc
mov
pushf
dec
push
dec
xchg
mov
inc
cmp
dec
popa
dec
addr16
data16
ljmp
dec
sbb
imul
out
mov
add
xchg
mov
setb
mov
cltd
out
mov
and
dec
cltd
xchg
dec
dec
dec
fldcw
fptan
pop
aad
cld
mov
int3
or
mov
repnz
sub
xor
inc
inc
inc
jbe
mov
lret
addr16
push
mov
lret
mov
mov
ret
sbb
fnstsw
mov
jmp
pop
cwtl
negl
lcall
and
and
pop
fwait
lahf
rclb
sbb
adc
mov
jne
and
ljmp
inc
sbb
lret
fnstcw
jg
fs
dec
imul
cmpsb
jbe
dec
std
xor
imul
inc
lea
sub
int
out
jmp
ljmp
push
mov
shlb
pusha
movb
push
mov
dec
xor
lahf
arpl
mov
push
push
in
inc
cmc
and
add
in
ret
dec
std
inc
cmp
loop
test
push
sbb
add
jnp
clc
mov
cmpl
and
imul
popa
and
scas
inc
adc
clc
push
sub
iret
mov
add
aad
cld
sbb
cmp
in
push
pop
es
adc
mov
sbb
jmp
jne
movsl
sub
outsl
in
dec
dec
sub
ljmp
cs
mov
repnz
aam
mov
jno
pop
mov
cs
mov
pop
dec
in
sub
push
jo
imul
cltd
lea
push
inc
and
jb
mov
lahf
sbb
pop
xchg
adc
and
insb
fwait
ds
xchg
leave
test
inc
pop
inc
sti
add
cmpsb
push
push
xor
sub
inc
ret
rorl
or
dec
xor
mov
fwait
ret
cmp
adc
and
push
xor
or
sbb
enter
in
test
shrl
imul
push
xor
es
xor
adc
mov
test
call
call
xor
push
out
cmovle
dec
out
mov
sub
lcall
xlat
js
or
in
push
mov
add
imul
shl
stos
add
std
stos
inc
push
xor
mov
les
jecxz
inc
inc
xchg
add
rcrl
or
push
es
xchg
mov
jae
pusha
cmp
xchg
je
push
lds
lds
mov
xor
jl
sahf
mov
out
jp
std
mov
int3
imul
cmpsl
mov
scas
cmpsl
in
mov
push
js
subl
sub
mov
dec
loop
lcall
fbstp
popa
or
insb
stos
mov
adc
insl
decb
cltd
lcall
mov
lods
ss
jne
lcall
ja
and
xor
popf
dec
rol
cli
loopne,pt
sbb
stos
lea
xor
rorl
dec
cmc
sbb
outsl
jne
test
dec
push
call
jp
pop
lods
jp
arpl
mov
pusha
lds
mov
loopne
iret
loope
aaa
push
adc
rclb
ljmp
jno
gs
adc
push
mov
pusha
xchg
in
cmp
jo
aas
aad
mov
pop
call
lods
pusha
int
testb
imul
xor
mov
fildll
adc
jge
dec
jmp
inc
sub
sbb
cmpsb
in
in
add
stos
lret
mov
aaa
push
and
sbb
cmpsl
xchg
cmp
xchg
sub
xchg
insl
push
cs
mov
cwtl
das
add
cmpsl
mov
repz
mov
add
jns
inc
fidivs
push
gs
or
les
jl
cmpl
adc
mov
iret
push
in
mov
fcmovnu
jbe
xchg
jl
lret
mov
sbb
mov
in
pop
and
sub
pop
inc
ror
stos
pop
lret
cmpb
jmp
sbb
scas
mov
mov
out
xchg
popa
in
xor
push
push
out
es
addb
stc
or
repnz
sub
push
add
out
xchg
or
push
movsl
mov
push
test
push
sbb
mov
jl
dec
arpl
dec
in
dec
sub
aam
addl
stc
sub
cs
xor
xor
xchg
lret
repz
aad
in
mov
cli
push
and
enter
inc
mov
dec
fldl
cmc
out
mov
xchg
push
popa
idivl
jle
pop
loopne
and
or
lods
inc
jge
mov
pop
mov
xor
aas
sbbl
lcall
cmpsb
in
aaa
push
icebp
mov
or
xchg
sub
pop
ja
sub
inc
add
jns
hlt
mov
jae
imul
xor
inc
lahf
sbb
cmp
xor
cmp
mov
fbld
cmp
cmp
xchg
add
mov
push
movsl
movl
lret
xor
mov
add
mov
sub
cmp
cmp
mov
jmp
pop
adc
out
and
sbb
mov
pop
addr16
add
inc
int3
sub
push
or
cmp
pop
popf
dec
add
pop
pop
and
xchg
fnsave
movsb
mov
mov
icebp
fidivl
jecxz
or
add
mov
lahf
xor
out
pop
push
repz
std
cmp
inc
out
loope
push
sub
cmpsb
jae
mov
iret
decb
out
arpl
inc
fists
mov
push
or
pop
lea
or
pushl
adc
sbb
lods
xchg
outsl
mov
jae
lret
adc
pop
shr
pop
movsb
cwtl
add
pop
push
mov
mov
sub
out
and
cmp
inc
popa
stos
mov
cmpsl
jle
pusha
pop
into
jne
jp
pusha
xchg
int3
lret
inc
rorl
pushf
fsubs
cmp
mov
fnstsw
jmp
pop
fists
mov
sub
xor
pop
scas
aas
sbb
xor
arpl
jns
inc
sahf
and
mov
adc
xor
xor
or
cmp
and
add
pop
xchg
xor
repz
cmpsl
sub
mov
into
fstps
mov
cmpsb
je
dec
out
dec
adc
das
sbb
mov
inc
push
divb
dec
mov
inc
cs
xchg
push
shl
outsb
cmpl
lcall
ds
xor
arpl
cmc
xchg
push
je
jnp
aas
sbb
cld
or
xchg
mov
out
mov
cmp
or
xchg
xor
push
sub
mov
test
mov
in
inc
sarl
jmp
rcrb
ds
push
dec
in
push
mov
sub
inc
sub
cmp
cs
or
or
adc
mov
xor
jp
imul
push
lock
or
jecxz
sub
scas
add
test
addr16
adc
xor
and
jp
xor
int
mov
mov
not
xor
add
lcall
sub
cmp
push
enter
test
loopne
js
rolb
and
jo
mov
sbb
push
xor
sub
xchg
addl
xchg
out
push
in
faddl
jo
jle
decb
call
lahf
push
pop
jb
imull
imul
add
cmc
stos
xor
adc
repnz
mov
add
and
mov
je
fistps
in
push
lahf
pop
jb
cmc
mov
loopne
cmp
insl
add
inc
nop
int
ret
bound
repnz
les
xchg
notl
mov
add
jmp
mov
mov
iret
cs
repnz
aad
push
adc
xor
aam
or
cs
jp
ds
hlt
outsl
lret
test
mov
mov
lcall
mov
mov
lcall
adc
or
in
test
cmovl
jle
cmpsl
mov
pop
repz
test
cmp
jle
in
fwait
test
bound
push
push
adcb
ljmp
sub
repnz
fs
jecxz
rolb
pusha
ret
jbe
mov
mov
adc
jge
les
jecxz
lret
iret
aaa
into
add
fcompl
adc
leave
mov
jle
mov
loop
push
int3
xchg
sub
dec
jg
mov
fdivl
xchg
cmp
sti
add
daa
bound
add
push
inc
fwait
repnz
and
mov
pop
repnz
inc
gs
xor
xchg
test
nop
ret
fcomip
lds
imul
xor
inc
inc
sub
jp
xchg
dec
int
lahf
shr
test
lock
repz
pushf
push
xchg
mov
lock
adc
xor
xor
popf
lods
cmp
inc
rorl
cmp
insb
sub
cli
inc
stos
ficomps
iret
int3
imul
out
jnp
or
movsb
add
lea
loop
xchg
xchg
and
dec
testb
cmp
jle
loopne
adcl
adcb
dec
cmpsb
mov
push
jl
sbb
in
inc
loopne
dec
fisttpll
dec
scas
cli
cwtl
imul
lcall
add
rcl
jp
in
stos
repz
adc
xor
cmpsb
arpl
or
mov
xchg
lods
cld
xchg
push
into
test
xchg
repnz
out
test
iret
fisubrl
icebp
test
ret
les
push
sbb
sbb
mov
cmp
lods
shll
mov
fucomp
clc
cmpsb
ds
daa
adc
loope
mov
jge
inc
sub
mov
push
fs
or
inc
scas
xchg
inc
jmp
and
jmp
insl
mov
and
cmp
and
pop
jbe
repz
xor
dec
in
push
rcrb
xchg
lcall
or
push
jne
movsb
pop
repnz
xchg
jle
roll
xchg
inc
xchg
ljmp
jo
adcb
inc
std
sub
add
sub
cmpsl
cmp
ljmp
pushf
scas
or
hlt
xchg
xor
movsb
mov
pusha
pop
into
push
mov
ljmp
idivb
lcall
cmp
xchg
jo
or
cbtw
lods
mov
movsl
sbbl
popa
pop
hlt
scas
add
into
and
xchg
rcl
jmp
sbb
lods
cmpsb
cmp
pop
call
or
inc
xchg
dec
cmp
mov
ret
mov
cmpb
test
pop
sub
sbb
cmc
roll
mov
arpl
addb
dec
inc
and
insb
adc
decb
sbbl
push
das
adc
mov
andb
repnz
mov
loop
push
push
xchg
xchg
cmc
jle
mov
in
ljmp
daa
xchg
sub
bound
push
arpl
js
idivl
sub
jnp
stos
mov
push
dec
inc
test
jge
dec
push
insl
dec
jae
ja
mov
cmp
negb
and
cmp
adc
sahf
push
inc
shrb
sbb
rep
repz
addr16
and
inc
jns
dec
fbld
dec
data16
orb
test
rcrl
stos
jo
jae
jmp
xchg
insb
jnp
shrd
enter
shrb
je
and
out
push
daa
mov
xchg
testb
lock
icebp
mov
es
mov
call
fdiv
outsl
daa
repz
mov
add
ljmp
lcall
push
adc
daa
js
xchg
mov
xor
mov
add
adc
fadds
mov
jge
mov
rcrb
pop
clc
sbb
mov
scas
mov
iret
outsl
mov
imul
sbb
cmpsb
and
push
in
or
iret
lahf
scas
dec
mov
mov
xchg
pusha
mov
xchg
mov
addr16
and
adc
lock
pop
lods
jl
inc
adc
mov
ds
sbb
or
popa
push
pop
mov
loopne
pop
jmp
cmp
scas
mov
in
cld
jo
push
mov
aas
movsb
mov
imul
sbb
std
mov
rcrb
and
xchg
hlt
jge
movsl
cmpsb
push
add
cmpsl
or
pop
dec
xchg
insb
imul
subb
stos
jmp
ret
jae
insb
clc
jae
push
shrl
jg
hlt
lods
fdiv
xchg
es
aaa
iret
test
inc
outsb
mov
inc
jmp
orb
mov
mov
outsl
int
out
imul
or
xchg
and
insl
jge
hlt
in
loop
inc
clc
cmovbe
sar
das
jbe
arpl
fsubrs
rcrl
adc
lea
inc
mov
cmp
push
cld
pop
push
pop
xchg
insl
xlat
push
xor
add
nop
push
sbb
and
dec
shl
pop
stos
scas
std
rcrb
push
je
add
mov
mov
sahf
mov
in
sub
lea
scas
inc
loope
outsb
imul
cmp
inc
dec
adc
xor
sbb
mov
push
and
iret
jmp
cmp
jns
jge
pop
mov
xchg
mov
sub
lock
jns
scas
stos
xchg
cmp
repz
insb
add
imul
pop
jbe
and
cmp
cmp
push
sub
das
cmp
pop
in
mov
add
mov
jmp
dec
in
fs
jb
out
test
daa
or
rcl
mov
xchg
mov
stos
mov
jl
int
xchg
dec
add
shrb
inc
add
mov
cmp
in
andb
mov
jp
push
mov
or
push
or
mov
fsubrl
movsl
sub
mov
sbb
pop
pop
inc
mov
mov
cmp
and
xchg
cmp
repz
aad
cwtl
stos
cmp
jp
movsb
xor
pushf
cwtl
push
pop
cmovle
ret
addr16
push
in
or
std
or
gs
outsb
mov
daa
sub
lret
xor
loop
cmp
jecxz
imul
adc
dec
in
and
out
popa
insb
lds
add
push
mov
mov
daa
stos
mov
sub
enter
nop
loope
xchg
repz
inc
sub
icebp
pop
mov
fidivl
cmp
rolb
cmpsl
imul
insl
data16
adc
arpl
xchg
das
xchg
dec
jne
popf
sti
sub
loope
mov
lcall
and
mov
sbb
insl
dec
pop
sti
xchg
pop
jge
pop
and
fcomp
and
les
pop
dec
shrl
out
fbstp
mov
std
fs
shl
mov
cmp
js
and
or
and
push
add
ja
outsl
xchg
dec
dec
pop
iret
lret
jne
add
mov
fwait
and
mov
cltd
dec
cmp
push
ret
les
xchg
data16
inc
jmp
cwtl
hlt
jne
add
test
js
mov
xchg
xchg
mov
mov
fsub
out
sub
jl
mov
mov
icebp
mov
cmp
adc
xor
iret
enter
addl
sub
mov
rol
leave
jecxz
jp
ret
mov
int
or
xchg
sub
mov
sti
push
sub
iret
enter
push
out
popa
test
fcoms
sub
test
in
fnstenv
in
pop
jle
push
hlt
aaa
pushf
sbb
dec
sbb
aas
mov
inc
stos
loopne
test
cmpsl
mov
dec
in
nop
cmpsb
dec
clc
sar
push
or
and
xor
lods
aaa
xchg
pushf
add
enter
mov
jge
push
cmp
adc
and
std
inc
push
xor
adc
rcll
pop
mov
xlat
mov
or
mov
pop
clc
call
sbb
int3
int3
cwtl
outsl
sbb
out
cmp
mov
or
adc
mov
clc
bound
jb
out
imul
aas
loop
push
mov
mov
movsb
or
xchg
or
pop
test
cmp
cmp
or
out
test
push
inc
data16
fisttps
sbb
imul
xor
dec
decb
sbb
sub
and
or
pop
xor
in
out
mov
mov
pop
adc
out
popa
iret
mov
test
mov
pop
shrb
inc
add
mov
dec
push
cmc
dec
adc
dec
fdivrp
dec
sub
lods
popf
in
dec
pop
push
cmp
mov
mov
lods
fwait
std
adc
mov
std
jp
daa
add
xor
adc
cmpb
xchg
out
xchg
cmp
xor
cwtl
outsl
cs
or
repz
lods
daa
cs
add
shl
sub
and
mov
sbb
fldenv
push
adc
jns
pop
xor
push
mov
dec
loopne
xor
pop
push
sbb
push
mov
mov
pop
pop
jbe
rcrl
mov
imul
stos
lcall
lods
add
xor
mov
loop
or
inc
aas
sahf
xchg
popf
xchg
add
loop
or
add
cmpsl
fdivs
pusha
arpl
jne
sbbb
js
sarb
inc
in
insb
mov
mov
sbbb
fucomi
insb
rcr
mov
mov
incb
ret
cmp
jg
in
cltd
mov
cmp
popf
inc
shrl
mov
ss
or
dec
mov
std
insb
and
std
enter
sbb
insb
fistps
xor
push
mov
call
dec
jo
jp
lcall
daa
ss
dec
cmp
addr16
test
rcrl
mov
mov
fildll
aad
or
push
sbb
je
aam
mov
les
adc
sarl
mov
dec
jp
jmp
aas
xchg
sbb
lahf
std
mov
xor
inc
addr16
lret
xchg
addl
inc
sub
into
mov
bound
rcll
repnz
and
jbe
inc
push
stc
clc
mov
gs
push
pop
pop
jae
sub
adc
je
push
scas
out
mov
xchg
pop
fisubrl
or
movntps
mov
pop
dec
xchg
idivl
insl
subb
push
rorb
cmc
mov
jl
push
in
lahf
ss
or
out
xchg
mov
in
stos
in
sahf
push
mov
fdivr
jae
sbb
jp
or
bound
jnp
popa
cmp
jnp
das
sti
arpl
nop
jns
pop
and
push
mov
inc
jno
sub
clc
add
movswl
xlat
ret
mov
jecxz
out
and
push
lea
and
mov
ja
pop
ja
xchg
and
xchg
mov
jb
out
pop
imul
pop
cmp
or
inc
ds
shl
jl
mov
loope
add
and
cwtl
mov
sub
sti
push
test
test
xor
addr16
mov
or
mov
cwtl
stos
test
cmp
inc
arpl
in
jne
xchg
iret
or
dec
shlb
adc
push
pop
loopne
or
call
rcrl
and
sbb
aas
jo
xor
mov
jl
jg
dec
stos
fldl
or
sarl
push
mov
repz
pcmpgtw
data16
or
movl
dec
stos
pop
or
imul
xchg
cmp
stos
xlat
dec
jle
repnz
push
scas
loope
sbb
sub
rcrb
jle
pop
inc
lahf
add
inc
movsb
mov
bound
and
dec
sbb
inc
and
jnp
fimuls
sub
pop
shl
incb
fsubr
icebp
mov
lods
pcmpgtw
mov
sub
mov
cld
mov
inc
and
mov
stc
or
imul
xor
push
popf
mov
inc
mov
insb
or
xor
jmp
or
cmp
or
enter
cmp
and
xor
arpl
cmc
xor
jno
xor
inc
fdivrs
push
pop
popf
lea
cld
outsl
xor
ljmp
xchg
push
mov
mov
dec
sub
jl
outsl
loop
dec
loopne
int
xchg
iret
or
loopne
push
sub
sarl
scas
or
mov
daa
mov
pop
pop
inc
clc
inc
mov
adc
jne
shrb
cmp
sbb
pop
les
sub
rclb
pop
lods
xchg
imul
inc
out
push
add
cmc
mov
mov
icebp
sub
js
jbe
xsha256
cmpsb
pop
xchg
push
or
jle
bound
cmpsl
push
jnp
sub
jb
les
pop
sbb
inc
scas
inc
jns
shll
push
addr16
jl
stc
jp
cmp
adc
pop
jg
movsl
ret
fistpll
jno
daa
mov
or
mov
test
adc
inc
mov
dec
jl
dec
daa
push
xlat
cmp
xchg
pop
fstps
mov
or
movsl
mov
pop
inc
sti
mov
out
pop
or
fucom
test
repnz
push
mov
adc
cmp
or
jg
mov
xchg
sub
or
inc
cs
fisubrl
sahf
sti
inc
push
cmc
mov
xchg
js
movsb
mov
xchg
jo
and
sub
fucompp
sbb
testb
sbb
push
in
movsb
inc
fisubrl
pop
lock
add
mov
ret
ljmp
cmp
pop
pop
mov
insb
mul
add
mov
mul
pop
inc
adc
ljmp
jmp
pop
fstl
push
cmpsl
mov
pop
or
mov
push
mov
cmpsb
cmp
outsl
les
inc
inc
sbb
sahf
scas
pop
fwait
sbb
and
jns
mov
sub
mov
stc
or
xor
mov
cmp
jle
xchg
jmp
andl
mov
push
insl
cmp
and
jne
addr16
sti
mov
dec
aaa
int3
inc
into
js
mov
or
loop
or
jns
mov
dec
xchg
dec
loope
std
sub
xor
jecxz
fsubrl
push
xor
add
in
mov
loop
push
pop
test
inc
xchg
rorl
mov
subb
mov
inc
pushf
and
std
sub
fsubrs
push
pop
ret
sub
jmp
in
jp
lcall
push
xchg
pop
call
mov
add
adc
sahf
ljmp
mov
pop
test
mov
push
aaa
imul
mov
inc
lds
iret
jo
add
and
pop
in
test
adc
fisubs
mov
gs
ss
mov
data16
cmpsb
mov
xor
shrl
test
or
adc
or
mov
jmp
popa
mov
add
mov
aas
push
and
iret
popf
sub
or
sbb
sub
repz
dec
push
adc
in
jae
fsts
xorl
or
pop
sbb
dec
dec
jmp
in
in
pop
jg
xchg
adc
mov
cs
xchg
js
clc
cmpsl
lret
adc
xor
push
inc
dec
mov
pop
leave
and
xor
in
aaa
xchg
inc
leave
out
decb
jne
imul
pop
ja
push
push
push
jmp
jne
push
pop
pop
mov
daa
out
jg
cwtl
cmp
in
loop
into
lcall
pop
jae
nop
mov
popa
mov
push
inc
sbb
test
cmp
adc
daa
lock
mov
filds
push
mov
imul
push
gs
adc
sahf
test
mov
ret
mov
adc
push
lds
loopne
es
aas
mov
popl
pop
insb
adc
scas
ret
mov
dec
and
fmull
inc
xchg
sbb
mov
push
mov
sub
inc
je
mov
push
ljmp
es
pop
jge
xchg
daa
js
frstor
insl
cmp
ja
pop
cmp
xchg
outsb
mov
movsl
push
add
cmp
gs
roll
test
pop
rcr
push
cmp
clc
add
jnp
repnz
fwait
adc
xor
mov
lods
in
es
sti
test
mov
or
test
aaa
adc
out
sbb
dec
fld
mov
cmp
scas
fstp
xor
sbb
ja
pop
xor
test
jae
test
lods
subb
jmp
lock
jmp
in
mov
jle
rcrl
stc
cltd
lock
cmp
xchg
mov
jne
mov
cs
in
inc
push
repnz
mov
popa
jle
mov
ret
hlt
ljmp
lods
ja
daa
popa
fimull
jecxz
out
cld
mov
outsl
sbb
jl
shll
in
das
pop
cmp
imul
or
popf
xchg
jp
daa
sti
or
lea
rcr
push
adc
into
push
movsl
icebp
xor
mov
std
movsl
aam
adc
or
push
inc
fisttpl
push
pop
dec
nop
loop
lds
mov
push
sar
enter
dec
movsl
lds
stos
inc
dec
dec
ljmp
xor
fisubl
push
popf
stc
adc
fidivl
xchg
add
cli
sub
sbb
xor
insl
push
xchg
push
test
enter
ffreep
rclb
jp
mov
push
mov
in
pusha
ficompl
lea
lods
add
push
pop
push
in
sahf
and
hlt
hlt
call
fisubrs
es
sbb
shlb
flds
or
cmpsb
aam
or
jno
xchg
lret
xchg
or
push
fbstp
rol
jg
sub
leave
popf
cmpsl
mulb
mov
mov
jns
pop
dec
and
aas
test
in
jbe
rorb
dec
pusha
sahf
jp
gs
or
push
sub
sahf
sub
or
shrb
mov
mov
js
rep
pop
mov
mov
sub
nop
inc
outsb
inc
test
xor
ret
xchg
xor
pop
cmc
mov
out
xor
cs
pop
outsl
dec
dec
sbb
leave
sbb
es
push
pop
test
repz
cmc
fdiv
or
mov
jne,pn
stos
subb
push
jo
fsubr
outsb
jne
shll
rcrb
or
or
mov
popf
ljmp
pushf
sub
push
push
mov
cltd
dec
mov
dec
dec
movzwl
push
sub
scas
int
or
cld
mov
in
cmp
mov
mov
inc
aad
dec
push
jbe
xchg
xor
mov
dec
outsb
orb
call
or
inc
into
xorb
push
dec
filds
incl
mov
popf
sub
outsb
xchg
inc
sbb
dec
mov
nop
hlt
leave
inc
pop
push
cmp
push
pusha
mov
psrld
hlt
loopne
dec
out
pop
outsl
cmp
popf
pop
shll
or
xor
aas
lods
mov
dec
mov
stos
sub
ljmp
xor
in
outsl
jnp
xor
daa
or
mov
xchg
pop
loope
clc
adc
push
jmp
push
ds
in
mov
cmp
sub
loop
or
push
arpl
xchg
sub
cmp
in
cwtl
mov
and
call
xor
and
lret
cmp
cmp
jae
push
adc
cmp
cmc
aaa
lcall
jno
pusha
aas
pop
int3
lahf
mov
cmp
push
sar
test
mov
lods
mov
xlat
fldcw
cmp
mov
test
and
dec
push
jecxz
es
and
push
ret
mov
or
mov
cwtl
and
loop
adc
bound
inc
sbb
dec
inc
sub
in
lret
xchg
or
xchg
adc
popl
ficoms
mov
and
sbb
cs
popa
into
leave
inc
xor
ds
outsl
mov
ja
fistps
mov
push
push
fists
je
call
add
mov
inc
cli
imul
dec
hlt
mov
push
inc
pop
out
cmp
test
pusha
inc
pop
xchg
xor
or
xchg
jo
adc
sbb
xorl
adc
lret
aaa
adc
fwait
out
sbb
inc
lods
icebp
nop
sub
push
push
mov
ljmp
inc
loop
push
movsl
nop
inc
repnz
pop
pop
cmp
sub
test
outsl
call
lret
push
push
popa
stos
aas
and
jo
aad
rorb
cli
pop
adc
mov
and
in
xor
sarb
rcll
xchg
or
and
xor
cmp
out
stc
inc
stos
fstl
pop
fldenv
cmpsl
aas
in
mov
cmp
cmp
dec
adc
push
push
out
test
icebp
jns
jne
inc
sbb
xchg
push
jnp
pop
jae
mov
shll
sti
orb
push
xchg
inc
hlt
mov
add
mov
xchg
ljmp
and
mov
hlt
int3
orb
sbb
mov
call
sbb
fisubs
icebp
mov
add
test
and
xor
dec
inc
movsl
jp
imul
xchg
dec
mov
sub
and
sbb
shll
cmp
push
stos
test
bound
sbb
orb
push
inc
push
dec
bswap
loopne
push
imul
imul
xchg
push
gs
popa
cltd
negl
insb
jge
lods
jmp
push
in
stc
lods
int
scas
call
jl
popa
cmp
sahf
out
dec
cli
push
loope
insb
iret
dec
shr
fcoms
mov
push
dec
mov
xchg
leave
mov
pop
imul
and
rcrb
adc
or
or
pop
jl
fimuls
aaa
in
adc
sti
stos
leave
popf
mov
shll
shr
inc
pcmpgtb
sarb
fstps
arpl
test
mov
jmp
inc
stc
mov
aas
push
mov
out
leave
push
and
jo
sbb
mov
popf
pop
je
add
dec
pop
ljmp
out
or
jnp
mov
jne
pop
ret
cmpsb
push
sub
or
stos
aas
aad
and
icebp
sbb
mov
daa
pop
pop
scas
sarl
xchg
cld
mov
je
sbb
jo
add
push
push
sub
fs
dec
lcall
fnstcw
fidivrl
add
and
push
jmp
add
xchg
sbbl
inc
or
lret
adc
sub
inc
lahf
pop
and
in
push
sub
jnp
or
hlt
mov
sti
dec
pop
and
mov
dec
pop
sub
inc
xor
inc
ret
loope
adc
xor
mov
shrb
add
les
mov
repnz
xor
pop
dec
xchg
imul
pop
add
sub
enter
mov
shr
mov
out
dec
out
cld
mov
push
cld
sbb
pusha
xor
cmpsb
sbb
push
inc
arpl
xchg
je
mov
out
fiaddl
jo
inc
gs
push
or
subb
adc
fists
mov
cmp
repnz
or
cmp
xor
push
pop
ds
loope
lods
cmp
imul
add
mov
fsubl
lds
in
int3
je
out
mov
cld
and
push
push
test
jle
das
sbb
mov
xor
pop
fbstp
scas
mov
jle
add
mov
cltd
jp
mov
les
cld
aaa
sbb
sub
or
pop
xchg
insb
push
movsl
cmp
mov
stos
bnd
sbb
movsl
movsl
sbb
mov
mov
add
add
cmp
pop
pop
addr16
fidivs
ja
cmpsl
pop
repz
shlb
daa
out
jbe
inc
xlat
out
ds
jns
sub
cmp
push
hlt
cwtl
std
test
stos
pop
adc
out
xor
jnp
cltd
pop
dec
xchg
jmp
mov
xor
mov
aam
jle
mov
loopne
loop
push
movsl
xor
and
push
push
mov
lcall
pushf
mov
mov
scas
ficompl
jbe
scas
arpl
adc
dec
cmpsb
movsb
movsl
add
das
loope
mov
xor
lods
dec
fldcw
sbb
mov
nop
dec
ja
data16
pop
jecxz
insl
pop
dec
inc
pop
call
and
dec
popf
outsl
leave
mov
dec
popf
push
or
jmp
mov
and
stc
call
stos
push
jmp
fdivrs
cmpsl
adc
cltd
cmp
or
pop
imul
outsb
lods
mov
sti
xchg
js
pushf
sbb
sbb
ss
push
mov
push
cmp
ljmp
pop
mov
cmp
arpl
sbb
sbb
loopne
mov
push
gs
frstor
cmc
sub
add
outsl
out
or
mov
xchg
cmpsl
mov
into
shl
pushl
fwait
push
cld
cmp
jmp
lea
aad
xchg
cltd
mov
andb
and
sbb
pop
subb
push
std
xchg
mov
fistl
cmp
or
in
fs
filds
pop
jbe
mov
nop
dec
inc
mov
mov
adc
adc
dec
jge
xor
fwait
xor
fdivrl
movsl
pop
mov
das
out
dec
add
or
jmp
jae
loope
cmpsb
stos
fidivs
loopne
shrb
std
pop
mov
in
jae
loop
xchg
xchg
lcall
mov
xor
aam
sub
dec
or
lock
jl
pusha
jnp
aam
mov
leave
inc
stos
cmp
cmc
mov
popl
jmp
sahf
jp
ret
pop
pop
jg
adc
popf
lods
mov
test
dec
int
aaa
sbb
outsb
call
cmp
cld
xor
pop
add
mov
data16
sbb
xchg
pop
cwtl
dec
js
negb
jne
cltd
das
push
jp
pop
jo
mov
mov
dec
lret
aas
out
xchg
pop
out
mov
or
sub
outsl
mov
mov
lds
leave
scas
in
mov
add
ja
in
mov
out
insl
cmp
std
xor
add
arpl
xor
mov
test
insl
je
mov
enter
jp
dec
in
outsl
push
rcrb
push
jae
xchg
cmpsb
popa
repz
mov
subl
mov
call
push
ss
cmpsb
mov
lret
pop
stos
xchg
aas
push
jmp
or
mov
sbb
mov
jbe
mov
mov
in
loop
sbb
stc
cmpsb
mov
shlb
cmpsl
fildll
pop
xchg
or
icebp
scas
in
pushf
xor
in
idivb
in
or
fs
sub
test
lret
cmp
adc
mov
mov
rcl
cltd
shlb
sub
movsb
fdivs
pop
pushf
cmp
sbb
mov
xchg
aaa
inc
out
ss
out
gs
jbe
xor
xchg
sub
jecxz
dec
lock
je
fs
and
mov
pop
sub
add
add
sbbl
in
xchg
loopne
or
test
repz
adc
pop
mov
mov
rcrw
insl
ja
out
cmp
push
cli
push
leave
cmp
sarb
dec
out
pop
loop
test
cmpb
cs
fimull
popa
sbb
andb
bound
dec
push
cmp
pop
push
add
dec
lods
mov
aam
mov
inc
lret
or
inc
pushf
mov
loop
push
push
in
test
hlt
out
stos
and
enter
sarl
pop
negb
sub
push
and
lods
push
aas
arpl
loope
sarl
lds
mov
fsubl
mov
xor
enter
inc
dec
mov
imulb
xor
lret
lret
or
push
sbb
xchg
shll
mov
jecxz
xchg
fistpll
outsb
or
push
sar
mov
push
stos
nop
jne
sub
push
loopne
std
cltd
mov
movsb
jnp
rclb
negb
rcrl
mov
outsl
jmp
and
aad
push
push
xchg
mulb
sub
inc
add
test
data16
adc
cmp
jae
popa
in
dec
push
xor
loopne
xchg
sub
sub
clc
mov
in
adc
mov
loope
mov
fidivs
addl
andl
pop
fisttpll
and
aas
sti
iret
shlb
sbb
push
stc
cltd
cmp
pop
dec
fs
jnp
add
sbb
inc
dec
lods
cmc
clc
push
insb
push
jmp
adc
icebp
jb
arpl
sbb
mov
dec
push
add
ss
insb
adc
clc
adc
adc
lea
push
fsubl
add
adc
cs
adc
cmpsb
xchg
in
test
xor
sbb
pop
xchg
loopne
mov
clc
adc
adc
pop
lret
jns
daa
adc
lret
aad
aaa
lret
addr16
cmp
inc
sahf
test
pop
adcb
rcr
xor
mov
xor
out
out
xchg
lret
sarb
sub
xor
insb
cs
pop
fbstp
icebp
sub
movsl
sbb
hlt
xchg
jo
fistpl
push
jae
inc
gs
nopl
fsub
mov
mov
cs
lea
push
and
pushf
adc
fidivl
xor
in
or
sub
pushf
xor
addb
imul
push
mov
movsl
or
xchg
adc
inc
push
lahf
dec
repnz
sbb
jmp
lods
fnstenv
pusha
repnz
testb
cmp
es
jmp
jo
push
adc
cmp
stos
pop
add
or
sub
mov
push
popf
cs
inc
push
push
lcall
pop
dec
ja
pushf
stos
sbb
pop
mov
popa
fsubl
fisubs
push
push
out
inc
fcom
jo
sub
outsl
repnz
fs
clc
inc
ss
in
xchg
xchg
push
cmp
push
mov
pop
cld
jb
inc
cltd
and
pop
push
cli
fsubl
sub
adc
push
out
imul
out
dec
mov
dec
sbb
stc
test
in
sarb
insb
sub
adc
xchg
mov
sub
mov
stc
inc
or
or
mov
ja
pop
dec
add
dec
or
hlt
ret
outsb
sub
adc
pushf
sbb
sub
paddq
xchg
js
pop
mov
dec
mov
ret
call
mov
popa
shrb
scas
jbe
je
ret
pop
jno
jmp
jl
xchg
xchg
aam
mov
mov
or
xchg
sub
dec
sbbl
rcrl
int
popa
insb
dec
pop
sahf
cmpl
repnz
lret
xchg
xchg
cmp
ja
adc
dec
cwtl
insl
ret
outsb
lds
push
in
mov
dec
push
cmc
stos
lea
and
je
pop
adc
jge
pop
hlt
fs
pop
test
adc
cmc
mov
ja
aas
xchg
inc
cld
leave
cli
pushf
xchg
cli
test
insb
aaa
and
stc
pop
call
sbb
inc
dec
aas
lock
mov
int3
arpl
sub
add
jmp
movsl
mov
sub
fidivs
jns
ret
push
mov
xchg
pushl
sub
aaa
add
sbb
out
pop
pushf
arpl
xlat
and
mov
pop
jg
les
or
aas
aam
mov
pop
sub
fnsetpm(287
out
pop
popf
jecxz
mov
addl
lcall
and
sub
mov
dec
hlt
cwtl
xor
mov
xchg
pop
mov
add
mov
inc
mov
clc
or
pop
test
pop
loopne
lods
ja
lcall
and
out
inc
mov
sbb
push
push
or
test
out
loop
mov
scas
or
movsl
dec
aad
call
sbb
ss
stc
mov
mov
mov
and
lcall
repz
add
into
xor
cmp
lea
lock
push
fwait
add
daa
inc
mov
testl
out
adc
add
jmp
roll
mov
sbbb
repz
push
sub
xchg
pop
das
popf
test
mov
shl
pop
aad
test
imul
aas
add
mov
fadd
pop
in
imul
aad
xor
hlt
jno
jmp
jno
and
mov
rolb
sahf
ret
lods
lret
cmpsb
sahf
test
lahf
gs
push
dec
mov
mov
je
xor
nop
mov
pop
push
cs
jge
push
sub
jge
cmpb
call
sub
sub
rcll
mov
jle
out
out
daa
and
mov
cli
inc
out
xor
rorl
add
rcll
mov
bound
outsb
leave
pusha
pusha
test
jo
lock
pusha
xor
jl
xor
mov
int3
mov
push
mov
mov
fadds
pop
mov
fidivs
mull
aad
aam
and
aas
fucomip
fistl
popf
or
mov
popa
mov
mov
inc
js
push
jnp
inc
jns
pushf
scas
into
dec
fldenv
cld
test
outsl
cmpsl
pop
jge
pop
ljmp
xor
sti
mov
cld
xchg
test
pop
add
insb
aas
sbb
test
dec
inc
ds
pushf
out
repnz
adc
lock
push
mov
pop
orl
jo
dec
in
mov
pop
out
cmp
mov
mov
je
inc
pushf
aaa
jno
inc
std
cmp
lret
mov
sti
fwait
sbb
adc
inc
not
fs
lcall
scas
test
call
cltd
fidivs
loope
lcall
inc
cmpsl
cmp
lock
rol
sbbl
hlt
fstpt
push
and
andl
and
inc
in
pop
cmp
pop
xchg
mov
or
enter
add
jbe
add
xchg
pop
xchg
sbb
mov
push
sbb
lret
es
cmc
out
xchg
repz
pshufw
xchg
int3
adc
out
dec
or
xor
arpl
leave
xor
addr16
outsl
test
inc
xchg
pop
jo
insl
iret
push
xor
inc
and
fiaddl
push
add
xor
lret
mov
add
cmp
test
repz
andb
mov
xor
andl
jne
pop
inc
inc
sub
push
les
mov
aas
jmp
fisubs
or
push
sub
stos
fs
xlat
dec
add
out
mov
pop
add
xor
stos
in
int3
leave
push
aam
push
inc
call
out
xchg
pop
xchg
push
fcomi
xchg
and
adc
xchg
iret
mov
or
mov
fstpt
mov
pop
sub
jbe
pop
push
inc
addr16
inc
add
repz
rclb
mov
lock
add
xor
int3
sub
jle
mov
cs
fisttpll
add
sbb
add
in
mov
add
add
jl
cld
xchg
addb
mov
lahf
jl
aaa
imul
ljmp
fistl
ds
mov
cltd
jnp
leave
stos
xor
pop
popa
mov
xchg
jecxz
mov
mov
or
clc
push
jns
insl
add
and
jmp
mov
iret
aam
bound
out
imul
cmpsl
aas
idivb
adc
in
sbb
fimull
xchg
sub
push
lock
leave
sbb
xchg
in
cmp
cmp
mov
jne
cwtl
mov
inc
out
rclb
movsb
faddl
adc
fbstp
bound
dec
sbb
aaa
inc
bound
sti
popf
int3
and
test
ds
mov
mov
mov
out
dec
adc
inc
sbb
lahf
ss
jge
pop
cmp
pop
addr16
xor
sub
jl
xsha1
cmpsb
mov
jnp
sub
push
add
repz
fidivl
fimuls
sbb
dec
orl
fidivl
int3
punpcklbw
bound
add
mov
adc
sub
lahf
ss
xor
aad
add
or
fstl
mov
fnsave
dec
dec
fdivrs
mov
testl
in
out
and
fs
or
cmp
sub
or
adc
push
xchg
andb
dec
and
cmp
cwtl
and
and
dec
jns
push
and
or
and
int3
cli
movsb
stos
mov
inc
adc
clc
movsl
iret
adc
jne
jg
jp
mov
push
sarb
outsb
loope
inc
fiaddl
xchg
je
stos
gs
mov
movl
xchg
and
jmp
cmpb
enter
cltd
stos
add
sub
imul
ss
sub
addl
dec
enter
pop
inc
pop
push
ljmp
call
imul
ficomps
enter
movsl
lds
jno
arpl
adc
nop
in
add
lcall
gs
sub
xrelease
adc
int3
cmp
or
xchg
xor
pop
in
dec
push
inc
pop
or
out
dec
popf
and
and
rcl
inc
movsb
repnz
addb
and
xorb
push
push
mov
xorl
xchg
insl
cld
pop
and
fisttps
sbb
xchg
arpl
mov
mov
daa
jp
subl
mov
faddl
insl
or
jbe
fmull
es
mov
inc
push
pop
test
lods
xchg
out
pusha
mov
jbe
repnz
enter
rol
mov
push
leave
lcall
and
sub
and
and
xchg
imul
add
insb
bnd
stos
loopne
ficoms
gs
xchg
and
mov
push
je
in
int3
cmpsb
or
mov
mov
mov
mov
mov
cmp
jae
repnz
xchg
jo
dec
shrl
into
pop
xchg
call
dec
test
fs
in
add
testb
data16
push
pop
lahf
push
xchg
js
sub
sub
pushf
cmp
add
jecxz
jge
mov
sbb
int3
je
andl
arpl
shll
or
stc
in
loopne
les
incb
test
mov
mov
jnp
stc
jnp
rclb
jmp
xchg
xchg
adcb
fisttps
pop
mov
mov
andb
mov
jmp
ret
inc
iret
dec
pop
iret
mov
scas
or
out
call
dec
dec
mov
adc
loope
popf
xor
fmull
adc
mov
sti
data16
and
xbegin
xor
sbb
push
pop
and
xchg
rclb
pop
orl
stos
push
out
lds
imul
cmp
insb
enter
mov
pop
out
lcall
stos
mov
add
sub
ds
and
outsl
jbe
es
scas
or
jge
divb
sub
xchg
sahf
add
out
popf
mov
movsl
seto
lods
pop
cmp
lahf
inc
enter
sbb
fs
in
int3
lcall
jle
push
mov
adc
xor
into
inc
jns
pop
outsb
dec
fnstsw
cld
fwait
cmpsl
jo
and
mov
push
jo
shlb
sub
mov
ljmp
jno
sub
jle
mov
call
cmp
clc
ficomps
es
inc
in
lods
scas
inc
mov
pop
leave
pop
adcl
push
push
mov
iret
icebp
and
inc
test
and
in
int3
pop
movsb
std
mov
fcomps
mov
ret
lock
gs
or
sarb
loope
int3
mov
mov
push
imul
outsl
int
jge
mov
mov
jae
sub
out
je
cmpsl
js
pop
rcrb
inc
gs
adc
jle
mov
lret
fwait
lcall
pop
pop
sub
aas
xor
test
fdivrl
or
push
pop
hlt
std
mov
test
pusha
es
in
or
loope
xor
arpl
push
shr
test
int
inc
jg
sub
mov
sub
push
imul
into
test
mov
jnp
and
jge
mov
xchg
push
mov
lods
dec
inc
fdivp
aam
and
lahf
sub
sub
test
or
or
mov
fstl
push
xchg
sub
xor
mov
dec
xlat
jl
nop
scas
push
xor
mov
jecxz
fldl
dec
das
mov
pop
shl
mov
sahf
dec
sbb
ds
arpl
cmp
mov
inc
imul
cltd
push
jp
adc
inc
pop
shlb
sahf
aad
out
mov
add
icebp
insb
inc
sbb
jmp
lods
mov
movsb
cmpsb
call
add
mov
lea
mov
sbb
das
repnz
fwait
or
mov
dec
shll
dec
pop
scas
pop
jbe
out
sub
inc
mov
mov
test
pushf
fchs
cmp
scas
push
jecxz
xchg
rclb
aad
int3
pop
inc
not
daa
xor
mov
add
cmpsl
add
in
mov
mov
mov
movb
daa
push
ret
leave
xchg
xor
mov
aaa
hlt
ss
pop
dec
shll
xchg
aaa
andl
daa
xchg
nop
inc
add
sub
pop
icebp
push
or
sub
loop
notl
fsubrs
repz
mov
daa
stc
stos
iret
xchg
mov
mov
lods
xchg
push
mov
lock
sbb
das
push
lods
or
mov
repnz
inc
std
dec
jmp
sub
cmpsb
std
sub
xchg
sbb
clc
leave
inc
rcll
outsb
sub
mov
add
dec
pop
push
mov
jg
sbb
xchg
shll
adc
out
popf
sti
jp
mov
stos
jo
pushf
mov
ss
mov
cwtl
mov
dec
outsb
mov
or
and
cmp
and
stos
adc
cmp
dec
data16
insb
in
insl
jmp
mov
or
sahf
jle
jmp
pop
mov
xchg
je
je
mov
int
lods
jae
pop
mov
jno
sub
mov
sub
iret
push
sub
lret
inc
cmp
cmpsb
cmpl
sub
jg
mov
jecxz
sub
enter
mov
cmpxchg
shll
xchg
dec
popa
add
cmpsl
and
enter
std
or
mov
fimuls
jnp
xorl
sub
xor
push
xchg
pop
xor
in
adc
call
lcall
pop
xor
fidivrs
jg
lods
dec
hlt
mov
push
add
pop
sub
jp
aam
push
into
test
cwtl
dec
insb
loop
xchg
and
fmull
sarb
push
inc
cltd
iret
jecxz
xor
jbe
xchg
and
fadd
dec
sti
inc
sub
ret
push
adc
shrl
xor
stos
mov
xchg
sub
aam
and
adc
imul
loop
sti
mov
fsubrs
in
adc
out
out
test
xor
or
cmpsb
test
stc
movsb
addr16
testl
push
mov
xchg
repz
mov
pop
jmp
movsl
xchg
sbb
in
into
dec
in
aad
jno
in
movsb
inc
ret
jle
push
jae
lret
jb
jmp
mov
jno
push
sub
loope
mov
mov
inc
push
dec
and
mov
fisubrs
cld
outsb
sub
sbb
jg
aam
bound
jo
and
sub
jecxz
int
inc
pop
pop
sbb
sbb
xchg
inc
pusha
sbb
imul
int
mov
sarb
in
xchg
push
shll
mov
mov
sub
jmp
xchg
je
pop
out
fisubs
mov
or
push
rcrl
mov
push
add
cmpsb
push
mov
push
inc
xchg
add
rorl
xor
dec
pushf
mov
inc
mov
jp
mov
bound
push
sub
sub
js
sbb
adc
in
jbe
mov
lahf
jbe
in
mov
cld
icebp
inc
push
or
int3
add
mov
shll
fadds
mov
aas
sbb
cli
pop
and
mov
shl
push
dec
jne
or
inc
mov
adc
and
iret
xor
or
sub
je
mov
bound
jnp
loop
jno
adc
add
mov
out
dec
loope
add
jns
push
addl
inc
sahf
sbb
add
jmp
or
shlw
pop
push
scas
fwait
or
xor
dec
pushf
test
lds
mov
ror
and
sbb
cld
sub
jmp
les
add
mov
ret
and
roll
pop
adcb
or
sub
stc
dec
or
mov
mov
sbb
in
insl
jnp
pop
in
lcall
inc
loopne
int3
xchg
adc
xchg
push
fnstcw
inc
jmp
cmc
je
pop
or
pushf
mov
push
jae
mov
mov
out
out
movsb
aad
loope
hlt
dec
stc
add
movsl
ja
mov
ret
dec
outsb
push
lods
jnp
ret
sarl
lds
fidivl
rol
pop
imul
int3
cmc
fwait
js
bound
pop
pop
xchg
mov
imul
lock
ret
orb
adcl
outsb
or
icebp
mov
scas
or
notl
imul
pop
les
xor
repz
push
into
orl
sub
out
push
mov
mov
push
shl
mov
jns
cld
addr16
in
das
cld
dec
mov
mov
cmp
add
daa
aaa
stos
pop
adc
fdivrl
roll
mov
cmp
xchg
lcall
fwait
aad
jg
fsubs
popf
les
jg
rcrl
sbb
das
push
or
in
cmp
daa
cmp
inc
inc
fnsave
rcr
mov
fbld
adc
imul
icebp
mov
aaa
int
adc
sub
repz
arpl
dec
jmp
repnz
sbb
ljmp
xlat
inc
out
inc
lds
cld
movsl
icebp
xchg
sub
lahf
push
movsl
rorb
jmp
insb
je
inc
mov
or
sbb
scas
les
push
sbb
add
cwtl
cmpsl
dec
cwtl
pop
test
pop
lret
push
xor
push
lret
pop
or
xor
ss
and
addl
jne
xor
xchg
push
cmpsb
jle
gs
sbb
lds
mov
aad
mov
ja
adc
loopne
inc
adc
push
pop
test
or
jo
fbstp
xchg
or
push
in
scas
xchg
sub
sub
int3
fs
cmp
ljmp
jno
lahf
stc
mov
mov
les
lret
loopne
pop
rolb
jecxz
jecxz
cmp
and
filds
rcll
out
pop
scas
call
jl
aas
mov
add
sahf
sbb
imulb
xlat
jbe
andl
mov
test
jge
mov
sub
in
mov
xchg
movb
popf
jne
repz
mov
add
and
jno
jmp
dec
add
push
out
call
leave
sbb
jne
out
or
jb
dec
mov
jecxz
dec
adc
daa
sub
enter
loop
add
push
cwtl
mov
xchg
in
mov
cmp
add
jae
addr16
fsub
jl
js
shrl
js
adc
out
sbb
aam
push
mov
pop
dec
mov
or
dec
xchg
mov
loope
xchg
or
mov
push
es
push
sbb
lods
jecxz
repnz
sub
popf
jg
dec
out
sbb
rcrl
push
mov
add
inc
shl
ja
adc
push
lahf
aaa
mov
addr16
mov
fldl
push
je
jl
cs
sbb
jmp
rcll
mov
lods
fcmovu
jne
jge
jno
jl
sarb
das
xchg
or
dec
dec
push
mov
loop
cmp
fldpi
aad
adc
push
dec
popf
inc
popa
dec
dec
lea
mov
pop
cld
sub
mov
fistpl
mov
mov
pop
xchg
dec
lcall
imul
push
icebp
insb
pop
push
push
fwait
xchg
push
or
lea
mov
push
call
or
cli
clc
mov
sti
call
fadds
test
xlat
pop
outsb
adc
mov
subb
push
sbb
outsb
mov
insb
adc
lahf
outsl
loop
es
lods
push
or
lods
pop
cmp
ficoml
scas
outsl
and
pusha
negl
outsb
or
add
aam
pop
mov
cmpsb
jp
shll
imul
mov
pop
icebp
inc
dec
cmp
push
inc
push
pusha
test
int
bound
sbb
lret
jnp
orb
pop
add
jp
mov
xchg
cmp
sbb
adc
adcl
negb
or
mov
andl
das
addr16
stos
jae
mov
call
cmp
pop
outsb
jl
aas
aas
out
mov
adc
xchg
in
mov
int3
insl
aaa
or
into
stc
jl
test
repz
xor
inc
imulb
repnz
inc
mov
mov
fcmovbe
incb
imul
les
jmp
pushf
mov
cmp
mov
and
xor
mov
popf
jg
into
mov
fwait
sti
pop
outsb
adc
outsb
add
fwait
lds
add
push
cmp
aas
addr16
push
stos
or
inc
daa
lds
inc
sub
jmp
fs
or
in
xchg
sub
add
jo
test
in
mov
xchg
je
rcrl
mov
imul
in
sahf
sub
push
aad
xchg
mov
adc
sub
pop
pop
push
mov
push
ret
pusha
popa
push
jb,pn
js
and
dec
sbb
ficomps
xchg
jg
out
jb
adc
mov
mov
sbb
lods
mov
sarl
xor
repnz
jno
and
mov
clc
inc
sub
sbb
ss
lret
lock
cmp
negb
sbb
xor
sarb
sarb
iret
push
test
sahf
jae
insl
movsl
ror
hlt
add
mov
imul
out
adc
cmp
pushf
xor
push
inc
popa
cmp
mov
jg
mov
testb
js
stc
stos
mov
cmp
rcll
daa
lcall
mov
int3
push
mov
in
xor
adc
movsb
push
inc
xor
jmp
sbb
int3
and
icebp
stos
push
les
stc
mov
fdivl
cwtl
cmpps
cmpsl
and
jg
push
cld
xchg
xchg
daa
dec
dec
subb
mov
clc
addr16
shr
ret
lcall
std
xchg
xor
dec
push
and
or
pause
sub
ror
lahf
jb
lcall
popa
jnp
repnz
pop
adc
nop
inc
and
pop
add
idivb
dec
and
add
call
jnp
sub
sub
cmc
mov
ficoms
ds
sbb
mov
jg
pop
xlat
sti
add
mov
in
hlt
or
das
xor
pop
lea
sub
lcall
dec
mov
addb
mov
or
lods
sbb
mov
inc
lods
mov
jo
mov
sub
es
fsubrs
jle
mov
out
fwait
xchg
mov
xor
sarb
add
and
push
add
mov
push
movsl
cmpsl
xchg
repz
mov
outsl
fsubrp
push
add
or
test
jmp
lods
xchg
xchg
loope
sarb
mov
pop
sbb
cli
sahf
dec
mov
call
sbb
or
jns
pop
xlat
clc
mov
push
out
pop
andb
mov
xor
scas
mov
cmp
pusha
stos
push
fldcw
fwait
push
aad
cltd
xchg
push
test
sbb
inc
rorl
or
cs
rolb
out
push
repz
mov
inc
popa
clc
jno
fidivrl
mov
int3
sarl
test
pop
in
xlat
out
arpl
stc
or
push
daa
std
pop
sbb
mov
jge
insb
hlt
push
pop
xor
repnz
pop
icebp
movsl
call
stc
aaa
jp
repnz
mov
inc
lea
inc
xor
push
mov
push
xor
insb
aas
push
jnp
cmp
push
lret
sti
pop
es
sbb
or
imul
push
mov
in
test
sub
stos
mov
int
rclb
xchg
jmp
and
enter
imul
int3
loop
push
push
and
cmp
test
or
movsb
lret
cmp
dec
pop
push
std
stos
andl
or
cmp
jecxz
mov
push
sahf
adc
sbb
shrl
sub
adc
adc
jo
jne
add
imull
jne
inc
insb
cld
inc
rcrb
mov
imul
pop
rorl
lods
push
sbb
negb
sub
int
shr
push
out
add
dec
xchg
dec
clc
or
dec
loopne
add
out
sbb
cmpsb
jae
and
fisubs
xchg
fmull
or
ret
into
mov
and
push
mov
insl
push
fisubrl
repnz
ret
sbb
xlat
sbb
in
lcall
push
insl
mov
stc
cltd
lds
fdivrp
xchg
push
je
movsl
mov
mov
dec
adc
or
inc
pop
jmp
mov
pop
ret
jae
or
fidivrs
stos
inc
sbb
cmp
ret
mov
sub
dec
and
push
popa
inc
cmc
jbe
iret
scas
incb
aaa
jge
mov
cmpl
mov
sbb
test
jno
inc
into
lahf
push
dec
add
adc
adc
aas
cs
aad
add
inc
mov
rol
cmpsb
js
xor
inc
lcall
cmp
push
adc
sbb
fsts
xchg
dec
jmp
xchg
dec
jae
cmp
lods
pusha
dec
mov
stc
adc
rcrl
mov
jnp
aam
rorl
jg
into
xor
mov
inc
insl
cmp
imul
out
ja
cmpsl
out
sbb
or
mov
movsl
mov
dec
sub
jge
fisubrs
popf
stc
nop
or
cld
je
movsb
dec
mov
rcr
jo
stos
cmp
aam
orb
incl
mov
dec
pop
shll
push
cmp
pop
or
arpl
push
sbb
mov
mov
loopne
inc
pushf
fcoms
pcmpeqw
adc
popf
sarl
xchg
js
repz
test
lods
aaa
xchg
lock
jne
out
popa
adc
stos
call
xchg
shll
imul
mov
sbb
cmpsl
cmp
sbbl
shl
mov
sbb
xor
ljmp
jno
jnp
mov
fwait
pop
ror
call
sti
push
ret
outsl
test
js
sbb
in
or
imul
out
mov
les
jns
mov
add
push
lea
mov
inc
mov
mov
lods
insl
je
repz
mov
pop
adc
test
pop
repnz
fsubs
shll
sbb
add
bound
sub
mov
out
jmp
in
shl
clc
sarl
and
aad
addl
jle
loop
and
or
mov
mov
testb
jecxz
pop
ret
rolb
jecxz
cltd
add
cmpsl
cltd
sbb
dec
dec
ror
in
jge
aaa
lcall
pop
push
aam
ja
mov
inc
js
fsubrl
cmpsl
mov
rcll
test
sub
addr16
cmp
cmp
pop
adc
shlb
push
mov
or
xchg
mov
ret
repz
enter
or
stc
cmp
int
ljmp
push
ret
and
and
add
in
adc
push
xor
test
mov
pop
scas
call
dec
push
xor
and
adc
mov
movl
mov
sub
sub
sub
adc
sbb
out
cmp
and
xchg
repz
fcoml
mov
xchg
pop
pop
aad
or
std
push
mov
cmp
inc
fldt
pop
fiaddl
adc
xchg
push
iret
fnstenv
push
xchg
pop
push
xor
int3
pop
bound
jg
jg
push
pushf
xchg
dec
dec
sbb
jg
sub
mov
push
jb
pop
add
xor
lret
pop
frstor
inc
test
loopne
fdivrs
stos
add
inc
sbb
push
sarl
leave
movsl
sub
adc
in
add
adc
lret
jae
mov
dec
loopne
test
push
mov
outsb
xor
jmp
xlat
sbb
test
repz
imul
lret
data16
push
out
push
sti
and
adc
cld
or
ret
jmp
inc
jnp
stc
mov
pop
mov
dec
movsb
push
out
jno
and
loope
aas
cld
pusha
ret
mov
scas
outsb
sub
pop
cltd
jmp
aad
mov
cld
adc
pop
push
push
divl
aaa
sub
push
pushf
inc
mov
test
leave
push
insb
adc
xor
insl
in
mov
sti
push
lret
pop
sub
lea
rcll
xor
sbb
or
or
test
mov
xor
andb
xchg
push
sbb
pushf
pop
fucomip
adc
loope
push
outsb
fcmovnb
push
ja
jo
mov
mov
push
out
add
cmp
add
mov
jno
mov
hlt
mov
dec
adc
adcb
add
fstps
mov
out
mov
lds
mov
repnz
xchg
in
push
stc
dec
add
rorb
cmp
ret
sub
fisttpll
ret
sbb
in
xchg
pop
insl
mov
mov
sub
loop
sub
rcrb
push
lods
pop
jnp
ja
call
pop
inc
push
pop
nop
outsb
sbb
insl
mov
mov
shll
lock
mov
cmpsb
add
cmpsl
mov
add
mov
or
popa
out
jbe
sahf
outsl
push
xchg
mov
or
mov
jo
nop
test
xchg
addr16
ja
push
test
cwtl
stos
out
lods
insb
jl
repz
cmc
cli
mov
fstl
enter
outsl
xlat
jmp
mov
test
stc
pop
sub
jge
test
sbb
mov
mov
loopne
mov
adc
mov
dec
xchg
adc
inc
les
fdivp
mov
pusha
jp
loop
fsub
loop
arpl
xor
inc
mov
jne
data16
mov
pop
push
or
enter
lods
lods
fimuls
aas
jnp
sub
inc
les
es
lret
mov
fwait
ss
jge
mov
cmp
in
mov
fidivs
and
inc
lahf
lea
sbb
or
inc
pop
adc
xchg
add
and
mov
xor
pop
adc
push
push
lock
add
pop
add
add
adc
and
pop
test
mov
jecxz
push
inc
inc
pop
rcrb
movsl
out
jno
pop
in
std
jnp
mov
ret
sbb
into
sahf
aam
jne
out
mov
subb
xchg
out
enter
mov
lret
mov
sub
sbb
call
data16
adc
push
dec
lahf
rcrb
decb
ljmp
das
stos
jmp
clc
adc
sbb
call
out
shll
pop
hlt
sbb
sub
mov
fildll
adc
sbb
add
rclb
cs
fwait
sub
dec
mov
fsubrs
shlb
push
and
icebp
js
jmp
inc
push
stc
test
cmp
inc
outsl
in
outsb
fwait
rclb
aas
sbb
je
inc
push
repnz
aad
lahf
push
popf
iret
pop
xor
stos
mov
lret
and
jno
das
test
fcomi
fisubrl
and
push
fldt
pop
cmp
subl
ljmp
jnp
or
cli
push
hlt
fs
fistpl
add
loopne
or
add
mov
xchg
mov
std
inc
stos
lret
addr16
imul
jb
ljmp
imul
in
out
outsl
lret
js
js
jne
movsl
push
adc
or
jl
enter
in
loop
jecxz
inc
add
xor
xor
push
push
lret
leave
jae
lods
mov
data16
xor
fcmovbe
pop
repz
adc
pop
enter
sbb
jno
lret
loop
sbb
jmp
pop
lock
jb
daa
arpl
push
sub
ljmp
add
in
rolb
movsb
int
sbbl
or
shlb
fsubrl
mov
jg
fcoms
jge
adc
fwait
das
inc
pop
pushf
xchg
mov
mov
fsub
and
jg
mov
std
cli
xor
jae
fisttpl
dec
in
call
xchg
data16
cltd
stos
xor
pop
in
mov
xchg
push
loopne
dec
rcll
call
push
pushf
outsl
jnp
xchg
inc
fs
in
inc
mov
inc
addr16
arpl
lret
xlat
xchg
push
int3
xchg
jns
and
dec
sbb
or
sbb
sbb
jge
adc
pop
add
lods
hlt
ljmp
add
sbb
mov
pop
mov
gs
inc
jbe
loope
pop
insb
jle
pop
push
jecxz
cltd
loopne
adc
loopne,pt
pushf
mov
jle
push
sub
lcall
and
dec
lret
cltd
std
pop
mov
pcmpeqw
dec
cmp
clc
xlat
ret
sbb
loope
movsl
cld
test
adc
iret
enter
popf
sub
stos
mov
lret
push
fs
stos
pop
ret
mov
out
insb
les
and
ret
push
xchg
xchg
sub
push
pop
loop
mov
jl
mov
xor
add
xchg
pop
xor
or
or
mov
push
idivl
mov
pop
jge
and
imul
adc
fistl
fisttpl
xchg
mov
andl
mov
xchg
ja
mov
adc
dec
and
xor
cmp
pop
add
imul
xchg
dec
aaa
ret
test
push
arpl
jmp
xor
cwtl
shrb
insl
sub
in
xchg
mov
jo
fwait
xchg
inc
push
dec
pop
sub
pop
imul
nop
sarl
dec
inc
xor
out
xchg
popa
mov
roll
imul
jl
jg
pop
fcmovne
adc
scas
jo
and
es
stc
and
imul
pop
mov
lock
add
stc
adcb
mov
pop
mov
xorl
xor
outsl
mov
cs
or
add
cmc
pop
push
outsl
mov
in
cmpsl
mov
and
cmc
and
stos
aad
les
sub
lock
cmpsb
subb
insb
stos
or
or
insl
sub
cmpsl
adc
pusha
xor
loopew
jno
or
data16
scas
ja
aas
ss
mov
fisttps
aaa
leave
lods
sti
int
ja
inc
mov
scas
mov
es
sbb
or
in
flds
mov
push
incl
jmp
dec
mov
repz
cmp
push
cld
test
sbb
pushf
mov
lret
imul
fwait
mov
mov
cmc
mov
loop
dec
adc
hlt
cltd
sahf
add
push
outsb
xchg
int3
sbb
push
and
jp
inc
and
pop
aaa
add
xor
ds
mov
stos
mov
add
sbb
cmp
out
loope
popf
nop
pusha
gs
cmp
push
test
or
push
pop
mov
aam
test
jl
test
mov
sbb
or
cmpsb
sub
sub
mov
fsubrl
nop
scas
in
push
push
or
nop
sub
ja
gs
icebp
and
inc
mov
mov
dec
and
in
xchg
dec
or
jg
xlat
js
lea
call
aad
lret
div
xor
jecxz
sbb
xchg
adc
mov
or
pusha
pop
in
sbb
xor
and
pop
pop
call
ja
push
lret
es
and
and
add
pop
std
xor
pop
pop
in
les
scas
add
ss
cmp
mov
ret
push
cs
mov
jb
push
popf
cwtl
adc
daa
inc
xor
lcall
and
sbb
inc
stos
inc
xor
add
and
lret
or
mov
adcl
mov
lret
cmpsl
jg
fcompl
sub
dec
mov
mov
and
inc
inc
xchg
enter
aam
popf
cmp
mov
test
out
mov
ljmp
adc
add
jne
push
mov
in
mov
jae
scas
xchg
mov
outsb
xlat
mov
xchg
sbb
push
sbb
xchg
mov
lea
and
fcoml
dec
stc
fiaddl
cmp
outsl
sahf
inc
adc
es
mov
out
cmpsl
fwait
addr16
or
fldenv
into
addr16
pop
mov
lret
shrl
fwait
sbb
js
les
xor
dec
pop
clc
jge
mov
mov
bound
fstpl
lret
inc
jbe
das
cmp
in
inc
out
mov
roll
popf
lret
jbe
std
mov
out
lock
mov
cs
pop
lahf
inc
dec
inc
bound
mov
mov
adcb
sbb
sbb
iret
movsb
push
pop
inc
pop
push
ljmp
xor
or
in
or
push
or
pop
adc
jb
mov
mov
add
sub
and
lds
aad
mov
pop
shl
mov
mov
cmp
out
push
sub
xor
sub
push
lods
xchg
repnz
jno
or
inc
in
xor
icebp
sbb
jle
je
and
xor
mov
push
pop
push
push
pop
cli
push
je
xlat
mov
and
xchg
in
out
sub
loope
sub
shll
pop
sub
aas
movsb
popf
psrad
jae
fwait
inc
imul
and
jecxz
icebp
and
mov
cmpsl
icebp
add
xor
xchg
sub
jp
daa
xchg
jae
inc
jb
mov
inc
repz
loopne
ja
orb
mov
loope
inc
sub
mov
loope
push
test
les
daa
mov
decb
mov
mov
cmp
xor
xor
lret
push
out
js
ljmp
das
adc
pop
lods
out
popa
ja
cltd
enter
xor
or
cmp
or
scas
rcrl
ror
inc
jb
cmp
push
lcall
inc
and
add
push
clc
ja
xor
mov
pop
mov
orb
add
mov
jbe
sbb
scas
adc
adc
push
mov
ret
or
mov
or
xchg
incl
pop
and
xor
mov
push
sbbb
outsl
mov
or
fiaddl
jnp
popa
inc
stos
jo
inc
test
jl
jg
jp
in
sti
stos
fdivrl
lfs
movsl
pop
stos
inc
mov
pop
lahf
enter
and
out
push
stc
aas
ljmp
sub
and
sbb
push
inc
xchg
ja
int
in
jmp
imul
inc
cmpsb
dec
std
out
dec
and
out
add
dec
sub
pusha
out
mov
pop
dec
and
out
fnsave
rorl
shl
or
jb
shll
pusha
add
fwait
scas
adc
inc
insl
dec
shrb
pop
dec
adc
psraw
cltd
xor
pop
push
sub
dec
js
inc
sub
xchg
sub
or
adc
cld
adcb
mov
pop
and
cmp
sub
scas
and
lret
mov
or
adc
daa
xchg
adc
cli
inc
jle
dec
push
jne
in
sbbl
add
jae
lds
clc
pop
sahf
sub
fwait
test
jecxz
loope
push
dec
mov
inc
shll
imul
leave
mov
in
les
imulb
jge
fstps
mov
and
add
and
sub
insb
push
imul
sbb
nop
decl
push
jne
ret
js
or
test
cmp
test
hlt
pop
insb
mov
imul
stos
mov
in
or
sarb
fsubrl
mov
mov
add
sbb
es
mov
shl
ret
or
jbe
lahf
in
inc
insl
jge
shrl
pop
adc
lret
sarl
arpl
xchg
xlat
imul
outsl
xchg
mov
mov
les
stc
loop
mov
add
stc
inc
mov
bound
mov
popa
dec
inc
fcmovnb
stos
mov
shl
xor
pop
push
mov
repz
sar
push
pushf
push
add
sbb
add
addb
jne
mov
fsubrl
dec
push
mov
fdiv
fstpt
inc
cmp
mov
and
cmp
clc
or
lret
cmp
adc
pushf
addr16
movsl
or
sbb
jp
in
lret
nop
fcoml
arpl
push
push
dec
mov
jmp
or
into
orl
xor
adc
jns
mov
jle
pop
inc
mov
inc
xor
pop
xchg
out
xchg
jmp
jmp
sub
into
or
mov
sub
pop
cmp
pushf
popf
les
xchg
dec
test
orl
sub
dec
loope
jge
xor
pop
pop
or
out
adc
xchg
sub
mov
mov
jecxz
sti
mov
xor
ja
push
cld
scas
inc
out
iret
xchg
xchg
icebp
dec
dec
fnstcw
adc
data16
pop
into
add
jns
out
cmpsb
sbb
jle
hlt
imul
pop
xchg
mov
push
movsl
add
jp
push
int3
or
rcrb
mov
cmp
push
fwait
mov
imul
cmp
mov
loopne
fcmovnb
push
stc
je
pop
adc
jg
xlat
andl
add
orb
dec
stc
loop
dec
lret
mov
mov
pusha
aaa
add
mov
sbbl
sbb
add
xor
mov
jl
push
or
or
repnz
push
loope
mov
jecxz
and
xchg
pop
lods
xchg
mov
pop
loop
mov
sub
pop
or
mov
mov
pop
dec
in
mov
cs
adc
sbb
in
jp
aaa
dec
sbb
mov
imul
mov
mov
mov
loopne
mov
push
jno
les
leave
out
stc
andb
and
je
cld
and
or
inc
add
xor
ljmp
push
fldcw
add
push
addr16
xor
lahf
test
ficoms
cmpsl
or
das
cs
cmp
sub
or
dec
mov
cmp
push
fisubl
hlt
mov
jnp
and
push
inc
mov
sbb
jo
xor
pop
xchg
sub
and
cmp
push
jg
pop
push
bound
fstps
sub
sahf
clc
aad
jns
mov
jne
subl
sbb
icebp
sub
mov
mov
mov
dec
in
sti
cmp
push
sbb
xchg
sub
js,pn
es
adc
int
jmp
jmp
push
dec
aaa
or
jae
jl
push
pop
out
jae
xchg
scas
sbb
leave
mov
mov
adc
in
mov
dec
and
cltd
xchg
push
loope
cltd
xlat
xor
lods
mov
rol
aad
cmc
fscale
inc
mov
into
scas
xchg
or
mov
subl
mov
fwait
shll
fwait
shrb
mov
sbb
pop
push
fnstenv
cmpsl
dec
ror
jl
jnp
aam
ret
or
sti
test
jne
jge
xchg
pop
sbb
mov
imul
dec
sbb
xor
push
stos
inc
sbb
fs
test
ds
jae
fs
dec
pop
xor
push
cmc
push
jle
out
cmp
xor
ss
cmpsb
dec
or
mov
jle
xor
std
cld
mov
mov
push
test
rcll
imul
cmp
clc
pop
push
mov
aad
push
or
adc
mov
cmp
dec
pop
jo
mov
xchg
xchg
push
cmpsl
adc
push
add
repnz
mov
or
insb
divb
push
loop
imul
push
mov
cmpsb
addr16
add
inc
jnp
cli
rcll
push
xor
mov
aam
call
adc
rorb
popa
int
jge
xor
fwait
int
lret
test
push
sbb
sahf
xor
mov
lret
imul
push
jmp
test
sti
sahf
xchg
sub
cmpsb
cmp
sbb
mov
mov
mov
push
mov
xor
dec
enter
adc
mov
add
int3
sti
imul
dec
fwait
push
dec
movsl
cmp
xor
add
cmp
fs
mov
mov
add
push
ss
mov
imul
gs
out
push
lahf
mov
xchg
insb
sbb
jnp
jb
fmulp
xor
inc
xor
xchg
roll
out
lahf
ss
pop
cmpsb
les
repz
xchg
aad
outsb
push
mul
icebp
push
pushf
pop
fidivrs
jmp
pop
pop
xchg
mov
and
dec
dec
jp
lea
dec
test
adc
cmp
popa
adc
sbb
repz
sub
mov
mov
fsubrs
pop
mov
sub
lds
push
jno
cwtl
pop
mov
hlt
lea
cmp
xlat
mov
mov
cmpl
rorl
push
mov
jge
les
daa
in
mov
outsl
rep
insb
fistpll
pop
fidivrl
mov
lds
leave
sbb
aad
cltd
std
add
insl
in
adc
mov
je
dec
ret
outsl
je
pop
or
cld
rcrl
push
cmp
xchg
imul
inc
jno
push
push
leave
adc
outsl
inc
mov
cmpsl
lea
out
cmc
dec
into
add
mov
enter
out
adc
iret
adc
cs
add
fbld
shlb
push
les
lret
out
mov
cld
in
test
cmp
adc
inc
in
sub
mov
xor
stos
add
bound
adcb
xor
sti
call
aaa
cmp
jecxz
stos
adc
int
sub
inc
fistl
stos
push
jb
cli
add
ja
sbb
adc
fsubl
shrb
mov
push
xor
pop
and
xor
xchg
in
mov
sub
push
sbb
dec
inc
stos
fnstcw
pop
sub
orl
adc
jg
push
jmp
cmp
mov
inc
add
into
mov
sub
sti
pop
ret
sub
xlat
pop
std
mov
sbb
push
out
sbb
mov
enter
shl
cmc
adc
mov
pop
aas
test
inc
and
mov
lret
movaps
jmp
mov
adc
cmpsb
dec
mov
stc
rcl
sbb
aad
dec
adc
inc
push
jmp
xchg
decb
pop
icebp
xchg
mov
je
add
inc
sahf
gs
xchg
lret
inc
pushf
cmpsl
stc
in
pop
repz
push
jnp
lds
in
lods
hlt
cmpsl
mov
sbb
lds
jp
inc
fimull
shrl
sub
popa
orl
addl
and
lahf
push
mov
cmp
dec
movsb
dec
in
and
xchg
imul
fnstsw
mov
in
lods
inc
push
jg
ror
daa
lret
mov
inc
int3
test
call
test
mov
das
xchg
mov
addr16
dec
cltd
mov
and
cld
repz
mov
jp
pop
lods
and
int3
xor
sbb
mov
pop
nop
movsb
jno
mov
in
jge
jbe
ret
ss
std
xchg
jge
cmp
shrl
aad
cmp
jge
push
inc
data16
movsb
inc
fcom
pop
stc
je
jns
cmpsb
stos
in
sub
ja
xlat
adc
mov
mov
push
sahf
cmp
push
sbbl
push
ret
xor
adc
inc
push
xchg
fsub
adc
sbb
movsb
cmp
inc
pop
popf
test
mov
mov
and
mov
mov
clc
xchg
pop
ds
int3
jns
leave
pop
shrb
lret
xor
jecxz
orb
ja
mov
roll
fstpl
sub
fs
clc
push
fiadds
xchg
lret
sub
jne
jbe
jge
xchg
sub
ja
rcrl
mov
sbb
lock
inc
cld
pop
sbb
scas
enter
mov
jns
add
push
dec
xchg
aam
xorb
xchg
rcrl
xor
sub
xchg
adc
or
push
jmp
inc
mov
jne
push
or
lds
inc
inc
std
sti
jecxz
sub
pop
rcrl
mov
pop
add
mov
js
in
insb
cltd
lcall
xchg
in
nop
lahf
jnp
sub
rcll
subb
ret
pop
jns
push
in
mov
ffree
fldt
jns
imull
sbb
adc
hlt
inc
xchg
cmp
pop
add
mov
cmc
cmpsb
jecxz
je
movsb
xchg
mov
dec
jl
ss
sub
mov
icebp
sbb
imul
das
or
fldl
dec
into
add
rcrl
fisttpl
scas
imul
jp
jae
xlat
mov
mov
cmp
sub
pop
push
mov
in
test
pushf
xor
dec
mov
lods
pop
fidivrl
fwait
jbe
stc
mov
andb
add
mov
and
inc
add
loop
addr16
out
data16
pusha
pop
mov
adc
cvtps2pd
out
cmc
in
loop
cmp
mov
loope
test
add
jecxz
outsl
push
xor
scas
cmp
xor
pop
jbe
enter
in
sbb
gs
loope
repz
clc
jnp
ret
repz
test
sbb
or
jp
imul
lods
inc
mov
in
sub
adc
xor
and
pop
xor
and
sbb
fidivrl
push
add
and
dec
cltd
test
inc
shll
inc
mov
lea
inc
out
add
sub
xchg
mov
in
add
xchg
fs
adc
xchg
outsl
xchg
adc
pop
ret
mov
sbb
sub
fwait
hlt
jno
cmpsb
push
sub
in
mov
push
enter
jp
gs
imul
adc
xor
mov
add
sub
xchg
mov
mov
lds
cmp
test
sbb
cmp
addb
dec
mulb
ret
insb
lods
push
add
inc
xor
loope
cwtl
push
je
sbb
mov
mov
push
fwait
and
sti
push
fistl
rcl
lods
xchg
outsl
jge
jecxz
cmp
xchg
lds
cmp
out
sbb
mov
push
icebp
cmp
cmc
and
cli
adc
xor
sahf
pop
ljmp
aaa
ss
cli
inc
or
iret
xchg
es
fildl
mov
xchg
inc
jecxz
data16
ret
cmc
pushf
sub
ljmp
popf
rol
ljmp
lret
sbb
fdivrs
mov
inc
or
jne
xor
jns
sub
inc
imull
cwtl
xchg
dec
es
adc
loopne
lods
xor
repnz
sub
pop
cmovl
in
jae
mov
dec
sbb
insb
movsl
cmp
fcompl
push
mov
or
mov
adc
in
dec
inc
arpl
stos
mov
jne
mov
in
aaa
cwtl
cmp
ss
dec
comiss
dec
nop
cld
xchg
xchg
mov
out
and
out
test
mov
jmp
lds
ljmp
or
call
push
movsl
mov
xor
ret
cmp
shl
shlb
jo
daa
movsb
aad
mov
mov
adc
lock
jge
cmp
lcall
and
xor
das
es
mov
int
sub
rclb
js
pop
hlt
dec
out
lahf
adc
aad
mov
sub
int3
or
scas
xchg
pop
add
aad
pop
ret
jns
sbb
mov
dec
cltd
mov
loopne
mov
mov
adc
push
sbb
or
jmp
or
loopne
lods
fsts
adc
sbb
pop
jo
lahf
dec
in
cmp
pop
mov
dec
std
jo
sti
movsl
mov
sbb
xchg
push
and
or
xchg
into
gs
or
sbb
mov
arpl
jg
or
pop
cltd
fidivs
aas
mov
in
mov
mov
sti
push
dec
add
les
pop
notb
aas
inc
pop
sub
gs
xor
push
adc
pop
test
add
mov
and
xor
cmp
jmp
pop
not
vcvtdq2ps
add
lods
les
jecxz
pop
leave
push
in
movsb
mov
scas
sbb
leave
ds
mov
xor
or
enter
aas
inc
push
xlat
xor
rcr
into
mov
pop
jg
test
cwtl
jae
cmc
insl
ja
mov
ret
pop
inc
inc
sub
mov
and
int3
cli
push
or
mov
dec
leave
and
mov
sti
adc
xchg
adc
pop
mov
pop
loope
nop
mull
xchg
movsb
sbb
lcall
rcll
cmp
mov
stos
xlat
cmp
push
ret
inc
shrb
shl
dec
add
or
cmp
or
sub
cmc
lcall
cmc
fs
add
nop
push
lcall
sbb
adc
in
das
idivl
jmp
cmp
popf
imul
lahf
xchg
pop
lods
js
ret
out
pop
sbb
lods
jmp
call
jmp
and
imul
pop
imul
ret
dec
jmp
cmp
mov
test
lret
push
outsb
test
test
test
fistpl
add
ficoms
dec
jge
xchg
aad
pop
mov
sub
sar
adc
dec
dec
jmp
or
mov
sub
in
fs
xor
pushf
ret
adc
aaa
pop
out
pop
cmc
xchg
dec
adc
lret
and
pop
repz
inc
in
dec
xchg
jbe
sbb
lock
outsl
sahf
and
lea
lea
nop
cmc
mov
mov
nop
nop
adc
in
inc
mov
fsubrs
dec
in
outsb
inc
and
add
data16
pop
mov
lods
das
js
cmpl
pushf
mov
xchg
cmp
dec
repnz
xchg
insl
xlat
add
mov
rcrb
aad
call
cmp
aaa
popa
rorl
inc
add
into
fsubrl
movsl
shl
das
pop
repnz
das
mov
aad
adc
cmp
js
aaa
ja
mov
mov
jbe
add
xor
adc
adcl
pop
jg
jecxz
lcall
and
or
subl
jae
adc
inc
stc
mov
repnz
scas
inc
scas
push
xchg
add
sti
add
push
imul
mov
inc
add
push
xchg
cmp
cmp
pop
jp
xor
flds
in
fnstcw
das
ror
pusha
add
and
mov
out
lret
xchg
jne
int
or
push
inc
jo
cltd
imul
cld
jo
ljmp
hlt
mov
jnp
push
jo
pusha
lods
pop
pop
testb
jg
push
loop
mov
iret
push
ja
in
rcrb
rorb
insb
clc
add
sbb
sub
cmc
cmp
push
shlb
inc
scas
into
loope
in
cmpb
xchg
shlb
dec
dec
aad
and
rorl
or
fucomip
push
in
loop
lahf
js
sahf
jmp
icebp
lcall
push
push
cltd
faddl
movsb
jno
push
and
stc
lds
lcall
dec
pop
dec
jae
rcll
lret
shrl
adc
pop
out
out
cmpsl
inc
dec
mov
xchg
cmpsb
xor
or
xchg
pop
mov
or
and
lcall
notb
push
stos
mov
jg
sub
test
push
cmc
mov
daa
fsubr
mov
test
or
jae
pop
xchg
pop
inc
jge
testl
pop
jecxz
cli
cmp
addl
mov
push
jp
test
stc
cmpsb
aam
and
ss
pop
xchg
cltd
mov
lret
fstpl
jbe
das
fs
outsb
jle
js
push
cmp
decl
adc
test
cmc
lcall
jne
and
adc
jmp
mov
divb
cmp
xchg
ret
ret
cmpsb
in
mov
inc
fyl2xp1
cmp
lock
gs
push
xlat
pop
in
adc
sub
pop
outsb
in
hlt
jp
inc
es
jle
data16
insl
cmp
and
int3
ja
ljmp
pop
push
fidivl
outsb
sub
xchg
sbb
ds
adc
mov
inc
and
aas
nop
dec
dec
lret
push
sbb
inc
daa
sti
repnz
mov
mov
jecxz
and
jbe
insb
arpl
nop
sub
pop
rep
cmp
mov
sar
adc
js
leave
in
shr
xor
mov
loope
pop
dec
push
pop
push
sti
mov
mov
or
jg
out
inc
call
stc
lret
or
out
sahf
lods
and
mov
inc
pop
mov
jns
jmp
jnp
ror
and
bound
sub
or
adc
dec
cmp
fcomps
or
out
sbb
sub
int3
jg
shll
pop
add
inc
or
addr16
lret
xchg
insb
icebp
scas
jno
sahf
imul
pop
jb
add
jnp
fildll
pop
sahf
leave
cld
mov
cmpsb
popf
jecxz
xor
cmp
push
in
out
out
add
cmpl
jle
divb
xor
pop
inc
lods
sbb
inc
lods
bound
lods
mov
movsb
and
jnp
dec
pop
xor
loope
jge
in
pop
shll
sub
sarl
mov
pop
add
add
sub
pop
repnz
jg
cmp
push
mov
jb
xchg
aaa
aad
std
xchg
xchg
jg
pusha
jmp
xchg
sub
fisubl
jle
sbb
jmp
aaa
add
xor
jno
fmuls
pop
ljmp
xchg
enter
repnz
adc
push
ficomps
cld
push
inc
add
inc
sbb
imul
pop
mov
xchg
mov
mov
mov
fisttpll
pop
adc
scas
mov
sbbl
mov
or
push
mov
inc
out
cmpsb
sbb
ljmp
jno
shll
mov
xorl
ljmpw
xor
pop
mov
adc
lock
stos
cmc
xchg
fldt
dec
and
pop
inc
xchg
lock
xchg
int3
sbb
mov
in
jo
lea
test
pop
adc
arpl
lahf
add
jno
push
jle
aaa
jl
push
fdivrs
add
mov
test
loop
xchg
rcll
jns
divl
sbb
rcrl
jl
cmp
jge
pop
xchg
sub
fs
cmp
inc
xor
xchg
pop
jecxz
iret
push
mov
int3
mov
sbb
sbb
push
sub
pop
out
sbb
dec
lcall
inc
icebp
adc
stos
adc
rorb
fstl
iret
pushf
addb
inc
xlat
sub
xor
mov
pop
lock
mov
mov
arpl
push
sahf
xlat
call
loope
mov
in
test
xor
imul
cmp
in
xor
dec
icebp
mov
in
xchg
ja
das
sbb
sub
loope
test
mov
ds
sti
fs
jb
add
lods
aaa
in
imul
adc
push
xchg
pop
out
pop
jne
dec
daa
and
fisttpll
lods
add
mov
push
sub
mov
cmpsl
inc
insb
jl
adc
xor
cld
leave
clc
inc
sar
jae
fs
xor
out
inc
punpcklbw
xlat
data16
or
loope
sub
arpl
popl
repz
aas
xlat
lods
aas
loopew
sbb
cmp
mov
rorb
flds
adc
pop
mov
cmp
out
rcll
jmp
push
xor
push
leave
xchg
mov
inc
ffreep
cmpsb
je
in
sbb
icebp
lds
pop
jae
sub
mov
mov
sbb
jo
sbb
fsubrs
cmp
js
jmp
lahf
ss
movsb
es
rclb
jmp
jecxz
inc
decb
mov
and
cmpsb
push
mov
push
mov
jp
pop
movsl
jns
fistps
pop
xchg
jge
aad
and
lea
xchg
ficompl
mov
push
jl
mov
shll
mov
cmp
xchg
jg
mov
mov
xchg
mov
aaa
sbbl
cli
inc
and
fwait
fdiv
jg
fcomi
popl
ds
lods
push
inc
pop
adc
mov
jg
pop
in
and
cmp
xlat
or
daa
jb
loope
jmp
mov
popa
or
mov
xor
lods
dec
test
arpl
add
xor
mov
addl
scas
mov
not
xlat
pop
pop
jg
dec
dec
push
add
push
jo
stos
inc
pop
outsb
inc
test
repnz
ja
jl
loopne
fisubl
push
push
xchg
add
adc
jae
into
ja
sbb
fldt
lock
xor
mov
lock
iret
fsub
ret
icebp
inc
xlat
fwait
cmc
cmp
xor
push
imul
and
sti
pop
testb
sub
cli
adc
fwait
or
push
daa
outsl
adc
inc
sbb
inc
iret
out
sti
popa
fsts
or
cltd
das
push
in
imul
les
mov
push
lods
xchg
ja
xchg
pop
xor
in
test
into
cmp
inc
cli
sub
mov
sub
pop
scas
mov
rorl
addr16
jns
jne
xchg
adc
ja
lods
fisttpl
jne
ja
fwait
scas
ret
jnp
mov
pop
jmp
xor
mov
adc
xchg
add
sub
xor
pop
or
adc
push
pushl
shlb
mov
hlt
add
enter
loopne
jmp
out
fisttpl
xchg
dec
hlt
rep
test
dec
es
leave
sub
mov
fsubs
xchg
ljmp
pop
push
popl
ret
cs
sti
loope
fidivrl
popa
xor
sti
lcall
and
jae
add
outsb
shrl
pop
lock
ljmp
mov
add
clc
add
icebp
incb
mov
aad
std
lcall
fdivl
dec
loop
jno
mov
push
out
sbb
sbb
inc
dec
cmp
mov
add
lret
sbbb
in
repz
shlb
adc
cmp
or
sbb
dec
sub
push
loop
adc
lods
add
cmp
jl
test
mov
inc
clc
push
pop
insl
sarb
imul
xor
jbe
and
push
and
sbb
into
mov
or
ss
mov
push
xchg
sub
mov
in
mov
push
out
sub
sbb
mov
arpl
mov
mov
je
mov
xchg
lahf
push
push
mov
dec
es
jne
movsb
es
pop
lods
jmp
pop
cli
hlt
mov
adc
ret
in
into
push
xchg
xchg
dec
add
mov
mov
mov
dec
push
neg
jb
sti
jnp
mov
or
jb
push
andl
jno
aas
xchg
cmp
mov
and
in
and
xchg
pop
push
mov
jl
jg
aaa
cmp
mov
insl
cwtl
sub
add
mov
imul
hlt
rolb
ja
in
int
mov
dec
test
push
mov
fistps
lcall
bound
addr16
mov
adc
clc
jl
sub
das
cmp
or
fcoml
sub
pop
inc
imul
jnp
les
mov
bnd
and
data16
xor
inc
push
lea
xchg
mov
xchg
sub
scas
out
pop
sbb
jno
xchg
or
test
cmp
aaa
into
push
lods
call
cmp
movsl
mov
jne
cmp
xchg
lds
rcr
xor
insb
xchg
ljmp
pusha
and
adc
shll
ss
lret
cli
sahf
mov
in
cmpsl
jo
mov
inc
lods
jns
out
les
psubsb
sbb
nop
andb
add
cmp
test
add
push
push
leave
fsts
cltd
fwait
xchg
into
push
cltd
sub
aad
jae
ja
insb
scas
les
adc
pop
sub
push
fildll
sub
nop
jo
cmp
aas
pushl
popa
scas
fidivl
fwait
out
jns
fstps
inc
and
inc
push
jb
test
movsl
mov
mov
mov
add
sub
outsl
add
es
clc
cwtl
inc
inc
inc
push
push
and
mov
lea
in
add
inc
push
ficoml
and
pop
subb
cmp
push
jecxz
pop
pop
sub
xor
jge
js
xor
push
inc
mov
es
inc
jae
inc
movsl
popa
gs
pop
and
inc
xor
jns
lds
xbegin
jecxz
mov
pop
ja
mov
dec
mov
mov
adc
cmp
mov
shl
rolb
adc
test
inc
jns
aas
dec
jl
loopne
inc
movsb
data16
filds
mov
jge
and
push
mov
push
lds
or
lea
xchg
push
std
xor
add
jnp
lds
stos
jle
es
je
mov
in
dec
insl
push
call
xor
notb
aas
mov
rol
sub
aaa
pop
popa
repnz
sti
data16
ficoml
jo
fidivs
andb
int3
imul
enter
repnz
mov
xchg
sbb
add
lods
mov
fbld
fdivrl
outsl
mov
pop
loope
xchg
fwait
sub
add
mov
outsl
stos
pop
hlt
popa
cmpsl
push
loop
cmpb
pop
jno
jle
push
cmpsb
ds
jmp
jne
stc
mov
negb
mov
sti
cmc
mov
outsb
xor
in
xchg
call
mov
clc
push
push
flds
inc
in
aam
xor
lods
clc
mov
sub
add
xchg
lcall
push
outsb
addb
push
and
sub
je
sbb
leave
fucomi
xor
lret
xchg
popl
mov
movsl
xor
adc
inc
ret
push
xchg
jecxz
fsubr
in
xchg
and
les
jle
enter
ret
add
sub
repz
cmp
leave
pusha
insb
sbb
mov
pusha
xchg
add
cmpsl
std
mov
imul
das
jne
stc
cmpsb
pop
adc
aam
stc
test
xchg
addr16
mov
cwtl
jg
xlat
scas
out
sbb
mov
pop
xchg
cmp
aas
xlat
mov
in
and
cmp
insl
dec
pop
divb
jb
jg
cmpsb
dec
std
inc
bound
bound
sub
xor
es
xchg
cltd
inc
clc
iret
icebp
mov
inc
in
movsb
stos
outsb
sub
repnz
data16
add
jnp
imull
mov
jne
cmp
jns
sbb
xchg
lods
dec
jecxz
pop
cli
inc
inc
jmp
movsb
push
cmp
cmp
push
pop
test
jno
lea
or
mov
pop
xor
xchg
adc
rep
inc
les
xchg
pop
or
and
add
mov
xor
in
jmp
push
push
jmp
lods
mov
mov
push
or
sahf
jns
dec
ds
orb
inc
inc
adc
adc
out
jb
popf
xchg
bnd
cltd
push
lcall
push
inc
ficomps
push
bound
jl
nop
cmp
jecxz
jge
iret
cmovbe
cmp
add
lods
xchg
sub
dec
data16
bound
sub
pop
dec
pop
sub
pop
popf
int3
mov
popf
push
dec
das
shrl
xchg
ds
lock
add
scas
xchg
jp
jg
imul
popa
xchg
stos
lea
push
cltd
jge
add
lock
movsb
arpl
popa
mov
out
xchg
aad
aam
dec
dec
sbb
jo
push
rcl
mov
push
testb
fmul
popf
imulb
cs
dec
mov
cmovo
movsb
cld
jg
aad
shll
movaps
mov
pushf
xchg
xchg
lahf
pop
push
lret
jae
add
adc
insl
cmpsb
add
imul
loop
mov
dec
cmp
cmpsl
add
and
add
cmp
arpl
inc
lods
push
call
sti
xor
pop
push
xor
pop
xchg
movsl
mov
rcrb
repnz
sbbb
or
jmp
mov
fisubl
mov
pop
clc
jae
cmp
sbb
mov
sub
lods
mov
imul
sbb
mov
mov
sti
pushf
mov
push
lahf
push
out
add
pushf
ds
pop
ja
insl
cs
xchg
dec
or
je
xchg
mov
out
or
andl
repz
jns
loopne
and
and
insb
scas
or
negl
push
mov
jle
xor
test
sbbl
out
pop
cmp
push
insl
imul
test
stc
cld
cwtl
inc
or
cltd
das
sub
push
stos
enter
add
push
mov
pop
outsl
loope
movsb
cltd
fdivp
dec
int3
ret
outsl
jnp
sub
pop
and
dec
loopne
sbb
adc
sub
pop
pop
testl
nop
cs
mov
stos
sti
inc
inc
sub
mov
jo
sub
imul
push
lock
or
add
rep
repnz
jb
lds
sub
sub
fwait
mov
xchg
mov
mov
mov
jae
pop
sub
cmp
xor
pop
ret
pusha
jle
addl
xor
test
pop
lret
pop
jge
imul
xchg
scas
sub
push
or
add
out
sbb
lea
adc
inc
xchg
lock
xor
pop
movsl
mov
jmp
mov
cmp
incb
sbbl
or
adc
mov
adc
push
jp
sti
int
sub
cli
or
sub
xor
add
fbstp
dec
mov
dec
adc
pusha
adc
or
xor
mov
jno
mov
sbb
fxch
xchg
or
jae
mov
arpl
lds
data16
stos
mov
out
test
ja
out
or
inc
mov
mov
clc
or
scas
imul
outsb
jno
mov
gs
mov
filds
lds
and
scas
lcall
xor
adc
leave
int
push
sbb
jge
test
nop
xchg
cltd
test
ja
test
and
test
scas
lret
and
mov
xchg
jnp
inc
iret
bnd
testb
fmuls
and
sbb
shlb
xor
sub
sbb
pop
cmpsb
cmc
jns
sub
cmp
shrl
jg
daa
push
aas
test
scas
shrb
add
mov
pop
popa
iret
push
sar
loopne
jp
movsl
lds
bound
jne
xchg
cmc
insl
stos
dec
loope
pop
movsb
pop
pusha
mov
jecxz
ror
out
ds
cmp
adcb
addl
sbb
les
and
push
push
icebp
mov
jbe
adc
imul
and
or
int
xchg
mov
push
adc
lea
icebp
test
sbb
jnp
mov
leave
movsl
cmp
pop
out
mov
pop
or
pop
dec
cmp
jl
lock
js
adc
jbe
cmpl
sbb
pop
and
scas
mov
fsubrs
jecxz
mov
push
outsl
jp
dec
cmp
adc
and
and
mov
dec
mov
inc
dec
sbbb
mov
hlt
jmp
fistl
xacquire
mov
test
fld
popa
sub
jle
push
mov
xchg
popf
or
into
dec
sub
pop
and
ss
scas
jbe
xchg
dec
test
add
ds
call
mov
pop
bound
pop
sbb
rorb
test
imul
jns
cmp
sbb
cs
push
into
notb
imul
pusha
jb
pop
dec
fisttps
bound
clc
adc
sub
dec
xor
ret
pop
mov
addr16
push
jae
test
inc
pop
adc
dec
in
lods
jo
ljmp
lock
aaa
outsb
adc
js
fisttpll
xchg
jnp
adc
or
bnd
std
cmpsl
pop
push
jle
mov
loope
mull
mov
hlt
aas
mov
jo
pop
loop
push
dec
loop
xchg
lcall
jne
fdivs
lea
adc
je
repz
push
ds
cmp
mov
and
mov
push
push
dec
rol
dec
imul
jno
ds
push
mov
mov
xor
push
das
cmp
adc
mov
xchg
inc
add
inc
ret
flds
add
lods
xor
push
imul
fwait
call
in
jbe
lret
nop
cltd
mov
testl
shll
or
in
xchg
ret
mov
sbb
jne
jmp
lods
and
mov
or
xchg
inc
xchg
dec
cmp
cmp
and
jo
dec
xchg
fmull
aam
daa
push
nop
movsl
xchg
es
jns
inc
cmp
icebp
jns
pop
movsl
mov
into
mov
push
push
cwtl
jno
icebp
jge
insl
lcall
fcom
movsb
or
mov
inc
adc
inc
push
out
stc
movsb
lret
sub
lds
loop
je
mov
xchg
hlt
cs
xchg
add
movsb
addr16
jecxz
addr16
hlt
mov
mov
jne
and
jae
xchg
in
mov
mov
iret
aaa
leave
in
xor
add
xor
cmp
push
sbb
inc
dec
or
and
sti
sub
int
or
pop
sbb
cmp
jecxz
lahf
and
cld
es
jnp
mov
push
mov
mov
or
mov
insb
insl
aad
jp
test
add
jp
shrl
test
mov
cmp
xchg
cmpsl
dec
ret
fnsave
out
cmp
ljmp
pop
xor
mulb
in
or
sar
push
sbb
pop
dec
or
push
cltd
jae
pusha
xchg
add
daa
mov
add
cmpsl
fidivrl
test
test
fnsave
stos
sbb
scas
popf
andb
les
popa
call
cmp
arpl
push
jbe
push
xchg
inc
aas
add
jae
or
fstpt
inc
xchg
test
inc
je
sub
inc
daa
dec
pusha
ss
cwtl
xor
adc
insb
jg
repnz
push
lods
nop
mov
add
imul
add
inc
mov
pop
xchg
add
adc
addl
dec
mov
pop
push
cmpsl
sub
aam
adc
int3
dec
mov
jge
roll
jnp
insl
add
shlb
pop
jmp
xchg
inc
movl
xor
cli
mov
ffreep
inc
mov
ja
ja
xchg
mov
fldcw
cmp
aam
push
or
cmc
or
jle
push
scas
xor
mov
and
cli
out
sub
mov
mov
push
inc
rolb
scas
lahf
dec
inc
mov
jmp
inc
adc
mov
jae
js
adc
cmp
dec
cmc
sbb
ret
jp
xchg
cmp
mov
sahf
lea
mov
ja
pop
mov
mov
ficompl
mov
mov
xchg
sbb
dec
mov
mov
push
in
and
clc
xchg
inc
dec
push
std
cmc
push
leave
int
add
mov
pop
sub
cmpb
lret
mov
loopne
push
push
cmp
pop
repnz
jle
shl
mov
lahf
xor
xor
test
shrb
jp
nop
inc
faddp
sarb
loop
add
dec
repnz
out
push
lret
add
adc
inc
pop
mov
test
js
dec
mov
adc
push
fcompl
fbstp
nop
stos
mov
adc
jnp
push
jb
das
movsl
push
push
insl
mov
or
jl
fdivp
pop
fcmove
cmp
inc
fildl
jle
mov
sbb
std
pop
cli
pop
xchg
fsubp
ror
adc
cmp
icebp
xchg
add
push
fnsave
daa
inc
das
mov
bound
adc
ja
adc
pop
fdivrs
or
sbb
test
mov
mov
adc
fcomi
mov
sbb
or
jno
mov
pop
or
scas
inc
stc
or
pop
mov
ret
or
xchg
push
sbb
popf
popf
xlat
push
sbb
fisubs
sbb
repnz
cmp
bound
nop
scas
fwait
mov
pop
sub
pop
xchg
out
adc
insl
test
aaa
jbe
lods
and
cs
loopne
jecxz
jns
inc
xor
xor
or
test
cwtl
es
mov
jae
jmp
aaa
mov
jmp
jae
out
pop
in
cmc
cmc
imul
loopne,pn
mov
lret
inc
jecxz
lds
mov
into
pushfw
das
insl
jle
cwtl
in
int
ret
js
inc
fstpl
xchg
push
push
dec
cmp
xchg
inc
jl
jge
cmp
fwait
lcall
inc
xchg
mov
fcoms
mov
jno
xor
mov
stc
and
out
ret
add
cmpsl
ds
call
dec
jae
inc
imul
inc
lock
inc
out
arpl
sbb
mov
push
sub
movsb
cmc
mov
cmp
aam
outsb
push
loop
dec
sub
notb
jmp
int
cmp
rcll
push
mov
jmp
lcall
bt
mov
push
sub
pop
pop
cmp
mov
sbb
pop
jg
sbb
pushf
daa
pop
inc
push
loop
lods
xor
lods
ss
in
jo
pop
or
mov
xchg
adc
scas
xchg
pop
cltd
mov
push
mov
les
xchg
std
out
fnclex
iret
ljmp
add
arpl
xlat
mov
ret
inc
stos
insl
test
push
mov
faddp
loope
mov
mov
mov
pop
sub
call
fsubs
xor
mov
mov
shrb
lret
xor
std
lret
cmp
cmpsl
js
nop
cmpsl
aad
out
test
adc
jg
pop
mov
sub
pop
repnz
pop
add
pop
sbb
shl
popf
das
cmp
xor
filds
push
lock
popa
notl
adc
inc
daa
std
mov
pop
cli
push
sti
pop
cmp
xchg
jae
testb
fdivr
xchg
jl
add
adc
mov
sbb
aad
pop
test
and
imul
prefetchnta
in
ljmp
rorl
jbe
adc
out
or
out
or
fsubrl
adc
or
push
cmp
xchg
dec
xchg
fmul
mov
mov
cmp
fnstcw
mov
icebp
fcomps
int3
pop
push
stos
fmul
icebp
jae
out
arpl
pop
xchg
shl
add
push
push
push
mov
je
cmp
ljmp
push
mov
lea
addr16
mov
addb
dec
test
jmp
gs
push
jb
mov
shll
testl
push
sbb
pusha
clc
mov
addb
loop
and
shl
xchg
out
repnz
push
lret
insb
jge
leave
pop
stos
jb
add
push
sbb
dec
add
sti
negl
ds
xor
fildll
or
dec
out
xor
push
or
jle
inc
jmp
movsb
cmp
xchg
push
orb
pop
inc
outsl
or
aas
mov
xchg
imul
inc
loope
dec
ret
or
sbb
out
fiaddl
sbb
add
xchg
inc
inc
mov
or
cmpsb
jo
jnp
jbe
inc
dec
sub
lods
popf
gs
cli
dec
push
inc
pop
cmp
mov
xor
rclb
stc
xor
xchg
testl
js
lahf
and
pop
sbbl
std
fdivl
in
cmp
push
outsl
sbb
outsl
lahf
or
mov
sbb
inc
jmp
lock
lret
cmp
or
or
pop
cli
adc
movsl
and
dec
pop
add
adc
inc
out
push
add
mov
je
dec
test
lds
in
rep
sub
ret
aad
dec
mov
push
push
sti
or
inc
jne
mov
sahf
xchg
add
insl
inc
mov
xchg
dec
jmp
cmpsb
xchg
xor
and
neg
repz
xchg
dec
ret
ret
out
leave
xchg
aaa
and
cmp
mov
sbb
push
adc
imul
xchg
dec
fs
jmp
sub
out
push
and
notl
dec
popf
mov
dec
lods
or
fucomip
xor
push
mov
mov
push
jmp
push
push
movsb
push
inc
push
ja
fnsave
test
movsb
pop
pop
icebp
xchg
stc
mov
dec
dec
push
dec
data16
inc
cltd
sub
popf
or
xor
add
adc
into
sbb
nop
ja
inc
loop
push
fildl
int
pop
rorb
lods
into
sahf
shrb
test
mov
xchg
sti
cmpsl
cmp
sub
pop
test
imul
leave
leave
ds
or
xchg
arpl
mov
cwtl
daa
mov
inc
outsl
clc
test
mov
js
in
div
jnp
fwait
cmc
adc
fmulp
push
dec
xor
dec
outsl
and
push
out
iret
fcoml
aam
xor
pmaddwd
pop
sub
cmpsb
sbb
aad
xor
cmp
sbb
cli
mov
xchg
pushf
pop
push
mov
and
cli
mov
pop
cli
andl
nop
lods
mov
lahf
cmp
ror
mov
mov
or
adc
push
push
not
or
push
and
fwait
push
pause
dec
and
jl
mov
rcr
ljmp
inc
cwtl
and
xor
arpl
loope
and
inc
xchg
sub
dec
sbb
inc
arpl
addr16
aaa
enter
iret
fldl
push
lcall
mov
jb
cmp
dec
xchg
les
mov
pop
out
add
xor
xor
sbb
jno
pop
outsl
mov
aam
dec
ja
cmp
mov
lds
iret
mov
pop
push
inc
sub
mov
mov
insl
xchg
call
jo
stos
jns
shl
lcall
popa
clc
push
test
lahf
aaa
jae
dec
xchg
fs
mov
pop
push
sbb
xor
xchg
xchg
les
push
mov
mov
testl
fnop
lea
cmp
bound
in
pusha
push
fnstenv
test
and
loop
mov
ds
daa
pop
shlb
sbb
outsb
inc
imul
cmp
lahf
pop
and
mov
das
lds
or
sbb
daa
cmp
mov
cmc
jle
jbe
xchg
mov
or
pop
cmpsb
ss
adc
push
aam
movsb
out
fwait
pop
in
pop
call
mov
insl
cld
mov
jae
inc
out
or
loopne
popf
pushf
jns
add
adc
imul
jbe
stos
jmp
scas
jo
rcl
out
pop
in
sbb
jl
test
cltd
aam
lret
movsb
stos
jns
loopne
mov
fsubrp
inc
test
jmp
std
leave
insl
push
out
mov
scas
lock
movsl
sti
addr16
mov
mov
jns
roll
lahf
add
push
jmp
push
cmp
ja
inc
pop
mov
shrb
inc
fpatan
lock
bound
sbb
and
out
push
inc
movsb
bnd
xchg
jb
dec
or
jae
pop
mov
es
mov
fstl
dec
pusha
and
add
adc
mov
dec
or
out
cmpsb
sub
jmp
div
mov
movsl
add
or
mov
aas
jmp
cmp
mov
inc
mov
add
pop
dec
and
xor
sbb
cmp
push
je
xlat
push
test
repnz
sub
je
repz
or
jecxz
adc
mov
mov
dec
or
fcoms
ficompl
stos
ss
fdivrl
push
pop
pushf
into
das
aaa
pop
aaa
call
dec
test
xchg
dec
out
in
mov
push
cmp
mov
inc
popf
cmp
adc
imul
out
pushf
out
test
sub
jmp
sub
sbb
push
jnp
loope
dec
arpl
insb
cmp
xchg
sahf
xor
cmpsb
scas
mov
xchg
jns
test
add
mov
lcall
es
loopne
xor
call
int
mov
push
mov
stos
bound
lret
shll
in
jmp
dec
inc
scas
inc
xor
jmp
push
test
push
dec
pop
mov
sub
mov
adc
gs
dec
xchg
sub
or
add
inc
inc
xchg
sub
pop
mov
nop
out
ja
je
aaa
jge
adc
mov
pop
and
gs
and
in
enter
push
sub
fwait
stos
bound
adc
cmp
jnp
ret
ss
cmp
push
repnz
decl
xchg
dec
std
push
jmp
or
and
inc
mov
dec
cli
xchg
je
je
aas
and
test
or
jbe
stos
cs
dec
push
pop
cli
mov
adc
mov
hlt
aad
mov
push
scas
jb
jns
or
lahf
testl
ficoml
pop
sub
mov
push
push
shlb
adc
jne
es
data16
mov
cmp
dec
xor
cmp
jns
lock
fsubrs
or
shll
mov
ja
ret
das
xor
icebp
xor
js
mov
mov
cltd
and
sub
in
xlat
inc
push
fdivs
femms
sbb
push
inc
in
sbb
ja
negl
adc
push
icebp
sub
mov
sub
xor
shlb
xchg
mov
sub
adc
jp
add
push
and
dec
lret
lcall
jnp
xorb
or
stos
jno
nop
gs
sub
in
dec
add
sub
sbb
inc
fisubl
xor
int
xchg
ss
mov
lahf
test
and
outsb
sub
or
pop
cmp
sahf
test
stos
addr16
push
inc
dec
aas
mov
cmpsb
add
sub
lea
cmp
js
cmc
sub
and
xor
popf
jl
pusha
cmp
and
lods
imul
push
out
ror
jmp
cmp
int
shl
xchg
jnp
arpl
and
or
pop
cmpsl
rorl
pop
out
pop
and
xchg
mov
jne
sbb
cli
mov
push
scas
call
test
sub
mov
xchg
imul
inc
mov
and
dec
dec
sbbb
xlat
sti
test
mov
mov
xor
roll
pusha
int
into
xor
sub
xor
jae
dec
adc
je
push
xchg
push
add
and
add
adc
pop
push
and
lret
loopne
cmpsb
push
mov
sbb
adc
daa
lcall
or
js
cltd
xor
das
pop
sub
lods
in
mov
mov
pop
test
push
jge
sbb
inc
movb
negb
pop
jae
loopne
or
mov
scas
lret
mov
je
pop
repz
dec
rcrb
mov
sub
mov
imul
je
orl
push
in
adc
mov
sub
into
xor
xchg
in
test
fs
mov
out
jb
cmpsb
xchg
fists
test
jae
jbe
clc
or
sub
inc
fstpl
sub
fisttpl
mov
pop
repz
mov
inc
cmp
or
xchg
cmc
aam
dec
and
cmc
jl
fnstcw
outsb
xor
inc
cwtl
pusha
lods
cld
mov
f2xm1
pop
lahf
sub
jb
mov
or
mov
sub
dec
jl
icebp
in
out
orl
or
cli
vprotd
sarb
cmp
xor
or
xchg
es
mov
fldl
bound
jmp
jg
lods
pop
jbe
icebp
jnp
sub
cltd
test
and
in
les
cmc
cmp
es
inc
xchg
adc
imul
and
aaa
daa
push
cmp
push
mov
fdivp
test
bound
or
fwait
addr16
bndstx
push
movsb
add
and
clc
mov
sub
inc
xlat
inc
xchg
test
adc
idiv
aas
sub
into
mov
push
and
jbe
out
jno
mov
scas
lods
ljmp
and
fcmovb
roll
push
rcrl
cs
xchg
mov
lret
repz
xchg
adc
in
cmp
fs
out
push
cltd
test
xor
std
xchg
je
movl
lret
in
xchg
xchg
or
push
push
sbb
mov
mov
sti
dec
in
testl
idivb
adc
orb
lret
xor
mov
in
mov
rolb
adc
push
fldcw
scas
mov
fs
insl
xlat
xchg
scas
mov
shr
jb
jl
fcoml
xchg
mov
lahf
push
adc
add
jae
test
mov
jle
push
jb
sbb
sbb
add
loope
jns
jmp
loopne
jp
pop
push
lock
adc
push
imul
xchg
xor
adc
dec
shlb
jns
xor
bound
fwait
dec
mov
js
ret
nop
js
jo
push
jo
cmpsl
idivl
movsb
leave
jbe
sti
lds
call
push
outsl
stos
push
neg
nop
mov
pop
aas
push
roll
testb
mov
rorl
dec
dec
cs
js
ror
scas
loope
outsl
mov
add
mov
faddl
pop
js
mov
fistl
mov
jmp
out
out
jno
jne
and
shlb
xchg
and
inc
aaa
xor
dec
fs
aas
mov
imul
add
mov
or
jnp
and
cwtl
pushf
js
dec
lods
push
fnstcw
cmpl
cmp
test
imul
imull
shlb
mov
and
iret
and
sbb
out
add
out
inc
aam
cwtl
ja
idivl
nop
daa
jle
and
inc
inc
ljmp
lock
popf
insl
pushf
fs
cmp
xor
push
mov
fiaddl
mov
scas
stc
mov
mov
xchg
xchg
cmpsl
jg
fwait
test
subb
mov
int3
loope
jns
sbb
jge
add
add
mov
movsl
and
adc
jbe
dec
sarl
mov
add
xchg
das
test
cltd
out
icebp
loopne
and
adc
sahf
xchg
mov
loopne
jns
mov
mov
iret
pusha
aam
mov
lcall
cmpsb
cmp
jmp
mov
or
nop
jno
add
jle
int
mov
push
jmp
in
hlt
mov
pop
jmp
lret
scas
adc
ret
mov
sbb
iret
jle
cmp
mov
fimuls
push
aam
inc
arpl
mov
popl
into
xlat
mov
xchg
in
pop
lds
mov
in
mov
pop
cmp
bound
sti
adc
out
mov
sar
pop
cmpsb
aad
lcall
aas
repnz
mov
inc
xchg
lock
jne
dec
aam
xchg
sbb
inc
add
jno
call
xchg
ja
lods
mov
loope
pop
jo
sbb
movsl
adc
xchg
or
inc
cmp
jp
sbb
mov
jl
call
mov
scas
clc
adc
mov
das
fisubrl
ljmp
fwait
xor
fidivrl
add
cmp
and
and
outsl
loope
jnp
test
mov
sahf
inc
std
ss
jo
lahf
add
xor
fsts
push
and
into
sub
ret
xchg
ret
mov
pop
cwtl
aas
fwait
lret
mov
es
testl
sbb
mov
xchg
testb
mov
sbb
mov
das
fwait
ds
sbb
xor
dec
sbb
adc
jbe
xor
jns
lcall
lock
inc
mov
mov
sub
loopne
mov
push
xchg
test
inc
xchg
and
cwtl
test
aas
push
mov
jbe
aad
inc
dec
cli
lods
stc
addr16
cwtl
sbb
cmc
sub
in
sti
pop
add
xchg
dec
and
jg
pushl
scas
int3
popf
movsb
jmp
cli
mov
or
xor
lods
imul
test
mov
add
pop
push
xor
dec
clc
aaa
sahf
xor
jl
mov
sub
push
jge
cwtl
xor
jmp
sub
andb
jmp
inc
pop
xor
jmp
out
push
mov
cmp
test
adc
out
jo
into
sub
dec
inc
jb
jno
or
mov
shlb
mov
add
dec
out
jge
pop
or
outsl
sbb
push
shlb
lods
inc
dec
data16
mov
mov
add
pushf
jno
ds
stos
inc
rcll
out
xor
push
call
stos
adc
pop
pop
push
jbe
pcmpeqd
xchg
jp
sahf
lods
xchg
in
jo
scas
add
out
adc
int3
movsl
sti
sbb
mov
sbb
mov
scas
hlt
sti
sbb
jle
out
popa
ret
sbb
jecxz
push
loopne
fwait
daa
inc
and
fsubr
jbe
pop
sti
enter
sbb
inc
add
jmp
ljmp
mov
insb
add
nop
daa
fsubl
xor
xor
mov
pop
arpl
add
jg
ljmp
add
xchg
cld
adc
mov
test
popa
outsb
push
add
jmp
pop
lret
fdivrl
cwtl
bound
dec
sti
pop
insb
iret
or
fdivl
add
shll
add
add
xorl
adc
movsb
mov
xlat
fdivrs
xor
sbb
imul
dec
nop
cmpsb
ja
frstor
jns
sti
stos
add
push
aas
mov
jo
inc
push
mov
xchg
ljmp
imul
add
mov
shll
aam
and
dec
nop
scas
cmp
aas
add
movsb
adc
inc
lock
out
xchg
in
std
push
sbb
enter
jno
jp
in
stos
stc
cli
adc
mov
cmp
lahf
jo
rcll
lret
mov
mov
lret
shl
sete
out
dec
cmp
cltd
jmp
mov
mov
fdivs
and
jecxz
mov
int3
xor
call
xlat
fcomps
push
test
mov
mov
ss
outsb
jmp
pop
loop
mov
ja
inc
mov
subb
mov
rolb
inc
pop
mov
out
test
int
adc
push
je
scas
jae
pop
cmpsl
sahf
js
into
test
cwtl
adc
into
lahf
push
je
cmc
mov
mov
xchg
clc
nop
cltd
adc
sti
into
mov
data16
out
add
xor
scas
fdivrl
js
test
jecxz
cmpsl
in
dec
pop
pop
leave
jle
jno
cltd
jne
jle
out
pop
fnstenv
or
daa
lret
mov
pop
mov
cs
icebp
mov
push
shrl
sub
cmpsb
test
inc
xor
cld
jle
inc
mov
fists
pop
outsb
cmp
push
xor
mov
push
es
and
int3
rcl
adc
shr
in
push
cltd
dec
add
aas
dec
lcall
push
cli
sub
or
cmpsl
mov
pop
imul
ljmp
jbe
dec
sbb
imul
sub
fucomp
adc
mov
xor
xchg
mov
jno
mov
push
inc
in
mov
jb
add
loope
pop
pop
adc
outsl
out
sub
dec
shll
cmc
dec
lds
hlt
cltd
bound
sub
ja
ret
jnp
dec
cmpsl
pushf
je
insl
test
stos
pop
cltd
lods
shlb
xor
sti
idivb
mov
mov
jmp
out
pop
adc
outsb
add
add
add
dec
cmp
test
adc
mov
or
sti
cli
or
hlt
add
jno
lret
outsb
inc
inc
cld
inc
mov
cld
inc
addr16
cltd
push
jmp
push
add
xchg
dec
or
and
jge
pusha
out
lcall
outsb
cmc
ret
lret
pop
repnz
shll
push
in
jno
je
testl
cmp
aas
lods
scas
push
loope
clc
rorb
outsl
inc
imul
cs
add
push
jno
hlt
xchg
cs
shlb
sbb
inc
dec
mov
shrl
jns
call
sub
push
inc
lods
mov
fildl
inc
lcall
adc
mov
fcomp
sub
daa
push
mov
inc
mov
shrl
mov
pusha
mov
inc
push
inc
faddl
sub
cli
pop
push
mov
fwait
sub
dec
push
dec
std
pop
jnp
fucomp
pop
mov
movsb
les
cs
subl
aaa
pop
call
scas
inc
fstpt
sahf
lcall
adc
pop
lret
nop
cwtl
sub
and
push
push
pop
ss
jne
lock
pop
dec
mov
push
add
cmp
jbe
addl
fnstsw
sti
jbe
sub
lds
pop
cltd
xor
insl
ja
push
pop
ja
call
dec
xchg
add
pop
cmp
mov
mov
mov
pop
jmp
test
and
inc
pop
outsl
mov
and
dec
jmp
xchg
add
cwtl
jb
leave
repnz
gs
movsl
cmp
and
pop
adc
pushf
fs
jb
add
and
xor
jae
gs
ljmp
lcall
outsb
add
push
xchg
mov
ret
cmp
xchg
xchg
addr16
cltd
mov
pop
push
stos
or
es
jbe
xchg
push
je
cmpsb
test
cmc
cld
jb
pop
movsb
push
inc
fmull
ds
in
cli
push
add
js
inc
scas
dec
xorl
fsubr
cwtl
enter
in
or
pusha
testl
jle
std
sub
cmp
lock
xorl
xor
mov
loope
push
aam
test
adc
loope,pt
push
push
inc
inc
xor
jbe
inc
loope
xlat
hlt
mov
cwtl
je
andb
mov
jbe
push
cwtl
sbb
std
jbe
jo
testb
jle
in
imul
cltd
dec
xchg
movq
mov
fldcw
out
mov
outsb
test
jns
push
and
and
pusha
mov
add
mov
cmp
fstpl
ret
xor
push
fnstcw
scas
cli
cli
les
push
aad
push
mov
ret
xchg
je
inc
dec
mov
xor
push
mov
outsl
sub
lods
jb
jge
test
jnp
dec
filds
daa
mov
fxch
jmp
xchg
adc
sbb
out
sbb
push
inc
lods
mov
jmp
lds
int
scas
cs
sarb
icebp
xchg
insb
fmul
dec
stos
inc
and
inc
enter
shr
scas
aam
in
lods
bnd
out
insb
jl
xlat
cmp
lods
lea
cmp
push
out
pop
xchg
mov
int3
iret
inc
xlat
add
mov
fmull
cltd
jno
or
aas
test
fisttpl
mov
stos
mov
xor
dec
push
pop
cmp
fnstcw
adc
push
add
adc
jb
clc
mov
add
pop
lock
gs
mov
xchg
sub
push
adc
fcmovnb
mov
mov
scas
xchg
push
js
sbb
stos
xor
fdivl
and
pop
lahf
mov
fldcw
lock
dec
xchg
sub
hlt
imul
sbb
adc
dec
mov
les
push
pop
mov
mov
in
mov
add
and
mov
mov
mov
cmp
and
cwtl
scas
ds
inc
jbe
pop
lock
pop
xor
ret
ds
shr
sahf
sub
mov
push
sti
movsb
fldl
aam
jl
sbb
aad
mov
inc
cmpsb
mov
lret
pop
pop
jno
sti
push
in
sub
test
xor
sti
ds
inc
xchg
dec
dec
sub
sahf
orb
incl
sub
adc
ret
pusha
fwait
xor
insb
sub
xlat
and
outsb
pop
daa
xchg
sub
jmp
stc
sub
dec
add
inc
inc
lea
lret
jp
lahf
daa
push
cmc
pop
rcrb
repnz
fcomps
dec
inc
push
jne
lods
ss
cld
cs
fistpl
or
fsubrl
nop
mov
loop
aam
data16
test
mov
mov
cs
pop
pusha
xchg
cwtl
jb
int3
pop
jo
jno
fsubl
inc
dec
fnstcw
add
pop
not
xchg
xlat
pop
xchg
pop
dec
pop
insl
pop
cmp
jle
fisubrs
test
adcl
jae
mov
cmp
pop
loope
imul
sbb
fistl
fwait
mov
int3
insb
xchg
jo
and
cmpsl
cmpsl
stos
mov
adc
rolb
sbb
jae
pop
lock
adc
das
and
jle
adc
lds
cs
mov
pop
push
pop
add
cwtl
cld
jno
jbe
popf
clc
test
imul
arpl
mov
add
testl
lods
lods
sub
push
xor
mov
push
push
cmp
bound
inc
int
jbe
push
jbe
mov
ja
xchg
aas
scas
je
and
out
imul
sbb
sbb
xchg
into
enter
stos
dec
popf
mov
add
jb
lea
shll
fstpt
int3
or
and
jg
push
mov
lret
repz
xchg
sub
nop
ss
inc
and
jmp
add
popf
in
mov
push
xor
jecxz
lcall
cmp
out
scas
push
std
mov
sub
pop
fdivl
in
cmpsl
cmp
fmuls
lret
push
and
test
lcall
xor
pop
stos
mov
mov
push
inc
into
unpckhps
mov
push
or
in
xchg
out
mov
dec
imul
jae
aad
std
pusha
mov
in
fimull
movsl
or
ds
pop
push
sub
out
ja
mov
mov
cmp
or
xor
jl
push
add
movsl
inc
fbstp
push
loop
mov
testl
test
cmpsb
jge
ljmp
clc
pusha
jl
dec
dec
loop
pop
in
pusha
sbb
cmp
out
sbb
xor
jo
in
mov
jle
or
and
jecxz
les
push
cmc
add
data16
je
mov
cmove
pop
xchg
jle
cmp
mov
movsl
jno
out
in
jecxz
jo
cmp
pop
int
pop
mov
int
adc
sbb
outsb
lahf
pop
lock
add
call
or
inc
adc
pushf
xor
cmp
push
cwtl
frstor
inc
rol
outsb
pop
ljmp
xor
cmpsb
add
sbb
cmp
jl
enter
adc
push
pusha
lods
lock
push
je
or
xchg
scas
cmp
loope
mov
xchg
lds
insb
mov
rolb
add
pop
xor
adc
in
push
cs
xor
or
mov
divb
subl
pushw
fbstp
mov
arpl
jae
out
fistps
push
adc
cmp
call
jae
jg
out
loopne
insb
adc
pop
cmpsb
jae
push
sub
leave
dec
dec
dec
lcall
aam
imul
adc
xor
js
scas
pop
lahf
adc
push
dec
push
mov
cld
shrb
cmp
ret
jge
cwtl
inc
aad
xor
mov
inc
dec
bound
push
clc
addl
fsubs
leave
jge
fidivl
shll
pop
cmc
int3
js
mov
push
je
mov
fidivl
push
or
dec
push
jbe
stos
dec
xor
xchg
xor
dec
ficomps
and
mov
stc
add
mov
mov
jle
adc
mov
insb
popa
pop
mov
outsb
jmp
push
inc
addr16
std
and
std
jmp
lea
pop
jne
test
pop
adc
nop
and
out
shlb
loope
dec
add
test
call
repz
xor
or
sub
push
mov
inc
imul
mov
lahf
adc
pop
sbb
ret
mov
pushf
xor
jl
fs
inc
mov
xchg
dec
icebp
push
or
js
xchg
mull
sbb
mov
shrl
les
push
jmp
inc
sbb
dec
icebp
inc
inc
jno
jbe
xchg
lods
sbb
pusha
sti
dec
cld
repz
inc
incb
xchg
cmp
inc
inc
test
frstor
mov
das
adcl
mov
mov
lahf
sbb
inc
rclb
sar
push
stc
shr
sub
das
and
sbb
stc
pop
pop
into
dec
jecxz
bound
dec
into
sahf
ret
and
mov
repz
or
shrb
scas
sbb
adc
cld
xchg
xchg
fcompl
mov
cmpl
cwtl
dec
roll
lahf
pop
sbb
adc
push
lds
mov
stos
and
mov
sbbl
mov
shrl
jmp
ror
inc
xor
jmp
mull
mov
sub
rolb
push
dec
jle
mov
repz
mov
and
imul
sub
and
divb
push
adc
rol
mov
pop
push
les
pop
rclb
adc
push
std
cld
jne
out
fbstp
xchg
cmp
xor
push
test
add
dec
mov
push
sbbb
push
leave
cmc
stc
mov
shr
scas
les
test
sbb
aaa
pop
add
sahf
cmp
push
call
pop
js
orl
jbe
sbb
test
fidivl
or
inc
mov
push
jns
stc
das
int
add
sub
sbb
push
push
imul
mov
cmp
cmp
inc
mov
in
orl
data16
push
dec
mov
mov
icebp
or
cltd
sti
test
dec
mov
jo
fs
testl
xchg
cli
movsb
mov
mov
cmp
pop
mov
xlat
out
push
sbb
xchg
xor
ljmp
leave
adc
je
sbb
and
ss
pop
out
mov
shrb
sub
pop
pop
out
leave
cmp
cmpl
dec
imul
ret
or
int3
movsl
lods
jo
lcall
shlb
inc
push
movsb
xorb
dec
xor
pop
movsb
mull
lds
out
outsb
mov
pop
iret
nop
cld
pop
mov
mov
cmp
dec
loop
addr16
jo
mov
popa
jl
loopne
xor
jl
xor
xchg
and
cmp
cwtl
imul
shrb
movsl
clc
sub
mov
repnz
repz
daa
hlt
sbbb
push
jmp
insl
lea
inc
xor
mov
mov
sub
iret
lret
pop
int
jp
enter
inc
loope
nop
pop
push
inc
test
pushl
sarl
mov
repz
push
loop
mov
or
lock
adcl
add
in
jo
adc
jns
imul
outsl
daa
pop
mov
xor
pop
mov
lahf
mov
mov
outsb
nop
mov
adc
scas
cmp
cmp
mov
pop
or
adc
xlat
and
pop
subl
adc
cli
push
lret
xchg
mov
mov
push
adc
jge
and
std
push
push
xor
lods
outsb
push
adc
pop
mov
jmp
es
inc
dec
fdivrs
lock
js
push
repz
pop
jno
jae
pop
add
mov
int
sbb
sbb
sti
push
icebp
out
dec
jae
js
sbb
sub
dec
shrb
insb
sbb
ljmp
rcrb
dec
aaa
pcmpeqd
mov
lods
cmp
adc
pushf
dec
mov
push
cwtl
lahf
push
fidivrl
dec
orl
sub
std
cmp
ss
pop
push
sub
movsl
int
mov
shufps
xchg
push
outsl
adc
icebp
fdivrs
divl
push
insb
ja
adc
mov
add
sub
sbb
cmp
je
pop
rcl
inc
in
orl
push
int
or
mov
pusha
jl
insb
dec
jmp
push
cmp
lea
xchg
testb
push
inc
in
mov
inc
movsl
test
xlat
data16
push
ret
jmp
xor
push
push
loopne
lea
inc
sbb
cmp
mov
push
cmpb
movb
movsb
cmpsb
inc
sahf
lret
and
xor
testb
insl
loopne
mov
push
mov
imul
adc
push
mov
ficoml
mov
sti
cmp
xchg
dec
add
lret
xor
mov
ja
mov
pop
leave
sub
jecxz
push
imul
out
jnp
test
sub
mov
test
xlat
push
lea
int3
dec
cmc
push
cltd
xor
push
fmul
out
jo
out
les
jae
stos
lret
xchg
arpl
or
divl
pop
push
pop
fdivrs
sub
inc
adc
push
sbb
push
pop
imul
sub
dec
mov
adc
jecxz
loop
cmp
scas
or
gs
push
loop
or
aaa
lcall
add
add
jmp
sbbb
lds
add
mov
mov
imulb
xchg
sub
dec
insl
cmp
out
insb
sbb
fstl
cmc
mov
out
in
in
mov
or
push
jecxz
mov
cmc
adc
fcoml
inc
pop
out
cmp
adc
insb
pushf
push
mov
imul
jle
xor
movsb
jp
xchg
pop
orb
sbb
into
fcomi
insb
cmp
cmpl
test
jne
add
add
lea
pop
jp
cmp
or
cmp
mov
mov
sbb
rcl
add
mov
sbb
mov
pop
ret
ds
adc
mov
sub
cmp
and
push
negb
push
mov
adc
mov
scas
int
mov
ret
stc
jo
push
inc
divb
sarb
les
jb
push
add
sub
push
imul
pop
pushf
and
jmp
lods
pop
in
into
ficoml
push
stos
inc
xorl
jg
std
add
lds
test
mov
aas
aad
movsl
xor
adc
sbb
inc
inc
mov
mov
adc
daa
int
cmp
sbb
push
adcb
cmpsl
and
pop
and
lret
lret
mov
lds
jbe
sbb
movsl
pop
stos
cmp
jg
jno
call
iret
pop
pushf
shll
push
add
aaa
adc
pushf
inc
add
jge
ljmp
lods
add
mov
scas
adc
xor
sbb
inc
les
std
mov
outsb
dec
ret
in
sub
mov
pop
mov
pop
rclb
cltd
sarb
ret
mov
jge
sub
mov
xchg
out
xchg
pusha
int
ret
jl
int
popa
pusha
insl
mov
add
or
inc
cmp
xchg
mov
cmpsl
xor
xchg
pop
sub
xchg
test
repnz
int3
add
xor
cli
push
test
cmpsl
imull
or
enter
adc
jp
sahf
mov
fldcw
in
dec
sbb
in
fdivl
bswap
cld
outsl
mov
pusha
push
sbb
push
dec
xchg
std
and
cs
pop
lret
mov
std
call
mov
push
leave
ret
pop
cli
sub
xchg
loope
add
xor
xchg
mov
pop
jg
rcrl
rcr
cmp
dec
scas
push
mov
nop
mov
mov
fsub
sub
rcrl
insb
sbb
xchg
push
in
aad
cmp
dec
xor
in
push
sarl
mov
dec
movsb
stos
aas
popf
daa
add
popa
xor
inc
ss
jmp
mov
jo
insb
mov
daa
or
sbb
stc
push
jecxz
sub
sbb
xchg
aas
nop
daa
jno
push
popf
imul
mov
xor
inc
pop
imul
cmp
dec
dec
test
pop
mov
enter
sub
cmp
lcall
mulb
mov
add
cs
push
imull
cmpsb
mov
int3
pop
mov
add
push
mov
ret
and
jp
in
fmull
and
call
addr16
jle
cmp
fisubrs
stos
add
movsb
mov
pop
xchg
xchg
movsl
sub
fwait
mov
jo
inc
std
mov
mov
into
int3
test
or
adc
je
and
fsubr
add
ret
fldcw
jmp
mov
mov
cmpsl
loopne
fdivrs
hlt
ss
fsubrl
iret
pusha
imul
jns
xor
dec
sub
pop
pop
pop
fisubrs
jae
dec
fsubrp
cmp
xor
add
sbb
das
aam
pop
xor
jo
lcall
push
xchg
rolb
test
dec
in
and
jb
out
insb
mov
repnz
jg
popa
dec
inc
or
mull
ja
inc
loope
je
and
adc
cld
add
daa
mov
sbb
cmpsb
je
xlat
sbb
inc
xlat
or
fcompl
stc
aam
push
push
pop
fldcw
pop
jno
xchg
cmpsb
testb
addr16
pop
push
sbb
pop
dec
jg
mov
adc
push
out
sahf
dec
xlat
cmpsl
mov
in
add
mov
dec
lds
aaa
sbb
mov
cmp
data16
in
stos
out
fdivl
movsl
test
int3
sti
xchg
pushl
adc
iret
sbb
addr16
cwtl
fdivr
or
inc
into
daa
mov
js
mov
dec
or
pop
adc
mov
loopne
or
lret
pop
mulb
pop
aad
xor
dec
dec
ret
movsl
les
loope
mov
jmp
out
pop
mov
out
cmp
pusha
ja
add
loop
ja
or
push
or
mov
loopne
out
xchg
mov
call
dec
xchg
cmpsl
jne
adcb
sarl
sahf
and
add
and
shll
lret
xor
dec
loope
mov
push
cmpsl
out
push
xchg
inc
imull
jmp
pop
mov
clc
out
and
push
push
mov
dec
jl
and
fildl
loope
dec
lods
mov
data16
jg
mov
fidivs
dec
nop
xor
push
add
aam
sbb
sub
push
repz
sbb
bound
add
iret
out
push
mov
xlat
mov
sbb
and
pop
subl
push
sub
rclb
inc
mov
xchg
stc
and
ljmp
cmpsb
push
inc
mov
out
mov
push
push
pop
shll
pusha
mov
dec
in
daa
push
sbb
inc
pushf
jo
jmp
or
mov
mov
sub
scas
push
push
call
adc
push
dec
adc
dec
pop
and
push
sub
xorb
push
les
lods
imul
mov
or
outsb
sbb
xor
push
cmp
insl
rorb
and
mov
mov
call
ret
or
push
mov
daa
ds
mov
xchg
cmp
pushf
aaa
sub
inc
faddl
push
and
xchg
int
pushf
push
xor
jae
hlt
cltd
cli
gs
mov
mov
xchg
lods
cmp
mov
imul
add
push
xchg
movl
in
cmp
insb
popa
divl
stc
sbb
push
jmp
dec
lret
mov
lds
aad
add
rorl
push
add
movsl
gs
stc
int
jmp
scas
rcrl
sbb
add
adcb
gs
jb
stos
and
push
push
mov
repz
fnstsw
sub
in
mov
repnz
pop
popf
dec
inc
cmpsb
out
mov
enter
js
ret
mov
mov
push
mov
pusha
jge
repnz
push
push
xlat
loopne
pushf
dec
jp
jg
jo
aaa
xchg
jbe
jae
rclb
rcl
aam
pop
jne
push
test
sbb
add
sarb
jno
cltd
push
testl
sarb
xlat
sbbl
push
testb
pushl
xchg
xchg
push
lock
sbb
adc
and
push
jl
dec
in
adc
loopne
in
test
scas
or
rolb
sub
negb
sbb
xchg
shrl
adc
ss
xchg
sbb
jmp
sbb
cmp
imul
mov
movsb
cmp
ret
dec
adc
mov
mov
xorl
rclb
test
sbb
stc
lods
inc
rcrl
mov
jg
les
xchg
notb
out
jbe
jo
xchg
xchg
mov
shrl
mov
and
stos
loopw
pusha
cmp
xchg
adc
int
xchg
or
scas
es
mov
data16
push
pop
cmp
add
xor
mov
stos
sub
iret
xor
mov
shl
aad
xchg
jg
cs
flds
scas
out
icebp
daa
cmp
lods
addb
sub
xchg
repz
pop
cli
mov
insl
arpl
mov
inc
inc
xchg
and
ss
xchg
dec
aas
push
mov
mov
pop
xor
cmp
and
sbb
jae
cltd
pop
movsb
xchg
fstl
int3
mov
cmp
pop
sbbb
jno
xor
mov
rcrb
nop
sub
jo
test
xchg
dec
mov
xor
or
sbb
sub
flds
ss
jl
andl
psrlq
std
jbe
pusha
mov
dec
pop
aaa
imul
lahf
xor
xor
sahf
adcb
orb
mov
and
sbb
mov
outsb
in
hlt
mov
cmp
mov
jne
bound
out
fadd
sti
mov
pop
xor
dec
sbb
push
scas
xchg
jl
mov
jnp
dec
pop
rcr
sub
add
jg
fiaddl
repz
inc
loope
mov
sbb
inc
inc
mov
mov
xchg
bound
testl
cmovg
movsb
pop
fbld
sbb
in
cmp
mov
sbb
dec
cmpsb
mov
cmp
jne
icebp
xchg
fdivrp
subb
mov
pop
adc
xchg
add
and
mov
iret
mov
in
sti
adc
cmp
add
dec
aas
cmp
sbb
cmp
addb
aam
lcall
inc
jno
repz
icebp
inc
inc
jb
lea
add
pop
jmp
in
push
testb
cld
push
idivl
loop
popa
adc
jmp
test
and
fisubs
add
addr16
or
jns
imul
xorl
je
inc
pop
mov
xchg
ficomps
add
jb
cmp
sub
pop
dec
push
mov
sub
cmp
sti
out
shr
test
jmp
shr
or
inc
movaps
aas
cmp
loop
inc
dec
mov
or
shll
loop
xchg
mov
push
js
cmp
in
fisubrl
add
mov
pop
leave
push
mov
mov
shlb
inc
add
lret
in
and
mov
pop
jno
xchg
outsl
repz
popa
out
cmp
insl
leave
xor
push
addr16
cmp
cld
jae
xchg
pop
pushf
fistl
cmpsl
sbb
ja
jnp
cwtl
jb
das
mov
jne
rol
punpckhbw
test
and
ja
in
sbb
rep
test
cmp
imul
test
stos
push
fnstsw
mov
inc
push
cmpl
jl
xchg
ja
adc
xor
movsl
ds
test
cmp
mov
into
adc
push
inc
incb
cmp
inc
inc
inc
gs
dec
int3
loopne
dec
scas
lret
divl
fisttpll
pop
sub
or
ja
loopne
clc
cld
push
adc
mov
mov
fcmovu
fsubl
test
xor
lds
add
dec
es
cld
jmp
daa
ret
test
mov
mov
push
inc
shrl
pop
sbb
aad
xor
pushf
cli
shl
movsl
cmp
ja
mov
cmp
pop
cmc
cld
iret
dec
pop
out
fdivrl
lea
ja
into
push
shll
push
pushf
push
rol
cld
int
inc
addr16
push
xchg
mov
mov
cmp
push
or
js
mov
fdivs
or
push
mull
xor
mov
cmpsl
xchg
jns
ss
sbb
xlat
xlat
push
mov
add
and
pop
sahf
sub
rdpmc
iret
ljmp
pop
cld
jge
inc
mov
data16
dec
adc
arpl
xchg
popa
ret
je
xchg
xor
rcrb
imul
stos
xchg
fstl
ljmp
out
in
jmp
inc
fwait
jmp
pop
outsb
fcmovnb
mov
andl
stos
inc
dec
mov
lods
movsl
in
aaa
loop
mov
les
aas
push
outsb
dec
iret
push
in
loopne
cmp
or
test
rclb
fcoml
outsl
ss
pushf
or
les
pop
ret
andb
lds
and
stos
in
out
stos
xlat
sbbl
lcall
ljmp
fnstsw
push
fstl
mov
xor
and
pop
ficompl
mov
call
dec
leave
mov
xor
arpl
mov
pop
pop
sbbb
mov
fstpt
mov
test
rorb
xorl
mov
push
jno
iret
movsl
cmp
mov
repz
add
stos
push
std
inc
cmp
jnp
sbb
xchg
xor
and
and
jge
bound
lods
mov
mov
jne
add
mov
arpl
xchg
mov
add
xchg
xor
lods
mov
add
inc
push
inc
stos
and
add
cld
dec
gs
out
fstpt
push
sub
int
mov
pop
fdivrl
inc
cmpsl
xor
jge
ror
daa
es
sbb
dec
lods
inc
aaa
rcrl
out
les
or
ja
mov
sbb
imul
mov
scas
call
cmc
mov
scas
pop
fs
mov
into
in
andb
push
sub
sbb
sbb
fs
xchg
dec
jo
jg
jbe
imul
or
imul
xchg
and
pop
inc
call
push
nop
cs
xchg
cwtl
fwait
outsb
lcall
dec
and
es
scas
jns
push
ljmp
inc
out
xchg
or
pop
sbb
loop
mov
mov
lock
and
pop
push
gs
mov
or
cmp
xchg
inc
or
mov
add
sbb
loopne
jp
stos
loopne
sbb
jge
mov
adc
and
repz
mov
int
std
ret
add
rolb
inc
test
jp
sbb
lods
mov
sbb
add
adc
mov
roll
sbb
addr16
and
sub
and
xor
add
imul
cmpsl
into
loope
mov
or
dec
addr16
mov
out
ss
in
mov
sarl
outsl
sub
xchg
push
cli
das
ljmp
aas
lahf
dec
cmp
addl
mov
shlw
inc
pop
pop
mov
sahf
xchg
adc
rol
sub
std
dec
arpl
iret
test
imul
repnz
lock
cltd
imul
lods
fsubp
xchg
stos
imul
lds
push
and
dec
repz
sbb
lret
push
xor
sub
or
sub
pusha
pop
mov
scas
pop
dec
scas
stos
dec
sub
lret
ss
mov
in
xchg
or
adc
add
push
mov
pushf
xor
aas
inc
push
inc
mov
sbb
ror
mov
ficoms
mov
pop
fcmovnbe
xlat
pop
and
jmp
sti
add
es
dec
ds
int
sti
fwait
idivl
cld
cmpb
sbb
or
sub
sarl
jp
pop
pushf
jecxz
fdiv
cwtl
push
mov
and
dec
popa
pop
xor
mov
pop
jg
push
lods
enter
pop
adc
imul
jbe
mov
je
add
jno
push
lahf
pop
push
roll
insl
test
or
les
mov
push
mov
filds
mov
mov
add
loope
stos
hlt
sbb
jp
cs
mov
mov
fisttpll
sub
sahf
test
or
inc
pop
int
mov
cmpl
decl
or
sub
inc
mov
das
and
scas
and
jb
xchg
push
mov
mov
negb
ret
push
es
sbb
cmp
sbb
test
out
push
popf
mov
adc
scas
inc
jb
fidivs
cli
mov
sub
sahf
pop
mov
shrb
pop
jle
ds
imul
notb
sbb
mov
movsb
cmp
shll
lds
xchg
fcoml
dec
pop
test
cwtl
jns
jl
loope
sti
sub
mov
cmpsl
in
mov
imul
push
int
push
push
frstor
or
stc
arpl
lock
insb
fs
arpl
lods
xchg
div
push
sub
cwtl
cmp
sysret
and
push
fildl
mov
pop
jbe
call
das
sub
xor
nop
outsl
shl
pop
cwtl
pop
push
data16
xchg
jbe
pop
hlt
mov
push
jae
sbb
mov
push
xor
add
pop
push
lds
daa
cmpb
inc
xorl
and
fsubl
inc
arpl
sbb
dec
sbb
hlt
int
push
add
cwtl
or
aam
xchg
pop
xor
mov
leave
cmp
pop
shll
xchg
cmp
inc
xchg
sbb
outsl
sbb
xchg
jmp
stos
adc
xor
ja
das
lea
std
cld
add
mov
pop
or
pop
movsl
lds
loope
andb
sub
std
dec
add
mov
add
imul
fnstcw
mov
ficoms
mov
mov
hlt
scas
xlat
repz
mov
inc
fisttps
xchg
cli
movsl
repnz
lret
adc
xchg
addr16
xchg
sahf
mov
cli
lret
jmp
sub
lret
sti
and
sarl
cld
shlb
ds
in
pusha
adc
dec
les
aam
mov
sub
pop
sbb
xchg
jnp
lahf
inc
je
test
icebp
std
jo
insb
fidivs
mov
das
xchg
mov
les
shrl
adc
push
jge
out
test
inc
sbb
imul
outsb
add
xlat
xchg
shlb
dec
xor
mov
and
loop
sub
or
inc
and
jne
stc
nop
out
xchg
adc
mov
nop
test
xchg
imul
add
cmpsl
xchg
enter
shr
sbb
xchg
add
push
push
je
xchg
jne
nop
ret
fdivs
fwait
das
jecxz
scas
and
cld
repz
lret
shld
xchg
movsl
ret
pop
ljmp
in
fidivl
shll
data16
popf
ljmp
call
shl
sahf
clc
and
and
sti
jg
ss
fdivrs
hlt
pusha
pop
shrl
dec
jecxz
push
imul
ret
hlt
stos
ljmp
mov
lret
pop
mov
push
hlt
aad
jnp
mov
push
imul
lods
lock
mov
mov
int3
shrb
pop
cltd
xchg
dec
in
cmp
addr16
jle
subl
das
jl
xor
xor
fs
call
dec
test
lcall
cltd
adc
inc
inc
sub
pop
dec
dec
pusha
cmp
push
pop
ja
and
adc
dec
mov
test
push
loopne
dec
inc
test
cmc
outsb
add
mov
cmpsb
push
add
jne
lea
jbe
scas
xchg
sub
bound
mov
mov
mov
jle
test
or
cltd
mov
jle
lods
mov
ret
xchg
sub
stos
mov
pusha
std
popf
mov
addb
fcmovnbe
outsb
lods
mov
cmc
sbb
fwait
stos
and
fnsave
nop
add
test
xchg
scas
lods
sbb
dec
leave
mov
push
jno
jo
test
jns
lds
sbb
mov
fwait
loope
es
or
push
inc
xchg
jle
out
mov
icebp
popa
orl
pusha
dec
sarb
pop
ret
cmp
add
ffreep
add
movsl
cmpsb
and
adc
push
cmpl
cmp
enter
jge
push
scas
mov
fwait
fs
xchg
sbb
push
mulb
or
xchg
leave
int
jmp
mov
cmp
sub
cmp
dec
fistps
xchg
mov
dec
pop
adc
jmp
adc
sahf
pusha
rorl
or
push
or
pop
filds
les
ss
jg
stos
xchg
mov
push
into
jne
mov
test
mov
mov
mov
sbb
lds
subb
ret
loop
clc
mov
jns
outsl
lahf
push
dec
mov
fsubrl
add
xor
ja
imul
dec
pop
std
cld
xchg
roll
js
sbb
add
fwait
cmpsl
pop
and
enter
xor
or
jo
ljmp
jp
cmp
out
dec
pop
or
pop
hlt
hlt
test
jl
fildl
pop
inc
push
jbe
lods
cmp
in
push
mov
adc
scas
push
bndldx
and
fstpl
jb
notb
movsb
sahf
cs
add
movd
call
xor
mov
out
rol
jb
pop
cmp
push
fst
addr16
xor
in
test
je
add
cmp
and
push
insl
stc
je
cld
jae
cs
cwtl
push
lahf
rol
jne
cld
pop
sti
clc
in
jl
pop
cmp
std
jo
in
js
pop
mov
and
out
mov
dec
dec
push
ret
js
xor
adc
push
mov
ljmp
jmp
mov
fisubs
mov
daa
lcall
mov
fiaddl
or
add
and
push
jmp
jg
out
bound
iret
fwait
cmp
push
xlat
inc
cli
jne
jge
mov
sbb
sarl
imul
mov
lcall
mov
loope
dec
xlat
fistpl
sahf
syscall
mov
jp
stos
into
scas
adc
rolb
push
inc
popa
aam
ja
pop
push
test
sub
adcb
dec
mov
inc
into
lahf
pop
sbb
cmp
sub
cli
push
dec
aaa
push
repnz
mov
dec
dec
xchg
xlat
imul
mov
xchg
jle
cmc
int3
mov
dec
out
mov
add
cmp
push
cmp
xchg
cmp
lcall
jnp
fcomps
icebp
lock
rcrl
dec
pop
and
sub
mov
test
clc
out
dec
stos
cmpsl
daa
mov
les
movsl
push
mov
ret
xor
push
lahf
and
in
clc
shll
setp
mov
test
adc
rcll
adc
pusha
xor
or
es
pop
sbbb
jno
sub
adc
popf
clc
cmp
int3
jae
decb
jge
and
push
or
fdivr
stc
sub
dec
rcr
sbb
dec
cwtl
xor
imul
xor
inc
mov
sbb
sahf
push
dec
inc
xchg
sub
xchg
jmp
in
ljmp
in
addl
sub
test
and
popf
xor
fcom
fisttps
xchg
mov
pop
es
ret
aas
hlt
sub
add
sbb
xchg
mov
ss
push
icebp
mov
pop
pushf
cmp
incl
lret
ljmp
push
cmp
lock
dec
test
icebp
insl
das
mov
bound
ret
and
pop
into
enter
sub
int3
push
mov
or
mov
ret
cmpsl
shlb
mov
mov
sub
cmp
test
inc
xlat
push
out
inc
mov
leave
xor
in
add
push
out
lea
pop
or
jle
xchg
sbb
cmp
nop
xchg
sub
pop
inc
pop
or
mov
pop
sub
repnz
jne
movsb
jno
insb
mov
xchg
pop
mov
shlb
and
mov
cs
mov
and
push
mov
enter
jle
aaa
dec
stos
inc
push
or
xchg
fdivrs
bound
cmp
add
mov
test
int3
in
cmp
std
pusha
aad
popl
popa
rclb
fcoml
mov
pop
movsb
add
inc
pop
stos
inc
mov
cmp
lcall
not
xchg
xor
cmp
lods
push
dec
notl
fs
call
xchg
sbb
mov
testb
lods
push
pop
out
pop
aam
mov
repnz
sub
pop
inc
xor
nop
cmpsl
ja
pop
xor
add
shr
mov
mov
arpl
test
in
jmp
mov
lock
lods
mov
jp
or
in
sbb
ljmp
mov
movsb
ljmp
adc
jb
scas
bound
pop
jae
in
cwtl
xchg
sahf
push
push
mov
jmp
rcrb
pusha
jbe
je
cmpsb
xchg
dec
inc
stc
pop
cmc
sub
leave
add
popf
xor
imul
jp
dec
fiaddl
inc
in
mov
into
loope
xchg
insl
pop
add
lods
sub
lcall
mov
sbb
notl
mov
shl
mov
sbb
or
cmp
lea
add
push
push
push
adcb
push
ss
sbb
mulb
dec
inc
fdivrs
push
mov
jo
ret
pop
jo
mov
jnp
imul
sbb
adc
inc
dec
push
cmc
adc
xchg
sub
add
mov
mov
xchg
xchg
test
rcrb
xorb
iret
push
xchg
dec
push
sahf
sarb
stos
enter
aaa
jge
daa
sub
sub
or
out
sub
mov
divb
pop
fstpl
into
outsl
mov
lods
mov
jg
andb
insb
xchg
aaa
das
hlt
std
outsl
pop
pop
bound
shrb
mov
lcall
fs
dec
jno
test
fildl
mov
sub
dec
dec
dec
subl
test
lret
mov
pusha
sar
adc
mov
test
inc
sar
add
push
int3
bnd
or
inc
gs
xlat
cltd
xchg
and
jnp
dec
test
adc
insb
dec
push
mov
mov
rcrl
push
xlat
loop
mov
clc
fwait
cwtl
fs
jp
test
inc
xlat
ret
fs
pop
add
cmp
mov
mov
sbb
adc
ss
fnstenv
xchg
aaa
push
aam
pop
sub
out
std
mov
flds
pop
mov
cld
mov
fiadds
mov
ja
add
test
loop
outsl
jbe
add
cmpsb
testb
sbb
inc
adc
mov
sbb
insb
js
hlt
jp
cmp
pop
imul
inc
and
inc
lret
adc
das
incl
sbb
popf
sbb
test
imul
xor
shr
adc
cwtl
push
xchg
pop
enter
stc
lods
fmuls
cmp
cltd
bound
pop
push
push
mov
xchg
push
xor
jns
sub
push
xchg
mov
mov
dec
fwait
clc
cmpl
and
pop
nop
xchg
jo
cmpsl
pop
nop
pop
pop
mov
pop
clc
imul
addr16
je
xchg
fldenv
leave
test
pop
pop
stos
cmpsb
xchg
lret
movsb
fwait
clc
mov
loopne
sbb
lahf
cmp
and
shlb
dec
push
pop
nop
jo
and
xchg
popf
jmp
jns
pop
mov
lcall
inc
cmc
loope
call
or
sbb
imul
cli
loop
mov
fisubrs
sbb
test
out
addl
adc
ss
rorb
sbb
pop
dec
jle
sub
movb
xchg
stc
std
jb
incb
inc
inc
shll
xchg
icebp
push
fldl
xor
in
fs
arpl
pushf
popa
add
adc
dec
dec
cmp
or
idivl
add
xchg
cmp
mov
mov
add
nopl
fwait
inc
pusha
jmp
out
ret
loope
sbb
cmp
enter
xlat
jbe
cmp
std
mov
loopne
mov
loopne
dec
popf
int3
cmp
sbb
outsb
mov
fistl
shl
and
add
lcall
add
inc
cmp
sarb
mov
clc
or
push
loopne
std
mov
pop
shrb
mov
lock
test
pop
mov
ret
mov
and
adc
jo
mov
sbb
sbb
stc
or
push
jnp
pop
out
xor
sub
xchg
xchg
test
rcl
xchg
mov
daa
mov
aad
inc
fmul
cmc
sbb
das
mov
jb
clc
mov
pop
and
scas
adcl
adc
jmp
xchg
in
lock
pop
xor
cmpsb
out
dec
fldcw
popf
jnp
ljmp
ljmp
in
inc
or
pop
sbb
hlt
xchg
sub
mov
js
int
inc
call
push
movsl
pushf
push
je
popf
xor
or
cmp
mov
adcb
sub
loop
inc
ds
cmp
add
sbb
mov
cld
adc
xor
xorl
add
out
xchg
sbb
mov
or
pop
push
dec
outsb
add
loopne
mov
inc
push
imul
mov
lods
jge
mov
inc
fwait
lret
out
loop
sbb
outsb
std
sub
popa
jl
or
fbstp
es
hlt
pop
xchg
and
push
mov
movups
inc
dec
ljmp
jb
sti
sub
std
mov
xor
in
orl
mov
or
jp
scas
mov
sbb
push
xchg
pushf
inc
fmulp
imulb
movsb
jae
jno
stc
and
cli
jb
add
jns
loop
sbbb
add
xchg
jae
or
std
mov
xchg
shrb
iret
push
idivb
fwait
cli
test
sub
test
and
or
sub
lret
mov
out
hlt
adcb
add
test
sbb
std
pop
adc
lods
stos
es
into
dec
in
lret
cld
and
add
js
nop
stos
call
sbb
xchg
ss
fcompl
ret
inc
fsubrs
pop
adc
gs
loopne
adc
popa
add
das
loope
andb
mov
dec
clc
xchg
dec
sti
mov
sarl
jge,pn
enter
jb
mov
imul
jns
imul
ret
and
fmul
sub
adc
lret
add
addr16
pop
xor
dec
stos
repnz
loopne
fnsave
jecxz
out
push
dec
fbld
cmpsb
mov
cwtl
push
fcoml
dec
mov
mov
push
add
push
mov
pop
push
inc
stos
sub
pop
loopne
dec
popf
je
and
dec
test
xor
cmp
ss
mov
cltd
lods
ds
push
repz
xchg
xchg
push
cmp
scas
xchg
je
jle
mov
in
fs
nopl
sbb
das
jl
stos
push
ds
inc
out
jmp
clc
int
repnz
sbb
pushf
dec
or
cmpsb
mov
sbb
cmp
adc
sbb
dec
shlb
loopne
push
mov
and
test
mov
leave
inc
in
pop
inc
pusha
nop
shr
clc
aad
retw
std
inc
cld
ljmp
mov
sub
lods
lcall
cmp
sbb
and
push
ficoms
cwtl
das
mov
and
or
jle
scas
push
fwait
test
test
rcll
jo
sub
ss
dec
push
hlt
push
imul
dec
lock
add
aad
stos
dec
fbstp
aaa
jbe
es
stos
xchg
jp
stc
into
jge
sbb
stc
or
out
push
insb
cld
xchg
xchg
outsl
shll
fstl
sbb
jo
ror
aas
or
inc
mov
ljmp
shll
mov
sub
nop
xchg
pop
mov
mov
call
lcall
hlt
js
bound
test
scas
test
pop
enter
stc
movsl
andb
push
sbb
shll
ret
sub
rcrl
inc
out
mov
iret
mov
sbb
and
dec
fsubs
mov
mov
cmc
mov
lea
adcl
movsl
pop
inc
fmuls
push
loop
mov
adc
std
imul
mov
and
cmc
or
mov
mov
jecxz
adc
or
adcl
mov
divl
fdivrs
aaa
lret
fbld
mov
dec
xor
aad
adcl
in
cs
inc
sub
aam
cltd
push
pop
lods
cmp
lahf
push
in
sbb
cmpsl
sbb
js
pop
push
mov
ljmp
sub
jns
test
or
sbb
lods
jns
push
icebp
mov
mov
in
cs
in
push
imul
mov
imul
test
xor
pop
push
cli
sarl
insb
in
sub
jp
xchg
lods
cs
xor
mov
aaa
stos
or
xor
arpl
adc
inc
cmpsl
insb
shl
aas
adc
and
add
insl
in
xchg
popl
push
mov
and
fs
add
xor
cltd
inc
test
test
test
pushf
inc
std
or
mov
jns
pmaddwd
pop
mov
dec
loop
out
test
cwtl
out
imul
and
lahf
push
ja
stc
imul
imul
divb
ss
push
dec
xchg
add
stos
xchg
sbbl
add
mov
adc
mov
mov
in
adc
xor
addl
jb
jno
add
lahf
clc
stos
shrb
jae
jl
mov
xchg
or
xchg
sbb
shrb
lods
or
leave
into
cmp
mov
xlat
shlb
mov
mov
test
mov
setle
add
rorb
and
jmp
or
mov
xchg
out
xor
or
cmc
adc
leave
or
scas
pop
scas
pop
cmp
es
loopne
inc
fidivl
sti
cwtl
das
sub
stc
sub
pushf
data16
int
or
xlat
xchg
sbb
cmp
mov
in
jecxz
and
pop
or
cmp
xchg
bound
push
hlt
xchg
push
int
cmpsb
cmp
icebp
add
push
popf
inc
data16
xor
jl
jns
mov
push
mov
stos
in
inc
jmp
adc
aam
jnp
int
and
xorl
testl
mov
loope
testl
sbb
rolb
inc
insb
lret
ljmp
data16
fisubs
xchg
lret
cmpsb
inc
sub
enter
jnp
mov
add
mov
int3
sub
or
push
mov
fstp
push
push
push
pusha
lret
mov
add
repnz
inc
sbb
clc
sahf
int
ds
mov
jno
lahf
mov
jnp
or
xchg
shrb
push
or
cmp
lea
test
fstl
mov
imul
mov
pop
push
adc
xchg
int3
sbb
mov
lcall
mov
fidivrs
xor
jae
add
mov
sbb
dec
bound
or
adc
inc
in
adc
push
arpl
hlt
xchg
xlat
in
outsl
ljmp
lahf
decl
or
push
pushf
push
pusha
adc
pop
enter
cmp
test
das
cmpl
xchg
xlat
push
divb
roll
or
adc
add
dec
and
cmc
push
xlat
je
xor
movsb
xlat
lret
int
pop
sahf
cmp
pop
mov
adc
in
adc
rcl
xor
dec
aad
mov
mov
decl
adc
ss
pop
call
cmp
add
pop
mov
mov
into
adc
push
or
inc
lods
aaa
shll
popf
fildll
push
out
addr16
cmpsl
popa
inc
cmp
mov
jmp
nop
push
cmp
in
arpl
fs
mov
in
das
movsb
xchg
mov
xchg
fstpl
lds
scas
test
enter
mov
insl
xor
jl
push
cld
outsl
pop
jbe
cmp
mov
and
mov
or
mov
nop
aad
hlt
mov
fsubs
shrl
pop
call
push
inc
adc
sub
bound
notl
out
push
int3
adc
cwtl
mov
mov
cli
push
mov
aaa
ljmp
cmpsl
ds
inc
stos
movsb
pop
loope
sub
movsb
frstor
pop
inc
mov
fs
int
mov
or
xor
and
cmp
sbb
lods
mov
scas
inc
shl
leave
enter
movsb
pushf
test
roll
stc
jbe
rcrb
adc
add
mov
cmpsb
jae
aad
adc
sub
cltd
lods
inc
ret
repnz
lret
xor
popa
push
call
cld
xchg
mov
cltd
fidivl
push
cmpsb
pop
hlt
std
daa
aad
std
ss
in
mov
test
xchg
gs
mov
sub
cmpsb
mov
nop
subb
nop
js
ret
fs
frstpm(287
mov
cwtl
lods
xlat
dec
mov
out
rorb
decb
add
xor
xchg
outsb
xor
push
mov
ret
and
cli
sub
lret
or
dec
dec
int3
jo
fisubs
jg
cmpsb
mov
fwait
pop
dec
jo
aas
mov
clc
xchg
cmp
clc
addr16
aad
mov
or
daa
outsl
insl
mov
imul
jbe
aaa
mov
iret
dec
es
adc
mov
arpl
adc
sub
cmpsb
jle
mov
insb
add
outsl
pop
stc
push
das
mov
loopne
loopne
out
gs
cli
fld
cs
push
sub
pop
ret
repz
nop
xor
notb
out
aam
xchg
mov
jno
mov
inc
nop
xchg
orl
sbb
mov
xchg
in
test
and
inc
aam
and
xor
decb
xchg
add
mov
idivl
push
lea
pop
xor
and
lds
sbb
pushf
add
push
repnz
sub
in
pop
shlb
repnz
mov
push
jp
outsl
sahf
adc
mov
arpl
ds
dec
stos
and
in
ds
repz
imul
xchg
pop
repnz
or
cltd
jae
jge
jns
mov
subb
push
lea
cltd
xchg
addr16
cwtl
inc
lret
and
sti
cmp
pop
and
dec
lods
scas
jns
mov
fnstenv
cmp
push
jp
lea
in
mov
pop
pop
fs
enter
mov
push
sub
rclb
sub
add
test
int
cmp
or
push
nop
jmp
sub
add
sbb
xchg
insb
inc
cmp
push
push
xlat
notb
add
jp
hlt
jae
es
hlt
pop
add
es
push
sahf
cmp
dec
and
xchg
repz
in
ret
mov
dec
dec
mov
and
sbb
outsl
push
or
fisubs
sub
aad
stos
inc
push
mov
leave
pusha
and
iret
push
cmpsb
ret
repz
in
out
repz
mov
or
int
xlat
repz
mov
iret
adc
push
and
enter
add
jl
in
adc
rorb
mov
call
inc
push
sahf
sub
bound
sub
jecxz
shll
pop
addr16
cmovno
daa
jae
and
mov
jne
push
out
ret
jmp
bnd
and
addr16
sbbl
jecxz
pop
popa
and
xor
nop
repnz
cmp
sub
scas
movsb
mov
lcall
mov
sub
rcrb
insl
sbb
ds
dec
repnz
leave
enter
shr
imul
and
jmp
jnp
lcall
mov
fidivl
mov
orl
or
aam
scas
jl
inc
sub
lea
les
jp
popf
into
subl
mov
jae
adc
rcrl
out
popl
jo
ss
jb
push
pop
jbe
dec
mov
aad
mov
popf
adc
inc
es
xor
jge
clc
test
stos
sub
mov
dec
pop
sarb
xor
sub
mov
mov
jge
xchg
mov
inc
test
into
mov
iret
ja
imul
pop
in
xchg
and
mov
mov
cld
aad
nop
mov
cmp
add
sbb
pop
or
add
rcl
mov
icebp
fs
fldt
scas
mov
push
cmp
push
test
movsl
icebp
push
mov
mov
shrb
in
cmp
subb
and
or
sub
jb
lret
fcmovb
sbb
push
sti
mov
adc
addb
clc
test
xor
sub
cli
cmp
xchg
and
aas
popa
pop
insl
sub
mov
push
pop
jnp
subl
or
sbb
in
nop
adc
push
in
es
outsb
dec
jne
add
lret
lods
ret
call
xlat
and
cmp
mov
test
mov
scas
popf
sbb
iret
mov
sub
mov
outsb
sub
dec
call
push
add
scas
mov
mov
xor
repz
loop
mov
fistpll
fcomip
repnz
mov
pop
adc
nop
push
stos
inc
clc
or
loop
xor
arpl
cld
fwait
cmp
in
incb
shlb
inc
cmp
pop
mov
push
sub
adc
es
out
orb
or
jge
daa
ret
sti
or
int3
sub
test
fidivl
sbb
lock
mov
or
jmp
or
aaa
test
sti
shrl
sub
in
movsl
jbe
push
xor
popf
jne
popa
mov
push
mov
mov
adc
sti
mov
push
fisubrl
jns
mov
xchg
rclb
icebp
sbb
out
pop
xlat
cmc
sbb
bound
insb
sbb
rorb
jne
sbb
mov
push
mov
xor
add
xchg
stos
repnz
push
scas
mov
insb
fcmovnbe
cmp
js
hlt
mov
lcall
or
lods
mov
enter
movsb
xor
mov
mov
mov
inc
rorl
mulb
mov
mov
push
lret
xchg
mov
sbbb
test
push
std
pop
aas
xchg
enter
stc
ljmp
lret
cld
add
inc
sarb
fistl
adc
push
loop
gs
bound
lcall
gs
adc
aas
pusha
xor
pop
push
stc
decb
inc
insb
popf
arpl
mov
lahf
ss
add
test
jbe
mov
rclb
jg
pop
jnp
loop
push
stos
test
stos
inc
cmp
mov
ds
mov
mov
mov
fistps
dec
cmp
pop
ljmp
sub
pop
mov
push
popf
repz
push
subb
mov
fcoms
and
xchg
ret
push
das
repnz
mov
mov
xor
bound
in
std
dec
es
push
cmp
mov
filds
movsb
add
cmpl
cmp
cltd
or
test
and
ror
int
imul
mov
jle
outsl
mov
pop
lock
xchg
loop
je
and
loopne,pn
sar
sbb
xor
fwait
xor
mov
sbbb
jge
sbbl
movsl
into
dec
enter
xchg
jmp
fisubs
jecxz
repnz
xor
popa
pop
sub
xlat
inc
shl
inc
test
iret
movsb
cwtl
mov
inc
popa
lods
mov
call
icebp
aaa
dec
cmpsb
sbb
mov
pushf
nop
paddd
push
out
xor
inc
nop
sbb
xor
pfrsqrt
es
pop
xor
xchg
xchg
sbb
dec
fstpt
cs
aad
inc
idivl
je
cltd
push
xor
bound
xchg
or
mov
test
dec
pop
enterw
and
and
movsb
or
jnp
or
es
popf
pop
or
shr
movsb
mov
pop
push
lahf
std
push
shll
leave
mov
sub
rorb
pop
fs
push
cmp
dec
cmc
int
ljmp
mov
jmp
aaa
pop
movsl
repz
sub
shlb
push
lods
dec
xchg
shrb
in
and
or
mov
push
pop
push
push
imul
xchg
fnsave
dec
arpl
pop
cmpsb
into
sub
shlb
loop
push
aam
leave
or
cmpsl
paddsb
ja
xchg
add
or
das
inc
enter
xor
insb
insb
sub
std
push
add
cmpsb
stos
sub
fsubrs
jno
xchg
xchg
xor
sbb
dec
rolb
lcall
xchg
cmp
dec
xor
out
xor
in
clc
and
push
mov
out
adc
xchg
dec
nop
pusha
sarl
push
mov
icebp
enter
or
ret
jp
scas
xchg
push
xchg
in
cmp
dec
inc
arpl
pusha
jle
cmpsb
loop
mov
mov
jbe
add
mov
cmp
add
loope
sbb
xor
push
add
and
popa
mov
pop
push
insl
or
jno
or
xchg
insb
mov
iret
and
stc
aaa
mov
and
rclb
mov
mov
lret
fsubrs
lret
shlb
push
fcmovu
jnp
int3
insb
ljmp
daa
mov
mov
push
shrl
mov
mov
bound
pop
mov
mov
iret
xchg
adc
dec
pushf
push
sub
sbb
fbstp
add
mov
fdivr
adc
dec
jmp
imull
mov
imul
mov
int3
arpl
sbb
addl
xchg
add
dec
push
sbb
loop
imul
add
mov
push
in
rclb
aad
fwait
push
lods
lock
xor
movsl
mov
bound
dec
jecxz
out
lds
xor
jae
mov
test
enter
sub
scas
fstps
xchg
dec
cmpsb
aas
outsl
fmulp
xlat
cld
mov
cmp
fisttpll
pop
dec
push
iret
sti
cmp
xor
pop
fldt
push
xor
mov
cli
jo
cmp
jns
mov
xchg
lods
xlat
pop
inc
sub
cld
push
call
lods
lods
xchg
mov
mov
sahf
shll
xchg
sub
test
ret
bound
push
repz
int
pop
cmp
pop
aas
loop
inc
leave
sbb
ss
out
inc
mov
or
nop
scas
test
lods
inc
mov
out
mov
arpl
xor
fisubrl
or
or
mov
out
hlt
loop
test
sbb
ss
pusha
xchg
pop
jbe
mov
clc
pop
iret
pop
jmp
mov
fidivrs
data16
mov
pop
stos
daa
lock
adc
pop
lret
bound
jae
mov
jbe
pop
fstp
xor
add
addr16
mov
aas
dec
jb
xlat
pusha
aad
xchg
clc
mov
push
int
push
adc
pop
leave
xchg
fldln2
aam
fucomi
fidivs
add
movsl
js
adc
and
inc
imul
ret
popa
sti
jecxz
es
or
sbb
int3
ret
popa
jmp
lss
repz
sub
jbe
or
fmuls
in
push
test
ret
lea
ret
orb
fwait
lods
lock
cs
or
cmpsb
call
inc
mov
ljmp
xchg
adc
xor
jb
mov
fmull
in
dec
and
gs
gs
cmpsb
test
mov
push
pushf
scas
sub
dec
data16
lea
jp
sahf
dec
ss
in
adc
pushf
cmp
jecxz
or
shrb
enter
enter
mov
pop
jmp
dec
sub
adc
adc
inc
lret
mov
mov
fnstsw
pop
data16
jecxz
mov
rcrb
cmp
lret
pop
idivb
arpl
jge
cmpsb
mov
cmpl
insb
inc
sarb
notb
pop
pusha
call
or
pop
jo
ds
movsl
testb
mov
movsb
cmp
sbb
inc
shrl
les
ljmp
idivb
dec
lcall
stos
jbe
cmpsl
lret
int3
dec
outsl
inc
mov
jne
clc
add
add
hlt
or
ds
push
push
pop
pop
adc
add
jb
xchg
cmp
dec
push
andb
nop
repnz
dec
out
stc
popf
pushf
insb
stc
xchg
fadd
jo
jge
sbb
inc
lcall
jmp
ds
test
or
adc
jo
push
loop
filds
push
shrl
pop
cmp
sub
inc
decb
mov
mov
cld
jle
sarb
mull
jge
xlat
or
mov
mov
push
push
rcll
cli
pushf
cmp
cmp
cmpsl
push
in
cmp
std
jle
xchg
mov
enter
sbb
das
stos
push
lahf
sub
in
lahf
mov
sbb
mov
addr16
pop
scas
jg
add
fbstp
adc
fisubs
repnz
lods
insl
add
mov
fnsave
fcomp
das
scas
outsb
and
mov
jno
xlat
add
add
sbb
fwait
rcll
mov
cltd
icebp
jmp
or
fidivs
rcrl
test
inc
xor
pop
test
shrl
dec
std
cmpsb
aam
test
scas
pop
imul
cmp
outsl
xor
jns
xor
cmc
int3
pop
jg
xor
insb
js
pop
mov
stos
outsb
test
icebp
arpl
push
filds
inc
mulb
sub
pop
xor
dec
push
movsl
inc
pop
aam
adcb
cmp
out
mov
stos
mov
cli
int3
xchg
add
dec
bound
enter
dec
xchg
out
jne
lahf
fidivl
fidivl
loopne
jno
jecxz
jnp
pop
cld
mov
fchs
fiadds
es
rclb
adc
xor
bound
cld
mov
push
shrb
or
push
mov
dec
cli
jge
test
scas
jno
insl
push
ds
addr16
arpl
popa
js
adc
mov
sti
sbb
cmpsl
pop
sbb
sbb
dec
mov
jp
data16
adc
inc
mov
push
dec
mov
pop
mov
push
sub
mov
ss
pop
int3
js
repz
aam
jne
pop
mov
repz
and
cli
das
adc
cli
fdivs
dec
dec
xchg
push
mov
pop
cmpsb
pop
sarl
cmp
dec
jl
imul
cltd
jle
out
mov
stc
ds
pop
fbstp
je
sbb
cmpsl
xor
xchg
jge
js
ficoml
bound
dec
sub
mov
mov
mov
fstpl
jno
mov
cld
mov
movsl
icebp
cld
nop
xchg
sub
movsl
xchg
sub
sbb
xor
push
lock
popf
test
sbb
out
and
or
mov
and
movb
add
dec
mov
ds
mov
adc
fldt
scas
ss
sub
mov
outsb
subl
mov
mov
adc
mov
leave
neg
jne
cmp
mov
rclb
hlt
mov
pop
add
xorl
pop
adc
jbe
mov
call
in
leave
in
xor
out
int3
test
mov
push
or
test
mov
mov
adc
dec
push
in
xlat
xchg
mov
aam
jg
mov
dec
push
outsb
dec
call
inc
cwtl
push
das
mov
jae
or
js
xchg
arpl
cmp
mov
pop
leave
and
jo,pn
xlat
sub
dec
adc
in
aam
cmp
jbe
stos
sbb
add
and
adc
jnp
imul
add
imul
add
jle
cmp
push
iret
movb
inc
xor
aaa
out
xlat
or
fistpl
jo
sub
dec
sbb
mov
fwait
cs
jne
cmp
mov
call
pusha
aad
sub
xchg
adc
mov
rcll
lods
enter
stos
mov
sub
jb
int3
shlb
inc
sub
inc
cld
mov
loopne
push
pop
sbb
lds
sti
inc
push
sub
adc
jbe
divb
dec
scas
fsub
fs
call
jae
cmp
lret
sbb
or
call
fwait
sti
pop
cmp
jecxz
sub
dec
test
push
and
inc
movsb
js
sub
out
into
jbe
xchg
das
add
pop
call
push
fwait
add
push
push
add
movsl
cmp
aas
rcr
pop
rol
loopne
sub
inc
xor
out
les
and
into
push
mov
ret
or
push
je
dec
push
mov
faddl
cwtl
clc
dec
negl
out
out
xchg
les
add
pop
sahf
and
jle
outsl
std
jo
cld
add
arpl
inc
into
ss
shrb
mov
out
test
jecxz
xor
fidivs
pop
push
push
xchg
js
hlt
add
and
sub
dec
adc
xchg
xchg
ror
pop
jae
jmp
sbb
push
repnz
cmp
in
ja
add
fnstsw
sbb
mov
xor
fidivrl
jg
cmp
andl
mov
cmp
push
mov
shl
gs
cmpsl
out
sub
adc
push
jmp
repz
and
js
xor
fwait
jle
push
sub
outsb
push
xchg
jne
fucompp
repnz
fsubr
push
test
and
xchg
cmp
ja
sbb
push
fsubr
xchg
clc
cmp
inc
std
call
inc
dec
outsl
adc
inc
out
push
fmulp
gs
fidivs
fdivrl
scas
mov
call
icebp
xchg
sbb
push
mov
add
cmpps
push
or
fwait
ret
adc
je
test
lret
adc
or
ret
imul
in
jg
xor
jle
insl
enter
out
jmp
filds
jnp
xor
push
xor
xor
lock
push
ffreep
shrl
shll
enter
ljmp
shlb
pop
pop
mov
xchg
mov
mov
sub
fidivrs
pop
mov
addl
mov
ret
sub
push
lahf
inc
cmp
sahf
pop
or
push
jnp,pt
cmp
xor
jo
aam
stc
jne
mov
fwait
mov
push
mov
pop
inc
fimuls
cmp
mull
test
adc
lcall
gs
add
and
mov
sub
pop
mov
cmp
pushf
inc
popa
mov
mov
xor
pusha
jg
sbb
loopne
je
nop
pop
adc
pop
loope
xchg
add
ret
jp
incl
hlt
pop
or
jge
lcall
addr16
and
push
mov
push
shr
jo
jecxz
loope
lea
sbb
fnstenv
std
cmp
pop
out
dec
push
jbe
xor
fists
mov
repnz
and
inc
or
aad
imul
push
mov
lods
add
cwtl
imul
xchg
or
mov
adc
popf
mov
fisubs
xchg
ret
pop
out
mov
pushf
jo
sub
mov
fldenv
pop
inc
and
popa
inc
into
sarb
jo
push
cmp
add
cli
jge
sub
dec
xchg
inc
daa
xchg
mov
or
jno
and
pop
lcall
loopne
pop
out
repnz
xchg
fsubr
push
mov
lock
lods
add
mov
xchg
pop
scas
in
mov
test
push
dec
ds
loop
add
mov
dec
xor
negl
xchg
sub
sbb
daa
mov
add
mov
sub
dec
mov
mov
mov
shrl
sub
cmp
cmp
adc
fs
push
call
and
push
movsl
push
mov
shr
stc
push
xchg
shll
jns
scas
dec
es
dec
dec
jbe
sbbl
inc
scas
je
sbb
outsl
out
mov
pop
insb
cmp
jecxz
dec
sbb
clc
push
mov
or
cmpsl
pop
mov
gs
lahf
jp
pusha
loop
in
pop
xor
and
hlt
sbb
and
push
mov
loopne
pop
and
sarb
ret
cwtl
xchg
push
addps
pop
sbb
mov
pop
push
adc
and
cmp
jge
jmp
iret
adcb
sub
into
push
inc
gs
or
lret
popf
sbb
xchg
push
add
add
fnstenv
fs
xor
or
leave
icebp
add
sti
pop
pop
pop
sahf
add
mov
test
movsl
shlb
ljmp
pushf
mov
jno
aaa
add
inc
jno
xor
xchg
mov
dec
movsl
jno
insb
jecxz
int3
mov
xor
xlat
jne
fistl
enter
fistpll
mov
enter
xor
mov
cmp
adcl
cs
insb
xor
cmpsl
or
mov
cmp
pop
lock
insl
aad
call
clc
pop
pop
sti
or
cmp
mov
fs
outsb
jl
mov
cmp
rol
push
jne
jnp
xchg
or
cs
pop
xchg
sbb
jg
sub
gs
jae
data16
push
and
xlat
repz
jno
mov
mov
dec
cmc
mov
xor
pusha
nop
or
jg
ljmp
iret
push
sub
lcall
dec
fs
xrelease
mov
pop
inc
stc
insb
push
lds
adc
sbbl
fwait
xchg
stos
jl
inc
push
xchg
into
and
aam
inc
xor
mov
or
push
push
movsl
sbb
test
jmp
fldl
pusha
jge
xchg
xor
mov
add
addr16
adc
inc
inc
sub
dec
lahf
repnz
stos
shrl
mov
mov
cmp
out
scas
fcomi
ja
pop
lret
inc
adc
loop
lret
cmp
out
mov
ja
inc
decl
es
cmpsl
jo
sbb
out
shl
pop
lea
imul
cltd
sti
lret
fnstcw
loopne
inc
jmp
pop
ljmp
mov
rorb
fs
int3
add
outsb
jbe
arpl
push
shlb
or
out
push
dec
sahf
lret
into
out
out
add
and
js
test
fisubrl
mov
imul
xchg
insb
iret
xchg
std
xor
jmp
insb
inc
aas
scas
gs
or
sbb
imul
mov
cwtd
cmc
add
jb
pusha
and
or
dec
cmp
cmp
pop
push
shlb
repnz
mov
jecxz
mov
adc
cwtl
das
lahf
sbb
jp
scas
lahf
adc
js
popa
jno
cmpsl
pop
pop
jne
nop
stos
mov
fstp
push
je
sbb
dec
scas
cmpb
nop
gs
das
pushf
cmp
insl
hlt
cmp
jge
xchg
hlt
pop
iret
mov
inc
dec
push
icebp
repnz
out
or
mov
sbb
lds
daa
adc
jbe
sub
and
test
jne
cmpb
popf
push
mov
mov
call
add
xchg
mov
mov
xor
xor
pop
fcomps
adc
xlat
aad
je
popf
in
cmp
ljmp
cmp
stos
sbb
mov
mov
aas
dec
movntq
sahf
imul
push
xor
in
js
fdivrl
cmpsl
cmp
push
out
aam
outsb
pop
in
stos
orl
icebp
movsb
data16
dec
addr16
in
xchg
mov
fwait
imul
and
sub
ss
inc
mov
cmp
fnstcw
mov
movsl
ds
mov
sbb
gs
lock
jno
into
mov
xchg
loopne
pop
inc
jg,pt
outsl
push
ss
adc
ss
dec
outsl
mov
inc
fnstenv
fnsave
cmp
and
jmp
jmp
mov
fldcw
gs
flds
push
lods
jmp
mov
loopne
or
xchg
fcmovb
scas
sub
inc
pop
rorb
mov
lret
jbe
sub
repnz
inc
cmp
xchg
cmc
sahf
or
adc
ss
jo
xchg
ret
out
test
out
lods
cmp
dec
sub
nop
aaa
lods
mov
pop
xor
mov
nop
push
in
negb
out
sub
mov
jecxz
test
lods
insb
outsl
cltd
jae
lds
aad
mov
fbstp
jno
loope
mov
test
orl
xor
rolb
xchg
jns
lcall
jno
addr16
push
push
push
xchg
xchg
push
inc
xor
xchg
inc
fistps
xchg
sub
loopne,pt
sub
jg
push
lds
add
inc
jmp
pop
popa
ljmp
mov
cmc
sub
dec
and
and
dec
cmp
push
pop
out
sti
xor
sbb
xchg
ret
subb
out
jle
movsb
cmp
sub
mov
push
pop
mov
dec
mov
push
sub
movsb
ds
hlt
xchg
and
push
xor
outsl
rclb
insb
test
hlt
jl
pop
mov
xor
imul
loopne
addr16
sub
fwait
data16
add
stc
push
cld
mov
int3
xchg
inc
insb
push
sahf
cmp
iret
aaa
hlt
sbb
mov
sbb
cmp
jbe
cwtl
xchg
jge
add
repnz
dec
mov
jnp
fiadds
xor
ja
jge
and
out
jp
pop
sub
push
lods
std
in
dec
inc
ret
lahf
xor
dec
in
lret
outsl
test
mov
leave
adc
ljmp
sahf
push
mov
add
mov
mov
xor
shr
xchg
ljmp
sar
add
mov
and
mull
shrl
jl
sbb
arpl
bound
jle
mov
insb
insl
jge
xor
xor
sub
sbb
in
push
insb
repz
mov
fmull
das
ret
inc
cltd
fdivrs
dec
mov
mov
sub
repz
mov
movsl
push
pop
imul
popf
lods
inc
or
data16
jg
xchg
mov
inc
fstps
aaa
fdiv
jp
aad
mov
push
and
fisubrs
imul
sti
das
push
aas
pop
push
repnz
les
dec
arpl
mov
add
lret
out
xchg
jae
lret
push
mov
sbbb
mov
jnp
mov
hlt
and
test
xchg
repnz
aaa
xor
ret
hlt
bound
cmpl
out
hlt
jmp
js
aad
sbbl
push
sbb
test
jae
pusha
mov
inc
lret
imul
ret
xchg
lock
inc
push
sahf
scas
sub
mov
cmp
cltd
inc
lods
jne
xor
sub
add
out
sub
lods
inc
repnz
je
stos
dec
sub
out
jne
xchg
add
xchg
jnp
push
mov
mov
js
sbb
cmpsl
pop
test
push
and
iret
push
es
decb
mov
ficomps
push
jg
lock
adc
xor
mov
pushf
in
jns
pop
jne
mov
imul
test
aaa
dec
enter
jmp
sbb
pop
jb
cmp
push
pop
and
jp
dec
mov
pop
fists
lea
addr16
inc
cmp
rcr
leave
jl
mov
popf
xor
imul
or
sti
dec
pop
jns
pop
aas
xor
pop
ljmp
frndint
mov
adc
jmp
ret
add
mov
mov
popa
ljmp
mov
shll
es
add
inc
pushf
cmpsl
and
and
sub
inc
dec
mov
arpl
aam
xchg
fbstp
add
out
inc
push
lea
out
aam
ljmp
les
lea
jns
in
pop
push
push
shrl
inc
xlat
xor
in
aas
mov
mov
les
push
into
mov
mov
into
push
push
xor
sarl
mov
push
pop
xor
mov
cltd
jg
inc
sahf
in
adcl
sbb
mov
mov
or
hlt
adc
inc
adc
dec
mov
inc
cmc
mov
sbb
jmp
sub
out
jne
push
cmpsl
sbb
dec
int
loop
lea
sub
pushf
aaa
jns
sbb
cli
pushf
call
dec
add
xchg
push
xchg
aad
vmovntps
dec
cmpsb
cmp
fwait
mov
int
pop
lahf
and
dec
test
pushf
scas
ds
clc
and
cmp
out
test
inc
nop
cmpsb
jne
daa
in
xor
and
inc
fcompl
test
movsb
aas
call
cmpsb
and
sbb
mov
stc
jno
ficoml
jmp
adc
lahf
int3
inc
push
push
fucomp
pusha
sub
les
cmp
push
in
imul
pop
jmp
sbb
xchg
icebp
inc
cltd
pop
pop
lods
jb
pop
mov
pop
jle
ret
ret
cli
imul
in
or
sahf
nop
daa
mov
in
add
dec
in
and
xchg
pop
push
out
xchg
das
sbb
add
je
aam
psubsb
loop
js
xchg
repz
cmp
lret
jb
or
mov
mov
mov
inc
cld
into
sub
dec
cmp
cmp
sub
les
jb
or
test
and
movsb
js
out
popw
mov
cmpsl
xchg
dec
inc
xchg
and
test
pop
mov
push
imul
sbb
dec
jle
mov
fld
push
sbb
fisttpll
les
push
sbb
or
fnstsw
ja
ret
pop
sbb
mov
add
sbb
mov
jae
xor
inc
insl
dec
jle
jnp
jae
fcompl
and
aam
xor
popa
and
lods
and
out
dec
loopne
or
jecxz
fadd
pop
or
jg
pop
cmp
loop
push
cmp
xor
stc
adc
mov
cmp
jle
sbb
inc
stos
jle
repz
cwtl
pop
out
leave
xchg
jns
lds
lods
push
out
sub
xchg
and
sbb
leave
iret
push
mov
xor
jbe
jl
cwtl
mov
loopne
outsb
addb
and
out
inc
pop
inc
cmp
lock
push
pop
mov
aad
mov
xor
or
stos
lods
inc
jbe
pop
mov
cwtl
lret
jb
sub
mov
scas
sbb
stos
inc
push
cmp
shl
and
adc
jp
mov
jno
mov
cmpl
cmp
lea
inc
mov
jmp
push
mov
jbe
pop
fwait
push
jge
and
jno
xor
hlt
arpl
lods
cmpb
cli
cmp
mov
hlt
into
inc
popf
je
and
mov
and
xchg
shr
enter
dec
loopne
jl
lahf
or
out
test
dec
pop
movsl
mov
sbb
inc
lods
les
ret
movsl
hlt
pushf
popa
xor
cmp
xor
xchg
jge
xchg
ret
stos
cmp
mov
fwait
lock
fisttpl
sbb
sbb
or
push
loop
cmp
fiaddl
mov
push
std
xor
cmpsb
rclb
jmp
lret
jmp
dec
xor
loop
xchg
mov
popa
mov
cmpsl
lea
push
or
xchg
fwait
xor
cmpsb
cmp
mov
jne
push
arpl
pop
aaa
inc
pop
int
int3
in
out
insl
xlat
push
mov
jp
xchg
fnstcw
push
pop
cmp
mov
ss
jg
dec
mov
lock
int
add
fidivrs
push
bound
nop
jo
xor
pop
push
and
pop
cli
pop
and
jmp
and
mov
ja
and
dec
aam
outsl
imul
cld
fnstsw
and
incb
inc
idivl
dec
xor
dec
cmp
mov
push
inc
xor
add
loop
inc
jmp
loope
sbb
daa
mov
xchg
mov
repnz
arpl
xor
xchg
ljmp
jae
and
push
mov
push
or
cmp
sbbb
das
mov
ret
mov
psubq
es
fistl
xlat
sub
and
aam
jp
cmp
popa
andb
lcall
mov
out
out
stos
mov
xchg
enter
push
mov
mov
insb
mov
imul
dec
mov
sbb
xor
std
or
mov
popf
dec
out
xchg
pop
addl
aaa
cli
rorb
out
xor
aam
dec
dec
movsb
mov
scas
and
dec
jecxz
jo
mov
mov
pop
mov
adc
les
sbb
inc
adc
sbb
adc
cmp
ja
pop
mov
sbb
ja
movsl
ret
pop
je
xchg
popf
popf
ss
push
sub
arpl
add
pop
lods
int3
pop
push
cbtw
mov
popa
cs
mov
dec
pusha
cwtl
and
adc
fs
bswap
xorb
fldl
mov
mov
xchg
mov
and
xlat
aad
icebp
iret
and
dec
pop
test
popa
jnp
scas
mov
and
shrb
movsl
in
lds
std
mov
push
mov
mov
lock
mov
loopne
pop
sub
jbe
scas
inc
stc
adc
jbe
inc
call
cmp
in
xor
imul
cmc
push
fidivl
in
daa
mov
rorb
mov
cs
pop
insl
cmpsl
sub
cmc
aam
fldl
xchg
movsb
inc
pop
or
sarl
popa
popf
fwait
subb
and
leave
ret
jbe
insb
xlat
dec
and
xchg
xchg
push
leave
fisubrl
dec
add
je
mov
dec
sub
mov
sahf
rolb
out
xor
pop
lea
mov
or
stos
push
aaa
aam
in
repnz
adc
mov
xor
popa
data16
add
test
lret
pop
in
test
imul
fmull
cmpsb
int
mov
mov
js
js
fisttpl
or
pop
sub
mov
xor
imul
add
adc
mov
aas
clc
sbb
xchg
int3
or
cli
imul
mov
dec
nopl
lds
sub
pop
movups
mov
in
mov
sub
out
jns
orb
pop
jb
fld
pop
add
xchg
insl
pop
insl
pop
push
into
sbb
dec
fcoml
repz
mov
clc
mov
out
testb
sbb
mov
sub
mov
leave
mov
push
mov
xchg
adc
ss
insl
stos
and
pusha
mov
aaa
je
sub
push
xorl
pop
xor
add
dec
in
test
adc
insb
fists
mov
fidivrs
push
imul
adc
jl
enter
pop
gs
or
call
test
push
or
cs
dec
lods
adc
add
repnz
xchg
iret
fwait
sub
jne
or
pop
push
test
movsb
xor
adc
dec
test
nop
add
mov
dec
movsl
xchg
adc
jo
mov
mov
push
mov
jmp
mov
lret
mov
push
sahf
sub
jmp
push
push
gs
lret
xchg
xchg
jns
dec
mov
loop
fiadds
addr16
outsl
push
shll
lea
jno
push
ljmp
icebp
push
das
pop
jp
rcrl
xor
add
push
sbb
leave
mov
sbb
jle
in
add
cmp
jae
shl
dec
repz
popa
xchg
add
or
gs
cmpsb
mov
aad
adc
mov
push
shrl
aaa
push
pop
sub
mov
pop
jbe
xchg
dec
and
mov
stc
rolb
xchg
sbbl
push
movsb
repnz
mov
leave
je
ss
pop
push
cmp
and
pop
mov
or
mov
adc
in
cmp
cmp
mov
sbb
stos
dec
aaa
iret
mov
dec
rorl
sbb
push
aaa
dec
xchg
ss
push
ret
mov
into
cmp
xor
xor
insb
sbb
rclb
cltd
xlat
lock
inc
dec
pop
ret
lock
and
pushf
pop
ss
std
jno
rclb
clc
jl
cwtl
lods
add
push
xor
xchg
cld
pusha
push
test
sahf
jne
sub
scas
sbb
subb
mov
pop
adc
je
out
ljmp
pop
pop
push
gs
jle
pop
jo
xchg
lods
xchg
push
push
push
cltd
fidivs
jne
or
and
xchg
and
cmp
icebp
adc
inc
sub
jb
sti
xor
push
out
jne
push
js
outsb
adc
or
mov
sub
mov
fnstcw
es
jb
fs
filds
jge
jmp
test
fnstenv
jnp
lret
or
or
inc
iret
and
popf
cs
add
into
pop
mov
fcmovnu
jmp
scas
xchg
mov
mov
cmc
icebp
insb
mov
and
mov
cmc
xor
or
mov
data16
inc
jge
test
je
mov
imul
stos
mov
stos
xchg
mov
movsl
vmaxps
mov
sbb
mov
push
outsl
mov
imul
lods
shrb
popf
mov
cmpsb
imul
aam
dec
pop
maskmovq
notl
mov
xor
into
xchg
dec
pop
adc
sub
in
push
jle
dec
mov
mov
xlat
inc
frstor
ja
mov
mov
add
mov
shlb
xchg
cmp
jb
fnstenv
shll
xor
cmp
cmp
xlat
imul
in
add
xor
push
lock
cmp
lods
xchg
and
lods
mov
mov
jae
pop
xchg
fldcw
mov
gs
fsts
jns
jmp
out
xor
add
mov
sub
sub
adc
dec
sub
in
mov
sub
mov
xchg
es
in
and
int3
lods
test
adc
mov
dec
pop
arpl
mov
ljmp
cmp
jg
xchg
pop
test
sub
lret
adc
test
sub
loope
xchg
adc
mov
sbb
in
outsb
cmp
cmc
aaa
mov
out
adc
xorb
add
sub
adc
pop
push
mov
xchg
rcrb
arpl
std
cmp
shr
jg
test
mov
andl
mov
sarb
xchg
dec
daa
pop
data16
mov
inc
xchg
movsb
sub
jp
mov
lret
jmp
cmp
pop
or
insl
std
in
imul
or
adc
push
outsl
push
add
mov
sbb
xchg
lods
negl
add
clc
jp
rcr
cltd
mov
shl
mov
mov
aaa
hlt
push
rorb
mov
mov
push
es
jnp
lahf
out
movsl
add
and
in
mov
cltd
cwtl
sbb
outsl
addr16
xchg
add
int
sbb
dec
sti
popf
mov
into
fsub
cmp
mov
jo
inc
pushf
fidivl
js
into
lea
pusha
xchg
pop
dec
bound
mov
pushf
and
adc
mov
mov
push
inc
icebp
push
stc
push
pop
pusha
into
xchg
cmc
push
lods
lods
adc
jne
punpcklbw
jl
ja
imulb
sbb
jl
sar
loop
push
pushf
jle
jg
rcrl
jge
or
xchg
xor
daa
sbb
fidivs
repnz
mov
mov
imul
mov
push
shrl
cmp
lds
mov
das
cmc
les
lret
bnd
cs
fwait
mov
test
xchg
les
enter
les
lods
dec
repz
jne
lcall
pop
jo
mov
scas
jbe
sbb
imul
neg
jmp
or
fbstp
adc
inc
pop
clc
push
sub
lret
push
or
mov
inc
pusha
jne
adc
adc
rorl
stc
push
in
lods
sub
je
xchg
push
jno
sub
ret
push
jno
shlb
jae
adc
outsl
pop
bndstx
cli
pop
mov
add
cmp
rcrl
data16
adc
mov
je
out
in
jbe
inc
inc
dec
xor
repnz
jno
in
or
and
lods
push
push
jle
and
and
cmp
enter
insl
or
push
or
in
jl
scas
mov
mov
cld
addr16
addr16
jne
or
fistpll
aam
jge
jmp
or
inc
xchg
test
jbe
mov
test
sub
lea
neg
push
and
xchg
sahf
iret
add
shr
sti
push
sub
rcr
dec
xor
outsl
daa
test
xchg
sub
out
lods
inc
lret
sub
inc
sub
test
mov
mov
or
sarl
daa
push
jge
bound
movsl
cld
lods
push
out
push
mov
movzbl
xchg
pop
clc
mov
sub
fistps
sub
pop
insl
ret
dec
sub
in
pop
mov
jbe
xchg
pusha
test
icebp
sub
jge
cs
add
cli
sbb
sbb
andl
mov
sub
aam
pushf
dec
das
jns
movsl
jb
push
inc
lea
xor
ret
push
cwtl
push
cmp
out
shrl
es
cmp
out
mov
shll
xchg
sub
jmp
sub
cmpsl
cmp
jp
pop
xor
repnz
test
in
insb
or
or
adc
push
or
fs
cmp
cli
arpl
sbbb
and
mov
push
mov
cwtl
xchg
xchg
xor
pop
mov
sbb
insl
mov
jnp
out
les
cmp
inc
scas
pop
or
ror
into
pusha
mov
insb
mov
fmuls
mov
inc
inc
xchg
sub
mov
add
sub
mov
xor
fnstcw
shlb
aad
insb
ds
in
in
scas
fidivl
mov
push
scas
ret
cwtl
lds
mov
popa
dec
push
push
ljmp
loop
fsubrs
sbb
in
inc
adc
push
jne
out
cmp
xor
dec
xorb
mov
iret
cld
adc
dec
jbe
std
sbb
dec
push
fs
loopne
hlt
adc
in
test
xor
pop
fcomp
jo
shlb
xor
add
dec
dec
cmpsl
xor
movsb
loop
aam
mov
mov
lods
push
cmp
out
adc
mov
xchg
mov
cwtl
outsb
fwait
stc
mov
ss
addr16
aaa
and
inc
sbb
cmc
jmp
sub
cmc
rolb
bound
cmp
mov
pop
movsb
cmp
ss
sarl
test
pop
sub
cmp
or
mov
push
adc
mov
push
or
addr16
push
sbb
dec
out
repnz
pop
jg
mov
pop
adc
cmpsl
test
flds
xchg
cs
imul
jno
xchg
cwtl
das
leave
and
rorb
push
sub
lcall
jmp
sbb
stos
inc
xor
cli
stc
negb
iret
xor
cmp
push
cwtl
daa
test
fnstenv
push
mov
ret
daa
cmp
pop
dec
outsl
add
aaa
testb
mov
inc
mov
or
aad
dec
loope
dec
ret
test
in
inc
mov
repz
lods
leave
repz
jns
xlat
cmc
bound
jle
enter
jle
test
sbb
cmp
test
adc
jmp
cltd
lods
das
pop
ret
call
fildll
in
dec
dec
aam
push
push
mov
adc
cmpsb
cmp
or
rorl
xor
add
inc
fs
jo
mov
leave
lcall
xchg
clc
inc
out
sti
sub
mov
test
jo
push
inc
lods
ds
daa
rcr
fists
fs
push
cs
add
into
cmp
push
cmc
shr
sub
test
lret
scas
jge
adc
lds
data16
dec
push
sub
jo
xor
dec
lds
sbb
dec
pop
mov
or
xor
fistps
and
int
icebp
ja
out
sbb
insl
ret
lods
in
add
addl
ss
inc
popa
mov
insb
xor
jecxz
xor
dec
nop
scas
out
dec
and
pushf
dec
push
hlt
add
cs
das
lahf
shrb
lods
je
dec
into
ficoms
rcpps
inc
dec
sti
xchg
scas
and
loop
mov
jb
jge
sub
sub
imul
loopne
mov
lock
pop
call
dec
xor
xchg
push
or
or
aaa
ret
repz
pop
xchg
cltd
and
jg
shlb
push
pop
pop
test
popa
stc
mov
mov
cld
loope
pop
fcmovnu
jnp
or
icebp
aaa
dec
adc
xor
mov
test
subb
inc
ficoms
add
ja
mov
shll
dec
sar
sbb
mov
pop
fs
jbe
nop
jnp
inc
and
inc
mov
push
or
bound
cmp
repnz
xchg
pop
arpl
addb
cwtl
daa
sti
pop
test
and
push
and
xchg
sub
add
lock
cs
xor
pop
dec
inc
addb
push
fsubrs
or
and
adc
lret
sbb
imul
sbbl
cmpsl
repnz
cmpsl
sbb
into
ja
and
push
push
jno
shlb
sub
stc
pop
notl
loope
sbb
inc
leave
movsl
es
popw
push
pop
scas
cmpb
xchg
lods
call
icebp
jno
adc
push
lods
gs
pop
fists
popl
lret
sti
push
add
mov
fsubl
pop
cmpsl
dec
loopne
mov
call
or
shll
xchg
nop
xlat
rclb
pop
out
fstl
mov
jl
xor
sbb
data16
fwait
push
inc
sbb
test
push
pop
jne
mov
push
iret
lds
stos
push
jbe
inc
mov
test
js
in
daa
data16
stc
shrl
cltd
lods
push
dec
stc
jp
inc
mov
push
sbb
popa
xchg
adc
and
repnz
jp
push
test
iret
into
mov
and
out
out
jmp
cmp
lods
aam
aas
loop
addr16
mov
pop
fisttpll
xlat
mov
push
xchg
push
mov
roll
pop
adc
dec
loopne
pop
xor
shrl
loope
sub
mov
add
icebp
imul
xchg
mov
adc
or
movsl
sub
sub
pop
fs
aas
cmp
clc
and
mov
std
or
mov
sbbl
aaa
arpl
stos
mov
adc
add
arpl
call
jae
sbb
in
jno
jle
jae
ss
jne
xchg
lods
jg
cli
xchg
fistps
mov
sti
scas
xor
out
scas
inc
sbb
sub
shrb
dec
data16
jl
jg
mov
dec
call
inc
dec
fidivl
sub
cli
jecxz
sub
inc
mov
dec
lcall
jno
xor
jge
or
mov
loop
dec
adc
push
nop
lcall
int3
xor
and
int
dec
sub
or
and
push
div
add
movsb
sbb
cmp
jo
testb
sub
dec
adcb
mov
and
mov
aas
inc
cld
pop
mov
into
add
repz
xchg
dec
cmp
lods
mov
push
sarb
call
lea
push
push
scas
mov
iret
adc
cmpsl
fdivl
imul
cmc
jp
mov
testl
and
dec
ss
dec
in
sub
xor
shlb
stos
mov
fcomip
xchg
adc
ljmp
jno
cli
or
mov
fwait
pop
lret
rorb
mov
push
stos
pop
dec
negb
cld
sbb
cmpsl
jno
test
loopne
cli
push
cld
sbb
xor
lods
shrl
in
jb
jo
jecxz
pop
cmp
mov
incb
xchg
iret
xchg
inc
fisttpl
push
mov
rol
popa
mov
cld
lahf
sbbl
mov
push
and
mov
push
mov
pop
cmpsl
out
imul
shlb
or
cmp
mov
sbb
push
cmp
or
in
sub
nop
ss
jle
aaa
mov
cmp
lods
mov
pop
les
repnz
cmp
cmp
jae
inc
xchg
or
dec
push
dec
loopne
outsl
push
xorb
jecxz
xlat
ds
xor
push
sbb
dec
aaa
sar
jecxz
ss
cwtl
add
sbb
frstor
addr16
mov
aas
jo
sbb
shr
idivl
mov
in
jnp
lock
mov
js
xchg
cmpsl
push
xor
jecxz
adc
idivl
mov
scas
inc
push
int
int
cmpsb
mov
mov
ret
sub
in
cmp
xchg
adc
aas
addl
mov
push
call
jmp
in
shlb
xor
dec
add
or
lock
fbld
mov
stc
pusha
ss
out
stc
movsb
adc
xor
inc
jmp
add
pop
lcall
call
adc
dec
inc
dec
punpckhbw
outsb
xor
xor
repz
imul
xchg
push
or
add
lods
mov
ss
sub
popa
jno
cli
sub
pop
gs
ja
cmp
fsubr
inc
cli
int
test
pop
jne
cli
iret
je
movsl
adc
mov
xchg
xor
sti
ds
mov
mov
or
in
sbb
dec
mov
pop
hlt
int3
lret
mov
daa
pop
enter
jl
jge
jo
lcall
in
xor
adc
je
stc
mov
push
lret
pop
and
adc
imul
pop
mov
lds
cmc
test
out
xlat
mov
into
xchg
subb
mov
push
or
pop
adc
mov
in
mov
pop
cmp
scas
mov
and
popa
xchg
jnp
push
push
loope
cmp
push
fcmovbe
sbb
movsb
iret
icebp
and
lods
push
pop
cwtl
cli
xchg
cltd
testl
lea
outsb
sub
test
pop
xor
sbb
pop
mov
mov
mov
mov
jb
mov
inc
cmc
xchg
mov
sub
mov
lods
test
imul
leave
call
loope
es
test
ja
push
sbbb
jne
cmp
xor
jl
arpl
sbb
shlb
fdivl
cmp
dec
test
aad
adc
jge
mov
int3
and
out
arpl
gs
inc
dec
into
data16
cmp
add
ds
shrl
clc
ret
xchg
outsb
leave
dec
loop
lahf
fnsave
pushf
out
cmp
std
leave
xor
or
mov
int
int
rsm
rcl
xor
inc
push
loopne
lret
lret
das
frstor
jo
add
insb
adc
sbb
xchg
fisubl
or
or
popf
ljmp
xorl
loopne
call
test
cmp
mov
sub
ret
mov
lret
or
jg
bound
outsb
and
mov
testb
push
mov
inc
outsl
pusha
jnp
fimull
inc
mov
loopne
ja
hlt
xchg
push
lcall
data16
mov
mov
mov
ret
insl
and
movsb
and
aad
jns
sbb
add
dec
icebp
fcomip
and
sub
outsl
ja
dec
mov
xlat
in
inc
dec
pop
repz
pop
push
jb
mov
loop
sub
inc
fst
cmp
fists
or
cld
inc
data16
adc
jmp
cld
sub
js
stos
insl
inc
xchg
ja
or
cmp
cmc
aaa
mov
add
lcall
mov
int
fidivrs
fsubl
mov
push
or
mov
mov
js
sarb
or
pop
movsl
xor
push
lods
in
ja
pop
setg
cs
lods
gs
mov
clc
or
jg
jl
outsb
mov
movsb
shrb
dec
stos
sbb
jne
ret
xchg
mov
inc
outsb
fistpl
cmp
and
pop
cmp
shll
mov
and
inc
jne
js
cli
test
fstl
adc
mov
or
add
mov
push
fdivr
jg
or
movsl
test
sub
pop
dec
mov
jae
push
sbb
js
or
adc
push
lods
cmp
stos
insb
shll
arpl
sub
adc
jno
in
xor
popa
inc
je
movsb
or
cmp
rcrl
add
jecxz
xchg
xchg
out
call
fsubr
xchg
inc
mov
xor
lea
sub
test
fsubrs
clc
int
mov
or
loopne
in
je
lock
push
sub
jbe
outsl
jns
jae
imul
ret
mov
mov
mov
add
mov
arpl
sbb
cmpsl
movsl
cmp
push
test
mov
adc
push
inc
hlt
notl
mov
dec
in
sbb
imul
cmp
jge
out
pop
sub
xchg
mov
dec
idivl
lods
xor
fucom
scas
aas
loop
pop
cmpl
icebp
mov
loope
fwait
push
lret
inc
xchg
ljmp
test
call
xor
pushf
out
mov
cmp
fidivrs
cvtps2pd
andb
into
out
pop
pop
push
cmp
pop
cs
dec
mov
jecxz
cmpsb
mov
cmp
stc
adc
popa
jbe
cmp
fucom
xor
sbb
mov
jnp
or
dec
or
mov
and
rorb
inc
aad
es
adcb
cmp
and
sub
repnz
and
dec
mov
cmp
pop
fstps
ljmp
addr16
dec
add
es
xchg
je
push
xchg
mov
jl
jp
jmp
out
out
fcmovb
pop
push
inc
sub
fistpl
xchg
mov
mul
lds
movsl
sbbl
inc
xchg
das
ljmp
push
rep
or
pop
and
jecxz
mov
es
das
scas
cmp
pop
dec
mov
and
mov
push
or
mov
mov
mov
mov
xchg
int3
cmp
mov
mov
fucomip
test
sub
xchg
push
add
xchg
in
dec
loope
mov
sbb
repz
fldcw
lret
adcl
jns
pushf
sub
xchg
addr16
lahf
out
cmpsl
add
push
test
mov
mov
pushf
data16
outsb
sub
jb
jns
pop
cmp
mov
rcrb
fadd
sbb
add
cwtl
fnstenv
shl
push
adc
cli
cltd
lret
mov
adc
in
pushf
leave
scas
jne
loope
addl
ljmp
out
movsb
pop
pushf
popa
rorb
jno
mov
mov
clc
in
leave
jb
push
gs
mov
mov
lea
test
movsb
sbb
pop
loopne
push
jecxz
xor
movsb
cmp
cmp
pushf
inc
mov
bound
sti
jmp
mov
std
loop
mov
mov
shlb
xchg
pop
stc
enter
das
out
lcall
sub
xchg
add
pop
push
out
add
movsl
pop
xor
in
gs
xlat
popa
xor
stos
mov
xor
jmp
cwtl
adc
ds
cmp
arpl
pop
jo
mov
cli
jecxz
xchg
lcall
les
aaa
jl
cli
divb
and
shll
xchg
pop
jl
sarb
and
xor
cmc
mov
sub
pop
cs
mov
repz
pop
pop
mov
inc
popa
inc
dec
fsubr
mov
lds
ret
aad
pop
mov
loop
cmpsl
jecxz
adcl
insl
stc
or
aaa
test
jg
sbb
xchg
fwait
lahf
rcr
or
xchg
mov
push
push
pushf
loopne
cmp
pop
insl
xchg
mov
jo
repz
jbe
js
int
mov
popa
rcrl
mov
add
sbb
andb
shrl
jg
mov
notl
and
xchg
rcrl
add
ds
int3
inc
adc
sub
push
xorb
mov
icebp
leave
adc
shlb
bound
mov
arpl
insl
xchg
out
inc
out
add
xchg
lea
mov
in
fwait
aaa
or
xor
or
sub
stos
and
push
adc
jnp
or
in
mov
addb
fdivs
pop
pop
mov
add
cmp
and
movsbl
hlt
xor
fs
aas
inc
xchg
sbb
jo
mov
pop
fldcw
int
lds
loope
adc
aaa
mov
lret
lea
push
call
mov
pop
xor
rcrb
cmp
jnp
fisubrs
mov
sub
xchg
ret
scas
jns
popa
idivl
and
aam
je
cmc
addb
pushf
icebp
aas
lods
imul
sub
inc
or
add
aaa
lahf
gs
inc
lods
and
fsubl
add
ja
sarb
pop
cmp
dec
mov
jecxz
inc
xchg
dec
cs
dec
stc
nop
cmp
add
xchg
pop
mov
setge
jae
in
movsb
pop
inc
jnp
das
ljmp
push
in
shrl
jbe
jnp
or
add
xchg
push
pop
adc
pop
mov
or
sbb
and
test
iret
lods
jle
sarl
lahf
mov
std
push
pop
ficompl
adc
pop
sub
rol
mov
sti
hlt
cmp
mov
fnstcw
add
rcrl
scas
push
push
or
pop
mov
ss
xor
into
push
or
std
adc
xchg
dec
cmp
and
outsb
movsl
cmp
fimull
jns
mov
jns
rcll
fstpt
xchg
dec
lret
daa
inc
jmp
sub
push
adc
push
cmc
or
jmp
inc
cmp
sahf
imul
mov
push
adc
pusha
fcomi
mov
lods
in
xor
adc
jl
das
lcall
gs
pop
jae
fs
jp
movsb
stos
sub
and
sbb
fisubrl
test
leave
sbb
lret
cli
lret
pop
sbbl
loopne
aam
divl
cmp
sbb
jbe
out
or
add
out
mov
gs
cmp
cmpsl
mov
inc
dec
loope
add
jecxz
repz
adc
movsb
addb
jb
out
cmp
sub
shr
dec
sbb
maxps
es
js
loopne
insb
mov
push
sub
xchg
pop
and
ds
mov
add
xchg
inc
fdivrs
xchg
push
movsl
pop
xor
int
jno
daa
push
aas
in
mov
or
enterw
sbb
sahf
ss
mov
push
pop
fisttps
push
cmpb
mov
mov
mov
adc
sbb
adc
or
xchg
ds
push
jb
imul
dec
jno
dec
sub
sbb
fdivrp
push
in
jl
rclb
pop
dec
cmp
sbb
inc
dec
pop
adc
iret
cmp
and
rol
gs
out
inc
mov
outsl
int3
mov
xlat
cwtl
mov
in
jle
adc
cli
push
xchg
mov
fdivl
fwait
jecxz
xchg
xchg
stc
nop
add
sub
loopne
mov
and
testl
xor
mov
jge
mov
cmpsl
mov
sbb
sub
mov
inc
xor
lret
out
lds
insb
sub
lea
cld
out
dec
aad
fs
jns
or
push
adc
jno
pop
dec
in
in
push
repnz
in
mov
lock
mov
cwtl
xchg
jge
adc
stos
mov
and
mov
jb
test
ja
sbb
ds
rcl
testl
lahf
jge
add
jb
xor
mov
dec
mov
jl
daa
sub
sbb
test
cmp
adc
pop
out
mov
loopne
xor
iret
test
jl
sbb
test
add
sbb
lcall
or
int3
jg
mov
pop
inc
mov
mov
push
or
arpl
mov
jno
adc
mov
lods
popa
clc
or
leave
or
and
xchg
xchg
or
int3
movsl
loop
ret
add
mov
rcrl
mov
add
fisttpl
in
or
mov
mov
lock
mov
ss
sbb
dec
insb
sub
pop
insb
or
mov
imul
jl
or
sti
pop
adc
pop
leave
pushl
mov
jns
js
popa
and
dec
adc
or
repnz
jns
inc
ja
adc
enter
ja
je
add
scas
ds
hlt
mov
dec
mov
cmp
mov
xchg
sbb
jmp
divb
dec
cwtl
mov
gs
sub
or
in
add
push
mov
jg
jge
mov
push
rorl
std
sub
or
cmp
out
or
lret
repz
test
push
cmpsl
fdiv
xchg
push
insl
adc
cwtl
jae
movsb
lds
es
popa
dec
jae
iret
mov
jae
pop
stos
push
out
push
push
in
xchg
outsl
or
mov
jmp
repz
fstpt
subl
fisttpl
fmuls
xor
xchg
jmp
or
imul
xchg
pop
ret
test
xchg
adc
xor
test
cli
inc
jmp
fsubr
push
push
test
jbe
fdivl
push
call
lcall
sbb
testl
pusha
les
sbb
dec
test
stc
pop
imul
das
fsubs
mov
push
jecxz
int
fs
hlt
adc
cmp
dec
dec
mov
shl
inc
inc
ljmp
daa
loop
into
xor
out
jb
sub
mov
rep
xor
bound
frstor
inc
cmpsl
jo
sahf
jge
xor
data16
pop
in
jecxz
subb
stos
pop
test
mov
inc
xchg
movsb
daa
adc
mov
or
lds
jp
xor
out
testl
pop
int3
adc
xor
adc
push
insb
pushf
fs
rcrl
mov
xchg
les
fnsave
add
dec
push
rolb
add
cs
das
repnz
adc
mov
xchg
std
cld
stos
mov
xchg
cltd
stos
jnp
cld
stos
cmp
jp
pop
sub
push
or
in
sbb
cwtl
rcrl
ret
dec
test
inc
xlat
push
je
cld
scas
and
jae
lahf
cmp
dec
jb
mov
mov
sub
and
and
xchg
xlat
rorb
addr16
jge
or
mov
cmp
aad
sbb
dec
mov
mov
popa
pop
mov
cltd
lods
fwait
gs
movsb
xchg
lock
sub
pop
pop
outsl
ja
ret
jmp
mov
mov
test
adc
add
mov
adc
push
xchg
aad
dec
daa
pop
jg
outsb
xor
lods
stos
icebp
xchg
mov
adc
movsb
push
icebp
fidivrl
clc
mov
xor
test
and
xor
test
out
popa
mov
cmpsl
mov
fcompl
cli
outsl
fidivs
dec
or
pusha
inc
adc
rolb
jbe
out
call
cmp
sbb
sub
test
jnp
add
add
xchg
jge
dec
cmpsl
mov
movsb
xchg
cmp
in
pop
and
xlat
pop
jmp
xor
push
out
inc
fistpl
sbb
push
loope
fldt
or
cmp
cmp
fcmovb
aam
pop
mov
xor
or
ja
ffreep
jp
xor
jmp
inc
xchg
xchg
sub
iret
cli
mov
sub
adc
cmp
in
sbb
leave
mov
sahf
fists
idivb
pop
rcrb
hlt
dec
lds
pop
push
sub
cltd
xor
lcall
in
loop
push
addb
popf
push
por
test
sub
lret
cltd
push
icebp
sbb
movsb
sbbb
mov
arpl
jno
push
mov
add
movsl
repz
pop
imul
xchg
data16
mov
and
js
cltd
or
push
mov
fistpll
insl
sbb
mov
sbb
out
es
adcl
jbe
cmpsb
cld
jae
das
popf
stc
and
test
adc
movsb
dec
sub
cmp
sub
pop
mov
xchg
dec
movsb
and
jmp
cmp
push
inc
fnstsw
sbbb
cmpsl
mov
cmpsb
and
in
inc
stc
mov
xor
pop
inc
inc
xor
xor
or
mov
xchg
sti
pop
fwait
ret
push
adc
fcmove
pop
rorb
out
xchg
inc
iret
mov
pusha
add
leave
and
mov
aas
fildl
xchg
vpsubusw
mov
sarl
and
sbb
pushfw
inc
imull
test
jno
add
mov
xchg
jnp
jg
ror
adc
add
pop
aam
stos
lock
es
iret
mov
dec
inc
adc
sbb
adc
xor
rorb
pop
outsb
fidivl
insl
mov
xor
fdivrl
pop
add
fcomps
jnp
aad
mov
das
ja
sbb
outsb
stos
gs
pop
call
stos
mov
xchg
jmp
and
push
adc
xchg
bndstx
and
add
shlb
xor
pop
mov
sahf
sub
js
adc
enter
sbb
sub
sbb
inc
addb
in
or
inc
sbb
test
jne
shll
pop
and
scas
or
pusha
adc
cld
adc
jno
push
mov
loop
sbb
test
out
bound
incb
lods
and
flds
push
repz
hlt
adc
popa
roll
pop
ficomps
stos
mov
push
shrl
adc
call
push
inc
outsl
push
mov
test
mov
cmp
mov
imul
jle
pushf
lcall
lret
aaa
out
sbb
and
sub
cmp
inc
dec
xchg
sbb
xor
outsl
movsb
adc
rorb
jae
add
mov
jge
inc
rorb
pop
sbb
arpl
ficompl
push
icebp
iret
or
sbb
scas
inc
div
sbb
ret
or
in
pop
or
push
in
subb
cld
dec
mov
xchg
or
dec
ds
es
mov
fdivrl
adc
dec
xchg
int
or
xor
in
imul
jmp
mov
xor
or
sbb
movsl
in
fiaddl
dec
dec
push
cmp
test
bound
jg
rorl
sub
lods
mov
cltd
dec
lret
mov
and
pop
out
fiadds
mov
xor
dec
sbb
lahf
fcmovb
loope
cmpl
xor
mov
adc
xchg
jle
dec
popa
enter
je
lahf
fs
cmpsb
xchg
sarb
ds
add
imul
iret
adc
mov
inc
pop
lcall
or
test
movsl
pop
ret
dec
mov
mov
stos
add
std
es
pop
xchg
mov
cmp
mov
mov
mov
adc
fwait
lds
ja
adc
mov
xor
std
xor
and
xchg
test
push
sbb
lds
add
pop
add
xor
mov
mov
nop
daa
popa
lods
push
inc
mov
push
movsb
out
inc
inc
mov
out
push
mov
cwtl
fs
sub
pusha
repz
andb
test
mov
lds
pop
jb
push
inc
push
jge
mov
mov
mov
cmp
shrb
xchg
arpl
sbb
dec
psrlw
dec
sti
mov
adc
xchg
push
outsb
sub
popf
sahf
addr16
loop
push
out
add
mov
into
jb
out
repz
or
insl
dec
xchg
jp,pn
jp
cmp
jecxz
aaa
fwait
push
loop
xor
test
scas
repnz
jl
inc
inc
movsl
popf
xchg
xchg
jae
adc
xchg
ds
out
out
mov
mov
pusha
sarl
mov
out
fucomp
pop
das
cltd
inc
cmp
stos
hlt
inc
pop
lret
lock
aam
imul
inc
aas
sub
jmp
xchg
and
mov
or
out
cmpsl
sub
mov
sub
sbb
jge
push
dec
inc
fcoml
mov
test
xor
add
mov
cld
pop
xor
and
push
xchg
lcall
sub
push
mov
js
divl
cmpsl
push
sbb
imul
adc
addr16
inc
es
imul
mov
lock
push
icebp
cmp
mov
and
lods
jle
pop
inc
shll
dec
mov
outsb
jbe
in
notb
ss
mov
sahf
xor
xchg
xchg
fs
mov
movsb
jle
or
sahf
ljmp
mov
test
lock
and
and
and
scas
xchg
inc
pop
int3
inc
ror
sub
jmp
addr16
push
dec
pop
add
pop
ret
or
pop
cmp
xchg
mov
sbb
jnp
sub
fdiv
pusha
xor
gs
call
movsb
add
cmpsb
lds
cmc
call
shr
sub
dec
in
adc
cmp
jl
pop
repz
insl
and
lods
inc
dec
dec
mov
icebp
inc
dec
jb
call
cmp
push
dec
mov
std
mov
and
dec
pop
test
cmp
or
dec
stos
shlb
mov
subb
ror
aam
inc
repz
or
xchg
cmpsl
push
lock
xor
test
inc
cmpsl
dec
dec
flds
mov
jb
cli
mov
ret
shrl
fs
xchg
lds
addl
popf
je
sbb
jne
fbstp
push
or
push
fs
dec
or
xchg
cmpsl
out
iret
test
pusha
jp
into
cmp
enter
or
adc
ljmp
jno
inc
and
push
jne
xor
jns
adc
adc
int3
mov
loopne
push
rcrl
add
adcb
lret
xor
outsb
es
pop
add
lock
dec
xor
push
popf
and
mov
ljmp
jp
xor
pushf
cli
pushf
push
push
lods
jne
ja
test
iret
jnp
push
jns
out
push
out
in
fldenv
sub
inc
jg
push
dec
test
pop
pop
cmpsb
fmull
mov
jg
sbb
push
xor
mov
push
pusha
cmpsb
jne
cmp
push
xchg
xchg
fwait
mov
push
mov
cltd
and
adc
shrl
movsb
inc
cs
pop
lds
cli
or
imul
mov
mov
push
dec
nop
imul
icebp
or
mov
rcr
xchg
push
mov
test
push
outsl
push
inc
pop
stos
inc
ftst
in
repz
add
fidivl
pop
pop
roll
out
arpl
ja
mov
pop
cmp
adc
inc
sbb
mov
jge
je
js
in
push
jle
test
dec
and
imull
arpl
rcll
sbb
cmc
scas
pop
sahf
orb
sbb
or
fnstcw
icebp
int3
and
adc
inc
push
or
sub
dec
adc
hlt
into
bound
pop
jecxz
or
adc
lcall
ret
rclb
in
outsb
in
xchg
push
call
les
icebp
movsl
sub
movsb
aaa
ret
ret
mov
xchg
cmp
icebp
mov
scas
psrad
out
mov
or
imul
mov
cltd
pop
sub
mov
inc
cmpsl
adc
pop
xchg
fucomip
and
inc
jnp
sbb
int
push
lods
cs
or
cmp
inc
shrl
cmp
insb
test
mov
mov
scas
movsb
arpl
loop
xor
mov
dec
adc
mov
lahf
mov
or
cmp
push
ljmp
mov
xor
loope
push
xor
mov
mov
sub
add
mov
cmp
jbe
fsubrs
std
hlt
push
add
clc
outsl
out
and
fs
fdivrs
in
int
push
flds
mov
add
adc
push
pusha
pushf
cmpsl
cmp
out
movsl
sbb
cmp
or
int3
pusha
jnp
sbb
out
add
mov
cltd
loope
dec
loopne
sub
cmp
mov
jl
mov
push
jge
or
ds
xor
push
dec
lret
popl
jae
xchg
mov
jno
adc
push
cmp
or
sub
ret
add
call
pop
push
rcrl
and
lods
loopne
sub
cli
cmp
fcoml
sbb
or
xchg
fcompl
shr
cld
jbe
pop
ja
inc
inc
aaa
and
add
ja
imull
inc
pop
inc
xor
gs
cmp
adc
or
fwait
jl
lahf
xchg
in
inc
call
jb
and
icebp
jne
shll
ljmp
daa
sub
loop
push
and
mov
dec
lods
mov
fldt
js
push
or
push
cmp
sahf
push
mov
rcrl
pop
sti
jbe
pop
dec
add
pushf
lret
sarb
imul
pop
xlat
pop
xor
sbb
adc
push
pop
out
rdtsc
mov
dec
in
xchg
add
mov
lea
dec
mov
mov
mov
daa
jno
mov
inc
punpckhdq
inc
sbb
fdiv
pop
mov
loop,pt
mov
pop
xorl
fistpl
adc
out
cmp
xor
les
lret
pop
insl
add
test
jb
loope
test
push
and
mov
sbb
xchg
or
aam
xchg
dec
cmp
bnd
pusha
test
pop
add
add
repz
cmp
test
dec
xchg
pusha
repnz
mov
add
fildll
in
pushf
stc
jns
lock
popa
inc
fcompl
out
add
xchg
and
cmp
iret
push
or
jle
inc
das
stos
sbb
mov
mov
jne
dec
xor
stc
pop
mov
out
and
scas
cs
hlt
sbb
lret
movsl
sub
stos
pop
push
xor
loope
popa
notl
xchg
test
xchg
inc
rcrb
inc
out
sub
lret
nop
jae
inc
fisubl
xchg
jg
mov
loope
mov
mov
mov
push
push
xchg
mov
pop
stos
lods
xor
cmpsl
mov
clc
repz
cs
xchg
push
lods
enter
fwait
mov
pop
xor
test
das
ror
bound
jmp
int3
jp
je
cmpsl
mov
fimuls
lock
ljmp
jnp,pn
fadd
or
repnz
push
int
fmull
fisubrl
loopne
test
jle
mov
sub
sub
pop
call
mov
dec
clc
les
and
dec
mov
sbb
pop
testb
add
je
ljmp
mov
inc
mov
cmp
cltd
fwait
insl
lds
cmc
jge
fisubl
mov
setge
mov
negb
mov
clc
mov
popa
in
fs
std
xchg
jle
cmp
or
jge
pop
shrl
les
in
jbe
push
mov
inc
push
cmp
scas
fiaddl
dec
sub
dec
dec
shld
add
outsl
cmp
cmp
ret
xor
inc
dec
aad
call
cmp
jno
mov
adc
rcrl
mov
test
cmp
outsl
mov
cmp
loope
pop
dec
push
lahf
dec
cli
in
xchg
dec
lcall
mov
xchg
jne
xchg
andb
ss
mov
mov
je
pop
jae
push
clc
mov
movsl
pop
repnz
add
xor
mull
and
ds
lds
cs
fbstp
jmp
add
jo
push
pop
pop
or
fs
sub
and
je
hlt
dec
mov
sub
inc
or
dec
rcl
dec
insl
jle
movsl
cmp
sbb
les
test
shlb
loop
or
adc
dec
ret
mov
ret
lods
pop
aad
stc
das
sub
cmpsb
cmp
movsb
push
mov
int
xor
sub
sarl
pop
cltd
mov
push
mov
mov
es
xor
dec
pop
mov
popa
pop
xor
adcl
mov
test
mov
mov
iret
fnstcw
mov
sub
into
jecxz
mov
inc
dec
and
hlt
sahf
les
add
sbbl
cmp
leave
pushf
ja
xor
cmp
fstp
xchg
push
mov
or
pop
push
fstps
popa
imul
popf
mov
scas
fisubl
jo
mov
sbbb
sti
popa
shlb
or
add
or
int
sub
test
shll
daa
fidivs
mov
mov
jo
shll
and
or
lahf
adc
ss
pop
sysret
and
iret
out
test
inc
mov
lock
enter
xlat
or
push
scas
xchg
sti
push
jno
lods
and
and
xor
insl
insl
and
mov
enter
test
mov
and
mov
leave
xchg
stos
mov
adc
jne
xchg
add
lock
aaa
lods
add
shlb
mov
xchg
mov
jecxz
test
into
cwtl
pop
ret
fisttps
dec
sti
add
xor
sbb
jle
xor
xlat
jg
lahf
enter
shr
arpl
das
sbb
push
jle
loope
cmp
es
int
aad
pop
out
sub
sbb
repnz
imul
std
cmp
fldt
popa
imul
dec
push
fstps
mov
sub
sbb
lret
adc
jp
mov
adc
mov
loop
scas
inc
enter
scas
jmp
cmp
xorb
pop
dec
mov
and
cwtl
pop
daa
mov
ja
enter
popf
mov
xor
popa
fiaddl
add
fidivs
adc
inc
test
xor
xlat
arpl
ds
push
aaa
hlt
scas
mov
jnp
pop
rol
jne
jns
xchg
xchg
mov
cld
call
aas
nop
scas
mov
mov
aam
add
fwait
ret
in
ret
ja
iret
loop
imul
dec
or
pop
shl
fwait
and
push
add
gs
test
lret
mov
adc
jle
je
popf
movsl
xchg
ss
and
jbe
mov
in
test
or
lods
es
test
movsb
inc
mov
xlat
aas
les
outsb
adc
cli
ret
adc
enter
bound
or
push
cmp
int
ret
cmc
ficompl
fsub
scas
mov
cmp
lods
adc
dec
lds
dec
xchg
mov
sub
lds
inc
mov
stc
adc
add
ss
loop
inc
jp
in
sbb
inc
sbb
das
imul
sub
stos
outsb
push
and
inc
cmp
lds
jp
push
sbb
adcl
test
mov
dec
das
xor
xorb
mov
testl
insb
add
in
mov
imul
cli
loope
jecxz
sbb
jnp
push
push
and
addl
loopne
pop
ret
xchg
add
ja
jecxz
pop
add
cmpsb
dec
or
lahf
push
leave
mov
jmp
aas
inc
rep
addr16
je
ficomps
dec
pop
inc
loop
cwtl
xor
mov
adc
push
cmpsl
cmp
mov
sbb
add
jge
cmp
xchg
fsubrp
pop
popf
and
jl
dec
jg
fdivrp
sub
scas
lea
mov
daa
stc
or
fidivrs
xlat
and
cmpb
dec
cwtl
push
int3
mov
test
iret
data16
sti
sbb
andb
inc
aad
jle
stos
inc
dec
jnp
ljmp
inc
cmpsb
pop
imul
test
sbb
scas
fnsave
fidivrs
mov
imul
das
rclb
lcall
in
xchg
push
addr16
inc
adc
movsl
jo
pop
mov
out
int3
or
std
jl
fbstp
mov
test
dec
ret
movsw
out
lds
push
fs
lock
add
int
loope
lods
in
and
cmp
add
lcall
loope
sub
add
out
addr16
mov
xchg
adc
mov
and
rorb
arpl
popa
xchg
stc
pusha
and
test
xor
fsubr
aaa
mov
les
fsub
cli
inc
xor
mov
movsl
cmp
xor
repz
push
pop
adc
inc
aaa
jbe
dec
cwtl
das
jl
out
adc
sub
ljmp
xchg
scas
cs
pusha
and
rorb
and
and
inc
inc
sub
jbe
int
and
and
icebp
mov
mov
cmp
loop
shlb
mov
xchg
fisubrs
add
lret
icebp
pop
lret
mov
xchg
out
jge
mov
adc
lods
cmp
mov
aaa
pop
push
fnstsw
adc
in
pop
xor
shr
mov
jno
rcr
mov
or
cmp
push
movsb
out
sub
pop
insb
dec
mov
repnz
and
std
mov
jge
shrl
ret
cwtl
mov
inc
in
test
test
repz
imul
pop
mov
stos
sbb
jbe
push
or
pop
mov
in
jb
shll
adc
jns
loopne
sub
add
mov
arpl
cwtl
mov
gs
jae
loop
mov
and
test
mov
outsl
loopne
int
nop
test
mov
nop
xchg
jge
shr
je
sbb
out
mov
cmp
cmp
sub
hlt
and
stc
popf
aas
popa
fstpl
mov
add
cmp
test
sti
rclb
or
ret
fldl
cs
scas
fimuls
lret
ljmp
pusha
adc
scas
push
test
mov
sahf
inc
sbb
add
and
rcrb
mov
jp
adc
jle
pop
adc
pop
push
ljmp
ret
int3
bound
iret
lret
int
inc
fcomps
sbb
add
adc
push
das
or
adc
call
jmp
cltd
pusha
setbe
jl
xorb
sub
push
hlt
add
push
jg
aad
dec
inc
lahf
push
lock
xchg
ror
dec
in
xor
fisttpll
push
adc
xchg
or
xor
xor
fcmovnb
popf
cmp
outsl
cmp
daa
cmp
xchg
pop
mov
push
pop
repnz
push
jns
mov
int
int3
ja
push
movzbl
loopne
inc
movsl
xchg
test
and
out
xchg
xchg
lds
bound
pop
cmp
sub
fildl
push
es
sbb
and
lret
cld
aaa
stos
xor
xchg
daa
jge
adcb
sub
pop
xor
cltd
inc
dec
stos
mov
stos
cmp
lods
fcomp
mov
int3
fists
add
add
pop
outsb
jl
xchg
inc
push
mov
xchg
lods
daa
stos
orl
gs
jecxz
mov
mov
ljmp
popa
add
sbb
aas
pop
push
inc
sub
std
inc
movsl
add
dec
ret
and
push
dec
mov
idiv
divb
xor
and
sarb
and
dec
pop
cmp
hlt
mov
adc
in
inc
cmpb
pop
sahf
cli
rclb
arpl
inc
ljmp
mov
lods
flds
fisubl
cwtl
mov
scas
ljmp
pushf
push
scas
inc
mov
sti
in
es
pop
add
rcrb
mov
push
push
or
int
dec
stos
repz
shll
sbb
mov
jbe
insl
rorb
mov
sbbl
call
dec
aas
bound
xchg
vmovdqa
fiadds
mov
lcall
mov
sub
sbb
popf
mov
or
addr16
and
sub
nop
nop
push
and
jno
pusha
mov
fs
xor
jecxz
sub
add
push
mov
or
test
cmp
or
cs
add
mov
xchg
ja
xchg
sub
mov
mov
sbb
xor
push
or
add
adc
stos
lcall
xor
ret
es
push
fwait
addl
inc
outsb
adc
xchg
fwait
jmp
rorl
lds
test
push
fucom
ds
aas
mov
js
mov
flds
mov
push
js
mov
ficoml
push
mov
xor
std
insl
or
or
mov
js
out
test
xor
out
js
push
sbb
ja
jg
push
lea
mov
idiv
mov
jmp
jle
movsb
dec
sub
cltd
adc
xchg
xchg
insb
rcll
pop
inc
loopne
sub
or
fnsave
mov
jns
mov
in
dec
fldenv
sbb
lea
test
insl
test
or
test
popf
pop
xor
daa
outsl
push
int3
repz
push
mov
shrl
mov
ret
mov
sub
je
or
test
or
sub
scas
aad
xchg
ja
test
dec
jp
imul
or
ret
xchg
add
mov
scas
mov
pop
pop
je
mov
lock
xchg
aaa
pop
push
adc
inc
data16
push
aam
sub
jae
aaa
int
sub
outsl
out
sahf
xor
test
or
mov
fimuls
xchg
jp
out
gs
pop
mov
or
fdivp
js
into
xor
mov
xchg
pop
les
xchg
push
pop
xchg
adc
icebp
xor
adc
cmpsl
andb
mov
out
imul
mov
jle
xchg
in
loopne
ffreep
in
int
andb
cmpsl
ja
push
mov
les
mov
bound
sub
xchg
xor
hlt
fistpl
loope
mov
jae
int3
pop
adcb
pop
ret
gs
ljmp
inc
push
sbb
push
lods
jno
push
mov
mov
movl
iret
dec
xchg
mov
jmp
cmp
sarl
cwtl
adcl
adc
sbb
ds
dec
mov
push
jge
xchg
inc
dec
dec
cmc
cmp
repz
mov
leave
mov
sub
ss
test
sub
dec
and
pushf
scas
sub
test
shll
mov
add
test
jns
es
iret
loop
in
xor
imul
call
loope
cmp
jns
repz
xlat
cltd
in
push
mov
xchg
test
fbstp
lret
adc
les
push
mov
repnz
repnz
cmp
adc
jo
pushf
into
hlt
mov
mov
mov
pusha
push
or
je
mov
dec
cwtl
mov
mov
xor
cmc
cld
xchg
sbb
test
add
vaddss
or
mov
scas
mov
xchg
rorl
scas
bound
adc
test
jnp
in
stos
dec
faddl
fisttpl
mov
imul
push
inc
call
inc
dec
sbb
mov
mov
enter
sub
test
sub
je
leave
loope
sbb
je
ds
scas
mov
loope
mov
jnp
scas
mov
mov
xchg
loope
sbb
ja
fwait
mov
int
jmp
loopne
lods
test
enter
leave
cltd
pop
repz
cmpsb
imul
aam
enter
sar
mov
cltd
fbld
in
push
subb
add
mov
movsb
enter
repz
jbe
orl
xorl
dec
jmp
sti
cmp
fcomps
arpl
sti
push
sbb
mov
push
jne
xchg
cmp
and
daa
arpl
pop
std
mov
adc
fldt
push
mov
mov
fiadds
ret
call
jge
add
cmp
repz
push
bound
jmp
clc
movsb
test
and
push
bound
mov
cmpl
dec
mov
test
daa
jge
xor
cltd
repnz
call
test
loope
pop
dec
jg
jle
pop
cs
into
xchg
pop
and
shlb
inc
fidivrs
addr16
movsb
adc
lock
in
jl
cmp
mov
mov
inc
ret
lcall
mov
cmpsb
fsubs
and
mov
pop
js
mov
jb
inc
std
je
call
push
loopne
and
fmul
movsb
mov
add
aad
dec
mov
aaa
popa
or
or
xor
popf
xor
pop
mov
pop
pop
adc
pop
rclb
mov
or
lcall
out
shlb
out
movsl
adc
sub
xchg
sub
xor
incl
cmp
cmp
cmpsl
xchg
scas
insl
sbb
in
push
xor
sbb
adcb
popl
push
les
adcb
push
ljmp
pop
ret
mov
outsb
test
mov
arpl
in
ja
test
ds
inc
sbb
add
lock
jge
data16
or
dec
pop
enter
jnp
loope
out
into
fdivr
pop
lea
mov
mov
xchg
jl
insl
sbbb
orb
pop
test
test
cltd
frstor
jbe
imul
ds
jnp
std
cmp
in
and
push
sarl
pop
mov
std
imul
or
cmp
out
loope
xor
add
add
repnz
adc
js
adc
and
outsb
mov
stc
mov
pop
inc
jb
xor
pop
push
inc
dec
in
and
das
pop
pusha
sbb
mov
fnstcw
inc
xor
mov
inc
dec
xor
cmp
mov
enter
lret
out
lock
xchg
and
mov
sub
rolb
icebp
pop
xor
xchg
xchg
pop
ja
notl
cmpsl
jnp
decl
gs
cs
xor
mov
andb
insl
pop
js
push
push
shrb
xchg
or
push
xlat
stos
mov
test
orps
sbb
outsl
orl
into
pop
add
popf
jg
sub
divb
adc
mov
mov
push
push
pop
outsl
xor
rol
arpl
mov
testl
test
inc
call
aaa
mov
adc
cmc
pop
data16
imull
add
push
repnz
rorb
fnstcw
imul
pop
jnp
test
cmp
push
jb
cmp
sub
push
xchg
push
jne
fidivrs
mov
sub
stc
movsl
mov
push
sbbb
iret
call
fcmovu
in
cmp
lods
adc
sbb
lock
xchg
popa
js
into
ja
push
imul
and
insl
bound
in
ret
jle
mov
mov
sahf
icebp
enter
and
inc
mov
test
mov
popa
cmp
nop
popf
sub
pushf
jl
sbb
popa
or
mov
fdivs
mov
test
subb
lcall
dec
add
push
mov
fldt
cmp
sbb
push
ljmp
loopne
lret
out
lcall
sahf
clc
mov
pop
mov
pop
out
add
pushf
jno
xor
in
lods
sahf
pop
mov
push
jge
fnstenv
mov
push
sbb
into
fimuls
mov
in
or
adc
cmc
leave
dec
jb
xchg
or
out
xor
imul
int3
jo
andb
xor
imul
pop
jmp
mov
into
sbb
out
cld
fs
adc
aaa
pop
ret
and
add
cmp
push
push
mov
xlat
jmp
fmuls
sub
subl
mov
fsubrs
pop
repz
cld
das
dec
insl
inc
pop
xchg
and
ret
popf
mov
loope
push
cmp
mull
mov
in
jecxz
imul
and
sbb
sbb
jp
dec
and
xchg
subb
repnz
add
dec
sbb
mov
push
cmp
sbb
dec
fs
sub
jns
xchg
and
movsl
mov
daa
movsb
sbb
jle
adc
lcall
mov
aad
push
or
outsl
xchg
xchg
lods
repnz
push
imul
movsb
dec
int
sbb
push
out
xchg
mov
popf
pop
in
push
jg
mov
adcl
movsl
push
lods
call
fdivs
test
aaa
stc
icebp
or
loop
add
sub
sbb
jg
fbstp
shlb
fs
sbb
xchg
loop
insl
inc
and
mov
push
mov
mov
push
adc
test
hlt
bound
push
orl
xchg
mov
addr16
cmp
addl
test
cmc
cmp
mov
les
and
jns
cmpsl
xor
outsb
xchg
aaa
andb
xchg
mov
jb
in
fwait
enter
cli
xchg
sbb
cmc
push
shll
pop
push
pop
xor
mov
adc
fistps
or
or
mov
loope
sub
sbb
add
cwtl
je
cwtl
inc
cmc
aad
dec
arpl
inc
test
test
and
mov
mov
stos
xchg
lea
stos
pop
mov
jno
pop
sti
push
repnz
or
xchg
mov
inc
jmp
lret
inc
insb
enter
imul
mov
fisubrs
rclb
or
gs
push
incl
fildll
push
je
cmp
lcall
loop
cmp
aaa
shll
ret
fcomi
jecxz
push
xchg
repnz
loopne
pop
sub
pop
fildll
cmpsl
lret
lea
lret
ss
rcrl
mov
push
in
mov
or
inc
jg
pop
lea
pushf
xchg
loop
rcrl
cmpsb
in
mov
inc
adcb
cmpsb
in
dec
es
subb
jbe
enter
jecxz
mov
imul
adc
stc
lret
push
mov
cs
push
inc
lock
mov
xchg
cmp
insb
mov
push
jbe
xor
jae
cltd
mov
mov
daa
js
jl
lret
mov
sub
bound
test
mov
lock
push
or
pcmpgtd
sub
out
jle
xor
loope
popf
pusha
sbbb
xorl
inc
jns
cwtl
faddl
shlb
and
cmpsb
lahf
xchg
inc
fs
cmp
push
daa
ja
xchg
cltd
shrl
test
inc
cpuid
rorb
sbb
mov
mov
out
sahf
cmp
loope
adc
call
pop
cmp
sti
ds
jp
lods
cmp
jg
hlt
mov
inc
fidivs
push
pop
mov
dec
cltd
mov
push
mov
cltd
mov
adc
sbb
pop
jle
pop
adcb
add
push
mov
mulb
inc
xchg
sub
cmp
aam
sub
les
xchg
xor
loopne
cmpsb
pushf
in
int
lcall
push
cs
add
adc
mov
cltd
insb
in
in
inc
loope
sbb
test
loope
cs
mov
pop
and
rol
testl
and
pop
nop
icebp
je
cld
cs
sub
dec
je
repnz
stos
pusha
sti
add
cmpl
xor
xchg
in
loope
mov
insb
cmpsl
dec
mov
or
faddl
adc
xchg
and
movsb
ss
adc
ret
inc
call
stc
out
pushf
cs
jnp
movb
push
repz
cmpsl
mov
jl
test
mov
pop
push
test
repz
mov
mov
mov
mov
dec
mov
out
and
das
sub
mov
pop
dec
xor
loopne
jp
mov
cli
mov
mov
lcall
adc
push
iret
pusha
repz
adcl
mov
aad
or
das
cmp
lcall
scas
mov
xor
and
loopne
addb
cld
mov
push
lret
lahf
mov
push
ds
adc
add
jns
fwait
mov
cli
es
cmp
pop
repz
add
ds
and
rcrb
cmp
xchg
push
insb
cmpsb
xor
pusha
out
xrelease
mov
into
test
decl
or
lea
shrb
dec
cmp
mov
dec
inc
cmc
mov
cmp
in
aaa
cmpsl
push
out
jmp
lcall
sub
jmp
jno
popf
jecxz
mov
cmc
pop
sbb
lock
cmpl
incb
sbb
sub
das
ret
outsb
sub
mov
rclb
pop
and
test
arpl
in
push
mov
ds
xor
lock
gs
xlat
or
add
add
mov
les
pop
mov
jbe
cmp
flds
xor
leave
mov
jge
cmp
nop
and
shlb
incl
push
jg
mov
test
pop
xchg
cltd
jno
mov
sbbl
jo
js
xor
xchg
test
add
hlt
dec
mov
jg
sub
in
inc
mov
add
xchg
jp
cmc
fldl
and
ja
shrl
push
incl
mov
xchg
sub
inc
into
cmp
sarb
cld
lcall
in
sahf
mov
pop
pop
xor
in
mov
cmp
pushf
cmp
mov
pop
pop
ficoms
mov
stc
movsl
xor
pop
jmp
fs
mov
inc
jbe
mov
inc
fisubrs
daa
sbb
pushf
shll
jmp
mov
daa
cmc
fs
adcb
adc
mov
pop
ljmp
js
mov
loopne
jno
push
xchg
cmp
adc
push
push
movsl
lahf
mov
mov
jl
lret
inc
dec
scas
cld
xchg
mov
iret
xchg
xor
lret
test
lea
xchg
pop
push
adcb
cmp
jb
sbb
test
into
popa
or
pop
jnp
rcrb
scas
lret
fildl
cli
xchg
sarb
push
cwtl
mov
lock
or
cmp
or
aas
jno
outsl
cli
mov
mov
jnp
shrl
daa
ror
out
dec
shlb
ss
out
ja
pusha
js
push
push
shr
push
fucomip
cli
add
cmpsb
and
scas
fcmovb
loopne
out
rcrl
adc
adc
dec
and
inc
and
add
cmpsl
sub
fs
mov
cmp
in
in
rorb
sarl
ja
dec
out
cmp
or
cmp
inc
sub
out
dec
sar
xorl
popw
adc
xchg
and
subl
lahf
mov
ds
das
xor
int3
push
jo
jle
and
cwtl
sub
mov
pop
popa
mov
arpl
lock
push
pop
cmp
push
out
roll
cs
xchg
pop
sub
lea
inc
jp
mov
fsubrs
loopne
cmpsb
fs
fcomps
andb
push
dec
mov
dec
test
push
test
inc
lds
adc
aas
std
sub
pushf
dec
jae
daa
mov
loop
leave
fnstcw
add
mov
xchg
bound
inc
mov
aam
jo,pt
mov
jnp
data16
in
dec
xlat
nop
lods
inc
out
dec
pop
iret
lods
popf
sbb
push
sbb
mov
outsl
loopne
enter
sbb
cmc
adc
repnz
cmpsl
inc
aas
sub
jle
int
push
dec
inc
fnstsw
dec
mov
dec
fs
sub
and
int
std
jo
or
inc
xchg
xchg
inc
nop
push
je
inc
add
sbb
xor
xchg
jb
jle
test
mov
js
ss
sub
xor
fwait
inc
pop
in
xchg
mov
sub
inc
push
inc
mov
stos
or
mov
push
xchg
adc
inc
gs
lahf
or
xor
xchg
inc
push
lahf
stos
aad
or
insl
xorb
adc
sub
dec
in
insb
in
cwtl
stos
sub
inc
outsb
sub
lcall
cmpsl
out
lods
fdivrs
fisttpl
movb
fdivrl
xor
push
mov
jge
aas
adc
fidivrl
test
test
sub
xchg
adc
jnp
hlt
lods
push
jmp
or
mov
clc
jae
pusha
dec
rcl
mov
inc
ficomps
cmp
gs
in
dec
cmc
sub
clc
mov
movsb
mov
fnstenv
mov
add
dec
loop
je
nop
pop
imul
cmp
dec
in
add
inc
mov
push
test
dec
sarb
push
or
jp
cld
pop
les
xchg
aas
push
fcomps
dec
dec
lea
out
sub
pop
mov
add
pop
in
mov
and
ret
and
ffree
xrelease
jae
mov
jg
call
xor
sahf
stc
int3
loopne
stc
fisubrs
addr16
xor
rorb
mov
sarl
mov
ss
test
sub
mov
fstl
adcl
xchg
loope
arpl
or
pushl
and
cmp
xchg
popl
mov
pop
adc
sub
test
lcall
cmpxchg
aam
and
sbb
pusha
add
fistpl
sbb
xor
cmp
cli
pushf
sub
mov
test
mov
adc
fldt
inc
push
jbe
jge
ljmp
rolb
push
mov
dec
repnz
pop
imul
call
mov
stos
pop
mov
xchg
sbb
aas
shll
mov
push
mov
ljmp
sbb
inc
jo
sub
cwtl
inc
cltd
test
adc
in
xchg
sub
dec
aaa
shrl
mov
xchg
aaa
xlat
shlb
mov
arpl
cmp
outsb
jl
divl
inc
sarb
dec
xorl
adc
movsb
stc
pop
xor
mov
pop
adc
out
xchg
insl
and
scas
inc
pop
mov
mov
aad
lea
pop
dec
cli
pop
cmp
insl
sub
mov
mov
push
xor
and
cmpsb
fmulp
adc
insb
mov
dec
push
in
mov
ja
pusha
xor
jmp
xorb
xlat
repz
xchg
push
xor
xchg
ds
inc
adc
ja
push
mov
hlt
and
ficomps
aam
sub
sbb
in
jg
cmpsl
inc
dec
jmp
inc
fdivrl
cmpb
sub
sub
in
ss
dec
addr16
mov
adc
imul
xor
notb
popa
cltd
iret
rorb
mov
push
xor
shl
mov
cmc
sub
stos
adc
mov
adc
pop
outsb
sahf
arpl
and
cmp
xchg
aad
cmp
jne
and
and
pop
cli
jne
imul
inc
in
ss
mov
mov
fimuls
adc
repz
sub
fidivl
loop
es
nop
mov
orb
scas
pop
cs
fisubl
shll
repz
pop
sahf
cltd
fldenv
mov
xchg
push
xor
xor
or
sbb
cmp
sub
and
add
and
jmp
das
fwait
inc
inc
mov
ret
in
divl
ja
js
sub
int
push
les
xlat
inc
add
sub
and
lret
test
jbe
ss
ja
dec
xor
enter
cli
sbb
js
pushf
jns
lcall
adc
std
adc
stos
loop
lahf
into
jno
sbb
mov
add
stos
mov
pop
pop
andl
fcoms
loop
push
lock
sbb
mov
xchg
xchg
lods
aad
loopne
je
push
pop
jnp
lea
jl
cmp
aaa
xchg
into
mov
mov
add
pop
dec
mov
popa
ret
mov
loope
js
mov
enter
stos
pop
xchg
jle
sbb
and
stc
popa
jo
out
inc
dec
xchg
out
fucom
inc
push
shll
sbb
repnz
je
lods
push
gs
inc
mov
or
clc
sahf
or
in
fwait
lahf
rolb
outsb
aas
add
lcall
jbe
test
inc
sbb
cmpsl
in
pop
loopne
movsl
jle
push
mov
jb
ss
mov
lea
cli
stos
call
fsubrl
xchg
repnz
push
cwtl
dec
les
xor
call
es
hlt
cmp
inc
push
push
or
bound
mov
pop
mov
or
aam
xchg
sub
adc
or
shll
sbb
cmp
lcall
and
ja
xlat
lods
xchg
dec
sbb
mov
mov
xchg
jns
pop
popf
adc
mov
dec
dec
jmp
movsl
mov
enter
mov
bsf
aaa
jp
xor
frstor
dec
push
and
xlat
insl
out
inc
sbb
cwtl
cmpsl
sub
push
mov
cmp
or
fcmovnb
jns
mov
arpl
mov
mov
add
xor
sbb
mov
inc
jno
jns
push
pusha
sbb
or
mov
fdivl
imulb
arpl
pusha
pop
adcb
dec
cltd
test
in
jne
loope,pt
push
xchg
push
icebp
adc
fdiv
incl
fdivl
pop
jb
movb
loope
pop
jo
mov
imul
aam
or
cmp
loope
inc
fdivs
js
rclb
mov
pop
add
inc
push
xchg
fnstsw
mov
ds
sub
daa
cmp
add
imul
or
mov
inc
outsb
add
mov
push
add
out
pop
and
or
mov
mov
dec
cmp
adc
aas
loop
ljmp
xor
sub
inc
iret
or
pop
xchg
jno
ficomps
adc
and
out
mov
cmp
jg
push
mov
loop
inc
cmpsb
scas
sbbl
sub
rclb
fiaddl
pop
out
mov
or
xor
dec
gs
pop
jecxz
std
icebp
sbb
loope
enter
push
icebp
jbe
leave
mov
push
and
lahf
inc
enter
sbb
sbb
pop
mov
lea
dec
loop
aad
add
ljmp
xor
xor
fsubl
js
push
je
dec
cli
xchg
push
adc
push
mov
adc
aaa
js
cltd
repnz
lods
stos
adc
adc
push
or
ds
pop
sub
pop
add
sbb
into
adc
pushf
sub
jle
sbb
cmpsb
inc
xor
loopne
mov
jnp
xlat
mov
lods
mov
jae
or
sbb
and
fstpl
dec
jmp
mov
not
mov
cmp
mov
das
mov
shlb
clc
cmc
jne
ficompl
sbbb
inc
sub
mov
cmp
lods
push
mov
rcrl
ja
js
imulb
les
cmpsb
dec
outsl
push
cmp
adc
outsb
mov
fidivrs
mov
lcall
test
sti
mov
iret
jae
roll
out
dec
idivl
ret
jb
rorb
inc
mov
dec
cltd
in
pop
ret
cmpsl
aas
in
jmp
test
mov
inc
cwtl
out
lret
mov
cmc
push
out
std
xor
imul
xorl
imul
cmc
insb
jnp
sbb
jg
nop
and
fldcw
pop
sub
arpl
stos
mov
sub
sub
jecxz
or
jge
mov
mov
add
mov
add
sub
jo
leave
cs
lret
das
je
imul
jl
xor
jge
mov
addr16
bound
xchg
arpl
int3
xorl
enter
pop
sub
mov
jecxz
sub
dec
loope
in
std
mov
pop
adc
ret
adc
push
out
jl
insb
xor
mov
mov
ljmp
inc
xlat
rcl
loope
fnstenv
xchg
cli
mov
add
mov
notl
mov
dec
cmp
mov
jne
jg
lea
mov
sbb
jecxz
lahf
cmp
cmp
fdivl
add
dec
stos
in
psraw
sbb
dec
test
cwtl
pop
outsl
ret
outsl
mov
das
movsl
rol
sub
pop
mov
int3
bound
ror
rolb
mov
adc
or
fwait
xor
shr
push
iret
dec
mov
outsb
sub
scas
mov
clc
inc
cmp
pop
sbb
mov
mov
js
pop
and
dec
das
xor
popa
movsb
sub
push
jge
xor
sub
test
aam
xor
mov
cmp
inc
pop
mov
lret
in
roll
mov
xor
out
dec
mov
pop
inc
imul
and
or
adc
jmp
adc
shrb
and
lock
in
in
scas
cmp
pop
xchg
xchg
pushf
pop
adc
xor
imul
stos
in
rorb
mov
fwait
fs
add
inc
sbb
out
xlat
pop
mov
cmpsl
push
into
in
clc
mov
add
in
jmp
jp
aas
xor
fcoms
into
rcrb
push
and
pop
movsl
sub
jb
mov
xchg
or
das
xchg
cld
decb
cld
dec
int
and
push
pushf
mov
repnz
lcall
xchg
mov
fidivrs
cs
divb
or
inc
out
pop
lea
ret
add
hlt
cld
add
jnp
sbb
pop
adc
mov
lods
inc
or
pop
pop
mov
lret
push
test
cli
push
or
rorl
sbb
mov
mov
int
imul
negb
ret
sub
fcompl
dec
mov
fbld
mov
xor
inc
fcoml
ficomps
fucom
push
loope
dec
mov
insl
push
add
shll
xor
jmp
cmp
push
notb
movsb
push
sbb
jle
in
in
arpl
cmc
or
outsb
iret
pop
xchg
push
inc
scas
hlt
pop
negb
loope
mov
mov
and
cmc
stos
ret
mov
add
sub
mov
stos
xchg
push
test
mov
mov
gs
push
mov
fadd
aas
jp
mov
fldt
daa
cmpsl
add
scas
mov
mov
fimull
mov
dec
cmc
xor
mov
flds
loop
mov
sub
enter
or
or
lahf
daa
cli
inc
call
gs
addl
mov
inc
push
adc
cltd
xor
cmp
mov
and
pop
stos
fdivl
xor
jge
sti
xchg
or
addl
sbb
test
xchg
inc
jno
push
cmc
mov
push
sub
popf
mov
cli
icebp
xchg
stos
das
mov
lret
call
lcall
dec
test
popf
cli
lods
cltd
mov
push
sahf
lods
inc
xchg
aaa
int3
sbb
ds
ljmp
jb
in
test
mov
test
mov
cmp
mov
sbb
stc
outsl
push
pushf
mov
pop
and
inc
jo
dec
push
cmp
pop
pop
sbb
test
bound
mov
in
stos
push
pop
pushf
or
test
mov
fs
setge
in
pop
and
dec
fucomp
ds
ffreep
jbe
int
jecxz
stos
lods
fdivl
fldenv
jb
mov
sub
cmp
xchg
jnp
andb
shrb
int
mov
test
jb
cltd
or
leave
mov
jecxz
pop
aad
xchg
insb
inc
and
idivb
sub
sbb
pop
xchg
sub
lds
mov
out
add
out
xor
decb
jle
push
xchg
pushf
cmpsl
jp
push
lea
pop
xor
xlat
lcall
lahf
xor
nop
call
inc
push
and
adc
cmp
loopne
push
movb
add
dec
jmp
sahf
inc
fcoms
cmp
or
jp
sub
bound
insl
into
lock
call
stos
xchg
stos
in
xchg
loopne
mov
hlt
mov
and
test
repnz
loopne
scas
add
cli
push
pusha
cmp
jbe
in
test
push
add
mov
pop
dec
popa
ret
sub
nop
subl
add
xchg
inc
adc
aaa
movsl
aam
cwtl
pop
arpl
cmpsb
ds
repnz
adc
push
mov
das
lret
jl
roll
cvtdq2ps
jg
adc
inc
loope
adc
cmc
test
mov
je
mov
xor
fcmovb
pop
aaa
mov
and
xor
jmp
cs
inc
ret
sbb
fmull
test
mov
or
loopne
jmp
test
cld
pop
fnsave
push
incl
sti
mov
cmp
mov
pop
outsb
das
clc
call
into
xor
cmc
push
inc
jne
adcl
movsb
pop
call
jno
mov
loopne
repz
jns
cltd
inc
test
in
xchg
in
lahf
jb
mov
sub
je
repz
test
das
arpl
mov
xor
push
vminss
leave
in
js
push
sub
dec
inc
test
jmp
stos
call
je
ljmp
imul
mov
insb
lcall
sbb
lcall
push
mov
loopne
mov
loop
sbb
in
lss
push
pop
das
scas
pop
dec
dec
cmp
cmp
xchg
loope
cmp
push
ret
jbe
mov
xorl
cmp
add
sub
cmp
out
mov
push
repz
or
sti
mov
sbb
fs
enter
shrl
movntq
addb
mov
cmpl
xchg
mov
imul
inc
lods
mov
cmp
and
mov
cltd
pop
icebp
lret
test
dec
rcrl
aaa
je
fcompl
inc
add
ss
add
sub
icebp
cltd
jo
sarl
mov
stos
iret
dec
pop
adc
mov
inc
jl
addr16
movsb
xlat
jbe
out
fsubr
cmc
cld
push
adc
push
out
push
mov
insl
stc
mov
mov
xchg
mov
loope
addr16
repnz
daa
fistl
sbb
mov
xchg
add
inc
cmp
push
add
js
fisttpll
lcall
cmp
inc
sbb
jle
pop
test
call
cmc
movsl
rcr
aas
inc
inc
jl
ss
adc
cmp
jo
repnz
xchg
loopne
sbb
xchg
push
fdivr
and
pushf
xor
add
imul
and
adc
cli
and
scas
or
and
test
ja
das
aad
jnp
sub
sub
lds
push
dec
rcrb
push
icebp
or
inc
mov
push
out
push
push
cmp
push
sub
repnz
push
pusha
pop
mov
sub
xchg
test
insl
adc
shrb
fs
jno,pt
xor
rcrl
mov
jp
jg
inc
jns
cwtl
cld
aaa
mov
test
mov
xchg
sahf
mov
pusha
xor
cs
lahf
stc
push
cmp
add
divb
es
mov
incl
rclb
bound
cmc
les
mov
inc
lods
movsl
aad
push
dec
adc
sarb
mov
add
xor
cmp
sbb
dec
add
movsb
dec
and
ss
cmp
mov
or
nop
jg
mov
mov
jbe
push
mov
scas
cmp
insl
loopne
push
mov
test
pop
shl
mov
stos
xor
xchg
mov
sbb
lcall
in
pop
loopne
push
push
leave
mov
adc
lret
add
rolb
inc
cwtl
sbbl
inc
and
cmp
nop
stc
cltd
dec
mov
dec
mov
dec
test
movsb
out
repz
mov
cmpsb
repz
popa
jmp
out
pop
mov
sbb
jns
popa
xchg
shrb
dec
sbb
in
mov
fwait
cmp
and
test
insl
int3
sub
mov
mov
xor
sbbb
fisubrl
cli
cld
addb
xor
orb
mov
bnd
fucom
lcall
mov
push
jp
lahf
fstps
xchg
rcrl
mov
js
mov
inc
adc
and
dec
jae
movb
cwtl
cli
dec
inc
into
inc
arpl
je
pop
mov
pop
ds
les
movsb
cmp
jns
test
jecxz
int3
aaa
sbbl
inc
push
sub
inc
andl
mov
xchg
mov
inc
sbb
popf
in
cmp
in
jp
mov
cld
mov
mov
add
outsb
mov
ss
and
aas
popf
adc
sub
ret
les
outsb
xor
xchg
push
notl
jo
dec
inc
jge
fs
cmp
sub
mov
ja
xor
mov
mov
adc
insb
xchg
jl
clc
lea
fisubl
fnstsw
mov
int3
mov
aam
loopne
or
out
shrb
sbb
lock
lret
mov
xchg
jns
adc
stos
inc
arpl
mov
push
and
test
lods
jmp
adc
stc
jl
adc
imul
outsb
in
movsl
cmp
sbbl
mov
push
ret
idivl
mov
std
lods
pop
das
mov
or
mov
nop
sbb
push
ljmp
or
in
or
and
int
cmp
cli
les
and
jecxz
fldcw
mov
xchg
icebp
sbb
dec
into
aaa
mov
clc
mov
popa
sub
in
or
cmc
sub
insb
mov
cmc
and
mov
imul
xchg
pop
fidivs
jno
inc
sub
stos
jmp
shlb
in
fwait
jmp
aam
inc
add
jmp
lahf
test
push
mov
lahf
mov
imul
push
imul
fwait
cmp
roll
negb
mov
push
mov
and
and
or
lret
int3
xchg
sbb
pushf
fisttpll
imul
sbb
popa
shr
xchg
sbb
mov
pop
add
ljmp
mov
sub
sub
jae
jg
iret
push
rorb
adcl
push
mov
hlt
daa
ret
inc
clc
mov
sbb
fstl
xor
or
pop
mov
scas
mov
out
sti
leave
jae
jg
shll
out
jns
fstps
xor
shrl
jle
test
and
pop
xor
std
push
pop
in
testb
cmp
fnstenv
push
sbb
aam
mov
addr16
fistl
push
jnp
mov
ficomps
push
mov
arpl
daa
loopne,pt
out
imul
mul
jb
adc
aaa
decb
jne
icebp
inc
cli
pushf
lock
xchg
incl
add
add
add
mov
dec
and
inc
les
xor
sbb
rol
jnp
ja
ljmp
movsb
sbb
jo
xchg
and
repnz
movsl
adc
orl
test
and
fidivrs
push
test
movsl
lods
inc
mov
mov
ret
loop
mov
test
sub
sahf
jecxz,pt
leave
clc
fwait
lcall
call
jns
mov
lahf
fmul
inc
popf
or
push
call
movsl
stos
enter
mov
push
inc
loop
mov
imul
pop
and
xor
push
jne
cli
fwait
sub
rcll
mov
mov
xor
dec
pop
pop
xchg
jg
flds
and
lret
xchg
xchg
repnz
mov
stos
call
cmp
cltd
mov
push
jmp
or
insl
push
fdivrs
mov
sub
xchg
pop
pop
mov
test
and
cmpl
mov
mov
fcmovbe
lods
jns
stc
out
loop
push
mov
xchg
mov
and
insl
ja
imul
mov
mov
cmpsb
xor
add
fcoms
popa
cmp
shrl
cwtl
sahf
sbb
mov
adc
stc
clc
push
stc
sub
lcall
jle
add
push
adc
jnp
xchg
or
dec
xchg
inc
data16
mov
into
icebp
mov
and
dec
movsb
repz
jge
imul
inc
and
sub
dec
es
inc
pop
jo
dec
ss
movsb
cmp
mov
sbb
cmpps
sbb
mov
add
sahf
jle
rorb
or
loope
stos
idivb
xchg
fs
popf
sti
popa
clc
sub
out
xchg
jecxz
test
popf
or
jno
test
into
pushf
push
mov
lea
test
sbb
jp
arpl
outsl
dec
jne
inc
arpl
iret
stc
pop
mov
pop
pop
rclb
rcrb
pop
scas
arpl
fisubrl
ss
sbb
jp
scas
lahf
mov
out
cli
in
sar
adc
lds
sbb
ds
dec
mov
cs
icebp
scas
stos
xchg
sub
lahf
ss
push
fldl
and
and
cmpsl
and
sub
std
inc
pusha
fbstp
leave
push
clc
scas
jge
repnz
xchg
sbb
imul
jg
add
rcl
adc
sub
dec
cld
ret
xchg
adc
jb
mov
arpl
push
nop
inc
imul
dec
fsubl
fs
mov
pop
stos
ret
push
adc
subb
out
sahf
push
lock
jl
rep
int
aad
notl
movsl
add
push
mov
out
pop
outsl
xchg
sub
push
mov
ss
inc
pop
cmp
push
add
mov
push
scas
xlat
mov
js
add
in
fsubs
mov
fimuls
adc
in
in
sub
fiaddl
xor
inc
inc
sbb
ja
je
dec
aad
xchg
lds
pop
ret
jecxz
enter
xor
test
roll
insl
dec
in
cs
ja
or
cmpb
or
mov
sbb
lret
or
test
mov
mov
outsl
jnp
lahf
xor
ficoml
nop
push
pop
add
outsl
jae
sbb
sub
mov
mov
mov
lahf
aam
jo
jl
rcll
mov
dec
iret
fstps
cmp
jns
adc
mov
add
push
xor
into
movsb
stos
or
pop
movsl
inc
loopne
jge
or
mov
mov
add
mov
mov
test
jns
pop
sti
pop
jb
mov
bound
adc
pusha
xor
rol
andb
add
test
jne
inc
sbb
jnp
push
mov
dec
or
insb
ror
dec
fwait
jle
lds
lret
or
orl
scas
xlat
dec
xor
dec
fadds
jo
push
popfw
pushf
dec
mov
in
mov
sub
push
mov
xlat
jg
adc
aad
sahf
add
je
sti
mov
shll
lret
mov
aam
dec
rolb
mov
fdiv
push
mov
loope
pop
push
inc
lahf
je
pushf
insb
xchg
push
jno
inc
cmp
jp
mov
push
out
mov
push
arpl
adc
mov
or
pop
out
pop
aaa
mov
aam
fs
mov
fidivrs
jl
outsb
cmp
in
push
orl
subl
call
cmp
xchg
pop
stc
lahf
adcl
js
dec
xor
xchg
jge
sarl
cmp
dec
adc
jge
imul
sbb
xlat
rol
push
sub
pop
fwait
mov
test
call
ja
add
imul
xorl
sbb
sti
stos
or
inc
fsubrl
dec
xlat
fcmove
loopne
fldt
out
push
hlt
nop
fstl
int3
gs
mov
add
mov
je
push
and
push
pop
xor
fdivrl
jae
jns
in
inc
jge
addl
cmp
testl
mov
scas
xchg
sub
repnz
arpl
pop
inc
loop
xchg
xchg
shrb
jg
lea
stc
xchg
popa
sbb
setge
adc
cmp
pop
push
fstpt
cmpl
call
test
or
sub
psubusb
jnp
sub
jg
jg
cmc
cmp
or
mov
add
pop
incb
mov
sbb
pop
add
dec
inc
fildl
sub
insb
mov
outsb
add
lods
mov
or
rcrb
mov
lds
lret
inc
mov
push
insl
hlt
push
insl
ss
fisttps
cmp
scas
mov
iret
mov
jo
imul
sbb
bound
fnstenv
mov
aad
jb
not
mov
jecxz
and
icebp
xchg
lods
orl
jg
out
test
jmp
and
stc
add
icebp
mov
sbb
ja
push
jmp
daa
inc
pushf
adc
mov
data16
aas
movb
push
dec
lock
cmp
lcall
imul
aam
mov
addr16
sarl
mov
inc
sbb
xchg
sub
cmp
popa
out
notb
pop
push
pop
and
xor
scas
leave
jae
adc
mov
cmc
insl
inc
out
and
call
ds
jbe
sub
idivb
mov
cmc
mov
xchg
mov
sub
cmp
hlt
lret
iret
ret
sbb
repz
or
xchg
fwait
js
and
pop
push
sbb
fs
mov
and
inc
sbb
movsb
shll
rclb
inc
ss
icebp
or
jmp
and
mov
jl
fcompl
xchg
arpl
xor
imul
xchg
jl
xor
push
leave
fsubr
sti
adc
icebp
mov
cs
dec
add
mov
mov
jmp
test
lods
mov
dec
mov
dec
shrl
sbb
lds
call
sti
stc
or
push
push
jne
push
inc
out
rolb
xchg
lds
outsl
dec
outsl
sub
jg
pop
sbb
push
bound
or
adc
pop
push
push
mov
push
mov
push
ret
or
mov
push
dec
in
stos
cli
inc
sub
fwait
mov
xchg
icebp
mov
repz
xchg
xchg
imul
jp
push
mov
testb
stc
inc
push
sub
cmp
andb
mov
adc
add
xor
call
sti
hlt
and
jb
stos
stc
sbb
ret
adc
popa
jle
jo
dec
mov
cmpsb
test
movsb
mov
aam
jns
sub
sub
das
mov
ja
aad
xor
repz
jl
push
out
xchg
xchg
adc
pop
mov
lods
and
jo
dec
mov
lret
mov
sub
pop
std
aam
out
pop
mov
cmpsb
aaa
int3
mov
cmpl
es
mov
js
ljmp
jae
sbb
inc
fidivs
pslld
fldt
and
mov
mov
cmp
adc
sbb
imul
adc
xor
jmp
in
fs
push
iret
dec
cmp
mov
int3
repnz
jp
subb
stos
stos
repz
shlb
push
or
fwait
lods
subb
inc
out
jle
ret
rorb
in
lcall
lods
jo
fisttpll
cmp
fwait
pop
jmp
jg
inc
cmp
sbb
shrb
adc
mov
dec
aad
ret
or
enter
sub
mov
dec
adc
test
prefetch
pop
shrb
mov
jl
cmp
inc
incl
mov
negl
xlat
sti
push
nop
add
mov
popa
add
mov
sbb
test
movsb
dec
enter
sub
mov
mov
jno
inc
fmull
stos
sbb
jne
xchg
xchg
std
ret
inc
push
fbstp
and
dec
add
xorl
in
addr16
test
ljmp
outsl
add
sbb
stos
rolb
xchg
dec
jmp
lret
fcomps
ds
mov
fistpl
test
pop
mov
iret
pop
jnp
xchg
pop
fisubrl
xchg
adc
sbb
aas
cmp
push
sub
imul
lock
or
sub
inc
sub
int3
arpl
adc
add
jg
rcrl
jl
scas
mov
pop
in
clc
out
lods
add
in
or
mov
dec
adc
xor
dec
pop
add
jns
bound
push
push
pop
add
andl
inc
shlw
jg
sbb
orl
cmpl
daa
pop
push
push
popl
fiadds
pop
cli
int3
int
in
stos
ss
stos
inc
icebp
mov
das
outsl
adc
pusha
push
cltd
xchg
jle
push
push
andb
insl
add
add
fmul
incb
or
sub
mov
mov
jecxz
out
ret
lods
jmp
cs
mov
mov
sub
mov
xchg
mov
and
mov
cmp
pop
enter
pushf
arpl
jo
adc
pop
hlt
push
mov
xchg
test
sbbl
lahf
in
ja
add
mov
jo
and
flds
cmp
test
psllq
stos
in
sahf
sub
push
add
ss
pop
pop
or
lahf
mov
dec
sub
sbb
add
stc
les
stos
jne
aas
int3
jg
dec
lock
divl
das
clc
or
add
adc
mov
loope
aad
push
cmp
outsb
mov
daa
lock
add
fadds
mov
push
mov
inc
stc
mov
xchg
insb
or
xor
push
lcall
aas
nop
in
inc
loope
clc
fwait
jbe
insb
iret
cwtl
xchg
push
mov
jl
test
inc
pop
and
inc
xchg
out
ss
inc
out
insb
cltd
push
mov
into
xor
inc
pop
arpl
insb
test
hlt
jbe
jmp
iret
sahf
hlt
xor
std
femms
adc
and
dec
push
cltd
outsl
push
push
rcr
xor
outsb
aas
fnsave
mov
adc
in
push
jno
les
cmp
jo
out
mov
test
mov
sbb
outsb
es
or
cli
or
scas
pop
xchg
repnz
nop
push
cmp
xchg
scas
or
loop
je
push
rcrl
pop
sub
xchg
pushf
dec
fimull
jbe
jmp
test
xlat
pop
mov
mov
inc
fcos
push
clc
sbb
and
mov
xchg
scas
push
jae
lcall
test
mov
xlat
ljmp
cli
cmpb
pop
xchg
push
dec
shr
jns
je
in
mov
enter
aaa
loope
loopne
jmp
cmp
mov
mov
push
popa
push
and
mov
dec
push
push
xorl
cmp
and
bound
mov
push
pop
out
mov
mov
popa
lods
sub
push
imul
imul
sub
xor
mov
push
mov
in
fcomps
loopne
lahf
push
idivb
xlat
fstps
insl
test
cmp
jmp
dec
cmp
clc
cmc
mov
aam
mov
sbb
in
gs
jmp
loope
jo
adc
incl
int
add
inc
sahf
xor
add
shll
add
pop
jg
dec
xor
shrb
cltd
cmp
fsts
jo
testb
pop
shll
fcompl
aad
in
hlt
ja
xlat
add
adc
cld
icebp
or
clc
jb
sbb
xor
addr16
enter
xchg
add
ja
std
or
pop
cmc
dec
push
les
fldenv
inc
fld
push
or
dec
mov
cwtl
inc
fisubl
mov
rolb
mov
ror
xchg
adc
sahf
sub
push
or
shl
or
pusha
inc
loop
imul
imul
mov
mov
mov
pop
jge
popa
cmp
cmp
clc
lcall
pop
or
inc
test
stc
shrb
inc
mov
icebp
or
xchg
test
cwtl
jg
mov
sbb
push
inc
call
push
push
loope
into
out
and
xchg
stos
dec
lret
xor
xorb
sar
mov
cli
mov
pop
xor
mov
daa
data16
and
push
cmpsb
push
adc
cmp
adc
xor
rcrb
xor
pop
pop
in
push
mov
arpl
cld
adc
push
and
sti
stos
stc
movsb
test
xor
addb
or
in
mov
fisttpll
mov
jbe
jb
and
ret
stos
xchg
lahf
ss
mov
mov
scas
test
mov
or
pop
out
pop
or
xlat
bound
adcb
or
negb
add
jge
sbb
hlt
stc
fiadds
push
mov
fsubl
popa
cmp
xorl
xor
pop
cmp
movl
aaa
xchg
pop
and
cmp
inc
pop
icebp
push
cli
inc
push
leave
fucomip
push
push
push
jne
mov
test
imul
sub
pop
mov
enter
outsl
sub
and
in
cmp
sarl
sbb
mov
mov
icebp
jb
jnp
xor
or
iret
data16
ja
arpl
sti
jno
or
dec
push
or
inc
push
cwtl
xor
stc
lret
dec
repnz
and
xchg
ds
out
mov
jecxz
je
mov
and
pop
mov
sub
or
into
cld
enter
lret
and
sbb
sti
sbb
jbe
rcrl
or
xchg
outsl
xor
pop
pusha
adc
sbb
sbb
outsl
popf
stc
shll
xor
xor
inc
loopne
jl
mov
inc
sbb
dec
mov
movsb
jecxz
inc
ficoms
stos
inc
dec
mov
push
outsl
pop
and
cmp
ret
popf
dec
cmpsl
repz
fidivrl
pop
mov
or
mov
pop
inc
xchg
in
rcll
mov
les
add
sbb
xchg
fwait
js
sarl
mov
push
cltd
sti
stos
fstpl
pmaxsw
mov
pop
push
test
xor
ror
aam
orl
xchg
decb
lcall
pop
or
pop
adc
xchg
add
shrb
ret
add
pop
cli
cmc
je
or
adc
mov
aaa
ja
mov
roll
dec
inc
jnp
push
fisttpl
adc
jnp
pop
cltd
add
cmp
jmp
lret
call
imul
fs
dec
mov
popa
dec
icebp
jbe
test
add
sub
es
cld
inc
test
push
scas
dec
push
and
int3
inc
sub
int3
pop
and
mov
adc
rcrb
mov
addr16
sbb
push
pop
fs
clc
cmpsl
push
sbb
cmpsb
adc
insb
cmpb
out
daa
out
jb
cs
push
rol
dec
cltd
pusha
lret
cld
jecxz
and
push
es
dec
aad
sbbl
cmc
fldl
shrl
push
addr16
push
andl
in
in
mov
dec
pop
outsb
jg
jg
mov
hlt
psllq
insl
sub
test
or
xor
in
aam
lret
push
aas
rcll
mov
xor
xor
lcall
sbb
jmp
xchg
shll
and
adc
cmc
rcl
imul
inc
dec
jp
jl
js
into
fucom
mov
rcpps
scas
repz
mov
pop
call
push
add
mov
out
leave
fdivrp
adc
out
adc
in
and
xor
lret
add
idivb
ret
add
aad
jmp
fs
adc
ds
out
popf
dec
pop
and
mov
into
in
jl
aaa
sub
ret
iret
mov
jp
orb
std
jo
cmpsl
gs
ja
xor
outsb
sub
cld
roll
add
popl
and
in
clc
mov
aad
cli
push
push
in
insl
jb
sub
and
or
add
xchg
push
sbb
sbb
cld
and
popf
mov
ja
mov
fisubrs
in
jge
lds
cli
iret
fisubrs
loop
scas
jo
cld
sub
pop
testb
or
andl
lock
and
jne
rclb
jbe
insb
shlb
xchg
dec
mov
xchg
jp
cmp
dec
pop
test
sbb
cs
fld
push
push
fisubs
dec
das
jmp
cmp
movsl
movsl
out
pop
std
and
out
push
fnsave
mov
lret
pop
mov
jb
push
out
push
or
rorb
jmp
jb
fwait
bound
xchg
dec
in
es
pop
jle
sbb
ret
repnz
loopne
stos
loope
js
jmp
inc
lret
push
fistpll
xchg
sbb
xchg
mov
sbb
jp
mov
aas
fistpl
mov
lock
jmp
adc
mov
in
xchg
ss
sarl
pushf
xor
add
popa
addr16
jne
adc
or
jg
aaa
jbe
xor
mov
cli
xchg
pushf
xor
daa
ficompl
add
daa
push
test
aam
adc
or
lahf
and
das
pop
dec
mov
push
ss
inc
pop
sarl
cmc
fmul
lahf
test
lahf
xor
add
mov
xchg
mov
sbb
ds
std
pop
fnstsw
cwtl
sub
pop
xchg
jg
outsl
mov
repnz
adc
pop
sub
out
mov
sarl
pop
ss
push
pop
ret
or
jl
pop
sub
mov
dec
outsb
add
xor
pop
cmp
lock
cmp
mov
fdivr
pusha
shl
sbb
sbb
jle
cmc
xchg
lock
jb
push
push
xchg
push
call
sahf
clc
stos
and
jp
paddb
das
sub
pop
xor
xor
xlat
pusha
ret
lea
outsb
mov
out
dec
stos
loope
sub
stos
push
lock
shrb
xor
loope
jnp
xchg
iret
jl
xorb
mov
fisubs
inc
iret
loope
pop
mov
stc
or
xchg
jne
lea
ds
popf
xor
dec
jle
stc
pop
mov
or
fnstsw
dec
fbstp
addr16
cmp
fdivrl
jo
push
push
fucom
xor
rol
mov
mov
mov
inc
dec
repnz
mov
jmp
fsubrl
pop
dec
mov
jns
jecxz
ljmp
adc
stc
mov
cs
in
rorl
sub
add
enter
jmp
xlat
hlt
into
jl
jbe
sub
dec
inc
lret
sbb
ss
fistpll
sub
pop
jb
push
add
mov
mov
movsb
les
mov
push
arpl
aad
fucom
cmp
sahf
jmp
cli
and
sbb
mov
mov
test
fcompl
pop
in
xor
push
add
les
lcall
cmp
std
mov
loopne
push
out
jle
ret
popf
lods
cmc
cmp
jge
aas
ljmp
dec
and
jmp
jle
psllw
sub
pushf
or
scas
call
stos
les
mov
fsubr
or
frstor
fisttpll
int
ljmp
cmp
pop
sbb
aad
mov
movsb
xchg
aaa
fiaddl
and
popf
pop
das
adcb
mov
lea
jl
sbb
stc
mov
fsubr
mov
test
scas
insl
cmpsb
dec
icebp
mov
fadds
imul
mov
out
sti
cmp
xchg
mov
pop
mov
lods
fisubl
sbb
outsl
jnp
and
shll
popf
int
fistl
fsub
or
aas
daa
adcb
fcoml
mov
lahf
ss
lcall
dec
or
scas
mov
in
fs
int
out
push
aam
jnp
inc
jmp
mov
loop
jmp
sub
sbb
xorl
mov
mov
enter
jnp
adc
in
mov
insl
jg
test
pop
xchg
jns
imul
ret
repz
push
in
clc
test
xchg
lret
ja
add
sbb
and
push
in
cltd
fdivrl
mov
or
or
lahf
stos
sub
inc
movl
inc
push
jmp
xorb
fs
outsb
in
xor
shl
push
sahf
xor
sbb
cli
rclb
lods
jne
sub
in
test
mov
adc
mov
les
push
and
aam
jle
and
inc
adc
pop
add
test
rcl
imul
xor
xchg
dec
nop
stos
ss
cli
jne
ds
scas
mov
fnstcw
repnz
adc
into
imul
push
out
ss
clc
mov
mov
je
arpl
xchg
dec
enter
ret
in
fmuls
push
or
inc
inc
xor
shll
out
int
and
lds
icebp
xchg
pop
pop
and
mov
sub
movsl
push
stos
xchg
xchg
add
shl
dec
mov
pop
shlb
imul
mov
mov
sbb
jns
cmc
lret
mov
pop
shrb
push
ret
cmp
ss
sarb
iret
jmp
sbb
gs
add
xlat
sti
mov
or
xor
inc
out
sti
stos
inc
ret
rcll
fisubl
fistpll
shrb
test
js
test
mov
sbb
xchg
enter
cmp
sbb
aaa
mov
jg
jnp
cli
and
aam
push
jp
dec
repz
repz
popa
je
inc
jne
adc
es
jmp
subl
clc
fldl
in
mov
test
inc
lds
ljmp
sarl
jbe
stos
jo
pop
ss
jge
test
mov
movsl
aaa
mov
xchg
adc
adcl
lock
das
icebp
adcb
push
cltd
or
mov
repz
test
movsl
xchg
subb
movsb
lcall
fistl
sbb
sbb
imul
cmp
pop
imul
ret
adc
mov
sub
and
push
jge
push
dec
ljmp
mov
movsb
ljmp
jae
imul
in
sbb
or
jns
jecxz
icebp
adc
mov
jae
and
or
xlat
mov
loop
in
movsl
or
pop
adc
mov
jge
sbb
scas
leave
loope
cld
outsb
add
outsl
pop
clc
jnp
and
pushl
iret
cmp
popa
sub
repnz
imul
mov
in
inc
frstor
lahf
add
testl
loope
test
cmp
test
add
test
mov
negb
push
adc
rorl
mov
out
push
jae
push
les
xorb
repnz
insl
sub
xchg
es
mov
mov
ds
xor
push
mov
pop
mov
sub
xchg
es
aad
dec
cs
xchg
hlt
mov
sub
shll
add
jle
mov
mov
arpl
push
xlat
sbb
pop
lret
clc
xchg
fs
gs
xchg
je
pop
pop
mov
mov
jno
cltd
inc
arpl
in
mov
ja
or
cmp
jmp
lock
adc
cltd
adc
dec
pop
jp
jle
jmp
pop
sbb
call
pusha
ret
lret
push
in
mov
sub
jg
sbb
xchg
xchg
ds
xchg
insb
cmpsl
test
movsl
jns
pop
lret
sbb
mov
push
stos
xchg
fnsave
add
jo
and
ljmp
mov
int3
xor
xor
es
lret
shlb
popa
rolb
mov
pop
and
sbb
lods
mov
fdivs
shlb
or
adc
jbe
mov
fsub
mov
dec
mov
and
mov
js
in
lds
push
repz
pop
outsl
orb
mov
pop
lock
add
mov
sbb
scas
pop
imul
dec
aad
add
outsl
add
cltd
fwait
adc
push
mov
cwtl
call
fbld
sti
lahf
push
repz
sbb
pusha
movsl
test
inc
and
jne
jp
out
fcoml
ret
test
popa
adcl
mov
outsb
daa
aaa
lahf
stos
pop
subl
mov
pop
addr16
ljmp
das
adc
or
push
mov
lret
mov
je
rcrl
xor
or
stos
mov
push
mov
adc
xor
or
lea
or
add
das
test
repz
or
out
jmp
mov
push
jmp
mov
mov
add
ss
dec
cli
xchg
cmpb
sti
push
movsb
push
cmc
insl
pop
lcall
test
imul
inc
cld
jnp
out
add
fwait
or
inc
inc
in
insl
out
ret
pop
aas
pop
into
or
and
jb
mov
int3
mov
push
push
cmpsl
in
loop
enter
pusha
and
xchg
aaa
pop
lret
mov
push
cwtl
xlat
inc
mov
pop
cli
cmp
xor
cmp
test
hlt
rcll
mov
jmp
loop
adc
push
push
push
push
dec
iret
cmpsl
mov
ja
and
push
pop
xor
jge
out
xor
sbb
movsb
insl
cmpsb
popf
xor
loope
push
imull
mov
sub
pop
cmp
xchg
daa
add
xor
sbb
xor
sub
adc
hlt
cmp
mov
cwtl
icebp
test
mov
loopne
ljmp
call
and
sub
jmp
test
repnz
int
stos
adc
repnz
dec
mov
and
push
or
xor
loop
jbe
adc
ret
shll
lahf
insb
daa
add
test
lods
xor
inc
pop
lods
push
fsubr
stc
xor
push
lret
das
push
and
xchg
push
mov
mov
mov
push
aad
lds
sbbb
push
xchg
sbb
pop
mov
sbb
mov
add
loope
cmpsl
enter
mov
fbstp
mov
fld
mov
cmp
xor
inc
pop
dec
rclb
aas
test
inc
push
lock
fdivl
in
enter
mov
mov
xchg
sbb
jmp
inc
scas
sub
mov
arpl
pop
mov
call
push
test
insl
pop
insb
add
pextrw
and
aad
adc
xor
fs
inc
add
fdivrs
jne
std
mov
lcall
in
pop
movsl
lea
insl
lret
into
sbb
pop
insb
add
mov
xlat
jmp
mov
mov
movsb
push
cmp
cmp
cli
inc
cmp
sahf
mov
lea
fisubs
xor
sbb
cmpb
jb
sbb
addr16
xor
aam
and
daa
movsl
xor
add
test
push
xchg
test
nop
popl
int3
sbb
push
and
inc
mov
dec
dec
dec
sbb
jp
dec
xor
loopne
repnz
fstpt
xchg
dec
xor
bound
push
out
mov
xchg
test
sbb
xor
repz
mov
cmp
cltd
jge
loop
sbb
sbb
add
cmp
mov
pop
adc
int
hlt
mov
loop
js
test
inc
pop
rorl
jmp
icebp
sbb
out
cmpsl
xor
xchg
outsl
ja
subl
jns
das
xchg
sub
and
stc
jmp
testb
sahf
subb
iret
jp
xchg
jne
lret
sti
je
or
cmp
xchg
and
sbb
and
mov
inc
add
push
push
fwait
push
inc
lods
ret
push
push
ss
xor
inc
roll
jp
or
rcrl
xchg
add
mov
sub
xlat
or
adc
addr16
or
lea
mov
nop
subb
ljmp
or
out
aaa
dec
jmp
mov
imul
out
add
xor
popf
push
or
inc
push
or
mov
inc
jnp
cwtl
cld
rcrb
rcl
pusha
mov
ljmp
adc
imul
shll
int
loopne
gs
adc
hlt
sbbl
mov
js
xor
inc
xlat
jp
xor
jecxz
sarl
push
stos
adc
pop
jne
dec
cmpsl
call
aad
push
mov
outsb
outsl
stos
cltd
mov
lret
push
and
ret
push
jg
aas
adc
outsl
out
jg
pop
or
fists
fstpt
movsb
pop
mov
addr16
cmp
pop
icebp
adc
mov
xlat
push
ret
ds
leave
pop
mov
out
xorb
sarl
push
rclb
mov
and
xchg
out
ss
pop
cmp
sub
pushf
pop
lcall
adc
add
jne
cltd
icebp
aas
shrb
je
mov
lods
jno
icebp
pop
sbb
cwtl
repz
loopne
clc
adc
mov
sbb
outsl
and
pop
pusha
or
fnstenv
mov
inc
mov
xor
js
pop
sub
daa
sbbl
jnp
mov
add
es
popf
gs
pop
push
jbe
shll
jno
mulb
sub
lea
mov
call
stos
xchg
jne
inc
lahf
shrb
and
mov
and
mov
data16
pop
les
in
int
popf
add
cmpsb
inc
in
sbb
repnz
jle
add
in
mov
test
pop
loopne
mulb
addr16
jnp
cmp
out
aam
adc
sub
mov
sar
inc
mov
lods
sbb
lret
inc
lea
push
lahf
mov
mov
xor
push
cwtl
loop
mov
push
jecxz
imul
sbb
cld
inc
add
jp
sub
xor
enter
and
cltd
mov
pop
out
shll
mov
inc
cmc
jle
scas
les
pop
jge
push
or
pop
xor
jmp
cs
inc
pop
int
loop
enter
sub
stos
pop
cli
lods
cmp
ret
gs
add
adcl
and
fs
inc
mov
mov
xor
xchg
adc
out
movsb
repnz
lret
xchg
test
inc
in
fmuls
sbb
mov
jae
push
pusha
push
loope
xor
jmp
dec
and
ss
xchg
sub
mov
push
xchg
orl
add
adc
lahf
xchg
xlat
push
call
dec
in
or
pushf
xor
cld
xchg
sub
sbb
idivl
mov
cmpsb
mov
sub
xlat
adc
out
and
hlt
xchg
faddl
popf
sbb
outsl
push
pop
sbb
ds
icebp
push
jg
sahf
or
push
rcrb
push
and
and
mov
ret
push
xor
mov
jmp
es
sahf
subl
mov
pushf
scas
mov
div
dec
mov
push
sub
ret
and
jecxz
insl
nop
je
rcrb
and
stos
cmc
cvttps2pi
rol
jl
iret
es
pop
jmp
sbb
js
hlt
cmp
and
sub
stos
cli
pusha
jb
inc
in
inc
daa
arpl
scas
in
std
andb
mull
inc
lret
clc
mov
mov
sub
push
insb
mov
push
and
lea
imul
int
inc
adc
and
adc
lret
js
dec
cmp
inc
dec
cmp
in
mov
pop
stos
add
push
test
mov
clc
mov
clc
sbb
xor
xor
mov
jge
fisubl
cmp
cmpsl
ret
mov
mov
insl
sbb
add
push
popf
cmc
mov
clc
mov
push
movsl
jp
or
mov
inc
add
inc
mov
loop
lcall
adc
add
cltd
in
mov
jns
mov
add
mov
sahf
cmp
out
push
sti
add
or
fcompl
notb
shl
lcall
sub
fdivs
dec
cwtl
cmp
mov
and
es
sahf
cmpsl
cmp
lret
sub
mov
arpl
or
xor
pop
jmp
sub
jo
mov
xchg
add
es
sbb
push
cmp
jb
and
xchg
push
out
ret
in
aam
imul
int3
pop
repz
loop
scas
and
bound
xchg
sbb
push
imul
in
mov
ret
hlt
lock
xor
lret
mov
mov
cmp
inc
fmull
test
neg
mov
js
mov
dec
fistl
pop
call
lret
pop
mov
jo
sbb
leave
pop
arpl
sbb
mov
xlat
mov
cld
lods
test
pop
insl
cld
sbb
out
cmp
js
sbb
rolb
repnz
notl
mov
jae
aas
push
repnz
adc
jnp
mov
enter
aad
mov
mov
jmp
les
xlat
mov
or
mov
movsb
movsl
ret
aam
addl
or
mov
jle
int3
loope
lahf
shrb
adc
cmp
ret
xchg
mov
dec
popa
stc
dec
out
insb
test
adc
dec
xchg
jge
pop
scas
sbb
push
sbb
mov
lea
jge
xchg
pop
jns
shll
int3
lcall
stc
and
imul
nop
add
lret
out
push
ljmp
ret
ss
ret
bound
in
jmp
loope
addr16
decb
and
cs
sub
inc
jmp
xor
xor
je
jnp
xchg
pop
addr16
pop
push
dec
cmp
dec
dec
cmp
inc
xchg
sbb
fwait
dec
notb
pop
jle
cld
es
push
mov
dec
sub
jp
lds
fsts
lea
in
push
dec
hlt
cli
xchg
out
or
mov
in
mov
xchg
pop
or
and
pop
add
rorb
push
jbe
es
mov
rcrb
push
push
fisubs
cmp
addr16
bound
sbb
or
sbb
sub
mov
inc
subb
test
xchg
mov
sub
push
cmp
mov
ror
fmuls
lods
adc
jb
ljmp
add
les
fdiv
insl
mov
mov
jecxz
std
ljmp
xlat
test
mov
add
mov
xor
xchg
push
push
xchg
pop
xor
std
pop
dec
pop
jo
cmp
call
aaa
mov
and
popa
mov
loopne
cmp
add
ret
push
sub
repnz
fsubr
repz
mov
sbb
jo
orl
ret
cs
scas
inc
sbb
inc
lret
mov
or
nop
add
adc
xchg
xor
jo
lods
ljmp
pushf
in
cwtl
adc
sub
lret
push
fs
repnz
adc
js
pop
sub
xchg
xor
jg
in
mov
sbb
inc
ret
sahf
repnz
dec
push
inc
stos
out
in
dec
in
sbbl
rcrb
pusha
sub
sti
adc
and
sub
mov
jbe
inc
sbb
mov
push
lcall
pop
jecxz
push
add
xchg
push
xor
xchg
jb
movsb
jnp
lahf
push
or
cli
cltd
repnz
push
cmpsl
fldenv
das
shll
leave
pop
mov
repnz
push
imul
or
testl
jns
jae
adc
cmc
js
mov
pop
push
nop
xchg
mov
aaa
in
aas
push
test
jl
jle
xor
dec
xor
cld
insb
inc
stos
out
push
sub
iret
mov
add
scas
fmul
xchg
aad
repz
addr16
adc
sbb
dec
adc
repnz
cld
hlt
xchg
mov
mov
jge
adc
push
icebp
push
test
ja
push
jbe
xor
orb
xchg
xor
lea
clc
mov
jae
push
mov
hlt
loope
inc
push
pop
mov
setge
cmp
je
and
cmp
insb
add
ja,pt
dec
leave
adc
into
sub
lods
jo
inc
je
mov
xchg
frstor
mov
adc
hlt
pushf
push
add
jg
xorb
add
xchg
sub
sub
test
in
xchg
inc
pop
dec
lret
or
cmc
fildll
rcrb
ds
data16
jmp
scas
sbb
rclb
sub
sub
mov
mov
dec
mov
jne
add
dec
ret
in
stos
sahf
push
cmp
dec
add
loop
push
ret
jb
subb
js
ret
out
std
pop
imul
mov
pop
imul
je
dec
fnstcw
xchg
pop
add
inc
xor
scas
mov
lret
sti
mov
push
lahf
lds
dec
xchg
inc
jg
mov
lock
ret
mov
int3
mov
daa
test
mov
repz
sahf
or
inc
dec
jecxz
jecxz
and
jbe
add
inc
mov
push
je
cld
mov
adc
dec
movsb
xchg
hlt
mov
inc
dec
dec
jl
fcoms
xchg
outsb
xor
shl
mov
outsb
add
and
jp
in
dec
adc
jle
or
jnp
mov
mov
jb
fsub
xor
mov
mov
jmp
and
addb
mov
jae
lods
mov
dec
xor
and
enter
scas
insb
jns
xchg
mov
cmpsl
sbb
jns
mov
lock
push
into
and
sbb
jl
sub
push
pop
rcrl
ds
mov
mov
adc
fldl
mov
rcr
fsubrs
jno
mov
dec
addr16
pop
cmp
ret
adc
pop
jmp
adc
xor
out
clc
xchg
mov
sbb
fisttpl
and
popa
cwtl
fsubrl
and
fsubl
scas
lret
sbb
frstor
lcall
xchg
std
jo
lock
or
dec
js,pt
pop
and
fwait
jbe
enter
pushf
cmp
pop
add
insl
or
mov
iret
int
lret
mov
mov
mov
push
cltd
jnp
lret
das
popa
cmp
std
xchg
dec
add
xchg
sbb
push
push
jg
push
shrl
sahf
xor
fldenv
jns
xchg
lds
mov
jg
xchg
push
fmull
ret
icebp
mov
lret
mov
ret
js
sub
pop
aas
inc
aam
sti
pusha
mov
xchg
in
inc
pop
and
pop
nop
push
lret
nop
cmpsb
jge
mov
add
and
inc
ret
sub
stos
pop
repz
sub
pop
popf
jp
inc
mov
cltd
xor
call
push
mov
or
lahf
mov
sbb
movsl
out
incb
push
iret
and
sete
or
cmp
mov
dec
add
or
shl
xor
stc
je
in
or
mov
cmp
sub
xchg
xchg
mov
in
push
cmc
adcb
test
call
ds
cs
jmp
and
lret
arpl
pop
in
push
xlat
xchg
push
inc
call
add
fisttpll
dec
fst
mov
mov
xchg
jns
mov
cmpsl
ljmp
mov
pop
mov
icebp
jns
fnclex
cmp
adc
dec
loop
and
scas
fcoms
popa
xor
mov
push
or
nop
sub
xor
add
subb
cmp
lahf
mov
pop
mov
add
sarl
pop
push
push
jae
add
mov
out
loop
cld
adc
icebp
cmpsb
fbstp
lock
ja
flds
adc
lea
jae
scas
xor
pop
jne
adc
je
call
push
xchg
arpl
pop
stos
sub
test
in
sbb
inc
mov
push
mov
fidivs
or
lea
fwait
sub
std
data16
je
cmp
les
adc
insl
and
add
pushf
aad
sbb
inc
mov
xor
or
cwtl
sbb
lcall
mov
lods
out
mov
jb
int3
push
pop
sbb
jnp
out
dec
call
cmp
aad
add
mov
cmpsb
inc
pop
nop
or
add
sub
cld
inc
daa
mov
dec
sbb
jle
out
data16
pop
sti
xor
cwtl
outsl
orl
push
or
iret
clc
dec
arpl
dec
xchg
nop
mov
imul
add
xchg
adc
mov
sub
sarb
pop
cmp
fcmovnb
cmp
xlat
stos
and
mov
mov
cmp
sub
fwait
gs
loope
adc
sub
mov
jg
shrl
mov
data16
outsl
push
jno
and
cmp
leave
bound
pop
pushf
stc
xchg
fisttps
jl
scas
movsb
loop
cmp
mov
mov
push
je
fnclex
add
add
negl
vandnps
sbb
push
inc
mov
push
inc
or
mov
or
mov
imul
movsb
ret
cmp
jno
iret
das
jecxz
cmp
test
dec
pop
push
bound
xchg
xor
and
gs
inc
xchg
push
ljmp
cs
pop
pusha
mov
sub
or
xor
rep
dec
out
stc
sahf
clc
fisubrl
insl
loopne
jb
dec
movsb
repz
add
inc
adc
pop
push
fs
mov
inc
inc
movsb
in
xor
sub
add
es
xchg
pop
inc
push
lret
pop
dec
mov
add
push
push
dec
mov
testl
xor
fisttpl
inc
or
mov
mov
adc
sub
push
flds
add
pop
repz
sub
mov
ljmp
mov
pop
mov
xchg
mov
std
jge
fsubr
push
adc
sub
stc
jno
pop
mov
mov
mov
sub
mov
jb
xor
jae
bound
rclb
pop
xchg
sub
xchg
aad
out
out
push
sub
lahf
mov
int
inc
mov
faddp
iret
mov
xchg
gs
mov
push
or
add
or
nop
xchg
shr
cmc
mov
ret
movsl
sbb
adcb
inc
es
sbb
dec
sub
out
jecxz
and
jb
out
mov
movsb
add
sbb
ficoml
mov
xor
mov
ret
popa
mov
imul
repnz
adc
sub
add
push
mov
sub
xchg
jl
dec
movsl
es
pop
addr16
out
sub
popf
pop
out
inc
or
xchg
pusha
sub
sub
pop
or
xlat
push
xor
repz
cwtl
data16
inc
xchg
and
cmp
lcall
mov
aas
cmc
cmp
aad
push
pop
sbb
pop
out
pop
jle
orl
xchg
test
std
sbb
adc
mov
pop
ja
ss
inc
mov
and
aad
shrb
bound
test
and
cmpsl
test
mov
mov
push
sub
insb
inc
dec
es
fildll
mov
or
xchg
mov
pop
sub
popf
adc
sbb
test
add
fdivl
mov
fbld
add
push
test
push
push
in
or
das
pop
lret
jl
mov
ljmp
out
mov
leave
pop
lods
inc
ljmp
mov
pop
sti
sbb
inc
fistl
in
sarl
aam
shlb
jge
xchg
es
mov
cmpsl
xor
ds
mov
xchg
insl
fisttpll
orl
sti
sbb
jge
imul
rolb
pushf
ficoms
cmpsb
cmp
sarl
sahf
sub
int
mov
pusha
sbb
and
lahf
mov
inc
aas
dec
mov
stc
pavgb
out
and
inc
testb
sbbb
in
insb
fwait
xor
dec
mov
data16
mov
and
shlb
call
pop
xchg
dec
xor
lods
out
xor
xor
sbb
push
sbb
sub
jmp
and
or
mov
xor
subw
mov
leave
push
out
push
add
xor
xchg
mov
pop
repz
fs
add
aaa
leave
pop
test
jae
jp
repz
mov
pop
xor
jmp
rolb
mov
xchg
cmpsl
movsb
addr16
rclb
push
repz
cmp
sbb
sub
mov
fwait
clc
pusha
aaa
mov
mov
sub
fmull
and
mov
stos
or
aad
push
mov
inc
push
or
lods
and
mov
mov
pusha
mov
outsl
insb
push
pushf
jmp
pop
cmp
in
push
and
mov
xor
jle
jns
es
cld
aam
push
pop
lret
ficoms
sbb
test
pop
outsl
sub
xor
mov
push
aam
ljmp
xor
ret
ret
mov
ret
out
xor
sub
jmp
push
sbb
or
movsl
in
arpl
pop
sahf
mov
xor
insl
add
ret
inc
inc
lret
mov
jne
fistl
out
insb
notb
inc
movsl
inc
dec
pusha
fs
inc
sub
les
int
bound
data16
fcomps
insb
scas
or
das
addr16
push
cmp
outsb
test
loope
xor
sub
pop
push
sbb
js,pn
scas
shrb
fnstsw
jns
jp
and
pushf
int
mov
pop
mov
andb
rcl
sahf
and
bound
sbb
dec
pop
or
cmp
cmp
mov
inc
mov
dec
test
test
inc
xchg
pop
jecxz
jb
cmpsb
sub
sub
into
leave
mov
movsl
scas
rclb
pop
jnp
subl
jge
sub
xchg
clc
sbb
orb
ja
aam
fiaddl
pop
std
fwait
nop
addr16
cltd
icebp
test
out
sub
clc
cmp
inc
imul
and
push
jle
push
divl
aaa
nop
aam
ret
sub
daa
jle
adc
mov
ret
mov
aad
mov
pushf
sub
nop
call
or
or
cmp
shr
sbb
push
jg
lods
mov
and
jg
ds
inc
fcmovb
pusha
and
xchg
movsb
fdivrs
out
push
mov
inc
xchg
leave
shll
inc
xchg
cld
leave
pusha
out
test
ja
xor
add
das
mov
jmp
push
das
mov
dec
sbb
jecxz
jecxz
lahf
cmpsb
pop
sbb
push
cmp
imul
push
clc
and
push
xor
fstpl
adc
fwait
inc
mov
sarb
aaa
or
jbe
xchg
test
icebp
sbb
outsb
je
pusha
add
jnp
mov
and
fnsave
mov
push
cmp
in
jle
fwait
dec
mov
cwtl
inc
loope
std
mov
daa
int3
cmpsb
xchg
mov
inc
sub
pusha
in
and
fbstp
outsl
push
lods
adc
test
mov
adc
push
in
mov
mov
rcll
cmp
imul
sbb
mov
loop
ja
mov
inc
insb
jne
les
or
lahf
jo
xor
js
adc
cld
and
and
and
push
fsubr
sub
and
jg
rcrb
or
dec
mov
dec
mov
jle
cmpsb
push
push
std
or
xchg
mov
inc
lret
add
scas
pop
xchg
in
aaa
mov
push
pop
jo
pushf
jp
or
lods
mov
rcrb
out
out
add
les
jbe
pop
ds
aad
and
mov
or
sub
and
lock
aaa
pop
faddp
jno
scas
xchg
dec
add
jo
sahf
xlat
xor
mov
popf
sub
in
jns
imul
repnz
mov
nop
daa
std
add
xchg
mov
or
pop
push
jae
pop
mov
les
ret
mov
shll
js
mov
pop
sub
iret
jbe
jne
movsb
jmp
sub
dec
clc
xchg
out
test
mov
lock
inc
inc
fistl
pop
stos
cmp
push
cmpsb
jb
inc
les
inc
fsubrl
sahf
adc
mov
mov
and
stos
mov
pop
sbb
add
popf
push
insl
loope
jbe
shl
mov
or
pop
cmpsb
dec
xchg
lahf
in
movhps
inc
push
mov
cmp
repz
pushf
cli
cmp
adc
or
xor
xor
ret
jp
mov
inc
clc
add
jno
cld
andb
pop
insl
scas
lds
xor
popa
inc
pusha
jmp
and
xchg
fistl
movsl
addr16
movsb
push
add
imull
jnp
faddl
jbe
mov
xchg
adc
push
xor
bound
mov
mov
pop
repnz
or
scas
or
repz
lcall
call
and
out
xor
adc
repnz
xchg
sbb
sti
pop
push
and
mov
pop
cmp
imul
inc
data16
mov
jns
lods
add
scas
sub
addb
sub
push
push
push
dec
mulb
int3
insb
test
mov
aad
addr16
gs
xchg
xor
lea
mov
mov
mov
and
jnp
movsl
cmp
xor
sbb
je
int3
mov
ds
push
xor
enter
pop
mov
mov
pop
loopne
inc
les
add
dec
repz
adcl
faddl
or
mov
adcb
and
test
stos
je
aam
pop
and
dec
popl
jecxz
cli
xchg
insl
xchg
mov
test
jecxz
stos
in
pop
jb
nop
mov
test
jg
repnz
mov
dec
inc
das
lods
lods
dec
cmpsb
outsb
out
scas
push
fisttpl
outsl
add
xor
out
pop
aad
scas
les
ss
outsl
or
push
mov
or
ljmp
mov
jecxz
mov
ds
shl
and
push
mov
fdivrl
mov
inc
xchg
outsl
add
pop
repnz
cld
aad
push
fwait
jns
je
sub
hlt
popf
add
in
sub
test
jo
add
ds
mov
or
sbb
in
addb
je
or
cmpsl
insl
stos
inc
sbb
data16
push
cwtl
and
dec
cmpsb
jae
sti
xchg
rclb
sbb
enter
in
leavew
mov
cli
jae
test
jl
pop
and
cmpsb
icebp
adc
adc
sarb
shlb
shll
and
adc
rcll
mov
sarl
mov
adc
repnz
adc
cld
mov
push
movsl
lcall
daa
and
test
inc
aaa
inc
add
in
pop
fsubr
shll
cmp
xlat
daa
inc
pop
adc
in
sub
xchg
ljmp
jae
xchg
mov
fistps
frstor
orl
repnz
pop
mov
or
dec
add
add
ds
sub
or
push
pusha
pop
xchg
arpl
movsl
cmp
shr
clc
add
ret
cmp
cs
xor
or
ss
mov
cmp
lret
test
pop
insl
adc
adc
daa
mov
ja
jnp
mov
mov
jle
sbb
sbb
cmpl
sub
repz
mov
icebp
fistps
xor
in
sahf
subb
ss
in
pop
pop
imul
das
mov
fisubrl
pop
gs
dec
loop
xchg
add
inc
pusha
repz
ss
sub
ret
aaa
pop
jns
xchg
sub
cmpsb
inc
sbb
repnz
add
sbb
mov
push
cmp
jae
and
into
adc
mov
sub
sahf
pop
mov
jnp
add
mov
lods
mov
jecxz
out
popf
push
mov
popf
cmpsl
mov
hlt
jecxz
sbb
add
cmpsb
lock
sbb
aas
jbe
xchg
cwtl
jp
mov
in
xor
push
je
mov
das
out
insl
push
popf
loopne
sti
mov
or
rorl
lcall
mov
add
jecxz
mov
xor
bound
aad
iret
popf
mov
cmp
mov
stc
mov
fstpt
lods
shrb
or
xchg
pop
iret
jl
xchg
mov
loop
rcrl
push
xor
test
out
add
pop
jl
jbe
call
sub
cltd
or
mov
rclb
dec
pop
arpl
push
arpl
push
popf
pop
add
push
pop
sub
es
mov
out
jmp
lret
add
mov
mov
mov
xlat
mov
adc
adc
hlt
mov
push
xchg
pusha
call
xchg
mov
xchg
aaa
push
jnp
fcoml
jle
pop
mov
dec
lahf
jge
mov
rclb
dec
adc
xchg
loopne
mov
push
push
or
insb
mov
je
daa
scas
xor
dec
cmp
ficomps
pop
pop
and
jns
push
sbb
jns
jle
fwait
or
rorb
inc
mov
in
xor
add
push
adc
push
leave
fidivs
pop
inc
inc
frstor
fyl2xp1
popf
or
cli
xchg
or
insb
adc
les
popa
orl
ret
mov
pop
jnp
cs
dec
lock
les
or
dec
test
jg
bnd
imul
xor
xchg
repnz
mov
imul
and
cmpsl
ds
jnp
ret
dec
xor
or
aaa
into
or
fnsave
leave
sub
fcmovne
mov
movsb
jl
xchg
sub
mov
sbb
mov
cmpsl
sub
cmp
mov
loopne
adc
scas
popf
or
xor
hlt
xor
cmc
inc
dec
jb
in
xchg
ficomps
jg
jns
pop
xor
push
jp
testl
cltd
gs
lret
push
popa
ret
orl
fnsave
cmp
push
dec
adc
into
xor
mov
psubusw
fcomi
clc
inc
xchg
mov
sbb
test
outsl
loopne
mov
pop
add
xchg
repnz
repz
push
jmp
adc
rcl
lds
jbe
sbb
movsl
lcall
loope
and
aaa
cmp
cmp
xchg
mov
cs
shlb
jl
fcoms
add
xlat
outsb
shlb
movsl
sti
push
sbb
sbb
push
mov
ss
insb
dec
dec
sahf
repnz
and
imull
cs
add
aad
xor
mov
adc
js
sub
fsts
mov
fiadds
sub
ret
insb
daa
pop
and
mov
insl
sub
inc
mov
test
push
movsb
push
les
inc
test
push
sbb
push
xlat
mov
js
xchg
and
hlt
xchg
push
push
adcb
out
cld
push
pushf
sub
mov
jnp
dec
cltd
arpl
add
mov
sar
jno
lods
add
stos
arpl
add
mov
xor
mov
scas
xlat
sbb
pop
jmp
insb
loope
xchg
ret
imul
test
mov
adc
dec
cltd
jb
push
sub
leave
incb
jp
mov
jbe
js
mov
sar
xor
jo
inc
inc
out
popa
aad
js
mov
icebp
sub
push
lret
bound
inc
lock
inc
push
sahf
sbb
jo
cmp
mov
lret
push
pop
decb
into
ljmp
dec
fidivl
mov
in
mov
inc
outsb
jg
and
cmp
in
sub
add
add
mov
fcmovnu
pmulhuw
push
sbb
inc
push
mov
push
addr16
movsb
sar
fldl
push
sbb
xchg
stc
adc
mov
xchg
push
push
mov
enter
xor
pop
push
inc
fiadds
inc
mov
mov
push
inc
fadds
pushf
pop
sti
adc
insb
lock
int
xchg
jle
push
lret
pop
fbstp
cld
add
loopne
and
imul
js
repnz
push
or
mov
bound
mov
daa
add
and
aas
outsb
add
dec
cmpsb
push
cmp
in
mov
inc
out
subl
sub
inc
pop
or
adc
inc
shll
sbb
mov
push
jno
dec
add
mov
sbb
mov
rorl
rclb
or
mov
repz
aas
stos
gs
sub
inc
dec
aad
mov
ja
pop
rol
or
sbb
xor
push
push
sahf
or
loop
inc
mov
nop
jecxz
pop
cwtl
or
movsb
mov
mov
or
shr
es
mov
xchg
sub
sbb
pop
int3
jb
lock
outsl
icebp
sbb
in
pushf
cwtl
and
mov
imul
lcall
xor
sbb
fucomp
leave
mov
fdivs
test
xchg
mov
shrl
adc
cld
mov
js
rclb
xchg
push
sub
dec
insb
sub
stos
xor
ljmp
mov
sbb
adc
sub
dec
pop
fbstp
mov
xor
dec
xlat
int3
in
insb
add
movl
test
push
pop
xchg
jl
hlt
lock
jge
add
mov
mov
mov
insl
les
jbe
loop
xchg
xchg
push
cmp
xor
jno
adc
ret
aaa
out
adc
imul
repnz
jecxz
fnstenv
inc
dec
add
jb
xchg
daa
dec
push
inc
mov
mov
mov
nop
jle
outsl
mov
sbbl
jne
jp
cld
xchg
jecxz
and
adc
inc
nop
imul
mov
sbb
sbb
sub
jno
and
adc
jo
xor
mov
add
pop
cmpb
jle
lea
ret
hlt
sub
les
dec
pop
call
pop
mov
or
out
dec
dec
out
adc
or
cmpsl
xchg
adc
jnp
cli
or
dec
or
dec
cmp
repz
dec
cwtl
sbb
shll
outsl
jo
xchg
and
push
xor
xchg
scas
cmpsl
jge
pop
rcrb
aad
inc
pop
icebp
ret
out
cmp
dec
sub
mov
ret
mov
test
aam
call
out
sbbl
into
popf
scas
outsl
push
mov
mov
mov
jb
lret
popf
and
cmpsb
subl
outsl
xor
aam
cs
mov
dec
out
dec
xor
cmp
jns
inc
stos
sti
jmp
lea
mov
cwtl
negb
jmp
add
repz
fldenv
bound
lahf
dec
mov
ljmp
xchg
ret
vpackssdw
push
out
and
cmpsl
inc
jo
mov
lods
cld
int3
shr
test
xchg
xor
cld
dec
or
mov
cmp
adcl
cli
add
mov
dec
jmp
cs
inc
out
mov
and
imul
leave
rclb
xchg
jae
popa
push
test
sti
xchg
sub
adcb
negb
or
fwait
repnz
jmp
mov
xor
mov
popf
sarb
out
cmp
int3
dec
es
aad
xchg
jnp
xor
aas
mov
jno
pop
out
rcll
dec
int3
xchg
jp
out
jo
cltd
testl
pushl
repnz
dec
test
push
mov
push
iret
xchg
in
stos
lods
gs
test
inc
in
inc
push
cld
cli
clc
fnsave
adc
ljmp
xor
pusha
and
or
push
mov
dec
loopne
push
popa
mov
jae
xor
lret
and
push
ret
lods
dec
push
xchg
scas
clc
push
mov
fsubrs
adc
mov
xlat
cmc
cmp
sbb
dec
lods
imul
adc
cmp
fisubrl
loope
jb
sarl
cmp
sbb
dec
cmp
or
pushf
mov
in
pop
lock
icebp
lret
or
or
cmpsl
cld
push
xchg
insl
or
movsb
mov
inc
inc
xor
dec
pop
adc
out
adc
cmp
outsb
sub
loope
daa
negb
and
mov
push
xchg
fsts
movsb
xor
orb
in
sti
shl
mov
enter
add
into
push
sahf
mov
imul
popf
outsl
adc
insb
out
adc
pop
mov
sub
mov
jl
repz
mov
rcll
cmpsl
push
xchg
jmp
mov
and
fucomi
mov
inc
imul
inc
adc
movsl
xchg
ret
sbb
cmp
stc
adc
cmp
lds
jne
mov
xchg
push
lods
loopne
adc
xchg
cwtl
xchg
adc
and
pop
ret
repnz
push
jmp
cwtl
push
clc
int
ja
push
mov
xchg
xor
jg
fwait
dec
and
pop
iret
pop
sub
data16
pop
fcoml
inc
paddd
sbb
fsubrs
add
mov
lret
sbb
aaa
loop
dec
bound
sbb
pop
clc
jl
xchg
jg
or
mov
mov
sbbl
hlt
inc
cltd
xor
or
shll
mov
idivb
rorb
pop
jmp
iret
es
lock
pushf
lods
inc
aam
popa
leave
jno
mov
xchg
cmpsl
and
lret
dec
movsl
lret
push
iret
sahf
xchg
repnz
mov
cld
ror
clc
adc
loope
ret
adc
std
sub
scas
pushl
imul
sbb
cmpsb
jle
sahf
xor
lret
jle
adc
sbb
sub
and
push
scas
mov
mov
sub
and
movsb
xor
mov
aas
xor
cmp
xor
push
mov
mov
mov
in
lahf
pop
es
lret
push
mov
ja
dec
mov
repnz
fisubrs
bndstx
add
clc
jne
mov
pop
fsubl
adcb
or
js
jp
push
je
mov
aaa
aam
xchg
jp
js
pop
sbb
mov
jge
inc
mov
mov
int
jne
test
xor
jmp
enter
ret
xchg
shlb
and
loopne
push
add
pop
jae
pop
xchg
sbb
cmpsb
mov
jmp
add
aaa
fwait
cld
lahf
inc
mov
orl
sbbb
daa
inc
jmp
and
adc
pop
adc
cmp
in
xlat
icebp
jmp
mov
push
pop
lods
in
cmp
add
test
sub
mov
cmp
out
mov
add
mov
mov
fiadds
cltd
orb
fbld
xchg
mov
cmp
shrl
ret
popa
call
dec
inc
and
stos
dec
xor
adc
aad
sub
lret
mov
scas
adc
leave
fsubrs
xchg
test
adc
sbb
mov
leave
sub
jecxz
lret
pop
and
shlb
and
shll
out
mov
cmpsl
push
mov
dec
sub
inc
popa
in
shl
rcl
sub
fs
loopne
pop
popf
imul
jne
shrl
popa
push
inc
imull
mov
dec
aad
pop
imul
fmul
imul
cmp
dec
loop
jp
dec
inc
sbb
cwtl
push
mov
dec
or
leave
jle
mov
out
test
sahf
in
mov
call
xor
xchg
add
notl
outsb
jmp
inc
mov
in
mov
hlt
pop
mov
xchg
inc
outsb
call
cmp
push
and
jp
xchg
clc
imulb
mov
mov
mov
imul
jmp
pop
sbb
mov
dec
fwait
jo
aaa
mov
sbb
outsl
dec
sub
mov
shll
in
popa
mov
rcll
popa
loope
mov
dec
decl
int3
daa
test
jo
xlat
testb
out
mov
cs
ficoml
xor
aam
push
in
jb
in
sete
add
fisubrs
cmc
cmc
test
hlt
cmp
aas
pop
ds
xlat
jle
lret
cmp
sbb
lods
adc
popf
cmp
jbe
popl
std
mov
das
sub
mov
mov
pusha
push
xlat
push
in
icebp
cmp
adc
inc
dec
notb
in
scas
pop
enter
leave
lods
jmp
pop
out
scas
jae
test
test
jns
jp
add
xor
jle
push
xor
adc
fidivs
xor
pop
add
in
pop
xor
ja
or
scas
cwtl
inc
lds
and
das
add
cld
push
sub
add
mov
aam
test
aad
xor
push
sbb
or
scas
rcrb
add
add
les
orl
pop
enter
cmp
lahf
mov
test
push
and
push
mov
cs
movsb
stc
cmp
andb
outsb
cli
xchg
mov
std
mov
cmpsb
gs
data16
mov
repz
and
xchg
insb
pop
scas
lahf
push
aad
adc
js
inc
or
push
mov
mov
xchg
in
xchg
pushl
sbb
push
fwait
push
cmp
mov
sbb
out
jno
rcr
leave
inc
orl
sbb
gs
in
sti
sub
mov
push
mov
sbb
stos
mov
aas
loop
mov
dec
dec
inc
jmp
jg
int3
arpl
mov
add
fisttps
mov
icebp
jns
or
jecxz
fwait
incl
lret
pop
sub
add
stos
xchg
cmp
add
add
push
test
jno
data16
push
jbe
decl
adc
clc
andl
add
mov
jp
in
pushf
daa
rcll
or
mov
idivl
sahf
js
stos
and
or
jecxz
pusha
arpl
stc
mov
pushf
jnp
or
mov
pusha
lret
dec
cwtl
add
mov
loop
sub
out
pushf
add
aad
pop
ret
and
loop
dec
inc
cmp
jno
nop
fldcw
ret
clc
enter
lods
fiadds
imul
inc
int3
or
add
and
ljmp
adc
stc
add
in
add
cmc
adc
xor
jae
adc
mov
nop
jae
cmp
sub
popf
fdiv
leave
lds
cmc
pop
push
lds
sub
mov
cmp
xchg
subl
iretw
int3
sub
jae
sub
out
scas
push
mov
iret
cs
push
add
aaa
aad
push
jle
cmp
sahf
ret
mov
cmp
test
int3
jle
aas
push
jns
outsl
ds
scas
nop
xlat
testb
lds
rcl
cld
iret
mov
or
loope
dec
mov
shlb
clc
loope
inc
adc
inc
fcoml
mov
and
mov
ficompl
stos
xlat
repz
inc
add
cmpsb
ret
inc
push
test
push
jae
lds
adc
xchg
add
mov
out
clc
xchg
sbb
add
pop
mov
sub
push
sub
rorl
lcall
lods
mov
push
inc
test
xor
jbe
stos
cmp
adc
movsl
sbb
lods
mov
ljmp
int3
adc
pop
xchg
or
jno
fwait
sub
inc
cltd
cli
insb
test
fmull
pusha
lret
cmpsb
les
iret
mov
sbb
mov
hlt
shll
leave
xchg
test
inc
ljmp
sbb
scas
outsb
mov
das
push
inc
enter
cs
jae
ret
dec
incl
sbb
bound
push
pop
add
jo
pop
jge
test
jnp
mov
dec
pop
das
rorb
mov
adc
int
mov
and
and
fstpt
gs
xchg
xchg
cmpsb
enter
adc
mov
sahf
push
ret
addr16
mov
repz
es
pop
adc
sti
cmp
sbb
xchg
dec
in
sub
insl
mov
and
dec
ja
in
fidivl
pop
mov
in
inc
or
mov
jns
cwtl
add
movsl
out
mov
repz
mov
jg
out
repz
and
vpsubq
or
data16
fwait
sahf
push
rorl
pushf
and
bound
data16
int
hlt
pusha
inc
cwtl
movsb
mov
sub
xchg
mov
mov
push
dec
ljmp
out
clc
and
pop
cmc
fistps
fmull
fbld
xchg
jne
sub
daa
cmp
and
jae
push
pop
xor
inc
int3
lods
cmp
enter
std
jecxz
insl
mov
xor
fnsave
frstor
repz
cmp
cwtl
jne
pop
xlat
addr16
add
out
imul
scas
and
jns
rcll
adc
push
movb
or
dec
fsin
jno
cmp
lds
mov
pop
rcrb
mov
mov
mov
adc
cld
pop
fdivrl
pandn
leave
mov
subl
or
dec
dec
das
add
sbb
cmp
imull
into
fcomi
testb
mov
lock
rolb
aam
inc
in
mov
es
out
inc
enter
xlat
pop
cmp
aaa
or
movsb
inc
icebp
dec
pop
lahf
jne
add
js
xrelease
add
int
or
jp
inc
xchg
cmpsl
dec
ret
stos
mov
cmp
test
mov
add
push
ljmp
jp
mov
fnstenv
subl
sarb
ret
pop
repz
dec
fs
mov
or
lret
jg
push
scas
mov
cwtl
les
arpl
dec
mov
lahf
push
fxch
aam
add
in
pop
mov
je
mov
rcrl
lock
dec
inc
nop
mov
sub
xchg
aas
fs
or
scas
aam
adc
test
loop
adc
test
stos
incb
ds
fs
insb
stc
dec
cmp
aas
push
cwtl
stos
mov
fdivrl
xor
cmp
xlat
icebp
in
jno
rcll
jp
add
movsb
sbb
inc
push
movsb
mov
sbb
sbb
cmp
daa
in
rclb
scas
and
xor
mov
sub
icebp
mov
cmpsl
mov
cs
fistpll
clc
stos
or
inc
push
sub
pop
xlat
shrb
xchg
jne
sbb
lcall
jno
jecxz
pop
scas
or
repz
stc
dec
xchg
out
lahf
mov
sbb
add
movsb
jl
sub
xchg
imul
dec
and
sub
sub
mov
mov
xor
adc
mov
popa
stos
inc
mov
jno
xchg
push
inc
out
mov
xor
mov
push
jecxz
jnp
ljmp
jno
repz
fwait
cmc
rcll
mov
pop
xor
out
cmp
int3
mov
pop
scas
movsl
sub
push
inc
or
std
sbb
sub
ja
mov
lock
fwait
insl
add
jno
jnp
mov
mov
dec
lahf
cmp
cmpsl
add
push
es
les
mov
push
aad
test
cmp
fildll
pop
xchg
dec
cs
xor
ficoms
dec
aas
clc
cmp
insl
loop
dec
out
in
je
adc
pushl
mov
fldl2t
fwait
adc
pop
nop
je
shrl
test
pop
fcoms
or
sahf
fistpl
gs
add
int3
arpl
and
jge
jae
test
pop
fsub
addl
push
cltd
rcll
sub
stc
xchg
push
outsl
sbb
add
icebp
in
mov
movl
into
loop
fisttpll
pop
fcomps
push
dec
orl
sbb
sbb
or
fadd
adc
out
inc
loope
and
inc
dec
mov
push
jmp
int
or
adc
adc
repz
stos
add
inc
int3
sub
cli
cmp
mov
aas
inc
cld
dec
cmp
daa
cmc
cmp
lret
pop
frstor
adc
jno
xor
or
int
stc
pushf
dec
out
mov
fimuls
sbb
push
nop
insl
shrb
in
nop
pop
sub
dec
fidivs
cmc
sti
notb
fisttpll
popf
lods
inc
sbb
gs
out
ja
in
mov
pop
in
das
mov
aam
xor
mov
push
ja
push
mov
ja
xchg
dec
add
aaa
push
lock
sub
sub
dec
xchg
pop
cmp
mov
mul
jb
mov
mov
mov
cmp
inc
pop
or
pop
mov
or
gs
and
push
dec
in
stos
out
test
call
in
mov
xchg
jp
xor
lcall
push
call
mov
repnz
add
cmp
popa
push
sub
mov
jle
ljmp
ds
in
stos
push
clc
clc
out
sbb
and
sub
mov
sbb
adc
adc
cs
fwait
jns
pop
es
pop
fsubrp
das
push
nop
push
insl
mov
mov
fwait
inc
popa
int
fldenv
pop
mov
popl
in
push
adc
inc
inc
jne
sar
loope
dec
xchg
inc
loope
pop
loope
xchg
imull
mov
test
or
scas
push
jne
or
jae
or
adc
stc
pop
push
xchg
and
pop
rclb
jmp
sbbl
js
rcrb
adc
inc
and
dec
ds
mov
jl
mov
pusha
shlb
jne
mov
push
xorb
sub
dec
xor
std
xchg
ret
jnp
jo
mov
push
dec
dec
mov
cmpb
mov
xchg
dec
movsb
bound
push
es
test
mov
mov
push
movsb
xchg
ror
push
pusha
mov
in
sbb
push
mov
xor
scas
aad
xchg
outsl
sub
femms
pop
mov
bound
scas
and
push
and
sbb
inc
and
pop
inc
je
sbb
mov
fwait
js
fcomi
in
dec
mov
and
sub
xor
lods
lcall
xor
add
fldenv
fs
into
cmp
cmp
and
test
bound
nop
mov
push
jne
or
sti
xchg
push
aaa
jne
ja
bound
xchg
xor
add
lret
imul
ds
std
pop
fisttps
and
pop
push
xchg
mov
test
in
icebp
lcall
outsb
jmp
out
cltd
insb
xchg
mov
mov
dec
mov
int3
test
mov
shll
js
dec
sbb
and
push
push
mov
aaa
jecxz
lock
or
mov
xchg
cmp
arpl
xor
ret
fisttps
pop
aas
and
cmpl
stos
addr16
mov
mov
pop
int
or
pop
rol
cmp
cmp
cwtl
adc
inc
cs
pop
in
insl
sub
pop
dec
aam
sub
or
lods
repnz
in
pop
mov
loope
insl
in
lods
movsl
lahf
cmp
mov
sub
icebp
fdivp
mov
mov
xor
fwait
ja
adc
adcb
jbe
aam
pop
mov
mov
imul
xchg
dec
insb
icebp
shll
lods
xor
loopne
dec
ficoml
popa
jg
mov
cli
icebp
popa
or
adc
mov
sti
sarb
and
clc
pusha
rcr
fistpll
mov
mov
jno
subb
inc
inc
jb
jns
jmp
shlb
jns
push
ficompl
sub
cmpsb
aaa
dec
in
push
push
mov
mov
ficompl
test
adc
pop
push
cmpsb
mov
and
pusha
bound
push
je
in
push
xchg
inc
inc
icebp
mov
in
cltd
rcrb
mov
mov
sub
xor
insb
push
xlat
ret
adc
push
icebp
sub
je
jno
icebp
xchg
sub
pop
dec
loopne
faddl
mov
xchg
sbb
ret
jnp
sub
out
pop
xchg
sti
and
shl
leave
loope
aas
dec
imul
jns
shrb
mov
shll
insb
mov
inc
mov
cmp
sub
aad
ret
into
push
push
scas
cs
lods
add
imul
jno
pop
lods
ljmp
jne
aad
push
jp
popf
cmpsb
jmp
aam
push
mov
movsl
cmp
mov
pushf
push
sbb
xchg
je
pushf
sub
sub
or
aad
cmpsl
in
jecxz
push
inc
xchg
cs
aaa
in
iret
xor
hlt
mov
pavgw
enter
inc
push
sub
dec
pusha
pushf
mov
adc
sub
aad
imul
push
fdivl
cmp
call
push
mov
mov
and
ret
fisttps
test
sbb
call
mov
std
xchg
stos
pop
ljmp
adc
cld
addl
pop
xchg
pop
les
hlt
sbb
sub
push
jge
xchg
pop
insl
leave
adc
repnz
inc
push
mov
lea
mov
mov
fs
lds
movsb
loop
inc
test
orb
dec
js
in
xor
mov
add
mov
inc
mov
ror
faddp
mov
mov
shlb
xchg
jmp
int
inc
in
inc
shrb
jge
xchg
in
adc
jg
fimull
test
in
add
push
push
inc
sbb
sub
in
cld
mov
fists
je
jne
mov
xor
in
and
cmp
lret
addr16
nop
cmp
mov
jp
mov
shl
in
push
sub
aaa
repnz
or
cmp
addr16
das
test
lret
lea
add
popf
scas
xor
jo
dec
ss
cmpb
cmp
in
leave
sub
nop
lods
ds
add
adc
and
xchg
mov
outsl
iret
movsb
stos
jle
testl
mov
es
vmwrite
sub
jl
mov
pop
xor
imul
adc
push
popf
pop
out
jmp
adc
ret
add
pop
dec
aaa
dec
jp
out
scas
das
adc
mov
dec
inc
pop
xchg
or
fwait
jle
popa
cli
sbb
lahf
lea
aaa
shll
out
pop
and
xchg
mov
push
xchg
into
aas
stos
and
push
mov
mov
lods
and
inc
pushf
daa
mov
xorl
ljmp
adcb
inc
movsl
jl
mov
add
or
movsl
lcall
addr16
fdivl
aad
push
movsb
std
cmp
sbb
pop
sub
pushf
mov
out
push
mov
pop
out
int3
in
ret
dec
jne
mov
std
lods
sub
pushf
inc
push
xchg
pop
clc
mov
dec
and
jne
xlat
jge
ljmp
repz
pop
cli
adc
das
and
pop
adc
adc
leave
jb
sahf
sub
arpl
popf
cmp
rorl
pop
jb
out
jge
push
adc
mov
xor
mull
add
or
ret
add
inc
or
popa
jg
pop
pusha
and
in
add
dec
sub
xchg
movsb
scas
push
and
adc
mov
sbb
ret
pop
jno
or
mov
cld
inc
pop
adc
push
clc
push
push
and
jnp
xchg
mov
jno
jecxz
jno
cs
test
ds
inc
loopne
ja
adc
or
std
mov
mov
fchs
popw
fdivs
push
gs
fidivs
xchg
in
xchg
cmp
dec
call
lea
sub
mov
jbe
add
and
cwtd
mov
out
or
loope
jp
dec
inc
mov
out
into
mov
mov
sub
and
jne
cmp
lcall
mov
es
rolb
mov
mov
bnd
inc
xchg
test
inc
cwtl
pop
add
inc
fwait
stos
and
sub
inc
mov
mov
xor
fnstenv
pop
cmp
and
cs
shl
mov
pop
push
jge
iret
pop
dec
gs
bound
nop
sbb
add
mov
mov
pop
xchg
insb
and
add
dec
popf
dec
pushf
ffreep
aas
fstpl
and
shl
sbb
pop
mov
sbb
mov
mov
xor
mov
xor
jl
scas
rol
mov
in
or
ret
pop
mov
shll
je
mov
ja
and
sti
push
sub
lret
loopne
mov
stos
loope
lods
dec
adc
mov
and
adc
xchg
jl
popw
pushf
cmp
int3
xchg
jne
cs
mov
add
sahf
ret
insb
cmp
bound
sub
inc
aas
movsb
subb
sbb
imul
mov
andl
insb
mov
es
sbb
filds
adc
inc
lret
outsb
fistpl
and
adc
or
hlt
cli
jne
mov
in
sti
mov
fisubrl
dec
pusha
dec
in
pop
dec
rclb
add
and
pop
sbb
shl
xor
pop
bound
pop
fbstp
sub
mov
fs
jae
fdivs
or
sbb
dec
fimuls
adc
xchg
xor
sbb
push
push
ljmp
repz
push
cwtl
mov
add
mov
ja
mov
int3
dec
leave
sti
sarl
cmpsl
mov
inc
and
xchg
dec
dec
loop
imul
cmpsl
jo
cmp
sub
dec
clc
nop
or
or
aad
push
push
and
aaa
into
es
inc
push
push
jmp
or
pop
ret
outsl
daa
jecxz
out
mov
and
jmp
cltd
pusha
ss
push
cltd
jp
or
ret
pop
dec
jg
mov
jmp
dec
mov
adc
sub
pop
xchg
pop
in
mov
add
mov
and
addr16
test
inc
push
flds
or
push
dec
xchg
add
cmp
mov
stos
das
repnz
pop
cmp
cmp
negl
cmp
imulb
iret
lret
test
and
jne
xchg
sahf
bound
cmpsl
xchg
cmp
push
imul
pop
scas
pop
xlat
mov
aad
lods
ljmp
insb
add
inc
cmp
in
adc
and
test
jp
mov
lcall
sbb
mov
imul
and
dec
jle
add
dec
xor
stos
push
pushf
jb
pop
or
mov
pop
mulb
sub
lea
stc
mov
bound
push
mov
or
adc
inc
fcmovne
cltd
loopne
and
cmpsl
add
jp
aas
pop
fsubl
jmp
lods
aad
ja
mov
scas
andb
add
push
dec
mov
fwait
sti
ret
aas
cltd
pop
add
ja
mov
dec
loopne
mov
data16
pop
add
es
dec
inc
loope
sbb
adcb
rcrl
xlat
fidivs
stos
mov
nop
ljmp
in
jge
popa
mov
sub
inc
clc
xor
dec
ficompl
ja
jmp
imul
ret
out
jp
dec
pop
pop
mov
xchg
mov
pop
aaa
fidivrl
das
fs
pusha
les
lahf
adc
decl
int
jle
jns
or
sub
sbb
dec
or
filds
push
push
push
aas
push
int3
sti
gs
push
mov
pop
call
xchg
popf
xchg
inc
pop
ret
out
scas
fucom
mov
jge
add
fs
jle
and
xor
lods
ficompl
and
int
mov
hlt
push
add
stos
sahf
push
inc
scas
out
lods
cs
enter
pop
dec
fs
sahf
sub
fsubrl
cmc
stos
int3
scas
push
shlb
in
and
dec
lods
mov
test
jne
in
xchg
push
mov
sti
andl
push
in
inc
in
cmc
xor
sub
jb
lahf
dec
push
out
cmp
xchg
scas
or
lahf
nop
fdivl
mov
push
or
insl
mull
je
pusha
lahf
xlat
je
add
push
mov
push
xor
jno
into
gs
or
add
or
scas
js
push
inc
and
pop
fstpl
stc
sbb
add
sbb
mov
out
imul
add
jbe
and
mov
lods
inc
lcall
jns
lret
sbb
add
inc
and
ja
mov
test
sarl
jbe
cmpsb
testl
cmp
xor
push
insb
pop
gs
jg
pop
xor
push
test
lock
pusha
sti
adcl
adc
mov
jle
lods
sahf
xor
mov
stos
daa
fimull
lock
int3
push
mov
mov
aas
outsb
fcmovnb
clc
inc
cli
shl
jl
mov
add
call
sub
subb
repz
mov
push
adcl
mov
in
or
int
hlt
lahf
subl
jb
push
cmpps
gs
sahf
pop
push
add
push
inc
bound
lds
push
cmp
rorl
dec
decb
and
add
fbstp
adc
ret
std
push
xchg
gs
mov
imul
mov
iret
cltd
add
mov
loopw
adc
les
sti
push
scas
jecxz
pop
filds
fldcw
bound
cmp
xlat
sbbb
add
sbb
push
jns
adc
pop
push
mov
fsts
hlt
cmpsb
std
mov
movsl
adc
jne
add
jp
sub
mov
rdmsr
adc
ret
dec
std
ljmp
call
or
xor
sub
xor
push
clc
push
imul
jne
adc
push
cltd
push
and
addr16
cwtl
cs
xchg
mov
ror
xor
jno
cmp
ret
adc
js
dec
lds
and
xor
rep
jl
test
cs
jmp
jecxz
rcll
insb
jle
push
sbb
test
mov
repnz
lods
or
mov
hlt
stos
jne
test
pop
fwait
xor
cmp
xchg
lcall
mov
stos
sub
leave
push
add
ds
stos
add
pop
sbb
sbb
pop
xor
add
sarl
js
jnp
push
fcomip
popf
and
or
dec
lods
aam
cmp
cmc
sub
xchg
xchg
scas
stc
ret
fldcw
cli
icebp
leave
jge
out
sbb
lret
js
andl
sub
in
inc
cwtl
loope
sbb
ljmp
popf
leave
loope
jg
scas
cmp
xchg
jl
cmc
mov
sub
repz
xchg
xor
inc
rol
in
fldenv
dec
ret
aam
pop
sbbl
in
jecxz
inc
pusha
jecxz
xchg
adcl
mov
cmp
or
push
nop
incl
lods
xor
sub
pop
jbe
xchg
test
adc
add
das
mov
adc
outsb
sub
movsb
dec
and
lret
mov
add
lret
mov
cmp
jl
push
dec
mov
push
mov
out
stos
scas
sub
repz
rcrl
repz
test
ja
xchg
jnp
lahf
ds
nop
pusha
decb
mov
pop
repnz
aad
jo
dec
js
js
shrb
outsb
adc
in
push
add
out
lds
xor
in
popa
push
fcmovb
cli
pop
mov
aad
mov
icebp
orb
xor
cmp
mov
stos
lret
inc
scas
jno
xchg
int3
sti
sub
adc
pusha
and
cltd
outsl
push
int
fidivrs
cltd
adc
lds
jb
loope
pushf
je
xchg
jb
or
loop
sbb
insb
push
xchg
push
dec
data16
std
adc
push
es
sub
xor
mov
mov
fbld
scas
shll
sbb
sub
mov
outsl
nop
push
imul
lock
les
jecxz
xchg
inc
pop
add
aas
dec
inc
cmp
inc
sbb
rcll
xchg
jns
ret
clc
into
bound
xor
dec
pop
les
jg
mov
pop
jmp
hlt
xchg
loope
pop
pop
data16
cmp
push
sub
scas
push
mov
popa
cmp
repz
jecxz
pop
lcall
sbb
pop
out
aas
add
insb
mul
dec
scas
ljmp
pushf
fcomps
add
repnz
daa
rcl
sti
dec
insl
add
sbb
inc
jle
or
rcll
ret
iret
jle
repnz
repnz
pop
in
inc
sbb
and
push
inc
in
xchg
loopne
pushf
mov
sbb
cmp
push
inc
ficoms
sub
inc
dec
dec
in
cli
das
xor
js
dec
test
popf
imul
and
mov
xlat
fbstp
call
or
or
imul
out
lock
cmp
in
add
out
dec
sbb
mov
aas
mov
sahf
mov
pop
sbb
pop
add
xor
cmp
fisubrs
add
and
mov
scas
mov
fistpll
push
mov
popf
sub
push
xor
stos
xor
push
sbb
in
dec
and
jns
les
mov
ret
gs
jl
and
mov
aad
idiv
sbb
inc
mov
lret
mov
imull
mov
add
test
pop
mov
dec
mov
mov
push
jo
xchg
push
xchg
ret
popa
push
dec
cs
lret
lods
push
sub
xor
frstor
jae
clc
mov
and
mov
popf
mov
out
and
test
sbbb
test
cwtl
pop
cld
lods
pop
jno
push
int3
aad
hlt
dec
hlt
aam
les
mov
dec
cmpsl
repz
pop
push
repz
mov
jecxz
mov
das
push
or
stc
arpl
dec
aaa
push
fsubrs
pop
or
jnp
lock
aas
mov
fbstp
pushf
das
popa
fwait
mov
jl
cmp
push
sahf
inc
adc
adc
pop
test
cmpsb
lock
nop
xchg
negl
dec
jnp
mov
ret
jae
rcl
fcomps
arpl
lock
jmp
out
insl
cmp
cmp
dec
addr16
mov
mov
iret
int3
adc
or
out
pop
cs
adc
repnz
cltd
mov
adc
mov
jbe
adc
xchg
inc
push
xor
push
in
mov
pusha
repnz
popf
shrl
push
fistps
push
orb
nop
mov
int
stos
add
xlat
mov
stos
push
daa
xchg
pop
lret
es
in
cwtl
lahf
dec
es
xchg
mov
psubsb
mov
fsub
mov
inc
inc
sbb
pop
adc
ljmp
pop
jecxz
jle
ror
repz
into
sub
push
loopne
shlb
pop
mov
fisubs
leave
sbb
fstpt
shrb
cli
pushf
xor
data16
cwtl
jns
sbb
pop
outsb
add
cmp
mov
add
into
sub
ljmp
cmp
and
inc
mulb
and
test
mov
sub
add
sbb
adc
xor
lea
pop
or
or
or
inc
mov
cmp
addr16
xor
fldt
push
fdivl
sarb
and
loop
subb
inc
imul
leave
call
je
in
xchg
sub
pop
popf
and
dec
outsl
inc
ja
xchg
adc
lea
xchg
inc
loope
push
ret
jmp
cltd
xor
fdivs
rcrl
and
sbb
cmpsb
stc
out
or
iret
mov
or
mov
leave
sbb
sub
add
xchg
inc
enter
mov
push
push
insb
inc
push
inc
fstl
mov
xor
sbb
or
xchg
add
in
sarl
pop
or
mov
push
loope
pop
push
inc
leave
cmpsl
xchg
test
fst
xchg
push
mov
cvtdq2ps
inc
jecxz
jp
es
add
lds
insb
adc
mov
mov
or
testl
mov
pop
sbb
xor
fsubs
mov
push
into
pushf
sub
ja
mulb
jo
subl
aaa
pop
ljmp
testl
push
xchg
iret
aaa
add
inc
inc
pop
fnstcw
shlb
inc
push
pop
shrb
mov
lret
decb
fsts
pop
mov
push
movsl
dec
sbb
pop
dec
sub
dec
cmp
lret
sub
and
mov
dec
xchg
div
or
jb
inc
nop
insl
cli
aad
sbb
and
jns
cmp
icebp
addr16
in
mov
or
repz
rcll
mov
jp
adcl
sbb
fiadds
jmp
cmpb
add
bnd
mov
adc
cvttps2pi
cmp
dec
hlt
jg
sub
dec
movsl
push
jg
xchg
out
pop
jle
rcll
push
scas
out
inc
push
fucomi
ss
inc
inc
sub
aam
fistl
sbb
pop
pop
test
ljmp
icebp
outsb
lahf
into
fmulp
cmp
adc
lcall
mov
xor
leave
jecxz
test
fisttps
mov
mov
mov
xchg
pop
fdivrl
xor
mov
stos
in
mov
lret
push
xor
test
xlat
out
ret
rcrl
add
mov
outsl
cmpsl
cli
lahf
jg
jge
andb
mov
pop
in
out
and
lcall
sbb
nop
loope
fcompl
jp
data16
cmp
cmp
lcall
out
cmp
pop
jg
fcoms
outsb
das
pop
sahf
add
imul
sbb
int
ds
push
addr16
shlb
into
loope
test
pushf
cld
and
dec
and
push
cmpsb
or
shrb
cmpsl
push
inc
cmovo
dec
lock
fwait
shll
mov
jns
inc
movsb
aad
jns
out
add
fwait
and
adc
pop
data16
adcb
mov
mov
adc
cmp
sbb
mov
clc
jmp
xchg
push
popf
repnz
sbb
fiaddl
or
fcomi
sub
add
cwtl
pop
jmp
jmp
fildll
aaa
lea
or
out
out
add
jbe
rcrb
push
lea
pop
adc
clc
mov
adc
adc
push
ret
or
adc
mov
jmp
ds
push
popa
add
inc
rol
rcrl
rcll
jl
fwait
sub
inc
pop
dec
div
or
lcall
inc
enter
pop
out
add
popl
push
mov
mov
xchg
call
adc
mov
mov
sbb
mov
scas
mov
mov
out
add
xchg
js
pushf
sbb
aaa
inc
jno
or
dec
push
inc
adc
insl
push
rcrl
or
hlt
test
in
fcmovbe
cld
jae
enter
inc
cli
or
mov
fisubl
xor
mov
std
add
in
cmp
xor
mul
call
ret
popf
cmpb
das
fdivl
and
out
cld
xor
dec
jae
aaa
stos
xchg
sbb
mov
shll
dec
pusha
sbb
cmp
mov
int3
repnz
sub
adc
push
lahf
push
cld
adc
loopne
adcb
fldenv
pop
das
daa
lds
addb
push
mov
xlat
mov
pop
cmp
mov
jno
aam
mov
and
andb
test
mov
and
test
addr16
cmp
xchg
call
sahf
mov
xor
fnstsw
pop
dec
pop
jb
mov
faddl
mov
cmp
jno
lret
sub
sub
mov
push
in
test
mov
outsl
xchg
les
dec
test
jae
inc
lcall
adc
pop
dec
iret
pop
mov
jo
ja
fdivl
or
inc
lea
cmc
mov
adc
cmp
jne
movsl
add
mov
mov
jg
xorb
stos
adc
push
leave
mov
inc
jo
ret
addl
dec
hlt
mov
addr16
lret
adc
les
push
mov
fidivl
loope
shlb
aam
das
pop
xchg
sbb
xor
jo
pop
sub
out
jl
adc
jno
lods
inc
or
out
mov
sahf
lods
stc
jns
xor
call
addl
push
jns
mov
sub
mov
inc
fs
mov
xor
in
push
fs
cmp
xchg
mov
loope
call
add
cmp
and
pop
lahf
cmp
popa
div
push
inc
dec
jp
push
dec
out
cmpsb
cmp
mov
or
dec
lret
hlt
xchg
ret
aad
sbb
push
ret
lcall
sbb
sbb
iret
sub
ds
leave
mov
cmp
xor
jbe
xchg
outsb
jg
add
rol
xor
movsb
push
test
std
xor
xor
das
pop
cmp
scas
mov
dec
pop
cmp
mov
jns
cmpsl
pop
test
or
xchg
mov
lock
js
repnz
xor
mov
inc
stos
out
jbe
std
and
dec
and
addl
jo
test
scas
scas
test
xchg
div
scas
push
mov
aam
imul
mov
sub
popf
add
jns
aaa
fidivrs
out
movsl
ds
pop
maxps
cmp
add
fiadds
mov
mov
mov
mov
adc
jae
sarl
jbe
mov
movsb
jbe
es
dec
cmp
fmull
sti
insl
shlb
mov
out
and
push
ret
xor
fbld
fs
lret
pop
push
enter
mov
pop
sub
int
ljmp
cmp
andb
sub
aaa
mov
push
pop
inc
mov
jg
jl
xor
add
xchg
in
test
jmp
mov
mov
movsl
mov
mov
mov
das
mov
stos
movsb
mov
leave
jle
adc
insl
pushf
adc
cmc
or
cli
fld
fld
repnz
xor
pop
pop
sarl
shr
std
js
decb
fisubl
jecxz
cld
dec
fstpl
xchg
push
stos
dec
inc
cltd
push
pop
in
out
cltd
out
xor
push
add
loopne
cmp
psrad
addr16
out
pop
sarl
nop
ret
dec
mov
adc
shlb
test
sbb
mov
insl
dec
fstl
adc
jns
pop
into
data16
dec
xchg
mov
or
pop
mov
andl
daa
fs
repz
insl
mov
add
andb
shll
leave
int
xchg
mov
pop
cmpsb
mov
mov
aad
test
jnp,pt
xchg
pop
push
adc
jb
movsl
mov
xchg
ret
lea
jae
xor
test
add
push
push
lods
adc
adcb
xor
mov
fidivs
xchg
in
insl
test
mov
dec
iret
xchg
pop
in
push
lahf
aam
pop
mov
enter
lea
in
in
lea
add
addr16
wbinvd
mov
pop
push
lods
sbb
xor
and
enter
xchg
outsb
rcl
test
popf
sub
dec
leave
gs
cmovne
xor
imul
jb
dec
mov
xor
add
sti
jne
js
mov
daa
push
scas
int3
movsl
jmp
push
fs
pop
xlat
ret
mov
cmpsb
jnp
imul
or
add
int3
pusha
aad
add
pop
mov
imul
out
sub
xchg
insb
xor
into
call
mov
scas
cmpsl
scas
iret
and
jl
push
add
adc
xchg
outsb
inc
adc
loope
pop
cmc
dec
lret
shll
cs
push
dec
mov
out
sub
insb
test
out
sbb
ret
jno
jmp
lahf
sti
fs
and
es
pop
loop
orb
or
or
jmp
jns
ss
sbb
jmp
cmp
sub
iret
das
outsl
ret
into
mov
push
out
dec
in
cld
pop
xchg
lar
aam
xorb
fistps
aam
xchg
dec
or
insl
clc
gs
into
jnp
add
scas
imul
inc
clc
push
repz
push
push
out
and
mov
loope
xor
add
inc
push
pop
ja
loopne
mov
inc
pop
add
xor
pop
mov
repnz
aam
push
dec
ret
xor
pop
cld
inc
pusha
push
xchg
push
and
fs
mov
jne
int
je
sub
push
sbb
shlb
test
jle
aas
adcl
adc
push
add
dec
aad
lcall
cmp
cmp
sbb
movsb
mov
cwtl
outsb
enter
std
push
les
test
add
loop
push
outsl
repnz
sub
xor
fs
inc
popa
sti
imul
add
or
sbb
cmpsb
ds
das
mov
fbld
xor
pop
mov
pop
outsb
cmpsb
sub
out
jno
add
sbbl
xchg
js
and
int3
push
sub
push
aad
cmp
xor
mov
jb
sbb
dec
or
jg
aaa
out
push
outsl
xor
cmp
jbe
lea
add
es
icebp
test
sbb
and
pop
sbb
cmpsb
jnp
leave
call
add
lock
cmp
mov
add
push
ss
jae
xlat
idivl
xlat
aaa
lret
adc
stos
xchg
jl
mov
sbbb
mov
loope
xor
mov
aas
gs
jl
into
lods
sbb
and
test
mov
loopne
cmp
call
aaa
fisttps
fcoml
add
leavew
aaa
dec
lret
sub
aaa
mov
fsubrs
mov
xor
cwtl
cmpsb
enter
loope
loopne
sub
xchg
cmpsl
ss
cmp
jo
enter
add
mov
jo
clc
enter
pop
out
lds
aas
sub
test
ja
cmpsb
fbstp
mov
std
xchg
xor
out
cmp
out
jg
fcmovnb
rorb
push
popa
shll
jg
ret
dec
mov
push
mov
dec
mov
icebp
xor
dec
stos
dec
fwait
inc
clc
lock
jo
or
mov
and
jae
pop
dec
addr16
out
mov
insb
xor
jmp
or
test
pushf
in
mov
lds
dec
dec
pop
jbe
sahf
xor
mov
cmp
sub
mov
mov
cmp
je
jp
add
xchg
add
xlat
int3
dec
adc
ror
mov
test
mov
insb
aas
mov
fidivrl
cmp
test
jb
test
xchg
mov
pop
sub
add
inc
jne
shrl
fwait
popf
stos
push
jmp
cwtl
mov
jle
and
test
lods
std
xchg
je
and
fs
sub
fdivs
xor
bound
clc
sub
lret
addr16
mov
lea
sti
sbb
or
push
popf
cmp
lods
inc
shl
and
call
or
and
xor
push
xchg
sub
add
dec
ficoml
and
and
xchg
xchg
add
cs
hlt
add
adc
das
pusha
mov
xor
daa
mov
xor
in
jmp
xor
lret
pop
sub
leave
pusha
or
data16
stos
out
adc
dec
call
sub
fimuls
mov
add
dec
outsl
xor
notl
xlat
inc
int3
xor
ds
arpl
call
pop
sbb
repz
push
call
jbe
cld
mov
xor
push
push
scas
addr16
mov
test
sbb
ss
lret
pop
cmp
scas
lcall
bound
clc
mov
jle
cmpsb
push
shrl
js
jle
lock
or
xchg
and
jb
or
cwtl
fucomp
leave
cli
movsb
sub
mov
je
adc
pusha
into
aas
push
sub
rorl
jo
mov
push
inc
call
cmc
out
movzbl
test
mov
mov
imul
mov
in
das
cmp
and
mov
dec
lcall
in
and
icebp
sub
nop
add
mov
and
and
pop
inc
cmpsl
testb
dec
jecxz
and
sti
cli
sbb
lret
sbbl
mov
scas
loopew
jbe
add
add
mov
lret
je
test
adc
jg
push
imul
pushf
xor
pusha
cld
mov
ss
sbb
rcrl
mov
stc
lret
gs
pop
hlt
into
push
xchg
pop
js
add
xchg
xchg
sub
jbe
xor
dec
cwtl
inc
aas
sahf
cltd
pop
lock
aas
mov
jae
adc
rol
popa
and
adc
lcall
mov
clc
push
movsl
push
movsl
sub
xchg
and
dec
xchg
add
push
cmp
or
push
rep
xor
loopne
les
cwtl
and
adc
xlat
test
lahf
jae
fldenvs
js
push
and
jb
xchg
rorb
jl
imul
xor
mov
fildl
jns
xchg
pop
ffree
jbe
scas
dec
das
fisttpll
cmc
daa
pop
push
mov
in
xor
dec
icebp
add
fwait
push
ret
dec
sbb
aad
xchg
xchg
dec
test
fcomps
xchg
push
clc
js
cmp
fwait
arpl
dec
push
lds
negl
add
dec
loopne
test
adc
xchg
sub
cld
popf
test
dec
and
xor
dec
das
mov
pop
mov
fadds
mov
xchg
and
sub
pushf
sub
xor
iret
xchg
inc
adc
inc
mov
fsubr
sbbl
or
add
add
jg
stos
jge
fsub
push
mov
jge
sbb
jbe
adcl
mov
lods
adc
daa
daa
push
push
xor
or
lahf
xor
jmp
sub
js
mov
mov
ret
jle
pop
mov
clc
lods
cmp
mov
cmp
into
gs
jns
mov
icebp
cvtps2pi
aad
sub
loop
pop
addr16
xchg
fcomi
mov
or
sbb
push
enter
test
std
jo
inc
mov
pop
adc
pop
xor
xor
push
out
ficoml
cmc
les
adc
sbb
std
js
cmp
sar
jo
mov
jmp
pop
dec
push
add
lea
das
pop
arpl
adc
fwait
push
mov
xlat
cmp
pop
xlat
data16
inc
outsl
pop
adc
icebp
pop
ss
adc
addr16
or
xchg
pop
in
cmp
xchg
add
bound
std
add
out
cld
pop
jns
adc
xchg
scas
loop
mov
mov
fnsave
leave
int
int
dec
fs
inc
mov
lods
into
movsl
pop
ret
ret
leave
dec
pop
cmp
inc
add
mov
stc
pop
fldl
popf
adc
ret
mov
jmp
adc
cli
andl
jge
and
loope
jmp
push
adc
push
dec
jo
xor
ficompl
sub
testl
push
pop
es
fs
int
xchg
imul
fwait
loopne
not
loop
lock
and
in
or
sbb
cmpsb
ret
sbb
pop
mov
or
stc
mov
pop
loope
stos
sbbb
movsl
mov
xchg
push
add
aaa
dec
nop
out
inc
xor
movb
out
enter
ja
jbe
pop
xchg
in
lret
dec
mov
mov
das
xor
call
mov
into
xchg
scas
mov
lods
test
aas
popf
xor
or
mov
sub
sbb
adc
sahf
mov
inc
pop
push
ret
jno
xor
xor
cwtl
popf
enter
hlt
mov
rcl
mov
daa
jg
sbb
lods
xchg
jp
pushf
and
xchg
hlt
pop
dec
cmp
orl
nop
ret
call
lea
adc
dec
shll
add
nop
sbb
ja
mov
call
sub
sbb
stos
test
mulb
add
sbb
jmp
xor
push
lods
lcall
pushl
jnp
les
cmc
sub
insl
stc
lcall
pop
mov
push
push
xor
das
dec
sub
mov
lods
aas
xor
cmp
push
scas
inc
popa
dec
scas
push
cmc
or
fwait
push
sbb
mov
cmc
enter
push
roll
divb
push
jno
sbb
in
jnp
outsb
inc
dec
ja
push
push
js
add
fidivrs
mov
outsl
adc
mov
adc
xchg
sub
mov
scas
out
imul
or
dec
jno
pushf
sbb
repz
and
ljmp
and
xchg
jle
add
bound
fimull
xor
arpl
movsl
in
aam
fldt
add
add
outsl
pop
out
xor
lret
filds
ljmp
bound
xchg
xchg
sbb
dec
fsubl
ret
shl
frstor
cmp
adc
jge
test
dec
or
nop
push
aas
xchg
push
adc
jmp
jo
sub
test
aas
imul
aam
jb
adc
cmp
sbb
iret
xor
push
insb
pop
insb
or
arpl
adc
pop
jae
and
fmulp
aas
cmp
jns
add
insb
lods
mov
adc
push
mov
sbb
add
cld
dec
gs
and
ja
imul
addr16
cmp
btr
sub
popa
and
mov
add
cmc
popf
push
cwtl
jbe
inc
pop
pop
enter
adc
adc
and
aam
mov
js
sbb
jne
lods
xchg
lds
push
leave
outsl
dec
pop
mov
pop
xor
cltd
lcall
add
jns
nop
sbbl
cmpsl
or
cmp
mov
ficoml
add
int
shr
lret
stc
fsub
lahf
inc
xchg
aam
popf
fdivl
or
hlt
jg
mov
dec
sbb
xchg
rol
leave
popa
divb
pushf
cli
out
sbb
inc
mov
or
movsb
and
lcall
and
popf
sbb
sbb
jne
fildll
imul
fsub
lea
insl
imul
push
imul
pop
xchg
mov
out
mov
adc
cmp
mov
shlb
add
xor
sbb
mov
cld
call
xchg
sbb
aas
ss
or
mov
sti
in
aad
dec
adc
pusha
punpckhwd
mov
and
xor
out
cwtl
or
fcmovnb
in
into
es
lret
cli
shlb
and
cmp
adc
push
mov
out
test
lds
mov
dec
rolb
mov
mov
push
dec
iret
subb
pop
rcrb
incl
loopne
insl
sbb
xor
dec
sbb
in
adc
fisubl
jecxz
enter
fisubrs
lret
mov
lods
mov
or
sbb
sub
pop
addr16
outsl
daa
lea
sub
lods
inc
cmp
jmp
dec
pop
add
pop
imul
mov
ret
mov
in
loope
inc
int
std
pop
in
jae
xchg
cmc
mov
and
or
test
cmp
fwait
ljmp
push
add
mov
movsb
mov
out
mov
and
lret
jb
xchg
ljmp
fdivrs
mov
fidivl
inc
push
mov
or
shrb
addr16
jo
inc
lock
in
inc
pushf
pushf
push
hlt
add
fadds
mov
xchg
fst
inc
pop
mov
repnz
int
pop
push
int
sub
movsb
in
lea
jnp
imul
mov
sbb
ret
mov
xor
mov
mov
in
lods
xchg
js
out
arpl
ljmp
sbb
aaa
mov
es
adc
mov
pop
dec
and
repnz
jecxz
arpl
jge
adc
aad
inc
fs
insl
add
dec
outsl
mov
mov
xor
sbb
xchg
mov
fcmovne
fildl
outsb
xchg
ret
xchg
adc
or
mov
push
sub
xor
rol
fiaddl
jnp
add
inc
aad
pop
or
out
push
pop
lahf
and
orb
in
into
es
cmp
mov
inc
mov
dec
out
adc
inc
ret
sub
jp
push
xor
icebp
cmpsb
jo
pop
call
fsubr
jle
cmpsb
push
sbb
iret
in
dec
push
dec
push
aas
jmp
cmc
cmp
call
xor
cmp
lea
jnp
rcrb
cli
cmp
leave
ljmp
jae
jo
jl
fs
or
mov
test
nop
inc
out
push
mov
out
and
cmc
lods
adcl
ljmp
push
dec
cmc
add
cmpsb
jnp
and
add
cwtl
fisubs
sti
in
inc
inc
out
mov
cmp
insb
inc
arpl
cmp
jnp
mov
add
lahf
fiaddl
pop
push
subl
mov
fwait
lods
enter
push
loop
clc
pop
out
in
push
fldcw
mov
xchg
dec
divb
xorb
shlb
nop
fistl
insl
pushf
sub
pop
leave
imul
repnz
aas
lock
filds
out
lahf
jmp
or
aam
sbb
pop
xchg
adc
pop
pushf
dec
dec
jl
and
inc
negb
ret
mov
loopne
mov
cmpsl
int
cwtl
adc
cmpsb
xor
xor
mov
pop
dec
aas
pop
jnp
aad
cs
mov
iret
subb
mov
push
jge
incb
add
push
call
inc
incb
jmp
hlt
dec
push
ret
aad
mov
popa
xor
or
xchg
dec
cmpsb
fs
or
pushf
pop
mov
lods
add
inc
mov
and
scas
add
ret
mov
decl
fadd
popf
sub
xchg
mov
lods
and
scas
les
shlb
jno
clc
test
inc
or
push
dec
pop
addl
aas
dec
enter
cmp
add
int
test
imul
lret
lock
xor
xchg
imul
cwtl
cmp
jbe
mov
or
imul
je
push
and
mov
or
data16
jns
mov
sti
add
inc
inc
inc
adc
xlat
adc
pop
lds
je
out
mov
sbb
mov
incl
adc
adc
cmp
shrb
add
subl
sub
or
mov
std
jo
pop
add
dec
add
and
mov
sub
es
adc
leave
add
imul
ret
jp
push
lods
cmp
pop
lock
cs
incb
ja
dec
add
lret
fwait
push
movsl
punpckhbw
mov
cmpsl
pusha
mov
lock
mov
movsl
pop
or
imul
pop
mov
shr
in
jecxz
push
ljmp
inc
inc
std
cmp
mov
andb
gs
insl
and
xor
inc
add
jbe
rcl
push
fdivrl
insb
pop
add
loop
ds
sarb
int
test
sbb
andl
xor
cli
cmp
flds
stc
sub
out
xchg
lret
add
cmpsb
sub
in
pop
pop
test
xor
cmpsl
je
loope
cmpsb
cmp
into
xchg
xchg
ljmp
scas
mov
xchg
push
jg
mov
sahf
clc
xlat
push
mov
popa
or
mov
cmpsb
add
xor
xchg
outsl
dec
push
test
nop
addr16
push
repnz
movsl
js
add
push
xchg
pop
arpl
inc
clc
mov
sbb
sbb
add
fistl
or
sarl
push
cmp
mov
mov
mov
lahf
ja
xchg
fwait
sub
mov
jge
inc
leave
pop
bound
into
cmpsb
aaa
push
mov
hlt
mov
movsl
xchg
int3
bound
imul
stos
popa
mov
and
test
jle
dec
sub
jns
enter
std
mov
hlt
mov
sub
out
sti
inc
mov
and
adc
aad
mov
fs
dec
jbe
fdivl
les
jne
lods
mov
mov
mov
into
push
jae
push
push
pop
sbb
pop
push
test
das
xor
mov
out
outsb
push
fsub
pop
ret
outsl
add
std
push
xsha256
cmpsb
nop
pusha
sub
mov
push
scas
flds
ja
outsb
mov
jge
inc
pop
es
push
or
pop
xchg
iret
loope
xor
out
cmp
fsubr
test
dec
nop
mov
hlt
adc
add
inc
test
mov
push
mov
mov
adc
dec
ds
push
mov
lahf
test
push
je
pop
dec
mov
sub
out
sbb
int
cmp
insb
push
repnz
push
icebp
pop
lcall
daa
negl
gs
add
inc
and
adc
or
or
or
xor
loopne
pop
daa
les
loop
adc
cmpl
ljmp
dec
dec
movsb
inc
add
jmp
cmp
shr
hlt
sub
add
xchg
mov
mov
jae
push
out
jmp
lods
inc
shrb
jo
mov
lret
dec
pop
ret
shr
push
or
mov
push
mov
jnp
outsb
jle
lods
sbb
xchg
rolb
pusha
lods
cmp
out
jg
inc
flds
push
mov
push
cmpl
das
hlt
sub
mov
mov
scas
data16
jae
aam
mov
lcall
xor
sahf
sahf
xor
xor
popa
and
xchg
stos
push
pop
inc
mov
cmp
ret
adc
jle
ja
and
test
mov
fldcw
adc
xchg
insl
and
xor
js
jns
in
cmp
or
fidivl
cmp
popf
or
xchg
cs
enter
movsl
mov
and
add
add
and
inc
mov
add
mov
pop
rorl
dec
rcll
fildll
or
dec
imull
sbb
mov
fistps
decl
add
cld
xchg
xor
push
mov
xchg
jle
scas
sub
sub
inc
ss
icebp
aam
pop
rclb
push
push
xchg
add
ret
xchg
push
bound
fadds
mov
jno
jb
sub
test
ret
jle
mov
fstpl
fnstsw
mov
cmpsl
mov
and
sbb
outsb
jle
fs
jmp
out
mov
push
cli
fs
mov
push
insl
insl
leave
fiadds
mov
jg
andb
pop
dec
jl
lret
lret
cmpsb
aaa
pop
mov
ja
js
add
dec
xlat
aas
std
sbb
add
pushf
mov
cmc
test
push
jns
mov
and
fstps
cmc
or
les
popa
jae
es
adc
pop
inc
jp
cli
arpl
sub
add
aas
rcrl
jbe
out
test
in
iret
jne
mov
adc
fimull
pushf
xor
outsl
repz
xchg
cwtl
aas
push
mov
sub
inc
mov
in
pop
pop
push
or
fidivrs
loop
cmpsb
push
sub
ret
adc
mov
aad
repnz
call
cmp
jg
cwtl
cwtl
fwait
shlb
sbb
popa
in
stos
iret
idivl
sub
xor
movsb
inc
jbe
jne
fucom
mov
inc
bswap
xchg
adc
mov
popf
movsb
sar
jge
xchg
sbb
mov
sbb
dec
pop
lcall
jge
stc
sub
xor
ret
push
arpl
fcmove
xchg
sub
cmp
inc
pusha
jg
push
lods
xor
lods
mov
jno
cli
rcr
scas
add
cmpsb
adc
aad
inc
fadd
js
pop
hlt
and
pop
daa
inc
pop
pop
push
idivl
daa
std
ret
idivl
shll
lret
adc
adc
in
pushf
dec
sub
mov
xchg
movsb
mov
inc
mov
notrack
call
stc
mov
dec
cmpsb
dec
out
xchg
aad
notb
sbb
ds
es
dec
add
scas
lods
cmp
and
dec
ds
dec
and
pop
xchg
sub
xchg
mov
mov
pop
fsubl
mov
pop
shll
rorl
and
pop
bound
popa
ret
cmp
pop
out
xchg
movsb
testb
lds
ja
fdivs
xchg
rclb
sahf
int3
test
or
xor
jecxz
xlat
loope
test
dec
sub
incl
shlb
scas
jno
dec
pop
sub
int3
notl
pop
fildll
sub
adc
out
inc
jnp
inc
test
lock
lahf
xorl
mov
sbb
inc
adc
sti
outsl
daa
sub
pop
fnstcw
add
das
addr16
test
imul
or
div
lahf
hlt
fmulp
cmp
jg
jg
xor
int3
int3
aas
aaa
out
test
loope
pop
and
push
icebp
ret
jp
lods
inc
add
or
jo
push
adc
jbe
mov
insb
in
jle
xchg
lea
nop
orl
fildll
into
es
shrl
aas
cmp
scas
pop
test
mov
push
mov
cmp
jge
fisttpll
jmp
mov
pop
stc
popf
fadds
adc
mov
mov
daa
outsl
jp
pop
testb
add
inc
jge
jne
or
and
and
jecxz
lret
test
fwait
push
adc
push
pop
rcrl
pop
xor
test
add
sub
dec
aad
xlat
and
rcrb
popf
jg
shl
jg
and
and
xchg
add
sahf
mov
or
popa
sbb
xor
mov
push
jl
imul
push
add
jg
jns
mov
inc
inc
mov
imul
cmp
inc
fnstsw
xchg
pushf
popa
mov
notl
mov
and
inc
or
and
push
push
mov
xchg
in
arpl
dec
iret
pop
mov
nop
lock
jo
loop
inc
cmp
fcom
in
adc
lds
rorb
add
icebp
ljmp
jg
sti
sub
or
std
inc
inc
gs
js
xchg
mov
sbb
xchg
sbb
adc
pop
lock
std
mulb
in
mov
das
xor
push
push
dec
mov
lods
pop
jecxz
and
test
push
sub
arpl
data16
inc
arpl
fidivrs
mov
insl
or
les
pusha
mul
in
test
mov
pop
inc
in
jg
imul
cs
add
pusha
rcl
imul
out
inc
cwtl
sbb
add
xor
jne
cld
in
or
lret
rclw
and
movsl
add
mov
cli
mov
aaa
or
dec
dec
dec
dec
dec
pop
fstps
pusha
test
pop
imul
notl
scas
mov
or
data16
lret
mov
add
adc
mov
adc
xchg
ret
sub
iret
xor
inc
out
lock
push
cmp
cmp
dec
pop
push
sarl
imul
xor
push
mov
dec
dec
mov
dec
and
sti
fwait
xchg
jbe
adc
in
out
std
in
notb
sbb
dec
data16
mov
adc
and
pop
xor
fwait
sbb
mov
lcall
imul
sbb
filds
pop
jbe
jns
sbb
std
cmp
test
mov
lds
lods
gs
push
mov
bound
or
or
mov
jl
sbb
mov
push
fildll
jae
or
jmp
scas
das
xchg
jmp
cld
in
mov
outsl
subl
pop
roll
mov
lcall
loope
sti
jg
sub
stos
and
pop
pop
hlt
pop
and
fs
push
outsb
or
cmp
subl
fistpll
add
push
mov
std
mov
rcll
or
mov
cmp
xchg
adc
mov
outsb
cmp
cmpsb
jns
in
pop
push
imul
and
add
mov
in
xchg
ret
hlt
jno
pop
lock
syscall
pop
cli
and
and
es
pop
hlt
xchg
pop
mov
mov
arpl
add
jmp
and
dec
scas
shl
test
aam
xor
lcall
sbb
mov
and
mov
lcall
fdivrs
iret
or
leave
xor
adc
xchg
inc
add
pop
sub
add
sbb
xor
test
cwtl
xor
mov
inc
mov
inc
bswap
mov
mov
test
loop
les
int
sbb
nop
jns
jp
xacquire
stos
cmp
shrd
test
outsb
stos
dec
pop
sarb
pop
ljmp
aam
mov
pop
mov
scas
ds
ret
cs
pop
pusha
and
push
lcall
lds
cmc
mov
cmp
in
dec
mov
xor
call
ret
scas
and
add
mov
mov
cmp
ret
es
xor
jbe
jnp
or
jns
mov
or
mov
ret
sub
leave
daa
outsl
cmp
dec
push
repnz
pop
addr16
nop
jae
sub
mov
dec
sbb
inc
test
in
pop
ds
js
hlt
xor
sub
mov
jns
mov
fcomps
cmp
pop
pop
pop
and
mov
mov
popa
pop
or
insb
mov
cmp
pop
and
jno
les
push
cmp
in
pop
pop
daa
rorb
fbld
adc
mov
lret
jp
cmpsl
adc
push
inc
data16
xor
scas
push
fdivp
aam
xchg
add
add
pop
jmp
pop
mov
sbb
and
mov
jno
sti
ret
movsb
aas
sbb
inc
lret
aas
popa
popa
adc
dec
sbb
ds
cmp
xor
das
arpl
add
cmc
test
cmp
mov
push
fwait
es
add
push
nop
sbbl
cmp
mov
das
cmp
and
xchg
sub
xor
fsubl
pop
push
es
stc
xor
sbb
enter
test
adc
sub
xor
cli
dec
push
call
sub
jno
dec
lea
mov
int3
jmp
ret
pop
imul
idivl
adc
and
scas
fnstcw
pusha
or
add
add
aas
xchg
mov
cmpsb
repz
stos
inc
jge
test
imull
inc
in
lret
push
lcall
pop
xor
ret
fiaddl
arpl
inc
shrl
xchg
jo
in
xor
frstor
sbb
lods
inc
push
cli
cltd
add
scas
in
dec
mov
test
inc
cmp
in
mov
mov
stos
inc
sbb
pushf
das
jle
outsl
movsb
sub
xor
lret
hlt
cmp
leave
mov
push
out
int
testb
jne
and
es
sbb
xchg
je
andb
rcll
xchg
lret
subl
enter
xor
lods
aaa
push
test
mov
push
mov
lea
jecxz
mov
push
popa
emms
mov
aas
in
stos
add
pop
and
das
sub
popa
mov
nop
rclb
push
dec
jle
shrb
mov
cmpsb
lock
xlat
push
repnz
test
mov
jnp
inc
sub
inc
fsubrl
mov
out
cmpsb
mov
lret
imul
sbb
shrb
test
xor
scas
xor
cmc
ds
icebp
sub
push
ds
or
test
rcl
cmp
mov
mov
jle
icebp
loopne
or
fwait
xor
lock
arpl
mov
sub
add
cli
cwtl
or
ja
pop
sub
mov
pcmpgtd
stc
lea
cvtps2pd
xor
jo
test
in
iret
or
mov
cs
test
dec
dec
cmpsl
out
jns
push
sbb
cmpsl
inc
jmp
int3
pop
xor
or
leave
push
sub
and
mov
dec
add
sbb
adc
iret
sub
pushf
or
xchg
jnp
sbb
jle
sbb
popa
cmpl
mov
mov
add
xor
js
aas
inc
sti
xchg
cwtl
sub
sbb
cltd
bound
xor
ret
jb
ficompl
jo
cmp
rol
fildll
jp
test
dec
mov
movsl
je
xor
and
cmp
cli
loope
mov
cmpl
mov
adc
adc
mov
rcll
lods
ljmp
lods
cmp
dec
dec
insb
sbb
sbb
mov
push
jl
inc
sub
mov
xchg
inc
mov
and
or
stos
fisubrl
cmpsl
dec
mov
in
scas
sbb
sahf
sbb
or
xchg
test
add
out
enter
imul
in
jbe
fwait
out
mov
js
les
pop
test
and
sbb
or
mov
repnz
adc
mov
push
imul
std
pop
leave
call
sub
push
lfs
push
dec
inc
push
cmpl
and
jno
jg
inc
pop
aas
std
fwait
mov
xchg
mov
adc
adcb
out
fstpt
call
sbb
inc
movsb
add
testl
outsb
pop
pusha
ja
inc
ret
icebp
movsl
clc
push
jo
js
aaa
ret
mov
loope
cmpsl
mov
cld
dec
repnz
call
loop
lock
xchg
push
cmp
lock
lret
out
inc
adc
in
sub
dec
cld
cmp
xchg
inc
test
int
jg
movsb
fidivs
mov
lcall
jmp
stos
push
fwait
jecxz
and
xchg
adc
stos
ficoms
sub
mov
loop
or
and
psadbw
push
sbb
mov
les
and
aaa
std
pop
aam
mov
outsb
push
xor
std
jns
mov
fs
stos
shrl
sub
sub
into
pop
fs
subl
push
repz
loopne
push
and
jns
nop
ljmp
clc
adc
inc
xor
nop
out
imul
ret
ljmp
cmpsl
sub
outsl
sub
jae
aad
push
cmpb
or
lods
cmp
mov
mov
pop
test
leave
xchg
mov
jo
xor
cmc
or
outsl
mov
fnstsw
leave
icebp
leave
jae
mov
xor
dec
sub
jp
shlb
mov
push
adc
add
mov
and
movsl
sbb
lods
jns
cmp
cs
lcall
in
add
ds
jnp
adc
movsb
mov
xchg
out
in
test
cs
xlat
fistl
lea
cld
pop
mov
inc
rcrb
pop
or
aas
or
pop
adc
add
cmp
inc
jmp
and
jge
shl
repz
aas
adc
pop
insb
cmp
mov
cmp
jg
sub
leave
sbb
cmp
dec
lds
push
aam
push
and
scas
sbb
cmp
ret
rolb
add
mov
cmp
inc
ffreep
cmp
or
clc
push
lods
xor
fisubrl
jl
test
sub
dec
push
jl
lret
sahf
mov
jmp
fnsave
cmpsl
or
test
mov
push
cmp
jecxz
or
pop
mov
mov
hlt
rolb
movsl
rcrl
sti
rorb
push
ss
xchg
loop
lcall
or
push
jg
sbb
jle
das
rolb
adc
push
jbe
int3
in
std
rclb
fcmovb
push
int3
jge
mov
mov
shll
lcall
pusha
in
mov
sti
test
call
dec
sbb
je
sub
jp
and
pop
testb
das
mov
inc
mov
inc
jge
sub
xlat
xor
jb
das
cld
xchg
les
mov
ja
bound
sahf
sub
rclb
setp
xor
add
pushf
or
loopne
mov
add
dec
cltd
push
xchg
add
das
jbe
stos
cmpsl
push
cmp
jns
outsb
cmp
jns
xor
pop
js
dec
xchg
rorl
fsubl
xor
mov
into
jl
mov
ret
adc
test
add
out
aas
lret
xchg
sub
cmp
pop
cmpsb
lock
insb
push
lods
or
dec
add
pop
andb
dec
pop
mul
cmp
ret
dec
insb
inc
jmp
addr16
popf
pop
roll
or
arpl
hlt
notl
idivl
sbb
dec
sbb
into
das
mov
imulb
cmpsb
mov
push
insl
cmp
ja
push
out
mov
lds
scas
push
push
movsl
pop
icebp
or
push
ds
push
pop
cmpsl
mov
ljmp
xor
add
pop
arpl
ror
and
mov
add
int
popl
inc
fs
aaa
into
decb
pop
add
mov
mov
int
xlat
mov
vrsqrtps
dec
xchg
and
fwait
jae
scas
xchg
test
mov
inc
push
xor
inc
enter
call
je
into
filds
cld
push
mov
fucom
jp
lds
push
insb
push
sahf
xor
dec
cwtl
aas
mov
in
cmpsb
ss
lahf
dec
hlt
mov
push
mov
jmp
ljmp
pop
out
inc
push
dec
mov
andb
pop
sti
cli
jnp
push
enter
lea
fsubs
mov
stc
notb
loopne
push
mov
mov
aad
xor
xchg
dec
pop
aaa
addl
adc
lcall
and
jle
test
mov
cmpsl
push
xor
fcmove
inc
push
repz
dec
daa
int
mov
sahf
imul
outsb
jno
mov
xlat
sbb
rcl
cmp
loopne
test
dec
sbb
lock
sbb
push
in
testb
movsl
adc
mov
mov
js
subl
test
fwait
shr
pop
loopne
imulb
call
dec
or
inc
loop
and
fldl
jl
jmp
sbb
rcrl
repz
push
lcall
js
mov
les
setae
shrl
sub
pop
xor
es
test
les
cmp
and
mov
sbb
mov
xchg
jo
mov
xor
std
lret
inc
andb
insl
xchg
mov
mov
std
repnz
xlat
fs
jno
int
outsl
xchg
mov
sahf
dec
dec
rcrb
out
or
pop
jbe
cld
shl
movsb
dec
insb
xchg
xchg
mov
pop
lahf
add
cmp
mov
dec
test
in
hlt
mov
pop
push
aas
push
and
cmp
mov
xor
sbb
outsb
adc
mov
xchg
es
std
pop
dec
xchg
adc
in
lret
rcll
fcmovne
cmp
sub
repnz
jl
dec
lahf
push
mov
xchg
adc
cltd
xor
push
adc
push
cmp
pushf
out
aas
pop
sbb
loop
jnp
pop
aam
adc
adc
jmp
fwait
bound
out
jecxz
je
nop
cmpsb
add
pop
movsb
sahf
and
pop
popa
pop
sbb
jle
and
js
add
inc
dec
test
pop
daa
leave
adc
jl
sub
sub
mov
decl
sub
add
pusha
lds
imull
mov
pop
push
sub
mov
int
mov
adc
aaa
or
lret
pop
bound
mov
clc
sbb
mov
dec
mov
enter
xchg
call
vmwrite
ja
jmp
push
cmp
dec
pop
shl
add
cmp
movsl
in
leave
popa
movsb
nop
xor
andb
fstps
xor
pop
xchg
aam
push
or
out
push
sub
ja
mov
sbb
pop
imul
test
xchg
fs
shrl
xchg
sahf
es
xchg
je
les
int
mov
mov
add
insb
lds
call
xor
or
xor
adc
jnp
mov
iret
push
sub
hlt
jne
lcall
xchg
or
mov
sti
cvtps2pi
ss
cmpsl
inc
push
mov
pop
in
orl
pop
icebp
cmp
lock
add
daa
pop
and
fwait
outsl
mov
jmp
neg
repnz
mov
int
xor
fldl
fildll
mov
ja
mov
or
cmp
ja
lds
pop
movsl
mov
sub
outsb
das
xchg
lcall
sbbl
jno
js
sti
test
pop
jnp
push
subb
xor
pop
test
and
rcrl
es
orb
add
rcll
outsb
in
cmp
and
mov
push
mov
add
mov
cmc
or
push
cmc
ja
mov
jnp
incl
push
stos
jecxz
popf
or
fisttpll
xchg
dec
jbe
test
addr16
inc
pop
or
push
lock
sar
mov
and
pop
fcom
insb
or
mov
ja
je
ss
xlat
out
sar
xchg
or
inc
and
jge
daa
cmpsl
mov
ljmp
inc
xor
cld
inc
clc
shl
mov
mov
daa
jg
mov
add
fimull
shll
xchg
push
adc
scas
dec
cwtl
fcmovnu
xchg
loope
jmp
jbe
jg
sbb
pop
adc
jo
ret
test
push
xchg
and
jno
hlt
inc
xchg
sti
les
mov
mov
stc
inc
lcall
and
jge
dec
loop
sahf
aaa
cmpsb
jmp
fwait
cmp
mov
pop
clc
push
cmpsb
loope
int3
adc
shrb
xlat
cmpsl
js
out
mov
lock
mov
mov
and
push
pushf
dec
inc
iret
rol
shlb
push
nop
dec
adc
or
insl
sub
inc
mov
push
or
rcrb
fistps
mov
sbb
shr
push
sbb
cmc
sbb
imul
dec
cmp
lahf
mov
cmc
scas
mov
aam
add
pop
adc
xor
scas
std
cltd
cmp
sub
and
jecxz
push
sbb
shll
icebp
std
inc
addr16
cmpsl
mov
icebp
push
insl
cmp
insl
jp
jmp
pop
add
xchg
fs
mov
add
jmp
pushw
xor
xchg
cmp
xchg
or
leave
jecxz
subl
test
pop
and
cmp
or
xor
mov
xchg
lds
scas
mov
mov
lret
add
jge
sbb
cmp
out
xchg
jg
push
decb
cmp
sarl
pop
in
push
jns
inc
rcr
pop
sub
imul
xchg
ljmp
inc
cmpsb
lds
testb
inc
insl
xchg
push
mov
mov
rcrl
lret
sub
int3
enter
adc
mov
push
dec
cltd
adc
push
filds
and
jmp
decb
shlb
les
push
jge
in
sub
mov
and
scas
mov
notb
sbb
or
js
notb
jle
add
outsb
add
movsl
pop
mov
lock
and
jne
add
sbb
rorb
xor
aam
add
jl
adc
push
ficoms
imul
dec
pusha
mov
pusha
rorb
cmp
imul
stos
fdivl
jmp
iret
cmpl
pop
lock
jb
in
rcl
in
pusha
xor
fsts
fsubrs
cs
or
in
jmp
aaa
inc
xchg
cmp
fsub
mov
and
and
lret
cmp
add
add
in
sbb
int3
pop
fwait
aas
pop
or
icebp
ja
adc
xchg
cld
inc
push
inc
fidivs
xchg
ljmp
inc
movsl
aam
mov
and
pop
mov
mov
xor
mov
pop
out
xchg
sub
and
xchg
rorb
add
jne
xlat
jmp
add
popf
lods
mov
push
inc
adc
push
out
push
call
fsubrs
es
xchg
fistps
bound
add
ljmp
add
ds
das
push
and
in
xchg
xchg
add
push
fsubs
push
mov
stc
xor
push
sbb
and
pop
mov
xchg
dec
pop
repnz
inc
pusha
lahf
mov
sahf
scas
ljmp
xchg
cmp
shlb
push
fs
dec
pop
cmpsb
call
into
mov
fs
and
xchg
or
js
bndstx
popa
xor
xchg
hlt
or
lret
std
inc
or
mov
cwtl
je
and
mov
xlat
scas
sub
popa
out
repnz
xlat
mov
pushw
cwtl
mov
les
lahf
xor
loope
adcb
enter
scas
test
ret
mov
or
mov
push
sub
mov
dec
and
cmpsl
rcll
or
jecxz
adc
rcrb
repz
inc
bound
test
lock
shll
xchg
outsb
xchg
out
stos
rorl
int3
pop
lcall
sahf
push
insb
adc
enter
mov
pop
pop
lock
dec
xor
mov
pop
xor
outsl
rolb
xchg
mov
in
bnd
sbb
fmuls
repz
aas
add
in
outsl
adc
sub
fdivrl
mov
or
mov
inc
jmp
aaa
dec
inc
inc
js
popa
clc
xchg
fwait
shr
lds
xchg
mov
aad
pop
loope
add
rcrl
lret
test
ffreep
aam
icebp
push
scas
push
ss
out
daa
je
fldl
rclb
mov
loope
je
insl
inc
scas
mov
movsl
aas
mov
pop
idivl
cmpsb
jnp
cmp
adc
adc
mov
push
js
push
mov
dec
push
push
mov
xchg
mov
test
mov
add
xor
jl
cmp
cmpsb
mov
jmp
sbb
out
clc
xchg
sbb
decb
movsl
out
dec
jno
jg
pop
in
fsts
jae
sub
pop
pop
add
sbb
je
cltd
je
xchg
ror
lds
outsb
lods
out
dec
and
jne
test
jecxz
jbe
sbb
push
je
adc
movlps
int3
mov
nop
xchg
jno
arpl
jae
mov
out
jle
repnz
and
inc
push
sar
mov
cmc
xchg
dec
rorl
fcomps
mov
nop
sbb
ret
cmp
or
cmpsl
pop
dec
negl
mov
pusha
xchg
call
lods
fwait
jnp
dec
sti
repnz
jns,pt
aam
outsb
push
sbb
xchg
es
or
xchg
cmp
push
xchg
xor
mov
test
xor
sub
sub
nop
jne
rcrb
sub
sub
sub
mov
push
clc
push
cmp
repnz
pop
stc
mov
push
jbe
std
xor
sbb
mov
out
bound
xlat
adc
cmp
mov
inc
pop
aaa
dec
cmp
pop
pop
aam
mov
test
inc
sti
mov
xor
pop
outsb
xchg
sub
add
ret
sti
xor
pop
lcall
adc
ss
cmc
aas
out
rcl
repnz
out
jne
cld
mov
int3
mov
sarb
xchg
outsb
sbb
rcrl
sbb
sahf
and
mov
cmp
mov
or
xor
mov
jecxz
ficompl
pop
loop
loope
mov
pop
gs
call
xor
and
ljmp
mov
test
push
repnz
mov
pop
in
fs
inc
and
push
cld
push
pop
iret
into
sbb
dec
mov
push
inc
cmp
and
pop
adc
insb
pop
jecxz
lock
sub
xchg
aam
std
cltd
stos
add
in
shll
xchg
mov
inc
fisubl
pop
sbb
cmpl
fsub
xchg
xchg
adc
loop
ret
inc
in
pop
add
arpl
cmp
inc
mov
xchg
dec
cmp
mov
jg
adc
push
push
pop
dec
cmp
test
das
shll
test
or
call
mov
sti
adc
std
xchg
xor
lods
mov
xor
mov
fisubs
fisttps
sub
sub
movsb
mov
push
sbb
jmp
pop
cmp
add
pusha
push
aaa
je
mov
pusha
lahf
adc
mov
addb
out
xchg
sbb
enter
mov
ret
mov
iret
jecxz
ss
inc
insb
bnd
cmpsb
loopne
add
jp
sub
mov
test
add
jg
stos
mov
ds
outsb
into
adc
fsubr
cmp
clc
or
add
push
aad
notb
bswap
mov
add
sub
mov
jecxz
and
jmp
cs
cli
cmp
add
sbbl
dec
jmp
jp
push
adc
sbb
iret
jns
outsb
mov
cltd
sub
ficomps
push
and
int3
js
int3
sbb
repnz
shll
test
lods
xchg
jl
mov
orb
add
aas
mov
les
sbb
jle
mov
jg
sbb
es
xchg
xchg
cli
aas
mov
popl
or
and
movsb
movsl
outsl
push
mov
adc
sbb
fcompl
inc
aad
xor
and
push
outsb
daa
jg
and
popf
push
movsb
cmp
cmp
lcall
rorb
xchg
mov
leave
es
xchg
pop
ljmp
lea
scas
mov
repz
loopne
sbb
test
in
shlb
dec
pop
scas
clc
test
cwtl
nop
std
adc
lock
and
dec
lahf
cs
xchg
lret
int3
es
ret
repnz
enter
clc
xor
mov
stos
mov
fcoms
or
and
xchg
jecxz
add
and
mov
dec
dec
call
rcrl
and
fsubl
daa
ljmp
push
inc
or
mov
adcb
lods
jg
cmp
loopne
inc
loop
mov
repnz
inc
xchg
fisttpll
in
arpl
mov
out
addl
shl
fmull
outsl
out
xchg
jl
test
pop
les
fwait
leave
jo
pop
jmp
dec
mov
gs
stos
xchg
pop
push
movsl
js
mov
nop
sbb
rclb
icebp
sbb
ja
sub
xchg
inc
push
xchg
adc
or
jecxz
inc
scas
lret
cmp
inc
testl
pop
xchg
cwtl
sub
pop
ljmp
xor
xchg
insb
push
jae
mov
sbb
movups
pop
mov
push
sahf
adc
cltd
cmp
cmp
cltd
mov
mov
test
lods
dec
dec
sub
lret
lea
or
fwait
movsb
inc
adc
aad
pop
shlb
mov
loopne
in
xor
popa
leave
jnp
repnz
int
jae
push
add
push
aad
sahf
mov
sub
lret
jecxz
clc
roll
call
in
jg
add
das
pop
jne
pinsrw
divb
lret
xor
ret
pop
jp
fs
push
fs
xor
stos
cmpsb
push
fiaddl
or
stos
xchg
lods
mov
xchg
data16
mov
push
fadd
mov
jne
ljmp
sub
fs
sub
push
es
sahf
ss
mov
mov
mov
cmp
int3
push
pushf
lret
lock
add
cmp
outsl
out
test
cmpsb
inc
pop
pop
pop
fs
nop
jge
lahf
pop
mov
xchg
jne
shrb
mov
inc
xorl
sbb
dec
cli
es
jns
inc
cmp
push
pop
xchg
cmpb
pop
mov
jecxz
addr16
lds
xchg
outsl
pushf
mov
and
test
inc
lahf
sub
test
stos
xchg
jno
ja
pop
dec
and
jnp
push
mov
test
insb
out
rol
push
in
mull
and
mov
insb
bound
rcl
cmp
xchg
mov
and
in
dec
pop
imul
adc
in
test
lcall
push
fs
lret
pop
and
movsl
push
std
rorl
pop
je
sbb
sub
pop
xchg
in
rcrl
mov
pop
add
xchg
out
scas
jbe
or
scas
or
aam
push
mov
push
push
xchg
pop
and
out
cld
lock
imul
sbb
jecxz
xchg
test
pushf
push
xchg
xor
cmp
push
jo
popf
cwtl
insb
inc
movsb
mov
jle
divl
sub
lock
clc
lea
mov
jbe
and
cmp
or
sti
or
ret
outsb
fmull
sbb
fsubrp
and
sub
sbb
mov
dec
cmp
and
aaa
xlat
das
movsb
out
dec
out
push
jnp
jle
dec
xor
imul
pop
pop
pop
icebp
pop
mov
js
bnd
popf
or
jmp
mov
jbe
clc
push
out
cmp
xchg
jp
adc
cmc
pop
jnp
test
into
adc
mov
stos
enter
push
xchg
pop
fsubrl
mov
sub
mov
mov
in
xchg
inc
xchg
test
push
mov
pop
or
in
data16
scas
mov
shll
mov
iret
fwait
sub
mull
xor
sub
lea
inc
inc
inc
jmp
ss
jle
test
in
loopne
jbe
sub
adc
les
jbe
int
add
push
outsb
lahf
insb
mov
push
push
push
ret
mov
stos
cmc
dec
sub
adc
adc
loop
cmp
je
jp
push
lods
cmp
clc
mov
loopne
into
icebp
mov
shrb
loope,pt
cmp
cmpl
daa
iret
imulb
cmp
push
and
or
add
push
push
cwtl
and
and
dec
jecxz
push
jge
cmp
jg
cwtl
xchg
cmp
pop
dec
xchg
mov
sbb
dec
adc
sbb
test
jle
xchg
out
repz
mov
cmp
ret
mov
or
imul
outsl
sbb
hlt
xchg
lcall
xor
loope
xchg
inc
jae
dec
push
push
push
movsb
push
xchg
sbb
xlat
rorb
add
int3
cmpsb
in
sub
repnz
cmp
roll
xchg
jp
inc
fistl
mov
test
pop
pusha
inc
fistps
and
jle
adc
lret
lahf
repnz
mov
lcall
xlat
jl
xchg
dec
xlat
cmp
adc
mov
in
in
xor
mov
push
stc
or
ret
test
cmp
inc
aad
cmp
ds
lea
shrb
negb
mov
cmc
cmp
adc
xor
sar
inc
adc
xchg
push
fiadds
mov
pop
shlb
test
cmpsb
inc
loope
js
xor
shl
outsb
dec
inc
ret
mov
aas
push
pop
out
andb
addl
out
and
mov
dec
addr16
pop
loope
je
jns
push
icebp
mov
repnz
xor
lock
mov
pop
xchg
inc
faddp
adc
gs
cltd
aas
or
and
imulb
movsl
int
ficomps
aas
mov
jle
adc
lahf
and
and
sub
push
ljmp
add
loope
fbstp
arpl
call
jnp
cmp
ret
pushf
mov
adc
dec
pop
shr
stc
and
pushf
dec
rolb
jg
test
mov
aam
shlb
mov
imul
sbb
sub
enter
mov
aaa
jecxz
popf
mov
inc
cmp
jne
sub
dec
cltd
loope
inc
push
mov
insb
cmp
dec
push
mov
lahf
or
adc
les
ljmp
repz
mov
mov
scas
inc
push
mov
jg
mov
outsl
push
cmpsb
push
dec
pusha
xor
pop
fistl
xlat
mov
test
lods
lods
sub
out
adc
mov
mov
fdivrl
pop
sahf
inc
pop
nop
das
int3
std
mov
mov
imul
xchg
inc
cmc
fisttpl
push
imul
loopne
jg
jecxz
jecxz
push
xchg
sub
xor
add
pop
xor
jmp
dec
daa
xor
cli
jne
ljmp
fisttpl
jb
pop
pop
xor
notl
lods
add
data16
mov
aas
jge
dec
scas
sahf
test
xchg
lahf
fbld
jne
mov
pop
adc
sar
cmp
sub
mov
add
dec
jne
inc
insl
xchg
arpl
lahf
push
inc
jb
std
in
cmp
pushf
cmp
sbbb
lds
dec
loop
cmp
imul
lea
mov
dec
adc
lret
in
jb
out
push
test
pop
cmp
cmc
hlt
and
imul
enter
push
lods
in
test
xchg
out
xchg
fimuls
mov
adc
and
xor
ja
mov
in
and
cmp
call
dec
sarl
jecxz
addl
push
sub
jne
and
int3
or
repnz
stos
jmp
jmp
lods
add
pushf
pop
and
nop
push
imul
dec
cmp
pop
mov
add
icebp
mov
sub
push
notb
adc
test
filds
push
icebp
dec
notl
xchg
cmpsb
jo
jecxz
fmull
sbb
cli
mov
lea
fldcw
cmp
cli
movsl
lds
mov
mov
out
ljmp
scas
ljmp
sbb
xor
sbb
adc
aaa
rclb
fnstcw
leave
inc
repnz
out
ljmp
psubusb
lcall
sbb
loopne
mov
imul
push
sub
or
addr16
je
roll
out
xchg
hlt
ss
mov
adc
jns
js
into
test
push
int
cmp
popa
clc
add
dec
repnz
popa
dec
loopne
dec
test
inc
pop
ljmp
negb
sub
les
mov
lods
add
sarl
gs
std
subb
push
aaa
cmp
cmp
ljmp
jecxz
lret
push
sti
shrb
jns
imul
sub
addr16
mov
aas
cmp
and
popa
jb
sub
or
fdivp
push
or
push
dec
xchg
jmp
xor
mov
rcll
adc
shll
std
je
rorl
fadd
mov
mov
loopne
and
leave
cmp
aaa
idivl
fstps
cmp
push
jecxz
inc
add
xchg
leave
cmc
inc
clc
xchg
sub
and
pop
aaa
sbb
pop
ret
ljmp
or
dec
out
cmpsb
je
adc
mov
mov
xor
mov
mov
jno
scas
mov
pop
xor
mov
popa
mov
bound
in
sarb
mov
fisttpl
cmpsb
loop
gs
mov
push
xlat
subl
jle
jecxz
out
mov
lcall
or
cmp
sub
pop
mov
jne
rcrl
leave
xor
dec
pop
or
fidivl
inc
aad
adc
and
add
xchg
sahf
jne
in
cmp
jecxz
lcall
push
stc
pop
bound
jge
and
dec
sub
xchg
jg
nop
mov
add
jbe
jae
jle
pop
mov
fdivrp
jl
lcall
ja
mov
notl
push
pushf
mov
cmp
and
push
xorl
dec
loopne
rcll
jle
hlt
lret
cmp
inc
arpl
data16
push
mov
stos
in
cmpsb
mov
and
inc
sarl
dec
pusha
fimuls
mov
rolb
jmp
xor
xchg
add
or
sti
ret
hlt
in
aas
add
enter
sbb
add
adc
scas
ret
enter
xchg
fs
pop
push
jmp
sbb
add
xor
xlat
inc
pop
or
mov
cmc
nop
mov
out
add
jne,pt
jbe
push
filds
call
pop
sbb
jg
imul
fsubr
scas
and
sar
push
jbe
repnz
aaa
sti
movsl
mov
cmp
xor
xchg
fisubrl
sub
cld
pop
out
outsb
lods
inc
pusha
dec
shll
bound
adc
arpl
pop
scas
jge
dec
mov
sub
outsb
clc
jno
mov
mov
inc
mov
fucomp
orb
jl
xchg
int3
sbb
pop
add
movsb
or
aam
lret
cmpb
push
test
leave
pop
mov
bound
push
repz
xor
sbb
orb
insb
mov
data16
rcrl
je
rcrl
inc
add
adc
cmpsl
xchg
fimull
pushf
jns
fiadds
lret
adc
xchg
inc
push
mov
sbb
leave
mov
xor
jbe
push
mov
mov
repz
iret
ss
adc
push
ja
pop
jmp
cld
in
mov
addl
pop
ljmp
scas
int
jecxz
lret
add
xchg
ljmp
adc
shl
add
dec
mov
cmpsb
jmp
ja
mov
add
lret
hlt
push
sub
mov
adcb
enter
sbb
loopne
push
xchg
push
es
sbb
aaa
xchg
sub
push
negb
call
sub
stos
fbstp
mov
adc
sub
aam
cld
sbb
enter
notb
and
mov
xor
repz
sbb
data16
inc
sbb
cltd
lods
jbe
inc
mov
pop
inc
cld
push
lcall
xchg
into
mov
sub
dec
pop
loope
pop
int
popa
int
out
loop
push
mov
adc
xlat
outsb
xchg
cmc
leave
int
mov
pop
loope
lods
shrl
xor
pop
out
adc
fwait
les
xchg
sub
pop
dec
sub
repz
sub
xchg
xchg
mov
stos
jge
fs
arpl
xor
in
nop
xchg
push
push
mov
in
repz
ljmp
popf
inc
int
ja
push
mov
jae
sub
adc
mov
and
mov
je
lret
sub
mov
shrl
add
sbb
mov
jle
sub
int3
mov
leave
inc
in
sbb
inc
add
clc
out
xor
or
mov
aad
pop
xlat
xchg
sbb
or
pop
xchg
mov
jge
inc
jo
xor
add
shrb
mov
dec
add
and
jns
bound
push
sbb
jle
mov
cmp
pop
push
add
sub
mov
stc
adc
sub
sahf
scas
or
ficomps
popf
addb
push
sub
mov
std
fisttps
std
gs
xchg
mov
sub
nop
fsubr
push
dec
out
nop
jne
frstor
jae
mov
popf
icebp
lock
aas
mov
xchg
adc
pop
mov
and
out
push
icebp
inc
enter
in
or
out
sub
mov
sub
js
test
in
imul
inc
shl
repz
adc
mov
cltd
push
je
cmp
rep
xchg
pop
mov
sbb
ss
fsubrp
aas
mov
jbe
mov
popf
rorb
dec
mov
bound
sub
sub
pusha
test
rolb
in
das
addr16
dec
loopne
repnz
dec
es
cmp
add
rcll
das
mov
mov
cld
dec
xor
and
test
inc
loopne
xchg
jbe
xchg
int3
sub
mov
sti
pop
jno
test
pop
jmp
cmp
mov
cli
mov
mov
xchg
adc
idivb
in
pushf
lock
adc
push
mov
pushf
scas
push
xchg
mov
vpaddsw
out
in
enter
sub
les
shlb
or
mov
push
jmp
adc
lock
and
mov
xor
test
scas
and
icebp
movsl
inc
mov
sbb
mov
outsb
in
sti
cmp
jnp
iret
mov
mov
pop
arpl
movsl
sbb
mov
and
jle
dec
push
jne
and
push
pop
orl
lods
lret
lret
addl
adc
fs
push
fsubs
mov
in
mov
sub
jle
cmp
cmpsb
std
xchg
in
cmc
lahf
mov
or
dec
lea
iret
aaa
jp
jmp
popf
push
popf
pop
inc
in
stc
sub
cmpb
ds
xor
add
cmp
and
xchg
dec
pop
fldt
ljmp
in
in
pop
jmp
jmp
and
add
sbb
je
cmp
mov
loop
into
mov
into
push
shrl
mov
mov
popf
insb
mov
pop
jno
jg
lcall
mov
jae
ret
mov
push
inc
imul
cmc
add
dec
repnz
fs
dec
mov
xor
xchg
cmp
in
inc
movsl
inc
stos
ljmp
add
mov
jno
xchg
sub
xchg
mov
push
inc
mov
pop
ljmp
fs
xchg
adc
test
mov
sub
aam
dec
fsqrt
outsb
add
push
mov
and
mov
push
je
sahf
mov
testb
in
add
inc
mov
pusha
imul
cmc
mov
mov
lcall
sbb
out
je
repz
into
mov
adcl
cld
popa
les
scas
addr16
fdivrl
test
pop
sti
jmp
iret
hlt
and
jecxz
sbb
mov
jle
inc
sub
repz
popa
rcr
inc
add
xchg
in
push
leave
fnstenv
test
inc
icebp
mov
adc
mov
into
rolb
repz
ja
pusha
xchg
mov
stos
das
imul
pop
jge
test
xchg
aad
cmpsb
loop
mov
mov
outsb
xchg
xchg
cmp
addr16
or
cmpsb
outsb
add
dec
mov
jne
adc
mov
inc
mov
inc
dec
xor
add
jmp
test
xchg
inc
cmpsl
icebp
adc
and
lds
movsb
dec
pushf
sbb
add
cmp
in
aaa
rorl
jle
aad
data16
cmp
and
mov
lods
movsl
shrb
ror
xor
adc
sub
out
aas
sbb
add
jnp
mov
ret
add
jl
cltd
fwait
out
ret
lret
dec
insb
jno
in
dec
cmp
lret
fwait
imul
imul
imul
das
loopne
fimull
xor
jo
mov
test
lret
adc
xlat
in
in
add
adc
mov
xor
ret
mov
testl
push
jnp
cld
sbb
mov
cmp
adc
jle
mov
mov
adc
sbb
sbb
pop
fidivl
xchg
cmpl
push
add
inc
jle
int
fs
imul
repnz
xor
pop
and
lock
jle
jb
xor
js
add
fmull
rcrb
xor
dec
sub
or
mov
sub
test
loopne
mov
xchg
adc
iret
adc
sub
cmp
adc
xor
les
inc
notl
mov
stos
adc
xchg
mov
lods
jecxz
push
hlt
sbb
popf
iret
ss
in
or
and
fwait
icebp
mov
cmc
je
push
or
dec
stos
fsubs
sub
mov
push
imul
mov
test
shr
xchg
aas
dec
int
pop
jmp
cmp
out
cmpl
insl
jo
stc
je
push
cmc
push
data16
xor
push
adc
shr
cmpsb
addr16
push
stos
icebp
mov
mov
rorb
or
popa
lods
int3
addr16
loope
mov
fstpl
push
in
aaa
pop
lock
rorb
sti
jg
or
pusha
jle
fwait
sti
scas
ljmp
rclb
mov
sbbb
fldt
xchg
ja
mov
adc
xor
sbb
adcl
hlt
push
mov
mov
pop
int3
sti
and
push
or
dec
mov
xlat
mov
aam
xor
into
xchg
data16
sub
push
mov
lret
dec
outsb
jl
sarb
roll
push
lock
jp
fiaddl
or
out
sbb
dec
pop
dec
popa
or
cmp
sub
dec
cmc
xchg
pop
lret
imul
pop
arpl
jns
xor
incl
pop
xor
ret
jne
jp
dec
pop
mov
mov
xlat
inc
arpl
cli
test
pop
jb
push
and
sbb
pop
mov
cmc
push
mov
mov
lret
push
jecxz
adc
sub
cmp
add
lods
xor
aaa
pusha
xor
int3
sarl
into
sbb
leave
adc
pop
out
lds
je
test
iret
xchg
xor
mov
mov
into
sub
xor
jae
test
iret
dec
insb
div
arpl
xchg
cmc
dec
dec
mov
mov
cmp
mov
ljmp
mov
dec
std
mov
inc
xchg
loope
ret
popa
fnsave
dec
dec
fs
xchg
push
mov
scas
mov
pop
xchg
ret
sbb
jge
mov
scas
repnz
loopne
pop
scas
dec
and
xor
xor
and
dec
mov
jnp
sbb
loop
xlat
add
xchg
cmpsb
push
xchg
xlat
mov
lahf
lea
and
fstps
inc
js
or
cmp
lods
sbb
jle
push
jo
push
movsl
add
xor
pusha
aam
or
insl
std
out
daa
mov
xor
mov
rolb
stc
push
out
cs
jle
cmp
inc
out
popa
shl
sahf
es
dec
adc
mov
pushf
push
repz
outsb
ljmp
sahf
pop
hlt
iret
inc
adc
mov
into
fnsave
lock
das
jmp
into
sbb
loop
popf
insl
push
in
sahf
mov
inc
fs
cmpsl
add
out
push
fwait
cmpsl
and
lcall
and
sbb
imul
sahf
clc
mov
scas
push
adc
jnp
push
sub
repnz
inc
pop
cmp
adc
pop
imul
je
dec
sub
fs
or
sbbb
xchg
bnd
pop
jno
rorl
sbb
mov
lret
loopne
dec
pushf
push
imul
xor
inc
push
shr
adc
and
and
outsb
sbb
sahf
inc
sbb
leave
sbb
sahf
adc
sbb
out
xor
or
add
pusha
pushf
or
jns
daa
in
lcall
outsw
mov
xlat
add
sbb
leave
dec
fdivrl
stos
mov
fimuls
lods
push
inc
inc
jae
out
loope
fcoms
scas
push
cwtl
cmp
sbb
pushf
inc
int3
cmp
sbb
cmp
es
test
jecxz
or
inc
mov
push
mov
xor
mov
dec
push
in
test
daa
or
icebp
test
sbb
pop
hlt
out
negb
or
js
cwtl
adcl
dec
pop
jb
je
and
pop
insb
push
xchg
sbb
jns
stos
into
test
or
mov
inc
xchg
popl
in
test
push
outsb
fnstcw
gs
enter
mov
cltd
rorl
mov
lods
xor
sbb
mov
cmp
mov
push
imul
pop
push
repnz
pop
fs
repnz
shl
adc
xchg
jmp
mov
inc
adc
fisubl
jae
ds
loopne
mov
shlb
js
adc
int3
aam
or
enter
dec
add
sub
mov
lock
dec
and
xlat
rcll
pop
mov
adc
mov
test
outsl
add
movsb
stos
imul
adc
mov
sahf
enter
push
sbb
cmpsl
sbb
out
push
out
lds
iret
xchg
addl
cmp
lcall
push
icebp
xor
sub
into
dec
clc
sbb
sbb
data16
das
loop
dec
shr
icebp
adc
mov
mov
cmp
leave
scas
dec
mov
out
stos
mov
jns
test
mov
add
pop
mov
and
xor
add
xchg
mov
addr16
xchg
xchg
inc
inc
mov
xor
scas
push
jmp
cmp
fiadds
mov
rorb
lock
push
fs
out
testl
cltd
filds
and
movsl
negl
mov
or
jecxz
pop
inc
inc
push
icebp
popf
xchg
outsb
add
hlt
pop
add
or
cmpsb
jmp
lsl
fwait
sti
or
outsb
add
mov
adc
and
scas
push
out
push
cmc
cmp
mul
cmp
mov
stc
orl
es
ljmp
call
add
jno
insl
cmp
test
aam
movsb
xchg
adc
int
pop
sarb
imul
inc
sbb
inc
fwait
add
add
cmpsl
std
pop
dec
or
dec
imul
cs
insl
cmp
in
jge
mov
or
xchg
cld
aam
in
int
stos
mov
lds
iret
mov
aam
std
cmp
inc
lcall
mov
xorb
or
jg
stos
mov
ljmp
cwtl
lock
jnp
ffreep
ljmp
or
leave
xlat
add
ss
push
movsl
std
or
jno
adc
jae
adcb
dec
dec
mov
mov
or
jecxz
sbb
mov
bt
or
and
aad
gs
popf
pop
lahf
lds
mov
loopne
or
and
cmpxchg
cmpsl
sub
add
and
pop
outsl
stos
arpl
mov
add
scas
test
cltd
mov
mov
xchg
mov
in
addl
cmp
mov
mov
jne
xchg
pop
push
mov
decb
cs
xor
out
cmp
subb
push
aaa
stos
push
mov
jp
js
out
test
std
stos
cmpsb
sbb
sbb
adc
bound
mov
dec
push
or
sub
or
dec
mov
sub
pushw
xor
or
loope
not
insl
call
sbb
jb
mov
test
insl
imul
arpl
sbb
and
xlat
jmp
out
xchg
cmpsb
adcb
add
adc
mov
jmp
pop
adc
push
aaa
push
fnstsw
jae
and
inc
jecxz
inc
xchg
dec
cmp
mov
adc
cmp
and
es
dec
or
dec
mov
scas
mov
mov
cmp
mov
fsubrs
pushf
fcomps
sbb
fsincos
test
or
push
cmp
das
push
rclb
pop
jg
negl
outsl
into
xor
push
cmp
sub
loop
mov
jg,pn
sbb
in
mov
fnstsw
sub
add
push
es
cs
aaa
or
mov
outsl
inc
popf
adc
mov
in
mov
inc
inc
lods
loop
mov
ret
enter
in
aad
jbe
mov
andb
test
pop
cmp
or
xchg
lods
loop
add
outsb
mov
hlt
push
or
mov
sub
lea
adc
mov
pop
dec
add
popa
mov
andb
jbe
inc
adc
test
mov
inc
repz
mov
fcomps
fcmove
clc
mov
and
mov
cmpsb
sbb
add
add
jmp
in
out
xchg
jge
sbb
imul
mov
pop
xchg
das
cmp
sub
cvtps2pi
push
or
adc
into
sbb
xor
mov
jge
jno
fdiv
movsl
pop
imul
mov
icebp
xchg
in
clc
adcl
and
in
test
stos
mov
aad
add
out
and
insb
adc
enter
inc
jecxz
daa
mov
aad
pushf
push
mov
into
mov
test
jb
xchg
outsl
ds
mov
ret
fisubrl
or
inc
fidivrs
in
mov
stos
scas
cs
jl
fcmovnu
ret
orl
xchg
hlt
push
cmpsb
sarl
test
inc
stos
fsubl
or
sbb
jb
xchg
xchg
inc
js
hlt
pop
icebp
loope
add
pop
cmpsb
mov
fadds
repz
fidivrs
test
and
loop
adc
clc
lock
imul
fisttpll
add
out
das
push
ja
jp
pop
test
idivb
lock
sub
clc
and
fwait
cs
roll
pop
imul
adc
bswap
arpl
add
mov
dec
shrl
pop
mov
xchg
adc
in
test
jae
loopne
sbb
mov
je
sub
stos
lods
xchg
xor
clc
dec
int3
or
or
shll
sub
inc
ds
lods
xchg
jle
lret
dec
dec
mov
dec
and
dec
call
or
xor
jecxz
icebp
in
andl
in
pusha
pop
leave
or
in
mov
je
cli
and
fs
ljmp
cmp
pop
leave
add
and
jg
dec
mov
ret
pop
lea
fistps
js
in
std
push
addr16
xchg
jecxz
mov
mov
stc
popf
pop
mov
inc
fnstenv
and
call
es
and
adc
movmskps
cmp
pop
outsl
loop
ffree
pop
fldt
fsubrl
adc
subl
xor
and
and
dec
lea
in
lret
jae
imul
iret
mov
inc
pusha
repnz
mov
jbe
mov
cmp
lock
rcrl
pop
mov
int
scas
inc
fs
imul
sbb
fs
pop
shl
stos
mov
in
and
insl
push
push
lret
hlt
mov
data16
rorb
jecxz
into
popa
aam
jecxz
xchg
mov
cmp
inc
frstor
cld
in
xor
inc
mov
js
test
fnsave
xor
xorb
leave
or
push
shrb
mov
loope
push
popa
int3
fcoms
and
cld
out
out
and
cmp
ret
mov
imul
cmc
scas
aad
insl
add
call
je
jae
pop
push
add
nop
jg
lret
xor
pop
fstpt
xor
lret
mov
xchg
clc
pop
in
rcrb
mov
sbb
xor
inc
pusha
mov
bound
ja
add
dec
cmc
mov
repnz
imul
mov
in
out
and
adcl
stos
dec
es
push
std
and
std
in
add
or
in
xchg
xor
shl
lret
lock
mov
ljmp
std
jne
sub
fisubs
sub
test
cmp
bound
enter
or
push
out
sub
repz
sub
inc
fwait
addr16
into
test
imul
movsb
repnz
enter
in
lea
movsb
sbbb
xor
popl
fcoml
pop
in
sub
and
repz
jle
mov
sbb
or
sbb
add
inc
jle
ret
or
xlat
in
call
cmp
int3
lret
adc
or
sub
sarb
jmp
mov
lcall
lcall
mov
push
out
fsubrp
pop
in
ficompl
pop
xor
inc
mov
sub
xor
into
xchg
jmp
and
insl
ja
push
mov
mov
sbb
rolb
jno
cmp
and
cmpsb
sbb
in
pop
ds
pop
insb
mov
das
lods
inc
adc
nop
xchg
sub
add
repz
sbb
stos
cmpsb
jns
cmpsb
rcll
push
push
jo
insb
sbb
xchg
adc
xlat
aaa
xchg
cmc
cltd
and
add
fsubrs
cmp
push
sub
in
fisubl
push
xor
pushf
inc
inc
lods
mov
inc
and
push
cmc
push
mov
pop
jbe
inc
and
push
cwtl
addr16
pop
inc
cmp
inc
dec
pop
in
es
out
sbb
rclb
nop
push
jb
lahf
aaa
mov
pop
outsb
push
push
ss
push
mov
lea
add
rorl
in
inc
test
cmpsl
and
cmp
popa
adc
add
push
and
pop
test
sbb
sbb
dec
or
cld
gs
add
subl
lock
and
jmp
call
or
lret
push
sbb
jg
outsb
enter
aas
fstpl
cwtl
and
sub
leave
pop
xchg
dec
mov
lcall
outsb
loope
cmpsb
add
mov
cmpsl
jmp
lock
stos
push
rol
cmp
inc
mov
scas
in
mov
xor
fsubrs
pusha
int3
push
xchg
jae
rcrb
test
mov
or
mov
adc
pushf
cmp
adc
notb
mov
jl
mov
addr16
out
xchg
jne
xchg
scas
jbe
cwtl
mov
roll
add
imulb
mov
pop
lock
jg
out
sub
inc
xor
inc
inc
inc
cld
incl
or
jne
add
lods
lock
popf
stc
enter
add
sbb
js
repz
or
cmp
divb
push
sahf
imul
or
clc
aas
daa
cmc
cmp
ss
out
xor
lods
push
mov
ret
dec
popa
lahf
push
test
cmp
dec
cli
jae
call
add
jno
aad
xchg
jg
je
xlat
mov
aad
cmp
subl
scas
ljmp
movb
shr
scas
mov
aam
sbb
loope
outsb
fisubrs
je
lds
jo
and
push
into
add
push
dec
loop
shlb
push
pop
inc
jb
lods
loop
mov
mov
xchg
jae
clc
dec
int
or
push
sub
mov
sbb
dec
ror
mov
xchg
xchg
ja
pop
dec
shlb
ror
loope
imul
jg
jae
fbstp
cmpsl
out
dec
jo
mov
adcl
push
inc
jmp
jbe
dec
cmp
inc
mov
aaa
orl
outsl
and
push
mov
and
cmpl
dec
xchg
stos
jp
xchg
test
pushf
ficoml
xchg
or
jmp
adc
jbe
adc
subb
repnz
repz
pusha
fsubrs
cld
xchg
jbe
movsl
jo
pop
outsl
push
push
push
loop
shl
sbb
repnz
mov
fiaddl
fcomip
aam
ja
outsl
ret
aam
inc
jne
faddl
mov
sti
bound
aad
jae
dec
ret
xor
push
cli
adc
repnz
cwtl
pop
insl
lcall
stos
call
or
cld
dec
movb
pop
pushf
arpl
daa
add
adc
mov
cmp
andb
ljmp
mov
sub
cmpsl
out
cmc
shlb
mov
xchg
outsb
jo
test
movsl
adc
aaa
je
jmp
push
sbb
jle
nop
pushf
push
sbbb
gs
pop
aad
jb
and
push
lahf
clc
mov
scas
xor
inc
or
mov
pop
nop
fcoms
xchg
fdivl
add
mov
ljmp
divb
mov
xchg
pop
out
lds
sbbl
pusha
and
movsl
jnp
add
fimuls
mov
leave
mov
stos
jmp
fcoms
out
mov
push
loopne
ret
add
in
adc
enter
pop
repz
ret
out
mov
aam
pop
not
pop
mov
pop
jl,pt
mov
adc
push
xchg
sbb
addb
enter
lods
jbe
mov
pop
lods
popa
cmp
fidivl
pushf
xor
fldcw
into
jnp
jmp
xorl
aaa
fs
xor
xchg
push
add
cmpsl
mov
and
or
push
dec
cmp
pop
cmc
fimuls
mov
inc
jl
xor
dec
xor
enter
adc
movsl
dec
fidivs
xchg
in
int
fnstsw
imul
pop
and
les
inc
je
mull
pop
xchg
dec
cli
or
ss
sbb
inc
pop
shrl
int
lahf
mov
push
push
in
test
cmp
sti
sahf
addr16
sbb
out
jae
push
bound
sar
mov
shl
sub
mov
jb
xchg
push
lret
aaa
cmp
fs
lds
pop
xchg
popa
dec
or
popa
mov
inc
adc
jp
inc
jae
mov
imul
outsl
pusha
push
mov
rcll
push
xorb
sub
jge,pn
and
push
lds
div
daa
xchg
xor
loopne
sbb
sub
fisubl
aad
outsb
je
ja
xor
cmpsl
and
mov
mov
adc
push
pop
push
mov
dec
rcrl
push
call
mov
scas
mov
outsb
ret
repz
xlat
sahf
xor
pop
repz
test
inc
xchg
and
jp
sub
js
aam
iret
in
ret
xsha256
cmpsb
rcrl
sub
lods
ds
dec
repz
pop
fisubs
mov
rclb
xchg
dec
mov
add
add
jno
push
outsl
loope
add
and
push
or
stc
or
sahf
sbb
add
adc
jl
sbb
mov
fldt
mov
mov
inc
jb
fs
out
ret
imul
pop
outsl
gs
nop
or
ss
insl
popf
notb
cmpsl
mov
mov
add
leave
and
pushf
ficomps
xchg
stos
pushf
jl
push
les
inc
mov
decl
data16
cmp
sbbl
lret
jp
mov
push
mov
ret
sbb
test
cmp
inc
cmp
test
dec
jbe
dec
jno,pn
xor
lock
push
sahf
add
lods
mov
xchg
incb
scas
mov
cmpsb
mov
jmp
scas
mov
repz
cmp
xchg
sub
xchg
outsb
test
arpl
std
inc
and
inc
cmp
into
adc
pop
stos
test
sahf
sbb
and
sbb
test
int3
fnsave
or
scas
dec
jecxz
popf
sub
push
mov
inc
sbb
cmp
cmp
inc
loopne
jg
out
or
mov
je
cmp
and
xchg
add
lcall
sub
pop
pop
cmp
xchg
andl
or
es
aas
enter
mov
inc
dec
sub
loope
adc
rorb
pushf
loopne
cli
cmp
sub
or
jne
clc
push
xchg
hlt
mov
cli
cmp
mov
cmpsl
xchg
mov
cwtl
cmp
fistps
mov
in
pusha
pusha
push
sbb
xchg
inc
jmp
ret
sbb
es
mov
xchg
repnz
outsb
daa
jno
xchg
mov
andl
mov
cmc
jle
popf
lods
inc
sub
jns
xchg
sub
or
enter
cli
aas
repnz
aaa
fwait
cli
ds
push
cmp
out
dec
dec
mov
hlt
rcrl
stos
mov
test
mov
xor
bound
mov
jmp
push
mov
lods
or
push
sahf
mov
push
push
cwtl
call
sub
cmpsl
orl
jns
repnz
hlt
cmp
and
dec
sub
repnz
in
cmpsl
cmp
xchg
imul
push
jb
sahf
subb
movsl
push
out
shlb
or
movsb
inc
fcoms
shrb
sub
sahf
scas
jno
inc
pop
divl
cmp
lcall
add
out
sub
or
jae
inc
jb
inc
mov
sbb
xor
or
inc
lahf
imul
cs
testl
push
mov
fldl
inc
leave
dec
pop
push
push
or
mov
test
loop
and
inc
stos
xchg
js
jmp
jo
cltd
js
cwtl
inc
push
daa
inc
push
and
cmpsl
mov
aaa
enter
mov
mov
test
iret
jle
inc
adc
adc
or
sarb
inc
and
push
je
jbe
cwtl
cltd
dec
and
push
push
data16
and
jns
test
sub
imul
inc
scas
xchg
xchg
add
stos
xchg
mov
jmp
mov
cmp
out
jae
xchg
dec
dec
fwait
mov
das
jge
out
mov
insl
add
xchg
xchg
rcrl
test
push
cmpsl
sti
leave
call
xor
sbb
lret
inc
inc
int
rol
inc
jmp
repnz
ss
ss
fnstenv
test
clc
push
dec
popa
mov
popa
cmp
push
mov
fs
xchg
jnp
cld
das
mov
andl
scas
les
pop
mov
ret
andl
cmpsl
ja
pop
test
test
rolb
sub
outsl
ljmp
jb
pop
mov
pop
dec
mov
mov
je
mov
cmp
ret
cmp
cmp
jecxz
xchg
inc
mov
dec
test
mov
das
mull
push
cwtl
sbb
sub
mov
adc
jp
push
sbb
mov
iret
jae
shl
dec
mov
test
cmpsb
into
sarb
jbe
mov
sub
jb
pop
mov
sub
shrl
nop
xor
pop
imul
scas
mov
pop
repz
loop
insl
out
aad
int
mov
clc
mov
mov
xchg
js
xor
inc
inc
mov
jecxz
lret
addr16
mov
adc
mov
adc
adc
popa
pop
inc
xchg
fsubs
inc
fsub
sti
dec
ret
pop
sbbl
iret
movsl
mov
es
orl
mov
mov
nop
or
jb
repnz
mov
movsl
arpl
xchg
sub
xor
push
push
out
push
testb
mov
cmp
in
xchg
out
addr16
jmp
xor
push
pop
sbb
in
out
test
jecxz
jle
pop
inc
fdivr
ja
mov
sti
mov
fiaddl
subb
lds
or
sbb
add
sub
adc
aad
call
jnp
lret
lods
ficoms
jmp
cmp
mov
int3
fdivrl
inc
test
jl
daa
das
stos
mov
mov
out
sbb
jge
push
jns
and
push
mov
fcoml
add
jp
out
aaa
cmpsl
out
lea
decl
nop
in
fnstsw
xlat
jne
test
cmp
push
loope
lret
cmovo
dec
jecxz
pushf
pop
add
movsl
push
push
add
xor
icebp
pop
adc
lods
jl
xor
loopne
inc
jb
mov
outsb
stc
mov
aam
stos
jne
out
leave
xchg
xor
ljmp
jno
repnz
enter
std
or
fstps
xlat
jae
add
test
xchg
push
loope
and
jg,pn
pusha
pop
cmpsl
mov
cli
sti
fwait
xor
xchg
mov
jmp
int
and
pop
leave
xor
jge
pop
aad
push
or
jg
out
xor
xlat
testl
and
iret
mov
xchg
sbb
push
xchg
movsb
mov
fnstenv
enter
rcrl
jns
sbb
cmp
sbb
cmp
fidivl
xor
fcomps
pop
repnz
jl
push
cmpb
pop
jl
mov
pop
mov
arpl
xchg
inc
icebp
lea
fst
subl
and
mov
andb
xchg
mov
insb
fdivp
repnz
insl
incb
xchg
lcall
inc
push
dec
cmp
jle
bound
iret
inc
xlat
outsb
jne
bound
push
adc
lods
icebp
cmc
sbb
scas
push
mov
fadds
pop
not
pop
nop
dec
push
jl
mov
sti
mov
jg
xchg
adcl
pop
adc
mov
cltd
mov
adc
mov
add
cmpsb
nop
mov
xor
std
out
cmpsb
push
xlat
outsb
dec
adc
cmp
sbb
dec
xor
movsl
clc
rol
fimuls
loope
sbb
sahf
xor
setnp
jg
sarb
ret
adc
pop
insb
mov
push
movsb
and
jmp
pop
outsl
int3
aas
ds
gs
xchg
mov
test
aam
repz
fcoms
fsubs
dec
test
lret
jne
loopne
jae
leave
jno
xchg
xchg
xor
pop
push
push
sbb
add
jmp
dec
xchg
sub
dec
push
mov
xchg
add
mov
ljmp
rcll
pop
or
pusha
daa
loopne
jmp
or
mov
loopne
dec
adc
fcomps
jle
cltd
and
dec
lret
scas
cmpsl
in
push
add
sahf
add
mov
cmp
sbb
push
mov
testl
mov
add
jp
aad
jo
mov
cmpsl
lds
sbb
sub
jo
xchg
mov
dec
mov
and
in
xorl
arpl
and
mov
loope
cmp
inc
std
or
push
shrl
and
jnp
sarl
rolb
push
subb
pop
fnsave
addr16
push
sbb
cmp
outsb
aas
mov
dec
jecxz
xchg
call
sarl
dec
je
addl
xchg
call
lods
fs
fbld
je
xlat
adc
setae
aas
mov
testb
pop
jnp
jae
pop
sbb
insl
aad
and
mov
sti
add
mov
xchg
mov
dec
cli
dec
insb
dec
aad
in
andb
and
mov
into
jle
lret
lret
icebp
inc
enter
call
std
fsubs
mov
into
scas
inc
mov
mov
aas
loopne
not
pop
cmp
pop
sahf
loope
add
jne
movsb
cmp
sub
pushf
fwait
ret
add
cmp
aad
jmp
fidivl
enter
scas
adc
rcl
xor
adcb
push
dec
loope
mov
mov
dec
repz
dec
pop
fwait
cmpsl
xorb
mov
mov
into
sub
cmp
mov
push
out
or
sbbl
jne
cmp
popf
cmpsl
es
loop
fdiv
adcb
jmp
or
sbb
cmp
inc
stos
fadd
dec
mov
add
ds
int3
lret
mov
mov
pop
sarb
sub
mov
pop
dec
push
sub
lods
pop
das
mov
jbe
loope
lds
cmpsl
rcrl
push
xor
dec
cmp
cmp
fildll
lds
push
lea
mov
push
lds
out
inc
and
lret
dec
in
addl
or
mov
ret
enter
pop
gs
and
mov
loop
sbb
xor
int
add
mov
dec
dec
push
cmpsb
arpl
lret
xchg
add
jge
adc
cli
xchg
fs
mov
dec
xor
mov
pop
push
mov
push
mov
mov
sub
outsb
addl
rcl
adc
addb
sbb
lock
cli
sbb
dec
push
test
mov
outsl
int
out
ret
xchg
lods
mov
lds
js
jns
shlb
movl
mov
imul
add
sahf
sub
inc
mov
lret
dec
pushf
fldenv
imulb
jns
xor
xor
pop
pop
jbe
inc
or
das
pusha
cwtl
je
leave
shll
repnz
dec
dec
ret
push
hlt
imul
loope
outsb
xor
daa
and
outsl
lret
scas
test
sbb
mov
inc
dec
and
in
rcrl
or
insl
cmp
pop
hlt
xchg
dec
pop
jne
cmp
movsl
add
xor
insb
cltd
imul
popf
mov
mov
jg
outsb
sub
out
pushf
xor
inc
xchg
mov
nop
aas
dec
leave
sbb
or
xchg
sub
xchg
scas
mov
mov
xlat
repz
mov
ds
in
mov
and
adc
mov
clc
sub
lret
clc
cmp
int
cmp
test
adc
fidivs
nop
push
bound
push
jo
repz
and
adc
pushf
pop
dec
insb
insl
or
in
mov
push
clc
push
test
enter
es
fwait
xor
scas
push
push
mov
inc
add
clc
inc
faddl
mov
cld
rcl
inc
dec
mov
cwtl
test
mov
enter
mov
cmpsl
ds
mov
out
lea
mov
lds
imul
push
inc
jle
xor
lcall
dec
cmp
mov
mov
add
inc
pop
movsb
sti
in
in
ds
xlat
icebp
insl
loop
jae
mov
mov
mov
push
inc
enter
out
mov
mov
adc
ror
xor
mov
stos
mov
push
faddl
mov
pop
add
mov
js
cltd
mov
pop
pushf
cli
fs
rclb
jecxz
pop
mov
sbb
dec
pop
mov
xchg
and
push
push
dec
and
push
mov
cmp
xchg
or
lahf
jnp
xchg
inc
jb
leave
pcmpgtd
pop
cmp
je
or
adcb
pop
lret
rorb
jo
xor
or
lea
xchg
xor
sub
inc
testb
std
lock
popf
negl
dec
iret
icebp
icebp
rorl
push
mov
or
test
fsubrs
ret
mov
rcrb
adc
pop
js
test
mov
outsl
inc
dec
dec
adc
jle
push
js
jg
jnp
jb
movl
int3
ficoms
stos
jne
repz
xlat
sbb
xchg
or
icebp
into
rolb
scas
in
jl
pusha
cmp
dec
pushf
outsl
es
mov
in
repnz
adc
or
icebp
xchg
adc
inc
out
rcrl
lret
jl
std
scas
rcrb
cli
xorl
andb
shrl
pop
xchg
cmp
mov
sbb
mov
add
and
inc
inc
sbb
inc
rcrl
mov
clc
cmp
sub
mov
into
out
xchg
mov
adc
adc
sbb
lret
dec
dec
mov
mov
or
fnsave
test
or
xchg
mov
xchg
lea
dec
stc
and
lret
mov
xchg
pop
push
cli
add
jns
out
jo
sbb
adc
xor
xchg
std
lods
xor
or
pop
loopne
aam
jbe
roll
call
ljmp
inc
into
or
lret
aaa
lods
jo
int
xchg
int3
lahf
mov
push
pop
jb
jg
jne
mov
aad
aas
mov
pusha
cmp
ret
shlb
loope
clc
cli
fsubrp
sbb
mov
or
cld
stos
and
sbb
clc
sahf
dec
incl
pushf
xchg
jbe
lods
mov
jo
je
push
mov
inc
dec
pop
xchg
sbb
lahf
sub
lret
or
cs
fldl
test
insb
out
jnp
xchg
scas
rcrl
loopne
xchg
sub
and
outsl
mov
stc
cmp
pop
sbbb
xor
mov
movq
outsb
pop
jns
mov
cltd
daa
fwait
pmulhuw
mov
cwtl
repnz
push
sbb
and
ret
cmp
pop
xchg
sub
orb
xchg
mov
pop
add
sbb
add
xor
ja
mov
mov
and
leave
mov
jo
fldenv
pop
cmpsl
popf
inc
shll
enter
mov
adc
jg
mov
cmp
mov
ret
push
or
mov
push
cld
push
mov
sbbb
or
in
mov
adc
aaa
jo
mov
inc
xor
xchg
xchg
or
rcrl
iret
xchg
cmp
insl
test
shrd
out
dec
xor
je
add
daa
cltd
mov
pusha
negl
data16
pop
mov
inc
pop
icebp
lahf
int3
and
scas
and
cltd
xor
inc
jmp
inc
inc
fisttpll
cmp
ljmp
xor
inc
sub
mov
pop
rcrb
andl
mov
dec
or
cmp
push
or
xchg
inc
call
fsub
mov
dec
lock
sub
jp
push
nop
rol
data16
xor
xor
push
push
pusha
xor
arpl
add
xor
movsl
mov
fbstp
or
shrl
jb
stos
jge
test
adc
loop
into
fmull
fwait
repnz
test
int3
xor
lret
int3
loop
mov
push
xor
cmp
stos
mov
push
leave
jns
xor
pushf
test
cld
mov
xchg
adc
rcrb
add
xor
dec
inc
fnstcw
dec
pop
int
loope
cmp
pushf
lods
dec
lcall
inc
sbb
fidivs
jbe
jae
adc
add
inc
cmp
inc
pop
lret
pusha
aaa
orb
inc
mov
push
shrl
cwtl
leave
mov
pop
inc
out
lret
fwait
stc
pop
pop
xor
outsb
mov
cld
cltd
lock
das
std
test
mov
sub
jne
shl
add
movsb
stos
stc
mov
or
or
add
jmp
in
sbb
mov
in
pushf
dec
fwait
cmpb
cmp
pop
mov
pop
shrb
mov
adc
cmpsl
cmc
inc
mov
cmp
lods
scas
repnz
inc
outsb
pop
jae
or
inc
fdivr
test
pusha
lret
lahf
ret
aad
push
cli
or
into
jne
lea
xchg
push
adc
pop
movsl
fs
loope
push
sbb
mov
pop
fidivs
rol
insb
es
adc
mov
inc
arpl
enter
jo
notb
inc
je
mov
pop
insb
imul
icebp
and
stos
neg
mov
and
sub
mov
add
and
mov
int3
xor
imul
or
pop
and
push
ja
fsts
and
mov
mov
incl
sbb
fisubrs
lods
imul
jo
js
loope
cltd
inc
out
dec
mov
fs
fnstenv
and
push
dec
cmpsl
mov
lods
test
sub
cld
xchg
add
outsb
sbb
ret
mov
pop
outsb
addl
mov
mov
xchg
sbb
mov
in
es
lea
jno
or
scas
inc
sti
xchg
je
cltd
push
repnz
mov
adc
loopne
cmp
mov
std
xor
inc
fcoml
mov
xor
cmpb
mov
mov
jl
sub
mov
sbb
or
pop
adc
div
xchg
test
add
pop
repnz
lock
push
aad
jns
pop
loope
mov
adc
pop
adc
mov
stos
dec
pop
call
in
mov
push
repz
jns
sub
lret
das
dec
and
or
insl
push
stc
fwait
mov
fsub
adc
std
sbb
xor
ja
or
aam
scas
pop
sub
inc
jo
jg
cmc
push
fdivl
rcl
testb
scas
inc
xor
push
int3
xor
sbb
or
mov
mov
mov
outsb
jecxz
pop
dec
outsb
testb
insb
std
dec
adc
or
imul
data16
pop
and
fdivrs
add
pop
cmpsl
or
xchg
mov
inc
arpl
adc
push
sbb
and
push
sbb
push
cmp
sub
pushf
out
xor
int
jge
inc
bound
xor
mov
inc
pusha
stc
pop
jb
sub
repz
mov
pusha
popa
push
cltd
test
lret
daa
call
test
push
fbstp
shll
mov
sbbb
repnz
jnp
adc
dec
dec
dec
mov
dec
sbb
jecxz
mov
je
rcrb
xor
insl
inc
insl
inc
daa
sbb
call
and
cwtl
fldt
ficoms
movsb
dec
aaa
dec
in
sbb
sub
adc
cs
shll
adc
dec
mov
jne
out
cwtl
push
rcl
mov
inc
loop
jg
in
popf
testb
cmp
push
repz
ss
rol
xchg
adc
and
movsb
push
fwait
cmpsl
xor
cld
xchg
fwait
divb
mov
or
push
jle
into
daa
out
fistpl
sbb
iret
sbb
imul
popf
lret
fdivl
jae
mov
xor
sti
stc
or
push
sbb
xor
sub
xchg
ja
ret
and
lahf
insl
fdivrl
xchg
cld
int3
arpl
cmp
mov
mov
jb
fldl
cltd
test
in
int3
fdivrs
xchg
inc
mov
je
cmp
adc
int3
and
test
mov
aam
jmp
loopne
ret
ficoms
iret
fisubs
in
mov
push
stc
mov
jge
mov
cld
insl
int
lahf
cmc
sub
lods
push
cmp
jl
adc
repnz
vmovss
addl
xchg
jne
in
and
in
imul
idivl
xchg
divb
push
mov
andl
push
mov
xlat
shlw
je
sub
movsb
mov
inc
scas
dec
ja
xchg
test
inc
in
js
and
ret
pusha
inc
fistl
ja
xchg
and
fucomi
mov
pop
push
iret
leave
adc
or
cmp
lcall
mov
sub
and
addr16
adc
jp
arpl
push
in
jae
popa
inc
insb
mov
inc
jno
jae
inc
mov
push
leave
pusha
shll
or
repz
dec
pusha
scas
ret
cmpsb
stc
lds
sbb
out
sbb
aaa
jne
arpl
push
orb
pop
xor
dec
xlat
lods
out
jo
jnp
nop
scas
mov
sahf
add
cmpsb
adc
loop
jne
pusha
out
in
test
mov
add
cltd
aas
outsb
leave
jae
adc
xchg
and
in
nop
and
pusha
aad
push
ffreep
das
adc
inc
sti
inc
xlat
cs
enter
inc
jg
movsl
outsb
add
mov
movsl
loope
and
mov
mov
push
lcall
mov
incb
dec
dec
sarl
push
dec
dec
push
and
and
mov
dec
pop
xor
dec
jl
xchg
sub
or
pop
add
pop
lock
mov
mov
and
jo
in
fsubrl
pusha
mov
xor
jbe
push
cltd
hlt
pop
push
adc
ret
push
push
pop
mov
cli
sub
in
mov
test
push
mov
ja
jmp
leave
mov
push
add
stc
cs
js
ret
xchg
shll
imul
cmc
out
scas
outsb
and
xchg
jge
push
jmp
dec
jecxz
xchg
leave
push
rclb
fcomps
mov
pop
popa
add
data16
pop
fstps
jo
test
add
cmp
jae
lods
jo
mov
push
xchg
xor
ret
jae
pop
push
test
jae
jmp
sbb
dec
mov
mov
and
dec
mov
push
pusha
mov
cli
xchg
dec
mov
mov
repnz
or
sub
roll
mov
js
nop
jb
inc
push
cs
push
addr16
xor
pop
sbb
or
pop
movsb
mov
sub
xchg
insl
lock
xchg
mov
jo
into
push
nop
inc
xchg
and
push
xor
jmp
inc
fsts
inc
pop
sbb
inc
std
fdiv
jne
std
cmpsb
out
shl
inc
out
pusha
adc
cltd
ret
xorl
stos
mov
pop
sub
push
movl
sbb
xor
jp
pop
lods
jo
cltd
xchg
xlat
outsb
mov
fdiv
mov
push
mov
mov
mov
pop
cmp
jmp
or
ret
xor
push
pop
or
sar
in
jo
aaa
pop
push
inc
pop
sbb
pop
insl
data16
push
sub
mov
jmp
push
mov
inc
push
in
pop
mov
jo
imul
stos
stc
inc
roll
sbb
jmp
add
enter
jae
aam
add
lret
push
repnz
test
mov
xlat
mov
loope
sbb
fidivs
add
std
dec
testb
jg
add
cmp
gs
push
pop
iret
popf
cltd
bound
sub
push
add
aam
and
cltd
pop
mov
or
clc
popf
arpl
pop
xchg
and
pop
testl
inc
push
cs
mov
adc
dec
inc
cld
ds
leave
push
adc
ja
test
sbb
xor
fucomp
stos
mov
loope
xor
aas
mov
pop
push
lods
pop
dec
notl
int3
aam
ret
jnp
repnz
add
ja
mov
or
inc
loopne
jg
xchg
sub
xor
fistpll
ljmp
push
aaa
jnp
subb
pop
sbb
pop
dec
jge
outsl
sub
cltd
jecxz
adc
fiadds
pushf
push
das
out
bound
cmp
add
mov
jb
mov
pop
push
or
into
xorl
and
xor
xchg
test
std
lds
mov
xor
pop
adc
inc
add
mov
ljmp
jne
aad
jge
xor
jecxz
repz
dec
jp
scas
pop
jno
test
and
out
or
movsl
movsl
mov
adc
cmp
pop
enter
xchg
scas
pop
fistpll
fsubl
jno
cld
fmulp
xor
push
mov
add
outsb
sbb
daa
xor
int
pop
push
or
or
mov
imul
xlat
inc
loope
mov
fidivs
das
stos
mov
and
xchg
lahf
std
rep
push
push
pop
inc
sub
mov
repnz
pop
negl
and
les
xchg
add
adc
xor
push
cwtl
in
adc
mov
dec
mov
ljmp
lcall
or
fnstsw
cli
pushf
inc
sub
sbb
xchg
adc
fwait
lock
push
inc
pop
jnp
jecxz
sbb
aaa
and
jne
je
push
mov
jg
int
pop
jbe
sbb
xor
in
jae
push
lods
sub
or
and
jecxz
push
jae
xor
lcall
fnstsw
pop
ret
popa
xchg
xlat
aaa
mov
ret
rcrl
xlat
insb
in
pop
addr16
loop
mov
xchg
sbb
loopne
adc
in
test
sbb
or
cmp
and
lcall
loope
shrb
push
adc
scas
xor
mov
dec
cltd
lea
inc
pop
dec
out
jmp
and
repz
dec
and
cmp
int3
push
pop
add
nop
xchg
icebp
cmp
loop
fdivrl
stc
jno
dec
mov
mov
mov
cmpsb
outsl
adc
pop
adc
cmp
mov
outsl
outsl
inc
lods
and
pusha
stos
push
cmpsl
loop
pop
or
lahf
mov
sbb
mov
push
incb
mov
sub
dec
call
in
push
push
in
fxch
mov
add
mov
inc
jno
out
insl
inc
or
out
stos
test
jp
rcl
and
bound
push
fadds
push
jbe
dec
dec
test
jg
cmpsl
out
jp
lods
jnp
push
jmp
add
dec
mov
pop
ljmp
push
or
aaa
cmpsl
sbb
ret
mov
mov
dec
add
ss
push
mov
ss
lods
shlb
cmpb
mov
dec
dec
aam
mov
dec
repnz
in
test
es
loop
adc
push
mov
dec
lea
hlt
dec
jno
clc
cs
mov
js
xchg
jo
sub
sti
bnd
shll
pop
data16
mov
add
and
loope
into
loop
rcrb
mov
out
incl
mov
iret
data16
lret
cmp
in
test
ficoml
int3
iret
adc
xchg
pop
push
adc
stos
aas
fisubs
jl
push
out
jno
lea
xor
imul
cmp
std
insl
jo
or
ja
mov
lds
add
sub
idiv
cmc
popf
push
cwtl
lods
shrl
jo
lahf
gs
mov
imul
fmuls
std
adc
mov
ljmp
dec
dec
push
orl
nop
stos
lret
jae
inc
arpl
cld
repnz
sub
dec
loope
pop
out
lods
movsb
movsl
mov
je
pop
lods
pop
xchg
add
je
je
jg
adc
xchg
loope
cmp
stos
lods
mov
push
lods
lds
imul
lea
or
push
jp
push
xor
pop
sub
mov
jmp
cli
push
hlt
outsl
cltd
std
mov
test
xchg
test
jns
rcll
or
push
pop
mov
inc
sar
popf
mov
mov
fdivrs
ret
cwtl
loopne
jae
sbb
mov
cmpsl
loop
aas
adc
aad
xchg
outsl
push
push
mov
sbb
lods
sarb
xor
bound
mov
mov
mov
adc
xor
xchg
xchg
sbb
sub
in
add
mov
adc
jns
rol
push
pop
cmp
iret
and
aam
sub
hlt
neg
loop
jmp
jno
adc
xchg
div
or
xor
inc
std
xchg
rorb
push
hlt
push
out
jle
sub
jo
cltd
jl
xchg
das
subb
push
push
addr16
jnp
lret
movsl
push
and
inc
popf
sbb
pop
cmp
in
insl
dec
leave
lret
shrl
mov
daa
cmp
mov
jp
or
cmp
dec
pop
mov
dec
jmp
in
mov
jmp
subl
jne
and
and
cmp
mov
movsb
jecxz
incb
int3
sbb
mov
xchg
js
or
ja
ja
cli
inc
out
inc
or
add
mov
mulb
push
push
cmp
sti
push
mov
xor
cmp
push
adc
in
mov
flds
push
adcb
mov
out
sbb
cmpsl
dec
out
push
cmp
cmc
movsb
sbbb
or
fldt
push
fstpt
movsb
inc
jno
mov
test
xor
aas
sbb
mov
add
cli
icebp
stos
rorl
lock
jns
pcmpeqb
fidivrl
cwtl
or
jl
loopne
mov
mov
add
pop
test
and
andl
repz
cmp
daa
and
pop
mov
pop
test
push
insb
decb
jae
sub
push
jae,pn
xchg
inc
xor
shl
mov
and
shrb
outsl
cmpsb
cmp
nop
add
sbb
sbb
pop
cmpsb
out
aad
jns
cmp
pushl
sahf
sti
cmp
out
in
sbbl
inc
ffree
std
or
dec
shll
lea
cld
movsl
cmp
sbb
pop
imul
or
repnz
mov
push
jae
add
pusha
push
xchg
mov
inc
ss
or
jae
pop
out
cmp
daa
ss
repnz
push
lods
mov
dec
jns
and
insl
inc
lock
rclb
push
popf
push
mov
gs
pop
push
jmp
xchg
sub
mov
mov
push
fwait
jns
int3
fstps
push
cmpsb
inc
jne
mov
rolb
push
cltd
xor
push
cli
and
js
dec
xchg
outsl
mov
out
pop
inc
xor
cmp
loop
add
push
ss
imul
cmpsb
add
std
cmp
fstps
and
mov
dec
mov
pop
in
insb
cmpsb
cmp
out
fidivl
arpl
jb
inc
in
adcb
out
dec
jno
sahf
mov
test
mov
outsl
and
mov
insb
insb
mov
adc
dec
xchg
ficompl
lea
and
movsb
xchg
lds
cmp
jnp
lods
push
or
or
lea
addb
mov
xor
mov
sti
fwait
xor
sbb
shr
mov
aas
sbb
lahf
loope
test
aam
out
cmc
xchg
test
xlat
lods
xor
jbe
push
xchg
stos
sub
dec
insl
daa
mov
notl
lock
jle
adc
idivb
test
mov
repnz
lret
or
xchg
sbb
jb
repz
push
xchg
jle
cli
inc
sti
fildll
lret
xchg
mov
xor
ret
sti
push
pop
shrl
jle
dec
dec
xchg
cld
sub
dec
and
mov
fldenv
fsubp
mov
subb
iret
ljmp
jno
call
mov
push
popf
xchg
xchg
mov
fldpi
pop
or
scas
inc
mov
repnz
sahf
lods
mov
cmpsb
pop
cmpsb
out
scas
xchg
jg
mov
xchg
mov
pushf
jl
push
push
frstor
jo
push
add
movsl
and
xchg
notb
insl
pop
pushf
insl
cmp
hlt
mov
xor
das
in
inc
sbb
mov
insb
loop
scas
mov
popa
int3
aad
jae
leave
daa
ret
mov
pop
imul
insb
jae
jne
jmp
pusha
mov
fsts
dec
jp
les
cmp
pop
idiv
aaa
ds
xchg
sub
pop
xor
pusha
push
xor
dec
loopne
loop
push
adc
in
cld
insl
movsl
loopne
push
inc
fucomip
cltd
cmp
test
test
wbinvd
jno
xor
ljmp
das
cmp
mov
je
and
cmp
add
and
cmc
stc
in
cmpsl
ret
inc
daa
xchg
sub
dec
xchg
lock
cmpxchg
pop
fldl
xchg
push
sub
sub
icebp
mov
dec
fmul
repnz
mov
adc
stos
pop
ss
inc
lcall
inc
push
in
fisubrl
das
add
sub
inc
inc
test
call
inc
inc
into
stc
pop
lock
add
mov
enter
jo
or
insl
adc
inc
xor
jbe
xor
push
enter
pop
data16
inc
ret
dec
mov
nop
dec
or
dec
cltd
clc
rorl
xchg
dec
mov
dec
add
gs
rol
ss
pop
in
push
jg
das
mov
out
test
sbbb
or
mov
aaa
mov
mov
jnp
pop
fdivrl
pop
xor
in
push
ss
test
mov
fcoms
push
mov
pop
popa
jl
lods
shll
mov
loopne
insl
loop
cmp
pop
or
inc
inc
cmpsb
fbstp
push
movsb
sub
mov
push
mov
leave
stc
dec
push
xchg
pop
xor
adcl
xor
arpl
lret
test
push
scas
popa
test
nop
daa
out
pop
pop
lahf
xor
scas
xchg
fsubr
out
mov
cmp
add
std
adc
jecxz
dec
arpl
jo
decb
movsl
incb
jbe
or
xor
mov
les
insb
xchg
outsb
jge
and
mov
sarl
movsl
push
inc
daa
insl
lahf
or
or
mov
cltd
hlt
cwtl
std
lods
cmp
aas
cld
in
jnp
mov
ja
lock
pushf
pop
mov
ljmp
rolb
out
repnz
loop
sarb
iret
add
inc
and
dec
outsl
aaa
mov
shl
mov
cmpsb
jge
daa
sbb
test
xor
pop
dec
or
sub
cld
xchg
jne
test
sti
mov
cmp
pop
add
stc
les
dec
mov
cmp
stos
dec
mov
out
scas
inc
mov
shrl
jb
cs
xchg
ljmp
jne
inc
mov
pop
jecxz
mov
pushf
pop
xchg
add
daa
jmp
add
and
loop
cwtl
repz
inc
cmp
inc
xchg
stc
popf
pushf
fsts
xor
fidivl
xor
popa
ss
xchg
dec
je
xor
push
aas
sbb
aad
dec
mov
dec
jle
or
pop
lahf
sbb
pop
push
loop
ret
out
xchg
ds
outsl
mov
xchg
fnstcw
mov
dec
push
popa
xor
dec
or
in
jp
loope
cli
pop
loopne
mov
bound
movsb
cmp
popa
fdivrs
push
xchg
leave
add
mov
mov
rcll
shlb
and
pop
mov
sub
xchg
pop
push
pop
xor
push
pop
inc
pop
inc
in
xorl
push
jo
out
jne
fscale
xchg
cs
lds
rorl
mov
xchg
mov
push
cld
adc
and
and
jo
icebp
test
std
mov
fiadds
int3
in
int
push
sub
cmp
mov
push
icebp
nop
call
cmp
sub
dec
rorl
sub
enter
sahf
adc
xchg
dec
inc
call
dec
add
xor
xor
mov
test
nop
sbb
pop
pusha
test
inc
testb
mov
imul
sbb
lret
pop
inc
aad
xchg
fs
xchg
xor
inc
addr16
sti
sahf
outsb
subb
pop
push
or
dec
imull
inc
data16
fwait
cmpsl
or
loop
dec
jp
xor
movsb
repnz
bound
shrb
test
inc
into
pop
jmp
popa
dec
popf
lods
jg
mov
sti
dec
xor
movsb
nop
push
test
sbb
lea
cmp
repz
stc
push
mov
lret
and
mov
push
jbe
sub
inc
pop
outsl
std
cltd
shrl
xlat
sub
fwait
xor
dec
loope
dec
loope
xor
call
jecxz
cmpsb
insl
out
cmpsl
ret
jl
arpl
jle
sub
mov
clc
daa
dec
pop
mov
add
mov
cmp
mov
data16
cmp
data16
mov
or
adc
or
imul
cmp
pop
stos
inc
pop
mov
sbb
enter
ss
push
inc
shrb
xchg
rcl
frstor
subb
cli
sbb
mov
mov
sbb
cmp
push
aas
testb
pop
aad
adc
and
push
jle
add
out
mov
cltd
mov
jns
add
js
xlat
outsb
pop
cltd
out
test
int3
or
pushl
sub
jnp
add
push
fildl
dec
lods
push
inc
mov
ror
inc
int3
fs
jb
push
push
mov
push
jne
movsl
icebp
pop
inc
scas
push
xchg
inc
add
insb
inc
and
push
inc
aas
mov
sti
sub
or
inc
fdivrp
dec
sbb
rcrb
data16
dec
mov
packssdw
fidivl
lcall
jl
adc
movsb
data16
div
imul
imul
gs
mov
imull
and
lcall
mov
fcom
sbb
sbb
shll
hlt
adc
xlat
mov
jo
mov
lods
sub
push
pmuludq
fstp
xor
int
repz
jmp
call
bound
addr16
or
mov
cmp
sub
mov
jmp
mov
test
jae
pop
gs
xchg
jg
pop
lea
enter
in
aad
mov
add
lret
inc
or
mov
push
jmp
sbb
faddp
adc
push
mov
adc
test
xchg
cmpsl
or
lods
dec
movsb
es
cld
push
add
sub
fmulp
xor
andl
xor
pop
bound
repnz
stos
add
fucom
fistl
pop
hlt
inc
andb
les
pop
imul
decl
xchg
loope
dec
mov
cmp
adc
out
add
add
jl
push
popa
dec
dec
cmp
xchg
inc
dec
or
cmp
mov
fdivrs
jmp
in
jmp
push
cld
xchg
and
andb
xor
into
imul
in
fistpll
mov
add
jb
jnp
jb
cld
adc
lcall
sti
and
fcomp
mov
adc
mov
addr16
adcb
mov
sub
mov
cmpsb
cli
mov
push
xchg
dec
je
dec
adc
mov
add
sbbb
jg
inc
call
push
or
and
push
ljmp
ds
mov
cmp
movsl
adc
daa
inc
mov
mov
and
pop
mov
js
cmpl
or
iret
leave
icebp
out
inc
lods
loop
inc
in
in
jnp
cmp
je
pop
dec
sbb
popa
sti
fwait
rorb
push
sub
test
cwtl
fs
inc
sbb
addr16
pop
add
push
aaa
lret
jge
xchg
pop
and
adc
lcall
add
jle
bound
leave
cmpsl
andl
cmc
test
shrl
cmc
cmp
push
outsl
add
fisttpll
pushw
loope
out
aas
jbe
icebp
aam
les
cmp
lds
push
xchg
outsl
pop
sbb
pusha
out
xchg
jnp
clc
cmp
ss
popa
std
outsb
mov
vpcmpgtd
lcall
cwtl
pusha
loop
mov
xchg
mov
mov
push
adc
inc
pop
test
fwait
pop
imul
inc
mov
repnz
jno
cmpsb
xchg
cmp
lahf
ljmp
jnp
and
xorl
mov
push
xchg
fldt
int3
loopne
nop
xchg
push
pop
mov
xor
mov
adc
mov
icebp
bound
push
subb
inc
mov
aam
adc
push
jne
sti
and
addr16
cmp
and
mov
inc
bound
adc
lcall
push
cltd
test
lret
sti
mov
mov
mov
add
mov
mov
push
lret
push
fucom
inc
fs
inc
js
inc
loopne
aaa
jecxz
or
pop
movl
bound
sub
or
rorl
mov
popw
xchg
mov
add
cmp
cmp
int
mov
sub
sub
cmp
notl
jne
aam
fisttpl
push
ret
xchg
popf
aaa
cmp
jno
xchg
insl
scas
xchg
and
push
adc
imul
jl
mov
mov
jne
sub
stos
push
and
aam
sub
sub
xor
jle
nop
sbb
lea
inc
cmpsb
pop
sbb
mov
push
mov
fdiv
shl
jmp
pop
dec
in
sbb
mov
stos
insb
negb
popf
or
je
sti
and
dec
sti
jo
sbb
popf
mov
repz
xor
mov
out
lahf
dec
and
or
push
std
lods
cmpl
cld
or
or
mov
popf
mov
lret
xor
in
mov
ljmp
and
insl
idivl
and
add
jno
sbb
mov
popa
cmp
push
insb
cmp
fbstp
icebp
je
shll
inc
fnstsw
lock
js
mov
fsubs
je
ljmp
and
pop
inc
insl
add
imul
xchg
fdivrl
push
add
adcb
orb
imul
xchg
mov
xorl
outsl
xchg
bnd
cmp
cmp
sbb
sbb
dec
cmp
mov
cmc
mov
add
leave
aad
sbb
scas
sub
add
in
xchg
mov
ja
loope
fwait
and
loop
gs
std
add
cs
lret
enter
data16
jmp
inc
popa
mov
push
shll
xchg
addr16
xchg
pop
mov
jne
fdivs
mov
lret
and
push
cmp
es
sbb
xor
ficoms
dec
xchg
cli
aad
shrl
addr16
insb
cltd
lea
enter
cmc
nop
adc
into
ds
outsl
out
adc
cmp
out
mov
sti
fisubrs
lret
subl
mov
fildl
push
out
outsb
cmp
push
xchg
jno
pop
repz
jbe
jb
insb
jp
lds
jmp
add
fdivrs
and
negl
mov
iret
cmp
out
arpl
loope
out
and
xor
jne
shlb
push
dec
into
je
ficoml
push
popa
adc
cmp
stos
jo
int3
xlat
int3
xchg
jbe
popa
add
jmp
push
cmp
nop
imul
xchg
dec
push
inc
stc
push
xchg
aam
and
ret
inc
scas
pop
cmp
cmp
mov
pop
pushf
jno
push
loop
outsb
jp
dec
mov
in
cmp
mov
mov
daa
jns
jns
add
fidivrl
or
stos
pop
lcall
fsubrs
adc
mulb
cmp
inc
je
das
or
xchg
sub
jbe
add
push
cmp
je
pop
lea
call
fs
mov
and
lods
out
sti
sub
test
push
sub
jge
arpl
pop
mov
lea
and
pop
lea
rorl
test
notb
lods
fsts
cwtl
pop
call
repz
int
insb
ret
aaa
fidivl
fimuls
dec
insb
jnp
adc
popa
clc
adc
mov
push
lods
mov
jbe
js
lahf
fistpl
fsubr
mov
lea
mov
xchg
jno
stos
call
xor
iret
pop
pop
sahf
xor
jnp
xor
cmpsl
mov
in
mov
cmc
imul
jl
xchg
test
mov
call
or
xchg
sub
inc
cmp
iret
jae
in
push
sbb
add
sub
xchg
mov
imul
xchg
mov
or
mov
das
ja
mov
xchg
pop
sub
mov
jmp
mov
ds
sbb
or
cltd
sub
inc
adc
adc
xor
push
xor
scas
push
into
push
sub
xor
fnsave
pop
push
popa
cwtl
fs
push
adc
mulb
or
ljmp
mov
shll
cltd
jle
scas
cmpb
push
sub
add
dec
push
ret
pop
ret
notl
adc
mov
shll
inc
popf
in
xchg
in
idivb
push
jl
push
push
popf
fdivl
stc
sub
mov
out
xchg
out
fstpl
scas
into
and
cmp
cmc
in
mov
mov
xchg
mov
pop
mov
dec
lret
pop
insl
js
dec
loop
jge
push
sti
imul
lea
test
loope
mov
aaa
lcall
pop
jno
pop
cmc
into
xchg
dec
dec
mov
sub
test
in
xchg
cs
inc
add
shrl
cmpsl
aad
pop
aam
adc
mov
jge
mov
push
xor
push
mov
xchg
sbb
ss
push
adc
pop
es
pop
jle
scas
scas
jl
and
lds
xchg
push
test
lret
dec
sbb
pop
mov
int
dec
push
cmpsb
inc
stc
mov
adc
dec
enter
test
and
lods
sub
cmpsb
add
aas
popf
xchg
sahf
xor
push
inc
mov
mov
add
mov
pop
loopne
jecxz
insb
or
and
sub
push
xchg
xor
and
dec
push
insb
cli
or
test
enter
out
aad
cwtl
outsb
dec
mov
mov
lods
dec
mov
xlat
xchg
jmp
xor
aam
adc
jmp
sbb
in
stos
pop
xchg
stos
push
lahf
imul
pop
scas
or
mov
mov
fadd
add
jo
das
xorl
xchg
mov
frstor
mov
fisubl
jns
adc
fidivs
stos
sub
fwait
xlat
test
dec
leave
jae
jae
push
movsl
mov
adc
adc
mov
xor
inc
mov
into
addl
jmp
inc
fdivr
sbb
subl
adc
arpl
mov
xlat
xchg
xchg
mov
mov
sbb
pop
push
jecxz,pn
jbe
fucomp
icebp
movsl
dec
inc
inc
dec
clc
fnstenv
xchg
jnp
outsb
aaa
or
sbb
jns
jo
imul
scas
and
mov
in
insl
lret
xchg
sbb
mov
jb
inc
jae
adc
daa
dec
mov
hlt
push
pop
cmp
pop
mov
jo
int
and
stc
std
sbb
mov
out
mov
mov
addr16
in
nop
pop
push
cmpsb
mov
mov
sub
call
fsts
jg
fldcw
movsl
cltd
pop
mov
fsubrl
iret
and
push
mov
and
xchg
mov
mov
inc
fsubr
sti
mov
fstl
cmpsl
call
mov
sub
les
in
push
lret
mov
adc
mov
xchg
popf
icebp
cwtl
mov
aaa
out
sti
pop
outsl
rcrb
mov
ds
jo
cmc
mov
fimull
xchg
lods
mov
cltd
jno
iret
jae
lock
or
pop
scas
js
mov
inc
pop
pop
push
daa
pop
gs
in
les
push
jmp
adc
int3
xor
test
cmc
mov
movsb
push
mov
fdivl
mov
js
hlt
add
xor
lahf
pusha
add
es
sbb
push
lret
cld
aas
lods
and
mov
daa
outsb
jb
jle
xchg
data16
rcr
mov
mov
cld
cwtl
js
mov
cmp
orb
fs
sbb
hlt
pop
shrb
add
xchg
mov
sub
cmpsb
enter
mov
out
add
dec
xchg
mov
cmp
inc
insl
pop
mov
inc
cmpsb
or
pminsw
mov
loope
mov
sbb
mov
push
and
shrl
adc
clc
hlt
mov
ror
testl
je
sbb
leave
mov
mov
lcall
xor
push
mov
scas
out
pusha
repz
or
and
inc
sarb
xchg
pop
cwtl
pop
outsl
lret
xor
push
mov
lea
pop
pop
lcall
mov
dec
enter
nop
lods
scas
mov
adc
pop
jae
dec
add
push
ss
scas
adc
fdivl
jl
mov
clc
aad
dec
loop
cmc
out
inc
adc
lret
bound
ror
pop
lea
lods
cwtl
xchg
hlt
mov
fcmovne
and
cmpsb
cmp
sub
outsl
push
mov
in
aas
aad
std
fdivrs
pop
repz
fisubs
insb
repnz
aad
adc
mov
push
mov
arpl
outsb
push
push
jecxz
adcb
scas
push
push
or
mov
shll
les
notb
and
xorb
adc
out
inc
fdivr
push
stc
ficompl
pop
sbb
jae
daa
cld
xorl
rcl
fstpl
lock
outsl
push
ds
mov
push
mov
push
shrl
mov
pop
insl
sub
xlat
cld
mov
adc
aam
pop
push
iret
out
inc
or
aam
adc
aaa
push
mov
and
clc
out
icebp
jecxz
inc
adc
cmp
dec
ljmp
nop
mov
xchg
jecxz
mov
pop
cmp
rcr
addl
mov
pusha
mov
mov
in
jecxz
clc
mov
idiv
popf
sarl
imul
sar
repz
jne
lea
add
sub
inc
pusha
push
call
in
jns
jb
nop
lcall
mov
add
xchg
jno
aas
sbb
mov
in
shrb
adc
dec
mov
imul
push
sti
xor
and
push
ds
sbb
call
in
xchg
ds
dec
jno
sub
and
rcpps
pop
lock
fildl
popa
pop
test
aas
popa
adc
stos
in
or
lcall
sub
mov
jge
mov
add
jge
pop
mov
dec
push
pop
cmc
inc
xor
stos
pop
dec
loopne
pop
aas
test
mov
or
fcomi
mov
shl
lds
xchg
sub
cltd
shlb
xchg
add
add
push
push
push
dec
in
push
shrb
cmp
jae
ds
repnz
adc
test
lods
inc
test
ret
pop
ljmp
ret
pop
test
popa
xor
dec
daa
mov
fwait
xchg
lret
jmp
mov
adc
add
jb
sti
stc
rcrl
pusha
dec
les
addr16
push
repz
and
roll
in
test
fists
je
and
imul
jae
movsb
int
out
sbb
vcmpss
sbb
int3
lock
int
cmp
out
enter
fisttpll
std
cltd
mov
push
fstps
out
enter
xor
cmc
jmp
in
lods
mov
in
negl
mov
lock
jno
xor
mov
andl
lods
ficoml
stos
lret
loopne
adc
pop
test
aam
decb
ret
adc
mov
or
dec
add
mov
lret
pop
aaa
pop
mulb
pop
orl
sbb
and
into
xchg
dec
pop
leave
scas
imul
xchg
cltd
xor
xchg
pop
sbb
mov
into
inc
jns
pop
pop
imul
orl
xchg
or
pop
insb
sub
mov
inc
stos
cmc
push
bnd
int3
cmpsl
xlat
test
clc
pusha
pusha
or
iret
push
popf
shl
cli
pop
and
mov
divb
loop
iret
insl
in
inc
mov
popf
add
imul
outsl
mov
roll
test
cld
dec
cld
in
pop
and
mov
mov
xchg
inc
or
pop
test
push
int3
in
mov
xchg
cmpsb
fiadds
pop
pop
xor
mov
data16
data16
test
enter
addb
pop
xor
pop
fnstenv
adc
inc
pop
mov
xlat
jb
xchg
cmc
jp
pushf
sub
adc
pushf
mov
andb
dec
ja
sbbl
mov
int3
sub
in
inc
add
aam
jne
xchg
ss
mov
dec
arpl
fwait
sub
int
lea
cli
aam
jo
clc
xchg
aaa
mov
mov
ljmp
inc
fisubl
bound
xor
lods
outsb
add
movsl
fwait
gs
shlb
jnp
push
xor
cmp
pop
out
out
add
dec
push
mov
leave
mov
push
insb
ss
insl
jb
daa
and
xchg
dec
ds
push
mov
jns
pop
jne
cs
rorl
xchg
fldcw
in
push
aam
sub
loop
xchg
cltd
das
repz
mov
mov
mov
sub
outsb
lds
pop
test
or
mov
pop
das
xor
cmpsl
inc
jns
dec
and
ljmp
rorb
mov
rcrb
les
ss
push
jbe
jl
lea
mov
icebp
test
popf
mov
add
test
sbb
data16
sub
jmp
dec
mov
loop
mov
sahf
xor
andl
mov
inc
out
in
pop
imul
sahf
mov
fldcw
fidivrs
sbb
mov
ja
test
sbb
xlat
scas
mov
jge
jns
and
sarb
cld
push
mov
fsubrl
dec
leave
add
lods
dec
and
cmp
add
scas
outsl
push
xor
jg
push
jle
jae
imul
scas
cs
mov
add
mov
jp
clc
or
pop
je
pop
loope
fsts
test
inc
es
out
inc
lahf
rclb
fwait
pusha
jp
jnp
xchg
mov
enter
lret
out
shll
add
ftst
adc
push
ds
pusha
addb
xchg
pushf
mov
inc
mov
fwait
xor
mov
or
pop
scas
jmp
or
push
mov
pusha
movsl
test
imul
add
idivb
push
xor
cmp
cmpsl
push
mov
xchg
add
imul
pop
mov
mov
ja
sub
cmp
popa
cmp
jnp
mov
adc
sub
adcl
inc
dec
loopne
jb
xlat
inc
std
inc
lods
mov
sbb
ret
jne
rcrl
adc
fimuls
cs
fwait
sbb
or
stos
xor
xchg
jno
add
sahf
and
test
mov
push
jbe
mov
jo
pop
pop
inc
mov
aaa
or
or
mov
sti
or
in
test
add
loope
or
stc
pop
fimull
mov
xchg
repz
dec
cwtl
ret
pop
cltd
rolb
mov
cmpsb
test
push
or
mov
jmp
aam
insb
inc
cmpsl
test
fisttpl
roll
ljmp
insb
xchg
popf
sbb
enter
lods
pop
fs
and
pop
into
adc
fcomps
xchg
mov
inc
sbbb
out
mov
das
cmp
or
jg
pop
lds
pop
outsl
mov
cmp
xor
fimuls
scas
scas
mov
or
mov
mov
cwtl
imull
insb
mov
lea
cmp
pop
push
xchg
imull
mov
out
jb
insb
sub
ss
je
mov
fdivrl
cltd
int3
insl
jo
and
sub
adc
adc
cltd
cmpsb
dec
gs
jne
fisubl
inc
pop
inc
scas
add
xchg
mov
adc
in
lahf
pop
mov
ds
hlt
addr16
lret
sub
lods
and
jg
jmp
add
popa
into
or
lret
mov
scas
call
leave
mov
stc
and
add
and
sub
nop
mov
imul
push
pop
notb
lcall
jmp
mov
sbb
xchg
dec
jle
jecxz
out
arpl
rcrl
gs
cwtl
test
fwait
jae
push
push
jne
or
repnz
or
sub
mov
cld
leave
je
sti
sbb
pop
insl
fisubrl
stos
mov
test
xor
lret
lret
out
mov
mov
pop
sahf
inc
rorl
sbb
mov
call
adc
aas
mov
lea
pop
cmpsl
inc
mov
push
mov
loope
and
arpl
sbb
lea
loopne
sub
test
ret
xor
rsqrtps
add
jb
inc
lret
fbstp
stc
push
push
xchg
scas
ret
pusha
subb
ljmp
mov
inc
xor
les
add
adc
jle
stos
fwait
test
jbe
pusha
inc
test
je
lds
mov
mov
clc
push
xchg
lds
faddp
aas
rorb
nop
sub
adc
sbb
test
cmp
rcrb
cltd
addl
xchg
ret
mulb
out
sub
test
pop
leave
rol
int
pop
sub
mov
add
xchg
jb
inc
fsts
jmp
dec
xchg
xor
hlt
jno
dec
loopne
xchg
jns
dec
sbb
jge
shrl
and
and
sub
jge
shll
jmp
add
lock
fsubrs
pop
xor
push
dec
dec
adc
in
and
popa
ret
adc
jbe
mov
push
sbbb
cmp
jge
fsubl
cmp
mov
aaa
dec
andl
test
mov
push
cmp
pop
sbb
imul
mov
pop
nop
xor
rcll
mov
iret
dec
xlat
or
scas
inc
daa
push
adc
mov
cli
sbbl
sar
or
xchg
sub
scas
xor
add
sbb
stos
imul
push
xchg
stos
inc
mov
fmul
jns
lods
popa
mov
test
xor
or
rorl
and
inc
or
cmp
leave
or
arpl
mov
lahf
mov
sub
or
cmp
mov
ret
push
cmpsl
mov
fiadds
mov
dec
jb
scas
mov
or
jo
mov
push
or
aad
movsb
pop
jae
push
insl
xor
bound
movl
adc
dec
movsb
sub
sbb
mov
dec
movsl
mov
inc
std
or
pmullw
mov
push
test
jecxz
testb
shlb
hlt
sbb
mov
push
aaa
jne
loopne
aad
or
pop
movsb
lods
int3
popa
shlb
push
lahf
daa
dec
jp
ret
sbb
dec
sbb
xor
mov
or
jle
outsl
jmp
scas
dec
jno
mov
iret
xchg
xor
addr16
scas
clc
xchg
aas
dec
dec
sbb
into
dec
jns
in
cltd
outsl
int
stos
pop
cli
rcrl
cmp
pop
cwtl
bound
out
mov
dec
push
leave
test
xor
adc
jle
mov
xchg
add
sti
test
jbe
and
mov
out
mov
xchg
cmc
jo
push
mov
adc
mov
or
sub
inc
outsl
sbb
leave
imul
xchg
cmpsl
jne
mov
cmpsb
sub
hlt
gs
stos
mov
in
and
inc
add
pusha
das
loop
push
adc
sub
pusha
push
dec
cmp
fbld
xor
nop
movsw
loope
jbe
in
add
loop
dec
push
pop
sub
neg
add
adc
dec
jo
push
xchg
inc
pop
or
and
push
stc
inc
sbb
dec
cli
loopne
rcrb
aas
sarl
lods
dec
insb
fnsave
add
daa
outsl
outsb
nop
out
movl
or
xchg
rorb
cs
in
adc
mov
sti
std
mov
xor
in
pop
leave
or
pop
mov
stos
and
rcrb
jb
xor
mov
mov
xlat
aas
sti
into
loop
popa
pop
and
inc
mov
ja
stos
inc
repz
mov
mov
mov
xor
incb
and
jno
jge
push
popf
xor
jbe
pop
fbld
mov
xlat
jecxz
popa
fsincos
into
jecxz
ja
push
mov
cltd
xchg
jb
adc
cmpb
jg
xchg
stc
or
cmp
or
pop
imul
arpl
repz
cld
xor
stos
jp
push
mov
outsb
add
lcall
es
cli
sub
stos
and
mov
std
cmc
mov
or
cltd
cmp
sub
cltd
cli
cmp
dec
adcl
leave
cld
test
or
push
lea
repnz
stos
mov
pop
sub
pop
fisubs
ret
pop
imul
lods
mov
and
cmp
gs
sub
lock
dec
or
jl
jno
add
and
pop
jns
fstp
fcoml
mov
xlat
icebp
loop
cmp
adc
cld
aam
xor
mov
or
sar
mov
dec
shl
and
inc
or
adc
adc
inc
mov
push
jne
jp
push
sahf
into
jp
ds
les
mov
sbb
ret
out
push
in
scas
dec
mov
push
outsb
push
outsl
push
dec
add
add
cmp
and
add
jecxz
insb
fbstp
push
mov
mov
pusha
jge
cmp
dec
lods
jl
adc
sub
cli
inc
push
mov
mov
mov
dec
idivl
dec
lea
fcoml
std
aad
pop
int
cmc
aad
das
pop
aad
mov
mov
fimuls
icebp
inc
stos
mov
fmul
jne
ja
jp
push
jl
js
cmp
popa
mov
clc
addb
cmp
fdivrs
cmp
pop
mov
sub
fsub
push
push
dec
insl
int
xchg
sub
push
jb
mov
inc
bound
mov
mov
cmpsl
fwait
mov
mov
inc
outsl
adc
cs
cs
je
stos
scas
test
add
orl
mov
adc
lock
pop
cwtl
and
jmp
clc
push
pusha
ljmp
add
mov
js
sbb
xchg
mov
arpl
add
push
mov
jae
jbe
pop
and
xchg
push
dec
ds
push
sub
pop
pop
test
lds
dec
mov
lea
adc
add
cmpsb
dec
adc
arpl
aaa
into
lods
add
sub
xor
pop
push
ds
loop
loopne
das
add
push
aaa
pop
sbbb
inc
ja
mov
popf
mov
andb
mov
fldl
inc
ret
das
outsb
es
add
jbe
mov
notb
lahf
test
movsb
mov
dec
mov
addr16
shl
shlb
sbb
or
add
lret
fldenv
push
popl
push
sub
loopne
rcll
ret
bound
fsubrs
js
movsb
into
loop
mov
ret
jp
jo
loope
push
add
mov
negb
mov
clc
xor
adc
and
push
cmp
mov
ficomps
je
push
mov
xlat
mov
int
and
fsubl
imul
leave
lods
jmp
cs
test
mov
pop
sub
dec
push
fisubrs
xor
out
cmc
push
mov
sahf
aaa
jnp
mov
mov
xchg
add
or
sarl
jle
js
mov
add
jae
sahf
cmp
test
fistps
in
sub
fwait
sub
mov
mov
dec
or
mov
aad
or
imull
mov
xchg
dec
popa
enter
push
and
lret
or
add
enter
outsl
cmp
push
jge
daa
mov
cmp
push
sbbb
adc
inc
stos
jmp
cmpsl
cmovo
xor
dec
mov
push
jo
andl
daa
and
scas
xor
sbb
inc
in
pop
push
arpl
rorl
cwtl
mov
push
push
mov
jmp
out
iret
jno
add
sub
mov
out
cmpl
cwtl
popf
mov
sarb
dec
loop
testl
outsl
jo
mov
jns
rol
lods
icebp
jns
sahf
cs
xor
iret
dec
lea
lcall
cwtl
js
pop
stos
mov
push
into
inc
mov
icebp
stos
insb
adc
push
xlat
cwtl
pop
cwtl
das
mov
mov
pop
cmp
loop
pop
cmp
push
dec
sarl
xchg
sub
aas
sbb
mov
and
js
or
adc
dec
cmp
int
sbb
ljmp
rcll
cmpsl
or
lds
ret
pop
incl
jnp
pop
or
movsl
adc
adc
sbb
popa
mov
sbb
cwtl
or
inc
aaa
push
mov
es
mov
cmp
lods
addl
je
push
dec
push
hlt
mov
xor
out
or
mov
push
jmp
cli
leave
mov
sti
sbb
call
sub
jne
jns
mov
or
push
ret
insl
pusha
jp
push
decb
mov
dec
ja
fwait
sub
test
cmpsb
lret
mov
outsb
mov
imul
nop
xchg
xchg
sub
call
leave
mov
dec
mov
ss
aas
cmc
out
or
lahf
inc
push
ljmp
imul
jnp
push
push
mov
push
imul
or
popf
mov
mov
inc
movsl
cwtl
icebp
push
dec
pushf
adc
add
mov
fldenv
or
test
xchg
xor
inc
jl
ja
stos
inc
sub
mov
pop
inc
adc
insl
inc
lea
stc
jmp
mov
dec
mov
loope
inc
loope
mov
jne
xchg
ret
popf
xor
mov
mov
jge
daa
divb
fistpll
pushw
xor
test
push
mov
pusha
mov
sbb
pop
mov
sub
adc
inc
sbb
add
pop
push
loope
add
lock
push
jmp
adc
arpl
jb
popf
fbld
ret
movb
aam
pop
iret
cmp
lret
sub
in
adc
in
mov
ss
loop
mov
mov
lahf
dec
dec
xchg
add
fwait
arpl
sub
insb
test
or
xor
cmp
mov
xor
aad
stc
xchg
lret
xchg
call
test
movsb
loopne
mov
adc
push
mov
int
or
lret
jp
leave
inc
cmp
fcmove
pop
fidivrs
xchg
xchg
pop
mov
scas
push
mov
bound
test
mov
mov
dec
stos
inc
push
xchg
lret
bound
push
std
enter
or
es
sbb
mov
mov
push
insb
fldt
push
or
mov
loopne
and
jns
ja
data16
xchg
out
xchg
add
jo
fisttpl
lea
mov
out
dec
push
out
repnz
add
out
aaa
dec
sbb
mov
outsb
sbb
les
fidivl
repnz
pusha
mov
or
jmp
add
mov
popf
nop
inc
inc
repz
xor
jmp
mov
mov
jae
inc
mov
jne
push
loopne
insl
shrb
sub
jae
icebp
mov
mov
outsb
daa
xchg
or
mov
insb
jge
fistps
or
jle
hlt
test
in
rol
adc
lcall
ljmp
jb
push
dec
dec
fnsave
test
fstps
loopne
dec
cli
jb
and
xorl
lahf
inc
sbb
lds
xor
dec
movsl
pop
cwtl
notb
fbld
push
mov
xchg
xor
in
adc
pop
addr16
dec
mov
xor
sub
adc
mov
add
xor
int
jl
out
fistps
mov
push
cmpsb
test
or
js
xchg
sub
mov
mov
mov
inc
faddl
jle
cwtl
out
arpl
cmc
icebp
add
push
adc
sbb
negl
repnz
push
cmp
imul
lcall
pop
sbb
fsubrl
icebp
adc
mov
or
push
mov
mov
inc
fsubl
mov
cltd
or
pusha
xor
jl
or
mov
or
cmp
aam
shlb
int3
int3
adc
into
pop
push
pop
mov
xor
shlb
xorl
mov
inc
mov
or
cmp
mov
stos
incl
inc
iret
push
jge
jmp
imul
popa
aas
mov
mov
rcll
mov
jb
inc
fidivl
repnz
xchg
popa
cld
dec
jecxz
jo
outsl
je
movsl
ret
jp
push
divb
fiaddl
fisubrs
dec
lock
add
mov
push
xor
jae
cltd
outsb
test
stc
or
fwait
popl
vpmullw
mov
jmp
ret
sub
pop
mov
jb
and
or
mov
into
aam
fiaddl
insb
fcom
ficomps
cmp
or
pop
negb
out
cld
lods
inc
jge
jae
add
pop
mov
add
sub
xor
lret
mov
cld
xchg
rcll
and
es
add
enter
xchg
dec
push
mov
sahf
cmp
cmpsl
pop
inc
and
xchg
mov
push
in
adc
fsubrl
repz
jp
cli
test
mov
in
cli
fiadds
inc
mov
xor
jo
or
push
cmp
pop
arpl
cmpsb
cmp
and
push
and
aas
daa
adc
out
negl
mov
xchg
fnstcw
clc
mov
fdiv
or
fdivrl
stc
sub
mov
outsb
add
js
imul
std
or
shr
push
push
add
xor
pop
or
into
imul
or
cmp
pop
imul
in
subl
push
or
mov
cmova
inc
addr16
rcr
push
push
mov
sub
aam
lds
jb
fisubs
push
fstpl
sub
push
lods
jecxz
mov
scas
fisubrl
add
stc
dec
and
and
sub
mov
scas
inc
lahf
add
or
and
xchg
mov
dec
sbb
or
fs
xchg
and
adc
orl
xor
add
push
pop
jbe
mov
std
sar
fistpl
push
sub
cmpsl
aam
mov
mov
dec
add
add
lds
aaa
push
push
les
shll
xor
pop
xchg
pop
or
lcall
jp
shlb
sbb
loopne
sub
shl
push
loop
test
rcr
loopne
sbb
mov
xchg
and
add
jae
dec
pop
push
xchg
fstpt
dec
xor
cmp
mov
aad
addr16
movsb
mov
cs
pop
aam
stos
add
pop
cmp
insb
movsb
adc
test
lahf
test
lahf
and
es
push
sbb
xchg
pop
lods
and
cmp
pop
imul
insb
sti
jle
add
xor
mull
dec
jecxz
sarb
mov
push
jo
cmpsb
fs
inc
sti
rcrb
imul
loopne
test
mov
repnz
inc
ljmp
adc
ja
xchg
mov
shll
clc
pop
stos
or
lods
scas
fwait
sti
pop
pop
lret
jbe
cmc
mov
cmp
dec
jge
cwtl
stos
cmpsl
dec
dec
div
shrb
mov
test
xlat
lret
hlt
mov
sbb
inc
es
sbb
orl
inc
sub
mov
pop
hlt
jecxz,pt
xor
fidivrs
cmc
fdivrl
sbbb
cmp
fs
inc
insl
jne
and
push
or
dec
adc
mov
sbb
ss
cmp
jle
sbb
mov
inc
push
loopne
or
sar
add
inc
orb
xchg
mov
and
sbb
mov
leave
cmc
mov
mov
jl
insl
jecxz
xchg
loop
push
xchg
mov
iret
call
adc
lock
mov
leave
push
icebp
sbb
push
xor
xlat
inc
imul
iret
mov
mov
imul
lret
lret
cmp
iret
fisubl
mov
xchg
fiaddl
jle
aam
push
stos
mov
into
out
in
sti
scas
dec
popf
imul
mov
xchg
mov
fiaddl
or
push
bound
call
xchg
and
cwtl
jle
pop
sub
dec
loopne
cmpsb
pop
imul
out
arpl
sbb
cmc
xchg
rcl
fdivrl
mov
bswap
mov
push
pop
cmp
inc
add
icebp
mov
out
das
push
ss
push
cltd
repnz
clc
xchg
lea
adc
lret
jne
fnstenv
test
xchg
fcomps
cmpsb
fdivs
ss
into
sub
mov
addr16
pop
movsb
cmp
lods
ret
out
sub
dec
ds
test
sbb
jne
xchg
stos
mov
arpl
pop
jb
lea
mov
int3
mov
mov
in
test
shlb
daa
ucomiss
pop
notl
cmpsl
js
stos
test
and
nop
mov
jo
addr16
xor
lea
jb
sti
lods
inc
and
push
movsb
jns
push
and
fsubl
lahf
fwait
jmp
dec
fisubrs
cmp
mov
xchg
fsubrl
icebp
pop
lock
push
pop
pop
xor
cmp
movsl
cmp
mov
in
jne
in
push
ss
push
or
sbb
jl
rcrl
xchg
mov
cmpsb
cld
daa
cltd
jbe
inc
fdivrs
hlt
cmc
inc
loope
lds
ss
aad
cld
hlt
inc
test
cs
inc
leave
dec
dec
push
pop
cltd
std
fcom
push
filds
mov
add
xor
mov
mov
and
sti
mov
int3
mov
ja
inc
pop
and
xchg
mov
cmpl
push
sbb
call
outsb
in
lods
test
cmpsl
dec
imul
jp
arpl
dec
mov
xor
adc
out
push
cld
nop
into
lea
test
adc
or
mov
movsl
in
hlt
psrlq
hlt
mov
adc
xchg
enter
mov
mov
mov
or
jae
fdiv
sub
add
outsb
fsubrl
xor
aad
cmc
mov
ja
sbb
xchg
pop
movsb
xor
mov
add
inc
fwait
xor
loope
xchg
xchg
out
mov
xchg
mov
or
dec
sbb
or
jbe
lret
cs
jle
xchg
or
mov
mov
push
ficompl
xor
lods
xor
push
xor
inc
lods
xchg
mov
xor
jmp
jae
test
inc
cwtl
mov
movsl
xchg
inc
pop
scas
cli
dec
adc
dec
mov
sub
or
xchg
inc
mov
out
mov
inc
mov
jecxz
and
call
idivb
pop
cmp
mov
imul
fnstenv
push
mov
xor
std
add
setle
push
add
or
and
inc
ficoms
mov
cmp
xor
rcrb
inc
fnsave
pop
xor
test
shl
xor
cmp
das
rolb
jae
mov
loope
mov
mov
xchg
test
loope
xchg
in
shll
jmp
jecxz
pop
mov
or
push
xor
pop
mov
add
fstpt
dec
out
push
rolb
add
pop
xchg
dec
dec
cltd
lods
add
daa
jmp
add
push
pop
aaa
into
ss
xchg
sub
xor
lcall
ret
adc
adc
sbb
add
repz
mov
sahf
jmp
pop
aas
lods
mov
sbb
jp
adc
aaa
mov
test
je
jne
in
xor
xchg
add
mov
hlt
mov
aas
dec
or
add
fiaddl
fdivl
rcll
idiv
aaa
push
xor
notb
jge
jg
imul
mov
push
pop
cmc
mov
xchg
arpl
cmpb
sbb
xchg
mov
dec
or
pop
divps
mov
in
lcall
aad
push
addr16
imul
out
jnp
cld
cltd
ds
jb
xchg
loop
mov
mov
popa
orl
xor
inc
pop
cwtl
add
ja
add
mov
add
pop
mov
xchg
and
jg
out
mov
adc
sahf
mov
testb
out
loop
sbb
or
lret
mov
stos
imull
cmp
mov
mov
hlt
icebp
dec
pop
push
sub
shl
jnp
inc
outsb
dec
pusha
idivl
lret
adc
pop
push
mov
call
decb
shll
lock
pop
fisubrs
add
pop
xor
jae
cmpsl
sub
push
outsb
sbb
lcall
lock
adc
xlat
dec
in
inc
adc
subb
ret
mov
cmp
mov
cmp
gs
jne
push
mov
scas
das
roll
jb
pop
xchg
in
ficomps
jecxz
mov
out
nop
mov
mov
cltd
testb
ficoml
inc
repz
and
fcoms
dec
aas
stc
loop
aam
dec
xchg
sbb
roll
inc
xor
rcll
xchg
dec
and
js
out
mov
inc
test
insl
les
ret
mov
dec
loop
ljmp
loop
or
mov
idivl
push
daa
lcall
cwtl
das
insb
xor
fucomip
lods
subl
jle
cmpsl
inc
ret
int3
xlat
cmp
cltd
mov
push
cmpb
pop
jb
sarl
inc
fisubrl
sbbb
pop
xchg
xlat
push
jecxz
inc
xlat
cli
mov
leave
push
and
inc
loopne
inc
push
sub
mov
dec
sbb
xchg
dec
cmp
xchg
inc
sub
jle
push
xor
test
mov
clc
rolb
in
ficoms
call
das
cmp
cmp
loop
negl
add
xor
pop
mov
dec
cltd
in
aad
xchg
in
pop
sub
nop
pop
pop
stc
push
lahf
push
cmp
inc
fdivrp
mov
xor
into
fdivrl
jns
jge
mov
stos
jne
sub
or
fxch
mov
add
aam
and
inc
gs
dec
or
mov
mov
es
jecxz
into
loope
jle
sub
lahf
and
inc
es
movsl
cmp
jp
pop
xor
ret
add
pop
in
lea
daa
fwait
scas
dec
jecxz
add
iret
jg
jecxz
icebp
pop
xor
jp
push
lods
inc
mov
push
repz
icebp
push
inc
lods
into
dec
add
movsl
mov
subb
dec
scas
pop
insb
stc
dec
mov
mov
iret
les
in
add
inc
xlat
imull
push
mov
jne
sbbl
lahf
dec
out
fcompl
sbb
push
test
or
jno
ret
mov
ss
xor
std
enter
imul
repnz
pop
cmp
and
dec
push
imul
sbb
xchg
cmp
pushf
sub
rcrb
inc
repz
aam
les
cmp
pushf
repz
mov
shrb
xchg
sub
mov
nop
out
pop
into
xchg
sub
cmp
xchg
and
sbb
or
jg
imul
enter
and
movsl
sbb
push
add
arpl
loope
ss
mov
lret
mov
mov
ret
adc
mov
shrb
sbb
fidivrl
xlat
popa
addl
dec
scas
add
cmpsb
call
fidivl
cmp
lods
xchg
dec
fwait
imul
pop
scas
mov
jno
inc
fcmovnb
addb
rcll
and
fldcw
mov
dec
cmpsb
out
mov
shrl
out
out
lods
inc
and
xchg
jmp
xchg
push
mov
bound
cld
sbb
ja
lcall
popf
lret
inc
or
hlt
dec
loop
xchg
test
icebp
jo
adc
jae
push
xchg
xchg
incb
data16
push
shrb
iret
lcall
loop
xchg
inc
adc
cs
xor
jl
or
ret
sti
xchg
insb
lahf
dec
stos
dec
xchg
insl
cld
test
int3
sbb
into
sbb
es
repz
jp
jns
es
shlb
pushf
push
xor
js
mov
arpl
mov
cmp
dec
imull
cmp
and
stos
sub
scas
scas
sub
ror
bound
mov
fists
inc
jecxz
setle
inc
sbb
xor
jns
mov
jnp
test
inc
mov
lea
push
sub
scas
xchg
ds
movsl
push
cmp
lock
sbb
out
xchg
loope
or
adc
xchg
and
stc
sarl
jge
or
mov
ret
aad
scas
mov
sbb
mov
xchg
cwtl
ljmp
repnz
mov
sub
loope
decl
insl
jg
das
mov
mov
jns
pop
jle
add
das
cmp
adc
movsb
push
lcall
and
dec
stc
nop
addl
jb
ret
lret
sbb
mov
and
jnp
in
push
stos
mov
data16
or
jnp
hlt
mov
cs
inc
negl
jecxz
and
daa
shrb
add
add
outsb
push
and
mov
icebp
inc
je
mov
imul
cmc
adc
ret
xchg
mov
dec
pop
push
mov
pop
gs
movsb
jnp
xorl
loope
aam
les
push
test
sub
movl
loop
lcall
daa
jle
in
push
jmp
push
clc
dec
adc
jb
imul
jl
jecxz
adc
dec
in
mov
xchg
shrl
mov
inc
push
sub
push
inc
dec
mov
jno
push
insl
pop
addr16
or
rcrl
test
jmp
xor
xor
pusha
das
adc
pop
insb
adc
call
mov
jbe
push
inc
inc
push
push
fnstcw
pop
cmc
push
cld
insl
add
jl
popa
mov
sti
js
mov
and
pop
xchg
mov
sarb
mov
xchg
add
and
notb
stos
mov
loop
push
fwait
mov
mov
loop
int
leave
mov
in
adc
push
repnz
xorl
cmp
sbb
in
xchg
ret
in
popf
dec
push
test
pop
inc
daa
mov
clc
and
xchg
xor
inc
lahf
outsl
cli
push
mov
dec
xchg
xchg
mov
inc
lret
lret
inc
in
call
imul
xchg
int3
arpl
add
clc
call
sbb
xor
ret
mov
ret
repz
jmp
hlt
push
addl
cmpsl
mov
outsb
jle
rclb
mov
inc
xor
popa
xchg
mov
push
mov
cltd
leave
and
dec
arpl
lock
mov
std
mov
add
das
xchg
xchg
jl
dec
cmpsl
cmp
jecxz
sub
sahf
add
rol
push
stos
jp
cld
lahf
cmp
lcall
sbb
notl
orl
xor
mov
jp
jl
push
in
popf
cwtl
das
iret
call
pop
ret
mov
out
xchg
inc
cmp
in
jg
and
mov
add
test
inc
nop
jb
lcall
ja
inc
stc
mov
mov
aas
jnp
xchg
stos
adcl
push
jmp
sub
jmp
lret
fistpll
fld
jl
mov
ja
mov
ljmp
divb
push
inc
and
popa
loopne
and
adcl
repz
cs
mov
jb
cmp
mov
or
pop
jae
dec
sub
pusha
jp
push
cmp
push
or
shlb
adc
mov
push
inc
inc
jecxz
add
pop
test
pop
lahf
imul
mov
fdivs
sub
mov
and
repz
pop
adc
pop
push
popf
dec
test
jle
mov
bound
mov
add
cmpsb
rcpps
cmpsb
test
sub
pop
fcos
or
sbb
in
add
mov
mov
adc
jno
cs
mov
inc
jno
xor
clc
pop
cmp
lret
popw
dec
fwait
in
adcb
ds
test
xchg
lods
clc
lret
mov
mov
ret
xor
jae
popa
aad
ror
mov
sub
mov
jb
leave
rolb
cld
jg
push
cwtl
jbe
pop
pop
sbb
icebp
sahf
andb
sub
jbe
mov
shrb
push
mov
inc
fidivs
ja
cmp
adc
inc
test
jbe
loop
or
add
int3
aaa
mov
fildl
lock
aas
mov
or
jne
mov
mov
addr16
push
sub
pop
jae
idivb
jle
lret
adc
jb
jl
in
les
js
push
insl
inc
addr16
sbb
add
cmpsb
popa
rorb
cmpl
sbb
cmp
div
mov
jbe
sbb
loopne
mov
dec
jo
cs
inc
and
lcall
shlb
negl
ljmp
icebp
mov
pop
cld
lahf
inc
mov
fwait
pusha
xchg
mov
mov
inc
in
pop
cmp
addr16
int3
rcrb
cmp
mov
sub
lahf
push
insb
cmc
add
pop
mov
jnp
fdivl
leave
int3
scas
inc
in
movsb
enter
jbe
insl
add
jmp
fs
pop
push
and
and
mov
test
inc
or
push
hlt
xor
dec
out
fdivrs
dec
push
mov
sub
inc
loopne
mov
mov
inc
adcb
ret
ss
or
mov
or
xrelease
je
jg
xchg
scas
pop
jle
push
dec
cmp
inc
mov
cltd
imul
cmp
outsl
jne
bound
lods
sbb
mov
sbb
ss
jmp
adc
or
sbb
or
jg
outsl
sbb
fdivs
lahf
test
push
mov
pushf
push
mov
repnz
mov
mov
aas
sarl
or
add
das
aam
test
in
inc
stc
je
int3
fcoml
aas
fs
add
dec
pop
loopne
test
mov
mov
xchg
mov
xchg
fidivl
test
inc
dec
daa
xor
and
notb
roll
jns
and
push
faddl
imul
sbbb
testl
fists
xchg
xchg
out
or
idivl
popf
mov
jl
pushf
or
lods
push
jb
sbb
popf
ljmp
rcrb
sti
sbb
sub
call
mov
stc
or
test
xchg
jge
addl
xlat
or
cmpsl
popf
outsl
pusha
mov
inc
sbb
dec
xchg
jle
jp
xchg
into
in
mov
mov
cmp
jge
sbb
mov
inc
dec
inc
lods
repz
insl
or
adc
pop
sahf
icebp
xor
inc
xor
lret
inc
xchg
lds
std
xchg
rcr
sub
pushf
std
aam
xor
adc
sub
xchg
ret
movsl
mov
hlt
pop
xchg
sub
adc
mov
pop
jge
mov
daa
fsubp
add
cmp
mov
ret
outsl
jmp
mov
sub
adc
stos
repnz
sub
lahf
dec
shl
jp
out
pop
cmp
test
xchg
cli
push
ret
push
cmpsb
jnp
fs
adc
and
lahf
jg
shrb
dec
mov
cld
test
push
cwtl
lea
movsb
cmp
cmp
int3
inc
out
adc
and
and
pusha
push
mov
leave
pop
cmp
cwtl
jo
push
jecxz
test
adc
cmp
push
jns
jo
mov
mov
jb
or
or
mov
daa
xchg
pop
js
xchg
rcll
or
adcl
xchg
call
adc
dec
and
lds
aas
aad
ret
mov
sbb
sbb
popa
test
nop
stos
test
and
or
sbb
jmp
adc
lds
sbbl
add
movsl
cmp
daa
xor
aad
or
adc
or
inc
out
shrl
or
or
mov
cwtl
popa
idivb
mov
or
and
push
loopne
dec
mov
mov
pop
lods
mov
out
iret
fbld
cmp
xor
add
push
mov
in
insb
ror
loope
mov
push
dec
mov
inc
pusha
xchg
jno
mov
out
scas
pop
jecxz
iret
iret
jbe
add
testb
jb
adc
clc
lcall
dec
or
lods
std
scas
xlat
cmc
jg
scas
xchg
mov
cmc
inc
test
inc
add
aaa
aam
sub
mov
inc
xor
jmp
jle
add
cmp
shlb
faddp
and
cmpsb
jo
push
mov
xor
out
cmp
mov
sub
sub
or
in
shrw
insb
insb
sbb
inc
fxch
out
fs
pusha
andb
xchg
dec
or
lock
movsb
inc
mov
mov
mov
test
xchg
dec
loopne
pop
mov
fdivp
lods
out
inc
ret
dec
inc
scas
fbstp
movsl
push
jmp
test
jo
in
in
imul
arpl
xlat
out
int3
jbe
lods
add
or
cld
jb
fwait
daa
adc
and
ljmp
or
jnp
fucom
xlat
dec
pushf
sub
sbbl
testb
mov
loop
iret
arpl
stc
or
add
aad
call
aam
lds
std
sarl
sbb
jne
outsl
mov
cmpsl
adc
sub
cmp
pop
popa
mov
adc
inc
cmp
xor
sub
xchg
jae
cvttps2pi
jle
mov
xorl
mov
adcl
jmp
aas
add
iret
and
nop
cmc
enter
popf
call
dec
movsl
xor
arpl
dec
cli
sub
ljmp
and
sbb
orb
dec
in
lods
pushf
sbb
mov
ret
cmp
mov
mov
popf
sub
mov
sub
aad
pop
out
testl
add
sub
test
lret
push
aad
cmp
xor
add
mov
mov
inc
pop
cmpl
or
in
dec
loopne
shlb
xchg
cmp
sbb
or
sbb
jmp
mov
inc
lret
ljmp
xchg
lcall
add
movsl
xchg
aad
ret
xchg
shrb
iretw
lock
sbb
addl
out
pop
jno
sbb
bnd
fdivrl
loope
jle
cmpsb
fimuls
cs
je
cmp
ret
fisubs
enter
leave
fldcw
xor
dec
pop
inc
movsl
add
enter
hlt
mov
dec
and
jp
adc
add
push
subl
xor
xor
dec
and
lret
and
cmc
ret
repnz
idivl
push
push
pop
out
ficoml
fadds
addr16
fisttps
les
jne
lahf
mov
andl
clc
arpl
fldt
outsl
mov
shl
push
out
push
mov
or
sbb
mov
fsubr
mov
jecxz
popf
sub
cmc
jge
ljmp
ss
push
pop
adc
add
mov
xor
into
addr16
pop
sbbb
adc
into
inc
adc
pusha
mov
lret
adc
imul
pop
sbb
xchg
sbb
fidivrs
insl
mov
mov
mov
add
jno
xor
push
roll
xchg
ljmp
into
rcrb
rclb
adc
sbb
les
js
lods
out
aam
out
dec
dec
push
mov
mov
pop
hlt
rcr
mov
or
jnp
push
mov
pop
mov
pop
push
scas
adcl
push
pop
pop
mov
fistpll
add
xchg
in
pushf
push
sub
movsl
pop
lret
mov
mov
inc
xchg
sbb
or
lods
int
aad
xchg
inc
jmp
popf
ret
and
inc
movsb
scas
icebp
stos
xor
mull
ficoms
cmp
cmp
movl
shrl
arpl
fidivrl
lock
xchg
int3
dec
dec
sub
in
aas
adc
mov
jo
xchg
xchg
enter
xchg
push
bound
call
or
dec
xor
cltd
cmp
shrb
xorb
pop
nop
rcll
xchg
sub
rcrl
dec
push
pop
enter
cmp
ljmp
ss
push
mov
adc
or
mov
std
cmp
jge
lahf
cmpsb
lods
dec
fwait
add
int
xor
dec
push
push
inc
loop
add
mov
addr16
mov
inc
fdivs
push
xchg
out
cmp
pop
inc
fadds
mov
push
sub
pop
push
add
insl
andb
popa
mov
sbb
jg
jle
pop
outsl
push
es
push
pop
mov
repz
xchg
and
xor
xchg
adc
mov
fildl
arpl
out
movsl
xchg
jmp
sbb
ret
mov
inc
arpl
shrb
insl
dec
or
jg
add
push
mov
out
and
xchg
int3
xorl
or
mov
sbbb
nop
mov
les
ljmp
shrb
lods
pop
sbb
in
ret
subb
add
sbb
xchg
sub
movsl
mov
into
scas
and
push
mov
push
cli
jns
mov
dec
bound
jle
push
je
dec
sbb
idivb
insl
in
das
stos
dec
out
mov
insl
cld
push
xor
scas
dec
repz
jp
mov
test
sub
repz
sbb
inc
jp
out
xor
aas
rcrb
testb
adcl
decl
jb
push
insb
out
xor
xchg
jp
push
test
int
ljmp
out
and
sbb
int
xchg
or
pop
inc
mov
addb
cmc
mov
jge
jbe
cmp
mov
xchg
out
stc
jo
fcom
jne
std
test
lahf
fsts
jp
xchg
sub
stos
adc
cli
xor
pop
mov
pop
xor
mov
ja
mov
xchg
xor
movsb
ret
lahf
shl
lret
dec
mov
jae
insl
sbbl
dec
mov
mov
movsl
fcmovu
repnz
shrl
es
sub
xor
xorl
mov
push
sbb
push
mov
dec
pop
sub
jp
jbe
fldt
js
xor
shll
ret
xchg
mov
leave
dec
and
jbe
sbb
sbb
insl
sub
dec
inc
insl
insb
pop
hlt
xchg
shlb
jp
xchg
mov
lret
sbb
lahf
ss
stc
sbb
out
mov
test
mov
push
or
push
and
ret
mov
cmpsl
ds
pop
cmpsl
ds
lock
out
adc
push
xchg
pop
cmc
add
scas
sub
hlt
sbb
stc
nop
sub
in
mov
dec
sbbl
arpl
or
adcb
scas
mov
push
pop
lock
lret
xchg
in
js
dec
subl
andl
loope
out
pop
or
sahf
cmc
cmc
xor
sbb
pop
mov
mov
cmc
ret
pusha
mov
xchg
push
dec
pop
mov
mov
rclb
sub
repz
inc
xlat
dec
adcl
int3
roll
lods
aas
pop
jne
lds
xchg
fisubrs
and
sub
rcll
dec
ret
sbb
adc
mov
sti
pop
mov
add
sub
sbb
pop
stc
es
imul
mov
lds
inc
lock
mov
gs
sub
push
add
or
mov
out
bnd
into
fs
inc
push
aaa
or
lret
out
push
bound
cmp
mov
xchg
cs
dec
mov
inc
xchg
popa
add
or
sub
cmpsb
lods
clc
fwait
call
mov
neg
mov
cmp
jns
call
sub
xor
push
dec
pop
outsb
out
jle
jg
stos
push
push
fucom
dec
test
gs
sbb
ss
out
cmp
orl
or
popl
arpl
dec
push
cmp
jmp
movsl
repnz
pop
inc
sbb
mov
das
adc
inc
dec
addl
int3
rorb
mov
mov
and
and
cld
adc
fsubrs
xor
mov
push
xor
pop
inc
fs
mov
jmp
inc
inc
fdivrs
jb
shr
mov
push
jp
js
lret
sbb
pop
cld
dec
pop
push
sub
hlt
cltd
test
lretw
call
rclb
lret
push
repnz
adc
in
test
adcl
adc
and
mov
jmp
or
imul
mov
xchg
adc
or
mov
nop
add
pop
cmpsb
sti
sub
and
inc
push
mov
cmpsl
repnz
dec
pop
aaa
lods
mov
dec
pop
in
decl
cwtl
xchg
xor
enter
jle
ds
push
mov
xchg
mov
dec
sbb
enter
push
inc
xor
pop
jae
out
inc
and
repz
mov
adc
inc
sbb
sub
testb
mov
shrl
mov
pushf
sub
mov
or
scas
psubsw
ret
adc
pop
das
sub
addr16
nop
and
sub
pop
test
xchg
push
xchg
imul
inc
outsl
repz
insb
xor
imul
shlb
cmp
inc
insb
outsb
lods
add
fwait
sti
rol
lret
push
jnp
cmp
adc
xchg
adc
fxch
icebp
cwtl
pop
sub
mov
stc
cld
sub
stos
pusha
sub
push
repnz
cmp
dec
sub
push
sub
subb
and
mov
gs
add
inc
js
jne
stc
sub
inc
xchg
roll
loop
lahf
pushf
push
xchg
jle
cmp
out
sbb
inc
push
jl
push
out
fstps
in
jp
rorl
mov
or
je
sbb
icebp
sub
frstor
jmp
mov
mov
or
in
stos
xor
cmp
cld
cld
cmpsb
test
add
std
adc
mov
jne
dec
pushf
xlat
pop
and
mov
jnp
int3
pop
gs
xchg
add
cmpsl
int3
xor
cmc
sbb
fdivl
lcall
push
popf
and
sbbl
jae
mov
inc
vmptrld
mov
pop
lret
loop
movsb
rolb
fs
sahf
lahf
f2xm1
ret
push
popf
push
xchg
xorl
ficoms
mov
mov
test
loope
jb
dec
aaa
insl
movsl
xor
fwait
dec
gs
dec
add
jmp
push
clc
or
mov
mov
jl
jl
push
inc
mov
dec
sarl
jecxz
shrl
xor
jg
push
lret
lret
fcmovne
rorl
push
dec
mov
lock
loop
test
dec
aas
fiadds
xor
and
stos
outsl
push
repz
inc
cmc
and
pop
movsb
sbb
pop
hlt
fldt
lea
and
jae
pop
add
jg
in
js
sbb
js
sbb
mov
sub
pop
hlt
dec
int3
mov
xlat
test
adc
stc
add
mov
xchg
jne
jnp
shrb
sbb
cwtl
jg
ret
lods
mov
dec
fistl
or
or
sbb
push
or
testb
scas
xor
cmp
cld
inc
dec
mov
jle
imul
insb
add
mov
scas
shlb
fmull
adc
cmc
lahf
push
xchg
loopne
mov
pop
aam
jnp
test
and
jp
pop
mov
je
mov
orl
adc
cmp
sbbl
and
mov
add
mov
mov
fwait
add
mov
cmp
adc
shlb
add
sub
cwtl
mov
adcb
shll
add
test
inc
and
outsl
pushf
arpl
std
push
mov
jno
adc
add
sbb
xor
lea
aaa
xor
arpl
cs
push
push
jmp
pop
arpl
sbb
jb
sahf
mov
arpl
fbld
inc
push
cmova
in
pop
popf
lcall
clc
or
rorb
fidivl
cmp
push
insl
aas
call
frstor
jo
inc
and
push
adc
call
sub
hlt
mov
sub
or
leave
outsb
add
mov
or
adc
and
clc
lea
incb
xor
icebp
push
sub
pop
cmp
jmp
xchg
out
mov
mov
dec
movsb
mov
jb
loop
sbbl
fdivl
roll
pop
out
xor
addr16
pop
cld
in
mov
pop
lea
pop
mov
push
xchg
cmp
inc
shll
hlt
jae
testb
xor
lods
call
aad
lods
test
ds
aad
roll
mov
dec
fs
mov
shll
in
mov
lock
das
mov
mov
pop
call
mov
ds
imul
jbe,pn
cld
lock
mov
jnp
cld
mov
xchg
mov
jno
addr16
arpl
ljmp
les
xchg
jg
adc
push
mov
insb
push
and
in
das
test
cli
test
out
inc
ret
mov
mov
in
dec
push
jne
not
sub
push
addr16
push
inc
push
sbb
add
dec
gs
aaa
xor
sub
push
aas
push
shll
cs
das
cmp
inc
inc
cmp
repnz
cmp
sbbl
ds
mov
aam
adc
sub
aad
push
add
inc
popa
cwtl
sbb
inc
mov
call
ds
cmpsb
mov
ss
fisubrs
jmp
sbb
les
cmp
aam
mov
lcall
ds
mov
xor
cmp
loopne
jle
aad
jp
mov
sahf
in
inc
fwait
inc
cmp
call
or
adc
xor
mov
add
sbb
pop
jo
or
out
sbb
lea
clc
clc
sahf
xor
mov
fwait
pop
imul
mov
lcall
stos
outsb
test
or
and
test
and
inc
adc
out
cwtl
iret
xchg
jne
int3
fcoml
inc
sub
inc
repz
push
pop
mov
push
sub
and
pop
pop
dec
mov
and
xor
cmc
lods
orl
mov
jle
mov
adc
lods
in
mov
mov
enter
sub
dec
mov
icebp
add
mov
xchg
sub
ss
sub
xor
ret
int3
xchg
mov
sub
sbb
and
testb
mov
and
shlb
jbe
insl
cmpsb
sub
mov
fs
or
xor
mov
sub
cmp
pusha
les
cmpsl
mov
xor
xchg
push
shr
lods
sbb
adc
orl
push
add
adc
scas
cld
mov
ret
dec
leave
mov
sub
jecxz
and
les
xchg
xchg
add
jl
xchg
call
stos
test
pop
les
movsl
push
push
les
loop
fldl2t
mov
pop
mov
cmpsb
cs
sub
lcall
adc
enter
loope
sbb
shll
push
cli
nop
sbb
rcr
sbb
sbb
adc
fldcw
jge
xchg
imul
sbb
roll
aaa
mov
adc
xor
testl
fscale
and
pop
lea
pop
aaa
jmp
movsb
xor
ds
push
addr16
in
fistps
cmpsl
repnz
cmp
in
mov
jle
and
and
lods
out
mov
sbb
or
xor
fnstcw
dec
out
cmp
popa
jnp
test
test
mov
loop
xor
sub
cmp
xor
out
popf
je
xchg
imul
das
add
mov
in
ja
push
sbb
ret
lahf
das
nop
mov
cli
iret
fcmovnu
adc
pushf
out
pop
pusha
js
shll
sub
aas
push
mov
sbb
dec
inc
lds
xchg
inc
jg
adc
cli
push
cs
mov
cld
stos
and
xchg
add
stc
out
pushf
cs
or
sub
jle
xchg
or
fidivrs
ret
xor
xchg
iret
and
aaa
or
mov
pop
addl
push
je
decb
push
cld
pop
xchg
jns
sbb
jp
insb
pop
subl
sub
mov
pop
test
mov
jmp
aas
in
cmp
adc
lcall
xchg
and
sbb
out
insl
jg
dec
mov
or
xlat
xor
mov
pop
mov
sbb
cld
cmp
or
pop
cs
les
jns
cmp
cvttps2pi
test
int3
fucomp
repnz
or
push
sbb
sub
jae
xor
loop
cld
pop
sbb
inc
mov
and
add
push
mov
scas
sahf
mov
adc
loopne
gs
sub
out
iret
cmp
loop
inc
adc
out
jnp
aam
inc
out
sbb
not
ds
mov
mov
or
movsl
mov
lret
test
cld
xchg
cltd
mov
pop
insl
push
icebp
adc
cmp
add
ret
fsubr
hlt
mov
das
sub
arpl
insl
orb
sbb
lret
jg
insb
add
and
stos
fsubrl
stos
inc
out
sub
xchg
leave
pusha
cmp
out
stos
jp
lahf
sub
data16
and
nop
das
sub
mov
push
xor
int
mov
out
jle
add
outsb
jp
xchg
jmp
xchg
ret
ffreep
sbb
call
call
sbb
cmp
adc
fs
sub
sub
nop
nop
test
test
xchg
pushf
scas
repnz
incb
jae
shlb
scas
out
fisttpll
in
mov
lahf
stos
jge
mov
add
lods
xchg
xchg
and
out
push
mov
mov
sbb
add
cmp
sbb
mov
jno,pt
xchg
mov
adc
pop
hlt
inc
jb
pusha
faddl
out
xor
xchg
stos
xchg
mov
insb
mov
push
push
lahf
jo
cmp
pop
lcall
dec
sbb
lahf
pop
outsb
movsl
adc
mov
push
insl
nop
mov
imul
sbb
add
div
clc
imul
pushf
sbb
das
sub
mov
push
jecxz
push
push
scas
add
mov
cwtl
pop
xchg
xor
or
adc
jg
pop
pop
sbb
cmc
adc
icebp
inc
movsb
enter
jo
movsb
push
sub
fisttps
xor
mov
push
push
lds
imul
inc
xor
hlt
test
push
pop
sbb
mov
dec
scas
mov
xchg
lods
jns
sbb
fwait
pusha
xor
sbb
xchg
xor
pushf
loope
mov
clc
popw
mov
cmp
push
xchg
andb
stos
aad
imul
sti
data16
dec
lods
aas
push
or
orl
mov
lock
inc
sub
pop
mov
cli
mov
out
mov
sbb
adc
sbbb
pop
jecxz
or
pop
out
inc
adc
loopne
rcll
int
arpl
sub
imul
movsb
divl
mov
adc
adc
sbb
or
inc
imul
in
jae
pop
jg
sbb
xor
ljmp
andl
test
mov
arpl
jb
pop
sbb
add
imul
rcl
jbe
dec
movsb
cld
fdiv
sub
adc
dec
test
cmp
fists
ret
stos
fisubl
add
stos
icebp
jge
pop
scas
adc
fdiv
subl
dec
pop
das
cmp
adc
out
jl
jl
or
xchg
test
and
mov
lds
lea
inc
lret
sbb
adc
lret
mov
sbb
jmp
cmp
cmp
add
pop
jecxz
xchg
mov
mov
cltd
mov
test
xor
cmpsl
dec
or
fisubl
hlt
xchg
stc
push
push
adc
cld
xor
cs
mulb
arpl
loope
inc
pop
add
dec
sbb
mov
mov
push
imul
aad
jg
pop
out
xchg
mov
xor
shlb
push
sub
ss
into
mov
popa
mov
enter
adc
fimuls
lea
xchg
andb
cld
insl
sbbb
shl
adc
lret
jp
enter
test
xor
scas
push
sbb
cld
aad
mov
fdivs
push
fdivrl
pusha
inc
mov
leave
mov
movsl
out
add
mov
dec
cltd
xor
sub
bound
add
xor
je
inc
lods
mov
pop
outsb
lds
mov
std
imul
or
cmp
xchg
test
lcall
and
sbb
mov
dec
cmp
enter
mov
pop
mov
pop
test
mov
sbbb
cli
scas
push
jo
mov
cmc
add
sbb
add
inc
sar
sahf
data16
lret
bound
shr
les
pop
repnz
gs
add
and
loopne
add
xor
bound
sub
mov
inc
mov
insl
shrb
jecxz
lock
mov
mov
xor
scas
mov
fadds
and
insl
dec
sub
out
sub
mov
mov
repnz
adc
andb
sub
jge
mov
ret
stc
sbb
sub
ss
lret
std
movsb
iret
xor
cmp
mov
fcoml
xor
imul
mov
ret
pushf
sub
lcall
push
nop
and
jp
iret
loope
push
scas
dec
movsl
cmp
inc
adc
jb
ds
dec
subl
push
adc
test
mov
orb
mov
bnd
pop
lock
pop
push
mov
pop
clc
sub
add
sbb
dec
push
mov
jne
stos
add
or
or
insb
daa
lea
push
mov
lret
jl
aaa
lds
or
mov
fisttpl
jl
mov
popa
dec
cli
int
into
adc
push
pop
pop
scas
push
stc
adc
scas
scas
and
and
jle
ret
xchg
cmp
jg
mov
add
out
xchg
xchg
test
adc
jl
push
cld
nop
jne
jns
xor
mov
mov
xor
sbb
sub
and
xor
sbb
ss
push
ds
out
dec
dec
inc
xchg
push
cmp
sub
mov
adc
inc
cwtl
pop
lock
bound
dec
jmp
or
mov
sub
leave
adc
mov
jp
ja
inc
loope
cmpsb
repnz
mov
jp,pn
hlt
adc
inc
dec
loopne
sub
xchg
inc
cmp
sti
imul
inc
aas
mov
dec
push
out
test
aam
movsl
or
sbb
in
push
in
sti
jb
mov
xchg
push
or
test
dec
push
inc
pop
cmp
xchg
data16
enter
lahf
es
scas
clc
push
push
sub
push
in
add
cmp
pop
adc
dec
inc
sub
add
xchg
movsb
mov
add
mov
aas
shlb
jnp
sub
and
pop
or
ja
cwtl
and
out
shll
dec
dec
mov
sbb
jno
mov
push
and
fnstsw
fildll
jmp
aaa
dec
dec
cli
loope
mov
cwtl
cmp
pusha
pop
mov
jb
jp
mov
inc
pop
test
in
add
jmp
jbe
aam
pop
in
and
mov
ret
ds
int3
in
call
inc
dec
xchg
xchg
dec
jmp
cmp
clc
sbb
sub
sub
jecxz
mov
xchg
xchg
jle
loopne
push
sbb
rol
rol
bound
pop
add
sbb
and
sbb
mov
push
xor
adc
inc
dec
xchg
cli
aas
jnp
cwtl
mov
sahf
cmc
xchg
shl
mov
and
iret
cmp
inc
in
call
in
test
into
inc
pop
gs
cmp
mov
xor
jmp
mov
mulb
mov
and
sar
dec
shrl
sbb
fstpt
stos
pop
int3
lret
test
outsb
mov
jge
jg
stos
cmc
fsubl
cmp
mov
jp
and
jp
stc
sarb
xchg
cwtl
pusha
sahf
nop
xchg
add
mov
sub
ja
shlb
xchg
cmc
or
xchg
pop
out
push
out
xchg
add
xor
orl
jmp
ljmp
icebp
add
rcll
cmp
aad
cmp
adc
stos
test
jb
sbbl
adc
inc
pop
jne
pop
mov
push
sub
mov
inc
movlps
pop
mov
outsb
jmp
add
mov
cltd
jne
mov
xchg
popf
xor
clc
lret
jo
add
sbb
cld
mov
fsubrp
xor
test
daa
test
add
push
je
mov
jns
lret
push
int3
fcompl
push
popa
xor
sbb
push
push
mov
jns
sub
cmp
je
test
cmc
gs
mov
rep
and
shl
pushf
fwait
xor
cmc
xchg
js
roll
dec
sub
jb
dec
dec
pusha
xor
inc
sub
lret
push
repnz
std
iret
fcomps
jl
insb
std
pop
adc
or
int3
mov
jbe
imul
stos
daa
outsl
jb
dec
in
adc
mov
aad
add
aam
ret
outsb
stc
ja
lcall
lock
and
adc
outsb
or
sbb
and
popa
push
adc
fs
shlb
scas
fucom
jb
shrl
adc
xor
or
inc
and
jb
pop
xchg
and
dec
add
pop
lea
jge
dec
push
mov
pop
outsb
and
jb
jl
dec
mov
movsb
lea
imul
push
adc
pusha
pusha
hlt
jg
imul
inc
sub
dec
sti
popa
clc
inc
les
add
mov
xor
xlat
mov
mov
repnz
mov
adc
in
mov
das
sbb
mov
xchg
das
fimuls
xor
pop
xor
jp
testb
or
mov
outsl
scas
push
xor
xchg
lret
inc
sbb
xor
sub
std
xchg
test
leave
jl,pt
push
mov
outsl
mov
jbe
mov
sbb
aad
cmp
pop
imul
sub
ljmp
add
fbstp
mov
std
cltd
dec
enter
jmp
dec
sbb
pop
or
in
sub
and
stc
icebp
add
sub
jne
push
arpl
add
ja
fwait
test
inc
ficoms
lret
jbe
adc
enter
adc
fs
call
or
enter
xchg
mov
rcrl
imul
call
movsb
sahf
stos
mov
cmp
ficompl
and
mov
scas
mov
cmp
sub
or
sbb
ret
es
pop
outsb
les
imul
pop
or
xor
sub
xchg
repnz
stc
mov
pop
and
push
vlddqu
sahf
clc
mov
mov
cwtl
cmc
mov
fstpl
mov
dec
push
sub
push
in
out
push
test
repnz
dec
mov
jo
cmp
pop
cmc
notb
xlat
mov
loop
lea
subb
push
sub
sarb
jle
cmp
imul
mov
fs
or
xchg
sub
into
xor
xchg
xchg
fucomp
stc
inc
incl
mov
or
inc
ljmp
mov
mov
dec
adc
nop
add
es
or
add
andb
inc
pop
adc
xor
lods
mov
cld
nop
into
dec
out
mov
pop
mov
outsb
add
push
push
and
xor
mov
int
outsl
pop
adc
mov
fisttpll
pop
aaa
lret
int3
cmpb
xorb
pop
cmp
call
adc
divb
dec
in
lea
dec
movl
faddp
adc
pop
pop
leave
xor
push
mov
mov
sahf
xchg
stos
aam
cmp
inc
nop
popf
stos
shrl
adc
jg
adc
ret
mov
loope
cmp
jp
leave
push
mov
mov
cltd
xor
das
mov
mov
mov
adc
iret
xchg
scas
clc
or
fldcw
jae
imul
mov
ret
mov
fsubrl
add
pop
mov
jnp
xchg
nop
mov
mov
test
jecxz
popa
pushf
inc
cmpsb
cmp
in
jns
loopne
xchg
sbb
js
sub
sarb
mov
xchg
mov
ja
or
pop
mov
cmp
xchg
mov
iret
fldt
push
sbb
mov
subb
lahf
mulb
cmp
jle
jge
mov
bound
loopne
std
enter
and
call
or
cld
aad
jmp
or
jno
sub
testl
jae
xchg
sub
shlb
rcrb
add
lods
push
iret
and
ja
popa
mov
jo
adcb
inc
or
fwait
rorb
cmpsb
inc
jl
xchg
scas
sub
mov
je
cmp
adc
sbb
aaa
fwait
or
addr16
repnz
subl
cmp
cld
sbb
jmp
and
mov
int3
jg
popa
out
mov
xor
rorl
and
stos
mov
outsl
mulb
lods
sarb
mov
popa
lock
inc
or
std
out
popfw
jmp
cmp
inc
sbb
popa
jle
mov
push
mov
popf
xchg
xor
notb
push
and
xor
scas
cli
and
jns
std
int3
ss
xchg
jo
dec
dec
imul
addl
in
sbb
push
cmp
and
popf
adc
pop
jge
enter
pop
enter
add
stos
adc
mov
mov
adc
mul
sub
scas
mov
rcr
mov
popf
enter
cmp
cmpsb
cmp
inc
nop
call
fnstcw
mov
xor
popf
xor
imul
sbb
mov
and
andl
jl
int3
shrl
test
ljmp
cmp
sbb
dec
clc
xchg
add
sbb
jbe
dec
fidivrl
loope
pop
loop
daa
dec
dec
arpl
movsb
in
or
push
xchg
ja
mov
xchg
mov
and
ja
dec
cs
bound
mov
jns,pn
mov
cmp
sarl
xorl
sub
push
dec
sbbb
jp
or
pop
les
and
insb
ret
mov
scas
inc
add
cwtl
xchg
or
gs
pusha
adc
xor
out
and
sub
mov
dec
ret
or
push
pop
pusha
orb
dec
and
mov
sahf
jmp
jge
inc
out
sbb
dec
sbb
in
sbb
subb
jno
jecxz
fisttps
ret
push
aam
dec
xor
or
mov
mov
pop
ret
pop
dec
inc
fdivl
jno
das
sbbl
sbb
mov
add
push
cmp
push
mov
adc
pop
push
cmc
jl
xor
sti
cmp
lahf
shl
mov
sarl
repnz
mov
pop
sub
test
pop
xchg
mov
sbb
lods
dec
mov
insb
xor
popf
mov
pop
scas
dec
pushf
das
mov
out
in
test
xchg
lretw
xchg
and
in
add
mov
dec
ficompl
sti
push
jmp
scas
outsl
push
mov
insb
mov
addl
pop
sub
cltd
leave
xchg
lret
cmp
call
dec
pop
icebp
fcoms
out
pop
sbb
push
in
push
fisubl
dec
sub
push
adc
and
mulps
nop
jb
jl
mov
ja
inc
jle
dec
jl
adc
fs
stos
mov
add
movsl
test
push
lods
inc
nop
into
cmpsl
movb
and
sbb
jb
inc
jmp
iret
bnd
lods
repz
add
adc
fnsave
dec
and
sbbl
add
std
xor
jnp
push
fs
ds
jg
aad
scas
pop
dec
jnp
inc
jns
mov
mov
cmc
stos
mov
mov
scas
xchg
mov
fldl2t
mov
ficomps
push
adc
mov
mov
in
sbb
xchg
xchg
mov
out
or
sbb
mov
sub
ljmp
inc
jno
icebp
out
scas
xchg
xchg
inc
les
insb
push
xchg
sbb
test
sub
lahf
push
and
sub
cmc
scas
xchg
cld
inc
dec
outsl
daa
cmc
adc
dec
insb
jb
in
sub
dec
push
js
jecxz
xchg
dec
fsubrl
dec
arpl
addb
cmp
cli
or
pop
cmp
and
in
loopne
or
mov
mov
subl
xor
roll
inc
push
rorb
and
sub
cmp
mov
adc
jle
or
test
clc
add
jmp
jge
ja
adc
lods
xchg
adc
sbb
inc
scas
jb
mov
rcr
add
mov
outsb
add
leave
xlat
xchg
mov
mov
ret
mov
sti
dec
cmpl
outsl
and
jmp
stos
lods
sbb
inc
and
enter
aaa
adc
lret
je
xchg
ds
sti
es
sarl
fiadds
xchg
sub
mov
xor
adc
adc
mov
add
leave
xor
stos
lret
xlat
fstpt
dec
and
push
inc
adc
cmp
or
sbb
cmpsl
jle
fstps
movsb
test
sbb
cmpl
push
imul
fidivrs
orb
sub
outsl
xor
rclb
sub
ds
aaa
jne
sahf
popa
add
imul
fisttpl
cmp
adc
popf
adc
in
mov
aam
mov
and
mov
mov
cmpsl
push
mov
test
cmp
mov
fld
mov
addb
loopne
xchg
cmpsl
cwtl
pop
imul
daa
orb
adc
mov
adc
insl
rolb
or
mov
lods
addr16
test
mov
out
cs
lcall
icebp
dec
pop
sub
pop
out
inc
pop
mov
data16
inc
pop
push
add
push
inc
shrl
lahf
ja
jnp
mov
not
inc
jo
inc
jge
push
daa
dec
lcall
pop
stc
pop
out
insl
flds
outsb
pmullw
mov
inc
inc
and
testb
arpl
rol
aad
mov
pop
xchg
in
arpl
or
add
ficompl
arpl
jge
inc
test
cmp
xor
jl
pop
pop
mov
nop
jnp
daa
ret
lds
push
dec
fnstsw
lods
jae
mov
cmpsl
xchg
ret
fmull
ljmp
lods
lds
aad
sahf
or
mov
dec
call
push
mov
fdivs
pop
jno
rorl
cmp
hlt
xchg
shrl
xsha1
cmpsb
mov
push
and
lock
rclb
and
in
push
dec
cld
xchg
jp
dec
inc
mov
sbb
les
inc
insl
int
pop
lret
test
jg
sbb
add
or
mov
loope
xchg
fcmovnu
outsl
or
cmpsb
imul
insl
jle
sahf
outsl
cltd
jle
mov
mov
add
mov
nop
shll
loope
mov
mov
xchg
dec
aaa
into
jns
in
dec
int3
and
mov
mov
lods
xchg
cmovle
movsl
stos
pop
mov
mov
fdivrl
inc
clc
sub
cmpsb
lret
fidivs
jmp
xchg
xchg
and
jb
push
decl
adcb
mov
into
sub
sbb
jle
jecxz
inc
push
fisubl
xor
das
fiaddl
push
dec
jle
jmp
aad
out
add
in
loop
lahf
ss
test
cmp
mov
jmp
fisubrl
pop
sti
stos
bswap
sarl
enter
test
cmp
push
cli
pop
cld
fisttpl
mov
test
repz
neg
not
out
adc
add
jle
lds
sbb
mov
and
repnz
leave
inc
imul
and
rolb
std
xchg
lcall
mov
clc
sbb
movsb
pop
mov
jp
test
pop
mov
in
cmc
xor
daa
mov
shrl
sub
cltd
push
sbb
fst
cmp
inc
icebp
mov
jl
hlt
fdivrs
sbb
xchg
fwait
sahf
in
pushf
mov
adcb
fimull
cs
jo
cmp
add
inc
mov
fisubrs
cwtl
push
adc
test
lahf
je
cmp
roll
push
jl
lret
push
inc
jmp
cmp
and
mov
in
std
jmp
sbb
pop
or
pusha
std
push
cmp
pop
push
or
fstpt
adc
xor
xor
push
scas
in
or
adc
rclb
out
jge
leave
cmp
pop
inc
jnp
sub
xchg
dec
mov
cld
dec
add
jp
fs
push
call
dec
in
mov
imul
lds
outsb
sbb
in
aas
dec
lahf
nop
mov
sbb
jl
or
ret
aas
mov
aad
fcmovbe
dec
or
pop
out
fisttps
and
jp
ds
fs
xchg
cmpsb
pop
cmp
jns
mov
lds
stos
dec
pop
test
es
xor
ljmp
arpl
dec
push
mov
push
cmpl
daa
jno
xchg
mov
frstor
inc
cmpsb
push
sbb
sub
adc
xor
push
in
or
test
fldl2t
mov
sub
leave
lods
inc
sti
jp
stos
mov
dec
lock
stos
and
cmpsl
into
aas
fld
lret
fidivrl
jae
xchg
mov
in
arpl
andl
daa
por
mov
pop
les
or
xchg
pop
fs
dec
pop
mov
jle
cmp
xor
outsb
mov
test
jnp
xchg
mov
jno
or
or
sbb
cmpsl
sbb
lods
icebp
xchg
addr16
jl
xchg
into
jo
xor
mov
fneni(8087
inc
test
scas
fucomp
bound
ss
xor
jl
adc
push
mov
leave
outsl
adc
pop
inc
nop
dec
dec
psllw
aam
test
sbb
ret
cmp
xchg
or
mov
int3
fchs
testb
ja
loopne
inc
dec
lret
and
scas
push
cmp
orb
stos
push
cmp
out
movsl
addl
and
mov
mov
andl
mov
and
mov
mov
pushf
adc
fidivl
push
push
push
das
stc
nop
popa
leave
adc
pusha
sarl
idiv
inc
xchg
es
xor
push
mov
fcmove
mov
repz
insb
sub
cmp
push
sub
jnp
pop
sbbb
mov
gs
pop
cmp
lahf
call
xchg
jo
lahf
ss
mov
aam
mov
mov
xor
lahf
jle
aaa
sbb
mov
xchg
in
sti
jge
ret
push
xchg
mov
loope
lahf
pop
in
fldcw
insb
xchg
or
rolb
adc
lods
pop
xchg
fisubs
neg
sub
pop
out
add
popa
scas
fistl
lret
dec
jecxz
mov
shlb
mov
sti
fisttpl
mov
pushf
aaa
inc
add
dec
fs
out
subb
data16
jbe
jo
xor
or
push
pop
xchg
inc
push
movsl
orb
jle
sub
aas
mov
xor
xlat
jno
test
xor
push
fucomi
jne
imul
stos
xor
in
inc
notb
jo
cmpsb
cmp
mov
or
gs
xlat
jbe
cpuid
shll
test
jge
pushf
les
inc
jns
shrb
loope
in
out
mov
xor
mov
fmull
pop
or
push
call
push
test
inc
gs
pop
xor
ja
xchg
mov
and
or
jno
daa
enter
pop
ret
cmp
xchg
jecxz
pop
mov
sbb
lods
loope
adc
jno
fwait
sub
sub
mov
orb
sub
mov
add
mov
jg
inc
mov
int
xchg
cmpsb
cwtl
inc
sbb
push
cmp
movsl
lds
popf
mov
inc
daa
pop
sahf
pop
jb
adc
mov
jo
outsb
xchg
jbe
dec
lods
add
jno
xor
lea
out
jle
stc
rorb
add
xor
inc
pop
pushl
mov
aas
stos
lret
std
int3
sti
push
out
mov
aaa
scas
dec
out
test
or
movsb
cmp
dec
out
in
xchg
sub
and
mov
es
or
aaa
into
insb
in
push
fldl
mov
dec
push
push
cmpl
mov
dec
cs
lods
in
mov
jae
insl
pop
popf
and
sbb
xor
test
sarl
iret
fadds
adc
sahf
enter
jmp
test
or
inc
js
loope
icebp
mov
push
adc
xchg
aad
push
cmc
dec
xor
setle
enter
shlb
mov
xchg
push
jns
mov
cltd
jno
push
jns
test
test
sub
push
movsb
clc
dec
dec
hlt
in
mov
jae
xlat
adc
ss
mov
pushf
jns
outsb
jp
xchg
pop
out
shlb
xor
xchg
or
popf
fisubrs
inc
sub
js
ret
dec
pop
sub
mov
js
jg
adc
lret
arpl
xor
xor
fs
ret
fstl
mov
bound
xchg
sti
or
jns
sbb
jecxz
sub
sysexit
icebp
mov
adcl
std
mov
sbbl
mov
lods
mov
and
fsubl
cmp
sub
aas
and
mov
int3
sbb
popf
movsb
rcrl
clc
mov
in
mov
into
imul
mov
pop
sub
push
pop
and
cmp
int
pushf
push
dec
lahf
fidivrl
adc
and
in
jns
lea
sub
xor
scas
push
jnp
xchg
fistl
movsb
dec
sbb
ret
rcrb
xor
ss
ftst
fildl
movsb
push
inc
lea
fcmovnbe
cmpl
stc
nop
mov
ret
addb
jbe
dec
loop
mov
xchg
mov
aam
call
scas
ret
lods
push
data16
in
test
fiadds
fildll
jnp
cltd
inc
stos
inc
stc
mov
subb
push
in
cmp
movsb
dec
push
rcrb
outsb
imul
jecxz
cmpsl
mov
test
xchg
jg
pop
mov
mov
aas
mov
enter
imul
hlt
leave
pop
rorl
fs
out
hlt
sahf
xor
cmp
add
cmp
enter
or
xchg
sub
push
sbb
or
rcrl
shlb
imul
clc
out
or
xchg
sbb
les
mov
ljmp
xor
jge
jbe
add
bt
inc
inc
pushf
lahf
sti
inc
dec
loop
and
push
jg
add
hlt
fld
pop
inc
lods
out
and
push
out
dec
mov
pop
inc
xchg
pushf
pop
in
dec
xlat
repz
out
add
out
stos
mov
scas
adc
sub
push
out
mov
std
xor
inc
int3
fildl
mov
fcomps
add
and
mov
popa
data16
test
mov
cmp
push
dec
push
addr16
cltd
js
fsubl
shl
push
sub
jbe
popf
ret
repz
stos
inc
clc
xchg
jae
into
lods
leave
test
cmpsl
dec
cmp
mov
or
ret
fs
lcall
out
in
add
test
or
xor
fdivs
xchg
shrl
push
stos
mov
jnp
add
rcrl
subl
jecxz
pop
mov
loop
stc
hlt
mov
fwait
add
or
mov
inc
shll
lret
into
fwait
and
add
dec
adc
sti
mov
xorb
aas
jne
xchg
sbb
out
cmp
pop
nop
mov
cmc
cld
mov
gs
adc
cmc
pusha
notl
and
mov
pushf
mov
adc
cmp
inc
xchg
in
pop
dec
pop
jns
es
inc
fsubrl
fsubrp
imul
fistpll
imul
push
les
scas
pop
loope
pop
or
add
scas
mov
in
fists
fmull
sahf
sub
sbb
ret
test
dec
cmc
mov
leave
lret
inc
push
js
stos
icebp
out
xchg
pushf
adc
push
lret
lea
es
arpl
ffreep
mov
mov
cmp
cmpsb
pop
popf
lcall
test
xlat
mov
mov
xchg
dec
sbb
fs
cmp
scas
cmp
push
out
push
dec
loopne
fldt
or
adc
push
sbb
loop
pusha
outsb
add
gs
ds
nop
daa
cmp
imul
les
loop
testl
xchg
adc
cwtl
inc
arpl
test
lret
cmp
fdivl
pop
out
rcll
or
xchg
mov
ljmp
xor
lahf
mov
push
fbld
xchg
lret
fdivrs
xchg
hlt
jno
fistl
sbb
xchg
fs
outsl
jnp
inc
movsb
notb
xor
mov
inc
in
cmp
stc
sub
loopne
out
or
sbb
daa
mov
push
loop
mov
cmp
pop
lahf
dec
push
leave
push
cmpsb
cmp
pop
dec
cmp
sub
pop
idivb
dec
dec
mov
nopl
and
pop
ss
cmp
mov
mov
jl
lcall
push
addr16
jne
dec
cmp
lods
int3
loope
jns
ljmp
push
mov
push
xor
pop
loope
mov
fsubrs
sbb
jnp
imul
mov
bound
cs
cltd
xor
scas
sub
or
lds
and
mov
idivb
pop
or
mov
icebp
movsl
pop
jge
mov
jecxz
xor
int3
cmp
adc
cmp
mov
iret
jbe
mov
std
in
ffreep
and
add
mov
popa
enter
and
pusha
leave
arpl
xchg
hlt
movsl
mov
cs
jnp
add
sub
mov
pop
xlat
fcomp
call
cmp
iret
sub
loopne
test
fwait
pop
cmp
add
dec
fcomp
jmp
imulb
pop
mov
data16
enter
jb
ds
loope
cmp
lds
decl
sub
sti
xchg
jnp
sahf
sub
sbb
fs
cmpsl
lds
lock
insl
lds
lahf
sbb
es
sbb
or
sbb
xchg
mov
sub
inc
std
jb
dec
xchg
shll
loope
js
dec
sbb
xor
movsl
hlt
rclb
xchg
dec
dec
push
fwait
xor
test
push
mov
mov
js
sti
cli
data16
fmul
mov
jne
out
out
out
mov
and
xor
aas
mov
das
mov
vunpcklpd
fs
push
int3
aam
and
adc
dec
pop
hlt
jle
mov
gs
jnp
rcll
mov
mov
pusha
clc
sahf
jae
pop
repz
inc
jp
jbe
stc
mov
int3
adc
into
mov
js
cmp
in
mov
xchg
enter
cmc
and
push
add
test
sub
stc
test
dec
xor
psrlw
xlat
lcall
or
and
dec
sub
pop
pop
cld
clc
sahf
sub
cmpsb
xchg
jp
cmp
push
mov
ficomps
ucomiss
scas
shl
es
jb
into
lods
sbb
mov
ljmp
das
lahf
mov
andl
hlt
push
into
popa
or
inc
sarl
sbb
rol
lds
daa
lcall
and
and
repnz
xor
adc
ret
cld
loopne
enter
popf
das
jp
popa
mov
jnp
testl
sub
pop
repz
add
stos
adcl
sti
inc
aam
push
jb
neg
jo
pushf
andl
jg
test
lret
jo
sbb
sti
imull
jne
pop
inc
fadds
cld
loope
imull
and
adc
std
xorb
pop
ljmp
hlt
adc
leave
sbb
in
shll
adc
jno
cmp
daa
add
iret
fs
fcoml
mov
jno
push
clc
jne
pop
mov
aaa
ud0
mov
sahf
clc
in
mov
sbb
mov
push
mov
mov
jbe
fimull
dec
nop
cmp
mov
shl
les
add
add
lret
push
mov
xlat
data16
ja
xor
cmpsb
bound
mov
add
fcomp
cmc
pop
sbb
cmpsb
cmc
mov
out
dec
jo
cmc
jns
inc
stos
push
lds
stos
push
ja
and
out
xor
outsl
push
jae
or
xlat
adcl
xchg
dec
jbe
in
mov
icebp
or
and
push
nop
push
stos
jecxz
xchg
movb
leave
fstpl
jle
push
push
fadds
inc
mov
and
push
pop
mov
mov
inc
fucomp
push
jne
inc
enter
in
sbb
loope
loope
outsl
ret
add
jl
sbb
cmpsb
dec
pop
push
dec
lret
mov
xor
out
daa
inc
ljmp
xchg
mov
cli
add
sahf
pushf
int3
hlt
fxtract
mov
enter
inc
jecxz
xchg
subb
and
xor
xorl
inc
jns
sub
mov
cmp
cld
dec
addr16
sbb
pop
sbb
add
outsl
push
mov
add
mov
leave
shrb
aam
repnz
mov
ret
or
adc
movsb
shll
popa
aas
cltd
mov
pop
xchg
lahf
mov
xor
xchg
pop
adc
or
inc
and
insl
jae
roll
mov
push
and
or
fstpt
pop
sub
inc
movsl
cmp
fadds
or
stc
pop
clc
pop
shrl
addl
push
repnz
mov
shlb
add
pop
jnp
dec
jecxz
mov
mov
and
dec
pop
in
dec
jae
aaa
scas
push
cwtl
in
cmp
movl
jmp
ljmp
add
or
popa
cmp
test
mov
fcmovu
pusha
cwtl
jle
test
mov
push
fisubl
enter
mov
add
or
cmpsl
pushf
xor
jl
inc
movsl
sbb
bound
adc
push
adc
in
mov
adc
stc
push
inc
inc
inc
ret
gs
inc
les
dec
loope
cltd
pop
addl
call
ret
das
sub
ret
mul
je
mov
adcb
lret
cmp
push
fcoms
subl
pop
loop
fidivs
rcrb
test
loopne
cmp
lock
adc
push
pop
out
ret
xchg
je
xor
into
and
in
arpl
pushf
jle
pop
mov
mov
mov
sbb
push
mov
inc
in
push
ss
lock
adc
pop
pop
or
lret
hlt
clc
adc
in
scas
add
fadds
mov
fwait
outsl
jp
mov
in
jmp
test
es
adcb
add
xchg
nop
mov
aas
fcmove
pop
gs
bound
xchg
pusha
push
fnstsw
outsl
test
lret
dec
imulb
leave
jge
rolb
cmp
outsl
repz
dec
iret
inc
nop
xor
mov
sbb
ds
out
cmpsb
cmp
dec
inc
cmp
or
mov
xchg
xor
in
test
mov
jns
cld
les
fld
jno
and
popa
xlat
cmc
cmp
test
push
movsb
data16
daa
ja
arpl
or
add
jecxz
adc
repnz
arpl
adc
xor
ljmp
pop
push
repz
pop
jmp
mov
dec
inc
test
mov
push
dec
mov
cmpsb
les
and
rcrl
jg
inc
jmp
pop
push
loop
mov
in
inc
cltd
movb
fildll
and
jb
xchg
shrl
cmp
cmpsb
pop
out
incb
mov
add
sti
inc
mov
ret
cmp
ja
repz
xchg
mov
add
mov
adc
out
cmp
push
jg
and
xchg
add
lcall
inc
nop
addr16
mov
nop
movsb
cmp
test
js
xor
imul
fwait
hlt
loope
in
lock
mov
lods
mov
xchg
call
das
sbb
stc
orb
mov
inc
xor
add
pop
lret
loope
lods
xor
adcl
mov
push
call
xchg
outsl
push
repz
loopne
stos
aaa
lods
adc
stos
jge
jle
sbbb
pop
push
push
jecxz
push
int3
mov
mov
test
cmp
and
mov
push
mov
xor
ret
divb
mov
cs
pop
sub
ss
out
movsb
dec
pop
inc
inc
mov
je
xor
jb
dec
scas
js
sbb
es
jge
jle
stos
sub
pop
inc
daa
lret
sub
jno
sbb
adcl
and
mov
sarl
dec
cli
je
cmpsb
mov
shl
xchg
mov
outsb
mov
aam
mov
cli
jb
xchg
mov
shl
ja
jmp
pop
jnp
inc
fidivrs
rcrb
sbb
insb
push
mov
aam
out
xchg
aaa
arpl
dec
mov
rorl
lahf
pop
mov
jbe
lea
and
fiadds
xlat
imul
es
jp
in
sbb
das
cs
cmp
out
push
lods
pop
jmp
xlat
jno
adc
shlb
jge
dec
fisubs
repnz
rcr
mov
imul
rolb
and
mov
lahf
xor
and
fldcw
jo
sbbb
popf
ret
sbbl
cmp
jle
ret
rcrl
incl
test
mov
inc
into
das
and
inc
scas
and
or
fldcw
jg
sub
fwait
xor
sbbl
adc
cmpsb
mov
fsubrl
adc
cmpsb
dec
pop
dec
add
sti
aad
rcrl
test
mov
outsb
mov
push
cmp
dec
or
aad
int3
mov
stc
jl
shr
shl
mov
mov
lret
sti
ret
in
std
push
lods
in
push
rcll
hlt
push
ss
xchg
stc
out
add
xor
mov
xor
jnp
pop
stos
pusha
dec
out
pop
lret
shlb
cli
sub
ret
ja
fsubs
inc
cmpsl
aas
cmpsb
xor
mov
stos
inc
adc
xlat
lods
push
mov
leave
mov
test
xchg
sub
or
lea
mov
and
js
mov
sti
loop
mov
pop
dec
or
lcall
and
lea
xchg
jmp
push
and
mov
movsl
out
adcl
cmp
xor
aam
xor
pop
xchg
bound
ret
loope
mov
fisubrs
cmpsb
mov
inc
xor
mul
lock
and
nop
daa
sub
into
jno
dec
scas
test
lds
mov
in
sahf
lods
scas
leave
int3
mov
test
and
sub
pop
pushf
inc
push
outsl
sub
jnp
bound
xchg
call
push
jmp
ret
xchg
jmp
xlat
xchg
ret
xor
pop
sub
sarl
in
xchg
pop
pop
or
filds
dec
push
out
test
mov
xlat
loopne
iret
cmp
xchg
sub
call
pop
cmpsb
sbb
mov
xchg
imul
pop
add
mov
jnp
jp
stc
nop
mov
mov
mov
dec
mov
xchg
jmp
pushf
movsb
repnz
in
adc
and
outsl
cmc
fsubrs
mov
inc
call
cld
xor
sahf
lea
outsl
add
outsb
xor
cmc
dec
cwtl
inc
cmp
cmc
pop
or
notb
and
lret
addr16
cmpsb
jge
or
xchg
jns
into
stos
mov
cli
mov
push
add
nop
sbb
bnd
adc
cmpsl
adc
push
enter
add
movq
push
ret
loopne
jecxz
mov
dec
test
jle
xor
pop
pusha
and
push
or
push
xor
inc
fucomp
notl
test
imul
inc
push
ljmp
sub
inc
cmp
in
gs
xchg
repnz
loopne
das
add
popa
ja
cmc
int
sbbl
scas
xchg
lahf
jbe
addr16
and
cmp
in
push
test
cs
jecxz
cltd
das
stos
push
inc
push
mov
in
out
aam
mov
adc
jnp
or
mov
mov
inc
int
es
xchg
out
daa
test
fwait
int
pop
jp
dec
and
mov
mov
or
dec
es
inc
and
fsubrs
or
xchg
cmp
cmp
stos
fnsave
int3
mov
ljmp
sbb
fildll
xor
les
adc
jl
xchg
lods
jl
inc
and
shl
dec
mov
jbe
pop
addb
out
lds
ret
data16
jg
int
into
mov
pusha
dec
inc
arpl
mov
xor
nop
pushf
scas
ret
inc
fstl
dec
loop
mov
ds
fwait
cmpsl
cmp
jmp
cmp
movsl
cmp
xor
cli
insb
adc
inc
outsb
testl
in
xchg
xchg
xor
and
jp
sbb
or
fsubrs
lods
sub
lods
hlt
mov
jg
jne
js
push
test
mov
and
xchg
shrb
add
cld
and
inc
ss
mov
stos
and
or
lret
mov
dec
pop
xor
popf
xor
sub
fdivrs
mov
xchg
daa
add
inc
push
sub
js
cmp
lods
mov
jae
pop
into
enter
push
xor
arpl
xchg
sub
xchg
push
jo
inc
xor
cli
sbb
inc
fisubrs
xchg
std
ja
test
pusha
addb
push
jae
inc
jge
stc
adc
sbb
push
and
mov
jp
xchg
adc
dec
cmp
dec
into
call
test
cmpsb
loopne
dec
sbb
mov
or
lods
mov
and
out
stc
dec
xchg
pop
stc
stos
and
add
lcall
dec
xor
call
sub
add
cmpsl
and
dec
jecxz
iret
lds
fmuls
test
pop
xlat
mov
imul
scas
inc
pop
shlb
push
mov
cmp
push
shrb
movb
mov
stos
and
cmp
imulb
lcall
pop
cmp
shlb
out
lds
or
pop
xor
jmp
les
sbb
pop
push
inc
cmp
in
or
dec
std
cli
shll
cmp
or
adc
dec
push
fcmovnbe
lds
ds
and
lock
sub
rclb
cmp
xor
in
mov
btr
cmp
in
mov
jne
dec
fnsave
jle
sub
adc
lea
mov
or
daa
add
gs
xchg
lahf
int3
add
movsb
aas
or
stos
test
inc
xor
xchg
test
lock
stc
inc
sub
jmp
cmpsb
or
out
scas
pop
js
add
jbe
or
btcl
mov
dec
addr16
iret
stos
add
pop
pop
int3
push
loope
inc
pop
sub
ficomps
push
mov
into
jno
out
cmp
fisubl
mov
xchg
outsl
lods
mov
sub
xchg
test
mov
sar
inc
arpl
inc
push
or
jbe
xor
in
or
cmpsb
jo
push
fists
and
cmp
fwait
xchg
pusha
fucomi
push
sbb
xchg
adc
pop
mov
push
cvtdq2ps
adc
leave
push
aad
pop
icebp
repz
int3
push
jne
js
lret
xor
stos
fidivl
add
adc
clc
push
jns
sahf
xor
hlt
sub
addl
call
mov
mov
and
leave
mov
adc
decb
pop
out
jo
sarb
add
mov
das
aas
aaa
fidivl
push
mov
sbb
das
sbb
sbb
jg
xor
and
in
cmp
hlt
pop
inc
add
and
loope
jb
ds
nop
repnz
push
into
sbb
js
push
inc
dec
addl
mov
enter
stos
in
jg
ror
pop
scas
jnp
push
jecxz
pop
decb
pop
cmpsb
xchg
cmp
fwait
cli
andl
push
mov
or
and
ja
sub
popa
lds
pop
dec
icebp
mov
jae
popa
addb
jae
cmp
dec
xchg
mov
push
xchg
aad
lods
lds
les
mov
push
loope
push
cmp
aaa
arpl
rorl
push
out
mov
lods
inc
imul
sub
lods
dec
push
cmp
mov
xor
stos
in
icebp
in
xchg
orl
xor
leave
push
dec
mov
jmp
sbbb
ss
dec
into
lcall
nop
clc
sbb
out
nop
outsl
fistl
enter
jb
hlt
lret
push
push
jp
cltd
cmpsb
test
lds
cltd
idiv
jmp
dec
inc
and
scas
mov
daa
clc
fimull
push
sub
sbb
rclb
add
xchg
pop
xor
mov
sbb
xor
sarb
popa
stc
adc
mulb
nop
jge
jp
sbb
xchg
pop
pop
push
xchg
pop
push
push
jo
cltd
gs
and
jg
stos
cmp
cmp
es
ficompl
mov
arpl
inc
arpl
andb
mov
test
loope
jno
jmp
cmp
pop
fdivl
scas
sbb
js
jo
sahf
jo
sbb
dec
inc
lret
mov
and
mov
popf
mulb
and
mov
add
scas
in
fists
dec
enter
mov
ds
cli
mov
fadds
inc
orl
dec
mov
dec
adc
inc
les
aad
xchg
inc
add
inc
insb
or
out
iret
push
lds
fmul
jbe
inc
cmpsb
les
sti
adcb
dec
fdivs
fldl
pop
push
sub
lods
fisttpl
push
jecxz
daa
jg
pop
test
aad
xchg
sbb
leave
adc
out
sub
sub
rolb
xor
inc
jno
xchg
frstor
fstpl
mov
les
or
repz
mov
add
addb
aaa
sbb
pop
dec
xchg
inc
stc
adc
or
push
mov
cmpl
int3
mov
inc
xchg
jo
adc
mov
and
or
push
sbb
aas
pusha
jecxz
imul
in
imul
push
fisubrs
xchg
push
mov
and
bound
cli
jne
cli
dec
inc
sub
add
stos
hlt
aas
push
sub
dec
push
mov
jmp
and
ljmp
cli
pop
lock
insb
add
jp
pop
lods
mov
mov
xchg
jmp
xchg
les
pop
in
dec
mov
jne
out
cmp
gs
sar
and
cli
lock
rorb
sub
cmp
data16
icebp
cmp
sbb
xchg
imull
jcxz
push
pop
xchg
push
inc
sub
or
mov
or
inc
dec
push
mov
pop
scas
cltd
roll
mov
outsl
in
decb
into
cmp
ss
add
add
sbb
sbb
mov
push
dec
push
sarl
mov
pop
fcoms
test
roll
dec
and
mov
sub
fcoml
int3
dec
outsb
imul
loope
mov
xchg
ret
out
xchg
pop
ret
hlt
iret
pop
and
movsb
cmp
mov
stc
dec
dec
mov
imul
xlat
outsb
inc
xor
mov
dec
jl
inc
push
bextr
xchg
cs
test
mov
push
repnz
push
xlat
dec
lods
pop
xor
xchg
jae
adc
mov
popf
pop
pusha
dec
fidivrl
add
jmp
or
xor
add
pop
cmp
push
and
pop
push
stos
cmp
pusha
cmp
xor
add
cld
pushf
das
mov
add
cmpsb
pop
mov
or
gs
jg
scas
inc
fcomps
mov
stos
popa
shrl
insl
cmp
push
push
jno
sub
sbb
inc
pop
divl
cmp
popf
jp
jnp
ja
mov
fwait
out
out
out
mov
sub
testb
cmpsb
out
aam
jle
push
push
pop
mov
inc
stc
mov
sti
outsb
and
leave
push
popl
lcall
fwait
push
cmp
adc
fnsave
add
sbb
dec
test
mov
mov
pop
adc
test
sbb
nop
adc
repnz
sub
outsb
or
mov
add
xor
fsubrs
dec
mov
mov
cmp
inc
outsb
sbb
es
and
leave
push
test
push
pop
push
fiaddl
ja
cmpsl
cmpsl
fisubrl
lds
lret
push
adc
jo
or
iret
mov
shll
and
adc
push
mov
mov
cmp
imul
scas
fstl
cmpsl
adc
adc
lds
shl
push
or
rcll
xchg
aas
popl
fmull
insl
iret
cmpsb
cwtl
xchg
push
push
jg
test
mov
fwait
xchg
std
sbbb
mov
sub
aas
insb
mov
cmp
out
cmp
adc
xchg
aad
push
add
icebp
mov
and
xchg
mov
and
sub
sbb
xlat
cs
shrb
shll
hlt
adc
push
adc
pop
xchg
mov
fdivl
sbb
dec
cltd
in
or
sub
dec
sub
je
int3
pusha
jae
xchg
in
test
xchg
pop
pushl
pop
out
or
leave
pop
cs
mov
jle
jb
fwait
mov
add
cltd
or
inc
pop
icebp
xchg
jecxz
pop
adc
jns
sub
loopne
dec
stos
xchg
sub
xchg
xor
sbb
les
cmp
mov
push
sub
notb
jb
sub
ret
xor
mov
jne
andb
push
adc
fidivs
fnstsw
mov
xchg
xchg
scas
cltd
mov
dec
xor
out
adc
jb
lret
cmp
and
adc
out
clc
mov
sub
rcrb
loop
cld
or
out
cli
or
sarl
sbb
adc
sbb
pushf
cmc
xor
in
mov
add
sbb
pop
dec
daa
fisubrl
fmulp
adc
adc
sarb
sub
in
fimull
pop
out
xlat
fdivl
jmp
incl
mov
das
push
test
xor
push
push
stc
lods
je
adc
std
lret
xchg
xor
sbb
or
pop
mov
lret
movsb
mov
dec
lods
out
mov
mov
and
inc
cmpsl
sbb
add
sbb
fidivrl
ja
mov
push
pop
icebp
out
stos
mov
imul
push
mov
or
xlat
lea
jmp
cmp
sahf
iret
jnp
or
dec
std
js
push
imul
mov
cltd
bound
jl
xor
sbb
ss
pop
push
mov
add
sub
mov
mov
pop
mov
lock
movsb
icebp
cs
mov
fwait
xchg
xor
shl
out
sub
dec
cs
sbb
push
push
lea
in
xchg
add
test
push
pop
push
xorl
add
iret
and
movsb
jecxz
push
lods
mov
into
mov
xchg
mov
xchg
shlb
fsts
add
mov
dec
xchg
roll
out
adc
pop
jge
cmp
xlat
movsb
inc
mov
lods
dec
push
lods
mov
mov
outsl
inc
arpl
aad
push
mov
xor
mov
add
test
gs
dec
sbb
fdivs
xchg
inc
sti
pop
outsb
dec
out
dec
mov
aam
cmp
into
cld
mov
add
scas
stos
adc
jecxz
fidivl
sti
inc
out
xor
movsb
mov
fdivr
and
adc
adc
test
mov
repz
mov
mov
test
arpl
outsb
ss
mov
sbb
popf
fstpl
add
and
fnstcw
push
je
dec
xor
mulb
ljmp
or
pop
jo
add
scas
cli
xchg
fildll
lahf
es
lahf
sbb
jmp
adc
stc
mov
push
mov
lock
jle
add
pop
test
xchg
mov
xchg
test
mov
inc
jbe
int
icebp
and
aas
cld
mov
insl
mov
movsl
icebp
jp
enter
xchg
add
xchg
fwait
test
lahf
push
mov
inc
xor
xchg
xor
in
lock
xor
imul
fisubrs
rolb
adc
lret
cmp
sub
test
lahf
shll
dec
shlb
jecxz
adc
jecxz
testb
lock
push
or
xchg
into
xchg
mov
push
xchg
stos
inc
adc
or
neg
test
es
hlt
sbb
jmp
aas
clc
mov
sbbb
clc
lret
mov
addr16
cmpsl
cli
or
or
xchg
nop
sti
insl
in
sbb
hlt
mov
mov
lock
xchg
mov
cmpsl
mov
sub
pop
in
inc
mov
push
cld
movsb
lock
inc
cmpsw
in
cwtl
sub
mulb
mov
push
cltd
mov
aaa
divss
add
sbb
sub
sub
jns
scas
call
repz
xor
dec
sub
add
imul
pop
cmp
loope
sar
dec
in
je
mov
pushf
sbb
cld
pop
push
fwait
sti
mov
mov
call
xchg
or
mov
jge
test
adc
or
jl
mov
inc
test
mov
int3
imul
fadd
inc
push
insb
jle
popf
test
aaa
mov
xor
push
push
pop
loopne
jnp
push
dec
loope
xchg
add
jmp
addr16
push
insl
data16
sahf
je
dec
mov
arpl
push
ret
daa
mov
out
jge
push
out
inc
xchg
sbb
and
add
cs
pop
sub
xchg
mull
pop
stos
jmp
jnp
aaa
leave
xor
imul
andl
sub
or
pop
subl
ret
sbb
sub
add
mov
test
out
xchg
pop
inc
outsl
int3
push
fucom
aad
sarl
pop
imul
cs
sub
xchg
int3
fidivs
rcll
popf
mov
iret
loope
xchg
movsl
xor
cmp
cmpsb
fsubs
or
and
repz
jge
fwait
gs
jecxz
cmp
push
pop
or
dec
arpl
push
add
cmp
inc
data16
sub
icebp
call
cmp
adc
arpl
rcr
mov
or
mov
mov
jecxz
and
xchg
push
int
ret
arpl
pop
inc
aas
inc
inc
dec
pop
xor
inc
loop
xchg
and
imul
rol
outsb
mov
popf
je
movsl
movsb
push
push
in
clc
cwtl
das
jecxz
ret
or
movl
mov
popa
mov
pop
xchg
das
or
mov
movsl
in
pop
lcall
roll
jmp
and
leave
add
jb
loopne
stc
xchg
dec
fwait
dec
fnop
cmp
loopne
lcall
dec
or
mov
shlb
pop
sbb
xchg
jmp
pop
push
lods
xlat
out
mov
inc
insb
stc
addr16
stc
sbb
xor
imul
pop
sub
nop
pop
call
xchg
lods
pushf
ja
dec
pop
movsb
xlat
loopne
pop
je
xor
sbb
rclb
rol
xchg
xor
sahf
outsb
ret
xchg
std
gs
sbb
mov
inc
fdivl
or
call
push
inc
push
mov
les
add
or
shrb
jl
repz
mov
inc
cld
cmp
push
xchg
inc
or
mov
pop
push
jbe
pcmpgtw
fbstp
xchg
or
testb
push
cmpsb
into
jnp
mov
and
jl
xchg
xor
or
mov
stos
cld
sarb
mov
mov
push
popf
data16
lcall
xor
enter
dec
dec
cmc
mull
pop
sbb
pop
xlat
push
mov
mov
push
pop
adc
aam
jo
add
add
in
rcl
xor
inc
push
pop
jmp
pop
lcall
aad
jge
pusha
jg
xchg
mov
jmp
ja
je
mov
cmp
xlat
addl
stc
cltd
fiaddl
and
add
inc
push
flds
dec
adc
cli
movsl
push
fldenv
pop
pop
out
mov
jg
xor
cwtl
movsl
pop
xchg
fwait
or
or
fdivp
mull
mov
dec
mov
xor
xchg
lret
xchg
aas
jl
adc
mov
fwait
xor
mov
test
js
mov
or
cmp
cwtl
rorl
leave
push
mov
push
test
add
sub
push
add
insb
push
jno
mov
cmc
push
rorb
mov
sti
and
add
xor
ret
pusha
sub
mov
mov
cmc
ljmp
sti
cmp
leave
stos
aam
inc
fmuls
std
cltd
hlt
jns
mov
mov
cld
adc
or
or
repnz
daa
adc
cmp
outsl
sbbb
push
sub
xor
add
shll
rcrb
lds
sub
mov
rcrb
cmp
mov
daa
popf
stos
out
xchg
scas
inc
dec
cmpsl
icebp
dec
jmp
cld
rorl
pop
rcrl
dec
mov
insl
icebp
or
out
pop
sahf
lods
dec
sbb
arpl
cld
or
cli
mov
aam
arpl
test
pop
arpl
lock
icebp
loop
jmp
mov
and
aas
leave
fnstenv
test
das
lret
push
es
adc
xor
xlat
xchg
inc
fidivrs
test
fcomps
in
mov
push
rcr
cld
add
in
test
test
mov
cli
test
mov
int3
imul
aam
popf
sbbl
pop
ret
lock
add
cwtl
subl
cmpsl
cmp
jbe
push
fisttpl
xchg
subl
movsl
adc
jnp
scas
shl
xor
stos
xchg
sub
lahf
dec
daa
ficomps
fwait
loope
inc
lock
dec
jge
popa
leave
loope
sti
push
arpl
stos
xchg
fiaddl
mov
jb
add
arpl
xorb
dec
mov
inc
mov
inc
mov
loope
push
popa
xchg
rorb
push
sub
cmp
inc
jno
jae
jg
loopne
push
iret
or
pop
pusha
jo
ret
adc
adcl
jo
cmp
addr16
stos
cmp
inc
adc
shl
xor
xorb
ljmp
dec
and
roll
jno
sbb
or
dec
andl
or
icebp
adc
bound
sbb
shll
mov
jno
scas
pushf
shl
lret
cld
arpl
push
je
dec
sbb
pop
repnz
or
pop
dec
outsb
cwtl
xchg
dec
mov
cmp
and
or
cmp
shll
mov
popa
xorb
mov
mov
pushf
sbb
out
lahf
add
popa
jno
push
push
mov
and
icebp
dec
cmp
test
push
sub
mov
or
dec
out
pop
adc
lods
in
add
mov
jae
aas
lea
adc
dec
imulb
mov
xor
js
jo
sbb
pop
insb
jo
ss
mov
rcrb
adc
addb
nop
sub
daa
xorl
xor
cmc
aaa
lock
mov
lret
and
ret
decb
jl
icebp
movsl
pop
jge
dec
mov
adc
adc
add
imul
push
mov
cwtl
xchg
or
sub
out
jae
mov
adc
stc
mov
xlat
jbe
movd
push
cmc
push
dec
sar
sbb
sbb
jecxz
and
call
in
jb
loop
test
cmp
cmpl
or
xor
adc
sbb
mov
insb
loope
mov
add
sbb
repz
cmp
into
jecxz
mov
insb
int
xchg
mov
pusha
repnz
mov
cmp
mov
xchg
xchg
cli
jl
cmp
push
and
jnp
shll
outsl
jns
dec
lods
push
shll
mov
adc
sub
mov
mov
shrb
mov
cmp
shrb
xchg
pop
sub
jle
pop
mov
mov
scas
insb
les
iret
mov
ror
in
pop
xor
dec
ret
call
sub
mov
mov
test
inc
fsubl
rolb
movsl
cld
outsl
ret
lea
mov
and
lcall
jecxz
inc
les
pop
das
jg
jle
sub
mov
inc
in
fbstp
ret
hlt
mov
fidivrs
mov
pop
sbb
shl
icebp
push
sub
pop
out
or
inc
fidivl
jns
xor
pop
cmp
jno
ret
enter
les
mov
loope
pop
cmp
mov
sub
pop
mov
shl
adc
pop
fwait
push
cmp
lods
xchg
xor
jnp
jp
lock
jne
sbbl
idivb
mov
push
shrb
pop
and
popf
xchg
inc
or
fistpll
mov
mov
mov
mov
shl
sbb
movsl
adc
push
sub
pusha
cmp
xchg
push
add
sub
push
jecxz
and
push
pop
insb
cld
scas
popf
jl
mov
sub
fdivl
add
mov
fucomp
out
adc
cltd
or
loop
fdivl
inc
pop
cs
adc
pop
imul
je
xchg
push
jge
mov
adc
pop
shll
adc
std
and
inc
dec
fbstp
push
orb
data16
popf
jne
scas
inc
mov
outsb
lret
icebp
aam
pop
nop
repz
ljmp
call
and
shll
cmp
jle
fldcw
add
mov
mov
jg
adc
lods
cmpsl
cmc
loope
dec
pop
cld
fisubrl
sbb
out
mov
rcrl
mov
int
pop
outsl
movsl
in
push
movsb
in
loope
jp
test
andb
push
mov
icebp
dec
jecxz
out
xchg
nop
mull
fstps
in
ret
sbb
xor
std
shll
jg
movsl
push
push
enter
cli
inc
push
aaa
push
mov
fstp
push
cmp
push
shrl
pop
and
bound
leave
mov
or
cmpsl
and
cmpsb
pop
aam
xchg
ds
outsb
in
es
sub
push
fsubrl
push
push
lea
jne
add
adc
cwtl
gs
js
cmpsl
cmp
adc
mov
sbb
or
and
std
cltd
ljmp
mov
jge
imul
dec
imul
insl
fstp
sbb
cs
jb
xor
psllw
or
movsb
and
add
and
fiadds
dec
mov
jge
and
movsl
in
push
inc
stos
and
and
int
push
inc
push
jbe
jmp
rcll
xchg
push
incl
sbb
or
jp
cmp
xchg
xchg
push
push
dec
sub
rolb
je
ja
mov
test
jns
fcomip
mov
fisubs
mov
adc
daa
imul
insb
psllw
hlt
ror
ds
lahf
ljmp
inc
pop
in
repz
jne
adc
fsubs
lcall
xchg
movsl
lret
and
cmpsl
push
dec
xchg
sbb
xor
std
push
insl
pop
fcoms
jle
mov
adc
fdivl
adc
jmp
sahf
and
cli
neg
insb
add
and
mov
das
data16
inc
jmp
push
mov
mov
loop
xchg
fadds
pop
in
sbb
mov
out
andl
lret
mov
imul
jge
lea
adc
pop
push
pop
repnz
jl
lea
sub
cmc
pop
pop
repnz
push
or
sub
shlb
movsb
cli
in
rorl
loop
cwtl
add
pop
je
adc
fwait
pushf
fbstp
dec
mov
cmp
dec
loopne
pop
test
rcrl
mov
scas
xchg
jg
jo
inc
arpl
cmp
ret
fs
pop
mov
push
cmp
push
mov
jg
int3
outsl
fisubrs
rcr
jl
or
mov
ds
je
mov
adc
mov
jle
jno
imul
shlb
cmp
and
lea
jg
outsl
popf
adc
push
xor
push
rorb
and
jne
and
nop
xchg
sahf
cmp
or
cs
cmp
into
adc
add
mov
aas
or
xor
out
mov
test
movsl
add
adc
cmpl
jb
adc
xor
or
es
insl
and
adc
movsb
adc
mov
cmp
hlt
out
sub
fstpl
fs
dec
dec
xor
test
push
mov
fdivrp
xchg
adc
lods
xor
mov
jns
outsl
stos
xchg
insb
add
jl
add
sbb
mov
add
ss
in
data16
inc
sbb
ds
pop
insb
fstpt
or
add
mov
hlt
push
out
and
inc
pop
lock
push
out
call
or
cmp
xchg
sub
pop
mov
xchg
push
iret
addw
js
add
push
call
insb
icebp
and
mov
fcmovb
pop
or
xchg
rcrb
je
loope
cmp
outsb
sti
xchg
pushf
xor
test
mov
mov
cmp
call
jns
dec
out
lcall
cmp
push
adc
push
rcrl
es
cli
call
or
add
mov
adc
cmp
icebp
lahf
mov
mov
mov
cmp
shrb
push
pop
repz
pop
leave
jns
gs
ljmp
hlt
push
shrb
and
lock
ja
add
xlat
insb
add
sti
pop
repz
mov
pop
dec
jp
jnp
and
lds
sub
sbb
mov
cli
xor
fbstp
mov
imul
repnz
adc
cmp
lods
inc
nop
xlat
fdivl
mov
shl
inc
fistl
sahf
aaa
js
scas
push
es
sub
mov
call
and
fisubl
xchg
sub
xchg
inc
faddp
sbb
iret
dec
loop
jb
jno
xlat
cmpsb
cmp
mov
xchg
mov
ret
mov
loope
dec
pop
imul
mov
mov
mov
inc
cmp
inc
fadds
pop
mov
lea
adc
fstpt
mov
sti
xchg
sub
add
es
loopne
scas
int3
arpl
jnp
inc
mov
pop
icebp
and
arpl
cmovl
movsl
jns
sub
push
xchg
push
jle
or
call
jno
dec
jecxz
sub
pop
cwtl
in
into
jp
insb
mov
insb
add
test
xchg
adcb
xchg
pop
mov
sbb
mov
ljmp
fbstp
push
adcb
ja
scas
movsl
xchg
jbe
ret
andb
mov
sahf
xor
popf
xchg
add
mov
add
xor
lds
pushf
xor
nop
push
in
les
jl
xchg
pusha
inc
ficoms
and
xchg
lea
xchg
lds
nop
pop
lds
cmpsb
cmp
pop
push
mov
pop
xchg
mov
xchg
int
leave
pop
nop
daa
mov
inc
xchg
cmpsl
rcrl
sbb
xchg
inc
xlat
lds
sahf
xor
je
fs
int3
test
jp
addl
jbe
ret
lods
jecxz
loope
sahf
xor
jo
insl
enter
ficoms
jmp
inc
iret
data16
mov
shll
sbb
jg
lds
ds
movsl
iret
data16
adc
lahf
into
gs
test
lcall
fwait
or
in
add
jo
out
test
mov
loopne
pop
cmp
mov
lret
ss
mov
aam
pop
loopne
or
mov
pushf
xor
lea
push
pop
dec
jecxz
cmp
stos
jo
mov
xor
push
jl
addl
ja
or
in
push
jmp
cmp
sub
jmp
xor
pop
arpl
shl
fidivl
xor
shr
mov
mov
outsb
inc
mov
jne
mov
dec
sarb
xchg
sub
ds
mov
pop
out
addb
jno
xchg
sub
fstl
or
sub
rcll
xlat
mov
pop
test
movsl
cmp
pusha
sub
xchg
push
xchg
mov
cmpsl
ds
push
dec
out
mov
mov
outsl
fidivl
arpl
xchg
mov
in
xlat
or
cmp
dec
fistps
mov
std
lods
lods
cld
xchg
fcmovne
push
out
icebp
and
and
outsl
xchg
cmp
jb
and
mov
imul
jnp
push
adc
jg
cmp
pop
mov
enter
in
notb
sbb
push
arpl
enter
int3
mov
cmp
adc
adc
pop
dec
outsl
xchg
fidivs
xchg
mov
mov
hlt
rcrb
pop
adc
clc
pop
insl
mov
and
shlb
push
adc
dec
and
pop
pop
insl
lock
shlb
adc
clc
inc
sbb
dec
bound
cwtl
imul
mov
dec
fcomip
or
incb
jb
mov
push
lods
ss
mov
enter
testb
imul
int3
test
pop
mov
pop
icebp
sbb
mov
fnstenv
or
in
fnsave
out
xor
push
iret
data16
xchg
cs
lods
inc
or
das
lret
bound
cltd
xor
sub
lods
mov
in
incb
mov
ss
mov
mov
andl
lds
hlt
or
popa
dec
shlb
and
mov
fscale
xchg
mov
inc
arpl
jb
test
ljmp
jo
add
xchg
sub
pop
dec
lock
stos
inc
mov
ret
cld
xchg
stc
lock
adc
lea
stos
xchg
stos
fcmovnb
mov
div
dec
loope
and
call
je
test
mov
out
push
sbb
loopne
dec
cmp
fwait
xchg
xchg
scas
and
out
pop
outsl
push
or
xor
fcoms
mov
mul
fmull
push
cmp
icebp
mov
adc
test
ret
add
mov
push
sbb
mov
test
aam
sbb
sti
cmc
xor
daa
xor
mov
and
push
iret
outsl
lahf
xchg
shr
daa
and
and
jg
xchg
sub
lods
inc
iret
mov
das
pop
fnsave
imul
cltd
mov
jno
push
std
sbb
cmp
sbb
jmp
sbb
xchg
std
and
out
inc
fisttpll
mov
les
xchg
clc
xor
sub
ja
js
inc
data16
addb
insl
pop
sub
ja
hlt
jno
cmp
repnz
push
adc
stos
jnp
and
js
mov
mov
mov
in
cmp
lret
inc
inc
mov
loopne
jo
inc
mov
sub
jl
iret
fs
stos
add
sub
cs
jno
fsubl
cmp
subb
jge
mov
sbb
lcall
jo
xor
lds
mov
scas
decl
dec
and
jbe
jne
xchg
jp
cmp
mov
mov
pop
lcall
cltd
in
mov
lret
ja
les
insb
out
cltd
scas
nop
sub
fisubrl
jecxz
frstor
inc
test
lret
rcrb
xchg
mov
out
iret
mov
lods
aaa
outsb
aad
ljmp
jg
rcrl
sbb
popf
push
cmpsl
xor
in
sbb
popl
mov
mov
pushl
sbb
xchg
arpl
test
mov
jnp
pop
sarb
loop
jb
rcl
scas
jmp
cmpsb
insl
mov
popa
clc
jmp
pushf
xchg
cmc
jns
daa
hlt
push
in
mov
in
and
iret
adc
jge
jnp
xor
mov
dec
jnp
adc
fwait
sub
jl
pop
add
repnz
add
orb
xor
cwtl
mov
dec
sbb
mov
sub
or
stos
xchg
pusha
divb
xor
dec
cmpsb
ja
orb
int3
aam
subl
jg
sub
adc
xorb
and
push
add
xchg
jmp
xor
mov
xchg
out
in
sub
dec
test
mov
rcll
sub
test
icebp
xor
cmc
aad
in
mov
sbb
cmpsb
adc
jnp
add
dec
cmp
sbb
cli
add
out
xchg
stc
inc
xor
mov
dec
mov
cmpsb
cmp
push
jle
dec
daa
mov
push
cmp
insl
fwait
inc
xchg
and
adc
mov
arpl
xor
fildll
push
mov
xor
sbb
cmpb
ljmp
movsl
insl
sti
iret
outsb
rcl
mov
aas
ljmp
pop
test
aaa
filds
hlt
inc
ficoml
add
stos
pushf
mov
dec
call
add
push
stos
outsl
push
shl
rcrl
sub
cmc
call
xor
cmc
jo
inc
gs
cmp
xchg
and
cmp
movsl
push
mov
test
popa
xor
xor
out
sahf
xor
push
jb
inc
dec
jnp
decl
mov
push
pop
inc
scas
fisttps
es
push
adc
je
aas
sti
pop
xor
outsl
mov
inc
mov
add
pop
lret
lock
xchg
push
lret
adc
inc
mov
das
cmp
ss
movsb
push
leave
repnz
mul
mov
or
test
jno
loope
inc
fsubrl
fcomps
mov
incl
mov
in
test
not
xchg
push
aam
fisttpll
out
fisubl
in
inc
leave
and
xor
sahf
xchg
shlb
clc
inc
mov
sbb
and
cmp
pushf
or
mov
scas
mov
pop
jbe
jae
cmp
inc
nop
cmp
dec
cmc
lret
hlt
dec
fnstenv
cmpsl
cmp
or
sub
sbb
cmp
hlt
sarb
nop
xor
outsl
jmp
sbb
sub
fisttpll
sbb
loopne
add
dec
test
add
pop
ficoms
insb
mov
inc
mov
xor
gs
inc
lea
popa
ss
or
jle
stos
outsl
pop
dec
outsl
ret
mov
aaa
cmp
repz
pop
js
cmc
bound
inc
mov
dec
add
cmp
dec
cwtl
ret
pop
sbb
inc
scas
popa
popa
xchg
std
push
es
fwait
insb
jl
ret
xor
inc
inc
int3
xor
ret
mov
pop
pushfw
lcall
jne
pop
bound
fwait
das
pop
and
sub
pusha
insl
rorb
jle
imul
mov
test
push
shlb
mov
ret
fwait
xchg
jne
add
aam
in
dec
mov
icebp
mov
xor
nop
daa
mov
in
aaa
aam
mov
data16
xor
jae
loopne
cmpsl
pop
cmc
cmpsb
pop
rolb
mov
daa
jmp
dec
mov
in
add
cmp
adcb
hlt
dec
sbb
mov
pop
orl
cmp
sub
jmp
xor
push
cltd
test
nop
mov
xor
mov
pop
fcmovbe
repz
jecxz
fstpt
or
lret
mov
sbb
fcomps
or
pop
shll
loop
pop
inc
cmp
jb
cmp
xchg
pop
aam
mov
pop
stc
lcall
sub
pop
int
jns
insb
dec
aam
in
jo
dec
push
das
scas
popa
cltd
sub
mov
cmovge
jno
mov
or
and
andb
outsl
xchg
or
lea
xchg
jns
sbb
loop
call
loop
je
or
pop
or
inc
lret
gs
xchg
jl
outsb
mov
aas
mov
repnz
dec
leave
push
mov
test
mov
outsb
stc
mov
mov
mov
mov
fsub
and
outsl
inc
enter
push
icebp
cwtl
xor
cs
jbe
insb
mov
stos
jne
dec
fwait
daa
sub
push
dec
xchg
lcall
sbb
inc
lods
jl
add
pop
cmp
jp
mov
stc
xchg
jl
sub
orl
cmpsb
test
jg
jb
sub
int3
lea
jmp
scas
push
leave
cld
int3
das
fnstsw
add
out
lcall
or
iret
out
aam
push
cli
fst
insb
bsr
fisubrs
das
mov
jae
xor
adc
mov
loop
inc
mov
lahf
jmp
lods
pop
rcll
jno
mov
adc
out
mov
inc
mov
mov
icebp
or
sar
rcl
paddw
add
adc
loopne
out
and
repz
and
inc
mov
dec
sub
lds
rolb
jge
dec
pop
stos
inc
lea
mov
or
jge
cli
scas
dec
cmp
ds
pusha
test
pop
xlat
popa
clc
mov
inc
mov
out
jge
test
cmc
inc
dec
in
mov
lods
cs
cs
jno
shll
repnz
mov
push
es
roll
add
fiadds
in
out
aam
and
mov
cmp
ds
cli
sub
add
arpl
test
push
or
xor
cmpsl
popa
cmp
jo
pop
mov
mov
xchg
pop
dec
imul
dec
mov
inc
shlb
sbb
sub
sub
sbb
jnp
pushf
inc
fldenv
js
mov
xchg
mov
jmp
add
inc
repz
fisubl
jecxz
subl
lea
pop
mov
jnp
pop
xchg
outsb
mulb
sti
or
addl
and
add
or
xchg
mov
aaa
cmc
shl
xchg
xchg
jmp
mov
stos
data16
jno
pop
sub
iret
cmp
cmp
out
mov
push
or
jae
mov
std
mov
push
rclb
sbb
mov
sti
xchg
and
pop
push
sbb
push
inc
icebp
and
pop
aaa
add
mov
loop
fdivrs
add
out
xchg
adc
movsl
sbb
stos
fs
push
stos
jecxz
jae
xorl
pop
cmc
in
adc
call
in
sub
cmpsb
sbbb
in
add
lret
sub
ds
in
cmp
dec
mov
rcrb
mov
adc
lods
je
aaa
dec
jecxz
and
loope
push
scas
jle
repnz
scas
inc
cmp
jle
cwtl
jle
jle
pop
xor
stos
mov
cli
xor
xorl
cld
mov
dec
repz
lock
dec
iret
push
inc
pop
ret
push
push
daa
clc
xchg
xchg
fisubl
inc
adc
pop
dec
imul
dec
repnz
fs
jae
fmull
xchg
out
and
ret
ja
inc
push
lds
inc
dec
add
or
adc
dec
xchg
sub
pop
scas
push
les
out
ret
jne
je
fnstsw
pop
inc
ret
loope
mov
jne
push
push
sbb
jo
dec
mov
dec
sarl
pop
in
ss
smsw
jmp
mov
inc
mov
shlb
xchg
jge
pop
fildl
adc
into
inc
sti
push
in
popa
jmp
rcr
inc
call
push
shrl
mov
in
pop
or
fisttpl
inc
popf
in
cmpsb
or
adc
push
leave
sbb
or
cwtl
sub
or
mov
lods
and
stos
inc
das
inc
xor
push
push
ja
jge
scas
cwtl
maskmovq
testl
fisubs
call
jb
adc
jmp
scas
and
sti
mov
mov
mov
pop
imulb
sub
sub
dec
xor
mov
sbb
or
mov
sub
lcall
sbb
scas
sbb
and
in
cwtl
xor
fisubs
xor
xor
in
xlat
push
out
push
mov
mov
in
fwait
mov
outsl
add
out
clc
cmp
test
fwait
or
fdivl
push
mov
cmp
cmp
insb
mov
adc
xchg
push
sti
add
and
jg
pop
add
cmp
imul
ret
inc
and
dec
cmp
dec
bound
clc
pop
sub
push
push
das
jl
mov
cwtl
scas
lods
aaa
fdivr
call
pop
scas
in
jae
es
paddw
adc
or
sbb
jns
in
das
xlat
adc
xlat
pop
push
in
cmp
xor
repnz
iret
mov
jp
mov
add
sti
cwtl
add
fdivl
sbb
fdivrs
pusha
lahf
pop
jmp
mov
das
push
cmpb
addr16
cltd
popa
dec
xor
bound
cmpl
cwtl
jl
and
ss
fidivrl
pop
les
add
push
adc
imul
inc
xlat
and
je
clc
int
iret
xor
cmp
pop
in
lods
aad
jb
int
xchg
jmp
mov
mov
aaa
mov
mov
lea
mov
or
and
xorb
xchg
xor
loope
aam
movsl
sarl
adc
iret
pop
call
in
loope
add
mov
stos
outsb
je
daa
inc
cmp
fiaddl
push
jle
sahf
ss
iret
loop
or
sub
or
inc
push
and
popa
je
push
popf
adcb
sbb
cwtl
mov
push
insl
fwait
mov
out
adc
pop
aaa
fldl
ds
jle
nop
mov
insb
mov
loope
fwait
mov
dec
ret
jne
mov
test
insl
sub
addb
push
icebp
push
leave
mov
mov
imul
test
xor
dec
test
cli
mov
dec
mulb
test
xor
add
dec
jecxz
leave
lds
daa
jmp
lret
mov
mov
adc
lods
enter
jmp
movsl
push
iret
sub
jo
ret
push
cmc
idivl
mov
sbb
pop
icebp
in
mov
ljmp
test
into
dec
cli
sub
repnz
sbb
test
add
mov
ret
mov
popf
pop
jns
pop
adc
mov
out
jmp
outsb
fadds
or
ds
iret
jnp
in
adc
fstp
xor
sbb
adc
fidivs
push
add
es
les
icebp
cmp
push
stos
pop
push
add
test
xchg
aaa
icebp
daa
mov
cmpl
mov
pop
cld
scas
mov
jp
mov
mov
daa
mov
or
fisubrl
cmp
test
aam
into
mov
and
loopne
push
arpl
inc
pop
loopne
pop
test
les
out
nop
or
loopne
push
rcrb
fnstcw
shrb
cli
sub
iret
loopne
push
lret
in
sbb
lret
mov
jno
add
stos
jne
and
or
xchg
sub
cwtl
in
xor
add
dec
push
fcomip
mov
xor
je
pop
jle
xor
negl
mov
fcoml
add
mov
aam
pop
scas
rol
test
ficoml
lods
flds
hlt
lock
nop
insb
repnz
pop
mov
fwait
mov
imull
mov
xchg
xchg
in
test
dec
mov
into
xchg
sbbb
xor
in
cmp
mov
sbb
movsb
icebp
or
out
aam
mov
leave
inc
out
lea
pop
pushf
mov
loope
mov
lock
mov
fstl
loope
shrb
sarl
into
cmpb
bound
shlb
ljmp
mov
clc
cmp
mov
lock
and
loop
out
sahf
xchg
cmc
sbb
pop
jge
pop
ret
loop
push
in
cmpsl
add
mov
repz
lock
stos
test
loop
test
xchg
xlat
dec
xor
dec
in
mov
daa
lods
test
push
mov
imulb
jmp
inc
mov
mov
popf
rcrb
xlat
and
dec
mov
std
mov
jl
mov
mov
xchg
pushf
xor
adc
js
ljmp
das
xlat
pop
mov
test
je
cmp
mov
inc
in
out
push
or
cmpsb
pop
pop
or
imul
mov
mov
shll
mov
pushl
dec
call
mov
nop
push
mov
jmp
call
divl
cli
mov
lahf
pop
iret
in
stos
int
out
rcr
arpl
mov
mov
adc
sbbb
xor
fbstp
shrb
aas
inc
and
inc
or
jb
jne
jp
inc
xchg
adc
fbstp
addl
sbb
clc
shlb
sbb
hlt
jge
xchg
xchg
add
xchg
sbb
jg
loope
jmp
lds
mov
pusha
sub
bound
inc
arpl
movl
jl
addl
jp
test
lock
out
sbb
fildll
jle
adc
inc
test
lret
lock
xchg
cmp
jb
adc
mov
andb
mov
adc
dec
cltd
andb
mov
loope
loop
cmpb
test
fldenv
popa
es
xor
jbe
pop
and
sbbb
dec
mov
into
dec
fs
pop
sbb
xchg
sub
mov
subb
cmp
inc
push
stc
adc
pop
into
push
andl
dec
mov
in
sub
add
shl
mov
ret
repz
and
jge
ja
and
sub
sbb
cltd
sbb
sub
dec
xor
pop
cmp
insl
mull
pop
fwait
dec
int3
cmp
lret
inc
xlat
dec
push
mov
fisttpl
xchg
mov
mov
imul
sub
stos
pop
dec
fs
ds
mov
shrl
out
mov
sahf
xor
loop
sub
pop
int
movsl
mov
add
pop
xchg
fildl
inc
xor
subw
jne
jno
aaa
shld
clc
xor
insb
jle
push
nop
fiadds
push
pusha
clc
xchg
inc
pop
add
pop
mov
imul
cmc
cmp
adc
cmpsb
or
sub
dec
mov
pop
sub
dec
jno
cmp
cmp
mov
pop
add
inc
ss
xor
sub
xor
loopne
cwtl
xchg
popa
mov
fisttpl
daa
jl
jb
cmp
inc
xchg
xor
sbb
out
insb
popf
or
lods
inc
addb
sub
sbb
pop
inc
popa
clc
cmpl
icebp
ss
and
lret
jmp
adc
std
std
add
test
xor
mov
stc
mov
xchg
pop
aas
rcrl
out
fwait
mov
cmc
loope
mov
into
ljmp
cwtl
cltd
data16
jbe
sbb
test
or
insl
loope
sub
outsl
push
popa
dec
stos
jg
push
fcoms
lcall
xchg
adc
les
pop
lock
add
stos
cmp
or
in
xchg
push
in
pop
in
bound
ret
mov
mov
jg
xchg
pop
movb
add
sbb
mov
mov
jae
scas
mov
dec
ret
fdiv
inc
mov
int
hlt
ljmp
hlt
or
sbb
and
sbb
jg
jp
jne
jge
je
jg
scas
cmp
push
jmp
mov
in
cltd
das
repz
mov
sbb
jmp
call
and
insl
roll
jmp
xor
adc
and
jg
lret
mov
test
jmp
fdivrs
adc
xchg
negl
sub
push
xlat
push
dec
jno
arpl
push
in
jbe
jle
ja
adc
cmp
into
push
sarl
orl
cmp
sbb
ret
mov
xchg
jp
xchg
sub
xchg
nop
xchg
jnp
add
mov
mov
mov
cld
or
mov
jge
mov
push
pop
lock
idivl
in
fs
aam
stos
and
fcompl
mov
mov
jmp
xchg
sarb
sbb
mov
rorb
nop
pop
enter
cld
lds
add
imul
sbb
movsl
movsl
cmp
test
daa
adc
jne
mov
jmp
test
push
pop
pop
stc
movsb
pop
push
stc
outsl
jmp
std
mov
xor
mov
test
xchg
add
pop
mov
xchg
fbstp
mov
lds
xor
shrb
mov
mov
sbb
mov
lahf
fmull
pop
sbbb
mov
adc
mov
aas
test
cli
pop
pusha
sti
xor
arpl
push
pop
xor
dec
xchg
inc
mov
pop
xor
mov
pop
push
arpl
mov
sbb
sbb
mov
test
fildl
mov
ret
sub
jmp
lods
in
sbb
addr16
sahf
cwtl
lcall
sti
gs
mov
imul
test
mov
arpl
push
cmp
mov
sbb
fucomi
into
adc
fcmovnu
leave
add
fidivrs
push
lods
or
jg
mov
push
mov
mov
dec
sbb
faddl
or
lea
cmp
std
push
leave
fsubl
das
ss
push
mov
push
mov
jne
pop
cltd
sbb
cmp
enter
fildll
or
lods
push
push
imul
out
inc
mov
adc
mov
adc
cmpsl
fwait
inc
sarb
pop
push
jmp
push
jne
xchg
dec
push
pop
fbstp
add
rorb
xchg
add
mov
push
imul
ljmp
imul
in
inc
pop
lds
xor
xchg
pop
cmp
fsubr
jge
movsb
inc
mov
push
mov
xchg
inc
push
mov
negl
aam
mov
dec
lods
sbbl
cli
movsl
lds
out
mov
in
stos
mov
xchg
jge
stc
dec
loop
int
xorl
imul
add
popf
mov
aaa
fisubrl
inc
lret
sahf
insb
adc
sub
test
fisubrs
mov
inc
mov
push
pop
divb
repz
ret
xor
inc
mov
movsb
mov
mov
test
push
movl
addl
mov
scas
push
out
fcomip
jne
and
jbe
xor
jbe
xchg
sub
cmpsl
mov
fldl2e
iret
data16
shlb
ds
test
out
test
mov
sub
adc
sub
and
inc
dec
fbstp
gs
mov
fiaddl
sbb
mov
push
mov
rclb
fnsave
fidivs
sub
xchg
pop
cmp
xchg
push
sbb
mov
fnstsw
iret
push
and
push
das
push
in
pusha
jb
or
xchg
sub
aam
sub
sbb
inc
pop
insb
iret
data16
jp
lods
mov
in
cmp
or
inc
and
mov
xchg
jb
shlb
inc
fdivp
or
cmp
data16
inc
pop
test
push
mov
cmp
add
pop
xor
rcrl
loopne
test
jbe
cmpsb
xchg
fdivs
mov
or
cmp
sarl
rorl
lods
pop
out
fucomp
jbe
and
jbe
icebp
and
and
dec
jecxz
or
data16
ljmp
xchg
lahf
mov
jmp
scas
or
or
jle
es
roll
aam
and
pop
jnp
jecxz
jg
je
call
insl
rorl
mov
add
adc
or
push
jnp
inc
out
pop
and
aaa
xchg
inc
movsb
cmp
out
xchg
inc
push
pushf
aaa
out
test
shrl
mov
mov
fcompl
or
jns,pn
pop
push
push
movsl
mov
out
scas
test
jne
mov
fcoml
aas
pop
sub
mov
sbb
sbb
insl
les
repnz
loop
test
out
outsb
dec
in
jmp
imul
movsl
lcall
clc
mov
fstpt
xor
jbe
pop
bound
test
mov
xchg
mov
cmp
push
inc
mov
pop
push
ret
sahf
push
mov
pop
jnp
popl
iret
es
inc
sub
adc
jb
cmp
lds
outsl
xchg
push
ret
dec
mov
fs
dec
incb
lret
pop
pushf
jp
inc
test
sub
fistpl
add
inc
test
push
dec
rolb
push
loope
jnp
jecxz
test
mov
jl
push
adc
loop
sbb
leave
dec
adc
xchg
mov
fs
imul
adc
aad
movsl
jg
cmp
scas
xor
push
pusha
lret
adc
scas
imul
dec
sbb
jmp
mov
and
lret
gs
jno
outsl
leave
push
mov
lret
jnp
aaa
xchg
xchg
jae
xchg
jnp
pop
adc
add
ret
out
push
das
xchg
icebp
adc
stos
sub
stc
les
xorb
mov
cld
mov
std
fdivrl
std
das
inc
xor
imul
test
hlt
mov
fisttpll
inc
push
cmpl
ds
adc
lock
int
inc
sub
addl
adc
jge
jp
mov
xchg
pop
jge
cmp
pop
or
in
lret
insb
and
das
cmpsl
mov
gs
cli
int3
or
sub
lods
dec
les
xchg
iret
cmp
jae
icebp
inc
pop
insl
pushf
inc
mov
xor
dec
cmp
cs
js
inc
cmp
mov
xchg
popf
mov
xor
adc
fs
jb
push
lcall
pop
divl
hlt
gs
xchg
cld
pop
je
sti
mov
push
or
or
add
into
rol
stos
add
loope
add
adc
fdivs
in
push
push
or
rcl
test
lahf
push
add
adc
inc
push
or
leave
and
or
cmp
xor
hlt
loop
js
add
xchg
cmp
and
rcll
out
sub
sbbl
sbb
dec
and
test
xchg
xchg
add
xor
or
shrb
mov
and
sarb
out
lods
arpl
jae
out
sub
jb
hlt
mov
stos
inc
jne
stc
fldl
mov
mov
or
jae
lock
in
loope
jnp
jle
in
addl
mov
daa
xor
stos
leave
push
and
insb
clc
lock
sbb
ljmp
xchg
inc
xlat
add
push
mov
adc
pop
xchg
popf
xor
mov
call
dec
sti
sbb
dec
fldcw
aam
sub
call
pop
add
jl
roll
sbb
stc
std
jns
push
outsl
mov
pop
jno
stos
cs
pop
cld
into
adc
sbb
jns
jl
enter
adcl
or
movl
and
arpl
pop
divl
jle
xchg
adc
pop
rcrl
jno
pop
or
fs
mov
sahf
xor
xor
es
add
lcall
sbb
mov
aam
cmpsb
mov
sbb
out
mov
xor
mov
ret
movsl
xchg
cmp
andl
rcrb
xchg
dec
xchg
cmp
and
mov
sub
js
nop
cmp
sbb
pinsrw
rcrl
insb
adc
rclb
inc
or
rcrl
rcrb
add
push
mov
fwait
inc
test
mov
xchg
cmp
or
inc
cmp
mov
cmp
faddl
cmp
xchg
cmp
mov
mov
add
push
clc
xlat
les
add
jp
repz
fiaddl
fisttpll
inc
or
or
mov
in
push
clc
jns
lea
outsb
sti
data16
les
mov
mov
xchg
xchg
mov
xchg
addr16
je
push
xchg
negl
add
push
mov
dec
cmp
xchg
mov
mov
cli
repz
out
out
iret
movsb
sti
loop
xchg
mov
xchg
lds
xor
rorl
cmp
addb
lea
push
add
push
arpl
mov
mov
push
gs
or
lret
in
ret
test
andb
jbe
mov
push
dec
adc
add
jg
add
aam
and
jl
rorl
sbb
xlat
ja
dec
mov
mov
fwait
lcall
repz
aaa
stos
xor
shl
xchg
add
sahf
call
add
sub
push
outsl
out
xlat
lock
push
add
xor
lods
sub
xchg
mov
aaa
ja
add
popa
ss
sahf
sub
movsb
xor
xor
cmpsb
in
and
adc
dec
mulb
xchg
lods
or
mov
mov
dec
frstor
sub
data16
sbb
push
push
push
jo
sarb
insb
sbb
cmovge
fistps
sbb
int
ljmp
fstpl
mov
test
lahf
cmpsl
fucomip
push
and
pop
cmp
xchg
add
mov
sub
jg
ret
cmpsl
gs
clc
or
ret
pop
ror
pop
sbb
pop
adc
loop
test
fdivrs
push
aas
lcall
push
add
movsb
sti
pop
pop
dec
fidivrl
mov
push
push
pusha
repz
sbb
outsb
std
pop
mov
test
stos
xor
push
or
fwait
pop
mov
je
xchg
mov
fsub
jge
mov
mov
mov
add
popa
jp
jecxz
jge
sub
jmp
sub
test
jne
mov
movsl
adcb
push
cld
ja
aam
jecxz
cmp
jae
rclb
out
mov
mov
mov
xchg
test
movsb
xchg
loop
mov
mull
outsl
negb
lea
mov
cmp
fidivrs
lods
sbb
cli
dec
jbe
push
out
fmul
lea
mov
mov
movsl
pop
stc
dec
lods
sbb
jl
mulb
fs
pop
lret
mov
lret
loopne
std
fistps
add
push
fwait
inc
lods
ss
xchg
cmp
std
fs
pop
add
mov
icebp
pop
sub
fldenv
mov
lret
aas
mov
xchg
cmp
outsb
dec
pusha
out
jg
movsl
imulb
sbb
pop
add
mov
addl
stc
mov
push
mov
push
sti
sub
mov
loopne
shrb
out
add
lods
mov
aas
mov
jo
push
les
mov
mov
cld
push
sub
mov
pop
out
jae
hlt
popf
inc
jp
dec
adc
imul
call
std
mov
dec
sahf
sub
sbb
inc
jp
fiaddl
and
jg
mov
inc
insb
popa
adc
jl
sbb
xchg
cmp
lods
test
movsb
adc
jl
jp
push
movsb
cmpsl
ret
and
jbe
lods
adc
and
arpl
jbe
into
xchg
add
pop
sub
dec
es
jg
sub
cmp
fisttpll
add
aaa
xrelease
and
int3
inc
cmp
gs
jg
or
test
mov
cmp
adcb
pop
mov
sub
pop
mov
js
mov
test
xor
stos
xor
es
add
mov
stos
lcall
scas
notl
push
popa
movsl
flds
es
mov
xor
movsb
iret
in
in
sbb
outsb
push
sbb
out
jp
add
sub
mov
jmp
add
push
popa
mov
outsl
pop
push
int
js
lea
jge
mov
nop
aas
fidivrs
mov
pop
and
or
std
pop
pop
push
pop
mov
stos
not
jg
mov
scas
fidivl
adc
imul
mov
push
xchg
stos
push
lea
imul
cmpsb
fiadds
shrl
add
sub
xchg
test
mov
push
mov
scas
ret
xchg
ljmp
stos
aam
or
out
jle
scas
sti
daa
mov
xor
or
aaa
xchg
andb
xchg
orb
sbb
and
jne
xor
cmpsl
xchg
jecxz
and
roll
inc
pop
lcall
popf
aam
lahf
xlat
fdivrl
enter
pop
hlt
cmp
sub
mov
pop
es
dec
ds
js
sub
push
fwait
mov
cmp
daa
cmp
mov
enter
daa
mov
push
ljmp
lods
mov
inc
mov
fwait
cmp
pop
pop
xchg
inc
incl
pop
stc
js
lcall
data16
jo
repnz
dec
or
outsb
push
dec
pop
add
jl
ret
ljmp
mov
in
mov
imul
daa
mov
hlt
xor
pushf
scas
push
ljmp
das
mov
insb
pusha
fs
xchg
xchg
jg
cmp
rorb
mov
stos
or
outsl
outsb
pop
cltd
aas
repz
orb
sub
mov
xlat
cmpsl
loop
cmpsl
pop
mov
sub
jp
or
or
icebp
pop
jnp
lods
jecxz
idiv
mov
call
test
pop
call
fcoms
mov
subl
movsl
sub
inc
jnp
imul
sbb
push
aad
xchg
cmp
add
test
divl
gs
or
jge
call
cmp
mov
shrb
jle
jmp
cltd
gs
les
rcl
mov
movsl
int
sbb
sub
push
add
sbb
inc
lgdtl
mov
data16
in
scas
out
imul
pop
xor
out
push
leave
or
dec
call
cwtl
aas
lods
dec
push
clc
xchg
fs
mov
push
adc
pushf
pop
inc
mov
mov
push
jnp
add
add
popa
pop
xor
cmpsb
sbb
test
mov
scas
xor
mov
pop
enter
push
negl
add
xor
les
gs
push
xchg
dec
push
test
test
mov
pushf
inc
xlat
jl
inc
lahf
mov
call
negb
or
push
out
or
fidivs
sub
int3
xchg
enter
sub
mov
cmp
loop
shll
xorl
cmp
into
xchg
adc
sarb
inc
push
cld
or
pop
mov
mov
scas
sub
stos
bswap
xchg
popf
outsl
in
js
mov
inc
ret
out
adc
dec
repnz
sub
sub
adc
fstpt
mov
enter
push
push
add
js
mov
sbb
aas
leave
comiss
pop
mov
push
jns
jo
leave
addr16
cltd
pop
mov
dec
jp
sub
xchg
ds
mov
jmp
sub
fmulp
int3
xchg
adc
nop
xlat
or
dec
pop
sarl
cltd
jo
sbb
push
out
ss
push
ret
stos
pop
flds
inc
sub
idivb
sub
outsl
pop
sahf
cmp
mov
mov
xlat
aam
mov
adc
pop
out
adc
mov
shll
sbb
popa
dec
cs
icebp
inc
xchg
inc
dec
in
loope
xchg
xchg
inc
adc
mov
cmp
int
and
jmp
adc
outsb
adc
jecxz
jnp
adc
and
stos
and
mov
lcall
sbb
loopne
sbb
sbb
daa
mov
inc
mov
push
je
ret
int3
push
pop
mov
cmp
shrl
mov
mov
dec
xchg
test
ficomps
lret
popl
adc
in
pop
jg
cmp
mov
xchg
mov
mov
insb
mov
lret
inc
or
jge
insl
out
inc
imul
add
mov
aas
movsl
push
jmp
jmp
cli
or
add
push
jecxz
jo
cmc
sub
aad
rcll
pop
xchg
inc
aad
mov
jge
leave
mov
test
add
push
daa
jle
or
push
pop
std
cmpsb
fld
xchg
adc
adc
inc
mov
loope
mov
hlt
and
mov
ja
aaa
pop
decb
or
pop
lea
pop
mov
adc
fldl
aam
pop
inc
mov
scas
rcll
inc
or
or
and
enter
into
and
mov
sbb
aad
jb
movsb
or
lods
outsl
cmpsl
jo
jle
cmpsb
cmp
rol
nop
push
adc
gs
push
in
jns
ljmp
mov
gs
pop
mov
jne
jecxz
loopne
in
cmc
xchg
cmc
xchg
inc
shlb
push
add
xchg
inc
cmp
insb
in
fsubl
scas
sub
pop
sbb
loopne
lods
cs
dec
fs
mov
jg
mov
test
movsb
das
pusha
mov
out
mov
cmpsb
cmp
xlat
cmpsl
mov
dec
stc
in
jae
lcall
sbb
orb
call
xchg
cs
adc
push
jg
jo
xchg
and
ret
or
xor
fnstcw
das
add
ja
aad
cltd
mov
push
and
aaa
fiadds
lret
fbld
mov
and
dec
orb
imul
and
rcr
pop
mov
cld
mov
push
xchg
jmp
cmp
cmp
xor
cmp
enter
ret
rcl
jg
pushf
push
add
lds
movsb
notl
add
hlt
andl
lds
xchg
enter
dec
or
sti
pop
test
mov
cmpb
arpl
or
push
stc
pop
sbb
inc
sbb
add
shlb
jb
sbb
dec
adc
test
iret
testl
lret
sahf
std
fs
sbb
popf
xor
inc
or
cli
pop
repz
arpl
loop
mov
test
jg
lahf
xlat
movsl
sub
jns
xor
and
clc
sarl
xchg
cmp
sti
xchg
ds
push
cmpsl
sub
mov
sub
and
xor
xor
sarl
jp
movsb
outsl
jne
nop
cmp
dec
adc
sub
xor
repz
icebp
push
mov
enter
es
push
roll
fcmovu
jnp
mov
xor
adc
adc
rcll
sbb
jp
inc
or
xchg
cmp
pop
xchg
leave
and
cmp
mov
int3
and
jl
adc
es
push
jp
call
cli
mov
mov
add
ja
push
enter
ror
outsl
movsb
xor
test
adc
sahf
cmp
and
js
cmp
adc
arpl
cmpsb
dec
xchg
and
inc
lret
mov
pop
adc
mov
adc
push
dec
jg
xor
movsb
xor
inc
repz
dec
xor
push
add
sub
loopne
clc
icebp
sbb
pop
bound
jge
jle
xchg
or
loope
push
mov
aam
mov
sub
test
clc
dec
filds
add
xor
js
shl
insl
loop
mov
or
mov
pop
xor
jle
or
sub
xor
orl
cmpsb
jb
xlat
mov
outsl
jmp
std
aam
pop
lcall
das
adc
outsl
fidivs
xchg
inc
jnp
pop
into
sbb
mov
mov
and
mov
mov
daa
stos
pop
mov
rcr
xorl
mov
xor
push
jmp
outsl
out
insl
push
adc
lds
pop
dec
jecxz
movsb
ret
loopne
cld
out
dec
adc
cmp
insb
jmp
push
push
xor
adcb
lods
dec
mov
roll
fnstenv
dec
sbb
dec
pop
adc
loope
mov
icebp
faddl
sub
cld
pop
stos
push
std
aad
mov
add
scas
mov
mov
add
orb
or
sbb
dec
pxor
mov
std
sbb
mov
mov
mov
hlt
push
cltd
mov
jo
xor
and
test
push
into
jge
movsb
daa
fldt
and
shrb
lock
stos
xor
mov
lods
orb
pop
dec
push
cli
data16
scas
xor
xor
int
adc
xor
adc
jo
mov
lods
loope
fdivs
pop
xchg
psubsb
ret
iret
nop
adc
cmp
popa
divb
fidivl
or
xchg
or
pop
enter
mov
insl
repnz
adc
dec
mov
loope
push
aas
mov
fstpt
scas
xor
mov
cmp
bound
xchg
or
push
cmp
out
int3
stos
cltd
inc
sbbl
orl
ss
pop
adc
xchg
fildl
and
lods
shll
mov
add
mov
add
cmc
push
mov
out
xor
add
cltd
push
xor
xor
cmp
inc
xchg
sarb
xchg
mov
je
out
xchg
mov
cmp
in
jo
xor
pop
push
in
outsl
pop
or
push
mov
nop
test
je
stos
xor
mov
mov
jmp
adc
sahf
lret
mov
dec
daa
shll
cmpsb
xor
test
mov
lds
mov
aam
bnd
and
mov
or
jae
xchg
push
xchg
inc
pop
lret
bswap
aas
adcl
mov
xor
mov
insl
in
stos
mov
cmpsl
xor
das
call
lea
in
mulb
cmp
lret
and
sbb
mov
mov
push
xchg
pop
shrl
xchg
add
clc
pop
jne
mov
insb
movsl
xor
out
ljmp
jg
xorb
jno
cmc
mov
mov
pushf
sbb
popf
inc
and
xor
xor
xor
inc
sbbl
loopne
cli
pop
cli
cld
mov
or
fistpll
push
lahf
cmp
fwait
cmp
mov
movsl
pop
jno
rcl
test
inc
push
mov
sbb
test
xor
adc
pop
out
push
adc
call
xchg
xchg
pop
incl
jmp
fyl2xp1
pop
stos
xor
jmp
jnp
in
jnp
daa
stc
outsb
hlt
outsb
xor
push
mov
movsl
mov
dec
shrl
mov
fcom
insb
call
pop
nop
push
add
je
inc
fcoml
push
xchg
and
sub
mov
add
dec
adc
aad
sbb
cmp
popa
stc
pop
jno
lods
jecxz
insl
pop
mov
push
cmp
and
arpl
dec
or
pop
mull
mov
mov
sbb
jne
int3
in
imul
xor
and
mov
sbb
push
jecxz
into
adc
mov
inc
inc
pop
add
xlat
jle
jb
mov
mov
jl
hlt
imul
jl
fisubs
mov
idivl
loop
inc
sbb
les
lods
jno
mov
mov
jl
push
cmp
andb
aad
pop
mov
fadds
popf
loopne
sbb
enter
xor
mov
imulb
test
loop
adc
mov
cs
movsl
insl
in
pushf
mov
call
push
sub
mov
jae
call
mov
mov
jnp
fiadds
sub
mov
sarb
mov
sar
mov
in
sbb
mov
ja
test
cmp
dec
js
mov
popf
mov
xchg
inc
aad
adc
xchg
pop
rcl
mov
dec
popl
std
pop
cmpsb
fldt
out
inc
xlat
xor
enter
fucom
push
stos
jle
shlb
insl
icebp
pop
mov
jge
push
cld
pop
lret
mov
lcall
pop
aad
je
pop
scas
scas
roll
mov
add
lds
cltd
pop
insb
push
add
xchg
data16
sub
into
inc
fcos
mov
clc
xor
inc
or
inc
or
fldt
cli
mov
aam
ljmp
mov
scas
aad
cmp
sub
add
xchg
pop
xorb
ss
ja
mov
test
dec
push
sub
out
mov
stos
sahf
aas
xor
or
dec
inc
sub
mov
mov
mov
incb
repnz
andnps
jnp
pop
ljmp
cmp
icebp
inc
fidivs
dec
mov
mov
lock
loope
bswap
sbb
mull
inc
aas
fwait
loope
push
rorl
hlt
pop
cli
pop
insl
call
movsb
jb
lret
pop
mov
cmp
jae
xor
insl
movsb
inc
push
or
jg
sub
mov
and
je
sub
outsb
gs
lods
xchg
and
hlt
stos
xor
and
mov
repz
pop
out
push
mov
cmpsl
test
ss
das
dec
or
int3
or
jge
pop
dec
pop
gs
lods
sub
pop
rcll
ror
jecxz
stos
bound
shlb
inc
xor
je
jle
dec
gs
out
add
dec
clc
das
mov
cltd
push
cli
lods
ja
pop
push
rclb
jle
push
out
sbb
jno
int3
nop
jb
sti
gs
in
mov
inc
or
cmpsl
and
xor
cmp
or
push
aad
enter
sub
inc
jecxz
pop
lods
mov
mov
ja
add
jg
rcrb
inc
loopne
popf
cmp
cld
inc
push
and
addr16
movsb
cmp
inc
adc
add
jns
push
mulb
sti
inc
and
into
pop
dec
adc
pop
orl
call
int3
add
nop
aaa
adc
mov
dec
adc
pop
mov
lcall
cli
pop
dec
xor
int3
or
xor
enter
push
rcll
cmp
rclb
dec
pop
int
popf
sahf
mov
dec
lcall
out
and
mov
mov
cmp
jecxz
lods
sti
je
push
mov
sub
lock
dec
adc
inc
or
jb
inc
inc
repz
int3
jb
outsb
add
mov
outsl
int
pop
enter
sarl
mov
test
cmc
xor
push
sub
sbb
jp
jp
aad
mov
pusha
daa
mov
cs
adc
fsubs
mov
out
mov
repnz
inc
sarb
adc
lcall
push
std
pop
jl
inc
or
push
fiaddl
aam
int3
push
and
jge
daa
insl
aas
popf
inc
inc
xchg
inc
test
jl
mov
cmpsb
mov
dec
xor
call
sbb
in
aaa
into
popl
lock
pop
loopne
sti
rorl
jp
lods
xchg
aaa
pop
sbb
mov
push
fwait
movsl
orl
inc
mov
std
xchg
jle
sbb
push
dec
or
and
xor
adc
or
clc
cmc
or
mov
xor
dec
out
test
lret
nop
sub
jno
and
je
aaa
cmp
imul
in
es
adc
and
pop
dec
inc
adc
ret
fsub
dec
or
pop
fdivrl
rcrb
test
mov
mov
dec
sarl
xchg
adc
or
xchg
sti
pop
clc
loope
jge
xor
mov
mov
fidivrl
mov
jecxz
adc
and
movsl
pusha
pop
xchg
push
lcall
fnstenv
ret
inc
or
sar
outsb
sub
dec
sbb
gs
fldl
sub
xchg
cmp
stos
mov
inc
bound
mov
xchg
pop
add
sub
cmp
outsb
repnz
jo
call
test
jle
cmp
sub
jecxz
cli
nop
inc
in
je
scas
stc
jbe
cmp
loop
sbb
movsb
cmpl
out
out
and
mov
lods
enter
xchg
loope,pt
mov
mov
addb
pop
add
cwtl
and
scas
xor
ficoml
orb
inc
push
clc
mov
mov
lcall
pushf
aas
xchg
mov
pop
stc
les
imul
aaa
cltd
popf
jecxz
scas
or
ds
jg
pop
stc
inc
imul
cmp
test
cmp
add
mov
jg
jo
lods
sub
rclb
sbb
out
sub
lds
jbe
jmp
or
add
push
sub
cmp
repz
es
sub
aaa
inc
or
dec
mov
pusha
in
cmp
out
imul
sub
sub
mov
pop
or
adc
and
je
adc
inc
xchg
cmp
sbb
in
sub
aas
lahf
inc
jo
call
xchg
test
mov
pop
ljmp
push
jnp
push
jge
add
cltd
jnp
mov
adc
mov
sbb
aad
test
adc
mulb
std
adc
inc
jmp
int
sub
aam
mov
mov
xchg
aaa
xor
stos
xor
sbb
ja
push
dec
clc
gs
xchg
aam
test
cltd
loop
dec
adc
cmc
xchg
inc
inc
sti
call
add
and
mov
lea
scas
xor
sub
mov
pop
gs
add
lcall
jmp
jbe
movsl
cmp
dec
loope
mov
push
jmp
dec
adc
movb
cmpsb
movsl
sub
mov
xchg
aaa
fbld
push
nop
pavgw
ret
dec
jmp
movsl
inc
mov
xor
xchg
sub
rcrl
outsl
repz
sbb
cld
cmc
sarb
lock
sub
xchg
sbb
in
lods
xor
or
xchg
mov
ret
mov
mov
fs
test
mov
imul
ret
cmp
das
inc
out
mov
cmpsl
mov
insl
adc
push
mov
lea
fwait
inc
push
fldl
or
xchg
aaa
cmpsb
pop
push
cld
pop
mov
insl
cmp
stc
popa
xorl
pushf
or
pusha
cmc
pop
mov
mov
js
int
scas
mov
mov
nop
xor
and
outsb
push
cmp
pop
dec
xchg
fwait
inc
stc
popf
sbb
inc
out
cmpsl
daa
mov
lods
sub
scas
in
imul
adc
jge
int
subl
decb
xchg
out
pusha
cmc
lds
adc
dec
or
push
jae
xor
jo
sub
stc
pop
dec
daa
out
dec
xchg
inc
adc
xchg
stos
sub
xchg
mov
mov
push
icebp
mov
dec
iret
in
nop
adc
add
jl
fs
pop
outsl
sub
adc
pop
mov
xchg
cmp
scas
fs
adc
shlb
and
mov
cmpsl
test
lret
xchg
mov
nop
ds
mov
ja
or
adc
adc
cmp
mov
mov
jl
hlt
leave
add
jnp
cmp
pop
push
shll
mov
cmpsb
mov
push
cmp
jp
xchg
movsl
xor
mov
mov
mov
xor
push
stos
sub
fisubl
push
jmp
xor
es
mov
das
mov
movsl
fildl
in
outsl
hlt
in
clc
push
clc
nop
add
pop
repz
aad
dec
loop
mov
ljmp
push
push
fs
jo
inc
stc
fs
sarl
or
xor
pop
push
icebp
pop
inc
or
in
inc
push
add
cmp
sarb
xchg
xchg
ds
pop
out
jo
dec
jno
clc
jbe
push
repz
sti
arpl
out
lods
je
mov
add
popf
fs
jp
jge
sub
iret
lock
ljmp
inc
bswap
shl
mov
cs
adc
or
push
dec
cmpl
insl
into
lcall
mov
mov
mov
loopne
mov
jmp
and
dec
push
xor
and
insb
loop
and
packuswb
test
dec
fdivs
rcrb
push
lcall
arpl
ficoml
scas
lds
mov
les
ja
sbb
negl
das
test
or
push
pop
bound
shrb
adc
shll
mov
imul
cmpsl
ds
pop
lea
mov
inc
clc
sub
or
pop
mov
fdivs
and
xor
sub
leave
mov
out
jae
movsb
xchg
cmp
mov
push
push
js
pusha
shlb
jne
add
jg
xchg
into
es
int
loop
push
sbb
aas
movsl
fwait
in
js
lret
faddl
repnz
sub
and
dec
repnz
call
in
insb
call
imul
sub
push
divl
xchg
cmp
and
sbb
xor
aad
addr16
pop
and
fwait
or
enter
jge
add
loope
pusha
push
add
cmp
inc
icebp
mov
jle
cs
montmul
cmpsb
test
jnp
and
pop
in
mov
popa
mov
ja
je
add
mov
sti
gs
xor
out
jl
popa
lock
gs
push
loope
loop
mov
mov
popf
aaa
cmp
ljmp
in
test
arpl
ficoml
cmc
pop
mov
in
jne
mov
lods
das
inc
fwait
and
mov
xchg
fsubrp
outsl
jo
and
rclb
insl
mov
jmp
mov
aam
and
cwtl
inc
inc
xor
xchg
and
fidivs
outsl
aaa
or
add
xchg
ret
mulb
int3
arpl
sti
adc
lahf
mov
mov
mov
dec
test
xchg
push
ret
xchg
push
cli
ret
xchg
stos
jb
xor
std
pop
jge
scas
std
sbb
loop
xor
cwtl
cmp
jne
pop
push
jbe
cmpb
rolb
jns
sub
sbb
cld
clc
insb
call
inc
cwtl
mov
iret
mov
mov
fs
ss
inc
jle
or
and
dec
pop
sub
jne
xor
dec
or
pop
dec
or
scas
imul
stos
jno
test
fsubrl
inc
les
mov
movsl
aaa
lahf
push
mov
cmp
and
sub
push
out
cli
inc
adc
cmp
pop
adc
mov
ds
push
leave
and
and
test
sub
mov
cli
push
mov
mov
icebp
pop
pushf
cmpsb
fwait
inc
insl
int
add
mov
mov
jns
ss
test
test
xchg
insb
out
addr16
xchg
inc
jl
ffree
lahf
shrl
aad
sti
push
lock
push
cmp
mov
mov
xor
sub
aas
ret
mov
lahf
mov
sbb
aaa
into
pop
int
mov
sbb
fs
adc
add
out
xchg
ret
mov
iret
push
shl
jge
cli
icebp
enter
out
jb
mov
jno
dec
xchg
pushf
sti
pop
mov
pop
addr16
gs
jmp
incb
int
cld
jns
dec
mov
scas
lock
and
inc
mov
scas
hlt
dec
push
push
inc
ljmp
test
mov
push
fisttpl
or
jnp
vpunpcklqdq
movntq
pop
fsts
cmp
fldt
pmullw
or
xchg
mov
test
adc
sbb
jle
call
adc
jge
lret
inc
and
inc
loopne
xchg
cmp
call
add
xchg
leave
push
fmul
mov
add
adc
out
addr16
inc
adc
mov
jne
mov
movsl
adc
push
cmp
cmpsb
rolb
jg
mov
jl
xor
dec
sbb
pop
call
std
pop
add
jns
mov
clc
bound
loop
xchg
out
fcomps
mov
gs
dec
or
jnp
mov
imul
andb
cmp
sub
ds
cld
in
out
jo
in
cmp
ja
push
pushf
cmp
mov
jp
mov
push
call
sbb
arpl
inc
psrlq
outsb
in
and
subb
and
pop
mov
jne
mov
push
cmp
jns
lahf
dec
push
js
inc
gs
adc
popa
xchg
pop
lcall
and
push
mov
ror
ficomps
dec
pop
add
fnstcw
movsl
rolb
daa
mov
push
inc
push
add
fcoms
ret
push
add
inc
mov
ret
add
sbb
mov
push
andl
imul
add
cmp
push
mov
jp
mov
xorl
and
pop
add
mov
dec
aad
das
or
cs
push
cli
negl
shll
lea
gs
ds
xor
push
imul
xlat
xchg
movsb
cmp
add
ret
pop
out
xchg
lods
or
xchg
sar
ret
sbb
adc
loopne
xor
shll
addr16
aam
pop
out
mov
test
fnstenv
or
cmp
xchg
sub
rcrl
mov
mov
fbstp
rcl
addr16
es
test
sbb
stos
call
sub
std
cmp
imul
loopne
mov
mov
fists
sbb
xor
cmp
iret
data16
ret
fsubr
test
mov
or
inc
jge
shrb
inc
fiadds
mov
shl
and
push
or
cmp
sbb
mov
sub
dec
add
jne
push
shrl
mov
icebp
mov
adc
mov
stc
sub
rclb
mov
out
call
or
cmp
imul
popl
push
je
mov
loop
movsl
cmp
add
push
sbb
xchg
stos
or
xchg
sar
ret
sbb
loopne
xor
shlb
addr16
rolb
test
inc
mov
sub
lcall
mov
fbstp
rcl
push
jae
out
xchg
sbb
stos
out
rclb
int3
sub
std
cmp
imul
jne
mov
fstl
sbb
bound
movsl
cmp
or
mov
ret
pop
fwait
in
test
mov
or
inc
jnp
shrb
fdivrp
mov
shl
pop
data16
push
push
pop
repnz
jno
sbb
les
fstl
rcrl
mov
xor
jbe
push
shrl
mov
icebp
mov
adc
inc
testl
rcll
mov
out
out
dec
loop
or
cmp
imul
mov
push
jb
mov
loope
movsl
cmp
add
imul
lock
test
call
sub
sbb
loope
xor
shlb
push
lock
xchg
or
cmp
xchg
sub
cltd
ret
jge
dec
scas
in
loopne
push
rcl
push
jb
out
xchg
sbb
les
movsb
test
cmp
push
lret
sti
aaa
pop
out
push
mov
mov
fcoml
repz
mov
popa
adc
cmp
adc
mov
ret
pop
cltd
aad
test
mov
or
pop
push
add
stos
pusha
push
mov
int3
dec
mov
shl
push
decb
pop
repnz
push
jns
mov
mov
fistl
ret
cld
mov
cs
ja
dec
shrl
mov
icebp
mov
adc
cmpsb
arpl
rclb
pop
lock
dec
loop
pop
js
cmp
imul
lea
xchg
jo
mov
loopne
movsl
cmp
add
push
in
pop
push
push
icebp
mov
test
cmpsb
sub
mov
dec
dec
loop
xor
shlb
imul
mov
xchg
and
ja
pop
inc
movsl
cmp
sub
pop
lret
jnp
dec
lods
in
loope
push
iret
shrl
inc
call
push
xchg
sbb
movsb
cmpsb
in
rclb
enter
aaa
pop
lock
mov
mov
fcoml
sbb
popa
adc
push
xchg
aad
xchg
mov
or
xchg
cmp
pop
push
mov
int3
dec
loopne
mov
shl
push
push
repnz
sbb
xchg
movsb
cmp
cmpsl
xchg
fsts
ret
pop
dec
cli
mov
sub
loope
pushf
dec
shrl
mov
icebp
mov
adc
mov
repz
and
cmp
xchg
inc
sub
icebp
out
dec
loop
pop
jns
cmp
imul
lea
push
outsb
scas
mov
loopne
movsl
cmp
add
imul
ret
pop
adc
repnz
test
cmpsl
lds
fcompl
jecxz
cs
pop
lahf
push
roll
mov
and
ja
add
es
sub
cltd
les
jns
dec
stos
in
loop
push
int
push
jo
lock
push
mov
jae
movsl
movsb
jecxz
rcll
sub
divl
dec
loop
xchg
mov
ficoml
push
lock
cmpsb
cmp
mov
les
shl
xchg
es
movsl
push
or
cwtl
cmp
sub
test
lret
sti
scas
cmp
add
pop
repz
push
mov
ret
hlt
cmpsb
cwtl
das
fcoms
mov
sub
jns
dec
aam
jle
add
rorl
pop
mov
repnz
xchg
inc
lds
pop
repnz
dec
jecxz
add
push
sbb
das
mov
mov
insl
lods
mov
fimuls
aam
xor
les
push
repnz
cmpsb
adc
mov
fistpl
mov
dec
dec
jecxz
sub
push
iret
jg
icebp
mov
mov
and
js
add
cmpsb
cmp
push
xchg
les
js
dec
stos
ljmp
cmp
icebp
mov
push
mov
jb
cmpsb
mov
lds
icebp
fs
dec
jecxz
test
mov
push
fcoms
pop
out
sub
inc
jle
imul
mov
jp
and
movsl
push
or
cltd
cmp
ret
cmpsl
pop
and
stc
scas
ds
sbb
dec
add
xor
push
lahf
push
jnp
test
movsl
cmp
movsl
cltd
xor
adc
pop
inc
clc
mov
sub
jns
dec
aad
jge
add
rorb
mov
icebp
adc
nop
inc
das
je
pop
repnz
dec
in
add
xor
push
cwtl
das
mov
mov
insb
stos
mov
fmull
aam
das
loope
pop
adc
mov
movsb
adc
mov
ficompl
mov
dec
dec
jecxz
sub
aam
fwait
push
int
pop
repnz
out
mov
and
jns
add
cmp
push
xchg
les
ja
dec
test
lret
shrl
cmp
xchg
insb
push
repnz
push
mov
jno
cmpsl
mov
les
pop
icebp
bound
dec
in
cmpl
push
xchg
sub
out
sub
inc
jl
imul
mov
jnp
and
movsl
push
or
lcall
and
imull
imul
xor
sahf
push
jnp
cmpl
xor
adc
pop
inc
divl
jns
dec
aad
jl
add
iret
or
mov
lock
popl
jae
pop
repnz
dec
in
add
xor
imul
push
cwtl
das
mov
mov
imul
ds
loopne
pop
adc
mov
mov
add
fstps
mov
dec
dec
jecxz
sub
add
jge
repnz
in
mov
pop
sarb
add
cmp
push
xchg
les
jbe
dec
test
loop
sbb
shrl
cmp
xchg
imul
mov
jo
cmpsl
mov
ret
cs
pop
icebp
popa
adc
js
mov
imul
aad
sub
in
sub
inc
jnp
imul
mov
jnp
and
movsl
push
or
lcall
and
imulb
add
pop
hlt
das
imul
cmpb
xor
adc
pop
inc
divb
jns
dec
aad
jnp
add
into
or
mov
out
adc
mov
jb
pop
repnz
dec
in
add
xor
imul
push
cwtl
das
xchg
mov
push
mov
fimull
aam
sub
dec
repnz
mov
add
and
inc
dec
jecxz
sub
add
jl
repnz
in
mov
push
iret
jns
add
cmp
push
xchg
les
jne
dec
cmpsl
out
jns
leave
shrl
cmp
xchg
push
repnz
push
mov
outsl
adc
push
ret
repz
pop
icebp
pusha
adc
in
cmpl
cwtl
aam
sub
in
daa
mov
pop
or
shrb
pusha
pop
xchg
int
xchg
mov
jnp
and
cmpsb
push
push
add
mov
les
cmc
stos
aas
fistl
push
dec
cld
pop
hlt
sub
dec
jnp
cmpb
xor
adc
pop
inc
hlt
mov
es
xchg
inc
aad
jns
add
int3
or
mov
in
adc
lea
das
jo
pop
repz
jnp
xor
imul
push
cltd
xor
cmpsl
mov
aad
sub
lds
repz
mov
add
and
pop
mov
inc
dec
in
sub
add
jp
repnz
jmp
and
cmpsl
jo,pt
cwtl
das
push
xchg
lds
mov
movsl
in
jp
aam
stc
aaa
add
dec
mov
mov
insl
adc
or
das
icebp
sub
dec
in
jg
adc
rclb
and
and
test
push
pop
pop
nop
lret
icebp
mov
mov
jl
push
adc
xor
push
and
repz
xlat
fsts
add
pop
cmc
sub
and
mov
lcall
repnz
jnp
inc
insl
ja
add
lret
mov
sbb
aas
mov
pop
hlt
fisttpll
jnp
xor
insb
add
cltd
xor
mov
xlat
mov
insb
sub
pop
push
dec
repz
in
popa
lahf
adc
mov
das
and
and
jne
ds
xchg
imul
jns
rep
jmp
jp
cmp
outsb
pop
cltd
xor
lds
mov
movsb
loop
jp
aad
clc
xor
hlt
mov
pop
mov
insb
adc
or
pop
repnz
adc
inc
jge
adc
rclb
and
and
inc
cmp
shrl
pop
enter
icebp
mov
mov
jge
sbb
cmpsl
dec
add
lds
rorb
inc
fcomp
adc
inc
stc
pop
imulb
mov
cwtl
dec
jge
jge
cmpsl
ds
fwait
xor
or
pop
ds
mov
jnp
inc
xlat
outsb
jbe
add
leave
add
adc
mov
enter
hlt
fisttpl
jnp
loope,pn
add
push
cltd
xor
mov
test
insb
sub
pop
or
cs
pusha
popf
adc
mov
das
and
and
jae
aas
push
xchg
imul
js
hlt
test
lret
jnp
std
cmp
xor
lds
mov
jp
divl
add
dec
test
mov
imul
pushf
xlat
cmp
enter
repnz
adc
inc
jnp
adc
into
xchg
add
mov
push
or
push
pop
leave
pusha
mov
icebp
mov
scas
out
loope
adc
xor
popf
push
and
test
inc
adc
inc
clc
pusha
imull
mov
xchg
dec
jle
jl
cmpsl
ds
or
pop
cmp
mov
jnp
inc
fsubrs
mov
cltd
loop
testb
jmp
aas
xchg
xor
insb
test
hlt
jnp
sub
outsb
add
xorb
and
mov
roll
aad
es
pop
or
repz
out
pop
fwait
adc
mov
das
push
shll
mov
jno
inc
xlat
push
xchg
imul
ja
cmc
test
mov
pop
lret
cld
cmp
xor
lds
mov
jp
xlat
outsb
divb
add
dec
sbbl
mov
adc
fwait
aad
aam
mov
pop
repnz
sqrtps
inc
jns
adc
int3
xchg
cs
mov
and
pop
mov
push
pop
lods
inc
cmp
imul
mov
lods
call
test
add
sahf
xor
fwait
push
and
in
movsb
inc
fcmovbe
push
insb
add
popa
clc
daa
bound
push
jp
test
out
popf
xor
or
pop
cmp
mov
jl
inc
fnstenv
scas
add
movb
mov
sbb
test
xor
push
pop
cmc
xlat
mov
mov
fisubrs
adc
jle
lea
lahf
mov
inc
mov
insl
and
leave
pusha
or
mov
out
pop
cltd
adc
scas
jmp
sbb
and
outsl
and
push
nop
insb
add
jne
mulb
enter
ss
push
mov
pop
mov
fsub
jnp
ret
hlt
das
add
inc
andl
lods
cltd
sarl
aad
mov
pop
repz
or
jp
test
lret
cld
mov
and
dec
add
aad
mov
ret
repz
stos
jmp
test
das
imul
mov
in
mov
insl
add
hlt
popa
clc
and
inc
jg
js
test
xor
pop
enter
mov
jge
aas
fnstenv
scas
add
fists
and
push
push
inc
fadds
pop
not
mov
mov
fsubrl
push
dec
fwait
xor
lea
sahf
mov
inc
mov
xlat
outsb
and
leave
pusha
or
mov
out
pop
cwtl
adc
lods
ljmp
add
inc
fcoms
insl
add
jae
mulb
jge
clc
xor
pushf
xor
pop
mov
frstpm(287
jl
rcr
repnz
inc
andb
mov
adc
add
pop
hlt
push
or
cmp
jnp
test
jo
sti
mov
and
dec
add
insl
mov
ret
hlt
test
adc
sub
dec
and
out
mov
outsb
add
and
and
mov
inc
in
popf
xor
push
leave
pusha
cmp
mov
jle
cmp
add
mov
jmp
mov
adc
ss
movsb
pop
not
mov
mov
fldt
or
lea
popf
mov
inc
mov
xlat
outsb
and
leave
pusha
pop
inc
cmc
mov
out
pop
xchg
adc
lods
jmp
and
insb
and
push
lea
mov
loopne
and
lds
divl
test
xor
xchg
pop
mov
fxam
jl
mov
add
inc
jle
mov
xchg
sarb
add
pop
hlt
push
or
cmp
cmpsb
pop
jno
mov
cltd
xor
scas
es
mov
inc
xor
insl
lahf
push
int3
arpl
test
sbb
sti
or
xchg
dec
es
jmp
or
cmp
stc
and
and
mov
inc
jecxz
sahf
xor
ss
out
mov
jno
stos
add
pop
std
and
adc
inc
fadds
mov
push
jmp
fidivl
or
fwait
xor
mov
int
lods
inc
mov
xlat
outsb
and
lret
inc
cmc
mov
jg
xchg
adc
stos
out
enter
mov
push
inc
ficoml
insl
add
jno
clc
mov
les
divb
test
xor
mov
mov
jl
mov
add
inc
jl
mov
xchg
into
aas
pushl
pop
cmc
push
or
jb
adc
lcall
sbb
inc
xor
outsb
popf
push
int
test
jmp
fcoms
adc
inc
stc
or
xchg
dec
daa
mov
out
inc
fmul
or
cmp
arpl
and
mov
sbb
stos
inc
loope
lahf
movb
popa
xor
mov
jg
cmp
jb
test
stc
nop
mov
loope
scas
adc
fnstcw
xor
not
test
mov
jle
and
jno
or
xor
es
cltd
mov
inc
mov
fsubrs
ror
bound
testb
xchg
adc
les
sahf
test
lret
and
out
sbb
outsb
add
mov
ret
hlt
das
stos
inc
popa
adc
enter
mov
jge
mov
add
pop
psubd
stos
bound
scas
xchg
int3
inc
xlat
std
mov
int
push
pop
testb
in
aaa
jo
adc
pop
jae
mov
fwait
xor
stos
xchg
sub
push
mov
inc
xor
outsl
pushf
push
int
cmpl
adc
adc
mov
xchg
dec
daa
mov
out
inc
fmul
pop
jo
cmp
arpl
push
pop
mov
jno
lods
inc
loopne
lahf
les
lret
bound
in
push
pop
push
jmp
jb
test
sahf
and
scas
adc
fidivrl
xor
clc
rolb
jg
and
jno
or
xor
sub
push
lret
inc
scas
jmp
jo
ror
bound
aas
testl
ret
jbe
sahf
cmpsl
in
lret
and
call
dec
mov
mov
fisttpl
pop
repnz
inc
pusha
adc
pusha
mov
mov
jle
mov
add
xchg
aas
jns
mov
xchg
lret
inc
fdivr
mov
int
sbb
push
in
xor
push
jae
mov
pushf
xor
test
mov
inc
cs
cmpl
lods
inc
cmc
or
xchg
inc
daa
mov
in
inc
fmul
push
jno
cmp
arpl
sbb
mov
lods
inc
fists
int3
arpl
jecxz
push
adc
cmpsl
or
mov
fstl
scas
push
dec
inc
fstpt
xor
stc
iret
adcl
and
jno
push
inc
sahf
xor
pop
xchg
mov
inc
lods
ljmp
add
clc
jo
jmp
lods
ret
sahf
movsl
jecxz
lret
adc
and
jmp
dec
xchg
mov
fimull
cmp
cmp
mov
fildll
inc
xchg
add
pop
lock
sbbb
out
and
mov
stos
imul
ljmp
and
hlt
add
clc
cmp
sahf
imul
xchg
call
les
in
mov
test
or
out
sbb
inc
jnp
sbb
cli
nop
out
sub
ffree
nop
xchg
ds
pushf
cmp
out
shlb
lcall
das
incb
mov
loop
mov
push
in
les
btrl
int
pop
and
add
out
jp
inc
in
cmp
xor
jb
outsl
sti
add
inc
loope
imul
arpl
pop
adc
xchg
scas
mov
pop
dec
push
int3
mov
in
sbb
xchg
cltd
sbb
mov
inc
jp
dec
mov
sarl
inc
loopne
xchg
and
lds
pop
mov
in
push
or
mov
push
ja
mov
jmp
fstps
add
xor
pop
in
inc
mov
adcl
lds
icebp
pop
call
out
mov
test
jle
nop
fcomps
cmp
jle
or
dec
in
std
mov
es
pop
push
inc
iret
aaa
leave
add
popl
xor
call
mov
loop
mov
and
stc
lods
mov
imul
add
or
sub
test
mov
dec
sbb
in
inc
jge
stc
push
cmpsb
js
fisttps
lds
outsl
stos
push
sbb
call
lret
mov
cwtl
addl
sbb
fmuls
ret
fimull
dec
and
mov
add
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
and
dec
lock
mov
push
iret
subb
mov
mov
mov
mov
sahf
dec
mov
or
jb
addl
push
mov
adc
jb
sub
daa
jae
repz
and
or
sub
cmp
add
popa
push
popf
fisubrs
inc
mov
fs
add
cld
add
add
cli
push
call
pop
stc
xchg
loopne
ljmp
nop
loope
outsl
and
loope
nop
rcl
xor
mov
mov
test
sarb
cmp
mov
inc
sahf
arpl
xchg
enter
lds
incl
jle
xlat
frndint
xor
push
dec
mov
pop
fwait
dec
mov
popa
push
mov
jecxz
jnp
sbb
insl
xchg
inc
cmp
mov
xor
rcrb
xchg
or
outsl
test
out
fcomps
loope
jp
jbe
fimuls
add
es
ja
mov
and
iret
rol
push
mov
mov
fiaddl
shlb
ss
leave
cmpsb
loopne
insl
xor
je
call
push
xchg
in
sbbl
fs
cmp
xor
push
fstl
dec
pop
pop
scas
push
adc
xchg
add
mov
mov
out
pop
or
in
sbb
outsb
mov
jo
or
xor
fnsave
xor
mov
das
pop
xor
cmpsl
in
test
xchg
fadds
xor
lcall
pop
sbb
fdivr
and
add
inc
and
dec
notl
fwait
outsb
xlat
add
xchg
jo
insl
mov
push
rep
mov
loope
jne
mov
mov
sub
sbb
cmp
xchg
fmulp
iret
gs
ret
cmp
mov
xor
sub
lds
faddl
call
out
xchg
cmc
popa
inc
pop
sqrtps
addl
sub
das
inc
scas
dec
xor
push
cli
pop
push
jp
data16
xor
push
add
lods
xor
xchg
repnz
push
add
iret
je
xor
inc
mov
test
mov
push
sahf
push
mov
add
or
mov
cmp
jo
sub
push
push
mov
sbb
mov
mov
mov
fbstp
lahf
sub
or
addl
lds
lods
add
push
pop
push
sub
movsl
rcrb
inc
out
xchg
dec
and
lock
movsl
xchg
out
lcall
inc
repnz
cmp
pop
test
inc
call
fidivs
imul
addb
call
outsb
jle
mov
sbb
imul
aaa
insl
imul
ficomps
xchg
inc
int3
sub
cli
or
and
jb
push
sub
xchg
lcall
mov
int
adc
je
rclb
aas
test
notl
lcall
es
push
and
push
sub
xor
mov
popa
sbb
inc
shr
gs
inc
int
mov
mov
dec
insl
push
mov
xchg
outsb
jo
mov
xchg
pop
inc
sub
add
fs
lcall
add
pop
cld
add
repnz
jbe
sub
in
mov
xchg
add
scas
repz
cmp
stos
jmp
pop
lret
sbb
repnz
jb
xchg
cmpb
pushf
lea
lds
out
push
je
icebp
adc
bound
rcpps
sub
xor
rcrb
pop
loope
xor
mov
in
adc
cmpsl
push
out
adc
cs
inc
mov
sarl
xor
fdivrs
xchg
andl
das
sub
inc
dec
lret
mov
call
inc
ret
push
mov
xchg
sahf
es
cwtl
aas
push
adc
lods
lods
add
push
stos
cmc
or
pusha
cltd
shr
idiv
adc
jbe
push
out
dec
inc
push
sbb
int3
repnz
and
and
loopne
daa
mov
mov
into
rorb
push
jle
cld
cld
imul
fbld
push
pop
addl
movsb
xchg
decl
movsl
icebp
std
dec
xor
shufps
test
lock
xchg
ja
xchg
push
xchg
out
inc
xor
mov
xor
mov
ret
mov
mov
mov
push
mov
shl
jns
fnstsw
xchg
sub
pusha
cmpsb
mov
stc
or
movsl
imul
pop
xor
loope
lock
jge
jle
push
sub
into
mov
cmp
push
data16
xchg
notl
or
jbe
pop
pop
mov
icebp
in
dec
aaa
adcb
mov
sti
jnp
or
js
test
xchg
in
bound
add
inc
sub
aam
ja
mov
jo
and
dec
call
jbe
and
mov
bound
loop
aam
dec
adc
cli
pop
leave
mov
lahf
xor
les
cmp
sub
aad
jl
inc
xchg
xchg
adc
imul
add
hlt
jbe
pop
xchg
jns
rcr
mov
lods
mov
fcomps
adc
pop
jecxz
push
test
dec
sbb
jg
out
xor
fsubr
inc
in
pop
in
jo
sub
insb
jl
or
push
pop
pop
sub
adc
out
popa
jo
test
enter
push
add
stos
push
sti
or
call
inc
ss
leave
daa
adc
push
pusha
es
and
xchg
sub
insb
sbb
cmp
ret
pushf
sub
enter
cmpsl
cmp
negl
rcrb
gs
xchg
mov
daa
push
xchg
xchg
xchg
sbb
xchg
xchg
fsubs
cmp
adc
bound
pop
and
xchg
daa
stc
dec
and
and
std
aas
dec
ret
testb
addr16
outsl
pop
cmpsb
nop
outsb
sub
xchg
outsl
pop
test
outsb
sub
xchg
outsl
push
stos
nop
outsb
fistl
insb
and
out
outsl
push
scas
rclb
ja
das
push
pusha
jg
jp
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
call
xchg
add
into
fcoml
or
jb
jecxz
or
add
bound
rorb
fistl
push
flds
loope
sub
outsb
scas
jp
adc
sbb
dec
.byte
cwtl
.byte
