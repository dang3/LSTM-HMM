push
mov
sub
movl
movl
movl
movl
movl
movl
movl
pusha
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
call
test
je
mov
xor
jmp
lea
push
push
push
push
mov
push
call
test
je
mov
xor
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
push
lea
push
call
lea
push
call
push
push
push
push
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
int
xor
jmp
movzwl
cmp
je
int
xor
jmp
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
pop
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
add
mov
add
mov
movl
mov
add
mov
movl
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
dec
adc
adc
inc
xor
add
sbb
bound
mov
divl
popa
adc
jns
xlat
lods
add
nop
pushf
je
mov
jne
mov
popa
outsb
stos
xchg
gs
dec
stc
add
mov
inc
imul
cwtl
je
dec
stc
add
mov
jbe
outsl
pop
mov
pushf
arpl
jns
dec
stc
add
or
insb
sub
gs
dec
stc
add
push
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
stc
inc
add
stc
inc
add
pushf
je
fstl
jb
mov
xchg
popa
adcl
inc
add
add
sahf
jb
stos
xchg
xor
cmp
add
push
jbe
jge
cs
add
jb
insl
jae
lea
add
jbe
cmp
xchg
add
sub
add
add
insb
inc
sub
add
and
insb
inc
jmp
outsl
arpl
add
add
imul
inc
out
add
lcall
lods
lea
add
xchg
insb
outsl
lods
stc
add
movsb
sahf
jb
jb
xor
xor
add
mov
arpl
mov
outsb
mov
add
rolb
dec
pop
pop
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
stc
jmp
add
add
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
dec
stc
jmp
add
jmp
jmp
dec
stc
add
dec
stc
add
dec
stc
add
push
testb
cwtl
loopne
jmp
dec
stc
add
dec
testl
jmp
sbb
add
dec
stc
add
push
testl
jmp
dec
mov
add
push
stc
add
dec
cli
add
add
add
in
dec
cli
add
dec
stc
add
cmp
add
sbb
jmp
dec
stc
sub
pop
stc
add
out
adc
imul
add
idiv
add
idiv
add
out
add
mov
add
xchg
addb
cli
sti
add
cmpsb
cld
add
mov
add
mov
add
cmpsb
cld
add
cmpsb
cld
add
jbe
add
jbe
add
cli
loope
add
add
data16
add
jbe
add
jbe
add
data16
add
data16
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
es
add
es
add
cmp
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
outsl
gs
add
dec
pusha
nop
add
adc
dec
adc
dec
adc
jmp
adc
add
add
dec
repnz
out
mull
add
pop
add
mov
dec
adc
add
xchg
add
add
dec
adc
add
add
dec
rolb
jno
mov
cmp
add
jecxz
dec
stc
jmp
popf
dec
stc
jmp
add
jmp
add
add
dec
mov
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
dec
stc
add
ss
add
ss
add
es
add
es
add
idiv
add
idiv
add
out
add
out
add
idiv
add
idiv
add
out
add
out
add
mov
add
mov
add
cmpsb
clc
add
cmpsb
clc
add
mov
add
mov
add
cmpsb
clc
add
cmpsb
clc
add
add
add
add
jbe
add
data16
add
data16
add
jbe
add
jbe
add
data16
add
data16
add
ss
add
ss
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
add
dec
adc
add
cwtl
add
cwtl
add
cwtl
add
xchg
add
xchg
add
xchg
add
nop
add
nop
add
nop
add
nop
add
nop
add
nop
add
nop
add
nop
add
xchg
nop
dec
stc
in
dec
stc
icebp
nop
dec
stc
ret
nop
dec
stc
lds
dec
stc
pop
xchg
dec
stc
icebp
nop
dec
stc
jno
dec
stc
adcl
stc
daa
xchg
dec
stc
dec
xchg
dec
stc
inc
xchg
dec
stc
sti
xchg
dec
stc
lahf
xchg
dec
stc
xchg
xchg
dec
stc
popf
xchg
dec
stc
jns
dec
stc
dec
xchg
dec
stc
dec
dec
stc
jmp
cmpsb
dec
stc
lods
cmpsb
dec
stc
pop
cmpsl
dec
stc
in
cmpsb
dec
stc
frstor
dec
stc
test
dec
stc
add
dec
stc
add
repz
add
repz
add
add
add
cmc
add
repnz
add
repz
add
cmc
add
cmc
add
mov
add
mov
add
stos
cmc
add
mov
add
dec
stc
add
cmc
add
cmc
add
cmc
add
fdiv
add
mov
cmc
add
ret
cmc
add
mov
cmc
add
fdiv
add
cmc
add
cmc
add
add
mov
add
shlb
add
add
call
mov
add
mov
add
popl
add
add
loopne
add
jo
add
xor
add
and
add
popl
add
add
popl
add
popl
add
popl
add
add
mov
add
dec
mov
add
lea
add
add
mov
add
lea
add
mov
add
mov
add
mov
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
cltd
add
cltd
add
cltd
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
test
add
test
dec
ljmp
dec
mov
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
jle
dec
cli
addb
stc
mov
jg
stc
test
stc
insl
jg
stc
jne
dec
stc
imul
stc
inc
jg
stc
xor
stc
fstpt
stc
cmc
jle
stc
jecxz
dec
stc
jnp
dec
stc
jle
add
dec
stc
fwait
jle
stc
sub
stc
xchg
stc
jae
dec
stc
pop
jle
stc
aad
dec
stc
iret
jge
stc
mov
jge
stc
jmp
dec
stc
xlat
jge
stc
leave
jge
stc
stc
jge
stc
jmp
orl
das
into
cli
add
into
cli
add
iret
cli
add
cli
add
cli
add
cli
add
into
cli
add
add
add
stc
add
iret
stc
add
iret
stc
add
iret
stc
add
iret
stc
add
iret
stc
add
nop
cli
add
cmp
xchg
add
cli
add
push
cli
add
push
cli
add
iret
stc
add
cli
add
cmp
add
mov
stc
add
bound
add
sbb
add
add
push
stc
add
je
add
add
add
jo
add
xor
add
xor
add
rolb
add
mov
add
out
add
stos
xchg
add
xchg
add
add
adc
add
mov
add
in
test
add
add
mov
add
dec
or
add
popl
dec
sub
add
add
iret
loop
add
mov
add
lea
dec
inc
lea
dec
or
add
lea
dec
in
mov
dec
mov
dec
lock
dec
mov
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
jp
add
xchg
add
xchg
add
xchg
add
mov
dec
sbb
add
sbb
dec
stc
std
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
lea
lea
lea
dec
stc
jg
add
add
dec
stc
daa
dec
stc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
testb
fcomip
add
fcomip
add
mov
testb
mov
testb
fcomip
add
add
mov
add
mov
testb
mov
cmc
add
fdivp
add
fdivp
add
cmc
add
cmc
add
cmc
add
mov
cmc
add
add
add
mov
cmc
add
cmc
add
movb
add
test
add
addl
loopne
add
lcall
add
add
scas
addl
sbb
add
inc
mov
add
mov
add
add
addb
add
add
std
add
je
add
mov
add
push
nop
add
adc
add
xchg
cltd
add
loopne
add
mov
add
mov
add
jbe
add
dec
mov
sahf
add
add
dec
movsb
sahf
add
mov
add
sahf
add
movsb
add
movsb
add
movsb
add
movsb
add
movsb
add
add
dec
scas
movsb
add
add
iret
fldl
add
loope
add
aad
add
xlat
add
iret
xor
add
movsb
add
movsb
add
add
iret
xstore-rng
cmpsl
add
add
add
cmpsl
add
add
dec
enter
int3
add
iret
in
add
clc
jmp
add
out
add
hlt
add
or
dec
stc
loope
dec
stc
xlat
movsl
dec
stc
xlat
add
jmp
dec
jns
add
xchg
dec
jns
add
call
sahf
dec
stc
stc
popf
dec
stc
jmp
dec
stc
in
popf
dec
stc
negl
dec
stc
add
sahf
dec
stc
cmc
popf
add
add
sahf
dec
stc
pop
sahf
dec
stc
cmp
dec
stc
or
dec
stc
add
sahf
dec
stc
add
cli
add
cli
add
sar
xchg
mov
cli
add
jmp
cli
add
cli
add
dec
stc
add
repz
add
jmp
add
repz
add
cli
add
cli
add
stos
cli
add
add
add
jmp
mov
sub
hlt
lret
out
mov
pop
icebp
sub
divl
out
mov
lret
jmp
add
xchg
and
subl
jbe
movsb
xchg
testl
mov
movsb
or
push
insl
dec
inc
mov
xchg
jmp
cmc
hlt
int3
dec
xor
and
aam
and
mov
inc
lock
cld
or
push
fdivl
inc
jmp
mov
sub
mov
aam
adc
inc
ja
push
push
and
bound
in
pop
je
lock
out
jno
jae
outsb
outsl
das
pop
and
les
jb
and
mov
je
stos
push
cs
loop
add
lods
inc
dec
repnz
inc
dec
cli
add
dec
lea
insb
dec
jle
sub
add
dec
mov
sbb
dec
loop
add
addb
loop
add
bound
out
incl
adc
incl
xor
inc
loop
daa
addr16
aaa
dec
add
add
clc
out
pusha
sub
push
jg
call
adc
push
outsl
popa
add
out
imul
jae
add
add
call
add
out
dec
stc
out
dec
stc
out
dec
stc
or
jecxz
push
stc
filds
dec
stc
xchg
or
jmp
dec
stc
xlat
add
xchg
or
jecxz
push
stc
pop
add
stc
inc
incl
add
or
stc
testl
mov
out
add
add
dec
sbb
sub
add
dec
or
imul
add
dec
sbb
imul
add
dec
jns
jmp
stc
add
dec
add
push
idiv
ljmp
add
jle
das
hlt
dec
stc
add
inc
stc
add
push
dec
add
push
or
cmc
inc
add
add
add
add
push
imul
jmp
inc
incl
jmp
push
sbb
jmp
inc
stc
add
push
jns
add
incb
es
loopne
push
incl
add
pop
add
sbb
es
nop
add
std
js
idiv
cmp
out
rolb
pop
decl
add
std
push
add
cld
mov
out
or
add
add
std
dec
add
incb
mov
push
add
std
loope
xchg
sub
jbe
je
jbe
xor
data16
enter
or
jbe
add
and
data16
test
dec
loopne
add
rorb
test
or
or
dec
ret
dec
rorb
pop
dec
rorb
sbb
rorb
cwtl
dec
out
push
dec
rorb
jl
add
dec
rorb
cmp
rorb
fmuls
or
dec
rorb
insb
dec
rorb
sub
rorb
mov
dec
rorb
mov
or
or
dec
ret
dec
rorb
push
dec
rorb
adc
or
dec
rorb
jb
rorb
xor
or
dec
rorl
dec
rorb
bound
out
sub
stc
out
dec
stc
out
int
out
add
add
stc
xlat
or
out
test
out
xor
clc
sti
or
out
xor
stc
cmp
out
jne
out
and
clc
out
push
stc
out
aad
out
add
clc
xlat
or
out
stc
clc
out
inc
stc
cmpsl
or
cli
or
out
stc
clc
out
inc
stc
out
add
add
clc
add
push
pop
add
inc
pop
add
inc
xchg
add
push
incl
jmp
inc
aas
add
inc
aad
fsts
add
push
inc
add
inc
pop
add
inc
test
std
push
pop
add
push
addr16
inc
daa
add
inc
lds
fistl
add
push
push
add
inc
pop
add
inc
movsl
add
push
testl
jmp
inc
in
leave
add
add
add
push
dec
add
inc
or
hlt
inc
jp
sti
push
push
add
push
push
das
add
ret
decl
add
pop
add
pop
add
mov
pushl
bnd
es
add
cmc
loop
push
incl
add
repnz
add
repnz
add
cmc
xchg
add
icebp
ja
out
aaa
add
hlt
rolb
pop
decl
add
add
div
addr16
icebp
daa
add
hlt
mov
mov
pop
add
icebp
inc
add
incb
mov
push
add
icebp
add
dec
jecxz
sub
or
rorb
xor
dec
roll
dec
rorb
gs
rorb
and
dec
rorb
add
dec
rorb
inc
dec
rorb
ljmp
or
add
dec
rorb
sbb
dec
out
push
dec
rorb
jge
rorb
cmp
dec
rolb
dec
rorb
sub
dec
rorb
or
dec
rorb
dec
dec
rorb
cli
dec
ret
dec
rorb
push
dec
stc
out
cmp
hlt
or
out
cld
clc
out
cmp
out
xchg
stc
fadds
stc
out
in
clc
out
add
add
out
icebp
clc
out
dec
stc
out
int3
clc
out
mov
out
xor
xlat
add
stc
out
je
out
xor
out
loope
sti
add
stc
out
je
out
xor
out
add
flds
stc
out
fs
out
and
out
add
out
push
stc
out
clc
out
add
out
mov
incb
jmp
inc
or
test
stc
add
dec
sub
jmp
inc
sub
jmp
dec
hlt
add
inc
pop
add
inc
sbb
jmp
push
cli
add
inc
jp
jmp
pop
roll
add
inc
inc
add
inc
add
jmp
dec
push
add
inc
bound
jmp
pop
ret
add
dec
incb
jmp
inc
adc
jmp
add
add
jmp
cmpsb
out
dec
add
testl
add
out
jno
test
sbb
add
xor
jbe
mov
add
pusha
add
and
ss
lahf
add
out
add
es
addb
out
inc
add
cmc
filds
push
testl
add
out
sbb
div
popl
add
add
out
js
out
cmp
div
iret
add
testl
add
in
sub
mov
scas
add
or
dec
rorb
mov
or
rorb
add
rorb
push
dec
rorb
adc
in
or
dec
filds
sub
or
or
rorb
or
dec
rorb
and
rorb
test
dec
rorb
test
add
dec
rorb
inc
dec
rorb
jmp
dec
rorb
pop
dec
rorb
sbb
rorb
cltd
dec
fiadds
push
dec
rorb
jl
rorb
cmp
rorb
add
dec
rorb
insb
dec
stc
out
jnp
out
push
cli
out
dec
stc
out
ret
stc
out
sbb
out
cmpsb
stc
xlat
add
or
clc
out
pop
stc
hlt
or
out
std
clc
out
add
add
stc
fadds
inc
stc
out
in
clc
out
insl
stc
out
ljmp
or
clc
out
stc
out
sub
xlat
add
out
jne
out
gs
out
sti
add
out
and
clc
add
dec
or
jmp
push
adc
jmp
inc
repz
inc
jae
jmp
add
add
add
dec
testb
inc
inc
add
push
pop
add
dec
sub
jmp
push
daa
add
push
scas
add
dec
lock
inc
push
add
push
pop
add
push
mov
jmp
inc
ja
jmp
push
int3
add
sbb
add
inc
aas
add
push
incl
jmp
stc
pop
add
inc
pop
add
div
ds
in
fildl
add
add
fistps
add
repnz
add
in
mov
add
repnz
add
jmp
repnz
jnp
addl
repnz
add
das
add
roll
fisttps
add
pop
add
repnz
add
in
mov
jmp
bnd
ss
add
in
loope
neg
add
add
add
repnz
add
icebp
pop
add
in
xchg
add
cmp
or
rorb
cmp
or
adc
or
rorb
sub
or
or
or
dec
rorb
add
or
rorb
adc
dec
jecxz
sub
or
rorb
xor
dec
sar
dec
rorb
add
add
or
dec
rorb
add
dec
rorb
inc
dec
rorb
jmp
ret
dec
rorb
pop
dec
stc
out
stc
out
aam
sti
cld
popf
stc
out
push
out
and
out
hlt
stc
frndint
cmp
out
cmp
out
jb
out
hlt
stc
out
inc
stc
out
out
adc
out
xchg
stc
xlat
cld
dec
stc
out
sbb
out
add
add
or
out
fdivr
out
sbb
out
nop
stc
fdivr
inc
stc
out
lods
stc
out
insb
stc
out
lock
out
dec
stc
out
int3
clc
out
mov
out
xor
add
adc
add
push
inc
add
push
add
jmp
repz
push
pusha
add
push
and
jmp
roll
add
push
push
add
push
adc
jmp
movsb
add
inc
lock
push
jo
jmp
inc
in
fsts
inc
add
push
add
test
jae
add
push
fs
push
and
jmp
push
ljmp
inc
adc
jmp
xor
add
and
add
filds
es
add
out
pop
add
ficomps
neg
pop
add
fstpl
repnz
popa
add
fidivrs
neg
aas
add
fstp
add
out
sbb
mov
outsl
add
fnstsw
add
fimuls
cmpsb
add
jmp
icebp
str
decl
ja
add
pop
icebp
incl
xor
add
aas
jbe
add
push
icebp
incl
inc
icebp
pop
add
icebp
lcall
dec
fimuls
or
add
dec
out
add
or
dec
rorb
dec
ret
or
dec
testl
pop
dec
jmp
or
mov
or
enter
fmull
xor
or
jg
or
push
mov
or
dec
rolb
dec
mov
add
dec
jmp
add
add
add
add
dec
int
add
add
dec
mov
add
out
dec
stc
jne
dec
push
add
pop
out
xor
loope
stos
add
movsl
dec
std
cmpsb
insb
loop
ja
ja
jnp
or
push
neg
add
pusha
stos
std
jo
aas
mov
push
out
push
pop
loope
out
add
repz
pop
and
arpl
inc
loope
lds
repz
call
mov
jl
imul
daa
pushf
in
xchg
lret
cld
mov
dec
in
and
pop
add
inc
add
cmp
int
pop
aam
jl
mov
xlat
cld
dec
mov
add
movsb
mov
arpl
fisubrl
adc
lods
mov
xor
add
add
mov
fstl
push
stos
stos
xchg
pop
mov
and
push
imul
mov
or
xchg
into
fisubrs
cli
sub
hlt
std
pop
pop
mov
mov
jmp
pop
imul
mull
mov
fnsave
fiaddl
ret
cwtl
dec
int
out
lahf
xorb
add
add
loope
lahf
add
xchg
push
js
movb
jo
or
clc
push
add
imul
pop
gs
mov
out
or
imul
test
cli
add
insb
lea
or
sub
adc
mov
pop
pop
lock
mov
fisubl
dec
roll
add
sarl
xor
fs
cmpsb
xor
mov
add
test
test
fmuls
leave
shrl
ljmp
and
jge
mov
mov
shlb
add
jge
add
or
cwtl
dec
or
pop
push
add
repnz
pop
and
add
push
das
fnstenv
popa
add
add
cmpb
push
fwait
cmpb
add
and
das
add
or
call
clc
jno
fimuls
inc
cli
fisttps
and
adc
cli
clc
insl
fsubs
insl
pop
jb
inc
sub
repz
push
push
cmp
push
lods
jo
add
inc
leave
cmp
dec
repz
ret
movsl
xor
int3
xor
js
mov
push
pusha
outsl
lahf
addr16
or
mov
adc
xchg
clc
add
xchg
push
adc
mov
out
stos
xlat
pop
sahf
stos
mov
cmp
mov
mov
inc
xchg
cmpsl
xchg
dec
mov
and
dec
ret
push
push
fldcw
add
or
pop
ficoms
pop
test
lock
jne
pop
lret
pop
mov
pop
lods
pusha
push
add
sub
int3
jne
or
jns
add
call
sarb
sub
mov
add
ret
shll
or
pop
mov
in
add
add
dec
insb
add
jmp
push
jb
or
add
loop
mov
jnp
jecxz
or
dec
rcll
subl
rolb
dec
sub
fidivl
or
and
call
add
or
jo
punpcklbw
push
push
add
add
mov
push
fsubrs
bound
leave
imul
out
out
shll
sahf
xchg
add
and
mov
pop
pop
sbb
push
outsb
xor
pop
sarl
add
fimuls
out
lcall
lret
adc
mov
stc
add
ljmp
ja
and
add
sbb
adc
ret
add
cltd
sub
bound
test
out
mov
je
loopne
mov
jns
mov
pop
fimull
call
adc
popaw
or
mov
js
outsb
mov
mov
jge
ret
or
shll
cmp
add
add
add
jl
sahf
cmpsl
push
dec
stc
imul
jnp
loopne
pushf
mov
xchg
push
enter
iret
jl
shl
addb
stc
cltd
xor
pop
test
jno
out
cwtl
pop
push
inc
cmp
dec
xor
jne
lret
lea
lea
mov
movb
add
ret
mov
push
sub
inc
shll
ja
and
sub
xchg
rolb
or
ljmp
ja
jno
xor
dec
movsl
sub
mov
fwait
push
nop
sub
inc
test
mov
mov
cmp
inc
bnd
adc
push
add
ret
ffree
inc
loop
ficomps
or
push
arpl
test
loope
fcomi
push
adc
orb
lods
and
jecxz
mov
and
sahf
xchg
inc
outsb
outsl
lea
int3
and
adc
adc
cli
and
sub
in
push
push
movl
xlat
mov
repnz
add
arpl
mov
fdivrl
add
orl
fldenv
adc
imul
and
pop
std
stos
mov
out
std
sti
lret
or
xchg
dec
ret
push
add
mov
sub
cmpb
push
pop
pop
rclb
xor
add
add
xor
pop
dec
pusha
push
xchg
cmp
fsubr
inc
in
adc
pop
cmc
cmp
pop
sub
jmp
aad
rcrl
je
mov
add
fildll
das
repz
insb
int3
adc
lcall
pusha
mov
lock
push
add
movsb
dec
mov
pop
loope
jne
add
add
xor
jmp
cmp
test
pop
shrb
fldcw
repnz
lods
sar
gs
lock
ret
imul
pop
pop
out
push
adc
adc
or
or
int3
cmp
dec
jno
mov
in
lcall
add
fcoml
shlb
not
enter
add
add
or
add
aas
push
lret
rorl
icebp
inc
loope
std
fisubs
int
jg
or
push
xchg
sub
dec
shrl
test
inc
dec
test
nop
xchg
sahf
sub
gs
in
push
cmp
repnz
popf
mov
iret
lret
cmpb
mov
js
lahf
mov
incl
aaa
fildl
xor
or
xor
adc
dec
inc
mov
lock
jp
push
sti
lret
sub
js
push
cs
out
push
pop
xchg
test
out
mov
pop
inc
mov
dec
shrl
cmp
push
adc
ja
popf
dec
xor
insl
push
xor
into
bound
repz
cmp
mov
push
add
add
add
cmc
dec
jae
daa
bound
lret
push
loope
addb
dec
lock
les
int3
lods
scas
mov
jnp
lods
mov
dec
stc
shll
stos
xor
xchg
pop
jmp
inc
sar
pop
setno
inc
push
inc
pop
xor
add
and
mov
bound
xchg
jns
pop
ficoms
mov
nop
lahf
fisttpll
loop
mov
movsl
movsb
fnsetpm(287
pop
shr
sti
push
xchg
adc
jne
or
sbb
mov
bound
adc
shll
xchg
sti
mov
cmp
cmp
mov
nopl
push
popa
mov
add
int
add
repnz
jnp
jbe
fs
cmp
jl
push
outsb
shrb
or
cs
sbb
mov
or
pop
sbb
testl
pop
xchg
dec
sbb
bound
sbb
outsb
xchg
sbb
push
sbb
mov
rclb
dec
xor
dec
adc
sbb
cmp
add
push
push
ret
lahf
jnp
push
xor
xlat
cmp
enter
or
push
mov
std
jg
ds
mov
cmp
inc
or
xor
sub
xor
xchg
xor
adc
xor
cli
rdpmc
push
lahf
push
leave
push
out
daa
das
and
arpl
rcrb
push
fs
jnp
and
sub
mov
cld
jbe
or
les
jno
adc
mov
sub
cmc
jno
fs
push
scas
cmpsb
pop
jle
pop
push
jl
repnz
jmp
push
popa
add
bound
loope
push
pop
ja
dec
or
cmp
xorb
pop
inc
daa
lcall
push
lret
adc
out
mov
cli
or
xchg
cli
jmp
lcall
test
out
mov
pop
mov
pop
mov
xlat
jmp
pop
xor
insl
pop
pop
sub
clc
xor
bound
es
pushf
xor
fidivs
les
adc
mov
dec
aaa
pop
jbe
xor
add
aas
dec
mov
ds
dec
test
repnz
pop
pop
cmp
movsl
push
cmp
pop
cmp
add
push
cmp
loope
shrb
ret
ja
subl
add
inc
push
adc
xchg
push
xlat
pop
ds
sbb
lcall
pop
rcrl
pop
ljmp
pop
jl
xchg
pop
imul
loopne
cmp
loope
adc
loop
jle
out
add
out
sub
in
xchg
out
out
lods
fsubr
aas
loope
in
or
pop
in
in
adc
lcall
ljmp
call
std
ja
insb
incl
pop
in
sbb
insl
add
sti
mov
lahf
stc
mov
popl
repz
add
js
repnz
xor
sub
or
xchg
ror
cmc
sbb
mov
cmp
jns
inc
into
mov
ficompl
aas
fcmovne
mov
pop
gs
cmc
fstl
xor
fmull
hlt
imul
and
sub
mov
mov
rorl
rorl
and
xchg
test
push
popa
popf
les
add
dec
lods
call
sbb
ss
xchg
mov
rorl
sub
adc
adc
loop
or
inc
add
xchg
cmpsl
rol
or
xchg
scas
fisubrs
mov
sub
leave
ljmp
addr16
fs
popf
test
mov
xchg
push
cmp
add
cmp
shlb
ja
push
jle
mov
aad
mov
pop
icebp
xlat
je
pop
adc
mov
dec
jae
mov
outsl
and
push
jo
out
jno
and
jne
or
jns
ficoms
js
mov
jl
sbb
fnsave
in
ja
das
xchg
cmpsb
pushl
shrl
add
add
xchg
xor
ss
fisubl
xchg
add
test
fwait
push
push
inc
popf
sub
stc
fwait
lods
in
mov
cwtl
add
inc
mov
cmp
mov
arpl
mov
in
cmp
cmc
mov
mov
inc
xor
xchg
xor
mov
fcomp
push
cmp
lahf
mov
adc
mov
jmp
jge,pn
bound
rep
mov
mov
lahf
ss
jbe
and
shll
les
icebp
jnp
repz
call
push
inc
xlat
dec
ret
popf
imul
or
loopne
in
pop
shrl
sbb
les
cli
xchg
test
filds
add
rcrl
movsl
hlt
jb
dec
adc
int
add
pop
dec
movsl
aas
mov
xchg
into
sbb
jo
mov
outsl
cmp
xor
mov
fistpl
cmp
mov
test
repnz
xchg
add
pop
test
in
pop
jns
sbb
popl
push
adc
mov
xor
add
std
aam
in
psubd
xchg
sub
cltd
xchg
pop
cld
hlt
and
ljmp
dec
loopne
or
nop
test
jp
ret
xchg
lahf
jp
jno
lret
xchg
shlb
cmp
jo
inc
std
in
loop
dec
and
dec
mov
pop
adc
cmp
cmpsl
sub
xchg
sbb
sub
jbe
iret
push
stos
mov
jle
add
xchg
push
and
xor
pop
push
cvtdq2ps
xor
int3
inc
sub
mov
inc
add
mov
push
mov
sub
dec
add
cmpsl
mov
pop
mov
mov
shr
es
mov
pop
out
iret
inc
push
xchg
cmpsl
call
jae
js
into
mov
pop
cmp
adc
push
add
add
jmp
sub
inc
xchg
aad
pusha
mulb
push
sbb
mov
add
xchg
cmpsl
xchg
cltd
push
jo
cmova
inc
bound
pop
push
in
inc
adc
jo
mov
enter
ficoml
xor
in
std
imul
pop
rcr
jae
xor
in
cld
xlat
pop
test
jmp
negl
jo
div
add
adc
mov
test
es
inc
add
mov
jl
xor
jno
in
aas
sbb
push
cltd
cmp
inc
mov
int
add
cmp
incb
enter
jo
fs
sub
adcb
sub
cmpb
xor
adc
pop
scas
mov
or
rcrb
add
cmp
add
lods
ss
scas
and
call
sub
std
scas
cmc
js
push
dec
shlb
rclb
es
test
imul
repz
xchg
cmc
dec
push
shll
mov
fiadds
ret
stos
mov
imul
lahf
addr16
dec
dec
arpl
add
jg
mov
push
xor
mov
sarb
mov
fimuls
or
inc
jb
sbb
int
sarb
mov
adc
mov
sbb
pop
sbb
pop
roll
scas
loop
iret
popf
inc
lret
jae
scas
mov
adcb
lods
or
push
adc
inc
dec
jge
stos
gs
inc
out
sbb
mov
outsl
into
xchg
lret
insb
gs
or
lahf
loopne
sbb
cwtl
inc
push
mov
mov
mov
arpl
mov
or
shlb
cli
xor
insl
xlat
sbb
ss
nop
xchg
cmp
mov
pop
test
jge
xchg
das
sti
mov
xor
add
add
leave
or
dec
movsb
and
movsl
add
outsb
push
mov
cmp
cmp
mov
lcall
lds
fistl
pop
cwtl
loopne
pop
in
push
pop
scas
adc
inc
stos
xor
xchg
cmp
imul
jecxz
loop
pop
aaa
lcall
fisttpll
sub
lahf
aas
add
rep
xchg
cmp
add
shl
pop
push
cmpsb
xorb
cs
mov
lret
inc
int3
andl
sub
aam
inc
mov
push
mov
int3
mov
mov
pop
add
out
add
cltd
add
xchg
adc
pop
sub
mov
mov
push
pop
cmc
fisubs
mov
outsl
leave
mov
push
sbb
fmuls
add
add
and
sbb
push
xor
fs
sub
repnz
sub
insb
aad
add
jmp
shll
xor
adc
rorb
stc
movsl
sbb
leave
sub
add
or
add
add
and
pop
out
adc
subl
pop
incb
in
ljmp
xchg
incl
aad
test
jecxz
cwtl
cmp
leave
jns
insl
stc
pcmpeqb
insb
lods
fmul
pop
add
sarl
mov
fcmovu
push
iret
xchg
popa
inc
add
lcall
xchg
out
outsl
movsl
dec
stc
iret
add
xlat
add
incl
insb
pop
cld
daa
and
or
and
add
bound
sub
hlt
pop
rorb
ljmp
das
jne
fnstcw
jecxz
jne
and
add
push
outsl
stos
pop
shrb
pop
xchg
add
xchg
sbb
lock
pop
sub
lea
sbb
lods
cld
pop
out
sbb
pop
rcrl
dec
inc
aam
mov
xor
imul
xor
add
cmp
sti
mov
jno
or
call
push
in
gs
repnz
xor
sbb
dec
iret
mov
je
gs
inc
cld
xchg
mov
lea
lods
cli
sub
imul
sar
inc
imul
jno
dec
adc
inc
xchg
mov
enter
add
cmp
xchg
gs
xchg
mov
mov
push
adc
mov
or
in
or
clc
push
inc
enter
cltd
and
test
pop
sbb
pop
cmp
and
sbb
andb
es
cmc
jecxz,pn
subb
lcall
jbe
mov
daa
adc
adc
add
and
cmp
cvtdq2ps
and
clc
scas
daa
imul
mov
mov
inc
icebp
mov
rorb
add
out
add
push
repz
and
addr16
push
ss
sbb
mov
jp
jnp
dec
add
imul
push
shll
mov
aam
testl
ret
int3
bnd
imul
stos
ja
lcall
sub
aam
dec
mov
pop
and
mov
fistps
jno
mov
sbb
pushf
test
jge
mov
inc
mov
add
xchg
push
imul
pop
outsb
push
loope
ja
add
jne
lods
jo
std
sub
or
rcll
jmp
xchg
int
adc
and
fistpl
xchg
ljmp
pusha
sar
jp
cmp
xor
sbb
jge
adc
or
fdivl
icebp
pop
add
nop
mov
and
aad
jg
inc
roll
add
or
aaa
mov
pop
mov
cmp
sub
push
and
jno
dec
out
lret
pop
jbe
xchg
incb
sub
mov
rcl
pop
ret
ljmp
daa
dec
jbe
adc
ret
mov
pop
cltd
insb
or
and
dec
out
push
sub
push
sbbl
sarb
sub
lock
add
pop
sbb
lds
sub
jg
sub
jmp
sbb
ret
mov
sub
add
fcmovb
push
sub
mov
jp
push
dec
mov
or
sub
test
mov
mov
in
idiv
add
dec
das
inc
xor
pusha
orb
ret
sbb
les
add
sub
inc
pop
aas
cmpsb
xchg
xchg
faddp
mov
out
mov
call
xchg
inc
outsb
dec
push
in
jle
dec
test
cwtl
insb
les
jb
and
lret
jl
cltd
inc
fldl
pop
xlat
lcall
mov
xchg
test
jnp
test
hlt
cmp
lret
das
pop
mov
add
pop
push
inc
aas
adc
jle
lods
sbb
je
das
sbbb
jno
loope
leave
mov
mov
enter
mov
inc
icebp
bound
mov
loopne
xor
and
repnz
pop
enter
jecxz
inc
fstp
pop
daa
push
inc
inc
sbb
xor
sub
jmp
mov
push
push
add
and
add
in
mov
mov
jg
jae
pop
icebp
xor
jne
icebp
jp
xchg
test
leave
xor
hlt
shlb
pop
xor
mov
imul
div
cmp
lods
xchg
subb
ret
loope
mov
enter
jecxz
push
mov
pop
xchg
and
mov
dec
pop
movsl
sbb
mov
lret
mov
repz
popa
in
js
xchg
daa
adc
adc
mov
xor
rcll
imul
mov
jne
pop
pop
out
pop
ficoml
int
sbb
lcall
push
out
xchg
jmp
pop
mov
test
loop
dec
int
dec
and
pusha
add
add
int
scas
add
subb
icebp
and
dec
adc
std
roll
aam
jne
cmp
inc
mov
lods
sbb
sub
aam
mov
push
xlat
in
xor
repnz
cmp
mov
push
mov
cli
insb
test
mov
mov
cmp
add
inc
jge
or
outsl
cli
xchg
mov
lret
xlat
rcll
insb
inc
xor
ret
dec
adc
inc
and
sbb
push
inc
iret
dec
out
adc
in
cmp
pop
test
roll
xor
pop
sub
fldenv
int
dec
pop
sahf
in
jge
sti
pop
sub
add
lea
cmp
add
jl
push
fildll
outsb
push
push
aad
lds
xchg
hlt
cwtl
repz
mov
xchg
cld
xchg
mov
je
stos
pop
fnstenv
sahf
fwait
xor
pop
mov
inc
sbb
cmp
popa
lcall
and
sbb
jno
xchg
jecxz
lea
mov
rorb
test
mov
mov
add
sbb
push
fwait
inc
das
push
jno
lods
jp
push
jmp
jg
sub
pop
jae
aad
cmp
out
jns
mov
out
gs
sbb
movsl
add
jbe
mov
ret
stos
xchg
push
rcrb
jbe
xchg
xor
or
leave
add
mov
mov
inc
add
push
fadds
add
pop
sti
orl
xchg
inc
cmp
sbb
scas
rcrl
mov
subl
pushf
addl
dec
ja
sbb
jno
cwtl
pop
inc
inc
fnstenv
mov
push
xchg
mov
or
mov
mov
dec
jmp
rclb
loopne
lods
adc
mov
dec
mov
add
push
xchg
sub
pop
js
and
movsl
sbb
sub
hlt
mov
mov
mov
dec
loopne
arpl
sar
pop
ja
aas
push
cs
imulb
pop
mov
inc
cmp
shrl
imul
hlt
dec
add
or
cmovp
cmpl
add
sbb
lret
sbb
out
pop
xchg
add
dec
xchg
les
xchg
xchg
xor
test
mov
jl
popf
push
push
shlb
mov
fcomps
aaa
out
outsb
test
mov
sub
sbb
ljmp
scas
fs
cwtl
and
jecxz
scas
popa
add
add
leave
insl
fisttps
stc
stc
push
mov
cwtl
out
stc
push
sub
adc
mov
fists
pop
shll
xlat
sbb
mov
adc
fnsave
or
mov
repz
gs
in
add
cmp
jg
sbb
mov
cmpsl
stc
mov
jbe
imul
xchg
mov
sub
fcomps
mov
cmpsl
push
out
xchg
mov
xorb
or
andb
daa
lods
adc
xor
sub
stos
push
shl
inc
shr
outsl
aam
add
ret
mov
mov
push
je
pop
mov
scas
pop
cmp
sbb
bound
sub
add
add
addb
jns
adc
dec
adc
icebp
push
or
lret
sub
xchg
repz
pop
lret
repnz
mov
aad
mov
push
xchg
and
fistpll
sbb
push
in
pop
push
int
add
mov
xor
aad
adc
xlat
xchg
stos
data16
push
rclb
aam
fnstsw
mov
add
add
outsb
lret
mov
sbb
jns
addr16
cld
js
pop
lret
push
mov
cmp
fwait
cwtl
xor
lock
xor
and
inc
negb
xor
out
and
mov
add
add
arpl
mov
inc
jg
rcr
fsubrs
sub
mov
add
mov
push
and
in
shrl
xchg
xchg
cli
dec
mov
inc
jne
jno
bound
xchg
jno
mov
iret
test
mov
mov
mov
pop
addr16
mov
out
inc
je
and
arpl
out
mov
loope
mov
lds
pop
xchg
stc
fs
add
add
orl
push
inc
cli
pop
aad
mov
adc
xor
sub
sbb
int3
and
mov
fistpl
inc
cwtl
or
or
pop
decl
shlb
rcrb
mov
repnz
lods
loope
adc
outsl
xchg
xchg
outsb
mov
add
shll
add
add
jns
and
out
lcall
pop
sub
mov
es
test
es
inc
sub
int
cltd
in
sub
ja
sub
push
test
and
or
xor
lret
es
sbb
dec
pusha
sub
xor
inc
jns
movsl
jbe
test
das
jp
add
loop
pop
pop
sub
dec
stos
pop
mov
repz
jmp
les
gs
into
jne
pop
xchg
insb
shll
mov
and
add
mov
jge
je
xor
lock
scas
mov
jge
in
popf
cmp
fldt
mov
mov
and
je
push
mov
addr16
fcmovnbe
add
add
int
imul
arpl
push
cmp
jae
fistps
mov
int3
xlat
add
int
outsl
stc
rclb
rcll
adc
adc
and
or
jmp
dec
xor
push
stc
cmp
aas
push
xor
inc
pop
cs
std
movsl
sub
mov
sbb
addl
and
fildl
add
push
and
mov
and
lods
and
and
icebp
inc
cwtl
dec
aaa
testb
pushf
push
ss
out
pop
cmc
sarb
mov
pop
pop
xor
enter
scas
mov
cmpsb
mov
pop
jae
mov
stc
lods
push
aaa
nop
sbb
push
outsl
adc
xor
add
add
mov
pop
inc
mov
pop
jg
push
hlt
roll
addr16
sub
sbb
lock
mov
lret
jl
subb
repnz
push
xlat
pop
mov
jg
enter
adc
das
dec
loopne
adc
decl
sub
orb
xor
adc
clc
in
add
add
jecxz
jmp
ja
mov
das
pop
push
adc
xchg
rorb
sbb
sub
sub
pop
imul
jle
mov
iret
sub
inc
dec
xchg
push
mull
leave
icebp
xchg
sbb
push
jl
loopne
sbb
xchg
dec
insb
repz
add
cli
pop
mov
jmp
fnstcw
outsb
xchg
inc
add
add
testb
ficomps
mov
mov
xor
int
lret
prefetchnta
push
loope
mov
jno
shlb
mov
cmp
mov
and
cmc
in
dec
imul
mov
pop
sahf
sub
mov
cmc
pop
push
nop
mov
push
jle
pop
sbb
add
clc
cmp
dec
mov
inc
out
cli
cmc
mov
ud0
jg
push
sbb
add
and
xlat
clc
jno
mov
ds
add
test
jne
iret
lds
fildll
out
fstpt
lock
outsl
dec
mov
inc
das
jno
popf
cmpb
out
xlat
lahf
add
add
filds
addr16
leave
mov
popf
cmp
add
movsl
push
loope
decl
inc
mov
pop
mov
es
pop
xor
xor
pop
mov
mov
stc
aam
add
xor
sahf
cmp
xor
imul
fldcw
mov
shlb
cmp
fld
js
add
add
push
add
cmp
fisttps
inc
js
shl
xchg
in
push
icebp
xor
ljmp
xchg
leave
mov
jle
xchg
das
cli
loope
test
jbe
adcl
and
insl
es
lahf
popl
xor
dec
mov
mov
ljmp
std
scas
jmp
inc
adcl
data16
jecxz
popa
into
add
add
fldenv
stos
inc
imul
xchg
ss
push
xor
cltd
sbb
mov
fldcw
inc
mov
mov
jnp
out
add
ds
mov
aaa
aam
lock
add
sub
sahf
inc
jae
fsubp
cwtl
jne
sbb
int3
adc
or
mov
adc
clc
adc
add
add
mov
add
sahf
xchg
inc
ret
adc
test
sbb
out
push
loopne
mov
xor
lea
insl
inc
call
and
xor
mov
lea
xlat
mov
jge
mov
bound
cmp
xchg
or
ljmp
xor
dec
loope
cltd
mov
mov
outsl
adc
push
pop
ja
add
mov
sbb
cmc
in
jge
andb
push
nop
jbe
lret
dec
pop
popf
pop
loop
cmp
mov
test
cs
pusha
adc
jge
cmc
or
test
pop
adc
sub
or
fcoml
out
sbb
gs
pop
negb
into
sahf
mov
push
popf
dec
les
push
adc
incb
add
iret
mov
cwtl
xor
ss
cmp
push
test
clc
scas
jno
jmp
fidivs
mov
xchg
dec
out
addl
test
stos
mov
inc
and
xchg
add
mov
clc
jae
lcall
or
call
add
out
dec
stc
out
dec
stc
out
dec
stc
out
add
add
out
dec
stc
out
dec
stc
call
add
call
add
jmp
add
jmp
add
ljmp
stc
ljmp
stc
jmp
dec
stc
jecxz
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
mov
add
push
add
jecxz
add
cmc
dec
push
add
dec
or
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
push
sti
add
cli
add
out
cli
add
add
add
cli
add
cld
cli
add
fdivr
add
in
cli
add
in
cli
add
add
mov
cli
add
fwait
cli
add
cmpsb
cli
add
mov
add
mov
add
cmpsb
cli
add
cmpsb
cli
add
jbe
add
jbe
add
data16
add
data16
add
jbe
add
jbe
add
data16
add
data16
add
ss
add
ss
add
es
add
add
add
add
xor
cmpsl
add
dec
mov
add
dec
and
or
add
dec
hlt
add
dec
lods
add
dec
inc
add
or
add
dec
pushf
add
dec
xor
or
add
dec
add
or
add
dec
je
or
add
or
add
dec
and
or
add
dec
bound
or
add
add
add
add
dec
add
or
add
dec
xor
or
add
dec
jo
or
sbb
stc
cltd
add
flds
inc
stc
pop
add
icebp
add
jno
push
stc
mov
add
roll
push
stc
push
add
addl
inc
stc
loope
push
stc
popa
add
xchg
add
adc
inc
stc
and
stc
mov
push
stc
push
add
stc
roll
stc
in
add
gs
stc
sub
add
stc
int
push
stc
inc
add
stc
or
add
stc
fldl
push
stc
push
add
stc
add
push
add
xchg
dec
add
pop
push
add
xchg
dec
add
fisttps
push
dec
add
testl
cmpsl
dec
add
pop
dec
add
xlat
dec
add
dec
dec
add
xchg
add
dec
add
decl
out
add
pop
dec
add
xchg
dec
add
cmovnp
add
push
add
lahf
dec
add
push
push
add
iret
dec
add
call
dec
add
sub
add
dec
add
dec
dec
add
or
add
daa
testl
add
or
xlat
testb
inc
std
or
testb
div
or
add
add
or
push
or
jg
or
scas
testb
das
testb
push
or
jg
or
iret
testb
dec
testb
scas
testb
das
testb
fcomip
or
pop
testb
outsl
std
or
out
std
or
cld
or
jg
or
jnp
or
jmp
or
sub
or
stos
std
or
fwait
testb
or
or
dec
add
add
dec
mov
or
add
or
add
or
add
or
add
or
add
or
add
dec
lods
add
dec
inc
add
or
add
dec
popf
add
dec
xor
add
dec
add
add
dec
jne
or
add
or
add
add
add
add
or
add
add
stc
cmp
inc
stc
mov
add
mov
add
cmp
stc
fiaddl
push
stc
fiaddl
stc
pop
add
pop
add
stc
repnz
repnz
stc
bound
inc
stc
bound
stc
mov
push
stc
mov
inc
stc
and
inc
stc
and
stc
rolb
push
stc
rolb
add
inc
stc
inc
add
inc
add
stc
push
add
stc
push
add
ret
stc
ret
stc
loop
push
stc
loop
inc
stc
add
add
push
dec
add
inc
dec
add
inc
dec
add
mov
add
mov
add
ret
add
dec
add
xor
add
dec
add
loop
add
loop
add
push
dec
add
push
dec
add
out
dec
add
out
add
outsb
add
add
add
add
scas
dec
add
cmpsb
dec
add
cs
add
es
add
into
dec
add
dec
add
dec
dec
add
inc
dec
add
dec
dec
add
inc
dec
add
into
dec
add
dec
add
add
cli
pop
add
cld
pop
add
sti
pop
add
cmc
pop
add
cld
pop
add
cld
pop
add
sti
pop
add
cld
pop
add
pop
add
add
popa
sti
pop
add
sti
pop
add
cld
pop
add
pop
add
cli
pop
add
sti
pop
add
pop
add
cli
pop
add
cli
pop
add
pop
add
sti
pop
add
cli
pop
add
pop
add
hlt
pop
add
hlt
pop
add
add
or
add
dec
scas
add
or
add
add
add
add
or
add
or
add
dec
dec
add
or
add
dec
xchg
add
dec
scas
add
or
add
dec
mov
add
dec
add
pop
dec
nop
add
dec
push
add
dec
mov
pop
dec
jo
pop
dec
mov
pop
dec
dec
add
dec
mov
add
dec
stc
incl
add
add
aas
add
stc
push
stc
dec
add
stc
jmp
push
stc
and
stc
or
stc
inc
add
stc
sti
add
xor
stc
fildl
push
stc
adc
stc
ljmp
stc
sub
stc
stos
add
or
stc
mov
inc
stc
lret
stc
dec
add
out
push
stc
xlat
add
filds
push
stc
iret
add
jmp
push
stc
repz
add
dec
stc
jecxz
push
stc
jmp
dec
stc
jmp
add
add
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
dec
testb
add
add
add
add
add
cli
cmc
push
out
repnz
loope
repz
aad
or
aad
or
movb
jecxz
add
add
or
lods
nop
or
lods
nop
or
popf
nop
or
popf
nop
or
jb
or
orl
addb
or
orl
addb
or
orl
xor
and
or
xor
or
and
push
and
or
loopne
or
lock
add
or
loopne
or
dec
xchg
hlt
or
dec
xor
inc
lcall
push
stos
hlt
or
inc
lcall
push
stos
adc
add
add
adc
inc
fwait
adc
pop
xchg
adc
push
stos
adc
dec
adcl
inc
fwait
adc
pop
xchg
adc
push
stos
adc
dec
adcl
inc
fwait
adc
pop
xchg
adc
push
stos
adc
dec
adcl
inc
fwait
adc
pop
mov
adc
pop
lods
push
adc
movsl
sbb
cmp
sbb
loop
sbb
out
sbb
out
sbb
fistps
add
add
fistps
inc
icebp
rcrb
lock
lock
data16
sbb
push
out
loope
push
out
loope
inc
out
rcrl
xor
out
add
gs
push
fs
push
push
in
push
push
in
push
inc
in
push
inc
in
push
xor
add
xor
add
fs
pop
arpl
jmp
pop
in
pop
push
in
pop
add
add
add
inc
in
int
in
add
push
in
in
pop
in
in
in
fisttpll
sbb
inc
in
int
in
add
push
out
in
pop
out
in
out
fmull
sbb
inc
out
int3
cmp
sbb
out
cld
imul
sbb
pop
out
in
out
fmull
sbb
add
add
sbb
cmp
sbb
out
cld
imul
add
push
incl
or
cmc
or
ljmp
or
mov
jmp
adc
ljmp
test
adc
je
adc
xchg
in
adc
test
adc
sub
adc
out
adc
xchg
out
adc
sub
adc
out
adc
out
adc
inc
lock
inc
loope
push
adc
push
push
add
push
push
add
adc
pop
adc
adc
pop
dec
mov
sbb
sbb
push
cwtl
sbb
inc
cwtl
sbb
inc
test
sbb
test
sbb
clc
sbb
addr16
sbb
mov
sbb
sbb
push
cltd
sbb
inc
cltd
sbb
inc
test
sbb
add
add
stc
sbb
data16
sbb
data16
sbb
sbb
push
lcall
inc
stos
sbb
xor
cli
sbb
gs
sbb
mov
sbb
sbb
sbb
sbb
sbb
sbb
xor
add
fs
sbb
add
call
add
ljmp
stc
in
dec
stc
in
add
add
dec
stc
out
dec
stc
filds
dec
stc
loope
dec
stc
repz
in
add
xlat
add
roll
dec
stc
incl
dec
stc
sti
add
pop
add
stc
incl
dec
stc
testl
dec
stc
daa
add
stc
pop
add
stc
pop
add
stc
pop
add
stc
add
inc
add
cmpsl
add
xchg
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
stc
add
dec
stc
add
dec
stc
add
stc
add
dec
stc
add
dec
stc
add
push
stc
add
dec
stc
add
inc
stc
add
inc
stc
add
pop
stc
add
fs
add
add
add
jmp
ss
pushl
add
add
cmpl
add
add
cmpl
add
add
testl
add
testl
add
adc
add
sub
gs
cmp
and
add
add
mull
add
add
add
inc
notl
add
adc
dec
addb
dec
addb
dec
mov
add
dec
sahf
add
dec
sahf
add
dec
jg
adc
add
dec
test
adc
mov
adc
movsl
add
dec
mov
add
dec
xchg
add
dec
popl
add
xchg
add
dec
cltd
add
mov
add
dec
push
add
adc
rorl
orl
incb
dec
xchg
or
pop
xchg
adc
inc
xchg
and
pop
xchg
ret
popl
add
testl
pop
stc
clc
add
stc
add
stc
roll
inc
stc
faddl
cmp
aad
popa
stc
incb
pop
stc
incl
push
stc
lock
icebp
add
loop
add
add
add
stc
aam
xor
cmpsl
add
stc
and
stc
rcll
dec
stc
mov
add
stc
sti
xchg
psubw
add
repz
psubw
add
stc
lret
xchg
psubw
xchg
psubw
add
stc
mov
popa
dec
lock
cmp
fmuls
pop
fidivrs
add
dec
testb
mov
cld
add
add
mov
in
add
cmp
cmpsl
dec
repz
cmp
adc
mov
testl
imul
fidivrs
add
dec
cld
add
dec
cmc
add
dec
repnz
dec
leave
add
fidivrs
add
fidivrs
add
dec
repnz
mov
cmc
or
mov
add
add
pop
cld
adc
adc
add
and
out
inc
add
hlt
add
jle
inc
add
jo
add
jo
add
cld
and
pop
jo
add
outsb
inc
add
cmc
sbb
imulb
add
hlt
or
add
imul
stos
outsl
inc
add
sti
add
imul
add
add
inc
add
ltr
outsl
inc
add
add
dec
jp
inc
dec
and
pop
dec
jb
inc
dec
mov
mov
int
or
adc
add
call
add
dec
orb
dec
lock
inc
dec
cmpsb
add
dec
inc
mov
cmp
mov
cli
add
dec
push
mov
sub
adc
add
add
add
dec
jl
inc
dec
mov
or
mov
or
adc
xchg
inc
dec
out
or
xchg
inc
dec
stc
mov
stc
mov
add
stc
mov
psubw
add
stc
cmpsl
xchg
psubw
push
stc
outsl
xchg
stc
dec
add
stc
dec
xchg
stc
movsl
add
stc
imul
stc
push
xchg
stc
fadds
push
stc
pop
xchg
stc
outsb
add
add
xchg
clc
cmpsl
xchg
stc
cs
stc
aas
xchg
stc
add
stc
jnp
stc
and
stc
popl
jl
fwait
xchg
psubw
psubw
xchg
psubw
rorl
mov
cmp
pop
push
in
add
fidivrl
add
mov
cmc
add
push
cmc
add
dec
out
add
cmp
and
add
cmp
sbb
add
cmp
jno
testb
fdivrl
add
dec
hlt
add
cmp
testl
call
mov
in
add
dec
testb
fdivrl
add
dec
in
aad
cmp
add
clc
push
add
inc
add
push
adc
outsb
jbe
add
add
js
push
add
clc
add
xorb
push
clc
sub
add
hlt
adc
add
sbb
scas
jbe
add
or
add
jbe
add
sbb
add
mull
fidivs
ljmp
add
inc
add
add
push
jae
add
add
add
add
test
rolb
fiaddl
push
dec
fiaddl
or
pop
test
jo
adc
test
sbb
push
dec
push
test
pop
add
dec
loopne
inc
dec
popa
add
dec
aam
inc
dec
out
add
dec
movsb
test
lock
dec
mov
inc
dec
pop
add
dec
lods
test
arpl
adc
xchg
test
loop
add
sub
inc
add
add
add
les
add
mov
and
dec
stc
add
cmp
stc
jae
inc
stc
daa
xchg
stc
add
cmp
push
stc
imul
stc
orl
stc
xor
push
stc
aas
orl
stc
rolb
stc
sub
add
add
adc
dec
stc
sbb
pop
stc
pop
orl
stc
jo
inc
stc
pop
orl
icebp
add
iret
cmp
jp
out
add
iret
cmp
sub
out
add
dec
repnz
or
add
add
clc
cmp
dec
dec
icebp
add
call
icebp
add
dec
flds
jns
add
enter
dec
add
test
add
subl
mov
add
iret
mov
add
js
add
dec
or
mov
dec
add
mov
cwtl
cld
or
repnz
inc
add
add
stos
clc
inc
add
cld
add
cmp
add
add
jbe
inc
add
clc
inc
add
add
inc
cld
sbb
xchg
clc
inc
add
clc
inc
add
std
or
mov
inc
add
push
add
testb
cld
add
cli
cmc
inc
add
or
cmc
inc
add
cld
add
fdivp
inc
add
add
out
inc
add
add
scas
cmc
inc
add
cld
add
testb
ret
dec
mov
mov
jl
dec
test
push
add
add
jnp
dec
jge
pop
dec
mov
dec
testb
cmpsb
jge
dec
inc
add
dec
xchg
jge
dec
rolb
lcall
dec
push
jl
dec
or
inc
dec
jp
sub
jge
dec
roll
or
jl
dec
jecxz
or
jl
dec
addl
dec
cmpb
add
inc
dec
insb
add
dec
xchg
jl
add
add
inc
add
jge
stc
xchg
add
xchg
jge
stc
dec
add
mov
stc
insb
add
cmpl
sub
jge
stc
jnp
dec
stc
pop
jge
stc
add
jg
psubw
jge
stc
roll
aaa
jp
stc
inc
add
stc
pop
jp
stc
sbb
push
stc
daa
jp
stc
repnz
jmp
stc
das
add
add
push
stc
sarl
stc
xchg
add
stc
mov
add
stc
fstpt
stc
add
dec
std
add
jbe
add
push
std
add
mov
push
std
add
push
mov
add
mov
add
xor
add
mov
add
dec
incl
jne
mov
add
dec
add
add
mov
add
sarb
add
ret
mov
add
mov
add
mov
add
fstl
stc
pop
add
cmc
inc
add
or
jbe
inc
add
clc
or
mov
inc
add
or
sbb
inc
add
push
add
inc
add
clc
adc
lret
add
or
into
lock
add
add
mov
lock
add
clc
adc
cli
out
inc
add
lock
add
or
push
cmc
inc
add
std
or
cs
inc
add
lock
add
inc
add
push
add
lock
add
add
inc
dec
popf
add
inc
dec
lea
inc
dec
sbb
inc
dec
dec
add
add
add
test
leave
add
dec
fiaddl
adc
loop
inc
dec
aad
pop
dec
mov
adc
test
xor
inc
dec
or
test
and
inc
dec
lods
add
dec
mov
inc
dec
cmpsb
add
dec
movsb
test
xchg
add
dec
pushf
test
stc
cmp
test
stc
imul
push
add
push
test
stc
pop
test
stc
pop
xchg
stc
filds
dec
stc
out
psubw
add
aaa
xchg
stc
stos
add
xchg
stc
mov
xchg
stc
sub
push
stc
sub
inc
stc
daa
xchg
stc
incb
push
stc
xchg
orl
stc
orl
push
stc
xor
dec
or
dec
into
mov
add
dec
incb
and
mov
add
into
mov
add
dec
sbb
in
mov
add
mov
add
mov
add
iret
mov
add
iret
mov
add
mov
add
add
iret
mov
add
mov
add
mov
add
mov
pop
add
inc
add
jns
add
std
add
es
add
es
add
idiv
add
idiv
add
out
add
out
add
idiv
add
idiv
add
out
add
out
add
push
sbb
daa
mov
sub
cmpsb
adc
add
add
mov
xor
mov
sbb
add
cmpsb
push
pusha
arpl
pop
fimuls
imul
insb
outsl
mulb
loop
je
out
arpl
data16
pop
pop
dec
ret
lods
mov
gs
fldcw
mov
bnd
es
jne
sbb
jns
push
add
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
add
add
out
dec
stc
out
dec
stc
xchg
push
add
push
lock
ja
call
outsb
addr16
shrb
push
shrb
mov
outsb
call
decb
out
cli
cltd
outsb
pop
push
push
std
fdivr
push
outsb
pop
push
jo
add
lock
out
call
add
lock
fsubrp
insl
inc
add
mov
mov
mov
scas
test
cmpsb
mov
sahf
test
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
data16
add
data16
add
jbe
add
jbe
add
data16
add
data16
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
es
add
es
add
idiv
add
idiv
add
out
add
out
add
idiv
add
idiv
add
out
add
out
add
add
add
cmc
incl
cmpsl
cmc
incl
cmpsl
cmc
incl
mov
incl
mov
incl
cmpsl
cmc
incl
cmpsl
cmc
decl
add
add
add
add
add
add
add
dec
popa
add
dec
popa
add
dec
popa
add
dec
popa
add
dec
popa
add
dec
popa
add
dec
popa
add
dec
popa
add
dec
popa
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
add
add
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
out
dec
stc
xor
leave
mov
mov
mov
push
adc
aas
data16
cmp
insl
fcomps
icebp
dec
push
xchg
pop
popf
cwtl
ja
lods
add
js
out
std
addr16
fstp
xchg
inc
push
xor
insl
mov
jnp
pop
xchg
jns
jmp
xor
aam
shrl
xor
and
pop
sub
or
leave
inc
dec
popl
mov
cmp
mov
mov
xor
mov
push
ljmp
sets
mov
mov
add
or
add
call
xor
les
shrb
cld
jae
jb
dec
dec
mov
mov
lods
ljmp
push
outsl
mov
lea
or
daa
les
sbb
out
or
mov
and
cmpsb
mov
xchg
add
cs
enter
push
pop
inc
popa
push
pushf
push
jg
add
add
push
jne
outsb
sbb
mov
fildll
cmp
test
addb
andb
push
aaa
jnp
shll
mov
mov
dec
push
jbe
addr16
mov
stc
into
xchg
push
repz
bound
icebp
sub
or
icebp
mov
stos
mov
and
fdiv
in
xor
pop
cmp
or
movb
add
clc
dec
xchg
xor
inc
incl
lcall
sahf
pop
add
sbb
push
stc
mov
insb
push
adc
lret
xchg
out
mov
or
push
into
add
sti
cmc
cmp
mov
loope
ds
adc
repz
fnsave
jnp
pushf
ss
sub
xchg
add
add
imul
imul
cmp
fimuls
push
in
mov
insb
cmp
cmp
aam
outsl
gs
mov
or
cld
jo
jmp
inc
push
jl
gs
push
hlt
outsl
and
inc
ret
push
lods
btr
hlt
jne
push
inc
adcb
in
jae
xchg
pop
aad
add
xor
lods
add
add
xor
pop
popf
inc
push
arpl
ret
enter
pop
shl
idivb
add
data16
cmp
add
pop
fnsave
inc
pop
jmp
xor
add
adc
xor
jo
imul
fst
inc
out
xchg
mov
xor
jp
lea
add
xor
add
push
add
add
scas
out
xchg
cwtl
xchg
ljmp
lea
push
push
outsl
xor
add
xor
add
xor
add
ss
scas
add
out
ret
sbb
cmp
movb
mov
push
push
add
xchg
cmp
add
sahf
std
cmp
add
arpl
dec
lds
add
add
jge
dec
add
cmp
cs
rclb
je
add
mov
add
jle
insb
xchg
bound
dec
fidivs
lods
push
pop
fwait
jne
pop
or
mov
cmp
popa
inc
ficomps
fwait
cmp
sbb
mov
xor
repnz
icebp
pop
cmc
mov
mov
inc
subb
int3
xor
xchg
fldenv
sbb
push
dec
sbb
stc
outsl
sbb
sbb
push
add
icebp
adc
sub
lea
pushf
cmc
leave
mov
aad
out
and
cmpsl
push
xor
nop
pop
cltd
and
dec
sbb
inc
push
clc
fiaddl
xchg
xor
jae
pop
mov
sub
sub
popa
sub
adc
lcall
adc
jbe
sub
cmpsl
aad
dec
xchg
sbb
es
push
push
shl
pop
sub
loop
pop
xor
pop
ret
pop
movsb
xor
out
xor
sahf
clc
ret
mov
xor
mov
pushf
xor
add
cmp
inc
and
add
cmp
adcb
loopne
fldpi
mov
jnp
ljmp
push
cmc
inc
mov
aas
or
and
jmp
dec
stc
ret
mov
sti
insl
jnp
fiaddl
lret
mov
outsb
out
lds
movsl
pushf
or
xor
or
xor
or
xor
dec
dec
dec
add
add
lods
vpunpckhdq
nop
loop
sbb
addr16
js
gs
outsl
cmp
add
cmp
and
mov
push
sahf
adc
jae
mov
mov
inc
arpl
cli
std
stos
aas
ss
add
es
adc
adc
jbe
enter
mov
add
shrb
int
out
imul
cmp
adc
pop
sbb
and
inc
jge
mov
enter
cwtl
sbb
push
mov
sahf
stos
fists
sbb
xor
bound
dec
push
add
dec
mov
pop
cs
sbb
pmuludq
popa
xchg
ret
cmpsb
sub
jle
add
jp
jecxz
jle
adc
mov
aaa
push
xchg
sub
sahf
sub
mov
out
mov
lcall
fdivrp
cmp
ret
loopne
cld
cmp
pop
sub
adc
shrb
adc
out
dec
pushf
and
loopne
inc
loopne
and
jae
pop
lds
clc
sbb
add
in
das
into
jne
jb
xchg
pop
pop
push
pop
int3
and
inc
and
mov
inc
je
pop
inc
cmpsl
repz
mov
dec
clc
call
dec
stc
add
dec
stc
add
dec
sti
add
add
add
in
dec
out
or
cmc
icebp
add
loope
add
fstp
cld
sbb
lds
adc
add
adc
or
cmp
xor
xor
cmp
cmp
ds
mov
shrb
imul
jno
xchg
in
add
inc
js
mov
pop
pop
pop
pusha
arpl
ds
dec
push
outsl
xchg
jp
je
mov
jnp
inc
jl
jbe
addl
insb
mov
jo
data16
xchg
pop
call
lcall
xchg
mov
cmpsl
fimuls
scas
scas
movb
mov
jnp
mov
ss
ret
sub
lret
mov
iret
dec
and
jl
xor
adcb
fidivl
fisubrs
repz
sub
pop
out
dec
insl
ljmp
add
inc
push
repnz
push
mulb
cmp
adc
pop
decb
push
add
push
push
push
or
push
pop
cmc
adc
icebp
adc
xor
stc
sbb
insb
and
jo
sub
fs
daa
js,pn
adc
pop
push
adc
pusha
cli
sbb
push
pop
sbb
dec
xchg
in
in
xor
in
out
mov
cli
lret
xchg
aam
add
fsubp
xchg
shl
jecxz
mov
xchg
mov
das
lret
xchg
aaa
mov
enter
les
mov
mov
addr16
fs
jae
mov
outsl
insb
xchg
imul
xchg
andl
jg
ja
jnp
mov
icebp
xchg
nop
stos
in
mov
frstor
add
mov
jl
leave
fwait
add
or
ret
xor
xor
lret
sub
cmp
shlb
adc
ficompl
lods
push
loop
cwtl
push
out
movsl
dec
ljmp
addr16
arpl
shll
mov
pop
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
pop
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
cmpsb
testb
jbe
add
jbe
add
data16
add
add
jbe
add
jbe
add
data16
data16
testb
testb
testb
sub
std
pop
testb
testb
testb
testb
add
add
cmc
add
div
add
out
add
out
add
enter
div
add
out
add
out
add
mov
add
mov
add
cmpsb
cmc
std
add
std
xchg
std
pop
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
or
jo
push
ljmp
push
jmp
dec
add
dec
push
add
dec
push
add
dec
bound
add
add
dec
bound
add
push
pushl
pusha
push
ljmp
cmp
mov
bound
add
add
dec
bound
add
add
dec
test
add
popa
add
out
add
bound
add
add
dec
bound
add
add
dec
iret
push
mov
stc
out
dec
stc
out
dec
jns
add
out
dec
stc
out
dec
stc
out
dec
stc
add
add
dec
stc
out
dec
stc
out
dec
stc
call
add
out
dec
stc
out
dec
stc
out
dec
stc
call
add
addr16
js
add
clc
repz
xor
jmp
xor
jecxz
or
add
call
in
push
jmp
cmc
ds
cmc
ds
cmc
ds
cmc
ds
cmc
pop
jns
add
call
sbb
add
add
jmp
adc
mov
jmp
subb
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
mov
add
mov
add
cmpsb
cli
add
cmpsb
cli
add
mov
add
mov
add
cmpsb
cli
add
cmpsb
cli
add
jbe
add
jbe
add
xor
inc
inc
cmp
inc
sbb
inc
inc
cmp
inc
inc
and
mov
mov
xor
jmp
incb
lods
lret
cli
add
lret
add
add
in
aas
xlat
xchg
loopne
sbb
inc
inc
fsubrl
data16
test
js
mov
movsl
out
dec
shl
loop
mov
sub
jns
outsb
pop
mov
push
inc
pusha
jp
lret
ljmp
xchg
mov
cltd
and
cmp
push
out
inc
mov
add
adc
ss
and
and
insb
and
aas
lahf
imul
pusha
arpl
pop
push
and
inc
pop
sbb
inc
aaa
std
mov
push
insb
push
stc
rcrb
sar
lods
mov
mov
out
ficoml
in
pop
ljmp
dec
cld
xchg
and
pushf
add
add
push
sti
call
lods
jnp
incl
xchg
push
test
out
or
gs
mov
add
add
int3
add
incb
dec
stc
std
and
dec
stc
xlat
add
stc
std
or
dec
stc
mov
imul
add
dec
stc
add
dec
stc
add
stc
add
stc
add
dec
stc
add
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
idivb
add
cmc
mov
add
dec
stc
add
dec
stc
add
adc
add
dec
stc
add
add
add
dec
stc
add
dec
stc
add
adc
stc
dec
stc
add
dec
stc
add
add
add
ds
testb
push
testl
add
testb
repnz
out
incl
mov
incl
mov
incl
cmpsl
idiv
add
idiv
add
clc
add
movsb
clc
add
je
add
je
add
clc
add
fs
add
jb
add
jb
add
fs
add
cli
add
xor
incl
aaa
idiv
add
add
xor
pop
and
stc
add
xor
sti
add
and
pop
pop
add
dec
popa
add
add
add
pop
add
add
inc
dec
xchg
add
inc
dec
xchg
inc
dec
pushf
add
inc
dec
or
dec
inc
dec
sbb
inc
dec
or
inc
add
add
add
dec
jb
inc
dec
adc
inc
dec
push
add
inc
dec
repz
dec
jno
inc
dec
out
add
dec
imul
stc
mov
dec
stc
mov
add
stc
mov
mov
popl
dec
stc
popl
mov
rolb
stc
mov
add
mov
add
rolb
xchg
add
add
dec
stc
and
push
stc
inc
add
popf
add
stc
xor
add
stc
add
stc
add
dec
stc
icebp
add
push
cli
dec
add
sti
dec
add
cli
inc
add
cli
dec
add
cli
push
add
cli
add
scas
incl
aad
xchg
dec
sar
mov
test
xchg
dec
idiv
jp
xor
jp
mov
add
add
dec
mov
pop
dec
cmp
pusha
dec
push
dec
mov
push
dec
incl
cmp
aaa
dec
iret
ljmp
dec
movsl
ljmp
dec
sti
ljmp
dec
adc
daa
dec
idiv
xor
xor
and
repz
dec
jmp
cmp
xor
ljmp
pop
add
outsb
add
cli
bound
add
add
cld
push
add
cld
cmp
or
add
add
pop
add
cld
sbb
mov
sti
lmsw
sti
dec
add
sti
dec
add
sti
push
add
sti
insl
add
sti
popa
add
sti
xlat
add
hlt
es
hlt
and
iret
hlt
xor
push
add
hlt
xor
out
and
add
repz
add
add
in
repz
xor
dec
push
add
dec
in
and
add
std
add
add
add
dec
add
dec
and
add
dec
xchg
pop
dec
addb
dec
ret
add
mov
sub
add
dec
mov
add
dec
mov
add
add
add
lcall
imul
dec
jl
addr16
jne
dec
dec
iret
add
and
add
add
dec
stc
xor
cmp
add
cmp
mov
cmp
mov
sbb
jns
and
popf
cli
adc
mov
or
add
movb
cli
ret
add
mov
add
cli
mov
add
add
popf
add
adc
sbbl
dec
incl
lcall
dec
decl
inc
call
or
ljmp
or
pushl
push
xor
xor
push
xor
aaa
xor
push
xor
lcall
sub
xor
mov
xor
dec
pushf
xor
mov
orl
orb
jne
test
insb
dec
xchg
xor
nop
xor
mov
test
dec
cmp
stos
dec
xor
xor
dec
aas
xor
dec
inc
xor
dec
cmp
xor
dec
cmp
add
int
sbb
stc
shll
cmp
fdivs
sbb
fnstenv
jns
fidivs
xchg
fnsave
ja
loopne
add
add
xor
loop
inc
stc
in
inc
stc
out
rorb
xor
dec
jmp
xor
dec
ljmp
dec
out
xor
dec
repz
dec
fwait
xor
dec
lcall
dec
sbb
or
push
testl
push
in
and
bound
push
xor
push
dec
sbb
and
dec
or
daa
add
add
ljmp
dec
push
ljmp
push
pop
ljmp
dec
add
sub
ljmp
adc
sub
dec
lock
das
push
icebp
xor
xor
xor
or
test
xor
push
orl
dec
cwtl
or
push
cltd
or
dec
data16
push
inc
or
orl
inc
dec
jg
inc
push
je
inc
dec
jge
inc
push
jb
inc
add
add
or
js
dec
dec
stc
push
or
repz
or
repz
add
push
or
repz
or
repz
or
repz
or
repnz
sahf
lcall
or
std
dec
or
inc
or
dec
or
std
mov
mov
std
orb
std
orl
test
mov
cmp
or
add
mov
std
push
or
std
push
or
pop
or
pop
or
or
xor
dec
std
add
incb
inc
incl
push
add
nop
inc
repnz
inc
repz
push
hlt
add
push
cmc
add
inc
imul
sub
add
inc
or
sub
add
push
or
add
inc
mov
add
mov
inc
add
lods
push
add
movsb
inc
add
add
mov
inc
mov
add
add
repnz
add
repnz
add
repnz
repz
repz
add
repz
add
repz
add
repz
add
repz
add
repz
add
add
xchg
repz
add
repz
repz
repz
push
repz
repz
dec
repz
repz
sbb
adc
icebp
and
icebp
sbb
icebp
pop
add
lock
icebp
sbb
icebp
sbb
nop
lock
lock
add
lock
das
dec
bound
and
pop
and
pop
and
pop
and
pop
push
push
cmpsl
pop
adc
add
dec
fadds
sub
test
pop
pop
push
mov
or
dec
push
or
push
pop
or
dec
mov
xchg
mov
mov
mov
stos
dec
mov
mov
mov
stos
dec
imul
dec
jle
test
adc
dec
ret
dec
ret
add
scas
dec
stc
pop
pop
xchg
stc
push
pop
add
add
stc
pop
pop
cmp
pop
lcall
pop
xor
cmp
sub
sub
fdivr
sub
and
ret
pop
mov
stc
pop
pop
mov
and
out
xor
in
xor
aam
and
sar
sbb
lret
pop
sar
pop
mov
clc
sbb
scas
clc
mov
push
mov
mov
stos
clc
mov
mov
sahf
push
test
lahf
push
cmpsl
clc
add
push
mov
mov
add
dec
lea
test
add
push
mov
orl
add
jg
push
push
addb
dec
test
cmp
xchg
push
dec
addl
push
test
cmp
add
push
cmp
sbb
add
push
aaa
add
add
add
add
dec
cmp
notb
add
dec
xor
lock
xor
mov
and
inc
stc
and
shl
pop
and
hlt
add
into
hlt
mov
and
cltd
and
fwait
and
hlt
sahf
and
cmc
mov
and
lods
and
hlt
pusha
and
hlt
arpl
fxtract
sub
add
add
cmc
xor
daa
cmc
sbb
and
push
and
add
and
inc
and
aam
dec
cmc
shlb
pop
cmc
pop
and
sbb
cmp
andb
cmc
andl
mov
mov
daa
sub
sub
add
xchg
nop
outsb
xchg
or
outsb
bound
xchg
outsb
mov
and
or
push
or
outsb
or
imul
xor
sub
or
mov
or
sub
or
mov
or
jmp
mov
insb
loope
add
or
dec
or
inc
or
dec
or
stc
fimuls
dec
sbb
push
dec
sbb
push
push
sbb
sbb
push
push
sbb
inc
sbb
inc
sbb
inc
sbb
cmp
push
push
insb
sbb
inc
push
xor
cmp
sbb
cltd
push
and
lcall
sbb
notl
jbe
notb
jg
movsl
sbb
dec
sbb
pop
sbb
sbb
push
jns
dec
push
jne
sub
je
and
jae
add
add
pop
sahf
pop
daa
push
lahf
pop
mov
sbb
mov
in
movsl
pop
cmp
push
mov
dec
xor
scas
inc
nop
and
pop
loope
cwtl
push
loop
mov
inc
fisubs
mov
push
or
sahf
dec
or
mov
pop
lea
dec
xchg
inc
xor
pop
and
push
push
and
dec
xchg
and
inc
mov
pop
mov
jle
or
mull
pop
inc
sbb
push
pop
xchg
and
push
mov
aas
out
mov
es
out
push
es
popa
es
data16
arpl
push
out
and
pop
out
and
xchg
out
pop
and
out
adc
es
imul
out
inc
es
out
push
es
out
adc
int
adc
and
out
sbb
add
add
out
push
and
in
cmp
fsubr
ds
in
sub
mov
out
lods
add
and
daa
and
or
push
sbb
insl
fmull
xchg
insb
push
or
insl
lret
xor
or
sub
or
sub
cmp
mov
sub
xor
rclb
push
rorl
push
rclb
push
roll
add
dec
je
aam
insl
push
aad
jbe
push
outsl
push
xlat
dec
push
push
push
ficoml
add
fcoml
add
ficoms
add
loopne
add
loope
add
loop
stc
sbb
sub
adc
xor
sbb
sub
adc
push
sub
incl
div
lock
div
icebp
push
in
mov
dec
out
mov
add
add
mov
dec
out
orl
out
mov
dec
out
test
push
out
mov
dec
out
jg
inc
out
push
or
push
or
inc
or
or
push
or
dec
or
inc
or
aaa
or
cwtl
or
cltd
or
out
xchg
or
jl
cmp
jne
popa
jmp
jle
in
jno
loope
pusha
inc
loop
arpl
push
push
add
add
push
dec
inc
fisttpll
inc
inc
fimuls
aas
push
fisttpl
ss
fmull
sub
push
inc
sbb
stos
push
pop
rsm
push
sbb
movsl
inc
adc
xcrypt-cbc
cmpsl
push
adc
scas
push
adc
mov
inc
adc
mov
cpuid
push
adc
popf
inc
or
imul
xsha256
cmpsb
push
or
cltd
inc
or
cmp
push
pop
or
xor
add
xor
pusha
icebp
ss
popa
icebp
xor
push
icebp
aaa
push
mov
cmp
pop
icebp
ds
imul
inc
push
push
icebp
aas
push
push
icebp
inc
push
inc
icebp
inc
push
add
inc
push
adc
inc
push
adc
inc
push
adc
inc
push
repz
push
lahf
repz
push
mov
dec
push
repz
push
dec
push
fcomi
dec
push
repz
push
mov
dec
push
add
add
push
push
add
hlt
push
push
add
push
push
adc
push
push
add
push
push
dec
stos
add
pop
inc
jno
xor
pop
xor
pop
xor
pop
xor
lods
push
xor
pop
stos
push
aaa
pop
mov
push
cmp
cmpsb
push
cmp
mov
cmp
cld
push
cmp
gs
push
push
ds
jae
aas
push
pusha
add
push
roll
add
add
add
mov
add
add
mov
add
test
dec
pop
mov
add
pop
add
ds
dec
ds
movsb
add
adc
xchg
add
incl
sub
popf
or
add
fwait
or
add
orb
add
cmpsb
or
add
or
add
xchg
or
add
or
add
or
add
xchg
add
out
add
out
add
out
add
out
add
out
add
out
xchg
dec
mov
lea
adc
adc
dec
xchg
ss
xchg
dec
dec
test
dec
dec
outsb
adc
outsl
adc
add
dec
jo
inc
dec
jno
or
jb
pop
dec
jae
push
dec
je
add
adc
dec
jbe
adc
adc
dec
js
std
dec
cmp
aam
cmp
iret
dec
cmp
dec
cmpsb
das
das
mov
dec
mov
xor
dec
jg
xchg
dec
xchg
sahf
dec
xchg
xchg
dec
and
add
cli
lock
cli
notl
add
cmpsl
and
add
or
lods
and
rsqrtps
rorb
add
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
call
add
out
call
add
mov
sti
add
mov
add
xchg
sti
add
add
add
sti
add
dec
sub
add
add
dec
jg
add
add
dec
adc
add
add
dec
jno
add
add
dec
je
add
add
dec
xchg
xor
dec
incl
add
xor
dec
clc
add
dec
jne
add
add
dec
jbe
add
add
dec
xchg
xor
dec
inc
add
dec
xorb
dec
cmp
add
das
add
add
dec
add
add
das
add
add
dec
ret
das
add
add
dec
mov
add
dec
stc
adc
dec
stc
ljmp
stc
movl
dec
stc
lock
xor
faddl
dec
stc
js
dec
stc
xlat
add
jns
dec
stc
fadds
dec
stc
pop
xor
mov
xor
mov
xor
ret
add
add
dec
stc
jge
dec
stc
les
dec
stc
pop
xor
lds
dec
stc
dec
xor
movb
stc
subb
stc
dec
stc
jae
dec
stc
or
stc
popa
das
dec
stc
or
stc
add
stc
add
push
stc
add
stc
add
stc
add
stc
add
dec
stc
add
stc
add
push
stc
add
dec
stc
add
stc
add
jo
add
dec
stc
add
dec
stc
add
stc
add
pusha
stc
add
xor
add
and
add
xor
add
stc
add
push
stc
add
inc
jecxz
add
std
add
xor
add
adc
add
add
add
push
std
add
loop
add
add
dec
std
add
pavgw
add
add
cmp
add
data16
add
test
clc
add
es
add
add
ja
add
cmc
testl
add
testl
add
testl
add
testl
add
jecxz
add
add
mov
add
outsl
std
add
dec
pop
sub
dec
enter
add
dec
imul
dec
pop
sub
dec
out
add
sub
dec
adc
sub
dec
add
add
sub
dec
xor
add
sub
dec
mov
sub
dec
mov
sub
dec
sahf
add
dec
adc
dec
lahf
add
dec
push
sub
dec
pushf
add
dec
out
sub
dec
popf
add
dec
hlt
sub
dec
lcall
add
add
add
dec
add
dec
rolb
stc
leave
sub
stc
mov
dec
stc
lret
stc
mov
dec
stc
lret
sub
stc
mov
dec
stc
shrb
addl
stc
xchg
sub
stc
inc
add
subb
xor
stc
xchg
sub
stc
sbb
stc
push
sub
dec
stc
jmp
jmp
dec
stc
call
add
divl
xor
add
divl
dec
stc
out
dec
stc
jmp
add
call
add
add
dec
stc
add
dec
stc
add
mov
add
movsb
filds
sbb
push
jmp
mov
add
jg
push
mov
stc
add
mov
arpl
mov
lcall
add
add
fsubl
stos
mov
outsb
les
repnz
aaa
add
mov
movsb
imul
fisubs
xor
mov
lods
pop
nop
mov
jno
ret
test
lods
push
add
imul
testl
sub
inc
add
cmc
aas
add
add
add
bound
lea
adc
add
jae
cmp
inc
pop
imul
fildl
scas
fildl
push
stc
inc
add
inc
add
jb
sub
das
ja
imul
xchg
addr16
cld
add
push
pusha
jb
sbb
das
ja
push
rcll
push
arpl
jne
incl
cs
aas
dec
push
scas
aas
dec
xchg
add
ja
push
add
add
add
dec
add
dec
fiadds
dec
and
add
movb
ret
fnstcw
dec
push
push
sti
in
push
daa
jmp
mov
push
stc
divb
loope
stos
js
adc
xor
xor
push
and
add
fisubs
imul
mov
add
cltd
mov
lods
test
lret
fildll
cmpsl
ret
mov
mov
mov
xor
and
or
insb
aad
loopne
shlb
int
int3
sbb
movsl
sub
inc
mov
and
or
add
mov
add
clc
out
dec
stc
sbb
clc
sbb
clc
faddl
ret
add
add
mov
stc
mov
mov
stc
rolb
mov
xchg
add
dec
stc
add
xlat
sub
adc
decb
dec
stc
add
shrl
das
or
inc
pop
out
cwtl
je
dec
stc
add
mov
aas
dec
out
mov
dec
out
sub
inc
cmp
ljmp
das
add
add
jb
mov
out
mov
dec
stc
add
inc
call
or
dec
stc
add
aam
inc
and
stc
add
ss
add
es
add
es
add
idiv
jmp
stc
cmp
push
stc
add
jb
imul
clc
add
adc
jno
adc
xor
cs
js
pop
cmc
and
and
add
push
cmc
jno
inc
cmc
xor
dec
cmc
js
mov
add
dec
cmc
add
jb
inc
add
imul
xchg
push
and
jo
push
push
bound
je
push
imul
cmp
insl
dec
pop
sahf
push
scas
outsb
mov
pusha
lahf
pop
mov
jp
rorb
lds
push
sahf
push
pop
popf
jb
jnp
fs
jne
data16
add
dec
jae
mov
data16
xchg
bound
mov
lcall
shll
jae
std
mov
call
and
add
mov
jne
fcoms
iret
mov
cwtl
les
dec
stc
xchg
and
add
pop
inc
andb
xor
add
add
lret
cmpsl
lret
sahf
ret
lods
rcrl
lret
dec
stc
nop
xchg
jbe
mov
pop
stc
push
add
stc
adc
stc
dec
add
stc
cmp
stc
hlt
stc
pop
jmp
add
div
inc
cld
loope
dec
stc
int3
stos
mov
loop
subb
pusha
push
stc
add
clc
stc
add
clc
add
add
add
clc
add
dec
xchg
add
dec
popf
add
dec
stc
add
and
push
mov
fildll
decb
push
aam
mov
dec
stc
add
dec
aam
lcall
add
stc
add
jb
ret
test
xchg
pop
push
divb
aas
xchg
outsb
cmp
lock
sub
cmpsb
je
fdivl
jb
mov
mov
test
push
or
and
addr16
push
jbe
and
nop
and
or
push
push
call
add
out
arpl
sbb
enterw
aad
or
push
das
mov
push
or
add
add
xchg
cld
popa
add
and
dec
std
jno
inc
std
add
gs
insl
add
std
push
add
arpl
add
outsl
pop
dec
push
insb
push
xor
rep
fs
adc
add
mov
or
mov
repnz
add
mov
lahf
dec
scas
imul
pop
popf
xor
mov
andb
adc
add
add
dec
adc
add
add
dec
xor
sub
dec
cmp
add
xor
add
dec
inc
add
dec
adc
add
stos
insl
sub
xchg
pushl
adc
add
add
dec
adc
add
add
pop
add
clc
out
dec
stc
ja
jo
enter
mov
adc
stc
lahf
sbb
stc
sbb
stc
fiaddl
add
add
stc
fildl
cltd
stc
rolb
stc
mov
add
movsb
add
stc
xchg
add
test
imul
stos
add
mov
push
jns
push
stc
xchg
add
stc
dec
add
stc
pop
add
stc
inc
add
stc
out
dec
stc
sub
stc
dec
add
stc
add
xchg
add
add
dec
xchg
add
xchg
add
dec
mov
add
dec
stos
add
dec
stc
add
dec
ljmp
dec
loope
jmp
dec
mov
add
dec
cwtl
add
dec
xchg
add
adc
stc
add
mov
push
fwait
lahf
lcall
ret
and
fs
cmc
xchg
jb
frstor
add
add
add
mov
arpl
inc
push
jo
pop
push
ljmp
inc
jb
pop
jb
inc
mov
mov
inc
mov
dec
adcl
dec
pop
outsl
jb
pop
jb
dec
push
dec
jb
pop
gs
stc
add
hlt
mov
add
mov
adc
popa
aam
ljmp
inc
lret
ljmp
add
rorl
outsb
rclb
lds
add
std
dec
add
push
add
add
dec
loopne
inc
dec
fiadds
dec
loopne
outsl
dec
filds
dec
hlt
add
dec
out
push
dec
stc
add
dec
incb
dec
and
jae
xor
dec
dec
push
add
jne
inc
add
cmp
add
cmp
add
add
xor
outsb
dec
mov
push
dec
pusha
add
je
imul
add
jg
je
pop
add
dec
addb
dec
mov
push
add
stc
inc
add
stc
inc
add
stc
inc
add
stc
pop
add
stc
xor
stc
out
dec
stc
out
cmp
jmp
inc
lahf
mov
stc
loopne
push
adc
add
add
adc
push
and
xlat
dec
and
fadds
rcl
cmp
rcl
xor
rcl
and
stos
lcall
xchg
adc
rclb
and
add
ljmp
mul
or
icebp
or
icebp
or
add
test
jns
and
push
in
cmpsl
jo
dec
stc
add
in
cmpsl
addr16
stos
and
enter
clc
add
add
stc
rcrb
mov
sti
gs
adc
stc
and
and
movsb
js
cld
addr16
adc
and
mov
shll
adc
and
sbb
jl
addr16
adc
and
push
jle
in
pop
dec
adc
stc
rcrb
test
out
cmp
adc
add
sub
add
loope
dec
repz
std
cmp
dec
std
dec
add
cmp
dec
std
dec
add
dec
add
cmp
insl
cmc
cmp
and
push
add
std
arpl
xor
std
jae
inc
std
add
std
ja
idiv
jb
pop
std
jbe
paddw
std
add
std
add
mov
cmp
dec
cmc
dec
add
add
loop
cmp
movsl
cld
inc
add
dec
add
add
jg
dec
dec
pop
add
dec
imul
dec
jle
push
dec
or
inc
dec
cmc
add
dec
adc
add
stos
pop
sbb
stos
pop
ljmp
in
add
jno
in
add
dec
fidivl
add
mov
dec
and
pop
add
add
inc
xchg
fs
add
dec
pop
mov
js
lds
mov
jno
xor
lahf
imul
xchg
pop
xchg
cltd
ja
jge
jb
nop
cmpsl
imul
mov
rcrb
mov
inc
stos
sub
xchg
pop
lahf
sub
cmp
sub
dec
mov
rep
adc
in
sbb
dec
stc
pop
mov
shlb
cli
mov
and
pushf
mov
lret
mov
mov
shrl
fxch
test
stos
mov
jp
add
fisubrl
add
push
lds
movsl
adc
lods
push
popf
or
stc
add
in
and
cltd
jb
add
add
stos
arpl
xchg
outsb
or
xchg
jae
loop
jno
jmp
cltd
fs
loope
xor
les
and
mov
dec
xor
push
incb
cmc
mov
and
in
jb
repz
outsb
or
mov
sarb
je
push
outsb
adc
and
jg
fs
cmp
sahf
imul
das
push
inc
mov
xor
das
push
pop
ljmp
lcall
push
je
sbb
adc
pop
jb
push
adc
gs
adc
add
gs
pop
aas
aaa
push
inc
cmp
pop
cmp
xor
push
sbb
inc
dec
ss
add
push
push
arpl
jo
add
pop
jbe
dec
sub
add
push
inc
test
mov
inc
mov
movsb
jne
outsb
lods
arpl
insb
nop
pusha
jo
mov
add
mov
and
push
push
jle
inc
adc
mov
adc
mov
add
cmpsb
jne
stos
arpl
loope
fs
call
stos
insl
call
ljmp
push
dec
inc
add
add
add
push
fwait
add
dec
nop
adc
add
shlb
lods
movsb
pushf
xchg
out
dec
stc
scas
mov
mov
mov
les
nop
movsl
pop
lcall
pop
movsl
out
dec
stc
scas
mov
mov
fwait
int3
or
aaa
out
dec
stc
inc
cmpsb
and
dec
movsl
add
add
movsb
out
dec
stc
pop
mov
mov
xor
or
das
out
dec
stc
add
lods
fsts
xchg
stc
add
add
aas
mov
mov
mov
scas
add
repnz
pop
mov
mov
xchg
je
mov
add
adc
aas
lods
adc
dec
sahf
nop
sbb
nop
repnz
pop
lea
add
cmc
xchg
and
fbld
and
xchg
arpl
dec
stc
add
aas
sub
mov
sbb
adc
xchg
and
lahf
push
leave
ret
add
outsl
outsb
testb
outsb
gs
pop
outsl
xor
cs
pop
fcomps
push
out
xor
add
push
jb
push
xchg
or
add
add
push
popa
mov
and
push
insl
jo
jp
gs
outsl
push
push
arpl
outsl
outsb
mov
and
jnp
jae
dec
add
inc
pop
cmp
imul
inc
inc
aaa
dec
inc
xor
cmc
add
cmp
and
insb
jns
jge
popa
dec
in
cmpsl
jno
out
mov
adc
jb
std
mov
add
add
add
jae
inc
add
dec
pop
mov
test
leave
inc
mov
pop
mov
push
mov
push
dec
jae
jno
andl
jae
andl
jae
jle
jae
lods
cmpsl
jmp
fadd
push
push
idivb
inc
and
mov
add
pushf
add
add
stc
push
mov
fstpl
mov
stos
movsl
movsb
movsl
or
scas
mov
scas
mov
mov
les
mov
movsl
int3
xchg
imul
fwait
jae
xchg
mov
push
movsb
sub
mov
lahf
mov
mov
push
test
add
daa
stc
push
pushf
xor
inc
mov
in
popf
cmp
call
pushf
and
mov
imul
test
add
add
push
sti
insb
int3
mov
popf
and
out
mov
les
mov
loope
and
lods
mov
imul
add
add
mov
push
jnp
mov
fstps
and
mov
inc
in
lcall
scas
lcall
add
arpl
arpl
sub
add
dec
inc
pop
and
pop
bound
dec
imul
and
pop
data16
insl
adc
and
add
add
arpl
arpl
sbb
add
cmp
movsb
pop
insl
rcll
add
jno
and
push
pop
jne
jne
arpl
jne
pop
imul
pop
imul
inc
pop
cmp
dec
mov
decl
scas
sahf
pop
dec
cmpsl
jno
out
xchg
jae
mov
movsb
imul
movsb
in
movsb
pusha
add
add
lret
cwtl
ffreep
pop
mov
add
dec
cs
inc
xchg
addr16
aas
movsl
imul
bound
pusha
jbe
test
inc
js
rcrb
xchg
addr16
outsb
lcall
jge
jb
subl
xor
pop
mov
das
cwtl
inc
in
cltd
inc
mov
pushf
out
dec
stc
das
mov
mov
ret
inc
xchg
fstpl
add
out
out
dec
stc
sbb
mov
mov
mov
jl
scas
add
mov
jge
test
rorl
stos
mov
mov
add
popf
mov
fcoms
lods
loopne
mov
out
dec
stc
mov
add
add
mov
add
loope
push
jmp
mov
inc
xor
nop
ret
dec
sbb
mov
cmp
cmpsl
inc
and
add
std
ret
push
das
hlt
les
stc
add
lods
inc
jmp
xlat
mov
lods
dec
stc
add
dec
stc
add
add
add
popf
sahf
mov
add
xchg
cmpsl
add
cmpsb
add
dec
push
add
cmp
mov
add
ljmp
incl
pop
jb
inc
jae
pushl
outsl
js
xor
adc
arpl
outsb
outsl
outsb
data16
inc
je
je
jae
sub
cmp
cmp
outsb
add
add
pop
insb
arpl
pop
imul
data16
pop
add
pop
bound
or
push
push
mov
jno
jae
test
add
add
je
arpl
add
mov
imul
add
dec
mov
add
dec
adc
gs
mov
add
dec
jecxz
insb
add
add
add
dec
add
add
add
dec
add
pop
dec
and
add
aaa
int3
dec
mov
lods
repnz
out
addb
cltd
xor
data16
imul
xchg
sahf
push
xchg
sahf
nop
and
icebp
call
pop
mov
std
inc
stc
fucomip
dec
out
mov
gs
add
add
fsubs
sbb
stc
cmc
out
std
push
frstor
cld
or
and
sti
add
mov
xchg
sarl
ds
sub
mov
and
add
dec
popa
in
dec
inc
dec
xor
jge
fiaddl
dec
stc
fldl
push
cltd
fldl
dec
stc
hlt
movsb
pop
in
loopne
cld
aam
jno
add
cmpsl
rolb
lcall
nop
out
lock
or
and
roll
imul
ficoms
sarb
sub
int
inc
sbb
mov
and
lret
inc
ffreep
dec
xor
stos
and
stc
add
dec
sbb
mov
sub
and
add
movsl
lahf
xchg
add
jae
pop
push
test
addl
test
mov
add
push
add
dec
inc
cmp
int3
pop
jns
and
dec
inc
pop
xorl
dec
pop
outsb
inc
dec
inc
dec
inc
push
inc
inc
jbe
add
and
gs
push
jb
ja
gs
cli
add
add
add
xor
push
es
sbb
das
add
mov
mov
inc
adc
cmp
daa
sub
dec
in
cmp
and
xlat
and
jmp
mov
jne
stos
inc
mov
aas
sub
add
dec
bound
inc
dec
test
idivb
mov
shll
nop
in
pusha
lods
test
add
shll
mov
scas
jns
movl
add
dec
in
push
test
push
test
out
jnp
std
mov
insl
cmp
mov
cmp
out
out
push
repnz
fwait
stos
lods
cld
xchg
mov
cld
aas
add
sti
mov
fildl
xor
xchg
fcom
cmp
add
add
dec
stc
pop
imul
stc
push
inc
mov
sub
pop
fldl
outsb
adc
sbb
cmp
push
popa
xor
push
push
and
add
jle
into
insb
stc
gs
repnz
dec
push
xor
subl
add
inc
mov
js
clc
pushf
xchg
push
mov
xchg
pop
call
jle
add
out
loopne
or
xchg
das
add
fsubrl
shlb
rolb
shrb
xchg
xor
lea
push
pop
inc
mov
pop
adc
cltd
pop
or
rolb
push
movsl
mov
pop
mov
in
inc
stos
pop
add
mov
mov
jo
fiaddl
out
lret
add
add
mov
mov
testl
hlt
call
mov
mov
shr
add
int3
rol
nop
fcmovnu
shll
leave
int
ds
enter
lret
jo
movb
mov
ss
jg
clc
adcl
cmpsb
testb
shlb
orb
ja
xchg
fsubrl
add
add
push
add
push
sbb
dec
sbb
adc
in
mov
push
jge
rcll
lcall
push
push
test
mov
pop
add
dec
push
push
test
push
scas
dec
add
pop
mov
xchg
dec
mov
lret
push
test
mov
add
dec
inc
fdivl
add
add
shlb
cs
das
add
xchg
test
push
xchg
movsb
xchg
stc
ficoml
dec
stc
repnz
rolb
dec
stc
pushf
or
add
cmp
add
jae
loop
mov
stc
test
jl
pop
js
scas
push
jle
out
dec
stc
repz
add
pop
fcmovnu
cmp
flds
gs
gs
dec
stc
jg
or
jle
and
mov
dec
stc
jae
mov
dec
insl
mov
stc
insl
xor
out
sbb
pusha
cmp
ret
jmp
dec
stc
add
lcall
pop
test
push
outsb
lods
aas
out
mov
aad
decb
mov
add
mov
mov
add
lcall
mov
dec
xchg
cmp
stc
add
xor
gs
stc
add
jno
leave
sbb
ret
inc
mov
cmpl
add
out
push
popf
add
or
sub
pop
or
scas
ljmp
add
add
inc
add
mov
pop
pop
int
pop
inc
loope
adc
add
add
and
idiv
add
jae
xchg
cmpl
sbbb
pop
lods
mov
out
add
decl
add
out
push
inc
out
inc
push
lock
jae
mov
cltd
popa
insl
leave
pushf
push
mov
cmp
jns
cmpsl
pop
push
add
add
imul
push
dec
push
adc
add
adc
das
and
push
pop
or
add
push
push
pop
sbb
push
inc
push
and
outsb
dec
sbb
xor
sub
inc
xor
jle
cmp
ds
adc
dec
and
sbb
aas
sbb
sbb
or
dec
xchg
mov
out
mov
movsb
std
lar
add
add
shrb
cmpsl
mov
add
adc
push
stc
out
dec
stc
and
inc
call
or
stc
xchg
aam
addr16
add
stc
loop
xchg
icebp
sbb
stc
xor
stc
es
fucom
add
loope
xor
stc
cmp
dec
stc
sbb
cmp
sbb
in
or
add
inc
notb
sbb
stc
or
arpl
int
dec
stc
jo
fistl
dec
lods
out
pop
pop
add
stc
stc
in
inc
sti
std
xchg
add
hlt
jge
sti
add
mov
mov
add
pop
or
mov
mov
add
gs
sub
mov
das
test
dec
stc
add
dec
mov
icebp
dec
icebp
dec
add
add
pop
add
cmp
sub
cmp
add
shrb
stc
add
ja
pusha
leave
jnp
jmp
filds
cmc
inc
mov
add
and
in
mov
stc
add
lcall
cli
inc
and
shll
xchg
pop
pop
ret
rclb
lret
sub
addl
add
jle
sbb
dec
pop
js
aas
add
jb
xchg
jbe
testl
fbld
testl
push
sub
dec
inc
out
add
xchg
jmp
jecxz
or
add
and
fxch
and
leave
fildll
hlt
in
sub
outsb
adc
loopne
and
decb
fsubr
mov
clc
out
dec
and
add
add
add
or
cmp
cmp
adc
and
push
xor
add
sub
ja
add
dec
push
test
les
lret
xlat
push
adc
add
sub
add
dec
push
lcall
inc
mov
add
dec
in
ss
xor
daa
jle
cmp
add
add
dec
cmp
inc
stc
xchg
stc
test
imul
mov
mov
mov
sbb
hlt
jno
iret
xlat
xchg
mov
les
call
add
mov
rclb
xor
add
push
mov
push
call
daa
insb
and
dec
stc
sub
add
add
or
lock
ss
sbb
inc
and
cld
xor
stc
adc
pop
mov
test
int3
andb
test
imul
xchg
imul
mov
add
jp
jae
jle
jo
jb
add
mov
je
rcrl
aad
xchg
pop
iret
cmpb
lds
pop
in
push
mov
push
aam
xchg
aas
filds
cmp
inc
lods
jmp
fdivrl
push
jnp
jmp
cmp
pavgw
repnz
out
add
adc
cli
cli
mov
add
pop
xor
leave
or
flds
adc
test
push
mov
add
mov
iret
xchg
add
jge
addr16
test
inc
add
add
add
aad
out
mov
jmp
jmp
inc
push
popa
mov
add
lret
cwtl
stos
insb
fwait
lea
dec
xchg
sbb
cs
idiv
add
arpl
add
push
pop
dec
adc
add
jbe
dec
mov
nop
mov
and
jge
jnp
arpl
add
add
add
mov
mov
test
add
adc
popa
jmp
sbb
xor
sub
and
ficompl
or
aam
add
dec
sub
sti
insl
mov
rorl
lods
aam
lock
jmp
jp
std
loop
lahf
scas
pop
mov
hlt
adc
xor
jp
addr16
stc
out
int3
cmp
add
add
xor
cmpsb
push
jnp
enter
or
add
cld
xor
lods
out
dec
stc
mov
mov
add
popa
sahf
std
xor
cli
push
and
rcrb
stc
aad
sarb
mov
adc
in
or
push
mov
es
inc
mov
out
dec
stc
mov
add
add
pop
pop
jle
push
add
push
ficoms
movsl
dec
out
dec
popf
sbb
xchg
push
pop
lods
xchg
or
sbb
cld
mov
ja
jo
outsb
cwtl
sub
add
stc
push
jge
lock
jl
mov
jne
into
mov
int
pop
cmpsl
cld
std
fsubrs
lock
add
xor
stos
add
jmp
test
cld
std
hlt
jb
and
inc
mov
and
dec
stc
add
imul
pop
cmc
mov
cld
xchg
add
fwait
and
aad
cmp
xchg
js
int3
fsubl
fst
cmp
add
pop
mov
out
adc
scas
mov
add
pop
nop
cmpsb
testl
in
jbe
add
add
add
test
lret
aam
insb
lds
and
push
je
sbbl
jle
pop
xchg
pushf
outsb
fs
es
mov
inc
mov
add
dec
out
dec
jo
dec
pop
xchg
hlt
push
push
xchg
inc
data16
dec
pop
jg
inc
adc
push
pop
dec
js
cmpsl
stos
push
mov
bnd
mov
jp
mov
adc
add
dec
push
adc
dec
push
jae
pop
hlt
push
push
pop
dec
push
sub
cmp
pop
es
sub
sub
fldenv
cs
sub
dec
ja
in
orl
pop
mov
xchg
clc
insl
xchg
xbegin
pop
pop
xchg
jle
jo
cltd
push
jp
jle
push
xchg
or
add
cs
cld
arpl
bound
mov
dec
insb
jmp
cwtl
cmp
outsb
stc
scas
xor
stc
inc
dec
stc
lret
sbb
incl
push
movsl
iret
push
cmp
in
push
push
ljmp
sarl
sub
sbb
sbb
sbb
push
ljmp
jbe
cli
xor
sti
xor
pop
stc
add
add
test
test
mov
push
int
lcall
xchg
cltd
jmp
mov
loope
dec
stc
add
pushf
cwtl
lods
mov
movsl
sahf
add
and
leave
sbb
enter
clc
or
jb
sbb
mov
arpl
loope
add
inc
out
lea
add
and
cmp
add
add
and
sub
xor
add
and
dec
pop
imul
adc
dec
jnp
and
add
es
cli
aas
add
pop
dec
pop
xor
or
adc
sub
dec
inc
out
add
push
popa
bound
add
out
add
push
xchg
lahf
mov
popf
scas
movsb
and
movsb
scas
into
lahf
mov
sbbb
jge
add
add
xchg
cmpsl
mov
push
mov
sbbl
xchg
xchg
addl
nop
xchg
pushf
dec
aad
mov
dec
repz
pop
pop
fidivl
sbb
adc
push
loopne
add
jnp
test
jno
xchg
sbb
jnp
outsb
xchg
outsb
push
lea
push
jb
push
jbe
mov
pop
xchg
pop
dec
add
add
push
push
adc
or
or
jo
add
dec
call
push
pop
dec
fildl
or
jmp
sbb
sbb
adc
and
pop
adc
call
pop
sub
jno
sbb
je
or
addr16
push
scas
divb
dec
cmpsb
sbb
xorps
and
add
cwtl
push
pushl
dec
sub
push
jp
sub
push
sbb
push
addb
push
arpl
add
jns
fsubrs
sub
cmpsb
jo
loop
pop
cmpsl
xchg
popf
inc
mov
pushf
inc
mov
les
lds
mov
cltd
jnp
lahf
test
mov
mov
adcl
nop
mov
cmp
lock
loope
mov
call
stc
add
std
out
nop
mov
loop
loope
in
fisubrs
mull
div
push
sti
dec
mov
ret
xor
shlb
pushf
imul
mov
cmp
rcll
dec
mov
xchg
mov
add
add
pushf
fwait
movsb
xor
cli
mov
stos
mov
lods
cltd
lock
movsb
mov
lret
filds
rclb
pushf
scas
jae
ror
lea
test
xchg
push
pop
jae
add
insl
dec
imul
push
sub
popa
addr16
adc
sbb
pop
jns
stos
push
push
div
push
push
call
inc
push
add
add
shrb
pop
inc
mov
pop
push
ljmp
inc
rolb
dec
dec
mov
sbb
insl
and
insb
popa
pop
add
das
push
adc
push
adc
adc
mov
cld
push
dec
in
or
or
push
cmp
imul
in
out
mov
cli
add
add
jno
mov
push
jecxz
push
fninit
popf
inc
call
iret
mov
mov
fldl
dec
faddl
inc
leave
mov
adc
int
mov
js
test
call
stc
dec
mov
jns
push
bnd
in
popf
mov
stc
lahf
enter
ret
gs
mov
mov
clc
ret
push
stc
icebp
sub
xor
sub
and
mov
call
lods
out
dec
stc
push
cmc
ret
call
pop
int3
mov
ret
aad
lods
in
add
cmp
out
mov
xor
jns
in
jae
stc
cs
ja
std
js
je
test
push
push
inc
or
add
addb
add
faddp
or
cld
mov
inc
add
xchg
push
stc
add
inc
cmp
add
sub
daa
lret
mov
jmp
sub
cmp
xorb
jmp
int3
jne
jno
xchg
mov
sub
mov
sbb
mov
add
add
test
add
sub
xchg
adc
outsl
outsl
sub
sub
add
mov
add
pop
ss
adc
cmp
loope
or
lock
movsl
scas
movsb
loop
mov
xchg
movsb
mov
cmp
add
add
xor
pop
xor
dec
inc
das
cmc
add
sub
dec
ficompl
data16
and
add
mov
imul
sbb
add
dec
frndint
ljmp
out
add
dec
cmp
jecxz
adc
lock
add
dec
add
ret
xlat
mov
mov
lret
xor
add
mov
ss
fs
pop
xchg
and
push
andb
ds
aaa
pop
arpl
pop
jns
loopne
add
and
add
add
xor
push
push
in
adc
or
pop
fdivr
or
loop
or
cmpsl
push
adc
out
dec
stc
ja
lret
test
mov
jl
fstps
cmp
lahf
dec
in
insb
mov
jge
mov
test
sarl
and
pop
out
sub
jle
mov
adc
test
or
mov
pop
shll
lret
lds
xchg
aad
rol
add
pop
mov
cwtl
out
dec
stc
movl
sbb
cld
dec
jmp
add
add
in
inc
adc
push
imul
stc
add
sbb
cmp
lret
push
loopne
add
add
insl
jg
push
xchg
in
std
test
add
inc
cli
add
mov
popa
outsb
fsubr
sti
addr16
pop
push
and
dec
mov
and
sub
inc
jbe
inc
cmp
adc
lret
pusha
dec
pop
cmc
hlt
push
inc
sbb
sub
idiv
add
cwtl
and
cmp
aas
and
cmp
clc
add
inc
xchg
leave
in
scas
add
add
ffree
lods
arpl
test
or
ficoms
pop
andl
cmp
xchg
pushf
sub
call
aam
shr
ret
insb
out
mov
je
add
shl
add
fs
gs
add
std
cmc
push
add
and
add
nop
mov
add
push
push
xchg
sbb
add
add
lods
aaa
adc
test
daa
pop
loop
add
mov
xchg
mov
jmp
xchg
add
dec
cwtl
cmp
jge
add
into
popf
sub
xchg
and
leave
xchg
jne
sarl
jge
adc
lcall
lods
shl
mov
xchg
cmpsl
add
add
dec
je
stc
je
sbb
jne
xchg
js
xchg
aad
arpl
ret
test
mov
lods
pop
popf
sahf
mov
out
mov
in
xchg
stos
loopne
cltd
lock
pushf
mov
in
in
inc
add
stc
faddl
dec
stc
scas
sbb
call
xor
inc
enter
or
push
stc
inc
in
push
stc
pushf
js
add
fs
or
xor
push
inc
add
adc
dec
pop
ds
dec
push
sbb
sub
xor
mov
testl
jb
jg
in
stc
jg
dec
jns
ret
test
popa
dec
add
das
insl
jmp
sbb
mov
push
mov
mov
je
mov
not
cmpsl
rcr
orl
lahf
push
add
iret
push
mov
dec
rorl
dec
ret
in
dec
inc
mov
into
jmp
or
cld
mov
repnz
rorl
push
pop
loope
in
stc
addl
inc
int3
into
inc
inc
add
push
add
ja
or
adc
inc
loop
inc
in
divb
inc
add
leave
mov
aad
inc
into
js
mov
add
repz
cmp
xor
jno
sbb
in
sub
lds
hlt
adc
jbe
pushl
std
xor
in
data16
add
arpl
mov
les
loope
adc
add
jno
add
add
mov
mov
adc
add
add
xchg
pop
sbb
add
jno
and
inc
push
fwait
add
push
shrb
xchg
jnp
jmp
xor
rolb
test
inc
adc
mov
dec
and
je
push
test
adc
mov
test
das
mov
push
fdivr
xchg
dec
jg
ret
stc
dec
test
add
fstpt
arpl
mov
push
loope
sub
mov
sarb
lea
mov
or
pushf
xor
jno
mov
mov
imull
rcll
cmpsl
loopne
add
int3
mov
out
xor
insb
adc
test
loopne
out
jg
out
loope
add
aad
jmp
cmpsb
stc
out
cwtl
insb
cmpsb
cmp
add
push
stc
test
cwtl
or
adc
in
aaa
and
pop
jmp
dec
stc
mov
std
mov
dec
stc
test
shl
std
sahf
out
pop
shrb
divl
test
clc
sub
clc
mov
jb
dec
lds
mov
ss
arpl
add
scas
testb
je
adc
jl
pushf
sbbb
mov
or
xchg
push
jb
add
mov
cmc
mov
out
dec
cmovs
xor
adc
stc
add
das
push
or
imul
add
stc
pop
lea
in
testl
mov
sub
pop
sbbl
add
add
cmp
add
es
shr
jne
jo
lock
sti
mov
call
sbb
ret
outsb
outsl
push
push
sub
push
lcall
orl
add
popf
aad
int3
xchg
jmp
add
mov
inc
and
jae
or
and
mov
imul
dec
rorl
ret
inc
cmp
jmp
test
push
pop
push
sbb
int3
fstp
inc
sbb
enter
mov
ret
jmp
jb
addr16
add
xchg
xchg
sbb
aad
jne
push
popa
sti
dec
movsl
or
or
call
dec
jbe
iret
jo
cmp
dec
inc
scas
cmp
daa
lcall
add
add
inc
jge
cltd
dec
xchg
cmp
jo
xchg
scas
push
dec
daa
test
or
call
lock
or
aam
bound
jo
in
ss
lea
aaa
adc
dec
jno
repz
out
cmp
frstor
stc
inc
dec
jo
mov
add
stos
xor
xor
mov
add
add
add
jecxz
mov
stc
add
icebp
subl
or
sbb
adc
adc
test
nop
in
scas
mov
add
ret
test
testl
out
shlb
mov
dec
xor
test
into
arpl
jns
mov
pop
into
push
bswap
arpl
and
mov
pop
into
add
jl
test
add
dec
repnz
cwtl
outsb
push
stc
pop
inc
push
add
cmc
add
leave
std
lds
les
pusha
xor
add
lea
mov
mov
sbb
es
je
movsl
into
adc
mov
std
pushl
js
or
add
inc
repz
call
push
int
sti
add
add
les
in
add
cwtl
add
out
jl
or
add
sbb
add
cmc
add
or
push
or
xlat
add
xchg
int
dec
sub
jns
fidivrl
push
pop
bswap
pusha
push
pop
std
dec
test
mov
ljmp
push
cmpsl
and
dec
sti
xorb
add
jo
cmp
add
les
xor
and
shr
adc
pop
or
mov
and
adc
jecxz
add
or
mov
jp
inc
sbb
adcl
clc
dec
sbb
sbb
push
lock
test
lock
out
int3
iret
xor
je
mov
jne
add
add
dec
stc
sbb
jg
clc
out
aad
loope
stos
loope
fsts
jb
fcmovb
and
xor
fnstcw
sar
dec
jp
xor
insl
jnp
mov
jb
mov
fs
jg
gs
mov
insb
les
add
out
cmp
jle
add
jo
subl
push
mov
pushf
jae
pop
add
add
sahf
push
push
aad
testl
or
add
pusha
or
test
loope
jae
lret
rorl
cli
je
daa
xor
cmp
pop
jb
mov
mov
lret
dec
jb
loope
sahf
je
rcll
jmp
add
add
in
popa
loopne
add
dec
mov
jp
popa
add
add
add
cld
inc
push
mov
stc
add
mov
in
add
out
cmc
fdivs
sub
rorb
cs
andl
dec
mov
rcl
push
jbe
test
mov
inc
jmp
test
or
mov
lods
and
scas
ret
or
cmp
ja
pop
jb
push
push
jo
addl
add
jae
outsl
sbb
and
push
push
inc
rcrb
cmpsl
dec
or
push
pop
in
xlat
sbb
ljmp
push
les
adc
xor
adc
pop
and
aaa
pop
xchg
popa
lcall
mov
imul
mov
push
cli
lods
mov
out
repnz
dec
dec
shll
mov
push
add
add
jnp
jmp
push
aas
fs
pop
aaa
push
xor
mov
or
mov
or
mov
lahf
pop
xor
sub
sti
push
xchg
add
fs
clc
out
sbb
xchg
sbb
cmp
loope
repnz
adc
mov
xchg
add
mov
roll
add
xor
dec
in
push
add
sti
outsl
fiaddl
or
adc
dec
stc
push
dec
sub
in
pop
mov
add
mov
xor
adc
xor
add
add
cmp
rcl
int
mov
mov
cmp
mov
inc
dec
add
xlat
xor
xchg
pushw
sbb
add
lcall
scas
add
aaa
shlb
jmp
mov
fs
jmp
jb
je
dec
ds
into
dec
mov
xchg
xor
stc
push
xor
adc
sbb
add
fwait
aaa
push
jb
shrb
add
test
aas
cmp
mov
int
push
out
test
add
add
pop
mov
and
cmp
mov
sub
pushl
adc
lock
add
lret
out
mov
scas
ret
roll
or
or
js
js
push
inc
movsl
sbb
test
movl
test
out
adc
cld
xor
scas
inc
stc
cmp
add
test
ja
popf
inc
push
lea
xchg
mov
mov
or
arpl
adc
sub
pop
adc
mov
notl
popa
and
mov
pop
pop
sbb
dec
dec
inc
clc
les
add
mov
jl
ja
push
push
std
jp
jl
loop
pop
aam
fstpl
not
rcll
aam
add
movsb
rcrb
or
add
jle
int3
aad
push
jns
fsubl
outsl
call
push
jge
pop
dec
or
add
push
fadds
aam
in
mov
out
dec
xchg
call
xchg
xlat
cmp
jb
inc
loope
push
dec
stc
fs
and
xchg
clc
jo
add
add
rol
add
icebp
ds
pop
fdivrs
jo
ljmp
repnz
subb
int3
mov
add
dec
loope
rorb
mov
inc
loope
dec
frstor
xchg
push
jmp
cmp
add
pop
rdmsr
rol
push
sub
lret
push
add
xor
add
xchg
mov
std
jmp
or
mov
xlat
test
daa
sub
cmp
adcl
inc
cmp
cmpsb
jnp
call
push
je
lret
cmp
cwtl
add
mov
aaa
add
xor
cmp
jnp
orb
ljmp
inc
cmp
test
in
mov
decb
lahf
mov
ljmp
stos
mov
mov
sbb
push
dec
push
xchg
mov
dec
call
cli
mov
call
lea
std
fwait
add
cmpb
mov
mov
dec
outsb
std
add
add
loope
pop
jge
dec
das
push
mov
int3
gs
lcall
push
lds
aas
hlt
js
jns
inc
dec
xchg
adc
lret
push
int3
add
aad
adc
push
dec
cli
mov
ja
dec
inc
aad
mov
loop
lea
lcall
lret
aas
aam
pop
fildl
jmp
cli
aaa
add
repnz
cmc
loope
call
addr16
sti
fcoms
jo
push
aam
jp
std
std
jb
out
mov
adc
mov
popf
fstpt
jno
add
cmp
rcrl
jnp
imul
inc
and
insb
dec
jo
call
repnz
jae
push
loope
sub
arpl
cmp
lods
dec
mov
jle
add
add
sub
adcl
out
pop
xchg
adc
xor
and
xor
addr16
fs
add
int3
sar
jmp
dec
ja
pop
adc
mov
xor
adc
push
adc
fs
rorl
repz
xchg
call
sub
inc
and
add
xchg
stc
push
insb
cwtl
mov
add
add
into
call
jo
std
mov
dec
fisubs
adc
test
sbb
add
into
test
mul
jg
in
push
or
xchg
jg
add
push
cltd
add
je
sbb
fsts
cmpsb
testb
jg
add
add
cmpl
push
in
push
push
jo
incb
scas
cmp
incl
add
add
rorb
aam
repnz
add
dec
clc
jnp
insl
sub
lea
aad
call
xor
add
loopne
or
xor
push
scas
add
divl
std
mov
push
icebp
adc
addr16
or
xchg
sub
add
add
push
je
lcall
adc
aad
add
mov
dec
pop
inc
mov
add
dec
adc
loope
inc
pop
mov
add
mov
lret
or
idivb
dec
imul
dec
dec
ret
jp
xchg
dec
loop
mov
aam
std
mov
xchg
pop
add
clc
dec
add
add
cli
out
rolb
adc
call
dec
push
dec
out
loop
sub
inc
push
jle
daa
aaa
add
dec
shlb
xor
add
shrl
sbb
mov
scas
add
shl
lret
fdivp
and
daa
add
dec
iret
add
jae
push
loope
jo
stc
popa
inc
fsubrs
push
mov
dec
rclb
add
add
iret
out
arpl
stc
inc
dec
enter
lahf
stc
or
jbe
lea
push
add
jmp
dec
stc
add
lea
shll
jnp
adc
ret
mov
xchg
add
dec
sub
cld
sub
inc
jmp
or
and
jmp
add
ret
jae
lcall
add
add
int3
ret
lcall
or
ss
xchg
add
dec
mov
xchg
mov
xchg
and
std
add
dec
movsl
add
sub
lcall
jmp
push
jnp
adc
jne
or
stc
pop
ret
mov
ret
mov
mov
add
cmc
pop
push
push
incl
add
cmp
push
dec
push
and
testb
cmp
lea
rolb
out
push
dec
je
and
stc
add
out
add
in
shr
mov
mov
mov
fldenv
jno
add
ljmp
xchg
add
ja
pop
add
ds
pop
jle
stos
filds
add
add
fwait
sbb
sbb
pop
xchg
stos
filds
add
xchg
sbb
xor
int3
inc
add
sahf
sbb
aad
push
imulb
sub
xor
or
ja
sub
jl
xor
jl
sub
fucomp
xchg
add
mov
out
dec
loope
jl
stc
subb
dec
subb
add
add
xor
addr16
stc
bound
or
fcmovnu
lret
out
inc
sub
out
mov
mov
dec
subb
jl
insb
inc
jae
add
stc
out
call
loope
lds
int3
imul
mov
out
shlb
cld
xor
adc
cmp
sbb
xor
add
add
testl
loope
test
push
mov
cmp
and
imul
xchg
fidivrl
outsb
test
mov
stc
add
add
add
dec
addb
shll
mov
call
inc
scas
jae
add
pusha
std
mov
xor
mov
pusha
adc
or
jle
out
dec
stc
add
shlb
and
in
inc
or
add
inc
inc
and
add
xor
mov
dec
mov
jmp
int
xor
testb
repz
ret
test
testb
add
je
push
pop
jl
scas
ljmp
jmp
add
dec
mov
div
jmp
cmp
push
xchg
jbe
shll
andb
add
out
andb
add
ss
int3
call
call
inc
jbe
mov
add
jle
jbe
imul
add
push
js
je
dec
adc
cltd
js
mov
into
cwtl
addr16
loopne
fildl
add
dec
ret
jge
jns
lds
adc
dec
cmpps
ret
push
pop
std
pop
or
jae
aam
fidivs
clc
aam
inc
movsb
test
daa
aad
xor
je
sub
jbe
imul
outsl
aam
mov
lock
dec
and
call
fcmovb
push
mov
pusha
sub
add
shlb
xor
rorb
add
add
jmp
out
or
loopne
cwtl
scas
insb
mov
add
shr
enter
sub
push
sti
out
or
test
fs
mov
stc
aas
inc
dec
stc
out
adc
dec
clc
mov
xor
sbb
jb
stos
jle
add
dec
add
je
or
rorb
add
mov
lds
std
add
dec
push
add
mov
addr16
adc
dec
jl
icebp
lea
adc
sub
push
sub
mov
std
cld
inc
enter
jge
sub
inc
in
mov
call
inc
loopne
ljmp
dec
das
push
jb
fbld
jmp
dec
jb
lea
add
push
mov
mov
xchg
mov
sub
je
sub
xlat
jne
std
pop
sarb
mov
adc
jne
or
movsl
cs
mov
add
ds
orl
push
cmp
jmp
std
bound
add
lock
jbe
addb
aad
inc
push
add
inc
je,pn
cli
call
adc
imul
xor
jne
sub
adc
dec
lds
popf
or
dec
rolb
push
pop
dec
or
adc
add
inc
sub
inc
dec
mov
mov
lods
inc
add
add
out
roll
mov
rolb
jmp
add
inc
loopne
test
xchg
inc
or
add
js
xchg
adc
rolb
decb
add
adc
adc
enter
or
incb
mov
sub
push
adc
cmpsl
add
loopne,pt
fmuls
sub
or
imulb
dec
test
lahf
cld
adc
call
enter
cmp
add
dec
ret
leave
sub
add
ds
int3
mov
jg
mov
icebp
xchg
int
in
add
ljmp
dec
fisttpll
jo
push
dec
dec
sbb
jecxz
out
cmp
and
push
aad
sti
clc
jae
lock
sbb
in
push
jbe
std
xchg
inc
les
xchg
aaa
cmp
push
add
lret
clc
jae
sub
movsb
aas
jmp
mov
sarl
and
stos
cmp
push
bound
sub
mov
pop
dec
push
cmpsb
pop
cmc
add
sub
cmp
stc
sub
hlt
xor
inc
jmp
xadd
push
stos
roll
dec
jo
fs
test
stc
add
jmp
push
mov
adc
add
add
xchg
cmovo
cli
add
divl
mov
xor
push
aad
insl
or
add
divb
je
outsl
inc
cld
arpl
stc
mov
test
dec
cli
or
mov
enter
add
test
sti
add
sub
mov
jno
cld
cmc
mov
add
icebp
jmp
push
xchg
xchg
divb
call
dec
pop
mov
dec
cmp
out
lcall
xchg
sbb
or
mov
int3
repz
lahf
fcoms
push
add
push
jne
sub
dec
rolb
andb
cmp
dec
mov
call
iret
push
mov
sbb
mov
add
dec
pop
clc
or
ds
mov
in
pop
adc
add
in
lea
mov
adc
mov
fcmovne
push
xor
hlt
aas
cmp
call
mov
adc
inc
aaa
jnp
mov
cwtl
adc
push
adc
push
or
aas
adc
out
inc
incl
pop
pushf
rorb
js
cld
jae
cmp
rorl
iret
ja
stc
out
mov
stc
inc
cld
or
adc
mov
test
add
xchg
mov
or
add
jnp
rcrl
daa
push
pushw
in
mov
test
pop
rcll
test
pop
sub
sti
jmp
imulb
xchg
aam
cli
cmc
mov
or
add
add
std
pushf
lock
fists
aam
test
aas
out
lcall
lds
fmuls
test
xchg
inc
in
rcl
add
add
xor
jmp
adc
mov
pop
cmp
mov
xchg
adc
ss
xchg
js
jne
lods
ret
or
push
xor
adcl
add
push
cmp
mov
jns
je
adc
or
cli
std
adc
popf
addb
xchg
nop
orl
testb
jnp
shrl
je
pop
cld
cmp
stc
add
call
pusha
xorb
mov
adc
ret
pop
insb
jmp
cld
add
add
mov
pushf
inc
add
dec
ds
pop
cli
add
sub
jge
fiaddl
inc
cmp
inc
dec
push
mov
inc
cmp
cmp
test
fs
xchg
in
push
movsl
mov
je
not
addb
cs
mov
mov
xchg
lods
pop
cmpb
mov
push
lret
rorb
stos
loopne
fs
dec
mov
outsl
push
psubw
xchg
mov
adc
mov
mov
cmp
sub
push
mov
shl
sub
mov
mov
sub
dec
stc
jb
sarl
push
cmpb
add
add
icebp
sahf
stos
add
add
cmp
add
xchg
pop
push
mov
rcll
js
mov
rolb
mov
mov
inc
dec
mov
add
cmp
bound
mov
std
jmp
pop
mov
pop
jle
lea
sub
clc
repz
sub
out
sbb
dec
stos
dec
stc
xchg
add
ss
push
ss
push
cs
jae
xor
mov
roll
ja
call
pop
jbe
jne
jo
in
xrelease
into
or
pop
shr
or
add
lds
mov
in
xor
jo
pusha
mov
stc
pop
lea
orl
mov
add
out
and
inc
outsb
cmp
arpl
add
dec
jo
hlt
jecxz
jno
stos
xor
push
mov
ljmp
jp
sar
ret
out
xchg
adc
mov
and
aas
mov
jmp
or
testb
cmp
sar
andb
add
and
jg
adc
clc
pop
push
incl
add
decl
or
adcl
lods
pop
adc
cmp
adc
test
mov
cmpsb
add
dec
movsl
add
aad
aaa
add
push
ds
rdtsc
add
inc
inc
shr
jg
pop
rolb
xor
xchg
pop
leave
or
scas
das
add
add
add
jl
mov
ss
lea
fidivrs
stc
out
dec
inc
mov
cld
dec
stc
out
dec
or
mov
insb
mov
cltd
inc
in
xchg
testl
ss
sub
and
lret
mov
inc
dec
push
sub
movsl
cwtl
push
addb
add
add
daa
dec
push
out
jae
imulb
repz
test
or
jmp
inc
rorl
jmp
nop
or
cli
dec
add
dec
outsl
stc
inc
dec
push
cld
fs
je
dec
outsl
shrb
addl
clc
adc
loop
sub
jns
or
clc
jmp
dec
outsl
shl
add
in
jnp
add
mov
ret
fnstsw
add
adc
or
fisttpl
rorl
ja
add
std
push
xchg
or
add
sub
push
xchg
lock
fwait
out
adc
cmpsb
jb
sbb
jb
jmp
jnp
or
out
sub
loopne
incl
add
jno
mov
sbb
cmp
mulb
jno
cld
jbe
add
icebp
lock
push
jle
pushl
cwtl
shlb
dec
pop
leave
fs
push
mov
std
add
mov
sti
add
sub
mov
add
xchg
inc
mov
push
ja
in
cmp
mov
scas
incb
add
mov
jne
mov
fcomps
mov
popf
lods
loopne
add
mov
or
test
add
jmp
lea
out
out
mov
add
add
hlt
mov
mov
pusha
add
dec
mov
mov
and
out
mov
in
mov
cmp
add
add
mov
cmp
sbb
stos
add
jg
std
cmp
mov
stc
cli
inc
dec
adc
mov
dec
push
mov
mov
out
dec
sub
mov
psubw
ret
and
dec
xorb
dec
sub
dec
mov
jl
cwtl
mov
dec
test
push
add
lahf
add
add
enter
lahf
fisttps
and
mov
push
add
je
test
stc
add
dec
test
push
out
aad
sub
add
into
sub
add
xor
mov
jmp
dec
dec
mov
dec
pop
add
bound
stc
mov
add
add
and
jmp
cmp
jae
clc
or
decl
movb
pop
push
ss
pop
leave
je
add
pop
and
jle
sub
testl
mov
fdivr
jmp
push
mov
testl
push
xchg
cmp
test
or
adc
push
into
cld
add
add
add
adc
mov
bound
adc
cmpb
xchg
inc
mov
push
lea
mov
and
incb
add
nop
add
xchg
cld
sbb
shl
xor
pop
dec
insl
fmull
in
shrb
adc
pop
dec
mov
lock
stos
ss
add
aas
pop
mov
push
fildl
dec
jmp
out
dec
mov
call
jmp
sbb
cmp
daa
aam
dec
int
add
fldl
test
and
add
pushl
mov
stc
out
mov
negl
cwtl
clc
out
lahf
mov
cli
ret
adcl
cld
add
add
dec
jae
lahf
dec
insl
inc
add
add
movsb
or
cmp
sub
js
dec
add
adc
out
xchg
popf
out
push
mov
push
add
out
dec
xchg
lret
repz
stc
out
pop
sub
and
out
rcrb
jbe
mov
lods
jo
cmp
dec
test
sub
inc
imul
mov
add
lods
std
pop
shll
jmp
push
pop
mov
cwtl
fldl
dec
stc
push
xchg
mov
dec
and
mov
mov
lahf
cld
mov
mulb
nop
jne
stc
xor
mov
cld
fdivp
inc
mov
ds
hlt
cwtl
mov
dec
stc
mov
pop
jne
movsb
mov
push
xchg
add
add
imul
decb
pop
sub
clc
lea
and
or
call
mov
inc
or
jno
enter
ss
mov
mov
imul
pop
leave
and
add
xchg
push
push
arpl
std
push
mov
decb
push
inc
cld
fdivp
jae
add
add
xchg
test
sbb
cmp
xchg
bound
xchg
dec
loop
imul
sti
add
xor
dec
add
jp
cmp
je
push
call
sbb
outsb
jle
int3
xor
subb
add
dec
push
mov
dec
nop
and
jge
mov
rcrb
test
test
add
add
push
lea
lds
or
xchg
add
aaa
sar
rcrb
push
mov
or
push
test
push
cmovnp
les
sub
jmp
dec
dec
ss
sarb
out
icebp
jns
add
call
pmaddwd
mov
dec
jl
mov
scas
cld
mov
call
and
inc
test
adc
dec
clc
mov
fmull
out
mov
mov
pop
aas
mov
dec
jae
mov
fs
dec
stc
insb
jle
scas
test
jl
pop
movsl
lods
fwait
inc
lock
lds
fs
mov
std
push
dec
daa
inc
add
mov
jl
mov
add
mov
stc
insb
sbb
add
push
testl
lods
clc
out
fcom
dec
dec
jmp
insb
cltd
fs
ss
jmp
jae
lods
out
dec
stc
add
mov
std
in
test
rorb
stc
or
sub
call
jecxz
mov
std
add
add
ficoml
sub
lea
fdiv
mov
mov
fsts
ljmp
fnstenv
loop
add
cmp
adc
cltd
push
mov
mov
mov
xor
mov
add
cmp
xchg
out
inc
add
hlt
add
jbe
adc
add
pop
fimull
sbb
ficoml
mov
dec
aam
add
add
ret
lds
dec
stc
sbb
add
repnz
jo
jp
rolb
lcall
xchg
sub
mov
dec
push
cltd
adc
or
cmpsb
adc
mov
cltd
stc
mov
mov
mov
add
sti
xchg
push
push
cwtl
and
mov
insb
in
cmpsb
mov
sbb
inc
cld
mov
lcall
mov
movsl
cmp
cmp
add
mov
inc
xchg
ret
fmull
out
add
call
ss
in
pop
rorb
jl
mov
mov
xor
add
add
jle
push
daa
and
sub
nop
and
addr16
stc
iret
add
movsl
arpl
aas
lods
adc
dec
push
shl
pop
add
mov
insb
aas
xlat
dec
add
jno
jmp
jb
je
pop
stos
out
rol
std
jmp
psubw
cmp
popf
test
add
gs
stos
stos
call
pop
and
adc
mov
orl
je
repz
push
insb
mov
mov
mov
mov
jg
dec
mov
jmp
mov
in
lea
mov
test
mov
sub
add
iret
mov
in
mov
pop
jp
cld
rcrl
in
mov
ficoms
aaa
add
aad
popf
add
jmp
cld
call
in
call
jmp
lods
cmp
mov
hlt
std
jne
mov
loope
push
jle
lar
je
or
cmp
je
out
call
lea
cld
incl
add
dec
sysexit
call
lds
pop
cli
lods
push
xchg
aas
pop
xchg
add
sub
add
loope
adc
add
cmpsl
out
xor
xchg
nop
mov
test
jmp
dec
mov
push
xchg
mov
lahf
js
stc
inc
sbb
inc
repz
sub
jmp
add
add
dec
nop
add
nop
mov
add
fiaddl
aam
mov
ret
mov
fwait
int
mov
shlb
sbb
into
mov
push
pop
xor
jmp
divb
adc
inc
aam
inc
add
mov
out
mov
stc
push
dec
sub
mov
add
adc
jnp
dec
dec
arpl
aad
loopne
add
arpl
sub
aam
lret
jnp
lahf
adc
add
dec
nop
cmp
scas
cmpsb
mov
sub
mov
mov
adc
inc
mov
call
arpl
jecxz
loope
call
pop
loope
jmp
out
cmpsb
push
shrl
add
mov
ret
dec
mov
dec
stc
sbb
int
jmp
lret
out
jp
out
dec
stc
add
sti
outsb
out
pushf
or
xor
and
bound
xor
pushl
je
imul
push
push
stc
mov
push
js
adc
insl
pusha
neg
in
gs
ret
add
add
pushl
test
push
cmp
sti
mov
mov
cmc
mov
jle
xor
jbe
cli
add
rolb
pop
fucomp
xor
cmc
jg
pavgw
ret
push
pop
call
sub
nop
inc
cmp
subl
stc
push
dec
sbb
sahf
dec
into
mov
pop
fildl
add
add
popf
out
lods
add
les
mov
bound
sahf
jg
cmp
cmp
mov
mov
sbb
ret
push
add
sub
jecxz
add
xchg
ret
lds
je
out
push
push
ja
js
mov
jb
sahf
dec
ja
imul
pop
ret
pop
stc
out
rorl
out
lods
pop
dec
mov
add
or
rcll
cli
rcl
xorb
inc
dec
stc
out
stos
mov
fiaddl
dec
lahf
push
ror
call
fwait
cwtl
xchg
mov
loope
imul
jge
add
stc
jb
push
xchg
inc
sahf
shll
mov
popf
iret
mov
icebp
bound
cli
out
sarl
ja
js
cli
xchg
add
add
stc
fcmovb
mov
add
and
mov
test
xchg
mov
sub
jle
dec
sub
subl
aam
cmp
add
repz
sbb
aad
dec
clc
jne
mov
add
fucom
add
or
add
jmp
xchg
and
sub
inc
test
std
sti
je
shll
shlb
jmp
ret
mov
std
pop
or
add
pop
in
call
jge
mov
test
or
push
push
xchg
cmpsl
dec
adc
popa
pop
mov
pop
incb
add
inc
jge
lea
stc
incl
shll
cld
mov
js
call
daa
cmp
dec
cld
negl
sti
test
or
cmp
add
cmp
call
fcompl
or
push
dec
jp
xor
xchg
mov
mov
dec
xchg
cmpl
lcall
add
into
cld
add
es
lcall
xchg
or
xlat
add
lods
xlat
sub
jne
xchg
xchg
dec
sbb
xor
mov
mov
aam
xchg
mov
push
xchg
cwtl
mov
mov
rcrb
test
pop
lcall
dec
xor
cmp
push
add
pusha
cltd
pop
lahf
sbb
add
addr16
adc
dec
and
out
lret
stos
cmpsb
movsl
outsb
lcall
sub
sbb
cmpsl
iret
lea
xor
sahf
cli
mov
mov
pushf
das
iret
fcoml
adc
xor
ret
sahf
stos
mov
xor
xor
dec
rcrb
sahf
xchg
pop
aaa
sub
add
dec
pop
sub
mul
add
sahf
add
or
inc
jmp
shlb
sub
mov
ret
insb
inc
mov
pop
mov
mov
rcl
insb
jae
jecxz
icebp
dec
out
rclb
inc
inc
inc
sahf
jae
mov
jb
jb
xchg
push
jb
jbe
add
xor
pusha
pop
test
add
xchg
lods
in
stc
test
inc
or
sbb
add
jp
mov
fidivl
and
add
scas
rcll
cmc
mov
adc
or
jmp
jb
add
mov
pushl
ljmp
push
xorb
in
ret
clc
add
add
call
jb
jno
add
add
xor
in
repnz
add
rolb
pop
add
dec
inc
add
dec
xchg
add
cmp
dec
mov
mov
xchg
je
daa
mov
push
mov
push
lret
dec
out
push
inc
dec
cli
add
dec
adc
add
add
les
xchg
ret
mov
adc
xchg
out
mov
xchg
mov
mov
cli
dec
ljmp
jo
adc
dec
or
cmp
cs
daa
xchg
push
inc
dec
cli
or
fists
repz
add
jne
cwtl
jns
pop
lods
cmp
add
add
iret
sbb
xchg
pop
fwait
sahf
adc
rorb
xorb
ja
incl
test
dec
cmp
mov
adc
xor
add
pop
fsubs
call
or
lcall
fbstp
push
aam
push
stos
test
out
aam
insb
lea
jne
mov
add
sti
out
add
add
lcall
rcrl
outsb
loop
std
xor
xchg
pop
mov
fwait
push
bound
inc
mov
nop
or
xlat
rcll
and
xchg
std
xchg
mov
xchg
inc
pop
mov
dec
mov
lcall
inc
or
mov
lods
mov
mov
add
stos
pop
add
dec
jne
popf
mov
push
mov
flds
mov
jge
mov
test
sti
cwtl
mov
dec
and
jbe
mov
jmp
je
dec
jne
test
xchg
das
add
mov
ret
cmpb
jae
roll
cmc
call
jbe
jmp
push
inc
lret
mov
add
and
mov
xchg
insl
mov
sub
std
add
jno
insl
aas
stc
push
test
cmc
imull
je
dec
sbb
fptan
cmp
daa
adc
or
xor
cmp
leave
or
bound
or
addr16
cmp
inc
decl
pushf
mov
mov
xor
dec
movb
int
jmp
add
into
jge
add
xchg
ss
inc
push
cmc
add
mov
push
push
std
add
cmp
lcall
mov
sbb
shr
mov
adc
mov
sub
mov
sti
pushf
or
mov
xchg
insb
dec
jmp
subb
out
xchg
sub
rcrb
or
xchg
add
add
xchg
xchg
push
test
loope
xchg
push
add
add
add
sbb
pop
pop
insb
test
dec
aaa
arpl
cmpsb
stc
adc
sub
or
push
sahf
adc
test
cmp
xchg
clc
mov
fstpt
loope
test
mov
clc
xchg
std
push
in
cs
xor
or
sti
idivb
xchg
std
shlb
std
fimuls
mov
loope
cmp
pop
fimuls
mov
loopne
stc
mov
shl
adc
sbb
sti
xchg
inc
jmp
arpl
sub
jno
xchg
std
jae
add
cmpsb
int3
aam
xor
add
add
jg
sub
mov
xchg
decl
push
inc
mov
mov
mov
divb
lock
push
push
push
test
std
mov
mov
fs
movsl
jno
cmpsl
jbe
mov
cmp
mov
mov
cmp
push
dec
and
jmp
jno
lock
imul
lods
cmp
mov
xor
jno
rorb
cmp
dec
stc
mov
enter
cltd
in
sub
das
leave
lea
xor
xor
and
aam
xchg
and
jl
xchg
sub
xor
push
pop
push
ss
cmp
mov
add
call
sbb
cs
or
cli
jl
mov
add
std
mov
jae
pop
adc
dec
movsb
fmuls
enter
inc
loopne,pt
xor
repz
jnp
pushl
push
cli
mov
int
jmp
ja
ja
inc
mov
fcmovb
js
bound
cmpsl
ja
pushf
fwait
pop
jmp
cld
out
jle
cmp
dec
or
adc
cld
hlt
sbb
daa
sub
pop
push
cmp
aas
xor
xor
push
xchg
rorb
lahf
in
xor
bound
jecxz
les
mov
or
add
add
mov
ljmp
fsts
repnz
jmp
test
aaa
mov
fadds
add
aaa
mov
jo
add
ds
sarl
jmp
test
std
fcoml
stos
add
std
xor
bound
orb
or
je
notl
fsubp
add
aad
subl
fstl
cmp
in
adc
mov
andl
imul
call
test
add
ss
lock
in
add
xchg
icebp
and
movl
pop
mov
xchg
ret
add
cmc
std
inc
stos
adc
sbb
cmc
std
inc
stos
and
add
dec
adc
andb
add
mov
je
fstl
mov
push
jne
jmp
je
and
ljmp
std
adc
dec
sbb
lea
fadd
lret
add
xor
orb
add
inc
add
ret
pop
pop
cmp
inc
cld
and
popf
sub
mov
cmp
mov
cltd
pop
push
add
push
mov
sahf
aaa
push
mov
add
iret
stc
adcl
add
xchg
cs
jo
std
mov
push
xor
cmp
rorl
popf
adc
mov
out
mov
xchg
out
dec
jle
test
nop
xchg
xor
arpl
cwtl
mov
insb
andl
mov
and
add
stos
fs
mov
fcmovb
ss
cmpsl
fwait
pushf
out
out
add
add
dec
je
cmp
xchg
xor
adc
lea
rorl
dec
mov
jb
roll
orl
loopne
jmp
lds
pop
icebp
aad
or
push
push
pop
and
sub
dec
sti
add
jge
pop
add
add
mov
jmp
sbb
into
cmp
es
mov
std
add
pop
add
daa
xor
mov
pop
mov
mov
cmp
push
dec
stc
add
in
cli
or
mov
scas
push
ret
pusha
cld
stc
call
mov
fistps
out
mov
add
ljmp
add
es
or
lds
insl
jge
test
add
jae
push
test
add
decb
call
outsl
into
clc
test
add
add
pop
inc
add
jb
add
jbe
decl
lahf
add
inc
mov
dec
mov
pushf
das
jae
mov
push
inc
add
imul
pop
loop
mov
lods
mov
cltd
lods
dec
sbb
adc
ret
add
sbb
xor
call
mov
mov
fdivrl
sub
dec
mov
add
inc
xchg
sbb
adc
xor
xchg
pop
mov
push
sub
jl
add
add
pop
out
cmp
dec
test
push
inc
dec
js
add
push
sub
je
mov
mov
bound
inc
sub
xor
dec
subb
lret
xchg
test
out
clc
out
aas
mov
aad
pusha
jge
add
inc
jle
inc
jge
mov
add
jecxz
dec
subl
sub
pop
fs
out
lret
xchg
adc
test
clc
out
sti
adc
mov
add
cmp
ss
jns
aam
rorl
std
mov
mov
jne
and
scas
jl
sbb
xchg
cmp
mov
add
push
stc
add
in
fimull
add
scas
mov
out
push
pop
or
stc
mov
sub
pop
xor
testl
inc
movsb
testl
jmp
sti
test
push
stc
add
test
fcomi
add
mov
notb
sti
in
pop
cmc
add
or
jmp
cmp
mov
mov
fisttpl
jae
incl
add
add
call
or
push
ds
jmp
adc
push
into
or
pushl
pushl
add
mov
add
cmc
cmp
rcll
out
negl
les
pop
pop
lock
add
mov
cmp
outsl
jbe
jae
test
ja
fdivr
adcb
clc
les
repnz
add
fdivr
push
lahf
add
add
loop
enter
push
ficoml
add
ret
mov
add
push
mov
xchg
push
xor
aad
dec
rcrb
jnp
adc
test
aam
mov
fistps
mov
sbb
jg
ret
dec
cmpsl
stc
adc
mov
rolb
add
test
andl
ret
ds
and
addb
cmp
fwait
sar
jmp
or
mov
insb
xchg
movsb
inc
mov
inc
mov
sub
add
and
arpl
mov
sbb
testb
dec
mov
out
mov
jmp
clc
out
add
add
mov
inc
add
jl
xor
add
xchg
dec
stc
andb
xor
fcomps
add
repz
aaa
ljmp
and
mov
xchg
outsb
and
sub
push
jb
js
adc
add
icebp
add
jne
mov
cmp
stc
xorl
stc
imul
dec
stc
xchg
add
fwait
jge
cld
inc
lret
rclb
lds
adc
fsts
xchg
jmp
int
call
cmp
std
jmp
sbb
decl
jne
imul
cli
push
jmp
ja
testl
cmp
add
mov
add
add
mov
data16
fsubr
ja
call
popf
cmpsb
cmc
mov
jae
call
cmpsl
js
idiv
jbe
dec
cld
pop
jmp
int3
movl
dec
sbb
sti
inc
out
cltd
add
pop
push
mov
cmp
cmpl
or
sbb
sti
mov
repz
les
add
add
fisubrs
nop
add
pop
or
orb
lahf
lcall
xor
push
mov
incl
inc
or
xchg
push
aad
lahf
ljmp
dec
nop
add
pop
xchg
push
imull
xchg
cli
adc
mov
push
test
jnp
xchg
add
nop
mov
mov
adc
add
add
stc
out
pushf
subl
ret
dec
or
test
push
adc
jmp
stc
out
aam
xchg
imul
sub
call
sbb
add
sbb
call
mov
pop
nop
subl
lds
test
jo
pushf
popl
dec
js
or
add
add
add
outsl
clc
fmulp
ss
dec
jle
out
enter
dec
adc
adc
xorb
cwtl
and
or
dec
mov
jmp
mov
fsts
push
cli
add
filds
and
jmp
das
sub
aam
push
rcll
std
into
movl
add
andl
add
dec
stc
andb
outsb
fcomps
jne
incl
mov
sbb
out
add
div
push
lea
imul
out
std
add
pop
outsl
bnd
daa
add
mov
jbe
mov
mov
xchg
aaa
nop
lcall
ss
aas
lahf
testb
add
add
dec
lea
cmp
sub
sbb
jno
xor
testb
mov
testb
jmp
nop
add
pusha
or
insb
xchg
fimull
jl
aam
and
sbb
mov
and
addr16
add
pushl
sbb
and
frstor
add
add
insb
add
outsl
and
dec
and
imul
mov
sti
mov
add
je
test
inc
sar
mov
jl
mov
sub
add
sub
stc
adc
aad
aaa
insb
inc
xchg
xchg
jl
xor
call
add
addr16
sub
aas
je
jne
sbb
add
hlt
sub
call
jae
fsubl
and
sbb
cmp
dec
daa
mov
dec
adc
rol
orl
add
mov
cmp
out
cmp
insb
cmovg
or
in
bound
dec
cmp
lret
mov
add
xchg
sbb
push
stc
mov
popf
add
add
or
cmc
inc
xor
xor
sbb
mov
jmp
push
hlt
push
roll
out
inc
jae
fs
repz
inc
test
add
shll
mov
dec
xchg
mov
cmc
xchg
and
xlat
je
jecxz
jle
jb
repz
jb
roll
add
rolb
add
jo
mov
test
jb
jle
cs
mov
popf
mov
adc
icebp
adc
out
flds
add
stc
add
add
sbb
push
stos
adc
sub
notb
pushf
hlt
xchg
jno
add
insl
jb
orb
outsl
inc
cld
fldenv
std
jbe
add
jp
aam
data16
push
int3
cli
push
incl
jne
or
scas
mov
dec
adc
into
cmp
add
aam
lcall
mov
clc
mov
mov
roll
test
lock
sbbl
xor
and
cmp
adc
add
add
add
cmpsb
incb
dec
lahf
mov
psubsb
dec
nop
mov
jl
mov
orb
sbb
sti
sbb
jmp
jb
pop
dec
outsl
add
les
jge
dec
xor
add
cmpsl
out
mov
loope
lock
xor
adc
in
mov
xlat
jmp
stc
jle
add
add
add
cltd
test
faddp
add
add
mov
out
cmpsl
and
add
jo
js
jno
add
xor
add
int3
scas
xchg
out
lret
mov
je
inc
outsb
inc
or
jecxz
add
dec
outsb
je
addr16
sahf
insl
push
stc
push
sar
add
add
add
push
xor
clc
add
dec
cmp
cmc
mov
pop
daa
push
xchg
repz
xchg
lods
call
std
fsubl
pop
fiadds
and
dec
stc
std
mov
mov
cmc
mov
xchg
ljmp
jp
outsb
or
pop
add
aaa
push
add
outsb
jmp
push
add
add
pop
mov
xchg
std
mov
add
mov
test
jnp
or
testl
decl
pop
adc
repz
scas
jno
mov
mov
mov
jne
pop
mov
ljmp
ss
dec
jecxz
xchg
data16
inc
hlt
or
outsl
add
add
add
sbb
xor
imul
xor
lock
push
adc
enter
lret
shr
pop
cmpsb
jne
push
es
push
inc
test
push
nop
xor
int3
push
or
inc
or
push
push
andb
cli
dec
in
cmpb
je
sti
in
repz
je
add
xchg
jmp
sahf
cld
enter
sub
call
sbb
lock
xchg
cmp
cwtl
clc
mov
mov
add
and
lret
add
imul
je
add
imul
out
je
xor
aam
jecxz
adc
jle
out
push
rol
push
pop
or
add
xlat
stos
add
add
lock
ret
ret
push
xchg
or
inc
adc
cmp
lret
aad
lret
or
pandn
cli
jb
push
or
and
ret
mov
fldt
xchg
xor
daa
dec
mov
push
mov
js
stc
push
mov
ljmp
xlat
ret
into
mov
jle
or
shrb
into
je
add
add
shll
out
dec
stc
add
ljmp
jnp
mov
mov
xchg
and
mov
adc
or
not
call
jo
outsl
mov
mov
cmovno
xor
cmp
jne
jle
cld
jbe
sub
add
add
mov
sti
xor
cmp
sti
add
lcall
roll
ss
test
mov
clc
push
clc
mov
aad
xchg
sti
test
bound
dec
push
push
addr16
js
or
jo
add
hlt
aad
repz
adc
mov
pop
pop
scas
mov
push
mov
mov
test
add
mov
adc
pusha
jle
push
imul
sbb
inc
xor
clc
arpl
sbb
cmc
and
inc
jae
mov
push
pusha
push
pop
adc
pusha
xor
dec
pusha
add
adc
add
jmp
push
inc
dec
ljmp
xchg
add
push
adc
and
mov
clc
insb
dec
adc
add
hlt
xchg
outsl
xor
pusha
test
enter
cs
add
push
jb
aas
push
add
sbb
daa
aas
loope
add
stc
pusha
repnz
ret
out
sahf
jnp
xor
push
inc
push
add
cmp
xchg
out
xor
add
fidivrs
addl
inc
add
add
add
push
add
call
add
mov
jg
iret
stc
out
jg
jle
push
stos
add
sarb
ror
je
jmp
pop
adc
test
add
pushaw
scas
mov
mov
and
hlt
call
pusha
enter
inc
inc
jmp
dec
popa
xchg
cld
add
add
test
pop
sti
mov
stos
je
fidivs
stc
add
stc
out
mov
pusha
xorl
aam
inc
jmp
sbb
jae
sbb
std
add
jae
fldt
adc
lahf
dec
or
adc
daa
pop
pop
fs
add
fsts
outsb
dec
push
sbbl
or
add
popa
jb
decl
out
aad
data16
or
in
jne
out
ret
in
in
in
jmp
sbb
push
out
call
lods
out
negb
stc
mov
loope
add
ljmp
mov
pop
lea
or
fmuls
bound
je
repz
cmp
push
rorl
add
enter
dec
sar
pop
mov
pusha
cmpb
or
popf
adc
inc
xor
cmp
jp
sbb
dec
push
sbb
push
loop
outsb
je
jae
les
jbe
inc
insb
xor
inc
int
mov
nop
xor
not
cmp
and
in
aas
rcrb
str
jb
add
add
push
adc
xor
cld
insb
loope
jb
in
mov
iret
mov
call
shlb
lret
dec
jle
jns
jno
mov
mov
jmp
ret
add
mov
out
dec
stc
push
add
insl
out
scas
clc
jbe
les
call
and
jmp
add
add
pop
cld
ret
cmc
dec
rcrl
mov
add
in
mov
fidivl
add
dec
jl
xchg
iret
pop
mov
clc
add
cli
outsl
je
enter
pop
xor
clc
push
dec
jp
jmp
pop
jle
call
dec
jne
popf
sub
lds
int
add
pop
enter
add
fimull
mov
xchg
add
push
jl
add
ret
mov
mov
add
stos
iret
push
inc
and
nop
and
sbb
ja
pop
gs
push
mov
dec
or
and
sbb
sub
mov
mov
inc
ret
in
or
add
sbb
add
or
shlb
in
dec
cmc
add
aas
pop
mov
mov
add
fdivr
jne
loop
and
loop
les
dec
cmp
or
sti
movb
add
push
pusha
xchg
pop
add
jae
ljmp
push
sub
xlat
jb
lcall
push
pop
test
add
or
add
mov
in
and
pop
inc
pop
pusha
add
pop
add
stc
ljmp
arpl
incb
dec
push
sub
adc
jb
inc
adc
dec
aad
jae
or
mov
ret
xor
dec
aaa
stc
jmp
dec
stc
cmp
rcl
addr16
je
lock
add
fmull
or
cld
add
lret
adc
dec
jb
icebp
es
push
aad
pop
clc
and
popa
cltd
or
cmp
pop
add
in
adc
hlt
scas
shll
test
sub
repnz
add
stos
pop
dec
stc
mov
jge
in
jl
xor
add
add
out
add
add
add
lahf
jg
out
jle
aad
movsb
jge
decb
jge
dec
stc
test
add
aas
clc
lds
stos
loop
jmp
push
daa
sarl
rol
in
dec
ret
std
hlt
aam
inc
jmp
sbb
fwait
lahf
jne
out
push
cld
mov
popf
ja
or
orl
das
sarl
add
add
mov
pop
cld
mov
mov
std
leave
js
andb
aad
add
jbe
sahf
scas
js
loope
xlat
jbe
jmp
jle
icebp
or
ja
push
call
inc
cs
scas
ret
daa
fimull
mov
fisttps
ja
bound
push
xchg
dec
cmp
pop
push
add
int
mov
add
adc
cli
stos
pop
sbb
cmp
jno
scas
hlt
aas
xor
push
rolb
mov
add
into
mov
jmp
je
ljmp
jmp
push
inc
pop
hlt
push
rorb
int3
jge
lcall
in
add
outsl
pusha
into
mov
fbld
adc
inc
pop
fbld
adc
add
lock
les
jp
pop
pop
jp
adc
repnz
push
daa
push
arpl
test
sbb
psubsw
pop
mov
lret
mov
pop
jp
cmpsl
cltd
call
and
je
int
mov
out
dec
popa
leave
or
imul
inc
add
insb
data16
fwait
jp
popa
and
shlb
mov
add
add
jecxz
sarl
out
sar
out
and
mov
jle
jns
jge
jnp
xor
out
xchg
jle
int
add
pop
mov
inc
dec
add
jns
jo
inc
add
inc
jns
add
repz
pop
gs
je
pop
jl
roll
mov
jg
repz
jo
popf
je
out
add
add
jo
sahf
pusha
mov
nop
add
jg
je
jg
mov
sbb
dec
aas
add
dec
je
loope
mov
push
imul
std
xchg
mov
stos
pop
stc
mov
jae
xchg
lsl
jmp
xchg
mov
push
or
icebp
jo
sbb
stc
mov
mov
xchg
cmp
or
add
or
rorb
jl
jl
or
mov
lds
ret
popf
add
mov
fistl
orb
add
and
jl
sbb
sbb
or
pop
add
dec
outsl
ljmp
cmp
push
jo
leave
jnp
jmp
cmp
addb
add
cmpsl
jno
push
mov
cmp
fistpll
cli
ret
std
dec
sub
sub
mov
lret
lret
add
xchg
pop
dec
push
test
add
out
fdivrs
dec
xchg
outsb
add
test
mov
mov
or
dec
roll
aaa
in
mov
sti
aam
insb
sbb
bound
cmp
aam
pop
mov
into
sbb
xchg
lock
mov
or
std
pop
jge
mov
int3
add
adc
mov
and
jp
add
out
push
jp
and
repz
push
jmp
xchg
cmp
mov
gs
ficomps
push
jp
add
ficomps
add
add
pop
xlat
dec
jp
and
add
jecxz
imul
adc
pop
pop
fdivrs
jp
or
out
out
or
repnz
jle
bound
inc
xchg
xor
not
cmp
mov
or
jp
mov
or
je
lret
add
or
fisubs
add
add
test
add
adc
mov
insb
add
add
add
dec
stc
iret
xor
popf
adc
xchg
inc
jl
pushf
dec
sub
sbb
push
add
sbb
sub
outsl
push
jb
insb
xchg
popf
jge
pop
sbb
ret
xchg
cli
xchg
outsl
fs
scas
ret
mov
inc
mov
aam
std
push
arpl
jo
enter
jmp
shrb
cmc
and
pop
hlt
pop
mov
or
add
xor
mov
je
stos
fscale
mov
imul
sbb
enter
repnz
or
jns
test
inc
loop
sub
adc
orl
lea
testb
cmp
mov
add
mov
in
div
test
cmp
add
jb
pop
xor
pop
fiaddl
insb
pop
cmp
out
pop
xor
add
mov
adc
or
xor
push
clc
andb
jge
rcr
decb
or
cmp
mov
xor
repnz
not
xchg
pop
cmp
imul
movsbl
add
test
fdiv
daa
adc
call
add
cli
cmp
and
dec
clc
and
or
imul
repnz
lds
mov
pusha
rclb
ja
xchg
in
jmp
mov
bound
mov
mov
out
push
jo
dec
stc
lcall
ja
pop
jecxz
imul
add
push
bound
pop
repnz
xor
jl
jne
arpl
enter
repnz
xor
addr16
outsb
and
insl
sbb
aam
push
push
bound
mov
mov
pusha
adc
mov
push
repz
jl
sbb
les
shrl
out
fisubrl
push
aaa
mov
repnz
push
mov
jl
add
add
clc
sub
xor
jb
imul
or
mov
stos
ret
pop
sub
push
jb
lret
push
hlt
outsb
dec
loope
push
xorl
cmc
cmp
or
popf
jmp
stc
out
xor
dec
stc
xor
idiv
push
mov
in
inc
out
sti
jmp
push
cmpb
je
jmp
add
jno
sub
arpl
sub
push
js
je
jp
add
or
sub
dec
in
jmp
stos
shrl
jns
or
inc
or
sub
or
cmpsb
or
inc
inc
and
inc
dec
and
jbe
iret
jle
in
mov
sub
push
xorl
xor
cmp
jp
ljmp
add
push
aad
push
loopne
lds
lcall
call
mov
pop
dec
mov
cmp
pop
jge
cmp
push
lret
push
rorb
adc
adc
pavgb
test
int
cmp
inc
push
les
mov
cmp
incb
imul
add
add
mov
sti
pushf
jg
adc
inc
sar
stc
mov
lods
sbb
pop
xor
pop
pop
sbb
push
push
fsubs
nop
xor
or
pop
push
add
xor
insb
push
pop
call
pop
pop
lret
test
stc
sub
xchg
pop
hlt
aas
pop
mov
add
ret
or
fdivl
pop
in
pop
loopnew
add
mov
xor
popf
mov
jb
ret
in
pop
jae
sarl
mov
jbe
inc
aad
gs
push
add
cmp
je
xor
pop
shll
mov
ficompl
bound
bound
adc
push
jb
leave
addl
push
fs
icebp
mov
pop
mov
fs
daa
in
push
sahf
or
jmp
add
loope
clc
mov
xchg
xor
mov
push
dec
push
popa
add
cmc
mov
dec
cld
dec
mov
in
test
aas
pop
jnp
in
or
add
out
insl
inc
cld
jge
add
pop
add
add
or
sub
clc
add
stos
in
lret
clc
add
jns
cmc
adc
je
xor
or
dec
xchg
adc
mov
sub
jnp
icebp
sub
or
mov
add
lea
shrb
adc
fistpll
add
add
mov
sub
inc
filds
xor
or
push
fildl
sub
mov
inc
add
add
dec
add
iret
inc
add
add
xchg
iret
lret
jl
fimuls
jae
push
lds
or
pop
adc
cmp
push
shll
pop
inc
jae
mov
rorl
iret
clc
pop
jne
rcrb
or
dec
mov
add
add
stc
jo
hlt
out
aad
push
jl
mov
aas
lods
testl
sahf
mov
push
call
cmp
push
inc
mov
sub
rolb
hlt
xor
jno
fs
jne
rclb
rcl
dec
out
mov
add
sub
mov
add
or
cwtl
add
and
pusha
mov
aaa
mov
push
rcrl
dec
stc
xor
xchg
jno
sbb
adc
mov
push
pop
pop
xchg
cmp
je
jmp
and
rorl
mov
add
dec
push
jg
or
aaa
inc
outsl
adc
xlat
stos
sbb
mov
imulb
mov
je
add
add
scas
mov
ljmp
addb
cli
jmp
push
cwtl
ljmp
jo
add
jmp
add
inc
adc
insl
inc
in
cltd
in
mov
mov
inc
cmp
je
cmpsb
mov
jne
jge
or
push
repnz
adc
jns
ljmp
scas
mov
hlt
pop
cmp
add
idiv
subl
incb
cwtl
cmc
jmp
jge
or
xlat
pop
ljmp
std
adcl
decb
scas
std
addl
cmp
or
jmp
lods
inc
hlt
mov
inc
clc
dec
mov
mov
psrld
pusha
push
inc
cmc
adc
mov
stc
shlb
js
push
imul
push
mov
lret
stos
add
mov
ret
orb
pop
cmp
pop
cltd
int
iret
jle
popa
adc
add
add
xlat
pop
in
ljmp
jnp
fcmove
pcmpgtb
fbstp
fidivrl
jge
icebp
arpl
iret
push
jns
cmpsb
push
add
add
call
cmp
jae
push
cs
sar
dec
cmp
add
popf
mov
int
push
add
jle
add
push
addl
jle
jl
int3
cmp
out
sbb
pop
fcom
mov
or
stc
out
add
int3
jle
push
and
dec
add
add
dec
add
dec
stc
mov
stos
push
pop
push
test
fstl
sbb
xor
add
xchg
loope
addl
xor
es
add
pop
std
cld
lock
jmp
xchg
pop
test
stc
add
fcoml
xchg
add
add
dec
stc
xchg
sbbl
add
add
stc
add
push
dec
push
inc
subl
stc
push
add
gs
lcall
inc
cmpsb
aam
mov
cmp
jno
std
add
push
jnp
or
clc
dec
mov
add
mov
jge
mov
xor
std
jle
stc
push
cmp
inc
rolb
mov
add
test
std
test
mov
adc
jnp
jne
iret
pop
hlt
insl
jmp
adc
std
push
mov
mov
jb
aad
adc
and
pop
punpckldq
mov
push
loopne
mov
dec
cltd
fld
pop
testl
mov
add
add
gs
repnz
inc
insl
dec
bound
repnz
dec
fldl
cmp
dec
or
mov
incb
out
mov
sbb
sahf
inc
xlat
imul
xor
adc
rcl
or
out
clc
jne
dec
sbbb
mov
mov
mov
gs
mov
daa
add
int
dec
add
add
test
xchg
call
xor
dec
loope
and
fnstcw
fwait
ds
in
dec
mov
int
dec
pop
xchg
stc
ret
sub
mov
adc
xchg
pop
nop
stc
sub
jle
jp
cmp
push
imul
pusha
cld
testb
add
add
mov
sbb
shlb
inc
lea
stc
dec
stc
add
adc
push
sbb
rorl
inc
fdivs
loopne
lea
das
cmp
mov
jb
sub
push
stc
xor
fistps
add
jmp
lods
mov
rorl
jmp
add
add
dec
insl
jmp
stc
jnp
push
imul
loop
xor
cmc
mov
jne
inc
cmpsb
call
sarl
js
add
mov
jl
std
push
cltd
movsl
cmc
lahf
loopne
aaa
std
xor
sbb
xor
rol
sar
ja
add
mov
and
cld
pop
mov
mov
add
aad
inc
es
std
mov
mov
mov
push
jo
cmp
inc
fists
cmp
push
incb
filds
cmp
jl
inc
push
les
push
daa
ret
dec
jg
jecxz
and
cmp
out
aas
dec
aad
je
xlat
testb
fcmovnb
testl
dec
pusha
rolb
leave
mov
mov
adc
xor
decl
mov
out
fstpt
lret
push
fdivrs
or
mov
sbb
or
aaa
sub
icebp
pop
mov
cmp
cmc
adc
fwait
inc
stc
ret
addr16
movsl
add
cmpsl
sahf
aaa
repnz
lods
test
mov
add
add
cmpsb
jb
xchg
sub
sub
or
add
adc
sub
mov
lcall
cmpl
push
inc
subl
mov
out
jge
ror
insb
std
xchg
and
cmp
mov
cli
add
dec
popa
mov
xor
divb
mov
ret
add
dec
movsb
mov
leave
bound
adc
adc
aaa
dec
std
cmpsb
cmp
adc
push
xor
dec
stc
add
pushf
aaa
inc
lea
lock
jbe
inc
dec
enter
or
push
add
or
or
jmp
lods
incb
mov
jae
add
add
shrb
es
cmp
mov
add
cmp
test
xor
std
xorb
jae
int3
ret
roll
add
lcall
stc
add
scas
sti
enter
dec
or
sbb
out
clc
push
mov
stc
add
stos
push
sbb
inc
int3
fidivl
stos
inc
or
ret
dec
js
xor
mov
shl
int
jge
cli
push
mull
dec
incb
fdivs
gs
mov
stos
ljmp
jle
les
adc
into
pushf
cltd
jae
clc
xchg
int3
xor
push
pop
mov
dec
add
add
das
add
add
fadds
jne
lods
mov
test
filds
fistpl
inc
push
pop
int
aaa
bound
cmp
dec
add
stc
out
dec
hlt
into
and
push
clc
into
dec
cmc
inc
add
rclb
aad
inc
subb
mov
add
add
dec
mov
add
add
dec
or
out
xlat
cld
pop
sarb
push
or
inc
js
lret
push
mov
xor
cmp
cld
out
aad
decb
adc
push
clc
add
xor
lods
ret
movsb
mov
dec
stc
push
lahf
loope
clc
push
push
push
imul
jmp
add
add
outsb
dec
std
jmp
and
testl
aaa
js
clc
cmpsl
or
jmp
nop
cli
mov
jg
je
inc
jle
push
je
dec
stc
mov
lret
cmpb
cmpsb
xor
leave
fisttpl
testb
bound
ljmp
inc
in
push
cmc
add
add
add
add
ret
gs
mov
and
testb
cmp
outsw
xor
call
pop
mov
mov
das
add
notb
add
push
data16
sbb
jmp
xorb
add
mov
sbb
dec
add
lods
sbb
data16
push
incl
add
dec
or
fiaddl
inc
popa
bound
push
stc
mov
mov
lods
mov
call
pop
pop
inc
push
add
pop
xor
call
cwtl
icebp
les
icebp
xorb
xor
mov
fisttpl
pop
aad
inc
sbb
inc
aam
xchg
xlat
sub
leave
add
and
lds
or
add
and
xchg
jmp
mov
add
mull
dec
or
in
stc
jae
cmp
xor
ret
push
int3
in
lods
xor
add
sub
lods
sti
aad
mov
adc
call
cmp
pop
shr
mov
aas
mov
dec
je
jge
int3
imull
in
jmp
or
bound
add
shrl
xor
lret
or
push
mov
dec
stc
jb
xor
call
test
xor
mov
cmp
dec
add
push
or
orb
fldl
add
dec
roll
inc
mov
call
pop
scas
push
ret
dec
push
subl
insb
inc
push
rol
std
jmp
add
add
testb
push
je
push
notb
subb
xchg
add
pop
or
fcomp
mov
int3
fs
jmp
add
add
mov
cmp
and
mov
add
adc
out
pop
in
mov
jb
incl
add
xor
inc
ljmp
stc
push
decl
jge
inc
inc
sub
dec
gs
or
mov
std
jb
dec
cld
mov
xchg
xor
call
and
pop
scas
mov
jmp
push
dec
out
gs
jae
and
lds
pop
adc
dec
sub
call
imul
add
push
add
sbb
sbb
sub
or
add
es
adc
insl
sub
pop
and
adcl
mov
or
aam
mov
adc
idivl
mov
movsl
cmp
inc
push
add
add
push
inc
dec
iret
cmp
add
add
sub
inc
test
addr16
add
hlt
sbb
out
mov
xchg
add
fs
flds
lea
push
sub
jmp
jns
into
or
int3
inc
fdivl
popf
lock
movsl
imull
ret
xlat
notb
or
imul
add
mov
sub
and
pop
test
jecxz
in
rclb
inc
xor
cmp
inc
loope
push
dec
ret
sbb
bound
and
dec
les
dec
clc
add
dec
push
int3
mov
dec
hlt
xchg
test
or
ret
mov
fnsave
add
jae
int
or
jp
jae
mov
call
add
add
inc
or
push
cmc
jle
roll
jmp
roll
leave
dec
stc
jle
roll
or
jge
xchg
clc
add
dec
stc
jmp
add
or
and
incl
mov
add
dec
inc
mov
and
mov
sbbb
jne
nop
call
divl
shlb
pushl
mov
mov
in
add
add
adc
push
nop
sub
inc
ss
addr16
jmp
add
outsl
aad
pusha
aas
add
add
mov
sub
cmpsb
push
add
out
add
daa
nop
cld
add
pop
clc
push
push
stc
insb
or
mov
sti
push
test
adc
pop
aad
je
movsl
lcall
add
add
mov
les
pop
jg
gs
sbb
mov
int3
xchg
aam
lea
movsb
out
mov
dec
andb
xchg
add
dec
lret
dec
sar
sahf
pop
fcompl
adc
enter
jmp
out
in
jns
inc
inc
add
sub
clc
cmp
outsb
aad
jecxz
dec
push
sbb
stc
daa
add
icebp
aas
cmp
add
add
push
into
push
imul
add
mov
xchg
dec
outsb
sbb
jnp
adc
cmp
dec
sbb
xchg
push
cmp
or
jnp
aaa
imul
call
cmp
sbb
ret
dec
ror
inc
dec
lods
rorl
adc
mov
pop
cmp
add
mulb
stos
mov
add
add
cmc
push
hlt
clc
add
cmpsl
std
cltd
push
je
in
cmp
daa
test
mov
cli
add
les
call
into
sub
lods
or
add
jno
loope
cmp
jae
shr
jmp
xchg
cmp
sbb
jmp
in
repnz
fidivrs
add
enter
push
add
dec
jae
call
inc
mov
lods
inc
mov
jno
push
shll
add
cli
add
div
add
shrl
mov
xor
push
push
push
sub
out
push
mov
or
mov
mov
xor
cmp
fldenv
pop
pop
mov
add
adc
add
jmp
add
cli
push
lea
sub
inc
xchg
cli
mov
and
or
jecxz
incb
jb
jmp
push
aas
add
je
inc
outsl
dec
test
mov
dec
pop
int
int3
xor
mov
jge
or
adc
nop
push
cmpl
pi2fw
aas
subb
loope
xchg
sub
daa
inc
sar
push
jae
iret
dec
cmp
loope
or
mov
mov
mov
shl
mov
add
outsl
repnz
stc
pushf
cs
cmpl
shll
mov
test
mov
push
push
push
fmuls
outsl
mov
shlb
outsl
lret
dec
js
dec
mov
cmp
adc
add
jo
test
call
pop
mov
cld
sub
out
sbb
sbb
leave
push
xor
ret
add
push
stc
popa
or
imulb
dec
push
call
sbb
stos
jne
add
add
mov
test
xchg
js
xchg
push
jns
int
mov
and
xor
push
mov
repnz
fistps
je
cld
test
scas
insb
popa
enter
inc
mov
jb
mov
pop
add
aad
cli
popa
mov
mov
xchg
rorb
aaa
mov
insl
push
data16
add
movsb
xchg
xlat
pop
outsb
jae
lds
inc
hlt
sahf
cmp
insb
sub
push
imul
icebp
sub
mov
add
outsl
in
mov
outsb
add
pop
xor
inc
ljmp
push
xor
xchg
data16
hlt
dec
mov
push
push
stc
je
add
sahf
sub
popa
add
add
add
jno
dec
adc
inc
or
ds
ret
andl
data16
je
in
mov
es
adc
dec
iret
cmp
add
mov
jle
repnz
dec
adc
enter
mov
dec
push
add
dec
push
mov
adc
aaa
push
cltd
add
mov
dec
xchg
add
add
push
add
mov
add
or
add
flds
cmp
dec
scas
add
fldt
enter
mov
sub
fdivrl
lret
stc
push
dec
lods
ljmp
aas
aas
loope
cmp
dec
cmp
mov
test
aaa
or
adc
int3
cmp
int
add
lds
xchg
hlt
cmp
je
cmp
cs
cld
mov
and
pop
clc
pop
lods
add
mov
ret
lds
inc
aad
iret
pop
mov
mov
call
sub
xchg
xor
cmp
or
inc
xchg
jge
add
jl
in
pop
adc
mov
cmp
aaa
mov
add
add
test
xchg
adc
lods
adc
decl
cmpsl
dec
shl
sbb
mov
inc
jmp
das
out
sub
push
add
add
dec
xor
sub
jl
std
insb
adc
insb
pop
lods
add
test
xchg
mov
call
fimull
pop
stos
jae
mov
add
add
call
je
jle
add
xor
jne
mov
dec
mov
in
insl
or
mov
and
popa
ljmp
jge
in
pop
ljmp
imul
shlb
je
scas
outsb
and
adc
mov
je
je
ret
mov
adc
xchg
jmp
das
add
add
cld
jmp
mov
mov
call
mov
insl
or
aas
lcall
jle
ja
cs
pusha
mov
push
int3
pusha
add
out
fwait
xor
aam
inc
push
iret
jle
xchg
mov
jne
shll
xchg
sbb
dec
and
mov
popf
xor
stos
aad
push
stos
inc
out
push
xor
lret
or
lret
add
add
and
in
xchg
pop
add
jl
iret
pop
lea
add
popa
dec
ja
mov
cmp
mov
inc
add
stc
insb
inc
sti
or
cld
jns
push
dec
or
or
add
add
mov
xor
stc
ret
inc
jle
mov
out
inc
sti
xchg
add
ret
out
stc
mov
sbb
aas
mov
xor
adc
aad
push
mov
jnp
mov
aam
ds
addl
or
pop
sub
cmp
cmp
pop
sti
ja
std
add
lret
je
sbb
cld
std
fdiv
cmp
jns
mov
push
fadds
cltd
clc
xor
push
add
jg
mov
hlt
in
inc
jmp
clc
xlat
add
fmuls
mov
clc
push
pop
in
mov
cld
mov
clc
add
mov
push
dec
loope
call
xchg
std
fisubrs
sarl
enter
pop
mov
or
or
repz
pop
mov
add
jo
push
std
jo
or
add
sub
je
mov
ljmp
inc
sbb
call
mov
or
je
stc
std
je
stc
push
incl
pop
pop
inc
es
or
mov
mov
shrb
pop
loop
shlb
ss
push
call
or
adc
push
jbe
add
std
sbb
add
rorl
push
pop
jae
jnp
sbb
adc
jno
out
aad
add
inc
jecxz
cmp
cmp
jno
outsl
inc
pop
stc
pop
add
push
add
shll
jae
sub
or
sub
add
fdivrp
call
in
jl
ljmp
loope
push
add
add
xchg
in
call
and
jmp
outsb
inc
rcll
mov
js
add
out
add
add
add
push
movsl
push
sub
jbe
scas
sub
add
lahf
mov
test
xor
sub
push
jnp
pop
lods
mov
mov
fs
add
push
mov
lret
xor
or
test
das
jno
add
test
dec
test
cld
mov
leave
jo
lret
sarl
add
das
std
cmp
sbb
iret
pop
mov
add
cmp
and
mov
add
jb
outsb
imul
dec
stc
mov
inc
jmp
xchg
cmp
scas
jl
jae
add
add
lret
cmp
jle
mov
add
imul
popa
dec
stc
add
push
movsl
call
add
mov
inc
test
mov
push
xor
push
add
xchg
inc
xor
imul
add
decl
bnd
cmc
pop
pop
pushl
jmp
add
add
cmpsb
inc
push
push
daa
fdivrp
add
jb
and
decb
jge
jbe
cmc
popa
add
inc
into
push
mov
sahf
fs
xchg
popl
pop
mov
cmc
call
cmpsl
pusha
cmc
inc
out
inc
jne
in
or
mov
in
push
loop
dec
pop
sub
dec
and
call
add
add
loopne
push
adc
repz
cmc
mov
lea
mov
insb
xchg
dec
stos
rorb
stos
mov
aam
or
fwait
test
and
push
pop
out
mov
add
dec
movsl
shl
or
inc
adc
je
lahf
adc
add
push
cwtl
mov
jne
daa
outsl
push
adc
add
mov
adc
inc
stc
std
xchg
stc
xorl
mov
aaa
lods
sub
mov
es
xor
scas
push
je,pn
mov
stc
fisubrs
mov
inc
iret
jmp
clc
out
sub
clc
add
sbb
sbb
add
xor
mov
outsl
or
inc
lds
sub
add
add
ret
das
add
inc
mov
jbe
std
pusha
jg
sub
sub
jbe
sub
sub
add
ss
add
dec
xor
jmp
dec
stc
add
dec
das
std
push
add
mov
lret
lods
or
mov
jg
cmc
int
rcl
stc
jne
sbb
inc
aad
rcrb
add
call
sub
std
insl
or
inc
jb
xorb
sub
std
aas
sub
in
lret
aaa
mov
les
sub
cmpb
mov
xrelease
and
add
outsl
inc
or
out
adc
ss
pop
pop
insl
or
div
push
mov
jmp
jne
mov
add
or
out
roll
jne
shll
imul
push
test
or
out
rcrl
mov
enter
add
xor
inc
inc
dec
add
sysret
mov
mov
mov
dec
xchg
cmp
add
loope
cmp
jo
add
daa
das
pop
jns
repnz
push
inc
ljmp
stc
je
cmpsl
mov
add
in
dec
jae
lods
or
in
add
popf
inc
je
pop
cmc
sti
cmpsb
adc
push
sbb
inc
add
mov
cli
push
add
int
or
lea
sub
out
cmpsb
es
clc
pop
subb
and
add
add
lods
sti
sbb
or
lods
push
andb
xor
add
bound
dec
adc
shll
add
call
loope
mov
in
adc
jae
mov
jecxz
xchg
fisubs
xchg
jecxz
nop
loop
scas
push
and
and
inc
jle
sub
mov
jmp
fs
xor
sub
insb
or
adc
cs
data16
sbb
hlt
call
jb
jge
mov
jle
mov
jne
mov
adc
ret
into
mov
dec
stc
imulb
jae
loope
jl
jmp
daa
aaa
call
bound
push
add
add
arpl
jmp
dec
lods
bound
cld
cmpsl
jmp
sahf
sbb
xchg
dec
fadd
pusha
xchg
hlt
mov
clc
add
mov
adc
jne
mov
cmp
push
or
mulb
std
pushl
cld
jae
movsl
sbb
mov
push
incb
test
mov
inc
std
mov
sti
or
mov
add
add
add
lock
cmpsb
mov
and
lock
jne
or
or
xor
das
cmp
pop
bound
pminsw
decl
nop
outsl
cmp
xor
add
fdivr
mov
lret
sbb
push
push
ljmp
mov
stos
adc
inc
push
enter
mov
fbld
mov
xchg
popa
call
adc
mov
inc
mov
roll
pop
add
inc
push
stos
rorb
fcoms
mov
sbb
mov
inc
mov
popl
pop
inc
idivl
dec
stc
push
push
jb
and
rorb
cmpsb
sub
and
and
and
add
ret
mov
pop
in
add
fisubrs
lret
mov
pop
xlat
enter
add
arpl
int
add
fwait
sub
adc
and
mov
sti
xchg
sbb
fs
lret
pop
dec
stc
out
mov
jno
shrl
sbb
je
sbb
sub
cmp
jb
bound
adc
push
jo
bound
adc
cmp
clc
xchg
rcrb
rol
cmp
addr16
outsb
and
or
lock
push
call
shll
xchg
or
sbb
stos
dec
and
mov
inc
jle
popf
fsubrs
lds
fstpl
xchg
add
add
and
aaa
imul
das
adc
add
arpl
orl
popa
mov
repz
test
xor
cmp
cmp
add
clc
mov
jge
add
popa
push
call
lods
loopne
fldt
jl
add
testl
lea
sti
incl
add
sub
int
cmp
test
mov
mov
sub
add
xor
sti
mov
jp
je
outsb
mov
test
dec
dec
sbb
incb
pop
xchg
inc
int3
push
xor
fcmove
aam
rcr
adc
dec
adc
psrld
in
les
pop
inc
repz
dec
rclb
movsl
sbb
popa
sbb
sbb
subl
sub
cmp
xchg
hlt
inc
cmpb
add
rorb
sarb
lea
add
hlt
and
aam
or
int3
cmp
xor
add
or
xchg
mov
mov
cmp
sbb
pusha
mov
addr16
xchg
push
add
add
sub
pop
outsb
scas
nop
vpunpcklqdq
dec
jge
add
insb
or
in
mov
jno
cmp
mov
popa
ret
in
mov
enter
leave
xchg
push
cmp
inc
fsubrs
mov
or
mov
lahf
in
sub
mov
and
fcompl
or
out
andl
and
pop
shl
cmp
adc
push
and
call
mov
mov
sub
jle
xlat
les
xlat
mov
adc
adcl
jns
es
cmc
cld
call
mov
sbb
jb
push
inc
int3
call
cli
mov
pop
sub
push
bound
push
mov
add
sti
cwtl
sub
stos
cld
add
std
xor
js
std
xor
daa
jne
data16
mov
pop
or
test
rcll
es
push
push
inc
push
add
xchg
push
std
je
loope
test
and
add
cld
push
push
push
push
add
xchg
lcall
hlt
std
xlat
stos
mov
add
mov
mov
inc
add
add
cld
jae
jge
and
mov
xchg
std
pop
pop
mov
mov
in
cmc
mov
xchg
andl
divb
loope
push
cltd
mov
pop
imul
mov
inc
or
mov
inc
shlb
incb
test
adc
out
cmp
mov
add
xor
in
mov
es
inc
loopne
aas
dec
test
nop
add
adc
pop
dec
pop
or
pop
sub
adc
cli
test
sub
call
and
aad
add
jmp
pop
lock
ret
sub
aaa
sub
gs
sbb
cmp
leave
aaa
movsb
rcll
jb
hlt
popa
in
xchg
push
mov
dec
jb
addb
cmpl
hlt
or
lock
mov
cmp
mov
push
movsl
fiadds
movsb
add
imull
mov
sub
mov
sbb
std
fisttpl
pop
bound
ret
ljmp
add
add
cmp
sub
mov
adc
test
sbb
rcrl
add
dec
stc
add
popf
mov
mov
andl
inc
jb
lds
enter
adc
xchg
ss
fisttps
inc
add
data16
xor
sbb
and
aas
pop
and
repnz
add
out
add
or
add
mov
repnz
xor
add
or
je
adc
je
cmp
push
mov
xor
jbe
mov
dec
mov
sbb
in
decl
sti
pop
pushf
adc
ss
std
je
adc
add
mov
cmp
adcl
add
add
pusha
pop
and
negb
cmp
clc
adc
xchg
clc
add
int3
sar
imul
aaa
lahf
mov
sub
lahf
test
push
iret
push
lret
add
mov
dec
mov
mov
adc
nop
insb
ret
push
pushl
sub
aad
cmp
cmp
adc
jae
mov
mov
aas
dec
xchg
enter
shlb
stc
shrb
add
aas
cld
sbb
dec
xorb
fistl
cmp
bound
call
sbb
fisttps
sbb
add
fucomip
movsl
rcrb
fisttps
out
mov
sub
call
sub
jmp
sbb
mov
cld
pop
ja
pop
popa
sbb
sub
out
inc
sbb
loopne
adc
dec
inc
sbb
and
movsl
lret
divl
add
push
and
clc
int
add
std
data16
and
es
push
popa
cmpsb
and
and
repnz
inc
sbb
adc
cmp
pop
pop
ss
jb
mov
mov
adc
cli
in
mov
add
testb
mov
push
lds
bound
cli
in
lock
xor
sti
mov
or
jecxz
push
enter
mov
std
xchg
mov
mov
mov
or
call
cld
roll
sbb
and
loope
add
cld
push
xor
cmp
xchg
in
cmp
std
xchg
cmpsl
cld
add
scas
std
test
cld
add
in
adc
jne
std
subb
test
sti
add
mov
fldl
fisubs
cwtl
add
data16
mov
xchg
hlt
popa
dec
and
test
out
fwait
incb
add
mov
and
mov
dec
adc
mov
xlat
or
xchg
pop
fwait
call
adc
fcoms
mov
mov
mov
dec
cmpsl
pop
gs
mov
inc
jae
dec
fstpt
add
lahf
jno
pop
mov
adc
jg
inc
cmpsl
jo
aad
add
pop
lock
add
jg
outsl
cmp
and
stc
insb
mov
adc
push
or
in
pop
mulb
das
rorl
out
cwtl
lahf
movsl
leave
or
pop
mov
mov
int
jmp
adc
and
adc
or
jne
call
sub
push
push
mov
test
add
add
adc
add
mov
push
cli
sbb
jl
adc
pop
sbb
pop
out
sarb
add
xlat
mov
out
cmpsb
pop
mov
and
mov
mov
dec
stc
mov
mov
incl
pushf
stc
rcll
add
shrl
ret
dec
lret
flds
jne
test
add
add
in
stc
mov
adc
mov
push
mov
scas
push
out
inc
xor
gs
in
mov
call
js
adc
push
mov
add
xchg
ret
dec
push
push
jae
out
push
push
dec
push
push
ja
out
push
push
dec
mov
mov
loope
es
push
push
xor
jp
decb
sahf
andb
lds
ss
mov
inc
jle
data16
xchg
ret
push
push
pop
data16
clc
mov
imul
adc
movsb
cmp
or
add
xchg
inc
add
jge
add
adc
andl
push
dec
sub
into
fldl
fs
pop
dec
adc
lahf
cmp
pop
add
add
mov
xchg
dec
inc
push
les
jecxz
shll
and
test
dec
and
iret
arpl
add
mov
dec
and
jne
pop
idivl
fdivs
ret
es
mov
sub
mov
jl
int3
std
or
dec
mov
and
stc
out
rolb
fistpl
ja
and
test
stc
xor
dec
dec
call
sbb
jg
stos
lds
ret
imul
add
dec
call
add
dec
call
inc
stc
dec
hlt
pushf
cli
mov
or
and
sub
xchg
out
dec
lea
pushf
adc
mov
pop
daa
inc
or
stc
addr16
add
add
lahf
call
mov
in
outsl
hlt
pop
stc
mov
jge
mov
push
dec
in
mov
mov
pop
stos
cmpsl
jg
push
dec
cmpsb
mov
lods
push
fldl
imul
adc
sbb
sbb
push
dec
stc
test
dec
stc
mov
pop
mov
pop
mov
add
push
jae
test
jmp
push
push
push
cmc
std
mov
inc
adc
inc
stc
sbb
call
in
std
push
push
test
call
and
dec
add
cmpsb
js
mov
adc
std
imul
clc
dec
std
add
pop
in
pop
repnz
add
add
cmp
push
pop
add
add
xor
js
incl
add
stos
mov
sub
decb
sub
mov
mov
imull
idiv
std
mov
call
sub
push
rcrl
leave
add
push
cmp
jb
add
js
aas
xor
cli
xchg
js
fidivs
in
jle
fwait
rcrb
jo
or
add
add
and
mov
ljmp
adc
in
and
into
mov
add
dec
jns
add
jle
shl
sbb
les
out
mov
scas
or
in
and
add
inc
decl
cmpsb
out
popf
out
mov
test
cmp
bswap
sti
movhps
jbe
out
and
add
aam
insb
pushf
test
das
int
fistpl
add
mov
jns
add
out
rclb
mov
ret
adc
jne
add
stc
jb
cmp
call
incb
fs
je
add
stc
ljmp
shlb
jge
or
push
stc
fsub
jbe
pop
rcll
icebp
add
add
test
iret
dec
jae
xor
inc
loop
and
bound
inc
sbb
enter
cmp
dec
xchg
and
push
jno
call
mov
notl
out
mov
jns
fstp
in
rorb
or
mov
cmp
cltd
and
loope
pop
jb
int3
mov
jmp
mov
push
mov
mov
inc
pop
sbb
jae
cmp
jne
push
out
jns
add
imul
mov
cmp
repz
dec
call
cmp
test
adc
subb
roll
cli
jne
inc
fsubr
cmc
data16
add
or
mov
ss
mov
add
cmpsb
inc
gs
es
add
mov
decl
adc
mov
inc
add
ss
addr16
add
mov
mov
dec
stos
sub
hlt
mov
add
ficoml
mov
add
mov
test
jnp
cmpsl
xchg
das
out
stc
pop
dec
repz
dec
and
mov
or
add
jnp
test
add
inc
imul
fadd
aaa
je
incb
dec
mov
int
add
xchg
dec
lret
sti
adc
mov
test
out
sbb
lock
jb
roll
aam
shll
push
mov
rclb
ds
jg
sti
or
mov
add
add
imul
dec
jg
int3
sbb
jnp
and
adc
or
or
mov
push
and
xchg
push
or
mov
and
pop
xor
pop
and
push
jl
sbb
adc
adc
cmpsl
cmpsl
stos
scas
mov
dec
stc
add
push
jg
xchg
clc
add
popf
movsb
push
jb
add
cmp
std
mov
mov
call
inc
pusha
movb
lods
inc
iret
icebp
test
add
dec
jle
adc
fwait
sti
mov
int
or
ja
in
repz
inc
jg
adc
push
iret
test
je
xlat
mov
add
or
xchg
xor
xchg
ja
jmp
mov
add
jge
jmp
or
mov
out
dec
ljmp
test
or
jne
pop
call
insl
push
icebp
mov
std
mov
jns
je
mov
push
icebp
lea
jns
mov
mov
inc
dec
cmp
imul
jle
je
mov
cmc
add
data16
add
add
dec
cmc
lea
jmp
sub
cmp
push
xchg
incb
add
dec
stc
add
add
cmc
sbb
repz
pop
dec
xchg
pop
push
adc
push
cmp
aaa
push
sahf
addr16
fcoms
mov
cmp
jmp
lret
ret
fwait
add
ret
out
roll
aam
jg
cwtl
pop
jge
dec
adc
cmp
add
test
movsb
gs
push
aaa
repz
add
push
adc
les
add
and
dec
push
lea
nop
xchg
add
mov
clc
mov
push
push
popf
daa
add
cmp
xchg
icebp
cmpsb
mov
dec
jb
sub
fdiv
aad
pop
js
icebp
cs
dec
jb
js
add
inc
adc
mov
inc
add
sahf
push
mov
or
movsb
cld
push
mov
adc
lods
or
mov
jns
add
mov
out
or
jb
arpl
mov
push
pop
inc
mov
bound
lods
add
jns
mov
adc
push
aaa
je
add
mov
test
imul
lds
add
push
jp
cld
inc
mov
add
icebp
addl
enter
adc
push
dec
pop
mov
test
movl
popf
jo
adcl
sbb
adc
std
test
xor
jge
jmp
jp
std
leave
mov
cmc
dec
divl
fildl
add
sub
adc
call
add
adc
lret
mov
jae
je
lea
or
insl
xor
jne
sti
decb
shll
call
sub
dec
mov
add
gs
std
decl
push
add
push
call
mov
fnstsw
add
mov
add
es
inc
jbe
inc
and
jbe
and
rorb
inc
imul
inc
jae
mov
push
data16
imulb
and
out
sub
fildll
sub
adc
adc
sub
icebp
or
add
outsb
mov
dec
in
mov
xchg
decl
xor
mov
xlat
in
loopne
mov
xchg
notb
adc
addl
pop
ljmp
cs
std
ja
cld
std
cmp
and
ljmp
or
push
inc
push
stc
xor
arpl
xor
lock
xor
lds
in
pop
rorb
stc
and
insl
dec
jbe
aam
adc
std
outsl
sub
sarb
pop
xor
dec
stc
imul
add
dec
jge
add
fs
lahf
cmpsl
sbb
enter
or
xlat
add
bound
outsb
out
xchg
cmp
pop
push
mov
inc
jno
add
cmp
add
mov
orl
aas
aas
dec
mov
ficomps
inc
sbb
rcl
or
or
aad
std
testb
stos
ret
in
das
insl
adc
mov
arpl
rcrl
std
and
xchg
cmp
mov
popl
mov
loope
or
fs
xchg
cs
xchg
dec
jns
jmp
cmpsl
mov
movsb
cmc
ss
daa
jae
xchg
add
push
stc
jmp
inc
dec
xchg
add
cld
outsb
enter
jp
sub
rcrb
or
add
add
xchg
xchg
or
std
jno
jmp
std
out
jmp
std
add
repz
mov
aaa
push
pop
mov
outsb
in
adc
push
push
xorl
pushl
shlb
pop
mov
cmp
or
call
adc
cmc
call
or
decl
add
add
jl
add
lea
std
inc
lock
adc
loop
cld
adc
inc
add
movsl
mov
sub
decl
icebp
mov
in
pop
adc
std
xchg
data16
jnp
mov
mov
call
int3
jp
je
fimull
xchg
inc
clc
into
sbb
add
in
pop
add
add
leave
ret
addb
mov
cmp
std
stc
sub
push
stc
push
pop
pop
jmp
add
stc
jnp
jb
ret
pop
cmc
clc
divb
mov
stos
add
pop
adc
stc
stos
push
or
inc
push
jl
add
adc
push
mov
mov
or
xor
add
clc
out
unpcklps
mov
out
inc
add
add
dec
stc
mov
add
out
or
stc
and
dec
rcr
and
cmp
push
je
call
ds
sti
add
dec
test
dec
cli
add
sbb
jmp
imulb
ja
push
adc
adc
dec
cld
add
loopne
cmp
dec
stc
add
ret
mov
shrb
xchg
add
stc
add
pushf
xchg
add
cmpsl
std
xor
add
pop
cld
adc
mov
std
cmpsb
lahf
ljmp
add
lock
pop
jae
popf
cld
adc
adc
pop
pcmpeqd
or
cli
jmp
push
cld
out
mov
cld
add
sti
xchg
insl
inc
or
addl
push
fcoml
adc
jp
add
shrb
clc
repz
inc
incl
add
ja
imul
jge
push
loop
add
add
into
call
mov
jno
cmpsl
cmp
add
cli
xchg
stos
jg
fsts
xchg
leave
add
inc
pop
idivl
mov
add
push
dec
xchg
mov
mov
mov
std
int3
cli
call
add
add
dec
add
dec
mov
add
shll
inc
std
dec
mov
add
ret
push
mov
inc
or
cs
dec
adc
std
lahf
xchg
std
and
insl
or
cld
sti
or
movsl
fs
push
push
or
dec
ret
push
aam
mov
cld
std
arpl
jle
add
add
or
popa
out
add
mov
outsl
pop
cld
mov
mov
stc
les
divb
push
sahf
sub
sbb
sti
push
movb
xor
add
popa
mov
or
ljmp
inc
sub
sbb
out
movsl
stc
je
push
test
cmp
sbb
stc
inc
add
add
cmpsl
outsl
dec
jo
or
imull
repnz
push
js
ja
test
fiadds
hlt
xchg
out
jmp
stos
std
cld
lahf
mov
sti
cmpsl
mov
push
bound
aad
push
std
jae
add
je
lret
mov
stc
lret
adc
jge
mov
icebp
adc
sub
sbb
inc
rorb
sarb
add
aam
and
call
or
call
inc
or
enter
push
out
dec
loope
or
add
popa
movsl
xchg
push
sbb
xor
test
lcall
push
push
mov
testb
ss
popa
sub
push
std
adc
jle
add
add
add
add
push
fnsave
push
add
xchg
adc
mov
test
mov
stos
clc
call
cmpsb
call
test
mov
mov
push
mov
in
jg
jecxz
mov
lock
adc
pop
lret
cmc
add
sbb
sbb
xor
add
add
push
mov
add
ret
dec
ret
into
push
mov
in
int3
dec
cmc
std
and
divb
add
sti
insb
or
repz
push
xchg
stc
adcl
inc
cmp
push
push
mov
out
adc
mov
std
push
sub
lahf
clc
cmc
aas
pop
cmp
hlt
jl
pop
aas
add
add
clc
std
pop
jg
aad
cmp
mov
dec
sbb
stc
sub
aam
push
jns
add
jno
shlb
jmp
addr16
adc
clc
sbb
jae
lods
lret
mov
sbb
mov
jle
stc
jmp
inc
dec
clc
cmc
lahf
pop
cmp
mov
data16
add
add
clc
jmp
cld
in
inc
jmp
dec
dec
cld
mov
sbb
shrl
mov
imul
dec
lcall
and
jae
dec
divb
add
cmp
mov
jmp
lret
cmp
movl
je
xor
stc
je
and
add
psubw
mov
add
inc
notl
push
popa
movaps
lds
icebp
jo
jmp
and
inc
es
adc
dec
ret
movb
cld
pop
mov
or
add
jmp
cmp
cmpsb
cmovo
ds
mov
cmovo
aad
lcall
test
add
add
cli
push
push
fdiv
std
xor
pop
adc
mov
mov
repz
test
cmp
out
mov
loopne
test
xlat
test
rcrl
pop
add
add
pop
sub
inc
dec
pop
rorb
pop
xchg
dec
loopne
std
fdivs
xchg
add
pop
pop
clc
xor
movsl
and
add
pop
or
mov
add
cs
cs
push
mov
orl
push
jbe
aas
dec
mov
push
push
loopne
icebp
pop
mov
hlt
inc
dec
popa
push
ds
cmp
pop
cmp
sub
js
inc
dec
popa
cmp
dec
stc
pop
dec
add
add
cwtl
add
stc
cmp
pop
and
cmpsb
cmp
sti
insb
les
outsb
repnz
sbb
imul
fbld
push
outsl
leave
adc
ds
jg
mov
outsb
out
or
ljmp
stc
jo
ja
sub
aam
ljmp
lret
jno
pop
ss
dec
stc
add
roll
dec
divb
mov
stc
mov
cmc
cld
insl
or
ja
mov
addl
sahf
jns
mov
pop
add
pop
icebp
call
insb
mov
add
pop
dec
stc
add
mov
dec
add
fs
xor
rcrl
jecxz
test
pop
add
add
add
push
inc
sub
stos
dec
jp
add
cmp
cmpb
add
divl
aad
fists
jecxz
jne
mov
adc
xchg
inc
pop
leave
in
cld
push
insl
fnstcw
clc
add
xor
nop
stc
std
shl
mov
testb
out
mov
outsl
sbb
adc
push
lea
add
cmp
clc
call
dec
jmp
test
add
mov
aas
dec
mov
in
adc
movb
fcomp
pop
sti
jmp
pop
imul
cwtl
pop
jp
cmp
mov
loopne
inc
daa
pop
ret
jbe
cmp
je
and
pop
push
pop
or
nop
push
push
jne
pop
incl
add
aad
fcoms
jge
add
pop
insb
jbe
aam
cmc
push
daa
dec
ds
stos
jmp
test
sbb
or
jg
aas
shlb
std
dec
push
dec
lock
lock
cld
aaa
mov
or
add
push
icebp
add
repnz
mov
push
dec
and
inc
pop
les
test
js
add
add
out
jbe
jl
in
jl
sub
dec
xor
jb
sub
dec
cmpl
out
mov
pop
jmp
daa
add
dec
pop
in
jle
gs
cmpsl
add
jmp
cs
gs
inc
or
cld
repnz
adc
shl
lock
ljmp
push
add
add
add
cli
cmp
stos
dec
loope
or
out
test
jg
inc
jmp
dec
stc
sti
in
xorb
scas
stc
je
ja
and
cmpsb
fwait
dec
mov
cmpsb
stc
push
jb
jnp
cmc
or
cmp
hlt
push
lret
out
cld
insb
sub
stc
pop
mov
adcb
imul
daa
rorl
or
add
jbe
dec
jne
and
je
jo
imul
inc
mov
call
fistps
pop
cmc
cli
pop
pop
jne
mov
aad
inc
gs
push
jmp
ret
cmovo
js
or
repz
sti
add
jb
add
out
js
out
add
cli
add
inc
in
in
enter
cmpsb
push
in
add
add
loop
test
repnz
sti
push
dec
scas
insb
push
lret
add
jns
push
call
jns
push
dec
mov
dec
loopne
sub
aam
inc
inc
xchg
dec
loop
add
xlat
scas
push
pop
iret
scas
push
inc
into
add
add
loopne
mov
test
fstl
or
push
call
jge
std
inc
dec
add
add
add
xor
pop
cli
jle
dec
into
fistl
xor
add
nop
movmskps
or
inc
ljmp
mov
add
mov
repnz
or
inc
dec
dec
and
mov
stos
add
dec
incl
in
cmc
cmp
mov
add
adc
cmc
in
add
xchg
jp
cmc
jmp
push
jp
mov
mov
cmc
in
add
jmp
add
stos
outsl
cld
dec
cmpsl
push
lcall
xstore-rng
cmpsl
pop
sub
insl
add
mov
jne
cmpsl
gs
pop
mov
rcr
inc
mov
xchg
cld
inc
jbe
cld
aam
pop
inc
jmp
dec
loope
in
add
add
test
fistpll
push
mov
dec
inc
cld
fcoml
inc
jmp
adc
out
daa
xor
push
gs
sarl
cld
sar
sti
sbb
push
mov
clc
add
outsb
je
out
hlt
jmp
shl
cld
cmpsb
jg
push
mov
test
es
inc
cmp
add
in
push
inc
pop
adc
jne
loopne
or
sti
cld
adc
testl
add
shll
push
inc
pop
or
push
xor
decb
push
testl
sub
jne
outsb
js
inc
pop
sbb
decl
in
std
adc
scas
cmp
test
idiv
ljmp
jne
pop
sbb
or
add
dec
mov
and
outsl
mov
jb
pop
jb
and
push
jno
dec
dec
jb
cmpsl
jne
std
nop
lahf
pop
jae
lods
lret
pop
aam
add
sbb
ja
add
jb
pusha
test
std
loop
jecxz
inc
sti
adc
bound
jmp
jb
addb
loopne
shlb
jecxz
inc
mov
add
mov
dec
std
jp
jecxz
inc
mov
ja
mov
inc
ret
xor
jmp
cmp
pop
add
outsl
push
mov
arpl
dec
stos
arpl
out
inc
dec
subb
int3
loop
inc
ja
out
dec
jne
outsl
sbb
xor
cs
pushl
movsl
and
add
xchg
lret
call
or
sub
fistpl
out
in
adc
and
sarb
outsl
popa
call
add
sub
dec
insb
adc
pop
mov
or
inc
cmp
push
adc
stos
inc
stc
xchg
nopl
push
stos
mov
call
xchg
out
sub
sub
daa
push
stc
sti
cld
hlt
or
fnstcw
and
mov
ret
test
dec
mov
jne
xchg
aaa
add
push
add
jmp
lcall
fdivr
mov
adcl
andl
rolb
hlt
add
add
xor
xchg
ljmp
fisttpll
dec
mov
imul
jmp
test
push
sub
mov
addl
es
inc
push
bound
lods
in
add
arpl
jno
stc
add
sti
add
sbb
add
dec
pop
fucomp
push
cs
mov
sti
pop
xchg
jae
add
sti
mov
mov
cmpb
ret
cmp
push
rolb
push
sbb
sbb
cmp
in
pop
test
les
dec
dec
shr
push
and
mov
rolb
mov
add
in
bound
loopne
sahf
xor
add
push
icebp
sti
dec
divl
dec
push
pop
hlt
not
add
dec
clc
aad
dec
stc
jmp
loop
dec
inc
add
mov
dec
mov
add
mov
je
repz
loop
dec
xchg
clc
test
sub
jnp
fidivrs
xor
add
icebp
mov
add
mov
cli
pop
dec
jns
or
sub
jmp
inc
add
add
daa
in
or
sbb
lahf
idiv
add
mov
testb
jo
xchg
or
lcall
ss
loope
add
jmp
or
add
icebp
jne
out
push
sti
xor
out
popf
jmp
sti
sahf
out
outsl
fldenv
jmp
xchg
adc
xorl
fldcw
jb
je
add
adc
jmp
insb
movsl
insl
sub
in
jmp
rcll
in
dec
stc
test
pop
idiv
pushf
pop
dec
mov
out
arpl
dec
jmp
mov
scas
mov
in
movsl
fdivr
addl
push
push
dec
push
sbb
repnz
push
fdivrs
cmp
mov
jl
ljmp
adc
add
add
and
mov
add
and
pop
std
add
neg
jo
xor
mov
out
addl
sar
mov
jmp
mov
sbb
and
pop
fnstenv
pop
mov
add
dec
mov
xor
insl
inc
and
and
insb
and
push
and
sbb
dec
adc
add
sbb
dec
rolb
xor
sbb
pop
les
paddw
adc
or
push
jnp
dec
sarb
jae
or
push
inc
and
lahf
inc
or
nop
mov
lcall
enter
fsubl
int3
adc
lret
inc
jb
testl
jmp
hlt
jmp
add
push
stc
popl
loope
daa
loopw
jmp
add
cmp
ljmp
stc
insb
dec
jae
lcall
dec
jecxz
enter
shlb
add
repnz
insb
ret
jl
rcll
loope
adc
dec
stos
push
xor
mov
adc
dec
jge
push
rorl
fidivs
sub
stos
push
sarl
arpl
xchg
dec
mov
mov
inc
jne
stc
jmp
icebp
insl
pop
jb
cmp
int
or
aad
jecxz
jb
jp
push
cwtl
out
push
push
aaa
xchg
pop
dec
fidivs
and
jmp
jb
mov
in
or
fs
sbb
out
subl
shll
push
stc
mov
sbb
xchg
mov
stc
add
add
add
fcomps
pop
fidivs
subl
or
in
stc
add
stos
daa
mov
stc
mov
mov
daa
in
sbbl
jne
mov
xchg
sub
inc
in
inc
ss
adc
test
inc
ss
or
jb
lock
stc
push
jl
xchg
sub
sbb
cmpb
outsl
and
add
inc
jo
clc
inc
mov
or
lock
or
fiadds
arpl
jne
mov
jmp
jmp
adc
in
add
ficoms
mov
push
push
in
pushf
loopne
and
addb
inc
dec
or
xor
test
or
add
in
push
in
sbb
add
jl
fnsave
daa
push
inc
add
sbb
add
aaa
fwait
hlt
or
pop
and
aad
xorl
adc
cmc
xchg
mov
cmp
and
dec
push
jb
dec
rcl
inc
jae
add
jae
cli
add
adc
movsl
add
sub
fstl
and
cmpsb
pop
inc
insb
scas
pop
add
add
dec
rolb
xor
aam
fwait
adc
sub
rcrl
ss
mov
mov
jne
insb
aas
sub
cmp
adcl
mov
mov
push
or
xor
adc
xchg
rorb
ret
cmp
outsl
inc
jae
jno
push
jb
and
add
add
or
movsl
daa
shll
hlt
add
ja
aad
or
or
jb
lds
stc
push
inc
jne
jmp
xor
inc
jmp
adc
mov
push
fisttps
inc
fidivs
pop
fs
cmp
stc
test
adc
add
clc
lea
pop
ficoms
sbb
cmp
and
xorb
adc
or
inc
or
pop
int
inc
data16
test
stos
adc
stos
cld
adc
fildl
ljmp
rcll
inc
cmp
test
adc
add
and
lods
adc
test
push
icebp
sub
and
aam
cmc
add
pop
mov
or
push
test
sub
fsubrp
and
dec
mov
xchg
icebp
roll
xor
roll
add
cmp
add
out
inc
dec
rcl
push
enter
test
adc
inc
add
adc
outsb
lret
or
inc
add
add
mov
dec
xchg
dec
shr
aas
int3
rcr
adcb
inc
dec
rclb
cwtl
jnp
les
out
aas
dec
push
sbb
or
add
jp
mov
test
adc
mov
dec
leave
movsb
inc
dec
clc
sbb
cmp
fadds
cmp
mov
aam
xor
dec
pop
gs
mov
cmc
insb
les
add
sti
icebp
mov
inc
dec
outsb
hlt
andb
imul
stos
add
dec
mov
call
mov
fwait
cmp
dec
sbb
repz
fs
bswap
mov
cli
pop
adc
xor
sub
testb
mov
imul
ljmp
cld
sbb
mov
add
lahf
in
adc
dec
jbe
hlt
cwtl
jb
orb
jbe
cltd
and
hlt
push
in
repnz
call
and
arpl
jg
or
xor
xor
rcr
cld
jmp
push
or
jmp
jle
mov
pop
inc
inc
sarb
cmp
push
loope
inc
cld
add
add
pop
daa
jne
gs
je
inc
jo
icebp
sbb
adc
cld
add
mov
inc
cld
mov
add
sub
mov
shlb
std
push
popa
arpl
dec
jmp
cld
cmp
xorl
or
mov
cmc
shrb
ret
ret
loope
in
sub
push
ret
jmp
incl
add
mov
inc
or
push
scas
pushl
jne
jge
jmp
std
shll
jmp
inc
fstpt
mov
sub
dec
loop
push
pop
fwait
cs
lods
dec
or
or
xor
add
call
mov
shll
cmp
gs
test
add
push
push
aad
stos
sbb
pushl
mov
add
pop
test
and
xor
cmp
das
lret
orl
rcr
pop
push
pop
clc
xlat
cmp
ss
repnz
mov
cmp
pop
lods
ret
fcomi
test
rcrl
loope
mov
sub
mov
mov
aas
stc
adc
mov
add
cmpl
enter
cmp
gs
pop
or
pop
pop
call
adc
xchg
fldt
ret
jmp
jle
xchg
sti
adc
xor
add
ss
stc
les
cmpb
loope
mov
stc
lea
inc
cld
pop
aaa
loope
in
stc
test
rcl
jbe
sub
dec
bound
add
pop
add
jbe
sti
lahf
popf
rorl
adc
imul
in
or
jne
cmpsb
incb
frstor
jle
pop
mov
cld
dec
push
add
or
inc
sub
dec
jmp
cmp
inc
in
stc
sti
xchg
and
add
mov
stos
pop
pop
das
mov
dec
repz
add
adc
xor
in
pop
inc
and
sub
add
ja
jl
je
inc
cmp
sub
push
or
jmp
cmp
sub
mov
add
adc
xor
pop
mov
and
icebp
in
mov
inc
jmp
out
rcrb
mov
pop
sub
add
adc
pop
icebp
add
fimull
mov
loopne
push
cmp
sarl
fisttpll
xor
or
pop
fisttpll
fmull
sarb
fmull
push
push
push
dec
mov
cmp
adc
std
mov
and
movsb
fildl
inc
inc
dec
push
divb
push
sub
and
int3
sub
jb
pushf
jge
fs
jle
adc
push
pop
mov
pop
add
cli
outsb
leave
mov
push
inc
in
jl
pop
and
dec
push
sub
jbe
xchg
jl
jbe
pop
sahf
sub
cmp
ss
inc
jle
int3
mov
ret
jnp
jl
pop
pop
shrb
hlt
inc
fcmovbe
ret
adc
aas
mov
add
add
cmp
xlat
shr
dec
dec
out
or
xchg
shll
inc
stc
insb
sbb
lods
iret
pusha
dec
pop
jbe
iret
dec
dec
fstpt
add
sub
into
adc
adc
sar
push
mov
or
lods
add
cmpsl
add
add
or
jb
add
xchg
xchg
xchg
mov
add
jge
mov
loope
mov
stc
das
fwait
aam
jae
push
or
xchg
inc
scas
pop
es
cmp
add
pop
daa
imul
int
sbb
cltd
shll
test
lret
dec
mov
add
aas
or
lods
inc
ljmp
push
mov
in
pop
mov
push
test
add
mov
push
test
add
cld
add
ja
inc
push
mov
jne
fwait
cmp
dec
push
or
add
or
cmp
cmpsb
cld
add
sbbb
ja
mov
pop
jle
lret
jle
xor
and
int
push
mov
vmovd
inc
adc
sub
mov
lcall
inc
dec
inc
adc
add
xor
jns
push
cmp
addl
int
fwait
call
push
or
push
arpl
mov
lods
fnstenv
dec
pop
inc
sbb
in
mov
cli
add
xlat
fldenv
adc
nop
pop
loop
sbb
inc
or
jno
adc
inc
or
imul
push
mov
incl
mov
lret
jmp
cld
lret
mov
test
pop
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
test
add
sbb
add
in
dec
sub
les
or
std
pop
sub
add
std
into
xor
insb
pop
into
jno
fwait
loope
mov
xchg
je
push
dec
into
cmc
notl
addb
fwait
aas
inc
jmp
mov
pop
xchg
cmp
jmp
adc
stc
data16
mov
loope
adc
ret
call
dec
mov
adc
icebp
repnz
int3
push
add
add
add
add
mov
icebp
dec
sbbb
int3
jbe
push
cmp
sbb
in
insb
pop
xchg
jmp
push
cld
jg
xchg
sti
test
stc
add
cli
mov
push
cwtl
fmul
ret
pop
xor
add
mov
add
inc
sahf
push
push
mov
push
push
push
stc
add
jbe
adc
mov
mov
add
add
clc
mov
mov
jne
rclb
adc
add
add
jmp
xchg
xor
inc
add
push
jnp
push
ljmp
dec
shll
or
testb
dec
xor
aas
dec
add
adc
in
std
jb
push
jl
jbe
lret
dec
push
add
add
dec
sub
bound
or
aad
std
inc
gs
into
xor
xor
aam
jmp
call
pop
and
stc
leave
std
popl
call
les
xor
aas
dec
inc
inc
cmpsb
fidivl
sti
or
loopne
loopne
jg
into
addr16
ljmp
and
mov
push
enter
lcall
jg
cli
jmp
int3
jp
sbb
jge
mov
adc
ljmp
cli
jmp
rolb
lcall
sub
out
js
test
add
xor
test
lret
fstpt
stc
jmp
int3
cli
lret
int3
cltd
repz
ljmp
faddl
add
add
lret
mov
jmp
das
and
popa
add
dec
jns
insb
out
cld
sahf
arpl
push
pop
popf
or
pusha
push
leave
addb
stc
add
xchg
inc
aaa
jmp
mov
inc
cltd
ss
jmp
cwtl
cmp
lret
lret
in
clc
jae
mov
push
jmp
sar
xchg
mov
ss
push
pop
add
add
int3
jbe
adc
dec
fisttpl
xor
adcl
mov
pusha
push
cmp
aad
mov
add
sub
dec
pop
hlt
lock
add
lea
inc
jbe
js
jbe
or
stc
add
add
imul
idiv
mov
jmp
mov
adc
lret
cmp
mov
push
test
sar
jns
in
jmp
icebp
push
inc
es
adc
mov
cmp
testb
pop
push
call
dec
data16
push
movsl
ret
inc
dec
rolb
xor
xchg
add
lds
inc
xorb
pushl
mov
iret
imul
add
or
movups
enter
mov
pusha
cmpsb
sbb
std
sub
add
lea
sahf
popa
cmc
mov
lret
nop
ret
loopne
lock
or
out
lods
pop
fists
mov
pop
or
mov
stc
scas
hlt
stos
lret
jmp
push
jb
int3
pop
nop
stos
or
stc
jmp
sti
mov
or
iret
pop
testb
mov
sbb
cmp
out
pop
je
fistpl
enter
and
cmp
hlt
mov
cmc
pop
ds
add
xor
jae
inc
dec
xor
pop
sub
js
jmp
jo
enter
inc
mov
movb
ljmp
add
add
add
sub
scas
outsl
xlat
mov
testb
inc
jae
jno
push
inc
repnz
inc
add
aas
jle
mov
cmp
pop
lret
stc
push
jb
js
mov
jp
cld
scas
popa
xchg
pop
fisubrl
fldenv
fnstsw
pushf
pusha
hlt
mov
stc
add
icebp
mov
dec
adc
jbe
cmp
pop
ja
call
ret
xchg
mov
ja
adc
cmp
loope
test
cld
add
arpl
inc
jnp
cld
pushl
xor
in
das
cmp
mov
mov
rorl
cmp
mov
popf
pop
adc
jbe
hlt
mov
cmp
xor
jge
add
jo
add
add
cmp
mov
cmp
cmp
mov
mov
or
jmp
add
adc
add
mov
dec
gs
mov
inc
in
lea
iret
mov
pop
lock
mov
out
pop
jnp
inc
sub
fnsave
lret
mov
dec
loopne
fmull
loopne
add
iret
in
add
sbb
jae
and
adc
mov
fistl
std
adc
test
rorb
mov
xchg
mov
adc
or
pop
dec
loopne
stc
xor
lock
insb
push
or
pop
add
stc
jbe
push
enter
mov
popa
pop
jmp
aas
mov
movsb
xor
add
sub
iret
sbb
cmp
xor
mov
fsubrs
inc
outsl
cmp
pop
cmp
inc
mov
stc
and
xor
out
push
cmp
adc
repz
mov
push
stc
lods
fildll
add
add
aas
jne
daa
pextrw
mov
add
aam
xchg
outsl
and
or
add
rcl
cmp
jo
icebp
lds
sbb
cs
add
pushf
int3
ret
sub
stc
ret
stc
mov
jp
test
mov
lea
stc
add
test
mov
rolb
bound
jmp
push
push
push
mov
insb
ffreep
cld
jmp
add
add
add
mov
and
dec
fcompl
xor
mov
testb
stc
dec
dec
call
insl
cmp
push
jmp
jmp
bswap
pop
cmc
mov
mov
jbe
in
jbe
loopne
push
push
add
add
inc
scas
mov
inc
pop
add
add
inc
aam
mov
fidivrl
jbe
in
add
mov
push
decl
add
xchg
das
cmp
xor
inc
loopne
jge
xchg
push
add
pusha
gs
mov
xchg
lock
fmuls
dec
dec
enter
add
xchg
aam
les
xor
aad
mov
push
lds
add
jg
jnp
rorb
cmp
mov
push
iret
iret
add
jp
mov
adc
or
add
iret
lahf
or
aad
aad
iret
cmp
repz
dec
add
pop
xlat
mull
dec
mov
mov
xchg
aam
maxps
jecxz
jl
jne
pop
shlb
add
loop
push
mov
pop
leave
shrb
mov
stos
ss
xor
or
and
pop
shll
repnz
bound
shrb
jb
outsl
inc
pop
sub
ss
sti
add
xchg
mov
in
stc
xlat
cmp
push
test
or
addr16
jmp
cmp
push
lods
adc
xchg
orl
xchg
mov
or
andb
fistpll
push
int
sub
pusha
push
popf
mov
push
fstl
movsb
call
dec
jbe
leave
ret
jb
jmp
out
aas
add
dec
jo
add
outsb
push
lock
test
repnz
add
add
dec
dec
repnz
add
xchg
and
cld
pushl
cli
mov
sbb
outsl
dec
lock
stc
mov
sbb
adc
dec
mov
test
jge
outsb
dec
clc
enter
sub
inc
cmp
in
icebp
jno
in
jne
insb
js
pop
add
cmp
js
das
add
andl
jle
add
jle
ja
idivb
jmp
int3
andl
mov
ror
call
js
cmp
fwait
xor
int3
test
lcall
aas
lea
call
xorb
pop
aaa
call
inc
xchg
xlat
fidivrl
inc
pop
call
dec
push
pop
fcom
pop
pushf
andb
mov
pop
cld
mov
ret
add
add
movb
rolb
add
sahf
add
fst
mov
fimull
xchg
negl
jae
mov
push
mov
or
outsl
sub
mov
push
scas
out
xlat
sub
add
mov
mov
movsl
iret
mov
and
out
shlb
jno
add
add
iret
testb
add
repz
pop
das
aaa
jo
or
dec
mov
sub
add
sub
jmp
mov
pop
stos
cld
and
jno
stc
test
std
out
shlb
mov
iret
call
dec
xor
sub
adc
outsb
pop
jno
cmc
shrb
fnsave
jo
mov
add
xchg
and
sub
sub
push
jb
js
cltd
ret
or
fstl
aad
cmc
jb
in
adc
es
adc
idivb
dec
mov
testb
cmp
ds
test
outsb
in
dec
stc
daa
mov
fimuls
mov
insb
push
lock
push
out
repz
popf
mov
add
mov
adc
insb
dec
clc
fildll
fnstcw
cmpsl
add
mov
mov
mov
inc
fsubrs
das
in
pop
sub
mov
in
push
call
jge
jne
out
sub
mov
outsb
inc
hlt
jne
fldl
jne
loope
gs
add
in
sub
push
inc
lock
test
jl
inc
xchg
xchg
inc
rolb
add
dec
mov
dec
push
xlat
jle
dec
cmp
dec
add
lea
lret
jmp
aam
inc
ja
sbb
inc
push
rol
xchg
iret
add
xchg
inc
xor
xchg
fidivs
add
jne
add
gs
lds
or
inc
jmp
or
cwtl
xchg
mov
inc
cmpsl
imul
imul
cmp
dec
stc
jo
fwait
sub
stos
xor
fildl
xlat
std
repz
leave
test
push
mov
cmp
xor
ljmp
jns
or
ss
imul
int3
mov
fsubrp
pop
jo
xlat
push
std
jno
cmp
add
sub
mov
mov
into
mov
cli
mov
push
mov
add
add
out
jno
cld
pop
sti
dec
cld
push
jmp
add
and
fldz
and
cmp
cld
sbb
xorl
and
mov
addb
mov
jle
addl
rclb
jno
add
pushf
mov
add
cmp
stc
xlat
cmp
push
lds
add
or
xchg
mov
cs
cmp
stc
cmp
push
rcll
sub
pop
out
mov
add
pop
mov
dec
dec
mov
ss
sub
push
push
xor
scas
std
inc
inc
mov
push
hlt
pop
push
fisttpll
stos
sti
mov
cli
add
lret
loopne
aaa
adc
popa
js
add
mov
ss
loopne
pop
decl
cmp
jle
add
cli
orl
push
ljmp
jmp
mov
aas
adc
inc
mov
ss
dec
leave
in
or
jnp
fldt
sarb
shlb
push
aam
test
push
jmp
push
add
add
adc
sarb
cmp
sarb
mov
mov
xor
dec
out
cmp
sub
or
ja
mov
scas
out
fstl
xor
aam
mov
mov
fcmovne
mov
push
cmp
pop
hlt
je
lods
mov
fucomi
inc
or
jne
or
jns
icebp
jle
add
xchg
movsl
jno
mull
popa
pop
out
test
dec
xchg
inc
dec
adcb
lock
call
mov
or
push
xor
outsb
aaa
pop
cs
jl
mov
add
xor
add
inc
fildl
or
out
mov
outsl
aas
dec
mov
bound
cmpb
xor
sub
xchg
lret
movl
test
mov
adcb
inc
std
ljmp
in
js
call
add
jle
ljmp
push
pop
sbbb
les
xor
xor
jb
or
sub
mov
sar
stc
loop
int
mov
add
add
or
sbb
add
cld
mov
or
cltd
inc
and
mov
push
mov
aad
add
ss
pop
call
divl
rorb
in
push
pop
repz
outsl
repz
dec
or
xor
roll
mov
dec
mov
call
add
cmp
cltd
jns
add
sub
out
aaa
leave
jmp
das
push
or
aas
rorl
jns
add
sub
fistpll
int
xor
or
test
sahf
mov
hlt
dec
pop
dec
enter
add
fs
cmpb
mov
cmp
jecxz
cmp
aam
clc
out
adc
add
add
fadds
sub
subl
rolb
add
in
xchg
mov
inc
lahf
mov
mov
icebp
jmp
cmp
aam
jge
ja
add
or
add
movsb
jmp
dec
movsl
add
mov
testb
ss
inc
scas
test
roll
add
mov
lcall
lods
cmpsl
and
or
ds
and
dec
hlt
movsb
cmp
imul
leave
test
push
nop
sbbl
mov
int3
add
xor
pushf
add
mov
adc
ljmp
jns
sti
add
add
add
cmp
jle
push
and
jne
dec
cmc
mov
xchg
std
sbb
jo
icebp
test
ret
js
gs
sbb
ud0
verr
mov
out
sar
lods
jmp
mov
jecxz
shll
cld
push
xchg
lods
jbe
jmp
cmc
cmp
sub
shll
lods
cld
mov
add
add
sti
xor
std
mov
lret
lods
jbe
arpl
stos
sub
bound
jno
add
cld
mov
xor
scas
aaa
call
popf
aaa
mov
xchg
clc
push
sti
push
or
dec
jmp
add
inc
in
push
xor
gs
adc
aaa
rorl
out
cli
incl
inc
call
xor
aaa
mov
xor
add
insb
mov
in
sub
add
add
gs
mov
imull
jne
xor
push
and
dec
rcll
mov
repnz
ja
mov
loope
inc
inc
xchg
jb
jg
enter
ss
push
or
mov
jl
iret
cmp
jae
stos
mov
cmp
push
mov
add
inc
pusha
inc
cmp
and
cmp
jle
xlat
xchg
inc
aas
je
xor
movsb
rolb
cmp
sbb
inc
push
or
or
xlat
clc
xchg
xchg
jmp
pop
iret
xorb
stos
add
and
or
push
popf
outsl
cmp
xor
xchg
sahf
inc
mov
addb
enterw
clc
jmp
add
ss
int3
adc
add
jp
lock
cli
mov
adc
push
dec
adc
roll
cmp
jno
mov
dec
es
andb
pop
dec
dec
rolb
and
push
call
es
shlb
add
data16
jmp
stc
bound
add
xor
call
sti
std
mov
inc
std
stos
stos
mov
jmp
outsl
nop
lds
sub
or
sbb
jmp
jo
jne
cmc
inc
dec
mov
fs
xchg
es
sar
call
lock
or
testl
cmc
cmpsl
fs
icebp
cmpsl
fs
out
pop
sub
add
add
cld
sti
fisubs
rorl
fnstenv
mov
jbe
aas
clc
jne
stc
psubw
lods
fsubrp
loop
sbbb
adcl
inc
mov
testl
lock
mov
xchg
sbb
in
test
popf
mov
adc
outsb
add
pop
cli
sti
cmp
mov
mov
testb
jmp
jb
cmc
jne
std
gs
dec
sub
pushl
xor
enter
or
dec
daa
cmp
les
sarb
out
or
dec
xchg
jle
pop
xor
mov
icebp
add
xchg
pop
lds
je
das
jmp
or
cmp
mov
pop
mov
add
add
add
mov
sub
mov
ja
negl
ret
pop
sub
je
add
sub
mov
ja
dec
addr16
pop
lds
stc
cmpsl
xor
mov
ljmp
and
sub
in
push
clc
sub
scas
sbb
jp
movsl
pop
aas
inc
ljmp
jne
cwtl
ss
fwait
cli
fnstsw
lds
aad
pop
jg
stc
insl
insb
dec
stc
jmp
inc
sbb
outsl
push
out
pop
sub
push
pop
popa
adc
mov
sti
push
mov
mov
mov
lcall
pop
ret
push
mov
cltd
jno
cmp
or
xor
je
mov
jmp
stos
sub
sbb
sahf
std
scas
stos
xchg
dec
imul
cmp
dec
sbb
inc
jns
test
dec
jle
rorl
cmpsb
cmp
mov
in
cld
inc
sub
aad
sub
push
inc
cmp
cld
pushf
add
push
xor
mov
push
mov
jle
add
test
shll
mov
dec
in
mov
int3
lea
or
imul
in
out
or
xor
scas
mov
decb
cmpsb
adcb
sbb
test
add
add
inc
inc
add
ljmp
mov
mov
lods
in
xor
adc
jne
pop
jo
sahf
outsb
xor
mulb
shll
jmp
testb
xor
xor
fsubr
dec
lock
rcrb
jmp
adc
ret
repnz
mov
iret
call
sbb
mov
sub
inc
sub
mov
mov
cld
or
or
inc
dec
sbb
ja
rolb
aas
sbb
add
or
add
dec
sub
les
lgs
stos
je
push
das
dec
or
mov
hlt
mov
insb
les
add
add
or
cltd
cmpsl
pushf
test
xchg
xchg
call
hlt
int
fildl
and
sub
cmp
loop
cwtl
nop
out
add
add
jmp
inc
enter
dec
sub
addr16
push
jb
adc
cmp
nop
jns
jno
lds
mov
stc
ret
xchg
icebp
adc
mov
add
inc
jbe
repz
fsubl
adc
pop
icebp
add
aam
add
dec
mov
add
icebp
jg
lods
daa
push
scas
or
add
add
add
stc
sti
jmp
scas
stc
add
fnstcw
daa
sbb
cmp
xchg
xchg
mov
sub
sarb
and
lret
xchg
pop
mov
sub
sbb
aaa
cmc
push
ja
cld
pop
cmp
push
fs
aam
inc
xchg
popa
cld
add
das
cmp
popa
das
pop
mulps
or
test
add
add
add
das
sbb
and
fcoml
out
addl
shll
pushl
call
orb
add
pop
jae
cltd
stos
rclb
std
push
call
and
aaa
pop
leave
in
add
xor
std
ss
std
std
jbe
pop
adc
push
aaa
add
and
mov
clc
lret
mulb
mov
call
cmpl
les
hlt
cs
rolb
aas
dec
daa
nop
and
mov
out
xchg
mov
add
push
lahf
adc
call
push
push
mov
or
fisubl
add
or
push
add
add
movsl
or
mov
nop
add
stc
dec
add
icebp
jmp
mov
imul
add
popf
vmwrite
and
fisubrs
ja
stos
add
xchg
fst
shlb
pop
dec
stc
xchg
inc
and
jmp
lret
call
outsb
ret
pop
jge
push
dec
stc
aas
or
dec
pop
push
xchg
sub
add
loope
ljmp
mov
jmp
mov
and
add
std
test
add
dec
out
mov
mov
mov
loope
ret
pop
or
inc
shr
popf
cld
ds
call
inc
jbe
out
dec
stc
xchg
int
jmp
movsb
in
push
je
lea
lock
push
in
lds
test
or
jmp
adc
sti
jmp
stos
or
cltd
and
pusha
ljmp
sub
loop
js
mov
sub
add
cld
test
sbb
orl
jp
add
js
pop
idiv
dec
packssdw
inc
ja
sti
push
mov
add
and
call
test
test
test
jl
mov
ljmp
test
add
jbe
inc
mov
push
loopne
call
les
cli
popa
add
jbe
jo
repz
sbb
mov
ja
push
dec
nop
add
mov
ret
inc
add
dec
pop
les
mov
add
mov
or
mov
inc
fldt
push
dec
push
scas
mov
mov
xlat
loop
enter
nop
shll
int
icebp
out
mov
shll
or
lahf
mov
loopne
inc
scas
loopne
cli
mov
int
or
push
inc
cmpsb
inc
movb
sbb
add
sub
lahf
sahf
adc
add
stos
or
shr
add
jnp
inc
inc
jae
das
sahf
cmc
or
sbb
add
jne
or
or
add
or
pop
loop
ljmp
jb
xor
jo
mov
mov
mov
mov
js
adc
pop
cmpsl
gs
dec
jecxz
add
add
mov
cld
mov
dec
pushf
dec
out
imul
add
icebp
push
fimull
sub
dec
stc
jg
aad
test
stc
add
push
loopne
into
dec
stc
or
add
leave
and
push
aad
adc
test
leave
icebp
sti
cltd
fdivl
xor
sbb
jmp
add
add
sbb
jmp
jge
xor
in
dec
and
rcrl
add
pop
xor
xchg
jp
add
clc
add
xor
add
mov
jne
orl
jmp
mov
jns
or
jmp
incl
add
mov
je
call
xchg
sub
test
ljmp
adc
ret
mov
sbb
pop
orb
lods
mull
sub
std
push
dec
xlat
daa
add
rorl
mov
add
or
dec
mov
add
xchg
jl
dec
nop
add
or
add
dec
or
add
add
or
mov
dec
nop
add
mov
addl
test
and
jl
dec
nop
add
arpl
jmp
addl
test
jb
add
nop
add
push
add
dec
daa
scas
mov
aam
mov
movsl
dec
lcall
push
mov
add
jno
xchg
cmp
jg
cmc
jmp
xchg
inc
outsb
lcall
stc
jmp
add
and
cs
imul
pop
shr
in
dec
outsb
lods
pop
movb
inc
inc
push
xor
inc
inc
sbb
fwait
cmp
mov
add
dec
adc
arpl
jmp
mov
add
add
xor
or
mov
data16
popf
pushf
mov
fidivrs
adc
inc
aam
fbstp
repnz
pop
mov
and
sub
or
add
cmp
arpl
mov
cmp
push
or
xor
adc
pusha
pop
dec
push
jg
dec
mov
dec
fiaddl
add
dec
insl
ret
mov
pop
sbb
inc
icebp
jae
jns
in
int3
fwait
add
add
lds
aad
cmp
call
in
or
popa
test
or
loope
jp
adc
xchg
jge
add
ss
shrb
and
jns
inc
sbb
add
add
into
testb
add
xchg
testb
push
jl
add
sti
add
xchg
xchg
int
inc
pop
int
test
sbb
icebp
push
idiv
mov
dec
icebp
xor
or
xchg
push
aaa
jmp
mov
jp
jne
mov
jo
ja
jmp
or
dec
and
xchg
dec
lahf
imul
add
push
push
rclb
insl
mov
or
mov
dec
mov
mov
push
xor
dec
sldt
push
pop
mov
loope
or
sub
or
sbb
std
jg
cmpsl
mov
aas
xchg
mov
sub
stos
add
xor
adc
data16
jmp
ss
stc
jmp
or
mov
sub
nop
add
stos
repnz
ljmp
xchg
bound
shlb
fptan
outsb
dec
cmp
or
cld
or
dec
or
loope
movsl
xchg
sbb
cmp
jb
or
pop
sbb
mov
les
push
add
push
cli
les
fwait
sub
sahf
in
mov
fcompl
add
xchg
imul
mov
daa
jmp
shrb
jle
push
cmp
and
imul
push
shll
add
sarb
cld
jmp
leave
sbb
mov
stc
add
and
ret
cmp
mov
add
dec
dec
stc
test
testl
xchg
dec
cld
push
enter
dec
xchg
cld
add
lock
ja
clc
push
inc
adc
push
add
add
pushl
stos
mov
add
ret
inc
dec
add
das
dec
adc
jne
enter
lock
pop
adc
add
mov
xor
je
or
popf
ret
cvttps2pi
inc
mov
repnz
xchg
push
jne
push
dec
dec
jns
adc
aam
sub
jb
jne
mov
dec
pop
inc
dec
leave
mov
and
loopne
or
mov
bound
or
stc
add
pop
push
sbb
fwait
orl
mov
add
cmc
mov
add
add
pop
mov
adc
mov
rorb
mov
xchg
jno
push
test
mov
xchg
push
jbe
xchg
jae
js
daa
dec
stc
jmp
orb
jl
add
inc
pop
out
jmp
push
pop
mov
retw
cmp
push
jecxz
xchg
jmp
adc
repz
imul
add
iret
adc
add
es
or
loop
mov
mov
push
push
jns
push
dec
pop
cli
mov
test
aad
mov
mov
xchg
jo
fstpt
sub
into
adc
add
add
in
sti
aam
out
jmp
les
push
enter
and
fadds
cld
ss
xchg
sarl
or
inc
mov
jo
rclb
stc
mov
idiv
test
nop
fidivs
notl
dec
aad
cmp
aaa
xchg
push
push
xorl
and
xchg
xchg
int3
mov
add
pop
test
add
mov
cmc
or
add
mull
cmp
mov
mov
mov
add
mov
mov
pushl
or
sbb
jg
add
adc
addr16
or
pop
or
and
push
mov
mov
fstl
cmp
cli
cmc
xor
pop
add
pushl
push
mov
add
orl
repz
adc
mov
addr16
inc
sbb
aam
cld
out
push
mov
or
fiaddl
mov
loopne
or
inc
std
mov
mov
stc
into
xor
xor
pop
cmp
lock
mov
sub
xor
dec
das
cmp
sarb
mov
icebp
sbb
adc
add
inc
cmp
push
mov
mov
jmp
push
aam
mov
mov
mov
jo
cmp
push
cmp
cmpb
enter
adc
jno
push
cmp
push
sbbb
mov
sbb
xor
andb
inc
ficompl
ret
fbstp
cmpb
or
sbb
pop
nop
jle
outsl
clc
push
cmpb
negl
push
mov
jno
push
sbbb
push
subb
add
sub
mov
pop
pusha
xor
xchg
lret
jmp
pop
lea
fidivrs
adc
sbb
pop
outsb
aam
push
data16
add
std
ret
movsb
sarb
jmp
mov
jp
mov
js
shrb
push
or
push
adcb
push
push
or
xchg
addb
cltd
idivl
loope
mov
or
les
faddp
and
arpl
xor
into
aad
mov
jae
push
call
or
loopne
jmp
add
cmp
xchg
inc
adc
data16
pslld
lods
jns
add
ljmp
push
lea
xor
decl
cmp
push
push
jo
jns
inc
adc
cld
pop
repz
repz
add
cmp
add
cmp
push
data16
add
mov
add
xor
push
movb
add
clc
add
aad
ljmp
dec
pop
std
cmp
cmp
int3
popa
add
aam
push
and
cld
out
mov
add
rcrb
mov
dec
ret
adc
jge
into
jne
add
mov
clc
push
subl
aad
mov
lods
push
and
jno
insb
mov
add
loope
orl
add
lea
dec
fwait
push
inc
je
xor
pusha
clc
cmp
mov
jmp
lea
add
int3
aam
pop
xchg
mov
addr16
xchg
pop
mov
int
or
add
jmp
jno
pop
ds
mov
add
mov
jmp
sub
les
test
jmp
mov
mov
lods
mov
and
adc
cli
add
mov
jmp
popa
ja
call
xrelease
add
mov
cmpsb
mov
call
loope
mov
cmpsb
mov
jmp
mov
push
add
sub
pop
xchg
loopne
psubsb
mov
cmp
iret
pop
add
dec
cmpb
pop
adc
sti
ds
scas
mov
gs
test
lods
pop
or
sahf
dec
ret
stos
dec
mov
add
aaa
fnstcw
and
cmc
add
fsubl
pop
out
adc
and
add
es
or
add
push
jecxz
mov
push
call
stos
mov
add
push
shl
punpckhdq
mov
js
push
lea
stc
pushl
call
test
popl
psubusb
xrelease
stc
adc
jno
mov
int3
push
push
add
sti
jno
push
mov
inc
adc
dec
sbb
inc
cmc
dec
jmp
add
rcl
aam
mov
or
dec
jp
fisubrl
inc
dec
cs
sahf
leave
sarb
pushl
pusha
cmp
push
pop
or
adc
cltd
gs
hlt
cld
jg
cwtl
add
push
xchg
pop
mov
cltd
fldt
int
inc
ja
sbb
add
into
jns
inc
arpl
add
push
dec
push
add
add
clc
insl
les
xor
iret
les
jno
xchg
ret
sqrtps
aad
dec
and
adc
jbe
dec
addr16
dec
sub
pushf
rcll
movb
mov
fs
cmp
prefetch
or
and
xchg
sub
mov
outsl
add
and
hlt
add
add
fldpi
add
outsl
ds
jb
stos
sub
add
lods
mov
dec
stc
add
fs
test
cltd
xchg
mov
inc
movsb
jmp
push
int3
stc
add
cmc
cmp
lods
cld
sub
out
sub
inc
jmp
fwait
std
add
fistpll
lods
sbb
adcl
jmp
add
test
dec
stc
bound
aad
xchg
jmp
jo
sti
jbe
or
data16
jge
sbb
cmp
push
aad
dec
int3
nop
mov
inc
std
add
pop
ljmp
movsl
stc
sti
fdiv
std
xor
dec
loopne
adc
push
jo
xor
add
data16
loopne
add
mov
and
push
push
decl
jl
add
jb
add
stc
mov
jl
in
jmp
ja
ljmp
int3
mov
sbb
push
clc
add
imul
jmp
dec
xor
pop
ret
test
addr16
xchg
add
fstpt
dec
dec
jg
add
add
sbb
bound
orl
add
nop
addl
std
mov
je
dec
xchg
add
stc
lock
rcll
test
popl
add
fdivl
adc
std
sbb
push
cmpsl
pop
addb
lret
xorl
rolb
decl
hlt
shll
adc
int3
adc
or
dec
stc
ret
mov
aam
addl
adc
pop
jle
add
xchg
divb
mov
adc
ja
jl
cmc
call
repz
into
jg
adc
lock
psllq
stc
jmp
adc
in
add
icebp
and
add
in
or
cmpb
sub
add
cmpb
xor
inc
iret
test
xchg
insl
iretw
in
jne
aad
lods
push
iret
test
inc
icebp
jo
xchg
imul
aad
es
sub
pop
loope
test
dec
js
cmc
xchg
cmc
test
dec
stc
add
aas
jbe
call
pop
hlt
mov
pop
and
add
add
aam
mov
adc
push
pop
int3
sti
cmpsb
mov
les
in
jmp
jo
add
adc
xchg
jns
punpckhdq
mov
xor
mov
cmc
add
mov
push
xor
cld
popa
add
pop
cmp
xchg
bound
incb
rep
pushl
es
dec
mov
add
stos
xor
pushl
mov
jg
daa
std
add
hlt
lret
repnz
cmp
pop
in
or
lea
in
mov
pop
jle
iret
insb
add
push
add
xchg
loope
dec
fisttps
lock
fimull
shl
jp
jnp
sub
shrl
jnp
sbb
add
jp
movb
jae
fistps
call
and
jle
pop
or
add
outsl
lea
mov
mov
ret
jg
jle
lahf
push
out
aas
xchg
add
aaa
inc
mov
pop
test
clc
cmpsb
add
std
lea
jb
bnd
idivl
push
dec
stc
insb
xchg
jae
add
add
sbb
loope
ret
rclb
jge
jb
sbb
addr16
dec
outsb
jge
xchg
jg
mov
jmp
jl
out
shrb
ljmp
lock
inc
pop
jl
adc
mov
and
sbb
decl
je
jl
jg
movl
sti
scas
add
add
adc
rorb
sub
adc
jl
lea
cmp
push
xchg
cld
out
aas
add
dec
jl
push
sarl
pop
cmp
push
stc
add
in
test
mov
sub
es
leave
xlat
mov
dec
rol
mov
jecxz
in
incb
push
test
pop
in
mov
add
add
cld
fidivrs
fstpl
leave
inc
mov
pop
mull
fwait
sar
fldl2t
or
adc
cli
shll
pop
outsb
mov
jne
mov
pop
push
or
ja
add
sbb
mov
mov
mov
pop
add
push
sub
mov
jne
add
push
jo
xchg
pop
add
push
movsl
test
roll
call
cmpsb
stc
jmp
inc
sbb
ret
subl
push
xchg
dec
push
lea
int3
push
push
xchg
cmpsb
jp
adc
leave
pop
sbb
mov
or
push
jl
mov
jg
ja
repz
sar
push
pop
lea
ja
les
add
pushf
cmp
cmp
add
dec
sbb
clc
and
imul
jo
dec
xchg
inc
inc
pusha
xchg
insl
out
dec
xchg
add
je
cmp
dec
add
je
push
sub
mov
dec
jb
add
mov
lods
cmp
jmp
push
into
jp
or
je
add
adc
insb
add
add
orb
fadds
xchg
sbb
jmp
lea
add
add
js
jns
xchg
imul
jmp
test
jl
or
sbb
push
adc
pop
add
add
in
faddl
jmp
or
add
lret
jl
out
and
into
add
add
sub
and
stc
out
fidivrl
or
add
js
sahf
loope
ret
mul
xlat
xchg
mov
hlt
insb
sub
mov
jl
push
jp
bnd
push
or
dec
nop
or
jl
out
ss
call
add
sti
xchg
adc
loop
out
xchg
add
popa
sti
mov
push
add
test
mov
lcall
mov
add
ljmp
or
mov
jne
and
or
pop
mov
xchg
movsb
xchg
movsb
std
jne
mov
add
mov
out
add
xor
jmp
add
loopne
mov
ljmp
call
in
mov
jmp
jbe
clc
data16
dec
sbb
cmc
aad
adc
ret
push
dec
testb
mov
call
jl
jl
pop
cmc
inc
mov
lcall
into
inc
cmp
or
mov
mov
add
bound
sub
push
push
outsb
push
mov
adc
sbb
add
shll
icebp
or
and
dec
bound
andb
pushl
jmp
push
and
xchg
push
test
pop
outsl
enter
and
or
dec
sub
add
mov
jp
add
jmp
push
lock
repnz
sub
aas
and
add
stc
ljmp
add
jne
aas
add
mov
xchg
mov
stc
jmp
mov
jl
lret
lock
mov
jmp
cli
stos
ja
xchg
mov
xchg
inc
cmp
mov
add
addr16
aam
or
icebp
cmp
sub
xchg
fsubl
push
sti
je
xorb
insb
jbe
add
add
jecxz
push
std
push
fs
push
shrl
cld
fwait
ljmp
dec
xor
xor
push
cmp
xchg
dec
stc
add
inc
addb
jbe
jle
adc
sub
clc
pop
iret
lds
in
dec
jge
jmp
rolb
ret
inc
inc
push
jecxz
jbe
add
add
add
add
cmc
jmp
je
in
outsl
in
mov
sbb
cmp
subl
outsl
push
mov
inc
in
push
push
cmc
sbb
imull
popf
in
jge
aad
push
idiv
cmp
mov
inc
roll
idiv
add
cmp
add
idivb
in
cmp
push
push
push
push
call
add
add
popa
stc
pop
cwtl
dec
pusha
call
aam
pusha
call
int3
es
lret
lea
push
arpl
push
pop
jle
push
sahf
rcrb
and
add
fxch
rol
and
jge
sti
cmp
sbb
jnp
int3
cmp
or
add
add
jp
ficomps
das
pop
jo
add
loop
outsl
adc
mov
sbb
pop
or
push
pushf
leave
hlt
adc
dec
pop
xchg
mov
cmc
add
int
nop
in
addl
neg
je
pop
jp
xor
jae
adc
fs
mov
jge
jle
js
imul
pop
add
stc
fs
jae
addl
and
or
mov
ret
daa
and
sub
xor
jmp
adc
mov
mov
stc
imul
dec
out
fistps
jae
jbe
jge
cmc
pop
ds
dec
adc
xor
das
push
pop
ret
stos
dec
je
inc
pusha
push
pop
dec
xchg
jns
in
dec
addl
aam
or
add
add
sub
scas
icebp
add
dec
jns
or
call
inc
jmp
cmp
ret
sub
jne
xchg
ret
sti
scas
jg
rcrl
mov
add
jne
sti
push
inc
or
adc
xchg
inc
xchg
out
add
cmpsb
imulb
add
add
add
add
outsb
mov
mov
loop
adc
sti
mov
adc
jmp
std
adc
mov
or
sbb
jmp
add
and
loop
adc
xchg
sar
and
xchg
je
add
cmp
add
aad
mov
cmc
add
dec
and
mov
mov
add
jg
mov
lahf
cld
mov
imul
push
test
das
push
inc
push
mov
pop
lret
pop
add
std
mov
cld
cmp
dec
dec
cmp
push
pop
int
ror
add
ret
pop
sub
rorb
lods
cmp
add
rcrb
imul
inc
sar
add
shll
add
pop
cmc
lcall
xlat
in
jge
cmpsl
jp
jl
outsb
inc
add
aad
cmp
jmp
imul
addb
lds
notl
cmp
mov
xlat
in
mov
outsb
pop
loopne
mov
enter
mov
outsb
add
loope
and
subl
jmp
and
call
cmpsl
cmp
jmp
js
inc
mov
aad
stc
add
dec
sub
mov
cmc
add
mov
mov
ljmp
mov
and
jmp
push
or
ljmp
mov
paddd
repz
jmp
stc
or
addr16
cmp
add
add
dec
xchg
pop
js
cld
pop
clc
das
sub
jecxz
mov
sbb
ret
add
out
loopne
fisubs
testl
add
or
xor
push
pushl
insl
std
ss
cmc
cmc
fmuls
inc
leave
movsb
testb
bound
add
xor
pop
lds
jge
inc
ret
add
jns
xor
inc
push
mov
icebp
fsubr
xchg
fdivr
push
mov
pop
call
repnz
add
int3
or
cmp
les
addr16
cmp
mov
sbb
gs
jmp
mov
add
dec
dec
sar
xchg
xchg
pushf
sub
pop
pop
mov
add
push
inc
mov
inc
mov
or
pusha
pop
mov
outsl
addr16
ffree
iret
fcmovb
or
outsl
pop
and
orl
jmp
std
adc
lcall
and
pop
movsb
sbb
dec
mov
jl
test
popa
iret
or
and
and
bound
pop
add
add
mov
stos
out
xchg
popa
mov
inc
jnp
loop
dec
js
add
ja
in
or
adc
test
arpl
push
imul
dec
cmp
jmp
test
add
lock
push
insb
cmc
mov
out
mov
pop
fsubrl
stc
rol
pusha
jg
pop
xchg
push
imul
add
add
xor
pushf
orb
and
dec
xorl
xchg
outsb
cld
push
dec
leave
call
shl
sub
js
in
xchg
cli
mov
rorl
cmpsb
sti
sti
and
dec
mov
sbb
stc
call
push
add
arpl
call
add
sbb
sti
pop
addb
nop
jne
add
add
insl
jmp
gs
xor
test
dec
stc
jne
out
clc
push
dec
stc
jb
sub
add
and
decl
cmpsb
das
sarb
cld
ljmp
call
xor
out
inc
and
loope
pushf
lret
ss
mov
jne
incl
add
mov
loopne
enter
push
dec
add
std
cmp
or
in
in
mov
ss
xor
int
xor
sbb
and
lock
pushl
ljmp
xor
fiadds
xchg
xchg
push
xor
adc
push
adc
cmp
inc
dec
xlat
dec
call
mov
add
lock
sar
inc
js
inc
dec
outsl
inc
pop
js
int
jp
pop
cmpl
out
jmp
cld
loop
std
cmp
adc
fldl
pop
dec
sub
mov
add
cmp
add
loop
fsubrs
ficompl
mov
stc
cmp
loope
dec
stc
fs
mov
sti
jne
add
add
adc
inc
jle
out
test
mov
push
stc
inc
icebp
sub
jmp
ret
lock
dec
imulb
jnp
lret
out
sahf
lretw
push
xchg
add
js
movl
stc
add
cmc
pop
xor
push
jle
psubw
inc
inc
stc
pushf
jp
jl
pop
dec
add
inc
mov
aad
call
jmp
xchg
testb
int
mov
or
test
sub
push
ss
call
hlt
dec
cmovno
sub
and
dec
in
sub
and
leave
xchg
sar
sar
cld
jmp
cmp
and
in
adc
lods
cmp
adc
jmp
cmp
pop
sub
fcompl
xchg
push
test
or
hlt
add
imul
je
cmc
std
je
repz
xor
in
idiv
xor
movsl
aad
setae
mov
mov
or
rcr
add
fsubrl
jge
leave
adc
repnz
push
fst
test
fucom
mov
cli
add
stc
mov
aas
scas
lock
push
decl
mov
gs
jne
out
aas
hlt
dec
std
push
pushl
std
adc
dec
fildl
xchg
dec
add
cli
imul
add
pusha
aam
je
fstpt
shlb
or
xor
jmp
or
add
push
shrl
dec
push
add
xchg
lret
add
fwait
incl
add
adc
sbbl
arpl
leave
loopne
loope
dec
sub
std
pop
pushf
pusha
adc
insb
sar
fildl
xchg
jo
mov
call
dec
and
insl
mov
jnp
jmp
dec
or
jmp
leave
pop
or
add
movsl
pop
or
add
push
stc
add
add
cmp
mov
dec
sub
xchg
test
ret
or
bound
enter
xor
pop
pop
add
add
idivb
cmpl
adc
add
stos
mov
pop
sub
mov
stc
add
ja
jmp
insl
or
adc
push
pop
ret
stos
add
add
test
jno
dec
push
mov
fstp
mov
sub
cld
jb
std
adc
xchg
lret
iretw
adc
lods
dec
mov
lret
pop
push
jp
ficomps
cli
cs
daa
stc
hlt
or
push
and
pop
arpl
enter
push
adc
sarl
add
dec
call
lds
mov
cmp
fisubs
mov
outsl
sbb
sahf
idiv
and
je
mov
jecxz
ds
daa
ss
lds
ret
notb
dec
and
inc
ss
or
push
add
lcall
add
ss
mov
mov
add
mov
js
pop
adcl
push
xchg
xor
push
add
add
dec
in
inc
lods
push
mov
cmp
pop
cld
loope
cmp
mov
inc
mov
add
sbb
push
xlat
ret
aam
ja
jns
sub
pop
xor
aam
sbb
mov
andb
and
pop
cld
jle
cld
fisubl
popa
rorb
aam
inc
lea
call
xchg
or
mov
add
daa
dec
sar
xchg
or
xchg
push
push
mov
cmp
xchg
sar
int3
sbb
test
or
cmp
pusha
or
jmp
inc
shll
in
clc
inc
dec
pop
lods
ret
mov
cmp
arpl
std
aas
pop
mov
push
mov
jmp
mov
iret
add
add
dec
stc
jmp
pop
lahf
pusha
popf
or
pop
stc
js
insb
inc
mov
mov
cli
clc
xor
stos
add
incl
mov
stc
xor
jmp
mov
stc
stc
add
loop
loop
jno
call
in
data16
or
cld
mov
test
dec
lret
aas
sub
pop
fdivs
adcb
clc
jmp
jb
loope
mov
mov
lds
call
xor
lods
in
xor
add
int
hlt
jmp
dec
jmpw
fcomps
pop
pop
add
sbb
pop
dec
and
out
stc
or
pusha
cld
jmp
aas
jl
add
addr16
out
add
in
mov
aas
cmp
lea
jmp
mov
xchg
outsl
inc
lods
ss
adc
repz
test
cmc
add
adc
test
orb
out
shll
hlt
mov
add
jb
adc
mov
push
mov
stos
std
jne
mov
adc
sti
add
add
add
std
jne
jno
lock
fcmovne
jmp
cmp
rorb
add
ljmp
xchg
shr
mov
pop
sar
adc
test
cmp
add
add
aas
push
inc
stos
lock
lea
inc
test
dec
popf
out
mov
lods
jmp
adc
inc
sar
psrlq
add
adc
jg
or
jb
rcr
testb
push
movsl
push
mov
jg
jae
dec
test
stc
sub
sti
call
pop
jmp
gs
into
lcall
xor
dec
out
push
inc
or
cmp
jmp
leave
pushf
push
out
or
jmp
ja
pop
jae
add
ljmp
jecxz
pop
add
add
ret
push
cmp
add
outsb
push
cli
jno
decl
add
shll
lods
pop
les
loopne
lcall
sub
cmp
lcall
rcrl
shl
jae
loope
in
cmc
sar
jmp
dec
pop
jne
sti
fdivrl
or
stos
cmc
mov
add
pop
test
mov
mov
xchg
or
pop
adc
call
js
inc
jmp
xor
cli
pop
lock
int3
sti
movsl
out
test
push
stc
add
cmpl
push
call
sti
add
pushl
xchg
std
jne
mov
cld
add
ljmp
add
add
ret
sbb
xor
mov
jle
mov
sahf
fs
xor
mov
push
cmp
lea
std
lcall
scas
inc
add
pop
xorl
outsl
pop
cmp
mov
add
mov
stc
cmpb
outsl
inc
mov
popa
pushl
pushl
andb
std
lcall
mov
decl
sub
add
push
ss
cld
lock
push
adc
enter
call
rcrb
inc
add
xchg
vsqrtsd
pop
std
dec
push
sbb
std
in
add
dec
push
inc
cmc
jg
jnp
mov
pop
data16
repnz
inc
dec
sub
ret
cmpsb
push
push
movsl
jae
add
dec
call
add
cmp
mov
ret
sub
pop
jle
pop
or
xchg
nop
dec
mov
cmp
notb
test
push
dec
mov
fildl
roll
mov
ret
shlb
jmp
mov
adc
xor
mov
sbb
lcall
cmp
fadd
add
add
mov
add
push
fidivs
pop
orb
and
pop
and
adc
sti
aam
jmp
jmp
or
mov
stos
dec
stc
jne
loope
adc
or
push
idiv
xor
test
xor
call
gs
adc
push
adc
add
add
push
jmp
loope
push
mov
jmp
sub
add
inc
inc
jmp
stos
ffreep
sub
mov
adc
mov
add
and
cld
incl
hlt
push
mov
loopne
psubusb
cld
jg
cld
lds
cld
outsl
sbb
clc
decl
shlb
add
cmp
aaa
add
add
cmp
lds
cli
push
jmp
cmovo
lea
arpl
fsts
jge
add
cld
push
incl
adc
std
lods
cmp
dec
add
das
nop
or
pusha
mov
cld
loop
push
jae
js
adc
xor
dec
and
add
popa
scas
cld
add
add
out
aas
dec
loopne
lcall
out
adc
mov
mov
push
pusha
stos
mov
jno
mov
addr16
sbb
lods
push
loopne
ljmp
pop
or
mov
dec
push
adc
push
sar
es
test
pusha
add
fisubl
ljmp
stc
fucomp
add
add
aam
into
in
subl
mov
loope
adc
cltd
lods
xor
and
std
addr16
roll
jl
cwtl
push
je
add
movsl
icebp
cmp
fs
jnp
outsb
leave
push
adc
pop
out
fcmovne
inc
sti
push
add
into
icebp
push
pop
inc
fadd
rolb
in
sub
imul
add
mov
stc
mov
dec
push
fnstsw
pop
mov
add
lock
mov
xlat
cmp
test
jmp
std
jmp
xchg
inc
stos
sti
aam
out
jmp
push
int
cmc
jge
and
popf
int
aad
call
test
dec
push
push
jb
jp
in
add
cli
push
lea
cmpsl
das
mov
or
sbb
or
dec
js
sbb
and
mov
aaa
lret
cld
add
mov
push
repz
hlt
push
loope
add
imul
inc
jbe
shll
clc
in
nop
clc
jmp
jnp
mov
clc
push
dec
sbb
lcall
lods
adc
cmpsl
je
add
add
cmpsl
pcmpeqb
cmp
test
testl
in
out
add
and
lods
stc
incl
lea
testl
inc
cmpsb
aaa
cmc
cmpsb
testl
cmp
mov
loopne
std
stc
jl
punpckldq
stc
and
add
and
sti
push
mov
adcl
add
ret
push
stc
cmp
test
jne
push
push
fdivrp
cmpsb
pusha
fdivrp
jo
add
andps
or
xor
test
call
xor
add
xchg
sbb
mov
dec
lock
adc
popa
pop
out
add
outsb
pop
and
pop
dec
stc
ss
xchg
mov
add
call
push
fnstsw
and
lret
popa
popa
incb
ror
test
ret
cmp
pop
mov
push
and
ficomps
dec
push
or
xor
sti
xlat
cmp
decl
dec
out
in
dec
jge
fcoms
jmp
stc
inc
out
add
cmp
call
mov
pop
adc
add
xchg
cmp
stos
js
mov
ret
mull
cmp
or
add
jbe
jb
jns
dec
lcall
or
or
cld
inc
mov
jmp
dec
stos
callw
add
dec
dec
jne
push
adc
jb
jp
and
sti
jge
add
sub
sti
jne
icebp
sti
pop
aaa
icebp
push
cld
push
sub
shll
imul
mov
adc
pop
mov
mov
mov
aaa
mov
add
and
in
stos
mov
fidivrs
shrl
jbe
add
cmp
imul
rcrl
xorb
data16
add
jns
ret
sub
pop
xor
add
lds
mov
jnp
cwtl
idivb
add
mov
in
aaa
cmc
add
arpl
add
ljmp
in
std
dec
daa
dec
xchg
sub
ds
dec
mov
xchg
in
stos
sahf
dec
push
call
add
mov
xorb
popl
xchg
fiaddl
shlb
add
fsubl
pop
scas
mov
cmp
icebp
aas
dec
aad
jae
lret
inc
jmp
xchg
imul
push
pusha
mov
pop
mov
add
movsl
arpl
add
dec
je
xor
adc
push
cmp
jg
fcmovbe
sub
cmp
inc
stc
ret
shlb
dec
cmpsl
dec
pop
inc
fadd
test
pop
inc
push
cmp
add
add
mov
cmp
pop
rcl
ret
js
jp
jns
out
pop
xor
inc
jp
sbb
repz
xchg
std
js
or
mov
and
pop
adc
ret
sub
dec
pushf
cld
popl
jl
cmc
ds
call
in
dec
jbe
push
add
roll
xchg
aaa
add
push
push
adc
stc
add
stc
mov
push
bound
mov
xchg
dec
in
dec
stc
add
lds
iret
adc
jmp
stc
push
insb
sbb
fisttpl
cld
aad
addb
movsb
sub
inc
test
mov
addb
mov
call
dec
stc
test
add
add
out
repnz
jmp
adc
dec
and
mov
push
mov
and
push
lods
push
cld
mov
inc
add
cmpsb
mov
fwait
lock
inc
mov
shll
std
adc
jne,pt
add
std
adc
push
rorb
xchg
cmp
test
fwait
mov
xchg
mov
mov
jae
clc
mov
fs
add
ss
push
push
fnop
test
testb
lret
lcall
sbb
repnz
decl
jl
push
call
inc
sub
mov
cmp
mov
inc
repnz
dec
leave
shlb
fisttps
inc
add
jge
scas
das
sar
mov
jae
push
in
push
cwtl
in
in
cld
cmp
aas
dec
and
stc
addb
add
adc
dec
std
pusha
aad
or
dec
mov
adc
pop
lret
or
inc
and
pop
jae
stc
fwait
or
mov
out
or
pop
ja
adc
jns
xor
fs
pop
add
out
loop
cmp
and
lahf
dec
sbb
gs
inc
lds
add
add
xor
dec
jp
and
jmp
in
add
mov
jg
loope
add
je
sub
xchg
test
pop
mov
iret
dec
dec
aad
dec
and
pusha
jle
pop
push
dec
mov
aam
stc
add
xchg
sbb
or
sti
pushf
sbb
jbe
xchg
or
xor
push
xorl
add
dec
push
rcr
add
test
mov
lahf
adc
movaps
pop
and
pop
stos
mov
push
bound
js
fstpl
mov
insb
or
or
dec
addb
js
and
in
cltd
fisttpl
jbe
aam
cld
les
and
rolb
test
imul
add
sbb
or
jae
outsl
adc
ret
ret
movsb
lret
insl
jmp
lea
push
rcll
jl
sbb
shlb
dec
cmp
add
cmp
imul
jne
repz
je
mov
into
xchg
mov
leave
sti
out
orb
je
and
push
or
cli
std
jne
mov
jmp
pop
cltd
sbb
dec
sub
ljmp
push
fadds
sbb
jg
pop
nop
pop
rorl
add
jecxz
push
sub
dec
push
add
jmp
push
rolb
rsqrtps
pop
fnstcw
mov
push
mov
pusha
sub
push
jae
iret
push
add
add
add
imul
imul
jp
jnp
jle
daa
ficoml
add
pop
xchg
enter
mov
pop
iret
dec
je
jb
inc
ljmp
sarl
inc
mov
xor
inc
je
sahf
adc
mov
xor
pop
mov
adc
in
or
inc
je
mov
inc
ljmp
shr
inc
xchg
inc
jecxz
add
add
call
mov
shr
js
cmp
repz
ss
lcall
jl
clc
jmp
cmp
jb
cmp
cmc
imull
mov
js
outsb
or
mov
inc
cmp
ret
sub
jmp
jne
adc
stc
jo
cwtl
repnz
dec
stc
push
ret
dec
lods
sti
cld
hlt
jmp
jmp
cmp
pusha
dec
jo
dec
dec
stc
add
mov
jl
popa
test
fs
lret
out
inc
jmp
xchg
inc
dec
push
dec
mov
cld
bound
rcll
je
aaa
add
dec
test
add
pushf
inc
roll
ds
sti
pushl
adc
stc
add
jno
add
stc
push
js
lds
add
add
add
imul
decl
xchg
adc
out
xchg
mov
adc
adc
jl
add
fld
sti
jmp
mov
cmp
mov
add
mov
mov
mov
mov
adc
add
add
dec
call
push
or
adc
loope
enter
dec
movl
add
inc
or
pop
jmp
push
scas
lcall
xchg
or
sub
add
adc
mov
mov
mov
jns
xor
aam
mov
std
enter
pop
test
pop
rolb
add
add
sbb
lret
call
clc
imul
ljmp
inc
ljmp
in
sbb
into
xor
mov
bound
ds
outsl
idivl
ljmp
inc
outsl
bound
in
cmp
mov
sbbb
dec
stc
add
int
jmp
jl
add
ja
cmpsl
add
popa
out
inc
lret
mov
mov
xor
push
inc
ljmp
stc
push
pop
add
cmpsb
sqrtps
cmove
loop
cmpsb
or
cltd
cli
call
pop
add
or
and
push
inc
orb
add
push
lods
lea
dec
push
lds
add
dec
stc
lea
mov
jmp
call
inc
cld
bound
stc
add
loop
cld
clc
mov
add
cs
std
pop
insb
pushf
cmc
test
out
mov
add
dec
lea
push
add
stc
push
call
std
xor
or
ss
addl
in
xchg
cld
add
pushw
ret
ss
add
cmpsl
push
lea
sub
add
mov
rolb
idiv
add
out
xchg
mov
adc
push
mov
add
cmpsb
sub
mov
test
decl
add
xchg
aaa
sub
daa
jg
push
add
add
sarl
adcb
shlb
dec
cld
add
xchg
outsl
sub
call
fs
sti
push
push
add
adc
addb
jno
fs
pop
mov
dec
test
mov
push
daa
clc
lcall
add
out
cmc
les
add
mov
add
add
jnp
sti
jmp
push
mov
jmp
mov
cmp
movl
pop
iret
js
test
xchg
xchg
cmp
pop
cmpl
jge
ds
aas
imul
in
add
inc
jmp
mov
ds
jp
fnsave
cmp
jmp
ljmp
popf
sldt
add
xlat
inc
cmp
in
ret
cmp
cwtl
push
repz
dec
add
stc
out
xchg
dec
in
out
lea
test
cld
insl
or
or
cmp
mov
push
adc
or
xchg
cmpsb
ds
sbb
ja
sti
std
jo
sti
aam
ljmp
push
shrl
stc
or
cmpsl
out
idivb
dec
dec
cmp
adc
push
cmp
push
jge
push
clc
or
jg
cmp
cmc
cld
movsb
push
push
cmp
jg
pop
lock
ljmp
js
cmp
outsb
in
push
addr16
divw
jmp
cmp
imul
js
jg
jnp
adc
add
jbe
shll
mov
daa
mov
or
mov
cmp
sbb
std
jbe
adc
test
or
orl
or
mov
add
mov
inc
sti
hlt
pop
fdivl
jae
repz
cmp
or
xchg
je
aaa
data16
mov
aaa
std
add
add
and
je
iret
cmp
add
xchg
push
sub
js
aaa
mov
mov
ja
cmp
addr16
cmp
test
dec
ret
rclb
push
mov
sub
push
xorb
dec
inc
sar
add
xor
sub
cmp
xchg
and
ja
pop
jg
mov
ret
add
add
je
mov
iret
call
adc
stc
fs
inc
loop
cmovg
sub
jo
cmp
cmc
ret
cwtl
mov
sub
sub
inc
sbb
push
loopne
jns
adc
stc
jmp
push
cmp
jmp
mov
imul
lahf
outsb
mov
mov
push
cmp
aad
lods
lds
int
add
push
roll
in
stc
lea
cld
push
cld
stos
sti
cld
xor
inc
jmp
adc
js
sahf
stos
lea
cld
out
pushf
cmp
cld
hlt
mov
aaa
sub
cmp
sub
add
cmp
outsl
inc
sub
test
cld
sahf
jle
xchg
jge
xchg
add
add
pusha
fnop
sti
outsb
ja
aam
je
or
cld
push
pop
pushf
jg
call
testb
ja
or
cmc
add
and
jge
mov
jb
add
inc
jae
mov
sarb
roll
call
jae
adcl
add
ja
decb
or
incl
add
mov
add
mov
decl
xchg
leave
and
shll
xor
or
inc
hlt
sbb
mov
add
xor
movsl
and
adc
dec
sar
loop
adc
lock
test
bound
adcl
in
add
cli
xor
cs
jnp
mov
sub
std
cmpsl
fnstsw
std
test
aas
jae
call
sub
jns
sti
mov
mov
mov
mov
cmp
stos
pushl
or
std
pusha
mov
mov
adc
or
and
add
dec
xchg
adc
add
andb
ficoms
movsl
sti
mov
cmp
ffree
or
cmp
pop
push
stos
add
or
add
add
leave
sbb
dec
rsm
add
xor
shrb
cmc
dec
or
pop
jl
das
into
cmp
aam
rcr
ja
cmp
cli
aaa
fnstsw
pop
mov
pop
cmp
pusha
and
add
xchg
shrb
scas
push
iret
sbbl
dec
addb
dec
cmp
xor
testb
add
add
leave
sti
mov
dec
or
inc
in
add
adc
js
dec
lods
add
dec
shrb
add
dec
mov
in
mov
cld
bound
addl
insb
mov
push
aas
leave
sbb
or
push
jb
xor
loope
lret
fwait
xor
jne
add
add
lcall
inc
leave
sti
add
mov
pop
in
push
or
mov
add
int
mov
in
xlat
addb
xchg
clc
add
mov
dec
dec
call
inc
jg
lret
gs
cli
mov
ret
rcll
adc
popa
in
idiv
call
mov
push
std
je
stc
std
adc
push
inc
add
xor
push
inc
add
dec
cli
mov
lcall
push
dec
dec
mov
fisubrl
das
je
push
jnp
cltd
mov
das
shlb
or
sbb
incl
loop
pop
les
cld
jg
repz
mov
and
cwtl
mov
dec
lea
jle
leave
pop
jns
sbb
or
mov
add
fistps
test
mov
cs
cmp
mov
xor
push
mov
or
push
adc
push
push
cmpsl
enter
mov
sti
dec
jnp
cmc
clc
mov
jg
sub
push
leave
loope
or
add
cmp
xor
or
and
sub
xor
pop
pop
cmp
repz
add
mov
cmp
cli
jg
mov
lods
in
pop
and
jle
int3
mov
jg
pop
dec
cli
mov
pop
add
push
lea
jle
int3
repnz
daa
into
or
mov
aas
stc
xor
stos
leave
cmp
cli
jg
pop
pop
mov
sub
jmp
mov
mov
sti
fsubp
push
cld
mov
xchg
clc
jmp
pop
fildl
pop
xlat
lea
leave
jmpw
or
jbe
fdivrl
xor
in
fwait
cmp
fsubl
adc
dec
stc
sti
mov
ds
mov
add
mov
bswap
push
fcomps
test
jecxz
je
dec
xor
mov
sbb
dec
stc
sti
mov
push
xor
bound
roll
lods
inc
add
xor
xor
std
jne
addl
fimuls
repnz
jmp
outsl
lock
cmp
add
testb
mov
scas
outsl
cld
lahf
imul
push
jnp
cld
sti
push
mov
hlt
dec
mov
add
fildll
fadds
add
or
mov
popf
or
add
call
add
in
rolb
xor
push
lea
hlt
cld
inc
inc
mov
adc
and
adcb
sbb
dec
in
push
mov
mov
cmp
out
cmc
jl
js
and
mov
xchg
lret
add
push
clc
inc
js
and
bound
jb
mov
jb
nop
call
je
and
mov
daa
sub
inc
stc
stos
dec
dec
out
dec
stc
pop
enter
bswap
lods
in
aas
mov
lcall
push
or
sub
rol
mov
rorl
xchg
cs
jbe
jp
xor
cli
xlat
add
das
add
add
and
jp
mov
push
popf
leave
inc
pop
test
inc
mov
mov
jne
ret
or
out
je
ret
jb
push
stc
add
inc
inc
jmp
into
sbb
jo
dec
mov
jbe
lds
les
mov
js
add
arpl
push
and
aad
clc
cmpl
cmp
push
add
jg
and
push
mov
or
add
pop
addb
clc
jmp
ja
or
es
sub
outsl
push
inc
stos
adc
sub
andb
cmp
cmpsb
cli
add
add
add
or
add
imul
inc
stc
or
add
mov
add
out
std
add
cmc
shll
add
jbe
add
cli
mov
mov
add
ss
add
sub
jo
scas
jno
xor
add
or
sub
add
add
add
movb
mov
inc
pop
stos
mov
inc
push
fwait
mov
inc
imul
inc
pop
fwait
mov
inc
push
xchg
inc
jae
outsl
inc
add
and
jae
adc
jae
xchg
outsl
and
je
xchg
ret
pop
out
mov
sub
inc
cmp
and
orb
in
lahf
xchg
mov
lahf
movaps
push
inc
daa
std
les
orb
stc
hlt
mov
add
dec
stc
imul
or
scas
std
testl
push
mov
cmp
shll
xor
mov
fiadds
cmp
or
jnp
out
add
adc
scas
icebp
jle
mov
xlat
inc
sub
add
jmp
ss
jmp
sbb
mov
orb
xor
mov
repz
clc
jmp
bound
sbb
loope
and
test
call
lds
dec
stc
jg
mov
xchg
rcrb
or
incb
mov
and
xlat
ss
add
add
xor
adc
dec
lahf
add
inc
sub
cmpsb
iret
cmp
ja
in
bound
and
jl
sub
test
dec
stc
sti
fdivrl
adc
or
cld
dec
iret
cmp
bound
add
imulb
std
ja
mov
out
outsb
std
pushl
mov
test
hlt
add
sub
fisttpll
dec
scas
outsl
hlt
xor
cmp
add
sub
add
pop
push
psraw
pushl
dec
add
mov
add
or
add
std
sti
jmp
call
push
add
testb
cs
add
adc
push
dec
popf
sub
dec
and
mov
pop
xchg
sbb
add
add
cmpb
stos
sub
int3
cmp
mov
xchg
aaa
mov
jae
std
test
sbb
popf
and
xchg
sbb
popf
adc
add
inc
test
ja
int3
aaa
stc
dec
ret
dec
pusha
xor
pop
add
dec
adc
mov
ja
inc
jb
sbb
mov
add
inc
mov
int3
stc
mov
or
jl
jne
pop
adcb
test
sub
insb
fsubrs
ljmp
jb
pop
ret
adc
stc
fs
cmp
je
jl
insb
rcll
pop
xor
sub
orb
adc
stc
fs
cld
outsb
sarb
bound
fld
add
add
and
mov
stc
loop
cmp
jmp
sub
dec
mov
cltd
and
stc
add
test
bound
inc
push
dec
inc
add
cmc
or
daa
cld
ss
mov
add
pushf
and
test
movsl
cmpsl
sti
push
and
jl
out
pop
add
dec
jb
roll
add
mov
adc
bound
out
add
repz
jne
ja
add
imul
mov
jb
xchg
push
hlt
add
jecxz
dec
int
pop
scas
outsb
mov
lods
ds
dec
jg
mov
nop
push
std
ljmp
fmull
cs
mov
mov
mov
add
add
es
xchg
add
jmp
jne
mov
ret
sbb
push
xor
and
ljmp
mov
and
mov
adc
ret
outsl
mov
xchg
and
pop
aam
xor
dec
dec
mov
adcl
lret
mov
add
add
mov
lcall
mov
out
push
std
push
call
cld
adc
ret
call
mov
jae
jecxz
nop
push
dec
adc
cmp
str
mov
cld
loop
sub
xor
push
sbb
test
inc
mov
pushf
jo
xchg
add
and
ss
mov
insl
int
stc
jmp
adc
in
add
jmp
pop
jl
jmp
sub
mov
adc
leave
cwtl
leave
outsb
push
xchg
mov
sbb
push
or
xchg
stc
jmp
xchg
push
jo
xorl
pop
or
jns
add
lods
out
ja
imul
lods
add
sub
call
push
stc
out
mov
mov
in
mov
test
stc
add
out
xchg
pop
inc
jmp
sub
jb
push
out
cld
ss
fbstp
sti
push
leave
inc
xchg
xlat
cmp
mov
add
xchg
imul
xchg
cs
jp
pop
jge
call
dec
push
add
adc
std
stc
mov
call
mov
fmuls
add
inc
shll
pop
hlt
int
call
mov
in
mov
push
test
testl
pop
cmp
cmp
std
add
cmp
push
cmpb
or
add
jp
mov
add
jbe
std
jmp
jp
je
xor
imull
int
xor
jbe
xchg
lret
sbb
xchg
xchg
cmp
jo
mov
jmp
sub
add
aam
std
bound
dec
lods
lret
pop
push
xchg
fcmovb
ret
dec
adc
add
xchg
mov
out
iret
xchg
cmp
push
cmp
pop
cmp
or
xchg
stos
shl
xchg
pop
aam
adc
push
pminsw
push
adc
inc
loopne
adc
outsb
sub
push
mov
add
and
sub
add
sahf
loope
mov
and
inc
jnp
push
sub
iret
mov
pushf
and
jae
imul
push
and
pop
out
rcrl
repnz
mov
jo
xor
movsl
sbb
jae
daa
sahf
adc
test
pop
mov
mov
add
and
ljmp
lret
imul
add
or
sub
shlb
ror
dec
stc
push
jb
mov
add
daa
add
stc
les
test
cld
xchg
daa
dec
movaps
mov
enter
fstpt
out
idivb
inc
stos
das
adc
adc
mov
call
inc
push
jo
fbstp
das
add
add
pop
test
cltd
xchg
mov
lock
out
xorl
mov
repz
jnp
push
inc
jbe
inc
inc
jmp
or
add
hlt
add
es
icebp
push
ss
push
lea
cld
std
mov
andl
mov
fsubs
je
fsubrl
fsubr
enter
push
or
loope
add
popl
add
imulb
or
cld
std
call
mov
mov
and
pop
call
dec
fwait
inc
push
mov
sub
cwtl
stos
ret
jmp
sub
or
orb
xchg
jae
std
rcll
inc
sarb
shl
xlat
aaa
loop
cld
inc
cmpl
add
add
sub
push
ret
cli
or
clc
pop
mov
jg
pop
dec
dec
adc
or
sub
sbb
aad
fcompl
cmp
sub
std
fbstp
in
fisttps
movsl
in
roll
adc
push
dec
adc
push
dec
adc
push
xorb
or
icebp
mov
add
and
cmp
cwtl
jno
sub
es
in
push
pop
cmpsl
xchg
cli
sbb
sbb
mov
dec
stc
xor
into
scas
jno
or
call
cmp
cwtl
stos
sbb
jo
sbb
inc
ljmp
adc
push
push
mov
inc
and
push
test
bound
add
xor
adc
sub
clc
jg
push
sbb
bound
outsb
or
test
cld
jb
add
fdivs
jbe
push
js
sbb
outsl
inc
enter
in
mov
scas
clc
fld
mov
dec
andl
stc
add
scas
loop
out
push
jb
sbb
pop
or
add
add
add
mov
xor
test
mull
cmp
in
dec
lcall
xor
decl
sub
pusha
pushl
out
inc
call
imul
nop
add
data16
push
inc
loop
cld
dec
mov
adc
jbe
add
jmp
decb
mov
xchg
mov
std
jbe
mov
add
testl
adc
out
jg
mov
incb
dec
xchg
and
shlb
sbb
pop
mov
daa
fdivl
add
std
les
cmp
movsb
mov
arpl
sbb
inc
mov
xor
dec
mov
adc
mov
or
sbb
int3
push
add
add
add
loop
add
add
jae
movsl
xchg
pop
mov
mov
std
aam
aaa
dec
rorb
or
jp
sub
orl
add
out
data16
fcomp
xchg
mov
adcl
pop
jns
sti
shll
inc
and
sub
jns
adc
and
adc
repnz
sub
add
add
dec
outsb
cmpsl
jmp
mov
add
cmp
testb
in
jmp
pushl
mov
roll
fdivs
int
repz
lcall
or
adc
ljmp
mov
mov
inc
addl
dec
fbstp
and
push
inc
dec
jns
add
fdivs
stos
mov
loopne
lods
jns
or
add
dec
push
xchg
push
stc
add
into
jge
stc
xchg
ret
mov
push
mulb
inc
stc
int
lock
dec
stc
jg
daa
stc
mov
pop
pusha
in
fcomp
or
data16
inc
jmp
adc
add
xor
cmpl
dec
incl
pushl
add
add
inc
movb
fdivl
cmp
sbb
pushf
sbb
aas
sub
or
in
cmp
pop
push
push
inc
or
adc
sti
std
jae
addb
sti
call
mov
std
pminsw
cmp
addb
dec
std
adc
mov
or
stos
dec
std
jmp
dec
push
icebp
push
add
std
decl
push
jno
xchg
push
loopne
addl
xor
std
xchg
stos
adc
out
test
out
insl
and
add
jnp
imull
out
lret
inc
jg
inc
jae
test
push
inc
xchg
mov
lret
std
cli
ldmxcsr
iret
lods
mov
cmp
std
add
add
sarl
dec
aas
cld
imul
aas
or
stc
jmp
mov
sahf
push
mov
and
jnp
jl
addb
ljmp
adc
fsts
push
lods
sbb
mov
mov
dec
ds
jl
dec
jp
sbb
movsl
sbb
hlt
addb
add
aad
mov
cmpsl
fcmovne
nop
in
cld
push
xchg
sub
adc
adc
cmp
into
ret
loope
pop
mov
jg
and
fs
adc
sbb
dec
test
mov
outsl
in
dec
aaa
cwtl
leave
xchg
addb
into
xchg
add
dec
jns
int3
dec
js
call
dec
jns
sbb
call
add
add
stc
add
in
xchg
cltd
xor
imul
pop
repz
xchg
dec
stc
add
leave
jne
cltd
push
call
cmp
or
adc
sub
stc
call
add
mov
aas
adc
jnp
add
clc
mov
jns
shrl
repz
add
cmp
push
push
fidivrs
jns
aas
clc
jae
je
jae
or
add
sahf
add
cmp
xchg
fmuls
or
mov
jns
adc
in
mov
xchg
outsl
sbb
ss
out
addr16
push
mov
mov
dec
pop
xchg
out
int3
daa
add
cmp
fiaddl
push
ret
dec
aaa
cmp
jne
xchg
push
fimull
std
pushf
xchg
xchg
negl
loopne
orl
test
jo
stos
jge
imul
add
dec
repnz
ret
cld
adc
sbb
cwtl
mov
pop
icebp
inc
aaa
ret
mov
ja
mov
add
add
sbb
xorl
aaa
mov
xlat
rcrb
dec
cmp
and
adc
xor
cmp
rolb
stc
push
jo
adc
add
sub
cmp
xchg
add
dec
stc
jmp
lret
fdivl
jle
gs
jge
add
imul
hlt
pop
mov
mov
or
mov
adc
cmp
dec
dec
movsl
sbb
jle
cs
lahf
xor
jmp
sti
test
cli
ja
rcl
cmp
pushf
clc
jmp
mov
and
cmp
mov
push
xchg
push
fsts
sub
mov
insb
push
pop
push
sbb
adc
add
add
xchg
clc
jg
adc
push
std
push
adc
inc
xchg
or
ljmp
or
mov
add
in
adc
inc
push
mov
push
mov
xorl
mov
mov
bnd
inc
outsl
hlt
jns
mov
test
jo
dec
jb
add
add
call
cs
sti
push
jp
push
jge
sub
test
std
add
in
mov
out
setns
push
xchg
repz
and
addl
add
mov
add
jecxz
add
inc
hlt
js
clc
repz
dec
out
mov
out
std
add
jnp
and
andl
testl
sbb
jae
or
sti
xor
rcrb
and
jns
and
lcall
or
mov
add
xorb
or
addr16
and
xor
xchg
inc
or
dec
jmp
or
and
dec
and
inc
xchg
fadd
je
add
pop
stc
out
pushf
gs
add
add
jmp
popf
jnp
jno
inc
je
std
int3
push
ljmp
call
repz
dec
sub
mov
inc
dec
push
cmp
mov
in
cmc
pusha
stc
pop
lds
clc
addr16
addr16
pop
test
mov
push
cmp
dec
aaa
out
fsubl
rol
fdivrs
call
mov
sbb
push
or
add
enter
ss
mov
dec
lods
iret
mov
xor
bound
jnp
pop
rclb
push
movsb
jmp
mov
or
lods
inc
jp
jne
movsb
xchg
inc
je
jmp
rclb
mov
addb
fsubrp
lea
xlat
or
sbb
adc
inc
call
call
xor
add
ss
ret
clc
andl
cmpsb
mov
sub
jp
or
cmpsl
das
add
mov
lea
in
cmp
cmp
adc
xchg
add
cmp
mov
and
jne
and
push
jns
push
dec
test
rorb
sahf
sti
pushl
pushl
lods
dec
or
inc
in
add
add
std
test
push
orb
or
pop
mov
push
hlt
jge
or
xor
cmp
push
adc
testl
push
jmp
idivl
inc
push
test
dec
imul
and
cmp
xchg
cmp
mov
pop
and
int3
loope
aaa
or
xchg
dec
add
add
jmp
or
pop
jne
lods
mov
ljmp
lahf
pop
dec
sub
clc
dec
movsb
aam
mov
bnd
pop
repnz
cwtl
cmp
mov
insb
or
je
jae
mov
sbb
pop
sbb
es
lods
pop
dec
xor
repz
sub
dec
or
mov
roll
add
xlat
mov
fwait
mov
ljmp
jle
jg
test
or
add
pusha
lahf
jmp
add
sbb
pop
or
or
fstps
lea
call
add
dec
cmp
add
sub
lret
xchg
or
jle
clc
xlat
stos
loope
mov
adc
jbe
negl
add
or
add
or
test
std
jb
pop
dec
add
arpl
test
mov
in
jmp
cld
gs
and
mov
mov
enter
push
imulb
adc
cmc
add
les
inc
jmp
dec
loopne
lds
cmp
cmc
outsl
push
mov
add
dec
push
push
add
pop
jp
jge
roll
jb
xor
adc
pop
sub
pop
leave
je
add
in
std
jbe
in
imul
jbe
in
imul
jbe
in
imul
jbe
in
imul
jbe
in
imul
jbe
in
imul
jbe
jns
je
add
inc
pushl
call
js
cmp
lcall
adc
call
loope
add
adc
pushl
arpl
decl
stos
mov
pushf
add
ja
je
out
arpl
hlt
and
sbb
enter
cmp
xchg
cld
mov
ja
int3
mov
mov
or
add
outsl
stos
cld
call
add
cs
fcoms
add
adc
xor
add
enter
aaa
jg
cld
inc
mov
inc
jbe
add
mov
jg
add
jp
shlb
stc
xchg
pop
jne
fwait
lret
xchg
hlt
int3
outsl
jmp
lcall
sbb
inc
fstpl
ret
add
add
ret
int3
xchg
call
sti
stc
imul
inc
fimull
iret
test
lds
repnz
mov
stc
imul
jge
mov
mov
fwait
jl
sub
lea
loopne
push
aad
cmp
mov
or
clc
push
cld
jmp
add
add
mov
add
addr16
or
fs
push
jo
mov
push
das
addr16
cmp
push
dec
stc
xchg
in
cli
push
mov
rcr
mov
mov
add
sub
popfw
add
dec
pop
addr16
dec
lea
dec
lea
dec
sub
pop
addr16
lea
add
mov
andl
fldcw
and
adc
xchg
push
lea
rorl
dec
sti
call
mov
rorb
add
xchg
std
push
sbb
jo
idiv
push
call
sub
jb
cmp
mov
sub
sbb
fcoml
mov
add
cmpl
xor
cmpsl
xchg
push
push
dec
movl
adc
adc
and
add
dec
add
and
dec
add
dec
out
push
call
adc
jae
call
imul
sbb
add
adc
adc
inc
imul
jnp
incl
cld
add
add
mov
jae
es
pop
adc
rcrb
pusha
ret
pushl
inc
call
std
ret
cmp
call
cmp
xorb
in
jbe
call
and
movsb
aas
xor
pop
dec
sub
cmp
out
and
ljmp
cltd
jo
jnp
add
add
idivb
jle
pop
lds
outsb
dec
imul
or
shl
cmp
cli
add
pop
dec
xor
sub
adc
dec
sub
stos
cmp
xchg
in
loope
ficoms
add
insb
test
push
je
fnsave
cmp
add
shll
jbe
and
cmpsb
xchg
add
add
cld
das
ret
or
pop
adc
push
test
fisttpl
mov
outsb
inc
gs
call
bound
dec
dec
aam
add
insl
lea
lcall
add
bound
aaa
sub
cld
mov
jae
sti
add
add
shl
ret
ret
add
add
ljmp
mov
loop
lret
gs
xor
pop
out
inc
xorl
jmp
mov
or
adc
pushl
jae
sarb
add
mov
inc
add
mov
mov
repnz
add
cmp
add
add
hlt
add
dec
test
enter
xchg
icebp
idiv
orl
movl
roll
cmp
xacquire
add
pop
inc
movl
sub
push
sub
das
std
cmovae
lea
out
call
addb
dec
out
pop
aam
push
ret
xchg
add
pop
dec
push
xor
and
xchg
cltd
adc
jae
push
jg
aas
or
jno
clc
push
or
cmp
add
mov
ja
addr16
decb
sub
jb
adc
add
pusha
cli
sbb
aas
test
mov
aaa
jecxz
adc
test
jae
lret
int3
pop
push
sbb
add
sub
mov
pop
shll
sub
dec
pop
call
orl
lahf
imul
sti
mov
or
mov
loope
jne,pt
sbb
xor
jae
out
imul
push
std
sti
push
f2xm1
call
idivb
cld
sti
out
fld1
and
add
add
cld
sti
push
pop
cmpsl
call
scas
dec
sti
mov
jb
xchg
sti
jno
stc
add
and
enter
in
xchg
mov
mov
bound
cld
jae
movsb
out
bound
cld
mov
dec
stc
add
lcall
jns
jb
std
test
inc
adc
sub
inc
andl
cmp
xchg
inc
in
call
sar
cld
mov
mov
cmpsl
mov
mov
cmc
add
stos
jno
js
add
orl
or
test
idiv
dec
jne
mov
std
jne
cmpsb
call
and
sub
inc
out
adc
mov
add
push
cmp
or
aam
xlat
inc
add
dec
pop
pop
add
add
test
dec
adc
inc
popf
mov
jo
notl
or
pusha
xchg
andl
rclb
sbb
pop
inc
adc
xchg
les
ret
dec
mov
idiv
jg
rorl
sub
add
mov
lock
nop
push
testl
pop
jb
dec
add
add
push
call
orl
jmp
cld
mov
shl
dec
js
cli
pop
jne
add
mov
pop
addr16
dec
fisttps
int3
lcall
aas
mov
jmp
push
inc
inc
sub
int3
nop
fistps
lods
in
push
stos
ret
mov
add
in
gs
cli
jmp
stc
jmp
psubw
mov
push
xor
stc
cmp
outsb
addb
imul
lds
cmc
add
dec
outsb
xchg
inc
add
inc
or
cmp
adc
push
outsb
xchg
adc
std
je
scas
js
movb
add
xchg
mov
sarl
incl
leave
jne
sar
add
xchg
enter
idiv
lea
cld
cmpsb
hlt
mov
sahf
out
rcrl
cld
sti
add
testl
call
cmp
jo
add
cli
mov
std
call
mov
add
fldt
add
add
xchg
add
jbe
push
push
jb
in
outsb
dec
hlt
in
push
in
repz
add
inc
dec
mov
dec
or
pushl
jp
rsm
test
repz
mov
push
call
push
lea
idiv
mov
adc
dec
pop
inc
cld
int3
mov
or
imul
std
mov
pop
xor
add
test
pop
dec
loop
mov
push
inc
dec
push
inc
clc
pop
jg
incl
dec
repz
jo
bnd
pop
lret
orb
jb
int3
test
mov
notl
les
ljmp
pop
std
mov
dec
icebp
cld
mov
mov
std
jb
jae
jmp
jp
repnz
add
dec
clc
adc
fisttpl
sub
int
jge
mov
imull
mov
out
in
adcl
inc
dec
cli
xchg
dec
sbb
add
push
outsb
psubw
adc
stos
add
mov
jmp
jne
jp
add
jno
negb
xlat
inc
dec
test
jle
stc
jmp
jg
mov
negl
int
cmp
lock
add
cli
cmc
push
pop
js
jg
fcmovu
test
loop
push
arpl
ficomps
mov
shll
adc
hlt
jne
mov
push
inc
lods
inc
cld
dec
into
mov
pushf
sub
dec
ss
xlat
mov
hlt
jne
jae
cld
push
cmc
jne
add
add
pop
push
inc
loope
xchg
dec
loope
std
inc
cmc
pop
xchg
xchg
mov
jg
inc
dec
push
ss
shrb
pop
cmp
cld
jle
add
rolb
pmullw
and
or
pop
aaa
or
insl
aaa
or
add
roll
aaa
adc
add
cwtl
xchg
lret
in
xchg
add
push
push
test
push
pop
pop
add
les
subb
cmp
jmp
pusha
xor
stos
imul
pop
xor
les
daa
test
jl
mov
lea
cmc
push
div
dec
incl
push
xchg
enter
aad
lock
mov
dec
call
aam
push
std
add
add
mov
mov
lds
sbb
scas
enter
adc
xchg
enter
or
loop
cmp
mov
pop
xchg
sbb
mov
mov
movsl
sahf
push
call
mov
cmpb
inc
fsub
dec
jmp
jo
push
ret
cli
jmp
jge
outsl
jo
xchg
cwtl
pop
call
fdiv
fs
inc
jge
add
adc
mov
jmp
push
and
loopne
add
lods
xlat
int
ljmp
jne
add
dec
add
addr16
addb
dec
add
fyl2xp1
jmp
ret
add
add
add
stc
add
loope
not
js
call
mov
dec
push
shll
aaa
fldcw
test
stc
add
jmp
call
sbb
pop
push
loope
pusha
dec
stc
mov
ja
fmulp
cmp
call
dec
pop
and
clc
mov
mov
ss
cltd
repz
add
or
jmp
lret
outsl
stc
jmp
dec
stc
jg
rcr
or
test
inc
mov
jae
movsb
loopne
push
jb
hlt
insl
shl
inc
add
add
out
add
lcall
sub
icebp
call
add
cmc
mov
rolb
mov
add
adc
imul
add
mov
xor
call
add
cmp
test
push
push
jb
test
int
pop
addr16
mov
es
pop
aam
fcomps
data16
imul
jns
dec
lock
inc
rclb
std
shll
dec
std
call
mov
add
sbb
call
mov
scas
jp
push
dec
loop
inc
mov
data16
dec
nop
push
xchg
xlat
shl
in
decb
bound
sub
inc
imul
fimuls
sub
adc
adc
decl
loop
aaa
xchg
stos
out
cmp
cmpsb
inc
cmp
jp
add
add
insl
mov
daa
cmpsb
inc
add
nop
test
out
jge
rorl
mov
icebp
insb
cmc
pop
cmp
loopne
inc
ret
inc
pop
xor
xor
sbb
jl
fisttpl
lds
adc
fisubl
stos
dec
dec
dec
out
jnp
fisttpl
gs
push
add
mov
sbb
mulb
mov
add
xchg
out
sti
fs
icebp
push
bound
aas
cld
jl
in
jne
add
xchg
jmp
aaa
xorb
in
out
pushf
add
mov
cld
into
je
sbb
and
orl
out
scas
jb
push
inc
leave
jo
adc
sub
pop
xchg
dec
push
add
sub
stc
sbb
mov
outsb
and
cld
fcoml
stc
xchg
add
enter
into
jae
add
pop
lea
push
push
jmp
jp
add
jbe
jne
jno
clc
add
push
inc
dec
faddl
and
fldl
or
fdivr
pushl
cld
pop
sub
mov
jne
pop
push
insl
ret
idiv
rcll
jecxz
mov
cld
mov
jbe
jne
add
mov
shr
cli
add
inc
push
lea
inc
cld
lcall
aaa
std
push
std
mov
push
dec
inc
jae
addr16
pushl
inc
clc
rcrb
je
cmc
fnstcw
imul
sub
mov
jp
sub
aas
add
test
sub
push
std
mov
xor
cld
lahf
pop
cmp
sahf
push
stc
xor
add
lock
cmp
inc
cld
xor
sbb
dec
adc
add
pop
mov
pop
rolb
add
push
mov
xchg
jmp
add
mov
clc
jmp
mov
cli
ljmp
inc
jmp
ss
jl
subb
or
out
aas
dec
les
mov
add
addr16
lret
clc
je
add
add
dec
sti
jo
in
fmul
pop
cmp
dec
js
test
inc
shll
cmpps
xor
mov
add
lock
test
sbb
add
test
scas
xchg
aaa
add
in
adc
mov
jne
cld
cld
nop
or
push
add
xchg
dec
push
jb
add
lock
lahf
gs
mov
inc
fwait
jbe
xchg
jae
repnz
jg
push
cmp
inc
loope
fs
stc
test
test
push
loopne,pn
aas
jmp
pop
cmp
rcll
sti
into
lret
cmp
imul
push
mov
int
sub
pop
jb
push
shlb
bound
and
jne
arpl
add
and
add
add
inc
je
add
cld
add
sbb
cmpb
je
mov
push
faddl
jmp
jbe
jl
dec
jne
lods
and
cld
orl
sbb
repz
int
lea
xor
adc
es
call
dec
mov
xor
add
add
add
lds
in
sti
mov
out
mov
mov
mov
jg
push
in
jg
aad
pop
nop
fdivrs
pop
jb
sbb
aam
imul
ret
cld
cmpl
jbe
jae
jmp
add
xchg
sbb
mov
pop
mov
xchg
sbb
ret
push
add
add
sarb
xor
push
mov
inc
inc
sbb
das
orl
push
and
and
stc
jbe
shr
push
or
lret
icebp
outsb
cmp
je
adc
xor
das
pop
jge
add
stc
insb
inc
xor
mov
out
mov
jmp
push
es
jmp
mov
fcmovnu
cmpsl
mov
add
das
outsl
mov
sbb
repnz
inc
jbe
pop
jae
jecxz
sub
sub
mov
inc
and
inc
shlb
push
cmp
or
test
cld
xlat
xchg
repnz
jmp
jne
inc
int
dec
cld
aam
or
adc
aas
push
imul
add
clc
mov
jmp
repz
mov
cld
in
ds
fwait
pop
dec
stc
sti
test
movsb
cli
push
xor
inc
cmpl
lds
mov
out
insb
pop
sbb
and
cmp
sbb
pop
sub
sti
add
pop
test
sbb
mov
pusha
aam
jb
adc
incl
add
fldenv
je
pusha
jo
andb
movsl
popa
js
mov
cmp
ret
pop
jmp
sub
imul
dec
jmp
mov
add
add
pop
lcall
cmp
inc
push
pop
sbb
mov
sbb
sub
sub
push
cmp
dec
iret
pop
adc
add
cmpl
xor
jo
dec
mov
and
pop
push
sbb
or
cmc
clc
stc
out
jp
dec
sar
mov
fadds
inc
sbbl
adc
xchg
out
test
push
iret
pop
and
aaa
mov
sbb
lcall
rclb
in
daa
push
xchg
decl
pop
mov
lahf
stc
ss
pop
mov
add
ds
in
shl
ret
and
pop
inc
dec
ret
in
out
decl
nop
xor
dec
jmp
popa
lahf
inc
xchg
or
stc
jmp
dec
imul
sbb
jg
inc
scas
loop
js
adc
mov
add
mov
mov
aad
xor
inc
inc
and
int
xchg
push
cmpsl
xchg
lcall
cmp
sti
loop
mov
inc
loope
cs
jb
in
ret
adc
imul
cmp
or
add
xchg
jecxz
jmp
ds
xchg
xor
adc
dec
sar
and
add
rorb
xchg
sti
outsb
fildll
or
jmp
sbb
jb
insl
push
jge
or
jg
dec
testb
scas
cmc
add
push
mov
mov
dec
add
jne
or
sub
incl
jne
or
aaa
add
or
int3
arpl
jmp
jmp
pop
das
jl
incl
add
mov
repnz
icebp
fsubs
stos
fiadds
or
out
je
rorl
lea
dec
lea
and
or
add
repnz
inc
jb
ds
icebp
sbb
adc
or
dec
xor
js
outsl
push
jo
xor
jge
dec
rorb
or
fdivrl
std
xorl
enter
enter
ret
inc
nop
fcom
orb
and
xor
aam
mov
push
dec
add
imul
adcb
incl
clts
sbb
add
add
dec
orl
rcrl
pushl
lret
out
loopne
int3
push
or
xcrypt-ofb
cmpsl
out
mov
add
or
outsb
mov
aaa
jns
loopne
jbe
push
outsb
jl
loopne
push
nop
add
jge
pop
ret
add
sub
mov
lret
mov
mov
pop
je
or
cmp
add
adc
xchg
mov
and
divb
sbb
mov
cmc
outsb
ljmp
sbb
popa
testb
jne
aaa
push
jle
stc
add
or
jmp
fdivrp
mov
jne
int
sti
add
jno
in
inc
sbb
xchg
aad
call
adc
or
pop
inc
or
add
or
pop
add
loope
je
add
movsb
mov
add
push
push
fsub
jmp
mov
mov
xchg
roll
enter
bound
mov
loope
fiaddl
adc
or
add
push
push
test
shrl
shlb
in
mov
jo
es
push
push
loope
test
out
add
bound
add
add
add
or
add
cli
cmpl
clc
add
sub
cmp
dec
jno
rdmsr
and
fdivs
mov
gs
cld
pushl
or
dec
cli
add
dec
mov
incl
push
add
inc
dec
push
pop
je
movsl
add
jae
call
and
call
or
cld
fildl
add
mov
in
out
out
cld
lock
xchg
pop
inc
push
les
cmc
dec
rcll
pop
push
in
cmpsl
xchg
fdivr
test
rorb
add
dec
pop
inc
in
movsb
and
orl
adcb
or
cmp
xor
imul
add
add
std
xor
xor
push
xchg
fucomp
mov
stc
jmp
hlt
sbb
adc
int
mov
dec
sar
mov
jmp
or
dec
cmp
fiaddl
fcmovnbe
ss
out
cmp
jge
psubw
fistpl
testl
data16
sbb
mov
add
add
shll
jbe
xchg
inc
jno
jmp
stc
push
pushfw
jno
icebp
je
in
push
je
clc
pusha
neg
jg
and
test
dec
stc
add
jmp
stos
dec
gs
jb
push
lret
stc
add
push
aam
pop
and
mov
ret
add
dec
jb
push
adc
dec
cli
ret
int
into
jg
lea
imul
add
add
stc
call
cli
sahf
jo
jo
loope
loopne
in
pop
enter
enter
ficomps
inc
add
fidivs
ds
in
outsl
jg
jbe
add
xrelease
imul
cmp
out
test
jmp
mov
mov
jbe
add
testl
incl
insl
ds
add
add
or
inc
jne
push
into
std
push
add
mov
negb
xor
insb
fmull
jp
cmp
jo
cld
jne
jae
sub
dec
lds
cmpsl
mov
lds
mov
cmp
int
xor
push
jae
lret
addl
dec
sar
mov
sar
pushl
add
mov
sbb
cld
aam
iret
mov
pop
inc
jo
mov
mov
pop
inc
je
xchg
jecxz
pop
pop
mov
xchg
aas
jl
push
inc
in
adc
or
adc
xchg
clc
lea
dec
rcrb
ljmp
or
shl
das
sbb
jg,pt
stc
out
push
add
imul
testb
cmp
inc
iret
cld
xlat
inc
fcom
inc
dec
sarl
push
push
adc
dec
inc
adc
dec
lods
adc
pop
js
xorb
or
pop
mov
inc
dec
xor
dec
ss
push
dec
and
sub
cmp
leave
pop
inc
jnp
xor
leave
cmp
mov
push
mov
mov
add
dec
lea
or
addb
cmp
jo
and
test
aad
jb
aad
mov
aad
rol
aas
jmp
mov
xchg
and
imul
mov
test
pushf
loopne
push
clc
ljmp
int
sti
adc
sub
fdivrl
dec
adc
jg
cld
push
add
add
adc
push
add
add
vpclmulqdq
daa
mov
sub
lret
gs
dec
add
adc
es
mov
enter
std
mov
cmc
xchg
pop
sub
outsl
pop
xchg
scas
push
fadds
call
movsl
mov
jne
popa
or
loop
lcall
ret
inc
add
add
fists
addl
cli
add
mov
adc
xchg
push
decl
data16
mov
jmp
std
pop
inc
adc
or
aad
adc
add
adc
mov
mov
push
insb
dec
dec
mov
push
xor
mov
sub
sub
pop
push
mov
aam
sbb
sub
jecxz
inc
add
in
fstpt
js
ficomps
rclb
push
sbb
les
sbb
mov
mov
pop
adc
aad
mov
inc
dec
loope
ljmp
xlat
imul
out
mov
psubw
cmp
add
add
add
clc
jmp
enter
cmp
sub
test
shl
loope
pushf
cmpb
int3
stc
jmp
sub
pop
cmp
add
xchg
add
cld
pop
dec
stc
gs
push
jge
add
shlb
add
insl
pusha
aam
jmp
into
imul
loope
loope
aad
aad
test
jge
jmp
call
out
sti
or
call
bound
jns
xchg
ss
repz
jmp
or
cmp
sub
pop
testb
das
sub
sti
dec
sbb
push
add
jae
mov
adc
xchg
or
add
sti
push
lock
cld
pushf
cld
jle
lds
jne
add
add
in
jmp
push
inc
and
jnp
jnp
mov
jecxz
lea
scas
in
cmpsb
push
lcall
cmpsb
outsb
adc
xor
adc
cmc
mov
mov
xor
cmp
dec
pminsw
aas
and
pop
jmp
mov
sbb
test
sub
ljmp
or
cmpsl
push
fcoml
add
fwait
jecxz
dec
jmp
adc
cltd
add
out
xchg
mov
subl
decl
rol
xlat
rclb
dec
dec
sub
gs
nop
loopne
mov
pusha
add
add
lret
addl
les
mov
add
jecxz
and
cld
daa
sar
push
insb
sub
mov
stc
mov
add
xor
xlat
dec
xor
sarb
cld
cmc
decl
insl
std
adc
jmp
daa
cmp
hlt
fistps
ljmp
sub
shl
dec
adc
jmp
cmc
adc
outsb
dec
jae
insl
rclb
leave
add
je
imul
lods
shll
inc
add
add
stos
inc
inc
stc
jo
push
mov
pusha
dec
out
sub
loopne
shrl
jb
aas
shl
pushl
mov
daa
addr16
push
rclb
stc
jmp
jl
roll
jmp
call
jmp
dec
into
je
cmp
inc
lds
sarl
in
test
int3
sar
jmp
add
add
sbb
jmp
inc
cmp
pop
pop
adc
dec
call
call
adc
dec
call
into
cmp
sarl
jne
mov
xchg
cmp
jmp
mov
jl
fs
popa
adc
sti
jb
inc
push
push
cmpsl
adc
add
xor
and
and
fucomp
hlt
add
add
add
pop
and
lret
dec
cld
ljmp
and
and
daa
push
mov
sbb
imul
pop
mov
mov
adc
push
mov
and
je
xor
xlat
stos
cld
jmp
aaa
and
dec
jp
and
sti
outsl
jge
dec
js
jle
pop
and
mov
cmp
iret
outsl
push
add
add
xlat
std
mov
lret
mov
test
mov
inc
lret
cld
les
add
sahf
push
mov
xchg
jbe
aas
push
inc
insb
dec
pop
dec
pop
xchg
arpl
mov
int
ficoml
dec
mov
loope
mov
dec
cmp
dec
mov
inc
insb
dec
mov
xor
xchg
and
sbb
sub
sbb
pop
outsl
sbb
or
pop
jnp
fisubs
xchg
stc
fildl
dec
jne
pop
movsb
popa
sahf
mov
sbb
test
dec
lods
enter
push
movb
loop
sbb
iret
rclb
pop
daa
pusha
sub
jmp
inc
dec
jp
push
dec
inc
scas
sbbl
push
addl
push
pop
add
add
decl
dec
je
jecxz
es
jecxz
icebp
dec
stc
lcall
into
hlt
cmpsl
xchg
ljmp
sub
stos
hlt
test
sub
adc
sbb
or
add
loop
insb
fimuls
jae
jns
mov
add
negl
dec
jns
ret
inc
mov
ret
out
add
add
ret
cmp
popa
repz
mov
pop
js
shrb
dec
add
insl
cli
dec
add
lret
mov
lahf
and
add
and
adc
add
push
into
adc
add
ss
mov
lods
adc
data16
repnz
pop
int
jae
or
xor
pop
mov
icebp
add
add
mov
mov
add
int
adc
gs
pushl
js
je
jb
add
ss
mov
xorb
ret
push
mov
ret
and
cmp
decl
adc
mov
cmp
cmc
pop
std
add
cmp
push
dec
arpl
out
cmp
dec
call
adc
add
shrl
inc
add
montmul
cmpsb
add
pop
dec
test
jle
js
push
jo
or
mov
xor
sbb
pop
pop
mov
or
sbb
sbb
fistps
jae
pop
dec
or
dec
and
push
rorl
xor
mov
add
push
mov
cmp
cwtl
iret
sar
add
add
fmul
adc
jle
sub
jle
test
xor
lret
push
lret
inc
cmp
jl
jbe
leave
xchg
aad
les
dec
xor
mov
filds
add
in
repnz
stc
ds
xor
or
mov
mov
adc
push
call
jl
jp
aam
ds
jl
sub
hlt
jmp
xlat
pusha
es
pop
lods
lcall
leave
cmp
sub
mov
jmp
rcrb
and
xchg
adc
insb
mov
mov
adc
push
outsb
cltd
icebp
ret
lods
and
sti
jmp
add
add
dec
adc
fs
and
and
push
add
add
jmp
je
pop
in
lods
fisttpl
scas
call
mov
jae
inc
cli
mov
in
cmp
mov
jae
dec
push
and
xor
cmp
test
cld
add
icebp
sub
ss
xchg
or
cld
jne
mov
outsl
incl
adc
add
es
jp
daa
mov
hlt
shll
inc
fnstsw
icebp
je
inc
aas
cld
mov
adc
shll
outsl
cmp
std
adc
popf
mov
ss
and
or
decl
ret
adc
aas
add
adc
outsl
sar
jo
inc
add
das
dec
shr
fadds
add
iret
xchg
push
ja
ss
pusha
pop
les
inc
icebp
cmp
xchg
es
or
jbe
sahf
push
popa
cld
dec
mov
ret
mov
dec
and
pusha
ret
ret
rclb
dec
adc
popf
ret
dec
jne
ret
adc
sbb
dec
lcall
rol
stc
cmp
movsb
jp
sub
or
mov
add
or
in
shr
inc
stc
data16
or
jmp
ja
inc
dec
out
add
sub
lds
stc
jmp
xor
cmp
jle
dec
adc
pushf
jmp
pop
aas
repz
dec
pop
rorl
repnz
jmp
sbb
add
sbb
adc
pop
aad
idiv
jo
cmc
cmpsl
imull
test
dec
sub
pop
popa
cmc
cmp
dec
adc
sbb
add
mov
js
in
xchg
jmp
jne
add
jae
push
sub
enter
push
cmc
aaa
cmpsl
mov
sti
fsubl
inc
cmc
or
push
cltd
cmc
call
inc
add
add
lret
adc
jmp
sbb
ficoml
pop
or
add
test
adc
das
add
cmp
jg
cmpsb
clc
add
je
test
cmp
push
ss
inc
add
add
mov
mov
cmp
popa
jl
add
cmp
cmpl
add
add
xchg
sub
rolb
adc
mov
cld
mov
mov
sbb
cmp
mov
repz
jg
mov
add
fs
mov
lret
mov
rolb
add
decl
dec
push
clc
or
cwtl
add
std
cmp
adc
add
add
shlb
cmp
les
aad
in
cld
jns
dec
in
adc
sarb
push
dec
mov
lcall
mov
test
lock
pop
dec
inc
dec
add
inc
add
pop
nop
incl
clc
stc
cmp
dec
sub
fidivl
mov
or
add
jae
xchg
mov
add
dec
ljmp
ret
xor
out
add
mov
aam
pop
cmp
mov
mov
xor
je
test
stc
jmp
rclb
push
dec
dec
loop
pop
inc
dec
je
shlb
pop
push
jg
mov
xor
jmp
rorl
add
add
add
out
pop
leave
cmpl
push
lds
cmp
xorl
or
jb
inc
in
dec
push
stc
add
push
outsb
test
arpl
sub
pusha
jle
les
dec
stc
lea
sti
xchg
cld
insl
test
sti
sbb
stc
lea
sti
outsb
pushf
mov
add
cmp
shll
inc
jmp
push
mov
cmp
idiv
add
pop
or
dec
sub
sub
hlt
xchg
mov
fmuls
xor
jmp
cmp
pusha
jae
mov
push
add
cmp
sahf
mov
push
cmpl
sti
incl
add
jbe
jle
mov
push
je
data16
add
cmp
dec
sti
stc
sti
jmp
pop
inc
push
lret
repz
push
push
dec
daa
sbb
inc
xchg
incl
jno
dec
in
cwtl
push
dec
mov
fistpl
mov
mov
out
dec
adc
inc
adc
add
pop
mov
cli
hlt
xchg
add
pop
sar
add
xor
int
push
les
jmp
nop
dec
decb
shlb
push
push
lret
xchg
xchg
adc
and
nop
stc
in
mov
mov
jle
sbb
stos
nop
rcrl
gs
test
icebp
jbe
retw
add
sub
cmp
daa
nop
mov
psubw
cmc
and
clc
je
cmpsl
sub
aaa
cmpsl
push
hlt
push
and
call
mov
inc
jns
lds
xor
pop
push
jae
mov
mov
mov
jmp
rorl
shll
sbb
das
xor
sub
mov
jne
lds
add
js
loope
rcrl
movntps
jb
in
das
inc
fidivs
xchg
and
pop
cmc
in
push
in
aaa
mov
iret
xchg
cmp
pushf
mov
cld
mov
push
jo
repnz
dec
jo
mov
mov
js
loope
sbb
add
add
pop
xor
jbe
nop
std
dec
daa
stc
jg
or
cmpl
cmp
add
xor
cmpl
cmp
or
mov
add
mov
xchg
or
mov
jge
xor
pop
pop
jg
add
pop
int3
roll
jae
je
mov
sarl
ss
jno
and
xor
add
fimull
add
movsl
scas
inc
jbe
xor
xor
push
inc
add
das
mov
mov
imul
mov
out
adcl
mov
shlb
xchg
jmp
scas
mov
inc
dec
outsl
hlt
mov
shlb
xchg
jmp
scas
lea
inc
dec
das
push
mov
shlb
xchg
jmp
std
inc
add
push
adc
outsl
das
mov
shlb
adc
add
outsl
mov
shlb
adc
inc
dec
lcall
popf
aaa
ljmp
mov
jns
stc
inc
rcr
ss
fstps
stc
xchg
aam
test
scas
stc
jae
dec
cwtl
inc
jg
ss
sbb
dec
cwtl
sbb
psubw
cli
ss
cmp
psubw
bound
add
pop
add
stc
mov
dec
sbb
adc
dec
cwtl
adcb
mov
dec
jecxz
aas
jmp
add
add
mov
std
dec
cmp
mov
ficoml
ja
stc
mov
mov
test
jmp
dec
cwtl
loopne
mov
mov
dec
sti
cmpl
sub
cwtl
add
adc
mov
mov
aas
jmp
push
cwtl
and
add
inc
add
lds
add
add
cmc
mov
mov
xchg
dec
mov
ss
adc
std
mov
mov
aad
mov
es
adc
loope
add
lds
adc
cld
mov
mov
test
adc
cmpl
mov
mov
fcoml
add
add
mov
add
xorl
loop
mov
scas
push
inc
dec
inc
adc
scas
arpl
add
outsl
cmp
out
cmc
adc
inc
cmc
mov
mov
ljmp
lret
mov
jmp
dec
cmp
dec
mov
jp
inc
dec
mov
dec
std
add
add
dec
inc
add
pop
sub
push
in
xorl
cmp
inc
dec
push
xchg
xlat
cmp
mov
and
cmp
stc
sbb
jo
add
into
aas
add
dec
jb
dec
pop
jns
psubw
mov
jle
das
insb
mov
fwait
add
ljmp
cmp
mov
xor
sub
cmp
mov
add
cmp
mov
fwait
mov
push
daa
mov
add
inc
dec
jp
dec
and
add
lock
mov
stc
add
mov
orl
sub
sub
xor
jo
popf
data16
dec
mov
inc
cld
xor
mov
lds
xorl
adc
idivb
and
sbb
jnp
jne
jecxz
loopne
mov
push
ret
sub
jmp
je
add
dec
mov
mov
sti
push
xchg
jp
sbb
mov
loope
stc
ret
add
jb
pushl
jle
std
fwait
insb
cld
call
sbb
aam
call
add
pushl
sub
mov
xchg
mov
lock
pusha
dec
mov
push
sbb
lret
ljmp
stc
add
icebp
pop
or
es
jmp
out
call
insl
cld
call
jne
std
add
or
mov
out
decl
pop
push
cpuid
add
xchg
addb
scas
cld
ljmp
movhps
mov
inc
cld
mov
lds
mov
sub
int3
in
cld
sbb
mov
pop
mov
mov
push
cwtl
push
jb
xor
pop
add
clc
and
sbb
mov
enter
mov
push
mov
int3
jae
sub
xor
add
mov
push
dec
lds
stc
es
cli
jmp
inc
dec
mov
mov
leave
sub
cltd
mov
fstp
inc
dec
dec
jecxz
arpl
sub
rorb
rclb
mov
cmp
push
aas
push
out
and
fwait
sbb
mov
out
xorb
jmp
loopne
jecxz
shrl
add
div
pusha
dec
sbb
sbb
pop
stos
add
xor
adc
pop
aad
popf
adc
stc
push
ficoml
push
push
push
ja
sti
aam
add
and
fnstenv
add
push
bound
add
pusha
or
sub
in
in
int3
mov
mov
xchg
add
add
test
insb
mov
sahf
jmp
cmp
imul
mov
cld
das
test
mov
mov
inc
mov
stc
sti
aam
mov
add
or
pop
cmp
jmp
stos
mov
jmp
add
mov
cli
imul
outsb
insb
add
lods
push
dec
push
mov
sub
jbe
add
add
lods
add
or
cmp
daa
clc
cmpl
mov
xchg
xor
mov
xor
jle
xor
push
dec
push
cmpsb
cli
outsl
jge
mov
lea
js
pop
cltd
rorl
cwtl
imul
insl
inc
jp
add
push
sti
jb
or
and
add
add
inc
dec
addr16
ret
xchg
pop
addl
sarb
dec
movb
xor
shll
xor
mov
and
hlt
iret
imul
adc
pop
jnp
jmp
push
mov
sahf
daa
js
add
mov
adcb
adc
ja
cwtl
stc
dec
lock
inc
sub
mov
fdivr
in
jle
mov
cld
js
or
pushf
push
add
inc
mov
push
jle
lret
xor
cmp
in
push
outsb
test
jmp
stos
shll
cld
inc
dec
jl
lcall
inc
aaa
sbb
stc
jmp
push
cmc
scas
mov
add
aam
inc
cmp
jp
sbbl
add
add
inc
sbbl
or
add
xor
jno
mov
cmc
push
pusha
lods
sti
pop
iret
sub
inc
clc
mov
dec
outsb
pop
cmpsl
xchg
mov
icebp
dec
jno
mov
stc
cmp
sub
sbb
imul
inc
push
mov
sti
inc
inc
sub
ljmp
lods
cmp
ret
xchg
cmp
mov
add
test
xor
test
sarb
in
enter
sahf
dec
addr16
push
scas
dec
cmp
pop
cld
push
mov
test
add
cli
std
adc
imul
call
pop
mov
cld
lcall
inc
jmp
test
adc
fistl
inc
add
add
xor
sub
sbb
xor
jno
cld
jne
pop
aad
loope
mov
in
out
or
jbe
push
push
push
mov
inc
push
jae
je
cmp
mov
adc
popf
test
cmc
mov
mov
mul
push
loop
fcmove
inc
xor
add
iret
insl
sti
jmp
cmpb
stos
js
push
or
mov
out
loopne
sbb
dec
push
mov
pushl
pop
cld
adcb
jae
jmp
mov
lret
push
imul
adc
notb
add
addl
shrb
jle
lods
add
add
nop
cmp
addl
jle
cld
mov
xchg
ret
call
dec
jg
push
stc
jmp
cmc
or
mov
dec
inc
adc
push
add
jl
cli
outsb
inc
inc
jle
clc
es
popa
inc
push
push
jne
push
jbe
das
push
jbe
xor
jne
psubw
ret
jge
test
push
add
add
add
mov
lea
mov
cmp
insb
repz
add
shlb
inc
jmp
jg
dec
add
push
jmp
jb
add
jmp
dec
stc
data16
mov
dec
stc
push
pop
into
mov
cld
cmp
jmp
dec
stc
add
dec
stc
push
idivb
mov
add
push
stc
add
add
bound
stc
add
rep
outsl
pop
repz
fmull
mov
push
mov
testl
add
sub
add
es
je
sub
jne
sbb
shlb
call
imul
add
sub
add
or
xchg
ret
xor
mov
inc
mov
dec
cmp
add
test
jno
add
dec
mov
lds
dec
scas
mov
or
pop
out
and
mov
clc
faddl
andl
jns
jae
or
pop
dec
adcb
jb
pop
mov
add
testl
cmp
mov
popf
xor
dec
call
pushf
or
mov
cli
je
xchg
mov
and
push
orb
jp
sbb
icebp
pop
mov
dec
cld
roll
inc
ret
icebp
xchg
mov
dec
stc
inc
andl
push
push
push
or
dec
lcall
pushf
add
add
jbe
loopne
xchg
gs
test
mov
mov
push
xlat
mov
pop
cmpsl
fwait
jl
cmpsl
xlat
stos
inc
scas
inc
test
push
fimull
insb
cltd
cmp
xchg
orb
cld
cmpsb
mov
adc
or
adc
cmp
js
ds
sbb
mov
pop
orb
arpl
add
add
add
xor
addb
aas
jmp
jmp
lods
scas
jmp
cmpsb
sti
ss
stc
jg
jmp
sahf
mov
adc
lds
hlt
cmpsb
push
jb
aaa
push
mov
fsubr
xlat
push
sbb
ds
xchg
aaa
cmp
jp
jmp
int3
and
mov
add
add
cmp
sbb
call
mov
dec
clc
sub
pop
sbbb
sbb
lea
stc
pop
adcb
cli
mov
xlat
adc
popa
dec
push
ficoms
call
idiv
add
jg
push
jns
or
dec
jmp
cmpl
ds
jge
cld
andl
cmp
add
shlb
add
add
mov
jbe
add
out
outsb
or
cmp
clc
dec
sbb
out
lret
add
dec
cmp
rorb
lea
jle
jae
dec
push
add
lds
pushl
enter
insb
dec
call
xchg
jp
mov
in
decl
cmp
dec
and
or
add
dec
scas
dec
mov
data16
lods
clc
sbb
aaa
inc
movsl
cld
jg
push
and
out
in
shrb
enter
xchg
icebp
call
movsb
adcl
fwait
andb
ret
cwtl
sub
jbe
mov
jmp
mov
movsb
loop
cwtl
jge
sbb
sub
dec
sub
sub
add
xlat
ljmp
fisttpl
ds
cmp
mov
push
std
fiaddl
lret
mov
jmp
idivb
stc
je
inc
movsb
pop
mov
fdivr
aam
jge
mov
into
mov
mov
movsb
sti
ljmp
das
xor
std
fildl
in
clc
mov
icebp
add
add
ss
cltd
and
and
dec
cmpsb
xor
mov
lret
test
dec
stc
lea
sti
mov
movsb
shlb
out
sti
cmpsb
in
adc
movsl
jp
mov
outsl
inc
xchg
pop
adc
into
dec
stc
sti
mov
push
jbe
jo
gs
stc
add
jbe
test
xchg
dec
push
jns
jecxz
add
add
jp
rdmsr
cmp
mov
or
push
jecxz
adc
push
jae
push
into
mov
xor
cld
cwtl
cld
in
fs
jns
roll
data16
adc
sub
push
outsl
ds
mov
mov
xor
fs
cld
lcall
test
inc
out
movsl
or
add
add
add
cld
sti
decl
mov
jg
cld
bound
clc
ror
sbb
fistpl
mov
cmc
mov
and
ja
fdivr
js
mov
ljmp
sbb
out
inc
push
fisttps
cld
lahf
dec
add
pop
inc
cmc
aas
dec
push
shlb
inc
clc
add
add
push
adc
lret
aad
sti
adc
adcb
cld
lahf
cli
add
out
adc
jmp
outsl
mov
loop
loop
pop
jmp
push
lods
les
repnz
xchg
popf
and
lcall
cltd
sbb
add
jo
mov
addl
inc
mov
outsl
ret
or
add
add
mov
lods
push
mov
repnz
roll
test
sbb
aam
lcall
outsb
push
hlt
cmpsb
iret
xchg
dec
add
jp
shlb
es
lea
das
imul
clc
xchg
and
mov
add
fistpll
stc
cltd
je
and
dec
sahf
xor
loopne
xlat
pop
je
jge
out
add
add
pop
add
jl
jl
je
loope
pushf
sti
add
add
dec
je
xchg
ret
cmp
or
fisttps
in
movsb
je
in
popa
cmpsb
leave
popf
jne
mov
stc
push
addl
insl
inc
add
mov
cld
call
sub
loop
std
lcall
add
call
pushl
mov
add
adc
incl
jecxz
ret
call
mov
idivb
cli
stos
xchg
ljmp
xchg
je
js
cli
inc
push
push
movsb
jecxz
push
jl
cmp
or
or
jmp
out
test
cmp
jg
dec
cld
jbe
xchg
mov
add
inc
sar
clc
lods
lea
setle
loopne
sahf
push
sbbb
les
push
aam
repz
aaa
mov
mov
cmpl
or
cmp
add
fadds
xchg
mov
adc
push
out
pop
aas
dec
dec
add
cld
rorb
add
xor
add
add
add
adc
sbb
mov
insl
ret
pushf
cmc
ret
daa
std
pop
adc
jbe
pop
dec
xchg
mov
and
stc
push
add
pushf
push
les
cmp
jbe,pt
mov
mov
dec
fwait
inc
lea
xor
call
xchg
sub
mov
ds
sbb
xchg
xor
dec
stc
jo
add
add
std
insb
ret
std
add
pushf
adc
ret
sbb
cmp
aas
xchg
sub
dec
stc
mov
mov
add
ja
and
add
push
ljmp
and
stc
ret
sub
xchg
stc
mov
or
call
rcll
sti
jmp
push
stc
add
push
stc
add
push
adc
or
or
jp
in
rcll
jbe
lea
and
jmp
mov
add
and
dec
stc
xchg
not
out
outsb
aas
and
insb
aas
and
into
shlb
add
stc
add
scas
fisubl
stos
sbb
push
cmc
testb
out
std
adc
add
add
fadds
ss
testb
jbe
test
mov
cmc
add
mov
and
xchg
sbb
lret
ljmp
add
repnz
jns
cmp
sti
pushl
aas
and
jae
and
shlb
test
add
lahf
mov
addr16
push
inc
add
add
and
rorb
adc
add
jnp
jmp
or
push
adc
jg
sub
jg
add
nop
jg
inc
in
mov
push
decl
shll
push
in
lret
dec
aad
adc
dec
fistpl
cli
cmpsl
jp
dec
adc
pushl
jp
pop
adc
pusha
clc
jmp
inc
loopne
loopne
ljmp
mov
xor
cwtl
fsubl
cmp
or
lcall
stc
jmp
or
mov
add
filds
jns
cld
xlat
ds
jle
or
filds
dec
xchg
les
test
cwtl
and
xchg
add
adc
aad
fcoms
jge
into
pop
out
les
jmp
insl
xchg
addl
adc
loopne
iret
push
je
lds
sti
bound
add
mov
mov
xchg
sti
ss
das
xchg
pop
clc
jmp
xchg
mov
imul
add
add
jne
dec
sub
cld
add
in
fisttpl
cmp
negb
and
push
mov
lahf
cmpsb
jecxz
stc
das
add
cmp
outsb
jg
jmp
mov
call
mov
cmc
push
inc
ss
inc
add
mov
add
int3
data16
test
std
popf
bound
cmp
push
push
outsl
cs
cmp
fadds
cmp
notb
testl
mov
add
sti
mov
cmpsb
add
cmpsb
bound
mov
push
jecxz
sahf
std
add
loopne
add
loopne
add
loopne
jmp
add
test
inc
pop
shrl
incl
add
dec
mov
ljmp
mov
xchg
jne
ljmp
or
mov
mov
ljmp
push
ss
loopne
xchg
mov
push
xchg
adc
xchg
aas
add
pop
pop
push
sbb
sub
pop
sub
test
aaa
sub
cwtl
clc
and
cmp
or
xchg
add
jne
add
add
ljmp
xchg
ljmp
xchg
outsb
inc
inc
and
xchg
mov
xchg
ret
jg
xorb
int
xor
fcompl
lcall
sbbl
pop
xchg
adc
sarb
jle
dec
xchg
hlt
fwait
lock
xchg
roll
and
dec
stc
mov
movsb
js
fwait
iret
movsl
add
add
fs
frstor
mov
inc
ficoml
or
or
and
fnsave
lock
dec
stc
xchg
inc
stc
push
push
frstor
sbb
jle
or
das
jl
or
add
int
jp
lds
and
test
dec
stc
mov
add
add
sarb
data16
lahf
push
test
enter
dec
addb
cmp
jecxz
call
push
push
arpl
ljmp
xor
outsl
xor
mov
lea
pop
mov
data16
cmp
je
xor
ret
shlb
jmp
shr
cmp
push
inc
adc
add
lods
lret
popf
shlb
inc
data16
mov
adc
bound
and
outsl
jecxz
pop
addr16
mov
xchg
repz
cmp
call
int3
push
jecxz
dec
push
clc
sbbb
in
sbb
mov
mov
adc
pop
pop
out
mov
sti
xchg
cld
add
add
in
adc
int
add
jge
int3
stos
int3
xorb
jp
pushl
out
mov
inc
in
xor
pop
loopne
std
bound
decl
jg
notl
scas
mov
movsb
data16
ja
test
xchg
jmp
getsec
stc
jmp
mov
mov
and
loop
adc
stc
add
in
add
fdivrl
fwait
pop
mov
nop
int3
mov
jmp
hlt
cmpsb
cmc
pop
inc
inc
sub
jae
jmp
nop
sbb
add
stos
jmp
in
add
sbb
fsubr
add
nop
gs
push
jne
xor
mov
std
je
fisttps
or
aad
jmp
fimuls
lcall
or
cs
push
mov
clc
xor
fistpll
enter
dec
and
nop
mov
mov
inc
or
pusha
test
cwtl
roll
mov
sti
jge
mov
loope
mov
call
bound
add
jecxz
out
adc
sbb
add
sti
push
push
cmp
xor
cwtl
xchg
lcall
call
icebp
and
push
inc
and
jmp
sbbl
xchg
scas
push
xchg
adc
in
jmp
clc
je
jle
call
mov
das
and
pop
pop
add
add
fistps
xchg
push
popf
outsb
mov
movsl
outsb
dec
push
cmp
sti
mov
dec
push
and
mov
mov
mov
mov
dec
jb
sbb
test
adc
rcr
cld
mov
movsb
fmull
dec
sbb
add
dec
inc
adc
sbb
sbb
sbb
sbb
add
adc
mov
add
add
fdivs
call
clc
sbb
add
nop
andb
xor
aam
dec
sub
clc
mov
stos
mov
int3
inc
lea
stc
mov
xchg
lock
mov
lea
mov
jne
mov
testl
pop
mov
add
mov
lea
andb
mov
cli
test
sbb
aam
add
mov
xchg
and
add
sub
clc
ljmp
into
aam
dec
stc
loop
ret
add
jbe
mov
lea
sbb
add
shrl
hlt
cmp
inc
jmp
imul
xchg
add
add
outsl
sti
jbe
dec
je
fiaddl
or
std
pop
lret
xchg
xchg
cmpsl
ret
lea
and
cmp
lea
cmp
xchg
sarl
xchg
jae
test
rorl
jno
lea
les
icebp
idivb
std
push
orl
in
mov
rcll
into
cmpsb
ja
add
cmp
sahf
loop
call
and
ljmp
pop
mov
ret
ret
dec
mov
lds
adc
cld
inc
data16
testl
inc
mov
mov
cld
and
mov
mov
mov
cmc
jge
je
jb
pop
jecxz
data16
flds
data16
mov
or
add
add
and
ret
orl
orl
jle
and
cs
pop
push
pop
sub
loopne
push
xlat
cld
loopne
add
jl
sub
aas
jmp
mov
aas
add
cld
enter
cmp
lock
mov
lret
and
clc
sbb
add
cmp
inc
fistpl
add
add
decl
and
push
sbb
inc
clc
test
cld
push
ret
xor
aas
dec
jo
inc
imul
xor
add
insb
les
lods
add
stc
outsb
inc
jae
inc
popf
cmc
test
repz
mov
int
cli
insl
call
es
xor
sbb
aad
xor
add
jecxz
mov
add
jge
dec
stc
rcl
cmp
test
or
xor
sub
out
nop
in
add
xor
fildl
mov
mov
cmp
jbe
aam
dec
xchg
clc
jmp
int3
dec
stc
lea
adc
jmp
movl
inc
or
push
fnsave
sbb
stc
add
cmpb
add
dec
stc
add
push
push
add
clc
add
dec
xchg
xchg
test
mov
shl
test
jno
push
pop
fstpl
inc
aad
test
inc
cmp
or
in
cmp
testb
push
inc
fstpl
add
xchg
cwtl
cld
adc
lods
enter
rcrl
or
rcll
and
add
add
cld
push
lcall
mov
subb
orb
es
mov
in
shl
add
idiv
cmc
inc
push
std
add
testb
test
jg
mov
add
or
add
xor
pop
fadds
cmpsb
sti
call
test
nop
jg
jbe
add
add
dec
mov
push
clc
dec
test
add
add
shrb
xchg
xchg
jmp
loopne
dec
push
adc
loopne
add
cwtl
and
js
cmpsl
lods
cmp
jns
inc
and
mov
fidivs
les
mov
fmuls
inc
iret
rclb
je
or
out
icebp
cld
enter
lret
imul
or
jg
adc
xlat
das
xor
add
cmpsl
mov
shlb
adc
iret
or
clc
loopne
cld
xor
mov
lock
iret
fnstcw
ljmp
lock
push
enter
aam
orl
xchg
adc
roll
xchg
lahf
adc
out
lahf
test
nop
sbb
jecxz
sub
cmp
add
add
mov
jmp
cwtl
insb
jp
xchg
das
gs
pop
notb
jmp
js
add
stc
cmp
cltd
cmc
or
adc
sti
push
out
call
xchg
lea
jnp
jo
fxch
inc
jne
sub
jp
adc
push
icebp
lea
sti
xor
hlt
in
inc
jmp
add
add
xchg
jmp
inc
lea
out
sti
mov
or
cmp
adc
inc
std
das
test
bound
rcl
incb
add
inc
dec
daa
cmp
push
in
inc
add
mov
clc
mov
add
fisttpll
lcall
divb
stos
mov
mov
add
pop
pusha
popa
xlat
sub
fcomps
mov
ds
mov
jo
add
sti
jae
je
or
mov
shlb
add
cld
jne
jae
or
std
mov
std
add
mov
jne
pop
pop
movsb
ret
testl
mov
add
inc
mov
add
dec
out
push
push
push
jge
push
adc
js
out
dec
xchg
decl
pusha
ja
dec
xchg
sbb
stc
push
cli
add
push
mov
jno
mov
xchg
mov
dec
push
add
mov
xor
pop
sbb
addb
add
out
divb
lds
lret
cld
shl
xchg
mov
jbe
cld
push
cmovbe
lret
out
add
cltd
stc
jmp
stos
jge
idiv
insl
mov
rol
fidivrl
fisubrs
nop
pop
jmp
inc
iret
mov
adc
mov
inc
dec
daa
gs
enter
jne
pop
lahf
cs
dec
xchg
pusha
xor
sbbb
popf
pop
sbb
cmp
mov
cmp
jne
cmp
imul
fildll
test
inc
add
add
hlt
ja
js
sub
mov
jmp
add
imul
dec
jp
xor
dec
stc
dec
mov
mov
dec
mov
aas
or
stc
call
inc
jo
push
fwait
jne
jmp
xchg
adc
add
dec
jle
icebp
fstpt
add
jge
rolb
call
inc
lret
cmp
stc
xchg
jp
jne
sbb
pop
add
jne
dec
mov
or
jmp
xor
jbe
push
and
add
mov
or
test
mov
insl
xor
and
fdivrs
sub
add
add
data16
cmp
mov
or
addl
std
push
mov
add
scas
mov
std
adc
add
insb
ds
pushl
ds
dec
jp
inc
inc
ret
scas
or
jecxz
adc
mov
adc
mov
aad
xchg
dec
lahf
cmp
dec
xchg
pushw
mov
mov
ss
jb
cmp
outsb
dec
xchg
xchg
ror
cld
paddq
jns
outsb
insb
dec
xchg
xchg
or
hlt
inc
push
imul
adc
out
or
xchg
xchg
sti
lcall
jp
idiv
and
add
jnp
outsb
sbb
out
aad
mov
stc
int3
jge
jle
enter
jl
add
mov
add
inc
jge
inc
mov
dec
repnz
pop
decb
fmull
xor
xchg
jo
xchg
jle
add
adcl
cltd
imul
sub
jl
jg
pop
jno
inc
jp
jg
jp
xor
add
sti
std
mov
mov
cmpsb
int3
dec
inc
fidivs
mov
popl
add
fucomp
mov
push
cli
push
or
lret
add
lea
adc
xchg
cltd
iret
inc
jge
sarl
jge
bound
fwait
call
jae
xchg
adc
stc
sti
aam
xchg
jns
add
sub
testb
cmc
call
movb
push
fistpll
adc
stc
xchg
add
dec
stc
add
push
stc
add
or
push
and
jle
jge
gs
test
inc
clc
add
jge
adc
es
data16
mov
push
dec
mov
jae
je
xchg
decb
cmp
inc
aam
jb
jg
addl
and
test
mov
test
add
add
jnp
inc
je
or
imul
adc
or
into
xchg
ss
aam
repnz
fmuls
rorb
xor
push
inc
jae
fmull
mov
orl
out
ljmp
dec
mov
iret
mov
jg
xchg
jmp
dec
mov
add
pop
add
fisttps
add
pop
cmc
repnz
mov
js
lret
roll
test
mov
mov
scas
adc
xchg
push
nop
add
and
sub
or
inc
adc
imul
lret
std
or
test
add
aad
mov
imull
lock
cmpsl
out
jnp
cmpsl
out
outsb
into
cmpsl
out
push
jbe
fstps
in
lock
jp
icebp
pop
mov
stc
jmp
add
std
lock
push
insb
popf
pop
inc
xchg
sti
push
pop
jp
es
nop
out
push
into
pop
lock
pop
pop
mov
inc
mov
add
push
jl
lds
outsl
icebp
add
add
jp
es
les
mov
push
jb
aad
mov
jo
in
aaa
sti
cmpsb
push
jno
fs
push
or
popf
xchg
cltd
int
jge
xchg
fcmovbe
sti
jbe
sbb
test
mov
mov
lahf
xchg
ret
stc
xchg
js
gs
jle
adc
jb
jbe
xchg
add
add
xor
inc
add
les
addr16
push
and
fstl
idiv
jnp
xor
das
push
in
and
repnz
imul
daa
jge
add
dec
arpl
ret
cmp
mov
sbbl
jne
addr16
or
into
fdiv
add
dec
jecxz
lcall
idivb
jmp
push
add
add
icebp
and
adc
leave
and
sti
push
std
filds
fstpt
dec
idivl
and
movsl
imul
insl
js
movsl
popa
xchg
mov
mov
jl
push
jl
roll
xor
out
cld
add
stc
add
leave
pop
mov
xor
call
push
les
lcall
add
mov
and
cmp
jmp
aam
cmc
mov
fldl
aam
mov
je
push
fnstsw
cmc
jbe
decb
xor
dec
in
loope
mov
add
dec
jbe
mov
bound
shll
ficoml
cmp
add
xor
shr
stos
rolb
add
jb
sub
aas
push
adc
fbld
repz
sub
rolb
popf
cmp
xor
arpl
and
call
pop
add
mov
add
clc
jmp
push
sar
add
dec
stc
push
and
cmp
jne
adc
je
mov
imul
stc
xchg
mov
mov
or
jmp
push
jnp
jmp
dec
leave
sti
fsubrl
mov
shll
inc
push
jne
cmc
inc
mov
lock
xchg
pop
movsb
jmp
into
insl
add
rorb
dec
dec
out
insb
icebp
jmp
mov
shlb
xchg
add
add
in
push
loope
cmpb
fdivs
sbb
jp
add
sbb
lret
aad
daa
popf
mov
punpcklwd
add
jmp
add
adc
in
outsl
pop
inc
jl
hlt
fwait
mov
call
pop
imul
mov
inc
xor
cli
mov
outsb
in
fisubrs
cld
inc
sarl
jmp
imul
add
add
fdivr
ljmp
cmpl
mov
ds
xlat
ret
pop
scas
adc
out
mov
ja
inc
je
jge
imul
les
dec
inc
xchg
int3
mov
jmp
jmp
sti
daa
sti
xchg
or
inc
jae
fcomip
sti
dec
into
pop
jg
ds
das
mulb
add
add
add
les
jnp
ret
roll
xlat
push
out
in
cld
shll
jg
cwtl
loop
shl
ret
cmp
cld
jmp
dec
adcb
jno
push
jg
jb
jl
jae
cmp
loop
and
jmp
pop
stos
jnp
jae
cmp
cwtl
lock
in
add
aad
lret
lret
add
add
mov
add
jle
roll
in
loope
sbb
add
cmp
cmpsl
jb
add
push
fiadds
sub
js
orl
mov
jg
dec
jl
clc
push
mov
jb
jb
adcb
push
push
cmp
cmpsl
sub
mov
mov
pushf
push
ss
sbb
push
fs
out
arpl
add
loope
inc
jmp
xchg
test
jmp
inc
jns
shll
add
ja
stc
jne
pop
cmp
adc
and
out
arpl
leave
cmp
xchg
dec
jns
xor
testb
or
stc
out
xchg
cmp
sbb
cmc
add
stc
xor
dec
out
add
add
add
push
sbbb
shr
inc
jecxz
and
cld
out
cmp
pop
je
sti
push
mov
jl
test
std
add
inc
add
repnz
or
lahf
cld
push
cld
push
mov
and
pop
das
jo
sbb
cmp
sbb
add
arpl
mov
mov
mov
roll
add
mull
lcall
adc
or
jge
out
jl
cld
xchg
and
and
test
fs
dec
mov
lret
les
cld
inc
jmp
dec
or
lods
add
js
outsb
imul
psubsb
jo
aam
jne
dec
or
add
add
orl
testb
mov
xor
dec
stc
insl
inc
push
jne
add
inc
test
shlb
add
in
mov
insb
add
push
dec
out
pop
pop
mov
jmp
adc
clc
iret
add
mov
pop
incl
sub
cmp
decb
loope
sub
add
arpl
andl
pop
ds
ljmp
jnp
sub
sarb
jmp
call
jmp
sub
push
addb
lea
js
jmp
je
sbb
or
scas
or
outsl
sti
jmp
sub
jmp
add
add
sub
xor
dec
stc
sti
aam
or
xlat
lods
or
or
test
pop
lds
std
test
stc
add
sub
mov
jmp
dec
addb
leave
dec
inc
xor
sti
add
sub
inc
out
mov
and
sti
add
xchg
lds
cmpsb
stc
call
test
jo
push
add
jb
push
xor
out
aas
and
inc
dec
incl
js
or
sbbb
jbe
add
mov
sbb
inc
pop
dec
out
push
mov
xorb
sbb
cld
test
and
add
gs
sbb
add
adc
or
add
push
cld
arpl
or
stc
pushf
ret
and
xor
add
add
aad
dec
push
inc
insl
add
bound
imul
or
and
pusha
dec
and
dec
cld
ret
ss
bound
xor
jl
sub
aad
jecxz
adc
or
xor
inc
mov
les
mov
ret
push
inc
mov
mov
push
mov
mov
les
add
push
mov
or
add
sub
fsubrp
js
adc
add
stc
rcll
sbb
add
insb
or
jg
adc
mov
pusha
popa
or
cmp
jg
int
add
outsb
pop
stc
pop
or
dec
stc
mov
aad
xchg
pop
in
jmp
loope
out
movsl
add
mov
add
add
push
jne
add
pop
subb
jle
mov
adc
icebp
mov
clc
push
insl
jne
jge
add
jo
add
dec
loope
cli
dec
stc
sti
cld
nop
inc
aas
jmp
mov
jmp
stc
add
popf
push
ret
insl
push
xorl
insl
call
pop
iret
push
std
data16
add
mov
enter
or
jno
inc
fsubrs
sti
mov
pusha
push
pop
mov
add
stos
push
mov
push
add
add
mov
popf
out
fdivrp
lea
idiv
adc
lds
cld
adcb
sti
jmp
dec
sti
imul
jge
incl
add
lods
stos
repz
sti
pushl
and
decb
jp
ljmp
lock
adc
mov
xor
call
lods
inc
add
xor
roll
out
dec
dec
lcall
adc
loope
mov
mov
mov
push
int3
clc
imul
sub
mov
outsl
add
sbb
and
or
push
push
xlat
jmp
mov
inc
out
dec
push
jnp
cli
pop
shl
inc
imul
dec
outsb
push
decl
mov
jb
mov
cmpb
jmp
add
xchg
imul
stos
jbe
mov
jmp
pop
clc
jmp
data16
pop
pop
imul
lret
adc
in
add
xorl
js
xor
jmp
subb
lar
in
pop
jbe
add
jbe
addr16
cmp
or
jns
add
ret
add
add
lcall
repnz
stc
mov
je
outsl
xchg
mov
push
test
jne
xchg
mov
lea
jne
sbb
and
imul
out
lods
add
dec
jo
sbb
arpl
sbb
stc
movaps
inc
icebp
iret
cmpsb
or
data16
jmp
mov
add
add
hlt
xchg
loope
or
fisttpl
jle
outsw
rolb
sub
and
inc
ss
test
push
mov
adc
inc
or
icebp
gs
pushl
in
xorl
xchg
xor
pushl
mov
inc
add
dec
je
jge
sbb
add
mov
sbb
xor
cmc
push
push
ds
add
mov
fstpt
xchg
gs
add
or
call
jmp
ljmp
dec
stos
rcll
mov
pusha
test
sbb
cmpsl
icebp
or
or
ds
push
jbe
imul
mov
push
pushl
adc
add
push
inc
mov
inc
pop
adc
add
xchg
hlt
addl
decl
mov
pop
and
idiv
mov
jbe
jae
xor
pop
jnp
dec
push
incl
cmc
add
cmp
decl
jp
sub
jmp
orl
cli
fs
cmp
xor
add
add
int
pop
inc
outsl
std
aad
cmp
ss
or
push
jp
dec
xor
clc
test
std
push
sti
dec
xchg
insl
aas
pop
cld
loope
adc
lahf
outsl
push
cmp
or
stc
jbe
adc
mov
in
roll
or
lret
stc
jmp
fistl
pop
aam
add
pop
push
jle
add
add
lea
adc
push
enter
in
sbb
outsl
inc
add
pop
data16
fs
test
lods
gs
insb
pop
pop
sbb
lods
jno
insb
dec
out
jb
push
sbb
cmp
jns
or
mov
bound
popf
adc
jmp
popa
outsb
inc
or
mov
adc
add
add
in
mov
pop
pop
mov
add
jne
stos
jecxz
lahf
xlat
cld
push
icebp
add
mov
std
adc
inc
sti
sti
pushl
pop
test
xlat
cld
cli
sbb
incl
jae
pop
fs
add
rolb
push
add
jecxz
cld
jne
jb
call
add
add
repz
notl
sub
xchg
jae
mov
jg
jnp
xchg
lods
xor
jbe
cli
lock
fmuls
shl
cmpsl
xchg
std
mov
mov
roll
jb
into
jecxz
dec
aad
jae
aad
xor
ret
dec
aaa
pop
incl
inc
jb
xor
mov
push
jmp
xchg
fmuls
xchg
or
push
in
push
mov
in
cmp
or
xchg
addr16
addr16
pusha
orb
adc
mov
stc
xchg
test
lock
dec
push
in
sti
mov
mov
jnp
push
insb
inc
add
push
inc
push
in
pusha
pop
mov
add
add
add
outsl
stc
int3
dec
mov
mov
jns
adc
pop
fistpl
jecxz
dec
jl
add
xor
jb
jb
mov
in
xor
jmp
ret
cmc
xor
xor
add
lahf
loope
mov
bswap
push
xor
lret
pusha
add
xchg
or
lahf
loope
jb
bswap
push
push
faddp
ss
push
mov
clc
jg
dec
xlat
mov
aad
pop
cmpsl
lea
lret
xlat
mov
hlt
mov
push
jae
jne
xchg
or
shrl
jbe
idiv
pop
adc
stc
rclb
pusha
inc
lahf
pop
addr16
int3
cmp
shl
repz
mov
inc
int3
dec
xor
add
add
lock
pop
loope
out
inc
add
call
dec
ret
cli
add
out
pop
ret
mov
imul
mov
cmc
je
jb
xor
cmp
xor
jno
je
jae
sub
cmp
cmp
or
mov
out
sbbl
push
jecxz
addr16
jnp
jmp
add
sldt
add
sti
jmp
jb
xor
sti
xor
sbb
inc
dec
fisttpl
popa
sbb
inc
int3
xchg
sub
mov
pop
call
cltd
inc
add
les
inc
daa
leave
fwait
das
inc
dec
mov
adc
mov
pop
add
popa
dec
or
mov
in
sub
sbbb
dec
sahf
daa
push
pushf
jg
xchg
add
popa
fidivrl
adc
sti
xchg
fnstcw
xchg
jmp
and
test
cmpsl
pop
dec
ret
outsb
push
arpl
add
rol
ret
js
add
push
mov
aad
push
shl
fwait
pop
lcall
pop
aas
pop
sbbl
push
aam
jae
sti
daa
add
add
arpl
add
pop
pop
mov
jg
jmp
xlat
lea
das
pop
mov
and
aam
fdivrs
iret
and
push
js
sub
in
xchg
out
mov
inc
aam
repz
mov
dec
aas
jmp
call
dec
aas
jmp
and
cmp
push
cmc
cmp
aaa
stos
push
pop
add
add
mov
sub
shlb
arpl
mov
sahf
repz
dec
stc
xchg
js
mov
out
push
xlat
je
shlb
aam
jb
fst
xlat
cld
jmp
xlat
mov
cltd
xlat
mov
mov
movsb
xor
jmp
mov
addr16
lcall
push
push
and
inc
mulb
add
cmp
ljmp
sahf
mov
sub
gs
imul
stos
sub
cmp
or
fwait
into
adc
rol
shrl
adc
cmc
pop
test
inc
or
cld
jne
mov
or
sub
push
sti
mov
sti
push
aad
mov
and
imulb
sarb
sti
incl
add
es
jmp
dec
cld
pop
sub
aas
dec
or
push
add
lcall
mov
addr16
incl
dec
cmp
addr16
adc
pushl
or
push
out
iret
or
adc
push
movsl
into
adc
fs
or
push
sbb
cmp
dec
push
aas
xor
shr
add
or
cltd
arpl
inc
dec
enter
add
dec
mov
mov
cmp
nopl
inc
dec
fisttpl
js
stc
test
mov
call
cmpsb
add
jmp
sbb
int
in
inc
scas
loop
inc
sub
add
das
pop
push
xchg
es
jmp
add
adc
add
scas
stos
add
subb
xchg
mov
jecxz
stos
mov
add
add
add
cmp
or
arpl
inc
or
out
add
mov
dec
push
sbb
pop
mov
iret
add
push
repnz
push
or
fcomip
adc
cld
cmp
inc
jmp
mov
sub
push
or
or
push
push
dec
sbb
mov
add
mov
dec
jo
push
sti
lahf
into
xchg
je
insb
add
or
iret
xchg
je
mov
clc
sbb
dec
pusha
xchg
xchg
into
xchg
je
int
clc
jmp
movsb
popa
mov
pushl
vandnps
loope
add
sti
push
push
jge
in
mov
push
xor
add
add
lock
mov
cmpl
and
and
outsb
jmp
jne
push
inc
push
adc
or
scas
aad
fwait
sub
inc
cmpsb
std
or
add
adc
push
jp
add
data16
sti
sub
mov
pusha
cmp
call
add
push
mov
add
add
fistpl
out
mov
mov
cmp
push
popa
ljmp
mov
push
xchg
call
jmp
pop
out
add
ror
mov
mov
lods
in
les
adc
decl
mov
jmp
decl
mov
ja
incw
jecxz
outsl
dec
ljmp
add
add
addl
insb
inc
fs
jmp
push
xchg
int
dec
cmpsb
mov
push
notl
jmp
andb
adc
mov
xor
lods
leave
jge
cmp
jge
iret
inc
andb
vminss
jmp
inc
int3
cmp
lds
xchg
mov
cmp
faddl
add
cmpsb
stc
jmp
ljmp
in
xchg
sub
xchg
xor
add
data16
hlt
mov
call
roll
jg
adc
pop
lahf
loop
stc
data16
rol
pop
mov
dec
addb
mov
jb
jnp
mov
scas
je
mov
stc
sti
jl
jg
inc
pushf
loope
xchg
rorl
add
aaa
pop
push
sti
inc
bnd
push
pop
pop
sahf
mov
jb
test
fs
push
sti
mov
mov
jmp
sub
or
sbb
filds
add
inc
add
imul
xchg
jmp
add
xor
jmp
cld
dec
push
xor
lds
push
rcll
jp
push
dec
sti
incl
add
lds
outsb
or
fisttps
shll
test
testb
int3
std
xchg
xchg
jne
sarl
call
adc
xorb
mov
loope
test
ja
add
push
xor
dec
xlat
dec
push
js
mov
pop
in
jmp
fldl
dec
arpl
fs
decb
mov
ret
out
push
add
jl
jge
push
notl
leave
pop
add
dec
xlat
rolb
pushf
push
mov
jl
fcompl
shll
adc
pop
in
jmp
pop
jp
arpl
fmull
sarl
add
adc
dec
in
pushl
inc
sbb
fdivrl
cwtl
pop
jg
dec
xor
add
inc
lcall
sahf
pop
sti
dec
mov
cmp
adc
mov
mov
push
push
pop
xchg
call
test
push
cmp
aad
xlat
aas
cwtl
jle
dec
push
push
and
mov
lds
iret
and
mov
add
xchg
jecxz
adc
dec
repnz
dec
lret
lds
jge
stos
insb
mov
add
add
in
data16
dec
add
push
test
lcall
cld
cmpsb
pop
popa
or
mov
dec
sti
push
push
add
dec
xchg
add
fcos
dec
pop
bound
push
pop
ret
add
add
call
inc
test
fwait
xchg
daa
call
insl
mov
fs
rorl
pop
inc
sti
je
add
add
clc
add
dec
push
adc
mov
xor
sti
dec
adc
lock
repz
cld
test
xor
mov
inc
or
outsb
or
lods
fisttpll
fnstcw
outsb
or
sahf
cmc
pop
addr16
outsl
or
xor
test
aas
cld
call
hlt
pop
leave
je
add
add
popf
flds
xor
sti
add
xchg
jnp
pop
sub
mov
or
cli
mov
outsl
inc
pop
adc
add
fnstcw
and
mov
adc
mov
and
xor
pusha
mov
ret
and
cmp
dec
pusha
mov
and
ret
and
adc
push
cmc
pop
fsin
add
add
in
sub
adc
push
aaa
bound
and
addb
sbbl
mov
orl
out
js
addb
mov
jne
fsin
lret
andl
les
pop
ror
decb
mov
je
lret
ret
and
fcmovnb
or
pusha
jbe
imul
jns
jmp
jns,pn
stos
cmpsl
add
outsb
pusha
iret
pop
inc
mov
add
cli
movsl
movl
fwait
dec
jae
scas
or
and
lods
push
fistps
jg
inc
rcrl
call
sub
lods
mov
adc
call
dec
iret
xor
jmp
rep
mov
adc
mov
hlt
js
or
mov
add
add
add
bound
jp
jmp
mov
out
fisttpl
hlt
insb
aaa
movl
jmp
dec
dec
adc
add
push
je
inc
jmpw
inc
jb
dec
adc
jo
inc
jg
xor
dec
fimull
jmp
dec
enter
pop
push
lahf
fwait
hlt
add
add
hlt
sti
cld
or
inc
jmp
hlt
jle
sbb
push
and
mov
cld
adc
sub
cmpsl
adc
aaa
in
testl
or
lods
lahf
in
imul
mov
mov
adc
pop
test
xor
sarl
inc
int
std
jne
lods
xchg
or
mov
add
mov
lods
orl
pop
mov
add
mov
inc
and
mov
adc
pusha
mov
ja
das
inc
dec
dec
cld
cld
psubsb
dec
inc
or
pusha
add
sub
add
xor
cmp
add
test
dec
sbb
incb
dec
jp
add
add
mov
jecxz
jp
sub
out
popa
inc
adc
add
sbb
inc
andb
decl
dec
popa
mov
lcall
sbb
sub
inc
jb
stc
je
sub
sbb
cmp
adc
sub
pop
mov
out
sti
dec
lret
mov
ljmp
dec
fidivrl
add
mov
jne
add
imul
int3
addr16
sbb
add
xor
stc
insb
shrb
dec
and
inc
push
dec
insb
mov
mov
call
dec
sub
pop
ja
mov
or
mov
add
pop
sbb
popa
mov
add
test
jl
jmp
pop
or
sti
jb
add
push
mov
cmp
nop
idiv
push
outsl
or
push
rcrl
pusha
sub
sbb
das
adc
aas
push
cli
mov
mov
je
fildl
jmp
xor
xacquire
popa
pop
inc
je
cwtl
mov
add
lods
sti
add
out
icebp
mov
push
mov
cmp
cmp
test
cmp
mov
dec
gs
aaa
or
incl
xor
dec
dec
jb
test
mov
sbb
testb
mov
pop
and
or
leave
mov
lods
or
jmp
inc
dec
les
and
les
in
xchg
addl
add
mov
sbb
sub
je
and
sti
mov
add
pop
dec
std
adc
rorl
test
or
repz
jae
lret
mov
push
jg
roll
out
idiv
rclb
pop
aam
out
orb
shll
push
decl
lock
or
inc
adc
mov
adc
add
sub
cmpsl
mov
adc
ret
and
sbb
and
ja
idiv
pop
roll
fisttpl
pop
adc
inc
push
pop
incl
sub
inc
adc
nop
call
pushf
jp
jns
repz
shrl
arpl
and
icebp
and
loope
jmp
adc
mov
divl
add
iret
inc
in
int
js
sub
lods
aad
rcr
cwtl
jo
clc
test
iret
inc
mov
jbe
inc
sbb
cmc
rcrl
je
clc
adc
mov
icebp
insb
inc
mov
dec
add
dec
stc
lea
aas
mov
data16
jmp
push
stc
orb
call
xchg
test
add
push
push
xchg
inc
inc
jne
and
add
loopne
adc
call
adc
or
push
push
pop
xchg
jns
frstor
in
lea
imul
mov
cmp
pusha
mov
xchg
outsl
dec
sahf
int
sti
xchg
arpl
xlat
scas
or
mov
mov
mov
data16
add
mov
add
lcall
xchg
cmpl
cld
jne
lahf
mov
sarb
je
pop
sahf
daa
mov
xor
call
aas
xchg
call
js
lock
jg
xorl
cld
call
adc
inc
mov
call
add
add
mov
scas
dec
pushf
ds
sbb
scas
dec
pop
dec
rcll
mov
shrb
test
inc
rclb
mov
ds
les
or
enter
hlt
rolb
jp
inc
cld
lret
adc
test
dec
inc
popf
pop
call
xlat
pushf
jecxz
les
aad
pop
sahf
aas
cld
adc
pop
add
add
push
mov
daa
test
call
adc
add
add
dec
js
or
dec
stc
cmpsw
sub
jmp
insb
repz
mov
mov
int
nop
mov
push
sub
cltd
dec
inc
int3
cmp
hlt
mov
lock
sub
dec
inc
sbb
add
pop
sbb
test
je
movsl
out
jl
mov
jo
out
dec
dec
test
stos
enter
sub
iret
jecxz
add
adc
jo
add
dec
stc
xchg
pushf
out
jmp
in
test
scas
jnp
jne
es
leave
adc
add
dec
stc
mov
dec
stc
cmpb
jne,pt
add
add
les
and
call
jno
cltd
lret
or
test
push
into
in
shrb
and
inc
jmp
dec
out
test
stc
add
clc
call
and
lret
push
aas
arpl
rolb
mov
inc
data16
cmc
sub
aaa
sub
cld
xchg
mov
add
jne
std
je
in
adc
or
sbb
shl
sti
andl
inc
add
add
inc
out
inc
and
jb
push
out
daa
shlb
addb
xor
ljmp
jmp
mov
jg
es
add
dec
cmp
jnp
add
sub
pushl
jg
and
rol
mov
cld
cmp
push
inc
dec
imul
cmp
jmp
mov
and
aam
adc
push
cmp
testl
call
xor
mov
out
call
xor
inc
dec
jnp
daa
enter
mov
add
add
add
fistl
sub
xchg
incl
add
hlt
pop
ds
sub
mov
sbb
lahf
push
mov
cmpsl
adc
outsb
das
jo
lret
jne
mov
cmpsl
xor
pop
add
btc
add
stc
dec
ds
jmp
aam
adc
sbb
mov
les
add
mov
roll
xor
rcl
cmp
adc
and
add
aad
sbb
add
dec
jne
pop
xchg
mov
adc
push
jbe
mov
stc
mov
cmp
cmp
loope
jmp
cld
mov
jne
fnstenv
adc
and
jne
aas
xor
jo
add
cmp
sti
fcoml
sti
add
out
jmp
sbb
push
inc
jg
jmp
sti
gs
jne
and
sub
or
hlt
lcall
inc
cmpsb
jns
or
xor
or
dec
cld
jne
sub
jge
std
cld
cmp
push
pcmpeqb
outsl
and
test
mov
test
sbb
addl
dec
inc
push
inc
outsl
outsl
and
outsl
outsl
and
imul
push
sub
push
mov
add
pop
adc
mov
adcl
stos
push
add
in
ds
adcl
fwait
jecxz
jne
daa
cld
jne
cld
push
push
dec
cmp
and
sbb
and
into
sub
stc
stc
ljmp
push
jnp
sbb
mov
push
cld
jb
std
adc
jnp
sbb
add
inc
xor
call
sub
dec
fimuls
push
aaa
mov
std
cmp
stos
and
mov
clc
add
dec
jo
jae
clc
aaa
jae
dec
ss
stos
adc
nop
incl
arpl
adc
lret
filds
add
xor
dec
test
push
cmp
icebp
incb
mov
cmp
cmp
cmp
in
adc
stc
and
dec
cmpsb
sbb
pop
in
adc
stc
outsb
pop
xor
test
nopl
xchg
adc
and
cmp
add
add
testl
test
inc
xchg
add
dec
cmpsb
xchg
dec
jne
xchg
mov
in
je
mov
add
clc
loope
cltd
gs
adc
icebp
sti
pop
cmp
inc
jns
into
test
pop
nop
mov
mov
mov
dec
stc
xchg
jge
sbb
jl
adc
mov
je
sarl
leave
cmc
dec
ss
loop
dec
mov
xor
repz
ss
add
or
jne
dec
cld
jne
icebp
push
inc
sarl
pop
or
out
aaa
and
jmp
mov
jge
test
data16
out
ljmp
add
add
cld
and
dec
mov
out
pop
and
jmp
mov
mov
push
leave
push
fsts
data16
mov
in
in
cltd
icebp
cmp
push
add
dec
mov
or
push
and
xchg
mov
fstps
inc
jg
mov
or
add
arpl
incl
adc
call
nop
add
adc
and
hlt
xor
incl
add
or
cld
pusha
add
adc
and
mov
mov
add
js
sub
jnp
mov
js
in
sbb
loope
stc
mov
add
inc
mov
stc
jmp
lock
mov
mov
incb
dec
jge
mov
lret
sub
adc
stos
add
fdivrl
pop
and
popa
adc
ss
cmp
aaa
mov
add
shl
xchg
stc
jmp
dec
psubw
es
xlat
shrl
cmpsl
scas
add
test
rcl
and
daa
add
add
cld
add
dec
mov
adc
rolb
jmp
mov
filds
jmp
mov
add
dec
iret
push
xchg
dec
addb
in
or
popa
push
nop
rorb
cmp
xor
out
gs
jae
inc
or
inc
jmp
sti
cmp
repnz
sti
mov
add
cmp
scas
inc
mov
ret
cmp
cltd
sti
or
mov
sbb
add
clc
add
fs
mov
sahf
sbb
add
subl
mov
vucomisd
cmp
sti
cmp
outsb
xor
clc
decb
inc
jl
xor
cld
push
mov
in
cld
incl
add
mov
ds
inc
in
fidivl
push
lcall
aad
in
aad
mov
arpl
call
inc
sub
jnp
out
dec
out
lret
inc
sti
rorl
lods
pop
sub
add
les
call
dec
inc
in
mov
rolb
add
pushl
xor
pop
adc
loop
add
add
jl
mov
shlb
and
icebp
decl
int
xor
sub
cld
jns
pop
sub
and
mov
stos
insb
ljmp
add
sbb
and
lret
cld
dec
cli
cmp
cmp
fs
popf
mov
cmp
xor
xor
xchg
cwtl
lahf
call
add
pusha
mov
xor
xlat
pop
mov
fadds
ror
pop
mov
shlb
push
jge
insl
inc
cmp
or
sub
in
mov
out
sar
int
inc
loopne
cmp
fdivr
xor
test
jo
jmp
negb
xor
addr16
push
sub
xor
pushf
mov
cli
mov
cmp
mov
bound
inc
aas
jmp
or
call
mov
dec
xor
and
mov
inc
sbb
xor
or
dec
lock
dec
stc
call
insl
or
push
adc
xor
mov
push
add
add
add
shr
mov
or
shlb
dec
cld
je
add
std
incl
es
out
sti
ljmp
cld
cltd
cmpl
mov
sub
sar
inc
shlb
std
xchg
dec
jecxz
out
cld
data16
add
cmc
cld
push
mov
adc
add
mov
pop
pop
jmp
inc
stos
aas
shl
cld
push
jmp
mov
pop
cltd
daa
das
rorb
add
lods
push
inc
dec
dec
clc
lcall
hlt
mov
ret
dec
xor
sub
addb
pop
cmp
mov
push
in
inc
dec
inc
dec
ja
fdivrl
push
call
lods
test
pop
mov
call
outsl
jl
push
xchg
xor
add
lret
idiv
decl
xlat
daa
dec
and
inc
and
dec
incb
dec
and
sbb
pushl
pop
dec
inc
dec
das
adc
gs
pop
jmp
or
jmp
add
stc
xchg
das
imul
movsl
popa
hlt
add
mov
dec
das
jmp
add
aaa
cmp
pop
xchg
das
shll
std
mov
movsl
and
add
mov
add
je
sub
mov
sbb
jmp
ret
fdivs
mov
pop
jne
ret
sarb
add
mov
movl
cs
add
es
cli
out
add
cmp
jb
mov
sti
bound
sti
sbb
jge
add
add
adc
xchg
add
add
dec
stc
jne
int3
lods
or
fcomps
push
jle
inc
movaps
shl
mov
inc
add
lock
jmp
adc
and
cltd
jns
or
addr16
rcrb
add
add
stc
jmp
add
gs
or
adc
xor
or
aas
and
dec
jecxz
xchg
push
xchg
add
pop
pop
pop
mov
pop
in
add
fsts
dec
sub
mov
clc
lahf
pop
add
mov
mov
pop
jge
loop
out
add
idiv
add
fildl
je
jns
pop
add
add
imul
out
mov
dec
popf
dec
jae
xchg
inc
inc
and
testb
daa
sbb
enter
dec
pop
pop
mov
addr16
notl
and
in
in
cld
orb
mov
mov
loop
push
sub
adc
dec
adc
add
sbbl
dec
int3
sub
cld
cmp
inc
dec
push
js
inc
mov
pop
lea
inc
adc
stc
jmp
mov
add
cmp
push
jge
jmp
cltd
dec
ljmp
adc
lret
ljmp
ja
adc
ret
mov
movsl
loope
mov
add
test
add
cmp
xorb
adc
jmp
js
aad
sar
movsl
or
divl
sub
sub
data16
sarl
sub
lret
add
sub
add
add
add
pop
jb
sbb
sub
mov
stc
mov
sub
bound
movaps
add
add
add
inc
sbb
sti
mov
cmpsl
or
adc
mov
das
add
inc
fs
je
push
sbb
jle
sti
mov
push
adc
je
push
sub
orb
cmc
push
jb
movb
mov
sub
sub
jns
add
stos
fcos
cmc
and
scas
hlt
mov
inc
push
mov
push
addl
add
mov
int3
repz
jmp
fsubl
xchg
push
call
xor
lea
sbb
call
das
jle,pt
mov
mov
jmp
xchg
dec
xor
mov
and
dec
xorb
je
push
xorb
clc
inc
sar
test
mov
and
and
dec
adc
incl
add
fadds
popf
leave
inc
adc
dec
ficompl
pop
mov
imul
sahf
inc
jae
fbstp
and
shlb
dec
adc
inc
imul
lds
cmpb
popf
sub
enter
dec
jb
test
aas
jne
fwait
mov
cld
mov
adc
orl
add
mov
jno
xor
jp
cld
add
add
jg
inc
xor
pop
mov
imul
sub
sbb
and
lds
sub
jae
enter
push
adc
jns
outsl
dec
stc
jmp
ror
lds
jp
sbb
xchg
das
rol
and
leave
jl
cmpsb
mov
clc
arpl
pop
cli
inc
push
add
add
and
test
jmp
clc
lds
add
movsb
pop
mov
jo
add
stc
data16
testb
xchg
jle
xor
addr16
lock
push
mov
and
push
xor
call
je
negl
push
stc
add
pop
imul
call
shll
adcl
pop
mov
call
push
sar
and
stos
loope
sub
add
jnp
shrb
sbb
sbb
or
jle
and
push
bound
incb
add
adc
push
call
jno
jmp
ljmp
cli
sbb
rcrb
add
mov
outsb
faddl
add
das
imul
lcall
cmp
sti
jl
mov
pushw
scas
movsb
ds
push
or
xor
add
fnstsw
test
mov
lret
cmpxchg
add
mov
jmp
jae
std
ljmp
and
add
mov
xchg
ja
mov
stos
jmp
add
jns
js
or
mov
and
add
xchg
inc
jae
jecxz
test
dec
call
xor
push
daa
or
mov
decl
incl
adc
inc
push
or
inc
and
pop
add
lds
dec
dec
iret
cld
bound
inc
dec
cmp
add
add
stc
sub
iret
aaa
cmc
jp
inc
les
pop
scas
sub
pop
call
jle
hlt
leave
enter
stc
jmp
shll
jmp
sbb
mov
loop
add
jmp
and
movsl
add
scas
aam
es
mov
add
mov
popa
jno
jmp
les
add
dec
jo
mov
cmp
and
lahf
leave
ret
or
add
cmp
imul
jae
in
lahf
insb
nop
add
dec
outsb
inc
popa
ret
nop
add
dec
jno
sbb
xchg
inc
or
and
jmp
dec
and
inc
sbbb
shlb
jl
shrl
sub
xchg
sub
mov
add
leave
mov
bound
imulb
pushl
stc
lea
sbb
dec
stc
or
adc
pop
outsl
nop
sub
fadd
dec
jne
pop
insb
rolb
mov
cmp
mov
clc
je
clc
mov
das
jmp
std
add
jae
lea
jecxz
aaa
std
add
jle
fimull
jle
mov
inc
add
add
sbbb
in
mov
jb
jl
pop
mov
push
or
ljmp
inc
rcrb
push
jmp
jecxz
mov
add
jle
push
loopne
pop
cmp
jbe
mov
or
cmp
add
push
jae
das
xchg
cmpsl
aaa
pop
ret
xchg
inc
jbe
addr16
aad
out
addr16
cld
int3
cmc
adc
adc
cmp
push
cmc
add
sub
xchg
mov
inc
jecxz
mov
loop
and
enter
outsb
lea
stos
lret
ret
movb
addr16
sub
pushl
sbb
xchg
incb
mov
jo
or
jo
dec
adc
lea
push
stc
insl
rcll
and
cmp
loopne
pop
lret
add
sub
shll
and
sub
mov
sub
xor
sub
mov
cmp
test
inc
dec
stc
sbb
in
test
iret
or
mov
adc
ds
cmc
mov
cmc
mov
mov
cmp
cwtl
or
add
sbb
movsl
jecxz
xchg
add
mov
sbb
pop
insl
inc
add
add
xlat
xchg
aam
movl
out
inc
jl
pop
pop
jo
in
lahf
mov
dec
stc
push
sbb
in
fisttpl
test
enter
lret
mov
cmp
shlb
mov
push
in
test
add
push
fwait
scas
dec
stc
lea
pop
fistl
jmp
jae
ret
inc
pop
loope
mov
add
mov
sbb
push
fisubl
or
and
dec
stc
add
dec
decl
loopne
sti
pushl
addr16
jae
add
push
test
btl
add
adc
push
cmp
ljmp
ss
push
cmpsb
jle
push
testb
cmpb
add
adc
add
add
imul
add
outsl
cmp
decl
dec
adc
not
jno
jle
fbld
jecxz
arpl
cld
test
sbb
ljmp
adc
dec
or
jno
xchg
into
ret
and
adc
xor
add
stos
inc
mov
cmp
subb
call
and
add
inc
sub
cmp
jnp
cld
aam
or
in
xor
add
xchg
cs
sbb
sbb
inc
push
mov
mov
sbb
xor
xor
cmp
into
insb
std
faddl
xor
mov
dec
rcll
jbe
cli
xchg
out
sub
add
cli
push
loop
int3
cmp
les
add
sbb
test
sub
mov
add
jecxz
call
sub
xchg
sbb
dec
insl
jmp
notb
sub
mov
mov
jmp
xchg
aaa
stc
mov
ret
shlb
and
paddsw
shrd
pop
or
add
add
mov
pop
sub
mov
add
jg
and
lods
dec
aaa
or
push
add
or
bound
pop
push
dec
mov
pop
bound
cmpsl
in
mov
ret
dec
jbe
adc
ficoms
jg
inc
sbb
das
test
and
dec
pop
add
add
inc
test
nop
adc
sahf
dec
pop
inc
mov
fldenv
testb
jmp
andl
jae
or
cmc
add
out
test
cli
ljmp
push
jns
lss
pushl
imul
fldl
add
fstpl
rclb
push
sub
sub
std
sti
cmpb
push
adc
add
cmc
faddl
add
dec
mov
jb
or
xchg
in
mov
and
mov
lods
fcmovbe
cmp
or
sar
mov
into
lods
push
or
adc
adc
push
push
jle
orb
or
aam
add
mov
or
pop
push
sub
xchg
sbb
cmp
xor
jecxz
mov
push
sarb
adc
add
cmpsl
xchg
push
add
push
inc
xchg
aad
cmc
sbb
pop
repnz
stc
iret
ret
xor
sbb
mov
sbb
ljmp
lea
adc
cmp
mov
scas
pop
scas
add
add
sbb
fdiv
xchg
mov
mov
mov
hlt
lahf
push
mov
test
and
mov
sbb
ret
mov
sbb
xchg
mov
hlt
mov
mov
data16
in
add
aaa
out
sti
push
inc
sub
lcall
adc
mov
in
add
add
shl
lcall
dec
cmp
jmp
sar
sub
pushf
jp
jge
js
in
lea
aas
jg
adc
aad
pop
add
push
decb
cmp
pop
addl
outsl
jg
test
out
adc
add
rolb
add
dec
cld
jne
out
dec
or
mov
fisttps
and
int
mov
movsb
xor
cld
mov
jecxz
xor
rorb
out
xor
dec
sti
bound
mov
mov
cmp
out
pop
cli
call
test
mov
add
shrl
cmpb
add
es
jae
or
in
mov
roll
add
mov
fcmovnbe
adc
cmp
mov
cmovb
xchg
mov
lds
movl
push
stos
xor
pop
loopne
rol
daa
lds
pop
add
adc
sub
and
rcll
inc
push
popf
aas
jae
jo
adc
add
or
mov
xor
adc
mov
inc
adc
push
rcl
or
dec
repnz
ret
add
loopne
stc
sbb
test
dec
stc
jp
sub
jb
shr
sub
mov
insb
inc
cmp
cmp
add
cli
stos
mov
std
jmp
mov
mov
in
add
add
insb
inc
cld
fmull
mov
adc
cmp
jge
nop
inc
js
pop
dec
mov
mov
notl
inc
fnstenv
cld
dec
aaa
test
dec
inc
cmpsb
scas
and
sbb
sub
cmpsb
pop
rcr
adc
mov
sti
call
jb
ja
cld
ror
rolb
add
pop
or
arpl
add
test
add
add
in
ret
dec
lahf
add
sar
dec
mov
lea
popa
lret
adc
push
xor
and
and
out
xlat
cmp
cmp
testl
push
add
fsts
add
xchg
jbe
mov
inc
pop
or
jae
lea
add
xor
adc
std
push
jmp
roll
cmpl
pop
xor
push
jmp
mov
outsb
dec
or
and
mov
add
jno
push
dec
jecxz
dec
std
add
jae
roll
add
add
es
mov
xor
add
add
rcrb
mov
mov
inc
dec
cmc
aas
dec
dec
cwtl
and
int
cld
jp
push
lret
pop
imul
cmp
xor
mov
in
inc
pop
dec
in
jnp
into
stos
cmp
dec
and
pop
push
ret
cwtl
sub
cld
outsl
lret
cwtl
sbb
adc
jb
repz
or
clc
sub
add
jge
incl
dec
mov
call
sbb
and
andl
jmp
add
daa
jmp
add
outsb
inc
sbb
jmp
add
cmp
xchg
stc
jmp
mull
sub
cmp
xchg
and
js
test
add
mov
ja
jmp
add
add
dec
test
jnp
aad
sbb
sub
jle
lds
jae
adc
jmp
stc
sub
dec
stc
add
dec
push
adc
insb
mov
aas
roll
cmp
push
add
fchs
cmc
das
je
adc
cmpsb
jns
xor
pop
or
mov
push
or
add
lret
std
jle
cli
add
dec
push
adc
insb
or
push
rorl
jmp
test
das
inc
mov
push
jne
pop
jmp
fisttpl
sub
xor
sub
pop
out
add
mov
and
in
mov
dec
push
lcall
jno
lcall
aas
roll
inc
cld
jne
add
notb
std
jne
decl
cmp
cld
jns
sbb
es
and
add
aaa
cmpb
je
jo
lret
inc
cmpsb
inc
cld
adc
or
jne
cmc
cli
sti
je
insl
ja
cli
std
adc
jmp
outsl
or
cld
jecxz
sbb
and
mov
int3
add
add
add
add
sub
and
pop
or
fwait
pop
andb
cld
xor
push
dec
sub
andb
mov
daa
pop
lock
or
sub
aam
dec
and
push
mov
xchg
cld
rclb
add
mov
add
xor
and
out
add
fnstenv
or
sar
jns,pt
std
je
push
movl
outsb
pop
iret
sbb
add
jmp
jp
sbb
inc
cmpsb
shll
aas
testl
and
test
mov
sbb
or
cld
call
jne
cwtl
xor
call
push
add
add
fdivr
test
rorl
jne
cwtl
dec
enter
div
inc
mov
in
add
add
and
dec
stc
dec
mov
dec
stc
lea
sti
push
mov
out
aad
or
adc
xor
pop
or
jl
adc
addr16
inc
jmp
inc
or
enter
test
add
add
mov
lahf
movsb
mov
fimull
add
mov
or
inc
jne
or
sub
jmp
and
sti
jmp
clc
std
cld
jmp
mov
in
cld
jne
sub
add
jae
push
pop
mov
add
mov
test
std
push
sub
aaa
sti
mov
add
jne
cmp
add
add
jg
jle
xchg
mov
data16
testb
out
cmp
xor
ficoml
inc
out
inc
or
mov
xchg
inc
arpl
mov
call
cmp
jg
dec
dec
scas
cld
inc
and
aas
dec
mov
adc
mov
and
shll
and
add
incl
add
rcrb
dec
out
je
dec
push
add
xor
lds
mov
push
jns
add
add
lret
xchg
mov
add
inc
pop
adc
mov
mov
ds
in
push
adc
fcoml
cmp
and
mov
out
aas
dec
stc
iret
sti
sbb
add
add
add
add
adc
fstpl
jl
leave
and
jo
test
lock
cltd
js
or
popf
inc
or
sbb
popf
or
shr
add
sub
mov
clc
int3
clc
call
adc
je
cli
push
xchg
add
lcall
lds
add
sbb
out
push
jl
or
cmp
in
std
jg
mov
jb
addr16
mov
dec
aas
inc
push
dec
testb
adc
ds
ds
xor
cmp
dec
stc
data16
les
aas
aad
and
cmp
add
fs
popa
testb
pop
dec
stc
add
mov
cmpsl
fcompl
inc
dec
inc
add
add
add
mov
call
adc
gs
lahf
push
pop
fs
add
jg
add
iret
inc
add
pop
sti
adc
sti
addl
mov
cld
jmp
cmp
mov
xor
cld
adc
fistpll
data16
cmp
mov
sti
push
incl
add
sbb
or
test
cmp
imul
add
sti
std
adc
jg
push
add
cli
cmp
cmp
ret
cld
push
push
mov
adc
std
xchg
imul
sbb
jmp
push
les
cmpl
in
cmp
movups
cld
cwtl
mov
int3
enter
pusha
add
iret
add
orb
ja
pop
xchg
inc
jae
pusha
add
imul
inc
sbb
scas
cld
clc
popl
jbe
popf
cmpsl
decb
adc
cld
shl
add
lock
stc
sub
jle
add
pop
cli
cmp
lahf
jno
scas
roll
mov
add
mov
repz
clc
jmp
add
add
call
cs
jmp
icebp
sub
in
pusha
add
jmp
push
add
add
aam
pop
mov
call
arpl
add
in
add
mov
dec
mov
jmp
js
add
add
add
push
cmpsl
es
mov
in
and
int
mov
sub
mov
mov
lea
sbb
add
dec
mov
dec
mov
adc
jno
jl
fistl
test
add
jmp
out
add
jmp
ss
xchg
lret
ret
adc
xor
xchg
dec
push
stc
add
xchg
dec
push
stc
add
add
rcl
jb
popa
or
mov
add
inc
test
je
rolb
inc
stc
je
jne
or
sar
xchg
outsl
add
testl
aaa
in
iret
add
outsl
or
inc
cld
adc
repz
gs
pop
add
popa
pop
lret
push
mov
add
arpl
adc
cmpb
xor
inc
fdiv
xchg
dec
push
jnp
add
xchg
dec
lea
sub
in
je
mov
les
loopne
js
iret
add
lds
sti
rcll
or
sbb
add
push
out
xchg
pop
xchg
iret
mov
incb
add
pushf
sub
add
inc
sub
push
hlt
lea
les
daa
push
clc
lea
xchg
test
mov
arpl
xchg
dec
repz
imul
cmp
inc
aaa
stc
roll
adc
jmp
sbb
jmp
push
stc
fs
pop
out
cmp
pop
push
xchg
add
add
xchg
xor
outsb
dec
pop
add
pop
dec
stc
jmp
add
iret
addr16
adc
out
test
fs
sti
hlt
inc
ja
cmc
cltd
mov
mov
cld
jmp
mov
add
inc
ret
lds
add
push
stc
push
bound
and
push
fimuls
cmpsb
cmp
add
add
outsl
call
cli
add
roll
sti
rolb
jmp
dec
out
std
or
xchg
sbb
add
lret
lods
and
dec
movsl
sti
aam
lock
jmp
push
stc
add
and
and
jmp
push
mov
es
sti
hlt
pop
lock
jmp
mov
pop
add
add
or
jl
xchg
inc
ss
mov
aaa
cld
add
mov
add
mov
adc
mov
repz
ja
add
sti
dec
push
cmp
adc
add
adc
je
clc
adc
xchg
mov
add
inc
mov
adc
xchg
mov
testb
add
jbe
inc
and
hlt
pop
test
add
int3
sti
add
sub
inc
push
cltd
clc
adc
mov
xor
xchg
sahf
add
mov
dec
dec
addb
or
or
adc
add
imul
sub
sti
jnp
sub
rolb
jns
sbb
inc
rolb
popa
addr16
and
adc
add
or
imul
sbb
and
add
inc
rolb
cmpsl
js
and
inc
adc
cli
cli
pop
cli
adc
fs
or
push
and
stc
pop
vpsubb
jns
jo
daa
ja
add
sbbl
daa
jae
popf
daa
imul
pop
adc
mov
stc
into
les
inc
stc
lret
in
add
ret
shrl
stc
mov
add
add
ljmp
js
test
icebp
jmp
out
xor
in
or
iret
addl
test
dec
insb
movsb
lahf
pop
xchg
fs
cmp
inc
mov
stc
jmp
dec
lret
std
mov
cld
add
adc
jne
inc
xchg
mov
sti
in
jmp
sbb
or
add
add
adc
out
dec
stc
test
xchg
cmp
repz
fcom
mov
push
filds
add
in
jp
jne
inc
mov
xchg
test
ret
shrb
push
xchg
jbe
jmp
jne
movsb
inc
std
pop
mov
push
clc
in
aam
cmpsl
sti
add
jecxz
add
mov
add
hlt
or
cmc
testl
pop
adc
shlb
cmp
mov
jno
adc
orl
mov
idiv
or
std
je
inc
je
cltd
loop
adc
cmc
push
pop
movsb
out
push
cmp
sub
add
andl
pop
jmp
add
cmp
ret
in
jne
add
add
adcl
dec
push
adc
add
out
jb
cld
out
mov
rsqrtps
pop
sti
cmp
inc
dec
cmp
pop
adc
sub
add
sbb
xchg
fwait
xor
decl
incl
inc
nop
aam
dec
popf
adc
addb
dec
pop
xor
imull
clc
sti
loopne
adc
bound
jne
mov
adc
add
add
add
sbb
add
xchg
repnz
or
aas
dec
or
xchg
and
cmpsl
stc
movsb
or
gs
sti
loopne
xor
sub
jno
outsb
lods
sbb
jmp
std
sub
push
cli
xchg
setge
fwait
pop
xor
loope
pop
in
faddl
fwait
pushf
lds
stc
pushf
mov
add
or
mov
lcall
fadd
outsl
add
add
jmp
and
inc
dec
test
cli
in
dec
aaa
cli
sbb
movsb
popf
cli
les
mov
mov
repz
add
idivb
adc
pop
jb
push
dec
icebp
into
stos
dec
cmc
push
in
je
jnp
or
mov
jl
add
inc
adc
loop
add
cmp
cli
adc
je
and
outsl
or
inc
int
sub
pop
stos
pop
stc
push
out
add
sbb
add
jle
je
jo
jmp
or
loop
jns
sub
adc
pop
hlt
je
sahf
in
sti
and
loop
and
lcall
add
adc
rorb
inc
sub
add
sub
add
mov
add
in
adc
in
or
cld
test
ficoml
xor
fisttpl
divb
test
addr16
decl
divb
bnd
cmp
je
and
sti
adc
notb
ret
push
mov
ljmp
mov
jmp
dec
mov
jle
add
add
imul
hlt
or
pop
dec
xor
adcb
js
push
sti
cli
in
push
sti
loop
stc
jne
aaa
or
mov
or
test
or
idivl
cmp
add
mov
lret
loopne
add
mov
es
loopne
push
rcr
and
add
add
add
jg
stc
iret
in
dec
add
mov
add
mov
out
add
test
jb
jp
outsb
andb
ja
arpl
test
bound
dec
ret
push
ja
inc
mulb
xlat
lret
push
push
sbb
inc
dec
push
xor
push
stc
mov
sub
stc
jecxz
shrb
outsl
add
add
imul
jnp
gs
sbbl
cmp
in
insl
ret
pop
or
sub
test
and
inc
jmp
jo
aad
and
dec
out
add
adc
aas
cmp
daa
xchg
mov
jmp
test
repz
ds
inc
insl
cs
and
add
call
ljmp
sub
loope
add
xor
sti
cmp
xchg
pop
pop
xor
xor
fiadds
sbb
rcrl
pop
lods
adc
stos
dec
stc
push
out
in
sbb
decb
add
cmp
add
xorb
jmp
test
imul
sbbl
or
std
ljmp
dec
sub
push
call
xlat
idiv
pushl
ja
notb
mov
sub
push
dec
mov
jg
or
xor
loopne
sub
out
aas
add
clc
add
jno
idivb
negl
call
add
gs
mov
rcll
out
dec
loop
icebp
xchg
decb
pop
in
call
aam
push
mov
loop
inc
inc
mov
add
dec
cwtl
int3
push
psrad
jb
jp
fiadds
aad
add
or
dec
enter
enter
push
adc
pop
cmp
lret
add
mov
inc
inc
pop
imulb
fbstp
rorb
dec
aaa
pop
mov
push
aam
roll
add
add
icebp
pop
les
int
repnz
mov
aad
popa
dec
lret
test
jnp
cmp
mov
in
mov
lret
pop
sub
cmp
pop
cmp
mov
dec
stc
pop
orl
repnz
mov
test
out
add
repnz
jge
js
pop
in
mov
mov
out
inc
repnz
insl
faddl
inc
repnz
xchg
insb
add
stos
or
adc
push
cmp
push
repz
jb
fldl
cmp
push
adc
mov
mov
ss
jmp
fsubp
mov
add
adc
mov
movsb
push
into
addr16
mov
ret
in
arpl
sbb
add
or
test
sarb
pop
xchg
cmc
cli
sub
insl
and
call
sbb
dec
not
movsl
mov
add
icebp
ljmp
out
jp
ficoms
xlat
jne
or
add
cmp
cmp
in
xor
and
cmp
orb
add
cmp
divb
cli
into
cmc
lods
imul
dec
mov
jmp
jne
movsl
sbb
sub
mov
mov
and
cmp
mov
and
add
outsb
add
in
lods
jge
je
or
mov
push
push
les
dec
mov
push
mov
repnz
sti
jne
cmp
sti
add
je
add
and
cmp
lea
rorb
mov
testb
dec
push
jmp
aas
or
push
clc
push
pop
sti
add
icebp
jne
pop
fsubrs
mov
push
adc
incl
scas
ljmp
loop
dec
inc
imul
push
mov
jl
and
sahf
fsubl
sti
ret
and
mov
clc
adcl
add
cmpsb
adc
or
xchg
dec
cmpsl
pop
enter
inc
loope
out
in
xchg
cmp
mov
gs
loopne
add
stc
mov
inc
clc
ss
icebp
clc
inc
dec
inc
sbb
sarl
je
popa
call
in
addr16
sbbb
testl
sub
push
out
outsl
add
add
dec
jmp
insl
or
or
mov
dec
stc
push
pop
xchg
fnstsw
adc
rolb
jmp
sbb
mov
or
clc
add
push
and
fisttpl
add
mov
imul
ja
iret
sub
sub
hlt
xor
sub
xor
sahf
sub
ds
lret
out
add
adc
xor
or
push
jne
idiv
cmc
xor
lds
inc
es
push
cmp
and
cmp
add
pusha
xchg
cmp
cmp
xchg
in
cmp
cmp
cmp
adc
cmp
sub
movl
sub
push
add
push
sub
arpl
call
repnz
pop
in
add
movsl
clc
call
popf
dec
rorb
mov
addr16
add
mov
pop
shlb
jb
jge
dec
mov
mov
sarb
dec
cli
jb
dec
loop
cmpsl
xchg
jmp
cmp
jo
call
lods
push
fnstcw
add
add
mov
inc
fdivrs
scas
out
xor
aas
dec
pop
leave
jne
fiadds
outsb
lock
call
or
sti
cmpsl
fisttpll
int
loop
sar
push
sti
aas
pop
adc
cmpsl
add
xchg
clc
shll
stc
mov
mov
call
rorl
loope
clc
xor
mov
ret
call
add
into
fucom
add
adc
clc
jl
fidivl
add
cwtl
pop
dec
pop
call
ljmp
test
push
daa
test
lea
add
stos
inc
js
adc
pop
push
testl
push
sub
stc
je
xchg
jnp
pop
pop
add
gs
fmuls
mov
cli
pop
cli
loopne
sub
add
gs
test
test
iret
stos
dec
xchg
sub
stos
add
push
dec
out
icebp
dec
cmp
adc
stc
add
lds
jmp
push
stc
add
outsb
jb
icebp
imul
test
loopne
lahf
dec
stc
mov
cli
mov
sbb
sbb
out
mov
xor
add
mov
xor
or
subl
mov
sti
incl
inc
add
cmp
loope
jmp
test
pop
or
cmp
inc
pushw
push
xchg
or
idiv
add
loope
inc
cmpb
mov
in
shl
orl
or
jmp
int3
inc
idiv
je
ja
add
and
cld
push
pop
add
add
push
leave
hlt
stc
add
roll
gs
movsb
cmp
push
dec
daa
pop
inc
jg
add
data16
mov
mov
cmp
popa
aad
rorb
pusha
mov
aam
dec
jae
rorb
ds
sbb
jb
inc
push
call
sti
adc
jl
insl
mov
dec
imul
lock
stos
push
jmp
jmp
sti
les
out
std
enter
pop
add
sti
les
call
outsb
psubw
jmp
std
inc
inc
cmp
test
loope
xor
dec
adc
dec
incb
out
out
iret
jae
push
mov
out
cmp
inc
test
and
add
popf
je
out
out
out
jl
out
out
push
adc
movsb
adc
cmp
add
jmp
out
mov
xchg
loope
in
in
in
dec
insl
out
bswap
shlb
pop
jno
or
mov
insb
mov
sub
cmpsb
test
test
shll
sub
xor
mov
add
ds
ret
loop
push
cli
pop
sti
mov
dec
loop
push
arpl
add
add
jb
sar
pop
sub
out
pop
mov
jge
test
ds
lock
cmpsl
mov
dec
xchg
pop
insl
add
dec
ss
ss
or
add
loop
dec
add
add
cmp
jne
fs
aam
add
add
add
loop
in
fdivp
test
push
dec
add
dec
push
push
ficoms
xchg
cmp
mov
sub
or
cmpsb
stc
cltd
mov
sub
inc
and
bound
scas
mov
mov
movsl
mov
xorb
or
push
add
add
mov
inc
push
or
add
dec
pop
add
add
inc
dec
push
cmp
mov
loop
mov
xlat
jmp
dec
cli
inc
into
or
in
mov
fstp
rorb
in
andl
adc
hlt
xor
in
aaa
scas
loop
inc
push
lds
rcll
push
aaa
dec
jmp
or
add
rol
in
adc
or
jnp
inc
add
imul
rcl
arpl
clc
loop
and
shl
jo
jmp
cmp
lret
popf
aaa
call
ja
sbb
add
in
cwtl
jecxz
push
ret
fisttps
out
test
inc
jnp
aaa
call
add
push
ja
rcl
cmp
add
add
push
outsb
push
shll
inc
jecxz
ret
inc
jge
in
jecxz
ret
sbb
add
mov
das
scas
cmpsl
add
jecxz
fdivr
xchg
jmp
pop
or
pop
xchg
fcompl
inc
stc
push
jb
in
rcl
and
dec
stc
push
push
fisubs
add
sub
insl
and
sahf
lods
jp
cmpsl
add
add
add
dec
je
int
jecxz
jmp
mov
pusha
aad
dec
rcll
dec
stc
test
adc
mov
jo
push
rorl
inc
sbb
repnz
jmp
ja
cli
cld
mov
cmpsb
add
out
jae
fcom
adc
add
add
fdivs
add
jb
pop
movsb
stc
add
sarb
add
add
cmc
add
inc
and
pushl
dec
or
push
loope
adc
inc
jle
jns
and
cmc
add
rcrb
cmc
push
mov
jnp
push
mov
inc
or
rcr
pushl
std
push
lcall
std
or
rorb
pop
add
add
aaa
sti
pop
out
repz
dec
dec
mov
add
push
or
repnz
pop
adc
mov
movsb
cmpsl
xor
push
scas
mov
dec
and
call
cmp
xchg
lret
lds
mov
push
shll
push
add
or
popf
loope
dec
inc
repnz
incb
add
mov
mov
int3
xor
or
and
mov
push
lret
cmpsl
add
mul
mov
stc
lea
call
in
cwtl
xor
xchg
out
adc
aaa
pushf
arpl
daa
add
mul
mov
stc
dec
or
loope
xor
fistpll
add
cmp
movsb
mov
add
add
subb
out
or
pop
push
das
enter
fidivl
inc
dec
fidivrs
fsubs
add
gs
cs
loop
les
data16
dec
jns
jmp
aaa
loop
movsl
std
push
add
inc
loop
not
xor
xchg
add
stc
stc
adc
lret
ds
or
icebp
mov
mov
add
add
cmpb
insb
inc
add
cmp
add
xchg
add
fmuls
subl
mov
call
bound
adc
int
pushl
sub
ljmp
mov
jp
cli
mov
outsl
js
decb
notb
jae
je
add
add
mov
add
mov
mov
push
and
or
cmc
cmpsb
stc
add
fsubrs
inc
mov
into
mov
add
mov
push
sbb
add
out
mov
add
mov
jmp
push
scas
add
dec
jo
mov
xchg
inc
add
add
mov
lea
pop
pop
push
rorb
inc
ja
xor
xchg
stos
lea
in
fdivr
sar
out
dec
int
int3
lret
push
test
jne
push
pop
insb
and
into
mov
les
mov
cmp
add
out
jg
decb
stc
insb
push
add
add
pop
xor
mull
inc
inc
repnz
faddl
push
outsb
movsl
aas
jg
out
lcall
fldl
mov
jg
pop
enter
jno
lahf
mov
rcrb
aad
addr16
inc
xor
fisttpl
ficomps
cmpsl
mov
addr16
sbb
push
dec
stc
out
idivl
add
xchg
testb
add
in
lahf
mov
stc
out
inc
movl
ffree
mov
ss
add
dec
fsubl
inc
mov
push
push
jmp
jns
mov
adc
add
shll
or
pop
xchg
je
ja
dec
dec
mov
jb
pop
add
leave
mov
rcl
cli
movb
rolb
test
dec
and
outsl
mov
dec
stc
test
jo
cltd
xor
add
add
andl
add
ja
inc
outsw
in
je
divb
loopne
lods
imul
out
mov
ljmp
cmc
add
popa
dec
jmp
and
cmc
add
add
add
mov
add
je
loope
mov
inc
scas
lret
jae
mov
push
clc
adc
cmp
and
call
sub
cli
cmp
inc
stc
add
divl
mov
hlt
pushl
adc
jge
dec
push
hlt
adc
sbb
aaa
fbstp
lock
add
pop
xlat
sti
lret
lea
and
test
outsb
or
adc
fdivr
test
sti
loopne
push
cld
addr16
inc
dec
xor
ljmp
getsec
push
xchg
jmp
dec
daa
ret
nop
cmp
push
psubw
xchg
int
fnstenv
mov
fcomps
incl
add
xchg
ficoml
add
call
xchg
int3
pop
fnstenv
mov
fsubs
push
lods
cli
cmp
pop
test
xor
scas
cmp
add
out
sysenter
and
dec
stc
mov
sti
jns
or
out
addr16
add
sub
psubw
fcmovnu
cmpsl
inc
mov
or
subl
add
add
jne
sarl
cmpsl
cmpsl
rcll
or
test
mov
roll
test
mov
enter
push
jb
jns
and
mov
dec
stc
add
lods
cmp
fs
daa
sub
lods
and
xchg
movsb
xchg
loope
cmp
inc
mov
xor
add
add
cmp
leave
dec
lcall
mov
ficompl
test
lods
cli
add
std
mov
data16
repnz
jmp
mov
xorl
ja
popf
lods
outsl
xor
add
cltd
scas
test
add
sti
jl
cmpl
pop
incl
add
jb
jne
jge
jmp
mov
mov
or
fdecstp
call
shl
mov
enter
std
jns
dec
fdivl
xchg
jecxz
push
stos
in
jmp
out
data16
scas
cli
js
mov
call
je
xadd
mov
incl
add
dec
addl
loopne
loop
or
ja
decl
incb
dec
loop
daa
cmpsl
xor
decl
cmp
into
add
rolb
aas
add
repnz
pusha
cld
rolb
flds
int
loop
sub
mov
stc
pop
push
push
xchg
in
rcl
mov
mov
stc
out
dec
stc
sbb
add
add
push
in
xor
std
add
clc
lcall
cmp
imul
jns
push
cmpsl
daa
add
dec
in
jmp
je
aad
fbstp
dec
loope
mov
aam
push
inc
stc
mov
mov
stc
pminsw
cmpsl
cmpsl
add
enter
add
push
lods
clc
out
out
add
mov
xchg
add
cmp
add
jl
push
fs
pop
lds
sarl
iret
jle
sub
jmp
xchg
sbb
jmp
push
add
sub
push
add
sbbb
mov
mov
lods
call
jae
sti
inc
bound
mov
lock
fisttpll
add
push
push
addl
add
cli
stc
hlt
sbb
inc
add
push
shll
decl
mov
mov
add
inc
inc
add
push
jmp
pop
outsl
add
xchg
or
cmp
or
sub
jne
add
mov
divb
mov
adc
dec
cmp
add
cmpsb
adc
xor
add
adc
cmp
add
outsb
jecxz
push
inc
call
or
sub
inc
testb
mov
cmc
push
mov
and
dec
ror
sti
lret
pop
pop
adc
loop
call
jmp
pop
mov
aam
mov
daa
dec
mov
negl
add
add
fdiv
je
push
ss
ret
add
adc
je
inc
cmp
ja
mov
cs
mov
sti
xor
les
xor
jl
adc
inc
dec
shll
push
dec
cwtl
lahf
sub
sahf
inc
dec
rcl
fcmovne
enter
ss
out
push
add
sub
arpl
orb
cwtl
sarb
fnstenv
inc
sub
lock
inc
out
roll
add
sarb
pop
stc
xchg
adc
jo
cmp
int3
into
fnsave
cld
or
mov
stc
fs
imul
dec
jae
out
pusha
cvtdq2ps
sarl
add
adc
or
ret
clc
xlat
xor
or
push
aam
inc
je
and
in
gs
and
leave
hlt
mov
add
adc
adc
shl
call
xchg
clc
add
add
inc
dec
jle
add
jge
cmp
loope
and
adc
mov
add
mov
xchg
dec
jne
ljmp
inc
jmp
es
jae
dec
es
cmp
ret
cli
xchg
cmp
pop
test
cmc
add
dec
pop
nop
decb
and
or
fs
and
call
xor
and
call
jmp
and
call
test
add
jae
int3
inc
lretw
pop
cmc
add
mov
adc
and
inc
xor
repnz
or
cli
fdivl
xchg
hlt
adc
cwtl
mov
hlt
aas
dec
dec
aad
loopne
cld
push
loopne
push
loopne
sti
cmp
out
aas
dec
push
call
mov
sbb
adc
stc
cmp
loop
dec
xor
adc
mov
loopne
gs
cmp
add
add
pop
sbb
outsb
lret
mov
mov
cmpb
loopne
mov
mov
incb
cs
lock
cli
test
mov
push
xor
push
stc
imul
adc
inc
sub
call
add
and
in
scas
repz
lretw
dec
inc
mov
gs
add
xor
jmp
orb
sbb
add
add
stc
push
push
inc
loope
xlat
xchg
int3
pop
dec
imul
fcompl
call
icebp
clc
cmp
hlt
sbb
push
int
xor
mov
popl
or
jmp
mov
cli
add
add
loopne
mov
in
into
push
and
add
sbb
sahf
cmc
test
call
inc
mov
dec
loope
cmp
add
adc
cli
pushf
aam
test
nop
clc
add
fisubl
stos
dec
sub
adc
add
cli
jge
fiadds
push
add
jle
or
xchg
mov
or
leave
mov
and
adc
pop
add
imul
cmp
jp
pop
fistpll
add
fcmovne
inc
imulb
push
mov
call
mov
ret
lea
jl
shlb
scas
shlb
add
pop
or
je
fldl
adc
cli
call
test
testb
xor
fists
shlb
jle
add
add
addr16
mov
dec
xor
mov
jns
jae
add
call
pop
aaa
jge
jae
jle
imul
add
inc
and
jo
push
pushf
sub
jg
out
fsub
jg
inc
inc
inc
and
mov
push
dec
push
inc
and
jo
cmp
push
sbb
dec
movsb
sti
lret
xor
push
pop
add
add
negl
mov
dec
mov
rcrl
add
mov
stc
lret
repz
dec
out
repnz
iret
xor
aad
inc
dec
aam
ss
jmp
push
out
inc
test
adc
or
sbb
mov
lret
or
sbb
and
out
pop
dec
add
testl
add
push
inc
dec
rol
jg
enter
mov
leave
leave
cmp
das
jge
cmpsb
cld
mov
adc
mov
les
jmp
dec
jns
jmp
mov
mov
sub
xchg
push
out
and
mov
push
data16
test
add
lds
cmp
add
add
dec
inc
iret
lret
add
pop
hlt
mov
dec
dec
call
add
dec
and
movsb
sti
je
test
push
out
lret
mov
add
aaa
cli
hlt
cmp
inc
jmp
adc
in
jle
ret
cld
jns
outsb
cmp
jne
aas
stos
push
test
std
push
mulb
fdivr
leave
mov
out
add
lea
add
inc
fnstenv
add
mov
cltd
movsl
pop
mov
mov
rorl
add
xor
jle
shlb
add
push
cmp
fs
mov
std
push
pop
fistpll
cmpsb
or
nop
xor
aas
dec
xchg
xor
add
add
or
mov
inc
push
push
add
aam
push
xor
fnstsw
ret
mov
repz
xlat
mov
cmp
dec
add
inc
outsb
cmpsb
daa
or
cld
cmp
out
pop
add
inc
xchg
jp
pop
push
push
leave
rorb
push
aaa
les
cmp
enter
dec
ret
and
cmp
add
add
call
fstpt
mov
fnstsw
jno
stos
jp
cmc
pusha
add
mov
cmp
xchg
jl
xor
pop
das
mov
sbb
pusha
mov
sbb
cmp
stc
inc
dec
or
inc
nop
mov
popa
inc
sti
jb
lret
xor
jb
mov
add
add
stc
fs
pop
cld
aad
mov
call
sub
mov
add
inc
adc
add
mov
ret
inc
fxch
add
cmp
mov
icebp
lock
jb
out
std
jb
int
sbb
dec
or
adc
adc
xchg
cmp
pop
mov
rorb
and
mov
add
cltd
cli
fcompl
cmp
aam
sub
jge
mov
xchg
or
je
icebp
mov
xchg
jnp
in
stc
sub
cmp
les
inc
scas
and
mov
inc
inc
shl
lahf
cli
jae
pushl
sbb
aas
push
je
add
mov
sbb
leave
movsb
ret
cli
push
add
add
adc
lea
jmp
idiv
stos
mov
jns
add
mov
scas
mov
inc
lcall
stc
mov
ret
jp
loope
hlt
sub
je
cmc
mov
rorb
addb
jae
pusha
or
test
lret
daa
sar
cmovg
add
adc
mov
cmp
sbb
lods
std
dec
rolb
cmpsb
pop
fwait
mov
stc
addr16
leave
dec
imul
cmp
jne
push
mov
xor
mov
pop
push
cmp
ret
cmp
xchg
arpl
sti
inc
push
lds
stc
insl
or
add
loope
add
add
cmc
cmp
mov
cmp
jmp
popa
sar
out
rcl
scas
pop
push
mov
push
jnp
sub
mov
shl
inc
repnz
xor
int3
xchg
xchg
aaa
inc
jns
and
lock
adcl
arpl
insl
or
ljmp
ss
ret
insl
ret
add
add
add
add
icebp
and
jmp
orb
pop
push
hlt
xorb
stc
add
adc
fs
jmp
dec
push
add
shll
fimuls
jne
jmp
stc
out
push
stc
add
and
mov
in
push
xchg
imul
xchg
xlat
mov
sti
call
add
add
jbe
hlt
mov
push
hlt
mov
push
dec
inc
jmp
syscall
test
jge
icebp
lea
mov
je
sub
testb
mov
and
testb
mov
jmp
je
es
add
sub
or
and
cmp
xor
addl
mov
sahf
imulb
or
push
lea
add
out
adc
add
lock
mov
sbb
mov
mov
outsb
dec
clc
jle
pop
decl
mov
jp
dec
mov
std
jl
iret
test
loope
rcrl
mov
or
inc
or
or
add
jle
lock
inc
and
iret
mov
add
add
pop
loop
addb
out
es
test
aas
add
andb
add
cmp
inc
fmul
jle
xchg
push
lea
out
xorb
cmp
pop
aam
and
stc
addr16
add
jns
hlt
repnz
push
ret
push
hlt
add
add
cmc
xlat
call
jg
pop
pop
jg
les
or
pop
inc
jnp
mov
hlt
loope
and
xor
or
mov
fsubrl
ror
gs
out
aaa
jae
lcall
mov
out
call
add
cmp
ds
add
add
stc
aam
rclb
mov
std
jmp
jg
dec
xchg
mov
in
enter
mov
mov
mov
mov
test
sbb
sbb
push
stc
inc
jle,pn
pop
cli
je
into
ds
sbb
ss
inc
pop
scas
sbb
stc
hlt
add
add
je
xor
stc
cmp
sti
sbbl
lret
adc
enter
jns
idiv
jae
insl
xor
mov
enter
icebp
adc
jae
outsl
pop
subb
or
orb
xchg
ja
or
mov
add
inc
call
js
add
jp
add
add
je
in
adc
sub
jns
xchg
jae
in
sbb
inc
jmp
pop
ljmp
mov
mov
mov
ror
sbb
test
jae
adc
jl
fmull
jnp
xchg
adc
adc
push
xchg
and
fadds
push
xchg
popa
dec
push
and
xor
rol
push
mov
add
inc
pop
inc
clc
aam
or
sbb
push
xchg
lds
pop
in
inc
dec
dec
rorl
mov
mov
jnp
lcall
mov
fxch
clc
sahf
add
cmp
xorl
inc
shlb
orb
or
dec
push
out
cwtl
and
pop
mov
call
out
add
add
fwait
mov
inc
jmp
lea
sarb
lock
into
out
cmp
lahf
mov
in
lcall
insl
cld
xchg
ss
test
mov
testb
mov
loop
jo
arpl
add
leave
xchg
xchg
cmp
lock
cwtl
add
dec
dec
dec
je
add
lods
jmp
pusha
mov
test
dec
stc
test
mov
dec
dec
dec
pop
or
faddl
je
int3
cmc
xor
mov
mov
jne
rorl
lea
jge
test
push
lock
icebp
pop
push
push
pop
pop
adc
fbstp
dec
push
ljmp
idiv
add
add
out
cld
add
or
jne
mov
je
jno
add
fdivs
jl
test
imul
or
test
imul
mov
roll
cmpb
inc
or
push
enter
push
mov
test
adc
sti
dec
call
push
pop
call
iret
test
add
repz
mov
nop
cmpsl
cltd
shll
push
fmull
jns
cmp
lret
std
lret
popa
sub
aaa
push
cli
inc
sub
test
push
push
jl
push
les
xorb
std
out
ds
repz
sti
les
mov
cmp
xchg
cmp
mov
inc
sbb
call
jle
sti
and
push
cld
jle
aas
mov
push
push
sub
add
push
or
stc
imul
xor
add
mov
orl
fnstenv
or
add
je
sbb
mov
cmp
xchg
add
mov
mov
add
stc
out
jae
push
mov
shlb
pop
repz
lock
lea
les
push
add
loop
dec
cmpsl
das
dec
mov
sbbl
mov
pop
add
mov
pushf
pop
addb
fxsave
cmp
jle
sar
push
push
mov
add
jb
fisttpll
nop
fisttpll
pop
aam
and
add
jge
dec
dec
jle
push
mov
addb
stc
pop
hlt
dec
test
stos
lahf
jl
sbb
ds
mov
dec
and
call
push
mov
cmp
hlt
sub
jmp
mov
jmp
xlat
aaa
add
add
cmovo
cmc
sbb
add
adc
std
add
inc
sub
repz
mov
int
push
push
sbb
add
std
jge
ss
add
sub
adc
scas
hlt
hlt
call
outsb
adc
clc
aaa
add
and
add
imul
xor
outsb
testb
stos
lock
pop
in
call
das
hlt
cld
cmp
add
jno
jne
rcrl
incl
add
dec
cwtl
xor
ss
push
aaa
cltd
xor
mov
mov
stos
dec
or
adc
mov
mov
mov
adc
xor
cmpsb
daa
repnz
decl
jne
iret
rolb
xchg
mov
add
sub
mov
rcrb
push
inc
adc
push
clc
and
jg
iret
sbb
add
add
adc
xor
aam
daa
xlat
movsb
mov
outsb
fmuls
out
and
or
sub
mov
mov
rorb
test
fmul
mov
divb
mov
add
cmp
andl
clc
out
mov
sbb
dec
add
pop
jbe
add
out
ret
inc
cmp
lret
add
std
outsb
dec
pop
dec
jae
push
sbb
inc
jbe
lcall
cmp
xchg
add
add
add
sub
xor
lods
cli
push
cli
jb
dec
scas
call
cmc
je
in
mov
or
mov
pop
ss
test
je
add
add
mov
std
out
cli
arpl
mov
cltd
les
adcl
ja
in
push
or
movsb
jle
insl
pushf
mov
xchg
cs
insb
popf
es
add
cld
mov
or
push
push
sar
imul
add
ret
mov
out
je
jns
or
inc
stc
mov
add
add
mov
lods
orl
divb
push
xchg
jb
jbe
xor
fnsave
or
jb
idiv
mov
jne
loopne
or
mov
sub
cld
jne
push
jmp
mov
push
push
pop
pop
je
or
inc
sub
dec
dec
push
dec
outsl
jge
aas
sbb
lea
add
iret
addr16
xchg
or
pushf
jle
push
mov
int3
or
outsb
push
aam
out
sbb
jne
jae
out
adc
pushf
bound
cltd
push
xchg
mov
mov
dec
or
gs
iret
fnsave
inc
dec
adc
je
xchg
dec
jg
dec
add
lahf
js
dec
adc
add
inc
pop
out
out
stc
shll
test
lds
mov
jecxz
push
fwait
dec
stc
out
sbb
dec
inc
outsb
les
movsl
iret
pop
mov
or
add
adc
mov
jae
popa
sub
call
add
cmpsl
dec
in
sub
inc
mov
call
andb
cmc
je
sub
dec
decl
sbb
pop
sub
mov
adc
jnp
add
add
push
orl
push
push
xchg
sbb
fidivrl
add
rcll
cs
sub
ret
pop
push
arpl
imul
iret
xor
fisttps
jge
dec
jl
aad
mov
cltd
iret
xor
lret
and
mov
cmp
mov
jmp
xlat
or
push
pop
ja
jle
stc
mov
test
dec
stc
stc
add
mov
xlat
jge
jmp
cmp
stos
jle
idiv
add
mov
mov
add
inc
inc
in
xor
nop
rorl
icebp
hlt
cmp
add
cmp
add
ret
mov
xchg
add
add
inc
dec
dec
mov
dec
notb
cmc
rorb
out
rolb
ss
xor
out
jmp
loopne
or
pop
psadbw
dec
mov
mov
push
aam
mov
decl
inc
hlt
fisubl
enter
push
call
subb
shl
cmp
rcrl
ss
outsl
jl
jns
mov
ja
lahf
or
mov
mov
stc
mov
jnp
dec
js
lea
push
push
push
mov
mov
ret
and
incl
ljmp
stc
out
sbb
adc
test
add
daa
and
add
stc
out
popf
mov
dec
add
mov
push
ds
movsl
fwait
les
fwait
lds
cmp
movsl
insb
sub
sub
lods
xchg
xor
js
cltd
imul
cmp
cld
cli
std
icebp
stos
je
jle
adc
pop
stos
jg
mov
xchg
push
jle
jge
add
ret
mov
xor
sub
add
leave
imul
idivb
cli
hlt
dec
pop
inc
jmp
adc
call
hlt
sbb
cmpb
jnp
dec
and
xchg
mov
cli
mov
mov
mov
lods
ret
movsb
jmp
mov
xchg
pop
mov
pop
jb
push
dec
dec
aas
cld
jno
icebp
fprem1
test
clc
add
lret
ds
add
cli
mov
stc
and
je
add
call
mov
pop
jp
out
jns
imul
inc
lea
cmc
push
mov
pop
notb
jne
hlt
add
jne
imul
mov
push
adc
aad
adc
nop
cmp
xorl
rol
testb
mov
cmp
pop
imul
cli
addl
fsub
incl
jge
hlt
data16
add
testl
std
decl
cmp
dec
aad
das
std
outsb
scas
das
jmp
fdivl
ret
out
mov
pop
xchg
xchg
incb
add
xchg
jp
push
out
incl
and
push
push
add
popa
aam
loope
mov
std
popa
inc
rcrl
mov
xor
insb
mov
dec
lret
out
js
ja
xchg
stc
add
jmp
into
inc
push
push
mov
clc
cs
mov
test
cmp
jbe
rorb
lahf
je
push
add
add
cmp
test
testb
add
push
ret
lahf
je
shl
inc
fildll
fidivrl
sbb
jecxz
add
mov
stos
xor
icebp
test
xchg
outsl
dec
dec
adc
cs
stc
mov
fwait
mov
and
enter
adc
lock
add
fisttpl
data16
add
lret
data16
std
dec
aaa
test
adc
movsl
inc
jge
cmp
sbb
sbb
cmp
push
cmc
push
cmpsb
lds
sub
je
jmp
sbb
lea
jmp
sub
icebp
jle
test
pop
add
xchg
mov
xchg
xor
in
mov
daa
sub
mov
or
sti
or
data16
int
or
fstps
adc
mov
or
and
rcll
and
push
nop
mov
adc
inc
sti
push
cmp
hlt
lods
cli
push
lods
mov
sbb
hlt
es
jle
jns
push
jo
add
ja
clc
out
arpl
cmp
clc
add
pop
xor
mov
add
call
jmp
shll
inc
hlt
cmp
clc
add
ret
push
testb
pop
in
jg
stc
jmp
push
ja
jg
inc
cld
xor
sub
push
pop
cmp
rolb
dec
lea
fwait
testb
or
xchg
add
inc
daa
cmp
aam
popf
pop
dec
xchg
cli
mov
notb
xchg
mov
testl
hlt
les
pop
pause
inc
clc
push
popf
stos
or
xchg
movsl
sti
enter
mov
lock
rcrb
gs
call
dec
jle
sub
sub
nop
ret
stc
imul
std
mov
cmovae
icebp
mov
xchg
cmp
dec
insl
ds
dec
inc
mov
add
dec
stc
out
push
and
movsb
enter
pusha
mov
lods
sbb
mov
sbb
xor
add
in
pop
out
dec
out
movsl
in
adc
movsl
arpl
data16
and
dec
push
mov
jo
sub
js
jl
aas
jo
xchg
adc
lahf
cli
push
iret
pop
add
xlat
add
add
lret
mov
in
mov
loope
xchg
int3
xor
aas
push
mov
dec
xchg
jp
push
sbb
rcl
jo
movsl
cmp
push
pop
sub
push
mov
and
add
sarl
or
dec
and
in
xlat
mov
std
sub
mov
and
cmp
mov
mov
in
dec
xchg
add
add
in
dec
push
movsl
push
sub
das
fdivr
cmp
stc
jbe
sbb
jp
xor
call
push
jp
and
push
je
imul
shll
inc
cld
jne
mov
jl
outsl
inc
cld
imul
dec
push
lods
test
mov
ja
add
jnp
adc
call
addl
add
idivb
movsl
mov
inc
pop
or
orl
mov
sti
ret
jne
mov
and
push
ret
dec
mov
addb
lds
add
rorl
dec
xor
or
adcl
mov
add
pop
add
add
incb
add
sbb
test
aas
loopne
lock
or
add
decl
mov
rclb
add
lea
stc
mov
mov
cmp
leave
sbb
cmp
push
lea
fwait
cmp
mov
dec
xor
testl
mov
call
les
add
jecxz
jmp
push
jae
mov
mov
pop
shll
sti
ret
jbe
push
cmp
or
mov
jmp
xor
das
in
mov
dec
jp
pmulhuw
mov
add
movsl
jle
mov
xor
jb
cmc
and
mov
imul
mov
add
popf
test
add
add
addr16
dec
stc
in
int3
sbb
push
jb
jbe
jne
xchg
jl
scas
mov
ret
rcll
mov
out
lds
add
sarl
mov
add
loope
sti
rclw
cmc
stc
add
stos
adc
jp
or
hlt
push
pop
movsb
lock
add
cmp
jecxz
jne
dec
lea
cmpsb
stc
orl
dec
xchg
popa
jle
leave
fs
add
jb
mov
pop
pop
pusha
jle
inc
push
mov
ljmp
add
jl
adc
cmp
sub
mov
popa
fstpt
mov
popa
rcrb
jmp
sti
and
inc
jecxz
fadds
add
test
testb
cmp
cmp
add
sbb
adc
add
or
xor
mov
nop
or
pop
cli
inc
or
mov
cli
dec
fimull
dec
andb
les
dec
sti
dec
mov
fnstsw
das
push
or
sarb
xchg
outsl
push
inc
sti
add
add
cmpb
adc
ret
imul
adc
int3
clc
stos
adc
mov
sbb
popf
in
addb
jle
mov
es
lock
jne
imul
jae
push
testl
hlt
lds
pushf
jmp
and
push
jns
cmovg
in
aaa
fadd
add
add
pushf
jmp
cmp
mov
pop
push
fiaddl
dec
les
test
pop
sub
mov
bound
sti
or
shll
das
add
aaa
cwtl
lahf
cli
das
push
inc
xchg
test
dec
push
rolb
stc
add
lahf
ret
cmp
shlb
bound
add
sbb
mov
call
stc
data16
xor
mov
fildl
and
pop
fstpt
je
pop
in
xor
push
mov
cmc
add
xchg
repz
ret
push
adc
jp
push
ret
xor
adc
testb
mov
cmpsl
push
push
es
jns
ljmp
movl
pop
add
pusha
jp
pop
ficoms
mov
add
outsl
in
je
xlat
aaa
push
push
or
gs
in
je
ret
leave
push
es
jae
out
scas
icebp
sub
lock
adc
ret
movsb
mov
push
shrl
jb
ret
aam
adc
scas
or
dec
xor
xor
add
add
out
jp
cmpsb
aad
push
mov
and
xchg
sti
call
outsb
lea
mov
aas
dec
and
add
or
add
das
ficompl
sarb
ja
movsl
cli
js
andl
push
mov
andl
cwtl
push
aam
movsl
pop
cs
loope
hlt
mov
test
pop
and
xchg
je
cltd
adc
outsl
ret
leave
lcall
stos
lods
out
cltd
lcall
mov
addl
sub
push
dec
movsb
sbb
arpl
call
icebp
push
jge
lcall
xlat
icebp
add
add
data16
lods
or
xchg
or
xor
daa
cmp
roll
rcl
clc
daa
mov
add
mov
aas
in
fdivr
mov
addb
ds
out
xchg
cli
scas
cmpb
cmpsl
mov
add
dec
clc
push
xchg
mov
sub
mov
stos
add
add
call
mov
in
adc
or
jge
push
mov
loop
cmp
int3
jl
inc
jmp
lds
pop
aad
xor
addr16
pop
lods
in
push
scas
mov
lret
add
mov
inc
sbb
mov
lret
std
add
sbb
add
repz
test
and
repz
outsl
std
add
sbb
aas
and
outsb
lret
and
mov
push
jnp
adc
jp
or
mov
xor
and
mov
sub
pushw
push
ret
push
adc
clc
pop
popa
loop
jg
add
or
add
lea
lods
cs
and
sub
lahf
pop
scas
fnsetpm(287
jle
lahf
sbb
mov
gs
mov
mov
lea
cmpsl
cs
mov
pop
mov
out
xor
cs
jl
mov
pop
out
mov
mov
jmp
add
cld
jg
xchg
cmp
icebp
inc
dec
subb
mov
cli
mov
pop
fsubrs
lock
xchg
or
xchg
mov
lea
dec
pop
js
cld
std
mov
lea
fisttpl
xor
es
out
arpl
repz
loopne
lret
xor
cmpsl
add
adc
add
inc
sbb
ret
stos
iret
add
add
cmp
xor
cmp
xor
fisttpll
aas
decb
popl
loop
push
mov
and
negl
call
dec
aam
push
xchg
outsb
push
rorb
mov
stc
add
enter
adc
jmp
gs
sbb
fs
cli
xchg
mov
add
push
sub
cld
inc
mov
jmp
push
jmp
scas
fldt
enter
push
call
movsl
cmc
add
in
inc
push
lea
not
jg
and
pop
dec
jno
insl
test
imul
call
mov
pop
and
test
or
notb
repz
jne
idiv
movsl
push
adc
add
add
mov
imul
sbb
push
idiv
jne
add
and
add
loop
out
add
inc
mov
sub
cmpsb
cmc
jns
sub
filds
xor
mov
and
jle
pop
fwait
adc
cld
je
and
push
pop
pop
add
jle
add
adc
orl
aaa
xchg
clc
jae
rcrl
mov
rorb
mov
or
repnz
aaa
jns
sar
add
push
and
lea
les
lret
repnz
add
in
out
std
std
lahf
dec
cmp
mov
nop
aad
add
add
call
cmc
xor
ret
outsl
lahf
loopne
fdivs
std
and
mov
mov
xchg
ds
xchg
sbb
js
daa
add
mov
and
xchg
add
test
dec
int3
cmpsl
inc
lock
test
xor
lds
int3
in
dec
daa
xor
add
dec
add
test
scas
add
add
mov
jge
cmp
es
dec
stc
mov
cli
dec
mov
cli
inc
fidivs
jp
ret
cltd
stc
xor
leave
and
xchg
jmp
mov
dec
push
bound
stc
add
cld
neg
mov
test
aam
cli
mov
pop
into
mov
popf
jle
lock
push
bound
xchg
add
add
orb
or
mov
pop
cli
add
add
push
lret
out
sbb
cli
add
out
dec
or
jb
inc
cmpsb
imul
jmp
push
test
cli
add
in
ss
mov
push
call
lret
xor
add
mov
aaa
std
cmp
jno
cmc
pop
addb
add
adc
and
inc
mov
insb
or
cmp
leave
decl
mov
stc
test
lock
int3
push
mov
mov
pop
sbb
aam
cs
imul
jnp
mov
mov
add
or
mov
dec
cld
int3
loop
aaa
adc
setg
jl
xchg
in
jne
add
add
inc
xchg
dec
jmp
xor
les
push
jb
push
push
mov
or
pushf
xor
lahf
cmpsb
mov
pop
add
dec
stos
sbb
andl
mov
add
cld
xchg
mov
pop
adc
aam
jmp
jg
insb
ret
pop
sub
inc
push
or
jnp
jge
cld
pop
and
push
dec
sub
pcmpeqd
sbb
out
add
add
jmp
roll
sbb
lock
fdivrl
test
mov
push
clc
fwait
lods
mov
mov
ss
jp
sub
xor
and
xor
loopne
xor
movsb
mov
add
outsl
add
sub
mov
enter
addr16
add
dec
daa
push
inc
jmp
inc
jmp
push
mov
add
popl
insl
xor
add
iret
adc
jmpw
push
pop
std
subl
sub
mov
cmp
je
push
mov
test
or
call
push
jle
add
leave
mov
cltd
mov
mov
fildl
jb
jb
cmpsb
xchg
dec
inc
jmp
add
add
add
lahf
add
out
out
std
mov
jl
or
stc
mov
cmc
push
out
adc
push
fld
or
pop
lahf
idiv
cmp
out
int3
add
pop
jp
mov
repnz
fstl
xor
imul
roll
jbe
dec
jmp
cld
cmp
cmc
jne
adc
mov
add
xor
cmc
push
and
je
jns
or
jno
lea
les
dec
pop
mov
cli
add
inc
or
xchg
xor
call
lret
inc
scas
xchg
dec
mov
cli
mov
push
xchg
repnz
xchg
jns
lret
and
sbb
xor
rcr
femms
ret
cld
push
movl
add
adcb
out
push
cmp
test
pop
cli
jle
xchg
incb
pop
sub
adc
das
shll
pop
jle
cmovnp
dec
adc
jp
adc
or
out
nop
mov
and
dec
outsl
cmp
call
cli
add
add
nop
insl
mov
cmp
call
js
xchg
or
mov
or
hlt
jle
fsts
xor
js
jge
mov
cmp
jle
je
fwait
cmp
mov
cmc
add
in
sti
out
or
sti
ficomps
rolb
mov
in
cs
int3
xchg
test
add
add
pop
push
adc
push
inc
cmp
andl
mov
fcomi
test
push
stc
add
pop
add
sub
xchg
repz
stc
add
jbe
dec
cmp
or
mov
subl
stc
add
ljmp
bound
push
add
int
call
mov
shlb
test
add
add
sti
aaa
pop
cli
cmpl
cmp
or
cli
jmp
enter
jo
incl
add
mov
pop
mov
pop
out
or
ror
dec
cmp
jmp
mov
addb
or
pop
cmp
es
sub
jno
adc
mov
loop
add
cmp
jno
push
in
imul
dec
call
xchg
or
push
movsl
dec
nop
inc
xchg
fwait
push
incb
dec
or
jne
jmp
or
mov
dec
pushl
jge
xor
mov
push
seto
lret
call
int3
push
cmc
cli
sbb
jbe
cmpsl
pop
push
cli
add
add
sub
adc
mov
add
mov
faddl
mov
pusha
dec
stc
insb
inc
inc
sub
sbb
stc
pusha
repnz
out
pop
adc
add
out
xchg
sbb
jp
sub
or
rolb
cmp
push
insl
adc
and
mov
stc
out
xchg
cmpl
repnz
add
mov
rclb
add
mov
sbb
mov
push
notl
loopne
xor
mov
fwait
rcrl
add
add
sbb
repz
adc
filds
mov
adc
test
pop
jl
cmc
lds
je
stos
xchg
jnp
cmp
add
lret
bound
xchg
xchg
jns
std
sbb
adcb
mov
cli
cmpsb
push
ds
jb
xor
cmp
jp
aaa
shrb
or
subl
jne
jmp
push
enter
in
push
dec
xor
add
or
sahf
add
je
in
inc
push
push
rorb
decl
xchg
incb
add
dec
into
push
test
pop
mov
jle
or
push
dec
push
sub
xchg
add
testb
sbb
movsb
or
add
mov
pop
cmp
roll
add
add
add
push
pop
in
call
inc
shll
das
ret
in
pop
jne
ljmp
aad
push
mov
xchg
outsl
add
add
test
cmpsb
pop
mov
cmp
call
clc
inc
sbb
pop
mov
sti
cmp
jbe
daa
xchg
imul
and
dec
sbb
add
lea
or
jecxz
int
je
pop
fsub
ret
call
in
js
jp
stc
and
lahf
aaa
insl
dec
in
cli
inc
pusha
mov
pop
out
push
add
add
test
sti
imul
popl
clc
outsb
pop
ja
or
dec
addl
pop
inc
xlat
out
add
loope
or
xchg
test
gs
stc
out
mulb
clc
scas
iret
inc
incb
in
ss
imul
adc
mov
rolb
jl
jns
and
add
pop
outsb
sub
xlat
aad
hlt
nop
adc
inc
adc
stc
data16
push
fildl
mov
cli
outsb
xchg
mov
lods
add
push
ja
jmp
shll
mov
int
cli
xchg
in
lahf
jmp
inc
dec
pop
adc
pop
add
leave
and
ss
fs
dec
hlt
inc
sbb
add
pop
mov
pop
int
jle
cmpsl
rolb
cli
push
imul
into
cmp
fcoms
cli
test
mov
cli
push
adc
xchg
cwtl
add
jp
lcall
jp
lcall
js
lcall
js
lcall
js
lcall
js
mov
add
stos
js
pop
or
test
in
cmpsl
or
hlt
into
dec
lea
std
jmp
movsl
sbb
arpl
punpckhdq
add
out
test
jp
push
sub
stc
mov
or
mov
addl
dec
mov
call
push
adc
int
xchg
shl
add
add
adc
decl
in
pop
fidivrl
lahf
add
lret
repz
mov
lahf
push
pop
aaa
pop
cli
cmp
repnz
js
inc
test
cli
or
adcb
gs
jns
jp
fisttpll
scas
incb
shl
pusha
dec
les
dec
shlb
cltd
add
out
add
add
popf
cmpb
mov
ljmp
mov
dec
stc
outsb
leave
test
nop
and
mov
add
sub
dec
jb
pop
addr16
jle
jae
ja
stc
jo
inc
adc
jg
and
sub
test
and
repnz
push
xor
add
push
or
hlt
fcmovb
pushl
testl
add
xchg
loope
sub
dec
cmp
jbe
sahf
cmp
push
xorl
jle
mov
outsb
or
pop
pop
stc
jne
dec
lret
aad
add
stc
add
imul
inc
jecxz
add
fbstp
add
lds
jmp
mov
imul
shl
pop
add
leave
xor
ret
cmp
xor
std
lcall
std
mov
loopne
or
mov
movsb
dec
mov
movsb
addl
pop
cld
sbb
test
xchg
stc
test
and
jmp
out
jns
sbb
add
cmc
jne
or
cmpl
jo
push
imul
stos
add
das
mov
in
cmpsl
or
sarb
rcll
mov
dec
mov
add
jmp
mov
jmp
addr16
xchg
inc
push
into
mov
in
jnp
test
mov
add
add
jle
fcmovu
jns
nop
pop
inc
call
cmp
cmp
dec
adc
add
cmp
dec
nop
gs
or
fcomip
sbb
jmp
push
popf
add
ret
negl
or
cli
sub
int
push
jbe
lcall
call
iret
repnz
clc
sub
lahf
and
lahf
insb
push
jl
test
ret
add
fdivs
jnp
xor
adc
icebp
je
test
cmp
loope
ret
test
movsb
or
push
jne
fsubl
nop
cmp
sbb
xor
adc
cmpsb
add
repz
mov
sbb
jnp
nop
lret
jns
stc
xor
sub
add
or
cmp
scas
popa
add
flds
add
jns
add
dec
stc
push
bound
in
jne
stc
add
sbb
out
xorb
pop
fwait
jmp
dec
stc
sub
sbb
mov
movsb
xor
stc
addb
jno
negb
add
call
or
call
cmc
or
mov
addr16
dec
fisttps
push
cmp
inc
add
add
cmp
aas
dec
cli
hlt
in
inc
jmp
xchg
cli
add
es
dec
jecxz
dec
lea
jns
packssdw
inc
loopne
add
lea
dec
dec
mov
cmc
cmc
push
sbb
rorb
je
add
add
lea
dec
adc
push
xor
add
xchg
mov
add
jbe
inc
aam
add
push
decb
add
sbb
push
jno
xor
daa
sti
add
push
aad
jge
into
cli
jle
jnp
pop
in
add
lea
jmp
lea
aad
push
loopne
leave
test
jo
loop
pusha
incb
mov
add
shrl
shl
aam
popa
lea
popa
cli
mov
repz
dec
adcb
mov
hlt
mov
arpl
or
mov
icebp
and
mov
xchg
addr16
aas
movsl
fildl
cmpsb
ja
sar
daa
out
xchg
into
dec
and
movsl
jnp
adc
adc
and
orb
mov
pop
jns
jnp
lock
add
into
dec
add
inc
shrl
lret
jo
ja
pop
adc
mov
jne
pop
sbb
inc
mov
sbb
xlat
inc
daa
adc
nop
xor
movsb
jle
jne
sarl
lock
jmp
loope
dec
ja
sub
mov
jne
out
push
addb
sbb
push
rol
mov
xchg
inc
or
into
cs
push
cwtl
jl
std
aad
push
cwtl
jns
sbb
pop
xchg
sbb
push
icebp
aad
aam
push
leave
stc
cmp
inc
lds
fdivs
leave
stc
sbb
inc
leave
lds
push
cmpsb
fwait
cld
test
jl
cmp
lret
xchg
insb
imul
cld
outsl
cli
outsb
jg
cli
cld
mov
rclb
add
add
lds
addr16
add
inc
bound
and
cli
addr16
add
add
push
decl
stc
mov
xrelease
es
bound
imul
add
popa
push
lea
xchg
add
insl
jbe
gs
or
addr16
notl
repnz
cmp
add
cmc
dec
push
mov
add
out
xorl
testl
test
in
cmc
pop
into
daa
popf
add
inc
clc
fldl
decl
add
pop
popa
inc
xchg
bound
xor
adc
and
les
leave
out
jge
push
adc
in
or
es
cli
dec
push
lods
inc
lock
sti
jg
xor
test
sarb
mov
jne
es
or
lret
dec
out
out
xor
ja
dec
lret
sti
nop
jnp
gs
out
dec
or
je
inc
stc
insb
inc
loop
roll
stc
pop
jle
jb
je
adc
lods
rolb
xor
data16
in
testb
fldt
bound
add
add
cmp
gs
jnp
gs
jb
jae
jbe
jae
ret
rcrl
shlb
cmp
cmp
dec
mov
mov
jae
data16
and
in
cmpsl
negl
xchg
mov
xrelease
mov
push
outsb
lcall
dec
loopne
push
push
cmp
movsb
in
or
add
add
add
lods
jae
add
mov
stc
test
stc
xchg
adc
repz
jl
pop
popl
inc
mov
ficomps
add
shrl
and
sti
mov
mov
cli
scas
adc
mulb
sbb
scas
testl
shlb
data16
cld
push
dec
push
ds
pop
cmp
out
cmp
jbe
add
roll
hlt
lea
mov
dec
outsb
mov
out
lock
inc
clc
and
add
pop
imul
dec
cmc
xor
pop
dec
lea
idiv
add
mov
ljmp
mov
inc
jno
enter
add
ja
jle
sbb
clc
cmp
sub
dec
fcmovnb
repz
sub
sub
xchg
dec
sub
jo
inc
outsl
dec
fdivrs
lea
shl
or
cwtl
sub
shrb
push
mov
pop
push
and
xchg
in
dec
cmpl
out
fiaddl
jne
jp
or
add
add
repnz
dec
push
cltd
dec
pusha
jge
inc
int
sbb
ja
mov
inc
mov
pushf
xor
aam
in
jle
add
mov
out
push
or
adc
lds
call
jne
add
mov
xchg
jae
call
pop
mov
sub
cmp
xchg
add
sub
out
sbb
outsb
xchg
sti
dec
stc
out
lock
repnz
hlt
pop
pop
add
outsb
cmp
sub
sti
out
dec
jecxz
outsb
subb
jnp
sub
xchg
data16
testl
jno
stc
add
jae
cli
jmp
pushf
jne
lds
jb
jne
mov
mov
add
add
sub
lods
outsb
stc
add
add
shrl
push
cmc
stc
fdiv
aaa
ds
push
jns
call
push
stc
add
sbb
in
cli
add
arpl
add
dec
sarl
nop
sbb
add
fs
cmp
fcomps
or
push
int
cwtl
cmpsb
clc
bound
add
sub
ds
cwtl
jbe
bound
arpl
pop
pop
int
cwtl
jbe
out
jbe
add
data16
push
mov
loopne
je
sbb
and
inc
dec
push
jns
std
adc
testl
test
lock
testb
imul
inc
notl
pop
inc
push
and
sbb
decl
decb
add
add
icebp
add
dec
in
and
popa
lcall
or
je
add
imul
dec
add
add
mov
cmp
into
push
jo
and
ficoml
aad
inc
into
adc
dec
fldl
xlat
shlb
pop
out
call
lret
ds
jnp
imul
js
add
lea
and
jl
and
add
add
and
les
sar
jnp
and
jg
iret
ds
imul
or
insl
inc
inc
pop
pop
testb
cmp
mov
test
test
dec
jne
insb
adc
out
xchg
cld
lret
or
daa
pop
popa
fmuls
sub
push
in
and
jno
inc
lret
dec
into
outsb
data16
add
jle
cmpb
in
dec
mov
dec
ret
rcrb
mov
out
ret
jecxz
pop
adc
outsb
push
dec
stc
fs
in
inc
jae
xchg
jmp
dec
stc
push
je
cmp
mov
testb
call
lahf
imul
les
stos
jae
sahf
jl
imul
cli
sbb
xor
push
test
jnp
test
fs
mov
movsb
and
cmpsl
out
mov
jmp
push
popa
push
jmp
cwtl
sgdtl
out
mov
add
in
hlt
movsl
ljmp
push
push
dec
ljmp
stos
jmp
adc
add
repz
push
add
add
inc
clc
inc
inc
lret
push
fs
bound
cmp
mov
loope
mov
shl
call
sub
cmp
imul
data16
add
xor
mov
shll
sahf
out
pushf
popa
xor
outsl
mov
in
add
cld
add
cmpsl
addr16
xlat
dec
inc
xchg
add
jmp
add
dec
aad
mov
push
imul
push
shll
lret
xchg
icebp
inc
int3
dec
add
fsubrl
push
adc
and
out
cvtdq2ps
test
test
stc
aas
xor
jmp
bnd
pop
cli
pop
mov
mov
das
ja
shr
out
arpl
pop
push
adc
xchg
aam
and
add
cmp
push
fdivrp
out
or
popa
mov
daa
mov
push
inc
jg
pop
clc
ret
int3
cmp
and
rcl
mov
fisttpll
push
stc
movsl
data16
loope
out
rcll
push
mov
out
sbb
pop
cs
or
add
shl
add
push
cld
gs
inc
and
push
shlb
dec
add
add
jmp
int3
mul
add
jnp
pop
shrb
stc
out
cltd
lret
mov
std
dec
jb
jo
add
or
dec
inc
stc
add
repnz
fdiv
add
cli
std
stc
sbb
cmp
jmp
aaa
cs
jmp
dec
stc
xchg
cld
cli
call
and
cli
call
stc
xchg
jae
gs
ja
jmp
push
stc
mov
and
call
insb
ds
mov
inc
jb
add
es
mov
jns
add
rcll
xchg
test
idiv
call
jmp
jge
push
adc
dec
dec
incl
rorl
cltd
add
mov
inc
les
add
xchg
xor
add
jmp
clc
add
inc
fdivl
sbb
into
push
inc
xor
adc
repz
jp
imul
jmp
dec
push
inc
fcoml
cld
push
cmp
test
pop
decl
testb
into
dec
andb
cld
aas
xchg
incb
sbb
or
arpl
add
add
mov
lock
bound
ja
add
ljmp
inc
js
mov
push
out
frstor
int3
xchg
adc
xchg
pop
int
mov
pop
jge
lcall
dec
aas
dec
lea
jb
ss
push
incb
lret
sti
pop
shr
sti
addr16
outsl
mov
and
and
fbld
inc
jmp
arpl
xchg
pushf
js
ja
insb
into
push
lock
mov
leave
shrb
icebp
pop
mov
negl
sub
xor
mov
dec
add
in
mov
int
mov
icebp
fs
pop
pop
mov
test
enter
inc
push
stc
xor
jae
test
push
stc
out
push
lret
add
add
mov
add
add
sub
cmc
shrl
dec
stc
add
jno
jmp
mov
lea
call
inc
leave
mov
cli
push
sbb
mov
inc
dec
stc
add
leave
outsl
jmp
cmpsl
adc
pusha
test
jecxz
adc
add
add
imul
in
enter
pop
cli
fs
pusha
testl
jbe
idivb
arpl
add
add
inc
mov
add
mov
pushf
cmc
add
mov
add
mov
jo
add
aam
xchg
out
mov
outsb
inc
in
arpl
jmp
fildl
outsl
mov
add
pop
cli
jmp
cmc
add
stc
xor
and
roll
jbe
cmc
incl
rcll
mov
jo
push
rsqrtps
cli
xor
dec
ret
push
fcmove
std
cld
inc
mov
pop
sti
jl
call
sti
and
push
jg
xchg
inc
add
add
and
mov
mov
lea
in
pop
sti
mull
or
loopne
cmp
in
jg
dec
pushl
xchg
push
sarb
mov
cmpsl
mov
add
rol
out
add
dec
cmp
xchg
enter
enter
pop
mov
stc
out
iret
push
rcl
pop
pop
addr16
push
in
xchg
add
push
mov
je
pop
xor
mov
testl
lret
pop
sub
push
sbb
fcomip
stc
cltd
test
cli
out
cmpsl
insl
call
data16
decl
in
imul
cs
lock
sub
mov
lret
jmp
dec
stc
test
add
push
jbe
jo
bound
test
xor
xchg
pop
push
jmp
cli
xchg
lahf
or
add
push
popa
cmpb
movl
jmp
sarl
jmp
insl
mov
test
push
stc
add
push
or
outsl
in
fs
dec
stc
push
ror
popa
cli
fiadds
add
sub
jmp
popf
sbb
add
cmpsb
dec
add
xchg
jge
inc
jbe
into
mov
in
test
addr16
add
jbe
push
push
xor
push
cmp
notb
out
push
mov
inc
and
outsb
jge
outsb
pop
and
rorl
es
test
sub
add
clc
push
push
add
out
mov
cli
incb
inc
and
add
add
clc
xchg
add
call
push
sub
dec
xor
add
shll
aad
and
ljmp
fists
mov
sub
pushl
insl
add
shll
or
outsb
add
data16
push
decb
push
incl
add
aaa
jo
add
shll
arpl
add
xchg
fists
call
lret
pop
lahf
fwait
pop
adc
lret
adc
test
push
inc
int
cwtl
dec
push
decb
stc
loop
dec
stc
xor
adc
sub
adc
ret
or
add
cmp
xchg
clc
out
shlb
dec
stc
out
ljmp
mov
add
gs
jo
sub
and
inc
pop
call
add
stc
insb
mov
call
pop
fwait
adc
mov
add
testl
pushf
xlat
lret
jne
jnp
stc
out
jle
xchg
daa
inc
insb
lods
daa
pop
xchg
mov
add
cmc
mov
in
out
push
adc
mov
je
dec
xchg
aam
je
add
adcb
and
inc
mov
dec
pop
jne
sub
int
pop
jne
je
ret
xchg
adcb
push
pop
pop
cli
jmp
pushf
push
xchg
imul
jae
icebp
sti
jb
inc
inc
loopne
dec
enter
jnp
add
push
insb
inc
or
dec
stc
test
push
bound
fs
pop
cli
push
mov
and
je
xchg
add
cmp
add
adc
inc
push
sub
mov
mov
pop
mov
lcall
pop
push
addl
in
sub
and
repnz
ss
cli
cmpb
mov
data16
call
lea
mov
call
sar
pushl
mov
inc
mov
mov
incl
add
jle
add
jbe
in
insb
out
jns
push
sub
and
jg
aam
push
push
les
mov
bound
aas
dec
mov
negl
int
js
aaa
push
push
mov
push
sti
mov
stos
xchg
jp
add
data16
incb
push
call
inc
adc
and
dec
bound
lea
add
lret
sti
cmp
xchg
call
cmp
incb
jae
inc
pop
jb
fsubl
stc
lea
lods
adc
in
ss
push
stos
xchg
sti
jne
xchg
insl
pop
daa
inc
call
add
stc
mov
insl
inc
pop
cmp
pop
test
adc
imul
into
fs
push
dec
stc
ss
dec
xor
dec
stc
insb
ret
pop
cmp
xor
pop
xor
sub
lret
out
add
ljmp
adc
imul
jmp
bndstx
fimull
or
and
loop
callw
and
add
add
test
jmp
notb
rcl
and
add
imul
lret
jno
jmp
dec
stc
test
leave
lds
std
jle
sbb
push
xchg
pop
dec
stc
add
test
stc
add
sbb
bound
add
dec
push
dec
mov
test
add
shl
pop
mov
stc
add
dec
xlat
mov
out
inc
and
test
loop
sub
sub
xchg
add
incb
sar
scas
cmc
mov
adc
and
stc
mov
mov
data16
add
sbb
add
in
cmp
or
add
push
sub
mov
xchg
cmpsl
leave
add
es
jne
xorb
in
lea
add
dec
lods
push
mov
fnstsw
and
mov
xchg
xchg
dec
out
int
add
sahf
sbb
pop
mov
mov
stc
jo
cli
fisubrs
inc
jne
xlat
shlb
imul
mov
pusha
pmovmskb
scas
and
xlat
fdivrp
decl
cmp
inc
xor
xchg
ret
sub
sub
push
xchg
add
add
incb
ds
leave
data16
jge
bound
sbb
insb
call
adc
jge
add
out
xor
dec
stc
mov
int
sbb
int3
fstl
or
ror
lods
lret
neg
mov
flds
dec
js
pop
push
cli
push
or
aam
cld
movsl
push
call
rolb
add
add
dec
rcl
int3
or
lret
orb
mov
dec
push
sbb
aaa
andb
cltd
test
add
stos
push
outsl
lcall
hlt
xlat
int3
or
push
and
popa
mov
mov
push
sti
scas
clc
dec
jne
sub
jnp
dec
cli
xchg
inc
in
call
push
call
sbb
mov
pop
adc
mov
and
xlat
add
test
shrl
stc
sbb
jl
fdivp
adc
cmpsb
add
lds
inc
int
jnp
cmp
cmpsl
or
mov
add
push
mov
mov
mov
cmp
testb
inc
lret
testb
add
add
cmpb
add
movsb
dec
stos
fstpl
add
cmc
mov
pushl
cmc
add
mov
std
jns
mov
cmc
lea
adc
push
push
xchg
xor
xor
das
sbb
lea
mov
dec
or
faddl
pop
rorb
add
jnp
add
loopne
jle
fs
and
inc
fcmovne
mull
jp
add
push
adc
or
inc
pop
fdiv
imull
cli
loopne
mov
or
jnp
into
dec
incb
dec
cli
dec
push
lret
sti
mov
scas
out
rorl
aad
add
cwtl
daa
adc
dec
aas
dec
sti
aad
add
orb
xchg
add
or
add
push
push
xor
xchg
les
movb
pop
mov
dec
test
sbb
mov
jo
repz
out
push
inc
lea
lock
aad
pop
mov
aas
jl
push
iret
dec
inc
jne
add
imul
imull
add
jbe
add
add
je
scas
dec
fistl
cwtl
call
jle
stc
je
sub
push
mov
movsl
repnz
in
shlb
dec
cmp
in
decl
je
rcrl
xor
stc
mov
enter
dec
stc
call
fs
mov
push
lock
jmp
cmpsl
stc
add
test
xchg
add
add
pop
dec
stc
add
push
add
dec
stc
add
pop
add
dec
stc
add
sub
in
ja
aad
testb
jne
inc
dec
stc
add
imulb
cli
test
cli
add
test
xor
std
jmp
mov
cmc
inc
stos
push
dec
lea
add
repz
lea
mov
addr16
xchg
jne
decl
jbe
add
stc
xor
jmp
stc
cmpl
mov
call
int3
inc
cld
dec
pop
add
mov
pop
mov
or
push
sti
jo
jne
imul
arpl
jge
push
loop
sti
add
add
insl
add
pop
mov
dec
bound
xor
mov
dec
rol
sub
sbb
sti
bound
inc
jne
fs
jne
aad
cmpl
pop
jmp
arpl
push
dec
sbb
adc
jge
ror
ss
mov
xor
out
pop
dec
test
insb
cwtl
sub
add
add
popa
jnp
stc
ret
andb
ljmp
add
and
js
repz
or
popf
jle
xor
stos
cmc
dec
xor
test
sub
fs
mov
mov
mov
dec
dec
dec
lahf
dec
mov
inc
mov
add
stc
sub
js
cmpsl
add
cmp
xchg
dec
adc
lds
dec
add
add
xlat
ret
mov
into
add
dec
add
adc
out
push
jmp
adc
into
fcoml
stc
add
les
dec
lea
push
out
or
fcoml
cli
mov
mov
int3
pop
add
dec
stc
dec
pop
loop
adc
sbb
mov
push
lcall
jmp
stc
mov
cli
ss
push
cli
insl
xchg
lds
je
xchg
leave
lret
dec
dec
cli
add
cmp
push
cmc
cmc
pushl
dec
test
repz
xchg
mov
add
mov
add
or
mov
jecxz
add
loope
xor
pop
out
inc
cmp
jae
cmc
jmp
mov
sub
dec
pop
mov
jmp
or
data16
dec
inc
dec
add
pop
mov
xor
push
pop
pop
mov
jns
into
dec
jmp
mov
data16
test
ret
outsl
dec
adc
int
stc
addr16
push
push
push
inc
xor
jno
or
pusha
jge
pop
inc
inc
or
fs
dec
push
dec
add
jge
das
pop
dec
add
jge
pop
pop
dec
add
jge
add
inc
mov
adc
jle
xchg
push
add
dec
rcrb
push
decb
stc
out
out
bound
jbe
rol
dec
or
inc
bound
jbe
mov
xchg
call
orl
jle
dec
stc
mov
jl
dec
insl
shlb
adc
push
push
dec
mov
dec
ret
jle
dec
pop
lods
test
lret
mov
push
mov
jbe
dec
jg
insl
pop
adc
mov
movsl
inc
mov
hlt
call
push
hlt
mov
add
dec
stos
mov
mov
cli
push
cld
jle
adc
dec
jb
sbb
sub
jmp
into
cmp
jmp
mov
je
roll
cli
sbb
mov
add
in
shrb
inc
or
clc
add
pop
xchg
outsl
mov
add
mov
mov
jmp
fadds
repz
add
inc
cli
jo
dec
jle
xchg
int
adc
xchg
add
mov
jbe
pop
je
imul
addl
xchg
cmp
scas
jnp
ljmp
and
pop
or
lea
movsl
faddl
and
jae
fnsave
add
je
add
cli
push
call
movsl
push
adc
push
stos
fsubrp
outsb
and
jmp
xchg
xor
mov
pushf
xorl
pop
jae
testl
lret
jmp
mov
mov
cli
add
dec
adc
rorl
stc
adcl
inc
sti
cmp
dec
push
mov
pop
shlb
add
add
aaa
xchg
ja
icebp
xchg
xor
dec
push
mov
dec
pushl
or
inc
js
cli
ret
xchg
les
mov
cmp
fldl
inc
test
cli
fcomi
icebp
imull
shlb
push
ds
stc
es
push
addr16
out
inc
jo
inc
call
scas
fldt
imul
js
add
or
push
inc
inc
movsl
inc
fs
push
jge
add
icebp
std
inc
int
jns
sbb
out
addr16
add
stos
jl
sbb
pop
mov
into
fistpll
sbb
std
add
je
dec
stc
out
pop
inc
jp
movsl
add
dec
stc
callw
and
mov
xchg
pushf
stc
dec
add
add
mov
repz
idiv
mov
cwtl
pop
dec
jb
sbb
cmp
cli
push
xor
cli
out
and
call
dec
stc
data16
adc
mov
cld
test
inc
jmp
loopne
and
rcll
sbb
dec
stc
mov
dec
stc
add
mov
add
out
cmpsb
add
imul
add
jecxz
mov
sahf
test
add
out
je
dec
dec
jle
div
add
lcall
pushl
sarb
inc
and
out
xor
mov
testb
repz
inc
mov
mov
lea
push
mov
sbb
incl
add
pop
outsb
not
out
sbbl
xor
mov
sub
mov
mov
sbb
and
test
xchg
sbb
and
jp
dec
push
cmp
in
or
sbb
and
rcll
decl
mov
inc
imul
dec
cld
jle
push
push
inc
test
cmp
out
add
pop
dec
ds
les
push
xor
sti
sti
lock
repz
js
sarb
push
mov
ja
inc
sti
pop
inc
aaa
je
push
test
cli
sbb
test
adc
mov
hlt
nop
mov
sbb
adc
enter
inc
inc
push
das
dec
jb
out
jl
out
cli
mov
into
mov
add
inc
call
enter
add
pop
enter
cld
test
jl
or
jnp
lret
inc
add
and
cld
hlt
sbb
add
addr16
cmp
add
fldt
add
lret
std
sbb
pop
inc
test
faddp
and
adc
imul
sub
test
xor
cli
std
sub
test
inc
jne
testl
cli
dec
shll
jb
notl
jle
sub
clc
ds
cmpsl
push
inc
inc
int
jbe
lds
jle
push
inc
cli
neg
sbb
out
mov
or
mov
mov
push
outsb
inc
add
loop
mov
vcvtsd2ss
add
xor
push
mov
jp
inc
and
add
outsb
je
mov
add
adc
andb
add
mov
add
and
loop
idiv
add
mov
adc
out
mov
pushl
cmp
xorb
ljmp
jbe
std
pop
mov
je
ds
adc
repz
push
inc
and
add
add
std
push
push
dec
mov
shl
lret
std
push
xchg
and
mov
int3
xchg
add
sti
mov
clc
dec
add
jbe
dec
push
out
pop
inc
sti
hlt
push
inc
jne
test
mov
sahf
loopne
push
adc
xchg
shrb
les
decb
lods
pop
sbb
mov
into
cli
pop
clc
push
inc
dec
roll
add
add
xor
add
push
sti
pop
mov
aas
dec
aas
adc
cmp
inc
idivb
dec
stc
out
jne
out
mov
or
out
mov
or
out
mov
xchg
cli
mov
aas
xor
push
add
stc
jg
iret
stc
out
lcall
sub
call
jl
stc
out
out
imul
add
cmpsl
sub
dec
push
loop
dec
stc
insb
mov
dec
stc
aas
adc
adc
mov
cmp
aas
call
call
sbb
call
rcr
add
jmp
pushf
insl
inc
sarl
sub
inc
cli
sbb
sahf
lock
cli
call
xorl
inc
pop
cld
insb
test
add
add
mov
xchg
mov
add
or
stc
add
cmc
jp
outsl
push
mov
mov
xor
inc
push
bound
cmp
jo
inc
jle
imul
add
lea
add
in
cmp
push
and
into
push
add
xchg
std
push
mov
mov
add
std
jns
xchg
subb
push
adc
add
cwtl
lea
and
cmc
pushl
jo
cld
mov
jno
xorl
or
cmc
jmp
imulb
or
push
push
insb
je
scas
push
sbb
decl
add
fdivrl
rorb
dec
push
decb
out
mov
cwtl
iret
dec
adc
add
lret
mov
leave
out
fsubs
je
sbb
jmp
xchg
dec
cld
decb
test
jge
sti
lahf
xorl
xchg
cwtl
add
dec
push
cmp
dec
or
sti
adc
sti
in
inc
dec
lret
mov
out
test
lock
jmp
cmp
jge
aaa
dec
add
jbe
dec
push
out
add
loope
cmp
mov
cmp
and
cmp
faddl
sahf
and
imul
adc
dec
stc
out
rclb
add
pusha
int3
adcb
dec
stc
inc
lea
jae
mov
mov
jl
sbb
add
push
fildl
dec
lahf
jo
les
jge
stc
or
jle
out
mov
call
insl
andb
dec
lahf
jo
mov
stc
rorl
out
xlat
mov
std
jmp
shlb
add
mov
pop
mov
add
scas
addl
fwait
xchg
jo
lea
pusha
pop
mov
inc
fidivrl
add
add
add
addb
sub
dec
fwait
xchg
jno
ss
stc
bound
fs
psrld
add
scas
addb
pushf
jmp
bound
add
cmp
add
sub
mov
mov
mov
out
cmpsb
sti
pop
mov
mov
mov
sti
add
cmp
add
add
add
add
mov
mov
xchg
pop
mov
mov
scas
jbe
mov
push
addb
xor
es
mov
mov
push
xor
mov
data16
mov
dec
inc
xchg
mov
pop
dec
and
jnp
and
popa
pop
push
mov
add
add
test
dec
add
xchg
mov
mov
popa
in
mov
jmp
lods
pop
add
test
js
adc
mov
shll
fsubl
mov
mov
mov
decl
incb
scas
dec
and
jnp
mov
add
add
insl
subb
dec
lahf
jo
mov
fdivl
adc
jo
adc
out
xlat
mov
out
sub
test
mov
js
orb
clc
out
xlat
mov
out
in
jg
cmp
cmpl
dec
fwait
pusha
shll
int3
xor
pusha
stc
stc
out
add
add
mov
call
add
addb
push
stc
bound
stc
mov
sarl
add
mov
inc
icebp
inc
or
dec
xchg
xchg
stc
bound
add
lret
mov
add
ljmp
jmp
pop
jno
mov
jo
or
inc
add
add
mov
add
loop
inc
shll
xchg
stc
bound
adc
add
inc
push
mov
leave
outsw
inc
sbb
or
cmp
out
mov
mov
add
push
mov
popw
inc
and
enter
decl
jbe
mov
mov
mov
negl
rcrl
add
cmp
mov
or
xchg
add
xchg
mov
scas
cmp
mov
mov
mov
adc
test
add
outsb
dec
and
inc
lea
ja
and
ja
xchg
js
scas
add
add
pushf
mov
pop
jbe
in
and
popa
gs
pushl
cltd
mov
add
xchg
mov
pushf
mov
nop
jbe
push
mov
push
jmp
test
incl
test
test
mov
xchg
stc
aas
jl
push
call
fcmovu
int
add
jo
movsb
jno
addl
or
gs
out
xlat
mov
call
mov
dec
fwait
jo
sub
jle
mov
ret
fwait
pop
mov
clc
out
mov
out
in
jg
test
dec
fwait
pusha
mov
dec
stc
dec
jge
mov
out
mov
call
mov
addl
dec
stc
bound
lods
bound
jmp
and
xlat
lods
pop
jno
mov
xorb
sub
jle
push
jle
jmp
xor
imul
xor
arpl
aas
jl
sarl
mov
je
mov
pop
pop
xor
bound
or
lcall
movsl
fists
fwait
mov
imul
cmpsl
test
cs
enter
xor
mov
leave
in
sub
fdivr
cmpl
jne
adc
cli
jge
call
mov
daa
mov
push
or
arpl
sub
sub
out
call
pop
fdivrs
and
mov
mov
add
cmp
mov
sti
add
scas
ljmp
jns
sub
scas
xlat
call
repnz
add
addb
je
xor
push
int
push
inc
cmp
call
es
add
dec
pop
jp
jg
xor
jg
clc
jne
mov
jg
pop
sbb
or
mov
decl
add
loopne
js
add
add
add
popf
add
jge
ret
stos
cld
mov
enter
xchg
or
dec
and
mov
mov
out
mov
push
and
jne
mov
sbb
negb
repnz
clc
out
ret
imul
out
aaa
dec
inc
add
andb
or
pop
pop
xchg
leave
mov
add
add
lret
call
mov
xorl
lock
fisubl
out
out
loope
dec
subb
cwtl
lret
or
cmp
sarb
mov
leave
mov
sbb
mov
sbb
orb
mov
movsl
add
stc
test
sbb
stc
mov
add
test
jmp
dec
je
lds
js
js
fld
dec
je
nop
mov
adcl
mov
jb
jge
popf
sbb
xor
insb
xchg
cmpsb
or
push
jmp
pusha
xchg
and
ljmp
ss
xchg
dec
stc
loopne
incl
sbb
add
je
into
sbb
cmpl
insl
stc
jno
add
push
adcl
inc
hlt
push
pusha
cld
pushl
scas
jnp
movsl
jno
jne
jmp
testl
pop
movsl
popa
out
add
lea
ds
dec
sti
out
popa
jno
push
inc
jp
hlt
xchg
push
fstpt
mov
scas
jae
add
add
jno
mov
daa
bound
test
cmc
inc
stos
fidivl
xlat
jbe
dec
add
jne
stc
xchg
js
sub
or
out
jo
sti
pop
int3
sub
lret
sti
aam
pop
sti
mov
xor
mov
jg
into
pop
aam
sar
jg
int
fbld
leave
enter
push
aam
jge
cmp
add
shl
and
cli
inc
clc
adc
lahf
dec
or
lea
sarb
out
cmp
fisubrl
insb
rorl
add
jl
pop
cmp
add
add
jl
es
stc
pushl
fdivr
out
lret
sub
subb
xor
jno
sub
add
add
mov
js
andb
adc
out
dec
outsb
in
add
ss
mov
jl
in
cld
imul
jo
add
push
jp
stc
out
sub
loopne
cmp
or
jl
cmp
xor
cltd
jae
pop
fisttpl
mov
ss
add
sub
add
ss
stos
clc
jmp
add
stc
mov
shr
cli
into
pop
icebp
stc
cmp
adc
adc
mov
or
sub
in
cmp
add
and
subl
fnstsw
adc
mov
jmp
push
cmpsb
adc
pop
imul
push
fs
add
jmp
idiv
pop
or
xor
add
cmp
ret
add
dec
push
call
ret
in
fs
test
push
mov
cmpsl
inc
or
test
or
test
add
clc
push
pop
out
sbb
std
xchg
pop
test
arpl
pop
cmp
imul
dec
ljmp
cmp
cli
out
add
add
adc
add
add
std
jbe
aas
dec
divb
dec
sarb
or
pop
xor
sahf
cmp
mov
sub
lret
insl
idivl
adc
inc
push
pop
mov
int3
pop
and
and
inc
mov
and
sbb
adc
mov
inc
xchg
push
je
inc
jno
stos
xchg
inc
je
xchg
sub
lcall
clc
xchg
add
jle
add
pop
mov
cli
clc
xlat
inc
call
mov
and
cld
push
js
iret
cs
push
push
inc
mov
push
cmp
push
inc
xor
adc
lret
test
lods
aam
aas
lahf
sub
hlt
pushf
jle
loop
xchg
cmpb
push
outsb
out
test
jbe
in
jnp
mov
jnp
add
cli
push
add
add
cmp
mov
jnp
cmpsb
jle
lods
aaa
jle
jge
scas
mov
adc
push
ljmp
leave
mov
xor
adc
jo
and
mov
jl
pop
add
stos
add
pop
inc
lods
out
cmp
mov
or
es
pop
loopne
enter
pop
jle
sub
add
sub
and
test
test
jg
dec
jo
jb
rcrb
flds
inc
cmp
mov
aad
mov
call
inc
mov
ja
xchg
mov
adc
stc
cld
fdiv
inc
jmp
ds
lea
dec
add
jl
out
adc
cli
test
cmp
add
add
rclb
sti
call
xchg
fcoml
jo
cmp
test
imul
jne
fdivl
mov
cmp
test
push
fcmovnu
cmc
adc
mov
idiv
insl
call
push
add
clc
xchg
movsl
push
or
daa
mov
mov
jbe
adc
jl,pt
rolb
adc
dec
sub
add
call
jp
gs
cli
cwtl
jnp
adc
adc
lret
shrl
push
ret
push
ficoml
mov
in
and
rcl
test
dec
sbb
cwtl
pmulhw
and
sti
adc
push
incb
adc
push
adc
xchg
pop
aas
add
in
ja
jle
js
add
add
mov
sti
jg
add
dec
stc
or
and
jge
scas
cmp
cmc
push
pop
mov
hlt
aam
mov
mov
and
inc
add
mov
movsb
lret
movsb
lods
out
and
jl
mov
outsb
and
push
lret
cli
and
icebp
mov
std
out
rcll
incl
add
add
in
ljmp
sbb
jbe
and
int
mov
ret
and
sti
xchg
mov
and
lds
xchg
sub
xor
push
jle
sub
dec
push
je
jae
test
icebp
stc
push
push
dec
stos
cli
push
mov
mov
dec
xchg
jae
and
add
add
push
cli
jb
jl
xchg
xchg
stc
popf
nop
add
cli
jb
jl
jne
push
testb
test
dec
and
xlat
insb
int3
call
add
test
insl
mov
add
sbbl
adc
cmc
push
call
bound
push
add
and
adc
cmc
add
imull
rolb
add
add
add
orl
dec
push
push
loopne
lea
cld
add
aad
add
shll
mov
adc
jb
cli
mov
and
mov
mov
adc
sti
xchg
aas
mov
add
pop
adc
and
sbb
xchg
data16
addr16
test
aas
addb
incb
inc
dec
inc
jne
mov
or
fistpll
es
adc
push
sbb
pop
jne
mov
incb
cmp
pop
jne
out
jmp
push
incb
inc
clc
ja
push
decb
and
adc
adc
sti
push
lea
adc
add
add
ja
and
cmp
mov
add
fldl
inc
mov
cmp
cwtl
dec
push
sbb
and
push
sbb
clc
and
insl
aad
sbb
sbb
push
cmp
or
mov
icebp
call
out
jo
adc
out
or
aad
mov
icebp
call
dec
jb
repz
outsl
pusha
hlt
dec
stc
out
fldl
imulb
add
fmull
inc
jmp
sti
into
sarb
add
call
daa
je
outsl
add
fisttpll
out
das
add
std
or
xchg
mov
std
dec
pop
xchg
jbe
adc
and
fildl
jo
add
sti
mov
mov
add
add
add
pop
jns
call
cwtl
jo
xor
jns
push
test
mov
add
cmc
mov
test
data16
add
jnp
add
adc
sub
idivb
daa
cmp
add
add
rolb
jns
repnz
inc
dec
dec
es
dec
add
add
adc
and
pop
inc
jne
shlb
mov
int
je
xor
out
test
dec
jnp
mov
outsb
jl
std
daa
mov
outsb
jl
or
sar
mov
or
inc
ja
sbb
lret
rclb
jne
or
mov
rolb
dec
adc
aas
mov
aam
push
add
add
frstor
sti
cmp
stc
aas
dec
add
adc
adc
jmp
push
lahf
jmp
loope
inc
filds
out
fwait
cwtl
jmp
sbb
dec
mov
adc
adc
push
aam
mov
adc
icebp
mov
and
gs
mov
rolb
in
movsb
xlat
lock
out
fcmovnu
mov
inc
add
add
add
sub
inc
icebp
in
dec
out
sub
and
add
daa
mov
add
into
inc
xchg
sbb
mov
dec
stc
out
dec
xor
add
pop
sub
and
dec
loopne
mov
stc
out
or
lods
dec
stc
out
adc
aam
shrl
jle
add
add
and
inc
dec
stc
add
inc
xchg
loop
dec
add
std
mov
mov
sub
ja
call
idiv
add
lds
call
outsl
adc
bound
repnz
jo
push
dec
stc
add
xchg
call
dec
stc
add
out
pop
inc
xchg
pop
or
cltd
jb
cmp
add
add
add
add
fxch
sbb
je
int
add
mov
sbb
add
in
cmc
adc
in
fnsave
sahf
mov
add
sarb
mov
and
fs
mov
adc
sbb
jne
notb
shlb
push
cmpl
push
mov
add
cmpb
test
idiv
add
insl
add
out
scas
pop
out
scas
insl
xor
es
mov
push
dec
push
mov
bound
sub
pushl
jnp
cmpsb
std
jae
dec
cmp
sub
fmuls
or
cs
jne
ljmp
movsl
and
lcall
idiv
fimull
es
dec
pop
pop
mov
aaa
xchg
add
add
decb
roll
dec
mov
push
add
xor
into
lea
and
sbb
and
decl
jecxz
lods
and
lcall
fstps
jo
pop
add
mov
jb
mov
dec
stc
aam
mov
call
or
cli
int
icebp
clc
xchg
sbb
xlat
ret
js
aas
mov
add
add
icebp
outsb
mov
or
xchg
sbb
fs
stc
out
push
mov
jb
sub
and
dec
stc
out
inc
mov
mov
add
stc
out
sbb
push
rsm
psadbw
out
pop
add
dec
xchg
cmc
out
repz
out
push
jge
xchg
add
js
mov
add
dec
stc
add
and
mov
insl
cmp
add
cltd
pop
add
dec
mov
bound
mov
xchg
dec
stc
cld
clc
add
ret
adc
xor
je
jmp
push
adc
jb
add
sub
push
cli
jmp
lea
jmp
push
lea
out
mov
cmc
clc
arpl
lock
push
add
cmp
or
cli
add
cs
add
lock
jle
lock
icebp
cmp
sub
idiv
adc
incl
mov
inc
cli
add
lret
and
and
cli
add
data16
and
cmp
adc
or
add
ss
xor
ss
add
cmp
std
add
add
inc
in
add
push
idiv
mov
xor
icebp
jns
decb
adc
pop
inc
adc
call
adc
and
scas
push
aam
test
dec
iret
cli
sub
cmc
add
mov
add
xchg
xchg
or
aam
aas
repz
sbb
or
cli
jae
add
js
add
call
and
xchg
fcoml
aaa
adc
daa
adc
sub
mov
cltd
shl
clc
sub
leave
jp
popa
mov
out
sarb
jo
push
cli
out
js
fstpt
mul
add
mov
xorb
out
dec
lahf
call
incl
add
cld
xchg
push
dec
andb
and
adc
dec
lahf
call
ret
mov
jle
sub
repz
mov
lock
dec
lahf
call
hlt
pushf
pushl
push
or
mov
fstps
add
cmp
push
mov
dec
stc
add
scas
mov
mov
psubd
jp
addl
repz
fmuls
jle
stos
xchg
cmp
stc
hlt
hlt
add
and
xchg
dec
stc
shr
sub
sbb
clc
add
int3
mov
mov
in
push
std
mov
test
xchg
lea
sahf
xor
inc
popa
inc
pop
cs
jnp
enter
jecxz
adc
call
add
pushf
mulb
push
adc
add
add
push
repnz
cmc
add
xor
je
test
adc
xor
push
test
addb
addl
jae
jle
cld
popa
push
repnz
add
mov
cmc
je
mov
bound
mov
inc
stc
cmp
add
ss
test
pop
mov
incl
add
ss
pop
and
test
pop
addr16
push
pop
or
inc
cmc
push
pop
movsb
testl
cmp
stos
in
dec
fwait
or
imul
or
jnp
inc
inc
cmp
mov
fsub
stc
mull
out
dec
add
sub
dec
and
out
enter
add
dec
outsb
icebp
dec
add
add
xchg
std
dec
and
cli
mov
jno
jne
fwait
inc
call
int3
clc
and
jmp
add
aas
or
adc
push
dec
pop
and
mov
mov
paddb
psubsb
pop
adc
lock
cwtl
les
jnp
xor
push
mov
add
add
jecxz
dec
stc
ds
jle
fcomip
cld
in
xchg
mov
dec
mov
sub
decl
xchg
bswap
add
ud2
sbb
stos
xchg
fwait
sar
add
dec
mov
stc
pop
dec
jl
xchg
fistl
je
mov
jmp
mov
dec
stc
je
leave
push
xor
rclb
cli
out
add
add
adc
daa
cmp
insb
jmp
push
jmp
stc
stc
cld
pop
adc
fisubs
hlt
in
test
jmp
out
jo
ds
cmp
jmp
mov
mov
or
cmc
call
push
clc
add
lea
adc
cmp
or
or
add
loop
into
call
add
and
test
xchg
rolb
mov
mov
mov
mov
idiv
pushl
mov
sub
int
mulb
clc
testb
in
add
push
in
sub
mov
xor
decb
data16
mov
mov
incl
add
xlat
mov
aad
loopne
ljmp
ds
adc
and
add
dec
iret
mov
sbb
out
fdivrs
or
div
loope,pn
sub
cmp
mov
sbb
dec
js
filds
pop
imul
and
movsl
mov
aaa
xor
clc
mov
and
negl
adc
xor
mov
pop
add
add
push
or
bound
add
pshufw
push
pop
xchg
clc
ret
cmp
jnp
mov
call
mov
enter
test
mov
add
adc
xchg
mov
mov
mov
daa
add
cmp
ret
enter
xchg
mov
pop
sbb
add
or
sarl
cld
shll
outsb
add
sub
add
stc
aam
rorl
add
stc
fs
push
out
aad
or
mov
xchg
xchg
shrb
inc
push
push
mov
mov
lods
std
or
jg
div
add
mov
push
jne
leave
pop
jne
add
add
or
lock
jg
push
test
jnp
add
stc
call
sub
jb
in
stc
add
loop
in
cmpsl
test
push
sbb
or
sbb
jno
sbb
std
adc
jne
cli
mov
inc
loop
imul
pop
ret
dec
mov
bound
sbb
add
sbb
sbb
bound
sbb
adc
add
inc
loop
or
cmc
mov
notb
or
out
inc
divl
cld
jae
jmp
stc
dec
inc
mov
inc
cmpsb
nop
clc
push
mov
xchg
mov
adc
inc
sub
nop
jae
dec
dec
or
adc
out
cli
loop
mov
cmp
icebp
aas
add
add
add
sti
dec
mov
dec
inc
adc
push
jns
imul
xchg
es
xchg
ret
push
fmull
jp
jecxz
out
xor
and
mov
sbb
fwait
les
and
divb
pop
mov
adc
int3
sbb
out
mov
sbb
shrb
inc
and
add
add
test
inc
cmp
add
or
adc
pop
pop
inc
push
jp
lock
stc
out
jae
out
std
jae
jg
adc
ljmp
mov
ljmp
pop
roll
sbb
jb
cmp
mov
popa
rclb
jb
call
cli
sahf
cmp
aam
mov
push
orb
pop
jecxz
fistps
lds
push
es
dec
add
push
hlt
mov
dec
cmp
icebp
mov
sbb
push
stc
add
add
stos
dec
stc
or
clc
add
push
dec
inc
in
leave
mov
jo
arpl
dec
mov
push
push
mov
jo
inc
xchg
mov
jb
fmulp
out
add
add
icebp
xchg
repnz
dec
mov
pusha
cwtl
inc
or
cld
mov
jo
cmp
stos
jl
mov
jnp
addl
sub
dec
cwtl
sub
add
add
adc
cmp
jmp
add
pushl
out
sub
cli
jns
sub
add
test
mov
jmp
jle
aaa
cli
add
inc
cli
add
jne
fs
jl
gs
punpckhbw
add
pop
inc
cld
rolb
add
in
out
mov
add
dec
cli
std
gs
ja
pop
aam
mov
sbb
or
lahf
pop
sti
mov
pop
sbb
adc
add
add
sbb
sbb
or
lret
lcall
adcl
pop
decl
push
inc
dec
adc
push
rcrl
shlb
push
xchg
add
push
gs
adc
jb
cmp
cltd
ljmp
int3
int3
in
fstl
sbb
xchg
xchg
push
add
mov
loopne
add
add
shrb
ljmp
leave
mov
pop
mov
adc
push
mov
dec
stc
out
or
test
sarl
test
orl
mov
mov
add
pop
jmp
add
insb
inc
lcall
add
dec
cmp
mov
cmpsl
lret
inc
stc
add
add
stos
jmp
sbb
jmp
dec
stc
jge
pop
stc
xor
bound
jo
jns
mov
jnp
adc
in
push
add
pop
dec
mov
pusha
adc
dec
test
adc
imul
shll
add
mov
add
lods
sbb
or
add
loop
jge
lret
stc
or
add
iret
pushf
hlt
jmp
mov
xor
add
mov
add
mov
add
clc
clc
subl
jne
jbe
push
test
idivb
mov
jl
inc
or
push
jp
add
pushf
clc
cmc
jne
or
incl
jb
jmp
add
sbb
cmc
jmp
mov
testb
pop
cld
add
mov
add
loopne
add
mov
cmc
add
jb
add
dec
adc
cmp
dec
adc
jle
dec
jle
inc
popf
or
mov
mov
dec
jmp
sbb
or
lret
mov
push
add
add
add
inc
xor
ljmp
cmp
xchg
sub
inc
das
sbb
dec
rolb
mov
jbe
aas
sbb
daa
mov
cmp
and
dec
push
jg
adc
add
bound
inc
dec
mov
or
aas
lock
dec
cmp
or
cmp
fdivr
out
add
add
jmp
mov
mov
jns
les
sub
inc
outsl
dec
stos
add
adc
scas
dec
das
lock
jbe
pop
or
movsl
out
leave
mov
pop
or
jl
push
lahf
add
sbb
cmp
mov
decb
add
lods
notl
fnstsw
add
repnz
dec
stc
and
repnz
xchg
test
movb
inc
or
dec
call
scas
pop
add
ljmpw
dec
add
aas
add
inc
mov
pop
pop
stc
xchg
stc
add
add
mov
add
clc
add
fnstenv
mov
add
popa
sub
cmc
shr
or
popf
mov
inc
push
insl
mov
cmp
in
data16
add
jne
cld
mov
in
jne
cli
add
mov
cmp
call
add
popa
icebp
add
add
hlt
add
sbb
notl
jns
cmc
jbe
stc
adc
js
add
out
jg
jae
adc
mov
subl
xchg
adc
sti
jno
add
inc
dec
je
add
and
and
mov
dec
dec
push
cli
subb
push
dec
add
mov
cli
jp
add
cmp
cmc
loopne
test
dec
mov
add
inc
in
cmpl
lret
add
mov
dec
pop
mov
pop
inc
push
add
je
jp
xchg
and
push
pop
mov
sbb
clc
inc
das
adc
test
sbb
lcall
dec
add
push
decb
cli
pop
or
out
test
mov
sbbl
out
or
adc
add
mov
out
arpl
fs
loopne
lret
add
aas
jo
lcall
mov
stc
cld
dec
in
imul
std
xchg
call
jbe
dec
stc
les
xchg
cld
jp
cmp
repz
cmp
arpl
jne
add
test
fiadds
std
dec
incl
in
daa
dec
stc
ljmp
scas
daa
xor
add
fiadds
lock
push
lock
add
add
loope
push
cmp
lock
mov
inc
or
subl
sti
call
negb
scas
cmpsl
lods
repz
inc
and
jle
outsl
stc
add
add
js
jp
cmp
mov
xchg
jmp
or
test
popa
stc
bound
in
xchg
jecxz
cmc
incl
add
mov
push
sti
idiv
mov
insl
test
testb
outsl
ret
sub
jmp
inc
hlt
xor
orb
lods
stc
or
outsl
inc
nop
stc
inc
aas
add
adc
inc
xchg
sub
aaa
sar
aas
mov
mov
jno
pushl
jae
add
cld
idiv
add
add
sti
add
data16
dec
mov
or
pop
mov
sbb
push
mov
test
pop
lock
and
jbe
cli
lcall
sbb
push
sti
andb
je
adc
testl
add
cmpl
lret
add
add
dec
sbb
dec
push
fiadds
push
push
add
iret
sub
fsubs
xchg
add
cmp
add
cmp
stc
xacquire
out
push
inc
stos
add
add
std
aas
addl
xchg
mov
jns
add
mov
or
xchg
or
adc
jge
std
add
js
sbb
add
or
test
push
scas
sub
pop
fcmove
femms
subl
ds
iret
cmp
xchg
dec
fildl
rorb
insl
dec
clc
sbb
xchg
outsb
lock
xchg
outsb
fdivr
add
add
je
stc
mov
test
xor
add
or
lods
cmp
cmp
idiv
inc
jmp
sub
push
sub
sub
insl
in
adc
add
jns
stc
push
sarb
jmp
sbb
jae
sarl
cli
je
hlt
jae
hlt
mov
shl
mov
mov
push
add
cs
mov
std
mov
xor
mov
fistps
add
add
mov
add
filds
push
add
jbe
je
repz
cli
jnp
or
repz
subl
jno
repz
sti
add
test
idiv
jmp
add
or
mov
push
je
jecxz
std
add
push
mov
cli
add
loope
add
rolb
insb
adc
stos
test
mov
add
dec
xor
in
add
add
jge
pop
fistpll
push
loopne
jg
mov
add
iret
dec
pop
or
mov
add
notb
pop
mov
clc
xchg
xlat
jns
inc
loopne
jg
mov
or
or
lret
add
scas
inc
dec
out
aas
push
and
pop
inc
sbb
hlt
gs
fcomp
cmp
add
add
inc
push
ret
adc
std
decl
in
sub
and
push
adc
lock
or
mov
pop
push
inc
andb
leave
cld
outsb
inc
addl
js
jp
add
mov
jl
outsl
xchg
scas
mov
add
mov
stc
out
sarb
ret
mov
popf
add
hlt
adc
add
pop
cmp
mov
subb
push
jno
inc
loop
out
aad
pop
inc
cmp
push
rolb
lea
adc
jg
cmc
add
push
jge
movsl
cwtl
out
and
or
push
bnd
dec
jns
push
sarb
adc
dec
jl
lds
addr16
or
push
mov
adc
jae
add
add
insl
or
in
stc
ss
mov
cmp
add
arpl
and
iret
jns
jmp
sti
adc
jnp
dec
insl
or
xchg
adc
jmp
push
sub
push
es
add
cld
test
scas
testl
shlb
fstps
mull
push
dec
mov
jle
call
add
add
mov
test
add
int
addb
enter
jp
push
testl
mov
xor
sub
pop
idivl
aaa
arpl
inc
or
adc
testl
decl
push
push
outsb
testb
cmc
xor
cmp
loope
mov
add
cmp
dec
dec
cmp
cmp
xchg
add
push
lds
ss
xchg
out
aam
sbb
xchg
mov
or
data16
dec
push
or
sbb
dec
pop
jae
push
inc
add
call
add
pop
adc
cmpb
push
les
jle
xchg
call
cmp
dec
pop
inc
adc
add
add
jg
dec
sbb
clc
cmpsb
jmp
dec
lret
mov
call
cmp
xchg
add
cmp
out
dec
das
xor
inc
jl
or
stc
data16
dec
insl
fmull
sub
or
mov
gs
cmc
push
icebp
push
push
jecxz
data16
pop
stc
out
addr16
hlt
sarl
int3
cmp
add
icebp
sub
adc
pushf
push
mov
jle
pop
enter
xchg
out
cli
jge
add
pop
mov
mov
mov
add
dec
cmp
movsb
jbe
add
call
cmp
adc
ja
add
xchg
gs
stc
jle
push
imul
aas
sub
add
add
cli
mov
dec
stos
cmp
div
add
sub
cld
jge
push
sub
lcall
xchg
cmp
pop
loope
add
cmp
push
mov
push
es
sti
scas
add
xor
rorb
cmova
fiadds
idiv
xchg
ret
sub
lods
mov
xchg
add
add
outsb
mov
loopne
ljmp
std
inc
sbb
pop
xor
jne
arpl
xchg
js
sbb
mov
stc
call
andl
jmp
jmp
outsb
inc
sbb
lods
xor
mov
cmp
testl
out
test
xor
or
sub
arpl
and
add
lret
xchg
cmp
mov
mov
sub
xlat
xchg
mov
and
repz
cli
cmp
push
data16
out
cli
jo
dec
insb
fcoml
aas
xor
dec
or
dec
dec
loop
dec
inc
sub
mov
test
dec
jnp
testl
lds
push
adc
push
add
add
mov
cmp
pop
inc
clc
adc
test
jg
cmpsl
out
xchg
jmp
pusha
inc
jp
icebp
mov
ljmp
out
sti
dec
loopne
icebp
xchg
in
ficoms
std
dec
test
mov
mov
cmp
push
or
leave
ds
sub
std
inc
push
in
pop
add
clc
cmpsb
test
add
xchg
add
push
out
inc
lock
jae
repnz
add
shl
or
dec
stc
je
xor
and
dec
add
mov
dec
js
in
call
aaa
popa
out
xlat
jmp
fmul
test
xor
mov
cmpsb
incl
sub
cld
sahf
js
pop
add
push
add
dec
mov
loope
stc
cmp
cmpsl
sti
pushaw
imul
dec
js
push
xor
jge
jae
test
ret
jmp
stc
pushl
jmp
lcall
add
pop
in
lcall
add
out
add
ljmp
ljmp
cmp
data16
cltd
fidivrl
inc
cmc
add
and
add
add
sub
xor
cmp
pop
push
adcl
imul
shlb
jge
fcmovu
testb
jmp
sbb
dec
pop
or
cmp
mov
ror
jmp
adc
fmull
adc
cmp
sar
push
pop
cli
cld
clc
sti
xor
das
loopne
or
out
out
add
add
movsl
sbb
dec
loopne
and
jmp
mov
and
fdivl
std
pushl
out
insb
dec
pop
cld
nop
xchg
sti
mov
pop
xor
sarl
je
jmp
ja
cld
orl
lret
xorl
dec
cli
imul
push
jae
lock
add
and
sub
jne
repz
inc
js
jb
add
in
push
jae
call
shr
out
int3
push
fucomip
lds
or
stc
fiaddl
imul
add
cli
push
fwait
jmp
mov
add
add
cmc
cmpsl
orb
add
insb
push
bound
add
adc
mov
int
or
add
std
and
sbb
dec
mov
adcb
mov
push
sbb
push
jmp
jae
and
or
call
push
in
pop
mov
pushf
shrl
mov
lahf
je
mov
neg
cmp
cmpsl
stos
add
stos
sbb
jae
add
add
inc
xchg
clc
dec
cmc
push
std
in
and
shl
mov
incb
mov
inc
add
xchg
jns
add
inc
scas
and
mov
roll
popa
aam
mov
roll
popa
aam
shlb
jne
push
push
mov
data16
rolb
addr16
cmpsb
sti
stc
pop
lcall
cmp
ja
sub
aad
enter
out
loope
jp
dec
jle
or
xor
add
inc
cld
sbb
xchg
mov
mov
mov
std
incl
add
je
pop
rolb
sub
adc
add
pushf
ljmp
add
mov
test
aas
outsb
jb
cmp
lods
cmp
scas
push
push
add
inc
dec
fisttps
or
das
inc
scas
call
inc
decl
stc
jo
xorl
add
dec
jmp
adc
rorw
clc
sahf
mov
mov
xor
jno
inc
stc
loop
add
add
jno,pt
and
jmp
mov
sub
test
out
xor
cmp
xor
mov
aad
jo
nop/reserved
test
push
jb
call
enter
cmp
ljmp
mov
add
cld
out
inc
ror
add
adc
scas
ja
inc
std
add
jnp
repz
rolb
add
movsb
repnz
icebp
aam
pusha
sbb
add
ret
cmp
and
jmp
pop
mov
sub
sub
jmp
xor
add
jns
notb
out
jb
neg
test
adc
ss
jo
aam
stc
or
shrb
sub
add
add
add
push
mov
incb
loopne
ffreep
mov
sarl
gs
add
jbe
add
mov
idivl
mov
xor
mov
mov
std
add
icebp
add
clc
add
cvtpi2ps
mov
inc
lock
std
jmp
js
cld
out
roll
icebp
inc
cmp
add
inc
js
add
in
vmread
pop
jbe
add
inc
dec
sarb
mov
mov
inc
cmpsl
push
mov
cli
nop
sub
ret
or
hlt
inc
push
push
jmp
or
lahf
iret
mov
data16
dec
push
pop
pop
mov
push
ljmp
sbb
ret
jle
cmp
std
or
mov
add
stos
or
sub
sti
jmp
push
testb
cli
mov
jbe
jmp
cmp
add
mov
shr
jg
mov
stc
sti
add
cmp
jns
push
sub
xor
sub
stos
js
sub
lods
push
out
lock
int
je
hlt
sub
or
pop
jecxz,pt
cmpsl
jo
push
sbb
mov
jo
dec
js
bnd
loopne
in
fs
add
jl
xlat
and
repnz
sbb
xor
sbb
and
outsb
xor
loop
pop
shrb
add
loop
not
imul
movsb
mov
out
stos
cmp
dec
stc
xor
rolb
pop
xor
add
dec
stc
jge
add
add
and
adc
push
xchg
arpl
cmc
neg
and
jle
fiadds
sub
jnp
addr16
gs
push
iret
pop
in
jmp
cltd
lret
or
xor
aaa
inc
insl
lcall
cmc
pushf
dec
and
movsb
push
and
pop
jecxz
in
popa
inc
jl
mov
or
add
rolb
inc
aas
dec
pop
cmp
or
sbb
adc
stc
push
sub
inc
add
jbe
divl
cmp
inc
lcall
add
inc
sbb
sbb
je
mov
or
or
mov
test
loop
decl
std
jae
into
xchg
testl
jp
cs
sldt
add
cmc
add
mov
out
push
dec
insb
adc
int3
push
add
push
aam
test
fdivrp
cmpsb
inc
cli
test
xchg
inc
dec
push
std
push
xchg
ljmp
pusha
dec
decb
push
add
rcl
std
call
inc
add
aaa
dec
hlt
loopne
add
jg
add
xchg
or
add
xor
andl
inc
pop
sar
decl
ljmp
and
aad
push
sbb
cmp
mov
dec
dec
out
xor
jnp
ffreep
mov
fadds
dec
stc
out
mov
insl
jecxz
jo
lock
lahf
outsl
pop
sub
call
aas
psubw
mov
fnsave
addr16
push
add
add
mov
push
pop
jno
push
out
xor
out
cld
dec
jo
fadds
dec
add
stc
outsb
push
pop
out
cltd
adc
sub
mov
cmp
arpl
add
outsl
or
ljmp
or
or
jmp
jge
or
aas
idivl
insl
das
jmp
out
scas
xor
jb
fnsave
sub
pop
aam
xchg
repnz
add
add
int3
add
add
add
lds
loop
dec
outsb
repz
stos
or
aas
inc
divl
sub
imul
xchg
add
xchg
sbb
loope
out
sub
dec
ljmp
ljmp
jne
lock
test
fwait
mov
idiv
add
add
and
incl
adc
clc
cmc
jne
jo
incl
fisttpll
add
divb
mov
jecxz
leave
jb
psllq
adc
data16
xor
dec
aad
cmpsl
ret
in
dec
std
xor
add
data16
jns
aaa
cmp
cmp
push
sub
idiv
cmp
cmc
cmovg
hlt
sbb
fiaddl
push
cld
add
add
icebp
jns
out
or
cli
lock
pusha
in
dec
imul
dec
rorb
jge
cmp
or
cmp
cmp
inc
cmp
out
push
inc
jl
xchg
push
cmove
or
push
inc
sti
inc
aaa
mov
mov
loop
std
or
mov
cli
push
mov
cld
pop
dec
ds
add
add
xchg
mov
bound
outsb
xor
fcmovu
call
scas
dec
pop
aaa
inc
inc
pop
pop
fidivl
push
sub
lret
mov
call
fildll
add
fcmovu
add
std
sub
push
std
xor
les
mov
out
dec
jo
loopne
mov
ljmp
sub
push
mov
add
jo
fdivrl
mov
ret
loopne
sub
jbe
add
sub
movsb
mov
jns
stc
add
aas
mov
out
aas
mov
in
pop
mov
cli
or
dec
cmp
xor
cmpsb
out
or
clc
or
fcmovnb
or
shll
jmp
add
mov
add
add
out
mov
jmp
push
cmp
cs
std
jo
loope
mov
xchg
fidivrs
sbb
or
mov
je
faddp
push
pushl
std
jns
int3
jns
rdtsc
jle
adc
std
cmc
and
aam
inc
ss
out
stc
add
jg
adc
inc
insl
inc
insl
cmp
jp
add
add
cld
add
loop
add
mov
cmpl
test
cmp
jmp
mov
dec
xor
stc
rolb
jne
jg
add
shl
mov
testb
pop
repz
outsl
aad
add
sti
xchg
mov
inc
pop
fdivs
sbb
std
inc
out
push
or
add
enter
sbb
mov
add
movsl
jmp
jle
loopne
mov
shlb
inc
sar
fcomp
push
mov
add
int
cli
int3
lret
add
arpl
or
add
dec
gs
out
nop
movb
in
xchg
cli
js
icebp
cmp
scas
push
shlb
push
dec
stc
fidivrs
add
add
dec
addb
loop
ret
call
fisttpl
pop
cmp
xlat
out
test
xchg
push
fiaddl
testb
lock
sbb
jp
and
in
push
add
aad
or
adc
and
in
call
fmull
insb
hlt
lcall
cmc
fildl
inc
clc
rolb
loopne
call
or
jmp
jns
stc
mov
push
aam
xor
add
adc
push
stc
or
clc
add
xor
insl
in
inc
add
jecxz
in
jge
push
add
push
dec
add
mov
in
aaa
movsb
test
rolb
aaa
stc
add
cmp
call
je
or
clc
add
imul
add
insl
repz
cmp
cli
insb
add
subl
add
stc
add
mov
leave
ja
iret
adc
add
out
lret
and
dec
idiv
add
add
add
in
lret
pcmpgtw
or
testb
or
xor
addb
test
adc
add
mov
lret
or
push
dec
loope
pushl
into
or
pop
jmp
dec
loop
mov
push
sub
addl
cli
dec
cmpl
xchg
add
imul
adc
and
mov
loope
jmp
push
into
out
insb
push
pop
mov
dec
loop
mov
push
sub
add
rclb
cli
shr
aas
adc
popf
jmp
mov
pop
xor
and
mov
loopne
adc
add
push
stc
out
mov
add
cmp
hlt
sub
add
jge
aad
rcrl
lock
mov
imul
lea
pop
jg
js
and
andb
fimuls
pop
ss
and
shlb
xchg
in
lock
cmp
ljmp
cld
sbb
push
mov
inc
xorb
push
xor
add
aaa
push
jp
sbb
lret
fsts
out
fcomi
into
lcall
aas
mov
dec
mov
mov
stc
cmpsb
into
push
in
jmp
dec
stc
test
push
mov
push
decl
outsb
test
jmp
mov
in
xor
cmpsl
push
push
jnp
dec
dec
pop
ret
dec
into
jb
add
add
mov
mov
push
dec
xchg
jae
xlat
inc
stc
add
adcb
mov
mov
stc
jns
cmpsl
inc
cmp
inc
addl
xchg
adc
mov
push
and
in
adc
xchg
and
cmp
aas
jl
mov
or
ljmp
div
test
add
ja
testb
mov
pop
cld
add
lock
mov
cmpsb
je
pop
popf
arpl
xor
sbb
je
mov
je
testl
add
aam
adc
mov
decl
xor
cld
jo
int
xchg
stos
xchg
mov
cmpsb
or
ljmp
outsb
mov
push
add
add
pushf
pushl
or
mov
int
out
arpl
add
scas
loop
test
pop
cli
jae
arpl
or
loope
decl
pop
sti
lock
inc
sti
xchg
scas
or
cmp
and
aad
mov
rol
iret
ficompl
inc
jne
shlb
add
iret
loop
lcall
dec
add
iret
lret
adc
dec
lahf
loope
shll
out
xor
jmp
push
iret
mov
int
inc
stc
xchg
sbb
into
roll
dec
stc
ljmp
cmp
rcll
iret
pop
push
movsl
pop
jecxz
sbb
dec
rolb
xchg
add
xchg
iret
add
std
dec
mul
dec
jne
daa
std
sarl
enter
add
add
std
or
sar
dec
les
gs
sar
out
cmp
test
xchg
out
popf
sar
adc
iret
stc
mov
xchg
hlt
je
rol
add
in
mov
dec
or
jmp
std
sar
sub
loope
addr16
rolb
out
inc
sti
dec
add
add
pop
pop
add
stc
jns
sub
adcl
clc
sbbl
inc
pop
ss
ficomps
idiv
test
mov
idiv
insl
or
cmc
sbb
lcall
sysexit
mulb
std
push
bnd
lcall
add
mov
sbb
test
xor
sbb
add
add
test
jns
fwait
test
adcl
stc
cmp
and
inc
adc
test
jnp
sub
cld
loopne
ja
inc
mov
cli
enter
push
pop
mov
mov
inc
cmp
in
add
enter
cmp
dec
arpl
stos
call
adc
subb
add
cli
jle
popf
leave
cli
inc
sub
xchg
sar
test
jl
cli
mov
adc
sbb
cmp
pop
jl
cmp
push
lds
add
cld
data16
lret
inc
lcall
ret
jmp
dec
cld
arpl
lret
and
xor
xchg
lods
cmpsl
and
iret
mov
cmp
cld
xor
add
add
pop
cld
push
mov
into
push
andl
push
andl
mov
idivl
loopne
addr16
into
push
sti
jno
push
cli
pop
ss
mov
pusha
inc
inc
mull
jg
mul
add
add
and
lret
stc
jmp
ja
add
jb
add
sub
mov
adc
out
add
ret
lret
stc
pushf
mov
shlb
cmc
iret
jae
addl
dec
mov
out
cld
out
cmp
cmp
fidivl
add
loop
jmp
dec
rorl
ja
clc
or
lret
ror
repz
adc
dec
incb
add
decb
pop
jne
arpl
stc
testl
adcb
sti
sbb
divb
add
jne
mov
or
mov
idiv
imul
cmp
push
dec
and
add
jne
push
ret
lcall
scas
dec
lcall
divb
mov
fcos
mov
nop
add
data16
add
push
and
xor
mov
fcos
add
add
and
jmp
dec
cld
xlat
call
aam
sub
std
inc
jle
push
and
pop
cli
cmp
inc
push
daa
push
sbb
sbb
jp
sub
mov
adc
dec
rcpps
dec
pop
add
mov
rorb
mov
insl
ljmp
repz
inc
xchg
std
pop
negb
push
dec
daa
jo
add
rcrb
call
int3
js
ljmp
std
je
dec
inc
or
pop
imul
ss
inc
enter
cmp
lret
mov
enter
push
les
call
mov
enter
mov
push
dec
enter
stc
inc
lret
in
daa
sti
lret
stc
in
add
int
aad
inc
outsb
mov
and
sbb
add
or
clc
cmp
test
xchg
dec
rolb
jl
jmp
pop
je
lret
ficoml
shrl
ret
push
jle
cld
pusha
jg
push
movl
scas
adc
mov
mov
cli
sbb
repnz
adc
inc
rorl
stc
stc
cld
and
ret
dec
adc
mov
mov
add
fidivrs
adc
jge
lock
stc
mov
push
les
jmp
dec
jle
lds
cli
jl
repnz
test
out
jbe
mov
stc
pop
jae
shlb
xchg
bound
dec
or
jle
aad
cltd
inc
mov
add
inc
pop
jo
shl
fldenv
addb
add
shrl
and
push
mov
mov
sbb
push
add
and
cli
mov
je
cmc
mov
jne
inc
ret
jmp
mov
test
test
mov
incl
cld
pop
mov
in
stc
add
cltd
and
inc
clc
cmc
jne
shrb
dec
scas
dec
sbb
sti
add
add
lahf
jl
pop
or
cli
fcmovbe
aad
sub
lods
inc
sar
mov
outsb
enter
and
and
or
add
mov
loope
rcll
ror
je
iret
rclb
in
decb
add
or
pop
leave
je
cmp
rcrb
mov
dec
rolb
call
add
add
pushf
icebp
shrb
xor
stc
xor
leave
xor
sbb
int
xor
jmp
shl
jo
push
jo
orb
jl
shrl
jno
adc
push
dec
loope
mov
out
dec
stc
mov
nop
pop
enter
les
cmp
jmp
dec
fsubl
push
mov
cmpl
out
add
add
dec
sarb
sub
push
pop
les
scas
movsl
adc
sarl
add
xchg
repz
dec
stc
add
add
ja
jmp
dec
lock
dec
mov
std
mov
mov
push
in
xor
xchg
inc
jl
in
mov
in
pusha
nop
call
and
in
xchg
inc
stc
pusha
add
add
cmp
or
stc
jnp
in
jae
pushf
jmp
add
jmp
mov
cli
mov
mov
test
rorb
ret
shlb
sbb
mov
fdivr
jno
mov
jmp
lock
outsb
xor
cmp
or
or
xor
mov
add
testb
push
xor
xchg
add
mov
addb
sbbb
out
fmuls
and
cmpb
ljmp
jmp
mov
jae
add
lock
push
into
mov
rcrl
andb
or
dec
bound
push
xchg
pop
xor
aam
push
pop
iret
jbe
jg
cmp
push
push
inc
sarl
pop
push
mov
mov
out
testl
cmpsb
js
push
jb
cli
bound
ds
dec
cmp
rclb
dec
add
xlat
test
std
xchg
les
cmovnp
mov
add
pop
cmp
js
jmp
movsb
ss
and
inc
pop
iret
les
fsubr
jg
sti
sub
xor
cltd
les
ja
stc
cmp
push
cli
sbb
ret
ret
fstpl
inc
inc
rcrb
inc
clc
ret
lcall
shlb
jl
add
dec
stc
mov
add
push
shll
add
daa
cmp
add
dec
icebp
mov
lret
into
fs
dec
je
lods
in
mov
jae
mov
push
inc
jmp
inc
leave
cmp
mov
xchg
fmuls
loop
mov
xchg
leave
mov
test
ret
pop
test
adcb
add
cli
scas
or
das
loop
or
add
movsb
incl
addb
insb
xlat
into
cli
jbe
or
cmc
inc
ret
je
add
in
gs
stc
add
test
mov
sub
imul
cmp
test
idiv
sbb
out
push
jns
and
add
cmc
jne
xchg
cmp
inc
data16
addb
add
add
xorb
or
roll
lret
mov
jne
insl
push
hlt
leave
add
ret
lahf
idiv
jae
push
test
cmc
add
in
cmc
pushl
in
sub
fsubs
sbb
or
cmp
xor
cmpsl
jecxz
cli
test
lds
clc
stos
add
xchg
add
or
dec
cmpb
and
shlb
xchg
cmpb
mov
adc
adc
cmp
and
mov
dec
jae
xlat
pop
insb
popf
mov
push
das
movlps
or
ret
clc
xchg
inc
stc
gs
mov
test
xchg
adc
sbb
mov
xor
push
and
ss
mov
lock
cs
adc
sarl
out
xor
hlt
sti
and
add
jne
xor
mov
xchg
sarb
rcl
int3
mov
push
jae
test
jo
sub
mov
shrl
xchg
mov
in
je
repz
add
scas
loop
mov
mov
aad
sub
stos
std
popf
test
testl
insl
out
aam
cs
es
loope
sbb
icebp
lds
stc
je
shlb
lods
xlat
out
mov
rcrb
iret
ljmp
leave
dec
sti
add
jl
or
jb
cli
add
add
cmp
out
stos
fidivs
lds
loope
stos
je
lea
inc
adc
xor
jl
adc
or
xor
add
xor
xor
rorb
and
incl
js
in
jnp
inc
lcall
and
mov
sbb
sbb
jnp
adc
add
sti
in
call
test
testb
cmp
add
xorb
stos
popf
icebp
mov
in
arpl
cli
aam
inc
test
lret
cmpl
mov
sbbl
shrb
mov
xchg
inc
and
aaa
in
xchg
or
inc
add
add
mov
stc
jae
jg
hlt
mov
xchg
orb
fadds
or
or
loope
mov
sti
loop
add
and
aam
push
sti
ret
je
xor
aaa
cli
push
imul
xchg
frstor
mov
test
aaa
ds
dec
mov
hlt
mov
cmpsl
aad
fidivl
cmp
inc
mov
mov
sub
jae
call
aam
lock
mov
lock
push
shl
mov
ja
out
dec
test
sbb
cli
mov
or
sbb
insl
lahf
in
in
mov
add
add
inc
xor
sahf
cld
or
or
fnstsw
mov
fnsave
mov
add
xor
lds
jle
cli
mov
hlt
mov
sub
out
push
stc
add
fldl
push
fstl
mov
cmp
not
ss
mov
pop
test
xchg
dec
clc
aaa
and
add
test
stc
into
or
arpl
stc
jmp
je
lods
dec
incl
divb
je
or
pop
iret
fnstcw
je
gs
add
cli
add
xchg
cmp
mov
std
add
cmp
push
push
lea
inc
insl
cmp
add
push
jae
cmpl
add
mov
push
rorb
add
mov
mov
decl
stos
and
fstpl
daa
pop
sti
aad
pop
sub
cmp
std
or
je
cli
sbb
inc
add
loope
rcrl
cli
add
inc
hlt
dec
out
add
sub
or
fdivr
adcl
add
add
push
fnsave
outsb
or
pop
pop
sbb
jp
insl
push
mov
pusha
dec
sbb
cmpsb
stos
dec
mov
push
or
pop
out
dec
jns
push
push
jle
add
es
fdivr
out
mov
loopne
rorl
mov
inc
jge
cmpsb
adc
mov
lods
jnp
jg
add
add
sub
out
push
jle
cmpsb
aad
dec
pop
push
mov
xor
push
jnp
cmpsb
mov
cld
jle
mov
lods
pop
js
or
xchg
mov
mov
sar
out
push
stos
jecxz
dec
mov
xor
shrb
dec
adc
cmc
bound
icebp
push
pushf
adc
add
mov
repnz
push
or
mov
inc
xor
out
nop
mov
inc
cmc
mov
mov
ffree
stc
cld
inc
jl
pop
cwtl
sub
pushw
add
add
add
jnp
add
pop
xchg
add
stos
mov
ror
cmc
add
leave
cmc
add
shl
add
leave
cmc
add
ret
xchg
add
add
xlat
mov
add
mov
add
mov
add
mov
add
lea
add
xchg
add
mov
add
lea
add
mov
add
xchg
add
xchg
add
jnp
add
test
add
add
jl
add
mov
add
test
add
mov
add
cmp
call
cmpl
mov
add
add
repz
add
xchg
cmp
dec
fists
cmp
dec
add
cmp
dec
sub
cmp
dec
out
xchg
cmp
dec
dec
cwtl
cmp
dec
gs
cmp
dec
or
cmp
dec
cld
mov
dec
sbb
xchg
add
add
mov
dec
pop
cmp
dec
mov
mov
dec
imul
push
stc
in
dec
stc
movsl
pop
inc
stc
pop
pop
cmp
das
pop
xor
mov
xchg
and
and
stc
dec
data16
out
inc
cld
jecxz
push
imul
or
out
pop
pop
inc
and
push
add
adc
add
cmp
repz
out
sbb
out
sbb
in
push
fxch
loop
fcmove
loop
fcmovnb
fbstp
xlat
or
sub
paddsb
add
imul
mov
push
inc
mov
je
add
test
xor
mov
icebp
rolb
inc
dec
mov
in
cmp
and
inc
jmp
mov
add
fsubrp
add
fucomp
add
add
mov
in
add
mov
in
add
outsl
out
add
fucomip
add
mov
in
add
add
imul
insb
xor
add
xor
add
inc
pop
cmp
ret
adc
cmp
adc
cmp
hlt
mov
add
sbb
add
add
sbb
mov
cmp
add
cmp
jge
cmp
mov
cmp
pop
sbb
inc
sbb
cmp
cmp
inc
sbb
pop
sbb
and
cmp
je
cmp
sbb
sbb
mov
dec
cmp
inc
sbb
cwtl
sbb
mov
cmp
mov
sbb
xchg
das
out
sbb
orb
ret
aas
orl
dec
fwait
out
push
xchg
cwtl
push
das
jge
jp
ret
mov
add
xchg
sbb
pop
test
inc
jg
mov
gs
andl
jne
sbbl
lcall
or
movsl
or
dec
stc
push
adc
lahf
sbb
es
or
dec
cmpsl
js
addr16
lret
cli
clc
into
js
add
add
addb
mov
cwtl
fimuls
mov
or
inc
mov
out
lret
fcoml
mov
fs
mov
inc
jge
fnstenv
jg
stos
popa
mov
and
call
inc
pop
and
add
shlb
mov
lods
xchg
jl
mov
outsb
mov
mov
rclb
add
andl
fwait
dec
mov
call
inc
sbb
pop
dec
popa
sbbb
xor
push
mov
add
fdivr
outsb
lahf
pushl
xor
inc
icebp
xor
std
std
xor
and
xchg
bound
add
adc
test
mov
stc
push
repz
sub
repz
in
in
shll
cli
out
mov
xchg
sbb
or
stc
bound
or
jo
sbb
mov
jb
mov
jne
cmpsb
mov
stc
add
pop
cli
mov
pop
idiv
pop
xchg
jne
popa
pop
mov
cs
movsb
aas
push
test
loop
test
testb
dec
cli
incl
add
divb
lea
and
cs
mov
xchg
das
inc
or
adc
pop
fcmovbe
cmp
popw
add
stc
call
je
arpl
add
es
cmp
push
cmp
ss
add
call
add
or
imulb
stos
cli
xor
decl
out
xchg
bound
add
add
sbb
and
stos
cli
xlat
adc
xchg
and
xchg
inc
out
movb
cmpsb
sub
cwtl
jecxz
out
sbb
out
sub
xchg
fs
cli
push
sub
jl
das
fwait
stos
cli
aam
test
cmp
fs
and
pop
daa
les
dec
dec
repz
mov
add
add
stc
je
dec
push
fwait
add
mov
hlt
arpl
jg
clc
aad
jb
stc
and
sbb
lahf
inc
or
and
mul
add
fidivrs
or
pop
stos
cmp
push
nop
mov
subl
test
add
push
test
pop
dec
dec
sti
jo
add
add
in
sbb
jg
aaa
jno
sub
aam
lock
add
daa
mov
call
stc
iret
icebp
stc
push
cld
xor
pop
loopne
stc
jbe
and
repnz
shlb
std
aaa
sarb
test
jmp
in
stc
xchg
testb
add
add
add
cmc
cmp
pop
adc
add
push
mov
inc
or
mov
orb
cmpsl
stc
jmp
mov
test
repnz
sub
xchg
and
or
inc
scas
jns
je
sub
imul
sub
cmp
enter
repz
xlat
pop
mov
push
xchg
add
add
push
idiv
mov
sbb
jecxz
orb
mov
cmp
add
idiv
pop
sub
in
dec
std
test
ljmp
lea
cmp
mov
js
decl
cmpsb
je
adc
and
cmpsb
add
stos
adcb
jae
xlat
jmp
mov
repnz
fnsave
enter
adc
fimull
cmpsb
cli
shrb
hlt
inc
adc
ljmp
cmp
push
dec
bound
pop
cs
or
cmpl
push
cld
and
icebp
insl
je
pop
lcall
in
test
scas
cmpsl
cli
pop
sbb
incl
out
mov
clc
out
xor
addr16
add
ret
sub
in
jnp
cmp
les
movsl
mov
inc
hlt
movsl
xchg
test
in
icebp
out
movsl
outsb
dec
sarl
das
xchg
arpl
mov
push
aam
pop
pop
ja
movsl
inc
test
pop
icebp
mov
das
pop
jae
dec
je
sbb
or
fwait
cli
sub
cmpsl
sbb
add
add
sub
leave
shll
out
negl
mov
jmp
out
xor
imul
jb
mov
and
jnp
in
movsl
adc
loop
cltd
xor
xchg
push
stc
add
jnp
shlb
mov
jb
movsl
xor
rcr
sub
jmp
add
add
dec
cmp
add
pushf
mov
push
jmp
inc
in
shl
dec
add
dec
lock
pop
cmp
dec
push
sar
cmp
jmp
movl
xchg
pop
jge
lods
dec
lea
out
push
push
shrl
sbb
rcrl
dec
pop
idiv
aaa
cli
dec
cmp
mov
mov
test
rcrl
call
add
add
loopne
je
xchg
dec
call
and
adc
adc
add
add
testl
pop
out
lock
call
shll
repnz
testb
push
mov
repnz
sbb
in
pop
add
xchg
mov
out
jecxz
dec
sti
add
add
jbe
jecxz
jo
lock
loopne
or
fnstcw
mov
enter
xchg
sub
ret
divl
mov
arpl
test
mov
je
punpckhwd
stc
and
rorl
outsb
pushf
cmpsl
and
jmp
cmpsl
xchg
mov
add
mov
hlt
push
aad
and
xor
or
mov
fnstenv
add
jbe
inc
hlt
mov
data16
fisubrl
cmp
and
mov
push
cmpsl
lret
arpl
aas
out
icebp
movsl
cmp
lds
imul
sub
mov
add
add
pop
mov
mov
lret
addr16
je
pop
out
dec
stc
add
xchg
xorl
cli
or
mov
or
or
add
icebp
xchg
dec
xchg
jle
dec
stc
jge
mov
jnp
xor
cmp
cld
jl
inc
cld
mov
jmp
stc
sbb
jne
data16
jge
add
add
shl
mov
inc
add
pop
add
push
out
push
pop
ljmp
push
orb
out
movsb
mov
push
idiv
rolb
jbe
add
in
icebp
orl
jnp
inc
mov
sbb
and
adc
xchg
outsb
push
add
mull
mov
pop
add
add
jo
push
xor
rclb
incl
cmpsb
jae
ljmp
mov
cmp
das
push
movsl
mov
jg
xchg
jae
sti
pop
sbb
push
std
dec
cld
bound
shrl
push
std
dec
cld
bound
sti
cmp
hlt
aas
dec
sub
test
sbb
cmpsl
shl
xor
popf
adc
mov
or
inc
pop
repz
dec
dec
dec
sti
dec
lret
punpckhbw
lcall
hlt
aas
dec
out
adc
mov
dec
sti
jo
lret
mov
mov
mov
mov
out
sar
das
cmc
pusha
stc
mov
inc
imul
mov
xlat
cmp
cli
sub
push
or
sti
xlat
sbb
or
add
add
loopne
add
mov
push
jae
and
jmp
in
pop
sub
hlt
call
call
int
out
dec
loop
pop
sbb
call
add
cmpsl
fistl
sbb
jb
call
push
jne
mov
xchg
cmp
push
add
push
les
and
insl
add
add
sahf
stc
jmp
aaa
adc
in
stc
stc
cld
pop
or
rorl
nop
jmp
xor
push
xchg
hlt
cs
out
dec
xchg
out
stos
and
and
in
adc
cmp
scas
add
xor
jmp
sbb
or
mov
test
movsb
mov
rolb
xor
mov
add
cmpsb
imul
push
cmp
sarb
push
dec
movsl
addb
dec
dec
mov
testb
inc
lcall
and
push
aaa
incb
jge
lret
inc
or
add
leave
cs
and
idiv
mov
cmp
je
stc
cmc
adc
imul
mov
idiv
mov
cmp
pushf
push
test
fwait
cli
shrb
and
mov
rcrl
inc
jae
cmp
pop
test
mov
dec
and
xchg
xor
adc
jae
jl
jno
fcompl
add
nop
inc
push
bound
add
or
icebp
ret
test
add
roll
iret
sub
xchg
jecxz
lock
cli
or
int
mov
jae
sbb
inc
mov
xor
divl
dec
xor
pop
pop
stc
loop
mov
out
adc
xlat
mov
cmp
cmp
cmc
out
enter
xor
push
shlb
inc
outsl
and
xor
add
add
xchg
or
outsl
clc
orb
adc
lret
or
xor
sbb
addr16
adc
shlb
loopne
shlb
mov
sub
cmpsb
ds
push
stc
add
cmp
cli
or
sbb
je
adc
js
xchg
mov
jns
push
popa
push
jmp
pop
lret
xchg
mov
or
add
aam
pop
cmp
cmp
icebp
xor
insb
jg
dec
testb
jo
push
popa
rcrl
push
mov
pop
sub
imul
xchg
pusha
add
iret
sbb
or
hlt
sub
jmp
cltd
xchg
stc
add
mov
sar
aas
std
call
add
add
jp
stos
adcl
popa
xor
jo
cmp
cltd
and
and
das
out
cld
mov
add
lock
cld
xchg
lock
outsb
popa
decl
push
sbbl
mov
xor
fildl
notb
pushf
cmp
cmp
add
dec
mov
or
or
lret
out
sbb
mov
inc
aaa
or
mov
arpl
inc
shrl
xor
mov
nop
jp
aam
pop
mov
mov
aaa
mov
add
cli
shrl
in
cmp
flds
les
mov
or
sbb
jle
movsl
cmpb
movsb
adc
dec
pop
xchg
ss
push
movsl
jne
aas
int
std
out
shlb
out
mov
adc
lock
and
cmp
imul
push
dec
mov
mov
shlb
nop
stos
xchg
out
enter
sti
call
fisttpl
xor
dec
jp
or
cmp
mov
sbb
lcall
les
repz
and
xlat
cmp
add
mov
subl
cli
cs
dec
jle
sub
enter
xchg
push
insb
xor
rcr
push
mov
lret
int
ljmp
mov
xchg
xor
pusha
cld
and
bound
addl
adc
adc
cmc
push
xchg
mov
jge
jmp
aam
push
adc
mov
stc
push
addl
add
lea
pop
add
xchg
addb
mov
mov
xchg
mov
idiv
add
add
movsl
rorb
jecxz
cmp
jae
or
jo
call
int
adc
sub
adc
pushl
jno
lcall
leave
dec
mov
jno
int3
lcall
and
jno
mov
cmc
adc
dec
sbb
rolb
fistpl
std
call
mov
add
push
adc
dec
mov
inc
mov
mov
je
sbb
aam
movsb
es
mov
std
decl
inc
mov
fdivrl
mov
mov
cmp
mov
xchg
xchg
cmp
inc
xchg
jno
inc
fwait
jno
adc
mov
add
add
lret
addr16
and
mov
cmpsl
add
cmp
frstor
xor
cmovne
sti
adc
xchg
jl
jle
aam
dec
cmp
mov
mov
lret
clc
dec
xor
add
xchg
fstpt
sbb
push
xor
mul
add
or
xchg
arpl
faddl
jle
or
clc
fs
mov
add
sub
xchg
jmp
testl
stc
add
ja
add
aam
push
lock
popf
je
xchg
cmp
adc
cmp
add
lea
movsb
cmp
or
notb
push
out
sub
inc
icebp
aas
test
mov
cld
into
loop
push
push
decl
stc
cmp
xchg
rorb
push
jo
add
adc
hlt
nop
add
movsb
xor
adc
rorb
adc
pop
sbb
inc
add
rcll
cmp
clc
es
push
add
insb
je
sbb
addl
pusha
loope
pop
data16
shlb
cld
cmc
adc
dec
iret
out
inc
and
in
jne
add
repz
lock
divb
fcomip
adc
inc
js
les
loope
stos
imulb
fisubrs
mov
add
arpl
notb
cmp
mov
cmpl
push
sub
std
push
js
mov
cpuid
xchg
xor
in
add
mov
xlat
pop
cmp
cmp
add
mov
decl
lock
cltd
jg
mov
daa
orl
jp
mov
xchg
mov
mov
pop
or
loop
add
or
and
enter
mov
mov
mov
mov
sbb
lea
jb
add
cmp
jle
jne
sbb
add
and
test
inc
cld
mov
pop
dec
inc
and
push
in
jo
push
and
orb
mov
fmulp
add
dec
clc
sti
jge
jmp
mov
daa
add
das
aas
dec
stc
inc
stos
es
daa
outsl
pop
xor
xor
call
jne
pop
cmp
call
inc
dec
je
pop
add
add
testl
pusha
mov
and
cmp
mov
add
mov
push
jb
add
mov
push
cs
xchg
xor
aaa
inc
pop
dec
jbe
insb
or
fidivs
add
pop
dec
xchg
adc
test
ret
out
xchg
or
add
add
stc
xor
sub
fcoml
ljmp
dec
stc
repnz
mov
xchg
cwtl
jno
pop
and
rcrb
cmp
icebp
test
rcrb
or
jbe
addl
xchg
ret
out
add
sub
xorl
push
incl
add
and
je
push
jl
ss
or
inc
divb
je
mov
mov
or
add
sti
jo
inc
out
mov
or
add
int3
jnp
imul
sti
mov
add
jnp
filds
bound
aas
dec
adc
adc
cli
xchg
aam
std
push
pusha
inc
loope
add
add
mov
mov
xor
add
sbb
pop
sub
orl
nop
cli
shl
adc
inc
or
mov
cmp
icebp
jnp
lds
int
jg
sahf
std
jae
cmp
mov
stc
repz
ja
hlt
mov
mov
mov
rcl
dec
pop
call
push
add
repnz
mov
hlt
inc
dec
test
jmp
and
push
cmp
inc
mov
mov
and
hlt
mov
es
in
in
add
stc
xchg
jp
test
sti
add
call
cld
sahf
add
rorl
in
inc
mov
stc
mov
sub
lock
add
push
push
loop
cmc
jae
enter
pop
in
pop
mov
add
adc
dec
or
add
or
mov
test
inc
add
ds
sub
rorb
cli
lahf
inc
lret
sub
add
dec
xor
in
leave
add
idivb
std
dec
out
add
add
push
cmp
incb
cmp
sahf
test
clc
add
divb
mov
xor
je
out
add
and
add
cmp
pushl
cmc
add
repnz
idiv
sub
fs
jmp
jp
mov
or
xor
insl
nop
movsl
sbb
mov
imul
or
pop
jbe
push
into
pop
dec
aaa
pcmpgtw
mov
into
push
jmp
xchg
cmovo
jns
or
ljmp
call
or
fsubrs
jp
mov
ret
out
out
add
adc
sub
cli
rclb
add
push
cwtl
xor
mov
jp
sti
nop
std
incl
add
sbb
leave
sub
push
call
fcoml
cmp
adc
shr
aas
dec
cli
mov
fists
xor
int3
test
push
cwtl
stc
dec
add
xor
aaa
mov
stc
inc
dec
mov
jg
cmp
jle
xchg
aad
dec
mov
inc
dec
xchg
and
lock
jg
add
or
test
dec
push
mov
adc
fildl
nop
cmp
sbb
push
sti
add
stc
mov
fwait
sub
pop
mov
stc
pop
test
add
adc
test
loope
mov
jp
icebp
aad
test
ret
jge
inc
hlt
push
aas
jo
pop
stos
pop
jle
push
jle
jmp
aas
icebp
test
aad
mov
cmp
subl
stc
add
push
xchg
icebp
stc
aam
testb
inc
je
bound
cli
aam
jne
adc
out
js
lds
stc
fs
or
jmp
jno
and
push
cmp
cli
add
add
es
xor
je
addr16
hlt
es
not
loope
aas
or
sub
mov
or
cmpsl
jg
subb
lods
mov
divb
jo
je
cmp
test
call
push
adc
add
add
call
test
jmp
arpl
mov
add
data16
push
call
jno
or
js
je
fdivrl
dec
lcall
sbb
jp
orl
dec
xchg
std
cli
jl
mov
cmpb
aam
hlt
jg
idiv
decl
or
aad
xchg
daa
cmp
decl
iret
cli
inc
push
out
aas
dec
jp
ficomps
or
and
add
dec
xchg
std
aas
cli
dec
xor
xchg
sub
sti
inc
push
jmp
mov
ss
pushf
outsb
decl
ljmp
stc
std
ret
cmp
mov
out
pop
in
cmpsl
add
stc
cltd
sub
mov
add
andb
sub
jnp
outsl
sub
jge
out
fadds
jo
jae
sbb
and
inc
dec
jle
test
jo
lock
xor
mov
or
jle
enter
sub
sub
stc
testl
cmp
call
xor
cmp
call
into
inc
or
rcrb
adc
leave
in
call
sub
xor
sub
mov
fists
mov
inc
in
incb
test
fistpll
mov
aad
out
sarl
out
leave
push
and
std
and
xchg
jl
std
test
mov
jg
stc
pop
xor
mov
xor
jne
add
cmc
adc
inc
mov
push
scas
les
add
add
jge
jne
dec
mov
idivb
or
jnp
mov
enter
inc
mov
repnz
mov
idiv
jne
add
adc
std
push
pop
cmc
lds
sub
lds
adc
test
pop
scas
repnz
push
aad
cmp
cmpb
std
in
mov
xchg
mov
add
test
xchg
or
les
je
mov
mov
xchg
js
dec
adc
mov
jmp
xchg
jbe
mov
cmp
popa
add
pop
mov
jle
xchg
xchg
xchg
cwtl
test
loope
loopne
mov
push
jbe
sub
ror
clc
push
pop
sbb
clc
mov
movsl
or
add
add
cld
or
and
decl
and
push
jnp
adcb
mov
je
push
jl
daa
jg
jg
add
cmp
pop
cmpb
out
icebp
push
mov
mulps
out
cwtl
xorb
cltd
sbb
jg
iret
pop
cmp
mov
dec
cmc
ret
add
add
das
xor
enter
xchg
ljmp
mov
mov
mov
iret
andl
icebp
jo
into
jg
flds
cmp
cmp
jae
int3
in
sti
mov
arpl
daa
enter
dec
lcall
push
sahf
filds
or
scas
push
sub
hlt
sub
jmp
add
add
mov
push
ret
push
mov
pop
jb
cli
data16
stc
mov
stos
sub
aaa
test
shlb
ret
sub
outsb
xchg
and
ret
repnz
int3
scas
stc
daa
dec
sub
hlt
lock
add
cmp
pop
pop
ss
mov
jbe
and
out
add
cli
add
add
xchg
mov
add
sbb
adc
es
inc
cld
mov
add
inc
cld
loope
enter
jns
pop
in
icebp
jae
fsts
out
adc
stc
mov
movsl
notb
mov
dec
push
sbb
loopne
js
test
test
jmp
js
and
js
and
mov
or
dec
nop
xorb
jmp
lock
std
sldt
add
adc
pop
rolb
push
nop
lods
add
rorb
into
dec
cltd
or
gs
lret
icebp
pop
dec
jns
and
cmpb
cmp
pop
lahf
xor
ret
out
xchg
std
call
mov
cmpb
icebp
imul
je
psubq
add
add
push
jg
lcall
sbb
inc
jb,pn
insb
add
jle
dec
jl
test
idivb
jg
cmpps
mov
jmp
shll
incb
and
mov
jnp
mov
jbe
notl
pushf
adc
push
ja
cmpsl
add
mov
add
call
outsl
es
add
add
jbe
addb
xor
in
cmp
sbb
call
pusha
xchg
adc
dec
jbe
adc
daa
addr16
mov
xor
sbb
add
call
pmuludq
xor
cli
clc
in
hlt
aaa
lods
inc
add
add
jg
sub
push
bound
add
inc
sub
pushf
cmp
leave
push
cwtl
add
jae
mov
stc
faddl
jmp
jmp
inc
xor
pop
stc
or
xchg
dec
and
mov
in
cmpsl
mov
movsl
dec
push
cmpsl
dec
push
stc
addl
adcb
cld
mov
cmc
add
shl
jne
sti
je
stc
orb
stc
addb
cli
notb
jecxz
jne
in
cmc
jne
sti
adc
push
mov
mov
enter
push
mov
ja
or
test
xorb
mov
push
mov
dec
pushl
xchg
cmpsl
divb
cld
jmp
xlat
xchg
aas
je
or
mull
inc
jae
mov
test
add
adc
jnp
push
fistpll
inc
sti
xor
cltd
or
je
pop
ret
inc
jno
inc
pop
ret
dec
jne
push
icebp
repz
cmp
cli
cmp
xor
pop
mov
testl
mov
dec
lahf
pop
stc
and
xor
testb
pop
jo
adc
aad
cmp
add
add
cmp
add
leave
aam
ret
test
out
movsb
sbb
out
xchg
sub
iret
jb
idivl
subl
dec
xor
repz
push
stc
fiaddl
iret
bound
test
jecxz
sbb
mov
fiadds
pop
out
call
js
jmp
adc
mov
add
pop
jns
and
jb
icebp
inc
jns
clc
inc
jg
inc
dec
stc
add
or
stc
jmp
shll
fmulp
xchg
jmp
push
clc
testl
dec
stc
data16
sub
and
fldcw
int3
insl
jbe
jle
idivl
sub
insb
imul
jo
aad
div
push
aas
mov
sub
je
and
out
leave
shrb
add
int3
jno
out
out
push
test
add
test
dec
inc
idiv
jae
jbe
sbb
fs
pushl
mov
je
sbb
call
sbb
jne
es
ss
das
roll
stc
push
sbb
jns
add
add
imul
shl
mov
push
cmpsb
cli
add
sbb
dec
repz
mov
sbb
clc
aas
sti
ret
xor
dec
inc
es
jae
cmpsb
cmc
sbb
push
rcrb
std
add
mov
std
sub
mov
add
mov
and
roll
add
andl
lock
and
jecxz
loop
das
les
rcl
and
and
or
sbb
sbb
and
adc
sbb
sbb
iret
cmp
pop
enter
push
dec
add
bswap
daa
adc
jp
mov
fiadds
push
out
adc
jb
out
adc
adc
add
add
daa
lock
cmpsl
out
or
jecxz
xlat
mov
outsl
pop
dec
andl
imul
call
mov
jecxz
add
fdivl
push
in
ret
aaa
inc
in
aaa
cmp
lret
aaa
cmp
in
repz
popa
in
divl
pop
in
pop
in
out
aaa
push
in
jecxz
dec
out
add
add
add
mov
pshufw
adc
pop
and
dec
inc
stc
add
clc
sub
arpl
out
psubb
dec
stc
inc
call
dec
stc
add
sbb
sarl
add
scas
outsl
jle
lea
mov
dec
stc
add
std
or
add
jmp
mov
stc
push
add
xchg
stc
jae
repz
mov
jge
call
lret
clc
ret
std
por
jge
or
testl
mov
sub
xchg
or
div
cmp
sti
cmpl
add
and
sub
sbbb
je
jg
or
mov
cs
inc
sbb
adc
jle
incl
add
jns
je
cmpb
xchg
repz
mov
add
punpckhwd
add
jns
inc
or
jmp
dec
loopne
pop
dec
fdiv
push
dec
pusha
jge
push
arpl
push
pusha
std
rcll
jae
iret
push
or
lret
decl
sti
mov
pop
push
dec
pusha
cmp
scas
movsl
cvtps2pd
jns
add
popa
pop
jmp
jge
les
jae
test
xlat
mov
adc
test
add
push
sbb
iret
imul
sub
inc
xor
test
mov
pop
es
fiaddl
dec
test
enter
xchg
or
sbb
mov
cmp
adc
into
mov
rorb
enter
or
in
or
dec
in
add
out
mov
loopne
sub
cmovb
mov
fisttps
or
fwait
mov
filds
mov
jmp
dec
aaa
add
dec
xor
and
or
pop
xlat
mov
add
adc
pop
sbb
jb
sbb
test
jbe
jl,pn
rcrb
orb
mov
and
out
dec
jbe
negb
test
adc
rclb
ficoms
sti
xor
cmc
dec
stc
test
xchg
cmc
xchg
xor
xor
addl
jge
inc
lds
add
dec
add
add
add
fldl
adc
aaa
or
ss
push
sbb
push
dec
call
loop
mov
inc
bts
pop
cld
push
inc
cli
add
inc
add
dec
sbb
add
add
jne
add
je
jne
or
jle
sbbl
cli
add
push
add
imul
pushl
fisttps
sub
add
cmpsb
sarb
js
hlt
or
cmp
sub
test
pusha
std
call
cmp
pop
loopne
dec
inc
aad
add
inc
inc
dec
push
std
jg
outsl
incb
xchg
add
es
call
int
iret
dec
imul
mov
imul
add
add
add
ret
fcomp
push
pop
pop
inc
inc
dec
imul
pusha
std
jg
psllw
jb
jnp
aas
mov
mov
test
pop
xor
jo
dec
mov
add
mov
imul
push
push
int3
addl
jle
dec
sbb
mov
cmp
test
sub
jp
pop
and
add
add
inc
xor
out
add
popf
cli
push
mov
out
filds
dec
jns
xor
ss
daa
in
daa
ljmp
fucomp
push
stos
scas
jmp
mov
dec
jnp
pop
mov
das
push
in
jmp
cmpsb
jmp
stc
jbe
inc
std
push
mov
push
jmp
dec
jne
repz
stc
xchg
ss
add
insl
fisttpll
stos
pushf
xor
data16
test
sub
or
es
stc
in
std
call
pop
xlat
xor
inc
repnz
jnp
je
int3
bound
jne
jns
leave
fldenv
call
imul
push
add
push
subb
xor
sub
popa
outsl
stc
jmp
filds
je
out
aas
pop
xchg
mov
add
repnz
testl
addb
dec
fdivrl
sbb
add
pop
cmp
or
idivb
stc
jae
or
testb
divb
dec
pop
scas
insl
inc
gs
je
scas
insl
sub
add
xor
lods
insl
sbb
push
add
dec
mov
lret
lcall
aaa
lret
inc
cld
out
lcall
or
out
xchg
ret
adc
ret
inc
or
push
lcall
aaa
mov
sbb
xchg
mov
test
test
gs
decl
lcall
pop
pop
push
adc
add
adc
inc
inc
inc
dec
push
add
in
inc
inc
cmp
inc
dec
dec
pop
add
clc
loop
int3
dec
ljmp
ret
fidivs
outsb
or
call
scas
and
add
mov
clc
sub
add
ljmp
insb
pusha
imul
mov
cs
push
jge
add
stc
addr16
out
or
fdivr
test
lahf
notb
test
add
stc
imul
fs
dec
stc
out
add
ljmp
shl
imull
std
stc
pop
mov
imul
dec
pop
mov
inc
divl
stc
adc
out
sbb
mov
adc
and
jns
call
push
out
add
or
xorb
jmp
jge
repz
stc
xorb
xor
push
adc
call
adcl
mov
out
mov
xorb
in
add
adc
add
test
jl
jecxz
stc
ret
or
clc
add
cmp
lods
dec
je
call
repz
add
stos
bound
mov
test
data16
push
xlat
dec
por
or
mov
jae
jl
sarb
or
cmp
fs
cs
add
cli
push
and
call
cmp
adcb
add
pop
bound
inc
test
addl
aad
or
jnp
add
add
xchg
or
or
push
in
push
jg
insl
jmp
je
cmp
movsb
pop
jmp
jae
shrb
add
aas
inc
dec
ss
pop
cmp
fisttps
pop
shrb
jmp
lds
add
fmull
dec
push
jp
dec
sbb
jnp
leave
and
mov
aas
or
push
add
add
adc
ljmp
clc
repz
mov
int3
ljmp
cmpsl
outsb
aad
data16
pop
jecxz
out
iret
popa
pop
stc
int3
mov
add
into
mov
cwtl
gs
xchg
out
jns
fidivrl
mov
and
ljmp
jl
push
add
add
or
inc
lret
adc
imul
mov
add
sbb
push
or
clc
add
jns
lret
out
andl
xlat
mov
xor
stc
and
dec
clc
add
int3
imul
sub
cmc
aaa
cmp
cmp
out
dec
stc
mov
and
or
add
add
xchg
scas
out
or
fidivrl
sbb
xchg
cmp
inc
call
dec
stc
addb
stc
and
int3
push
out
test
cld
push
mov
pushf
push
cmpsl
pop
addb
pushw
test
cmp
and
insb
push
jmp
xor
add
dec
cmp
out
scas
ret
pop
js
push
div
test
test
add
cmpsb
divl
push
inc
icebp
jae
sbb
mov
mov
inc
jne
mov
sub
les
dec
js
add
or
add
and
pop
les
idivl
pop
xor
add
loopne
add
in
stc
decl
mov
add
repnz
out
mov
cmove
add
add
std
or
or
or
aaa
sti
call
sti
and
ret
cmp
inc
nop
mov
mov
decl
mov
xchg
cmp
std
adcb
dec
push
shll
pop
jmp
sub
cmp
std
rorl
stc
call
inc
adc
test
stc
bnd
add
adc
out
push
stos
cmp
cltd
test
adc
insb
lods
or
addl
loop
mov
mov
in
dec
arpl
adc
repz
clc
out
push
stos
sbb
cmp
insb
jle
popa
out
cmpsl
icebp
mov
jns
mulb
push
ljmp
mov
daa
add
int
imul
repnz
add
out
push
neg
pop
out
out
inc
mov
add
or
cmp
jge
dec
out
imul
icebp
movsl
mov
inc
ljmp
jno
fldt
jge
dec
out
imul
add
jp
fcoml
jns
or
add
dec
stc
ret
stc
out
mov
imul
mov
and
bound
dec
stc
test
pop
daa
mov
add
clc
orl
call
fidivrs
pop
dec
filds
mov
in
and
jle
sbb
clc
inc
aad
fs
icebp
add
mov
pushl
or
call
add
xchg
shlb
ja
stc
ljmp
add
dec
jne
sti
push
or
xchg
stos
sti
add
sub
mov
addl
mov
inc
jne
cmp
push
fmuls
movb
push
sbb
imul
dec
std
inc
pop
adc
or
hlt
clc
xchg
mov
add
add
inc
pusha
in
test
dec
fadd
adc
mov
and
enter
mov
fsubr
pop
jle
sub
pushl
rcrb
cmp
inc
dec
or
push
xchg
std
xchg
or
int3
cmp
push
sub
and
and
dec
xchg
push
add
inc
aad
push
mov
out
lock
je
inc
xor
adc
add
sub
insl
or
in
dec
out
mov
jge
mov
mov
inc
dec
or
pop
push
sti
loope
mov
out
sub
bnd
pop
das
daa
inc
jno
add
dec
aaa
test
bound
sti
pop
inc
push
sbb
push
out
push
cwtl
pop
out
push
adc
add
rorb
add
add
ss
stc
add
xchg
inc
test
std
call
repnz
or
pop
stc
jmp
inc
lock
roll
add
xlat
inc
push
fwait
adc
xchg
lret
push
rcrl
outsb
mov
jns
push
lock
mov
imul
inc
jmp
das
pop
xor
add
inc
lock
stc
add
mov
popa
or
fcomi
add
push
andl
jg
mov
xor
sub
lock
testb
inc
add
es
mov
jne
xor
add
jmp
scas
sti
push
mov
add
rolb
div
inc
add
add
insl
inc
add
add
jno
cld
cmp
scas
rcrl
add
jmp
mov
sti
pushl
int3
nop
add
std
jg
push
or
dec
in
std
int
hlt
rcll
sub
pop
dec
mov
push
std
jg
pusha
insb
push
dec
push
std
jg
push
insb
pop
add
add
std
rcll
std
call
cli
insb
pop
dec
push
std
test
movsl
out
test
std
or
adc
fmul
inc
adc
dec
push
rorb
ret
mov
test
push
std
cli
jg
inc
or
stc
mov
pop
insl
lds
push
jne
test
pop
push
ljmp
push
add
hlt
repnz
add
sbb
out
leave
sti
pop
inc
or
stos
pusha
in
stos
dec
ljmp
xchg
icebp
pop
lds
or
jecxz
mov
push
inc
pop
dec
stc
fs
jl
addr16
stc
ljmp
fs
or
test
add
push
add
add
jecxz
dec
je
sub
and
jle
stc
add
add
add
in
dec
stc
subl
pop
sub
pop
adc
shr
mov
sahf
repnz
inc
into
or
sbb
sbb
sbb
and
mov
call
mov
push
jge
jmp
stc
or
jno
scas
push
adcb
mov
add
dec
jns
in
add
mov
or
add
outsb
mov
inc
mov
cmc
jne
jl
cmp
add
xchg
je
add
sub
xor
gs
add
in
inc
add
pushf
add
loope
addl
jbe
mov
xchg
add
adc
jecxz
add
cld
cmp
add
add
enter
icebp
jle
testb
add
add
or
mov
je
jnp
and
mov
mov
dec
std
xchg
sub
mov
arpl
paddq
cltd
fs
add
sbb
mov
sub
je
lret
fsubs
pop
leave
fsubs
inc
fcmovnbe
pop
xor
stc
or
xchg
popa
push
mov
add
or
mov
jne
cmpsb
mov
jg
dec
push
test
cmpsl
add
inc
mov
sbb
sti
inc
jae
and
stc
into
dec
jg
sub
jl
rorb
mov
or
mov
lret
fcmove
mov
xchg
push
xchg
push
data16
out
push
jns
or
add
add
jo
dec
aas
sub
aas
subb
aas
adc
jae
insl
aas
push
mov
mov
jl
iret
insl
adcb
cmp
cs
inc
push
xor
cmp
or
int
loop
mov
add
push
jmp
fmulp
fsubr
es
jl
mov
mov
and
sbb
nop
sbb
ret
test
cmc
inc
subl
sbb
negb
mov
sub
push
push
jge
das
sbb
xor
rcll
and
rol
and
imul
jb
dec
shlb
push
arpl
std
mov
daa
add
pop
sbb
add
inc
daa
mov
add
mov
push
orb
lret
incl
xchg
pop
cmpb
push
aaa
push
div
dec
jbe
xor
inc
adc
and
mov
push
and
sti
or
in
testl
and
sti
or
fdiv
add
mov
cld
adc
movsb
clc
add
mov
cld
adc
pop
xchg
pop
add
add
rolb
inc
add
xchg
or
dec
insb
lds
add
push
or
jp
inc
dec
mov
imul
ficomps
int3
and
out
cmp
xchg
cli
jg
pop
fisubs
iret
shlb
push
cli
aad
ljmp
sub
add
pop
lcall
push
inc
data16
sbb
and
dec
icebp
xchg
mov
push
cli
adc
or
repnz
mov
inc
movsl
add
sub
add
sub
add
sub
add
sub
add
add
daa
and
dec
daa
and
add
es
add
sub
and
add
sub
and
add
sub
add
sub
add
sub
add
sub
sub
shrl
dec
or
stos
dec
adc
stos
dec
lods
shrl
dec
rcl
stos
dec
jo
stos
dec
lcall
dec
push
shrl
add
add
stos
dec
out
stos
dec
jl
stos
dec
pop
lret
repz
stos
dec
stos
aad
dec
iret
aad
push
inc
aad
dec
xor
sub
lret
mov
aad
dec
cmpsl
fsubrl
push
jb
sub
leave
sub
sub
sub
shrb
dec
cltd
rolb
je
scas
je
cmc
cmc
fs
sbb
mov
inc
xlat
mov
push
add
add
xchg
xlat
mov
xchg
xlat
mov
xchg
xlat
movsb
cld
dec
mov
mov
sub
lea
or
fs
xchg
pushl
ja
push
pop
jp
fs
lock
cmpl
sub
add
dec
jp
jb
jne
and
jns
cld
imul
add
add
jecxz
cmovg
int3
dec
out
lcall
cs
add
push
out
mov
stc
mov
sbb
rolb
push
jecxz
and
xchg
inc
pop
out
adc
loop
and
add
aam
or
cmp
test
dec
leave
mov
pop
out
pop
dec
inc
add
add
dec
int3
ret
adc
jno
fstp
or
fcoms
int3
stc
and
dec
stc
ljmp
lock
test
add
incl
out
leave
pop
push
add
xor
push
jnp
mov
jmp
mov
jg
pop
fnstcw
lea
or
mov
or
add
dec
popa
jno
cwtl
dec
imul
adc
in
test
daa
add
cmp
and
pop
pop
dec
add
popf
push
data16
push
push
jae
iret
je
xchg
popf
push
push
cmp
jne
cmc
dec
add
imul
add
dec
dec
mov
mov
in
add
add
mov
or
jle
sbb
in
sti
mov
call
test
das
sub
dec
push
jb
jl
in
push
jae
sbb
lret
push
lds
push
gs
into
ljmp
jmp
inc
divb
cltd
inc
jge
jbe
add
pop
dec
jmp
xorb
inc
or
outsb
inc
ss
mov
add
add
stc
add
inc
divb
xchg
loope
xor
loope
out
negb
mov
adc
stos
divb
test
stc
pop
mov
in
dec
pop
dec
ret
les
call
sub
pusha
adc
iret
inc
cld
repz
test
std
decl
mov
add
std
out
pop
std
incl
add
aam
xchg
or
lahf
imul
xor
mov
popa
std
jmp
idiv
adc
dec
dec
or
cli
sbb
ret
sub
mov
popa
std
push
idiv
loopne
dec
dec
fadds
xchg
inc
das
jae
pop
shr
inc
arpl
cmp
add
mov
push
cli
cwtl
and
adc
bound
jnp
inc
cli
add
add
clc
hlt
dec
add
fcmovu
dec
test
lret
mov
mov
mov
mov
stc
sbb
mov
les
pop
loope
popl
insl
inc
pushf
hlt
dec
dec
fstpt
push
and
flds
sti
andb
ret
popa
xor
or
mov
aad
cmp
dec
sub
les
popl
add
dec
mov
and
stc
sub
jg
xchg
lahf
aam
cmp
dec
roll
js
fldenv
jns
mov
dec
push
les
ds
orb
popa
jnp
mov
jno
add
mov
mov
repnz
and
loope
mov
in
icebp
mov
rorb
add
add
and
aam
mov
mov
nop
addr16
or
pusha
jnp
mov
inc
dec
mov
jnp
pop
dec
mov
xlat
or
add
sbb
mov
adc
push
mov
add
push
push
xchg
cmp
mov
push
cmp
xchg
and
ret
test
cvtpi2ps
gs
add
subl
or
insb
push
or
cmpsb
mov
cmp
mov
hlt
rclb
lods
add
std
testb
mov
jl
arpl
punpckldq
fs
push
scas
call
mov
jb
cmp
mov
lods
cmp
cmp
cmc
enter
add
loop
jg
int
es
outsb
add
out
repz
mov
es
pop
sub
cmp
out
and
mov
mov
sbb
sub
popa
push
cmp
pop
sub
add
dec
arpl
decl
roll
daa
stc
outsl
aaa
jno
sbb
pop
out
cmpsl
add
cmp
add
sbb
dec
xchg
push
pop
addl
inc
mov
pop
int
rorl
cmp
sarl
pop
pop
lcall
stos
cltd
xor
call
pcmpeqw
inc
mov
orl
stc
pop
inc
nop
inc
aam
dec
mov
cmc
adc
in
dec
mov
les
add
add
jae
pop
and
push
cmp
push
shlb
aad
xor
xchg
fdivrl
hlt
jns
fildll
push
or
or
mov
mov
xor
push
mov
pop
inc
hlt
and
mov
push
clc
icebp
or
arpl
cld
cmp
or
inc
aaa
add
add
add
sbb
mov
std
fdivrl
lods
mov
jno
xchg
xchg
icebp
dec
in
pop
aad
adcl
pop
into
xchg
jno
cld
out
jnp
xor
cwtl
emms
inc
mov
lock
repnz
ja
call
lret
pusha
lods
inc
jne
cmpsb
mov
push
cwtl
bound
shl
add
int3
mov
jnp
mov
lods
jbe
arpl
sarb
loopne
icebp
jp
fbstp
lahf
xchg
repnz
add
jnp
mov
mov
mov
out
idivl
add
popl
pop
fisttps
sub
pop
dec
test
not
add
mov
aam
decl
jb
fwait
movl
add
add
inc
xchg
lods
cli
inc
cli
in
aas
dec
fisttps
adc
or
inc
push
jl
fadd
add
mov
pushl
movl
cmp
aas
jae
int
negl
lret
dec
push
hlt
dec
cli
pop
stc
dec
dec
into
jbe
pusha
dec
dec
aad
mov
add
mov
lahf
jbe
add
lret
cwtl
and
movsl
test
out
mov
jno
dec
ret
jge
dec
test
jbe
cwtl
hlt
inc
jne
ljmp
cmp
mov
outsl
dec
push
inc
pop
adcl
insb
xchg
fdivrs
mov
xor
mov
inc
dec
push
xchg
inc
fwait
dec
xchg
icebp
aam
daa
add
les
inc
not
add
dec
stc
ret
inc
mov
add
add
mov
mov
lods
sbb
ds
mov
push
xchg
xor
clc
es
cli
or
add
inc
pop
add
dec
out
orl
stc
add
aaa
inc
stc
jmp
pop
js
jmp
pushl
adc
xchg
in
adc
or
test
add
add
sub
jge
ficoms
cmc
mov
push
mov
cmp
jno
mov
mov
jae
xchg
sti
adc
idiv
push
lock
popa
ret
loopne
mov
incb
mov
push
add
stc
cmpl
add
jbe
mov
mov
add
jmp
clc
incl
sbb
incb
jp
je
enter
mov
push
popf
sub
inc
inc
mov
out
insb
inc
cli
or
dec
cli
pop
dec
lock
dec
adc
jne
pop
jg
call
fiaddl
dec
inc
mov
jl
lods
add
dec
dec
jns
mov
stos
inc
cli
test
xlat
add
push
std
push
add
add
push
jp
cli
adc
and
jns
jbe
inc
dec
fcmove
mulb
lods
push
addr16
decl
cmp
test
cmp
loopne
push
jle
inc
orl
sbb
or
mov
movsb
jbe
mov
xor
in
add
sbb
sub
in
repz
out
insb
xchg
cmp
add
add
jae
orl
js
test
sub
fadds
inc
pop
outsb
xor
add
xchg
inc
sahf
aas
mov
sbbb
pusha
stc
ficompl
addr16
dec
jl
inc
mov
ds
pusha
in
inc
jmp
mov
test
scas
cli
mov
insl
mov
mov
cwtl
mov
insb
mov
sarl
call
bound
push
ds
mov
test
inc
mov
cmc
push
or
mov
stc
push
mov
xchg
cli
decb
inc
stc
out
jl
shlb
mov
rcr
stc
jmp
or
add
mov
idiv
jmp
idiv
push
outsb
mov
push
push
imul
movl
or
mov
sub
mov
mov
rolb
mov
cmc
adc
or
cld
imul
add
mov
mov
in
fs
add
add
shr
scas
jne
and
cld
lock
dec
add
push
xlat
inc
out
aaa
cmp
cmp
adc
test
mov
cli
aaa
pusha
sar
xlat
inc
jae
iret
mov
sti
jp
inc
je
mov
add
sti
pop
inc
inc
adc
inc
mov
jae
xchg
test
sub
fists
adc
add
add
fists
hlt
cli
xor
inc
aam
les
hlt
sbb
shl
pop
stos
add
aam
loop
test
dec
add
addr16
jle
cmpsl
mov
movsb
pop
movsb
jmp
out
lods
dec
cmp
adc
push
xchg
cmp
and
ss
add
jmp
jnp
jb
sarl
hlt
or
add
in
pop
inc
std
ja
xor
fiadds
icebp
mov
mov
mov
and
mov
xor
lret
loope
xor
scas
sub
push
add
mov
add
stc
out
jle
push
push
stos
cs
xor
or
test
or
inc
jmp
push
jae
mov
add
inc
mov
orl
stc
cmp
pusha
fimull
mov
stc
jbe
inc
adc
mov
cmp
sti
push
mov
mov
cmp
shll
ret
mov
stc
pushf
enter
shll
mov
push
mov
add
icebp
test
adc
add
jno
jne
imul
pushl
add
jbe
je
mov
decl
in
loop
jmp
daa
dec
push
cmp
cmc
jne
outsb
fmuls
pop
repnz
mov
jmp
ror
pop
xor
mov
push
mov
std
cmp
mov
inc
sbbl
ljmp
cmc
jne
push
add
cmp
ja
stc
js
or
out
dec
cmp
push
add
adc
daa
add
sub
mov
mov
cmpsb
daa
sub
mul
mov
dec
mov
inc
xchg
fsubrp
adc
in
dec
rcr
xor
clc
push
mov
and
pop
test
cmovg
mov
andl
popf
adc
add
add
mov
daa
je
aad
out
sub
stc
sti
std
cs
scas
add
and
inc
dec
icebp
out
inc
jo
dec
outsl
iret
and
mov
sub
stc
or
push
jmp
dec
or
movsl
inc
ja
or
in
scas
movsl
jno
outsb
cmp
cmp
movsl
xor
cmpsb
cmp
in
add
add
fcomps
or
pop
lahf
pusha
jge
subl
sarb
fdivs
jmp
clc
lea
cld
scas
ja
inc
icebp
out
mov
xor
rclb
lods
dec
jb
jmp
fldcw
out
adc
rcrl
fstl
xchg
add
jg
testb
add
decb
xor
xor
loope
mov
rcrb
stc
in
ret
aad
shlb
pop
push
cmc
iret
sub
or
dec
cmp
loope
cmp
add
cmp
jmp
orb
fisttpll
jnp
test
and
push
add
add
jb
add
outsb
dec
loope
jne
imulb
subl
inc
repnz
adc
stc
xor
bound
fnstcw
stc
gs
mov
inc
out
cmp
pop
jecxz
add
pop
cmp
add
ss
nop
subb
dec
fcos
dec
iret
xor
dec
add
pop
stos
aas
out
add
xor
cli
lcall
sbb
pop
adc
pop
pusha
std
jle
push
mov
mov
xor
xchg
adc
and
mov
and
pushl
pop
mov
ds
inc
mov
in
cs
test
mov
xlat
pop
add
dec
mov
cli
add
cli
lahf
lods
mov
imul
cmpb
addb
outsb
inc
adc
mov
movsb
or
add
cmp
out
dec
jle
mov
mov
add
fiaddl
adcb
je
xchg
ror
sub
jno
add
iret
jo
xor
mov
pop
mov
jg
sub
and
lods
add
add
mov
out
dec
jle
mov
jo
outsb
inc
call
das
subl
jae
ljmp
mov
dec
fs
test
xor
cld
dec
stc
add
roll
out
cli
call
aad
and
sarl
jmp
add
add
adc
push
fs
das
stc
call
cmpl
scas
je
sbb
or
stc
jmp
jae
stc
jmp
push
inc
insl
jae
inc
push
test
add
lahf
jae
stc
pushl
jmp
and
inc
notb
sbb
ja
or
repnz
call
popa
ljmp
data16
ja
insl
xchg
mov
mov
fmulp
insl
pusha
jmp
shrb
ds
and
mov
orb
xor
ljmp
cmp
mov
add
ficoms
xchg
dec
xor
cmpsl
enter
clc
xor
rcr
test
dec
add
add
mov
pop
movsl
out
mov
lahf
xor
notl
add
mov
adc
dec
inc
mov
mov
fs
xchg
mov
cmovg
movsb
add
std
cs
push
aam
xchg
fwait
mov
jae
stc
data16
cmpsb
ljmp
add
add
stc
pop
mov
out
fs
arpl
dec
aad
aad
dec
test
cmp
dec
stc
aas
inc
mov
shlb
mov
test
cmp
cmpsb
jmp
shlb
sbb
fdivrs
stos
cld
movsb
cmpsl
add
mov
sub
xor
cmp
inc
fisubrl
jo
push
movsb
sub
cmp
into
dec
mov
xor
mov
lods
and
sarl
insb
lahf
inc
sub
repnz
pop
daa
push
outsb
add
or
rol
mov
jge
shll
test
mov
jl
jno
pop
xor
xor
pop
sbb
mov
stc
stc
xchg
mov
mov
lret
mov
stc
cmc
push
shrl
jge
dec
rcrb
inc
stc
push
bound
in
cmc
add
push
add
ljmp
idiv
add
dec
cmc
call
outsl
inc
icebp
test
cli
add
icebp
sti
jp
mov
add
daa
lret
pop
and
test
test
cli
dec
push
push
mov
add
bound
std
cmp
inc
lea
cmc
add
dec
fcmovnb
std
pop
scas
roll
out
pop
xchg
les
inc
or
hlt
xchg
add
shlb
out
and
cli
pop
pusha
jl
pop
popf
cmp
add
enter
push
pop
adc
xchg
popf
dec
or
add
add
add
enter
in
or
fiaddl
add
adc
test
and
test
ljmp
mov
das
orl
std
stc
push
imulb
xchg
and
je
cwtl
enter
addps
sub
mov
jge
sub
cmpsl
mov
add
add
jbe
mov
lahf
cltd
shr
insl
fs
les
add
xor
jl
xor
push
mov
jge
sub
js
ja
mov
cmpsb
cmp
and
pusha
lret
mov
push
psubw
xor
stos
lret
mov
les
push
inc
mov
cmp
add
add
mov
call
inc
pop
in
pop
stos
cmp
cmp
push
sub
pop
icebp
subl
scas
rorb
xchg
inc
dec
movaps
sar
jp
jns
cli
add
add
stc
mov
mov
mov
movsb
loop
or
mov
mov
xchg
sub
dec
add
inc
add
cs
add
add
sub
add
dec
adc
ficompl
call
mov
fldt
shl
adc
fucom
lds
jmp
idiv
adc
pushl
push
leave
in
sub
inc
add
out
dec
push
fsubrp
sti
push
jbe
jo
ss
add
bound
into
xchg
xor
testb
cmpsb
testb
adc
cmpb
inc
mov
inc
jbe
add
data16
cmp
popf
jno
sti
test
or
mov
clc
das
cli
inc
clc
mov
inc
or
pushf
xchg
dec
and
xchg
lock
fdivs
mov
movsb
mov
xchg
lock
jns
sub
add
mov
cmp
jmp
aam
js
stos
pop
and
inc
or
jbe
aad
and
mov
push
sub
jmp
xor
pop
icebp
cs
loop
sub
clc
mov
add
call
fbstp
inc
mov
mov
sar
out
dec
sub
leave
mov
push
cmp
add
and
jb
jp
std
jo
push
je
clc
imul
or
cld
in
clc
adc
inc
sub
sub
push
pushf
adc
stc
aaa
add
inc
cmc
ret
mov
daa
int
xor
and
adc
movsb
sub
daa
add
enter
imull
mov
sbb
adc
cmp
add
pop
jno
add
ja
jle
loope
addr16
adc
inc
xor
adc
testb
loope
stc
fdivrl
or
iret
cmp
mov
std
sub
cmpsl
jnp
dec
scas
or
and
sti
xchg
rcrl
and
std
sarb
sbb
stc
add
pop
and
in
cld
push
pusha
movsb
loopne
add
add
mov
and
addb
add
mov
addb
inc
or
mov
jb
aad
lock
addb
push
leave
hlt
and
jnp
jle
adc
std
add
pusha
movsb
cmp
cmp
movsb
cmp
jmp
xchg
mov
sbb
push
cmp
cmc
adc
cmovno
sti
cld
jmp
cld
add
add
mov
mov
mov
roll
out
psubusb
std
xchg
cmpb
xchg
cmp
popa
int
mov
daa
cli
aam
jns
imul
je
pop
jge
cmp
lret
loopne
int3
test
mov
adc
add
dec
xchg
es
add
orl
mov
in
es
sub
gs
or
out
mov
cltd
xor
push
out
insb
stc
push
add
xor
andl
lret
or
test
icebp
decl
and
and
jle
int
leave
add
add
ljmp
mov
cmpsl
sub
and
jg
or
ljmp
cmp
sub
adc
jecxz
std
sti
cmpb
add
and
inc
push
mov
push
stos
cmpb
inc
and
jmp
sbb
jo
sub
movsb
aaa
and
lods
sub
test
add
add
sti
es
out
loopne
add
dec
jnp
add
jbe
lock
es
in
lret
and
pop
sub
cs
mov
dec
pop
add
sub
in
jo
jne
mov
pop
rclb
adc
popa
outsl
add
dec
fwait
adc
push
add
mov
inc
repz
data16
jns
xchg
add
mov
add
sti
add
inc
sti
test
jnp
pusha
shll
mov
pop
mov
pushl
pop
and
dec
push
repz
pop
inc
sarl
lret
jge
divl
xor
push
into
es
addl
xchg
testb
inc
loopne
sahf
out
call
xchg
push
idiv
add
add
cmp
orb
add
mov
cli
enter
and
cmp
ret
dec
aam
sbb
mov
lret
scas
or
xchg
add
mov
sub
js
jne
pop
shrl
cli
ficoml
int
ss
cli
push
int
cli
dec
sti
jbe
or
jne
adc
gs
xchg
rcr
add
jg
sub
shll
and
push
out
add
cli
lds
xchg
lcall
add
ss
aad
insb
adc
jo
sbb
cli
jp
sar
out
ret
fwait
js
out
sub
mov
es
cmp
cmp
push
dec
andb
jp
and
sbb
and
sub
and
add
add
sub
cmp
and
xor
inc
fidivl
stc
out
rcrb
sub
and
jns
sub
shlb
sub
and
sbb
hlt
add
and
xchg
lahf
mov
sbb
mov
xor
push
sub
orb
add
push
mov
mov
pop
cmc
mov
dec
rcr
lret
call
repnz
xlat
cmp
push
jb
inc
add
push
adc
and
clc
call
xor
inc
jecxz
and
sub
sti
into
xor
repz
mov
int
dec
out
mov
sar
mov
int
cmovb
mov
jmp
push
or
dec
sub
adc
out
jns
stos
sahf
mov
jmp
imul
orb
or
adc
jecxz
arpl
pop
inc
pusha
cmp
xor
call
icebp
jns
xor
je
dec
fwait
add
prefetch
lahf
lds
lahf
notl
inc
rolb
or
enter
fisubrl
dec
gs
out
pop
cli
dec
out
sub
ss
and
xchg
in
hlt
xchg
faddl
cmp
dec
pop
xorl
sahf
sub
outsb
add
or
je
stos
add
nop/reserved
sbb
add
pop
push
std
jle
cmp
mov
cltd
cmp
fisubs
mov
and
ret
dec
mov
push
dec
adc
mov
stos
or
test
add
es
or
jno
sub
mov
adc
loope
test
push
and
cmp
add
jb
mov
lcall
idivb
mov
xchg
notl
mull
ret
in
or
push
cli
out
enter
inc
test
xchg
shlb
add
dec
cmp
add
jle
pop
xchg
and
addr16
or
cmp
icebp
cmpsb
repz
bound
lcall
dec
outsb
inc
adc
lods
stc
cld
xchg
or
lret
cmp
xchg
bound
enter
in
jb
call
pop
mov
mov
or
sub
inc
es
or
aaa
gs
lods
scas
push
pop
pop
mov
in
inc
push
lret
orl
jae
jg
icebp
mov
loop
jne
pcmpeqw
add
call
sub
push
loope
or
mov
fdivs
xor
stos
testl
add
insb
in
adc
pushl
mov
imul
push
fnstcw
pop
and
lods
out
std
xor
xor
cmp
and
cs
lahf
outsl
or
mov
mov
xchg
faddl
lret
push
iret
jl
lods
dec
adc
out
arpl
cli
aam
xchg
pop
aas
and
andps
les
add
ror
out
pop
adc
and
xchg
mov
idiv
cwtl
mov
cmpsl
xchg
outsl
ja
clc
cli
adcb
dec
cmpsl
dec
cli
aas
pop
cmp
mov
add
pop
xor
add
dec
stc
out
or
mov
fbstp
out
dec
ljmp
lods
xchg
inc
outsb
mov
movsl
cmp
push
add
xor
cmpsl
test
jecxz
pop
sarb
jno
call
insb
stc
loop
or
add
mov
jo
cmp
cmp
adc
fwait
sbb
inc
je
xchg
xlat
jne
or
add
dec
outsb
in
repz
mov
xlat
push
jecxz
add
push
cs
pushf
or
loopne
addr16
popa
lea
adc
in
dec
lea
pop
or
je
in
out
fmull
sarl
into
rcll
sub
jg
icebp
mov
loop
add
mov
add
add
cld
stos
stc
lcall
stc
cld
mov
dec
inc
or
pop
lock
call
add
dec
adc
xor
sbb
std
jmp
adc
push
xorb
test
pop
div
call
mov
cmc
notb
leave
jp
or
mov
popa
adc
push
mov
sub
or
int
add
add
std
add
sbb
adc
out
push
mull
cmc
add
mov
jae
lea
mov
xor
mov
and
sbb
push
enter
in
cli
daa
dec
xor
cmpl
cli
int3
mov
std
decl
ret
cmp
cli
dec
push
cmp
and
pushl
and
ficompl
gs
cs
push
jne
mov
mov
clc
inc
out
xlat
pop
loopne
test
sub
dec
and
push
lret
push
les
out
and
or
std
inc
clc
mov
add
int3
mov
je
stc
outsb
inc
xor
add
push
in
pop
test
sarb
stos
add
add
clc
out
pusha
push
mov
imul
data16
andb
cld
test
nop
push
aas
stos
sar
pop
pop
shrl
fidivl
lret
cmp
sarl
iret
add
xlat
add
mov
cmp
rolb
mov
mov
and
add
fs
sbb
add
add
mov
pop
pop
adc
fists
data16
mov
xor
test
cmpsb
inc
mov
pushf
leave
and
sbb
stc
jmp
dec
in
pusha
movups
push
fildl
xchg
stc
out
les
in
ja
les
int3
push
punpckldq
or
mov
daa
adc
add
psubw
xlat
jge
xchg
push
punpckldq
push
sti
add
repnz
mov
mov
jmp
xchg
xchg
std
push
std
mov
in
jmp
jl
add
xchg
sub
adc
add
ja
xchg
in
cmp
push
mov
repnz
popf
cmp
xor
pop
add
clc
mov
add
add
dec
call
int3
pop
cld
add
mov
add
pop
cli
add
insl
icebp
dec
mov
out
je
dec
cmp
cwtl
testb
xor
lock
jmp
lret
xorl
fwait
int
lret
xchg
in
lret
mov
scas
xchg
or
jno
xchg
ret
sbb
adc
add
xor
orb
mov
fdiv
mov
and
decl
ret
push
cli
mov
popf
inc
jns
xchg
xor
jnp
repnz
inc
test
scas
pop
les
ret
nop
sbb
stc
mov
pop
jle
jmp
imul
inc
clc
xor
or
inc
jle
or
adc
sbb
pop
mov
adc
inc
sbb
inc
xor
inc
sub
inc
pop
pop
sti
jge
test
call
mov
inc
jl
xchg
jo
add
cmp
mov
out
add
out
clc
adc
sub
adc
push
imul
add
add
mov
in
or
add
add
addr16
pop
adc
jmp
bound
stc
push
out
mov
or
add
std
inc
sbb
add
adc
xchg
jmp
jno
mov
test
sbb
rol
mov
dec
jb
sbb
lods
sti
and
dec
stc
test
inc
or
mov
push
gs
notb
jns
or
mov
or
pusha
or
push
out
lcall
inc
notb
jns
or
mov
or
pop
or
scas
out
fnsave
adc
dec
notb
jns
or
mov
or
pusha
or
or
idiv
std
call
add
push
mov
in
adc
rolb
cmp
mov
cmpb
adc
aam
push
jl
adc
cmp
lret
out
and
pcmpgtb
cld
push
add
adc
cmp
shlb
call
les
mov
inc
inc
insb
or
mov
sbb
pop
cwtl
jmp
push
adc
int
add
repnz
popf
mov
sbb
sub
or
cmove
ficoml
xchg
nop
pop
ror
lcall
pop
adc
dec
push
je
cwtl
mov
lcall
stc
mov
adc
stc
not
mov
add
cmpsl
jb
pop
jp
add
cmp
sub
mov
jg
adc
roll
sub
adc
loope
dec
loope
pop
sarl
cmpl
push
adc
xlat
mov
sarb
outsb
cltd
inc
addb
pop
and
pop
adc
sub
sbbl
cmp
mov
add
adc
mov
cmp
mov
push
stc
xchg
add
clc
je
pop
adc
push
cmp
mov
jb
ja
push
dec
adc
ss
rcpps
mov
sub
in
sbb
adc
and
cmp
imul
dec
push
add
add
inc
dec
call
rorl
xor
sar
sbb
divb
jmp
fsts
cmpsb
clc
jns
mov
mov
cmpl
add
add
cmp
in
stos
add
decl
jmp
idiv
adc
adc
mov
int3
in
dec
mov
add
cli
adc
mov
adc
pop
jp
lods
push
jle
add
lea
mov
decl
add
mov
aam
aad
pop
jae
loop
loopne
std
xchg
or
not
sbb
roll
jg
push
xchg
ss
int3
addr16
dec
daa
adc
test
jno
in
push
paddq
jbe
push
lahf
mov
dec
sub
add
std
call
pop
cmc
out
adc
call
xchg
pop
aaa
and
incl
dec
arpl
stc
in
add
out
or
mov
jns
pop
mov
dec
repz
dec
push
call
aam
mov
cld
leave
shr
adc
push
or
or
jo
ret
or
hlt
lds
stos
xor
ret
sti
add
add
movsl
lret
repz
testl
sti
jge
call
in
push
pusha
or
fldt
pop
pcmpgtw
add
aaa
jecxz
add
testb
add
jle
repnz
dec
bswap
ret
pop
sub
callw
psubsw
mov
ds
out
xor
push
push
push
xchg
add
add
test
jmp
dec
stc
pop
pop
hlt
lods
mov
loope
test
sbb
pop
psubw
pop
stos
xchg
or
mov
ds
lods
dec
ds
bound
test
sbb
dec
jb
in
bound
jb
add
inc
testb
xor
add
std
add
push
add
into
add
add
jecxz
orb
dec
or
sub
notl
xor
mulb
icebp
pop
or
add
xchg
inc
cmc
mov
addb
in
std
imull
mov
sub
push
mov
or
mov
in
addb
aas
icebp
test
in
decl
idivb
test
add
or
shl
fnstcw
inc
inc
cmp
xlat
add
outsl
mov
jg
call
add
or
stc
aaa
adc
xchg
adc
dec
dec
or
inc
mov
repz
cmpsl
xchg
int3
aas
ret
std
decl
sbb
aam
hlt
addb
aad
jb
xor
dec
adc
ds
jp
cmovg
add
add
push
popf
cmp
pmulhw
scas
cli
pop
stc
mov
sub
inc
dec
je
divl
dec
or
jae
testl
scas
pop
xor
xor
push
es
sbb
in
pop
mov
leave
jmp
push
mov
js
std
out
sub
scas
or
cmc
outsb
mov
loope
push
clc
and
xor
leave
mov
outsb
xor
add
test
mov
mov
test
mov
mulb
movsl
push
xchg
jg
icebp
cmp
xchg
jp
cs
add
add
fnstcw
add
out
adc
pop
movb
inc
lods
test
adc
ljmp
add
and
inc
xchg
movl
stos
dec
jo
sbb
xor
dec
fwait
mov
inc
inc
cmp
int
movl
nop
or
arpl
cmp
mov
inc
cmp
gs
add
std
lock
xchg
add
in
stc
mov
stc
cltd
call
sub
stc
mov
fprem1
incl
mov
stc
add
incb
mov
inc
add
add
mov
stc
or
stc
rol
in
inc
incb
add
popf
stc
scas
mov
xchg
xchg
inc
idivb
faddl
repz
icebp
adc
xlat
cmp
and
cmp
add
push
ljmp
dec
notb
dec
pop
inc
lret
fwait
dec
cmp
xchg
push
cmp
mov
jnp
sub
cld
mov
jmp
jl
xor
aam
pop
mov
flds
cmp
jnp
into
packsswb
jl
aam
packsswb
add
and
jl
les
paddq
or
pop
flds
push
stc
sub
xlat
push
dec
mov
fcomps
jl
loopne
loopne
les
inc
jae
adc
dec
popa
xchg
or
or
sbb
loopne
add
dec
mov
mov
cmp
into
mov
sub
jp
jge
sub
sub
jl
outsl
sub
cmc
cmpsl
dec
jbe
sti
cmp
scas
cld
shr
outsl
add
fmuls
jecxz
cmp
add
mov
add
sti
or
outsb
pop
jnp
lret
scas
add
add
or
jns
icebp
ret
adc
add
push
pushl
int
or
leave
pop
pop
cmp
jnp
cmp
push
repnz
dec
pop
add
test
je
je
in
or
bound
sub
dec
decb
aad
call
stos
int
stc
mov
call
in
ret
sbb
jae
movsl
das
mov
xor
stc
push
add
add
jnp
dec
jle
cmpsl
mov
mov
add
push
dec
cmp
and
jnp
loope
mov
push
add
adc
and
cmp
and
loopne
fsubl
ds
mov
push
cmpb
jle
adc
pusha
xor
jp
push
imul
add
test
clc
mov
adc
scas
dec
add
jo
add
test
jo
pusha
clc
push
movl
adc
incl
dec
cmovo
jns
adc
aaa
stc
pop
dec
popf
cld
test
sub
gs
pop
sti
lcall
fwait
mov
pop
pop
mov
cli
xchg
cli
cli
lcall
add
add
mov
je
out
jl
jecxz
ss
and
mov
test
std
inc
pop
push
sahf
dec
adc
ss
add
xlat
jge
aas
filds
cli
nop
pusha
jecxz
bound
jmp
dec
insb
jmp
pushf
arpl
mov
pop
hlt
loopne
loop
or
outsb
cmp
pop
outsb
and
adc
fsubrl
mov
adc
push
ret
push
out
lcall
cld
mov
xor
rol
jo
mov
inc
imul
testl
mov
stos
lcall
xor
icebp
ret
adc
push
push
test
xchg
sbb
add
xor
push
dec
jg
test
mov
call
mov
enter
and
clc
jmp
dec
int3
ret
jo
std
test
lods
test
stos
sub
fxch
jp
jl
add
outsb
rorb
fs
add
push
fimull
dec
dec
add
ds
xor
add
dec
add
es
sbb
add
push
inc
cmp
pop
sti
adc
sbb
dec
push
sub
push
add
stc
call
cmp
jnp
xchg
or
or
push
orb
inc
fdivr
icebp
cli
mov
pop
inc
sar
cli
mov
push
or
jne
or
add
jbe
cmp
mov
insb
xchg
mov
mov
outsl
mov
ja
call
xorb
add
dec
pop
mov
cli
clc
addr16
adc
sti
add
rorb
push
add
in
add
sub
add
add
test
sti
nop
pop
incl
sbbb
xchg
cltd
mov
bound
stc
stc
push
mov
out
sbb
decl
mov
inc
int3
mov
in
or
test
test
mul
xchg
out
jp
idiv
idiv
out
ljmp
idiv
sti
ljmp
out
dec
outsb
xlat
inc
sti
out
mov
out
xor
cmpsb
sti
add
rcr
stc
out
les
pushf
add
stc
out
or
sub
repz
mov
insb
iret
push
sti
pop
adc
dec
filds
dec
jbe
repz
inc
pop
ds
sub
es
aas
out
icebp
add
lret
jbe
and
jmp
add
pop
lock
cmp
jbe
add
jmp
gs
stc
add
adc
out
fcoms
ja
dec
stc
and
xchg
bound
shl
aaa
xchg
jbe
mov
add
pop
hlt
lock
int
call
adcb
add
lds
test
gs
mov
jbe
fs
add
adc
add
add
je
int3
add
repnz
sbb
or
add
cmpsl
push
incl
div
loope
out
cmc
add
mov
test
testb
cmc
add
out
repnz
xor
cli
psubsw
repnz
and
cli
pop
jmp
sub
cmp
xor
cmpb
insl
adc
add
clc
idiv
data16
add
mov
jae
xor
or
jge
lock
dec
idiv
cmp
idiv
es
decl
pusha
or
cmp
dec
out
or
jp
decl
addr16
jb
decl
jns
lret
push
decl
jl
lret
decl
pop
or
pop
decl
mov
ret
or
mov
add
stos
clc
stc
test
adc
std
push
shlb
mov
xorl
stc
lret
sti
jo
in
gs
xchg
subl
stc
lret
stc
sub
dec
test
xor
inc
mov
out
std
xchg
and
das
in
cmpsb
repz
std
sub
out
dec
or
xor
or
push
in
add
data16
add
imul
and
fisttps
jge
add
push
subb
pop
insl
xor
repnz
pop
or
dec
stc
jmp
xchg
imul
add
test
jbe
imul
xor
jbe
jnp
insb
push
icebp
mov
clc
pop
add
add
dec
jle
jge
icebp
clc
neg
sub
jmp
mov
clc
out
stc
add
loopne
clc
jmp
sti
lock
dec
stc
pop
insb
stc
add
int
icebp
hlt
aam
add
dec
stc
jmp
into
jmp
or
dec
push
push
movsb
stc
or
dec
jl
rcll
outsb
in
lock
xchg
hlt
jae
in
jp
add
repnz
adc
add
sar
jmp
test
mov
repnz
repz
xlat
or
in
repnz
mov
mov
cli
add
stc
add
adc
clc
pushl
pop
punpckhdq
dec
je
daa
mov
cmp
cli
jmp
dec
std
jmp
js
std
loope
adc
cmpsb
stc
jg
add
add
lock
ljmp
or
dec
loopne
decl
xor
rcrb
pop
outsb
push
call
int3
es
bswap
sbb
rclb
add
dec
inc
jbe
and
sti
stc
or
sti
or
addl
sti
stc
pop
fdivr
call
loop
test
ret
add
and
add
ret
xchg
psubd
loopne
bound
pop
loopne
jle
in
add
stc
sahf
add
stc
jmp
sub
ret
pop
sub
dec
stc
jmp
sbbb
data16
stc
jmp
stc
ss
aam
cmp
add
pop
mulb
stc
shrb
add
hlt
adc
repz
jge
mul
repz
fadds
insl
cli
jb
rcll
ljmp
stc
jmp
add
push
sub
add
idiv
jmp
div
sahf
ja
stc
add
and
clc
push
popa
or
clc
jmp
inc
icebp
andl
fdecstp
push
aaa
add
jmp
leave
jmp
add
dec
fcoml
push
jmp
shlb
push
inc
stc
add
add
lock
jmp
push
pusha
add
dec
jl
jb
std
andl
stc
insl
clc
int3
ljmp
jle
cli
jmp
dec
xor
pop
repz
add
add
lock
std
xchg
add
jbe
pushf
call
pushf
jg
call
jo
clc
jmp
inc
cli
adc
fistpll
out
mov
cli
mov
js
je
test
mov
fimuls
mov
cld
decl
add
test
mov
pushl
repnz
decl
add
add
add
idiv
fisubl
mov
xchg
stos
out
stc
ret
stc
sbbb
pop
pushf
sti
jo
mov
pop
sbbl
cmp
stc
dec
dec
sbbl
xor
call
int3
push
sbb
pop
std
jno
into
push
hlt
sti
or
add
add
out
xor
out
stc
les
sti
call
add
dec
insb
or
shrl
jno
out
out
stc
enter
ret
cmc
inc
stc
jmp
mull
loope
add
xchg
inc
and
xchg
inc
jbe
add
cmpsb
jg
out
xchg
cs
jmp
notl
push
int3
fsubs
inc
or
add
pop
mov
int3
mov
cmc
es
cwtl
mov
les
jg
out
daa
cmc
push
jbe
div
out
in
add
add
or
add
pusha
not
out
add
cmc
test
xor
mov
cmp
push
mov
int
hlt
pop
jle
in
lcall
in
insl
ljmp
mov
jns
clc
lahf
jmp
cmp
pop
lret
js
add
add
hlt
cmp
iret
mov
xchg
icebp
clc
jmp
mov
cli
nop
jmp
add
add
daa
insl
mov
add
clc
jmp
hlt
repnz
push
dec
stc
add
out
jae
shl
add
cld
call
int
call
jo
and
add
add
js
repz
jg
std
mov
cli
fsubrp
cli
sti
mov
push
in
sar
pop
sbb
call
push
push
pop
int
hlt
mov
jbe
push
jbe
cmp
ljmp
and
ljmp
stos
out
test
test
dec
add
add
pop
shr
jne
mov
repz
add
add
orl
je
movl
stc
nop
xchg
std
das
btc
inc
jmp
and
and
pusha
mov
in
mov
adc
mov
jne
sub
stc
les
sti
xor
xchg
bound
fwait
aad
xor
lret
stc
or
loopne
sbb
jge
add
mov
in
ljmp
sbbb
in
lcall
dec
cli
jmp
mov
loopne
pushf
test
loope
int3
vpsllw
imull
out
xchg
or
int3
leave
popf
icebp
jbe
jmp
shlb
mov
jge
push
and
inc
in
outsl
cli
int3
call
aam
add
add
cmpsb
mov
es
pop
xchg
out
inc
icebp
mov
fsubr
in
icebp
mov
shrl
icebp
mov
clc
push
push
icebp
xchg
clc
push
repz
mov
icebp
clc
loope
gs
leave
call
insl
sti
pop
imul
js
les
icebp
clc
push
cld
subl
cmpsb
dec
gs
add
add
clc
jbe
fidivl
test
mov
out
clc
jbe
jbe
insb
aas
icebp
or
cmp
clc
mov
and
add
inc
push
inc
mov
hlt
ljmp
jne
adc
je
out
jae
std
cmp
insl
and
popf
std
dec
jmp
cli
ljmp
sub
call
and
fiaddl
pop
add
add
mov
and
jmp
sbb
cld
ljmp
call
pop
jbe
fmul
add
repnz
call
pop
push
cmc
dec
and
dec
inc
aad
sbb
call
mov
dec
lods
adc
ret
stc
lock
cmp
mov
repnz
add
add
filds
mov
repnz
enter
ret
sub
lret
stc
test
les
mov
stc
nop
int3
clc
adc
loopne
add
add
cmp
push
push
pop
xor
test
adc
loopne
push
clc
or
adc
stc
xchg
jo
int3
stc
pushf
ret
and
push
push
push
jle
clc
push
jmp
add
out
out
shlb
ss
movsl
sub
dec
out
inc
out
divb
stos
add
repnz
add
stos
add
stos
add
stos
add
stos
add
rep
add
hlt
sub
call
mov
add
call
sbb
insl
jb
imul
fstpl
xchg
pop
push
cvtpi2ps
stc
out
add
mov
lahf
dec
sbb
add
adc
or
imul
push
mov
cwtl
icebp
idivl
subb
insb
loope
mov
inc
jmp
out
clc
bound
push
shrl
cmp
dec
cmp
cmp
insb
push
and
ficoms
pop
fnstsw
pop
xor
jno
ficoms
insb
add
add
push
sbb
push
pop
push
loope
in
movsl
in
ljmp
lret
cmpsb
dec
scas
sbb
add
sub
lods
add
and
mov
jg
add
push
scas
xor
mov
mov
and
aad
mov
outsb
dec
or
daa
dec
add
add
cmp
and
inc
jb
mov
outsb
dec
inc
add
xchg
incb
jbe
bound
ds
or
mov
mov
in
push
les
push
imul
mov
dec
push
inc
das
outsb
add
mov
movb
xchg
les
pop
sti
in
push
imul
or
cmc
add
add
jge,pt
enter
or
sarb
pop
or
cld
addr16
jne
add
push
cld
dec
push
std
decl
rclb
cs
jmp
notb
push
pop
inc
or
push
push
ja
jmp
js
inc
orl
vzeroall
add
jmp
ljmp
xchg
jo
or
fldl
add
add
out
loopne
sub
rcrb
ret
dec
ljmp
ljmp
or
mov
mov
mov
mov
aas
sub
bound
jae
repz
cmp
std
out
jecxz
or
push
sahf
fidivl
sarb
decb
mov
jae
sub
scas
jecxz
movl
inc
loopne
inc
jmp
loop
jmp
nopl
pusha
cmpsl
sbb
adc
sub
dec
push
in
clc
mov
push
adc
gs
mov
clc
fsubl
ds
push
cmp
inc
mul
clc
jo
loope
lods
cld
pop
movsb
jmp
bound
icebp
test
add
dec
stc
pop
scas
pop
aas
pop
jb
aas
push
sub
loop
bound
addr16
xor
notl
add
stc
push
add
jl
sbb
jle
inc
in
and
or
rclb
push
aaa
add
cmp
test
adc
icebp
idiv
pushl
divl
sub
jbe
jns
inc
add
imulb
adc
and
push
add
neg
loop
sub
pop
mov
add
cwtl
loop
adc
pop
jle
mov
loopne
inc
stos
gs
or
ljmp
gs
add
pop
dec
cld
mov
std
decl
cmp
ret
xor
adc
loop
fbstp
mov
jo
adc
push
lret
daa
cmp
lock
call
dec
loop
add
xor
adc
les
add
arpl
stc
idivb
decl
mov
xchg
lock
sub
or
roll
orb
ficoml
das
sbb
xor
sub
push
clc
xchg
or
psubw
pop
jo
call
dec
jbe
out
std
push
gs
sarb
pop
clc
inc
dec
outsb
mov
outsl
add
les
xchg
add
add
inc
std
jae
dec
lcall
push
sbb
push
test
addr16
cmp
clc
inc
dec
sbb
orb
imul
add
icebp
arpl
push
jno
fidivrl
sub
jle,pt
popf
sti
and
test
stc
push
dec
jb
out
pop
add
cmp
sbbl
or
icebp
sbb
cs
inc
lret
add
mov
push
and
add
out
mov
push
jbe
stc
or
cmc
daa
call
jle
mov
jbe
in
orl
xor
clc
outsb
cmpsb
cmp
loope
loopne
std
arpl
bound
sub
dec
jbe
mov
push
add
dec
icebp
push
dec
adc
inc
int
bound
icebp
jge
mov
add
cmpsb
sti
add
sbbl
mov
stc
jne
dec
imul
je
jp
pop
sub
jne
or
xorl
popl
ss
insb
or
sti
call
aad
pop
in
clc
mov
add
call
jle
ds
cli
shll
or
stos
pop
shll
and
add
popa
inc
sub
aad
subl
jge
shlb
inc
dec
dec
les
cs
imul
pop
jge
fdivrs
inc
pop
inc
cmp
nop
pop
or
push
sub
push
and
les
cmp
push
and
push
pusha
addl
xchg
int3
inc
arpl
add
dec
push
inc
jge
pop
inc
mov
add
add
dec
in
jp
or
add
int3
sbb
add
aaa
sbb
jns
xchg
shlb
pop
add
inc
pop
or
ror
enter
or
jp
add
lret
cmp
dec
add
inc
stc
jmp
add
shrb
sbb
pop
dec
ret
stc
jmp
stc
shll
loop
adc
jl
add
jb
lahf
add
jp
cmovs
mov
cmp
scas
iret
add
sbb
sahf
sbb
lahf
outsl
shrb
nop
fcomi
push
loope
fcoml
aam
mov
shlb
icebp
sbb
shll
dec
jmp
jb
sub
pop
cltd
imul
mov
sub
cmp
aam
and
add
mov
adc
xor
dec
push
mov
sbb
push
fstpt
stos
stc
hlt
sub
xchg
push
mov
mov
stc
addl
stc
pop
insl
adc
dec
insl
ljmp
cmp
sub
push
in
loope
add
xor
roll
bnd
add
jno
add
add
out
jg
out
movsb
loope
jo
clc
xor
inc
push
das
xor
pushf
icebp
idiv
cmpsb
inc
add
add
or
loope
adc
jbe
dec
cmp
mov
addr16
inc
add
lret
mov
ja
add
testl
add
idivl
fisubs
inc
call
jne
add
dec
and
fcoms
cli
push
xchg
mov
add
mov
jg
iret
add
dec
int3
xor
mov
iret
int3
dec
sub
jge
mov
add
sub
int3
xchg
sbb
mov
addr16
or
fadds
dec
dec
mov
pop
les
add
dec
push
inc
je
add
int3
xchg
jo
mov
fwait
dec
mov
decl
call
aas
lret
mov
add
insb
or
ficomps
jmp
sub
outsl
push
enter
nop
pusha
fisttps
mov
fidivl
incl
jmp
sbb
jbe
push
cmp
cli
jmp
fmul
jmp
add
xor
mov
dec
arpl
push
cltd
xor
jmp
or
adc
rolb
add
in
adc
fs
push
add
lds
jb
push
mov
inc
test
clc
dec
ret
pop
fs
sar
sbb
rorl
jl
xchg
popf
jle
mov
sarb
cmp
ljmp
mov
jp
pop
push
mov
lcall
jmp
bound
mov
movd
push
jmp
clc
bound
shl
jmp
std
in
mov
loope
xor
mov
mov
adc
negl
test
in
mov
jo
incl
add
idiv
jge
insl
ds
cmp
in
jmp
mov
das
jle
xchg
testb
mov
or
scas
or
mov
add
cmc
mov
jno
addb
inc
pop
mov
jle
pop
mov
mov
cmc
or
negl
inc
push
mov
jb
push
pop
cmp
aas
test
add
les
jno
orb
xchg
dec
inc
dec
les
push
orl
cmc
test
sti
les
out
add
lret
nop
sub
add
and
xchg
addb
push
add
icebp
dec
dec
insb
jmp
push
popf
adc
xchg
dec
xchg
movsb
cmp
add
mov
add
inc
out
xchg
dec
orb
stc
jmp
adc
and
out
clts
cmp
sub
cld
jmp
jl
stc
jmp
add
xchg
ljmp
dec
or
mov
lahf
inc
dec
loop
or
cmpsl
sub
dec
push
cmp
sub
jmp
sarb
icebp
adc
int
mov
jmp
or
addl
repnz
add
dec
dec
push
push
xlat
jb
cmpl
xor
pop
mov
mov
adc
cmp
cmp
mov
mov
inc
mov
mov
cmpsl
xor
mov
mov
mov
add
add
jle
mov
sub
push
adc
stc
add
test
dec
stc
add
dec
sub
push
xor
cs
add
dec
add
dec
mov
or
push
cmp
jno
ficomps
or
popa
cmc
jle
xor
mov
sbbl
mov
add
out
mov
repnz
negl
jmp
dec
adcb
adc
cmpsb
jp
xchg
std
add
test
mov
xchg
fs
je
stos
clc
pop
sbb
repnz
dec
stos
test
pop
lret
js
inc
inc
cmp
sbb
ss
and
cvtps2pi
jno
add
add
dec
push
inc
insb
sbb
test
mov
stc
adc
jge
mov
or
push
iret
stc
clc
xchg
cmp
aam
xor
nop
clc
std
mov
jl
jl
dec
lret
push
insb
adc
push
add
mov
inc
sub
pop
pop
clc
lock
stos
sbb
add
add
rcr
push
mov
inc
imul
xor
outsl
rdmsr
inc
cmp
cmp
add
mov
mov
xor
lret
lcall
arpl
js
incb
shr
push
pop
loope
fdecstp
shll
arpl
loope
ljmp
add
leave
shr
orb
ljmp
inc
arpl
add
add
jle
cmp
sub
sbb
dec
mov
xchg
dec
and
or
sub
repnz
cmp
in
push
mov
sahf
jbe
cmp
imul
mov
fwait
jbe
and
jns
sub
bound
dec
mov
dec
stc
add
push
mov
iret
mov
sub
stc
jae
lds
bound
sbb
jmp
dec
stc
cmp
add
push
mov
dec
dec
mov
pusha
and
in
cltd
mov
add
stc
add
int3
jge
adc
push
jo
mov
adc
jb
fistpll
jbe
xor
cld
add
imul
add
push
insb
dec
and
add
add
sub
in
lcall
add
mov
adcb
pop
add
and
xchg
cwtl
mov
cmp
dec
xlat
xchg
in
add
dec
loope
mov
shll
inc
psrad
aam
jl
dec
loop
test
dec
clc
jmp
ret
stc
pop
loope
mov
add
add
scas
test
dec
andl
std
in
xlat
test
push
jnp
or
bound
loopne
jmp
pop
mov
dec
loopne
sbb
and
es
movsb
adc
mov
push
rorb
dec
jge
push
mov
stc
jo
inc
loop
xchg
stc
call
bound
lret
mov
xor
add
add
stos
or
add
jmp
test
daa
cmp
ds
jge
inc
out
lcall
sub
hlt
adc
xor
jae
xchg
push
popa
or
stc
jle
xchg
inc
cmp
push
stc
bound
mov
pop
dec
stc
jmp
add
rcl
cmp
das
int3
stos
add
add
add
in
jmp
mov
jmp
gs
xlat
dec
stc
mov
xchg
call
lcall
inc
adc
dec
jp
aam
iret
pop
das
inc
mov
js
push
add
dec
stc
add
pop
mov
inc
jae
icebp
std
jbe
dec
es
int
psubsw
pop
mov
psubsw
mov
add
test
jno
repz
out
jmp
add
xchg
xchg
and
add
sub
cmpsb
clc
add
mov
mov
xor
sub
into
jge
mov
jecxz
mov
pop
pop
add
lods
jg
data16
jge
cli
dec
inc
pop
mov
mov
cmc
jmp
or
add
add
xor
scas
push
dec
test
dec
je
or
jp
cli
jmp
imul
sbb
cmp
dec
fsts
mov
loopne
sti
inc
into
fisubl
lds
test
inc
sti
ljmp
loop
mov
add
pop
add
bound
mov
pop
jo
dec
loop
jno
add
notl
pop
rcrb
add
sub
pop
dec
or
outsb
jge
dec
ret
jo
jge
cmp
cs
cmpb
dec
loopne
inc
jnp
dec
pop
aam
jge
pop
js
repz
pop
jl
push
sub
and
aam
pop
lret
fiadds
mov
inc
imul
sub
ja
sub
sub
xor
mov
add
add
rol
add
inc
arpl
sub
andb
adc
jno
inc
mov
adc
lret
enter
push
xorb
enter
xchg
popa
cmp
xorb
rolb
jl
or
jmp
add
clc
jmp
pusha
cmp
mov
mov
clc
call
shll
dec
sar
inc
cwtl
sbb
pushf
mov
add
iret
clc
jle,pn
std
call
mov
mov
inc
mov
out
cmp
push
std
jge
sbb
xor
jns
in
out
scas
ret
or
pop
inc
add
sub
jge
mov
inc
imul
cs
cs
xchg
add
add
testb
imul
sbb
inc
and
mov
mov
mov
add
out
pop
or
das
sbb
call
clc
mov
mov
jmp
or
int3
xor
in
stos
int3
inc
xor
push
add
data16
xor
xchg
ss
jne
add
add
hlt
or
pop
inc
je
sub
dec
decb
sub
addr16
mov
cmp
shlb
dec
pop
aas
and
mov
les
sub
add
pop
lds
int
cmc
sbb
and
stc
nop
mov
mov
push
fs
add
add
jnp
cmp
push
mov
adc
push
dec
bound
sbb
rolb
nop
idivb
test
cmp
aas
stc
popa
leave
push
cli
add
mov
mov
or
rolb
mov
jmp
push
das
cmp
les
and
add
sub
add
add
in
dec
pop
stc
scas
js
dec
ret
js
sbb
jmp
jecxz
xor
pop
jo
cltd
int3
cltd
jp
clc
leave
aas
push
orl
daa
jae
movsb
mov
add
sahf
hlt
mov
outsl
popl
jmp
lcall
aaa
imul
cmpl
sub
cmc
mov
add
add
sub
sbb
jmp
bound
jle
adc
dec
stc
add
pop
mov
rorb
or
lahf
dec
jle
or
js
dec
mov
sub
cltd
push
mov
fwait
test
inc
fst
mov
sbb
add
push
sub
or
cwtl
cli
ljmp
add
repnz
jg
testb
push
or
rcrb
pop
ret
jge
sub
sub
das
inc
mov
add
xor
add
idiv
jge
dec
hlt
shlb
sti
mov
in
pop
xor
jle
fstpt
in
repz
pop
test
test
clc
jge
jp
cli
pslld
or
mov
add
add
add
xor
decl
ja
pop
rolb
adc
lock
shlb
pop
push
in
xchg
inc
cmp
cmp
sbb
xchg
inc
push
cmp
sbb
xchg
adc
fmuls
add
int3
sub
or
icebp
out
inc
cmp
adcl
add
xchg
cld
orb
add
dec
jmp
add
jge
pop
pop
push
jge
cld
or
xchg
pushl
xchg
imul
sbb
sti
leave
sub
enter
mov
or
stc
sub
test
stc
xchg
sub
stc
jmp
push
aam
mov
and
jl
loope
divl
roll
dec
outsb
mov
sub
pop
rolb
add
jmp
repnz
mov
ljmp
cmp
enter
rorl
icebp
call
add
das
les
mov
rcrl
mov
jmp
into
mov
push
les
icebp
xor
sub
jge
mov
cmp
jp
cmp
nop
inc
repnz
test
sbb
and
mov
sbb
subl
jp
or
dec
pop
add
lods
pop
add
dec
jp
fstl
inc
loope
es
sub
add
stc
mov
add
xor
sub
int
lcall
pop
stc
jmp
fisttpll
or
je
test
jge
add
add
sahf
rclb
std
jne
push
sub
xorl
rsm
pop
add
enter
add
mov
mov
inc
gs
mov
not
jne
adc
cmp
or
imul
mov
mov
push
cld
add
inc
or
sbb
icebp
int3
clc
lcall
xor
mov
mov
inc
lret
add
add
add
dec
fiadds
inc
sub
mov
lods
jne
cmp
sbb
rolb
inc
ret
test
std
sbb
add
dec
push
mov
jnp
shr
sbb
add
inc
or
stc
lcall
jge
lret
xlat
shrb
aam
and
jge
xchg
lds
add
aas
rolb
add
push
mov
clc
or
ret
jo
sub
pop
mov
insb
aas
arpl
xlat
and
arpl
shl
jmp
jp
loope
test
xor
push
aas
dec
or
xchg
mov
stc
add
push
add
sub
mov
mov
jp
shr
add
add
ficoml
jb
and
mov
imul
shlb
bnd
sbb
call
incb
pop
jmp
insb
incl
in
cmpsl
icebp
push
add
in
sub
mov
addr16
stc
jo
loope
ret
shr
stc
add
cmc
aaa
adc
dec
stc
add
pop
filds
psubw
insl
in
out
add
pop
mov
xchg
sahf
mov
inc
push
icebp
mov
mov
jb
enter
insb
cmp
xchg
stc
dec
mov
sbb
scas
or
mov
outsb
push
sbb
and
popf
cmp
mov
addl
mov
repnz
add
add
ss
add
jno
add
stc
or
das
inc
mov
mov
mov
repz
sbb
add
clc
jge
push
jb
je
imul
sub
test
add
mov
fnstcw
dec
mov
dec
sbb
test
jb
negl
les
xchg
addb
iret
dec
in
subb
mov
rorb
adc
dec
rolb
xor
adc
test
mov
test
dec
dec
sbb
or
daa
xchg
mov
iret
or
jns
rclb
and
add
or
cmp
rorl
add
dec
adc
icebp
add
pop
mov
add
dec
stc
jmp
adc
dec
lock
sub
dec
jmp
jae
das
jb
cmpsl
int3
mov
out
add
gs
jecxz
jb
verr
push
jnp
and
rorb
inc
test
inc
repnz
outsl
mov
dec
stc
adc
mov
add
cmp
out
aad
dec
outsb
or
ror
ss
rorb
fucomp
aad
stc
out
movb
dec
aam
jb
sbb
pop
clc
mov
jmp
dec
stc
add
xchg
clc
call
pop
stc
adc
dec
lock
dec
stc
add
mov
push
jmp
ja
add
ret
sub
add
ret
jb
sbb
cmp
ret
insb
sbb
jb
cmp
jmp
or
movsl
mov
cmp
inc
inc
insl
and
and
add
inc
hlt
insl
xor
jb
addl
ljmp
clc
sub
and
add
jle
inc
hlt
xor
add
add
inc
jbe
in
insb
push
clc
jno
inc
or
mov
lock
mov
roll
std
add
fnstcw
adc
and
add
sti
adc
mov
dec
and
dec
xlat
orb
mov
mov
fistpl
int
in
ret
pop
clc
dec
cmp
or
xchg
sbb
xchg
add
scas
test
add
dec
pop
loope
pop
int3
add
xchg
jbe
push
das
out
xor
add
in
sub
in
lods
add
add
xchg
stos
mov
sbb
sbb
loopne
rclb
add
push
or
mov
loop
mov
popf
add
jge
adc
fidivs
mov
rcl
fwait
movsb
and
add
add
dec
jb
idivl
in
xlat
jae
lret
movsb
pop
jp
add
clc
jmp
ret
mov
sub
dec
stc
ljmp
adc
rcl
repnz
jmp
daa
add
fidivl
fiadds
inc
jge
or
push
add
stc
push
add
inc
loopne
dec
subb
popa
jmp
add
add
add
add
iret
xor
in
dec
stc
adcl
pop
gs
std
call
iret
add
dec
jmp
dec
stc
orl
sub
sbbb
mov
or
dec
add
bound
mov
add
iret
mov
jnp
jl
sbb
add
idivl
push
mov
leave
push
jle
in
leave
mov
push
jl
sbb
inc
es
or
idiv
jne
cmc
cmp
out
jge
into
test
fnstcw
or
mov
add
mov
imul
test
test
add
mov
jmp
decl
jmp
cmp
add
add
add
add
mov
in
imul
inc
pop
add
ffree
jbe
jno
out
dec
jle
and
sahf
jne
sub
or
fwait
jb
sub
mov
ds
pop
or
jp
call
int3
fs
and
movl
push
jp
xor
aad
mov
jge
add
add
add
add
inc
es
dec
mov
add
les
xchg
testb
dec
mov
mov
xchg
push
xchg
mov
jb
daa
mov
rcrb
push
dec
stc
jmp
dec
aaa
andb
ja
mov
add
sbb
add
imul
add
inc
loop
inc
lock
push
and
stc
push
lret
clc
jg
jmp
mov
lcall
dec
xchg
mull
test
mov
adc
stc
mov
mov
push
jb
ficompl
add
repnz
adc
xor
push
mov
jmp
cmp
xchg
push
or
lods
clc
mov
iret
in
scas
mov
add
psubw
jmp
xor
inc
and
leave
cmp
push
mov
lret
lret
cs
jmp
dec
stc
pop
lahf
push
mov
dec
sarl
mov
ljmp
mov
xor
int3
push
add
lods
clc
pop
add
cmp
push
repnz
jmp
jge
add
push
jb
xor
add
imulb
inc
mov
adc
and
testb
insl
inc
imul
push
add
mov
adcb
inc
dec
mov
push
xchg
clc
add
xor
mov
xor
cmpsb
cmc
inc
stc
inc
push
push
imul
add
bnd
mov
call
mov
test
and
add
dec
sub
push
dec
mov
aaa
pusha
jbe
and
int3
add
add
aas
push
out
add
dec
xchg
movsb
test
sbb
jle
pop
mov
mov
adc
jl
jle
or
cmpsl
add
dec
lahf
data16
aad
test
outsb
inc
jge
stos
add
out
add
dec
repz
push
xchg
push
mov
xchg
loope
or
push
int3
enter
xchg
sub
mov
mov
xor
xorl
xor
fildll
hlt
clc
xor
out
jmp
jmp
aaa
and
jg
add
add
in
mov
add
xchg
lods
arpl
adc
jno
idiv
rorl
hlt
cwtl
xor
add
enter
shll
cmp
cmpsl
xor
cli
jmp
lods
sub
and
insl
fwait
jge
test
js
or
leave
push
sbb
push
lods
add
fdivrs
or
dec
add
bound
add
or
inc
push
add
shr
add
mov
fstps
mov
arpl
out
push
mov
xor
mov
or
roll
cmp
push
scas
jmp
pop
into
cmpsb
adc
and
inc
fs
jmp
popf
and
cli
add
cmc
out
add
add
cltd
fadds
data16
or
in
mov
loopne
ss
in
or
outsb
ja
add
jmp
mov
push
add
xor
divb
sbb
sahf
call
cld
out
jl
icebp
stc
add
xor
dec
lret
rol
sub
ret
or
sub
clc
add
add
fldenv
jle
dec
and
xchg
in
mov
stc
and
mov
jnp
dec
in
mov
sbb
nop
sbb
pop
and
pop
pushf
mov
dec
mov
add
push
daa
dec
in
mov
inc
push
fiadds
or
adc
subb
jmp
dec
fs
fistpl
add
add
xchg
or
icebp
or
dec
hlt
jg
aas
mov
orb
je
or
pop
inc
sub
insl
lcall
xchg
and
xor
push
add
push
aam
lcall
stc
jmp
dec
daa
jbe
add
sub
aaa
and
cmp
add
add
pop
cltd
pop
imul
add
dec
jae
outsl
mov
or
jmp
jg
cmp
push
imul
jmp
inc
cmpsl
jne
add
int3
add
mov
in
mov
mov
stc
add
shlb
call
dec
stc
add
lods
mov
dec
lods
clc
jmp
fs
add
add
fiaddl
pusha
adc
mov
cltd
mov
popf
jb
in
jl
pop
and
add
xchg
or
std
mov
pop
je
icebp
jnp
xor
stc
imul
imul
jae
cltd
push
inc
stc
add
xor
movntps
add
testb
xor
jmp
sub
add
cmpsl
testb
gs
ret
std
add
data16
scas
xchg
mov
push
sub
mov
jno
rorb
aaa
jle
movsl
fcomi
add
jb
add
xor
dec
cld
lods
imul
lods
ljmp
scas
sbb
jmp
cmc
ljmp
mov
std
orb
mov
add
add
pop
xor
lahf
add
testl
add
xlat
mov
aam
sub
mov
sahf
inc
in
push
enter
add
jl
jnp
jae
jecxz
jl
jnp
inc
rclb
enter
test
clc
mov
data16
sbb
or
std
mov
mov
add
in
add
dec
adc
cld
dec
movl
jp
int
jp
lds
lret
push
outsl
popf
jl
popf
fbstp
cld
mov
add
jl
sti
leave
dec
push
cmp
sbb
jp
arpl
add
sarb
push
les
out
cld
movsb
cmpsl
sbb
lods
ror
cmp
add
aam
jnp
mov
mov
sub
out
adc
pop
enter
shl
sarl
mov
jne
inc
adc
scas
dec
adc
jmp
dec
stc
test
orb
xchg
or
clc
jbe
stc
or
dec
stc
jmp
xchg
adc
mov
test
dec
stc
pop
jg
add
mov
loop
in
dec
cs
or
jmp
leave
mov
je
rcrl
dec
stc
add
movsl
add
shl
cld
call
jmp
cmc
into
mov
stc
add
mov
dec
cs
imul
sti
inc
inc
add
icebp
add
cmp
bound
add
add
mov
add
mov
add
cmpsb
cli
add
push
loop
ret
std
popa
jle
and
xchg
popa
mov
leave
fistpll
in
cmp
in
inc
nop
in
hlt
add
jle
add
cli
or
lods
fs
loopne
in
inc
mov
or
push
adc
add
out
sbb
add
dec
sub
js
into
sbb
mov
add
push
sub
adc
xor
cmpsl
jg
cmp
add
aam
mov
aam
out
xchg
jl
mov
xchg
cmp
pop
sarb
das
js
imul
pushf
inc
js
jnp
xchg
adc
enter
test
cld
mov
in
inc
inc
rclb
ret
cvtpi2ps
dec
ret
js
dec
stc
jmp
inc
imul
add
add
jmp
inc
imul
adc
mov
add
lcall
rorl
cmp
fwait
fwait
inc
insb
and
cmp
outsl
fiadds
icebp
out
clc
movsb
lahf
inc
mov
lods
enter
push
cmp
mov
xor
jo
out
add
add
stc
jmp
jnp
popf
push
inc
mov
icebp
mov
sub
pop
jmp
stc
mov
in
test
idivb
and
dec
or
jmp
pop
mov
je
rcrl
cmc
jmp
dec
stc
pop
aaa
dec
mov
aam
or
mov
ljmp
add
mov
dec
stc
rorl
xchg
dec
or
popf
add
or
sbb
dec
stc
orl
idiv
es
loopne
in
lock
loop
sarl
rcrl
jb
jne
rcrl
testb
imul
push
and
jae
std
mov
dec
cli
std
dec
sub
jecxz
sub
add
out
test
mov
loope
mov
orb
dec
inc
pop
jmp
cmp
adc
jecxz
push
enter
mov
pop
inc
hlt
in
ljmp
daa
pop
inc
hlt
dec
mov
xchg
mov
dec
pop
das
aam
test
and
jns
dec
pop
cmp
aad
std
test
add
xchg
enter
arpl
hlt
aam
jae
push
and
stos
cmpl
push
movsb
add
dec
jns
mov
out
adc
add
aam
xchg
xchg
push
jl
cmovae
lock
push
pushf
rorl
add
or
jns
nop
out
sbbl
pop
in
fisubl
stc
push
inc
cli
jg
cli
jmp
inc
addr16
cmpsb
xchg
popf
arpl
or
std
roll
ss
test
sub
call
cltd
pop
ret
arpl
jb
out
das
or
aam
addb
push
or
jmp
or
icebp
jb
xchg
jb
or
cmp
addl
ljmp
je
xor
add
dec
add
test
pusha
loop
dec
pusha
mov
adc
imul
dec
pusha
loope
dec
pusha
mov
adc
aas
shrl
mov
mov
inc
jmp
test
add
iret
and
jmp
dec
stc
andl
stc
pop
gs
clc
add
iret
mov
jbe
dec
bnd
push
stc
add
add
add
lahf
negl
jne
cmp
fiadds
push
dec
roll
ss
or
cmp
xchg
mov
testb
and
sbbl
xchg
cli
decl
xor
pop
ret
jge
push
and
loop
mov
adcb
das
cmc
mov
add
jb
cmp
pop
cmp
add
cmp
cli
pop
mov
aaa
mov
mov
int
loopne
add
cli
add
jae
clc
pushl
std
sub
mov
cmp
dec
sbb
lock
push
imul
adc
cmp
fdiv
cld
xchg
xchg
jnp
mov
pop
sub
push
movsb
test
and
test
clc
in
add
adc
lret
add
add
cltd
jmp
cld
lock
pop
aam
inc
mov
inc
sbb
and
or
pop
xchg
dec
or
clc
adc
inc
jg
int
je
icebp
jl
stc
stc
add
and
bound
sarb
ss
xchg
jbe
dec
stc
push
adc
fimuls
add
pop
add
add
ljmp
jo
xchg
or
push
aaa
repnz
jmp
or
aaa
repnz
popf
ljmp
mov
mov
lcall
mov
jp
orl
push
cwtl
clc
loopne,pn
push
mov
sbb
mov
cmovnp
add
leave
cmp
fs
jge
scas
mov
add
cld
push
lods
mov
ret
icebp
dec
jbe
and
inc
pop
bound
popa
mull
in
mov
ret
loope
jbe
jle
fldl
push
fldl
mov
and
fldl
mov
faddl
xor
ljmp
clc
sti
faddl
outsl
repnz
jl
faddl
mov
mov
faddl
addb
add
faddl
add
mov
add
xor
add
xor
add
xor
add
shll
sub
shlb
adc
xor
add
mov
push
lods
add
test
add
sub
add
mov
add
shlb
xor
mov
or
insb
inc
sub
pop
enter
jge
ret
sub
dec
and
fisubs
rorl
add
dec
nop
int
icebp
in
mov
stc
cmpb
pop
lea
int3
fwait
in
int3
xchg
int3
int3
mov
in
les
dec
aam
hlt
push
aam
ret
adc
jge
add
and
cvtps2pi
push
or
loope
std
xchg
stc
dec
nop
adc
into
enter
nop
add
into
stos
mov
dec
nop
adc
into
stos
mov
dec
nop
mov
push
mov
pop
push
stc
test
and
out
sbb
mov
jmp
ret
push
aas
sub
stos
aam
add
ficoms
mulb
inc
push
mov
add
add
xchg
push
clc
jmp
xchg
inc
cli
jmp
cmpl
sub
das
rol
and
cwtl
les
ljmp
pop
stc
push
add
mov
outsb
mov
and
shrb
add
lret
sahf
mov
dec
stc
mov
insb
jo
add
sbb
add
dec
nop
add
add
add
dec
jmp
nop
add
pop
dec
dec
ljmp
dec
in
dec
nop
add
pop
dec
dec
in
dec
nop
add
dec
dec
dec
out
dec
nop
add
pop
dec
dec
out
dec
nop
add
dec
dec
dec
loope
nop
add
pop
dec
dec
lock
nop
add
dec
dec
dec
jecxz
nop
add
pop
dec
dec
repnz
nop
add
dec
dec
dec
in
nop
add
pop
dec
dec
add
clc
out
add
add
clc
out
add
add
out
add
stc
out
and
inc
rdpmc
out
stc
dec
xor
xorb
or
add
mov
adcb
mov
pcmpeqd
or
dec
or
jle
jns
test
cmp
add
sti
jne
ss
ja
ss
add
stos
loope
add
sub
add
mov
idiv
out
add
add
dec
pop
add
testl
testl
testl
testl
testl
testl
testl
testl
testl
testl
cltd
lea
testl
testl
testl
jge
mov
or
clc
push
fwait
notb
fists
cli
mov
adc
push
cmp
mov
ljmp
jns
sbbl
pushf
or
ja
cltd
andl
cmp
add
mov
les
sbbl
jmp
lds
rorl
std
ljmp
dec
stc
sub
fisubrl
movsl
subb
in
pop
imul
jmp
dec
jle
sbb
shrl
adc
add
dec
adc
scas
dec
stc
add
addr16
add
add
xor
daa
icebp
sub
dec
jle
test
icebp
xor
pop
icebp
and
push
fdiv
jmp
iret
icebp
and
in
fsts
inc
pop
xlat
imul
dec
stc
mov
iret
icebp
sbb
sub
add
jmp
cmp
add
push
in
add
stos
add
cs
cmp
ja
cli
add
mull
inc
out
aaa
or
add
insl
dec
mov
sar
js
xchg
cld
add
aaa
pop
cli
add
xchg
and
lods
adc
sahf
sahf
cmp
sub
lods
adc
scas
xchg
cmp
fwait
jo
add
adc
dec
pushf
cmp
push
enter
mov
add
data16
test
cmp
lods
push
mov
jmp
testl
sub
add
add
add
movsb
outsl
sbb
add
in
mov
dec
dec
clc
xchg
push
in
cmp
cmp
in
test
popa
cmpsb
adc
dec
ret
in
and
test
cld
and
mov
add
jl
outsl
sbb
cld
test
mov
sbb
cld
and
lods
ja
sub
sub
mov
hlt
and
add
add
add
movsb
ja
sub
test
ds
add
jmp
jmp
stc
bound
dec
je
loop
stc
push
add
std
dec
sti
and
fcomps
inc
out
shl
test
mov
ljmp
add
in
dec
cld
insl
cmp
test
cmc
js
loopne
add
mov
stos
add
add
int
fsubrs
add
xchg
ljmp
in
add
sub
mov
xchg
ljmp
add
in
orb
stc
add
std
cld
xchg
icebp
xor
add
push
in
loope
cld
xchg
loope
rolb
push
dec
fdivrp
jnp
jecxz
jmp
xchg
clc
push
cmc
jb
les
add
clc
cli
dec
push
ret
xchg
ret
pavgb
js
sbb
or
mov
lods
xchg
add
dec
fidivs
je
inc
jmp
fnsave
fs
inc
jmp
data16
and
inc
ss
add
add
xchg
dec
test
seto
or
push
jne
jmp
cld
add
pop
add
add
add
mov
xor
jne
jle
pop
mov
and
cmp
test
adc
add
mov
call
pop
hlt
add
int3
arpl
push
push
and
cltd
xor
xor
jge
sbb
add
sub
orb
cmpsb
add
insb
mov
fcom
lods
fadds
add
dec
sbb
je
cmp
aad
mov
mov
sbb
and
or
insb
fimull
call
add
pop
xlat
test
int3
rolb
xchg
hlt
lock
mov
add
fsub
sbb
je
mov
mov
or
and
xchg
inc
pop
push
jg
pop
imul
je
jg
dec
ret
lret
add
mov
mov
jmp
add
out
mov
stc
jmp
shlb
shrb
push
adc
cmpsb
fisttps
jmp
shll
mov
aad
rdpmc
cmc
jb
sub
ljmp
nop
loopne
out
xchg
int3
dec
clc
jmp
cld
rorl
cli
pop
jns
jle
lret
fst
or
in
add
add
lods
cld
sbb
mov
ljmp
mov
add
clc
test
lcall
adc
mov
jmp
xor
mov
pop
decb
mov
and
int
aas
clc
push
mov
jae
dec
jns
dec
jbe
jno
sbb
push
add
add
hlt
pop
sahf
sub
mull
cmp
aad
xchg
and
cmpsl
les
call
inc
jbe
lds
jge
jp
sarb
or
pop
xchg
leave
mov
pop
aad
insl
cmp
insb
push
adc
insl
pavgw
push
aad
jae
fcoms
add
add
loopne
data16
imul
in
popa
rclb
arpl
xchg
jno
jg
insb
gs
xchg
daa
cmp
mov
mov
lea
cmpsb
imull
push
xor
sbb
dec
scas
lcall
leave
psllq
pop
jne
dec
mov
add
popa
mov
or
sub
jle
add
rcll
add
dec
sbb
lcall
dec
psllq
mov
jnp
mov
loopne
jle
mov
push
adc
jnp
lahf
mov
push
adc
xor
fwait
inc
mov
int3
mov
jne
push
pop
je
inc
stc
jmp
push
inc
jle
push
repz
jmp
aam
mov
and
ret
mov
dec
stc
in
roll
and
jmp
cld
push
mov
pop
arpl
pop
arpl
int3
or
rcll
push
jg
or
inc
jb
push
stc
jmp
testl
jle
jnp
jmp
lcall
in
mov
and
bound
lret
jle
add
add
daa
in
add
in
jmp
mov
hlt
add
adc
stc
mov
mov
hlt
je
lret
jae
insl
ljmp
mov
lea
dec
les
cmpsl
ret
insl
mov
mov
push
sub
mov
mov
or
mov
xor
add
add
mov
pushf
jne
test
add
push
in
sbb
icebp
mov
jle
pusha
xchg
push
mov
jle
scas
iret
jge
xchg
or
les
or
jg
es
out
add
mov
add
data16
jg
push
cmp
mov
cld
jg
add
add
cmp
lods
add
adc
cld
jge
sahf
fdivr
jmp
stos
mov
add
dec
adc
sti
and
fsubrs
hlt
mov
sti
add
dec
lahf
ja
dec
xchg
add
fisttpl
xor
mov
xchg
fxch
dec
dec
jl
stos
or
lock
xor
adc
add
rcl
decb
dec
mov
add
add
jns
movsb
mov
push
jno
adc
sbb
in
aas
mov
mov
jl
leave
shrb
out
jnp
or
mov
daa
rorl
xchg
jl
popa
nop
add
sub
arpl
js
fisubrl
pop
pop
stc
jmp
push
mov
sbb
mov
add
add
cmpsb
add
fs
pop
dec
jb
nop
or
imul
repnz
pop
ja
dec
or
jle
fucomp
add
push
dec
xor
cmpb
xchg
lods
jp
cmp
jmp
mov
xchg
ret
xor
clc
adc
xor
fs
jbe
jae
repz
sbb
mov
scas
add
add
in
les
xchg
inc
and
pushf
jmp
gs
sbb
add
in
sbb
loope
push
xchg
js
test
bound
insl
jb
int3
cli
cmc
arpl
mov
cld
bound
mov
or
cmp
out
mov
jle
xor
aam
mov
push
xchg
test
push
cmp
mov
mov
inc
lds
inc
inc
inc
add
and
inc
push
sbb
mov
xorb
imul
xchg
outsl
addb
aas
pop
xor
cld
test
jmp
add
and
cmc
mov
outsl
add
dec
push
cmp
paddd
add
jbe
ret
push
jl
or
add
add
jnp
mov
ds
subl
repz
lcall
das
dec
adc
inc
clc
orl
push
dec
xchg
and
enter
fsubs
or
xor
add
push
xor
orl
sbb
jae
sbb
dec
xchg
outsl
outsb
dec
ja
xor
add
mov
divb
ret
in
leave
add
dec
xchg
outsl
outsl
pop
push
cmp
dec
and
hlt
ret
pop
movsb
pop
cwtl
pop
or
mov
int3
sbb
in
int3
call
xchg
inc
dec
mov
jl
mov
decl
xchg
cli
es
out
jmp
push
inc
inc
je
dec
stc
cmpsb
ds
imul
add
add
dec
jl
clc
enter
dec
jbe
add
jo
xchg
rolb
dec
nop
sub
rolb
dec
enter
add
jo
lahf
rolb
jp
test
xchg
inc
jge
decl
adc
inc
repnz
pop
dec
stc
jmp
add
add
jg
mov
sbb
psubsw
jmp
or
testl
jmp
mov
pop
or
out
jmp
test
in
mov
mov
inc
cltd
jo
cmp
cmp
imul
jmp
xchg
inc
and
jmp
jmp
aas
sbb
add
add
std
sahf
clc
jmp
decb
loopne
decl
or
cld
xor
add
jne
xchg
loope
mov
lods
cld
add
cmp
add
cmp
imulb
and
mov
insb
cld
add
les
dec
or
cmp
data16
add
mov
push
push
add
mov
in
test
or
aam
cld
test
sbb
or
add
dec
xchg
jnp
pause
sub
mov
jecxz
test
cmpb
add
les
adc
cltd
pop
xor
dec
mov
mov
xor
test
add
add
jg
add
xchg
and
mov
sbb
mov
mov
in
lcall
fdecstp
xabort
mov
jno
out
inc
jg
mov
push
xlat
dec
fistpll
lea
xchg
pusha
aas
sub
icebp
jae
out
add
sub
jns
inc
lock
out
shll
add
jb
sti
add
add
imul
inc
pop
stc
jmp
sub
fcmovu
mov
fwait
xchg
shrb
jbe
repnz
jp
cmp
xor
dec
pop
stc
jmp
dec
mov
sbb
xchg
idivb
ljmp
add
mov
mov
dec
stc
subl
sti
stc
out
sbb
aam
add
add
xchg
pop
loopne
inc
psubsw
frstor
mov
in
fnsave
dec
and
jns
jmp
jmp
push
lock
ljmp
je
mov
bound
ret
push
pop
pusha
mov
jbe
fists
stc
add
push
arpl
idivb
add
je
add
add
lahf
mov
adc
es
jne
sbb
mov
aaa
stc
add
cltd
insl
mov
es
sbb
mov
adc
out
leave
jle
out
nop
ss
add
in
xor
dec
out
insl
inc
in
out
nop
mov
jbe
jle
fsubp
add
push
hlt
pop
mov
clc
push
jp
jns
sub
cmp
or
dec
pop
xchg
mov
ljmp
es
dec
jmp
mov
pop
sbb
dec
pop
fsincos
test
xchg
add
outsl
mov
mov
test
adc
add
add
xchg
xor
mov
lea
pop
adc
xchg
scas
jmp
lods
push
lds
add
add
aam
bound
mov
dec
xchg
test
sbb
cmp
clc
mov
adc
leave
push
jb
dec
jno
adc
push
pushl
rcll
jmp
aas
test
xchg
jmp
jmp
mov
push
cmpsb
or
dec
imul
repnz
stc
add
add
dec
stc
out
mov
dec
into
lock
jmp
jmp
dec
stc
jmp
push
subl
int
pause
jno
stc
add
out
imul
add
inc
je
aad
xor
arpl
or
testl
cmc
fucomp
sub
add
add
lods
call
popf
inc
mov
jmp
lds
decl
leave
divb
push
stc
add
nop
out
jmp
pop
stc
add
lahf
orl
add
pushl
scas
jnp
mov
arpl
aam
dec
or
scas
in
outsl
gs
push
subb
add
add
in
inc
sar
pop
adc
jne
mov
test
scas
adc
mov
test
push
adc
and
ret
xchg
mov
outsl
mov
push
idiv
fstl
ror
out
mov
shll
add
jge
clc
jmp
test
add
add
add
leave
testl
out
add
add
add
adc
imul
add
dec
cmpsl
leave
notl
add
int3
movsb
je
data16
or
sub
push
aam
loopne
or
dec
int3
add
enter
mov
dec
add
emms
stc
or
decl
xor
clc
int
les
fmulp
add
add
clc
and
sub
stc
jmp
xchg
push
ljmp
or
xchg
rorb
add
div
mov
xor
rorb
call
sub
cmp
fnsave
jo
testl
rclb
lock
pminsw
xchg
cmp
mov
mov
add
add
dec
andb
dec
stc
mov
aad
sbbb
or
cmp
add
or
jmp
lret
jmp
dec
rorl
ret
jmp
xlat
ret
or
jb
std
dec
jl
pop
pop
stc
add
mov
mov
ss
pop
lcall
mov
dec
stc
pop
pusha
lret
jmp
pop
adc
lahf
pop
pop
loopne
mov
jmp
lds
mov
stc
add
jne
and
dec
xlat
dec
pop
cmp
inc
add
addb
xchg
mov
fadds
jg
out
or
add
stc
pop
add
jg
mov
jae
mov
jle
ret
paddsw
negl
add
jp
adc
lods
pop
mov
adc
push
jg
jle
add
int
arpl
xchg
test
pop
add
mov
cld
mov
sub
cmp
or
mov
jg
push
out
jne
jecxz
bound
dec
aam
mov
out
jp
bound
aam
jecxz
lods
xlat
lret
imul
loope
mov
push
inc
ljmp
ror
adc
xchg
out
pop
jbe
test
into
adc
dec
rcll
test
call
dec
popa
ficoml
int3
lahf
outsl
jecxz
adc
test
xor
or
shr
mov
xchg
shrl
dec
fidivs
lock
mov
ljmp
add
aad
lock
add
push
or
xchg
je
jns
lds
jb
mov
sarl
jg
or
xchg
dec
stc
jmp
jnp
jae
fst
pop
cmp
dec
fwait
inc
xor
adc
sbbb
orl
jmp
loopne
stc
iret
sbb
bound
stc
jmp
mov
stc
pop
ja
and
or
xor
xorl
jo
stc
add
dec
mov
pop
or
jmp
subl
sahf
jo
pop
ror
ret
rorl
mov
mov
jmp
ret
testl
cmc
lret
rorl
add
add
jns
ror
hlt
popa
dec
add
cmpsl
mov
lret
movl
in
nop
jp
add
adc
mov
jb
add
rolb
data16
cmc
leave
dec
pop
idiv
cmpsb
add
add
jno
mov
push
iret
mov
add
arpl
jge
outsb
cs
xchg
in
clc
cld
pushl
push
lock
mov
add
adc
ss
mov
jle
add
lods
inc
adc
dec
push
cli
inc
and
mov
dec
mov
add
les
les
mov
les
stc
outsb
lods
adc
fcmovne
test
sarb
xchg
add
out
pop
add
sbb
out
mov
bound
push
mov
arpl
not
ljmp
mov
jmp
sti
sub
sti
and
mov
mov
add
add
jnp
add
scas
test
adc
lret
push
xlat
loopne
xlat
push
ljmp
stc
jmp
ja
bound
cmp
orps
jmp
sti
cmp
fiadds
rclb
out
ret
fisubrl
mov
mov
xchg
add
test
push
dec
stc
rorb
in
dec
rcr
test
ljmp
stc
xor
dec
cli
jmp
lods
stc
fstps
les
add
aaa
ret
add
xor
scas
cwtl
xor
add
jmp
mov
movl
add
mov
xor
mov
lret
mov
mov
dec
pop
cmp
dec
icebp
stos
notl
out
xchg
mov
cmp
adcl
xchg
mov
psubsw
icebp
aam
adc
lods
psubsw
std
add
add
cmp
xchg
cmpsb
cmpsb
adc
adcl
cli
add
dec
sbbb
adc
data16
xchg
mov
into
jg
mov
out
jge
jnp
cmp
sbbb
or
mov
cld
cmp
mov
cmpsb
adc
cmpsb
mov
sbb
push
add
add
out
out
aad
jge
scas
pop
ljmp
jno
cltd
mov
adc
adc
scas
cltd
mov
les
sbb
push
out
mov
popl
adc
jmp
xor
insb
add
ret
lock
cld
xchg
out
sbb
dec
mov
bound
ljmp
pop
inc
xchg
add
mov
shl
ljmp
mov
stc
inc
and
test
mov
add
adc
dec
bound
out
or
lock
out
add
ljmp
xorb
ror
cltd
jmp
dec
stc
jb
pop
jg
stos
pop
stc
jmp
ret
cmp
loop
lret
jge
mov
add
add
dec
andb
fildll
pop
mov
dec
adc
add
push
imul
sub
stc
jmp
pop
dec
stc
xchg
roll
inc
jge
int
ljmp
inc
push
insl
lret
aas
sti
test
add
dec
stc
add
dec
stc
pop
push
ret
jmp
add
add
or
jmp
xchg
cmp
clc
jp
cmp
jmp
mov
out
in
cmp
stc
mov
roll
jno
scas
mov
andl
add
dec
out
lret
scas
mov
dec
stc
add
cmpl
stc
add
dec
out
xor
add
and
call
lret
push
dec
mov
add
testb
mov
add
jbe
int3
stos
sub
int3
jne
push
mov
je
add
hlt
rolb
inc
mov
pop
sub
int3
push
out
mov
div
inc
orl
cltd
mov
movb
dec
fsubrp
adc
cmp
adc
scas
add
scas
clc
mov
movups
add
add
pop
push
test
cmp
dec
scas
in
push
adc
jge
push
cmpsb
cmc
mov
jno
inc
arpl
ss
out
adc
jne
mov
add
add
inc
int3
xchg
mov
inc
int3
subl
pushf
xor
in
mov
call
add
iret
str
add
dec
dec
ret
data16
push
ficoml
lldt
iret
test
add
ja
jnp
push
mov
addr16
inc
jmp
adc
mov
dec
mov
addr16
arpl
in
les
dec
mov
dec
adc
ret
cmp
fs
add
arpl
adc
cld
lret
addps
addr16
or
inc
sbb
scas
aas
or
adc
cmp
jge
aad
push
mov
sbb
je
cmp
fsubrp
je
cld
aaa
lahf
sarb
ret
pop
popa
out
in
sub
mov
int3
ss
dec
outsb
adc
xchg
and
jmp
dec
add
scas
daa
ss
ja
mov
push
xor
test
jl
icebp
jg
mov
xlat
mov
mov
iret
ds
mov
mov
hlt
scas
ror
or
dec
stc
add
dec
cmp
cmp
add
jecxz
iret
iret
and
clc
outsl
add
add
mov
dec
stc
mov
lds
jmp
or
add
push
add
cmpsb
loope
jmp
sub
data16
inc
addl
adc
and
inc
add
add
orl
mov
je
sar
dec
adc
data16
push
pop
cli
add
ss
scas
add
cli
add
push
add
cld
pop
adc
cli
add
mov
jg
je
fs
jne
pop
xchg
or
add
push
adc
stc
idivb
jecxz
cld
pop
dec
add
std
jge
dec
mov
sbb
int3
cli
add
jns
mov
push
stc
cwtl
sub
decl
aas
js
xchg
shl
push
jns
sub
add
adcb
add
lret
aad
add
push
ja
scas
push
add
xchg
flds
dec
out
xchg
repnz
and
ljmp
add
add
add
sbb
scas
or
dec
out
push
pop
push
add
lret
fmul
add
push
std
xchg
cmp
add
push
jl
jae
mov
jl
push
inc
test
cwtl
outsl
jbe
testl
lret
pop
stc
jmp
push
inc
stos
pushf
imulb
ja
lret
imul
lods
mov
leave
int3
pop
add
xor
jecxz
stc
jmp
inc
shlb
push
push
cmp
in
add
out
js
fs
push
jb
popf
push
stc
add
int3
or
dec
jle
mov
arpl
bound
cld
mov
les
jmp
mov
clc
mulb
shl
mov
push
mov
mulb
xor
pop
push
stos
add
add
xor
lds
loop
mov
incb
jmp
dec
stc
dec
addl
ja
repnz
stc
test
cli
add
pop
cmp
pusha
xchg
cld
add
sbb
push
jbe
test
out
add
cmc
jmp
add
test
mov
xchg
mov
testb
jecxz
or
add
add
dec
pushl
test
mov
clc
gs
cltd
mov
testb
and
mov
fbstp
inc
jbe
jne
add
jmp
jae
in
cld
sub
jnp
stos
stos
cmp
daa
loopne
push
negb
pop
ljmp
add
add
jge
add
cmp
dec
push
jp
popa
push
add
or
pop
std
add
add
xchg
les
dec
ficompl
mov
fwait
adc
int3
xchg
movsb
jne
les
add
push
and
push
in
pop
les
mov
jmp
push
add
mov
push
jnp
cmp
or
dec
ljmp
data16
pop
fcmovne
pop
dec
or
add
mov
fiadds
mov
dec
test
insb
jno
ret
pop
ljmp
test
xchg
lret
inc
cmp
pusha
daa
orl
mov
cvtps2pi
clc
cld
pusha
jl
pop
ljmp
mov
push
dec
stc
pop
jmp
xor
xchg
aaa
subl
aaa
xchg
sub
add
sbb
or
jnp
icebp
push
lret
clc
jmp
shlb
add
sbb
jl
testb
loope
jmp
data16
inc
or
dec
stc
push
inc
mov
clc
inc
addr16
repnz
stc
push
inc
and
xor
jb
push
xor
sub
jg
or
jmp
dec
stc
subl
fadd
jecxz
push
add
add
add
pop
mov
and
add
mov
mov
or
repz
pop
or
sbb
lahf
stos
pusha
test
dec
stc
addl
fldl
add
pop
or
and
test
cmc
add
jge
mov
out
jge
cli
out
add
rorb
jle
cmp
ret
loopne
mov
bound
add
add
lea
add
out
add
sub
sti
stc
inc
jp
mov
pop
out
add
sub
pop
sbbb
cmpb
test
cmp
arpl
jl
shl
enter
roll
inc
out
adc
cmpl
mov
js
aaa
imul
add
aam
incl
push
les
mov
jno
loopne
jne
inc
push
add
ret
add
roll
push
add
dec
push
jns
jecxz
add
in
mov
push
xor
aam
jmp
insl
fcmovbe
adc
pop
jp
inc
push
add
cltd
mov
xchg
fadds
cmovs
daa
clc
push
mov
add
jmp
mov
lret
xorl
sbb
lret
fisubrl
xorb
fstpl
pusha
mov
or
ss
shl
mov
cmp
mov
popf
lock
add
jo
sub
lea
pop
xchg
pop
imul
adc
fbld
pop
dec
or
xor
push
add
add
mov
add
cmpsb
dec
mov
mov
repnz
sub
lods
call
push
cmc
push
stos
cwtl
sub
lds
rorb
leave
call
push
cmc
push
sub
sub
lds
push
stc
add
fbstp
add
fbstp
add
add
add
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
stc
add
mov
add
cltd
testl
add
lock
jmp
clc
add
fstps
add
fstps
dec
fadds
add
fdiv
jns
add
imul
sbb
cltd
fdivrs
add
add
mov
stc
add
fdivr
add
fdivr
add
stc
pop
imul
stc
pop
pop
fdivr
aas
pop
fdivr
jg
fdivr
inc
mov
in
jp
insl
and
insb
jnp
std
lahf
add
dec
dec
std
iret
int3
ss
xchg
hlt
clc
test
jmp
test
inc
imul
dec
gs
push
add
dec
dec
inc
xchg
add
stos
xor
xchg
cld
test
jmp
and
add
dec
push
test
jmp
push
and
aam
mov
inc
jae
test
xlat
shrb
aam
adc
or
xchg
sub
inc
stc
jb
sub
jae
sub
adc
push
imul
mov
dec
stc
jmp
sub
pop
loopne
cmc
mov
inc
sub
fsubrs
cld
pop
inc
jmp
dec
stc
in
repz
fs
lea
fs
popa
push
insb
lret
and
lret
stc
jmp
roll
ret
stos
fwait
jg
std
lds
stc
insb
addb
cmp
or
sub
mov
out
jl
add
cmpsl
adc
push
xchg
sub
and
stc
add
scas
cwtl
jmp
push
sti
insl
xlat
cltd
xchg
add
int3
clc
insl
jmp
add
inc
jmp
movsl
mov
jmp
scas
pop
shll
imul
cmp
loope
fs
or
add
add
mov
inc
jg
shll
out
or
sbb
xor
stos
add
jge
add
sti
das
je
dec
jno
lahf
lea
data16
mov
into
dec
or
fisttpl
je
repz
jae
and
mov
jge
adc
out
mov
rol
inc
push
fsts
or
dec
push
js
loope
or
ss
stos
mov
out
xchg
and
sub
push
jle
aaa
adc
pop
dec
jle
dec
cmp
int
fiaddl
dec
subb
pop
shlb
jmp
adc
jmp
mov
insb
xchg
pusha
xor
xchg
cli
cmp
or
xchg
add
mov
cmp
and
inc
or
mov
add
and
dec
and
mov
lds
add
shlb
jge
arpl
aam
and
das
push
stc
mov
int3
push
sbb
sbb
iret
insb
icebp
jae
adc
mov
clc
popa
les
cmp
rcrb
add
push
add
jl
push
dec
stc
addl
inc
cmp
insb
add
mov
fs
es
inc
les
mov
dec
stc
inc
add
out
ror
add
arpl
jno
add
push
arpl
std
pmaxub
jae
sub
add
ja
pop
dec
stc
add
or
je
pop
stc
insl
lds
add
add
add
mov
outsl
mov
hlt
inc
fmuls
sti
icebp
cmpsb
cmp
popf
sub
cmp
and
mov
outsl
adc
push
dec
sub
jno
mov
push
and
sbbl
cmp
icebp
sub
xor
aad
dec
sub
sarl
xor
leave
dec
sub
adc
leave
repz
push
imul
fimuls
enter
leave
fimull
outsb
mov
out
out
das
adcl
loop
jns
mov
adc
repz
out
jne
bound
out
mov
and
or
add
cmp
fmull
ljmp
rolb
add
push
mov
movsl
xor
or
das
sub
add
adc
add
les
inc
out
push
cld
decl
pop
or
or
mov
pop
jb
and
inc
mov
int
fisttps
clc
sub
ljmp
xor
das
pop
gs
and
xchg
insb
or
add
leave
sub
jns
xlat
idivl
aas
test
mov
or
mov
add
dec
fbld
sub
int
pop
ljmp
clc
or
int3
add
loopne
xor
push
push
cmpsb
pop
ja
sub
inc
mov
and
mov
cmc
jae
xlat
stc
arpl
cltd
jg
add
push
clc
jno
add
add
pushf
arpl
sub
jae
sub
shrl
push
iret
mov
stc
push
push
int3
sbbl
sar
push
xor
add
mov
push
push
dec
inc
mov
repnz
dec
push
ja
lret
inc
adc
jle
dec
stc
add
add
cmp
std
jge
xchg
or
std
jno
cmp
add
jbe
orl
add
cmp
add
insb
std
jge
lret
or
add
pusha
loop
mul
add
jb
jbe
or
sbbb
mov
orl
into
je
pop
stc
insl
leave
jne
add
inc
inc
outsl
xor
inc
lds
add
cmp
pushf
mov
add
jns
out
mov
cmp
jbe
cld
insb
and
cld
lock
ds
sub
pushf
mov
out
cmp
addr16
sub
pushf
mov
and
jmp
cli
lock
and
repz
mov
and
adcb
loop
adc
clc
mov
or
add
dec
add
mov
dec
jnp
mov
sbb
inc
pop
add
dec
jnp
test
and
cmpsb
cli
cld
decl
cld
test
mov
xchg
pop
mov
fldlg2
in
jecxz
pusha
fsubl
mov
les
push
imul
std
xor
cmp
xchg
sub
mov
add
add
clc
ss
sti
lock
sti
push
test
scas
and
push
test
popa
mov
inc
stc
jo
jmp
enter
xchg
dec
stc
jmp
dec
lcall
sbb
mov
in
ss
add
ss
cmp
mov
cmc
push
or
das
xor
aas
cmc
bound
sbb
add
sbb
jmp
mov
jp
pop
orb
jb
jmp
sub
stos
aaa
mov
cmp
jg
jns
rcl
cmpsb
fsts
paddw
sarb
add
loopne
push
cmc
mov
xchg
mov
je
pop
mov
mov
je
test
and
sbb
sbbb
add
mov
inc
sbb
mov
ret
mov
sub
mov
stc
nop
inc
push
enter
push
add
je
std
inc
inc
outsl
in
mov
jb
js
push
cmp
std
shr
mov
add
clc
jge
push
int
andb
jge
scas
dec
jne
xor
add
mov
mov
add
rorl
add
out
shll
jne
sti
xchg
add
ds
iret
cmc
bnd
sbb
pushl
push
and
test
repnz
adc
mov
push
or
mov
adc
add
divl
xchg
cmpsl
dec
mov
pop
jg
dec
faddl
add
add
test
dec
pusha
add
fistpll
ljmp
pop
ljmp
pop
into
out
add
or
es
adc
mov
mov
push
push
lret
clc
cmp
or
push
lret
aad
push
rcl
scas
pop
xorps
add
jge
pusha
mov
mov
push
je
mov
or
add
nop
xchg
sub
add
add
adc
add
jp
push
rcll
xchg
shll
les
in
add
adc
cmpb
ljmp
stc
call
jp
pop
popa
and
and
add
mov
jl
sbbb
test
add
jmp
jp
push
jno
movsb
jge
jle
add
pop
dec
popa
into
cwtl
jg
aaa
enter
mov
movsl
ljmp
divb
test
add
dec
clc
jmp
pop
jle
jmp
push
cmp
int
mov
jle
shrl
add
push
and
cmp
stc
dec
pop
and
hlt
icebp
scas
jmp
mov
ljmp
aam
add
add
add
xchg
imul
repz
pusha
xchg
testb
or
inc
aad
clc
jmp
push
ss
lods
inc
je
je
stc
add
data16
clc
lea
jle
xchg
lret
das
jne
ret
push
clc
jecxz
stc
mov
add
jno
je
jns
add
mov
add
add
inc
mov
sbb
add
mov
inc
call
out
bound
cmp
jae
sub
or
add
outsb
or
mov
ret
cmp
mov
lcall
out
jae
sub
xlat
dec
repnz
jo
adc
push
jnp
arpl
mov
les
dec
aas
fdivl
cmp
mov
xor
fs
insl
inc
movsl
fcoms
dec
lea
fs
add
pop
ret
sahf
add
mov
imul
fsubrl
mov
cld
mov
xor
sbb
clc
dec
test
jle
insb
add
dec
mov
iret
or
stc
and
ljmp
jb
jns
in
jb
enter
push
jae
dec
xlat
lods
push
mov
inc
sti
pusha
sbb
pusha
mov
ss
mov
jmp
aas
sbb
repz
jo
repnz
push
mov
lret
cltd
xchg
int
js
xor
xchg
xlat
push
jb
push
shlb
inc
jp
add
or
push
jb
js
jno
xor
hlt
add
mov
add
pop
pop
jle
mov
jp
xchg
push
jp
jge
jb
decb
add
jp
mov
hlt
jmp
inc
jle
int
test
es
add
mov
pop
bswap
inc
clc
jmp
mov
lds
push
adc
push
xor
xchg
adc
inc
jmp
dec
stc
push
jb
sbb
jo
sbb
cmpsl
sbb
add
mov
add
ret
inc
clc
pop
pop
loopne
sub
mov
jg
cs
rcrb
mov
mov
clc
add
jbe
pop
pop
mov
sbb
jbe
int3
test
add
std
mov
push
dec
jge
push
dec
and
fcomps
lods
jge
int
jge
insl
pushf
and
jge
and
pop
test
movsb
add
hlt
and
xlat
and
cmp
mov
sub
and
mov
insl
dec
push
mov
dec
cmp
ja
sbb
add
dec
stc
push
ljmp
dec
pop
dec
stc
dec
xchg
cmp
mov
cmp
push
add
dec
cmp
sub
ds
jp
ds
push
add
dec
fwait
dec
stc
or
cmp
dec
push
add
dec
jnp
stc
call
mov
add
dec
stc
pop
dec
movb
cmp
dec
js
jmp
dec
add
add
stc
add
stc
jmp
dec
xchg
inc
inc
stc
mov
cmp
jmp
dec
inc
push
psubw
psubw
add
fimuls
inc
lods
inc
cmp
inc
js
jmp
dec
es
daa
xchg
pusha
stc
sbb
dec
stc
sahf
dec
push
inc
mov
xchg
cmp
jmp
dec
out
sti
iret
add
add
stc
add
or
jmp
dec
stc
add
dec
stc
add
mov
lahf
add
adc
dec
fsts
jmp
dec
mov
adc
dec
fstl
jmp
dec
jno
jmp
dec
mov
adc
dec
add
jmp
dec
mov
jmp
dec
rcll
jmp
dec
sbb
jmp
fstl
jmp
dec
in
jmp
dec
popf
adc
dec
mov
add
cld
cmp
idiv
add
out
hlt
adc
cld
clc
adc
cld
cld
adc
cld
sub
mov
sbb
mov
loopne
cmpsb
cld
aam
cmpsb
cld
fcoms
jbe
int3
adc
fcoml
data16
adc
data16
mov
adc
rclb
cld
mov
add
add
mov
adc
cld
mov
adc
cld
adcb
cld
fcoml
ss
mov
adc
cld
cwtl
adc
sti
mov
idiv
pushf
adc
add
pop
push
add
ds
add
aas
push
add
aas
push
add
aas
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
ds
add
aas
push
add
ds
add
ds
add
add
add
add
pop
push
add
pop
push
add
pop
push
add
aas
push
add
aas
push
add
aas
push
add
aas
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
aas
push
add
aas
push
add
aas
push
add
aas
push
add
pop
stc
jmp
add
jmp
jmp
add
jmp
jmp
add
jmp
dec
jmp
jmp
add
out
jmp
add
call
jmp
add
out
add
jmp
add
out
jmp
add
out
jmp
add
in
jmp
add
in
add
dec
mov
jmp
dec
xchg
or
add
add
jmp
dec
pop
or
dec
popa
or
dec
gs
dec
imul
jmp
dec
jne
jmp
dec
mov
pop
jmp
dec
pop
adc
dec
sub
or
dec
test
pop
jmp
dec
mov
jmp
dec
std
pop
jmp
dec
add
or
add
add
jmp
ss
dec
adc
stc
xor
es
and
idiv
sub
idiv
sbb
out
and
out
adc
idiv
sbb
idiv
or
out
adc
out
add
mov
mov
mov
cld
push
cmpsb
clc
add
cmpsb
clc
hlt
push
mov
clc
push
mov
in
push
cmpsb
clc
cmp
cmpsb
clc
push
adc
xor
jbe
dec
adc
loopne
data16
aam
add
add
fmuls
jbe
int3
push
data16
int3
push
data16
add
ss
enter
mov
push
dec
push
add
pop
push
add
push
push
add
dec
push
add
inc
push
add
pop
push
add
push
push
add
dec
push
add
inc
push
add
pop
push
add
push
push
add
dec
push
add
inc
push
add
pop
push
add
push
push
add
dec
push
add
inc
push
add
pop
push
add
add
add
add
dec
push
add
inc
push
add
pop
push
add
push
push
add
dec
push
add
inc
push
add
pop
push
add
push
push
add
dec
push
add
inc
push
add
pop
push
add
push
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
ljmp
inc
jmp
add
add
inc
jmp
add
loop
add
jecxz
add
loope
add
loope
add
jmp
add
fucomip
add
in
jmp
add
jmp
add
jmp
add
jmp
jmp
dec
aaa
or
dec
xor
jmp
dec
jge
jmp
dec
test
jmp
mov
push
jmp
dec
pop
psubsw
jmp
dec
or
adc
dec
imul
jmp
dec
jne
jmp
dec
mov
adc
dec
ss
dec
sbb
jmp
dec
mov
add
jmp
dec
mov
dec
or
add
add
std
inc
or
es
cmp
es
lcall
std
cmp
es
and
idiv
sbb
out
adc
idiv
or
out
adcl
hlt
or
cld
clc
or
cld
in
or
cld
lock
cld
in
mov
call
or
cld
sub
jbe
sbb
add
add
and
data16
adc
data16
cmp
dec
and
push
and
dec
and
inc
and
pop
and
push
and
dec
and
inc
and
pop
and
push
and
dec
and
inc
and
pop
and
push
and
dec
and
inc
and
pop
and
push
and
dec
and
inc
and
bound
add
push
and
and
inc
and
pop
and
push
and
dec
and
inc
and
pop
and
push
and
dec
stc
jmp
add
add
add
add
ljmp
add
ljmp
add
ljmp
add
ljmp
add
ljmp
ljmp
add
ljmp
add
ljmp
add
add
add
add
add
add
add
dec
push
or
dec
push
or
dec
dec
or
dec
dec
or
dec
inc
or
dec
inc
or
dec
cmp
or
dec
jne
jmp
dec
insl
or
add
add
jmp
dec
popa
or
dec
pop
or
dec
pop
or
dec
adcl
dec
or
jmp
dec
mov
dec
test
dec
orl
dec
jns
jmp
dec
sbb
jmp
dec
test
or
dec
mov
pop
or
mov
jbe
movsb
or
jg
data16
orl
ja
add
add
jnp
data16
cwtl
or
mov
ss
nop
or
stc
test
es
mov
es
jl
ss
orb
stc
je
es
js
es
insb
or
clc
and
idiv
adc
out
sbb
out
or
idiv
adc
idiv
add
out
or
out
cld
or
clc
hlt
or
clc
in
or
and
add
add
add
inc
and
push
and
push
and
inc
and
inc
and
push
and
inc
and
inc
and
pop
and
push
and
inc
and
inc
and
push
and
inc
and
and
push
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
add
add
add
push
and
push
and
inc
and
inc
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
inc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
dec
xor
jmp
dec
sub
jmp
dec
and
jmp
dec
sbb
jmp
dec
push
or
dec
dec
or
dec
dec
or
dec
inc
or
dec
lcall
add
add
jmp
dec
jno
jmp
dec
imul
jmp
dec
pop
or
dec
xor
or
dec
xchg
or
dec
lea
jmp
dec
test
jmp
mov
jl
mov
orb
cmc
je
cmpsb
cmc
js
mov
insb
or
cmc
or
cmc
or
pusha
or
add
data16
push
or
pop
or
dec
or
push
or
inc
or
dec
or
std
cmp
ss
inc
or
std
xor
es
cmp
ss
sub
ss
lcall
std
xchg
or
cld
xchg
idiv
das
or
cld
jle
out
orb
cld
jbe
idiv
pop
or
add
inc
and
push
and
push
and
inc
and
add
add
bound
pop
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
add
add
add
add
add
add
add
add
jmp
dec
jnp
jmp
dec
mov
jmp
dec
stos
or
dec
lahf
or
dec
mov
or
dec
fwait
or
dec
iret
or
dec
rorl
jmp
dec
lret
or
dec
mov
or
dec
mov
jmp
dec
out
or
add
add
jmp
dec
jmp
jmp
dec
jecxz
jmp
dec
fisttpl
jmp
dec
adc
jmp
dec
or
add
stc
push
or
stc
or
out
decb
idiv
add
idiv
testb
stc
cli
or
stc
out
or
stc
out
cmpsb
stc
ljmp
stc
loop
mov
or
add
cmpsb
stc
into
or
rorb
jbe
or
lret
stc
mov
or
mov
data16
mov
or
stc
mov
ss
cmpsb
or
stc
stos
or
stc
sahf
or
stc
mov
or
stc
lcall
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
add
add
add
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
push
and
push
and
inc
and
inc
and
push
and
push
stc
jmp
add
add
add
add
pop
add
add
ljmp
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
jmp
dec
push
or
dec
mov
jmp
dec
orl
dec
xchg
jmp
dec
jg
jmp
dec
ja
jmp
dec
scas
or
dec
mov
or
dec
fwait
or
dec
lahf
or
dec
xchg
or
dec
xchg
or
dec
lret
or
dec
iret
or
dec
ret
or
dec
or
dec
mov
add
jmp
dec
mov
jmp
dec
out
or
dec
jecxz
jmp
mulb
or
imulb
or
negb
or
mulb
or
notb
or
negb
or
cmc
push
or
cmc
adc
out
push
or
cmc
sub
div
sbb
or
cmc
testb
cmc
cli
pop
mov
out
pop
mov
repnz
cmpsb
cmc
out
cmpsb
cmc
ljmp
fiadds
mov
loop
cmpsb
cmc
pop
cmpsb
cmc
fiaddl
jbe
into
pop
jbe
rolb
data16
movb
cmc
lret
cmc
mov
pop
data16
mov
data16
mov
mov
adc
push
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
push
adc
add
add
add
push
adc
dec
adc
dec
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
dec
adc
adc
ljmp
add
add
ljmp
add
add
ljmp
ljmp
add
add
ljmp
add
add
ljmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
cld
add
dec
jp
call
add
add
call
dec
outsl
call
dec
push
call
dec
pop
call
dec
xchg
call
dec
call
dec
ja
call
dec
jg
call
dec
cmpsl
call
dec
scas
call
dec
xchg
call
dec
lahf
call
dec
call
ret
call
dec
lret
jmp
inc
push
jbe
std
add
add
cli
cmc
add
stc
add
cli
cmp
ss
cs
es
xor
es
es
ss
sub
ss
push
push
es
and
es
push
push
idiv
sbb
idiv
push
push
out
adc
out
push
push
idiv
or
idiv
incb
out
testb
add
mov
out
add
cmpsb
stc
out
mov
ljmp
stc
loop
cmpsb
stc
add
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
add
add
add
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
adc
push
adc
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jge
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
cld
jmp
add
cld
jmp
jmp
dec
pop
std
call
dec
aas
std
call
dec
inc
std
call
xor
call
dec
cmp
call
dec
arpl
call
dec
imul
dec
addr16
call
dec
dec
std
call
dec
push
std
call
dec
jg
call
dec
xchg
call
dec
outsl
std
call
dec
ja
call
dec
lahf
cld
call
dec
cmpsl
cld
pushl
add
mov
push
cmpsb
negb
cmpsb
mulb
jbe
push
add
negb
data16
notb
jbe
inc
add
testb
idivb
add
testb
divb
add
idivb
add
imulb
add
divb
add
mulb
add
imulb
add
negb
add
mulb
add
cmc
push
add
cmc
sbb
cmc
push
add
cmc
adc
cmc
push
add
cmc
or
add
out
incb
out
add
cmc
testb
cmc
cli
add
add
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
add
add
add
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
adc
dec
stc
jmp
add
stc
jmp
add
jmp
add
stc
jmp
add
stc
jmp
add
mov
mov
add
add
leave
add
rorl
add
jge
pusha
cmpsb
fidivrs
mov
test
shrl
sti
aad
add
stos
push
dec
imul
movsb
out
mov
adc
daa
mov
mov
jmp
dec
stc
add
cld
pop
push
mov
sbb
inc
mov
clc
jmp
or
xor
insl
in
mov
add
push
jbe
out
adc
out
cld
add
dec
stc
test
fcompl
push
cmc
idivl
lea
and
call
xor
mov
clc
and
popf
cmp
or
push
add
pop
pop
push
sbbl
add
in
jns
or
repz
ret
add
stc
jne
pushf
push
mov
dec
pop
or
jns
sbb
stc
mov
js
and
inc
push
mov
mov
fwait
clc
adc
add
jns
mov
repnz
add
dec
jmp
insb
aam
decl
adc
jmp
mov
jae
push
sbb
jmp
mov
add
inc
jge
adc
jnp
xchg
mov
push
push
addl
adc
jb
xchg
mov
inc
push
cmpl
aam
add
sbb
nop
cmpsb
sbb
adc
inc
jge
add
std
xor
add
push
repz
mov
testl
mov
in
cmp
inc
stc
mov
inc
jge
add
stos
aas
les
repz
sbb
jg
xor
jb
cli
push
incl
cli
jmp
adc
clc
jmp
xor
js
out
aaa
scas
leave
imul
out
sahf
lret
adc
xchg
mov
shlb
insb
or
clc
jmp
xor
js
add
sbbl
and
mov
or
add
data16
leave
cmp
sub
dec
adc
xchg
lret
ja
out
cmp
imul
call
mov
adc
fildll
push
insl
out
push
test
dec
stc
add
or
std
imul
sahf
jne
add
add
add
out
subl
or
int3
lahf
add
stc
call
sub
add
dec
pop
subl
pop
adcl
xlat
mov
xchg
hlt
adc
into
xor
icebp
fdivs
add
addb
pop
cmc
add
movsl
je
add
add
inc
addb
jnp
add
xor
mov
jge
es
into
cmp
sbb
adc
ret
into
push
sti
push
imul
adc
ret
cmc
jns
inc
jnp
call
ret
in
negb
or
jne
push
lock
jmp
add
pop
jbe
decl
jle
cmp
popl
daa
lret
adc
and
add
add
add
int3
mov
aas
orb
jge
push
in
dec
mov
inc
sub
cmp
jae
cmp
mov
adc
mov
and
mov
pop
les
mov
stc
mov
and
int3
dec
lea
push
call
int3
dec
fldl
mov
mov
inc
add
add
call
ss
push
sbb
ds
mov
mov
push
imul
test
xchg
negb
stos
mov
sbb
mov
mov
scas
pop
and
pop
stc
or
sarb
push
cmp
stos
adcl
cwtl
dec
and
push
xchg
stos
mov
add
or
call
loop
cmp
sbb
mov
aas
pop
rclb
add
out
add
push
test
iret
testl
push
pop
cmp
jmp
and
in
pop
adc
dec
das
adc
push
jmp
sbb
cmp
les
out
add
xchg
cmp
and
clc
push
add
out
jmp
notb
cmp
clc
xchg
mov
subl
ret
subl
hlt
pop
dec
xchg
jne
push
xchg
incb
adc
add
mov
inc
and
loop
sti
imul
stc
cmpl
jl
and
cli
add
cwtl
cwtl
add
out
xchg
incb
add
or
mov
jnp
divl
jl
in
test
pop
clc
push
sbb
add
hlt
mov
cmp
divb
jl
movsl
add
add
dec
idiv
jmp
outsl
or
mov
divb
sub
pop
adc
add
and
jnp
and
stc
xor
cmpl
add
aaa
sub
stc
sbb
cmpl
xchg
or
jnp
sub
stc
es
add
cmpl
sarl
pop
or
jnp
and
stc
mov
pop
adc
decb
inc
addl
jns
stc
ja
sbb
andb
out
clc
pop
sbb
cmp
cmp
movsb
loopne
add
fstpt
sub
repnz
jmp
push
es
jmp
dec
and
push
adc
ljmp
adc
xorb
dec
and
xchg
nop
dec
and
adc
xchg
cltd
dec
and
mov
stos
or
call
out
aaa
sbbb
add
jmp
nop
dec
and
add
enter
mov
adc
sub
nop
push
jmp
add
mov
adc
push
std
add
push
adc
push
jmp
ss
adc
push
jmp
sub
adc
and
cmc
out
push
test
insl
out
and
cmc
into
xor
add
mov
cli
cli
mov
xchg
jne
dec
lea
push
adc
sahf
or
notb
in
add
cmp
call
in
adc
mov
call
ret
in
adc
jnp
call
ret
mov
adc
sti
or
stc
xor
divb
fidivrs
add
cmc
je
fisubs
add
mov
orl
jne
fistps
jge
std
insb
das
push
xchg
hlt
incl
mov
jae
sahf
xor
add
jae
mov
jl
or
mov
cmpsl
call
and
mov
or
jge
sub
cmp
stc
int3
sub
sub
dec
mov
repnz
add
ret
and
xor
sbb
fwait
or
sbb
push
std
or
jbe
add
jmp
jge
sub
jb
lahf
mov
push
lods
repz
sub
stc
int3
les
std
cmp
and
ret
push
sbb
mov
jge
inc
stc
in
dec
and
pop
xchg
adc
mov
jbe
xchg
stos
test
ljmp
and
xchg
dec
test
jo
push
sbb
imul
mov
repz
adc
test
sub
adc
sub
adc
sbb
test
test
repnz
out
pop
out
loopne
in
sub
mov
add
mov
stc
roll
or
jne
add
add
or
sahf
int3
xchg
or
dec
jl
jmp
gs
stos
int3
xchg
push
jmp
jmp
or
clc
push
testb
iret
xchg
add
dec
and
pusha
adc
push
jmp
aas
xor
test
iret
sti
push
inc
dec
test
lret
sti
push
pop
dec
test
insl
fsubs
clc
out
inc
mov
add
add
xor
loope
clc
lea
adc
sahf
idiv
stc
jp
or
repnz
push
jp
push
mov
add
mov
stc
dec
or
stc
ret
std
cmp
add
sbb
inc
xchg
stc
mov
push
in
stc
jmp
jo
add
loopne
mov
add
je
loop
cli
jns
mov
sti
sbb
je
jecxz
testl
jne
sub
jae
dec
mov
jne
and
jae
dec
scas
icebp
stc
js
or
jg
call
dec
arpl
push
mov
add
add
dec
push
stc
mov
negb
or
inc
sub
mov
dec
arpl
inc
sub
mov
add
loop
loop
jb
test
cmc
add
add
inc
test
test
mov
rorb
rcll
inc
stc
xchg
inc
push
inc
insl
mov
mul
cmp
or
add
stc
mov
fwait
mov
push
stc
xchg
or
hlt
add
stos
inc
sub
dec
sub
mov
stos
adc
fisubrl
loop
test
sub
andl
lods
test
xlat
scas
test
xlat
cmpsb
test
xlat
mov
push
test
sub
popf
add
movsl
loopne
inc
loop
dec
jnp
add
xor
add
daa
mov
cwtl
mov
add
repz
or
lret
stc
mov
jnp
add
addl
es
add
add
test
add
das
test
cmc
test
in
sub
mov
fucomp
mov
aad
mov
int
mov
les
add
push
jbe
lret
or
add
leave
cmp
push
xorl
call
xor
ds
and
stc
call
sub
add
call
add
add
cld
push
mov
inc
adc
push
call
ret
sub
jnp
add
repz
shl
out
and
inc
push
xorb
or
out
out
clc
shl
mov
sub
mov
js
mov
clc
pushl
jne
push
rol
sub
add
testl
mov
cmc
cmp
testl
divb
jne
sbb
jnp
cmpsl
clc
decl
ds
les
decb
push
aas
rorl
jne
sub
pop
inc
dec
in
add
xchg
adc
lahf
xchg
dec
int
jl
and
jp
push
cmp
ret
mov
xchg
add
int3
xchg
jb
lahf
or
jecxz
sbb
push
stos
adc
js
or
ret
sbb
aaa
lret
adc
dec
mov
push
inc
xchg
adc
xchg
dec
and
or
or
test
bnd
out
add
out
imul
test
sbb
and
pop
or
pop
clc
sbb
cmp
out
test
ljmp
or
fnstsw
jmp
into
jge
xchg
and
or
add
shll
nop
push
fidivrs
jge
add
add
xchg
push
jl
cli
mov
or
mov
call
sub
push
pop
jle
repz
mov
add
xchg
mov
add
add
adc
pop
lahf
or
xor
push
mov
dec
add
int
push
out
mov
stc
ja
xor
add
stos
sahf
dec
add
dec
test
or
inc
test
mov
andl
and
push
je
int
add
inc
and
jno
stc
ret
mov
or
jnp
or
std
call
xor
stc
ret
pop
xor
inc
sbb
xor
ret
push
add
sti
add
es
cmp
jecxz
hlt
mov
jne
nop
jp
jle
icebp
fnstcw
add
mov
fdivr
jg
cmc
fmull
sbb
jae
fsubrp
repnz
jmp
idiv
mov
adc
inc
inc
jl
and
add
xor
roll
add
dec
adc
insb
cmovle
add
xchg
daa
sbb
stc
adc
jl
push
js
sti
shl
mov
inc
inc
add
mov
sarb
dec
mov
scas
pop
xor
mov
mov
cmpsl
movsb
push
stc
test
xor
dec
push
stc
mov
in
mov
inc
add
add
mov
std
lea
adc
aam
loope
mov
stc
jmp
sbb
or
mov
ficoms
push
push
aaa
inc
fs
add
sarl
aaa
adc
shlb
imul
jp
jge
push
dec
out
cmp
testl
add
and
dec
mov
and
mov
mov
call
add
call
lahf
addb
lea
adc
into
mov
jmp
inc
mov
inc
test
loope
call
sub
or
aam
adc
cmp
add
push
out
insl
fxch
or
mov
xchg
icebp
fldl2e
call
sub
or
xchg
add
add
test
icebp
fdivr
call
sub
repz
inc
jle
add
and
in
stos
ja
lds
dec
stc
add
dec
stc
add
fwait
add
popf
or
clc
jmp
dec
stc
add
add
clc
incl
idiv
data16
add
data16
add
loopne
cmc
pushl
or
pushl
clc
add
add
add
clc
add
and
cmc
jmp
or
jmp
jg
push
testl
add
xchg
cmc
pushl
test
push
testl
add
cmc
call
or
incb
add
cmpsb
testl
decl
pop
clc
ljmp
testl
add
cmc
decl
repz
jbe
push
add
dec
adc
dec
ret
push
mov
cmp
adc
dec
adc
dec
movsb
pop
std
sub
jne
sbb
add
dec
adc
dec
mov
add
jl
lock
dec
adc
dec
cwtl
pusha
std
fsubrs
out
call
push
add
dec
adc
dec
inc
pop
std
mov
in
ljmp
adc
add
add
add
dec
hlt
std
mov
in
icebp
addb
add
jmp
add
jmp
add
test
insl
dec
add
inc
add
cmp
mulb
add
push
and
cmpsb
sbb
int3
adc
scas
or
jo
add
ds
repnz
push
loop
fisubs
add
data16
add
add
lretw
addr16
addr16
add
stos
add
mov
add
cmpsl
icebp
add
mov
add
mov
out
clc
pop
cmc
add
adc
add
std
out
clc
pop
out
clc
dec
mov
testl
stos
testl
mov
idivl
add
add
mull
notl
dec
stc
add
insl
testl
insl
testl
xor
testl
cs
cmc
ljmp
xchg
cmc
pushl
xchg
cmc
inc
xchg
cmc
call
xchg
cmc
jmp
add
or
cmc
jmp
test
pushl
cmc
incl
add
xor
cmc
decl
ds
fiadds
decl
test
pushl
cmc
incl
xchg
lcall
xchg
call
cmc
call
test
jmp
mov
call
cmc
pushl
cmc
decl
jb
test
jb
mov
xchg
jno
nop
mov
jb
sbbb
js
jb
jo
jb
push
adc
pop
sbb
push
sub
jae
inc
aad
std
cmp
std
xor
jae
sub
jae
and
jb
adc
std
or
jb
add
jb
lock
call
sub
std
fadds
std
rclb
std
enter
sar
jo
imul
add
xchg
jo
lods
jo
dec
jo
and
pop
cmp
pop
jp
icebp
pop
jb
fwait
pop
push
sbb
sbb
je
lods
jae
mov
inc
decb
je
in
xor
push
jne
incb
and
sbb
pop
jne
jg
or
inc
jne
outsl
jne
std
imul
cltd
je
add
ljmp
je
std
mov
sar
add
inc
cld
mul
cmp
neg
inc
cld
not
cmp
idivl
sbb
testl
add
divl
stc
sti
notl
add
testl
sti
test
loop
test
ret
jmp
notl
idivl
mov
add
cltd
testl
cmp
notl
jns
imull
pop
testl
lock
movsb
xor
test
cmc
ljmp
imul
mov
imul
incl
cmc
call
cmc
cmp
jmp
imul
dec
insb
cmc
incl
add
js
cmc
call
imul
les
pushl
clc
add
adcb
out
push
cmc
fcoms
pushl
clc
add
sub
add
out
testl
and
add
les
decl
movsb
cld
loopne
movsb
cld
fcoms
add
dec
sbb
cld
enter
rorb
cld
mov
cmp
mov
cld
cwtl
jns
cld
add
add
mov
mov
cld
jo
mov
cld
pusha
and
mov
cld
dec
xchg
cld
cmp
mov
cld
and
add
iret
adc
dec
xchg
mov
add
pushf
cld
clc
stc
xchg
jmp
mov
lds
add
add
cli
in
cltd
ret
cli
stc
cltd
mov
cli
mov
cltd
mov
cli
xchg
cltd
xchg
cli
popa
cltd
mov
arpl
jnp
adc
imul
pushf
arpl
movsl
pushf
pop
cli
jnp
push
cli
dec
pushf
dec
cli
xlat
lcall
pop
fwait
xor
mov
lcall
imul
cli
add
cld
divl
cld
imull
cld
negl
cld
testl
jmp
negl
negl
lret
inc
cld
mul
mov
cld
mul
in
notl
cld
test
sar
imull
ret
jmp
cld
neg
mov
cmc
idivl
add
add
cmc
idivl
shl
mov
cmc
negl
dec
xchg
hlt
lcall
hlt
lcall
hlt
in
xchg
hlt
jmp
xchg
hlt
incl
hlt
call
hlt
cmp
hlt
lcall
xchg
hlt
lcall
xchg
hlt
lcall
xchg
hlt
ljmp
hlt
incl
hlt
call
hlt
cmp
hlt
lcall
hlt
push
xchg
hlt
clc
xchg
hlt
incl
add
push
xchg
hlt
clc
xchg
hlt
incl
hlt
ljmp
xchg
hlt
jmp
xchg
hlt
lcall
xchg
hlt
lcall
xchg
hlt
ljmp
xchg
hlt
mov
xchg
hlt
decl
cltd
cld
sbb
lcall
ds
cld
call
loope
add
test
rcrb
test
sarb
cld
mov
lahf
cld
add
add
mov
lahf
cld
nop
push
mov
cld
cmpb
cld
js
test
cld
push
cmc
lahf
cld
pop
loope
cld
push
mov
cld
inc
dec
mov
cld
xor
lahf
mov
dec
stc
adc
add
in
dec
jns
add
faddl
dec
jns
add
cltd
add
stos
mov
testb
imulb
shl
in
dec
jns
mov
dec
jns
mov
stos
imul
add
hlt
add
dec
add
jns
add
fildl
dec
jns
add
int
dec
jns
mov
arpl
stc
mov
dec
jns
add
fiaddl
dec
jns
push
push
stc
adc
stc
sub
stc
add
hlt
negl
add
lock
testl
hlt
neg
stos
hlt
not
mov
testl
mov
not
stos
hlt
imull
stos
hlt
negl
ljmp
jns
hlt
mull
hlt
mull
hlt
idivl
hlt
divl
hlt
testl
mov
mull
mov
idivl
mov
imul
add
add
add
cwtl
hlt
call
cwtl
hlt
push
cwtl
hlt
jl
hlt
call
cwtl
hlt
ljmp
cwtl
hlt
jmp
stc
add
ret
cld
inc
jns
insb
fs
ficompl
fisubl
imul
cli
inc
gs
push
push
fstpt
imul
insb
popa
cmp
outsb
cmpsb
clc
jno
jns
insl
push
das
insb
insl
adc
insl
or
lret
add
push
jo
adc
jb
imul
pop
pop
insb
and
pusha
imul
mov
push
out
clc
jo
mov
sti
push
arpl
pusha
je
int3
pusha
push
loop
fimuls
imul
mov
addr16
rcrl
jg
addr16
add
push
add
dec
scas
pusha
pop
add
add
jge
outsb
es
pop
jbe,pn
arpl
imul
ljmp
inc
outsb
divb
push
arpl
xor
add
in
pop
push
popa
or
add
add
push
gs
and
inc
cmc
addr16
inc
int3
insl
lods
push
into
jbe
stc
cmp
mov
sbbl
insl
shll
add
cwtl
gs
pusha
xchg
insl
shrl
mov
jbe
inc
mov
gs
adc
lea
xchg
cmp
add
cld
jne
and
je
arpl
add
mull
jbe
pop
push
imul
dec
jbe
clc
cld
pop
add
push
aas
inc
notl
jbe
xor
add
insb
pop
das
in
pop
ss
dec
add
mov
je
lea
or
add
mov
pop
mov
jmp
jns
inc
enter
fildl
add
addr16
inc
lds
stc
add
push
inc
push
mov
jae
or
pop
je
cmp
or
pop
je
and
or
add
mov
add
gs
add
add
adc
push
sub
je
cmp
push
cmc
popa
add
gs
aaa
jo
inc
dec
push
dec
pop
fs
pop
addr16
cmc
inc
outsl
add
push
fs
cmc
inc
jne
addr16
add
outsl
movsb
push
pop
outsb
aad
outsl
ret
bound
mov
test
icebp
dec
insl
push
fists
inc
leave
pop
imul
add
fs
add
add
pop
dec
push
dec
loop
into
dec
sbb
call
bound
jmp
pusha
pop
dec
fwait
add
inc
insl
aas
repz
add
add
mov
sub
inc
mov
push
outsb
mov
sbb
lahf
loop
lret
pusha
pop
lahf
sahf
pusha
insl
adc
ja
and
jae
jge
pop
je
loop
jmp
add
add
pop
insb
jg
pop
je
andl
popf
add
jb
and
push
dec
lahf
add
push
jb
pop
dec
dec
dec
stc
in
add
jno
gs
push
and
addr16
inc
data16
jb,pn
pop
pop
jae
clc
lret
pusha
mov
pop
es
xor
add
stc
push
mov
lods
pop
fidivrl
pop
lds
pop
mov
add
pusha
mov
add
pop
lcall
stc
mov
pusha
and
pusha
sbb
movsl
xor
bound
dec
call
inc
dec
fldl
sub
inc
negl
push
sbb
dec
in
fs
icebp
jp,pn
in
bound
clc
clc
add
dec
inc
push
test
push
mov
xlat
add
nop
gs
add
pop
push
test
stc
add
inc
arpl
lcall
lock
cmp
cmpb
fwait
pop
gs
nop
push
and
cmpsl
xor
push
push
lret
stc
inc
add
bound
rorb
push
cmc
out
add
add
add
push
fs
stc
stc
add
dec
insl
dec
pop
push
pop
insb
dec
inc
imul
insb
popa
push
push
ss
dec
add
inc
gs
ss
and
imul
or
jae
dec
insb
dec
rorb
lret
gs
pop
push
stos
jo
add
in
inc
gs
jge
imul
add
cmp
popa
add
sbb
xchg
push
xor
jns
sbb
mov
push
testb
out
inc
dec
outsb
ljmp
je
cmp
add
bound
xchg
std
inc
mov
dec
addr16
dec
addr16
dec
js
mov
push
mov
outsl
jae
out
cmp
stos
ret
pop
add
decl
mov
jb
xchg
push
outsb
jb
outsl
imul
pop
add
incb
cmpsb
dec
addr16
push
push
clc
movsl
push
or
stc
mov
sbb
dec
sub
inc
and
pop
icebp
gs
imul
negl
imul
pop
cmp
pusha
in
inc
ljmp
dec
sbb
mov
imull
pop
add
bound
add
scas
inc
ljmp
dec
fcompl
into
push
push
gs
add
stc
sahf
push
push
jae
outsb
pop
pop
xchg
pop
inc
bound
aaa
dec
add
sub
mov
gs
cltd
and
mov
pop
push
jmp
sub
push
add
inc
pop
inc
imul
jns
jecxz,pn
sbb
add
fstps
inc
loop
add
mov
pop
fidivrl
push
ret
dec
cmp
push
cltd
dec
jae
ja
add
jno
pop
sbb
aas
pop
roll
hlt
xor
gs
insb
push
push
gs
and
xlat
gs
add
xor
inc
xor
imul
add
add
cmc
push
add
jno
pop
push
jb
adc
pusha
insb
adc
rolb
push
insb
popa
es
pusha
and
arpl
pop
fs
cmc
xor
gs
gs
pop
jno
pop
pop
bound
std
call
insb
dec
pop
pop
je
and
add
decl
ret
outsb
imul
outsb
jb
pop
add
std
inc
jb
imul
push
arpl
mov
adc
arpl
rolb
lcall
pop
outsb
or
pop
and
push
push
cs
push
dec
pop
popa
ljmp
je
dec
jae
out
cmp
jae
jecxz
std
insb
dec
and
fwait
icebp
jae
mov
imul
out
dec
jb
add
dec
sbb
inc
mov
add
test
cmpsb
pop
mov
sti
sahf
pop
pop
leave
pop
jl
pop
adcb
cli
mov
push
sub
jle
cmp
add
jne
cmp
jl
sub
jb
mov
pop
and
gs
cmp
negb
insb
dec
stc
testl
in
dec
cmp
add
jae
pop
xor
add
sti
push
imul
add
pop
incb
push
imulb
insl
ljmp
insl
dec
add
push
addr16
popa
insl
jmp
insl
push
mov
pop
ds
jmp
pop
pop
bound
aaa
popa
push
jmp
daa
insl
inc
jl
push
pop
sbb
jnp
inc
pop
mov
push
dec
gs
or
gs
add
add
clc
add
adc
inc
dec
push
add
pop
insl
sbb
dec
fs
push
add
xor
sbb
mov
pop
add
mov
inc
sbb
push
push
outsl
insl
gs
pop
insl
or
add
cmp
insb
sbb
insl
je
inc
push
jne
pop
inc
sahf
dec
add
jmp
dec
jo
inc
inc
jbe
inc
insl
push
add
add
pop
insl
inc
sbb
shrb
jb
pop
fs
and
mov
dec
gs
pusha
outsb
pop
popa
fs
push
popa
or
lahf
add
pop
inc
arpl
gs
addr16
icebp
push
push
popf
or
pushf
fbstp
cs
stc
jb
fwait
or
xchg
dec
mov
jo
cmp
aaa
arpl
dec
add
add
dec
dec
add
scas
pop
outsb
imul
push
sbbb
je
add
add
mov
cmp
aas
arpl
pop
imul
jo
dec
push
add
outsl
pop
ljmp
push
sti
push
inc
arpl
or
loop
std
dec
push
pop
insl
pushf
stc
add
popf
pop
push
jno
stc
test
pop
mov
or
add
lods
dec
cld
pop
jp
sti
jbe
stc
in
xchg
imul
pusha
ja
ljmp
cmp
outsl
and
pop
pop
pop
stos
pop
gs
test
push
xchg
pop
ljmp
dec
push
sbb
jge
clc
push
test
addr16
pop
sti
insl
dec
popa
adc
dec
pop
add
pop
in
das
add
stc
es
fstpt
add
aaa
add
push
dec
inc
rcll
dec
sar
ss
adc
push
jp
mov
add
scas
dec
jae
jno
je
inc
push
data16
subb
lock
push
js
aad
push
push
lods
fs
add
js
xor
sbb
jmp
add
push
je
sub
add
dec
icebp
add
insb
outsb
dec
pop
cmp
push
push
stc
add
push
and
add
imul
inc
addr16
data16
add
insl
inc
arpl
outsl
push
dec
push
mulb
dec
push
inc
imul
push
loope
cmp
push
push
add
mov
push
push
imul
testb
dec
jo
add
add
inc
insb
dec
rcll
imul
cmc
xor
outsl
flds
push
cmpsb
cmc
cmp
imul
add
dec
arpl
repnz
out
dec
pop
push
fnsave
pop
push
dec
pop
add
mov
xor
add
and
dec
data16
mov
push
addr16
pop
jno
in
pop
js
add
dec
adc
add
jae
pop
push
scas
jo
jge
pop
push
dec
int
cmp
data16
imul
add
movsb
push
popa
andl
xchg
dec
pop
sbb
push
add
std
dec
xor
pop
sbb
cmp
jmp
outsb
ljmp
popa
in
sub
inc
pop
jmp
cmp
cli
cmp
add
xor
packsswb
add
js
xchg
add
push
push
popa
mov
notb
stc
pusha
add
push
or
xchg
xor
pop
push
push
lret
dec
dec
stc
jb
xchg
push
rorb
push
pop
dec
mov
add
fwait
pusha
xor
jb
xor
mov
pusha
xor
sub
ljmp
fs
sbb
pop
inc
add
add
pop
pop
fdivrl
pusha
inc
adc
add
push
cmp
or
push
lods
push
bound
scas
xor
add
sub
sbb
js
push
push
pushf
stc
add
dec
insl
add
sbb
enter
loope
stc
add
inc
jae
jp
gs
les
into
das
stc
add
dec
cmp
or
dec
pop
jmp
incb
cmpsb
das
gs
add
pop
insl
push
push
ds
je
dec
arpl
cmc
or
and
bound
inc
pop
imul
sti
dec
jo
inc
inc
outsb
xchg
inc
mov
je
add
mov
pop
addr16
and
push
jb
pop
cmp
jnp
cmp
pop
cmp
imul
stc
addb
ds
inc
pop
push
jne
add
add
add
je
inc
gs
inc
cmc
stc
inc
add
bound
dec
fs
xchg
dec
pop
sbb
ss
rolb
pop
dec
xchg
push
je
insl
jo
out
jbe
push
dec
push
dec
jo
xor
std
ss
add
add
ljmp
popa
stos
adc
fisttpl
dec
fs
icebp
pop
push
rolb
sub
push
pop
add
add
loopne
add
add
dec
insb
ret
push
arpl
add
mov
dec
pop
pop
scas
push
je
cmpsb
push
add
add
cmpsb
inc
addr16
test
mov
pop
adc
fwait
jo
push
test
dec
jge
cld
fs
add
inc
push
jb
dec
dec
push
testb
dec
stc
outsl
add
add
add
dec
jae,pt
sub
ljmp
push
pop
pop
lea
jo
dec
add
stc
mov
nop
dec
or
inc
ljmp
inc
push
jle
shlb
ljmp
dec
shrb
dec
add
adc
cmp
gs
lea
push
addl
dec
push
testl
adc
addr16
push
pop
addr16
push
pop
add
testb
out
je
in
push
jmp
mov
dec
cmp
push
fs
jns
bound
dec
xchg
add
jp
push
ja
pop
call
stc
add
push
dec
push
pop
add
dec
fs
add
add
push
insl
dec
ret
push
insb
inc
leave
inc
imul
add
push
insl
dec
shrl
push
add
data16
and
inc
sbb
jae
push
insb
gs
in
xor
dec
push
popa
test
adcb
jg
arpl
cmc
icebp
add
pop
arpl
push
adc
gs
inc
inc
js
cmc
push
add
add
xor
dec
add
dec
add
push
dec
lods
pop
je
xchg
add
pushf
inc
arpl
movsl
add
dec
xchg
pop
push
cltd
dec
arpl
mov
cmp
add
dec
jnp
arpl
mov
hlt
arpl
sbb
add
xchg
pop
je
cmp
push
add
decb
inc
arpl
sub
je,pn
push
pusha
add
add
add
stos
testb
in
dec
je
std
dec
inc
dec
add
das
push
mov
push
add
lret
pop
mov
push
jle
mov
data16
sub
ljmp
addr16
xor
dec
mov
push
inc
add
testl
push
ljmp
dec
stc
xor
gs
push
in
cmp
push
ljmp
add
test
dec
aaa
insl
mov
pop
push
xchg
dec
or
push
sub
pop
out
push
bound
xchg
cmp
jns
push
jmp
push
pusha
addr16
dec
push
mov
dec
push
sub
add
pop
addr16
aaa
data16
sub
jle
inc
insl
mov
pusha
push
stos
push
pop
bound
cmp
pop
hlt
dec
push
mov
out
insl
sub
dec
insl
inc
dec
incb
and
dec
push
inc
mov
pusha
push
xchg
push
je,pt
mov
add
test
inc
gs
punpcklbw
data16
add
add
std
inc
add
add
cmp
insl
outsl
add
adc
jmp
pop
data16
imul
mov
jmp
fs
outsl
mov
cli
pop
add
sub
stc
xchg
add
pop
insl
push
jmp
outsl
stc
or
cld
add
pusha
outsb
jp
pusha
outsb
mov
cmc
cld
inc
jno
pop
gs
dec
pop
insl
add
add
add
add
add
popa
je
mov
dec
inc
jae
pop
add
std
inc
mov
push
dec
add
cld
inc
ss
push
pop
inc
ret
imul
push
pop
xor
add
xchg
es
cmp
insb
sti
push
popa
ljmpw
adc
adc
repz
dec
inc
add
add
add
push
pusha
dec
mov
pop
arpl
stc
add
pop
jle
movsl
add
adc
add
imul
cmp
sub
push
pop
cmp
push
pop
fsubl
fs
xor
stc
xor
jp
mov
cmp
mov
bound
sub
xchg
add
stc
stos
push
add
inc
add
add
pop
mov
inc
mov
clc
das
add
inc
popa
push
fstpt
pop
pop
pop
pop
insb
dec
stc
mov
addb
ret
inc
add
popa
cmp
sahf
dec
inc
jno
movsl
sub
test
je
aas
bound
stc
add
push
cmp
cmp
jle
inc
fcoml
dec
jp
dec
aad
sahf
sbb
addr16
xor
pop
enter
sbb
add
pop
pop
pop
mov
add
fwait
sti
dec
jp
cmc
inc
addr16
sub
scas
out
dec
dec
jle
push
addr16
push
push
inc
in
add
adc
add
sub
subl
inc
or
inc
push
add
mov
bound
sub
pop
popa
fs
pop
pop
insb
add
add
pop
push
add
divl
fs
sub
mov
pop
imul
add
xor
push
xchg
sub
out
or
enter
mov
push
add
divb
inc
roll
incl
add
pushf
std
xor
dec
dec
cmp
inc
arpl
loopne
mov
pop
dec
ja
adc
arpl
add
pushf
or
imul
adc
jnp
imul
sub
xor
pop
je
std
push
pop
test
addr16
add
push
je
test
inc
outsb
es
xor
dec
cmp
jo
jp
arpl
popf
pop
push
dec
mov
dec
bnd
push
jl
arpl
pushf
pop
push
add
add
sbb
or
jecxz
pop
pop
xchg
push
push
add
cli
xor
inc
push
arpl
push
dec
dec
mov
push
pop
xchg
push
sbb
bound
push
jbe
ljmp
sub
fs
add
xor
rcll
pusha
fdivrl
jo
mov
pop
cmp
leave
data16
fwait
pop
adc
push
push
mov
add
add
sub
stos
push
add
push
call
pop
insl
push
call
pop
je
cli
push
jno
lock
dec
dec
sbb
fs
popf
pop
insl
push
pop
je
popf
pop
jno
test
push
jmp
scas
inc
push
or
dec
jae
jg
cmp
add
xor
xchg
sbb
push
add
dec
jae
mov
les
add
jge
jae
sbb
push
aad
or
fwait
das
pop
inc
mov
adc
sub
dec
aas
pop
mov
pop
fwait
and
bound
loop
fs
into
push
add
loopne
inc
gs
or
push
gs
cmp
ss
add
imul
mov
sti
aaa
inc
dec
xor
dec
and
popa
add
ss
jno
add
add
jno
dec
push
insl
pop
cmc
imul
out
pusha
outsb
fisubrl
add
cli
push
popa
cli
bound
or
inc
push
mov
aas
add
push
insl
push
clc
pop
gs
fsqrt
jge
push
insl
push
lock
inc
out
pusha
dec
pushl
dec
imul
out
inc
insb
inc
fcompl
insb
outsb
ljmp
add
add
dec
push
std
dec
scas
or
dec
movsb
sub
mov
aas
std
dec
scas
in
fs
mov
std
xor
add
mov
lock
fs
clc
xor
ret
and
dec
add
aas
outsb
and
dec
mov
push
test
and
bound
stc
lcall
pop
xchg
imul
add
add
pop
mov
pop
test
clc
fs
push
outsb
imul
dec
fstl
arpl
dec
inc
sub
pushf
inc
inc
das
mov
cmp
dec
cmp
add
dec
and
stc
sbb
xor
xor
stc
and
xchg
inc
cld
xor
mov
dec
stc
mov
sbb
pop
xor
pop
sbb
add
sub
ljmp
xor
pop
mov
inc
push
jmp
adc
jl
aas
dec
sahf
dec
or
cltd
in
inc
imul
ljmp
cmp
push
ds
xchg
pop
cmp
push
dec
ds
sbb
insl
push
gs
mov
push
pop
or
add
push
mov
sbb
cmp
xchg
int
pop
push
enter
jmp
sub
pop
pop
dec
jg
fs
mov
loopnew
add
aad
inc
dec
mov
sub
push
adc
in
pop
insl
roll
push
testw
xor
pop
insb
mov
addb
and
pusha
inc
je
pusha
pop
insl
add
add
dec
inc
pop
push
push
popa
cmp
adc
xor
push
insl
gs
push
data16
push
push
gs
add
push
pusha
je
push
imul
popa
cmp
ss
inc
daa
loopne
or
aaa
dec
push
pushf
dec
outsb
clc
jl
je
js
popa
dec
imul
push
xchg
dec
imul
add
adc
push
jns,pn
popa
insb
dec
repz
cmp
xor
bound
inc
pop
lods
xor
cmpsb
add
pop
lahf
loopne
xor
dec
arpl
pop
cmp
jnp
pop
insb
jb
add
std
dec
jb
pop
pop
pop
stc
scas
xor
dec
stc
inc
add
push
mov
cmp
xor
dec
stc
sti
add
mov
sbb
push
stc
xor
push
push
xchg
inc
in
inc
andl
or
push
jle
jecxz
sahf
inc
dec
stc
cli
add
dec
ljmp
cmp
cmp
stc
sub
pop
mov
sub
insb
pop
push
pop
jbe
ljmp
dec
orps
add
sti
add
insb
dec
pop
and
add
add
pop
aad
pop
fldl
dec
add
stc
push
imul
sub
nop
icebp
dec
jno
sbb
fwait
out
jns
dec
cmp
test
push
add
sbb
push
cmp
push
dec
lods
dec
add
pop
jae
mov
pop
inc
jge
addr16
js
add
pop
pop
sbb
add
add
sbb
ss
inc
add
push
pop
je
xor
push
and
add
push
push
divl
jae
nop
das
inc
gs
push
push
je
sti
and
leave
or
inc
nop
and
das
jb
aam
inc
jbe
and
or
mov
pop
addr16
dec
outsl
lds
addr16
sti
push
push
ja
push
lcall
cmp
cmp
gs
inc
jbe
daa
insl
add
or
pop
adc
pop
add
stc
std
push
inc
dec
or
imul
je
cmc
push
je
int3
push
outsb
jb
add
dec
adc
inc
xchg
push
cmp
sub
cmp
je
subb
imul
dec
jl
dec
mulb
arpl
add
loop
dec
imul
mov
push
cmp
pushf
and
outsb
stos
rolb
sub
adc
mov
adc
fwait
sub
lods
xor
pushf
sbb
cmp
push
insb
stc
mov
pop
mov
jo
or
cmp
push
arpl
pop
jb
out
data16
push
sub
into
add
mov
push
add
add
dec
mov
sub
scas
xor
push
mov
add
dec
mov
in
pushf
pop
sti
pop
mov
pop
jbe
dec
stc
stos
xor
sub
pop
mov
dec
dec
push
mov
push
mov
cmp
add
pop
add
jno
insl
sub
dec
inc
jmp
xchg
dec
pop
sbb
add
js
jae
sbb
add
push
jmp
and
fistpl
pop
insl
mov
add
xchg
add
repnz
insl
lcall
push
mov
cld
xor
add
pop
js
pop
je
or
xor
fwait
add
inc
sbbl
and
sub
add
add
clc
dec
add
insl
jo
pop
imul
jne
sub
inc
out
xchg
add
pop
insl
gs
fs
sub
pop
add
insl
movsb
and
sub
cmp
outsb
xchg
sub
std
aas
outsb
loop
outsb
xorl
jne
sub
pusha
outsl
enter
add
aas
outsb
ret
outsb
shll
inc
gs
push
add
add
and
inc
mull
jg
insl
gs
pop
fs
cmovg
aaa
xor
adc
pop
dec
or
lahf
fbld
jae
popa
outsl
jp
dec
je
sbb
add
std
inc
arpl
dec
dec
push
pusha
dec
jb
push
arpl
js
rolb
lods
dec
mov
xor
pusha
je
stos
pop
je
jg
pop
sub
add
add
dec
daa
add
icebp
arpl
jmp
je
ja
jno
pop
push
inc
pop
addr16
pop
insb
ljmp
je
stc
pop
pop
lods
dec
cmp
nop
pop
sub
pop
sbb
add
dec
cs
sbbb
pop
cmp
inc
push
xor
dec
add
push
push
pop
jns
std
dec
xchg
pop
divb
pop
out
dec
bound
or
push
or
add
sub
ljmp
sub
push
push
lret
pop
sub
rorb
inc
mov
sub
stc
mov
pop
repz
cld
pop
fwait
dec
pop
pop
mov
inc
jnp
dec
stc
mov
add
and
add
ja
inc
xor
push
xor
scas
dec
gs
js
dec
cmp
inc
dec
lahf
cmp
cmpsb
stc
add
add
push
xor
mov
sub
cmp
js
add
pop
std
jns
pop
sti
adcl
mov
sub
inc
adc
clc
clc
add
cli
push
push
mov
add
push
pop
test
push
jno
dec
sar
inc
pop
insb
jae
xor
add
xor
es
hlt
add
add
jno
je
fwait
pop
pop
insb
cmc
jno
xchg
add
stc
imul
push
mov
xchg
add
push
add
dec
stc
pop
ja
sub
mov
pop
imul
das
arpl
add
das
sub
add
enter
mov
add
pop
jae
pop
pop
les
add
add
dec
xchg
roll
sub
push
inc
push
push
outsb
add
dec
outsl
push
je
xor
imul
arpl
dec
mov
push
and
imul
push
imul
add
loopne
imul
std
pop
imul
cld
inc
dec
out
pop
insl
xor
cld
inc
push
xchg
add
add
movsb
pusha
add
std
pop
sbbl
add
clc
xchg
dec
or
out
sub
inc
dec
stc
loope
add
xor
stc
sub
push
push
inc
mov
inc
cmp
pop
cmp
add
arpl
ds
imul
insb
dec
push
pop
dec
and
inc
add
add
add
mov
gs
or
dec
add
pop
aas
inc
rcll
rcll
push
faddl
pop
clc
cmpsb
pop
pop
pop
lds
push
shlb
push
add
and
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
cmpsb
clc
add
jbe
add
jbe
add
data16
add
data16
add
jbe
add
test
aaa
mov
data16
add
add
add
clc
add
mov
aaa
add
int
add
test
ss
add
ss
add
es
add
es
add
idivl
incl
clc
add
in
testl
add
repz
jbe
add
addr16
add
mov
testl
add
testl
std
pop
rolb
add
add
dec
ror
add
add
psrld
add
add
dec
shlb
add
add
dec
xchg
xchg
or
rolb
add
add
dec
pusha
mov
add
add
dec
hlt
mov
add
add
iret
sbb
dec
rolb
add
dec
adcb
rolb
add
mov
rolb
add
mov
dec
cmpxchg
add
out
loop
and
xor
cmp
adc
sbb
adc
mov
adc
jae
cmp
adc
or
test
xchg
push
ret
add
and
adcl
xor
call
and
cli
aad
pop
movsb
xchg
aaa
xchg
lcall
xchg
mov
add
add
or
cs
xchg
jb
pushf
enter
imul
cmp
divl
nop
mov
in
call
insl
mov
or
lahf
pop
je
jno,pn
into
push
mov
push
fmull
imul
xchg
lock
xor
inc
fucomip
popa
sbb
jge
bound
fcoml
add
add
int
xchg
mov
xchg
enter
addr16
shll
insl
jmp
sbb
les
or
iret
add
sbb
sub
outsb
movsb
jge
aas
jne
sub
pop
dec
pop
mov
or
test
and
aas
cmpsb
and
mov
sbb
jne
mov
xchg
xchg
shl
aas
je
cli
into
jg
ja
and
dec
loope
sarl
xchg
roll
int3
adc
xchg
test
loopne
scas
xchg
incl
push
xchg
xchg
aas
or
jnp
push
add
mov
jp
jo
cmpsb
sub
cmpsl
jne
lret
inc
add
add
clc
mov
jne
imul
sub
loop
sub
dec
jno
push
mov
xor
and
test
ja
inc
xchg
out
rcl
je
push
inc
stos
insb
out
pop
pop
cld
inc
data16
lea
fisubrl
xor
stc
lret
cmpsl
xor
add
xchg
mov
inc
popa
std
jmp
sub
or
cmp
add
stos
in
clc
pop
dec
or
fcoml
push
pop
sub
ret
stos
mov
push
cmpsb
enter
and
mov
dec
in
sbb
xchg
lds
push
lock
daa
rcll
std
or
sbb
ljmp
stc
jmp
inc
stc
icebp
inc
add
add
stc
xlat
add
add
dec
stc
add
xchg
cmp
dec
mov
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
push
cmp
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
cmc
add
and
add
cmc
add
and
add
cmc
add
hlt
add
hlt
add
hlt
add
iret
hlt
add
hlt
add
into
hlt
add
into
hlt
add
push
jp
add
aaa
add
jp
add
jp
add
jns
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
aaa
add
jp
add
add
push
ja
add
ja
add
ja
add
ja
add
jbe
add
ja
add
jbe
add
jbe
add
ja
add
jge
add
jge
add
jl
dec
mov
push
jge
dec
cmp
dec
inc
jge
dec
scas
cmpl
jl
dec
jle
inc
dec
jb
inc
dec
dec
cmp
dec
inc
cmp
dec
sub
add
add
cmp
add
dec
jb
inc
dec
pop
cmp
adc
dec
add
dec
scas
cmp
idivb
inc
dec
cmp
inc
dec
or
inc
dec
push
cmp
cmp
push
cmp
mov
inc
dec
mov
inc
dec
nop
cmp
je
inc
dec
enter
stc
fnstsw
stc
mov
cmp
stc
inc
cmp
stc
and
stc
lds
stc
stc
cmp
stc
test
psubw
aaa
psubw
psubw
add
jmp
add
jmp
add
call
add
jmp
add
outsb
lods
and
jmp
add
jmp
scas
cmp
jmp
jmp
add
add
repnz
dec
stc
add
dec
stc
add
dec
stc
add
test
add
dec
stc
add
dec
stc
add
dec
stc
add
repnz
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
repnz
dec
stc
add
dec
stc
add
dec
stc
add
repnz
add
add
jmp
dec
stc
add
imul
add
es
add
es
add
ss
add
adc
add
std
add
es
add
idiv
add
pop
arpl
add
cld
add
out
add
idiv
add
sbb
cmp
out
add
out
add
mov
add
out
pushl
add
cld
add
mov
add
mov
cmp
cmpsb
cld
add
add
add
cld
add
lcall
add
add
jbe
add
repnz
add
add
data16
add
dec
mov
add
add
add
dec
mov
add
dec
mov
add
dec
mov
or
dec
mov
add
dec
mov
or
dec
mov
add
add
add
add
dec
dec
or
dec
mov
add
dec
mov
cmp
dec
mov
add
dec
push
cmp
dec
mov
add
dec
push
or
dec
stc
jmp
add
jmp
or
jmp
add
jmp
or
jmp
add
jmp
dec
stc
cmp
cmp
jmp
add
jmp
or
stc
jmp
add
jmp
add
dec
stc
jmp
add
imul
dec
stc
jmp
add
dec
stc
jmp
jmp
push
out
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
in
add
dec
stc
add
dec
stc
add
dec
stc
add
adc
add
dec
stc
add
dec
stc
add
dec
stc
add
or
stc
add
dec
stc
add
dec
stc
add
mov
add
dec
stc
add
dec
stc
add
dec
stc
add
mov
add
dec
stc
add
dec
stc
add
dec
stc
add
jmp
add
add
data16
add
jbe
add
jbe
add
cli
mov
add
ss
add
ss
add
jmp
stc
add
ss
add
ss
add
ja
xor
add
clc
add
idiv
add
mov
clc
add
idiv
add
idiv
add
add
add
clc
add
mov
add
mov
add
mov
clc
add
add
add
clc
add
imul
add
add
dec
mov
cmpb
mov
add
dec
adc
cmp
dec
mov
add
dec
in
cmpb
mov
add
dec
or
add
add
dec
mov
lods
ds
mov
add
add
add
add
dec
cmpsl
scas
ds
mov
add
dec
mov
leave
ds
mov
add
dec
mov
cltd
ds
stc
jmp
add
jmp
cwtl
xor
jmp
add
jmp
adc
jmp
add
jmp
mov
jmp
add
jmp
dec
stc
or
dec
stc
jmp
movsb
cmp
inc
movsb
xor
jmp
jae
nop
xor
das
stc
or
das
psubw
das
psubw
das
psubw
sbb
pusha
cmp
mov
cmp
mov
cmp
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
mov
add
mov
add
cmpsb
cmc
add
cmpsb
cmc
add
add
add
add
jbe
add
data16
add
data16
add
jbe
add
jbe
add
data16
add
data16
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
es
add
es
add
idiv
add
idiv
add
out
add
out
add
idiv
add
idiv
add
out
add
out
add
mov
add
add
add
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
add
dec
xchg
adc
dec
mov
add
clc
outsl
pop
cli
clc
add
jmp
push
mov
in
inc
cmp
arpl
add
aaa
xchg
inc
add
cld
decl
in
push
and
jmp
adc
in
arpl
in
imul
lock
in
lock
gs
in
lock
xor
lock
test
insb
in
lock
push
lock
out
lock
out
lock
or
lock
popf
lock
in
lock
in
lock
in
icebp
add
add
in
icebp
in
in
icebp
fsub
xor
icebp
cld
in
icebp
in
in
lock
in
lock
out
in
pop
out
in
sub
or
in
mov
add
mov
sub
sbb
mov
pop
ss
mov
ss
mov
lcall
push
aaa
in
or
in
add
add
aaa
adc
imul
cmp
xor
cmp
and
aaa
push
xor
cmp
and
aaa
or
repnz
imul
pushf
stc
add
dec
stc
add
repnz
sbb
inc
lods
sub
ret
xor
dec
xor
lods
imul
lods
jnp
add
add
lods
mov
add
stos
xor
mov
xor
add
sti
xor
or
subb
xor
cmp
repnz
dec
xor
test
xor
cmpsl
imul
cmpsl
jnp
mov
mov
subb
xor
mov
xor
cmpsl
dec
mov
jmp
into
repnz
push
xchg
icebp
or
add
sbb
div
sub
icebp
cmp
repnz
jge
repnz
jge
repnz
jnp
push
repnz
repnz
pop
ss
cmp
icebp
lret
cmp
ss
dec
repnz
sbb
into
lock
icebp
sub
cmp
dec
jl
lock
jl
lock
pop
push
icebp
mov
fwait
add
add
stos
cmp
lock
add
lods
notl
out
mul
out
out
inc
in
int
xor
add
out
test
and
lock
add
lock
gs
in
dec
lock
inc
lock
sub
and
mov
imul
out
div
out
mul
out
test
add
lock
testl
test
mov
out
movsb
in
gs
in
dec
lock
add
dec
sub
lcall
lods
call
mov
sub
lock
add
dec
stc
add
mov
mov
mov
scas
sub
mov
push
test
stos
xor
jge
jle
jmp
add
add
add
outsb
das
jge
pop
das
add
je
cmp
imul
divb
gs
sub
ss
sub
pop
daa
lret
ss
aaa
imul
mov
jge
inc
pop
aas
push
idiv
out
clc
inc
cld
add
lock
xor
xor
fbstp
loop
xor
lods
loop
mov
xor
add
shrb
push
xor
rcll
xor
jbe
pop
cmp
xchg
mov
inc
xchg
leave
cmp
xchg
pop
cmp
mov
xchg
mov
cmp
mov
cmp
cmp
dec
in
fs
loop
cmpsb
fistps
push
data16
inc
out
call
sub
xlat
fbld
mov
shll
imul
das
sbb
ljmp
lock
loopne
xchg
jae
mov
add
dec
cwtl
repz
imul
imul
stc
pop
xchg
repnz
add
push
ds
repz
bnd
sub
mov
sbb
repnz
push
jecxz
idivb
in
or
jge
pop
cmc
cmc
ljmp
in
out
insl
out
out
mov
sbb
ds
icebp
test
data16
and
call
add
insb
loope
in
push
loope
in
adc
in
xchg
loope
in
enter
out
cmp
int3
jecxz
jmp
jecxz
out
fisttpll
call
push
fbstp
out
fimuls
ret
js
imul
call
add
ljmp
adc
fdiv
xchg
add
cmp
shrl
and
pop
xchg
sub
pop
sub
inc
push
push
das
xchg
xchg
sub
jmp
mov
cmp
and
mov
jecxz
cmp
mov
cmp
movsl
push
cmp
add
adc
cmp
add
add
pop
les
aaa
push
imul
dec
stc
add
pop
ss
pop
xchg
xor
arpl
xor
mov
movsl
mov
nop
movsl
add
aas
test
xor
cmpsl
leave
xor
or
iret
stos
sahf
xor
xor
lea
xor
test
aaa
aaa
outsb
lea
cmp
popl
add
add
xchg
lds
or
add
out
movsb
divb
cmpsl
stos
rdtsc
insl
stos
inc
xor
xorb
stos
mov
xor
test
dec
xor
mov
repz
sbb
shl
sarb
in
out
std
jge
lock
pop
lret
pop
pusha
lock
pop
dec
lock
pop
js
jg
add
cmp
repnz
icebp
sarl
aad
sbb
lock
sbb
out
and
out
sbbl
fiaddl
repz
bound
out
popa
in
pop
daa
in
inc
outsl
in
inc
mov
in
test
stc
xchg
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loop
ljmp
ljmp
mov
mov
imul
loope
ljmp
ret
call
scas
fisttps
call
mov
dec
loope
loop
fwait
jmp
add
stc
sub
push
ljmp
vsqrtpd
jmp
scas
aad
jmp
hlt
aad
out
dec
call
add
add
add
cmp
mov
cmp
ljmp
jo
cmp
inc
xor
fildll
sti
xor
mov
sub
imul
dec
lcall
sbb
xor
mov
xor
sbb
xor
add
xor
stc
or
jno
test
sbb
add
push
add
add
movsb
sub
addr16
das
dec
jne
cmp
stos
mov
in
xchg
mov
jns
in
cmp
dec
cmp
mov
addr16
mov
mov
insb
cwtl
sarb
dec
xchg
cmp
jecxz
mov
cltd
xchg
lcall
xchg
mov
aas
xchg
sarl
pop
xchg
aad
dec
xchg
ljmp
in
aas
mulb
add
in
cld
das
mov
adc
push
lds
ret
lds
push
lds
or
lds
fstpl
int3
pop
movsl
rorb
ds
and
mov
das
push
fcom
cmp
leave
shl
push
xor
aam
jle
iret
mov
repz
xlat
jge
iret
idivb
int3
push
pop
push
int3
pop
add
add
lcall
int
cmp
int
cmp
iret
cmc
cmp
iret
push
and
xchg
outsb
into
ret
sbb
subl
fisubrl
flds
pusha
stc
sub
enter
fcmovbe
lcall
roll
xchg
rcr
faddl
in
fmul
aam
fsubrl
add
or
loop
add
add
sbb
loope
xlat
add
loope
xlat
mov
loope
xlat
cmp
dec
fadd
loopne
cwtl
jmp
add
rcl
cltd
leave
cmp
inc
int3
inc
aam
int3
adc
push
int3
lret
shr
lret
rcl
out
fcmovnbe
fmulp
rcl
lret
jmp
dec
int
xlat
inc
int
fistpl
xchg
sub
xchg
sub
lahf
add
add
cs
mov
mov
jmp
dec
stc
add
dec
cs
je
cmp
sub
cmp
adc
xor
lods
das
jno
jmp
dec
stc
add
pop
xor
cmp
cs
adc
cmp
jns
jmp
aam
xlat
repz
cmpsb
sub
mov
cmp
mov
cmp
mov
arpl
idiv
cmpsb
lret
jp
add
jge
sbb
xor
lods
inc
xor
pop
xor
xor
lods
lcall
lods
mov
jo
leave
xor
cmpsl
lea
int
mov
xor
test
xor
stos
sbb
scas
xor
add
add
lods
xor
scas
in
out
gs
fldt
daa
ss
aam
popa
cmpl
sbb
cs
fstpt
inc
aad
push
aaa
aad
push
pop
aam
inc
adc
inc
outsl
aam
aaa
ret
fidivrl
es
stos
fisubrl
cltd
fiaddl
xchg
fstps
test
fisubrl
add
add
flds
push
imul
mov
fisttpl
inc
hlt
fldlg2
inc
mov
pop
cmp
loopne
xor
pop
and
data16
lret
fidivs
rcl
fstpl
frstor
repnz
and
adc
or
das
roll
sbb
shll
rcl
popa
fnsave
add
mov
shll
pop
fstpl
dec
fstl
cli
fcompl
or
outsl
aam
fsubrl
rcrl
fcompl
aam
and
xchg
pop
add
stc
shll
leave
test
sarl
shlw
mov
out
fidivs
sub
xor
pusha
xor
lcall
xchg
cltd
int
dec
add
add
pusha
xor
js
sub
lahf
pop
sub
lahf
mov
mov
xchg
lahf
fsubrl
fnstcw
cs
mov
das
push
sbb
cmp
and
cmp
or
cmp
stc
xor
add
xor
divl
ss
divb
cmp
int
insl
add
add
scas
loopne
add
push
aas
mov
idiv
cmpsb
out
decl
std
add
mov
lods
and
jl
and
and
jge
cld
lods
mov
xor
stos
in
xor
or
xchg
xchg
ss
fidivrl
sbb
mov
imul
cmp
xchg
mov
add
add
cmpsb
jb,pt
sarl
dec
out
fyl2xp1
inc
mov
fildl
call
outsb
int3
mov
sbb
pop
into
scas
jl
int
subl
in
bound
sbb
shll
pop
ret
rclb
sarl
and
stos
inc
inc
rcrl
sbb
test
gs
daa
imul
out
add
add
sbb
adc
test
jle
xor
xchg
jne
mov
arpl
push
pop
stc
mov
fmuls
iret
mov
iret
fidivl
iret
repz
dec
fnstenv
rclb
fcomps
mov
mov
jmp
add
jmp
aam
leave
iret
roll
add
adc
push
aam
leave
and
in
enter
enter
int3
out
rol
aaa
iret
mov
lds
cmp
in
pop
in
push
mov
into
clc
lds
xor
jb
sbb
sbb
cmpsb
hlt
cwtl
cmp
and
cmp
and
in
cmp
add
xor
clc
or
dec
stc
sbb
pop
mov
add
cltd
jle
mov
mov
ss
enter
adc
sbb
cmp
insb
aaa
push
cwtl
ret
aaa
mov
mov
jmp
push
stc
add
andl
jnp
xor
and
sbb
xor
sbb
stos
movsl
xor
stos
ret
stos
iret
xor
mov
ja
fwait
test
adc
and
jne
jnp
pushf
xor
dec
test
xor
gs
mov
lds
ss
lock
mov
hlt
aaa
jp
sbb
xchg
mov
cmp
stos
cmp
mov
cmp
mov
cmp
lods
popf
cmp
mov
cmp
fstps
fimull
add
add
dec
fs
ficompl
fcmovb
push
mov
adc
neg
and
iret
das
inc
lods
iret
xor
xor
dec
sub
push
and
pop
sbb
imul
fnstenv
sbb
jg
sbb
fsts
imul
lods
pop
pop
fnstcw
dec
dec
fmul
inc
dec
fcom
cmp
jecxz
imul
sub
fincstp
and
into
or
stc
clc
pop
into
add
pusha
into
add
jb
not
jl
add
data16
stos
mov
pushf
mov
mov
je
mov
outsb
into
xchg
jo
xchg
or
int3
into
jo
into
pop
xlat
mov
into
xlat
movsb
into
cwtl
dec
mov
xchg
into
xchg
pushf
into
mov
add
add
into
scas
xchg
into
call
aad
lret
hlt
aad
lret
out
sub
rcl
ss
mov
mov
into
ss
aaa
mov
sbb
aaa
fldenv
pop
aaa
int3
sbb
ss
cli
outsb
lea
push
ss
inc
xor
mov
or
test
fstpl
out
roll
aaa
mov
add
add
push
dec
stc
add
pushf
out
dec
fwait
adc
jp
xor
cmp
pop
jp
xor
push
xor
mov
inc
xor
cltd
mov
add
movsb
xorl
mov
mov
xor
mov
xor
pop
scas
cmp
repnz
ss
scas
sahf
mov
mov
add
mov
xchg
cmp
mov
fs
test
xor
cmp
iret
test
shrl
mov
add
idiv
mov
idiv
jb
add
cmp
xor
dec
xor
mov
fsubrs
and
fdivrs
jp
or
dec
fnstcw
add
sbbl
test
fs
andb
lea
shll
push
mov
add
dec
call
idivb
cmp
scas
cmp
pop
into
lea
iret
mov
test
sbb
int
jl
iret
or
xorl
jp
iret
mov
pop
push
fstpt
dec
inc
stc
loope
add
add
shrl
rcll
rorb
into
push
into
leave
int3
or
sbb
stc
int
int3
mov
les
push
lds
rcrb
pop
sarb
lds
rclb
push
dec
arpl
fmul
xor
cltd
into
pop
imul
arpl
scas
sub
icebp
cmc
into
mov
out
roll
add
ss
addr16
insl
rol
movl
in
xchg
jge
stc
add
mov
dec
xor
js
sub
cmpb
lcall
sbb
mov
mov
das
xchg
cmp
cmp
add
pushf
cmp
sarb
add
add
and
lea
jbe
adc
cmp
cmpb
lahf
sbb
mov
jg
xor
cmp
mov
mov
cmpsl
mov
ds
jle
jmp
mov
ds
mov
aas
cltd
mov
aas
dec
mov
leave
aas
mov
idiv
lret
add
add
imulb
cwtl
xor
lods
mov
lcall
xor
xor
icebp
xor
lods
sbb
test
xor
shrl
xor
mov
and
xor
lods
pushl
dec
sahf
rcll
pop
clc
shlb
ret
shlb
jbe
mov
pop
shl
cmp
shll
and
mov
das
ror
sbb
shl
add
add
iret
outsl
and
rclb
add
and
jbe
lds
lods
lret
lret
push
int
add
dec
xchg
shlb
jge
ret
rolb
dec
movb
cld
decl
roll
sbb
jns
in
mov
mov
psrlq
enter
movl
stos
mov
sarl
lret
xor
adc
or
ljmp
ror
leave
mov
leave
xlat
or
fsubrs
sub
sbb
push
fmuls
rcl
adc
pop
xlat
xor
inc
xlat
inc
lret
add
aad
lret
xchg
aad
lret
dec
sbb
adc
aad
int3
cld
aam
shrl
roll
fwait
push
cmp
test
cmp
cmp
xchg
lea
faddl
sbb
outsb
xchg
cmp
xchg
cmp
xchg
fnstsw
aad
ds
xchg
cmp
xchg
test
pop
cli
xor
pop
ret
add
xor
adcb
xor
or
xor
sbb
ss
adc
dec
or
xor
xchg
xor
out
repnz
mov
ds
mov
ds
ds
scas
adc
dec
mov
aas
xor
lret
scas
out
cmpsb
xchg
call
incb
add
inc
xor
lods
lahf
xor
lods
xorb
lods
mov
xor
stos
inc
xor
stos
push
xor
mov
add
add
stos
lods
xor
stos
shll
stos
xor
fnstenv
test
repnz
cmc
xor
stos
or
cli
stos
sbb
or
pop
sbb
into
imul
sarb
jl
iret
fidivrs
adc
loopne
xor
rorb
roll
pop
add
fiadds
movl
add
add
shll
into
rorl
ret
sbb
shll
jmp
xchg
cmp
mov
jp
roll
dec
rorl
inc
shll
lods
shll
popa
in
fstps
shl
inc
rcl
cmp
cmc
shrb
lret
lret
xchg
lret
pop
lret
ror
shl
leave
and
xchg
leave
sbb
ror
roll
add
push
roll
shrl
shrb
xchg
shl
data16
and
ss
hlt
mov
dec
lret
mov
stos
lret
mov
icebp
int
mov
or
aam
fmul
add
sub
or
daa
int
mov
stc
movb
mov
mov
ss
shll
fldl
add
pop
cmp
mov
pop
add
xor
cmpsb
aaa
jmp
dec
stc
add
pushf
call
xor
rdtsc
fwait
jl
xor
jge
xor
cltd
sub
xor
lcall
fwait
jp
xor
orb
jnp
xor
sbb
leave
or
sub
pop
aaa
sub
add
add
test
sub
xor
aad
lods
xor
std
test
cs
ds
adc
push
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
ds
mov
aas
and
cmc
incl
add
test
add
movsb
xor
xor
test
cmpsb
xor
inc
scas
sub
test
push
pop
dec
lret
mov
lds
xor
aad
sub
jb
clc
and
mov
adc
jo
outsl
mov
lret
xor
cmpsb
jp
leave
mov
push
enter
mov
xchg
add
add
mov
incb
or
sarb
rcr
pop
insl
shl
pop
mov
ficomps
sbb
shrb
xchg
ret
enter
rorb
imul
sub
leave
loop
out
movl
sub
mov
adc
xor
jge
add
rcl
enter
add
lret
mov
sarl
lret
dec
lds
shr
les
iret
rol
cltd
iret
jnp
loopne
lret
into
lahf
mov
add
lret
adc
pushf
int3
pop
rolb
xchg
mov
and
lret
mov
add
push
pop
push
arpl
and
insl
xor
pop
xor
adc
jmp
dec
stc
add
add
add
xor
sbb
xor
ret
cld
sbb
pop
std
stc
xor
add
sub
lahf
subl
pop
orb
jns
pop
cmp
xchg
hlt
cmp
xchg
pop
xchg
cltd
xchg
jl
jmp
dec
stc
add
fwait
mov
xor
nop
mov
cmp
scas
xorb
scas
mov
xlat
lods
shlb
mov
std
ss
scas
sbb
jmp
mov
adc
xor
in
scas
js
movsb
mov
cmp
in
inc
mov
cmp
scas
push
cmp
scas
xchg
cmp
scas
icebp
cmp
mov
cmp
into
cmp
mov
cmp
cmp
cmp
cmp
cmp
add
cmc
call
cmc
add
add
add
gs
lds
mov
inc
sub
stc
jle
sub
inc
jge
cs
mov
das
cltd
pop
pop
cs
shrl
aam
cs
cmp
repz
inc
cmp
cs
sbb
das
ret
sbb
das
mov
sbb
xchg
js
push
jbe
ss
je
inc
add
add
dec
nop
xchg
std
mov
enter
int3
cmp
sbb
fwait
cmp
xor
movsb
xor
ss
sub
jmp
add
lcall
lds
leave
les
cmp
ret
test
lods
ret
bound
pop
ret
insb
ror
xadd
cmp
rcrl
iret
mov
push
inc
mov
add
mov
inc
inc
cmpsl
mov
xor
inc
mov
adc
inc
xchg
lds
mov
mov
xchg
add
psllw
fisttpll
jmp
aaa
std
psubusw
int
shll
mov
xor
mov
mov
aaa
sbb
shll
mov
fnstenv
int
loope
mov
icebp
aaa
mov
mov
aaa
jge
xchg
aaa
jge
stc
add
pushf
jbe
xor
add
jl
xor
jl
xor
jl
xor
pop
xor
xor
pop
lds
cmp
xor
cs
pop
xor
sub
insl
xor
sub
jge
add
add
sub
xor
sub
xor
sub
xor
sub
xor
lds
inc
sub
xor
sub
xor
aaa
in
dec
cmp
xor
cmp
xor
cmp
sbb
add
jo
pop
xor
cmp
xor
push
xor
cmp
aaa
or
add
dec
add
inc
popf
inc
loope
mov
push
xor
aaa
push
sub
aaa
imul
lahf
ficoml
bound
adc
jb
cmpb
lods
jo
aaa
fisubrl
aaa
add
inc
std
sbb
decl
xor
aas
cltd
xor
aas
out
sub
pop
mov
sub
push
push
sub
push
mov
push
jle
sub
add
add
sub
mov
adc
fcomps
sub
pop
stc
hlt
xor
xor
cli
sub
xor
sub
xor
sub
mov
sub
aaa
push
shll
sub
or
aaa
stos
sub
pop
cmp
sub
cmp
sub
das
sti
xor
das
imul
add
and
mov
push
sub
out
outsb
xor
cmp
xor
je
fwait
cmp
push
cmp
pop
pop
cmp
push
sub
adc
ret
cmp
inc
repnz
xor
cmp
mov
stos
and
std
cmp
push
test
jge
stos
cmp
xor
popl
jl
divl
jno
xor
shll
or
adc
ss
dec
stc
add
pushf
jbe
jns
stc
add
ds
cs
and
dec
sbb
xor
and
das
imul
cmp
test
cmp
lock
ds
shlb
sbb
xor
ja
sub
jg
lock
ds
lahf
add
add
cmpsl
fdivs
mov
test
mov
ds
xor
xlat
ds
shlb
out
ds
idivl
sub
pop
aas
clc
xor
aas
lock
aas
dec
ss
aas
push
ss
aas
fdivs
aas
lock
aas
test
aas
aas
dec
pushf
xor
subb
jo
xor
push
add
dec
bound
cwtl
test
decl
sub
aas
cmp
ds
cs
ds
sub
ja
sahf
ficompl
int
jl
das
cli
jl
daa
dec
adcl
pop
int3
xor
pop
cmc
xor
bound
ds
aaa
xor
xor
xor
aaa
dec
cmp
daa
pushl
daa
mov
je
add
pop
stc
add
fbstp
test
and
imul
push
das
mov
jae
mov
ds
xor
fwait
aaa
mov
xor
push
cmp
xor
cmp
xor
jae
jb
add
stc
daa
xor
in
lods
xor
sub
push
add
mov
pop
xor
add
add
stos
ss
es
jo
push
mov
fsubrl
subl
fistps
mov
sub
inc
jge
cmp
mov
lret
cmp
cmp
popa
outsb
cmp
pusha
pop
xor
jecxz
icebp
xor
pop
xor
je
cmp
sbb
xchg
dec
sbb
add
sub
jg
sub
pusha
in
sub
pop
subl
pop
mov
pop
mov
sub
aas
inc
sub
aas
dec
sub
lcall
xor
pop
adc
inc
and
xor
negb
jno
inc
sub
ss
sub
and
mov
aaa
in
jle
mov
xor
cmp
xor
add
add
xor
add
idiv
cs
add
mov
es
xor
xor
adc
or
xorb
out
jecxz
inc
xor
jmp
pop
push
ss
movsb
xor
fidivs
mov
es
and
sub
xchg
das
jne
fsubrl
adc
cmp
mov
std
rolb
add
add
sub
jl
sub
cmp
xor
popa
cmp
insl
push
pop
cmp
dec
bound
std
cmpb
dec
mov
es
and
or
push
xor
push
inc
xor
push
divb
sub
inc
xor
jbe
xor
data16
dec
data16
push
push
add
pop
push
stc
mov
cmp
xor
cmp
add
ja
mov
cmp
int
jae
xchg
sub
or
dec
sub
cmp
sarl
cvttps2pi
cmp
sub
cmp
sub
cmp
sub
xor
xor
xor
add
dec
ss
das
pop
xor
jl
mov
dec
stc
jmp
add
imul
add
aaa
sub
add
push
jmp
dec
stc
add
cmp
sub
nop
pop
jns
fs
cmp
push
inc
cmp
inc
xor
sarb
aaa
mov
jns
add
lods
insb
divl
arpl
xor
aas
ret
aas
or
sbb
sub
sub
xor
sub
cmp
in
sub
jns
lea
pop
pusha
lods
sub
xor
es
add
push
sub
xor
cmp
shrb
pop
xor
sub
data16
outsb
sub
xor
sub
xor
sub
xor
sub
data16
xor
sub
xor
sub
xor
sub
xor
sbb
xor
add
xor
sub
and
cmp
sub
mov
xor
cmp
cmp
and
inc
pop
sbb
dec
inc
mov
push
cmp
daa
pop
inc
inc
daa
cmp
daa
insb
and
daa
jl
loop
test
add
sbb
daa
mov
jp
pushf
add
movsb
jnp
daa
lods
arpl
sub
and
les
sub
inc
ds
cmp
adc
cmp
push
cmp
cmp
cmp
xchg
cmp
cmp
cmp
and
cmp
push
cmp
and
ret
and
sahf
cmp
add
and
cmp
and
cmp
push
cmp
and
cmp
pop
cmp
and
cmp
and
sub
sub
sahf
sub
xor
sub
xor
jmp
cmp
xor
sub
xor
sub
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
jbe
add
data16
add
data16
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
es
add
es
add
idiv
add
idiv
add
out
add
out
add
idiv
add
idiv
add
out
add
out
add
mov
add
mov
add
cmpsb
cld
add
add
add
cld
add
mov
add
cmpsb
cld
add
cmpsb
cld
add
jbe
add
jbe
add
data16
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
add
add
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
cmpsb
stc
add
add
add
stc
add
jbe
add
data16
add
data16
add
jbe
add
jbe
add
data16
add
data16
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
es
add
es
add
idiv
add
idiv
add
out
add
out
add
idiv
add
idiv
add
out
add
out
add
add
add
clc
add
cmpsb
clc
add
cmpsb
clc
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
add
add
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
out
add
mov
add
mov
add
cmpsb
cmc
add
cmpsb
cmc
add
add
add
cmc
add
cmpsb
cmc
add
cmpsb
cmc
add
jbe
add
jbe
add
data16
add
data16
add
jbe
add
jbe
add
data16
add
data16
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
es
add
es
add
idiv
add
idiv
add
out
add
out
add
idiv
add
add
add
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
add
add
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
idiv
add
idiv
add
out
add
out
add
idiv
add
idiv
add
out
add
out
add
mov
add
add
add
stc
add
cmpsb
stc
add
mov
add
mov
add
cmpsb
stc
add
cmpsb
stc
add
jbe
add
jbe
add
data16
add
data16
add
jbe
add
jbe
add
data16
add
data16
add
ss
add
ss
add
es
add
es
add
ss
add
ss
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
add
add
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
add
add
add
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
dec
stc
jmp
add
jmp
add
jmp
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
jmp
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
testb
testb
testb
testb
testb
testb
testb
div
add
div
add
out
add
out
add
div
add
div
add
add
add
cmc
add
out
add
mov
add
mov
add
cmpsb
cmc
add
cmpsb
cmc
add
mov
add
mov
add
cmpsb
cmc
add
cmpsb
cmc
add
jbe
add
jbe
add
data16
add
data16
add
jbe
add
jbe
add
data16
add
dec
push
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
bound
add
add
dec
stc
jmp
add
jmp
dec
stc
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
ja
mov
js
add
insl
lods
adc
cmc
sahf
js
mov
in
push
mov
mov
xor
test
int3
cmp
aad
jg
insb
incl
or
mov
mov
sub
jle
add
xchg
push
cmpl
fyl2xp1
mov
ret
push
insl
sbb
jo
or
add
jae
lods
insl
adc
pushf
pop
fldt
je
popf
in
push
test
das
popf
pop
xchg
test
sti
dec
push
lret
xor
fcmovu
inc
aam
fnsave
push
pop
adc
mov
dec
cmpsb
push
adc
push
lea
es
mov
and
and
aad
insb
ffreep
pop
cmp
or
or
pop
scas
sbb
ss
pslld
test
jo
mov
lock
xchg
ds
jle
ror
adc
mov
out
inc
pop
xchg
and
xor
ret
repz
pop
mov
dec
test
push
pop
xor
fwait
xchg
loop
inc
push
mov
adc
ja
imul
fiaddl
arpl
mov
dec
add
add
js
les
mov
scas
pop
push
jbe
push
xchg
cmp
sbb
xchg
imul
sbb
jo
addr16
nop
int3
fwait
rorl
aaa
mov
repz
insl
and
fadd
push
loop
into
popa
imul
or
push
sub
fs
jnp
adc
mov
out
add
add
cmp
push
sub
sbb
and
jo
pop
ja
push
fisubrs
mov
aad
repz
mov
sbb
mov
ds
and
xchg
pop
popa
mov
inc
gs
call
rolb
lods
pop
bound
inc
rcll
mov
lea
shll
negb
add
add
into
or
fidivs
mov
xchg
inc
int3
mov
sbb
or
les
ret
cli
jg
push
mov
jle
xor
lret
add
mov
cmpb
popa
jns
imul
add
divb
ret
int3
lcall
inc
push
cmpb
add
add
add
orb
mov
add
addb
lods
clc
mov
cmpb
push
sbb
les
dec
push
addb
mov
add
inc
jle
hlt
int3
add
aaa
jle
hlt
je
sbb
jle
lock
add
cmpb
add
add
mov
clc
add
int3
cmp
test
int3
sbb
out
mov
jg
inc
in
aam
in
or
add
cmc
cmp
dec
lahf
jne
add
ret
lock
add
ret
int3
fwait
inc
int3
xchg
inc
int3
mov
sbb
cmpl
add
adc
inc
addr16
sub
testl
mov
inc
add
mov
sbb
mov
mov
push
jecxz
push
clc
out
call
idivl
cmp
add
add
cmpsb
hlt
addl
jae
test
mov
push
aam
call
call
mov
inc
add
add
sub
int3
fwait
cmp
int3
mov
in
iret
pusha
inc
add
mov
or
cmp
int3
or
in
xchg
std
push
mov
adc
ret
int3
sbb
int3
or
in
mov
stc
push
incl
add
pop
and
inc
dec
cmpb
dec
test
decl
cmpb
les
or
movsl
hlt
mov
ret
int3
cli
and
adc
add
inc
cmpb
xchg
dec
mov
adc
pushf
out
mov
cli
dec
cld
pop
xchg
mov
scas
adc
insb
pop
add
add
cld
ljmp
ret
int3
fwait
cmp
int3
mov
in
inc
stc
add
sub
call
int3
fwait
cmp
int3
mov
in
jnp
mov
jp
add
jl
dec
stc
add
dec
jp
or
arpl
or
cmp
mov
add
mov
inc
sbb
add
dec
bound
mov
addb
mov
jae
aam
hlt
mov
mov
cli
add
mov
addl
into
pop
testl
cmpsl
cmpl
clc
aam
adc
or
mov
orb
call
cld
or
push
add
add
cmp
mov
dec
testl
cmp
mov
cmpb
jp
add
orb
mov
mov
jns
add
inc
lock
into
lock
sti
add
mov
clc
dec
lock
cmpsb
loopne
or
js
stc
pop
test
stc
push
aam
loopne
add
add
add
add
notl
mov
mov
pop
cmpl
lds
mov
pop
mov
clc
adc
outsl
addb
rcll
xchg
pop
jmp
les
add
aas
cmpb
addb
adc
movsl
in
xchg
push
add
dec
stc
mov
ja
adc
pop
mov
vshufps
mov
add
ret
ja
add
fimull
subl
inc
mov
jb
idiv
adc
call
adcl
adc
add
add
mov
add
mov
push
aaa
arpl
incl
mov
mov
adcl
rclb
hlt
les
dec
add
add
pop
mov
orb
sti
idiv
loopne
fstpl
ds
int3
jp
in
mov
mov
jmp
clc
aaa
dec
add
jle
clc
jmp
std
nop
dec
add
cmpb
les
push
push
lods
ret
int3
mov
in
add
stc
push
bound
inc
dec
adcb
xor
ret
int3
or
in
sti
cld
mov
mov
mov
sarb
aam
add
std
jg
hlt
les
mov
jge
clc
mov
add
sarb
insb
inc
int3
lret
clc
add
cmc
xor
movsb
or
dec
xchg
sbb
jne
jle
clc
add
add
mov
mov
jge
adc
mov
mov
xor
mov
jne
mov
add
xor
xor
jmp
pop
cmp
int3
sbb
int3
adc
int3
or
int3
lcall
inc
out
xor
dec
sar
add
mov
hlt
mov
mov
add
je
clc
jae
dec
cmpsl
mov
push
push
dec
dec
hlt
lods
mov
xor
add
mov
jmp
jae
add
mov
cld
add
cld
inc
add
in
cmp
mov
add
jge
xchg
adc
les
add
stc
and
mov
call
mov
add
push
int
inc
dec
je
je
mov
call
dec
mov
inc
testl
dec
scas
or
ja
loop
push
ret
int3
mov
int3
sbb
adc
cmp
int3
decl
fs
mov
movsb
ret
int3
adc
int3
or
int3
lcall
inc
and
adc
add
dec
jb
or
mov
mov
cli
push
cmp
lods
loopne
mov
mov
in
mov
je
or
jo
call
dec
jb
insb
mov
add
mov
pushl
mov
add
dec
stc
push
push
inc
dec
lock
mov
mov
test
mov
stos
call
addl
add
stc
add
dec
push
or
dec
jo
hlt
aam
loopne
fsubs
jae
les
add
inc
call
jnp
mov
jno
adc
mov
mov
xchg
mov
or
idivl
add
cmpsl
inc
jae
mov
jno
or
push
les
add
add
pop
test
testl
mov
jmp
jno
in
push
push
cld
push
inc
add
rcrl
stc
mov
push
daa
jno
ljmp
jns
or
mov
call
or
mulb
mov
push
jmp
push
inc
add
adc
roll
xor
mov
cmpsl
mov
jo
xor
add
push
inc
dec
lock
mov
or
xor
mov
cmpsl
push
nop
scas
lock
int3
push
cmp
jne
iret
inc
push
aam
hlt
push
in
notl
cwtl
cmp
mov
mov
jb
fadd
lods
fmuls
imul
aam
loopne
jle
push
mov
mov
call
sti
inc
testl
dec
stc
add
arpl
mov
outsl
inc
fmuls
add
mov
outsl
dec
loopne
mov
inc
xor
int3
call
je
mov
push
aam
cmp
or
push
mov
push
push
call
int3
cmp
mov
pop
mov
dec
stos
sub
dec
jbe
push
add
add
mov
push
aam
jl
mov
push
mov
fld1
inc
dec
cmpsl
call
adcl
mov
push
idivl
mov
xor
mov
call
push
mov
testl
mov
add
mov
call
sub
outsb
or
push
addr16
cmc
incl
add
push
fld1
inc
dec
cld
shl
stc
mov
lea
iret
decb
dec
cmpsl
notl
push
loop
sbb
add
add
dec
xor
int3
lcall
inc
jecxz
ret
int3
or
in
and
inc
add
jecxz
call
pop
push
inc
add
add
add
int3
cli
insl
in
idivl
call
mov
cmp
mov
inc
mov
test
add
jmp
call
lcall
int3
lcall
inc
daa
cli
add
dec
cmp
add
mov
add
add
xchg
cmp
mov
add
inc
or
add
out
pusha
call
rolb
das
push
inc
add
testl
push
shr
inc
dec
stc
add
dec
push
or
dec
shr
inc
dec
cli
add
dec
jl
pusha
addr16
mov
add
add
int3
push
jne
roll
lcall
jmp
call
scas
push
inc
add
lods
call
inc
add
add
cmp
mov
jno
dec
out
add
cmc
inc
add
in
call
out
add
push
mov
cld
aas
dec
shll
psubw
add
push
ret
aas
add
pushf
js
or
notl
lods
jo
inc
dec
lcall
fwait
ds
int3
xor
mov
dec
mov
add
aas
test
testl
orb
dec
cwtl
pop
call
mov
idiv
int3
xor
mov
jb
cld
xor
lock
jb
loopne
jb
fdivrl
cmpsb
sti
sarb
add
lcall
aas
push
inc
add
stc
add
test
inc
add
push
ja
stc
incl
add
cmpb
les
push
jae
dec
in
mov
add
sbb
inc
loopne
in
jo
mov
mov
push
xchg
mov
add
jmp
aam
clc
orl
cmp
jae
jb
fs
add
addb
dec
movsb
clc
mov
dec
mov
mov
jb
clc
into
aaa
jmp
adc
push
inc
add
xor
pop
call
xchg
outsl
or
fsubrs
push
ja
add
dec
or
mov
mov
inc
dec
or
mov
call
notl
test
scas
clc
mov
into
push
add
dec
stc
mov
adc
mov
call
call
dec
aas
idiv
int3
xor
add
call
aad
cmp
test
cld
xor
push
sub
dec
js
add
push
je
lcall
jae
call
mov
call
xor
sub
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
inc
stc
add
ror
nop
xor
lret
mov
mov
xor
add
daa
stc
add
sbb
mov
cmp
jns
add
inc
sbb
add
ds
movl
add
stc
add
cmp
divl
sbb
add
xor
or
push
lret
pop
xor
lret
cmp
add
add
lret
imul
lret
ror
xor
int
mov
leave
adc
inc
int
xor
int3
xorl
int3
lods
xor
int3
mov
xor
int3
fbstp
int3
cmc
xor
int3
adc
sbb
inc
xor
ror
xchg
xor
sub
clc
xor
inc
lret
and
add
add
cmp
pop
lret
inc
ss
ss
push
jo
jne
jbe
jle
lret
lret
xchg
ss
lret
popf
lods
lret
mov
ss
add
pop
int3
ss
and
push
aaa
fmul
cltd
aaa
out
int3
test
aaa
mov
shlb
scas
int3
cmc
aaa
mov
push
cmp
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
add
add
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
add
dec
stc
fcom
inc
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
inc
add
aad
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
inc
add
xlat
inc
add
aad
add
aad
add
inc
add
add
xlat
inc
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
aad
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
aad
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
add
inc
add
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
xlat
inc
add
fadds
fadds
flds
fadds
flds
fadds
fadds
flds
flds
fadds
flds
fadds
fadds
flds
fadds
fadds
fadds
fadds
fadds
fadds
flds
fadds
fadds
fadds
fadds
flds
fadds
fadds
flds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
flds
flds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
flds
flds
fadds
fadds
fadds
fadds
flds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
flds
flds
flds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
flds
fadds
fadds
fadds
flds
fadds
fadds
fadds
fadds
fadds
flds
fadds
fadds
fadds
flds
fadds
fadds
fadds
xlat
inc
add
add
inc
add
flds
fadds
fadds
fadds
fadds
fadds
fadds
flds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
fadds
flds
xlat
inc
add
fadds
fadds
flds
fadds
flds
xlat
inc
add
inc
add
fadds
fadds
fadds
fadds
fadds
fadds
flds
fadds
flds
flds
flds
fadds
fadds
fadds
fadds
flds
fadds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
flds
fiaddl
flds
fiaddl
flds
fiaddl
fiaddl
flds
fiaddl
fiaddl
fiaddl
fiaddl
flds
flds
flds
flds
flds
flds
flds
fiaddl
flds
flds
fiaddl
flds
flds
flds
flds
flds
fiaddl
fiaddl
flds
fiaddl
flds
flds
flds
fiaddl
flds
flds
flds
flds
fiaddl
flds
fiaddl
fiaddl
flds
flds
flds
fiaddl
fiaddl
flds
fiaddl
fiaddl
fiaddl
flds
flds
flds
flds
flds
fiaddl
flds
fiaddl
flds
flds
flds
fiaddl
fiaddl
fiaddl
flds
fiaddl
flds
flds
flds
flds
fiaddl
flds
flds
flds
flds
fiaddl
flds
flds
flds
fiaddl
flds
xchg
and
xchg
in
aad
jge
jno
mov
push
das
jmp
rolb
fcomi
fscale
push
dec
cmc
mov
sub
movsb
leave
mul
xor
loop
pusha
xchg
test
add
cmp
pop
jmp
fnstsw
in
jge
jb
addr16
mov
ds
jne
popa
pop
sbb
sahf
out
and
mov
stc
test
movsb
into
push
cltd
aam
sbb
dec
cmpsb
push
ret
mov
push
movsb
and
xchg
inc
push
fdivs
jecxz
mov
mov
jg
push
and
pop
sbbb
lret
push
push
pop
in
xor
cmpsb
in
repz
and
aad
mov
lds
sub
hlt
roll
push
negb
dec
jge
insl
ja
fsubs
jns
inc
pop
dec
pop
fmul
aam
jmp
movsl
std
mov
frstor
and
js
push
insb
imul
fs
or
or
mov
adc
adc
loope
adc
pop
xorl
pop
sbb
push
xor
or
ror
and
mov
pop
stos
es
sub
addr16
pop
out
dec
out
aaa
xorb
pushf
xchg
dec
gs
jno
ds
add
in
jge
push
jb
fnstcw
dec
sbbb
pop
stos
rorl
lea
cwtl
pop
cmpsb
loop
insl
pop
out
push
ja
loope
or
inc
out
insl
gs
jecxz
xor
jl
dec
xor
fldl
pop
push
stos
push
jle
jmp
xlat
jbe
push
pop
neg
mov
jecxz
int
mov
ss
dec
gs
sub
and
inc
cs
cltd
push
and
movsl
ljmp
lock
call
mov
sbb
insb
lahf
aas
and
adc
jp
push
jecxz
pop
.byte
cmpsb
.byte
cmp
add
dec
add
imul
add
pop
add
inc
add
add
add
pop
add
add
add
rolb
add
pop
add
ja
js
data16
pop
add
push
push
add
insl
add
add
add
imul
add
inc
add
add
inc
add
xor
data16
push
add
add
xor
dec
add
inc
add
add
sub
inc
add
dec
add
push
add
inc
add
inc
add
add
add
jae
add
pop
add
add
add
outsb
add
pop
add
add
jae
imul
add
je
dec
add
outsb
add
add
jb
add
add
dec
roll
mov
add
aad
add
add
shl
add
in
xlat
add
js
add
dec
ljmp
test
add
ljmp
add
add
add
add
repnz
add
cmp
add
inc
fiaddl
pop
fiaddl
fiaddl
jo
add
jle
add
mov
add
mov
fiaddl
mov
fiaddl
repnz
add
add
sbb
add
fildl
inc
fildl
pop
fildl
jo
add
jl
add
nop
fildl
mov
fildl
aam
add
add
call
fildl
or
add
push
faddl
sub
add
cmp
add
dec
faddl
faddl
outsb
faddl
sbb
add
faddl
mov
add
lret
add
faddl
out
add
repnz
or
add
and
add
xor
add
inc
fldl
push
fldl
data16
js
add
mov
add
test
add
mov
add
lret
add
fldl
neg
add
or
add
and
add
xor
add
inc
fiadds
push
fiadds
pusha
fiadds
jle
add
nop
fiadds
mov
fiadds
lret
add
fiadds
call
fiadds
adc
add
and
add
filds
push
filds
outsb
filds
sbb
add
add
mov
add
int3
filds
loop
add
add
add
sbb
add
sub
add
ss
add
add
push
loopne
add
add
je
add
mov
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jle
add
mov
add
sahf
loope
add
add
aam
add
in
add
cli
loope
add
add
sub
add
inc
loop
add
add
jo
add
and
add
add
aam
add
in
loop
add
add
push
jecxz
add
jecxz
add
add
pop
jecxz
add
add
xchg
add
xchg
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
sbb
add
xor
add
inc
in
add
add
jb
add
mov
add
sahf
in
add
add
add
in
add
add
add
in
add
in
add
in
add
in
add
in
add
add
in
add
add
mov
add
pushf
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
push
out
add
add
js
add
mov
add
cmpsb
out
add
out
add
out
add
out
add
out
add
add
cs
add
add
add
insb
out
add
add
shl
add
out
add
out
add
add
push
call
add
dec
call
add
push
add
jle
add
xchg
call
add
mov
call
add
hlt
call
add
adc
add
es
add
push
jmp
add
test
add
pushf
jmp
add
jmp
add
in
add
clc
jmp
add
cs
push
ljmp
insb
ljmp
test
add
mov
add
lcall
add
ljmp
aam
add
fsubrp
add
add
add
imul
add
or
add
sbb
add
xor
add
dec
jmp
add
add
jb
add
mov
add
sahf
jmp
add
jmp
add
jmp
add
jmp
add
in
add
sub
add
ds
add
push
in
add
in
add
jb
add
mov
add
sldt
addb
add
mov
in
add
call
in
add
adc
add
add
add
inc
in
add
pop
in
add
je
add
nop
in
add
test
add
mov
in
add
out
in
add
push
out
add
sbb
add
xor
add
dec
out
add
pop
out
add
je
add
adc
add
or
add
xorb
add
fsubr
add
push
add
xor
add
or
add
and
add
ds
add
push
out
add
insb
out
add
sub
add
out
add
adc
add
loopne
add
add
add
inc
fiaddl
pop
fiaddl
fiaddl
jo
add
jle
add
mov
add
mov
fiaddl
mov
fiaddl
repnz
add
add
sbb
add
fildl
inc
fildl
pop
fildl
jo
add
jl
add
nop
fildl
mov
fildl
aam
add
add
call
fildl
or
add
push
faddl
sub
add
cmp
add
dec
faddl
faddl
outsb
faddl
sbb
add
faddl
mov
add
lret
add
faddl
out
add
repnz
or
add
and
add
xor
add
inc
fldl
push
fldl
data16
js
add
mov
add
test
add
mov
add
lret
add
fldl
neg
add
or
add
and
add
xor
add
inc
fiadds
push
fiadds
pusha
fiadds
jle
add
nop
fiadds
mov
fiadds
lret
add
fiadds
call
fiadds
adc
add
and
add
filds
push
filds
outsb
filds
sbb
add
add
mov
add
int3
filds
loop
add
add
add
sbb
add
sub
add
ss
add
add
push
loopne
add
add
je
add
mov
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jle
add
mov
add
sahf
loope
add
add
aam
add
in
add
cli
loope
add
add
sub
add
inc
loop
add
add
jo
add
and
add
add
aam
add
in
loop
add
add
push
jecxz
add
jecxz
add
add
pop
jecxz
add
add
xchg
add
xchg
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
sbb
add
xor
add
inc
in
add
add
jb
add
mov
add
sahf
in
add
add
add
in
add
add
add
in
add
in
add
in
add
in
add
in
add
add
in
add
add
mov
add
pushf
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
push
out
add
add
js
add
mov
add
cmpsb
out
add
out
add
out
add
out
add
out
add
add
cs
add
add
add
insb
out
add
add
shl
add
out
add
out
add
add
push
call
add
dec
call
add
push
add
jle
add
xchg
call
add
mov
call
add
hlt
call
add
adc
add
es
add
push
jmp
add
test
add
pushf
jmp
add
jmp
add
in
add
clc
jmp
add
cs
push
ljmp
insb
ljmp
test
add
mov
add
lcall
add
ljmp
aam
add
fsubrp
add
add
add
imul
add
or
add
sbb
add
xor
add
dec
jmp
add
add
jb
add
mov
add
sahf
jmp
add
jmp
add
jmp
add
jmp
add
in
add
sub
add
ds
add
push
in
add
in
add
jb
add
mov
add
sldt
addb
add
mov
in
add
call
in
add
adc
add
add
add
inc
in
add
pop
in
add
je
add
nop
in
add
test
add
mov
in
add
out
in
add
push
out
add
sbb
add
xor
add
dec
out
add
pop
out
add
je
add
adc
add
or
add
xorb
add
fsubr
add
push
add
xor
add
or
add
and
add
ds
add
push
out
add
insb
out
add
sub
add
out
add
adc
add
loopne
add
add
add
addl
imul
imul
jns
add
mov
insb
jae
jb
outsb
push
add
mov
insb
jae
jb
jo
push
add
jg
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
imul
push
jo
arpl
add
add
fs
je
insl
inc
add
dec
add
jb
gs
outsl
insl
insl
add
inc
gs
jns
je
insl
push
imul
imul
jns
add
inc
add
je
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
xor
inc
gs
jb
imul
push
add
push
add
je
jb
jbe
je
push
jb
imul
inc
add
popa
je
dec
popa
imul
sbb
gs
outsl
insb
jne
gs
popa
bound
inc
add
je
push
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
inc
popa
fs
je
imul
add
jb
outsb
inc
add
test
inc
jne
jb
outsb
je
jb
arpl
jae
pop
add
popa
fs
outsl
outsb
jae
insb
gs
add
roll
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
inc
push
add
mov
insb
jae
jb
outsb
add
inc
outsl
outsb
jae
insb
gs
push
add
pushf
add
je
outsl
insl
insl
inc
jb
popa
imul
mov
jb
je
inc
imul
inc
gs
jne
jb
outsb
je
push
add
jb
inc
jb
popa
je
inc
jbe
outsb
je
add
aam
inc
gs
imul
dec
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
push
dec
outsb
outsw
add
push
popa
imul
jo
imul
push
jne
jb
inc
outsl
jae
gs
arpl
add
inc
outsl
jo
inc
imul
add
popa
fs
outsl
outsb
jae
insb
gs
jne
jo
je
add
jge
push
gs
outsl
jbe
inc
imul
jns
add
cmc
add
fs
outsl
fs
add
xchg
add
gs
je
push
imul
inc
outsl
jo
inc
imul
jb
je
push
jb
imul
imul
inc
imul
outsl
push
jns
je
insl
push
imul
inc
jb
popa
je
push
jb
arpl
jae
add
sub
ja
je
push
bound
add
push
outsb
insl
popa
jo
imul
insb
add
add
gs
imul
dec
push
dec
add
add
ja
je
push
jb
popa
add
jnp
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
xor
inc
imul
push
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
pop
insb
jb
popa
add
pop
add
outsb
jbe
jb
push
push
push
outsl
inc
imul
add
gs
je
inc
imul
jns
add
mov
inc
jb
popa
je
push
popa
imul
insl
gs
add
add
gs
popa
jo
push
outsl
jae
je
outsl
outsb
add
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
inc
add
int
push
gs
outsb
fs
inc
imul
gs
outsl
arpl
gs
outsb
outsw
inc
add
insl
add
je
outsl
insl
insl
push
je
je
add
pushf
add
popa
jo
xor
js
add
inc
add
je
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
dec
add
jo
popa
je
push
gs
jne
arpl
add
bound
push
outsb
insb
outsl
arpl
add
push
insb
jae
gs
popa
insb
jne
add
inc
jb
popa
je
inc
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
stc
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
mov
jo
outsb
add
sub
inc
gs
jb
arpl
jae
gs
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
jne
inc
jb
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
xchg
add
jb
je
push
jb
jbe
je
push
jb
imul
jne
je
add
bound
inc
gs
push
push
jb
outsl
jb
je
inc
outsl
outsl
jae
add
pop
add
je
imul
jo
inc
add
std
add
popa
insb
inc
jb
add
add
outsb
dec
jne
gs
add
mov
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
jb
arpl
jae
data16
dec
popa
jae
add
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
imul
je
push
dec
outsl
je
imul
outsl
outsb
push
add
movsl
add
je
jne
jb
outsb
je
outsl
outsb
jae
insb
gs
outsl
outsb
je
add
dec
outsl
arpl
push
push
add
jo
xor
jb
je
dec
add
je
jns
je
insl
push
imul
outsl
arpl
push
outsb
insb
outsl
arpl
jnp
push
imul
mov
gs
outsl
arpl
fs
js
push
add
imul
jae
insb
gs
outsb
jo
je
add
add
popa
insb
dec
popa
outsb
fs
add
jo
popa
insb
imul
lds
inc
gs
js
je
outsl
fs
jb
arpl
jae
add
outsl
insb
insb
inc
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
add
or
push
gs
push
push
jb
outsl
jb
je
inc
outsl
outsl
jae
add
sti
add
popa
insb
inc
imul
outsl
inc
imul
cwtl
add
outsl
bound
push
imul
inc
gs
gs
imul
daa
add
outsb
fs
imul
jne
gs
add
insl
add
je
jae
jb
gs
jne
je
inc
dec
inc
add
jecxz
inc
outsb
jne
inc
popa
je
inc
outsl
jb
popa
je
push
add
gs
popa
imul
insb
gs
bound
arpl
add
add
outsb
push
jb
arpl
jae
push
add
insl
jo
jb
push
je
imul
add
imul
add
pop
add
outsb
jbe
jb
inc
gs
jne
je
outsl
arpl
add
popf
add
je
outsl
insl
insl
inc
outsl
outsb
imul
push
gs
popa
jae
inc
jb
outsl
jb
add
inc
imul
push
jo
arpl
js
add
gs
outsl
arpl
fs
js
push
inc
fs
rolb
inc
outsl
jae
popa
je
push
imul
insb
gs
imul
imul
gs
gs
jne
arpl
add
xor
inc
imul
push
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
inc
popa
je
insb
inc
jo
inc
js
je
add
inc
popa
je
insb
inc
jo
inc
js
je
add
add
jne
push
jns
je
insl
dec
popa
outsb
addr16
addr16
jb
jne
jae
add
add
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
pop
add
imul
jne
jb
inc
js
add
jne
xor
inc
imul
inc
gs
jne
jb
outsb
je
imul
jns
add
cmp
inc
push
push
imul
jne
push
imul
push
gs
jns
je
insl
push
imul
jae
insl
outsb
je
or
gs
push
dec
fs
insb
push
jb
arpl
jae
jb
fiaddl
push
gs
imul
bound
gs
add
mov
inc
insb
outsl
bound
inc
insb
popa
addr16
jns
inc
gs
outsl
outsb
jae
insb
gs
insb
imul
add
je
imul
bound
gs
add
bound
inc
outsl
jo
inc
imul
add
gs
data16
gs
imul
inc
add
movl
je
push
imul
jne
push
imul
push
imul
push
arpl
fs
popa
imul
je
inc
outsl
outsb
jae
insb
gs
jne
jo
je
add
add
jae
push
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
add
jb
push
push
add
add
jne
push
gs
jne
arpl
jns
gs
add
or
gs
push
dec
outsl
arpl
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
jb
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
inc
jb
gs
imul
outsb
fs
js
je
push
add
pop
add
imul
outsl
jne
arpl
add
inc
gs
gs
jo
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
mov
insl
jo
jns
arpl
insb
gs
imul
inc
js
jb
arpl
jae
arpl
je
fs
arpl
inc
add
fiaddl
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
and
inc
jne
insb
imul
outsl
outsb
add
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
gs
insb
inc
js
arpl
gs
add
add
addr16
arpl
jo
inc
imul
push
dec
outsl
je
data16
arpl
inc
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
mov
gs
imul
test
imul
je
outsl
outsb
push
add
cmc
add
push
jne
jb
push
arpl
insb
gs
imul
push
dec
inc
gs
outsb
jae
popa
outsb
arpl
js
insb
outsl
jb
jb
mov
push
dec
inc
gs
imul
push
jo
arpl
add
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
imul
jne
popa
bound
add
imul
je
outsl
outsb
add
add
push
jne
jb
push
arpl
insb
gs
imul
inc
jb
addr16
jne
jb
inc
imul
inc
gs
imul
add
and
jb
arpl
jae
arpl
je
fs
arpl
inc
js
add
jo
push
dec
inc
jo
inc
popa
jb
gs
popa
add
dec
inc
outsl
jb
popa
je
jb
jbe
add
add
gs
insb
inc
js
arpl
gs
js
add
fs
js
arpl
popa
bound
add
insb
insb
inc
js
arpl
gs
js
add
add
outsb
jbe
jb
outsb
insl
outsb
je
jne
jae
inc
add
add
dec
outsb
jbe
imul
imul
insl
insl
popa
outsb
fs
add
insl
jo
jns
arpl
insb
gs
imul
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
and
inc
jb
addr16
jne
jb
push
outsl
imul
push
dec
dec
outsl
popa
fs
outsl
outsb
insb
outsl
popa
fs
arpl
dec
jbe
jb
popa
jns
fs
je
imul
mov
push
dec
inc
gs
imul
push
jo
arpl
js
add
add
addr16
jne
jb
inc
imul
mov
gs
outsl
insb
fs
outsl
arpl
imul
js
jb
arpl
jae
arpl
je
fs
arpl
push
add
add
je
popa
arpl
jae
arpl
je
fs
arpl
inc
js
add
sub
inc
js
jb
arpl
outsl
outsb
inc
js
add
fadds
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
inc
jb
addr16
imul
lgdtl
gs
insb
inc
bound
je
add
push
dec
inc
imul
jb
outsb
je
add
je
outsl
insb
fs
popa
je
inc
add
mov
push
dec
inc
gs
imul
push
jo
arpl
js
add
push
push
js
arpl
gs
add
gs
imul
add
push
add
arpl
jae
popa
jo
jae
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
dec
inc
push
dec
outsl
je
data16
add
inc
js
jb
arpl
outsl
outsb
push
add
leave
add
inc
gs
popa
insb
insb
outsl
arpl
and
push
push
dec
outsl
je
data16
arpl
push
add
gs
gs
je
jo
outsl
insb
fs
add
push
dec
inc
fs
outsl
push
arpl
je
outsl
arpl
in
push
dec
dec
outsb
jbe
imul
imul
insl
insl
popa
outsb
fs
add
add
push
popa
je
push
jb
jo
jb
inc
outsl
jb
jb
je
inc
add
mov
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
je
popa
arpl
outsl
outsb
inc
js
mov
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
je
popa
arpl
outsl
outsb
inc
add
xlat
add
inc
gs
gs
imul
push
dec
inc
gs
outsl
insb
fs
popa
je
push
add
in
push
dec
dec
jae
imul
popa
bound
data16
imul
push
dec
inc
gs
arpl
dec
jbe
jb
popa
jns
outsb
fs
add
xchg
add
inc
jb
popa
je
push
jb
arpl
jae
jae
jae
jb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
je
push
inc
push
aaa
add
jb
push
je
dec
inc
add
add
jb
inc
push
sbb
push
je
inc
insl
jo
dec
inc
add
push
je
push
je
inc
add
add
jb
push
add
push
je
push
je
dec
push
add
inc
add
jb
je
push
add
add
jb
insl
jo
dec
push
add
push
je
push
je
dec
inc
add
sbb
push
je
inc
insl
jo
inc
add
or
inc
push
add
jb
inc
push
push
dec
dec
push
inc
push
dec
cs
insb
add
outsb
imul
inc
insb
popa
je
inc
add
jnp
dec
outsb
imul
addr16
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
inc
imul
dec
insl
popa
addr16
imul
outsl
jbe
add
push
add
popa
addr16
imul
popa
je
add
pop
add
popa
addr16
imul
ja
outsb
imul
ja
dec
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
add
inc
insb
popa
je
inc
pop
push
push
jb
insb
insb
inc
popa
jb
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
add
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
outsl
jae
cmp
je
inc
pop
inc
outsb
popa
bound
arpl
insb
insb
inc
popa
jb
add
dec
insl
popa
addr16
imul
inc
jb
addr16
insl
popa
add
pop
add
popa
addr16
imul
inc
jb
add
jb
popa
je
push
outsl
outsl
insb
bound
inc
js
dec
add
je
push
dec
dec
popa
outsb
addr16
add
dec
add
popa
addr16
imul
add
add
gs
je
push
je
je
jae
imul
pop
add
popa
addr16
imul
ja
add
add
add
add
add
dec
insl
popa
addr16
imul
dec
arpl
add
dec
insl
popa
addr16
imul
addr16
push
insb
outsl
arpl
add
dec
insl
popa
addr16
imul
jns
add
dec
insl
popa
addr16
imul
addr16
gs
jbe
add
insl
popa
addr16
imul
je
outsl
jns
xor
inc
gs
jb
jns
jb
jo
jb
jns
push
popa
add
add
add
test
push
jb
jo
jb
jns
push
add
inc
add
popa
je
inc
pop
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsb
add
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
insl
popa
addr16
imul
dec
jbe
jb
popa
jns
insl
popa
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
fs
insl
popa
add
inc
insb
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
jb
jo
add
inc
insb
popa
je
inc
pop
inc
gs
arpl
insb
insb
push
popa
outsb
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
insb
popa
arpl
pop
add
gs
je
push
jb
jo
jb
jns
push
popa
add
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
dec
insl
popa
addr16
imul
dec
popa
jae
gs
inc
jb
popa
je
push
je
je
jae
imul
pop
add
popa
addr16
imul
insb
imul
add
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
or
add
add
add
ja
je
je
jae
gs
add
push
add
popa
addr16
imul
addr16
outsl
jbe
add
add
popa
je
inc
pop
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
push
add
add
dec
insl
popa
addr16
imul
addr16
outsb
je
jb
pop
add
popa
addr16
imul
inc
imul
outsl
jb
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
popa
add
popa
addr16
imul
dec
arpl
add
insl
popa
addr16
imul
dec
insl
popa
addr16
outsb
outsw
add
nop
add
imul
imul
push
inc
add
jno
dec
insl
popa
addr16
imul
inc
jb
addr16
jne
jae
jb
insl
popa
add
or
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
add
popa
addr16
imul
dec
insl
popa
addr16
arpl
adc
add
push
add
add
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
add
out
outsb
inc
dec
add
add
add
add
add
add
addb
add
out
outsb
inc
dec
add
add
add
add
add
add
js
add
mov
or
add
add
cmpb
add
out
outsb
inc
dec
add
add
add
add
add
add
push
add
add
outsb
inc
dec
add
add
add
add
add
add
nop
add
add
add
add
out
outsb
inc
dec
add
add
add
add
add
add
mov
or
add
outsb
inc
dec
add
add
add
add
add
add
loopne
add
les
add
add
outsb
inc
dec
add
add
add
add
add
add
or
add
add
add
add
add
incl
add
add
add
enter
adc
add
add
loop
add
add
add
inc
add
jae
arpl
and
imul
add
outsb
add
pop
add
add
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
jb
je
pop
add
add
add
add
push
test
add
add
add
add
incl
add
arpl
add
add
add
add
push
pop
add
add
add
add
incl
add
imul
pop
add
add
add
add
and
add
add
add
add
add
test
add
add
add
xor
push
add
add
addb
add
data16
add
push
add
add
add
add
add
push
pop
add
add
incl
add
add
add
add
add
add
push
pop
add
add
push
add
add
test
add
add
add
popf
add
add
add
addb
add
jb
jb
add
je
and
add
jae
arpl
and
je
jns
jo
add
add
xor
add
add
add
adc
push
pop
add
aam
add
incl
add
add
push
pop
add
aam
or
incl
add
add
je
and
data16
insb
add
and
outsb
add
insl
add
cmp
pop
add
add
add
add
rolb
add
add
addl
add
add
add
adc
push
add
add
addb
add
add
add
add
add
push
pop
add
aam
or
fs
addb
add
insl
add
jb
add
jae
and
add
je
popa
add
xor
add
add
add
push
pop
add
add
add
addb
add
insb
add
je
add
add
insl
add
add
and
outsl
add
and
add
jb
outsl
add
pop
add
add
add
add
push
pop
add
add
add
addb
add
add
add
insl
add
add
and
je
outsl
add
add
jae
add
and
imul
add
jae
and
insb
add
jae
je
pop
add
add
add
adc
push
pop
add
add
add
add
incl
add
add
push
pop
add
add
add
incl
add
jae
ja
outsl
add
add
add
outsl
add
add
je
add
add
add
add
add
addr16
addl
add
add
add
add
or
incl
add
data16
jb
insl
add
add
popa
add
jae
ja
outsl
add
add
xor
add
add
add
add
add
add
add
incl
add
add
incl
add
add
add
dec
or
orb
add
add
push
add
add
add
add
push
add
dec
add
inc
add
push
add
push
add
add
push
add
push
add
push
add
dec
add
inc
add
add
xor
xor
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
push
add
jae
dec
add
jae
je
push
add
add
xor
xor
adcb
mov
inc
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
add
add
incl
add
add
push
or
rolb
add
add
add
incl
add
data16
jb
and
jae
je
popa
add
add
cmp
and
pop
add
add
add
add
add
or
inc
add
jae
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
pop
adc
push
pop
add
add
add
add
incl
add
adc
push
pop
add
inc
add
add
add
incl
add
add
push
pop
add
dec
add
addb
add
add
jae
add
add
add
add
add
add
xor
add
add
push
sbb
loop
xor
push
add
add
add
incl
add
arpl
add
add
add
add
add
add
add
insl
add
arpl
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
add
add
add
add
add
add
incl
add
add
push
or
nop
add
add
addb
add
je
popa
add
add
push
add
pop
add
add
add
add
push
or
cmpsl
add
add
addb
add
jb
jb
add
je
and
outsl
add
add
popa
add
add
outsb
add
push
add
add
xor
add
add
add
push
pop
add
add
add
add
add
incl
add
jae
add
add
outsb
add
add
imul
jae
push
add
add
xor
add
add
add
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
inc
add
inc
add
pop
add
push
add
pop
add
push
add
add
push
add
push
add
add
xor
xor
xor
add
add
add
add
add
incl
add
dec
add
inc
add
dec
add
dec
add
push
add
add
push
add
push
add
push
add
add
dec
add
dec
add
add
xor
xor
aaa
add
add
push
pop
add
add
add
add
add
incl
add
arpl
imul
add
outsl
add
and
jne
jo
add
je
add
add
outsl
add
je
push
add
xor
add
add
add
add
push
pop
add
add
add
add
add
incl
add
pop
add
dec
add
inc
add
pop
add
dec
add
push
add
inc
add
inc
add
inc
add
dec
add
xor
xor
xor
xor
add
add
add
push
pop
add
add
add
add
add
incl
add
add
add
add
add
add
push
sbb
push
add
add
add
incl
add
add
push
pop
add
xor
or
pop
add
addb
add
add
dec
add
pop
add
inc
add
inc
add
dec
add
push
add
add
inc
add
inc
add
inc
add
xor
xor
xor
xor
add
and
add
addl
add
incl
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
and
jo
jb
outsl
add
jns
and
jae
add
jbe
add
pop
add
add
add
push
sbb
sbb
add
add
or
add
incl
add
je
cmp
pop
add
add
add
add
push
sbb
sub
and
or
add
incl
add
je
cmp
pop
add
add
addb
push
inc
add
add
or
add
incl
add
add
add
add
add
or
add
incl
add
add
push
sbb
inc
add
or
add
incl
add
bound
insb
add
and
popa
add
je
push
add
add
popa
add
add
add
add
push
daa
add
add
add
or
add
incl
add
jb
and
outsb
add
insl
add
cmp
pop
add
add
add
add
add
dec
add
add
or
add
incl
add
add
push
daa
add
add
add
or
add
incl
add
jae
ja
outsl
add
add
add
xor
add
add
add
add
add
or
add
incl
add
add
incl
add
add
add
add
or
add
add
add
add
add
add
add
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
popa
add
arpl
add
add
insl
add
insb
add
je
imul
pop
add
add
add
add
add
push
pop
add
add
or
add
incl
add
push
add
add
push
pop
add
add
or
add
incl
add
add
add
arpl
add
add
add
add
or
add
incl
add
jne
push
add
dec
add
add
add
push
pop
add
xchg
add
add
or
add
incl
add
add
dec
add
arpl
imul
add
add
push
pop
add
xchg
add
add
or
add
incl
add
add
add
inc
add
add
add
push
pop
add
fiadds
sub
or
add
incl
add
add
add
add
add
push
pop
add
add
add
add
incl
add
add
mov
add
dec
xor
insb
xor
mov
xchg
xor
xor
xor
xor
xor
xor
sbb
sub
cmp
inc
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
and
xor
inc
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
jo
jle
lea
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
push
cmp
sub
xor
cmp
inc
cmp
dec
cmp
cmp
data16
cmp
jle
test
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
sub
cmp
inc
cmp
push
cmp
cmp
jb
js
jle
test
xchg
cmp
test
scas
cmp
sarb
cmp
in
ljmp
cmp
push
ds
sbb
and
es
xor
cmp
ds
ds
ds
ds
ds
bound
push
jp,pt
cmpb
mov
xchg
ds
ds
movsb
ds
ds
mov
mov
ds
ds
fidivrl
loopne
out
in
ds
ds
ds
or
adc
push
aas
sbb
and
sub
cs
xor
cmp
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
fs
push
jo
jbe
jl
cmpb
aas
mov
xchg
aas
lcall
aas
mov
mov
aas
lret
aas
aas
fdivrl
loop
call
aas
cli
aas
add
add
xor
add
add
push
xor
adc
sbb
push
xor
sub
xor
xor
inc
xor
dec
xor
xor
data16
add
inc
add
mov
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
mov
mov
xor
int3
xor
fdivs
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xorb
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
add
add
or
add
and
js
