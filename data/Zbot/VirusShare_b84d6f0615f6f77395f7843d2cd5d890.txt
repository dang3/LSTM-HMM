mov
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
enter
int3
add
rolb
inc
add
add
fadds
inc
add
add
loopne
inc
add
add
call
add
lock
hlt
add
clc
add
cld
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
inc
add
add
les
add
cmp
xchg
xor
ss
ss
xor
movsl
push
add
add
divl
pop
aaa
xor
pop
xor
bound
mov
aaa
clc
xor
aaa
scas
cmp
scas
cmp
xchg
cmp
cmpsl
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
fidivrl
mov
daa
cmp
cmp
and
repz
xlat
aaa
and
jl
pop
mov
aaa
nop
ds
aaa
fidivrl
jmp
aaa
push
aas
ret
aas
lret
aas
mov
cmp
aas
cmpl
aas
insl
cmp
cmp
cmp
jg
inc
cmp
add
aam
cmpb
aas
test
add
les
add
fidivl
pop
xor
xor
xorl
xor
mov
or
add
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
add
inc
add
push
inc
test
jo
xchg
jbe
add
insb
pusha
jb
ja
inc
jl
add
subb
js
pusha
jb
ja
inc
pop
push
add
mov
dec
pop
popa
ja
sub
outsb
and
inc
les
addr16
sbb
imul
jne
jb
addr16
les
jbe
frstor
outsl
repz
imul
jae
inc
les
jbe
mov
ja
mov
imul
enter
mov
inc
add
add
add
add
add
inc
add
add
add
push
jo
push
je
add
imul
and
add
add
add
das
arpl
and
xor
popa
outsb
insb
les
je
divb
fs
add
fldenv
jae
jno
add
je
arpl
jno
fsubrs
add
jle
add
data16
inc
mov
insl
arpl
add
outsl
popa
xchg
dec
imul
fs
insl
imul
jno
outsb
push
push
push
add
jl
arpl
imul
das
popa
jo
sub
xor
popa
outsb
insb
les
jbe
push
addr16
gs
jae
gs
add
les
pop
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
int3
push
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
jmp
add
adc
push
jmp
movl
add
jge
add
popa
add
add
loop
add
mov
add
or
jmp
movl
jmp
movl
add
test
add
popf
or
add
hlt
std
ljmp
add
pop
or
sbbl
add
insl
or
add
add
pop
or
add
or
add
xor
add
or
add
or
add
pop
add
in
pop
add
fldl
add
fstl
add
in
pop
add
fldl
add
fldl
add
lods
pop
add
lods
pop
add
popf
pop
add
faddl
add
faddl
add
and
add
pushf
add
faddl
add
faddl
add
fcoml
add
and
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
sbb
lods
pop
push
add
sub
add
fcoml
add
faddl
fdivr
decl
fldl
add
faddl
add
faddl
add
mov
pop
popa
pop
std
add
add
fsubl
fmull
add
fcoml
les
jmp
les
stos
add
lds
les
jmp
rolb
pop
rolb
add
add
stos
add
inc
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
lods
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
insl
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
lcall
les
add
add
add
decb
fcoml
fcoms
les
push
add
and
xor
push
push
add
xchg
push
add
mov
add
mov
push
add
add
push
enter
rolb
push
rolb
push
rolb
push
rolb
push
rolb
push
rolb
add
add
jg
enter
rolb
push
rolb
dec
rolb
dec
rolb
dec
rolb
dec
rolb
add
add
add
mov
add
orb
ja
or
orl
add
orb
mov
lar
roll
add
add
add
loope
add
pop
push
add
inc
incb
add
incb
add
add
jmp
adc
add
movl
add
or
add
cld
add
test
add
outsl
mov
add
add
aas
jl
add
mov
add
addl
rorl
ds
add
aas
push
add
ds
add
aas
push
add
aas
push
add
push
add
push
add
aas
push
add
push
add
inc
push
add
cmp
push
add
cmp
push
add
ds
add
push
add
ds
add
ds
add
push
add
xor
add
push
add
sub
add
sub
add
inc
ds
pop
ds
js
add
dec
cmp
mov
add
jbe
add
mov
cmp
nop
cmp
loopne
add
into
cmp
mov
cmp
push
cmp
lods
cmp
stos
cmp
sarb
add
dec
cmp
nop
cmp
push
cmp
sub
add
fidivrl
add
add
add
mov
aas
add
mov
aas
add
xchg
aas
add
jo
add
dec
aas
add
add
xchg
cmp
add
jmp
inc
enter
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
inc
rolb
adc
add
add
arpl
add
jge
add
adc
add
lds
add
popf
test
add
xchg
add
xchg
add
pop
add
and
pop
add
fldl
add
gs
add
jge
add
mov
add
jnp
add
xor
add
adc
add
cmp
add
icebp
or
add
add
add
or
add
imul
add
inc
push
add
ds
add
push
add
push
add
ds
add
ds
add
aas
push
add
inc
push
add
add
add
push
add
push
add
push
add
add
add
add
andb
subb
push
add
push
push
add
push
add
add
sub
add
add
cmpb
add
push
add
loopne
add
cli
push
add
add
add
cli
push
add
sbb
les
add
xchg
pop
push
add
pop
push
add
push
push
add
push
push
add
ds
add
or
out
push
add
add
loopne
add
mov
les
push
add
lcall
les
push
add
and
faddl
add
dec
push
add
push
push
add
push
push
add
add
add
jo
add
faddl
add
loop
add
add
or
rolb
rolb
rolb
cmp
add
adc
rolb
cmp
add
push
cmp
add
scas
cmp
add
cltd
cmp
add
in
rolb
add
add
jns
enter
rolb
cmp
add
pop
cmp
add
add
lahf
add
xor
add
insl
icebp
add
xchg
cwtl
add
or
add
xchg
cwtl
add
mov
js
add
jno
add
js
add
ja
add
xchg
add
cltd
xchg
add
stos
xchg
add
jne
add
dec
ja
add
add
lea
add
decb
add
in
or
sbb
fisttpl
add
or
cmp
or
xchg
rorl
add
sbb
push
add
cmp
add
cmp
add
sbb
add
push
add
push
add
push
add
push
add
sbb
add
cmc
sbb
add
and
add
push
add
and
add
push
add
and
add
and
add
cmp
add
push
add
cmp
add
pop
push
add
and
add
test
add
adc
add
clc
ds
mov
ds
sbb
add
add
add
idivb
add
sbb
add
test
add
mov
out
add
les
dec
add
inc
dec
add
outsb
dec
add
out
add
les
dec
add
cli
dec
add
loop
add
out
add
movsb
dec
add
enter
jp
add
scas
dec
add
push
dec
add
pop
dec
add
push
add
in
add
les
add
add
add
add
add
test
add
test
add
test
add
test
add
test
enter
rolb
dec
rolb
add
test
add
test
dec
enter
rolb
dec
rolb
add
test
add
test
add
test
test
add
test
add
test
add
add
add
test
add
test
add
test
add
test
jmp
or
add
or
push
decl
add
or
add
add
add
or
add
cld
or
add
add
add
add
or
add
mov
add
mov
add
movl
add
orb
jmp
movl
add
or
sti
xchg
or
iret
mov
add
orb
imul
jae
or
cmp
popf
add
add
mov
mov
out
push
lock
push
push
ficoms
test
cmp
push
popf
cmp
iret
xlat
pop
inc
inc
jmp
xor
jae
bound
ret
sbb
add
add
push
pop
dec
repnz
jnp
lcall
pmuludq
adc
fisubs
xor
shrl
adc
std
mov
fistps
cmc
mov
lods
add
and
popa
cmpsl
xor
mov
hlt
ljmp
mov
and
sub
outsl
aas
pushf
add
mov
jnp
js
jae
mov
add
fcmovu
ret
sbb
cmp
insb
addr16
lahf
rcr
jge
lods
fmuls
push
fadds
cli
fwait
clc
xor
les
pop
push
cld
mov
cltd
push
fnsave
call
xor
sub
mov
mov
ja
push
sbb
add
daa
icebp
dec
add
cmc
push
popf
lds
dec
es
cmc
jb
les
imul
cmc
jb
les
arpl
shll
push
cmc
push
cmp
cmc
rolb
enter
push
push
lds
add
hlt
xchg
je
lds
add
jb
mov
inc
xor
lds
dec
add
push
adc
adc
sbb
pushl
cltd
cmp
dec
dec
insl
aaa
movsl
sub
jp
daa
pop
scas
outsl
mov
mov
xchg
jns
ret
lea
xchg
popa
xchg
sbb
mov
xchg
jns
ret
lea
xor
xchg
mov
or
adc
add
pop
sbb
mov
push
aas
add
std
sahf
sahf
scas
outsl
mov
mov
xchg
clc
add
cs
lea
push
fwait
into
adc
jne
add
sub
fwait
les
rclb
pop
xchg
add
pop
or
mov
cld
movntq
push
pop
cltd
scas
scas
inc
and
rclb
cmp
jg
and
jno
mov
cmc
dec
out
push
movsb
pop
lock
outsb
dec
add
add
out
rclb
lock
shlb
dec
dec
jnp
or
int3
adc
add
sub
pushf
push
xchg
jno
int
ds
inc
mov
clc
cld
iret
aad
add
cs
dec
mov
push
mov
add
and
aad
pop
add
stos
lods
or
rolb
add
add
stos
fwait
mov
adc
aad
leave
add
and
mov
test
add
fwait
mov
imul
aad
dec
add
dec
loopne,pn
rcrb
jmp
sub
jns
sarl
pop
in
pop
mov
daa
test
iret
jmp
les
pop
jne
add
add
push
out
rolb
js
push
out
add
add
sub
push
out
ret
add
add
out
add
add
mov
add
mov
add
add
fwait
js
add
imul
add
js
add
add
movb
or
add
add
pop
add
enter
jae
add
movl
add
mov
cmc
add
iret
push
add
lret
jmp
iret
adc
add
lret
jmp
iret
and
add
mov
test
jmp
enter
lret
jmp
iret
std
add
enter
lret
jmp
sub
or
add
add
add
or
mov
fisttpll
mov
in
or
repnz
add
add
or
push
add
add
add
or
lret
add
add
or
stos
add
push
add
xchg
insl
or
ljmp
or
push
add
fiaddl
out
or
or
out
push
fadd
mov
or
or
out
or
out
or
out
or
les
or
out
or
rorl
mov
out
or
add
add
out
or
out
or
les
or
out
or
out
or
out
or
out
or
les
or
add
jmp
pop
add
jmp
sahf
add
jmp
clc
add
add
add
jmp
scas
add
jmp
mov
add
add
mov
fildl
add
jmp
rolb
clc
add
add
jmp
rolb
fiaddl
add
jmp
mov
push
jmp
ret
or
jmp
add
jmp
pusha
push
add
rorb
iret
aaa
add
iret
testl
std
shlb
iret
push
add
iret
pop
add
mov
cli
add
iret
addr16
iret
daa
add
rcrb
jmp
iret
inc
add
rcr
dec
movl
add
mov
testb
iret
push
add
iret
adc
jmp
or
jmp
iret
and
jmp
mov
test
add
inc
add
loopne
insl
add
sub
or
add
add
add
or
add
add
add
or
in
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
daa
add
test
fimuls
add
fimuls
inc
fimuls
ljmp
or
fimuls
sbb
rolb
push
fimuls
jge
fimuls
cmp
les
or
fimuls
sub
fimuls
or
fimuls
dec
fimuls
cli
les
or
add
add
fimuls
adc
ret
iret
add
fimuls
jae
fimuls
xor
fimuls
mov
add
fimuls
arpl
add
jmp
and
jmp
inc
add
jmp
bound
jmp
lahf
add
jmp
push
add
jmp
lahf
add
jmp
repnz
add
add
jmp
lahf
add
jmp
iret
add
jmp
jg
jmp
rolb
add
add
jmp
fildl
clc
add
add
jmp
fildl
add
les
add
iret
push
jmp
mov
or
jmp
mov
jecxz
fld
cld
add
iret
xor
jmp
mov
data16
iret
push
add
mov
mov
fcmovnb
out
add
iret
bound
jmp
mov
add
jmp
mov
roll
dec
ret
sar
jmp
mov
push
add
mov
push
add
popf
xor
popf
add
add
popa
add
and
pop
add
add
add
insl
incb
add
jecxz
sbb
pop
add
add
add
cmp
sbb
rcll
add
std
imul
fldl
mov
in
std
or
in
std
mov
dec
add
add
add
std
push
add
std
loopne
lret
cld
sub
add
add
fimuls
je
fimuls
xor
fimuls
leave
les
or
or
fimuls
test
fimuls
test
fimuls
inc
fimuls
jmp
fimuls
pop
fimuls
sbb
fimuls
cltd
sar
push
fimuls
jl
fimuls
cmp
fimuls
fld
lods
cld
push
fimuls
insb
fimuls
sub
fimuls
mov
fimuls
mov
add
add
fimuls
dec
fimuls
stc
les
or
add
testb
add
jmp
push
push
jmp
add
into
add
jmp
cmpsb
add
jmp
movb
or
push
jmp
sub
jmp
mov
jmp
cmp
jmp
mov
add
into
add
frndint
add
jmp
sahf
add
jmp
into
add
jmp
jle
jmp
mov
or
jmp
mov
add
add
mov
pop
add
into
rolb
js
add
mov
daa
add
into
mov
add
mov
inc
add
into
loopne
fnstcw
incb
jmp
mov
jo
std
sbb
mov
lar
into
mov
jmp
jmp
out
and
jmp
filds
add
iret
addb
dec
add
sti
add
popf
lret
popf
lret
cwtl
lret
lahf
sti
sbb
popf
lret
popf
lret
insl
rol
add
lret
pop
lret
insl
shll
add
addb
lret
sub
sti
add
sbb
lret
sub
sti
cmp
sbb
lret
in
rcl
add
adc
push
sub
in
shlb
or
fdivr
mov
fdivr
dec
fdivrp
repnz
add
fdivrp
push
fdivrp
adc
into
stc
add
iret
or
fdivrp
je
fdivrp
xor
fdivrp
lret
or
fdivrp
and
fdivrp
stos
fdivrp
add
fdivrp
test
fdivrp
inc
fdivrp
ljmp
stc
pop
fdivrp
sbb
fdivrp
lcall
stc
jl
fdivrp
cmp
fdivrp
fcmovb
mov
pop
fdivrp
insb
les
jmp
push
push
jmp
rolb
sti
adc
jmp
mov
add
jmp
mov
idiv
xchg
jmp
push
push
jmp
mov
jmp
addb
sti
out
jmp
cmpsb
add
jmp
movb
sti
xchg
fisttpl
lret
add
jmp
mov
add
jmp
mov
jmp
adc
add
out
pop
add
fistps
add
ficoms
add
iret
jle
jmp
mov
add
jmp
lahf
hlt
add
cwtl
lret
std
cli
mov
push
add
jg
add
jle
add
mov
fs
pop
and
jmp
pop
pushf
add
dec
add
jmp
aas
inc
add
faddl
fnstcw
add
pop
in
add
push
insb
add
mov
dec
add
in
into
cmp
in
iret
faddl
paddd
add
into
insb
add
into
sub
in
leave
mov
add
into
mov
lods
into
dec
add
std
add
xchg
std
add
sahf
std
adc
cld
add
mov
push
add
inc
add
std
add
xchg
std
add
popa
std
and
pop
std
add
dec
std
or
push
std
add
and
addb
std
add
or
std
addb
std
sbb
cld
add
int
pop
aad
add
test
or
lods
or
mov
add
enter
enter
into
or
or
shrb
or
les
add
add
aad
push
in
add
rolb
add
flds
add
loopne
add
cmpsl
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
ljmp
add
add
les
jmp
add
add
call
add
add
call
add
add
out
add
add
out
add
add
out
add
add
jmp
les
jecxz
mov
add
add
add
add
add
jmp
les
add
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jno
or
add
or
roll
add
add
add
or
adc
or
roll
or
push
add
add
add
add
mov
or
cmp
or
fiaddl
or
pop
push
or
lcall
les
push
or
jp
or
cli
add
or
sub
or
push
or
add
add
ljmp
les
or
sub
or
loopne
or
mov
add
call
add
fadds
or
pop
add
les
push
or
mov
or
test
or
sub
or
sbb
or
cwtl
add
les
mov
add
add
in
add
lods
add
add
add
int3
add
inc
add
add
add
popf
add
add
sbb
add
add
aad
int3
add
insl
add
add
popf
add
add
dec
add
add
jge
int3
add
pop
add
add
add
enter
rorb
dec
rorb
push
or
add
or
add
rorb
pop
rorb
sbb
or
add
enter
or
add
or
add
or
add
or
add
fs
or
in
or
mov
or
xor
or
movsb
or
add
or
adc
or
xchg
push
or
and
or
mov
pop
or
loopne
or
add
or
addb
add
or
rolb
add
pop
or
nop
push
or
inc
pop
or
mov
or
mov
or
xor
or
and
or
nop
or
add
or
add
or
add
or
add
or
clc
or
add
or
or
inc
push
or
test
push
or
sbb
or
xchg
push
or
jmp
push
or
flds
or
push
push
or
filds
or
filds
or
pop
push
or
pop
pop
or
jg
or
jg
or
incl
add
incl
or
jg
or
jg
or
incl
or
pop
push
or
pop
pop
or
fildl
or
fildl
or
mov
or
mov
or
and
or
and
or
add
xor
int
mov
add
add
inc
add
add
rolb
add
add
mov
add
push
add
add
rolb
add
xor
int
xor
add
xor
int
xor
add
rolb
add
in
int
add
push
add
push
add
rorb
es
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
rorb
ss
push
add
push
add
rorb
ss
push
add
push
add
or
faddp
or
or
add
add
add
add
add
add
add
or
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
addb
add
add
add
or
mov
or
mov
add
add
add
add
add
add
or
and
or
xlat
push
or
iret
pop
or
lods
add
in
add
pop
les
les
pop
faddl
pop
les
pop
les
pop
les
pop
les
pop
les
pop
les
pop
les
pop
aam
pop
les
add
les
push
pop
enter
rolb
les
pop
loopne
pop
les
add
les
push
or
imul
jmp
or
add
mov
int3
add
enter
jmp
leave
add
jecxz
leave
add
out
add
add
out
leave
add
jmp
add
add
roll
roll
add
add
in
add
add
fiaddl
roll
add
add
testb
add
out
add
add
fadds
roll
rol
add
out
movl
add
movb
in
add
out
int
add
int3
add
loope
or
or
into
push
or
into
push
or
rorl
jecxz
invd
repz
or
leave
invd
loop
adc
loop
adc
repnz
or
enter
ret
or
fnstsw
or
in
lret
or
in
or
fnstsw
or
in
lret
or
in
or
fdivrl
or
or
call
or
or
test
prefetch
adc
or
stos
adc
or
imul
push
imul
push
mov
or
imul
push
imul
push
sub
or
bndldx
or
cvtpi2ps
or
psubd
or
add
mov
adc
shll
adc
ret
mov
adc
shll
or
ret
lods
add
aad
adc
mov
adc
adc
mov
pop
push
fidivrl
adc
sbb
sbb
lods
aad
sbb
add
pop
sbb
mov
sbb
add
add
mov
sbb
cmpsb
sbb
scas
sbb
scas
sbb
fiadds
add
into
pop
lock
push
lock
push
loopne
scas
push
rcrb
scas
push
rcrb
fistps
sbb
sbb
sbb
sbb
pop
enter
rcrb
pop
mov
sbb
pop
test
iret
pop
loopne
pop
and
sbb
pop
rcrb
negl
enter
rcrb
pop
mov
sbb
pop
test
iret
pop
loopne
pop
and
sbb
pop
rcrb
mulb
leave
sbb
and
sbb
and
sbb
aam
sbb
int3
movsb
sbb
add
sbb
cld
movsb
sbb
hlt
movsb
sbb
in
movsb
sbb
in
sbb
fsubl
pop
int3
in
pop
add
sbb
cld
rcrb
pop
jmp
lret
icebp
iret
push
or
mov
or
or
test
or
stc
mov
adc
mov
adc
mov
adc
mov
adc
aad
adc
aam
adc
aam
adc
rcll
push
cmc
mov
movhps
movhps
push
pop
adc
clc
push
pop
adc
jmp
adc
fistl
adc
sti
adc
sti
adc
ljmp
pop
mov
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
les
sbb
les
sbb
les
sbb
mov
mov
add
scas
rcrb
sbb
rcrb
sbb
add
sbb
add
sbb
mov
sbb
mov
sbb
scas
rcrl
sbb
rcrl
sbb
add
sbb
lods
add
les
add
les
add
les
add
les
add
les
add
les
add
rolb
add
add
incl
les
add
add
add
add
fwait
add
add
fwait
add
add
dec
add
add
or
add
jmp
les
ljmp
add
out
add
add
jecxz
les
add
les
add
add
fildl
les
or
add
add
enter
rolb
jmp
adc
add
iret
add
add
xlat
add
add
out
std
jmp
xchg
add
movl
add
out
in
mov
arpl
add
cld
repnz
mov
sub
clc
sarl
pop
jno
xlat
xchg
ret
or
jl
bound
mov
sbb
jne
mov
test
ret
fcomps
xchg
insl
sub
hlt
loop
roll
lods
and
daa
outsl
pusha
std
mov
pop
add
fldl
arpl
mov
or
dec
pop
imul
aad
mull
xchg
add
aad
dec
mov
shl
and
movsl
aaa
pop
mov
mov
sarb
les
fcoms
jl
push
dec
icebp
fsub
jbe
ficoms
mov
add
arpl
shll
mov
jns
lods
movsb
mov
add
test
adc
lods
inc
push
add
dec
inc
fdivl
stos
xor
lds
rorl
aad
and
jb
lret
mov
insb
jle
pop
cld
mov
jne
mov
movsb
push
or
add
add
xor
sub
xchg
ljmp
push
or
mov
mov
xchg
ret
pusha
lds
sub
sarl
fwait
lods
cmp
adc
lahf
mov
mov
aaa
testl
sbb
add
gs
repz
fisubrl
popa
jnp
mov
insb
repz
shlb
scas
lcall
lods
nop
and
das
cmp
scas
mov
insl
add
xor
cld
sti
cmpsl
mov
add
mov
or
mov
and
addr16
std
lret
sbb
and
sti
daa
mov
out
rcrb
iret
sub
dec
mov
outsl
fadd
fdivl
push
jae
mov
jmp
ret
insl
out
aaa
ss
cmc
gs
xorl
adc
jle
rcrl
add
fnsave
std
pusha
jecxz
scas
popa
xchg
arpl
outsb
or
leavew
or
loopne
or
cld
xchg
add
lock
or
add
imul
orb
sbb
add
add
or
rorb
mov
fbld
fnstcw
mov
cmp
pusha
lds
and
fidivrl
fbstp
dec
int
mov
bound
mov
repz
or
ljmp
dec
add
pop
cmpsb
pusha
jae
addr16
xchg
add
add
subb
popa
call
andb
shrl
push
mov
or
pushf
or
lar
ss
mov
sub
scas
test
mov
aas
mov
push
into
rclb
xor
f2xm1
shll
pop
in
ret
mov
cwtl
add
icebp
xchg
sub
or
lcall
les
imul
xor
push
fists
jecxz
adc
jo
jbe
fidivs
test
mov
pop
cli
sahf
pop
xchg
cmpsb
adc
xchg
or
mov
dec
mov
cmp
mov
xor
mov
out
leave
daa
mov
xchg
imul
mov
daa
cmpsb
ret
add
add
add
add
or
dec
sahf
and
lods
and
dec
mov
rcl
lods
stc
rcr
packsswb
inc
cltd
push
xor
movsb
xor
js
nop
jbe
xor
jns
mov
sbb
jns
xchg
mov
iret
adc
into
and
mov
es
jmp
add
add
sbb
sub
push
add
add
push
add
pop
mov
sbb
in
xor
das
sub
insl
jne
repz
pop
push
and
fcmovne
movsb
sbb
rcl
mov
cli
push
shl
imul
mov
int3
sbbb
adc
dec
or
icebp
cmc
js
add
add
int
adc
aaa
loop
lcall
sbbb
adc
pop
das
mov
push
test
loop
sbb
inc
nop
dec
add
aas
ljmp
std
inc
mov
cmp
xchg
shl
insb
stc
xchg
xchg
lds
enter
aad
imul
lods
jo
add
add
inc
push
xor
sar
push
iret
stc
in
sbb
das
sti
inc
or
or
into
push
jo
or
mov
dec
xchg
xor
push
sbb
mov
pop
push
clc
insb
lahf
shll
jl
rolb
loop
push
ljmp
lods
pop
xchg
inc
mov
inc
sub
popf
insb
loope
enter
into
ljmp
add
add
js
pushf
cmpsl
arpl
enter
mov
xor
lods
xchg
inc
push
loop
js
and
sbb
and
sbb
push
outsl
outsl
pop
fs
jge
cmp
pop
adc
sbb
out
scas
add
sub
inc
pop
push
inc
jle
cmp
mov
adc
cmpsb
adc
bound
in
dec
iret
stos
addr16
push
mov
push
inc
mov
xchg
add
push
jl
or
sub
ja
mov
inc
adc
or
arpl
sbb
rcl
andl
loopne
fsubr
sub
xor
into
push
adc
push
push
pop
fwait
push
dec
lcall
add
cmp
xchg
jae
out
and
leave
int3
mov
mov
inc
push
mov
test
jl
cmp
pop
mov
adc
cmp
pop
mov
lcall
sahf
adc
outsl
movsl
inc
ljmp
jne
lcall
mov
add
test
cs
jno
push
pop
push
test
sub
enter
stos
or
add
mov
andb
scas
aas
in
push
mov
test
hlt
mov
dec
addr16
xchg
fnstenv
inc
jge
push
push
int3
xor
adc
imul
or
not
inc
gs
push
pop
call
stc
jns
mov
inc
ret
test
hlt
mov
pop
lds
ss
sbb
and
pop
shl
scas
sbb
xchg
sbb
lea
jmp
pop
jnp
mov
lock
pop
cwtl
xor
pop
mov
das
push
mov
jno
and
add
shll
xorb
push
pop
push
loopne
dec
outsl
mov
and
jb
das
subl
jmp
hlt
gs
mov
push
call
scas
lods
push
push
cmpsb
cmp
add
orb
loop
test
adc
mov
ss
pusha
stos
and
and
movsb
dec
xchg
lods
stos
push
jl
into
jns
mov
xchg
das
mov
push
popa
sbb
add
subb
push
cmp
push
and
ja
jne
aaa
add
and
ljmp
mov
xchg
test
jbe
imul
jmp
sar
in
fsubrs
adc
mov
add
ljmp
aas
push
vpshufd
in
pop
fdivr
pop
pusha
add
xchg
push
jl
repnz
inc
negl
or
outsb
pop
cmp
xchg
lods
or
add
rolb
mov
add
inc
add
inc
or
xchg
leave
push
out
in
mov
testl
mov
movlps
add
push
or
adc
fdivrs
inc
pop
iret
sahf
es
in
or
mov
loop
ljmp
fists
and
into
lock
fldcw
out
xor
mov
loopne
mov
cmp
mov
icebp
std
fadds
popf
jp
or
dec
fdivr
iret
gs
add
cmpsl
jge
mov
jmp
test
push
add
jecxz
pushf
fwait
add
jmp
push
pop
nop
sbb
fcomps
sahf
scas
jmp
fs
xor
cmpsb
ss
loopne
call
aad
test
add
out
lret
leave
push
out
lods
and
in
cltd
std
add
push
pop
xor
icebp
pusha
mov
fcomi
sub
adc
xchg
dec
stos
push
xor
pop
mul
push
sbb
aaa
adc
sbb
mov
add
mov
decl
jg
in
jle
hlt
test
lret
mov
or
pop
lret
jns
repnz
outsb
data16
outsl
inc
pop
lahf
insb
lds
imul
pop
sbb
xchg
aam
hlt
out
xchg
imul
jb
out
mov
popa
outsb
out
bound
mov
or
jecxz
insb
shll
sub
dec
aaa
ret
xor
pusha
mov
dec
aad
mov
dec
add
xor
dec
into
lcall
push
add
sub
inc
inc
insb
roll
into
push
or
add
orl
sbb
push
lret
push
jecxz
ja
hlt
shlb
push
push
aas
cmp
adc
mov
mov
pop
ret
pop
pop
jge
pop
sbb
cmpsb
pop
cltd
jns
pop
sahf
imul
addr16
insl
pop
push
mov
pop
sub
fxtract
loopne
pop
mov
test
jecxz
fidivl
push
leave
arpl
add
hlt
jns
xchg
cmp
arpl
andl
xchg
mov
in
sbb
loope
imul
addr16
or
cld
push
sti
or
sbb
xchg
sub
out
imul
fsubl
add
outsb
add
iret
in
mov
dec
inc
mov
inc
or
add
dec
xchg
lea
js
mov
cmpb
cmc
mov
cltd
loop
rol
xchg
rcll
sbb
mov
out
pop
cmpsb
mov
mov
mov
xor
mov
or
mov
movsl
jb
les
sbb
daa
dec
fwait
ret
push
out
ret
mov
mov
adcl
add
int3
sub
adc
int3
lahf
cld
pop
shrb
rolb
add
arpl
xchg
pop
or
popl
push
push
xchg
mov
inc
movsl
xchg
mov
popa
popf
sahf
aad
pushf
jg
popf
dec
fstps
lcall
aam
cld
push
xchg
cwtl
mov
xchg
sub
mov
dec
into
lea
test
imul
mov
jnp
outsb
mov
orb
cld
cmpl
cmpl
sbb
mov
xchg
push
loopne
repnz
test
add
movsl
stos
sbb
call
scas
jg
insl
lods
ror
lods
jne
repz
dec
insb
xor
jecxz
jbe
in
test
movsl
popa
stos
cmc
mov
ja
jle
js
mov
mov
lcall
je
xorb
xor
mov
out
mov
cmp
mov
pushf
sbb
mov
push
call
aad
push
scas
add
les
into
or
add
add
int3
jae
fstpt
cmp
xchg
ficomps
test
xor
out
mov
sub
rorl
mov
sbb
arpl
jle
mov
fbld
cmc
bound
sbb
movsb
in
cltd
adcb
mov
lds
sbb
imul
push
add
into
add
lods
xor
and
fstpt
add
add
or
jnp
test
in
push
xor
push
mov
gs
lret
push
popf
sub
pop
inc
fdivr
ljmp
std
andb
cltd
mov
ja
mov
fsubr
notb
insl
repz
mov
sbb
mov
jne
dec
fists
adc
movsl
aas
lods
cmp
pop
xor
add
add
js
fld
push
shrb
add
sbb
jo
dec
in
and
cld
cwtl
mov
pop
xor
adc
pop
dec
stos
mov
icebp
cwtl
xchg
bound
lahf
lock
xor
jnp
push
fsubrp
iret
scas
enter
gs
add
mov
pop
jbe
jecxz
cwtl
insb
neg
jb
dec
insb
arpl
rorl
dec
sbb
sub
jns
adcb
dec
mov
push
jno
add
arpl
push
mov
add
arpl
out
fistl
mov
pop
mov
push
push
sbb
xor
gs
stc
iret
sub
jo
cmp
cwtl
xor
sub
sbb
sub
add
or
add
add
sub
repz
sbbl
inc
lret
push
pop
cmc
and
xchg
dec
bnd
test
leave
pop
test
fstpt
and
imul
cli
in
xor
invd
mov
jecxz
pop
call
outsb
pushf
push
addb
call
jb
lods
aaa
shl
inc
or
in
push
insl
sbb
das
mov
aas
aam
pop
xlat
push
push
pop
jno
mov
adc
push
or
jmp
inc
loope
out
inc
xchg
test
mov
jp
in
in
sbb
xor
inc
movsb
rclb
sub
imul
xchg
or
dec
mov
cld
roll
dec
icebp
addr16
push
cmpsb
shll
mov
pop
lahf
jge
mov
xor
lahf
lret
std
insl
or
sub
mov
inc
es
xchg
inc
pop
jbe
cmp
xchg
out
out
cli
out
dec
mov
out
rclb
aaa
cmp
adc
inc
les
rcl
mov
aad
fwait
sbb
out
sahf
jnp
gs
pushl
sub
mov
add
add
enter
sbb
and
testb
std
cmp
mov
cmpb
bound
and
jo
jle
enter
push
cmpsb
adc
in
push
outsb
imul
out
xor
mov
int3
je
inc
add
cli
adc
stc
fists
push
jnp
rolb
mov
mov
xchg
sbb
fmuls
push
fnstcw
mov
fiadds
xchg
lods
jnp
cs
cmp
imul
mov
xchg
loop
stos
stos
aaa
test
and
mov
sbb
jecxz
ja
pop
call
mov
icebp
mov
subb
aam
mov
xor
dec
cmpsl
shrb
add
dec
xorb
enter
pop
pop
cmp
adc
fdiv
test
adc
sub
mov
les
fwait
test
call
add
sbb
inc
repz
popa
push
fidivl
push
pop
sarl
das
xchg
enter
mov
mov
data16
pop
xchg
outsb
scas
fists
add
fwait
outsb
mov
js
or
xor
mov
mov
sbb
xor
or
test
push
push
mov
sub
inc
mov
movsl
xchg
xor
xchg
lods
mov
mov
sbb
jl
push
mov
or
nop
push
mov
pop
pop
loope
push
aam
add
pop
pop
jne
addr16
test
mov
mov
ss
daa
pop
cmp
sub
es
adc
lea
mov
and
outsb
or
cwtl
mov
movsb
mov
mov
and
pop
pop
add
js
cltd
push
inc
xchg
xchg
mov
sub
mov
inc
fildl
add
add
loope
dec
xor
push
add
push
rcrl
ds
lods
sbb
push
cmp
xor
sbbb
cltd
mov
js
and
imul
add
dec
pushf
mov
lods
mov
rcrb
mov
inc
adc
out
test
movsl
loopne
jg
inc
xchg
call
ss
into
adc
mov
add
pop
sbb
movsl
adc
xchg
lret
push
sti
xor
add
sbb
fnstsw
sub
dec
out
add
ficoms
add
bound
in
fdivrs
add
nop
xchg
in
or
sar
push
mov
jmp
cmp
jl
dec
pop
fistps
add
add
push
jle
push
dec
and
arpl
ss
into
cmp
je
sub
loop
in
movsl
add
xorl
aas
fsubrl
jmp
sub
sbb
mov
and
xchg
stos
add
mov
out
add
movl
adc
sub
pop
xchg
aam
add
add
loopne
in
js
stc
ret
leave
dec
cs
out
stos
test
push
push
cmp
inc
iret
pop
pop
mov
or
movsb
xor
mov
add
push
push
jbe
shrl
pusha
out
mov
rolb
and
mov
es
iret
and
jle
popl
add
ja
or
add
call
add
pop
push
jnp
push
dec
fs
mov
add
sbb
std
add
xor
arpl
sub
cmpsb
xor
mov
movsl
sti
mov
push
ret
jae
pop
push
fwait
fmull
mov
mov
ljmp
adc
xchg
ss
xchg
pop
fbstp
xchg
xlat
dec
xchg
lret
jle
ljmp
les
bound
test
push
mov
scas
dec
jnp
cmpsb
push
mov
test
mov
xchg
xchg
mov
idivl
sub
lret
mov
rclb
sub
mov
pusha
mov
add
pop
lods
sbb
imul
mov
or
nop
pop
test
cli
test
add
nop
xor
incl
adc
cmp
scas
sub
cmp
dec
mov
mov
pop
frstor
arpl
aam
dec
loopne
cmc
push
mov
ficompl
outsb
pop
xor
lcall
ja
mov
fimull
push
add
cmp
pushf
add
pop
les
sub
in
jge
call
aas
cld
loope
repz
jb
or
xchg
in
and
cmp
push
inc
mov
push
jne
pop
add
mov
mov
inc
dec
scas
ja
dec
sahf
or
push
iret
jnp
pop
fst
push
repnz
dec
push
push
xchg
xchg
add
sub
ss
push
push
push
push
in
ljmp
jp
loop
dec
pop
add
shll
fbstp
decb
daa
call
mov
add
les
sbb
in
adc
test
and
inc
sbb
inc
pop
les
pop
mov
cwtl
in
mov
push
bound
jnp
insb
sarb
stos
cmpsl
cmc
loop
push
mov
add
push
stos
repnz
jno
out
dec
je
imul
sbb
fsts
rcrb
movsb
sbb
sbb
mov
loop
pop
aad
loopne
icebp
inc
and
das
movsl
movsb
rcrl
stos
jne
mov
fistpl
and
mov
mov
negb
lods
leave
and
sub
xchg
jge
lock
mov
mov
mov
jae
mov
xor
xchg
les
or
adc
mov
jno
in
cmp
jno
incl
add
add
dec
mov
and
cld
dec
add
das
lret
xchg
sbb
add
cmpsb
in
mov
fcmovb
xor
testb
push
test
test
xor
jg
mov
pusha
push
lret
pop
push
mov
outsb
adc
dec
adc
shlb
aad
cmpsl
cli
xchg
rolb
xlat
add
push
out
pop
xor
test
mov
adc
cli
and
mov
loopne
dec
jp
imul
cmpsl
pop
enter
fdivs
scas
addr16
jnp
mov
hlt
push
std
movsb
and
iret
sub
mov
cmp
dec
xor
popf
jl
ja
mov
in
adc
push
std
scas
adc
icebp
popf
rcrb
cmp
ret
adc
dec
movsl
xchg
xchg
mov
or
mov
mov
dec
cmp
push
push
data16
scas
cmpb
imul
sti
pop
jg
xor
mov
notl
repz
add
mov
inc
roll
stos
and
jl
sbb
decb
cmp
aas
jmp
xchg
add
popf
lcall
cmp
popf
ficompl
jo
push
adc
repnz
xor
rcll
pop
xchg
negl
jo
inc
leave
dec
jmp
push
jp
test
imul
out
mov
loop
insb
enter
dec
jb
loop
add
mov
sub
and
jmp
xchg
out
sahf
ret
cmpsb
add
sbb
mov
xchg
jne
cmp
sub
mov
das
sbb
ds
jle
jg
xchg
and
nop
add
icebp
lret
stos
inc
xor
repnz
cmp
shl
inc
inc
xorl
cmpsb
jl
dec
mov
dec
mov
jge
xchg
push
or
or
ss
mov
lahf
pop
inc
idivl
cmp
cmc
mov
test
idivl
cwtl
xchg
xor
add
and
inc
sbb
in
jb
clc
cmpsb
sub
xchg
mov
sarb
xor
and
bound
rcpps
dec
mov
jle
cmpsl
mov
xor
jp
xlat
pop
jae
push
insb
dec
call
je
or
push
fstpt
mov
sub
incl
pop
ja
push
sahf
pop
enter
pop
jns
in
dec
imul
add
scas
jmp
jge
sub
mov
inc
cmpsl
stos
mov
call
filds
ret
hlt
orl
mov
mov
test
mov
add
and
mov
adc
cmp
dec
cmc
push
jne
lret
pop
fbld
ljmp
cmp
jg
repz
add
popa
in
push
jo
jbe
mov
cmp
aad
ficoms
hlt
xchg
mov
in
mov
jecxz
jmp
cwtl
push
repz
xor
repnz
int3
ds
cmpsb
jb
xor
push
cld
sbb
out
sub
pushf
adc
loope
arpl
loopne
mov
lret
sahf
std
clc
imulb
movsb
stc
fcom
xchg
cld
sbb
cmc
cmp
xchg
js
shrl
mov
lret
loope
int3
xor
and
cwtl
mov
inc
jnp
push
test
cmovbe
cmp
or
sbb
jle
call
outsl
stos
add
mov
mov
mov
add
or
out
or
mov
lret
pop
pop
leave
into
sub
mov
cmpsl
fwait
and
gs
rcr
pop
je
bound
dec
or
pop
push
hlt
xor
jae
xchg
xchg
lret
push
mov
ror
in
out
imul
lods
xor
rcr
ss
filds
lock
cmp
fmull
sti
pop
fisubl
mov
movsl
adc
inc
push
push
push
add
flds
dec
cs
pop
inc
inc
pop
leave
stc
mov
inc
push
xchg
inc
or
xorps
push
push
nop
cmp
dec
push
jg
dec
sbb
ljmp
xlat
cwtl
mov
add
mov
lret
movsb
movsl
repnz
jecxz
xor
and
mov
add
add
cs
stc
stos
sub
sbb
daa
andb
sub
xchg
hlt
sub
dec
and
xchg
pop
aad
rol
call
mov
xchg
push
mov
leave
pop
mov
lcall
insl
nop
jecxz
pusha
ret
xchg
pop
inc
mov
lcall
movsl
push
or
fwait
pop
stos
repnz
je
orb
divb
aad
fcmovne
cld
mov
movb
int3
nop
call
pop
repnz
mov
data16
push
mov
data16
push
rcll
mov
mov
insl
pop
push
lds
repnz
pop
jmp
stos
push
sahf
ucomiss
cld
sbb
dec
inc
inc
in
scas
ja
enter
xchg
and
mov
xchg
adc
sub
cli
push
cmp
int
adc
mov
xor
pop
xchg
cmp
idivl
nop
and
cmp
in
push
push
fdivs
fsubl
inc
lcall
sub
jecxz
xor
mov
sbb
sub
adc
add
add
out
daa
rep
sub
push
dec
fbstp
push
int3
fsubrp
cmp
mov
out
lods
test
stc
lahf
mov
jns
mov
adc
les
cmp
insl
pop
cmp
sarl
fstl
add
adc
mov
sti
outsb
sub
cmpsl
ds
imul
push
outsl
loope
ljmp
rol
into
ljmp
add
add
mov
adc
jl
and
cmc
clc
add
jecxz
mov
push
jmp
int3
pop
lret
hlt
adc
sbb
push
mov
call
or
testl
cmp
fisttpll
xor
push
mov
xchg
js
gs
jmp
gs
or
je
inc
and
xchg
xchg
jmp
dec
nop
cmpsl
mov
stc
jnp
mov
xchg
repnz
sbb
je
push
test
out
sub
clc
nop
repz
mov
popf
inc
dec
cmp
fsubrs
ds
push
push
aaa
or
fs
ret
bound
cltd
push
push
inc
jp
lret
mov
roll
jb
daa
push
fmul
pop
popa
xchg
jb
pusha
pop
cltd
xor
mov
ret
addl
xor
jmp
and
xchg
iret
dec
mov
jp
in
data16
xor
fcmovnu
pop
insl
cmp
in
sub
int3
xchg
cmp
mov
test
and
push
fisttps
jmp
aam
subl
push
stos
arpl
add
add
test
mov
add
es
sbb
adc
ljmp
daa
mov
iret
and
xor
pop
aaa
cmp
dec
mov
rol
push
xor
or
pop
in
loop
in
xchg
test
push
cmp
mov
xchg
dec
pop
fidivl
sub
inc
jecxz
xchg
add
add
ljmp
dec
sub
mov
xchg
xor
jmp
outsb
lcall
cmpsb
adc
shrb
mov
sbbl
and
jnp
mov
pop
jne
ss
out
xlat
adc
add
aas
pushf
sbb
cmpsb
notl
js
into
scas
clc
inc
test
add
add
cmp
and
adc
pop
xor
sbb
test
inc
out
add
dec
das
ret
inc
pop
cmpsl
adc
data16
push
mov
inc
mov
cmp
push
fwait
xchg
push
out
clc
xchg
pop
rcrl
or
dec
mov
inc
decl
cmp
push
adc
shl
jb
iret
push
int3
xchg
pop
out
stos
jno
and
push
loopne
repz
xchg
mov
movl
pop
test
mov
and
cs
aas
feni(8087
mov
je
sbb
mov
jl
ss
loop
add
add
sti
sub
in
adc
cmp
das
leave
lods
and
stos
mov
ja
aaa
pop
sahf
daa
xchg
jno
mov
adc
inc
vminpd
sbb
jo
lock
jb
push
lods
mov
and
pop
cs
mov
mov
xlat
dec
frstor
outsb
mov
mov
in
cmp
pop
pop
jge
imul
sysexit
cmp
push
sub
fadds
movsb
insl
clc
inc
loop
mov
dec
sub
cmp
dec
dec
mov
cwtl
adc
mov
out
lret
dec
scas
cs
testb
push
inc
movsl
ret
sbb
sub
xchg
xchg
shlb
push
sarb
add
mov
xlat
mov
outsl
or
push
ja
jmp
jne
inc
fldcw
fnstenv
ljmp
add
std
gs
call
cli
popa
inc
insl
lahf
add
addr16
shr
mov
xchg
push
or
pop
push
repz
pop
rorl
xchg
cli
test
addr16
loope
sti
adc
mov
mov
pop
add
adc
in
mov
data16
dec
sti
add
lcall
aas
mov
icebp
cmpsb
ja
xchg
or
lods
cmp
test
ret
mov
add
add
sarb
push
sub
sub
and
inc
sti
jle
in
mov
mov
sahf
jne
and
xchg
sub
int3
iret
jl
dec
insb
xchg
jb
fnstenv
pop
gs
inc
cli
std
mov
jg
inc
es
fs
cld
xlat
jns
mov
or
lea
cmp
leave
sub
jp
jge
insl
inc
sbb
inc
ljmp
dec
xor
repnz
movsb
push
add
lods
jge
add
mov
aam
testb
pusha
andl
add
mov
mov
fcmovnbe
imul
movsl
scas
adc
mov
jne
add
add
scas
dec
loopne
test
cwtl
dec
imul
cmp
sbb
adc
xor
adc
jl
mov
pop
sahf
sbb
vpmacsww
or
ljmp
add
std
add
incl
loop
add
faddp
push
add
out
pop
adc
add
or
add
pop
cmp
sahf
or
into
or
outsb
or
add
push
add
lods
pop
add
popf
pop
adc
lea
adc
lods
pop
adc
popf
pop
adc
pushf
pop
adc
mov
adc
outsl
pop
adc
lahf
pop
adc
sahf
pop
adc
mov
adc
imul
push
add
pop
add
pop
add
leave
add
add
sub
add
push
pop
push
add
pop
add
add
insl
add
std
add
popa
fldl
rol
add
pop
std
add
pop
or
enter
lods
pop
and
xchg
pop
roll
pop
add
les
les
les
adc
outsb
add
les
adc
js
adc
push
add
les
pop
les
les
push
sbb
ja
sbb
pusha
add
add
add
imul
inc
les
out
in
pop
in
in
loope
call
push
repz
and
inc
lock
loopne
and
clc
adc
push
fmull
out
ljmp
add
jmp
les
imul
xchg
inc
xchg
add
lret
inc
mov
les
push
std
ljmp
add
fcmovnbe
add
add
and
imul
add
pop
or
out
pop
loope
push
adc
or
movl
add
enter
shl
int3
xor
add
sub
sbb
add
add
xor
add
movl
add
movl
add
adc
add
or
add
inc
add
repnz
mov
lds
into
jnp
std
add
pop
inc
add
std
ds
add
add
add
add
sub
orl
add
mov
dec
inc
mov
add
add
inc
dec
inc
shll
imul
inc
dec
inc
leave
pop
jo
out
bound
lret
dec
jno
jecxz
dec
inc
shlb
insb
std
ljmp
inc
add
inc
add
inc
add
roll
in
xlat
inc
add
flds
xor
inc
add
flds
frstor
add
les
add
addl
ljmp
les
add
les
add
add
pop
fnsave
lret
jns
icebp
dec
push
out
repz
insl
inc
les
inc
les
jb
hlt
adc
jb
les
les
inc
les
jb
hlt
jno
les
insl
inc
les
lds
les
les
add
push
mov
add
les
rorl
les
ret
mov
roll
les
sti
add
add
outsl
jge
add
jecxz
les
out
les
repnz
add
jecxz
les
bnd
add
loopne
les
divb
add
add
add
clc
jb
add
loopne
les
add
testl
add
enter
add
add
enter
mov
add
enter
xchg
add
add
add
add
ja
add
leave
add
add
leave
add
add
movl
add
aaa
push
add
movl
add
push
push
add
enter
push
push
add
enter
in
testl
add
testl
add
testl
add
testl
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
add
push
testb
test
add
and
add
jle
add
pop
cmc
add
mov
add
inc
cmc
add
mov
icebp
jb
les
add
loop
add
stc
add
add
push
add
jb
les
jb
les
jb
les
add
shll
jmp
jb
les
jb
les
add
in
jno
les
add
mov
jno
incb
add
incl
add
add
add
sub
les
push
add
add
lds
les
les
les
roll
les
ret
add
fwait
add
add
lcall
add
sub
add
test
add
add
push
add
add
xor
outsl
les
lods
outsl
les
lods
outsl
les
mov
les
add
movl
add
repz
add
movl
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
movl
add
movl
add
xlat
add
incl
add
add
push
add
add
xlat
add
inc
add
add
fadds
add
add
push
fadds
add
add
add
fadds
add
add
inc
xlat
add
or
add
fiaddl
jle
inc
add
add
add
add
aaa
add
add
add
add
jnp
jnp
jg
pop
add
add
add
flds
pop
add
add
cmp
jae
pop
add
movl
popa
pop
lds
add
sbb
ffree
sahf
add
xchg
jl
sbb
push
lds
add
lds
add
lds
add
lds
or
add
add
and
sbb
xor
sbb
pop
add
lds
adc
sub
add
adc
push
lds
pop
lds
add
cmpsb
add
cmp
push
lds
add
lds
add
lds
add
lds
lds
sbb
add
mov
roll
add
add
add
add
jbe
cmc
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
mov
push
cwtl
add
push
mov
add
push
movsl
add
mov
or
lods
lret
cmpsl
ret
dec
lret
sbb
add
add
and
push
lret
testl
cmp
ret
mov
add
lret
clc
add
lret
in
add
add
rolb
sub
add
add
lret
das
add
ret
lret
lret
roll
sbb
sbb
adc
xlat
add
ret
mov
lret
leave
ret
lret
add
or
add
or
add
inc
add
or
add
or
add
add
imul
or
ret
add
add
pcmpgtw
xor
fs
xor
add
dec
fs
xor
repz
mov
xor
cmpsb
xor
movsb
xor
stos
xor
fs
nop
fs
andl
shlb
fs
xor
mov
xor
cmpsl
xor
add
test
les
lods
mov
add
xchg
fadds
mov
xlat
add
hlt
roll
hlt
mov
add
aam
add
aam
add
aam
add
aam
add
mov
add
mov
add
mov
add
mov
add
xchg
adc
add
xchg
daa
add
xchg
sbb
aad
xor
fdiv
sub
fcomi
add
fdivp
cld
add
aam
add
aam
add
aam
add
aam
mov
jmp
adc
mov
fcoml
mov
fists
pushl
adc
lods
incl
add
add
push
dec
or
mov
or
movsl
or
cmpsb
or
cmpsl
or
mov
or
mov
or
pushf
or
in
or
out
or
fisttps
push
fmuls
xor
ljmp
sbb
adc
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
mov
movb
mov
les
test
leave
add
movl
push
inc
inc
push
dec
inc
aas
push
sbb
mov
sbb
mov
sbb
mov
add
add
pop
push
add
pop
push
add
pop
push
add
arpl
inc
arpl
inc
arpl
arpl
xor
pop
add
arpl
inc
arpl
dec
bound
sbb
add
arpl
or
add
arpl
and
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
push
bound
add
bound
add
add
add
bound
add
bound
add
bound
add
mov
push
shrb
dec
enter
shrb
enter
shrb
xor
mov
xor
test
inc
enter
shlb
aaa
rclb
rolb
cmp
scas
cld
cmp
cmpsl
cld
cmp
enter
sarb
enter
sarb
enter
rclb
xor
rclb
enter
shlb
ss
rclb
dec
enter
mov
cmp
jge
or
icebp
or
dec
or
mov
or
loope
pop
xlat
or
std
rorb
or
std
or
std
test
sar
mov
sar
lods
or
std
lods
or
add
or
std
rorb
test
leave
or
std
ljmp
std
in
ja
movsl
or
cmpsb
or
pop
std
aad
push
std
scas
or
scas
or
mov
es
sub
cmp
push
push
sub
dec
and
add
lea
dec
or
mov
add
add
xchg
add
mov
mov
xchg
iret
mov
mov
mov
jnp
stos
add
stos
add
lods
add
add
jne
ds
dec
add
dec
add
mov
xchg
add
mov
ja
sub
js
add
adc
add
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
mov
add
adc
add
adc
push
rsm
add
mov
aas
cmpxchg
dec
cmpxchg
dec
movzbl
dec
movzwl
cmp
mov
dec
lgs
adc
adc
add
enter
movl
mov
mov
or
std
pop
rol
or
incl
ret
or
push
or
pop
or
push
or
or
gs
lea
mov
nop
push
or
push
add
mov
and
orb
loope
or
mov
out
or
fwait
out
or
sahf
cmpsl
sbb
mov
sbb
fwait
or
daa
xchg
or
daa
mov
daa
test
daa
jl
lahf
daa
sub
daa
sub
daa
sub
daa
es
daa
and
daa
and
daa
ss
and
or
and
or
daa
adc
or
rorb
sub
or
add
add
daa
pushf
or
mov
push
add
or
or
xchg
or
and
or
and
or
and
mov
ja
mov
or
dec
mov
or
dec
into
inc
into
and
push
mov
std
es
into
cmc
es
mov
sbb
push
into
lahf
and
into
sahf
and
mov
cltd
and
int
and
int
es
and
xlat
mov
sub
ror
pop
daa
mov
pop
and
into
add
dec
mov
or
and
or
add
or
and
or
and
or
and
or
pop
or
and
push
and
push
and
or
and
or
add
add
or
rorb
and
or
movsl
or
and
adc
mov
sub
mov
sub
lret
or
and
or
and
pop
and
subps
and
and
daa
movups
sbb
ret
and
imul
and
insl
push
sbb
insb
push
sbb
les
sbb
in
or
movsb
ja
xor
or
adc
mov
sub
iret
test
into
or
jmp
int3
or
loope
or
loop
or
in
or
test
add
sbb
xor
push
mov
inc
or
cwtl
or
sahf
or
mov
lcall
in
or
jmp
lahf
or
push
xchg
or
and
or
and
or
pop
jno
shll
jo
or
push
or
add
xchg
or
and
or
sub
popa
and
or
and
or
and
or
and
or
add
add
and
or
and
or
cmpsl
or
and
or
add
ret
xor
pop
mov
xor
mov
xor
test
xor
mov
das
pop
mov
cs
add
cmp
push
sarl
pop
inc
lret
cmp
cmp
mov
aaa
pop
inc
lret
ss
cmp
gs
sbb
add
add
arpl
sbb
bound
adc
mov
pop
pop
dec
pop
pop
icebp
ret
loopne
insb
pop
jecxz
imul
int
or
mov
or
push
dec
incl
push
dec
incl
push
cli
incb
cmc
decb
push
add
or
pop
incl
push
idiv
or
adc
or
push
mov
or
push
decl
cmp
call
push
das
decl
push
into
adc
mov
push
push
mov
adc
movsl
sbb
je
sbb
ja
pop
push
xchg
sbb
sar
push
mov
push
push
mov
sbb
sub
popf
or
ret
and
stos
or
mov
or
mov
xchg
or
lret
sub
test
sub
mov
or
mov
push
or
lret
xor
adc
xor
cli
or
icebp
or
mov
or
lret
cmp
sbb
cmp
repz
lret
inc
ret
inc
mov
add
pop
xchg
iret
pop
mov
movb
add
pop
or
pop
add
pop
cld
add
pop
std
add
pop
xchg
add
pop
stc
add
adc
jp
adc
add
pop
pop
add
pop
clc
add
icebp
add
cli
add
add
pushf
add
popf
add
or
adc
or
adc
or
adc
or
adc
or
add
add
adc
or
adc
inc
mov
rdpmc
xchg
int
xor
mov
adc
xchg
int
xor
lds
js
les
jnp
xor
xor
leave
xor
xor
lret
xor
int
xor
mov
xor
mov
mov
xor
ret
xor
int
xor
int
xor
mov
mov
sub
mov
and
mov
mov
push
xor
cld
pop
xor
or
sub
pop
xor
or
sub
pop
xor
pop
xor
bound
dec
or
dec
or
pop
or
push
or
adc
test
bound
test
add
or
adc
or
adc
pop
mov
ljmp
adc
adc
mov
into
pop
mov
roll
adc
add
mov
add
aad
add
aad
add
aad
add
mov
pop
mov
mov
pop
shll
pop
insl
cmc
mov
jno
add
add
lea
js
mov
jg
imul
aad
pop
test
jno
xchg
js
lea
xchg
jmp
aad
lock
push
stc
mov
push
test
movsb
jp
push
lds
lock
jle
mov
in
and
addr16
dec
and
inc
and
and
push
and
add
sbb
and
and
and
inc
stc
inc
mov
inc
stc
jo
xchg
pop
mov
stos
adc
mov
pop
stc
inc
mov
pop
stc
inc
mov
pop
stc
inc
jle
cwtl
jge
enter
and
inc
mov
xbegin
mov
dec
lret
add
sbb
dec
movb
jns
or
dec
cs
dec
mov
test
lea
mov
rorl
mov
dec
mov
rorl
inc
rorl
int
dec
cmc
jmp
rorl
in
dec
dec
lods
test
gs
dec
popf
test
lea
dec
or
rorb
jge
dec
mov
cld
dec
or
dec
jmp
movl
add
movl
add
movl
add
sbb
out
and
sub
daa
sub
in
repnz
xor
pushl
aaa
add
add
add
bound
dec
das
addr16
imul
outsl
outsl
insl
cmp
sbb
ja
add
or
bound
or
addr16
imul
add
shll
lods
xor
fldcw
ja
lds
jnp
jno
jl
pop
or
add
add
insl
or
add
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
rorl
arpl
dec
lcall
fs
push
dec
pop
push
dec
dec
push
push
inc
dec
dec
push
cmp
xor
sub
and
sbb
adc
or
or
or
add
cld
repnz
cld
push
jmp
hlt
cld
into
stc
fldl
lret
dec
in
rorl
push
lret
dec
aam
ret
dec
int3
push
mov
dec
mov
dec
stc
fldl
lret
dec
movsb
push
xchg
dec
pushf
push
mov
push
orl
jnp
test
dec
jl
imul
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
pop
push
add
pop
push
add
insl
push
add
insl
push
add
pop
push
add
pop
push
add
sub
push
add
sbb
push
add
sub
pop
add
sbb
add
sbb
add
in
push
add
in
push
add
faddl
add
faddl
add
in
push
add
in
push
add
faddl
add
faddl
add
lods
add
add
add
pushf
add
add
add
pushf
add
add
push
add
pop
push
add
pop
push
add
pop
push
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
pop
add
les
add
add
jmp
les
jmp
les
jmp
les
jmp
les
jmp
add
add
jmp
add
add
add
int3
add
sbb
mov
add
jecxz
test
add
lret
jae
add
sbb
repnz
add
jnp
aad
pop
je
push
add
incb
inc
sbb
add
add
sbb
lds
mov
add
shl
std
xlat
lds
cmc
xbegin
add
fadd
add
movl
add
and
cmpl
lds
push
sar
adc
add
or
add
incl
add
add
sar
stc
push
lds
js
incb
in
push
lds
inc
shl
in
movb
out
add
movb
scas
add
add
roll
pop
add
add
add
lods
rolb
daa
add
add
add
add
rolb
addl
inc
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
mov
or
pop
ja
cmc
add
inc
les
adc
es
les
add
les
inc
call
ja
les
adc
ljmp
les
je
les
add
les
inc
les
inc
fldl
inc
les
adc
xchg
adc
sbb
loop
inc
les
jae
les
push
push
les
je
fadds
inc
les
sti
jbe
push
test
add
pop
add
push
jb
mov
push
call
ja
push
insb
add
sbb
add
fldl
mov
push
ss
add
add
add
add
add
xlat
add
add
mov
outsl
test
outsl
test
iret
outsl
test
scas
outsl
test
add
enter
xor
add
or
dec
xor
add
adc
add
movb
enter
hlt
lds
cmp
hlt
lds
mov
add
lds
lods
enter
aam
add
sbb
jge
lds
fwait
enter
mov
add
or
xor
repnz
enter
push
add
enter
pop
lds
add
pop
or
sbb
add
mov
add
add
add
push
pop
add
mov
add
or
add
mov
add
mov
add
mov
add
or
sbb
push
add
sub
add
xor
or
stc
mov
add
or
add
push
or
fnsave
or
add
push
add
add
jp
or
cmp
les
or
add
add
dec
jae
les
jae
les
insb
inc
cli
add
inc
vandnpd
fisubrs
jecxz
sub
inc
insl
inc
les
or
cmp
les
xor
dec
imul
sbb
std
add
inc
les
add
push
imul
mov
inc
les
outsb
inc
les
insl
inc
les
and
jae
mov
add
out
insb
test
xlat
insb
add
lcall
push
sahf
add
add
mov
insl
add
and
mov
sbb
push
sbb
add
sub
roll
add
push
dec
add
add
add
add
mov
add
add
aam
ret
insb
test
add
lock
pusha
lds
sbb
stc
insl
lds
mov
pop
lds
push
adc
movsl
sub
sbb
xor
rcrb
cmp
jmp
add
out
lds
mov
or
test
or
mov
rclb
cltd
faddp
add
adc
mov
lar
lds
scas
adc
in
lds
add
add
lods
inc
add
lods
inc
add
scas
inc
add
or
add
inc
add
push
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
inc
add
push
add
add
dec
lods
inc
add
add
add
add
add
add
sbb
mov
push
les
push
fiadds
push
les
add
add
add
insb
gs
les
push
les
les
gs
les
gs
les
mov
or
mov
or
mov
inc
les
push
or
shlb
or
les
or
fisubs
or
lret
add
inc
les
inc
mov
test
dec
mov
ret
add
ds
add
sub
rolb
add
add
faddl
rolb
add
add
adc
add
add
add
inc
add
add
sub
mov
aam
pop
mov
mov
mov
add
push
add
adc
insl
lds
scas
adc
cmc
lds
mov
lds
in
sbb
add
enter
and
call
add
and
and
and
movl
add
add
lds
add
data16
enter
data16
movl
add
lar
and
add
leave
add
and
add
mov
fs
add
fs
add
add
add
fs
add
add
add
fs
add
push
add
inc
add
inc
add
cmpsb
inc
add
and
sub
add
add
push
add
add
add
mov
or
test
cmp
andl
inc
add
add
cmpsb
inc
add
push
add
in
or
add
inc
les
pusha
inc
les
push
or
lods
pop
inc
les
or
test
inc
les
or
mov
inc
les
add
les
or
adc
inc
sti
add
les
pusha
inc
in
add
les
inc
call
addr16
les
pop
les
inc
les
pusha
inc
les
arpl
testl
adc
les
pop
bound
dec
add
add
clc
add
add
add
aas
bound
das
bound
xor
add
dec
bound
das
bound
sti
bound
lret
bound
iret
bound
test
into
add
hlt
add
add
xchg
add
add
jmp
les
add
add
add
mov
jp
mov
dec
je
mov
mov
or
ficoms
jecxz
jb
inc
mov
popf
stc
xchg
clc
adc
mov
test
xchg
mov
icebp
dec
aam
sarb
inc
popf
jb
in
cmpsb
test
mov
and
jge
and
add
scas
mov
rcrb
icebp
fst
clc
or
mov
sbb
mov
jns
add
inc
mov
push
mov
gs
pslld
jbe
sub
testl
fucom
rcr
push
cld
sub
push
pop
sbb
xchg
pop
scas
or
jecxz
mov
xchg
and
inc
push
insl
cmpsl
mov
pop
mov
xor
popf
xchg
mov
inc
les
addr16
xchg
mov
or
repz
xchg
cltd
lret
rcll
adc
inc
lcall
xor
shl
repz
jmp
and
sub
add
add
les
add
xchg
add
int3
or
add
add
add
repnz
int3
or
add
jecxz
add
lods
add
les
push
add
rolb
les
add
jmp
add
les
add
sbb
add
decb
add
add
ljmp
push
ljmp
or
add
push
ljmp
push
jmp
add
pop
jmp
inc
or
add
movb
add
movb
add
or
inc
pop
jmp
add
push
out
movsl
out
push
or
push
or
push
or
push
or
push
leave
or
push
or
add
or
push
lds
add
lret
call
enter
les
add
add
decl
fnstsw
adc
aam
adc
int
adc
lds
shll
mov
cmp
xor
xor
cmp
push
stos
shll
mov
cmp
je
xor
pop
mov
cmpsb
pusha
test
andl
add
add
insb
add
jbe
ja
jb
jnp
outsb
jg
sub
mov
xchg
mov
adc
cwtl
fwait
stc
lcall
add
mov
stos
mov
scas
mov
mov
mov
fnstcw
mov
in
lret
test
add
add
iret
rcl
ret
aad
xlat
fstpt
out
jecxz
adc
out
add
ljmp
xor
mov
sub
mov
and
mov
sub
add
mov
dec
adc
xlat
pop
or
fistl
iret
inc
adc
ret
cmp
and
inc
call
sub
idivl
xor
out
pusha
hlt
cmp
cmpsl
dec
pushf
gs
inc
test
lahf
jo
insl
jae
mov
ja
lods
jne
je
jns
adc
addl
mov
jge
sahf
adc
lcall
fsts
mov
mov
test
orl
pop
mov
pop
xchg
push
xchg
push
xchg
pop
cltd
push
popf
dec
lea
inc
xchg
dec
gs
popa
sub
insl
push
pop
aas
imul
aaa
jno
jns
jge
insl
das
jns
jno
inc
push
inc
daa
inc
or
dec
cmp
dec
adc
push
push
push
pop
push
sbb
adc
dec
fisttpll
mov
daa
in
cltd
sbb
std
in
pop
in
stc
lock
cmc
hlt
aaa
cmc
icebp
call
das
std
jmp
movl
add
movl
add
movl
add
rolb
jmp
movl
add
movl
add
movl
add
fldl
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
cld
pop
insl
add
add
add
pop
add
add
add
insl
add
add
std
add
stc
cld
xchg
cld
pop
sub
add
add
add
add
clc
cld
inc
xlat
incl
shlb
jnp
add
les
add
sbb
add
sbb
add
sbb
add
getsec
dec
pop
aaa
inc
pushl
cmp
add
les
add
sbb
add
sbb
add
dec
add
sbb
add
les
add
sbb
add
sbb
add
incl
add
add
add
les
add
sbb
add
add
sbb
add
sbb
add
sbb
add
add
jmp
les
ljmp
add
jmp
les
ljmp
add
jmp
inc
push
out
rorb
fists
enter
les
jmp
scas
sidtl
scas
pop
stc
adc
pop
fsts
pop
fsts
inc
push
jmp
scas
sidtl
scas
pop
stc
adc
pop
fsts
pop
add
mov
add
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
sbb
or
add
or
add
adc
in
and
add
add
movsb
adc
out
and
add
add
int
inc
add
or
std
jmp
adc
mov
add
jge
inc
add
adc
fs
pushl
inc
add
add
lea
std
pushl
inc
add
add
dec
or
out
les
inc
les
out
sub
inc
les
testb
xchg
pop
inc
les
add
lds
inc
les
push
inc
les
add
in
inc
les
add
adc
out
lds
inc
les
out
cmc
push
inc
les
add
in
inc
les
add
adc
in
les
inc
les
sbb
adc
les
les
add
dec
sbb
add
sti
sbb
add
in
les
aam
les
or
les
or
les
or
les
or
les
iret
adc
add
into
adc
add
int
les
add
pop
push
int3
adc
add
adc
les
add
les
adc
les
add
pushw
add
gs
add
xlat
les
les
les
xlat
and
les
and
les
sbb
sub
inc
xlat
les
sbb
sub
xor
les
sti
in
std
and
add
add
sub
adc
sub
inc
xlat
les
fsubl
les
mov
mov
add
add
mov
add
fld
add
roll
add
adc
add
inc
add
add
insl
adc
popa
adc
add
adc
add
adc
add
adc
push
adc
add
adc
pop
add
test
inc
add
add
mov
inc
add
add
movsb
adc
cs
mov
inc
add
add
add
inc
add
add
hlt
adc
pop
and
inc
add
add
mov
inc
add
and
add
filds
les
inc
repnz
les
inc
les
add
lock
les
inc
les
inc
out
filds
les
inc
add
xchg
adc
insb
jecxz
lds
inc
les
add
cmc
adc
mov
add
in
inc
les
adc
push
adc
imul
inc
les
adc
xchg
add
adc
inc
loop
add
add
add
xor
les
and
les
adc
les
inc
loop
add
ss
add
and
adc
add
lret
loope
add
lret
add
leave
loope
add
enter
adc
xchg
inc
adc
add
add
push
mov
les
loope
add
add
mov
add
push
add
ror
add
push
add
push
add
push
add
sub
add
ror
add
push
add
sub
add
sub
add
cli
add
add
cli
add
add
mov
add
mov
add
ror
add
enter
sub
add
cld
inc
add
sub
pushl
add
jge
inc
add
add
insl
testb
sti
add
jge
inc
add
testb
cli
add
cmp
cli
add
sub
sub
add
add
sub
add
inc
add
or
add
add
or
add
or
add
push
or
add
mov
pinsrw
inc
les
adc
mov
pinsrw
inc
les
inc
les
pop
inc
les
pop
inc
les
pop
inc
les
pop
inc
les
pop
inc
les
pop
inc
les
pop
inc
les
inc
les
push
inc
les
push
inc
les
push
inc
les
inc
adc
les
pop
out
add
add
add
pop
out
add
and
add
jb
les
popa
in
add
push
in
add
xchg
les
jbe
les
gs
add
push
in
add
mov
sti
and
xchg
xor
add
and
add
add
add
adc
les
dec
mov
add
les
dec
mov
les
dec
mov
add
mov
add
add
add
xlat
les
andb
mov
les
xchg
and
mov
pushw
add
aaa
push
add
xlat
les
inc
es
add
es
add
es
add
out
add
les
cwtl
out
add
mov
add
pop
and
add
add
aam
inc
add
and
add
add
aam
inc
add
and
add
hlt
inc
add
and
add
hlt
inc
add
adc
push
stc
add
pop
adc
inc
adc
add
inc
add
add
push
repz
add
repz
add
repz
add
repz
add
add
push
repz
add
repz
add
in
loop
aad
inc
in
loop
in
inc
jmp
add
cmc
cmovae
lock
add
lds
inc
icebp
out
add
aad
inc
out
out
add
in
inc
out
loop
cmc
cmovae
add
add
push
loopne
jae
adc
gs
arpl
inc
les
call
adc
arpl
incl
adc
pop
loopne
xor
inc
les
jmp
push
adc
push
loopne
adc
inc
les
incl
jbe
inc
les
sti
or
les
sbb
les
sbb
les
aas
loop
add
add
add
loop,pt
add
sbb
adc
push
sbb
les
ret
loope
add
mov
les
mov
adc
push
nop
loope
add
loope
add
mov
les
movsl
loope
add
add
aam
add
add
inc
aam
add
add
xor
add
mov
add
push
add
aam
add
aam
add
enter
push
add
mov
add
gs
add
aam
add
push
add
jae
add
push
add
push
add
sub
add
sub
add
xor
add
add
add
push
add
cmp
add
add
add
push
adc
std
in
push
inc
add
add
add
movsb
adc
add
and
add
adc
add
and
add
add
aam
inc
add
adc
add
adc
add
add
test
inc
add
add
inc
add
adc
jbe
add
push
adc
imul
inc
add
jno
add
push
hlt
inc
les
inc
les
sti
inc
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
xchg
sub
in
subl
pushl
add
les
add
lds
add
lds
add
lds
add
lds
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
rolb
pop
enter
rolb
pop
enter
rolb
pop
enter
rolb
pop
enter
rolb
pop
enter
rolb
pop
enter
rolb
pop
enter
rolb
pop
enter
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
fadd
add
loope
add
mov
push
add
mov
push
add
les
in
mov
les
in
jb
std
and
add
jbe
std
adc
add
jo
std
rclb
loope
push
add
push
daa
add
fs
add
daa
daa
add
push
adc
add
add
inc
add
daa
std
call
add
ds
jmp
std
call
add
adc
inc
cmovo
frstor
add
xchg
adc
add
add
in
inc
add
adc
add
adc
std
call
adc
add
std
jmp
std
incl
add
add
adc
add
std
incl
jecxz
les
inc
les
lock
les
add
jne
inc
les
loopne
les
inc
les
jecxz
adc
inc
les
add
inc
les
idiv
repz
inc
push
jmp
out
inc
les
loopne
aad
inc
les
out
inc
les
loopne
cmc
out
inc
les
add
les
call
dec
and
inc
les
pushl
hlt
inc
les
ret
push
add
les
adc
les
add
les
shl
les
loope
pop
mov
xchg
mov
repnz
lahf
clc
xchg
add
jecxz
inc
icebp
xchg
xor
xchg
and
push
push
stc
loope
add
fsub
les
xchg
push
xor
push
push
mov
icebp
push
push
add
insb
ret
add
push
push
std
rclb
add
push
ret
add
es
add
and
ret
add
and
add
add
add
and
ret
add
sbb
std
mov
notb
add
xlat
adc
add
aam
add
mov
add
mov
add
xchg
enter
adc
add
xor
std
jmp
std
call
adc
std
incl
add
movsl
sbb
call
std
jmp
add
sbb
call
add
sbb
incl
std
call
add
sbb
std
call
add
sbb
incl
std
call
std
jmp
sbb
add
std
call
sbb
add
std
incl
idiv
mov
hlt
inc
les
jnp
hlt
inc
les
imul
inc
shl
lcall
hlt
inc
idiv
dec
push
hlt
inc
in
cmp
inc
clc
idiv
sub
inc
idiv
sbb
inc
decl
push
hlt
inc
jmp
hlt
inc
cld
idiv
jmp
hlt
inc
les
fcmovnb
repz
les
idiv
lret
aam
inc
les
repz
les
out
cmc
repz
les
inc
testb
hlt
mov
pop
out
push
push
mov
jnp
das
out
push
push
hlt
imul
icebp
push
push
dec
repz
adc
push
push
inc
iret
dec
adc
ret
mov
out
adc
aad
add
cmc
xchg
mov
xchg
add
sti
adc
repz
xchg
cmc
xchg
inc
cmc
xchg
jmp
in
add
add
mov
add
mov
add
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
movl
jmp
add
add
movl
jmp
movl
jmp
movl
jmp
movb
loop
add
loop
add
loope
add
repnz
loope
add
loop
add
add
xor
inc
add
sbb
pop
sub
pushl
add
add
inc
add
sub
add
add
movsb
sbb
fldt
add
mov
inc
add
and
add
add
je
inc
add
inc
add
adc
add
add
inc
add
adc
add
and
inc
add
add
xor
inc
add
add
test
add
mov
inc
aad
inc
les
lock
les
add
mov
call
xchg
idiv
adc
inc
les
lock
les
lock
les
lock
les
lock
les
lock
les
inc
les
lock
les
lock
les
lock
les
lock
les
inc
xacquire
xor
push
push
mov
mov
and
push
push
mov
mov
push
dec
rclb
push
dec
hlt
orl
repnz
push
dec
hlt
jae
and
push
push
dec
hlt
arpl
adc
push
push
mov
push
cmpnleps
push
and
icebp
xchg
mov
repz
xchg
icebp
xchg
add
adc
ret
add
mov
xchg
mov
inc
xlat
push
std
nop
aad
add
aad
add
mov
add
push
std
and
push
std
adc
push
std
inc
xchg
ret
add
push
std
xor
add
push
std
and
add
pushw
std
adc
add
push
ret
add
xor
add
xor
add
push
std
nop
adc
add
push
std
rclb
push
adc
std
mov
ret
mov
std
jmp
std
pushl
std
incl
add
hlt
adc
add
in
inc
add
xor
inc
add
pop
std
incl
inc
add
adc
add
movsb
adc
add
mov
inc
add
inc
add
adc
std
pushl
add
jmp
add
std
sysenter
adc
std
adc
idiv
lret
push
cmc
inc
les
mov
fs
lret
jne
inc
shl
mov
into
jecxz
aad
inc
in
jecxz
in
inc
lock
cmc
hlt
inc
iret
jecxz
kandnw
lret
jnp
hlt
inc
jmp
hlt
inc
in
idiv
pop
cs
inc
les
decl
hlt
inc
les
add
push
hlt
inc
les
add
gs
inc
les
add
jne
inc
les
ret
add
mov
xchg
mov
in
add
inc
in
add
dec
in
lds
testb
dec
in
lds
testb
dec
in
lds
testb
or
mov
push
pmulhw
xor
push
push
push
in
or
testb
or
testb
int3
out
or
cmc
xchg
mov
xchg
add
mov
add
or
xchg
and
add
cli
movl
mov
movl
mov
xlat
or
nop
fld
add
or
inc
mov
or
sbb
mov
std
fstps
or
sbb
xchg
or
sub
ja
std
xor
add
jbe
std
and
add
add
add
movl
add
ss
mov
movl
jmp
add
std
pushl
inc
add
std
incl
inc
add
std
pushl
inc
add
std
jmp
inc
add
add
xor
inc
add
add
or
inc
add
add
add
int
std
incl
add
add
add
pushf
add
add
popf
jo
ljmp
add
lea
lcall
mov
jmp
or
cmp
sbb
pop
push
mov
cmc
enter
scas
iret
lock
aas
aaa
pop
cmp
push
xchg
fidivs
push
lds
pop
popa
test
jae
cltd
sub
int3
add
mov
iret
lods
add
add
mov
lahf
cmp
je
dec
add
jo
cmp
idivb
lcall
fwait
jg
push
mov
xchg
call
test
movsb
leave
idivl
pop
mov
ret
nop
lahf
lahf
jg
gs
mov
stc
repnz
adc
scas
jle
sbb
shlb
or
int
nop
mov
and
or
add
add
call
sbb
shlb
popf
xchg
lea
out
sbb
inc
mov
clc
adc
pop
xor
popf
pop
inc
cs
or
lods
dec
lods
icebp
mov
and
push
or
xor
in
pop
pushf
repz
push
rol
pop
add
test
push
mov
mov
scas
scas
add
fs
add
adc
enter
sbb
sbb
mov
repz
xlat
dec
push
sti
adc
xor
popa
adc
rcl
fisttps
add
fcmovnu
jno
adc
cltd
sbb
jl
mov
bound
xor
punpckldq
imul
pop
adc
fwait
sbbl
into
and
add
add
aas
xchg
or
scas
cmp
bound
sbb
dec
mov
ret
dec
pop
ror
insb
insl
loop
and
add
gs
fistpll
pop
fldl
jo
jo
out
int3
push
push
xchg
pop
dec
mov
cmp
int
int
dec
sbb
pop
shrb
mov
pop
add
add
dec
outsl
sub
std
dec
cmp
sub
int
lds
mov
xchg
jno
scas
dec
into
into
push
mov
cmpsl
enter
fdivrs
les
leave
jmp
sbb
sti
pushf
repnz
or
xchg
nop
fwait
lea
ljmp
call
jnp
flds
push
fnsave
mov
pop
iret
fwait
int
into
stos
int
iret
mov
inc
push
inc
outsl
sbb
push
sbb
mov
fistpll
pop
lret
dec
dec
das
loop
dec
mov
into
dec
mov
into
imul
into
jnp
movl
imul
mov
mov
add
cs
stos
lock
aam
xor
not
mov
cmpsl
ss
aam
ss
sar
mov
mul
sub
jae
shrb
add
add
test
push
outsl
aam
ss
pop
ss
dec
cmp
jle
sbb
adc
cs
xchg
ret
cmc
inc
jle
jg
adc
lds
mov
aad
cmp
aad
cmp
aaa
cmp
mov
add
cmp
push
int3
fwait
or
inc
iret
push
xor
ficompl
movsl
sbb
pusha
cmc
jb
xor
jp
xor
jb
xor
adc
adc
pop
cmp
or
jbe
xchg
xor
sbb
xor
stc
push
outsb
pop
out
pop
hlt
loop
push
clc
inc
cltd
dec
jns
es
sub
jmp
xchg
xchg
xor
add
add
aad
xor
aad
xor
ja
or
sbb
and
into
fimuls
mov
stos
push
push
mov
jnp
adc
inc
xor
icebp
shlb
adc
xchg
mov
fsubrl
and
xchg
das
clc
push
xor
loopne
inc
shl
xor
rcl
adc
icebp
shll
mov
out
push
inc
push
inc
mov
dec
pop
mov
les
cli
add
hlt
test
xchg
fisubl
mov
mov
cmp
sarl
lahf
lcall
mov
hlt
ljmp
dec
pop
std
rolb
int
sti
inc
int
repz
int
fistl
adc
push
adcb
filds
ret
call
add
pop
sub
int
movsb
adc
int3
add
enter
enter
enter
mov
adc
mov
lret
and
iret
lret
dec
cmp
sub
jnp
int3
aaa
cmp
aaa
int3
xchg
cmp
pop
int
mov
xchg
stos
loopne
imul
fdivrl
popa
pop
cld
or
pop
lret
addr16
dec
cmp
das
cmp
dec
popf
jo
cs
popf
cwtl
or
xor
ja
pop
movsl
mov
scas
cmp
lret
add
dec
cmp
pop
ficoms
lcall
mov
sbb
xchg
notb
lods
cmp
jle
cmp
mov
cmp
orl
fisttpll
cmp
frstor
push
and
dec
xchg
mov
and
or
mov
test
stos
cmp
movsl
or
mov
in
std
popf
call
ljmp
push
inc
add
stc
subl
push
cmp
jno
pop
cmp
add
js
sarb
movsl
por
lcall
jecxz
dec
in
cmp
stos
mov
scas
je
mov
sbb
and
mov
inc
add
outsb
out
cmpsl
mov
cmp
sbb
add
add
inc
add
jle
add
push
add
sarb
les
add
inc
jl
les
add
jle
les
jle
les
jle
les
addl
push
addl
dec
addl
sub
add
les
inc
les
add
repz
les
mov
popf
add
add
mov
push
add
movsl
lea
jg
add
lahf
test
add
cwtl
mull
add
cmp
test
push
cmp
les
mov
xchg
push
xchg
add
add
addl
push
jo
les
addr16
add
push
add
add
add
push
push
js
faddl
xchg
testl
dec
add
add
push
dec
mov
insb
dec
push
popa
jno
jmp
mov
add
add
inc
add
incb
incb
in
inc
add
lds
fldl
fiadds
rolb
iret
inc
add
mov
inc
add
clc
inc
add
adc
mov
inc
add
add
sar
inc
add
inc
add
mov
jl
pop
rclb
enter
shrb
enter
mov
push
xor
add
push
add
sahf
add
roll
jno
ret
add
add
mov
insb
add
add
mov
push
arpl
mov
jno
lods
push
add
outsb
push
imul
push
add
insl
add
dec
add
insb
add
push
arpl
push
push
add
add
xor
inc
add
inc
add
imul
push
insb
add
add
jle
dec
add
inc
push
jae
push
push
push
les
les
push
xor
add
add
incb
add
and
jns
push
add
leave
add
les
push
cmp
les
dec
les
push
cmp
ret
add
sbb
dec
les
push
dec
movb
les
push
cmp
mov
push
add
sahf
push
inc
les
std
inc
les
std
inc
les
std
inc
les
bound
scas
bound
mov
in
inc
les
inc
aad
inc
shlb
les
sbb
daa
sbb
or
add
add
jmp
les
push
adc
add
mov
stos
test
xchg
stos
add
shrb
add
rcr
add
test
roll
cltd
scas
add
xchg
add
add
add
add
repz
add
out
les
jnp
test
add
or
xor
cmp
lods
cli
aaa
add
shlb
enter
shlb
enter
rclb
enter
pop
add
movl
add
data16
enter
shrb
enter
aam
cmp
add
add
add
add
movl
add
bound
xchg
aaa
add
inc
add
jno
add
inc
add
pop
inc
add
sub
inc
add
imul
jno
inc
outsb
add
insl
imul
jno
jno
jo
jo
add
mov
imul
jno
test
fs
jo
add
add
add
pop
inc
imul
inc
dec
push
call
insl
imul
jno
mov
dec
mov
gs
add
add
pop
imul
jbe
mov
and
outsl
push
pop
jo
push
imul
in
add
les
arpl
pop
addr16
andb
in
add
les
push
xchg
cmp
mov
dec
pop
outsl
xchg
xor
gs
push
add
jno
pop
shll
sub
js
pop
pop
cmp
hlt
aas
les
icebp
inc
leave
add
les
repz
les
cmc
inc
les
aas
les
inc
les
repnz
repz
pop
aas
les
les
arpl
xchg
add
add
push
push
jecxz
les
icebp
add
add
filds
les
call
add
add
in
add
add
mov
mov
test
sub
xchg
and
sti
add
outsb
adc
push
jb
push
push
scas
inc
or
inc
les
mov
add
add
add
movl
dec
movsb
or
cmpsb
negl
sahf
lea
popf
xchg
inc
inc
movsb
movl
add
movl
add
pop
inc
jmp
xchg
inc
push
daa
xchg
inc
inc
jmp
jp
push
cmp
add
add
add
push
add
inc
dec
sub
push
add
add
add
pop
dec
add
add
push
aas
inc
inc
es
push
push
insl
pop
add
adc
inc
sub
add
and
push
inc
insb
pop
inc
dec
sub
inc
push
dec
pop
push
add
ds
inc
push
out
pop
dec
inc
call
aas
push
push
scas
pop
inc
push
mov
inc
add
inc
push
inc
movsl
or
add
or
add
push
add
mov
sub
ret
pop
arpl
outsb
lods
push
add
jle
insb
je
shrl
mov
outsb
jecxz
push
popa
fisubrl
pop
outsb
out
pop
imul
xchg
jo
mov
pop
les
jne
xchg
pop
add
add
les
pop
insb
lods
push
pop
add
aas
push
xchg
inc
push
add
pop
sarb
lret
les
fidivrs
les
les
fstpt
repnz
inc
les
inc
les
aas
les
inc
inc
les
inc
inc
les
inc
inc
les
push
pop
les
or
add
add
lret
pusha
mov
les
add
call
pop
xchg
data16
lcall
imul
mov
movsl
add
add
dec
add
add
pop
add
add
push
add
add
inc
add
add
inc
add
add
add
push
add
add
adc
push
push
add
add
add
push
add
xor
add
xor
add
movl
add
aad
jbe
mov
jp
mov
sub
cmp
movsl
test
xor
aas
dec
cmp
push
push
or
movsb
dec
pop
adc
pop
arpl
imul
das
bound
and
add
add
add
inc
inc
inc
loopne
inc
dec
push
cmp
dec
push
cmp
push
push
xor
pop
and
arpl
dec
addr16
pop
imul
outsl
outsb
cmp
jb
pop
ja
bound
jp
cmp
xor
xor
add
add
add
add
rorl
popa
add
push
add
or
cltd
or
orb
add
add
add
add
movsl
or
fldl
add
les
push
dec
les
push
push
les
push
inc
les
jae
lds
les
js
les
aas
les
aas
les
fidivrs
les
jl
les
jl
les
inc
fldl
add
lahf
cmp
add
les
add
jp
add
xchg
jb
les
add
js
add
inc
imul
inc
xor
les
les
les
les
les
imul
push
pop
sbb
add
rolb
les
icebp
or
jmp
or
call
add
pop
jmp
test
add
add
add
ljmp
push
pushl
mov
add
xor
push
xchg
jns
xor
pop
lods
pop
popf
ljmp
fucomip
in
pop
mov
testb
mov
lock
out
ljmp
and
add
daa
sub
jmp
and
adc
cmp
sbb
cmc
sub
test
xlat
je
fcomp
cmp
add
fsubrl
xchg
mov
add
movl
mov
outsl
jne
mov
enter
lret
scas
or
and
add
enter
enter
mov
xchg
cmpl
xchg
cmp
nop
xor
xchg
movsl
adc
lods
push
add
popf
pop
add
and
clc
mull
lret
jo
adc
pop
pop
add
jg
jge
sbb
add
mov
hlt
stc
pop
pop
add
std
add
bound
add
pop
or
incb
adc
add
sub
sbb
jno
jp
dec
jo
mov
gs
sub
push
pop
sub
pusha
xor
les
push
or
dec
test
divl
mov
stos
xchg
mov
bound
push
add
out
inc
or
inc
add
mov
mov
xchg
add
dec
or
je
or
add
mov
jg
faddl
add
lock
loopne
cmp
cli
faddl
add
lds
and
into
adc
repnz
adc
pop
pop
je
pop
pop
jp
jmp
les
jp
sub
pop
mov
nop
imul
xchg
dec
add
add
add
add
xor
jg
movsb
out
movsl
mov
xchg
and
add
add
cs
jmp
adc
adc
add
add
xchg
push
add
add
and
mov
loope
shrb
repz
pop
fildl
mov
jns
add
inc
xchg
cwtl
push
pop
xor
cmp
xchg
push
pop
inc
nop
inc
inc
sbb
aas
jo
movl
add
lods
and
stc
jmp
xor
add
add
dec
pop
adc
or
inc
inc
sbb
inc
jno
jmp
xlat
pop
cmp
pop
jge
aam
xchg
shl
sub
cld
sbb
mov
pop
add
stc
or
movl
add
stos
int
leave
ret
ror
add
add
add
add
fdivp
loop
cmc
cli
ss
out
sti
and
ret
push
inc
push
mov
aaa
pop
pop
xchg
dec
push
pop
sarb
jne
push
xchg
xchg
push
jns
fwait
add
nop
cli
jnp
xchg
repz
ljmp
fnsetpm(287
pop
lods
jmp
add
vpinsrw
rol
mov
in
in
call
add
icebp
stc
jmp
daa
call
in
or
add
in
aad
jmp
rcr
push
mov
ljmp
faddl
add
jb
mov
jb
lahf
adc
lahf
mov
addr16
xchg
mov
test
repnz
mov
jl
in
data16
insl
ret
pusha
into
fisubrl
rol
add
add
and
int
push
jmp
pop
mov
pop
inc
loope
bound
mov
jo
outsl
mov
add
jno
daa
fists
lock
cmp
jmp
out
fcomp
sahf
lods
fstl
mov
leave
decl
ljmp
push
jmp
inc
push
inc
das
push
or
add
add
insb
js
xchg
imul
dec
xchg
popa
stos
and
mov
lods
mov
sbb
test
xor
in
or
mov
mov
ss
cld
in
or
loop
add
pop
sub
aas
or
movl
add
ret
or
insl
xor
sub
inc
sub
movl
sub
sti
inc
cmp
aam
add
mov
add
stc
inc
pop
jmp
jbe
jmp
hlt
outsb
sub
fildll
mov
add
xchg
out
xchg
sub
sub
xor
add
cmp
sbb
cmp
add
pop
add
mov
dec
inc
adc
pop
sbb
cmp
add
rol
pop
cwtl
lcall
ror
pop
sarl
fstpl
ret
icebp
in
out
cli
mov
les
negl
test
pusha
dec
jmp
xchg
add
les
ljmp
int3
sub
out
mov
pop
daa
in
push
and
pop
arpl
lahf
pusha
imul
aaa
test
inc
push
lods
in
add
xlat
std
dec
les
jbe
jb
add
mov
push
add
loop
add
sub
sbb
pop
inc
pop
leave
in
call
add
add
lock
pop
aad
push
add
add
mov
imul
lret
and
add
mov
in
ret
pop
fwait
xor
daa
fisubrl
addl
dec
xorb
stos
pop
jle
sar
mov
dec
in
pop
ds
jp
pop
sti
rorb
pop
imul
ss
cmp
add
add
sbb
and
fxtract
testl
sbb
fistpl
jecxz
sbb
add
add
loope
cmc
sbb
jmp
sbb
negb
cltd
fisubs
movl
add
gs
test
mov
jo
popf
stos
inc
cmp
push
gs
add
xchg
and
mov
rclb
sbb
sbb
jmp
mov
sub
add
push
fcmovnb
or
add
add
add
je
cmp
aas
insl
jbe
xor
popa
sub
jmp
and
cmp
sub
sub
lret
adc
pop
hlt
push
or
push
inc
push
push
jge
les
or
das
sbb
adc
dec
inc
xor
jns
push
imul
gs
data16
arpl
outsl
es
inc
popa
outsl
lcall
dec
fcompl
imul
push
sbb
dec
inc
pop
les
stc
push
add
xor
test
pop
cmpsl
test
sbb
icebp
cmp
mov
push
dec
xrelease
mov
sub
fstpt
inc
mov
sbb
cmp
xchg
pusha
addl
xor
icebp
call
add
scas
mov
fucom
loopne
xchg
stos
addb
out
fstl
cwtl
lahf
aam
ret
lret
mov
pop
stos
rol
popf
lahf
mov
rorb
add
jl
stos
aam
ret
push
xor
sbb
popa
sbb
fsubl
movsb
pop
adc
and
sbb
insb
adc
xchg
xor
idivb
sub
or
repz
pushl
clc
test
ret
sub
orb
push
xchg
imul
adc
add
cld
ret
add
mov
int3
bswap
stos
int
add
add
ret
mov
mov
mov
mov
ja
mov
popa
xchg
cmpsb
jne
jmp
mov
loop
push
jno
loop
insb
jmp
xchg
clc
xchg
repz
jge
mov
cmp
movl
sub
xor
sub
roll
adc
mov
and
mov
or
mov
movl
pop
xor
add
inc
daa
cltd
inc
push
add
pop
mulb
dec
push
out
adc
rcrb
pop
push
rcll
pop
inc
mov
jo
mov
jns
mov
je
addl
jl
ja
loopne
xlat
fldcw
rcl
xchg
xchg
iret
loopne
add
add
popa
imul
dec
outsb
insb
push
jo
fs
push
cmp
push
xor
pop
push
jl
sbb
pop
jp
pop
inc
pop
dec
inc
pop
fldl
add
xorl
jg
sbb
jne
xor
jb
out
add
lock
xor
imul
stc
xor
fistl
sub
lret
adc
mov
mov
pop
mov
jecxz
and
fninit
pop
push
fnstsw
std
or
call
lock
jmp
sbb
into
dec
ss
in
add
les
jbe
push
in
add
les
add
les
cli
and
cmpsl
mov
add
jb
les
sbb
mov
and
or
add
add
and
sub
or
pop
inc
das
les
cmpsb
add
add
lods
int3
mov
jmp
sub
pop
or
xchg
sub
or
lahf
add
fisttpll
fdiv
out
mov
add
int3
add
add
inc
mov
arpl
add
add
add
mov
movl
loopne
ljmp
sahf
mov
out
popf
in
out
mov
jae
cld
push
rorb
add
push
cmp
sub
inc
adc
xor
mov
add
pop
ret
add
imulb
push
mov
or
popf
add
pop
or
add
sbb
cs
and
push
ficomps
icebp
or
mov
sbb
notb
cmp
fabs
jecxz
mov
in
in
inc
sahf
fsub
out
jmp
std
in
jmp
add
hlt
xor
xchg
sub
and
daa
sub
jnp
sub
jae
add
add
jbe
rclb
sahf
sahf
jmp
fwait
add
int3
fldl
add
add
into
xchg
aad
fcomp
stos
sahf
int
sub
rclb
or
fildl
sbb
sub
add
adc
xor
in
add
ret
fdivrp
inc
lods
in
pop
or
pop
sbbb
movsl
cmp
pusha
pop
xor
insl
dec
outsl
popa
cmp
daa
push
xor
inc
push
push
in
add
les
mov
pop
xor
xor
add
les
add
les
cwtl
push
inc
test
jge
xchg
ss
add
les
push
ss
jns
shr
cmp
cld
cmp
add
les
stos
add
sahf
pop
xchg
insl
lahf
outsb
les
mov
movsb
sub
add
add
adc
mov
add
add
cli
clc
lock
gs
fwait
mov
mov
jae
mov
mov
outsb
jne
cmp
imul
inc
jg
lods
adc
mov
and
mov
push
ficompl
pop
cmpsl
cmp
or
aam
andb
orb
jo
adc
add
mov
add
add
and
cli
add
mov
movl
arpl
push
sub
movl
add
jmp
int
test
faddp
dec
mov
mov
leave
add
movsb
jmp
stos
inc
and
movl
add
dec
data16
inc
aad
add
xchg
fstp
leave
mov
ret
add
xor
insb
outsl
sbb
aad
mov
jle
icebp
popa
push
lcall
loope
adcb
adc
cld
ljmp
add
cvtps2pd
pop
push
pop
push
push
mov
mov
loopne
in
cld
fimuls
pop
pop
insl
or
add
sbb
add
pop
data16
xor
or
add
cwtl
popa
arpl
fiadds
add
ss
loopne
repz
sub
add
ds
orl
inc
xchg
fiadds
add
dec
movsl
mov
adc
mov
lahf
cmp
sbb
mov
push
add
pop
jae
push
pusha
adcb
add
add
add
les
pop
sbb
dec
jae
and
les
insl
jae
jmp
add
pusha
cld
clc
add
shrb
mov
je
rol
push
xor
ja
xor
jo
xchg
xchg
je
mov
xor
xchg
pop
add
add
repz
rcrl
lock
fildll
fdivrp
enter
imul
add
add
lds
ljmp
andl
insl
ja
jnp
add
add
xchg
gs
ljmp
jmp
fidivl
jp
outsb
add
fs
loopne
jnp
movl
xchg
pop
mov
insl
mov
movl
inc
mov
dec
push
xchg
mov
dec
mov
xor
movsl
mov
pop
jnp
aas
pop
pushf
cwtl
push
inc
test
mov
out
or
les
add
cli
mov
adc
fsub
and
add
xor
adc
mov
xorps
add
cmpsl
dec
pop
dec
rcll
push
cmova
adc
push
jbe
add
gs
dec
add
push
pop
dec
or
pop
inc
dec
cmp
or
pop
xor
es
and
stc
das
and
add
add
add
ss
and
ds
hlt
sub
cmp
and
and
jmp
and
add
add
add
les
push
insb
repnz
imul
push
pop
jae
fisubrl
fcmovbe
push
outsb
test
mov
push
xchg
inc
inc
andb
inc
je
xor
xchg
notb
aad
sbb
lret
jmp
rcr
add
lds
add
push
jb
add
add
icebp
clc
psubusb
cli
pop
int3
loopne
adc
stos
icebp
ljmp
or
out
add
sti
fcompl
and
add
add
and
lcall
pop
xchg
mov
and
push
jmp
stos
mov
push
or
inc
test
cmpsb
dec
iret
add
sub
in
shrl
ljmp
add
shll
repz
xor
pop
xchg
pop
mov
les
push
push
pop
add
lds
mov
mov
push
jb
fstps
add
inc
xchg
jecxz
or
fisttpl
mov
inc
xlat
movsb
ds
mov
pop
push
ret
sbb
pop
test
xor
stos
ret
outsl
or
add
add
das
or
cmpsl
cmp
cmp
mov
movl
and
outsb
and
sarl
daa
inc
stos
xchg
adc
jns
mov
cmp
xchg
xor
add
ret
das
cltd
and
sub
addl
cmp
mov
xor
add
add
add
iret
adc
or
add
inc
inc
adcl
pop
jnp
dec
inc
push
inc
add
jo
mov
mov
xchg
dec
iret
in
or
add
orl
dec
xchg
lea
xchg
xchg
lahf
test
jns,pt
cmpsl
pop
mov
fcmovnu
pushf
inc
pop
out
scas
mov
stos
lret
mov
rcrb
scas
rcll
adc
aam
push
in
dec
push
into
in
dec
cmp
out
fiadds
add
fiadds
add
xchg
cmp
lret
adc
je
jnp
inc
cmpb
inc
outsb
pop
cmp
cmp
add
add
insb
inc
inc
mov
sub
add
mulb
jecxz
daa
inc
add
ss
ds
arpl
ljmp
or
aam
mov
les
pop
fldl
in
add
lds
xor
push
notb
add
mov
imul
add
outsb
jno
mov
add
inc
outsl
pop
loope
enter
jle
scas
push
jbe
insb
cld
mov
mov
fcmovnu
xchg
cmp
adc
add
jmp
stos
das
xor
xchg
scas
ret
add
lcall
sbb
mov
insb
xchg
andb
bound
lea
stos
jae
dec
nop
imul
pop
daa
sahf
xchg
add
add
add
das
add
dec
outsl
sahf
and
sub
mov
sbb
add
pop
mov
add
in
decl
add
add
add
add
cmovl
rorl
add
es
and
and
add
out
pop
fcomip
loopne
ffreep
lret
add
cmp
fcmovnb
inc
mov
int3
fisubrl
lea
fnsave
loope
aam
jecxz
pop
add
popa
adc
jp
push
data16
scas
jne
mov
dec
je
test
sbb
jb
out
mov
loop
test
les
cmpsb
adc
xchg
push
push
bound
add
add
cltd
int
movsl
ror
mov
fldl2e
lcall
or
aad
pop
fidivrl
out
pop
cmpsb
repz
fdivr
add
mov
sbb
mov
add
out
xchg
add
pop
outsb
popf
imul
inc
jne
xor
mov
cmpsl
add
add
add
add
in
repz
or
idivl
add
push
leave
hlt
stos
repnz
lea
mov
add
add
jmp
sub
cmc
mov
push
cmp
pop
and
xor
cs
sub
ss
cmp
add
pop
mov
add
mov
add
cmp
jne,pt
scas
xor
adc
call
out
add
int3
jmp
add
repz
sub
fdivr
daa
lock
mov
cld
subb
outsb
sub
sub
jmp
mov
loopne
jno
fucomp
movl
insb
cmp
add
sbb
movsb
adc
les
add
add
add
add
push
mov
test
jo
add
rorb
sbb
add
add
movl
add
sbb
outsb
inc
add
inc
add
jge
add
jge
add
lcall
bound
inc
add
inc
add
jb
add
jno
add
jno
add
sub
push
iret
bound
or
jo
ficoms
add
pusha
pusha
jb
push
jnp
insl
or
add
or
sub
or
imul
add
addl
les
add
aad
arpl
addb
les
outsl
les
push
les
add
add
add
inc
add
into
add
mov
add
pusha
push
jb
dec
push
outsb
les
push
les
jb
incl
outsb
les
push
push
les
push
outsl
les
imul
ljmp
ljmp
les
push
jb
ret
add
add
movb
add
les
mov
add
add
add
jmp
mov
ljmp
cmp
lds
cmp
aad
popa
add
movb
push
movb
push
jmp
les
or
add
push
or
add
push
or
add
push
scas
movl
dec
std
popa
jmp
push
fsubrs
pop
push
cmp
data16
movsb
dec
jp
movl
dec
mov
test
imul
inc
jnp
push
add
add
roll
flds
roll
mov
pop
insl
jbe
stc
push
jnp
daa
addr16
push
add
enter
shl
jmp
shr
cmp
out
or
call
add
enter
adc
jo
push
cmp
add
cli
sub
sti
dec
insb
add
jo
mov
dec
outsb
outsl
into
pusha
add
popa
arpl
minps
or
pop
pop
outsl
gs
push
inc
insb
cli
sub
mull
or
arpl
jmp
jno
fdivrs
jp
ds
and
add
and
jbe
lea
add
arpl
adc
add
frstor
push
add
or
and
mov
pop
and
pop
add
popa
add
into
add
leave
add
int3
add
jmp
outsl
les
push
push
les
add
int3
add
scas
add
les
in
les
and
insl
dec
je
jg
imul
add
add
dec
imul
pop
jae
mov
add
sub
cmc
inc
shrb
inc
les
inc
les
aas
les
aas
les
scas
aas
les
je
add
dec
jecxz,pn
push
loopnew
push
push
out
push
pop
les
rcll
mov
and
push
stos
out
pop
push
test
add
add
jmp
stos
popf
jecxz
jge
xchg
or
test
adc
add
clc
inc
xchg
mov
enter
enter
enter
xor
push
inc
es
push
repnz
pop
push
pop
cs
push
icebp
add
add
addr16
adc
add
add
xor
inc
aad
in
mov
adc
mov
icebp
pushf
ret
mov
addr16
adc
add
mov
popa
incl
xlat
imul
add
incl
push
test
push
cmp
sbb
sub
pop
or
dec
fcom
into
adc
mov
mov
xor
aam
jae
mov
icebp
cmp
add
add
addr16
adc
pop
hlt
add
mov
pop
mov
sbb
add
adc
insl
add
add
das
dec
mov
pusha
cmp
add
add
pop
insb
outsb
clc
and
imul
push
insl
jae
mov
add
outsb
insl
adc
add
add
jbe
push
pop
push
jae
push
inc
addr16
pop
jbe
cmp
cmp
add
pop
or
pop
or
cmp
jbe
stc
add
cli
add
incb
jbe
push
push
insb
les
les
add
jecxz
insb
les
push
les
add
outsl
les
push
popa
les
push
pop
les
add
les
add
scas
add
les
add
les
add
les
add
les
add
les
add
les
add
les
pusha
inc
les
jmp
les
xor
outsb
pop
push
test
pop
inc
add
les
fwait
sbb
sbb
add
mov
ret
mov
add
xor
cld
lahf
loope
aaa
ficompl
dec
loopne
mov
pop
jb
std
sti
mov
jmp
dec
xor
jbe
push
cmp
fs
stos
add
aaa
ret
nop
xor
pop
mov
push
pusha
mov
movl
add
ret
call
inc
push
mov
xchg
inc
sti
pop
push
mov
rolb
add
mov
and
push
push
scas
int3
dec
adc
enter
clc
cld
jle
mov
and
mov
dec
jnp
in
stc
call
jmp
jle
push
mov
mov
push
mov
push
std
mov
push
std
mov
roll
insb
pop
aaa
push
jb
mov
push
pop
shrb
add
add
add
push
std
jbe
lds
xor
pop
leave
pop
or
jg
insl
repnz
pop
xchg
incl
add
sub
adc
push
jbe
cmp
or
and
cmovo
jne
in
or
sub
jp
push
push
dec
out
repz
adc
sub
add
add
hlt
xor
and
mov
les
inc
les
test
inc
sahf
test
shrb
xchg
xchg
pop
inc
mov
cmpsb
mov
sub
pop
and
add
xor
out
scas
sub
lds
push
push
push
add
outsb
shll
inc
out
add
add
xor
subb
jb
sbb
movb
sahf
rcll
inc
add
lods
out
jns
jo
inc
stos
cli
pop
les
or
sbb
sub
mov
stos
add
fldl
add
ret
push
jmp
in
imul
add
mov
stos
mov
les
pop
mov
adc
inc
xor
nop
inc
mov
cwtd
sbb
dec
dec
add
out
les
sbb
mov
mov
sti
pop
push
pop
xor
push
shrl
mov
out
mov
outsb
push
jmp
or
into
pop
cmp
or
ja
xchg
ja
das
xchg
adc
cld
fcoml
cmpsl
xchg
fiaddl
adcl
loope
shl
mov
mov
leave
mov
and
dec
mov
std
hlt
notl
add
lea
loop
xchg
sbb
fs
add
mov
mov
adc
mov
pop
rcll
jg
lds
add
jb
push
push
rorb
jle
add
test
lods
or
pop
add
test
push
adc
js
je
xchg
add
sti
pushl
rcll
lea
ljmp
add
add
cmp
repnz
ljmp
pusha
in
pop
lahf
test
fcmovnu
mov
push
lods
mov
les
adc
and
je
pushf
mov
add
add
hlt
mov
add
int3
adc
fiadds
xchg
test
push
push
cli
sti
mov
stc
dec
xchg
add
mov
out
sub
je
sahf
add
inc
push
sub
movb
add
xchg
les
xor
adcb
popf
out
les
and
test
jo
les
cmp
push
add
sbbb
add
jb
push
inc
in
testl
dec
iret
sub
push
add
sbb
add
pop
lods
xor
sbb
push
add
pusha
mov
lret
ljmp
mov
add
testl
sahf
push
mov
aad
mov
or
rcrb
cs
fiaddl
les
movsb
jle
daa
std
add
lret
xchg
push
pop
push
shl
push
push
jae
add
add
xor
les
pop
jb
xor
loopne
inc
jmp
xor
lock
push
mov
dec
cmp
mov
aad
push
add
push
orb
adc
cmpl
add
cli
xor
xchg
or
dec
sbb
outsb
add
pushf
in
inc
fisttps
xor
add
test
mov
push
inc
testb
lods
or
push
push
push
ljmp
in
or
dec
pop
ret
push
mov
test
dec
roll
insb
adc
push
clc
lods
cld
mov
add
adc
mov
add
xor
xchg
sbb
addr16
add
jnp
push
jnp
mov
je
shufps
pop
mov
call
rclb
les
mov
mov
scas
adc
pushf
add
adc
imul
push
push
cli
clc
dec
adc
mov
mov
inc
add
mov
aam
outsl
mov
out
shr
mov
add
add
add
fcmovb
add
jo
cmp
mov
ja
out
sub
ffree
add
sbb
mov
or
push
xchg
push
jo
xchg
mov
xor
mov
or
ljmp
out
hlt
mov
push
sub
loopne
out
add
add
in
add
add
add
or
jmp
aas
dec
sti
xchg
clc
sbb
loope
es
aaa
add
mov
cmp
add
sbb
int3
das
adc
cld
add
pushl
aam
fs
ss
stc
mov
adc
dec
shlb
pop
mov
inc
jnp
cmp
adc
mov
sub
mov
adc
add
mov
stos
push
push
sbb
hlt
lret
scas
cld
jmp
popa
jge
xor
jo
push
add
popa
jnp
push
cmp
inc
in
stos
lret
pushf
roll
inc
jle
ljmp
scas
cmp
testl
add
aaa
ret
sbb
aaa
sbb
xchg
adc
dec
push
cmp
fcomp
add
test
ret
dec
push
jp
push
mov
jge
xchg
cli
je
xchg
and
jmp
xchg
les
sti
sti
movsb
jg
jge
add
inc
cmp
sti
fcmovnb
jg
sbb
ret
xor
int3
mov
add
jae
mov
push
popf
add
dec
gs
inc
inc
sub
add
fistl
xchg
xor
and
xchg
dec
mov
stos
scas
mov
adc
inc
ret
adc
mov
lcall
mov
lds
mov
sahf
incl
jnp
add
add
add
add
subl
das
mov
push
loopne
popf
xorb
jle
jb
push
push
aas
inc
jmp
iret
jne
lret
subl
imul
les
sarl
push
mov
add
cwtl
dec
jb
sbb
dec
or
clc
mov
addr16
mov
les
lods
jae
or
movl
lock
into
cld
mov
popf
lock
or
imul
out
dec
insb
push
xorb
jb
fucomip
mov
mov
jp
jmp
xlat
jo
mov
fdivl
test
cmc
or
add
jmp
sbb
push
cmp
add
inc
insb
jne
cmp
jne
dec
inc
es
inc
shr
xorl
in
sbb
add
mov
dec
cmp
mov
and
mov
js
dec
rcll
repz
lcallw
js
mov
cmp
or
sub
and
sub
mov
add
enter
push
cmpsb
inc
or
pop
das
leave
int3
test
dec
and
fwait
std
movd
add
mov
fiaddl
nop
cmp
add
mov
movsb
cmp
pushf
add
inc
cmpsl
ljmp
mov
std
pop
adc
cld
cmp
cwtl
mov
add
mov
add
mov
pushf
add
mov
dec
cmp
push
cmpsl
ljmp
mov
in
aaa
push
popf
xor
and
jno
push
mov
lds
add
les
inc
and
daa
shrb
jmp
mov
lds
fadds
xchg
inc
push
rclb
inc
jmp
jl
jge
sahf
sub
test
jo
dec
inc
pop
or
push
bound
cmp
mov
xor
sahf
stc
mov
test
pusha
inc
call
xchg
add
pop
jmp
add
and
dec
and
lret
add
push
pop
fwait
sbb
jge
jl
out
dec
data16
out
push
dec
sbb
in
xor
or
fdivr
add
mov
add
jle
lds
or
jmp
fucomp
shlb
cmp
cld
loope
pop
ret
pop
cmp
inc
mov
fdiv
adc
cmpb
decl
into
repz
pop
rolb
pusha
aam
and
rorl
add
add
xor
andb
add
adc
xor
cmp
jns
xchg
push
jb
roll
add
jb
sub
mov
and
sub
and
pushf
cmc
jne
test
add
mov
xchg
add
add
roll
add
mov
shr
sbb
dec
fldl
jmp
add
xor
data16
aam
lcall
push
aas
es
shlb
lahf
adc
push
test
add
adc
mov
xor
aas
jno
sub
in
dec
hlt
ja
cmp
mov
mov
rcr
in
sbb
inc
add
add
jp
mov
clc
jp
pop
sbb
les
mov
shl
dec
pop
inc
pop
or
jmp
jmp
push
aas
pop
push
xor
and
xor
lret
leave
mov
rorb
mov
test
pop
in
js
mov
test
jmp
mov
loop
adc
mov
pushl
std
arpl
out
int3
sahf
incb
call
add
lea
ror
out
push
in
negl
std
xor
inc
jmp
arpl
out
dec
cli
sub
fwait
stc
mov
and
iret
pop
dec
rcll
popf
in
es
or
inc
and
adc
sbb
sbb
cmp
jne
jge
add
adc
fstpl
add
jmp
add
jmp
fld
or
adc
sbb
or
sbb
pop
pop
xchg
adc
push
adc
jb
jmp
add
pop
fs
push
rcrl
xchg
outsl
lods
mov
test
mov
adc
xlat
roll
orb
sbb
movsl
adc
aad
adc
sti
cmp
and
fstpl
jne
jle
shlb
inc
mov
mov
jo
movb
jo
cmovo
outsb
aaa
f2xm1
lcall
pop
and
andl
rep
test
xchg
ja
rolb
add
add
sub
add
dec
or
repz
cmp
adc
xor
mov
and
pop
ret
pop
arpl
int3
lods
push
mov
pop
jnp
dec
cmp
adc
sub
inc
in
call
imul
popf
pushf
les
xor
add
sbb
sbb
sub
add
das
mov
xor
adcl
adc
push
sub
dec
sub
jge
mov
ret
jno
ret
add
cwtl
xor
scas
and
clc
sbb
test
jnp
sbb
out
sti
idiv
adc
inc
int3
pop
in
pop
or
jg
sbb
hlt
cmc
xchg
sub
adc
adc
add
add
xchg
popf
clc
inc
lret
call
in
jbe
add
dec
inc
data16
push
and
je
lods
dec
cmovno
lret
add
fimuls
xor
adc
cmp
inc
into
add
mov
es
mov
sbb
ret
xchg
lret
sub
test
cmc
xchg
inc
es
xchg
cmp
sub
add
add
movsl
mov
cs
push
stos
push
push
dec
ret
test
jle
mov
add
pop
mov
lds
add
adc
sbb
cld
adc
adc
aaa
std
aam
testl
add
sbb
into
mov
adc
popf
or
inc
inc
addr16
xorb
or
push
add
sub
xor
ss
lods
test
in
push
popl
xor
jne
xchg
rorb
js
sti
mov
idivb
sbb
jne
rolb
lods
jl
mov
xchg
and
mov
inc
lret
ret
pop
ss
mov
mov
and
inc
mov
sbb
ficompl
iret
call
lret
les
xor
dec
scas
cwtl
or
inc
or
add
cwtl
cmp
jb
js
outsl
imul
std
andb
lea
cwtl
jns
loopne
push
cmc
js
dec
aaa
or
pop
movsb
out
cld
add
dec
mov
lods
ja
add
mov
or
pushf
cmp
add
jb
imul
mov
hlt
pop
xchg
jo
inc
lahf
shrl
mov
repz
xchg
gs
mov
mov
add
loop
les
jecxz
dec
sbb
push
dec
push
out
shlb
flds
mov
cld
sbb
add
or
sbb
mov
jb
cmp
inc
fists
xor
shl
mov
sub
andb
ficoms
sbb
sub
enter
loop
bound
push
es
dec
add
pusha
cld
into
and
cmp
rclb
fldenv
icebp
mov
mov
add
es
enter
mov
ja
jmp
movb
sub
push
jb
fidivrs
rorb
mov
mov
mov
clc
mov
popf
or
pushf
sbb
popf
cs
shr
add
xchg
movl
inc
sbb
sbb
add
je
jg
sbb
hlt
sbb
and
add
insb
mov
ds
scas
jl
or
ret
adc
pop
inc
sbb
xchg
push
mov
add
inc
fisttpll
int3
cmp
pushf
add
popa
dec
std
decl
cmp
jo
jl
test
sbb
arpl
sti
inc
daa
dec
or
js
add
sub
jnp
inc
inc
pop
ret
cmp
mov
lahf
jg
stos
jne
fimull
cmp
dec
add
clc
std
add
fs
inc
dec
shr
adc
shr
adc
test
repz
int
repnz
add
clc
jae
dec
cmp
sete
bound
addl
mov
add
add
outsl
fistpl
add
add
cltd
fidivs
aam
inc
mov
sbb
add
xchg
add
add
loope
ljmp
mov
add
mov
call
faddp
pop
push
call
in
xchg
in
lcall
adc
xchg
jae
sbb
repz
add
push
lret
push
cmp
cltd
pop
cmp
xchg
pop
push
mov
add
scas
rol
add
add
or
movl
in
jmp
fisttpl
mov
aam
leave
jmp
add
pop
stc
enter
ds
fstps
int3
or
mov
add
cmp
mov
mov
xchg
jmp
add
adcb
add
icebp
les
adc
lcall
mov
movl
cmp
jno
ds
in
mov
add
iret
add
mov
or
je
mov
add
insl
dec
cmp
ljmp
repz
add
bound
cmp
and
mov
xchg
add
ret
ljmp
add
mov
xchg
add
in
mov
call
pop
in
bswap
decb
mov
or
pusha
nop
add
mov
or
or
and
lods
pop
roll
les
in
add
jmp
and
add
push
add
sub
inc
clc
mov
cmpb
sbb
inc
pop
add
mov
lock
or
jl
add
jle
cmpsl
pop
mov
rcll
movb
lods
xchg
les
jl
lods
add
aas
cmpsl
jg
mov
sbb
pop
stos
fmul
dec
test
add
stos
xor
adc
mov
add
jecxz
hlt
testb
out
adc
or
pop
push
fcomps
add
add
sti
daa
outsl
dec
outsl
mov
xorb
enter
les
mov
aas
inc
cwtl
adc
fisubs
roll
les
or
mov
icebp
pop
enter
mov
xchg
ljmp
add
add
push
outsb
lcall
add
jmp
cmc
inc
pop
or
ds
es
rorb
add
insl
xchg
cld
jmp
addb
enter
shll
fildl
hlt
cmpsb
ret
push
or
movsb
sbb
repz
lret
push
or
sub
pop
leave
insb
xchg
jmp
add
dec
dec
fldl
add
add
addb
xor
or
cld
jmp
xchg
sbb
test
add
popa
enter
icebp
adc
movsl
push
pop
fsubl
imull
cld
lea
sbb
shrl
std
pushl
leave
or
pusha
adcl
call
sbb
aas
lea
add
add
sbb
lds
add
andb
jae
test
es
or
or
inc
es
add
sub
or
andl
iret
les
lods
add
xchg
push
inc
stc
lcall
sub
mov
cmp
rolb
clc
inc
imul
add
lcall
cli
jmp
out
mov
add
sub
adc
inc
ret
add
add
add
mov
addr16
inc
jmp
test
test
mov
add
sub
scas
mov
outsb
ljmp
xchg
ljmp
add
add
ljmp
jge
arpl
xchg
ljmp
jl
jae
xchg
ljmp
jle
mov
push
mov
inc
les
jmp
dec
jne
add
mov
bswap
xor
stos
add
sbbb
adc
in
pop
dec
inc
jmp
lcall
ror
add
add
adc
lret
sub
aam
mov
jle
push
add
add
xchg
popf
push
push
add
mov
xlat
push
inc
jmp
xchg
jl
gs
adc
adc
mov
or
movsl
sbb
add
ds
pop
adc
ret
lahf
mov
jl
push
std
xchg
add
add
xlat
fsub
xchg
ret
add
sbb
add
cmc
sbb
inc
push
aad
inc
push
aad
inc
sub
cld
jne
rorl
add
popa
sub
in
loop
fmuls
push
mov
pop
inc
add
xchg
add
jne
or
jne
insl
jne
cmc
xor
add
add
and
ja
addr16
jo
in
jb
jae
test
add
std
sti
ret
in
jno
jno
xor
pop
ss
mov
sbb
lret
xor
lock
insb
mov
add
outsb
mov
lcall
push
ret
scas
sbb
and
clc
add
mov
faddl
ljmp
pop
dec
xchg
lods
or
push
inc
add
add
ja
mov
pushf
sub
icebp
lods
lods
adc
pushf
add
pop
fstl
mov
mov
add
ja
mov
shl
mov
jmp
xchg
push
xorl
ljmp
jl
loopne
xorb
mov
dec
je
push
loopne
jp
inc
add
xor
test
imul
inc
pavgb
mov
mov
add
jo
test
insl
aas
mov
jg
add
xor
testl
push
jne
jp
and
es
mov
pop
mov
add
and
sbb
test
cmp
es
inc
rcrl
push
sahf
jmp
adc
enter
jecxz
inc
rorl
inc
ret
cwtl
in
dec
sbbl
cld
hlt
aaa
testl
adc
push
loope
jmp
fdivrp
mov
jecxz
jne
mov
dec
es
fwait
int3
add
in
in
and
call
mov
sbb
mov
pop
pushf
pop
add
xchg
movsl
inc
jmp
movsl
inc
call
movsl
inc
call
movsl
inc
push
pop
pop
sbb
mov
mov
mov
xchg
ret
fisttpl
call
pushf
sti
jne
jno
or
cld
or
mov
lcall
aam
adc
test
and
fisttpl
add
inc
es
flds
pop
xchg
dec
lds
inc
inc
les
movl
sahf
add
xchg
sti
jne
sbb
push
jne
dec
pushf
dec
sahf
sahf
jnp
xchg
out
mov
add
xchg
cmp
or
jnp
cmpsb
shl
xchg
int
inc
test
addb
xor
push
dec
pop
popf
adc
add
add
ret
or
rorl
cmp
int
add
shr
addr16
add
dec
dec
in
xlat
divl
push
push
scas
out
xor
scas
out
add
add
mov
pop
lret
sub
xchg
xor
inc
loopne
cmp
out
cmp
aas
mov
jmp
jg
add
cld
subb
subb
mov
inc
cmp
add
sbb
dec
mov
jmp
jg
scas
cmp
mov
ret
lret
xor
inc
psubsb
inc
pop
inc
hlt
sbb
rolb
jl
movsl
mov
mov
mov
cmp
or
and
int
jge
lds
add
negl
push
aas
std
xor
lods
push
inc
pop
jmp
lahf
inc
adc
pop
pop
pop
int
mov
jle
insl
int
jle
lds
in
and
jecxz
and
mov
mov
lock
xor
es
shll
insl
jmp
popf
add
jne
test
cmp
add
mov
add
in
stos
add
mov
mov
add
mov
in
imul
pop
pop
pop
add
outsl
xchg
cld
push
xchg
push
call
push
mov
or
dec
lea
jne
jne
or
imul
lock
pop
ffreep
jmp
add
xor
les
ret
out
inc
add
aas
loopne
loope
sahf
add
lds
add
mov
into
call
mov
scas
xchg
jae
mov
sahf
popf
mov
pop
call
dec
mov
cltd
scas
ja
sbb
stos
incl
and
filds
add
jo
add
test
js
dec
cwtl
cwtl
movsb
pop
popf
add
faddl
jp
sahf
mov
mov
les
xor
ds
pop
loop
adc
pop
loop
sub
mov
add
mov
pop
test
js
rorl
adcl
inc
jmp
pop
xchg
jmp
call
scas
xor
pop
and
cmp
ret
and
stc
sbb
add
insl
inc
mov
adc
outsb
icebp
adc
mov
cmp
push
mov
xchg
xchg
inc
mov
xor
jmp
xor
ljmp
bound
add
add
add
add
into
mov
scas
test
push
add
jge
add
fisubrl
mov
repz
adc
or
shlb
mov
fldl
sbb
cmp
roll
into
cld
mov
add
add
ret
in
outsl
or
mov
dec
call
mov
add
add
jo
mov
xchg
add
push
call
sbb
ljmp
mov
rcl
xchg
lds
sub
cmc
adc
flds
jmp
or
mov
dec
inc
sbb
push
les
in
std
mov
fmull
add
les
sbb
std
xchg
add
add
add
add
sub
fsubrs
inc
loopne
xor
rcr
pop
rorb
outsb
cwtl
lds
jno
mov
shr
insl
add
inc
jecxz
ljmp
jns
arpl
lcall
cwtl
xor
jmp
mov
lcall
ret
into
popf
cmp
add
cwtl
gs
xchg
in
and
push
decl
fcompl
jge
in
shll
les
push
add
cli
lahf
jg
sub
jle
sub
jle
mov
jle
sub
jle
or
ds
mov
ljmp
sub
adc
xor
and
cmp
jo
mov
mov
jle
sub
rcll
cmp
jp
mov
add
add
jmp
add
mov
xchg
repz
xor
pop
pop
mov
les
test
xchg
cmp
push
jmp
andb
and
call
fwait
xchg
cmc
les
in
add
and
jmp
cmp
push
push
inc
incl
jmp
sbb
mov
aas
xor
jmp
xor
add
xor
std
aaa
xchg
cmp
test
jmp
lcall
add
sbb
sub
sbb
push
mov
ss
push
jbe
push
andl
sti
jae
mov
mov
jge
push
mov
out
ss
test
push
daa
lea
dec
lea
dec
push
lds
add
adc
push
negb
cmp
call
inc
sub
jb
add
mov
sbb
or
add
add
pop
jecxz
rcrb
movb
jmp
or
xor
jo
lret
inc
stc
xchg
add
add
add
scas
push
add
jns,pn
mov
cmc
mov
in
and
icebp
rorb
cmp
fsub
xor
enter
sbb
repnz
cmpsl
or
cld
mov
fmuls
mov
aas
hlt
loope
and
lahf
xor
xor
mov
add
sub
sub
add
dec
fdivrs
stc
push
inc
dec
push
ss
leave
push
int3
cmp
jl
sbb
sarb
sub
xor
push
loopne
fcomps
jnp
outsb
xchg
mov
cli
movb
mov
cmp
mov
mov
adc
mov
mov
or
sbbl
push
xchg
add
paddusw
divl
add
sub
pusha
hlt
sub
and
sub
out
xchg
lret
dec
insb
pop
adc
sub
cmp
rcll
fiadds
movsb
dec
jge
jmp
mov
insb
and
or
fwait
sub
dec
testl
enter
push
imul
add
jbe
mov
cmp
xchg
jg
or
mov
fdivr
mov
cmp
mov
mov
push
es
mov
mov
sahf
add
test
add
pop
das
mov
lds
jnp
sbb
mov
int
jo
mov
mov
int
jo
int
push
and
pushf
gs
sub
mov
das
mov
test
mov
test
shll
jno
pop
mov
sbb
jb
lods
or
mov
rcrl
push
mov
jne
push
divb
cmpsb
pop
add
xor
pushl
pop
xor
inc
pop
xor
pop
add
les
jns
sub
xchg
cmp
xchg
out
cmc
aas
and
sub
mov
lock
testl
or
xchg
test
test
xor
andb
jne
xchg
dec
ja
outsb
jl
push
jno
je
orl
mov
jns
adc
cltd
les
mov
jbe
sub
fcoml
inc
aam
adc
popf
sbb
adc
in
pop
fisubrl
ja
test
sti
cwtl
paddq
inc
les
into
out
clc
rolb
add
add
cmp
mov
les
or
add
push
and
lock
and
icebp
out
sti
xchg
call
addr16
add
and
jp
pop
dec
ret
mov
into
xor
repnz
xor
push
roll
hlt
jp
maskmovq
pop
push
imul
insb
aas
incb
call
mov
mov
mov
nop
in
push
dec
adc
push
cmp
jp
in
repnz
pop
aaa
ljmp
push
add
outsl
cld
push
loopne
jno
or
sti
xor
jp
flds
or
sbb
jl
stos
mov
push
bound
jl
loope
ljmp
inc
icebp
adc
add
add
jno
and
sti
push
inc
fnstcw
add
mov
cmp
imul
or
cmp
std
jne
xchg
sahf
call
gs
pop
xchg
sahf
loop
add
push
push
cmpsb
cmp
push
xor
jmp
xchg
cwtl
sbb
jne
xor
ljmp
out
add
add
add
add
dec
and
mov
mov
push
and
push
mov
and
and
ret
push
jo
push
mov
les
dec
xorl
add
test
shr
and
jb
mov
dec
xor
sti
mov
jle
inc
in
mov
inc
adc
and
mov
add
add
or
jne
out
ja
jo
xchg
lds
cmpsb
les
cmp
out
ja
pop
dec
add
cmp
push
mov
test
jmp
xorl
psllq
movsl
jp
js
dec
mov
xchg
jo
cmpsl
or
movq
mov
xchg
fxch
adc
jmp
mov
mov
aas
movb
mov
leave
push
adc
dec
ret
push
jmp
ja
fisttpl
dec
roll
ja
sub
and
sub
add
nop
adc
adc
jbe
pop
push
outsb
jb
mov
xchg
jae
mov
mov
add
add
inc
adc
fldl2e
repnz
repnz
pop
lret
ja
stc
aam
mov
sbb
cwtl
sub
ja
or
mov
mov
test
stc
fs
adc
es
pop
repz
xchg
ljmp
lds
add
add
dec
or
in
nop
add
mov
in
je
mov
push
mov
push
and
inc
mov
add
repnz
xor
inc
shll
push
mov
push
push
push
adc
add
jge
jg
sub
and
push
or
rclb
je
imul
pop
jmp
xchg
mov
mov
mov
add
add
clc
sti
mov
jmp
mov
xor
push
xchg
les
fstpl
fld
aam
rorl
inc
repz
shl
dec
dec
mov
sbb
mov
push
inc
mov
sbb
aam
mov
shll
mov
fisubrs
pop
cli
push
inc
test
add
add
add
testl
inc
pop
add
in
fiaddl
add
push
mov
jno
lds
ljmp
push
fldt
jne
add
pushf
mul
cmp
mov
sub
imul
jmp
cmp
push
decb
lods
sub
add
subb
dec
mov
add
mov
push
add
add
outsl
jecxz
mov
add
imul
sti
add
sbbb
inc
sub
add
pop
fildl
xchg
and
cmpsl
add
popl
popf
pop
jmp
inc
push
lar
daa
or
je
sub
cmp
cli
or
leave
pop
cmp
xchg
orb
pop
imul
roll
jmp
mov
aam
fisttps
push
aad
pop
aaa
ret
rorb
jmp
dec
pop
or
in
fldl
fs
adc
pop
jmp
jmp
mov
out
and
sbb
loop
dec
movsb
add
xchg
push
push
mov
push
dec
push
and
cmp
add
es
adc
fildll
ror
test
mov
hlt
jmp
or
ljmp
cmp
mov
add
lods
cmp
test
push
push
push
sub
dec
and
fidivs
push
mov
cmpsl
into
in
xchg
or
mov
fisubrs
ret
xor
add
fisttpll
pop
sahf
lds
ret
push
mov
dec
mov
roll
jns
movsb
mov
sbb
xor
jmp
mov
and
add
adc
jmp
jg
adc
adc
fldt
stc
jecxz
jo
mov
incl
in
sub
pop
sbb
imul
dec
pop
mov
dec
push
mov
sbb
inc
fwait
sbb
cmp
inc
out
or
sub
mov
push
xlat
js
push
or
pop
and
pop
out
movb
in
xchg
push
les
xchg
les
jmp
pop
sub
jle
cli
fisttpll
add
pusha
jns
jo
xor
jbe
les
add
ljmp
push
xchg
ljmp
jo
jg
cli
mov
jbe
ljmp
lods
jmp
fiaddl
jmp
xchg
sub
popf
mov
and
cmp
jae
and
xor
pop
hlt
and
shll
scas
aas
pusha
jmp
ds
dec
pop
xor
add
add
and
adc
lret
mov
out
outsb
cld
fs
push
and
or
test
add
cmp
and
or
shl
and
add
outsl
cld
jmp
xor
adc
add
jo
icebp
jge
and
push
xchg
pop
sub
push
xchg
jp
push
inc
add
fmull
add
les
packsswb
cld
fnsave
xchg
mov
add
mov
and
cld
lcall
jl
jo
sub
inc
subl
mov
mov
mov
mov
popl
mov
push
lea
jb
push
rcrl
scas
xchg
ljmp
pop
mov
add
pop
add
xchg
dec
iret
dec
jnp
jae
loopne
aad
adc
sti
dec
cmpb
dec
jnp
les
orb
push
aas
mov
add
mov
imul
fs
out
adc
push
jmp
test
je
cmp
and
pop
mov
lret
pop
add
xchg
push
aas
daa
mov
lcall
dec
fwait
sbb
and
inc
push
loop
jae
add
stos
shll
adc
inc
iret
subb
and
jl
les
sub
lds
jg
icebp
out
js
sbb
pusha
decl
push
and
jne
and
jne
and
jne
and
jne
and
jne
and
aam
icebp
iret
hlt
xorb
jne,pt
inc
mov
pop
mov
inc
add
push
out
cmpsl
or
inc
out
cmpsl
or
add
fsubrl
insb
jno
push
fs
sbb
imul
mov
ret
sub
cltd
idivl
mov
out
daa
push
fdivrp
mov
cld
into
mov
add
fsubl
adc
xchg
or
mov
push
sbb
mull
and
mov
arpl
test
insb
mov
int
ss
daa
adc
daa
adc
mov
movl
push
cmc
clc
call
in
call
mov
ja
inc
sbb
pop
mov
call
ss
dec
cld
push
inc
add
add
jmp
test
jae
cmp
add
in
jmp
call
pop
jo
es
push
test
decl
inc
lea
add
insl
sbb
cwtl
cld
jne
dec
sti
push
mov
jae
call
les
cmp
mov
cli
pop
and
sbb
adc
add
add
mov
mov
adc
push
jne
fdivr
sbb
rol
mov
jae
pop
and
arpl
adc
rclb
je
cmp
pop
jne
lret
stos
int3
shll
popa
sbb
pop
push
sbb
fsubl
aas
mov
out
jle
add
add
adc
jae
dec
push
lods
xor
add
add
aad
mov
inc
dec
les
popf
pop
in
pop
test
add
xchg
jo
jg
aaa
dec
inc
xchg
arpl
iret
add
mov
fmuls
push
popa
lret
sub
add
movq
jmpw
ret
mov
jp
sub
push
xchg
inc
and
mov
add
jp
pusha
sti
rclb
xchg
pop
fucom
jp
pusha
in
pop
add
out
add
push
mov
addl
dec
aam
sub
pop
push
mov
shr
sbb
shlb
mov
pop
push
xchg
addr16
outsl
jmp
call
pop
iret
cld
sbb
dec
insb
mov
test
pop
addr16
inc
cwtl
jp
rorl
out
leave
add
push
mov
jle
sbb
or
jmp
ss
cmp
into
jmp
add
cmp
iret
mov
jg
ljmp
pop
add
xchg
sub
aas
push
test
data16
sti
push
xchg
add
loopne
add
add
call
or
das
push
adc
add
lea
aam
inc
jge
mov
jp
xor
call
sbb
in
les
insl
rorb
ljmp
out
imul
pop
addl
addr16
sbb
addl
add
xlat
mov
adcl
add
sub
jle
mov
inc
push
inc
scas
outsb
adc
into
out
cld
add
dec
fwait
pop
push
mov
fsubrs
xlat
cmp
pop
pop
faddl
add
jmp
outsb
rorb
stos
jnp
xchg
arpl
xor
mov
add
nop
xchg
roll
add
add
push
ljmp
inc
push
stos
les
sbb
xor
cmp
xchg
in
xchg
add
push
jmp
arpl
fistpll
outsb
ret
outsl
je
or
dec
pop
jecxz
js
jmp
or
jecxz
fisttps
jae
loop
cmp
outsb
popa
outsb
shlb
mov
add
add
add
add
dec
movsb
or
test
or
xor
pop
pop
add
dec
movsb
or
sbb
jmp
sub
mov
inc
and
add
dec
movsb
or
repz
jmp
jns
mov
adc
movsb
or
imul
jo
je
and
add
add
add
push
add
dec
movsb
or
and
cld
jmp
push
and
nop
and
add
dec
aaa
add
fdivrp
lcall
mov
cmp
add
mov
or
lahf
inc
mov
inc
sbb
add
mov
or
lahf
dec
mov
cmc
or
mov
or
add
add
mov
add
xchg
nop
lahf
push
mov
add
test
jo
push
mov
les
insb
cmpl
outsb
inc
push
aas
les
insb
cmpl
adc
sar
cmpsl
icebp
sbb
add
call
add
mov
test
add
lock
inc
pop
inc
sbbl
rol
inc
lock
scas
insl
add
out
decb
in
or
jmp
dec
push
add
push
pop
mov
xor
dec
pop
gs
pop
mov
sub
mov
add
add
gs
aaa
cld
outsl
addl
add
add
push
jmp
dec
mov
fstpt
push
jmp
add
push
clc
jae
sbbb
add
rolb
les
jmp
mov
mov
inc
popa
ljmp
mov
mov
push
jmp
and
mov
pop
dec
jae
fisttpll
fcmove
sqrtps
add
pusha
push
flds
cld
pop
mov
add
add
add
pusha
push
dec
mov
add
test
inc
jmp
add
lret
insb
and
scas
push
push
roll
mov
or
call
mov
aam
push
xchg
pop
add
call
push
add
jmp
or
add
add
add
mov
push
push
loopne
pop
push
lahf
clc
push
ja
push
mov
test
add
cmpb
jbe
jp
clc
mov
loopne
pop
out
rol
popl
xor
adc
dec
dec
pop
test
jmp
divb
lods
add
popa
cld
xor
add
add
sbb
and
ss
push
jno
mov
mov
pop
pop
jmp
fdivl
les
hlt
mov
call
notb
imul
jecxz
and
mov
adc
test
mov
mov
push
mov
push
add
mov
sbb
inc
call
pop
nop
adc
add
add
mov
dec
mov
or
add
mov
and
icebp
inc
jae
icebp
mov
shl
inc
jae
inc
add
add
paddw
rorb
aaa
addr16
fdivrs
sub
pop
sbb
jmp
lds
mov
and
and
jns
add
add
and
js
and
jnp
nop
cs
jo
iret
ds
pop
mov
addb
outsb
adc
or
cmp
add
push
aam
repz
add
outsb
inc
xlat
negl
sub
cmp
xor
jns
add
mov
ret
mov
lret
repnz
mov
incb
add
add
nop
inc
in
repnz
sbb
cmc
adc
loop
jo
mov
mov
mov
mov
mov
push
xchg
sbb
or
aaa
std
push
push
jb
add
das
les
cld
jmp
movl
mov
sub
inc
and
filds
xchg
cmpsb
lcall
adc
or
dec
jl
and
mov
jo
jbe
add
repnz
push
push
mov
push
fldl
add
ret
add
sti
sahf
xchg
mov
addr16
mov
xor
push
push
movl
into
push
xchg
or
inc
add
inc
fwait
push
mov
ljmp
insl
pop
pop
pop
scas
or
xchg
push
add
stos
push
add
call
mov
jae
mov
inc
imul
jno
jl
push
enter
lds
xchg
sub
mov
mov
dec
push
lea
popa
push
pop
adc
sub
std
or
add
aad
pop
test
push
ret
test
aam
add
inc
and
add
mov
pop
ds
sbb
hlt
mov
or
sub
mov
les
jmp
dec
ror
orl
add
gs
ja
addr16
cmpsl
and
add
add
daa
movb
add
and
push
les
sub
inc
ds
mov
push
sub
add
shr
jmp
jmp
pop
ljmp
add
jmp
add
add
sbb
push
enter
nop
add
rorb
push
mov
clc
jo
movsl
push
xor
cmp
and
jmp
mov
movb
add
jl
add
movl
and
add
jo
sahf
jmp
enter
mov
das
jo
adc
ljmp
add
nop
inc
push
cmp
pop
aas
ljmp
adc
xor
mov
or
mov
aaa
inc
rorl
adc
mov
add
shl
cmp
jne
les
pop
icebp
rol
add
and
nop
push
push
push
xchg
lea
push
lea
and
push
js
and
in
dec
and
fidivrl
add
add
xor
jne
test
cli
push
and
xor
push
mov
jo
mov
push
dec
lahf
cli
jg
insb
add
jne
arpl
push
mov
dec
insl
sbb
daa
mov
sbb
pop
sub
pop
jae
add
daa
aas
pop
sti
jg
insb
add
add
repz
ds
mov
mov
sbb
hlt
iret
pop
ret
mov
pop
jae
add
add
lock
les
daa
dec
cmpsb
stc
jg
insb
add
add
fwait
push
mov
sbb
mov
and
daa
cwtl
test
add
adc
and
test
test
add
scas
cwtl
imul
cmp
cmp
pop
out
insl
inc
xchg
or
andb
mov
add
add
mov
dec
jmp
hlt
pop
fiaddl
pop
clc
pop
or
cmp
sub
pop
fdivs
cmpsb
adc
add
pop
or
xchg
add
inc
mov
xor
sub
hlt
test
ffree
add
dec
bound
push
cld
push
or
add
dec
xchg
mov
jmp
sub
sbb
inc
mov
jmp
imul
fs
insl
decb
xchg
cld
faddl
xchg
mov
cld
or
cmp
pop
push
jmp
adc
int
dec
cld
jne
and
lods
mov
int
sti
jne
jge
or
and
inc
mov
rcrb
jge
add
add
mov
sub
xor
ljmp
push
push
mov
lock
xchg
cmp
cmp
inc
sbb
addb
cwtl
dec
lea
mov
test
add
and
pop
mov
adc
pop
inc
clc
cmp
adc
push
repnz
sub
xchg
add
pop
out
std
add
dec
mov
mov
add
movsl
inc
pinsrw
or
sbb
adc
ljmp
shll
test
leave
and
adc
ficomps
push
call
call
out
les
call
das
sar
jns
adc
lahf
and
add
shll
rclb
mov
movsl
xor
mov
push
iret
cmc
dec
mov
out
mov
pop
jno
out
pop
scas
out
lods
mov
iret
or
and
xlat
mov
test
and
stc
decb
divb
std
int3
repnz
addb
mov
stc
mov
add
testb
add
add
test
ja
adcb
xchg
pushl
outsl
mov
cmpsl
cmc
add
addb
add
add
les
mov
cld
fsubrl
testl
or
jmp
pop
mov
inc
jmp
shrb
das
mov
mov
movsb
add
sbb
push
repnz
add
add
push
jne
xor
inc
pop
sbb
adc
aam
cli
inc
jmp
adc
notb
and
and
ret
and
add
std
mov
fcmovnb
test
loop
mov
lock
movsl
scas
mov
mov
lret
repz
and
pusha
push
pop
inc
and
inc
add
sti
adc
out
adc
mov
add
add
adc
stos
mov
add
xchg
add
push
sbb
lea
in
inc
add
test
aas
add
sub
inc
sbb
stc
or
or
je
inc
lock
jmp
mov
test
ret
enter
inc
cmpsb
decl
xchg
push
dec
mov
xchg
add
add
or
lar
ret
pop
sti
cmp
push
or
push
mov
add
adc
inc
popf
rorl
arpl
push
mov
push
out
shl
out
lds
add
shll
pop
mov
lea
xor
or
add
sti
test
add
imul
or
fucomi
mov
xchg
out
jp
stc
ds
ret
rcl
in
imul
inc
inc
movl
jmp
cvtpi2ps
insb
enter
cmc
mov
cmp
jp
andb
repz
pop
ljmp
fcmovu
mov
sub
adcb
outsb
test
jmp
inc
mov
add
pop
testb
xchg
add
add
ljmp
add
add
lds
push
add
mov
pop
dec
add
and
pusha
or
jmp
adc
ds
aad
add
movl
stos
inc
pusha
add
pusha
call
lods
call
jmp
movl
cmp
sub
or
enter
inc
leave
add
add
add
movaps
xor
xchg
rcrl
jb
sub
fs
test
add
add
sub
or
push
fidivs
sbb
addl
cld
test
mov
add
leave
shr
mov
add
test
lret
mov
and
lret
mov
pop
lods
or
jmp
pop
jl
popf
or
outsb
fwait
sti
je
sub
add
mov
jmp
jge
and
lret
sti
je
mov
nop
pop
dec
cld
mov
jge
test
and
shll
or
mov
sbb
sahf
add
fisttps
fwait
inc
mov
lea
or
inc
and
push
jae
fnstenv
jae
and
pop
mov
inc
addr16
pop
pop
or
testb
pop
mov
adc
add
ror
repz
aad
pop
pop
arpl
test
mov
cli
pop
add
inc
movsl
push
ror
mov
mov
sub
xchg
mov
push
movl
add
outsb
add
std
add
pop
std
addb
mov
sti
adc
lock
add
inc
aaa
std
and
scas
shl
jle
pop
or
cli
gs
pop
repz
clc
inc
imull
add
add
add
fimuls
jae
ljmp
lods
mov
jg
mov
mov
popf
bound
dec
jne
mov
or
jmp
ret
pop
or
add
xchg
repz
call
lcall
fisubrl
jg
jo
mov
add
adc
icebp
jbe
lods
add
mov
mov
pop
and
std
xchg
pop
testl
clc
rorl
shlb
mov
ds
mov
add
mov
jo
jbe
jo
jb
test
test
mov
jne
cmpsb
add
lahf
add
inc
pop
pop
sahf
adc
jecxz
add
add
pop
scas
nop
xchg
push
mov
mov
movl
call
xor
jo
mov
adc
sbb
hlt
cld
sub
adc
les
lcall
test
push
xchg
inc
rolb
mov
inc
lock
test
incb
scas
aam
mov
mov
sarb
and
loopne
sti
push
inc
mov
inc
add
mov
push
incb
add
add
jno
adc
push
or
shll
dec
mov
push
mov
mov
cmovne
add
pop
addl
mov
add
loopne
jae
add
fwait
dec
imul
les
stos
cmp
or
imul
mov
mov
add
out
mov
popf
stos
shl
add
add
fcmovb
add
mov
adc
jno
cmpsl
out
outsl
mov
adcb
pop
std
lar
dec
gs
pop
out
fucomi
add
sub
jmp
hlt
inc
fstpl
mov
ljmp
ret
aaa
inc
push
lods
jbe
add
jns
int
or
adc
mov
push
rol
add
add
inc
leave
call
mov
call
mov
push
cwtl
push
scas
push
xchg
cmp
inc
jmp
cmp
jnp
inc
lret
rorl
rolb
incb
xchg
lds
push
out
mov
clc
shrl
inc
ret
shrl
loop
add
or
insl
or
xor
push
mov
call
sbb
jp
mov
jp
jne
loope
mov
xchg
sahf
int
test
shlb
cmpsb
inc
lea
ja
xor
or
push
adc
aam
ljmp
cld
jmp
les
or
rclb
test
add
add
pop
or
cmp
lea
shll
fst
adc
ds
sbb
inc
testl
jp
scas
int
lds
decb
add
ljmp
pop
or
lods
pop
pop
add
or
mov
mov
inc
pop
test
lds
leave
push
add
les
je
and
mov
add
lret
sub
add
and
mov
cs
mov
mov
xlat
ret
orl
push
aas
push
ret
or
andb
xor
add
nop
pop
dec
dec
inc
xorl
cmp
sub
add
add
in
stos
cld
xchg
rcll
push
dec
xchg
adc
inc
mov
idivl
mov
repz
xor
fnclex
jle
adc
fildl
dec
mov
pop
scas
aam
add
jmp
sub
idiv
hlt
rorl
inc
dec
sbb
xor
inc
imul
lods
adc
addb
pop
adc
xchg
pop
xchg
xor
cld
add
rorl
add
mov
inc
loope
xorb
mov
add
shrl
cld
pop
adc
ror
rolb
jo
add
jb
or
push
add
pusha
or
std
jle
mov
jp
fs
push
cld
mov
aaa
lcall
inc
popf
ret
mov
add
pop
or
xor
pop
imul
or
inc
add
insl
add
adc
mov
add
in
add
or
mov
sbb
ret
lret
jl
xchg
inc
es
add
add
into
adc
test
fdivr
add
add
dec
aad
jo
les
jg
stos
sub
add
pop
cmp
sub
pop
mov
daa
xchg
mov
push
add
les
js
lret
mov
aaa
adc
push
les
jge
int3
pop
aaa
mov
add
les
mov
aas
ret
mov
sub
add
add
dec
push
add
les
js
ret
mov
sub
add
lods
sti
rcl
add
aad
out
call
stos
add
repnz
lods
repnz
ret
add
mov
mov
xlat
gs
pop
jmp
adc
sbb
add
ljmp
aaa
mov
pop
cmpsl
mov
add
ljmp
add
add
sub
push
push
es
pop
mov
fildl
pusha
mov
andb
dec
add
sub
je
pop
popl
xor
jne
adc
rol
or
fldcw
leave
or
pop
test
in
push
fsts
add
cld
faddl
add
add
xor
testb
lds
cli
xchg
movl
dec
icebp
mov
adc
and
dec
jmp
mov
fdivr
cld
aad
in
mov
xor
sbb
inc
sar
jmp
and
imul
and
fisttpll
add
xor
xchg
push
push
jle
in
mov
add
and
mov
movb
xchg
sbb
mov
pop
add
cmpsb
cmp
add
popa
sub
lods
add
mov
dec
inc
pop
ret
std
cmp
or
aaa
sub
xchg
inc
sub
push
imul
pop
dec
lock
addb
inc
pop
les
add
aas
push
mov
jg
int3
xor
add
sbb
push
mov
push
push
inc
mov
jnp,pn
xor
rcr
je
cltd
and
enter
test
dec
std
jnp
jl
clc
das
inc
inc
mov
jo
call
cs
mov
push
das
xchg
hlt
scas
xor
sbb
mov
mov
add
dec
or
mov
aas
jp
pop
pop
out
imul
add
fidivs
push
jno
jmp
popl
cmp
push
mov
lods
dec
lret
jnp
sbb
sahf
fisttps
out
add
cmp
sub
mov
lcall
leave
xchg
subl
mov
jae
cmp
push
sarl
mov
jmp
mov
mov
mov
add
xchg
cld
sbb
jne
xchg
add
dec
test
mov
popl
adc
mov
add
jo
push
mov
push
int
pop
ficompl
or
lret
add
add
jecxz
in
inc
cs
jmp
mov
adc
roll
jmp
incl
inc
lds
and
add
adc
adc
mov
and
add
xchg
dec
and
jo
jo
test
xor
fisttpll
and
jmp
mov
pusha
jo
push
push
adc
mov
call
and
jo
xchg
push
jle
jno
pop
les
cmc
mov
adc
lods
add
mov
rol
adc
nop
sub
sti
jne
jne
les
adc
mov
jle
out
dec
xchg
mov
add
aas
lds
in
add
add
sti
pop
add
cs
xchg
lea
inc
jmp
flds
fistpll
mov
add
dec
push
push
mov
cs
jo
adc
les
inc
mov
push
add
and
lcall
cmp
sbb
les
inc
mov
pop
add
and
subl
add
mov
xlat
add
add
jno
adc
add
xchg
mov
adcb
sub
add
das
outsb
out
add
add
or
jmp
ljmp
aaa
ljmp
aaa
ljmp
jae
outsl
jle
aaa
ljmp
add
outsb
inc
mov
add
pusha
push
imul
call
sbb
mov
jl
lea
aaa
xchg
push
loope
add
movl
sub
add
or
jmp
or
jne
mov
push
or
or
ret
add
xor
and
pusha
inc
loop
jmp
mov
add
inc
jmp
pop
ss
stos
add
xor
sbb
add
outsb
and
adc
jmp
adc
add
lcall
add
xlat
mov
jl
or
add
and
sbb
pop
pop
xchg
int
pop
insb
mov
shrb
add
add
add
mov
push
test
add
mov
add
leave
or
sti
jo
fwait
or
sub
cwtl
and
pop
add
repz
les
repz
mov
movsl
leave
and
fiadds
test
sbb
push
jae
cmpsb
test
call
add
xor
andb
jp
lds
add
pop
add
mov
repnz
insl
add
mov
movzbl
popa
cmpl
or
push
jae
cmp
add
sbb
sbb
mov
xor
jo
cmp
mov
jo
in
es
leave
push
sbb
push
repz
les
push
lock
add
pop
jmp
cmp
add
add
push
out
jmp
enter
les
jae
les
add
je
stos
add
subb
add
cmpsb
add
xor
xor
shlb
cwtl
les
add
jno
mov
sbb
xchg
jmp
lahf
sbb
fildl
cmpsl
jo
rolb
pusha
insb
mov
jmp
sub
sbb
xchg
lds
jmp
es
sub
cmp
mov
mov
or
push
inc
or
add
add
mov
movl
adc
lcall
or
insl
jge
sbb
or
call
add
cld
push
sbb
pop
pop
clc
push
mov
jae
or
lahf
out
adc
mov
jbe
inc
sbb
stos
fs
add
add
push
ljmp
jne
and
jne
inc
in
loop
push
pop
sti
mov
or
add
jne
inc
les
iret
roll
pop
inc
les
ret
rclb
push
hlt
cmc
dec
xchg
mov
icebp
mov
dec
or
adc
sub
mov
test
mov
les
jno
sub
jp
xor
jno
test
mov
cwtl
dec
scas
pop
insl
or
or
gs
and
lock
mov
add
outsl
fcmovne
mov
fwait
and
inc
add
jmp
sbb
or
mov
dec
ret
jmp
xor
add
mov
les
jmp
jno
add
add
ljmp
xor
xor
popf
aaa
rolb
inc
lret
add
add
jmp
movb
out
inc
dec
adc
ljmp
sub
les
add
mov
insl
cmp
insl
iret
cmpsl
icebp
add
xor
jmp
movl
ljmp
add
add
add
pop
aad
jns
ret
add
jno
jno
rorb
out
inc
push
pop
test
dec
sbb
and
inc
les
jmp
repz
andb
push
add
adc
add
fdivr
sbb
adc
jmp
repz
mov
sbb
sbb
leave
jno
call
test
mov
inc
and
push
lea
push
or
popf
add
push
jb
add
js
adc
jle
xor
clc
cld
cmpb
jbe
inc
jbe
inc
pop
fistl
jl
adc
jb
xor
data16
inc
inc
adc
sbb
incl
add
add
adc
add
push
push
mov
aas
xchg
push
push
jp
adc
pop
add
lds
mov
mov
mov
jg
lds
lods
add
sub
lret
fsin
adc
mov
test
xor
push
subl
add
jo
sbb
add
add
jmp
comiss
enter
xor
sbb
push
test
out
sbb
jl
cwtl
insl
lret
mov
cwtl
fwait
or
add
stos
ret
jmp
shlb
loop
pop
inc
jecxz
inc
xor
fcoml
stos
add
icebp
aaa
mov
xorb
jmp
daa
mov
ljmp
add
mov
loop
rolb
add
add
adcl
mov
fs
dec
inc
push
add
cmpb
mov
mov
loopne
aam
rcll
sub
inc
or
inc
test
aad
in
add
mov
mov
call
rcll
add
mov
add
cwtl
add
addr16
mov
add
add
lods
xchg
pop
ljmp
cmp
adc
and
stc
stc
xor
repz
push
sbb
and
jns
mov
cld
mov
inc
or
inc
xchg
add
cmp
in
stos
and
jmp
adc
pop
test
ret
stos
inc
and
push
push
mov
add
add
pop
or
out
push
xchg
add
xor
jbe
push
incl
and
insl
push
das
fldt
sti
adc
and
jle
test
and
or
cmp
je
sbb
lds
xor
pop
mov
push
pop
pop
pop
sub
push
mov
push
xchg
std
je
stc
mov
mov
mov
add
add
ljmp
xchg
mov
xchg
sbb
mov
push
and
out
rolb
cmc
jo
jge
test
rcll
mov
pop
mov
sbb
lock
cmp
pop
jae
lds
repz
loopne
mov
aas
loope
pop
and
adc
jb
xlat
fiaddl
add
mov
jg
loop
fstps
adc
push
dec
push
pop
add
add
cs
clc
gs
add
es
push
fsubs
test
jno
mov
ljmp
lods
mov
lret
add
ljmp
sub
in
push
ret
scas
scas
addr16
mov
bound
cmpsb
add
jge
addl
out
sbb
test
add
lret
lods
push
fdivl
lock
add
cmpsl
test
enter
jb
sbb
shll
sub
dec
xor
cld
pop
jnp
popa
cmp
add
or
lret
lods
movl
add
les
rcll
add
int3
lret
xorb
testb
scas
jo
divb
nop
ds
mov
jmp
les
jo
insl
cld
jmp
int
jne
shrb
add
mov
mov
ljmp
cld
mov
aad
lcall
xlat
adc
add
add
pusha
mov
lods
add
das
into
call
lahf
jp
ds
push
xor
dec
test
and
add
jae
add
or
push
insl
add
pop
arpl
mov
inc
insl
add
pop
cwtl
je
cltd
add
repnz
sbb
add
fwait
inc
jmp
add
stos
sub
inc
pop
mov
inc
add
addl
addl
test
inc
fisubs
ja
add
orl
outsb
ja
pusha
add
sub
adc
inc
pop
adc
out
sub
dec
out
mov
inc
push
or
or
add
les
adc
test
divl
ret
sbb
out
or
ljmp
xchg
add
and
xor
sar
enter
adc
and
int
inc
lret
inc
adc
addb
adcb
add
ljmp
cli
push
test
shlb
ljmp
add
add
inc
aaa
icebp
jne
lahf
mov
je
jnp
xchg
mov
je
jns
movl
and
gs
sbb
add
call
mov
dec
rcrb
inc
mov
aam
add
jmp
mov
divb
jle
or
sub
nop
dec
jno
add
add
rol
xchg
jmp
inc
jp
jmp
icebp
rclb
mov
inc
mov
add
out
call
leave
popa
dec
test
aad
popl
insl
sahf
pop
lahf
or
push
out
push
lea
and
xchg
or
mov
leave
jne
aas
out
sahf
insb
clc
add
and
adc
out
out
cmp
test
mov
mov
push
push
mov
loopne
int3
cmp
push
lock
push
add
filds
xchg
xorl
dec
or
pop
in
or
add
sbb
inc
les
mov
aaa
sub
jl
shlb
shl
push
add
dec
push
mov
cmp
push
call
dec
icebp
std
out
cs
add
and
add
fldcw
add
lds
add
mov
in
add
mov
jnp
test
sbb
lds
cld
pushl
cmpb
sub
mov
jmp
shrb
add
add
out
rcll
incl
ljmp
inc
daa
imul
testl
xor
cmp
jmp
ds
sbb
jno
out
inc
cs
pushl
rcrb
add
or
lcall
aas
lret
out
or
stos
lock
add
add
add
push
movsb
lods
add
push
add
test
int
clc
add
add
and
call
add
add
mov
adc
pushf
and
or
add
add
lret
jmp
sub
add
or
add
xchg
dec
int
sub
ror
add
mov
in
mov
adc
or
test
popa
and
adc
dec
pusha
or
xchg
jmp
ret
nop
dec
add
sub
add
pop
push
mov
mov
cld
lcall
or
add
add
enter
out
inc
add
jb
and
test
xor
inc
and
pushf
inc
and
add
add
xor
inc
mov
or
popa
mov
add
sahf
mov
add
add
and
sub
sub
xor
add
sti
pop
fdivr
adc
xorl
sub
or
in
dec
int3
lods
decl
pop
add
movsl
rolb
sbb
jb
sub
jge
loopne
jns
test
rorb
add
add
dec
sti
insb
add
or
incl
xchg
sar
xor
incl
mov
and
mov
movsb
and
icebp
cmp
leave
movsb
mov
les
mov
xchg
adc
in
add
add
test
std
fildl
jno
outsl
and
mov
js
push
push
arpl
pop
jmp
pop
loop
add
add
mov
add
adc
pop
jmp
mov
cmpsl
or
jp
lea
out
or
sbb
cmpsl
cmc
cmp
testl
or
xchg
jle
fwait
js
aad
and
push
or
jns
std
and
push
sbbl
pop
add
and
fwait
repnz
fstpl
inc
or
call
xchg
mov
insl
movsb
rolb
jmp
mov
fcmovbe
cmp
or
jmp
sbb
in
mov
loopne
fisubs
rolb
sbb
add
or
jmp
movl
add
call
lea
add
fstl
pop
and
mov
andb
add
es
and
pop
add
int
jo
lds
inc
and
mov
cli
jbe
lcall
fbstp
sub
loop
test
add
dec
add
add
add
inc
add
add
cmpb
mov
fdecstp
xchg
lea
add
or
cmpsl
shlb
insb
lds
xor
or
cmpl
inc
test
mov
testl
inc
add
add
sub
sarb
in
dec
out
in
rol
rolb
add
add
mov
push
or
inc
mov
sub
add
rcl
push
test
or
and
inc
shrb
xchg
inc
add
mov
ljmp
add
into
mov
jecxz
ljmp
or
add
add
dec
jg
add
test
add
mov
adc
push
inc
les
jmp
cltd
pop
jmp
inc
pop
xchg
mull
ficoms
adc
jmp
inc
fs
lock
cs
add
es
add
add
push
mov
jne
mov
enter
and
add
add
pop
call
in
mov
movq
fadd
out
dec
test
rcl
ficompl
inc
in
or
shl
add
shrb
call
lret
or
shlb
mov
add
inc
xchg
idivb
jnp
call
xor
add
aad
jl
pop
add
mov
sub
cli
scas
gs
cmpsb
mov
inc
stc
sub
xor
xchg
adc
add
dec
or
enter
or
jl
inc
cmpsb
push
sbb
or
and
mov
mov
mov
lds
idivb
xor
or
not
aaa
inc
test
lea
add
add
daa
push
mov
add
add
rorl
jb
or
int3
and
std
adc
subl
aam
ret
mov
lea
cmp
push
lods
push
push
mov
xchg
shll
call
insl
lea
add
dec
in
xchg
mov
lds
lea
lea
sbb
inc
loopne
leave
and
sbb
push
sar
mov
les
inc
test
or
add
mov
out
add
add
fdivr
mov
mov
les
sub
xchg
fiaddl
add
add
add
add
into
jmp
leave
out
fidivs
xchg
jmp
inc
inc
jecxz
ficoms
dec
push
mov
pop
movsl
or
jg
out
xchg
push
addb
push
inc
fsubr
add
andb
adc
in
xchg
jle
lds
cli
dec
rorl
adcl
add
pop
jmp
and
add
jg
add
cltd
decb
push
push
ret
mov
add
sarb
or
sbb
inc
ret
jge
aas
mov
and
add
xchg
sbb
cmpsb
cmpsl
add
jb
rclb
mov
push
int
fisttps
shlb
xor
sbb
and
test
shlb
xchg
add
andl
push
sub
fmull
fadds
add
or
and
ljmp
push
add
aaa
dec
add
sbb
and
push
dec
and
dec
sbb
mov
dec
add
and
pop
and
pop
add
insb
push
insl
pop
pop
pop
and
jne
es
and
jp
add
adc
or
jl
test
or
adc
mov
dec
lock
xchg
shll
xchg
leave
and
fmull
inc
in
push
push
push
loop
cvtps2pd
add
and
push
sarl
aam
add
jnp
sub
cmovno
lcall
sbb
jmp
negl
add
ret
jb
add
mov
jo
les
shrb
inc
test
fiadds
cli
sahf
push
mov
stos
mov
into
add
add
outsl
lret
mov
jmp
jno
push
jle
or
ds
mov
int3
pop
filds
adcb
sbb
add
push
add
fstpt
repnz
pop
aam
les
add
mov
les
dec
add
mov
mov
add
test
jb
in
push
cld
mov
roll
push
sub
add
mov
roll
fwait
incl
sbb
add
and
ljmp
in
call
add
adc
pop
in
add
movl
add
mov
add
jmp
sbb
cmp
push
fdivrs
lock
cld
aad
mov
add
aas
push
shr
sti
prefetchnta
sbb
insl
std
mov
insb
std
mov
pop
ret
loope
mov
in
js
push
fmuls
xchg
addl
ljmp
add
inc
jl
sub
das
cld
lcall
add
punpckhbw
add
cld
mov
fdivr
mov
out
ret
mov
cld
push
leave
loopne
xchg
and
add
jmp
les
add
clc
sbb
mov
push
sbbl
lea
sbb
xor
add
sbb
mov
push
lret
pop
incb
ss
lcall
test
adc
jl
loope
add
nop
pop
fstps
add
jae
sub
sti
rep
xchg
xor
xchg
or
pop
subl
mov
add
adc
push
jmp
repz
test
push
mov
loopne
add
add
leave
push
lock
test
dec
adc
sub
pop
test
jg
jmp
in
xorb
add
out
scas
jmp
fistl
mov
push
and
or
fldenv
add
jecxz
ljmp
xchg
sbb
fidivs
dec
mov
xchg
fiaddl
lret
or
imul
cld
mov
enter
adc
cld
jmp
or
cltd
jmp
and
ret
call
mov
int
jmp
shr
movsl
jmp
and
jmp
xchg
mov
jle
or
rclb
xchg
mov
add
add
enter
xchg
test
clts
add
fisttpll
mov
jge
test
lods
add
add
add
and
and
add
insl
or
lcall
push
and
mov
pop
add
xor
jmp
mov
or
mov
or
loope
sub
repnz
add
cwtl
pop
xchg
sub
add
pop
push
inc
stos
fcompl
push
add
sbb
mov
les
scas
mov
pushf
ror
add
mov
repz
fwait
mov
add
mov
mov
or
jg
sbb
je
cmpsl
test
add
add
aas
pop
fsubrl
pop
stos
mov
movsl
insb
and
jnp
loopne
push
add
cmpsb
lret
fstps
test
mov
add
xchg
lret
push
mov
mov
mov
mov
push
push
shll
jmp
dec
stos
jl
loope
add
testl
push
hlt
lret
adc
jl
out
test
in
lock
pop
or
push
add
or
jmp
call
test
fisttpl
xchg
or
add
jmp
sbb
mov
add
push
mov
add
and
cmp
mov
mov
rcr
push
pop
jmp
mov
push
add
sarb
jmp
enter
roll
xchg
inc
add
mov
xchg
pop
sbb
mov
pop
cld
bound
pop
call
pop
mov
pop
arpl
push
repz
call
xchg
in
call
sbb
add
mov
mov
mov
roll
orb
add
mov
add
mov
inc
loope
or
add
jge
cltd
insl
out
cmpsl
clc
sti
lcall
mov
psubq
psubq
add
cld
or
enter
cmp
call
add
push
pop
add
cmc
mov
push
add
add
mov
pop
add
mov
sbb
mov
and
add
ret
pop
sub
add
stc
sbb
ljmp
add
add
sbb
flds
mov
sbb
aas
loopne
and
add
popf
mov
ja
push
call
ret
mov
add
jle
or
mov
aam
push
cmp
sub
mov
mov
dec
rclb
and
push
add
aas
es
mov
repz
sarb
in
in
daa
test
sbb
cmp
pop
test
sbb
cmp
daa
test
add
jmp
mov
test
xchg
add
add
cmpsb
ss
mov
push
jmp
mov
ret
add
loop
sbb
out
sti
jl
mov
push
ljmp
mov
shrb
jno
fistpl
adc
add
pop
mov
xlat
rep
or
out
dec
mov
fldl
outsb
or
mov
lock
add
out
add
movl
and
and
mov
push
pop
jnp
jo
jb
jmp
mov
lcall
mov
cli
cld
hlt
sub
inc
jmp
inc
inc
or
or
mov
jmp
and
std
sbb
add
clc
sti
inc
pop
flds
add
add
add
dec
es
call
add
notl
ret
lds
xchg
mov
cld
ljmp
lock
adc
push
jg
and
or
add
mov
rolb
add
fldl
xchg
adc
add
pop
pop
pop
in
or
lea
int
lret
xchg
adc
add
pop
pop
pop
pushf
or
incl
add
add
in
push
add
adc
test
add
mov
out
push
add
test
push
test
pop
or
jmp
les
scas
shll
pop
out
adc
add
lock
imul
cmp
pop
lods
cmp
std
adcl
decl
out
test
cmp
cmp
out
call
add
add
repnz
jne
cmp
mov
scas
incb
scas
mov
add
out
xchg
incb
dec
cmp
leave
ds
leave
inc
fsub
test
test
jns
vshufps
outsb
arpl
cwtl
dec
aas
lods
fwait
rorb
cmpsl
sbb
cld
hlt
or
mov
les
add
mov
mov
add
icebp
mov
add
outsl
ds
mov
dec
fcomps
call
mov
in
add
stos
add
mov
inc
inc
cld
add
xor
xorb
test
mov
sarb
cmp
add
mov
sti
push
mov
mov
out
add
bound
outsb
aaa
adc
xchg
into
add
pop
and
fcmovu
dec
negl
pop
lea
fcoml
stos
ljmp
fiadds
lea
fsubr
daa
pop
jle
daa
call
sti
and
jmp
jl
test
lods
add
sbb
inc
cmp
cmp
inc
add
cld
xchg
sbb
ljmp
cltd
or
aam
sti
inc
pop
sti
inc
jg
insb
push
sub
cld
jmp
xchg
and
add
or
push
mov
or
jmp
dec
or
in
call
pop
jmp
ja
sbb
add
fadds
add
add
add
add
shll
lods
fnstcw
or
lret
add
les
jnp
shrl
into
xlat
mov
out
sbb
repz
mov
xchg
jge,pn
test
call
add
xorl
out
jle
shl
push
adc
sbb
push
repnz
imul
add
jbe
xchg
out
mov
pop
fstpt
jne
jne
pop
lea
mov
cmp
cmp
notl
aas
sub
push
jb
divl
test
or
jb
call
mov
add
ret
sbb
xor
int3
lea
push
inc
inc
hlt
jle
es
or
mov
inc
aam
mov
add
add
pop
lea
push
in
scas
mov
add
in
ja
jmp
jnp
inc
add
loopne
lods
sbbl
testb
add
cmp
add
xor
mov
ret
lea
es
jl
rol
pusha
jmp
bound
daa
cmpsb
arpl
fidivrl
test
cmp
adc
or
push
add
int
add
xorb
xor
add
into
mov
inc
test
test
ret
data16
or
mov
fisttpll
rcrb
add
push
mov
mov
sub
pushf
repnz
fidivl
aas
lahf
ret
push
push
sbbb
sti
add
pop
insb
scas
cmp
cmpsb
addb
incl
mov
or
jmp
movsb
addr16
hlt
mov
idivb
inc
test
jmp
cmp
xchg
jo
sub
mov
xor
pop
enter
and
cmp
xchg
jo
cli
dec
or
and
adc
cmpsb
add
call
mov
cld
ljmp
repz
mov
adc
add
arpl
pop
mov
xchg
add
inc
inc
xchg
push
inc
cmp
mov
out
incl
inc
data16
adc
jnp
mov
imul
daa
ret
out
cmp
push
push
add
imul
out
enter
jl
fucomi
call
out
fwait
xchg
push
inc
jbe
sbb
or
add
add
imul
mov
xlat
add
add
in
fldt
leave
rcrl
hlt
inc
loopne
add
xchg
in
sti
push
cmp
add
jmp
in
sti
push
test
add
jmp
in
or
push
incb
movsb
add
sub
jecxz
add
add
in
jge
sbb
add
sub
add
or
leave
add
jmp
in
sti
es
add
xor
leave
xchg
repnz
hlt
mov
les
jae
mov
shll
rorl
xchg
mov
or
cld
sti
jle
cmpsb
add
or
and
adc
jmp
jo
sti
push
cmp
or
add
add
add
and
or
xchg
and
mov
sti
cmp
testb
inc
cmp
mov
sti
sti
and
std
sti
mov
sub
or
bnd
sti
and
cmp
push
test
add
add
mov
ficompl
lods
add
add
sbb
and
and
add
hlt
xor
jmp
cmp
bound
or
pop
inc
cmp
jo
add
dec
clc
std
jmp
mov
add
add
xor
or
aas
cmp
adc
jmp
repnz
mov
add
lods
fisttps
mov
mov
push
xchg
and
cmp
inc
inc
out
jl
dec
aaa
adc
sub
mov
shrb
repnz
mov
jp
test
or
adc
roll
pop
and
je
add
xor
out
decl
stos
adc
ret
push
dec
incl
add
add
xchg
dec
or
mov
add
lock
leave
scas
cs
andb
adc
inc
in
andb
mov
inc
int
inc
shl
out
pop
inc
call
mov
sub
mov
inc
sub
mov
movsl
adc
xchg
bound
adc
add
test
jb
mov
addl
test
jg
notb
xchg
add
add
lds
jno
add
in
repnz
or
test
movl
xchg
cmpb
test
shrl
mov
xlat
cmp
out
inc
xchg
in
xchg
mov
jle
roll
add
dec
andl
sub
clc
mov
adc
sti
jmp
pop
lcall
inc
sbb
jmp
pushf
fisubs
inc
clc
lea
inc
es
cmp
rolb
sub
dec
mov
jp
mov
add
rcrb
packsswb
push
jno
mov
add
shl
fs
mov
or
rclb
add
rclb
pushl
das
orb
subb
inc
jmp
xor
sub
mov
sub
cwtl
dec
sbb
cmpsb
dec
inc
sub
ret
js
ja
add
pop
mov
cmp
stc
xor
xchg
and
addr16
push
xchg
cmp
xor
cmp
or
call
push
adc
test
andl
popf
call
or
bound
fimuls
dec
mov
add
cmp
add
cmp
std
or
add
add
add
jmp
add
add
jmp
xor
pop
sub
fmull
dec
or
cmp
push
in
lock
jmp
cld
fnstcw
jo
xlat
add
xchg
cmpsl
or
sub
add
add
cmp
inc
ljmp
adc
xchg
add
or
add
icebp
jns
in
mov
add
sub
int3
sbb
pop
fs
xchg
movsl
jmp
or
repnz
mov
rorl
cld
rcr
pop
xchg
aam
xchg
rcrb
add
xor
mov
pusha
test
sub
cmp
test
fnsave
sub
les
sub
add
add
pop
mov
cmovbe
jo
sub
out
dec
jge
add
inc
fs
movsl
xchg
add
movsb
push
add
insl
push
sti
mov
adc
mov
adc
mov
and
test
adcl
push
es
mov
adc
inc
and
movb
and
xor
mov
or
add
mov
mov
mov
cmp
mov
add
jmp
adc
lods
addb
inc
addl
rcll
add
loop
cmpl
pop
adc
fimuls
xor
mov
jg
or
fbstp
or
pop
jmp
mov
getsec
mov
pop
jae
fwait
inc
cmp
arpl
mov
inc
push
fimuls
jl
push
push
or
roll
fimuls
les
and
fdivrp
incl
inc
and
cs
std
pop
lret
fimuls
pop
push
cmpl
pop
lds
add
push
dec
mov
add
outsb
lock
dec
inc
mov
addl
cmp
sub
je
fdivp
sbb
add
jo
loopne
ljmp
ja
xor
inc
jb
mov
sub
sarl
stc
shrb
sub
add
add
movsb
xor
inc
jb
loopne
ror
and
rcrb
jmp
roll
sub
cmpb
lret
and
mov
jo
add
icebp
sti
push
sub
jmp
movl
or
add
rclb
out
inc
outsl
add
movl
or
aas
sub
andb
roll
push
add
add
jmp
mov
aaa
ror
push
add
add
add
movl
push
mov
mov
add
out
std
mov
dec
sti
lcall
std
mov
dec
sti
ljmp
mov
sub
add
sub
leave
call
test
push
testb
sbb
or
add
push
adc
add
add
jbe
mov
inc
add
add
mov
je
mov
dec
xor
push
mov
hlt
std
jmp
test
inc
pushf
or
jmp
fcoms
pop
leave
cmc
mov
scas
roll
cmp
pop
mov
fdivrp
fdiv
mov
lret
lods
dec
lds
cmova
add
ror
test
lcall
in
inc
lds
add
mov
shr
sti
sbb
decl
xor
or
sbb
mov
aas
mov
jne
jp
decl
and
mov
xchg
cmp
xor
fmull
loopne
popf
xor
insb
cmc
icebp
jle
pop
pushf
inc
push
inc
xchg
lds
xor
push
jmp
mov
add
lds
add
inc
out
es
pop
int
add
testb
movsl
mov
pushf
inc
les
and
cmp
add
xorb
mov
inc
add
cli
xrelease
movb
int
addb
subb
clc
test
or
mov
imul
mov
or
das
sub
addl
sub
mov
rolb
les
roll
sbb
xchg
cmp
jmp
cmpsl
clc
test
add
sub
es
mov
jl
stos
mov
sti
add
cmpl
add
add
ret
addl
lret
mov
pop
xchg
pop
adcl
mov
or
mov
insl
sbb
int
add
sbb
enter
mov
cmp
sub
idiv
cmp
add
add
push
adcb
push
add
in
add
ss
pop
divl
add
std
mov
clc
push
call
fistpl
adc
push
inc
fcomip
mov
adc
leave
pushf
push
jmp
or
xchg
fs
add
decl
sub
mov
and
jmp
out
ljmp
dec
arpl
inc
jae
add
jbe
in
mov
aaa
mov
lock
sub
fs
test
lcall
lods
mov
adc
imul
inc
pusha
roll
mov
mov
adc
add
or
sub
sub
jb
sub
add
mov
xchg
test
add
add
call
dec
test
mov
mov
add
addr16
jmp
dec
call
inc
lock
loopne
ljmp
test
xchg
add
mov
adc
jmp
jnp
sti
jmp
pushf
push
push
sbb
pop
call
mov
es
mov
es
pop
and
movl
test
movl
inc
or
mov
mov
jmp
jl
add
mov
subl
mov
inc
jae
push
adc
dec
add
xlat
std
mov
add
add
inc
add
add
push
inc
dec
sti
push
xor
or
scas
roll
loope
andl
mov
cmp
test
or
inc
xchg
and
shr
xor
ret
mov
push
std
cli
push
aas
jmp
xor
inc
mov
jmp
add
ret
popa
push
sub
in
inc
addl
or
in
jle
mov
inc
mov
addb
iret
and
add
mov
rep
sbbb
or
dec
sub
and
inc
dec
add
push
and
push
inc
and
push
pop
and
jno
or
cmp
add
outsl
mov
or
inc
add
les
subl
add
cs
cmp
jnp
out
incl
dec
push
lea
sti
adc
cmpsb
mov
std
call
or
ss
mov
les
clc
add
nop
xor
sbb
add
lret
cmp
std
jbe
add
add
std
cld
inc
cmp
add
dec
cld
inc
push
fadds
les
sub
sub
sub
pop
jmp
sbb
and
std
inc
sub
add
pinsrw
push
ret
dec
es
fdivl
add
lods
inc
outsb
testb
loopne
mov
test
or
add
add
testb
inc
fisttpll
push
mov
cli
fdivrl
sub
insb
movl
jae
mov
add
inc
pusha
add
push
rolb
pop
add
pushf
inc
outsb
cli
mov
aas
push
adc
into
dec
es
pushf
mov
pop
mov
cs
insb
and
or
clc
adc
jg
sysret
add
jg
add
add
jg
sysret
add
push
inc
es
lret
jl
add
add
lods
sbb
inc
xor
es
mov
add
xchg
dec
outsb
ucomiss
xor
mov
fimuls
cmp
jb
cmp
bound
mov
inc
mov
add
cmp
add
add
cs
add
fistpll
adc
cld
testb
lret
push
or
or
mov
xchg
or
test
shl
or
in
cmp
dec
jo
pinsrw
inc
mov
or
cmp
out
push
scas
aas
xchg
or
cmp
xchg
cmp
or
addb
add
xchg
jle
std
lret
and
inc
xchg
or
mov
add
imul
fiaddl
jmp
adc
add
test
mov
aad
push
pusha
faddl
lds
cs
adc
add
jmp
xchg
jmp
jle
sbb
add
mov
les
sub
sub
sub
pop
mov
add
lds
jnp
sub
sub
adc
mov
jmp
test
or
lock
sbb
sub
or
lds
xchg
mov
add
sub
test
call
call
ret
dec
es
mov
jne
add
inc
rorb
sti
push
in
cltd
pop
jb
sbb
test
and
notb
adc
mov
aam
mov
sbb
add
mov
mov
das
mov
jl
push
btr
mov
popa
push
add
pushf
cmp
ret
daa
repz
cmpsb
push
es
pop
inc
and
xor
jle
add
add
shrl
inc
addl
shrb
cmp
fiadds
setae
mov
dec
mov
adc
jo
adc
in
popa
inc
and
inc
addl
ret
jmp
mov
and
sub
mov
fdivrp
lcall
adc
push
and
mov
decl
dec
xor
adc
stos
fdivrs
mov
sbb
jo
inc
cmp
ret
out
sub
and
in
hlt
subb
call
cmp
loop
push
iret
and
lods
decl
lret
imul
lods
in
imul
sbb
push
dec
and
push
adc
fldl
add
jb
dec
repz
lahf
push
add
stc
stc
stc
hlt
pop
add
sbb
outsl
mov
inc
mov
jl
and
sub
xchg
pop
pop
test
jmp
sbb
or
icebp
and
sub
jo
std
testb
add
nop
insl
pop
cwtl
push
jmp
pop
mov
xchg
out
and
rolb
add
add
xchg
or
dec
rcll
in
and
jns
in
add
cmpsl
and
or
add
cld
mov
sub
add
ss
push
cli
sub
inc
out
add
xchg
inc
add
push
mov
rcpps
adcl
sbb
jmp
jb
add
add
and
jb
imul
and
xchg
push
in
mul
flds
sub
or
xlat
inc
aaa
add
cmp
std
ljmp
mov
outsl
push
fs
psubsb
std
incl
cli
or
cmp
imul
call
pop
add
loop
inc
inc
out
jle
test
cld
incl
mov
or
push
test
and
push
test
loopne
ljmp
and
imul
mov
test
inc
cmp
popa
nop
jecxz
mov
and
and
aam
and
out
test
mov
int3
push
or
dec
push
add
jecxz
fwait
jb
filds
enter
jne
pop
push
mov
in
cmp
aas
loopne
cmp
cltd
add
or
inc
fwait
loope
and
or
push
cmp
roll
cmp
or
std
test
jmp
dec
fcmovbe
loopne
xchg
rorb
mov
and
out
fistps
jo
test
lds
fstpt
or
push
mov
add
jl
add
enter
fldenv
imul
loop
loopne
adcl
in
mov
test
aaa
loopne
movsl
ret
push
loop
sbb
outsl
roll
jmp
mov
lret
or
sub
pop
push
add
data16
into
leave
cmp
dec
and
mov
inc
inc
ss
fadds
testb
sahf
gs
inc
sarb
loopne
test
aaa
push
aam
jg
jae
sti
fisubrs
iret
push
call
adc
sti
stos
sbbl
add
call
fdivr
ss
outsb
fiadds
std
es
mov
dec
inc
ss
mov
xor
add
out
inc
push
adc
and
jecxz
fsub
std
cmp
push
jno
stos
jge
mov
std
repz
rorl
test
aas
cmp
jle
test
idiv
sub
test
pop
out
mov
pop
inc
add
jecxz
fsub
std
setae
setae
incl
sub
add
jge
add
jecxz
or
add
sbbb
je
cmpl
and
cmc
test
cmp
in
jmp
jns
lcall
aaa
push
lret
adc
pop
mov
out
call
enter
out
lcall
add
add
in
call
lock
mov
std
jnp
or
les
and
jne
out
push
xor
decl
mov
inc
mov
lcall
jo
pop
cld
push
add
adc
out
call
add
jmp
in
jl
or
rorl
cmpsb
pop
adc
loope
cld
mov
or
dec
cmc
push
inc
or
add
mov
add
add
push
xchg
mov
cmp
aad
imul
add
mov
int
jb
mov
test
mov
lds
add
std
xor
aam
daa
js
jmp
pop
out
inc
jmp
and
add
sub
sti
pop
mov
jle
push
xor
pop
call
mov
fisttpll
rolb
testl
add
enter
xchg
out
pop
inc
add
push
dec
add
dec
dec
es
adc
sbb
rorl
add
movl
outsb
test
xchg
push
es
or
inc
sbb
subb
mov
ljmp
pop
pop
mov
shlb
jl
and
pop
add
sbb
pop
std
mov
inc
sti
lcall
sub
lods
pop
push
lcall
sub
popf
pop
mov
push
jnp
pop
insb
pop
add
sbb
pop
add
add
add
ljmp
in
shlb
lock
bound
ja
sub
add
sbb
test
add
push
andl
cmp
fmull
add
push
xchg
gs
jo
out
xchg
pop
rcl
xlat
push
cmp
push
call
mov
add
add
and
push
xchg
pop
and
decl
lock
jmp
xlat
std
aas
pusha
and
fdivr
xchg
push
add
push
andb
decl
push
xchg
add
add
dec
add
push
les
ljmp
cmp
test
jo
fmull
add
loope
sub
inc
pop
ljmp
jle
and
pop
jmp
sub
ss
jo
xor
mov
lcall
jge
mov
test
ljmp
pop
jmp
aaa
arpl
jmp
fiaddl
cmc
jae
lahf
add
rorl
xor
add
jle
add
sbb
push
jb
ficomps
and
rolb
xchg
fldt
xchg
xchg
inc
iret
adc
pop
sbb
rcr
jno
sub
add
ret
dec
pop
adc
call
es
sbbl
add
add
movl
aaa
jge
add
add
add
mov
sti
ljmp
jne
pop
sbb
add
inc
and
std
mov
or
cmc
fnstcw
dec
add
stos
scas
sub
mov
cmp
jb
mov
add
fisttpll
test
movsb
add
cmp
pop
or
add
add
jmp
push
jle,pn
push
out
insl
add
call
fs
adc
out
aam
fdivr
cmp
clc
push
fistpll
fs
and
push
inc
and
sbb
sti
or
push
mov
pop
cmp
pushf
das
push
repz
pop
mov
testl
std
adc
xor
ret
mov
addb
out
and
fdivrp
ljmp
je
mov
sti
mov
sbb
stc
hlt
push
pop
loopne
sbb
mov
jp
cmpl
mov
jp
and
fisttps
jp
and
inc
test
sbb
fldpi
adcb
pop
and
add
jb
test
mov
popf
push
push
mov
lods
pop
mov
add
xchg
add
add
sbb
pop
add
jmp
add
xorb
mov
xchg
es
roll
call
bswap
sti
insb
xchg
test
lret
sti
sti
and
and
add
add
sub
std
xchg
mov
mov
jb
add
xchg
xchg
add
push
fldz
sbbl
pop
adc
es
add
xchg
jecxz
or
add
into
sub
inc
jnp
fidivrs
mov
dec
inc
xor
leave
xchg
push
add
jg
push
add
pop
or
cltd
and
std
mov
adc
lcall
iret
stc
and
mov
fidivl
add
xorb
sub
add
cmp
ljmp
xor
std
pushl
es
in
pop
add
testl
lea
adc
push
aad
jmp
add
add
out
inc
and
cld
add
xchg
jecxz
aas
pop
sbb
ds
and
sbb
xor
arpl
mov
pop
sub
pop
mov
aam
call
push
mov
ljmp
imul
out
or
std
dec
sbb
add
and
incl
out
cmp
testl
add
add
std
call
mov
insb
mov
lret
pushl
pop
lods
lea
and
jmp
xor
xor
sarl
and
mov
pop
lret
jge
mov
lret
cwtl
add
add
xchg
lds
sub
jmp
roll
fnsave
add
add
lock
rorl
jle
sub
fdivp
jle
and
push
js
add
dec
out
loop
les
mov
roll
cltd
lds
loopne
add
dec
add
jle
or
add
push
aaa
ja
es
cmp
mov
mov
sti
jmp
cmp
pop
call
stos
sub
jmp
lret
repz
jae
jbe
test
cmc
lcall
pop
clc
jo
push
idivb
add
xchg
js
movl
or
add
pop
cmp
and
jle
sti
lret
ss
sbb
mov
jge
popf
xor
loop
push
loop
dec
push
es
or
sub
add
mov
sbb
dec
sbb
fwait
jne
xlat
add
inc
mov
sbb
sbb
add
add
push
add
mov
sbb
xor
add
inc
cmp
mov
sbbb
sbb
cmp
in
add
pinsrw
fiadds
addb
add
mov
test
faddl
andl
or
add
lds
pop
call
fdivr
jg
loop
andl
outsb
add
faddl
ror
fdivr
cmpb
incl
lahf
add
jns
data16
jae
pop
enter
xor
out
dec
xchg
mov
test
in
add
test
xchg
add
adc
rolb
push
xorb
outsb
jnp
adc
or
int3
jnp
adc
sbb
ds
aad
add
fsubr
movsb
iret
dec
ds
enter
mov
and
cmp
ljmp
jp
sbb
add
add
add
repz
jo
call
inc
bound
test
test
xchg
jne
nop
add
jmp
cmp
pop
call
fwait
enter
sti
jmp
rolb
call
pop
ret
sti
insb
xchg
xchg
add
rclb
into
pop
push
jb
ljmp
inc
or
add
lret
jo
ljmp
in
adc
add
mov
es
subb
jo
popl
jmp
xchg
jmp
or
lahf
dec
addl
dec
leave
in
push
mov
or
packssdw
lcall
in
pop
add
jmp
cld
mov
hlt
cli
incl
add
add
in
pop
add
popf
es
insb
or
call
out
jg
cltd
sarl
std
mov
sbb
xchg
lcall
pop
test
or
jecxz
and
push
jne
cmp
jp
test
fimull
in
add
mov
mov
or
xor
add
aas
imul
push
and
jp
rcl
mov
shr
xchg
and
cli
mov
mov
test
lock
inc
and
pushl
test
mov
test
aaa
xchg
and
scas
incl
xor
jo
sub
xor
pop
inc
les
xchg
and
add
ss
add
add
jp
xor
ret
jmp
xchg
test
ljmp
ret
leave
mov
rol
jb
sub
jmp
int3
mov
add
hlt
xchg
call
adc
and
add
add
jnp
and
inc
jmp
add
pop
lods
nop
mov
mov
xchg
xchg
add
rorb
loop
sub
add
jmp
xor
pop
jne
sti
ficoms
sbb
mov
push
mov
xadd
jmp
test
xor
jmp
xchg
ret
sti
jo
mov
in
mov
xchg
popa
add
movl
call
movl
add
adc
jle
es
je
sti
push
add
jmp
mov
inc
xor
ret
das
hlt
lcall
lret
jecxz
faddl
mov
pop
add
add
push
stos
nop
es
faddl
inc
add
and
pop
add
add
add
lret
mov
cmp
add
scas
jne
pushl
in
add
in
cli
ljmp
mov
xchg
or
ret
inc
hlt
ljmp
mov
cld
sub
jecxz
pop
add
mov
xor
pop
lds
aas
xchg
aas
xchg
and
lods
dec
clc
cmp
adc
decl
cs
test
add
les
and
incl
hlt
out
and
lods
call
dec
std
dec
in
clc
xorl
ljmp
and
and
lods
incl
inc
fists
and
scas
call
outsl
and
in
add
daa
dec
mov
xchg
loopne
ljmp
add
add
add
add
aad
enter
jle
mov
jmp
jmp
pop
addb
leave
ja
add
ljmp
mov
jmp
and
inc
jmp
add
add
xchg
and
add
int3
nop
test
ljmp
testl
add
addl
rorb
dec
sbb
mov
cmpsb
xor
xchg
popa
add
movl
call
test
add
adc
or
xchg
rolb
pop
movsb
popa
add
mov
sti
jmp
pop
sti
incb
insb
jnp
sti
out
dec
sbb
out
popl
jmp
movl
mov
mov
push
pop
dec
push
lcall
or
mov
in
ljmp
push
inc
add
or
add
in
cli
fldl
sar
imul
mov
ret
jg
rolb
lds
sbb
ret
inc
lahf
cmp
mov
ss
xchg
mov
jb
aas
add
insl
loopne
mov
xor
sub
je
loop
btc
rcll
add
and
and
aaa
jge
les
aas
mov
cmp
add
sub
add
sbb
arpl
xchg
fildl
dec
and
rol
incl
in
mov
adc
nop
cmp
aas
cmc
jbe
call
lods
pop
cli
popf
adc
std
mov
jo
test
stos
jecxz
push
aam
rclb
adc
add
addb
loopne
sub
loop
jp
add
add
enter
int
incl
inc
cmpsb
subl
jo
loopne
ljmp
icebp
jno
test
mov
stc
jno
sub
mov
inc
add
or
movsb
sub
pop
and
adc
call
mov
les
pushf
add
add
sti
out
mov
loop
and
add
add
add
sti
mov
xchg
jmp
mov
cmp
sbb
mov
xchg
add
loope
test
pop
push
jle
loope
jbe
or
aam
adc
jae
call
or
or
incl
jmp
lods
movl
xchg
xchg
dec
pop
dec
loop
add
adc
jmp
jo
popa
inc
insl
mov
leave
push
repnz
dec
rcll
xchg
add
add
andb
pop
add
xchg
pop
std
pushl
push
popa
inc
sbb
les
dec
add
xchg
add
js
es
add
movsl
lock
lock
popa
inc
in
scas
mov
cmpsl
cwtl
ret
std
push
imul
aam
out
inc
cld
add
add
add
scas
and
scas
jae
add
scas
mov
push
add
scas
jecxz
add
scas
jmp
push
test
add
and
test
fmull
test
mov
sti
test
in
add
scas
outsb
or
scas
cli
or
scas
fisttpl
add
inc
jmp
icebp
mov
inc
jmp
icebp
rolb
inc
jmp
popa
leave
inc
jmp
xor
inc
jmp
sbb
add
add
inc
jmp
xor
inc
jmp
cmp
inc
jmp
sbb
inc
jmp
ffree
inc
jmp
jmp
inc
jmp
mov
loope
jmp
mov
mov
inc
jmp
mov
loope
jmp
xor
inc
jmp
clc
filds
cmc
filds
push
loope
jmp
or
inc
jmp
mov
ljmp
or
into
or
stc
rclb
dec
cli
mov
push
sbb
scas
sbb
shrb
sbb
or
jecxz
or
jecxz
or
loop
push
lock
add
sub
cmpsl
cs
addr16
dec
dec
ja
dec
xor
mov
ss
mov
cmp
aas
dec
dec
daa
aas
aaa
mov
cmp
dec
dec
fnstsw
inc
insl
mov
inc
pop
jecxz
inc
pop
cmp
inc
sub
lods
adc
inc
sbb
out
inc
sub
shlb
inc
sbb
into
adc
add
add
popf
cmovno
loopne
inc
les
mov
test
aas
pop
test
mov
add
lahf
loop
add
lahf
aaa
adc
add
lahf
nop
adc
add
lahf
push
sbb
lahf
sbb
add
lahf
in
and
sahf
inc
and
add
add
sahf
pop
and
sahf
fisubl
test
xor
pop
test
jmp
add
lock
call
dec
lcall
add
in
inc
inc
int
mov
mov
push
cli
jle
call
mov
call
mov
mov
lods
inc
push
or
dec
inc
push
or
in
inc
or
sbb
enter
cmpsl
adc
outsl
int3
add
insl
popa
mov
add
insl
pop
incb
jmp
movb
call
inc
lret
or
incb
jmp
in
mov
add
cmp
ljmp
add
mov
xlat
add
mov
fisttpll
add
repnz
rolb
ss
inc
push
jo
ljmp
push
dec
es
inc
push
es
fcomi
mov
push
add
push
push
and
or
add
ljmp
subb
test
jne
jmp
in
add
push
xchg
es
faddl
mov
cmpsb
lret
mov
add
xor
popa
add
subl
inc
xchg
lret
fisubrs
mov
ds
pminub
iret
pop
lret
rcrl
xchg
mov
push
les
fcmovne
les
dec
incl
lahf
add
dec
sub
mov
sahf
incl
push
add
les
cmpsb
add
and
aas
popa
pop
mov
dec
dec
sub
mov
sahf
decl
loope
rolb
sahf
mov
pop
scas
pop
cmpsl
pop
xchg
xor
mov
pop
cmpsl
out
dec
and
add
decl
mov
jmp
pusha
push
popf
out
in
jle
loopne
add
stos
lods
shl
sub
les
fsub
add
lret
scas
jmp
or
mov
test
mov
leave
jmp
fisttps
jge
loopne
push
jmp
add
int
les
les
les
pusha
lds
push
jmp
das
stos
lock
cmp
scas
outsl
rcr
cmpsb
jmp
inc
mov
data16
pushf
and
std
test
push
sahf
adc
add
jmp
icebp
inc
mov
jbe
jmp
testl
add
in
popf
movsl
jmp
jmp
xchg
scas
sti
leave
cmp
mov
add
cmp
movl
jmp
sahf
add
aam
es
les
add
aas
or
fimuls
ds
sub
or
add
jmp
faddl
jmp
fildl
pop
data16
sbbl
add
loop
stc
bound
add
add
mov
lods
jno
sub
pop
add
add
mov
outsl
mov
jo
cmp
and
add
add
pusha
mov
loopne
jp
and
or
add
test
fs
or
cltd
pop
or
addb
test
add
dec
pop
sub
dec
addr16
sahf
lahf
sahf
pop
xor
mov
pop
mov
aas
mov
ffreep
adcl
loopw
mov
and
stos
jae
fdivrs
decl
fistpl
arpl
daa
lds
mov
and
sti
cmp
cwtl
add
adc
inc
sahf
orb
mov
mov
inc
mov
add
add
loop
add
enter
les
ljmp
addl
lcall
pop
clc
dec
add
call
add
jl
lods
lods
xlat
adc
pop
sub
mov
pop
mov
push
jo
loopne
push
jecxz,pn
stos
pop
xor
add
add
add
std
add
sub
push
lds
inc
inc
add
mov
push
bound
jns
icebp
adc
jo
loop
filds
cli
add
sub
clc
mov
push
sahf
or
stos
mov
and
mov
xchg
std
add
movl
add
movl
add
dec
sub
cmc
sub
stc
dec
sahf
jbe
dec
andl
fs
xchg
jmp
pushf
mov
dec
sub
inc
bound
lret
jne
mov
pop
mov
dec
mov
lret
scas
add
mov
cmpl
cld
cmp
push
test
and
loope
arpl
sub
mov
lock
push
mov
add
add
jle
add
add
fisttpll
pop
mov
out
adc
icebp
in
or
aaa
cmp
jo
mov
xor
xchg
les
mov
rcrl
mov
les
mov
in
pop
out
push
test
cmp
lahf
iret
add
aas
jbe
mov
add
add
xor
mov
mov
or
fsubr
hlt
xchg
xchg
sahf
ret
decl
mov
js
les
scas
out
lahf
incl
jecxz
les
nop
add
sahf
jl
call
fwait
andl
out
out
incl
in
adc
sbb
in
push
out
add
add
repnz
cld
ss
gs
mov
loope
add
add
rcrl
jmp
xchg
negl
add
int
mov
or
fst
pop
push
mov
mull
repz
jge
push
scas
inc
test
fldl
sub
ss
jge
outsl
push
jmp
pop
inc
sub
adc
push
cmpsl
outsl
in
lods
add
test
shlb
adc
loop
fs
jmp
fsts
sub
jp
leave
les
cmpsl
xor
pop
cli
outsb
out
dec
or
enter
sub
jae
dec
sub
sbb
inc
stc
jle
movb
out
add
add
inc
mov
xor
and
xor
inc
lods
in
fimuls
add
lods
add
ret
cmp
pop
outsb
jmp
nopl
sti
lcall
sub
add
xchg
dec
jne
and
add
add
cmp
add
sub
mov
roll
sub
popa
add
sbb
add
add
push
mov
and
movsb
sbb
sub
or
jge
rcr
add
sti
std
pushl
jg
les
cld
mov
ret
stos
std
stos
cwtl
cmpsl
je
ret
jge
les
stos
std
mov
addl
call
sub
lcall
add
add
add
mov
adc
les
ljmp
or
icebp
xchg
add
inc
call
pusha
js
in
mov
mov
add
daa
dec
and
daa
xchg
and
push
jmp
jnp
jmp
sub
stos
sbb
jns
fbld
fwait
push
faddl
ds
ljmp
mov
add
nop
jmp
jmp
jmp
out
loopne
std
dec
pop
jmp
lods
iret
sbb
jmp
scas
add
sub
add
sbb
orb
out
leave
mov
add
sbb
loop
jmp
add
jmp
sti
pop
aad
out
cmp
das
push
add
sti
mov
pop
mov
sahf
add
sahf
das
es
dec
jg
int3
and
pop
int3
jle
push
and
pop
push
push
push
bound
call
dec
push
sti
cld
xchg
sti
inc
jmp
dec
ljmp
sub
add
mov
jnp
dec
cmpsl
mov
add
movl
xor
ficoml
and
mov
stos
or
cltd
stos
and
xchg
sahf
mov
or
push
arpl
push
je
lods
repz
sbb
push
and
mov
je
test
add
sub
stos
dec
add
mov
ret
xchg
and
or
add
inc
xorl
inc
cmpsb
test
enter
cltd
test
clc
sahf
jb
jge
mov
ret
out
pusha
jl
test
push
add
mov
and
lods
decl
loop
lds
and
scas
out
inc
loop
les
pushf
add
cli
xchg
dec
jg
stos
push
add
in
or
xor
add
add
adc
addb
push
std
mov
mov
mov
repz
cmp
sub
scas
jle
pusha
sub
test
cmp
mov
testl
dec
sbb
pushf
dec
std
pop
jp
fnstcw
rorl
sub
mov
lods
pop
imul
test
cs
or
xchg
fildl
add
add
sub
lahf
mov
fsts
add
mov
mov
fisubs
add
stos
push
inc
rolb
test
int
dec
lea
adc
sar
push
fs
inc
jmp
push
test
cmpsb
gs
adc
sub
aam
inc
jmp
xchg
dec
adc
cmc
add
je
shrb
dec
outsb
xchg
jmp
sbb
jmp
mov
inc
hlt
jmp
adc
movl
adc
pop
lods
sbb
mov
sbb
push
xor
xor
lahf
lock
add
ficompl
or
xor
dec
dec
add
xor
loope
pop
push
add
add
dec
jg
test
out
add
adc
loop
fldl
mov
xor
and
andl
or
add
mov
jp
lcall
and
add
add
add
js
or
pop
or
add
pop
outsl
sub
sahf
push
push
cs
adc
scas
lds
push
les
add
std
lds
andl
dec
mov
lods
sbb
in
inc
into
mov
mov
enter
push
cmp
mov
inc
add
aaa
cmp
jge
adc
mov
add
fistpl
aas
jae
pop
inc
jmp
add
sub
scas
sub
fisubrs
cmp
mov
add
scas
push
jae
std
mov
inc
push
test
aam
or
sub
lds
jg
adc
add
jae
stc
add
inc
xor
or
add
test
stos
inc
push
add
mov
les
stos
sbb
dec
cmp
or
xor
add
and
enter
jnp
outsb
ret
testl
jo
mov
lcall
add
das
push
add
ss
jb
xor
add
mov
sbb
inc
cwtl
lea
sub
xchg
in
cld
add
jb
jne
cmc
pop
out
pop
cmp
roll
push
jmp
add
add
pusha
adc
std
cmp
dec
cltd
sbb
nop
xchg
shl
xor
mov
push
and
iret
pop
mov
sub
jg
sbb
rcl
xor
push
add
inc
std
add
add
adc
push
or
and
add
push
pop
das
lahf
sti
push
pop
jmp
or
ljmp
add
add
push
jecxz
mov
jle
sbb
lds
fwait
sti
lcall
lcall
popf
push
add
popa
mov
mov
aad
dec
add
lods
jp
or
cli
stc
pop
mov
or
push
mov
add
incl
or
push
jnp
and
dec
pop
cmpl
sbb
ljmp
nop
arpl
lds
inc
aam
inc
add
loope
xchg
xchg
out
mov
xor
addl
jae
add
add
push
cmpsl
icebp
lods
lods
incl
mov
adc
xor
mov
add
add
mov
mov
push
cwtl
cmp
mov
fimuls
mov
adcb
or
push
adc
pop
cmp
mov
lea
mov
add
dec
xor
inc
cmpsl
cld
pop
lret
test
mov
add
call
aaa
loopne
data16
roll
jo
hlt
dec
add
test
cmpsl
scas
or
and
or
xchg
lcall
pop
push
jg
rorl
sbb
cmc
xchg
outsl
cld
gs
add
add
sub
inc
or
pop
insb
xchg
xor
shr
xchg
sti
or
jge
mov
lcall
fidivs
ljmp
adc
fidivrs
add
jmp
mov
adc
jne
testb
pop
or
dec
xchg
jecxz
in
add
test
imul
pop
add
jbe
call
cmpw
or
in
add
stc
andl
add
mov
cld
shlb
mov
jmp
iret
mov
scas
fisttpl
push
and
mov
push
std
les
mov
nop
les
std
xchg
imul
add
or
aam
inc
adc
dec
divl
mov
or
movsb
sub
mov
jl
dec
hlt
add
in
les
xchg
stos
sbb
dec
push
cmpsb
add
lods
cmp
add
ss
push
mov
push
dec
jge
adc
lods
push
or
call
mov
in
out
push
call
adc
pop
push
test
push
dec
push
xchg
add
add
add
test
add
sbbb
add
cmp
aas
inc
or
or
mov
mov
mov
popf
out
cmp
cli
dec
pop
jmp
mov
fcompl
call
cmp
or
addb
sub
les
sbb
add
add
cmp
cli
or
cmp
sbb
out
popa
int3
add
popf
hlt
jle
lds
sti
aas
nop
jg
scas
sub
out
mov
jle
lds
das
lret
ret
ja
ret
bound
cli
jmp
push
stc
add
in
add
xchg
pop
pushf
mov
loope
cmp
jmp
addb
jmp
or
mov
ffree
add
or
fisttpl
xchg
jle
das
push
or
add
or
mov
mov
sti
add
mov
cmpxchg
or
pop
fidivrs
mov
inc
test
pop
andl
add
lods
les
pop
fadds
inc
dec
xlat
dec
push
inc
pop
dec
pushl
cmp
sbb
jle
cld
mov
mov
add
push
jmp
jle
mov
pop
adc
lock
ficompl
aas
or
cmp
in
inc
inc
xchg
sbbl
add
add
popf
jae
pop
cwtl
xchg
or
xchg
add
std
rorl
xorl
xchg
pushf
decl
jno
mov
rorl
mov
xchg
mov
xchg
ss
push
jp
icebp
pop
mov
add
xor
mov
mov
bound
dec
aas
add
jmp
mov
les
adc
les
clc
lcall
push
adc
popf
mov
inc
loopne
into
xchg
adc
xchg
sub
adc
sbb
imul
xchg
add
xorb
mov
xor
or
cmp
xorl
cs
jl
mov
xor
cmp
sub
or
stos
xchg
ljmp
dec
sti
cmpsb
movl
ljmp
lea
push
mov
sti
xchg
mov
jb
das
sub
enter
mov
push
xchg
mov
addr16
push
xchg
adc
insb
or
test
xchg
dec
sub
push
adc
add
add
idivl
negl
xor
ret
repz
movl
jnp
movl
add
mov
xor
sti
xchg
mov
jg
mov
add
int3
add
jg
shrb
es
ljmp
adc
popf
cld
add
push
xor
mov
mov
mov
cli
cmp
mov
aad
std
pushl
into
arpl
add
add
sub
rclb
jae
mov
les
std
les
or
or
inc
test
cltd
std
les
data16
call
add
cmp
add
mov
or
mov
pop
fistl
ljmp
and
pop
inc
hlt
mov
fadds
cltd
or
les
into
call
dec
cmpsl
and
int3
add
jmp
xchg
rorl
in
xor
add
add
jmp
jo
flds
cmpb
fldl
fdivs
enter
dec
mov
jmp
mov
subb
push
inc
movsl
ljmp
mov
pop
lock
jmp
fistpll
insl
fsubr
pop
inc
mov
outsl
sub
add
enter
adc
jne
dec
mov
add
sahf
xor
rolb
rorl
mov
add
sahf
sbb
rolb
call
xchg
xchg
cltd
ss
add
add
dec
cmp
or
jle
or
xchg
dec
mov
test
mov
jmp
xchg
cmp
pop
mov
arpl
mov
inc
mov
pusha
adc
or
and
jnp
add
or
add
or
push
lahf
jb
fnsave
adc
dec
add
xor
sti
fnstsw
hlt
icebp
cli
mov
push
jb
add
pop
push
loopne
pop
xchg
dec
addl
add
out
xchg
jmp
mov
jo
and
jns
add
lret
add
add
stos
cmp
dec
aam
mov
sahf
decl
or
sbb
movsb
pop
out
lds
mov
aas
inc
jns
jnp
lret
and
add
pushf
sub
pop
pushf
sub
push
shl
sub
rorl
les
adc
add
add
inc
hlt
aad
les
push
call
decb
add
sbb
pop
test
or
lret
adc
and
insb
test
mov
insb
add
jo
test
incl
xchg
lds
mov
loope
dec
jl
loopne
jl
xchg
mov
sub
loope
pop
xchg
cmp
inc
test
sarb
pop
jmp
xchg
mov
addr16
les
jmp
sbb
jl
add
xor
jmp
add
add
orb
movsb
fwait
ja
out
inc
or
push
inc
add
jmp
scas
decb
push
jmp
aaa
mov
jmp
xor
add
or
sti
out
sub
cmp
add
inc
adc
jle
sbb
xchg
call
mov
cmp
int
mov
jmp
shll
ret
movl
push
push
lret
addb
jmp
add
add
loope
mov
andl
add
cmp
push
push
add
and
lret
push
add
cmp
cmovo
aam
mov
insb
mov
sub
rclb
fstps
cmpsb
pop
in
add
je
je
xchg
je
cltd
dec
lea
shr
pop
test
lcall
popf
add
lea
add
add
popf
aas
push
movl
add
cwtl
lahf
adc
pushf
jle
dec
aam
test
pushl
outsl
adc
pushl
dec
xchg
adc
mov
add
rolb
pop
scas
xchg
xchg
xor
sbb
sub
jle
inc
mov
xor
test
push
dec
fmuls
push
rep
jle
les
add
sahf
sub
adc
je
mov
sbb
xor
je
les
xor
sbb
repz
jmp
add
add
subb
enter
aam
and
xchg
add
adc
cs
aad
es
popf
andb
inc
mov
cwtl
ss
add
sbb
dec
or
iret
adc
and
jmp
mov
jecxz
jecxz
ljmp
jmp
pushf
stc
stos
repnz
hlt
dec
add
inc
lret
les
into
enter
fsubrl
adc
rorl
cli
dec
ljmp
inc
inc
adc
push
sub
jmp
imul
cmp
add
jg
les
sti
mov
xchg
push
stc
push
or
cli
mov
adc
mov
mov
std
addb
mov
js
in
sbb
test
mov
or
out
push
mov
jg
add
add
add
mov
test
insb
das
and
insl
or
mov
orb
pop
mov
xchg
jecxz
enter
sar
lret
call
js
es
arpl
pshufw
or
and
lahf
sbbb
mov
jo
jbe
adc
pusha
xchg
jbe
push
mov
add
add
les
ljmp
push
sbb
adc
aas
rol
insb
add
loope
and
push
leave
push
hlt
jecxz
pop
fisubrl
dec
test
sahf
pop
imul
mov
mov
add
pop
adc
les
shll
mov
cld
fldenv
aas
and
jg
mov
decl
and
pop
mov
add
add
xor
add
out
lcall
xor
pop
je
adc
add
pushf
rcrb
sub
sub
pop
push
mov
out
insl
stc
sub
add
test
iret
leave
cmp
fwait
xchg
std
jle
cmp
jle
sub
fwait
and
add
xchg
testb
add
test
leave
les
addb
enter
adc
enter
les
or
push
sub
pushl
aas
leave
add
xchg
nop
add
in
mov
or
adc
add
adc
fsubrl
pop
bound
cltd
adc
add
and
call
je
ret
mov
add
add
add
pop
xchg
inc
dec
inc
sub
add
out
dec
jb
mov
sub
and
jnp
xchg
sti
sub
shl
cmp
aaa
test
out
or
jmp
call
cmp
mov
add
add
roll
mov
data16
jmp
jnp
pop
lods
add
mov
ret
cmp
mov
std
dec
cmp
sub
sbb
sub
and
mov
adc
addl
dec
mov
xor
incl
or
cmpsb
sub
enter
add
add
mov
jg
les
lods
daa
into
mov
jmp
add
jmp
and
adcb
out
cmc
inc
and
xchg
jmp
sub
xchg
push
lret
mov
dec
out
dec
xor
cmp
insl
je
test
ja
mov
movsb
add
les
aad
mov
mov
jecxz
dec
xor
mov
push
fisttps
test
out
jl
pushf
cmp
push
loopne
add
or
add
ljmp
jl
sub
jge
sub
test
subl
sbb
leave
jp
sub
int3
xchg
push
addr16
jle
adcl
fadds
push
push
rorb
mov
jl
insl
in
jae
pop
stos
cmp
add
jbe
sub
pushf
nop
shr
add
add
add
inc
les
popf
mov
es
or
xor
out
outsb
add
jne
aad
add
mov
inc
jp
les
pop
bnd
push
add
push
lea
adc
sarl
call
sub
cmp
in
xchg
mov
and
add
in
xchg
mov
loope
mov
out
pop
inc
inc
xchg
jg
rorl
mov
jecxz
out
fidivrl
and
roll
je
pop
rcll
xchg
ds
mov
adc
out
inc
xor
repz
rorb
xchg
jmp
add
cli
cmp
add
add
add
push
test
iret
psrld
lret
and
and
xor
jnp
pop
sahf
push
les
mov
or
out
das
mov
dec
push
xchg
addl
pop
je
outsb
inc
jg
outsb
push
add
add
push
aas
jge
cld
mov
cs
add
push
xchg
xor
adc
pop
aas
add
or
cmp
outsl
dec
jmp
ret
rorb
sahf
ja
mov
out
inc
add
add
repz
xchg
inc
test
xor
push
addl
aas
add
orb
rol
call
test
subb
aam
into
add
add
inc
ret
inc
dec
ljmp
shl
out
and
test
mov
lcall
cmp
sbb
rolb
test
xchg
add
adc
add
xor
add
jns
adc
rcrb
mov
outsb
push
test
gs
testl
pop
add
enter
mov
push
add
test
or
inc
add
inc
in
push
mov
sahf
aam
push
incb
jns
in
cmp
fs
testb
inc
testb
inc
push
push
flds
jp
mov
sbb
sub
xchg
cli
push
cmp
out
sbb
or
das
test
jp
jmp
mov
test
lds
sub
aam
fucomi
orb
ficompl
fs
or
jl
out
add
dec
or
xchg
inc
jmp
add
ja
ljmp
call
call
mov
add
xchg
push
jne
push
decl
inc
add
jle
cmp
add
add
leave
xchg
xchg
xor
push
pop
mov
ss
add
insb
mov
mov
data16
dec
mov
out
or
pop
dec
loopne
mov
adc
xchg
inc
hlt
iret
stc
or
pop
call
dec
cs
cwtl
xchg
dec
cmp
ljmp
bound
push
cltd
jae
aaa
add
pop
std
sub
add
jle
push
in
cmc
idivb
jmp
loop
call
fisubl
sub
lds
or
lds
adc
push
push
stc
das
not
xchg
xor
int
adc
les
jb
cmpsl
or
add
cmp
stos
pop
inc
loop
sbb
or
faddl
jmp
sarl
add
aad
lock
xchg
or
shlb
or
out
clc
imul
add
or
add
push
adcl
loope
lret
jbe
add
push
shrl
pop
gs
push
add
fcmovnb
jae
xor
and
mov
adc
adc
inc
push
mov
rorl
adc
js
cmpsl
fildl
data16
jmp
add
repnz
sub
mov
inc
adc
pop
jbe
addr16
jmp
cli
cld
fwait
cmovb
xchg
inc
pop
stos
sbb
stos
bnd
or
mov
add
add
add
testb
mov
dec
int3
adc
add
pop
add
in
sub
pop
or
add
sub
push
or
add
jge
mov
loope
cmp
or
add
mov
int3
add
xchg
dec
sti
out
mov
jbe
sub
loop
imul
add
fmull
push
mov
stc
repz
fdivrl
icebp
repz
popf
xchg
mov
or
call
push
pushl
inc
mov
mov
sbb
rol
xchg
dec
fadds
push
aaa
inc
pop
decl
lods
adc
add
cmp
pop
fstpl
push
push
xchg
and
and
idivl
mov
psubsb
add
add
push
add
mov
xchg
push
inc
repnz
push
repz
adc
and
call
jnp
inc
pop
push
jbe
push
jae
cli
and
out
std
xor
sbb
cmp
int
pushf
arpl
les
xchg
push
out
les
cmc
sub
add
mov
push
arpl
jbe
add
add
add
mov
fcoml
inc
jae
mov
pop
gs
xor
fdivrl
mov
mov
fst
cmp
sti
test
pop
jmp
add
jmp
insb
xchg
jae
jl
inc
pop
pop
inc
ds
push
inc
and
add
addb
jmp
popl
add
and
mov
add
add
cltd
jno
int
jl
sbbl
jno
add
or
mov
mov
add
movl
test
adc
pop
jecxz
add
cmp
dec
push
adc
push
adc
add
sbb
mov
out
and
add
dec
mov
add
push
cmc
test
pop
add
lods
xorb
popa
pop
test
push
call
sub
jne
into
mov
or
cld
dec
fsubp
mov
add
xchg
sbb
cli
incl
mov
add
mov
pop
in
jne
int
xor
sbb
push
mov
loope
or
js
add
sbb
adc
call
push
pop
cld
call
ljmp
jmp
and
fcoml
les
pop
jno
add
jno
bound
hlt
xor
das
and
call
stos
adc
mov
or
fstpt
or
out
jp
clc
dec
xor
push
addr16
xor
addb
mov
in
arpl
or
les
xchg
xchg
fcmovb
xchg
repz
repz
scas
mov
decl
icebp
push
mov
jmp
sti
lock
std
sbb
cmp
add
add
shr
out
imul
cmp
or
aas
add
addr16
mov
xchg
push
jmp
xlat
test
outsl
push
les
add
jo
insb
jns
fdivrs
add
aam
shld
add
sbb
jno
jo
mov
mov
sbb
jecxz
mov
jns
pop
mov
or
inc
js
push
push
mov
pop
inc
add
push
push
add
outsb
dec
sub
pop
jmp
sub
or
aam
pop
xchg
out
call
movl
and
testl
lds
pusha
test
jg
in
repnz
or
jmp
add
and
scas
lret
jp
or
jmp
inc
jmp
xchg
xchg
push
pop
sti
and
add
xor
push
push
push
ja
mov
mov
push
cli
adc
adc
xchg
je
pusha
cld
mov
and
jp
xor
jle
and
pop
push
push
cmp
adc
xchg
je
pop
cld
mov
and
jp
cmc
fists
and
pop
arpl
pushf
roll
push
pop
insl
push
push
cli
push
scas
adc
addl
rorl
add
add
scas
rclb
pusha
iret
cld
fsts
inc
dec
fwait
je
jmp
mov
add
fadds
adc
push
sub
loop
mov
mov
movsb
dec
mov
pop
sti
push
jmp
xchg
stos
jmp
xchg
scas
iret
cld
sti
inc
sar
sarl
inc
fnstcw
je
scas
jmp
add
pop
mov
scas
mov
xchg
sub
arpl
xor
add
add
mov
loopne
inc
sbb
call
push
ror
in
push
dec
adc
add
subb
mov
jge
cmp
mov
add
xorl
push
add
cld
imul
add
loope
out
in
jle
push
jmp
add
jp
out
lds
lea
mov
fsubr
xchg
lods
add
pop
jae
push
imul
sub
les
push
les
add
movl
xchg
xchg
add
add
lds
jmp
lds
push
cmp
cmp
jle
or
in
lcall
jle
or
scas
xchg
shrb
mov
add
out
jmp
sti
sti
jle
filds
jbe
xor
insb
jmp
push
xchg
adc
add
xor
push
clc
rcll
inc
sub
push
add
rcrb
add
in
add
inc
add
xchg
flds
push
cld
fnstsw
imul
loop
pop
pop
sbb
or
push
es
push
push
repz
xorl
jne
push
insb
pop
lcall
cmpb
ss
jg
sti
jae
hlt
jae
repnz
cmpb
jo
int
testl
test
jle
pop
repz
mov
std
repz
pinsrw
adc
inc
pushl
addr16
adc
lock
repnz
loope
je
outsl
mov
pop
mov
pop
jl
or
decl
repz
lahf
sbb
mov
push
mov
add
je
push
outsl
adc
add
add
fcomp
arpl
rcl
call
mov
add
aad
cmc
push
aad
test
jmp
fnsave
push
cmc
ret
sti
js
out
bnd
add
iret
outsl
repz
rclb
jno
test
add
xorl
mov
mov
cli
fadds
or
mov
pop
imul
mov
jne
fadds
xchg
push
add
push
add
cmovb
sbbl
movsl
add
icebp
pushl
jge
clc
push
push
add
repnz
xchg
cmp
mov
jmp
inc
mov
mov
pop
call
add
aaa
lret
imul
imul
imul
imul
pop
xor
add
add
call
add
insl
dec
adc
or
inc
sti
test
outsb
lea
dec
push
out
sub
cmc
cld
push
pop
add
lock
inc
sbb
xorl
in
out
nop
test
inc
aaa
adc
xor
jge
inc
lea
std
ljmp
rclb
mov
xor
lret
call
and
jne
push
pop
push
loope
push
jmp
gs
dec
test
jno
imul
inc
add
push
add
xchg
js
cwtl
test
add
jno
aas
hlt
test
mov
push
add
xor
add
popa
sbbl
mov
xchg
mov
push
cmp
push
call
pop
jo
cld
push
sbb
push
shrb
push
push
dec
sbb
shrl
push
addl
out
add
mov
sbb
clc
jp
cmp
imul
cmp
pop
fs
jbe
fs
mov
loop
mov
fnstsw
mov
enter
xchg
inc
rolb
fdivrs
push
out
movl
cld
pop
sar
add
and
mov
cwtl
call
add
add
pushf
pop
mov
cmp
add
add
add
inc
inc
or
fs
jmp
pushf
push
add
insl
pop
xor
xchg
movl
or
inc
add
inc
addl
or
movl
sub
add
add
or
gs
decb
jbe
pop
leave
and
imul
push
ljmp
fisubl
dec
pop
push
xor
inc
mov
sti
inc
add
lret
or
add
addl
inc
jns
push
lea
adc
icebp
sub
je
inc
jecxz
in
add
mov
add
loop
pop
xor
sti
adc
xor
loop
pop
xor
mov
std
fwait
dec
pop
paddsb
push
inc
add
push
or
sti
mov
es
jae
push
addr16
add
icebp
andl
scas
mov
mov
decl
and
dec
xor
and
lds
push
pop
dec
imulb
adc
sub
ss
xchg
lods
inc
adcb
jne
lods
inc
adcb
mov
adcb
hlt
jbe
inc
adcb
xchg
lods
jmp
fiaddl
pushl
outsb
jp
mov
mulb
shll
mov
add
int
mov
mov
dec
adc
jo
inc
pop
mov
inc
mov
add
xchg
sub
inc
pop
ljmp
mov
sub
mov
add
add
arpl
inc
cli
inc
je
cmc
call
addb
jle
sub
fistl
add
add
and
test
test
inc
inc
xchg
adc
les
je
add
add
and
stos
lcall
cmp
pop
add
jo
add
pusha
mov
movb
fnstsw
and
push
pusha
or
pusha
sti
jmp
mov
jle
sub
sub
xchg
ret
mov
fcoms
inc
add
ret
adc
or
movl
add
mov
add
pop
or
add
and
add
add
in
jp
je
loop
and
cmp
shr
inc
lods
fildl
mov
movsb
add
lods
xlat
inc
and
cmp
mov
push
sbb
sti
test
add
push
xor
std
je
imulb
lods
or
call
xor
jo
push
inc
sub
pop
sti
call
pop
xor
xchg
cld
je
stc
push
push
dec
cmovo
dec
imul
push
repz
inc
insb
sar
shrl
inc
repz
mov
in
and
push
xchg
add
push
loope
and
lods
push
adc
and
hlt
xlat
dec
mov
mov
cmp
and
ds
jnp
cli
cld
mov
mov
hlt
mov
push
std
xchg
loop
inc
rcll
xor
inc
lds
ret
enter
sbb
pop
sbb
imul
lds
js
int
sti
mov
mov
pop
add
lret
mov
push
or
std
ret
mov
add
add
not
lock
repnz
push
mov
rolb
add
shl
pop
jno
ljmp
inc
sub
add
sub
nop
test
in
cld
mov
mov
aad
sbb
gs
subl
andl
add
rorb
adc
push
mov
cli
pushf
mov
pop
jne
clc
adc
xchg
test
add
out
inc
jmp
lods
xlat
and
sbb
add
sbb
loope
push
addb
jbe
call
or
xchg
loope
out
call
or
add
fsubrl
sarb
mov
pop
pushl
pushf
or
inc
mov
push
adc
clc
xchg
in
imul
pop
or
or
div
inc
mov
std
jne
dec
jne
loope
cld
mov
adc
call
ds
lods
pop
push
mov
pop
outsl
and
fcmovb
je
sub
adc
sti
je
loope
adc
dec
or
nop
pop
jecxz
shl
cld
jmp
loope
adc
imul
mov
ret
les
push
pop
call
mov
add
jp
aam
and
xlat
decl
jmp
scas
cmp
mov
fcmovnu
push
mov
jp
mov
push
std
cld
cmp
cld
xor
jae
inc
stc
pop
mov
push
pop
icebp
lods
cli
push
jecxz
test
icebp
inc
les
mov
pop
rcrl
pop
decb
je
inc
sbb
mov
fcoms
dec
repnz
mov
pop
pop
arpl
pop
divl
mov
bound
mov
mov
jmp
shr
jp
xchg
adc
add
add
rcrb
testl
outsl
mov
lods
push
shlb
insb
fldenv
repnz
fmul
pop
das
rol
call
add
lea
pop
add
xlat
or
and
arpl
arpl
add
ss
loopne
jmp
sbb
or
pop
sti
ds
add
pop
jne
cmp
hlt
in
pop
pop
pop
mov
cmc
add
jmp
jmp
mov
and
cmp
add
adc
stc
and
sbb
xrelease
insl
arpl
in
sbb
xchg
or
sbb
pop
adc
add
nop
mov
ret
imul
add
loope
push
push
mov
or
push
mov
xchg
icebp
pop
cmp
push
push
jne
mov
inc
pop
call
push
jne
in
adc
out
or
cs
lock
inc
lods
inc
pop
ret
cmp
adc
into
jecxz
sti
ret
sub
dec
push
inc
insl
sarl
jns
cmp
rorb
mov
ret
aas
cmp
xor
add
stos
mov
sub
push
cmp
imul
pop
je
les
lds
nop
add
dec
rol
std
repz
test
jo
in
daa
jp
lret
xlat
jne
insb
sub
insb
mov
call
add
cmp
add
mov
add
dec
jg
in
cmp
push
repnz
fadds
clc
or
jge
pop
incl
inc
pop
adc
imul
mov
inc
std
clc
fstpl
sbb
ljmp
sub
push
stc
mov
ds
or
mov
stc
push
fnstsw
ja
xchg
adc
add
add
pop
bound
popf
mov
xlat
mov
daa
pusha
into
ret
pop
jmp
mov
outsb
inc
xor
dec
adc
andb
or
xor
andb
adc
add
xor
aad
adc
inc
stc
inc
push
jmp
jmp
hlt
in
loopne
jmp
iret
fldcw
andl
pop
jbe
inc
adc
faddl
add
add
jle
loope
mov
ret
fnsave
lahf
push
rcl
pop
push
cs
xor
sarl
int3
dec
push
test
lret
add
lock
push
int3
out
jb
test
out
mov
push
pop
sub
pop
dec
adcb
test
or
das
mov
or
add
std
inc
enter
jno
setns
add
jecxz
shlb
dec
jge
testl
pop
xor
bound
imul
fdivl
xor
cltd
mov
repnz
ss
cmp
mov
cwtl
mov
fisttpll
mov
repnz
dec
cmp
les
mov
lret
push
rcr
das
mov
sbb
mov
mov
arpl
rcl
lds
mov
fiaddl
mov
jb
xchg
push
je
out
sub
inc
mov
or
mov
stos
sbb
jbe
mov
lahf
sbb
add
jmp
jae
inc
sbb
add
add
sahf
mov
pop
pop
inc
push
negl
xlat
cmp
jle
and
jle
and
push
add
mov
mov
insb
cltd
push
movsb
pop
dec
lret
inc
inc
push
add
add
les
xor
jmp
xchg
les
and
add
jo
rol
cmp
subb
xor
lret
mov
in
cs
adc
mov
rol
lret
ss
jo
out
add
and
cmc
jle
rcrl
rolb
dec
mov
xchg
pop
mov
push
add
inc
push
ljmp
mov
dec
nop
test
cmp
ret
sbb
and
add
add
rcr
jmp
mov
push
in
xchg
lahf
inc
sub
jle
push
mov
add
inc
mov
cltd
ret
and
leave
and
stc
stos
sub
std
mov
mov
loope
mov
in
ficoms
push
rcll
mov
sti
test
add
add
push
push
xchg
adc
loopne
jne
mov
cld
insl
jnp
add
or
add
xchg
cltd
mov
cltd
mov
cltd
jne
jp
clc
mov
add
xor
shrl
imul
sub
sti
mov
push
outsb
or
rcll
rcr
hlt
aas
fildl
inc
ss
jnp
pop
mov
aad
pop
outsl
pop
push
rclb
mov
in
cmc
push
mov
add
imul
add
push
inc
xor
je
cltd
pop
adc
incl
fdivl
rol
sti
dec
and
sub
add
dec
xor
pop
mov
and
pop
mov
clc
ret
rorl
and
xor
pop
ljmp
dec
cmp
xchg
call
add
sbb
ret
les
pop
ljmp
add
sub
add
sbb
dec
rol
or
sbb
and
imul
jmp
pushl
push
add
inc
daa
or
add
add
pop
shlb
dec
cltd
add
int3
add
add
adc
push
jb
fs
jmp
stos
icebp
add
mov
add
and
push
sub
jmp
movl
dec
add
adc
sti
and
jg
int
add
add
mov
lret
inc
add
into
inc
or
add
dec
ret
and
jl
psubusb
lcall
add
pop
add
mov
jmp
pop
cmp
outsl
std
adc
cmp
add
ljmp
leave
dec
mov
cmp
leave
push
pop
daa
ljmp
add
xor
lea
incl
add
incb
mov
lods
popf
sub
mov
xor
push
or
pop
adc
add
xor
scas
mov
mov
daa
lds
mov
mov
decb
lds
and
add
adc
imul
divl
xor
fld
and
inc
outsl
pushf
lds
les
inc
add
inc
test
xchg
pop
addr16
pop
decl
int3
out
dec
dec
sbb
sbb
mov
test
jmp
lock
roll
fucomip
lods
jmp
mov
les
pop
mov
jle
mov
jno
mov
and
add
adc
xor
leave
jle
stc
ficomps
and
add
rcrb
jmp
add
add
jmp
add
jp
dec
les
jmp
addb
add
andb
rcrl
gs
imul
movsl
jecxz
push
fs
es
movl
in
call
pushf
dec
add
aas
add
xchg
jne
push
aad
jb
and
idivb
movsl
jecxz
xchg
mov
jmp
gs
shlb
mov
xchg
dec
jne
sbb
pop
mov
push
lcall
and
pop
ljmp
inc
mov
sbb
sti
incl
xor
arpl
dec
and
test
xchg
sbb
std
jne
test
loope
outsb
or
sub
cld
jmp
outsb
jle
xlat
and
mov
pop
xchg
popf
add
or
add
int3
test
add
add
jge
nop
insl
add
call
divb
mov
out
pop
cmp
inc
or
jecxz
cld
xchg
fs
movsl
pop
imul
decl
lds
cwtl
stc
push
inc
rcr
pop
les
jmp
mov
out
and
rorb
push
enter
push
std
aas
adc
cmp
pop
decl
les
xchg
sbb
lds
dec
sbb
or
push
push
je
pusha
jle
dec
call
or
adc
jae
lds
fadds
and
fldl
sub
cmp
and
xor
lock
leave
int3
pop
leave
ficoml
and
mov
add
add
mulb
fidivl
fadd
jmp
aad
xchg
dec
stos
test
data16
shrb
rorb
das
add
dec
mov
rolb
xor
out
jmp
daa
enter
mov
clc
ret
xorl
mov
inc
testb
vcvtps2pd
fcomi
push
or
leave
fidivrs
lahf
mov
add
add
mov
adc
sbb
jle
mov
cli
cld
xor
inc
jmp
mov
mov
pop
inc
call
cmpsl
inc
dec
sti
insb
cltd
adc
mov
aaa
xor
enter
or
fiaddl
std
inc
or
test
ret
shl
pop
dec
push
jmp
cmp
out
push
add
add
adc
add
push
add
shl
sbb
aas
clc
lods
jnp
inc
and
add
aam
add
dec
sti
test
ss
sarl
sbb
xchg
ret
je
loopne
and
or
push
pusha
dec
out
push
sbbb
pop
push
push
clc
pop
cmovo
mov
jne
mov
cli
lcall
jo
ret
outsb
jns
mov
adc
call
xlat
jle
sbb
mov
jne
std
jmp
pop
ficompl
sbb
dec
adc
pop
mov
or
cwtl
add
call
int3
and
sub
into
sub
sub
xor
stos
mov
call
dec
adc
pusha
mov
enter
std
add
dec
adc
add
inc
in
rolb
sub
rolb
ret
les
push
sbb
ljmp
sub
xchg
jnp
add
pushl
jmp
mov
call
fcmovnbe
xor
hlt
inc
or
mov
les
pop
rol
call
sub
sub
add
and
inc
nop
mov
pop
jmp
jmp
mov
xchg
fadds
lret
sbb
push
push
sbb
repz
mov
mov
add
jge
mov
add
ret
inc
mov
push
inc
sti
insl
or
pop
faddl
add
add
call
pop
add
insl
repz
jb
in
insb
mov
sti
xchg
std
adc
or
inc
push
push
jmp
addl
mov
adc
add
ss
pop
mov
jge
mov
jg
adc
sti
lcall
add
add
sub
add
xchg
fwait
lret
cld
push
mov
loop
pop
add
ds
push
inc
nop
punpckhdq
pop
add
lea
mov
or
pop
lret
mov
cmove
cs
mov
xchg
hlt
add
push
or
je
xchg
jae
call
dec
or
add
ret
pop
pop
es
or
mov
or
add
add
add
push
push
rcrb
les
push
jmp
xchg
sbb
adc
mov
std
stos
mov
xor
lcall
mov
pop
add
test
inc
cld
fildl
dec
clc
add
xor
xchg
test
sub
and
add
add
mov
incl
cmp
push
add
mov
and
mov
movsl
add
ljmp
adc
add
inc
icebp
add
xor
add
add
out
xlat
outsl
push
mov
fwait
jmp
sub
xchg
add
add
add
mov
mov
add
jmp
or
mov
and
jbe
jmp
pop
mov
in
xchg
testl
push
add
mov
mov
nop
add
cmc
nop
mov
fistpll
jmp
paddq
push
or
ret
ret
ss
je
das
sub
push
push
movl
add
inc
out
xor
dec
xor
mov
jb
mov
mov
pop
mov
add
ljmp
fimull
and
mov
and
push
aaa
cmp
mov
shll
push
add
pop
adc
xor
pop
mov
xor
rcrl
add
pop
jl
adc
leave
cmp
sbb
push
xchg
dec
pop
and
adc
imulb
loopne
mov
ror
mov
cld
pushl
push
or
imul
aaa
add
jae
add
jne
pop
ret
cmp
pop
xor
add
add
les
mov
add
add
pop
ret
hlt
inc
in
sub
out
or
test
enter
jae
sbb
rcl
mov
negl
mov
mov
xchg
hlt
mov
or
add
adcl
pop
xchg
ret
and
mov
das
loop
xchg
inc
call
add
out
ret
lret
push
xchg
out
xchg
add
add
or
ret
mov
js
test
jp
rolb
inc
jo
pop
fsubs
in
mov
mov
pop
aaa
lods
sub
or
repnz
cmc
pop
rcr
pushf
mov
shrl
test
lods
mov
and
mov
in
dec
adc
jns
loop
add
sub
popl
in
incl
push
and
add
mov
sub
add
mov
xchg
sub
arpl
addl
fstpt
dec
or
mov
test
or
cmp
cs
fistpl
inc
push
jmp
and
jmp
push
xchg
or
das
call
push
inc
mov
pop
cmc
mov
insb
icebp
mov
in
mov
pop
leave
or
cmp
jmp
cmp
or
sub
cs
fisttpll
cli
in
mov
roll
pop
adc
add
add
decb
and
aaa
add
add
add
cmp
insl
inc
mov
pop
mov
aaa
jmp
mov
outsb
cmp
adc
push
mov
out
pop
adc
inc
cmp
stc
sti
mov
inc
cmp
add
icebp
sub
adc
pop
adc
mov
pop
sbb
mov
cmp
inc
ret
and
cmp
std
mov
jmp
jnp
inc
out
sti
imul
jecxz
dec
lcall
lahf
in
mov
mov
add
sub
in
roll
and
pop
jo
cmp
popa
jecxz
sarl
inc
jle
mov
and
push
adc
or
and
enter
push
mov
scas
add
push
lods
adc
rcr
sub
jmp
sti
mov
add
lea
out
lea
inc
dec
or
inc
popa
or
aaa
xor
xor
pusha
enter
rcr
add
inc
inc
aas
out
adc
mov
out
cli
and
fisttps
cmpsl
mov
loop
mov
loop
mov
loop
mov
sbb
mov
or
dec
fldenv
cmp
rorl
push
icebp
adc
and
adc
jecxz
xchg
jecxz
inc
ljmp
out
inc
mov
aam
pop
add
pushf
jle
add
mov
add
add
xchg
in
ljmp
and
jmp
and
out
push
adc
inc
add
mov
lret
pop
pop
rclb
les
leave
call
mov
sbb
pop
pop
stos
cmpb
inc
pop
pop
addb
inc
loope
jecxz
jnp
inc
and
or
inc
leave
add
mov
inc
mov
aaa
cmp
add
ljmp
push
and
pop
sub
fildl
int
xchg
mov
jmp
pop
dec
cmp
les
lret
lret
or
insb
ud2
mov
or
sar
mov
inc
sti
mov
inc
jmp
mov
xchg
lahf
out
mov
std
dec
loop
pop
ret
repz
mov
and
and
pop
pop
xchg
dec
and
arpl
ljmp
mov
or
ret
sbb
push
aaa
or
jge
mov
call
inc
xlat
outsl
enter
mov
ljmp
scas
xchg
cmpsl
add
or
xor
cli
push
cli
cmp
jmp
cld
cmp
jmp
int3
jecxz
mov
sub
dec
sub
enter
enter
pop
dec
dec
inc
or
inc
pop
dec
inc
mov
adc
mov
clc
mov
jle
out
xchg
add
inc
add
testl
add
in
mov
add
add
ljmp
movl
add
std
sbbl
mov
psubsw
cmp
ret
or
scas
or
psubsb
and
fnsave
add
and
outsb
xor
cmp
out
pop
adc
and
inc
mov
sti
inc
les
add
jb
cli
mov
mov
fldl
popf
stos
rol
xor
xchg
dec
mov
push
mov
sub
mov
sub
call
push
pop
cmp
inc
pop
pop
pop
add
fucom
leave
sbb
pop
cmp
inc
pop
sub
adc
add
cmp
push
mov
cmp
add
pop
pop
inc
pop
les
xorl
inc
rcrl
mov
dec
mov
pop
dec
add
lret
push
fidivs
adcl
add
popw
add
push
aam
repnz
xor
test
fmuls
iret
xchg
inc
out
clc
dec
xrelease
add
xchg
or
xchg
add
add
into
or
inc
push
add
mov
and
add
add
movsl
ret
dec
push
sbbl
mov
push
sub
gs
stos
mov
repz
mov
mov
and
inc
mov
into
jp
mov
and
mov
jae
add
daa
js
in
sarb
test
lret
jle
cmp
add
add
or
inc
lret
cmp
inc
fadd
cmp
jb
out
pusha
mov
int3
jecxz
pop
pushf
shl
cmp
stos
les
les
jle
rol
mov
fisttps
in
mov
adc
jmp
fsubr
test
fnstsw
add
int3
pusha
inc
int
add
add
add
out
shll
xchg
loop
es
shll
inc
mov
xor
sbb
inc
or
and
test
or
add
and
cmp
out
mov
jb
loop
jno
fisttps
cmpsl
leave
jnp
sub
add
add
or
or
adc
inc
loope
test
jns
and
add
mov
cld
sub
xorl
sti
and
pop
adc
insb
pop
sbb
fs
xor
push
pop
adc
addb
inc
leave
inc
mov
mov
pop
cmp
sub
inc
xorl
push
addb
inc
es
pop
cmp
add
add
insl
mov
inc
add
cli
jl
xorl
mov
outsb
and
orb
xor
cmp
jmp
mov
sti
cmc
inc
jecxz
or
mov
and
mov
and
movsl
leave
and
push
shll
or
subl
sub
add
jmp
or
mov
sti
fcomps
out
shll
add
das
push
sub
mov
and
lret
mov
jmp
jl
add
aam
aaa
dec
ficomps
add
inc
add
cmp
loop
or
cmpsl
shll
cmpsl
aad
cmp
js
add
add
add
inc
rorb
dec
rolb
in
inc
jb
out
jno
out
mov
filds
add
add
out
das
push
aas
std
out
les
ljmp
inc
stc
push
sub
lea
sbb
fldt
rep
push
push
xor
nop
loope
mov
loope
mov
loope
sub
xor
mov
fiaddl
int
adc
push
out
jmp
dec
shll
les
movsl
mov
das
sub
inc
call
shll
movb
pop
sub
movsl
mov
jnp
loop
jne
shlb
adc
sbb
fsubrs
adc
sbb
inc
or
and
out
inc
test
push
jb
inc
inc
lds
mov
cmp
adc
inc
add
inc
adc
dec
add
add
test
mov
sub
inc
shll
cmp
addr16
jle
and
jle
and
fimuls
mov
jnp
dec
dec
adc
jp
ret
les
out
pop
pusha
inc
cs
and
insl
sbb
jge
push
and
test
and
mov
mov
add
add
ret
movsl
cmp
jg
sbb
mov
mov
inc
decl
pop
inc
adc
push
mov
sti
in
jae
inc
js
cmp
xchg
jecxz
rcrb
ja
dec
dec
sbb
mov
dec
inc
test
push
addl
dec
incl
mov
lret
aas
fucompp
daa
inc
lret
cmp
jmp
std
sub
das
addl
cld
nop
add
mov
mov
testl
xlat
or
xor
sbb
and
inc
rol
dec
rorl
push
push
xor
jnp
out
js
add
shl
dec
hlt
sbb
call
add
lret
dec
ret
inc
inc
stc
xchg
jb
cmpsl
sarl
pop
daa
pusha
mov
mov
rcll
ret
cld
test
sahf
das
sub
push
rorl
pop
or
add
icebp
jle
in
testb
sub
add
mov
push
not
bound
jg
or
add
jbe
cwtl
jg
add
test
mov
leave
add
dec
cli
into
jl
jo
loop
sub
cmp
or
es
jmp
fadds
xchg
pusha
jl
and
xchg
movb
sbb
fstps
adc
sub
sbb
rcll
mov
add
add
sbb
inc
and
sbb
xchg
call
iret
jbe
ss
and
testb
fisttps
cmp
pop
pop
mov
pop
mov
sbb
push
sub
dec
call
out
pop
dec
call
dec
pop
and
push
std
inc
mov
call
lds
incl
icebp
cmp
add
les
ret
test
and
xchg
leave
and
xchg
mov
mov
inc
inc
cmp
repz
sub
inc
cmp
jmp
btc
shll
sub
insl
lods
add
scas
xor
inc
loopne
ja
cmp
jb
cmove
push
les
cmpb
mov
or
test
add
insb
sbb
cs
cld
add
jg
dec
ds
cli
jp
jmp
pop
out
jo
loope
jno
flds
pop
out
pusha
leave
or
enter
in
filds
or
jns
jmp
mov
fimull
cmp
shll
add
mov
out
mov
add
or
jnp
xchg
jp
ljmp
call
jmp
lods
out
mov
ljmp
add
cltd
cltd
or
int3
ljmp
sbb
jge
lods
leave
and
add
fsubl
sub
out
jb
out
bound
push
bound
xor
in
aaa
or
and
jbe
shll
dec
mov
sub
sbb
mov
stos
repnz
mov
and
cs
leave
and
das
add
add
cld
out
or
mov
mov
mov
pop
pop
mov
pop
sub
pushf
jge
jmp
add
add
popf
inc
and
add
add
cmc
mov
or
and
or
sahf
dec
and
sahf
inc
and
sub
add
fstpl
and
sahf
inc
and
mov
sub
and
pop
xor
dec
pop
inc
xor
mov
cmp
inc
sub
psubsb
cli
inc
jp,pn
mov
jae
inc
out
ds
imul
add
add
cmp
mov
xchg
das
jo
xchg
daa
jo
xchg
fldenv
je
adc
loopne
jp
call
xor
test
jle
mov
ja
mov
repz
inc
or
les
pop
js
xchg
mov
or
loopne
shlb
movsl
shll
mov
sar
xchg
mov
add
shll
add
add
add
out
mov
cmp
dec
ror
dec
rol
lcall
push
add
dec
add
or
add
add
and
fdivs
lahf
and
incl
or
mov
sub
mov
mov
add
les
cmp
add
add
or
les
or
cmc
or
sub
mov
push
mov
or
adc
jecxz
sub
std
mov
int
les
add
mov
add
movl
mov
cltd
cmp
jmp
and
jne
sti
add
add
lea
pushl
roll
mov
test
cmc
mov
mov
lea
roll
ficompl
subb
sub
fnsave
testl
je
or
je
cmp
je
adc
je
sub
lods
in
cld
add
shll
jne
or
jne
shll
and
ret
add
insl
and
dec
addl
inc
or
ds
in
cld
mov
or
push
push
sbb
add
or
mov
cmp
aas
mov
sub
lods
pop
js
loopne
js
call
add
mov
in
sub
dec
pop
fistpl
arpl
inc
inc
in
push
subl
out
test
adc
pop
mov
imul
xchg
cmpsl
test
and
xchg
dec
cmp
mov
lret
mov
js
test
add
mov
add
jbe
adc
aas
pop
push
gs
and
adc
or
insl
add
add
add
add
dec
cmp
rorl
rcl
js
add
mov
sub
push
clc
out
xchg
lock
xchg
int3
sbb
lds
sbb
jmp
xor
and
xor
jecxz
sbb
sub
adc
or
cmpsl
cmc
popa
cmpsl
cmpsl
std
fbld
jo
xchg
cmpb
add
insb
mov
add
jae
dec
or
orb
pop
inc
mov
ficomps
jmp
jmp
mov
es
add
add
jb
ret
out
bound
out
lcall
shl
inc
mov
and
xchg
loopne
push
sbb
add
add
add
mov
xchg
add
mov
and
mov
pop
shll
push
loop
frstor
pop
sub
pop
and
dec
pop
adc
pop
inc
and
pop
dec
and
pop
and
inc
pop
push
lcall
test
add
adc
and
pop
pslld
or
inc
add
add
pushf
sahf
inc
and
popf
inc
and
cmp
arpl
loope
aaa
mov
and
pop
pop
sbb
loope
xor
add
inc
rcrl
fldl
or
les
inc
cmpsl
xchg
and
outsb
jle
movsb
mov
lret
iret
dec
dec
mov
imulb
sub
pop
call
push
cmc
mov
add
add
xchg
subb
jnp
lds
jg
testb
lock
inc
fdivrl
jmp
inc
call
or
inc
add
xchg
leave
and
adc
les
iret
cmpsl
mov
lds
mov
rolb
add
out
pop
mov
out
outsl
enter
dec
leave
push
sub
cmp
iret
mov
leave
push
and
cmp
enter
shlb
ror
cmpsl
leave
repz
lahf
sbb
and
int3
ret
les
or
faddl
pop
add
dec
ret
mov
pop
daa
push
mov
dec
add
in
pusha
add
dec
jo
in
loop
in
out
imul
testb
call
iret
mov
jae
sarl
add
mov
mov
icebp
inc
jmp
dec
push
push
idivb
add
sbb
arpl
ret
add
clc
call
or
lock
movl
neg
cmp
cli
add
in
inc
in
push
adc
pop
sub
ret
addb
enter
inc
fldcw
mov
and
imul
mov
dec
add
cmp
test
add
mov
cmp
jbe
ljmp
imul
cld
mov
add
add
mov
pushl
cmc
adc
in
mov
push
cmp
jae
mov
ret
xchg
ds
push
les
xchg
sbb
call
add
mov
mov
or
out
cmp
in
inc
out
outsb
and
ret
scas
enter
jmp
and
push
xchg
sub
inc
les
add
test
mov
add
xchg
or
add
or
lds
add
stos
sar
pop
cld
lea
mov
test
gs
sub
gs
push
sub
inc
int3
stos
popa
enter
mov
inc
icebp
movsl
inc
lret
push
and
inc
int3
stos
jno
lods
or
addl
out
leave
into
or
and
push
push
push
cwtl
mov
cmpb
lock
pop
adc
mov
push
or
mov
adc
mov
int3
imull
push
pop
pop
cmpb
hlt
adc
out
adc
out
adc
jge
loopne
bound
mul
ret
std
dec
mov
sarb
add
add
cltd
and
add
fwait
push
sti
cmpsb
dec
xor
out
ds
rcrb
cltd
and
int
cltd
and
push
bound
sti
pop
dec
mov
mov
adc
xchg
imul
sub
lret
dec
mov
stc
mov
jl
add
pop
imul
addb
jmp
fdivr
xor
add
movl
cs
mov
inc
roll
mov
jle
pop
das
incb
push
xchg
pop
imul
cmp
and
mov
es
cld
adc
push
cli
jle
stos
mov
cmpl
xchg
jg
or
add
add
ds
xor
sbbl
lldt
inc
or
pop
add
sbb
dec
mov
jae
adc
sub
decl
cltd
sbb
push
je
adc
loopne
mov
in
lret
sti
add
add
les
inc
pop
push
test
lock
or
rcl
inc
mov
dec
push
mov
add
add
daa
push
lods
jl
int3
or
fwait
pop
cld
inc
fiadds
xchg
xor
pop
out
push
xchg
cmp
mov
add
into
mov
jbe
jle
loopne
shr
xchg
mov
xor
shll
add
add
or
test
jmp
sbb
lcall
das
push
lods
add
dec
sub
add
sbb
mov
ljmp
or
fmull
cli
jmp
pop
mov
fnstsw
dec
insb
dec
inc
sbb
lods
addb
arpl
mov
mov
sahf
adc
sbb
jmp
out
xchg
mov
or
add
jge
sbb
inc
insb
js
add
rcr
sti
add
inc
sbb
sbb
mov
adc
mov
in
jg
inc
mov
mov
xchg
pcmpgtd
cmc
inc
jmp
rorl
sti
add
mov
es
pop
pop
lahf
cli
add
stc
cld
jbe
add
add
xor
pop
fists
inc
pop
in
jae
rclb
mov
dec
cmc
ficompl
dec
jmp
add
or
add
into
pop
push
push
data16
shll
inc
fldl
in
lods
in
add
aas
or
add
ret
jmp
in
loop
or
add
add
xorb
adc
iret
out
sub
mov
and
push
dec
pusha
fistpl
pop
adc
adc
shlb
pop
js
push
dec
icebp
mov
sbb
lret
ljmp
mov
call
jb
mov
in
push
sbb
call
ss
fdivs
or
test
xchg
add
add
mov
cltd
mov
cmp
les
cmpsl
aas
xor
decl
repz
dec
push
xor
call
inc
in
xchg
call
mov
push
adc
cmpsl
lds
xchg
or
jle
std
gs
mov
loope
xchg
loope
mov
call
out
ds
loope
cld
xchg
enter
dec
mov
rcrb
int3
cmp
cmpsb
sbb
or
add
add
fdivrl
call
jmp
imul
jmp
aas
push
insb
push
call
and
movl
xchg
dec
dec
roll
fucomip
or
repnz
jle
int3
or
jmp
subb
mov
push
adc
dec
call
cmp
mov
cmp
dec
mov
sti
push
add
sub
test
lret
notb
add
mov
add
outsl
lret
jb
cmpsb
pop
push
push
es
jmp
test
add
sbbb
or
lahf
repz
or
or
loop
sti
jmp
incl
add
mov
test
push
cmp
add
sub
mov
xchg
and
add
add
jmp
mov
outsl
push
add
icebp
jne
mov
push
insb
iret
inc
sti
gs
push
add
les
and
sub
xor
add
add
test
or
ror
or
ficomps
or
sbb
mov
push
mov
xchg
sub
sbb
cld
les
das
push
cmpsl
inc
mov
mov
daa
inc
pop
xchg
movsl
shll
xchg
rcrb
fstpl
or
test
and
sbb
pushl
and
sbb
in
jmp
ds
mov
add
add
fwait
mov
les
insl
mov
inc
loop
add
add
xchg
sbbb
add
fucomp
cmp
add
sbb
sub
call
jg
add
add
enter
imul
jmp
mov
push
jmp
jge
mov
jg
add
add
pop
jmp
enter
adc
or
cmp
orb
loopne
add
in
mov
fdiv
mov
lods
pushf
or
movl
shl
inc
out
jmp
imul
jmp
fisttps
cli
inc
movl
jmp
je
and
cli
test
int
add
loope
jmp
add
cli
jnp
mov
movl
add
cmp
xchg
fdivrl
dec
and
jle
punpckhwd
inc
and
mov
mov
jne
subl
cmp
cld
jae
lret
cmp
fwait
pop
push
mov
mov
call
out
in
cld
out
cli
cld
psubsw
ret
jp
add
cli
add
xor
dec
jns
cmp
in
insl
adc
in
mov
adc
add
jmp
sub
jmp
ror
adc
les
jmp
sbb
hlt
test
clc
inc
cmp
add
add
push
je
inc
xchg
jle
enter
sbb
andb
add
sbb
or
mov
std
mov
jnp
sti
push
add
jle
mov
out
std
pop
mov
mov
push
push
jecxz
dec
fistps
addl
cmc
enter
push
pop
jecxz
xlat
push
faddp
mov
add
add
lds
add
dec
mov
add
mov
jmp
push
les
test
ret
xor
jmp
ja
mov
fwait
sbb
xor
add
jmp
and
jo
stos
sti
xchg
pushf
out
nop
sub
mov
jmp
xchg
push
lds
jae
clc
andb
jmp
jl
movl
jmp
mov
out
and
loop
mov
add
inc
call
add
pop
add
insb
ficoml
xchg
ret
add
pop
jmp
pop
faddl
jmp
inc
cs
jmp
test
push
in
out
shr
mov
add
push
mov
inc
jae
outsl
add
jb
in
jp
movl
add
int
and
test
add
sbb
inc
adc
or
push
int3
push
sub
jl
data16
push
and
in
xor
lret
push
and
or
add
add
add
in
sbb
addr16
cmpb
add
inc
jbe
xchg
inc
inc
shll
pop
test
add
inc
rcrl
lods
sub
and
lock
add
repz
pop
jl
add
leave
xchg
push
sahf
call
ret
mov
inc
into
jg
out
enter
cwtl
aas
inc
mov
les
in
decb
xor
daa
iret
pushf
adc
mov
outsb
cmp
int3
in
pop
xchg
scas
cmc
jae
push
jle
jp
idiv
or
add
loop
adc
lret
mov
decb
test
and
bound
sbb
call
sarb
add
mov
sarb
movsb
out
add
add
lods
out
lea
stc
add
js
jmp
out
add
shlb
add
gs
movb
add
add
pop
add
add
xor
mov
repz
call
xor
xchg
popa
push
jmp
add
in
add
push
out
loop
add
fisubrs
push
shrb
sbb
imul
pushf
shr
sti
repnz
insl
xchg
xchg
add
dec
es
lea
fsubrs
and
orl
sub
dec
and
jmp
jg
leave
insb
bnd
bound
rorb
in
gs
or
jg
jg
jns
lock
lock
mov
sbb
mov
in
loop
pop
or
test
cld
jle
das
add
mov
adc
add
je
call
push
cmp
mov
arpl
or
jmp
fidivs
mov
lcall
call
imul
test
add
jl
and
add
add
lcall
inc
or
add
cli
mov
pop
sub
roll
enter
data16
mov
je,pt
fisttps
test
mov
mov
incl
aas
or
les
inc
xchg
mov
fdivr
sbb
or
les
lret
inc
mov
mov
add
add
stc
mov
inc
sti
mov
into
cmc
mov
or
std
in
std
shll
mov
lods
push
or
insl
and
mov
jne
mov
add
push
int
push
jae
lds
push
lret
int3
fmull
dec
cmp
push
popf
inc
call
and
and
les
cld
jb
lock
add
add
or
stc
pop
inc
pushf
cld
add
mov
mov
add
add
or
mov
fdivrp
lret
fwait
or
add
and
push
lods
out
xor
sub
dec
std
jle
or
jmp
or
pop
add
mov
outsl
ss
jo
and
mov
add
add
push
pop
jb
in
lods
adc
add
mov
movl
push
fs
data16
fsubr
repnz
add
mov
dec
add
ds
push
arpl
push
and
sub
dec
inc
es
bound
push
je
sub
sub
inc
jns
pop
rclb
loope
imul
sbb
inc
shrl
inc
add
stc
decl
mov
add
adc
shl
add
icebp
cmp
cld
xor
add
or
call
add
push
push
mov
and
or
jmp
sub
ljmp
add
add
add
pop
stos
scas
pop
xorl
push
add
jle
test
mov
in
jp
adc
xor
ja
enter
out
out
movsb
call
fsts
jg
adcl
xor
push
dec
jg
xchg
out
inc
mov
cmove
iret
jp
popa
xor
xor
sbb
hlt
mov
fisttpl
out
ja
push
ror
fs
pop
pop
xchg
push
or
pop
pop
xor
add
loop
aas
mov
add
test
sti
orb
out
jl
xor
inc
repz
stos
outsl
and
nop
enter
mov
push
cld
inc
sti
arpl
enter
gs
ljmp
lret
mov
add
lods
cmp
insl
push
mov
xlat
inc
add
jle
jo
cltd
adc
fwait
scas
subb
in
movsb
and
les
lahf
out
inc
jmp
outsb
sar
insl
inc
mov
jae
loope
add
sub
cli
stc
sub
push
xchg
inc
daa
push
sbb
push
add
add
xor
adc
jbe
add
test
aam
mov
ret
mov
dec
push
mov
cmpsb
and
push
jb
js
cmp
add
ss
push
mov
mov
pop
stc
jg
adc
mov
rcl
pop
cmc
cli
cli
out
mov
push
and
and
faddl
lea
adc
pushl
adc
add
add
jle
push
dec
mov
push
xor
bound
fldl
add
mov
rclb
imul
dec
add
or
cmpsb
sbb
add
mov
jmp
mov
push
inc
add
xor
cmpsb
adc
push
inc
inc
add
stos
jmp
push
inc
inc
add
xor
add
add
inc
dec
mov
cs
andb
xchg
jne
add
cs
xchg
jne
adc
cs
xchg
gs
and
aad
ds
inc
xor
and
dec
dec
les
mov
push
aas
inc
add
sub
add
decb
adc
pop
jg
add
add
fnstsw
les
jp
or
mov
in
jo
add
popa
push
and
xor
jmp
or
xchg
fisubl
push
add
lods
sbb
loopne
aas
add
dec
ljmp
lcall
stos
jno
add
mov
pop
inc
out
jmp
lods
add
add
inc
lds
adc
jmp
hlt
testb
dec
dec
imulb
inc
call
cwtl
add
sub
std
jnp
inc
jmp
js
mov
mov
jb
int3
mov
xchg
ret
in
jmp
xor
stos
mov
dec
dec
or
fsubs
add
inc
mov
in
dec
jp
rcl
jle
roll
jmp
jb
or
add
adc
add
sbb
add
cli
xchg
jb
sub
push
or
push
pusha
hlt
adc
jmp
bound
push
mov
mov
inc
loopne
add
adc
cmp
andl
std
adc
push
stc
jg
jno
mov
mov
fs
push
mov
add
mov
hlt
je
adcb
or
add
lret
es
or
test
outsl
pop
sahf
mov
pop
jl
inc
idiv
jnp
insb
or
xorb
cmpsb
repz
jne
xorl
test
sbb
sbb
add
pop
pop
les
push
mov
add
add
xchg
xchg
imul
call
dec
mov
decb
cmp
xor
mov
lret
pop
faddl
add
ja
or
xor
call
aas
add
xchg
stc
lea
imul
out
mov
out
pop
pop
cmp
pop
push
mov
add
add
sti
pushl
push
sti
jmp
push
jo
mov
adc
jno
adc
cli
sub
dec
jb
cwtl
mov
jg
inc
lds
jecxz
inc
movl
out
insb
sbbb
and
pop
mov
or
add
add
xor
insl
jle
mov
sub
mov
imul
add
add
fdivl
les
addr16
push
bnd
repz
bnd
add
and
add
movl
scas
ret
repnz
repz
jmp
dec
aad
jmp
movsl
add
jmp
jl
shl
sti
into
add
push
and
inc
ljmp
add
add
jle
xchg
lods
test
jmp
inc
icebp
cli
jmp
lods
sub
sbb
jbe
in
movaps
test
out
cmp
jbe
inc
stc
adc
add
jl
inc
mov
sbbb
movsb
out
lcall
add
jmp
jne
jg
and
add
add
cmp
xchg
mov
mov
and
and
jle
sbb
add
call
sub
or
jne
aaa
ret
test
sbb
mov
add
add
les
call
push
or
cmpsl
add
xchg
sbb
and
add
pop
daa
testl
pop
lret
sti
fisttpll
dec
fdivrl
insb
add
fcmovnbe
adc
je
xchg
sahf
pusha
xchg
push
cmp
or
call
bound
loopne
decl
and
pop
fdivrp
incl
xchg
rcrb
xchg
xor
sbb
add
jno
cmp
and
push
cmp
add
add
cmc
andb
jmp
pop
loopne
fisttpll
inc
jmp
pop
mov
movsb
outsl
loopne
and
jo
test
jo
sub
or
adc
js
out
test
mov
push
inc
jbe
cmpsl
test
add
push
data16
ljmp
add
fadds
jp
and
jnp
and
add
add
ljmp
sub
test
add
dec
add
outsb
pop
cltd
push
pop
mov
add
add
jmp
movl
add
xor
pop
jl
lds
add
and
dec
push
add
imul
jmp
pop
out
cli
jmp
mov
push
call
in
jne
mov
push
jmp
int
jl
enter
add
add
movl
push
pushl
xchg
loope
sub
jg
ljmp
aaa
pop
cs
lds
add
mov
or
call
cmpsb
clc
loop
inc
out
std
push
push
push
sldt
add
das
loopne
iret
pop
add
jbe
loop
xchg
pop
add
sarl
and
push
push
push
pop
std
adc
and
jl
add
pop
inc
sbbl
adc
fs
inc
sbb
rorb
and
inc
loope
imul
or
ret
cmpsl
pop
stc
add
or
add
xchg
xor
out
loopne
decb
sbb
out
aas
stos
sbb
mov
mov
rcr
fsub
fwait
cld
jmp
or
push
cmpb
jne
and
add
and
cmp
ds
sbb
add
push
sub
hlt
js
and
ljmp
inc
jbe
mov
inc
and
inc
enter
push
xlat
in
vmovapd
jmp
aas
loopne
iret
decl
or
mov
insl
add
add
leave
add
add
jmp
add
add
jmp
inc
les
push
dec
das
addl
in
add
add
add
push
add
sbb
add
inc
daa
and
add
add
and
rolb
icebp
faddl
jb
xor
movaps
push
jmp
out
dec
clc
jle
mov
jno
ss
add
and
or
in
jno
lret
and
jle
fsubrs
or
add
add
add
sti
pop
daa
or
enter
sub
jmp
add
testl
leave
pop
inc
add
test
add
out
icebp
push
jae
pop
or
add
adc
call
js
pop
pop
jmp
sti
ljmp
or
add
std
push
mov
cli
incl
add
add
fsubrl
push
adc
adc
inc
jbe
add
add
into
jmp
push
mov
jmp
push
repz
les
cld
cmp
jp
mov
out
aam
decl
jns
mov
fidivs
or
push
dec
clc
in
jae
pop
aas
push
xchg
pop
mov
loop
inc
test
dec
dec
aas
scas
mul
xchg
xchg
add
inc
cmp
sub
sbb
addr16
and
fstpt
or
add
xchg
lods
orl
addb
mov
cs
filds
leave
or
out
mov
rolb
int3
or
inc
lock
and
dec
sti
rol
les
sub
enter
cmc
push
sbb
outsb
fnstsw
andl
out
stos
push
mulb
movb
nop
sbb
call
sti
mov
add
pop
add
add
jbe
int3
push
and
add
and
add
out
jmp
pop
out
jmp
pop
pop
add
call
lds
dec
je
push
adc
jl
subl
cmpsb
or
out
jmp
push
jmp
inc
push
add
inc
cmpsb
or
cli
jmp
ja
into
insb
test
jmp
gs
test
movb
mov
les
add
in
inc
push
mov
push
push
mov
add
mov
sub
xchg
popf
or
mov
sub
sbb
sahf
rorb
jb
cld
andb
jne
push
dec
push
add
loop
shrb
cmp
imul
inc
rcll
sub
lds
xor
add
add
adc
mov
sbb
fstpl
and
sub
rorb
iret
adc
xchg
lret
and
hlt
shr
decb
mov
and
gs
and
gs
and
jno
jb
push
dec
and
gs
and
addr16
and
push
dec
and
ja
mov
shll
call
inc
adc
cmp
outsl
push
nop
out
ja
mov
push
ja
loopne
mov
mov
mov
cltd
xlat
orl
sbb
call
mov
jbe
test
jmp
sbb
jl
lods
xor
cs
loop
incb
out
shr
orl
out
cmp
rorb
ret
fiaddl
add
add
fidivs
sub
xchg
xor
test
cmp
or
xchg
add
rolb
cmp
rcr
ret
push
mov
cmp
fmull
cmc
adcb
mov
ds
add
repnz
sub
fcmovu
add
pop
ret
ds
push
xor
in
add
add
push
push
lcall
das
ret
clc
jb
sub
arpl
lea
mov
clc
in
nop
test
call
inc
fisttps
jmp
inc
or
jmp
fsubl
aaa
sub
adc
cli
jmp
mov
cli
jmp
adc
mov
sldt
add
cltd
cli
in
pop
int3
or
pop
push
lcall
sub
mov
sub
dec
pop
push
dec
je
push
dec
je
test
add
inc
sub
xchg
cmc
or
and
imul
jnp
popf
add
test
insl
add
adc
mov
mov
jne
pop
rorb
insb
pop
inc
add
add
add
mov
pop
dec
sub
decb
dec
mov
repnz
pop
sar
out
jb
imul
andl
add
subb
jnp
jns
enter
pop
roll
or
sub
inc
or
mov
ljmp
test
hlt
or
inc
outsb
fstpt
cli
and
dec
sbb
and
lock
cmp
jne
or
out
push
push
jb
xchg
inc
and
flds
xor
add
mov
pop
les
xchg
push
cmp
mov
adcl
xor
ljmp
inc
loope
inc
fld1
add
subb
push
insl
fldl
add
add
add
add
jmp
add
mov
add
and
clc
cmp
cmc
fisttpl
gs
enter
les
add
je
add
imul
xchg
adc
push
popa
jg
jmp
pop
arpl
popf
fs
loopne
add
add
cmc
push
push
xchg
sub
adc
mov
add
or
lock
in
add
test
mov
imul
xor
in
sbb
out
add
push
cmc
rcrb
or
popf
push
xchg
and
rcll
mov
sub
outsb
or
lret
jp
sbb
add
add
ljmp
pop
cmc
push
push
std
mov
inc
dec
test
fdivrp
jle
sbb
mov
dec
pop
pop
es
pop
out
mov
fsub
adc
fidivrs
lods
or
push
push
dec
lock
lods
cmp
or
sbb
push
lods
pop
dec
or
sahf
add
out
jnp
lret
popa
push
out
lock
jo
stc
andl
dec
adc
xchg
shll
or
out
dec
sub
mov
adc
lcall
scas
cld
repz
cmp
fsubrl
jecxz
mov
mov
fsub
imul
push
lcall
mov
popf
mov
inc
adc
out
pop
jecxz
adc
cmp
lock
add
insl
cmp
mov
fcompl
mov
push
fnsave
add
daa
cld
mov
pusha
cmp
nop
in
repnz
aad
test
loope
adc
outsl
jmp
inc
imul
jmp
addb
jmp
inc
lock
test
iret
jp
mov
out
or
inc
pop
loope
sbb
jo
push
push
mov
call
js
ficomps
fisubrl
test
pop
fildl
jmp
mov
xor
sbb
push
push
movsb
or
add
sahf
iret
xchg
ds
out
fwait
pop
inc
and
add
adc
cmc
xchg
mov
xor
push
incb
sub
mov
jecxz
cmp
daa
jmp
out
cmp
out
ss
mov
mov
loopne
mov
sub
mov
push
add
sti
je
push
aas
and
ss
jb
pop
adc
inc
dec
push
jmp
sarb
sub
add
mov
fldl
test
jne
outsb
out
sub
cmp
jmp
cmp
pop
dec
pop
pop
inc
sub
popa
loop
repz
lea
sub
cltd
sbb
popf
aas
add
lahf
aas
cmp
in
stos
sbb
out
pop
add
push
pop
adc
add
add
jns
inc
mov
decl
jmp
out
incb
add
and
decl
out
in
call
out
call
mov
push
cmp
call
pusha
add
xor
imul
in
test
mov
dec
push
fdivrl
inc
je
mov
lret
and
mov
add
stos
add
push
sub
inc
jmp
adc
ret
sbb
int3
xorb
jne
mov
dec
xchg
mov
add
in
push
xor
mov
xor
insb
iret
sub
inc
or
jmp
mov
add
add
push
and
mov
in
fcomi
rcl
pop
push
mov
push
jmp
rcrl
mov
rol
call
jmp
cs
cmp
aad
add
or
jb
sbb
repz
mov
out
add
mov
xchg
or
xlat
cli
jmp
mov
shr
movl
mov
test
or
and
sar
push
sbb
test
add
and
or
repz
jg
lock
add
sub
je
mov
dec
out
popa
push
add
push
sahf
add
les
sbb
add
sbb
std
adc
scas
int
test
inc
mov
sub
repz
adc
repz
jp
mov
outsl
pop
and
push
mov
adc
adc
outsb
int
sub
imull
dec
sahf
add
subl
call
push
push
add
push
call
cmp
add
add
push
mov
xchg
loope
repz
or
pop
outsl
loope
sar
test
rcrb
push
fwait
testb
fildll
xchg
addl
mul
adc
test
jns
adc
in
sar
inc
enter
jbe
int3
jecxz
sub
cld
call
add
add
add
pop
fidivs
jle
add
sbbb
pop
sub
xchg
insl
ficompl
sub
add
aam
pop
adc
xchg
pop
sub
cmp
out
add
sbbb
fistps
fs
xlat
and
xchg
pop
sub
xor
int
xchg
andb
xor
call
je
pop
jnp
aam
enter
pop
mov
subb
add
add
add
aas
cmp
rorl
add
adc
scas
pop
add
mov
mov
fistpll
cmp
add
inc
xchg
je
ds
add
sub
jmp
add
push
jb
sub
sbb
add
xchg
sub
fs
xor
add
push
pop
testb
enter
fsubrl
push
ljmp
inc
jmp
subl
dec
fwait
sub
add
outsb
and
mov
pop
or
subl
push
mov
and
lods
jg
mov
sbb
mov
std
mov
xchg
in
popf
push
mov
pop
pop
mov
add
cltd
adc
add
mov
sbb
add
in
dec
mov
sbb
dec
add
add
sub
add
lods
add
incl
or
les
and
fmull
and
push
mov
mov
jmp
jae
decl
rclb
inc
loopne
pushl
add
add
ret
les
push
xor
sbb
es
mov
cmp
add
add
pop
mov
inc
pop
fsubrs
fldl2e
adc
outsl
mov
dec
test
mov
fimull
inc
loopne
out
xchg
aas
cmpsl
xor
les
add
add
add
jo
jl
leave
jl
daa
mov
inc
add
call
out
aaa
gs
mov
les
add
into
push
jmp
xchg
inc
or
and
or
or
inc
or
cmc
insb
add
adc
mov
sbb
and
add
out
jl
and
mov
test
jmp
inc
add
or
es
mov
rep
filds
shlb
aam
push
cs
adc
movl
cli
bound
push
mov
aad
movsl
lret
adc
dec
ljmp
or
sar
push
rcrb
mov
lds
jmp
push
ret
push
cli
xchg
jp
in
leave
cmp
es
xor
dec
es
pop
add
fldenv
jmp
repz
cmp
repnz
sub
and
out
cmp
cmp
fildll
out
mov
xor
or
sbb
mov
fldl
mov
sbb
sbb
inc
je
mov
ljmp
add
xchg
add
xchg
jnp
and
cmpb
out
mov
jnp
and
jnp
and
dec
fidivl
adcl
orl
out
jo
dec
js
cmp
out
fidivrs
mov
adc
orb
push
push
mov
fnstenv
mov
sar
ret
push
add
add
or
insl
inc
push
push
add
add
inc
arpl
cmp
fstpt
fdivrp
imul
mov
sti
stc
mov
add
call
les
xchg
fcmove
inc
xchg
mov
std
jo
and
call
or
ljmp
inc
push
inc
inc
add
add
ret
mov
inc
or
jmp
xchg
call
lret
stos
cmpsb
add
les
pop
in
subb
inc
mov
mov
icebp
roll
cmp
cwtl
subb
mov
lock
xor
xor
mov
jge
add
pop
xchg
in
dec
dec
lret
inc
es
fidivrs
add
in
push
sbb
sub
repz
std
mov
jg
mov
mov
jmp
aas
inc
add
add
lods
ret
inc
mov
adc
add
fisubs
jg
and
jle
in
aad
cmc
iret
jl
adc
loop
jmp
hlt
cmp
mov
int
cli
bound
jne
cld
jl
add
add
add
les
add
or
movsl
fsqrt
fld
outsb
es
add
clc
push
push
cmp
adc
sbb
mov
add
decb
add
jge
add
lret
test
and
flds
xchg
mov
in
rcll
dec
push
out
sbb
push
mov
jns
and
jmp
mov
leave
and
es
cmp
add
lcall
incb
std
cli
in
adc
cld
arpl
or
ud0
les
adc
clc
and
les
and
fmull
add
and
mov
test
add
cld
or
cs
add
daa
mov
add
stos
lea
or
fcmovnu
xor
ret
fdivr
addb
mov
in
push
push
lret
cltd
mov
add
xor
mov
and
mov
push
dec
add
push
in
lret
jp
imul
add
fsubl
inc
sarb
sbb
add
int
dec
inc
jp
and
xor
add
or
inc
xchg
ss
jecxz
push
aam
subl
dec
test
outsl
inc
mov
add
jmp
pushl
inc
pusha
sub
jl
pop
lock
scas
call
and
in
and
add
sbb
cmp
jnp
out
push
adc
jle
add
adc
or
cli
xchg
rcrl
push
inc
lret
add
dec
add
jge
and
xchg
jecxz
je
xorl
rol
lret
inc
jmp
test
and
jne
notb
int
mov
popf
jmp
mov
add
dec
push
add
daa
out
add
and
add
divb
jbe
lcall
popf
sub
mov
rcll
mov
sbb
or
jmp
ret
pop
cmp
sbb
mov
mov
in
push
jbe
or
mov
cli
jmp
adc
lcall
call
inc
es
ss
sub
les
jmp
xor
shl
add
xor
insb
lret
jae
push
dec
inc
mov
push
dec
fstl
fdivr
mov
fdivrl
mov
leave
inc
test
xlat
jb
fdivr
xorb
xor
jb
lcall
cmp
push
inc
and
pop
sar
repz
or
inc
fldl
and
call
push
lds
sub
movsb
daa
and
lods
daa
sbb
insl
cmp
cmc
jle
rep
insl
repnz
xchg
push
cmp
xchg
sbb
fsubrs
gs
rorb
out
call
xchg
jmp
aas
call
sbb
mov
xchg
out
les
xchg
push
mov
pop
in
icebp
pop
add
mov
lods
mov
mov
movl
in
fimuls
add
push
lea
nop
dec
lds
scas
add
pushf
in
test
movl
add
lods
sbb
add
nop
nop
inc
add
in
std
push
insb
test
jne
jb
add
mov
test
and
add
mov
aad
rorl
les
add
lea
lea
xchg
jmp
and
add
test
sub
add
jl
xchg
push
lea
jne
push
xor
ljmp
lret
push
xchg
test
ret
insb
pop
add
sbb
add
out
loop
push
mov
add
push
test
mov
sub
mov
dec
and
xchg
in
loope
or
mov
pop
or
or
add
es
pop
cld
test
call
jo
sbb
js
push
add
add
test
add
pop
mov
jmp
jns
add
jecxz
lods
ja
dec
inc
and
frndint
cmp
aas
cmpl
pop
aaa
lcall
jnp
and
scas
rcll
shrl
test
ret
shrb
push
add
stos
sbb
addb
add
les
int3
popa
repz
les
mov
cmp
lods
mov
ret
mov
mov
add
push
mov
xor
lds
xchg
pusha
add
mov
jnp
ljmp
das
ljmp
call
sbb
in
or
test
and
in
ljmp
add
add
shr
xchg
xchg
and
movsb
push
data16
call
pop
jmp
add
add
adc
in
jmp
mov
test
into
flds
cli
jmp
movl
es
dec
int
lods
and
add
xchg
insb
or
lea
add
add
es
dec
adc
add
xchg
jmp
xchg
jmp
es
ret
ret
ret
xlat
sub
xor
in
add
sbb
fisubrs
data16
fs
or
mov
add
add
ds
push
ret
in
pop
xor
rorb
mov
cmp
add
addb
add
popa
add
push
pusha
cmc
push
mov
adc
push
lea
xor
push
call
aad
incb
add
mov
inc
mov
std
test
mov
lds
out
inc
cmp
repz
les
and
testl
inc
xchg
testl
enter
orb
orb
ljmp
lods
sub
fildll
inc
and
lods
testl
inc
aam
or
les
inc
out
xchg
pop
add
push
orl
mov
push
or
enter
add
cmp
rorb
pop
inc
add
jb
dec
dec
int
inc
das
in
lds
hlt
jl
mov
leave
dec
mov
jb
mov
mov
add
or
call
fucom
enter
jnp
push
jb
mov
cmpl
rolb
push
out
adc
add
call
add
add
lods
push
testl
add
mov
into
push
adc
daa
sarb
push
loope
enter
out
pop
rcrl
xchg
ret
and
push
dec
add
leave
or
push
loop
or
mov
xchg
add
popf
xchg
add
lea
add
add
mov
add
add
add
or
loop
pusha
xchg
sbb
push
aas
aas
and
cmp
cmpsb
inc
es
mov
dec
stc
push
or
xor
mov
or
push
jp
pushl
and
add
sbb
add
inc
imul
std
incl
add
add
call
es
call
mov
lods
mov
pop
add
or
lock
mov
push
pop
in
mov
jne
call
int
les
std
lock
les
mov
or
xchg
jmp
sbb
decl
cmpb
add
sub
pop
xor
aaa
inc
and
aaa
sbb
xrelease
js
xor
xchg
pop
popa
push
cmp
sbb
aas
les
int
sub
cld
andl
jb
es
sbb
sub
xor
jg
xor
adc
ljmp
xchg
add
xor
js
add
add
lods
pop
aad
mov
testb
sub
xor
adc
cld
add
repnz
dec
sub
lds
fs
int3
das
in
das
scas
push
lds
aad
cmp
push
dec
movsl
mov
pushf
js
mov
paddsb
test
in
fdivl
mov
fsub
mov
lds
add
add
les
push
in
inc
lods
xor
mov
mov
or
mov
or
movsl
add
test
out
rorb
push
add
mov
push
ljmp
js
gs
mov
push
ljmp
jg
rorl
push
sarl
mov
jne
repnz
in
movl
push
lock
add
pop
add
lea
mov
lea
popa
loop
into
add
mov
std
je
xchg
mov
ret
xor
xchg
xchg
pop
ljmp
dec
push
push
push
push
loop
ss
sti
jmp
outsb
pop
push
push
test
add
lods
mov
push
or
enter
add
jmp
mov
pop
pop
pop
ret
ret
push
push
arpl
adcl
mov
and
xor
out
mov
out
ljmp
mov
test
mov
lret
dec
call
jg
std
xor
dec
xor
sbb
xor
cmpsb
inc
dec
lcall
add
xor
cld
jno
mov
call
dec
in
cmp
ljmp
jp
push
mov
aas
dec
add
sub
pop
or
pop
out
inc
jb
add
mov
pop
cmp
push
jo
aam
xchg
mov
or
mov
jl
call
rol
imul
add
add
add
xor
add
mov
clc
cmp
pop
push
aam
cmp
les
insb
les
mov
arpl
mov
mov
xor
xchg
xor
leave
les
shr
roll
testl
push
push
pop
add
push
cmp
add
lods
pop
mov
bound
add
add
mov
test
jle
cmc
ds
or
inc
divb
mov
out
shrl
cmp
movsb
push
mov
nop
int3
mov
or
jne
mov
sbb
enter
cmp
mov
cmp
sub
xor
aad
add
push
ffreep
test
lahf
popf
jmp
cli
push
xchg
insb
inc
xor
sub
outsb
add
inc
mov
scas
cld
adc
cmpsl
scas
dec
sbb
or
shrb
jg
jmp
mov
mov
mov
or
sbb
stc
cli
add
inc
sub
mov
imull
inc
add
dec
pusha
xchg
push
dec
pop
pop
cmpsb
enter
add
add
dec
inc
mov
enter
mov
and
daa
dec
or
cmpsb
mov
mov
dec
adc
sahf
xchg
dec
js
ret
inc
jo
call
inc
jl
fimuls
jnp
int
rcrb
int3
pop
daa
sarb
dec
and
cld
das
push
jg
call
add
add
daa
inc
or
mov
ljmp
faddl
inc
mov
jmp
pop
sbbb
jb
jo
cmp
add
sub
pop
jbe
enter
shr
xor
push
pop
push
mov
mov
add
lds
adc
lcall
popf
mov
add
mov
or
mov
jmp
push
push
dec
push
loope
push
or
sub
pusha
mov
jle
or
inc
in
mov
in
add
add
jmp
addb
add
lret
add
or
or
xorb
cltd
jo
pop
xlat
pop
push
jg
mov
inc
loope
add
add
add
pop
mov
dec
mov
or
jmp
mov
add
mov
rorb
cmp
test
push
enter
ds
loope
adc
icebp
or
outsb
idivb
add
add
testl
inc
jmp
jecxz
add
push
ret
push
pop
mov
sub
mov
jmp
push
pop
mov
jg
push
add
int
sub
je
mov
sbbb
mov
push
subb
cli
jae
dec
cmp
jmp
fiadds
add
or
dec
pop
pop
jo
sub
leave
outsb
push
rclb
incl
add
add
pop
adc
les
cmp
rorl
mov
aad
inc
fdivr
shll
jae
xor
std
adc
push
push
mov
push
push
add
add
popf
cmp
cli
mov
fiadds
decl
addr16
mov
out
pushl
inc
add
sahf
stos
add
xchg
les
les
push
sub
sub
les
into
jae
sbb
mov
or
into
or
call
or
scas
adc
incb
inc
jne
in
adc
sub
jnp
stos
inc
inc
push
mov
sbb
push
cwtl
push
dec
int3
lcall
lret
ds
fs
negl
fadd
inc
dec
lds
inc
lods
aad
ret
sbb
pop
dec
dec
int
insl
or
pushf
cmp
inc
add
cmpsl
hlt
mov
or
mov
repz
sbb
sub
adc
xchg
movl
jg
add
jl
push
push
fstpl
xchg
inc
movb
lret
pop
xchg
xchg
jmp
je
mov
aas
aas
push
push
rolb
push
jmp
in
push
push
rcrb
dec
bound
addb
cmpb
xchg
pop
mov
bound
icebp
sub
push
pop
add
sbb
adc
pop
out
xor
jp
loopne
pop
add
das
mov
lock
jnp
cmp
fldl
xorl
mov
data16
fstps
add
cwtl
js
mov
ret
fstp
or
ret
adc
in
jp
sbb
push
mov
js
or
sub
hlt
insl
sbb
add
cmc
inc
aad
sti
lcall
push
sub
mov
jge
cmc
decb
add
sub
aas
fsubr
cmc
sbb
mov
and
mov
call
sahf
mov
mov
push
sbb
shrb
add
mov
sub
ficompl
andb
push
mov
mov
pop
incb
les
and
push
ret
push
jmp
pop
lret
add
cmp
jg
push
shrb
movl
loop
add
sub
jecxz
es
xchg
push
pop
daa
loopne
call
sub
add
test
pop
jle
inc
jmp
loopne
ret
and
lods
pushf
stos
jl
pop
roll
movsb
push
inc
das
call
shrb
pop
in
pop
aas
loopne
iret
mov
pop
loop
jnp
push
cmpsl
add
subb
lret
stos
add
ljmp
dec
shr
add
fiadds
lea
out
test
xchg
fwait
push
sub
dec
push
pop
test
or
cmp
es
lods
or
cmp
add
dec
rcrb
loop
in
push
xchg
add
add
add
or
ljmp
loop
call
jo
fucompp
jle
xchg
test
add
push
push
mov
jne
icebp
movb
add
add
jnp
in
test
cmp
jg
xchg
adc
clc
das
flds
addl
add
jmp
add
icebp
add
add
outsb
or
or
add
ljmp
cmp
notb
cmc
add
add
xchg
add
clc
jns
insl
add
clc
and
adc
or
imul
dec
outsl
pushf
icebp
cld
inc
cmpsl
sub
or
adc
int
incl
add
add
xor
cmp
aas
lahf
sbb
dec
outsl
scas
addr16
pop
scas
mov
nop
lcall
mov
sbb
lcall
orl
addb
rorl
dec
push
add
add
rcr
mov
cmpsl
push
push
stos
mov
push
add
add
push
outsl
xor
lret
add
jmp
add
jnp
jg
push
fwait
fwait
scas
into
call
jl
push
cmpl
dec
jge
adc
aam
sbb
mov
pop
jb
mov
xor
pop
je
aad
fiaddl
idivb
and
pop
fsts
sbb
dec
mov
jmp
sbb
sbb
les
mov
movl
cmpsb
pop
add
lret
in
das
fwait
xor
sarl
daa
out
add
xchg
push
xchg
jl
jb
cmp
ljmp
fwait
cltd
sarl
push
pop
rol
leave
add
adc
loope
fisubrl
jnp
lds
add
add
inc
rcrl
lea
lea
adc
xor
sbb
shl
pop
push
jg
add
or
push
paddusb
xlat
or
int
fiaddl
lods
mov
psubw
jmp
pop
xor
les
or
add
cli
push
mov
dec
push
ljmp
incl
add
add
mov
sti
mov
ljmp
fisttpll
mov
xor
add
sub
push
outsb
and
cmp
cwtl
lods
adc
lods
mov
and
add
add
cli
pop
jge
cs
mov
mov
mov
out
inc
in
mov
test
test
mov
push
out
sahf
inc
or
cli
mov
incb
cmp
jg
sub
jbe
subb
add
sti
addb
dec
xor
sti
push
dec
lret
inc
cwtl
mov
sbbl
shr
add
orl
cmp
xor
movb
jp
std
inc
pop
jbe
jmp
adcb
aam
mov
push
rcrl
cmp
mov
cmp
cmp
pop
stc
test
inc
aam
mov
fidivrs
sub
push
lods
daa
scas
sub
push
adc
ret
cmp
das
out
scas
mov
outsl
mov
les
call
dec
outsl
ds
jno
add
add
add
add
xor
push
inc
int3
inc
add
test
dec
roll
push
add
das
adc
adc
sti
cld
daa
testl
mov
in
adc
mov
inc
add
cmp
cld
daa
clc
inc
jmp
mov
mov
mov
jmp
cmc
scas
push
cmp
mov
mov
fwait
push
cmpsb
mov
and
add
sub
es
stc
rcll
pushf
icebp
jge
cs
and
jbe
push
aas
mov
cmp
jno
add
pop
add
and
add
sti
jnp
lods
jbe
sbb
lea
and
add
add
or
adc
enter
sti
add
fsubs
push
mov
aas
and
xor
mov
scas
cmp
add
das
ret
ror
add
xor
or
jg
cmpsb
add
jmp
jmp
lods
push
adc
loopne
call
and
mov
scas
xor
add
cmpl
xor
sbb
scas
incb
idiv
imul
scas
decb
popf
pop
popf
add
scas
jge
loopne
jge
call
xor
movsb
jl
mov
add
adc
dec
test
jo
jmp
and
out
andl
je
add
add
loop
push
aad
mov
aas
dec
or
adc
sub
fldt
sbb
cwtl
imull
dec
repnz
dec
lahf
call
lods
cmp
jle
push
jne
loopne
rolb
lahf
sarl
sbb
inc
inc
mov
xchg
jle
stos
add
leave
mov
ljmp
add
add
mov
push
sbb
cli
sub
fwait
clc
inc
jmp
cmc
mov
push
mov
push
inc
mov
adc
aaa
sti
fsubl
inc
jmp
push
sub
xchg
leave
mov
mov
pop
add
mov
add
test
imul
in
mov
sub
inc
lret
out
jecxz
push
jbe,pt
adc
ret
inc
add
cwtl
leave
outsb
or
insb
mov
inc
add
sbb
ret
fwait
and
call
cmp
or
in
add
jae
arpl
lods
or
ljmp
in
mov
lds
jns
cmp
sub
or
or
pop
mov
std
jbe
outsb
andps
add
call
aaa
xor
sub
push
push
aaa
push
push
inc
outsb
push
mov
outsb
push
sub
test
or
xchg
xor
xor
jmp
ds
or
adc
xchg
movl
stos
jb
sarb
mov
sarb
dec
jbe
add
ja
push
adc
or
out
dec
pop
cli
push
inc
ret
jae
loopne
dec
push
sbb
push
adc
jge
adc
scas
cld
cmc
xchg
push
std
mov
adc
jb
lds
and
adc
mov
cli
and
add
push
test
or
cld
mov
inc
mov
mov
lods
push
adc
js
and
addb
add
xor
or
pop
jmp
add
add
xchg
stc
xor
cmpsl
dec
add
add
mov
in
out
es
or
push
mov
xor
mov
cli
ds
add
cmp
sbb
jnp
add
rorl
jmp
ja
xchg
or
test
xchg
pop
add
mov
add
cmp
push
imul
xchg
sti
movl
imul
in
bound
lds
lahf
fwait
movl
movl
sub
fs
or
ror
xchg
popf
mov
shll
mov
xchg
jno
adc
repz
push
cmp
push
adc
add
add
jg
sbbl
mov
push
or
lods
testb
fldl
add
jno
xchg
nop
aas
enter
fldl
push
mov
aas
ret
and
inc
pop
xor
je
or
inc
add
leave
sbb
repnz
jmp
sbb
mov
cld
lcall
add
add
les
inc
adc
clc
inc
adc
jle
scas
jmp
jo
push
pop
out
out
mov
jge
idiv
sbb
into
decl
adc
les
fwait
testl
adc
outsb
dec
xchg
or
out
icebp
sti
xor
sub
and
std
pop
add
xchg
add
add
test
cli
inc
pop
dec
add
insb
adc
xorb
imul
movsb
ffreep
xor
mov
mov
cld
cs
cwtl
jmp
sbb
stos
lods
cmp
call
mov
dec
rcrb
lea
mov
mov
add
add
add
cwtl
call
test
les
lods
ret
les
xor
cmp
pop
push
les
mov
push
inc
add
xor
add
das
push
xchg
shrl
sbb
sahf
out
inc
push
dec
push
adc
inc
push
bound
lcall
je
xchg
add
mov
movl
push
fidivrs
adc
pop
jmp
mov
inc
adc
push
dec
adc
push
jmp
mov
or
iret
dec
inc
adc
out
dec
push
bound
rolb
or
rorl
dec
push
out
mov
sarl
push
and
dec
sbb
lahf
rol
or
rorl
sbb
cmp
mov
rorl
rorl
dec
sbb
aad
sbb
mov
sarl
sarl
outsb
xor
inc
es
add
sub
inc
add
push
cld
push
addb
les
call
dec
pusha
add
push
mov
pop
mov
push
cmp
loopne
add
stos
cmpsb
addl
arpl
push
and
pop
out
jmp
test
xor
subl
stos
adc
sahf
inc
leave
push
test
cmp
les
addl
in
cld
cmp
push
std
xor
push
std
adc
add
lock
sbbb
inc
ljmp
sbb
mov
sub
arpl
add
orb
add
fdivrl
pusha
push
int3
cmp
inc
sub
movsl
xchg
jnp
lods
jecxz
xchg
jne
dec
mov
ror
cwtl
fildl
int
hlt
ja
add
xor
inc
jmp
mov
rcrl
sub
andb
add
lods
hlt
inc
mov
add
jle
aad
rclb
jb
in
mov
mov
jl
int
dec
add
dec
cltd
jne
das
xchg
test
mov
xchg
sti
pop
add
dec
mov
cli
dec
cmc
xchg
inc
sbb
cmp
pop
aas
xor
push
push
incl
push
cld
jg
cltd
movl
jmp
jb
jle
xchg
dec
cmp
jmp
jl
add
cld
jne
jae
or
jb
adc
lret
push
pop
mov
ret
push
dec
mov
ficoml
push
fmuls
mulb
int
addl
add
add
push
add
fdivr
push
inc
pop
mov
lds
dec
add
outsb
std
jne
jge
jne
fdivr
push
adc
jmp
lea
sti
fstp
call
fisttpl
ljmp
jl
mov
add
push
add
test
mov
out
cld
xor
add
jge
cmc
push
adc
arpl
push
out
and
add
sbb
arpl
mov
push
lcall
incl
adc
cmp
push
xchg
aad
pop
les
popf
outsl
aam
adc
cmpsl
adc
scas
adc
pop
std
sti
mov
dec
add
into
frndint
pop
add
cld
push
or
cld
pop
add
add
jecxz
lcall
dec
jmp
pop
loopne
jnp
call
cmc
addb
nop
arpl
sub
rolb
nop
fcomp
js
add
hlt
push
pushf
xor
dec
jmp
pop
call
nop
or
push
sub
dec
and
int
sub
in
fwait
adc
cmp
sub
add
add
pushf
das
cltd
lock
insl
fwait
mov
add
mov
xchg
loopne
add
dec
xor
add
cli
push
cltd
add
mov
leave
inc
or
cli
jmp
test
add
inc
lahf
test
mov
add
cltd
inc
ret
rorb
or
lea
add
test
je
test
out
push
add
jp
rcrl
jmp
pop
jl
aad
nop
adc
stc
into
add
int
punpcklbw
inc
add
and
test
mov
popa
xchg
negb
cmc
std
jle
jg
mov
add
movsb
and
cltd
cli
inc
cmp
add
add
or
fisttpl
pcmpeqb
add
loopne
ljmp
addl
add
xor
call
ljmp
add
loopne
add
and
mov
push
add
dec
sarl
jnp
cmp
lods
std
lds
add
lds
mov
ja
sub
test
aaa
pop
jge
sub
inc
incb
inc
inc
pop
sahf
xchg
sbb
cld
dec
push
imul
xor
popf
push
jbe
les
mov
notl
xor
sahf
or
jne
jbe
cmp
jo
jecxz
sbb
cld
xchg
fwait
xor
add
les
test
add
and
lcall
inc
xchg
cmp
mov
subb
les
scas
adc
sbb
les
insb
dec
arpl
lcall
call
push
or
cmp
xchg
mov
inc
adc
sub
or
add
movl
inc
push
int3
sub
aaa
mov
lea
push
cmp
pushf
adc
jp
addr16
mov
rclb
sub
pop
movq
je
jmp
sbb
outsb
xor
cmp
add
fwait
inc
xor
bound
into
inc
icebp
ret
jmp
movl
dec
cmp
inc
jae
jmp
xor
cmp
xchg
imul
mov
scas
inc
or
mov
or
ret
std
scas
inc
adc
scas
inc
adc
xor
sbb
cmp
sbb
and
and
add
add
adc
sub
scas
inc
sub
cmpl
ds
or
jae
pop
inc
inc
add
fadds
std
rcrl
aas
les
mov
push
lds
in
imul
mov
mov
cltd
cld
dec
pop
test
xchg
pop
inc
sarl
scas
addb
add
adc
xor
rolb
rorl
lcall
and
stc
andl
cmp
mov
add
lahf
jp
lds
daa
inc
les
incl
adc
scas
add
shrl
mov
inc
les
mov
gs
jle
stc
insl
adc
add
add
mov
rorb
sub
inc
les
sub
mov
push
sahf
jno
test
adc
stos
push
mov
xchg
mov
cmpb
call
mov
add
jmp
add
jl
stos
arpl
add
mov
add
stc
test
movb
add
and
jle
inc
dec
xor
mov
test
jge
dec
ds
cmp
mov
sub
inc
bound
mov
mov
pop
pop
dec
jb
rorl
cmp
arpl
jnp
jmp
xlat
add
test
lds
addr16
inc
inc
xor
dec
loop
call
movl
mov
fisubs
lea
cmpsb
cmpsb
inc
add
xor
sti
lcall
add
imul
in
and
mov
dec
in
add
cwtl
fisttps
add
push
lea
add
sub
ljmp
ret
outsl
dec
ss
imul
sub
imull
inc
lods
push
dec
pushf
add
mov
add
pushw
lea
mov
les
add
lcall
mov
jge
pushf
cmpb
jne
add
sub
jmp
mov
jge
pushf
aam
imul
pop
add
clc
sti
sahf
aam
lods
mov
add
inc
sbb
add
pop
jl
shr
rcll
jge
int3
in
or
popa
jge
mov
out
add
imul
sub
aas
jno
rol
cs
jmp
lret
lret
ljmp
cmp
xor
nop
test
jl
xchg
cmp
test
adc
pusha
add
ror
adc
ja
mov
and
inc
or
mov
jecxz
cmpsl
cmp
sbb
sub
pop
int
sbb
dec
adc
scas
dec
call
fwait
insl
sbb
fistl
jge
sub
in
je
out
jg
push
imul
aad
ss
add
mov
add
or
add
sbbl
inc
xor
cwtl
imul
int
cmp
add
inc
jmp
shrb
push
addl
sti
pop
imul
movl
cli
jmp
pop
or
adc
add
popf
pop
mov
cmp
add
xchg
mov
insb
pop
add
jne
std
xchg
pop
or
add
int3
add
push
xor
add
js
rclb
inc
add
mov
adc
adc
adc
sbb
aas
and
pop
mov
sbb
mov
xchg
jno
mov
sub
jns
outsb
and
add
add
test
fucomp
lahf
movsl
in
in
std
xchg
les
and
sbb
pop
mov
repnz
rcrl
out
aas
stc
inc
and
mov
ds
fs
fcoms
dec
cmp
pop
inc
popa
cmp
test
call
call
js
mov
notb
adc
mov
jmp
imul
xchg
xchg
mov
dec
pop
jp
mov
sbb
aas
jmp
cmpb
lea
add
cmpsl
sub
xchg
cmpsl
cld
xchg
fisubrl
cli
xlat
outsl
xchg
dec
shll
adc
push
ljmp
addl
mov
jb
mov
xchg
mov
jg
adc
outsb
ret
add
sti
mov
ljmp
sub
data16
or
push
or
add
lds
pop
mov
ret
ret
jmp
aas
push
push
call
mov
arpl
inc
shlb
lret
aad
xchg
push
add
test
stc
subps
pop
push
cwtl
int3
adc
pop
cmpsb
or
mov
mov
outsb
inc
push
jb
in
or
add
clc
push
adc
mov
cmpb
mov
jmp
pop
adc
jmp
cli
inc
out
fdivr
int3
sub
lea
dec
popa
inc
aas
in
add
adc
jecxz
cwtl
ja
inc
popf
incb
xor
add
loopne
sbb
loop
dec
ljmp
adc
add
imul
ljmp
jp
imul
pop
leave
out
xor
in
scas
popf
or
xor
and
mov
pusha
sbb
add
xchg
pop
push
inc
jo
repnz
jbe
xchg
add
add
insb
gs
sub
data16
sub
or
stos
jl
mov
inc
lods
or
dec
xor
int3
ret
daa
scas
mov
push
int
lods
rol
jns
push
les
mov
cmp
into
out
pop
clc
inc
adc
mov
dec
mov
out
sub
incl
and
add
add
pop
decl
or
dec
test
int3
int3
mov
dec
inc
jnp
adc
jb
add
subl
call
repz
sti
movsb
aam
add
sti
stc
or
stos
repnz
add
fsubl
sub
pop
or
add
add
add
shrb
mov
fldenv
mov
add
add
push
test
icebp
repz
outsb
les
xor
pushf
fbld
jge
les
add
sti
aad
out
xchg
in
dec
sbb
clc
xchg
adc
mov
jl
jmp
js
push
neg
push
xchg
cmp
rcll
or
sbb
add
add
adc
je
and
mov
sbb
hlt
xor
jne
mov
enter
nop
dec
int
insl
sbb
dec
jns
sub
adc
xchg
enter
xor
rolb
es
dec
repz
xor
lea
test
adc
and
add
add
add
xchg
jmp
inc
push
and
add
in
xchg
add
xor
or
add
out
mov
mov
add
add
mov
cli
ljmp
inc
cli
jmp
add
add
or
les
mov
rclb
cmp
add
shll
inc
ret
or
cmp
out
pop
fisubrl
dec
das
cli
gs
sub
pop
and
aas
push
sub
cmp
add
mov
dec
inc
mov
mov
dec
inc
shrb
xor
hlt
orb
ljmp
jge
ret
rcrb
jae
add
les
add
or
fstps
ds
jmp
jne
test
xchg
jmp
cmp
sub
imul
test
sbb
inc
loop
pushf
fdivrp
test
add
addl
test
pop
sub
test
jne
inc
les
jmp
ret
notl
orl
add
add
repnz
add
lods
add
sarb
out
sub
test
mov
add
fisubrl
sti
push
mov
add
lods
js
iret
mov
cmp
mul
adc
sarb
das
imulb
inc
test
push
mov
les
jmp
jmp
add
adc
sti
pop
push
fs
leave
testb
addb
mov
inc
out
adc
fadds
push
fs
mov
roll
push
push
add
orl
adc
movsb
cmp
cmp
inc
outsl
pop
out
inc
jecxz
pop
add
push
and
in
add
push
subb
pop
cmp
mov
push
fdivrs
inc
fldl
add
jmp
shll
fs
jle
and
push
dec
push
mov
push
push
xor
sbb
jg
fmuls
xchg
push
std
adc
in
push
sbb
scas
mov
xchg
ds
push
cld
fldenv
inc
icebp
fldenv
xchg
test
sub
in
insl
incb
pop
xchg
inc
loopne
dec
inc
test
add
and
insb
incb
pusha
inc
pop
xor
sbb
aas
stos
push
filds
sub
loopne
mov
fs
jb
add
mov
lods
lds
loopne
xchg
inc
test
into
lds
dec
sbb
jae
sub
add
movb
jae
add
aam
cld
lock
dec
xchg
repz
add
add
pmulhw
aas
lods
daa
mov
ror
mov
outsb
sarb
daa
fiaddl
inc
mov
insb
inc
rolb
or
jne
nop
inc
and
out
lret
jmp
in
ret
fucomip
in
mov
aad
pop
adc
sub
inc
xor
aam
or
les
call
pop
adc
sub
add
and
pop
inc
mov
aad
gs
xchg
add
aad
aam
add
jmp
inc
jb
cld
inc
jb
xchg
mov
xor
xchg
leave
mov
adc
mov
testl
inc
cmp
leave
and
pop
subl
sbb
dec
fadds
add
add
adc
cs
lds
inc
out
push
enter
leave
pop
add
dec
push
inc
hlt
cmp
adc
lret
insb
shll
mov
mov
cld
pusha
xorb
mov
sbb
mov
inc
add
xchg
cmpl
jno
dec
add
mov
push
rcll
add
data16
in
xchg
inc
mov
push
push
push
push
sbb
dec
xchg
ljmp
sbb
push
call
push
pushw
and
lret
les
add
out
and
aas
or
arpl
add
scas
ds
add
test
mov
and
and
pushl
clc
insl
xor
div
and
add
add
add
les
jg
test
sti
pop
incl
mov
or
outsl
inc
inc
lds
out
pop
out
add
clc
push
ds
call
adc
pop
cld
add
jmp
add
lods
int3
jne
cmpsl
cmp
sub
int3
pop
into
mov
xchg
adc
clc
cmc
in
sbb
sbb
leave
or
sub
add
dec
inc
mov
jmp
out
mov
repnz
pop
ja
addl
leave
les
loop
int3
cmp
jne
aas
lock
out
cmp
shl
ret
mov
lods
adc
sti
add
enter
cmp
lds
sub
cmp
and
add
mov
cmp
fucomp
cmp
loopne
jle
or
icebp
fistl
insb
or
cmp
inc
mov
sub
test
popf
ret
outsl
inc
lds
jnp
fs
jb
testb
pop
movsbl
mov
add
xorl
dec
pusha
test
mov
sub
lahf
jg
add
jb
psubusb
pop
sbb
outsb
sbb
std
add
push
std
je
xor
dec
jns
ljmp
js
std
test
leave
add
roll
iret
mov
gs
call
cmpsb
hlt
jg
pop
xor
xor
incb
push
or
jne
jl
test
test
and
jg
and
loope
xchg
rolb
decb
or
inc
inc
mov
push
mov
pop
in
pop
cmp
and
adc
mov
dec
lea
inc
xor
decb
add
mov
dec
sbb
cmp
dec
out
xchg
add
add
daa
xlat
pop
mov
rorl
ja
iret
imul
mov
mov
pop
aas
inc
sub
inc
pop
adc
sub
inc
push
daa
dec
rcrb
push
stos
imul
mov
sbb
rclb
jo,pn
mov
cmp
add
add
jno
ret
arpl
pop
xchg
push
jecxz
mov
insb
jp
outsb
repz
jno
movb
add
pop
mov
shrb
lods
and
fbld
add
insl
rorb
add
add
mov
fistpl
divb
loop
mov
addr16
scas
cld
into
rolb
add
cs
mov
mov
lret
cmovbe
test
xchg
inc
popa
xor
movl
pushw
inc
shll
mov
ret
sub
xchg
mov
mov
jecxz
mov
jmp
cli
pop
push
sub
mov
stos
add
add
jp
add
push
pusha
test
mov
or
add
lcall
or
ljmp
xchg
loop
inc
in
std
sbbl
jle
push
ja
lcall
xchg
loop
sub
test
std
test
sbb
add
popa
or
mov
add
add
push
lea
mov
or
lea
or
mov
lcall
dec
lcall
les
mov
inc
mov
and
les
repnz
add
adc
xchg
les
push
mov
or
mov
andl
hlt
cmc
fldenv
mov
sbb
mov
add
add
jae
test
and
out
push
xchg
inc
cs
jns
jae
je
leave
and
dec
ror
push
mov
rcl
sbb
cwtl
push
test
cmova
cli
dec
add
cmpsl
fstps
aam
add
jmp
subb
sbbl
push
add
out
sbb
cmpsl
in
ss
test
xchg
aam
subb
cmpsl
cmc
lock
jle
and
andb
mov
outsl
mov
sub
insb
icebp
pop
inc
jbe
roll
push
fdiv
adc
jmp
pop
jge
push
sbb
xchg
cli
push
and
jmp
mov
add
cmp
push
in
xchg
inc
cmp
fs
push
shr
cli
movb
fstpl
dec
data16
jl
add
rcrl
pop
int
pop
inc
movw
movsb
and
loope
mov
rcl
fistpll
vmovsd
adc
jne
pop
call
add
pop
cmc
xchg
ljmp
add
add
or
inc
or
add
push
subl
mov
add
pop
push
xor
addb
jbe
mov
and
adc
popf
jl
add
in
add
test
push
mov
push
std
je
sbb
bound
or
lcall
or
xchg
mov
add
les
roll
pop
iret
cld
repnz
and
sbb
in
pop
pop
std
repz
and
testb
ljmp
pop
dec
inc
mov
sbb
lret
sub
clc
clc
std
or
or
or
lds
and
inc
add
adc
call
lods
incl
add
add
pop
sbb
add
adc
push
out
cmp
inc
and
std
roll
inc
mov
push
les
inc
test
fcoms
add
sub
imull
icebp
in
push
adc
cli
add
pop
jecxz
xchg
pop
je
ret
add
add
inc
xor
add
add
add
inc
pushf
iret
sbb
stos
jb
jne
jns
mov
out
ror
adc
imulb
adc
add
mov
dec
dec
test
sub
and
push
enter
or
mov
mov
add
pop
enter
test
pop
movl
add
rolb
jge
pop
ret
mov
cli
jb
mov
pop
repz
inc
add
jg
sbb
mov
jae
repz
add
jle
dec
mov
add
pop
mov
into
inc
add
or
add
or
or
or
xor
aaa
pop
ret
dec
mov
out
sahf
insb
out
add
repnz
push
push
jecxz
hlt
jbe
loop
mov
pop
ljmp
push
jmp
mov
addl
aas
or
push
mov
filds
punpckhbw
loopne
adc
flds
popf
loope
adc
pop
mov
sbb
push
leave
pop
pop
les
aaa
ror
fsub
sbb
add
incl
add
add
ds
aas
mov
mov
push
lds
mov
sahf
sbb
mov
and
scas
mov
ja
xor
push
stos
cld
mov
and
adc
imul
mov
adc
add
daa
ret
sbb
rcrb
mov
adc
insl
xor
add
add
push
mov
jmp
sub
add
sbbl
imulb
add
frstor
aad
call
div
cld
push
daa
mov
jmp
stc
leave
lds
or
aad
nop
pop
sub
jmp
and
insl
das
jmp
bound
cmpsl
arpl
add
insl
mov
bound
push
add
add
add
and
jmp
fidivl
mov
hlt
mov
sbb
add
mov
cmp
inc
pop
adc
psubusw
inc
fldl
cmc
ja
lods
or
jecxz
add
insl
lret
lcall
insl
xchg
pop
sbb
pop
add
lcall
stos
arpl
call
lea
test
inc
es
movl
test
xor
jmp
lds
jb
imul
add
ds
cmp
ljmp
and
xor
add
sti
ljmp
std
xor
inc
mov
add
loopne
pop
pop
add
jle
orl
sti
mov
add
dec
call
pop
repnz
sub
cli
fwait
xor
add
add
aam
fmulp
call
jle
pop
pop
push
cmpl
cltd
add
push
fcmovnu
das
sbb
bnd
scas
into
dec
hlt
mov
into
add
inc
cmpb
js
mov
into
dec
hlt
imulb
add
xchg
jp
outsb
sbb
and
pop
inc
scas
repz
scas
mov
pop
cltd
jns
inc
lret
adc
push
xlat
and
mov
insl
cld
sti
aam
or
insl
decb
les
out
das
cmp
insl
mov
dec
repnz
mov
iret
mov
push
adc
mov
call
add
das
fcoml
stc
adc
add
sarw
add
adc
std
lret
ret
or
mov
jns
push
je
xor
std
iret
rol
call
imul
out
dec
or
movsb
adc
pop
leave
lock
daa
fsubrp
xchg
push
pop
in
push
mov
inc
jno
and
add
add
add
in
cli
jno
add
sub
xchg
adc
popa
in
mov
and
adc
pop
rolb
mov
movsb
stc
jne
ret
xchg
les
adc
and
cld
arpl
inc
jmp
sbbl
and
jp
push
xor
adc
out
pop
or
sbb
push
inc
add
cmp
and
icebp
jae
fiaddl
popf
aam
push
xchg
mov
movb
and
repnz
roll
cmc
pop
in
repz
pop
outsl
and
jno
out
push
adc
add
add
fiaddl
and
cmp
lock
idivl
outsb
push
fistps
inc
pop
xorl
out
fisttpll
add
aaa
mov
push
popf
push
adc
fcmove
mov
jp
sbb
lret
lock
ret
push
mov
imull
movb
outsb
imul
imul
les
clc
push
jp
lock
jg
jno
incl
testb
jnp
jl
dec
pop
jl
inc
shlb
xor
inc
rorl
mov
cs
addl
push
lds
mov
mov
or
mov
mov
or
shrb
hlt
mov
lea
lods
nop
movsb
pop
cmp
stos
add
in
jl
add
add
and
lret
jp
das
or
xchg
add
add
clc
sarb
add
add
shll
test
sub
mov
mov
icebp
movsl
pop
test
fs
jmp
and
jmp
pop
shlb
test
inc
inc
fistl
subl
insl
movsb
addl
add
sbb
in
in
add
cmpsl
roll
test
inc
pop
cli
jmp
fiadds
jge
into
add
sub
or
pushf
mov
popf
pop
sti
aam
testb
and
fbstp
adc
mov
add
pop
jne
fucomip
add
enter
mov
pop
jno
or
xor
dec
sub
adc
pop
jecxz
int3
or
inc
pop
pop
cmpl
xorl
sbb
add
or
cli
orb
add
push
push
push
inc
push
xor
inc
push
sub
into
addl
inc
leave
sub
inc
mov
and
dec
push
xor
jle
cltd
add
pop
or
adc
jne
push
adc
fmuls
inc
leave
sub
sbb
xchg
or
scas
incb
jmp
cmp
test
inc
mov
bound
push
arpl
lcall
xchg
int3
cld
shll
jmp
mov
inc
mov
sti
xchg
aaa
jns
loopne
fdivr
push
jp
jnp
lret
lds
add
ljmp
cli
adc
jle
mov
hlt
call
push
add
les
gs
cmp
and
gs
sbb
pop
push
cld
hlt
test
in
or
out
icebp
outsl
xlat
cmpsl
std
add
cmpsl
repz
adc
fxch
and
shr
orb
add
add
add
shr
jnp
and
int
icebp
sub
add
imul
pop
and
xlat
mov
and
arpl
and
mov
stos
add
add
dec
inc
nop
rorl
fwait
out
dec
mov
notl
vcvtps2pd
push
hlt
daa
enter
or
cli
cld
jg
inc
jmp
rcll
ret
pop
jne
mov
scas
cli
fdivl
pop
inc
jmp
loope
push
jno
and
mov
test
adcl
cltd
add
add
adc
mov
add
xor
dec
jmp
push
enter
pop
ret
pop
mov
mov
movl
add
add
add
shl
shrd
cli
mov
jne
and
ljmp
rcrl
push
push
add
add
add
inc
in
xchg
shr
fadds
mov
cmp
loope
sti
lret
inc
mov
add
out
mov
std
je
arpl
push
rorb
cmp
out
push
adc
or
int
add
add
cmpl
jne
cli
push
out
fs
dec
cli
test
sahf
rolb
notb
insb
lods
mull
es
sbb
xor
test
cld
mov
idivb
call
pusha
cld
cli
popa
out
sbbb
dec
jnp
or
lea
push
rclb
cmp
ret
loop
jae
ljmp
sbb
add
add
out
sbbb
shrl
out
push
in
call
inc
repz
ficompl
push
mov
push
xchg
and
addl
lret
in
mov
int3
loopne
and
add
subb
add
ljmp
int
ret
adc
call
sti
pop
mov
ja
icebp
xlat
movsb
pop
and
inc
push
out
sub
push
fisubrs
add
outsb
inc
aaa
add
rol
fsubr
adc
mov
push
aad
mov
call
mov
in
loope
add
mov
xor
insb
mov
loopne
add
sti
fsubrl
inc
jmp
pop
push
xchg
into
roll
flds
add
add
cli
cld
xlat
add
dec
leave
or
ret
fcoml
call
fstp
adc
mov
or
or
rolb
mov
repnz
xchg
test
int3
or
popf
add
pop
mov
inc
cli
pop
pop
or
testb
add
pop
pop
inc
sub
sbb
jmp
rcrb
std
xor
mov
push
jg
sbb
cmp
sub
fisttpll
mov
fiadds
adc
jmp
bound
add
add
lds
mov
jl
dec
cli
js
or
mov
add
jno
les
imul
rorb
push
pop
xchg
push
aas
jnp
add
mov
pop
fisubrl
testb
mov
sub
std
mov
out
aas
rcrl
sti
xor
dec
inc
dec
or
pop
pop
call
push
inc
stos
or
movsb
stos
inc
fcmovnu
sldt
add
les
push
mov
push
std
shll
idivb
les
adc
out
push
cmp
test
aam
faddl
pop
clc
std
sub
mov
sub
adc
inc
enter
mov
mov
cli
sbb
repz
hlt
add
mov
fldl
adc
mov
mov
add
dec
insb
inc
ja
dec
push
push
stc
mov
pop
inc
push
mov
mov
xchg
sti
mov
testb
mov
stc
sub
fildl
add
mov
pop
rclb
movsl
jo
add
push
jb
cmp
fstpl
push
adc
push
lar
out
sub
sbb
sub
scas
addr16
add
add
sti
cli
hlt
pop
push
je
pop
push
adc
adc
lods
mov
inc
les
xchg
inc
xchg
push
cli
jmp
adc
inc
jmp
movl
add
sbb
add
cmp
add
pop
add
xchg
std
inc
add
mov
mov
add
add
pop
insb
add
xchg
inc
push
and
cltd
dec
xor
dec
pushl
stos
adc
test
data16
ds
adc
cmp
je
and
push
and
add
in
fnstenv
shr
mov
xor
addw
popf
in
lds
mov
add
add
add
les
sarb
mov
mov
jb
jae
xchg
mov
repz
xchg
xchg
jmp
icebp
jmp
mov
inc
dec
ficoms
shlb
cmp
and
inc
ret
cmp
aas
rol
and
mov
xor
xchg
pushf
fisttpl
decb
rcrl
push
mov
addb
adc
out
mov
add
fstl
add
mov
cmp
imulb
or
sub
pop
jmp
mov
sub
jmp
addr16
popa
nop
test
jmp
mov
call
hlt
lret
add
lods
add
icebp
sbb
mov
sbb
push
test
push
fiadds
lods
fdivs
push
daa
push
and
sahf
movl
add
push
call
outsl
in
jmp
sbb
jno
movl
jmp
jno
add
push
sbb
sub
mov
inc
repz
add
cmp
inc
jmp
xchg
xlat
mov
imulb
scas
mov
jmp
sub
jb
jge
inc
data16
dec
lret
nop
roll
inc
push
adc
add
add
inc
push
adc
std
adc
sbb
outsb
daa
es
inc
push
jge
push
sub
xchg
std
je
push
xchg
add
add
push
xchg
ljmp
filds
xor
jg
and
push
add
test
mov
adc
xor
cld
adc
adc
or
jnp
or
or
nop
or
loope
dec
pop
enter
pop
jb
icebp
dec
mov
mov
imul
dec
ljmp
add
add
cmpl
lods
insl
pop
cld
xchg
jecxz
jae
in
pmaxsw
mov
rcrb
call
sub
shlb
ljmp
mov
mov
sarl
aas
in
push
outsb
add
pop
push
je
jg
adc
dec
out
mov
add
clc
cmp
xchg
int3
add
add
cmp
imul
add
inc
ljmp
jge
les
jmp
scas
inc
inc
in
ds
adc
aad
xlat
pop
and
ljmp
jmp
lock
add
ds
jo
jmp
xlat
and
lods
jg
dec
call
sbb
pop
jle
lahf
test
add
sbb
std
dec
das
ret
add
adc
fldl
sbbl
int
add
lea
mov
ret
pop
es
jl
jle
insb
mov
sub
pop
xlat
adc
out
int3
xchg
daa
cmp
sar
dec
adc
sub
add
push
bound
repz
add
cmp
pshufw
cli
test
ljmp
shlb
xor
mov
cli
movb
push
adc
popa
push
sub
mov
jge
je
add
add
push
adc
xchg
xchg
std
decl
stos
add
fistps
dec
mov
push
adc
push
mov
or
push
sbbl
pop
or
mov
out
mov
je
cmp
push
lods
test
adc
repz
push
mov
fmuls
mov
mov
jmp
ret
fnstcw
jae
mov
jae
add
add
cli
mov
das
or
aas
imul
sbb
jnp
lods
loopne
call
mov
aaa
dec
xor
rolb
xor
mov
or
inc
pop
les
or
decb
inc
jbe
inc
ds
call
sub
xor
add
jbe
lret
in
ret
add
inc
or
adc
ret
test
in
fisttpll
pop
cmpl
xor
cmp
push
jb
iret
dec
stos
pop
cld
jp
les
in
jp
out
mov
mov
adc
and
pusha
inc
std
cmp
icebp
outsl
cmp
pop
call
addb
add
testb
call
inc
std
dec
inc
leave
leave
add
pop
daa
pop
inc
push
jb
sub
jmp
pushf
or
lret
push
mov
add
pop
dec
pop
sub
add
lock
fadds
mov
sub
or
bound
jg
jmp
add
jl
cmpl
and
add
xchg
mov
inc
cli
filds
mov
inc
dec
popa
add
pop
add
mov
push
mov
mov
inc
cs
mov
fildll
sbb
fs
add
dec
cmp
push
cmpsl
pop
test
out
incl
dec
sbb
cli
out
outsb
cli
jmp
add
daa
dec
cli
pop
push
jno
push
cmpsb
dec
push
aaa
inc
push
subl
icebp
ret
adc
andl
push
lds
jge
cmp
les
xor
shrb
push
repnz
xchg
jae
or
dec
jae
faddl
sti
dec
lcall
lret
aas
les
int
lret
jecxz
inc
pop
or
jg
push
aas
in
dec
call
adc
out
popf
add
ljmp
jg
shrb
incl
and
les
mov
dec
ljmp
xchg
and
test
call
add
test
out
pop
aaa
sub
pop
cmp
jmp
add
add
bound
mov
add
xchg
cld
daa
lods
xchg
in
fdivp
inc
call
jnp
into
aam
cmpl
push
leave
sbb
push
leave
js
es
jmp
scas
mov
call
add
add
dec
mov
lds
jmp
clc
adc
xchg
ret
cli
push
add
imul
inc
adc
xor
add
or
test
jg
sahf
jmp
inc
jmp
imul
add
mov
stos
sbb
add
testl
xor
and
xor
cmp
add
je
out
xchg
sbb
test
jle
xchg
out
mov
add
rolb
leave
loopne
jl
inc
xchg
dec
ljmp
hlt
xchg
xchg
je
mov
jecxz
sub
int3
std
mov
dec
jg
rolb
inc
sub
jle
jl
mov
dec
adc
xchg
mov
mov
inc
xchg
imul
scas
or
jns
sbb
ror
std
ljmp
outsl
add
aaa
push
push
les
jmp
mov
xchg
icebp
andb
adc
cmp
cmp
xorb
aas
cld
std
xchg
js
sub
inc
mov
testl
ss
aas
sub
movl
in
sub
push
or
add
clc
stos
jnp
enter
pushf
mov
jb
push
jo
jnp
lods
and
and
mov
or
dec
out
mov
nop
lods
sti
imul
shrb
lret
inc
dec
push
lock
cmp
addl
lret
lock
test
inc
xor
dec
pop
xor
xchg
cmp
lods
ror
enter
xchg
adc
dec
call
mov
pop
mov
decl
cmp
inc
sti
dec
outsl
fildll
cmp
sub
mov
jmp
inc
or
dec
xor
movsb
call
push
sahf
or
and
leave
repnz
jmp
shrl
jmp
xor
push
rol
add
fucompp
movl
cmp
fwait
shlb
jmp
jp
add
mov
mov
mov
cli
push
cmp
movl
cli
push
sbb
add
lods
js
dec
mov
loop
mov
add
popa
sbb
call
not
jg
jmp
jns
pusha
lea
cmp
cmpsb
cli
or
loope
and
fcmovu
cli
jmp
sub
add
push
iret
jg
roll
mov
push
stc
addl
leave
inc
push
mov
add
leave
sub
clc
cmp
ljmp
ret
ja
aas
ljmp
adc
repnz
adc
add
rclb
cmp
adc
xchg
pop
jnp
inc
or
inc
inc
cld
imul
xor
leave
and
call
pop
incl
mov
orb
aas
pop
les
psubusw
xlat
add
sti
les
jg
adc
xor
and
xchg
jmp
mov
out
inc
add
mov
je
out
sbb
cmc
xchg
aad
call
rol
iret
xor
add
add
sbb
stos
aam
fld
rorb
lock
cs
notl
pusha
mov
cmpsl
adc
shrb
dec
cmp
jp
cmpl
fists
add
cmp
mov
call
orb
sbb
cltd
cmp
jecxz
xchg
fisubrl
mov
add
pop
daa
cli
cld
ret
or
dec
xor
sbb
push
loope
icebp
mov
mov
mov
push
clc
push
push
cmp
hlt
mov
inc
jmp
inc
xor
xchg
cmpsb
xchg
in
sbbl
mov
mov
or
add
adc
or
sbb
cmp
daa
ss
in
lcall
jmp
cli
add
sub
sub
pusha
push
or
add
xor
shlb
lods
xor
mov
jbe
xor
es
add
fldl
inc
orl
jno
add
es
and
lahf
add
push
inc
mov
jl
pop
mov
jae
fnclex
add
or
inc
sbb
pop
add
jb
xchg
jl
bnd
push
inc
cli
mov
or
jmp
ljmp
mov
mov
les
testl
add
add
cmp
or
fdivl
add
fnsave
jge
dec
mov
cmp
out
leave
ds
lahf
das
mov
sub
mov
or
push
lods
xor
cld
xchg
test
jae
test
mov
insb
icebp
add
jae
loopne
lds
loop
jmp
add
mov
or
mov
sub
addl
addl
add
add
jbe
es
lock
mov
movsl
out
stos
or
loope
shl
sbb
sub
int
mov
add
iret
out
pop
leave
lret
mov
enter
in
push
leave
or
inc
mov
sarl
xlat
mov
xchg
xchg
call
inc
inc
inc
jl
imul
add
stc
std
jg
sti
sbbb
mov
shll
call
mov
jb
ret
mov
add
out
sbb
test
xor
jle
dec
rol
add
inc
pop
imul
fnstenv
roll
cld
jge
jmp
test
push
push
cmp
inc
jl
test
in
mov
add
and
add
sbb
es
call
jne
fistpl
sti
jge
sbb
bound
rcrl
fstpt
xor
xlat
push
bound
xchg
movaps
fiaddl
mov
or
aaa
push
push
sub
or
add
bound
and
mov
sar
data16
xorl
add
sub
rorb
jg
mov
pop
jg
mov
inc
add
dec
push
sbb
push
adc
dec
push
sbb
dec
push
sbb
test
and
push
std
aad
or
add
inc
push
sbb
mov
add
in
push
adc
sub
out
test
mov
lret
mov
sar
nop
inc
fdivrp
js
sbb
pop
push
xor
icebp
inc
mov
mov
insb
cmp
sarl
loop
lret
xor
sbb
les
loopne
mov
scas
pop
cmpsl
cmc
or
add
dec
into
out
mov
add
loop
aas
cwtl
loop
aas
sti
sub
sbb
adc
ret
test
jmp
add
xor
xlat
xchg
xor
jg
arpl
xchg
xor
mov
add
add
call
add
sti
jno
push
adc
jns
ret
fildl
andb
add
and
out
and
aad
add
add
mov
pop
clc
jl
out
pushf
sub
inc
ret
jo
sti
cmp
int3
sbb
sti
or
push
cltd
mov
test
cmp
jbe
pop
xor
dec
inc
out
repnz
xor
cmp
and
test
inc
inc
dec
stos
aam
push
jb
test
addl
push
bound
cld
sbb
inc
mov
lds
push
jmp
inc
aam
or
xchg
cs
arpl
mov
sbb
pop
enter
mov
or
les
jmp
fdivp
push
xor
push
push
repz
or
dec
push
inc
mov
dec
xorl
je
dec
xorl
imul
add
sbb
jg
and
pop
enter
push
lea
test
jmp
ret
outsb
popa
es
push
sbb
aas
push
adc
mov
add
push
ret
daa
adc
lods
pop
daa
xor
ljmp
jbe
in
subb
mov
inc
adc
xor
inc
pop
mov
mov
sub
nop
add
call
xlat
xchg
xor
fadds
int
leave
and
xchg
mov
dec
mov
push
decb
outsl
mov
sub
lret
push
test
loope
ret
push
dec
lds
call
xor
lea
ljmp
pminsw
addb
add
push
mov
call
add
xchg
cs
add
add
add
sub
mov
les
cmp
lds
xchg
repnz
in
mov
jmp
sbb
arpl
push
mov
out
push
xchg
xchg
jmp
fisttps
jmp
add
add
add
lahf
add
cmp
and
les
and
jg
insb
shlb
add
movl
cli
cld
adc
inc
mov
sbb
or
call
clc
and
rolb
lock
shll
call
cld
call
sbb
ds
and
fcmovnbe
mov
mov
jge
cli
add
sbb
sub
pop
std
adc
out
lds
mov
es
cmp
dec
mov
cmpl
adc
popa
dec
mov
cmp
add
cld
addb
repz
push
push
push
cwtl
mov
add
hlt
add
add
out
jge
lcall
or
add
push
sbb
in
cmpl
repz
outsb
xor
arpl
xor
push
push
sbb
mov
fidivrl
dec
lds
and
incl
add
inc
loop
cmp
and
call
dec
sub
out
inc
popf
xor
les
or
pop
add
les
leave
and
mov
adc
inc
jae
adc
mov
add
in
xor
xorb
incl
or
arpl
xchg
push
xchg
inc
mov
push
icebp
int
mov
or
stos
jmp
sub
dec
shr
add
jle
sub
dec
call
addb
add
or
movsb
fildll
sub
xorb
inc
xchg
mull
mov
enter
call
sbb
outsl
sub
jmp
mov
roll
and
not
jecxz
xlat
push
adc
add
xor
xchg
add
movl
add
fistpll
inc
call
ret
jmp
imul
cmp
cli
or
and
test
rolb
insb
pop
loope
pusha
or
inc
out
lret
xor
inc
add
jno
ret
and
lock
aas
int
ficoms
sub
lds
imul
add
leave
xchg
shll
jno
pusha
mov
outsb
sbb
lds
add
imul
add
js
add
pop
sti
push
sbb
push
xor
xor
add
push
push
and
xchg
loop
movsb
add
test
es
sub
idiv
test
pop
or
mov
add
add
fdiv
ficompl
adc
loop
push
add
jmp
dec
ss
les
decb
js
into
mov
lret
cmp
inc
inc
pop
testb
add
cmp
clc
in
leave
mov
inc
cli
mov
mov
clc
mov
sub
mov
or
mov
mov
add
add
cmp
xor
mov
xchg
les
inc
call
mov
aad
ds
ret
lcall
clc
jl
test
das
jae
sub
test
inc
dec
xchg
and
les
int3
sbb
mull
es
psrad
add
leave
or
inc
inc
fistl
sbbb
shlb
jmp
lcall
lods
shr
lret
cmpsl
call
fmuls
sub
adc
xchg
shlb
fisttpl
sbb
adc
add
rorl
gs
sub
add
sbb
xor
mov
jl
insb
xchg
mov
adc
add
add
scas
add
sub
jb
and
sub
cmp
loop
cli
insl
pop
cwtl
pop
jb
or
outsb
or
testl
add
sbb
mov
enter
mul
fildl
and
jmp
jb
xchg
pop
jp
cli
fimuls
lcall
sti
test
loop
xchg
add
or
lret
in
or
call
push
push
push
and
mov
sbb
cmpb
mulb
mov
add
sbb
call
testb
idivb
push
mov
mov
stc
fnsave
add
cmp
pextrw
pop
xchg
add
and
pushl
or
mov
add
add
add
sbb
adc
les
es
sahf
xor
test
addr16
xchg
int
call
fidivrs
shrl
je
inc
sub
push
pushl
sub
add
sub
ds
and
xchg
or
ss
add
mov
js
test
jge
rolb
les
mov
inc
sub
ja
call
add
jmp
fdivrs
rclb
xor
repz
pusha
enter
jle
and
inc
xchg
testl
and
outsb
lret
mov
jb
jecxz
les
jns
imul
add
add
and
ljmp
add
mov
cld
add
mov
scas
mov
and
jl
ljmp
sub
jmp
in
dec
leave
les
cmp
add
lds
jmp
bound
adc
or
mov
sti
mov
into
and
fiaddl
add
add
and
adc
or
mov
mov
adc
jb
add
xlat
insb
movl
add
mov
add
sub
movl
add
add
jmp
ds
push
jp
jae
je
loop
add
cli
bnd
jo
push
lret
adc
mov
imul
jmp
cmp
in
popf
or
andnps
add
jge
call
inc
mov
sahf
dec
call
popf
inc
add
cltd
xchg
add
ljmp
lods
sub
add
icebp
les
add
rcll
push
lcall
addb
push
sub
sub
add
imul
inc
out
lret
pop
lahf
xchg
and
stc
js
inc
dec
pop
add
rcll
xchg
daa
xor
jne,pn
enter
push
daa
addr16
les
call
mov
icebp
mov
sub
mov
sub
je
test
sub
add
lcall
adc
kandb
add
gs
xlat
cmc
push
insl
dec
pop
call
sub
cs
xor
add
add
fisttpll
pop
outsl
mov
mov
orb
cmc
inc
sub
jb
mov
mov
hlt
nop
sbb
mov
mov
lods
in
fwait
mov
loop
addb
add
mov
mov
stos
clc
sub
adc
add
add
add
jmp
jne
inc
add
jb
cmpsb
jmp
xchg
push
cli
insl
adcb
neg
into
cli
aam
hlt
inc
jmp
frstor
cli
cmp
mov
inc
ret
push
cli
jmp
mov
cmp
fiaddl
jno
sub
jb
xor
into
mov
cmp
dec
jmp
arpl
mov
push
mov
push
jb
mov
xlat
mov
xor
call
pop
loop
wbinvd
add
insl
or
inc
mov
mov
insl
add
xchg
sbb
add
add
dec
rolb
rcll
and
mov
add
push
and
inc
push
inc
fmulp
sbbl
inc
or
lds
add
jmp
and
sbb
ja
lcall
push
stc
test
call
cwtl
cmp
pop
out
add
jp
fsubrs
int3
insb
loope
push
scas
mov
xchg
dec
out
gs
out
stos
dec
aas
insb
repnz
inc
push
push
push
dec
fistl
lcall
sub
sbbb
stc
mov
cs
jmp
mov
mov
test
mov
enter
and
je
mov
sub
dec
call
add
add
push
ljmp
loop
rorl
add
arpl
sub
sub
xorb
cli
mov
dec
insl
push
jmp
clc
inc
mov
sub
nop
lods
insl
fsubrs
rorl
mov
sbb
faddp
cwtl
pusha
push
jmp
in
add
cmpsl
std
sub
loope
sbb
add
add
add
fwait
das
ret
sbb
jmp
frstor
mov
cltd
std
xchg
lea
dec
sbb
inc
cmp
mov
movl
mov
adc
and
jmp
loopne
dec
or
dec
lcall
out
outsl
push
jbe
pop
sbb
jmp
aam
adc
or
rolb
test
inc
dec
aas
xchg
cmp
adc
ficompl
jae
mov
pop
loop
add
add
and
mov
cld
jno
pop
add
outsl
add
xchg
addl
add
aas
inc
cli
test
push
mov
lcall
mov
psrad
cli
nop
in
add
enter
loop
test
add
adc
push
jmp
pop
sbb
inc
push
aas
jb
jmp
cs
cli
mov
hlt
subl
call
imul
add
cs
jae
xchg
mov
adc
iret
and
mul
or
mov
jb
orl
decb
inc
and
jle
cld
mov
or
les
push
imul
and
sti
mov
imul
push
and
dec
add
hlt
jmp
fists
sbb
mov
mov
cmpsl
mov
fidivrl
push
jmp
repz
imul
lea
adcb
rorl
dec
rorl
lcall
les
sub
add
adc
incl
scas
stc
pop
mov
sub
mov
iret
shld
adc
in
xchg
testb
add
repz
add
add
sarl
les
popa
std
or
xor
or
cmp
les
jmp
mov
push
add
jb
push
insl
mov
dec
push
or
shlb
sub
in
movl
and
jmp
leave
or
xchg
enter
jle
lret
rcrl
fimuls
or
add
jmp
or
punpckhwd
add
repnz
scas
push
xchg
test
call
sub
or
add
in
dec
push
xchg
jg
or
je
jle
jne
test
push
push
push
test
or
add
enter
sub
push
and
dec
std
adc
push
mov
add
dec
xor
add
mov
loopne
add
or
add
push
add
jne
or
test
dec
xchg
fsubp
xchg
adc
or
inc
leave
and
cmc
or
pop
sbb
stc
jnp
xchg
bound
push
mov
pop
mov
inc
pushf
leave
and
xchg
ljmp
cmpsl
push
imul
push
inc
data16
jae
adc
les
fadds
les
jnp
loopne
test
inc
lcall
ret
adc
jmp
lret
xchg
jg
mov
ljmp
mov
lods
repz
mov
outsl
push
jmp
or
jmp
add
add
dec
inc
inc
push
sbb
sub
inc
adc
lea
add
sub
call
inc
mov
or
movl
add
mov
mov
fildl
add
movl
cs
jg
jmp
cld
out
cmp
mov
incb
sbb
adc
inc
jmp
pop
push
pop
arpl
sub
xor
xchg
dec
cmc
or
jle
gs
inc
in
cmp
xchg
fistl
mov
add
add
aaa
pop
push
pop
arpl
mov
adc
std
je
pop
std
adc
insb
mov
jle
sbb
jle
mov
xor
in
push
dec
fs
insb
shll
insl
addb
dec
ljmp
xchg
mov
xor
mov
push
lock
sub
dec
cli
incb
add
add
sub
test
outsb
add
jne
adc
dec
push
pop
jge
ds
xchg
out
fwait
call
fisubrs
mov
mov
adc
and
jns
mov
fmull
ds
jp
mov
add
pop
push
incb
or
subb
ljmp
movsb
leave
and
add
add
or
inc
loopne
int
dec
hlt
add
out
test
and
decl
push
addb
mov
push
decl
loop
cmp
push
pop
xchg
add
mov
cmc
jmp
inc
rorb
outsb
enter
mov
fs
add
and
mov
outsb
inc
mov
add
add
add
and
popa
lods
dec
fildl
shrb
add
add
pop
iret
out
nop
jmp
pop
ljmp
insb
or
add
add
add
fwait
loopne
mov
addr16
arpl
sbb
xchg
mov
stos
and
jmp
and
int
sarl
add
add
or
add
inc
mov
lea
into
pushf
lcall
xchg
mov
jo
jecxz
jmp
in
push
pusha
inc
loop
call
inc
loop
call
push
mov
and
mov
push
and
data16
adc
movl
adc
and
and
add
add
mov
std
test
jne
xor
pop
call
or
push
pop
jmp
fdivr
inc
cli
test
cli
mov
sbb
add
jns
repnz
add
inc
mov
add
cmp
std
test
add
jmp
dec
push
insb
in
xor
push
add
dec
adc
popf
jp
and
add
add
xchg
add
repnz
bound
gs
imul
loop
mov
inc
and
mov
push
lods
add
mov
les
mov
gs
fistl
dec
push
jae
jae
xchg
loope
push
out
cmpsl
add
addl
add
mov
add
add
push
aad
and
stos
inc
mov
xlat
push
call
or
pop
inc
loop
imul
andl
adc
push
jnp
add
or
movb
loopne
pop
jmp
add
add
enter
shrb
jbe
movsb
fildll
repz
mov
inc
fmul
enter
les
test
jle
push
jmp
shlb
call
xchg
add
xchg
loop
mov
ret
mov
jge
fists
push
add
push
or
add
jmp
imul
jmp
dec
lds
add
add
mov
lods
xor
call
dec
or
mov
repz
mov
movl
jg
lds
mov
xor
jmp
cwtl
or
jmp
movsb
into
test
push
jle
add
dec
xor
jp
mov
cld
ret
add
add
add
push
mov
push
addl
jno
jge
and
push
loop
movsb
add
data16
push
push
movsb
test
subb
callw
fimuls
inc
in
jle
and
fisubrs
or
jg
add
add
add
pop
push
fs
and
aas
add
jle
and
add
add
ljmp
push
pop
mov
imul
or
and
adc
jg
push
decb
mov
decb
xor
mov
fimull
pop
fistpll
mov
sbb
fidivl
faddl
cld
jmp
shll
fwait
sbb
add
mov
xlat
jnp
adc
push
lret
loop
mov
push
int
inc
inc
loop
pop
loop
mov
loope
flds
rol
mov
ljmp
cmpsl
cltd
mov
xor
jp
ljmp
aad
fld
call
cmpl
add
add
int3
sbb
or
mov
add
add
sbb
fs
rolb
pusha
enter
mov
xchg
inc
mov
inc
cmp
call
xchg
faddl
sbb
xchg
and
incl
xor
dec
lds
dec
int
xchg
jge
pop
mov
inc
jmp
mov
addr16
cli
inc
sub
popa
adc
xor
add
scas
push
fs
jne
enter
or
je
insl
add
inc
ret
and
in
push
pop
loop
movl
push
jb
loop
push
or
stos
adc
lret
add
cli
add
sub
pop
push
mov
add
fisttpll
mov
std
adc
push
inc
push
and
add
add
ret
repnz
mov
sbb
xor
sbb
add
in
push
add
mov
xor
sbb
sbb
push
push
movsb
lods
push
adc
add
call
jl
punpckldq
stc
jmp
xchg
movsl
xchg
leave
jmp
psubsb
adc
decb
ljmp
add
add
mov
lret
mov
mov
test
xchg
out
push
pushf
addl
inc
push
lods
ss
loope
imul
adc
in
sub
call
mov
js
sbb
dec
cld
and
and
push
decl
out
adc
test
rol
xchg
addr16
add
pop
loop
jmp
loopne
jmp
add
cmp
sub
mov
repnz
jle
sub
sbb
mov
out
cmp
xchg
fs
add
test
jns
fistl
mov
sbb
in
jl
in
ret
add
enter
cwtl
cmpsl
sub
sub
nop
sub
cli
xor
dec
dec
pushl
inc
std
ljmp
in
inc
push
adc
adc
nop
xchg
mov
add
jo
push
int
inc
mov
mov
neg
les
xchg
jns
cli
pop
cli
shlb
leave
shll
test
lea
lahf
out
cmp
ljmp
aam
push
push
bound
add
add
or
inc
xorb
aam
or
lea
sbb
flds
ljmp
scas
mov
add
push
cmp
fwait
sbb
ljmp
shl
into
add
mov
xchg
adc
jp
mov
push
es
cli
cmp
add
loopne
or
insl
push
outsb
sbb
std
push
call
adc
arpl
stc
test
adc
dec
call
int3
in
pop
adc
adc
stc
ljmp
icebp
xchg
int3
fucomip
repnz
in
aam
push
lret
cmc
dec
test
lret
repnz
in
inc
fdivrs
mov
sbb
add
mov
outsl
sbb
mov
mov
in
add
mov
rcrb
xor
scas
fwait
fucomp
adcb
jbe
test
jge
insb
or
inc
jae
sbb
jnp
xlat
add
push
cmp
xor
scas
sbb
inc
xchg
add
add
aad
test
sahf
pop
push
mov
jmp
add
mov
jnp
sub
jns
lea
and
add
add
aad
inc
out
mov
hlt
mov
xchg
cld
int3
ret
xor
mov
in
cld
dec
mov
add
xor
lcall
fs
cwtl
and
cmpsl
out
lea
add
mov
cwtl
int3
dec
push
xor
fildl
xor
push
mov
and
add
es
repz
pop
movl
rorb
lea
add
xchg
popa
add
cmp
push
shlb
mov
inc
sarl
push
xchg
jbe
add
cld
inc
push
in
add
add
add
xchg
jp
add
mov
and
movb
add
pop
adc
sbb
stc
push
stos
and
xchg
sahf
and
mov
add
dec
pop
std
mov
jmp
pusha
mov
cmpsl
jmp
jle
mov
or
xchg
xchg
and
pop
ss
jo
testb
mov
dec
addl
dec
mov
loope
mov
in
mov
jle
repnz
mov
and
pop
lahf
inc
inc
cmp
js
sbb
inc
ljmp
arpl
and
arpl
add
mov
bound
adc
clc
jns
js
aas
es
xchg
xor
or
or
lds
lret
out
pop
ret
int3
or
mov
out
add
jmp
lret
gs
sub
sub
loop
dec
sub
xor
cld
imul
arpl
scas
add
sub
sub
dec
out
je
popf
pop
push
ret
cs
xor
add
in
lock
xor
loope
sbb
sbb
insb
or
jae
inc
xchg
jecxz
faddl
mov
cmp
std
call
ljmp
clc
or
and
test
sbb
sti
scas
or
enter
ret
mov
daa
loopne
push
xor
jmp
pop
in
add
dec
cld
stc
bound
add
add
pop
in
push
lea
popl
ja
psubusw
cmp
jb
xchg
mov
xchg
mov
mov
sbb
lock
movl
test
mov
inc
jmp
enter
fadds
jmp
mov
ds
sub
test
scas
adc
jmp
xchg
xchg
insl
and
jno
mov
push
idiv
ljmp
call
xchg
imul
add
mov
mov
outsl
ds
lods
mov
jns
mov
sub
xchg
jns
or
push
add
fnstsw
je
jns
call
xor
mov
push
sbb
cmp
loop
call
pop
adc
jge
sbb
xor
push
add
add
xchg
jge
shrb
add
or
scas
push
icebp
adc
mov
lcall
mov
add
mov
in
aam
dec
pop
push
in
jecxz
cmp
add
dec
and
xchg
or
mov
stc
imul
outsl
add
imul
shr
add
std
ljmp
push
test
cmpsl
bnd
add
pop
or
les
lock
sub
neg
inc
lret
push
fcmovnb
add
jb
ret
add
and
hlt
lds
rolb
sbb
push
jmp
xor
sub
xchg
mov
sbb
test
push
or
out
jmp
jp
lea
loopne
lea
add
into
sub
in
inc
test
add
lods
add
bound
clc
stc
push
stc
outsb
int3
pop
adc
xchg
mov
test
enter
jbe
add
sbb
sbb
sbb
dec
js
call
push
jg
jb
lea
sbb
es
add
push
stc
inc
lock
pushf
or
stc
adc
js
jmp
movl
mov
enter
test
leave
ljmp
add
add
inc
push
pop
mov
push
ret
mov
ss
xor
fs
jbe
jl
sbb
jnp
and
stos
mov
dec
mov
int3
aaa
jne
lret
push
add
incb
in
idivb
push
mov
xchg
cmp
stc
stc
pushl
jge
sub
add
test
xchg
mov
add
add
add
add
jge
call
add
ret
add
xchg
icebp
cmpb
cmp
sti
sbb
mov
lahf
jnp
insb
sahf
push
sti
jnp
mov
sub
in
add
sbb
add
adc
fsts
sbb
add
pop
xchg
jae
sub
in
add
add
mov
ljmp
loop
add
imul
adc
test
ljmp
add
bound
aas
add
inc
sub
hlt
div
ret
insl
sub
andb
cmp
test
cmp
data16
mov
les
jmp
push
jp
nop
aas
add
add
cmpb
mov
add
push
mov
fs
call
mov
les
loopne
push
scas
jmp
les
xor
repz
rolb
sbb
mov
cmp
hlt
sbb
inc
jmp
inc
leave
push
jb
push
add
fdiv
pop
inc
jmp
cmp
aad
pop
test
scas
inc
push
mov
sub
xchg
jnp
stc
jle
lds
sahf
pop
stc
mov
mov
mov
xchg
dec
add
call
jle
or
icebp
stc
jb
sub
mov
filds
inc
jmp
scas
or
jns
cmc
push
push
mov
adc
mov
add
add
je
test
pop
add
lock
push
and
adc
and
xchg
pop
pop
std
xor
outsb
imul
or
sbb
idiv
inc
outsl
jns
aad
outsl
jb
sbb
in
pop
add
pop
sbbl
mov
sbb
sbb
adc
add
add
xchg
lret
stc
sti
fldt
je
pop
js
les
lea
add
popa
mov
mov
push
xchg
int3
faddl
add
gs
sbbl
xchg
in
xchg
lods
fidivrs
inc
mov
in
push
add
pop
pop
repnz
and
sbb
cmp
out
inc
add
clc
mov
and
std
sti
adc
test
mov
and
inc
sbb
les
adc
or
add
cmp
push
roll
sub
mov
add
fstp
inc
les
ret
mov
cmp
jmp
icebp
divl
jo
add
popa
sbb
jmp
fs
adc
iret
pusha
xchg
lock
mov
pop
jmp
xchg
std
jae
sbb
add
or
lea
dec
mov
adc
or
cmp
xchg
leave
ret
aas
cmc
call
or
cmp
je
ret
aas
cmc
jo
jmp
mov
add
add
or
jp
mov
mov
stc
pop
sbbl
pop
adc
stc
pop
lea
loope
pop
push
jo
push
fisttpll
jmp
out
and
mov
jl
stc
hlt
lahf
incl
sub
insl
sbb
dec
push
mov
mov
leave
inc
sbb
jle
add
sbb
sub
add
add
mov
ss
je
xor
add
sbb
pusha
or
xchg
ss
call
push
repz
rclb
add
push
sbb
cmp
add
test
aaa
add
movnti
mov
test
out
lea
mov
call
les
in
inc
adc
mov
add
xchg
dec
in
loopne
add
dec
add
cli
mov
in
inc
icebp
sbb
jae
xchg
adc
stc
lret
idivl
pop
addl
push
add
test
push
push
stos
icebp
mov
push
mov
fmull
add
push
push
in
cmpsl
mov
pop
push
sti
imul
mov
xchg
mov
add
add
subb
out
xchg
add
into
mov
add
add
les
in
popa
xor
add
loopne
add
mov
cmp
in
cld
out
in
dec
pushf
arpl
mov
mov
test
js
dec
je
mov
xorl
inc
mov
daa
movsb
stc
lahf
adcl
sub
cmpb
inc
insb
xlat
add
movl
rolb
push
enter
shll
inc
add
add
dec
dec
add
add
jb
add
dec
inc
add
jb
cwtl
push
shr
or
stc
lea
repnz
mov
xchg
into
adc
fildl
push
mov
add
add
lret
mov
enter
test
jo
add
add
enter
rorb
sahf
mov
dec
lds
flds
push
cmp
push
jns
pop
inc
lods
lahf
add
dec
add
repz
xlat
xchg
inc
xor
lods
loopne
add
pop
pusha
sbb
js
out
pop
aad
lahf
add
cmpb
sbb
mov
imul
fistpl
lea
pop
call
sbb
push
jp
call
inc
push
and
outsb
ret
testl
pop
inc
pop
add
rcrl
inc
cmp
imul
imul
push
sti
mov
add
add
leave
andb
dec
call
faddl
jb
sbb
mov
pusha
imul
adc
dec
mov
pop
fdiv
cwtl
add
pop
cmp
adc
jb
mov
pop
mov
sti
mov
int3
push
call
cmp
out
push
subl
sti
xchg
cmp
add
cwtl
testl
add
add
mov
fnsave
in
mov
xchg
push
aas
jae
notb
subb
add
mov
call
xor
add
cmp
ljmp
notb
mov
mov
pop
fadd
std
out
jnp
adc
cmc
add
xlat
mov
mov
jnp
div
xor
add
xchg
xorb
mov
add
fldl
and
dec
pop
stos
pop
mov
jmp
lret
lds
pop
fiadds
adc
frstor
add
add
sbb
push
or
jnp
cs
inc
jno
jmp
mov
add
jecxz
xor
add
add
and
call
and
nop
lahf
lock
jmp
hlt
and
bound
in
jg
pop
pop
incb
out
push
cmp
cmp
push
and
inc
push
sbb
cmpb
movsl
push
std
je
cmp
inc
or
mov
add
ret
add
gs
push
dec
gs
push
dec
dec
or
or
fiadds
push
push
cltd
ljmp
dec
jns
ret
mov
or
or
addl
mov
push
push
fists
dec
push
test
in
add
adc
out
jb
out
test
push
les
les
insb
jmp
out
les
test
jmp
mov
and
add
les
add
push
fdivrp
sti
das
mov
aas
sub
out
out
pop
push
inc
mull
jb
push
cmp
add
fmull
push
lahf
jo
movsb
cmp
add
jo
pop
push
add
cmp
loopne
jnp
cld
inc
out
pop
js
sub
add
subl
repz
inc
clc
dec
pop
mov
mov
stc
les
iret
sbb
rorl
mov
inc
jle
add
add
xchg
add
push
add
in
jg
jns
fistl
cli
add
sub
mov
out
adc
mull
test
in
adc
pop
rcl
loopne
fldcw
subb
loopne
cmc
std
loopne
fldl
push
aaa
cmc
movsb
push
cmp
inc
push
fstps
dec
add
mov
push
aad
pop
push
cmc
dec
loope
gs
mov
add
pop
mov
jmp
dec
gs
cmp
sub
mov
int
loopne
sbb
fidivrs
cmp
inc
mov
add
inc
and
inc
add
mov
xchg
inc
stc
out
daa
add
lock
outsb
adc
or
add
mov
jg
dec
xor
mov
enter
dec
cmc
push
mov
std
je
adc
adc
mov
jnp
jp
push
and
push
lcall
jns
jmp
add
data16
push
jmp
pusha
das
pushf
ss
add
les
repnz
adc
lret
addl
jmp
stc
cli
sbb
add
adc
add
in
repnz
xchg
ja
inc
mov
out
jne
cmp
cmp
repz
in
add
data16
in
popf
je
mov
xchg
jae
les
push
jbe
sbb
inc
sti
or
or
add
les
xor
inc
test
mov
repz
fcoml
adc
sbb
jno
mov
fcomi
xchg
jmp
dec
rol
setae
enter
addr16
les
jmp
inc
dec
add
out
adc
jmp
stc
adcl
les
insb
loopne
nop
mov
push
pushf
jmp
icebp
les
insb
loopne
nop
test
out
add
add
ss
adc
add
push
ljmp
pop
sub
adc
clc
add
push
add
push
rcrl
add
inc
outsb
repnz
jo
cld
add
adc
subl
movsb
add
add
fstl
mov
push
popa
out
jbe
push
mov
fmull
lret
add
mov
jg
cmp
sbb
subl
sub
call
pop
in
sbb
jge
ds
xor
inc
push
adc
mov
nopl
test
xor
pop
cmp
rclb
std
adc
outsb
fwait
pusha
add
leave
pop
psubq
or
and
xor
je
or
push
fdivrs
std
lcall
adc
inc
sbb
adc
or
sub
and
fildl
sbbl
out
push
xchg
stc
jnp
mov
call
pop
fwait
xor
sbb
jp
in
movsb
icebp
je
inc
cld
dec
mov
shll
decb
sub
add
add
ret
jmp
out
mov
push
in
test
cs
or
dec
clc
xchg
jmp
jb
jne
xchg
sub
rcrb
arpl
or
test
fiaddl
ja
xchg
ljmp
fisubrs
xor
shlb
mov
or
dec
xlat
rolb
mov
gs
aad
les
mov
inc
jmp
cmp
daa
add
loope
inc
les
mov
rolb
cmpsb
sub
pop
add
std
cmc
inc
les
dec
add
inc
jmp
or
daa
add
xor
inc
les
add
stc
inc
jmp
movsb
adc
xchg
add
and
add
movsb
not
xchg
add
clc
inc
jmp
cmpsb
push
fldl
push
movsl
rorl
add
repnz
jmp
enter
pop
push
movsl
xor
inc
add
sub
and
pop
push
movsl
xor
inc
add
repnz
jmp
enter
xchg
add
inc
sub
add
add
add
mov
dec
cmp
inc
in
mov
mov
mov
dec
in
push
inc
frstor
mov
mov
cld
lods
push
inc
popf
mov
mov
mov
cmp
push
inc
insl
mov
mov
mov
dec
xchg
push
inc
insl
mov
add
mov
dec
add
les
adc
out
sahf
push
lods
mov
pop
inc
les
sahf
mov
add
add
pop
inc
les
push
push
ja
jbe
test
push
push
aas
and
fisttpll
or
add
roll
adc
lahf
iret
xchg
and
and
add
adc
js
test
cs
dec
stc
and
sbb
pushl
jne
jecxz
rorb
inc
flds
push
cld
sub
add
push
inc
inc
ljmp
add
xchg
or
add
sarl
idivl
sti
jge
and
inc
imul
jp
and
jp
and
sub
or
mov
add
or
les
sbb
les
test
inc
lret
enter
les
fs
sti
fcmovne
jo
outsb
mov
outsl
out
add
pop
xchg
ret
pop
dec
adc
arpl
test
sbb
fisubrs
push
add
cs
pop
push
leave
push
cmp
icebp
mov
out
fs
jmp
addl
jecxz
cli
test
outsb
add
scas
shlb
jmp
or
shrb
daa
ret
cmp
adc
push
and
add
andl
mov
and
mov
pop
push
lds
inc
inc
add
inc
add
jo
dec
add
xor
sbb
cmp
out
adc
rcr
and
pop
int
test
sbbb
out
adc
inc
xor
mov
dec
xor
outsl
cmp
sbb
adc
out
push
add
sub
outsl
add
test
outsb
sbb
pop
or
scas
or
or
pop
sbb
add
add
and
hlt
xchg
or
jle
mov
add
negb
lods
add
lcall
xchg
add
add
iret
add
mov
popa
push
sbb
ret
les
add
add
mov
or
jo
data16
lret
lods
adc
les
jp
loopne
sub
add
add
pop
out
mov
in
into
mov
lds
push
xchg
push
les
mov
push
adc
sbb
and
les
sbb
mov
add
add
mov
push
repz
and
xchg
inc
lds
fistl
addb
add
jmp
push
adc
inc
outsb
enter
clc
adc
andb
fildl
and
dec
addl
dec
loopne
jae
adc
clc
push
rolb
icebp
jmp
lods
cmc
adc
dec
test
jmp
leave
push
and
sbb
ljmp
push
adc
mov
aaa
jg
cmp
ficoml
dec
lds
incb
call
jnp
xchg
aas
mov
jmp
out
ret
pop
add
insl
pushf
gs
xor
stc
push
cmpsl
fisubrl
dec
push
pop
outsb
add
icebp
add
inc
orl
xor
push
or
mov
jae
loop
jp
hlt
inc
push
or
push
cmp
test
call
loop
add
mov
outsb
adc
flds
push
adc
jne
and
sbb
lock
inc
in
jge
punpcklbw
cld
lcall
mov
add
dec
mov
adc
xchg
outsl
or
pop
sbb
or
les
cmp
rcrl
in
cmp
inc
pop
jmp
add
add
add
xchg
add
test
out
dec
sbb
push
mov
loopne
add
mov
sub
sbb
shrb
xchg
hlt
push
repnz
dec
jno
sbb
aam
and
adc
pop
and
adc
xorl
xor
add
add
sub
adc
dec
dec
fisttps
hlt
shlb
mov
into
xchg
inc
jmp
test
mov
add
daa
rcr
xchg
in
xchg
lds
and
rolb
lea
ret
xor
repz
bound
add
jle
mov
movsb
cld
les
loopne
xor
fdiv
xchg
dec
push
jmp
xchg
pop
adc
mov
into
in
js
loopne
jle
xchg
pop
add
subb
ljmp
add
lahf
jae
jmp
pusha
pop
dec
lahf
movsb
pop
push
aad
into
setne
add
sbb
lea
lret
fstpl
or
test
mov
or
testl
xor
add
push
mov
in
add
mov
xor
push
jb
cmp
jnp
into
xor
pop
adc
test
sbb
lods
jl
and
fisttpll
add
out
xor
std
adc
dec
lds
in
out
adcl
dec
push
stos
sbb
add
aas
push
call
jmp
add
add
gs
mov
mov
addl
dec
sub
mov
ret
or
inc
leave
cmp
ss
add
inc
and
mov
lea
std
decl
push
adc
and
aas
push
in
push
push
clc
xlat
mov
lret
std
out
add
add
push
imul
and
jp
inc
stos
sub
cmp
sub
out
leave
rclb
mov
decb
fimuls
in
repnz
mov
mov
dec
cli
sub
or
pop
dec
shlb
pop
dec
add
notl
add
push
push
mov
add
add
add
add
aas
dec
dec
xor
or
loopne
fs
call
xor
call
sub
jmp
jbe
add
xor
cmp
loope
ljmp
xor
idivl
sub
js
cmp
push
inc
loopne
sbb
fucomp
jmp
add
add
dec
outsb
add
movl
ss
sbb
lods
stos
in
push
insb
subl
cltd
push
inc
push
mov
and
call
jecxz
push
int
dec
sbb
inc
inc
push
cltd
xlat
addr16
or
dec
cltd
outsl
mov
call
mov
outsb
or
or
in
loop
dec
push
inc
clc
cmp
dec
inc
push
inc
and
sbb
sbb
mov
xlat
add
adc
push
jl
and
loope
sbb
add
adc
sbb
std
sub
fdivrp
imul
mov
subl
fimull
and
or
mov
addl
and
or
mov
mov
add
pop
and
add
add
std
je
and
ljmp
cmp
add
jl
jo
add
shrb
push
sbb
inc
push
call
xor
das
xchg
and
add
or
sbb
push
xchg
push
mov
filds
push
faddl
add
pop
lds
sub
mov
test
fiadds
or
pusha
push
sti
mov
out
xchg
mov
mov
xor
push
in
scas
add
pop
test
ret
out
add
adc
inc
movb
in
inc
pushf
stc
xor
push
inc
shrb
add
lods
add
add
mov
outsl
les
mov
add
xor
sub
bound
test
push
sub
jmp
mov
cmp
jg
pop
shlb
xchg
and
xor
add
xor
jg
in
fstps
add
iret
lock
mov
icebp
jle
push
push
lea
and
test
lret
dec
icebp
dec
testb
add
dec
repnz
push
cmp
cmc
sbb
add
add
inc
int
test
add
inc
push
leave
mov
ds
xor
lea
lea
movl
add
jnp
xchg
mov
dec
jmp
sti
decb
int
jl
lds
jns
arpl
shr
jmp
jb
and
ljmp
add
fiaddl
dec
leave
or
test
push
mov
mov
in
fnstcw
stos
sbb
ficompl
xor
inc
lret
dec
add
dec
ret
jo
add
jle
hlt
or
mov
scas
push
mov
mov
jle
clc
dec
adc
clc
mov
dec
add
add
add
add
popf
add
xchg
pop
stc
mov
or
les
xchg
push
inc
hlt
sub
jb
les
cltd
cmpsb
ss
jnp
inc
fdivl
in
sbb
icebp
add
pop
lds
out
mov
out
mov
xchg
rcrb
push
outsb
leave
mov
add
add
in
mov
add
sarb
cs
push
inc
mov
je
mov
adc
in
scas
fldl
scas
lds
add
test
leave
xchg
xor
stc
enter
inc
jmp
cmp
rorl
inc
les
ss
fistl
jno
and
sub
fldl
les
sub
add
add
add
mov
enterw
dec
push
fisttps
mov
in
mov
jp
pop
fdivrs
or
mov
clc
clc
xor
add
xor
out
lret
hlt
add
ljmp
repz
jle
rorl
into
mov
pop
daa
sti
cs
icebp
xor
movb
sbb
adc
enter
cmp
ljmp
sub
push
sbb
call
jb
pop
add
xchg
dec
in
adc
pop
test
cmp
add
jl
xchg
lahf
outsb
callw
insb
add
sub
ds
adc
add
add
pop
daa
add
test
imul
dec
lea
clc
add
mov
mov
ljmp
mov
leave
xchg
mov
inc
shl
in
dec
add
cmpps
leave
idivb
test
faddl
add
test
repnz
adc
cmc
in
add
inc
test
pushf
or
mov
clc
pop
pop
cs
sub
les
xchg
ljmp
push
add
mov
add
gs
dec
xor
ljmp
out
add
aaa
mov
les
cld
aas
les
addb
popa
addb
pushf
pop
inc
scas
add
add
jle
jg
scas
add
jg
mov
mov
scas
add
pushl
adc
inc
add
addl
push
mov
or
add
in
add
push
fs
les
jmp
inc
rol
repz
jmp
or
add
ljmp
add
add
add
sbb
add
hlt
leave
cmp
add
jmp
jg
insb
faddp
add
mov
enter
push
pop
je
call
adc
mov
adc
add
add
add
jb
pop
adc
rolb
imul
add
add
xchg
jmp
js
add
movl
adcl
pop
xchg
mov
add
add
lods
fcmovu
movb
jmp
jmp
in
add
cmpb
add
pop
notl
fmuls
lret
xchg
add
cmp
ss
push
add
add
add
inc
test
ljmp
jmp
add
insl
testb
rorb
pop
cmp
subl
mov
xor
add
or
test
es
mov
or
add
push
ret
ror
test
sub
dec
push
shrb
les
or
les
add
aas
sub
or
add
orb
addl
jnp
sub
add
test
mov
scas
add
inc
decl
lds
pop
add
scas
add
into
lds
xor
rclb
cmp
add
std
cmp
add
add
lods
add
mov
lods
add
out
lret
add
mov
enter
test
dec
sti
les
xor
lahf
add
jmp
hlt
xchg
lretw
mov
adc
jbe
ljmp
push
clc
push
mov
shr
rorl
jmp
or
insb
call
movb
sub
ljmp
add
jmp
dec
jmp
sbb
jmp
add
sub
push
je
jmp
add
icebp
xchg
lods
test
sahf
sub
lea
push
add
adc
mov
mov
mov
push
mov
mov
push
incb
add
add
adc
mov
outsl
mov
push
out
cmpb
push
sbb
shlb
inc
cmp
xchg
add
push
xlat
xchg
mov
add
push
pop
cmpsb
add
das
ret
pop
pop
cmpsb
ret
push
add
cmp
mov
faddl
add
cmp
dec
scas
insl
dec
push
xchg
mov
push
ficoml
and
cmc
cld
adc
and
jl
xchg
out
add
push
mov
and
or
push
sbb
mov
add
push
call
adc
aas
ds
inc
test
sbb
add
push
pop
sub
lret
ret
dec
push
cwtl
cwtl
enter
add
out
incl
inc
es
xchg
xor
add
add
xor
fistps
and
int3
adc
inc
out
dec
push
in
bound
sti
xor
add
mov
mov
shr
mov
in
inc
pop
std
or
inc
mov
aas
add
je
cs
rolb
popa
lret
xor
les
test
scas
add
add
add
mov
inc
movl
sbb
pop
dec
lods
xor
out
mov
jmp
bound
adc
inc
rclb
inc
cld
jmp
sub
push
sbb
add
imul
xor
pop
lods
pop
sub
dec
or
pop
in
out
repnz
cmpl
add
dec
into
test
sbb
push
imul
or
add
add
add
add
lods
jle
or
or
xor
xor
jge
andb
ljmp
jae
stc
xchg
test
ret
xchg
or
movsb
enter
fcoml
shrl
pop
outsl
in
adc
sub
xor
or
sbb
mov
add
xchg
add
add
push
jg
enter
pop
push
lds
out
or
mov
cmp
xchg
sbb
or
and
xor
cmpxchg
pop
xchg
add
cmp
jmp
cmp
dec
mov
out
mov
mov
fisttpll
imul
enter
cvtdq2ps
cmpb
add
add
daa
inc
add
jmp
or
mov
leave
cmp
nop
cmpb
mov
std
add
or
lahf
int3
std
cmp
jmp
push
ret
outsl
jnp
les
and
les
and
iret
and
les
les
and
in
and
int
les
and
les
and
les
ds
jmp
les
les
les
les
fisubl
lret
sbb
les
sub
inc
push
inc
mov
ret
jmp
mov
ret
hlt
jae
jnp
jmp
inc
xor
cmp
xor
cli
add
or
mov
add
and
fldcw
fnstenv
aam
rcrb
je
call
pop
ret
jo
gs
lea
out
ljmp
cmp
add
mov
or
faddl
push
mov
loop
adc
cli
testb
bound
loopne
iret
out
mov
xlat
cmc
inc
inc
movl
or
sarb
add
add
in
pop
aas
mov
add
push
or
mov
test
mov
mov
call
mov
mov
dec
test
divl
adc
test
jle
lds
or
mov
jmp
repnz
stc
jae
add
add
xorl
push
adc
inc
call
jae
jle
xchg
push
add
in
int3
add
loopne
clc
lcall
inc
add
fcompl
test
int
cmpxchg
jbe
stc
add
inc
sbb
outsb
xorb
test
xor
and
ds
cmp
jg
sarl
or
cmp
icebp
adc
cld
inc
mov
or
roll
add
push
out
adc
push
push
sbb
add
cmp
mov
xor
test
add
movsl
sub
and
lods
add
jmp
inc
mov
or
les
or
sbb
insl
or
sub
add
lods
lret
inc
lds
add
test
test
shl
pop
rorl
xchg
mov
pop
xlat
mov
lret
fwait
sub
lret
sub
adc
sahf
test
inc
sub
mov
ds
mov
add
or
ret
sti
addl
add
std
arpl
mov
icebp
popa
bound
js
fimull
mov
mov
je
inc
mov
gs
or
xchg
mov
cmp
in
cmp
repz
repz
add
lds
pop
iret
mov
add
ljmp
push
pop
ret
lds
inc
mov
pop
in
int3
adc
call
inc
push
cs
mov
popf
leave
mov
imul
arpl
sbb
lds
jmp
sub
sub
cmp
cmc
dec
sub
or
mov
adc
shlb
mov
jmp
lds
inc
mov
outsb
jecxz
inc
adc
inc
add
jno
sbb
dec
inc
push
cli
aam
sbb
movl
and
std
rol
orl
sbbb
shll
lds
pushf
adc
out
std
shr
leave
outsb
or
aas
adc
xchg
hlt
inc
cmp
test
add
cmpsb
inc
push
sbb
dec
push
adc
mov
push
test
sti
and
sub
or
leave
add
or
jle
pop
pop
cmp
jg
mov
inc
leave
or
jle
shl
xchg
test
xlat
adc
xchg
test
hlt
daa
sar
xchg
sub
je
ss
adc
bound
repnz
add
aaa
dec
and
and
je
daa
pop
and
aaa
pop
adc
cmp
aas
arpl
rolb
add
dec
insl
dec
xchg
lret
aad
add
or
shrb
inc
adc
mov
pushf
add
pop
jp
pop
jg
enter
stos
outsl
mov
add
jmp
test
pop
stos
mov
ljmp
mov
jmp
jmp
push
pop
roll
ljmp
or
add
add
adc
repnz
test
mov
xor
rol
cs
lds
mov
mov
sbb
and
out
mov
jne
add
inc
mov
lock
add
add
add
add
stc
pop
pop
add
lods
stc
mov
add
add
adc
out
inc
and
ss
mov
add
mov
jmp
and
dec
pop
adc
adc
adcl
das
sti
mov
mov
cld
mov
out
pop
stc
aas
mov
ret
std
lcall
test
jmp
in
sbb
push
jmp
push
push
or
pop
or
add
test
mov
add
and
jp
or
push
push
adc
pop
idiv
mov
aas
stc
jg
or
pop
cmp
cmp
addl
add
orb
test
outsb
std
jmp
clc
unpcklps
idiv
cli
enter
pop
ret
addl
or
add
xchg
lock
push
push
bound
dec
and
mov
pop
int3
pushf
add
dec
sbb
add
test
pushf
inc
pop
add
and
sbb
add
nop
loope
ret
and
std
mov
mov
insl
jns
mov
or
push
fstpt
mov
rclb
jne
xor
fadds
add
in
dec
call
sarl
dec
ret
pushf
add
add
out
sub
les
add
lods
cwtl
push
popf
sub
les
js
lret
sbb
pop
sub
adc
add
test
jecxz
stos
mov
loop
mov
pop
fs
mov
dec
ljmp
subl
inc
into
daa
mov
outsl
subb
insl
mov
adc
mov
lods
imul
lods
call
mov
add
dec
push
dec
add
mov
jmp
add
inc
or
add
inc
call
add
test
nop
xor
out
push
clc
push
stc
clc
imul
add
add
or
test
pop
ficoms
cmp
inc
dec
test
mov
adcb
add
loop
mov
imul
push
add
test
out
sbb
jge
std
popf
into
sbbb
or
sub
imul
add
sbb
pop
xor
xor
sti
repnz
jle
faddl
add
add
add
dec
mov
pop
pop
cld
inc
outsb
xchg
lods
or
sub
or
pop
call
les
stc
arpl
imulb
push
mov
add
add
icebp
jmp
cld
test
push
pop
add
imul
add
jp
adc
lret
mov
data16
cmp
dec
adc
add
add
xchg
mov
aaa
cld
mov
loopne
pushf
add
jmp
cmp
int
int
or
pushf
add
bound
loop
or
es
push
popf
daa
mov
stos
sbb
and
mov
inc
lds
mov
or
pop
add
sbb
cmp
dec
mov
les
lea
adc
and
cmpl
call
into
cmpsb
lea
aad
mov
cli
cwtl
ret
cmpsb
fisubs
loopne
ret
and
fcomps
mov
repnz
mov
jo
add
mov
mov
adc
sub
add
outsb
mov
adc
loopne
xchg
lahf
xchg
test
add
cmp
mov
das
mov
xchg
lock
shll
cld
adcl
outsb
xchg
push
pop
into
add
or
push
adc
scas
stc
out
mov
out
inc
cld
pop
les
sbb
mov
ret
hlt
arpl
por
int
add
sti
or
mov
mov
or
inc
xchg
cld
jle
test
ljmp
push
dec
push
or
incl
jmp
in
incb
jmp
mov
add
test
cmp
stos
out
add
xor
mov
aad
outsb
and
jae
gs
jle
adc
add
jecxz
ljmp
adc
movsb
addr16
push
out
pop
dec
mov
addr16
push
in
pop
inc
mov
addr16
push
rcrb
push
inc
outsb
xor
cmc
sub
cmc
sbb
mov
dec
je
cmp
add
out
clts
push
les
stos
loopne
mov
adc
inc
xchg
adc
or
add
test
jo
scas
sti
inc
in
addl
add
enter
xchg
or
mov
xchg
sbb
mov
push
scas
lds
adc
inc
sub
push
mov
rcll
adc
pushf
test
shll
or
jne
adc
pushf
test
mov
push
int
add
test
add
add
add
imul
add
out
ret
stos
mov
int
mov
add
add
or
aas
stc
push
sbb
test
scas
mov
bswap
pushf
xor
in
add
jecxz
les
cmp
mov
mov
sbb
add
add
test
adc
push
lds
fwait
mov
dec
lock
jmp
xchg
lds
roll
add
mov
fstl
in
cmpsl
inc
popf
dec
je
movl
jae
or
add
std
inc
adc
sub
int3
leave
sbb
imul
popf
push
cmp
movb
lods
sub
add
add
adc
inc
popf
push
sbb
movb
lods
sbb
or
fs
add
inc
sahf
push
fimuls
jmp
mov
cmpsl
fstl
clc
add
loopne
pushl
mov
mov
sarb
dec
lds
imul
dec
sub
leave
call
xchg
dec
add
add
std
mov
add
add
insl
jb
je
mov
and
jno
je
xchg
or
jge
mov
jmp
cwtl
mov
push
movsl
dec
cmpb
mov
mov
flds
test
decb
inc
adc
sti
push
sbb
inc
fdivrs
sub
loope
dec
hlt
mov
pop
xor
adc
cs
std
dec
jmp
xchg
test
andl
xlat
fwait
or
lods
add
jg
or
in
push
mov
and
xchg
test
or
xorb
scas
loope
push
sbb
push
mov
mov
add
sub
jnp
call
mov
dec
ljmp
test
mov
mov
adc
mov
filds
push
dec
ljmp
nop
sub
rorb
add
jns
data16
es
lods
sub
mov
int3
mov
mov
pop
loopne
add
add
pop
aad
aad
add
xchg
inc
cltd
xchg
push
or
pop
add
loope
mov
add
mov
mov
xor
or
or
adc
xchg
stc
push
dec
cltd
or
dec
inc
std
push
arpl
xor
or
jecxz
popf
stc
jae
hlt
sbb
cmp
add
mov
add
add
cmp
or
pop
add
ficoml
jmp
and
repnz
xchg
jb
stc
lds
add
or
inc
sahf
test
outsl
stos
jge
gs
call
jmp
stc
jg
add
and
adc
inc
outsb
test
outsb
adc
mov
stos
pop
push
push
int
ljmp
andl
add
jb
inc
cs
push
add
cli
ljmp
lea
jno
pushl
push
adc
push
dec
and
mov
std
mov
out
add
fdivs
sti
mov
add
mov
jle
pushf
xor
xchg
xor
add
xor
idivl
jl
test
test
mov
add
add
lock
mov
les
add
lret
adc
cmpsl
or
jmp
subb
add
sub
notl
test
dec
loopne
test
shll
push
and
mov
cmpsb
ret
sti
call
add
mov
in
iret
xchg
jne
cmp
cld
dec
iret
js
lahf
mov
call
inc
cmp
pop
iret
mov
mov
sahf
and
or
jno
cmp
pop
push
xor
mov
sahf
call
orl
cld
dec
ja
stos
das
mov
add
cmp
mov
sahf
mov
ljmp
fildl
xchg
cwtl
add
lods
sub
adc
push
pop
sub
loope
jmp
outsl
mov
cwtl
test
movsb
test
adc
int
sub
test
lret
fcompp
dec
adc
and
stc
and
mov
mov
or
in
xor
fldl
push
lret
add
add
and
adc
scas
test
xor
cmp
lahf
jle
out
or
mov
add
test
test
outsl
std
mov
cltd
jle
fld
add
ss
sti
lea
std
push
push
xor
jb
xor
jo
inc
leave
or
les
sub
xor
sub
add
dec
movl
sbb
hlt
ret
pop
xor
dec
and
sbb
sub
movsl
sbb
rol
sub
adc
in
xchg
cmp
xchg
js
ret
jl
xchg
leave
or
roll
popf
mov
cmpsl
push
adc
xchg
cmpsl
mov
fdivrs
movsb
das
xchg
or
jns
je
push
sub
dec
imul
cld
mov
stos
adc
pushf
loope
hlt
stos
subb
mov
shl
jmp
xchg
xchg
and
inc
or
cli
lcall
dec
lea
cld
dec
xor
lcall
inc
das
mov
lods
mov
adc
outsb
ret
scas
int
clc
dec
inc
in
lcall
in
inc
mov
test
or
add
pushl
jle
xchg
xor
fstl
repz
fistps
inc
sahf
cmc
clc
inc
js
icebp
imul
das
roll
stc
jmp
add
adc
lods
push
in
movl
lock
scas
or
fisttpl
shrb
call
stc
fimull
push
fstl
lahf
stc
fnsave
inc
call
sub
push
bound
scas
ret
ljmp
shlb
popf
stc
bound
stc
add
add
test
adc
test
pop
addl
les
mov
sbb
push
call
ret
addr16
pusha
in
add
ljmp
add
mov
xchg
sbb
fiaddl
xor
push
call
or
insb
stos
ljmp
ret
addb
add
add
outsl
pop
je
test
and
test
add
lods
bnd
dec
push
std
xchg
lock
add
mov
nop
aas
or
sub
add
scas
or
push
add
pop
pop
sub
add
lods
jl
mov
int
sti
mov
and
xchg
adc
or
cmpsb
sti
jnp
cmp
inc
stc
mov
sub
pop
insl
fwait
cmpsb
sti
push
out
add
push
and
or
in
aas
loopne
jno
cli
mov
stc
mov
add
mov
pop
xchg
mov
sti
mov
ret
jmp
dec
sub
in
cmp
jecxz
adc
sti
jp
or
rorl
movswl
test
xchg
xchg
xchg
jo
xchg
or
jle
pusha
movsb
sti
sbb
jecxz
shrb
push
xchg
inc
js
icebp
pop
enter
sti
loope
bound
jg
mov
mov
sbb
lea
imul
add
and
or
stc
fiadds
push
std
inc
and
or
lods
cmp
ret
xor
out
or
nop
lret
sahf
inc
dec
adc
mov
jmp
rolb
pop
mov
ljmp
stc
mov
imul
jg
imul
js
add
adc
jmp
cmpsl
aas
adc
add
nop
and
les
call
addl
push
sbb
lods
orb
pop
mov
cmc
loopne
data16
jecxz
or
test
or
mov
adc
dec
ret
jmp
mov
sbb
mov
xchg
jle
xchg
mov
into
adc
shlb
addb
add
jp
test
mov
jno
pop
dec
xchg
or
mov
or
mov
xchg
sbb
pop
jnp
test
sub
sbb
ja
sti
or
jmp
cmp
les
cmp
les
cmp
in
cmp
les
jmp
cmp
les
repz
les
hlt
cmp
les
repz
mov
sbb
test
add
cld
rclb
add
lahf
sar
add
jmp
add
cmpsl
rcl
add
cmpsl
rol
add
lahf
shlb
add
add
mov
add
fcom
mov
sbb
icebp
add
insb
call
flds
fs
insb
rolb
fwait
xchg
rolb
cwtl
rolb
xor
rolb
mov
jl
add
pop
rolb
rep
rolb
mov
rolb
sbb
add
add
iret
add
sub
add
stc
iret
add
sbb
add
adc
add
pop
rolb
bound
rolb
lcall
add
iret
add
iret
add
roll
add
roll
cmp
mov
jae
xchg
iret
or
cli
push
add
lret
pusha
fs
hlt
fiaddl
int3
pop
add
outsb
and
mov
outsb
sbb
popf
pop
clc
cmc
sahf
test
add
jl
or
inc
push
and
outsl
add
das
mov
pop
les
rolb
adc
xchg
jae
adc
adc
mov
je
pop
mov
or
fsub
les
dec
push
sarb
leave
fisttpl
mov
push
les
jmp
add
add
add
stos
jmp
dec
jns
inc
mov
sbb
les
lods
xchg
insl
aas
cwtl
xchg
sbb
lcall
jbe
in
aaa
xor
xchg
adc
mov
xchg
adc
inc
or
jae
sbb
shr
add
out
adc
jg
cwtl
adc
mov
cli
inc
pop
fiadds
mov
add
add
adc
ret
or
enter
and
xchg
add
add
ljmp
aas
or
out
pop
enter
out
lahf
mov
daa
cmp
dec
inc
jmp
cld
out
jl
lods
fcomps
daa
sub
stos
fists
nop
loope
push
xchg
xchg
or
lret
xchg
mov
pop
inc
jmp
or
push
popf
out
add
stos
inc
jecxz
sbb
test
mov
add
cli
xchg
pop
or
sub
icebp
xor
jmp
mov
pextrw
xchg
into
add
sub
mov
cmp
mov
xchg
cmp
push
mov
sub
clc
aam
incb
inc
adc
fldl
add
add
sbb
mov
out
stc
add
mov
adc
adc
shl
mov
shrl
stos
rolb
push
push
add
add
inc
testb
add
fsubrs
push
jo
or
xchg
xor
rorb
outsl
pop
out
cli
test
std
divl
popf
or
push
mov
ret
push
sub
xor
incl
jge
and
lods
shll
mov
and
xlat
adc
jns
add
idiv
xor
jo
aad
jl
cmp
hlt
or
les
fdiv
push
push
daa
add
lahf
pushf
jne
out
xor
cmp
inc
add
popf
repz
mov
call
dec
pop
cmp
sbb
mov
adc
add
mov
cli
cmp
out
mov
add
inc
les
add
je
push
or
inc
pop
add
jle
sahf
insb
mov
roll
out
aas
les
mov
fldcw
push
xor
arpl
mov
jle
pop
sub
cwtl
shll
lahf
or
add
jmp
lods
sbb
add
icebp
data16
jb
mov
shrl
iret
or
lahf
add
stos
adc
push
iret
pop
pop
cmpsl
add
mov
iret
jecxz
lahf
add
add
add
add
add
mov
lds
jmp
shrl
add
xchg
adc
add
jmp
ss
xchg
sub
popf
pusha
xor
add
stc
scas
divl
stc
cld
daa
cld
inc
jmp
imul
xor
mov
jb
push
dec
inc
push
sarl
cmp
jg
call
fisttps
ss
add
add
and
jmp
scas
and
jmp
mov
add
sbbb
addb
dec
loop
add
js
sbb
stc
cld
cli
jge
test
add
faddl
cmp
add
in
inc
lods
pop
push
cmp
mov
mov
add
add
gs
insl
das
in
add
orl
jo
lock
or
add
sbb
inc
sub
add
cmp
lcall
add
push
cmc
aas
les
movsb
sbb
sahf
add
aas
xlat
jmp
stos
les
hlt
aas
les
sbb
lahf
cmpsb
lcall
add
les
add
sti
mov
xchg
jns
les
add
pop
add
lock
aam
mov
les
nop
lahf
sub
cmp
pop
mov
add
sti
aas
into
xor
les
stos
add
shlb
stos
add
cmp
mov
dec
scas
xor
shl
in
xchg
add
jmp
jmp
inc
jmp
xor
iret
mov
lea
les
icebp
inc
les
sub
test
imul
jge
mov
add
addl
jle
adc
mov
lret
rorl
add
cmp
push
shrl
clc
xor
lret
mov
inc
ret
les
add
stc
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
xchg
sbb
pop
xchg
adc
enter
movl
adc
xlat
roll
lds
add
add
push
loop
loope
pop
add
add
jl
push
repnz
loope
sbb
js
xchg
sub
aad
or
lret
es
jle
stc
push
ljmp
pop
xor
xor
mov
add
std
jmp
cltd
jg
ret
fstpt
ljmp
hlt
psubusw
push
jmp
addr16
inc
aam
shlb
xchg
out
pop
adcb
sti
mov
out
call
inc
das
sbb
aas
jb
imul
in
fildl
add
test
rclb
add
sbb
imul
xchg
adc
inc
scas
add
xchg
sub
xor
xor
aas
cmp
rcr
out
aas
notl
dec
scas
adc
dec
add
ljmp
test
sub
add
dec
and
std
scas
jbe
into
outsl
lret
jge
jecxz
movb
add
jbe
divb
vmovq
out
ljmp
test
das
mov
ljmp
add
mov
mov
push
aaa
mov
les
call
loopne
gs
adcl
sbb
clc
pop
lods
cli
add
mov
jmp
jb
mov
insb
cmp
add
pusha
out
dec
push
mov
mov
aaa
icebp
in
fmull
repz
jle
cmc
adc
push
xor
ret
addb
add
add
pop
int3
or
mov
jle
or
flds
pop
out
add
mov
lea
mov
movb
ds
jmp
add
add
jmp
add
push
lea
or
or
lea
xchg
std
mov
or
push
cmp
inc
add
pushf
ds
pop
lds
sbb
sbb
inc
sbb
dec
pushl
cmp
push
or
sbb
add
mov
je
add
fsin
shr
out
cld
jmp
lcall
nop
lods
or
xchg
ret
cld
adc
mov
pop
or
pop
mov
add
mov
pop
clc
inc
loop
mov
mov
push
sbb
inc
loopne
jbe
call
data16
call
daa
dec
and
out
inc
cmc
sbb
in
and
add
xchg
add
add
ja
add
das
sbb
shl
jmp
pop
push
sub
adc
ljmp
test
mov
or
aad
fsubrs
sbb
repnz
mov
pop
pop
fbld
stc
inc
push
sbb
jmp
sti
fidivl
pushf
inc
pop
lds
cltd
lea
and
add
add
adc
cltd
cmp
push
loopne
fiadds
les
inc
out
or
add
outsl
in
dec
pop
fs
les
js
mov
add
xchg
xor
sti
ret
lods
mov
jmp
test
insl
repz
clc
icebp
pusha
aas
push
add
pop
or
je
sub
xchg
jnp
add
fdivl
ja
pop
in
pop
lea
mov
add
ffree
cs
push
fmulp
add
cmp
xchg
cmpsl
add
movsb
jmp
insb
push
push
shlb
enter
add
pop
pop
jg
lods
dec
andb
add
xchg
ds
add
xchg
add
movb
mov
add
insl
xor
adc
fiadds
lea
add
pop
jle
jge
lcall
jb
push
pop
pushf
inc
scas
add
sub
inc
push
call
aaa
jb
add
xchg
punpcklbw
roll
test
std
in
rcll
push
popw
or
enter
add
add
xorl
roll
pop
out
movsb
inc
or
std
cli
sbb
int
xor
add
js
inc
outsb
add
push
push
and
out
les
clc
inc
in
cmovae
xchg
mov
add
xchg
cmp
xchg
movl
xlat
cs
push
arpl
push
lcall
xchg
popf
mov
out
add
add
add
subl
adc
jmp
les
ret
add
iret
rcll
add
jmp
xor
add
pushf
stos
sub
dec
lods
sti
dec
shll
ret
popa
arpl
sub
sbb
mov
repnz
mov
or
jne
xchg
jns
insb
mov
les
and
dec
fnstcw
int
jle
stc
sarb
add
adc
cs
out
test
jmp
and
cmp
ss
or
xchg
imul
jmp
repz
outsb
add
or
or
rolb
cmp
mov
testb
dec
mov
mov
ljmp
repnz
and
xchg
rolb
adc
mov
shll
call
pop
jb
inc
shrl
jp
pop
push
in
add
fldt
mov
push
adc
imul
lods
add
leave
push
xchg
add
pop
and
push
jns
insb
or
sbbb
je
clc
dec
and
stc
lret
call
xchg
jg
dec
shrl
jnp
std
mov
sahf
movl
inc
inc
add
sahf
cs
in
add
sub
add
mov
shrb
addb
ret
cmp
inc
add
je
ss
sbb
jmp
cmp
in
icebp
push
or
xor
aas
xchg
les
lea
hlt
mov
rcrl
das
or
mov
adc
sbb
out
cs
decl
jl
int3
cmc
inc
and
iret
adc
repnz
scas
add
add
stos
fstps
inc
sub
adc
les
scas
fbld
add
cmp
pop
add
fwait
fwait
popf
icebp
ljmp
leave
push
call
call
icebp
ljmp
arpl
test
adc
out
outsb
mov
les
xchg
xchg
add
jmp
adc
or
sti
inc
aad
xor
mov
fistl
mov
call
cli
mov
test
das
aas
loope
add
lods
sbb
add
idivl
rolb
add
sbb
sbb
in
testb
mov
sbb
cmpl
movb
nop
cmp
movl
add
inc
adc
pop
push
mov
fadds
jmp
clc
cmp
fildl
push
lea
sbb
add
fnstsw
push
pop
and
pop
jg
add
sub
dec
xchg
ss
mov
cld
adc
jbe
push
cmp
sbb
sub
setp
or
mov
add
mov
mov
or
shlb
and
and
popf
std
mov
outsl
insl
add
lock
push
addr16
push
popf
add
or
lods
dec
je
cmp
lds
inc
inc
jle
std
adc
jmp
or
fs
loopne
sbb
lds
add
aas
mov
jmp
xchg
lds
pop
je
les
sbb
test
or
and
dec
xchg
xchg
fistpl
mov
pop
mov
adc
add
pop
dec
mov
adc
adc
jno
cli
ror
sti
hlt
imull
fisubs
inc
dec
arpl
inc
jecxz
in
xlat
add
add
dec
inc
iret
das
inc
lret
dec
mov
std
ss
pusha
rcll
push
or
jl
stc
fldl
push
ret
or
dec
loop
rcll
push
push
adc
inc
mov
xchg
ljmp
popa
insb
lods
xchg
lock
in
ja
sub
push
std
pop
jg
arpl
add
je
dec
jnp
xchg
add
add
pop
jmp
dec
and
add
mov
pop
inc
inc
add
dec
sub
jmp
inc
pop
jg
sub
jg
mov
sbb
movl
add
jle
add
fistpl
xchg
movl
dec
je
sub
cltd
xor
sbb
push
dec
inc
or
push
add
cmp
sbb
add
outsl
in
dec
in
in
pop
shll
jmp
loopne
ret
dec
add
jmp
xor
lret
ja
lds
int
rcrb
add
dec
stc
imul
push
and
dec
lock
stc
mov
sub
push
stos
sbb
adc
das
mov
call
nop
pop
stc
lcall
push
js
push
add
push
mov
lcall
pop
or
loope
sub
stos
lods
ds
pop
xchg
push
xchg
push
xchg
dec
loope
adc
les
lcall
jg
cmp
rol
xorb
test
call
lock
out
push
scas
pop
fsub
sub
adc
lret
test
sbb
add
pop
scas
add
push
movsl
adc
fcoms
or
mov
mov
pop
add
jne
vmwrite
repz
adc
and
ds
ret
mov
add
jmp
les
add
mov
jmp
dec
js
xchg
push
jmp
jecxz
and
mov
add
pop
jns
add
jmp
dec
inc
loopne
in
add
sbb
ljmp
add
jmp
mov
ljmp
jmp
les
jmp
jo
loopne
jmp
les
orb
add
or
add
xchg
sti
mov
pushf
or
xor
sbb
int
aad
gs
std
add
aad
gs
add
aad
and
adc
shll
mov
iret
packssdw
je
and
ds
add
nop
pop
push
fucompp
mov
xchg
out
stc
popf
sti
push
ret
add
pushf
xor
sbb
jns
add
add
lds
cmpl
xchg
divl
add
aam
pusha
add
add
out
mov
fldt
icebp
jge
mov
pop
xchg
std
je
adc
rcr
pop
negl
insl
roll
sbb
pop
cmpsb
les
mov
or
ss
jp
in
inc
mov
add
ret
jmp
shr
mov
add
jmp
subb
jecxz
pop
xchg
je
or
je
and
adcb
mov
jb
mov
das
lahf
jbe
jmp
or
xchg
push
push
jg
or
dec
popf
and
lea
add
add
pop
xor
enter
lcall
fnstsw
les
or
jp
pop
add
cmp
aam
inc
jnp
and
negl
roll
rcrl
add
pusha
lock
insl
shlb
test
xchg
xchg
add
push
adc
imul
out
loope
ljmp
shr
inc
inc
insb
lds
aaa
enter
xchg
cmpsb
add
into
test
scas
sarl
in
add
dec
inc
inc
push
test
in
fmull
inc
mov
inc
in
fisttpl
subb
lods
pop
jb
pop
icebp
add
add
mov
js
imul
lahf
enter
adcl
xchg
outsl
sysexit
rol
add
or
enter
ret
xchg
fisttps
mov
frstor
fcoml
inc
jmp
dec
roll
repnz
sbb
sti
inc
jmp
dec
roll
jle
lock
daa
jmp
jmp
inc
jo
push
pop
inc
outsb
clc
inc
cli
mov
add
add
rorb
call
stos
mov
call
outsb
jp
xor
in
push
call
and
ret
rcll
out
xor
mov
add
mov
flds
ljmp
hlt
testb
dec
push
push
jp
xor
jmp
jp
adc
mov
and
test
or
stos
jns
sub
les
xlat
pop
push
aas
or
fildll
adc
sbb
push
xchg
rorb
xor
push
insl
sub
inc
jp
les
add
dec
inc
inc
mov
pop
inc
inc
mov
pop
data16
add
add
incl
and
sbb
call
xorps
mov
and
lds
or
arpl
cmp
xor
je
add
sbb
push
pop
and
add
and
add
add
xchg
push
sbb
jnp
add
ret
xchg
jnp
add
mov
add
inc
sar
sub
and
add
pop
inc
aas
movaps
les
insl
ljmp
imul
add
fisttpl
faddl
rorl
add
push
jmp
inc
ret
sbb
add
jecxz
ret
pop
push
pop
pop
insb
xor
push
cmp
or
idivb
ljmp
inc
pusha
push
ss
jo
leave
add
jns
outsb
xchg
jmp
outsb
adc
push
sar
cltd
lea
lret
xchg
push
stc
sahf
jno
mov
xchg
jecxz
and
in
stos
call
sbb
jle
xor
insb
or
in
lods
in
insl
outsb
in
std
insl
cli
outsl
pop
testl
cmp
mov
add
cmpsl
push
add
and
and
inc
and
inc
mov
xor
mov
icebp
addb
test
push
adc
loopne
pop
and
jp
or
adc
xchg
add
dec
mov
stos
push
mov
add
int3
jae
addl
pop
sahf
shl
movsb
cmpsb
stc
mov
add
add
pop
pop
scas
lds
ret
jns
les
lcall
mov
cs
push
popf
add
and
pushf
add
or
mov
jecxz
and
push
mov
xor
inc
inc
jmp
xlat
lock
dec
xor
mov
jecxz
roll
add
insb
insb
aad
sbb
ljmp
inc
jmp
xchg
xchg
loop
les
shl
jne
add
mov
rcll
daa
xchg
data16
je
xchg
into
ret
jmp
xor
pop
jmp
cmpsl
or
je
mov
out
pop
mov
gs
inc
xor
arpl
out
mov
aaa
test
cmp
repnz
jle
jno
fimull
cld
cmp
inc
inc
and
mov
sbb
xchg
sub
hlt
dec
and
lds
sbb
lret
mov
add
cli
popa
xlat
pop
test
xorb
jmp
lock
ljmp
mov
mov
inc
loopne
jmp
andb
fmuls
dec
in
test
jmp
xor
dec
add
or
add
or
dec
lock
add
shrl
jp
lgs
or
test
or
test
les
jae
jecxz
and
xlat
jb
movsb
dec
or
inc
sbb
add
add
sbb
cmp
jne
dec
xlat
jb
stos
std
or
rclb
cmp
jb
adc
add
mov
and
out
cmp
adc
add
mov
sti
incl
fistpll
cld
fmuls
push
sbb
insl
adc
add
push
in
pop
add
add
data16
les
sub
push
outsb
adc
jb
add
das
mov
out
xchg
jmp
jnp
repz
lea
enter
sub
add
add
ljmp
mov
cmp
les
push
js
xchg
sbb
inc
rcrb
adc
inc
mov
stc
dec
pop
in
pop
lcall
sti
add
xchg
push
cmp
add
jb
das
add
jns
dec
sti
addb
bound
push
inc
cmpb
lahf
daa
aam
push
rcl
mov
jae
ljmp
add
divl
add
or
ljmp
add
add
insl
ljmp
push
jne
les
xlat
push
add
into
sbb
mov
sub
adc
jge
mov
sub
mov
inc
and
insb
push
call
ret
pusha
add
add
and
add
add
inc
icebp
mov
or
mov
mov
pop
fstps
add
sbb
inc
movl
sbb
lds
xchg
adc
stc
jmp
inc
in
or
outsb
add
jae
push
ljmp
adc
cmpl
pop
loope
add
lret
add
or
cmp
fstpt
push
jo
or
rorl
sub
or
shlb
push
out
dec
add
pop
lahf
or
mov
sub
push
cmp
cli
cmp
pop
jae
data16
or
lock
pop
hlt
mov
clc
lock
ss
add
loop
or
push
add
scas
sub
inc
out
aad
add
inc
or
add
add
idivb
aas
push
pop
jge
insb
add
mov
es
dec
jp
xor
scas
xor
out
loope
sti
lds
scas
imul
add
push
fdivr
fsubrl
cmpsb
sti
lret
icebp
cmp
sti
xor
xchg
mov
pop
addr16
jo
rorb
adc
cltd
add
cmp
cmp
jmp
dec
jno
inc
sbb
filds
push
roll
mov
fyl2xp1
fs
dec
fdivr
insb
mov
pop
mov
mul
mov
in
push
sbb
pop
gs
push
adc
dec
lds
out
xlat
loop
jmp
xchg
mov
pop
push
call
mov
ljmp
add
add
repz
push
mov
out
adc
scas
pop
clc
jp
and
fimull
or
push
add
pop
pop
data16
test
insb
mov
jle
rolb
jb
sub
bound
bound
push
push
outsl
cmp
imul
dec
jg
xor
cmp
adc
mov
adc
cmp
mov
inc
insb
xchg
rorb
adc
or
xor
add
sub
fs
cld
sub
xchg
hlt
lret
imul
pop
dec
in
push
add
xchg
pop
outsb
icebp
add
add
mov
xor
fists
sbbb
add
pushf
and
and
cmp
mov
adc
mov
loope
mov
and
add
insb
and
sub
aaa
push
push
lcall
and
lock
and
xorl
shll
outsb
inc
jne
mov
lcall
jne
adc
jmp
fmull
inc
js
xor
sahf
sar
sbb
xchg
insb
je
xchg
xlat
ljmp
mov
jnp
jmp
add
add
add
sti
arpl
shll
sti
lret
pop
out
cmc
int3
mov
xor
aam
icebp
jl
inc
les
jne
inc
sti
xchg
cmp
jne
shr
pop
or
lock
enter
mov
push
fcompl
sti
jmp
cmp
jne
xlat
xor
pop
pop
insl
pop
pop
ja
and
ficoml
imul
add
add
mov
roll
add
pop
push
cwtl
pop
push
call
dec
lock
shl
ljmp
jge
and
jge
and
sar
pop
aaa
and
and
push
mov
and
add
mov
out
out
pop
fmuls
mov
jo
pop
imul
imull
and
imul
add
add
pop
imul
xor
pop
fldt
xchg
out
dec
push
fwait
and
outsb
int
pop
outsb
lds
mov
jne
adc
mov
jmp
fstpl
insl
rol
jmp
pop
jb
mov
add
jne
mov
xlat
jmp
cmp
inc
xor
jg
insb
xchg
add
add
xorb
andb
mov
fstp
and
or
movsb
mov
add
add
push
shl
push
insw
and
sbb
fildll
mov
cld
je
clc
cld
push
sarb
sbb
jmp
test
add
mov
and
and
mov
adc
shlb
add
pop
mov
pop
mov
push
pop
pop
or
adc
fidivs
push
mov
and
pushf
add
add
in
fcmovb
jbe
sti
mov
adc
enter
sbb
xchg
insb
imul
pop
jnp
std
in
cmp
or
pop
or
add
inc
push
pusha
add
insb
jnp
int
mov
lods
lcall
dec
mov
and
lahf
rolb
in
add
insb
add
or
test
rolb
cs
pop
je
sbb
loopne
sbb
dec
popa
adc
rcrb
fwait
inc
aaa
nop
dec
or
dec
jno
push
leave
mov
mov
jbe
pop
mov
sub
js
mov
jg
push
pop
cmp
add
add
add
out
sbb
push
mov
shl
jns
sub
gs
ljmp
int3
dec
pop
mov
push
xchg
iret
cmpsl
cld
jae
test
andb
stos
adc
sub
inc
xchg
inc
inc
gs
sti
fs
hlt
xchg
add
inc
in
adcl
add
rorl
mov
inc
aaa
or
gs
ret
inc
arpl
xor
add
stos
test
jmp
or
jg
aad
out
cmp
push
in
jmp
adc
xchg
out
mov
jno
add
pop
dec
pusha
pusha
inc
push
or
add
add
out
dec
dec
or
mov
cmp
push
mov
ret
ljmp
jg
cmpsl
push
stc
jb
add
add
sub
xor
push
pop
bound
lret
or
sahf
aad
push
inc
and
add
dec
cmp
mov
add
xor
out
scas
hlt
call
test
cs
subb
add
clc
insl
add
lods
xchg
and
mov
out
inc
mov
ret
adc
add
add
rorl
mov
sti
and
dec
inc
and
or
jle
mov
inc
dec
rorl
inc
js
jl
loope
je
fmul
and
call
mov
push
pop
sub
shlb
out
and
inc
loopne
dec
shlb
lea
adc
adc
mov
out
jno
rcl
or
aam
inc
add
cwtl
push
or
arpl
imul
and
ret
pop
out
fisttps
xchg
xchg
in
xchg
push
ljmp
push
movsl
je
gs
pop
sub
or
into
js
adc
add
jae
cmpsl
add
pop
add
mov
mov
ljmp
mov
fadd
jg
adc
fcoms
sar
out
sbb
mov
mov
mov
testl
jmp
les
xchg
lds
sub
cmp
mov
xor
scas
stos
push
or
mov
jno
add
add
and
clc
stos
dec
or
popa
mov
xchg
lds
lcall
and
mov
add
mov
xchg
leave
push
add
and
sbb
cwtl
and
push
xlat
xchg
sub
pop
push
add
movl
cvtps2pi
add
fidivrs
add
sub
add
outsb
and
dec
add
mov
add
adc
dec
add
dec
inc
and
jmp
or
sbb
in
sub
stc
hlt
dec
je
sub
jns
sub
push
stc
orb
outsb
or
sbb
scas
ret
mov
jmp
scas
jb
ret
mov
cld
jne
jnp
call
adc
cld
inc
pop
xchg
jnp
or
jecxz
call
adc
ret
pop
mov
jne
jecxz
test
icebp
or
add
mov
daa
add
cmp
jae
push
ficoml
mov
xchg
nop
insl
push
loop
push
out
lea
pop
mov
rcl
pop
sbb
mov
lahf
pop
pop
outsb
mov
imul
icebp
dec
scas
out
add
lahf
sub
ret
jb
dec
sbb
loopne
mov
mov
add
mov
add
mov
sub
lret
inc
aas
and
xlat
mov
fdivl
jge
and
pop
push
fs
add
fucomi
adc
lods
vxorpd
cld
inc
mov
fdivrl
xchg
mov
dec
iret
daa
lods
jp
insb
decl
pop
inc
inc
mov
dec
sar
inc
cmp
add
je
mov
sbb
mov
les
add
add
sbb
dec
jne
mov
in
push
cmp
cli
mov
nop
data16
int3
xchg
js
add
xchg
push
std
jno
push
push
jbe
cli
mov
adcb
mov
repnz
mov
dec
pop
outsl
in
inc
in
xchg
cmp
xor
faddl
stos
fldenv
popf
xchg
lds
cmp
adc
idivb
add
inc
idiv
jp
cmp
push
pusha
add
xchg
or
test
push
call
out
loopne
or
mov
stc
cld
jb
jl
adc
fpatan
cli
push
loopne
xchg
add
or
stos
cld
pushl
add
mov
in
and
or
jne
adc
call
ss
divb
push
pushl
or
dec
scas
cld
incl
add
add
fnstcw
cmovns
mov
pop
gs
pop
aas
sub
out
cmp
or
or
std
inc
pop
mov
lcall
add
clc
std
xchg
clc
add
jl
test
or
flds
push
jmp
adc
rclb
push
jne
test
les
xor
add
sti
mov
inc
call
dec
push
sub
xor
add
dec
add
mov
pop
lcall
xor
arpl
pop
mov
jno
dec
fmuls
cld
dec
dec
or
adc
out
sti
cmc
sub
inc
aaa
adc
dec
leave
sahf
xchg
ljmp
add
add
xchg
icebp
jb
fistps
std
sbb
les
mov
mov
add
add
cmpsl
clc
inc
jmp
lret
pop
mov
mov
jecxz
xchg
enter
mov
sub
add
add
inc
rcrl
push
or
jl
or
in
sbb
mov
add
js
add
movl
adc
enter
aas
mov
dec
int
mov
jmp
mov
dec
stc
or
cs
fldl
ljmp
xor
les
and
out
xor
mov
add
add
call
add
insl
enter
roll
add
hlt
psubusw
add
add
aaa
mov
add
or
adc
jl
andl
push
fidivl
iret
mov
mov
inc
mov
inc
or
lea
add
negb
fwait
cld
push
leave
sbb
les
lret
add
test
and
stos
jecxz
and
jecxz
adc
flds
leave
fistl
adc
adc
xor
je
call
and
icebp
out
pop
push
sti
dec
sbb
sbb
fdivl
or
cs
dec
sbb
sub
or
and
repnz
repnz
jp
mov
shlb
push
jns
in
out
pop
fisubs
mov
outsl
mov
xor
sahf
sbb
scas
daa
aad
movsl
div
xchg
leave
sarb
pop
cmc
xchg
leave
aam
cmp
dec
sbb
jo
scas
and
mov
sbb
mov
in
pop
dec
jno
in
stc
sbb
push
movsl
arpl
xchg
mov
cmc
xchg
negb
cmp
aam
jbe
test
adc
fiaddl
sub
jo
dec
sbb
inc
addr16
test
adc
pushf
pop
adc
std
mov
int
push
pop
fidivrs
inc
push
push
icebp
fsubs
push
mov
fistl
mov
sub
fwait
jnp
xor
mov
adc
aad
add
add
adc
int
bound
divl
cwtl
push
daa
mov
pushf
inc
fwait
dec
push
std
cmp
xchg
rol
cmpsl
mov
lods
in
call
push
out
inc
add
sub
jae
outsb
mov
iret
dec
cmpsl
jnp
aad
fwait
scas
cmp
lret
stos
daa
or
mov
mov
divb
add
inc
mov
in
jge
stc
decl
mov
push
cmp
aad
mov
aas
cmp
scas
int
lea
loop
mov
test
cld
incl
dec
stc
out
and
add
pop
sub
inc
or
jmp
mov
rcrb
inc
jp
push
je
mov
add
add
fistl
adcb
out
shrl
sub
test
jle
inc
shlb
xlat
cmc
jmp
adc
lea
imull
cmp
pop
or
push
test
fimull
imull
mov
dec
sti
xor
test
ljmp
sbb
push
adc
or
in
jge
add
add
xchg
push
pop
icebp
inc
cmpb
sub
adc
inc
xor
or
add
mov
add
mull
pop
pop
fsubr
add
push
mov
sbb
cmc
roll
call
add
dec
mov
jmp
pop
or
add
nop
cmpsb
xchg
hlt
divl
sbb
add
inc
dec
fsts
into
mov
xchg
orl
add
das
inc
sbb
inc
filds
les
lret
inc
outsl
inc
mov
push
cmp
inc
insb
out
inc
clc
fsub
adc
dec
inc
outsl
sub
jne
push
shlw
aas
push
jo
jg
add
stc
cltd
sub
push
ss
adc
mov
pushf
cwtl
mov
sbb
adc
sbb
add
add
gs
hlt
sub
clc
sub
aas
shld
add
push
jle
movl
jns
popa
push
xchg
jbe
inc
push
jbe
inc
sub
pushl
std
push
or
or
adc
push
into
jle
flds
incl
add
rorb
orl
movb
popf
sbb
cmp
add
add
or
adc
icebp
push
aaa
ds
xor
arpl
js
or
mov
psubusb
inc
clc
call
add
add
orb
mov
push
push
xchg
add
mov
dec
sti
sbb
dec
push
aas
jne
arpl
mov
cmpsl
mov
push
sti
jmp
cmpsl
inc
loop
mov
push
in
test
dec
sti
je
scas
addr16
cs
inc
test
movsl
jno
testl
stc
sbbl
leave
insb
arpl
les
ret
fldenv
pop
aaa
jl
mov
out
add
dec
dec
aas
sbb
repz
add
pop
adc
push
inc
mov
push
sbb
repz
add
jmp
iret
mov
mov
orb
jmp
add
add
repnz
pop
inc
xor
pop
mov
dec
adc
cltd
push
jmp
sub
pop
ret
xchg
xchg
dec
mov
lea
xor
jge
inc
clc
sbb
dec
pop
aas
mov
pop
movl
add
sahf
mov
push
fisttpll
and
xchg
ret
shrl
fmul
stos
inc
xor
fdivrl
add
into
dec
aas
mov
nop
xchg
jne
stc
jmp
movl
fmull
inc
jp
jp
inc
add
cmp
xchg
jmp
add
shlb
xor
mov
pop
cmp
add
lea
addr16
lds
mov
add
test
or
add
call
mov
or
insl
xchg
jne
adc
push
or
add
lea
add
lock
inc
in
mov
add
inc
movsb
rolb
fldl
xchg
push
push
push
add
push
jle
cld
and
jnp
adcl
inc
mov
cmp
dec
and
aam
mov
xchg
dec
mov
call
das
add
cli
arpl
add
sub
shl
andb
add
clc
cs
je
lret
lds
sub
pop
lock
int
outsl
mov
cmp
adc
gs
dec
adc
jmp
fdivr
lret
fnstcw
int3
sub
stc
mov
jns
lods
das
add
stc
fwait
test
add
add
add
lods
js
loop
mov
mov
jle
jmp
hlt
fcomps
lret
mov
xchg
push
push
inc
push
or
js
adc
loope
add
add
jmp
addr16
ljmp
mov
inc
add
mov
pop
notl
dec
inc
loopne
add
stos
ror
imulb
loope
cmp
mov
loop
cld
mov
add
add
aam
push
test
movl
jle
pop
or
jmp
shl
icebp
jmp
add
cmc
ljmp
mov
dec
inc
add
sub
xchg
xor
xchg
add
jmp
movsb
cmp
xchg
or
jmp
movsb
inc
add
aad
insl
in
or
lods
insl
in
movl
add
add
jnp
and
add
jnp
add
fiadds
es
push
std
jne
jno
adc
add
add
pop
mov
and
pop
add
mov
cmp
lret
pop
pop
dec
pop
push
subl
js
fnsave
push
stos
pop
or
dec
or
sub
push
sub
popf
add
rcl
xchg
add
add
add
add
stc
dec
xor
cltd
adc
lds
add
les
add
mov
or
mov
add
test
add
xor
jge
rorb
stc
test
mov
add
incl
xchg
adc
icebp
add
add
xlat
mov
std
xchg
pop
or
add
add
inc
mov
push
pop
sub
ljmp
add
adc
test
add
dec
jp
call
add
ljmp
loop
mov
adc
lock
enter
adc
add
or
cmpsl
pop
mov
in
pop
dec
jb
cmpsl
sbb
mov
add
add
adc
hlt
sti
add
dec
xchg
ror
lock
add
roll
dec
inc
das
fbld
rorb
mov
mov
sbb
mov
pop
xchg
shlb
ret
fildl
mov
addb
xchg
in
sbb
rol
imul
or
and
ret
mov
aaa
pop
fwait
xchg
mov
clc
aam
add
add
inc
jmp
cmpsl
mov
mov
cmp
jb
cmp
cmpsl
sar
fdiv
adc
ud1
testl
stc
pop
aaa
push
into
sub
sub
jle
add
adc
sbb
sub
jle
jo
jecxz
insb
mov
inc
add
jb
adc
xor
insl
push
sub
sub
add
add
repnz
je
in
adc
es
pop
pop
push
std
in
fnsave
insl
add
xor
mov
mov
std
call
test
push
add
mov
in
push
sub
xor
mov
lret
mov
in
call
xchg
fidivrl
sbb
push
push
cwtl
scas
sbb
call
add
jo
xchg
sub
add
jnp
test
mov
in
mov
inc
or
mov
ret
out
mov
add
bound
push
cmp
imul
dec
or
jo
mov
popf
mov
je
push
add
sti
dec
pop
adc
jne
add
add
bound
jmp
lea
scas
std
add
aad
shll
outsb
fsubs
sbb
faddl
jge
call
xlat
xor
out
aad
enter
nop
add
mov
decl
xor
xchg
add
insl
les
xchg
roll
mov
xor
nop
push
jmp
add
les
add
les
jmp
les
ljmp
xchg
filds
aad
sbb
xor
outsl
or
xor
mov
add
or
ffree
sbb
xor
das
stc
orb
push
mov
aad
cld
lahf
add
cmp
outsb
repnz
leave
sbb
or
xchg
out
mov
xchg
dec
push
mov
mov
int
mov
je
addb
fistps
lcall
adc
jmp
loopne
xor
mov
pusha
xchg
push
sbb
add
daa
and
mov
ret
add
flds
sub
add
add
pop
push
push
adc
add
lods
cld
push
xchg
push
cmp
ret
jle
jle
xor
push
and
test
push
dec
push
ret
adc
jg
mov
arpl
inc
dec
xor
cli
adc
pop
sub
mov
inc
loopne
into
mov
add
add
ret
dec
test
jnp
sbb
call
dec
pop
adc
mov
mov
add
std
mov
aad
shrl
inc
les
add
push
loopne
fucom
bnd
add
in
cwtl
aad
fimull
imul
out
xor
out
fs
sti
inc
jecxz
jg
xor
test
add
add
add
pop
xchg
add
in
add
sbbb
or
add
mov
decl
jmp
call
je
pop
call
je
out
out
mov
jl
cmpl
jmp
sub
push
sbb
sbbb
pop
jmp
hlt
subb
add
add
incl
lahf
cmp
aas
inc
inc
lock
jmp
in
test
add
fwait
jmp
dec
test
add
test
loopne
add
movl
add
inc
inc
or
add
sbb
add
iret
sbb
jle
rorb
lea
mov
mov
adc
sbb
add
push
sti
sbbb
mov
jmp
lds
cwtl
aad
add
outsb
loop
xor
in
sub
add
inc
ds
add
sti
push
push
test
and
add
push
dec
lea
add
mov
mov
sbb
mov
int
je
add
add
or
adc
pop
push
and
and
add
sub
add
push
xchg
add
xor
outsb
xor
push
and
add
pop
add
pop
push
cld
adc
loopne
or
pop
lock
pushl
add
sbb
sbb
lods
or
adc
adc
addb
push
int
jns
adc
add
mov
std
out
mov
add
xchg
sbb
mov
je
mov
fiaddl
les
push
mov
mov
xchg
or
les
or
and
adc
ja
lds
add
mov
sbb
pop
xchg
add
add
add
sbb
jp
pop
iret
cmpsl
in
adc
shl
add
cmpsb
sub
cmp
cmp
push
rolb
mov
cmp
movsb
aam
les
lcall
push
jmp
dec
pop
repz
add
popa
shl
jb
out
jb
out
arpl
stos
jg
pop
dec
cltd
push
in
inc
push
iret
leave
inc
roll
sti
jp
fistps
rorb
aam
jmp
outsb
sub
jmp
push
ret
pop
sub
jmp
xchg
sub
xchg
jp
stc
fmull
inc
jmp
jl
add
into
mov
sbb
aas
ljmp
call
ljmp
mov
fiaddl
repz
push
add
cmp
cmp
out
sbbb
add
jno
xor
adc
add
lods
adc
cmp
adcl
or
daa
lock
mov
pop
sub
test
or
push
add
add
out
insl
das
cmpsb
pop
xchg
push
push
repnz
sub
and
arpl
mov
sub
shrb
cld
push
stc
cmc
fstps
sbb
and
and
cli
cmp
and
enter
xor
add
mov
or
or
cmpsb
nopl
jle
dec
xchg
insb
mov
inc
test
cmpsl
add
sub
les
add
test
les
add
test
and
sbb
add
or
sbb
mov
ret
int3
xor
aas
loopne
daa
bound
add
enter
shll
shlb
add
jmp
jge
out
lahf
popa
add
lock
push
jmp
inc
add
cmpsl
loope
rcrb
sarb
mov
test
cli
xchg
mov
add
add
arpl
les
and
lahf
into
inc
adc
mov
push
fsubr
fistps
rcrb
cs
sarl
add
js
sub
flds
add
add
xlat
ret
adc
cmp
sbb
add
enter
mov
add
aam
mov
mov
jg
lds
jg
int
test
imull
inc
inc
imul
or
sar
cli
orl
mov
sar
sbb
add
add
fadd
jo
in
jb
mov
jmp
cmp
add
popf
add
xchg
fildl
shlb
mov
sub
add
test
add
pop
add
xchg
add
xchg
dec
jmp
add
pop
jl
test
push
adc
xchg
cmpb
sbb
jp
mov
stos
cmp
sbb
cmp
add
pop
or
push
pop
inc
and
pop
repz
stc
andb
xchg
pop
or
add
pushl
xchg
pavgw
sbb
pop
stc
adc
add
fdivr
sbbl
and
dec
adc
cs
dec
sahf
flds
les
rolb
add
shll
repz
lcall
and
xchg
and
sbb
add
lahf
or
les
inc
mov
sbb
loope
push
xchg
lock
sbb
cli
mov
add
xor
les
jmp
inc
lea
add
add
ljmp
mov
add
add
dec
xor
mov
add
aad
add
xlat
sbb
lock
stc
add
dec
jb
out
arpl
mov
add
fwait
mov
jne,pn
adc
rolb
loopne
mov
arpl
cmpsl
std
jae
inc
shlb
cmp
mov
sbb
leave
lea
rorl
arpl
enter
movl
or
add
addl
add
mov
inc
mov
add
outsb
mov
mov
inc
push
cltd
iret
hlt
cld
mov
add
sbb
out
pop
push
call
notl
inc
jmp
jb
sbb
and
mov
rorl
push
js
fdivr
adcb
push
push
je
add
sarb
or
xor
jmp
xor
pop
pop
loope
loopne
and
insl
jae
cmp
addl
je
push
push
daa
pop
pop
outsl
test
bound
movsl
cmpsb
ljmp
add
add
adc
cltd
sub
and
add
les
mov
fdivr
cltd
sti
jecxz
mov
add
out
loop
mov
lret
lds
les
jle
mov
sti
dec
jae
dec
lds
add
pop
xor
sbb
push
inc
call
into
push
cli
jnp
jl
cmp
aas
imul
lds
or
std
inc
xchg
lret
aam
stos
fsubrs
leave
and
add
ficoml
mov
add
add
jmp
dec
icebp
push
xchg
cwtl
xor
cs
push
mov
loopne
sbb
stos
mov
add
add
aam
ljmp
cmpsl
inc
dec
lret
sti
inc
out
xlat
mov
enter
push
call
dec
filds
clc
jmp
imul
test
cld
repnz
les
mov
fsts
sbb
jb
in
push
or
pop
lds
loope
cmpsb
add
fiaddl
and
mov
xchg
scas
fwait
mov
push
js
rolb
add
xchg
test
enter
ret
orl
sqrtps
lds
push
push
xchg
pop
bnd
sbb
lea
push
add
inc
les
cltd
scas
pop
insb
daa
repz
xchg
iret
mov
mov
fnstsw
rclb
mov
add
add
dec
pop
pop
das
or
xor
dec
add
in
pop
xor
mov
fwait
push
faddl
add
adc
je
mov
xor
lahf
std
pop
pop
xchg
insl
adc
pop
add
pushf
rcrb
push
add
mov
pusha
addl
icebp
sub
xchg
xchg
repnz
push
insl
add
les
add
inc
pop
dec
mov
sbb
sub
dec
xchg
daa
push
data16
add
jg
adc
sar
fwait
mov
inc
repnz
push
push
inc
stos
ja
xchg
test
inc
les
add
sbbl
add
xchg
add
lds
add
movsl
xchg
add
and
add
add
add
ljmp
add
ljmp
add
ljmp
add
ljmp
mov
jmp
inc
adc
pop
les
repnz
add
add
add
cld
add
nop
test
shl
mov
xor
add
add
repz
add
and
les
addb
xor
call
lods
xchg
movl
dec
pop
loopne
inc
mov
mov
fidivs
push
adcb
add
add
add
lea
add
adc
or
add
popa
sti
xchg
addr16
add
shrl
add
mov
xchg
add
ljmp
or
arpl
ret
push
push
insl
and
add
or
test
push
pop
mov
add
add
cmc
xchg
call
pushf
shll
testl
cltd
or
add
mov
insl
pop
iret
ljmp
lea
add
and
icebp
adc
add
add
lock
jp
or
jo
call
fwait
shll
xchg
cld
sub
add
push
cmp
stc
test
add
push
les
sarb
sub
mov
xchg
int3
add
sub
inc
les
rolb
sub
orb
push
test
inc
mov
pop
or
mov
std
test
add
push
sbb
aas
add
xchg
shll
push
dec
jge
enter
inc
mov
xchg
adc
mov
add
aam
inc
fildll
rcll
inc
jmp
mov
lret
mov
add
mov
imul
call
mov
fistl
mov
jbe
repz
mov
add
fwait
into
out
jle
test
stos
scas
rorl
jmp
enter
aas
sbb
add
jmp
test
pop
jmp
cli
push
inc
add
add
sgdtl
xchg
push
nop
sbb
inc
fiaddl
call
lret
test
jmp
sbb
shrb
push
jo
in
inc
fcmove
add
mov
add
sub
jbe
jmp
das
sbbb
rcrl
cli
mov
ret
sub
xchg
cld
mov
add
or
or
sbb
mov
aas
or
adc
ljmp
sbb
movsb
rclb
push
add
test
je
fwait
inc
and
xor
or
loope
mov
cmp
leave
pop
cwtl
rorl
fimuls
dec
shrl
fistpll
sub
jge
or
lock
xchg
iret
jmp
mov
cmp
andl
mov
fnsave
in
pushf
xor
leavew
push
mov
add
fstpl
icebp
mov
sbb
lcall
les
rclb
and
xchg
shl
cld
fwait
std
cmpb
adc
add
add
in
or
or
inc
aam
mov
aas
insl
std
mov
fld
mov
out
mov
insb
add
add
add
cs
insl
in
sarb
sbb
cli
daa
pop
pop
aas
rclb
idiv
inc
inc
mov
je
cld
jp
xchg
insb
in
inc
aam
scas
adc
loopne
push
inc
add
add
cmp
std
xor
mov
shrl
add
or
addl
push
jmp
inc
sar
sbb
pop
add
pop
sbb
test
mov
lods
add
cmpb
in
rolb
inc
cmpsb
fisubrl
lods
dec
mov
add
mov
loopne
add
push
dec
hlt
sub
inc
fmuls
nop
enter
push
add
dec
pop
jae
and
sub
adc
das
imul
sbb
jmp
iret
push
jmp
lret
mov
inc
xor
add
iret
leave
sbb
call
fbld
push
jmp
aam
or
lods
add
jmp
pushf
aas
ljmp
jmp
jmp
ljmp
adc
cmp
mov
stos
test
add
rorb
addl
push
lock
dec
stc
mov
sbb
add
popf
pop
or
dec
inc
add
ret
test
imul
clc
ss
or
push
out
jmp
add
loope
jnp
jmp
add
pushl
jg
add
cmpl
test
popa
add
jbe
jmp
mov
push
adc
mov
push
add
les
std
ljmp
sarb
mov
add
add
inc
in
iret
dec
loope
pop
jae
adc
mov
or
lea
inc
xchg
enter
sbb
adc
or
lcall
mov
add
les
shlb
sbb
loope
inc
xchg
add
mov
add
cs
mov
add
add
push
leave
call
mov
testl
dec
out
mov
jmp
imull
jle
and
pushf
pop
xchg
or
add
popl
add
sti
inc
inc
arpl
push
adc
mov
jbe
add
mov
daa
negl
imull
jecxz
pop
mov
les
fdivs
inc
adc
jo
mov
rcrb
shrl
lds
lahf
cwtl
leave
mov
adc
repz
or
ljmp
pop
add
mov
daa
mov
add
sbb
sbb
mov
rol
cld
scas
xor
addb
or
push
push
repz
add
adc
jg
movb
push
in
outsb
int
or
add
roll
add
inc
push
mov
lret
or
inc
add
add
cli
push
adc
fcom
hlt
fsubrs
pop
and
mov
js
jne
out
xchg
add
push
rclb
push
es
adc
out
pop
and
and
add
add
xchg
xchg
cmp
inc
sub
add
call
cmpsb
test
insl
add
movsb
add
add
add
push
add
add
push
xchg
sbb
loopne
lds
add
xchg
lds
add
cli
xchg
xchg
loope
fcmovu
std
addr16
sbb
add
loopne
lds
sarl
test
add
jg
push
add
pop
sbb
push
pop
xlat
sarl
cmp
ja
imul
jae
mov
add
add
mov
sub
inc
or
push
lret
dec
sbbl
add
popa
addb
dec
lret
cmp
arpl
les
sbb
adc
add
jbe
repnz
ljmp
or
mov
ljmp
outsb
ss
mov
ljmp
cmp
push
lods
arpl
cmpsl
out
jl
mov
add
ljmp
cmpsl
add
sti
in
lods
or
xchg
cmc
int
insb
sbbb
test
lods
sysenter
test
movl
jle
push
add
mov
stos
divl
push
jnp
leave
movb
call
scas
add
push
jle
test
sub
mov
outsb
cmp
ss
add
mov
outsl
push
add
sbb
je
sbb
call
mov
or
call
mov
adcb
mov
mov
add
jge
pop
in
or
cmp
jbe
mov
ficompl
lock
mov
adc
jle
movsl
add
add
ret
movsb
pop
add
ret
add
add
and
push
add
mov
out
js
insb
or
test
add
les
loope
les
add
sti
mov
sbb
and
fimuls
adc
add
subl
jb
dec
fimuls
filds
mov
cs
mov
add
add
inc
add
jmp
push
sbb
test
or
cwtl
test
les
out
scas
add
push
mov
add
pop
test
mov
pop
jg
cmp
add
add
jg
push
jmp
mov
add
sub
sti
pop
js
add
jp
les
fiadds
les
add
mov
dec
fbstp
ds
jb
xchg
add
movb
rol
loope
mov
nop
loope
and
inc
inc
pop
cmc
xchg
ret
add
adc
gs
clc
cld
fs
mov
mov
add
movl
add
fldl
mov
loopne
cmc
add
add
int
enter
stc
cs
push
xor
mov
push
test
xor
or
ret
jl
out
mov
or
out
stc
push
inc
ljmp
or
mov
sub
add
out
fmul
jmp
sub
mov
daa
sti
inc
jmp
jno
call
jbe
int
outsb
push
ljmp
dec
rcrl
mov
movsl
pop
inc
sbb
push
cld
xlat
test
and
ljmp
add
fdivrl
and
add
add
aam
pop
sub
push
push
std
je
pop
cld
pop
test
js
add
push
mov
orb
jge
std
add
add
cmp
xor
jge
and
std
inc
xchg
int
push
mov
cmp
rorl
mov
dec
mov
jg
sbb
ds
incl
in
inc
inc
fcos
inc
js
lcall
push
add
fcmovb
push
add
dec
dec
loopne
add
add
add
jns
les
add
and
ret
or
stc
dec
push
and
cli
rclb
aas
mov
sub
inc
call
add
mov
sub
loop
lds
sar
dec
ret
ljmp
cmp
push
out
repz
fstl
add
loope
lret
jmp
and
js
popa
add
add
add
das
addl
xorb
mov
daa
loopne
add
jle
pop
add
mov
or
or
sahf
fld
sub
sbb
sbb
sbb
cmp
inc
cmp
stc
insl
add
add
adc
mov
movb
mov
push
pushf
pop
xchg
cmp
clc
popf
ret
jmp
shl
cmp
cwtl
outsl
ja
jle
add
std
add
cmp
pop
stos
lret
add
xor
add
add
add
ss
cmp
in
or
sbb
or
xorl
add
mov
stc
clc
cmpb
loopne
push
adc
pop
add
jg
mov
loopne
xchg
sbb
test
xchg
push
mov
ljmp
ret
pop
inc
mov
jns
lds
push
ret
mov
mov
push
ds
call
data16
push
js
add
out
xchg
std
push
inc
jns
pushf
mov
or
inc
popa
lret
out
ja
call
inc
scas
cltd
outsb
aas
sub
xorl
dec
sub
dec
dec
fxch
or
dec
jns
sete
or
cli
push
xor
mov
enter
fidivs
mov
mov
cltd
adc
add
add
ret
iret
xchg
mov
inc
movsb
loopne
shrb
imul
push
aam
ljmp
inc
scas
jns
sbb
sub
lahf
cmp
clc
mov
lahf
sbb
das
mov
int
ljmp
mov
adc
jg
pop
fs
ret
mov
clc
bound
add
jmp
outsl
out
mov
add
add
add
pop
stos
add
mov
xchg
cmp
jle
sub
xchg
sbb
ffree
rcll
jmp
dec
bound
int
adc
dec
pop
push
add
faddp
add
rcll
push
enter
fildl
outsb
mov
pop
inc
xor
movsl
jl
mov
les
jo
add
add
push
mov
mov
push
sbb
push
push
jb
add
mov
push
lea
and
cmp
cmp
test
ret
imul
fiaddl
jmp
cmpb
dec
adc
add
or
icebp
or
add
jg
push
jge
and
pop
push
lcall
or
mov
jl
lods
sub
mov
outsb
and
adc
ss
orl
outsb
add
add
or
inc
ljmp
mov
pop
push
lods
mov
sbb
adcb
mov
and
cmpsb
dec
sbb
cmpsb
adc
stos
add
add
xchg
push
jno
out
add
push
add
out
lds
add
add
out
add
ss
xchg
ja
mov
aad
cs
mov
enter
test
lret
ds
add
sub
pop
hlt
xchg
cli
mov
hlt
aas
les
je
insb
xchg
and
icebp
cltd
aas
dec
mov
pop
imulb
cli
cs
jnp
loopne
jbe
call
stos
loopne
movl
ljmp
js
jp
lea
lret
add
xchg
push
cmp
scas
or
adc
call
adc
sarl
mov
mov
add
ljmp
mov
adc
mov
cld
stos
inc
xlat
cmpb
xchg
add
add
add
fidivrl
xchg
lret
in
fmull
cwtl
ja
lcall
xchg
sbb
pop
jge
cmp
lret
or
dec
dec
sbb
fldt
push
add
add
jb
xor
push
les
or
mov
test
jnp
mov
sbb
aam
insb
in
ljmp
fmull
lds
inc
xor
pop
or
pop
leave
dec
sub
jle
test
das
ret
lods
leave
ret
cmp
adcl
outsb
or
cmc
cmp
pop
out
addr16
inc
add
testb
jg
pop
push
sub
or
pop
ret
jns
mov
add
add
jl
and
mov
and
push
adc
nop
out
or
test
in
or
push
mov
push
lds
mov
and
pop
or
cmp
dec
push
jle
call
les
jne
ljmp
enter
push
push
or
sub
loopne
cmp
add
xchg
loopne
fcmovnu
xchg
adc
xchg
or
ja
xchg
push
pop
jecxz
mov
out
cmp
pop
ljmp
push
dec
popf
js
mov
out
jg
xchg
out
mov
pop
cld
aam
mov
adc
push
dec
jge
and
add
into
jmp
les
or
add
add
sub
int
mov
sub
jno
fldl
sbb
notl
iret
mov
adc
inc
mov
add
inc
inc
enter
inc
std
inc
fcoml
fistps
repz
add
inc
incl
rol
daa
call
call
test
push
add
pop
xchg
idivl
insl
in
mov
push
icebp
jno
push
xor
push
inc
jmp
addl
mov
jmp
pusha
push
fs
aaa
push
mov
pop
sti
mov
inc
jbe
xchg
into
adc
cli
xchg
push
add
fcoms
aas
in
add
jb
cmp
dec
je
xor
jg
jo
inc
addb
cld
dec
fisttpl
mov
or
add
mov
call
jae
add
sub
push
addb
mov
fs
cmp
in
add
add
faddl
out
add
clc
xchg
jg
add
mov
add
add
jl
adc
jnp
pop
pop
icebp
clc
push
es
mov
pop
jb
fldl
ljmp
test
add
adc
pop
add
add
les
outsl
dec
aam
xchg
stc
inc
jo
dec
rolb
adc
add
lret
inc
rolb
xchg
push
cmp
out
jne
mov
add
add
mov
jne
pushf
in
add
xchg
adc
pop
fidivl
nop
in
add
dec
in
lds
xor
ret
ljmp
aam
add
mull
cli
hlt
enter
or
mov
add
add
xor
cmp
stos
scas
dec
out
imul
inc
mov
mov
or
add
add
cmp
imul
test
add
mov
cmpsl
movsl
push
add
jp
in
das
scas
dec
mov
cld
xor
xchg
fnstcw
mov
iret
dec
fs
nop
add
add
ret
jmp
or
cs
add
inc
lds
add
add
cmp
pop
sub
add
loopne
dec
inc
add
fistpll
scas
imul
mov
jmp
in
add
jbe
lds
divl
dec
push
in
repz
jle
add
movl
outsl
out
into
clc
sub
imul
and
pop
hlt
jle
xor
imull
jbe
jmp
mov
cmp
jne
adc
add
add
inc
add
mov
add
adc
pop
or
and
icebp
repnz
call
inc
pop
ret
in
test
mov
jbe
jne
jge
call
sahf
xlat
clc
ljmp
or
add
sub
mov
inc
in
sbb
sti
fwait
clc
decb
fidivl
in
add
mov
add
add
sar
popf
xchg
popf
lahf
mov
stos
pop
add
jl
add
popl
dec
shll
lods
or
js
lock
incl
out
inc
mov
mov
addl
ja
push
mov
cmc
or
cli
cltd
movb
push
mov
aas
jno
sti
mov
jns
cwtl
cld
scas
xchg
xchg
sbb
adc
adc
sahf
call
xchg
test
xchg
lods
jns
test
jns
mov
notb
movsb
insl
stos
sahf
mov
adc
xchg
add
fimull
add
call
lret
inc
lret
adc
pop
fs
mov
out
jae
inc
sbb
imul
add
stos
js
xorb
call
push
stc
inc
les
fs
sbb
outsb
push
movsb
cld
ret
mov
cmpsl
daa
mov
jg
adc
das
in
push
add
or
mov
add
mov
repz
push
jecxz
idivb
fldl
add
add
sbb
cmp
int3
imul
in
dec
mov
out
dec
cmp
test
iret
add
mov
lcall
out
mov
mov
fldl
push
pushl
sub
pop
add
int3
std
test
insl
scas
jns
addl
adc
add
add
mov
test
insl
sbb
lods
push
push
add
push
and
lods
mov
out
cmp
ljmp
dec
push
or
push
push
or
addl
das
xchg
fidivrs
jle
push
pop
jne
in
rol
push
sub
or
dec
push
add
push
push
xor
add
pop
mov
add
pop
lret
sbb
push
dec
dec
sbb
and
test
pop
push
dec
cmp
and
jle
add
out
test
add
xlat
push
ficoms
dec
sbb
les
or
adc
jg
cli
inc
jbe
and
stos
les
add
add
add
call
aas
aaa
addr16
adc
out
or
sbb
repnz
sub
mov
ja
jl
xchg
jns
mov
add
loopne
je
call
ficoms
lock
addr16
jmp
xchg
les
sbb
or
jmp
cmp
out
cmp
push
adc
jb
jmp
push
jmp
bound
pop
divb
test
or
xor
sub
push
je
loopne
and
xchg
incb
add
les
inc
and
adc
roll
fs
add
mov
cld
mov
ljmp
outsl
out
clc
jmp
idivb
inc
lahf
push
add
sbb
stc
aam
adc
ds
push
std
xchg
lds
fwait
ret
inc
loope
cli
ds
int3
xchg
pusha
cmp
es
pop
push
mov
test
inc
in
add
xchg
dec
add
jbe
dec
mov
out
ja
fnstcw
imul
add
add
pop
push
lea
push
lea
aaa
cld
pushl
push
pop
push
insl
add
xchg
xchg
adc
ds
cmp
jge
mov
loope
adc
mov
or
xor
and
jnp
and
jg
and
push
sbb
and
pop
pop
add
les
add
add
pop
repnz
add
das
seta
pop
test
in
pop
mov
add
int3
push
add
and
ja
test
in
inc
call
dec
sub
hlt
lret
pcmpgtb
lret
jg
lock
test
ds
dec
and
adc
out
repnz
fiadds
xchg
cmp
mov
mov
popf
sahf
flds
fiadds
ret
je
lds
push
icebp
paddsw
add
xchg
jb
mov
push
fiaddl
les
mov
ficomps
into
in
gs
mov
add
mov
packssdw
xchg
mov
and
aaa
jnp
dec
loopne
arpl
sbb
mov
add
mov
add
andb
mov
and
addb
ljmp
and
leave
dec
inc
or
pop
adc
xchg
rcr
inc
andl
add
push
aad
leave
in
xchg
inc
jo
fcmovb
jb
daa
xchg
sbbl
sub
fsubr
movl
push
jnp
add
lret
insb
xor
add
test
sarl
dec
pusha
sbb
iret
sub
mov
mov
add
xchg
adc
rorb
lcall
push
and
add
ss
adc
push
sub
test
push
jg
adc
test
xchg
ret
jg
mov
out
fiaddl
ret
mov
dec
push
inc
jns
and
push
xchg
ljmp
push
jne
xor
jmp
jns
and
push
std
je
sbb
ljmp
pop
pop
fs
adc
jecxz
jl
lock
dec
xorl
sbb
or
add
add
or
xchg
mov
call
dec
inc
jns
js
test
in
xchg
inc
jmp
leave
test
mov
inc
sbb
inc
popf
fs
nop
stc
cli
inc
mov
dec
xor
xchg
lods
mov
mov
jg
fstpt
and
sub
sbb
aas
mov
fnstcw
add
add
push
imul
je
into
xchg
es
fstp
les
jmp
cld
push
lds
add
rorb
add
add
call
cmp
add
push
mov
jl
add
jb
les
fimull
call
imull
adc
mov
add
fwait
call
out
add
and
stos
jo
jl
add
mov
add
lock
in
cld
scas
das
push
ljmp
dec
pop
sub
cmpsl
std
call
movl
xchg
leave
add
jne
fadds
add
movl
add
movl
push
icebp
inc
cmpsl
or
jmp
mov
dec
jae
aad
ljmp
adc
dec
loope
add
jg
nop
push
sub
adc
es
pop
mov
testl
insl
push
or
add
jecxz
repz
out
je
testl
add
roll
lret
sti
jmp
add
inc
leave
pop
decb
daa
push
sbb
mov
add
sahf
test
rcrb
call
xor
hlt
imul
frstpm(287
mov
add
out
pop
ss
or
push
pop
mov
clc
and
movsl
push
cmp
add
add
hlt
cmp
out
ja
lea
fucomp
add
inc
fldl
dec
mov
cmpl
les
out
stc
stos
and
and
add
pop
ficompl
stos
sbb
push
inc
sub
fiadds
sub
int3
mov
shrb
hlt
inc
inc
and
add
cmp
iret
mov
add
add
add
add
jb
test
inc
mov
pop
inc
ret
imul
or
and
mov
sub
push
cmpsb
mov
and
in
push
mov
jmp
push
push
mov
imul
add
push
xchg
in
cmc
mov
test
lds
iret
push
outsb
cmp
out
ljmp
add
add
in
pop
mov
loopne
add
bound
into
ljmp
add
insl
lcall
daa
add
dec
movsb
insl
xor
sbb
outsb
nop
pop
add
sahf
imul
mov
jp
inc
nop
sbb
xchg
out
sub
jmp
push
cwtl
sbb
jb
sub
ljmp
lea
jns
push
in
movsb
or
clc
jmp
inc
push
push
cmp
add
inc
mov
sub
mov
fs
call
call
push
push
and
mov
lea
or
andl
rcl
inc
push
sbb
pop
xor
add
add
mov
xchg
mov
jg
shl
adc
push
add
in
inc
xchg
popa
inc
and
xor
jae
arpl
mov
loopne
std
test
fldt
into
dec
xor
cld
mov
repnz
inc
and
and
rorl
les
or
sub
pop
out
rcrb
mov
add
add
jge
mov
je
add
in
ja
call
aas
add
cli
dec
xor
adc
cld
cli
or
and
xor
repnz
inc
js
jne
fcompl
les
addl
les
idiv
sbb
je
inc
repnz
add
pop
outsb
xor
int3
or
cwtl
lock
add
mov
roll
test
inc
les
stos
lods
es
adc
les
scas
fistl
cmpsl
lock
xchg
mov
shrl
dec
add
mov
jle
mov
sbb
mov
faddl
mov
jno
and
mov
ljmp
out
outsb
stos
adc
imul
add
ljmp
in
arpl
movl
enter
testl
xchg
xchg
and
call
xchg
clc
into
loopne
inc
xor
xlat
pop
pop
sbb
lea
mov
add
pop
stos
jp
lock
mov
and
sbb
sbb
pop
test
push
stc
hlt
notl
inc
jmp
mov
jmp
test
mov
inc
lods
or
add
or
pop
xor
cmp
inc
inc
add
cwtl
daa
or
mov
call
out
jge
cltd
pop
mov
int
loope
dec
ret
pop
pop
outsb
ds
sub
push
mov
aad
icebp
sbb
push
mov
stos
out
or
imul
mov
inc
fisttpll
outsl
pop
les
jecxz
cmpl
les
inc
test
add
sub
call
push
jmp
dec
mov
cs
pop
addb
jmp
inc
jl
dec
push
mov
add
push
add
out
pusha
call
push
hlt
imul
stc
cmp
sbb
mov
ja
js
sub
jle
fdivs
and
or
leave
push
call
dec
and
or
add
je
add
je
inc
aam
add
lds
mov
and
sbb
add
add
pop
jg
and
push
dec
mov
and
ljmp
fnsave
mov
mov
sub
xor
jmp
lds
adc
mov
loopnew
jmp
inc
and
jg
and
fsub
ret
add
mov
aaa
push
push
pusha
xbegin
and
add
add
jge
push
jo
and
jb
ss
cltd
inc
dec
push
add
xchg
inc
push
push
ljmp
and
jb
in
cli
lahf
fisttps
inc
add
call
movl
and
loope
stos
les
std
fstl
jmp
test
fisubrl
rolb
pop
xchg
addl
adc
add
add
pop
inc
and
aaa
push
push
pop
pop
and
mov
push
add
pop
ljmp
test
jne
adc
jmp
pop
jne
mov
inc
and
mov
dec
mov
mov
dec
push
out
push
stc
cli
popa
add
sbb
mov
and
aaa
adc
fcoms
fs
add
push
sbb
adc
cmp
xor
jae
mov
pushf
sub
inc
std
jbe
test
jne
mov
faddl
sub
sbb
cmp
and
jl
push
mov
mov
sbb
in
add
xor
lock
jne
loopne
jg
xchg
pop
push
test
leave
or
icebp
popf
jns
test
push
push
adc
and
lock
andl
in
add
dec
in
add
out
ljmp
add
jae
dec
push
cmovge
notl
mov
hlt
add
add
mov
out
fstps
push
push
mov
arpl
and
jmp
mov
faddl
add
add
pop
jmp
cmp
jmp
fldcw
shr
movsb
jl
cmp
inc
ljmp
push
fxch
jle
push
cld
test
outsb
mov
out
add
xor
clc
bound
loope
cwtl
sub
xor
into
les
in
push
pop
jne
add
out
mov
mov
test
mov
insl
add
add
outsl
in
dec
in
add
rcl
das
lea
lahf
push
xchg
jmp
pop
aad
push
push
add
jmp
mov
mov
lea
movl
jge
aad
xchg
clc
add
add
in
and
nop
ja
sti
push
add
add
dec
dec
push
xchg
loopne
xchg
add
lea
cmp
add
loopne
pusha
sbb
cltd
fstpl
scas
xor
sbb
or
xor
inc
push
add
popa
push
insl
add
xchg
pop
push
and
cmp
cld
pushl
push
sbb
pop
notl
cmp
dec
push
lcall
test
or
add
add
nop
loopne
les
aas
pop
jmp
stos
push
xchg
push
test
adc
push
negl
add
aaa
jno
cli
pop
cwtl
jns
or
pop
add
fsubrl
in
add
add
clc
sub
jns
push
mov
fcoml
cmp
dec
and
enter
test
push
rcll
mov
loopne
push
xchg
mov
add
popa
push
cld
fidivrs
call
pop
mov
jg
push
out
test
in
add
add
into
lods
push
xchg
cs
nop
out
sub
shr
or
pop
add
xor
dec
xor
jmp
fcomps
xor
aas
or
stos
add
fidivs
add
add
les
jecxz
aad
repz
pop
sbb
aad
shrl
ljmp
lds
pop
jecxz
sub
fisubrl
pushf
dec
push
cmp
frstor
jle
or
inc
add
sub
jge
xor
lea
sub
leave
pusha
shrl
push
addl
add
add
clc
xchg
loope
in
pushf
insb
mov
clc
insl
pop
pop
or
inc
call
jmp
movsl
jecxz
mov
fldt
mov
lret
and
xor
lea
out
out
outsb
out
pop
push
pop
call
aad
sar
loopne
push
cmp
adc
lock
je
call
xor
jp
mov
add
arpl
push
test
push
sub
jge
je
out
and
adcl
dec
and
fisttps
dec
call
push
and
or
pop
jbe
and
stc
jp
jle
sbb
pop
pop
mov
sub
push
or
je
mov
out
call
les
je
mov
cli
jnp
mov
jae
cmp
sbb
sub
insb
mov
cli
push
popa
lds
inc
jl
add
pop
xor
push
shl
pop
cwtl
jecxz
aas
stc
sub
xchg
mov
mov
push
call
lods
test
nop
in
in
add
cmpb
add
dec
leave
and
fcmovnu
push
dec
mov
add
xchg
add
add
faddl
pop
dec
add
je
stos
test
scas
daa
movsb
xor
mov
outsb
shlb
idiv
nop
nop
cvtpi2ps
in
cld
or
add
push
or
lret
push
sub
add
cmp
ljmp
sbb
in
les
xchg
pop
lods
mov
sub
xchg
cli
loopne
sub
mov
fucomp
fldl
add
add
shll
inc
pop
sub
and
loopne
jg
daa
lods
frstor
mov
xor
add
fdivrs
push
mov
inc
jmp
sbb
jp
mov
adc
jb
mov
jbe
pop
ret
mov
rcrl
sar
fiadds
push
add
leave
jmp
jb
sub
cli
jo
leave
popa
jmp
adc
add
add
sub
jo
sub
jo
sub
adcl
insl
call
and
sahf
pusha
sar
jb
mov
push
outsb
cmc
clc
push
inc
xchg
outsb
clc
push
cmp
add
in
lock
test
adc
xorb
test
mov
cmp
pop
push
mov
stc
rclb
add
add
xor
push
sub
inc
push
and
jge
pop
inc
add
sbb
sbb
or
sbbl
popa
mov
sti
fstps
add
fs
lock
call
and
out
xchg
cld
inc
test
faddl
sub
imulb
jbe
shl
bound
dec
or
or
dec
and
dec
mov
int3
push
inc
cmp
je
xor
cli
fmuls
xor
aas
les
or
pop
dec
aas
and
xor
test
inc
sbb
adc
fucomi
ss
movl
faddl
mov
add
scas
daa
movsb
sbbb
mov
sub
dec
loopne
inc
lds
fsubl
les
arpl
adc
roll
mov
les
push
inc
sbb
rorb
lods
sub
aad
pop
stos
cld
xchg
cmp
les
pop
cmc
test
sbb
sub
add
jnp
xchg
inc
pop
decl
mov
bound
out
jge
lret
inc
cmp
sbb
sar
bound
cmp
jmp
jns
mov
ds
loop
sar
fs
and
das
xlat
clc
push
mov
stos
xor
sub
xchg
xor
add
adc
cmp
push
stc
pop
js
jmp
fstp
rcll
mov
jnp
lea
mov
mov
xor
push
lea
dec
out
out
jae
pop
push
jmp
and
lea
fs
fldl
je
cs
or
fsubr
lahf
jne
mov
loopne
jmp
test
push
pop
test
mov
repnz
je
loopne
je
aad
pop
test
test
xor
cwtl
mov
call
mov
jle
adc
jnp
jmp
pop
add
dec
push
add
imul
fwait
sbb
mov
xchg
hlt
xor
frstor
cld
sbb
ss
clc
lret
sub
adc
shlb
iret
scas
pop
mov
or
out
dec
cwtl
clc
mov
testl
out
hlt
adc
sbb
pop
jge
xor
pop
rolb
push
and
int3
xchg
pop
cmp
cli
inc
push
add
sub
aas
je
cwtl
faddl
cmp
mov
repz
repz
add
ljmp
add
add
lret
jle
gs
jp
mov
fbstp
xor
jg
mov
lret
mov
ljmp
aad
rcll
in
arpl
push
cmp
add
gs
cld
rorl
push
out
fdivp
mov
lret
out
jle
cmp
cmp
xchg
jle
jg
push
sbb
xor
scas
jmp
lahf
sub
stc
insb
in
push
fiaddl
sub
dec
mov
jae
add
clc
jle
mov
in
outsb
in
loop
rol
sbb
mov
scas
fldz
dec
lea
les
xlat
ss
xchg
inc
into
xchg
add
clc
bound
cmpb
icebp
or
repnz
add
sbb
and
lret
dec
add
loopne
mov
clc
add
mov
mov
lret
ret
mov
adc
mov
lods
pop
call
data16
imul
aad
inc
popa
pop
xor
aas
or
icebp
push
inc
divb
jnp
jmp
jns
call
scas
mov
mov
push
lret
ret
cmp
orl
push
push
dec
adc
je
call
mov
mov
fdivr
jmp
call
mov
and
pop
pop
mov
ljmp
addr16
sbb
out
and
bound
div
in
adc
xor
xchg
fwait
test
fiaddl
test
sahf
push
sbb
test
add
cmp
add
leave
popf
sbb
dec
jmp
in
aas
scas
loopne
shrb
add
repz
xlat
jg
fmull
mov
in
pop
sbb
push
and
hlt
xchg
cli
arpl
mov
inc
add
xchg
sbb
inc
testl
arpl
js
add
mov
adc
sbb
sbb
jns
int
mov
jmp
ja
je
rolb
push
mov
fnsave
pop
and
jle
test
inc
mov
push
xor
pinsrw
sub
fidivl
stc
jp
pop
mov
jp
sbbb
out
xor
pop
and
les
mov
mov
and
aad
aam
ret
ds
push
std
lods
repnz
and
pop
sbb
jbe
repnz
test
push
insb
push
push
adc
sbb
pop
pop
bound
fmulp
fcmovnb
add
test
movl
clc
clc
jl
out
frstor
jle
jmp
jp
clc
jb
mov
or
or
add
mov
fxch
inc
sbb
movl
add
loopne
or
in
push
and
and
data16
push
sbb
inc
lock
mov
into
add
mov
mov
call
dec
push
adc
rorb
fisttpll
add
xchg
loope
pushl
or
push
push
or
lret
add
lea
lea
aaa
sub
daa
cmp
and
and
adcl
xchg
and
jae
fimull
data16
jbe
in
push
and
daa
in
ja
rcll
loopne
add
testl
repz
std
mov
sti
aam
pushf
mov
das
mov
std
mov
add
inc
call
arpl
xchg
aad
add
test
lock
sub
les
sti
mov
out
aas
les
mov
dec
pop
mov
add
leave
data16
add
add
inc
xchg
inc
ret
retw
mov
push
rorb
dec
les
mov
jmp
add
mov
rol
add
push
arpl
xor
or
xor
pop
sbb
inc
mov
jo
fistl
sub
fisubs
xor
cmp
jle
out
gs
aaa
daa
bound
call
mov
ds
in
mov
xor
xchg
fs
add
loope
in
clc
hlt
imul
jmp
addr16
std
call
repnz
inc
jo
jmp
jae
or
mov
mov
sahf
popa
or
cmc
insb
test
mov
jmp
adc
rolb
cmp
adc
enter
dec
sbbl
add
adc
in
push
lea
fdivr
hlt
stos
adc
lods
inc
jnp
cmp
and
add
add
or
xor
or
sub
xchg
add
adcl
jg
jns
cmpl
lret
mov
in
sbb
jmp
js
sub
add
call
mov
or
les
jbe
add
pop
add
push
inc
or
add
cmp
mov
add
add
add
mov
mov
inc
enter
dec
add
cld
mov
inc
add
mov
scas
lds
cmp
sub
test
jne
mov
xlat
jnp
mov
cmp
xchg
mov
daa
pop
andl
xchg
sub
testl
jge
fwait
xor
jg
xchg
jl
inc
lods
add
dec
repnz
aas
call
call
inc
loopne
or
add
stc
inc
adc
ljmp
add
jmp
push
xor
adc
pop
sbb
pop
adc
add
out
mov
lret
jp
in
mov
sbb
dec
sub
sub
add
add
push
cli
pop
xchg
repnz
iret
mov
faddl
mov
mov
les
jmp
inc
rclb
xchg
cmp
les
or
add
aad
add
xchg
mov
add
inc
jle
lods
nop
xchg
inc
test
stc
push
jp
andl
push
mov
push
mov
into
dec
push
in
pop
adc
out
or
shrl
xchg
fs
or
adc
jo
lea
outsb
in
mov
jmp
adc
push
shr
inc
dec
adc
xchg
jo
jmp
lods
sti
inc
mov
inc
dec
nop
rolb
mov
push
inc
lods
ljmp
out
mov
movsb
pushf
or
push
xor
xor
add
mov
lea
in
push
out
loopne
enter
popf
pop
lea
in
lea
sub
rep
clc
call
mov
push
mov
loope
std
or
filds
push
sub
cld
sbb
add
repz
ljmp
mov
std
adc
scas
cmpb
loop
sub
mov
sub
bound
adc
nop
inc
add
sarl
push
test
enter
lods
add
xchg
mov
les
das
push
dec
lcall
sub
cmpsb
cmp
js
les
add
sahf
lods
sub
mov
ret
add
fildl
cwtl
lret
imul
fmull
or
add
inc
mov
ret
mov
loop
xor
push
daa
roll
lods
cli
push
inc
pop
cmp
dec
scas
add
scas
aad
imulb
bound
xchg
mov
js
loop
fistpl
pop
jmp
inc
outsb
in
push
add
cmp
pop
inc
xchg
mov
pop
push
jmp
sub
insl
leave
push
mov
push
push
jmp
xchg
push
add
xor
jmp
movsb
sbb
in
mov
mov
movl
add
sub
xor
jmp
insb
fndisi(8087
adc
fndisi(8087
adc
push
add
adc
ljmp
add
add
jle
call
xchg
sub
push
cmpsb
adc
sbb
add
rolb
mov
sahf
add
mov
pop
rolb
add
add
add
add
add
dec
and
idiv
mov
outsb
std
fnstsw
addl
add
test
add
add
fimull
jns
sbb
cmpsb
inc
add
adc
push
sbb
rorl
pop
add
add
sbb
add
jbe
push
pop
add
pop
add
lret
call
cmpsb
leave
jge
mov
pop
mov
mov
inc
call
push
mov
add
pop
add
and
jae
add
add
movsl
push
or
mov
mov
add
dec
adc
mov
ja
pushf
fmul
cli
stos
xor
out
push
lret
sbb
add
cli
jnp
or
add
push
sub
arpl
push
xlat
pop
and
out
or
fsubrl
push
mov
dec
les
add
push
loope
add
add
jmp
sbb
je
hlt
stos
xor
loopne
xor
sub
add
cmp
jns
mov
mov
push
and
lods
lahf
and
add
sbb
add
inc
les
into
fld
push
mov
mov
divb
dec
iret
sub
inc
int
bound
orl
add
add
add
xor
out
inc
mov
aam
mov
jge
jle
pusha
test
sbb
lret
insb
loope
test
adc
jle
xchg
push
xchg
les
sbb
sbb
add
pop
incl
add
test
scas
out
push
insb
jg
lds
clc
pop
xchg
jae
pop
repnz
sarb
iret
rorb
outsl
scas
pop
mov
clc
jb
sub
xchg
mov
das
ljmp
push
pop
mov
test
or
dec
lock
dec
call
push
adc
sbb
shll
mov
pushl
outsw
loopne
std
mov
pop
pop
xchg
mov
fnstsw
call
scas
mov
loope
cs
cmp
shl
pop
cmp
in
inc
sarl
out
mov
lret
xchg
dec
add
lods
dec
jns
imul
inc
and
xor
xor
insb
pop
jp
push
inc
sarb
mov
sbb
pop
out
push
jae
out
mov
or
xchg
add
add
mov
mov
jae
aaa
xor
aaa
sub
and
cmp
and
xchg
call
insb
add
jl
popf
fiaddl
mov
push
test
jnp
shrb
je
add
aaa
les
jp
cli
inc
mov
ret
inc
dec
mov
aas
test
or
jecxz
mov
dec
ror
repnz
dec
out
xchg
ljmp
jle
or
andb
cmpsl
sub
rolb
pop
cmp
xor
lret
pop
adc
sahf
in
push
add
scas
lret
cmpsl
adc
jne
out
push
insb
enter
mov
dec
adc
pop
cmp
add
add
lods
clc
cs
jae
xchg
dec
inc
out
jb
lods
imul
jge
loope
cmp
push
fnsave
test
sub
call
or
std
push
mov
fs
add
push
mov
test
enter
mov
insb
sahf
inc
aad
addb
subl
mov
xchg
pop
stos
loope
xchg
fnstenv
xchg
les
pop
xorl
cmpb
sub
insb
cmp
jb,pt
add
pop
push
decl
pop
inc
sub
addb
je
jno
je
jno
push
or
les
pop
outsb
add
mov
add
push
loope
out
lds
pop
std
add
and
dec
push
fwait
jle
and
sbb
mov
in
jle
daa
divb
mov
add
sub
or
push
sbb
dec
insl
inc
inc
xor
sbb
lahf
add
dec
ljmp
les
in
testl
inc
mov
or
std
incl
add
add
push
imull
ret
sub
lahf
xchg
sahf
test
sahf
lods
xor
ja
xchg
mov
add
mulb
push
and
test
clc
lret
dec
push
mov
inc
add
pop
ret
pop
pushf
add
adc
test
push
lds
cmc
and
out
add
cmp
mov
nop
add
fdivrs
in
xor
fstpt
iret
push
sqrtps
mov
mov
dec
inc
lcall
inc
dec
pop
adc
les
mov
pop
push
push
lds
stos
lldt
mov
jg
add
or
inc
dec
pop
mov
int
inc
cmp
addr16
lods
sub
cmp
std
and
test
lods
into
jge
popf
lret
xchg
xor
lock
mov
mov
inc
mov
jbe
sub
arpl
out
add
or
stc
hlt
das
add
dec
outsl
outsb
loopne
add
or
rorl
std
aad
orb
js
dec
aaa
aas
test
add
mov
xor
adc
mov
jg
mov
cmp
jo
les
lcall
addr16
xor
cmp
xchg
dec
imul
imul
pop
jne
cmp
mov
les
popf
inc
lea
mov
jae
jo
inc
testb
or
jl
and
inc
inc
cmp
add
add
repz
pop
jbe
pop
pop
mov
mov
push
push
lret
push
rcrb
lahf
inc
je
xchg
mov
mov
inc
xor
iret
xchg
and
rcrl
pop
mov
add
add
add
cmp
push
cmp
out
inc
mov
cmp
pop
lds
add
add
call
roll
mov
jp
mov
lods
aaa
fdivr
jns
icebp
enter
sti
jns
mov
mov
popl
les
mov
xchg
jmp
repz
sti
cli
in
repz
sbb
mov
mov
and
ret
jne
out
ret
enter
add
jl
jb
push
subl
inc
nop
xor
xor
push
or
movsb
adc
sub
and
cld
cwtl
dec
rorl
stos
movsb
ret
and
lret
imul
add
aas
push
scas
mov
adc
shrb
dec
sub
dec
enter
dec
ffree
push
lea
stc
mov
inc
mov
hlt
lds
or
sbb
jb
in
out
inc
push
jb
adc
xor
ss
adc
or
jo
add
dec
push
sub
add
add
jp
push
aaa
in
add
jbe
dec
or
aam
lods
or
mov
push
add
in
fsubrs
ss
std
xor
aad
clc
sub
sbb
shl
outsl
sti
xor
add
and
data16
ds
dec
mov
loopne
out
jge
cltd
dec
cmp
ficompl
movsl
push
add
outsl
sub
clc
jnp
test
fimull
mov
pop
sbb
ljmp
mov
add
add
loope
xchg
jo
ja
sub
je
stos
test
fcoml
cli
jmp
mov
jo
inc
pop
cli
rcrl
mov
lds
lret
cli
aam
les
ficoml
or
add
pop
adc
call
popf
add
ds
add
les
enter
int3
jae
xor
or
pop
xchg
loop
or
add
out
fmuls
ds
jno
out
fucomp
enter
inc
sbb
fwait
cli
or
je
cmpsl
in
jmp
or
lds
add
add
or
mov
ret
lods
in
test
mov
push
pop
ret
into
adcl
aas
loopne
retw
pop
push
adc
inc
hlt
test
push
mov
jmp
xchg
jae
mov
adc
cmpsl
dec
hlt
test
push
mov
jmp
xchg
fs
fucomp
add
test
fucomip
push
jmp
inc
sbb
mov
les
add
sbb
sbb
xor
test
idivb
add
movl
inc
call
stos
clc
jb
adc
add
adc
stc
cld
sbb
jmp
leave
add
sbb
push
fisttpl
aad
adc
lret
ret
sarb
xor
mov
ret
ret
test
add
movl
inc
lds
lahf
rolb
jbe
sti
mov
pop
test
sbb
mov
movl
icebp
jge
push
addl
or
data16
stos
divb
mov
ret
dec
mov
in
adc
xchg
jbe
popf
push
push
push
jnp
pop
sub
stc
aas
jne
fstpt
loope
std
adc
xchg
add
pop
cli
add
outsl
or
mov
loopne
insl
adc
adc
cltd
sub
cltd
push
outsl
sbbb
xchg
pusha
add
sahf
mov
or
fdivr
xchg
and
adc
stos
inc
add
adc
mov
and
in
jge
std
inc
xchg
dec
mov
scas
adc
roll
sbb
lds
sbb
mov
and
test
mov
add
add
roll
movsl
dec
insb
fsubrl
leave
pop
push
mov
jne
xchg
stos
add
jp
push
mov
xor
das
ljmp
xchg
out
dec
mov
roll
movsl
iret
jle
adc
rclb
movsl
mov
adc
call
mov
or
inc
lds
ljmp
movsb
in
xor
insb
mov
add
add
lods
jp
mov
add
push
movsl
lahf
ds
jmp
jl
sbb
adc
xor
add
lret
fs
ljmp
clc
push
xor
lock
mov
cmp
stc
mov
add
xor
jmp
xchg
hlt
out
cmp
push
add
push
in
push
stc
test
xchg
add
cmp
lret
jmp
jb
mov
adc
ja
push
leave
push
cli
faddl
push
test
xchg
in
test
xchg
xchg
arpl
mov
xor
xchg
pop
call
mov
push
and
pop
or
test
fisttpll
mov
jmp
add
lds
bnd
fsub
push
loopne
xchg
call
add
and
call
test
or
pop
add
mov
inc
push
dec
mov
adc
push
cmp
and
jecxz
and
or
loop
mov
and
adc
test
xchg
mov
dec
mov
test
push
pop
pusha
idiv
inc
repz
jmp
xlat
insb
add
loop
push
and
push
ja
sub
inc
jbe
mov
clc
xchg
add
scas
cli
stos
push
test
testl
out
lods
out
mov
aas
add
and
ljmp
fidivl
add
sub
pop
xchg
jbe
pop
jl
test
inc
incb
add
add
push
jae
test
call
sbb
cld
cwtl
inc
jge
jmp
pop
sbb
incl
ss
jb
call
adc
cwtl
sbb
mov
les
xchg
cmc
adc
push
call
dec
mov
movsl
mov
les
add
cmc
shlb
in
lods
xor
out
add
cwtl
les
sarb
cli
sbbl
mov
lea
in
xchg
jo
ljmp
roll
in
out
xor
rol
push
adc
add
inc
shrb
cld
add
xchg
movl
mov
inc
shrb
or
subb
inc
jb
add
add
inc
aaa
jle
popf
or
call
inc
pop
std
shll
icebp
lahf
cmp
push
imul
push
inc
push
add
or
add
push
and
pop
outsl
cwtl
add
test
push
mov
dec
pop
pop
fmulp
and
xor
jns
pop
xchg
outsb
ds
push
mov
loopne
stos
or
test
fldl
add
inc
and
aam
lea
cmpsl
or
std
adc
popf
or
xor
sti
mov
push
add
mov
sti
jne
outsl
or
jmp
aaa
std
adc
les
cmp
xlat
jp
out
lods
add
xchg
scas
mov
leave
in
inc
pusha
loopne
pop
mov
cli
arpl
mov
rorb
dec
mov
xlat
cmpsl
jle
lods
xor
jl
xor
andb
xchg
inc
repz
inc
call
je
out
cltd
dec
or
mov
mov
add
mov
jmp
pop
add
cmc
mov
sub
or
add
sub
sub
fiadds
jmp
mov
jl
add
std
iret
into
push
out
imul
and
cmp
push
testb
neg
sub
dec
xchg
and
xchg
add
mov
inc
jmp
lock
fidivs
mov
pop
ficoms
iret
push
fidivs
cmpsb
fdivs
es
xor
ror
daa
es
mov
inc
jmp
add
add
rcll
add
jle
pusha
pusha
mov
pop
stos
adc
addb
or
sbb
mov
add
repz
loope
cld
pop
push
push
bound
mov
lret
lods
movl
jns
addl
test
inc
dec
add
shl
jmp
add
lahf
clc
insl
pop
sbb
imul
push
shl
sbb
jmp
jbe
push
add
repnz
add
sbb
movsl
test
bound
inc
or
inc
push
or
dec
pop
mov
mov
icebp
sub
outsb
mov
pop
pop
add
sbb
or
add
ret
pop
lahf
add
sub
jne
add
pop
sbb
push
fiaddl
outsb
mov
in
addl
xor
pop
jo
lock
inc
add
call
add
cmc
push
std
inc
mov
mov
add
cmp
lds
les
std
fdivl
std
push
stos
cltd
pushf
or
int3
fistpll
nop
fdivrl
cmp
stos
cli
adc
add
les
add
add
lock
add
sti
adc
lock
dec
lea
stos
cli
cmp
add
xor
jg
shrb
push
sbb
stos
add
movq
stos
cli
add
mov
or
test
ljmp
lods
rolb
add
jb
rorb
dec
jge
out
dec
xor
jp
add
test
jg
sub
inc
inc
filds
or
rorl
sti
jp
imulb
les
je
ret
test
add
mov
xlat
jno
or
das
rcl
popf
fsubrl
in
dec
mov
mov
sbb
sti
cmp
mov
add
add
jp
stc
hlt
cmp
inc
jmp
sbb
aas
in
mov
pop
dec
bound
js
adc
jb
idivb
xchg
or
pop
push
mov
js
sar
jg
lds
push
xchg
add
hlt
repz
jmp
into
push
adc
mov
stc
fdivl
inc
jmp
sbb
mov
add
mov
or
idiv
jae
sti
adc
fcmovbe
std
loopne
adc
orb
cmpl
out
incl
lcall
push
clc
or
mov
sub
rcrl
repnz
pusha
jb
cmp
int
lods
add
jno
rolb
push
mov
or
popf
fsubrp
je
pusha
or
cmp
jo
sti
jne
push
ds
repz
sub
and
add
xor
js
in
clc
adc
repnz
jae
sub
mov
push
je
inc
fnstcw
inc
lds
mov
int3
lods
push
xchg
lods
add
add
lahf
cli
jnp
adc
push
cmc
out
cld
shrb
lock
jnp
adc
lahf
cli
sbb
add
in
sub
into
dec
sub
cwtl
or
ret
mov
ret
ja
push
int
jecxz
stos
shrl
lods
je
ret
test
and
lret
add
lds
sbb
sub
xor
add
sbb
lock
leave
add
sbb
adc
sbb
or
jns
sahf
mov
sbb
xchg
int
cmp
dec
movsl
mov
icebp
inc
les
aaa
push
das
sbb
loope
pop
sub
cwtl
flds
or
push
and
or
mov
mov
add
jl
jmp
cltd
int
stc
je
jge
in
cli
popa
testl
xchg
outsb
icebp
pusha
push
mov
rcrb
mov
or
sahf
jecxz
std
xchg
std
clc
sbb
nop
push
test
inc
add
sti
shrl
or
push
loopne
mov
sub
ss
xor
movl
repnz
je
push
dec
and
cltd
mov
scas
pop
divb
adc
lea
rolb
add
or
ljmp
sti
adc
push
or
arpl
inc
add
popf
test
xorl
decl
xor
decl
or
pop
cmpb
pop
insl
inc
and
xchg
insl
sbb
in
sbb
or
cmp
and
daa
aam
scas
lods
lods
sbb
pushf
add
add
ret
out
pop
and
pushf
adc
or
iret
mov
test
adc
lcall
gs
sbb
or
aam
lret
mov
cmp
mov
cmpb
add
add
mov
mov
pop
xchg
std
sbb
pop
das
test
add
test
or
imul
xchg
add
mov
add
push
mov
sbb
repz
mov
les
jmp
shll
jge
stos
stc
nop
pop
mov
aad
jmp
sub
xchg
mov
out
or
rcll
pop
inc
inc
sbb
xor
shlb
sbb
jmp
std
add
popf
lods
lahf
sahf
xchg
lahf
pop
shlb
inc
inc
sub
daa
stos
inc
repnz
xor
clc
outsb
and
add
clc
jmp
jmp
inc
push
xlat
in
xor
pop
call
dec
lds
push
mov
mov
inc
clc
jecxz
jmp
xlat
test
pop
and
mov
inc
pop
or
cmpl
jb
test
mov
mov
mov
clc
cld
ja
inc
jmp
sbb
daa
cltd
cltd
mov
lcall
repnz
xchg
movsb
dec
add
xor
outsl
and
add
testb
add
push
pop
lods
enter
add
adc
fsts
test
cmp
mov
jg
cld
sbb
push
lret
ljmp
adc
data16
ja
ljmp
push
lcall
adc
outsb
sub
incl
jle
je
fadds
incl
add
add
ja
out
inc
ja
pop
fidivrs
pushf
cli
arpl
mov
out
daa
sti
das
mov
add
fcmovb
std
xchg
and
cli
xor
gs
xlat
cli
shll
xchg
in
test
aas
les
lds
jecxz
loope
fistpl
loope
shrl
stc
aas
les
add
and
jle
clc
xor
aas
fsts
push
dec
flds
xchg
add
xchg
xor
mov
ljmp
int
mov
jmp
stos
out
add
xor
mov
popf
mov
aad
add
xor
push
jns
add
repnz
cmpb
scas
nop
in
adc
add
add
jns
gs
outsb
pop
cmp
das
xchg
int3
sbb
ljmp
pop
ret
test
mov
repz
clc
addb
xlat
popf
ljmp
xor
jo
mov
stos
mov
nop
outsb
flds
push
jbe
add
aam
clc
inc
jmp
in
add
stc
aad
add
mov
ret
nop
push
add
enter
adc
dec
mov
mov
test
fs
cvtdq2ps
add
dec
cld
mov
std
xchg
or
cld
push
in
dec
dec
ja
les
insl
add
push
xor
add
fmuls
je
cmp
inc
mov
lret
lods
fcomip
out
or
add
enter
inc
push
adc
add
sbb
jg
cmp
pop
arpl
push
sbb
mov
sub
push
add
fstpl
call
cmp
fldl
ljmp
adc
pop
movsb
adc
pop
add
adc
scas
mov
mov
les
add
sub
xchg
add
add
cltd
iret
and
pushf
adc
repnz
mov
dec
and
push
ficomps
add
les
mov
aam
test
cmp
jecxz
je
daa
add
mov
fwait
je
lret
sub
mov
sahf
cmp
push
mov
jns
pushf
adc
mov
fsubrl
push
jne
xor
or
add
dec
fwait
cli
push
add
fdiv
mov
lds
sub
add
jecxz
or
jmp
mov
mov
mov
jg
mov
and
fwait
mov
jle
xorb
arpl
sub
sub
sarb
pop
mov
dec
inc
jecxz
hlt
test
lcall
call
add
cli
inc
inc
cmpsl
add
add
movl
or
roll
stc
cld
repz
jmp
loopne
ds
aam
push
cmc
xchg
leave
add
push
inc
dec
adc
mov
stc
xor
lcall
sbb
cmp
movl
add
jmp
adc
enter
aas
adcl
sbb
add
inc
lock
and
cltd
add
cld
cmp
rorl
add
inc
add
test
repnz
lods
rorl
mov
fnstenv
jno,pn
loope
push
incl
add
add
std
mov
rolb
sti
test
les
pop
add
add
clc
xor
add
or
mov
pop
or
fisubrl
xor
pop
push
sub
jns,pn
push
xor
mov
push
daa
adc
xor
cli
adc
add
dec
mov
stc
cld
out
rcll
add
mov
test
pop
add
sbb
add
or
je
add
mov
cmp
add
sbb
add
add
movzbl
add
ret
sub
aam
add
inc
popa
add
ja
es
dec
out
xor
addb
adc
add
ffree
jno
jmp
jno
add
fadds
fiaddl
les
add
push
sub
push
xchg
stos
mov
xor
inc
mov
scas
xor
add
xchg
adc
shrb
mov
js
loopne
xor
mov
in
cmp
popa
daa
loopne
inc
mov
add
add
xchg
shll
jmp
jmp
and
add
sub
inc
mov
jle
lret
xchg
cmp
push
rcll
xlat
dec
cmp
pop
add
fdivr
mov
dec
dec
jmp
jb
fdivr
fsubl
inc
pop
inc
mov
test
mov
dec
ss
jmp
add
clc
push
sub
jmp
mov
jo
sub
sbb
inc
or
cmp
or
gs
pop
das
add
xor
adc
cwtd
ja
bound
adc
scas
mov
add
adcl
pop
test
mov
enter
fistpl
add
push
pop
pop
mov
pop
ret
fmuls
mov
push
stos
mov
mov
cmp
and
pop
xor
cmp
mov
or
jne
mov
repz
fisttpl
jg
addl
mov
add
cmp
and
inc
add
scas
add
cmp
add
or
cmp
xchg
outsb
add
fmull
ret
popf
and
aas
jmp
and
sti
mov
out
aas
les
out
cld
pop
and
cs
lods
jg
les
push
dec
lahf
js
roll
int3
out
dec
add
sti
cli
out
sub
icebp
roll
sbb
insl
mov
push
sbbl
adc
add
sahf
add
dec
in
or
ljmp
add
mov
ret
push
leave
not
lret
sub
pop
jnp
xchg
or
ret
sbb
add
inc
push
hlt
sub
mov
fstpt
add
inc
ret
add
lea
lcall
cmp
neg
arpl
sbb
insb
inc
add
jb
sub
add
add
ja
sub
add
int3
sbb
cmp
jg
gs
notb
imul
add
in
or
ds
mov
inc
add
adc
cmp
xchg
jmp
xor
cmp
or
xor
fs
adc
fsubp
add
aam
dec
pushf
and
insl
fdivs
add
add
testl
das
ret
mov
add
dec
inc
push
jecxz
cmp
xchg
lock
decl
sub
ja
repnz
cmc
add
enter
add
adc
fisttpll
pop
dec
cmp
sbb
mov
inc
fbstp
inc
je
inc
lods
xor
inc
mov
std
adc
jmp
dec
or
mov
lret
adc
pop
data16
adc
mov
bound
les
xor
ljmp
xor
push
incb
les
xchg
out
iret
daa
inc
mov
xchg
repz
mov
or
cli
mov
repz
das
lock
scas
add
add
scas
add
outsb
jne
int3
in
and
repz
or
jnp
call
cld
sub
leave
jmp
pop
dec
lods
sbb
cs
and
mov
or
cli
clc
adc
lea
or
dec
adc
cmp
int
mov
inc
in
add
add
jmp
dec
inc
idiv
mov
cmp
add
mov
scas
sub
addl
add
add
nop
cmpsb
out
mov
out
aad
push
mov
sbb
stc
mov
mov
add
add
ljmp
cmp
out
push
data16
les
ljmp
jle
or
inc
add
rolb
mov
dec
push
insl
ret
test
pop
push
push
push
rorl
pop
or
movl
add
movl
std
fs
stc
daa
shrl
bound
insl
int
aad
adc
mov
clc
jmp
mov
dec
clc
cltd
lret
mov
pusha
sbb
rcll
push
sbb
add
add
push
and
insl
jp
mov
add
test
popa
cmp
outsl
insb
out
push
sbb
imul
or
jne
mov
test
gs
sbb
cmpb
jne
mov
or
sbbb
xor
std
je
gs
adc
add
add
in
adc
mov
and
add
sbb
in
pop
push
push
rcl
add
jo
inc
insl
inc
in
xchg
or
out
imull
and
dec
clc
rorl
hlt
add
dec
dec
stos
outsb
add
mov
jg
shrb
sti
fnstenv
inc
and
or
pop
out
rclb
add
sub
push
aas
aad
icebp
cmp
mov
or
add
add
add
les
xchg
ds
mov
adc
loopne
or
add
dec
insb
add
lods
and
inc
loopne
je
add
jge
les
sbb
or
xchg
aam
inc
outsl
repz
clc
sub
mov
jle
and
jle
mov
cld
push
inc
add
sti
mov
cld
inc
dec
sbb
les
aad
js
daa
pushf
jp
jmp
addl
fiadds
push
mov
fisttpl
cmpsb
mov
xchg
ds
rcll
xchg
mov
lods
xchg
or
pop
les
xchg
jg
xor
ficoms
dec
or
pop
add
sbb
bound
add
add
add
xchg
pop
lret
das
pop
call
cmp
mov
movl
xor
out
ffreep
in
rorb
jl
cmc
push
int3
pop
clc
ss
jle
mov
sti
cld
call
mov
stc
aam
cli
cmp
js
lds
mov
andb
cs
pushl
sub
and
ds
sub
out
mov
fimuls
incb
cwtl
jp
push
xor
sti
lret
cli
ret
cli
lret
call
jle
pop
pop
mov
xor
sub
js
leave
icebp
push
jge
inc
push
pop
inc
cli
shr
xchg
aas
sti
jmp
jge
inc
jns
fildl
add
add
cmp
les
call
dec
sub
pushf
inc
mov
les
mov
xor
add
lods
pop
and
mov
and
sbb
push
aas
cmp
aas
cli
pop
sahf
add
outsl
dec
jg
ja
xchg
jns
repz
jle
pop
and
lea
or
insl
ffree
fbld
or
xchg
ret
aaa
sbbb
push
jne
lahf
sub
call
cwtl
xor
popl
jae
dec
add
lret
iret
adc
subb
and
in
rolb
jbe
iret
jbe
pop
mov
ljmp
add
imul
push
pop
jnp
fmuls
sub
iret
aam
aas
mov
arpl
arpl
xchg
rcl
gs
call
xchg
xchg
pop
shlb
fwait
adc
inc
outsl
xlat
sub
les
mov
dec
ret
in
jg
in
aas
outsb
ljmp
loope
xorb
stos
fistpll
fadds
stc
mov
idivb
add
mov
mov
add
add
sbb
das
insb
mov
ljmp
add
inc
mov
out
roll
push
lds
aam
js
aam
jmp
lcall
test
adc
lea
add
add
jbe
mov
push
or
arpl
clc
in
push
leave
push
push
cs
adc
sti
das
add
xor
hlt
in
push
or
ja
movsl
femms
add
lcall
xchg
or
dec
je
imulb
sarl
sub
or
mov
adc
or
push
xchg
add
mov
leave
jne
or
push
leave
push
push
xchg
xor
sbb
add
aam
cmp
add
add
sahf
add
dec
stos
fmuls
dec
mov
fcoms
mov
add
pop
dec
xchg
clc
xchg
inc
jns
pushf
mov
pop
fistpll
test
cmp
xchg
pop
cltd
mov
cmp
pop
les
xchg
inc
lock
mul
popa
inc
jle
dec
sub
push
dec
mov
jge
add
clc
sub
jb
out
stos
push
and
pop
out
inc
jae
ret
ja
jae
enter
std
sub
cmc
imul
mov
mov
jmp
add
xor
fcoml
jne
sub
fadds
jg
xorl
dec
sub
std
xlat
subb
hlt
sbbb
test
lahf
pop
mov
xchg
in
int3
out
enter
sub
push
outsb
shrb
pop
xchg
jecxz
push
push
lahf
in
cmpsl
fdiv
mov
add
fisttpl
pusha
lock
outsb
add
add
lods
jmp
push
push
pop
in
scas
loop
mov
int
call
add
mov
push
cmp
jmp
rcrw
cmp
in
xlat
push
jb
push
add
mov
idivb
in
fs
xchg
inc
xchg
adc
add
popa
rolb
dec
push
push
adc
mov
or
or
scas
add
push
ds
push
mov
sub
imul
xor
and
adc
xchg
ret
cmp
je
arpl
jns
dec
pushl
adc
mov
or
lret
mov
pop
loopne
mov
popf
shl
insl
sub
xchg
mov
xchg
pop
dec
inc
jno
adc
add
frstor
push
je
ljmp
in
add
add
cmp
pop
iret
gs
repnz
test
adc
add
or
mov
adc
push
lods
jnp
cli
mov
cmp
mov
adc
cmovno
sub
dec
subps
push
jle
push
lods
add
out
leave
xor
add
cmp
push
mov
push
xlat
mov
sarb
filds
add
add
xor
jns
jmp
dec
jbe
iret
out
jae
fsubl
inc
fildl
cmp
repz
adc
inc
sub
std
inc
inc
inc
scas
adc
mov
les
jl
imul
pop
sbbb
fcmovbe
sbb
jae
out
mov
sub
daa
loopne
imulb
xchg
jge
sub
jp
sub
add
add
xor
mov
adc
lret
fdivrs
cli
shrl
xchg
push
rcrl
and
out
shl
scas
sub
adc
and
cli
xor
dec
add
adc
in
les
dec
jb
and
sarl
aad
movsl
stos
cmp
lods
jmp
mov
repz
add
rcrb
rcr
std
je
out
leave
out
jb
push
inc
inc
inc
xor
out
pusha
push
aaa
fwait
xchg
add
cmp
jo
mov
jnp
sbbl
dec
fstps
adc
add
cwtl
ret
jmp
mov
push
ja
jl
add
add
ret
add
aam
add
mov
insb
add
pop
xor
cmc
sub
mov
ljmp
pop
fdivrl
mov
mov
out
ss
frstor
push
cmp
je
sub
rcrl
lret
sub
or
or
xchg
arpl
pop
lret
mov
sbb
sbb
pop
dec
pop
xor
lret
xor
add
add
dec
aam
mov
push
or
adc
pop
fisttps
push
pop
add
dec
mov
add
inc
lret
lret
and
push
lods
cmp
cli
mov
lret
pushf
aam
stc
mov
jae
dec
xchg
push
hlt
or
test
gs
imul
add
js
or
jle
stos
push
addl
add
add
push
addr16
xlat
sub
cmp
cmp
mov
xchg
jne
and
jge
subl
push
adc
xchg
aas
jl
shll
push
js
stos
add
shlb
repz
ja
mov
add
add
jnp
add
add
jo
les
pop
jmp
cs
repz
clc
inc
jmp
test
xor
pop
sub
xor
test
fwait
call
push
mov
cmc
outsl
push
cmpl
stos
dec
ror
xor
cmp
dec
adc
clc
faddl
adc
add
test
in
stos
push
mov
repnz
mov
xchg
xlat
mov
das
adc
addl
js
adc
xor
cmp
pop
xchg
cmp
push
push
test
push
sti
shr
les
sub
sub
mov
ds
je
and
rolb
adc
inc
and
lcall
mov
add
add
add
inc
add
xor
and
pop
inc
add
push
shll
sub
or
ror
js
les
push
jl
test
lahf
ficompl
out
sbb
adc
inc
lds
lock
shlb
leave
xchg
les
xor
jg
les
jnp
push
dec
cmp
pop
jb
lds
sbb
cli
inc
lahf
icebp
cmova
mov
cmp
mov
ffree
lcall
sahf
add
imul
into
out
dec
add
dec
mov
or
dec
arpl
add
jmp
les
test
repnz
push
fisttps
les
out
lret
push
daa
add
add
pusha
mov
dec
ss
pushf
ret
insb
xor
ret
jp
std
imul
jle
ret
add
jmp
test
shr
adc
push
add
xor
jmp
leave
xor
ret
sbb
imul
clc
adc
mov
add
add
ds
out
std
push
add
add
inc
loopne
cltd
xor
ret
lea
rcrl
mov
gs
mov
jmp
push
lock
imul
aam
aaa
dec
ret
xchg
xor
clc
pusha
add
imul
mov
inc
sub
loop
ret
dec
iret
mov
add
add
inc
add
rorl
jbe
add
es
add
popf
add
push
cmp
cwtl
bound
inc
lods
add
dec
jnp
test
jns
data16
andb
mulb
inc
mov
cmpsl
add
out
mov
cmpsl
add
gs
pushf
movsb
cmpsl
or
cmp
movsb
movsb
cmpsl
adc
and
inc
orl
inc
mov
inc
jg
pop
dec
mov
clc
xlat
xchg
not
xchg
add
inc
test
mov
dec
lcall
add
aam
test
adc
or
pushf
add
add
xor
add
pop
in
daa
int
out
daa
add
in
outsb
insl
xor
add
add
add
inc
or
add
inc
xchg
aad
jecxz
sub
sub
lds
les
in
pop
lods
xor
out
es
ja
arpl
insb
dec
or
add
nopl
jae
jmp
fdivrl
inc
adcl
into
jmp
jmp
std
cmpsb
add
stc
mov
imul
mov
push
add
push
jmp
xor
fisttps
imul
jae
paddb
dec
jae
arpl
push
aad
fidivrl
mov
add
arpl
jno
add
add
add
adc
mov
or
jb
mov
cmp
push
sub
or
lods
mov
pop
clc
add
add
dec
mov
mull
cmp
add
insl
sub
sbb
pop
pop
pop
clc
push
sbb
or
jl
insl
arpl
pop
lret
add
fst
jns
jbe
rorb
sarl
or
dec
rcl
jb
nop
dec
stc
stos
and
ljmp
jge
pop
pop
cmp
out
out
test
add
add
fbstp
cmp
mov
pop
mov
sti
mov
pop
mov
es
add
bound
add
lahf
push
mov
jecxz
sub
add
xchg
add
lahf
sbb
pop
sub
in
enter
jecxz
sbbl
or
mov
loope
cld
jne
or
jp
mov
cld
push
hlt
push
dec
pop
add
sbb
shl
ja
cli
add
ja
lahf
movsl
ds
xlat
shlb
shr
je
out
jle
pop
les
pop
inc
out
out
inc
das
scas
addr16
int3
jmp
xsaves
or
pop
sbb
cli
jecxz
adc
adc
xchg
push
inc
mov
sarl
fisubrs
lock
xorl
in
test
sub
and
xchg
add
add
mov
jge
outsb
jp
push
popa
jae
inc
xor
arpl
push
jmp
xor
rcll
into
daa
mov
adc
cmpsl
stc
pop
cmp
in
imul
idivb
inc
cmp
into
xchg
enter
fdivr
testl
cli
xor
mov
xchg
cmpsl
jl
sub
outsb
fdiv
fstps
ret
adc
jl
adc
cmpsl
add
out
add
adc
loope
cmp
push
mov
clc
jb
xchg
sbbl
addr16
jb
or
cs
fsts
bound
pop
xor
hlt
mov
add
push
mov
push
lahf
push
adc
ss
inc
add
daa
mov
jmp
jbe
dec
sahf
adc
sbb
jge
std
xor
push
pop
mul
fildl
sbb
filds
sbb
pop
clc
add
fnstcw
stc
add
push
leave
cmc
jle
stc
or
dec
xor
pop
xchg
pop
pop
aam
or
pushf
in
add
adc
imulb
and
fldl
add
shlb
mov
mov
pop
cmc
fldl
push
add
and
and
add
mov
cmp
push
es
das
push
cmp
addb
add
insl
push
das
xbegin
add
push
pop
pop
push
mov
inc
xor
push
dec
jnp
inc
jp
aam
inc
jne
dec
sub
test
mov
jne
das
jo
sti
sbb
xchg
std
cmp
into
xchg
je
stc
sti
jnp
dec
stc
xchg
faddl
jecxz
adc
adc
pop
ds
jae
xor
add
outsb
aas
inc
sarb
add
xlat
add
scas
or
or
ds
or
or
pop
pop
mov
fdivr
xchg
push
testl
pop
aas
fwait
insl
dec
xchg
ss
subl
sbb
in
cmp
mov
or
loop
test
je
iret
mov
add
addr16
mov
adc
iret
mov
ljmp
sbb
inc
push
inc
loope
pop
daa
jns
sbbb
aaa
nop
mov
mov
dec
xor
fwait
jle
add
fstps
test
jle
pop
bound
pop
test
movl
sbb
movl
inc
xchg
outsl
jo
clc
xor
mov
mov
insl
push
addr16
add
dec
rcrb
sub
jmp
cld
or
mov
and
scas
jns
pop
add
ret
insl
pop
mov
push
cmp
js
insl
call
push
inc
pop
fsubr
test
add
add
aad
testb
add
icebp
adc
sti
xor
cmp
jns
fldl
mov
jo
je
and
xor
push
add
add
loope
push
sbb
pop
cs
sti
mov
out
daa
rcrb
push
es
add
pop
xor
icebp
push
fucomi
test
cli
cld
cmpl
add
push
cmp
pop
mov
ret
ljmp
ja
shr
pop
add
imul
imul
je
add
out
jmp
cli
mov
jg
sub
imul
jmp
imul
loope
cli
dec
sub
xchg
bnd
imul
adc
out
mov
add
lret
das
stc
push
sbb
jns
mov
jmp
or
mov
xchg
mov
sbb
roll
fcmovbe
cmp
inc
idivb
pop
inc
negl
test
cmp
lret
ret
fcmovbe
pop
repz
insb
inc
mov
jmp
sarl
adc
test
repz
inc
push
lcall
adc
jg
rcr
jp
insb
in
jle
rcr
jl
insl
pop
mov
pop
mov
cmp
push
jmp
mov
insl
jge
mov
dec
scas
sbb
pop
add
add
lret
fstl
test
mov
and
and
sub
cwtl
insl
in
sub
jmp
pop
clc
sbb
mov
sbb
rcr
clc
mov
pop
clc
bound
ljmp
add
aaa
xchg
push
jmp
add
add
or
jmp
lea
pop
jg
jp
push
push
sbb
jl
sbb
adc
xor
ss
add
fiadds
ja
test
in
sti
inc
push
ret
push
dec
data16
fimull
push
movb
mov
mov
push
cwtl
inc
push
mov
and
add
das
push
mov
mov
and
roll
bound
imul
sub
dec
and
mov
cmp
xlat
addb
add
sarb
cmp
stc
push
ret
or
jl
call
push
out
xchg
mulb
ja
je
in
ds
sar
cli
hlt
push
pusha
jae
in
and
add
add
jae
daa
fdivr
jae
sbbl
outsb
pop
adc
push
incl
std
or
addr16
and
jae
jmp
adc
xor
sbb
push
sqrtps
add
lahf
adc
jle
pusha
test
push
ja
movsb
jbe
cmpsb
sbb
out
lcall
insb
inc
out
jno
subb
pushf
int
add
add
andl
add
mov
xchg
andb
shl
fadd
jae
movsl
sti
ljmp
shlb
add
pop
adc
push
arpl
dec
lret
sahf
pop
jmp
mov
inc
rcr
jp
gs
gs
bnd
mov
nop
lock
mov
mov
push
jae
dec
lret
mov
add
add
add
insb
in
ljmp
add
stos
mov
fucom
mov
aad
mov
mov
xor
fldenv
mov
fwait
xchg
sar
es
or
lods
out
leave
add
rcl
into
xchg
clc
neg
rcr
cmpsb
xchg
clc
out
inc
pop
aas
jge
ret
stc
mov
sbb
add
frstor
add
add
insb
mov
outsb
xchg
outsl
scas
or
fistl
add
fiaddl
push
cltd
or
pop
int
hlt
popa
enter
arpl
lcall
call
or
rorb
fucompp
jg
add
jmp
dec
leave
scas
testb
out
push
mov
ss
xchg
scas
xor
push
test
lock
js
push
sub
xchg
push
jg
xor
cmp
je
std
xchg
sti
adc
sahf
mov
push
lea
les
aad
shll
int3
out
pop
pop
adc
mov
or
imul
ss
mov
adc
sbb
dec
inc
addl
add
test
cli
cli
push
xchg
xchg
daa
dec
repz
or
or
dec
jo
add
insl
or
ret
pop
fisttps
insb
mov
enter
pushf
in
inc
les
lds
cmp
push
add
add
xor
jnp
mov
push
arpl
fldpi
push
cmp
bound
or
mov
repz
out
xchg
jg
addr16
bound
adc
fildl
inc
dec
jmp
xchg
push
pop
push
test
and
add
shr
adc
sahf
add
add
jl
lea
dec
push
dec
sar
incl
jmp
enter
xchg
jo
jmp
mov
out
mov
jmp
cmp
lock
fnstenv
and
inc
lret
pop
adc
jae
dec
fsts
ljmp
add
inc
pop
or
xlat
push
lock
xchg
sub
sbb
loop
xchg
insl
rolb
faddp
add
cmp
aam
sbb
add
clc
aam
adc
inc
or
sub
add
call
das
in
fsubr
inc
jmp
or
inc
test
dec
inc
in
add
sub
lods
lret
inc
mov
cli
shr
and
add
pop
sbbb
add
rol
add
cs
cmp
pop
jmp
mov
jecxz
frstpm(287
jecxz
sbb
add
insl
xchg
sti
adc
out
mov
jge
je
jp
loopne
jecxz
out
rcrb
cmp
sbb
data16
aas
js
sbb
push
cli
add
loop
inc
popf
fsts
pop
pop
push
je
out
scas
cli
pop
movsb
pop
adc
sub
push
scas
ret
push
dec
xchg
pop
xchg
mov
add
xor
in
jmp
pop
add
les
je
pop
sti
xlat
mov
add
jp
fcmovbe
inc
test
insl
or
sbb
mov
or
test
cmp
add
push
leave
ljmp
mov
cmp
and
inc
arpl
dec
cmp
in
jp
add
add
mov
dec
fsubs
mov
pop
mov
xor
jno
lahf
andl
add
test
mov
jg
arpl
pop
inc
pop
and
sub
mov
add
mov
mov
addb
jmp
or
or
mov
sub
dec
mov
imul
add
add
mov
inc
movsl
mov
adc
jmp
call
dec
loopne
movsb
push
add
xor
xchg
pop
gs
dec
js
imul
fmuls
fs
push
mov
push
xor
repz
cmp
xor
cld
add
aas
mov
fadds
push
dec
insl
or
inc
add
loopne
ja
and
js
add
leave
xor
mov
sbb
shlb
sti
call
pop
add
push
data16
inc
stos
or
test
or
add
addr16
inc
popf
test
fidivrs
pop
out
test
sbb
xchg
push
mov
add
add
dec
clc
call
dec
push
push
or
adc
out
jle
pop
shlb
dec
and
sbb
clc
in
or
call
repnz
rol
and
in
pop
adc
sub
lcall
rol
and
or
adc
dec
incl
ror
out
mov
xchg
repnz
adc
sub
repnz
pushf
add
xchg
add
les
add
test
in
add
xchg
add
mov
mov
push
mov
add
leave
mov
outsb
mov
into
jns
mov
ror
jle
in
cs
push
push
jle
imul
cs
push
adc
cltd
sub
inc
sahf
stos
cmp
add
jle
and
xor
aaa
stc
fimull
inc
jle
adc
aas
sbbl
jg
stc
leave
mov
stos
fucomip
mov
and
mov
push
nop
pop
pop
and
add
arpl
push
repnz
clc
xchg
sub
add
push
je
sbb
xchg
out
icebp
sbb
sub
add
imul
add
add
inc
push
cmp
clc
push
in
push
sub
ret
stos
ret
loope
mov
movsl
in
push
fld
add
mov
aam
jae
ds
add
sbb
mov
pushf
dec
sub
pop
cmp
ljmp
mov
mov
inc
add
push
jne
mov
sub
orl
outsl
adc
sbb
mov
add
add
add
shrb
imul
scas
sti
mov
test
insl
add
rcrl
mov
or
inc
sbb
add
aam
scas
sti
cmp
xor
call
jg
push
jne
add
mov
push
jne
out
divl
outsl
xchg
add
sbb
xchg
pop
add
test
and
enter
lea
stc
imul
je
sub
jne
imul
jne
push
add
imul
add
cmp
push
cld
and
lods
les
repnz
loope
testl
pop
cli
dec
popf
movsb
cmpsl
pop
sbb
or
popf
inc
mov
jno
imul
test
orl
add
test
add
jg
add
add
rorb
jns
in
jb
pop
insb
mov
pop
push
cmp
mov
push
push
xor
ljmp
subl
mov
dec
lds
mov
dec
sub
push
push
subb
outsl
shr
dec
dec
xchg
push
out
mov
lock
hlt
sub
inc
testb
ds
dec
inc
add
scas
aaa
add
test
stos
leave
add
imul
mov
dec
lret
mov
cmp
mov
jmp
in
pop
inc
clc
lcall
add
jbe
add
xor
rcrl
xchg
xchg
lea
clc
pusha
sbb
movsb
dec
cmc
enter
lods
je
enter
adc
add
mov
movl
jg
lds
adc
dec
aam
fnsave
push
sub
jg
jnp
cmp
je
test
adc
and
leave
xchg
dec
inc
rorl
outsb
and
xchg
lds
mov
rol
sub
inc
jge
sub
sti
mov
test
into
sti
or
sbbb
push
insl
cli
jne
xchg
inc
in
mov
sub
sti
push
sub
lods
adc
add
add
add
mov
add
add
sub
jg
in
adc
aas
decl
cmp
cmp
dec
addl
cli
jae
cmpsb
cli
shrl
les
push
push
push
in
add
insb
mov
cmp
mov
inc
les
sub
cmp
enter
jmp
push
inc
mov
inc
dec
adc
les
push
fwait
add
je
jl
mov
imul
push
mov
push
pop
inc
mov
add
aad
testb
rol
cmpsb
lss
and
jno
les
xor
pop
push
dec
adc
pop
push
mov
add
push
ds
iret
scas
leave
ljmp
add
add
inc
pop
inc
into
mov
add
add
mov
push
mov
call
pushf
adc
clc
jmp
pop
inc
mov
jbe
shr
sub
out
hlt
ljmp
int
inc
idiv
repz
dec
adc
mov
fbstp
or
inc
clc
jmp
mov
cmp
mov
jge
mov
xchg
sbb
pop
inc
mov
cmp
gs
jno
clc
std
negb
mov
mov
ljmp
je
xor
mov
popf
or
test
pop
dec
push
es
jl
jmp
xlat
sti
test
pop
pop
sub
add
add
imul
cmp
xchg
fsubr
add
xchg
jge
push
ret
insb
imul
mov
adc
sarl
adc
cmp
dec
stc
jbe
out
cmp
outsb
add
add
mov
aas
mov
xorb
ja
inc
loop
clc
stos
test
xchg
sub
lea
inc
cli
xchg
lds
cmp
enter
cs
out
sub
dec
cmc
push
cli
adc
jbe
ret
aam
add
ret
add
or
mov
movsl
cmp
dec
rol
les
add
cmp
les
enter
add
out
sub
ss
push
ja
mov
inc
adc
add
jbe
add
mov
or
xchg
add
and
inc
xor
les
insl
cmp
xor
xchg
ds
lods
sti
inc
push
lcall
push
bound
leave
ljmp
fbld
inc
movl
add
das
addb
xchg
roll
fs
xchg
jmp
je
xchg
push
sbb
imul
loop
sub
mov
xor
icebp
cmp
scas
outsb
mov
adc
push
bound
push
or
sbb
mov
stos
mov
jmp
jge
xor
push
int3
xchg
cmp
add
jl
adc
jno
add
mov
movsl
lods
adc
add
in
xor
jge
add
inc
and
fnstsw
pusha
insb
loope
and
out
dec
push
cmp
jge
mov
cld
ret
rcrb
lea
dec
and
je
insb
inc
fstpl
clc
add
incl
add
add
mov
inc
sbb
lods
mov
and
or
mov
lret
jo
imul
sub
les
xchg
mov
mov
dec
pop
ficoml
cs
and
inc
jae
push
mov
mov
pop
ds
mov
and
sbb
mov
shrb
jmp
pop
sbb
subb
adc
aas
call
jne
mov
test
add
les
jns
loopne
mov
or
lret
cmp
add
sub
adc
pop
incl
iret
or
and
roll
add
pop
mov
shlb
in
stos
add
sarb
dec
sub
ljmp
add
add
or
out
ljmp
cmp
add
cmp
add
sub
movb
ljmp
add
ljmp
xchg
addr16
mov
jmp
pushf
aas
and
mov
add
add
add
in
sbb
int
add
add
cmp
jmp
mov
fistpll
movl
clc
pop
add
sbb
cli
add
insb
xchg
out
jmp
movl
inc
or
movsb
ds
inc
sar
add
sbb
adc
jbe
dec
int
mov
out
xor
cmc
ret
adc
clc
push
add
add
cmp
inc
jns
hlt
aaa
xlat
imul
mov
loopne
jle
sti
mov
fadd
mov
mov
test
mov
mov
push
call
mov
add
testb
push
adc
add
incl
call
push
inc
and
xor
adc
add
add
push
and
std
mov
and
je
cmp
xor
ja
jne
inc
and
outsb
pop
pop
push
lret
les
jne
cmp
dec
int3
jae
cmpsb
addb
mov
sbb
clc
call
jne
fsubl
jle
les
adc
pop
sub
outsl
subb
or
mov
lock
dec
jns
test
jmp
dec
cld
jmp
outsl
test
addr16
cli
jb
jbe
aas
popf
mov
and
add
jge
jle
les
adc
stos
dec
stc
mov
push
push
xchg
push
cmp
movb
iret
mov
aaa
aaa
mov
mov
jbe
ds
pop
cs
dec
aaa
pop
inc
xlat
push
fs
mov
inc
ds
adc
push
aaa
negl
hlt
sub
inc
sub
lret
add
add
adc
scas
inc
xor
dec
cmpl
les
ljmp
andl
pop
sti
mov
inc
dec
inc
out
call
sbb
stc
outsl
add
data16
lea
call
add
out
test
push
cmp
sub
fmul
sub
cmpl
cmp
add
shrb
push
testb
add
xor
jecxz
sbb
xor
mov
sbb
cmpb
iret
les
inc
cmp
inc
repnz
test
adc
mov
fistps
test
int3
scas
inc
and
add
add
test
loopne
mov
sti
test
inc
lea
push
call
out
jge
mov
xor
xor
incb
test
loopne
cmp
inc
sbb
scas
add
jge
dec
and
rclb
sub
test
mov
and
sti
jmp
mov
xchg
push
or
daa
not
mov
clc
dec
sbb
jns
fldcw
dec
add
push
inc
andb
test
fnstenv
repnz
les
and
stos
or
inc
push
xchg
pop
out
xchg
push
dec
bound
ret
lahf
sbb
bound
inc
push
loopne
mov
add
inc
add
les
push
add
inc
dec
add
les
enter
add
enter
push
addl
test
out
cli
xchg
push
roll
add
jae
mov
jg
out
lret
sbbl
fs
xor
das
lret
mov
lock
jmp
dec
inc
and
mov
jae
ljmp
inc
lcall
add
add
push
mov
add
dec
fistpl
mov
test
pop
stc
ret
add
daa
les
mov
or
jl
dec
stos
or
loope,pn
add
cld
xor
lahf
pop
test
rorl
xchg
mov
cmc
shll
cmp
ret
jb
adc
mov
inc
aam
testl
into
jge
sbb
ljmp
mov
mov
or
loopne
pusha
xor
jb
push
jle
mov
jge
mov
add
cmpsl
add
cmp
inc
dec
inc
popf
in
movl
add
cs
jg
pop
loop
add
add
add
popa
pop
push
push
cld
and
jbe
or
test
je
adc
mov
jne
xchg
inc
insl
xchg
jge
adc
sti
push
sub
les
jge
mov
test
pop
dec
movsb
insl
add
add
popf
fsubl
add
ja
adc
lea
pop
sti
adc
les
inc
push
xchg
push
inc
adc
dec
incl
popw
xlat
lret
je
adc
std
pop
adc
cmpsl
cld
xchg
dec
icebp
fwait
mov
mov
pushf
aam
cli
adc
jo
push
je
xchg
mov
arpl
add
mov
mov
mov
inc
add
mov
add
add
mov
or
mov
add
int3
mov
inc
cli
and
sbb
inc
sbb
sbb
jmp
inc
and
imul
div
js
imul
inc
ret
ret
subb
scas
adcl
mov
jp
jbe
push
add
add
sarl
jle
pop
into
pop
push
into
xor
outsb
das
inc
fdivr
cmp
in
nop
jae
iret
ret
dec
sbb
das
mov
push
jmp
sbb
rolb
les
out
rolb
pushf
in
shll
testb
insb
sbb
sub
loop
rorl
test
outsl
insl
or
ret
sbb
add
push
ret
call
xchg
iret
xchg
mov
pop
mov
insb
je
sbb
sahf
or
clc
push
rolb
jne
push
add
add
movl
or
xor
jmp
push
rcrb
add
loopne
adc
sti
lea
pop
push
cs
test
std
adc
data16
or
std
adc
jge
inc
add
mov
push
bound
in
add
shlb
idivl
mov
ljmp
jne
subl
inc
insl
sbb
lcall
fisubrl
and
mov
add
lcall
jnp
lcall
add
cmp
add
mov
and
add
add
push
outsl
inc
les
xchg
inc
test
into
cli
ror
adc
pop
inc
mov
das
inc
testb
std
insb
inc
in
lret
pop
and
repnz
inc
les
mov
sbb
add
inc
sbb
sti
mov
sbb
jns
cmp
pusha
ljmp
pop
loopne
adc
ds
out
and
movb
rorb
flds
scas
cmp
movsl
cld
ret
sub
sub
xor
cmp
leave
mov
mov
js
jmp
jnp
cli
or
cltd
jmp
jp
icebp
jno
jecxz
mov
into
notl
jecxz
inc
out
xchg
add
add
imul
jmp
cmp
jmp
jmp
pop
inc
fs
jmp
shlb
jmp
or
arpl
sub
dec
sub
popa
and
inc
add
clc
jmp
jnp
clc
fidivrs
jne
or
idivl
jae
sti
add
loopne
dec
sub
stc
jmp
in
or
sbb
in
pop
test
idivb
inc
jo
jmp
int
gs
sub
sub
sbb
xchg
xor
jmp
mov
adc
sub
add
push
add
dec
push
dec
rolb
add
push
jg
and
adc
push
and
aam
inc
inc
pop
fidivs
inc
leave
popa
dec
xor
bound
adc
subl
mov
pusha
ljmp
lds
call
inc
clc
ljmp
and
lods
push
idiv
cwtl
jge
inc
insl
cmpb
xorl
sar
adc
and
mov
ds
and
cmp
mov
adc
mov
add
aam
add
aas
loopne
movsb
pop
sbb
test
jmp
ds
dec
imul
jb
xor
std
loopne
in
outsl
cmp
ret
sahf
std
pushl
pop
jg
mov
dec
in
adc
aam
mov
push
inc
les
xlat
clc
mov
cmpsl
sbb
jnp
inc
xlat
loope
test
jo
add
leave
test
add
stc
jecxz
sub
imul
jmp
or
stos
cld
js
outsb
dec
xchg
sub
scas
leave
xor
dec
or
shl
add
iret
push
pop
push
sub
inc
jmp
lahf
mov
sub
or
xor
push
add
add
add
mov
cmc
subl
sbbl
xor
imul
add
into
xlat
out
fs
mov
aas
inc
lahf
movsl
daa
je
popa
sub
hlt
sti
adc
push
into
mov
mov
rolb
mov
aam
test
mov
cmp
rolb
add
dec
jle
adc
imul
xor
inc
ljmp
adc
sar
cld
pop
adc
jmp
push
mov
pop
or
cmp
push
cs
je
and
adc
out
lds
push
dec
inc
cmpps
cmc
imul
dec
pop
out
stc
add
out
repz
mov
add
add
fsubs
mov
inc
cmp
out
mov
adc
add
jno
sbbb
inc
repz
fisttps
es
adc
leave
je
sahf
in
dec
les
test
jmp
push
xchg
add
dec
sti
loope
adc
enter
and
test
cli
and
arpl
mov
xor
add
hlt
das
xchg
das
jae
jbe
je
roll
sbb
cs
inc
out
mov
dec
in
sub
pop
xor
sub
stos
jle
out
in
je
cs
aas
pop
and
or
repnz
pop
incb
add
xor
subb
sbb
cmc
stos
jae
cmpsl
aad
mov
add
add
mov
divl
cmpsl
stc
pop
push
fmuls
stos
popa
test
cmc
push
psrad
xchg
test
out
fwait
popf
cmp
pop
sbb
xorb
xchg
sahf
fistpll
jmp
and
inc
ja
dec
jg
cwtl
sti
mov
sbb
sub
inc
int
pop
inc
aaa
pop
add
sbb
pop
sldt
add
fwait
mov
inc
inc
inc
sbb
mov
push
xchg
stc
aam
adc
jmp
inc
fldl
fnstsw
adc
jns
imul
std
cmp
call
mov
loope
vandps
push
push
pop
or
mov
mov
jmp
arpl
inc
jmp
mov
jle
sbb
xor
jmp
scas
cmp
jne
xlat
sub
imul
fsubrs
push
clc
inc
and
xor
add
jns
lods
or
test
pop
les
mov
add
push
ljmp
imul
add
add
add
jg
loope
inc
cmp
dec
fmuls
pusha
test
cld
loop
loopne
rcl
sti
pop
push
fsubp
xor
or
cltd
mov
shlb
les
les
push
dec
test
cs
sub
cld
call
mov
cli
insb
mov
cli
jnp
test
pop
fisubrs
xor
mov
add
mov
add
mov
das
mov
pop
add
sarl
inc
les
sub
das
pop
out
mov
sbb
inc
jle
or
jns
ja
in
iret
lcall
add
fiadds
jno
mov
add
mov
jge
xchg
shlb
sbb
cs
and
push
dec
rcll
cli
or
add
insb
dec
mov
lea
cmc
and
sub
jl
ret
add
sahf
add
or
les
or
lret
push
cli
ret
add
fcmovnb
add
add
push
add
lock
cmp
outsb
jle
sbb
imul
add
add
mov
aam
adc
dec
pop
outsb
xlat
sub
std
jae
cmp
push
ret
insb
pop
lcall
cmp
inc
ret
jne
rcrb
mov
iret
clc
cld
sbb
inc
jmp
les
test
out
or
push
clc
jmp
mov
jmp
add
idiv
pop
adc
mov
mov
or
imul
xchg
push
cmp
icebp
dec
inc
pushl
sti
adc
fs
enter
cmp
int
sti
adc
cs
or
sbb
cli
cmp
push
call
add
cli
out
ja
stc
out
fisttps
cs
insb
loopne
sub
sti
mov
sti
jne
out
or
mov
add
add
dec
add
or
loopne
add
mov
aam
pcmpeqb
je
pop
sbb
add
or
jae
aas
adc
cmp
add
pop
dec
daa
adc
sbb
pushl
sbb
cmc
outsb
sbb
jmp
adc
jns
push
in
mov
rcrb
mov
xchg
test
imul
bound
jne
fldcw
jne
into
sbb
mov
xchg
sbb
jne
shrl
sub
fcmovnbe
xchg
mov
popf
dec
loope
push
xor
xchg
dec
pop
pusha
lret
adc
xchg
xchg
out
dec
stos
dec
inc
repz
int
dec
jg
lahf
mov
jns
adc
gs
lods
push
lcall
stc
sub
rolb
add
add
cmpsb
mov
movsl
loope
std
in
repz
out
push
daa
sbb
mov
pop
jnp
pop
jae
lds
scas
adc
insl
fildl
pop
push
xor
call
pop
add
jb
fcmovbe
jb
jne
mov
jbe
mov
jp
push
incb
ret
cs
adc
lods
jno
mov
adc
mov
xchg
cmc
jno
mov
or
mov
cmc
push
adc
pop
fstpt
inc
inc
xchg
xchg
es
mov
xor
ja
cld
jbe
dec
push
fsubrl
rcr
les
push
add
sub
or
push
push
pushf
inc
and
add
add
jle
insb
imul
add
decl
adc
pop
ret
sub
sub
in
aaa
pop
add
add
in
iret
push
out
jnp
mov
and
push
inc
popf
fwait
call
test
push
sbb
add
movl
pop
inc
insl
cltd
inc
and
test
and
pop
sti
loop
fildl
add
add
pop
and
testb
mov
inc
loopne
ljmp
sub
push
lods
mov
add
dec
inc
xchg
decl
sub
sbb
jg
fsubs
les
pusha
fadds
xor
sbb
sub
enter
dec
call
xchg
mov
cmpsb
cmp
loope
hlt
mov
into
push
push
and
push
cmc
mov
add
adc
inc
inc
test
ret
das
sub
ds
incl
sub
inc
popf
push
sub
mov
sub
mov
xor
add
stos
add
xlat
xor
ja
out
mov
fadd
repz
adc
ja
lret
cs
sub
sbb
mov
jmp
jnp
cmp
repnz
jl
loop
jl
mov
sub
xlat
jg
add
fiadds
les
loop
jl
cld
std
dec
pmaxsw
mov
add
leave
xor
in
sbb
add
push
adc
adc
mov
mov
jg
fs
xchg
inc
fs
sbb
imul
mov
in
bound
inc
or
mov
xrelease
ficomps
clc
insb
jae
sbb
pop
jo
movl
les
mov
adc
pop
add
add
dec
push
adc
jnp
cmp
clc
lcall
cwtl
js
sbb
add
push
push
ret
dec
push
ljmp
adc
xor
mov
cmovbe
sbb
jmp
mov
push
ja
fstps
das
push
dec
mov
xor
dec
fyl2xp1
out
cmp
add
add
cmp
mov
les
push
lea
std
incl
add
add
cld
jp
mov
add
cmpsl
push
jle
adc
ja
add
lods
sub
inc
pop
jns
or
add
xchg
xlat
push
mov
sub
js
lds
push
cmp
sbb
mov
jno
lds
jmp
dec
mov
push
add
test
stos
les
add
cmp
cmp
les
jns
pushf
and
pushf
push
xchg
in
adc
jne
les
jmp
sti
sbbb
pop
jmp
hlt
fsubrs
sub
mov
movsl
mov
adc
repnz
add
xchg
repnz
popa
not
andb
push
jmp
dec
mov
std
sti
adc
sti
inc
mov
inc
les
ljmp
add
add
adc
es
mov
add
andb
xlat
dec
ljmp
and
imul
ret
xchg
or
jmp
adcl
jmp
in
jg
out
add
add
xlat
add
mov
fs
or
mov
or
add
push
push
jb
mov
xchg
xor
mov
pop
mov
xchg
pop
jecxz
sahf
insb
sbb
push
pushf
insl
in
inc
sbb
push
ret
test
dec
aaa
dec
or
mov
xor
push
adc
pop
in
sbbl
push
lock
mov
or
fisttps
lock
fwait
pushw
aam
nop
add
lahf
scas
jg
cs
shrl
mov
pop
imul
ret
pop
movsb
cmc
push
ret
sahf
and
dec
ret
cmp
fnsave
push
mov
icebp
xor
cmc
inc
add
sti
je
or
les
add
or
mov
pop
lcall
sbb
mov
add
add
cli
insb
mov
mov
imul
xchg
push
dec
aad
decl
sub
jle
and
inc
les
cli
xor
cmp
dec
push
test
lods
cli
mov
mov
std
mov
sbb
repz
mov
aas
les
and
cmp
add
add
or
cmp
mov
mov
cwtl
enter
adc
inc
hlt
out
jmp
mov
stc
ret
adcl
sub
adc
add
cli
lods
or
test
add
jae
xchg
jl
imul
repnz
popa
xor
xchg
loope
pop
and
jmp
seta
add
add
push
add
fiadds
add
lahf
cmc
mov
movsl
daa
dec
jb
in
jb
in
sti
sub
pop
in
xchg
call
mov
xor
movl
clc
mov
insl
sbb
and
cmp
in
les
add
add
in
mov
push
xchg
dec
cmpl
fisubl
stc
push
repz
add
xchg
or
idiv
lods
dec
test
push
test
fcmovnbe
add
or
pop
mov
call
ja
ret
pushf
js
subl
jne
pop
js
test
js
xor
add
add
pop
shr
call
das
push
jne
inc
fists
outsl
test
add
add
jae
cmp
mov
mov
add
ja
outsl
sub
loopne
sahf
out
sti
mov
hlt
jg
jo
lods
add
sbb
push
jae
out
addr16
add
add
std
jle
daa
mov
lods
adcl
fwait
inc
cli
add
mov
add
dec
test
mov
int3
stos
add
sbb
adcb
xchg
sar
pop
cmp
shll
mov
add
mov
and
out
fwait
inc
cli
inc
aam
jne
adc
in
mov
jae
lea
or
mov
nop
xchg
mov
cwtl
mov
add
out
xchg
cmpsl
stc
imul
ljmp
imulb
add
aam
inc
into
sarl
mov
int
ret
xchg
mov
cmp
lcall
stos
popa
mov
jmp
inc
mov
addr16
xchg
cmc
stos
add
int
cs
negb
mov
inc
cwtl
iret
mov
lods
pop
push
repz
pop
int
cli
mov
outsb
and
cmp
or
xlat
int3
add
mov
sub
or
lcall
adc
xchg
push
dec
fimuls
fidivs
xor
or
mov
push
cld
inc
jmp
dec
enter
dec
outsb
in
cmp
in
iret
push
std
imul
xor
cmp
add
add
lods
and
push
mov
cwtl
sbb
dec
cmc
push
push
add
sbb
add
cmp
and
je
filds
jbe
loopne
popa
ljmp
std
inc
clc
mov
dec
mov
lods
jle
sbb
or
adc
mov
rorl
or
je
std
addb
call
test
jb
rorl
jle
sbb
and
pop
dec
ljmp
or
out
add
mov
je
clc
or
enter
add
outsl
sarb
adc
dec
fcoml
ror
inc
fldl
cli
pop
cwtl
lret
pop
rcll
mov
adc
ror
inc
pop
or
test
add
or
in
cmc
jge,pn
cmp
inc
sbbl
sbb
or
sbb
mov
fidivrs
jl
push
inc
add
test
xchg
pop
fwait
fwait
repnz
rolb
sbb
add
add
outsl
push
lahf
js
sar
ljmp
add
add
test
les
pop
rcrl
popf
iret
or
xchg
and
ljmp
add
ret
lds
or
xchg
xor
outsl
ljmp
add
ljmp
bound
sub
xchg
incb
inc
inc
push
sub
or
add
adc
loope
insl
in
inc
adc
loope
in
addl
inc
cmp
push
sti
mov
cmp
add
jne
cld
test
int
pop
stos
rolb
add
or
inc
int
cmp
imul
jb
xchg
xchg
push
rcrl
lods
cld
push
add
jnp
mov
clc
dec
mov
push
clc
adc
jne
in
insl
or
inc
adc
jns
mov
xor
fisubl
divl
or
ljmp
mov
push
or
add
cld
subl
or
js
and
sub
js
call
std
add
push
mov
popf
pop
jg
fcoml
inc
jne
sti
xor
add
add
add
rolb
dec
jne
cmp
inc
les
inc
shrb
aas
jns
jmp
mov
mov
les
add
cmc
cmpsl
out
mov
add
add
clc
sub
jno
test
push
xchg
lods
add
push
and
pop
cmp
data16
testl
add
repz
les
cmp
test
xor
xchg
loope
dec
xchg
leave
or
adc
les
jo
insb
dec
outsb
subb
mov
add
scas
mov
addb
scas
mov
lea
mov
icebp
xor
stos
add
rclb
jmp
mov
add
add
in
sar
in
inc
shr
test
insb
shl
pop
addb
fadd
lret
stos
dec
loopne
dec
jmp
stos
inc
push
sub
sbb
jecxz
inc
pop
sbb
addr16
jmp
icebp
ret
add
ds
xchg
sub
sbb
addl
ret
pop
pop
stos
ret
add
icebp
in
xchg
cmpb
enter
or
inc
dec
add
pop
add
add
rorb
pusha
cld
sub
mov
dec
pop
cmpl
jbe
or
inc
daa
and
ret
insb
jle
mov
add
add
je
mov
movsb
popf
or
push
gs
test
add
pop
sub
xchg
and
sbb
decl
iret
sbb
adc
pop
arpl
add
jmp
shr
dec
push
xchg
xchg
adc
inc
jle
cmp
cld
cmp
xchg
arpl
iret
push
sbb
shr
sbb
lcall
outsb
pop
jg
ljmp
lar
loopne
adc
lods
lcall
pusha
decl
sub
dec
mov
sti
fwait
jo
or
or
clc
loope
mov
lea
rolb
jle
cld
add
jg
sub
or
jle
loope
mov
cmp
sub
xrelease
push
or
lock
je
cmp
cli
fstps
hlt
aas
les
jae
add
add
add
jae
xchg
push
jb
call
jg
call
mov
add
mov
mov
pop
fs
mov
fcmovnb
addl
shrl
and
les
popf
insl
jmp
cmp
add
jnp
iret
jae
sbb
add
adc
add
add
mov
cwtl
mov
sarb
rcll
adc
sub
les
and
adc
xlat
add
add
jmp
ss
cmp
insb
andl
rcll
dec
shrl
orb
repnz
xchg
je
inc
or
adc
xchg
ds
add
add
divl
push
or
or
or
push
data16
in
inc
adcb
cmp
loope
jns
je
and
subl
adc
push
push
popf
pop
pop
or
movl
mov
cmc
cld
jne
adc
stos
fdivrp
adc
jb
adc
jb
pop
pop
imulb
push
ret
push
mov
ja
pop
add
jmp
add
adc
xor
adc
ret
ret
rolb
js
cltd
push
dec
push
bound
add
or
sbb
sar
mov
push
sub
popa
dec
jae
pop
enter
sar
cmc
pop
cli
lret
imul
add
test
xor
subb
int3
cmp
fcomps
add
rcl
xchg
mov
mov
cli
fstps
ret
decl
sbb
or
or
das
lock
sub
cmp
push
sti
sbb
push
cli
add
pop
lcall
xchg
arpl
pop
jp
mov
jl
or
ljmp
mov
jl
or
call
leave
ret
push
push
add
push
fldl
into
dec
es
push
mov
add
mov
mov
mov
cld
ret
cltd
les
add
fnstsw
sbb
mov
insl
imul
push
pop
leave
ret
push
push
leave
call
xchg
mov
out
push
add
inc
int
mov
ds
pop
mov
and
mov
inc
jmp
cmpb
bound
push
xchg
push
jp
je
sbb
fnstenv
sbb
sbb
test
inc
fstps
cmp
nop
jb
sbb
arpl
cmp
adc
stc
xchg
mov
jo
ret
arpl
xchg
adc
enter
enter
movl
sbb
inc
add
add
repz
add
daa
sbbl
clc
mov
mov
cld
pushl
les
adc
fs
add
in
mov
add
add
mov
addb
inc
and
jnp
and
mov
inc
ljmp
jae
leave
sbb
dec
insl
or
jae
movsl
popf
fs
ftst
aas
je
shrb
stc
pop
jmp
dec
inc
daa
sub
aam
inc
sbb
gs
dec
int3
stos
call
repz
adc
pop
incb
add
add
in
nop
sbb
nop
out
push
lret
cwtl
jmp
cmp
sbb
in
add
hlt
push
gs
jmp
xor
cmp
decb
jnp
push
xchg
sar
inc
aam
scas
and
rcrb
mov
xor
pop
pushf
test
cmpb
sarb
and
inc
pop
les
jns
inc
push
inc
or
add
add
push
inc
push
cwtl
or
in
jb
jmp
xchg
imul
adc
adc
cli
adc
or
out
jmp
mov
mov
push
cmp
lret
add
enter
sub
loope
add
or
les
jmp
rolb
add
cmpsl
push
jmp
add
orb
out
add
rcr
jmp
movl
push
es
sub
cmp
jo
es
xor
xor
add
mov
bound
sti
ja
mov
dec
in
sahf
cmp
push
add
jb
and
and
add
add
and
push
cmp
dec
mov
movl
and
or
xchg
add
cld
jmp
daa
into
negl
sbb
arpl
mov
push
add
fstps
push
js
and
dec
mov
iret
test
dec
add
ja
and
pop
clc
imul
inc
jae
mov
xor
aas
je
mov
inc
arpl
cmp
inc
mov
inc
daa
insl
add
das
test
push
popf
add
xlat
pop
pop
clc
ljmp
aas
call
andb
andl
pushf
xor
jg
jbe
aam
les
xlat
movsl
jnp
je
mov
cli
xlat
push
out
aad
add
js
jbe
fsubrl
cli
jecxz
mov
in
dec
or
shll
out
insb
or
cs
or
js
pushl
in
stos
pop
jmp
pop
xchg
add
inc
loop
icebp
das
jne
test
ja
dec
and
mov
cmp
ss
das
or
dec
lds
flds
mov
adc
add
xor
test
add
add
mulb
xchg
ds
or
add
jbe
add
mov
not
xchg
mov
jmp
mov
shr
repz
inc
jmp
jl
in
cmpsl
or
movsl
push
mov
test
movsl
push
pop
xor
ret
add
dec
inc
add
inc
fs
inc
fs
jmp
add
call
xchg
add
enter
jle
ja
add
add
cmp
div
mov
ljmp
and
dec
bound
xor
es
jl
mov
xchg
push
xchg
push
insb
ljmp
add
jl
add
bound
sub
and
insb
leave
decl
outsl
dec
pop
pop
adc
or
mov
stc
xor
or
scas
or
je
mov
dec
decl
sbb
push
xchg
test
sbb
lcall
in
or
push
mov
sbb
xchg
xor
sub
pop
push
pop
cmc
pop
sldt
add
sub
push
mov
fistpll
int
icebp
je
outsl
inc
adc
sub
cmp
push
std
mov
add
adc
fidivs
aas
les
jns
call
add
test
mov
jle
ret
lcall
and
adcl
mov
rcll
or
loopne
mov
js
ljmp
loop
or
add
out
xchg
shlb
shrb
add
and
aas
les
add
test
jnp
int3
add
repnz
xor
roll
add
jg
jp
shll
aaa
hlt
xlat
inc
loop
out
push
nop
pop
ljmp
jmp
cmpl
jp
fistpll
mov
add
add
mov
les
add
sub
add
ret
fs
es
daa
sbb
repnz
fucomip
pop
adc
out
add
out
add
inc
es
pop
es
out
les
rolb
inc
jns
icebp
push
xchg
testb
jmp
in
pop
adc
push
leave
mov
sub
fs
idiv
jmp
push
subl
jge
xlat
mov
int3
sarl
or
push
push
cmp
inc
jne
adc
loop
inc
insl
mov
inc
dec
push
lds
pop
stc
jbe
mov
stc
adc
lock
pop
cld
pop
mov
mov
adc
stc
jbe
jge
lods
addb
cmp
mov
inc
push
mov
push
sub
stc
jno
jo
sub
push
cld
sub
push
add
add
lock
fnstsw
jmp
add
and
add
and
add
and
dec
stc
je
sbb
push
sbbl
mov
sub
push
inc
les
cwtl
or
fimuls
inc
nop
cs
stc
rcl
adc
pop
pop
cld
les
xchg
dec
cmp
fdiv
xchg
pop
inc
push
xchg
and
pushl
mov
inc
push
or
filds
or
fiadds
std
add
les
mov
mov
inc
pop
sub
imul
rcr
adc
lret
sbb
js
xor
js
xor
js
xor
js
xor
xlat
xor
jbe
test
cmpsl
jns
inc
cmpsb
jns
aas
sahf
jns
aas
mov
aad
cmpl
add
jns
aas
out
fldl
movb
xor
ret
fadd
test
cmp
out
out
lret
inc
jmp
inc
les
xchg
jns
push
xor
jmp
daa
mov
push
inc
push
int3
adc
add
sbb
fadds
push
mov
inc
rep
or
dec
pop
mov
mov
push
sub
add
in
mov
push
add
jmp
enter
mov
addl
pop
insb
cmpl
inc
cld
inc
mov
enter
aam
ret
mov
jo
cmp
enter
cmp
outsb
fnstsw
mov
imul
ds
sub
pop
jge
mov
push
add
add
add
sub
jg
sub
add
fdivrs
jns
add
out
mov
and
xor
sub
jle
jp
call
inc
add
pop
sbb
pushf
xchg
ds
scas
add
adc
adc
scas
les
jmp
pop
push
lcall
loope
inc
sub
test
das
inc
or
push
cmp
sbb
cli
sub
stc
fucomi
xor
test
add
ficoms
mov
fisttps
or
mov
lret
pop
mov
iret
jmp
jge
fiadds
add
fiadds
pushl
addb
ficoms
adc
loop
mov
add
mov
fiadds
xchg
lret
cmp
add
jmp
add
popa
dec
and
or
push
jb
psubsb
jecxz
cmpsb
fiadds
aaa
push
sub
or
jb
fdivs
subb
sbbb
add
lea
aam
test
add
push
add
hlt
pop
test
pop
mov
fcoms
dec
cmp
pop
inc
jb
adc
notb
imul
dec
movsl
in
jo
add
jb
enter
cltd
inc
jmp
add
stos
jle
les
add
jae
mov
lods
fdivs
hlt
outsl
repnz
inc
cmp
xchg
jmp
or
sbb
inc
roll
and
pop
lods
cld
push
dec
jb
arpl
movl
div
out
inc
jmp
test
mov
nop
cmpb
dec
ret
pop
push
fidivrl
mov
dec
fisubrl
cmp
inc
outsl
add
xchg
adc
rcll
out
stc
test
fimull
cmp
je
mov
add
add
add
loopne
std
cmp
or
dec
inc
testl
imul
pop
ret
pop
cmpb
sub
add
add
add
push
and
sbb
add
inc
gs
insl
in
adc
pop
inc
add
sub
jg
in
add
jg
into
jo
les
inc
xchg
sbb
xchg
add
les
cmp
and
in
jno
and
scas
gs
insb
fiadds
inc
add
icebp
xor
cmp
rcrb
rorb
sbb
add
aaa
add
loopne
push
push
dec
mov
insl
add
xor
dec
fbstp
cmp
and
arpl
pop
dec
adc
sbb
xor
dec
das
or
adc
cmc
pop
add
add
pop
lret
cwtl
std
cmpb
adc
xchg
outsb
jp
jo
incb
cmp
jmp
stc
inc
sub
jne
add
cmp
out
ret
lret
inc
jmp
in
out
imul
dec
call
test
dec
or
add
push
jb
add
movsl
add
test
shrl
jmp
inc
les
inc
loope
jmp
adc
add
imul
dec
sub
sbb
xor
movb
sarl
push
mov
jmp
scas
pop
orb
mov
pop
jo
inc
or
jo
int3
adc
pop
push
mov
mov
adcb
cmp
sub
test
ljmp
push
cmp
xchg
lods
enter
push
push
inc
adc
jnp
test
pushf
mov
xor
sub
xchg
add
adc
jo
push
adc
add
add
out
jno
sub
sbb
add
incl
add
xor
sub
outsb
data16
int3
popf
or
cmp
jae
push
push
adc
out
dec
lea
cs
lret
push
int3
insl
or
add
frstor
cmpsb
dec
push
jb
nop
inc
adc
jmp
inc
lcall
and
xor
xchg
lret
add
add
out
add
aam
aaa
and
push
out
jno
gs
clc
out
add
or
add
les
cmp
sahf
test
shl
stc
fstpt
adc
mov
add
les
cmpl
push
push
aas
mov
stc
sbb
add
sbb
lock
adc
xor
decl
add
imul
cmp
or
dec
push
stc
jle
pop
icebp
jmp
loope
cmc
inc
je
mov
nop
cwtl
in
stos
pop
mov
out
xchg
xchg
bound
int3
pop
sbb
cmc
std
mov
imul
sbb
pop
in
mov
cli
inc
les
mov
testb
jmp
inc
bound
hlt
push
popf
add
test
add
push
mov
add
add
lret
les
pushf
mov
sub
pusha
or
push
sbb
or
adc
jae
rcrb
sbb
add
cs
add
movl
ss
add
insb
out
ljmp
mov
jge
bound
insb
out
mov
push
out
imul
cmp
mov
filds
inc
mov
mov
pusha
sub
push
inc
fsub
mull
dec
dec
push
loope
insl
clc
into
decb
lret
add
idiv
insl
out
mov
pop
push
pusha
sbb
xor
out
dec
add
push
outsb
or
arpl
mov
pop
or
aaa
fildll
push
add
push
jg
add
add
add
add
rolb
add
sbb
shrl
sub
adc
adc
or
jge
fistpll
shll
mov
pusha
ds
add
add
or
and
fidivs
loopne
sbb
dec
fwait
pop
sbb
test
lret
test
test
or
jge
repnz
mov
aas
xor
xor
or
push
dec
and
outsb
and
inc
call
xor
sbb
in
xchg
in
add
dec
jg
inc
test
sbb
aas
movsl
sbb
mov
cmp
or
push
dec
and
add
dec
aas
stos
pop
adc
add
lea
mov
and
mov
add
ss
mov
sub
push
ss
or
test
dec
jno
sub
leave
in
dec
push
adc
pop
ret
loopne
test
or
mov
and
add
cmc
pop
ret
inc
push
pop
sub
dec
loopne
arpl
sbb
das
cmp
add
jg
das
bound
stos
push
mov
sub
mov
sub
add
add
add
imul
jmp
movb
int
xor
mov
outsl
adc
inc
insl
mov
repz
sti
pop
push
mov
rcrb
std
into
sbb
pop
mov
mov
xor
adc
inc
push
lds
add
mov
pushf
xor
sub
mov
or
dec
pop
pop
push
cmc
mov
outsb
notb
mov
inc
add
in
xor
pop
xchg
notl
rol
push
insl
cmpsl
inc
add
int
pushl
ds
add
lahf
ljmp
dec
mov
in
scas
in
cli
addl
inc
push
cmpsb
fsubs
mov
and
popa
jbe
adc
xor
inc
jge
je
push
adc
or
xor
cmp
or
inc
xor
sbb
lods
in
mov
mov
popa
mov
and
fbstp
pop
call
jbe
test
jbe
mov
pusha
rcrl
ret
push
dec
add
shr
add
or
xor
xor
cmp
push
pusha
cmp
xor
jae
and
dec
scas
outsl
daa
dec
lahf
jnp
bound
sbb
xor
xor
bound
xchg
clc
mov
daa
ss
outsl
fistl
push
add
std
xor
sbb
or
add
ja
hlt
mov
add
in
or
loopne
sub
in
icebp
movsl
insl
fdivl
icebp
fs
fsubrs
call
inc
mov
cmc
pop
dec
call
and
lods
mov
pop
icebp
lds
fstps
pop
test
push
loopne
les
fdivs
or
cmpsl
jnp
and
in
add
outsl
jmp
add
add
push
mov
mov
stc
mov
jmp
xor
jg
clc
mov
ljmp
xlat
mov
insb
add
jl
ret
lret
mov
test
mov
test
insl
jge
adc
insb
fsubrl
notl
hlt
or
mov
add
xor
add
jge
lret
sahf
mov
mov
and
push
es
push
push
jb
iret
mov
sarl
je
test
lods
push
add
mov
cs
loope
in
or
pushf
jne
jp
xlat
or
loopne
xchg
push
adc
jecxz
jbe
add
add
pop
ds
pop
incb
mov
push
adc
xchg
ret
loope
inc
sub
out
add
jns
je
les
mov
in
pop
add
sub
or
nop
lods
jb
xorb
cmp
mov
js
fbstp
push
stc
sbb
push
stc
mov
adc
push
inc
and
imul
dec
das
jb
adc
pushf
jle
push
imul
dec
and
mov
add
pop
jecxz
insb
call
ljmp
mov
js
mov
or
add
in
int3
fcomps
lods
cmp
dec
cltd
ds
mov
push
lds
jne
in
mov
and
jg
in
push
jmp
mov
lock
mov
fadd
dec
insb
add
push
inc
xchg
dec
mov
testb
dec
sbb
fldl
or
outsl
test
xchg
cli
sub
mov
idivl
das
jmp
jne
stc
sbb
test
fnsave
mov
jb
and
add
movl
push
out
push
mov
mov
rol
sub
addb
add
push
je
xlat
push
ret
add
in
and
lahf
sub
fldenv
xchg
xor
cmc
xorb
dec
outsb
dec
push
or
cwtl
add
lock
aaa
adc
mov
lods
loopne
in
repnz
bound
sbb
add
in
sub
icebp
outsb
add
sbb
je
add
add
sbb
fadds
adc
mov
ja
in
add
adc
js
inc
out
stc
jg
push
jge
std
andl
mov
sub
cli
fldl
js
adc
add
lds
add
pop
push
ds
jmp
lock
fstpt
jge
testl
and
pop
rorb
out
push
or
rolb
mov
je
cmc
push
mov
xor
adc
pandn
jl
sub
jmp
pushl
movsl
ds
jns
or
outsb
inc
les
incl
pop
inc
push
push
call
add
les
mov
enter
les
cli
mov
push
test
inc
push
repnz
sub
add
add
and
jp
incb
lahf
add
mov
add
or
or
xchg
cmp
cmc
rcl
out
enter
or
xchg
imul
fldt
add
mov
int
cmp
lock
cld
inc
les
lahf
inc
aam
lret
add
int3
push
lock
add
repz
stos
add
pop
push
lods
fisttpl
lods
mov
je
adc
jp
mulb
dec
dec
ljmp
pop
add
mov
adc
outsl
mov
adc
jo
addb
pop
push
or
insl
or
in
mov
into
insl
fnsave
lret
mov
call
incl
inc
jmp
pop
jp
sahf
loope
leave
stos
in
rorl
or
out
xchg
mov
out
pop
mov
insl
fisttpll
pop
insl
test
add
inc
sbb
repnz
cltd
std
add
loopne
stos
int
and
lret
insl
out
sbb
add
adcb
jle
std
or
add
subb
inc
add
cmpsl
fstl
add
jne
sbb
inc
adc
je
mov
out
lods
push
setb
test
bound
xchg
inc
push
jmp
ljmp
test
ss
jae
ljmp
enter
rsqrtps
jmp
fdivs
movlps
add
lods
adc
inc
insl
lods
sbb
adc
testl
add
add
or
adc
hlt
mul
ret
jecxz
aas
rcrb
xchg
out
mov
in
inc
in
mov
inc
add
mov
inc
add
inc
add
roll
aaa
fildl
roll
cli
fiaddl
add
inc
add
mov
add
mov
inc
add
inc
add
mov
add
push
push
and
popa
mov
push
jns
je
add
mov
adc
fs
enter
loop
clc
loop
ljmp
nop
sub
mov
pop
sbb
loope
adc
push
icebp
loop
dec
int3
add
xchg
and
adc
push
icebp
insl
repnz
adc
add
push
xchg
lret
in
iret
js
subb
inc
dec
lret
push
or
rcrl
sub
in
stc
aaa
mov
ffreep
aam
fnsave
rolb
sub
arpl
mov
popf
jnp
lock
outsl
call
jge
sti
decb
xchg
leave
inc
mov
pop
or
out
and
aad
ret
ljmp
ret
pop
and
add
add
or
adc
loope
pop
cmp
inc
mov
divl
mov
sbb
push
xor
cmp
fstl
jle
int
cld
ror
insl
fldenv
divb
inc
jle
or
ljmp
mov
adc
sub
xor
push
inc
add
movsl
sbb
call
ss
mov
ss
incl
add
add
cli
clc
out
jle
mov
clc
jne
adcb
mov
stc
call
xchg
mov
adc
fadds
push
lea
adc
lods
stc
adc
push
aas
imul
push
dec
cld
pushl
mov
negb
mov
mov
xor
gs
cltd
xlat
stc
mov
repz
les
jae
push
shr
xor
loope
pusha
out
pop
mov
add
es
movl
repnz
pop
mov
incb
les
cmp
ljmp
faddl
add
fadds
push
test
in
setge
into
jae
push
xchg
inc
call
loopne
aas
les
jae
push
mov
inc
les
and
testl
xchg
ss
adc
loop
je
insl
repz
repnz
add
stc
inc
les
sahf
fcomip
pop
leave
imul
push
fstl
add
and
xchg
cmp
sbb
dec
int
add
add
add
sti
cld
sub
or
xchg
xchg
cmp
fstl
fidivs
addb
sbb
not
aaa
cld
inc
jmp
xchg
cmp
dec
pushf
sub
test
leave
xor
sub
test
into
xor
cmp
stc
pop
push
jge
ret
jmp
and
negb
add
adc
or
insb
or
into
adc
enter
jae
mov
xchg
xor
je
divl
mov
sbb
nop
into
insl
add
pusha
sbb
cli
jmp
test
je
test
pushl
test
je
jge
test
sub
dec
push
mov
xlat
aaa
add
shrl
add
add
jmp
gs
push
fisttpll
fsubr
add
pop
pop
adc
test
cmc
mov
fsts
insb
sub
stc
adc
cmpsl
lds
pop
adc
in
lods
test
in
pop
jle
lods
add
adc
pusha
outsb
and
add
mov
mov
popa
ret
je
popa
dec
cld
adc
pop
ret
jae
out
mov
add
stos
jo
jge
sub
jno
test
clc
gs
aas
es
xchg
roll
pop
imul
and
imul
aas
les
or
mov
add
cmp
and
je
aam
addb
or
add
mov
cmc
push
insb
faddl
add
add
cwtl
or
add
add
out
inc
cmc
xchg
add
ret
push
cmc
cmc
and
push
inc
call
and
jmp
pop
push
icebp
jae
and
test
jge
xor
cmc
daa
mov
inc
add
ret
std
daa
scas
xchg
xor
das
mov
orb
fidivl
in
test
xor
rolb
xorl
jmp
push
sbb
andl
int
stc
push
xor
notb
fstpl
xchg
into
mov
xor
movsl
pop
imull
ret
pop
xor
sub
das
adc
or
je
adc
xor
jge
movl
add
xchg
into
shlb
and
cmp
into
shlb
cmpb
adc
ret
lahf
add
movl
je
rcll
nop
cmp
jbe
or
lret
test
push
ds
push
adc
inc
push
sub
adc
adc
movb
imul
push
sub
jp
and
add
add
enter
idiv
jo
add
imul
add
or
inc
push
xor
or
cltd
add
add
push
fldenv
add
adc
pop
adc
fidivl
xchg
fs
inc
add
xchg
je
add
rorb
and
inc
stc
and
enter
shl
xchg
jmp
adc
inc
add
ret
add
jle
clc
sbb
stc
arpl
jge
flds
je
pop
push
add
test
jle
les
stc
lcall
data16
add
test
jle
enter
aas
enter
add
fcoms
xor
push
out
repz
push
in
std
out
dec
repnz
add
mov
fs
call
mov
fs
les
js
adc
jo
pop
sbb
add
mov
popf
lds
inc
les
inc
insb
lock
jmp
outsl
outsl
lds
mov
push
rcll
adc
rolb
pushl
xor
ljmp
std
inc
mov
in
movl
mov
jb
scas
mov
test
movl
jge
in
mov
cmpsb
fldl
push
test
divl
push
test
sub
push
push
scas
xchg
cmc
push
inc
leave
adc
mov
add
dec
pop
negb
mov
add
cmpsb
mov
push
dec
push
mulb
lods
scas
xorl
or
test
push
test
xchg
cli
cli
fldcw
sbb
add
push
xchg
std
cmp
stc
jle
xor
add
pop
mov
lea
movsl
popf
or
adc
cmc
sbb
add
inc
pop
push
sbb
mov
add
mov
add
movb
lods
stc
arpl
cmc
stc
pop
add
xor
std
inc
and
xlat
incl
add
cmp
into
stc
cmp
jmp
sti
sbb
jmp
and
repz
aaa
fistpll
lods
add
les
add
daa
aam
sbb
xchg
mov
rcrl
ret
jae
jle
out
lods
add
inc
sub
cli
stos
xor
aam
sub
test
repz
sub
push
mov
sbb
xor
ret
popa
ret
sub
movl
cmpsl
repz
lods
fdivl
mov
data16
pop
inc
sub
les
imulb
add
inc
mov
push
ficoml
xor
push
movsl
fmull
loopne
roll
or
mov
test
jecxz
pop
lods
insb
inc
mov
fs
pushf
dec
or
popf
mov
pop
out
push
je
pushf
in
call
orl
sarl
pop
pop
add
mov
das
roll
sub
add
add
or
jo
adc
and
mov
push
push
push
jb
inc
js
cmp
aam
jle
pushf
std
test
idivl
push
inc
jne
add
roll
pop
mov
inc
inc
sarb
clc
push
push
xchg
push
fdivp
jle
stos
add
mov
jne
imull
movl
leave
aad
push
ljmp
add
add
idiv
fisubrs
push
add
outsl
outsb
or
inc
adc
jg
stc
call
inc
or
insb
stc
ljmp
out
mov
mov
test
sbb
add
xor
push
push
cmpsb
int3
mov
je
or
or
mov
push
sub
leave
add
test
ds
inc
dec
fadds
add
add
stc
inc
xor
inc
js
or
mov
jle
sub
pop
les
je
sub
adc
adc
inc
mov
aas
fdiv
xor
lret
out
stc
dec
xor
shlb
or
mov
scas
add
dec
xor
sti
adc
jnp
test
dec
testb
pop
lahf
jne
push
aas
sarl
in
sub
add
dec
notb
xchg
cmp
shrb
cmpsb
je
int
les
rcl
jno
les
add
add
clc
add
sarl
mov
imul
shrb
sub
mov
fwait
les
lods
movsb
xor
adc
mov
pop
aas
call
sbb
cmp
mov
repz
cmp
jp
lods
jo
in
mov
inc
iret
scas
jge
jmp
les
mov
add
sarl
add
icebp
jl
nop
add
les
lods
jmp
add
loope
bound
and
mov
add
sbb
enter
cld
mov
jb
pusha
pop
jb
popa
in
pop
mov
inc
mov
push
xchg
repnz
mov
imul
sahf
int
pop
cmp
lock
sbb
jmp
clc
subl
movsb
mov
test
movl
negl
sbb
push
xlat
pop
jge
inc
inc
stos
ljmp
test
sldt
add
and
add
loopne
mov
jp
mov
dec
sarl
stc
lea
in
push
clc
inc
push
aas
int3
call
mov
or
add
shlb
ljmp
push
mov
fldpi
lods
sub
jge
addr16
test
pop
jbe
sub
add
dec
sbb
adc
movb
shl
cmc
push
test
mov
cmc
aad
call
jno
mov
or
out
test
stc
inc
imul
dec
scas
pushf
jp
sub
mov
je
sub
mov
pushf
cmpsl
sbb
sub
push
sub
fwait
std
pop
outsl
dec
fldt
movb
dec
cwtl
push
adc
push
out
fcmovne
es
int3
dec
lret
adc
mov
cmpsl
sub
pop
je
inc
push
jns
xchg
adc
push
aam
jmp
test
mov
or
mov
pop
int3
inc
int
repz
adc
add
add
paddb
ljmp
mov
mov
mov
sub
mov
mov
aam
add
add
rdtsc
push
aad
dec
insb
adc
arpl
adc
or
jle
lahf
test
call
in
test
sub
ret
insb
dec
push
rorl
enter
divl
inc
movb
jno
add
jmp
inc
add
adc
ret
aad
jmp
test
or
jb
scas
jp
push
mov
scas
add
add
andl
jae
and
push
mov
jge
push
ljmp
sub
add
popf
test
je
out
inc
push
cmp
call
sbb
or
dec
or
cltd
mov
jne
icebp
pop
push
jle
mov
popf
dec
pop
lea
sbb
xor
lret
mov
pusha
add
sub
jmp
aaa
ret
cmp
add
cmc
xor
and
jle
les
add
xor
in
pop
sub
cmpsb
mov
lods
add
cmp
and
lods
add
lds
add
icebp
and
jp
stc
fwait
and
out
or
stc
aas
out
aad
out
leave
xchg
inc
xor
inc
jne
insb
je
stc
pop
mov
xlat
pop
xchg
jge
mov
das
mov
test
mov
add
adc
push
aam
mov
ss
loop
les
push
lods
cld
sbb
shrb
roll
sub
rclb
enter
adc
pop
ret
aaa
adc
xor
pop
adc
pushf
mov
fistl
pop
arpl
adc
sub
arpl
xlat
fldcw
add
out
jmp
xor
xor
jbe
mov
jge
sub
mov
add
pop
aad
cmp
rol
cmp
xor
pop
lods
test
divl
mov
popa
scas
add
insl
xchg
aas
pop
push
xchg
adc
scas
insl
fnstcw
cmc
jle
mov
int
ljmp
add
add
scas
divl
pop
leave
sub
push
push
mov
mov
cwtl
fcompl
jb
in
inc
and
imull
inc
outsb
lret
or
cli
or
out
push
xchg
std
mov
ret
dec
clc
pop
mov
sti
lcall
xor
cmpsl
popa
ljmp
das
mov
and
pushl
movsb
add
in
sub
stc
push
mov
push
push
arpl
add
ss
stc
adc
aad
repnz
xchg
std
sbb
push
push
xchg
insb
mov
lock
int3
stc
push
cli
mov
adc
std
mov
add
xor
je
stc
mov
sub
lods
call
inc
fiadds
aas
xchg
notl
push
lret
sti
add
add
sti
sarb
stc
jmp
cmpsb
call
jnp
jl
outsl
sarl
add
out
es
adc
stos
call
imull
std
cld
xor
jge
popf
inc
add
ret
gs
jb
dec
adc
mov
insb
test
xchg
push
popf
pop
sub
lret
call
jmp
add
adcl
add
outsb
inc
loopne
cwtl
js
mulb
je
les
les
sbb
jmp
subb
push
ss
std
push
aas
call
mov
arpl
inc
jmp
ja
ljmp
mov
push
sub
lret
les
pop
les
add
add
test
and
or
push
pushf
add
cmc
or
cld
sbb
inc
jmp
xor
adc
xchg
std
idivb
push
push
fiaddl
add
pop
stos
mov
mov
jmp
inc
mov
call
lods
or
scas
into
cmc
mov
enter
xchg
sahf
outsb
add
add
xchg
call
in
push
mov
imul
jb
jecxz
mov
xchg
adc
lret
daa
xchg
inc
and
sub
imul
ljmp
jno
jb
subb
jae
cmpsb
je
add
es
jg
nop
faddl
lea
je
inc
in
jg
or
sbb
cmp
push
and
push
sbb
or
jge
jns
or
jns
ljmp
sbb
lret
addb
je
cmc
les
sbbl
cli
sub
add
aas
and
lea
or
jb
pop
jbe
add
mov
sub
cmp
and
ret
jae
or
in
xor
stc
jecxz
push
and
ss
and
jmp
lret
jmp
cld
mov
sbb
mov
mov
dec
and
aas
lock
addr16
push
mov
sbb
jnp
jae
test
mov
cmovnp
ret
fldl
pushf
push
inc
bound
pop
inc
inc
lds
xchg
jp
lods
mov
xadd
push
mov
add
popf
lahf
pushf
std
scas
fs
ja
sbb
mov
stc
mov
subl
sti
mov
and
adc
push
cmp
in
bound
xchg
mov
scas
nop
mov
sub
or
add
test
out
stos
notl
scas
imul
push
inc
adc
add
jmp
ret
dec
push
or
push
movb
pusha
mov
adc
lcall
or
bound
jp
aas
fwait
imul
mov
jmp
in
imul
jmp
add
jnp
ret
sub
xlat
add
sti
in
lods
dec
add
cmpl
and
pusha
sbb
xchg
movsl
pop
lea
add
fisttpl
or
dec
push
lea
movsl
pop
call
scas
pusha
cmp
pop
jge
add
ljmp
pusha
daa
pop
lret
iret
mov
pop
cli
jg
and
jle
sldt
add
jnp
add
fnstsw
and
xchg
outsb
and
mov
aaa
push
pop
pusha
sub
xchg
dec
add
insb
fimuls
call
mov
lcall
or
je
fdivr
mov
cmp
add
push
stc
mov
les
mov
ret
ret
add
add
cwtl
adc
andb
inc
les
or
mov
push
in
jae
in
sub
insl
mov
movsl
sub
imul
rorl
stc
mov
pop
inc
lods
mov
jnp
mov
mov
ret
mov
int
sbb
mov
add
add
jle
out
mulb
sti
out
adc
pushf
ret
mov
sbb
fdivrs
xrelease
enter
sbb
imul
and
push
inc
std
ror
mov
mov
adc
mov
pop
lods
std
add
adc
inc
inc
shl
movl
add
cmp
mov
push
jmp
out
enter
test
dec
mov
or
xchg
adc
fwait
push
adcl
adc
cmp
jmp
push
mov
cmc
push
push
mov
cmc
aas
dec
pop
sub
add
out
roll
ds
mov
out
add
add
jne
add
add
inc
push
push
jge
test
mov
bound
idiv
lods
mov
jne
js
inc
add
pop
pop
push
lods
add
xchg
xchg
psubusw
idiv
insl
fildl
lea
pop
push
repnz
add
pop
pop
push
insl
add
ret
popf
clc
lcall
idiv
sub
push
xchg
mov
stc
test
add
push
jge
hlt
popf
jle
mov
jo
inc
add
cwtl
andb
sbb
dec
cmp
out
mov
mov
mov
andb
call
inc
cltd
outsl
add
sahf
cmpl
or
rcrb
add
push
dec
loopne
test
fdivrs
stc
and
dec
mov
mov
adc
or
popf
mov
sub
sahf
add
jo
dec
in
and
dec
in
sbb
and
adc
and
call
push
jmp
jle
push
jmp
or
gs
add
subb
add
add
add
les
jae
inc
add
sarb
les
bound
imul
add
fidivl
das
insb
jge
or
add
das
mov
add
lcall
jmp
or
jmp
inc
xorl
jl
push
jb
popf
cltd
pusha
insb
lods
jle
fucomi
test
negl
dec
add
lods
ret
inc
pop
push
mov
cmpsb
imul
inc
inc
out
jo
cltd
mov
dec
xor
insb
xchg
pop
dec
xlat
mov
jmp
xchg
popf
push
leave
insb
lods
push
data16
call
cmp
imul
inc
cmp
add
push
pusha
add
ljmp
add
add
mov
clc
ss
pop
cmp
and
add
popf
nop
dec
add
inc
push
or
jno
std
push
jge
xor
popl
movsl
jno
sbb
pop
and
pop
pop
push
add
ret
push
push
jge
rorl
add
adc
and
jge
jae,pt
mov
test
add
adc
add
add
jge
mov
daa
aaa
add
mov
je
je
rol
xor
cltd
fwait
adc
outsb
add
jo
inc
cmp
test
cmp
lds
clc
stc
push
addl
js
out
std
test
lret
pop
test
incb
dec
xchg
dec
test
sti
and
push
les
loope
dec
sub
jae
pop
shr
data16
dec
in
or
lods
mov
scas
add
mov
jns
loope
inc
dec
mov
push
xchg
cmp
icebp
mov
das
mov
lods
pop
int
inc
add
std
sbb
push
outsb
inc
loopne
sbb
stc
ss
add
aam
mov
add
add
nop
mov
xchg
pop
scas
clc
inc
xorb
icebp
jae
les
orl
pusha
ss
test
fbld
cmp
mov
scas
jo
cmp
mov
mov
mov
into
jmp
dec
dec
es
push
icebp
rorl
push
mov
xchg
mov
cmp
fisttpl
ficomps
mov
roll
add
pop
mov
into
dec
les
adc
andl
mov
sbb
cmp
adc
ds
mov
pop
push
pop
adc
mov
insb
stos
jnp
sbb
movsl
and
push
add
pop
push
push
scas
add
into
test
push
fiaddl
cmp
cmp
js
clc
pushl
jne
cmp
es
jl
std
and
jne
and
jmp
mov
sub
mov
mov
sub
pop
cmpsl
es
pop
out
aas
fbld
psubd
jge
es
push
cmp
leave
sub
sub
ljmp
sbb
cmp
fidivs
sti
dec
jge
cmc
jb
inc
aaa
ja
mov
add
add
adc
aas
pop
fisttps
dec
inc
add
adc
jbe
loopne
jg
jns
lock
les
xor
scas
add
lods
sub
add
cltd
sub
test
adc
pop
aas
push
fwait
jne
pop
mov
xchg
sub
in
adc
mull
mov
pop
cmp
divl
pop
scas
mov
arpl
roll
std
pop
loop
push
cmp
test
sti
mov
pushf
sbb
sbb
add
in
jae
sbb
jae
or
mov
jle
sub
mov
aam
sahf
ljmp
ss
xor
fs
pusha
add
je
mov
add
add
mov
test
inc
adc
xchg
push
frstor
push
lds
inc
xchg
add
sbb
negl
mov
fisttps
aam
mov
push
xchg
idivl
xor
xchg
pop
pusha
or
cwtl
dec
push
jb
mov
xor
test
mov
lret
pushf
mov
movl
add
mov
add
jmp
icebp
xchg
dec
lds
je
pop
or
sbb
push
jb
lock
push
and
subb
arpl
push
mov
add
notb
test
inc
push
call
ficomps
lcall
repnz
xlat
or
or
ds
cmpb
push
mov
addb
mov
mov
stc
je
or
cmp
or
add
fldl
pusha
outsb
outsb
add
add
les
push
add
ds
mov
mov
es
lock
int
les
jle
jae
cmpsl
jns
mov
repz
sbb
adcb
add
lcall
xor
mov
out
sub
and
pop
jmp
sub
nop
lret
gs
stos
addl
iret
test
mov
mov
je
mov
shll
call
dec
mov
das
add
outsb
sbb
ret
dec
mov
aas
add
add
xchg
pop
xor
add
testl
fs
xchg
icebp
sbb
les
cmp
and
repnz
fstp
aaa
mov
cmp
lds
xchg
out
mov
repnz
fwait
into
xchg
cmc
xor
les
xchg
add
adcb
aaa
mov
mov
call
insb
push
adc
icebp
push
pop
adc
loope
mov
or
mov
add
mov
ffree
dec
push
bound
enter
mov
movl
arpl
pop
or
popf
idivl
icebp
pop
add
push
xchg
mov
rolb
mov
add
add
and
bound
xchg
jl
daa
cmp
fwait
dec
jge
xchg
add
arpl
add
shrb
jl
pop
xor
adcl
jge
jo
stos
xchg
fiaddl
outsb
push
out
fisttpll
out
and
jp
or
fucomi
std
cmp
rcll
mov
mov
or
out
rolb
xor
loopne
add
les
les
add
pop
outsb
xor
xor
mov
xchg
add
aaa
dec
pop
push
and
push
fldl
orb
rolb
les
add
mov
call
incl
stc
xchg
add
add
ja
sub
je
sub
incl
ret
testl
add
mov
add
sbb
stos
stc
shll
mov
lea
decl
cmp
push
les
or
mov
fdivr
cmp
add
imul
addl
adc
xchg
pop
ret
xor
push
sti
inc
stos
mov
xor
add
in
mov
mov
fwait
das
mov
fadd
inc
mov
sti
repnz
add
jmp
in
push
adc
ret
scas
inc
les
jmp
mov
ss
mulb
jl,pn
cltd
data16
fistps
jle
or
lods
inc
mov
fdivrs
adc
jnp
inc
mov
adcb
add
inc
testb
ds
mov
xchg
jge
aam
mov
or
call
jge
mov
push
jb
loop
cmp
xorl
xchg
adc
out
aam
push
psrlq
sub
cwtl
dec
cmpsl
stc
adc
mov
xor
adcb
mov
cli
stc
and
icebp
cmpb
sub
xchg
dec
bound
add
mov
and
call
ss
xorl
shrb
mov
push
outsl
inc
test
xor
mov
loopne
push
call
test
andl
add
xlat
mov
push
outsb
inc
push
mov
cli
mov
add
add
sub
xor
test
adc
stc
jg
add
mov
fisttps
mov
cli
jb
jbe
adc
jns
bound
addb
inc
and
pop
cmpsb
lahf
stc
inc
aad
inc
int3
into
xchg
adc
sub
je
shll
scas
inc
pop
out
stc
ret
add
stc
jp
dec
sar
mov
pop
dec
stc
stc
xchg
dec
dec
imul
test
xchg
fwait
add
adc
pop
xchg
jp
aas
cli
stc
mov
lcall
jns
fwait
inc
and
pop
and
out
fnstenv
add
repz
jmp
fbstp
xchg
lock
mov
sub
dec
cmp
add
add
test
daa
loope
bound
loopne
popa
aas
call
add
scas
cmpsb
lea
cmpsb
jge
lahf
aas
test
jmp
aaa
test
nop
sub
xchg
js
lock
scas
cmpsb
mov
xchg
int
out
mov
sbb
xchg
inc
jp
xchg
sub
or
imul
clc
add
add
add
sbb
pusha
mov
mov
movl
sahf
cltd
push
mov
inc
lret
test
test
aas
mov
jo
jmp
or
adc
ljmp
jne
jmp
mov
divl
xchg
add
dec
jmp
xor
mov
adc
push
push
push
add
movl
stc
jg
lea
sub
mov
jmp
mov
mov
test
mov
mov
push
inc
push
ss
ljmp
xchg
jp
xchg
ja
mov
push
jae
out
sbb
fmuls
mov
subl
add
jge
xor
or
pop
sub
mov
sbb
movsb
jp
call
lods
push
stc
cwtl
or
call
pop
daa
inc
and
pop
das
and
and
and
dec
sahf
je
mov
mov
aas
js
xor
xlat
add
push
outsb
rcll
call
dec
repz
add
jmp
adc
adc
ja
sahf
add
lret
inc
add
pop
flds
test
stos
add
inc
add
sbb
push
jmp
add
sbb
ret
sbb
testl
jae
enter
sar
daa
mov
xlat
push
add
ret
sbb
pushf
sbb
xchg
xlat
test
imul
fsts
gs
sarl
call
dec
cmp
jmp
sbb
div
clc
jae
mov
bound
stc
jae
test
out
test
sub
fs
mov
mov
push
xor
pop
push
add
or
cmp
add
fiadds
add
mov
cmpsb
ficoml
les
fldl
add
fdivrs
push
movl
add
popl
sub
add
add
test
jbe
orb
sbb
adc
out
xor
popa
hlt
jmp
jg
push
jl
or
add
add
or
add
ja
add
leave
jg
xor
add
sahf
jo
jb
cmpb
and
mov
and
jl
vmovaps
lret
jne
addl
and
push
and
inc
push
dec
mov
add
rcrl
cs
lcall
rcr
pop
pop
out
es
sbb
and
call
jle
rcrb
xor
mov
xor
jle
call
arpl
cmp
push
fldl
inc
je
arpl
pop
pop
fildl
enter
mov
mov
cmp
jmp
cmpsb
adc
and
daa
aas
and
ds
add
add
out
inc
call
sahf
mov
in
mov
test
mov
lahf
insl
xchg
cmp
inc
vmovsd
les
add
lock
push
call
cli
into
push
int
sub
push
adc
inc
sarl
bound
mov
pushf
pop
test
xchg
push
int
sub
sbb
fimuls
xchg
jl
inc
sub
inc
shl
inc
dec
pop
jb
shlb
mov
loop
jmp
add
loopne
jno
int3
jle
xor
push
add
pop
mull
adc
jl
mov
notb
push
mull
mov
mov
mov
cmp
push
push
adcl
xor
push
test
idivl
dec
lds
xchg
mov
lret
add
inc
xchg
xor
insb
out
mov
push
sub
jge
movl
jns
dec
cmp
or
xor
push
and
cmp
jp
add
add
jmp
mov
push
mov
pop
imul
cmp
jl
and
divb
sahf
roll
add
sub
imul
pop
stc
je
lods
cli
je
lods
push
lcall
lret
adc
add
mov
inc
push
push
and
rolb
sar
adc
push
ret
push
add
rolb
mov
add
push
movsl
push
jmp
jmp
repz
pop
pop
cmpsl
adc
lea
jae
or
insl
sub
dec
mov
call
inc
pop
aas
icebp
xchg
std
xchg
cwtl
mov
dec
mov
dec
mov
pop
mov
or
jae
stc
shll
aas
les
mov
test
in
pcmpeqw
or
fsubrl
cmp
inc
enter
jge
stos
or
xor
lcall
and
push
add
imul
testl
jae
enter
dec
pop
fs
rolb
sahf
mov
jge
xchg
jp
loopne
xor
ljmp
jg
fbstp
add
add
mov
int
jl
les
mov
stos
mov
fwait
inc
xchg
xchg
pop
add
ret
jecxz
jmp
call
jge
test
lea
mov
add
shl
or
adc
aad
push
or
loope
mov
negl
inc
inc
push
icebp
cmp
jae
xchg
enter
or
test
xor
add
xlat
mov
push
stc
add
enter
add
cmp
mov
xor
add
mov
add
inc
push
mov
jle
movsl
xchg
call
xchg
mov
into
pop
pop
out
lds
ret
ja
xchg
add
add
inc
push
add
push
push
pushf
shrl
add
call
mov
xor
pop
rolb
add
add
mov
and
mov
xchg
push
push
mov
and
add
jg
aaa
decb
dec
jecxz
jp
push
mov
push
inc
cltd
iret
or
xchg
or
les
outsb
cmpsl
sbb
and
int3
in
test
dec
test
rolb
inc
pushf
stos
cltd
lret
test
je
repnz
push
push
mov
add
xchg
dec
jg
inc
dec
fsub
adc
pop
subb
sar
sbb
jp
and
test
je
sti
les
test
in
jmp
xchg
add
add
add
bound
daa
push
push
cwtl
dec
xchg
test
push
mov
ljmp
test
mov
jecxz
cmp
dec
in
add
add
sbb
push
fldl
movl
insb
inc
les
in
cmp
sbb
nop
sub
mov
outsl
pop
dec
dec
jmp
add
fsubrl
xor
or
add
add
add
arpl
dec
mov
test
xor
sbb
flds
push
jge
lret
mov
movl
jo
ds
idiv
aas
pop
inc
jmp
ret
mov
mov
clc
stc
pop
push
xorb
insb
push
adc
add
add
and
in
or
pop
jo
sysret
ds
or
xchg
add
add
dec
hlt
mov
add
je
jle
test
je
nop
jae
mov
adc
and
xor
je
arpl
adc
es
cmp
addl
add
jb
int
push
stc
adc
test
pop
sarb
ret
push
mov
inc
adc
leave
add
cmp
pop
inc
sub
cli
jmp
mov
jne
std
jb
dec
add
xor
sbb
lods
add
mov
dec
and
icebp
lret
les
add
mov
sarb
sbb
xchg
xor
add
adc
cwtl
xlat
cmovg
adc
push
mov
imul
add
mov
call
imul
decl
loop
inc
mov
mov
xor
xor
mov
orl
stc
inc
add
sub
add
add
cmc
fidivrl
into
stos
xchg
icebp
mov
pop
and
mov
xor
insl
out
ds
js
out
inc
or
repz
sbb
mov
xchg
mov
les
inc
dec
pop
xor
lea
xlat
jo
out
ror
call
push
mov
adc
ret
arpl
addl
enter
adc
out
movsl
jle
in
pop
test
jmp
jo
imul
dec
lret
ss
mov
dec
fdiv
pusha
cmc
jns
lods
dec
lea
out
or
leave
add
jnp
test
shr
popa
data16
xchg
pop
jae
jle
test
out
div
leave
out
int3
ret
add
ljmp
fistpl
add
mov
pop
xchg
adc
mov
add
push
push
xchg
cltd
jae
sub
inc
in
cmp
adc
cmp
fcomi
je
xchg
int3
outsl
enter
or
add
fimull
sub
movl
mov
inc
xchg
adc
jg
add
dec
and
mov
movsl
jg
popf
sti
push
hlt
out
pop
mov
add
push
mov
shlb
xchg
cs
jmp
popf
sub
insb
jg
mov
adc
push
jb
sti
call
lods
xchg
jae
testb
add
jle
stc
pop
in
test
push
jo
int
add
add
cmc
cmp
mov
inc
add
add
add
decb
fisubrs
or
pop
jmp
xor
repnz
sub
icebp
imul
test
add
add
xchg
jle
push
mov
sti
add
frstor
sbb
xchg
nop
jns
out
vfrczpd
enter
push
add
mov
les
jmp
nop
xor
sub
sbb
lods
jmp
clc
sti
dec
inc
cltd
nop
cmp
loope
sbb
or
fiaddl
add
fwait
inc
push
les
jmp
xor
lods
cmp
sbb
adc
nop
add
mov
daa
push
push
push
xchg
fnstsw
sahf
inc
or
test
bound
loop
add
mov
sub
or
mov
cs
scas
mov
sub
push
cmp
mov
xlat
dec
pop
jge
push
jb
outsb
pop
repnz
add
fs
sbb
lods
or
inc
jmp
inc
inc
push
bound
xlat
jmp
add
inc
fldl
out
sar
mov
mov
je
jl
mov
insl
adc
cmpsb
sub
adc
mov
jl
push
nop
cmc
out
cwtl
mov
push
pop
jae
std
sub
and
add
in
mov
push
mov
add
sub
push
es
adc
popf
add
mov
flds
lods
pop
and
mov
arpl
andl
push
mov
scas
cmc
dec
or
pop
mov
insl
add
insb
add
pop
jo
inc
mov
divl
out
test
aas
test
mov
inc
and
in
and
out
test
xchg
je
enter
sti
insb
add
add
add
cmp
dec
jmp
ret
out
test
dec
imul
hlt
in
lret
out
inc
mov
insb
add
ds
jbe
inc
lret
les
jp
rcll
lret
add
jmp
add
add
gs
add
insb
mov
lock
and
xchg
or
jle
nop
outsl
into
jp
xchg
pusha
jns
and
xchg
mov
pop
sub
js
or
in
cmp
je
in
add
loopne
insb
and
les
jmp
js
loope
inc
and
jg
les
xchg
dec
ljmp
and
push
and
jmp
mov
jle
mov
xorl
add
shl
push
mov
jmp
mov
jle
movl
cmp
ret
jb
adc
mov
movl
subb
add
hlt
jb
push
push
adcl
icebp
or
ret
add
add
add
add
popf
add
idivb
add
and
incl
insl
add
dec
cmpsl
jge
insl
cld
sbb
pop
testl
add
popf
dec
std
je
mov
mov
mov
cmp
test
mov
inc
ja
jle
fldl
jge
in
xchg
shlb
scas
cld
testb
add
add
pop
ret
push
mov
jg
xor
xor
js
adc
adc
dec
popf
repz
add
test
std
clc
mov
lahf
jmp
sub
jae
lea
or
adc
inc
es
pop
fisubrs
sub
and
cmp
mov
stc
aas
xchg
xchg
outsl
xchg
pop
jp
mov
inc
or
add
in
inc
pop
cli
repz
mov
insb
add
mov
jb
repz
jl
cmp
xchg
add
sahf
mov
pop
imul
je
jae
push
ds
inc
les
push
jge
push
add
sarb
mov
add
lcall
in
xor
iret
cmp
pop
les
adcb
jbe
jl
xorb
push
ljmp
push
jmp
jbe
cmc
adc
add
je
je
daa
fwait
repnz
aaa
cmp
ret
push
mov
movl
push
je
in
repz
lods
imul
or
pushf
jmp
insb
add
cmp
mov
outsl
push
loope
sbb
sub
out
jmp
inc
inc
insl
enter
xor
jo
testb
lds
test
push
sbb
jns
inc
mov
push
push
shl
push
inc
inc
outsb
xlat
mov
mov
fsin
xchg
lock
loop
gs
add
add
jbe
adc
add
das
das
imul
jg
cmp
jge
mov
in
mov
icebp
jae
call
sbb
cli
loope
pop
or
xchg
es
out
push
inc
lea
nop
js
push
mov
add
cmp
inc
and
popl
cmp
xor
fildl
les
test
xor
jge
popa
les
clc
lea
fistl
les
hlt
add
cmp
je
das
mov
push
test
call
mov
movsb
les
or
jge
mov
ret
xor
inc
jge
xchg
std
inc
cmp
push
pop
cmp
inc
cltd
cs
aas
out
and
push
sar
out
push
in
add
pop
les
add
add
push
jmp
adc
leave
and
xor
push
test
mov
add
add
jmp
and
or
enter
or
pusha
subb
adc
movsb
dec
enter
add
add
fidivrs
mov
sub
mov
nop
repnz
andb
je
xchg
les
add
jb
icebp
rorb
pop
inc
jmp
mov
gs
stc
out
add
xchg
call
jl
or
repnz
dec
mov
xchg
test
add
add
push
insb
lret
fs
outsl
imull
cli
or
pop
outsb
test
imul
xor
pop
divl
movl
push
aaa
xchg
mov
sub
mov
or
push
adc
jge
adc
mov
xor
pop
adc
add
cmp
lcall
or
jge
roll
sub
subl
adc
and
xchg
add
or
add
shll
rorb
ljmp
push
mov
cld
insl
or
or
push
or
add
loope
stc
push
jle
sar
pop
add
subl
cli
add
repz
test
dec
jp
add
add
jecxz
nop
les
mov
daa
cld
push
dec
push
xor
jne
imul
flds
add
arpl
jnp
pop
mov
mov
nop
xchg
les
push
fsubrl
add
fwait
add
pop
ss
jmp
jg
test
lock
cli
and
jmp
leave
and
add
add
std
and
or
fistl
sub
jae
or
dec
xchg
jl
sub
aam
push
faddl
inc
xchg
in
aaa
lea
std
out
xchg
stc
add
inc
aas
inc
mov
outsb
and
and
in
add
push
pop
pop
push
sbb
clc
sub
addb
add
dec
cmp
in
jl
jo
lahf
inc
leave
cld
and
cmpsl
popa
add
add
add
movl
ret
stc
jp
sarl
sbbl
aam
fldenv
xchg
add
movl
notl
or
pusha
cmp
data16
aas
inc
outsl
push
cwtl
nop
fmuls
inc
jne
scas
xchg
ja
stc
iret
icebp
incb
movl
and
sahf
jne
out
dec
inc
jp
ds
xor
jmp
subb
test
jnp
cmpsb
test
fidivs
cmp
add
sub
sbb
adc
jg
and
mov
xchg
add
cmpsb
icebp
jb
mov
add
add
mov
scas
mov
add
add
sbb
add
in
clc
jne
jg
and
xchg
add
iret
and
movsb
mov
and
std
pop
les
clc
xchg
push
addl
js
push
incb
flds
lret
sbb
out
add
add
add
aas
repz
add
pop
mov
adcb
and
add
aas
sub
call
dec
mov
and
idiv
clc
jnp
add
les
roll
aas
or
and
mov
pop
add
xlat
and
cmp
add
in
pushf
les
cmp
add
cld
roll
add
add
shll
pop
test
mov
xchg
out
pop
mov
xchg
ret
sar
out
pop
insb
nop
jge
mov
add
add
jmp
add
add
jge
les
jmp
and
inc
clc
out
push
jg
push
mov
sti
sub
pusha
cwtl
les
rcr
out
fadds
shrl
jge
jae
lea
cmpb
cmpsl
xor
or
jno
negb
and
hlt
imul
in
pushf
lcall
and
mov
movl
xchg
jmp
roll
add
notb
mov
xchg
add
testb
cmp
add
insl
sub
add
mov
push
lock
sub
push
int
icebp
pcmpgtb
in
adc
pusha
mov
jmp
and
xchg
add
jge
andl
cld
jp
cmc
push
lcall
adc
stc
jl
add
pop
testl
int
add
inc
mul
pop
pop
stc
call
add
add
jge
jo
rolb
lcall
ds
test
scas
mov
inc
or
push
mov
orb
mov
sbb
add
pop
add
lds
add
lea
les
mov
add
lahf
sbb
ja
in
mov
push
out
add
cmc
mov
add
add
pop
add
les
xchg
sub
add
les
out
dec
mov
jmp
out
test
adc
les
xchg
dec
mov
rol
mov
ss
mov
jp
pop
repnz
xlat
lcall
pop
jl
adc
cltd
imul
jp
mov
or
add
add
xchg
inc
pop
shlb
jbe
pop
add
add
pop
loopne
add
inc
leave
cmpsl
popa
add
add
daa
lock
dec
aas
sbb
jle
icebp
in
into
jbe
cmpsl
insb
cwtl
add
test
xchg
jp
insb
xchg
sub
dec
outsb
data16
add
addb
add
repnz
mov
mov
adc
xchg
aad
add
add
add
andb
add
leave
repnz
repnz
dec
ret
pop
jne
add
nop
insl
or
push
stc
dec
ss
cmp
sti
movl
jmp
jns
int3
push
or
rorl
xchg
xchg
notl
dec
jecxz
jmp
xor
push
pusha
add
add
add
jmp
push
mov
pop
or
mov
or
sub
insl
or
dec
push
add
push
adc
and
maxps
pop
ret
jge
mov
inc
and
dec
jb
jae
imul
mov
pop
ss
mov
jb
mov
or
sbb
jne
push
add
pushl
pop
ljmp
add
add
clc
pop
rol
add
or
testl
test
add
push
ds
xchg
shll
les
and
pop
jne
les
test
or
roll
inc
insl
add
in
mov
outsb
add
push
add
data16
adc
out
inc
jmp
add
xor
add
adc
rol
add
lds
xorl
ja
lds
jge
push
repnz
dec
out
or
dec
xor
sbb
stc
int
rcll
or
out
ss
add
jmp
jmp
in
popf
pop
call
fadds
ljmp
adc
sub
mov
sub
int
add
add
mov
adc
sti
test
icebp
dec
in
test
data16
mov
outsl
xor
push
fldz
jmp
fdivrl
ljmp
shrl
xchg
add
add
les
fwait
insl
xchg
loope
bound
cmpsl
stc
push
iret
jnp
add
add
inc
jmp
mov
ret
lds
add
mov
and
mov
xor
jmp
pop
ljmp
or
add
mov
cs
ds
insl
add
rcl
outsb
pop
gs
add
dec
loope
in
hlt
cmp
cmp
es
dec
aam
pop
and
mov
jmp
scas
jmp
flds
add
add
ds
fucomip
stos
or
mov
mov
push
mov
sub
jle
rcrl
dec
shl
sub
cmp
jmp
dec
add
popa
add
mov
xchg
push
test
std
test
repz
xor
jne
mov
je
loopne
and
cmp
pop
stc
incl
add
add
fsubrs
cmpsb
pop
and
inc
cli
ljmp
inc
sti
pop
jo
je
scas
fildl
xchg
pop
repnz
xchg
ja
fbld
jno
rol
and
mov
call
mov
rcrl
je
les
insb
mov
jae
clc
fptan
cmovo
cmp
lret
add
add
add
jecxz
sub
mov
enter
cmpsb
stc
ror
cmovo
das
daa
cmp
inc
or
sbb
cmp
test
cs
xchg
mov
je
out
in
fsubr
stc
js
test
out
fiaddl
pusha
and
and
addb
stos
pusha
in
stos
popf
stc
aam
add
pop
inc
pop
stc
jae
pop
int
jge
mov
movl
fs
adc
and
fimull
push
andl
or
sbb
divb
mov
add
mov
add
add
icebp
insb
out
dec
xchg
rcll
sub
xor
rclb
sbb
out
add
add
std
jae
cmp
movl
push
sahf
nop
call
push
ss
and
mov
push
mov
xchg
adc
outsb
fistpl
imul
shl
jge
adc
mul
mov
adc
enter
repnz
or
add
cmp
adc
mov
inc
testl
or
xlat
add
add
adc
stc
jmp
clc
inc
add
dec
jge
mov
or
inc
fnstcw
cmp
add
mov
xchg
imul
out
push
mov
cmp
cli
adc
loop
call
repz
rorb
push
mov
cli
push
out
add
cmpsb
xchg
lea
aaa
pop
out
or
lods
into
clc
or
jmp
inc
inc
scas
insl
lret
xor
and
out
das
iret
clc
fnstcw
inc
les
pop
fwait
mov
call
sbb
push
push
imul
out
xchg
fsubrs
idiv
ret
lahf
ficoml
dec
movb
lcall
dec
push
nop
les
stc
cmp
or
add
add
outsb
jl
sbb
clc
arpl
cmp
mov
inc
mov
outsb
cmp
add
loope
les
sbb
mov
and
test
call
outsb
inc
inc
push
or
add
and
std
aad
les
rcl
incl
cmp
lods
lret
add
xor
sti
stos
pop
sub
les
jmp
xlat
out
insl
mov
mov
xchg
das
jns
and
das
mov
add
mov
add
je
and
jmp
icebp
pop
push
in
push
jge
das
fwait
not
xlat
testl
popf
insb
jp
mov
loope
add
add
pushf
std
push
sbb
sti
mov
popa
xchg
fiadds
mulb
popa
andb
adc
add
or
sub
bound
fnsave
or
or
dec
push
jnp
mov
in
into
or
mov
cld
lcall
ret
adc
jmp
scas
push
clc
jne
fisttpll
cli
push
or
add
add
jmp
pusha
lcall
ret
cmp
shrl
lcall
notb
call
and
pop
push
add
push
jecxz
ljmp
and
xor
and
adc
fdivrp
test
push
adc
inc
and
mov
jl
aad
and
or
jecxz
pop
cmp
out
sldt
add
pop
shl
out
andb
adc
or
outsb
add
jecxz
imul
mov
clc
jbe
jno
cli
pushl
pop
jg
std
inc
sbb
push
inc
loop
sti
jmp
push
fs
mov
fdivrs
out
inc
mov
scas
jecxz
or
das
push
test
addr16
popa
loop
stc
inc
cs
dec
add
or
and
or
pop
insl
shlb
pop
pop
mov
jl
pop
aaa
aas
pop
fcom
ds
mov
push
lret
add
aad
ja
roll
push
je
in
pop
fldt
adc
mov
in
push
push
pusha
bound
pop
push
cmp
adcb
inc
cli
push
inc
lcall
pop
test
filds
mov
mov
stc
stos
xor
fldl
imul
stc
inc
jge
cmp
insb
add
mov
scas
movl
ret
adc
add
add
mov
mov
pop
mov
or
ret
in
loop
mov
mov
and
ljmp
clc
inc
inc
bound
mov
add
mov
push
add
add
cmp
clc
popa
insb
filds
nop
xlat
add
insl
data16
movsl
int3
clc
fsubrp
divb
flds
push
cmc
lcall
xchg
or
sub
adc
faddp
cmpsb
xchg
incl
sbb
insl
imul
flds
and
or
repnz
loope
push
mov
pop
add
aas
or
les
sarb
out
xlat
push
push
fs
mov
add
sarb
out
repnz
jge
mov
pop
add
shlb
clc
xlat
jae
pop
jge
pop
repnz
out
rol
add
les
adc
or
xchg
cmp
lds
add
dec
sub
mov
jnp
jae
das
gs
dec
and
xchg
inc
or
cld
jp
lods
add
dec
rolb
add
out
jmp
pop
or
inc
addr16
dec
xchg
inc
rolb
sti
test
push
sahf
add
pop
cmp
adc
sti
fsubr
lock
xchg
pop
push
imul
aam
mov
lock
pop
add
sub
test
ret
add
call
jae
pop
or
loopne
add
add
add
rcl
push
addr16
inc
push
sub
bound
mov
sub
cmc
mov
push
mov
ret
pop
pop
movsb
int
inc
xor
nop
or
icebp
out
cmc
mov
inc
outsb
in
les
adc
ret
nop
dec
bound
rcrb
mov
insb
sti
dec
push
cmp
add
add
xor
into
mov
mov
leave
lds
pusha
clc
cmc
inc
jmp
imul
insl
and
jmp
testl
jae
inc
and
lret
jp
ds
int
push
xor
inc
cmp
leave
jb
stos
push
and
push
push
ljmp
pop
jle
inc
push
push
incl
add
add
dec
jle
arpl
push
or
push
pushl
inc
push
inc
sbb
adc
fdivl
inc
push
mov
jle
cmc
inc
cli
cmp
push
and
int3
icebp
xor
shl
je
sub
mov
and
adc
and
cmpsb
mov
scas
and
jmp
addl
adc
popa
add
add
push
jp
test
js
lock
xabort
jp
sti
jecxz
stc
cmc
data16
dec
push
repz
test
mov
sub
ss
clc
sub
xchg
dec
xchg
flds
sahf
sub
lcall
cld
loope
je
jecxz
dec
fwait
add
call
mov
mov
enter
sldt
add
adc
or
leave
mov
mov
mov
bound
les
cmp
test
mov
nop
push
in
arpl
and
pop
arpl
ret
inc
shr
mov
dec
call
bound
push
shlb
fcmove
pushf
add
or
dec
add
add
add
ljmp
pop
test
dec
push
aaa
mov
out
pop
xchg
std
call
jp
insl
pop
jmp
ret
xchg
jmp
pop
adc
inc
cmp
mov
sbb
ror
mov
sub
rorb
fistps
xor
push
adc
dec
ljmp
dec
in
mov
nop
add
rcrl
movl
outsb
jecxz
adc
add
loope
imulb
dec
je
nop
ds
xor
jg
hlt
pop
rolb
jecxz
incl
mov
out
inc
xor
out
call
push
xchg
mov
loop
cmp
in
shlb
jo
add
jne
add
add
push
xor
mov
inc
pop
inc
pop
lea
push
xor
push
jmp
adc
inc
testl
sub
lcall
sbb
pop
xchg
fwait
mov
fcomp
data16
cs
outsb
hlt
test
insl
test
lret
xchg
stos
sahf
shlb
test
mov
btr
add
add
push
call
dec
pop
iret
add
push
ret
in
dec
inc
pop
lea
mov
pusha
loopne
clc
inc
repz
arpl
jne
mov
and
push
scas
push
dec
add
inc
call
imul
in
and
sub
out
shlb
mov
add
dec
ret
dec
ret
aas
add
nop
js
rcll
mov
in
mov
aad
les
flds
and
add
add
add
les
push
pop
dec
bound
test
ljmp
dec
sub
and
inc
lea
dec
jp
popa
dec
dec
add
sti
dec
add
mov
bound
es
rcrl
jb
addb
add
add
mov
add
mov
mov
xchg
mov
fs
jl
movl
imul
ja
jge
ret
jmp
jmp
test
push
loope
ret
mov
add
dec
inc
pop
insb
cmp
add
mov
rcrl
stos
jmp
add
cmp
xorb
jle
je
pop
aaa
push
sbb
adc
add
add
mov
clc
mov
jl
and
pop
cli
mov
fimull
cmp
jle
add
pop
add
xchg
movsb
inc
lods
fisubrs
cmp
sub
sub
insl
in
insl
and
aaa
xchg
mov
xor
cltd
and
mov
and
mov
inc
and
xchg
push
lcall
push
inc
mov
fs
dec
mov
add
lds
and
jb
push
js
inc
or
push
stc
adc
iret
and
mov
js
push
test
jmp
call
pushf
shlb
and
jp
out
mov
repz
sbb
add
pop
enter
lahf
rorb
push
pop
sbb
mov
mov
les
mov
dec
pop
rcrb
jnp
pop
cmp
in
lods
push
imul
imul
pop
dec
ret
hlt
jl
pop
xchg
std
jae
xchg
dec
insl
daa
fdivs
xlat
arpl
and
and
or
stos
hlt
sti
mov
push
jae
inc
add
es
call
mov
in
dec
mov
inc
jno
add
adc
mov
lret
into
mov
pop
or
pop
inc
pop
out
add
mov
ljmp
rolb
cltd
dec
and
mov
orb
mov
call
jl
add
mov
cltd
cmp
mov
jle
stc
jb
add
add
ds
jg
test
pop
xor
mov
cmp
jg
or
push
push
jb
dec
push
loope
add
ja
jmp
mov
or
shll
test
movl
push
scas
adc
cmc
lcall
push
push
dec
jp
and
add
add
add
insl
add
loope
lea
pop
add
cltd
out
add
js
decl
ljmp
adc
push
cli
lea
add
std
xor
mov
xchg
mov
xchg
cli
mov
fwait
cmc
fstl
je
jns
jmp
xchg
pop
jmp
sbb
xor
add
add
lock
jl
les
add
and
enter
pop
add
out
test
push
fsubrp
jle
call
mov
stos
dec
stc
aas
push
xchg
push
mov
xchg
pop
add
jb
mov
dec
call
js
aas
pop
or
in
and
pop
mov
add
add
push
pop
push
aam
mov
addl
adc
sbb
sub
push
jp
les
push
xchg
ljmp
pop
mov
pop
insl
xchg
jne
sub
jmp
ret
push
mov
mov
adc
sub
adc
mov
inc
dec
fidivrl
or
cld
testl
add
add
loopne
push
xlat
shlb
leave
sbb
inc
rcl
jne
sub
nop
sahf
insb
aaa
out
xchg
push
xchg
out
inc
js
jge
add
icebp
testl
add
add
movl
push
pushf
and
mov
jo
inc
jmp
sti
mov
jo
call
add
fwait
push
jle
lds
add
hlt
out
out
push
add
test
movl
pop
push
fwait
aad
xchg
jge
lds
adc
jb
rcll
js
jge
ret
add
ds
mov
jne
or
faddl
and
or
aam
and
jp
mov
inc
sarl
pop
add
mov
mov
push
add
jg
out
adc
test
mov
jle
aaa
push
push
mov
add
mov
das
testl
push
push
add
fxtract
xor
ja
push
les
shlb
mov
lahf
pop
cmpsb
gs
mov
and
sub
dec
xor
mov
and
outsb
add
sub
in
pop
int3
dec
xorl
popa
popf
cmp
or
cmpsb
pop
dec
add
push
jle
sarb
cmpsl
dec
test
mov
or
mov
or
lock
dec
adc
decl
sbb
lret
add
xchg
orl
dec
jl
ljmp
dec
xchg
pop
in
nop
mov
ljmp
mov
ljmp
clc
jmp
jmp
push
jge
lods
pop
aam
movsl
pop
rcl
rorb
lahf
fucomi
imul
jne
lods
adc
pop
adc
push
cmp
mov
push
dec
lret
arpl
insl
push
aas
fiaddl
push
sahf
jmp
mov
inc
fs
cmpsl
sbb
add
scas
shrl
push
ret
inc
adc
and
cli
lahf
xor
movsl
mov
sub
sub
jnp
test
enter
or
testb
sbb
aad
test
ljmp
add
mov
call
and
les
test
ljmp
jmp
cld
jecxz
cld
jecxz
cmp
mov
or
clc
mov
add
jns
push
stc
mov
punpckhwd
jmp
mov
cmp
adc
decl
mov
jle
lods
add
arpl
jle
and
pop
pop
xorb
mov
jge
in
test
pop
add
fdivrs
inc
decl
aam
lea
push
push
mov
rcrl
dec
fildl
std
ret
mov
dec
lea
cli
inc
push
mov
repz
add
xor
int3
inc
lock
shrb
incb
add
add
push
add
xchg
les
push
adc
add
mov
add
sti
je
dec
sbbb
insb
pop
push
stc
jae
inc
push
dec
sbb
dec
js
sub
stc
dec
mov
push
dec
out
inc
call
pop
push
test
xchg
outsb
add
sub
lret
push
inc
or
add
dec
push
push
js
add
sbb
push
fnstsw
loopne
add
sbb
add
jmp
jl
popl
daa
mov
mov
pop
pop
psubsw
dec
mov
jmp
mov
push
mov
jmp
jmp
push
aas
ret
dec
mov
notl
add
add
lahf
mov
repz
sarb
push
and
push
out
lods
adc
rorb
jmp
adc
add
movl
fs
rcll
mov
mov
clc
sbb
add
ret
adc
movsl
adc
jle
mov
test
adc
idivb
pop
add
nop
ds
aad
push
cmp
mov
mov
inc
in
mov
adc
jmp
xor
aaa
add
and
add
test
orl
clc
lea
out
xor
add
push
incl
add
add
rorb
mov
dec
in
add
and
or
ja
shl
or
jbe
inc
rorl
out
push
fsubrl
add
and
inc
call
jecxz
lea
jecxz
jmp
sub
push
les
or
aas
les
stc
inc
jmp
mov
jl
add
cwtl
aas
ret
call
add
add
cli
clc
repnz
sar
sub
lret
xchg
mov
lcall
pop
fxrstor
les
mov
push
add
aas
fsubrs
mov
test
sub
cmp
xor
add
sub
sub
inc
addl
add
add
insl
rolb
add
out
adc
insl
cmp
js
loope
xchg
gs
cli
cmp
js
mov
dec
xor
jmp
cld
inc
sub
add
mov
sub
mov
mov
cmp
lock
inc
fadds
or
pop
add
add
pusha
js
loop
fldcw
jle
loope
pop
push
cmp
sti
dec
pop
add
pushf
pand
cmp
adc
dec
xchg
add
ljmp
dec
mov
jmp
or
inc
sahf
nop
mov
movsb
jmp
dec
add
push
xchg
add
movl
inc
push
aas
mov
or
xor
in
dec
insb
push
in
xor
add
add
push
add
pop
cmp
jae
dec
or
sbb
in
mov
add
ret
mov
and
fdivrl
add
les
nop
sub
fnstcw
or
jle
jmp
add
rorb
inc
add
roll
mov
int3
or
jb
lea
pop
mov
lods
add
jmp
inc
dec
std
adc
clc
je
sub
adc
les
adc
cmp
call
mov
jbe
shll
jp
call
sub
call
dec
xchg
pop
sbb
popa
pop
adc
and
fxch
pop
xchg
mov
and
dec
or
aas
inc
insl
stc
inc
in
test
gs
sub
sbb
or
dec
stos
sbb
sbb
and
repz
push
cmc
xchg
mov
rclb
dec
mov
cmp
add
push
ja
loop
mov
mov
in
ds
cld
sbb
sub
pop
inc
mov
pop
inc
dec
pop
stc
inc
rol
repz
sub
je
out
add
loop
call
mov
mov
das
dec
add
push
dec
je
pop
adc
ret
inc
int3
add
test
xor
fdivrl
inc
push
lock
push
fmull
ja
mov
jbe
das
mov
test
movl
roll
out
stos
inc
mov
idivl
cmp
imul
inc
test
testl
nop
imull
jge
movl
add
mov
test
jl
jmp
jo
sub
or
test
imul
jg
sbb
das
idivl
jae
jne
sbb
dec
adc
or
inc
cmc
jns
lea
hlt
mov
shrb
add
icebp
clc
mov
les
push
pop
push
lods
inc
hlt
push
js
adc
sahf
lds
test
insl
cli
lcall
rorb
sarb
push
or
jle
and
add
fs
fisttpl
or
dec
pop
hlt
inc
fsubs
inc
xlat
add
loope
fwait
sbb
cmp
xlat
mov
rcl
inc
dec
dec
adc
xchg
mov
pop
jmp
inc
jg
mov
cmpsb
and
mov
clc
sub
add
jne
adc
ja
cmpsb
and
add
les
jge
sub
addl
in
sbbl
and
ret
push
inc
push
add
jp
cmp
mov
add
lahf
add
stos
mov
andb
xlat
gs
ret
imul
add
mov
mov
add
add
sar
xchg
xor
jg
add
xor
jmp
jbe
jmp
push
mov
lds
pop
std
roll
repz
js
jmp
sbb
xlat
push
scas
cmpsl
mov
mov
out
add
or
cmp
jl
movl
push
call
movsb
cmc
test
xor
add
jl
push
test
movl
mov
jne
push
jbe,pn
jl
xor
lods
mov
fisttpll
jne
aad
divb
addl
movl
cmp
mov
ljmp
adcb
add
add
xor
movsl
adc
outsb
cmpb
xchg
jg
aaa
jno
ljmp
or
push
insl
pop
xor
je
xchg
inc
cli
jne
ret
adc
popf
insl
push
mov
cld
pop
pushl
adc
loop
cmp
ret
jb
ret
adc
add
inc
jle
adc
shr
gs
lds
je
popa
cli
mov
xchg
inc
and
cmp
loope
inc
inc
mov
push
add
inc
call
sub
push
and
mov
inc
mov
call
fildll
dec
imul
clc
push
rolb
sti
and
pop
aas
imul
add
xchg
fbld
test
fbstp
iret
es
out
inc
stc
dec
xchg
fists
dec
mov
aas
aas
imul
or
cmp
lret
cmpl
jnp
jae
out
sbb
dec
leave
cld
pop
lods
mov
cmp
push
fs
lea
mov
inc
add
sbb
insb
add
dec
pop
adc
test
fadd
dec
gs
les
push
push
xchg
lock
sbb
mov
pop
jne
ret
or
notl
sub
add
dec
mov
jmp
cli
push
pop
rcrl
not
inc
shr
nop
inc
add
dec
mov
andb
fiaddl
mov
add
add
cs
in
inc
pop
fs
sub
jmp
add
dec
jbe
or
pop
call
pop
notl
lods
add
sbb
mov
mov
push
jb
cs
stc
inc
inc
pop
insb
jecxz
add
cmp
cmc
add
out
cmc
push
inc
decl
rorb
mov
in
or
std
xchg
push
hlt
data16
inc
push
fucomp
push
test
andb
sti
mov
fstl
clc
push
sub
cmp
pop
xor
flds
clc
in
je
lea
jle
jg
hlt
fmuls
push
ja
mov
rcpps
loop
jmp
sbb
push
inc
lcall
shlb
pop
inc
les
add
or
ss
add
or
js
test
stc
jecxz
xchg
dec
fcoml
rcll
rclb
jge
pop
inc
les
sar
dec
or
out
add
jb
xchg
inc
orb
cmp
dec
loop
push
aas
and
leave
out
hlt
mov
stc
cmc
xor
inc
push
insl
mov
dec
outsb
adc
add
jg
cmp
aaa
test
lea
inc
add
je,pt
mov
dec
in
rorl
fimull
inc
xchg
mov
xchg
cmp
mov
aas
fucomp
fdivl
cmp
enter
mov
sub
ss
pushf
pop
mov
popf
sbb
pop
add
jle
inc
xorb
cmpsb
cli
das
add
subb
push
lock
pop
insb
cmp
mov
orb
sub
insb
cmp
les
imul
jle
leave
xchg
lock
scas
call
sbb
dec
mov
mov
xor
mov
popa
sahf
and
imul
into
ljmp
adc
mov
add
add
inc
shr
xlat
sub
notb
sub
or
ret
stos
call
mov
cmp
dec
inc
push
jo
iret
pop
sub
ret
mov
aam
add
out
test
push
jl
test
jb
mov
std
lcall
push
cli
je
sbb
repnz
lret
push
add
pushf
in
clc
cmp
jbe
xor
inc
push
stos
jmp
push
jge
add
in
xor
jnp
adc
stc
cmp
inc
push
push
push
push
push
jns
daa
ljmp
daa
lcall
jmp
mov
sub
test
les
test
movb
les
sub
mov
add
les
add
les
or
jp
cmp
and
ret
incl
idiv
inc
jo
je
pop
icebp
clc
mov
adc
fwait
loopne
imul
pop
call
cmp
fs
ret
incl
add
in
lods
sbb
cmp
dec
in
xchg
push
sarl
jl
arpl
or
add
add
push
popa
xor
test
les
fiadds
sbb
aaa
jg
les
add
mov
xchg
jmp
xchg
call
add
add
call
cmp
add
pcmpeqb
sub
mov
out
arpl
add
add
add
js
loopne
aam
adc
sbb
add
es
outsl
xlat
lds
jmp
popf
xorb
rolb
loopne
mov
ret
jnp
or
sti
ficoms
add
sbb
movb
test
sub
jmp
add
push
stos
sbb
adc
inc
rcrl
rol
add
jmp
xor
add
xchg
movaps
mov
mov
add
jno
mov
int
inc
pop
xchg
ds
push
jbe
cmp
jae
stc
xlat
sahf
pushf
sbb
add
push
pushl
cmp
sbb
add
add
sbb
jae
lret
clc
fdivl
test
cli
imul
stc
xlat
loop,pn
je
fsubrl
add
sbb
push
outsb
idiv
mov
stc
adc
les
mov
pop
adc
das
stc
arpl
pop
sti
adc
jle
push
std
inc
lock
xchg
pop
mov
add
loopne
rclb
xlat
adc
jne
les
movb
jp
gs
mov
push
sti
sbb
les
cs
ljmp
std
clc
mov
adc
cmpsl
cmp
les
jge
or
call
inc
test
and
addl
push
mov
cmpsl
add
mov
ljmp
or
lods
fistps
add
mov
addb
add
inc
scas
fisttps
mov
or
inc
in
and
ss
mov
scas
stos
and
iret
mov
add
clc
test
cmpsl
in
imul
daa
add
jne
xor
add
add
mov
cmpsb
call
xchg
sbb
ds
notb
fwait
mov
orl
shrb
enter
call
pop
sbb
inc
or
mov
add
mov
lahf
jmp
cmc
add
adc
sub
push
mov
add
add
mov
insb
xchg
cltd
js
cmp
cmp
jmp
outsb
or
aam
add
rolb
ljmp
and
and
mov
adc
insl
push
cli
jo
ficoml
mov
sbb
and
and
inc
test
add
add
mov
inc
push
jp
cli
adc
test
insl
adc
cmpsb
pusha
and
push
popa
and
sub
or
ficoml
cmp
divl
xchg
adc
incl
cli
adc
inc
mov
inc
and
add
xchg
les
xor
imul
sbbb
or
stc
jbe
inc
dec
push
mov
iret
push
repz
and
adc
sbb
mov
xor
test
test
ss
in
add
add
stos
sub
dec
inc
filds
inc
pop
stc
mov
xor
mov
mov
iret
dec
xchg
mov
stc
repz
cld
test
pop
xor
sbbl
loopne
dec
inc
cmp
adc
out
mov
pushf
and
add
stc
push
adc
inc
pop
sub
add
mov
mov
test
nop
sbb
sub
cs
adc
mov
jmp
fcmovne
leave
call
ret
cmp
ds
je
xorl
add
test
scas
push
mov
out
lahf
jmp
mov
push
lds
add
xchg
mov
adc
enter
mov
out
xchg
mov
dec
jb
push
insb
jmp
or
idivb
hlt
dec
sahf
roll
sub
add
jle
or
push
xchg
insb
mov
lret
or
jmp
jb
xor
adc
push
lahf
inc
hlt
dec
ds
or
call
add
add
xlat
mov
loopne
dec
ljmp
fcompl
mov
add
shrl
push
mov
jle
jp
gs
add
pop
push
and
inc
and
or
push
pop
hlt
rcll
arpl
adc
out
lock
jne
lcall
jb
ss
add
add
fisubrs
cwtl
inc
clc
push
ds
cli
adc
push
push
and
repz
xchg
or
sarb
mov
aas
arpl
pop
inc
out
add
jmp
ret
jl
pushf
lahf
sbb
mov
stc
lret
add
pop
int
sbb
int3
sub
fists
test
add
add
sbb
mov
std
test
je
jp
aas
jl
pop
mov
xchg
imul
pushl
aam
aas
mov
incl
xor
push
test
sbb
jmp
mov
mov
fcmovnb
test
sbb
add
sub
imul
scas
mov
sbb
add
negb
mov
in
lods
lret
fldl
add
sub
repnz
mov
dec
xchg
out
ret
dec
mov
add
cmp
add
bound
sbb
sbb
orb
mov
jmp
add
inc
jmp
in
imul
pop
leave
sbb
insl
enter
scas
cmpps
or
add
jge
pop
or
cmc
inc
or
iret
enter
popf
pop
je
loopne
push
ret
cmp
outsb
int
mov
add
cwtl
div
fadds
sbb
mov
add
stos
mov
add
mov
add
xchg
leave
push
call
or
imul
and
sub
divl
and
clc
pop
pop
inc
jo
inc
divl
adc
testl
addb
and
cwtl
inc
and
cwtl
or
add
push
call
insl
and
add
and
pushf
std
mov
lcall
and
sahf
jne
cmp
dec
les
out
sti
mov
dec
call
cwtl
cmp
dec
out
cmc
inc
push
xchg
mov
movsb
repz
pop
jno
jns
test
sbb
aas
jae
pop
dec
stos
ficoms
adc
adc
out
std
mov
or
dec
stc
inc
adc
mov
std
addb
test
add
push
jnp
mov
stc
mov
xchg
insb
out
push
stc
push
xchg
shll
out
lret
pop
lahf
lods
inc
dec
movb
rolb
ret
sub
sbb
xadd
call
mov
push
jmp
add
add
xchg
mov
ficoml
jmp
jle
loope
mov
les
out
idivl
icebp
js
add
inc
sbb
push
shr
add
jmp
adc
icebp
sub
add
add
mov
inc
icebp
inc
add
cwtl
in
adc
pop
fisubrs
or
jb
pop
idivl
enter
jbe
adc
movl
sbb
fsubrl
repz
jmp
fiadds
pop
dec
mov
fsts
bound
add
push
add
loopne
in
add
adc
xor
or
call
and
mov
add
adc
sbb
or
insb
push
sbb
jne
sbb
add
add
pop
fidivrs
movsb
push
and
xchg
jbe
sbb
dec
push
and
je
pop
je
inc
and
inc
and
push
and
and
addb
je
repnz
es
and
inc
and
sbb
jge
shll
mov
push
pushl
adc
xchg
shll
out
sub
adc
les
add
sbb
adc
sti
sub
inc
xor
decl
xchg
push
inc
les
ret
inc
out
pop
les
roll
add
push
sti
pop
xlat
pop
repz
pop
pop
push
sar
mov
arpl
pop
outsl
lahf
adc
sub
dec
pop
jb
insb
loopne
roll
push
jl
icebp
jge
incl
add
add
mov
fidivrl
clc
or
push
lds
add
aam
lock
inc
int
insl
add
add
jmp
data16
add
sbb
add
adc
sbb
push
xchg
add
add
jmp
sub
xor
loopne
test
dec
rol
inc
xor
shll
push
jmp
add
rcll
jmp
jge
add
in
add
lcall
movsl
mov
adc
sub
sub
mov
add
popf
add
mov
jo
mov
mov
int
mov
iret
mov
pusha
inc
stos
add
mov
bound
ret
in
mov
outsb
or
outsb
sub
jmp
ficoml
imul
and
addl
je
imul
or
add
fcoms
test
add
fldenv
mov
bound
adc
inc
push
mov
push
lcall
adc
pop
xchg
shll
and
add
add
pop
add
sahf
pop
and
sbb
sbbl
push
add
sbb
sbb
mov
pop
adc
loope
test
push
aaa
es
lcall
fisubl
sbb
sbb
outsl
divl
fcomip
sbb
pop
ljmp
les
cmpsl
and
mov
push
stc
adc
sbb
insl
pop
add
les
and
jno
stc
dec
outsl
xor
das
outsb
and
push
add
dec
xchg
add
les
pop
add
push
xor
cmp
push
inc
pop
sub
push
cmpsb
inc
inc
shll
les
cmpsl
and
pusha
add
push
cmpsl
xor
popa
add
push
cmpsl
sub
arpl
les
cmpsl
and
push
add
push
test
popf
lcall
sub
xor
scas
cli
sub
xor
mov
jge
xor
das
mov
lahf
les
call
or
fs
add
je
add
add
pop
add
adc
out
add
xchg
popf
fiaddl
add
int3
ret
jmp
mov
cld
fildl
adc
ljmp
add
imul
out
testl
movl
testl
push
jecxz
xor
push
sahf
pop
jmp
sub
mov
hlt
sbb
jmp
inc
or
jmp
adc
mull
add
add
sbb
jmp
nop
dec
and
movl
outsb
test
cmpsb
or
and
mov
out
inc
sbb
mov
add
add
in
cmpb
mov
in
add
or
test
cli
lcall
stos
clc
ljmp
ja
add
mov
jle
orl
add
sub
or
add
add
out
sbb
or
jb
jecxz
add
add
test
ret
lods
hlt
jge
mulb
stc
bound
inc
or
and
mov
imul
mov
sarl
add
ss
aas
in
test
xchg
repnz
jae
xor
shr
addr16
pusha
add
mov
scas
and
int3
test
pop
sub
stc
inc
mov
sbb
sub
xchg
push
call
aas
arpl
addr16
stc
test
dec
ret
cmp
add
je
fdivr
aaa
push
int
dec
inc
dec
rol
inc
xchg
mov
mov
loope
mov
add
andb
dec
push
in
les
mov
les
jmp
add
rclb
lds
lods
or
add
add
push
fs
sub
xchg
and
in
enter
pop
stos
push
push
pop
push
dec
test
push
rolb
add
xor
pop
inc
dec
insb
and
jle
lods
jecxz
insl
in
or
out
mov
adc
movb
push
dec
lds
insb
insb
out
notb
add
jmp
rolb
sbb
maskmovq
mull
out
push
sbb
cmp
ret
idivb
cld
xchg
stos
jmp
pusha
push
add
xchg
add
es
cmp
movl
idiv
inc
repnz
jmp
mov
lock
or
std
mov
inc
je
xor
je
pop
notl
or
jge
inc
add
jnp
leave
call
es
sub
push
js
or
je
xor
cmpsb
sub
cmp
or
add
add
repnz
ljmp
fstl
in
in
idivb
push
outsb
push
pusha
add
add
or
call
jge
sub
add
pop
sarl
add
adc
decl
add
mov
fbld
stos
and
or
faddl
aam
sub
cmp
cmp
lret
add
pushf
int3
xor
mov
xchg
inc
xchg
add
and
add
and
jecxz
arpl
repz
pop
or
pop
and
dec
call
add
mov
gs
add
lods
sbb
push
repnz
mov
stos
popa
push
jmp
add
or
out
add
add
cmp
fimull
sbb
cmp
lods
sbb
loop
stos
fs
jmp
les
in
or
pop
sahf
addb
inc
or
or
sbb
loope
mov
loop
mov
das
fs
insb
pop
mov
loopne
add
or
add
add
add
repnz
out
stos
adc
int
arpl
jmp
movl
push
bound
adc
es
add
mov
fldt
enter
movl
sbb
jb
sbb
out
stos
std
add
dec
in
jmp
lahf
mov
scas
sbb
pop
mov
mov
lret
add
mov
add
aas
adc
dec
pop
pop
mov
mov
mulb
pop
imul
and
xchg
je
ja
mov
testl
in
add
mov
add
ffree
loope
cmpsb
shll
hlt
add
inc
testl
inc
jmp
test
sub
fldenv
sbb
testb
add
inc
insl
jns
add
add
mov
aas
add
sub
sub
fdivr
icebp
leave
add
inc
les
xchg
sbb
mov
je
mov
add
inc
sbb
add
jge
sbbb
dec
test
mov
imull
mov
and
ret
ljmp
bnd
out
push
sbb
inc
scas
xchg
pop
loop
les
sub
and
pop
js
xor
out
mov
inc
inc
rolb
add
sti
sbb
add
jmp
mov
add
fbstp
cmp
sub
add
add
fs
cmpsl
mov
push
inc
inc
push
addr16
jg
jp
sbb
sbb
aad
sub
fisubrl
adc
add
jp
aam
push
cltd
mov
xlat
mov
sub
lds
inc
ljmp
add
lds
stos
mov
cli
aad
add
in
pop
jo
jmp
call
add
add
mov
std
pop
std
or
push
inc
add
mov
enter
rolb
loope
add
sbb
pop
add
sub
xor
pusha
sub
jmp
shll
ret
mov
lcall
inc
jmp
add
push
cld
insl
sbb
insl
pop
lret
cmp
test
sbb
test
mov
add
xchg
add
push
imul
or
add
jge
mov
xchg
push
lcall
or
jne
sbb
push
clc
testb
dec
ljmp
mov
push
mov
mov
jne
sbb
ret
ljmp
psubw
add
mov
mov
sbb
push
inc
pop
pop
les
sub
inc
idiv
or
or
push
stc
mov
icebp
aas
les
pop
dec
pushf
mov
sbb
or
pop
subl
cli
clc
xchg
add
jae
arpl
stc
fstps
les
pop
dec
cmp
lret
add
in
fmuls
pop
imul
sub
pop
sub
mov
lods
movsb
push
dec
mov
bswap
add
data16
cmpsl
sbb
arpl
add
jg
jp
mov
push
or
inc
fs
mov
adc
stos
add
jecxz
cld
add
fs
add
add
add
in
jo
cld
add
adc
inc
add
iret
jae
sub
ss
subb
sub
mov
adc
jmp
lods
dec
idivb
popf
jae
mov
shr
dec
aad
mov
jo
insb
into
xchg
mov
shlb
in
push
cli
mov
cmc
sahf
mov
pop
jge
dec
sbb
cmp
push
jb
mov
mov
and
cmc
mov
ljmp
xchg
bound
decb
xor
add
push
mov
dec
sbbb
ret
mov
add
add
lcall
inc
incl
add
add
mov
add
add
fs
call
jbe
sub
das
pop
add
xchg
in
add
and
movsb
add
and
add
adc
and
fdivrs
call
pop
pop
add
in
xlat
mov
and
pop
add
xor
cli
add
mov
add
add
loope
das
or
add
add
pop
cli
outsl
xlat
lods
add
in
add
aas
cmpsl
decb
inc
mov
call
dec
lods
add
and
daa
insb
cmpsl
aad
push
jo
je
arpl
and
xchg
call
lock
sahf
cltd
push
cmp
ljmp
cmp
stc
dec
lods
cltd
inc
xlat
lods
lods
dec
xchg
mov
ret
add
add
gs
pushf
jnp
mov
clc
sbb
test
xchg
clc
mov
push
pop
enter
mov
dec
mov
adc
and
sbb
int3
shr
jle
and
sbb
xor
or
call
mov
jne
adc
insl
sti
ret
xor
add
sub
call
xchg
jno
aad
nop
jnp
invd
out
repnz
push
pop
jle
or
dec
jl
orb
outsl
ljmp
push
add
mov
and
ficompl
dec
mov
sbb
mov
js
idivb
mov
cld
ffree
pop
push
xor
mov
add
or
add
mov
shlb
push
push
inc
inc
add
enter
sub
xor
mov
xor
adc
push
insb
jmp
std
adc
ret
hlt
outsl
adc
push
ljmp
sahf
loop
pop
pop
idiv
mov
lods
pop
mov
scas
mov
lods
or
and
add
add
add
call
imul
and
call
das
add
push
sbb
mov
test
sti
jb
inc
push
cli
jle
call
mov
pop
jge
xor
xlat
int
pop
popl
sbb
push
push
cs
clc
inc
decl
test
bound
add
cli
mov
jl
fcoms
xchg
stos
sub
jo
mov
sti
fwait
add
xchg
push
stc
add
test
jns
dec
sub
push
mov
lahf
xchg
push
stc
imul
andl
stc
cmp
ret
mov
lret
addr16
mov
push
stc
xor
incl
idiv
xchg
into
jns
enter
nop
mov
frndint
lock
les
sub
stc
inc
push
mov
mov
iret
stc
das
sbb
jnp
or
jb
jmp
sub
lds
add
push
stc
pop
shlb
filds
fsubp
iret
or
pop
les
stos
fsubrl
cmpsl
or
scas
jns
add
add
ret
in
sbb
scas
or
mov
inc
enter
idiv
jg
adc
faddl
ja
add
dec
add
mov
insb
lock
outsl
xchg
add
cmp
movl
add
addr16
incb
mov
test
je
bound
lcall
add
cmp
cld
aas
or
ljmp
xor
pop
cmc
push
cmp
pop
jecxz
add
shl
jb
sub
jo
add
pop
xchg
roll
dec
xchg
add
or
mov
add
bnd
jo
jae
pop
call
jne
fisttpll
adc
ret
testb
add
add
js
or
or
jae
lcall
jns
add
jp
adc
jl
into
inc
jg
jne
repz
shll
ret
push
mov
lods
push
xchg
sub
add
mov
push
mov
mov
inc
loopne
nop
xlat
jbe
outsl
mov
in
test
xchg
aam
jg
mov
in
push
mov
in
add
inc
in
jno
arpl
or
jg
enter
inc
mov
pop
pushf
push
enter
inc
je
mov
add
fimuls
sub
pop
dec
and
or
dec
lods
xchg
add
test
lahf
arpl
pop
push
add
test
xor
insb
xchg
add
je
jp
adc
aad
cmp
cld
ja
insb
xchg
add
pop
dec
jnp
stc
out
outsb
stc
jbe
icebp
push
push
jno
aaa
addb
cmpsl
mov
add
bnd
xchg
sbbl
jmp
jle
cld
inc
roll
jno
fistpll
add
add
lock
je
sti
mov
pop
jne
incb
push
or
add
imul
shr
rorl
add
jl
sub
mov
insb
aad
push
jb
or
inc
jmp
add
add
call
fcmovbe
mov
xchg
jno,pt
loope
jb
loope
add
add
scas
jo,pn
hlt
insb
loop
dec
arpl
lock
jb
lock
mov
inc
push
add
jle
add
loopne
dec
and
sti
jecxz
bound
cld
xor
les
add
outsl
int3
call
push
or
pusha
out
imulb
jmp
testl
popf
lods
pop
pop
hlt
inc
mov
or
or
pop
push
mov
mov
insb
mov
jge
cli
repnz
xchg
mov
add
add
push
dec
repnz
call
mov
popf
xchg
aas
mov
stos
jle
incl
fwait
xchg
aas
cmp
call
sub
add
inc
popf
xchg
hlt
test
jecxz
push
test
inc
add
mov
insl
mov
pop
sbb
idiv
adc
jg
hlt
add
les
jl
shlb
dec
push
add
les
or
add
call
cld
dec
or
movl
scas
jg
add
add
jns
lcall
and
sbb
add
or
inc
dec
in
mov
push
clc
dec
push
fnstcw
std
test
add
bound
flds
pop
or
icebp
das
mov
pop
fisubrs
popf
mov
nop
int
gs
icebp
pop
mov
rclb
cmp
idivl
jg
xchg
jae
push
jmp
push
or
push
adc
enter
dec
mov
push
mov
mov
push
leave
stos
sub
dec
jb
jb
mov
movl
cmpb
mov
movl
es
fisubrl
test
in
cmp
aam
add
add
add
sbb
rcll
or
xchg
xor
bound
aam
ljmp
mov
inc
outsl
mov
sub
jne
lret
data16
pop
je
pop
jne
insl
add
mov
fldl
xchg
movsb
pop
jne
das
adc
data16
ret
pusha
mov
xchg
push
and
mov
add
add
push
push
add
lea
add
add
xor
in
add
and
push
push
scas
add
lea
push
ds
add
pushf
add
push
add
xchg
adc
lret
les
dec
and
jne
and
jne
and
pop
dec
and
jmp
ja
mov
in
xchg
inc
dec
sub
xchg
dec
loopne
ljmp
or
add
fcoml
add
in
ljmp
rcrb
test
adc
add
jle
aam
mov
int
mov
add
dec
mov
popa
jae
jae
lds
adc
jmp
icebp
mov
pop
ljmp
dec
sub
outsl
test
fs
sbb
jmp
adc
cmp
add
call
in
lcall
cmpl
filds
pop
xor
out
call
sub
ljmp
daa
jbe
dec
in
ja
mov
jecxz
ljmp
loopne
xchg
and
loope
add
and
xchg
sub
aam
jmp
stos
xorb
sub
mulb
jns
cmp
shl
adc
je
xor
push
out
mov
jge
movl
scas
cmpsb
push
pop
push
int
addb
pop
xchg
sub
shll
jb
orb
fucom
xchg
loop
jl
push
inc
insb
add
pusha
adc
pop
enter
add
dec
sub
push
dec
fs
jae
mov
adc
jge
mov
jge
jns
jge
lds
dec
and
xorl
jmp
in
stc
incl
addb
mov
shll
insl
push
adc
push
push
and
roll
mov
stos
mov
fldl
jg
inc
mov
pop
push
jg
and
jle
call
ret
ret
mov
sbb
mov
or
mov
int3
fcompl
mov
stos
xor
mov
xchg
jb
out
pop
stos
movsb
loop
insb
adc
mov
adc
repnz
add
push
mov
aad
add
lods
jle
mov
mov
in
jno
call
or
jae
push
mov
mov
cwtl
or
xor
pop
clc
addl
or
call
fisttpl
inc
jmp
add
and
mov
decb
push
add
mov
testb
mov
add
in
xorb
add
add
add
add
or
dec
add
push
or
jl
pop
adcl
jl
mov
gs
lds
icebp
xlat
jns
xchg
push
call
cld
jnp
fiadds
push
sbb
std
dec
add
outsb
push
push
ficoms
sbb
popa
mov
add
pop
je
scas
pop
add
add
add
loop
je
pop
loop
jbe
sub
test
cmp
mov
mov
ljmp
loop
adc
add
arpl
push
cmp
dec
pop
jbe
arpl
fwait
push
xor
lcall
insl
in
out
add
jne
push
jo
subb
push
add
add
xchg
cmp
adc
cmpsl
test
int
mov
lcall
in
bound
into
pushf
jge
divl
or
and
jge
cmp
pop
dec
lds
mov
pop
ret
add
push
cld
push
and
cld
int
pusha
add
push
inc
call
stc
imul
sbb
push
adc
fiadds
test
jb
or
or
fs
xchg
mov
int3
lods
mov
lods
dec
data16
stos
dec
dec
mov
clc
xor
sti
adc
int3
inc
add
jno
xchg
mov
stc
mov
adc
pop
jns
lds
popa
outsb
sub
lods
cld
pop
rorb
add
pop
xchg
add
add
fcoml
test
xchg
cld
inc
pop
andb
or
aad
add
je
cld
adc
ret
ja
adc
dec
js
movaps
rcl
dec
ret
ret
xchg
outsb
xor
dec
addb
int
inc
les
stos
sahf
out
push
popf
adc
add
retw
pop
mov
add
sub
psubd
out
roll
push
mov
pop
hlt
js
stos
pop
out
push
dec
adc
adc
mov
inc
test
xor
push
dec
inc
add
mov
add
xchg
loopne
cmp
fiaddl
loope
add
adc
inc
inc
push
fnstenv
lcall
or
add
adc
push
sub
sub
cli
jns
leave
arpl
or
sar
adc
les
and
arpl
loope
in
cmp
cmc
and
mov
ljmp
sub
inc
shlb
ljmp
xchg
inc
adc
lock
push
outsb
or
je
mov
movl
add
xchg
movsb
mov
mov
or
push
data16
ficomps
add
stc
fstps
add
and
push
cmp
decl
cmp
mov
int3
ror
lret
int3
lret
xchg
ljmp
sbb
cmp
je
mov
cld
sub
fldcw
pop
mov
outsb
arpl
gs
adc
xor
xchg
add
add
lock
les
or
push
test
out
jp
adc
mov
mov
push
lock
out
jl
adc
jge
fstl
jp
push
jge
out
jno
lods
or
les
call
dec
lods
xor
jnp
call
inc
xor
pop
and
ret
das
add
adc
out
push
add
add
mov
mov
add
lock
and
mov
ljmp
adc
add
stc
pop
push
dec
shrb
psrld
mov
push
add
mov
cmovno
addb
mov
push
pop
je
inc
fcmovne
sub
stc
mov
adc
les
add
enter
xchg
pop
int
adc
sub
maskmovq
testl
mov
shll
roll
pushf
ds
dec
aam
jge
leave
mov
jmp
int3
xchg
fisubrs
xor
inc
les
add
pop
push
dec
outsb
lret
inc
fstpl
push
je
addb
ja
jmp
pop
or
or
mulb
aas
push
sub
add
rcl
mov
clc
mov
adc
push
or
lods
add
push
mov
jo
addb
adc
jns
xor
loopne
jb
out
push
push
mov
sub
mov
les
inc
cmp
jmp
push
mov
xor
sub
ret
push
push
mov
aaa
push
ljmp
ret
lds
fmull
xchg
sarb
add
mov
sbb
mov
cli
fstps
out
loopne
lret
jmp
and
push
stc
loopne
jae
les
mov
or
mov
repz
call
aas
orb
test
jg
enter
mov
pop
dec
dec
sub
pop
add
in
xor
xchg
out
inc
aam
lret
pop
pop
imul
jo
ja
mov
dec
push
fsubl
dec
xor
mov
lret
pop
pop
add
nop
sbb
lret
mov
ret
fs
sub
jg
test
mov
mov
test
jne
ja,pn
adc
je
add
mov
add
fs
add
sub
adc
inc
jmp
xorl
call
or
add
jmp
mov
inc
jmp
add
push
push
xchg
xor
leave
loopne
add
ljmp
mov
pusha
inc
dec
add
mov
call
add
sarl
bound
lea
add
roll
pushf
or
push
lcall
notb
mov
loop
xchg
mov
outsl
jge
inc
data16
xor
out
xor
jo
jb
sbb
push
cmp
test
mov
xchg
inc
add
sub
fs
mov
insb
les
add
sub
clc
push
fistpll
stos
push
or
stos
icebp
fbstp
test
cmp
mov
les
out
sbb
push
fstpt
add
push
sub
mov
mov
add
pop
add
fsts
pop
je
mov
rcr
pop
xor
stc
add
pop
jge
cltd
pop
mov
sub
add
sbb
jne
cs
jae
mov
pop
dec
pop
mov
jle
mov
jnp
adc
dec
push
pop
dec
mov
dec
jge
in
mov
lods
add
les
ds
aas
xchg
xchg
cmpsl
push
out
loop
ljmp
cmp
mov
add
add
mov
scas
adc
out
jne
mov
in
outsb
enter
je
addr16
in
add
xchg
sarb
inc
dec
or
mov
stos
jp
add
add
aas
sub
xor
pop
repnz
mov
test
insb
jmp
in
add
add
call
lds
ss
and
xchg
in
int
mov
aad
jmp
ret
ljmp
and
repz
ljmp
aam
add
arpl
cld
push
mov
sub
pop
les
nop
ret
mov
jmp
push
dec
lret
out
xor
jnp
or
test
xchg
ret
call
add
push
in
jl
add
add
push
xorl
adc
mov
fisttpll
fiadds
add
fidivrl
or
mov
movl
rcrb
stc
push
mov
lret
mov
lret
hlt
lret
imul
lcall
rolb
push
or
add
mov
inc
push
adc
jae
mov
je
dec
std
pop
inc
es
mov
push
faddl
je
sub
stc
test
imul
rolb
and
push
xor
jge
mov
andl
xor
lret
push
out
imul
jp
inc
dec
ljmp
pop
jge
sbb
xorb
add
xchg
sbb
push
insl
add
push
pop
and
push
std
push
les
push
call
aas
sub
mov
cmovge
push
call
aas
shlb
shr
adc
pop
ret
pop
inc
add
add
jns
and
sarb
shll
add
add
push
xor
std
xchg
and
push
dec
cli
notb
out
jns
mov
and
push
nop
mov
cmc
sub
push
add
bound
adc
add
mov
jp
lret
add
movsb
mov
out
xor
jg
or
call
inc
xor
filds
add
add
inc
fcoms
lahf
xlat
dec
jg
push
push
add
xorb
jp
call
inc
push
call
push
inc
inc
mov
push
fmuls
arpl
cld
push
das
cmp
add
lea
out
inc
xor
jge
dec
inc
jg
inc
aas
jge
pop
add
imul
sub
xchg
std
xor
add
add
dec
bound
pusha
bound
pusha
jo
aas
jge
xor
mov
sbb
dec
mov
jmp
divl
ljmp
decb
leave
ret
add
add
xchg
dec
jb
xor
jg
mov
pushf
popf
xlat
movl
popl
outsb
jbe
jmp
sub
popa
les
add
mov
fdivl
and
inc
add
jge
cwtl
jmp
jae
add
add
inc
in
idiv
add
addr16
mov
into
mov
int
inc
add
fisttpll
mov
enter
xchg
je
xlat
dec
add
lea
mov
jge
add
mov
mov
pop
or
mov
imul
je
loopne
dec
mov
or
ja
mov
add
xor
cmp
cmp
jo
dec
dec
dec
sub
stc
mov
loopne
int3
out
cmp
sbb
xor
and
inc
sbb
sub
push
mov
movsb
cmp
enter
and
add
fisubs
insl
pop
add
fldl
aas
xchg
sub
stc
xorb
and
fiadds
add
xchg
int
lret
adc
push
sbb
jb
mov
xor
ds
jg
add
mov
les
call
jge
aas
je
inc
sti
call
push
les
pop
movsb
aad
jmp
add
les
call
nop
xchg
shr
xor
xor
dec
cmpsb
into
add
add
insb
inc
lods
jp
add
out
rorl
out
inc
movsl
addb
in
les
or
mov
lea
push
shll
add
mov
loope
mov
roll
add
add
mov
cld
xorb
add
negb
jle
ret
bound
fiaddl
sti
les
sub
push
mov
hlt
add
adc
mov
mov
ljmp
inc
push
xchg
fs
jmp
fimuls
sub
outsl
xchg
out
add
jmp
push
jle
das
dec
or
dec
dec
in
pop
pop
ret
scas
stos
xchg
push
sbb
dec
push
pop
jo
outsb
pop
jbe
cmp
daa
lods
hlt
xor
add
das
cmp
xor
dec
push
insb
sub
popf
dec
push
pop
push
cmp
cmp
xorl
stc
cli
dec
pop
mov
ds
ret
test
lret
lret
dec
jmp
push
dec
je
and
jge
les
je
div
incb
jno
dec
rcr
pop
sub
pop
test
lret
add
fsubrp
sbb
add
dec
xchg
in
adcl
add
mov
xor
mov
jns
jl
inc
insb
aas
stc
xor
in
sub
shufps
dec
add
add
sahf
jnp
or
jns
add
fs
test
lahf
in
mov
movsb
jns
cld
arpl
ljmp
daa
or
arpl
cltd
movsb
inc
shr
add
cmpl
mov
outsl
mov
test
shr
push
sarb
inc
aas
cmc
cs
rorl
sti
iret
call
xor
add
add
ret
jle
fs
int
pop
scas
push
addr16
iret
call
pop
aaa
cmc
arpl
sbb
andps
int3
call
push
dec
push
leave
mov
add
jnp
call
out
arpl
jmp
jmp
sub
cmp
mov
cmc
add
push
dec
or
cmp
fidivrs
leave
mov
cmc
add
popf
xchg
test
hlt
add
mov
std
scas
test
into
xchg
dec
int
mul
sub
push
pusha
call
movl
shll
mulb
sbb
cld
scas
add
inc
add
testb
mov
insb
je
ja
add
add
add
mov
add
sbb
icebp
andl
xor
xchg
pop
add
dec
add
leave
clc
mov
jle
add
inc
mov
and
xchg
orb
inc
rorl
dec
cmp
repnz
fisttpl
inc
dec
xchg
outsb
add
mov
les
add
enter
add
cmp
loop
or
fiadds
add
and
das
add
pop
push
or
addr16
insb
add
add
cmpb
ficoms
test
loop
clc
aas
adc
or
out
loopne
pop
fisubs
call
dec
adc
mov
call
dec
lods
jge
aam
adc
add
or
incl
roll
mov
add
scas
sbb
icebp
loopne
jae
stc
arpl
arpl
mov
ss
repz
stc
xor
jo
ret
mov
push
mov
add
les
call
addb
add
aad
jmp
movsb
mov
jmp
inc
inc
mov
roll
sbb
adc
aam
stc
xor
push
jmp
ds
aas
mov
xor
dec
fwait
addb
mov
imull
loop
jnp,pn
add
jecxz
inc
xchg
cmp
testb
dec
push
fwait
inc
mov
fwait
cmpb
dec
inc
add
dec
jge
inc
add
add
int3
pop
pusha
fildl
pop
daa
cmc
add
jge,pt
ffreep
add
xchg
dec
fxch
imul
xor
jmp
and
jg
lds
insb
es
add
out
gs
add
js
push
pop
push
jae
notb
push
test
add
add
out
hlt
leave
mov
and
push
jl
ljmp
pop
jge
sahf
ret
imul
test
adc
sarl
rcrl
add
pop
outsb
shl
push
test
add
add
loop
dec
cmp
mov
lret
gs
adc
filds
test
add
add
in
xchg
ret
ljmp
pop
pop
adc
cmpsl
jle
jb
aad
or
add
lret
mov
ror
adcb
lret
js
ror
adc
cltd
xor
add
les
je
fadds
call
fisttps
aas
test
aad
jp
cmp
fldl
add
cmpl
fldl
add
mov
add
shlb
les
jmp
sub
jo
xor
jmp
add
stos
fdivl
out
xchg
rorl
push
jbe
pop
or
xlat
clc
push
cmp
sub
stc
mov
ljmp
push
test
or
sub
push
push
mov
or
push
stos
clc
mov
pop
add
jbe
call
sub
xchg
pop
call
mov
scas
xor
inc
cmp
call
push
mov
pop
scas
ret
add
movl
cmp
push
add
or
dec
ljmp
je
push
inc
bound
mov
add
mov
push
mulb
outsb
psubsw
jge
repnz
movl
sbb
fwait
imul
fnstsw
xchg
idiv
mov
add
test
pushfw
dec
orl
lods
ja
pusha
xchg
xchg
push
insl
add
inc
lea
add
pop
sti
ret
outsb
add
pop
jge
push
push
jge
adc
cmp
decb
sub
out
inc
mov
ja
cwtl
sti
add
mov
clc
negb
bnd
data16
pop
faddl
add
pop
je
faddl
test
hlt
call
add
lahf
fisubrl
fmuls
add
add
scas
cmp
or
in
cmp
add
cld
mov
dec
test
les
mov
adc
ljmp
lret
test
inc
jmp
xchg
lret
ljmp
das
pop
adc
jecxz
add
or
pop
xlat
out
xor
pop
xor
enter
mov
jmp
add
fs
nop
mov
add
nop
es
test
pop
add
jns
aaa
in
popa
pop
jmp
mov
mov
mov
ja
inc
adc
mov
ljmp
add
je
add
cmpsb
sbb
inc
add
mov
jmp
xor
mov
les
add
dec
add
mov
scas
fldt
mov
inc
cmp
jmp
sbb
push
stos
or
lds
aas
mov
push
cmp
sbb
mov
xchg
arpl
outsb
jmp
movl
mov
scas
out
add
mov
loopne
lea
inc
add
add
dec
lea
push
enter
dec
pop
or
dec
sarl
call
sub
xor
dec
mov
dec
je
inc
xchg
xchg
in
push
add
fisttpll
das
xchg
dec
mov
call
test
js
int3
fldl
mov
pop
add
mov
push
lods
push
jge
leave
mov
andl
inc
mov
jge
fisubs
add
fsubl
mov
push
add
rol
xchg
push
add
les
fildl
mov
mov
xor
ja
aaa
xor
std
in
mov
push
add
fcoml
and
insb
dec
or
pop
fsubl
lret
add
sbb
add
sub
lahf
mov
les
ja
and
cmp
in
call
push
loopne
add
insb
add
add
xor
insb
aas
mov
cmp
movsl
in
shll
ds
add
roll
add
xchg
mov
pop
fs
int3
pop
aaa
in
cltd
scas
xlat
aam
mov
fs
shrb
mov
movl
movsb
jg
xor
sub
pushf
adc
mov
and
int3
mov
inc
rolb
les
call
jmp
xchg
pop
andl
add
add
rolb
mov
inc
dec
popf
ret
mov
addl
or
imulb
adc
add
inc
jmp
idivl
icebp
mov
xchg
mov
pusha
std
rorl
movl
add
add
sbb
cmp
add
daa
add
daa
add
add
add
inc
xor
sbb
add
mov
pop
imul
sub
jge
sub
or
or
or
dec
jmp
leave
or
jbe
or
fnstcw
inc
adc
inc
or
jmp
mov
push
or
adc
pushf
hlt
or
add
mov
add
lods
or
dec
push
mov
add
pop
jns
addl
movsl
pop
add
std
in
sub
inc
movsl
jg
push
or
dec
jbe
xchg
pop
mov
data16
ror
idiv
cltd
ror
enter
vpaddd
add
add
stos
jne
mov
popa
out
inc
lret
popf
fnstcw
into
aas
div
lock
cld
into
dec
imul
lock
test
cld
into
inc
ja
test
push
icebp
add
ljmp
or
cmpsb
testl
in
xchg
or
mov
add
out
test
fs
int3
aam
adc
jl
sbb
cltd
mov
fs
rclb
stc
add
or
xor
dec
dec
icebp
jnp
or
pop
xchg
adc
xor
mov
adc
xchg
dec
add
add
dec
mov
in
ret
ljmp
movl
push
jb
add
add
orb
push
or
or
cmp
adc
mov
addl
push
or
or
xchg
sti
addb
inc
or
aaa
call
pop
push
bound
cmp
xor
bound
push
push
sti
cmc
push
cmp
cmpb
mov
jmp
bound
popf
pop
add
and
add
out
xor
pop
xorb
sarl
idiv
pop
push
and
sub
mov
push
push
mov
add
nop
mov
loopne
xor
rcl
out
jne
jns
outsb
add
push
mov
add
mov
rcr
faddp
jge
insb
mov
rol
or
ljmp
or
sbb
divl
outsl
xor
or
sbb
call
fisubrs
jne
lods
add
shlb
pop
lods
add
dec
out
lods
mov
add
les
xor
ss
addr16
daa
cmp
add
aaa
xor
and
pop
mov
mov
je
inc
or
insl
js
hlt
push
xor
sbb
push
sub
xchg
clc
inc
into
popa
aas
mov
ljmp
inc
push
leave
jns
push
je
mov
dec
loope
pop
mov
aad
push
out
ss
js
sar
sahf
and
add
add
test
js
adc
ret
aam
jnp
sahf
sti
add
arpl
cmc
pop
jmp
jns
sbb
cld
sub
push
pop
test
movsb
add
add
int3
inc
add
cmp
out
push
jge
movl
pop
insl
or
push
bound
adc
daa
les
jb
add
add
add
outsl
hlt
int3
dec
xor
xchg
cmpsl
aas
mov
cwtl
nop
movl
mov
mov
outsb
leave
mov
jb
sbb
int
testb
pop
sbb
xchg
jge
jne
ljmp
add
xchg
subb
inc
push
mov
mov
ret
add
mov
sbb
push
dec
repnz
call
in
xor
and
inc
imul
js
push
mov
add
leave
add
test
repz
add
scas
jae
xchg
sti
adc
je
or
xor
mov
cmc
roll
add
cld
sub
std
cmp
ror
clc
dec
out
test
ja
in
sub
repz
pop
test
ds
mov
sbb
das
inc
adc
xchg
push
cmpsl
pop
test
add
mov
data16
push
outsb
icebp
test
stos
mov
xchg
fsubrl
add
and
add
dec
repz
add
data16
lods
add
test
jae
and
inc
add
xor
adc
cli
push
clc
push
add
jne
mov
jge
sbb
mov
push
clc
xor
jb
aam
es
inc
sbb
jl
std
push
add
add
je
sarb
adc
add
stc
add
sbb
add
add
jle
adc
add
add
add
jmp
fisubrl
mov
add
mov
sub
dec
stos
xchg
add
or
je
mov
xchg
test
sbb
bound
dec
or
jmp
cli
in
mov
xor
or
outsb
stc
fistl
stos
xor
in
or
add
add
das
add
push
xor
mov
les
add
jae
add
ja
cmp
xchg
add
sbb
dec
mov
mov
jae
jmp
in
inc
adc
adc
mov
popa
idiv
in
mov
lcall
idiv
mov
cs
cmpsl
iret
in
negl
jne
mov
and
inc
push
cmp
jge
loope
add
call
ss
sbb
xchg
or
shl
pusha
mov
add
sbb
mov
mov
mov
add
xor
les
add
popf
add
aas
out
xor
cmp
push
in
pusha
sub
les
mov
fucomip
xor
pop
cmp
les
les
jmp
or
jp
lahf
push
xor
cmp
and
aaa
inc
xorb
dec
dec
ljmp
adc
push
les
je
shr
sub
and
push
xchg
in
xor
sub
cmpl
jmp
mov
or
fcmovnb
popf
jle
sub
std
call
add
aad
int3
mov
fdivl
test
sarl
sbb
lock
scas
ljmp
jl
lock
dec
fnstcw
std
pusha
add
ja
adc
int
std
std
pusha
lock
push
pop
lock
add
int3
ja
adc
in
js
std
pusha
lock
push
cmpsl
out
int3
ja
adc
int
jge
add
or
xor
scas
mov
mov
or
or
scas
repz
scas
sahf
decb
or
or
repz
scas
fimuls
or
or
das
mov
scas
push
mov
aas
or
or
sete
add
dec
cmp
les
mov
lods
notb
in
inc
sbb
std
pop
das
xchg
add
pop
push
fidivs
iret
pop
ret
jne
or
stc
incl
jmp
stc
pushl
iret
pop
ret
roll
dec
inc
fucomp
mov
pop
push
pop
pop
ret
add
aad
int3
mov
and
je
inc
cld
pushf
add
add
or
add
or
add
inc
push
cmp
add
jo
sub
imul
add
les
ret
pop
dec
inc
popa
mov
mov
push
add
pushf
add
jb
xor
in
cltd
or
out
mov
hlt
ret
cs
cmpl
bound
loop
inc
inc
or
dec
and
inc
sbb
mov
pushf
add
ret
mov
insl
lds
add
add
inc
sbb
shlb
jge
add
movsl
pop
inc
int3
arpl
add
add
push
rol
add
cmp
inc
mov
iret
mov
adc
jmp
pop
inc
pop
or
popa
mov
jmp
cmpsb
inc
inc
roll
je
sub
dec
inc
or
add
mov
dec
clc
cmp
subl
xchg
mov
test
jmp
lock
add
inc
push
and
movsb
pop
add
clc
cmp
fwait
dec
inc
cmp
or
stos
inc
mov
xchg
sub
in
jmp
cmp
cmp
sbb
inc
subl
insl
add
movl
add
movl
mov
loopne
mov
mov
idivl
movl
or
jmp
in
stc
insl
and
cs
jmp
lret
cmp
mov
sbb
roll
adc
add
add
mov
push
sub
xchg
xchg
addb
or
xchg
or
add
ds
or
jns
dec
es
pop
jbe
pop
ret
add
std
pop
roll
hlt
in
dec
roll
dec
inc
fstpl
in
imul
stc
decl
push
add
imul
and
in
inc
xchg
mov
popa
fcmovb
pop
les
lret
js
ror
nop
or
push
xchg
dec
sti
leave
sarb
shlb
cs
outsb
push
xchg
add
add
cmp
inc
cld
xchg
xchg
xchg
test
xor
jecxz
push
je
outsl
cwtl
jecxz
adc
sbb
add
in
test
cmpb
pushf
add
inc
pop
sbb
les
clc
xchg
add
stos
pop
les
mov
xor
jmp
iret
mov
add
outsl
jle
or
xlat
and
xlat
pcmpeqb
sub
leave
push
bound
jl
out
inc
push
stc
stos
jge
das
mov
dec
stos
pop
mov
les
xchg
or
jle
pop
inc
stos
je
mov
cmp
adc
test
popf
popf
fimuls
icebp
test
cmpsb
int3
addb
fcoml
subl
add
add
sub
imul
mov
adc
jmp
mov
insl
testl
mov
inc
cs
dec
dec
or
loope
xchg
push
scas
test
dec
push
sub
add
imulb
sti
mov
lds
cmp
ret
add
int3
imul
jmp
inc
sub
add
lock
push
lock
pop
lock
lds
pop
and
pop
mov
cmpsb
dec
mov
sub
add
add
mov
outsb
jae
bound
cld
subb
inc
movb
cmpsb
dec
push
push
movsb
ljmp
in
push
sbb
adc
adc
push
stc
shrl
inc
sub
add
fldl
pop
pop
ss
or
clc
stos
in
mov
mov
dec
aam
inc
add
pushf
add
add
in
sbb
or
add
les
lret
mov
xchg
cmc
push
xchg
cmp
les
testl
add
add
and
insb
sahf
add
les
sahf
test
lea
xchg
mov
add
mov
mov
ss
or
lds
lret
mulb
loopne
cs
loopne
sub
arpl
jp
lock
fidivl
push
les
add
pushf
sbbb
aas
mov
notb
inc
mov
hlt
jl
mov
mov
inc
mov
mov
dec
dec
in
push
jbe
cwtl
out
cld
push
fwait
stos
push
push
jmp
xchg
stc
ret
mov
mov
ficompl
push
mov
add
fldl
sbb
gs
bound
add
add
ret
jb
out
add
nop
fdivrl
stc
loop
mov
jmp
js
jb
enter
pop
xor
adc
mov
and
sbb
pop
adc
mov
stos
popf
push
insl
cltd
adc
jmp
mov
add
or
mov
jp
jmp
repz
loop
add
fstl
jle
xchg
xchg
adc
dec
push
es
cmp
xor
push
push
dec
loopne
jecxz
add
add
cmp
les
mov
adc
pop
cmp
add
xchg
sbb
add
stos
jne
mov
or
add
add
cli
add
sub
cmc
sub
mov
adc
idiv
xlat
inc
adc
outsb
add
jle
mov
icebp
les
les
inc
int3
inc
add
adc
mov
std
push
call
dec
loop
sub
push
aaa
sbb
lods
add
insl
decb
les
aaa
and
add
add
lods
add
test
scas
clc
xor
inc
mov
lods
add
lret
sbb
mov
add
push
xor
jmp
cmp
xchg
pop
inc
mov
movsl
or
icebp
mov
add
shrb
add
test
cmpb
movsl
movl
add
inc
lds
jns
mov
mov
add
cmp
stos
dec
dec
jmp
mov
popf
test
sbbb
insb
lret
cmpsl
sbb
sbb
adc
add
mov
js
add
mov
test
sub
clc
fsts
add
add
pop
insl
xchg
adc
jmp
add
inc
push
or
push
adc
adc
or
fs
cmc
add
sbb
mov
add
or
add
jmp
jb
in
sub
pop
mov
pop
test
push
mov
inc
adc
sti
mov
fisttpll
push
pop
mov
xchg
pop
in
data16
push
sbb
add
push
lds
imul
mov
fldl
mov
or
jge
add
sbb
stc
dec
push
enter
jne
jne
push
clc
pop
mov
fisttpl
pop
add
inc
adc
add
cmp
mov
add
ret
fisttps
in
test
add
sbb
in
cmp
lahf
xchg
mov
and
sbb
add
mov
out
cmc
cld
shrl
lods
getsec
lret
cmpl
mov
add
shll
ja
aas
jge
xchg
jne
mov
fimull
fldl
jg
popf
clc
les
dec
movsb
adc
rclb
dec
adc
add
idivl
mov
lahf
lret
sub
xorb
push
pop
mov
jg
popf
jno
int3
rolb
cmc
out
les
call
and
lahf
fdivs
loop
gs
mov
add
rolb
add
add
inc
insb
leave
lret
mov
mov
adc
push
add
test
imul
call
mov
loope
test
xchg
xor
movsb
movsl
movl
xor
sub
scas
out
shll
add
std
call
mov
call
movl
cmp
mov
pop
mov
mov
fiadds
add
movl
adc
mov
mov
rorl
std
orb
repnz
mov
cwtl
insl
cmc
movl
sbb
sbb
inc
ficoms
cmpl
rcrl
push
clc
sahf
int
divl
stc
add
in
or
jbe
out
mov
jno
dec
aad
push
push
lds
inc
add
sbb
dec
sbb
test
inc
jg
movsl
cmpl
jnp
add
loop
add
popf
or
pop
jae
add
xor
add
add
loope
idiv
les
add
add
add
mov
jp
cmp
dec
and
mov
jnp
clc
sub
mov
daa
push
aam
imul
clc
inc
mov
inc
rol
aas
cld
ss
inc
aam
cld
inc
cmp
test
mov
push
pushf
sub
sbb
fimuls
sub
std
aas
repnz
xchg
add
add
mov
inc
jo
dec
cld
movl
fisttps
imul
cmp
ret
les
test
mov
jmp
adc
cmc
call
add
add
fadds
cltd
lds
test
loopne
iret
cmc
test
xchg
movsl
cmpsl
inc
lds
add
add
mov
mov
add
and
sub
fs
js
and
scas
add
add
sahf
subb
jb
out
inc
out
loop
lcall
lds
inc
jne
aaa
cli
bound
lods
lods
mov
add
ds
sahf
inc
out
add
add
inc
pop
fsubrp
xorb
out
pop
add
add
mov
jl
fwait
add
test
mov
add
or
add
movl
lcall
cltd
add
dec
enter
add
dec
cld
out
xchg
or
xor
add
or
push
sub
ret
fstpt
jge
std
jg
je
add
add
push
dec
adc
insb
incl
adc
push
and
inc
xor
in
add
push
incb
push
jl
dec
fldl
clc
fs
sbb
add
add
add
clc
and
cmpsl
jne
mov
push
add
les
mov
jp
mov
xchg
push
add
inc
push
mov
add
lea
stc
les
ret
out
insl
mov
pushl
stos
ret
test
ret
in
stos
roll
sti
enter
std
add
jnp
add
dec
sub
jmp
add
je
call
aas
push
cli
xchg
adc
subl
jp
add
repz
add
add
orb
push
pop
rolb
das
rorb
fwait
lahf
mov
add
in
les
xchg
add
call
sub
push
fdivrs
or
add
dec
ljmp
cmpsb
stos
xchg
add
xchg
add
lahf
inc
ret
imul
inc
in
fildl
nop
push
int
gs
addb
mov
or
jmp
inc
popf
or
movl
push
out
xchg
insl
add
dec
cltd
jmp
test
cwtl
mov
jmp
pop
add
jmp
xchg
aad
addb
jmp
sub
add
add
xchg
divb
sbb
out
cmpsl
rolb
pushf
and
or
and
xchg
mul
push
cwtl
negl
push
jg
mov
fiaddl
push
push
jge
jb
and
jp
add
test
sub
jp
push
cli
cmp
fldt
jne
mov
jg
lods
movb
insl
or
psraw
std
lcall
add
sub
dec
jg
mov
mov
mov
adc
enter
enter
adc
enter
enter
adc
punpcklwd
dec
hlt
push
inc
cli
mov
popa
lcall
lahf
add
lods
lds
cld
decb
mov
push
pushf
pop
mov
fucom
cmp
add
clc
insb
mov
pop
and
les
add
adc
mov
ror
dec
clc
data16
ret
test
push
movsb
sbb
popf
add
les
mov
in
pop
mov
in
jge
ret
pop
jge
rcr
add
psubw
mov
rcll
bound
and
push
addl
add
mov
mov
cmpsl
test
add
add
call
sbb
inc
sbb
js
push
insb
cmpsb
push
xchg
call
add
add
dec
inc
test
mov
inc
mov
jmp
test
jmp
jle
sbb
pop
faddl
call
imul
adc
add
iret
push
ljmp
xor
add
jmp
div
ljmp
add
pop
ss
aaa
mov
add
xor
rorb
cmp
jle
les
mov
loopne
inc
je
mov
test
hlt
xor
add
sub
insb
repnz
call
add
add
mov
insb
pop
std
jl
call
imul
fisttpll
inc
fs
shlb
sub
or
data16
lods
add
jge
popa
int
ret
es
ja
in
leave
fimuls
xchg
and
jmp
jne
xchg
or
test
xchg
idiv
bound
cmc
mov
push
dec
cltd
inc
jne
push
push
fidivrl
jle
jge
icebp
or
clc
cmc
cmpsb
mov
and
push
cmp
jg
jns
shlb
js
add
repnz
jge
scas
xor
add
out
in
in
js
pop
mov
jnp
popf
inc
sub
cmp
mov
ffree
out
cmpsl
fs
xchg
sub
mov
add
add
sahf
add
les
and
les
add
cmp
int3
and
hlt
push
sbb
pop
mov
ret
std
dec
fldenv
test
push
and
sub
or
lcall
dec
mov
add
jmp
call
jge
scas
pusha
lahf
ljmp
test
add
inc
and
add
xchg
jnp
inc
imul
push
fdivrs
pop
jmp
mov
nop
cmpsb
arpl
inc
insb
lret
mov
cmp
push
jae
xchg
adc
jmp
xchg
jge
sub
xchg
inc
aas
inc
add
add
imul
mov
xchg
out
add
add
lret
dec
dec
mov
stos
inc
lds
ljmp
cli
loop
and
cmp
mov
push
or
cmp
mov
div
mov
add
dec
inc
out
scas
cld
test
mov
mov
mov
cs
leave
out
ds
jne
sbb
jb
test
add
sbb
add
pop
and
add
xor
loop
je
mov
cmp
bnd
fwait
arpl
or
or
xchg
add
test
xchg
cld
add
sub
mov
out
popf
or
inc
jmp
inc
popf
add
add
rcrb
test
dec
add
ret
inc
fiaddl
adc
mov
adcb
and
sahf
add
fdivl
pusha
or
test
dec
xchg
scas
sub
movb
les
aas
fadds
adc
inc
pop
push
add
dec
lcall
mov
add
lret
stos
add
les
pop
cld
lret
jg
cld
xchg
sahf
or
aas
loope
test
movl
xchg
in
test
pop
xor
inc
sub
mov
jmp
xor
sub
mov
clc
mov
add
mov
or
xchg
lea
call
add
add
add
roll
les
push
les
jmp
mov
mov
add
mov
add
je
dec
jg
lds
xlat
push
mov
cwtl
mov
cs
dec
mov
push
mov
fimuls
cld
call
bound
bound
mov
inc
push
add
mov
mov
mov
pop
andl
push
enter
cmp
mov
add
sbb
add
or
mov
aas
jns
inc
add
hlt
mov
add
movl
rol
ds
out
add
push
add
mov
add
add
add
sti
mov
or
hlt
insb
pop
decb
fwait
cmc
rclb
jo
push
add
add
adcl
mov
jle
rorl
xor
or
loop
rolb
cs
fldl
fiadds
aad
adc
mov
dec
cmc
shlb
inc
mov
add
add
fimuls
jb
mov
fldcw
or
shlb
in
dec
mov
aas
push
ret
xchg
dec
mov
lret
sahf
mov
fisttps
mov
test
mov
push
les
add
sbb
sbb
add
lret
sahf
xchg
clc
fcmovne
mov
add
mov
add
les
je,pt
and
or
pop
add
int3
mov
lds
mov
add
jmp
xchg
adc
fstps
adc
les
fadds
int
ljmp
movsl
sub
sbb
mov
mov
or
adc
and
add
jbe
clc
jecxz
jae
test
lret
mov
out
call
cmp
add
mov
dec
leave
ret
dec
aas
cltd
mov
jge
bound
call
jo
xchg
cmp
int
add
jmp
add
cld
scas
jmp
cmp
bound
loope
ljmp
add
cwtl
xchg
jmp
mov
mov
aas
and
add
loope
push
enter
cmp
xlat
inc
test
jmp
or
push
jg
addb
leave
ljmp
add
movl
mov
mov
dec
hlt
fcompl
add
jbe
mov
sti
mov
xor
hlt
sbb
decb
jecxz
cmc
rol
jo
fsubrp
cmc
add
cmp
sub
ja
sarl
cmp
or
sub
add
clc
in
add
loopne
cmp
jle
xchg
cmp
mov
dec
cmc
shlb
mov
cmpb
dec
fimuls
stos
xlat
mov
les
or
add
add
mov
in
jge
mov
mov
out
jae
mov
rcll
lods
in
mov
cmp
or
cs
out
jo
add
cmpsl
or
inc
sub
adc
outsb
add
jo
aad
ja
jge
call
jno
add
cld
clc
cmpl
aas
jge
add
jmp
clc
cld
mov
dec
pop
push
jmp
in
mov
lret
pushf
mov
push
jo
rolb
jmp
xchg
arpl
gs
pop
test
mov
add
nop
pop
inc
stc
inc
push
dec
loope
jno
cmp
call
arpl
jmp
push
adc
ret
adc
inc
aam
add
lock
and
dec
jmp
xchg
nop
add
into
inc
jo
bound
sub
push
mov
pop
or
lret
mov
enter
jbe
test
push
mov
js
inc
aad
mov
inc
bound
add
add
pop
sub
mov
or
ljmp
mov
enter
dec
or
jge
mov
clc
in
fcmovnb
add
inc
ds
movl
hlt
xor
in
xchg
fisttpll
jle
faddl
add
insl
mov
aas
ror
icebp
mov
roll
push
add
mov
idiv
popf
xchg
popf
or
insl
push
add
loopne
push
add
sbb
dec
add
or
out
xchg
or
clc
and
mov
inc
lock
int
add
jne
inc
icebp
nop
inc
loopne
inc
jb
jbe
jmp
sub
and
js
insb
sub
popf
xchg
insb
add
rol
aaa
les
dec
int3
repz
cmp
pop
cmpl
mov
testb
sub
sbb
and
mov
aas
mov
out
in
mov
mov
aas
mov
out
imul
mov
or
xor
roll
push
xlat
mov
icebp
add
call
outsl
cmpl
outsl
add
inc
push
loopne
minss
frstor
cmp
add
add
xchg
xchg
inc
dec
cmp
ficoml
add
in
pusha
ret
xor
stc
mov
fsubl
inc
les
divb
call
cmc
int3
xchg
cmpsb
pop
addb
icebp
loopne
sahf
sahf
inc
loopne
inc
lret
jle
jno
mov
adc
xor
dec
aad
mov
cmp
cwtl
xor
fimuls
jmp
sbb
mov
jmp
cli
pop
hlt
es
jle
movsb
mov
movl
jo
adc
ja
movl
inc
leave
xchg
adc
mov
imul
sbb
ret
stc
and
mov
addr16
aaa
jle
test
and
lcall
xchg
stc
dec
jecxz
lahf
xor
inc
popf
pop
inc
add
xor
sub
jae
inc
aad
pop
adc
xor
subl
mov
jb
and
adc
pop
push
pop
mov
jle
inc
movsl
pop
lds
lcall
test
mov
aaa
ljmp
jno
inc
dec
incl
xorl
or
int
add
add
pop
les
add
aas
aaa
or
in
bound
aas
inc
hlt
testl
mov
insb
add
cmp
add
nop
jmp
rol
cmc
cmp
imul
shrb
aas
mov
mov
out
movb
imul
xor
les
xor
les
popa
cmp
lret
les
pop
push
loopne
in
push
fadds
or
enter
rolb
push
mov
notb
add
inc
pop
cwtl
add
mov
mov
or
clc
add
addr16
call
add
adc
rolb
dec
dec
rolb
push
mov
cs
test
aam
mov
add
outsb
push
mov
add
add
add
cmp
pushf
fwait
cmp
mov
push
lds
cltd
jo
bound
inc
mov
hlt
xchg
std
sbb
inc
insl
push
imul
mov
xor
subb
aad
bound
dec
subb
add
push
lods
mov
add
jle
mov
ret
in
dec
lds
test
lods
test
cmp
outsb
push
bound
or
clc
push
fidivl
stc
rcrb
add
xor
inc
jmp
pop
mov
cmp
jge
adc
xchg
or
lods
pop
ret
sbb
jmp
push
xor
test
push
add
add
mov
mov
jne
test
test
sub
test
orb
jne
call
test
pop
sub
decb
les
jnp
jmp
sbb
rol
add
les
jnp
mov
mov
or
jnp
jne
xor
test
dec
add
xchg
push
imul
and
xchg
jnp
dec
sub
or
mov
dec
lods
jg
clc
mov
and
test
les
inc
nop
mov
mov
sub
mov
push
jp
pushf
pop
js
rolb
xchg
repz
xchg
jns
aas
int3
fsubrs
cs
pop
inc
jns
add
add
fldt
cs
add
stos
rorb
adc
add
mov
fisttpl
mov
add
add
aaa
jns
mov
or
jno
pushf
xorb
into
mov
mov
xor
jp
push
jno
ret
loope
sar
test
add
roll
add
inc
aas
insb
out
shl
cmp
div
push
stc
mov
sub
popl
test
mov
stc
sbb
jl
mov
enter
jge
push
add
mov
call
sar
sub
adc
xor
insb
fisttps
cmc
cwtl
pop
sub
ds
cli
mov
movsb
cmp
enter
dec
adc
aad
sbb
cmp
add
mov
decb
and
mov
xor
std
js
stc
andl
jge
mov
cmc
cltd
insb
mov
or
dec
mov
xor
loope
mov
mov
ret
mov
cmc
cltd
jbe
jge
in
lock
aam
xor
pop
mov
add
add
clc
jecxz
out
testb
sub
add
sar
lods
add
mov
es
les
mov
lret
mov
mov
jmp
js
dec
dec
sar
repz
xchg
push
adc
icebp
cs
push
or
xchg
clc
cmp
mov
in
call
jmp
adc
push
add
mov
daa
test
sbb
inc
les
inc
sub
test
hlt
sub
cmp
dec
in
insl
int3
fldl
insl
mov
mov
xchg
inc
add
call
aas
les
hlt
jg
cli
cmp
xorb
mov
les
in
adc
add
cmp
pushf
rclb
mov
mov
jne
pop
and
and
incl
jne
mov
das
cmpsl
push
mov
sti
loopne
xchg
paddq
jp
popa
popa
aaa
aam
popf
mov
test
xor
jbe,pn
add
mov
sahf
lahf
repz
in
je
lahf
les
jmp
cwtl
dec
mov
add
add
inc
loope
add
jmp
push
sbb
mov
mov
repnz
mov
sbb
push
in
outsb
shrl
add
stos
ret
sub
rorl
mov
test
imul
incl
rol
test
rolb
out
mov
add
xchg
or
and
fimuls
out
out
push
call
in
inc
lock
jge
or
cmp
cmp
fwait
or
out
notb
or
adc
out
fisttpll
xor
movsb
pop
ret
enter
popa
inc
mov
cld
add
push
mov
xchg
stc
fldl
jg
jne
jae
fs
call
pop
inc
adc
and
sub
pop
lds
ret
int3
mull
push
movsb
loope
jo
mov
jle
or
jae
cli
xchg
jno
push
pop
out
shlb
ficomps
add
sbb
pop
add
cmc
inc
cld
dec
pushf
push
mov
movsl
dec
add
pop
add
or
test
add
mov
pop
add
fisttps
inc
out
fmull
mov
jne
inc
rolb
jmp
mov
add
sti
dec
lret
xor
push
jbe
std
dec
fildl
jne
or
mov
pusha
jge
ljmp
pop
ret
jmp
add
add
outsb
fdivr
dec
jno
std
js
fldl
les
or
ret
loopne
fmuls
xor
pop
push
inc
les
test
jae
sub
xor
jl
and
mov
xchg
outsb
shrl
add
sub
add
mov
xor
imul
sti
andl
mov
jne
les
outsb
out
mov
and
std
cwtl
ljmp
or
jmp
loope
ret
icebp
out
sub
into
inc
cmc
add
sub
std
adc
insl
mulb
add
jmp
test
inc
add
movb
out
mov
push
jge
aad
add
and
add
add
scas
adc
jmp
stc
lea
inc
mov
in
enter
stc
lcall
scas
add
lret
mov
lea
xchg
mov
jge
out
scas
add
imul
test
cmp
mov
mov
in
ljmp
ret
leave
or
jmp
add
xchg
jecxz
test
xchg
out
cmc
jmp
jle
enter
inc
fs
fildl
cld
lds
inc
xlat
addb
iret
dec
adc
add
pop
mov
mov
xchg
push
subb
xor
cmpl
mov
pop
pop
jge
push
sub
add
pop
mov
andl
add
aas
mov
test
adc
lret
adc
xchg
dec
adc
dec
jp
je
mov
insb
fildll
xor
mov
imul
adc
inc
dec
xlat
scas
in
pop
insb
push
mov
int
int
pop
or
gs
add
inc
inc
or
lock
mov
push
adc
xrelease
subb
and
inc
pop
add
jno
mov
inc
shll
add
int3
jno
jle
fcompl
cmp
sbb
popa
cmpb
pop
xor
repz
and
push
pop
ljmp
inc
mov
xlat
xor
das
addl
ljmp
dec
inc
testb
cmp
js
aas
fnstcw
ds
push
or
insb
pop
xorl
popa
pop
push
imul
xchg
mul
inc
cmpl
cmp
jmp
add
je
andb
inc
or
jp
call
outsb
les
test
test
inc
sbb
lock
lcall
add
out
jge
int
dec
cwtl
dec
jp
call
cs
add
test
popf
jl
pushf
aas
jp
call
faddp
add
cmpsb
test
add
lea
jmp
mov
sbb
mov
push
xchg
mull
lods
add
fnstcw
add
fisttps
aas
sbb
mov
test
div
jnp
ret
rcr
jae
fisttps
dec
sbb
inc
and
mov
xchg
test
lods
mov
mov
fwait
out
sti
inc
mov
xor
dec
xchg
mov
lea
ja
inc
sbb
addl
inc
xchg
leave
shlb
cmc
add
iret
jle
xchg
test
xor
arpl
pushf
scas
jle
xchg
jns
nop
xchg
mov
xchg
outsl
jle
test
dec
ds
mov
xlat
arpl
out
dec
jle
test
inc
inc
lods
add
cmp
push
fadds
add
add
movd
pop
inc
inc
mov
jmp
push
mov
popa
test
leave
insl
subb
ljmp
sub
inc
pop
addb
cmc
insb
insl
std
jl
rolb
test
int3
xor
sbb
in
cmc
xchg
lds
insl
enter
add
shl
jb
add
add
or
bound
cmp
xor
or
jne
dec
jmp
fs
adc
xchg
pop
cmpl
xchg
gs
jmp
outsb
and
xor
mov
inc
push
repz
sub
jle
jne
jnp
cld
push
add
jnp
in
jno
addl
add
fsubs
push
sbb
mov
push
add
ljmp
out
jae
into
shrl
or
mov
pushf
cmp
jmp
jle
mov
scas
jg
pinsrw
imul
rcr
pop
lcall
sub
out
repz
inc
inc
xchg
xchg
sub
inc
hlt
sub
out
add
add
idiv
incl
adc
test
mov
or
and
jp
pop
or
dec
pop
mov
test
repnz
xlat
jle
enter
repz
test
or
xchg
lods
sub
fildl
dec
sbb
std
idivl
je
ljmp
or
add
add
dec
rorb
mov
jb
imul
test
cmp
cmp
mov
addb
push
je
jmp
and
imul
cmpsl
jp
inc
in
cmp
ljmp
or
add
adc
mov
std
pop
lock
imul
mov
out
mov
das
cmp
inc
int
dec
lret
dec
roll
add
add
clc
mov
add
ret
or
cld
dec
sar
jb
xor
push
mov
movl
bound
mov
cmp
fucomp
enter
add
popf
xchg
out
xchg
addb
loop
or
fnstenv
repz
cli
sbb
psubsw
in
xchg
leave
mov
mov
mov
aam
scas
divl
add
lods
mov
adc
lret
push
sar
test
add
jbe
xchg
jnp
out
push
mov
sbb
popa
xor
inc
push
push
mov
les
cmp
jge
notb
int
enter
sbb
add
add
adc
fmuls
or
cwtl
in
dec
xor
add
dec
mov
mov
icebp
lret
loope
lret
mov
push
test
or
test
jge
dec
fdivrs
push
aam
test
popf
int3
les
cmc
pop
or
ret
movsb
cmpl
lcall
pop
inc
sub
dec
sub
test
insb
call
decl
gs
flds
dec
cmp
jge
jecxz
rolb
sub
dec
insb
add
or
std
inc
add
push
ja
dec
sbb
or
cmp
mov
test
add
add
add
and
jg
mov
outsl
mov
div
lret
nop
sahf
cltd
in
shrb
les
inc
icebp
leave
popf
je
sub
fldenv
jmp
mov
call
jbe
add
mov
shrb
jmp
inc
push
adc
inc
push
push
sbb
mov
mov
add
add
imul
mov
ja
popa
imul
popf
popa
push
pop
leave
ret
pop
ret
out
push
mov
add
mov
add
rolb
adc
push
neg
cmp
inc
and
mov
and
push
or
add
mov
dec
lds
jl
lds
mov
test
or
lea
and
jg
mov
dec
cmc
xchg
aad
add
mov
idiv
popf
lea
bound
push
push
in
jo
pop
add
les
mov
test
pop
sahf
mov
fcoms
push
cmpsb
fisubrs
ds
andl
rclb
add
cli
in
or
push
pusha
jb
mov
cmp
inc
xor
fisubs
les
add
xchg
notl
fldt
inc
xor
addb
inc
aam
sti
not
cmp
adc
xor
addb
sbb
dec
out
jle
pop
insl
cmp
loop
addb
add
leave
cmpsl
test
sub
inc
and
inc
out
fwait
jb
inc
test
jl
mov
inc
mov
outsb
shr
cmp
outsb
or
fcompl
rcr
andb
dec
outsl
pop
rorb
mov
lock
add
add
loopne
sahf
popa
jae
pop
gs
jg
arpl
stos
mov
pop
add
dec
fmull
mov
sbb
sar
xchg
insb
and
jne
jmp
add
and
aas
add
iret
inc
lret
fsub
mov
pop
mov
dec
movl
sbb
jmp
push
add
roll
sbbl
add
add
addb
fcoms
mov
add
orb
push
ret
or
bound
lret
btc
push
adcl
frndint
imul
pop
insb
in
jg
jmp
je
neg
xchg
cmpl
mov
adc
adc
add
push
stc
mov
adc
mov
lods
or
subl
rcrl
add
inc
and
add
add
rcrl
pop
ret
mov
lret
fldl2e
xorl
enter
sub
inc
xlat
pop
lahf
add
add
pop
scas
lcall
pop
ret
add
mov
inc
jno
mov
bound
dec
aas
or
xor
xchg
scas
rolb
out
or
xor
add
cmp
pop
out
addb
fstp
cmp
xchg
insl
out
push
aas
roll
dec
sarb
jns
add
add
shlb
out
je
sbb
aaa
dec
jno
inc
cwtl
mov
out
ja
repz
rolb
call
add
andb
add
push
in
inc
inc
sub
xchg
jmp
add
subb
repz
fisubs
mov
add
add
add
jmp
jp
inc
call
dec
jae
add
add
lcall
mov
fists
icebp
pop
inc
mov
add
add
inc
cmpsb
add
mov
jb
mov
jmp
jo
mov
fs
pop
imul
outsb
hlt
xor
stc
add
inc
sub
add
mov
pop
imul
dec
cltd
push
insl
das
pop
imul
inc
lahf
leave
jmp
stos
in
test
jmp
iret
addb
pop
test
repz
stc
dec
fistpl
ljmp
faddl
adc
pusha
pop
sti
cmp
jge
adc
jp
xchg
sbb
rcrl
mov
cmc
inc
insb
jbe
push
push
int
ficomps
add
sub
idiv
in
fstl
fs
sbb
idiv
lods
std
pop
hlt
ss
incb
fcom
jne
pushf
push
insl
test
push
insb
jmp
fldl
and
jae
es
outsb
or
push
adc
mov
hlt
mov
pop
adc
outsb
xlat
aas
add
jecxz
add
push
adc
int3
scas
sub
mov
js
aam
mov
jnp
dec
cltd
mov
dec
mov
loop
sbb
addb
je
test
bound
jp
insl
in
decl
add
in
in
les
dec
mov
test
jmp
pop
pop
xchg
pop
out
sti
cmp
add
ret
shrb
inc
adc
mov
nop
push
sub
aas
jg
mov
pop
mov
js
or
insl
cli
mov
sub
les
jmp
shlb
mov
je
jae
jmp
add
add
mov
les
sbb
push
shl
push
dec
mov
add
push
insb
inc
ret
adc
lret
ds
les
cmpsb
decl
outsb
cwtl
pop
insb
push
add
pop
push
imul
pop
or
jb
add
call
inc
ss
movl
ret
in
dec
lds
fisttpl
cmp
push
mov
adc
jmp
jae
mulb
rcr
cld
aaa
dec
jae
cs
push
mov
push
dec
testb
dec
subb
dec
notb
pop
jge
lret
add
xor
push
add
shl
mov
jo
xchg
sub
add
xor
push
push
dec
into
xor
push
push
fiaddl
sbb
and
adc
fistpll
mov
pushf
cli
push
push
fdiv
xor
fidivrs
subl
sarb
andl
stc
lea
clc
push
mov
in
les
ja
lock
jge
jae
mov
adc
jbe
arpl
imul
dec
sti
jl
enter
fbstp
aas
jmp
outsl
dec
adc
outsl
mov
insb
imul
or
add
out
inc
xchg
imul
mov
repz
imul
test
cld
jl
mov
mov
fldt
push
mov
stc
fwait
push
pusha
pop
jno
push
push
inc
test
push
aaa
push
pop
push
cltd
jbe
pop
push
push
dec
push
imul
mov
out
cmp
mov
into
sbb
fbld
adc
movsb
add
dec
add
mov
sbbl
add
add
push
outsb
xor
push
xchg
icebp
rorl
ss
call
pop
push
ja
inc
mov
int
dec
negb
mulb
roll
imul
in
inc
xchg
insl
ljmp
imulb
jecxz
mov
negb
int
in
pop
stos
dec
jmp
push
push
jge
xor
andl
mov
ss
imul
mov
push
push
pop
push
push
test
mov
bound
leave
push
or
mov
fstl
ror
xchg
je,pt
mov
dec
dec
add
cmp
loope
lcall
xor
adc
xchg
jmp
test
decl
call
mov
add
add
loopne
jb
scas
or
mov
int
lock
into
mov
sbb
stc
call
sahf
lds
test
cmc
andb
mov
cmp
shr
lcall
repnz
sbb
fisubrs
push
jmp
andl
add
push
jne
les
and
pop
clc
inc
sbb
cmp
jno
mov
fistps
bound
adc
and
sti
dec
test
and
imul
mov
pop
clc
dec
mov
jnp
xchg
out
pop
clc
sub
pop
clc
cmp
inc
add
repnz
inc
adc
mov
fucomip
sbb
adc
or
add
out
mov
add
test
test
pop
clc
roll
mov
mov
jbe
push
add
add
mov
andl
cmp
notb
mov
out
push
fs
adcl
dec
aas
fs
xchg
shlb
inc
cmp
daa
addb
insb
cmp
popf
addr16
mov
testl
fs
lcall
jge
aam
dec
iret
insb
mov
arpl
add
add
in
sub
jmp
or
bound
imulb
addr16
divb
fdivp
xchg
daa
mov
ljmp
test
loopne
bound
mov
mov
cmp
out
mov
testb
adc
dec
push
cwtl
out
or
out
andb
mov
mov
jmp
mov
xor
push
cmpsl
dec
sub
and
mulb
add
mov
not
dec
jae
into
dec
mov
pop
mov
jmp
xorl
dec
add
cmp
ret
or
adc
lods
jbe
hlt
adc
stc
mov
xchg
in
cmc
repz
dec
pop
mov
lret
mov
add
mov
lret
jl
adcl
and
es
lcall
mov
mov
jg
adc
or
or
sti
les
pusha
jl
arpl
pop
aas
cmp
dec
int3
in
xchg
rcrl
sub
ret
imul
test
adc
push
lret
nop
lcall
mov
test
cli
out
pop
inc
lods
into
pop
push
movsb
je
sbb
or
inc
jl
ljmp
add
push
pop
adc
or
dec
test
mov
int
mov
stc
fxch
in
fisttps
xlat
push
les
pop
add
add
push
lret
clc
add
dec
movsb
dec
xor
setne
rcrb
in
sub
dec
les
dec
bound
lea
jecxz
aaa
arpl
adc
push
call
cmp
pusha
cld
jle
mov
dec
callw
rcr
mov
insb
jns
sti
cli
js
push
adc
pop
or
push
dec
dec
imul
sub
into
stos
pusha
jp
dec
xadd
movsl
inc
xlat
add
jmp
sahf
movsb
imull
add
roll
and
lds
jmp
fucom
push
rolb
pusha
mov
push
xor
cld
decb
jo
stos
mov
lods
adcl
add
sbb
outsb
movb
cld
add
dec
jb
inc
add
or
pusha
outsl
ret
sbb
mov
dec
imul
inc
add
add
push
add
cmpsb
cmpl
push
jne
repz
add
xor
addl
idiv
in
add
clc
fldl
ljmp
add
mov
pop
jg
leave
jp
je
jnp
add
add
add
testb
fidivs
lcall
rorb
push
lcall
in
out
mov
jl
dec
les
push
xchg
and
add
aad
pop
dec
xlat
xchg
adc
idivb
stos
jmp
inc
xchg
std
inc
pop
add
les
xchg
pop
add
cmp
mov
mov
add
add
pop
add
rol
sti
dec
stos
mov
xchg
pop
adc
out
incl
pop
add
inc
sbb
fadds
dec
xchg
ret
mov
add
out
in
jecxz
add
sub
xlat
add
arpl
cmc
rorl
mov
add
fidivs
out
pusha
shr
movzwl
add
add
add
add
mov
xor
fadd
pop
nop
dec
mov
dec
or
inc
call
add
ja
hlt
inc
aad
and
call
mov
test
adc
cmp
cmp
jg
add
addb
add
lahf
jo
push
subb
sub
cmp
push
xchg
dec
int3
or
movl
loop
push
inc
call
imul
movl
add
inc
inc
add
movl
ret
add
push
dec
imul
movl
jmp
rcl
add
add
ret
pop
add
add
lret
mov
lret
ret
cmp
je
ret
push
cmp
xor
push
pop
imul
or
adc
adc
xchg
roll
int3
popa
int
int3
call
cmp
jge
push
lea
add
add
loope
lea
lea
fsubp
fidivs
adc
stc
mov
imul
shrb
xchg
stos
inc
jae
cmpsl
mov
fwait
mov
xchg
jl
dec
xchg
sbb
inc
mov
add
adc
aas
adc
lret
or
lret
add
lret
clc
add
jb
aas
inc
xchg
add
add
test
dec
shll
add
dec
inc
jmp
in
dec
hlt
std
pop
adc
ret
outsb
jnp
das
jge
mov
inc
jno
nop
movsl
push
std
nop
cmp
dec
jg
and
jg
xchg
mov
mov
lret
xor
mov
shl
nop
xchg
out
adcl
repz
add
xchg
aad
pop
std
cli
ret
xrelease
jae
shr
xor
rol
and
mov
push
lods
inc
jg
movsb
inc
jg
xor
or
mov
pop
cmc
divb
addl
adc
cmp
enter
dec
insl
push
pop
inc
test
sar
jp
not
fistl
inc
jmp
lahf
cmp
xchg
sti
pop
inc
idivl
mov
push
mov
insb
ror
cmp
fmull
fdiv
xor
lds
jl
lds
dec
cs
bound
dec
mulb
add
mov
sub
add
push
jae
mov
add
insl
scas
mov
pop
push
add
push
or
es
dec
adc
inc
adc
je
adc
scas
loope
jne
fistl
nop
das
inc
testb
jnp
ret
dec
pop
pop
fmulp
lret
jnp
pop
enter
push
or
je
jne
adc
into
iret
push
push
fcoms
insb
push
inc
testb
add
add
pop
ret
les
mov
dec
and
jge
mov
ds
mov
ds
js
ds
nop
orb
out
cs
out
add
sbb
incl
outsl
or
insb
add
test
inc
fiaddl
pop
sub
out
ret
and
decl
outsl
cli
mov
test
inc
cs
mov
enter
or
dec
lret
clc
jb
lret
nop
test
add
xlat
gs
add
fadds
xchg
xchg
push
lret
lcall
mov
mov
loop
les
add
add
cld
dec
movsl
mov
xorb
into
ss
add
add
add
cltd
cltd
faddl
hlt
sub
les
jmp
add
mov
mov
jmp
inc
call
inc
call
inc
push
add
iret
or
jb
pop
mov
fisttpl
jmp
ds
ret
xchg
add
lods
jno
or
jmp
int3
add
add
inc
adc
fcoml
rorb
pop
mov
xlat
or
jno
or
jmp
and
idivb
decb
jmp
je
jle
je
xchg
out
stc
rcrb
mov
bound
pop
pop
adc
add
pushf
stos
push
add
inc
jg
sbb
mov
add
or
mov
lret
jge
loope
mov
and
in
jge
add
xchg
mov
idiv
push
mov
lcall
outsl
jge
push
lret
rol
lret
pop
mov
jge
fnstenv
sbb
decb
mov
mov
push
dec
adc
adc
pop
vmptrst
jle
lds
cmpsb
jp
mov
out
idiv
jnp
jp
mov
ja
jmp
jp
iret
add
dec
mov
push
iret
add
xor
add
les
xsaves
mov
push
fsubrs
add
repnz
jne
or
sar
cmp
ds
jle
push
jmp
mov
add
jb
mov
call
jnp
sub
stos
xchg
arpl
push
leave
pop
push
int
and
jns
mov
in
add
jge
mov
dec
in
movsb
je
pushl
iret
addr16
mov
repz
clc
ss
adc
lock
jge
and
pop
adc
pop
add
jmp
add
add
les
js
cmp
out
and
add
push
add
dec
mov
andb
mull
mov
jle
movl
mov
ret
pop
push
ret
xor
fs
ret
movl
add
cmp
inc
icebp
add
jg
or
cmp
pop
xchg
dec
fstpl
cmp
inc
sub
jns
jbe
cli
test
push
imul
mov
jb
inc
out
xor
mov
es
dec
shll
mov
jae
cmpsb
inc
fidivrs
cmp
je
pop
sub
fiaddl
je
cmovb
divl
cmpl
jge
mov
jae
cmpsb
push
ljmp
fidivl
les
push
aas
add
lret
or
inc
lret
add
repnz
jp
jp
dec
inc
divl
add
inc
clc
ret
inc
inc
xchg
jg
inc
lret
mov
flds
pop
mov
add
test
inc
decl
sub
pushl
add
jmp
jp
mov
pop
dec
jp
test
fidivrs
aas
push
or
shlb
fdivl
push
popa
lds
jmp
add
jmp
aam
sti
mov
in
sbbl
in
andb
cmp
negl
repnz
lret
test
or
add
inc
repnz
hlt
lcall
or
jp
cmp
jle
add
or
add
mov
dec
push
add
imul
add
push
mov
lods
in
fsubl
sahf
inc
sub
cmovns
decl
pushf
lods
sub
cmp
jbe
scas
mov
mov
mov
push
mov
cmc
jb
sub
movl
add
movl
subl
jg
xchg
dec
cmp
jmp
jp
push
push
rolb
mov
jmp
je
out
shl
mov
mov
jle
lret
add
push
pop
push
testb
mov
add
and
idiv
xchg
mov
mov
sbb
or
mov
lods
inc
cld
frstor
jge
dec
not
mov
mov
add
cmp
incl
add
add
jb
mov
cmp
call
jp
mov
cmp
mov
add
pop
add
push
mov
shlb
mov
pusha
mov
sub
jb
ret
icebp
popa
dec
fmuls
bound
lret
xor
repz
sub
es
jne
dec
add
shll
push
push
enter
repnz
jbe
lds
xor
push
sub
add
sub
add
add
les
inc
xchg
jbe
xchg
add
fistpll
addr16
or
add
dec
cli
pop
popa
xchg
xorl
loop
jb
mov
add
out
add
jge
hlt
dec
lret
cmp
pushf
sbb
xorb
inc
xchg
jno
and
js
mov
jmp
stos
xlat
jbe
sbb
dec
ret
add
clc
jnp
jb
add
xorb
mov
jmp
mov
repnz
stos
fwait
popa
inc
jge
repnz
insl
testb
or
dec
inc
jge
repnz
inc
fidivrl
jge
imul
pop
xor
jmp
decl
notb
std
scas
pop
ficoms
xrelease
or
sub
xchg
jl
jmp
xorl
add
adc
mov
aad
divb
cld
mov
adc
in
pop
pop
mov
leave
dec
pop
lcall
add
adc
or
movl
add
pop
rorb
idivb
or
roll
pushl
pop
jl
mov
mov
mov
jne
sub
pusha
sarl
jae
data16
scas
push
in
push
jge
adc
add
roll
adc
add
add
adc
lods
scas
or
jle
add
pop
adc
dec
fidivl
das
mov
mov
loop
test
adc
add
ljmp
adc
sbb
mov
inc
sbb
pinsrw
cs
mov
sbb
jne
into
sbb
and
aas
mov
adc
sbb
leave
jp
out
mov
fdivr
jmp
mov
push
test
hlt
or
add
dec
out
icebp
test
pushl
ljmp
mov
mov
mov
add
sbb
add
mov
sbb
repz
jge
dec
ds
push
inc
xchg
xchg
in
inc
xor
aas
test
mov
jmp
jp
inc
loop
les
pop
in
or
jle
cmp
add
add
dec
dec
jle
in
jmp
jae
pop
sbb
add
in
fiaddl
pop
test
fcmovnb
ficoms
jle
pusha
and
add
add
js
jmp
or
fucomp
das
adc
adc
add
add
push
bound
divb
or
xor
mov
rcrl
adc
cmpsb
rolb
jb
pusha
mov
mov
add
jle
add
mov
xchg
popa
repnz
imulb
xor
clc
movb
xrelease
psubsw
cli
pop
mov
or
jmp
cs
add
hlt
aam
aad
jg
mov
adc
jae
mov
jp
add
add
out
loop
movsl
xor
ds
mov
push
pop
add
mov
adc
notl
xchg
push
sub
push
ja
lea
sub
adc
sbb
lods
scas
mov
std
push
jge
cltd
sub
decl
loope
xchg
add
push
pushl
scas
push
out
mov
movsb
adcl
push
pop
cmp
rclb
xor
jp
inc
int3
mov
jecxz
and
add
sbb
add
dec
and
push
mov
mov
dec
lods
je
les
inc
mov
int3
adcl
les
jp
sbb
in
mov
pop
test
push
jne
rcrb
in
xchg
bound
add
add
out
add
sbbb
lahf
xorl
les
jmp
jb
out
lds
nop
push
les
filds
les
jmp
xor
fidivs
cmp
nop
addb
cmp
mov
xlat
arpl
ret
subb
add
push
inc
in
aam
add
add
ja
addb
sbb
sbb
ja
pop
add
inc
or
je
jmp
iret
or
add
jae
jmp
push
mov
mov
aam
dec
into
add
mov
imul
je
xchg
mov
movl
adc
nop
dec
pop
lock
je
jmp
jle,pt
xlat
movl
add
or
pop
vorps
mov
in
pusha
or
add
add
adc
lods
jp
or
jge
push
popf
pop
mov
or
lea
jle
jp
or
inc
cli
mov
or
adc
fbstp
sarb
mov
in
scas
push
sub
rcl
data16
scas
push
sbb
orb
pusha
pop
jge
cltd
or
add
cli
andl
iret
out
sbb
xchg
dec
mov
orb
or
add
aas
xchg
or
les
xchg
sldt
mov
adc
add
adc
sbb
lcall
xor
sahf
data16
int3
pop
lahf
inc
repz
lret
les
xchg
sldt
xchg
bound
mov
add
inc
fs
lahf
cmp
cmp
sbb
clc
or
std
inc
cmpsl
xchg
jns
in
gs
push
xchg
jg
test
int
fs
pop
call
cmpsb
clc
es
xlat
lahf
icebp
xchg
jae
jmp
jnp
add
jo
lret
sub
sbb
add
je
ret
jge
adc
add
add
dec
adc
stos
cmp
push
arpl
add
add
stos
xor
add
testb
sbb
orps
mov
mov
add
pop
lock
jno
jmp
cmp
test
stos
adc
inc
lret
div
mov
jge
add
inc
roll
add
add
sub
test
incl
jmp
iret
sub
faddl
lds
cmp
mov
enter
mov
add
add
and
imul
sti
xor
add
jge
cwtl
jmp
add
jnp
daa
inc
je
repnz
adc
fnstsw
cld
push
add
add
mov
mov
lods
push
add
mov
xor
pop
in
dec
xchg
popa
decl
mov
add
mov
ljmp
pop
add
mov
jnp
adc
xchg
mov
inc
cmp
or
lret
push
jmp
mov
sbb
in
mov
aaa
aas
push
frstor
xchg
mov
sbb
std
cli
movsl
mov
mov
out
xchg
add
mov
pop
or
mov
test
mov
add
out
xchg
ds
mov
mov
sbb
jnp
xchg
ljmp
push
xor
adc
les
jo
or
add
aas
or
mov
dec
cmp
rolb
out
add
jp
cmovns
loopne
mov
psubsw
or
mov
mov
imul
je
psubsw
outsb
lret
outsb
inc
fbstp
out
ret
mov
or
add
pusha
clc
add
add
rorb
add
add
pusha
fdivr
jnp
jno
arpl
mov
les
into
add
nop
add
aam
adc
divb
add
push
loope
add
jb
popa
psubsw
mov
in
js
jmp
lcall
jecxz
mov
popl
mov
rolb
add
add
lea
mov
push
jecxz
mov
add
mov
lods
pusha
mov
adc
mov
cmp
pop
fdivs
dec
pusha
ltr
mov
sub
addr16
add
or
or
add
xchg
popa
adc
adc
add
jbe
decb
cli
nop
mov
adc
adc
xchg
dec
lock
out
add
add
jns
lss
es
jle
xchg
pop
add
push
cli
andl
sub
push
lret
mov
std
in
xchg
inc
mov
jne
in
les
scas
scas
cmpsl
mov
mov
add
filds
mov
pop
inc
jns
cmpsl
or
ret
out
lods
bound
xchg
mov
nop
or
add
mov
sub
test
mov
aad
mov
or
je
les
dec
mov
mov
das
aas
rcrb
pop
push
pop
mov
xor
inc
push
les
jno
jnp
call
fnstcw
stos
cmp
movsl
or
jl
add
jo
mov
jmp
loop
add
pop
pop
inc
mov
jo
icebp
test
dec
lea
les
jmp
pop
ds
jae
and
push
aas
or
les
outsl
fwait
cmp
add
mov
aas
std
xor
aas
pop
psubsw
mov
ds
or
or
jmp
xlat
out
iret
xchg
sub
aaa
pop
psubsw
mov
fmuls
mov
movl
add
movl
add
pop
testb
dec
push
cmpsl
cmp
pop
in
ret
dec
lds
or
lds
xchg
pusha
test
adc
ljmp
aas
add
ret
divl
xorb
outsl
inc
inc
out
les
roll
out
pop
ret
jmp
addl
idiv
sub
xchg
add
cs
addl
ljmp
add
add
xchg
nop
or
inc
sbbl
jl
push
mov
jne
add
ffree
lret
int
int3
jle
push
mov
cmp
je
ret
pop
lods
out
jne
int3
mov
nop
jno
lret
mov
dec
inc
data16
das
fs
sbb
add
aas
fstl
test
add
add
adc
sbb
lahf
ret
ficomps
test
dec
int3
xchg
push
bndstx
sub
dec
aas
add
dec
xchg
outsb
adc
sub
mov
mov
push
push
xchg
push
push
mov
sub
stc
add
cmpl
add
out
add
mov
xchg
inc
jg
lods
inc
push
movsb
inc
push
arpl
call
cld
fucom
out
xor
add
mov
sbb
lock
hlt
ja
xlat
mov
sbb
loopne
jbe
mov
adc
dec
into
adc
jnp
jb
cmp
call
xor
mov
mov
jmp
add
mov
sub
xor
push
xchg
sub
fstpt
cltd
je
xchg
inc
bound
mov
addb
bound
stc
mov
pop
div
sub
or
pop
shlb
div
sub
cmpb
int3
or
adc
mov
scas
push
inc
cmc
testb
jmp
das
stc
mov
filds
mov
xchg
add
pop
pop
pop
ret
lret
fwait
ljmp
add
add
pushf
jle
popf
or
xchg
sbb
push
fwait
and
insl
or
or
roll
push
sub
pop
or
pusha
icebp
add
jge
idiv
bound
add
sbb
or
test
jl
adc
add
ret
mov
cltd
ljmp
loop
leave
or
add
cs
cmp
mov
fbld
xor
popa
sbb
mov
cmpl
dec
ret
sub
jecxz
cmp
or
add
xchg
rcrl
or
jmp
ret
add
add
into
fildll
clc
push
or
adc
in
ret
test
cli
cmp
add
je
inc
cltd
cli
test
in
aas
mov
adc
inc
xchg
jmp
dec
shrb
add
add
lods
pop
les
pop
push
cmp
sub
rcrl
rcl
add
hlt
add
add
add
mov
push
jmp
inc
inc
aad
sbb
add
out
jns
popa
fadds
jmp
push
adc
rcrb
sbb
add
addl
jb
ljmp
add
in
add
mov
push
jmp
add
mov
add
mov
divl
hlt
add
cmp
insl
loop
push
cmp
push
rolb
or
cmp
int3
cmc
jb
add
cmp
mov
enter
out
inc
jmp
xor
std
imul
adc
out
inc
gs
bound
or
outsl
or
add
mov
loop
add
add
add
or
add
jg
std
sbb
incl
fwait
andb
add
jns
add
ss
push
adc
add
pushf
and
ljmp
add
mov
adc
popf
fwait
orb
lahf
adc
out
out
data16
mov
pop
add
mov
adc
sub
mov
mov
push
cmc
push
jmp
jge
xchg
out
mov
add
mov
fstpl
bound
test
cmp
popf
add
cs
lds
adc
jl
sub
add
emms
cmp
cmp
add
mov
add
mov
pop
iret
sub
test
push
jns
pusha
mov
add
adc
sarl
mov
push
ss
add
lret
clc
idivb
dec
lahf
push
add
cmp
scas
inc
pop
in
push
inc
js
out
repz
mov
ret
aad
jl
sub
mov
enter
jecxz
or
pushl
call
add
sub
jle
push
loopne
dec
leave
lret
ret
fwait
mov
repnz
add
js
fadd
call
stos
roll
jno
lret
lret
ret
push
mov
loop
les
pop
mov
test
add
add
jmp
mov
andl
mov
cmp
adc
jge
psubsw
mov
add
insb
lret
enter
movl
adc
cmp
scas
ret
adc
addr16
add
lea
mov
inc
lds
add
mov
mov
push
pushl
jnp
mov
cmpsl
mov
prefetch
push
pop
psubsw
scas
add
xchg
inc
adc
add
add
subb
adc
xchg
stc
jl
dec
testl
mov
xor
int
mov
push
js
push
lods
or
cltd
data16
add
inc
pop
add
arpl
ljmp
lret
pusha
mov
cmc
arpl
in
mov
dec
lea
aad
add
out
or
lock
sti
sub
jne
les
mov
lret
add
lret
clc
popa
cmp
adc
je
dec
jmp
and
or
cmp
adc
jmp
imul
add
mov
inc
push
mov
mov
bound
add
xor
mov
sbb
test
xor
int3
movsb
or
lds
adc
sbb
inc
shlb
adc
les
adc
jle
pusha
add
adc
imul
js
aad
jmp
adc
add
test
adc
add
call
push
adc
add
loope
mov
outsl
mov
cld
call
add
in
jl
pusha
pop
lret
add
bsr
push
add
arpl
ret
jge
adc
push
out
add
push
clc
bnd
mov
inc
je
pop
push
cmp
add
scas
call
push
add
psubsw
mov
divb
lds
int3
lds
mov
push
push
mov
outsb
xchg
or
xchg
jmp
add
add
adcb
jbe
push
jecxz
ds
xchg
loop
add
mul
or
sbb
rcrl
or
not
fisubs
and
stc
mov
lods
adc
pop
mov
subl
roll
add
daa
lret
pop
repnz
mov
add
mov
sbb
or
add
push
push
dec
inc
fidivs
test
add
andl
ljmp
add
or
fwait
mov
jge
lea
push
fisttpll
jle
outsl
jge
rclb
add
add
lock
mov
in
mov
xchg
pop
add
mov
add
mov
in
mov
mov
add
mov
cmc
xchg
push
jns
pop
xor
add
call
xor
mov
ficompl
add
mov
adc
push
sbb
jmp
popa
mov
push
cmpl
or
jns
fcoml
add
dec
mov
add
add
push
xor
jge
std
call
imul
rorb
shlb
scas
addb
call
add
jp
adc
ljmp
jp
popf
or
mov
cmpsl
loope
push
clc
call
imul
jmp
pop
mov
add
add
push
push
push
add
arpl
ret
jge
adc
push
or
xlat
push
clc
flds
inc
sti
jns
push
add
movl
adc
cs
loopne
push
psubsw
nop
shr
jl
xlat
movl
inc
jmp
rorb
mov
out
div
into
mov
outsb
pop
lods
pop
jb
stos
ret
cmp
mov
mov
mov
inc
sbbl
cli
call
lret
scas
stc
lret
adc
or
add
popf
add
sbbl
repnz
add
rol
sbb
sub
pop
ret
push
mov
add
add
sti
mov
inc
pop
pop
clc
ret
or
sahf
jmp
jae
jle
je
jne
and
or
add
scas
add
gs
cmc
clc
outsb
repz
addl
icebp
out
fimull
mov
ret
jnp
adc
push
pop
mov
les
add
inc
lock
jae
repnz
faddl
and
add
add
les
pop
adc
push
std
test
adc
push
std
test
adc
push
std
test
adc
call
std
test
adc
call
add
sbb
repnz
pop
xor
jbe
loop
mov
and
push
mov
add
pop
xor
push
mov
add
pop
and
ss
add
pop
mov
ss
add
pop
mov
add
pop
mov
pop
xchg
cwtl
cmp
lahf
pop
stos
test
xorl
adc
or
add
add
ja
dec
and
stos
adc
call
add
push
arpl
jle
filds
inc
das
out
xchg
push
jmp
fnstenv
mov
push
and
imul
out
cmc
add
mov
dec
call
mov
dec
jmp
adc
and
push
dec
ljmp
dec
in
adc
mov
adc
mov
push
dec
out
adc
mov
adc
mov
add
add
push
dec
loope
adc
mov
adc
mov
push
dec
jecxz
adc
mov
adc
xor
push
dec
in
adc
and
push
dec
add
push
out
add
push
out
add
clc
mov
mov
out
add
test
adc
cmp
stc
ljmp
int
or
aas
cmc
clc
mov
repz
mov
mov
sbbb
insl
call
sbbb
out
fisttps
imul
lock
mov
sbb
inc
mov
sbb
jl
negl
lock
jbe
and
add
add
test
cld
push
adc
xor
movl
pop
mull
jns
jmp
jb
dec
adc
add
pushf
or
fwait
push
mov
test
or
xchg
cmovg
in
popf
and
les
add
aaa
std
inc
xchg
stc
xchg
mov
ret
sub
stc
fdivrp
test
ja
std
and
push
add
xlat
sub
int
std
sub
sbb
and
add
add
jl
xchg
sub
sub
add
add
xchg
roll
call
add
cmp
add
push
push
pushf
push
jmp
hlt
fcmovb
call
xor
sbb
mov
and
add
add
jmp
repz
push
cmp
add
xlat
push
sbb
pop
call
fiaddl
add
add
add
add
fadds
imul
cmp
jge
push
movl
loope
sub
jmp
dec
imulb
movl
and
movl
adc
xchg
xor
lods
testb
stos
or
or
jmp
movl
add
int3
imulb
enter
jmp
xor
lods
mulb
shl
jmp
inc
idivb
add
add
roll
in
add
mov
test
xor
incb
add
es
mov
xchg
faddl
popf
lods
out
xor
add
cli
sub
popf
mov
lret
jmp
mov
insl
dec
fimuls
fsubrl
cli
add
jg
sar
and
pop
mov
lcall
add
and
xor
pop
xor
xor
jle
sub
sbb
add
xlat
loop
bswap
cs
sub
jp
mov
repz
add
aas
jmp
setne
and
inc
push
sbb
lret
out
int3
add
sarb
les
mov
dec
ljmp
out
add
add
enter
or
add
ds
test
cld
test
add
ljmp
arpl
inc
fidivrl
sar
add
push
sbb
jmp
jmp
inc
jmp
repz
hlt
scas
inc
jmp
in
add
add
inc
jmp
in
or
mov
fsts
sbb
les
or
or
out
inc
jmp
std
js
adc
sub
rclb
pop
inc
int
add
add
push
or
sub
pop
roll
sbb
out
dec
bound
jg
cmp
sub
mov
in
lret
mov
aas
pop
add
ja
pop
cmp
sbb
out
mov
xchg
ffree
mov
icebp
dec
dec
add
movl
sub
je
push
push
mov
cmpl
stos
aas
mov
ret
inc
mov
pop
jbe
rol
jmp
ret
loope
mov
add
add
add
cmp
and
nop
pop
and
cmp
add
scas
imul
push
int
cmp
bnd
add
add
fldl
daa
in
push
insl
mov
loop
add
jno
aad
mov
xor
and
mov
xchg
pop
and
mov
push
mulb
jmp
add
add
dec
or
jb
aad
insl
add
cmc
pushl
roll
insl
add
iret
clc
stos
xchg
fidivrl
xor
add
ja
xor
ud1
test
enter
in
push
test
mov
push
inc
flds
mov
mov
mov
xchg
sbb
ss
add
add
repnz
add
or
inc
mov
data16
stos
out
add
imul
push
icebp
sub
imul
cmp
fildl
mov
lcall
mov
loopne
cmp
xchg
rorb
dec
popa
incl
inc
sbb
sub
movsl
adc
dec
dec
mov
fsts
mov
xchg
sub
add
out
ffreep
adc
mov
mov
and
scas
fists
add
add
mov
fildl
testl
jmp
loopne
pop
pushf
mov
ret
daa
dec
rolb
jmp
inc
dec
add
dec
dec
add
inc
dec
add
movl
add
movl
add
movl
add
movb
jle
cmc
jbe
add
cmc
data16
cmc
pop
xor
cmc
push
mov
push
inc
fadds
idivb
rolb
add
rcrb
add
mov
add
mov
std
add
lret
add
add
add
cli
pop
jp
cli
cvtps2pd
cli
pop
push
cli
aas
jp
cli
jg
adc
call
xchg
inc
jns
jno
aad
jnp
cmpsb
mov
rolb
add
jl
add
jle
adc
pop
or
and
fstp
push
je
in
or
add
jl,pt
rcl
insb
shl
dec
shl
jle
imul
and
and
and
and
jl
push
les
push
inc
cmp
out
add
dec
lods
test
inc
mov
ja
das
dec
xor
xchg
or
xchg
add
xchg
push
jne
lock
fsubs
and
outsl
ds
movsb
dec
or
out
add
fdivrs
test
mov
add
push
pop
lea
shlb
mov
jmp
add
shl
sub
js
inc
dec
aaa
jl
mov
inc
sbb
cmp
add
jmp
mov
push
cltd
outsl
dec
add
test
add
mov
add
xchg
leave
cmpsb
imul
repz
mov
fildl
add
lods
bound
xchg
jecxz
ljmp
in
jecxz
and
or
jb
sbb
add
jmp
ret
jnp
jmp
les
faddp
and
add
add
add
rorl
pop
dec
adc
subb
lret
filds
push
icebp
push
add
mov
out
pop
js
test
or
fimuls
call
sub
mov
jmp
pop
or
popf
movl
jno
jno
xor
inc
mov
ljmp
add
fildl
into
inc
in
sahf
ss
mov
popf
or
in
lods
test
xchg
out
mov
add
mov
jle
or
idivb
mov
in
xlat
cmp
add
xchg
pusha
cmp
mov
mov
mov
icebp
loopne
push
jg
jne
add
in
ss
pop
sub
lds
test
add
or
jle
mov
and
cmpsb
inc
or
les
inc
arpl
and
jae
and
insb
pop
cld
cmp
mov
add
jbe
incb
add
in
adc
pop
filds
imul
sub
jnp
push
lcall
fs
jl
in
jns
lds
std
dec
and
jge
jmp
movsl
sub
push
rorl
jmp
incl
add
add
out
xor
mov
dec
cld
add
arpl
jge
xor
clc
fildl
dec
add
add
jmp
fwait
dec
or
jo
out
pusha
pop
and
rorb
pushf
clc
jo
dec
inc
mov
xchg
cmpsl
cmp
sbb
cmp
jns
shll
mov
jns
and
leave
or
flds
add
add
mov
xchg
jns
stos
adc
lods
fldcw
in
xor
and
enter
add
iret
add
sub
or
test
sub
jmp
mov
pop
sbb
mov
jmp
sub
sbb
mov
icebp
inc
or
mov
push
aad
add
add
or
mov
push
fs
loope
push
pop
and
inc
sub
add
mov
pop
push
icebp
int3
testl
divb
hlt
add
in
add
hlt
push
push
add
fstpt
mov
mov
test
mov
stc
imul
sbb
call
shl
xchg
add
add
mov
adc
dec
fcoml
lahf
add
mov
inc
fists
add
add
add
and
je
stc
mov
cwtl
mov
call
push
cmc
add
shrl
imul
pushf
cmp
imul
sbb
ret
in
pinsrw
js
jae
jge
cmp
add
add
lods
adc
imul
mov
inc
pop
push
or
mov
fwait
mov
add
andb
movb
loopne
je
scas
mov
stc
jge
filds
add
cmp
scas
out
jl
push
ret
cmp
loopne
inc
lds
std
inc
movsb
cld
in
pusha
js
and
addr16
and
add
add
adc
pushf
js
add
push
int3
jg
ret
and
cmp
loopne
and
dec
dec
jmp
inc
xbegin
jecxz
mov
hlt
xchg
ret
mov
add
sbb
sub
mov
add
pusha
sbb
repz
or
push
ret
int3
mov
and
add
add
stos
in
mov
shl
call
sbb
mov
rorb
sub
rolb
add
jbe
div
outsb
leave
clc
mov
jns
ret
insb
shr
icebp
test
sub
cmp
cmp
sub
shll
jmp
stc
or
roll
add
add
jns
aad
cmc
sub
cltd
lret
cmp
push
sub
sbb
cmpsb
mov
cmp
sbb
sbb
mov
and
jmp
fadds
les
rol
repz
jb
sub
mov
and
jno
and
mov
push
stos
cwtl
inc
lret
out
add
fistpl
add
push
add
push
jmp
xchg
adc
cmc
mov
push
idivl
leave
int
pushf
ror
cmc
mov
mov
jg
mov
jge
jne
xor
add
lret
xor
je
jno
mov
outsb
inc
sbb
popf
pop
cld
fmulp
aas
faddp
pop
daa
xchg
cmp
push
xlat
adc
add
add
gs
and
fists
test
popf
and
faddl
add
ds
inc
fcoml
or
and
jo
push
ja
fsubl
and
rcrl
jl
hlt
jbe
rolb
and
sbb
xor
outsl
enter
mov
sbb
rol
jle
push
ljmp
fiaddl
add
add
stc
movsb
test
ljmp
leave
sub
push
add
aaa
cmpps
filds
shlb
add
inc
stos
and
cld
test
jl
sahf
jb
outsl
jle
push
dec
dec
jl
scas
jb
pop
jle
inc
call
add
pop
or
std
dec
mov
add
add
jge
pop
inc
inc
js
inc
aas
ret
nop
ret
add
mov
into
decb
jmp
inc
insb
aas
test
je
xor
add
mov
aas
insb
in
inc
divb
add
pop
mov
std
insb
add
jmp
pop
or
pusha
into
jo
in
push
add
mov
push
addb
add
movl
jbe
jmp
outsb
in
test
ficompl
les
cmc
add
jg
call
inc
jno
add
adc
sti
or
outsb
jo
mov
add
scas
cli
repz
sahf
pop
andl
mov
mov
sub
cmp
fldl
fisttps
pop
dec
and
in
add
nop
ret
insb
dec
add
mov
jbe
scas
nop
jl
mov
xchg
fmull
and
cmp
jle
mov
inc
movlps
test
loop
cmc
dec
shrl
in
inc
loop
mov
dec
arpl
test
mov
sbbl
imull
mov
jp
add
loop
sbbl
inc
test
xchg
xchg
cs
cltd
inc
jne
aam
or
inc
leave
incl
fmul
cmp
les
mov
xrelease
mov
add
dec
mov
test
xlat
push
xchg
push
cmp
mov
ja
jb
insb
addl
addl
add
add
sahf
fisttpl
scas
xchg
pop
dec
or
push
call
xchg
or
psrlw
add
cld
addr16
lds
jb
hlt
loopne
nop
jge
pusha
cmp
cs
dec
cmp
imul
arpl
cld
sub
mov
sbb
mov
pop
inc
sub
xchg
cld
imul
cmp
dec
ret
fldl
add
add
jge
stc
dec
inc
xchg
std
mov
sub
add
cmp
das
or
bound
jp
enter
ja
jp
add
fsub
bound
sarl
cmpl
jmp
aam
mov
sbbb
adc
pop
cli
je
hlt
mov
lcall
outsb
hlt
dec
mov
jmp
cwtl
imul
add
jle
shlb
roll
lods
jle
clc
push
std
mov
movsl
add
add
aaa
lock
scas
in
ljmp
push
add
dec
xchg
jne
sub
bound
mov
push
movsl
adc
or
lock
cli
call
jmp
addr16
addb
push
push
xchg
test
jne
jns
cld
push
cmp
mov
aaa
call
test
mov
add
faddl
add
loope
icebp
push
outsb
adc
xor
mov
sar
aas
inc
inc
and
add
xchg
ja
fdivrs
mov
add
pop
add
into
dec
popa
fimull
lds
sbbl
xlat
or
inc
mov
add
fdivl
dec
stos
mov
ja
xchg
and
mov
ja
call
gs
shlb
push
jb
push
add
bound
in
pop
les
movups
xor
aam
jae
aad
cmpsb
adc
add
add
jnp
mov
add
xlat
add
jl
sbb
lds
pop
jnp
ljmp
dec
test
add
push
or
gs
pusha
adc
pop
aam
sub
jbe
adc
jl
inc
ret
pop
jge
and
jl
fstl
jge
add
adc
shrb
add
mov
xor
jnp
pushf
dec
loope
pushf
iret
jl
stc
cmp
outsb
add
cmp
bound
adc
cld
stc
dec
jb
adc
push
cwtl
inc
aad
and
mov
outsl
in
fdivrl
push
push
ret
test
jae
mov
push
mov
movsb
push
mov
push
mov
mov
test
popf
hlt
rol
sbb
mov
int3
loopne
fimuls
lods
add
sbb
push
data16
inc
lods
test
inc
shr
rolb
stos
outsb
cmc
or
xor
sub
mov
xor
cmpl
add
lds
out
cli
jnp
fmull
ljmp
dec
jl
aam
ljmp
sub
dec
ljmp
fnstenv
pop
inc
jb
cmc
lret
addr16
test
hlt
idivl
popa
div
and
shlb
mov
xchg
aas
xchg
xchg
hlt
testl
pop
test
popa
psadbw
fldl
mov
div
dec
jae
hlt
lods
int3
inc
inc
les
fdivl
not
test
les
hlt
xlat
mov
push
faddl
leave
pop
jae
dec
dec
rcrb
xchg
stc
testl
movntps
mov
pop
add
add
add
add
jns
test
sbbb
popa
sbb
or
sub
movb
add
adc
enter
enter
enter
sti
or
repz
aas
faddp
std
mov
pusha
dec
rclb
clc
jp
call
jo
xchg
mov
and
mov
sub
add
add
push
pop
cltd
fmull
inc
mov
add
or
xchg
hlt
insb
mov
dec
push
jb
push
mov
movsb
cmp
and
jle
sbb
mov
repnz
xchg
arpl
stc
add
jne
repnz
mov
je
mov
cld
enter
leave
xor
or
bound
push
mov
inc
jmp
push
jb
or
jg
mov
push
push
lcall
inc
add
in
jno
push
jno
push
add
add
jno
in
cmc
add
in
out
aam
inc
fiadds
mov
rcll
adc
mov
faddl
pop
fwait
inc
add
jno
push
jno
push
movb
insl
pop
add
stc
fucomip
faddp
push
pop
and
in
lret
pop
pop
out
push
scas
in
add
les
hlt
sub
cmp
mov
add
add
addr16
add
out
adc
sbb
fdivr
push
dec
xchg
push
ret
cmp
inc
mov
jmp
aas
add
shrl
xchg
sbb
dec
notl
loope
mov
enter
aas
add
testl
mov
shll
inc
adc
add
add
xchg
pop
movsb
sti
testl
push
notl
imul
push
mov
movsb
mov
push
sbb
adc
lcall
jae
mov
sbb
ss
jns
addr16
stos
jbe
sbb
es
inc
subl
push
sbb
xor
addr16
sub
in
call
jns
add
add
scas
sbb
cmp
ror
sub
sbb
scas
adc
xchg
and
int
decb
iret
add
cmp
loop
scas
adc
push
add
stc
dec
push
repnz
outsl
enter
insb
jb
cmc
mov
sti
fdiv
ljmp
jmp
ret
cmp
pop
decb
sbb
or
sbb
cmp
stc
call
add
sbb
mov
or
ss
andl
dec
push
cli
bound
in
ret
repnz
fldcw
push
lahf
jno
cmpsb
dec
out
mov
fimull
cli
inc
mov
sbb
add
les
adc
sbb
in
cmp
push
pop
mov
popa
in
cmp
in
mov
hlt
jbe
jno
es
out
mov
jmp
cli
fmuls
hlt
out
icebp
add
fldln2
jmp
jne
js
fsubr
mov
pop
add
imul
mov
adc
mov
add
add
cmc
xor
mov
xchg
arpl
xorl
push
xor
push
cmp
ret
jo
add
in
cmp
xlat
ja
in
add
add
dec
sbb
decb
testl
negl
call
mov
mov
stc
and
in
mov
push
xor
cmp
cmc
dec
sbb
mov
mov
mov
test
jmp
imul
pop
push
pop
xlat
hlt
mov
lcall
mov
rorl
push
addl
sbb
cs
xchg
jp
sbb
adc
jo
fcomps
push
adc
repnz
or
in
out
mov
adc
or
add
add
ret
in
add
pusha
add
xchg
jnp
inc
jb
fsubl
sbb
sub
aad
xchg
mov
cmp
repnz
lahf
adc
aad
sub
or
ffree
nop
cmc
xchg
mov
cmc
addr16
mov
cmc
push
aam
icebp
pop
jmp
push
stos
sub
sbb
add
add
mov
pushf
or
cmp
aaa
push
adc
cmp
jmp
or
jmp
jmp
pop
pusha
faddl
ds
adc
and
adc
mov
push
cmp
mov
data16
shlb
adc
lea
adc
scas
imul
js
push
sbb
add
jmp
pop
add
jbe
or
jno
add
push
xchg
push
add
xorb
es
push
add
inc
testb
pop
add
cltd
adc
dec
xchg
adc
call
adcl
add
popf
adc
hlt
mov
repz
add
or
stc
mov
enter
xor
inc
in
mov
or
bnd
jmp
sbb
ds
call
inc
test
add
sti
dec
mov
ffreep
xor
loopne
xor
fcomip
div
inc
push
push
jno
jbe
aas
jle
shrl
fcos
in
add
test
iret
xor
add
roll
push
push
ret
inc
jmp
insb
xchg
out
les
xchg
dec
adc
xchg
jl
and
push
cmc
ficoml
icebp
push
fisubrl
enter
cmp
das
mov
add
pusha
lock
mov
andl
outsl
dec
mov
xor
int3
push
sbb
add
dec
fadds
jmp
les
popf
js
mov
incl
add
add
fsubrs
add
out
jp
push
call
mov
dec
push
bound
aaa
add
jmp
mov
mov
push
out
sbb
pusha
or
push
adc
sbbb
fdivrl
popf
push
or
movsb
aaa
lea
pusha
fnstsw
pushf
or
ficomps
cwtl
aas
enter
mov
inc
jb
fisttpll
cmp
xchg
imul
lahf
push
or
daa
int3
add
fidivrl
add
inc
or
out
or
dec
out
dec
dec
mov
cmp
mov
adc
mov
cmp
stc
cmpb
push
and
xorb
lds
add
les
cmpsb
inc
adc
xor
adc
sahf
int
mov
ljmp
mov
fsts
data16
enter
ljmp
pop
aaa
adc
arpl
mov
imul
xor
jp
enter
enter
rclb
aas
stc
add
xchg
cmc
mov
sbb
add
mov
movntq
out
push
daa
out
push
out
add
pusha
dec
testl
dec
mov
hlt
imulb
fcomp
push
and
out
loope
cmovo
fistps
mov
inc
adc
dec
push
mov
jp
test
cli
mov
js
push
out
cld
lret
sub
jmp
mov
out
jp
and
js
and
clc
jae
xlat
inc
aas
xor
add
mov
jp
and
stc
inc
push
repz
and
js
and
xor
mov
js
ljmp
fmull
lahf
daa
aam
adc
or
or
jbe
into
cli
ja
into
inc
and
and
repnz
mov
and
sbb
sub
movsb
cmc
imul
adc
jb
outsl
out
mov
mov
mov
xor
cmp
fld
xor
and
addl
ss
lods
jle
lods
out
add
cmp
pop
lods
out
add
inc
pop
lods
jle
in
out
add
add
pop
gs
xor
jmp
cmpsb
adc
xchg
add
add
add
pop
sub
addr16
add
push
aaa
add
push
inc
in
push
aaa
add
inc
push
inc
fisttpll
or
xor
ja
inc
fucomip
cwtl
test
inc
lods
or
add
or
push
sar
lcall
adc
add
add
in
mov
adc
mov
xor
decl
sub
inc
sub
or
adc
jne
stc
ljmp
int
add
dec
pop
mov
jbe
test
idivb
call
call
ja
aas
and
or
mov
jbe
aas
and
pop
test
shrb
jbe
aas
mov
adc
or
rcr
jne
rcr
mov
lock
xor
ja
loopne
repnz
in
imul
jo
add
in
pop
iret
add
repnz
cmp
movzwl
fisttps
add
les
jl
jle
jl
add
add
ljmp
xor
loopne
cmc
mov
fs
loopne
jb
int3
jl
cmp
xlat
dec
adc
sub
lds
sub
xchg
pop
mov
shrl
or
daa
mov
shll
jle
jnp
std
inc
ss
jmp
fldl
jge
pop
ret
jle
and
nop
adc
jmp
je
xor
xor
xor
or
stos
or
mov
lret
jl
bound
adc
jb
sbb
mov
mov
add
cmp
mov
icebp
iret
push
in
fistpll
cmp
or
incb
adc
test
shr
mov
push
mov
cmp
addl
add
das
imul
add
or
inc
in
inc
ljmp
les
inc
or
xor
in
pushl
mov
leave
ljmp
aaa
cld
cmp
in
pushl
and
inc
dec
dec
add
mov
add
lods
ret
mov
nop
aaa
cld
sti
out
incl
add
add
ljmp
adc
or
sbb
adc
mov
or
arpl
ret
push
out
and
ret
mov
push
inc
sbb
mov
add
adc
adc
inc
pop
js
fiadds
add
arpl
mov
pop
sbb
pop
pop
sbb
mov
push
sbb
mov
xor
mov
mov
hlt
push
push
call
add
cmp
jnp
xor
pop
daa
fldl
add
sbb
push
leave
js
faddl
add
jg
push
lahf
add
sub
cmp
xor
in
cmc
sti
outsb
ror
sti
stos
inc
fistpll
les
arpl
add
aam
xor
sub
or
pop
jbe
mov
add
add
jmp
les
jno
shl
pop
push
enter
divl
adc
fxch
jb
pushf
xor
push
call
dec
dec
arpl
aad
mov
xchg
repz
jl
add
add
push
xchg
jle
shll
leave
mov
iret
cli
sarl
ds
add
add
jns
jb
icebp
add
ret
lret
icebp
or
jb
icebp
add
cwtl
mov
mov
xchg
fwait
xor
bound
ljmp
adc
iret
push
std
and
add
cmp
mov
testb
xchg
mov
int3
mov
jbe
and
add
add
sbb
sbb
mov
and
jl
and
test
or
add
add
fucomi
int3
adc
inc
push
popf
add
int3
add
in
fisttpll
add
xor
or
add
in
pushl
cmp
jae
cmp
lods
or
add
in
cmp
add
add
loop
in
inc
test
add
out
mov
add
inc
loopne
push
mov
inc
fiadds
add
and
divl
rolb
inc
rolb
fiadds
add
add
notl
adc
inc
les
rolb
fiadds
add
jecxz
div
inc
roll
inc
roll
fiadds
add
ret
jecxz
ror
rolb
int3
rolb
faddl
add
mov
add
mov
rolb
adc
inc
faddl
add
and
xchg
mov
inc
les
add
les
cmp
push
push
inc
iret
push
push
jmp
les
ror
push
lods
into
xchg
sbb
cmp
les
add
cld
loopne
lret
pop
mov
xchg
fsub
sti
lret
xchg
jmp
les
nop
mov
push
push
jmp
les
mov
push
push
popf
mov
les
jbe
push
push
add
xchg
inc
add
movl
add
movl
add
into
inc
add
movl
add
add
add
sbb
lahf
pop
test
jmp
xor
jmp
cmp
jmp
jno
jmp
dec
adc
movl
jmp
sbb
jmp
push
adc
pop
adc
popf
add
and
insl
add
sbb
pop
add
push
adc
dec
adc
add
add
dec
adc
adc
add
sub
add
out
sbb
add
sub
sbb
add
into
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
fiadds
hlt
mov
add
add
add
fiadds
mov
aam
add
aam
add
fiadds
pop
mov
add
fiadds
je
fiadds
js
fiadds
insb
aam
add
add
fiadds
pushf
mov
add
aad
add
fiadds
cld
aam
add
mov
add
mov
add
mov
add
mov
add
faddl
mov
add
ljmp
imul
add
ljmp
cmc
ljmp
cmc
ljmp
cmc
ljmp
cmc
ljmp
cmc
ljmp
cmc
ljmp
cmc
ljmp
imul
add
imul
add
add
add
imul
add
imul
add
hlt
ljmp
imul
add
imul
add
out
ljmp
repz
imul
jmp
mov
add
jmp
cltd
add
jmp
popf
add
jmp
jno
jmp
jns
jmp
jne
jmp
jge
jmp
movl
add
jmp
mov
add
jmp
cmp
shrd
inc
shrd
setge
cmp
popf
or
shrd
xor
lods
or
setge
sub
popf
or
insl
or
or
sldt
add
pop
or
minps
push
or
or
minps
sbb
pop
or
cvtps2pi
adc
sub
or
adc
or
cvtps2pi
out
push
sbb
or
push
in
or
adc
or
fisttpll
cs
or
in
or
push
les
add
mov
scas
add
lret
add
scas
add
mov
scas
add
lret
mov
scas
add
shrb
add
mov
scas
add
scas
add
scas
add
lret
aam
scas
add
mov
scas
add
lret
enter
mov
lret
iret
ret
scas
mov
add
add
adc
add
jmp
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jmp
add
jmp
sbb
jmp
mov
jmp
movsb
adc
add
adc
add
adc
add
adc
add
adc
add
jmp
dec
sbb
add
jmp
xchg
sbb
jmp
out
sbb
add
jmp
mov
jmp
call
mov
jmp
lods
pop
jmp
movsl
pop
jmp
fldl
jmp
or
movl
pop
jmp
jge
jmp
cmp
imul
jmp
gs
jmp
cltd
pop
jmp
pop
adc
xchg
pop
jmp
lea
jmp
movl
adc
in
add
loopne
fldl
pop
or
in
add
dec
or
lods
add
push
or
popf
add
ss
popf
add
add
popf
add
nop
add
push
or
insl
add
adc
pop
add
testb
out
or
add
out
sub
scas
add
mov
scas
add
enter
ret
sbb
scas
add
shrb
add
ret
scas
add
mov
add
add
scas
add
lret
scas
add
shrb
mov
enter
shrb
test
scas
add
scas
add
scas
add
scas
add
scas
add
lret
mov
scas
add
mov
add
jmp
cli
push
jmp
out
push
jmp
adc
jmp
push
por
fs
add
adc
add
adc
add
adc
add
adc
add
jmp
lock
add
adc
add
adc
add
adc
add
adc
add
jmp
movsb
adc
add
adc
add
jmp
mov
jmp
rclb
add
adc
add
or
add
add
add
adc
jmp
mov
or
mov
jmp
lods
or
loope
jmp
jmp
rorl
jmp
leave
or
int
jmp
mov
or
jge
jmp
int3
or
movl
or
gs
movl
adc
xchg
or
mov
jmp
sub
add
or
add
or
sbb
add
in
add
fldl
mov
fldl
sahf
or
add
or
add
or
or
or
or
lods
or
or
or
insl
or
insl
or
pop
or
or
push
or
sbb
insl
or
or
adc
les
add
iret
scas
add
mov
scas
add
into
scas
add
into
scas
add
mov
scas
add
into
scas
add
into
scas
add
mov
scas
add
into
scas
add
into
scas
add
mov
scas
add
into
scas
add
leave
scas
add
shrl
into
scas
add
into
scas
add
scas
add
scas
add
scas
add
add
jmp
xor
jmp
dec
por
dec
por
mov
jmp
inc
por
dec
por
and
jmp
mov
por
push
por
nop
por
por
js
jmp
jl
jmp
orb
add
add
adc
add
jmp
lea
add
jmp
or
jmp
or
jmp
rorb
jmp
add
jmp
mov
por
mov
lar
adc
jmp
or
jmp
adc
or
insb
or
mov
or
mov
jmp
test
or
mov
or
jmp
rorl
jmp
leave
or
aad
jmp
sub
jmp
mov
or
jge
jmp
jne
jmp
popa
or
insl
or
pop
push
xchg
or
out
or
mov
insl
push
lcall
push
xchg
or
push
mov
sbb
push
orb
push
outsb
or
push
or
add
push
fldl
bound
in
add
pop
or
add
push
or
add
add
add
inc
or
add
or
scas
add
mov
scas
add
int
add
mov
scas
add
int
add
mov
scas
add
scas
add
scas
add
scas
add
scas
add
int3
scas
add
int3
scas
add
mov
scas
add
int3
scas
add
int3
scas
add
mov
scas
add
int3
scas
add
int3
scas
add
mov
scas
add
int3
scas
add
int3
scas
add
mov
or
jmp
fimuls
add
or
add
or
add
or
jmp
and
jmp
pop
or
jmp
push
or
jmp
dec
or
jmp
inc
or
jmp
jns
jmp
inc
or
jmp
pop
or
jmp
adc
jmp
push
or
add
jmp
jle
jmp
bound
add
jmp
push
add
imul
xchg
or
arpl
jmp
fwait
or
movl
add
jg
jmp
aaa
or
movl
or
daa
or
xor
jmp
sub
jmp
and
jmp
pop
or
movl
jmp
dec
or
testl
jmp
sti
pop
jmp
popf
add
or
add
add
add
popf
add
or
or
insl
add
or
add
pop
add
or
cld
or
or
pop
add
or
add
sub
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
fldl
mov
fldl
rorb
or
mov
sahf
add
int
add
mov
sahf
add
mov
sahf
add
int
add
mov
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
add
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
mov
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
add
add
ljmp
std
ljmp
std
ljmp
std
ljmp
cld
ljmp
std
ljmp
cld
ljmp
mov
or
mov
or
outsl
or
arpl
jmp
imul
pop
or
xchg
or
addr16
fwait
or
orl
xchg
or
mov
jmp
xor
jmp
cmp
jmp
and
jmp
sub
jmp
push
or
daa
or
pop
or
dec
or
movl
or
push
cmp
fldl
dec
or
push
xor
lods
push
inc
or
add
add
push
and
lods
push
xor
lods
push
sbb
popf
push
sub
popf
push
adc
insl
push
and
insl
push
or
pop
push
sbb
pop
push
add
insl
push
adc
insl
push
sbb
pop
pop
push
hlt
pop
sub
push
in
pop
sbb
push
in
sub
push
faddl
sbb
push
aam
in
add
int3
pop
les
add
pushf
add
lret
pushf
add
ret
pushf
add
lret
pushf
add
ret
pushf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
sahf
add
ret
sahf
add
sahf
add
leave
sahf
add
rcrl
add
sahf
add
rcrl
push
sahf
add
add
jmp
lcall
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
pop
jmp
or
add
pop
jmp
cs
jmp
xor
jmp
push
pop
jmp
sub
add
fwait
cld
call
mov
cld
call
mov
cld
call
xor
call
mov
cld
call
pop
cld
call
addr16
call
cld
call
xchg
cld
call
jg
call
movl
cld
call
aaa
cld
call
pop
cld
ljmp
add
add
in
add
add
fldl
dec
push
fldl
pop
push
in
add
add
fldl
or
add
add
add
add
add
add
add
push
lods
add
lods
add
push
popf
add
popf
add
push
insl
add
insl
add
push
pop
add
pop
add
push
insl
add
insl
add
push
pop
add
add
sub
add
push
sbb
pushf
add
leave
pushf
add
rcrl
rcrl
leave
pushf
add
rcrl
rcrl
rcrl
rcrl
rcrl
mov
sahf
add
rcrl
cmpsb
rcrl
sahf
rcrl
xchg
rcrl
mov
sahf
add
rcrl
jle
add
add
add
jmp
mov
jmp
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
stos
call
mov
call
fwait
call
mov
call
cmpsl
call
iret
call
xlat
call
mov
call
jae
call
pop
call
arpl
call
mov
call
xchg
call
jnp
lcall
nop
add
pop
jl
sub
pop
je
sbb
pop
insb
add
pop
js
sub
pop
jo
sbb
push
push
add
push
pusha
add
push
dec
add
add
add
push
pop
add
push
inc
add
push
push
add
push
cmp
lods
push
dec
add
push
xor
popf
push
inc
add
push
sub
lods
push
cmp
push
xor
push
sub
push
and
pushf
add
rcrb
rcrb
rcrb
rcrb
pushf
add
pushf
add
pushf
add
pushf
add
pushf
add
pushf
add
pushf
add
pushf
add
pushf
add
pushf
add
pushf
add
lds
add
lds
add
lds
add
les
add
les
jmp
pop
push
jmp
push
push
jmp
popa
push
jmp
pop
push
jmp
imul
jmp
adc
jmp
or
add
jmp
add
jmp
std
add
jmp
add
push
jmp
sub
push
jmp
adc
push
jmp
sbb
push
jmp
sbb
enter
ljmp
add
jmp
les
add
xor
mov
add
rolb
pop
mov
add
shrb
mov
out
ds
cltd
test
jmp
movl
pop
movl
in
cmp
pop
push
push
outsl
in
ljmp
lret
test
jecxz
jle
out
mov
cmc
fld
add
add
stos
hlt
mov
rcll
pushf
xchg
cmp
add
fsubp
repz
mov
add
inc
pop
xchg
pop
aam
adc
daa
xchg
sbb
or
repz
icebp
incb
addl
adc
test
sbb
add
add
mov
or
aaa
and
korb
lds
addl
jne
pop
into
jmp
add
add
outsl
add
lods
sub
pushf
bound
and
pushf
ret
stos
inc
insl
ret
add
pushf
ret
mov
loope
rcrl
and
pop
cmpb
add
add
sbb
int
xorl
popa
loop
push
sbb
fldt
testl
fistpll
add
loop
cmpl
add
mov
mov
mov
dec
or
inc
and
inc
sbb
mov
out
and
or
or
arpl
add
add
add
enter
pop
add
jmp
test
jl
pop
mov
out
enter
mov
or
mov
push
cmp
add
or
pop
push
outsb
add
jmp
add
sub
pop
mov
stos
lock
enter
add
out
sub
hlt
mov
add
dec
loop
jmp
mov
or
enter
mov
inc
xor
lods
daa
call
call
lods
sbb
ret
out
insl
hlt
xchg
ljmp
loop
ljmp
ljmp
call
and
add
ljmp
call
cld
or
mov
add
test
or
inc
sbb
call
push
pop
in
out
outsb
mov
sbbb
add
outsl
inc
jp
roll
outsl
dec
decb
or
jne
outsl
cs
sbb
call
mov
popf
repnz
or
add
outsl
add
test
ret
and
das
mull
test
out
jp
aaa
sbb
jecxz
andl
test
lcall
andl
stc
ret
sub
call
xchg
sub
addb
add
inc
icebp
fdivrp
xchg
jne
lods
and
imul
jnp
test
ret
inc
icebp
out
aas
fnstenv
mov
insb
shrl
and
outsl
jle
out
mov
insl
ret
cmc
and
mov
add
je
testl
lahf
inc
insl
ret
div
fidivrl
testl
push
or
mov
les
and
in
les
jmp
cmp
add
add
loope
mov
add
xor
jmp
mov
mov
jmp
jecxz
les
in
icebp
sub
mov
cmp
add
icebp
add
in
inc
cmpsl
pop
sub
repnz
lds
cltd
cmc
sub
pop
call
out
roll
cltd
cmc
push
jo
testb
add
add
ja
xor
bound
cmpl
les
out
pop
fcomi
into
cmp
mov
push
aas
or
and
xchg
ljmp
lsl
dec
test
mov
shll
add
cmpl
and
push
paddb
adc
roll
cmc
add
add
add
inc
and
test
mov
push
cmpl
iret
in
inc
ret
mov
or
and
inc
and
out
push
sti
mov
pop
in
xor
add
xchg
outsb
or
pop
add
xorl
add
insl
imul
mov
add
xchg
or
sbb
add
add
or
jae
imul
les
xorb
jl
lods
add
fmul
scas
mul
jmp
jne
stos
and
inc
orb
push
push
test
ret
inc
mov
cld
cmp
and
lods
fs
negl
test
stos
testl
loope
add
add
add
scas
ret
inc
jmp
xorb
and
inc
adc
aas
mov
xorb
and
mull
imul
pop
mov
add
scas
inc
mov
lods
stc
mov
rorb
cmpsb
std
jecxz
push
mov
shll
add
loopne
inc
enter
cs
scas
popf
in
jg
hlt
ljmp
add
add
popf
test
adc
call
mov
popf
test
stc
repz
push
jg
pop
popf
test
shl
out
push
movsl
dec
mov
popf
test
mov
movsl
push
mov
popf
test
mov
add
aad
frstor
xchg
cmc
sub
call
roll
cmc
inc
dec
adc
lods
ffree
adc
cmc
sub
or
mov
cmc
sub
or
cld
imul
mov
xchg
cmc
push
invlpg
lods
dec
in
push
xchg
shrl
add
aaa
aam
xchg
shrl
cmp
lods
sub
ss
xorl
sti
mulb
scas
lcall
jbe
addl
or
cmc
stc
lcall
or
add
incl
add
add
ljmp
dec
sbb
and
shr
imul
outsb
aad
add
push
ljmp
add
push
or
in
ret
push
add
and
jmp
subl
add
lods
cld
lcall
jne
jg
cld
sub
sbbl
stc
sub
jge
add
les
xorl
xor
adc
sbbl
xor
or
jne
scas
sub
div
out
xchg
jb
add
scas
mov
testl
cltd
dec
mov
mov
inc
sbb
add
stos
cltd
dec
cwtl
stos
mov
inc
and
add
xchg
cltd
das
jge
mov
stc
cmpsb
incb
dec
inc
inc
mov
repz
sbb
insb
mov
push
adc
xchg
mov
xchg
inc
adc
mov
lods
fildll
cltd
repz
or
sub
mov
sub
lods
dec
stos
fistpl
fisubrl
lds
ret
sbb
jmp
pushf
cltd
in
sbb
aaa
shrb
pushf
ds
les
lds
andl
jmp
and
add
cli
xchg
imul
dec
rolb
jbe
test
enter
aam
cmc
pop
inc
adc
ljmp
ljmp
add
add
xchg
cmc
sub
or
pushf
or
enter
push
or
out
dec
sub
jmp
arpl
add
cmp
push
subl
stc
fidivs
les
out
out
add
out
divb
and
and
jge
add
push
pop
stc
call
cmpl
cwtl
in
incl
add
add
fstpl
call
fiadds
hlt
out
dec
in
incl
addr16
ret
push
dec
sbb
sub
shr
imul
cs
add
pop
bnd
addl
jne
jnp
cli
xchg
imul
jne
jnp
mull
mov
outsl
cli
imul
and
add
add
add
push
sub
sub
test
cmp
fisubrl
scas
mull
sub
or
cltd
cmc
out
adc
cli
add
ret
mov
sub
cmp
mov
add
shlb
jg
lret
lret
cli
mov
int3
imulb
lods
add
sarl
or
jmp
jnp
or
cmpsb
push
dec
push
pop
rol
lods
pop
ret
pop
mov
jp
lcall
cmpsl
push
push
sti
dec
add
les
pusha
dec
sub
cmpsl
lods
insb
inc
out
out
ret
fwait
fwait
push
lods
pop
mov
out
dec
adc
out
inc
adc
out
and
loope
sub
fucomp
ret
cwtl
ror
add
andb
test
call
lods
je
add
jmp
ja
jg
cld
shl
cmc
into
addl
std
aaa
and
in
sub
movsl
and
frstor
and
int
and
jl
adc
insl
and
lods
outsb
and
fsubl
adc
into
and
or
fbld
add
push
aas
call
iret
bound
je
mov
jmp
cwtl
push
aas
call
jo
out
inc
stos
aad
out
popa
in
ljmp
adc
and
or
pop
or
add
enter
lret
in
inc
mov
fstpl
pavgb
ljmp
add
add
ret
cmpsb
inc
and
xchg
nop
jle
fwait
or
add
xchg
in
rcrb
aaa
and
and
jecxz
clc
clc
jp
rorl
or
mov
fwait
cmc
fiadds
add
loop
sbb
les
push
pop
pop
xor
popf
add
adc
stos
addl
add
mov
clc
jae
mov
testl
jg
cmpsl
sahf
mov
add
pushf
jbe
out
jae
lds
sub
sub
movsl
negl
and
orl
jg
sti
xor
add
js
add
and
insb
mov
push
test
test
sbb
stos
sbb
fwait
testb
add
or
inc
jl
fadd
inc
mov
jb,pn
shrd
test
add
test
push
fwait
loop
pushf
test
popf
add
into
add
in
dec
enter
push
push
les
enter
ljmp
hlt
inc
out
xchg
inc
test
add
add
jecxz
xchg
popf
cmp
loop
add
sbb
jo
call
or
addb
sbb
cmc
testb
push
popa
out
and
repz
add
rcll
jmp
test
add
addb
pop
enter
ret
popf
fsts
lret
out
inc
sbb
sub
nop
je
pop
inc
ljmp
push
add
sbb
add
ljmp
cmp
aad
and
outsb
and
arpl
je
cmp
cmp
ljmp
pop
std
je
cmp
icebp
xchg
fldl
addr16
ret
xchg
pushf
jmp
sbb
subl
add
sub
add
add
in
or
mov
sub
dec
hlt
push
cmpl
xchg
in
xchg
ret
das
shr
add
rol
nop
mov
les
sahf
pop
inc
xor
insb
ret
out
ror
mov
testl
cmpb
xchg
add
les
inc
lds
add
pushf
sbb
insb
mov
sbb
sub
divb
ret
lock
dec
lahf
testl
pop
shr
adc
cmp
icebp
cli
sbbb
movsb
notl
pop
cmp
xchg
mul
dec
pop
lahf
testl
mov
jmp
cmpsl
sbbb
scas
add
cmpsb
loopne
add
add
push
stos
add
dec
jmp
les
cli
fwait
fs
or
inc
adc
cld
adc
adc
mov
rcl
jmp
les
sarl
sar
cmp
push
div
cli
stos
int
in
xchg
xchg
mov
xchg
pusha
fiadds
loope
dec
enter
es
add
enter
ljmp
push
adc
mov
sbb
mov
xchg
cmc
sub
dec
add
sbb
jo
call
dec
mov
clc
cmc
loop
fisttpll
pop
xchg
cmc
sub
xchg
cltd
movsl
iret
cld
addr16
shrl
outsl
flds
jne
mov
icebp
movsb
sti
jmp
stos
dec
nop
add
icebp
mov
fnstsw
xchg
cmc
stos
jo
lock
cmpl
add
lret
jge
ljmp
xchg
add
sbb
inc
idiv
popf
cmc
cmp
or
add
or
add
xchg
cmc
cmp
or
add
shl
call
xchg
cmc
decl
stos
stc
ljmp
or
add
into
cmc
ljmp
cmc
call
or
add
add
cmc
lcall
movsl
stc
lcall
add
sub
into
cmc
decl
movsl
stc
inc
sahf
add
les
cmp
or
incl
out
cmp
add
sahf
add
les
jecxz
sti
fistl
sti
rcrl
add
les
icebp
pushl
popf
add
les
cld
xchg
sar
decl
popf
add
les
cld
imul
sti
pop
popf
add
les
cld
inc
xor
cmp
sti
xor
jmp
les
adc
cmc
adc
jmp
les
xor
jmp
sbb
mov
add
add
add
add
sbb
hlt
ret
mov
inc
mov
add
aas
mov
mov
loopne
mov
add
add
sub
mov
jae
jmp
les
jmp
les
jmp
les
add
testb
jmp
rorl
add
cmc
and
mov
aas
mov
mov
inc
cltd
mov
push
xchg
mov
sti
cwtl
mov
or
clc
mov
stos
lock
xchg
clc
mov
lock
lahf
fmuls
cmc
inc
fmuls
cmc
sub
mov
add
mov
inc
pushf
mov
test
mov
add
cmc
incl
add
cmc
call
iret
cmc
push
lret
cmc
dec
lret
cmc
lcall
cmc
call
iret
cmc
incl
cmc
incl
add
add
int3
cmc
jmp
int3
cmc
call
leave
cmc
jmp
cmc
pushl
cmc
ljmp
cmc
mov
int3
cmc
inc
leave
cmc
jmp
shl
jmp
shl
incl
add
add
leave
cmc
lcall
add
sbb
cmc
ljmp
add
lock
cld
push
call
dec
cld
inc
inc
dec
cld
cmp
dec
cld
xor
dec
cld
sub
dec
cld
and
dec
cld
sbb
cld
adc
cld
or
cld
add
cld
sti
adc
rep
aas
cld
jmp
cmp
jecxz
cmp
fisttpl
cld
rol
aas
cld
lret
inc
aas
cld
ret
sbb
cld
mov
or
ds
mov
repz
xchg
fwait
cmp
mov
cmp
jnp
cmp
jae
cmp
imul
inc
pusha
xchg
pop
xchg
push
xchg
dec
xchg
inc
cmp
lods
inc
sub
cmc
dec
sbb
pop
dec
or
pop
dec
clc
xchg
dec
lock
call
xchg
dec
rolb
dec
dec
rolb
dec
mov
fisttpl
xchg
dec
mov
xchg
dec
mov
ja
js
add
mov
cmp
push
mov
mov
decb
cmc
or
mov
idivl
cmc
pop
jle
cmc
adc
mov
jnp
mov
inc
jge
cmc
aas
lea
cmc
jmp
mov
das
xchg
cmc
inc
xchg
cmc
out
mov
fildl
xor
pop
xor
push
xor
push
xor
push
xor
push
xor
push
xor
push
xor
pop
enter
enter
cmc
jmp
add
add
lret
cmc
pushl
cmc
jmp
cmc
lcall
lret
cmc
lcall
lret
cmc
ljmp
lret
cmc
dec
lret
cmc
decl
lret
cmc
call
idiv
mov
cmc
pushl
cmc
lcall
lret
cmc
pushl
lret
cmc
incl
lret
cmc
decl
int3
cmc
pushl
lret
cmc
pushl
lret
cmc
incl
add
add
cmc
inc
mov
mov
cmp
jnp
cmp
jae
cmp
imul
arpl
cmp
push
pusha
cmp
dec
xor
insb
xor
cld
xor
inc
cld
sub
inc
cld
and
cld
sbb
xor
adc
cld
add
xor
cld
jmp
xor
jecxz
inc
cld
fildl
add
shrl
add
ljmp
mov
insl
add
les
inc
push
jmp
add
test
add
test
add
add
imul
push
add
sub
push
sbb
les
fnsave
cmp
scas
das
sub
lods
das
sbb
inc
das
or
insl
das
clc
subb
xor
call
or
fadds
sbb
enter
rolb
xor
xor
sub
xor
jne
xor
jmp
mov
cmc
pop
mov
cmc
daa
xchg
xor
jmp
std
xor
add
xor
mov
mov
cmc
jge
xor
pop
mov
cmc
ret
mov
cmc
rorl
xor
cmpl
and
loope
cmc
out
into
cmc
jmp
into
cmc
jg
cmc
lcall
cmc
ljmp
iret
cmc
incl
add
add
cmc
sti
int
fxch
cmc
dec
cmc
incl
cmc
pushl
leave
cmc
jmp
cmc
lcall
cmp
jmp
leave
cmc
fstpt
idiv
xlat
cmp
push
cmp
incl
cmp
incl
idiv
inc
cmp
call
idiv
popf
cmp
lcall
mov
cs
mov
add
add
lods
aas
cld
mov
sahf
aas
cld
xchg
mov
dec
cld
orl
cld
jnp
dec
cld
jae
dec
cld
imul
cld
arpl
dec
cld
pop
lock
push
fsubrs
cld
inc
cmp
cld
cmp
cmp
xor
dec
cld
sub
dec
cld
and
dec
cld
sbb
cld
adc
or
cld
add
cld
sti
cltd
dec
cld
repz
add
jmp
dec
cld
jecxz
dec
cld
fildl
dec
sarb
dec
enter
sarb
mov
jg
dec
test
cmpsl
xor
jg
xor
jg
xor
jg
inc
jo
mov
push
jg
dec
pop
jg
dec
push
jg
dec
dec
jg
dec
inc
jg
dec
cmp
inc
xor
inc
sub
xor
add
add
jg
add
add
insl
cmp
jg
cmp
jg
add
add
mov
call
xor
mov
mov
cmc
sub
xor
arpl
xor
jmp
rolb
cmp
add
sbb
add
sbb
add
add
cwtl
xor
outsl
mov
cmc
cmp
out
xor
fadd
add
cmc
out
movl
cmc
xchg
mov
cmp
fiadds
add
clc
add
sbb
add
popf
or
andb
add
jl
add
mov
or
add
xor
idiv
pop
xor
idiv
jno
idiv
mov
xor
idiv
lret
xor
idiv
iret
xor
idiv
add
pop
ss
call
cmp
cld
jmp
add
les
cmp
cmp
rcll
lret
and
cld
ret
je
cld
mov
lock
stos
call
cmp
fwait
outsb
add
les
dec
pop
clc
stos
adc
pop
loopne
add
sub
rcrl
insb
pop
push
mov
sbb
mov
std
imul
sub
lret
push
pop
mov
and
les
pop
mov
jmp
add
sti
push
and
push
ret
adc
mov
or
adc
sbb
sbb
clc
into
dec
sub
add
lds
loope
sbb
loope
pop
and
mov
les
cwtl
pop
icebp
in
dec
mul
jge
jne
xchg
adc
in
jmp
pushf
sub
ret
push
and
les
mov
dec
pop
test
push
cmp
add
dec
sub
in
add
add
outsl
or
jmp
pop
rolb
stos
jmp
push
or
jmp
stos
fcoms
rcr
ds
scas
pushl
out
inc
int
loop
jmp
scas
jecxz
stos
stos
loop
test
movsb
mov
stos
cmp
mov
cld
dec
jmp
scas
jecxz
aaa
mov
loope
rolb
add
arpl
and
push
gs
push
mov
push
pusha
jne
and
fldl
jb
shrl
jo
rcrl
push
outsb
jmp
daa
push
jae
add
data16
add
add
add
data16
and
add
popa
popa
inc
iret
outsl
gs
add
arpl
sbb
dec
add
arpl
adc
sub
daa
sub
sub
leave
xor
pop
jae
add
and
pop
fs
and
inc
jbe
sbb
or
sbb
add
add
decb
sub
and
jae
pop
adc
les
adc
inc
push
insb
and
push
lahf
sub
adc
adc
outsl
add
leave
mov
adc
adc
outsb
add
hlt
cld
adc
sbbl
les
sub
icebp
push
and
add
add
add
push
sub
call
or
mov
adc
addl
std
aaa
pop
ljmp
sbb
shll
push
sti
add
daa
jmp
rolb
daa
mulb
add
repz
or
mov
in
addl
in
add
mov
outsl
mov
std
add
pop
cmp
leave
shll
cmp
fmuls
mov
add
shl
sbb
mov
add
leave
loope
adc
xchg
pop
std
fwait
in
outsl
add
flds
loope
pop
loope
add
pop
aad
in
outsl
int3
out
inc
into
mov
add
add
ret
push
fucomi
bound
or
add
ss
add
xor
dec
pop
jno
and
add
sbb
and
jmp
add
add
push
push
je
imul
add
jbe
les
rcrl
popa
popa
leave
xor
arpl
sbb
in
add
bound
popa
imul
add
lods
or
pusha
adc
pop
outsl
imul
adc
popf
or
add
adc
xor
aas
jne
mov
pop
les
add
orb
lock
push
and
insb
jp
adc
shrl
cmp
gs
pop
addr16
cld
imul
add
jbe
pop
bound
push
dec
les
add
outsl
add
imul
and
and
les
sub
imul
inc
data16
and
pop
add
add
andl
loope
sbb
ljmp
call
ljmp
jg
xor
lods
stc
sbb
mov
inc
sbb
filds
test
adc
shr
ss
cltd
idivl
and
ss
ljmp
lret
pop
sbb
jo
cmc
adc
sbb
and
ljmp
fcmovbe
adc
fnsave
add
test
icebp
in
mov
movsb
in
dec
jmp
test
dec
addb
add
movsb
loop
xchg
xchg
call
xchg
fcompl
sarl
push
add
pop
pop
jmp
pop
aas
mov
add
out
pop
das
scas
jmp
jno
dec
jmp
rcl
bound
mov
test
sbb
testb
ljmp
fcomi
cmp
lret
cli
vpshufd
sbb
dec
cmovae
imul
insl
pop
cmovne
or
inc
imul
jo
fsts
popa
je
push
test
adc
dec
sbb
cwtl
adc
add
ficomps
push
popa
jns
inc
push
sbb
push
jo
mov
adc
test
add
mov
push
gs
and
add
mov
push
jae
cmp
ret
add
outsl
inc
imul
push
adc
sbb
hlt
dec
sbb
dec
inc
fs
push
cmp
leave
mov
imul
jnp
jae
mov
pop
add
sti
ds
fstps
data16
pop
mov
daa
and
pop
outsb
test
paddd
daa
and
adc
inc
pop
std
adc
aaa
inc
sbb
add
insl
add
sub
and
and
clc
lds
les
mov
push
loope
and
cmc
xchg
sbb
ljmp
loopne
sbbl
loope
cmp
in
test
les
add
out
jbe
cmpsl
loop
les
inc
and
loopne
or
mov
add
xor
sbb
out
adc
xor
push
imul
scas
add
fnsave
cli
repz
int3
div
lret
jp
smsw
mov
out
movb
add
aad
bound
mov
movl
bound
not
insl
aas
out
outsb
inc
shl
cmp
repz
mov
insl
dec
fdiv
fs
stos
bnd
cmpsl
sbb
repnz
sbb
aam
add
movsb
leave
push
mov
ret
mov
add
add
and
pop
arpl
pop
gs
incb
add
dec
outsb
push
pshufw
subl
pop
gs
add
jns
push
jne
adc
push
inc
adc
outsl
iret
pop
arpl
cmovno
sbb
tzmsk
add
fstl
pop
arpl
outsl
inc
push
scas
xor
lods
and
imul
add
add
adc
insb
shlb
les
sbb
and
cmp
or
sbb
jb
pop
sub
add
clc
repz
push
push
xor
adc
inc
push
push
add
push
jmp
lods
add
lock
push
jb
mov
pop
add
adc
les
adc
sbb
add
fwait
mov
jmp
je
lock
mov
cld
ds
xor
ja
add
std
xlat
imul
in
add
test
out
and
cmc
in
icebp
stos
insb
loope
or
xlat
mov
cmc
mov
or
repz
call
outsl
add
add
ret
loop
xchg
repnz
loop
add
pushf
call
stos
repnz
call
mov
ljmp
testl
adc
and
mov
enter
insb
cmc
loopne
sub
aam
pusha
or
enter
iret
gs
or
lods
filds
mov
pop
mov
lret
nop
iret
add
add
add
outsl
les
in
les
dec
jmp
pop
clc
outsb
xchg
pop
mov
pop
jmp
push
fstps
pop
out
movsb
aas
mov
pop
jne
loopne
ss
sub
sub
loopne
pop
push
frstor
js
pop
imul
add
gs
aas
push
enter
enter
stos
bound
mov
push
push
aam
push
add
arpl
pop
pop
popa
gs
push
push
add
imul
pop
pop
jb
imul
addr16
fs
arpl
incl
inc
outsb
aas
arpl
jb
jb
addr16
sub
arpl
jb
jb
pushw
jmp
jae
vdivsd
add
add
out
sti
dec
insl
cs
insb
gs
insb
popa
push
stc
jmp
ds
ds
or
gs
or
data16
add
jb
add
dec
and
jno
push
fisubrs
inc
mov
jno
mov
repz
jmp
cwtl
in
testl
insb
out
call
faddl
fsubrl
add
add
jg
fs
add
inc
jmp
mov
cmp
jecxz
hlt
aaa
add
add
in
jne
dec
call
push
hlt
push
add
add
in
push
loop
call
cmp
ljmp
out
call
sub
repz
xor
jmp
repnz
add
add
fcmovb
in
in
mov
in
add
test
mov
call
movsb
loope
jmp
xor
repz
add
outsl
pop
or
add
mov
enter
xor
fisttpl
sbb
dec
push
aam
data16
in
add
fildll
mov
outsb
or
ret
mov
loope
mov
mov
inc
sbb
pop
pop
mov
enter
jne
fs
xor
mov
data16
mov
sbb
cmpsb
pop
fildl
pop
pop
bound
jae
popa
bound
sbb
pop
imul
jae
push
jno
imul
jae
outsb
scas
jne
je
add
add
bound
add
push
les
outsl
ret
add
pop
pop
fs
pusha
push
push
je
push
outsl
jo
inc
add
push
xchg
pop
fs
mov
push
pop
add
gs
jne
inc
add
imul
out
mov
les
jg
pushl
test
mov
add
iret
add
mov
data16
push
lock
sub
push
sbb
pusha
push
ror
jecxz
ds
adc
push
daa
jmp
inc
sar
and
sub
repnz
sbb
outsl
add
fcompl
inc
in
pop
push
mov
pusha
negl
add
jmp
dec
out
clc
add
add
clc
out
rcl
hlt
xchg
fsubs
add
ljmp
jnp
jae
xchg
add
cmp
pushf
repz
jmp
mov
jmp
mov
sub
addr16
adc
popa
jmp
or
mov
push
leave
push
add
or
sub
sti
repnz
xlat
repz
push
mov
filds
add
add
jmp
mulb
je
mov
ljmp
push
dec
xchg
gs
mov
push
pop
roll
lretw
mov
xlat
insl
test
mov
xlat
dec
jmp
sub
push
and
int
inc
in
arpl
fs
and
std
pop
dec
sub
in
gs
clc
aad
or
fs
sbb
mov
sbb
add
add
iret
imul
movsl
fdivs
cmpsl
ret
jl
and
cmpsb
shrl
stos
movb
shlb
aad
ret
cmp
orb
jae
dec
or
xor
pusha
push
sub
add
dec
cmp
outsl
push
cmp
jae
dec
cmp
decl
ss
outsb
jns
fs
lahf
insb
pusha
inc
in
push
pop
add
outsl
push
cltd
imul
add
data16
jecxz
pop
fimull
sub
into
pop
jo
mov
addr16
gs
jae
push
insb
push
outsl
les
out
pusha
out
shll
cltd
icebp
inc
loope
in
fsubrl
lds
jmp
std
adc
xchg
mov
imul
add
repnz
push
test
xchg
out
inc
mov
out
jb
in
call
int
aas
mov
mov
aad
jns
repnz
pop
xor
data16
ljmp
xor
pop
pop
xor
jb
sti
ljmp
das
out
pop
sbb
call
pop
pop
push
shr
sub
ljmp
enter
ljmp
ljmp
fiadds
lret
or
mov
add
add
jecxz
fisubs
add
ficomps
lock
jg
push
in
ljmp
outsl
sarb
loope
into
push
add
pop
and
outsl
mov
push
shlb
lock
aad
add
loope
out
imul
adc
or
and
add
mov
pop
cli
xchg
in
int3
andb
mov
into
jo
insl
les
gs
roll
jno
popa
iret
push
jae
insb
mov
sub
dec
jmp
and
dec
xchg
xor
shll
out
jmp
sbb
jo
add
jo
hlt
out
jmp
in
push
cmp
add
add
loop
cmp
into
push
in
insb
cmp
in
add
ret
shrb
shlb
fs
je
push
push
jnp
cmc
decl
inc
insb
mov
test
outsl
xor
popa
xor
outsb
insl
add
add
imul
gs
inc
imul
bound
pop
add
inc
jb
push
add
add
popa
data16
jno
gs
sbb
imul
inc
push
je
push
jae
add
mov
jo,pt
mov
insb
add
movb
outsl
sbb
out
imul
ljmp
repz
sub
pusha
pop
cmp
gs
inc
in
ljmp
inc
fmull
dec
aam
aam
rep
add
xchg
repnz
loope
in
mov
in
les
push
mov
fildll
jne
pop
mov
add
lds
iret
pop
cmpsl
mov
aad
subb
ja
cmp
dec
pop
sbb
jno
shl
imul
imul
pop
add
loop
lock
in
add
jecxz
ljmp
ljmp
add
add
ljmp
mov
in
in
stos
lret
mov
ljmp
ljmp
mov
in
in
jae
xchg
jbe
js
ja
jb
xor
pop
sbb
outsl
mov
call
xchg
jmp
add
add
add
loop
jmp
call
add
add
pop
cmc
sbb
sbb
std
test
pop
sbb
mov
aad
in
les
pop
jmp
pop
lock
mov
xlat
fs
out
mov
sub
jo
cs
lcall
sub
jo
cs
add
sbb
fs
adc
jo
incl
add
push
imul
add
test
pop
jae
lods
pop
pop
add
insb
imul
insb
inc
add
inc
push
push
outsb
pop
push
insl
pop
dec
add
outsb
imul
insl
pop
add
pusha
dec
arpl
gs
jmp
imul
ds
add
dec
push
bound
inc
cmc
aas
add
jae
inc
bound
dec
pop
jb
push
popa
je
push
popa
les
fsubrl
iret
stc
jb
imul
dec
insl
ret
pop
pop
mov
inc
and
or
outsb
adc
fsubs
pusha
add
adc
ljmp
lahf
fsubrl
ss
jmp
shll
insb
add
add
add
stos
fsubrl
dec
ficomps
loop
les
add
loope
mov
inc
stos
sub
les
aas
mov
and
aas
test
add
cmp
aad
mov
mov
pop
popl
xchg
xor
pop
ret
and
fcoml
out
jecxz
push
stos
add
aam
hlt
pop
movl
add
out
clc
out
jmp
out
fmuls
aam
repz
mov
fists
out
out
jmp
scas
add
aad
aad
mov
mov
add
xchg
repz
roll
and
jp
pop
cmc
adc
les
clc
in
dec
dec
mul
cmp
rcrl
cmp
cli
int
dec
repz
dec
int3
in
fs
enter
lcall
adc
push
test
pop
cli
cmpsb
push
xchg
fildll
add
jmpw
jae
cmp
rclb
fs
movl
push
popf
xor
mov
push
inc
inc
push
jae
add
add
push
push
xchg
aaa
jae
lcall
je
dec
push
jae
push
push
mov
add
mov
fs
pop
jp
rclb
les
outsl
iret
xor
mov
insb
imul
pop
jp
nop
push
pusha
jb
push
imul
add
add
push
jp
adc
push
jb
popa
jp
test
popa
popa
pop
jae
jb
movl
mov
mov
js
repz
mov
stos
repz
mov
out
imul
jmp
incb
vpackssdw
mov
pop
lds
icebp
insb
and
insl
add
sub
loope
sub
out
testl
add
jmp
aas
in
addr16
inc
imul
inc
repz
pop
nop
shrb
js
push
rcrb
mov
add
ret
movsb
roll
jmp
add
jnp
jo
pop
jmp
in
notl
push
bound
jbe
inc
mov
jo
and
add
jmp
roll
add
daa
in
out
ljmp
add
push
div
lret
mov
add
fadd
loopne
xlat
loop
mov
add
jmp
inc
mov
in
fs
push
loope
jmp
aaa
mov
mov
pop
mov
shll
add
adc
pop
cmp
out
push
hlt
in
fs
or
jp
jmp
arpl
fidivl
outsl
ds
mov
sbb
dec
jmp
jg
push
adc
mov
or
add
pop
shlb
push
add
xor
andl
add
je
imul
cmp
pop
outsl
lcall
inc
sub
dec
sbb
xchg
sub
push
popa
mov
push
imul
add
push
popa
mov
inc
outsb
cld
push
pop
je
cmp
mov
pop
jnp
mov
pop
push
cltd
gs
add
pop
gs
sub
cmp
les
add
stos
gs
arpl
mov
add
insb
fisubrs
xchg
in
cmp
mov
js
pop
add
pushf
outsb
loop
fwait
shl
cmp
je
fimuls
cli
std
dec
gs
inc
push
rcl
pop
ret
xlat
dec
les
add
movswl
sar
std
dec
and
push
fisubrl
add
add
pop
loope
pop
push
int
pop
add
add
add
fadd
imul
neg
fadd
loopne
mov
push
push
add
fnstcw
add
add
out
mov
test
cmpl
xrelease
cwtl
out
jne
xor
add
pop
lds
sbb
test
faddl
add
add
fdivl
or
xor
add
push
cmp
pop
fidivrs
out
sub
std
aam
out
fists
mov
add
lahf
jmp
lods
pop
fstpl
jo
fs
je
cmc
pop
mov
mov
insb
jecxz
lods
das
fstpl
xor
fs
adc
cmc
imul
leave
bound
repnz
jmp
aam
pushf
stc
in
jg
aam
dec
clc
mov
jmp
and
pop
pop
jmp
push
cmc
jno
mov
and
movsl
mov
cmc
adc
mov
adc
mov
inc
push
popf
add
add
push
push
jl
push
push
cmp
inc
push
adc
push
insb
jns
mov
add
xor
jno
pop
insb
inc
gs
cmp
pop
push
sub
aaa
pop
insl
cmp
pop
dec
xor
push
push
dec
dec
jae
jae
cmc
dec
or
subb
jne
inc
add
adc
adc
popa
add
xor
gs
xchg
bound
add
ja
pop
add
les
jecxz
and
push
jmp
add
add
pop
out
jecxz
in
in
cmp
pop
les
icebp
imul
lock
inc
loop
inc
sub
cmp
mov
mov
pop
test
jnp
jno
mov
pop
cwtl
addb
les
xlat
inc
imul
iret
inc
push
leave
loopne
imul
add
sbb
dec
and
adc
sbb
adc
daa
fstl
fistps
fbstp
sbb
adc
out
lock
jmp
ljmp
mov
loop
fadd
fimuls
add
scas
shll
loope
aad
call
test
jo
jbe
jbe
js
fs
aad
jbe
gs
add
add
add
add
es
pop
rcll
push
outsb
add
rolb
cmp
in
jnp,pn
cmp
or
pop
and
insb
jmp
pop
cmc
inc
stos
imul
stos
inc
or
add
ror
les
pop
stos
jo
jno
arpl
pop
aad
push
sbb
jno
push
add
or
mov
add
add
out
andb
cmc
xor
mov
insl
cmpsb
in
pop
mov
dec
cmc
in
rorb
dec
in
loopne
es
pop
dec
in
dec
cmc
add
add
adc
gs
add
gs
sub
inc
add
add
popa
mov
or
add
pop
imul
push
cmc
jmp
ds
jne
add
add
cmc
push
add
or
pop
jb
aaa
jae
push
or
dec
popa
imul
or
mov
je
pop
call
inc
and
push
mov
and
scas
xor
les
lods
pop
addr16
data16
aas
add
or
arpl
leave
add
add
pusha
and
lret
push
and
icebp
decl
push
ficomps
dec
out
ljmp
inc
or
inc
sarb
iret
arpl
sub
pop
loopne
ljmp
mov
lods
pop
lcall
inc
jbe
fsubrl
xchg
add
popf
lods
imul
pop
nop
cmpl
ja
xor
mov
sub
test
inc
call
jg
pop
fdivs
push
pop
add
mov
lds
rorl
shr
add
add
hlt
out
rcll
out
loopne
fdivs
rolb
mov
jmp
rcl
lock
popf
fld1
add
loope
out
mov
jbe
cwtl
ljmp
lods
mov
mov
add
outsl
fldl2e
add
add
inc
jge
pop
sub
test
push
sarb
jmp
in
jmp
mov
outsl
xor
pop
frstor
dec
cmc
enter
sbb
adc
arpl
insl
add
pusha
or
push
aad
xlat
pop
jmp
xlat
insl
mov
stos
arpl
push
aam
int3
and
jmp
and
insl
stos
and
jo
push
frstor
pop
cmc
decl
add
outsb
jo
inc
gs
push
je
bound
dec
outsb
mov
pop
add
pop
jae
loope
gs
add
bound
push
jb
pop
push
imul
sub
lcall
add
ds
jo
imul
push
jae
and
jb
xor
push
or
outsl
jno
pusha
je
popa
imul
xchg
dec
xor
sub
pop
cwtl
lret
les
out
js
shll
cmpl
les
fisubrl
or
sub
add
or
jno
add
add
ret
xor
jecxz
daa
icebp
mov
dec
sbb
ljmp
std
jmp
ljmp
add
sub
jno
inc
int
jmp
inc
in
test
les
pop
lcall
shrb
add
test
aam
loopne
xlat
mov
mov
mov
ja
jecxz
bound
rorl
jbe
cmp
jne
pop
xlat
and
ss
mov
xlat
ss
fdivrs
out
add
fs
xlat
push
out
fdivr
xlat
push
fimull
rcrl
mov
add
out
out
loopne
in
clc
sarl
int3
fcmovnbe
shr
ljmp
rolb
fldcw
inc
lods
push
mov
pop
test
inc
cmc
adc
mov
pop
jnp
test
fs
jecxz
inc
pop
ffreep
outsb
dec
loop
outsl
daa
xchg
loop
jmp
stos
mov
cmp
stos
add
adc
cmp
das
mov
incl
arpl
insl
or
mov
pop
fidivl
jmp
into
push
mov
push
jmp
add
cmc
lcall
dec
outsl
push
pop
outsl
sub
sub
arpl
or
adcb
in
or
add
sub
arpl
cmc
push
add
push
arpl
add
push
pop
add
pop
jbe
or
add
add
inc
push
jno
mov
or
rclb
je
push
cmc
call
pop
shrb
rclb
outsb
jp
jae
adcl
out
push
mov
push
jmp
stos
add
dec
fbstp
or
and
or
add
imul
in
pop
gs
jae
add
les
jno
jno
add
arpl
add
add
lret
mov
stc
mov
pop
push
add
data16
out
and
out
and
dec
or
lods
dec
or
daa
pop
loopne
inc
rcrb
arpl
inc
shrb
add
mov
out
aad
in
mov
inc
iret
incl
mov
xorl
ljmp
add
add
mov
addr16
shlb
shrl
jae
cltd
lods
dec
shlb
ljmp
fnstenv
and
inc
call
es
xor
sub
push
fists
test
in
mov
mov
out
clc
adc
add
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
pop
add
add
pop
add
add
insl
add
add
pop
add
add
sub
add
add
sub
add
add
sbb
and
mov
inc
add
add
add
add
add
add
add
in
add
add
add
add
add
in
add
add
add
add
add
sub
push
inc
das
std
divb
les
xchg
mov
add
les
add
les
cmc
cmp
add
les
add
les
add
out
add
les
dec
testl
add
les
add
mov
add
les
add
les
mov
add
sub
add
sub
std
repz
add
sub
add
sub
or
jmp
les
ljmp
add
ljmp
add
ljmp
test
lret
add
add
jbe
mov
add
add
pop
dec
add
les
add
sub
mov
lret
jns
sub
es
lds
mov
inc
iret
add
lds
mov
adc
fs
add
inc
adc
data16
push
pushf
scas
sbb
adc
push
push
inc
mov
xchg
aad
inc
xor
scas
mov
flds
add
add
mov
aam
mov
jmp
mov
in
and
inc
pop
add
push
and
loope
test
add
icebp
push
pop
and
sbbl
test
addr16
bound
ljmp
pop
bswap
inc
xor
and
xor
loopne
xlat
pop
mov
mov
pop
bound
or
rcll
popa
dec
aam
pop
add
pop
in
fsubs
lods
stc
repz
hlt
subl
popl
push
std
cld
push
jne
or
add
les
int3
rol
clc
aas
pop
adc
xlat
mov
or
pop
cmp
xor
aas
sahf
cmc
sbb
pop
pop
repnz
les
and
in
pop
imul
std
push
xor
mov
jmp
aaa
fbstp
or
xchg
fcompl
sbb
xor
dec
push
lcall
fmuls
mov
mov
add
cmp
lea
add
pusha
test
adc
dec
sub
xchg
dec
push
inc
cmp
add
and
fdivrp
inc
mov
pop
les
iret
xchg
dec
or
inc
stc
jns
mov
flds
cli
leave
jl
push
push
cmp
jnp
or
pop
test
icebp
fistpl
dec
mov
cs
das
sub
mov
inc
lods
sub
and
or
xor
ret
mov
add
adc
mov
ret
push
scas
push
outsb
outsl
mov
rorb
jl
addr16
repnz
dec
out
pop
dec
fstps
dec
andb
rcll
lahf
mov
mov
cs
or
movl
add
movl
add
movl
add
movl
add
lds
jmp
movl
inc
add
add
add
lods
add
inc
add
add
add
dec
jle
add
add
add
inc
jle
add
add
pop
add
add
mov
add
add
pop
add
add
and
add
add
sub
insb
inc
add
add
add
loope
inc
add
add
les
add
les
add
les
inc
les
add
les
add
les
add
les
inc
les
add
les
add
les
add
les
inc
les
add
les
add
les
add
les
test
les
add
les
add
les
add
stc
cmpsl
inc
les
add
les
add
les
add
les
es
les
add
les
add
les
add
les
daa
inc
les
add
les
add
les
imulb
test
jmp
les
subl
add
jmp
les
mov
add
add
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
les
sub
xchg
jmp
les
repnz
add
add
movl
add
movl
add
movl
add
add
jmp
movl
add
movl
add
movl
add
movl
add
movl
add
add
add
movl
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
test
std
test
stc
test
roll
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
out
inc
out
je
out
inc
les
je
divb
push
je
les
je
les
je
les
je
les
inc
les
inc
les
add
les
xchg
or
js
les
js
les
js
sarb
les
inc
les
js
into
js
fidivrl
les
inc
les
add
les
add
les
add
les
jmp
les
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
pop
push
add
sub
push
add
sbb
push
add
sub
push
add
sbb
push
add
in
add
add
fldl
add
in
add
add
fldl
add
fldl
add
lods
add
add
popf
add
add
lods
add
add
popf
add
add
insl
add
add
pop
add
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
icebp
add
movb
lea
or
std
push
or
std
push
pop
add
push
or
push
sar
out
inc
ljmp
lret
out
ret
idivl
add
incb
in
lock
aam
push
pop
int3
lock
sbb
inc
pop
js
stos
pop
js
mov
pop
clc
out
inc
pop
clc
out
pop
pop
adc
ljmp
add
or
cmc
ljmp
add
out
shl
adc
hlt
scas
adc
repnz
adc
repz
sbb
inc
adc
repz
adc
repz
outsb
adc
xrelease
pusha
rep
adc
repz
pop
xor
mov
xor
lret
or
cmc
ret
sbb
int
jmp
sub
adc
mov
mov
jne,pn
cltd
lea
jns
sub
ret
pop
cs
sarl
cs
mov
das
cmc
mov
das
int
jmp
lods
aam
cs
aam
cs
mov
mov
das
jne
cltd
das
add
popf
xor
sub
mov
xor
cmp
in
xor
pop
add
ss
push
ss
cs
decl
stc
lcall
stc
ljmp
test
decl
ss
lods
ss
dec
ss
add
add
add
flds
push
aaa
stc
add
aaa
jns
sub
aaa
pop
cli
dec
aaa
stc
cli
pop
aaa
stc
cli
insl
aaa
les
add
movsb
mov
pop
push
les
jp
in
xchg
push
hlt
xchg
sbb
add
xor
adc
cmp
and
jb
xor
fiaddl
push
in
cmp
fcoml
je
add
add
lcall
int3
jp
movsb
mov
fimull
les
or
pushf
adc
hlt
pushf
sbb
add
xor
adc
cmp
and
jb
xor
pop
or
or
inc
std
daa
out
dec
std
pop
out
data16
inc
out
outsb
std
aaa
out
xchg
daa
out
outsb
std
aaa
out
cmpsb
std
xchg
mov
xchg
out
xchg
addr16
mov
push
out
out
out
out
std
mov
std
out
scas
std
imul
incb
out
std
cmpsl
out
into
std
xchg
out
data16
outsb
aaa
out
xchg
add
mov
sub
les
push
hlt
out
hlt
push
hlt
fcomip
fdivp
mov
test
out
hlt
mov
push
add
mov
xor
lahf
xor
scas
xor
jg
insl
nop
xor
jo
xor
jo
xor
push
das
xor
pop
ljmp
in
push
wrmsr
aad
fildll
mov
cmp
das
aad
lahf
das
fstl
scas
das
sbb
insl
adc
xor
outsb
xor
icebp
dec
xor
shrl
xor
xor
rorb
xor
cltd
xor
xor
cmp
imul
pop
xor
xor
stc
xor
sub
mov
sbb
cltd
xor
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
sub
pop
xor
xor
stc
xor
test
sub
test
add
mov
xor
sub
jmp
xor
and
or
push
in
sub
push
cmp
in
dec
icebp
jp
pop
in
imul
in
jnp
mov
jmp
mov
stos
jmp
mov
jp
fistpl
mov
sti
cltd
and
or
push
sti
sub
push
cmp
add
add
loop
dec
repnz
negl
push
sti
imul
sti
jnp
mov
cli
fwait
mov
stos
cli
mov
mov
cli
fistpl
out
push
stc
iret
out
fdivrp
mov
lock
clc
out
lock
out
lock
clc
push
xchg
push
dec
imull
icebp
push
testl
lock
mov
das
lock
das
lock
testl
add
add
xchg
jg
mov
outsl
lock
testl
out
fucomip
into
sti
out
in
mov
out
in
push
cld
jg
push
cld
jg
into
sti
scas
in
sti
in
pop
cld
aas
in
data16
pop
in
mov
das
in
jbe
das
in
add
loope
cmp
int
cmp
int
cmp
mov
repz
movsl
lods
ret
aaa
popf
lods
shll
test
add
add
mov
lea
cmp
jge
cmp
insl
push
cmp
pop
and
popf
pop
xor
in
add
std
dec
adc
lds
jecxz
mov
das
ret
cmp
pop
mov
cmp
cmpl
push
xchg
cmp
jns
mov
test
sub
cmp
add
add
add
adc
and
xor
es
cmp
es
cmp
es
cmp
add
jle
or
mov
add
scas
cmp
add
into
cmp
add
out
cmp
daa
add
or
and
jmp
es
cmp
stc
es
test
test
xchg
roll
mov
loopne
ret
test
shl
cltd
or
repz
and
add
dec
mull
cli
divl
repnz
inc
ljmp
arpl
ret
shrb
notb
mov
push
ret
stos
xor
mov
xor
xchg
sub
add
add
add
dec
mulb
sti
divb
repz
jecxz
mull
add
pop
cld
inc
in
cld
push
in
cld
daa
in
cld
aaa
in
cld
pop
in
cld
mul
ds
out
push
cld
xlat
in
add
ja
les
repz
aad
repz
mov
xlat
aad
repz
ss
not
ds
daa
push
hlt
not
pop
hlt
inc
aad
hlt
push
aad
hlt
daa
aad
hlt
pop
aad
hlt
xchg
mov
ja
jle
addr16
hlt
aaa
aad
hlt
hlt
xlat
mov
mov
adc
xor
adc
xor
xchg
pop
stc
ja
test
xor
push
xor
fnstenv
xor
push
sub
xor
mov
sub
cmc
mov
sub
aad
idivl
or
mov
cmp
js
cmp
cmpsl
cmp
pop
pop
cmp
dec
dec
cmp
dec
aaa
cmp
aas
daa
cmp
lods
push
jmp
cmp
and
cmp
and
cmp
and
cmp
add
add
and
cmp
and
cmp
and
cmp
and
cmp
dec
cmp
push
cmp
pop
cmp
and
stc
and
cmp
and
cmp
and
cmp
std
cmp
and
cmp
and
cmp
test
jecxz
jl
jmp
test
repz
add
out
sub
das
loopne
in
aaa
fdivs
aas
shlb
inc
enter
shlb
mov
pushf
in
stos
test
in
in
mov
xchg
fsubr
outsl
mov
add
push
sti
mov
pop
repz
arpl
sahf
stc
cs
add
cli
std
inc
ret
xlat
ret
mov
in
xchg
ret
mov
in
lahf
xchg
xchg
out
cmpsl
xchg
shl
lahf
cwtl
add
inc
out
jae
push
out
jae
xchg
out
aaa
out
das
fidivrl
sub
jle
ret
xlat
icebp
ret
xlat
div
mov
div
jecxz
push
repnz
xlat
cmpsb
icebp
xchg
xlat
icebp
arpl
icebp
jae
mov
push
xlat
cmpsb
icebp
push
xlat
data16
inc
fsubs
push
xlat
jbe
push
xlat
data16
push
xlat
inc
icebp
arpl
or
jg
add
cmpsl
xlat
into
sti
dec
cld
and
xchg
xor
scas
cld
outsl
cld
into
fiadds
std
cld
ficoms
jecxz
add
cmp
dec
in
pop
ds
cmp
fidivrs
jne
cmp
outsb
cmp
sbb
ss
jbe
inc
std
xor
ja
add
movl
cs
aam
cs
mov
das
cld
test
or
test
mov
xor
popf
xor
jnp
jle
je
gs
add
loopne
xchg
add
push
push
bound
push
sbb
aas
lock
cmc
lcall
add
add
adc
xor
push
push
jno
adc
lahf
aaa
xchg
das
in
aaa
imul
fidivrs
or
push
cmp
pop
inc
cmp
fnsave
add
mov
adc
int
or
jno
inc
xor
xor
mov
xor
adc
icebp
ja
shl
mov
icebp
mov
nop
popa
repnz
xchg
shl
mov
add
add
jnp
mov
in
fdivr
push
out
xchg
cli
sub
psubusb
cli
sub
in
in
fs
fs
mov
mov
xor
out
jmp
sub
add
xor
add
xor
in
test
divb
repnz
xlat
mov
repz
xlat
sub
pop
rolb
out
xor
mov
out
fs
out
push
shr
out
push
sarl
out
psrlq
in
roll
out
jmp
vpmaddwd
shr
not
sub
jmp
shll
out
insb
aam
in
aam
lods
in
rcl
cmp
fldl
cld
mov
frstor
and
sub
cli
mov
fsubrp
stc
lcall
stc
loopne,pn
stc
imul
stc
mov
loopne
notl
pop
fists
out
xor
aas
je
xor
addr16
arpl
ja
inc
mov
push
sub
ss
xor
ss
xor
ss
popa
aaa
cmp
or
xlat
adc
jl
mov
dec
xor
testb
sahf
test
mov
xlat
push
xor
sub
add
xor
mov
xor
mov
mov
add
outsb
xor
adc
xor
adc
xor
adc
xor
rdmsr
rclb
pop
xor
cmp
mov
adc
fists
insl
xor
adc
mov
mov
jle
cmpsb
xor
add
add
adc
xor
adc
xor
cli
xor
adc
xor
adc
xor
adc
adc
adc
xor
xor
adc
xor
adc
xor
adc
xor
cs
in
lock
sti
or
shlb
insb
fisubl
cli
mov
mov
jmp
pop
scas
scas
jecxz
lahf
ss
cwtl
insl
lock
add
les
add
mov
jmp
cmp
sti
icebp
xchg
jecxz
repnz
sub
add
cmp
add
jmp
mov
jmp
mov
jecxz
scas
sub
add
add
add
pop
lock
cld
out
sbb
dec
in
lods
nop
and
pop
test
shlb
dec
rcrl
stc
adc
push
in
test
std
jmp
add
add
fsubp
ljmp
cmc
ljmp
add
ljmp
cmc
ljmp
adc
jmp
fidivs
jmp
fdivp
ljmp
cmc
ljmp
push
ljmp
jne
and
test
sbb
jne
adc
jne
sbb
jne
add
add
add
add
dec
cmp
xor
cmp
and
cmp
lods
adc
cmp
popf
add
cmp
jno
aaa
cld
insl
std
aaa
cld
pop
in
or
in
aaa
test
cmp
pop
cmp
cmp
xor
cmp
sub
cmp
cmp
cmp
out
or
hlt
out
hlt
cmp
fdivrp
cmp
fsubp
cmp
in
cmp
mov
xor
fsubrs
cmp
shrb
inc
cmp
dec
cmp
push
cmp
pop
cmp
bound
xchg
daa
lret
lods
adc
add
add
add
adc
xor
push
lea
push
stos
xor
pop
xor
shufps
aam
or
push
pushl
push
push
xor
or
pop
xor
rcrl
xor
mov
lea
jg
mov
aaa
imul
aaa
repnz
cmp
sub
cmp
aad
pop
sahf
xor
mov
and
and
mov
mov
clc
and
in
jmp
sub
add
nop
add
les
cmp
popa
icebp
cld
mov
out
push
mov
lock
add
add
xchg
lock
mov
xacquire
sub
out
pop
sti
out
rep
out
mov
lcall
int3
aas
jmp
sbb
add
pop
ljmp
enter
ret
fsubs
out
pop
fdivs
out
stc
rcrl
out
jbe
ss
mov
lods
in
imul
adc
cwtl
aad
rol
add
out
repz
aad
hlt
addr16
nop
repz
into
repz
mov
outsb
xlat
mov
loop
lock
mov
dec
icebp
pop
fsub
lock
fstps
idivl
sbb
insl
flds
or
sahf
sub
das
sti
cmp
arpl
or
or
add
add
loopne
lahf
shlb
das
jp
inc
das
inc
mov
aam
scas
mov
popf
sub
insb
sub
xchg
ds
cltd
sbb
sub
js
sub
jo
sub
ja
sub
ret
cmp
push
stos
cmp
ja
jl
inc
cmp
and
cmp
xor
add
sub
add
and
cmp
cmp
and
push
and
cmp
inc
cmp
das
sbb
sarb
mov
pop
cmc
ljmp
pop
add
test
aam
xchg
sbb
xor
xor
sbb
xor
sbb
push
sbb
xor
add
add
cmc
xor
adc
adc
dec
ss
adc
add
les
add
imul
dec
iret
clc
in
mov
mov
ljmp
enter
lods
out
rcrl
add
inc
add
les
mov
inc
out
pusha
cmc
mov
icebp
ja
cmpsb
out
xchg
shl
out
lret
fisttpl
lock
add
add
and
and
jmp
jne
lahf
in
pushf
jle
ljmp
out
mov
mov
clc
adc
imul
sbb
out
sar
call
loop
mov
jmp
pop
rorb
sub
lcall
adc
xchg
lds
xchg
leave
fsub
out
lods
fstpt
repnz
fsubrp
add
mov
sbb
cmp
jb
xor
stos
int3
dec
in
ljmp
ljmp
inc
add
add
adc
aam
lock
ficoml
fiaddl
jno
pop
cs
in
sbbl
sub
adc
push
sub
adc
fnstenv
add
imul
ljmp
xor
push
xor
mov
sub
push
fcoml
xor
jns
add
xor
aas
xor
xchg
adc
das
mov
jno
xor
js
xor
ja
xor
push
xchg
lea
xor
push
lcall
jl
std
xor
push
sbb
jge
fs
jl
enter
adc
ss
pop
fdivs
dec
pop
adc
shll
jbe
xchg
and
cmp
test
cmp
sbb
jle
dec
sbb
cmp
sbb
cmp
sbb
in
cmp
push
adc
jp
stc
ds
sub
ljmp
add
cmc
ljmp
add
les
cmc
in
inc
xchg
in
arpl
xlat
in
jge
lods
lock
hlt
xor
hlt
popa
icebp
lret
aam
icebp
out
aam
out
adc
dec
out
or
and
data16
repnz
mov
repz
lock
inc
in
nop
inc
repnz
cltd
lahf
icebp
cmpsl
xchg
shl
cli
dec
out
repnz
popf
cli
adc
xor
fisttpl
pop
roll
jecxz
shrl
jecxz
mov
jecxz
mov
add
cmp
cld
int
in
mov
hlt
ljmp
pop
jmp
jb
aas
shr
in
iret
fsub
or
cltd
out
into
push
in
push
jmp
lds
lods
repz
aad
repz
add
add
ret
repz
dec
repz
call
icebp
in
mov
repnz
lock
shl
iret
fmuls
icebp
cmp
aad
cmpsl
roll
test
scas
sub
mov
push
sub
popa
aas
sub
pop
and
xor
sub
sub
sub
stc
das
jmp
cmp
and
cmp
out
inc
cmp
clc
cmp
fistps
cmp
ficomps
cmp
stc
aaa
or
lods
aaa
popf
mov
pop
popf
jnp
push
lods
dec
cmp
lods
cmp
pop
popf
adc
ficomps
cmp
pop
sbb
lea
pop
push
mov
sbb
cmp
sub
cmp
add
add
and
cmp
nop
mov
cmp
dec
es
cmp
adc
sub
add
jno
and
jmp
je
pop
aas
movsl
sub
or
xchg
inc
sub
ljmp
pop
add
ret
xor
xor
xorb
xor
xor
xor
mov
mov
iret
data16
lret
mov
test
js
xchg
lret
mov
dec
fcmovnu
xchg
cs
cli
neg
sub
loope
pop
sti
rcr
push
in
fnstcw
fst
push
fnstsw
aad
int
rcrl
adc
out
or
jecxz
adc
les
add
dec
mov
hlt
adc
or
add
add
pop
int3
pop
mull
int
fadds
aam
rcl
movsl
fsqrt
rcll
fnstcw
fdivrs
dec
fcmovb
int
fcmovu
int3
mov
fisubrs
push
push
into
fstpl
enter
lret
pop
loop
lret
or
add
add
pop
aam
aad
aam
xlat
add
push
xlat
pusha
aad
jg
mov
inc
shlb
xor
je
sub
adc
jl
sub
roll
add
shrl
cmpsb
jge
sub
jle
sub
insb
shrl
repnz
sahf
lods
cmp
xor
add
push
cmp
sbb
cmp
cmp
cmp
test
mov
pop
cmp
sbb
xor
xor
add
add
ss
add
std
cli
repnz
repnz
fucomi
xlat
ss
and
mov
sub
xor
in
xor
add
add
xor
sbb
stc
xor
bound
push
xor
in
or
pop
xor
xor
xor
mov
add
add
xor
xor
xor
xor
xor
xor
cmc
xor
xor
xor
xor
xor
xor
xor
sub
xor
das
xor
sub
inc
xor
sub
pop
xor
sub
insl
xor
das
xorl
xorl
xchg
fstps
lock
fisubrl
lock
fsubr
rol
fdivr
rolb
mov
fsincos
mov
sub
pop
cltd
cmp
and
in
fisubrl
stc
loope
dec
icebp
iret
fimull
in
push
icebp
mov
fld
rcrl
iret
and
mov
sbb
or
sub
inc
sahf
lcall
pusha
leave
pop
loope
leave
add
fiadds
jae
jns
inc
fisubrs
add
jns
pop
aad
aam
aam
rorl
shlb
rolb
rcr
rcll
fcomps
rorb
fcomps
push
stos
iret
push
fwait
iret
push
sti
iret
push
sti
iret
es
mov
es
jnp
push
jnp
push
jnp
das
aad
lret
imul
stc
leave
in
push
ljmp
add
add
hlt
stos
xor
cmp
call
repnz
cmp
sahf
sbb
cmp
xor
cmp
jle
cmp
outsb
push
cmp
sahf
cmp
mov
jge
jge
insl
jle
cmp
lea
insl
outsb
xchg
cmp
add
add
popf
cmp
movsl
cmp
push
mov
jge
mov
cmp
out
aam
mov
push
in
add
fdivrl
cmp
in
popa
fucomip
cmp
hlt
cmp
fdivrp
cmp
fiadds
rcr
cmp
fistps
mov
ficoms
cmp
in
cmp
in
cmp
add
add
out
cmp
jecxz
cmp
mov
sub
test
inc
cmp
add
pop
cmp
cltd
fidivs
test
mov
add
fnstsw
cmc
frstor
dec
mov
add
jg
imul
lahf
lcall
mov
add
hlt
xlat
push
sti
clc
xlat
adc
add
add
or
fldcw
mov
test
xchg
ret
dec
fstps
mov
fldcw
mov
push
fabs
xchg
loopne
stc
mov
rolb
rolb
add
in
add
hlt
rcrl
movsb
rcr
aam
xchg
sbb
ljmp
xor
aad
xor
aam
add
add
xor
aad
aaa
and
aad
aaa
push
iret
cmp
rcll
cmp
ror
cmp
rolb
movsb
shl
cmp
rol
cmp
inc
fldt
cmp
cwtl
cmp
fmul
aas
mov
faddp
ds
fst
ds
insl
fnstsw
test
fisttpll
ds
and
add
repz
cli
sti
cmp
sub
push
ss
sbb
or
xor
push
or
xor
xchg
cld
in
sub
or
out
lcall
xchg
fwait
mov
ss
jge
xor
jge
xor
outsb
ja
cmpsl
insb
mov
cmc
jmp
movl
xor
add
add
xor
js
xor
ja
xor
movsb
xor
push
scas
das
pop
sbb
xor
lahf
aad
aaa
call
jecxz
fcoml
mul
sbb
cmp
cmp
fsubrs
cmp
sbb
mov
pop
fisubs
aas
aas
faddp
aas
sti
fstp
aas
lods
movsb
add
xor
adc
lcall
xor
add
add
aad
xor
shll
cmc
sarl
std
fisubrl
xor
fnstcw
fldlg2
xor
aad
xor
sbb
dec
clc
in
lock
roll
shll
or
rol
cmp
inc
les
and
mov
add
push
xchg
rol
sub
xchg
into
ret
out
sub
adc
in
dec
cli
in
ljmp
fnsave
xlat
outsl
iret
sbb
rcr
jbe
jge
shll
xchg
lret
mov
in
nop
add
jl
add
mov
mov
sahf
xor
aam
xor
mov
rcll
xor
iret
sarb
dec
rclb
call
rolb
add
add
cmp
into
ret
fistl
ds
fmul
cmp
flds
cmp
fldenv
int
das
cmp
cmpl
ds
aas
lcall
ds
sub
jmp
movb
rcll
cmp
insl
xor
add
je
xor
adc
add
add
inc
cs
adc
cs
adc
sub
or
das
push
lods
cs
sti
test
arpl
sub
or
sub
push
stc
push
sub
cmp
mov
movsl
stc
lret
sub
mov
in
push
nop
or
jecxz
add
loopne
daa
cmp
jg
cmp
outsb
imul
push
sahf
fbstp
sti
pushf
xchg
cmp
fwait
mov
sbb
std
hlt
add
add
xor
rcll
xor
fadds
xor
push
xor
xlat
inc
xor
xlat
pop
xor
xlat
jo
scas
mov
stos
test
cwtl
shlb
xlat
fnstenv
push
xlat
repnz
inc
xor
xchg
xor
aad
xor
int
ss
lret
mov
xor
xchg
or
clc
loopne
cmp
add
add
fistps
cmp
shr
aas
popf
push
add
xchg
fdivrs
xor
fmuls
les
sar
xchg
iret
dec
xchg
or
adc
mov
jne
xchg
lret
sbb
test
fsubrs
shll
xchg
fldt
mov
in
lds
mov
jp
xchg
scas
pop
add
add
dec
shlb
mov
ror
add
inc
cli
shlb
inc
shl
loop
sar
iret
or
fcmove
and
cld
iret
dec
ret
add
xchg
rcrb
add
out
shll
insb
rcll
ss
cmp
cmp
xlat
loopne
adc
mov
sbb
mov
ss
pop
aaa
fwait
sbb
xchg
loope
mov
stc
ss
mov
xor
xlat
xorl
arpl
inc
xor
bound
xlat
jne
mov
xlat
push
xor
js
cmp
lret
xor
xor
scas
insl
pop
sub
popf
in
mov
mov
cmp
sub
cmp
jg
cmp
js
cmp
adc
adc
xor
cmp
jns
insl
adc
aaa
wbinvd
dec
cmp
scas
cmp
adc
xchg
xor
sbb
adc
cwtl
add
ss
sti
out
jns
adc
xchg
inc
xor
xchg
imul
jbe
xor
daa
aam
ds
mov
add
xor
xor
xchg
aas
out
leave
aas
lods
aas
aas
mov
inc
add
cltd
add
add
and
add
rcll
test
push
mov
xor
aad
xor
xor
aad
xor
aad
xor
lock
shll
xor
aam
xor
aam
xor
sub
rcl
sbb
mov
add
add
cmp
iret
pop
xor
icebp
fsts
ficoml
fcoml
movl
mov
sarb
aad
add
sbb
iret
les
mov
dec
mov
lds
push
shll
jmp
cmp
pop
fldenv
rcl
in
xor
imul
inc
mov
in
xor
les
inc
test
rcrl
cwtl
int
xor
mov
xlat
fsubrs
das
je
pop
xor
sarl
fxch
movsl
cmp
lods
leave
push
cmp
lret
ss
imul
iret
stos
cmp
iret
add
xchg
iret
icebp
cmp
outsb
cmp
iret
lret
rolb
jb
dec
cmp
rclb
cmp
ror
aaa
adc
fnstenv
push
into
mov
cmp
add
cmp
aaa
mov
leave
into
mov
ss
dec
add
xor
mov
xor
out
add
rolb
add
xor
ja
xor
js
pop
xchg
scas
xor
in
push
xchg
loope
adc
xor
jo
xor
js
xor
sbb
xchg
jp
jae
mov
fists
push
xor
divb
xor
imulb
inc
notb
das
push
ljmp
adc
xor
adc
push
xor
test
stos
xor
add
cmp
xor
xor
xor
pop
ficompl
jnp
data16
dec
fimull
aaa
mov
aaa
cmpsl
aaa
popa
rcll
jle
cmp
sub
push
lret
cmp
rcr
aaa
rcll
shrb
xchg
shlb
xchg
mov
mov
cmp
mov
insb
cmp
mov
les
cwtl
fadd
inc
nop
sbb
fwait
mov
ret
in
ret
xor
mov
dec
jmp
and
ret
fsts
hlt
rcrl
mov
sbb
in
ficoms
add
inc
add
xchg
iret
rolb
xchg
rcl
xchg
out
iret
inc
xchg
cwtl
iret
jg
arpl
popf
cmc
xor
fdiv
out
add
dec
sub
inc
int3
mov
jg
jmp
lret
lret
adc
push
int
mov
int3
stc
mov
les
add
mov
rcrb
rorl
sub
arpl
push
xchg
xor
jne
push
xor
into
aam
ror
or
mov
adc
pop
enter
enter
enter
enter
enter
leave
jns
fcmovne
xchg
xor
leave
cmpsb
xor
xor
stos
xor
xor
leave
aaa
xor
leave
addr16
leave
in
xor
mov
decb
xor
add
sub
sar
cmp
jmp
movl
xor
jns
xor
jo
das
and
das
icebp
jb
xor
lcall
roll
jo,pn
scas
and
adc
aam
cs
adc
xchg
push
adc
push
sub
jge
in
loope
adc
mov
cmp
mov
js
mov
mov
and
add
hlt
rorb
rclb
cmp
or
add
mov
lahf
cmp
mov
mov
loope
sarb
mov
adc
mov
jno
in
jle
inc
leave
xchg
cmp
enter
mov
loop
aad
repz
inc
aas
push
mov
insb
aas
cmpl
mov
mov
decl
fcomip
add
mov
rorb
mov
rclb
mov
iret
test
fwait
iret
ljmp
iret
scas
imull
out
clc
mov
rol
fidivrl
shrl
addr16
fildl
es
jmp
cs
fwait
enter
enter
enter
enter
enter
leave
xor
out
lret
mov
pop
out
add
outsb
lret
mov
lret
loope
sbb
nop
sub
lret
push
sub
lret
xor
lret
or
lahf
xor
enter
enter
enter
enter
leave
push
xor
leave
xchg
xor
cltd
xor
lds
das
movsb
lds
xor
xchg
xor
movb
jmp
movb
add
add
xchg
aam
cmp
into
insb
cmp
iret
es
add
add
sub
incl
cmp
sub
cmp
std
mov
cmpsl
std
out
icebp
push
xor
das
or
ss
cld
mov
xor
or
xor
testl
add
cltd
xor
xchg
pushf
xor
je
cmp
jle
cmp
into
xor
lds
xor
subl
pop
addl
xor
add
ljmp
ret
push
add
add
flds
aam
ds
fldenv
sbb
xor
fld
xor
fdivs
add
out
xor
fcos
xor
rolb
xor
add
add
rcrb
xor
jnp
mov
rcrb
or
mov
dec
ret
insl
mov
add
fst
cwtl
xor
rol
xor
fadds
les
shll
cmc
std
shr
cmc
hlt
iret
sbb
lcall
xlat
mov
cmpsb
rclb
cmp
xor
subb
movsl
popf
lcall
nop
sarb
add
mov
jg
cmp
add
pop
add
clc
shlb
pop
ror
mov
rcll
mov
rcrb
mov
add
fcmove
add
inc
lret
movsl
cs
cs
leave
aad
rol
sub
fwait
sub
inc
mov
sub
inc
inc
sub
inc
or
mov
lret
sub
inc
push
sub
xor
push
inc
cltd
sub
inc
and
pop
inc
sub
xchg
addl
jmp
movl
ja
cmp
add
add
xor
divl
mov
addr16
mov
xor
stc
pop
xor
subl
cli
pushf
das
adc
lock
ficoml
pop
roll
xor
ucomiss
mov
nop
sub
scas
mov
sub
push
pushf
scas
cs
mov
cs
std
stc
sub
pushl
out
jbe
aaa
out
lcall
fimull
xor
int3
xor
loop
or
add
cmp
sub
jne
add
cmp
lret
cmp
xor
sub
jle
cmp
popa
inc
push
ds
inc
jnp
addb
inc
sarb
inc
ds
push
aas
in
test
mov
outsb
xor
add
add
out
aad
inc
xor
xor
adc
in
xor
xor
xor
xor
xor
xor
mov
cs
xor
mov
add
dec
mov
cmp
in
fidivrs
mov
ss
mov
xor
mov
inc
xabort
inc
in
lock
sbb
stos
xor
add
add
and
add
std
inc
imul
mov
jmp
push
mov
ret
pushf
test
cwtl
fisubs
add
icebp
xor
stc
xchg
sub
icebp
cmp
out
stos
xor
call
faddl
fildl
add
add
movsl
cmp
gs
sub
inc
push
sub
ret
movb
add
add
iret
xor
lahf
xor
xor
jg
lods
ss
xor
mov
dec
xor
dec
outsl
xor
dec
ss
xor
sub
dec
xor
xor
xor
les
xor
add
cs
imul
add
sbb
mov
mov
ja
popl
aaa
cmpsb
add
aaa
pop
add
jmp
cltd
xchg
push
push
mov
xor
cli
lock
repnz
xor
ljmp
int
add
aaa
jp
push
aaa
sub
jne
imul
add
add
xor
cltd
adc
les
add
add
xor
aaa
add
sub
mov
sub
cmp
sub
cmp
sub
cmp
xor
aaa
es
cmp
es
add
mov
jmp
enter
repnz
or
dec
inc
dec
cmp
sub
add
add
xor
nop
xor
xor
sub
shll
das
dec
fldt
daa
cmp
sub
cmp
adc
fidivl
clc
xor
icebp
sub
cld
mov
movsl
sub
clc
out
xor
mov
xor
mov
aam
insb
cwtl
xchg
sub
nop
cmp
nop
dec
cmp
lock
cmp
lock
lock
sub
rol
sub
or
int3
mov
or
inc
mov
mov
mov
scas
cmp
mov
mov
test
fwait
cmp
push
fstpt
rcrb
lret
cmp
push
mov
cmp
pop
mov
cmp
push
fstpt
lock
imul
add
add
pop
cmp
mov
sub
jnp
adc
sub
mov
cmp
jo
or
sub
sbb
les
cmp
les
xlat
xor
aaa
aaa
jo
inc
aaa
js
pop
aaa
push
sbb
cmp
scas
aaa
adc
aaa
fcoms
add
stos
stc
sub
xor
hlt
pop
cs
jns
cmp
hlt
mov
sub
mov
aam
das
int
pop
das
gs
xorl
cltd
sub
leave
cmp
mov
cs
jmp
cs
fldcw
jmp
aad
sub
stc
sub
mov
sub
mov
sub
mov
sub
lds
cs
add
lods
pop
ss
pop
add
fldl
add
fldl
add
lods
push
add
lods
push
add
popf
push
add
popf
push
add
lods
push
add
lods
push
add
popf
push
add
popf
push
add
insl
push
add
insl
push
add
pop
push
add
pop
push
add
insl
push
add
insl
push
add
pop
push
add
pop
push
add
sub
push
add
sbb
push
add
sub
add
add
push
add
sbb
add
add
in
add
in
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
add
pop
add
add
add
insl
add
add
add
pop
add
add
add
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
push
add
in
push
add
fldl
add
fldl
add
in
push
add
in
push
add
fldl
add
fldl
add
lods
push
add
lods
push
add
popf
push
add
popf
push
add
lods
push
add
lods
push
add
popf
push
add
popf
push
add
insl
push
add
insl
push
add
pop
push
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
popf
add
add
add
add
add
pop
add
add
add
insl
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
fiadds
add
fiadds
add
add
jmp
les
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
sub
pop
add
sbb
pop
add
sub
pop
add
sbb
pop
add
in
push
add
in
push
add
fldl
add
fldl
add
in
push
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
jmp
les
jmp
les
jmp
les
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
fldl
add
fldl
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
add
pop
add
add
add
insl
add
add
add
pop
add
add
add
add
add
add
add
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
sub
or
add
or
add
or
add
pop
add
in
pop
add
fldl
add
fldl
add
in
pop
add
in
pop
add
fldl
add
fldl
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
lods
pop
add
lods
pop
add
popf
pop
add
popf
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
pop
pop
add
insl
pop
add
insl
pop
add
pop
pop
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
pop
add
add
add
insl
add
add
add
pop
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
lods
or
add
or
add
or
add
add
pop
or
add
add
insl
or
add
add
pop
or
add
add
sub
or
add
or
add
or
add
or
add
pop
add
in
pop
add
fldl
add
fldl
add
in
pop
add
in
pop
add
fldl
add
fldl
add
lods
pop
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
add
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
fldl
add
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
add
pop
add
add
add
insl
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
les
add
les
add
les
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
add
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
sub
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
pop
or
add
add
insl
or
add
add
pop
or
add
add
sub
or
add
scas
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
lods
add
les
add
add
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
jmp
les
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
movl
add
pop
add
add
sub
add
add
sub
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
add
pop
add
add
scas
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
lods
repnz
push
call
cltd
ja
nop
adc
cmpsb
shrl
mov
test
push
sub
ret
shll
icebp
adc
mov
loopne
add
add
pop
push
or
iret
or
data16
adc
inc
sub
mov
pop
scas
fistpll
or
add
add
cmpsb
mov
sbb
sbb
and
in
aas
xor
or
cmp
push
cmp
inc
cli
jg
pop
out
jmp
ljmp
cmp
pop
lret
and
xchg
stc
inc
mov
pop
cmpsb
int
mov
push
pusha
mov
xchg
aam
loope
xor
jmp
lods
mov
add
ret
mov
push
mov
jecxz
loop
sub
sub
mov
cltd
inc
or
loopne
js
int
push
and
rclb
xchg
fucom
inc
dec
push
pop
negb
mov
xor
rolb
jne
sbb
add
xor
sbb
add
and
adc
push
ss
cmc
add
xor
or
faddl
sub
mov
pop
push
shrb
inc
js
cmp
adc
insb
or
sbb
xorb
cs
mov
xchg
fsubs
ror
sub
mov
sub
imul
mov
add
add
and
addb
out
ds
fstps
xor
xchg
in
cs
les
popa
outsb
arpl
push
jb
push
adc
insb
xor
mov
add
xor
gs
shl
iret
jb
add
dec
add
dec
add
test
je
shll
mov
and
xchg
and
add
and
imul
scas
jmp
push
movsl
cli
jo
xor
rol
clc
rol
nop
ret
adc
push
aas
dec
or
dec
test
in
cli
pop
xor
and
xor
push
mov
adc
cld
aas
xor
mov
or
jmp
push
push
mov
push
ror
add
add
ljmp
dec
inc
loop
jno
add
jl
in
dec
fimuls
int3
jl
clc
aas
pop
cli
mov
jl
call
jne
add
jl
lock
dec
cli
mov
add
jl
cld
orl
les
dec
hlt
inc
movl
inc
jl
inc
hlt
mov
add
add
jle
lock
pop
add
jl
fsubr
add
movl
call
inc
leave
add
mov
add
in
aas
pop
out
xorl
mov
test
add
inc
bnd
test
loope
ror
rol
clc
rol
nop
ret
adc
andl
add
stos
mov
mov
sahf
mov
push
ljmp
or
push
aas
inc
ljmp
push
mov
push
sbb
push
inc
sbb
mov
add
ds
les
mov
test
orl
ds
dec
add
movl
push
jecxz
into
mov
add
std
mov
jne
add
add
int3
js
rol
icebp
jl
mov
lret
xor
or
dec
cmp
rol
nop
rol
icebp
jl
mov
add
stc
std
push
mov
les
int3
add
rol
adc
add
add
in
and
add
fadd
inc
add
ror
mov
les
clc
pop
popf
add
jl
clc
je
mov
shrl
ds
dec
inc
adc
pop
push
push
aas
dec
or
pop
testb
jp
push
mov
add
add
ds
inc
movb
or
inc
adc
push
mov
add
ret
ja
mov
add
dec
inc
ljmp
pop
insb
add
std
ljmp
ror
ret
clc
rol
adc
jp
mov
pusha
jp
mov
loope
inc
les
int3
add
rol
nop
rol
adc
andl
jns
jge
les
mov
add
add
and
xchg
fwait
mov
jp
or
or
pusha
add
or
lds
dec
pop
idivb
xchg
mov
testb
inc
ret
cli
enter
cltd
xrelease
jp
lock
inc
inc
mov
mov
jns
or
push
add
jp
clc
aas
or
add
add
add
orb
push
mov
jg
or
cmpb
movl
imul
ror
and
inc
mov
cmp
mov
mov
dec
call
dec
xchg
add
jle
lock
sub
add
add
dec
lock
movsl
cmpb
add
add
add
push
mov
add
push
cmc
adc
cmp
cmpsb
cmpb
xor
mov
cmpsb
mov
or
mov
mov
inc
movsb
addb
cmp
call
mov
incb
inc
aam
ds
aas
cmp
mov
std
add
dec
push
out
or
mov
mov
les
add
add
xor
mov
mov
mov
add
jg
and
xor
mov
lods
hlt
lcall
mov
push
ljmp
decb
mov
mov
add
cmp
clc
std
call
inc
notb
xchg
idiv
mov
mov
lcall
add
ds
dec
cmp
addl
mov
sarb
sbb
jg
pop
pop
mov
in
and
imul
fldenv
ds
pop
test
ds
je
xor
fldt
ds
aas
cmp
push
dec
push
push
push
dec
inc
or
push
testb
add
add
jle
mov
addb
inc
les
ss
mov
dec
ror
mov
in
pusha
stc
mov
mov
test
dec
inc
xor
aas
cmp
inc
hlt
dec
inc
out
mov
dec
or
dec
clc
dec
push
idivb
dec
lds
inc
sub
add
xor
out
call
push
sbb
jl
clc
dec
cmp
mov
or
adc
sbb
lahf
push
mov
jge
mov
scas
mov
in
ds
stc
add
rcrb
mov
lds
int3
cmpb
int3
adc
in
mov
cmp
xor
mov
add
add
rorb
clc
mov
jl
and
mov
add
jl
or
fimull
mov
push
loop
add
mov
jp
or
aas
les
push
inc
add
clc
cmc
jnp
mov
push
push
add
les
add
test
lock
add
cmp
movsl
mov
push
mov
push
mov
push
ljmp
stc
mov
add
pushf
or
lds
hlt
aas
cmp
rdpmc
push
cld
cmp
jo
dec
inc
ljmp
jl
call
xor
mov
jnp
adc
cmp
mov
jmp
mov
repz
notl
add
add
inc
mov
jnp
or
cmp
ljmp
push
ljmp
cli
mov
add
cmp
jnp
in
popf
ret
cld
sbb
push
add
add
add
cmp
push
cmpb
mov
add
add
lcall
lret
shlb
les
push
push
push
add
les
mov
jp
xor
cmpsb
dec
lock
mov
inc
les
add
les
push
mov
inc
call
add
sbb
cmc
add
aas
inc
notb
add
in
mov
add
inc
fmuls
fimull
mov
loopne,pt
cmp
mov
push
mov
mov
inc
les
shll
push
movsb
mov
add
fisttps
fadd
lea
dec
jo
dec
loopne
lcall
daa
out
inc
les
add
sti
in
mov
push
push
mov
mov
add
add
mov
sub
les
add
jno
mov
push
aas
adc
mov
add
mov
les
ljmp
adc
push
pushf
or
ljmp
and
add
les
ljmp
or
push
hlt
xor
add
add
add
loop
leave
cltd
mov
les
dec
sub
nop
push
or
dec
add
mov
pushl
mov
inc
les
mov
cmp
add
test
cld
mov
fnsave
push
adc
mov
mov
inc
rolb
rol
int3
adc
mov
inc
ror
rol
int3
icebp
mov
push
cli
cmp
add
or
insb
push
cmp
pop
xchg
mov
push
std
aas
les
mov
hlt
incl
or
int3
xor
add
sub
pushl
mov
mov
mov
and
mov
add
lret
pop
add
add
or
add
add
add
les
add
les
push
mov
push
ljmp
push
cmp
add
sbb
leave
stc
mov
les
pop
mov
add
add
xchg
or
dec
add
mov
mov
add
add
or
jne
das
add
mov
mov
les
mov
add
cmp
mov
mov
call
subl
add
or
stos
sti
loope
or
mov
leave
in
mov
les
aas
les
mov
push
scas
jg
arpl
sbb
adc
fidivl
sub
jo
hlt
incl
std
mov
aaa
ljmp
or
mov
adc
js
hlt
incl
add
dec
movsb
mov
cmp
jae
lea
loopne
lea
cmc
lods
mov
les
mov
push
sub
add
xor
cmp
push
pop
js
decl
mov
add
mov
aas
dec
testb
rorl
fists
push
mov
add
xchg
movl
cmp
addl
mov
mov
clc
mov
add
sahf
mov
cmp
mov
dec
cli
mov
ljmp
push
cmp
xor
push
add
lea
jmp
lea
add
dec
add
ror
mov
popf
mov
ror
mov
or
add
sbb
cmp
cli
add
xor
fucomip
mov
rclb
lret
cltd
stc
mov
les
mov
les
std
mov
mov
test
rorb
ret
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
add
les
repz
std
sbb
sbb
inc
imul
scas
shll
mov
cmpsl
mov
cld
mov
and
jl
jns
pop
insl
idiv
sti
lock
mov
cmpsl
lea
addb
mov
mov
aad
cmc
test
dec
cmp
ror
xchg
cmp
cmp
test
outsl
or
adc
std
adc
jg
aas
xchg
pop
cmp
pushf
inc
push
xlat
rorl
ss
std
dec
fs
sbb
nop
mov
and
icebp
xor
mov
jns
sbb
pop
jp
insb
outsl
mov
sahf
sub
in
mov
mov
add
fisubrs
jbe
test
or
jecxz
inc
mov
jb
lea
lods
ja
xchg
mov
add
faddl
je
scas
inc
xchg
jmp
imul
mov
mov
daa
flds
and
loopne
dec
icebp
aaa
and
lods
ljmp
dec
and
int
sub
es
out
loopne
loopne
enter
data16
inc
pushf
cmp
rclb
push
cvtpi2ps
xchg
push
jb
xchg
sub
jge
adc
ret
sbb
adc
mov
xor
test
jp
setg
and
outsb
outsb
mov
dec
inc
jno
lock
inc
and
pop
push
clc
cmpl
xchg
mov
mov
mov
and
adc
dec
fsubrl
dec
es
mov
repz
xor
lods
inc
daa
mov
push
add
sbb
rclb
inc
test
mov
mov
inc
push
shrb
cmp
dec
test
subl
mov
add
adc
jo
push
push
cld
repnz
stos
daa
loopne
call
hlt
jns
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
mov
movl
movl
movl
mov
mov
movl
movl
mov
mov
lea
push
push
push
push
push
call
test
jne
push
call
xor
jmp
lea
push
push
push
mov
push
push
call
test
je
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
shr
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
push
push
inc
dec
pop
inc
jne
jb
outsb
je
outsl
outsb
je
outsl
insb
push
gs
inc
outsl
outsb
je
outsl
insb
pop
inc
outsl
outsb
je
outsb
je
outsb
fs
dec
popa
outsb
addr16
addr16
inc
outsb
insb
imul
add
xor
xor
xor
xor
xor
add
lock
add
or
add
add
add
add
pop
add
pop
add
add
add
pop
add
pop
add
sysret
add
add
add
add
add
pop
add
add
pop
add
pop
add
add
pop
add
push
pop
add
pop
add
add
pop
add
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
add
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
or
add
pop
add
or
add
pop
add
pop
add
add
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
add
add
pop
add
pop
add
pop
add
or
add
or
add
or
add
add
add
or
add
pop
add
or
add
or
add
pop
add
pop
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
pop
add
or
add
pop
add
pop
add
pop
add
pop
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
pop
add
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
pop
add
or
pop
add
pop
add
pop
add
pop
add
or
pop
add
or
pop
add
or
pop
add
pop
add
push
pop
add
pop
add
push
pop
add
add
add
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
sysret
add
sysret
add
add
add
pop
add
pop
add
add
sysret
add
add
add
sysret
add
add
add
sysret
add
sysret
add
adc
add
adc
add
adc
add
adc
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
pop
add
push
pop
add
pop
add
add
pop
add
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
add
add
pop
add
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
pop
pop
add
or
add
pop
add
or
add
pop
add
pop
add
add
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
add
add
pop
add
pop
add
pop
add
or
add
or
add
or
add
add
add
or
add
pop
add
or
add
or
add
pop
add
pop
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
pop
add
or
add
pop
add
pop
add
pop
add
pop
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
pop
add
add
pop
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
pop
add
or
pop
add
pop
add
pop
add
pop
add
or
pop
add
or
pop
add
or
pop
add
pop
add
push
pop
add
pop
add
push
pop
add
add
add
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
push
pop
add
pop
add
sysret
add
sysret
add
add
add
pop
add
pop
add
add
sysret
add
add
add
sysret
add
add
add
sysret
add
sysret
add
adc
add
adc
add
adc
add
adc
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
inc
jne
jb
outsb
je
push
dec
add
dec
add
je
jns
je
insl
push
imul
insb
gs
imul
jb
popa
je
inc
imul
jns
add
mov
inc
jb
popa
je
dec
jne
gs
add
test
inc
jne
jb
outsb
je
jb
arpl
jae
ds
outsb
push
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
stos
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
outsb
fs
inc
imul
gs
imul
gs
add
inc
jb
popa
je
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
jb
jo
inc
add
pop
add
je
gs
jo
imul
add
pop
add
je
gs
jo
popa
je
inc
add
mov
insb
jae
jb
outsb
inc
add
xlat
add
je
imul
bound
gs
add
lods
add
jae
jb
insl
jo
inc
add
add
je
imul
sti
add
popa
insb
inc
imul
outsl
inc
imul
rolb
inc
outsl
jae
popa
je
push
imul
insb
gs
imul
jae
jb
popa
je
add
aam
inc
gs
imul
mov
insb
jae
jb
jo
outsb
inc
add
push
gs
outsl
jbe
inc
imul
jns
add
sbb
inc
imul
add
add
outsb
fs
gs
inc
imul
gs
gs
inc
imul
jae
jb
insl
jo
add
sbb
fs
imul
gs
add
xchg
add
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
jo
inc
imul
insb
jne
push
inc
jne
data16
add
and
insb
gs
fs
popa
imul
insb
gs
bound
arpl
add
je
jbe
outsb
je
add
inc
gs
imul
je
add
popa
je
push
push
add
jb
inc
jb
popa
je
inc
jbe
outsb
je
add
sbb
inc
gs
jb
jbe
je
push
jb
imul
imul
add
outsb
jbe
jb
inc
gs
jne
je
outsl
arpl
add
jne
inc
gs
gs
imul
dec
add
je
jns
je
insl
dec
outsb
outsw
add
add
je
jb
jbe
je
push
jb
imul
inc
add
add
je
jne
jb
outsb
je
imul
jns
add
outsl
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
gs
imul
and
inc
gs
jb
arpl
fs
jae
add
repnz
fs
imul
js
add
add
inc
js
je
jb
arpl
jae
testb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
gs
gs
jae
dec
jne
gs
add
insl
imul
outsl
arpl
jae
add
inc
gs
push
dec
outsb
outsw
add
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
or
ja
jo
imul
add
je
outsb
jne
aad
inc
outsb
fs
popa
imul
push
gs
outsl
arpl
add
lea
inc
fs
outsb
imul
imul
fs
jb
gs
je
imul
insb
add
jo
je
push
popa
addr16
add
aad
push
jb
outsb
jae
popa
je
dec
gs
popa
add
roll
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
gs
gs
popa
addr16
add
add
imul
popa
jae
push
add
aad
dec
outsl
popa
fs
jne
jae
jb
add
add
fs
arpl
push
add
add
jae
popa
addr16
outsl
js
add
push
outsb
fs
gs
popa
addr16
add
repz
outsb
fs
imul
cmpsl
add
je
imul
jae
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
imul
jmp
popa
je
push
imul
cmpsb
add
je
imul
popa
arpl
outsb
je
add
gs
jns
inc
outsl
insb
outsl
jb
push
popa
je
push
imul
push
add
add
imul
imul
inc
outsl
jb
popa
je
add
jge
inc
fs
gs
popa
jae
inc
jb
outsl
jb
addl
fs
popa
insl
gs
gs
imul
inc
fs
jb
popa
je
push
je
imul
insb
gs
add
addl
outsb
imul
push
add
testl
popa
addr16
gs
in
dec
outsl
popa
fs
je
imul
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
imul
outsl
arpl
add
add
outsb
dec
gs
jo
add
sbb
insb
push
imul
outsl
arpl
das
add
popa
jb
gs
push
add
inc
insb
imul
je
dec
add
insb
gs
jae
inc
inc
add
add
je
inc
add
arpl
imul
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
inc
fs
outsl
outsb
outsb
arpl
cmp
inc
push
jo
jb
add
mov
ja
arpl
add
push
add
imul
add
lods
add
je
imul
js
push
add
jo
inc
fs
insb
imul
outsb
jae
arpl
outsb
add
addb
fs
gs
je
imul
insb
gs
add
popa
jae
push
imul
add
insb
insb
push
imul
dec
outsb
jbe
insb
imul
je
add
arpl
outsb
jne
je
insl
add
insb
imul
inc
outsl
jb
popa
je
jbe
imul
iret
add
popa
bound
outsb
jne
je
insl
add
test
inc
fs
outsl
jae
inc
fs
jae
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
inc
gs
gs
je
jo
imul
ja
inc
fs
imul
arpl
add
jae
dec
gs
popa
addr16
add
sahf
add
je
imul
add
push
jne
jb
push
je
imul
inc
fs
gs
popa
je
add
and
push
outsl
jae
push
jne
je
gs
popa
add
gs
imul
popa
arpl
outsb
je
add
inc
fs
bound
outsl
outsb
push
jb
outsb
jae
arpl
outsb
add
gs
imul
mov
je
outsl
jns
imul
add
je
imul
outsb
addr16
add
addb
gs
imul
outsb
addr16
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
jno
inc
fs
insl
jo
je
imul
insb
gs
outsl
add
inc
fs
popa
je
add
je
inc
fs
jb
popa
je
inc
popa
je
dec
popa
outsb
fs
add
inc
insb
outsl
jae
inc
insb
imul
add
sgdtl
je
insb
imul
inc
popa
je
add
lar
outsb
inc
insb
imul
add
add
fs
imul
push
inc
push
xor
cs
insb
add
push
add
je
gs
inc
js
outsb
je
outsl
imul
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
popa
je
insb
je
add
gs
push
add
add
je
popa
jo
outsl
fs
inc
inc
dec
xor
cs
insb
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
add
inc
push
inc
outsl
outsb
je
add
dec
inc
dec
inc
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
pop
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
jb
popa
je
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
js
push
gs
gs
popa
insb
jne
inc
js
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
adc
push
push
bound
je
add
inc
dec
dec
xor
cs
insb
add
add
gs
je
push
outsl
outsl
insb
bound
inc
js
or
inc
jb
popa
je
push
je
je
jae
imul
inc
dec
dec
inc
push
dec
xor
cs
insb
add
add
bound
add
add
add
add
sbb
add
sbb
add
bound
add
add
add
add
add
add
xor
add
bound
add
add
add
add
pop
or
add
add
pop
and
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
cmp
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
add
mov
add
test
cmp
cmp
cmp
cmp
xor
ds
int3
loope,pt
stc
ds
aas
sbb
dec
aas
arpl
add
add
add
or
aaa
dec
aaa
fs
imul
cmpsl
aaa
shll
jecxz
icebp
aaa
divb
add
or
inc
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pop
cmp
jbe
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
fdivrs
ljmp
cmp
push
ds
sbb
and
es
xor
cmp
ds
ds
ds
ds
ds
bound
push
jp,pt
cmpb
mov
xchg
ds
ds
movsb
ds
ds
mov
mov
ds
ds
fidivrl
loopne
out
in
ds
ds
ds
or
adc
push
aas
sbb
and
sub
cs
xor
cmp
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
fs
push
jo
jbe
jl
cmpb
aas
mov
xchg
aas
lcall
aas
mov
mov
aas
lret
aas
aas
fdivrl
loop
call
aas
cli
aas
add
add
push
add
add
add
push
xor
adc
sbb
push
xor
sub
xor
xor
inc
xor
dec
xor
xor
data16
xor
jle
test
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
xor
xor
cmp
xor
.byte
