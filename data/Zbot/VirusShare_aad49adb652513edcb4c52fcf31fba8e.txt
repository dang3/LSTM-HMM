idiv
and
sub
notl
push
outsl
ja
pushl
push
lea
add
push
push
or
lea
push
push
call
or
pop
lahf
leave
ret
push
inc
lock
cs
mov
out
lock
xor
cld
cmp
pop
jbe
in
fs
je
push
inc
add
sti
adc
add
fdivrs
jmp
jbe
push
jge
fiaddl
adc
decl
sub
add
dec
dec
and
pop
clc
repnz
push
push
dec
bound
xor
push
xchg
jg
cmp
call
sub
inc
or
pushl
push
fistps
loopne
outsb
jae
jb
nop
gs
popf
add
and
push
sbb
pop
inc
clc
push
push
popf
jae
mov
dec
test
xchg
pop
sbbb
out
jle
ret
push
dec
add
push
adc
sub
sbb
jmp
in
lret
push
and
iret
jmp
outsb
sub
scas
insb
popf
divl
push
inc
cmp
inc
mov
dec
mov
adcl
fwait
sbb
push
ja
repnz
mov
insb
cmpl
jo
push
ret
jg
push
sub
clc
jo
fistl
shlb
add
pop
sub
xchg
mov
outsl
cmp
or
add
insb
aas
in
push
pop
add
add
inc
je
jae
or
jne
dec
stos
mov
sub
outsb
pop
icebp
add
mov
adc
data16
adc
call
insl
mov
mov
loope
bound
leave
jg
stos
hlt
divb
sbb
push
and
push
and
and
negl
jne
stc
lret
pushl
xor
sbb
add
jmp
or
jnp
jne
mov
cwtl
push
push
je
jns
outsl
sti
ret
in
dec
andl
outsl
dec
dec
inc
dec
stc
add
std
cmc
mov
hlt
inc
fdivrs
xorl
test
or
push
xor
push
cs
or
jecxz
loopne
push
inc
and
int3
jbe
incl
insb
inc
push
xchg
in
push
sar
mov
xor
sbb
push
jbe
in
aaa
xchg
dec
add
inc
jns
push
shl
jp
xor
out
mov
cmp
sti
clc
push
push
add
cmp
sub
outsb
push
and
subl
cmp
xor
sub
hlt
fmul
jae
sub
mov
inc
decl
xor
inc
hlt
push
testl
gs
push
inc
cmp
in
js
jg
mov
cmp
jne
or
jle
aaa
clc
sub
dec
sub
dec
jb
inc
or
jbe
or
xchg
enter
in
insl
js
mov
daa
push
fildl
cmp
dec
clc
push
pop
sbb
push
arpl
jecxz
sub
neg
cld
repnz
cmp
je
bound
add
inc
add
scas
pushf
dec
cmp
js
mov
es
pop
jecxz
jg
push
inc
dec
xor
das
faddl
and
sub
jo
ss
arpl
andb
adc
adcl
pop
mov
push
insb
push
mov
lahf
hlt
xchg
in
shll
ret
loope
leave
ret
lea
push
cmp
sti
dec
inc
push
jns
add
inc
incl
test
jbe
xchg
sub
adc
add
sub
mov
dec
cmp
push
rcr
dec
pop
inc
push
inc
xor
dec
out
cwtl
cmc
lea
push
mov
or
ss
push
add
movsb
imul
inc
pop
dec
jno
out
mov
mov
mov
mov
das
loope
je
xlat
mov
rol
outsl
cmp
jp
pop
pop
inc
sub
inc
mov
inc
bound
outsl
pop
mov
or
pop
adc
sub
dec
inc
cmp
inc
test
xor
cmp
mov
loop
xor
inc
dec
mov
test
push
adc
mov
add
and
and
imul
in
add
pop
mov
cmc
hlt
mov
call
and
xor
add
adc
insb
sbb
and
rep
inc
gs
js
or
jp
cs
movsl
das
std
add
inc
cmp
clc
pshufw
dec
lds
not
fs
add
xchg
lret
mov
test
fnstcw
push
outsb
push
int
movsl
js
sbb
mov
add
add
sbb
nop
sarb
repz
data16
xchg
dec
or
dec
push
popa
addr16
dec
adc
je
bound
lock
push
pop
adc
xchg
inc
sbb
dec
rcl
clc
out
in
mov
in
outsl
add
jns
inc
xchg
or
ret
xor
jne
mov
jmp
mov
repnz
jge
adc
loopnew
mov
add
fidivrs
or
pop
mov
sbb
add
sbb
dec
pop
adc
xlat
adc
addb
rcl
push
aam
push
or
fcompl
dec
sub
push
aam
hlt
mov
xchg
mov
cmp
inc
ja
sahf
xor
push
mov
pop
loope
clc
lods
mov
cmp
gs
ret
jbe
cmp
insb
ret
mov
loopne
ljmp
ret
enter
inc
dec
aas
xor
or
sar
dec
orl
lods
pop
inc
lret
call
push
push
das
xchg
fs
sbb
in
sub
pusha
scas
push
inc
dec
jecxz
push
outsl
cmc
push
jmp
pop
je
insb
push
ss
push
mov
and
js
sub
pop
in
test
push
xor
sbb
popa
inc
push
js
add
jae
adc
xlat
sub
mov
inc
sub
idiv
ljmp
iret
inc
sbb
mov
adc
pop
and
jo
lock
jecxz
dec
imul
dec
or
rolb
dec
xchg
flds
jmp
mov
imul
sub
pop
push
add
lock
add
addl
xor
inc
and
fildll
outsl
cmp
outsb
repnz
push
pusha
loopne
rorb
adc
sub
push
push
pop
lahf
or
fbld
push
jb
shll
shll
adc
in
xor
shrb
sub
jb
ljmp
mov
sub
mov
inc
ja
dec
pop
pop
shlb
lcall
cmp
popa
cmp
push
add
in
sbb
push
pop
je
mov
mov
push
cmpsl
rorl
add
cld
inc
push
inc
insl
test
js
ss
cmp
loope
insl
insb
adc
sub
das
push
add
push
mov
arpl
xchg
shlb
lods
xchg
push
insb
inc
dec
cmp
xchg
addl
fbstp
dec
xor
sub
outsl
xor
jb
mov
outsb
push
dec
and
andl
pop
insb
dec
or
mov
movsb
lock
jns
jmp
fs
in
or
mov
adc
dec
aas
add
xor
pop
push
cli
or
lahf
mov
incl
mov
mov
sahf
fs
data16
inc
push
out
jnp
cmp
cmp
mov
fs
add
mov
push
mov
rorb
movsb
mov
mov
inc
push
xor
push
fmull
or
test
pop
and
repz
push
in
es
andl
mov
aas
cmp
stc
dec
sub
mov
mov
push
stos
xchg
lret
in
jl
ds
loopne
dec
push
mov
cld
push
push
test
adc
inc
sub
push
in
mov
push
fwait
or
dec
jb
mov
rcrl
sub
xchg
jb
gs
aad
or
in
mov
adcl
and
or
fisubrl
jbe
add
out
stc
js
xchg
jb
mov
jae
push
in
push
fbld
js
push
push
lods
mov
cmp
and
mov
xor
lods
push
push
mov
mov
pop
insb
insl
bound
das
inc
fstl
sbb
cmp
addb
push
adc
sbb
add
mov
fadds
jo
ss
arpl
push
xor
adc
addr16
mov
add
adcl
inc
push
xchg
and
push
push
and
add
incl
mov
dec
inc
mov
add
adc
jge
into
ja
out
std
inc
or
fadds
inc
jo
add
or
rorl
push
pop
xor
scas
adc
je
xchg
and
cli
push
fsubr
outsl
incb
xor
fs
mov
pop
dec
inc
insl
insl
inc
insl
mov
mov
pop
sub
sbb
int
insb
bound
sub
sub
add
mov
outsb
jo
imul
push
xor
push
dec
ss
xchg
clc
sub
arpl
inc
imul
aas
mov
xchg
sub
mov
mov
cli
add
shll
mov
in
cmpsb
xchg
jbe
imul
lret
jb
mov
bound
lret
or
push
jnp
int
jnp
sbb
add
xor
add
cld
xorb
mov
int
inc
out
sbb
pop
mov
add
in
add
add
psrad
push
nop
add
daa
stc
in
jnp
adc
je
add
sbb
fistpl
fs
testb
cmpxchg
mov
or
int
pop
jle
add
rcll
aas
fsubrs
out
clc
add
and
fucom
int
add
push
add
jo
mov
inc
xor
mov
mov
mov
jl
mov
cs
cwtl
lods
inc
loopne
dec
inc
add
ljmp
outsl
rolb
add
jle
arpl
popa
mov
mov
add
add
cmp
cmp
cwtl
fistpl
sar
push
sub
daa
movl
add
adc
add
out
and
ss
into
outsl
outsb
xchg
pop
testb
adc
pop
outsl
aaa
or
out
enter
jae
and
fwait
add
insl
mov
xchg
add
adc
add
in
pop
dec
adc
jp
mov
push
negl
fadds
ds
test
in
cmp
xchg
dec
in
push
jle
outsb
pop
sbb
popl
sbb
into
ss
mov
add
je
push
jb
nop
fisttpll
push
xchg
enter
ret
lret
sbb
ja
sahf
adc
lock
fidivs
push
add
sarl
jge
or
shlb
out
pop
das
scas
int
or
xor
out
xlat
loope
outsl
jecxz
mov
and
push
subb
xchg
adc
mov
inc
adc
jecxz
cmp
out
xchg
jae
cmp
in
jl
rcll
insb
mov
inc
add
lcall
mov
xorl
test
aaa
shlb
incl
xchg
roll
cli
sahf
insl
adc
add
pop
jae
inc
fucomi
lock
test
cmc
xchg
leave
dec
je
push
mov
sbb
loopne
in
xor
addr16
femms
xchg
sahf
adc
xor
sbb
cmp
mov
mov
xchg
xchg
scas
loope
adc
add
jl
and
xchg
gs
pusha
push
add
mov
xchg
mov
repnz
out
and
and
mov
in
data16
or
mov
imul
imul
push
out
in
fstl
cs
pop
dec
adc
or
or
cmp
cli
jne
and
jle
mov
cli
pop
add
cld
out
push
xchg
sahf
jle
in
inc
scas
jecxz
repz
xchg
cmp
sbb
sti
push
data16
pusha
in
clc
insl
dec
ja
push
popa
xlat
cs
pop
fdivrs
jecxz
fld
push
int
popf
jno
and
mov
test
and
mov
orl
sbb
xchg
lods
in
or
inc
push
push
and
add
imul
popf
incb
pop
cmp
xchg
cmpsl
or
cmpsb
popf
ss
testb
add
clts
add
stos
arpl
mov
push
ret
or
pop
sub
mov
das
xor
mov
pop
mov
loope
jo
fldt
daa
sub
jbe
mov
pusha
cmp
js
in
lods
mov
inc
push
inc
cmpb
pop
gs
sub
add
insb
lock
inc
mov
enter
adc
jno
adc
popa
js
out
push
pusha
xor
and
ds
dec
fsubl
jle
test
or
jmp
lret
xchg
adc
sub
sbb
jl
sub
mov
jnp
jne
cmp
in
sbb
sbb
loop
mov
lock
pop
sub
test
sarb
mov
dec
pushf
in
jecxz
sbb
cmp
add
lret
xchg
add
pop
sub
in
or
lret
jmp
lret
neg
and
jmp
loope
xchg
std
mov
dec
dec
lods
rcrl
adc
add
scas
xchg
js
outsl
sbbb
dec
js
cmp
cmp
xor
popf
cltd
add
pop
mov
ret
and
repnz
add
add
lods
jne
lret
push
in
cmp
mov
ss
pop
scas
cmp
or
pop
lret
jo
pop
jmp
mov
cs
imul
jno
jmp
hlt
call
inc
pop
jle
popa
cwtl
in
adc
mov
mov
push
jl
or
xorb
ret
push
addr16
xor
mov
shlb
inc
lods
scas
dec
sti
sub
pop
adc
or
jb
pop
pop
mov
push
adc
sti
ret
pusha
cs
xchg
cltd
aas
daa
adc
pusha
jbe
mov
sub
sbb
xchg
rorb
mov
push
pop
cwtl
push
rol
pushf
mov
lock
dec
pop
mov
push
iret
or
and
xchg
sbb
sbb
scas
addr16
dec
cmpl
fcmovnb
out
dec
and
int
xor
or
mov
dec
ds
dec
roll
data16
mov
cmp
in
add
sub
lret
mov
repz
ds
xchg
or
out
fnsave
sub
test
xchg
rcrl
lods
out
mov
popf
cmp
mov
mov
add
pusha
arpl
push
movsl
adc
das
sbb
fs
push
xor
je
mov
adc
loope
sbb
pop
scas
outsb
aaa
lods
jae
or
ds
je
rorb
sub
call
push
xor
cmp
pop
xchg
jbe
or
mov
imul
dec
inc
xchg
mov
je
inc
ljmp
test
mov
fwait
stc
scas
xchg
xchg
leave
call
pop
sbb
mov
sub
push
cwtl
push
inc
adc
or
or
pop
aas
jne
and
push
and
int3
mov
dec
packuswb
xchg
cltd
or
mov
stos
sub
scas
sbb
add
lahf
mov
ss
jae
jnp
jl
clc
js
je
icebp
sub
mov
jg
loopne
or
add
lcall
aam
sub
pop
lods
lea
and
ss
xchg
repz
sub
cmp
loope
leave
roll
insb
std
popa
je
lahf
ffree
es
hlt
mov
bound
jae
arpl
ficomps
mov
lods
or
ror
add
data16
cmp
push
aam
clc
xchg
shr
ret
or
in
icebp
mov
stc
outsl
add
mov
add
push
insb
push
mov
jno
and
or
sub
addr16
xorb
rcr
out
cs
sbb
mov
sarl
aaa
in
sbb
xchg
mov
or
je
pop
xor
addr16
cmp
sbb
mov
mov
lcall
cmpsl
insl
arpl
sbb
mov
fsubl
pop
sbb
xlat
jle
sub
fbld
ja
aam
test
jecxz
gs
sbb
sti
adc
mov
sub
jne
push
adc
lret
mov
jne
into
in
cmpsb
imul
xchg
mov
shll
adc
sbb
inc
jns
ss
mov
testl
movsb
dec
lea
or
xchg
xchg
sub
pop
pusha
cmp
shrl
xchg
faddl
test
mov
shrl
or
jnp
aam
mov
push
and
outsb
popa
and
cmp
popa
cmp
pop
daa
icebp
lock
xor
mov
cmp
push
cmp
xor
mov
fadds
lods
cmp
or
xchg
shrb
movsl
imul
jmp
jbe
xchg
lret
popa
divb
push
and
pop
xchg
xlat
cmp
cwtl
lret
sbb
and
xor
lcall
hlt
leave
adc
mov
out
movsb
fcmovb
pop
push
pusha
fwait
xchg
sahf
add
pop
mov
bound
enter
imul
push
outsb
or
xor
xor
daa
sbbb
das
dec
jg
add
lret
or
jecxz
mov
mov
mov
leave
xor
ss
push
les
push
pop
pusha
ret
add
mov
leave
dec
inc
mov
rolb
or
lods
popf
vshufps
test
insl
lahf
adc
lcall
lcall
ret
call
cmpb
xlat
inc
jecxz
xor
sahf
pop
or
push
jbe
mov
dec
pusha
add
dec
push
xor
lock
pop
std
mov
push
movsb
cmp
pop
inc
mov
cld
les
jb
mov
cli
xor
jl
sub
popa
adc
add
pop
insb
addr16
xlat
nop
xchg
test
cmpsb
sbb
bound
addr16
mov
sahf
mov
dec
mov
jo
es
cltd
inc
bound
cmpb
imul
fnstcw
jae
addr16
pop
cmpb
add
mov
adc
jno
testb
decb
call
pop
in
fisubl
cs
int
and
inc
enter
sbb
pop
add
xchg
xlat
sbb
lcall
iret
and
int
mov
mov
inc
sarb
imul
daa
sbb
add
xor
add
popl
adc
mov
inc
dec
cs
mov
pusha
iret
jb
inc
shl
pop
dec
jge
loopne
mull
add
lcall
subl
pop
jle
scas
pop
sahf
add
push
pop
aad
mov
addr16
test
sbb
or
xchg
dec
add
lds
popl
orb
push
js
and
aaa
add
insl
outsb
out
dec
adc
out
imul
mov
addl
out
rcr
out
test
cmp
outsb
xchg
cltd
cmp
push
lahf
ss
sbb
cwtl
rclb
je
dec
mov
in
leave
push
ljmp
inc
xchg
scas
dec
xchg
mov
mov
xchg
push
pop
sbbb
fs
or
xor
test
mov
jcxz
push
cmp
or
cmpb
cltd
outsl
cmp
jnp
pop
cmp
popa
in
mov
scas
andl
mov
hlt
js
push
mov
jle
pop
push
push
or
mov
jne
loope
push
inc
push
inc
lahf
repnz
mov
ret
mov
pusha
sar
pop
mov
clc
dec
mov
xor
negb
in
sub
adc
sti
loopne
or
pop
js
pop
cmp
mov
mov
xlat
shll
mov
movsl
cmp
cs
stos
jecxz
or
outsb
cli
sbb
or
out
sbb
xor
sub
mov
fldt
inc
mov
pop
sti
out
iret
add
int3
mov
push
adc
pop
xchg
xchg
mov
testl
dec
jne
add
inc
into
outsb
cli
les
in
into
shrb
xchg
in
retw
in
jecxz
cmp
fidivl
psubb
fidivrs
sbb
cmp
mov
data16
inc
sahf
lds
xlat
or
sub
rorl
out
js
pusha
test
daa
cmc
test
cmpsb
cmp
mov
in
scas
outsl
movsb
add
sbb
out
sub
outsb
dec
push
int3
xchg
cmp
push
xor
test
add
sahf
mov
addr16
test
adc
lock
sub
fbstp
push
ja
add
mov
iret
jno
cmp
in
nop
popf
mov
rorb
dec
out
dec
adc
cmpsl
insl
ret
in
aas
rol
sbb
jle
add
arpl
jns
jae
icebp
and
std
ds
or
das
mov
addr16
and
ss
enter
ret
cld
sbbw
mov
xor
popa
rolb
das
int3
pop
out
xor
fcoml
aad
loopne
xorl
dec
xchg
jp
rcrl
adc
mov
mov
hlt
sub
iret
sub
jns
rorl
sahf
jmp
push
and
jo
arpl
jnp
roll
inc
push
push
scas
addr16
mov
or
push
jbe
lods
mov
jns
or
pop
dec
repnz
ret
call
ja
pop
fwait
iret
mov
je
dec
add
xchg
pop
sub
jb
add
pop
jl
add
jle
add
lock
and
fadd
lods
and
adc
fadds
adc
in
cmc
adc
jl
fistpl
pop
or
jnp
push
push
adcl
or
outsb
push
cmp
enter
dec
test
pushf
shll
and
out
sub
jno
rcrb
shl
out
mov
push
add
cmp
push
andl
cs
jg
dec
mov
inc
movsl
inc
aaa
andl
loopne
iret
mov
xlat
sub
fistpl
hlt
mov
inc
ror
sbb
mov
sti
pop
out
cmp
pop
movsb
rolb
sti
pushf
rorl
push
pop
xor
sti
xchg
mov
pop
and
and
or
bound
ret
ret
and
or
push
push
fcmovnbe
sbb
jae
xor
dec
pop
loopne
scas
mov
fbstp
mov
pop
clc
pusha
leave
mov
dec
gs
mov
in
lock
inc
cmp
xchg
sub
aaa
lock
adc
addl
lcall
clc
arpl
mov
mov
pusha
mov
sbb
sti
and
out
iret
lock
cmpb
test
mov
push
sub
jmp
movl
in
sbb
mov
dec
shll
jmp
lds
jp
cmp
pop
call
sbb
inc
cmp
cmc
inc
das
call
mov
ds
sbb
or
fwait
clc
and
sub
lea
jae
add
ljmp
ljmp
adc
movsl
aaa
stos
pop
sbb
jo
std
call
pop
daa
in
and
lea
cmpsb
and
stc
lock
or
sbb
cmp
shll
sub
inc
or
fidivrl
pushl
shll
adc
imul
add
addl
jge
push
add
cld
lds
jnp
add
ss
popa
pop
jl
hlt
inc
test
movsb
cmp
jno
jns
inc
out
adcl
add
icebp
inc
imul
cmpb
pop
loop
shl
and
fdivl
scas
pop
add
fidivrl
inc
std
xor
push
ss
arpl
in
and
mov
addr16
push
mov
adc
repz
pop
cmpl
push
ds
enter
int3
xchg
pushf
push
std
dec
sbb
popw
pop
sti
push
lret
pop
loop
lahf
sti
in
mov
xor
les
cmp
and
negb
inc
xor
loope
push
push
icebp
jecxz
dec
or
dec
dec
cwtl
jl
jbe
sub
cmp
xchg
push
fmul
dec
or
inc
mov
sbb
add
dec
xorl
adc
jnp
out
ror
sub
dec
pop
inc
sbb
mov
arpl
insb
pop
sub
sbb
cmp
sub
push
jle
lea
rcrb
inc
mov
pop
loop
fdivrl
or
pop
movsb
inc
push
cld
or
shr
ds
inc
adc
xbegin
push
jo
pushf
outsl
mov
push
pusha
aam
mov
jo
sub
xor
cmc
add
or
cmp
mov
ret
into
fstpl
inc
lods
jae
incl
add
push
mov
scas
mov
sub
add
sahf
jo
insb
enter
xor
pushf
pop
cmp
clc
xchg
fmuls
jnp
sub
fld
in
sarb
dec
dec
fdivl
popf
dec
jo
xchg
loope
popa
pop
xor
jl
ss
out
or
int
daa
int3
lock
and
mov
popa
icebp
xchg
insl
loop
daa
int3
push
sbb
cmp
jecxz,pt
js
popf
pop
jecxz
and
lea
dec
cs
jne
je
in
push
ffreep
rclb
or
loopne
mov
dec
popa
cmc
arpl
ds
dec
and
stos
jmp
mov
push
lods
or
cmp
and
dec
mov
jle
inc
jae
xchg
pop
mov
add
ljmp
cmp
add
in
aam
and
push
ja
and
cltd
clc
aad
inc
loopne
outsl
int
in
inc
xchg
loope
and
jl
mov
jmp
test
subl
and
push
jb
aad
cmp
mov
rcll
cmp
adc
loopne
cli
js
mov
sbb
adc
addr16
and
sub
xor
xchg
mov
dec
or
loop
popf
fcmovbe
loopne
daa
add
xchg
sub
jbe
je
and
mov
scas
mov
and
xchg
jle
inc
in
std
cwtd
or
mov
or
jno
stos
divl
inc
pop
push
out
es
repz
arpl
and
mov
cli
mov
adc
sbb
xor
jg
pop
push
hlt
icebp
loopne
dec
test
sahf
lcall
push
xchg
push
pop
mov
push
scas
cmp
cld
movsl
adc
xchg
mov
add
mov
push
or
mov
pop
add
sbb
mov
std
loopne
jb
mov
lods
lods
incb
sahf
mov
sub
iret
je
xchg
push
scas
inc
ljmp
out
std
inc
mov
call
pop
cwtl
push
mov
fldenv
xor
leave
cmp
push
sub
sbb
mov
jle
cmp
in
jecxz
fs
jl
bsr
into
bound
dec
sub
adc
loopne
add
insl
or
inc
movsl
test
into
dec
data16
call
sub
xchg
sahf
xor
inc
xchg
adc
lock
mov
in
hlt
jo
jnp
add
addr16
push
adc
xchg
adc
mov
add
xor
lds
incl
or
fisubs
push
outsl
nop
test
cmp
mov
test
rolb
cmp
add
inc
arpl
cmp
cmp
testb
pop
in
jp
inc
mov
mov
sub
clc
xchg
and
cmpsl
xchg
jecxz
cwtl
mov
mov
mov
mov
leave
mov
ficompl
in
sbb
in
dec
mov
data16
in
iret
int
lcall
sbb
shr
and
sahf
test
push
data16
cmpsb
and
imul
and
cmp
repz
enter
and
sub
fwait
out
inc
jle
cmc
in
and
lock
jae
lahf
add
ret
gs
aaa
mov
shrl
movl
push
insl
and
pop
sub
lds
subl
pop
mov
mov
sbb
rol
movsb
pop
jns
mov
shll
rorl
jae
js
icebp
jecxz
xchg
xchg
mov
pop
nop
mov
je
sbb
sub
sahf
fnclex
ds
cmpl
and
lcall
or
sub
imul
inc
inc
cld
mov
add
insb
sbb
jmp
mov
clc
scas
aaa
push
pcmpgtw
mov
hlt
mov
push
and
mov
das
out
loop
fisubrl
insb
mov
shll
inc
push
fsub
sarl
sbb
scas
andb
push
cmp
lret
push
jg
in
sub
test
mov
sbb
popf
mov
sbb
dec
out
mov
mov
arpl
addl
insl
or
adc
aad
mov
repz
xchg
push
xchg
and
shll
stos
mov
imul
adc
push
jecxz
sub
in
and
nop
dec
cmpsl
adc
sbb
inc
enter
cmp
mov
jb
aad
mov
mov
mov
sub
ss
stc
mov
jl
inc
jmp
or
xchg
inc
jp
or
jl
out
sbb
sub
stos
aaa
cwtl
sub
js
pop
std
mov
sub
out
iret
movsb
mov
fdivrl
sbbl
fstp
into
or
mov
jecxz
jo
insb
push
out
xor
inc
jp
jge
arpl
add
pop
lahf
imul
sahf
inc
shll
sub
mov
fnstsw
adc
ds
mov
jl
cwtl
jecxz
push
inc
repnz
add
pop
mov
mov
cli
cmp
adc
rclb
dec
xchg
nop
lahf
dec
imul
in
xchg
pop
je
mov
ljmp
int3
es
mov
bound
or
add
sub
push
clc
rcr
add
and
pop
dec
or
in
xor
inc
les
mov
std
jle
cltd
pop
mov
push
jb
ret
jo
jp
les
push
xchg
idivl
test
inc
mov
je
fs
je
adc
jmp
ret
pop
xchg
les
sub
lods
add
jle
pusha
in
test
int3
jnp
or
arpl
pop
add
mov
push
out
pop
lcall
ret
adc
add
push
rclb
mov
ljmp
mov
cmp
repz
pop
add
xchg
aad
push
stos
cmpsb
dec
xor
fldenv
mov
imul
lock
sbb
lret
mov
ljmp
aas
push
nop
gs
sbb
test
sbb
and
stc
cld
into
int
pop
cmp
xor
push
insb
inc
inc
insb
pop
cltd
xlat
mov
ds
mov
sub
test
cwtl
jecxz
fdivrl
lods
pop
cmc
hlt
dec
pop
xor
iret
xor
jmp
push
aad
jp
cmc
lds
xchg
cmpsb
loop
and
mov
lea
jle
pop
dec
lcall
push
xchg
and
mov
clc
mov
or
adc
jmp
pop
add
add
mov
test
pop
mov
sub
jb
jne
es
testb
mov
inc
or
add
pop
dec
push
ds
sbb
loope
rcrb
and
aaa
fimuls
mov
adcl
inc
cs
inc
xor
enter
arpl
clc
inc
pop
lods
mov
add
xchg
cmp
xor
xchg
pusha
imul
sbb
cwtl
sbb
aaa
xor
jne
cmp
cli
cltd
xchg
loopne
or
lock
fwait
push
dec
mov
inc
daa
popf
clc
xchg
pop
sbb
pop
in
in
xlat
sbb
jp
dec
lret
mov
dec
aam
pop
in
adcb
cmc
dec
fdivrs
sti
ret
fwait
js
cmpsl
das
mov
sahf
add
add
or
lret
mov
xor
fs
mov
inc
loope
fdivrl
fistpl
clc
dec
fs
xchg
out
lods
pop
inc
pop
test
sbb
rol
fiaddl
insb
sbb
sbb
movsb
call
enter
cltd
lcall
dec
mov
mov
add
xchg
iret
mov
dec
rcr
push
inc
in
ror
mov
mov
lret
adc
nop
dec
jbe
inc
mov
inc
aaa
stos
ss
sbb
cld
mov
ljmp
ss
daa
pop
jge
mov
inc
push
add
repz
lea
push
sahf
scas
fsubrl
inc
shr
mov
mov
xchg
xchg
loope
lock
jmp
fcmovbe
fstpt
flds
ja
adc
andl
stos
pop
pop
aad
or
push
pop
arpl
fdivrs
jecxz
inc
hlt
mov
out
mul
pop
mov
mov
and
repz
testl
dec
adc
fisubl
inc
cmp
test
lods
pop
rolb
outsl
cwtl
in
and
jl
mov
ljmp
push
sub
xor
xor
sbb
push
sub
mov
inc
cmpsb
dec
jmp
or
or
jno
daa
sub
mov
push
mov
mov
cwtl
pop
sbb
dec
sub
pusha
loopne
out
sbbb
outsb
push
jne
push
cli
hlt
mov
rcll
fldcw
dec
aad
cmp
xor
fcompl
jbe
push
gs
dec
and
lods
push
sbb
add
sbb
cmc
jb
sbb
popf
inc
fs
fldl
sbb
and
subb
addr16
xchg
mov
inc
xchg
stc
enter
dec
or
les
ret
pop
sbb
mov
es
in
shrb
scas
mov
aad
jnp
fistl
jns
xchg
cs
lds
int3
lahf
lods
sahf
fsts
adc
pusha
xor
xchg
imul
lds
movsl
push
dec
stos
orb
jno
mov
das
push
es
fadds
mov
push
jl
mov
je
xor
jmp
push
jne
imul
adc
push
pusha
cmpsb
std
test
pop
dec
ds
cmp
jl
daa
sbb
or
sub
stos
xchg
push
jp
xor
cmc
ja
dec
cmp
inc
fwait
xor
and
xor
or
in
inc
jo
hlt
add
gs
jo
je
dec
xchg
imul
add
sub
sbb
js
das
push
mov
and
gs
in
adc
jb
xor
push
andb
push
xor
enter
incb
or
into
jbe
shll
pushf
lods
jmp
std
sub
sub
lock
stos
push
iret
ljmp
dec
cmpsl
inc
dec
inc
push
or
jl
inc
cmc
cmp
push
cmpsl
mov
pop
imulb
les
mov
mov
fstl
lret
out
dec
loopne
or
bound
out
loope
sbb
pop
or
insl
jnp
xor
add
fcoml
jnp
sub
stos
aas
aas
push
aam
aad
add
xor
add
incb
cmc
pop
loope
test
or
lock
inc
lods
sub
ljmp
loope
iret
es
ret
pop
mov
rcll
mov
or
xor
push
loope
popa
lds
fsubrs
mov
adcl
or
iret
clc
sbb
lods
mov
lcall
stos
cmp
insb
shlb
test
mov
je
sub
jne
sahf
push
or
xchg
lret
or
jmp
nop
lods
push
aaa
loope
lock
les
pop
pop
mov
jns
loope
jl
mov
aaa
jl
roll
pop
lds
repz
arpl
and
inc
ret
jge
push
xor
add
out
sub
and
dec
push
je
test
push
mov
test
pop
bound
mov
xlat
xchg
jb
les
and
aaa
lods
fs
or
popf
add
xchg
movsl
incb
loopne
xor
daa
rclb
repnz
cmp
mov
mov
pop
loope
in
lahf
mov
xchg
fwait
sbb
lea
ret
in
or
adc
inc
jno
ss
mov
xor
inc
push
sbb
das
clc
arpl
aaa
lret
ds
repnz
cmp
xor
movsb
mov
adc
and
and
or
mov
lods
add
dec
cwtd
pop
mov
mov
sbb
xor
lcall
fildll
inc
jge
imul
pop
xchg
ret
loopne
cmp
mov
xchg
jmp
fs
push
lret
jecxz
inc
push
pushf
in
add
jl
popl
inc
inc
add
aaa
mov
add
mov
push
add
movsl
inc
xor
fadds
xchg
ss
jns
inc
adcb
cmpsb
mov
movsb
sub
nop
mov
cmc
loopne,pn
adc
add
mov
ss
mov
xchg
movsl
scas
cmp
ljmp
gs
fs
loope
mov
mov
inc
push
and
sbb
mov
stos
or
mov
je
dec
sbb
push
aam
pop
inc
push
dec
adc
stos
popf
jl
ret
das
xchg
lea
popl
xchg
test
bound
inc
mov
ret
push
and
xor
fnstenv
inc
adc
lcall
jmp
cmc
mov
mov
jp
iret
pop
cmpl
or
loopne
jge
std
shrl
cmp
je
mov
mov
push
sbb
test
orb
pop
mov
negb
xor
pop
aad
and
adc
movsb
std
add
xchg
int3
push
adc
xor
or
push
idiv
pop
pushf
or
ss
inc
mov
or
xchg
lahf
arpl
dec
or
xor
mov
lock
lcall
xor
push
insl
lret
aam
leave
or
lret
xchg
xchg
add
lds
push
adcl
fsubs
das
mov
push
jmp
clc
or
push
mov
sahf
xor
sub
movsl
sub
push
in
ret
or
gs
les
ficompl
xchg
test
rcll
call
mov
add
out
mov
sub
mov
push
dec
xchg
bound
idivl
mov
cmp
cltd
sbb
stc
cmc
test
inc
sbb
push
icebp
inc
aas
or
cmp
inc
dec
mov
pusha
ljmp
mov
int
add
sbb
icebp
in
test
mov
jmp
push
xor
or
incb
push
jge
sbb
mov
sub
jge
xchg
nop
and
cmpsl
push
rcrl
out
inc
push
stos
adc
repnz
adc
es
push
fdivs
mov
adc
popl
sub
fwait
je,pn
sbb
add
insb
aam
or
pop
pop
inc
dec
push
sbb
mov
movsb
test
jns
jle
xchg
fidivrl
fsubl
aaa
or
dec
js
xor
andl
out
pop
call
mov
add
inc
xchg
mov
cmp
divl
add
aam
xchg
arpl
add
jge
push
fcompl
jecxz
mov
mov
dec
stos
ds
lea
pop
adc
jo
push
sbb
mov
movsb
add
push
or
sub
sbb
je
inc
xchg
and
cld
je
adc
js
mov
xor
aam
jle
inc
scas
xchg
js
dec
pop
stc
jl
adc
repnz
mov
pushf
sbbb
mov
sub
xchg
test
jl
jb
ret
and
cmp
fldl
or
or
push
xchg
inc
inc
jg
inc
sub
testb
xchg
insl
ret
addb
cmp
xor
test
loopne
add
and
jae
push
bound
std
mov
jp
lock
add
hlt
dec
in
and
daa
dec
xor
jns
inc
add
loop
jle
sub
rcll
adc
lahf
lock
push
dec
inc
push
cld
lea
fwait
and
mov
inc
into
negb
pop
lds
fadds
mov
sbb
in
rclb
sub
icebp
aad
in
adc
repnz
sbb
jmp
aad
adc
pop
addl
data16
mov
dec
add
mov
int3
nop
fisubs
cmc
or
sub
inc
jnp
enter
sarl
pop
push
dec
jl
mov
sarb
loop
mov
lret
ds
cli
cltd
dec
hlt
mov
pop
test
ret
mov
jecxz
xchg
or
aas
lods
js
jl
pop
cmc
test
inc
fmul
das
cmpsl
test
ljmp
mov
push
rcll
lret
call
jmp
ja
dec
add
stos
and
push
jl
mov
testl
cmp
shlb
xchg
cmp
imulb
xchg
xchg
push
xor
dec
or
dec
sub
cmp
xor
push
gs
adc
call
push
add
lds
pop
jle
jnp
ds
sbb
adc
add
mov
dec
lahf
js
outsb
fldcw
ss
jo
jle
fsubr
jmp
inc
inc
push
sub
sbb
push
aam
cli
jne
pop
imul
ss
cmpl
or
adc
cmp
sbb
scas
flds
jns
aam
push
fwait
add
loopne
in
movsb
addr16
pop
sarl
test
pop
icebp
mov
push
cmp
shll
inc
cltd
rolb
fistl
jae
xlat
pop
icebp
sub
xor
test
xchg
movsl
aad
lods
mov
xor
clc
sub
mov
xor
mov
cs
loopne
add
sbb
clc
js
nop
mov
add
pop
and
sbb
xor
std
or
aas
adc
mov
inc
lcall
push
mov
push
dec
mov
test
in
pop
mov
test
xor
mov
lock
out
or
dec
mov
sbb
pop
inc
sub
xchg
adc
fincstp
mov
xchg
pop
cmc
adc
xchg
mov
mov
dec
add
mov
dec
inc
cmp
ds
push
xchg
in
pop
pop
ljmp
dec
pop
repz
xor
das
ds
cwtl
push
inc
cmp
xchg
mov
call
in
leave
std
arpl
test
daa
jle
xchg
testl
mov
lods
or
dec
and
out
test
add
xchg
inc
sbb
in
jmp
and
pop
jle
cs
test
pop
addr16
mov
in
pop
add
adc
pop
ljmp
cmpsl
mov
out
cmp
popa
mov
push
popf
shl
imulb
dec
lret
add
add
pop
in
jae
jns
cmp
sub
inc
int3
and
lret
in
test
dec
mov
icebp
ja
push
ret
xchg
stos
andb
mov
inc
mov
testl
add
lock
mov
add
mov
jecxz
xchg
mov
sub
adc
or
mov
testb
es
and
je
inc
cmp
pushf
jle
xchg
inc
jmp
pop
inc
xchg
jo
stos
sarl
pop
xor
mov
mov
sub
dec
pushf
push
stc
sti
nop
ss
mov
loopne
mov
jno
xchg
pop
cmp
bnd
pop
push
and
ljmp
inc
pop
cltd
add
mov
and
mov
push
loope
shr
inc
pop
mov
xchg
push
into
mov
inc
sub
jno
or
mov
and
loop
pop
adc
mov
mov
enter
ds
xchg
cmc
push
cmc
or
push
and
lds
add
jns
and
and
hlt
sbb
sbb
test
cmp
and
jo
movsb
and
and
pop
fstl
pop
xor
push
lock
loope
pushf
not
dec
inc
or
cld
call
repnz
or
mov
ret
loope
inc
sarb
add
cmpsl
jo
inc
popa
icebp
fs
dec
aad
mov
pop
in
inc
push
cmpsb
xchg
dec
sub
ret
xchg
sbb
jae
comiss
fs
xor
cmp
pop
inc
fildl
cli
outsl
jg
ret
daa
adc
lods
iret
mov
add
testb
adc
push
dec
dec
and
insb
jne
lock
push
dec
cs
pop
icebp
and
aad
rcrb
ss
loop
rcll
xchg
dec
out
xor
xorl
push
outsb
cmp
std
cmp
push
clc
sub
jle
arpl
and
rol
cwtl
jne
xor
rcl
push
mov
pop
lods
loopne
test
mov
pop
lret
xorb
mov
jl
jl
sti
mov
or
pop
or
cs
pop
lds
xor
xor
pop
pop
into
ss
js
test
xor
andb
lea
loopne
lcall
movsb
pop
fwait
leave
push
dec
mov
sbb
lea
fwait
movb
and
cmp
movsl
xchg
push
and
mov
scas
pusha
gs
ljmp
lcall
sbb
adcb
clc
jp
iret
and
sbb
clc
loop
movsl
call
xchg
cmpsb
fstl
stos
xor
push
or
cmp
sub
scas
and
inc
cmp
pusha
jecxz
or
mov
inc
orb
dec
js
xchg
lret
dec
cltd
pushf
mov
in
fxam
and
cmp
mov
adc
sub
and
dec
cmc
dec
movsb
ss
push
jge
movsl
add
int
jne
sbb
jp
pop
int
mov
icebp
jecxz
mov
lcall
arpl
pop
mov
adc
fs
aam
push
add
push
rclb
add
mov
xlat
cwtl
pop
jecxz
or
and
sub
dec
mov
loope
mov
cli
cmp
push
imul
ljmp
arpl
in
mov
lds
pop
jp
cmp
mull
sbb
pop
cltd
call
loopne
subb
inc
pop
or
dec
mov
pop
stos
scas
mov
mov
popa
cmp
xor
pushf
push
jg
loop
popf
js
dec
and
sbb
mov
jmp
push
dec
or
bound
or
xor
jb
orl
out
xchg
mov
jbe
mov
mov
call
movsb
das
aam
adc
cmp
cli
push
test
push
mov
and
xchg
aam
sub
fidivrl
push
pop
pushf
mov
and
gs
imul
js
movsb
cmpsl
popf
push
test
jmp
pop
dec
mov
das
jmp
repz
mov
or
rorb
and
loopne
and
imul
adc
mov
lods
mov
add
mov
ss
cli
sbb
rcrl
jl
dec
push
push
jo
insl
arpl
xor
out
bound
into
adc
stc
sbb
xchg
notl
mulb
popa
loop
insb
in
imul
je
leave
push
jmp
insb
inc
gs
push
push
lods
adc
out
dec
movsl
mov
and
icebp
sahf
andb
or
sub
pusha
in
add
sub
add
xor
mov
xchg
fwait
inc
mov
std
or
xor
dec
movsb
mov
popf
fidivrs
pop
int3
daa
enter
inc
pop
or
enter
popl
subl
sti
sbb
ret
sahf
push
mov
push
jg
jl
xchg
rclb
lcall
mov
jb
xorl
nop
and
jb
aad
ds
pop
jbe
or
adc
insl
cwtl
add
push
push
sbb
data16
mov
jno
ret
fidivrs
in
pop
sub
fiadds
nop
sub
inc
push
and
imulb
jecxz
daa
lahf
cltd
sbb
pop
in
add
add
fcoms
call
subb
sub
mov
std
mov
fidivrs
bound
test
sar
and
and
mov
enter
orl
xor
addr16
and
and
leave
sbbl
push
mov
stos
shr
rcll
push
pusha
push
lahf
jle
inc
orl
add
test
push
popa
les
fs
inc
testb
pop
inc
sti
mov
mov
or
mov
pop
xor
ds
lret
shll
cmc
pushl
mov
sar
add
inc
inc
ljmp
es
das
aaa
or
loope
cmp
or
fdiv
jmp
in
mov
pop
popf
pop
and
push
and
lods
fidivs
clc
stos
divb
mov
add
clc
jp
or
jecxz
jo
and
jmp
std
add
jmp
and
jnp
popa
insl
test
in
shrl
subb
inc
mov
int
mov
inc
fcoms
dec
popf
stos
addl
fistpll
addl
xchg
jmp
xchg
loop
or
nop
mov
or
push
pop
sbb
call
xchg
fs
subl
fisubrl
test
xor
fwait
add
and
gs
sbb
xor
mov
scas
pop
fidivl
pop
push
fs
jnp
cmp
imul
pop
mov
popa
xchg
push
cwtl
cltd
or
leave
cmp
popa
sub
inc
cmp
inc
add
cmp
leave
mov
or
inc
sbb
pop
aas
daa
data16
divl
pop
or
ficoml
jno
dec
icebp
mov
nop
add
inc
mov
aam
roll
add
popf
add
gs
push
mov
push
add
jbe
jb
xor
cmp
cwtl
lret
mov
xor
pop
push
jbe
inc
mov
and
mov
lret
int3
daa
push
dec
stos
mov
pushf
jp
cmp
imul
mov
insb
pop
es
mov
das
dec
jmp
mov
cmp
andl
mov
inc
inc
repz
add
sbb
icebp
and
das
fiadds
jg
clc
les
push
xorl
and
es
xchg
scas
addr16
lds
mov
inc
js
outsl
addr16
push
out
into
fisubrl
mov
push
cmp
xchg
or
shll
add
dec
cs
sub
jmp
bound
into
sbb
pushf
mov
xchg
std
sub
data16
daa
nop
sbb
lcall
je
pop
and
arpl
or
jbe
ret
mov
fcoms
fistpll
mov
xchg
xlat
dec
ret
ret
dec
push
lds
fdivrp
aas
dec
shrl
dec
pop
mov
push
inc
sub
nop
xchg
sbb
add
add
fbld
mov
lock
xchg
int3
repz
ss
add
ret
jge
or
popa
andb
aam
mov
mov
mov
adc
dec
addr16
xchg
push
test
or
add
mov
test
sti
pop
sub
nop
leave
arpl
mov
sbb
in
or
dec
mov
cmp
xchg
mov
pop
cs
pop
orl
ss
mov
mov
mov
in
out
imull
cld
cmp
add
rcrl
fldl
cwtl
divb
je
shl
sbb
test
add
incl
pop
mov
mov
ss
adc
fwait
push
pushf
ret
xor
dec
inc
stos
mov
cli
xchg
sub
mov
sbb
imul
dec
inc
mov
mov
andb
enter
cmp
sahf
icebp
scas
or
dec
add
inc
or
push
bound
mov
ret
jnp
lods
sbb
mov
in
cmp
mov
and
shr
adc
dec
pop
cwtl
and
dec
xchg
xor
lock
jge
mov
or
inc
sbb
insl
into
inc
scas
in
ret
pop
rcrb
push
jne
mov
in
rorl
pop
clc
pop
inc
fcomi
mov
or
push
cwtl
les
jo
sbb
push
push
jmp
subb
sub
cwtl
jne
movsb
sbb
jecxz
jge
je
jle
mov
data16
cltd
js
add
push
xchg
xadd
pop
repnz
pop
fsqrt
and
xor
jo
push
xchg
add
inc
sbb
scas
dec
je
sbb
cmc
inc
sbb
movsl
dec
mov
lea
inc
sub
sahf
inc
bnd
fs
mov
jp
into
loopne
popa
cs
xor
cli
xlat
sub
js
push
sti
addr16
push
mov
jle
sarl
cmp
fistpll
and
sbb
sub
mov
push
outsl
mov
arpl
push
test
cmc
xlat
movsb
dec
mov
addr16
lds
mov
lret
icebp
jae
imull
fisttpl
or
daa
push
jno
daa
xlat
push
mov
mov
icebp
or
ds
inc
or
pop
xlat
inc
into
std
clc
lock
das
repnz
out
dec
data16
mov
les
stc
lds
shlb
test
mov
lods
int3
push
mov
cmp
out
mov
pop
push
mov
stos
mov
and
adc
and
icebp
sub
je
icebp
adc
lret
jmp
pop
or
iret
shlb
sar
lahf
pop
cmp
mov
jno
inc
or
jle
into
dec
inc
mov
sbb
test
dec
push
int
push
or
sub
mov
xchg
test
xchg
sar
push
push
xor
jle
adc
push
fs
adc
call
cmp
cmc
xor
cmp
xchg
clc
sub
xchg
add
xor
adc
mov
ficoml
or
test
push
add
repnz
jle
mov
and
mov
and
repz
shrl
dec
scas
outsb
inc
mov
mov
fsubs
sub
xchg
loop
mov
fwait
bound
push
arpl
xchg
dec
js
dec
stos
pusha
jno
cmpsb
sub
jo
in
pop
adc
mov
dec
js
adcl
enter
outsl
f2xm1
pop
in
sbb
lock
inc
mov
dec
mov
sbb
push
jp
mov
ljmp
dec
shlb
cmp
cli
xor
inc
xchg
cmp
sbb
push
scas
lea
jmp
push
insb
pop
test
lds
stos
mov
push
bound
mov
jne
lcall
iret
in
cmp
in
pop
sub
inc
jecxz
aad
test
sbb
inc
dec
in
aaa
push
decb
fldcw
je
push
mov
adc
pop
pusha
test
lds
xor
scas
inc
repz
add
sbb
xchg
jbe
mov
pop
jmp
lahf
adc
popf
mov
sti
test
shlb
sub
imul
out
jb
jp
inc
in
add
rcrl
or
mov
xorl
int
jg
pop
test
add
data16
das
pop
int3
and
mov
inc
jne
mov
repz
or
mov
sub
mov
jmp
sbb
pop
cmp
cmpsb
add
pop
ret
data16
fs
jmp
mov
inc
dec
aaa
and
rcrl
ljmp
fsubrs
outsl
inc
and
dec
test
pop
mov
lea
mov
mov
mov
and
jle
jbe
push
cmpb
mov
imul
popf
stc
and
sbb
pop
or
test
fsubrs
sub
mov
adcl
cli
aam
mov
in
add
and
sti
sbb
arpl
push
xor
and
icebp
mov
mov
das
jle
rorl
push
les
adc
jbe
inc
mov
ds
dec
add
das
mov
pop
int
lea
cmpsl
add
jl
mov
mov
test
pop
cmp
mov
sub
sub
pusha
adc
sbb
xchg
mov
jo
scas
jmp
pop
sub
cltd
sbb
add
inc
jae
fwait
or
add
popa
mov
cmp
xor
mov
pop
mov
cs
inc
dec
push
and
cli
dec
xchg
cmc
or
sarl
pop
cmpsb
fwait
pop
xchg
push
cltd
pop
xchg
pusha
dec
jmp
pop
jecxz
pop
push
cld
jmp
adc
xchg
jecxz
add
sarl
in
lock
sbb
ds
arpl
dec
or
push
adc
or
adc
xorl
imul
jo
inc
rcrl
fs
nop
pushf
inc
sbb
mov
in
ficomps
arpl
push
sub
sbb
inc
jnp
pop
mov
pop
inc
das
fsubr
push
lahf
loopne
fildl
or
popa
inc
fs
mov
jne
pop
sub
mov
icebp
shrb
cld
mov
ja
jns
mov
lock
mov
mov
mov
lods
iret
ss
outsb
or
test
insl
pop
pusha
jecxz
sbb
add
rcrl
mov
push
lods
sbbb
fnsave
mov
leave
mov
mov
imul
mov
jo
mov
lods
xchg
push
mov
cmpsl
fstpt
jbe
mov
inc
sub
jmp
les
cmp
sub
cmpl
and
lods
pop
movsb
cmp
cmp
mov
movsb
pop
daa
cmpsl
push
es
or
icebp
mov
sahf
fdivs
mov
movsb
lret
dec
inc
mov
mov
int3
movsl
mov
dec
gs
out
xor
sahf
outsl
les
sbb
cltd
cmp
lea
sbb
cmp
mov
rolb
sbb
dec
xor
subb
ret
hlt
cld
scas
dec
inc
adcl
dec
mov
nopl
aad
mov
add
add
mov
mov
fs
outsb
iret
iret
jecxz
pop
cmc
and
addl
icebp
pop
out
jg
popa
shl
stos
mov
adc
in
jnp
fcomps
lock
add
push
int
mov
ret
adc
xor
pushf
and
and
int
push
cmp
bound
inc
sbb
addr16
aam
js
lods
cmp
rcrb
sbbl
cmp
scas
cmpl
jge
push
loopne
loopne
jg
pop
xor
xor
inc
push
dec
push
pop
insb
out
adc
addl
daa
add
mov
cli
lods
in
cmp
jo
daa
fidivrl
fstl
jns
insb
cmpsb
dec
inc
scas
scas
jnp
loopne
stos
inc
jb
push
sarw
test
mov
movsb
icebp
mov
imul
in
aas
daa
in
movaps
adcb
inc
dec
inc
push
push
sbb
jns
mov
imul
jp
sub
xchg
outsb
in
xchg
sbb
pop
pop
clc
jmp
rolb
sub
sub
add
or
fcoml
jl
jp
ja
and
repnz
pop
js
andb
jecxz
xor
sar
call
movsb
dec
rclb
lea
add
jbe
add
std
icebp
repnz
xchg
in
loope
loope
nop
xchg
and
adc
pushf
cmp
add
mov
dec
ss
and
jge
adc
call
in
mov
xchg
out
shll
imul
jle
adc
cmp
loop
push
sub
jecxz
arpl
push
jl
cmp
push
sbb
inc
aas
mov
cli
fs
jnp
aaa
sahf
mov
stos
mov
cmpsl
pop
dec
mov
dec
inc
test
mov
movsb
or
in
xlat
lods
aas
int
pop
jne
xchg
fsubs
test
adc
in
in
mov
sub
mov
insl
cmc
cmp
jp
xor
fimull
iret
arpl
cmp
or
jmp
mov
inc
jb
flds
xor
jle
dec
and
cmp
nop
cmp
push
sbb
aaa
cwtl
or
adc
das
jle
dec
or
fadds
ret
out
imul
mov
fnstsw
addr16
or
stos
pop
scas
or
das
shl
int
leave
cmp
push
arpl
sbb
pusha
loope
fsubp
pop
dec
cmp
pusha
rcrl
xchg
dec
and
daa
pushf
mov
andb
mov
movl
popf
push
jno
in
xlat
hlt
mov
popa
addb
jge
in
pop
imul
sarb
cwtl
or
inc
stc
mov
or
dec
and
push
push
jne
mov
sahf
aaa
icebp
not
xchg
lea
in
adc
icebp
add
shll
icebp
test
cmpsb
push
ret
sub
or
jnp
push
stos
push
mov
xchg
mov
shrl
mov
out
das
pusha
int3
sub
scas
add
jecxz
adc
push
imul
sarl
add
xchg
jo
cld
or
or
orl
jbe
outsl
sbb
dec
adc
push
fnsave
and
mov
mov
mov
push
add
daa
mov
jns
ljmp
loopne
arpl
sub
cmp
add
adc
lcall
sub
jno
xor
mov
or
shl
dec
xor
pop
inc
sub
arpl
adc
dec
sbb
cmp
sbb
insl
scas
movsl
jmp
lcall
and
std
adc
in
enter
addb
pop
mov
dec
jge
jne
xlat
lock
dec
and
mov
fldlg2
mov
pop
sbb
iret
mov
mov
sub
xor
ret
test
cld
cld
jmp
lea
jecxz
insl
lcall
fwait
nop
dec
inc
or
mov
fcmovu
movsl
sbb
fsubrs
dec
dec
cltd
dec
dec
pop
pop
loope
mov
cmc
ret
adc
mov
bound
je
sbbl
inc
popa
pop
pop
fwait
dec
add
out
mov
push
je
push
je
mov
mov
cmp
daa
pop
out
xchg
dec
xchg
and
sbb
les
lea
adc
mov
xchg
std
andl
pop
cmp
mov
mov
mov
test
adc
ret
lcall
sbb
arpl
push
or
cmpsb
and
mov
pop
cmpsl
or
cltd
les
pop
insb
xchg
faddl
xchg
inc
add
lds
fstps
mov
pushl
andb
repnz
loop
stos
inc
dec
fistps
xchg
sbb
pushf
nop
and
bound
stos
subl
push
call
mov
add
sbb
and
ss
cmp
cmp
movsb
movsl
sbb
shrl
sub
mov
xor
mov
and
test
mov
inc
out
mov
outsb
movsl
or
and
push
sahf
add
mov
sbb
sub
addl
xorl
sub
int3
sub
movsl
mov
xchg
popf
adc
dec
dec
aam
cs
ss
pop
mov
mov
test
xor
mov
leave
mov
lahf
cld
mov
scas
mov
jnp
xor
shlb
pusha
aaa
jb
add
jnp
fstpt
adc
sahf
out
push
add
xor
test
hlt
arpl
push
pop
roll
lret
popa
jle
rol
cmp
push
or
into
icebp
popa
imul
test
mov
pop
lret
scas
int
cmc
jo
sub
and
pop
jo
adc
lds
mov
jle
mov
js
pop
dec
mov
lret
and
xchg
mov
mov
cmp
push
xor
push
test
xchg
leave
imul
aaa
loopne
icebp
push
xor
repnz
add
lock
mov
je
pop
js
fldcw
jne
aaa
adc
cld
fdivr
sbb
mov
ss
push
mov
xchg
inc
pop
pop
pop
jge
sub
inc
mov
mov
jp
or
mov
loop
adc
or
outsb
dec
dec
fwait
dec
dec
bound
and
dec
inc
jbe
hlt
in
inc
pop
mov
sti
jp
jecxz
pop
loope
pop
or
lds
inc
addr16
imul
stos
in
mov
test
ja
mov
outsb
cmp
push
das
dec
loope,pn
sbb
outsl
and
xchg
dec
xchg
add
in
adc
or
ss
jb
aas
jle
inc
icebp
sbbb
shlb
inc
and
das
push
insl
mov
adc
xchg
or
push
jp
insb
adc
outsl
push
cwtl
cs
cmc
ret
in
cmp
test
sbb
pop
pusha
sbb
repnz
stos
push
lahf
push
fs
mov
test
or
mov
dec
or
pop
mov
lret
xchg
repnz
jmp
stos
cmp
aad
jmp
test
adc
je
xchg
loop
adc
leave
jo
push
xchg
xchg
sub
ds
dec
notb
sbb
jnp
mov
and
fs
adc
jmp
inc
add
push
cwtl
xlat
add
gs
inc
stc
lock
push
cld
xorl
jge
jmp
int
mov
icebp
jno
push
test
jp
icebp
push
sub
xorb
jl
sbb
cwtl
push
shll
mov
sbb
iret
push
jbe
les
push
mov
jl
cld
dec
roll
push
in
push
mov
mov
incl
inc
inc
adc
lahf
xor
sub
sub
sub
mov
mov
and
std
outsb
negb
into
addr16
andl
sbb
pusha
icebp
sub
adcl
je
adc
and
push
pop
int
insb
hlt
push
lock
cmpsb
in
les
pop
ss
mov
mov
xchg
aaa
push
cld
cmp
xor
xor
inc
and
push
mov
pop
cs
lea
or
ror
enter
inc
je
sbb
ljmp
in
add
sub
je
insb
jmp
sbb
jecxz
pop
xchg
jno
addr16
dec
ret
mov
fimull
repz
arpl
and
pop
mov
test
mov
sti
mov
and
xlat
mov
pop
int3
or
xchg
call
push
or
jmp
and
dec
adc
sbb
aas
sbb
pop
dec
insb
sub
std
ljmp
pop
mov
and
lcall
push
mov
daa
test
mov
rol
or
std
mov
mov
jno
stos
jnp
loope
icebp
mov
fwait
inc
xor
sbb
mov
ss
or
fistps
lea
mov
adc
jecxz
or
jl
in
jp
pop
inc
cmp
and
mov
push
test
into
mov
inc
in
mov
push
or
es
rorb
in
mov
add
loop
rolb
jo
push
movb
add
cmp
inc
and
mov
sbb
movsb
jae
xchg
clc
rcr
mov
cli
jl
mov
xlat
pop
cmp
pop
dec
lcall
jnp
sub
or
popf
fisubl
ret
or
mov
pusha
popf
pop
sbb
loop
clc
fs
aad
mov
or
arpl
jmp
mov
xor
jno
fimull
sbb
cmp
mov
xlat
out
enter
pop
fcoml
xchg
pop
insl
jp
fs
shll
xlat
in
jp
ss
sbb
fildl
xor
cltd
inc
hlt
jle
mov
inc
mov
xchg
gs
push
inc
cmpsb
insl
stos
jl
push
ret
lods
popa
mov
xchg
xchg
and
mov
lock
sub
mov
mov
inc
pop
aas
push
or
stos
push
idivl
inc
subb
pop
imul
pushf
add
dec
sbb
and
ds
push
and
cld
es
push
xchg
fucompp
test
pop
bound
or
inc
mov
mov
out
ror
lret
sbb
dec
lds
in
sub
dec
and
fwait
testb
enter
adc
repnz
dec
xchg
and
pop
push
sar
insb
ja
inc
pop
sbb
mov
test
iret
fsubrs
sbb
sbbw
or
jnp
int
sub
inc
notb
dec
test
pusha
or
cmp
add
mov
mov
or
mov
jno
and
das
jns
xchg
adc
loopne
flds
movb
in
adc
mov
cmp
sbb
daa
and
aaa
xchg
add
das
cmp
iret
pop
mov
aaa
push
mov
lcall
mov
jb
inc
cmp
xlat
loope
push
inc
and
dec
push
push
fistps
call
out
inc
int3
cwtl
aam
test
xchg
cmpsl
sbb
adc
les
and
or
cld
adc
and
imulb
rorl
jbe
sub
js
in
loope
pop
incl
in
mov
push
ret
imul
insl
mov
lds
mov
gs
lea
inc
jmp
inc
std
mov
push
es
ret
arpl
hlt
jecxz
icebp
lock
dec
out
and
cmp
cmp
loopne
jnp
lock
dec
stos
mov
roll
ljmp
sbb
mov
rorl
push
sub
insb
cs
mov
cmp
aam
movsb
dec
inc
js
fsubs
icebp
lock
jo
test
adc
ret
xchg
js
adc
pop
int3
fcmovbe
and
or
mov
jle
cmp
test
jecxz
lcall
cmp
sub
icebp
call
mov
dec
dec
loope
cs
arpl
or
push
loop
push
jecxz
jno
and
lea
cmpsb
and
xchg
cmp
fdivrs
rcrb
push
enter
mov
lret
cs
adc
cli
adc
cmp
std
jb
movsb
push
imul
lds
jmp
xchg
ror
lds
rcll
dec
sub
xchg
out
xor
aaa
add
in
xchg
jp
outsb
pop
pop
pop
cmpsl
pop
frndint
add
xchg
mov
xchg
sbb
jle
in
pop
and
adc
adc
ret
push
popa
pop
icebp
mov
mov
loope
jl
scas
cmp
jl
loope
dec
test
and
loope
inc
jbe
dec
js
fs
das
js
rclb
sub
sbb
inc
push
ficoml
mov
lods
adc
in
push
out
xchg
jb
loopne
sahf
sub
popa
fisttps
psrld
cmc
cld
inc
fwait
lahf
cmp
jo
add
push
mov
adc
icebp
shlb
clc
pop
inc
ljmp
adc
addr16
fs
mov
push
mov
aam
aas
and
or
jae
fcom
fsubrs
pop
scas
sti
test
sbb
lock
push
lret
aas
cmp
cmp
pop
and
mov
add
mov
jno
aam
dec
xor
cmp
pusha
add
sbb
in
mov
push
cpuid
loope
loop
push
push
xchg
fcompl
aam
pop
lods
adc
lods
enter
popa
xor
mov
jae
je
add
lcall
jae
leave
pop
dec
lock
shlb
fdivs
mov
pop
push
inc
jmp
lret
daa
scas
jmp
jl
mov
pop
pop
mov
ficompl
push
and
popa
jmp
mov
loopne
dec
stos
cwtl
add
mov
iret
aaa
sbb
data16
xchg
adc
in
push
jmp
push
clc
loopne
pop
sbb
xor
insl
ss
mov
das
mov
cld
lock
pushf
aad
int
xacquire
cmp
xor
rcl
inc
lock
je
sub
and
test
ja
jns
hlt
rcrl
mov
addr16
fwait
xor
and
add
jecxz
pop
loope
leave
adc
mov
aam
incl
mov
repz
inc
cmp
inc
daa
push
mov
popf
add
stc
insb
and
pop
imul
sub
cmc
test
lds
or
or
in
xor
es
push
or
sysexit
push
call
call
mov
inc
pop
mov
jecxz
dec
inc
jno
pop
in
push
cmp
dec
and
add
into
add
fcoms
mov
lock
and
mov
pop
adc
and
jno
fldl2e
cmpsb
mov
fwait
cmpb
sbb
mov
push
and
imul
cmp
punpckhwd
xor
into
sbb
sub
adc
leave
mov
inc
arpl
ficoms
inc
pop
jmp
inc
sub
out
or
and
jge
add
mov
push
iret
cmp
mov
dec
inc
mov
adc
add
pop
mov
adc
xchg
int
push
or
rcrl
addl
sbb
rcl
mov
orl
inc
adc
dec
ja
stos
push
nop
dec
adc
pop
test
dec
xchg
fiaddl
pop
clc
test
sbb
hlt
decl
dec
and
popf
and
inc
pop
jg
sti
aas
xor
ds
pop
arpl
lcall
outsl
mov
sub
cmpl
inc
and
inc
int
out
iret
gs
gs
incl
jmp
and
xor
mov
leave
das
or
mov
out
sub
sbb
rclb
cmpsb
in
add
movsl
or
or
dec
shll
call
in
push
xchg
lahf
out
jo
js
aad
pop
addr16
jge
or
iret
xchg
subl
mov
add
cli
sub
xor
mov
jnp
daa
sbb
push
out
sbb
xor
adc
pop
adc
mov
push
fstl
dec
xor
push
ror
jmp
das
mov
popf
adc
stos
cmc
ret
sub
inc
enter
jo
cmc
push
inc
sar
dec
punpckhwd
daa
sbb
xorl
xchg
les
inc
fnstsw
test
or
pop
jge
into
fsqrt
mov
jmp
cltd
mov
movsb
fsubl
icebp
lret
lock
js
or
xor
cmp
or
push
xchg
nop
mov
sub
test
test
inc
in
inc
jg
adc
dec
inc
push
mov
std
dec
enter
cld
es
fbstp
insb
cli
pop
lds
in
pop
cmp
xchg
push
scas
adc
and
mov
push
repz
mov
fcomp
lds
lea
xlat
fisubrs
add
test
add
and
jge
fildll
jne
jle
ja
adc
in
adc
imul
repnz
test
insl
push
pop
ficoml
pop
mov
cs
sub
or
xchg
xchg
push
movsb
push
mov
adc
cmc
mov
pushf
mov
leave
and
roll
add
iret
xchg
cwtl
jle
rcr
jb
adc
movsb
xchg
sub
insb
aas
push
movsl
pop
or
sti
push
rcr
dec
pop
dec
and
je
scas
inc
xchg
mov
and
xchg
sbb
push
sub
lock
push
inc
cld
mov
adc
js
insb
insb
dec
popa
push
inc
xlat
fidivl
insl
push
jbe
add
clc
shlb
pop
ret
fsubl
push
stos
cmpsl
mov
gs
xchg
aam
push
data16
xchg
lods
ljmp
jno
sbb
rcl
xor
mov
shrl
inc
ja
sub
add
adc
jmp
call
js
outsl
adc
xchg
xchg
mov
xchg
xor
push
xchg
inc
int
popf
inc
cmpsl
and
mov
and
outsl
jno
sub
cmp
and
repz
cwtl
mov
ss
jle
dec
rcrl
push
movsb
arpl
and
pop
lret
div
test
xor
xor
or
pop
lea
inc
ret
pop
imul
iret
adc
add
arpl
loope
sti
pusha
and
pusha
aaa
and
cmp
xchg
aaa
pop
sti
or
xchg
aaa
push
ljmp
add
test
cli
xor
popa
jbe
popa
test
lds
or
adc
fmul
pop
sub
add
std
pusha
mov
iret
in
mov
mov
sub
ret
mov
ljmp
pop
dec
ret
addr16
mov
frstor
add
pusha
inc
sbb
inc
mov
into
enter
mov
mov
sbb
inc
xchg
and
and
and
or
inc
fisttpll
nop
jnp
ds
push
sub
daa
sub
mov
mov
rolb
jmp
ja
push
mov
or
cmpsb
orl
aas
shrb
rclb
rcrl
aam
inc
loop
mull
stos
sub
std
cmp
jbe
push
push
jae
cli
jno
es
jle
rcll
push
or
test
sbb
adc
inc
mov
push
jae
mov
mov
pop
xlat
dec
aas
aad
lods
and
jae
xlat
xor
cmp
outsl
lret
inc
add
je
xchg
push
pushf
ffreep
or
sbb
push
mov
mov
add
dec
xor
pop
or
push
movl
nop
jg
cmp
xchg
jno
fdivrl
stos
adc
pop
push
jl
mov
and
out
int
xchg
jae
jge
jnp
adc
cmpsb
test
add
adcl
outsb
shr
aad
sarb
mov
stos
inc
mov
rolb
dec
jnp
insb
add
imul
fisubrl
xchg
push
cmp
jp
xor
shll
sub
icebp
jl
pop
dec
lds
pop
mov
pop
das
addl
ljmp
jo
hlt
lods
xor
mov
shlb
add
loop
shll
jno
mov
aaa
mov
xchg
adc
jns
test
mov
call
xchg
or
mov
and
sarb
inc
pop
and
ljmp
mov
in
mov
pushf
hlt
mov
mov
into
mov
mov
pop
inc
inc
xchg
xorb
fisubrs
pop
lret
testl
xlat
inc
dec
jns
clc
add
inc
cmpsl
xor
xchg
dec
repz
add
mov
add
fsubl
jmp
mov
dec
sahf
sbbl
lods
cmpsl
dec
insb
aas
test
mov
mov
jo
xor
sbb
sbb
fcomp
mov
cmp
xor
add
jo
cltd
stos
inc
aad
adc
rorb
ds
push
and
push
test
and
xor
mov
cmpsb
rolb
lret
dec
in
and
mov
add
mov
imul
out
dec
aam
dec
xchg
shrl
test
aaa
and
sbb
push
push
sbb
scas
sub
xor
dec
rclb
aad
lock
jne
daa
inc
loopne
or
pusha
testl
adc
pop
mov
xchg
or
push
dec
pop
jne
pop
bound
adc
and
rolb
into
test
jecxz
scas
lods
dec
cmp
or
jnp
mov
fbstp
cltd
mov
mov
adc
cld
repnz
and
insl
pop
in
out
mov
cmpsb
push
stc
test
imul
call
imul
add
inc
mov
jo
mov
jle
fnstenv
xchg
call
jae
es
xchg
nop
mov
or
xor
sbb
inc
sub
fincstp
cli
push
sbb
pop
test
cltd
jle
dec
ret
xorb
push
shlb
mov
movsl
ja
js
xor
xor
les
mov
in
xchg
xor
daa
sbb
jmp
push
sbb
pusha
test
lahf
into
loopne
bound
and
std
mov
lcall
lds
or
insb
clc
adc
out
or
add
xor
fidivl
sub
jnp
hlt
dec
xchg
xchg
cmpsl
popa
or
cmp
mov
sbb
mov
mov
mov
mov
jnp
xchg
into
rcrb
xor
sbb
sbb
enter
pop
js
jo
nop
and
add
sbb
cwtl
and
int
lcall
jne
push
pushf
inc
imul
cmp
ljmp
ret
fsts
ds
ja
fstps
int
insb
jg
push
dec
call
outsl
mov
and
adc
loope
dec
xor
subb
jmp
sbb
ret
dec
mov
insb
leave
fs
add
xchg
test
cmp
stos
cwtl
lret
dec
out
dec
push
inc
dec
int
stos
dec
repnz
fistl
movsl
mov
fisttps
aas
sbb
push
push
push
adc
fcmove
and
cli
cmp
repz
loopne
mov
dec
or
add
fdivrl
cld
cs
pop
dec
bound
je
inc
dec
jbe
dec
pop
loopne
je
and
jmp
add
sbb
sbb
loop
mov
jp
jbe
cmc
sahf
repz
rorl
or
bsf
mov
sub
int3
cmp
jns
imul
loopne
cmp
clc
outsl
addr16
das
push
xor
and
fsubs
xor
leave
sbb
pop
rorl
jne
div
dec
sub
xor
data16
ja
repz
xchg
mov
aam
movlps
pop
pop
nop
insb
jecxz
fcmove
icebp
popf
xchg
push
cltd
fisubrs
jae
je
cmp
dec
iret
int3
or
dec
mov
stos
std
add
xor
lret
mov
mov
xchg
scas
jae
nop
std
mov
jecxz
xor
shll
jl
add
push
inc
fwait
stos
lcall
or
add
inc
pop
push
sahf
inc
andb
arpl
push
ljmp
adc
jae
inc
dec
pop
pop
loopne
cmp
cmp
aaa
add
jecxz
sbb
fmul
jp
or
push
push
dec
sub
xorb
fnstcw
loope
sbb
bound
aam
jge
stos
jns
pop
mov
arpl
loope
cs
cmp
orl
xchg
add
push
mov
adcb
hlt
mov
aam
and
adc
arpl
dec
add
fists
mov
inc
stos
mov
jle
adc
inc
outsb
sub
inc
pop
push
jecxz
rcr
cmp
cmp
movl
jecxz
sbb
and
xchg
cmpl
pop
xor
sahf
scas
xor
test
jbe
nop
xchg
mov
mov
or
sbb
cltd
sub
mov
in
jle
mov
add
aam
mov
adc
pop
xchg
mov
mov
and
mov
data16
xor
movups
outsl
or
sbb
shr
push
sub
test
sbb
test
fidivrs
in
mov
mov
lock
push
lcall
ljmp
dec
adc
push
dec
sbb
mov
aam
xchg
movsb
pop
nop
bound
jecxz
jmp
push
enter
in
push
aaa
pop
cmpsb
and
and
cmp
icebp
pushl
and
adcb
xchg
test
sahf
pop
js
pushf
cmp
xchg
or
loopne
fwait
shlb
mov
and
repz
pop
cmp
push
pop
lds
mov
aad
imul
pop
inc
or
jl
adc
idivl
xor
xchg
pop
ss
decl
push
xchg
sbb
jl
or
test
add
pop
cmc
push
mov
and
pushw
mov
cld
in
mov
push
mov
std
mov
lcall
sbb
jp
jecxz
movsb
repz
inc
rorl
push
push
mov
sti
add
jbe
mov
inc
clc
and
cmp
rol
dec
xchg
test
jl
sbb
mov
mov
sub
lahf
mov
inc
insl
mov
scas
jp
push
pop
sub
in
add
xchg
pop
xchg
xchg
pop
mov
test
push
jne
cli
sub
shrb
dec
loope
adc
pop
push
aad
addr16
push
aas
adcb
fwait
add
cmpsl
adc
adc
cmp
and
cmp
in
add
sub
inc
pop
ret
mov
xor
jl
xor
cmc
or
aad
jne
xchg
jne
cmp
js
sbb
jl
aad
mov
sbbl
lret
xchg
stc
sbb
clc
cmc
hlt
pop
push
mov
inc
loope,pt
loope
fisubl
notb
in
add
sbb
in
std
movsl
das
cmp
daa
je
push
clc
push
push
xlat
je,pn
jp
jmp
jp
testb
in
cli
mov
or
or
or
movsb
ss
sbb
stos
xchg
xor
iret
jno
into
sbb
ds
ficomps
mov
pop
stos
push
scas
out
jg
lret
in
popa
and
addr16
cwtl
and
pop
sbb
pop
push
lea
push
inc
imul
push
std
daa
les
bound
jns
cmp
jmp
loope
popf
push
cmp
push
lea
mov
mov
xor
jle
mov
xor
shl
xor
bound
aas
call
push
fsubp
cmp
mov
mov
pop
sbbl
nop
mov
pop
clc
mov
push
xchg
xchg
sbb
and
pop
mov
pop
mov
cmc
shl
mov
sbb
push
scas
pusha
loope
sbb
mov
pop
pop
pop
ljmp
mov
stc
rclb
inc
mov
push
ja
push
mov
addl
das
pusha
lock
shl
in
jge
mov
cmpsl
in
test
xorb
xchg
push
shll
shlb
test
daa
or
or
je
mov
stos
icebp
sub
mov
sub
xor
xchg
notl
mov
push
sub
or
dec
cmp
add
and
adc
adc
pop
scas
sarl
push
fmuls
bound
ds
arpl
addr16
data16
shll
jecxz
cmp
out
call
push
sub
adc
mov
arpl
daa
test
and
or
push
push
ss
enter
mov
test
mov
pop
je
repz
flds
cmp
cmp
sub
mov
movsl
movsl
and
lar
js
pop
mov
sub
insl
aaa
sub
test
out
jns
cltd
sbb
jge
pop
jne
inc
addl
arpl
insl
jno
test
cmp
and
pop
jge
fsubr
stos
and
pop
add
loopne
mull
add
mov
out
out
cmpl
loopne
xor
test
xlat
pop
sbb
sbb
mov
push
fsubr
nop
loopne
mov
jmp
jge
cmp
ja
mov
xchg
in
lock
push
inc
cmp
sbb
jo
cwtl
dec
adc
adc
lahf
push
adc
insb
mov
ja
int
adc
pop
pushf
int
ss
mov
stc
dec
xchg
imul
call
push
test
add
push
int
cmp
dec
inc
pop
jo
test
test
inc
mov
dec
and
bound
xchg
cmp
leave
sub
jle
movsb
or
aad
mov
pop
mov
sub
mov
in
jle
xor
in
jno
mov
mov
call
mov
mov
cmp
mov
or
ja
mulb
fwait
pop
adc
pop
push
adc
xchg
lea
loop
fwait
and
stc
pusha
sbb
mov
dec
inc
fwait
adc
mov
mov
push
inc
mov
pop
pop
dec
je
pop
icebp
mov
imul
outsb
lds
add
mov
orb
outsb
cltd
xchg
push
sub
cld
mov
shll
hlt
pop
mov
popf
pop
cmp
dec
fstpt
int
ficompl
int
or
in
lock
adc
aam
arpl
jo
bnd
mov
ss
sub
inc
sbb
add
jb
fdivl
dec
jo
out
jo
data16
mov
loop
mov
or
push
sahf
push
js
jge
mov
push
inc
or
lds
rcrb
jbe
shll
cld
pop
pop
cli
add
es
lahf
negl
test
xor
sub
sbb
cmpb
icebp
cmc
and
loopne
push
mov
in
mov
aas
mov
pop
sub
inc
push
jbe
lods
insl
into
mov
stos
push
jno
ljmp
jo
sub
cmp
out
insl
inc
jb
ds
mov
inc
adc
insb
adc
sub
xchg
lahf
shlb
adc
pop
inc
icebp
adc
dec
jge
mov
push
cmp
scas
roll
add
adc
jecxz
outsl
popf
and
jb
pop
mov
in
cmp
ljmp
and
fs
mov
pop
scas
or
in
arpl
dec
inc
or
movd
adc
aam
push
jle
cmp
or
mov
cmpb
lods
xor
je
pop
loope,pn
inc
hlt
insl
shll
mov
dec
push
xor
or
xchg
loope
add
fsubs
jne
cmp
cmp
lret
loop
pop
aaa
roll
mov
jge
add
aam
into
adc
mov
or
xchg
adc
cmc
and
dec
mov
in
push
push
test
jecxz
inc
ljmp
cmpsl
mov
jae
testb
jae
cs
mov
inc
jl
pop
mov
add
in
push
daa
es
popa
outsl
inc
das
add
xchg
rolb
jmp
out
cmc
jo
js
mov
push
ss
inc
jmp
cmp
shlb
outsl
loopne
ja
aam
pop
add
filds
push
sbb
inc
leave
mov
mov
adc
xor
lods
add
push
pop
or
jno
and
xor
cmp
fucomp
jl
call
std
xchg
add
and
xor
push
clc
adc
adc
test
adc
test
pop
in
aam
xor
lods
add
lcall
xchg
pop
outsb
insb
dec
add
packssdw
test
mov
xchg
xchg
int
lds
or
dec
lods
bt
push
mov
js
pop
je
inc
loopne
pop
negb
or
push
icebp
aaa
mov
test
cmp
inc
cmpsl
pop
sarb
jae
mov
push
ja
xor
cmp
pop
inc
ljmp
es
in
pop
icebp
xchg
outsb
sbb
pop
jo
xchg
pop
lahf
fs
sbb
clc
mov
mov
js
into
and
mov
ljmp
jge
shr
mov
negb
add
flds
mov
sbb
xchg
ljmp
je
pop
push
push
mov
into
ljmp
shufps
mov
incl
and
and
dec
and
pop
sbb
mov
das
or
rolb
xor
out
fwait
pop
in
jbe
mov
cwtl
inc
testl
in
repnz
cmc
loop
xor
mov
mov
adc
or
mov
fmull
sbb
mov
sahf
xor
inc
cmp
aad
pop
sbb
mov
std
jne
icebp
ret
sbb
int3
movb
pop
stos
ficompl
mov
fisubs
inc
add
mov
mov
cmp
sbb
xlat
cmc
pop
aad
test
adc
mov
jp
lds
dec
daa
cmp
ret
test
mov
sbb
lea
inc
insb
scas
std
sub
inc
push
and
mov
jbe
push
pushf
xchg
jmp
inc
dec
sub
inc
cmc
add
dec
xchg
in
das
xor
dec
adc
aam
loopne
into
sti
repz
das
sbb
cli
adc
int3
and
fidivl
mov
push
dec
pushf
xchg
xor
test
loopne
dec
inc
icebp
inc
or
jnp
cli
leave
push
jge
mov
popf
inc
push
ret
mov
int3
mov
movsb
test
mov
outsl
lea
stc
lcall
mov
shrb
ja
adc
or
add
sub
xchg
sbb
adc
pop
testl
sub
sbb
daa
push
inc
jle
xor
mov
add
mov
xchg
mov
aaa
pop
icebp
xchg
mov
and
push
push
sub
call
sbb
adc
xor
loopne
js
repz
add
mov
sbb
es
scas
icebp
dec
sbb
sbb
jmp
xor
popf
add
ret
mov
sar
imul
negb
jns
fimull
dec
push
jecxz
adc
dec
gs
outsb
jmp
clc
loopne
xor
enter
mov
add
pusha
js
shr
xor
mov
rorl
mov
fmull
pop
ds
inc
int
fisubs
pop
bound
insb
pop
cmpsb
enter
pop
bound
mull
cmp
adc
mov
hlt
rcrl
xor
cmp
sub
cmp
jp
jae
loopne
fidivrs
xchg
enter
das
dec
fidivrs
lods
jbe
movsl
jo
dec
insb
daa
outsl
in
out
rcrb
xchg
ds
pop
cli
mov
int
mov
inc
inc
xchg
xorl
dec
sbb
das
popf
pop
add
xchg
and
pop
js
js
and
or
or
pop
cmp
xchg
xor
rsqrtps
rolb
shll
repz
sub
pop
icebp
cmpsl
lahf
xor
clc
aas
mov
pop
fcoms
call
mov
ss
push
aas
psadbw
add
xchg
jo
insb
scas
mov
fdivs
mov
dec
xor
jl
fs
lds
in
jae
bound
outsl
ja
cwtl
jecxz
sub
mov
repnz
mov
ss
testl
jl
popf
push
dec
xor
fisubs
inc
int
bound
lods
js
test
arpl
test
mov
cmp
pop
sbbw
in
cmc
push
jle
stos
jmp
dec
mov
push
aas
fidivrs
xor
scas
shl
stc
fimuls
cmc
je
out
test
jl
push
sub
aad
test
test
dec
inc
call
jp
sbb
mov
mov
pop
loopne
xchg
subb
sub
pop
sbb
xchg
repz
std
and
push
outsl
cmp
inc
cmpsb
xor
sbb
mov
cmp
rclb
pop
cs
push
jne
push
fwait
decl
bound
nop
pop
dec
mov
inc
aaa
mov
aas
sti
icebp
or
mov
push
fwait
mov
cwtl
xchg
or
jmp
rolb
mov
push
fs
mov
scas
dec
add
mov
pop
inc
pop
pop
xchg
xchg
popf
or
xorl
in
in
add
sub
push
imul
xchg
popl
pop
xchg
cmpsb
lea
mov
add
push
clc
dec
dec
push
loope
rcll
mov
mov
xor
test
test
dec
cmp
push
xorb
pop
sbb
sub
fmuls
sbb
in
lahf
cmp
xor
shlb
mov
cld
dec
mov
pop
jo
daa
insl
dec
jo
dec
lock
push
inc
push
cmp
inc
sub
cmp
rorl
lods
test
inc
pop
out
hlt
jns
addb
jp
test
cmp
cmp
aaa
pop
in
ret
dec
push
je
je
push
mov
dec
test
sub
cmc
sbb
icebp
xchg
jno
mov
inc
enter
jo
and
add
add
test
xchg
lahf
fcmovbe
out
sub
push
dec
pop
stc
mov
mov
bswap
mov
lahf
negb
mov
push
sbb
inc
std
shll
sbb
xchg
cs
faddl
mov
cld
out
scas
in
pop
adc
das
in
std
push
arpl
sbb
jl
push
jne
das
shlb
outsl
fcompl
sub
shrl
add
cmp
mov
ror
sbb
add
bound
pop
aam
or
jg
sarb
clc
je
ja
loopne
dec
or
movsl
test
push
push
xchg
xchg
mov
adc
cmp
in
push
sbb
cmp
popa
icebp
xor
pop
mov
xchg
adcb
mov
lret
jb
ja
xor
outsl
lds
and
sti
roll
jmp
fdivr
lock
jle
fstl
fstpl
cmp
mov
and
jecxz
dec
mov
mov
xchg
repz
add
es
jecxz
mov
cs
mov
add
das
int
add
sub
out
aad
inc
sbb
loope
xor
mov
cmp
js
mov
jmp
imul
mov
xor
inc
inc
add
dec
or
jecxz
inc
roll
jg
mov
stos
js,pt
adc
popf
out
cli
rcrb
lcall
pop
dec
mov
aad
dec
inc
lcall
aad
or
push
sbb
push
hlt
sub
push
mov
add
lcall
jge
mov
lahf
push
push
pop
sbb
jno
xlat
mov
ret
sub
je
repz
xchg
adc
sbb
jge
cmpsl
sbb
and
stc
stos
dec
aad
aas
mov
scas
ret
jns
mov
ja
sub
xchg
dec
in
pop
jl
mov
push
adc
push
pop
je
mov
mov
popa
xlat
pop
stos
xchg
xor
adc
insb
or
sbb
jmp
jp
loopne
arpl
push
lret
jl
lea
repnz
cld
xchg
mov
pop
mov
icebp
dec
inc
ret
popf
call
dec
je
fdivs
repnz
aaa
cmp
push
xor
cmp
inc
leave
std
dec
pop
imulb
pop
or
or
test
test
mov
cmp
dec
lock
xchg
and
mov
dec
lret
or
scas
sbb
scas
jbe
pop
cltd
jb
in
mov
scas
jg
shrb
rolb
lcall
testl
xchg
ja
adc
js
fidivl
and
or
into
mov
insl
jb
stos
mov
ret
scas
push
cmp
pusha
aas
mov
xchg
push
sub
les
or
xor
add
pop
jnp
das
mov
inc
decb
adc
mov
or
gs
push
icebp
enter
imul
mov
xor
cwtl
push
nop
mov
sbb
test
mov
aas
call
xchg
shlb
aam
and
xchg
jmp
movsl
lcall
lods
and
jo
notl
mov
pusha
mov
cli
add
test
dec
xor
stos
test
jo
icebp
xor
jmp
sbb
inc
sahf
enter
in
pusha
pusha
adc
mov
xchg
scas
int3
mov
rcll
inc
test
cli
cmp
push
adc
mov
inc
scas
xchg
push
dec
repnz
daa
push
shrb
push
pop
pop
ret
ja
in
lahf
ret
movl
lds
inc
adc
or
pop
push
mov
ret
pop
shlb
aaa
add
mov
add
fistps
lods
test
pop
hlt
adc
mov
mov
push
xor
pop
or
xchg
sbbl
fdivrs
lock
mov
jne
cwtl
mov
out
data16
sti
mov
test
jmp
cmc
pop
inc
adc
frstor
xor
in
mov
xlat
sub
mov
rclb
jmp
ja
out
jmp
aad
pop
dec
lock
or
rol
arpl
mov
stos
sbb
cmpsl
aas
gs
mov
xchg
mov
int
lea
mov
mov
mov
je
xor
jno,pt
clc
stos
mov
xor
std
or
inc
ret
lods
cwtl
gs
loopne
or
sbb
xchg
call
fwait
jmp
dec
xchg
pop
aad
mov
test
or
cmpsb
bound
cmpl
pushf
in
hlt
mov
es
or
xchg
mov
cmc
js
fninit
jbe
push
clc
cmp
loopne
movsb
icebp
push
rcrl
lock
div
cld
lea
dec
mov
inc
sbb
mov
mov
cmpsb
add
test
or
push
hlt
adc
cli
mov
aam
cmp
mov
stos
inc
or
adc
push
and
aam
rorb
das
sub
cmp
sub
push
dec
call
fucomi
jge
adc
inc
es
js
sbb
pop
fimuls
push
mov
inc
xchg
clc
xor
arpl
test
or
push
cmp
mov
or
cmpsl
mov
inc
mov
mov
push
je
fistl
xchg
jge
pop
adc
mov
add
sub
out
movsl
sti
inc
cmp
inc
mov
push
cs
adc
pop
and
inc
fimuls
lods
jmp
mov
sub
mov
fisubrl
icebp
push
mov
pop
xchg
out
mov
jne
sub
outsb
and
rcrl
xchg
push
insl
adc
pop
pusha
sti
shrl
lds
ja
push
add
lods
lret
imul
insb
cwtl
jl
xchg
cmpsb
and
jl
aam
insb
test
and
xlat
daa
data16
insl
inc
xchg
push
pop
or
and
adc
cltd
rorl
idivl
into
inc
or
test
js
scas
cmp
xor
mov
push
mov
shlb
jne
or
inc
mov
aaa
cwtl
inc
and
int3
inc
jg
xlat
pop
add
aaa
sarb
ret
int3
or
xor
js
cmp
cmp
or
daa
fistl
or
add
data16
and
popw
sub
iret
ret
fdivs
dec
in
mov
cmc
dec
xor
loope
stc
xor
roll
js
cld
lret
lods
push
sbb
adcb
inc
in
cli
imulb
fstpl
cmpsl
mov
cmc
in
scas
gs
inc
inc
pop
mov
push
push
add
dec
sbb
adc
pop
arpl
decb
fdivr
testb
xchg
int3
or
aaa
int3
cmp
popf
outsl
add
call
jnp
sub
push
sub
subl
je
test
das
pop
sub
repnz
push
dec
mov
popf
push
aad
aad
pop
jae
cltd
fisttpl
pop
mov
push
mov
orl
add
xor
inc
jecxz
or
arpl
push
dec
dec
or
decl
fucomp
in
push
je
add
pop
jl
mov
shll
xchg
adc
enter
andb
imul
jl
movsl
nop
mov
jns
mov
adc
mov
jg
andl
pop
outsb
cld
fstpt
mov
cmp
or
icebp
ret
jb
add
and
inc
stos
sarl
pop
mov
loopne
xor
add
hlt
and
sbb
aam
lahf
fildll
std
mov
sbb
jg
adc
notb
cmpb
jl
and
mov
mov
and
adc
jecxz
in
arpl
and
or
add
adc
mov
daa
in
es
stc
cmp
imul
mov
cmp
lea
and
cmpsb
in
push
rcl
fadd
cmp
adc
call
movsl
pop
xchg
mov
out
or
scas
mov
sbb
fidivrl
or
jne
stos
shrl
dec
fs
mov
or
in
jae
jnp
loopne
mov
xor
jbe
xchg
push
sbb
daa
jno
adcb
dec
roll
dec
fisttps
add
sbb
lock
push
pop
jecxz
dec
pop
lret
xor
pminub
jmp
in
repnz
pusha
xrelease
mov
das
pop
mov
ds
mov
adc
dec
add
dec
scas
ret
mov
pusha
xor
jl
pop
push
pushl
dec
add
adc
repz
decl
ljmp
fwait
sbb
popa
mov
je
outsb
xchg
dec
cli
psadbw
fdivl
ret
jne
adc
lcall
dec
scas
xor
and
ficomps
dec
imul
sbb
add
int
xchg
jmp
gs
das
lds
xchg
fisttpl
shl
xor
roll
add
push
popf
call
sbb
stos
sub
sahf
inc
jmp
popf
sbb
lods
out
and
push
cmpsl
ret
cmpxchg
sub
fs
pop
inc
je
mov
dec
int
adc
xor
xchg
mov
cmpb
mov
call
popa
or
fidivrs
add
adc
shlb
cmp
popa
hlt
pop
mov
out
jg
leave
xor
dec
aas
or
sbb
xchg
push
and
mov
shrb
pushf
push
mov
fstps
and
mov
mov
mov
fists
cmpsb
movsl
mov
test
aam
pop
mov
sbb
lcall
arpl
sbb
mov
js
lock
add
lds
aad
pop
mov
jae
leave
and
test
int
js
test
push
es
idivl
xorb
mov
fisttps
jg
xchg
outsl
jae
aaa
mov
and
add
pop
pop
cld
sub
sub
insb
flds
cmc
arpl
or
pop
add
aaa
jecxz
es
arpl
stos
adc
insl
orl
mov
push
dec
dec
sbb
arpl
push
push
cmpsl
test
out
daa
mov
loope
mov
xchg
or
push
inc
dec
xchg
push
pusha
or
jmp
ret
fcompl
or
xchg
fadds
pop
ds
mov
xor
shl
or
xor
push
addr16
mov
mov
cmp
adc
iret
dec
and
ret
pop
sbb
mov
dec
jno
loopne
mov
xchg
shll
je
daa
jb
adc
xchg
sbb
xor
mov
or
mov
outsb
insb
ja
push
and
mov
pop
add
inc
decb
push
ret
cmp
fdivr
repz
inc
add
inc
xchg
stos
dec
mov
jmp
icebp
in
out
xchg
gs
dec
pop
outsb
sbb
mov
cmpsb
mov
mov
add
loope
cmpsl
lea
xor
push
pop
aaa
push
cmp
out
mov
mov
mov
imul
sbb
cs
or
xlat
sbb
dec
lahf
enter
xor
adc
push
call
sbb
pop
loope
jae
or
test
pusha
or
popf
or
js
int
cmc
shlb
jbe
jle
push
loop
push
and
xor
adc
and
js
repnz
add
mov
cmp
lcall
daa
adc
push
fdivrp
loope
pop
xchg
fildl
adc
lret
movsl
lahf
popa
and
xchg
enter
test
adc
xchg
add
jge
aas
mov
push
insl
divl
mov
jmp
mov
adc
mov
stos
sbb
fildll
xor
or
lret
idivl
inc
cmpsb
fmul
adc
push
adc
shlb
push
and
sahf
loop
inc
adc
sub
imul
cmc
jmp
jp
add
fstps
mov
shlb
inc
and
jbe
aad
mov
mov
ficoml
movsl
jns
jo
inc
pusha
sbb
sbb
add
aas
push
push
mov
call
dec
mov
sahf
fistl
add
lret
push
popf
push
test
xor
pop
jmp
jecxz
js
jb
xchg
sub
or
bound
fisttpll
or
loop
cmp
mov
xchg
fbld
cmp
pop
shl
adc
pop
repz
xor
popa
mov
adc
xor
dec
lea
sbb
adc
shlb
imul
or
inc
rcll
test
push
push
lret
xlat
sub
mov
lock
aas
sbb
cmc
push
add
test
mov
mov
add
mov
xchg
lods
pop
push
xchg
rep
mov
fcmovbe
shll
push
and
sbb
pop
test
xlat
lcall
xlat
test
test
lcall
xchg
out
cmp
test
lret
cmpsb
scas
pop
shll
lahf
hlt
add
mov
fadd
mov
mov
xor
test
inc
push
fsubrs
fdivrs
icebp
push
icebp
shll
les
or
js
loope
add
mov
push
mov
jg
dec
fcmovb
cmp
dec
loop
fstp
jmp
cmp
push
jb
mov
pop
cmpsb
sbb
sbb
mov
adc
adc
les
and
jp
loop
xchg
mov
mov
mov
popf
mov
mov
sub
dec
dec
ljmp
bound
lea
pop
shl
insb
mov
jo
add
scas
aad
mov
shll
mov
or
cmc
inc
mov
xchg
orb
dec
js
pop
in
jle
ret
mov
inc
cltd
pusha
nop
add
leave
int
es
pop
lahf
out
int3
aaa
add
xchg
cltd
pop
jmp
lds
std
je
hlt
hlt
dec
adc
jnp
push
xor
mov
cmp
ss
scas
fs
xchg
lock
outsl
pushf
repz
jecxz
jnp
int3
outsb
inc
and
nop
cmp
lahf
lds
inc
dec
lea
cmp
in
les
sub
pop
mov
icebp
fstpl
mov
and
iret
push
ljmp
cwtl
rorl
dec
push
lcall
push
repz
mov
lret
add
sbb
addl
xchg
pop
jle
std
daa
mov
lea
ss
popf
fildll
lock
addb
cltd
les
mov
repz
in
lods
mov
and
mov
dec
mov
icebp
rcll
js
test
iret
pop
js
adc
mov
inc
hlt
enter
sbbb
sti
lds
cmp
shll
insl
cli
add
push
nop
and
stc
add
pop
or
ja
leave
xchg
jne
dec
xchg
call
push
xor
or
jge
push
popa
jbe
je
cmp
pop
mov
sbb
stos
mov
int
adc
cmp
ljmp
sub
fucomi
adcl
inc
add
push
dec
mov
test
sub
scas
mov
inc
add
movsl
fwait
mov
jp
pusha
xchg
add
jge
in
push
pop
jecxz
mov
push
ficomps
xor
mov
mov
mov
out
inc
lock
push
inc
pop
or
ficomps
insb
inc
enter
mov
pop
push
imul
sarl
jle
adc
pop
cli
ret
and
loope
cmp
sub
mov
into
es
adc
rcrl
addb
cmp
idivl
cmp
xchg
add
adc
mov
ret
pushf
clc
lods
inc
xor
mov
adc
imul
mov
call
sbb
jns
add
mov
cmp
mov
mov
pop
inc
loopne
dec
enter
ret
es
cmc
or
push
lcall
and
sbb
cmc
push
adc
mov
out
cwtl
sbb
xchg
jo
popf
outsl
inc
shl
mov
lcall
outsb
pop
mov
arpl
mov
push
xchg
jge
inc
and
cmp
mov
fimuls
sbb
dec
outsb
das
in
pop
sub
push
dec
or
mov
mov
sub
ljmp
add
lret
int
and
mov
or
sbb
hlt
push
fisubrs
pop
pop
inc
rdtsc
mov
lods
testl
xchg
in
cmp
push
ds
sbb
jl
in
data16
je
fstl
jge
stos
mov
push
inc
fcoml
push
repz
jge
cmc
aas
adc
loope
sbb
addl
xor
rorb
inc
mov
mov
mov
call
ja
das
xor
mov
ljmp
or
in
and
js
jge
imul
jl
iret
xor
mov
and
addr16
or
push
jno
mov
cmpsl
sub
arpl
movsl
mov
inc
jae
rolb
and
xchg
add
mov
adc
push
dec
lret
cmpsb
out
mov
test
mov
or
and
jl
push
jmp
jbe
faddl
fistpl
or
cmp
inc
xlat
and
pusha
cmp
leave
insb
loope
aas
mov
sbb
stos
cli
cs
fdivs
mov
mov
das
mov
push
fldt
mov
les
mov
inc
pop
inc
inc
ja
inc
mov
sbb
aad
clc
add
jne
xlat
aad
pop
xor
pop
int
sub
push
mov
cli
push
and
roll
leave
int
push
push
fdivs
lock
aam
jmp
insb
adc
je
jge
pop
push
in
mov
rcll
sarb
scas
mov
sarb
push
cld
push
xor
mov
lea
loope
sahf
inc
add
aaa
in
dec
pop
leave
add
adc
clc
inc
jne
xor
lods
loope
repnz
jg
shrl
sub
pop
xor
js
outsl
xor
dec
push
imul
enter
pop
mov
mov
cmp
and
andb
cld
sub
or
push
inc
ret
mov
call
push
or
sbb
lcall
lea
and
pop
push
pop
pop
xchg
xchg
vmwrite
dec
pop
fldt
jo
jne
outsl
lcall
push
sarl
es
pop
outsl
cmp
imul
mov
adc
jbe
std
mov
ljmp
mov
out
adc
dec
inc
adc
stos
mov
cmp
pushf
xlat
cmpb
sub
push
stos
ds
shll
pop
loope
xor
cmc
es
outsl
sbb
push
mov
mov
inc
aaa
fidivl
std
jge
pop
or
add
stos
stc
pop
xchg
pop
loope
pushw
nop
xchg
lcall
adc
push
and
int
or
push
mov
insb
mov
fistl
sti
xor
std
inc
xchg
pusha
xor
or
jmp
test
mov
xlat
sub
mov
xchg
cmp
scas
sbb
push
or
popa
cmp
repnz
add
fbstp
out
mov
mov
cmpsl
push
sbb
push
inc
not
mov
sbb
mov
shlb
icebp
or
test
dec
mov
inc
bound
sub
insb
xor
jecxz
scas
pop
aaa
test
es
sbb
dec
pop
xor
js
outsb
sahf
jl
xchg
daa
add
xchg
addb
xor
clc
sbb
incl
cltd
inc
inc
mov
loop
lea
push
pop
push
mov
out
int3
lcall
adc
pop
cmp
inc
pop
mov
pop
and
mov
sbb
movsb
cltd
cld
and
jle
push
int
mov
jb
adc
xbegin
stos
std
sub
push
out
je
inc
fistpll
shll
lahf
cli
in
lock
rolb
jne
insb
inc
and
fwait
xor
jp
clc
test
aaa
test
adc
pop
sarl
xchg
xchg
movsb
addl
mov
outsl
in
xchg
sti
popf
hlt
and
jmp
cli
xchg
test
mov
bound
aam
hlt
fsubrl
add
dec
mov
out
fisttpl
pop
xor
test
jmp
mov
pop
add
fildll
adc
sbb
lret
sbb
inc
jo
shrl
inc
ljmp
js
bound
push
cmp
in
pop
cli
divb
js
sahf
sub
cwtl
mov
xor
aaa
out
xchg
insb
cmp
insb
aas
and
mov
jmp
cli
test
adc
imul
ret
cld
pop
clc
push
cmpsl
ss
sti
mov
xchg
mov
push
outsb
pop
sti
cmpb
jne
or
rcr
push
jae
sarb
pop
movsb
ret
mov
shrw
addl
and
push
mov
fsubs
jae
and
push
pop
mov
jmp
jmp
bnd
rcr
mov
jns
add
fcompl
dec
pop
test
xchg
add
dec
add
inc
xchg
add
push
mov
cmp
aas
loopne
dec
adc
jo
stc
adc
clc
pop
push
lea
ljmp
andb
movsl
add
adc
cmp
jne
icebp
fimull
add
jo
pop
mov
ja
xchg
fwait
inc
aas
fs
push
sahf
push
or
aaa
das
lds
imull
leave
inc
fisubrs
sbb
in
mov
leave
ds
mov
lret
jle
fwait
ljmp
sub
xor
jp
into
es
clc
jno
mov
in
mov
stos
xchg
jmp
mov
sub
xchg
or
inc
push
in
jnp
fcmovnb
pop
mov
scas
mov
sub
sbb
adc
mov
inc
nop
and
inc
cmp
sbb
inc
into
push
cmp
add
cmp
add
loopne
aas
ljmp
xchg
fsubs
cmp
mov
loop
cld
js
aad
pop
int3
nop
xor
iret
clc
ljmp
mov
fmull
icebp
and
mov
push
aad
rorb
scas
cmp
inc
adc
xor
ficoms
pop
mov
outsb
jecxz
fnstsw
xchg
pop
xchg
mov
outsl
les
pop
adc
pop
clc
call
add
and
adc
test
aas
push
sub
mov
cwtl
xor
fidivs
fisubrs
int
out
out
xchg
jle
movsb
xor
imul
cmp
in
pop
push
dec
fwait
lock
xor
mov
mov
cwtl
pusha
shl
popa
push
jbe
mov
mov
jbe
cmp
and
mov
outsl
sbb
cmp
fisttpll
cli
outsb
xor
inc
ror
xlat
stc
or
adc
push
clc
mov
xchg
xor
rcrb
cmc
push
or
lea
test
mov
inc
icebp
push
push
ss
pop
imul
inc
xchg
lea
stos
pop
mov
and
or
je
sub
pop
js
inc
js
or
jg
jns
cmp
pop
pop
cli
inc
hlt
add
pop
adc
sbb
inc
add
pop
cmp
adc
leave
sbb
xchg
jne
test
sbb
cmpsl
sbb
xchg
rcll
cmp
insl
or
jb
repnz
mov
std
mov
add
test
push
and
inc
test
push
dec
pushf
jmp
or
mov
shld
cltd
outsl
dec
adc
dec
outsb
cmp
jnp
cmc
data16
rcll
inc
mov
jo
or
mov
mov
mov
rolb
and
pop
out
push
adc
mov
adc
out
pusha
xchg
xchg
push
lds
test
add
push
arpl
add
xchg
xchg
inc
or
dec
mov
adc
adc
and
test
xchg
or
or
and
dec
mov
and
std
js
and
insl
fs
xchg
push
aam
mov
and
pop
outsl
das
mov
sbb
sub
aas
jg
sbb
scas
xor
sub
xlat
or
pushf
mov
fcmovnbe
pop
cmp
lods
mov
ds
xchg
scas
jmp
scas
or
mov
das
add
test
push
outsl
jo
pop
or
mov
addl
inc
fwait
jp
push
xrelease
mov
ret
xchg
mov
movsl
inc
stos
add
popf
loopne
out
clc
decb
mov
negb
cli
xchg
inc
lds
into
je
pop
cmc
ret
add
cmpsl
cmp
and
mov
aaa
out
dec
push
sub
adc
or
loopne
enter
cmpsl
jge
jl
sahf
loopne
mov
jecxz
outsl
dec
imul
sbb
aas
into
and
or
cmp
mov
xchg
lock
fcmovne
or
dec
shrb
pop
insl
dec
or
in
ret
aad
aas
dec
iretw
sbb
inc
and
lds
or
cmp
mov
adc
sub
jo
repz
jecxz
lret
js
push
jb
and
aaa
or
inc
sbbl
cmp
xchg
cs
addl
ret
pop
cmpb
and
mov
or
jle
xchg
pop
outsb
xchg
mov
inc
loopne
lret
jo
enter
mov
rclb
sbb
mov
mov
bound
add
jae
aam
add
xorl
cmp
mov
rorb
mov
rol
in
xchg
sub
xchg
inc
inc
out
popl
icebp
notl
add
cli
or
iret
lods
inc
xchg
addr16
rcr
ljmp
pop
fidivs
mov
pop
pop
sarl
mov
cmp
push
pop
clc
jb
pushf
push
aaa
jbe
xor
sub
scas
add
cld
push
inc
mov
mov
xor
add
jecxz
sub
mov
imul
loopne
lret
gs
sbb
mov
mov
pop
subl
and
push
sbb
dec
mov
mov
and
mov
faddp
ret
mov
adc
push
out
mov
fs
cmc
pusha
pop
test
xor
shlb
sbb
sub
xor
add
sbb
shll
fsubl
push
jp
cmp
in
and
sub
aad
push
inc
cs
sbb
push
dec
mov
pop
cmp
xorl
adc
pop
call
test
outsb
or
jge
inc
daa
icebp
fistpll
and
inc
in
xchg
pop
pop
fidivs
ss
mov
aaa
mov
rolb
mov
add
mov
xchg
mov
pop
mov
push
adc
mov
push
test
andl
out
imul
or
in
mov
mov
pop
mov
test
ljmp
mov
int
push
mov
inc
stc
ficompl
pop
sbb
dec
cmp
sub
enter
mov
vmovntps
popa
nop
and
mov
cmpsl
xchg
mov
pop
mov
fisubrs
jecxz,pn
sub
lods
mov
cmp
xor
sti
pop
pop
cmp
mov
stos
dec
rol
loopne
mov
enter
imul
push
jbe
repz
dec
data16
out
mov
mov
jecxz
cmp
int
jae
jg
insb
test
inc
out
mov
pop
inc
les
xchg
mov
pop
out
push
popf
es
adc
cmp
lea
xlat
mov
sub
or
mov
fistps
je
test
mov
enter
push
icebp
inc
cmc
add
inc
mov
fs
or
std
call
push
sub
cli
gs
or
mov
mov
setp
inc
push
pop
inc
inc
in
jecxz
das
cwtl
add
fadd
stc
xor
push
push
push
adc
xor
or
xor
mov
enter
inc
and
and
fiaddl
pop
scas
sub
jno
fsubrl
mov
insb
test
sub
mov
daa
lahf
fwait
jnp
rcr
sbb
test
add
push
mov
sbb
jbe
adc
pop
pushf
push
jmp
mov
xchg
jle
cs
add
xchg
xlat
loop
cmp
jle
mulb
pop
rol
inc
cmp
clc
loope
unpcklps
add
imul
add
mov
dec
pop
mov
lahf
and
or
mov
outsl
and
js
sbb
fisttpll
or
inc
xor
lcall
ret
mov
xlat
std
insl
repnz
mov
mov
mov
clc
pusha
mov
clc
loopne
xor
lds
push
push
ds
xlat
dec
icebp
outsl
scas
xor
adc
sbb
adc
adc
das
mov
imul
sbb
mov
int3
adc
or
out
arpl
stos
roll
xchg
push
cmp
cmp
xor
cltd
fisttps
gs
insb
sbb
or
sbb
into
dec
adc
xchg
sarl
xor
aam
fbld
lds
xchg
cmc
inc
push
mov
pop
jmp
clc
add
jo
and
ret
decl
xor
jbe
pusha
mov
fs
xchg
ret
in
mulb
sbb
sahf
add
fnstenv
fwait
lods
cs
dec
jge
jg
push
jge
jp
mov
adc
xor
fs
dec
adc
enter
add
xchg
jge
loopne
jbe
push
push
insl
leave
and
ds
jge
push
je
mov
test
dec
popf
lea
adc
mov
add
sbbl
fisttpl
nop
inc
mov
jmp
or
mov
or
std
mov
push
aas
lcall
rorl
sub
dec
add
inc
xor
test
jge
repz
daa
and
aam
cld
push
data16
fidivrl
xor
cmp
fsubrs
mov
fdivp
and
push
or
pop
push
fildl
push
cmp
dec
dec
push
push
lahf
adc
mov
jle
cmp
jo
test
inc
add
lods
dec
xchg
push
and
das
int3
int
outsb
mov
outsb
loope
xor
and
cli
xor
ficomps
jl
xchg
cmp
push
mov
aad
pop
mov
ret
rcll
insb
lods
sub
cltd
xchg
cmp
mov
dec
fs
shl
fcmovne
sbb
scas
jge
test
jge
lock
dec
fldcw
jo
scas
adc
mov
dec
mov
mov
mov
push
xchg
stc
mov
pop
pop
dec
xor
xor
mov
loopne
mov
inc
mov
fscale
imul
mov
enter
jb
xor
sub
out
ljmp
in
cmpsb
cli
xchg
stc
in
aaa
mov
cmp
call
mov
mov
xchg
xlat
mov
mov
jne
lret
push
and
sbb
out
lret
sbb
push
call
jl
out
mov
outsb
fdivrs
jp
shlb
xor
imul
cmp
cmp
pop
or
add
mov
add
js
jg
pop
inc
adc
dec
rcrl
mov
je
xlat
pop
ds
xchg
dec
xor
fdivs
xor
push
xor
jne
imul
iret
xchg
jg
ret
in
add
push
jle
cli
add
mov
lock
mov
je
inc
leave
mov
fdivrs
jno
int3
data16
cmc
inc
shll
fs
jecxz
mov
js
push
mov
call
fistpll
adc
dec
push
push
xchg
fdiv
add
arpl
xchg
xchg
aad
cld
test
int
cmpsb
ja
scas
xadd
ljmp
lret
sti
call
dec
stos
dec
jb
xor
sarl
jl
sbb
or
sbb
cmp
outsb
pop
hlt
addb
bound
push
xor
xor
aaa
leave
ret
lock
add
cltd
adc
xchg
loope
push
std
sbb
xor
sub
out
arpl
dec
xor
and
or
pop
je
test
cmp
insb
lock
adc
mov
es
fdivl
loopne
pop
in
sarl
and
lods
jnp
scas
cld
dec
push
xchg
mov
jnp
nop
repz
into
mov
sub
fdivrs
add
adc
loope
mov
and
adc
mov
mov
xor
add
and
lock
mov
sub
les
inc
ljmp
mov
jecxz
ljmp
mov
jmp
mov
jae
in
pop
std
es
jae
stos
dec
cwtl
mov
xor
pop
out
mov
adc
sub
mov
cmp
and
ret
sub
jle
aad
imul
dec
or
in
sbb
jne
cmp
add
pop
push
pop
adcb
shrb
mov
rcrl
or
xchg
adc
cmp
fldenv
sbb
ret
dec
je
ss
xor
ficomps
add
jbe
fidivrl
mov
xchg
cmpsb
sbb
mov
inc
cld
aas
adc
fstl
mov
rcl
test
std
and
jg
xlat
sarl
inc
mov
xor
pop
in
imul
jp
rcrb
mov
test
gs
mov
push
icebp
ljmp
add
sahf
jo
stos
into
lahf
mov
imul
or
and
push
psllw
call
add
pop
mov
repnz
lds
pop
xchg
adc
xor
sbb
cli
mov
xchg
mov
cmp
fbstp
cmpsb
ljmp
add
add
into
dec
push
or
ret
shlb
mov
stos
fisubrs
stos
sub
std
jo
inc
clc
mov
cmp
dec
sub
sub
sbbl
sub
jp
scas
cmp
andb
cld
mov
loope
push
stos
inc
je
rolb
fcomip
cwtl
ja
push
ret
sbb
ds
dec
mov
fldt
add
push
mov
mov
orl
push
dec
je
mov
fdivrs
sub
jbe
aad
xorb
xchg
dec
mov
leave
jl
push
pop
push
jecxz
fistpll
cmp
mov
movsl
imul
push
mov
lret
int3
pop
adc
cld
fs
mov
cmp
jge
dec
sbb
clc
xchg
push
jb
mov
sar
mov
je
or
scas
and
ss
or
in
stc
mov
mov
leave
inc
add
outsb
sub
out
je
dec
and
outsb
and
xchg
inc
inc
xor
aam
inc
fcomi
and
push
mov
or
push
cmp
xor
inc
xor
mov
outsb
cli
rsm
hlt
scas
xchg
jae
adc
cmp
test
jecxz
pop
push
cmp
or
andl
jg
mov
rol
inc
push
fnsave
fwait
loopne
mov
adcb
ja
aaa
cmp
mov
cmp
inc
aam
test
es
gs
in
or
adc
adc
cmp
xchg
stos
jp
out
xor
clc
pop
clc
int3
repz
pop
sub
mov
subb
test
push
loopne
notb
mov
inc
or
das
push
fnstsw
push
dec
xor
je
push
adc
lock
mov
nop
dec
ret
jb
testb
mov
sbb
or
adc
ss
mov
add
and
xchg
cmp
xor
fwait
dec
push
loopne
jbe
pop
pop
mov
pusha
inc
or
inc
inc
cld
pop
mov
flds
mov
pop
cli
mov
pmullw
jb
sub
jbe
cmp
leave
rorb
loopne
popw
push
orb
mov
xchg
jl
or
or
out
repz
outsl
loopne
ja
push
xor
jg
lahf
mov
icebp
andl
xchg
cmp
loop
ret
sbbl
mov
adc
dec
or
in
push
push
sub
sbb
inc
mov
lea
dec
jbe
pop
xor
pushf
mov
insb
sbb
jne
scas
ret
call
xor
mov
add
fiadds
mov
out
fwait
lahf
daa
shl
and
push
je
sti
mov
adc
in
lahf
inc
inc
sub
scas
test
jl
popf
push
mov
or
xor
sub
mov
mov
icebp
adc
push
sub
jmp
xor
add
mov
mov
les
es
jmp
or
pop
lret
in
sbb
dec
fdivl
xor
xchg
lock
test
or
mov
test
pop
jo
pop
std
sub
pop
jecxz
rcrb
and
cmp
sbb
fisttps
sbb
in
es
sbbl
ljmp
loopne
jg
leave
orl
pxor
icebp
pushf
andb
aaa
xor
test
and
sbb
and
pusha
adc
adc
jns
cmc
test
and
mov
movsb
jle
in
orl
xor
xor
inc
mov
sbb
inc
daa
and
les
fcoms
xlat
xchg
jo
cwtl
enter
ja
test
fisubrs
cmp
lods
loope
fisttpl
pop
test
imul
xor
inc
imul
test
ficoms
mov
adc
fwait
xchg
jo
ljmp
xchg
push
dec
cmp
jmp
adc
imul
jno
adc
sub
or
imul
xor
mov
cld
cmc
cld
data16
push
cwtl
ja
xchg
incl
sbbl
ret
sbb
pop
arpl
int3
loop
addr16
xor
jno
xor
cmpsb
sbb
cmpsb
mov
jg
push
out
loopne
sahf
out
cmp
ret
push
ja
add
sbb
add
inc
fnstcw
jecxz
push
cld
cmp
imul
cld
xchg
xor
sahf
add
cld
sti
inc
adc
into
decb
mov
jg
int3
xchg
test
imul
pop
in
mov
pop
les
push
jg
mov
daa
decl
jbe
pop
mov
mov
mov
bound
cmc
add
repnz
imul
sub
in
mov
mov
cmp
cmp
pop
mov
imul
pop
pop
sahf
mov
in
mov
pushf
push
rcll
je
jge
fldt
lock
or
mov
test
stos
cwtl
test
stos
loope
inc
and
cmp
out
mov
orl
add
sahf
ds
and
adc
jmp
push
pop
clc
push
ja
sbb
adc
test
je
rorl
push
call
sti
cs
fdivrs
mov
bound
push
movsb
dec
add
inc
sub
ret
insb
jne
psrld
mov
inc
push
arpl
leavew
lock
jns
add
jbe
adc
enter
test
xor
shl
movsb
mov
paddusw
add
scas
call
pop
adc
push
sbb
rorl
sub
clc
inc
insb
push
mov
pop
mov
xor
test
pop
lds
inc
ret
es
xor
mov
mov
shll
push
cmp
cmpsl
xchg
jle
mov
cltd
mov
stc
fldl
inc
pop
scas
adc
jmp
aaa
ljmp
push
jge
mov
pop
gs
cmp
cmp
jp
jbe
xchg
or
in
push
mov
out
mov
mov
insb
movsb
shll
add
jp
xchg
aad
mov
rolb
mov
mov
ja
xor
cmc
jnp
movsb
push
gs
jecxz
outsb
mov
xchg
push
popa
in
dec
test
mov
adc
jge
ja
jl
push
pop
add
adc
jb
hlt
test
lock
sbb
adc
movsl
mov
in
and
adc
out
mov
rorl
cmc
pop
lahf
ficoml
fsts
add
push
jmp
mov
cli
in
lods
add
outsl
ret
psubsb
sub
mov
aas
mov
shrb
dec
out
aad
std
aam
clc
mov
bound
in
push
xorb
or
mov
inc
cmpsl
ret
cmp
inc
mov
dec
icebp
sub
xchg
adc
lahf
incl
dec
cmp
in
gs
xor
fcmovb
out
mov
push
es
mov
mov
xor
scas
mov
inc
arpl
push
inc
jecxz
iret
jno
mov
sub
arpl
pop
mov
cmp
divl
add
cmpl
or
loope
outsb
mov
loop
adc
out
std
inc
xchg
sub
pop
cld
pushf
leave
call
add
dec
xchg
cmpsl
scas
scas
adc
lret
mov
sbbl
lock
in
mov
adc
repz
jne
jge
pop
loope
xchg
or
add
pop
mov
ss
adcl
sahf
xchg
addl
or
fucomp
call
rclb
pop
ja
inc
dec
xchg
rolb
inc
sbb
stc
leave
or
movsb
in
xor
call
mov
out
add
sub
pop
cmp
push
adc
and
sub
pop
js
je
js
cmp
das
add
les
adc
and
filds
mov
inc
mov
inc
cwtl
fs
ja
jp
shll
in
cld
out
push
push
mov
sbb
mov
stos
jge
adc
mov
mov
pop
das
das
hlt
and
add
mov
pop
clc
sub
test
int
xchg
xor
imulb
aam
adc
sbb
aaa
fnsave
and
push
dec
inc
cmpsl
adc
pop
orb
sub
lods
or
mov
sbb
xchg
jnp
mov
lds
inc
ja
cmp
pop
cs
fsubl
out
es
decb
xchg
push
and
in
mov
mov
fsubp
or
inc
mov
push
cmc
out
outsb
inc
push
add
inc
movsl
push
int
fstl
jge
adc
mull
xchg
lods
inc
mov
je
cli
and
xchg
decb
icebp
ret
scas
es
pop
mov
sbb
push
and
jno
lahf
jecxz
in
pop
push
rol
xchg
push
mov
xchg
push
xor
adc
xorb
pop
cld
scas
fisubrl
mov
das
push
jg,pt
into
dec
mov
fldl
pop
clc
testb
nop
push
push
mov
inc
sbb
mov
pop
cmc
mov
mov
clc
adc
mov
add
or
das
insl
or
cmc
out
xchg
pop
jecxz
hlt
hlt
sub
add
lock
pop
std
aam
test
addr16
mov
aam
push
and
test
flds
or
push
fbstp
ja
jmp
xor
xor
js
int3
adc
arpl
dec
rcrl
xchg
out
xor
and
jle
mov
xchg
sahf
mov
pop
mov
fs
pop
cmpsb
sti
shl
cmp
sub
mov
mov
andb
test
adc
mov
cld
pop
pop
mov
hlt
sbb
sub
in
mov
pop
xchg
cmp
mov
aas
syscall
rcrb
cwtl
sti
dec
sahf
enter
std
je
adc
stc
adc
sbb
push
das
lock
out
cltd
push
ljmp
inc
or
push
pop
ss
hlt
fcomp
into
ss
mov
mov
or
or
ret
das
notb
mov
je
ljmp
dec
je
fadd
incl
popa
jl
dec
adc
xor
xor
pop
aaa
and
stos
mov
mov
test
fistpl
inc
sub
les
rorl
icebp
jle
movsl
scas
mov
push
mov
fimull
daa
or
enter
mull
and
stos
mov
pusha
cltd
add
cmp
fidivl
and
xor
icebp
mov
aam
sub
cmp
pushf
adcb
sbb
ficoml
enter
mov
sbb
out
stos
cmp
lret
sbb
jecxz
fistpl
mov
repnz
or
and
push
inc
mov
xchg
movsb
mov
sub
pop
sbb
ret
pop
jecxz
push
rorl
add
std
rcr
repnz
push
outsb
lds
inc
adc
xlat
pop
outsb
fisubrl
outsb
dec
adc
in
aaa
or
jl
stos
sbb
inc
subb
jae
mov
inc
mov
add
pop
mov
or
dec
or
subl
inc
scas
inc
push
jge
lods
push
fstpt
add
and
cltd
add
out
xor
and
ret
mov
out
in
ret
lret
mov
push
testl
pop
sahf
jg
outsl
popa
xlat
stc
in
fimuls
nop
test
mov
out
and
mov
mov
add
xor
test
push
pop
or
mov
or
add
movsb
pop
xchg
add
push
mov
or
sub
and
adc
mov
and
shrb
push
pop
adc
xchg
dec
testl
adc
jnp
inc
cmp
and
aaa
int3
add
adc
xchg
jp
fisubrl
imul
pop
aas
dec
cmp
test
and
or
cmovns
sub
imul
xchg
loopne
scas
jmp
movsl
push
pushf
loope
mov
pop
fistps
xchg
cmp
mov
sub
mov
inc
pop
scas
pop
jne
dec
dec
add
testb
jmp
in
cmpb
xlat
dec
ljmp
movsb
bound
xlat
ror
add
ljmp
and
js
mov
int
xchg
mov
inc
adc
insl
cmpb
and
xchg
xchg
lcall
sbb
xor
mov
adc
aaa
push
sub
pop
pop
push
jge
jo
jl
clc
rorl
adc
mov
xchg
roll
sbb
addr16
push
outsb
cmp
js
jo
in
inc
push
and
adc
call
mov
push
subb
negb
lods
rcll
xor
jge
loopne
aad
nop
cs
add
orb
mov
lods
ficoml
mov
mov
pop
dec
test
mov
fbstp
scas
sbb
add
mov
inc
mov
pop
push
and
insl
xor
mov
ja
mov
jg
add
rcll
inc
test
lret
int3
call
pop
pop
sub
sbb
jb
lahf
pop
and
mov
test
mov
fwait
xor
jb
push
sti
and
jg
xchg
inc
pop
mov
pop
shll
jno
dec
in
mov
adc
jge
int3
cwtl
push
clc
xor
mov
xchg
ret
mov
add
push
pusha
je
sub
insb
and
xchg
mov
movsb
jnp
xor
in
or
clc
les
ds
mov
fistps
bound
sbb
adc
jne
fscale
jne
leave
jge
and
push
notb
movsl
movsl
add
push
xor
push
into
test
inc
cmp
push
jmp
mov
jo
push
jmp
into
mov
into
and
lea
push
mov
sub
ret
sbbl
hlt
fstpl
lods
mov
pushf
push
in
pcmpeqw
mov
cmp
dec
mov
sti
jge
pop
les
mov
inc
xor
xor
xchg
lock
insb
cmp
jl
daa
popf
xchg
xor
cld
cmp
mov
push
push
adc
stos
outsl
pop
daa
lea
gs
push
add
je
jmp
mov
out
push
jns
movsb
popa
push
ja
insl
aam
jecxz
pop
sub
fnstcw
mov
pop
imul
cmp
dec
and
jp
add
cmp
out
xlat
aas
rolb
es
cld
adc
sbb
cli
push
sub
and
add
xor
dec
movsl
loop
pop
dec
pop
cmpsl
and
fcompl
movsl
adc
pop
adc
inc
adc
pop
lret
jo
pop
jno
mov
jg
pop
lcall
pop
or
subb
inc
xchg
shl
or
add
mov
cmp
ret
xrelease
sbb
pop
push
ja
adc
jns
rcl
ret
xor
pop
sbb
sbb
lcall
insb
js
adc
dec
xchg
out
test
inc
loop
das
xchg
inc
cmp
xor
pusha
adc
sub
and
das
insb
fcomps
fwait
sbb
bnd
lds
call
mov
push
out
and
outsl
sbb
pop
lock
cmp
xor
sub
ss
inc
outsl
icebp
push
sahf
pop
add
scas
sti
mov
sbb
mov
and
mov
sub
pop
addb
shll
fiadds
js
jnp
or
sub
shll
add
pop
pop
movsl
fwait
jl
sahf
repz
ljmp
push
inc
sub
in
ja
adc
outsl
mov
adc
push
loopne
mov
xchg
orl
pushf
adc
mov
pop
in
adc
xlat
jbe
mov
mov
lcall
pop
arpl
sbbb
aad
add
fstl
push
jmp
mov
jno
adc
sub
xchg
int3
rclb
push
jno
loopne
sub
mov
loope
jle
les
xlat
push
insl
cmc
orl
mov
cmp
iret
mov
mov
dec
dec
mov
xchg
iret
dec
clc
out
adc
dec
in
cli
or
fistl
dec
sar
mov
and
ljmp
adc
adc
aam
cld
fimull
add
dec
pusha
frstor
xchg
das
push
ds
add
mov
mov
push
in
or
add
scas
out
inc
add
addl
mov
or
dec
pushf
scas
and
inc
push
push
out
mov
mov
mov
sbb
test
sub
ljmp
aas
pop
cmpsl
clc
rcrl
aam
add
push
mov
imul
out
test
repz
mov
and
add
jle
cld
or
adc
fiaddl
pusha
add
add
notl
nop
ss
fcoms
or
test
icebp
idiv
lret
shll
dec
and
sbb
xchg
in
arpl
push
push
jbe
sub
std
sub
mov
enter
nop
subb
cmpsb
std
jmp
push
dec
repz
pop
inc
pop
aaa
push
std
cmp
jecxz
rolb
stos
mov
ret
mov
int3
stc
and
testl
test
or
add
jl
or
aad
add
adc
mov
out
xchg
bsf
lock
in
sbb
clc
lret
inc
xchg
mov
mov
mov
or
xlat
call
je
inc
or
mov
aad
arpl
pop
push
mov
pusha
mov
or
or
pop
push
stos
fwait
xchg
xor
mov
aad
mov
pop
adc
jg
ja
dec
and
inc
or
sahf
adc
loopne
pop
test
daa
fists
push
sub
xchg
push
dec
dec
xlat
pop
pop
lcall
xchg
pop
jge
adc
and
andb
cmp
mov
pop
add
and
dec
lcall
jo
xor
mov
in
cld
hlt
mov
cmp
cli
scas
or
push
in
lret
je
xor
mov
mov
dec
out
fsubrp
test
xchg
jne
push
and
mov
mov
add
fs
dec
sarb
or
pop
xor
sbb
sbb
or
dec
das
mov
xchg
fwait
andl
mov
in
cmc
add
adc
fldenv
and
aam
js
adc
rorb
ret
xor
mov
xchg
ss
imul
es
mov
hlt
and
jno
push
mov
add
jp
bound
insl
rcrb
mov
test
insl
pop
imul
adc
mov
jp
inc
les
adc
mov
cwtl
data16
fcomp
int
mov
sti
das
mov
mov
sbb
pop
sbb
mov
lods
jbe
xchg
xchg
aaa
dec
or
push
movsb
cwtl
xchg
outsb
mov
sbb
scas
test
mov
cmp
mov
mov
push
cmpsb
movsl
outsb
sbb
xor
inc
dec
imul
arpl
daa
add
mov
xchg
ret
inc
mov
add
sbbb
adc
addb
jne
fldpi
xlat
inc
sbb
or
inc
fxch
clc
dec
jae
mov
hlt
add
mov
pushf
dec
sbb
cmp
pop
leave
cmp
incl
hlt
subl
aad
push
inc
cmpsb
jae
cmpsb
subb
jecxz
sarl
xchg
and
loope
mov
push
sbb
lret
xchg
jmp
aad
cmc
sbb
rol
cmp
movsl
push
enter
push
rcrb
xor
push
pop
push
mov
lret
fisubl
cs
clc
test
push
inc
pop
jmp
aad
ret
and
cmp
dec
jmp
mov
leave
ret
jmp
ss
pop
rcr
adc
paddd
mov
daa
or
addr16
xchg
scas
mov
mov
mov
js
js
outsb
inc
and
shl
fdivrl
mov
jg
mov
push
mov
lods
insl
inc
es
inc
addl
push
dec
aas
rcr
icebp
push
push
or
test
lret
xchg
xorl
add
lods
push
pop
or
shll
adc
mov
jae
fsubrs
stc
test
bound
mov
movsl
outsl
or
shll
repnz
add
or
gs
xorps
outsb
cld
push
cwtl
pop
mov
or
pop
pushf
ljmp
dec
sbb
or
mov
dec
neg
rcl
jmp
add
sti
test
and
push
loop
jbe
pop
out
push
mov
pop
cmpl
fnstsw
or
inc
lahf
adc
out
enter
or
int
adc
cltd
out
pop
or
push
insl
pushf
add
sti
out
dec
aaa
inc
inc
cmp
and
outsb
jg
add
mov
mov
iret
add
and
scas
push
cld
aas
negb
mov
adc
pop
call
cmp
add
cmp
mov
dec
fnsave
sahf
push
lock
fildl
push
pop
sub
out
insl
je
loope
repnz
into
repnz
aaa
rorl
ds
inc
popa
mov
jmp
inc
aam
push
jno
icebp
and
fmulp
je
cwtl
pop
xor
out
call
mov
ror
lock
push
mov
mov
or
dec
cmc
mov
push
leave
ret
rclb
mov
mov
cs
test
mov
sbb
jb
or
icebp
and
in
pop
sbb
pop
testb
mov
outsb
fldcw
shrl
int3
sti
adc
dec
push
pop
add
mov
push
cmp
inc
test
out
mov
add
mov
pop
arpl
xchg
scas
sub
xchg
push
and
sub
outsb
sbb
ss
adc
ret
xchg
ljmp
out
adc
divb
das
sarl
cmpsl
int3
inc
movsb
mov
pop
call
xchg
mov
inc
fcmovnb
mov
sub
pop
in
fidivs
outsb
jge
cli
inc
cs
lea
orb
cli
xchg
dec
sub
cmpb
push
fisubrl
scas
movsl
sbb
add
mov
xchg
mov
or
mov
mov
jl
pop
jns
je
adcl
out
loopne
jg
and
cmp
test
pusha
and
fstpl
xchg
mov
jg
jo
jge
push
cmpl
dec
pop
jbe
pop
outsb
in
loope
pushf
pop
fcomps
mov
pop
ret
adc
push
aad
fsubrp
cs
scas
pushf
dec
enter
and
mov
jge
stos
mov
xor
mov
xor
ja
push
ret
jg
and
iret
movsb
xchg
sahf
outsb
std
push
gs
ret
cmpb
addr16
cld
adcb
inc
cmp
adc
mov
fistl
cmp
jae
gs
push
mov
insb
std
inc
rcrl
xchg
mov
fcmovnu
inc
test
pop
sbb
xor
and
xchg
gs
shlb
mov
mov
pop
fsub
out
sub
inc
push
cmp
shll
cmpsl
cmp
inc
fistpll
push
xorb
xchg
stc
lret
loope
fwait
push
clc
inc
mov
ja
add
and
push
pop
or
and
jmp
popa
ja
mov
stos
mov
xor
or
adc
mov
insb
call
sbb
adc
push
cs
jg
fistps
lods
or
mov
repz
xor
push
xor
inc
pop
jle
push
jmp
cmc
dec
cmp
inc
push
mov
int
scas
add
and
clc
scas
mov
mov
push
or
loop
filds
ja
int
roll
bound
pop
les
mov
sbb
xlat
idivb
dec
ret
push
jne
loopne
addl
mov
jo
xchg
sarb
adc
lods
shll
int
filds
mov
rorl
insl
stos
test
rcrl
ficoms
mov
dec
loopne
push
mov
mov
fcoms
mov
mov
cmp
in
jge
rcll
pop
jle
test
sbb
cmp
add
pop
push
or
mov
test
repnz
sahf
inc
push
out
mov
movsl
or
fisttpll
xchg
sbb
out
mov
sbb
outsl
dec
inc
inc
stos
mov
fmulp
dec
cld
sub
pusha
getsec
dec
aas
jle
shl
les
jb
mov
out
pushw
mov
pop
sub
ret
fabs
cs
sbb
mov
out
in
mov
fwait
fs
roll
shlb
ret
mov
or
in
push
xor
or
push
fstl
fsubs
and
test
cmp
sahf
inc
jl
pop
lds
scas
dec
sbb
push
cmpsl
xor
movsl
xchg
push
imul
in
mov
push
cs
cs
mov
call
lock
test
dec
cmpsl
and
imul
adc
adc
jne
pop
mov
push
imul
mov
cs
push
mov
jne
and
pop
adc
ja
repnz
lds
loopne
pop
sub
sbb
jo
push
lds
mov
sub
aad
cs
mov
les
lret
jno
mov
rclb
xchg
mov
add
inc
mov
pop
je
or
push
sbb
mov
sub
andl
fdivs
in
jb
push
sub
sub
and
mov
in
xchg
setge
mov
mov
mov
inc
pop
rorb
insb
jnp
fs
cmp
out
xchg
dec
int
xor
ljmp
daa
loop
fistps
dec
mov
test
mov
push
out
and
rcrl
je
aam
xchg
xor
shll
add
mov
jo
bnd
mov
mov
jge
outsl
adc
jge
es
adc
cmc
loopne
dec
mov
lret
out
adc
add
or
mov
push
idiv
mov
dec
inc
jmp
mov
pop
enter
or
push
lds
les
scas
fisttps
nop
add
in
adc
mov
or
insb
sbb
ds
inc
add
test
pop
sub
pop
add
mov
std
int3
icebp
xchg
inc
or
xor
add
mov
or
ret
and
rcr
bound
xchg
mov
ret
add
rcl
pop
lcall
and
add
loope
dec
adc
fwait
or
mov
sub
push
lock
fsubs
stc
jmp
push
sti
ret
out
cmc
push
jg
shll
loopne
pop
loope
dec
fidivs
adc
push
dec
jl
into
push
aaa
jne
jo
enter
cmp
jl
push
and
add
mov
fdivr
jbe
and
sbb
mov
std
or
jns
push
dec
xchg
pop
push
pusha
adc
pop
pop
sub
inc
sbb
push
nop
push
aas
pop
ljmp
ss
fimull
aas
jno
mov
fstp
es
sub
jb
mov
xor
aad
mov
mov
mov
sti
in
cmpsb
cs
adc
mov
push
jnp
cli
aas
cli
sbb
shrb
lahf
jp
fcomps
icebp
dec
mov
sub
inc
or
mov
outsl
fsubrs
pop
das
and
push
push
js
sbb
mov
dec
push
fisubrl
or
adc
aas
inc
out
push
fucomp
sbb
push
clc
aas
das
push
aaa
sbb
add
jl
repz
iret
cmp
mov
push
dec
sbb
or
add
inc
ss
and
mov
jo
push
je
jmp
jae
popf
adc
sbb
jp
lods
pop
mov
adc
cmp
cmp
mov
es
cmp
repz
push
or
out
arpl
enter
jb
loop
sub
xchg
or
sbb
ja
jnp
in
mov
cwtl
out
fcmovnu
fninit
xor
repz
test
into
and
test
xor
pop
arpl
push
leave
inc
cmp
inc
ficompl
out
xor
imul
push
es
cmp
push
push
inc
fstps
test
push
add
jecxz
hlt
test
mov
fadd
inc
mov
xchg
inc
or
movsb
jns
adc
mov
pop
loop
and
adc
jae
jecxz
xor
lahf
sahf
clc
pop
adc
jecxz,pn
inc
cmc
je
pop
jl
testl
push
add
adc
outsb
jb
push
rcr
pop
aas
sbb
push
mov
dec
pop
out
lahf
xor
xchg
subl
xorb
imul
repz
mov
fstpl
jecxz
cmp
stos
adc
cmp
lods
pop
rorl
or
test
pop
jge
and
in
or
push
mull
sbb
adc
and
push
and
enter
push
mov
out
daa
mov
in
push
inc
adc
sbb
mov
xlat
inc
fistpl
jle
dec
pop
fdivs
fs
movsb
jo
test
sbb
jo
fcoms
sahf
jecxz
pusha
stc
bound
xchg
dec
push
and
xchg
and
jae
out
inc
fisttpl
jg
jge,pn
mov
scas
imul
fcmovnu
inc
mov
call
in
pop
bound
mov
jg
sarl
pop
xor
and
out
out
xor
or
fildll
test
and
mov
jmp
push
push
in
mov
jns
gs
jg
mov
pop
test
inc
orl
test
mov
aam
xorl
fnsave
ds
and
sub
stc
fstpt
pop
jbe
out
stc
dec
aaa
add
jl
das
insl
fimuls
mov
ret
ret
xchg
mov
outsl
sahf
filds
push
cwtl
inc
dec
mov
fisttpll
pop
lock
add
push
shrl
loop
add
adc
or
sti
rcl
cwtl
inc
stos
jno
pop
or
inc
test
xchg
adc
out
or
sbb
adc
shrb
out
bound
pop
ss
add
out
insb
std
lcall
sbb
lcall
push
loope
std
or
adc
pop
ds
lret
and
push
sahf
lcall
shlb
insb
notb
jb
jno
in
push
mov
or
gs
sbb
loopne
mov
in
in
lock
jmp
outsl
xchg
add
repnz
mov
sti
add
call
lret
pop
mov
pusha
int3
addr16
dec
fistps
jmp
stos
test
nop
jp
ja
inc
shrb
jb
jo
arpl
test
loope
xor
test
dec
clc
dec
pop
test
pop
rol
dec
inc
insl
outsl
mov
pop
cmp
jo
pop
push
aas
je
adc
xchg
in
jecxz
das
je
adc
inc
mov
shlb
lret
dec
sbb
mov
pushf
sti
testb
or
add
dec
ds
inc
cld
cmpsl
js
lret
ja
rclb
pop
dec
aad
jg
jae
das
loope
out
ljmp
jp
xor
inc
mov
xlat
mov
insb
shlb
jmp
lahf
cmp
pusha
jae
jge
jno
xor
ss
cmpb
ret
mov
xchg
cmpsb
mov
mov
pop
fisubrs
xor
mov
adc
pop
pop
jb
repnz
daa
lods
mov
jns
push
mov
xor
lahf
cmp
adc
xor
push
jmp
xchg
lret
sbb
flds
mov
popa
fs
xchg
aam
xor
insl
adc
sbb
ds
sbb
push
fsubr
mov
cmp
dec
mov
jl
jnp
lods
mov
and
sbb
scas
les
inc
test
pushf
fwait
shlb
stos
stos
mov
mov
repnz
pop
arpl
jp
pop
xor
adc
sub
aad
fsubrs
imul
pop
pop
xchg
sbb
xor
rcrl
insl
dec
push
sub
push
cli
add
cmp
mov
dec
and
xchg
ret
insb
int3
sbb
es
fs
mov
sahf
imul
es
lret
hlt
loope
xlat
insl
push
cmp
or
cmp
add
adc
call
ret
push
in
dec
sbb
xlat
inc
rcrl
test
dec
inc
push
mov
insl
imul
aas
inc
sbb
push
lods
xor
dec
sti
in
movsl
push
fdivl
inc
popf
dec
mov
xor
rcrl
test
orb
mov
fbstp
ret
adc
in
inc
stc
or
dec
xchg
das
sub
jns
mov
test
ljmp
mov
xchg
pop
add
dec
mov
fstpl
jecxz
add
push
and
pop
pushf
add
sbb
add
jg
cs
mov
setge
mov
push
cltd
lock
xchg
in
stos
adc
aaa
mov
xor
push
ljmp
popf
gs
orb
xchg
xor
call
dec
popf
sub
shll
scas
sti
jbe
add
call
pop
dec
aam
sbb
psrlw
movsb
add
or
scas
xchg
lea
jle
pop
sbb
xchg
jbe
clc
sub
add
insl
sub
leave
into
push
call
test
js
lcall
mov
xlat
cmp
push
and
mov
sub
mov
cmc
ret
mov
inc
mov
and
mov
cmp
pop
cwtl
lock
lods
fstl
pop
adc
dec
mov
sti
inc
dec
lret
lock
sahf
pop
adc
add
xorl
cs
mov
cmc
jne
imul
push
xchg
je
fistl
pushf
sbb
sbb
push
movsb
mov
or
jg
mov
xchg
sub
stc
rcrl
xchg
and
or
inc
mov
jle
movsl
jns
inc
xchg
lcall
repnz
das
or
adc
fimull
fucom
fldcw
push
cmp
into
pop
adc
and
or
leave
pop
mov
sub
negb
xor
iret
pop
mov
inc
jne
adc
dec
fs
cmp
fwait
loope
cmp
stos
cmp
call
mov
sbb
out
subb
pusha
and
ret
int3
mov
loopne
add
mov
insl
loopne
mov
mov
ret
je
push
push
jae
adc
dec
sub
push
sbbb
jle
pop
mov
fabs
outsl
ljmp
repnz
pop
push
adc
mov
loopne
jecxz
add
rorl
or
lret
insl
fcmovnu
das
mov
sub
mov
dec
lahf
cmp
mov
mov
fsubrl
pop
outsb
pop
out
jb
xchg
cmp
leave
clc
loopne
push
xchg
inc
cmp
in
fsubrs
je
test
jmp
inc
add
push
cmp
or
sbb
jo
imul
mov
push
movsl
xchg
push
xchg
negb
and
pop
and
pop
cld
push
jno
sbb
lock
adc
push
mov
js
jmp
or
test
xor
aaa
adc
insl
cmpsb
movsl
xchg
xor
sbb
mov
mov
cwtl
pop
ret
mov
pop
mov
js
sub
jne
lds
push
push
and
scas
xlat
roll
xchg
in
pop
mov
mov
enter
iret
mov
xchg
lea
lea
dec
in
mov
mov
xchg
and
adc
inc
xchg
cmpl
cmp
add
addr16
fildl
cmp
arpl
mov
imul
subl
inc
sahf
xchg
sub
fisubrl
mov
icebp
xchg
sbb
mov
sbb
mov
xchg
scas
mov
fcoml
outsl
pop
clc
dec
inc
jo
xchg
icebp
push
test
gs
scas
dec
pop
je
mov
inc
dec
leave
adc
popa
jbe
out
cli
loopne
mov
inc
mov
movsb
sub
dec
lea
and
sub
adc
mov
imul
pop
inc
aam
mov
pop
or
add
mov
jecxz
test
jg
pop
outsb
adc
mov
imul
mov
inc
fsts
push
add
or
stos
xor
icebp
arpl
jg
iret
std
add
add
jnp
loopne
pop
push
pop
in
fwait
push
test
dec
mov
shrb
addb
jmp
ret
add
out
inc
repz
aas
int3
xchg
push
dec
outsl
mov
fucomi
push
and
sbb
fcompl
adc
adc
add
sbb
cltd
inc
mov
stos
aas
jmp
fsubr
cltd
mov
test
cs
testl
push
out
and
add
push
cs
pushf
mov
enter
jmp
mov
jbe
and
aas
xor
das
fdivrl
flds
adc
cmp
icebp
nop
pushf
jno
mov
mov
scas
cmpsb
mov
movsl
sbb
push
mov
cs
repz
and
shr
pop
xchg
test
test
jne
icebp
add
mov
sub
adc
dec
inc
or
mov
hlt
ret
out
inc
pushf
push
xlat
lret
or
inc
jg
fdivrl
xchg
cmp
std
dec
and
pop
test
inc
pop
pop
add
or
mov
ljmp
ljmp
gs
cmp
lret
pop
mov
mov
push
mov
js
xchg
cmp
jg
lcall
and
popa
imul
pop
das
mov
aam
inc
or
mov
ljmp
add
inc
cli
das
add
xchg
pop
setge
pop
adc
icebp
sbb
mov
roll
pushf
push
testb
pop
mov
add
ret
popf
and
cmp
int3
pop
inc
test
pushf
mov
inc
hlt
mov
test
pop
mov
jbe
testb
rcrl
jp
mov
mov
loop
xor
jl
fnsave
mov
pop
pop
lods
adc
or
push
fcoml
pop
movb
daa
and
out
or
roll
or
fs
repnz
jg
mov
iret
adc
sti
test
ss
int3
dec
imul
sbb
adc
aam
dec
mov
movsl
in
or
ret
notb
cwtl
xchg
dec
fwait
xchg
jmp
mov
mov
cmpsb
dec
in
mov
decl
push
lods
aas
jo
pop
inc
pop
xor
or
mov
les
loopne
sub
adc
jl
jns
jg
lcall
insb
adc
push
and
ret
addb
sbb
jmp
push
xchg
mov
mov
sbb
adc
cmpb
aam
add
xchg
pop
adc
pop
or
ret
negl
mov
sbb
cmp
lods
push
lret
or
sti
ljmp
fsubrl
jo
popf
icebp
movsb
sbb
fs
jge
and
enter
out
mov
in
aad
jmp
xchg
andl
popf
sub
jmp
stc
lcall
mov
push
jb
dec
int
inc
shlb
js
or
adc
aam
cmpsb
pop
mov
in
push
lret
pushl
pop
push
les
andb
hlt
push
imul
inc
add
or
xchg
cmp
mov
mov
mov
repnz
cs
inc
xchg
cmpsb
es
sub
jae
das
std
scas
cmp
pop
jae
jb
inc
mov
adc
insb
dec
call
clc
subb
cmp
mov
jecxz
xor
xor
inc
and
cmp
adc
std
or
iret
cwtl
jo
push
push
xor
aaa
aam
jg
inc
pop
xchg
mov
mov
outsl
stc
fstpt
inc
fnsave
sbbb
pop
and
loopne
js
nop
add
xor
sub
push
sbb
push
mov
or
cli
or
je
into
call
pop
push
push
pop
call
mov
mov
pop
lds
jbe
les
jp
sub
push
sbb
pop
loope
mov
jmp
mov
mov
add
lcall
sbb
or
into
xchg
test
push
pop
addb
int3
mov
sbb
outsl
mov
pop
push
xchg
or
sub
insl
ljmp
js
je
insb
mov
xor
or
xorb
fsubrs
jmp
mov
sbb
test
pop
adc
shlb
mov
sub
add
adc
add
mov
clc
vpackuswb
int3
inc
ficoms
test
or
adc
add
lea
fs
push
ret
inc
adc
jb
pop
add
mov
push
xor
inc
push
in
negb
push
adc
lea
mov
sub
push
js
mov
mov
pop
or
sbb
inc
aaa
xchg
adc
jg
dec
and
mov
add
test
dec
iret
mov
les
outsl
ljmp
dec
xchg
jne
div
mov
jp
push
fmuls
insl
mov
popa
jl
xor
sub
stos
lret
cmp
dec
shl
add
loope
dec
leave
icebp
add
mov
mov
data16
and
leave
xor
lret
neg
mov
pop
leave
sub
inc
mov
and
stos
test
jg
push
push
lret
fcompl
shll
cld
adc
int
sub
adc
pop
xchg
test
ret
test
fdivs
push
gs
movsl
mov
adc
icebp
addr16
rcl
mov
in
ffreep
mov
xchg
pop
js
jmp
and
inc
repz
and
pop
ret
or
jb
dec
dec
xorb
lahf
push
ljmp
inc
inc
aad
xor
and
lock
push
pop
sub
and
ds
ljmp
cmc
xor
cmp
int
sbb
fstp
or
inc
insb
adc
adc
mov
cs
int
das
xchg
test
divb
jmp
push
rcrl
mov
sub
stos
js
xor
mov
adc
cmp
arpl
scas
adc
add
aad
aaa
push
aaa
sub
fnsave
or
cltd
lret
or
xchg
pop
cli
insb
mov
pushf
sub
xchg
or
pop
inc
add
addr16
clc
movsl
stos
add
lock
sub
lea
pop
jne
jno
lahf
jmp
add
mov
sahf
test
cmpsl
call
cmp
sub
sbb
push
or
inc
or
addl
adc
nop
adc
inc
jle
cwtl
pushf
mov
push
sbb
mov
jp
dec
dec
lcall
push
scas
fadds
mov
adc
add
push
mov
push
mov
cld
popa
out
lea
adc
ja
jnp
aad
pop
or
clc
mov
jl
hlt
xor
hlt
pop
inc
bound
test
movsl
inc
subb
pop
hlt
xchg
pop
clc
add
mov
add
adc
pop
test
pop
stos
or
imul
cmp
fcomi
push
push
ljmp
pop
nop
pusha
pop
cli
push
in
fadd
notb
adc
bound
push
popf
jo
ja
ret
dec
test
dec
in
mov
mov
repz
mov
cmp
cmp
sbb
lahf
sub
ret
out
dec
adc
mov
jne
mov
mov
jns
or
sbb
ficoml
movsl
imul
ss
mov
je
mov
pusha
xor
cmp
stos
ret
or
fstl
aad
mov
mov
pop
sub
add
inc
mov
rorb
mov
xchg
xchg
js
add
sbb
cli
adc
cmp
and
lods
pop
loopne
lret
icebp
fstps
or
pop
cmpsb
inc
mov
push
pushf
stos
aam
dec
cmp
jo
push
dec
aaa
cs
pop
ja
adcl
jg
xor
imul
mul
mov
out
lret
cmpsb
lahf
add
mov
bound
arpl
aad
cmpb
push
jmp
out
push
mov
ret
mov
dec
daa
aam
pop
rcrb
movsl
mov
minps
add
int
or
in
js
jle
into
xchg
and
pushf
int3
adc
pop
lcall
sbb
jecxz
rolb
mov
inc
jae
inc
fcmovnbe
cmp
add
mov
int
mov
out
lahf
push
jbe
divl
jp
lea
or
rcll
iret
dec
push
sbbl
repz
or
push
inc
jg
jg
ss
test
push
fsincos
lret
add
adc
adc
push
aaa
fstl
xchg
inc
shrl
mov
jns
sub
jecxz
mov
mov
sbb
dec
lds
mov
les
mov
mov
divl
in
or
rolb
pop
cltd
sbb
jle
sahf
leave
and
mov
push
loop
mov
add
imul
fwait
loopne
jecxz
or
inc
inc
fistps
jns
dec
inc
movl
mov
out
xchg
inc
aaa
add
out
aas
les
jle
rolb
in
push
or
mov
gs
inc
pop
test
push
pusha
cmpb
jne
dec
sbb
sahf
or
mov
add
inc
add
and
xor
and
add
mov
push
sub
and
and
and
pop
push
or
inc
testb
test
mov
jmp
lea
into
xorb
mov
bsf
sbb
adc
sub
mov
scas
aad
cmp
push
nop
fs
outsl
icebp
cmp
clc
mul
les
add
aaa
xor
mov
les
pusha
icebp
mov
sbb
lret
inc
mov
mov
mov
sub
pop
push
and
test
or
push
mov
iret
pop
push
dec
sub
rol
aam
xchg
jne
push
leave
and
xor
push
cmp
movsl
mov
cmp
cmpb
pop
adc
loopne
or
sbb
test
pop
rolb
in
jns
mov
jge
mov
aas
adc
inc
adc
xchg
mov
fistl
cs
orb
jg
xor
mov
add
inc
pop
cmp
xor
sbb
sbb
fildll
outsb
ror
pushf
sbb
mov
mov
cmpl
adc
mov
sbb
out
jp
ret
rolb
cmp
jecxz
or
in
insb
push
or
fsubs
push
pop
adc
hlt
mov
aad
daa
add
ds
in
inc
insl
jl
cltd
icebp
in
cmp
pop
jbe
ds
push
outsb
push
subl
inc
mov
jle
mov
jecxz
inc
rcll
inc
jo
adc
stc
lcall
pop
xor
cld
adc
fisubrs
push
lds
or
adc
mov
pop
sbb
adc
push
scas
and
fistpll
mov
cltd
pop
cmp
fwait
repnz
int
out
loopne
cmp
inc
cmp
xchg
cmp
xchg
push
and
push
mov
pop
xor
sub
push
adc
sbb
or
test
aaa
fnstenv
scas
adc
test
adc
flds
mov
jns
mov
xorb
daa
cmp
ret
mov
loopne
xor
loop
inc
int3
shrb
cmp
scas
or
push
std
inc
dec
cld
add
adc
sub
aaa
fdivrl
adcb
inc
cmpsl
dec
scas
test
movsb
push
xchg
out
rcll
subl
push
mov
mov
rcrb
outsl
add
pop
push
mov
cmp
testb
push
pop
and
add
testl
jge
bound
mov
daa
and
mov
clc
in
loopne
adc
xor
hlt
mov
push
scas
rcr
xor
fwait
sbbb
inc
nop
pop
mov
lahf
sub
adc
loope
add
push
lds
les
insl
mov
xchg
call
fidivl
iret
movsl
test
jecxz
sarb
add
add
inc
pop
hlt
sbb
jmp
je
testl
adc
clc
or
adc
aaa
inc
inc
std
mov
into
fs
or
rorl
push
jge
xchg
mov
test
enter
test
pop
idivl
call
add
out
stc
mov
add
mov
rclb
test
push
aaa
lret
sbb
in
jg
jno
ret
in
inc
pop
sub
popf
loopne
pop
adc
int
push
cmp
mov
js
outsb
negl
mov
fistps
das
adc
cli
lcall
in
mov
pop
mov
mov
sub
sbb
inc
mov
sbb
adc
int
inc
in
pop
push
data16
mov
loopne
xlat
mov
clc
out
mov
and
ret
dec
jmp
dec
stos
in
push
push
jecxz
mov
mov
and
inc
aas
mov
lcall
mov
je
out
fdivrs
dec
icebp
mov
cmp
cld
xchg
add
push
rorl
xchg
sbb
pop
cmpsl
js
sbb
rcll
imul
into
imul
adc
pop
out
jp
pop
push
inc
adc
clc
sti
sbb
sbb
das
sbb
cmpb
or
mov
loopne
inc
pop
sbb
push
test
ret
roll
push
aaa
movsb
jns
cmovge
jle
sbb
xlat
add
cmp
add
aas
and
xchg
inc
emms
cmp
pushf
stc
lret
sahf
push
cli
inc
shrb
les
add
addr16
and
sub
inc
outsb
loope
jb
mov
mov
or
add
cld
mov
sub
mov
dec
sbb
push
in
cmpsl
jno
popa
mov
xor
and
push
mov
pop
adc
mov
cmp
bound
cmp
les
popl
loop
icebp
movsl
repnz
add
into
adc
sub
push
and
aaa
dec
jbe
jne
loope
adc
call
dec
xor
jl
loop
loope
push
not
ficoms
cltd
pusha
insl
ljmp
aad
lock
icebp
rolb
aam
push
pop
pushf
in
and
pop
inc
test
and
rcr
dec
adc
movsb
mov
xorb
xor
sbb
jne
pop
clc
adc
fsts
adc
dec
fiadds
in
adc
test
arpl
mov
call
inc
mov
aaa
push
outsl
add
std
ja
imul
testb
adc
int
or
nop
and
mov
addb
sbb
inc
icebp
rcl
dec
or
cmp
mov
dec
mov
mov
mov
push
push
jle
test
or
loopne
jl
nop
add
aad
pop
dec
subb
mov
push
and
pop
add
fldt
sti
lahf
pop
lea
add
add
jnp
mov
pop
push
icebp
inc
pop
imul
push
gs
dec
adc
fwait
or
fstps
rep
stos
pop
push
add
dec
sar
inc
or
jnp
jo
ja
jnp
pop
inc
dec
add
cmpsb
outsb
sbb
cmc
cmc
mov
pusha
cmp
iret
lret
js
ret
stos
fs
in
bound
mov
mov
inc
push
test
icebp
mov
mov
jecxz
jle
fildll
cmp
arpl
push
xor
mov
sbb
sbb
lcall
push
xchg
sbb
add
std
mov
mov
scas
ror
mov
xor
pop
inc
mov
sub
in
adc
fstpl
mov
sbb
dec
mov
jp
or
or
inc
popa
xacquire
popa
xchg
test
movsl
jl
mov
int3
or
imul
ds
adc
xchg
shr
and
inc
xor
and
mov
daa
dec
enter
xchg
outsb
or
mov
cmc
outsl
sti
enter
jge
iret
fcompl
inc
addl
cwtl
leave
enter
xchg
add
push
jmp
xchg
sub
lcall
and
negb
lods
addr16
xorl
mov
push
add
lret
cmp
and
push
xchg
inc
in
mov
adc
je
int
arpl
add
mov
or
sub
xor
insb
loopne
cwtl
push
dec
sbb
adc
mov
call
jbe
add
int3
mov
xor
mov
mov
aaa
inc
jne
ds
or
pop
adc
mov
iret
cltd
outsl
push
std
cmpsb
loop
adc
hlt
mov
and
sarl
dec
loope
mov
ja
and
xchg
sbb
inc
pop
nop
arpl
imulb
dec
mov
into
outsb
ja
xor
scas
jns
pop
or
les
insl
fucomi
cmpsb
pop
sub
sub
fidivrl
js
inc
push
and
jle
pop
mov
mov
andb
mov
arpl
inc
das
xchg
stos
sahf
cltd
rcrl
rcl
lock
sbb
fs
and
leave
jl
sbb
xor
in
aad
add
cmp
sbb
jmp
or
adc
ljmp
sub
callw
dec
dec
sub
test
push
xlat
fmuls
dec
dec
adc
mov
adc
and
pop
and
mov
pushf
js
cmp
jbe
cmpsl
outsb
xchg
idiv
or
inc
inc
jb
pop
seto
outsl
repnz
je
mov
mov
in
test
xor
cli
lds
jo
mov
cld
add
stos
inc
mov
lret
adc
lahf
mov
insl
imul
or
jmp
xchg
popa
pop
pop
pop
jo
scas
and
fildl
xchg
cmc
or
add
or
sbb
cmc
pop
jg
cmp
mov
cli
xorb
pop
fistps
outsb
sub
dec
pop
dec
sub
fucom
push
repz
call
or
inc
pusha
dec
outsb
xlat
jnp
ret
and
mov
dec
call
mov
and
cltd
call
dec
into
into
xor
push
push
sub
mov
and
mov
mov
test
adc
dec
in
and
inc
sti
mov
push
lret
mov
xchg
dec
iret
or
push
les
imul
dec
ret
xor
mov
inc
sub
rcr
aaa
loopne
fidivs
inc
outsl
mov
cli
insl
nop
or
mov
mov
fsubrs
movsb
ss
dec
xor
sbb
cmp
and
loopne
or
cmc
cmc
inc
jno
inc
in
addb
sbb
mov
std
mov
push
fidivrs
clc
or
aas
cmp
xlat
adc
out
mov
pop
jmp
xor
pop
js
mov
pushf
nop
sub
out
cmp
sbb
cmp
aas
pusha
pop
cs
mov
dec
adc
clc
push
cmp
dec
xor
aad
lods
mov
sub
sbb
dec
hlt
or
pop
sbb
xchg
xchg
lds
scas
js
inc
add
dec
gs
cltd
js
jl
ja
js
addr16
insb
mov
lods
mov
mov
aas
adc
pop
jo
jne
or
dec
mov
jle
in
sarb
or
cld
add
ficoms
cltd
data16
sbb
push
sub
arpl
les
push
or
cs
cmpb
mov
leave
int3
mov
outsb
add
imul
and
xor
adc
movsl
mov
leave
in
xchg
cld
adc
jl
pop
scas
jle
sti
fwait
push
into
das
insb
mov
push
mov
and
sub
inc
mov
loopne
pop
xchg
fcompl
add
sarl
jp
dec
ret
push
xor
mov
mov
in
mov
add
sub
push
adc
push
pushf
mov
sub
movsl
pop
outsb
lods
xor
stos
fildl
cmpsb
loop
out
push
cmp
pop
andb
xor
test
sub
out
insl
mov
inc
pop
and
addr16
rolb
out
and
mov
cmp
fs
jo
inc
movsl
push
jns
xlat
or
pop
fildll
ret
dec
icebp
mov
outsb
lds
push
mov
mov
pop
lods
call
xchg
xor
sahf
and
aad
ds
lds
mov
test
push
fs
rolb
and
adc
jnp
mov
in
fbld
add
aad
mov
jb
push
push
aas
pop
pusha
dec
les
insb
stos
popa
outsb
push
sahf
jb
icebp
in
dec
lret
call
and
xor
cmp
mulb
mov
loope
push
push
filds
jno
adc
mov
gs
mov
and
cmp
cmpsl
mov
in
jne
jnp
daa
les
jnp
es
adc
or
add
rolb
popa
mov
aaa
jle
ds
push
in
sbb
sub
push
and
in
fisubl
or
mov
imul
pop
shl
mov
daa
lret
mov
add
outsb
xchg
dec
pop
rorb
jecxz
adc
mov
mov
adc
pushf
test
and
inc
inc
sbb
test
inc
icebp
mov
mov
push
aas
mov
sbb
mov
jne
adc
adc
cmp
pop
fnstsw
or
cmp
mov
mov
mov
outsl
inc
pop
dec
mov
mov
mov
mov
jl
inc
insb
fistl
push
lcall
lahf
mov
add
pop
fdivrs
dec
rclb
mov
add
push
inc
cli
xor
adc
loope
xchg
imul
push
push
pop
mov
mov
repnz
adcb
enter
dec
inc
jg
iret
lret
mov
mov
incb
dec
out
xor
add
mov
dec
push
iret
in
sbb
mov
int3
jno
mov
and
pop
gs
aam
pop
out
push
dec
xlat
mov
scas
adc
sbbb
add
cwtl
mov
fildl
in
ja
jg
fwait
call
xor
mov
fbstp
popf
mov
mov
out
cld
icebp
mov
xchg
test
push
mov
pushf
fcmovb
loop
mov
inc
inc
fistpl
shl
es
mov
pop
cli
mov
sbbl
repz
cmp
add
shl
mov
sub
adc
cli
out
jecxz
sar
gs
pop
jo
test
mov
push
arpl
push
mov
sbbb
sub
std
rcrb
js
jle
out
clc
mov
add
mov
pop
mov
adc
and
aaa
fidivs
sarl
add
test
push
mov
insl
xor
iret
sub
test
jmp
into
mov
inc
in
mov
push
mov
add
sub
roll
adc
mov
pop
mov
jmp
and
pop
adc
push
xor
or
inc
in
nop
add
cmp
inc
dec
ret
mov
sub
aad
call
pop
test
mov
mov
inc
lret
push
inc
fiadds
int3
movsl
mov
mov
xchg
push
add
adc
mov
in
nop
popa
movsl
cmp
jmp
rorl
arpl
adc
adc
mov
push
pop
adc
mov
sbb
js
dec
fisubl
cmp
hlt
and
xor
incb
and
rcrb
mov
cmp
pop
mov
fs
pusha
pop
xor
imul
cs
ficoml
cmp
imull
lahf
ja
push
je
xchg
mov
cmpsb
scas
in
pusha
sub
inc
or
mov
bound
lret
add
rcrb
inc
xlat
and
mov
push
mov
sub
and
out
push
sub
push
fildll
xchg
int
add
inc
mov
fnstsw
clc
pop
cltd
xor
imul
arpl
or
xchg
enter
pop
jp
add
cmp
jo
cs
push
add
sub
mov
test
sbb
repz
lahf
pop
outsb
pop
loop
xchg
out
fisubrl
cmp
push
mov
pop
std
or
adc
call
sti
inc
push
sbb
clc
das
je
jne
xchg
mov
popa
pop
insb
dec
mov
shlb
cmpsb
mov
lahf
push
mov
fs
sbb
adc
sub
and
mov
sub
jmp
loope
leave
out
inc
xor
bound
mov
fwait
jbe
mov
subb
bound
sbb
push
testb
jo
sub
es
mov
inc
repz
cltd
fstps
js
sbb
enter
pop
movsb
divb
xor
pop
xchg
test
test
dec
mov
in
jnp
imul
insl
test
cltd
fs
movsb
cmpsb
lahf
push
dec
fcomi
fcomi
or
test
push
test
movsb
xchg
popa
adc
inc
xor
mov
push
hlt
and
sub
sbb
ja
and
out
and
jl
repz
jae
imul
shlb
push
leave
adc
adcl
mov
in
ficomps
inc
fistpll
in
rolb
pop
repz
ds
dec
pop
pusha
mov
jmp
pop
fs
fildll
cwtl
test
shrb
cmp
cli
mov
push
push
in
xchg
mov
add
mov
push
shlb
cmp
icebp
lods
rorl
push
inc
lods
js
out
aaa
pop
pop
cmp
ret
xchg
and
outsl
sub
sub
fistpll
mov
pop
push
or
fidivrs
sarl
jo
mov
lods
out
incl
fidivrl
fwait
cmp
mov
fldcw
test
hlt
sbb
mov
aaa
adc
xlat
out
jne
fwait
jge
mov
fldt
sti
test
test
test
icebp
pop
jle
sub
dec
push
fwait
sbb
jl
sbb
mov
pop
jle
cmpsl
arpl
sub
sub
xor
dec
filds
bound
mov
ret
fsubl
repnz
pop
test
cmp
int3
imul
xor
mov
jle
insl
popa
dec
or
lds
js
sub
push
and
negl
push
ss
jmp
mov
fisubrs
and
adc
dec
shll
imul
cmpsb
mov
aas
pop
cmp
mov
mov
xorb
insl
lret
or
dec
and
testl
repnz
scas
loope
adc
in
jnp
lods
push
jle
nop
mov
nop
fldt
insl
xchg
xchg
mov
outsl
loop
xor
sbb
push
push
inc
mov
mov
pop
imul
or
sbb
out
test
xor
add
fmuls
mov
jecxz
ss
dec
xor
negl
inc
popa
pushf
cmp
add
inc
cmp
in
mov
lock
mov
jp
mov
je
cs
ja
dec
movsl
mov
or
imul
loope
fisubrl
jle
cmpsb
popf
pop
out
xchg
incb
fiaddl
sbb
mov
aam
or
xchg
adc
addr16
inc
popa
adc
mov
jle
add
sbb
adc
ficoml
fdivs
or
bound
outsb
cmpsb
lods
sbb
mov
int3
xchg
mov
cmp
imul
mov
xor
mov
fisubl
lock
fisubrl
lods
cmp
aas
pop
sub
ret
jle
test
push
popa
movb
mov
xor
dec
xchg
lods
outsl
imul
jns
jmp
je
or
daa
jne
loop
dec
rcll
imul
adc
mov
inc
pop
daa
mov
pop
jge
mov
pushf
in
pusha
mov
iret
dec
jne
ret
mov
addr16
push
sti
inc
pop
addb
enter
mov
subb
in
cmp
jmp
mov
cltd
push
test
ret
scas
push
rorb
je
add
ret
fists
test
ja
jne
out
adc
jbe
push
ja
inc
js
outsb
aad
imul
out
in
js
popaw
xor
stc
jbe
fldl
arpl
or
lds
lret
js
add
ret
inc
rcrl
jno
add
mov
mov
iret
push
aam
std
push
mov
out
dec
jl
std
lds
push
jmp
inc
aas
rclb
in
lods
std
add
inc
jge
dec
jno
lds
and
push
xor
cmpsl
out
push
andl
ljmp
mov
and
or
sbb
push
or
mov
std
add
adc
std
outsb
insb
rcll
inc
add
adc
fmull
das
adc
and
jnp
cmc
stc
rolb
sbb
xchg
cmp
xor
lret
sti
loope
fidivrl
out
aas
lods
dec
pushf
cs
mov
call
movsb
lahf
mov
sbb
daa
fdivs
push
cmp
sbb
clc
jmp
stos
sti
push
and
pop
pop
push
lcall
push
xor
or
adc
sbb
sbb
or
or
or
pop
adcb
addb
je,pn
jbe
test
or
or
mov
or
clc
popf
das
sbb
jbe
xlat
aad
lret
push
dec
orb
icebp
add
out
in
cmp
movsl
lods
scas
sarb
je
popl
dec
sub
imul
xchg
nop
fdivl
jne
daa
xor
jo
cmp
jb
enter
xchg
lret
lods
mov
adcl
or
in
mov
out
in
mov
inc
es
arpl
pop
popa
addr16
shrb
les
jle
ljmp
stos
pop
mov
cli
pop
cld
mov
sbb
mov
inc
mov
inc
xchg
push
mov
test
dec
ret
pop
push
mov
cltd
push
scas
outsl
pop
stos
or
and
xchg
pop
jle
aaa
stos
lock
aam
scas
inc
test
aad
mov
jl
popf
push
push
rcrl
cmp
shlb
shl
in
mov
lahf
movsb
jno
or
fptan
push
sarl
addb
cmp
cli
cli
and
mov
add
insl
mov
cmpsb
mov
repz
lock
mov
test
pusha
xchg
hlt
adc
je
jne
push
xorb
mov
cmp
ret
test
push
xchg
scas
movsl
sarl
call
or
cmp
adc
test
push
jmp
fists
pop
rorb
adc
xchg
push
push
xchg
dec
subl
scas
pusha
and
fstpt
int
sbb
fsubl
jp
jbe
sbb
cmp
add
mov
clc
ret
out
pop
sbb
aaa
sbb
cmpsb
out
push
jbe
xor
in
add
cmp
orb
jo
or
pop
or
nop
cs
cmp
fstps
ret
fidivs
add
mov
loope
dec
ja,pt
lahf
push
cmp
inc
pop
or
cli
mov
jo
xchg
incl
test
subb
add
mov
sbb
lods
inc
sub
and
std
or
push
dec
lcall
loopne
in
scas
outsl
dec
xor
push
das
mov
test
or
jnp
push
insb
das
shrl
call
test
mov
and
mov
mov
clc
pop
sub
add
and
test
addb
loopne
xor
shll
hlt
les
lock
call
imulb
and
fidivrl
jbe
xor
xchg
lss
loopne
add
mov
adc
or
pop
dec
or
pushf
lods
stos
or
mov
push
lods
dec
or
inc
daa
clc
mov
jg
mov
cmpsb
ljmp
mov
loope
addb
add
cmc
fisttpl
and
shlb
and
sahf
pop
mov
out
cmp
movsb
push
rolb
jecxz
xor
test
sti
popa
fnop
jmp
cmp
push
inc
hlt
out
imul
inc
js
fistpl
adc
fcmovnb
add
jecxz
xchg
stos
cmp
push
dec
mov
xchg
xchg
nop
loop
sub
adc
or
idivb
std
pop
aaa
sbb
xorl
cmp
rclb
call
jle
clc
xor
shrl
xchg
ss
idivb
and
add
dec
cmpl
inc
and
popl
in
inc
syscall
jo
jle
inc
pop
mov
or
and
stos
pop
lret
scas
fdiv
pop
xor
cltd
inc
stos
loop
sub
ss
push
stc
rcr
push
xor
ss
or
xchg
mov
inc
jmp
arpl
test
xchg
push
push
icebp
das
push
adc
adc
insb
add
add
loop
ret
in
sbb
pop
mov
xor
or
jmp
mov
sbb
dec
ja
and
iret
jge
or
xchg
pop
mov
in
push
inc
rorb
popf
lock
out
or
lcall
mov
in
mov
jmp
mov
and
ret
pop
insl
sbb
add
arpl
mov
sub
mov
cmp
inc
jno
sahf
cmc
mov
fsubr
loop
scas
push
jle
inc
push
sbb
inc
adc
mov
jge
ss
test
xchg
dec
fnstcw
cmp
push
movsb
mov
sub
add
les
xor
fimull
add
arpl
repnz
pop
xchg
xor
test
fcoml
dec
mov
lods
push
dec
mov
push
add
ss
or
mov
es
test
dec
outsl
mov
pop
bound
rol
cld
pop
int
insb
pop
lret
push
pop
sbb
pop
in
or
call
lock
cmp
inc
in
inc
imul
insb
rcrb
sub
add
push
pop
cmp
cmpsb
mov
stos
jg
arpl
mov
pop
cmp
ja
or
dec
push
ljmp
lea
enter
mov
inc
cmc
hlt
iret
mov
xchg
repz
lds
lret
fisttpl
sti
aaa
bound
in
or
sbb
pop
icebp
adc
nop
jns
outsb
mov
cs
repnz
or
cmp
rcr
pop
add
pop
add
aaa
aad
pop
cs
add
jecxz
or
int
fstpt
pop
push
je
xor
rclb
repnz
aam
mov
mov
ss
sub
or
movsb
into
cmp
jno
mov
outsb
lods
je
jnp
push
jecxz
jno
adc
sbb
fldenv
mov
fdivrs
mov
pop
cs
add
push
and
pop
fwait
or
inc
lods
lcall
jle
loop
xchg
xor
adc
nop
mov
push
sub
cmpsl
pusha
sbb
stos
loopne
jmp
rcll
fisubrs
fstps
or
mov
add
hlt
sub
test
mov
ret
adc
mov
and
push
mov
cs
andl
ret
mov
bound
stos
je
bound
cmc
mov
pop
inc
in
mov
mov
cli
fucomip
dec
ret
adc
in
leave
js
add
lods
and
jnp
push
test
push
mov
and
subl
xchg
fldenv
sub
std
sti
and
push
xor
outsb
mov
rorl
push
int3
ljmp
lcall
pop
push
fiaddl
shr
or
xor
into
iret
xchg
cmp
fiadds
xor
clc
sub
push
js
pop
dec
and
push
cmpsl
jae
push
jns
ret
cli
repz
mov
jle
inc
dec
fcompl
mov
repz
mov
pop
fcomps
out
lahf
sub
cmc
dec
add
mov
xchg
stc
inc
jnp
push
in
mov
xchg
je
push
xchg
and
add
fdivl
add
mov
mov
mov
jbe
loop
sti
out
lock
mov
mov
mov
adc
jle
dec
out
shll
push
jmp
mov
test
out
clc
stos
xchg
fidivrs
add
push
test
mov
pop
mov
rcr
scas
mov
jge
mov
addb
out
xlat
jnp
mov
and
sarb
test
cmovne
jg
mov
mov
aam
sbb
fcmovbe
lods
not
ljmp
mov
idivl
repz
xchg
repnz
test
xor
testb
lcall
cmp
cmc
sub
gs
dec
cltd
or
jmp
bound
imul
jge
mov
scas
loop
lahf
fstps
add
call
rorl
outsl
pop
push
lret
into
cmovnp
jge
rorl
mov
insl
pop
jle
call
jb
mov
fcomps
fcompl
cmp
mov
fistpl
sbb
mov
xchg
jo
test
dec
fildll
push
pop
js
add
xor
and
push
pop
call
cmpsb
mov
mov
pop
or
pop
inc
mov
and
jl
pop
jp
icebp
push
bound
sarl
push
adc
pop
bound
das
push
xor
push
add
or
xchg
lcall
inc
mov
mov
or
sub
inc
mov
add
imul
xor
pop
es
jno
jnp
sub
dec
xchg
jg
adc
aaa
jnp
sbb
jmp
add
xorb
ror
mov
jp
loopne
inc
add
in
popf
outsb
push
fcmovne
test
mov
pop
push
jecxz
lret
call
jb
push
adc
push
fcompl
jecxz
aad
ss
imul
movsl
jge
sbb
mov
push
idivw
mov
sti
sbb
mov
xor
and
sbb
ja
imul
repz
mov
and
push
xchg
push
jns
dec
mov
push
and
dec
outsl
in
xorl
ljmp
es
sbb
loop
rcr
iret
ds
rcll
cmp
fdivrs
mov
int
push
ljmp
pusha
arpl
je
enter
xor
minps
pusha
filds
daa
or
mov
pop
and
inc
adc
pop
or
pop
jp
and
mov
dec
add
pop
js
push
test
mov
in
and
jle
data16
bnd
test
testb
dec
or
int
cltd
inc
insl
dec
inc
xlat
shlb
ret
mov
pop
pop
subb
sarb
jnp
jmp
arpl
loope
cs
test
push
shrb
lods
fstl
test
push
dec
dec
cmp
inc
pop
js
mov
enter
out
push
push
mov
jge
insl
cltd
inc
out
or
dec
push
dec
or
cmp
xchg
pop
and
pop
repnz
fcmovb
mov
inc
push
mov
loop
sbb
test
and
fdivrl
js
popf
dec
push
mov
cmp
mov
add
push
jne
stos
loop
xchg
lea
mov
xchg
cmc
xor
loopne
jge
sbb
jg
into
frstor
cmp
sub
pusha
daa
mov
sub
insb
cs
mov
pop
lds
mov
pop
push
dec
cmp
push
jno
mov
ret
loopne
dec
xchg
add
inc
mov
xchg
pop
push
cmp
sbb
les
cltd
ret
or
testl
loope
dec
sbb
repz
pop
pop
jl
js
orb
push
decl
movsl
cmpb
mov
rcl
in
pop
das
mov
aam
leave
mov
adc
in
lret
or
pusha
cmp
test
movd
and
cwtl
scas
pop
add
inc
xlat
std
add
in
lcall
test
ffreep
ret
mov
jmp
xlat
leave
pop
cs
adc
addr16
shll
js
jmp
dec
das
inc
inc
adc
mov
mov
push
and
cmp
ficomps
aaa
adc
lock
or
insl
mov
sbb
sub
dec
fstpl
mov
je
pop
sub
mov
add
call
xchg
insb
fcomi
xchg
loope
push
lret
jl
push
in
addb
outsb
incb
add
and
rcrl
fs
das
std
neg
scas
bound
or
jne
mov
mov
fstp
pop
pop
jne
or
pop
add
jmp
jne
cmp
fchs
cmp
fmull
loop
test
jg
rcrl
fists
sbb
hlt
int3
xor
shrl
loope
into
idivl
inc
aam
pop
add
leave
cmc
adc
inc
pusha
repnz
aad
sub
dec
stc
mov
cmp
jmp
stos
mov
scas
pop
adc
repz
jbe
mov
sub
xchg
ss
scas
or
mov
mov
push
out
dec
adc
in
adc
or
test
enter
shrb
jg
mov
jns
sub
je
push
mov
push
cld
inc
hlt
inc
mov
popa
xchg
xor
push
sub
pusha
cs
push
inc
ficoml
mov
mov
fnstsw
stos
inc
adc
ret
mov
sub
inc
cmp
clc
xchg
sbb
mov
rcll
add
sbb
mov
lret
adc
or
jl
inc
lock
jge
jecxz
add
movsl
mov
or
cli
test
mov
adc
xchg
mov
sbb
out
jo
add
xchg
test
stc
fwait
jb
es
sub
test
add
mov
and
push
inc
jg
xchg
add
fistpll
adc
pusha
std
sbb
push
inc
lret
dec
jb
push
sti
cmpsb
push
pop
clc
cmp
rol
mov
std
inc
dec
inc
dec
push
sti
icebp
int
addl
leave
repnz
push
adc
push
adc
cmpsl
pop
cs
and
xchg
pop
push
ja
test
cli
ret
addr16
xchg
shlb
sbb
insb
aas
sbb
xchg
pop
xor
sahf
sbbb
pop
mov
das
jg
cmp
movsb
mov
and
push
cmp
cmpsb
fldcw
js
lock
popf
mov
add
dec
push
ljmp
sbb
cmc
dec
or
outsb
or
test
iret
test
rolb
fwait
clc
xchg
jmp
insb
push
add
add
and
bound
pusha
mov
adcl
cmc
push
and
add
mov
in
mov
mov
and
jle
notl
mov
mov
ret
mov
test
sub
std
popa
ret
mov
aas
inc
cmpsb
jp
sbb
jno
inc
add
punpcklbw
or
and
lock
and
mov
mov
mov
incb
into
inc
mov
pop
and
pop
bound
std
enter
inc
dec
dec
mov
or
push
mov
mov
rcl
arpl
ljmp
jne
inc
cwtl
xchg
call
dec
clc
sahf
sub
lea
sub
sbbb
pop
cltd
dec
or
mov
lcall
adc
xchg
ret
push
sahf
xor
int3
scas
clc
or
stos
addb
jmp
icebp
inc
mov
push
sbb
pop
in
cmp
or
int3
je
call
sub
loopne
testb
pop
or
fnstenv
dec
adc
or
call
sub
leave
lret
xchg
jo
cmc
lods
mov
in
sub
stos
xchg
mov
cwtl
pop
aaa
fstl
xor
ljmp
xor
cli
or
mov
add
dec
mov
lods
sub
dec
das
cmpsw
pop
push
aad
add
sub
mov
notl
pop
mov
roll
mov
incl
adc
test
mov
shlb
jge
xchg
push
or
stos
mov
mov
test
push
lahf
push
push
frstor
push
add
jge
mov
stos
push
ds
mov
mov
call
mov
rcll
pop
cmpsl
push
fsubrs
dec
sub
mov
adcb
pop
aas
xor
fstpt
inc
jb
jb
jb
mov
cmp
xor
inc
dec
or
sti
sub
movsb
xchg
sbb
add
cmpsb
sbb
rorl
repz
push
cltd
push
push
outsl
rorl
inc
aam
faddl
lea
into
xor
pop
add
and
mov
sahf
lret
pop
lock
or
sahf
jno
jmp
mov
aas
cmp
dec
push
mov
inc
xchg
mov
fsub
das
fistpll
mov
add
les
adc
lea
in
test
cmc
aaa
and
xchg
mov
sub
nop
out
fs
xchg
pop
mov
pop
mov
imull
insl
jb
ljmp
pop
loope
push
add
ffreep
add
call
subb
das
psllq
xor
in
and
add
cwtl
sub
xchg
mov
je
dec
popa
pop
dec
push
stos
jae
mov
sub
adcl
jmp
add
push
add
gs
dec
icebp
pop
and
rorb
jmp
lods
pop
mov
push
js
mov
xchg
fcmove
stos
pop
fcoms
inc
push
and
icebp
mov
jne
repz
add
push
shl
scas
mov
fs
mov
add
push
push
xchg
out
stos
adc
mov
jb
add
insb
int
push
xchg
decl
xlat
cmp
jmp
jne
aaa
mov
mov
fcompl
fstpl
dec
decl
push
mov
dec
fimuls
adc
fisubl
imul
jnp
jnp
outsb
in
loopne
lods
jg
sti
cmp
adc
mov
dec
xor
mov
les
test
subb
cmp
push
ljmp
jecxz
dec
sbb
mov
add
movsl
scas
mov
outsb
jge
test
push
fcoml
gs
xchg
adc
sub
push
mov
or
lock
addr16
outsl
xchg
repnz
icebp
das
ret
jecxz
xchg
push
outsb
xor
xchg
jle
xor
xor
push
and
imul
dec
xor
dec
push
ds
nop
xchg
fisubrs
xor
and
daa
push
fnsave
mov
xchg
mov
jb
ror
or
das
sub
enter
roll
cmpsb
clc
mov
rorl
loop
or
and
into
mov
pop
push
bound
sub
mov
push
xorb
pop
dec
mov
cmp
int
fistl
push
sbb
sub
xor
jge
jb
enter
jne
pop
sbbb
fsubr
sub
iret
out
mov
jns
add
pop
mov
and
xchg
mov
sub
adc
sub
stos
loopne
cli
jo
mov
fldt
rcr
lods
cs
aam
adc
inc
mov
add
dec
pop
orb
pop
mov
sar
xchg
cld
jecxz
mov
out
adc
mov
lods
mov
adc
sbb
or
scas
mov
add
cmp
add
loope
and
inc
or
add
mov
jnp
and
jno
jmp
add
ret
lock
loop
das
lock
pop
repnz
lahf
dec
dec
fsincos
in
ja
or
dec
or
sub
test
push
inc
jmp
sbb
sahf
fnstenv
ljmp
inc
imulb
sti
ret
inc
and
loopne
cmp
mov
ss
pop
mov
push
cmc
mov
mov
sbbb
and
and
xchg
mov
cmp
cltd
lds
xchg
incb
push
cmp
cwtl
pushf
flds
fisttpl
mov
in
pop
outsl
cmp
pop
mov
leave
cmpsl
nop
andb
push
and
cli
imulb
imul
adc
mov
mov
sbb
mov
adc
pop
pushw
add
es
mov
pop
out
or
xchg
inc
adc
out
cmp
and
and
adc
ja
in
out
sub
sbb
and
xlat
mov
pushf
fldl
cmp
dec
and
sub
repnz
inc
mov
std
adc
push
inc
pop
fs
mov
add
aaa
addr16
ja
push
sarb
sbb
mov
jno
cmp
fcmovnbe
sub
icebp
pop
in
movsb
add
out
mov
cmp
lret
and
mov
insl
push
push
cmpl
pusha
sub
xchg
mov
fbstp
sub
mov
mov
pop
dec
icebp
push
les
bound
out
dec
mov
fldt
jne
xchg
mov
mov
in
sbb
push
add
inc
ljmp
enter
aaa
add
lret
je
adc
adc
adc
pop
aaa
pop
jno
in
xchg
imul
adc
es
inc
scas
vmread
cmp
and
add
dec
out
fnsave
cmp
insb
xor
xor
fstpl
cmpsl
adc
or
mov
or
jmp
jmp
xchg
jo
cld
cld
rcrl
adc
movsb
in
loope
mov
push
adc
mov
pop
mov
dec
pop
outsl
mov
add
push
rclb
mov
cmp
insb
add
pop
stc
aaa
jg
xchg
push
cwtl
mov
loope
insl
fcoml
icebp
addr16
cmp
scas
test
jo
or
jo
sbb
std
add
incb
outsb
sub
jecxz
call
mov
lods
mov
dec
inc
out
inc
fmull
xor
add
icebp
iret
mov
push
inc
mov
incb
inc
jp
mov
add
arpl
aam
xchg
lcall
push
xor
lods
xchg
mov
mov
adc
testb
arpl
pop
cmp
add
movsl
ljmp
popl
sbb
aaa
loopne
push
xchg
imull
dec
mov
push
xor
mov
dec
in
cmpb
jno
mov
push
lcall
adc
cmc
inc
sbb
clc
fucomi
les
nop
pop
out
jae
lcall
adc
nop
push
mov
dec
cmp
rcll
mov
xor
lods
add
daa
test
jp
fincstp
lret
or
mov
mov
adc
std
out
call
push
inc
mov
lods
in
aam
add
xchg
xchg
ret
jns
cmpsl
add
dec
inc
sbb
mov
mov
add
lret
sbb
mov
negb
cmp
sti
in
movsl
fistpll
pop
or
bound
popa
jb
hlt
in
imull
std
push
or
fisubrs
lods
push
movsl
pop
loope
xorb
adc
push
in
lret
and
push
xchg
jg
jb
lret
push
fnstsw
sbb
int
mov
aaa
in
sbb
jg
adc
mov
inc
sub
cmpsl
sbb
aas
sbb
inc
xchg
pusha
and
mov
inc
loop
add
roll
nop
inc
add
test
mov
aad
mov
mov
mov
inc
std
mov
ffreep
pushl
cwtl
sub
ljmp
and
movsb
dec
jae
lods
aas
push
jo
push
or
test
scas
adcb
stos
jbe
andb
jbe
repz
mov
sbb
in
inc
mov
ljmp
daa
iret
imul
push
jle
outsl
pushf
ror
or
push
dec
xchg
nop
adc
push
fsub
ret
insl
aam
into
in
sub
fwait
jle
outsl
imul
outsb
pop
ja
cwtl
add
adc
push
push
push
mov
xchg
add
stc
mov
sbb
mov
mov
mov
outsl
insb
sub
mov
jge
xor
in
std
cltd
and
pop
js
imul
ss
stos
insl
push
testb
cmp
jge
and
lahf
outsl
cmp
cltd
fsubs
fisubrs
cli
pop
ds
pop
cmp
fsubrl
jne
cmp
cmp
pop
sbb
pop
add
cmp
mov
cmp
push
mov
sub
push
sbb
daa
sub
and
xchg
in
leave
lds
fistl
or
test
inc
daa
xorb
daa
rcll
pushf
mov
cmp
std
outsb
out
xchg
enter
dec
scas
xchg
jge
sub
or
rolb
push
leave
sbb
and
fistpl
mov
shll
lock
sub
scas
cltd
cmp
pop
jb
mov
xchg
je
mov
repnz
mov
mov
int
into
mov
inc
fcoms
mov
pop
push
mov
shl
mov
adcl
cmp
add
mov
pop
jle
icebp
pop
cmpsb
in
xor
xlat
cmp
push
push
mov
inc
xor
mov
inc
jmp
ja
jne
pop
push
lret
push
lods
xchg
mov
mov
lods
mov
adc
das
addl
lock
insl
pop
mov
push
push
repz
add
fidivl
fistps
sahf
cmp
jl
pop
aam
xchg
lahf
ljmp
dec
pop
dec
scas
fistpl
sbb
inc
int3
inc
ljmpw
popf
jmp
rcll
out
adcl
fsubrl
sbb
mov
mov
scas
mov
sbb
dec
shlb
or
push
mov
lods
aad
mov
hlt
movl
mov
ja
insb
inc
mov
aaa
bound
inc
arpl
out
dec
and
mov
push
lock
sub
movsl
ficompl
jg
ljmp
and
das
cli
xchg
inc
call
in
xor
lods
orb
jbe
sub
ds
mov
dec
sub
in
mov
xor
push
xchg
sub
and
popa
pop
movsl
loop
lock
mov
in
pop
mov
rorl
test
cmp
aas
leave
xor
outsl
test
dec
mov
cmp
nop
lea
test
push
inc
pop
insb
push
mov
lcall
add
or
mov
mov
push
popa
pusha
mov
pop
inc
jne
movsb
push
andb
jns
xchg
adc
sbb
fstpt
cs
pop
decl
lahf
insb
mov
imul
fidivl
dec
or
pusha
call
lock
lods
out
adc
xchg
mov
mov
dec
jb
sbb
test
sbb
jns
and
push
sub
pop
mov
push
sub
add
mov
aas
adc
out
test
test
mov
ljmp
divb
push
insb
data16
out
fnstenv
inc
je
pop
sbb
gs
xchg
ljmp
sbb
lea
pop
pusha
jnp
push
mov
push
rolb
rcrb
mov
jns
fdivrl
cli
add
or
rolb
ss
test
jle
adc
dec
jg
xor
outsb
sub
leave
scas
inc
lcall
jmp
test
mov
movsl
dec
std
ja
in
leave
lods
mov
xor
lahf
shll
pop
fisubrs
stos
or
add
inc
dec
addb
mov
pop
lock
fcmovnb
xchg
mov
stos
fst
mov
jbe
sbb
mov
push
pop
incl
sub
xchg
out
adc
adc
jnp
scas
lret
xlat
xchg
inc
jg
xchg
jle
mov
adc
gs
enter
pop
cs
inc
add
cld
jno
cmp
ret
outsb
sub
mov
or
mov
mov
pop
push
mov
mov
mov
xchg
cmp
adc
mov
sarl
pop
inc
mov
sub
hlt
pop
add
daa
cmc
ret
outsl
loope
cmp
adc
jne
xor
jl
in
into
les
dec
cld
add
dec
jne
lea
adc
or
add
idivb
out
lcall
dec
dec
push
addb
in
iret
or
xor
test
cmc
fstpt
add
xchg
cwtl
mov
fisttpl
daa
popa
push
xchg
lods
dec
xchg
dec
push
arpl
sbb
jle
sbb
jns
loopne
xchg
fsubrp
bound
pop
or
add
sub
out
loope
call
lcall
mov
push
xchg
fs
cwtl
add
sahf
rol
inc
jmp
stos
and
in
arpl
cmp
jl
inc
shl
in
out
ret
add
pop
mov
dec
cmp
pop
es
aaa
clc
cmp
lret
clc
pop
imul
push
mov
cld
mov
pop
sub
es
into
cmpl
push
jecxz
testl
into
stos
test
mov
movsl
mov
pop
sbb
shl
lcall
fsubrs
ret
lret
cli
cli
pop
scas
fwait
pop
cli
cmp
pusha
jge
loope
shll
inc
cmp
inc
sbb
mov
mov
adc
dec
dec
add
test
jns
mov
and
mov
mov
mov
les
popa
sbbl
in
cmp
enter
bound
mov
mov
adc
pop
stc
shll
mov
ja
popa
cmp
mov
adc
mov
das
sbb
and
jno
mov
imull
ljmp
dec
jmp
sarl
ja
sub
inc
sub
mov
cmp
mov
mov
cmp
xor
mov
xchg
in
mov
outsb
sbb
mov
hlt
es
dec
fildl
push
push
add
orb
pop
loope
sbb
mov
or
outsl
mov
ret
add
or
in
push
adc
mov
ja
lods
xor
pop
jl
push
mov
stos
fwait
popf
in
inc
push
adc
pop
andl
jns
insb
imul
cmp
sbb
jmp
xchg
push
outsb
int
sarl
scas
lock
adc
cmp
mov
inc
mov
sub
inc
icebp
filds
adc
cmp
xor
out
jle
clc
out
out
mov
sbb
mov
pop
jecxz
xchg
mov
pop
lods
inc
je
adc
ds
std
loop
imul
stos
inc
aam
mov
les
cmp
es
add
pop
fidivrl
inc
leave
lahf
jecxz
aad
lcall
sbb
divps
mov
stos
adc
out
cltd
mov
cltd
pusha
test
mov
and
xchg
inc
lods
loop
xor
xor
dec
add
je
xor
cmpsl
enter
mov
movsb
ss
inc
sub
lcall
or
mov
icebp
pop
push
jo
or
sub
icebp
rcl
ret
dec
xchg
fdivl
mov
sbb
jbe
mov
outsl
sbb
bound
xchg
mov
and
lret
call
nop
pop
push
mov
test
scas
test
js
mov
jnp
pop
arpl
push
movsl
mov
clc
mov
insl
xchg
mov
jge
test
dec
push
es
jbe
add
pop
inc
fisttpll
fistpl
mov
cmp
add
lea
std
lods
mov
jmp
mov
stc
sub
lahf
push
loopne
xor
jns
dec
adc
mov
jl
mov
test
jno
jge
lock
pushl
xlat
decb
andb
pop
or
mov
add
pushf
pop
testb
mov
mov
add
cmp
pop
adc
push
lahf
pushf
mov
cmp
jp
loopne
fiadds
cs
sbb
jno
and
mov
inc
mov
cmpsb
lahf
pop
push
aaa
shll
insl
loope
cld
daa
add
out
jns
rorl
push
sbb
loop
movl
mov
scas
cmp
push
push
inc
push
fwait
inc
xor
add
pop
jl
add
mov
ret
int3
add
loope
dec
inc
in
loope
arpl
push
shrl
dec
sbb
jmp
dec
xor
loope
jo
sbb
stos
or
add
mov
imul
jmp
movsb
jb
fdivr
mov
dec
mov
sbb
cmc
xor
outsb
mov
dec
or
aam
mov
fidivs
in
data16
adc
popa
bnd
mov
inc
stos
sar
jns
out
rcrb
dec
push
mov
xchg
pop
ficoml
loope
cmp
sub
leave
clc
dec
je
sbb
rorb
or
lock
fimuls
arpl
mov
adcb
hlt
test
bnd
xor
das
popa
mov
cmc
subl
xchg
and
mov
cmpps
stos
pop
mov
push
aad
nop
ja
popa
test
adcb
pop
aam
test
sbb
jo
mov
xor
out
sub
gs
inc
and
sub
mov
inc
and
push
sub
mov
sbb
mov
rcrb
pushf
jns
out
sbb
push
test
pusha
cmpb
cmp
mov
mov
sub
push
sarb
loope
mov
inc
push
cwtl
xchg
fsubrl
push
dec
insb
pop
subl
cmp
inc
sahf
dec
xchg
stos
push
leave
aad
fsubs
mov
insb
movsb
and
jl
pop
push
mov
mov
fisubl
movsl
push
push
mov
mov
rcll
loop
jnp
push
cld
sub
das
cmp
and
or
out
aas
bound
pop
jecxz
push
ss
call
jge
lahf
frstor
push
lods
mov
loope
inc
lea
mov
push
xchg
popf
push
jecxz
or
jge
es
int
lock
rcll
shr
jb
xchg
nop
test
mov
rorb
pop
rcl
lds
pop
pop
sub
lock
sbb
pop
test
rcrb
pop
in
add
testl
sbb
lcall
lods
xlat
and
jne
sbb
jbe
jae
ficomps
and
push
je
hlt
out
stos
dec
aas
sbb
pop
push
js
inc
dec
add
push
fs
add
mov
ljmp
nop
movsb
stos
fiadds
pop
lahf
ret
andb
pop
mov
mov
cmpsl
mov
aaa
pusha
add
push
fadd
in
adc
psubb
cld
jae
pop
push
mov
arpl
fcmovb
int3
test
jno
jl
insw
out
fistl
bound
shlb
mov
cmp
xchg
add
cltd
sti
xchg
sub
push
adc
test
push
sub
shlb
fsubl
push
les
push
adc
clc
xchg
rcrb
mov
fdivl
add
jl
jb
xchg
ds
shll
shlb
popl
lods
cmp
sub
add
or
lcall
dec
push
jo
dec
and
scas
xor
push
pop
mov
fwait
jbe
daa
push
sub
cli
rcrl
sub
jne
jno
inc
loop
sub
sub
les
adc
and
push
call
in
mov
outsl
dec
push
sub
adc
adc
cmp
iret
leave
incl
xor
xchg
mov
jl
int
inc
mov
pop
in
mov
add
jmp
jne
inc
add
sub
insl
push
ljmp
imull
adc
lahf
je
cld
jl
cmpsl
mov
repnz
jnp
jg
push
xor
adc
in
int
mov
out
stos
dec
lahf
mov
outsl
sti
sub
cmp
pop
in
xchg
add
xlat
push
push
fsubrs
push
push
cmpsl
shrl
adc
adc
xchg
lock
jbe
ss
stos
incl
cwtl
or
out
in
addr16
sbb
adc
ljmp
cltd
jmp
pop
test
cmpsb
and
jae
jbe
setns
mov
add
orb
push
add
outsb
fisttps
out
pop
call
inc
mov
fdivrs
rolb
in
fdivrs
xchg
fistpll
or
pop
cmp
or
sbb
xor
andb
test
jp
in
loope
pop
into
aam
pop
bound
cmp
ss
push
insl
pusha
push
mov
cmp
mov
adc
inc
push
cmp
test
ret
addb
hlt
sbb
test
pop
imul
aam
out
aas
inc
push
pop
mov
push
add
pop
jbe
popaw
mov
sbb
push
icebp
sub
clc
in
ror
pop
sarl
xor
jl
notl
ffreep
lret
xor
test
test
ret
jp
add
lods
test
mov
cmp
mov
sub
pop
shr
jb
mov
pop
xchg
jp
push
nop
xor
test
add
or
and
test
push
ljmp
ss
adc
add
sub
cmp
in
xor
sbb
nop
aam
push
lock
cltd
pop
mov
cmp
sub
jmp
scas
aad
mov
add
adc
cmp
outsl
cli
mov
cmpl
sahf
or
add
mov
loop
das
mov
push
sub
ret
push
jnp
call
mov
jle
and
xor
mov
or
and
mov
pop
addr16
je
or
mov
pop
adc
test
mov
jg
outsl
ds
add
cmpsb
pop
ficompl
fcomp
rol
fisubl
js
dec
dec
jbe
add
jl
mov
mov
in
pop
xchg
mov
mov
scas
jle
lcall
inc
jge
xchg
add
push
mov
push
testl
add
cmp
fstpt
mov
xorb
insl
adc
addr16
lods
fstpt
fimull
stos
out
popa
jns
cmp
sbb
cmp
mov
sub
adc
xchg
and
lret
and
mov
mov
inc
sbbl
adc
stos
mov
icebp
or
mov
mov
pushf
clc
jge
jno
test
fbld
insl
push
cmp
adc
dec
xchg
jecxz
mov
xchg
mov
ss
dec
sub
pop
and
data16
xor
sbb
out
push
mov
in
movsb
jmp
popf
lea
sbb
ljmp
push
scas
fisttpl
pop
mov
jne
ljmp
sub
aam
mov
aas
or
cwtl
or
xor
push
and
or
mov
addb
rolb
fwait
ret
lock
aam
xor
je
mov
cmp
nop
cmp
inc
decl
xor
push
fxch
jecxz
insl
and
icebp
adc
es
and
lret
mov
in
imul
loopne
lret
cmc
and
sbb
outsl
shrl
enter
sub
aad
sbb
sbb
shll
jg
pop
int3
jmp
sti
lret
testl
in
mov
xchg
pop
fs
shlb
roll
mov
dec
test
orb
pop
sub
filds
les
push
cmpl
dec
mov
mov
loop
push
call
dec
cli
testb
add
pop
mov
push
fdivrs
sbb
mov
lods
repz
dec
pop
and
cmp
mov
add
adc
int3
mov
mov
cmc
dec
adc
adc
rcrb
ret
aad
shr
bound
xlat
cmpb
test
fcomp
pop
pop
clc
xor
sub
out
addr16
jbe
in
fsubp
das
test
push
jne
sub
out
mov
addr16
pop
add
inc
jle
inc
sub
push
inc
sub
adc
js
dec
lret
mov
aam
pop
insb
xchg
adc
sub
es
mov
inc
dec
push
xchg
inc
pop
imul
lds
stos
mov
ret
mov
es
cmpsb
mov
mov
insb
subb
mov
movsl
das
dec
mov
mov
popf
je
hlt
test
adc
in
repnz
cs
cmp
ret
dec
or
imul
test
xor
add
test
fadds
call
dec
pop
jno
sbb
add
fcoms
or
movsl
sbb
add
test
rcl
jo
sub
pop
mov
mov
hlt
dec
adc
icebp
loope
daa
jge
repnz
ficoml
mov
inc
shrl
sbb
fisubl
jmp
push
cli
je
jl
nop
out
mov
in
mov
pop
dec
icebp
dec
sub
fistpl
mov
cmp
movsl
xor
mov
jo
mulb
daa
xchg
add
pop
addr16
das
mov
sbb
mov
fwait
dec
ss
imul
adc
mov
adc
rol
push
icebp
jae
ss
mov
xlat
sbb
in
adc
aam
fisubs
mov
pop
or
popl
scas
inc
cmpsb
loopne
scas
pop
js
and
clc
movaps
jg
mov
mov
jl
or
inc
nop
fidivrs
add
dec
mov
shll
add
pop
std
mov
dec
scas
and
xor
lea
rorl
js
pop
int
or
pop
pop
mov
imul
sub
popl
cmp
aas
fidivrs
jecxz
xchg
push
sub
fsubrl
xchg
call
and
or
pop
add
nop
sbb
pop
jl
mov
leave
push
xor
mov
in
out
test
xchg
mov
sbb
mov
fbstp
hlt
les
push
inc
cmp
sbb
mov
fnstenv
inc
cmp
fdivs
enter
jae
arpl
mov
adc
ret
das
and
js
jmp
sbb
data16
loopne
pusha
pop
js
sub
sbb
nop
cmpsl
enter
cmc
inc
out
add
bound
rolb
icebp
pop
cmpsb
cmp
add
dec
mov
lds
fsubrs
inc
aas
imul
push
or
jno
loope
and
inc
nop
mov
mov
dec
xchg
sbb
lahf
or
int
mov
add
clc
fistpl
push
mov
cs
lods
out
sub
mov
jo
icebp
push
mov
fisubl
and
push
mov
mov
mov
mov
pop
add
jle
sbb
jns
or
jl
lcall
pop
in
outsb
insb
sub
mov
fidivs
cmpsb
in
xlat
popf
cmp
push
das
jge
pop
push
mov
enter
cmp
pop
or
mov
mov
inc
fnstsw
dec
or
mov
std
stos
in
mov
push
inc
cli
and
mov
push
jl
add
cmp
sahf
test
mov
outsl
sbb
and
adc
fsubs
or
cmp
rorl
mov
adc
sbb
inc
mov
hlt
ret
adc
and
mov
shrb
or
or
lcall
shll
rorl
or
out
jne
push
inc
je
push
sub
add
and
lods
shlb
add
popa
jae
cs
call
clc
test
mov
out
dec
jns
push
cwtl
xor
jl
sub
outsb
in
shrl
mov
popa
mov
jp
fcoms
mov
sbb
adc
and
mov
movsl
or
mov
test
iret
and
mov
push
inc
cmp
xor
enter
sub
js
std
insl
imul
imul
mov
push
add
fstpt
lods
dec
dec
xor
ds
imulb
inc
push
sub
cli
leave
aam
sbb
hlt
fists
sbb
mov
mov
or
dec
add
mov
mov
jmp
push
dec
xor
dec
je
stos
outsb
movsl
call
or
sub
gs
mov
push
ret
icebp
inc
fistps
repz
dec
mov
outsb
pop
psadbw
scas
xor
xchg
pop
lret
fucomip
mov
inc
xor
sbb
fcmovbe
outsl
outsl
cs
fs
bnd
and
ret
mov
div
sbb
ds
sbb
loope
inc
rcrl
pop
jecxz
inc
addb
aaa
cs
pop
and
mov
mov
lods
clc
jbe
icebp
aam
in
shlb
std
scas
and
inc
inc
sbb
pop
imul
and
sbbb
pushf
push
jg
and
and
sbb
pop
lods
out
cli
or
in
clc
push
stos
fistps
ja
lcall
sub
push
shll
in
mov
outsl
add
sbb
hlt
push
clc
mov
movsl
add
js
icebp
fwait
cmp
popl
clc
dec
mov
cmc
sti
loope
or
xchg
in
inc
push
popa
sbb
das
mov
cltd
lahf
and
test
pop
outsl
and
movsl
fcmovnu
add
mov
in
imul
and
adc
add
xor
icebp
cld
mov
pop
jg
rolb
push
and
pop
and
inc
mov
dec
popf
loopne
js
jbe
push
push
call
shrl
das
fcmovnb
test
jnp
in
in
lret
in
inc
add
jno
inc
mov
nop
mov
stos
xchg
push
push
mov
sub
or
add
adc
mov
sti
aad
mov
inc
cld
mov
fwait
rorl
add
das
cmp
in
out
in
push
xor
mov
sub
adc
jl
xor
cmp
inc
incl
test
pusha
or
cmp
mov
add
xchg
cld
outsl
xchg
imul
inc
inc
xchg
mov
lock
stos
push
push
xor
fstps
test
call
movsb
push
xchg
lcall
push
int
pop
jns
mov
dec
arpl
pop
ret
xchg
mov
adcb
inc
adc
push
pop
sub
ret
mov
in
pop
ljmp
xchg
add
xor
xchg
sub
loope
inc
and
lcall
mov
sbb
pop
jno
int
xchg
loope
lea
jbe
pop
xor
add
je
xlat
inc
xchg
xchg
cwtl
scas
mov
lds
push
aad
sbb
nop
shll
xchg
adc
lods
mov
adc
shrb
lock
dec
cli
mov
adc
fists
mov
mov
push
rcrb
into
lret
cltd
filds
mov
lahf
jo
out
push
mov
dec
pop
cmpsb
sbb
xchg
mov
xchg
mov
shr
insl
fistps
cmpsb
rcll
adc
pop
add
dec
push
dec
sbb
inc
jns
fwait
jo
imul
jnp
out
lret
scas
or
insb
add
push
int3
jno
jae
fistpl
aaa
push
adc
inc
cmp
loop
movsb
shl
imulb
xchg
inc
mov
stc
fildl
lods
icebp
jne
and
rcll
imul
mov
adc
pop
inc
or
in
fistps
mov
mov
adcl
pop
js
das
add
mov
pop
add
pop
mov
dec
dec
inc
pop
inc
addr16
sti
or
out
aad
es
cmpsb
add
js
gs
push
loop
mov
mov
fmul
pop
mov
mov
jg
dec
int
mov
push
jns
push
lret
test
dec
enter
mov
inc
xlat
mov
test
mov
mov
inc
ja
sub
pop
bound
stos
fidivl
test
lret
sbb
insl
out
pop
test
sbb
xlat
or
mov
push
mov
mov
xchg
push
cmp
loope
inc
xchg
xchg
xchg
mov
les
inc
cmp
xchg
ficomps
mov
clc
mov
add
mov
inc
and
or
mov
sbb
or
ss
mov
pop
xchg
loope
jg
jecxz
inc
nop
add
or
dec
les
mov
or
fmulp
and
aam
sbb
rcll
and
lock
jae
bound
push
and
pop
aad
push
adc
aam
sub
loope
cmpsb
jnp
es
add
or
and
jle
or
mov
pop
and
loopne
into
jg
sahf
mov
adc
jg
out
xlat
add
push
je
mov
test
mov
movsl
or
adc
push
sbb
pop
adc
ja
or
mov
or
mov
jns
mov
loope
dec
mov
inc
sub
jne
mov
jl
and
outsl
cmc
ljmp
pop
jge
mov
test
inc
or
xorb
push
pop
out
xor
outsl
xchg
mov
xor
pushf
mov
or
scas
mov
mov
inc
push
inc
loope
sbb
bound
mov
adc
xchg
sub
inc
adc
dec
sub
divb
ficoml
sahf
inc
in
inc
into
xor
shll
mov
lock
sub
or
fistpll
insl
push
repz
sbb
fs
mov
jge
insl
and
add
es
mov
add
mov
jne
inc
fidivrs
jl
in
dec
shll
out
cltd
stos
add
inc
ljmp
mov
jne
add
rcll
addr16
fs
mov
das
or
or
clc
inc
cmc
xor
iret
push
lods
arpl
stos
stc
and
cmpsl
mov
or
stos
sar
or
in
inc
sbb
mov
xor
inc
std
loopne
sbb
add
mov
push
in
add
adc
adc
icebp
inc
and
add
loop
daa
dec
mov
idiv
jae
test
aam
adc
mov
rolb
add
cmp
mov
mov
push
jg
fildl
xchg
call
rolb
dec
fnsave
and
fs
loopne
fldl
dec
addb
and
cmp
lcall
out
sbb
add
loopne
mov
sub
xor
mov
mov
scas
sti
sbb
xorb
push
inc
lock
fidivrl
jbe
push
pop
push
je
test
mov
lret
mov
add
loope
rclb
sub
imull
mov
push
pop
mov
leave
mov
in
or
fcompl
ret
imul
push
mov
sbb
in
sti
int3
fsubrl
mov
int
mov
fnsave
les
jno
cltd
pop
cld
ret
loope
mov
fsubrl
mov
inc
fisubl
xchg
lcall
cmp
mov
jmp
int
shll
mov
jmp
clc
add
and
xor
xor
inc
jl
std
jmp
xor
or
xchg
pop
iret
dec
repnz
subl
pop
and
dec
mov
and
mov
mov
add
push
ljmp
shlb
rcrb
add
or
paddusw
or
loopne,pn
xchg
push
cld
or
int
or
dec
inc
xchg
mov
jp
ss
mov
jmp
scas
rolb
jge
xchg
insb
lds
fs
and
mov
out
mov
test
mov
inc
xchg
lods
pop
outsb
push
orl
adc
cmp
lock
es
cs
sbb
outsb
sub
or
outsb
jne
inc
jg
mov
xor
sbb
ss
pusha
popa
mov
jo
or
out
xchg
adc
pop
xchg
test
insl
movsb
jbe
imul
push
add
jnp
cmpsl
scas
sbb
jp
pop
adc
cli
es
outsl
inc
hlt
dec
mov
sbb
cs
adc
adc
hlt
loope
int
mov
popa
adc
mov
pop
dec
fisubl
mov
ret
pushl
test
pop
xor
add
or
xor
xchg
cmpsb
mov
mov
rcrl
orl
mov
dec
sbb
lods
add
testl
mov
jno
mov
or
in
xchg
mov
cld
ja
fistl
xchg
jp
push
push
jb
xlat
and
adc
test
dec
fs
lret
or
pusha
push
add
pusha
mov
adc
sbb
mov
sbb
cmpsb
inc
mov
rolb
sbb
fwait
rcrb
lock
xchg
pop
mov
dec
cmpsb
ljmp
add
je
jmp
pop
rcll
add
rcll
shlb
sbb
lods
xor
add
test
divl
or
outsl
aam
lock
ficoms
clc
adc
jbe
in
push
lcall
movsb
sbb
call
push
sbb
sbb
add
sbb
in
scas
dec
push
mov
gs
cmc
clc
dec
mov
cltd
or
aam
pop
fbld
mov
mov
fistpll
xor
lds
shll
add
daa
mov
push
inc
sbb
mov
push
popa
jmp
out
iret
test
test
add
outsl
jl
mov
test
cld
sbb
arpl
push
test
cmc
jle
ret
aas
sahf
clc
inc
sbb
mov
ljmp
sbb
jnp
add
cld
cmp
cmp
into
out
sub
push
and
mov
cmp
mov
mov
ret
scas
xchg
ret
push
fidivrs
stos
in
das
sar
test
add
pusha
call
arpl
in
xchg
call
sub
dec
fildl
jns
and
xchg
testb
lods
lea
push
pop
xchg
fisttpl
mov
mov
ja
pop
push
mov
cmp
push
out
mov
lds
hlt
hlt
loopne
addr16
pop
das
mov
add
sbb
sbb
call
mov
sub
ret
sub
xchg
fcoml
push
inc
dec
and
arpl
push
fcoms
xchg
cli
xchg
mov
mov
ficoms
ss
mov
enter
mov
fbstp
lret
sub
pop
pop
int3
sub
push
adc
fmuls
pop
fildl
jns
xchg
add
aas
mov
or
push
mov
lcall
cmp
fbld
hlt
mov
iret
xor
out
into
loop
aaa
pop
cmc
out
adc
js
and
loope
ja
sbb
sub
ret
pop
pop
addb
lret
cmpl
push
fstp
lcall
ljmp
inc
adc
cld
adcl
mov
das
pop
std
mov
test
jns
adc
ljmp
xchg
mov
and
sbb
mov
sub
cmpsl
jle
loope
cmp
decb
mov
lea
inc
movl
adc
jns,pt
inc
push
loope
mov
faddp
shlb
push
sbb
fildll
mov
inc
cmp
mov
fdivr
cmp
lcall
jae
or
inc
mov
out
int3
mov
mov
adc
insb
xor
outsl
aaa
sbb
cmpsb
ficoml
or
pop
cli
ret
and
es
lds
inc
pop
les
clc
mov
rolb
jae
std
subl
and
addr16
movsl
jl
fisubrl
add
mov
out
adc
imul
dec
mov
sbbb
subl
out
out
and
aad
out
pop
icebp
mov
imul
mov
cmp
lret
lea
xlat
jmp
jbe
mov
sub
mov
cmpb
xor
pushf
and
fcmovnbe
enter
out
mov
mov
pop
les
push
lret
insl
and
int
dec
push
rorl
or
add
pop
loop
mov
out
push
shrb
cmp
mov
and
sub
sbb
insl
dec
divl
out
adc
mov
lods
fiaddl
mov
rorb
lea
test
in
mov
mov
sub
jg
sub
hlt
notl
ror
mov
mov
xchg
test
dec
jecxz
outsb
push
loop
in
ret
shrl
or
push
adc
jae
xor
sub
aas
push
dec
xchg
and
cs
dec
into
xchg
cltd
jmp
cld
fs
cltd
xchg
daa
pop
ss
pop
std
pop
enter
ds
aas
rorb
arpl
mov
sti
popa
gs
adc
shl
js
pop
push
outsl
mov
popa
icebp
adc
mov
mov
inc
push
adc
jge
nop
push
js
loop
sbb
pop
lahf
stos
nop
push
xchg
mov
fimuls
lret
push
adcl
sub
andb
dec
cmc
cmp
jmp
outsb
shlb
mov
mov
jns
lcall
mov
fwait
test
fistl
sbb
fs
inc
xor
aam
outsl
mov
adc
pop
push
pusha
rcll
movl
push
cmovns
sbb
mov
out
int
push
mov
inc
lea
dec
sbb
andb
bnd
lds
add
nop
bound
jmp
fimull
cld
push
push
shll
and
dec
fnstsw
es
les
and
lcall
jnp
outsl
jmp
out
mov
hlt
or
dec
outsb
mov
leave
mov
imul
jo
out
xor
cmp
lret
xchg
push
add
sbb
stos
fbld
sbbl
les
cmp
mov
mov
bound
mov
pop
clc
jge
pop
incb
es
outsl
sbb
test
out
lods
fdivs
adc
ja
sub
test
idivl
out
cmp
cmp
popl
subb
cwtl
outsb
xchg
dec
scas
push
je
aad
movsb
loop
and
pop
gs
jle
inc
iret
sub
cmp
out
aaa
ret
dec
mov
inc
out
dec
mov
call
sub
cltd
xlat
mov
nop
or
or
xor
or
cltd
push
adc
adc
cmp
xor
or
push
mov
lcall
sbb
clc
push
aad
mov
jge
loopne
stos
mov
repz
loop
mov
je
out
es
add
inc
fistpl
mov
das
mov
das
popa
sub
nop
inc
xchg
loopne
adc
xchg
xor
push
sbb
loopne
imul
call
fisubrl
push
sbb
stc
sub
fistl
sahf
xchg
mov
clc
movsl
jmp
dec
scas
bound
mov
push
add
sub
pop
jne
jmp
sbb
xor
push
stos
fbstp
sbb
fstl
pop
cmpb
adcb
stos
adc
dec
test
push
jo
push
pop
sub
lcall
xor
push
sbb
jb
sub
mov
or
je
inc
stc
pop
movsl
out
or
jb
inc
cmpsl
sti
cmp
push
jecxz
call
pop
push
xchg
adc
mov
sub
psubd
dec
fimuls
data16
ss
jae
mov
test
jg
mov
inc
dec
repz
and
push
pop
popa
movsl
lret
pusha
adc
lods
test
les
inc
mov
add
pop
add
lea
fisubrs
push
xor
repz
or
adc
adc
and
mov
mov
xchg
pop
pop
cmp
jge
mov
xor
daa
setns
out
mov
lock
adc
jbe
pusha
pop
mov
sbb
mov
push
je
bound
sbb
and
and
dec
xor
add
and
pop
mov
outsl
icebp
in
fstl
les
incb
push
xchg
dec
jae
aad
mov
add
shl
jnp
and
and
lods
xchg
outsl
movsl
add
sbb
iret
add
mov
add
sub
sbb
ss
push
and
lds
out
pushf
repnz
dec
iret
cs
outsl
std
jae
cmp
cwtl
fcomps
mov
add
dec
xchg
cmp
and
call
sarl
ss
sbb
cs
pushl
aaa
sbb
dec
nop
lds
enter
cmp
and
sub
dec
cmp
into
sbb
mov
push
jge
rolb
and
mov
inc
call
ja
push
sub
sub
rorl
lea
adc
dec
add
sub
roll
add
inc
repnz
dec
scas
or
andl
sti
fadd
pushf
cld
pop
cli
and
lods
enter
outsb
test
cltd
dec
das
aas
push
in
pop
xor
xor
mov
daa
lock
ret
ss
iret
cmp
mov
pop
adc
adc
fnsave
or
icebp
in
fdivrs
sbb
mov
adc
inc
xor
lods
fsubr
ss
insl
jl
ret
jg
xor
into
lock
inc
xor
cmp
addr16
imul
xchg
mov
lods
shll
push
mov
mov
mov
xchg
pop
mov
mov
icebp
dec
adcl
mov
sbb
decl
rorl
push
mov
aaa
ror
xchg
push
in
repnz
mov
dec
outsl
fcompl
xchg
test
pop
pop
movsb
and
jbe
mov
cmp
loopne
or
push
cld
outsl
ljmp
aam
push
test
pop
jb
inc
pusha
loop
ljmp
mov
idivb
pusha
aas
pusha
sbb
pusha
sti
imulb
fwait
imul
daa
adc
mov
hlt
test
cmp
repz
sti
mov
mov
inc
fcmovb
inc
shll
rcl
cmp
das
fmull
lds
xchg
jg
bound
incl
and
and
jmp
or
mov
call
and
movsl
pop
mov
loopne
call
in
xchg
outsb
fbstp
jecxz
adc
sbb
cld
pop
ss
mov
mov
add
addr16
lods
test
adc
dec
xor
fs
push
mov
negb
rol
gs
adc
call
cmp
fcomip
and
repz
cmp
shl
dec
and
gs
sbb
mov
pop
adc
loopne
xchg
mov
xchg
mov
jmp
jecxz
inc
inc
test
inc
push
or
lods
pop
push
in
mov
sti
push
adc
mov
aaa
add
in
mov
inc
dec
jbe
ret
add
jg
mov
imul
inc
pop
mov
or
mov
repz
inc
mov
push
stc
and
mov
sbb
cmp
xlat
pop
hlt
mov
dec
push
sub
mov
out
cli
loop
lcall
dec
das
pop
rcrb
mov
cwtl
ret
vpand
mov
clc
pop
push
fdivrs
mov
sbb
cmp
sub
mov
aam
push
out
inc
movsl
mov
lcall
push
clc
insl
push
call
and
hlt
shlb
out
repz
scas
jle
inc
fimuls
rolb
mov
adc
int
mov
pop
jp
outsl
clc
lahf
push
add
dec
in
dec
jp
adc
notl
push
jecxz
xchg
mov
dec
xor
cmc
mov
mov
inc
fwait
data16
int3
fwait
pop
push
push
pop
ljmp
push
or
fstps
stc
and
jg
loop
sbb
jbe
sbb
lcall
insl
loopne
and
or
test
and
mov
fmull
ret
clc
cmp
sub
or
icebp
rcll
push
cmpsl
sti
jg
es
inc
int
or
test
cmp
pushl
sahf
test
mov
inc
sbb
lock
sti
lods
insb
cmpsb
in
and
mov
fidivs
inc
pop
jl
mov
and
dec
xor
fcomps
lock
arpl
mov
mov
and
mov
cmpsl
orl
sbb
out
mov
cmp
insl
cwtl
imul
add
aad
mov
mov
loope
lret
mov
aad
cmp
and
sbb
sbb
pop
jp
mov
sub
inc
test
xchg
gs
roll
fbld
clc
push
shll
or
or
in
adc
or
jno
xlat
dec
or
add
mov
add
lea
pop
movsl
repnz
xchg
xor
pusha
leave
mov
push
cli
push
inc
lock
daa
dec
push
mov
mov
mov
cmp
xchg
stos
push
pop
ret
ss
inc
cmpsb
cmp
inc
scas
sub
mov
jae
mov
aam
sbb
stos
popf
pop
inc
fisubrs
xchg
cld
pop
test
pop
mov
adc
xchg
jl
jb
adc
cli
pextrw
mov
ljmp
mov
std
push
mov
fdivl
push
dec
add
stos
or
aad
ret
icebp
pop
mov
ret
cli
mov
lret
add
pop
popf
xor
xorb
mov
fwait
cli
popa
inc
mov
insl
nop
cmp
inc
push
pop
sbbb
sarb
xchg
test
hlt
mov
mov
pop
jnp
popf
mov
clc
or
pop
push
mov
jno,pn
movsl
mov
mov
clc
dec
push
push
and
not
notb
popf
mov
sbb
clc
mov
pop
push
bound
or
add
jg
pusha
je
inc
adc
aad
test
pusha
fs
mov
push
jl
bound
inc
or
inc
inc
loopne
gs
decl
pop
in
inc
dec
mov
adc
mov
jbe
mov
cmpsb
testl
xchg
mov
push
fildl
push
arpl
das
mov
push
movsl
push
mov
xchg
lds
lock
js
test
sbb
les
ss
in
data16
pop
movntq
jno
jbe
enter
sahf
insl
or
jge
adc
mov
pop
pusha
mov
jle
ljmp
outsl
add
cld
int3
add
imul
or
dec
lods
adc
stos
dec
mov
adc
mov
daa
mov
add
and
cmp
jne
insl
out
push
pusha
stos
push
cmp
sbb
shl
or
lea
data16
fdivrp
insl
fistl
sub
jno
ja
ret
gs
cltd
imul
test
mov
jmp
xchg
push
or
fcomi
pop
les
add
adc
or
insb
sahf
adc
loope
aad
xchg
sub
inc
outsl
fadd
mov
inc
mov
clc
mov
enter
or
mov
dec
scas
lcall
push
jmp
push
out
lds
mov
scas
pushfw
test
out
push
rolb
sbbb
rcll
xchg
les
test
mov
mov
push
movups
xor
call
inc
mov
mov
and
mov
ja
sbbb
push
jno
cs
adc
xchg
fdivs
and
fbld
mov
aam
fdivs
pop
fistpl
loope
in
es
loope
sub
mov
mov
or
rorb
pop
das
les
addb
mov
jns
jecxz
lahf
inc
enter
add
daa
xchg
jp
fistl
jmp
push
fisubrs
sti
mov
addb
cld
cmpsl
pop
sub
fisubrl
mov
mov
xchg
stos
mov
adc
outsb
push
or
adc
outsb
mov
rolb
xchg
or
or
cmovno
and
jno
cwtl
lock
xchg
rcll
and
fnstsw
inc
pop
and
out
sub
cmc
push
jmp
roll
adc
pop
cmp
jle
or
divl
fdivr
pop
sub
sti
jns
adc
iret
mov
orl
movsl
test
and
or
jmp
loopne
addb
pop
cmpl
xor
and
ds
push
sbb
cli
ds
sti
js
jg
lods
sahf
shlb
xchg
sub
loop
cmp
pop
dec
iret
add
scas
xchg
mov
mov
inc
xor
cmpsb
xlat
mov
aaa
rclb
adc
sub
flds
mov
icebp
fistpl
mov
fs
scas
mov
pusha
adc
sub
loope
test
sbb
stos
cmp
push
mov
arpl
push
mov
push
daa
adc
inc
icebp
out
sbb
repnz
mov
arpl
addr16
pop
xchg
push
mov
mov
out
mov
jne
pushf
sbb
mov
je
lods
lahf
hlt
push
adc
cmp
and
das
faddl
mov
arpl
stos
iret
sub
loop
hlt
pop
push
mov
mov
lea
loopne
inc
enter
push
jecxz
cmpsb
arpl
push
or
or
lcall
xor
adc
adc
mov
ret
xchg
outsb
xor
cmp
rolb
hlt
add
inc
mov
icebp
inc
cwtl
add
adc
xor
inc
or
sarl
jle
lret
push
mov
pop
push
movsl
push
orb
js
push
mov
inc
add
imul
mov
push
jmp
cld
pushf
push
cmp
jb
movsl
or
adc
push
and
pop
clc
inc
cmp
sub
sbb
dec
mov
lock
pop
cvtps2pd
mov
cmc
jmp
mov
add
xorl
dec
add
cmpsl
sub
cmpsl
sar
pop
movsl
push
xchg
inc
push
and
jmp
xor
test
callw
ja
sbb
stc
aam
jae
push
add
and
fstpl
push
imul
repz
jbe
and
xchg
loope
pop
add
outsb
mov
mov
or
adc
sub
add
mov
jo
mov
lods
jns
mov
sub
icebp
test
lock
dec
rorl
mov
xchg
mov
sbb
lods
sbb
aam
lret
fs
push
enter
and
inc
fidivs
into
or
rcr
nop
das
add
inc
cs
pop
sbb
sub
rcr
and
and
outsb
shl
pop
adc
xor
in
aaa
loopne
mov
fistpll
dec
inc
shlb
dec
mulps
div
or
sahf
mov
icebp
fistpll
push
dec
addl
mov
movsb
test
jecxz
or
add
shlb
mov
xchg
mov
push
popa
fs
or
in
push
fcomp
ss
std
adc
pop
jge
pop
cld
sub
pop
sub
adc
sbb
add
outsl
push
or
xchg
stc
jne
shll
mov
mov
jmp
or
icebp
xlat
xor
or
jne
jb
dec
jg
jo
add
test
add
fbld
mov
movsl
inc
inc
ret
lock
dec
mov
ret
out
clc
mov
pusha
jbe
jb
outsl
pop
cs
xchg
aaa
push
or
xchg
cmc
push
push
pop
loop
jl
fnstenv
cmp
cld
push
adc
cltd
push
dec
test
push
jnp
and
xchg
xchg
or
push
stc
jmp
adc
jno
jle
sub
or
clc
sbb
mov
push
mov
dec
mov
aad
addl
stos
cld
pop
adc
add
push
xlat
push
bound
pop
scas
inc
adc
add
xchg
pop
sub
add
rorl
mov
pop
call
jecxz
int3
push
push
cwtl
sub
lods
adc
dec
push
roll
add
test
sbb
in
test
shll
and
jp
xchg
sti
push
mov
push
push
and
outsl
scas
std
adc
mov
ret
xchg
add
clc
movb
rorl
in
xchg
and
and
lahf
cmp
sti
jne
or
lock
jne
xor
xor
sub
sbb
pop
aam
fucomip
aam
xor
pushf
xchg
add
lods
cmp
cmp
iret
mov
stos
test
int
call
push
push
xor
push
test
xchg
cmpsl
repz
mov
mov
add
inc
mov
and
rcrl
fcoms
data16
adc
adc
loop
mov
jbe
push
push
jle
sub
pop
mov
sbbb
insl
cvtps2pd
aad
mov
sub
or
or
int3
loope
mov
lock
pop
movsl
xchg
xchg
cli
pop
subb
mov
and
and
sbb
and
push
push
jmp
sbb
dec
pop
and
jmp
cli
aas
mov
push
lds
dec
fdivl
push
loope
push
cmp
std
bound
xor
mov
icebp
or
push
sbb
iret
cmp
mov
insl
pop
sbb
mov
mov
imul
aam
sbb
mov
dec
cs
lods
scas
stos
js
lds
inc
inc
mov
adc
outsl
push
fisubs
jae
cmpb
mov
cwtl
fstl
daa
outsb
adc
insb
and
mov
repnz
frstor
dec
mov
mov
lods
sar
movsl
dec
cmp
std
dec
and
xor
inc
fisttpl
bound
cmp
lea
fidivrs
jbe
iret
scas
cltd
popf
or
sub
mov
into
scas
sbb
hlt
loope
cmp
sbb
mov
outsl
sbb
inc
xchg
pop
or
insb
cli
add
call
adc
pop
clc
xor
insl
lret
xor
jg
mov
icebp
cli
fwait
sahf
ljmp
inc
aaa
inc
mov
loop
adc
out
pop
pop
xchg
mov
addr16
int3
imul
push
mov
jne
jne
push
add
les
jae
cmp
sbb
xor
jns
in
lahf
push
lods
outsl
data16
dec
ret
dec
push
and
mov
inc
xlat
lret
xor
fucomi
out
pushf
out
hlt
cmp
cmp
pop
test
inc
scas
or
fs
and
sub
cld
loop
ret
iret
in
pop
gs
sbb
mov
shll
mov
js
scas
in
xlat
or
add
test
outsl
incb
jo
in
popf
dec
inc
add
icebp
mov
or
js
test
mov
daa
mov
insl
pushl
aad
sub
out
divl
in
xchg
std
fdivrs
incb
inc
sbb
pushf
scas
jl
adcb
push
and
aam
add
mov
jne
repz
lret
xor
xchg
outsb
shrb
pop
int3
and
inc
int3
mov
push
cwtl
inc
test
xchg
mov
xlat
ja
add
push
int3
mov
cld
inc
pop
mov
arpl
ror
adc
arpl
adc
daa
and
popa
lret
in
pop
and
adc
mov
ret
scas
push
sub
stc
xchg
push
mov
mov
mov
mov
mov
call
add
adc
sarb
leave
push
jb
adc
mov
inc
push
inc
inc
ljmp
cs
enter
data16
xchg
xchg
stos
stos
jo
sub
and
jo
mov
mov
int3
pop
rsqrtps
xchg
out
xorb
jbe
xchg
arpl
mov
rol
and
push
or
pop
push
and
int
adc
jl
sbb
mov
sahf
shrb
fmul
mov
std
xchg
lcall
insb
orl
sbb
xchg
mov
jg
testl
xor
jmp
mull
dec
popa
les
inc
push
jne
icebp
lea
and
fiadds
sbb
das
dec
cmpb
stc
dec
lods
out
ret
mov
or
xchg
jb
or
cmp
cli
pop
enter
lret
pusha
je
bound
clc
mov
sbb
sub
mov
and
or
lcall
sub
push
inc
push
sub
add
aaa
pop
jmp
inc
sti
aam
stos
xor
shrl
mov
xor
xor
leave
ret
mov
cs
ss
adc
enter
add
lea
insb
push
aad
out
aad
outsl
mov
push
repz
adcl
nop
repnz
outsl
sbb
pop
stos
jns
call
xlat
pop
fbstp
cmp
lcall
add
push
sbb
ljmp
xor
add
push
stc
ds
or
mov
inc
test
stos
scas
mov
mov
xchg
ret
adcl
xorl
mov
fcom
in
neg
test
bound
jb
movb
adc
adc
shlb
cs
cmc
cltd
test
addr16
or
inc
je
jp
or
cwtl
and
sub
mov
push
jmp
divb
lret
pop
or
mov
out
dec
aam
movsl
imul
lds
cltd
push
js
inc
and
xchg
and
jecxz
stos
mov
mov
mov
or
sub
addr16
and
lock
aad
sub
ljmp
and
nop
push
lea
mov
mov
and
sub
inc
icebp
sbb
jne
sbb
pop
pop
inc
adc
ficompl
test
psllw
les
decb
scas
rcl
jle
cmp
or
cmp
jo
mov
or
lret
jecxz
mov
fwait
and
call
xchg
add
inc
mov
or
mov
pop
repnz
jmp
push
sbb
mov
and
dec
mov
jno
pop
insl
fiaddl
in
sbb
mov
jge
das
mov
jmp
pushf
sub
fildll
test
sti
rorb
sbb
insl
ret
pop
dec
imul
fwait
loope
stos
push
adc
cmp
add
mov
fildll
mov
sbb
cmc
xchg
cmp
and
or
fucomi
jp
sub
mov
lock
cmp
repz
and
je
call
ret
pusha
sti
es
and
sbb
cwtl
push
mov
out
jg
inc
jb
fistl
sarb
shl
out
mov
and
xor
xchg
mov
ret
not
dec
fnstcw
out
inc
inc
mov
mov
out
or
sti
cmp
or
adc
ds
xor
jbe
clc
pop
jnp
cmp
xchg
int
mov
ret
hlt
sub
or
fwait
mov
dec
add
xchg
jecxz
lods
fmull
push
mov
xchg
adc
in
fcmovu
jmp
rcll
add
outsl
scas
push
sahf
aas
inc
add
add
loopne
xlat
dec
mov
mov
jge
sub
add
push
sbb
mov
mov
add
adc
lods
pop
clc
cmc
push
jo
mov
mov
jb
sbb
cli
pusha
inc
pop
dec
sbb
pop
aam
lahf
aam
jns
or
cmpsl
lret
inc
push
mov
ret
fcoms
dec
cmp
mov
lods
mov
pop
test
iret
mov
shl
cmpsl
shlb
cmp
xchg
and
xor
mov
mov
filds
or
adc
or
mov
xchg
icebp
jb
push
dec
jg
data16
movsl
rcl
call
push
lds
dec
jne
test
mov
orl
jno
xlat
ljmp
out
test
shr
adc
cld
rclb
cltd
out
adc
jle
mov
xor
adc
sbb
dec
xor
es
dec
inc
jmp
rolb
jg
outsl
hlt
outsl
movsl
insl
xor
loopne
hlt
push
loopne
dec
adc
mov
or
daa
clc
pop
sbb
out
xor
lret
add
gs
xchg
pop
inc
out
test
call
js
clc
shrb
inc
icebp
int
stos
xor
adc
sbb
sbb
jge
push
cmpsb
or
lods
dec
sbb
enter
mov
in
pop
sbb
cmp
mov
mov
outsb
push
loope
add
insb
aaa
mov
sub
sbb
or
gs
and
adc
lds
fcoml
clc
hlt
adc
ja
mov
out
enter
dec
add
ret
xorl
pop
ss
pusha
inc
dec
inc
cmp
sbb
test
mov
mov
dec
mov
int
jne,pn
pop
loope
es
mov
ljmp
sahf
mov
inc
mov
and
or
call
insb
add
fldl
jecxz
xchg
nop
and
adcl
in
inc
mov
inc
mov
loopne
lcall
sahf
out
subb
adc
ss
mov
jnp
loopne
movsl
xchg
xchg
or
clc
jo
jnp
push
mov
outsl
sub
addb
mov
jno
xor
mov
iret
je
insl
mov
pop
mov
es
call
inc
dec
cmpsl
hlt
adc
push
dec
xor
repz
jbe
jle
sbb
cmp
inc
pop
jmp
dec
int3
test
mov
cmp
jbe
push
loop
sub
loope
dec
sahf
dec
push
out
pop
fucomi
jno
add
mov
loop
jge
mov
pop
dec
xorl
mov
lea
into
mov
cltd
popf
push
and
arpl
pop
mov
iret
idivb
js
inc
inc
jecxz
mov
notb
inc
addl
fwait
loope
loopne,pt
adc
xchg
jmp
xchg
mov
inc
mov
jmp
adc
ss
adc
mov
divl
fidivs
rcrb
pop
dec
es
je
imul
jge,pn
fmulp
push
add
repz
fistl
pop
shl
adc
jp
cmc
jg
hlt
dec
adc
jmp
pop
in
pop
jle
iret
mov
bound
jne
or
rcr
lods
dec
lock
pushf
mov
and
mov
mov
mov
orl
idiv
adc
push
in
mov
and
stos
std
xlat
jne
dec
movl
adc
sub
jle
mov
mov
inc
xchg
inc
jns
sbb
push
lea
mov
xorb
out
ds
imul
aas
int
sbb
mov
sbb
leave
inc
pop
dec
jg
adc
mov
mov
adc
inc
or
jle
adc
mulb
pop
xchg
mov
jne
xchg
mov
mov
jg
xchg
pop
add
and
pushf
cmp
neg
jge
das
inc
push
ret
test
pop
mov
mov
adc
xchg
jge
push
pop
rclb
or
mov
fwait
shll
or
loopne
sbb
aam
addb
in
repnz
fisubl
inc
mov
jbe
sbb
cmp
cmp
fiaddl
mov
adc
sub
fstpt
cld
fistps
jo
repz
xlat
add
movsb
and
shlb
inc
jle
mov
add
outsb
outsl
aad
sbb
fistpll
andb
jae
cmp
out
mov
sub
shrl
xchg
arpl
fdivl
dec
je
mov
adc
xorl
test
adc
dec
xchg
imul
test
inc
out
and
mov
adc
into
xadd
xor
sub
add
fsubrs
lcall
pop
aam
js
cmc
outsl
sbb
sbbl
jecxz
les
mov
adc
mov
pushw
or
pop
and
pop
loop
sbb
xchg
addb
jns
push
dec
jle
filds
and
mov
outsl
add
mov
xor
pushl
sarb
arpl
outsl
movsl
mov
ret
jp
mov
cli
sti
push
incb
add
sbb
and
ljmp
pop
mov
jecxz
daa
add
adc
or
popa
and
and
shlb
mov
sahf
popf
scas
es
or
mov
call
add
sub
push
fimuls
call
xchg
pop
test
mov
stc
les
mov
push
orb
hlt
shrb
xor
shll
add
adc
subb
inc
subl
outsb
adc
push
outsb
dec
insl
xor
iret
in
ljmp
ja
mov
fs
dec
ss
call
mov
stos
rcl
inc
fildl
pop
test
jecxz
or
cld
jns
lret
sub
add
adc
rcrl
mov
je
vmovdqu32
cmp
ret
mov
sbb
xlat
mov
lcall
mov
les
xchg
xchg
jmp
in
sbb
movsb
push
xchg
adcb
out
pop
sub
xchg
test
adc
xchg
shrb
lods
jg
push
jne
jp
in
or
push
add
add
cmp
cmp
sarb
stc
mov
movsb
lods
xchg
inc
std
das
insl
std
adc
popa
subl
inc
dec
ds
jl
imul
mov
and
sub
cld
mov
mov
adc
and
dec
outsl
push
jno
cs
pop
lea
cmp
lret
ret
add
sbb
js
jo
and
outsl
sub
cmp
nop
mov
xchg
inc
test
stc
push
adc
lock
popa
int3
or
push
ds
std
movsl
icebp
inc
jle
mov
pop
xor
or
je
imul
mov
addr16
pop
mov
fs
sbb
xor
jge
aaa
call
aam
lods
pushf
bound
cmp
xchg
imulb
fdivrs
dec
fsubl
and
loop
lret
sub
mov
cwtl
jl
mov
movsb
xchg
fistpll
call
cmpsl
and
or
inc
add
sbb
adc
pop
les
fucomip
and
rclb
mov
sub
jns
sbb
pop
das
ljmp
mov
lcall
sub
movsl
or
jge
mov
nop
inc
das
xchg
insl
or
mov
repz
rclb
mov
sbb
popf
mov
pop
sbb
xor
cs
push
pop
cmp
je
adc
mov
fidivl
xlat
push
fisttpl
mov
push
aaa
stos
call
pop
sti
mov
lods
hlt
xor
cmp
testl
xchg
stos
sub
mov
pop
std
push
fdivrl
mov
pop
mov
sbb
mov
mov
das
xor
ss
pop
movl
mov
cmp
fmull
scas
test
lret
jecxz
cs
push
adcb
add
gs
test
jecxz
rclb
xor
or
or
ficoml
add
fcompl
call
test
add
inc
and
sbb
ficompl
loopne
pop
xchg
das
std
pop
fmuls
les
arpl
pop
push
mov
inc
ljmp
mov
outsl
lahf
cmp
icebp
inc
iret
adc
in
xchg
movsl
jp
fistl
mov
rclb
jbe
mov
xor
adc
mov
enter
imul
inc
pop
mov
xor
inc
fcoms
sub
add
mov
fsubrs
mov
inc
mov
test
loopne
adc
stos
lock
pop
popl
sub
and
sub
js
leave
mov
leave
pop
adc
mov
aam
test
in
cmp
mov
xchg
js
mov
mov
mov
sbb
test
cmp
loop
cwtl
int
rcr
jnp
mov
dec
in
in
jo
test
mov
ljmp
lcall
or
jge
ret
lret
and
and
fstpl
lret
imul
dec
stos
fildll
lahf
movsb
adc
push
add
out
sub
xlat
punpckldq
imul
iret
sub
pop
mov
insl
sbb
js
fstpt
scas
icebp
mov
jno
dec
out
mov
clc
mov
jae
test
and
leave
int
test
adc
mov
cld
icebp
inc
mov
jg
enter
mov
call
mov
stc
js
push
dec
lahf
and
mov
xor
mov
sbb
push
mov
in
sub
stos
pop
dec
aad
xor
sub
or
je
decl
sbb
or
jo
or
add
das
sub
pop
push
movb
hlt
push
clc
daa
or
jg
jne
sub
jmp
cmc
rol
in
rcr
inc
out
popa
dec
int
test
lea
mov
daa
loope
cld
and
adc
decb
out
call
sbb
jb,pt
cmp
clc
cmc
adc
fidivl
test
shl
stos
scas
jle
mov
ret
loope
shll
cmpsb
sbb
cmp
sbb
movsl
test
jne
scas
dec
sbbb
inc
mov
icebp
outsl
inc
jl
push
ja
out
pop
sub
xor
sub
pop
mov
cld
sarb
pop
jo
xchg
stos
and
jg
stos
lds
xor
fidivrl
and
test
or
push
mov
rclb
fcmovnb
lds
cld
sbbl
cmp
leave
rcrl
aam
dec
cmp
shlb
cmpsl
adc
fstpl
xor
mov
and
cmp
mov
pop
pop
mov
mov
aaa
or
adc
mov
xchg
cld
fsubrl
jl
mov
orb
orb
sbb
addl
inc
loope
ficompl
push
in
sarb
add
jno
mov
fwait
leave
out
out
add
bound
mov
inc
sub
aad
mov
insb
insb
add
push
icebp
in
xchg
out
cmpb
pushf
fdivs
into
outsb
jbe
push
mov
inc
shll
cmp
testb
adc
inc
or
push
cmp
aaa
scas
les
rorl
xor
scas
adc
aaa
movsb
leave
jp
jle
andl
add
test
pop
fisubrs
jbe
add
sbb
add
xchg
xchg
mov
adc
lret
movsb
flds
jbe
pop
or
mov
xorl
push
sub
dec
xchg
lea
xchg
cmp
mov
in
add
cmp
adc
sbb
sub
popl
fwait
sbb
scas
cmp
call
sub
adc
push
mov
sysret
shr
inc
aas
cld
lods
inc
sbb
loop
mov
mov
dec
jo
and
pushf
fstpt
hlt
mov
ret
scas
cwtl
sub
fwait
subl
in
sbb
pop
ss
cs
pop
sub
outsl
ficompl
jns
push
mov
push
test
fwait
in
mov
lods
or
inc
mov
jle
inc
and
inc
sub
stos
or
inc
add
mov
jns
enter
xchg
mov
test
test
rcrl
out
push
outsl
insl
fistl
loop
jae
mov
push
aam
cmpsb
sbb
imul
int
call
mov
outsb
mov
sti
movb
in
push
push
outsl
je
jae
or
loope
adc
jmp
mov
sarb
lret
out
or
test
icebp
jae
fdivl
cmc
push
inc
enter
mov
mov
insb
scas
inc
rcrb
adc
inc
xlat
sbb
xor
adc
mov
lock
pop
fcomps
jbe
idivl
push
outsb
ljmp
daa
loopne
sub
int
mov
fists
sub
push
popf
roll
sbb
movsl
jecxz
mov
sbb
rcrb
clc
cmp
inc
cmp
xchg
adc
rorb
aaa
popa
loop
inc
jmp
movsl
test
inc
pusha
xchg
cmp
dec
ret
ss
lcall
notb
in
and
dec
sbb
inc
pop
shr
cmp
and
je
lds
fwait
ss
in
in
cld
fstl
and
and
stos
push
loopne
scas
xor
leave
sbb
mov
fimuls
dec
enter
cmpsb
cltd
xorb
pop
or
cmp
inc
mov
push
xchg
cmp
outsl
cmp
cmp
jns
jo
push
filds
cmp
cwtl
aad
xlat
lods
add
adc
xor
jecxz
jne
das
mov
push
sub
sub
adc
imul
xor
adc
inc
adc
sub
sbb
mov
fwait
add
mov
rclb
push
cmpl
sti
dec
push
mov
js
mov
cwtl
cmpb
mov
jbe
fcomps
cmpsb
fbstp
subb
gs
sub
inc
ss
in
mov
adc
out
lds
sbb
sbb
adc
or
pusha
mov
adc
xchg
jbe
xor
or
or
sub
aaa
mov
rolb
mov
add
nop
jmp
jle
negl
popf
mov
fsubs
lods
mov
sub
xchg
ret
xor
mov
ret
dec
enter
adc
cs
jg
sbb
fsubp
pop
stos
shll
loop
loopne
adc
cli
inc
test
and
jg
dec
loop
popf
and
and
and
sbb
push
pop
test
ds
mull
pop
add
repz
lds
pop
das
fiadds
inc
mov
or
icebp
lret
inc
lea
mov
mov
aaa
push
or
daa
inc
mov
arpl
ficoms
adc
enter
test
jp
dec
inc
loopne
mov
jmp
add
or
out
mov
add
insb
or
inc
mov
aad
jp
clc
inc
gs
loop
mov
sbb
push
int
nop
mov
sub
jb
test
in
cmpsb
or
push
cmp
adc
lods
or
mov
push
mov
and
sbb
dec
shl
cmp
adc
mov
call
aam
lret
repz
pop
adc
clc
jge
imul
push
ljmp
aam
jmp
jge
xlat
add
roll
and
mov
sbb
int3
in
outsb
loope
sub
xchg
cmpb
inc
or
mov
mov
push
ljmp
mov
faddl
push
inc
pop
or
inc
inc
out
mov
sub
stc
push
aas
dec
add
test
ja
dec
adc
cmp
jno
dec
xchg
sbb
pop
fldt
xor
add
mov
sub
incl
push
sub
lcall
popf
int
push
pop
loop
mov
outsl
mov
jp
out
add
std
add
jle
sbbl
mov
adc
jp
jb
sbb
xchg
lods
test
mov
inc
test
outsl
les
dec
cmpsb
jnp
clc
push
mov
mov
xchg
and
and
mov
cmc
mov
xchg
rolb
add
dec
popa
jbe
movsb
mov
or
fcoms
push
mov
mov
push
and
mov
es
pop
in
cmp
jmp
xchg
rclb
bound
imul
adc
enter
rcl
lret
jmp
gs
shl
inc
sbb
ss
pusha
mov
jmp
xchg
cmp
jp
icebp
rorl
mov
data16
jmp
shrw
mov
jbe
sbbb
sub
push
inc
lock
ljmp
out
scas
and
adc
imulb
addr16
or
je
sub
repnz
jne
dec
lods
shll
outsl
iretw
xor
sub
pop
pop
das
loopne
and
cmp
cmp
sub
ret
imul
sbb
fistl
mov
dec
or
aad
add
jmp
cmp
and
inc
add
mov
je
imul
mov
out
or
lods
adc
les
inc
fdiv
lods
rcl
imul
xor
sub
mov
std
jmp
and
insl
sbb
push
dec
dec
rolb
pop
mov
sub
pusha
arpl
ja
or
popa
mov
mov
mov
mov
push
loope
adc
xor
fdivl
loope
mov
or
push
inc
addb
add
mov
scas
imul
pop
push
nop
sbb
mov
cmpsl
push
fdivs
inc
cld
xchg
pushf
pop
testb
aam
adc
pop
pop
fs
sbb
andb
mov
cmp
jmp
cmp
mov
xor
fcmovnu
jl
pop
cmp
fldenv
dec
and
cmp
sbb
sti
push
ret
vmovlpd
push
mov
sbb
adc
mov
adc
hlt
or
inc
xchg
rol
sbb
add
add
add
dec
stos
xor
pop
inc
adc
sarl
push
pop
xor
js
je
cmpsl
dec
icebp
rol
push
mov
daa
cmp
push
movsb
les
popa
insb
cmc
adc
ds
push
insl
cltd
or
ret
cltd
inc
loop
js
or
pop
jb
rclb
das
ss
ja
cmp
aad
push
popa
inc
pop
icebp
adc
mov
pop
sbb
push
jmp
repz
lret
lret
inc
xchg
add
add
push
xchg
xor
adc
aad
pop
push
mov
ret
mov
or
cmc
lret
mov
pop
add
xchg
daa
add
pop
les
incl
or
loopne
xchg
sbb
add
es
js
daa
cmovs
inc
mov
outsl
aas
dec
or
mov
mov
and
sahf
push
mov
popa
aaa
add
mov
out
mov
test
inc
aad
cmp
add
cltd
arpl
add
insl
in
adc
cmpsl
fisttpll
insl
arpl
xchg
adc
clc
inc
mov
cmp
insl
mov
mov
pushf
xor
push
cld
pop
lcall
mov
in
xchg
sub
adc
jo
mov
int
outsl
mov
int3
adc
sbb
imul
jecxz
jae
xor
mov
imul
xor
inc
dec
and
je
int3
fsts
addb
cmp
or
mov
movsb
out
lds
inc
sbb
clc
mov
mov
sarl
out
jle
andl
xchg
mov
mov
pop
pusha
pusha
mov
nop
push
add
ret
inc
scas
mov
jno
add
mov
add
sub
mov
add
sar
cltd
pop
icebp
repnz
movsl
xor
or
jns
stos
mov
jg
mov
xchg
outsl
xchg
stos
xor
ds
out
fildll
aas
push
dec
dec
adc
mov
mov
sub
bound
clc
cmc
fsts
inc
and
mov
movsl
sbb
out
cs
push
xchg
and
mov
and
jmp
iret
loope
cmp
call
sbb
clc
repz
scas
lods
sbbl
or
jge
mov
ret
bound
iret
enter
data16
dec
loopne
jo
call
rclb
push
rolb
inc
inc
jnp
dec
int
sbb
icebp
pop
dec
mov
mov
cmp
pusha
ss
mov
xchg
inc
ficoms
andl
dec
xchg
pop
nop
mov
fwait
cli
or
pop
xor
dec
sbb
aam
fists
inc
or
nop
sub
pop
sub
leave
lea
std
pop
mov
rcrl
pop
xor
cli
aad
rcll
jbe
ret
cmp
es
mov
xrelease
decb
add
mov
push
pop
iret
outsl
aaa
out
sbb
test
repz
mov
call
and
loopne
mov
je
sbb
and
mov
add
add
imul
mov
and
out
out
loop
add
test
fwait
popa
mov
es
pop
loop
outsl
testb
mov
pop
dec
inc
loop
sub
jb
je
xchg
push
xchg
rcll
stos
fwait
add
mov
jle
adc
dec
xchg
ja
add
sbb
fistl
mov
jp
push
dec
xor
or
lds
add
stos
pop
js
sbb
inc
icebp
adc
rcrb
add
fdivs
cmp
enter
cmpsb
es
add
test
pop
jmp
decl
mov
cmp
sbb
ret
fisttpl
aad
int3
inc
sbb
outsb
push
xor
inc
and
xor
sbb
mov
inc
adc
adc
mov
sbb
jnp
push
sahf
lea
push
fsubs
mov
jle
inc
ret
rorl
add
out
xchg
pop
in
lea
cs
outsl
setle
jo
fs
pop
jae
test
jmp
sbb
and
addb
repz
sub
das
mov
stos
jbe
dec
fcoml
sub
pop
dec
pop
in
rcr
out
mov
push
or
or
test
loopne
std
inc
ret
inc
enter
and
fsub
imul
bound
jno
push
call
jnp
loope
test
push
and
or
push
outsl
fisttpl
jle
jmp
out
mov
sbb
fwait
rcl
or
mov
mov
adc
clc
ret
jo
mul
pop
and
mov
idivl
scas
sbb
jge
sbb
mov
xchg
push
inc
lahf
out
popa
ror
xorb
push
cmc
ss
sub
out
hlt
inc
mov
loopne
insb
xor
xchg
jp
adc
pop
sub
and
mov
ds
cmpsl
frstor
int
sbb
fst
or
sub
lea
push
aaa
mov
push
sub
sbb
test
arpl
add
repnz
push
push
mov
insl
push
xchg
fucomip
push
push
loopne
cmp
sbb
fcomps
dec
cmp
pop
sub
imul
lods
aas
arpl
je
cltd
fidivl
pop
pop
jmp
sbb
mov
add
test
pop
cli
inc
mov
adc
pop
jp
sbb
push
dec
xchg
inc
pusha
and
sbb
clc
out
mov
xchg
lret
arpl
shl
pop
push
cmp
dec
adc
aad
pop
call
test
mov
pop
xchg
fdivrs
int
int3
out
mov
xchg
push
jnp
pop
or
shrl
enter
pop
and
jo
push
xchg
dec
add
mov
test
pop
sub
pusha
mov
aam
xchg
out
dec
push
rclb
lock
sub
dec
jl
and
andb
xchg
pop
lds
adc
out
std
sbbb
push
andb
sub
sbb
faddp
lcall
dec
test
inc
popa
in
mov
adc
jle
lock
into
push
stc
repz
in
push
addr16
jo
mov
mov
jo
leave
ds
mov
notb
jb
call
cmp
stos
cmp
push
jno
xor
ror
jmp
insb
add
adc
lcall
cwtl
sub
sub
lock
mov
and
aam
inc
addl
mov
pushf
and
jle
das
mov
mov
mov
dec
pusha
mov
sbb
add
or
and
sub
popf
test
mov
cmpsb
push
xchg
scas
andl
inc
insb
repz
call
xchg
fwait
mov
lds
push
rol
jb
mov
xor
sbb
jbe
xchg
scas
in
lahf
aas
ficomps
add
scas
cmp
adc
ret
dec
rcrb
clc
iret
mov
fcompl
cltd
mov
lea
push
es
xchg
int3
pop
push
pop
cld
dec
inc
inc
test
push
movsl
mov
mov
leave
movsl
rclb
in
fldenv
pusha
call
mov
mov
es
jbe
add
call
or
cs
dec
mov
push
jge
mov
push
jp
xchg
orb
sbb
adc
out
cltd
adc
fistps
mov
pop
push
pop
aaa
adc
roll
mov
imul
dec
sbb
movsb
cld
rcr
ljmp
add
loope
dec
mov
mov
jne
sti
jle
mov
bts
std
add
enter
push
ficompl
loopne
cwtl
mov
je
lret
push
popa
mov
aam
out
out
xor
mov
xchg
mov
inc
scas
xor
push
xlat
cs
xor
mov
and
jae
loopne
cmpsb
or
mov
pop
ficompl
jp
es
jmp
jne
outsl
add
mov
or
dec
inc
es
outsb
stos
dec
test
pop
ret
push
and
lods
hlt
ficomps
xchg
push
push
lret
stos
scas
cs
pop
jl
inc
cmp
jg
idiv
and
sub
notl
push
outsl
ja
pushl
push
lea
add
push
push
or
lea
push
push
call
or
pop
lahf
leave
ret
push
inc
lock
cs
mov
out
lock
xor
cld
cmp
pop
jbe
in
fs
je
push
inc
add
sti
adc
add
fdivrs
jmp
jbe
push
jge
fiaddl
adc
decl
sub
add
dec
dec
and
pop
clc
repnz
push
push
dec
bound
xor
push
xchg
jg
cmp
call
sub
inc
or
pushl
push
fistps
loopne
outsb
jae
jb
nop
gs
popf
add
and
push
sbb
pop
inc
clc
push
push
popf
jae
mov
dec
test
xchg
pop
sbbb
out
jle
ret
push
dec
add
push
adc
sub
sbb
jmp
in
lret
push
and
iret
jmp
outsb
sub
scas
insb
popf
divl
push
inc
cmp
inc
mov
dec
mov
adcl
fwait
sbb
push
ja
repnz
mov
insb
cmpl
jo
push
ret
jg
push
sub
clc
jo
fistl
shlb
add
pop
sub
xchg
mov
outsl
cmp
or
add
insb
aas
in
push
pop
add
add
inc
je
jae
or
jne
dec
stos
mov
sub
outsb
pop
icebp
add
mov
adc
data16
adc
call
insl
mov
mov
loope
bound
leave
jg
stos
hlt
divb
sbb
push
and
push
and
and
negl
jne
stc
lret
pushl
xor
sbb
add
jmp
or
jnp
jne
mov
cwtl
push
push
je
jns
outsl
sti
ret
in
dec
andl
outsl
dec
dec
inc
dec
stc
add
std
cmc
mov
hlt
inc
fdivrs
xorl
test
or
push
xor
push
cs
or
jecxz
loopne
push
inc
and
int3
jbe
incl
insb
inc
push
xchg
in
push
sar
mov
xor
sbb
push
jbe
in
aaa
xchg
dec
add
inc
jns
push
shl
jp
xor
out
mov
cmp
sti
clc
push
push
add
cmp
sub
outsb
push
and
subl
cmp
xor
sub
hlt
fmul
jae
sub
mov
inc
decl
xor
inc
hlt
push
testl
gs
push
inc
cmp
in
js
jg
mov
cmp
jne
or
jle
aaa
clc
sub
dec
sub
dec
jb
inc
or
jbe
or
xchg
enter
in
insl
js
mov
daa
push
fildl
cmp
dec
clc
push
pop
sbb
push
arpl
jecxz
sub
neg
cld
repnz
cmp
je
bound
add
inc
add
scas
pushf
dec
cmp
js
mov
es
pop
jecxz
jg
push
inc
dec
xor
das
faddl
and
sub
jo
ss
arpl
andb
adc
adcl
pop
mov
push
insb
push
mov
lahf
hlt
xchg
in
shll
ret
loope
leave
ret
lea
push
cmp
sti
dec
inc
push
jns
add
inc
incl
test
jbe
xchg
sub
adc
add
sub
mov
dec
cmp
push
rcr
dec
pop
inc
push
inc
xor
dec
out
cwtl
cmc
lea
push
mov
or
ss
push
add
movsb
imul
inc
pop
dec
jno
out
mov
mov
mov
mov
das
loope
je
xlat
mov
rol
outsl
cmp
jp
pop
pop
inc
sub
inc
mov
inc
bound
outsl
pop
mov
or
pop
adc
sub
dec
inc
cmp
inc
test
xor
cmp
mov
loop
xor
inc
dec
mov
test
push
adc
mov
add
and
and
imul
in
add
pop
mov
cmc
hlt
mov
call
and
xor
add
adc
insb
sbb
and
rep
inc
gs
js
or
jp
cs
movsl
das
std
add
inc
cmp
clc
pshufw
dec
lds
not
fs
add
xchg
lret
mov
test
fnstcw
push
outsb
push
int
movsl
js
sbb
mov
add
add
sbb
nop
sarb
repz
data16
xchg
dec
or
dec
push
popa
addr16
dec
adc
je
bound
lock
push
pop
adc
xchg
inc
sbb
dec
rcl
clc
out
in
mov
in
outsl
add
jns
inc
xchg
or
ret
xor
jne
mov
jmp
mov
repnz
jge
adc
loopnew
mov
add
fidivrs
or
pop
mov
sbb
add
sbb
dec
pop
adc
xlat
adc
addb
rcl
push
aam
push
or
fcompl
dec
sub
push
aam
hlt
mov
xchg
mov
cmp
inc
ja
sahf
xor
push
mov
pop
loope
clc
lods
mov
cmp
gs
ret
jbe
cmp
insb
ret
mov
loopne
ljmp
ret
enter
inc
dec
aas
xor
or
sar
dec
orl
lods
pop
inc
lret
call
push
push
das
xchg
fs
sbb
in
sub
pusha
scas
push
inc
dec
jecxz
push
outsl
cmc
push
jmp
pop
je
insb
push
ss
push
mov
and
js
sub
pop
in
test
push
xor
sbb
popa
inc
push
js
add
jae
adc
xlat
sub
mov
inc
sub
idiv
ljmp
iret
inc
sbb
mov
adc
pop
and
jo
lock
jecxz
dec
imul
dec
or
rolb
dec
xchg
flds
jmp
mov
imul
sub
pop
push
add
lock
add
addl
xor
inc
and
fildll
outsl
cmp
outsb
repnz
push
pusha
loopne
rorb
adc
sub
push
push
pop
lahf
or
fbld
push
jb
shll
shll
adc
in
xor
shrb
sub
jb
ljmp
mov
sub
mov
inc
ja
dec
pop
pop
shlb
lcall
cmp
popa
cmp
push
add
in
sbb
push
pop
je
mov
mov
push
cmpsl
rorl
add
cld
inc
push
inc
insl
test
js
ss
cmp
loope
insl
insb
adc
sub
das
push
add
push
mov
arpl
xchg
shlb
lods
xchg
push
insb
inc
dec
cmp
xchg
addl
fbstp
dec
xor
sub
outsl
xor
jb
mov
outsb
push
dec
and
andl
pop
insb
dec
or
mov
movsb
lock
jns
jmp
fs
in
or
mov
adc
dec
aas
add
xor
pop
push
cli
or
lahf
mov
incl
mov
mov
sahf
fs
data16
inc
push
out
jnp
cmp
cmp
mov
fs
add
mov
push
mov
rorb
movsb
mov
mov
inc
push
xor
push
fmull
or
test
pop
and
repz
push
in
es
andl
mov
aas
cmp
stc
dec
sub
mov
mov
push
stos
xchg
lret
in
jl
ds
loopne
dec
push
mov
cld
push
push
test
adc
inc
sub
push
in
mov
push
fwait
or
dec
jb
mov
rcrl
sub
xchg
jb
gs
aad
or
in
mov
adcl
and
or
fisubrl
jbe
add
out
stc
js
xchg
jb
mov
jae
push
in
push
fbld
js
push
push
lods
mov
cmp
and
mov
xor
lods
push
push
mov
mov
pop
insb
insl
bound
das
inc
fstl
sbb
cmp
addb
push
adc
sbb
add
mov
fadds
jo
ss
arpl
push
xor
adc
addr16
mov
add
adcl
inc
push
xchg
and
push
push
and
add
incl
mov
dec
inc
mov
add
adc
jge
into
ja
out
std
inc
or
fadds
inc
jo
add
or
rorl
push
pop
xor
scas
adc
je
xchg
and
cli
push
fsubr
outsl
incb
xor
fs
mov
pop
dec
inc
insl
insl
inc
insl
mov
mov
pop
sub
sbb
int
insb
bound
sub
sub
add
mov
outsb
jo
imul
push
xor
push
dec
ss
xchg
clc
sub
arpl
inc
imul
aas
mov
xchg
sub
mov
mov
cli
add
shll
mov
in
cmpsb
xchg
jbe
imul
lret
jb
mov
bound
lret
or
push
jnp
int
jnp
sbb
add
xor
add
cld
xorb
mov
int
inc
out
sbb
pop
mov
add
in
add
add
psrad
push
nop
add
daa
stc
in
jnp
adc
je
add
sbb
fistpl
fs
testb
cmpxchg
mov
or
int
pop
jle
add
rcll
aas
fsubrs
out
clc
add
and
fucom
int
add
push
add
jo
mov
inc
xor
mov
mov
mov
jl
mov
cs
cwtl
lods
inc
loopne
dec
inc
add
ljmp
outsl
rolb
add
jle
arpl
popa
mov
mov
add
add
cmp
cmp
cwtl
fistpl
sar
push
sub
daa
movl
add
adc
add
out
and
ss
into
outsl
outsb
xchg
pop
testb
adc
pop
outsl
aaa
or
out
enter
jae
and
fwait
add
insl
mov
xchg
add
adc
add
in
pop
dec
adc
jp
mov
push
negl
fadds
ds
test
in
cmp
xchg
dec
in
push
jle
outsb
pop
sbb
popl
sbb
into
ss
mov
add
je
push
jb
nop
fisttpll
push
xchg
enter
ret
lret
sbb
ja
sahf
adc
lock
fidivs
push
add
sarl
jge
or
shlb
out
pop
das
scas
int
or
xor
out
xlat
loope
outsl
jecxz
mov
and
push
subb
xchg
adc
mov
inc
adc
jecxz
cmp
out
xchg
jae
cmp
in
jl
rcll
insb
mov
inc
add
lcall
mov
xorl
test
aaa
shlb
incl
xchg
roll
cli
sahf
insl
adc
add
pop
jae
inc
fucomi
lock
test
cmc
xchg
leave
dec
je
push
mov
sbb
loopne
in
xor
addr16
femms
xchg
sahf
adc
xor
sbb
cmp
mov
mov
xchg
xchg
scas
loope
adc
add
jl
and
xchg
gs
pusha
push
add
mov
xchg
mov
repnz
out
and
and
mov
in
data16
or
mov
imul
imul
push
out
in
fstl
cs
pop
dec
adc
or
or
cmp
cli
jne
and
jle
mov
cli
pop
add
cld
out
push
xchg
sahf
jle
in
inc
scas
jecxz
repz
xchg
cmp
sbb
sti
push
data16
pusha
in
clc
insl
dec
ja
push
popa
xlat
cs
pop
fdivrs
jecxz
fld
push
int
popf
jno
and
mov
test
and
mov
orl
sbb
xchg
lods
in
or
inc
push
push
and
add
imul
popf
incb
pop
cmp
xchg
cmpsl
or
cmpsb
popf
ss
testb
add
clts
add
stos
arpl
mov
push
ret
or
pop
sub
mov
das
xor
mov
pop
mov
loope
jo
fldt
daa
sub
jbe
mov
pusha
cmp
js
in
lods
mov
inc
push
inc
cmpb
pop
gs
sub
add
insb
lock
inc
mov
enter
adc
jno
adc
popa
js
out
push
pusha
xor
and
ds
dec
fsubl
jle
test
or
jmp
lret
xchg
adc
sub
sbb
jl
sub
mov
jnp
jne
cmp
in
sbb
sbb
loop
mov
lock
pop
sub
test
sarb
mov
dec
pushf
in
jecxz
sbb
cmp
add
lret
xchg
add
pop
sub
in
or
lret
jmp
lret
neg
and
jmp
loope
xchg
std
mov
dec
dec
lods
rcrl
adc
add
scas
xchg
js
outsl
sbbb
dec
js
cmp
cmp
xor
popf
cltd
add
pop
mov
ret
and
repnz
add
add
lods
jne
lret
push
in
cmp
mov
ss
pop
scas
cmp
or
pop
lret
jo
pop
jmp
mov
cs
imul
jno
jmp
hlt
call
inc
pop
jle
popa
cwtl
in
adc
mov
mov
push
jl
or
xorb
ret
push
addr16
xor
mov
shlb
inc
lods
scas
dec
sti
sub
pop
adc
or
jb
pop
pop
mov
push
adc
sti
ret
pusha
cs
xchg
cltd
aas
daa
adc
pusha
jbe
mov
sub
sbb
xchg
rorb
mov
push
pop
cwtl
push
rol
pushf
mov
lock
dec
pop
mov
push
iret
or
and
xchg
sbb
sbb
scas
addr16
dec
cmpl
fcmovnb
out
dec
and
int
xor
or
mov
dec
ds
dec
roll
data16
mov
cmp
in
add
sub
lret
mov
repz
ds
xchg
or
out
fnsave
sub
test
xchg
rcrl
lods
out
mov
popf
cmp
mov
mov
add
pusha
arpl
push
movsl
adc
das
sbb
fs
push
xor
je
mov
adc
loope
sbb
pop
scas
outsb
aaa
lods
jae
or
ds
je
rorb
sub
call
push
xor
cmp
pop
xchg
jbe
or
mov
imul
dec
inc
xchg
mov
je
inc
ljmp
test
mov
fwait
stc
scas
xchg
xchg
leave
call
pop
sbb
mov
sub
push
cwtl
push
inc
adc
or
or
pop
aas
jne
and
push
and
int3
mov
dec
packuswb
xchg
cltd
or
mov
stos
sub
scas
sbb
add
lahf
mov
ss
jae
jnp
jl
clc
js
je
icebp
sub
mov
jg
loopne
or
add
lcall
aam
sub
pop
lods
lea
and
ss
xchg
repz
sub
cmp
loope
leave
roll
insb
std
popa
je
lahf
ffree
es
hlt
mov
bound
jae
arpl
ficomps
mov
lods
or
ror
add
data16
cmp
push
aam
clc
xchg
shr
ret
or
in
icebp
mov
stc
outsl
add
mov
add
push
insb
push
mov
jno
and
or
sub
addr16
xorb
rcr
out
cs
sbb
mov
sarl
aaa
in
sbb
xchg
mov
or
je
pop
xor
addr16
cmp
sbb
mov
mov
lcall
cmpsl
insl
arpl
sbb
mov
fsubl
pop
sbb
xlat
jle
sub
fbld
ja
aam
test
jecxz
gs
sbb
sti
adc
mov
sub
jne
push
adc
lret
mov
jne
into
in
cmpsb
imul
xchg
mov
shll
adc
sbb
inc
jns
ss
mov
testl
movsb
dec
lea
or
xchg
xchg
sub
pop
pusha
cmp
shrl
xchg
faddl
test
mov
shrl
or
jnp
aam
mov
push
and
outsb
popa
and
cmp
popa
cmp
pop
daa
icebp
lock
xor
mov
cmp
push
cmp
xor
mov
fadds
lods
cmp
or
xchg
shrb
movsl
imul
jmp
jbe
xchg
lret
popa
divb
push
and
pop
xchg
xlat
cmp
cwtl
lret
sbb
and
xor
lcall
hlt
leave
adc
mov
out
movsb
fcmovb
pop
push
pusha
fwait
xchg
sahf
add
pop
mov
bound
enter
imul
push
outsb
or
xor
xor
daa
sbbb
das
dec
jg
add
lret
or
jecxz
mov
mov
mov
leave
xor
ss
push
les
push
pop
pusha
ret
add
mov
leave
dec
inc
mov
rolb
or
lods
popf
vshufps
test
insl
lahf
adc
lcall
lcall
ret
call
cmpb
xlat
inc
jecxz
xor
sahf
pop
or
push
jbe
mov
dec
pusha
add
dec
push
xor
lock
pop
std
mov
push
movsb
cmp
pop
inc
mov
cld
les
jb
mov
cli
xor
jl
sub
popa
adc
add
pop
insb
addr16
xlat
nop
xchg
test
cmpsb
sbb
bound
addr16
mov
sahf
mov
dec
mov
jo
es
cltd
inc
bound
cmpb
imul
fnstcw
jae
addr16
pop
cmpb
add
mov
adc
jno
testb
decb
call
pop
in
fisubl
cs
int
and
inc
enter
sbb
pop
add
xchg
xlat
sbb
lcall
iret
and
int
mov
mov
inc
sarb
imul
daa
sbb
add
xor
add
popl
adc
mov
inc
dec
cs
mov
pusha
iret
jb
inc
shl
pop
dec
jge
loopne
mull
add
lcall
subl
pop
jle
scas
pop
sahf
add
push
pop
aad
mov
addr16
test
sbb
or
xchg
dec
add
lds
popl
orb
push
js
and
aaa
add
insl
outsb
out
dec
adc
out
imul
mov
addl
out
rcr
out
test
cmp
outsb
xchg
cltd
cmp
push
lahf
ss
sbb
cwtl
rclb
je
dec
mov
in
leave
push
ljmp
inc
xchg
scas
dec
xchg
mov
mov
xchg
push
pop
sbbb
fs
or
xor
test
mov
jcxz
push
cmp
or
cmpb
cltd
outsl
cmp
jnp
pop
cmp
popa
in
mov
scas
andl
mov
hlt
js
push
mov
jle
pop
push
push
or
mov
jne
loope
push
inc
push
inc
lahf
repnz
mov
ret
mov
pusha
sar
pop
mov
clc
dec
mov
xor
negb
in
sub
adc
sti
loopne
or
pop
js
pop
cmp
mov
mov
xlat
shll
mov
movsl
cmp
cs
stos
jecxz
or
outsb
cli
sbb
or
out
sbb
xor
sub
mov
fldt
inc
mov
pop
sti
out
iret
add
int3
mov
push
adc
pop
xchg
xchg
mov
testl
dec
jne
add
inc
into
outsb
cli
les
in
into
shrb
xchg
in
retw
in
jecxz
cmp
fidivl
psubb
fidivrs
sbb
cmp
mov
data16
inc
sahf
lds
xlat
or
sub
rorl
out
js
pusha
test
daa
cmc
test
cmpsb
cmp
mov
in
scas
outsl
movsb
add
sbb
out
sub
outsb
dec
push
int3
xchg
cmp
push
xor
test
add
sahf
mov
addr16
test
adc
lock
sub
fbstp
push
ja
add
mov
iret
jno
cmp
in
nop
popf
mov
rorb
dec
out
dec
adc
cmpsl
insl
ret
in
aas
rol
sbb
jle
add
arpl
jns
jae
icebp
and
std
ds
or
das
mov
addr16
and
ss
enter
ret
cld
sbbw
mov
xor
popa
rolb
das
int3
pop
out
xor
fcoml
aad
loopne
xorl
dec
xchg
jp
rcrl
adc
mov
mov
hlt
sub
iret
sub
jns
rorl
sahf
jmp
push
and
jo
arpl
jnp
roll
inc
push
push
scas
addr16
mov
or
push
jbe
lods
mov
jns
or
pop
dec
repnz
ret
call
ja
pop
fwait
iret
mov
je
dec
add
xchg
pop
sub
jb
add
pop
jl
add
jle
add
lock
and
fadd
lods
and
adc
fadds
adc
in
cmc
adc
jl
fistpl
pop
or
jnp
push
push
adcl
or
outsb
push
cmp
enter
dec
test
pushf
shll
and
out
sub
jno
rcrb
shl
out
mov
push
add
cmp
push
andl
cs
jg
dec
mov
inc
movsl
inc
aaa
andl
loopne
iret
mov
xlat
sub
fistpl
hlt
mov
inc
ror
sbb
mov
sti
pop
out
cmp
pop
movsb
rolb
sti
pushf
rorl
push
pop
xor
sti
xchg
mov
pop
and
and
or
bound
ret
ret
and
or
push
push
fcmovnbe
sbb
jae
xor
dec
pop
loopne
scas
mov
fbstp
mov
pop
clc
pusha
leave
mov
dec
gs
mov
in
lock
inc
cmp
xchg
sub
aaa
lock
adc
addl
lcall
clc
arpl
mov
mov
pusha
mov
sbb
sti
and
out
iret
lock
cmpb
test
mov
push
sub
jmp
movl
in
sbb
mov
dec
shll
jmp
lds
jp
cmp
pop
call
sbb
inc
cmp
cmc
inc
das
call
mov
ds
sbb
or
fwait
clc
and
sub
lea
jae
add
ljmp
ljmp
adc
movsl
aaa
stos
pop
sbb
jo
std
call
pop
daa
in
and
lea
cmpsb
and
stc
lock
or
sbb
cmp
shll
sub
inc
or
fidivrl
pushl
shll
adc
imul
add
addl
jge
push
add
cld
lds
jnp
add
ss
popa
pop
jl
hlt
inc
test
movsb
cmp
jno
jns
inc
out
adcl
add
icebp
inc
imul
cmpb
pop
loop
shl
and
fdivl
scas
pop
add
fidivrl
inc
std
xor
push
ss
arpl
in
and
mov
addr16
push
mov
adc
repz
pop
cmpl
push
ds
enter
int3
xchg
pushf
push
std
dec
sbb
popw
pop
sti
push
lret
pop
loop
lahf
sti
in
mov
xor
les
cmp
and
negb
inc
xor
loope
push
push
icebp
jecxz
dec
or
dec
dec
cwtl
jl
jbe
sub
cmp
xchg
push
fmul
dec
or
inc
mov
sbb
add
dec
xorl
adc
jnp
out
ror
sub
dec
pop
inc
sbb
mov
arpl
insb
pop
sub
sbb
cmp
sub
push
jle
lea
rcrb
inc
mov
pop
loop
fdivrl
or
pop
movsb
inc
push
cld
or
shr
ds
inc
adc
xbegin
push
jo
pushf
outsl
mov
push
pusha
aam
mov
jo
sub
xor
cmc
add
or
cmp
mov
ret
into
fstpl
inc
lods
jae
incl
add
push
mov
scas
mov
sub
add
sahf
jo
insb
enter
xor
pushf
pop
cmp
clc
xchg
fmuls
jnp
sub
fld
in
sarb
dec
dec
fdivl
popf
dec
jo
xchg
loope
popa
pop
xor
jl
ss
out
or
int
daa
int3
lock
and
mov
popa
icebp
xchg
insl
loop
daa
int3
push
sbb
cmp
jecxz,pt
js
popf
pop
jecxz
and
lea
dec
cs
jne
je
in
push
ffreep
rclb
or
loopne
mov
dec
popa
cmc
arpl
ds
dec
and
stos
jmp
mov
push
lods
or
cmp
and
dec
mov
jle
inc
jae
xchg
pop
mov
add
ljmp
cmp
add
in
aam
and
push
ja
and
cltd
clc
aad
inc
loopne
outsl
int
in
inc
xchg
loope
and
jl
mov
jmp
test
subl
and
push
jb
aad
cmp
mov
rcll
cmp
adc
loopne
cli
js
mov
sbb
adc
addr16
and
sub
xor
xchg
mov
dec
or
loop
popf
fcmovbe
loopne
daa
add
xchg
sub
jbe
je
and
mov
scas
mov
and
xchg
jle
inc
in
std
cwtd
or
mov
or
jno
stos
divl
inc
pop
push
out
es
repz
arpl
and
mov
cli
mov
adc
sbb
xor
jg
pop
push
hlt
icebp
loopne
dec
test
sahf
lcall
push
xchg
push
pop
mov
push
scas
cmp
cld
movsl
adc
xchg
mov
add
mov
push
or
mov
pop
add
sbb
mov
std
loopne
jb
mov
lods
lods
incb
sahf
mov
sub
iret
je
xchg
push
scas
inc
ljmp
out
std
inc
mov
call
pop
cwtl
push
mov
fldenv
xor
leave
cmp
push
sub
sbb
mov
jle
cmp
in
jecxz
fs
jl
bsr
into
bound
dec
sub
adc
loopne
add
insl
or
inc
movsl
test
into
dec
data16
call
sub
xchg
sahf
xor
inc
xchg
adc
lock
mov
in
hlt
jo
jnp
add
addr16
push
adc
xchg
adc
mov
add
xor
lds
incl
or
fisubs
push
outsl
nop
test
cmp
mov
test
rolb
cmp
add
inc
arpl
cmp
cmp
testb
pop
in
jp
inc
mov
mov
sub
clc
xchg
and
cmpsl
xchg
jecxz
cwtl
mov
mov
mov
mov
leave
mov
ficompl
in
sbb
in
dec
mov
data16
in
iret
int
lcall
sbb
shr
and
sahf
test
push
data16
cmpsb
and
imul
and
cmp
repz
enter
and
sub
fwait
out
inc
jle
cmc
in
and
lock
jae
lahf
add
ret
gs
aaa
mov
shrl
movl
push
insl
and
pop
sub
lds
subl
pop
mov
mov
sbb
rol
movsb
pop
jns
mov
shll
rorl
jae
js
icebp
jecxz
xchg
xchg
mov
pop
nop
mov
je
sbb
sub
sahf
fnclex
ds
cmpl
and
lcall
or
sub
imul
inc
inc
cld
mov
add
insb
sbb
jmp
mov
clc
scas
aaa
push
pcmpgtw
mov
hlt
mov
push
and
mov
das
out
loop
fisubrl
insb
mov
shll
inc
push
fsub
sarl
sbb
scas
andb
push
cmp
lret
push
jg
in
sub
test
mov
sbb
popf
mov
sbb
dec
out
mov
mov
arpl
addl
insl
or
adc
aad
mov
repz
xchg
push
xchg
and
shll
stos
mov
imul
adc
push
jecxz
sub
in
and
nop
dec
cmpsl
adc
sbb
inc
enter
cmp
mov
jb
aad
mov
mov
mov
sub
ss
stc
mov
jl
inc
jmp
or
xchg
inc
jp
or
jl
out
sbb
sub
stos
aaa
cwtl
sub
js
pop
std
mov
sub
out
iret
movsb
mov
fdivrl
sbbl
fstp
into
or
mov
jecxz
jo
insb
push
out
xor
inc
jp
jge
arpl
add
pop
lahf
imul
sahf
inc
shll
sub
mov
fnstsw
adc
ds
mov
jl
cwtl
jecxz
push
inc
repnz
add
pop
mov
mov
cli
cmp
adc
rclb
dec
xchg
nop
lahf
dec
imul
in
xchg
pop
je
mov
ljmp
int3
es
mov
bound
or
add
sub
push
clc
rcr
add
and
pop
dec
or
in
xor
inc
les
mov
std
jle
cltd
pop
mov
push
jb
ret
jo
jp
les
push
xchg
idivl
test
inc
mov
je
fs
je
adc
jmp
ret
pop
xchg
les
sub
lods
add
jle
pusha
in
test
int3
jnp
or
arpl
pop
add
mov
push
out
pop
lcall
ret
adc
add
push
rclb
mov
ljmp
mov
cmp
repz
pop
add
xchg
aad
push
stos
cmpsb
dec
xor
fldenv
mov
imul
lock
sbb
lret
mov
ljmp
aas
push
nop
gs
sbb
test
sbb
and
stc
cld
into
int
pop
cmp
xor
push
insb
inc
inc
insb
pop
cltd
xlat
mov
ds
mov
sub
test
cwtl
jecxz
fdivrl
lods
pop
cmc
hlt
dec
pop
xor
iret
xor
jmp
push
aad
jp
cmc
lds
xchg
cmpsb
loop
and
mov
lea
jle
pop
dec
lcall
push
xchg
and
mov
clc
mov
or
adc
jmp
pop
add
add
mov
test
pop
mov
sub
jb
jne
es
testb
mov
inc
or
add
pop
dec
push
ds
sbb
loope
rcrb
and
aaa
fimuls
mov
adcl
inc
cs
inc
xor
enter
arpl
clc
inc
pop
lods
mov
add
xchg
cmp
xor
xchg
pusha
imul
sbb
cwtl
sbb
aaa
xor
jne
cmp
cli
cltd
xchg
loopne
or
lock
fwait
push
dec
mov
inc
daa
popf
clc
xchg
pop
sbb
pop
in
in
xlat
sbb
jp
dec
lret
mov
dec
aam
pop
in
adcb
cmc
dec
fdivrs
sti
ret
fwait
js
cmpsl
das
mov
sahf
add
add
or
lret
mov
xor
fs
mov
inc
loope
fdivrl
fistpl
clc
dec
fs
xchg
out
lods
pop
inc
pop
test
sbb
rol
fiaddl
insb
sbb
sbb
movsb
call
enter
cltd
lcall
dec
mov
mov
add
xchg
iret
mov
dec
rcr
push
inc
in
ror
mov
mov
lret
adc
nop
dec
jbe
inc
mov
inc
aaa
stos
ss
sbb
cld
mov
ljmp
ss
daa
pop
jge
mov
inc
push
add
repz
lea
push
sahf
scas
fsubrl
inc
shr
mov
mov
xchg
xchg
loope
lock
jmp
fcmovbe
fstpt
flds
ja
adc
andl
stos
pop
pop
aad
or
push
pop
arpl
fdivrs
jecxz
inc
hlt
mov
out
mul
pop
mov
mov
and
repz
testl
dec
adc
fisubl
inc
cmp
test
lods
pop
rolb
outsl
cwtl
in
and
jl
mov
ljmp
push
sub
xor
xor
sbb
push
sub
mov
inc
cmpsb
dec
jmp
or
or
jno
daa
sub
mov
push
mov
mov
cwtl
pop
sbb
dec
sub
pusha
loopne
out
sbbb
outsb
push
jne
push
cli
hlt
mov
rcll
fldcw
dec
aad
cmp
xor
fcompl
jbe
push
gs
dec
and
lods
push
sbb
add
sbb
cmc
jb
sbb
popf
inc
fs
fldl
sbb
and
subb
addr16
xchg
mov
inc
xchg
stc
enter
dec
or
les
ret
pop
sbb
mov
es
in
shrb
scas
mov
aad
jnp
fistl
jns
xchg
cs
lds
int3
lahf
lods
sahf
fsts
adc
pusha
xor
xchg
imul
lds
movsl
push
dec
stos
orb
jno
mov
das
push
es
fadds
mov
push
jl
mov
je
xor
jmp
push
jne
imul
adc
push
pusha
cmpsb
std
test
pop
dec
ds
cmp
jl
daa
sbb
or
sub
stos
xchg
push
jp
xor
cmc
ja
dec
cmp
inc
fwait
xor
and
xor
or
in
inc
jo
hlt
add
gs
jo
je
dec
xchg
imul
add
sub
sbb
js
das
push
mov
and
gs
in
adc
jb
xor
push
andb
push
xor
enter
incb
or
into
jbe
shll
pushf
lods
jmp
std
sub
sub
lock
stos
push
iret
ljmp
dec
cmpsl
inc
dec
inc
push
or
jl
inc
cmc
cmp
push
cmpsl
mov
pop
imulb
les
mov
mov
fstl
lret
out
dec
loopne
or
bound
out
loope
sbb
pop
or
insl
jnp
xor
add
fcoml
jnp
sub
stos
aas
aas
push
aam
aad
add
xor
add
incb
cmc
pop
loope
test
or
lock
inc
lods
sub
ljmp
loope
iret
es
ret
pop
mov
rcll
mov
or
xor
push
loope
popa
lds
fsubrs
mov
adcl
or
iret
clc
sbb
lods
mov
lcall
stos
cmp
insb
shlb
test
mov
je
sub
jne
sahf
push
or
xchg
lret
or
jmp
nop
lods
push
aaa
loope
lock
les
pop
pop
mov
jns
loope
jl
mov
aaa
jl
roll
pop
lds
repz
arpl
and
inc
ret
jge
push
xor
add
out
sub
and
dec
push
je
test
push
mov
test
pop
bound
mov
xlat
xchg
jb
les
and
aaa
lods
fs
or
popf
add
xchg
movsl
incb
loopne
xor
daa
rclb
repnz
cmp
mov
mov
pop
loope
in
lahf
mov
xchg
fwait
sbb
lea
ret
in
or
adc
inc
jno
ss
mov
xor
inc
push
sbb
das
clc
arpl
aaa
lret
ds
repnz
cmp
xor
movsb
mov
adc
and
and
or
mov
lods
add
dec
cwtd
pop
mov
mov
sbb
xor
lcall
fildll
inc
jge
imul
pop
xchg
ret
loopne
cmp
mov
xchg
jmp
fs
push
lret
jecxz
inc
push
pushf
in
add
jl
popl
inc
inc
add
aaa
mov
add
mov
push
add
movsl
inc
xor
fadds
xchg
ss
jns
inc
adcb
cmpsb
mov
movsb
sub
nop
mov
cmc
loopne,pn
adc
add
mov
ss
mov
xchg
movsl
scas
cmp
ljmp
gs
fs
loope
mov
mov
inc
push
and
sbb
mov
stos
or
mov
je
dec
sbb
push
aam
pop
inc
push
dec
adc
stos
popf
jl
ret
das
xchg
lea
popl
xchg
test
bound
inc
mov
ret
push
and
xor
fnstenv
inc
adc
lcall
jmp
cmc
mov
mov
jp
iret
pop
cmpl
or
loopne
jge
std
shrl
cmp
je
mov
mov
push
sbb
test
orb
pop
mov
negb
xor
pop
aad
and
adc
movsb
std
add
xchg
int3
push
adc
xor
or
push
idiv
pop
pushf
or
ss
inc
mov
or
xchg
lahf
arpl
dec
or
xor
mov
lock
lcall
xor
push
insl
lret
aam
leave
or
lret
xchg
xchg
add
lds
push
adcl
fsubs
das
mov
push
jmp
clc
or
push
mov
sahf
xor
sub
movsl
sub
push
in
ret
or
gs
les
ficompl
xchg
test
rcll
call
mov
add
out
mov
sub
mov
push
dec
xchg
bound
idivl
mov
cmp
cltd
sbb
stc
cmc
test
inc
sbb
push
icebp
inc
aas
or
cmp
inc
dec
mov
pusha
ljmp
mov
int
add
sbb
icebp
in
test
mov
jmp
push
xor
or
incb
push
jge
sbb
mov
sub
jge
xchg
nop
and
cmpsl
push
rcrl
out
inc
push
stos
adc
repnz
adc
es
push
fdivs
mov
adc
popl
sub
fwait
je,pn
sbb
add
insb
aam
or
pop
pop
inc
dec
push
sbb
mov
movsb
test
jns
jle
xchg
fidivrl
fsubl
aaa
or
dec
js
xor
andl
out
pop
call
mov
add
inc
xchg
mov
cmp
divl
add
aam
xchg
arpl
add
jge
push
fcompl
jecxz
mov
mov
dec
stos
ds
lea
pop
adc
jo
push
sbb
mov
movsb
add
push
or
sub
sbb
je
inc
xchg
and
cld
je
adc
js
mov
xor
aam
jle
inc
scas
xchg
js
dec
pop
stc
jl
adc
repnz
mov
pushf
sbbb
mov
sub
xchg
test
jl
jb
ret
and
cmp
fldl
or
or
push
xchg
inc
inc
jg
inc
sub
testb
xchg
insl
ret
addb
cmp
xor
test
loopne
add
and
jae
push
bound
std
mov
jp
lock
add
hlt
dec
in
and
daa
dec
xor
jns
inc
add
loop
jle
sub
rcll
adc
lahf
lock
push
dec
inc
push
cld
lea
fwait
and
mov
inc
into
negb
pop
lds
fadds
mov
sbb
in
rclb
sub
icebp
aad
in
adc
repnz
sbb
jmp
aad
adc
pop
addl
data16
mov
dec
add
mov
int3
nop
fisubs
cmc
or
sub
inc
jnp
enter
sarl
pop
push
dec
jl
mov
sarb
loop
mov
lret
ds
cli
cltd
dec
hlt
mov
pop
test
ret
mov
jecxz
xchg
or
aas
lods
js
jl
pop
cmc
test
inc
fmul
das
cmpsl
test
ljmp
mov
push
rcll
lret
call
jmp
ja
dec
add
stos
and
push
jl
mov
testl
cmp
shlb
xchg
cmp
imulb
xchg
xchg
push
xor
dec
or
dec
sub
cmp
xor
push
gs
adc
call
push
add
lds
pop
jle
jnp
ds
sbb
adc
add
mov
dec
lahf
js
outsb
fldcw
ss
jo
jle
fsubr
jmp
inc
inc
push
sub
sbb
push
aam
cli
jne
pop
imul
ss
cmpl
or
adc
cmp
sbb
scas
flds
jns
aam
push
fwait
add
loopne
in
movsb
addr16
pop
sarl
test
pop
icebp
mov
push
cmp
shll
inc
cltd
rolb
fistl
jae
xlat
pop
icebp
sub
xor
test
xchg
movsl
aad
lods
mov
xor
clc
sub
mov
xor
mov
cs
loopne
add
sbb
clc
js
nop
mov
add
pop
and
sbb
xor
std
or
aas
adc
mov
inc
lcall
push
mov
push
dec
mov
test
in
pop
mov
test
xor
mov
lock
out
or
dec
mov
sbb
pop
inc
sub
xchg
adc
fincstp
mov
xchg
pop
cmc
adc
xchg
mov
mov
dec
add
mov
dec
inc
cmp
ds
push
xchg
in
pop
pop
ljmp
dec
pop
repz
xor
das
ds
cwtl
push
inc
cmp
xchg
mov
call
in
leave
std
arpl
test
daa
jle
xchg
testl
mov
lods
or
dec
and
out
test
add
xchg
inc
sbb
in
jmp
and
pop
jle
cs
test
pop
addr16
mov
in
pop
add
adc
pop
ljmp
cmpsl
mov
out
cmp
popa
mov
push
popf
shl
imulb
dec
lret
add
add
pop
in
jae
jns
cmp
sub
inc
int3
and
lret
in
test
dec
mov
icebp
ja
push
ret
xchg
stos
andb
mov
inc
mov
testl
add
lock
mov
add
mov
jecxz
xchg
mov
sub
adc
or
mov
testb
es
and
je
inc
cmp
pushf
jle
xchg
inc
jmp
pop
inc
xchg
jo
stos
sarl
pop
xor
mov
mov
sub
dec
pushf
push
stc
sti
nop
ss
mov
loopne
mov
jno
xchg
pop
cmp
bnd
pop
push
and
ljmp
inc
pop
cltd
add
mov
and
mov
push
loope
shr
inc
pop
mov
xchg
push
into
mov
inc
sub
jno
or
mov
and
loop
pop
adc
mov
mov
enter
ds
xchg
cmc
push
cmc
or
push
and
lds
add
jns
and
and
hlt
sbb
sbb
test
cmp
and
jo
movsb
and
and
pop
fstl
pop
xor
push
lock
loope
pushf
not
dec
inc
or
cld
call
repnz
or
mov
ret
loope
inc
sarb
add
cmpsl
jo
inc
popa
icebp
fs
dec
aad
mov
pop
in
inc
push
cmpsb
xchg
dec
sub
ret
xchg
sbb
jae
comiss
fs
xor
cmp
pop
inc
fildl
cli
outsl
jg
ret
daa
adc
lods
iret
mov
add
testb
adc
push
dec
dec
and
insb
jne
lock
push
dec
cs
pop
icebp
and
aad
rcrb
ss
loop
rcll
xchg
dec
out
xor
xorl
push
outsb
cmp
std
cmp
push
clc
sub
jle
arpl
and
rol
cwtl
jne
xor
rcl
push
mov
pop
lods
loopne
test
mov
pop
lret
xorb
mov
jl
jl
sti
mov
or
pop
or
cs
pop
lds
xor
xor
pop
pop
into
ss
js
test
xor
andb
lea
loopne
lcall
movsb
pop
fwait
leave
push
dec
mov
sbb
lea
fwait
movb
and
cmp
movsl
xchg
push
and
mov
scas
pusha
gs
ljmp
lcall
sbb
adcb
clc
jp
iret
and
sbb
clc
loop
movsl
call
xchg
cmpsb
fstl
stos
xor
push
or
cmp
sub
scas
and
inc
cmp
pusha
jecxz
or
mov
inc
orb
dec
js
xchg
lret
dec
cltd
pushf
mov
in
fxam
and
cmp
mov
adc
sub
and
dec
cmc
dec
movsb
ss
push
jge
movsl
add
int
jne
sbb
jp
pop
int
mov
icebp
jecxz
mov
lcall
arpl
pop
mov
adc
fs
aam
push
add
push
rclb
add
mov
xlat
cwtl
pop
jecxz
or
and
sub
dec
mov
loope
mov
cli
cmp
push
imul
ljmp
arpl
in
mov
lds
pop
jp
cmp
mull
sbb
pop
cltd
call
loopne
subb
inc
pop
or
dec
mov
pop
stos
scas
mov
mov
popa
cmp
xor
pushf
push
jg
loop
popf
js
dec
and
sbb
mov
jmp
push
dec
or
bound
or
xor
jb
orl
out
xchg
mov
jbe
mov
mov
call
movsb
das
aam
adc
cmp
cli
push
test
push
mov
and
xchg
aam
sub
fidivrl
push
pop
pushf
mov
and
gs
imul
js
movsb
cmpsl
popf
push
test
jmp
pop
dec
mov
das
jmp
repz
mov
or
rorb
and
loopne
and
imul
adc
mov
lods
mov
add
mov
ss
cli
sbb
rcrl
jl
dec
push
push
jo
insl
arpl
xor
out
bound
into
adc
stc
sbb
xchg
notl
mulb
popa
loop
insb
in
imul
je
leave
push
jmp
insb
inc
gs
push
push
lods
adc
out
dec
movsl
mov
and
icebp
sahf
andb
or
sub
pusha
in
add
sub
add
xor
mov
xchg
fwait
inc
mov
std
or
xor
dec
movsb
mov
popf
fidivrs
pop
int3
daa
enter
inc
pop
or
enter
popl
subl
sti
sbb
ret
sahf
push
mov
push
jg
jl
xchg
rclb
lcall
mov
jb
xorl
nop
and
jb
aad
ds
pop
jbe
or
adc
insl
cwtl
add
push
push
sbb
data16
mov
jno
ret
fidivrs
in
pop
sub
fiadds
nop
sub
inc
push
and
imulb
jecxz
daa
lahf
cltd
sbb
pop
in
add
add
fcoms
call
subb
sub
mov
std
mov
fidivrs
bound
test
sar
and
and
mov
enter
orl
xor
addr16
and
and
leave
sbbl
push
mov
stos
shr
rcll
push
pusha
push
lahf
jle
inc
orl
add
test
push
popa
les
fs
inc
testb
pop
inc
sti
mov
mov
or
mov
pop
xor
ds
lret
shll
cmc
pushl
mov
sar
add
inc
inc
ljmp
es
das
aaa
or
loope
cmp
or
fdiv
jmp
in
mov
pop
popf
pop
and
push
and
lods
fidivs
clc
stos
divb
mov
add
clc
jp
or
jecxz
jo
and
jmp
std
add
jmp
and
jnp
popa
insl
test
in
shrl
subb
inc
mov
int
mov
inc
fcoms
dec
popf
stos
addl
fistpll
addl
xchg
jmp
xchg
loop
or
nop
mov
or
push
pop
sbb
call
xchg
fs
subl
fisubrl
test
xor
fwait
add
and
gs
sbb
xor
mov
scas
pop
fidivl
pop
push
fs
jnp
cmp
imul
pop
mov
popa
xchg
push
cwtl
cltd
or
leave
cmp
popa
sub
inc
cmp
inc
add
cmp
leave
mov
or
inc
sbb
pop
aas
daa
data16
divl
pop
or
ficoml
jno
dec
icebp
mov
nop
add
inc
mov
aam
roll
add
popf
add
gs
push
mov
push
add
jbe
jb
xor
cmp
cwtl
lret
mov
xor
pop
push
jbe
inc
mov
and
mov
lret
int3
daa
push
dec
stos
mov
pushf
jp
cmp
imul
mov
insb
pop
es
mov
das
dec
jmp
mov
cmp
andl
mov
inc
inc
repz
add
sbb
icebp
and
das
fiadds
jg
clc
les
push
xorl
and
es
xchg
scas
addr16
lds
mov
inc
js
outsl
addr16
push
out
into
fisubrl
mov
push
cmp
xchg
or
shll
add
dec
cs
sub
jmp
bound
into
sbb
pushf
mov
xchg
std
sub
data16
daa
nop
sbb
lcall
je
pop
and
arpl
or
jbe
ret
mov
fcoms
fistpll
mov
xchg
xlat
dec
ret
ret
dec
push
lds
fdivrp
aas
dec
shrl
dec
pop
mov
push
inc
sub
nop
xchg
sbb
add
add
fbld
mov
lock
xchg
int3
repz
ss
add
ret
jge
or
popa
andb
aam
mov
mov
mov
adc
dec
addr16
xchg
push
test
or
add
mov
test
sti
pop
sub
nop
leave
arpl
mov
sbb
in
or
dec
mov
cmp
xchg
mov
pop
cs
pop
orl
ss
mov
mov
mov
in
out
imull
cld
cmp
add
rcrl
fldl
cwtl
divb
je
shl
sbb
test
add
incl
pop
mov
mov
ss
adc
fwait
push
pushf
ret
xor
dec
inc
stos
mov
cli
xchg
sub
mov
sbb
imul
dec
inc
mov
mov
andb
enter
cmp
sahf
icebp
scas
or
dec
add
inc
or
push
bound
mov
ret
jnp
lods
sbb
mov
in
cmp
mov
and
shr
adc
dec
pop
cwtl
and
dec
xchg
xor
lock
jge
mov
or
inc
sbb
insl
into
inc
scas
in
ret
pop
rcrb
push
jne
mov
in
rorl
pop
clc
pop
inc
fcomi
mov
or
push
cwtl
les
jo
sbb
push
push
jmp
subb
sub
cwtl
jne
movsb
sbb
jecxz
jge
je
jle
mov
data16
cltd
js
add
push
xchg
xadd
pop
repnz
pop
fsqrt
and
xor
jo
push
xchg
add
inc
sbb
scas
dec
je
sbb
cmc
inc
sbb
movsl
dec
mov
lea
inc
sub
sahf
inc
bnd
fs
mov
jp
into
loopne
popa
cs
xor
cli
xlat
sub
js
push
sti
addr16
push
mov
jle
sarl
cmp
fistpll
and
sbb
sub
mov
push
outsl
mov
arpl
push
test
cmc
xlat
movsb
dec
mov
addr16
lds
mov
lret
icebp
jae
imull
fisttpl
or
daa
push
jno
daa
xlat
push
mov
mov
icebp
or
ds
inc
or
pop
xlat
inc
into
std
clc
lock
das
repnz
out
dec
data16
mov
les
stc
lds
shlb
test
mov
lods
int3
push
mov
cmp
out
mov
pop
push
mov
stos
mov
and
adc
and
icebp
sub
je
icebp
adc
lret
jmp
pop
or
iret
shlb
sar
lahf
pop
cmp
mov
jno
inc
or
jle
into
dec
inc
mov
sbb
test
dec
push
int
push
or
sub
mov
xchg
test
xchg
sar
push
push
xor
jle
adc
push
fs
adc
call
cmp
cmc
xor
cmp
xchg
clc
sub
xchg
add
xor
adc
mov
ficoml
or
test
push
add
repnz
jle
mov
and
mov
and
repz
shrl
dec
scas
outsb
inc
mov
mov
fsubs
sub
xchg
loop
mov
fwait
bound
push
arpl
xchg
dec
js
dec
stos
pusha
jno
cmpsb
sub
jo
in
pop
adc
mov
dec
js
adcl
enter
outsl
f2xm1
pop
in
sbb
lock
inc
mov
dec
mov
sbb
push
jp
mov
ljmp
dec
shlb
cmp
cli
xor
inc
xchg
cmp
sbb
push
scas
lea
jmp
push
insb
pop
test
lds
stos
mov
push
bound
mov
jne
lcall
iret
in
cmp
in
pop
sub
inc
jecxz
aad
test
sbb
inc
dec
in
aaa
push
decb
fldcw
je
push
mov
adc
pop
pusha
test
lds
xor
scas
inc
repz
add
sbb
xchg
jbe
mov
pop
jmp
lahf
adc
popf
mov
sti
test
shlb
sub
imul
out
jb
jp
inc
in
add
rcrl
or
mov
xorl
int
jg
pop
test
add
data16
das
pop
int3
and
mov
inc
jne
mov
repz
or
mov
sub
mov
jmp
sbb
pop
cmp
cmpsb
add
pop
ret
data16
fs
jmp
mov
inc
dec
aaa
and
rcrl
ljmp
fsubrs
outsl
inc
and
dec
test
pop
mov
lea
mov
mov
mov
and
jle
jbe
push
cmpb
mov
imul
popf
stc
and
sbb
pop
or
test
fsubrs
sub
mov
adcl
cli
aam
mov
in
add
and
sti
sbb
arpl
push
xor
and
icebp
mov
mov
das
jle
rorl
push
les
adc
jbe
inc
mov
ds
dec
add
das
mov
pop
int
lea
cmpsl
add
jl
mov
mov
test
pop
cmp
mov
sub
sub
pusha
adc
sbb
xchg
mov
jo
scas
jmp
pop
sub
cltd
sbb
add
inc
jae
fwait
or
add
popa
mov
cmp
xor
mov
pop
mov
cs
inc
dec
push
and
cli
dec
xchg
cmc
or
sarl
pop
cmpsb
fwait
pop
xchg
push
cltd
pop
xchg
pusha
dec
jmp
pop
jecxz
pop
push
cld
jmp
adc
xchg
jecxz
add
sarl
in
lock
sbb
ds
arpl
dec
or
push
adc
or
adc
xorl
imul
jo
inc
rcrl
fs
nop
pushf
inc
sbb
mov
in
ficomps
arpl
push
sub
sbb
inc
jnp
pop
mov
pop
inc
das
fsubr
push
lahf
loopne
fildl
or
popa
inc
fs
mov
jne
pop
sub
mov
icebp
shrb
cld
mov
ja
jns
mov
lock
mov
mov
mov
lods
iret
ss
outsb
or
test
insl
pop
pusha
jecxz
sbb
add
rcrl
mov
push
lods
sbbb
fnsave
mov
leave
mov
mov
imul
mov
jo
mov
lods
xchg
push
mov
cmpsl
fstpt
jbe
mov
inc
sub
jmp
les
cmp
sub
cmpl
and
lods
pop
movsb
cmp
cmp
mov
movsb
pop
daa
cmpsl
push
es
or
icebp
mov
sahf
fdivs
mov
movsb
lret
dec
inc
mov
mov
int3
movsl
mov
dec
gs
out
xor
sahf
outsl
les
sbb
cltd
cmp
lea
sbb
cmp
mov
rolb
sbb
dec
xor
subb
ret
hlt
cld
scas
dec
inc
adcl
dec
mov
nopl
aad
mov
add
add
mov
mov
fs
outsb
iret
iret
jecxz
pop
cmc
and
addl
icebp
pop
out
jg
popa
shl
stos
mov
adc
in
jnp
fcomps
lock
add
push
int
mov
ret
adc
xor
pushf
and
and
int
push
cmp
bound
inc
sbb
addr16
aam
js
lods
cmp
rcrb
sbbl
cmp
scas
cmpl
jge
push
loopne
loopne
jg
pop
xor
xor
inc
push
dec
push
pop
insb
out
adc
addl
daa
add
mov
cli
lods
in
cmp
jo
daa
fidivrl
fstl
jns
insb
cmpsb
dec
inc
scas
scas
jnp
loopne
stos
inc
jb
push
sarw
test
mov
movsb
icebp
mov
imul
in
aas
daa
in
movaps
adcb
inc
dec
inc
push
push
sbb
jns
mov
imul
jp
sub
xchg
outsb
in
xchg
sbb
pop
pop
clc
jmp
rolb
sub
sub
add
or
fcoml
jl
jp
ja
and
repnz
pop
js
andb
jecxz
xor
sar
call
movsb
dec
rclb
lea
add
jbe
add
std
icebp
repnz
xchg
in
loope
loope
nop
xchg
and
adc
pushf
cmp
add
mov
dec
ss
and
jge
adc
call
in
mov
xchg
out
shll
imul
jle
adc
cmp
loop
push
sub
jecxz
arpl
push
jl
cmp
push
sbb
inc
aas
mov
cli
fs
jnp
aaa
sahf
mov
stos
mov
cmpsl
pop
dec
mov
dec
inc
test
mov
movsb
or
in
xlat
lods
aas
int
pop
jne
xchg
fsubs
test
adc
in
in
mov
sub
mov
insl
cmc
cmp
jp
xor
fimull
iret
arpl
cmp
or
jmp
mov
inc
jb
flds
xor
jle
dec
and
cmp
nop
cmp
push
sbb
aaa
cwtl
or
adc
das
jle
dec
or
fadds
ret
out
imul
mov
fnstsw
addr16
or
stos
pop
scas
or
das
shl
int
leave
cmp
push
arpl
sbb
pusha
loope
fsubp
pop
dec
cmp
pusha
rcrl
xchg
dec
and
daa
pushf
mov
andb
mov
movl
popf
push
jno
in
xlat
hlt
mov
popa
addb
jge
in
pop
imul
sarb
cwtl
or
inc
stc
mov
or
dec
and
push
push
jne
mov
sahf
aaa
icebp
not
xchg
lea
in
adc
icebp
add
shll
icebp
test
cmpsb
push
ret
sub
or
jnp
push
stos
push
mov
xchg
mov
shrl
mov
out
das
pusha
int3
sub
scas
add
jecxz
adc
push
imul
sarl
add
xchg
jo
cld
or
or
orl
jbe
outsl
sbb
dec
adc
push
fnsave
and
mov
mov
mov
push
add
daa
mov
jns
ljmp
loopne
arpl
sub
cmp
add
adc
lcall
sub
jno
xor
mov
or
shl
dec
xor
pop
inc
sub
arpl
adc
dec
sbb
cmp
sbb
insl
scas
movsl
jmp
lcall
and
std
adc
in
enter
addb
pop
mov
dec
jge
jne
xlat
lock
dec
and
mov
fldlg2
mov
pop
sbb
iret
mov
mov
sub
xor
ret
test
cld
cld
jmp
lea
jecxz
insl
lcall
fwait
nop
dec
inc
or
mov
fcmovu
movsl
sbb
fsubrs
dec
dec
cltd
dec
dec
pop
pop
loope
mov
cmc
ret
adc
mov
bound
je
sbbl
inc
popa
pop
pop
fwait
dec
add
out
mov
push
je
push
je
mov
mov
cmp
daa
pop
out
xchg
dec
xchg
and
sbb
les
lea
adc
mov
xchg
std
andl
pop
cmp
mov
mov
mov
test
adc
ret
lcall
sbb
arpl
push
or
cmpsb
and
mov
pop
cmpsl
or
cltd
les
pop
insb
xchg
faddl
xchg
inc
add
lds
fstps
mov
pushl
andb
repnz
loop
stos
inc
dec
fistps
xchg
sbb
pushf
nop
and
bound
stos
subl
push
call
mov
add
sbb
and
ss
cmp
cmp
movsb
movsl
sbb
shrl
sub
mov
xor
mov
and
test
mov
inc
out
mov
outsb
movsl
or
and
push
sahf
add
mov
sbb
sub
addl
xorl
sub
int3
sub
movsl
mov
xchg
popf
adc
dec
dec
aam
cs
ss
pop
mov
mov
test
xor
mov
leave
mov
lahf
cld
mov
scas
mov
jnp
xor
shlb
pusha
aaa
jb
add
jnp
fstpt
adc
sahf
out
push
add
xor
test
hlt
arpl
push
pop
roll
lret
popa
jle
rol
cmp
push
or
into
icebp
popa
imul
test
mov
pop
lret
scas
int
cmc
jo
sub
and
pop
jo
adc
lds
mov
jle
mov
js
pop
dec
mov
lret
and
xchg
mov
mov
cmp
push
xor
push
test
xchg
leave
imul
aaa
loopne
icebp
push
xor
repnz
add
lock
mov
je
pop
js
fldcw
jne
aaa
adc
cld
fdivr
sbb
mov
ss
push
mov
xchg
inc
pop
pop
pop
jge
sub
inc
mov
mov
jp
or
mov
loop
adc
or
outsb
dec
dec
fwait
dec
dec
bound
and
dec
inc
jbe
hlt
in
inc
pop
mov
sti
jp
jecxz
pop
loope
pop
or
lds
inc
addr16
imul
stos
in
mov
test
ja
mov
outsb
cmp
push
das
dec
loope,pn
sbb
outsl
and
xchg
dec
xchg
add
in
adc
or
ss
jb
aas
jle
inc
icebp
sbbb
shlb
inc
and
das
push
insl
mov
adc
xchg
or
push
jp
insb
adc
outsl
push
cwtl
cs
cmc
ret
in
cmp
test
sbb
pop
pusha
sbb
repnz
stos
push
lahf
push
fs
mov
test
or
mov
dec
or
pop
mov
lret
xchg
repnz
jmp
stos
cmp
aad
jmp
test
adc
je
xchg
loop
adc
leave
jo
push
xchg
xchg
sub
ds
dec
notb
sbb
jnp
mov
and
fs
adc
jmp
inc
add
push
cwtl
xlat
add
gs
inc
stc
lock
push
cld
xorl
jge
jmp
int
mov
icebp
jno
push
test
jp
icebp
push
sub
xorb
jl
sbb
cwtl
push
shll
mov
sbb
iret
push
jbe
les
push
mov
jl
cld
dec
roll
push
in
push
mov
mov
incl
inc
inc
adc
lahf
xor
sub
sub
sub
mov
mov
and
std
outsb
negb
into
addr16
andl
sbb
pusha
icebp
sub
adcl
je
adc
and
push
pop
int
insb
hlt
push
lock
cmpsb
in
les
pop
ss
mov
mov
xchg
aaa
push
cld
cmp
xor
xor
inc
and
push
mov
pop
cs
lea
or
ror
enter
inc
je
sbb
ljmp
in
add
sub
je
insb
jmp
sbb
jecxz
pop
xchg
jno
addr16
dec
ret
mov
fimull
repz
arpl
and
pop
mov
test
mov
sti
mov
and
xlat
mov
pop
int3
or
xchg
call
push
or
jmp
and
dec
adc
sbb
aas
sbb
pop
dec
insb
sub
std
ljmp
pop
mov
and
lcall
push
mov
daa
test
mov
rol
or
std
mov
mov
jno
stos
jnp
loope
icebp
mov
fwait
inc
xor
sbb
mov
ss
or
fistps
lea
mov
adc
jecxz
or
jl
in
jp
pop
inc
cmp
and
mov
push
test
into
mov
inc
in
mov
push
or
es
rorb
in
mov
add
loop
rolb
jo
push
movb
add
cmp
inc
and
mov
sbb
movsb
jae
xchg
clc
rcr
mov
cli
jl
mov
xlat
pop
cmp
pop
dec
lcall
jnp
sub
or
popf
fisubl
ret
or
mov
pusha
popf
pop
sbb
loop
clc
fs
aad
mov
or
arpl
jmp
mov
xor
jno
fimull
sbb
cmp
mov
xlat
out
enter
pop
fcoml
xchg
pop
insl
jp
fs
shll
xlat
in
jp
ss
sbb
fildl
xor
cltd
inc
hlt
jle
mov
inc
mov
xchg
gs
push
inc
cmpsb
insl
stos
jl
push
ret
lods
popa
mov
xchg
xchg
and
mov
lock
sub
mov
mov
inc
pop
aas
push
or
stos
push
idivl
inc
subb
pop
imul
pushf
add
dec
sbb
and
ds
push
and
cld
es
push
xchg
fucompp
test
pop
bound
or
inc
mov
mov
out
ror
lret
sbb
dec
lds
in
sub
dec
and
fwait
testb
enter
adc
repnz
dec
xchg
and
pop
push
sar
insb
ja
inc
pop
sbb
mov
test
iret
fsubrs
sbb
sbbw
or
jnp
int
sub
inc
notb
dec
test
pusha
or
cmp
add
mov
mov
or
mov
jno
and
das
jns
xchg
adc
loopne
flds
movb
in
adc
mov
cmp
sbb
daa
and
aaa
xchg
add
das
cmp
iret
pop
mov
aaa
push
mov
lcall
mov
jb
inc
cmp
xlat
loope
push
inc
and
dec
push
push
fistps
call
out
inc
int3
cwtl
aam
test
xchg
cmpsl
sbb
adc
les
and
or
cld
adc
and
imulb
rorl
jbe
sub
js
in
loope
pop
incl
in
mov
push
ret
imul
insl
mov
lds
mov
gs
lea
inc
jmp
inc
std
mov
push
es
ret
arpl
hlt
jecxz
icebp
lock
dec
out
and
cmp
cmp
loopne
jnp
lock
dec
stos
mov
roll
ljmp
sbb
mov
rorl
push
sub
insb
cs
mov
cmp
aam
movsb
dec
inc
js
fsubs
icebp
lock
jo
test
adc
ret
xchg
js
adc
pop
int3
fcmovbe
and
or
mov
jle
cmp
test
jecxz
lcall
cmp
sub
icebp
call
mov
dec
dec
loope
cs
arpl
or
push
loop
push
jecxz
jno
and
lea
cmpsb
and
xchg
cmp
fdivrs
rcrb
push
enter
mov
lret
cs
adc
cli
adc
cmp
std
jb
movsb
push
imul
lds
jmp
xchg
ror
lds
rcll
dec
sub
xchg
out
xor
aaa
add
in
xchg
jp
outsb
pop
pop
pop
cmpsl
pop
frndint
add
xchg
mov
xchg
sbb
jle
in
pop
and
adc
adc
ret
push
popa
pop
icebp
mov
mov
loope
jl
scas
cmp
jl
loope
dec
test
and
loope
inc
jbe
dec
js
fs
das
js
rclb
sub
sbb
inc
push
ficoml
mov
lods
adc
in
push
out
xchg
jb
loopne
sahf
sub
popa
fisttps
psrld
cmc
cld
inc
fwait
lahf
cmp
jo
add
push
mov
adc
icebp
shlb
clc
pop
inc
ljmp
adc
addr16
fs
mov
push
mov
aam
aas
and
or
jae
fcom
fsubrs
pop
scas
sti
test
sbb
lock
push
lret
aas
cmp
cmp
pop
and
mov
add
mov
jno
aam
dec
xor
cmp
pusha
add
sbb
in
mov
push
cpuid
loope
loop
push
push
xchg
fcompl
aam
pop
lods
adc
lods
enter
popa
xor
mov
jae
je
add
lcall
jae
leave
pop
dec
lock
shlb
fdivs
mov
pop
push
inc
jmp
lret
daa
scas
jmp
jl
mov
pop
pop
mov
ficompl
push
and
popa
jmp
mov
loopne
dec
stos
cwtl
add
mov
iret
aaa
sbb
data16
xchg
adc
in
push
jmp
push
clc
loopne
pop
sbb
xor
insl
ss
mov
das
mov
cld
lock
pushf
aad
int
xacquire
cmp
xor
rcl
inc
lock
je
sub
and
test
ja
jns
hlt
rcrl
mov
addr16
fwait
xor
and
add
jecxz
pop
loope
leave
adc
mov
aam
incl
mov
repz
inc
cmp
inc
daa
push
mov
popf
add
stc
insb
and
pop
imul
sub
cmc
test
lds
or
or
in
xor
es
push
or
sysexit
push
call
call
mov
inc
pop
mov
jecxz
dec
inc
jno
pop
in
push
cmp
dec
and
add
into
add
fcoms
mov
lock
and
mov
pop
adc
and
jno
fldl2e
cmpsb
mov
fwait
cmpb
sbb
mov
push
and
imul
cmp
punpckhwd
xor
into
sbb
sub
adc
leave
mov
inc
arpl
ficoms
inc
pop
jmp
inc
sub
out
or
and
jge
add
mov
push
iret
cmp
mov
dec
inc
mov
adc
add
pop
mov
adc
xchg
int
push
or
rcrl
addl
sbb
rcl
mov
orl
inc
adc
dec
ja
stos
push
nop
dec
adc
pop
test
dec
xchg
fiaddl
pop
clc
test
sbb
hlt
decl
dec
and
popf
and
inc
pop
jg
sti
aas
xor
ds
pop
arpl
lcall
outsl
mov
sub
cmpl
inc
and
inc
int
out
iret
gs
gs
incl
jmp
and
xor
mov
leave
das
or
mov
out
sub
sbb
rclb
cmpsb
in
add
movsl
or
or
dec
shll
call
in
push
xchg
lahf
out
jo
js
aad
pop
addr16
jge
or
iret
xchg
subl
mov
add
cli
sub
xor
mov
jnp
daa
sbb
push
out
sbb
xor
adc
pop
adc
mov
push
fstl
dec
xor
push
ror
jmp
das
mov
popf
adc
stos
cmc
ret
sub
inc
enter
jo
cmc
push
inc
sar
dec
punpckhwd
daa
sbb
xorl
xchg
les
inc
fnstsw
test
or
pop
jge
into
fsqrt
mov
jmp
cltd
mov
movsb
fsubl
icebp
lret
lock
js
or
xor
cmp
or
push
xchg
nop
mov
sub
test
test
inc
in
inc
jg
adc
dec
inc
push
mov
std
dec
enter
cld
es
fbstp
insb
cli
pop
lds
in
pop
cmp
xchg
push
scas
adc
and
mov
push
repz
mov
fcomp
lds
lea
xlat
fisubrs
add
test
add
and
jge
fildll
jne
jle
ja
adc
in
adc
imul
repnz
test
insl
push
pop
ficoml
pop
mov
cs
sub
or
xchg
xchg
push
movsb
push
mov
adc
cmc
mov
pushf
mov
leave
and
roll
add
iret
xchg
cwtl
jle
rcr
jb
adc
movsb
xchg
sub
insb
aas
push
movsl
pop
or
sti
push
rcr
dec
pop
dec
and
je
scas
inc
xchg
mov
and
xchg
sbb
push
sub
lock
push
inc
cld
mov
adc
js
insb
insb
dec
popa
push
inc
xlat
fidivl
insl
push
jbe
add
clc
shlb
pop
ret
fsubl
push
stos
cmpsl
mov
gs
xchg
aam
push
data16
xchg
lods
ljmp
jno
sbb
rcl
xor
mov
shrl
inc
ja
sub
add
adc
jmp
call
js
outsl
adc
xchg
xchg
mov
xchg
xor
push
xchg
inc
int
popf
inc
cmpsl
and
mov
and
outsl
jno
sub
cmp
and
repz
cwtl
mov
ss
jle
dec
rcrl
push
movsb
arpl
and
pop
lret
div
test
xor
xor
or
pop
lea
inc
ret
pop
imul
iret
adc
add
arpl
loope
sti
pusha
and
pusha
aaa
and
cmp
xchg
aaa
pop
sti
or
xchg
aaa
push
ljmp
add
test
cli
xor
popa
jbe
popa
test
lds
or
adc
fmul
pop
sub
add
std
pusha
mov
iret
in
mov
mov
sub
ret
mov
ljmp
pop
dec
ret
addr16
mov
frstor
add
pusha
inc
sbb
inc
mov
into
enter
mov
mov
sbb
inc
xchg
and
and
and
or
inc
fisttpll
nop
jnp
ds
push
sub
daa
sub
mov
mov
rolb
jmp
ja
push
mov
or
cmpsb
orl
aas
shrb
rclb
rcrl
aam
inc
loop
mull
stos
sub
std
cmp
jbe
push
push
jae
cli
jno
es
jle
rcll
push
or
test
sbb
adc
inc
mov
push
jae
mov
mov
pop
xlat
dec
aas
aad
lods
and
jae
xlat
xor
cmp
outsl
lret
inc
add
je
xchg
push
pushf
ffreep
or
sbb
push
mov
mov
add
dec
xor
pop
or
push
movl
nop
jg
cmp
xchg
jno
fdivrl
stos
adc
pop
push
jl
mov
and
out
int
xchg
jae
jge
jnp
adc
cmpsb
test
add
adcl
outsb
shr
aad
sarb
mov
stos
inc
mov
rolb
dec
jnp
insb
add
imul
fisubrl
xchg
push
cmp
jp
xor
shll
sub
icebp
jl
pop
dec
lds
pop
mov
pop
das
addl
ljmp
jo
hlt
lods
xor
mov
shlb
add
loop
shll
jno
mov
aaa
mov
xchg
adc
jns
test
mov
call
xchg
or
mov
and
sarb
inc
pop
and
ljmp
mov
in
mov
pushf
hlt
mov
mov
into
mov
mov
pop
inc
inc
xchg
xorb
fisubrs
pop
lret
testl
xlat
inc
dec
jns
clc
add
inc
cmpsl
xor
xchg
dec
repz
add
mov
add
fsubl
jmp
mov
dec
sahf
sbbl
lods
cmpsl
dec
insb
aas
test
mov
mov
jo
xor
sbb
sbb
fcomp
mov
cmp
xor
add
jo
cltd
stos
inc
aad
adc
rorb
ds
push
and
push
test
and
xor
mov
cmpsb
rolb
lret
dec
in
and
mov
add
mov
imul
out
dec
aam
dec
xchg
shrl
test
aaa
and
sbb
push
push
sbb
scas
sub
xor
dec
rclb
aad
lock
jne
daa
inc
loopne
or
pusha
testl
adc
pop
mov
xchg
or
push
dec
pop
jne
pop
bound
adc
and
rolb
into
test
jecxz
scas
lods
dec
cmp
or
jnp
mov
fbstp
cltd
mov
mov
adc
cld
repnz
and
insl
pop
in
out
mov
cmpsb
push
stc
test
imul
call
imul
add
inc
mov
jo
mov
jle
fnstenv
xchg
call
jae
es
xchg
nop
mov
or
xor
sbb
inc
sub
fincstp
cli
push
sbb
pop
test
cltd
jle
dec
ret
xorb
push
shlb
mov
movsl
ja
js
xor
xor
les
mov
in
xchg
xor
daa
sbb
jmp
push
sbb
pusha
test
lahf
into
loopne
bound
and
std
mov
lcall
lds
or
insb
clc
adc
out
or
add
xor
fidivl
sub
jnp
hlt
dec
xchg
xchg
cmpsl
popa
or
cmp
mov
sbb
mov
mov
mov
mov
jnp
xchg
into
rcrb
xor
sbb
sbb
enter
pop
js
jo
nop
and
add
sbb
cwtl
and
int
lcall
jne
push
pushf
inc
imul
cmp
ljmp
ret
fsts
ds
ja
fstps
int
insb
jg
push
dec
call
outsl
mov
and
adc
loope
dec
xor
subb
jmp
sbb
ret
dec
mov
insb
leave
fs
add
xchg
test
cmp
stos
cwtl
lret
dec
out
dec
push
inc
dec
int
stos
dec
repnz
fistl
movsl
mov
fisttps
aas
sbb
push
push
push
adc
fcmove
and
cli
cmp
repz
loopne
mov
dec
or
add
fdivrl
cld
cs
pop
dec
bound
je
inc
dec
jbe
dec
pop
loopne
je
and
jmp
add
sbb
sbb
loop
mov
jp
jbe
cmc
sahf
repz
rorl
or
bsf
mov
sub
int3
cmp
jns
imul
loopne
cmp
clc
outsl
addr16
das
push
xor
and
fsubs
xor
leave
sbb
pop
rorl
jne
div
dec
sub
xor
data16
ja
repz
xchg
mov
aam
movlps
pop
pop
nop
insb
jecxz
fcmove
icebp
popf
xchg
push
cltd
fisubrs
jae
je
cmp
dec
iret
int3
or
dec
mov
stos
std
add
xor
lret
mov
mov
xchg
scas
jae
nop
std
mov
jecxz
xor
shll
jl
add
push
inc
fwait
stos
lcall
or
add
inc
pop
push
sahf
inc
andb
arpl
push
ljmp
adc
jae
inc
dec
pop
pop
loopne
cmp
cmp
aaa
add
jecxz
sbb
fmul
jp
or
push
push
dec
sub
xorb
fnstcw
loope
sbb
bound
aam
jge
stos
jns
pop
mov
arpl
loope
cs
cmp
orl
xchg
add
push
mov
adcb
hlt
mov
aam
and
adc
arpl
dec
add
fists
mov
inc
stos
mov
jle
adc
inc
outsb
sub
inc
pop
push
jecxz
rcr
cmp
cmp
movl
jecxz
sbb
and
xchg
cmpl
pop
xor
sahf
scas
xor
test
jbe
nop
xchg
mov
mov
or
sbb
cltd
sub
mov
in
jle
mov
add
aam
mov
adc
pop
xchg
mov
mov
and
mov
data16
xor
movups
outsl
or
sbb
shr
push
sub
test
sbb
test
fidivrs
in
mov
mov
lock
push
lcall
ljmp
dec
adc
push
dec
sbb
mov
aam
xchg
movsb
pop
nop
bound
jecxz
jmp
push
enter
in
push
aaa
pop
cmpsb
and
and
cmp
icebp
pushl
and
adcb
xchg
test
sahf
pop
js
pushf
cmp
xchg
or
loopne
fwait
shlb
mov
and
repz
pop
cmp
push
pop
lds
mov
aad
imul
pop
inc
or
jl
adc
idivl
xor
xchg
pop
ss
decl
push
xchg
sbb
jl
or
test
add
pop
cmc
push
mov
and
pushw
mov
cld
in
mov
push
mov
std
mov
lcall
sbb
jp
jecxz
movsb
repz
inc
rorl
push
push
mov
sti
add
jbe
mov
inc
clc
and
cmp
rol
dec
xchg
test
jl
sbb
mov
mov
sub
lahf
mov
inc
insl
mov
scas
jp
push
pop
sub
in
add
xchg
pop
xchg
xchg
pop
mov
test
push
jne
cli
sub
shrb
dec
loope
adc
pop
push
aad
addr16
push
aas
adcb
fwait
add
cmpsl
adc
adc
cmp
and
cmp
in
add
sub
inc
pop
ret
mov
xor
jl
xor
cmc
or
aad
jne
xchg
jne
cmp
js
sbb
jl
aad
mov
sbbl
lret
xchg
stc
sbb
clc
cmc
hlt
pop
push
mov
inc
loope,pt
loope
fisubl
notb
in
add
sbb
in
std
movsl
das
cmp
daa
je
push
clc
push
push
xlat
je,pn
jp
jmp
jp
testb
in
cli
mov
or
or
or
movsb
ss
sbb
stos
xchg
xor
iret
jno
into
sbb
ds
ficomps
mov
pop
stos
push
scas
out
jg
lret
in
popa
and
addr16
cwtl
and
pop
sbb
pop
push
lea
push
inc
imul
push
std
daa
les
bound
jns
cmp
jmp
loope
popf
push
cmp
push
lea
mov
mov
xor
jle
mov
xor
shl
xor
bound
aas
call
push
fsubp
cmp
mov
mov
pop
sbbl
nop
mov
pop
clc
mov
push
xchg
xchg
sbb
and
pop
mov
pop
mov
cmc
shl
mov
sbb
push
scas
pusha
loope
sbb
mov
pop
pop
pop
ljmp
mov
stc
rclb
inc
mov
push
ja
push
mov
addl
das
pusha
lock
shl
in
jge
mov
cmpsl
in
test
xorb
xchg
push
shll
shlb
test
daa
or
or
je
mov
stos
icebp
sub
mov
sub
xor
xchg
notl
mov
push
sub
or
dec
cmp
add
and
adc
adc
pop
scas
sarl
push
fmuls
bound
ds
arpl
addr16
data16
shll
jecxz
cmp
out
call
push
sub
adc
mov
arpl
daa
test
and
or
push
push
ss
enter
mov
test
mov
pop
je
repz
flds
cmp
cmp
sub
mov
movsl
movsl
and
lar
js
pop
mov
sub
insl
aaa
sub
test
out
jns
cltd
sbb
jge
pop
jne
inc
addl
arpl
insl
jno
test
cmp
and
pop
jge
fsubr
stos
and
pop
add
loopne
mull
add
mov
out
out
cmpl
loopne
xor
test
xlat
pop
sbb
sbb
mov
push
fsubr
nop
loopne
mov
jmp
jge
cmp
ja
mov
xchg
in
lock
push
inc
cmp
sbb
jo
cwtl
dec
adc
adc
lahf
push
adc
insb
mov
ja
int
adc
pop
pushf
int
ss
mov
stc
dec
xchg
imul
call
push
test
add
push
int
cmp
dec
inc
pop
jo
test
test
inc
mov
dec
and
bound
xchg
cmp
leave
sub
jle
movsb
or
aad
mov
pop
mov
sub
mov
in
jle
xor
in
jno
mov
mov
call
mov
mov
cmp
mov
or
ja
mulb
fwait
pop
adc
pop
push
adc
xchg
lea
loop
fwait
and
stc
pusha
sbb
mov
dec
inc
fwait
adc
mov
mov
push
inc
mov
pop
pop
dec
je
pop
icebp
mov
imul
outsb
lds
add
mov
orb
outsb
cltd
xchg
push
sub
cld
mov
shll
hlt
pop
mov
popf
pop
cmp
dec
fstpt
int
ficompl
int
or
in
lock
adc
aam
arpl
jo
bnd
mov
ss
sub
inc
sbb
add
jb
fdivl
dec
jo
out
jo
data16
mov
loop
mov
or
push
sahf
push
js
jge
mov
push
inc
or
lds
rcrb
jbe
shll
cld
pop
pop
cli
add
es
lahf
negl
test
xor
sub
sbb
cmpb
icebp
cmc
and
loopne
push
mov
in
mov
aas
mov
pop
sub
inc
push
jbe
lods
insl
into
mov
stos
push
jno
ljmp
jo
sub
cmp
out
insl
inc
jb
ds
mov
inc
adc
insb
adc
sub
xchg
lahf
shlb
adc
pop
inc
icebp
adc
dec
jge
mov
push
cmp
scas
roll
add
adc
jecxz
outsl
popf
and
jb
pop
mov
in
cmp
ljmp
and
fs
mov
pop
scas
or
in
arpl
dec
inc
or
movd
adc
aam
push
jle
cmp
or
mov
cmpb
lods
xor
je
pop
loope,pn
inc
hlt
insl
shll
mov
dec
push
xor
or
xchg
loope
add
fsubs
jne
cmp
cmp
lret
loop
pop
aaa
roll
mov
jge
add
aam
into
adc
mov
or
xchg
adc
cmc
and
dec
mov
in
push
push
test
jecxz
inc
ljmp
cmpsl
mov
jae
testb
jae
cs
mov
inc
jl
pop
mov
add
in
push
daa
es
popa
outsl
inc
das
add
xchg
rolb
jmp
out
cmc
jo
js
mov
push
ss
inc
jmp
cmp
shlb
outsl
loopne
ja
aam
pop
add
filds
push
sbb
inc
leave
mov
mov
adc
xor
lods
add
push
pop
or
jno
and
xor
cmp
fucomp
jl
call
std
xchg
add
and
xor
push
clc
adc
adc
test
adc
test
pop
in
aam
xor
lods
add
lcall
xchg
pop
outsb
insb
dec
add
packssdw
test
mov
xchg
xchg
int
lds
or
dec
lods
bt
push
mov
js
pop
je
inc
loopne
pop
negb
or
push
icebp
aaa
mov
test
cmp
inc
cmpsl
pop
sarb
jae
mov
push
ja
xor
cmp
pop
inc
ljmp
es
in
pop
icebp
xchg
outsb
sbb
pop
jo
xchg
pop
lahf
fs
sbb
clc
mov
mov
js
into
and
mov
ljmp
jge
shr
mov
negb
add
flds
mov
sbb
xchg
ljmp
je
pop
push
push
mov
into
ljmp
shufps
mov
incl
and
and
dec
and
pop
sbb
mov
das
or
rolb
xor
out
fwait
pop
in
jbe
mov
cwtl
inc
testl
in
repnz
cmc
loop
xor
mov
mov
adc
or
mov
fmull
sbb
mov
sahf
xor
inc
cmp
aad
pop
sbb
mov
std
jne
icebp
ret
sbb
int3
movb
pop
stos
ficompl
mov
fisubs
inc
add
mov
mov
cmp
sbb
xlat
cmc
pop
aad
test
adc
mov
jp
lds
dec
daa
cmp
ret
test
mov
sbb
lea
inc
insb
scas
std
sub
inc
push
and
mov
jbe
push
pushf
xchg
jmp
inc
dec
sub
inc
cmc
add
dec
xchg
in
das
xor
dec
adc
aam
loopne
into
sti
repz
das
sbb
cli
adc
int3
and
fidivl
mov
push
dec
pushf
xchg
xor
test
loopne
dec
inc
icebp
inc
or
jnp
cli
leave
push
jge
mov
popf
inc
push
ret
mov
int3
mov
movsb
test
mov
outsl
lea
stc
lcall
mov
shrb
ja
adc
or
add
sub
xchg
sbb
adc
pop
testl
sub
sbb
daa
push
inc
jle
xor
mov
add
mov
xchg
mov
aaa
pop
icebp
xchg
mov
and
push
push
sub
call
sbb
adc
xor
loopne
js
repz
add
mov
sbb
es
scas
icebp
dec
sbb
sbb
jmp
xor
popf
add
ret
mov
sar
imul
negb
jns
fimull
dec
push
jecxz
adc
dec
gs
outsb
jmp
clc
loopne
xor
enter
mov
add
pusha
js
shr
xor
mov
rorl
mov
fmull
pop
ds
inc
int
fisubs
pop
bound
insb
pop
cmpsb
enter
pop
bound
mull
cmp
adc
mov
hlt
rcrl
xor
cmp
sub
cmp
jp
jae
loopne
fidivrs
xchg
enter
das
dec
fidivrs
lods
jbe
movsl
jo
dec
insb
daa
outsl
in
out
rcrb
xchg
ds
pop
cli
mov
int
mov
inc
inc
xchg
xorl
dec
sbb
das
popf
pop
add
xchg
and
pop
js
js
and
or
or
pop
cmp
xchg
xor
rsqrtps
rolb
shll
repz
sub
pop
icebp
cmpsl
lahf
xor
clc
aas
mov
pop
fcoms
call
mov
ss
push
aas
psadbw
add
xchg
jo
insb
scas
mov
fdivs
mov
dec
xor
jl
fs
lds
in
jae
bound
outsl
ja
cwtl
jecxz
sub
mov
repnz
mov
ss
testl
jl
popf
push
dec
xor
fisubs
inc
int
bound
lods
js
test
arpl
test
mov
cmp
pop
sbbw
in
cmc
push
jle
stos
jmp
dec
mov
push
aas
fidivrs
xor
scas
shl
stc
fimuls
cmc
je
out
test
jl
push
sub
aad
test
test
dec
inc
call
jp
sbb
mov
mov
pop
loopne
xchg
subb
sub
pop
sbb
xchg
repz
std
and
push
outsl
cmp
inc
cmpsb
xor
sbb
mov
cmp
rclb
pop
cs
push
jne
push
fwait
decl
bound
nop
pop
dec
mov
inc
aaa
mov
aas
sti
icebp
or
mov
push
fwait
mov
cwtl
xchg
or
jmp
rolb
mov
push
fs
mov
scas
dec
add
mov
pop
inc
pop
pop
xchg
xchg
popf
or
xorl
in
in
add
sub
push
imul
xchg
popl
pop
xchg
cmpsb
lea
mov
add
push
clc
dec
dec
push
loope
rcll
mov
mov
xor
test
test
dec
cmp
push
xorb
pop
sbb
sub
fmuls
sbb
in
lahf
cmp
xor
shlb
mov
cld
dec
mov
pop
jo
daa
insl
dec
jo
dec
lock
push
inc
push
cmp
inc
sub
cmp
rorl
lods
test
inc
pop
out
hlt
jns
addb
jp
test
cmp
cmp
aaa
pop
in
ret
dec
push
je
je
push
mov
dec
test
sub
cmc
sbb
icebp
xchg
jno
mov
inc
enter
jo
and
add
add
test
xchg
lahf
fcmovbe
out
sub
push
dec
pop
stc
mov
mov
bswap
mov
lahf
negb
mov
push
sbb
inc
std
shll
sbb
xchg
cs
faddl
mov
cld
out
scas
in
pop
adc
das
in
std
push
arpl
sbb
jl
push
jne
das
shlb
outsl
fcompl
sub
shrl
add
cmp
mov
ror
sbb
add
bound
pop
aam
or
jg
sarb
clc
je
ja
loopne
dec
or
movsl
test
push
push
xchg
xchg
mov
adc
cmp
in
push
sbb
cmp
popa
icebp
xor
pop
mov
xchg
adcb
mov
lret
jb
ja
xor
outsl
lds
and
sti
roll
jmp
fdivr
lock
jle
fstl
fstpl
cmp
mov
and
jecxz
dec
mov
mov
xchg
repz
add
es
jecxz
mov
cs
mov
add
das
int
add
sub
out
aad
inc
sbb
loope
xor
mov
cmp
js
mov
jmp
imul
mov
xor
inc
inc
add
dec
or
jecxz
inc
roll
jg
mov
stos
js,pt
adc
popf
out
cli
rcrb
lcall
pop
dec
mov
aad
dec
inc
lcall
aad
or
push
sbb
push
hlt
sub
push
mov
add
lcall
jge
mov
lahf
push
push
pop
sbb
jno
xlat
mov
ret
sub
je
repz
xchg
adc
sbb
jge
cmpsl
sbb
and
stc
stos
dec
aad
aas
mov
scas
ret
jns
mov
ja
sub
xchg
dec
in
pop
jl
mov
push
adc
push
pop
je
mov
mov
popa
xlat
pop
stos
xchg
xor
adc
insb
or
sbb
jmp
jp
loopne
arpl
push
lret
jl
lea
repnz
cld
xchg
mov
pop
mov
icebp
dec
inc
ret
popf
call
dec
je
fdivs
repnz
aaa
cmp
push
xor
cmp
inc
leave
std
dec
pop
imulb
pop
or
or
test
test
mov
cmp
dec
lock
xchg
and
mov
dec
lret
or
scas
sbb
scas
jbe
pop
cltd
jb
in
mov
scas
jg
shrb
rolb
lcall
testl
xchg
ja
adc
js
fidivl
and
or
into
mov
insl
jb
stos
mov
ret
scas
push
cmp
pusha
aas
mov
xchg
push
sub
les
or
xor
add
pop
jnp
das
mov
inc
decb
adc
mov
or
gs
push
icebp
enter
imul
mov
xor
cwtl
push
nop
mov
sbb
test
mov
aas
call
xchg
shlb
aam
and
xchg
jmp
movsl
lcall
lods
and
jo
notl
mov
pusha
mov
cli
add
test
dec
xor
stos
test
jo
icebp
xor
jmp
sbb
inc
sahf
enter
in
pusha
pusha
adc
mov
xchg
scas
int3
mov
rcll
inc
test
cli
cmp
push
adc
mov
inc
scas
xchg
push
dec
repnz
daa
push
shrb
push
pop
pop
ret
ja
in
lahf
ret
movl
lds
inc
adc
or
pop
push
mov
ret
pop
shlb
aaa
add
mov
add
fistps
lods
test
pop
hlt
adc
mov
mov
push
xor
pop
or
xchg
sbbl
fdivrs
lock
mov
jne
cwtl
mov
out
data16
sti
mov
test
jmp
cmc
pop
inc
adc
frstor
xor
in
mov
xlat
sub
mov
rclb
jmp
ja
out
jmp
aad
pop
dec
lock
or
rol
arpl
mov
stos
sbb
cmpsl
aas
gs
mov
xchg
mov
int
lea
mov
mov
mov
je
xor
jno,pt
clc
stos
mov
xor
std
or
inc
ret
lods
cwtl
gs
loopne
or
sbb
xchg
call
fwait
jmp
dec
xchg
pop
aad
mov
test
or
cmpsb
bound
cmpl
pushf
in
hlt
mov
es
or
xchg
mov
cmc
js
fninit
jbe
push
clc
cmp
loopne
movsb
icebp
push
rcrl
lock
div
cld
lea
dec
mov
inc
sbb
mov
mov
cmpsb
add
test
or
push
hlt
adc
cli
mov
aam
cmp
mov
stos
inc
or
adc
push
and
aam
rorb
das
sub
cmp
sub
push
dec
call
fucomi
jge
adc
inc
es
js
sbb
pop
fimuls
push
mov
inc
xchg
clc
xor
arpl
test
or
push
cmp
mov
or
cmpsl
mov
inc
mov
mov
push
je
fistl
xchg
jge
pop
adc
mov
add
sub
out
movsl
sti
inc
cmp
inc
mov
push
cs
adc
pop
and
inc
fimuls
lods
jmp
mov
sub
mov
fisubrl
icebp
push
mov
pop
xchg
out
mov
jne
sub
outsb
and
rcrl
xchg
push
insl
adc
pop
pusha
sti
shrl
lds
ja
push
add
lods
lret
imul
insb
cwtl
jl
xchg
cmpsb
and
jl
aam
insb
test
and
xlat
daa
data16
insl
inc
xchg
push
pop
or
and
adc
cltd
rorl
idivl
into
inc
or
test
js
scas
cmp
xor
mov
push
mov
shlb
jne
or
inc
mov
aaa
cwtl
inc
and
int3
inc
jg
xlat
pop
add
aaa
sarb
ret
int3
or
xor
js
cmp
cmp
or
daa
fistl
or
add
data16
and
popw
sub
iret
ret
fdivs
dec
in
mov
cmc
dec
xor
loope
stc
xor
roll
js
cld
lret
lods
push
sbb
adcb
inc
in
cli
imulb
fstpl
cmpsl
mov
cmc
in
scas
gs
inc
inc
pop
mov
push
push
add
dec
sbb
adc
pop
arpl
decb
fdivr
testb
xchg
int3
or
aaa
int3
cmp
popf
outsl
add
call
jnp
sub
push
sub
subl
je
test
das
pop
sub
repnz
push
dec
mov
popf
push
aad
aad
pop
jae
cltd
fisttpl
pop
mov
push
mov
orl
add
xor
inc
jecxz
or
arpl
push
dec
dec
or
decl
fucomp
in
push
je
add
pop
jl
mov
shll
xchg
adc
enter
andb
imul
jl
movsl
nop
mov
jns
mov
adc
mov
jg
andl
pop
outsb
cld
fstpt
mov
cmp
or
icebp
ret
jb
add
and
inc
stos
sarl
pop
mov
loopne
xor
add
hlt
and
sbb
aam
lahf
fildll
std
mov
sbb
jg
adc
notb
cmpb
jl
and
mov
mov
and
adc
jecxz
in
arpl
and
or
add
adc
mov
daa
in
es
stc
cmp
imul
mov
cmp
lea
and
cmpsb
in
push
rcl
fadd
cmp
adc
call
movsl
pop
xchg
mov
out
or
scas
mov
sbb
fidivrl
or
jne
stos
shrl
dec
fs
mov
or
in
jae
jnp
loopne
mov
xor
jbe
xchg
push
sbb
daa
jno
adcb
dec
roll
dec
fisttps
add
sbb
lock
push
pop
jecxz
dec
pop
lret
xor
pminub
jmp
in
repnz
pusha
xrelease
mov
das
pop
mov
ds
mov
adc
dec
add
dec
scas
ret
mov
pusha
xor
jl
pop
push
pushl
dec
add
adc
repz
decl
ljmp
fwait
sbb
popa
mov
je
outsb
xchg
dec
cli
psadbw
fdivl
ret
jne
adc
lcall
dec
scas
xor
and
ficomps
dec
imul
sbb
add
int
xchg
jmp
gs
das
lds
xchg
fisttpl
shl
xor
roll
add
push
popf
call
sbb
stos
sub
sahf
inc
jmp
popf
sbb
lods
out
and
push
cmpsl
ret
cmpxchg
sub
fs
pop
inc
je
mov
dec
int
adc
xor
xchg
mov
cmpb
mov
call
popa
or
fidivrs
add
adc
shlb
cmp
popa
hlt
pop
mov
out
jg
leave
xor
dec
aas
or
sbb
xchg
push
and
mov
shrb
pushf
push
mov
fstps
and
mov
mov
mov
fists
cmpsb
movsl
mov
test
aam
pop
mov
sbb
lcall
arpl
sbb
mov
js
lock
add
lds
aad
pop
mov
jae
leave
and
test
int
js
test
push
es
idivl
xorb
mov
fisttps
jg
xchg
outsl
jae
aaa
mov
and
add
pop
pop
cld
sub
sub
insb
flds
cmc
arpl
or
pop
add
aaa
jecxz
es
arpl
stos
adc
insl
orl
mov
push
dec
dec
sbb
arpl
push
push
cmpsl
test
out
daa
mov
loope
mov
xchg
or
push
inc
dec
xchg
push
pusha
or
jmp
ret
fcompl
or
xchg
fadds
pop
ds
mov
xor
shl
or
xor
push
addr16
mov
mov
cmp
adc
iret
dec
and
ret
pop
sbb
mov
dec
jno
loopne
mov
xchg
shll
je
daa
jb
adc
xchg
sbb
xor
mov
or
mov
outsb
insb
ja
push
and
mov
pop
add
inc
decb
push
ret
cmp
fdivr
repz
inc
add
inc
xchg
stos
dec
mov
jmp
icebp
in
out
xchg
gs
dec
pop
outsb
sbb
mov
cmpsb
mov
mov
add
loope
cmpsl
lea
xor
push
pop
aaa
push
cmp
out
mov
mov
mov
imul
sbb
cs
or
xlat
sbb
dec
lahf
enter
xor
adc
push
call
sbb
pop
loope
jae
or
test
pusha
or
popf
or
js
int
cmc
shlb
jbe
jle
push
loop
push
and
xor
adc
and
js
repnz
add
mov
cmp
lcall
daa
adc
push
fdivrp
loope
pop
xchg
fildl
adc
lret
movsl
lahf
popa
and
xchg
enter
test
adc
xchg
add
jge
aas
mov
push
insl
divl
mov
jmp
mov
adc
mov
stos
sbb
fildll
xor
or
lret
idivl
inc
cmpsb
fmul
adc
push
adc
shlb
push
and
sahf
loop
inc
adc
sub
imul
cmc
jmp
jp
add
fstps
mov
shlb
inc
and
jbe
aad
mov
mov
ficoml
movsl
jns
jo
inc
pusha
sbb
sbb
add
aas
push
push
mov
call
dec
mov
sahf
fistl
add
lret
push
popf
push
test
xor
pop
jmp
jecxz
js
jb
xchg
sub
or
bound
fisttpll
or
loop
cmp
mov
xchg
fbld
cmp
pop
shl
adc
pop
repz
xor
popa
mov
adc
xor
dec
lea
sbb
adc
shlb
imul
or
inc
rcll
test
push
push
lret
xlat
sub
mov
lock
aas
sbb
cmc
push
add
test
mov
mov
add
mov
xchg
lods
pop
push
xchg
rep
mov
fcmovbe
shll
push
and
sbb
pop
test
xlat
lcall
xlat
test
test
lcall
xchg
out
cmp
test
lret
cmpsb
scas
pop
shll
lahf
hlt
add
mov
fadd
mov
mov
xor
test
inc
push
fsubrs
fdivrs
icebp
push
icebp
shll
les
or
js
loope
add
mov
push
mov
jg
dec
fcmovb
cmp
dec
loop
fstp
jmp
cmp
push
jb
mov
pop
cmpsb
sbb
sbb
mov
adc
adc
les
and
jp
loop
xchg
mov
mov
mov
popf
mov
mov
sub
dec
dec
ljmp
bound
lea
pop
shl
insb
mov
jo
add
scas
aad
mov
shll
mov
or
cmc
inc
mov
xchg
orb
dec
js
pop
in
jle
ret
mov
inc
cltd
pusha
nop
add
leave
int
es
pop
lahf
out
int3
aaa
add
xchg
cltd
pop
jmp
lds
std
je
hlt
hlt
dec
adc
jnp
push
xor
mov
cmp
ss
scas
fs
xchg
lock
outsl
pushf
repz
jecxz
jnp
int3
outsb
inc
and
nop
cmp
lahf
lds
inc
dec
lea
cmp
in
les
sub
pop
mov
icebp
fstpl
mov
and
iret
push
ljmp
cwtl
rorl
dec
push
lcall
push
repz
mov
lret
add
sbb
addl
xchg
pop
jle
std
daa
mov
lea
ss
popf
fildll
lock
addb
cltd
les
mov
repz
in
lods
mov
and
mov
dec
mov
icebp
rcll
js
test
iret
pop
js
adc
mov
inc
hlt
enter
sbbb
sti
lds
cmp
shll
insl
cli
add
push
nop
and
stc
add
pop
or
ja
leave
xchg
jne
dec
xchg
call
push
xor
or
jge
push
popa
jbe
je
cmp
pop
mov
sbb
stos
mov
int
adc
cmp
ljmp
sub
fucomi
adcl
inc
add
push
dec
mov
test
sub
scas
mov
inc
add
movsl
fwait
mov
jp
pusha
xchg
add
jge
in
push
pop
jecxz
mov
push
ficomps
xor
mov
mov
mov
out
inc
lock
push
inc
pop
or
ficomps
insb
inc
enter
mov
pop
push
imul
sarl
jle
adc
pop
cli
ret
and
loope
cmp
sub
mov
into
es
adc
rcrl
addb
cmp
idivl
cmp
xchg
add
adc
mov
ret
pushf
clc
lods
inc
xor
mov
adc
imul
mov
call
sbb
jns
add
mov
cmp
mov
mov
pop
inc
loopne
dec
enter
ret
es
cmc
or
push
lcall
and
sbb
cmc
push
adc
mov
out
cwtl
sbb
xchg
jo
popf
outsl
inc
shl
mov
lcall
outsb
pop
mov
arpl
mov
push
xchg
jge
inc
and
cmp
mov
fimuls
sbb
dec
outsb
das
in
pop
sub
push
dec
or
mov
mov
sub
ljmp
add
lret
int
and
mov
or
sbb
hlt
push
fisubrs
pop
pop
inc
rdtsc
mov
lods
testl
xchg
in
cmp
push
ds
sbb
jl
in
data16
je
fstl
jge
stos
mov
push
inc
fcoml
push
repz
jge
cmc
aas
adc
loope
sbb
addl
xor
rorb
inc
mov
mov
mov
call
ja
das
xor
mov
ljmp
or
in
and
js
jge
imul
jl
iret
xor
mov
and
addr16
or
push
jno
mov
cmpsl
sub
arpl
movsl
mov
inc
jae
rolb
and
xchg
add
mov
adc
push
dec
lret
cmpsb
out
mov
test
mov
or
and
jl
push
jmp
jbe
faddl
fistpl
or
cmp
inc
xlat
and
pusha
cmp
leave
insb
loope
aas
mov
sbb
stos
cli
cs
fdivs
mov
mov
das
mov
push
fldt
mov
les
mov
inc
pop
inc
inc
ja
inc
mov
sbb
aad
clc
add
jne
xlat
aad
pop
xor
pop
int
sub
push
mov
cli
push
and
roll
leave
int
push
push
fdivs
lock
aam
jmp
insb
adc
je
jge
pop
push
in
mov
rcll
sarb
scas
mov
sarb
push
cld
push
xor
mov
lea
loope
sahf
inc
add
aaa
in
dec
pop
leave
add
adc
clc
inc
jne
xor
lods
loope
repnz
jg
shrl
sub
pop
xor
js
outsl
xor
dec
push
imul
enter
pop
mov
mov
cmp
and
andb
cld
sub
or
push
inc
ret
mov
call
push
or
sbb
lcall
lea
and
pop
push
pop
pop
xchg
xchg
vmwrite
dec
pop
fldt
jo
jne
outsl
lcall
push
sarl
es
pop
outsl
cmp
imul
mov
adc
jbe
std
mov
ljmp
mov
out
adc
dec
inc
adc
stos
mov
cmp
pushf
xlat
cmpb
sub
push
stos
ds
shll
pop
loope
xor
cmc
es
outsl
sbb
push
mov
mov
inc
aaa
fidivl
std
jge
pop
or
add
stos
stc
pop
xchg
pop
loope
pushw
nop
xchg
lcall
adc
push
and
int
or
push
mov
insb
mov
fistl
sti
xor
std
inc
xchg
pusha
xor
or
jmp
test
mov
xlat
sub
mov
xchg
cmp
scas
sbb
push
or
popa
cmp
repnz
add
fbstp
out
mov
mov
cmpsl
push
sbb
push
inc
not
mov
sbb
mov
shlb
icebp
or
test
dec
mov
inc
bound
sub
insb
xor
jecxz
scas
pop
aaa
test
es
sbb
dec
pop
xor
js
outsb
sahf
jl
xchg
daa
add
xchg
addb
xor
clc
sbb
incl
cltd
inc
inc
mov
loop
lea
push
pop
push
mov
out
int3
lcall
adc
pop
cmp
inc
pop
mov
pop
and
mov
sbb
movsb
cltd
cld
and
jle
push
int
mov
jb
adc
xbegin
stos
std
sub
push
out
je
inc
fistpll
shll
lahf
cli
in
lock
rolb
jne
insb
inc
and
fwait
xor
jp
clc
test
aaa
test
adc
pop
sarl
xchg
xchg
movsb
addl
mov
outsl
in
xchg
sti
popf
hlt
and
jmp
cli
xchg
test
mov
bound
aam
hlt
fsubrl
add
dec
mov
out
fisttpl
pop
xor
test
jmp
mov
pop
add
fildll
adc
sbb
lret
sbb
inc
jo
shrl
inc
ljmp
js
bound
push
cmp
in
pop
cli
divb
js
sahf
sub
cwtl
mov
xor
aaa
out
xchg
insb
cmp
insb
aas
and
mov
jmp
cli
test
adc
imul
ret
cld
pop
clc
push
cmpsl
ss
sti
mov
xchg
mov
push
outsb
pop
sti
cmpb
jne
or
rcr
push
jae
sarb
pop
movsb
ret
mov
shrw
addl
and
push
mov
fsubs
jae
and
push
pop
mov
jmp
jmp
bnd
rcr
mov
jns
add
fcompl
dec
pop
test
xchg
add
dec
add
inc
xchg
add
push
mov
cmp
aas
loopne
dec
adc
jo
stc
adc
clc
pop
push
lea
ljmp
andb
movsl
add
adc
cmp
jne
icebp
fimull
add
jo
pop
mov
ja
xchg
fwait
inc
aas
fs
push
sahf
push
or
aaa
das
lds
imull
leave
inc
fisubrs
sbb
in
mov
leave
ds
mov
lret
jle
fwait
ljmp
sub
xor
jp
into
es
clc
jno
mov
in
mov
stos
xchg
jmp
mov
sub
xchg
or
inc
push
in
jnp
fcmovnb
pop
mov
scas
mov
sub
sbb
adc
mov
inc
nop
and
inc
cmp
sbb
inc
into
push
cmp
add
cmp
add
loopne
aas
ljmp
xchg
fsubs
cmp
mov
loop
cld
js
aad
pop
int3
nop
xor
iret
clc
ljmp
mov
fmull
icebp
and
mov
push
aad
rorb
scas
cmp
inc
adc
xor
ficoms
pop
mov
outsb
jecxz
fnstsw
xchg
pop
xchg
mov
outsl
les
pop
adc
pop
clc
call
add
and
adc
test
aas
push
sub
mov
cwtl
xor
fidivs
fisubrs
int
out
out
xchg
jle
movsb
xor
imul
cmp
in
pop
push
dec
fwait
lock
xor
mov
mov
cwtl
pusha
shl
popa
push
jbe
mov
mov
jbe
cmp
and
mov
outsl
sbb
cmp
fisttpll
cli
outsb
xor
inc
ror
xlat
stc
or
adc
push
clc
mov
xchg
xor
rcrb
cmc
push
or
lea
test
mov
inc
icebp
push
push
ss
pop
imul
inc
xchg
lea
stos
pop
mov
and
or
je
sub
pop
js
inc
js
or
jg
jns
cmp
pop
pop
cli
inc
hlt
add
pop
adc
sbb
inc
add
pop
cmp
adc
leave
sbb
xchg
jne
test
sbb
cmpsl
sbb
xchg
rcll
cmp
insl
or
jb
repnz
mov
std
mov
add
test
push
and
inc
test
push
dec
pushf
jmp
or
mov
shld
cltd
outsl
dec
adc
dec
outsb
cmp
jnp
cmc
data16
rcll
inc
mov
jo
or
mov
mov
mov
rolb
and
pop
out
push
adc
mov
adc
out
pusha
xchg
xchg
push
lds
test
add
push
arpl
add
xchg
xchg
inc
or
dec
mov
adc
adc
and
test
xchg
or
or
and
dec
mov
and
std
js
and
insl
fs
xchg
push
aam
mov
and
pop
outsl
das
mov
sbb
sub
aas
jg
sbb
scas
xor
sub
xlat
or
pushf
mov
fcmovnbe
pop
cmp
lods
mov
ds
xchg
scas
jmp
scas
or
mov
das
add
test
push
outsl
jo
pop
or
mov
addl
inc
fwait
jp
push
xrelease
mov
ret
xchg
mov
movsl
inc
stos
add
popf
loopne
out
clc
decb
mov
negb
cli
xchg
inc
lds
into
je
pop
cmc
ret
add
cmpsl
cmp
and
mov
aaa
out
dec
push
sub
adc
or
loopne
enter
cmpsl
jge
jl
sahf
loopne
mov
jecxz
outsl
dec
imul
sbb
aas
into
and
or
cmp
mov
xchg
lock
fcmovne
or
dec
shrb
pop
insl
dec
or
in
ret
aad
aas
dec
iretw
sbb
inc
and
lds
or
cmp
mov
adc
sub
jo
repz
jecxz
lret
js
push
jb
and
aaa
or
inc
sbbl
cmp
xchg
cs
addl
ret
pop
cmpb
and
mov
or
jle
xchg
pop
outsb
xchg
mov
inc
loopne
lret
jo
enter
mov
rclb
sbb
mov
mov
bound
add
jae
aam
add
xorl
cmp
mov
rorb
mov
rol
in
xchg
sub
xchg
inc
inc
out
popl
icebp
notl
add
cli
or
iret
lods
inc
xchg
addr16
rcr
ljmp
pop
fidivs
mov
pop
pop
sarl
mov
cmp
push
pop
clc
jb
pushf
push
aaa
jbe
xor
sub
scas
add
cld
push
inc
mov
mov
xor
add
jecxz
sub
mov
imul
loopne
lret
gs
sbb
mov
mov
pop
subl
and
push
sbb
dec
mov
mov
and
mov
faddp
ret
mov
adc
push
out
mov
fs
cmc
pusha
pop
test
xor
shlb
sbb
sub
xor
add
sbb
shll
fsubl
push
jp
cmp
in
and
sub
aad
push
inc
cs
sbb
push
dec
mov
pop
cmp
xorl
adc
pop
call
test
outsb
or
jge
inc
daa
icebp
fistpll
and
inc
in
xchg
pop
pop
fidivs
ss
mov
aaa
mov
rolb
mov
add
mov
xchg
mov
pop
mov
push
adc
mov
push
test
andl
out
imul
or
in
mov
mov
pop
mov
test
ljmp
mov
int
push
mov
inc
stc
ficompl
pop
sbb
dec
cmp
sub
enter
mov
vmovntps
popa
nop
and
mov
cmpsl
xchg
mov
pop
mov
fisubrs
jecxz,pn
sub
lods
mov
cmp
xor
sti
pop
pop
cmp
mov
stos
dec
rol
loopne
mov
enter
imul
push
jbe
repz
dec
data16
out
mov
mov
jecxz
cmp
int
jae
jg
insb
test
inc
out
mov
pop
inc
les
xchg
mov
pop
out
push
popf
es
adc
cmp
lea
xlat
mov
sub
or
mov
fistps
je
test
mov
enter
push
icebp
inc
cmc
add
inc
mov
fs
or
std
call
push
sub
cli
gs
or
mov
mov
setp
inc
push
pop
inc
inc
in
jecxz
das
cwtl
add
fadd
stc
xor
push
push
push
adc
xor
or
xor
mov
enter
inc
and
and
fiaddl
pop
scas
sub
jno
fsubrl
mov
insb
test
sub
mov
daa
lahf
fwait
jnp
rcr
sbb
test
add
push
mov
sbb
jbe
adc
pop
pushf
push
jmp
mov
xchg
jle
cs
add
xchg
xlat
loop
cmp
jle
mulb
pop
rol
inc
cmp
clc
loope
unpcklps
add
imul
add
mov
dec
pop
mov
lahf
and
or
mov
outsl
and
js
sbb
fisttpll
or
inc
xor
lcall
ret
mov
xlat
std
insl
repnz
mov
mov
mov
clc
pusha
mov
clc
loopne
xor
lds
push
push
ds
xlat
dec
icebp
outsl
scas
xor
adc
sbb
adc
adc
das
mov
imul
sbb
mov
int3
adc
or
out
arpl
stos
roll
xchg
push
cmp
cmp
xor
cltd
fisttps
gs
insb
sbb
or
sbb
into
dec
adc
xchg
sarl
xor
aam
fbld
lds
xchg
cmc
inc
push
mov
pop
jmp
clc
add
jo
and
ret
decl
xor
jbe
pusha
mov
fs
xchg
ret
in
mulb
sbb
sahf
add
fnstenv
fwait
lods
cs
dec
jge
jg
push
jge
jp
mov
adc
xor
fs
dec
adc
enter
add
xchg
jge
loopne
jbe
push
push
insl
leave
and
ds
jge
push
je
mov
test
dec
popf
lea
adc
mov
add
sbbl
fisttpl
nop
inc
mov
jmp
or
mov
or
std
mov
push
aas
lcall
rorl
sub
dec
add
inc
xor
test
jge
repz
daa
and
aam
cld
push
data16
fidivrl
xor
cmp
fsubrs
mov
fdivp
and
push
or
pop
push
fildl
push
cmp
dec
dec
push
push
lahf
adc
mov
jle
cmp
jo
test
inc
add
lods
dec
xchg
push
and
das
int3
int
outsb
mov
outsb
loope
xor
and
cli
xor
ficomps
jl
xchg
cmp
push
mov
aad
pop
mov
ret
rcll
insb
lods
sub
cltd
xchg
cmp
mov
dec
fs
shl
fcmovne
sbb
scas
jge
test
jge
lock
dec
fldcw
jo
scas
adc
mov
dec
mov
mov
mov
push
xchg
stc
mov
pop
pop
dec
xor
xor
mov
loopne
mov
inc
mov
fscale
imul
mov
enter
jb
xor
sub
out
ljmp
in
cmpsb
cli
xchg
stc
in
aaa
mov
cmp
call
mov
mov
xchg
xlat
mov
mov
jne
lret
push
and
sbb
out
lret
sbb
push
call
jl
out
mov
outsb
fdivrs
jp
shlb
xor
imul
cmp
cmp
pop
or
add
mov
add
js
jg
pop
inc
adc
dec
rcrl
mov
je
xlat
pop
ds
xchg
dec
xor
fdivs
xor
push
xor
jne
imul
iret
xchg
jg
ret
in
add
push
jle
cli
add
mov
lock
mov
je
inc
leave
mov
fdivrs
jno
int3
data16
cmc
inc
shll
fs
jecxz
mov
js
push
mov
call
fistpll
adc
dec
push
push
xchg
fdiv
add
arpl
xchg
xchg
aad
cld
test
int
cmpsb
ja
scas
xadd
ljmp
lret
sti
call
dec
stos
dec
jb
xor
sarl
jl
sbb
or
sbb
cmp
outsb
pop
hlt
addb
bound
push
xor
xor
aaa
leave
ret
lock
add
cltd
adc
xchg
loope
push
std
sbb
xor
sub
out
arpl
dec
xor
and
or
pop
je
test
cmp
insb
lock
adc
mov
es
fdivl
loopne
pop
in
sarl
and
lods
jnp
scas
cld
dec
push
xchg
mov
jnp
nop
repz
into
mov
sub
fdivrs
add
adc
loope
mov
and
adc
mov
mov
xor
add
and
lock
mov
sub
les
inc
ljmp
mov
jecxz
ljmp
mov
jmp
mov
jae
in
pop
std
es
jae
stos
dec
cwtl
mov
xor
pop
out
mov
adc
sub
mov
cmp
and
ret
sub
jle
aad
imul
dec
or
in
sbb
jne
cmp
add
pop
push
pop
adcb
shrb
mov
rcrl
or
xchg
adc
cmp
fldenv
sbb
ret
dec
je
ss
xor
ficomps
add
jbe
fidivrl
mov
xchg
cmpsb
sbb
mov
inc
cld
aas
adc
fstl
mov
rcl
test
std
and
jg
xlat
sarl
inc
mov
xor
pop
in
imul
jp
rcrb
mov
test
gs
mov
push
icebp
ljmp
add
sahf
jo
stos
into
lahf
mov
imul
or
and
push
psllw
call
add
pop
mov
repnz
lds
pop
xchg
adc
xor
sbb
cli
mov
xchg
mov
cmp
fbstp
cmpsb
ljmp
add
add
into
dec
push
or
ret
shlb
mov
stos
fisubrs
stos
sub
std
jo
inc
clc
mov
cmp
dec
sub
sub
sbbl
sub
jp
scas
cmp
andb
cld
mov
loope
push
stos
inc
je
rolb
fcomip
cwtl
ja
push
ret
sbb
ds
dec
mov
fldt
add
push
mov
mov
orl
push
dec
je
mov
fdivrs
sub
jbe
aad
xorb
xchg
dec
mov
leave
jl
push
pop
push
jecxz
fistpll
cmp
mov
movsl
imul
push
mov
lret
int3
pop
adc
cld
fs
mov
cmp
jge
dec
sbb
clc
xchg
push
jb
mov
sar
mov
je
or
scas
and
ss
or
in
stc
mov
mov
leave
inc
add
outsb
sub
out
je
dec
and
outsb
and
xchg
inc
inc
xor
aam
inc
fcomi
and
push
mov
or
push
cmp
xor
inc
xor
mov
outsb
cli
rsm
hlt
scas
xchg
jae
adc
cmp
test
jecxz
pop
push
cmp
or
andl
jg
mov
rol
inc
push
fnsave
fwait
loopne
mov
adcb
ja
aaa
cmp
mov
cmp
inc
aam
test
es
gs
in
or
adc
adc
cmp
xchg
stos
jp
out
xor
clc
pop
clc
int3
repz
pop
sub
mov
subb
test
push
loopne
notb
mov
inc
or
das
push
fnstsw
push
dec
xor
je
push
adc
lock
mov
nop
dec
ret
jb
testb
mov
sbb
or
adc
ss
mov
add
and
xchg
cmp
xor
fwait
dec
push
loopne
jbe
pop
pop
mov
pusha
inc
or
inc
inc
cld
pop
mov
flds
mov
pop
cli
mov
pmullw
jb
sub
jbe
cmp
leave
rorb
loopne
popw
push
orb
mov
xchg
jl
or
or
out
repz
outsl
loopne
ja
push
xor
jg
lahf
mov
icebp
andl
xchg
cmp
loop
ret
sbbl
mov
adc
dec
or
in
push
push
sub
sbb
inc
mov
lea
dec
jbe
pop
xor
pushf
mov
insb
sbb
jne
scas
ret
call
xor
mov
add
fiadds
mov
out
fwait
lahf
daa
shl
and
push
je
sti
mov
adc
in
lahf
inc
inc
sub
scas
test
jl
popf
push
mov
or
xor
sub
mov
mov
icebp
adc
push
sub
jmp
xor
add
mov
mov
les
es
jmp
or
pop
lret
in
sbb
dec
fdivl
xor
xchg
lock
test
or
mov
test
pop
jo
pop
std
sub
pop
jecxz
rcrb
and
cmp
sbb
fisttps
sbb
in
es
sbbl
ljmp
loopne
jg
leave
orl
pxor
icebp
pushf
andb
aaa
xor
test
and
sbb
and
pusha
adc
adc
jns
cmc
test
and
mov
movsb
jle
in
orl
xor
xor
inc
mov
sbb
inc
daa
and
les
fcoms
xlat
xchg
jo
cwtl
enter
ja
test
fisubrs
cmp
lods
loope
fisttpl
pop
test
imul
xor
inc
imul
test
ficoms
mov
adc
fwait
xchg
jo
ljmp
xchg
push
dec
cmp
jmp
adc
imul
jno
adc
sub
or
imul
xor
mov
cld
cmc
cld
data16
push
cwtl
ja
xchg
incl
sbbl
ret
sbb
pop
arpl
int3
loop
addr16
xor
jno
xor
cmpsb
sbb
cmpsb
mov
jg
push
out
loopne
sahf
out
cmp
ret
push
ja
add
sbb
add
inc
fnstcw
jecxz
push
cld
cmp
imul
cld
xchg
xor
sahf
add
cld
sti
inc
adc
into
decb
mov
jg
int3
xchg
test
imul
pop
in
mov
pop
les
push
jg
mov
daa
decl
jbe
pop
mov
mov
mov
bound
cmc
add
repnz
imul
sub
in
mov
mov
cmp
cmp
pop
mov
imul
pop
pop
sahf
mov
in
mov
pushf
push
rcll
je
jge
fldt
lock
or
mov
test
stos
cwtl
test
stos
loope
inc
and
cmp
out
mov
orl
add
sahf
ds
and
adc
jmp
push
pop
clc
push
ja
sbb
adc
test
je
rorl
push
call
sti
cs
fdivrs
mov
bound
push
movsb
dec
add
inc
sub
ret
insb
jne
psrld
mov
inc
push
arpl
leavew
lock
jns
add
jbe
adc
enter
test
xor
shl
movsb
mov
paddusw
add
scas
call
pop
adc
push
sbb
rorl
sub
clc
inc
insb
push
mov
pop
mov
xor
test
pop
lds
inc
ret
es
xor
mov
mov
shll
push
cmp
cmpsl
xchg
jle
mov
cltd
mov
stc
fldl
inc
pop
scas
adc
jmp
aaa
ljmp
push
jge
mov
pop
gs
cmp
cmp
jp
jbe
xchg
or
in
push
mov
out
mov
mov
insb
movsb
shll
add
jp
xchg
aad
mov
rolb
mov
mov
ja
xor
cmc
jnp
movsb
push
gs
jecxz
outsb
mov
xchg
push
popa
in
dec
test
mov
adc
jge
ja
jl
push
pop
add
adc
jb
hlt
test
lock
sbb
adc
movsl
mov
in
and
adc
out
mov
rorl
cmc
pop
lahf
ficoml
fsts
add
push
jmp
mov
cli
in
lods
add
outsl
ret
psubsb
sub
mov
aas
mov
shrb
dec
out
aad
std
aam
clc
mov
bound
in
push
xorb
or
mov
inc
cmpsl
ret
cmp
inc
mov
dec
icebp
sub
xchg
adc
lahf
incl
dec
cmp
in
gs
xor
fcmovb
out
mov
push
es
mov
mov
xor
scas
mov
inc
arpl
push
inc
jecxz
iret
jno
mov
sub
arpl
pop
mov
cmp
divl
add
cmpl
or
loope
outsb
mov
loop
adc
out
std
inc
xchg
sub
pop
cld
pushf
leave
call
add
dec
xchg
cmpsl
scas
scas
adc
lret
mov
sbbl
lock
in
mov
adc
repz
jne
jge
pop
loope
xchg
or
add
pop
mov
ss
adcl
sahf
xchg
addl
or
fucomp
call
rclb
pop
ja
inc
dec
xchg
rolb
inc
sbb
stc
leave
or
movsb
in
xor
call
mov
out
add
sub
pop
cmp
push
adc
and
sub
pop
js
je
js
cmp
das
add
les
adc
and
filds
mov
inc
mov
inc
cwtl
fs
ja
jp
shll
in
cld
out
push
push
mov
sbb
mov
stos
jge
adc
mov
mov
pop
das
das
hlt
and
add
mov
pop
clc
sub
test
int
xchg
xor
imulb
aam
adc
sbb
aaa
fnsave
and
push
dec
inc
cmpsl
adc
pop
orb
sub
lods
or
mov
sbb
xchg
jnp
mov
lds
inc
ja
cmp
pop
cs
fsubl
out
es
decb
xchg
push
and
in
mov
mov
fsubp
or
inc
mov
push
cmc
out
outsb
inc
push
add
inc
movsl
push
int
fstl
jge
adc
mull
xchg
lods
inc
mov
je
cli
and
xchg
decb
icebp
ret
scas
es
pop
mov
sbb
push
and
jno
lahf
jecxz
in
pop
push
rol
xchg
push
mov
xchg
push
xor
adc
xorb
pop
cld
scas
fisubrl
mov
das
push
jg,pt
into
dec
mov
fldl
pop
clc
testb
nop
push
push
mov
inc
sbb
mov
pop
cmc
mov
mov
clc
adc
mov
add
or
das
insl
or
cmc
out
xchg
pop
jecxz
hlt
hlt
sub
add
lock
pop
std
aam
test
addr16
mov
aam
push
and
test
flds
or
push
fbstp
ja
jmp
xor
xor
js
int3
adc
arpl
dec
rcrl
xchg
out
xor
and
jle
mov
xchg
sahf
mov
pop
mov
fs
pop
cmpsb
sti
shl
cmp
sub
mov
mov
andb
test
adc
mov
cld
pop
pop
mov
hlt
sbb
sub
in
mov
pop
xchg
cmp
mov
aas
syscall
rcrb
cwtl
sti
dec
sahf
enter
std
je
adc
stc
adc
sbb
push
das
lock
out
cltd
push
ljmp
inc
or
push
pop
ss
hlt
fcomp
into
ss
mov
mov
or
or
ret
das
notb
mov
je
ljmp
dec
je
fadd
incl
popa
jl
dec
adc
xor
xor
pop
aaa
and
stos
mov
mov
test
fistpl
inc
sub
les
rorl
icebp
jle
movsl
scas
mov
push
mov
fimull
daa
or
enter
mull
and
stos
mov
pusha
cltd
add
cmp
fidivl
and
xor
icebp
mov
aam
sub
cmp
pushf
adcb
sbb
ficoml
enter
mov
sbb
out
stos
cmp
lret
sbb
jecxz
fistpl
mov
repnz
or
and
push
inc
mov
xchg
movsb
mov
sub
pop
sbb
ret
pop
jecxz
push
rorl
add
std
rcr
repnz
push
outsb
lds
inc
adc
xlat
pop
outsb
fisubrl
outsb
dec
adc
in
aaa
or
jl
stos
sbb
inc
subb
jae
mov
inc
mov
add
pop
mov
or
dec
or
subl
inc
scas
inc
push
jge
lods
push
fstpt
add
and
cltd
add
out
xor
and
ret
mov
out
in
ret
lret
mov
push
testl
pop
sahf
jg
outsl
popa
xlat
stc
in
fimuls
nop
test
mov
out
and
mov
mov
add
xor
test
push
pop
or
mov
or
add
movsb
pop
xchg
add
push
mov
or
sub
and
adc
mov
and
shrb
push
pop
adc
xchg
dec
testl
adc
jnp
inc
cmp
and
aaa
int3
add
adc
xchg
jp
fisubrl
imul
pop
aas
dec
cmp
test
and
or
cmovns
sub
imul
xchg
loopne
scas
jmp
movsl
push
pushf
loope
mov
pop
fistps
xchg
cmp
mov
sub
mov
inc
pop
scas
pop
jne
dec
dec
add
testb
jmp
in
cmpb
xlat
dec
ljmp
movsb
bound
xlat
ror
add
ljmp
and
js
mov
int
xchg
mov
inc
adc
insl
cmpb
and
xchg
xchg
lcall
sbb
xor
mov
adc
aaa
push
sub
pop
pop
push
jge
jo
jl
clc
rorl
adc
mov
xchg
roll
sbb
addr16
push
outsb
cmp
js
jo
in
inc
push
and
adc
call
mov
push
subb
negb
lods
rcll
xor
jge
loopne
aad
nop
cs
add
orb
mov
lods
ficoml
mov
mov
pop
dec
test
mov
fbstp
scas
sbb
add
mov
inc
mov
pop
push
and
insl
xor
mov
ja
mov
jg
add
rcll
inc
test
lret
int3
call
pop
pop
sub
sbb
jb
lahf
pop
and
mov
test
mov
fwait
xor
jb
push
sti
and
jg
xchg
inc
pop
mov
pop
shll
jno
dec
in
mov
adc
jge
int3
cwtl
push
clc
xor
mov
xchg
ret
mov
add
push
pusha
je
sub
insb
and
xchg
mov
movsb
jnp
xor
in
or
clc
les
ds
mov
fistps
bound
sbb
adc
jne
fscale
jne
leave
jge
and
push
notb
movsl
movsl
add
push
xor
push
into
test
inc
cmp
push
jmp
mov
jo
push
jmp
into
mov
into
and
lea
push
mov
sub
ret
sbbl
hlt
fstpl
lods
mov
pushf
push
in
pcmpeqw
mov
cmp
dec
mov
sti
jge
pop
les
mov
inc
xor
xor
xchg
lock
insb
cmp
jl
daa
popf
xchg
xor
cld
cmp
mov
push
push
adc
stos
outsl
pop
daa
lea
gs
push
add
je
jmp
mov
out
push
jns
movsb
popa
push
ja
insl
aam
jecxz
pop
sub
fnstcw
mov
pop
imul
cmp
dec
and
jp
add
cmp
out
xlat
aas
rolb
es
cld
adc
sbb
cli
push
sub
and
add
xor
dec
movsl
loop
pop
dec
pop
cmpsl
and
fcompl
movsl
adc
pop
adc
inc
adc
pop
lret
jo
pop
jno
mov
jg
pop
lcall
pop
or
subb
inc
xchg
shl
or
add
mov
cmp
ret
xrelease
sbb
pop
push
ja
adc
jns
rcl
ret
xor
pop
sbb
sbb
lcall
insb
js
adc
dec
xchg
out
test
inc
loop
das
xchg
inc
cmp
xor
pusha
adc
sub
and
das
insb
fcomps
fwait
sbb
bnd
lds
call
mov
push
out
and
outsl
sbb
pop
lock
cmp
xor
sub
ss
inc
outsl
icebp
push
sahf
pop
add
scas
sti
mov
sbb
mov
and
mov
sub
pop
addb
shll
fiadds
js
jnp
or
sub
shll
add
pop
pop
movsl
fwait
jl
sahf
repz
ljmp
push
inc
sub
in
ja
adc
outsl
mov
adc
push
loopne
mov
xchg
orl
pushf
adc
mov
pop
in
adc
xlat
jbe
mov
mov
lcall
pop
arpl
sbbb
aad
add
fstl
push
jmp
mov
jno
adc
sub
xchg
int3
rclb
push
jno
loopne
sub
mov
loope
jle
les
xlat
push
insl
cmc
orl
mov
cmp
iret
mov
mov
dec
dec
mov
xchg
iret
dec
clc
out
adc
dec
in
cli
or
fistl
dec
sar
mov
and
ljmp
adc
adc
aam
cld
fimull
add
dec
pusha
frstor
xchg
das
push
ds
add
mov
mov
push
in
or
add
scas
out
inc
add
addl
mov
or
dec
pushf
scas
and
inc
push
push
out
mov
mov
mov
sbb
test
sub
ljmp
aas
pop
cmpsl
clc
rcrl
aam
add
push
mov
imul
out
test
repz
mov
and
add
jle
cld
or
adc
fiaddl
pusha
add
add
notl
nop
ss
fcoms
or
test
icebp
idiv
lret
shll
dec
and
sbb
xchg
in
arpl
push
push
jbe
sub
std
sub
mov
enter
nop
subb
cmpsb
std
jmp
push
dec
repz
pop
inc
pop
aaa
push
std
cmp
jecxz
rolb
stos
mov
ret
mov
int3
stc
and
testl
test
or
add
jl
or
aad
add
adc
mov
out
xchg
bsf
lock
in
sbb
clc
lret
inc
xchg
mov
mov
mov
or
xlat
call
je
inc
or
mov
aad
arpl
pop
push
mov
pusha
mov
or
or
pop
push
stos
fwait
xchg
xor
mov
aad
mov
pop
adc
jg
ja
dec
and
inc
or
sahf
adc
loopne
pop
test
daa
fists
push
sub
xchg
push
dec
dec
xlat
pop
pop
lcall
xchg
pop
jge
adc
and
andb
cmp
mov
pop
add
and
dec
lcall
jo
xor
mov
in
cld
hlt
mov
cmp
cli
scas
or
push
in
lret
je
xor
mov
mov
dec
out
fsubrp
test
xchg
jne
push
and
mov
mov
add
fs
dec
sarb
or
pop
xor
sbb
sbb
or
dec
das
mov
xchg
fwait
andl
mov
in
cmc
add
adc
fldenv
and
aam
js
adc
rorb
ret
xor
mov
xchg
ss
imul
es
mov
hlt
and
jno
push
mov
add
jp
bound
insl
rcrb
mov
test
insl
pop
imul
adc
mov
jp
inc
les
adc
mov
cwtl
data16
fcomp
int
mov
sti
das
mov
mov
sbb
pop
sbb
mov
lods
jbe
xchg
xchg
aaa
dec
or
push
movsb
cwtl
xchg
outsb
mov
sbb
scas
test
mov
cmp
mov
mov
push
cmpsb
movsl
outsb
sbb
xor
inc
dec
imul
arpl
daa
add
mov
xchg
ret
inc
mov
add
sbbb
adc
addb
jne
fldpi
xlat
inc
sbb
or
inc
fxch
clc
dec
jae
mov
hlt
add
mov
pushf
dec
sbb
cmp
pop
leave
cmp
incl
hlt
subl
aad
push
inc
cmpsb
jae
cmpsb
subb
jecxz
sarl
xchg
and
loope
mov
push
sbb
lret
xchg
jmp
aad
cmc
sbb
rol
cmp
movsl
push
enter
push
rcrb
xor
push
pop
push
mov
lret
fisubl
cs
clc
test
push
inc
pop
jmp
aad
ret
and
cmp
dec
jmp
mov
leave
ret
jmp
ss
pop
rcr
adc
paddd
mov
daa
or
addr16
xchg
scas
mov
mov
mov
js
js
outsb
inc
and
shl
fdivrl
mov
jg
mov
push
mov
lods
insl
inc
es
inc
addl
push
dec
aas
rcr
icebp
push
push
or
test
lret
xchg
xorl
add
lods
push
pop
or
shll
adc
mov
jae
fsubrs
stc
test
bound
mov
movsl
outsl
or
shll
repnz
add
or
gs
xorps
outsb
cld
push
cwtl
pop
mov
or
pop
pushf
ljmp
dec
sbb
or
mov
dec
neg
rcl
jmp
add
sti
test
and
push
loop
jbe
pop
out
push
mov
pop
cmpl
fnstsw
or
inc
lahf
adc
out
enter
or
int
adc
cltd
out
pop
or
push
insl
pushf
add
sti
out
dec
aaa
inc
inc
cmp
and
outsb
jg
add
mov
mov
iret
add
and
scas
push
cld
aas
negb
mov
adc
pop
call
cmp
add
cmp
mov
dec
fnsave
sahf
push
lock
fildl
push
pop
sub
out
insl
je
loope
repnz
into
repnz
aaa
rorl
ds
inc
popa
mov
jmp
inc
aam
push
jno
icebp
and
fmulp
je
cwtl
pop
xor
out
call
mov
ror
lock
push
mov
mov
or
dec
cmc
mov
push
leave
ret
rclb
mov
mov
cs
test
mov
sbb
jb
or
icebp
and
in
pop
sbb
pop
testb
mov
outsb
fldcw
shrl
int3
sti
adc
dec
push
pop
add
mov
push
cmp
inc
test
out
mov
add
mov
pop
arpl
xchg
scas
sub
xchg
push
and
sub
outsb
sbb
ss
adc
ret
xchg
ljmp
out
adc
divb
das
sarl
cmpsl
int3
inc
movsb
mov
pop
call
xchg
mov
inc
fcmovnb
mov
sub
pop
in
fidivs
outsb
jge
cli
inc
cs
lea
orb
cli
xchg
dec
sub
cmpb
push
fisubrl
scas
movsl
sbb
add
mov
xchg
mov
or
mov
mov
jl
pop
jns
je
adcl
out
loopne
jg
and
cmp
test
pusha
and
fstpl
xchg
mov
jg
jo
jge
push
cmpl
dec
pop
jbe
pop
outsb
in
loope
pushf
pop
fcomps
mov
pop
ret
adc
push
aad
fsubrp
cs
scas
pushf
dec
enter
and
mov
jge
stos
mov
xor
mov
xor
ja
push
ret
jg
and
iret
movsb
xchg
sahf
outsb
std
push
gs
ret
cmpb
addr16
cld
adcb
inc
cmp
adc
mov
fistl
cmp
jae
gs
push
mov
insb
std
inc
rcrl
xchg
mov
fcmovnu
inc
test
pop
sbb
xor
and
xchg
gs
shlb
mov
mov
pop
fsub
out
sub
inc
push
cmp
shll
cmpsl
cmp
inc
fistpll
push
xorb
xchg
stc
lret
loope
fwait
push
clc
inc
mov
ja
add
and
push
pop
or
and
jmp
popa
ja
mov
stos
mov
xor
or
adc
mov
insb
call
sbb
adc
push
cs
jg
fistps
lods
or
mov
repz
xor
push
xor
inc
pop
jle
push
jmp
cmc
dec
cmp
inc
push
mov
int
scas
add
and
clc
scas
mov
mov
push
or
loop
filds
ja
int
roll
bound
pop
les
mov
sbb
xlat
idivb
dec
ret
push
jne
loopne
addl
mov
jo
xchg
sarb
adc
lods
shll
int
filds
mov
rorl
insl
stos
test
rcrl
ficoms
mov
dec
loopne
push
mov
mov
fcoms
mov
mov
cmp
in
jge
rcll
pop
jle
test
sbb
cmp
add
pop
push
or
mov
test
repnz
sahf
inc
push
out
mov
movsl
or
fisttpll
xchg
sbb
out
mov
sbb
outsl
dec
inc
inc
stos
mov
fmulp
dec
cld
sub
pusha
getsec
dec
aas
jle
shl
les
jb
mov
out
pushw
mov
pop
sub
ret
fabs
cs
sbb
mov
out
in
mov
fwait
fs
roll
shlb
ret
mov
or
in
push
xor
or
push
fstl
fsubs
and
test
cmp
sahf
inc
jl
pop
lds
scas
dec
sbb
push
cmpsl
xor
movsl
xchg
push
imul
in
mov
push
cs
cs
mov
call
lock
test
dec
cmpsl
and
imul
adc
adc
jne
pop
mov
push
imul
mov
cs
push
mov
jne
and
pop
adc
ja
repnz
lds
loopne
pop
sub
sbb
jo
push
lds
mov
sub
aad
cs
mov
les
lret
jno
mov
rclb
xchg
mov
add
inc
mov
pop
je
or
push
sbb
mov
sub
andl
fdivs
in
jb
push
sub
sub
and
mov
in
xchg
setge
mov
mov
mov
inc
pop
rorb
insb
jnp
fs
cmp
out
xchg
dec
int
xor
ljmp
daa
loop
fistps
dec
mov
test
mov
push
out
and
rcrl
je
aam
xchg
xor
shll
add
mov
jo
bnd
mov
mov
jge
outsl
adc
jge
es
adc
cmc
loopne
dec
mov
lret
out
adc
add
or
mov
push
idiv
mov
dec
inc
jmp
mov
pop
enter
or
push
lds
les
scas
fisttps
nop
add
in
adc
mov
or
insb
sbb
ds
inc
add
test
pop
sub
pop
add
mov
std
int3
icebp
xchg
inc
or
xor
add
mov
or
ret
and
rcr
bound
xchg
mov
ret
add
rcl
pop
lcall
and
add
loope
dec
adc
fwait
or
mov
sub
push
lock
fsubs
stc
jmp
push
sti
ret
out
cmc
push
jg
shll
loopne
pop
loope
dec
fidivs
adc
push
dec
jl
into
push
aaa
jne
jo
enter
cmp
jl
push
and
add
mov
fdivr
jbe
and
sbb
mov
std
or
jns
push
dec
xchg
pop
push
pusha
adc
pop
pop
sub
inc
sbb
push
nop
push
aas
pop
ljmp
ss
fimull
aas
jno
mov
fstp
es
sub
jb
mov
xor
aad
mov
mov
mov
sti
in
cmpsb
cs
adc
mov
push
jnp
cli
aas
cli
sbb
shrb
lahf
jp
fcomps
icebp
dec
mov
sub
inc
or
mov
outsl
fsubrs
pop
das
and
push
push
js
sbb
mov
dec
push
fisubrl
or
adc
aas
inc
out
push
fucomp
sbb
push
clc
aas
das
push
aaa
sbb
add
jl
repz
iret
cmp
mov
push
dec
sbb
or
add
inc
ss
and
mov
jo
push
je
jmp
jae
popf
adc
sbb
jp
lods
pop
mov
adc
cmp
cmp
mov
es
cmp
repz
push
or
out
arpl
enter
jb
loop
sub
xchg
or
sbb
ja
jnp
in
mov
cwtl
out
fcmovnu
fninit
xor
repz
test
into
and
test
xor
pop
arpl
push
leave
inc
cmp
inc
ficompl
out
xor
imul
push
es
cmp
push
push
inc
fstps
test
push
add
jecxz
hlt
test
mov
fadd
inc
mov
xchg
inc
or
movsb
jns
adc
mov
pop
loop
and
adc
jae
jecxz
xor
lahf
sahf
clc
pop
adc
jecxz,pn
inc
cmc
je
pop
jl
testl
push
add
adc
outsb
jb
push
rcr
pop
aas
sbb
push
mov
dec
pop
out
lahf
xor
xchg
subl
xorb
imul
repz
mov
fstpl
jecxz
cmp
stos
adc
cmp
lods
pop
rorl
or
test
pop
jge
and
in
or
push
mull
sbb
adc
and
push
and
enter
push
mov
out
daa
mov
in
push
inc
adc
sbb
mov
xlat
inc
fistpl
jle
dec
pop
fdivs
fs
movsb
jo
test
sbb
jo
fcoms
sahf
jecxz
pusha
stc
bound
xchg
dec
push
and
xchg
and
jae
out
inc
fisttpl
jg
jge,pn
mov
scas
imul
fcmovnu
inc
mov
call
in
pop
bound
mov
jg
sarl
pop
xor
and
out
out
xor
or
fildll
test
and
mov
jmp
push
push
in
mov
jns
gs
jg
mov
pop
test
inc
orl
test
mov
aam
xorl
fnsave
ds
and
sub
stc
fstpt
pop
jbe
out
stc
dec
aaa
add
jl
das
insl
fimuls
mov
ret
ret
xchg
mov
outsl
sahf
filds
push
cwtl
inc
dec
mov
fisttpll
pop
lock
add
push
shrl
loop
add
adc
or
sti
rcl
cwtl
inc
stos
jno
pop
or
inc
test
xchg
adc
out
or
sbb
adc
shrb
out
bound
pop
ss
add
out
insb
std
lcall
sbb
lcall
push
loope
std
or
adc
pop
ds
lret
and
push
sahf
lcall
shlb
insb
notb
jb
jno
in
push
mov
or
gs
sbb
loopne
mov
in
in
lock
jmp
outsl
xchg
add
repnz
mov
sti
add
call
lret
pop
mov
pusha
int3
addr16
dec
fistps
jmp
stos
test
nop
jp
ja
inc
shrb
jb
jo
arpl
test
loope
xor
test
dec
clc
dec
pop
test
pop
rol
dec
inc
insl
outsl
mov
pop
cmp
jo
pop
push
aas
je
adc
xchg
in
jecxz
das
je
adc
inc
mov
shlb
lret
dec
sbb
mov
pushf
sti
testb
or
add
dec
ds
inc
cld
cmpsl
js
lret
ja
rclb
pop
dec
aad
jg
jae
das
loope
out
ljmp
jp
xor
inc
mov
xlat
mov
insb
shlb
jmp
lahf
cmp
pusha
jae
jge
jno
xor
ss
cmpb
ret
mov
xchg
cmpsb
mov
mov
pop
fisubrs
xor
mov
adc
pop
pop
jb
repnz
daa
lods
mov
jns
push
mov
xor
lahf
cmp
adc
xor
push
jmp
xchg
lret
sbb
flds
mov
popa
fs
xchg
aam
xor
insl
adc
sbb
ds
sbb
push
fsubr
mov
cmp
dec
mov
jl
jnp
lods
mov
and
sbb
scas
les
inc
test
pushf
fwait
shlb
stos
stos
mov
mov
repnz
pop
arpl
jp
pop
xor
adc
sub
aad
fsubrs
imul
pop
pop
xchg
sbb
xor
rcrl
insl
dec
push
sub
push
cli
add
cmp
mov
dec
and
xchg
ret
insb
int3
sbb
es
fs
mov
sahf
imul
es
lret
hlt
loope
xlat
insl
push
cmp
or
cmp
add
adc
call
ret
push
in
dec
sbb
xlat
inc
rcrl
test
dec
inc
push
mov
insl
imul
aas
inc
sbb
push
lods
xor
dec
sti
in
movsl
push
fdivl
inc
popf
dec
mov
xor
rcrl
test
orb
mov
fbstp
ret
adc
in
inc
stc
or
dec
xchg
das
sub
jns
mov
test
ljmp
mov
xchg
pop
add
dec
mov
fstpl
jecxz
add
push
and
pop
pushf
add
sbb
add
jg
cs
mov
setge
mov
push
cltd
lock
xchg
in
stos
adc
aaa
mov
xor
push
ljmp
popf
gs
orb
xchg
xor
call
dec
popf
sub
shll
scas
sti
jbe
add
call
pop
dec
aam
sbb
psrlw
movsb
add
or
scas
xchg
lea
jle
pop
sbb
xchg
jbe
clc
sub
add
insl
sub
leave
into
push
call
test
js
lcall
mov
xlat
cmp
push
and
mov
sub
mov
cmc
ret
mov
inc
mov
and
mov
cmp
pop
cwtl
lock
lods
fstl
pop
adc
dec
mov
sti
inc
dec
lret
lock
sahf
pop
adc
add
xorl
cs
mov
cmc
jne
imul
push
xchg
je
fistl
pushf
sbb
sbb
push
movsb
mov
or
jg
mov
xchg
sub
stc
rcrl
xchg
and
or
inc
mov
jle
movsl
jns
inc
xchg
lcall
repnz
das
or
adc
fimull
fucom
fldcw
push
cmp
into
pop
adc
and
or
leave
pop
mov
sub
negb
xor
iret
pop
mov
inc
jne
adc
dec
fs
cmp
fwait
loope
cmp
stos
cmp
call
mov
sbb
out
subb
pusha
and
ret
int3
mov
loopne
add
mov
insl
loopne
mov
mov
ret
je
push
push
jae
adc
dec
sub
push
sbbb
jle
pop
mov
fabs
outsl
ljmp
repnz
pop
push
adc
mov
loopne
jecxz
add
rorl
or
lret
insl
fcmovnu
das
mov
sub
mov
dec
lahf
cmp
mov
mov
fsubrl
pop
outsb
pop
out
jb
xchg
cmp
leave
clc
loopne
push
xchg
inc
cmp
in
fsubrs
je
test
jmp
inc
add
push
cmp
or
sbb
jo
imul
mov
push
movsl
xchg
push
xchg
negb
and
pop
and
pop
cld
push
jno
sbb
lock
adc
push
mov
js
jmp
or
test
xor
aaa
adc
insl
cmpsb
movsl
xchg
xor
sbb
mov
mov
cwtl
pop
ret
mov
pop
mov
js
sub
jne
lds
push
push
and
scas
xlat
roll
xchg
in
pop
mov
mov
enter
iret
mov
xchg
lea
lea
dec
in
mov
mov
xchg
and
adc
inc
xchg
cmpl
cmp
add
addr16
fildl
cmp
arpl
mov
imul
subl
inc
sahf
xchg
sub
fisubrl
mov
icebp
xchg
sbb
mov
sbb
mov
xchg
scas
mov
fcoml
outsl
pop
clc
dec
inc
jo
xchg
icebp
push
test
gs
scas
dec
pop
je
mov
inc
dec
leave
adc
popa
jbe
out
cli
loopne
mov
inc
mov
movsb
sub
dec
lea
and
sub
adc
mov
imul
pop
inc
aam
mov
pop
or
add
mov
jecxz
test
jg
pop
outsb
adc
mov
imul
mov
inc
fsts
push
add
or
stos
xor
icebp
arpl
jg
iret
std
add
add
jnp
loopne
pop
push
pop
in
fwait
push
test
dec
mov
shrb
addb
jmp
ret
add
out
inc
repz
aas
int3
xchg
push
dec
outsl
mov
fucomi
push
and
sbb
fcompl
adc
adc
add
sbb
cltd
inc
mov
stos
aas
jmp
fsubr
cltd
mov
test
cs
testl
push
out
and
add
push
cs
pushf
mov
enter
jmp
mov
jbe
and
aas
xor
das
fdivrl
flds
adc
cmp
icebp
nop
pushf
jno
mov
mov
scas
cmpsb
mov
movsl
sbb
push
mov
cs
repz
and
shr
pop
xchg
test
test
jne
icebp
add
mov
sub
adc
dec
inc
or
mov
hlt
ret
out
inc
pushf
push
xlat
lret
or
inc
jg
fdivrl
xchg
cmp
std
dec
and
pop
test
inc
pop
pop
add
or
mov
ljmp
ljmp
gs
cmp
lret
pop
mov
mov
push
mov
js
xchg
cmp
jg
lcall
and
popa
imul
pop
das
mov
aam
inc
or
mov
ljmp
add
inc
cli
das
add
xchg
pop
setge
pop
adc
icebp
sbb
mov
roll
pushf
push
testb
pop
mov
add
ret
popf
and
cmp
int3
pop
inc
test
pushf
mov
inc
hlt
mov
test
pop
mov
jbe
testb
rcrl
jp
mov
mov
loop
xor
jl
fnsave
mov
pop
pop
lods
adc
or
push
fcoml
pop
movb
daa
and
out
or
roll
or
fs
repnz
jg
mov
iret
adc
sti
test
ss
int3
dec
imul
sbb
adc
aam
dec
mov
movsl
in
or
ret
notb
cwtl
xchg
dec
fwait
xchg
jmp
mov
mov
cmpsb
dec
in
mov
decl
push
lods
aas
jo
pop
inc
pop
xor
or
mov
les
loopne
sub
adc
jl
jns
jg
lcall
insb
adc
push
and
ret
addb
sbb
jmp
push
xchg
mov
mov
sbb
adc
cmpb
aam
add
xchg
pop
adc
pop
or
ret
negl
mov
sbb
cmp
lods
push
lret
or
sti
ljmp
fsubrl
jo
popf
icebp
movsb
sbb
fs
jge
and
enter
out
mov
in
aad
jmp
xchg
andl
popf
sub
jmp
stc
lcall
mov
push
jb
dec
int
inc
shlb
js
or
adc
aam
cmpsb
pop
mov
in
push
lret
pushl
pop
push
les
andb
hlt
push
imul
inc
add
or
xchg
cmp
mov
mov
mov
repnz
cs
inc
xchg
cmpsb
es
sub
jae
das
std
scas
cmp
pop
jae
jb
inc
mov
adc
insb
dec
call
clc
subb
cmp
mov
jecxz
xor
xor
inc
and
cmp
adc
std
or
iret
cwtl
jo
push
push
xor
aaa
aam
jg
inc
pop
xchg
mov
mov
outsl
stc
fstpt
inc
fnsave
sbbb
pop
and
loopne
js
nop
add
xor
sub
push
sbb
push
mov
or
cli
or
je
into
call
pop
push
push
pop
call
mov
mov
pop
lds
jbe
les
jp
sub
push
sbb
pop
loope
mov
jmp
mov
mov
add
lcall
sbb
or
into
xchg
test
push
pop
addb
int3
mov
sbb
outsl
mov
pop
push
xchg
or
sub
insl
ljmp
js
je
insb
mov
xor
or
xorb
fsubrs
jmp
mov
sbb
test
pop
adc
shlb
mov
sub
add
adc
add
mov
clc
vpackuswb
int3
inc
ficoms
test
or
adc
add
lea
fs
push
ret
inc
adc
jb
pop
add
mov
push
xor
inc
push
in
negb
push
adc
lea
mov
sub
push
js
mov
mov
pop
or
sbb
inc
aaa
xchg
adc
jg
dec
and
mov
add
test
dec
iret
mov
les
outsl
ljmp
dec
xchg
jne
div
mov
jp
push
fmuls
insl
mov
popa
jl
xor
sub
stos
lret
cmp
dec
shl
add
loope
dec
leave
icebp
add
mov
mov
data16
and
leave
xor
lret
neg
mov
pop
leave
sub
inc
mov
and
stos
test
jg
push
push
lret
fcompl
shll
cld
adc
int
sub
adc
pop
xchg
test
ret
test
fdivs
push
gs
movsl
mov
adc
icebp
addr16
rcl
mov
in
ffreep
mov
xchg
pop
js
jmp
and
inc
repz
and
pop
ret
or
jb
dec
dec
xorb
lahf
push
ljmp
inc
inc
aad
xor
and
lock
push
pop
sub
and
ds
ljmp
cmc
xor
cmp
int
sbb
fstp
or
inc
insb
adc
adc
mov
cs
int
das
xchg
test
divb
jmp
push
rcrl
mov
sub
stos
js
xor
mov
adc
cmp
arpl
scas
adc
add
aad
aaa
push
aaa
sub
fnsave
or
cltd
lret
or
xchg
pop
cli
insb
mov
pushf
sub
xchg
or
pop
inc
add
addr16
clc
movsl
stos
add
lock
sub
lea
pop
jne
jno
lahf
jmp
add
mov
sahf
test
cmpsl
call
cmp
sub
sbb
push
or
inc
or
addl
adc
nop
adc
inc
jle
cwtl
pushf
mov
push
sbb
mov
jp
dec
dec
lcall
push
scas
fadds
mov
adc
add
push
mov
push
mov
cld
popa
out
lea
adc
ja
jnp
aad
pop
or
clc
mov
jl
hlt
xor
hlt
pop
inc
bound
test
movsl
inc
subb
pop
hlt
xchg
pop
clc
add
mov
add
adc
pop
test
pop
stos
or
imul
cmp
fcomi
push
push
ljmp
pop
nop
pusha
pop
cli
push
in
fadd
notb
adc
bound
push
popf
jo
ja
ret
dec
test
dec
in
mov
mov
repz
mov
cmp
cmp
sbb
lahf
sub
ret
out
dec
adc
mov
jne
mov
mov
jns
or
sbb
ficoml
movsl
imul
ss
mov
je
mov
pusha
xor
cmp
stos
ret
or
fstl
aad
mov
mov
pop
sub
add
inc
mov
rorb
mov
xchg
xchg
js
add
sbb
cli
adc
cmp
and
lods
pop
loopne
lret
icebp
fstps
or
pop
cmpsb
inc
mov
push
pushf
stos
aam
dec
cmp
jo
push
dec
aaa
cs
pop
ja
adcl
jg
xor
imul
mul
mov
out
lret
cmpsb
lahf
add
mov
bound
arpl
aad
cmpb
push
jmp
out
push
mov
ret
mov
dec
daa
aam
pop
rcrb
movsl
mov
minps
add
int
or
in
js
jle
into
xchg
and
pushf
int3
adc
pop
lcall
sbb
jecxz
rolb
mov
inc
jae
inc
fcmovnbe
cmp
add
mov
int
mov
out
lahf
push
jbe
divl
jp
lea
or
rcll
iret
dec
push
sbbl
repz
or
push
inc
jg
jg
ss
test
push
fsincos
lret
add
adc
adc
push
aaa
fstl
xchg
inc
shrl
mov
jns
sub
jecxz
mov
mov
sbb
dec
lds
mov
les
mov
mov
divl
in
or
rolb
pop
cltd
sbb
jle
sahf
leave
and
mov
push
loop
mov
add
imul
fwait
loopne
jecxz
or
inc
inc
fistps
jns
dec
inc
movl
mov
out
xchg
inc
aaa
add
out
aas
les
jle
rolb
in
push
or
mov
gs
inc
pop
test
push
pusha
cmpb
jne
dec
sbb
sahf
or
mov
add
inc
add
and
xor
and
add
mov
push
sub
and
and
and
pop
push
or
inc
testb
test
mov
jmp
lea
into
xorb
mov
bsf
sbb
adc
sub
mov
scas
aad
cmp
push
nop
fs
outsl
icebp
cmp
clc
mul
les
add
aaa
xor
mov
les
pusha
icebp
mov
sbb
lret
inc
mov
mov
mov
sub
pop
push
and
test
or
push
mov
iret
pop
push
dec
sub
rol
aam
xchg
jne
push
leave
and
xor
push
cmp
movsl
mov
cmp
cmpb
pop
adc
loopne
or
sbb
test
pop
rolb
in
jns
mov
jge
mov
aas
adc
inc
adc
xchg
mov
fistl
cs
orb
jg
xor
mov
add
inc
pop
cmp
xor
sbb
sbb
fildll
outsb
ror
pushf
sbb
mov
mov
cmpl
adc
mov
sbb
out
jp
ret
rolb
cmp
jecxz
or
in
insb
push
or
fsubs
push
pop
adc
hlt
mov
aad
daa
add
ds
in
inc
insl
jl
cltd
icebp
in
cmp
pop
jbe
ds
push
outsb
push
subl
inc
mov
jle
mov
jecxz
inc
rcll
inc
jo
adc
stc
lcall
pop
xor
cld
adc
fisubrs
push
lds
or
adc
mov
pop
sbb
adc
push
scas
and
fistpll
mov
cltd
pop
cmp
fwait
repnz
int
out
loopne
cmp
inc
cmp
xchg
cmp
xchg
push
and
push
mov
pop
xor
sub
push
adc
sbb
or
test
aaa
fnstenv
scas
adc
test
adc
flds
mov
jns
mov
xorb
daa
cmp
ret
mov
loopne
xor
loop
inc
int3
shrb
cmp
scas
or
push
std
inc
dec
cld
add
adc
sub
aaa
fdivrl
adcb
inc
cmpsl
dec
scas
test
movsb
push
xchg
out
rcll
subl
push
mov
mov
rcrb
outsl
add
pop
push
mov
cmp
testb
push
pop
and
add
testl
jge
bound
mov
daa
and
mov
clc
in
loopne
adc
xor
hlt
mov
push
scas
rcr
xor
fwait
sbbb
inc
nop
pop
mov
lahf
sub
adc
loope
add
push
lds
les
insl
mov
xchg
call
fidivl
iret
movsl
test
jecxz
sarb
add
add
inc
pop
hlt
sbb
jmp
je
testl
adc
clc
or
adc
aaa
inc
inc
std
mov
into
fs
or
rorl
push
jge
xchg
mov
test
enter
test
pop
idivl
call
add
out
stc
mov
add
mov
rclb
test
push
aaa
lret
sbb
in
jg
jno
ret
in
inc
pop
sub
popf
loopne
pop
adc
int
push
cmp
mov
js
outsb
negl
mov
fistps
das
adc
cli
lcall
in
mov
pop
mov
mov
sub
sbb
inc
mov
sbb
adc
int
inc
in
pop
push
data16
mov
loopne
xlat
mov
clc
out
mov
and
ret
dec
jmp
dec
stos
in
push
push
jecxz
mov
mov
and
inc
aas
mov
lcall
mov
je
out
fdivrs
dec
icebp
mov
cmp
cld
xchg
add
push
rorl
xchg
sbb
pop
cmpsl
js
sbb
rcll
imul
into
imul
adc
pop
out
jp
pop
push
inc
adc
clc
sti
sbb
sbb
das
sbb
cmpb
or
mov
loopne
inc
pop
sbb
push
test
ret
roll
push
aaa
movsb
jns
cmovge
jle
sbb
xlat
add
cmp
add
aas
and
xchg
inc
emms
cmp
pushf
stc
lret
sahf
push
cli
inc
shrb
les
add
addr16
and
sub
inc
outsb
loope
jb
mov
mov
or
add
cld
mov
sub
mov
dec
sbb
push
in
cmpsl
jno
popa
mov
xor
and
push
mov
pop
adc
mov
cmp
bound
cmp
les
popl
loop
icebp
movsl
repnz
add
into
adc
sub
push
and
aaa
dec
jbe
jne
loope
adc
call
dec
xor
jl
loop
loope
push
not
ficoms
cltd
pusha
insl
ljmp
aad
lock
icebp
rolb
aam
push
pop
pushf
in
and
pop
inc
test
and
rcr
dec
adc
movsb
mov
xorb
xor
sbb
jne
pop
clc
adc
fsts
adc
dec
fiadds
in
adc
test
arpl
mov
call
inc
mov
aaa
push
outsl
add
std
ja
imul
testb
adc
int
or
nop
and
mov
addb
sbb
inc
icebp
rcl
dec
or
cmp
mov
dec
mov
mov
mov
push
push
jle
test
or
loopne
jl
nop
add
aad
pop
dec
subb
mov
push
and
pop
add
fldt
sti
lahf
pop
lea
add
add
jnp
mov
pop
push
icebp
inc
pop
imul
push
gs
dec
adc
fwait
or
fstps
rep
stos
pop
push
add
dec
sar
inc
or
jnp
jo
ja
jnp
pop
inc
dec
add
cmpsb
outsb
sbb
cmc
cmc
mov
pusha
cmp
iret
lret
js
ret
stos
fs
in
bound
mov
mov
inc
push
test
icebp
mov
mov
jecxz
jle
fildll
cmp
arpl
push
xor
mov
sbb
sbb
lcall
push
xchg
sbb
add
std
mov
mov
scas
ror
mov
xor
pop
inc
mov
sub
in
adc
fstpl
mov
sbb
dec
mov
jp
or
or
inc
popa
xacquire
popa
xchg
test
movsl
jl
mov
int3
or
imul
ds
adc
xchg
shr
and
inc
xor
and
mov
daa
dec
enter
xchg
outsb
or
mov
cmc
outsl
sti
enter
jge
iret
fcompl
inc
addl
cwtl
leave
enter
xchg
add
push
jmp
xchg
sub
lcall
and
negb
lods
addr16
xorl
mov
push
add
lret
cmp
and
push
xchg
inc
in
mov
adc
je
int
arpl
add
mov
or
sub
xor
insb
loopne
cwtl
push
dec
sbb
adc
mov
call
jbe
add
int3
mov
xor
mov
mov
aaa
inc
jne
ds
or
pop
adc
mov
iret
cltd
outsl
push
std
cmpsb
loop
adc
hlt
mov
and
sarl
dec
loope
mov
ja
and
xchg
sbb
inc
pop
nop
arpl
imulb
dec
mov
into
outsb
ja
xor
scas
jns
pop
or
les
insl
fucomi
cmpsb
pop
sub
sub
fidivrl
js
inc
push
and
jle
pop
mov
mov
andb
mov
arpl
inc
das
xchg
stos
sahf
cltd
rcrl
rcl
lock
sbb
fs
and
leave
jl
sbb
xor
in
aad
add
cmp
sbb
jmp
or
adc
ljmp
sub
callw
dec
dec
sub
test
push
xlat
fmuls
dec
dec
adc
mov
adc
and
pop
and
mov
pushf
js
cmp
jbe
cmpsl
outsb
xchg
idiv
or
inc
inc
jb
pop
seto
outsl
repnz
je
mov
mov
in
test
xor
cli
lds
jo
mov
cld
add
stos
inc
mov
lret
adc
lahf
mov
insl
imul
or
jmp
xchg
popa
pop
pop
pop
jo
scas
and
fildl
xchg
cmc
or
add
or
sbb
cmc
pop
jg
cmp
mov
cli
xorb
pop
fistps
outsb
sub
dec
pop
dec
sub
fucom
push
repz
call
or
inc
pusha
dec
outsb
xlat
jnp
ret
and
mov
dec
call
mov
and
cltd
call
dec
into
into
xor
push
push
sub
mov
and
mov
mov
test
adc
dec
in
and
inc
sti
mov
push
lret
mov
xchg
dec
iret
or
push
les
imul
dec
ret
xor
mov
inc
sub
rcr
aaa
loopne
fidivs
inc
outsl
mov
cli
insl
nop
or
mov
mov
fsubrs
movsb
ss
dec
xor
sbb
cmp
and
loopne
or
cmc
cmc
inc
jno
inc
in
addb
sbb
mov
std
mov
push
fidivrs
clc
or
aas
cmp
xlat
adc
out
mov
pop
jmp
xor
pop
js
mov
pushf
nop
sub
out
cmp
sbb
cmp
aas
pusha
pop
cs
mov
dec
adc
clc
push
cmp
dec
xor
aad
lods
mov
sub
sbb
dec
hlt
or
pop
sbb
xchg
xchg
lds
scas
js
inc
add
dec
gs
cltd
js
jl
ja
js
addr16
insb
mov
lods
mov
mov
aas
adc
pop
jo
jne
or
dec
mov
jle
in
sarb
or
cld
add
ficoms
cltd
data16
sbb
push
sub
arpl
les
push
or
cs
cmpb
mov
leave
int3
mov
outsb
add
imul
and
xor
adc
movsl
mov
leave
in
xchg
cld
adc
jl
pop
scas
jle
sti
fwait
push
into
das
insb
mov
push
mov
and
sub
inc
mov
loopne
pop
xchg
fcompl
add
sarl
jp
dec
ret
push
xor
mov
mov
in
mov
add
sub
push
adc
push
pushf
mov
sub
movsl
pop
outsb
lods
xor
stos
fildl
cmpsb
loop
out
push
cmp
pop
andb
xor
test
sub
out
insl
mov
inc
pop
and
addr16
rolb
out
and
mov
cmp
fs
jo
inc
movsl
push
jns
xlat
or
pop
fildll
ret
dec
icebp
mov
outsb
lds
push
mov
mov
pop
lods
call
xchg
xor
sahf
and
aad
ds
lds
mov
test
push
fs
rolb
and
adc
jnp
mov
in
fbld
add
aad
mov
jb
push
push
aas
pop
pusha
dec
les
insb
stos
popa
outsb
push
sahf
jb
icebp
in
dec
lret
call
and
xor
cmp
mulb
mov
loope
push
push
filds
jno
adc
mov
gs
mov
and
cmp
cmpsl
mov
in
jne
jnp
daa
les
jnp
es
adc
or
add
rolb
popa
mov
aaa
jle
ds
push
in
sbb
sub
push
and
in
fisubl
or
mov
imul
pop
shl
mov
daa
lret
mov
add
outsb
xchg
dec
pop
rorb
jecxz
adc
mov
mov
adc
pushf
test
and
inc
inc
sbb
test
inc
icebp
mov
mov
push
aas
mov
sbb
mov
jne
adc
adc
cmp
pop
fnstsw
or
cmp
mov
mov
mov
outsl
inc
pop
dec
mov
mov
mov
mov
jl
inc
insb
fistl
push
lcall
lahf
mov
add
pop
fdivrs
dec
rclb
mov
add
push
inc
cli
xor
adc
loope
xchg
imul
push
push
pop
mov
mov
repnz
adcb
enter
dec
inc
jg
iret
lret
mov
mov
incb
dec
out
xor
add
mov
dec
push
iret
in
sbb
mov
int3
jno
mov
and
pop
gs
aam
pop
out
push
dec
xlat
mov
scas
adc
sbbb
add
cwtl
mov
fildl
in
ja
jg
fwait
call
xor
mov
fbstp
popf
mov
mov
out
cld
icebp
mov
xchg
test
push
mov
pushf
fcmovb
loop
mov
inc
inc
fistpl
shl
es
mov
pop
cli
mov
sbbl
repz
cmp
add
shl
mov
sub
adc
cli
out
jecxz
sar
gs
pop
jo
test
mov
push
arpl
push
mov
sbbb
sub
std
rcrb
js
jle
out
clc
mov
add
mov
pop
mov
adc
and
aaa
fidivs
sarl
add
test
push
mov
insl
xor
iret
sub
test
jmp
into
mov
inc
in
mov
push
mov
add
sub
roll
adc
mov
pop
mov
jmp
and
pop
adc
push
xor
or
inc
in
nop
add
cmp
inc
dec
ret
mov
sub
aad
call
pop
test
mov
mov
inc
lret
push
inc
fiadds
int3
movsl
mov
mov
xchg
push
add
adc
mov
in
nop
popa
movsl
cmp
jmp
rorl
arpl
adc
adc
mov
push
pop
adc
mov
sbb
js
dec
fisubl
cmp
hlt
and
xor
incb
and
rcrb
mov
cmp
pop
mov
fs
pusha
pop
xor
imul
cs
ficoml
cmp
imull
lahf
ja
push
je
xchg
mov
cmpsb
scas
in
pusha
sub
inc
or
mov
bound
lret
add
rcrb
inc
xlat
and
mov
push
mov
sub
and
out
push
sub
push
fildll
xchg
int
add
inc
mov
fnstsw
clc
pop
cltd
xor
imul
arpl
or
xchg
enter
pop
jp
add
cmp
jo
cs
push
add
sub
mov
test
sbb
repz
lahf
pop
outsb
pop
loop
xchg
out
fisubrl
cmp
push
mov
pop
std
or
adc
call
sti
inc
push
sbb
clc
das
je
jne
xchg
mov
popa
pop
insb
dec
mov
shlb
cmpsb
mov
lahf
push
mov
fs
sbb
adc
sub
and
mov
sub
jmp
loope
leave
out
inc
xor
bound
mov
fwait
jbe
mov
subb
bound
sbb
push
testb
jo
sub
es
mov
inc
repz
cltd
fstps
js
sbb
enter
pop
movsb
divb
xor
pop
xchg
test
test
dec
mov
in
jnp
imul
insl
test
cltd
fs
movsb
cmpsb
lahf
push
dec
fcomi
fcomi
or
test
push
test
movsb
xchg
popa
adc
inc
xor
mov
push
hlt
and
sub
sbb
ja
and
out
and
jl
repz
jae
imul
shlb
push
leave
adc
adcl
mov
in
ficomps
inc
fistpll
in
rolb
pop
repz
ds
dec
pop
pusha
mov
jmp
pop
fs
fildll
cwtl
test
shrb
cmp
cli
mov
push
push
in
xchg
mov
add
mov
push
shlb
cmp
icebp
lods
rorl
push
inc
lods
js
out
aaa
pop
pop
cmp
ret
xchg
and
outsl
sub
sub
fistpll
mov
pop
push
or
fidivrs
sarl
jo
mov
lods
out
incl
fidivrl
fwait
cmp
mov
fldcw
test
hlt
sbb
mov
aaa
adc
xlat
out
jne
fwait
jge
mov
fldt
sti
test
test
test
icebp
pop
jle
sub
dec
push
fwait
sbb
jl
sbb
mov
pop
jle
cmpsl
arpl
sub
sub
xor
dec
filds
bound
mov
ret
fsubl
repnz
pop
test
cmp
int3
imul
xor
mov
jle
insl
popa
dec
or
lds
js
sub
push
and
negl
push
ss
jmp
mov
fisubrs
and
adc
dec
shll
imul
cmpsb
mov
aas
pop
cmp
mov
mov
xorb
insl
lret
or
dec
and
testl
repnz
scas
loope
adc
in
jnp
lods
push
jle
nop
mov
nop
fldt
insl
xchg
xchg
mov
outsl
loop
xor
sbb
push
push
inc
mov
mov
pop
imul
or
sbb
out
test
xor
add
fmuls
mov
jecxz
ss
dec
xor
negl
inc
popa
pushf
cmp
add
inc
cmp
in
mov
lock
mov
jp
mov
je
cs
ja
dec
movsl
mov
or
imul
loope
fisubrl
jle
cmpsb
popf
pop
out
xchg
incb
fiaddl
sbb
mov
aam
or
xchg
adc
addr16
inc
popa
adc
mov
jle
add
sbb
adc
ficoml
fdivs
or
bound
outsb
cmpsb
lods
sbb
mov
int3
xchg
mov
cmp
imul
mov
xor
mov
fisubl
lock
fisubrl
lods
cmp
aas
pop
sub
ret
jle
test
push
popa
movb
mov
xor
dec
xchg
lods
outsl
imul
jns
jmp
je
or
daa
jne
loop
dec
rcll
imul
adc
mov
inc
pop
daa
mov
pop
jge
mov
pushf
in
pusha
mov
iret
dec
jne
ret
mov
addr16
push
sti
inc
pop
addb
enter
mov
subb
in
cmp
jmp
mov
cltd
push
test
ret
scas
push
rorb
je
add
ret
fists
test
ja
jne
out
adc
jbe
push
ja
inc
js
outsb
aad
imul
out
in
js
popaw
xor
stc
jbe
fldl
arpl
or
lds
lret
js
add
ret
inc
rcrl
jno
add
mov
mov
iret
push
aam
std
push
mov
out
dec
jl
std
lds
push
jmp
inc
aas
rclb
in
lods
std
add
inc
jge
dec
jno
lds
and
push
xor
cmpsl
out
push
andl
ljmp
mov
and
or
sbb
push
or
mov
std
add
adc
std
outsb
insb
rcll
inc
add
adc
fmull
das
adc
and
jnp
cmc
stc
rolb
sbb
xchg
cmp
xor
lret
sti
loope
fidivrl
out
aas
lods
dec
pushf
cs
mov
call
movsb
lahf
mov
sbb
daa
fdivs
push
cmp
sbb
clc
jmp
stos
sti
push
and
pop
pop
push
lcall
push
xor
or
adc
sbb
sbb
or
or
or
pop
adcb
addb
je,pn
jbe
test
or
or
mov
or
clc
popf
das
sbb
jbe
xlat
aad
lret
push
dec
orb
icebp
add
out
in
cmp
movsl
lods
scas
sarb
je
popl
dec
sub
imul
xchg
nop
fdivl
jne
daa
xor
jo
cmp
jb
enter
xchg
lret
lods
mov
adcl
or
in
mov
out
in
mov
inc
es
arpl
pop
popa
addr16
shrb
les
jle
ljmp
stos
pop
mov
cli
pop
cld
mov
sbb
mov
inc
mov
inc
xchg
push
mov
test
dec
ret
pop
push
mov
cltd
push
scas
outsl
pop
stos
or
and
xchg
pop
jle
aaa
stos
lock
aam
scas
inc
test
aad
mov
jl
popf
push
push
rcrl
cmp
shlb
shl
in
mov
lahf
movsb
jno
or
fptan
push
sarl
addb
cmp
cli
cli
and
mov
add
insl
mov
cmpsb
mov
repz
lock
mov
test
pusha
xchg
hlt
adc
je
jne
push
xorb
mov
cmp
ret
test
push
xchg
scas
movsl
sarl
call
or
cmp
adc
test
push
jmp
fists
pop
rorb
adc
xchg
push
push
xchg
dec
subl
scas
pusha
and
fstpt
int
sbb
fsubl
jp
jbe
sbb
cmp
add
mov
clc
ret
out
pop
sbb
aaa
sbb
cmpsb
out
push
jbe
xor
in
add
cmp
orb
jo
or
pop
or
nop
cs
cmp
fstps
ret
fidivs
add
mov
loope
dec
ja,pt
lahf
push
cmp
inc
pop
or
cli
mov
jo
xchg
incl
test
subb
add
mov
sbb
lods
inc
sub
and
std
or
push
dec
lcall
loopne
in
scas
outsl
dec
xor
push
das
mov
test
or
jnp
push
insb
das
shrl
call
test
mov
and
mov
mov
clc
pop
sub
add
and
test
addb
loopne
xor
shll
hlt
les
lock
call
imulb
and
fidivrl
jbe
xor
xchg
lss
loopne
add
mov
adc
or
pop
dec
or
pushf
lods
stos
or
mov
push
lods
dec
or
inc
daa
clc
mov
jg
mov
cmpsb
ljmp
mov
loope
addb
add
cmc
fisttpl
and
shlb
and
sahf
pop
mov
out
cmp
movsb
push
rolb
jecxz
xor
test
sti
popa
fnop
jmp
cmp
push
inc
hlt
out
imul
inc
js
fistpl
adc
fcmovnb
add
jecxz
xchg
stos
cmp
push
dec
mov
xchg
xchg
nop
loop
sub
adc
or
idivb
std
pop
aaa
sbb
xorl
cmp
rclb
call
jle
clc
xor
shrl
xchg
ss
idivb
and
add
dec
cmpl
inc
and
popl
in
inc
syscall
jo
jle
inc
pop
mov
or
and
stos
pop
lret
scas
fdiv
pop
xor
cltd
inc
stos
loop
sub
ss
push
stc
rcr
push
xor
ss
or
xchg
mov
inc
jmp
arpl
test
xchg
push
push
icebp
das
push
adc
adc
insb
add
add
loop
ret
in
sbb
pop
mov
xor
or
jmp
mov
sbb
dec
ja
and
iret
jge
or
xchg
pop
mov
in
push
inc
rorb
popf
lock
out
or
lcall
mov
in
mov
jmp
mov
and
ret
pop
insl
sbb
add
arpl
mov
sub
mov
cmp
inc
jno
sahf
cmc
mov
fsubr
loop
scas
push
jle
inc
push
sbb
inc
adc
mov
jge
ss
test
xchg
dec
fnstcw
cmp
push
movsb
mov
sub
add
les
xor
fimull
add
arpl
repnz
pop
xchg
xor
test
fcoml
dec
mov
lods
push
dec
mov
push
add
ss
or
mov
es
test
dec
outsl
mov
pop
bound
rol
cld
pop
int
insb
pop
lret
push
pop
sbb
pop
in
or
call
lock
cmp
inc
in
inc
imul
insb
rcrb
sub
add
push
pop
cmp
cmpsb
mov
stos
jg
arpl
mov
pop
cmp
ja
or
dec
push
ljmp
lea
enter
mov
inc
cmc
hlt
iret
mov
xchg
repz
lds
lret
fisttpl
sti
aaa
bound
in
or
sbb
pop
icebp
adc
nop
jns
outsb
mov
cs
repnz
or
cmp
rcr
pop
add
pop
add
aaa
aad
pop
cs
add
jecxz
or
int
fstpt
pop
push
je
xor
rclb
repnz
aam
mov
mov
ss
sub
or
movsb
into
cmp
jno
mov
outsb
lods
je
jnp
push
jecxz
jno
adc
sbb
fldenv
mov
fdivrs
mov
pop
cs
add
push
and
pop
fwait
or
inc
lods
lcall
jle
loop
xchg
xor
adc
nop
mov
push
sub
cmpsl
pusha
sbb
stos
loopne
jmp
rcll
fisubrs
fstps
or
mov
add
hlt
sub
test
mov
ret
adc
mov
and
push
mov
cs
andl
ret
mov
bound
stos
je
bound
cmc
mov
pop
inc
in
mov
mov
cli
fucomip
dec
ret
adc
in
leave
js
add
lods
and
jnp
push
test
push
mov
and
subl
xchg
fldenv
sub
std
sti
and
push
xor
outsb
mov
rorl
push
int3
ljmp
lcall
pop
push
fiaddl
shr
or
xor
into
iret
xchg
cmp
fiadds
xor
clc
sub
push
js
pop
dec
and
push
cmpsl
jae
push
jns
ret
cli
repz
mov
jle
inc
dec
fcompl
mov
repz
mov
pop
fcomps
out
lahf
sub
cmc
dec
add
mov
xchg
stc
inc
jnp
push
in
mov
xchg
je
push
xchg
and
add
fdivl
add
mov
mov
mov
jbe
loop
sti
out
lock
mov
mov
mov
adc
jle
dec
out
shll
push
jmp
mov
test
out
clc
stos
xchg
fidivrs
add
push
test
mov
pop
mov
rcr
scas
mov
jge
mov
addb
out
xlat
jnp
mov
and
sarb
test
cmovne
jg
mov
mov
aam
sbb
fcmovbe
lods
not
ljmp
mov
idivl
repz
xchg
repnz
test
xor
testb
lcall
cmp
cmc
sub
gs
dec
cltd
or
jmp
bound
imul
jge
mov
scas
loop
lahf
fstps
add
call
rorl
outsl
pop
push
lret
into
cmovnp
jge
rorl
mov
insl
pop
jle
call
jb
mov
fcomps
fcompl
cmp
mov
fistpl
sbb
mov
xchg
jo
test
dec
fildll
push
pop
js
add
xor
and
push
pop
call
cmpsb
mov
mov
pop
or
pop
inc
mov
and
jl
pop
jp
icebp
push
bound
sarl
push
adc
pop
bound
das
push
xor
push
add
or
xchg
lcall
inc
mov
mov
or
sub
inc
mov
add
imul
xor
pop
es
jno
jnp
sub
dec
xchg
jg
adc
aaa
jnp
sbb
jmp
add
xorb
ror
mov
jp
loopne
inc
add
in
popf
outsb
push
fcmovne
test
mov
pop
push
jecxz
lret
call
jb
push
adc
push
fcompl
jecxz
aad
ss
imul
movsl
jge
sbb
mov
push
idivw
mov
sti
sbb
mov
xor
and
sbb
ja
imul
repz
mov
and
push
xchg
push
jns
dec
mov
push
and
dec
outsl
in
xorl
ljmp
es
sbb
loop
rcr
iret
ds
rcll
cmp
fdivrs
mov
int
push
ljmp
pusha
arpl
je
enter
xor
minps
pusha
filds
daa
or
mov
pop
and
inc
adc
pop
or
pop
jp
and
mov
dec
add
pop
js
push
test
mov
in
and
jle
data16
bnd
test
testb
dec
or
int
cltd
inc
insl
dec
inc
xlat
shlb
ret
mov
pop
pop
subb
sarb
jnp
jmp
arpl
loope
cs
test
push
shrb
lods
fstl
test
push
dec
dec
cmp
inc
pop
js
mov
enter
out
push
push
mov
jge
insl
cltd
inc
out
or
dec
push
dec
or
cmp
xchg
pop
and
pop
repnz
fcmovb
mov
inc
push
mov
loop
sbb
test
and
fdivrl
js
popf
dec
push
mov
cmp
mov
add
push
jne
stos
loop
xchg
lea
mov
xchg
cmc
xor
loopne
jge
sbb
jg
into
frstor
cmp
sub
pusha
daa
mov
sub
insb
cs
mov
pop
lds
mov
pop
push
dec
cmp
push
jno
mov
ret
loopne
dec
xchg
add
inc
mov
xchg
pop
push
cmp
sbb
les
cltd
ret
or
testl
loope
dec
sbb
repz
pop
pop
jl
js
orb
push
decl
movsl
cmpb
mov
rcl
in
pop
das
mov
aam
leave
mov
adc
in
lret
or
pusha
cmp
test
movd
and
cwtl
scas
pop
add
inc
xlat
std
add
in
lcall
test
ffreep
ret
mov
jmp
xlat
leave
pop
cs
adc
addr16
shll
js
jmp
dec
das
inc
inc
adc
mov
mov
push
and
cmp
ficomps
aaa
adc
lock
or
insl
mov
sbb
sub
dec
fstpl
mov
je
pop
sub
mov
add
call
xchg
insb
fcomi
xchg
loope
push
lret
jl
push
in
addb
outsb
incb
add
and
rcrl
fs
das
std
neg
scas
bound
or
jne
mov
mov
fstp
pop
pop
jne
or
pop
add
jmp
jne
cmp
fchs
cmp
fmull
loop
test
jg
rcrl
fists
sbb
hlt
int3
xor
shrl
loope
into
idivl
inc
aam
pop
add
leave
cmc
adc
inc
pusha
repnz
aad
sub
dec
stc
mov
cmp
jmp
stos
mov
scas
pop
adc
repz
jbe
mov
sub
xchg
ss
scas
or
mov
mov
push
out
dec
adc
in
adc
or
test
enter
shrb
jg
mov
jns
sub
je
push
mov
push
cld
inc
hlt
inc
mov
popa
xchg
xor
push
sub
pusha
cs
push
inc
ficoml
mov
mov
fnstsw
stos
inc
adc
ret
mov
sub
inc
cmp
clc
xchg
sbb
mov
rcll
add
sbb
mov
lret
adc
or
jl
inc
lock
jge
jecxz
add
movsl
mov
or
cli
test
mov
adc
xchg
mov
sbb
out
jo
add
xchg
test
stc
fwait
jb
es
sub
test
add
mov
and
push
inc
jg
xchg
add
fistpll
adc
pusha
std
sbb
push
inc
lret
dec
jb
push
sti
cmpsb
push
pop
clc
cmp
rol
mov
std
inc
dec
inc
dec
push
sti
icebp
int
addl
leave
repnz
push
adc
push
adc
cmpsl
pop
cs
and
xchg
pop
push
ja
test
cli
ret
addr16
xchg
shlb
sbb
insb
aas
sbb
xchg
pop
xor
sahf
sbbb
pop
mov
das
jg
cmp
movsb
mov
and
push
cmp
cmpsb
fldcw
js
lock
popf
mov
add
dec
push
ljmp
sbb
cmc
dec
or
outsb
or
test
iret
test
rolb
fwait
clc
xchg
jmp
insb
push
add
add
and
bound
pusha
mov
adcl
cmc
push
and
add
mov
in
mov
mov
and
jle
notl
mov
mov
ret
mov
test
sub
std
popa
ret
mov
aas
inc
cmpsb
jp
sbb
jno
inc
add
punpcklbw
or
and
lock
and
mov
mov
mov
incb
into
inc
mov
pop
and
pop
bound
std
enter
inc
dec
dec
mov
or
push
mov
mov
rcl
arpl
ljmp
jne
inc
cwtl
xchg
call
dec
clc
sahf
sub
lea
sub
sbbb
pop
cltd
dec
or
mov
lcall
adc
xchg
ret
push
sahf
xor
int3
scas
clc
or
stos
addb
jmp
icebp
inc
mov
push
sbb
pop
in
cmp
or
int3
je
call
sub
loopne
testb
pop
or
fnstenv
dec
adc
or
call
sub
leave
lret
xchg
jo
cmc
lods
mov
in
sub
stos
xchg
mov
cwtl
pop
aaa
fstl
xor
ljmp
xor
cli
or
mov
add
dec
mov
lods
sub
dec
das
cmpsw
pop
push
aad
add
sub
mov
notl
pop
mov
roll
mov
incl
adc
test
mov
shlb
jge
xchg
push
or
stos
mov
mov
test
push
lahf
push
push
frstor
push
add
jge
mov
stos
push
ds
mov
mov
call
mov
rcll
pop
cmpsl
push
fsubrs
dec
sub
mov
adcb
pop
aas
xor
fstpt
inc
jb
jb
jb
mov
cmp
xor
inc
dec
or
sti
sub
movsb
xchg
sbb
add
cmpsb
sbb
rorl
repz
push
cltd
push
push
outsl
rorl
inc
aam
faddl
lea
into
xor
pop
add
and
mov
sahf
lret
pop
lock
or
sahf
jno
jmp
mov
aas
cmp
dec
push
mov
inc
xchg
mov
fsub
das
fistpll
mov
add
les
adc
lea
in
test
cmc
aaa
and
xchg
mov
sub
nop
out
fs
xchg
pop
mov
pop
mov
imull
insl
jb
ljmp
pop
loope
push
add
ffreep
add
call
subb
das
psllq
xor
in
and
add
cwtl
sub
xchg
mov
je
dec
popa
pop
dec
push
stos
jae
mov
sub
adcl
jmp
add
push
add
gs
dec
icebp
pop
and
rorb
jmp
lods
pop
mov
push
js
mov
xchg
fcmove
stos
pop
fcoms
inc
push
and
icebp
mov
jne
repz
add
push
shl
scas
mov
fs
mov
add
push
push
xchg
out
stos
adc
mov
jb
add
insb
int
push
xchg
decl
xlat
cmp
jmp
jne
aaa
mov
mov
fcompl
fstpl
dec
decl
push
mov
dec
fimuls
adc
fisubl
imul
jnp
jnp
outsb
in
loopne
lods
jg
sti
cmp
adc
mov
dec
xor
mov
les
test
subb
cmp
push
ljmp
jecxz
dec
sbb
mov
add
movsl
scas
mov
outsb
jge
test
push
fcoml
gs
xchg
adc
sub
push
mov
or
lock
addr16
outsl
xchg
repnz
icebp
das
ret
jecxz
xchg
push
outsb
xor
xchg
jle
xor
xor
push
and
imul
dec
xor
dec
push
ds
nop
xchg
fisubrs
xor
and
daa
push
fnsave
mov
xchg
mov
jb
ror
or
das
sub
enter
roll
cmpsb
clc
mov
rorl
loop
or
and
into
mov
pop
push
bound
sub
mov
push
xorb
pop
dec
mov
cmp
int
fistl
push
sbb
sub
xor
jge
jb
enter
jne
pop
sbbb
fsubr
sub
iret
out
mov
jns
add
pop
mov
and
xchg
mov
sub
adc
sub
stos
loopne
cli
jo
mov
fldt
rcr
lods
cs
aam
adc
inc
mov
add
dec
pop
orb
pop
mov
sar
xchg
cld
jecxz
mov
out
adc
mov
lods
mov
adc
sbb
or
scas
mov
add
cmp
add
loope
and
inc
or
add
mov
jnp
and
jno
jmp
add
ret
lock
loop
das
lock
pop
repnz
lahf
dec
dec
fsincos
in
ja
or
dec
or
sub
test
push
inc
jmp
sbb
sahf
fnstenv
ljmp
inc
imulb
sti
ret
inc
and
loopne
cmp
mov
ss
pop
mov
push
cmc
mov
mov
sbbb
and
and
xchg
mov
cmp
cltd
lds
xchg
incb
push
cmp
cwtl
pushf
flds
fisttpl
mov
in
pop
outsl
cmp
pop
mov
leave
cmpsl
nop
andb
push
and
cli
imulb
imul
adc
mov
mov
sbb
mov
adc
pop
pushw
add
es
mov
pop
out
or
xchg
inc
adc
out
cmp
and
and
adc
ja
in
out
sub
sbb
and
xlat
mov
pushf
fldl
cmp
dec
and
sub
repnz
inc
mov
std
adc
push
inc
pop
fs
mov
add
aaa
addr16
ja
push
sarb
sbb
mov
jno
cmp
fcmovnbe
sub
icebp
pop
in
movsb
add
out
mov
cmp
lret
and
mov
insl
push
push
cmpl
pusha
sub
xchg
mov
fbstp
sub
mov
mov
pop
dec
icebp
push
les
bound
out
dec
mov
fldt
jne
xchg
mov
mov
in
sbb
push
add
inc
ljmp
enter
aaa
add
lret
je
adc
adc
adc
pop
aaa
pop
jno
in
xchg
imul
adc
es
inc
scas
vmread
cmp
and
add
dec
out
fnsave
cmp
insb
xor
xor
fstpl
cmpsl
adc
or
mov
or
jmp
jmp
xchg
jo
cld
cld
rcrl
adc
movsb
in
loope
mov
push
adc
mov
pop
mov
dec
pop
outsl
mov
add
push
rclb
mov
cmp
insb
add
pop
stc
aaa
jg
xchg
push
cwtl
mov
loope
insl
fcoml
icebp
addr16
cmp
scas
test
jo
or
jo
sbb
std
add
incb
outsb
sub
jecxz
call
mov
lods
mov
dec
inc
out
inc
fmull
xor
add
icebp
iret
mov
push
inc
mov
incb
inc
jp
mov
add
arpl
aam
xchg
lcall
push
xor
lods
xchg
mov
mov
adc
testb
arpl
pop
cmp
add
movsl
ljmp
popl
sbb
aaa
loopne
push
xchg
imull
dec
mov
push
xor
mov
dec
in
cmpb
jno
mov
push
lcall
adc
cmc
inc
sbb
clc
fucomi
les
nop
pop
out
jae
lcall
adc
nop
push
mov
dec
cmp
rcll
mov
xor
lods
add
daa
test
jp
fincstp
lret
or
mov
mov
adc
std
out
call
push
inc
mov
lods
in
aam
add
xchg
xchg
ret
jns
cmpsl
add
dec
inc
sbb
mov
mov
add
lret
sbb
mov
negb
cmp
sti
in
movsl
fistpll
pop
or
bound
popa
jb
hlt
in
imull
std
push
or
fisubrs
lods
push
movsl
pop
loope
xorb
adc
push
in
lret
and
push
xchg
jg
jb
lret
push
fnstsw
sbb
int
mov
aaa
in
sbb
jg
adc
mov
inc
sub
cmpsl
sbb
aas
sbb
inc
xchg
pusha
and
mov
inc
loop
add
roll
nop
inc
add
test
mov
aad
mov
mov
mov
inc
std
mov
ffreep
pushl
cwtl
sub
ljmp
and
movsb
dec
jae
lods
aas
push
jo
push
or
test
scas
adcb
stos
jbe
andb
jbe
repz
mov
sbb
in
inc
mov
ljmp
daa
iret
imul
push
jle
outsl
pushf
ror
or
push
dec
xchg
nop
adc
push
fsub
ret
insl
aam
into
in
sub
fwait
jle
outsl
imul
outsb
pop
ja
cwtl
add
adc
push
push
push
mov
xchg
add
stc
mov
sbb
mov
mov
mov
outsl
insb
sub
mov
jge
xor
in
std
cltd
and
pop
js
imul
ss
stos
insl
push
testb
cmp
jge
and
lahf
outsl
cmp
cltd
fsubs
fisubrs
cli
pop
ds
pop
cmp
fsubrl
jne
cmp
cmp
pop
sbb
pop
add
cmp
mov
cmp
push
mov
sub
push
sbb
daa
sub
and
xchg
in
leave
lds
fistl
or
test
inc
daa
xorb
daa
rcll
pushf
mov
cmp
std
outsb
out
xchg
enter
dec
scas
xchg
jge
sub
or
rolb
push
leave
sbb
and
fistpl
mov
shll
lock
sub
scas
cltd
cmp
pop
jb
mov
xchg
je
mov
repnz
mov
mov
int
into
mov
inc
fcoms
mov
pop
push
mov
shl
mov
adcl
cmp
add
mov
pop
jle
icebp
pop
cmpsb
in
xor
xlat
cmp
push
push
mov
inc
xor
mov
inc
jmp
ja
jne
pop
push
lret
push
lods
xchg
mov
mov
lods
mov
adc
das
addl
lock
insl
pop
mov
push
push
repz
add
fidivl
fistps
sahf
cmp
jl
pop
aam
xchg
lahf
ljmp
dec
pop
dec
scas
fistpl
sbb
inc
int3
inc
ljmpw
popf
jmp
rcll
out
adcl
fsubrl
sbb
mov
mov
scas
mov
sbb
dec
shlb
or
push
mov
lods
aad
mov
hlt
movl
mov
ja
insb
inc
mov
aaa
bound
inc
arpl
out
dec
and
mov
push
lock
sub
movsl
ficompl
jg
ljmp
and
das
cli
xchg
inc
call
in
xor
lods
orb
jbe
sub
ds
mov
dec
sub
in
mov
xor
push
xchg
sub
and
popa
pop
movsl
loop
lock
mov
in
pop
mov
rorl
test
cmp
aas
leave
xor
outsl
test
dec
mov
cmp
nop
lea
test
push
inc
pop
insb
push
mov
lcall
add
or
mov
mov
push
popa
pusha
mov
pop
inc
jne
movsb
push
andb
jns
xchg
adc
sbb
fstpt
cs
pop
decl
lahf
insb
mov
imul
fidivl
dec
or
pusha
call
lock
lods
out
adc
xchg
mov
mov
dec
jb
sbb
test
sbb
jns
and
push
sub
pop
mov
push
sub
add
mov
aas
adc
out
test
test
mov
ljmp
divb
push
insb
data16
out
fnstenv
inc
je
pop
sbb
gs
xchg
ljmp
sbb
lea
pop
pusha
jnp
push
mov
push
rolb
rcrb
mov
jns
fdivrl
cli
add
or
rolb
ss
test
jle
adc
dec
jg
xor
outsb
sub
leave
scas
inc
lcall
jmp
test
mov
movsl
dec
std
ja
in
leave
lods
mov
xor
lahf
shll
pop
fisubrs
stos
or
add
inc
dec
addb
mov
pop
lock
fcmovnb
xchg
mov
stos
fst
mov
jbe
sbb
mov
push
pop
incl
sub
xchg
out
adc
adc
jnp
scas
lret
xlat
xchg
inc
jg
xchg
jle
mov
adc
gs
enter
pop
cs
inc
add
cld
jno
cmp
ret
outsb
sub
mov
or
mov
mov
pop
push
mov
mov
mov
xchg
cmp
adc
mov
sarl
pop
inc
mov
sub
hlt
pop
add
daa
cmc
ret
outsl
loope
cmp
adc
jne
xor
jl
in
into
les
dec
cld
add
dec
jne
lea
adc
or
add
idivb
out
lcall
dec
dec
push
addb
in
iret
or
xor
test
cmc
fstpt
add
xchg
cwtl
mov
fisttpl
daa
popa
push
xchg
lods
dec
xchg
dec
push
arpl
sbb
jle
sbb
jns
loopne
xchg
fsubrp
bound
pop
or
add
sub
out
loope
call
lcall
mov
push
xchg
fs
cwtl
add
sahf
rol
inc
jmp
stos
and
in
arpl
cmp
jl
inc
shl
in
out
ret
add
pop
mov
dec
cmp
pop
es
aaa
clc
cmp
lret
clc
pop
imul
push
mov
cld
mov
pop
sub
es
into
cmpl
push
jecxz
testl
into
stos
test
mov
movsl
mov
pop
sbb
shl
lcall
fsubrs
ret
lret
cli
cli
pop
scas
fwait
pop
cli
cmp
pusha
jge
loope
shll
inc
cmp
inc
sbb
mov
mov
adc
dec
dec
add
test
jns
mov
and
mov
mov
mov
les
popa
sbbl
in
cmp
enter
bound
mov
mov
adc
pop
stc
shll
mov
ja
popa
cmp
mov
adc
mov
das
sbb
and
jno
mov
imull
ljmp
dec
jmp
sarl
ja
sub
inc
sub
mov
cmp
mov
mov
cmp
xor
mov
xchg
in
mov
outsb
sbb
mov
hlt
es
dec
fildl
push
push
add
orb
pop
loope
sbb
mov
or
outsl
mov
ret
add
or
in
push
adc
mov
ja
lods
xor
pop
jl
push
mov
stos
fwait
popf
in
inc
push
adc
pop
andl
jns
insb
imul
cmp
sbb
jmp
xchg
push
outsb
int
sarl
scas
lock
adc
cmp
mov
inc
mov
sub
inc
icebp
filds
adc
cmp
xor
out
jle
clc
out
out
mov
sbb
mov
pop
jecxz
xchg
mov
pop
lods
inc
je
adc
ds
std
loop
imul
stos
inc
aam
mov
les
cmp
es
add
pop
fidivrl
inc
leave
lahf
jecxz
aad
lcall
sbb
divps
mov
stos
adc
out
cltd
mov
cltd
pusha
test
mov
and
xchg
inc
lods
loop
xor
xor
dec
add
je
xor
cmpsl
enter
mov
movsb
ss
inc
sub
lcall
or
mov
icebp
pop
push
jo
or
sub
icebp
rcl
ret
dec
xchg
fdivl
mov
sbb
jbe
mov
outsl
sbb
bound
xchg
mov
and
lret
call
nop
pop
push
mov
test
scas
test
js
mov
jnp
pop
arpl
push
movsl
mov
clc
mov
insl
xchg
mov
jge
test
dec
push
es
jbe
add
pop
inc
fisttpll
fistpl
mov
cmp
add
lea
std
lods
mov
jmp
mov
stc
sub
lahf
push
loopne
xor
jns
dec
adc
mov
jl
mov
test
jno
jge
lock
pushl
xlat
decb
andb
pop
or
mov
add
pushf
pop
testb
mov
mov
add
cmp
pop
adc
push
lahf
pushf
mov
cmp
jp
loopne
fiadds
cs
sbb
jno
and
mov
inc
mov
cmpsb
lahf
pop
push
aaa
shll
insl
loope
cld
daa
add
out
jns
rorl
push
sbb
loop
movl
mov
scas
cmp
push
push
inc
push
fwait
inc
xor
add
pop
jl
add
mov
ret
int3
add
loope
dec
inc
in
loope
arpl
push
shrl
dec
sbb
jmp
dec
xor
loope
jo
sbb
stos
or
add
mov
imul
jmp
movsb
jb
fdivr
mov
dec
mov
sbb
cmc
xor
outsb
mov
dec
or
aam
mov
fidivs
in
data16
adc
popa
bnd
mov
inc
stos
sar
jns
out
rcrb
dec
push
mov
xchg
pop
ficoml
loope
cmp
sub
leave
clc
dec
je
sbb
rorb
or
lock
fimuls
arpl
mov
adcb
hlt
test
bnd
xor
das
popa
mov
cmc
subl
xchg
and
mov
cmpps
stos
pop
mov
push
aad
nop
ja
popa
test
adcb
pop
aam
test
sbb
jo
mov
xor
out
sub
gs
inc
and
sub
mov
inc
and
push
sub
mov
sbb
mov
rcrb
pushf
jns
out
sbb
push
test
pusha
cmpb
cmp
mov
mov
sub
push
sarb
loope
mov
inc
push
cwtl
xchg
fsubrl
push
dec
insb
pop
subl
cmp
inc
sahf
dec
xchg
stos
push
leave
aad
fsubs
mov
insb
movsb
and
jl
pop
push
mov
mov
fisubl
movsl
push
push
mov
mov
rcll
loop
jnp
push
cld
sub
das
cmp
and
or
out
aas
bound
pop
jecxz
push
ss
call
jge
lahf
frstor
push
lods
mov
loope
inc
lea
mov
push
xchg
popf
push
jecxz
or
jge
es
int
lock
rcll
shr
jb
xchg
nop
test
mov
rorb
pop
rcl
lds
pop
pop
sub
lock
sbb
pop
test
rcrb
pop
in
add
testl
sbb
lcall
lods
xlat
and
jne
sbb
jbe
jae
ficomps
and
push
je
hlt
out
stos
dec
aas
sbb
pop
push
js
inc
dec
add
push
fs
add
mov
ljmp
nop
movsb
stos
fiadds
pop
lahf
ret
andb
pop
mov
mov
cmpsl
mov
aaa
pusha
add
push
fadd
in
adc
psubb
cld
jae
pop
push
mov
arpl
fcmovb
int3
test
jno
jl
insw
out
fistl
bound
shlb
mov
cmp
xchg
add
cltd
sti
xchg
sub
push
adc
test
push
sub
shlb
fsubl
push
les
push
adc
clc
xchg
rcrb
mov
fdivl
add
jl
jb
xchg
ds
shll
shlb
popl
lods
cmp
sub
add
or
lcall
dec
push
jo
dec
and
scas
xor
push
pop
mov
fwait
jbe
daa
push
sub
cli
rcrl
sub
jne
jno
inc
loop
sub
sub
les
adc
and
push
call
in
mov
outsl
dec
push
sub
adc
adc
cmp
iret
leave
incl
xor
xchg
mov
jl
int
inc
mov
pop
in
mov
add
jmp
jne
inc
add
sub
insl
push
ljmp
imull
adc
lahf
je
cld
jl
cmpsl
mov
repnz
jnp
jg
push
xor
adc
in
int
mov
out
stos
dec
lahf
mov
outsl
sti
sub
cmp
pop
in
xchg
add
xlat
push
push
fsubrs
push
push
cmpsl
shrl
adc
adc
xchg
lock
jbe
ss
stos
incl
cwtl
or
out
in
addr16
sbb
adc
ljmp
cltd
jmp
pop
test
cmpsb
and
jae
jbe
setns
mov
add
orb
push
add
outsb
fisttps
out
pop
call
inc
mov
fdivrs
rolb
in
fdivrs
xchg
fistpll
or
pop
cmp
or
sbb
xor
andb
test
jp
in
loope
pop
into
aam
pop
bound
cmp
ss
push
insl
pusha
push
mov
cmp
mov
adc
inc
push
cmp
test
ret
addb
hlt
sbb
test
pop
imul
aam
out
aas
inc
push
pop
mov
push
add
pop
jbe
popaw
mov
sbb
push
icebp
sub
clc
in
ror
pop
sarl
xor
jl
notl
ffreep
lret
xor
test
test
ret
jp
add
lods
test
mov
cmp
mov
sub
pop
shr
jb
mov
pop
xchg
jp
push
nop
xor
test
add
or
and
test
push
ljmp
ss
adc
add
sub
cmp
in
xor
sbb
nop
aam
push
lock
cltd
pop
mov
cmp
sub
jmp
scas
aad
mov
add
adc
cmp
outsl
cli
mov
cmpl
sahf
or
add
mov
loop
das
mov
push
sub
ret
push
jnp
call
mov
jle
and
xor
mov
or
and
mov
pop
addr16
je
or
mov
pop
adc
test
mov
jg
outsl
ds
add
cmpsb
pop
ficompl
fcomp
rol
fisubl
js
dec
dec
jbe
add
jl
mov
mov
in
pop
xchg
mov
mov
scas
jle
lcall
inc
jge
xchg
add
push
mov
push
testl
add
cmp
fstpt
mov
xorb
insl
adc
addr16
lods
fstpt
fimull
stos
out
popa
jns
cmp
sbb
cmp
mov
sub
adc
xchg
and
lret
and
mov
mov
inc
sbbl
adc
stos
mov
icebp
or
mov
mov
pushf
clc
jge
jno
test
fbld
insl
push
cmp
adc
dec
xchg
jecxz
mov
xchg
mov
ss
dec
sub
pop
and
data16
xor
sbb
out
push
mov
in
movsb
jmp
popf
lea
sbb
ljmp
push
scas
fisttpl
pop
mov
jne
ljmp
sub
aam
mov
aas
or
cwtl
or
xor
push
and
or
mov
addb
rolb
fwait
ret
lock
aam
xor
je
mov
cmp
nop
cmp
inc
decl
xor
push
fxch
jecxz
insl
and
icebp
adc
es
and
lret
mov
in
imul
loopne
lret
cmc
and
sbb
outsl
shrl
enter
sub
aad
sbb
sbb
shll
jg
pop
int3
jmp
sti
lret
testl
in
mov
xchg
pop
fs
shlb
roll
mov
dec
test
orb
pop
sub
filds
les
push
cmpl
dec
mov
mov
loop
push
call
dec
cli
testb
add
pop
mov
push
fdivrs
sbb
mov
lods
repz
dec
pop
and
cmp
mov
add
adc
int3
mov
mov
cmc
dec
adc
adc
rcrb
ret
aad
shr
bound
xlat
cmpb
test
fcomp
pop
pop
clc
xor
sub
out
addr16
jbe
in
fsubp
das
test
push
jne
sub
out
mov
addr16
pop
add
inc
jle
inc
sub
push
inc
sub
adc
js
dec
lret
mov
aam
pop
insb
xchg
adc
sub
es
mov
inc
dec
push
xchg
inc
pop
imul
lds
stos
mov
ret
mov
es
cmpsb
mov
mov
insb
subb
mov
movsl
das
dec
mov
mov
popf
je
hlt
test
adc
in
repnz
cs
cmp
ret
dec
or
imul
test
xor
add
test
fadds
call
dec
pop
jno
sbb
add
fcoms
or
movsl
sbb
add
test
rcl
jo
sub
pop
mov
mov
hlt
dec
adc
icebp
loope
daa
jge
repnz
ficoml
mov
inc
shrl
sbb
fisubl
jmp
push
cli
je
jl
nop
out
mov
in
mov
pop
dec
icebp
dec
sub
fistpl
mov
cmp
movsl
xor
mov
jo
mulb
daa
xchg
add
pop
addr16
das
mov
sbb
mov
fwait
dec
ss
imul
adc
mov
adc
rol
push
icebp
jae
ss
mov
xlat
sbb
in
adc
aam
fisubs
mov
pop
or
popl
scas
inc
cmpsb
loopne
scas
pop
js
and
clc
movaps
jg
mov
mov
jl
or
inc
nop
fidivrs
add
dec
mov
shll
add
pop
std
mov
dec
scas
and
xor
lea
rorl
js
pop
int
or
pop
pop
mov
imul
sub
popl
cmp
aas
fidivrs
jecxz
xchg
push
sub
fsubrl
xchg
call
and
or
pop
add
nop
sbb
pop
jl
mov
leave
push
xor
mov
in
out
test
xchg
mov
sbb
mov
fbstp
hlt
les
push
inc
cmp
sbb
mov
fnstenv
inc
cmp
fdivs
enter
jae
arpl
mov
adc
ret
das
and
js
jmp
sbb
data16
loopne
pusha
pop
js
sub
sbb
nop
cmpsl
enter
cmc
inc
out
add
bound
rolb
icebp
pop
cmpsb
cmp
add
dec
mov
lds
fsubrs
inc
aas
imul
push
or
jno
loope
and
inc
nop
mov
mov
dec
xchg
sbb
lahf
or
int
mov
add
clc
fistpl
push
mov
cs
lods
out
sub
mov
jo
icebp
push
mov
fisubl
and
push
mov
mov
mov
mov
pop
add
jle
sbb
jns
or
jl
lcall
pop
in
outsb
insb
sub
mov
fidivs
cmpsb
in
xlat
popf
cmp
push
das
jge
pop
push
mov
enter
cmp
pop
or
mov
mov
inc
fnstsw
dec
or
mov
std
stos
in
mov
push
inc
cli
and
mov
push
jl
add
cmp
sahf
test
mov
outsl
sbb
and
adc
fsubs
or
cmp
rorl
mov
adc
sbb
inc
mov
hlt
ret
adc
and
mov
shrb
or
or
lcall
shll
rorl
or
out
jne
push
inc
je
push
sub
add
and
lods
shlb
add
popa
jae
cs
call
clc
test
mov
out
dec
jns
push
cwtl
xor
jl
sub
outsb
in
shrl
mov
popa
mov
jp
fcoms
mov
sbb
adc
and
mov
movsl
or
mov
test
iret
and
mov
push
inc
cmp
xor
enter
sub
js
std
insl
imul
imul
mov
push
add
fstpt
lods
dec
dec
xor
ds
imulb
inc
push
sub
cli
leave
aam
sbb
hlt
fists
sbb
mov
mov
or
dec
add
mov
mov
jmp
push
dec
xor
dec
je
stos
outsb
movsl
call
or
sub
gs
mov
push
ret
icebp
inc
fistps
repz
dec
mov
outsb
pop
psadbw
scas
xor
xchg
pop
lret
fucomip
mov
inc
xor
sbb
fcmovbe
outsl
outsl
cs
fs
bnd
and
ret
mov
div
sbb
ds
sbb
loope
inc
rcrl
pop
jecxz
inc
addb
aaa
cs
pop
and
mov
mov
lods
clc
jbe
icebp
aam
in
shlb
std
scas
and
inc
inc
sbb
pop
imul
and
sbbb
pushf
push
jg
and
and
sbb
pop
lods
out
cli
or
in
clc
push
stos
fistps
ja
lcall
sub
push
shll
in
mov
outsl
add
sbb
hlt
push
clc
mov
movsl
add
js
icebp
fwait
cmp
popl
clc
dec
mov
cmc
sti
loope
or
xchg
in
inc
push
popa
sbb
das
mov
cltd
lahf
and
test
pop
outsl
and
movsl
fcmovnu
add
mov
in
imul
and
adc
add
xor
icebp
cld
mov
pop
jg
rolb
push
and
pop
and
inc
mov
dec
popf
loopne
js
jbe
push
push
call
shrl
das
fcmovnb
test
jnp
in
in
lret
in
inc
add
jno
inc
mov
nop
mov
stos
xchg
push
push
mov
sub
or
add
adc
mov
sti
aad
mov
inc
cld
mov
fwait
rorl
add
das
cmp
in
out
in
push
xor
mov
sub
adc
jl
xor
cmp
inc
incl
test
pusha
or
cmp
mov
add
xchg
cld
outsl
xchg
imul
inc
inc
xchg
mov
lock
stos
push
push
xor
fstps
test
call
movsb
push
xchg
lcall
push
int
pop
jns
mov
dec
arpl
pop
ret
xchg
mov
adcb
inc
adc
push
pop
sub
ret
mov
in
pop
ljmp
xchg
add
xor
xchg
sub
loope
inc
and
lcall
mov
sbb
pop
jno
int
xchg
loope
lea
jbe
pop
xor
add
je
xlat
inc
xchg
xchg
cwtl
scas
mov
lds
push
aad
sbb
nop
shll
xchg
adc
lods
mov
adc
shrb
lock
dec
cli
mov
adc
fists
mov
mov
push
rcrb
into
lret
cltd
filds
mov
lahf
jo
out
push
mov
dec
pop
cmpsb
sbb
xchg
mov
xchg
mov
shr
insl
fistps
cmpsb
rcll
adc
pop
add
dec
push
dec
sbb
inc
jns
fwait
jo
imul
jnp
out
lret
scas
or
insb
add
push
int3
jno
jae
fistpl
aaa
push
adc
inc
cmp
loop
movsb
shl
imulb
xchg
inc
mov
stc
fildl
lods
icebp
jne
and
rcll
imul
mov
adc
pop
inc
or
in
fistps
mov
mov
adcl
pop
js
das
add
mov
pop
add
pop
mov
dec
dec
inc
pop
inc
addr16
sti
or
out
aad
es
cmpsb
add
js
gs
push
loop
mov
mov
fmul
pop
mov
mov
jg
dec
int
mov
push
jns
push
lret
test
dec
enter
mov
inc
xlat
mov
test
mov
mov
inc
ja
sub
pop
bound
stos
fidivl
test
lret
sbb
insl
out
pop
test
sbb
xlat
or
mov
push
mov
mov
xchg
push
cmp
loope
inc
xchg
xchg
xchg
mov
les
inc
cmp
xchg
ficomps
mov
clc
mov
add
mov
inc
and
or
mov
sbb
or
ss
mov
pop
xchg
loope
jg
jecxz
inc
nop
add
or
dec
les
mov
or
fmulp
and
aam
sbb
rcll
and
lock
jae
bound
push
and
pop
aad
push
adc
aam
sub
loope
cmpsb
jnp
es
add
or
and
jle
or
mov
pop
and
loopne
into
jg
sahf
mov
adc
jg
out
xlat
add
push
je
mov
test
mov
movsl
or
adc
push
sbb
pop
adc
ja
or
mov
or
mov
jns
mov
loope
dec
mov
inc
sub
jne
mov
jl
and
outsl
cmc
ljmp
pop
jge
mov
test
inc
or
xorb
push
pop
out
xor
outsl
xchg
mov
xor
pushf
mov
or
scas
mov
mov
inc
push
inc
loope
sbb
bound
mov
adc
xchg
sub
inc
adc
dec
sub
divb
ficoml
sahf
inc
in
inc
into
xor
shll
mov
lock
sub
or
fistpll
insl
push
repz
sbb
fs
mov
jge
insl
and
add
es
mov
add
mov
jne
inc
fidivrs
jl
in
dec
shll
out
cltd
stos
add
inc
ljmp
mov
jne
add
rcll
addr16
fs
mov
das
or
or
clc
inc
cmc
xor
iret
push
lods
arpl
stos
stc
and
cmpsl
mov
or
stos
sar
or
in
inc
sbb
mov
xor
inc
std
loopne
sbb
add
mov
push
in
add
adc
adc
icebp
inc
and
add
loop
daa
dec
mov
idiv
jae
test
aam
adc
mov
rolb
add
cmp
mov
mov
push
jg
fildl
xchg
call
rolb
dec
fnsave
and
fs
loopne
fldl
dec
addb
and
cmp
lcall
out
sbb
add
loopne
mov
sub
xor
mov
mov
scas
sti
sbb
xorb
push
inc
lock
fidivrl
jbe
push
pop
push
je
test
mov
lret
mov
add
loope
rclb
sub
imull
mov
push
pop
mov
leave
mov
in
or
fcompl
ret
imul
push
mov
sbb
in
sti
int3
fsubrl
mov
int
mov
fnsave
les
jno
cltd
pop
cld
ret
loope
mov
fsubrl
mov
inc
fisubl
xchg
lcall
cmp
mov
jmp
int
shll
mov
jmp
clc
add
and
xor
xor
inc
jl
std
jmp
xor
or
xchg
pop
iret
dec
repnz
subl
pop
and
dec
mov
and
mov
mov
add
push
ljmp
shlb
rcrb
add
or
paddusw
or
loopne,pn
xchg
push
cld
or
int
or
dec
inc
xchg
mov
jp
ss
mov
jmp
scas
rolb
jge
xchg
insb
lds
fs
and
mov
out
mov
test
mov
inc
xchg
lods
pop
outsb
push
orl
adc
cmp
lock
es
cs
sbb
outsb
sub
or
outsb
jne
inc
jg
mov
xor
sbb
ss
pusha
popa
mov
jo
or
out
xchg
adc
pop
xchg
test
insl
movsb
jbe
imul
push
add
jnp
cmpsl
scas
sbb
jp
pop
adc
cli
es
outsl
inc
hlt
dec
mov
sbb
cs
adc
adc
hlt
loope
int
mov
popa
adc
mov
pop
dec
fisubl
mov
ret
pushl
test
pop
xor
add
or
xor
xchg
cmpsb
mov
mov
rcrl
orl
mov
dec
sbb
lods
add
testl
mov
jno
mov
or
in
xchg
mov
cld
ja
fistl
xchg
jp
push
push
jb
xlat
and
adc
test
dec
fs
lret
or
pusha
push
add
pusha
mov
adc
sbb
mov
sbb
cmpsb
inc
mov
rolb
sbb
fwait
rcrb
lock
xchg
pop
mov
dec
cmpsb
ljmp
add
je
jmp
pop
rcll
add
rcll
shlb
sbb
lods
xor
add
test
divl
or
outsl
aam
lock
ficoms
clc
adc
jbe
in
push
lcall
movsb
sbb
call
push
sbb
sbb
add
sbb
in
scas
dec
push
mov
gs
cmc
clc
dec
mov
cltd
or
aam
pop
fbld
mov
mov
fistpll
xor
lds
shll
add
daa
mov
push
inc
sbb
mov
push
popa
jmp
out
iret
test
test
add
outsl
jl
mov
test
cld
sbb
arpl
push
test
cmc
jle
ret
aas
sahf
clc
inc
sbb
mov
ljmp
sbb
jnp
add
cld
cmp
cmp
into
out
sub
push
and
mov
cmp
mov
mov
ret
scas
xchg
ret
push
fidivrs
stos
in
das
sar
test
add
pusha
call
arpl
in
xchg
call
sub
dec
fildl
jns
and
xchg
testb
lods
lea
push
pop
xchg
fisttpl
mov
mov
ja
pop
push
mov
cmp
push
out
mov
lds
hlt
hlt
loopne
addr16
pop
das
mov
add
sbb
sbb
call
mov
sub
ret
sub
xchg
fcoml
push
inc
dec
and
arpl
push
fcoms
xchg
cli
xchg
mov
mov
ficoms
ss
mov
enter
mov
fbstp
lret
sub
pop
pop
int3
sub
push
adc
fmuls
pop
fildl
jns
xchg
add
aas
mov
or
push
mov
lcall
cmp
fbld
hlt
mov
iret
xor
out
into
loop
aaa
pop
cmc
out
adc
js
and
loope
ja
sbb
sub
ret
pop
pop
addb
lret
cmpl
push
fstp
lcall
ljmp
inc
adc
cld
adcl
mov
das
pop
std
mov
test
jns
adc
ljmp
xchg
mov
and
sbb
mov
sub
cmpsl
jle
loope
cmp
decb
mov
lea
inc
movl
adc
jns,pt
inc
push
loope
mov
faddp
shlb
push
sbb
fildll
mov
inc
cmp
mov
fdivr
cmp
lcall
jae
or
inc
mov
out
int3
mov
mov
adc
insb
xor
outsl
aaa
sbb
cmpsb
ficoml
or
pop
cli
ret
and
es
lds
inc
pop
les
clc
mov
rolb
jae
std
subl
and
addr16
movsl
jl
fisubrl
add
mov
out
adc
imul
dec
mov
sbbb
subl
out
out
and
aad
out
pop
icebp
mov
imul
mov
cmp
lret
lea
xlat
jmp
jbe
mov
sub
mov
cmpb
xor
pushf
and
fcmovnbe
enter
out
mov
mov
pop
les
push
lret
insl
and
int
dec
push
rorl
or
add
pop
loop
mov
out
push
shrb
cmp
mov
and
sub
sbb
insl
dec
divl
out
adc
mov
lods
fiaddl
mov
rorb
lea
test
in
mov
mov
sub
jg
sub
hlt
notl
ror
mov
mov
xchg
test
dec
jecxz
outsb
push
loop
in
ret
shrl
or
push
adc
jae
xor
sub
aas
push
dec
xchg
and
cs
dec
into
xchg
cltd
jmp
cld
fs
cltd
xchg
daa
pop
ss
pop
std
pop
enter
ds
aas
rorb
arpl
mov
sti
popa
gs
adc
shl
js
pop
push
outsl
mov
popa
icebp
adc
mov
mov
inc
push
adc
jge
nop
push
js
loop
sbb
pop
lahf
stos
nop
push
xchg
mov
fimuls
lret
push
adcl
sub
andb
dec
cmc
cmp
jmp
outsb
shlb
mov
mov
jns
lcall
mov
fwait
test
fistl
sbb
fs
inc
xor
aam
outsl
mov
adc
pop
push
pusha
rcll
movl
push
cmovns
sbb
mov
out
int
push
mov
inc
lea
dec
sbb
andb
bnd
lds
add
nop
bound
jmp
fimull
cld
push
push
shll
and
dec
fnstsw
es
les
and
lcall
jnp
outsl
jmp
out
mov
hlt
or
dec
outsb
mov
leave
mov
imul
jo
out
xor
cmp
lret
xchg
push
add
sbb
stos
fbld
sbbl
les
cmp
mov
mov
bound
mov
pop
clc
jge
pop
incb
es
outsl
sbb
test
out
lods
fdivs
adc
ja
sub
test
idivl
out
cmp
cmp
popl
subb
cwtl
outsb
xchg
dec
scas
push
je
aad
movsb
loop
and
pop
gs
jle
inc
iret
sub
cmp
out
aaa
ret
dec
mov
inc
out
dec
mov
call
sub
cltd
xlat
mov
nop
or
or
xor
or
cltd
push
adc
adc
cmp
xor
or
push
mov
lcall
sbb
clc
push
aad
mov
jge
loopne
stos
mov
repz
loop
mov
je
out
es
add
inc
fistpl
mov
das
mov
das
popa
sub
nop
inc
xchg
loopne
adc
xchg
xor
push
sbb
loopne
imul
call
fisubrl
push
sbb
stc
sub
fistl
sahf
xchg
mov
clc
movsl
jmp
dec
scas
bound
mov
push
add
sub
pop
jne
jmp
sbb
xor
push
stos
fbstp
sbb
fstl
pop
cmpb
adcb
stos
adc
dec
test
push
jo
push
pop
sub
lcall
xor
push
sbb
jb
sub
mov
or
je
inc
stc
pop
movsl
out
or
jb
inc
cmpsl
sti
cmp
push
jecxz
call
pop
push
xchg
adc
mov
sub
psubd
dec
fimuls
data16
ss
jae
mov
test
jg
mov
inc
dec
repz
and
push
pop
popa
movsl
lret
pusha
adc
lods
test
les
inc
mov
add
pop
add
lea
fisubrs
push
xor
repz
or
adc
adc
and
mov
mov
xchg
pop
pop
cmp
jge
mov
xor
daa
setns
out
mov
lock
adc
jbe
pusha
pop
mov
sbb
mov
push
je
bound
sbb
and
and
dec
xor
add
and
pop
mov
outsl
icebp
in
fstl
les
incb
push
xchg
dec
jae
aad
mov
add
shl
jnp
and
and
lods
xchg
outsl
movsl
add
sbb
iret
add
mov
add
sub
sbb
ss
push
and
lds
out
pushf
repnz
dec
iret
cs
outsl
std
jae
cmp
cwtl
fcomps
mov
add
dec
xchg
cmp
and
call
sarl
ss
sbb
cs
pushl
aaa
sbb
dec
nop
lds
enter
cmp
and
sub
dec
cmp
into
sbb
mov
push
jge
rolb
and
mov
inc
call
ja
push
sub
sub
rorl
lea
adc
dec
add
sub
roll
add
inc
repnz
dec
scas
or
andl
sti
fadd
pushf
cld
pop
cli
and
lods
enter
outsb
test
cltd
dec
das
aas
push
in
pop
xor
xor
mov
daa
lock
ret
ss
iret
cmp
mov
pop
adc
adc
fnsave
or
icebp
in
fdivrs
sbb
mov
adc
inc
xor
lods
fsubr
ss
insl
jl
ret
jg
xor
into
lock
inc
xor
cmp
addr16
imul
xchg
mov
lods
shll
push
mov
mov
mov
xchg
pop
mov
mov
icebp
dec
adcl
mov
sbb
decl
rorl
push
mov
aaa
ror
xchg
push
in
repnz
mov
dec
outsl
fcompl
xchg
test
pop
pop
movsb
and
jbe
mov
cmp
loopne
or
push
cld
outsl
ljmp
aam
push
test
pop
jb
inc
pusha
loop
ljmp
mov
idivb
pusha
aas
pusha
sbb
pusha
sti
imulb
fwait
imul
daa
adc
mov
hlt
test
cmp
repz
sti
mov
mov
inc
fcmovb
inc
shll
rcl
cmp
das
fmull
lds
xchg
jg
bound
incl
and
and
jmp
or
mov
call
and
movsl
pop
mov
loopne
call
in
xchg
outsb
fbstp
jecxz
adc
sbb
cld
pop
ss
mov
mov
add
addr16
lods
test
adc
dec
xor
fs
push
mov
negb
rol
gs
adc
call
cmp
fcomip
and
repz
cmp
shl
dec
and
gs
sbb
mov
pop
adc
loopne
xchg
mov
xchg
mov
jmp
jecxz
inc
inc
test
inc
push
or
lods
pop
push
in
mov
sti
push
adc
mov
aaa
add
in
mov
inc
dec
jbe
ret
add
jg
mov
imul
inc
pop
mov
or
mov
repz
inc
mov
push
stc
and
mov
sbb
cmp
xlat
pop
hlt
mov
dec
push
sub
mov
out
cli
loop
lcall
dec
das
pop
rcrb
mov
cwtl
ret
vpand
mov
clc
pop
push
fdivrs
mov
sbb
cmp
sub
mov
aam
push
out
inc
movsl
mov
lcall
push
clc
insl
push
call
and
hlt
shlb
out
repz
scas
jle
inc
fimuls
rolb
mov
adc
int
mov
pop
jp
outsl
clc
lahf
push
add
dec
in
dec
jp
adc
notl
push
jecxz
xchg
mov
dec
xor
cmc
mov
mov
inc
fwait
data16
int3
fwait
pop
push
push
pop
ljmp
push
or
fstps
stc
and
jg
loop
sbb
jbe
sbb
lcall
insl
loopne
and
or
test
and
mov
fmull
ret
clc
cmp
sub
or
icebp
rcll
push
cmpsl
sti
jg
es
inc
int
or
test
cmp
pushl
sahf
test
mov
inc
sbb
lock
sti
lods
insb
cmpsb
in
and
mov
fidivs
inc
pop
jl
mov
and
dec
xor
fcomps
lock
arpl
mov
mov
and
mov
cmpsl
orl
sbb
out
mov
cmp
insl
cwtl
imul
add
aad
mov
mov
loope
lret
mov
aad
cmp
and
sbb
sbb
pop
jp
mov
sub
inc
test
xchg
gs
roll
fbld
clc
push
shll
or
or
in
adc
or
jno
xlat
dec
or
add
mov
add
lea
pop
movsl
repnz
xchg
xor
pusha
leave
mov
push
cli
push
inc
lock
daa
dec
push
mov
mov
mov
cmp
xchg
stos
push
pop
ret
ss
inc
cmpsb
cmp
inc
scas
sub
mov
jae
mov
aam
sbb
stos
popf
pop
inc
fisubrs
xchg
cld
pop
test
pop
mov
adc
xchg
jl
jb
adc
cli
pextrw
mov
ljmp
mov
std
push
mov
fdivl
push
dec
add
stos
or
aad
ret
icebp
pop
mov
ret
cli
mov
lret
add
pop
popf
xor
xorb
mov
fwait
cli
popa
inc
mov
insl
nop
cmp
inc
push
pop
sbbb
sarb
xchg
test
hlt
mov
mov
pop
jnp
popf
mov
clc
or
pop
push
mov
jno,pn
movsl
mov
mov
clc
dec
push
push
and
not
notb
popf
mov
sbb
clc
mov
pop
push
bound
or
add
jg
pusha
je
inc
adc
aad
test
pusha
fs
mov
push
jl
bound
inc
or
inc
inc
loopne
gs
decl
pop
in
inc
dec
mov
adc
mov
jbe
mov
cmpsb
testl
xchg
mov
push
fildl
push
arpl
das
mov
push
movsl
push
mov
xchg
lds
lock
js
test
sbb
les
ss
in
data16
pop
movntq
jno
jbe
enter
sahf
insl
or
jge
adc
mov
pop
pusha
mov
jle
ljmp
outsl
add
cld
int3
add
imul
or
dec
lods
adc
stos
dec
mov
adc
mov
daa
mov
add
and
cmp
jne
insl
out
push
pusha
stos
push
cmp
sbb
shl
or
lea
data16
fdivrp
insl
fistl
sub
jno
ja
ret
gs
cltd
imul
test
mov
jmp
xchg
push
or
fcomi
pop
les
add
adc
or
insb
sahf
adc
loope
aad
xchg
sub
inc
outsl
fadd
mov
inc
mov
clc
mov
enter
or
mov
dec
scas
lcall
push
jmp
push
out
lds
mov
scas
pushfw
test
out
push
rolb
sbbb
rcll
xchg
les
test
mov
mov
push
movups
xor
call
inc
mov
mov
and
mov
ja
sbbb
push
jno
cs
adc
xchg
fdivs
and
fbld
mov
aam
fdivs
pop
fistpl
loope
in
es
loope
sub
mov
mov
or
rorb
pop
das
les
addb
mov
jns
jecxz
lahf
inc
enter
add
daa
xchg
jp
fistl
jmp
push
fisubrs
sti
mov
addb
cld
cmpsl
pop
sub
fisubrl
mov
mov
xchg
stos
mov
adc
outsb
push
or
adc
outsb
mov
rolb
xchg
or
or
cmovno
and
jno
cwtl
lock
xchg
rcll
and
fnstsw
inc
pop
and
out
sub
cmc
push
jmp
roll
adc
pop
cmp
jle
or
divl
fdivr
pop
sub
sti
jns
adc
iret
mov
orl
movsl
test
and
or
jmp
loopne
addb
pop
cmpl
xor
and
ds
push
sbb
cli
ds
sti
js
jg
lods
sahf
shlb
xchg
sub
loop
cmp
pop
dec
iret
add
scas
xchg
mov
mov
inc
xor
cmpsb
xlat
mov
aaa
rclb
adc
sub
flds
mov
icebp
fistpl
mov
fs
scas
mov
pusha
adc
sub
loope
test
sbb
stos
cmp
push
mov
arpl
push
mov
push
daa
adc
inc
icebp
out
sbb
repnz
mov
arpl
addr16
pop
xchg
push
mov
mov
out
mov
jne
pushf
sbb
mov
je
lods
lahf
hlt
push
adc
cmp
and
das
faddl
mov
arpl
stos
iret
sub
loop
hlt
pop
push
mov
mov
lea
loopne
inc
enter
push
jecxz
cmpsb
arpl
push
or
or
lcall
xor
adc
adc
mov
ret
xchg
outsb
xor
cmp
rolb
hlt
add
inc
mov
icebp
inc
cwtl
add
adc
xor
inc
or
sarl
jle
lret
push
mov
pop
push
movsl
push
orb
js
push
mov
inc
add
imul
mov
push
jmp
cld
pushf
push
cmp
jb
movsl
or
adc
push
and
pop
clc
inc
cmp
sub
sbb
dec
mov
lock
pop
cvtps2pd
mov
cmc
jmp
mov
add
xorl
dec
add
cmpsl
sub
cmpsl
sar
pop
movsl
push
xchg
inc
push
and
jmp
xor
test
callw
ja
sbb
stc
aam
jae
push
add
and
fstpl
push
imul
repz
jbe
and
xchg
loope
pop
add
outsb
mov
mov
or
adc
sub
add
mov
jo
mov
lods
jns
mov
sub
icebp
test
lock
dec
rorl
mov
xchg
mov
sbb
lods
sbb
aam
lret
fs
push
enter
and
inc
fidivs
into
or
rcr
nop
das
add
inc
cs
pop
sbb
sub
rcr
and
and
outsb
shl
pop
adc
xor
in
aaa
loopne
mov
fistpll
dec
inc
shlb
dec
mulps
div
or
sahf
mov
icebp
fistpll
push
dec
addl
mov
movsb
test
jecxz
or
add
shlb
mov
xchg
mov
push
popa
fs
or
in
push
fcomp
ss
std
adc
pop
jge
pop
cld
sub
pop
sub
adc
sbb
add
outsl
push
or
xchg
stc
jne
shll
mov
mov
jmp
or
icebp
xlat
xor
or
jne
jb
dec
jg
jo
add
test
add
fbld
mov
movsl
inc
inc
ret
lock
dec
mov
ret
out
clc
mov
pusha
jbe
jb
outsl
pop
cs
xchg
aaa
push
or
xchg
cmc
push
push
pop
loop
jl
fnstenv
cmp
cld
push
adc
cltd
push
dec
test
push
jnp
and
xchg
xchg
or
push
stc
jmp
adc
jno
jle
sub
or
clc
sbb
mov
push
mov
dec
mov
aad
addl
stos
cld
pop
adc
add
push
xlat
push
bound
pop
scas
inc
adc
add
xchg
pop
sub
add
rorl
mov
pop
call
jecxz
int3
push
push
cwtl
sub
lods
adc
dec
push
roll
add
test
sbb
in
test
shll
and
jp
xchg
sti
push
mov
push
push
and
outsl
scas
std
adc
mov
ret
xchg
add
clc
movb
rorl
in
xchg
and
and
lahf
cmp
sti
jne
or
lock
jne
xor
xor
sub
sbb
pop
aam
fucomip
aam
xor
pushf
xchg
add
lods
cmp
cmp
iret
mov
stos
test
int
call
push
push
xor
push
test
xchg
cmpsl
repz
mov
mov
add
inc
mov
and
rcrl
fcoms
data16
adc
adc
loop
mov
jbe
push
push
jle
sub
pop
mov
sbbb
insl
cvtps2pd
aad
mov
sub
or
or
int3
loope
mov
lock
pop
movsl
xchg
xchg
cli
pop
subb
mov
and
and
sbb
and
push
push
jmp
sbb
dec
pop
and
jmp
cli
aas
mov
push
lds
dec
fdivl
push
loope
push
cmp
std
bound
xor
mov
icebp
or
push
sbb
iret
cmp
mov
insl
pop
sbb
mov
mov
imul
aam
sbb
mov
dec
cs
lods
scas
stos
js
lds
inc
inc
mov
adc
outsl
push
fisubs
jae
cmpb
mov
cwtl
fstl
daa
outsb
adc
insb
and
mov
repnz
frstor
dec
mov
mov
lods
sar
movsl
dec
cmp
std
dec
and
xor
inc
fisttpl
bound
cmp
lea
fidivrs
jbe
iret
scas
cltd
popf
or
sub
mov
into
scas
sbb
hlt
loope
cmp
sbb
mov
outsl
sbb
inc
xchg
pop
or
insb
cli
add
call
adc
pop
clc
xor
insl
lret
xor
jg
mov
icebp
cli
fwait
sahf
ljmp
inc
aaa
inc
mov
loop
adc
out
pop
pop
xchg
mov
addr16
int3
imul
push
mov
jne
jne
push
add
les
jae
cmp
sbb
xor
jns
in
lahf
push
lods
outsl
data16
dec
ret
dec
push
and
mov
inc
xlat
lret
xor
fucomi
out
pushf
out
hlt
cmp
cmp
pop
test
inc
scas
or
fs
and
sub
cld
loop
ret
iret
in
pop
gs
sbb
mov
shll
mov
js
scas
in
xlat
or
add
test
outsl
incb
jo
in
popf
dec
inc
add
icebp
mov
or
js
test
mov
daa
mov
insl
pushl
aad
sub
out
divl
in
xchg
std
fdivrs
incb
inc
sbb
pushf
scas
jl
adcb
push
and
aam
add
mov
jne
repz
lret
xor
xchg
outsb
shrb
pop
int3
and
inc
int3
mov
push
cwtl
inc
test
xchg
mov
xlat
ja
add
push
int3
mov
cld
inc
pop
mov
arpl
ror
adc
arpl
adc
daa
and
popa
lret
in
pop
and
adc
mov
ret
scas
push
sub
stc
xchg
push
mov
mov
mov
mov
mov
call
add
adc
sarb
leave
push
jb
adc
mov
inc
push
inc
inc
ljmp
cs
enter
data16
xchg
xchg
stos
stos
jo
sub
and
jo
mov
mov
int3
pop
rsqrtps
xchg
out
xorb
jbe
xchg
arpl
mov
rol
and
push
or
pop
push
and
int
adc
jl
sbb
mov
sahf
shrb
fmul
mov
std
xchg
lcall
insb
orl
sbb
xchg
mov
jg
testl
xor
jmp
mull
dec
popa
les
inc
push
jne
icebp
lea
and
fiadds
sbb
das
dec
cmpb
stc
dec
lods
out
ret
mov
or
xchg
jb
or
cmp
cli
pop
enter
lret
pusha
je
bound
clc
mov
sbb
sub
mov
and
or
lcall
sub
push
inc
push
sub
add
aaa
pop
jmp
inc
sti
aam
stos
xor
shrl
mov
xor
xor
leave
ret
mov
cs
ss
adc
enter
add
lea
insb
push
aad
out
aad
outsl
mov
push
repz
adcl
nop
repnz
outsl
sbb
pop
stos
jns
call
xlat
pop
fbstp
cmp
lcall
add
push
sbb
ljmp
xor
add
push
stc
ds
or
mov
inc
test
stos
scas
mov
mov
xchg
ret
adcl
xorl
mov
fcom
in
neg
test
bound
jb
movb
adc
adc
shlb
cs
cmc
cltd
test
addr16
or
inc
je
jp
or
cwtl
and
sub
mov
push
jmp
divb
lret
pop
or
mov
out
dec
aam
movsl
imul
lds
cltd
push
js
inc
and
xchg
and
jecxz
stos
mov
mov
mov
or
sub
addr16
and
lock
aad
sub
ljmp
and
nop
push
lea
mov
mov
and
sub
inc
icebp
sbb
jne
sbb
pop
pop
inc
adc
ficompl
test
psllw
les
decb
scas
rcl
jle
cmp
or
cmp
jo
mov
or
lret
jecxz
mov
fwait
and
call
xchg
add
inc
mov
or
mov
pop
repnz
jmp
push
sbb
mov
and
dec
mov
jno
pop
insl
fiaddl
in
sbb
mov
jge
das
mov
jmp
pushf
sub
fildll
test
sti
rorb
sbb
insl
ret
pop
dec
imul
fwait
loope
stos
push
adc
cmp
add
mov
fildll
mov
sbb
cmc
xchg
cmp
and
or
fucomi
jp
sub
mov
lock
cmp
repz
and
je
call
ret
pusha
sti
es
and
sbb
cwtl
push
mov
out
jg
inc
jb
fistl
sarb
shl
out
mov
and
xor
xchg
mov
ret
not
dec
fnstcw
out
inc
inc
mov
mov
out
or
sti
cmp
or
adc
ds
xor
jbe
clc
pop
jnp
cmp
xchg
int
mov
ret
hlt
sub
or
fwait
mov
dec
add
xchg
jecxz
lods
fmull
push
mov
xchg
adc
in
fcmovu
jmp
rcll
add
outsl
scas
push
sahf
aas
inc
add
add
loopne
xlat
dec
mov
mov
jge
sub
add
push
sbb
mov
mov
add
adc
lods
pop
clc
cmc
push
jo
mov
mov
jb
sbb
cli
pusha
inc
pop
dec
sbb
pop
aam
lahf
aam
jns
or
cmpsl
lret
inc
push
mov
ret
fcoms
dec
cmp
mov
lods
mov
pop
test
iret
mov
shl
cmpsl
shlb
cmp
xchg
and
xor
mov
mov
filds
or
adc
or
mov
xchg
icebp
jb
push
dec
jg
data16
movsl
rcl
call
push
lds
dec
jne
test
mov
orl
jno
xlat
ljmp
out
test
shr
adc
cld
rclb
cltd
out
adc
jle
mov
xor
adc
sbb
dec
xor
es
dec
inc
jmp
rolb
jg
outsl
hlt
outsl
movsl
insl
xor
loopne
hlt
push
loopne
dec
adc
mov
or
daa
clc
pop
sbb
out
xor
lret
add
gs
xchg
pop
inc
out
test
call
js
clc
shrb
inc
icebp
int
stos
xor
adc
sbb
sbb
jge
push
cmpsb
or
lods
dec
sbb
enter
mov
in
pop
sbb
cmp
mov
mov
outsb
push
loope
add
insb
aaa
mov
sub
sbb
or
gs
and
adc
lds
fcoml
clc
hlt
adc
ja
mov
out
enter
dec
add
ret
xorl
pop
ss
pusha
inc
dec
inc
cmp
sbb
test
mov
mov
dec
mov
int
jne,pn
pop
loope
es
mov
ljmp
sahf
mov
inc
mov
and
or
call
insb
add
fldl
jecxz
xchg
nop
and
adcl
in
inc
mov
inc
mov
loopne
lcall
sahf
out
subb
adc
ss
mov
jnp
loopne
movsl
xchg
xchg
or
clc
jo
jnp
push
mov
outsl
sub
addb
mov
jno
xor
mov
iret
je
insl
mov
pop
mov
es
call
inc
dec
cmpsl
hlt
adc
push
dec
xor
repz
jbe
jle
sbb
cmp
inc
pop
jmp
dec
int3
test
mov
cmp
jbe
push
loop
sub
loope
dec
sahf
dec
push
out
pop
fucomi
jno
add
mov
loop
jge
mov
pop
dec
xorl
mov
lea
into
mov
cltd
popf
push
and
arpl
pop
mov
iret
idivb
js
inc
inc
jecxz
mov
notb
inc
addl
fwait
loope
loopne,pt
adc
xchg
jmp
xchg
mov
inc
mov
jmp
adc
ss
adc
mov
divl
fidivs
rcrb
pop
dec
es
je
imul
jge,pn
fmulp
push
add
repz
fistl
pop
shl
adc
jp
cmc
jg
hlt
dec
adc
jmp
pop
in
pop
jle
iret
mov
bound
jne
or
rcr
lods
dec
lock
pushf
mov
and
mov
mov
mov
orl
idiv
adc
push
in
mov
and
stos
std
xlat
jne
dec
movl
adc
sub
jle
mov
mov
inc
xchg
inc
jns
sbb
push
lea
mov
xorb
out
ds
imul
aas
int
sbb
mov
sbb
leave
inc
pop
dec
jg
adc
mov
mov
adc
inc
or
jle
adc
mulb
pop
xchg
mov
jne
xchg
mov
mov
jg
xchg
pop
add
and
pushf
cmp
neg
jge
das
inc
push
ret
test
pop
mov
mov
adc
xchg
jge
push
pop
rclb
or
mov
fwait
shll
or
loopne
sbb
aam
addb
in
repnz
fisubl
inc
mov
jbe
sbb
cmp
cmp
fiaddl
mov
adc
sub
fstpt
cld
fistps
jo
repz
xlat
add
movsb
and
shlb
inc
jle
mov
add
outsb
outsl
aad
sbb
fistpll
andb
jae
cmp
out
mov
sub
shrl
xchg
arpl
fdivl
dec
je
mov
adc
xorl
test
adc
dec
xchg
imul
test
inc
out
and
mov
adc
into
xadd
xor
sub
add
fsubrs
lcall
pop
aam
js
cmc
outsl
sbb
sbbl
jecxz
les
mov
adc
mov
pushw
or
pop
and
pop
loop
sbb
xchg
addb
jns
push
dec
jle
filds
and
mov
outsl
add
mov
xor
pushl
sarb
arpl
outsl
movsl
mov
ret
jp
mov
cli
sti
push
incb
add
sbb
and
ljmp
pop
mov
jecxz
daa
add
adc
or
popa
and
and
shlb
mov
sahf
popf
scas
es
or
mov
call
add
sub
push
fimuls
call
xchg
pop
test
mov
stc
les
mov
push
orb
hlt
shrb
xor
shll
add
adc
subb
inc
subl
outsb
adc
push
outsb
dec
insl
xor
iret
in
ljmp
ja
mov
fs
dec
ss
call
mov
stos
rcl
inc
fildl
pop
test
jecxz
or
cld
jns
lret
sub
add
adc
rcrl
mov
je
vmovdqu32
cmp
ret
mov
sbb
xlat
mov
lcall
mov
les
xchg
xchg
jmp
in
sbb
movsb
push
xchg
adcb
out
pop
sub
xchg
test
adc
xchg
shrb
lods
jg
push
jne
jp
in
or
push
add
add
cmp
cmp
sarb
stc
mov
movsb
lods
xchg
inc
std
das
insl
std
adc
popa
subl
inc
dec
ds
jl
imul
mov
and
sub
cld
mov
mov
adc
and
dec
outsl
push
jno
cs
pop
lea
cmp
lret
ret
add
sbb
js
jo
and
outsl
sub
cmp
nop
mov
xchg
inc
test
stc
push
adc
lock
popa
int3
or
push
ds
std
movsl
icebp
inc
jle
mov
pop
xor
or
je
imul
mov
addr16
pop
mov
fs
sbb
xor
jge
aaa
call
aam
lods
pushf
bound
cmp
xchg
imulb
fdivrs
dec
fsubl
and
loop
lret
sub
mov
cwtl
jl
mov
movsb
xchg
fistpll
call
cmpsl
and
or
inc
add
sbb
adc
pop
les
fucomip
and
rclb
mov
sub
jns
sbb
pop
das
ljmp
mov
lcall
sub
movsl
or
jge
mov
nop
inc
das
xchg
insl
or
mov
repz
rclb
mov
sbb
popf
mov
pop
sbb
xor
cs
push
pop
cmp
je
adc
mov
fidivl
xlat
push
fisttpl
mov
push
aaa
stos
call
pop
sti
mov
lods
hlt
xor
cmp
testl
xchg
stos
sub
mov
pop
std
push
fdivrl
mov
pop
mov
sbb
mov
mov
das
xor
ss
pop
movl
mov
cmp
fmull
scas
test
lret
jecxz
cs
push
adcb
add
gs
test
jecxz
rclb
xor
or
or
ficoml
add
fcompl
call
test
add
inc
and
sbb
ficompl
loopne
pop
xchg
das
std
pop
fmuls
les
arpl
pop
push
mov
inc
ljmp
mov
outsl
lahf
cmp
icebp
inc
iret
adc
in
xchg
movsl
jp
fistl
mov
rclb
jbe
mov
xor
adc
mov
enter
imul
inc
pop
mov
xor
inc
fcoms
sub
add
mov
fsubrs
mov
inc
mov
test
loopne
adc
stos
lock
pop
popl
sub
and
sub
js
leave
mov
leave
pop
adc
mov
aam
test
in
cmp
mov
xchg
js
mov
mov
mov
sbb
test
cmp
loop
cwtl
int
rcr
jnp
mov
dec
in
in
jo
test
mov
ljmp
lcall
or
jge
ret
lret
and
and
fstpl
lret
imul
dec
stos
fildll
lahf
movsb
adc
push
add
out
sub
xlat
punpckldq
imul
iret
sub
pop
mov
insl
sbb
js
fstpt
scas
icebp
mov
jno
dec
out
mov
clc
mov
jae
test
and
leave
int
test
adc
mov
cld
icebp
inc
mov
jg
enter
mov
call
mov
stc
js
push
dec
lahf
and
mov
xor
mov
sbb
push
mov
in
sub
stos
pop
dec
aad
xor
sub
or
je
decl
sbb
or
jo
or
add
das
sub
pop
push
movb
hlt
push
clc
daa
or
jg
jne
sub
jmp
cmc
rol
in
rcr
inc
out
popa
dec
int
test
lea
mov
daa
loope
cld
and
adc
decb
out
call
sbb
jb,pt
cmp
clc
cmc
adc
fidivl
test
shl
stos
scas
jle
mov
ret
loope
shll
cmpsb
sbb
cmp
sbb
movsl
test
jne
scas
dec
sbbb
inc
mov
icebp
outsl
inc
jl
push
ja
out
pop
sub
xor
sub
pop
mov
cld
sarb
pop
jo
xchg
stos
and
jg
stos
lds
xor
fidivrl
and
test
or
push
mov
rclb
fcmovnb
lds
cld
sbbl
cmp
leave
rcrl
aam
dec
cmp
shlb
cmpsl
adc
fstpl
xor
mov
and
cmp
mov
pop
pop
mov
mov
aaa
or
adc
mov
xchg
cld
fsubrl
jl
mov
orb
orb
sbb
addl
inc
loope
ficompl
push
in
sarb
add
jno
mov
fwait
leave
out
out
add
bound
mov
inc
sub
aad
mov
insb
insb
add
push
icebp
in
xchg
out
cmpb
pushf
fdivs
into
outsb
jbe
push
mov
inc
shll
cmp
testb
adc
inc
or
push
cmp
aaa
scas
les
rorl
xor
scas
adc
aaa
movsb
leave
jp
jle
andl
add
test
pop
fisubrs
jbe
add
sbb
add
xchg
xchg
mov
adc
lret
movsb
flds
jbe
pop
or
mov
xorl
push
sub
dec
xchg
lea
xchg
cmp
mov
in
add
cmp
adc
sbb
sub
popl
fwait
sbb
scas
cmp
call
sub
adc
push
mov
sysret
shr
inc
aas
cld
lods
inc
sbb
loop
mov
mov
dec
jo
and
pushf
fstpt
hlt
mov
ret
scas
cwtl
sub
fwait
subl
in
sbb
pop
ss
cs
pop
sub
outsl
ficompl
jns
push
mov
push
test
fwait
in
mov
lods
or
inc
mov
jle
inc
and
inc
sub
stos
or
inc
add
mov
jns
enter
xchg
mov
test
test
rcrl
out
push
outsl
insl
fistl
loop
jae
mov
push
aam
cmpsb
sbb
imul
int
call
mov
outsb
mov
sti
movb
in
push
push
outsl
je
jae
or
loope
adc
jmp
mov
sarb
lret
out
or
test
icebp
jae
fdivl
cmc
push
inc
enter
mov
mov
insb
scas
inc
rcrb
adc
inc
xlat
sbb
xor
adc
mov
lock
pop
fcomps
jbe
idivl
push
outsb
ljmp
daa
loopne
sub
int
mov
fists
sub
push
popf
roll
sbb
movsl
jecxz
mov
sbb
rcrb
clc
cmp
inc
cmp
xchg
adc
rorb
aaa
popa
loop
inc
jmp
movsl
test
inc
pusha
xchg
cmp
dec
ret
ss
lcall
notb
in
and
dec
sbb
inc
pop
shr
cmp
and
je
lds
fwait
ss
in
in
cld
fstl
and
and
stos
push
loopne
scas
xor
leave
sbb
mov
fimuls
dec
enter
cmpsb
cltd
xorb
pop
or
cmp
inc
mov
push
xchg
cmp
outsl
cmp
cmp
jns
jo
push
filds
cmp
cwtl
aad
xlat
lods
add
adc
xor
jecxz
jne
das
mov
push
sub
sub
adc
imul
xor
adc
inc
adc
sub
sbb
mov
fwait
add
mov
rclb
push
cmpl
sti
dec
push
mov
js
mov
cwtl
cmpb
mov
jbe
fcomps
cmpsb
fbstp
subb
gs
sub
inc
ss
in
mov
adc
out
lds
sbb
sbb
adc
or
pusha
mov
adc
xchg
jbe
xor
or
or
sub
aaa
mov
rolb
mov
add
nop
jmp
jle
negl
popf
mov
fsubs
lods
mov
sub
xchg
ret
xor
mov
ret
dec
enter
adc
cs
jg
sbb
fsubp
pop
stos
shll
loop
loopne
adc
cli
inc
test
and
jg
dec
loop
popf
and
and
and
sbb
push
pop
test
ds
mull
pop
add
repz
lds
pop
das
fiadds
inc
mov
or
icebp
lret
inc
lea
mov
mov
aaa
push
or
daa
inc
mov
arpl
ficoms
adc
enter
test
jp
dec
inc
loopne
mov
jmp
add
or
out
mov
add
insb
or
inc
mov
aad
jp
clc
inc
gs
loop
mov
sbb
push
int
nop
mov
sub
jb
test
in
cmpsb
or
push
cmp
adc
lods
or
mov
push
mov
and
sbb
dec
shl
cmp
adc
mov
call
aam
lret
repz
pop
adc
clc
jge
imul
push
ljmp
aam
jmp
jge
xlat
add
roll
and
mov
sbb
int3
in
outsb
loope
sub
xchg
cmpb
inc
or
mov
mov
push
ljmp
mov
faddl
push
inc
pop
or
inc
inc
out
mov
sub
stc
push
aas
dec
add
test
ja
dec
adc
cmp
jno
dec
xchg
sbb
pop
fldt
xor
add
mov
sub
incl
push
sub
lcall
popf
int
push
pop
loop
mov
outsl
mov
jp
out
add
std
add
jle
sbbl
mov
adc
jp
jb
sbb
xchg
lods
test
mov
inc
test
outsl
les
dec
cmpsb
jnp
clc
push
mov
mov
xchg
and
and
mov
cmc
mov
xchg
rolb
add
dec
popa
jbe
movsb
mov
or
fcoms
push
mov
mov
push
and
mov
es
pop
in
cmp
jmp
xchg
rclb
bound
imul
adc
enter
rcl
lret
jmp
gs
shl
inc
sbb
ss
pusha
mov
jmp
xchg
cmp
jp
icebp
rorl
mov
data16
jmp
shrw
mov
jbe
sbbb
sub
push
inc
lock
ljmp
out
scas
and
adc
imulb
addr16
or
je
sub
repnz
jne
dec
lods
shll
outsl
iretw
xor
sub
pop
pop
das
loopne
and
cmp
cmp
sub
ret
imul
sbb
fistl
mov
dec
or
aad
add
jmp
cmp
and
inc
add
mov
je
imul
mov
out
or
lods
adc
les
inc
fdiv
lods
rcl
imul
xor
sub
mov
std
jmp
and
insl
sbb
push
dec
dec
rolb
pop
mov
sub
pusha
arpl
ja
or
popa
mov
mov
mov
mov
push
loope
adc
xor
fdivl
loope
mov
or
push
inc
addb
add
mov
scas
imul
pop
push
nop
sbb
mov
cmpsl
push
fdivs
inc
cld
xchg
pushf
pop
testb
aam
adc
pop
pop
fs
sbb
andb
mov
cmp
jmp
cmp
mov
xor
fcmovnu
jl
pop
cmp
fldenv
dec
and
cmp
sbb
sti
push
ret
vmovlpd
push
mov
sbb
adc
mov
adc
hlt
or
inc
xchg
rol
sbb
add
add
add
dec
stos
xor
pop
inc
adc
sarl
push
pop
xor
js
je
cmpsl
dec
icebp
rol
push
mov
daa
cmp
push
movsb
les
popa
insb
cmc
adc
ds
push
insl
cltd
or
ret
cltd
inc
loop
js
or
pop
jb
rclb
das
ss
ja
cmp
aad
push
popa
inc
pop
icebp
adc
mov
pop
sbb
push
jmp
repz
lret
lret
inc
xchg
add
add
push
xchg
xor
adc
aad
pop
push
mov
ret
mov
or
cmc
lret
mov
pop
add
xchg
daa
add
pop
les
incl
or
loopne
xchg
sbb
add
es
js
daa
cmovs
inc
mov
outsl
aas
dec
or
mov
mov
and
sahf
push
mov
popa
aaa
add
mov
out
mov
test
inc
aad
cmp
add
cltd
arpl
add
insl
in
adc
cmpsl
fisttpll
insl
arpl
xchg
adc
clc
inc
mov
cmp
insl
mov
mov
pushf
xor
push
cld
pop
lcall
mov
in
xchg
sub
adc
jo
mov
int
outsl
mov
int3
adc
sbb
imul
jecxz
jae
xor
mov
imul
xor
inc
dec
and
je
int3
fsts
addb
cmp
or
mov
movsb
out
lds
inc
sbb
clc
mov
mov
sarl
out
jle
andl
xchg
mov
mov
pop
pusha
pusha
mov
nop
push
add
ret
inc
scas
mov
jno
add
mov
add
sub
mov
add
sar
cltd
pop
icebp
repnz
movsl
xor
or
jns
stos
mov
jg
mov
xchg
outsl
xchg
stos
xor
ds
out
fildll
aas
push
dec
dec
adc
mov
mov
sub
bound
clc
cmc
fsts
inc
and
mov
movsl
sbb
out
cs
push
xchg
and
mov
and
jmp
iret
loope
cmp
call
sbb
clc
repz
scas
lods
sbbl
or
jge
mov
ret
bound
iret
enter
data16
dec
loopne
jo
call
rclb
push
rolb
inc
inc
jnp
dec
int
sbb
icebp
pop
dec
mov
mov
cmp
pusha
ss
mov
xchg
inc
ficoms
andl
dec
xchg
pop
nop
mov
fwait
cli
or
pop
xor
dec
sbb
aam
fists
inc
or
nop
sub
pop
sub
leave
lea
std
pop
mov
rcrl
pop
xor
cli
aad
rcll
jbe
ret
cmp
es
mov
xrelease
decb
add
mov
push
pop
iret
outsl
aaa
out
sbb
test
repz
mov
call
and
loopne
mov
je
sbb
and
mov
add
add
imul
mov
and
out
out
loop
add
test
fwait
popa
mov
es
pop
loop
outsl
testb
mov
pop
dec
inc
loop
sub
jb
je
xchg
push
xchg
rcll
stos
fwait
add
mov
jle
adc
dec
xchg
ja
add
sbb
fistl
mov
jp
push
dec
xor
or
lds
add
stos
pop
js
sbb
inc
icebp
adc
rcrb
add
fdivs
cmp
enter
cmpsb
es
add
test
pop
jmp
decl
mov
cmp
sbb
ret
fisttpl
aad
int3
inc
sbb
outsb
push
xor
inc
and
xor
sbb
mov
inc
adc
adc
mov
sbb
jnp
push
sahf
lea
push
fsubs
mov
jle
inc
ret
rorl
add
out
xchg
pop
in
lea
cs
outsl
setle
jo
fs
pop
jae
test
jmp
sbb
and
addb
repz
sub
das
mov
stos
jbe
dec
fcoml
sub
pop
dec
pop
in
rcr
out
mov
push
or
or
test
loopne
std
inc
ret
inc
enter
and
fsub
imul
bound
jno
push
call
jnp
loope
test
push
and
or
push
outsl
fisttpl
jle
jmp
out
mov
sbb
fwait
rcl
or
mov
mov
adc
clc
ret
jo
mul
pop
and
mov
idivl
scas
sbb
jge
sbb
mov
xchg
push
inc
lahf
out
popa
ror
xorb
push
cmc
ss
sub
out
hlt
inc
mov
loopne
insb
xor
xchg
jp
adc
pop
sub
and
mov
ds
cmpsl
frstor
int
sbb
fst
or
sub
lea
push
aaa
mov
push
sub
sbb
test
arpl
add
repnz
push
push
mov
insl
push
xchg
fucomip
push
push
loopne
cmp
sbb
fcomps
dec
cmp
pop
sub
imul
lods
aas
arpl
je
cltd
fidivl
pop
pop
jmp
sbb
mov
add
test
pop
cli
inc
mov
adc
pop
jp
sbb
push
dec
xchg
inc
pusha
and
sbb
clc
out
mov
xchg
lret
arpl
shl
pop
push
cmp
dec
adc
aad
pop
call
test
mov
pop
xchg
fdivrs
int
int3
out
mov
xchg
push
jnp
pop
or
shrl
enter
pop
and
jo
push
xchg
dec
add
mov
test
pop
sub
pusha
mov
aam
xchg
out
dec
push
rclb
lock
sub
dec
jl
and
andb
xchg
pop
lds
adc
out
std
sbbb
push
andb
sub
sbb
faddp
lcall
dec
test
inc
popa
in
mov
adc
jle
lock
into
push
stc
repz
in
push
addr16
jo
mov
mov
jo
leave
ds
mov
notb
jb
call
cmp
stos
cmp
push
jno
xor
ror
jmp
insb
add
adc
lcall
cwtl
sub
sub
lock
mov
and
aam
inc
addl
mov
pushf
and
jle
das
mov
mov
mov
dec
pusha
mov
sbb
add
or
and
sub
popf
test
mov
cmpsb
push
xchg
scas
andl
inc
insb
repz
call
xchg
fwait
mov
lds
push
rol
jb
mov
xor
sbb
jbe
xchg
scas
in
lahf
aas
ficomps
add
scas
cmp
adc
ret
dec
rcrb
clc
iret
mov
fcompl
cltd
mov
lea
push
es
xchg
int3
pop
push
pop
cld
dec
inc
inc
test
push
movsl
mov
mov
leave
movsl
rclb
in
fldenv
pusha
call
mov
mov
es
jbe
add
call
or
cs
dec
mov
push
jge
mov
push
jp
xchg
orb
sbb
adc
out
cltd
adc
fistps
mov
pop
push
pop
aaa
adc
roll
mov
imul
dec
sbb
movsb
cld
rcr
ljmp
add
loope
dec
mov
mov
jne
sti
jle
mov
bts
std
add
enter
push
ficompl
loopne
cwtl
mov
je
lret
push
popa
mov
aam
out
out
xor
mov
xchg
mov
inc
scas
xor
push
xlat
cs
xor
mov
and
jae
loopne
cmpsb
or
mov
pop
ficompl
jp
es
jmp
jne
outsl
add
mov
or
dec
inc
es
outsb
stos
dec
test
pop
ret
push
and
lods
hlt
ficomps
xchg
push
push
lret
stos
scas
cs
pop
jl
inc
cmp
jg
sahf
lock
sub
add
xorb
push
jno
pop
cs
aad
push
ljmp
or
adc
fsub
dec
add
fisttps
and
push
imul
inc
adc
mov
fwait
popa
mov
dec
in
ds
fcoms
fucomi
mov
pusha
dec
xchg
push
rolb
icebp
adc
fcoml
psubq
jl
cmp
pusha
or
mov
sbb
imul
imul
out
sbbb
lods
cmc
inc
stos
sbb
xchg
or
or
loopne
js
adc
xor
and
aas
mov
nop
js
sbb
and
mov
fldt
and
inc
cs
pop
lds
xor
push
and
in
fildl
ss
subl
add
and
mov
mulb
popf
cs
dec
adc
out
push
lods
mov
mov
clc
js
inc
dec
inc
adc
push
pushl
ficompl
jmp
jno
jae,pn
or
hlt
repz
adc
lods
adc
jbe
xchg
mov
push
test
mov
xor
ds
inc
insb
mov
dec
rcll
mov
mov
add
lock
int
mov
jne
sub
mov
sar
orb
es
and
int
and
jecxz
adc
add
in
movsbl
stc
pop
sbb
and
push
inc
and
fadd
mov
lods
and
arpl
aam
push
sbb
sbb
mov
andb
xchg
into
or
arpl
pop
enter
xchg
movsb
stos
xchg
xchg
inc
adc
jp
fnstenv
es
dec
ds
outsw
rorl
aad
lret
cmp
jp
push
insb
out
adc
sahf
ljmp
pushf
push
ss
lods
mov
mov
ss
jo
in
leave
or
xchg
lock
adc
rcrb
push
or
js
int
std
xchg
movsl
pusha
xor
sub
lods
cmp
fistps
fisubl
cmc
int
xchg
imul
xchg
ficomps
insl
jns
mov
pop
push
cmp
movsl
cmp
mov
jecxz
jmp
fstpt
xchg
in
cmp
push
push
in
call
outsl
inc
push
add
roll
test
sbb
ret
fwait
jp
add
pushf
dec
cmc
or
xchg
js
scas
lcall
sbb
sub
push
lahf
jg
fsubp
cmpsl
xchg
sbbb
add
pop
popf
sub
adc
outsl
sub
js
cmp
fwait
ret
ficoms
sbb
popf
dec
jo
dec
mov
inc
xchg
jecxz
xchg
cmp
sbb
add
mov
rcl
push
sbbb
mov
roll
adc
push
sbbb
popa
and
mov
inc
test
add
add
mov
jp
or
adc
push
call
inc
and
cmp
ljmp
jo
out
jmp
and
mov
xchg
xchg
fisubrl
repnz
aam
mov
cmpsb
daa
push
leave
inc
push
xor
or
jae
insb
fiaddl
add
ret
out
or
pop
jbe
add
mov
push
insl
iret
cli
sti
dec
push
inc
into
mov
mov
outsb
xorl
lods
addr16
adcb
stos
xor
cmp
mov
push
notb
aam
pop
fstps
add
sub
lret
daa
movl
es
pop
jbe
loopne
and
adc
les
dec
cmp
roll
cmpsl
mov
and
lahf
cmp
mov
popa
mov
dec
cmp
fcoms
aad
les
jne
fistpl
cmp
pop
rorb
cmp
push
data16
orb
out
lcall
outsl
sbbb
rclb
jmp
push
mov
jmp
xorb
jns
lret
ret
ret
mov
or
mov
or
in
pop
adc
dec
pop
pop
xchg
or
nop
sbb
xor
loop
pop
xchg
mov
lock
repz
insl
mov
dec
mov
jns
lds
xlat
cmp
pop
shll
aad
xchg
adc
add
or
daa
dec
imul
and
dec
jbe
adc
lcall
xor
xor
imul
or
sqrtps
sahf
jecxz
fsubr
jg
push
xchg
mov
push
mov
or
loope
xchg
or
insl
je
je
mov
pop
mov
inc
ja
sub
rcl
clc
xor
mov
inc
xor
xchg
mov
ljmp
sub
jne
xor
xchg
insl
adc
nop
popf
mov
sbb
mov
stc
mov
test
mov
fucomi
lcall
xor
and
cs
orb
ss
ljmp
pop
mov
fdivrs
loop
call
adc
mov
add
test
fcmovbe
aam
test
bound
cli
push
sub
fs
cmp
mov
cwtl
lret
stc
push
test
push
fimuls
xor
icebp
sub
dec
test
cmp
jo
test
mov
imul
pushf
adc
cmp
pop
pop
add
fs
inc
gs
and
into
mov
lcall
push
fnsave
sbb
inc
stc
pop
push
leave
sub
ljmp
les
insb
fadd
int3
add
int3
lods
xor
mov
pushf
push
push
push
cmp
fcoml
pusha
aam
mov
test
and
and
addr16
and
sti
add
mov
sub
mov
sbb
adc
sbb
addr16
fsubp
xchg
xor
pop
dec
dec
lods
je
ss
insb
mov
notb
mov
ficoms
popa
or
push
insl
lret
loope
jne
out
or
push
pop
and
dec
pop
mov
rclb
dec
mov
push
jbe
jo
lock
xor
clc
mov
aas
lret
sahf
imul
lahf
or
hlt
cmc
or
adc
and
cltd
fnstenv
mov
add
test
ljmpw
cli
cmpsl
fnstcw
xlat
je
push
out
scas
jmp
daa
mov
lock
clc
cmc
sbb
inc
or
add
sbb
repnz
mov
in
and
sub
jle
hlt
and
push
outsl
inc
test
or
pusha
ret
mov
insl
cli
aam
xchg
adc
negl
stc
mov
sub
inc
ss
jp
inc
lea
push
dec
leave
dec
push
cmp
cmp
pop
cmc
pusha
add
add
push
test
sub
mov
mov
sbb
sahf
fisubrs
inc
movsb
inc
loope
bnd
jle
xchg
adc
sarb
sub
sub
psubusw
push
xchg
xor
jecxz
imul
xchg
pop
jl
in
fstpl
or
addb
ror
inc
pop
pushf
jmp
mov
imul
pop
mov
mov
and
loopne
test
lret
cmp
lret
cmpsb
pop
adc
test
push
fisubs
cltd
int
mov
aad
dec
inc
or
addr16
push
mov
jae
cmp
cmp
mov
xor
insb
xchg
cmpsl
jmp
movb
mov
and
mov
shl
ret
fmul
sbb
lods
dec
add
dec
sbb
adc
adc
ds
push
cmp
pop
jecxz
arpl
add
in
cmpsl
xchg
cli
mov
push
adc
hlt
lods
repnz
fwait
or
into
mov
clc
or
cmpb
jae
jl
test
popa
aas
insb
lahf
and
xchg
push
sub
dec
cmp
leave
pop
andps
bound
enter
adc
cmp
stos
clc
das
dec
push
sbb
push
or
and
gs
sti
mov
fisttpl
les
adcl
xchg
ss
push
adc
cmc
lret
mov
sbb
push
hlt
add
into
and
dec
inc
es
pop
hlt
lods
ficoml
js
sub
jl
in
cld
push
add
repnz
test
ret
insb
aaa
bound
xchg
lret
pushf
test
push
cmpsl
mov
icebp
test
mov
add
mov
add
sbb
push
adc
adc
sti
sbb
sub
or
mov
or
lock
or
mov
dec
lods
mov
loop
andb
in
icebp
pop
adc
push
data16
or
dec
cmpsl
stos
shll
pop
stos
cmpsb
jbe
cmc
ficomps
sub
push
aaa
or
xchg
push
pop
mov
insl
test
hlt
scas
gs
sbb
xchg
mov
les
adc
or
sbb
fistpll
add
insl
mov
div
jge
inc
mov
fstpl
addl
es
loop
les
cmpxchg
jl
mov
and
cmp
int3
lret
lret
movsl
ljmp
adc
movb
fs
fcoms
push
outsl
mov
ja
je
mov
lds
out
jns
nop
or
out
mov
push
mov
dec
and
xchg
mov
xchg
jecxz
sarb
fsubl
or
add
xor
jo
xchg
sub
cmpsb
frstor
cmp
add
push
nop
dec
lcall
jle
aam
adc
into
cmp
xchg
lret
lds
mov
sbb
xor
pop
bound
outsl
ljmp
xchg
pop
pushf
inc
jae
mov
sub
add
push
pop
sti
lods
and
mov
add
das
fisttpll
hlt
lods
push
jmp
leave
jecxz
pop
cld
push
in
test
pop
sarl
int3
aad
pop
cmp
and
and
pop
add
cltd
ficoms
pop
ds
adc
and
leave
sub
cmp
fdivs
ficompl
jno
push
cmp
xchg
enter
mov
and
add
aas
stc
out
sbb
mov
push
popf
test
out
xor
add
stos
add
and
hlt
cmp
cltd
clc
jge
add
aas
or
xlat
lods
mov
js
sub
add
scas
lds
aam
sub
mov
movb
mov
xchg
jmp
dec
das
mov
xor
jp
mov
xchg
xchg
pop
das
push
shll
pop
jo
mov
jo
rcrb
xchg
notl
shl
fistl
or
js
clc
pop
shlb
iret
xchg
loopne
fmull
fsubl
aaa
pop
bound
jo
mulb
pushf
push
xchg
add
xchg
add
cmp
stos
pop
test
mov
or
cwtl
push
shrl
pop
dec
add
rol
lahf
gs
inc
xlat
or
xor
add
int3
lods
addr16
mov
fidivs
mov
or
bound
sti
lahf
std
pop
add
adc
lret
and
mov
fwait
xor
xchg
xor
inc
sbb
aad
mov
sbb
loope
bound
nop
aad
push
loope
sbb
add
cmp
inc
fists
popf
cmp
add
mov
cltd
jno,pt
push
inc
popf
push
jge
xor
loop
mov
decb
mov
aaa
pop
xchg
call
adc
ds
xor
and
aad
icebp
and
xor
pop
add
push
mov
fldcw
add
mov
test
xor
iret
add
fisubrs
dec
subl
cmpsl
cmp
js,pt
xor
dec
addl
cmc
inc
inc
xchg
sahf
jb
xchg
dec
into
mov
adc
cmp
mov
ret
mov
add
dec
ss
loopne
sub
dec
pop
arpl
aaa
sbb
jo
mov
negb
xorl
adc
cld
xlat
dec
mov
fists
fisubl
cs
jge
jbe
bound
fdivl
shl
mov
test
cs
test
in
pop
aas
out
adc
push
in
fucomip
sbb
aaa
pop
or
inc
mov
loopne
shr
cmp
or
sub
mov
xor
in
xorb
sub
inc
fmull
frstor
test
mov
repz
lahf
adc
fcoms
xor
push
mov
push
inc
mov
pop
outsb
mov
inc
or
mov
lods
ret
in
or
lods
rol
loopne
out
push
lods
lahf
lcall
adc
fistpll
pop
sub
fsubl
sub
xor
call
xor
mov
push
pop
sbb
iret
mov
es
inc
mov
mov
and
jl
lcall
sbb
je
jb
addl
cmc
adc
mov
cmp
loop
fisttpll
adc
sbb
mov
fidivl
xor
xchg
lock
mov
pushf
inc
inc
dec
dec
push
add
sbb
mov
mov
repnz
andb
jno
jo
jle
xorl
fcomps
push
dec
mov
and
shll
adc
rcl
xchg
jnp
sub
jne
and
scas
test
mov
cmpl
and
inc
mov
or
add
stos
push
addl
sbb
fildll
pop
cmp
push
mov
pop
or
hlt
add
lahf
xchg
xchg
dec
inc
dec
adc
int
outsl
jne
and
adc
testb
push
lcall
sbb
aaa
fdiv
mov
jne
js
je
pusha
jp
outsb
mov
mov
sub
in
or
cld
sarl
pushf
sub
lds
and
adc
adc
adc
push
call
inc
test
jno
je
sub
mov
cmp
cmp
push
pmulhw
or
setns
dec
les
xor
cmp
scas
xlat
pop
jp
ret
jo
jo
push
dec
jge
stc
dec
xchg
xlat
mov
sbbb
mov
jo
push
imul
xlat
out
push
xchg
pop
sbb
lcall
fwait
cmp
sub
sbb
sbb
fistl
pop
add
mov
and
jmp
dec
mov
jle
inc
movsb
mov
jecxz
sbb
jne
mov
je
push
inc
pop
and
out
faddp
push
sbb
xor
orb
sbb
cmp
mov
decl
and
mov
xor
rcll
push
and
lods
mov
sub
ret
lds
or
loope
stos
fnstcw
out
outsl
insb
addr16
fcmovb
push
add
inc
dec
jns
fistpl
sti
and
outsl
sbb
pushf
sbb
inc
inc
push
pop
push
adc
inc
and
loop
push
insb
mov
or
stos
push
movsb
mov
sub
clc
pop
or
or
in
nopl
push
xchg
sbb
ret
push
sbb
lea
sub
mov
jnp
lock
jb
cwtl
dec
add
movsl
add
push
or
and
dec
pop
mov
mov
and
mov
adc
jne
jo
inc
ret
mov
jl
mov
mov
sbb
fcoms
idivl
pop
mov
pop
pop
andl
pop
test
cmp
xor
fbld
pop
sbb
push
sbb
xchg
fstp
inc
xor
mov
hlt
js
cltd
sbb
fidivs
sarl
pop
cwtl
jno
dec
js
and
or
push
mov
push
cld
add
call
mov
aaa
dec
mov
shll
mov
or
fidivs
push
ja
mov
sbb
xlat
cmp
or
adc
call
dec
aas
mov
cmp
icebp
scas
lods
or
push
iret
mov
push
punpckhbw
popa
daa
fdivr
subl
popa
dec
js
sbb
test
arpl
mov
mov
add
cli
mov
or
jl
sbb
cmp
loope
push
cwtl
adc
js
add
aaa
frstor
xor
cmp
icebp
sbb
jnp
pop
add
cmp
push
jbe
mov
add
lods
repz
pop
mov
les
outsb
jecxz
into
jmp
lret
sub
xor
cmpsl
fcmovu
aad
iret
icebp
loope
ss
daa
xlat
test
inc
popa
push
shlb
mov
fldl
push
sub
cmp
mov
sbb
inc
inc
les
inc
aam
ja
add
and
lock
dec
push
outsl
aam
inc
into
mov
sub
das
out
jp
xchg
sbb
fwait
sub
pop
adc
adc
add
dec
lahf
inc
and
xor
call
sbb
push
or
scas
icebp
mov
ret
cs
pusha
inc
ja
std
jecxz
mov
push
ss
btr
cli
pop
repz
ret
pop
insl
push
scas
mov
pop
aaa
sti
dec
insl
dec
loopne
movsl
mov
mov
stos
in
imul
test
inc
cs
mov
fs
loopne
ret
loope
jge
jecxz
mov
hlt
push
xchg
ret
popa
jnp
sti
jns
or
jnp
push
sub
jmp
bound
mov
pop
fcomps
adc
mull
mov
jbe
stc
ret
inc
daa
call
add
cmpsb
out
dec
pop
mov
pop
daa
imul
fldcw
lea
dec
add
mov
cmp
mov
mov
inc
adc
sub
js
adc
inc
mov
and
testb
pop
xor
mov
inc
add
xchg
jo
subl
add
add
ret
dec
sub
jl
add
add
jl
sarl
jecxz
lcall
jnp
add
repnz
movsl
mov
mov
in
inc
add
ret
lret
insb
mov
adc
mov
insl
mov
xchg
push
adc
fcomps
pop
js
sbb
call
subl
loop
and
and
mov
fsubrl
push
pop
mov
xchg
pop
test
outsl
mov
cmp
int3
aas
fdivrl
add
ja
je
pop
mov
jne
xchg
mov
jno
scas
xchg
add
test
int
xchg
gs
xabort
imul
adc
lock
mov
sub
stos
inc
jg
xchg
inc
aam
je
lock
jp
mov
test
fcmovnbe
popf
in
sub
call
inc
pop
mov
add
cmpb
push
adc
push
cmp
jl
cmp
xchg
pop
out
es
add
inc
nop
int3
pop
js
dec
sbbl
add
jle
and
pop
add
aam
cli
ds
test
lahf
stos
movl
jo
and
cmp
pop
fcomps
jb
and
mov
in
pop
mov
clc
fildll
mov
fwait
pop
or
call
ja
or
out
shll
push
mov
push
int
adc
sbb
dec
mov
decl
cli
mov
push
sbb
adc
sbb
jl
push
pop
adc
push
shll
inc
cli
inc
or
test
push
ret
add
sub
push
jecxz
insb
pop
xor
fwait
adc
inc
lea
lret
xor
lods
cmp
inc
popa
inc
add
scas
mov
dec
dec
sub
daa
dec
sbb
sbbl
xchg
sbbb
test
test
mov
das
cmp
push
test
fdivrs
pop
std
sbb
mov
fwait
and
jge
xor
jns
dec
inc
cmp
push
icebp
std
ljmp
add
ss
inc
mov
je
xchg
aaa
repz
sahf
xor
dec
fnsave
and
dec
pop
push
or
mov
push
mov
ljmp
mov
mov
jb
mov
cmp
push
cmp
pop
lahf
es
push
mov
jmp
mov
pop
or
adc
and
cli
sbb
test
add
cmpsb
loope
lods
into
jno
ret
fwait
shll
push
aam
jnp
js
push
xchg
xchg
rcrb
std
std
add
xor
lea
mov
push
neg
iret
inc
add
lds
pop
clc
rorb
or
add
xchg
out
movhps
xchg
and
add
add
pop
into
insl
jge
mov
dec
in
push
or
cs
cmp
rcl
arpl
or
aaa
lret
push
xor
lret
outsb
sbb
add
sbb
inc
adc
outsb
lret
cmpsb
call
leave
cwtl
fisubs
pushf
xchg
sub
sub
mov
xor
inc
adc
lcall
sbb
imul
xorl
scas
dec
int3
xchg
push
js
pop
jge
dec
mov
jl
jne
popf
leave
xor
stos
loop
dec
mov
inc
icebp
push
lret
cmp
rcrl
insb
in
test
mov
inc
xlat
mov
cs
sbb
sub
loopne
adc
pop
lcall
lahf
jo
cmpsb
movsl
cmp
add
mov
test
icebp
test
ret
iret
add
int
inc
nop
lock
adc
pop
imul
sbb
push
pop
call
mov
mov
out
cmp
mov
pop
fcmovnbe
mov
lock
sub
ljmp
mov
sub
jle
clc
daa
rcl
push
sub
out
addr16
mov
xchg
and
adc
sti
mov
mov
sbb
pop
inc
insb
stos
subb
in
das
mov
stc
rorb
cmp
sti
push
jo
xor
arpl
inc
outsb
imul
mov
clc
xor
jbe
jge
sbbl
jno
and
aad
xor
pop
mov
movsl
je
rclb
mov
adc
psubd
sub
icebp
push
pop
mov
sbb
out
mov
xor
icebp
mov
pop
xor
push
adc
dec
jo
out
jg
repz
rcr
add
test
enter
sbb
arpl
femms
push
pop
cmp
ret
and
or
sbb
fcmovne
xchg
push
xor
push
push
jno
pandn
fsub
cs
and
or
sub
aaa
cld
and
int
rcrb
mov
insl
add
adc
xor
mov
or
add
and
inc
int3
repnz
and
cld
fldln2
outsl
fucom
fidivrs
fs
xchg
cmp
aaa
pop
jb
aas
push
js
sub
clc
into
faddl
mov
push
ds
jp
jg
pop
clc
or
jno
lcall
in
jle
adc
es
stos
or
ret
jne
jb
and
aas
ja
ljmp
lea
mov
cmpsb
nop
add
adc
xchg
aad
push
mov
popf
in
jp
int
popa
sub
and
andl
or
pop
in
test
nop
push
aad
fsubs
les
mov
sbb
lea
decl
insb
mov
or
adc
inc
jmp
sbb
insl
xchg
call
push
adc
shrl
inc
fcmovnbe
mov
and
popf
inc
jp
addl
cmc
cmp
ror
mov
scas
pusha
adc
push
pop
fidivl
addr16
sub
fwait
gs
adc
push
das
adc
clc
push
push
jnp
aaa
inc
mov
xchg
movsl
and
nop
insl
aam
cli
ficoml
cmp
test
mov
cmp
add
loopne
jecxz
and
mov
invd
sahf
stos
ds
cmc
inc
lods
sbb
test
sub
jne
rcl
add
daa
pop
xor
outsl
ds
or
dec
insb
into
aaa
inc
out
push
aad
fstpl
push
xchg
outsl
push
cli
mov
push
add
and
outsb
lea
mov
push
inc
mov
jle
jp
aam
mov
cli
out
mov
addr16
mov
lock
fs
add
mov
and
add
repz
push
inc
popa
lock
enter
in
loope
adc
mov
sbb
adc
in
loope
repnz
aam
pop
idivl
pop
dec
lock
jmp
push
loope
adc
cmc
sahf
push
mov
xlat
dec
aas
and
jno
pop
je
mov
insl
dec
sbb
pop
xchg
lret
test
outsb
and
gs
aad
iret
pop
lret
mov
mov
loopne
push
aam
repnz
sbb
cmpsb
mov
and
sub
sbb
sub
inc
insl
fsubrs
jo
jp
std
hlt
push
test
mov
fcmovnu
ss
inc
lcall
push
xor
cmpsb
daa
sbb
movsl
mov
xchg
das
sub
xor
mov
and
in
pop
push
and
lods
je
pop
out
loopne
psubusw
inc
pusha
push
and
out
jbe
jne
out
and
push
out
stos
cmp
push
xchg
pop
ss
xor
lds
adc
push
das
mov
inc
add
jbe
sahf
pop
mov
add
cltd
pushf
sub
outsl
std
sbb
jnp
movsb
mov
pop
xchg
mov
adc
inc
jb
push
mov
mov
cmp
out
inc
jo
cmp
clc
jg
inc
pop
add
loopne
push
in
sub
mov
jg
xor
mov
sub
pop
in
addr16
mov
bound
sub
dec
inc
xor
shl
addr16
pop
mov
mov
pop
push
cmp
add
xchg
and
cld
mov
sbb
lcall
aam
aad
cmp
aas
sbb
push
dec
push
mov
mov
outsl
pop
mov
sti
cltd
jp
lock
sbb
inc
cld
test
inc
xchg
xor
enter
cs
mov
push
stos
cmp
outsl
fidivs
orb
xchg
out
mov
lcall
inc
pop
push
cmp
add
data16
outsl
push
xchg
fmuls
mov
cli
rorl
mov
js
lock
xchg
cmp
xchg
mov
das
or
or
shlb
xor
or
addr16
and
jne
ret
lret
push
sbb
push
mov
movd
jb
int
mov
scas
mov
or
mov
je
cli
adc
pop
jb
sahf
xchg
or
enter
rcrb
pop
jns
lock
pop
mov
and
pop
dec
dec
ljmp
push
test
gs
fldt
cmpb
out
xchg
ss
out
cmpb
jp
pop
xlat
jg
clc
xchg
mov
gs
mov
sahf
dec
or
hlt
lods
and
mov
cmp
fbstp
dec
test
sbb
add
pop
cwtl
aad
or
jno
sysexit
stc
rorl
push
and
jne
cmp
ja
dec
out
call
adc
in
insl
imul
stos
ja
mov
cltd
test
push
dec
pop
pop
mov
testb
aad
hlt
sub
and
or
sub
mov
sti
into
dec
or
mov
roll
mov
fists
cmpsb
loop
xchg
and
shlb
push
in
xor
xchg
mov
xchg
cld
add
sarl
mov
sahf
or
pop
mov
sub
mov
mov
inc
sbb
out
dec
add
lea
and
icebp
out
bound
popa
push
out
mov
je
jge,pt
rorl
rcrb
mov
jb
add
imul
add
dec
insb
ljmp
mov
rep
jbe
cwtl
cmpsb
aad
or
add
fcomi
imul
mov
add
je
mov
repnz
gs
adc
sbb
loope
insb
add
mov
push
and
out
sbb
lret
pushf
loope
cmpsb
mov
mov
mov
mov
clc
cmp
enter
fsubr
jo
int3
insb
sub
dec
loope
mov
xor
dec
negb
xchg
and
sbb
int3
es
and
xchg
daa
pop
jmp
adcl
push
xchg
mov
dec
inc
adcl
add
push
mov
outsl
jne
fwait
dec
shrb
popa
or
dec
les
pop
loope
adcl
in
adc
addb
jle
int
inc
mov
sahf
sti
shl
outsb
sbb
enter
adcb
mov
ret
scas
cmp
icebp
sub
hlt
test
out
mov
lea
jno
icebp
movl
fmuls
test
push
cmp
inc
xchg
sbb
and
insl
push
adc
mov
mov
pusha
decl
jb
cmp
lea
les
cmp
cmp
mov
in
inc
inc
je
js
nop
add
or
ss
xor
xlat
decb
call
mov
sbb
jecxz
inc
sub
cmp
mov
lods
push
add
int
andl
pop
lahf
xor
mov
mov
jge
cs
lret
imull
mov
loope
mov
dec
push
fsubrl
jae
lea
inc
or
mov
pop
xchg
pop
pop
aaa
pop
push
jns
outsb
mov
adc
dec
inc
mov
mov
jmp
adc
roll
jb
or
sbb
mov
mov
mov
adc
mov
mul
mov
popa
pop
rclb
cltd
lcall
inc
sbb
inc
movsb
stos
addr16
sti
out
cmp
dec
pop
enter
repz
xor
roll
test
daa
loop
adc
shlb
cs
push
inc
dec
push
daa
repz
adcl
inc
sbb
cwtl
push
sbb
pop
mov
sbb
aas
mov
push
insl
jle
clc
add
and
jo
push
jo
pop
push
jecxz
push
jns
mov
mov
insl
push
popl
mov
fistpl
jmp
xchg
mov
inc
or
adc
jbe
pop
rcr
pop
fs
mov
xor
addr16
mov
xor
lea
cli
orl
clc
mov
cmp
jbe
sbb
xchg
mov
in
shll
mov
sbb
push
mov
or
cmp
decb
inc
stos
adc
or
and
add
mov
ficoml
sti
xchg
aam
fnstenv
hlt
cmp
pusha
ja
jecxz
pop
iret
imul
sbb
clc
int3
call
mov
dec
pop
mov
inc
or
pop
test
inc
mov
cltd
adc
in
inc
jnp
mov
lret
mov
mov
rcr
sub
adc
stc
sarb
mov
jmp
aam
fiadds
mov
mov
inc
mov
add
jo
in
mov
push
ret
push
sub
cmp
or
add
lahf
movsb
adc
push
idivl
mov
pop
cs
cwtl
out
movsl
adc
jne
sub
push
les
shr
stos
je
data16
and
loop
call
inc
insb
movsl
mov
daa
data16
xchg
and
pop
mov
xor
and
sbb
sbb
out
mov
lods
ret
lea
pushf
mov
mov
cmp
jl,pn
sbb
jmp
jo
xor
gs
sub
outsl
or
fidivl
repnz
push
cld
repnz
mov
adc
pop
clc
movl
sub
shll
jl
lahf
pop
lcall
sub
movsl
push
aam
loope
xlat
ficompl
test
or
sti
mov
ret
mov
jnp
mov
ds
fisttpl
push
or
hlt
jbe
hlt
rolb
inc
ja
xor
outsl
jo
cmp
inc
aam
cmp
je
into
mov
push
fcmovu
adc
test
and
je
jmp
mov
adcb
fs
jno
cmp
add
mov
pusha
repnz
push
jge
fsubrs
mov
lock
xor
mov
or
inc
fnstsw
adcl
leave
fwait
leave
pop
add
stos
mov
mov
pop
shrb
push
push
loope
cmp
add
sbb
ljmp
xchg
inc
adc
pop
ss
adc
push
outsb
jo
jbe
outsl
and
mov
inc
mov
jge
adcl
dec
mov
fistpl
lods
jo
out
pop
push
sti
jo
mov
das
xchg
add
adc
jb
shrb
cmp
push
xor
sbb
xor
aad
sub
rcll
push
cmp
mov
adc
mov
lods
cltd
dec
loope
mov
ficompl
xor
scas
or
into
pop
test
cltd
ljmp
inc
sub
lret
cmpsl
pop
cmp
loop
and
and
adc
mov
js
in
incb
pop
lahf
jnp
xchg
mov
mov
scas
cmp
loopne
xor
jp
pop
pop
add
imul
or
dec
adc
inc
inc
mov
pusha
incl
mov
lret
insl
mov
into
xchg
push
shrb
pop
cmp
ss
popa
mov
mov
fs
je
fdiv
push
movsb
inc
imul
add
lock
movsl
add
and
inc
cmp
rcrl
addl
and
or
and
mov
adc
sbb
xchg
mov
aaa
loopne
outsb
mov
mov
outsl
fsubr
lods
ret
std
pop
in
icebp
negb
sub
popf
add
jp
out
rol
ret
cli
mull
inc
out
sub
sub
aaa
addl
int3
das
jo
push
jo
push
xchg
sub
pop
cmpsl
shlb
movb
out
inc
push
loop
jl
clc
dec
mov
mov
mov
loopne
test
cmc
and
rcr
sbb
xchg
clc
das
push
fnstenv
mov
push
mov
cmc
sti
add
add
inc
pushf
in
pop
and
iret
jp
das
mov
insl
sbb
add
pop
test
add
frstor
sbb
rcrl
adc
adcb
stos
adc
loope
jbe
test
sbb
inc
mov
push
aam
es
outsb
dec
leave
inc
rcll
movsb
push
mov
sub
push
jg
xchg
fildl
notl
adc
pop
sbb
mov
pop
xchg
mov
xor
mov
ret
ja
ficoml
mov
movsb
pusha
mov
mov
leave
out
push
stos
inc
mov
test
int
mov
mov
adc
or
into
std
pop
cwtl
xchg
sbb
sbb
lret
xchg
ret
xchg
mov
sbb
rcll
sub
ret
shlb
in
outsb
incb
mov
test
test
adc
cmp
and
xor
cmp
push
pop
dec
mov
test
arpl
mov
stos
or
add
sahf
addb
mulb
mov
dec
ret
inc
addl
fdivs
jmp
jp
sbbl
pop
jno
data16
repz
mov
popa
pop
pop
loopne
ficomps
repnz
jmp
fdivrl
sub
pop
dec
je
cmc
iret
or
xchg
lds
cmp
inc
xchg
in
adc
ret
lods
popa
jl
ljmp
push
mov
add
sti
or
data16
and
test
mov
nop
imul
and
imul
cltd
and
and
not
enter
mov
mov
loopne
loope
shll
adc
test
notb
stos
ror
xor
sub
outsl
or
mov
lock
shrl
lret
mov
dec
mull
insl
jo
inc
pop
mov
aas
and
push
xchg
xor
pushl
fwait
xor
idivb
push
xor
add
sub
mov
pop
push
push
inc
adc
mov
scas
psrlw
dec
js
cmp
aam
xor
cs
jo
add
push
push
out
shrb
aad
pop
mov
sbb
mov
dec
pop
dec
andb
mov
mov
xchg
mov
rcrb
adc
xor
int
fsubrl
aad
add
roll
mov
loope
sarl
inc
push
fdivrs
ret
mov
mov
aad
fdivp
jecxz
mov
sbb
stos
mov
xchg
fistl
mov
in
decl
sub
test
scas
shll
push
ffreep
fisttpl
bound
subl
cmp
inc
sbb
lea
enter
insb
adcb
pop
xorb
divb
fisttps
test
cmpsb
loop
mov
mov
movsb
adcb
leave
shr
insl
pop
insb
popf
sub
xchg
push
sti
adc
xor
imul
push
xlat
rclb
movsb
cmp
mov
add
aaa
enter
out
dec
sbb
outsl
pop
enter
inc
dec
addb
roll
or
push
shl
push
and
subl
shl
sbb
arpl
sbb
and
or
pop
insb
mov
addl
mov
inc
push
cmpsl
jns
dec
ljmp
inc
mov
loopne
pop
cmpsl
add
aam
push
sbb
or
lret
das
mov
add
pop
out
mov
mov
xchg
stc
rol
mov
std
ret
push
xlat
inc
shrl
jb
data16
ss
pop
xor
jo
cmc
scas
mov
mov
or
jns
jmp
cmp
mov
aaa
fists
add
add
xor
dec
pop
andl
cmp
sub
ds
push
lea
loop
inc
aas
inc
dec
aaa
mov
lds
bound
in
popa
mov
stos
aad
mov
shrb
xor
pop
clc
sub
out
ss
popf
je
mov
jecxz
aad
fs
lret
push
pop
or
test
cli
mov
mov
mov
iret
dec
std
pop
jg
and
add
cmp
rcrl
adc
push
adc
inc
in
cmc
je
pop
dec
pushf
sbb
mov
popf
call
bnd
sbb
lods
push
lds
jb
lods
imul
movq
aad
in
mov
mov
rcl
test
lretw
fcomps
call
add
call
rcrb
push
lcall
mulb
sar
pop
jne
jb
mov
mov
adc
push
les
push
fldl
xchg
xchg
loop
mov
out
outsl
ret
jge
movsb
sub
adc
cs
mov
mov
enter
incl
cld
fisttpl
adc
aad
cmp
adc
push
inc
cwtl
mov
pop
add
lcall
cmpsl
int
sbb
test
sub
pop
mov
mov
pop
lock
push
cmp
data16
mov
or
cmpsl
test
push
inc
xchg
movaps
ss
filds
sbbl
sbb
mov
push
les
sub
mov
outsb
mov
cmpsb
mov
repz
mov
adc
scas
pop
or
in
and
mov
push
jg
cmp
sub
int
jns
xchg
cmp
stos
lds
jno
loop
aad
lds
fistpll
jge
outsl
inc
mov
xorb
push
out
mov
mov
push
cs
xchg
call
lahf
pop
mov
fxch
cmp
insl
aaa
mov
jbe
and
push
test
imul
inc
arpl
mov
mov
xor
jo
or
call
pusha
pop
mov
pop
pusha
fcoms
pop
cs
mov
andl
add
lcall
pop
and
push
cli
loope
jno
add
pop
call
shlb
jle,pt
cltd
fwait
movsl
mov
loope
inc
mov
pop
dec
aam
jge
cmp
scas
inc
xchg
xchg
and
cwtl
mov
ds
fs
push
xchg
movsl
sbb
dec
mov
or
icebp
cmpsl
out
je
fcomps
mov
push
rcrl
das
adc
sahf
jle
xor
dec
dec
push
icebp
push
adc
orl
mov
in
cmpsl
xchg
in
add
or
mov
add
inc
jno
imul
addr16
xchg
mov
mov
movsb
inc
push
mov
push
pop
aaa
mov
xchg
call
mov
push
sub
cmp
xchg
dec
inc
out
pop
test
std
sahf
jo
jae
pop
jmp
xlat
scas
cwtl
andl
cltd
cmp
rorl
subb
xor
fdivs
pop
push
pop
push
and
js
and
or
mov
lock
sbb
sbb
push
scas
pop
ss
inc
mov
xor
mov
neg
add
js
mov
mov
pop
or
jp
sbb
cmpsl
jl
adc
imul
dec
xchg
ljmp
in
daa
aam
mov
mov
jb
out
dec
mov
add
jbe
in
and
dec
jnp
sbb
xor
call
mov
test
push
dec
testl
add
pop
test
in
test
ret
mov
popf
or
pop
or
hlt
pop
mov
nop
out
xchg
mov
inc
subl
sarl
insb
dec
sub
add
mov
push
jb
dec
push
arpl
mov
push
pop
rorl
inc
sub
les
imul
inc
leave
inc
cmpxchg
mov
ss
sahf
or
fld
clc
outsl
cmpsl
repz
fistl
mov
movsl
lret
paddsw
dec
cmpsb
sub
fcomp
or
stc
add
dec
xchg
push
cmpsb
xlat
rcr
sub
mov
movsl
ss
sahf
ds
rorb
addl
adc
add
pop
mov
pop
in
cmpsb
and
ret
mov
test
mov
mov
push
mov
ret
in
dec
jl
loopne
sub
js,pt
shrl
outsb
or
or
inc
inc
push
bound
mov
push
scas
adc
xor
stos
sbb
mov
xchg
dec
xchg
inc
loopne
btr
testl
xor
mov
jp
sar
in
into
les
dec
in
inc
cs
jne
outsl
xor
cmpsb
iret
hlt
pop
fs
icebp
stos
fucomp
xlat
fimuls
cmp
or
cmpsl
jo
push
sbb
es
mov
inc
mov
mulb
loop
popa
add
test
les
jl
jnp
cli
mov
popa
adc
sub
rorl
jbe
ss
cmp
jecxz
mov
or
fstl
outsb
cltd
in
and
sub
rcll
cli
stos
pop
test
imul
xchg
xorb
mov
jecxz
push
dec
mov
lds
and
ss
decl
adc
add
or
sub
dec
stos
repnz
pusha
scas
movsl
aas
je
inc
adc
int3
loop
xchg
fnstsw
testl
ffree
add
data16
into
and
leave
adc
xor
hlt
pop
daa
jg
lret
adc
scas
and
cmp
out
inc
dec
in
outsl
xchg
rorl
mov
mov
xorl
movsb
adc
and
mov
dec
cmpsb
std
jo
push
dec
leave
lds
cmpsl
popf
stos
scas
sti
js
and
inc
dec
inc
sub
mov
jne
test
add
aas
adc
push
loopne
cmp
and
rorb
cmpsb
test
mov
shll
push
mov
pop
pop
test
inc
movl
mov
out
mov
xchg
add
aaa
mov
mov
pop
mov
mov
addb
jg
pop
imul
cld
and
inc
aaa
or
sub
in
jp
push
or
sub
sbb
sahf
adc
shl
fs
andb
sub
addr16
aas
mov
lock
call
push
pop
xor
js
popa
add
daa
fsubs
sahf
or
push
gs
pop
pop
cmp
gs
outsb
dec
pusha
ss
das
or
sub
fimull
dec
add
out
fs
cmpsl
in
roll
mov
sbb
loop
fs
ret
mov
aam
outsb
adc
pop
mov
pop
aam
out
cmp
icebp
pop
inc
inc
fisttpl
and
sbb
pop
and
sbb
mov
lock
popf
mov
sub
cmc
ret
jp
mov
aam
adc
sub
cmp
loop
mov
mov
lods
pushf
xchg
sti
mov
lret
jle
clc
movsl
lock
push
aad
or
mov
imul
imul
mov
aam
jmp
and
rclb
fcompl
leave
iret
in
push
mov
xor
daa
cld
pop
and
lock
pop
push
mov
mov
je
orb
sarb
outsl
push
outsl
pop
adcl
push
orb
jge
out
cmpsb
mov
pop
sbb
or
data16
fisttpl
ret
outsl
cwtl
push
jmp
stos
xor
shrb
sbb
add
fs
stos
hlt
and
pop
mov
push
pop
adc
int
xchg
andb
test
or
mov
movsb
cmp
imul
cli
sarb
frstor
test
test
cli
sar
or
rclb
push
fidivrs
mov
inc
lret
push
lods
in
dec
shll
roll
out
xchg
enter
ja
aaa
add
jmp
mov
xchg
xlat
insl
cmp
scas
data16
xor
or
ss
out
jae
inc
mov
ja
mov
mov
jnp
clc
xlat
lods
dec
mov
pushf
lcall
shl
ja
cmp
fstp
stc
inc
js
lcall
fmulp
inc
lock
xor
xchg
mov
ret
and
cmpb
adc
data16
jo
outsb
dec
sub
adc
aas
lcall
int3
out
mov
xchg
adc
popa
mov
cmpsb
in
imul
and
repz
mov
call
sbb
sub
bound
pop
icebp
cmpsl
outsl
pusha
mov
rolb
test
cld
cmpsl
xor
dec
mov
mov
out
gs
enter
xchg
pmaxub
adc
or
out
jne
mov
mov
sbb
pusha
sbb
fadd
sub
inc
cmp
inc
pop
xchg
scas
jmp
inc
je
adc
sub
rcl
lods
cmp
ss
pop
pop
shlb
cli
and
cmpsl
movsl
je
in
mov
data16
xor
sub
test
fadds
loope
stos
adc
mov
mov
lea
hlt
xchg
push
insb
sbb
mov
mov
in
xchg
and
sbb
jbe
jl
mov
lahf
jmp
insb
mov
imul
sub
sub
movsl
push
or
mov
hlt
in
inc
scas
loope
lock
andl
sub
pop
cmp
cmp
mov
shll
stos
pop
hlt
decl
jno
test
cli
pop
jo
mov
jg
pusha
test
cld
ret
imul
inc
mov
daa
repz
lods
lcall
in
fidivrl
daa
ret
or
add
mov
cmpl
imul
mov
mov
lock
daa
adc
lods
sbb
pushf
cmc
les
mov
pop
push
and
mov
test
jg
sbb
inc
mov
jmp
jecxz
out
shrl
lcall
cwtl
inc
jbe
adc
js
mov
xor
addr16
cld
push
es
xchg
aad
add
xchg
pop
loope
and
push
shl
ret
dec
flds
xchg
jg
cmpl
mov
ftst
pop
adc
adc
xchg
jns
xor
jge
add
cltd
mov
mov
cld
outsl
push
xchg
adc
sub
mov
sub
out
test
and
ja
xchg
sub
inc
das
jl
dec
sub
movsl
jge
iret
adc
cmp
or
xchg
stc
push
xorb
inc
xchg
adc
jo
sub
or
mov
inc
shll
mov
add
or
sbb
jb
sbb
inc
xor
jle
rol
daa
push
iret
add
into
push
push
mov
pop
loope
fcmovnu
outsb
jg
sbb
ds
daa
jo
outsl
pop
mov
ljmp
jns
lret
dec
xor
in
leave
mov
jbe
inc
push
shl
andl
xor
fidivs
sti
test
scas
mov
out
fdivl
inc
push
es
decl
fs
mov
pop
or
add
pop
je
dec
int
bound
rorl
lds
ret
test
add
lods
loope
sbb
inc
rolb
aas
frstor
insb
adc
cmp
inc
pop
addr16
inc
or
in
sbb
adc
outsb
and
out
mov
outsb
inc
out
sbb
outsl
test
xchg
ds
stos
dec
adc
pop
cld
ds
pop
cwtl
test
icebp
addr16
bnd
pusha
sar
fsubrs
dec
shll
icebp
rcr
sahf
pop
repnz
and
cmp
adc
adc
scas
hlt
add
pop
aas
fcmovnb
lods
int
sar
cmp
mov
je
sub
and
dec
icebp
pop
imul
or
cmp
movsl
inc
jno
mov
and
mov
sbb
outsl
jbe
pop
loopne
or
sub
test
aad
pop
jne
xchg
mov
pop
loopne
int3
adc
sbb
xchg
xchg
incb
cltd
dec
adc
push
pop
pop
mov
mov
int3
test
je
pop
in
lret
xchg
and
and
mov
adc
call
scas
sbb
dec
insb
fbld
mov
mov
push
adc
add
push
mov
xlat
jecxz
clc
fwait
xchg
loope
pop
js
add
in
mov
movsb
call
pop
jo
mov
mov
insl
das
roll
addl
aad
mov
inc
arpl
inc
pushl
lahf
and
movsb
and
push
popa
orb
js
jle
cmpb
adcb
add
adc
xchg
or
push
aad
cmc
or
andnps
test
cmp
loope
sub
int
mov
cmp
shlb
testl
inc
or
mov
ja
dec
pop
stos
pop
icebp
cmp
movb
outsb
popa
loopne
dec
pop
rclb
cmpsb
sub
outsl
lods
ret
test
jb
inc
fistps
pop
ss
fcoml
xchg
adc
inc
mov
and
mov
icebp
ja
je
cmp
push
fld
inc
jb
arpl
xchg
add
cmpsb
xchg
gs
push
pop
inc
ret
scas
dec
jne
jbe
loop
jnp
jg
in
and
arpl
cwtl
xchg
or
test
scas
xchg
cmp
jl
pusha
movsb
rcrl
leave
inc
daa
add
add
jge
imul
dec
outsb
int
ljmp
jo
jno
dec
push
cmp
pop
pop
fisubrl
cmpl
xor
push
sbb
and
gs
sbb
rcll
mov
cmpsb
inc
inc
sbb
outsb
mov
jg
jb
dec
pop
mov
cmp
cmp
push
add
sbb
sbb
xchg
mov
fisubs
popa
adc
jne
dec
stos
pop
es
lret
pop
mov
fdivrp
sbb
mov
jb
add
or
cld
bound
jae
out
ljmp
scas
jo
sti
or
in
mov
sub
inc
xchg
add
popa
add
push
lock
sbb
inc
test
cltd
ss
jne
add
sub
rorl
cmp
in
lock
or
inc
jo
push
ljmp
mov
pop
jb
icebp
or
rcll
test
pusha
jnp
cld
inc
jge
mov
aam
add
enter
mov
pop
sub
xor
adc
cld
std
rcrb
fcmovne
mov
cmpsb
dec
insl
and
add
mov
cli
add
popf
shlb
jmp
loope
xchg
mov
repnz
adc
out
pop
iret
xor
mov
stc
mov
std
push
cmc
enter
adc
fwait
mov
in
sub
orb
xor
pushf
outsb
outsb
aad
icebp
ret
repz
dec
pop
addr16
push
sbb
rol
mov
mov
adc
insb
mov
pop
out
mov
ja
inc
movl
mov
inc
dec
and
push
fsubrs
test
push
cmp
movsb
outsb
fs
lods
inc
xor
push
adc
ss
jl
outsb
mov
inc
xchg
push
jo
inc
add
fisubl
popa
push
and
inc
pop
sarl
jbe
movsb
jge
pop
int
jbe
mov
push
lea
cmp
cmpsb
ja
push
mov
adc
mov
jno
out
jg
mov
lods
mov
dec
mov
popf
arpl
mov
ret
insl
jle
sbb
rcl
pop
or
lock
push
popf
faddl
out
pushw
call
push
cmp
pop
out
pmullw
pop
repnz
inc
add
rorl
add
adc
cmp
out
inc
je
icebp
aaa
xchg
push
sbb
std
cli
dec
pop
mov
cmp
xchg
std
push
sbb
fdivrs
push
pop
ret
loopne
push
aam
jmp
addr16
jp
pop
sarl
and
jle
loopne
shll
pop
mov
pop
lret
adc
nop
int
jbe
jno
sbb
sbb
sub
aam
inc
mov
scas
sub
inc
lret
outsb
inc
pop
cld
fnsave
inc
int3
roll
ret
and
mov
xchg
and
insb
and
pop
insl
inc
mov
cmc
or
mov
and
ret
or
je
fimull
scas
cld
fwait
enter
sbb
nop
pop
cs
inc
int
jmp
dec
mov
fcom
lcall
cli
mov
push
mov
and
aaa
dec
jp
xchg
sbb
in
lea
push
frstor
sub
or
int
mov
mov
sbb
mov
pop
cmp
out
jecxz
loop
push
mov
int
mov
insl
inc
inc
pop
or
scas
pushl
pop
push
inc
adc
scas
mov
pop
fistps
mov
aaa
cmp
dec
loope
aad
jle
scas
sub
aad
stos
pop
in
div
jge
inc
dec
mov
cmp
adc
iret
sub
adc
out
mov
sarb
mov
nopl
lds
test
adc
pop
ljmp
lret
fs
xchg
cltd
sbb
vmovdqu
repnz
dec
mov
inc
pop
in
not
imul
pop
stos
mov
roll
lock
in
mov
sub
getsec
imul
adc
test
hlt
add
mov
push
cmpsl
scas
test
inc
and
lds
mov
test
mov
out
mov
jg
stc
imul
repz
add
pop
test
ret
lds
sub
mov
add
ffreep
add
mov
loopne
hlt
push
movl
pop
out
movsl
dec
out
daa
push
and
stos
inc
pop
xor
aad
and
jge
mov
ja
stos
fiaddl
pop
mov
imul
ljmp
add
in
cli
push
jne
inc
inc
inc
pop
jl
lret
inc
stc
clc
inc
mov
ds
test
lds
xor
mov
fcompl
sbb
inc
shr
dec
sub
mov
push
ja
or
and
loopne,pt
pop
xor
jmp
pop
jo
aaa
mov
lret
sub
outsb
sub
imul
pop
call
inc
cmpsb
mov
sub
movsl
adc
fstl
add
int
pop
sahf
push
sti
mov
xchg
aaa
pusha
mov
or
mov
cmp
mov
pusha
cmp
dec
jl
and
or
jno
mov
and
push
jno
and
mov
shl
inc
stos
inc
xchg
mov
adc
cmp
and
adc
mov
lret
jnp
cld
fnstsw
mov
jae
xor
mov
dec
mov
ret
jl
lcall
adcl
jb
das
cmp
in
js
pop
gs
mov
daa
outsl
xchg
add
cli
dec
andl
sbb
jo
pop
sti
mov
xor
es
bound
jbe
mov
fsubr
bound
cld
movl
or
pop
call
mov
sub
push
mov
push
ja
dec
cs
lea
pop
adc
xchg
and
fst
mov
loope
lahf
add
call
ja
xlat
icebp
mov
fwait
dec
outsb
dec
and
lahf
cltd
daa
insb
fidivrl
adc
popf
in
mov
sar
and
pop
mov
mov
das
leave
adc
push
xchg
mov
test
cmp
cmp
test
mov
cmc
dec
and
xorb
xor
leave
lcall
xchg
fcoms
dec
fcompl
push
xchg
jle
mov
ss
sub
push
add
add
mov
xor
xchg
insl
enter
adc
bound
mov
jae
xlat
xchg
mov
push
xchg
mov
clc
cmp
clc
pop
lock
mov
divl
dec
cmp
fcomps
pop
inc
and
movl
lds
shl
repz
jle
jbe
data16
aaa
and
cmpsl
bndldx
and
lcall
cmc
cmpsw
fwait
lret
sub
stc
jae
sti
test
addr16
inc
mov
cmp
lahf
enter
adc
add
movb
shrb
cmc
dec
test
push
adc
cmpsb
movsl
add
cmp
call
dec
shll
cmc
mov
shrl
fwait
out
loope
int
mov
repnz
out
test
nop
movd
push
mov
les
or
mov
addr16
je
ret
in
push
test
outsl
cwtl
xor
pop
mov
mov
pop
sub
sub
and
xchg
cmp
scas
loopne
or
or
mov
add
aad
sbb
jp
test
push
les
loop
mov
loope
dec
cmp
mov
sbb
shll
cmp
imulb
popa
add
mov
imul
xchg
jns
subl
in
fidivrs
add
cmpsl
pushf
adc
inc
mov
fisttps
push
scas
or
mov
mov
sub
subb
inc
and
pop
and
or
lret
test
and
es
test
xchg
adc
das
cmp
dec
mov
or
scas
cli
ja
jne
add
aaa
jb
add
mov
dec
push
lods
sub
les
dec
dec
jb
mov
push
insb
push
jp
xchg
inc
imul
add
adc
mov
xchg
loopne
rol
pushf
rcrb
in
xor
and
cwtl
add
movsl
in
mulb
cmpsb
add
cwtl
xchg
sbbl
jge
mov
xchg
movsl
lock
xlat
leave
xor
cmpsb
jmp
xchg
stos
or
xchg
pop
test
arpl
cmp
subb
xorl
lds
lock
pop
push
pop
mulb
mov
sub
imul
in
or
negb
cld
lods
dec
add
sahf
aaa
lds
aas
mov
ljmp
out
fistpl
and
ret
mov
pop
mov
xor
jbe
inc
xchg
and
sti
mov
shufps
fdivl
and
mov
mov
xchg
iret
dec
mov
js
push
dec
fisttpl
bound
fstps
stos
fiadds
fldl
rclb
xchg
stos
das
call
mov
cmp
inc
je
in
fisubrl
gs
pop
aaa
cmpsb
movsl
dec
dec
mov
inc
stos
popa
add
push
stos
cmc
enter
or
jp
pop
fldcw
push
lea
ja
gs
cmp
dec
out
in
bswap
mov
rcl
jmp
xchg
jne
popa
sti
and
dec
lcall
mov
loopw
inc
movsb
xchg
fnstcw
aas
push
mov
adc
pop
dec
pop
subb
add
xchg
jle
sbb
loopne
xchg
mov
decl
call
lock
popa
mov
fcompl
loopne
js
sbb
mov
lock
mov
adc
leave
lret
bound
push
push
insb
jo
fadd
pop
call
addr16
mov
push
add
push
mov
or
jno
and
pop
ffree
and
ret
dec
addr16
ss
lahf
and
std
xchg
out
jb
dec
or
pop
popf
pushf
fldl
popf
sbb
xorl
cmc
sub
ljmp
aas
fdiv
push
add
in
push
and
stos
xor
add
push
adc
mov
sbb
in
movsb
stc
cltd
sti
cmc
dec
outsl
pop
xchg
mov
sub
jne
fdivrp
and
push
jp
push
scas
dec
adc
cmp
jmp
mov
inc
jne
mov
or
ret
dec
jmp
and
vmovaps
mov
mov
adc
mov
es
adc
lea
xchg
sub
or
add
ljmp
sbb
mov
push
js
in
orl
jp
das
sbb
dec
xor
cld
pop
fldl
movsl
jl
addr16
ljmp
filds
and
or
dec
leave
insb
push
sub
pop
aas
push
inc
inc
cmp
clc
xor
mov
mov
rclb
leave
sub
lea
dec
push
mov
xor
push
lods
imul
ss
mov
or
rorb
test
arpl
adc
cltd
cli
cltd
loope
sti
stos
addr16
ds
repnz
jae
mov
mov
call
cmpsb
in
push
movsl
popf
clc
mov
xchg
mov
rcrl
xchg
cs
cmp
inc
ret
test
jae
push
add
hlt
ds
push
repnz
add
xor
mov
inc
test
xchg
pushf
inc
and
jne
mov
test
and
fisubrs
cmp
and
and
fdivs
cmpsb
rep
pop
add
je
push
mov
imul
popl
vmovups
mov
shrl
gs
jl
rorb
cmp
sbb
imul
sar
es
sbb
cmpb
push
inc
adc
dec
fstl
jl
adc
call
cmp
lods
sub
shlb
add
dec
cmpsl
cs
cvtps2pd
in
jl
or
mov
clc
add
shll
adc
into
jbe
xor
dec
in
push
xor
rorb
push
add
mov
icebp
test
insb
mov
jmp
scas
mov
lret
sub
inc
fiadds
xchg
jle
or
nop
push
mov
std
test
testl
and
sub
inc
lock
jl
imul
adc
jbe
fwait
scas
arpl
pop
test
fistl
pop
decl
fwait
repnz
dec
sysenter
or
dec
pop
inc
fistps
cmpb
rorb
xor
push
xchg
mov
mov
outsb
fnsave
ja
mov
jo
pop
arpl
mov
stos
stc
add
mov
das
insl
sub
add
and
inc
outsl
fs
hlt
xor
mov
aas
dec
mov
mov
jbe
xorl
call
add
cltd
sbb
cmpsb
lea
sbb
movsb
imul
out
in
or
dec
fwait
clc
mov
sbb
or
nop
call
shll
pop
hlt
xchg
pop
pop
jno
inc
mov
cld
push
sbb
lock
xchg
mov
mov
or
stos
loop
inc
xor
cmp
sub
insb
mov
pop
mov
cmp
and
cmc
and
frstor
pop
mov
popf
fsubl
lcall
jne
xchg
push
and
and
or
push
out
push
mov
mov
mov
loope
pusha
jg
xchg
push
cmp
mov
push
lds
or
cli
pop
mov
cmp
jbe
mov
addb
mov
sub
cmp
mov
and
movsl
sbb
insb
sbbl
mov
es
adc
push
addr16
fldenv
push
les
sahf
pop
cltd
cwtl
int3
mov
xchg
or
mov
mov
mov
stos
and
lret
sbbb
xor
add
in
push
xor
frstor
pop
adc
jle
movsb
xchg
roll
add
jae
jb
and
pop
gs
add
js
addr16
prefetch
sarl
fsubrs
xchg
into
mov
jne
pop
mov
mov
lock
fcoml
sub
pop
adc
sub
cmc
mov
lods
mov
and
and
xchg
into
add
cmpsl
mov
fstps
jle
mov
mov
shlb
add
sub
js
sbb
out
imul
sahf
jb
push
ljmp
mov
stos
adc
jle
push
sbb
ret
push
xor
mov
xor
xorl
mov
leave
imul
xchg
sub
adc
dec
sbb
pop
test
cmp
dec
imul
clc
nop
or
push
stos
sbb
push
cwtl
insl
mov
jge
lahf
or
ret
sbb
repnz
mov
push
pop
aaa
push
inc
xor
je
pop
push
test
mov
icebp
fwait
or
inc
mov
inc
adc
nop
movsl
mov
xlat
ds
mov
mov
in
push
inc
enter
add
xchg
jle
insl
pusha
push
mov
std
mov
mov
mov
ja
call
pop
fldt
or
xchg
add
jns
fildl
sub
imul
ja
jl
mov
add
dec
sub
or
or
pop
mov
mov
adc
dec
and
ficoml
scas
js
mov
or
icebp
iret
and
cld
into
fwait
mov
mov
nop
cld
sbb
mov
test
out
pop
mov
pop
rolb
sub
arpl
outsl
out
aam
hlt
mov
inc
rorb
aad
inc
dec
jo
mov
jp
mov
jecxz
cmc
cld
pop
outsl
cltd
or
xlat
gs
xchg
sbb
imul
scas
aam
push
fnstsw
arpl
cmp
adc
xchg
push
ss
and
inc
pop
in
sbb
cld
xchg
dec
andb
add
stos
lret
xor
repnz
dec
mov
call
dec
mov
int3
int3
dec
ljmp
dec
push
int3
jno
ret
sbb
sub
push
cmp
outsl
cmp
ds
mov
xor
sbb
pop
pop
xchg
ja
and
add
xchg
inc
scas
pop
inc
jno
sbb
ljmp
inc
adc
sti
xchg
push
cld
sbb
push
das
adc
rcrl
xor
pop
sub
in
mov
adc
or
cli
sub
insl
mov
lods
or
clc
out
inc
insb
cmp
mov
xor
sahf
xor
mov
fwait
lahf
xchg
sub
lods
push
jmp
in
imul
xor
inc
mov
stos
test
fsub
shr
pop
fdivrs
pop
addl
sahf
lods
and
stos
fistpl
or
or
fs
mov
aam
rcr
int3
or
sbb
push
jle
out
adc
xor
cmp
movsl
lock
cmp
mov
fmuls
enter
cmp
or
adc
aam
mov
jg
movsb
adc
faddp
pushaw
mov
out
push
jo
popa
mov
jo
das
jg
sbb
push
ss
mov
and
inc
mov
mov
inc
subl
or
push
movl
pop
mov
mov
jno
jns
idiv
push
fs
mov
lock
push
pop
pop
icebp
fsubrl
icebp
inc
cmp
lret
lods
mov
insb
mov
jle
or
mov
or
mov
aam
inc
pop
cmpsl
popf
mov
mov
jns
xchg
sarb
call
fcomp
xor
pop
lock
fisttpl
mov
pop
ljmp
sbb
test
push
push
std
int
bound
nop
sbb
test
mov
stc
adc
cmpsb
xchg
outsb
jo
add
xor
cmp
mov
xchg
or
cmp
mov
loop
std
outsb
adc
mov
mov
adc
rcl
in
test
fistps
sub
popf
lock
jmp
rolb
lahf
movsb
test
jmp
pop
sarl
jl
jb
std
push
aam
mov
xchg
daa
or
sbb
dec
add
mov
push
daa
or
test
lock
sbb
rclb
cmpsl
cltd
sub
cld
daa
push
aad
and
pop
movsb
adc
push
inc
das
mov
xor
test
cmc
idiv
inc
and
and
fs
lds
and
add
jmp
dec
jnp
lcall
add
leave
pop
aad
data16
mov
dec
int
push
adc
test
sub
cmp
es
adc
movsl
aaa
or
subb
sarb
and
or
cmp
sbbb
inc
inc
mov
mov
punpcklbw
push
xor
pushl
cld
cmp
hlt
mov
sub
sub
ljmp
mov
call
push
cmp
lds
pop
or
test
mov
or
sbb
mov
xor
outsl
and
insb
push
or
xor
jmp
jne
mov
jmp
push
dec
add
repnz
stos
jno
loope
xchg
stos
jbe
daa
dec
pusha
mov
btr
mov
mov
sub
jno
dec
add
fdivs
add
jo
fsubrs
dec
push
sbb
push
inc
or
cwtl
je
repnz
sub
inc
test
pop
mov
ret
cmp
lock
jb
scas
jg
js
mov
or
addb
mov
jecxz
push
sbb
fbld
and
test
adc
data16
mov
clc
mov
push
adc
dec
std
je
pop
inc
addb
scas
jle
jecxz
fmull
loopne
xchg
cld
cmc
push
lret
mov
call
xor
in
data16
ja
mov
mov
mov
and
out
mov
push
pop
sub
aas
or
pop
xchg
outsl
out
jns
inc
inc
xor
sarl
cltd
lods
mov
cmp
mov
fbld
add
in
leave
aad
loope
inc
sub
dec
sbb
jge
ja
popa
paddsb
cmp
cmp
dec
xor
outsb
adc
sahf
bound
adc
scas
loop
arpl
subb
mov
fnsave
add
into
fsubrs
test
bound
cli
fcmovnb
or
loop
leave
in
inc
sbb
pushf
scas
push
or
pop
and
cmpsb
out
sbb
xchg
cmp
sbb
inc
mov
les
cmpb
or
popa
mov
mov
ljmp
pop
xchg
in
adc
sbb
and
test
aas
mov
rcrb
mov
roll
sbb
jne
push
xchg
mov
mov
lahf
in
lret
neg
stos
or
cltd
lcall
sbb
rorl
pusha
shrb
xor
shrb
push
outsl
and
in
pop
mov
push
dec
cs
lods
push
pop
lods
test
inc
pushf
fwait
js
mov
adc
cmp
dec
rcrb
xor
cmp
fcmovbe
lods
aas
stos
cwtl
xor
cmc
loop
jg
fwait
inc
ss
and
lock
mov
cmp
xchg
push
push
jl
cmp
inc
enter
add
cmp
popf
rorl
jns
jbe
cld
movq
js
ja
es
sbb
scas
testl
pop
testl
std
mov
mov
fcmovnbe
jne
push
cmpsb
dec
add
or
and
jp
call
push
ja
push
inc
icebp
rcll
inc
mov
adc
inc
lret
mov
mov
aad
in
mov
xchg
mov
outsl
outsb
aaa
aad
fs
xchg
pop
mov
xchg
daa
sub
inc
pop
jmp
fldl
call
push
xlat
dec
dec
out
jmp
imul
xchg
or
xlat
and
test
into
hlt
pop
mov
xchg
loopne
stos
and
call
xor
jne
loopne
sbb
xchg
neg
xchg
or
inc
jmp
stos
into
sahf
sub
xor
sub
mov
pop
das
mov
scas
sbb
jg
xchg
push
mov
out
jecxz
mov
add
fdivs
sub
pop
iret
gs
push
jecxz
inc
and
or
je
add
ss
cmp
push
loope
mov
sub
add
scas
dec
xchg
ja
stc
push
mov
jns
mov
jo
mov
or
sahf
mov
cmp
mov
mov
inc
inc
in
das
lds
add
jne
sbb
push
and
inc
mov
add
outsb
xchg
clc
call
sbb
stos
mov
addr16
xor
ljmp
imul
outsl
add
fimuls
mov
js
mov
int3
scas
or
sbb
dec
and
push
xchg
mov
cmpsb
scas
or
xor
add
and
xor
mov
inc
adc
cmpsb
imul
xchg
xor
pusha
add
add
dec
push
imul
out
daa
es
and
mov
mov
adc
movsl
cltd
xchg
jl
lcall
cmp
pop
sbb
fiaddl
pop
mov
cmp
int
push
scas
pop
ljmp
shll
fisttpl
push
daa
pop
int
mov
xor
push
pop
dec
mov
mov
fs
or
jle
insl
xlat
push
es
sub
push
xchg
mov
xchg
stos
fistps
xchg
paddsb
adcb
mov
mov
test
sbb
inc
jecxz
pop
or
sbb
scas
push
push
pop
clc
in
stos
add
cmp
test
scas
inc
das
inc
push
ret
xor
xor
in
movb
enter
dec
adc
std
andb
shll
lock
icebp
push
cwtl
cmp
ljmp
lret
outsl
cld
add
addr16
ja
iret
jmp
adc
inc
cmpsb
sub
cmp
jo
push
lcall
jg
jp
rcrb
mov
int
pop
xchg
dec
into
fwait
xor
or
cmp
in
push
inc
dec
push
jb
mov
xchg
out
xchg
fildl
push
cmp
push
arpl
mov
jmp
into
lock
ret
in
gs
and
dec
stos
mov
orl
stos
and
adc
mov
inc
pop
mov
iret
pusha
mov
cmpsb
fwait
adcb
gs
push
add
lea
cld
xor
aad
adc
or
arpl
mov
hlt
pop
aas
mov
push
xor
test
insb
add
dec
jbe
out
imul
stos
or
xchg
lea
leave
xchg
adc
push
mov
stos
sbb
pop
mov
lcall
jbe
fstl
sti
clc
fdivs
mov
shlb
jmp
inc
mov
outsb
sub
cmp
mov
xchg
xor
test
arpl
sub
into
xchg
and
mov
out
repnz
mov
push
fwait
adcb
pushf
and
ljmp
pop
call
mov
push
daa
or
mov
ficomps
dec
mov
in
inc
movups
mov
or
dec
inc
push
sub
xchg
cwtl
mov
aas
pop
imul
mov
or
jge
fwait
nop
mov
pop
outsb
pop
fidivs
cmc
and
add
mov
xor
cs
or
lods
mov
pop
mov
xchg
scas
xchg
movsb
push
lock
jbe
ds
int3
jae
sbb
xor
test
adc
fwait
jecxz
mov
int3
pop
cltd
add
dec
mov
mov
cmp
scas
jnp
mov
or
sbb
mov
fcmovbe
stc
fstpl
lret
lahf
rorl
push
and
mov
pop
mov
adc
subl
loop
lock
inc
jo
push
hlt
or
pop
inc
mov
mov
out
add
jae
jnp
jl
lcall
and
lock
jecxz
dec
je
ret
and
cmp
cmpb
ret
sub
cmc
sti
fwait
cmp
into
add
clc
inc
adc
movsb
sub
xchg
push
pop
fadd
adcl
fsubr
cmp
pop
leave
jb
xchg
pop
and
int
or
fistl
add
clc
call
add
aam
mov
or
jo
and
out
jmp
sarb
sahf
lahf
ret
lret
xor
movsl
dec
mov
jnp
imul
loope
add
loopne
push
mov
das
lahf
test
add
jnp
pop
call
stc
push
jno
cmp
cmpsb
loop
inc
cwtl
popa
push
sub
loopne
xchg
or
mov
mov
mov
hlt
shrl
mov
mov
jne
hlt
outsb
mov
jo
fs
mov
dec
std
dec
cmc
leave
inc
push
xchg
jg
mov
mov
jp
adc
aaa
aas
cs
cmp
sahf
push
push
cmp
mov
sbb
mov
rorb
push
and
mov
and
stos
xchg
or
enter
out
lea
pop
add
repnz
inc
xchg
lea
sahf
mov
incl
cmp
add
sbb
mov
jbe
mov
and
adc
daa
jne
and
xor
or
lds
mov
adc
jmp
insb
fwait
enter
fwait
or
add
pop
out
loope
add
pop
outsl
or
mov
loop
jae
in
js
push
stos
je
imul
popa
cltd
adc
aas
adc
pop
mov
inc
xchg
imul
notb
call
mov
sub
jl
sub
push
inc
dec
jg
insb
repz
and
mov
mov
mov
jb
xchg
test
pop
push
cli
mov
stc
adc
cmpsl
push
inc
scas
lods
jo
aam
adc
std
cmp
or
pop
fistpll
sub
out
adc
mov
loop
imul
mov
inc
pop
xchg
test
test
and
xor
in
popf
repz
fdivs
push
scas
push
adc
lret
mov
insb
insl
push
jg
xor
inc
add
lock
adc
push
out
popa
mov
or
add
call
adc
loope
pop
push
sub
out
and
mov
push
jecxz
cmp
leave
ss
sub
cmp
cs
push
and
insl
fdivs
push
in
inc
lahf
mov
lock
xchg
xor
inc
insl
xchg
insb
fnsave
inc
or
xor
ljmp
popa
mov
inc
hlt
jnp
lcall
mov
jo
cmp
mov
das
lods
out
mov
repnz
sub
shr
or
and
mov
mov
rcll
pop
and
cmpsl
dec
lds
push
jno
int
test
shll
push
mov
fsubrs
xchg
jg
shr
pop
test
lcall
incl
or
fadd
shrl
sbb
add
cli
mov
add
push
mov
cwtl
push
fcoms
inc
push
jle
daa
push
inc
mov
fisttpl
int3
xchg
xchg
gs
xor
rol
bound
aad
adc
push
cs
jmp
mov
sub
out
jo
es
ja
andb
adc
dec
inc
pushf
add
jne
adc
cmp
sbb
stos
in
add
xchg
dec
mov
pop
push
les
dec
push
mov
pushf
mov
inc
std
sub
sbb
shll
scas
push
inc
adc
aaa
outsb
je
mov
int3
pop
push
sub
test
mov
scas
add
push
dec
scas
adcb
je
js
ljmp
xchg
push
and
push
pop
lods
ds
add
lret
inc
push
fiadds
stos
ss
xchg
loope
xor
xor
pop
push
nop
mov
imul
pop
js
xor
cmp
or
inc
fsubrl
sbb
testb
add
test
rol
mov
xor
pop
pop
fildl
inc
dec
push
jecxz
stos
or
add
xorb
xchg
cmc
out
test
dec
shlb
sbb
mov
mov
adc
pmaddwd
or
or
cltd
cli
sub
loope
gs
xchg
roll
cmp
or
outsb
xchg
lea
stos
lock
xor
jns
out
ret
add
xor
mov
stos
cli
jno
ret
xor
push
mov
cmp
cmpl
pop
fistpl
out
hlt
sub
jle
push
inc
popf
mov
or
inc
cmp
jne
pop
jns
scas
xchg
mov
push
into
xor
dec
mov
call
jl
pop
and
dec
adc
xchg
in
hlt
shll
repnz
imul
xor
add
pop
xlat
notl
inc
data16
cmp
shlb
ds
jo
and
repz
es
inc
or
scas
push
dec
pop
jp
push
stos
lcall
mov
orb
mov
or
jle
ficoms
aad
dec
add
pop
clc
xchg
push
inc
mov
pop
add
ljmp
pop
loope
xlat
mov
jnp
jecxz
cli
sbb
mov
ret
inc
in
mov
insl
cmp
outsl
lods
lea
push
pop
jl
pusha
sbb
outsl
push
in
or
jne
dec
lcall
pop
sub
test
loopne,pn
insl
mov
clc
nop
loopne
xchg
bound
jbe
add
or
and
fwait
ds
mov
adc
inc
mov
xor
mov
cmpb
aas
into
or
add
push
mov
rcl
movsb
cld
inc
xor
jle
jb
pusha
mov
push
and
jnp
jle
lea
cmpsl
les
xchg
fcmovb
adc
jg
out
sub
fisubrl
enter
enter
aam
push
xor
dec
mov
cmp
sbbb
test
movsl
sbb
and
mov
dec
and
mov
jp
or
jbe
ljmp
lock
dec
mov
test
aas
mov
xchg
cmp
sbb
fsubl
insl
aam
xchg
mov
sbb
dec
mov
jae
ss
or
add
mov
pop
cmp
sub
mov
insb
sbb
sub
call
pop
mov
lret
jb
jae
cs
and
or
add
fiaddl
mov
filds
nop
mov
xorb
mov
dec
jns
ljmp
sbb
xchg
scas
add
cwtl
dec
push
push
test
daa
dec
inc
dec
jecxz
sub
and
sbb
sub
rcrl
sbb
fisubrs
pop
outsb
mov
sbb
fsubp
mov
cvtdq2ps
inc
or
push
mov
cmc
xor
and
mov
ret
sbb
or
inc
flds
inc
aam
out
xchg
or
cmp
mov
add
decl
xchg
dec
imul
ds
xor
push
fisttpl
lret
mov
leave
push
scas
or
scas
push
insb
pop
popa
lock
push
into
loopne
mov
insb
pusha
sbb
lret
dec
inc
test
push
push
mov
call
jbe
fsincos
fwait
cmc
scas
xor
into
mov
in
adc
xchg
push
mov
movl
mov
ss
fwait
jle
sub
adcb
iret
pop
cli
pushf
popa
mov
pusha
std
xor
scas
or
sbb
xor
outsb
sbb
aas
cld
push
aad
das
or
shlb
adc
dec
xchg
mov
stos
call
add
and
mov
mov
in
or
and
rorb
divl
je
pop
enter
mov
sbb
outsb
fcompl
pop
jp
cmp
dec
pop
push
pop
loope
xchg
aam
sahf
xor
jg
sub
andb
outsb
aas
rcr
bound
loop
filds
mov
xchg
sub
lcall
in
fxch
das
xchg
out
lret
add
sub
inc
sbb
push
add
mov
cmp
jno
cld
xchg
in
mov
ficompl
shlb
sbbb
fucomi
xchg
and
inc
add
pop
nop
mov
mov
jae
rclb
sub
pop
jl
or
rclb
popa
fsqrt
clc
pushf
inc
xor
lcall
cld
ss
hlt
add
xchg
stos
and
push
addr16
shlb
mov
pop
fldt
scas
cmp
in
push
icebp
xchg
imul
add
lret
push
mov
xchg
dec
inc
call
cmc
andl
ljmp
les
xor
cmp
and
push
es
hlt
inc
ja
adc
pop
sub
sub
shlb
pshufw
adc
jle
fsubrp
cwtl
jl
and
stos
dec
dec
jl
or
sbb
inc
cld
jb
xchg
js
inc
out
adc
rcrl
movsl
call
repz
rol
sub
cld
mov
adc
leave
sub
shll
sub
add
xor
xor
outsl
in
pop
cmpl
mov
das
fsubrl
jl
lret
xchg
ljmp
lret
sti
shrl
jbe
dec
cwtl
ret
adc
inc
ret
add
aam
clc
dec
lret
inc
rol
divl
pop
xor
shlb
mov
fsts
movsl
or
faddl
in
shll
or
mov
sbb
outsb
xchg
imul
jle
lret
cs
cmc
out
aad
xor
ret
pop
mov
or
and
adcb
lea
es
xor
sahf
adc
cmp
dec
add
push
pop
or
fcmovnu
xchg
leave
mov
stos
push
push
outsb
jmp
movsl
adc
adc
add
gs
mov
xlat
ds
mov
dec
fsubs
fisttpl
push
hlt
sub
push
shrl
incl
adc
jb
xor
sti
and
or
or
iret
icebp
push
stos
mov
mov
pop
cmovae
cmp
into
rclb
outsl
divl
ja
xlat
mov
in
aas
dec
hlt
aaa
mov
sahf
clc
add
push
adc
mov
inc
jno
push
xchg
jge
fisttpl
cmp
sub
outsl
add
push
mov
xor
or
dec
inc
aas
pop
pop
push
jns
xlat
or
cmc
outsl
adc
lret
bound
incl
push
int3
scas
cmpsb
add
fidivrl
push
lock
mov
push
insl
ja
mov
xchg
sti
or
jb
cmp
push
shlb
lcall
xchg
nop
daa
push
andl
ss
mulb
pop
fcompl
xchg
mov
cs
scas
mov
cmp
adc
sbb
jg
sub
mov
stos
mov
or
addr16
stos
arpl
out
testb
psrld
inc
or
or
repnz
adc
mov
insb
jmp
stc
fs
add
and
add
push
ret
push
xor
pusha
negl
mov
cs
push
and
xchg
add
fwait
clc
add
dec
push
stc
gs
mov
cmpsl
das
inc
test
rclb
and
repnz
add
insl
xor
mov
imul
inc
cmp
inc
dec
lcall
adc
sub
aam
xchg
xchg
inc
dec
adc
and
jne
orl
mov
in
inc
mov
loope
dec
add
mov
inc
daa
xchg
ljmp
dec
pop
pop
xchg
outsb
mov
and
std
dec
stos
dec
rcrl
shll
xchg
pop
sbb
outsb
mov
leave
popf
xchg
and
repnz
xor
mov
and
ret
addb
ret
mov
adc
pop
fsubrs
xlat
jae
and
bound
mov
mov
mov
or
es
sbb
add
std
mov
and
cs
gs
sti
mov
adc
lds
inc
pop
or
imul
in
or
cmpsb
fs
fcmovnbe
adc
and
or
aaa
loopne
fwait
xchg
jo
outsl
insl
and
mov
arpl
mov
rorl
push
pop
or
rcll
and
ds
jae
and
mov
xchg
enter
fsubrs
push
dec
adc
cltd
xlat
jo
js
lea
ljmp
scas
push
stos
cmp
fmulp
movsb
mov
imul
mov
les
ss
and
cld
sbb
push
sahf
xchg
test
cltd
or
adc
inc
jmp
stos
jne
adc
adc
stos
divb
sbb
or
xor
push
mov
or
or
shr
inc
mov
aas
mov
js
loopne
sti
pop
fcomps
or
fnstcw
daa
pop
dec
fs
insb
or
or
ret
cmc
lret
and
push
ret
rcrb
call
dec
pop
xchg
call
shlb
test
mov
lea
rcr
xchg
xchg
paddsw
or
and
push
mov
mov
js
sub
cmp
inc
into
push
cmp
pop
jecxz
mov
fstps
push
out
jecxz
outsb
xchg
or
lock
push
push
in
dec
xchg
jno
fwait
sahf
aam
das
jge
leave
inc
cld
inc
dec
lock
mov
jne
mov
popf
cld
push
inc
adcl
xor
cmp
mov
mov
mov
inc
cmpl
fistl
insb
add
sbb
or
add
mov
pop
out
jno
das
cs
call
scas
mov
cmp
jle
inc
sub
sbb
pop
orb
pop
clc
test
lret
shl
fcompl
sub
sbb
push
fstpl
cwtl
andl
jno
addr16
sub
push
ds
or
lds
jp
jnp
add
in
add
ror
dec
jne
imul
pop
jle
shl
popf
mov
arpl
cmc
pop
pop
loopne
sbb
adc
outsl
adc
add
push
push
mov
aam
inc
outsb
cmp
mov
outsl
mov
sahf
mov
out
jl
lret
bound
pop
popf
lods
ss
and
imul
outsb
loope
xchg
pop
mov
xor
in
cli
pop
mov
mul
cmp
shlb
pop
mov
out
and
dec
fstps
insl
stos
stos
xor
pop
sbb
add
pop
ret
sbb
inc
push
popa
roll
je
sar
mov
in
jp
cwtl
fwait
int3
icebp
dec
out
lret
pop
and
jmp
pop
cs
mov
popa
pop
and
push
adc
loopne
push
call
jnp
inc
xor
mov
ja
jg
pop
push
push
mov
sbb
pop
mov
jl
pop
out
es
or
cld
sbb
sti
fmull
adc
xchg
sub
in
add
and
cmpsl
ss
fwait
dec
repnz
push
out
sbb
dec
push
nop
mov
xchg
mov
cmpsb
push
inc
mov
mov
sarl
rorb
inc
mov
aam
mov
jle
scas
outsb
lahf
sti
pop
imul
jl
push
dec
adc
mov
push
std
lahf
js
dec
inc
int3
lds
and
and
scas
leave
sahf
jbe
out
push
test
xchg
sub
dec
mov
ret
push
movd
cmp
add
loop
push
xchg
mov
sbb
dec
stc
xchg
das
push
xchg
and
lods
jb
add
add
out
inc
adc
jae
jle
in
stos
inc
popa
stc
mov
cmp
ljmp
pop
sbb
pop
mov
and
push
aam
insl
pop
xchg
push
pop
jmp
sub
std
inc
fsubrs
push
add
out
subb
stos
imul
cwtl
push
cs
data16
sti
sarl
call
add
aaa
out
adc
subb
jne
mov
mov
xor
imul
inc
insl
mov
jns
adc
lret
sub
nop
xchg
add
pop
mov
push
mov
adc
test
mov
mov
cmpsl
adcb
jecxz
mov
jbe
mov
push
cmp
cs
pop
loope
js
inc
ret
testl
fwait
orl
and
inc
sub
pop
iret
sbb
cs
aaa
lock
cmc
sbb
addr16
ds
mov
aaa
mov
test
push
call
jecxz
mov
clc
insb
pop
shrb
subl
insb
push
adc
sbb
mov
mov
pop
ljmp
rclb
popa
jl
or
jae
movsl
mov
mov
xchg
mov
aam
lcall
jle
xchg
leave
push
inc
pop
out
iret
inc
fldl
nop
lret
std
addl
mov
pop
jnp
cmp
fildl
mov
mov
push
ljmp
test
lcall
std
mov
outsl
mov
and
in
push
in
test
pop
add
scas
movsb
sbb
and
cmp
jge
lock
adc
stos
ret
bound
dec
mov
je
xchg
addr16
push
popa
dec
pop
in
ss
popa
out
push
rorl
or
xchg
cltd
mov
ret
jmp
sub
sbb
add
pop
shl
scas
sbb
pop
sbb
rorl
xlat
movsb
fildl
mov
adc
sbb
in
push
rcl
mov
js
rcrl
cmp
in
jne
cmpsb
outsb
roll
and
int3
andl
int
inc
sub
popf
mov
cmp
dec
push
and
mov
pop
mov
rcrl
fsubrl
cmpsb
mov
mov
fisttpll
jne
mov
and
cmpb
xor
stos
outsb
and
int
mov
call
mov
adc
test
and
ret
add
jae
push
dec
or
ds
push
jp
lods
pop
adc
push
pop
dec
dec
call
xchg
jmp
pop
stos
jecxz
popa
inc
pop
xor
push
mulb
scas
pop
pop
pop
fistpl
jbe
imul
into
xchg
mov
mov
ret
jg
jno
aaa
loope
sarl
pmaxub
mov
and
loop
cmp
inc
stc
repz
push
mov
fsub
inc
xor
shlb
mov
push
sti
std
shll
mov
mov
xor
aaa
pop
fcmovnb
mulb
in
daa
test
sti
aaa
lods
push
fnstsw
dec
jae
mov
outsb
mov
push
popa
insl
xor
int
inc
mov
sahf
sub
lahf
test
adc
pop
cmp
or
shlb
cmpsb
movsl
mov
cmovle
mov
cmp
fs
ss
push
adc
pop
push
inc
pop
add
cmp
daa
mov
lea
cmp
stos
xor
push
ror
xor
pop
push
add
cmpsb
add
pop
ret
arpl
dec
jl
into
mov
xchg
xor
jl,pn
ja
dec
pop
push
enter
cmp
add
iret
sbb
cwtl
rclb
addl
pushl
adc
jne
sub
dec
idivb
sbb
cmp
inc
ror
mov
das
popf
push
inc
pop
insl
mov
cmp
pop
pop
sahf
push
jecxz
mov
fmulp
mov
aaa
push
out
cmc
jle
add
sub
cltd
out
movsl
push
lret
or
sbb
or
or
pop
sbb
repnz
sbbb
mov
sub
gs
mov
and
adc
fcomi
lds
mov
adc
xchg
cwtl
cs
pop
jg
ret
jnp
push
add
push
jg
mov
or
lods
ss
fs
sbb
push
and
adc
fdivl
inc
fdiv
les
ds
ds
jg
clc
xchg
fs
dec
in
mov
xchg
push
sarb
xchg
mov
xchg
push
scas
scas
aas
jge
addr16
repnz
mov
add
test
mov
sub
loope
popa
stc
aaa
rcrb
mov
pop
cmpsl
dec
xchg
lret
mov
push
filds
adc
pop
test
push
push
mov
mov
call
daa
addl
pusha
ja
lcall
mov
aam
sub
aam
sbb
push
push
addb
call
adc
fsubs
pushf
or
rclb
testl
pop
int
aad
ss
stc
mov
cmp
cltd
std
insl
jne
sbb
xchg
out
jbe
mov
mov
in
ja
fbld
in
sbb
sbb
adc
xchg
fnsave
push
nop
test
fstl
xor
jp
jb
inc
outsb
int
mov
xchg
popf
add
das
cmp
cmp
test
lods
aaa
push
pusha
push
inc
into
adc
mov
jecxz
call
mov
mov
jne
jmp
out
inc
scas
or
push
or
xorb
sbb
mov
ret
xchg
stos
imul
cmpsl
test
add
int3
call
scas
dec
cltd
push
inc
fstpl
push
cmc
out
in
pop
mov
dec
popf
or
dec
imul
cltd
sub
clc
jg
mov
sar
inc
dec
arpl
adc
push
pop
cmp
mov
out
orb
mov
test
imul
push
cmpsb
stos
lret
les
ss
repz
shlb
fimuls
push
cmp
pop
icebp
or
test
test
es
stos
mov
dec
inc
sbb
dec
mov
xchg
xchg
xchg
test
imul
adc
and
adc
les
and
push
orl
dec
xchg
leave
push
lods
lahf
sbb
xor
ss
loopne
arpl
jo
je
xor
xorl
loopne
jb
sub
mov
push
out
push
mov
dec
fidivrs
repnz
dec
xchg
scas
rol
adc
sbb
mov
and
xchg
adc
cmp
mov
gs
pop
sub
fsubrs
out
pop
jno
dec
inc
divl
pop
dec
mov
rcl
je
add
scas
ljmp
lods
cmp
push
or
jle
pop
ret
test
and
lock
lds
jnp
jp
loopne
cld
inc
mov
push
push
fucomi
shlb
clc
test
into
out
enter
fsubrl
aad
in
and
mov
xor
jecxz
xor
cmpsl
and
outsb
cmp
pop
insl
sub
jp
stos
jbe
add
popa
mov
das
adc
and
and
imull
dec
sti
xchg
jo
push
mov
nop
movsb
pushf
cld
sub
lret
mov
pop
cmc
stos
addr16
ficoms
mov
push
or
je
ja
mov
mov
push
cmc
jb
mov
inc
xchg
mov
je
mov
mov
enter
aam
sbb
adc
push
aad
ja
add
ss
push
cmp
cwtl
mov
jecxz
js
fwait
rcr
dec
repz
pushw
lock
ret
scas
push
sarl
lea
and
ret
lret
cmp
inc
in
xor
ret
pop
adc
ret
pop
scas
inc
imul
inc
test
push
inc
das
or
or
imul
int3
and
test
and
jo
stc
push
scas
mov
add
xlat
aaa
jp
popa
cmpsl
inc
dec
pop
add
push
mov
orl
push
dec
stc
rorb
fistl
leave
aam
lea
add
not
mov
movl
cmp
mov
dec
pop
mov
jl
jbe
xchg
das
or
movsl
push
outsb
lds
dec
cli
test
jno
sarb
add
shll
pusha
arpl
cs
outsb
mov
sbbl
ja
mov
addr16
pop
add
mov
out
das
repz
icebp
das
shll
lcall
mov
push
rcrl
jb
movsb
mov
loopne
inc
pop
loopne
sub
jnp
inc
add
subl
shll
pop
outsb
add
sub
mov
dec
xor
push
push
xor
sub
inc
adc
jge
sub
jl
ja
dec
inc
call
out
js
loopne
andl
jnp
loopne
addl
inc
das
orb
cmp
shll
mov
les
inc
xchg
push
scas
in
jge
negl
call
lds
inc
subl
out
push
decb
push
fisubs
fsubl
dec
loopne
fs
push
out
or
fdivr
incl
add
inc
mov
add
testl
js
pusha
push
add
gs
loopne
adc
rorb
push
xor
inc
fcoms
sub
loopne
imul
repnz
mov
sub
cmp
inc
push
outsb
mov
dec
push
inc
pop
add
std
add
movsl
inc
cltd
dec
pop
sbb
adc
mov
incl
addr16
push
jno
pop
pop
lods
or
test
push
push
xor
push
push
inc
orb
mov
xchg
sahf
lods
lret
js
jmp
inc
dec
mull
xchg
popa
je
push
dec
add
push
mov
in
push
adc
test
shr
scas
push
push
pop
loopne
ret
ffreep
iret
dec
arpl
mov
sbb
dec
sub
inc
xchg
loope
lds
adc
cmpsb
in
sub
pusha
adc
into
or
mov
cmp
sub
cmp
sbb
into
inc
cld
add
cld
cld
push
push
push
andb
in
fiadds
in
or
btrl
xlat
dec
xchg
or
lds
dec
pop
sub
outsl
fiadds
in
adc
push
mov
add
popf
push
or
cmc
outsb
push
ss
cmp
hlt
push
or
mov
xor
xor
mov
call
push
int3
jecxz
adc
push
pusha
notl
pop
pop
jae
inc
loopne
loope
and
add
test
xor
add
loopne
std
inc
add
repnz
dec
push
aaa
add
repnz
jne
mov
jmp
jne
add
add
add
call
test
dec
or
stc
push
outsl
roll
mov
fs
jns
pushf
push
or
fldcw
xchg
imul
push
dec
jb
xchg
push
sarl
push
inc
inc
call
or
mov
xorb
enter
stos
mov
jne
xor
lret
or
jne
cmp
test
sbb
pop
dec
jno
dec
push
xor
loop
popa
divl
jns
es
cmp
dec
xchg
push
outsl
pop
cmp
jae
jbe
inc
xor
push
push
add
and
cmp
cld
add
data16
fcompl
or
popa
inc
xor
repz
xchg
sub
pushf
inc
push
xor
push
adc
lret
and
in
repnz
hlt
imul
push
inc
iret
sub
fiaddl
push
inc
mov
sbb
mov
lea
sti
clc
sub
jmp
jb
call
fsubrs
push
insb
popa
mov
daa
ret
test
insb
je
or
out
je
adc
pop
into
inc
repnz
fidivrl
adc
adc
push
pop
and
mov
pop
xor
cmp
dec
in
inc
ss
push
daa
shl
out
dec
les
jns
rcll
clc
lea
or
fs
insb
sbb
loopne
dec
jae
sbb
sub
loope
in
loop
dec
pop
aad
push
mov
movb
scas
dec
jne
cmpsl
test
movsl
ror
or
cmpsb
jbe
add
push
js
inc
loopne
fcoms
pop
in
jno
mov
lods
idivl
aad
cmp
ret
jns
js
dec
popa
fidivl
cmp
shlb
lock
fldcw
test
out
push
ja
xchg
xchg
inc
mov
xchg
inc
addl
movl
cmp
adc
and
lahf
dec
sbb
pushf
push
das
and
mov
jge
inc
mov
arpl
call
mov
cld
hlt
add
mov
pop
push
mov
aaa
sub
or
insl
inc
and
mov
ds
jne
push
rorl
push
mov
adc
shrl
outsl
sub
rcll
in
loop
pop
ds
dec
jge
inc
adc
cmc
incl
std
xor
aaa
hlt
cmpsl
filds
dec
dec
pop
add
push
cmc
out
mov
fdivrl
push
push
adc
inc
inc
ljmp
dec
sbb
add
and
xorl
outsb
jbe
outsl
js
pop
or
arpl
add
push
push
mov
push
dec
xchg
and
aaa
rolb
mov
push
push
or
mov
lock
cltd
and
adc
clc
xor
inc
inc
ficompl
or
ret
addb
or
jle
mov
mov
jno
cli
pop
loopne
push
lods
mov
sbb
mov
sub
shll
outsl
xor
push
jp
mov
stos
adc
sub
fdivr
decl
dec
arpl
sbb
adc
sub
add
mov
hlt
add
dec
mov
jnp
or
lret
xorl
dec
or
ss
xor
neg
add
hlt
fcom
adc
push
loop
or
dec
pop
mov
das
push
inc
inc
dec
addr16
dec
push
push
bound
adc
sbb
jbe
add
enter
mov
orl
out
sub
out
xor
or
xor
add
movsl
das
mov
xor
shrl
fcmovnbe
test
dec
jae
jb
mov
in
or
mov
push
jle
in
ret
mov
dec
push
pusha
test
inc
or
roll
dec
push
push
mov
addr16
cmpsb
mov
add
rorb
addr16
xchg
or
pop
data16
mov
pop
push
ja
rcll
nop
cmp
je
sub
sbbl
lock
add
mov
xor
mov
incl
shlb
xor
xchg
fadd
jg
dec
dec
imul
xor
inc
xor
daa
je
lock
dec
lods
stos
sbb
in
xchg
or
xor
sub
cwtl
fcoml
add
mov
clc
cmp
mov
stos
mov
or
xchg
in
cwtl
mov
pop
hlt
lcall
loopne
aaa
jne
sti
push
dec
inc
aaa
jne
ds
shlb
pop
stc
jne
inc
pop
jbe
dec
push
adc
xchg
pop
idivl
out
rcl
sub
pop
aam
mov
xor
jns
popf
leave
out
mov
add
or
cmpsl
dec
push
mov
rcll
mov
add
cld
adcb
add
ret
jae
nop
mov
fstpl
push
cld
mov
js
in
or
in
jb
push
jns
dec
ss
rcrb
std
cmc
xchg
sub
jns
push
and
xor
inc
sub
xor
daa
add
shlb
or
push
push
xor
xadd
ret
push
dec
bound
add
dec
or
les
insl
jbe
loope
das
push
xor
or
je
inc
insb
push
dec
or
or
mov
test
outsl
sub
mov
inc
jecxz
mov
cmp
mov
jbe
aaa
xor
xor
sbb
or
subb
dec
loopne
clc
xor
inc
je
jae
dec
push
cmp
push
cld
call
push
xor
cmp
mov
or
nop
xchg
repnz
clc
jg
xlat
jge
je
dec
shlb
inc
arpl
push
pop
dec
dec
xorl
adcl
lret
fs
adc
sldt
inc
fistps
iret
mov
cmpl
jmp
insb
lahf
xchg
ljmp
dec
popa
lods
fldt
xchg
sbb
or
je
add
add
inc
xchg
mov
movsl
ficoml
fmuls
xor
push
ss
roll
dec
and
add
add
inc
push
fnstcw
out
mov
fiadds
lret
add
adc
ss
insb
notb
jmp
fs
push
sbb
add
add
sbb
xlat
inc
icebp
push
jmp
push
jno
xor
dec
mov
rolb
mov
add
inc
push
filds
dec
jbe
fstp
sbb
xchg
add
dec
or
inc
xor
and
jno
add
sbb
and
cmpsb
mov
inc
jo
mov
push
push
ret
mov
fdivs
inc
inc
sbb
mov
add
cmpl
mov
stc
sbb
imul
sbb
mov
cmp
mov
xlat
cmp
xor
push
cltd
je
int
push
mov
punpcklbw
mov
lea
inc
push
in
fs
call
sbb
push
sbb
scas
cmc
push
sub
lock
aam
hlt
push
and
or
mov
and
js
lcall
ret
push
or
xor
pop
cmpsl
push
add
sub
pop
and
outsl
sub
xchg
aaa
push
pusha
push
subb
mov
lret
lods
inc
jecxz
mov
sub
inc
fwait
jg
insb
arpl
out
xor
test
push
jne
xchg
add
adc
pop
and
xor
xor
pushf
inc
adc
cmovno
add
push
sub
out
mov
loopne
mov
pminsw
enter
jae
mov
cwtl
mov
cmp
mov
insb
scas
orb
jecxz
loopne
dec
xchg
out
and
cmp
jo
out
jae
add
and
xchg
and
cmp
add
dec
sbb
ds
out
inc
push
add
ja
js
push
push
adc
adc
adc
adc
sahf
cld
or
mov
adc
inc
insb
ret
mov
and
ret
out
sub
mov
cs
push
scas
mov
push
add
test
cmpl
outsb
scas
or
push
xchg
and
fs
outsl
push
xchg
je
inc
stc
cld
rorl
sbb
cmp
inc
adc
add
pusha
dec
adc
lret
stos
adc
mov
xor
rorl
xchg
aaa
push
mov
outsb
icebp
fwait
push
repz
push
in
ljmp
or
adc
outsl
shlb
gs
pop
push
lret
push
movsb
fwait
test
or
mov
std
add
xchg
cwtl
in
push
in
pushaw
sbb
testb
sbb
popf
cmp
add
mov
mov
adc
add
add
push
sahf
xlat
andl
xchg
and
out
add
jns
mov
les
and
xor
jae
je
cld
mov
rolb
mov
xchg
push
repnz
pusha
ja
pop
cmp
in
rorl
xor
into
jno
dec
data16
in
fstpt
pop
inc
or
sub
mov
das
xor
test
push
sbbl
dec
sub
push
mov
adc
or
xchg
xchg
sbb
out
shl
dec
loope
xchg
mov
test
add
dec
pop
lods
and
lods
jae
cmp
jl
lds
icebp
sub
test
add
sbb
out
cmpsb
pusha
or
mov
push
outsl
dec
pop
leave
lcall
out
inc
imul
sbb
daa
xchg
call
fwait
add
sbb
xlat
or
mov
aad
inc
shr
inc
sub
lahf
sahf
xchg
ss
add
lods
mov
fwait
pop
push
rcrb
mov
loope
mov
xor
mov
jecxz
pop
in
xor
sbb
cmp
in
jp
sbb
adc
jne
ja
mov
xor
sbb
jp
mov
add
std
sub
es
gs
out
popa
push
out
xchg
dec
xor
xor
sub
push
xlat
mov
sub
add
aad
fdiv
pop
enter
mov
sbb
andb
cmp
aam
jge
pushf
inc
cmpsl
out
jg
jbe
xor
sub
adc
mov
faddl
sbb
iret
add
stc
xor
loope
lea
add
xor
insb
xchg
cmp
pop
inc
and
mov
mov
push
jbe
xor
inc
or
in
pusha
insl
in
js
outsb
int3
add
test
jmp
in
lock
pop
adc
cmp
fmull
repz
jp
test
xchg
push
mov
jne
es
dec
sti
popf
add
add
xchg
or
stos
mov
mov
outsl
dec
cmp
add
xor
lcall
sub
and
and
mov
scas
loop
mov
stos
push
outsl
sbb
arpl
insb
add
sub
mov
sub
mov
pop
jno
dec
ds
jnp
lret
fimuls
add
movl
cmp
and
sbb
fidivl
loop
shr
pop
push
inc
cltd
jnp
loop
subl
lcall
daa
pop
and
sbb
dec
fsubl
xor
inc
jl
fmul
push
pop
daa
ret
pop
int
pop
clc
or
daa
test
mov
sbb
pop
arpl
mov
test
mov
cmp
leave
cmpb
mov
gs
shll
nop
fildl
inc
push
mov
sbb
lcall
lods
xlat
ss
stos
sahf
xor
dec
and
cmp
xchg
push
das
pop
fstl
sbb
or
cmpsb
xlat
ret
mov
and
mov
imul
pop
rcl
jns
mov
inc
sarl
in
cmp
pop
mov
pushf
aaa
cwtl
pushf
xor
xchg
cmp
cmovge
cs
fbstp
insb
pop
or
sbb
push
shl
loope
outsl
mov
or
inc
mov
mov
mov
sub
dec
cmp
xchg
push
or
in
scas
inc
pop
dec
dec
loopne
mov
adc
jns
mov
aas
shlb
stos
mov
mulb
mov
mov
dec
das
mov
roll
cmpsl
sbb
out
dec
xor
add
insl
and
loop
imul
gs
add
xorl
sbb
lea
dec
into
xlat
mov
addr16
jp
arpl
push
pop
or
mov
fmulp
cmp
cmpsb
lods
and
lds
and
int3
dec
mov
inc
cs
jl
popa
rol
cwtl
push
xchg
notb
and
insb
out
je
jmp
pop
std
sub
or
fstl
aad
inc
out
ficompl
or
ret
or
aaa
aaa
js
lcall
sbb
es
bound
dec
cmp
jno
mov
jo
cmc
mov
cli
push
dec
sahf
jo
test
push
out
and
ljmp
orb
sar
mov
lock
adc
test
and
cmp
push
mov
mov
jecxz
ret
addl
cwtl
stc
mov
les
cmp
jb
ljmp
add
lods
dec
fstpl
loope
xor
pop
and
and
xchg
jne
pop
sbb
pop
je
cmp
rcrl
push
bound
mov
mov
xchg
pop
xchg
jne
cmp
ret
mov
adc
rorl
icebp
dec
cmp
enter
mov
addl
push
adc
imul
shrl
adc
and
add
mov
sub
repz
sbb
loope
mov
sahf
hlt
jl
mov
subb
mov
xchg
xor
insb
ret
shrl
add
dec
fisubs
adc
lds
pop
insl
out
mov
in
cmp
or
stc
mov
scas
lods
xchg
or
fwait
adc
in
fadd
mov
dec
cmp
ret
pop
xchg
cmp
orl
push
adc
mov
shll
xorb
fistps
jle
add
in
mov
add
mov
sbb
adcl
push
or
mov
inc
jmp
inc
aas
adc
mov
leave
lret
test
cmp
cli
loopne
inc
mov
push
mov
add
and
in
xor
lock
pushf
pop
add
gs
jnp
adc
push
mull
dec
arpl
mov
mov
sub
jl
in
test
or
cmp
mov
popa
mov
and
xor
adc
mov
arpl
mov
add
enter
es
clc
mov
negl
push
push
pop
mov
dec
ss
cltd
push
jbe
add
dec
add
mov
idiv
sti
xor
dec
jbe
inc
adc
xchg
pop
xor
adc
sti
add
test
add
lds
es
insl
es
aam
pop
adc
cmp
mov
aad
pop
ljmp
addl
mov
xchg
mov
dec
adc
das
mov
cmp
lcall
lret
adc
pushf
adc
and
fdivs
movsl
add
mov
push
faddp
cmp
push
pop
pop
and
inc
ja
xor
clc
sub
mov
or
push
iret
xor
push
inc
add
out
je
sbb
daa
es
and
dec
xor
insb
outsl
stc
xchg
or
pop
das
fwait
dec
add
sbb
rorl
pusha
cmp
pusha
pop
xor
mov
dec
sbb
cli
inc
sub
adc
jae
jno
cmp
lods
mov
push
cwtl
fdivrs
stc
jge
sbb
fs
dec
dec
shlb
sahf
aad
outsb
sub
pop
cli
adc
inc
std
sub
leave
pop
sub
xor
daa
js
cli
arpl
push
dec
testl
dec
ja
push
mov
push
call
test
dec
adc
cmp
pop
xchg
xor
aas
ss
loop
ljmp
pop
cmpsb
loopne
and
pop
push
xor
inc
jg
mov
mov
adc
addl
push
loopne
leave
cmpsb
mov
xor
cmp
push
mov
es
ret
inc
mov
fsts
rcrl
adcl
cmp
mov
cs
faddl
mov
jno
shl
lahf
sub
notb
mov
sbb
ds
enter
cmpsl
in
or
sub
insb
out
add
loop
dec
and
mov
jo
sbbl
jo
daa
xor
and
test
xchg
fldenv
ret
jno
adc
cwtl
adc
mov
lock
addr16
mov
dec
adc
push
xor
sbb
sbb
arpl
sbb
jne
pop
mov
insb
nop
pop
test
xchg
std
rolb
push
loopne
popa
into
mov
mov
mov
or
cmp
les
xchg
stc
fdivrl
insl
icebp
inc
push
clc
xchg
inc
sub
popf
push
cli
xor
jge
pop
je
inc
into
sbb
dec
xchg
add
xor
add
xor
stc
cmpl
inc
jge
es
adc
mov
pop
test
fwait
popf
jmp
sti
lock
jge
xchg
lods
mov
jge
push
test
jne
mov
data16
xlat
cmpsb
xchg
sbb
mov
xchg
loopne
test
repz
jl
push
loop
pop
jo
insl
sbb
test
enter
cmp
push
push
or
push
jnp
inc
adc
push
mov
roll
movsl
bound
jmp
lods
adc
pop
pop
push
sti
mov
jecxz
imul
and
aas
or
and
cmp
xchg
adc
data16
push
ljmp
inc
xchg
sbb
lea
xchg
nop
inc
push
ficoms
mov
or
adc
or
jp
leave
dec
mov
sub
pop
ljmp
test
aam
sub
loope
mov
inc
cmp
push
loopne
into
sysenter
push
outsl
cmp
xchg
push
test
dec
arpl
or
cwtl
inc
jle
push
pop
gs
out
mov
dec
inc
pop
add
sbb
pop
push
mov
pop
add
cmp
and
cmp
sbb
test
jmp
out
ss
fnstcw
inc
adc
mov
addr16
pushaw
les
jle
cwtl
aam
insl
or
xchg
and
mov
aad
enter
iret
ss
int3
loop
incb
dec
out
aaa
or
cli
aaa
js
jl
mov
cwtl
xor
xor
jmp
pop
mov
or
adc
and
int
sub
imul
or
out
sub
or
test
lea
sbb
mov
mov
xchg
scas
xchg
les
sub
mov
inc
popf
inc
lds
out
cltd
push
inc
insl
ret
clc
andl
enter
sub
into
sarl
add
cmp
cmp
mov
test
iret
loope
and
dec
rcll
push
pop
loop
addr16
int
add
inc
fisttps
xchg
mov
or
inc
cmp
inc
cmp
adc
jae
mov
lea
orl
ss
mov
lcall
rolb
outsb
mov
xor
fucom
xchg
and
or
dec
arpl
pop
aam
js
add
jecxz
je
pop
movb
ljmp
push
jl
mov
cmpsb
test
jbe
scas
testl
sbb
inc
cmp
lea
leave
xor
fidivl
jnp
scas
test
and
cs
cli
jb
stc
mov
hlt
nop
xchg
ds
mov
rolb
or
or
ss
daa
push
cmp
ss
push
mov
pop
jl,pn
or
rcrl
mov
mov
cwtl
push
add
mov
mov
lret
divb
add
or
mov
orl
and
pop
jge
push
push
jne
pop
inc
or
mov
cmp
jnp
popa
repnz
push
push
xor
daa
test
sbb
cltd
test
push
sbb
jb
add
lahf
cmpsl
sbb
sahf
nop
out
jmp
enter
sbb
cs
jle
and
mov
rcl
loopne
subl
test
mov
mov
out
sub
sbb
mov
test
outsb
or
fstps
pop
sbb
dec
mov
sbb
or
push
or
nop
fidivl
mov
cmp
scas
pop
adc
loope
push
jb
or
lcall
sbb
pop
xor
mov
push
mov
fcoms
inc
lcall
sub
xor
sbb
xchg
inc
xchg
ds
bound
push
dec
jle
and
cltd
packuswb
jne
mov
repnz
movsb
push
add
add
cmpsl
dec
adc
mov
sbb
inc
adc
int
pop
or
shrl
jbe
jp
sub
int
dec
mov
add
maxps
mov
out
int
dec
cs
jo
push
push
push
adc
in
inc
push
neg
xor
loopne
push
xor
in
pop
adc
push
fistpl
xchg
xchg
cmp
daa
push
xchg
arpl
sbbl
out
mov
inc
xchg
push
inc
jne
dec
push
or
addr16
mov
cmp
out
mov
movsb
std
sarb
out
dec
xchg
aas
popl
xchg
int
sahf
jl
jne
push
pop
addr16
inc
pop
lret
and
xor
jb
or
or
sbb
mov
lds
fisubl
pop
inc
jecxz
fisubrs
push
mov
ret
out
or
cmp
sub
jbe
mov
sub
jo
push
clc
xchg
dec
lret
dec
inc
add
xor
sbb
jno
gs
pop
addr16
sub
subl
scas
inc
shl
jbe
rcr
dec
xor
xchg
pop
test
fwait
nop
call
xchg
jnp
lods
inc
icebp
xchg
mov
mov
lock
cmp
or
xor
jge
imul
inc
lcall
or
addl
push
shlb
mov
clc
sub
sbb
rol
and
sub
movsb
pusha
icebp
loopne
test
mov
loope
jmp
notb
mov
repnz
xor
mov
pop
cs
pop
test
aaa
cs
out
dec
adc
daa
sbb
mov
pusha
les
inc
inc
xor
inc
ljmp
inc
sahf
lds
mov
mov
inc
mov
je
pop
sub
dec
lods
cs
inc
mov
out
cmp
in
jmp
inc
and
mov
xor
ss
outsb
lods
add
mov
iret
jle
adc
adc
mov
mov
mov
enter
and
xchg
std
movsb
add
mov
or
stc
inc
sbb
push
mov
lahf
xor
int3
mov
sbb
xchg
mov
mov
mov
pop
outsb
sub
cmp
sub
clc
inc
repz
add
in
jae
sub
jmp
aad
push
jle
adc
xor
mov
in
push
pop
adc
and
scas
into
mov
ljmp
sub
mov
aad
aad
fucom
or
ret
jg
jle
sbb
jle
into
jno
cmp
psubb
push
das
popa
adc
jnp
add
push
scas
insb
ret
loope
inc
mov
pop
pop
add
sahf
fs
aad
pop
dec
adc
repz
scas
mov
inc
add
lret
inc
push
popa
add
loope
mov
jle
sub
pop
stos
pop
mov
cltd
and
icebp
pop
pop
sti
xor
push
imul
sbb
pop
mov
push
loopne
in
add
add
loopne
jne
lret
sbb
insl
les
jle
cmp
lods
jp
js
sti
mov
iret
xchg
jl
fsts
add
pop
dec
or
xchg
mov
shrl
imul
mov
xor
repz
sub
xchg
lods
inc
stos
inc
pop
jae
sbb
popa
rol
xchg
push
inc
pop
test
enter
push
out
push
lock
inc
orb
aas
cmp
mov
push
pop
pop
adc
inc
dec
adc
fwait
jp
daa
roll
cwtl
out
movb
xchg
movb
sub
pusha
movsb
push
movb
js
outsl
ret
adc
in
pusha
cmp
mov
or
xor
je
mov
or
fs
cmpsb
addl
pusha
popa
loopne
das
ret
jae
loope
ja
mov
loopne
push
sub
fdivr
sub
xchg
or
pop
fisttps
in
cmp
lock
lret
sub
sbb
outsb
dec
bnd
ret
in
inc
outsb
repz
push
movhps
push
cmpsl
ds
stos
cmpsb
mov
dec
push
outsl
mov
lds
adc
ficoml
das
stos
jle
stos
adc
jo
sub
sub
addr16
in
inc
iret
dec
adc
pop
shrl
shrl
or
movsb
jecxz
mov
mov
gs
sub
icebp
or
sub
insb
test
scas
pop
lods
or
mov
mov
or
daa
in
bound
movsl
pop
inc
loop
jmp
aad
mov
test
sub
cmp
push
inc
loopne
shlb
inc
mov
xor
gs
sub
ss
push
rolb
sbb
add
pop
sbb
dec
pop
mov
mov
or
xchg
arpl
jb
mov
ds
xor
jl
loope
cmpl
lea
in
xchg
cmpl
jno
mov
inc
into
mov
ds
int3
mov
add
sbb
mov
mov
inc
add
sbb
mov
int3
sub
data16
gs
hlt
iret
stos
jmp
cld
mov
mov
out
cmovno
icebp
sbb
out
push
sub
sbb
daa
and
sbb
shl
mov
fs
mov
loopne
sub
rcl
addb
int3
sub
dec
and
mov
mov
shrl
in
inc
test
inc
test
popa
jno
push
pop
addl
out
in
jno
movsb
xchg
add
in
fadds
leave
es
or
jge
pop
out
mov
push
sub
fisubl
adc
movl
loope
mov
hlt
pop
mov
test
jae
jle
insb
les
xchg
mov
rcrl
jmp
and
inc
popa
pop
popf
fdivs
stc
leave
test
dec
cmc
or
mov
outsb
dec
jne
rorl
pop
mov
xor
popa
inc
jae
cmp
cwtl
push
out
push
cs
push
push
xorps
pop
cmpl
mov
xchg
jae
in
in
mov
insl
fs
adc
test
xor
filds
sbb
scas
ss
ds
mov
call
in
out
inc
shl
fldenv
xor
mov
mov
mov
push
add
js
add
mov
shll
repnz
shlb
lods
les
pop
insl
jne
mov
push
and
stos
andl
push
add
ds
xchg
clc
sub
adc
cli
inc
xchg
sbb
or
cld
cmp
movsl
mov
pop
arpl
pop
clc
mov
in
sbbb
cmc
aad
add
leave
stc
sbb
sub
pusha
inc
mov
xchg
mov
pop
sti
push
mov
insb
push
cmp
sub
pop
pop
push
adc
mov
inc
mov
je
dec
mov
das
cmp
pop
jp
mov
adc
adc
ss
sti
cmp
imul
mov
test
inc
add
mov
and
shrl
and
sub
jnp
jno
pop
ret
decl
xchg
dec
stc
ss
mov
stc
test
pop
pop
dec
push
out
inc
pop
out
xchg
subl
mov
xor
movsb
scas
push
mov
fsts
mov
fistpll
pop
fmulp
out
push
scas
scas
dec
mov
cmp
je
push
pop
test
dec
je
rcl
pusha
mov
add
outsl
jnp
lods
mov
xchg
cmc
cmp
inc
rcr
push
push
push
or
aaa
test
movsb
adc
orl
fiaddl
test
js,pn
fisttpl
dec
push
sbb
xor
mov
mov
es
sub
add
add
and
xchg
js
push
andl
sbb
inc
mov
aas
popf
jp
loopne
les
aas
test
lods
dec
xchg
add
push
sub
sub
push
cmp
xchg
loopne
sti
pop
xor
inc
cmp
xchg
test
mov
inc
or
mov
jb
popf
dec
lcall
cmp
pop
jns
hlt
mov
cmp
inc
cld
jb
sub
outsl
add
into
sahf
xchg
mov
jae
sbb
rol
movsl
pop
jns
xor
js
or
jb
test
sbb
jno
add
into
or
addr16
dec
movsl
xchg
fstl
jmp
sbb
cwtl
cmpsl
stos
sahf
dec
out
dec
aaa
jmp
mov
jl
test
fs
and
xor
pop
sbb
and
and
clc
fisttpl
lods
pop
test
int
sub
adc
test
mov
enter
dec
call
or
pop
pop
dec
popf
dec
xorb
cmp
pushf
sar
fistpll
sbb
or
shlb
bound
lds
or
mov
iret
dec
aaa
insb
ds
andb
hlt
push
aam
mov
inc
ljmp
sbb
sub
sbb
je
or
arpl
jo
add
mov
imul
lret
jge
mov
shr
dec
test
push
sbb
shlb
sbb
mov
jge
sub
push
mov
mov
loop
pop
pop
xchg
out
push
lds
sti
add
dec
das
sahf
jbe
test
and
sub
or
dec
sub
pop
les
inc
into
dec
pushf
movsb
dec
mov
dec
xor
lods
lret
add
push
pusha
cmp
xchg
pop
loopne
dec
mov
in
insb
js
mov
or
cmpsl
test
icebp
rorl
fs
mov
cmpsl
adc
sbb
pop
ja
cmpb
cmc
fstp
lret
into
mov
xchg
add
push
mov
pop
pop
movsb
sub
add
mov
into
dec
mov
mov
and
outsb
call
push
or
repnz
pop
push
pop
fwait
dec
jle
fcomps
mov
ds
je
dec
jg
add
psrad
dec
imul
mov
xchg
push
pop
js
int3
aam
or
or
push
mov
jne
dec
cmp
insb
xorl
frstor
mov
sub
cmp
inc
inc
fnsave
pop
mov
mov
add
jno
jne
cmc
aas
andl
popa
sbb
pop
das
push
loope
iret
nop
mov
jp
shl
jo
fsubs
cmp
or
dec
mov
or
or
dec
pop
xchg
add
pop
push
outsl
dec
cmp
pop
sub
inc
add
in
jns
es
jle
pop
js
test
iret
xor
xor
sbb
mov
sbb
sbb
jge
in
ret
testb
mov
cmpsb
jp
mov
mov
leave
mov
pop
and
sbb
mov
jnp
mov
push
mov
jbe
call
jns
shlb
pop
xchg
add
enter
jl
idivl
add
daa
lods
pusha
fs
mov
mov
and
xchg
rorb
or
iret
es
cmp
mov
jmp
adc
sbb
outsb
andl
pop
mov
push
fadd
outsl
sbb
jg
hlt
aam
xchg
sub
xchg
stc
add
adc
jecxz
jle
adc
add
insl
aas
clc
int3
add
push
cwtl
mov
aam
jbe
sbb
jg
mov
jbe
adc
lret
push
out
je
xor
mov
int
push
je
xchg
clc
xor
pop
shll
test
push
jl
xchg
push
cmp
pop
mov
pop
dec
sti
inc
js
test
jmp
pop
xchg
and
clc
fadds
sahf
enter
imul
ljmp
addr16
pusha
mov
ja
dec
pop
push
mov
mov
repz
mov
push
loopne
sbb
lahf
pusha
aad
popf
ret
and
cwtl
cmc
pop
bound
dec
cltd
mov
jno
dec
loop
sub
mov
push
sbb
inc
lods
idivb
clc
xlat
test
cmpsl
nop
adc
sub
in
mov
into
or
xchg
sarb
xchg
cs
cwtl
data16
ds
pushf
adc
push
scas
je
mov
add
icebp
movsb
call
insb
sbb
test
aam
test
subl
inc
push
rolb
lahf
pop
out
js
rcr
icebp
lds
stc
nop
and
cmpsb
ret
imul
popf
sar
arpl
nop
or
xor
and
pop
inc
int
and
scas
movl
inc
adcl
test
inc
add
sbb
or
push
jbe
add
aas
and
adc
dec
mov
mov
sub
stos
popa
mov
lcall
rcll
dec
popa
inc
inc
push
sbb
sub
ss
jg
pop
ljmp
dec
push
sub
sbb
pop
sub
out
or
lret
fcoms
fidivrl
push
cwtl
add
rcll
mov
fnstenv
add
dec
jbe
push
inc
icebp
inc
sub
loopne
add
jnp
aaa
mov
jo
into
daa
sub
sbb
inc
add
add
push
sub
mov
daa
adc
push
add
scas
add
and
mov
fwait
popf
dec
push
push
gs
adc
shll
fnstsw
jbe
fstl
insl
push
les
xchg
add
lock
mov
movsb
inc
sub
lock
shrl
or
add
or
clc
inc
dec
dec
add
movswl
add
jnp
pushf
xor
push
push
fs
aaa
popa
sbb
cld
mov
inc
mov
add
inc
rolb
push
inc
xor
fstpt
sbb
adc
add
xchg
adc
call
in
call
add
dec
adc
mov
xor
andb
movsb
mov
pusha
subl
mov
sbb
mov
leave
xor
jae
add
jo
outsb
loop
lock
sub
hlt
inc
add
sub
push
xchg
and
fwait
xchg
cmp
fsubrs
insl
ja
rol
outsb
test
outsb
bound
pop
or
mov
adc
clc
inc
je
insl
int3
push
dec
mov
inc
shrb
and
pop
daa
push
or
push
cmp
pop
repnz
cmp
jno
pop
lock
push
jae
inc
xor
sub
add
mov
sbb
push
int3
negb
pop
test
adc
push
mov
xor
jmp
lret
jno
push
shr
add
jb
fsts
dec
inc
xor
xchg
aam
inc
adc
mov
pop
push
les
dec
clc
pop
xor
push
imul
sbb
jg
adc
xchg
xor
fs
cmp
mov
fs
sbb
rcr
add
test
ficoms
pop
add
jbe
imul
fsubs
jp
mov
pop
sbbb
imul
inc
sbb
cld
adc
rorl
cwtl
pop
add
imul
or
dec
xor
sub
test
and
xor
jno
sub
icebp
inc
je
dec
imul
shlb
dec
dec
dec
cld
sub
fcompl
loopne
mov
dec
mov
std
push
sbb
push
loop
fs
aas
pop
test
aaa
addr16
jne
icebp
pop
dec
push
push
add
push
iret
mov
inc
adc
mov
lea
inc
xor
incl
cmp
xor
cmp
pushf
ss
adc
fs
jg
jl
sub
cs
xor
arpl
imulb
sub
pminsw
jne
adc
test
aaa
leave
mov
in
or
ficoms
out
inc
outsb
jo
mov
shl
inc
mov
jo
push
pop
jl
repz
adc
mov
inc
call
add
and
mov
xchg
jmp
divb
push
dec
sbb
inc
inc
inc
cmpsl
cli
push
insb
pop
loop
les
jb
xchg
pop
jp
pop
mov
ss
sbb
jle
dec
sub
sbb
xchg
lea
push
mov
in
xchg
mov
cli
push
inc
jle
fsubrp
cmp
aam
adc
dec
imul
fiaddl
dec
ret
xchg
mov
adc
inc
or
cltd
mov
repz
fstp
das
sub
adc
sub
or
rorb
xorl
imul
jg
inc
dec
arpl
rcrl
iret
xor
jno
push
mov
dec
inc
add
popa
enter
inc
mov
push
loope
call
mov
ja
inc
jo
pushl
add
cmp
add
shl
mov
dec
daa
in
pushl
xor
lock
add
lods
roll
add
sbb
mov
and
aam
aas
pop
sub
lea
pop
ljmp
je
xor
fldenv
pop
sub
push
mov
xchg
sub
int
es
cmp
outsl
adc
mov
push
push
shll
and
arpl
popa
ret
pop
inc
lods
xchg
xchg
sub
cmpsb
or
cmp
push
adc
or
cmpsb
gs
adc
mov
pcmpgtd
sbb
js
imul
hlt
sbb
inc
mov
inc
sub
ficomps
jb
xchg
ss
ljmp
add
rol
sbb
addl
or
sbb
or
mov
imul
push
pushf
jp
adc
or
sbb
test
pop
adc
xchg
int
roll
or
and
dec
enter
fucomip
jbe
test
ja
lcall
cmp
ss
push
xchg
iret
bnd
adcl
add
adc
inc
lea
ljmp
mov
push
mov
dec
mov
add
sbb
ficoml
push
addr16
ficomps
scas
xor
add
pop
loopne,pn
stos
sub
dec
push
loop
and
hlt
ss
sbb
lret
mov
movsb
push
out
or
dec
loopne
or
pop
mov
popa
add
mov
negb
xlat
xchg
add
add
add
add
mov
sub
adc
adc
daa
sub
insl
in
call
sbb
rorl
cmpsl
idiv
xchg
je
xchg
or
adc
insl
fstpt
and
sbb
and
in
stc
inc
scas
std
fwait
jae
dec
add
cltd
adc
inc
push
mov
sbb
daa
data16
arpl
mov
mov
jge
mov
fwait
jae
push
and
inc
xor
add
fistpll
fwait
xor
and
mov
and
inc
add
inc
xchg
test
mov
jle
cmp
stc
lret
ljmp
ss
shlb
test
sbb
repz
pop
jg
les
lahf
aas
sub
adc
jmp
add
icebp
mov
or
out
jg
fcoml
xor
lds
xchg
xchg
jmp
xor
scas
cs
arpl
daa
je
jae
imul
dec
sbb
cwtl
nop
fistps
cmp
cmp
or
mov
pop
mov
lret
and
and
out
subl
xor
js
adc
clc
add
or
adc
jg
add
mov
mov
es
loope
cmp
in
outsb
add
imul
orb
or
push
xor
rolb
jp
push
xor
and
negl
push
mov
stos
stos
outsb
and
int3
arpl
popf
cmp
adc
lods
mov
loop
add
stc
or
jo
pop
movb
and
add
push
and
fnstenv
pop
pusha
push
repz
add
popf
sti
pop
add
and
shll
mov
push
inc
dec
loopne
xor
cmp
xchg
xor
mov
dec
jecxz
adcb
ret
jg
sahf
jnp
jae
inc
jne
xchg
int
lods
lret
add
lahf
sub
ret
shl
push
mov
in
test
or
mov
push
ret
in
xorl
loope
aas
jle
imul
sbb
mov
shll
pop
add
add
in
sbb
call
prefetch
or
or
dec
push
pop
jo
enterw
pop
shlb
cltd
out
incl
cld
push
aad
xlat
adc
les
cmp
jne
repnz
adc
shlb
fistpll
loopne
das
mov
pushf
fwait
jb
imul
aas
inc
and
scas
and
cmp
mov
mov
mov
and
js
push
sub
cli
out
and
ficompl
test
aaa
cli
or
ret
std
fcoms
mov
or
hlt
movsb
mov
mov
pop
push
pop
sub
ja
jg
push
or
mov
es
xchg
pop
int
loope
orl
stc
fisttpl
pop
pop
add
subb
and
insb
imul
fninit
dec
clc
std
mov
jg
fsubl
jnp
add
out
mov
outsl
or
into
adc
stos
or
aas
das
cmp
xchg
daa
sub
out
jp
add
movl
push
cmp
test
xchg
xchg
sbb
or
int
decl
jo
aad
jle
jl
loope
jae
sti
adc
mov
aaa
inc
ds
pop
mov
inc
cltd
outsl
pop
dec
lds
js
jnp
lds
jg
bound
mov
in
mov
mov
cmp
xchg
sahf
loopne
stc
dec
xchg
push
bound
out
mov
lret
inc
rcrb
push
lcall
ss
jge
das
add
pop
or
push
sub
stos
push
in
and
outsb
adc
cmp
adc
pop
cmc
pop
decl
ret
js
fsts
aam
cmp
std
icebp
jg
fbld
and
fldl
xor
cli
fs
jg
jle
jmp
addl
mov
inc
adc
out
arpl
xor
jbe
add
js
or
lahf
mov
fmuls
in
test
jmp
adc
out
sti
mov
loop
sbb
or
jg
insb
stos
xchg
into
shrl
popf
xchg
dec
dec
rdtsc
sbb
mov
inc
cld
mov
mov
xlat
sbb
andl
fisubrs
dec
mov
negl
adc
idiv
fists
mov
push
dec
fisttps
movzwl
xlat
ret
popf
out
out
icebp
jne
jg
ja
mov
and
dec
xchg
das
cli
out
ljmp
dec
push
sbb
cmpsb
sbb
jnp
lahf
xchg
dec
jae
sub
jmp
ja
xchg
jb
addr16
jle
dec
mov
sti
and
ficompl
ret
sbb
and
into
arpl
lds
xchg
inc
sbb
loopne
call
rclb
in
pop
jbe
aad
incl
add
rcrl
jmp
mov
cs
popl
mov
movsl
jae
or
enter
stos
into
cld
mov
sbb
push
add
or
into
push
ret
lods
shrl
add
inc
push
mov
xor
and
xchg
sbb
mov
icebp
pop
shll
jle
jl
sub
pop
or
sbb
push
stos
aam
and
aam
jmp
jg
lods
mov
lret
lcall
jecxz
nop
xor
test
sbb
push
cmp
nop
data16
fildl
int
shl
loopne
and
loope
sbb
lods
xchg
sub
adc
adc
dec
stc
icebp
jle
jmp
jae
mov
leave
addr16
inc
das
inc
in
and
flds
jg
pop
jmp
fmuls
fnsave
loopne
out
stos
mov
sahf
xchg
mov
hlt
out
out
push
fists
push
pop
aad
mov
ret
push
adc
fcomi
rcll
jb
cli
cmp
mov
pop
leave
std
xlat
mov
stos
mov
push
and
leave
divb
lcall
inc
and
sub
sub
mov
xchg
push
pop
insl
or
mov
mov
fisubrs
mov
xchg
aas
fsubrl
ds
cmp
mov
sbb
lret
ret
pusha
test
out
xchg
xlat
jnp
ja
xorb
repz
repz
inc
loopne
push
cwtl
mov
xchg
mov
outsb
dec
out
mov
add
aad
sub
es
sub
dec
jae
lds
mov
pop
xchg
sarb
pop
int
jl
cmp
jno
pop
jnp
das
add
jne
dec
cmp
lods
fs
decl
sbb
jbe
js
xor
or
xor
scas
lock
inc
cld
ret
mov
out
fdivl
mov
inc
add
daa
jge
sti
dec
mov
mov
scas
and
cli
cmp
mov
in
cmc
lcall
dec
repz
dec
mov
mov
xchg
mov
xchg
test
push
jbe
pop
jb
xor
add
inc
fstpl
jnp
out
in
testb
mov
adc
dec
int3
shl
shrb
add
cmp
imul
std
cmp
outsl
out
add
jnp
inc
out
iret
movsl
or
call
jmp
lahf
outsl
xchg
shlb
and
push
int3
inc
and
daa
jnp
dec
jno
cmp
lock
out
mov
cmp
sub
out
adc
jb
mov
mov
or
mov
xchg
adc
ja
mov
arpl
aam
pop
pop
aas
inc
add
pushl
push
daa
fwait
movsb
lret
pusha
mov
daa
pusha
loopne
mov
jae
shr
mov
arpl
out
loopne
loop
mov
movsl
lret
sub
xor
jecxz
and
cs
sub
addr16
pop
in
pushf
clc
ret
lock
pop
andb
jge
loope
adc
mov
jae
je
aaa
lahf
xchg
bound
pop
mov
jmp
pop
or
and
fmull
incb
pop
insb
sbb
cmpsl
mov
mov
std
xchg
cli
popf
jmp
in
mov
fcos
jge
or
repnz
enter
bound
mov
xor
pop
rol
call
out
cmp
xchg
or
mov
cmp
clc
test
cld
dec
add
adc
cltd
insl
cmp
fcomip
mov
int3
andb
scas
sbb
push
mov
dec
adc
loop
sub
mov
xlat
push
clc
pop
loope
dec
mov
pop
ja
pop
push
adc
mov
xchg
cmc
sahf
fisttpll
jecxz
fwait
sub
sub
adc
loope
int3
divb
leave
pop
adc
icebp
pop
lods
aaa
pop
aam
test
mov
test
adc
mov
decb
sub
and
std
cmp
push
cmp
testb
push
lods
jno
lcall
into
std
fldenv
push
pushf
mov
movsb
fs
sbb
stos
cmc
ljmp
lock
inc
pop
leave
push
inc
movsb
mov
mov
mov
outsb
mov
mov
das
push
into
std
and
xchg
pushf
mov
sbb
jns
ret
std
daa
dec
mov
imul
scas
xor
inc
add
adc
adc
pop
dec
bound
mov
pop
add
fimull
lods
dec
and
lock
adc
mov
outsl
pop
loop
mov
std
lds
mov
loopne
in
fcompl
push
dec
sbb
lods
mov
loop
inc
loopne
cltd
scas
popa
std
or
mov
push
lcall
incl
adc
dec
stos
mov
mov
lods
andl
call
repnz
imul
xlat
data16
dec
adc
nop
daa
mov
xchg
lock
ret
sbb
lcall
pop
cld
ss
xchg
dec
jae
cltd
push
incl
lahf
push
fstpt
xchg
mov
push
ja
jmp
daa
mov
push
inc
loop
sti
jg
cld
gs
push
lea
dec
mov
mov
jl
jnp
js
adc
fisttpll
mov
rclb
adc
paddusb
jge
daa
outsl
out
xchg
in
pop
mov
test
cld
fldl
pop
and
divl
mov
jne
xor
mov
movsl
aas
mov
mov
mov
pop
cmp
daa
ja
enter
in
add
pop
clc
lock
arpl
sub
cmpsl
mov
bnd
ret
mov
loop
sbb
mov
adc
fwait
xchg
jle
clc
aas
adc
cmp
in
and
imulb
adc
rolb
dec
enter
adc
cmpsb
int
ss
sub
mov
pop
scas
cmc
push
inc
cmp
int3
pushl
add
pushf
jne
mov
or
mov
out
sub
je
jne
aad
push
les
mov
pop
jg
add
pushf
adcb
mov
cmp
incl
inc
xor
sub
jg
pop
push
or
mov
pop
add
cmp
scas
cs
mulb
push
lahf
je
mov
mov
mov
pop
xor
filds
mov
rcrb
fildll
sbb
out
out
lcall
lea
je
jns
outsb
add
notl
mov
sbb
out
pop
push
mov
adc
jno
sbb
dec
fimuls
stos
dec
mov
or
out
mov
sbb
fbstp
shlb
jle
notl
xor
orl
std
adcl
cmp
sbb
les
dec
push
sbb
add
sub
outsb
mov
into
cld
lret
and
xchg
daa
mov
and
xchg
outsl
mov
pop
xor
clc
cmpsb
sbb
jmp
adc
out
lahf
out
hlt
add
pop
add
inc
and
mov
aas
das
jnp
iret
fistps
add
xor
pop
inc
out
push
pop
xor
ja
push
inc
shrb
inc
pop
loope
fsubs
repnz
or
cmp
mov
and
movb
and
ja
mov
push
int
sbb
cmp
and
cmc
jg
sub
leave
dec
xor
leave
sub
mov
inc
dec
mov
sbb
mov
sahf
cmp
mov
lods
fbstp
arpl
out
dec
xchg
xor
cld
and
or
negl
push
inc
es
mov
insl
mov
mov
pop
popa
in
clc
movsl
subb
fisubrl
popa
sbb
pop
sti
out
mov
test
in
fldt
jno
lods
jecxz
xchg
ret
mov
xchg
cltd
decb
sti
xor
ja
sub
cmp
lock
les
stos
pop
pop
pop
pop
sub
mov
std
sbb
cmp
sti
dec
hlt
mov
adcl
outsb
iret
lret
fdivrs
cmp
scas
jo
je
adc
int
cmc
dec
mov
mov
mov
fnsave
sahf
cltd
pop
test
inc
out
fidivl
and
xchg
jp
jno
pop
ds
pop
fs
add
cmpb
sbb
xchg
cmp
in
push
aam
fidivrs
test
mov
int
cmp
xor
out
mov
icebp
decl
adc
or
jb
sbb
shlb
xlat
adc
jnp
int
mov
ja
out
fisubrs
xor
jp
inc
je
xchg
mov
mov
xchg
mov
push
imul
insb
xchg
jl
inc
mov
mov
insl
push
pop
movsb
mov
ret
cwtl
jo
leave
imul
in
lock
iret
std
aas
addl
aaa
fdivrs
dec
jb
fdivl
jl
jl
xchg
sub
push
mov
or
fwait
adc
aas
das
xchg
ret
inc
cmpsl
cmp
push
lds
mov
push
mov
sbb
aam
cwtl
flds
cmp
inc
adc
mov
adc
xor
jns
sbb
out
es
push
aas
xchg
mov
ds
cmp
mov
icebp
loop
xchg
xlat
arpl
adc
mov
jae
roll
fdivs
ret
mov
jnp
jecxz
and
mov
push
xchg
push
fldenv
std
mov
shrb
cmp
nop
jecxz
in
cmp
sti
adc
popa
std
xchg
mov
jmp
sub
inc
jle
xchg
cs
mov
ficoml
enter
push
jg
pop
xchg
repz
pop
mov
xchg
and
cmp
std
decl
hlt
test
ficomps
js
rcll
adc
push
mov
scas
cmc
jmp
add
adc
jmp
clc
out
lock
adc
leave
dec
in
mov
cwtl
xchg
into
std
xor
add
pop
fstpt
dec
sbb
mov
mov
hlt
arpl
cmp
jnp
mov
rcrb
test
aam
mov
pop
xor
mov
cmc
fsubrl
rorl
loop
or
les
movb
sbb
cmc
aad
loopne
std
enter
dec
cmp
test
and
out
mov
call
sbb
xor
aaa
sbb
and
insl
mov
jecxz
ljmp
lock
push
and
es
out
icebp
js
add
cmp
xchg
jge
cmpsb
mov
or
test
mov
pop
aam
pop
icebp
insb
testl
sub
sbb
add
les
daa
mov
mov
fbld
and
ret
aaa
in
jmp
ret
jg
addr16
push
out
fldl2e
insb
or
inc
ja
call
sahf
adcb
mov
aam
stos
mov
loope
imul
sub
mov
xchg
imul
mov
pop
cmp
jb
sbb
aas
push
xor
stos
test
out
jae,pn
fsubrl
dec
jp
fs
mov
push
sbb
subb
cmpl
xor
fcompl
mov
test
add
pusha
icebp
out
pop
sbb
sbb
out
mov
mov
mov
stos
rclb
pop
mov
mov
jne
mov
icebp
pop
mov
and
or
or
addr16
jns
jo
decb
jg
mov
mov
fdivrs
cli
push
cld
pushl
lea
in
mov
xorb
jle
into
into
testl
cli
pop
xchg
stc
mov
fadd
xor
repnz
jp
idivl
in
adc
add
push
mov
xchg
push
add
or
js
xchg
add
push
or
lahf
cmc
pop
or
fdivs
sub
mov
fbstp
hlt
add
push
cmp
and
xor
out
aaa
or
and
insb
lods
mov
jne
call
jmp
dec
idivl
adc
movsb
adcl
nop
fwait
mov
shlb
mov
cwtl
fwait
pop
pop
decb
fdivrl
fs
jecxz
sub
pop
jmp
cmp
jnp
add
jne
or
xchg
arpl
pop
xchg
sub
mov
add
outsl
scas
cmc
inc
std
inc
les
add
mov
mov
sbb
pushf
inc
sbb
inc
xchg
adc
aad
sub
pushl
mov
andl
rcr
pop
fucomip
iret
jbe
into
or
sahf
pop
sbb
and
and
mov
in
sub
jmp
int3
jmp
add
ljmp
dec
mov
jae
mov
xchg
and
jl
cwtl
fldl2t
cmp
dec
cmc
and
mov
push
mov
imul
mov
in
mov
mov
mov
sarb
movsl
push
adc
mov
lcall
add
dec
adc
pop
adc
aas
or
sub
xchg
jb
sub
ret
jg
pop
addr16
pop
xor
lds
jns
dec
test
arpl
mov
mov
neg
adc
mov
shl
xchg
inc
lahf
adc
bound
add
aas
push
xor
sbb
jge
inc
inc
ret
mov
dec
jg
mov
inc
rol
sbb
cmpsb
adc
pop
sti
mov
mov
inc
and
push
pop
loope
cmp
out
lock
dec
in
mov
ja
in
cmp
jg
mov
in
xchg
adc
aaa
cmp
mov
clc
and
mov
std
pop
sbbl
jnp
push
sbb
lea
push
sbb
lahf
fcmovnu
xchg
add
push
mov
inc
push
xchg
jmp
ja
jbe
xchg
and
out
mov
mov
lret
cmp
jb
loopne
outsl
iret
std
fisttpll
shrl
les
xor
lahf
in
xchg
imul
or
push
pop
xchg
lret
pop
loopne
je
cmp
jecxz
sub
cmp
clc
jne
repnz
jmp
cli
cmp
incb
dec
or
cli
xor
decl
pop
cs
call
movsb
aaa
sbbb
add
mov
leave
nop
cltd
mov
cmp
or
sbb
lods
outsb
inc
inc
shll
hlt
rcrl
fdivrs
or
pop
xchg
xchg
pop
mov
movb
lock
out
push
sbb
jle
and
lret
lret
cmpsb
pop
arpl
xchg
shr
outsb
ds
call
js
lock
in
sub
mov
popf
hlt
jg
call
pushf
mov
adc
pushl
outsl
sub
shrb
movsb
repnz
mov
or
fucomip
hlt
in
fbstp
add
inc
das
inc
or
incl
repz
lea
repz
xchg
mov
jb
in
insl
sbb
mov
clc
pop
fidivs
fcompl
mov
sub
and
aam
rclb
fbld
addb
push
pushl
xchg
ds
test
mov
inc
lock
pxor
outsb
add
mov
jg
and
sbb
out
hlt
lock
and
cmpsb
lds
push
movsl
jmp
shlb
inc
add
pusha
daa
dec
pop
push
push
sbb
mov
jno
aam
push
leave
mov
pop
mov
pop
or
mov
ret
add
add
movsbl
inc
clc
repnz
push
add
pop
jnp
mov
add
inc
scas
mov
enter
xchg
imul
cld
mov
aas
push
sub
mov
addr16
xchg
cltd
or
mov
adc
test
cmpsb
xor
andb
adc
mov
push
popa
sub
fsub
jnp
scas
rol
sub
js
xor
ss
clc
arpl
pusha
cli
iret
sub
push
mov
mov
cs
mov
mov
aas
testl
insl
jae
pop
xchg
movsbl
mov
out
mov
loop
mov
cld
ja
rcr
leave
pushf
inc
xor
fcomps
adc
xchg
pop
aas
cmp
std
jne,pn
out
cli
sbb
mov
rcrl
push
and
jmp
cmc
movsb
jb
jnp
scas
popa
sub
sti
cmpsl
rcl
lea
movsl
sbb
pxor
cmp
jecxz
fs
popa
jl
iret
and
fdivrp
push
in
insb
cmp
movntq
data16
clc
jnp
mov
adc
incb
jb
call
aas
mov
insb
jmp
cmpsb
xor
xchg
mov
mov
ja
addb
inc
cli
setb
push
in
push
sub
fnstenv
jmp
mov
mov
ficoms
aas
sub
cltd
and
push
call
jp
lahf
and
xor
dec
arpl
jb
frstor
pop
subl
sbb
repnz
lods
push
ljmp
jecxz
jmp
push
mov
cmp
cli
cs
adc
sbb
push
adc
sbb
arpl
imul
push
push
ja
outsl
scas
rol
mov
lods
lds
dec
ret
in
xlat
jmp
pop
adc
fistpll
mov
sub
ljmp
je
in
nop
outsl
int
ja
incl
gs
pushf
sbb
iret
cmpsl
leave
xchg
jb
jg
push
fisubrl
adc
pop
inc
cmp
push
scas
cmp
and
push
aas
push
std
lods
mov
dec
lret
xchg
stos
sub
mov
xchg
les
nop
push
mov
es
iret
scas
mov
adc
mov
sti
insb
dec
cmpsl
push
cmp
pop
sahf
mov
pop
stos
test
roll
mov
es
hlt
outsb
outsb
mulb
inc
test
pop
div
je
jecxz
fdivrs
cmp
pop
stos
inc
pop
fistps
aas
ds
and
inc
add
add
jne
add
xor
jg
fnstsw
mov
mov
and
popa
rol
ljmp
out
sub
das
aaa
mov
test
test
xchg
jb
lock
mov
jg
xor
movl
fmull
xor
adc
inc
out
xor
aas
xor
insl
call
pop
pop
mov
sbb
les
cmc
shlb
mov
sbb
ljmp
pop
fldl
scas
popa
inc
std
adc
adc
add
push
mov
mov
test
xor
out
jg
clc
and
in
fiaddl
mov
push
call
inc
pop
les
pop
loop
mov
push
push
mov
inc
jle
or
jl
push
push
pop
and
and
xchg
mov
mov
mov
xchg
jmp
or
inc
ds
outsb
inc
test
inc
pop
ret
negl
xchg
clc
cmpsl
dec
rcrl
push
cwtl
hlt
cmc
adc
xor
and
pushl
dec
mov
popf
sbb
pop
mov
mov
lret
jmp
sarb
lahf
add
ljmp
arpl
addr16
dec
adc
or
cld
adc
jnp
cmp
cwtl
inc
dec
js
cwtl
movsl
lret
cld
push
outsl
xchg
inc
clc
push
cmp
push
movsb
outsl
insb
dec
fcmovb
lahf
ljmp
les
mov
out
mov
cmp
pop
ret
cmp
sbbb
hlt
jnp
add
shrb
sbb
xchg
xchg
mov
pop
call
clc
stc
scas
push
or
loop
stc
add
adc
or
jl
sub
mov
jp
mov
jnp
inc
or
aad
lods
hlt
lret
divl
dec
and
hlt
jno
andl
pop
cli
arpl
cwtl
imul
cmp
cmpsl
mov
nop
mov
subb
ja
inc
mov
aam
pop
subb
out
imul
jno
and
sub
call
das
enter
std
out
js
lret
aad
les
out
inc
testl
mov
shrb
sarb
sub
stos
sbb
lret
test
loope
add
mov
add
mov
pushf
jp
push
lret
dec
aaa
add
jp
out
mov
adc
addr16
pop
inc
es
scas
sub
xchg
mov
clc
divb
and
lret
clc
mov
mov
outsb
xor
fisttps
or
pop
pop
bound
sub
mov
leave
xor
cmp
jg
jp
test
js
roll
jo
push
movsb
loopne
data16
pushl
hlt
out
jecxz
or
aam
mov
aas
frstor
fdiv
stc
ret
cmp
sbb
jg
jg
dec
jmp
insb
mov
sarb
push
cmp
aam
scas
mov
xor
cwtl
add
xchg
push
decl
and
push
adc
xchg
fistps
outsb
sbb
or
jae
out
and
lahf
shrb
mov
call
clc
adc
sbb
incl
aad
jbe
dec
jb
sbb
adc
arpl
jmp
cld
hlt
sub
popa
jle
or
imul
js
pop
mov
adc
call
adc
in
fsubrl
int3
pop
mov
push
or
sbb
xor
sbb
arpl
clc
push
aas
int
add
cmp
insb
mov
cmp
and
jg
decb
mov
xchg
xor
inc
fildl
arpl
cwtl
stos
pop
inc
mov
xor
jns
out
add
inc
push
out
dec
lcall
adc
dec
test
jae
cltd
je
aam
mov
mov
std
ja
inc
xchg
fs
sbb
lods
xchg
mov
ljmp
lret
add
lock
shl
sbb
sbb
xor
in
std
xchg
cli
ret
adc
mov
jge
xchg
cmp
xchg
dec
lods
sub
lret
xchg
add
or
es
ja
push
sbb
scas
ss
int3
mov
mov
mov
movsl
loopne
dec
bound
inc
mov
push
mov
and
pop
push
lcall
push
into
movl
int3
xchg
in
std
std
pop
jmp
dec
mov
pop
jg
add
cmp
add
push
in
repnz
add
scas
xor
mov
insl
movl
call
jg
mov
cmp
ret
stos
gs
mov
cmp
fistpll
test
push
jle
mov
jnp
pop
or
add
adc
mov
mov
call
jl
mov
mov
add
or
lcall
xchg
add
out
mov
arpl
shll
enter
cmpsb
or
inc
rcrb
clc
fildl
xchg
ljmp
popf
cld
adc
cld
pop
icebp
mov
std
sub
cmp
idiv
mov
popf
popf
xchg
pop
sarl
shll
std
fnstcw
mov
in
mov
cld
xchg
js
jle
add
mov
test
mov
push
dec
sbb
repnz
imul
outsl
xchg
pop
mov
hlt
popl
jnp
inc
pushf
mov
adc
mov
mov
in
push
sub
cmp
xor
aam
test
shr
push
fdivrl
sarl
cmp
sbb
sbb
jbe
jo
negl
out
push
inc
les
or
fstpt
lcall
and
adc
jl
mov
jno
lods
mov
mov
jb
incl
stos
xchg
xor
xchg
outsb
in
scas
pop
bound
sti
movsl
push
nop
js
out
repz
and
sub
into
adc
mov
jp
jo
xchg
addl
stos
xchg
loope
aas
adc
cmc
push
enter
sub
jmp
mov
mov
push
jnp
xchg
incl
pop
pop
lock
sbb
dec
std
out
fisttps
pusha
sub
les
es
add
mov
loopne
cwtl
or
clc
pop
decb
lock
fcompp
fs
push
loopne
and
sbb
dec
jmp
call
loopne
cld
mov
adc
popa
out
push
sahf
cmc
out
mov
sbb
inc
movsb
addr16
push
test
pop
add
out
sti
adc
scas
push
lock
imul
shlb
cmp
mov
notl
dec
dec
push
or
xor
mov
cmp
sub
add
pop
mov
push
push
mull
test
xchg
xchg
rclb
mov
mov
outsb
int3
xchg
pop
mov
pop
loop
js
mov
aas
sbb
pop
arpl
sbb
adc
repz
jg
icebp
mov
outsl
jno
rorb
ds
rcrl
push
inc
push
or
mov
pop
mov
pop
dec
add
push
iret
mov
jo
jecxz
idivl
subl
add
and
and
jmp
out
jns
mov
lret
hlt
aaa
loope
out
jge
pop
lock
pop
and
jbe
fadd
pop
mov
pop
icebp
fbstp
inc
adc
imul
xchg
movsl
loopne
dec
lock
bound
inc
int
fistpll
jecxz
or
or
pop
rcrb
out
inc
sbb
mov
mov
mov
stc
dec
pushf
ljmp
ret
sti
pop
sbb
arpl
mov
or
pop
mov
xlat
das
push
cwtl
xor
mov
dec
call
fadds
into
inc
mov
loopne
push
sub
inc
adc
pop
sub
inc
xlat
inc
daa
cli
mov
daa
xchg
movsl
dec
cld
insl
div
xchg
adc
popf
xchg
and
mov
add
mov
jge
or
mov
mov
push
xchg
adc
xchg
rorl
loope
sub
sbbl
imul
dec
adc
aas
add
in
xchg
mov
inc
psllw
lods
ret
fistps
mov
shrb
adc
cmp
and
iret
cmp
movsl
pop
std
mull
loope
fsubrs
shlb
lret
and
and
push
mov
mov
and
cs
fcmovnbe
dec
fs
inc
cli
dec
popf
pop
aad
pop
add
sub
ljmp
fbstp
faddp
cmp
and
inc
push
rol
negl
decl
adc
cmpsl
pop
js
sub
or
jecxz
add
stos
ds
adc
xlat
fsubrs
aad
push
jmp
mov
push
sub
or
fstpl
sti
cs
cmpsb
iret
adc
into
cld
inc
bound
and
fsubrs
jnp
lock
imul
adc
sarl
outsl
cmc
stc
inc
add
xchg
call
cmp
fstl
fwait
hlt
pop
outsl
or
popa
xor
in
ja
jle
fwait
push
mov
jmp
lods
shlb
mov
hlt
push
test
arpl
and
into
cmp
jle
add
out
jle
pop
mov
ret
and
outsl
jns
mov
sub
mov
jl
in
test
test
lahf
rorb
mov
std
idivb
mov
nop
push
mov
mov
inc
imul
scas
fsubr
mov
or
mov
xor
or
mov
out
adc
cmp
pop
mov
push
fs
mov
call
lret
mov
push
test
cmp
mov
sahf
and
std
and
popa
ret
xchg
hlt
sbb
pop
shll
icebp
pop
mov
jg
push
decb
test
mov
aas
push
out
ds
fninit
add
cmp
cld
sbb
cmp
jp
and
pusha
jnp
sbb
sub
cwtl
lret
jl
xlat
mov
adc
aas
sbb
xlat
mov
das
int
adc
pop
add
and
sbb
jg
lahf
inc
cmp
mov
xor
push
and
xchg
jo
repnz
call
insb
negl
pop
jg
icebp
mov
jne
out
leave
cmp
mov
aas
push
xor
pop
pop
mov
fwait
std
sti
push
xchg
push
mov
jmp
xchg
xor
inc
jo
jle
and
das
cli
lahf
jg
imul
adc
inc
sbb
sbb
adc
push
push
cld
std
xchg
adc
dec
maskmovq
divl
imull
out
fmull
sar
cs
mov
pop
jecxz
adc
loop
adc
sti
into
jge
xlat
push
aas
inc
mov
mov
or
push
xor
adc
xor
add
or
fs
cmpsb
jp
jnp
loope
mov
xchg
stos
pop
mov
int3
mov
cmp
dec
cmp
popa
jp
pop
stos
mov
repz
xchg
jg
testl
inc
rcrl
imul
fucomp
out
dec
enter
pushf
sti
fwait
clc
xorb
frstor
pop
push
lret
sub
adc
push
mov
loopne
or
hlt
arpl
dec
inc
aaa
lret
scas
xchg
lret
loopew
hlt
mov
fsts
std
adc
xchg
fdivrs
popa
stos
pop
cmp
and
into
call
dec
add
pop
cli
add
xor
loopne
mov
fsts
movsl
and
notb
fucomp
sbb
aaa
dec
push
mov
cmp
rcrb
sub
mov
lock
in
les
outsb
push
stos
sbb
movsb
push
fistps
lret
xlat
adc
cmpsl
enter
sub
jb
cmpsb
mov
xchg
mov
pop
scas
cld
insb
mov
jp
mov
stos
adc
in
lret
cmp
jg
sbb
dec
or
inc
cmpsl
mov
insl
jbe
xchg
push
or
orb
daa
jb
and
mov
mov
jge
pop
mov
xchg
dec
mov
sti
xchg
loope
push
std
mov
shlb
std
ja
jl
out
idivl
fbld
sysexit
add
pop
pop
insl
adc
ljmp
cld
aas
subb
or
push
jle
test
sti
lahf
add
andl
xor
cmp
fmuls
dec
std
mov
in
jnp
xor
bswap
ds
or
cltd
adc
mov
cmpsl
sub
lret
add
xor
mov
xor
incl
in
mov
sub
mov
mov
pop
test
cmpsl
pop
pop
dec
jmp
fstl
add
test
lods
xor
pop
cmp
and
mov
in
sarb
stos
pop
add
jp
mov
add
loopne
mov
or
fldl
push
out
out
shr
jg
dec
pop
mov
test
xchg
and
mov
cmc
cmpsb
mov
testb
or
push
sbb
dec
call
faddl
jae
ss
xchg
push
fbld
jle
loope
push
out
lea
push
ficoml
test
push
es
add
sub
into
frstor
sbb
int
push
mov
negl
outsl
stc
pushf
paddusw
cwtl
adc
mov
repz
outsl
je
loop
inc
jg
dec
add
sar
clc
pop
mov
cmpsb
fisttpll
call
mov
shrl
xchg
add
mov
and
movsb
pop
pop
jo
fdivrs
mov
sub
push
mov
mov
fiaddl
xor
popf
call
addr16
fdivrp
test
cltd
cltd
sbb
adcl
jle
mov
out
gs
and
repnz
mov
nop
mov
fs
cmp
sbb
mov
out
xchg
xor
out
mov
cmpsb
push
std
lock
jnp
int3
insl
sbb
cs
mov
dec
pop
lahf
inc
jne
sub
aam
xor
adc
je
enter
ja
divb
dec
jp
sbb
lcall
mov
jnp
sub
ja
jge
adcl
add
sbb
push
adc
popf
mov
jl
popa
jg
icebp
aad
roll
and
decb
js
and
jl
jecxz
out
pop
push
mov
scas
jle
rorb
xchg
test
dec
or
sbb
out
cmp
cli
aas
inc
clc
pop
or
lock
xor
test
fnstcw
icebp
pop
and
arpl
lahf
sub
sub
cmp
and
sbb
dec
add
mov
cli
mov
push
sbb
jge
xchg
xor
add
popf
aam
negl
nop
repnz
jg
mov
hlt
out
jge
aad
push
daa
push
mov
inc
stos
pop
cli
mov
push
inc
lret
jg
inc
insb
add
dec
sti
pop
cmp
pop
jg
inc
jo
jecxz
stos
jecxz
fsubrs
jo
jle
xor
loop
xchg
cmp
nop
jg
sub
pop
mov
test
xchg
mov
lds
sub
xchg
lds
sub
mov
jg
incl
mov
jl
mov
mov
pop
les
pop
jmp
pop
dec
jecxz
jle
decb
sub
addr16
loop
or
mov
and
push
xchg
inc
push
xchg
jb
pop
dec
loopne
arpl
jl
je
pop
cmp
cmp
inc
popf
mov
rorl
sti
sub
sbb
ja
adc
inc
mov
out
addl
mov
aad
xor
pushf
mov
and
fists
jl
ficomps
stc
or
fidivrs
pusha
sar
push
jecxz
add
sbb
sub
mov
sub
mov
jo
xor
cmp
push
xchg
fdivrl
mov
sub
lahf
and
cwtl
mov
pop
fisubrl
negl
push
les
stc
cmp
and
cmc
jg
mov
push
jo
mov
xor
test
daa
sub
adc
cmp
js
dec
cltd
push
test
sbb
and
sub
fstps
dec
mov
inc
add
stos
loop
fstpt
xor
mov
popa
jae
mov
xchg
xor
add
repz
xchg
push
or
js
mov
std
stc
scas
mov
imul
test
xchg
stc
mov
in
adcl
xchg
dec
push
das
and
call
add
stos
test
rolb
push
sbb
lock
insl
fwait
enter
adc
repz
stc
aam
popf
mov
mov
mov
xor
loop
mov
pop
cli
push
or
mov
mov
arpl
cmp
stos
dec
dec
dec
push
rcrb
xchg
aaa
cmp
xorl
stos
les
test
lds
or
fldcw
push
out
icebp
and
jnp
mov
aas
push
ljmp
dec
xchg
jmp
mov
dec
outsb
ja
adc
test
lock
lods
cmpsb
pop
insl
sub
push
adc
scas
mov
mov
and
add
notb
push
mov
mov
mov
sbb
xchg
lods
cmpsb
fnstcw
push
je
mov
dec
push
sbb
jne
sbb
inc
les
jmp
or
mov
sti
jg
add
iret
sub
dec
push
pop
mov
mov
aam
dec
or
das
and
add
in
sub
adc
jmp
mov
adc
add
push
loopne
out
dec
mov
shll
cmp
cmp
sar
xlat
test
psllq
inc
hlt
jmp
push
js
pop
and
push
mov
jo
xchg
mov
out
dec
ja
ret
mov
sar
movsb
rorb
jmp
xchg
jae
xchg
ljmp
mov
lcall
cli
cmpl
iret
adc
int3
daa
std
das
jno
adc
mov
push
xchg
mov
je
mov
pop
inc
jp
out
sub
rorl
fistps
addr16
jbe
mov
les
outsb
inc
mov
ret
lods
and
fistps
sbb
cmp
jmp
cmp
cmp
pushl
inc
sbb
js
mov
cmp
fsubl
sub
dec
ljmp
push
subl
cmp
aas
push
sbb
out
cmp
cmp
popf
jle
jmp
fists
add
pop
jle
clc
aas
pop
lds
sub
repz
adc
pop
std
pop
and
pop
mov
inc
jno
jnp
adc
xor
push
mov
clc
jne
mov
push
jmp
cmpb
push
adc
or
js
jle
loope
push
sarb
xchg
inc
mov
dec
aas
pop
loope
lahf
inc
or
xor
cmpsl
push
cld
imul
push
aam
push
test
ret
icebp
insl
add
iret
jae
sub
dec
in
out
sbb
pop
notl
mov
lock
mov
or
aam
jne
ds
mov
stc
push
jle
pushl
jmp
push
xor
mov
mov
bound
push
xor
push
out
sub
jp
inc
test
repnz
dec
ret
push
cld
and
inc
pop
icebp
jae
cwtl
in
inc
sti
iret
mov
addr16
ja
adc
dec
repz
mov
mov
loope
mov
xor
js
inc
xor
mov
out
std
mov
pop
dec
fistps
lods
shl
call
dec
and
in
les
inc
pop
out
dec
jle
movb
dec
je
sbb
paddw
jp
sub
ljmp
adc
add
jg
out
scas
arpl
pop
add
in
outsl
pop
enter
inc
xor
adc
popf
push
dec
push
clc
mov
test
dec
pushf
cmp
pop
mov
xchg
mov
imul
inc
popf
int
decl
jb
add
enter
add
mov
mov
xor
jmp
push
es
shlb
pop
mov
adc
loope
in
ret
push
xor
fwait
in
adc
cmp
pop
call
loope
xor
inc
aaa
daa
ret
fistpl
pop
xor
xor
out
daa
movsb
sbb
enter
xchg
fidivs
popa
into
pusha
lahf
daa
xchg
rcrb
mov
neg
pusha
and
stos
cli
xor
das
fs
pop
mov
xlat
sub
rdtsc
or
jle
xchg
push
ret
xor
mov
pop
mov
and
pop
xchg
pop
aad
loopne
imul
adc
sbb
loop
repnz
dec
push
adc
std
popa
mov
push
icebp
and
inc
lret
ret
push
adc
sbb
or
push
pop
cs
fisubs
idiv
iret
pusha
scas
push
mov
mov
out
xchg
mov
jmp
pop
icebp
mov
arpl
and
out
inc
call
shll
ss
mov
pop
lcall
daa
loope
sbb
fisttps
clc
ljmp
push
cmp
dec
mov
push
aam
movsb
lcall
idivb
add
iret
not
fsubrs
loopne
push
jmp
out
cmp
mov
adc
fimull
mov
fisttpl
repnz
inc
push
call
add
imul
decb
inc
jmp
pop
std
adc
imul
sbb
testl
rorb
mov
xchg
out
push
icebp
xchg
pop
jg
add
mov
xchg
or
pop
fdivrl
pop
stos
or
out
vmovhps
mov
loope
lahf
fucom
lea
incb
adcb
iret
mov
fbld
sbb
push
add
pop
jg
stos
xor
data16
std
mov
test
das
insb
fisubrl
stos
xor
pop
call
fwait
xor
xor
lahf
loop
mov
test
mov
movsb
inc
pop
sbb
push
aas
in
sbb
lock
fisubs
rcll
xor
imul
mov
lock
imul
cmc
or
je
js
mov
mov
out
out
xchg
ret
loop
das
lret
lahf
aam
das
icebp
mov
arpl
movsl
add
xlat
dec
cmp
icebp
cmp
xor
mov
add
ja
pop
insb
bound
mov
popa
pop
arpl
push
xchg
cmp
mov
outsb
cmpb
out
hlt
roll
movsl
fmuls
scas
jne
jnp
lcall
cltd
jecxz
mov
add
mov
mov
test
xchg
mov
xor
out
xchg
mov
testb
inc
loopne
pop
pushf
push
cmp
sbb
mov
sbb
outsb
jge
inc
decb
imul
xchg
fnstenv
in
into
sub
shll
inc
cwtl
mov
stos
mov
ret
decl
lret
in
xchg
lock
decl
test
call
outsb
testb
xor
xlat
clc
or
adcl
inc
push
inc
jae
das
pop
jmp
imul
clc
jae
std
push
fmuls
inc
cld
lret
pop
pusha
notl
adc
sub
xchg
iret
cld
push
pop
mov
clc
xlat
sbb
insl
daa
repz
push
clc
inc
sub
mov
shrb
in
decl
orb
push
xchg
dec
les
lcall
sahf
push
cwtl
cmp
sbb
push
retw
fistpll
cs
scas
sub
mov
imul
movsl
insl
out
incb
jae
mov
sub
adc
or
push
sub
jmp
shrl
sbb
cmp
mov
adc
in
clc
sub
mov
mov
jg
ds
fstl
jae
and
adc
loope
push
lds
lcall
push
pop
insb
lds
jle
call
adc
or
daa
shrl
jnp
hlt
outsl
aaa
push
lret
lods
subb
shll
fstp
loopne
mov
mov
mov
loop
stc
push
dec
imul
in
jnp
jae
fdivrl
cmpsb
push
or
mov
jmp
inc
test
xchg
and
cmpsb
ja
loop
in
sbb
and
in
mull
sub
cmpsb
adc
mov
jg
sub
aaa
push
ss
das
sbb
icebp
jg
std
shr
push
in
ret
data16
jo
xchg
jmp
sti
out
and
pop
adc
jecxz
add
ss
out
std
xchg
clc
scas
push
filds
cltd
mov
or
pop
and
cld
pop
xchg
je
loopne
lahf
or
shrl
aaa
mov
push
sbb
mov
mov
enter
mov
xlat
and
out
xchg
mov
mov
jb
xchg
sti
xor
dec
xchg
cmp
das
cmp
shlb
mov
out
add
clc
iret
cli
pop
in
das
and
cvtpd2pi
loope
xchg
int3
adc
add
xor
daa
das
or
addl
outsb
iret
inc
or
lods
outsb
cmp
xor
fstl
mov
stos
movsl
movsb
test
dec
iret
psrlq
sti
xor
loope
cmp
je
dec
insb
pop
stos
cltd
mov
pop
call
jp
or
pop
add
sub
std
jg
sbb
ljmp
jl
repnz
cmp
pop
sti
jns
sbb
fmulp
jl
fistl
xchg
into
or
jg
aaa
sub
dec
fildl
mov
mov
ret
stc
outsl
rcr
sbb
inc
push
mov
adc
imul
inc
xchg
decb
in
enter
sub
jp
les
in
mov
mov
popf
mov
ds
push
imul
xchg
dec
push
filds
mov
xor
jo
fldlg2
aad
and
adc
dec
mov
lock
stos
mov
jae
or
adc
xchg
jp
jle
adc
cld
inc
in
sub
faddp
rorl
stc
jl
aas
shrb
jecxz
and
or
decb
mov
mov
mov
js
call
popa
mov
push
pop
xchg
xor
adc
or
fbstp
ja
jns
outsl
xchg
ljmp
dec
xchg
push
shrb
mov
pop
push
sbb
mov
sbb
or
adc
or
cmp
sub
lret
cmp
aas
sub
inc
aas
or
push
repz
insl
inc
sub
push
jg
push
outsb
ja
xchg
jp
or
mov
lock
fdivr
fcompl
repnz
leave
mov
xor
cmp
fbld
mov
orb
mov
jg
test
imull
jno
lds
enter
js
mov
mov
mov
push
mov
push
mov
jg
insl
xor
dec
or
loop
add
inc
xor
lahf
push
hlt
pop
out
push
fcompl
push
ffreep
xchg
std
lahf
pop
test
push
subl
lea
sar
fwait
xor
std
or
popa
ja
roll
clc
loop
push
cmc
xchg
lea
hlt
or
mov
xlat
aas
les
in
jbe
sub
lret
aam
addb
inc
xor
jno
pop
mov
inc
jne
fwait
pop
adcb
test
dec
pop
daa
aas
mov
fistps
sbb
in
cmp
leave
cwtl
test
inc
jp
ds
mov
inc
mov
xchg
rcll
ljmp
mov
push
aas
mov
movsb
pop
sbb
inc
call
jmp
lahf
rcrb
outsl
jmp
ret
sti
cmp
pushf
dec
sub
dec
cwtl
rolb
subb
scas
jecxz
push
idivl
decb
je
cmp
std
push
push
pop
pusha
xchg
dec
jnp
cmp
cld
sub
clc
push
xchg
ret
std
pop
in
outsb
mov
rclb
and
adc
inc
jg
loopne
out
cmpsl
xchg
jecxz
stos
paddusb
lcall
icebp
adc
arpl
cld
cmp
fs
notl
repz
pop
movsb
aas
or
jmp
lock
adc
dec
add
in
aaa
sarl
cwtl
add
jno
adc
stc
mov
vpaddw
popl
test
mov
sti
dec
xchg
es
inc
mov
and
loop
cmpsl
dec
repz
lods
xor
sub
stc
out
push
jae
jg
jg
jno
cmpsl
lret
or
stos
push
pop
cmpsb
xor
pushf
jo
xor
pop
mov
test
out
jbe
push
lods
call
into
pop
mov
ljmp
sbb
jno
fucomip
xor
clc
lret
std
pop
jecxz
sbb
out
push
xor
movsb
dec
movsl
call
addb
mov
jmp
cli
scas
stos
pop
push
dec
inc
and
inc
and
mov
imul
sbb
shll
mov
sub
shl
inc
call
out
or
add
push
add
and
test
jmp
xor
nop
in
mov
pop
jo
or
out
push
test
std
add
mov
pmulhw
and
js
cwtl
div
add
ljmp
xchg
lret
fnstenv
mov
in
test
out
mov
inc
add
xchg
clc
inc
pop
add
or
stc
dec
mov
xchg
clc
xchg
js
xchg
cmp
jg
jge
sbb
mov
mov
call
movsb
icebp
sbb
ljmp
int
jge
mov
lds
xor
decw
pop
dec
into
dec
ret
xchg
loop
mov
ret
sub
aad
sbb
mov
lahf
xchg
pop
outsb
shlb
out
mov
xchg
sbb
xor
rcll
sub
sbb
pop
cmp
xchg
fdivr
iret
stc
xor
mov
adc
popf
fisttpl
xor
leave
icebp
sahf
inc
faddl
fdivrs
fs
gs
mov
fistpl
xor
leave
jmp
insl
orl
xor
jno
idivb
dec
in
mov
gs
dec
dec
push
cmp
icebp
adc
cmp
mov
in
mov
sbb
clc
aas
cmp
jae
mov
cld
mov
hlt
or
jg
pop
push
xlat
add
sti
rorl
push
aas
mov
cli
add
ret
xchg
in
sahf
cmp
cmp
out
and
and
popf
aas
sbbl
pop
cmp
fldl
or
aam
shlb
pop
mov
jecxz
cltd
arpl
sbb
es
and
or
cld
push
mov
sub
into
jg
pop
jmp
mov
xor
sti
cmp
insl
insb
pop
mov
sbb
repz
mov
sbb
push
out
mov
fldt
decb
pop
aam
testl
pushl
jmp
sbb
ljmp
mov
arpl
xchg
std
inc
inc
lods
xchg
sbb
scas
daa
jecxz
insl
adc
mov
cld
or
incl
je
and
std
jne
jae
jl
mov
dec
popl
outsb
aaa
arpl
xchg
call
fisttpl
push
movsl
cwtl
aaa
stos
sar
xor
push
loopne
leave
xchg
cmp
push
lcall
incl
lret
dec
ds
mov
xchg
and
adc
xchg
xchg
mov
lcall
mov
out
or
mov
cmp
lock
lahf
inc
dec
or
cmp
pop
jp
sbb
dec
jg
cmp
test
int
jg
loopne
sub
sbb
ret
test
pop
addr16
aaa
xor
mov
mov
jne
or
das
jl
pushl
push
mov
pop
jns
dec
push
int
pop
pop
xchg
ljmp
inc
mov
je
mov
sbb
test
ljmp
ret
pop
mov
mov
repnz
jecxz
sti
in
std
inc
sbb
popf
or
inc
dec
inc
jg
mov
repz
jb
sub
aam
out
or
xor
cs
hlt
push
xor
push
xchg
cmp
fidivrl
mov
les
dec
or
in
dec
rorl
mov
subl
insl
lret
lahf
jnp
push
loop
sub
cmpsb
xchg
cmc
inc
mov
lret
jb
fnstcw
bound
cmp
pop
pop
and
adc
jg
inc
xchg
mov
int
movsb
add
bound
leave
push
std
cmp
pop
and
cmpsb
ljmp
sbb
aad
inc
jle
imul
xor
xchg
mov
pushf
adc
pop
cmp
push
int
mov
popf
test
mov
clc
jg
clc
test
pop
enter
add
lods
test
push
add
negb
mov
mov
mov
pushf
fs
mov
dec
sbb
jnp
mov
test
push
outsb
push
lcall
push
dec
pop
ss
arpl
sub
cmp
scas
adc
addr16
pop
jp
stos
pop
mov
and
cmp
or
add
out
jno
inc
stos
pop
mov
in
in
idivl
mov
das
cmp
aas
and
js
xchg
and
cmp
mov
cmp
scas
pop
cwtl
mov
clc
fstpt
inc
stos
mov
sbb
mov
test
xor
ljmp
outsb
push
sub
mov
and
adc
adc
or
jmp
and
stc
pop
jle
jmp
in
sahf
sbb
addr16
sti
lods
fiadds
xor
jb
fdivrp
hlt
mov
jle
jno
clc
mov
scas
mov
xchg
sar
mov
aas
sub
test
sti
sub
add
out
shl
mov
addb
and
aas
inc
mov
mov
jmp
fdivl
fistps
sbb
pop
fsub
insl
dec
rclb
fldenv
hlt
sbb
jg
add
xchg
jg
mov
sub
push
mov
push
inc
movsb
inc
repz
mov
pop
movsl
cli
in
sbb
add
add
mov
inc
aas
jmp
cmpsl
aaa
or
xchg
or
jl
decl
push
pop
pop
in
mov
jp
ja
cli
insl
cmp
push
mov
xchg
dec
fists
sbb
dec
mov
nop
push
push
ja
add
mov
sbb
int
lret
lcall
in
pop
mov
cwtl
xchg
ss
xchg
pop
imul
lock
xor
andl
inc
inc
jne
jbe
mov
dec
or
xor
or
jge
aas
mull
lods
mov
adc
shl
inc
sub
ret
addr16
out
mov
mov
xor
inc
or
lret
cmp
sti
xorl
es
daa
jge
aas
cmp
loope
lods
ret
bound
inc
out
sbb
imull
mov
dec
or
icebp
add
sbb
int3
aas
sbb
mov
fidivrl
lock
scas
add
mov
lods
mov
cli
idiv
fwait
jp
bound
outsl
push
cmp
popa
mov
lret
icebp
push
xchg
je
xchg
or
inc
xchg
popa
push
sub
xor
or
lcall
out
inc
push
pusha
ds
insl
xchg
mov
and
and
movsb
fsubs
rcll
jl
cmp
cmpsb
lret
pushf
fcomp
jl
jmp
fucomi
stc
fimuls
push
push
std
js
cmp
sbb
sti
out
adc
jecxz
jg
or
pop
mov
jp
loopne
dec
sbb
add
lahf
cmc
fwait
push
jbe
adc
pop
ljmp
jne
sbb
push
adc
cmp
jle,pt
xchg
inc
sbb
cld
jecxz
stc
roll
sbb
fstpt
mov
inc
nop
cmp
rol
jge
clc
loope
or
gs
leave
inc
sbb
pop
cmc
jg
out
xchg
mov
fidivl
punpcklbw
stc
out
mov
inc
ret
lods
adc
push
xlat
outsl
sti
cli
mov
jnp
icebp
loop
add
and
sbb
or
mov
cwtl
clc
andl
jo
xchg
jmp
lea
mov
pop
jmp
mov
pop
lods
dec
jbe
xchg
lahf
sti
pop
pop
adc
testb
pop
out
dec
inc
pop
ja
mov
cmp
mov
outsl
or
fsts
std
arpl
xchg
sbb
push
push
adc
sbb
jmp
mov
pop
and
adc
std
dec
cmc
push
ror
je
push
mov
pushl
or
fiadds
sarl
out
sub
lods
lcall
lret
pop
push
sbb
mov
xlat
mov
outsb
hlt
pushf
and
out
cmc
pop
loop
push
popf
cmp
xchg
push
push
cld
or
mov
movsl
insb
addr16
dec
decl
jp
add
jg
jecxz
mov
inc
and
out
icebp
mov
mov
lods
jb
aad
iret
add
imul
mov
gs
jg
inc
add
pop
add
jecxz
jg
lock
ljmp
pop
and
lods
cmp
into
adc
incl
divb
scas
pop
pop
iret
mov
idiv
inc
ficompl
dec
pop
fwait
and
mov
pop
or
es
fidivrs
test
clc
lcall
in
push
xor
ja
xchg
jp
adc
cltd
sbb
and
movsl
dec
icebp
inc
insb
clc
jg
mov
mov
cmc
int
std
lret
cltd
stos
mov
movsl
xchg
push
mov
call
and
cmpsb
sub
jmp
and
cmp
xchg
jb
mov
mov
icebp
pop
jmp
out
pop
int3
lret
jecxz
push
ljmp
push
hlt
xchg
push
pop
fmuls
sbb
mov
cltd
mov
cs
and
jne
mov
xlat
xchg
or
or
mov
push
clc
out
mov
shll
outsl
ss
std
jg
clc
inc
adc
xchg
lds
jno
cmp
mov
push
lods
fsubl
add
pop
ljmp
cmpsb
xor
ljmp
xchg
ljmp
ds
jmp
inc
sub
fwait
inc
and
div
jg
rol
jno
repz
sarb
es
sub
or
mov
fisttpl
adc
or
aas
divl
inc
and
outsb
outsl
cmpsb
bnd
jne
xchg
mov
clc
cmp
cld
xor
dec
sbb
int
mov
push
push
icebp
iret
ljmp
cmp
in
push
lret
decb
inc
adc
int3
out
ja
lock
lcall
jge
mov
jl
hlt
jae
jecxz
cmp
sbb
loop
push
inc
jg
cli
das
add
jp
int3
mov
sbb
and
mov
stos
inc
arpl
aaa
add
xchg
inc
sti
pop
jp
out
push
cli
mov
jne
sub
std
js
popa
shll
jg
jl
mov
ljmp
and
lock
and
sbb
outsb
cmp
mov
mov
sar
iret
or
sub
mov
mov
cmp
js
insb
dec
leave
fildl
std
mov
pop
xor
pop
mov
popf
cmc
in
xchg
decb
clc
pop
cmpsl
pop
jnp
push
incl
rorl
push
ds
bound
jg
decl
xor
lcall
iret
xlat
pop
fdivrl
add
inc
jge
insb
cld
pop
shrl
dec
or
xchg
mov
jb
pop
adc
cmpsb
ds
cmpsl
xlat
pop
roll
pusha
and
out
mov
or
stc
fiadds
lahf
sub
jmp
inc
outsl
jbe
jo
aad
std
jg
call
push
mov
loope
xchg
popf
rcrl
cmovb
fimull
out
sbbl
mov
jns
movsb
aaa
jns
shlb
and
cmp
clc
sub
or
dec
jmp
andb
inc
sahf
outsb
push
sbbl
jmp
xchg
lret
daa
inc
popa
testb
jp
or
inc
push
inc
pop
pop
outsb
in
inc
sub
jb
mov
push
pop
testb
cs
push
jg
lret
enter
lret
inc
sbbb
sub
pop
cli
decb
or
sbb
mov
out
stos
jmp
pushf
mov
int3
sbb
adc
cmc
addb
out
lock
add
and
mov
sub
adc
js
jmp
push
addr16
loopne
mov
jns
xchg
js
loop
inc
aad
add
dec
adc
movsb
addr16
loopne
arpl
es
push
imul
lds
cmp
scas
lods
mov
shrl
xchg
fdivr
add
aaa
shlb
cmc
xchg
lcall
push
fstps
or
sbb
xchg
sahf
sbb
dec
sbb
push
mov
mov
adc
mov
adc
cmc
decl
leave
aam
lret
dec
adc
add
pop
js
lock
test
jecxz
pushf
mov
fdivrl
cmp
fldl
inc
addr16
in
aas
pop
rcrl
mov
hlt
pop
imul
movsb
in
push
sahf
pop
mov
fwait
sti
dec
dec
lods
add
and
inc
add
aas
cmp
imul
dec
dec
test
icebp
xchg
add
sub
jecxz
xchg
idivl
jo
test
mov
cmp
push
push
push
adc
das
mov
rcrl
cmc
mov
pop
sub
in
sub
out
cwtl
sarl
or
dec
push
loopne
loopne
out
arpl
mov
inc
inc
jmp
jmp
jge
fs
jnp
adc
cmp
fwait
lock
mov
stos
ja
xor
incl
adc
inc
mov
jnp
outsl
jno
mov
adc
ds
fadd
xlat
iret
insl
jne
out
mov
leave
cli
push
loope
lods
pushf
std
and
insl
out
or
mov
mov
or
sbb
and
dec
jo
cmp
dec
lahf
or
jg
and
xchg
adc
imul
mov
outsb
aam
call
in
add
clc
mov
arpl
out
push
fcoml
jae
cmp
les
adc
pop
loope
mov
leave
and
lock
add
popf
sbb
adc
daa
out
inc
jp
out
test
inc
inc
into
repnz
pop
mov
or
jnp
pop
jns
mov
out
jae
jmp
pop
stos
push
inc
lret
stos
test
or
jl
imul
mov
repz
das
pop
outsl
jne
call
js
sub
and
xor
adc
push
mov
outsl
sbb
sub
dec
sti
lock
xlat
sti
pop
fdivp
rorl
sub
fs
sub
and
lret
cs
fstpt
inc
les
iret
and
mov
push
xchg
cmp
out
lcall
inc
pop
test
jo
sbb
cmpb
loop
out
les
add
imul
jmp
mov
out
xchg
std
or
std
orb
pop
out
inc
push
sub
mov
add
stc
sahf
rcrl
aas
pop
je
lock
inc
dec
jb
push
sbbb
mov
jg
pusha
inc
inc
negl
pop
jae
add
mov
cmp
jmp
fldl
jmp
out
dec
jno
es
notrack
divl
push
push
fbld
ss
inc
popl
mov
ljmp
mov
cld
loop
cli
cs
imul
std
std
xchg
daa
inc
cld
ljmp
cltd
and
scas
in
scas
jmp
xchg
idiv
out
icebp
pop
int3
std
fadds
mov
fidivrs
push
stos
pop
add
insl
mov
xor
xchg
push
bound
mov
sar
insl
shl
imul
mov
and
dec
out
js
dec
push
adcl
mov
pop
das
xor
mov
and
mov
mov
cwtl
lret
enter
out
jg
ljmp
movsl
adc
int
out
in
cli
pop
ljmp
fnstsw
push
testb
clc
cld
lret
leave
fstl
pop
loope
adc
or
jae
jle
imul
iret
lea
mov
sbb
inc
mov
sbb
adc
mov
jne
outsb
push
xchg
push
pop
mov
jecxz
fcoms
push
adc
aad
lock
inc
mov
not
or
pop
sbb
decb
push
jmp
orl
test
lea
jg
mov
jnp
mov
and
lock
sub
jmp
gs
loopne
push
jmp
jg
cli
arpl
test
and
pop
mov
cmp
push
das
cli
sbb
mov
or
das
stos
mov
mov
fistps
adc
pop
pop
daa
sub
mov
jg
jg
js
mov
outsb
sub
in
mov
sbb
lea
inc
push
jno
push
cmpxchg
and
mov
and
shll
aad
dec
push
or
out
mov
dec
int3
out
push
sbb
ljmp
ret
movsl
loopne
pop
ja
and
and
int
jmp
popa
inc
dec
push
mov
or
xor
ss
out
cmc
arpl
ret
dec
and
fucom
sub
bound
push
mov
jp
jp
ja
add
inc
dec
mov
aas
les
xor
dec
adc
pop
pop
cmp
jg
dec
inc
test
aaa
xor
and
pop
mov
shll
inc
push
cld
pop
mov
mov
dec
cld
in
js
mov
aad
test
subb
cld
repnz
jmp
hlt
insb
jbe
int
lcall
fs
mov
lea
cmpsl
adc
pop
cmp
xor
enter
push
sbb
pop
jae
cs
pop
jge
dec
imul
push
dec
das
jns
mov
pop
test
add
inc
push
or
hlt
xchg
decb
pop
xchg
loopne
inc
jb
ret
movsl
aas
ret
das
lea
mov
mov
js
xchg
adc
iret
pop
sub
aas
jmp
cmp
fimull
xchg
ja
xor
cld
lods
clc
fimull
inc
pushfw
clc
xor
xorb
mov
in
jl
mov
pop
filds
movsb
mov
pop
jl
push
xor
xchg
pushf
lods
pop
in
iret
std
fistpll
jg
daa
aas
addb
iret
or
xor
filds
clc
push
mov
scas
fcom
jo
and
pushw
sar
fidivs
add
cmp
lds
in
push
jo
xor
ret
sbb
test
push
inc
add
into
jg
mov
adc
scas
pushw
dec
inc
idivb
lret
cli
lock
mov
jmp
push
lcall
lock
rcll
sub
cmpsl
pushf
icebp
pop
cmp
pop
jne
cmp
mov
mov
and
jb
sar
xchg
push
aam
jns
add
dec
push
loopne
xchg
fdiv
push
pop
pop
mov
pop
filds
idiv
and
push
stc
jne
les
stos
pop
mov
xor
cs
jae
mov
shll
sub
test
shl
or
cli
add
cmc
js
push
imul
mov
sbb
xchg
dec
jl
xchg
inc
mov
daa
or
cwtl
adc
pop
out
pminub
cmc
daa
sarb
repz
pop
sbb
jnp
pushf
push
out
and
mov
mov
cld
pop
out
aas
pop
mov
add
cwtl
push
dec
hlt
out
jge
jge
pop
inc
addr16
iret
push
movsb
ret
cmp
decl
lods
insb
shlb
scas
std
cmpsl
pop
dec
int
stos
fdivrp
jmp
mov
or
mov
sub
push
xchg
mov
or
sbb
rolb
push
fdiv
jg
sub
hlt
push
push
ds
adc
jns
inc
data16
leave
test
jge
mov
inc
nop
xor
cmp
aam
mov
inc
jb
or
lods
fs
cmp
mov
push
je
push
pop
ja
push
cmc
and
popa
movsb
cmp
dec
push
sbb
imul
sbb
and
push
aad
push
out
fnstsw
inc
xor
or
push
or
cli
push
cld
add
sti
stc
in
add
jbe
push
pop
add
adc
xor
inc
psubusb
add
adc
cmp
add
and
sbb
xchg
xchg
aam
push
sbb
push
inc
pop
sub
lcall
ds
push
mov
sbb
mov
dec
orl
ret
call
sbb
dec
jns
xor
lock
ljmp
ljmp
push
subl
insl
inc
std
jecxz
aad
sub
pop
adc
inc
mov
pop
and
outsb
push
xor
dec
mov
lahf
test
mov
loop
cmp
ss
push
jbe
clc
dec
lcall
xor
dec
daa
stos
pop
xchg
pusha
push
addr16
push
fldl
lods
xchg
popf
cli
outsb
add
cmp
inc
jmp
addl
in
xor
test
sbb
es
push
test
jne
and
incl
lds
push
jae
sbb
dec
push
int3
hlt
mov
jbe
ja
adc
inc
out
sbb
outsl
imul
rol
push
push
aam
inc
dec
jo
push
in
popf
test
xor
mov
loope
jbe
jns
push
sbb
adc
xor
or
push
xchg
inc
pop
test
xor
adc
in
into
and
in
dec
add
stos
jg
push
cmp
outsl
push
sbb
adc
jecxz
sbb
popf
or
push
adc
push
ds
cld
jbe
insl
dec
insb
stos
or
jo
push
adc
inc
dec
or
in
and
loopne
repnz
in
aas
test
push
outsb
jbe
mov
inc
add
out
stos
mov
jns
inc
xchg
imul
push
scas
mov
mov
or
imul
iret
or
or
jae
jb
push
icebp
push
pop
les
adc
nop
cli
jo
aaa
dec
fildll
inc
scas
jmp
inc
mov
xor
cmp
inc
enter
inc
ret
or
dec
xor
jo
addr16
sbb
ds
and
dec
cs
loop
or
push
xchg
inc
pop
xor
mov
data16
add
gs
jo
insb
inc
fnstsw
les
mov
sbb
dec
or
inc
ja
cmp
aaa
fistpll
jns
jae
sar
je
and
pop
mov
pop
xor
repz
push
push
dec
pop
add
outsb
xor
in
or
add
decl
push
mov
adc
cli
popa
push
inc
je
inc
dec
jb
and
dec
xor
mov
dec
cmpb
popf
nop
dec
and
js
sub
js
std
push
call
repnz
mov
add
inc
dec
cmp
imul
push
aaa
insb
dec
jb
push
push
pop
aaa
mov
push
push
inc
jnp
jb
loope
shr
dec
mov
rolb
xchg
shlb
adc
daa
pop
adc
jp
mov
fdivrs
push
dec
xor
add
cmp
jbe
lds
jecxz
push
inc
inc
fwait
adc
sti
push
roll
stc
shlb
push
inc
arpl
or
data16
xor
fidivl
ja
cmp
sbb
pop
dec
push
sbb
cmp
push
hlt
push
xor
xor
xor
pop
or
cmpsl
sbb
mov
mov
jae
insb
and
push
sbb
lock
adc
enter
xor
notl
scas
punpcklwd
mov
addl
sbb
lret
mov
lock
je
sub
dec
mov
mov
or
imul
test
andb
cs
cmp
dec
adc
pop
lahf
arpl
insb
add
pusha
and
not
aad
mov
adc
jb
je
xlat
jne
pop
mov
jb
push
or
cltd
push
pop
fisubrs
xchg
shlb
scas
std
hlt
or
aaa
xchg
jo
inc
add
jge
test
adc
int3
hlt
out
int3
bound
inc
jbe
mov
jns
lea
ja
push
dec
add
xor
pop
fs
push
push
inc
cmp
add
ss
adc
hlt
lahf
push
add
in
adc
fimull
push
inc
inc
dec
jno
push
pop
fs
push
in
shlb
fdivp
add
xor
lret
xor
loop
enter
dec
dec
jae
push
loopne
adc
popa
and
mov
push
adc
lock
ja
mov
xor
xchg
push
dec
lods
jmp
push
push
push
inc
push
popa
xor
icebp
sbb
sub
in
incl
dec
mov
sub
mov
dec
frstor
add
and
pushf
adcb
fs
and
sub
inc
push
add
enter
nop
push
mov
and
mov
add
inc
mov
add
inc
dec
imul
testb
or
add
dec
and
and
and
push
jnp
and
cld
add
and
push
sarl
and
and
dec
imul
imul
add
and
es
sub
andb
mov
imulb
push
or
adc
push
sub
mov
push
adc
and
or
and
dec
or
xor
push
inc
xchg
or
insl
imul
cltd
dec
dec
imul
adc
sbb
subb
inc
test
out
inc
jo
mov
push
add
push
sbb
jbe
add
dec
mov
ss
mov
and
inc
shlb
scas
mov
or
push
loopne
adc
jnp
xor
and
fildl
ret
fcmovbe
and
xor
mov
aaa
add
arpl
xor
in
mov
imul
adc
and
pushf
cld
mov
lcall
jae
mov
or
ss
pop
mov
subl
xor
into
insl
scas
adc
adc
push
mov
insl
inc
inc
cmp
aaa
adc
lcall
inc
inc
pop
mov
aam
push
xor
les
lahf
sub
mov
mov
mov
sbb
cmp
incb
dec
inc
cmp
or
out
sub
mov
sbb
dec
xlat
rcrl
lock
daa
add
or
popa
add
sub
mov
lea
movsb
jae
out
in
cmp
xchg
sbb
and
cmovae
shlb
dec
pushf
fistpl
add
lret
ss
jecxz
inc
add
mov
mov
imul
xlat
lods
add
add
aaa
insb
push
push
inc
pop
lcall
mov
or
and
lods
dec
in
les
mov
jmp
gs
xor
cs
insb
inc
lcall
lahf
out
sbb
js
jbe
mov
push
lods
movsb
jne
inc
or
testb
inc
popf
pop
je
out
pop
imul
movsb
fmuls
inc
shll
add
dec
fistps
into
das
sbb
dec
pusha
sub
sbb
in
popa
sbb
sub
ficompl
cltd
lcall
push
push
push
out
fwait
imul
xchg
pop
jmp
pop
add
popa
push
rcrl
out
xchg
adc
sbb
in
hlt
push
mov
xor
jae
pop
ds
xchg
xchg
add
xchg
and
push
int
pop
jnp
inc
xchg
cmp
cmp
scas
mov
es
rorl
int
cwtl
mov
or
mov
loope
cmp
and
push
outsb
and
aad
daa
xchg
leave
fs
sbb
scas
mov
sub
mov
in
pop
xor
mov
std
cmp
mov
xor
shrb
adc
std
decl
jae
outsb
fs
push
push
gs
outsl
arpl
mov
jmp
gs
outsb
outsw
inc
cmovne
je
inc
outsl
in
imul
outsb
jae
sbb
je
add
adc
imul
out
call
imul
addr16
bound
arpl
push
push
inc
outsl
outsl
imul
popa
sbb
push
push
push
jne
in
jg
imul
insl
insl
or
imul
gs
imul
popa
bound
push
jb
mov
fwait
or
gs
std
mov
dec
popa
jo
imul
insb
add
lods
fldl
jae
sub
je
pop
mov
jo
outsb
insb
shrl
inc
dec
mov
or
xor
jb
scas
inc
fldt
and
sub
mov
or
popa
addr16
push
push
jb
mov
inc
insl
gs
push
in
lods
push
punpckhbw
inc
adc
pop
adc
sbb
sti
push
jb
data16
dec
mov
dec
mov
fcmovnb
dec
push
fs
loope
std
inc
gs
adc
ds
jo
addr16
inc
inc
jb
pop
dec
fs
packuswb
push
mov
js
test
jle
mov
pop
pop
pop
fcomps
mov
jae
jno
in
aas
sbb
push
outsl
inc
outsl
jae
sbb
sti
fcmovnu
fimull
in
inc
jo
dec
imul
addl
adc
orl
insl
dec
fdivrs
dec
push
mov
inc
inc
dec
mov
pop
mov
arpl
fisubrl
in
bound
push
sub
adc
sub
stos
jae
js
inc
loope
adc
gs
adc
out
dec
outsl
mov
call
xchg
adcb
and
sub
jb
pop
popa
jnp
or
bound
dec
lods
gs
mov
loope
adc
popa
xchg
mov
addr16
jne
fs
inc
inc
inc
inc
fwait
movsl
inc
jecxz
lcall
cmpsl
movsb
add
sbb
push
lret
fildl
shr
pop
inc
out
inc
outsb
mov
adc
insl
outsl
mov
sbb
or
mov
adc
adc
adc
mov
enter
push
data16
je
mov
imul
sbb
ja
add
cmp
push
int
int
xchg
mov
aas
outsl
sbb
xchg
insl
cmp
xchg
sbb
cld
mov
sbb
push
roll
adc
pop
pop
cmp
adc
push
push
lds
pop
pushf
loope
push
aad
xor
scas
enter
add
sbb
insl
iret
push
lods
push
popa
adc
fcoms
xchg
sbb
inc
rolb
and
mov
mov
or
and
inc
stos
pop
pop
sub
dec
mov
jo
lods
lea
pminub
ficompl
adc
out
cmp
insb
ss
mov
xchg
mov
outsl
ja
imul
inc
je
or
pop
lcall
push
dec
dec
pop
jne
sub
pop
adc
test
jae
int3
insb
or
jne
sbb
add
sub
push
xor
inc
gs
jo
pop
inc
xchg
fs
pop
pmullw
pusha
or
fildll
mov
je
inc
fs
arpl
insb
push
and
jnp
stos
xor
jno
xchg
pop
cmp
push
dec
sbb
mov
fs
adc
dec
mov
outsl
jo
sahf
xor
xlat
cmp
imulb
adc
push
add
inc
push
dec
push
data16
pop
pusha
jns
jmp
andl
sbb
daa
aaa
xchg
mov
mov
sub
movzwl
shlb
bound
mov
jb
gs
rorb
mov
or
push
sub
gs
pusha
ret
aas
adc
mov
inc
fs
fs
outsl
sbb
imul
cmp
push
add
push
jae
and
inc
pop
or
mov
call
enter
popa
jae
mov
fstps
jbe
add
push
inc
rorl
jae
popa
jmp
int
fdivr
push
mov
pop
cmp
inc
adc
sbb
sbb
mov
lea
es
rolb
jnp
push
or
arpl
pop
cmpsb
xlat
pop
sbb
push
dec
imul
mov
dec
jae
jno
sbb
in
and
mov
and
sbb
test
sbb
gs
shrl
jns
inc
test
int3
std
sahf
sbb
jne
fs
inc
mov
xchg
push
imul
dec
jb
sub
xchg
or
mov
mov
and
mov
or
stos
outsb
loope
or
sub
roll
add
mov
add
subb
push
xlat
push
addr16
and
insl
jmp
addr16
jns
push
mov
in
add
adc
push
inc
mov
mov
fs
jmp
daa
add
mov
leave
push
sbb
lds
pop
xor
sub
sbb
int3
lods
insb
bound
sbb
or
or
adc
movsl
sbb
pop
add
mov
dec
cmpsb
pop
dec
push
pop
aaa
mov
inc
in
sub
push
jmp
lods
and
push
in
push
mov
movsl
jo
fdivl
xor
cmp
sbb
fcompl
dec
inc
aam
inc
mov
leave
push
xor
pop
mov
aam
ret
pop
pop
pop
inc
xor
int3
inc
pop
orb
scas
pop
fbld
dec
je
fwait
rol
inc
ficomps
imul
fwait
js
cmp
mov
push
mov
lret
push
sub
in
out
fwait
xor
push
lods
pop
push
jb
arpl
jo
jae
sub
aam
push
sub
push
inc
jle
outsl
imul
xor
into
bound
push
inc
andb
popa
scas
dec
and
shll
imul
or
sbb
bound
in
push
or
jb
test
imul
push
lds
sbb
addl
in
dec
mov
iret
add
push
test
shrb
jg
test
and
lea
dec
fstpt
add
and
push
or
lods
add
das
pop
movsb
mov
add
sub
sbb
and
adc
pop
lds
arpl
inc
push
dec
fwait
or
ret
push
dec
inc
movsl
add
lahf
cmp
outsl
sahf
in
push
inc
dec
push
cmp
pop
sub
or
push
adc
pop
bound
and
std
insl
scas
loopne
mov
xor
push
dec
mov
lock
mov
sub
adc
insb
xor
push
or
test
mov
jae
push
mov
pop
lods
je
pop
outsl
or
loope
insl
pop
or
and
inc
or
pusha
imul
pop
push
icebp
js
pop
insl
int3
out
push
jo
cli
shlb
add
cmp
add
inc
add
sbb
jae
xchg
sub
and
or
add
js
jne
add
jb
push
iret
cmp
or
mov
add
mov
or
xchg
out
cmp
sub
pop
xchg
pop
mov
das
and
add
mov
in
shlb
pop
add
dec
cs
xor
jge
add
xor
leave
lods
imul
mov
add
pop
lods
mov
add
es
fsubs
nop
push
je
mulb
fimull
insl
push
repz
std
push
jbe
dec
sbb
sbb
add
rclb
add
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
xchg
and
xchg
xor
repnz
jbe
cltd
mov
mov
shll
andps
fsubrs
dec
dec
dec
xchg
movsb
dec
in
fs
ja
jae
cmp
mov
pop
subb
and
lea
add
and
imul
mov
and
xchg
add
sbb
or
nop
cmp
out
pop
into
sub
mov
insb
out
ds
shr
insb
or
dec
xchg
outsb
fisubrs
je
pop
shrl
sub
dec
push
data16
sub
out
inc
adc
push
mov
sahf
jle
fsts
xchg
jb
mov
mov
ja
or
addr16
xchg
push
pop
xor
daa
and
outsl
add
movsl
and
cwtl
ljmp
dec
sub
icebp
sub
pop
adc
sbb
sbb
lret
into
pushl
and
pop
nop
ljmp
jle
pop
mov
cmp
in
cmc
jecxz
negb
pop
js
jle
xlat
pop
subb
push
pop
mov
cmp
and
mov
mov
into
add
lock
shlb
mov
xchg
loop
inc
jecxz
push
lcall
dec
loope
les
jne
inc
popa
push
stos
mov
push
test
jle
pop
pushl
adc
push
jmp
xchg
jp
xor
mov
add
mov
mov
add
lods
gs
xchg
cmp
xchg
dec
hlt
mov
mov
sbb
movsl
push
in
sbb
rcr
imul
pop
repz
jge
int3
into
sbb
test
addr16
lahf
cltd
or
loopne
cmp
out
cmp
push
.byte
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
loopne
add
add
add
add
or
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
xor
insl
add
add
or
add
add
add
add
add
add
data16
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
jbe
jb
imul
add
and
dec
add
jb
jo
insb
add
add
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jbe
jb
imul
add
and
dec
add
imul
add
and
push
add
add
je
jo
insl
add
jo
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
push
add
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jbe
jb
imul
add
and
dec
add
jb
jo
insb
add
add
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jbe
jb
popa
add
data16
imul
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jbe
jb
imul
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
in
add
add
jmp
in
add
in
add
add
add
add
xchg
in
add
in
add
add
sbb
add
movsb
in
add
in
add
in
add
add
cmp
in
add
add
in
add
add
in
add
add
aam
add
push
add
js
add
mov
add
cwtl
in
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
add
add
add
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jne
popa
jo
cs
insb
add
insl
arpl
xor
fs
insb
add
jns
je
xor
fs
insb
add
popa
jo
cs
insb
add
jae
je
insb
jae
fs
insb
add
je
jo
jo
cs
insb
add
insb
insl
outsl
outsb
cs
insb
add
gs
outsb
jbe
fs
insb
add
insl
bound
fs
insb
add
outsb
insl
insl
cs
insb
add
outsb
jae
outsl
outsl
insb
cs
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
jo
outsb
inc
insb
jne
je
jb
add
dec
outsb
jne
gs
jo
add
jb
inc
insb
outsl
jae
push
je
jb
add
inc
gs
jae
push
jae
add
jae
je
insb
inc
jne
push
je
imul
pop
inc
gs
push
imul
add
dec
inc
outsl
ja
insb
outsl
popa
fs
add
inc
gs
push
dec
dec
imul
push
inc
dec
inc
gs
arpl
push
add
insl
insl
imul
add
add
popa
fs
jb
outsb
je
jb
