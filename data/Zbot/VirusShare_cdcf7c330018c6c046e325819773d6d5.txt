ljmp
imul
mov
stos
shl
dec
das
pop
pmaddwd
mov
ror
sar
decl
mov
push
arpl
push
xor
mov
rcr
rcr
mov
std
adc
adc
decl
sbb
out
jecxz
repnz
jbe
mov
sub
mov
and
cwtl
ds
add
pushl
jne
mov
pop
stos
ljmp
pusha
add
dec
add
incl
out
cmp
int
cmpsl
repz
sbb
jge
and
jbe
arpl
ja
inc
movb
decl
adcl
adc
bound
stos
and
adcb
mov
call
sub
push
inc
or
dec
decl
inc
push
mov
add
sub
mov
decl
test
adc
inc
xor
mov
inc
incl
and
push
decl
or
mov
inc
inc
or
incl
push
call
add
add
bound
inc
cmp
and
inc
dec
mov
incl
and
and
or
sub
add
mov
push
push
out
pusha
sbb
inc
and
or
fs
rclb
or
incl
push
add
add
push
out
stos
dec
or
test
xchg
stos
pusha
inc
enter
push
ljmp
addb
decl
push
add
or
add
nop
adc
rorl
add
decl
add
and
and
adcl
aad
incl
push
mov
dec
push
inc
add
ljmp
dec
or
sbb
sub
fs
push
or
inc
add
inc
mov
incl
add
dec
inc
xor
call
cmp
and
sbb
add
or
and
decl
cltd
sub
and
adc
and
push
inc
jmp
nop
push
adcb
cmp
add
mov
add
and
jmp
adc
push
test
lret
fs
inc
xchg
nop
adc
xchg
sub
inc
mov
stos
inc
mov
add
add
or
add
and
inc
push
push
inc
ljmp
dec
add
dec
cltd
sub
test
decl
add
cmc
nop
and
test
or
nop
adc
aam
add
add
sub
inc
mov
mov
jmp
mov
sub
sub
add
mov
andb
incl
andb
stos
dec
adc
incl
sub
and
incl
sub
push
xchg
orb
and
test
inc
and
lret
stos
sub
and
mov
xchg
jmp
dec
and
xchg
stos
xchg
stos
or
push
jmp
push
mov
add
call
or
addb
mov
push
decl
cmp
adc
xchg
mov
pop
adc
call
test
and
incl
mov
or
xchg
test
push
push
sbb
add
mov
cmp
test
inc
push
nop
add
inc
xchg
add
jmp
add
dec
lsl
sub
and
mov
inc
add
xchg
sub
call
inc
inc
sub
adc
decl
and
xchg
arpl
adc
add
dec
pop
andb
push
jmp
dec
sub
or
and
pop
adc
or
inc
push
ljmp
inc
push
push
incl
sbb
adcb
add
or
and
stos
pop
jmp
inc
imul
push
lds
push
or
adc
imul
adc
stos
dec
scas
incl
nop
adc
adc
add
inc
mov
dec
adc
cmp
cmp
inc
dec
sub
xchg
push
adc
lods
add
ret
inc
add
pop
adc
filds
test
xor
add
ret
mov
and
or
add
call
mov
movsb
add
inc
inc
mov
incl
or
push
lcall
inc
dec
sbb
inc
adc
dec
sub
lcall
mov
or
lds
mov
add
xor
out
incl
sbb
test
sbb
sub
mov
mov
sbb
sub
dec
push
mov
adc
add
bound
adc
mov
adc
mov
idiv
mov
bound
sub
stc
mov
adc
adc
xchg
inc
andb
test
adc
add
decl
and
xchg
mov
pushl
sub
push
decl
add
mov
incl
andb
leave
jmp
and
incl
add
or
add
sub
xor
dec
adc
decl
inc
and
inc
push
mov
std
push
inc
or
inc
xchg
and
add
push
or
cmp
call
push
push
test
daa
add
mov
ljmp
incl
inc
cmp
adc
sub
push
adc
ljmp
adc
and
adc
add
add
out
sub
enter
mov
decl
add
sub
stos
addb
sub
xchg
xlat
and
or
push
push
xor
dec
push
add
ljmp
add
sub
adc
push
or
lods
sub
mov
inc
push
addb
call
mov
push
dec
subb
and
or
xchg
or
and
or
push
decl
inc
add
pop
incl
roll
pop
inc
add
adcb
adc
les
inc
cmp
sub
mov
add
add
orb
add
ljmp
add
inc
or
add
dec
adc
mov
movb
mov
jmp
and
adc
mov
push
or
add
adc
fs
inc
nop
test
sub
mov
xchg
add
decl
adc
incl
lds
or
lcall
push
inc
mov
and
xchg
inc
and
adc
add
or
jmp
enter
incl
add
and
call
push
inc
sbb
inc
xor
nop
adc
push
call
nop
mov
scas
push
test
dec
and
adc
test
or
and
adc
mov
stos
inc
adc
mov
inc
cmpb
dec
push
add
add
mov
pop
push
inc
sbb
inc
incl
dec
add
add
incl
xor
cmp
mov
or
or
decl
mov
and
adc
xor
decl
add
lods
inc
sbbb
sub
sbbb
subb
mov
ljmp
pop
add
push
add
xor
cmp
pop
insl
mov
test
inc
inc
decl
and
call
sub
inc
test
inc
aaa
stos
dec
or
nop
push
xchg
sub
test
sub
and
push
add
push
mov
cmp
add
sub
call
add
inc
mov
incl
cmp
and
and
ljmp
push
inc
call
test
add
dec
and
enter
call
insb
insl
push
lret
add
adc
incl
sub
push
inc
xchg
and
lcall
xor
adc
push
rorb
call
add
add
push
movsb
add
dec
or
call
inc
mov
and
nop
fs
inc
dec
incl
sub
add
add
push
add
mov
adc
xor
mov
inc
stos
push
ljmp
inc
adc
add
jmp
add
mov
lldt
or
mov
add
push
ljmp
add
or
mov
xchg
or
incl
and
add
call
mov
add
add
xor
adc
lods
test
mov
sub
xor
mov
adc
inc
stos
xchg
add
mov
and
or
push
enter
inc
sub
cltd
sub
and
stos
sbb
add
mov
sbb
addb
out
xor
mov
adc
sub
pushl
incl
pop
push
xor
mov
mov
mov
and
inc
cmc
add
popa
add
addl
aad
cmp
call
sbb
adc
or
stos
dec
mov
and
add
pusha
inc
and
push
mov
andb
leave
das
push
inc
push
mov
or
movb
mov
roll
xor
inc
add
shlb
add
push
sub
mov
call
inc
test
add
mov
add
ljmp
sbb
and
ljmp
inc
mov
add
pop
out
add
inc
push
mov
iret
dec
push
mov
incl
and
jecxz
mov
add
call
call
or
dec
sub
sbb
push
and
dec
add
or
push
ljmp
test
incl
subl
mov
decl
lods
test
push
decl
add
or
call
or
stos
adc
add
dec
inc
and
mov
and
sub
adc
pop
inc
or
sub
push
ljmp
lcall
or
adc
mov
call
push
xchg
or
and
add
and
incl
adc
adc
pop
add
adc
mov
inc
mov
inc
jmp
add
es
add
add
lods
and
and
push
decl
addl
fs
jne
jae
pop
push
test
nop
add
add
lds
and
xchg
or
push
sub
adc
inc
cmp
add
add
call
sub
in
andb
sub
sub
decl
incl
test
push
lods
push
adc
leave
pop
add
and
test
add
sub
sub
inc
test
stc
inc
add
sub
inc
add
sub
jmp
rorb
stos
sub
push
push
and
sbb
and
pusha
adc
stos
sub
mov
jmp
incl
push
mov
incl
sbb
dec
inc
or
and
cmp
or
xor
add
and
inc
into
dec
mov
xor
lods
mov
pop
scas
call
sub
sar
sub
or
add
adc
add
push
addb
dec
push
mov
incl
add
xor
jmp
or
imul
push
inc
incl
cmp
dec
add
adcb
cmp
xor
or
cmp
or
adcb
call
adc
lods
pop
xor
adc
movsl
adc
decl
dec
add
adcb
and
or
cmp
aad
and
incl
nop
and
push
push
ljmp
or
jmp
sbb
adcl
add
and
testl
or
push
inc
xchg
out
cmp
sub
addb
addb
and
stos
add
dec
push
push
call
inc
add
orb
fs
incl
xor
or
and
push
xchg
mov
mov
stos
push
pushl
adc
jmp
push
add
mov
decl
inc
add
or
xor
sub
and
stos
xchg
adc
or
call
dec
add
xor
nop
adc
leave
mov
decl
andb
das
pusha
inc
add
incl
push
and
xlat
incl
add
dec
adc
lea
dec
add
add
inc
xchg
or
mov
fs
adc
mov
add
mov
inc
mov
enter
add
dec
xor
add
and
and
inc
adc
dec
test
add
and
call
add
dec
push
push
or
incl
add
pop
or
sbb
call
inc
adc
mov
mov
decl
push
xor
decl
add
mov
incl
mov
call
pusha
xor
popa
push
decl
and
and
adc
dec
pushl
mov
adc
add
sub
adc
mov
mov
cmovp
cmp
and
enter
add
or
mov
adc
mov
and
sub
call
add
and
sub
adc
or
call
adc
adc
add
fs
stos
add
inc
incl
and
dec
dec
and
add
dec
dec
call
add
adc
adc
mov
inc
and
jne
sub
inc
ljmp
ljmp
xchg
or
xchg
int
add
adc
int
and
orb
adc
push
and
pop
fisttpll
cmp
push
adc
stos
stos
xor
jmp
sbb
add
sub
adc
or
and
sub
mov
push
xchg
lcall
dec
and
inc
xor
incl
nop
imul
test
add
inc
adc
mov
dec
inc
and
add
sub
das
call
inc
add
cmp
or
push
or
inc
sub
push
sub
dec
add
dec
sub
inc
adc
add
pushl
and
sub
stc
adc
or
push
incl
adc
subl
push
push
or
nop
test
push
lcall
inc
aad
add
add
sub
mov
sbb
add
push
push
jmp
or
mov
jmp
push
dec
test
adc
push
adc
and
or
add
adc
lcall
xchg
add
inc
push
adc
mov
push
jmp
movsb
xor
aaa
nop
test
adcl
subb
rcll
add
lcall
push
xchg
test
mov
or
or
dec
inc
mov
xchg
inc
mov
sub
push
or
stos
and
rol
mov
ret
push
inc
mov
subl
adc
dec
push
inc
sub
subl
subl
and
jno
add
push
sub
add
and
xlat
incl
push
les
add
xor
lcall
inc
xchg
sbb
popa
sub
pushl
mov
test
xchg
or
addb
mov
or
push
xchg
jge
adc
incl
adc
decl
adc
stos
xor
inc
lcall
push
cmp
add
and
xchg
test
push
call
or
pusha
push
enter
addl
lds
fbld
sub
and
aas
add
call
sub
mov
inc
add
inc
inc
incl
add
adc
xchg
add
mov
and
roll
adc
adc
or
fs
call
push
rcll
leave
test
adc
stos
inc
and
adc
or
call
addl
adc
add
adc
int
arpl
sbb
mov
push
jo
adcb
add
adc
stos
mov
add
push
push
sub
popa
inc
leave
xchg
push
inc
adc
and
inc
cltd
lods
sbb
add
xor
mov
stos
or
lcall
and
mov
add
inc
decl
adcb
or
inc
addl
or
incl
or
push
adc
ljmp
inc
call
and
push
and
and
adc
sub
or
cmpsb
add
mov
icebp
and
xor
incl
xchg
add
adc
adc
inc
inc
adc
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
pop
add
dec
movsb
and
add
or
int3
inc
or
push
test
inc
std
push
mov
loop
xchg
pushf
xchg
push
or
sub
or
incl
stos
add
aad
adc
or
sub
jge
rolb
push
adc
push
je
call
adcb
and
fs
mov
adc
dec
pop
or
sub
push
sub
dec
add
or
and
pusha
and
or
leave
add
add
inc
jb
jo
add
add
inc
xchg
sub
sub
mov
ret
mov
pusha
sbb
incl
and
adc
inc
incl
xor
addb
dec
dec
add
or
mov
bound
and
cmp
add
or
inc
inc
pop
add
dec
push
inc
jmp
add
test
push
push
test
or
and
dec
inc
xchg
and
push
sub
add
or
or
add
pop
pop
sahf
fs
dec
stos
nop
xchg
mov
sbb
adcb
mov
sub
dec
xchg
sbb
test
movsb
xchg
adc
mov
xchg
andb
push
add
inc
push
and
and
dec
lods
sub
addl
push
test
and
inc
lods
xchg
inc
xchg
add
push
adc
push
enter
inc
push
and
fs
leave
xor
mov
xchg
add
nop
adc
dec
inc
add
and
and
or
mov
and
add
mov
adc
and
mov
and
nop
sub
add
sub
sub
pop
add
adc
and
addb
push
add
adc
add
or
xchg
and
mov
add
push
and
and
xor
mov
add
leave
orb
sub
cmp
nop
add
adc
push
adc
adc
and
add
mov
add
inc
add
inc
and
stos
inc
xchg
movsb
mov
mov
fs
adc
sub
inc
adc
push
add
add
cmp
push
add
add
call
or
dec
adcb
add
dec
add
dec
or
inc
adcb
enter
add
xchg
add
mov
add
jne
cmpsl
stos
insl
movsb
decl
xor
push
and
fs
dec
mov
add
or
ljmp
sub
or
ret
ret
mov
aad
push
call
mov
or
fbld
or
jmp
xchg
adc
or
sbb
or
testl
or
or
and
or
inc
or
push
xchg
stos
and
sub
or
xchg
inc
add
pop
add
pushf
gs
enter
lods
or
inc
push
test
fs
leave
inc
add
and
stos
nop
adc
or
and
dec
push
and
inc
xchg
inc
push
xchg
add
inc
leave
add
les
fs
and
mov
mov
or
add
and
or
in
dec
push
add
nop
adc
add
cmp
add
push
xchg
stos
xchg
add
push
and
sbb
and
and
test
or
adc
push
add
andb
andb
decl
call
adc
sub
and
mov
xchg
inc
or
inc
push
adc
dec
push
inc
or
rolb
or
sub
nop
or
incl
inc
adc
add
dec
mov
subb
inc
and
add
inc
add
dec
push
add
add
adc
add
jmp
and
mov
sub
adc
nop
adc
and
add
add
mov
test
dec
push
add
mov
lods
jmp
push
add
incl
xor
push
mov
inc
incl
inc
push
dec
stos
and
push
jmp
sbb
mov
xchg
add
dec
mov
or
mov
add
xchg
add
and
pop
push
adc
push
dec
mov
enter
and
dec
inc
adc
push
add
push
dec
or
adc
inc
xor
inc
inc
adc
xchg
push
or
add
add
adc
adc
and
nop
inc
and
inc
add
or
sub
add
jb
add
xchg
or
or
adc
adcb
adc
inc
dec
push
and
and
and
dec
push
dec
test
leave
or
add
andb
add
xchg
inc
add
or
mov
sub
inc
and
and
add
adc
incl
mov
add
push
xchg
ljmp
add
mov
sub
push
push
xchg
std
add
decl
sbb
push
jne
decl
push
push
nop
out
subl
or
inc
and
mov
or
push
add
add
and
call
add
push
inc
sub
add
and
and
add
andl
add
adc
add
fs
dec
sub
mov
bound
or
leave
add
nop
sub
push
enter
test
mov
pop
add
sbb
sub
mov
cmpl
sub
addb
and
inc
and
inc
add
and
xchg
stos
add
nop
add
add
andl
nop
dec
add
pop
adc
or
and
mov
add
inc
inc
add
mov
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
mov
jmp
xor
mov
fwait
xor
push
cld
je
xchg
stos
inc
movsb
add
jmp
cmpsb
jg
mov
imul
sub
stc
in
lcall
je
cmp
shl
adc
decl
push
jg
rol
jp
mov
repnz
mov
mov
or
in
push
popa
jnp
out
out
mov
ret
push
mov
push
mov
jg
mov
sbb
xor
jnp
in
sbb
cs
adc
dec
push
dec
testl
xor
sub
mov
mov
jne
and
add
add
orl
cmp
add
ret
jmp
loop
and
into
decl
das
or
pop
mov
dec
mov
jmp
inc
mov
clc
mov
dec
divl
mov
orl
rcr
out
push
add
sub
inc
mov
lock
mov
jle
outsl
js
and
xchg
addl
or
or
and
out
insb
addr16
popa
cmc
test
das
push
andb
in
orl
fwait
sbb
sti
in
sub
ret
add
adc
lea
sahf
loope
test
or
popa
xchg
ret
push
push
adc
mov
add
sbbl
mov
push
push
loope
lcall
sbb
enter
lods
push
inc
sbb
adc
sub
dec
popl
ud2
out
mov
xor
in
pop
jno
add
mov
aad
stos
in
ss
faddp
int
add
mov
into
incb
mov
insl
aaa
test
xor
into
jmp
pop
pop
xchg
push
jne
test
incl
jb
jne
mov
push
inc
out
mov
mov
cmp
das
ret
sbb
cwtl
xor
out
sbb
sub
mov
push
ret
mov
adc
cmp
jno
fldcw
out
cld
nop
lahf
decl
sahf
xchg
stos
rcrl
mov
xchg
lds
push
adc
ds
dec
leave
inc
push
jmp
inc
int3
clc
push
out
fs
je
adc
stos
push
mov
call
sub
and
lea
rorb
pop
icebp
push
push
inc
lds
aam
out
ret
adcb
divl
sub
sti
icebp
and
jo
shl
loope
outsb
pop
jge
and
lods
nop
rcrl
push
xor
dec
adc
xchg
jp
mov
jmp
in
mov
and
insl
push
mov
pop
adc
xchg
add
call
imul
mov
out
push
ljmp
pushf
popf
ret
lret
int3
xchg
popa
inc
dec
push
adc
sub
mov
sbb
add
leave
pop
mov
inc
subb
sub
mov
test
push
add
subl
inc
add
insb
ud0
ljmp
ds
add
rolb
repnz
dec
mov
mov
xchg
or
jo
mov
fwait
xor
mov
xor
lods
in
orb
icebp
mov
jmp
popa
fsub
pop
and
stos
lcall
scas
lods
sub
inc
test
decl
xchg
mov
test
mov
xor
insl
mov
xchg
push
lcall
decl
call
jmp
inc
mov
mov
in
es
jae
incl
or
pop
fdiv
outsb
xchg
call
dec
mov
cmc
mov
repz
sub
test
mov
lods
insb
mov
xchg
jb
cltd
mov
sti
enter
jg
call
mov
xchg
push
gs
or
into
or
inc
scas
cmp
cwtl
inc
sysenter
in
adc
jl
call
mov
push
shrb
imul
or
call
xlat
jns
mov
nop
gs
push
pop
inc
jmp
pop
lds
sbb
sar
call
dec
push
inc
cmpsl
test
fwait
pop
lret
cltd
aas
ss
mov
int
inc
subl
incl
sbb
fwait
xor
jle
scas
fucomp
push
fistpl
xor
jmp
lahf
test
adc
sbb
shrl
mov
ljmp
imul
and
mov
adc
jg
adc
sub
outsl
imul
lcall
pop
js
in
lret
sbb
jb
into
in
repnz
mov
xor
pushl
shl
inc
rcl
cltd
push
popa
jno
push
insb
push
lods
and
cmp
jmp
pushl
jl
or
arpl
push
orb
xchg
add
into
aaa
lahf
adc
lcall
hlt
frstpm(287
lret
pop
and
les
mov
pop
rcl
loopne
test
mov
call
inc
mov
int
and
lods
adc
pushf
mov
fwait
xor
jne
sub
roll
inc
jno
into
and
pushf
xchg
cmp
jecxz
cwtl
popf
pop
je
dec
dec
push
ret
inc
cs
push
clc
pop
popf
cwtl
cmpsb
sub
insb
add
leave
mov
push
inc
cmpsl
fdivrl
fmul
cli
ja
subb
incl
test
clc
dec
cmp
fiaddl
pushf
mov
adc
daa
call
xor
mov
push
jmp
ss
sbb
pop
and
outsl
adc
add
popa
out
scas
adcl
jb
notl
push
arpl
loopne
cld
jno
jmp
dec
icebp
pop
pop
fildll
outsb
std
sti
cwtl
lret
mov
push
jl
mov
or
lcall
insl
mov
sbb
pushf
pop
es
ret
pop
movsl
subl
ja
lcall
lcall
mov
adc
pop
pop
insb
sbb
jge
nop
arpl
pop
adc
or
lods
push
dec
jmp
lahf
in
mov
mov
lock
clc
icebp
loopne
cmc
dec
xchg
adc
add
ljmp
scas
jnp
mov
dec
xchg
adc
pop
and
push
xor
push
lcall
dec
dec
push
in
aam
out
xor
xchg
call
xor
jmp
dec
insl
andl
cld
cmp
icebp
push
addl
adc
jmp
jno
loopne
cltd
jnp
and
shr
xlat
mov
cmp
hlt
bound
cmp
aam
mov
jle
data16
outsl
gs
out
cmpl
mov
ljmp
adc
inc
sbb
movsb
sub
push
outsl
mov
leave
and
dec
insl
pop
stc
fyl2x
sbb
in
jae
inc
mov
incl
scas
stos
addb
push
dec
mov
xchg
sub
into
rorb
or
mov
adc
adc
adc
lea
push
popf
je
ljmp
out
add
rcrl
inc
cmc
or
sbb
or
mov
hlt
dec
pop
cmp
jg
lcall
push
and
jbe
jle
scas
mov
cmp
push
hlt
ss
test
jg
call
mov
or
xor
pop
sub
or
cli
xor
or
xchg
jmp
mov
fnsave
dec
push
inc
inc
jp
mov
repnz
mov
and
dec
cltd
push
jmp
adc
jle
jo
ds
test
push
mov
insb
pushf
outsb
or
mov
pop
icebp
pop
stc
repz
mov
adc
popf
jg
sbb
jge
imul
lcall
imul
push
popf
scas
repz
hlt
adc
popf
pusha
push
jle
std
jg
xchg
fs
cltd
xchg
jle
pop
movsl
xchg
add
fdivr
enter
xor
xor
popa
xchg
js
or
dec
addr16
pop
adc
fistpll
aas
lea
jne
cmp
jp
sahf
or
outsl
decl
subl
mov
add
push
test
aaa
sti
incl
repnz
xchg
cmc
pushf
push
mov
xchg
insb
data16
sub
push
xchg
imul
adc
cwtl
fs
nop
pusha
cs
mov
jg
xchg
in
pushf
push
xchg
hlt
or
xchg
mov
sar
pushf
pop
push
mov
pop
sub
mov
mov
data16
std
ljmp
mov
xchg
gs
mov
lcall
sbbb
mov
dec
dec
xor
js
cmp
cmovle
sahf
test
repz
sahf
push
sbb
das
push
push
scas
xchg
pusha
dec
negl
test
jle
lods
flds
imull
into
in
xchg
jg
aad
iret
sub
fsubs
test
xchg
test
pop
das
clc
add
jle
rorb
fwait
fs
lcall
in
or
jbe
jno
test
pop
mov
inc
jp
leave
iret
aas
mov
xchg
addr16
and
test
sbb
jns
int3
jp
pushf
xlat
mov
mov
out
repz
jbe
lret
mov
out
pop
mov
mov
inc
cwtl
adc
pop
addr16
push
or
out
or
push
insb
fnstenv
xchg
hlt
es
inc
jo,pt
dec
jno
push
jb
pop
test
andb
xchg
push
jne
ud0
cs
or
mov
adc
es
add
ret
hlt
repz
bnd
inc
ss
outsb
negb
fildl
push
out
xchg
hlt
dec
jp
add
cld
outsl
mov
jp
aas
testl
and
xor
ja
mov
jnp
pushl
shlb
jp
jae
cmpsb
ljmp
cli
push
hlt
js
in
lret
outsl
je
idiv
cmp
mov
push
push
sub
mov
or
sahf
xor
nop
push
push
icebp
and
sub
mov
ffreep
pop
jno
mov
lret
push
shll
jg
cli
sar
test
pop
or
xchg
lock
mov
mov
xor
xchg
push
jge
sub
add
inc
cs
enter
outsb
shlb
dec
add
or
addl
push
pop
test
call
addl
push
mov
or
dec
sub
das
lret
xchg
sahf
ja
mov
jns
enter
mov
xchg
xor
push
ja
incl
sbb
mov
mov
lds
cmovns
and
pop
decl
fsubrl
sub
sbb
repnz
popa
orl
cwtl
jmp
outsl
push
push
jle
dec
xchg
sarl
lret
mov
and
popl
popf
hlt
jns
test
add
cmp
out
icebp
dec
in
aaa
das
lods
subl
scas
subl
dec
aam
sbb
pop
in
maskmovq
mull
or
pushf
mov
lcall
jge
pop
stc
cld
xor
jp
cmp
mov
jg
xchg
dec
jbe
xor
sbb
jge
mov
jb
xchg
push
cmc
shll
xor
mov
cld
and
or
jg
add
icebp
out
jbe
push
aam
into
jp
mov
hlt
jb
test
ljmp
xchg
repnz
cmp
stos
jl
enter
dec
mov
xlat
jg
lock
stc
xor
out
mov
dec
icebp
repz
mov
xchg
jecxz
push
ljmp
adc
mov
jp
cltd
or
adc
xor
mov
xlat
push
pusha
push
outsb
and
add
in
lcall
xchg
xor
int3
sub
pop
lock
mov
imul
cmc
mov
or
enter
testb
lcall
rclb
jle
push
les
mov
repnz
jbe
sub
loope
mov
mov
xchg
push
sub
js
iret
neg
testb
dec
push
jae
jle
mov
cmpsl
xchg
outsb
push
xor
lock
push
aaa
inc
push
dec
lods
out
dec
decl
push
cld
mov
cmp
icebp
inc
ret
mov
lock
mov
clc
and
incl
mov
add
xor
mov
mov
test
mov
or
std
pop
out
xchg
movsb
jbe
int3
mov
mov
mov
call
in
xchg
push
pushf
fsubrs
in
adc
xchg
lods
icebp
mov
lds
inc
push
sbb
das
cmp
pop
shll
pushl
pop
xor
pop
jns
dec
jne
ss
ja
popa
jbe
arpl
imul
ja
fs
push
arpl
pushl
inc
push
inc
jb
gs
js
inc
jb
push
arpl
dec
dec
push
outsl
push
push
insb
dec
popa
idiv
idiv
dec
inc
jp
push
pop
inc
jae
inc
xor
dec
js
arpl
insl
dec
insl
dec
incl
inc
jne
push
pop
aaa
dec
inc
js
dec
pop
pop
pop
gs
arpl
aaa
dec
xor
outsl
popa
insl
outsl
mov
divb
push
outsl
dec
dec
cli
fs
addr16
push
push
push
push
or
dec
mov
insb
arpl
popa
push
inc
outsl
inc
cmp
insb
jo
push
push
mov
cmp
sbb
jp
inc
jno
pop
pop
xor
xor
dec
mov
imul
inc
dec
dec
inc
jno
fs
cmp
ss
js
fs
push
dec
outsl
dec
jns
sti
incl
jno
xor
bound
push
outsb
push
inc
dec
inc
pop
cmp
jbe
push
addr16
lcall
imul
dec
xor
sub
dec
push
xor
inc
jne
jg
inc
jae
jbe
bound
pop
xor
outsl
push
inc
push
dec
ljmp
inc
bound
insl
jns
xor
inc
push
push
ss
push
inc
jne
addr16
arpl
push
mov
push
outsb
in
dec
dec
push
push
xor
push
xor
inc
arpl
jb
outsl
jg
inc
dec
imul
bound
jae
dec
xor
data16
mov
inc
add
add
mov
adc
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
mov
mov
mov
in
incl
je
jns
je
insl
push
imul
insb
xor
outsl
outsl
insl
jo
je
outsl
outsb
push
je
je
jae
push
jb
inc
outsl
out
mov
outsb
fs
jb
sub
popa
insb
push
arpl
jo
insl
mov
push
mov
arpl
push
mov
jp
insl
and
inc
jbe
test
mov
jae
popa
mov
push
je
sbb
mov
sti
sti
jae
jne
arpl
push
pusha
fs
js
jo
fmull
fidivrs
popa
outsb
fs
addr16
frstor
fadds
mov
cwtl
push
jle
imul
dec
mov
popa
movsb
push
pop
add
dec
bound
sub
push
rcrb
sbb
mov
mov
push
pop
push
imul
bound
push
repnz
mov
loope
data16
push
jle
cwtl
fstpt
sbb
mov
nop
jo
outsw
fsubrl
mov
loope
jb
je
mov
mov
pop
push
jne
popa
inc
or
push
inc
jns
and
daa
push
cs
and
push
scas
cmp
push
jns,pt
test
in
sarb
push
mov
sub
arpl
mov
shll
pushf
sarb
dec
inc
dec
inc
push
je
pop
and
xorl
dec
xor
fcmovb
or
add
ret
fwait
sub
cwtl
mov
loope
jns
outsl
imul
or
sbb
out
ror
arpl
push
inc
pusha
addb
xchg
pop
inc
push
sahf
or
mov
fimuls
aas
es
adc
inc
int
aam
mov
and
sbb
addr16
hlt
mov
jae
inc
imul
inc
pop
imul
add
mov
ss
mov
inc
push
loopne
jae
lds
adc
adc
je
jns
fsubr
mov
push
jle
push
shll
mov
es
push
gs
and
dec
push
dec
push
das
push
push
push
push
add
mov
dec
xchg
gs
fcoml
adc
add
cmp
fldenv
ficoml
imul
imul
mov
sbb
sub
and
je
arpl
add
aaa
daa
xchg
pop
add
addb
test
xchg
nop
test
adc
jnp
adc
adc
push
sbb
arpl
ds
inc
and
mov
xchg
mov
orl
sbb
out
stos
lret
test
dec
loopne
inc
popa
jb
dec
popa
insl
gs
and
push
inc
push
dec
add
add
ds
add
or
lock
out
testl
popf
push
adc
pop
or
divb
and
inc
add
jae
imul
add
lea
mov
repnz
push
inc
add
add
je
js
mov
mov
pusha
fisubs
popa
sbb
add
add
iret
in
inc
outsb
dec
push
rorb
dec
stc
sahf
std
test
dec
add
xor
cmpsb
lock
adc
daa
shrb
jae
adc
in
push
xor
xchg
test
fidivrs
inc
add
xchg
and
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
adcb
add
add
addb
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
sbb
add
inc
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
adc
or
add
in
add
add
add
add
add
add
add
loopne
add
inc
adc
add
add
add
add
add
add
add
add
add
add
or
add
push
adc
add
in
add
add
add
add
add
add
add
xor
add
fs
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
in
add
add
add
add
add
add
add
test
add
xchg
sbb
or
add
in
add
add
add
add
add
add
add
rolb
add
movsb
sbb
or
add
in
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
mov
inc
add
addl
in
add
add
add
and
add
push
inc
inc
sub
inc
add
push
inc
inc
cmp
add
inc
inc
push
inc
add
push
inc
inc
push
push
inc
add
push
inc
inc
pop
push
inc
add
push
inc
inc
push
push
inc
inc
je
inc
add
push
inc
inc
sbbb
add
inc
mov
add
push
add
aaa
call
stos
add
mov
or
pop
mov
in
out
add
out
in
add
in
add
movsl
orl
pop
out
add
lret
add
scas
addl
out
addb
add
mov
addb
movd
adc
sbb
push
addb
sbb
add
sub
sub
add
in
add
xchg
push
pop
or
xorb
fwait
mov
fwait
cmp
cmp
sub
add
pop
mov
add
lret
sarl
cmp
or
add
roll
mov
jno
int
add
rolb
into
or
lods
inc
add
jg
jg
jg
jg
inc
inc
adc
pusha
add
pusha
add
add
add
add
push
pusha
add
pusha
add
pusha
ds
pusha
add
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
push
xor
add
pusha
add
pusha
add
push
pusha
add
add
pusha
add
add
add
pusha
add
pusha
add
xor
add
xor
add
pop
push
in
add
pusha
add
add
add
addr16
add
add
push
inc
jecxz
dec
xor
add
pusha
add
pusha
add
xor
add
pusha
add
pusha
add
add
pusha
add
pusha
add
pusha
add
loopne
daa
or
add
test
in
add
pusha
add
add
add
pusha
add
pusha
add
pusha
add
lret
pusha
add
pusha
add
pusha
add
add
pusha
add
add
pusha
add
punpcklbw
sbb
jecxz
pusha
push
pusha
add
pusha
add
add
pusha
add
add
and
add
pusha
add
pusha
add
ds
add
pusha
add
pusha
add
add
pusha
add
add
add
sub
aaa
pusha
add
pusha
add
cmp
pusha
add
pusha
add
pusha
add
add
add
add
pusha
add
pusha
add
mov
add
lds
stc
pusha
add
pusha
add
and
add
pusha
add
pusha
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
add
pusha
add
add
pusha
sbb
loopne
jmp
and
add
pusha
add
pusha
add
pusha
add
add
add
pusha
add
add
and
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
xor
cmp
add
pusha
add
add
mov
pusha
and
add
add
cmpsl
outsl
inc
rcrb
and
add
inc
adc
stos
pusha
add
add
loopne
sub
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
loopne
or
stos
aas
pusha
add
pusha
add
add
add
pusha
add
add
ret
push
in
mov
add
pusha
add
pop
pusha
add
cmp
punpcklbw
xor
and
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
push
pusha
add
pusha
add
add
pusha
add
add
xor
pop
inc
xor
in
cmp
add
xor
iret
push
xor
add
add
xor
imul
ja
add
adc
add
xor
adc
in
push
add
add
xor
pop
push
xor
pop
mov
xorl
xchg
push
xor
xorl
inc
jo
push
push
xor
and
add
add
inc
xor
std
cmp
add
mov
sbb
xor
aaa
xor
sub
add
xor
dec
xor
jg
add
xor
mov
add
add
push
xor
int
add
xor
jmp
jo
pop
xor
aaa
xor
add
xor
lds
add
xor
adc
xor
cmp
add
add
xor
stos
jo
mov
add
xor
ja
add
add
xor
sub
add
xor
jno
jmp
mov
wrmsr
add
xor
push
xor
stos
dec
xor
arpl
add
add
xor
pushl
add
lock
stos
or
add
xor
push
xor
dec
xor
stos
imul
lds
add
xor
mov
xorb
push
xor
pusha
subl
add
xor
dec
leave
xor
mov
xor
loope
add
jo
stc
cmp
add
jge
sub
outsl
cld
push
lock
xor
xor
daa
xor
std
fwait
jo
xor
jg
push
xor
push
clc
mov
jno
xchg
xor
push
xor
ja
add
add
add
xor
sub
add
xor
xor
jo
xor
jnp
sub
add
xor
movsl
xor
dec
xor
add
fsts
add
mov
jp
add
pusha
call
cmp
push
add
pop
add
or
inc
pop
add
movsl
test
clc
adc
iret
add
xor
test
pop
add
mov
lods
imul
mov
dec
aam
movups
test
mov
aas
add
sbb
data16
add
xor
cmc
sbb
inc
add
andl
add
xchg
sbb
add
push
cld
sub
jecxz
cmp
add
popf
mov
popf
nop
add
fwait
or
iret
popf
add
mov
mov
lcall
roll
mov
lods
add
add
add
or
outsl
outsb
add
inc
in
imul
ljmp
add
pop
outsl
mov
out
enter
add
call
mov
add
outsl
addr16
adcb
out
add
xchg
lahf
lahf
cwtl
lahf
lahf
out
jo
out
add
jo
add
add
aam
add
add
mov
add
jo
mov
add
add
add
xchg
mov
mov
add
adc
mov
add
cli
add
add
cmpsb
add
add
add
add
pusha
lods
lods
add
jo
and
add
stos
lods
add
jo
stos
jo
add
jo
push
jo
and
stos
sub
and
cmp
add
je
stos
je,pt
cmp
add
add
jo
add
add
cmp
mov
jo
mov
add
jo
mov
stos
ss
pop
jo
xor
add
xor
add
jo
xor
scas
cmpsl
test
add
jo
xchg
jo
xor
sub
add
jo
push
jo
in
out
pop
rclb
adc
lock
add
sbb
push
adc
xor
fistps
jb
out
or
in
in
cmc
add
in
out
out
in
add
das
mov
add
add
inc
add
ljmp
jmp
ljmp
adc
in
out
cmp
add
or
add
add
into
add
int3
lret
lret
add
add
les
ret
add
fcmovu
fcom
add
lea
xchg
addl
cwtl
mov
mov
incl
icebp
testb
xchg
xchg
inc
add
add
add
add
pop
add
add
add
add
ltr
add
add
add
in
in
jmp
jmp
inc
add
in
loop
loopne
add
decl
pop
add
add
pop
add
add
add
add
lock
arpl
aas
add
add
add
push
mov
add
pop
ret
mov
mov
lock
add
mov
fcomi
add
fimuls
mov
iret
shrb
shl
sub
cmpsb
add
cmp
lods
add
mov
test
bound
dec
imul
pop
push
seta
popa
mov
cmpsl
lahf
add
mov
repz
mov
add
sti
add
mov
inc
dec
or
add
inc
mov
sbb
pop
lret
imul
and
ret
fxam
mov
test
xchg
dec
fsubrp
xchg
repz
mov
or
jle
shr
inc
ret
or
add
repz
in
aas
xchg
es
inc
or
push
dec
mov
add
jbe
sbb
jnp
mov
adc
stos
mov
and
faddp
add
repz
jo
pop
jns
push
incl
sub
xchg
shl
sbb
add
push
fninit
ret
add
add
mov
daa
in
pop
scas
add
data16
add
cmp
or
hlt
cmp
add
dec
mov
xchg
xcrypt-ecb
cmpsl
dec
or
outsl
in
add
dec
lret
add
add
pop
addb
sbb
addb
add
push
mov
add
addb
addb
addb
rolb
rolb
test
inc
add
or
add
rolb
add
add
add
rol
add
add
add
inc
rolb
add
add
rolb
add
add
mov
loope
add
rolb
add
add
adc
pop
daa
rolb
add
push
add
rolb
rorb
rolb
adc
in
add
add
add
add
dec
rolb
add
add
rolb
rorb
rolb
rolb
push
rolb
rclb
rolb
rorb
inc
rolb
add
add
rclb
filds
movl
add
rolb
push
rolb
adc
rolb
add
std
add
mov
add
add
rolb
rorb
inc
rolb
add
add
add
adc
fldl
lahf
rolb
add
add
mov
hlt
add
inc
rolb
add
add
rolb
push
add
add
rolb
shrb
add
add
rolb
add
aaa
pop
mov
push
add
rolb
rolb
rolb
push
shlb
rolb
shrb
add
add
add
rcrb
rolb
rolb
add
push
add
add
add
rolb
rolb
rolb
adc
cli
add
in
add
rolb
rolb
rolb
push
shlb
rolb
sarb
rolb
inc
rorb
scas
add
add
add
rolb
rcrb
rolb
rorb
push
rolb
rolb
add
loopne
or
test
inc
add
add
inc
add
movb
mov
loopne
aas
loopne
add
add
loopne
cld
loopne
jnp
add
loopne
addr16
loopne
add
ret
add
loopne
cmpsl
loop
stos
add
loopne
je
loopne
sbb
add
push
loopne
stos
loopne
pavgb
loopne
aaa
inc
loopne
or
leave
add
add
loopne
inc
loopne
es
dec
loopne
outsb
add
add
add
add
loopne
dec
loopne
fwait
loopne
loopne
add
adc
sub
add
adc
push
ret
loopne
scas
add
push
add
loopne
fsub
or
loopne
or
add
loopne
xor
loopne
sub
add
add
push
add
add
or
add
add
inc
loopne
gs
add
loopne
push
push
loopne
ret
loopne
ja
pop
lret
loopne
jg
loopne
repz
lret
loopne
jecxz
add
inc
loopne
pop
movsb
scas
add
loopne
loopne
aaa
loopne
jno
xor
inc
loopne
fwait
add
add
add
add
add
and
lods
loopne
mov
add
loopne
shl
add
adc
lods
loopne
es
loopne
push
loopne
sti
loopne
stos
jle
add
loopne
jb
sbb
loopne
xorb
pop
movsl
scas
add
loopne
jne
add
loopne
mov
inc
loopne
cli
loopne
dec
loopne
stos
shl
add
add
loopne
loopnew
stos
dec
loopne
imul
inc
loopne
xchg
loopne
stos
lret
loopne
fwait
loopne
adc
add
loopne
mov
add
loopne
mov
loopne
scas
loopne
jl
dec
fneni(8087
add
loopne
add
add
loopne
stos
sub
push
sti
loopne
push
pop
jecxz
add
and
add
loopne
push
loopne
sbb
loope
loopne
adc
or
push
loopne
loopne
push
loopne
daa
loopne
inc
push
loopne
cld
loopne
ja
add
loopne
arpl
add
sbb
add
loopne
mov
add
loopne
mov
loopne
aad
add
cmp
loopne
mov
notl
loopne
loopne
loopne
inc
push
loopne
repz
lret
sti
loop
ljmp
loopne
add
add
inc
loopne
pop
cmpsl
scas
add
loopne
pop
push
loopne
insl
loopne
pop
loopne
xor
add
push
loopne
xor
add
adc
push
loopne
sbb
cmp
add
inc
addr16
loopne
fsubp
adc
add
loopne
xchg
add
add
loopne
mov
addr16
mov
add
loopne
mul
add
and
loopne
adc
add
scas
push
add
add
loopne
mov
add
add
add
loopne
iret
loopne
inc
loopne
out
loopne
ja
loopne
popa
loopne
xchg
loopne
loopne
lahf
lods
loopne
repz
loopne
sub
add
loopne
mov
add
loopne
mov
loopne
mov
shl
add
jo
or
ret
jo
push
icebp
or
jo
cmp
divl
icebp
add
fadds
pop
scas
add
add
lock
add
jb
out
addr16
push
lock
xchg
jo
mov
add
jo
shlb
stos
mov
pop
cmpsl
jo
mov
jo
jle
push
ret
jo
or
adc
xorb
jo
jbe
or
icebp
lock
stos
scas
add
xor
cltd
lock
stos
sub
or
push
jo
out
lock
lock
add
jo
stos
imul
lock
add
lock
sub
pop
jo
fbstp
cmp
stos
repz
ret
lock
jo
or
add
adc
or
stos
nop
lock
jo
ret
push
jo
stos
jns
cmp
add
lock
addr16
stos
push
jo
fwait
jo
imul
popl
int3
add
jo
and
jnp
jecxz
add
add
jo
shl
ud2
jo
stos
and
xor
mov
push
jo
stos
fdiv
add
add
jo
inc
jo
and
add
add
test
add
jo
mov
add
jo
sbb
or
jno
sbb
add
push
jo
data16
xor
pop
jo
and
sbb
imul
or
lock
jo
mov
ss
push
or
push
jo
sub
or
lock
add
jo
pshufw
lock
jp
adc
xchg
jno
jo
stos
leave
jo
jnp
add
add
jo
in
sbb
push
jo
mov
add
mov
insl
addl
add
add
jo
xor
mov
add
push
add
das
scas
add
scas
and
add
sub
add
dec
out
aaa
in
dec
out
scas
add
dec
out
shr
dec
out
mov
out
inc
out
out
inc
out
mov
out
inc
out
mov
inc
out
xchg
add
inc
out
xchg
out
inc
out
xchg
add
pop
out
ljmp
pop
out
lods
out
pop
out
roll
out
pop
out
mov
pop
out
sub
in
push
out
mov
push
out
mov
out
push
out
mov
push
out
xchg
add
push
out
xor
push
out
xchg
add
push
out
xchg
out
das
out
mov
in
out
sub
add
sub
jmp
add
and
out
cmc
add
and
loope
aas
out
incl
out
ds
lods
out
cmp
cmp
mov
add
ss
sub
out
xor
out
pmaxsw
in
out
or
aad
out
or
call
add
add
out
hlt
add
out
out
loopne
pop
out
incb
out
push
out
stos
out
sbb
sbb
mov
add
push
out
sub
out
sahf
add
adc
mov
adc
ss
dec
in
leave
out
dec
in
lret
add
inc
in
fucomip
inc
in
icebp
add
inc
in
fucomi
pop
in
enter
in
lret
in
fiadds
out
push
in
lock
push
in
fiaddl
out
sub
in
sub
out
out
cmp
iret
adc
repz
or
add
xor
mov
or
in
out
or
out
sbb
into
add
pop
in
repnz
adc
addb
adc
mov
dec
in
xlat
add
dec
in
mov
add
dec
in
aam
inc
in
std
add
inc
in
int
inc
in
mov
out
pop
in
mov
add
pop
in
shr
push
in
cld
add
push
in
int3
out
push
in
mov
out
push
in
movsl
out
push
in
movsb
add
das
in
add
sub
roll
and
stc
out
and
lds
out
ds
stos
out
cmp
cmp
fldz
ss
popf
add
xor
xchg
xor
test
out
paddsb
out
or
rolb
add
clc
out
out
in
les
out
push
in
test
add
sbb
fsubr
push
in
pushf
add
adc
xchg
adc
test
out
xchg
jmp
iret
dec
jmp
add
dec
jmp
fisttps
add
dec
jmp
fisttps
adc
fisttps
sbb
add
inc
jmp
filds
dec
add
inc
jmp
filds
add
inc
jmp
filds
or
filds
or
inc
jmp
add
pop
jmp
fistps
dec
add
pop
jmp
fistps
add
pop
jmp
fistps
inc
add
pop
jmp
fistps
inc
add
push
jmp
fists
pop
add
push
jmp
fists
add
push
jmp
fists
push
add
push
jmp
fists
push
add
das
jmp
fildll
jmp
add
sub
jmp
add
sub
daa
fildll
jmp
add
sub
and
sub
and
fbld
jmp
fbld
jmp
add
and
jmp
add
and
cmp
and
aaa
add
and
xor
and
xor
fistpll
jmp
fistpll
jmp
add
cmp
jmp
add
cmp
or
cmp
or
fistpll
jmp
fistpll
jmp
add
aaa
jmp
fbstp
jmp
add
xor
jmp
add
xor
out
fbstp
jmp
add
xor
je
xor
jae
filds
jecxz
push
ljmp
jmp
jmp
sub
int3
add
sub
lret
jmp
jmp
sub
enter
ljmp
jmp
and
les
jmp
and
ret
and
shr
ljmp
jmp
jmp
cmp
faddl
jmp
cmp
fiaddl
jmp
cmp
fadds
jmp
ss
jmp
jmp
or
or
lods
jmp
jmp
or
test
test
pop
ljmp
jmp
jmp
add
mov
mov
add
out
ljmp
jmp
sbb
dec
jmp
mov
mov
add
dec
jmp
mov
mov
add
inc
jmp
mov
jmp
jmp
mov
jmp
jmp
mov
jmp
jmp
stc
add
pop
jmp
in
add
pop
jmp
jmp
jmp
jmp
jmp
call
add
push
jmp
in
jmp
jmp
jecxz
jmp
jmp
loope
jmp
jmp
mov
fucomip
sub
sub
test
add
sub
sub
stos
add
sub
fsubr
daa
jmp
jmp
add
and
aad
and
aam
jmp
jmp
rolb
jmp
jmp
rolb
jmp
jmp
scas
add
cmp
scas
jmp
jmp
jmp
flds
jmp
jmp
mov
movsb
jmp
jmp
jmp
mov
cmpsb
jmp
jmp
jmp
roll
push
jmp
incb
jmp
jmp
sti
add
or
cli
jmp
jmp
jmp
lret
push
jmp
testb
add
cmc
jmp
jmp
jmp
repnz
out
jmp
lock
push
jmp
iret
add
sbb
into
jmp
jmp
jmp
stc
add
sbb
std
jmp
jmp
jmp
clc
add
adc
jmp
jmp
jmp
enter
jmp
imul
in
dec
call
call
inc
add
dec
call
popa
add
inc
call
pusha
add
inc
call
cli
add
pop
call
inc
add
aas
pop
call
inc
in
pop
call
jg
pop
call
and
push
call
pop
in
push
call
jle
sub
call
jnp
sub
jp
sub
jns
sub
js
daa
call
jbe
and
call
jae
and
jb
and
jno
and
jo
aas
call
dec
in
cmp
call
dec
in
cmp
dec
in
cmp
dec
in
aaa
call
inc
in
push
call
pop
in
or
pop
in
or
pop
in
or
pop
in
or
pop
in
or
pop
in
pop
call
push
in
add
call
push
in
add
push
in
add
push
in
out
call
das
in
push
call
sub
sbb
sub
in
sbb
sub
sbb
sub
sbb
sub
pop
call
es
dec
out
int3
dec
out
lret
add
dec
out
int3
dec
out
int3
dec
out
lret
dec
int3
inc
out
int3
inc
out
int3
inc
out
int3
inc
out
int3
inc
out
int3
inc
out
int3
inc
out
int3
inc
out
int3
pop
out
int3
push
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
into
and
cmp
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
int
out
out
adc
jg
adc
jle
adc
jge
adc
jl
xor
int
sub
push
out
lret
out
or
jecxz
or
loop
or
in
pop
out
lret
push
out
lret
add
out
lret
jecxz
add
sti
lret
ror
out
out
int3
pop
out
int3
push
out
lret
push
int3
sbb
push
int3
sbb
repz
lret
lret
fcmovne
sbb
ret
lret
in
lret
in
iret
dec
in
iret
dec
in
iret
dec
in
iret
dec
in
iret
dec
in
iret
dec
in
iret
inc
in
iret
inc
in
iret
inc
in
iret
inc
in
lret
inc
in
iret
inc
in
iret
pop
in
into
pop
in
into
pop
in
into
pop
in
into
pop
in
into
pop
in
into
pop
in
into
pop
in
into
push
in
into
push
in
iret
push
in
int3
push
in
add
in
into
sub
mov
sub
mov
sub
mov
es
into
and
in
lret
pop
lret
and
and
inc
lret
test
cmp
in
iret
cmp
icebp
into
cmp
cmp
fmul
ss
enter
lret
das
lret
pop
lret
and
xor
inc
lret
or
push
in
lret
inc
lret
pop
lret
push
lret
jmp
iret
or
inc
lret
pop
lret
push
lret
repz
add
icebp
leave
add
mov
add
mov
add
mov
pop
in
enter
iret
sbb
in
enter
enter
leave
sbb
or
in
leave
pop
in
leave
push
in
leave
adc
in
into
adc
xlat
iret
adc
cmc
iret
adc
icebp
iret
dec
in
add
roll
inc
in
int
in
int
in
add
in
int
in
int3
sub
mov
and
in
int3
and
dec
int
in
lret
out
cmp
in
int
in
int
in
int
in
int
jecxz
iret
pavgw
ljmp
cmp
ljmp
cmp
or
cmp
or
cmp
pop
jecxz
ljmp
xor
ljmp
xor
add
xor
out
jecxz
ljmp
push
ljmp
or
sbb
or
sbb
or
sbb
or
sbb
or
pop
jecxz
ljmp
add
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loop
loope
loope
fimuls
fstp
dec
loope
fimuls
fcmovnu
dec
loope
fimuls
dec
loope
fiadds
xlat
fiadds
fiadds
aad
inc
loope
fiadds
rcr
inc
loope
fiadds
rcr
inc
loope
ficomps
scas
ficomps
scas
ficomps
lods
ficomps
ficomps
stos
ficomps
stos
ficomps
test
ficoms
cmpsl
ficoms
cmpsb
ficoms
movsl
ficoms
ficoms
mov
ficoms
mov
fisubrs
loope
fisubrs
loope
fisubrs
loope
fisubrs
loope
fisubrs
loope
fisubrs
loope
fisubrs
loope
fisubs
loope
fisubs
loope
fisubs
loope
fisubs
loope
fisubs
loope
fisubs
loope
fisubs
loope
fidivrs
loope
fidivrs
loope
fidivrs
loope
fidivrs
loope
cmp
inc
cmp
inc
cmp
inc
aaa
loope
ss
xor
loope
xor
pop
xor
pop
xor
pop
xor
pop
decb
loope
decb
loope
decb
loope
decb
loope
decb
loope
decb
loope
decb
loope
incb
loope
incb
loope
incb
loope
incb
loope
incb
loope
incb
loope
out
loope
ficomps
loope
ficomps
loope
ficomps
loope
ficomps
loope
ficomps
loope
ficomps
loope
ficomps
loope
ficoms
loope
push
loope
adc
loope
iret
dec
cld
inc
iret
push
cld
mov
out
push
cld
xchg
out
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
dec
iret
inc
iret
inc
iret
inc
iret
inc
iret
inc
iret
inc
iret
inc
iret
inc
iret
inc
iret
inc
iret
out
add
out
add
out
add
out
add
in
add
jecxz
add
loop
add
loop
add
cld
adc
add
add
add
adc
add
add
add
adc
add
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
mov
out
add
adc
add
add
add
add
add
add
add
add
test
add
rolb
add
add
outsl
adc
add
add
add
add
out
add
bound
add
loop
add
jle
add
lahf
add
add
add
sahf
add
add
add
adc
add
add
lret
add
add
add
lret
add
add
leave
add
add
add
enter
jbe
add
movl
add
int3
add
add
add
into
add
add
add
add
add
add
jecxz
add
jno
add
ret
add
add
roll
add
add
test
add
inc
adc
add
add
addl
add
add
addb
add
add
addl
add
sub
add
add
popl
add
pop
adc
add
adc
add
adc
add
add
mov
add
pop
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
fwait
add
add
add
lcall
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
xchg
add
add
add
xchg
add
add
adc
add
adc
add
adc
add
add
and
add
outsb
add
add
adc
add
add
adc
add
add
add
add
add
push
add
cmp
add
imul
add
push
adc
add
add
or
add
add
add
dec
add
add
adc
add
add
adc
add
add
add
out
add
add
add
mov
add
add
add
mov
add
mov
add
mov
add
push
mov
out
sbb
dec
pushf
mov
in
dec
jmp
add
aam
xchg
mov
lds
shll
loopne
shll
rcr
fmuls
or
jo
outsb
testl
aad
cmp
mov
ja
pop
bound
jg
adc
pop
lea
add
cwtl
fwait
cmp
push
and
cmp
loopne
adc
insb
sbb
andb
mov
push
mov
ret
sahf
pop
jns
cs
out
push
dec
ret
pop
xor
lret
mov
popf
jne
pop
mov
movsb
pop
das
mov
mulb
pop
add
out
je
sub
pop
arpl
add
pop
clc
jae
push
int3
jns
in
sub
xlat
les
mov
jmp
adcb
sub
xchg
mov
and
xchg
lcall
mov
aas
nop
lock
mov
mov
xchg
and
cmp
lret
cwtl
jns
push
mov
mov
arpl
fbld
and
movsl
pop
xchg
aad
fidivrs
pop
repnz
fidivs
faddp
fst
frstor
insl
or
data16
ret
cmp
or
scas
mov
repz
fcmove
xchg
jno
adc
cmpsb
and
mov
xchg
cmp
cmpsl
mov
out
fucomp
xchg
shlb
repz
loopne
imul
aaa
call
fcoml
fdivrl
jae
dec
faddl
sub
cli
mov
icebp
shlb
jecxz
lds
cmpsl
je
fcomi
fcmovne
fcmovnb
fcmovnu
fcmovnbe
fldt
shlb
or
aaa
cs
fimull
adc
jno
loop
adc
repnz
fstpt
fisttpl
fildl
fistpl
fistl
fucomi
sub
mov
mov
jle
pop
sbb
jecxz
or
es
and
fisubrl
arpl
jnp
jae
dec
fiaddl
pop
ficoml
sub
or
jno
add
out
test
jp
incb
enter
mov
mov
fldcw
fnstenv
fsts
das
jg
jg
loope
xchg
mov
adc
sbb
lea
scas
add
sti
add
add
fists
fbld
ljmp
mov
adc
out
push
in
adc
add
xchg
jo
pop
aam
aam
aam
shrl
rorl
push
hlt
or
push
ret
lahf
sub
mov
lcall
rcl
rcrb
sub
xor
add
adc
add
add
ret
or
xor
mov
insb
cmp
xor
rol
mov
fidivrs
loop
cmpsl
fisttpll
inc
pop
xlat
jb
sub
push
push
mov
sbb
mov
fiaddl
fisubrl
push
fcmovu
popa
leave
xchg
pop
sbb
les
cld
call
jg
and
xchg
ljmp
f2xm1
fldcw
fstps
negb
ds
inc
in
sarl
pop
clc
movsl
xchg
sbb
lret
imul
inc
fcomps
push
fsubrs
fdivrs
xlat
jns
jo
jae
push
pop
push
hlt
xchg
enter
adc
add
loop
pop
jmp
aad
aad
aad
aad
aam
aam
aam
aam
push
mov
ss
sbb
rol
out
lods
shl
ret
cmp
xor
sub
and
ljmp
rol
rcl
shrb
lret
lret
add
lds
loop
imul
dec
mov
sub
out
icebp
shrl
jp
je
dec
roll
push
rorl
cs
dec
cmpsl
dec
xchg
adc
cmp
imul
les
mov
adc
fcmovne
fldt
fisttpl
add
pop
fcmovnbe
ficoml
dec
pop
int
xchg
sub
std
adc
cmp
jae
adc
cmpsb
push
add
sbb
out
aad
aad
aad
aad
aad
aad
jg
pop
ss
cmp
xor
sub
mov
pop
mov
roll
rcr
rclb
shlb
rorb
adc
dec
jle
inc
mov
loopne
push
test
bound
pusha
addr16
mov
ror
rol
rorb
and
add
fcoml
das
in
fdivrp
popa
push
lea
mov
mov
fcompl
fadd
fidivl
sbb
mov
add
out
in
in
jmp
jmp
in
loop
loopne
std
cld
sti
cli
stc
clc
div
cmc
hlt
repz
lock
into
int
lret
lret
mov
rol
fcmovu
fcom
aad
rcl
rcl
scas
mov
mov
addb
fwait
lcall
mov
mov
mov
mov
addb
fwait
lcall
xchg
xchg
xchg
nop
outsl
outsb
insl
insb
imul
data16
pusha
jg
jge
jnp
jns
ja
jne
jae
jno
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
das
cs
sub
es
and
ds
cmp
ss
xor
push
or
or
push
add
out
pop
push
sbb
sbb
push
adc
adc
out
in
in
jmp
jmp
in
loop
loopne
std
cld
sti
cli
stc
clc
div
cmc
hlt
repz
lock
into
int
lret
lret
mov
rol
fcmovu
fcom
aad
rcl
rcl
scas
mov
mov
add
addb
pushf
fwait
lcall
mov
mov
mov
scas
lods
lods
stos
stos
test
movsl
movsb
mov
mov
mov
mov
xchg
xchg
xchg
xchg
nop
add
insl
insb
imul
add
gs
pusha
add
jge
jnp
jns
add
jne
jae
jno
add
dec
dec
dec
dec
dec
dec
add
inc
inc
inc
inc
inc
inc
add
pop
pop
pop
pop
pop
pop
add
push
push
push
push
push
push
add
cs
sub
daa
es
and
aas
ds
cmp
aaa
ss
xor
femms
or
or
pop
push
add
out
add
push
sbb
sbb
pop
push
adc
adc
roll
add
add
xchg
add
add
adc
adc
adc
and
call
lods
sbbb
xchg
and
nop
xchg
xor
xchg
jo
pop
addb
xchg
lea
sbbl
mov
lea
ret
or
add
add
repz
add
cmc
add
std
adc
outsl
outsl
add
fildl
mov
aas
add
adc
mov
cmpsb
rolb
add
and
jl
orl
lods
cmpsb
lods
popf
mov
mov
add
xchg
test
xchg
mov
rclb
scas
add
jge
scas
add
scas
add
in
fs
inc
invd
add
ret
xchg
fwait
add
cmpsl
mov
faddp
fiadds
push
mov
pop
add
test
mov
pushf
add
inc
add
add
add
in
or
add
inc
lret
inc
add
iret
add
sbb
mov
add
add
add
iret
inc
sbb
lret
push
lret
add
fwait
rolb
add
mov
add
fwait
add
inc
add
or
add
add
mov
and
imul
add
mov
add
scas
add
mov
mov
popf
add
add
add
xchg
sbb
add
add
add
popf
add
mov
mov
and
inc
loope
xchg
mov
mov
bound
arpl
stos
add
mov
or
xchg
adc
add
rol
or
mov
mov
add
add
orl
xchg
scas
add
pusha
add
sbb
add
pusha
add
popa
or
pusha
add
pusha
add
jg
add
add
add
push
shll
xor
add
add
scas
inc
add
subl
add
adc
xchg
jle
add
jns
push
bound
inc
gs
popa
add
dec
gs
pusha
je
outsb
je
push
add
in
clc
add
hlt
add
add
test
mov
mov
stos
lods
add
mov
pop
ret
rol
loop
hlt
neg
stc
lock
in
loope
loopne
sub
or
add
out
adc
and
add
sbb
loopne
add
add
adc
sbb
push
or
adc
rolb
xor
daa
and
push
dec
dec
push
popa
add
xlat
add
into
lret
fucomi
icebp
add
ret
ret
xlat
in
add
idiv
ret
leave
fcmovbe
roll
stc
jmp
or
cmc
sti
mov
adc
push
add
pop
xor
push
or
add
add
inc
inc
or
sbb
add
adc
pop
adc
inc
dec
dec
or
add
sbb
sbb
sbb
or
add
pop
push
sbb
push
adc
sbb
sbb
add
inc
pop
pop
pop
pop
inc
pop
add
ret
int3
inc
add
faddp
faddl
xor
add
and
dec
aaa
sub
dec
addr16
jg
add
imul
fs
and
sbb
or
add
sub
adc
add
xchg
test
mov
mov
test
add
xchg
mov
add
xchg
lcall
cmp
xor
subb
sub
das
xor
add
adc
adc
push
or
dec
add
pop
or
sbb
push
sbb
adc
fwait
mov
test
insl
je
jge
jge
jno
jae
add
xchg
xchg
adc
mov
int3
aad
xchg
fcmovnb
flds
push
insl
add
addr16
push
inc
pusha
add
popa
jle
jne
dec
add
js
jnp
imul
jns
push
push
add
push
dec
dec
inc
jbe
or
inc
add
pusha
add
mov
movsl
loop
lahf
in
loope
add
jmp
mov
add
incl
cli
cld
test
addl
lahf
cltd
into
int
int
enter
sbbb
xchg
ficomps
movsb
cmpsl
mov
in
clc
loop
jmp
inc
or
pop
pop
pop
adc
dec
push
push
add
test
mov
mov
sti
ljmp
out
cmc
icebp
add
mov
lods
loop
les
sti
loop
hlt
popa
push
inc
inc
inc
inc
push
dec
add
test
add
add
or
add
icebp
imul
hlt
mov
cli
icebp
push
mov
stc
add
stos
mov
addr16
dec
dec
inc
inc
add
push
inc
or
dec
dec
add
push
adc
pop
pop
add
pop
sbb
sbb
and
ja
addb
out
out
test
jmp
in
add
std
cld
lock
icebp
push
loope
repz
add
rolb
add
adc
add
add
wbinvd
sbb
push
jno
pop
aas
daa
jb
add
cmp
xor
cmp
xor
sub
outsb
add
mov
mov
lcall
add
mov
mov
push
add
and
adc
add
add
push
adc
adc
femms
add
mov
mov
cmpsl
stos
movsl
cmpsl
stos
mov
mov
mov
loop
loope
repz
sti
add
repz
bnd
in
add
je
dec
add
jns
push
jg
adc
jns
jo
jns
imul
push
jl
addr16
jo
and
outsb
popa
push
add
mov
xchg
add
add
dec
add
dec
arpl
dec
inc
add
inc
push
pop
pop
inc
dec
add
das
sub
add
and
xor
add
add
push
inc
push
push
push
pop
dec
pusha
dec
pop
add
push
inc
add
mov
and
mov
adc
add
adc
add
add
sbb
add
cli
add
roll
loope
call
mov
lea
mov
push
pop
add
pop
dec
dec
jle
inc
adc
push
inc
icebp
add
pop
add
fs
pusha
push
imul
rorl
jns
js
jp
gs
fs
sti
testl
jmp
clc
incb
stc
div
loopne
repz
add
out
mov
xor
add
add
sub
cmp
or
and
cs
add
xchg
test
rolb
adc
add
sbb
add
loopne
hlt
add
repz
jmp
add
push
jge
adc
fs
add
or
add
adc
or
sbb
sbb
add
into
enter
leave
add
fadd
rol
fcmovnb
add
sbb
pop
sbb
add
mov
add
in
in
add
mov
jecxz
idiv
mov
add
add
mov
add
jnp
jns
xor
jp
js
add
hlt
sti
jmp
nop
insl
add
testb
stc
inc
add
jbe
add
data16
dec
push
pop
add
dec
push
jg
dec
add
dec
push
or
push
sbb
jb
dec
pop
data16
jbe
gs
jbe
jns
insl
imul
sti
sti
loopne
in
add
mov
hlt
in
add
jmp
mov
cmpsb
mov
mov
cltd
mov
mov
lds
fidivl
mov
mov
add
mov
mov
stos
mov
mov
push
shrb
jno
fsin
jmp
and
pop
addr16
jno
movsb
andb
ret
mov
mov
jb
xchg
xchg
rolb
add
sahf
mov
mov
add
jo
pop
dec
xor
sbbl
mov
add
add
das
and
add
xor
or
adc
adc
add
and
adc
test
mov
test
rcrl
test
movsb
movsl
cmpsb
test
mov
mov
jmp
and
add
mov
mov
mov
rol
rcl
rolb
jno
rol
add
les
fiadds
loope
fxch
faddl
add
cmp
in
out
imul
icebp
add
mov
mov
add
add
fs
arpl
or
jns
lahf
imul
push
xor
outsl
jb
add
js
jle
pop
push
add
pop
pop
adc
add
inc
ja
dec
dec
add
add
inc
outsb
jnp
insb
imul
rolb
add
mov
mov
mov
add
pop
push
pop
adc
or
stc
xor
and
xor
mov
test
jo
add
pusha
jbe
jnp
dec
add
gs
push
inc
dec
dec
add
inc
push
pop
jno
inc
add
pop
add
pop
dec
add
dec
pop
dec
push
jae
add
jp
outsl
pusha
fs
push
imul
imul
add
out
push
push
and
add
add
addb
push
dec
pop
pop
push
pop
inc
adc
inc
mov
cmp
pop
or
add
add
push
add
sub
add
pop
and
loopne
mov
xor
or
push
xor
and
sub
and
push
adc
in
add
add
loope
add
add
out
add
add
das
sub
sub
xor
sbb
xor
add
jecxz
test
mov
sbb
and
add
js
push
jge
add
push
add
adc
adc
adc
add
fcoms
xchg
xchg
addb
add
rcrb
xchg
sahf
xchg
xchg
addl
push
inc
dec
inc
dec
add
adc
pop
or
or
add
add
jb
andb
js
jb
nop
xor
aam
ret
rcl
ret
rol
add
leave
in
clc
out
cli
add
ret
repnz
mov
add
repz
cmc
cld
ljmp
fisubrl
mov
adcb
push
dec
inc
dec
xor
add
sbb
dec
add
inc
pop
add
push
jbe
arpl
add
in
call
add
cmp
pop
adc
aas
and
sbbb
pop
push
dec
dec
jo
add
push
push
pop
pop
push
add
add
pushf
orl
test
xchg
adc
arpl
add
mov
xor
add
scas
scas
mov
lods
mov
add
stos
scas
mov
inc
mov
cli
mov
lods
rolb
add
cwtl
pushf
xchg
mov
xchg
xchg
fucom
xchg
add
fmul
add
hlt
loopne
test
xlat
dec
mov
add
adc
out
pop
dec
pop
pop
push
and
pop
sub
pop
sub
adc
jo
in
ljmp
stos
mov
shll
push
add
push
add
pop
or
pop
push
inc
add
imul
push
pop
and
and
pop
add
aaa
xor
add
sbb
icebp
add
jne
jo
jno
js
out
add
xor
adc
cmp
ds
and
add
sub
or
or
mov
repnz
icebp
hlt
jecxz
ljmp
icebp
cli
fcmovne
fdiv
ljmp
jo
sub
or
or
mov
dec
sbb
add
or
inc
add
pop
pop
or
or
je
or
add
sbb
adc
cmp
sbb
sub
cmp
xor
jle
arpl
add
sti
cld
icebp
call
add
cli
repz
mov
stc
addl
mov
mov
mov
add
cmp
xor
pop
adc
add
sbb
or
add
xchg
and
xor
cmc
faddl
leave
enter
rcl
adc
fcmovb
jo
jns
jbe
jp
fs
add
insl
jg
push
jle
add
add
pushf
mov
mov
test
inc
add
dec
push
pop
invlpg
and
pop
sbb
add
aaa
jae
xor
add
add
or
adc
add
pop
add
and
or
add
out
sub
sbb
pop
sbb
xor
push
push
pop
adc
and
out
rcr
add
into
fxch
fucomip
stc
fiadds
aad
ffreep
fdiv
add
rol
xchg
jmp
leave
iret
add
add
int
into
rcrb
rcl
rol
fadd
add
add
pop
pusha
bound
jle
jns
pop
outsb
insl
jge
add
mov
add
test
add
movsl
mov
stos
add
call
aam
lret
xlat
add
fcoms
fiadds
leave
add
add
dec
inc
inc
pop
dec
add
insl
inc
inc
inc
push
push
add
pop
sbb
pop
add
jg
pop
dec
addr16
jae
and
sub
add
jl
add
add
add
cwtl
add
add
mov
fisttpl
ret
rolb
orl
add
add
add
mov
xchg
test
stos
mov
mov
lcall
stos
scas
movsl
test
mov
mov
mov
lret
mov
add
cmp
and
and
add
mov
xchg
mov
sahf
add
add
out
add
add
push
or
adcb
adc
sbb
bound
pusha
push
and
fs
popa
jno
cmp
imul
cmp
jb
js
jl
dec
pop
adc
or
add
mov
fmuls
mov
xchg
lea
add
pop
pop
roll
add
inc
inc
addl
outsl
gs
gs
add
bound
arpl
ja
dec
inc
jl
jae
add
inc
pop
push
dec
push
jne
push
push
dec
dec
add
bound
pop
inc
add
popa
push
inc
inc
pop
add
dec
addr16
push
pop
adc
sbb
aaa
rcll
lods
cmpsb
add
mov
aam
pop
jnp
jb
ja
jge
cmp
outsl
jb
add
push
jns
push
dec
pop
or
push
rorl
jg
jno
js
jb
and
add
xchg
pushf
sahf
add
movsl
mov
mov
xchg
add
mov
mov
cwtl
mov
add
movsl
cltd
test
xchg
xchg
xchg
add
xchg
xchg
addb
add
push
sbb
or
sub
add
das
add
and
aas
and
aaa
and
bndstx
and
and
cmp
and
xor
adc
push
sysret
rcrb
movsl
mov
mov
idiv
mov
add
mov
mov
lods
mov
rcl
add
mov
xchg
xchg
xchg
lahf
sbbl
loope
loope
in
add
mov
scas
mov
jle
add
jle
imul
jb
imul
aaa
jnp
jno
jne
cmp
jb
js
jl
imul
inc
pop
add
add
adc
sbb
add
dec
dec
pop
push
sbb
adc
pop
inc
push
sub
add
and
sub
or
add
sub
xor
sub
add
xor
ss
jl
xor
sbb
add
bound
push
adc
adc
or
sbb
or
or
pop
add
adc
add
loope
jmp
add
in
stos
movsl
loop
testb
std
mov
nop
xchg
out
add
loop
out
icebp
int
add
fmulp
add
mov
xlat
lret
add
xlat
rcr
in
filds
fmul
rcl
fwait
mov
mov
out
add
cmpsb
cmpsb
stos
mov
repnz
aam
stos
lods
mov
add
mull
xchg
lcall
mov
xchg
xchg
lea
cltd
nop
xchg
aad
push
jp
add
fs
add
popa
jge
cmp
add
outsb
jp
push
addr16
pop
pop
dec
inc
add
jae
dec
push
inc
inc
add
inc
adc
add
push
push
push
adc
add
pop
cmp
pusha
jae
addb
std
jmp
shrb
add
scas
mov
add
inc
bound
jl
jb
insb
add
imul
jo
insl
aas
sbb
jnp
add
sbb
xchg
rolb
lret
push
inc
push
push
push
add
jae
inc
push
push
pop
add
mov
add
lock
add
sbb
sbb
add
bound
gs
add
unpcklps
add
add
push
push
adc
adc
add
add
pop
push
dec
insb
jl
add
outsl
bound
jo
add
jb
add
push
add
js
jl
outsl
jno
add
cwtl
stos
add
insb
bound
jnp
dec
ja
pop
push
jae
pop
inc
jnp
push
inc
pop
inc
add
push
pusha
or
add
jmp
repnz
test
inc
add
pop
inc
inc
and
and
dec
add
push
dec
push
inc
push
inc
or
pop
add
insl
pop
pop
pop
inc
dec
loopne
mov
add
add
xlat
int3
fcmovbe
leave
xchg
out
lret
rcl
add
mov
fildl
add
int3
add
sahf
xchg
mov
add
stos
stos
mov
and
addb
outsl
imul
subb
pusha
fs
neg
nop
icebp
aam
rcr
add
rcl
cltd
loopne
adc
xchg
mov
and
addb
xchg
test
into
into
addb
jns
ja
pusha
jl
outsb
add
add
and
daa
xor
daa
sub
and
sub
add
fstp
fxch
into
xchg
add
fcmovbe
fcmovu
adc
lods
rcr
add
das
sub
sbb
sbb
push
add
pop
add
add
dec
adc
inc
or
and
rcll
xchg
add
mov
xchg
xchg
test
mov
lret
int
hlt
stc
add
mov
mov
inc
mov
in
sbb
add
jo
jp
jl
jnp
cmp
fs
and
jnp
es
add
push
pop
and
adc
loope
push
jne
jbe
arpl
push
jno
add
jb
jle
daa
popa
add
jae
and
inc
popa
insl
jg
add
popa
add
add
hlt
add
repz
scas
mov
in
add
push
or
or
add
int
into
movsl
add
and
das
pop
add
mov
int
add
mul
cmc
jecxz
mov
add
sbb
in
cld
scas
in
jecxz
div
mov
lahf
enter
jmp
add
rol
rorl
out
or
ss
and
mov
sub
addb
pop
inc
rorl
xor
insl
push
xor
insb
cmp
add
arpl
add
int
add
inc
push
inc
add
xor
add
add
push
add
add
popf
mov
mov
clc
loop
mov
out
mov
lock
pause
add
adc
add
add
jmp
add
pop
pop
add
mov
subb
in
or
push
dec
push
ds
pop
jl
jg
adc
xor
xchg
ret
add
fmul
add
xchg
mov
addb
popa
pop
inc
add
add
loop
hlt
cmc
sti
mov
mov
add
clc
clc
out
scas
test
cmc
lock
add
lods
pushf
xchg
add
sahf
sahf
sbb
mov
add
push
dec
dec
dec
dec
add
inc
inc
push
pop
inc
add
dec
inc
pop
pop
add
push
push
dec
inc
dec
push
add
push
ja
xor
cmp
ja
add
and
arpl
imul
mov
add
scas
lods
lods
stos
stos
test
movsl
movsb
mov
add
mov
mov
lea
xchg
addl
pushf
fwait
lcall
fstp
add
fcmovu
fcom
rolb
lret
lret
lret
xchg
push
add
xchg
rolb
and
rcl
scas
clts
add
add
add
mov
mov
mov
and
push
jno
ret
popa
add
mov
pushf
add
add
mov
cwtl
adc
faddl
fst
add
cmpsb
add
adc
fwait
xor
lods
mov
mov
mov
popf
add
mov
mov
test
add
adc
adcb
mov
add
add
add
add
nop
push
andb
add
jb
fdivs
add
add
popa
add
add
add
test
stos
rolb
mov
mov
lea
add
add
and
test
fwait
mov
adc
add
mov
popf
xchg
add
lods
popf
mov
xchg
mov
mov
add
mov
mov
add
xchg
add
mov
jecxz
adc
mov
push
stos
xorl
mov
and
mov
orl
xchg
adc
pop
fdecstp
out
xor
and
sub
add
int3
add
dec
mov
mov
lods
stos
add
mov
sub
scas
mov
add
mov
lods
cmpsl
stos
lods
adc
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
test
movsb
jo
mov
mov
mov
add
or
add
add
mov
add
mov
stos
lods
mov
pop
cmpsl
stos
scas
xor
adc
add
mov
adc
add
xchg
ret
add
rolb
add
orl
cmp
add
orl
mov
add
mov
lahf
inc
ret
xchg
and
pushf
pusha
add
test
daa
addb
lea
xor
shlb
stc
add
add
xor
xor
xor
xor
xor
xchg
mov
add
add
or
add
rol
add
jno
loop
in
add
add
push
add
addb
and
popa
push
scas
mov
mov
mov
roll
or
add
out
in
jmp
xor
cmpsb
jo
mov
rcll
addl
add
xor
add
xchg
jo
shlb
fiadds
cltd
add
popf
xor
xor
lea
add
add
xchg
inc
add
add
in
iret
xor
inc
and
pushf
mov
adcl
push
pop
lods
mov
sbb
lods
add
mov
insl
add
test
add
sub
xchg
cwtl
addl
das
lods
xchg
add
cmpsb
mov
mov
stos
xchg
orb
inc
sub
add
stos
popa
sbb
xchg
movswl
mov
inc
adc
push
mov
inc
add
mov
or
add
mov
mov
mov
mov
mov
adc
sbb
mov
fs
xor
mov
addb
jo
mov
add
mov
mov
lcall
cwtl
push
inc
jno
xchg
and
add
add
jmp
fdivrp
aas
incb
outsb
push
add
mov
outsb
mov
add
add
inc
xor
in
roll
push
imul
insb
mov
stc
add
cld
add
inc
jge
or
movsb
incb
mov
aad
and
nop
pop
popf
lock
or
add
orb
int
lret
sub
mov
iret
xor
add
bound
cltd
jb
xor
stos
addb
adcb
adc
add
adc
mov
aad
loop
mov
mov
int
add
xchg
pushf
add
sbbb
adc
pop
scas
mov
mov
pop
arpl
shrb
xor
iret
aad
or
xor
cs
jo
shrl
sbb
jge
repnz
mov
add
pop
xchg
mov
pop
push
lcall
inc
mov
add
test
adc
cli
pop
std
scas
add
pusha
add
push
add
cld
add
mov
inc
lods
add
cmp
pusha
cmp
loope
outsb
mov
sub
mov
pop
loop
add
add
das
mov
jmp
add
inc
jmp
cmp
test
cmp
pop
push
add
push
adc
xlat
mov
test
bound
adc
adc
mov
adc
jb
movsb
out
add
mov
adc
adc
xchg
insb
add
fists
add
adc
es
imul
add
pop
mov
sbb
add
scas
add
and
std
scas
add
adc
pop
xor
fwait
add
push
add
and
add
inc
leave
add
sbb
add
push
daa
add
mov
jmp
bound
fsubl
bound
stos
add
add
adc
add
test
add
bound
ret
in
add
push
xor
cmp
icebp
data16
add
es
mov
add
mov
add
sbb
sub
pop
add
mov
pcmpgtw
add
sbb
mov
add
lcall
fsubrl
sub
das
scas
sub
and
add
add
sbb
xorb
jl
ja
andl
out
add
xor
xor
add
outsl
add
adc
inc
ja
mov
subb
lcall
cli
loop
xorb
adc
popa
andb
adc
xchg
adc
cli
add
scas
or
add
incb
fisubs
subb
add
outsl
adc
popf
dec
add
pop
out
add
sbb
dec
mov
adc
mov
adc
add
stos
in
add
mov
mov
bound
daa
add
aaa
add
in
insb
and
insb
adc
fwait
add
mov
out
fwait
jmp
mov
push
lcall
call
bound
test
lcall
stos
lcall
mov
test
aaa
and
cltd
lds
pop
lret
outsb
pop
push
fwait
add
adc
cli
push
or
sbb
add
fs
sbb
adc
sub
inc
sub
push
add
pop
pop
cs
pop
negb
mov
push
cs
pop
hlt
add
adc
lcall
jmp
adc
test
sub
out
adc
cmp
cmpb
insb
or
adc
cmp
adc
adc
add
rclb
das
loopne
and
inc
add
mov
sub
fdivl
mov
in
mov
dec
push
inc
outsb
mov
orb
shlb
adc
mov
rolb
add
push
sbb
pop
out
addb
adc
sub
or
sub
add
insb
andb
fiaddl
add
inc
and
mov
inc
sbb
sub
adc
adcb
add
add
insb
add
jmp
sub
xlat
pop
insl
aam
add
sbb
add
inc
and
or
xorb
sbb
add
add
adc
adcb
stos
pop
add
or
das
mov
lret
testl
sbb
add
sub
les
insb
add
sub
inc
xor
sub
add
add
mov
out
xchg
scas
add
cli
add
mov
sbb
pusha
add
loopne
adc
sbb
sub
lret
arpl
andb
dec
pop
rorb
bound
lcall
inc
insb
mov
fwait
adc
sub
jecxz
cmp
jmp
data16
sbb
or
xchg
or
sub
in
add
movhps
xchg
aad
psrlw
in
pop
mov
mulb
sarb
incl
adc
repz
adc
xor
adcl
inc
add
inc
xadd
addl
add
pop
xchg
lcall
fwait
movl
pop
push
adc
or
add
sub
mov
add
pusha
je
mov
jmp
out
adc
pop
adc
mov
xchg
lret
jmp
fwait
std
xor
add
and
pusha
pop
fs
add
insb
paddsb
mov
fwait
std
cmpsl
fwait
out
insb
daa
adc
jne
and
das
add
roll
add
roll
outsl
addb
int3
add
add
adc
adc
rolb
and
pop
fwait
std
rolb
addb
in
add
lcall
test
add
test
in
mov
cli
rolb
ljmp
add
rolb
xor
sub
and
or
test
test
mov
cli
pop
loopne
fs
insb
adc
jecxz
roll
andb
sbb
dec
pusha
add
add
sbb
add
and
loopne
pop
clc
std
adc
add
adcb
test
sub
and
outsb
add
jecxz
adc
mov
test
push
pop
add
loopne
push
sub
imul
adc
mull
and
andl
add
outsb
sub
add
fs
out
add
stos
mov
or
pop
test
mov
insb
sub
in
mov
loopne
addl
test
sub
inc
push
add
mov
sarb
stos
adc
mov
add
bound
pusha
pop
mov
pop
test
sbb
ja
add
inc
mov
adc
es
or
add
ret
out
pop
adc
lret
insb
xchg
jecxz
fwait
cmpb
pusha
push
adc
jmp
cli
push
pusha
and
add
push
inc
add
loope
mov
adc
fldenv
cmpsb
fstpl
test
loope
in
pusha
cs
adc
loope
and
cltd
rorb
or
test
inc
sub
fs
lret
out
or
and
pop
adc
add
adc
inc
pop
andb
pop
jp
sbb
add
fs
lret
adc
rorb
inc
dec
cmpsl
lcall
loopne
scas
mov
add
mov
add
repz
add
pusha
add
sbbb
adc
pop
repnz
adc
adc
xor
add
fsubrl
adc
add
xchg
xor
mov
mov
cmp
push
test
and
flds
and
insb
das
adc
adc
adc
outsl
add
pop
inc
inc
cli
out
add
mov
add
fcompl
sub
test
mov
mov
sub
insb
add
inc
inc
pusha
pop
repz
imul
pusha
or
sub
mov
cs
bound
add
jae
ret
or
or
add
inc
sbb
add
lock
add
insb
bswap
mov
out
outsl
push
fistl
add
xor
add
adc
and
idivl
insb
sub
jecxz
inc
add
sub
fcoml
inc
shlb
add
push
shlb
xchg
jecxz
adc
cli
inc
lock
sub
push
add
sub
imul
jo
adc
add
adc
xchg
xchg
popa
add
adc
dec
push
pusha
add
add
pop
add
add
adc
dec
das
pusha
add
adc
add
roll
fwait
cmc
push
xchg
stc
mov
out
loopne
push
add
jno
mov
xchg
call
addb
cli
aas
inc
add
lock
ljmp
sub
loop
add
jno
add
das
adc
add
or
loopne
or
jno
xchg
push
call
inc
inc
push
rolb
bound
imul
push
xor
daa
loopne
dec
push
add
xchg
xor
cmp
add
mov
push
add
sti
bound
fsubl
scas
test
mov
mov
and
mov
pop
in
xchg
inc
and
mov
and
mov
mov
inc
add
nop
add
lods
inc
add
lea
add
fiadds
bound
or
add
pop
xor
sub
data16
add
in
movsb
pop
jmp
add
mov
test
divl
push
scas
mov
inc
adc
push
adc
or
jnp
sbb
add
adc
data16
les
rcl
or
add
and
pop
bound
sub
xchg
pop
hlt
das
scas
addr16
insb
inc
and
fs
pop
test
add
xchg
in
xchg
pop
add
sub
pusha
sub
rolb
mov
bound
pop
mov
out
xchg
inc
or
test
mov
fcoml
and
loope
insb
sub
rcll
add
push
adc
fwait
jmp
clc
add
roll
test
pop
fs
xor
bound
push
inc
mov
push
mov
xor
fs
insb
imul
lock
or
rclb
jmp
pop
out
jo
jb
and
adc
xor
data16
pop
aam
fwait
cltd
mov
adc
push
rcll
add
cltd
jecxz
insb
xchg
test
adc
adc
add
pop
mov
loopne
ljmp
jnp
inc
lcall
pop
mov
adc
arpl
push
cs
sub
icebp
sbb
add
fbld
cli
inc
xor
stc
jo
shl
pop
add
push
sbbb
test
fs
ds
fiaddl
iret
insb
push
add
lcall
add
scas
outsb
push
add
add
sub
roll
lcall
pop
mov
scas
sbb
test
into
jmp
add
outsb
cmpsl
cmpsl
fwait
out
leave
add
insb
mov
add
insb
and
adc
iret
inc
das
add
mov
add
imul
adc
clc
pop
xchg
xorb
loope
fs
add
ljmp
pusha
add
rcrb
inc
push
pusha
add
jmp
or
jo
fs
arpl
bound
fneni(8087
add
inc
roll
mov
mov
add
bound
lock
fwait
jecxz
lcall
nop
dec
add
addb
addb
mov
mov
jns
mov
lock
loopne
xor
scas
pusha
add
add
add
xor
es
mov
jecxz
lock
sbb
pop
sti
adc
aas
outsb
or
out
fsubr
jp
adc
mov
jmpw
push
test
add
cmpsb
mov
add
jb
push
sti
adc
jb
incl
sbb
nop
push
ret
mov
and
ret
rolb
pop
out
roll
faddl
out
add
aas
callw
out
mov
mov
shlb
mov
add
dec
shlb
fs
xor
or
sub
inc
sarb
ret
push
jmp
out
adc
xor
add
mov
out
and
jno
fs
pusha
sbb
das
subb
std
fs
out
add
fstpl
adc
cs
sbb
sub
mov
jecxz
add
xor
andb
loopne
imul
je
mov
addb
sbb
in
insb
sub
fs
test
in
add
scas
test
inc
push
roll
scas
and
shlb
adc
push
add
addl
pusha
lods
mov
mov
imul
es
data16
jmp
sti
data16
data16
sub
sub
push
popa
loop
mov
sub
mov
jmp
sti
pop
icebp
fildl
loopne
testl
lret
rorb
test
pop
repnz
cld
dec
xor
pop
add
adc
loopne
bound
add
insb
push
mov
pop
fwait
enter
loope
mov
add
rolb
out
lods
add
and
test
push
add
pushf
std
and
add
jecxz
pop
mov
add
add
cmpsl
dec
lods
add
aas
data16
add
pop
xor
out
add
out
das
loopne
push
fs
ljmp
fwait
add
insb
pop
test
add
sbbl
add
out
bound
stos
adc
pop
add
add
push
lcall
add
add
add
add
std
scas
add
fildl
adc
adc
xor
pop
adc
fwait
hlt
fs
mov
out
fwait
jecxz
fwait
and
out
cli
jnp
and
sub
add
imul
sub
xchg
decl
and
lcall
mov
mov
sub
mov
add
add
lcall
pusha
add
xchg
adc
sub
ret
or
lcall
jmp
add
cli
push
subb
orl
imul
loop
adcb
fsubrl
aam
cltd
sti
fs
add
addb
add
or
add
jmp
push
push
add
add
orl
orl
sub
rep
adc
orl
xorl
inc
aam
fwait
mov
in
or
and
sbb
adcb
aam
test
mov
data16
xchg
test
scas
add
test
mov
fwait
loope
andb
add
add
add
icebp
mov
cmp
add
mov
aas
orl
mov
inc
ja
add
mov
stos
cli
scas
add
aaa
mov
push
stos
add
mov
xchg
adc
adc
push
fwait
jmp
sbb
fwait
out
inc
shlb
das
fwait
lock
or
mov
or
insb
xchg
pop
add
pop
add
add
mov
add
bound
push
fwait
add
sbb
xor
xchg
jge
aaa
data16
cmp
xorb
stc
scas
add
mov
shlb
or
imul
add
fiadds
mov
out
add
test
bound
les
add
sbb
stos
add
mov
add
mov
adc
test
bound
ljmp
and
rorb
bound
lcall
bound
xchg
stos
add
stos
fwait
in
add
jo
icebp
mov
add
push
outsl
sub
adc
add
adc
lahf
add
test
bound
or
or
test
adc
mov
lods
bound
jne
pop
lods
bound
pusha
ret
adcb
rorb
mov
mov
scas
add
loop
sub
bound
adc
adc
cld
bound
cmp
sbb
test
data16
pop
sbb
push
pusha
test
aas
sbbl
xlat
mov
iret
addl
mov
pop
cli
addb
and
inc
cmpsl
inc
mov
sub
adc
lcall
mov
jmp
adc
pop
add
mov
das
add
xchg
stos
mov
fs
mov
pop
in
ret
adc
insb
mov
bound
and
addl
mov
fwait
and
mov
aas
insb
sub
xchg
loopne
add
out
add
mov
lcall
mov
pop
scas
pop
inc
and
orb
xor
inc
fs
pop
pop
xchg
ljmp
or
pop
pop
xor
adc
imul
add
mov
sub
cmp
sbb
test
pop
push
mov
bound
add
fdivrl
sbb
add
aaa
inc
add
mov
sbb
lcallw
loopne
push
pusha
add
add
loopne
inc
addl
test
punpckhdq
or
loope
shl
add
addr16
xor
jl
outsl
aam
add
add
cmpb
out
outsl
inc
fiadds
mov
sbb
pop
dec
sbb
add
xchg
add
mov
in
out
loopne
fwait
mov
fs
mov
sub
push
and
loopne
inc
push
les
mov
rep
stos
out
add
stos
pop
loopne
insl
flds
add
adc
loop
shrb
fs
sbb
mov
add
pusha
insl
sub
outsb
add
out
push
mov
add
adc
adc
popf
pop
subl
call
and
add
data16
add
pusha
pop
fnstcw
add
fs
bound
pop
test
ret
inc
fs
pusha
aaa
mov
or
add
add
mov
out
mov
add
lds
and
add
add
and
insb
or
outsb
add
fildl
movsb
bound
pop
push
cmpb
xor
lret
jmp
rolb
faddl
adc
lret
xlat
mov
into
mov
pusha
add
fists
cli
and
test
rolb
mov
mov
mov
mov
scas
add
mov
mov
inc
or
add
or
lret
fcom
pop
outsl
mov
test
out
add
add
fwait
add
fs
lret
mull
add
out
add
repz
xchg
or
insb
and
mov
pop
add
xorb
xor
mov
test
cmpsb
loopne
mov
bound
pop
loopne
dec
movsl
bound
pushf
inc
add
xchg
or
fs
ja
mov
add
pop
and
out
sbbb
sbb
mov
add
orb
jmp
loopne
pop
add
enter
mov
add
adc
and
shlb
mov
push
mov
add
lcall
or
and
stos
adc
adc
shll
dec
data16
push
add
or
sti
add
mov
shlb
pop
add
xorb
and
lcallw
andl
jns
adc
lgdtl
add
lcall
pop
scas
sahf
out
inc
add
fs
and
push
or
mov
jnp
jo
loopne
add
pop
push
in
add
adc
lcall
loop
lock
adc
push
add
sub
inc
and
insb
mov
mov
mov
pop
adc
fadds
lods
sbb
adc
loopne
loopne
add
fsubl
mov
push
jo
insb
xchg
sti
out
add
cmpsl
jmp
fwait
in
test
push
jo,pt
and
aam
fwait
in
data16
insb
xchg
repz
push
add
add
out
push
vpcmpgtw
cli
icebp
outsb
push
invd
stos
lret
cmpb
pusha
and
shrb
and
xchg
or
push
adc
fs
ret
nop
add
sub
jle
add
rorl
add
xlat
xchg
out
add
daa
ret
mov
fs
rcrb
xchg
out
add
add
nop
or
inc
xlat
fs
add
adc
lret
iret
loopne
dec
and
add
mov
xor
adc
test
mov
mov
add
addb
lock
or
and
add
add
mov
add
sub
mov
loopne
subb
sub
mov
and
repz
in
xor
and
mov
call
adc
mov
push
fwait
cmc
fs
out
add
mov
divl
push
mov
push
sbb
xor
testl
iret
pop
or
xor
add
mull
sbb
test
and
mov
pop
fwait
xlat
subb
lcall
add
add
pop
testb
xchg
jecxz
lods
add
jecxz
add
nop
in
test
pop
sub
add
lock
clc
sub
cltd
popa
sbb
sbb
and
cmp
add
lock
pop
mov
fwait
loop
dec
repnz
jmp
mov
sti
add
adc
addr16
add
mov
add
mov
aaa
test
loop
adc
sbb
add
jmp
adc
out
lcall
cmc
outsb
rolb
cmpb
mov
add
push
jecxz
aas
adc
add
pop
rclb
rolb
in
bound
rcrb
xor
cmp
adc
bound
fs
adc
xchg
inc
add
loope
pop
cwtl
out
add
inc
pop
mov
sub
add
cli
xchg
and
insb
add
out
lcall
loopne
xchg
pop
mov
xchg
adc
lcall
test
or
add
dec
jo
and
stos
jmp
adc
outsb
push
adc
loopne
cwtl
loop
inc
dec
push
fwait
jmp
test
repz
mulb
adc
aaa
mov
mov
add
push
add
fwait
rorl
fldenv
ret
and
filds
add
ljmp
test
popa
add
test
push
lock
inc
or
cwtl
loopne
int3
nop
add
add
lock
cmp
add
pop
repz
add
push
add
pop
insb
add
loopne
adc
and
out
nop
and
fs
loopne
mov
pop
xorb
ds
out
pop
insl
shlb
mov
shl
adc
xchg
xor
inc
in
loopne
imul
push
push
incl
fcoml
test
sub
xchg
lret
add
lret
xchg
insb
mov
scas
jo
scas
shll
pop
add
bound
add
fistpll
out
shll
pop
sti
arpl
or
and
cli
dec
add
lock
inc
adc
xor
add
and
loopne
lcall
mov
lret
mov
pop
jno
jle
fidivrl
nop
push
dec
mov
shrb
mov
xchg
lock
push
outsl
mov
int
add
add
adc
into
lock
loope
inc
outsb
add
add
aam
push
adc
aam
sub
in
pop
mov
test
adc
stos
pop
lret
leave
add
add
adc
ret
sbbb
jae
nop
add
iret
xchg
add
jmp
adc
mov
xchg
rolb
inc
lds
inc
add
add
jo
xchg
adc
outsl
mov
pop
das
lret
xchg
pusha
add
pop
cmpsb
sub
ljmp
jmp
mov
jae
add
data16
or
shrb
fwait
into
jmp
pop
push
rcll
add
fisubs
loope
sarb
pop
ss
mov
and
push
js
mov
rclb
lcall
jecxz
cmc
bound
sbb
sub
mov
data16
mull
sti
adc
shlb
rclb
push
mov
lret
add
jecxz
add
outsl
add
push
adc
adc
mov
and
mov
or
mov
jecxz
lcall
jnp
dec
out
mov
add
loopne
mov
inc
fwait
lret
sti
fwait
lret
push
add
inc
fwait
icebp
jecxz
fwait
lret
divl
push
fwait
lret
jmp
add
add
add
inc
push
test
or
push
repz
add
fs
nop
cmp
add
mov
cli
outsl
cli
add
mov
sti
add
mov
pop
insb
add
ret
mov
add
imul
lcall
stos
lret
jecxz
lcall
adc
out
scas
add
insb
sub
sub
add
add
adc
ljmp
lret
sti
fwait
lret
add
lcall
xor
adc
push
add
mov
lret
jmp
mov
mov
es
sub
adc
adc
add
add
adc
sti
adc
pop
movsb
mov
lret
jecxz
adc
andb
mov
add
pop
adc
cli
imul
add
adc
add
push
fwait
ljmp
add
mov
sub
mov
jmp
out
movl
das
stos
jecxz
int
add
stos
sti
fwait
test
mov
stos
out
cmp
movsl
sbb
dec
call
xchg
sbbl
out
add
add
xchg
push
fwait
lret
add
push
fwait
icebp
bound
push
fwait
cli
sbbb
out
mov
pop
jmp
add
jp
cli
addl
mov
test
pop
jne
andb
adc
sbb
add
sbb
pop
test
mov
lcall
icebp
test
in
ljmp
xchg
sti
out
lcall
xchg
jmp
add
data16
out
xchg
push
pop
testl
lret
out
cmp
dec
adc
roll
add
orl
sti
jmp
incb
lds
mov
or
or
stos
lret
jmp
add
mov
pop
mov
sub
bound
add
fs
push
cmp
push
out
jmp
and
jmp
mov
push
lcall
inc
or
leave
add
cs
push
sbbb
incl
and
add
mov
add
or
sub
sub
out
sub
das
jmp
pop
add
lret
jmp
lcall
andb
adc
es
int3
push
daa
rclb
pop
push
fwait
clc
add
fistpl
aas
add
adc
push
lcall
add
inc
andb
inc
push
testl
mov
jecxz
add
lods
out
jmp
les
sbb
jmp
sbb
jecxz
xchg
jo
jecxz
add
mov
orl
push
in
inc
and
or
adc
orl
out
lock
add
fsubrl
adcb
xchg
lret
jecxz
cli
add
les
gs
incl
test
aam
add
das
shlb
cmp
sub
or
and
inc
imul
out
add
loopne
pushf
hlt
aam
cwtl
cmp
inc
cs
adc
in
pop
out
add
fldl
das
andb
inc
outsb
add
jmp
mov
adc
mov
add
or
and
fdivl
adc
sbb
loopne
sbb
data16
pop
push
fwait
mov
add
lahf
and
mov
add
add
insb
xchg
jecxz
add
pop
pop
imul
bound
inc
push
adc
scas
bound
or
sub
xchg
cld
scas
add
test
bound
add
out
add
stos
in
sub
stos
adc
add
cmc
fnsave
mov
rolb
mov
and
fs
mov
bound
sti
mov
xchg
push
pop
in
adc
add
cltd
loopne
loopne
jae
pop
and
inc
rclb
orl
add
loopne
outsl
pusha
add
fdivl
xchg
add
popa
fwait
das
test
inc
add
adc
lcall
add
lcall
xchg
adc
mov
add
fs
jecxz
add
adc
sub
add
and
rclb
adcb
in
add
xchg
add
add
add
mov
test
data16
inc
sub
pop
pop
mov
sub
in
cmpsb
repnz
sub
ja,pn
and
cmp
cs
mov
sub
es
or
and
test
add
bound
out
adc
add
loope
mov
and
sbb
add
mov
mov
and
and
pop
stos
dec
and
cmpsl
bound
fwait
xchg
add
cli
fwait
loopne
inc
mov
add
add
pop
in
out
bound
inc
add
mov
or
in
and
inc
outsl
test
pop
mov
add
pop
xchg
add
fs
in
addr16
add
test
add
cwtl
bound
fwait
mov
hlt
rolb
aaa
push
fwait
mov
stos
pop
mov
adc
push
shrb
das
loopne
arpl
loope
es
lcall
add
and
and
mov
dec
and
pop
jmp
dec
stos
out
data16
sub
lcall
adc
fwait
and
xor
and
sbb
add
and
lcall
push
push
orb
add
popl
add
xorl
mov
or
add
mov
sub
add
xorl
mov
pusha
cwtl
lahf
sub
mov
ljmp
sbb
push
test
pusha
test
mov
or
mov
outsb
test
out
mov
mov
inc
or
mov
add
aam
fwait
nop
mov
mov
iret
filds
push
mov
test
mov
data16
into
mov
iret
mov
push
out
in
and
test
test
fistpl
push
test
push
add
push
add
push
add
insb
add
lret
bound
test
mov
mov
dec
or
mov
push
xor
mov
out
fdivrl
out
data16
add
add
lcall
mov
adc
inc
sarb
loopne
pop
jmp
or
xor
add
inc
and
add
repz
xchg
test
adc
fcoml
aam
fwait
or
pop
sbb
adc
xchg
lahf
sub
jmp
stos
xor
mov
pop
mov
fwait
mov
add
repnz
cld
add
sub
add
jmp
add
add
cwtl
lahf
mov
pop
clc
nop
pop
sti
pusha
xor
push
jecxz
sbb
fs
adc
je
repz
repz
lcall
add
bound
push
loopne
add
mov
sub
in
fs
add
ss
sub
out
pop
add
mov
add
iret
loopne
pop
stos
iret
mov
stos
xrelease
data16
addb
mov
data16
push
inc
sub
mov
fisubl
push
fwait
loope
test
and
test
mov
sub
repnz
loope
repz
adc
mov
test
adc
lock
add
mov
adc
mov
popa
pop
in
mov
insb
sub
add
mov
add
rcrb
sub
loopne
jo
ret
pop
loopne
mov
add
sub
push
hlt
rolb
das
sub
sbb
mov
jecxz
xchg
xor
add
jecxz
sub
fwait
loop
pop
dec
mov
xor
bound
xchg
adc
add
mov
mov
bound
sbb
inc
sbb
cmp
push
add
mov
add
mov
add
popa
xor
ret
pop
add
add
or
imul
adc
xchg
ret
into
mov
mov
cs
fs
lret
repz
add
lret
stos
lret
notl
aam
xchg
mov
ret
cmp
cmp
call
sub
sti
fs
adc
adc
ljmp
ret
add
mov
adc
icebp
push
pop
inc
lock
subb
stos
loopne
das
add
ret
sbb
jle
add
nop
mov
adc
or
rclb
fdivl
mov
and
inc
inc
data16
das
data16
data16
mov
popa
jp
or
cs
stc
pusha
insb
pop
in
loopne
add
pop
pop
cld
add
cmpsb
jmp
popw
xchg
gs
add
stos
pop
bound
mov
add
mov
pop
add
add
bound
iret
nop
cs
in
out
add
push
dec
and
stos
pop
sti
lock
xor
pop
movsb
out
add
test
sub
pop
or
imul
and
adc
xchg
jo
bound
add
add
bound
out
fs
pop
das
or
add
fcompl
lcall
adc
push
pusha
dec
pop
sbb
mov
add
das
push
and
add
add
xor
add
pop
insl
xlat
out
mov
push
insb
xchg
add
out
sub
add
add
test
mov
data16
daa
lcallw
add
xlat
loopne
fs
test
sti
data16
lcallw
daa
loopne
int3
inc
add
pop
scas
push
jmp
push
repz
add
pop
lcallw
and
lcall
xor
rol
jecxz
nop
mov
pop
add
aam
add
popf
xor
sbb
and
rolb
adc
loopne
mov
inc
bound
inc
xchg
icebp
arpl
in
sub
dec
je
adc
or
out
inc
test
mov
pop
lahf
shlb
shrb
inc
lock
add
loopne
push
xor
sub
adc
fldl
add
push
adc
loopne
fstl
sub
pop
xor
push
data16
push
rolb
addr16
enter
adc
xchg
enter
loopne
stos
addr16
pop
xchg
pop
add
out
push
js
jae
pop
add
stos
addr16
sub
fidivl
dec
xor
imul
adc
sbb
or
out
xchg
inc
jecxz
sbb
and
mov
add
movsb
lahf
fs
add
add
bound
mov
sarb
and
and
push
lcall
mov
daa
pushf
enter
xchg
push
and
mov
andl
and
mov
out
add
push
fs
and
mov
faddl
out
xchg
mov
or
cmpsl
jmp
setbe
add
jo
push
fs
and
add
mov
lock
bound
nop
add
pusha
and
nop
or
and
dec
pop
divb
add
adc
pop
add
jp
push
mov
add
stos
add
fs
fcompl
adc
pop
insb
stos
aas
xlat
rcl
sbb
arpl
jo
mov
add
stos
sub
das
mov
mov
test
xlat
add
stos
sbb
add
lcallw
out
adc
pop
loope
jo
sti
outsl
xchg
and
out
loopne
mov
add
pop
xlat
and
pop
fstl
add
sysret
int
add
lcall
push
mov
mov
adc
mov
scas
add
stos
jmp
imul
jb
adc
jae
add
lcallw
fsubrl
pop
sbb
cmp
das
lcall
xchg
pop
pop
roll
testb
mov
add
sbb
add
mov
pop
mov
pop
and
sbb
imul
jb
subb
xchg
lret
sti
xchg
jmp
popa
push
pop
lock
rolb
and
and
dec
xor
fs
in
mov
xor
lods
out
pop
xlat
lock
stos
lret
std
outsl
xchg
nop
lret
std
add
nop
push
aam
cli
add
fsts
and
or
in
lock
mov
stos
jb
add
das
fwait
cmc
adc
xchg
lret
std
ljmp
sbb
add
data16
jmp
sub
push
lcall
and
pop
add
out
add
mov
or
xlat
add
xor
push
add
stos
add
aam
jmp
arpl
mov
mov
test
lar
xor
mov
cld
fwait
in
adc
fs
add
add
pop
insb
pop
fstl
notb
add
scas
add
stos
lret
repz
outsl
and
add
test
mov
jg
adc
add
lcall
pop
insb
add
pop
mov
lcall
xor
lods
sbb
add
add
imul
add
mov
push
add
or
add
xchg
adc
add
das
loopne
cli
and
adc
add
add
in
sub
add
mov
mov
or
adc
sbbb
adc
fsubrl
dec
addl
add
add
add
data16
out
mov
jecxz
mov
data16
bound
stos
xor
lds
add
pop
inc
pop
add
es
sbb
insb
mov
add
insb
xchg
jecxz
mov
out
stos
adc
lcall
mov
add
add
fs
fwait
out
stos
add
stos
pop
popf
out
fs
adc
out
add
fs
add
stos
sbb
add
add
push
nop
jecxz
imul
sbb
add
adc
loopne
sub
add
adc
add
loopne
pop
and
or
add
stos
pop
fs
jecxz
fwait
adc
add
insb
pop
add
fwait
lret
insb
pop
out
clc
inc
insb
pop
jmp
push
inc
or
jg
cmp
test
add
jmp
sti
add
fs
mov
lods
lret
movsb
add
add
lods
jmp
sti
add
lods
testl
lcall
rolb
add
fwait
rolb
lods
out
movsb
jecxz
stc
add
xor
cltd
ret
sub
lcall
mov
jecxz
fcoml
pop
and
out
das
xchg
loop
test
les
movb
sbb
pop
insb
xchg
sbb
sbb
insb
adc
insb
shll
stos
pop
lcall
mov
pop
add
push
add
add
push
mov
test
push
lcall
in
add
xchg
fcompl
pop
pop
adcb
out
add
and
pop
add
insb
xchg
pop
out
stos
pop
mov
insl
flds
rolb
insb
push
out
insl
leave
rolb
aam
pop
loopne
repnz
insb
add
out
fs
insb
add
add
cmp
lcallw
pop
int
andb
pop
jne
add
adc
lcall
add
inc
add
inc
add
mov
imul
sbb
inc
add
addl
test
pop
adc
adc
out
push
addl
adc
insb
adc
mov
andl
roll
rcrb
add
loopne
int
add
or
testb
sbb
out
loopne
decl
add
gs
push
shr
loopne
push
dec
xorl
xchg
adcb
imul
mov
bound
push
xchg
adc
adc
xorb
pop
mov
add
adc
and
jecxz
bound
xorb
sbb
orb
sbb
dec
add
mov
insb
cs
insb
adc
popf
add
xor
test
mov
das
mov
mov
orl
mov
add
or
cli
add
scas
add
stos
cmp
mov
rorl
adc
lcall
fs
adc
add
inc
add
xchg
xor
lcall
imul
inc
sbb
lock
andb
add
mov
push
and
rclb
dec
aaa
ret
dec
inc
inc
mov
pop
scas
jmp
mov
mov
pop
adc
inc
rcrb
add
es
imul
mov
fsubrl
data16
insb
adc
aam
cwtl
cmc
sbb
scas
jmp
lcall
insb
adc
pushf
or
or
jmp
adc
fsubl
xlat
mov
data16
jo
mov
push
pop
adc
add
movsl
mov
mov
data16
push
lcallw
daa
mov
lcall
jmp
sub
lcall
loope
add
add
inc
add
scas
test
mull
xlat
dec
pop
cmp
shrl
add
test
imul
jmp
roll
mov
mov
out
sbb
pop
out
stos
and
pop
out
insb
stc
cmpb
cmpsl
add
cwtl
xlat
fs
pop
xor
loop
add
stos
pop
mov
pop
xchg
add
sub
ljmp
orl
mulb
add
and
les
dec
inc
add
xlat
pusha
push
and
lcall
das
add
test
hlt
das
sbb
mov
mov
es
enter
imul
add
push
shlb
add
aaa
pop
mov
inc
out
add
add
xchg
aaa
mov
daa
shll
jo
mov
insb
add
mov
sbb
outsl
xlat
add
xchg
out
add
push
outsb
push
popa
inc
xchg
ljmp
loopne
mov
adc
add
bound
loopne
and
mov
rclb
jecxz
fidivl
rolb
mov
xchg
pop
int3
add
cld
loope
sbb
and
aaa
push
lcall
test
test
bound
lret
fs
pop
or
cmp
stos
pop
adc
imul
add
bound
mov
add
add
out
addb
add
cmp
data16
add
pusha
pop
mov
adc
orb
pop
and
rorb
imul
pusha
xor
and
pop
gs
imul
dec
addb
adc
pusha
add
xlat
outsl
adc
rcrb
stos
or
cltd
mov
outsb
insb
inc
xlat
add
and
pop
fs
mov
rol
data16
inc
adc
cli
rcrl
mov
add
pop
xchg
push
sub
add
in
add
pop
sbbb
xor
aam
or
fwait
lock
sub
in
leave
bound
and
add
pop
mov
mov
in
aaa
data16
pop
xorb
add
aam
or
fildl
inc
aam
movl
add
xor
rolb
into
mov
add
data16
data16
mov
out
fs
or
aaa
pop
jnp
add
adc
add
daa
push
add
mov
add
stos
adc
out
pop
mov
das
xchg
outsb
add
ljmp
lock
stos
sbb
adc
imul
xchg
sarl
jge
push
adc
add
stos
pop
cwtl
fldl
sbb
fs
out
inc
adc
add
fcoml
mov
sub
inc
xchg
lea
pop
push
push
lcall
push
add
bound
xor
sub
add
jp
nop
inc
mov
or
mov
stos
aaa
add
xor
mov
loope
loop
add
sbb
sbb
icebp
push
adc
repnz
call
push
pop
inc
pop
adc
push
jecxz
das
jecxz
inc
jae
add
cmp
ret
or
mov
stos
fiaddl
add
test
jo
faddl
push
pop
into
sbbb
bound
push
loope
mov
mov
adc
pop
in
adc
movb
add
call
roll
ret
shrl
mov
jmp
xor
loopne
add
add
pop
in
add
pop
sub
in
pop
out
test
rcrb
rcrb
mov
and
or
loop
loopne
add
pop
add
imul
or
push
cmpsl
fwait
add
cmpsl
lcall
jo
out
outsl
adc
lcall
pusha
jecxz
daa
pop
push
adc
push
push
invd
pop
xchg
pop
xor
out
lcall
xchg
loopne
nop
jb
push
jno
jmp
add
insb
xchg
iret
into
popf
ret
test
andb
mov
out
inc
add
pushf
repz
sub
pop
adc
add
into
xor
aam
jmp
sub
add
adc
aam
loopne
imul
mov
out
imul
fbstp
add
add
hlt
bound
loopne
or
adc
pushf
ret
and
mov
jo
sub
push
jg
add
stos
jnp
popa
movsl
add
stc
scas
add
les
nop
sbb
stos
dec
jo
lock
adc
mov
sub
cli
sar
jo
or
nop
ja
add
insb
xchg
inc
add
loopne
add
pop
mov
xor
add
add
cmp
addb
lods
fcmovnbe
cs
mov
xlat
out
mov
push
rcrl
mov
movsl
jb
fneni(8087
and
stos
inc
or
inc
or
push
adc
dec
pop
bound
inc
cmp
add
mov
lcall
adc
add
out
adc
xor
adc
out
lcall
cwtl
loope
pop
and
fwait
jecxz
jmp
xchg
icebp
adc
sbb
adc
adc
add
jno
std
test
bound
push
test
add
mov
add
fwait
rcll
pushf
nop
lret
pop
clc
xor
push
xchg
add
fwait
lods
cltd
stos
pusha
inc
add
out
in
push
leave
add
add
outsl
add
les
scas
adc
popf
int3
mov
push
and
test
bound
xchg
xor
out
mov
sub
xor
push
add
and
insb
mov
add
adc
lods
add
incl
popf
scas
fs
mov
fsub
pop
das
mov
add
vaddps
add
add
cmp
insb
shll
inc
iret
mov
data16
cmpsl
aam
scas
lock
popf
or
add
inc
sub
sub
imul
loopne
mov
xor
pop
adc
loope
pop
pushf
jecxz
pop
mov
loopne
ss
nop
lcall
push
push
ja
stc
bound
mov
pop
fs
ljmp
push
shrb
pop
push
loopne
aas
shrb
ljmp
add
fwait
in
bound
pop
mov
bound
adc
mov
push
or
mov
loopne
das
mov
mov
mov
stos
in
pop
les
rolb
mov
pop
int3
jb
pop
pop
hlt
jo
nop
outsl
xchg
in
push
sbb
sbb
pop
out
add
add
pop
pop
sbb
adc
in
xor
incl
fwait
pusha
xchg
shr
lcall
xchg
jmp
lcall
es
adc
pop
mov
pop
add
pop
fs
imull
mov
fs
repz
bound
test
loopne
divl
gs
fnstsw
insl
jecxz
add
outsl
adc
xor
mull
xor
test
outsl
xlat
lret
lods
andb
sub
xor
add
adc
bound
addr16
adc
pop
addr16
loopne
adc
aam
incl
insb
repnz
mov
add
mov
les
in
andb
or
sbb
push
insl
popa
sub
aas
mov
xchg
popa
popa
pop
repz
fs
aaa
repnz
notl
and
add
fs
les
bound
pop
data16
pop
fs
or
adc
add
lcall
add
insl
bound
fmull
mov
add
cltd
loopne
mov
xor
sti
faddl
pop
and
mov
pop
cmp
jl
jo
rolb
data16
xchg
push
bound
xchg
xlat
adc
insl
cmp
pop
out
loop
imull
add
mov
add
add
and
fs
fs
aam
popf
lock
testb
lcall
add
mov
jmp
inc
add
mov
pusha
rolb
jmp
adc
mov
pop
xchg
sbb
das
jmp
or
adc
pop
add
add
add
fiadds
insb
xchg
pop
add
imul
add
add
bound
stos
pop
mov
adc
pop
pop
add
adc
adc
loopne
inc
call
add
add
insb
xchg
jmp
loopne
jbe
addb
xchg
dec
add
mov
add
lcall
loopne
aaa
addl
loopne
and
or
sub
les
in
lcall
adc
test
incl
imul
adc
add
mov
adc
adc
pop
add
pcmpgtb
add
ds
add
daa
in
mov
pop
pushf
add
add
rolb
add
data16
jmp
cmp
stos
adc
add
add
add
xchg
jmp
mov
mov
adc
cmpb
fwait
aam
fs
add
test
add
sbb
pop
fs
add
bound
push
cmpl
in
in
mov
pop
jecxz
sbb
aam
jmp
in
data16
or
push
add
gs
adc
sub
add
insb
add
mov
das
add
stos
or
and
sbbb
xchg
imul
xchg
pop
faddl
xor
cwtl
out
mov
mov
and
or
adc
mov
or
fs
into
mov
add
mov
fs
data16
loopne
in
or
add
adc
add
pop
sbbb
and
sti
loopne
jnp
push
outsl
push
add
loopne
sbb
hlt
add
insb
cs
loopne
add
data16
cltd
add
lods
in
add
mov
test
xchg
xor
pop
add
adc
mov
adc
pop
xchg
adc
add
push
add
add
jmp
fisubs
inc
outsb
mov
inc
dec
cmp
pop
pop
movups
addb
add
adc
adc
cltd
jmp
xor
inc
sub
dec
add
pop
add
or
fs
movb
adc
aaa
insb
xchg
adc
or
insb
aad
or
add
test
adc
add
pop
cmp
mov
fwait
testb
adc
mov
pop
andb
out
add
add
lods
rolb
call
rolb
lods
add
adc
imul
add
roll
adc
fs
fs
add
add
fs
popf
mov
sub
mov
sbb
orb
fwait
stos
rolb
add
cs
fwait
aad
loop
and
push
in
daa
push
addb
cwtl
xorb
cmp
adc
fs
add
in
inc
pop
mov
stc
test
jecxz
ljmp
call
insb
push
adc
pushf
je
pop
arpl
pop
adc
stos
or
insb
stos
pop
and
aam
jge
in
int
das
add
stos
cmpxchg
das
mov
add
add
pop
adc
cltd
out
insb
rcrb
dec
pop
xchg
adc
add
pop
pushf
ret
pop
test
ret
pop
mov
add
pop
mov
rolb
cltd
scas
push
fwait
loop
adc
pop
mov
test
inc
add
pop
rorb
fcmovb
add
pop
ret
adc
fs
xor
mov
sbb
in
fwait
lret
jecxz
insb
add
pop
and
mov
mov
out
add
push
or
pop
fs
out
add
in
add
add
add
lret
fildl
insl
push
jge
add
mov
add
addr16
add
pop
sub
pop
and
push
stos
lret
cld
addb
lret
add
cli
fildl
cli
scas
add
add
pop
xor
adc
mov
adc
loopne
jns
pop
mov
mov
mov
pusha
add
adc
scas
pusha
add
sub
imul
addb
xchg
imul
push
xchg
loopne
adc
add
outsl
add
loopne
adc
dec
outsb
add
sbb
imul
xchg
mov
push
cli
xlat
and
sti
and
jecxz
or
lret
cmpsl
mov
or
pop
fidivrl
ds
adc
adc
adc
adc
clc
and
fs
mov
cltd
fcoml
lahf
inc
repz
add
add
add
jecxz
das
xchg
cmc
les
mov
add
pop
mov
adc
add
shr
add
push
stos
pop
aas
addb
fwait
and
cmpsl
sarb
shll
fwait
mull
and
rcll
pop
outsb
popa
or
pop
sbb
inc
add
fs
lret
notl
lahf
or
sub
sub
out
lcall
or
mov
add
mov
mov
lret
adc
xchg
in
inc
in
xchg
lret
sti
daa
rolb
sbb
add
adc
and
mull
add
mov
in
sbb
insl
les
pop
pop
push
xor
popa
aas
out
add
mov
faddl
das
mov
or
addb
test
cmp
data16
out
daa
ret
mov
insb
sgdtl
mov
iret
add
test
add
in
inc
adc
mov
fistpll
mov
pop
dec
and
pusha
add
insb
pop
adc
fwait
xlat
fcoml
aam
cltd
movb
add
jmp
negl
adc
ja
rolw
repz
push
pop
dec
loopne
roll
cmp
mov
or
or
inc
fistpll
andb
push
mov
adc
out
inc
sahf
jmp
inc
pop
mov
add
aam
fwait
int3
mov
loopne
scas
add
add
add
pop
out
or
or
das
mov
add
push
lcall
cmpsl
jecxz
scas
jecxz
sub
mov
repnz
sbb
pushf
std
gs
scas
pusha
add
cmp
lcall
sub
jecxz
addr16
add
out
add
add
insb
xchg
out
in
xchg
fisubl
adc
das
add
mov
lret
xlat
sti
add
lcall
adc
insb
das
in
inc
add
jnp
add
adc
scas
add
xor
das
scas
sub
mov
loope
add
das
pop
push
loopne
subb
jae
mov
fdivl
xchg
sarb
adc
loopne
and
mov
or
andb
and
ljmp
jno
add
dec
add
mov
out
sub
hlt
xchg
enter
mov
add
mov
dec
addb
mov
loope
xchg
aas
cli
stos
xor
inc
adc
insb
mov
sub
outsb
add
xchg
add
addb
xor
xchg
xor
mov
jo
data16
inc
jo
add
push
loopne
fcomi
aaa
bound
add
nop
pop
sub
add
aas
addb
adc
das
loopne
aam
loopne
shlb
add
lods
pusha
xchg
nop
add
fsubrl
xchg
pop
cltd
std
add
loopne
sub
aam
pop
popf
add
jge
in
xor
loopne
adc
adc
add
xchg
add
adc
imul
add
or
and
or
push
pusha
push
pop
adc
push
lcall
xor
lcall
ljmp
out
lods
add
lcall
add
push
xor
das
lcall
jecxz
nop
add
pop
add
add
fs
push
pop
mov
add
stos
pop
adc
jle
or
cmpsl
nop
xor
das
fwait
mov
pop
inc
inc
add
loopne
mov
adc
adc
cli
shll
adc
xor
lcall
add
push
rolb
sbb
fwait
inc
add
mov
xchg
pop
mov
hlt
push
xor
jo
dec
lcall
add
or
push
adc
test
add
adc
or
add
cwtl
mov
sub
test
inc
je
cli
out
insb
and
pusha
dec
push
add
ljmp
stos
jecxz
pop
repz
add
add
rol
lcall
lcall
lods
flds
adc
gs
add
lcall
push
xchg
fwait
ljmp
and
pop
pusha
out
add
rolb
out
add
sbb
jo
loopne
xlat
and
lcall
fdivl
add
test
mov
mov
xlat
mov
mov
outsb
add
pop
add
loopne
andb
push
mov
fwait
lret
sti
xor
decl
movsl
push
add
test
mov
mov
mov
pop
cmpsl
mov
mov
mov
mov
divl
cmc
xor
adcb
or
and
stos
lret
sti
aam
loopne
mov
pop
inc
mov
cmpsl
divl
movsl
mov
incl
add
sub
mov
or
pop
rclb
fwait
pusha
ljmp
mov
negl
test
mov
sbb
and
or
pop
fwait
mov
fwait
std
adc
add
sti
pop
pop
pop
out
sbb
push
and
test
add
out
rorb
adc
and
or
pop
loopne
inc
lcall
adc
add
add
lcall
rclb
insb
mov
push
pusha
and
pop
andb
cli
pop
pusha
add
test
bound
xchg
sahf
mov
fadd
pop
sub
add
adc
jg
xor
xchg
jl
mov
lret
adc
pop
adc
add
or
push
add
cli
sub
scas
and
loopne
fdivl
mov
loopne
push
dec
push
add
lret
push
sub
loope
cmp
xchg
adc
jge
nop
mov
add
bound
sub
pop
out
xchg
mov
fwait
lea
fcoml
pusha
push
mov
daa
insb
mov
jno
nop
popa
xchg
pop
testl
mov
sbb
or
leave
cmp
xor
adc
lret
nop
repz
push
adc
push
add
notl
cmp
mov
out
fsubrl
cmpb
add
adc
sti
scas
add
adc
lcall
orb
push
mov
rolb
stos
popa
add
pop
fbstp
repz
and
or
scas
add
scas
or
jae
cmpsl
loop
jb
movsb
mov
data16
mov
mov
add
imul
sub
and
sbb
popf
addb
pop
jo
cmp
adc
sarb
jmp
jo
mov
fsubrl
mov
or
iret
stos
lret
loope
lods
adc
sbb
testl
mov
pop
add
or
pop
xchg
lret
incl
lret
sbb
mov
xchg
fisubl
jmp
xor
shl
push
add
rcrb
and
push
add
sbb
xlat
pop
jb
push
mov
mov
insb
daa
adc
mov
and
loopne
shll
ret
add
loopne
das
adc
aaa
hlt
das
lock
mov
sub
ret
roll
loop
add
adc
pusha
mov
ret
pop
and
lock
sub
idivl
outsl
loopne
aam
lret
jmp
push
pop
nop
add
jl
xchg
add
ret
add
mov
push
pop
or
mov
ljmp
lret
stc
mov
test
in
adc
add
mull
cmpsl
cmpsl
lcall
add
push
add
jmp
cmpsl
or
out
jecxz
out
adc
jmp
adc
and
and
pop
add
test
mov
add
push
xchg
add
add
inc
test
xchg
cmp
add
jno
out
mov
dec
fwait
lret
lret
add
adc
or
pop
adc
push
or
xor
lcall
pop
and
repz
or
add
pushf
mov
push
enter
sbb
sbb
ja
dec
pop
xchg
rcrl
fwait
mov
in
lcall
orb
adc
sbb
out
test
mov
fwait
incl
mov
fs
out
push
sub
xchg
mull
mov
shrl
add
adc
push
mov
add
inc
add
and
add
loopne
bound
adc
pop
sarb
stos
ljmp
or
push
add
sub
movl
and
je
add
cli
cmovae
rcrb
add
add
adc
dec
add
lock
mov
add
add
fwait
xchg
test
adc
add
fs
push
fwait
mov
add
jmp
scas
add
jmp
bound
cmp
jmp
insb
inc
sub
bound
stos
add
insb
sub
mov
add
data16
fwait
lret
adc
add
add
xchg
inc
scas
add
add
inc
xor
add
push
fwait
jmp
out
add
mov
adc
test
pop
rcl
out
add
das
mov
mov
es
add
insb
or
insb
add
test
xchg
cli
roll
fwait
pop
ficoms
add
add
repz
lcall
add
test
adc
inc
pop
add
add
pop
add
das
loopne
adc
add
mov
mov
and
insb
pop
adc
imul
stc
insb
mov
iret
add
lret
movl
fs
lret
iret
add
insb
xchg
lret
jecxz
sbbb
ja
sub
insb
pop
iret
lcall
lret
lret
fnsave
aas
outsl
adc
add
push
outsl
adc
jmp
add
bound
jo
add
xor
fwait
call
xor
add
das
por
pop
out
add
lcall
sub
add
adc
adc
cwtl
jmp
mov
roll
xchg
pop
adc
addb
add
adc
fs
lret
jecxz
add
add
mov
adc
push
loopne
filds
xchg
adc
adc
mov
aaa
push
xor
test
pop
testl
sbb
adc
out
add
sbbb
add
cli
add
add
add
add
xor
mov
pop
out
sbb
add
fisubl
jmp
sbb
cmp
loopne
xchg
add
repz
dec
fmuls
data16
stos
andb
jecxz
mov
push
inc
outsl
fs
pop
dec
sbb
add
insb
mov
add
adc
mov
fs
data16
out
xor
lock
das
scas
pop
jge
out
add
gs
bound
mov
add
jp
out
fs
push
frstor
bound
mov
add
lcall
aam
sbb
add
in
inc
add
fwait
mov
insb
sub
lcall
aad
pop
test
mov
bound
sub
lcall
dec
fwait
std
fs
adc
cmp
sub
cld
sbbb
stos
or
addl
mov
push
and
jmp
add
mov
add
or
imul
gs
imul
fcoml
outsl
add
mov
xchg
fwait
ljmp
test
insb
sub
mov
add
bound
add
cmp
mov
and
add
bound
movsl
int3
add
jo
add
mov
add
mov
add
insb
and
mov
add
mov
fsubl
test
out
add
fwait
add
fwait
mov
push
ret
test
add
les
fcompl
add
outsl
push
inc
nop
testb
mov
push
mov
loopne
pop
sbb
filds
or
daa
out
loopne
pop
and
fwait
jmp
adc
add
add
and
mov
insb
adc
add
cltd
in
add
loopne
insb
pop
mov
jmp
mov
fs
pusha
and
addb
fwait
add
push
add
in
add
jmp
jbe
les
sti
push
daa
leave
scas
add
cmp
add
loopne
cmpsl
adc
aam
xchg
xor
das
mov
and
mov
sarb
mov
adc
jecxz
jp
cmpsl
orl
adc
das
loopne
add
shll
pop
adc
shll
xor
push
loopne
jg
inc
push
loopne
gs
and
add
or
add
pop
adc
add
adc
lahf
sti
scas
mov
pop
das
cs
stos
add
fs
outsl
add
outsl
lcall
add
pop
jecxz
add
or
pop
jmp
add
add
mov
daa
loopne
add
add
fsubl
xlat
adc
test
bound
bound
rcrb
movsl
add
inc
mov
mov
add
and
sbb
hlt
das
sbb
aaa
add
outsl
xchg
jecxz
fwait
add
pop
and
adc
loopne
add
mov
lcall
and
mov
leave
add
mov
mov
and
fs
add
es
cli
fs
aas
pusha
add
fstpl
addr16
sbb
cs
push
insb
daa
adc
sub
add
mov
xor
das
mov
push
lret
fs
add
cmp
fwait
adc
scas
in
cmp
add
fs
xchg
and
sbb
lcall
push
add
add
adc
nop
fwait
lods
repnz
add
sbb
add
leave
mov
and
add
test
add
testl
push
lret
out
add
bound
add
sub
pusha
jle
movsb
xor
mov
add
repnz
in
lcall
rclb
add
out
das
fucomip
sub
lcall
pushf
or
pop
fadds
incl
fs
test
fucomip
shll
scas
out
data16
lcall
out
test
sub
in
popa
ret
fs
jmp
add
cmpsb
jecxz
ds
xchg
jmp
ljmp
or
addb
sub
or
add
sbb
inc
in
lcall
fs
add
add
mov
cltd
jecxz
inc
pop
in
and
cltd
out
roll
adc
loop
iret
pop
icebp
loop
movl
fistpll
adc
sub
in
sub
sub
xchg
subb
mov
adc
add
and
cwtl
lahf
pop
or
add
or
pop
ss
add
xor
orb
cltd
cld
and
add
lods
insb
sub
aam
jmp
pop
pop
and
and
dec
pop
adcb
mov
xor
arpl
xchg
add
insb
add
and
mov
pop
fwait
lds
lcall
pop
into
inc
adc
cmp
and
or
or
mov
push
add
add
add
fwait
and
mov
and
mov
adc
adc
lods
mov
mov
mov
mov
addl
sub
jb
add
mov
add
test
bound
adc
xor
push
xor
sub
dec
stos
add
incl
add
push
add
sub
ret
add
je
lock
daa
mov
push
pusha
add
pop
mov
inc
mov
lcall
add
stos
adc
mov
adc
test
add
xor
outsb
sub
add
out
loopne
pop
inc
add
movsb
add
pop
mov
or
xor
fs
insb
pusha
movsb
imul
jmp
or
fcompl
mov
add
loopne
mov
mov
push
add
mov
pop
popa
add
xlat
shlb
insb
das
add
mov
fistps
out
lcall
mov
adc
cmc
bound
mov
add
bound
add
xor
or
xor
adc
stos
adc
adc
loopne
mov
mov
mov
add
test
bound
mov
and
and
jnp
arpl
adcl
push
mov
jo
xchg
test
scas
bound
add
or
push
mov
data16
inc
mov
jae
inc
mov
fnsave
into
adc
sub
add
pop
mov
adc
jo
adc
add
lock
xchg
pop
lcall
fwait
int3
adc
test
fs
adc
mov
addl
addl
add
fnsave
dec
adc
xchg
add
mov
mov
push
or
add
mov
add
and
insb
add
jmp
add
sarb
loopne
imul
scas
jo
add
mov
or
insb
roll
fwait
xchg
mov
addb
jmp
in
mov
xchg
daa
and
movsl
mov
sbbb
and
pop
sub
sub
add
add
add
fwait
stos
test
bound
ja
pop
and
pusha
and
insb
sub
popa
nop
push
jo
pop
insb
rolb
add
pop
mov
push
jno
xlat
loopne
add
call
add
loope
orl
notl
or
xor
pop
nop
push
sub
repnz
rclw
jg
add
fs
out
and
dec
dec
jb
decl
add
sti
dec
xor
testl
pop
mov
fiaddl
bound
add
add
add
cmp
adc
mov
sahf
mov
adc
fisttps
add
inc
ja
add
mov
aam
add
addb
repnz
add
repnz
cld
repnz
fwait
adc
sub
cli
rolb
out
aam
mov
jmp
mov
sti
mov
test
xorl
mov
add
mov
smsw
mov
bound
cmp
fs
jecxz
bound
mov
xor
sbb
stos
punpckldq
sub
sub
bound
stos
add
pop
mov
stos
cmp
xor
add
mov
add
mov
add
add
adc
pop
adc
insl
adc
adc
das
mov
xor
aaa
xor
xchg
add
test
add
test
adc
push
icebp
lcall
adc
mov
add
dec
cli
lock
sub
pop
push
popf
rorl
fwait
lods
insb
xchg
pop
inc
add
roll
xchg
pop
in
push
or
pop
bound
adc
add
test
inc
in
loopne
and
or
stos
sbb
insl
or
shlb
stos
sbb
add
push
loopne
adc
sub
in
add
fs
sti
test
adc
stos
cmpps
mov
das
or
fildl
inc
adc
mov
stos
xor
inc
aaa
lret
bound
outsl
shlb
xor
pop
xchg
sub
cmpsl
lcall
ret
jno
fs
pop
or
xor
test
out
jo
ljmp
lods
adc
fs
sbb
lret
pop
pop
nop
pop
pop
fisubl
movsb
out
cmp
add
jae
add
lods
jecxz
mov
shlb
add
fs
rolb
inc
add
jecxz
pusha
movsb
out
pop
pushf
test
pusha
add
jmp
add
xchg
aas
mov
xor
adc
mov
adc
sahf
jb
nop
cli
fs
pop
add
push
adc
jmp
sti
add
gs
mov
xchg
pop
jmp
jmp
out
add
shrl
rorb
add
loopne
test
add
test
bound
xchg
push
push
mov
add
push
repz
iret
fs
or
bound
loopne
cwtl
add
mov
push
lods
movl
rolb
orb
jno
cltd
int
bound
and
sbb
orb
lock
jecxz
stos
adc
mov
fildl
xchg
inc
mov
add
scas
mov
jmp
js
push
addb
pop
add
push
xor
mov
add
in
sub
fwait
in
and
sub
dec
lock
push
or
sbb
pop
dec
xchg
inc
dec
mov
adcb
rol
xchg
lahf
push
add
mov
adc
push
jmp
icebp
orb
xchg
jecxz
mov
out
adc
mov
add
mov
mov
stos
adc
xor
stos
pop
mov
mov
add
roll
loopne
std
jo
shr
mov
add
das
add
jae
mov
add
data16
les
mov
or
push
fsubrs
adcb
std
adc
pusha
add
scas
adc
arpl
imul
add
mov
adc
add
adc
push
adc
add
add
add
imul
hlt
mov
mov
std
scas
add
adc
add
arpl
xor
sub
mov
jecxz
and
dec
fs
mov
push
lcall
xlat
ljmp
add
mov
mov
add
adc
insb
pop
adc
sbb
adc
adc
mov
sub
sub
add
fwait
xlat
aam
xchg
lret
jecxz
cmpsl
lahf
loopne
inc
add
in
cmpsl
xchg
mov
add
je
adc
out
xchg
xchg
add
aam
fwait
lcall
fwait
loop
add
adc
add
outsl
xchg
xchg
add
mov
pop
adc
gs
bound
lahf
adc
pop
repnz
cmp
pop
in
adc
or
add
out
fs
push
add
adc
add
loop
ljmp
adc
cmpsl
add
sub
mov
pop
outsb
add
jnp
add
add
add
stos
lret
repz
cli
ja
mov
addl
lret
test
add
fbld
lret
mov
sub
add
lret
lret
mov
mov
mov
sub
adc
data16
add
data16
lret
lret
pop
roll
lret
movl
fs
out
cmpsl
jecxz
inc
scas
jmp
lret
filds
or
adc
imul
pop
add
adc
imul
imul
orb
lret
add
shll
cs
sub
add
sub
fs
fs
data16
pop
fstl
adc
test
in
cmp
adc
add
stc
scas
add
test
leave
add
cmp
add
push
mov
out
add
aas
aad
or
mov
in
in
hlt
fwait
das
ret
sbb
cmpb
or
cli
pop
sbb
adc
adc
sub
fildl
adcl
mov
rcll
ret
mov
pop
test
outsl
add
pop
cmp
inc
and
add
xchg
fs
lret
jmp
fs
fs
lret
sti
mov
adc
inc
add
adc
in
inc
pop
ret
bound
sbb
pop
fwait
mov
jmp
inc
shrb
add
in
jmp
in
mov
or
out
aam
xchg
inc
out
cwtl
movl
add
sarb
in
and
ret
pop
lret
test
or
pop
out
add
add
das
mov
mov
or
add
mov
xchg
jecxz
mov
subb
cltd
out
mov
add
bound
mov
adcb
mov
sarb
jge
mov
pop
daa
adc
adc
aam
lcall
add
or
mov
pushf
or
add
imul
stos
cmp
fs
popl
and
mov
add
adc
or
or
bound
add
stos
das
mov
mov
lcall
dec
jl
dec
mov
bound
sbb
add
jmp
roll
ret
add
rcll
add
cmpsw
fsubl
add
xchg
mov
xchg
add
out
push
daa
and
mov
push
shl
inc
xchg
add
add
pop
xor
adc
andb
loopne
cli
pusha
add
mov
loopne
bound
lods
jmp
xchg
pop
out
loopne
jecxz
add
jecxz
lcall
xchg
xor
data16
jecxz
mov
mov
adc
lcall
loopne
test
add
add
loopne
and
jmp
mul
in
das
in
insb
pop
or
fwait
incl
bound
idivl
out
lods
stos
jecxz
adc
add
and
add
mov
add
data16
rcrb
sub
pop
out
pusha
cmp
sarl
jmp
fwait
bound
add
push
add
sbb
hlt
das
sbb
mov
cmp
fs
jmp
mov
and
push
loopne
inc
push
insb
xchg
inc
sti
add
xor
add
loopne
test
add
inc
pop
testl
pop
pusha
sbb
inc
pop
stos
adc
and
lcall
roll
mov
lcall
push
pop
inc
pop
add
flds
adc
add
xor
stos
adc
adc
lcall
repz
loopne
pop
cmpsl
ret
faddl
adc
mov
mull
fs
outsl
xchg
repz
mov
add
or
push
adc
mov
push
lcall
mov
repz
mov
sbb
fsubrl
mov
mov
add
fs
imull
jmp
fwait
iret
pusha
bsf
or
mov
jno
mov
in
fsubrl
mov
mov
push
and
aam
mov
ljmp
call
lods
jmp
or
mov
scas
or
mov
mov
imul
dec
sub
inc
mov
addb
inc
loopne
test
add
incl
loopne
mov
add
out
pop
mov
add
or
or
adc
pop
andb
pop
loop
and
rolb
das
addr16
push
in
ljmp
fwait
add
inc
pop
sub
or
hlt
rorl
inc
loopne
mov
pop
inc
out
loope
pop
add
das
mov
sbb
addb
lods
mov
sub
sbb
out
fwait
stc
pusha
jno
or
in
adc
cmove
add
and
add
addb
ja
imul
push
fwait
mov
mov
jmp
lods
mov
mov
inc
and
repz
sbbl
popa
add
lcall
push
add
dec
and
add
add
outsl
add
ret
pop
xor
addl
fwait
test
and
adc
lcall
dec
xor
loopne
mov
cmp
add
pop
inc
insb
adc
loopne
adc
insb
and
and
fwait
cmc
adc
and
and
pop
and
pusha
sbb
imul
add
sub
sub
add
pop
push
adc
add
add
adcb
xchg
sbb
test
insb
das
xlat
pop
sub
add
add
xor
adc
mov
fwait
mov
or
repnz
test
adc
add
aam
cltd
add
inc
push
sti
idivl
incl
mov
jecxz
mov
add
add
mov
nop
sbb
sub
xchg
hlt
jno
xchg
ret
insb
push
das
movl
shrb
xchg
add
pop
fcoml
and
loopne
rorl
push
ret
mov
mov
push
pop
add
mov
lahf
inc
add
add
jo
stos
add
addb
aam
xor
jnp
scas
xchg
xor
add
fs
sbb
jae
insb
pop
mov
push
push
add
lahf
iret
pop
out
push
or
pop
sbb
add
cmp
push
push
xor
pop
nop
add
xchg
mov
mov
lcall
or
mov
cmp
xchg
sbb
dec
and
add
mov
xchg
ret
cltd
rcl
or
out
scas
or
pop
insb
push
and
rcrb
add
add
call
jg
mov
idivb
jo
rcll
cmpsl
xchg
inc
lahf
adc
shll
mov
push
xor
mov
popf
dec
xorl
fwait
and
add
fwait
lcall
adc
cmp
xor
mov
mov
subb
nop
mov
xchg
ja
adc
mov
adc
lods
xor
mov
fs
sub
dec
add
outsl
xchg
addl
fs
into
fs
cwtl
call
xchg
add
les
insb
mov
add
mulb
inc
aam
loopne
sbb
add
xchg
lock
or
test
mov
add
stc
or
mov
pop
test
lahf
arpl
and
xlat
repnz
inc
sub
ss
mov
leave
icebp
inc
xchg
incl
mov
loopne
repnz
aam
adc
popa
cli
xor
mov
mov
test
rcrl
add
push
push
add
mov
fwait
cmp
sarb
mov
mov
loopne
inc
add
add
push
cmp
pusha
aaa
sub
xor
add
das
addl
mov
scas
inc
add
xchg
add
lret
iret
adc
inc
xchg
cwtl
incl
clc
loopne
inc
xchg
stos
scas
add
pushf
addb
test
mov
shl
imul
xlat
mov
push
jo
nop
inc
out
fwait
lds
add
mov
xchg
push
xlat
mov
add
xor
sti
inc
in
loopne
mov
mov
and
and
mov
fwait
loopne
push
lret
sub
xchg
icebp
add
movl
fwait
lret
and
push
or
pop
outsl
xchg
lret
hlt
add
and
jecxz
add
adc
xlat
adc
sbb
and
pop
popa
add
fistl
cli
dec
and
lock
fbstp
push
loopne
adc
xor
cmp
adc
repz
lods
jecxz
pushfw
out
in
add
in
and
xchg
scas
xor
adc
pop
sahf
stos
jo
add
addb
rolb
push
jbe
or
in
add
add
adc
data16
out
add
pusha
add
decl
bound
mov
push
test
ret
mov
xorb
mov
push
jmp
repz
add
mov
add
inc
add
mov
cmpsl
inc
add
pop
scas
mov
in
lds
add
rolb
fs
incl
jmp
push
repz
sbb
fwait
or
test
mov
add
or
push
add
and
mov
add
mov
mov
add
xor
xchg
lret
inc
popl
aam
jecxz
movsb
pusha
add
adc
sbb
mov
jmp
pop
inc
adc
sbb
cmpsl
cmp
add
and
cmp
sti
add
test
mov
subb
movsl
loopne
leave
xor
in
sub
xor
fs
lods
xchg
dec
xchg
incl
jo
adc
cli
dec
mov
rorl
mov
rclb
sahf
fcoml
subb
xchg
jecxz
mov
xorb
xchg
ss
mov
xor
add
jmp
fisubl
enter
inc
ds
sbb
icebp
loop
fldenv
arpl
or
ljmp
lock
jecxz
push
adc
add
push
pusha
push
xor
or
stos
adc
sub
push
cmp
imul
add
fsubrl
outsl
push
ret
add
outsl
push
les
lcall
incl
outsl
push
nop
std
test
in
loopne
bound
gs
push
fists
in
insb
daa
out
inc
in
fwait
in
add
xor
mov
insb
enter
out
sub
sbb
out
inc
mov
push
and
pop
test
sub
pop
out
jmp
adc
adc
inc
test
mov
mov
and
cld
incl
mov
fs
jmp
sbbl
mov
int3
jmp
add
mov
mov
jmp
mov
sbb
sub
mov
scas
add
fwait
out
pop
xchg
add
add
add
pop
ljmp
loopne
sub
imul
fs
and
jmp
mov
add
add
inc
add
add
insb
xchg
jecxz
loopne
add
adc
stos
sti
in
bound
push
adc
adc
mov
stos
adc
add
fwait
std
adc
aaa
cli
scas
add
xchg
fwait
ljmp
push
cmp
cli
pop
add
add
mov
push
add
jmp
bound
add
bound
stos
loopne
pop
inc
pop
adc
test
bound
add
jbe
adc
add
clc
sbbb
jmp
cwtl
or
pop
mov
xor
test
add
pop
inc
adc
add
xor
orb
inc
add
add
add
jmp
stos
jmp
loop
inc
inc
stos
jecxz
bound
sub
stos
loope
pop
repnz
fs
adc
orb
add
out
add
add
imul
cs
mov
jmp
add
mov
adcl
faddl
xor
test
bound
adc
sysret
cltd
add
lods
in
add
xlat
mov
adc
imul
add
pop
stos
and
mov
add
adc
test
in
xlat
jae
ljmp
lcall
hlt
das
lret
out
adc
push
ljmp
loopne
das
data16
or
mov
pop
add
out
add
mov
xchg
or
lcall
push
cmp
push
bound
das
mov
and
addr16
pop
or
add
or
sub
loopne
push
inc
add
stos
pmaxsw
push
clc
add
stos
loop
shlb
add
rolb
add
add
addl
add
loopne
std
add
or
cmpsl
loopne
inc
mov
mov
inc
push
xchg
test
cmpsb
inc
push
test
add
adc
data16
aaa
aam
loopne
imul
sbb
or
orb
or
das
out
push
adc
inc
push
sbb
adc
rclb
mov
inc
or
add
adc
dec
stc
test
or
push
addr16
add
bound
mov
data16
inc
cmpsb
out
and
inc
or
cmp
aam
fwait
cld
loopne
pop
and
cmpsl
inc
jmp
repnz
repz
sub
xor
or
lcall
adc
testl
adc
lcall
add
cmp
inc
mull
jmp
and
das
jmp
bound
push
sbbl
int3
aas
inc
push
cli
test
inc
inc
jmp
mov
sarb
add
sbb
das
mov
lcall
cmpsl
addb
das
mov
mov
es
stos
adc
inc
xlat
mov
loopne
iret
add
das
fs
addb
loopne
das
test
add
addb
addl
call
push
shll
pop
data16
inc
bound
ret
inc
xor
subb
pop
call
add
inc
push
and
add
loopne
push
and
add
push
clc
mov
pushw
add
lcall
add
fbld
popa
add
xchg
pusha
gs
pop
insb
or
mov
xchg
add
or
cmpsb
pop
cli
popa
inc
fs
aam
and
and
lcall
lcall
cmp
loopne
faddl
or
add
adc
mov
shlb
sub
loopne
rcll
pop
mull
add
repz
in
add
xorb
mov
push
and
idivl
mov
pop
and
adc
and
add
stos
pop
mov
push
loopne
dec
add
sbb
pop
gs
pop
pop
adc
add
loopne
fs
lcallw
loopne
orb
adc
mov
insl
lahf
add
mov
pop
mov
loopne
mov
add
insb
pop
in
lcall
sub
push
and
hlt
mov
clc
lcall
bound
fiaddl
adc
add
addb
nop
in
add
push
repnz
lock
sti
add
add
mov
lcall
inc
or
adc
loope
cltd
inc
lods
adc
loopne
addl
mov
ja
add
addb
push
mov
add
scas
add
pop
test
insb
mov
jecxz
inc
sbb
pop
add
add
pop
inc
imul
popa
inc
jno
add
inc
sbb
test
add
pusha
and
and
pop
inc
in
pusha
push
test
push
or
gs
jmp
mov
add
call
mov
mov
ljmp
mov
adc
add
ljmp
mov
and
push
add
adc
jb
push
add
fnstsw
and
popa
jb
lcall
add
mov
mov
mov
in
adc
push
pop
shrl
lcall
shrb
and
push
rclb
in
push
sbb
sbb
jmp
or
test
mov
fs
insb
inc
sub
insb
xchg
add
inc
pop
mov
add
add
lds
or
push
add
bound
stos
xor
xchg
sub
add
bound
add
clc
loopne
das
cmpsl
add
insb
das
in
stos
add
mov
xchg
loopne
inc
and
stos
xor
add
sub
bound
adc
add
loopne
push
inc
adc
jecxz
pop
or
pop
loopne
xor
push
push
xor
sbb
push
add
push
add
sub
sub
adc
loopne
xor
lcall
addr16
in
gs
jp
adc
and
in
adc
add
addr16
lcall
add
push
and
in
lcall
mov
mov
jl
inc
mov
mov
add
lcall
mov
mov
mov
push
or
add
fdivl
stos
add
inc
mov
push
ds
adc
in
bound
ds
icebp
cmp
bound
pop
sarb
or
push
xor
and
lcall
push
or
adc
adc
pop
sti
loopne
pusha
fs
pop
push
sbbb
add
das
mov
dec
adc
or
pop
push
jo
add
data16
andb
push
out
add
push
dec
imul
adc
and
mov
pop
insb
adcb
lcall
xor
mov
rclb
fs
and
cmp
xchg
add
adc
flds
subb
mov
pop
movb
adc
out
jl
push
lcall
loopne
mov
inc
rolb
adc
add
adc
xor
xor
inc
or
mov
pusha
dec
pcmpgtb
inc
add
in
add
pop
lods
add
cmp
aaa
pop
in
adc
adc
adc
mov
push
push
add
adc
sbb
loopne
push
inc
nop
add
or
adc
add
adc
and
add
sbbl
adc
push
lahf
adc
adc
out
fs
adc
data16
pop
jo
or
adc
add
pop
data16
sbb
xor
stos
sbb
push
sub
sub
movsb
push
out
mov
xor
pop
inc
rclb
mov
sbb
mov
or
and
and
lcall
add
outsl
xchg
adc
add
repz
pop
add
pop
loop
pop
add
mov
lret
add
cs
outsb
add
add
in
add
pop
out
or
cmpsl
adc
mov
adc
pop
loopne
mov
test
test
test
imul
xor
subb
loope
outsb
adc
add
add
pop
push
arpl
and
mov
add
inc
xchg
mov
fsubl
pop
add
insb
xchg
jmp
add
aam
lcall
testl
dec
addb
addb
dec
aam
fwait
sub
mov
mov
loopne
les
push
shrb
stos
aas
cmpsl
inc
push
inc
jb
stos
aas
push
jg
pusha
pop
and
jle
push
icebp
xchg
bound
xor
shrl
and
or
mov
or
mov
add
pop
mov
rolb
sub
inc
jecxz
sbb
mov
inc
pusha
adc
popa
sub
sub
sbb
cmpb
pop
inc
push
icebp
push
lcall
lods
imul
pusha
or
lock
mov
stos
xor
aas
data16
cmp
and
push
ret
imul
add
mov
lahf
push
push
xchg
cs
out
pop
mov
push
add
xor
inc
xor
jo
add
enter
and
fwait
jns
push
bound
mov
imul
add
gs
fbld
add
cmpsl
in
loopne
scas
jmp
call
adc
push
gs
push
stos
sbb
add
sbb
push
fsubrl
pop
mov
loope
or
inc
adc
shrb
fs
pop
add
gs
das
pop
jmp
sahf
add
loopne
stos
adc
add
adc
stos
adc
pop
add
in
sbb
bound
cmp
sub
jecxz
frstor
adc
pop
and
add
fiadds
addr16
add
sub
stos
pop
adc
loopne
sub
jmp
add
xor
test
fdivrl
adc
add
and
add
lcall
add
icebp
add
repnz
addb
sub
lea
push
add
jno
xchg
sub
add
test
in
dec
add
sti
and
stos
out
lcall
add
sub
mov
in
addl
mov
adc
mov
pop
mov
add
fwait
in
xor
call
pushf
in
add
add
lret
lock
in
out
add
adc
cld
icebp
loop
out
mov
rolb
add
call
inc
inc
js
add
jo
add
fdivrl
sbb
push
push
add
lcall
sub
stos
adc
adc
fs
pop
xchg
mov
divl
mov
pop
adc
popf
dec
frstor
add
sub
add
add
mov
mov
fs
add
add
add
adc
add
add
stos
lret
out
mov
adc
les
push
loopne
mul
pop
sti
loope
gs
mov
add
add
das
adc
add
jmp
sub
add
add
xor
jo
outsb
sub
sti
add
icebp
fdivrp
roll
push
add
lock
fs
lret
aam
test
mov
sbb
stos
mull
pop
add
data16
daa
add
enter
data16
repz
loopne
mov
rclb
add
cwtl
add
adc
loopne
inc
movb
loopne
jg
jmp
lret
jp
ljmp
loopne
mov
in
outsl
nop
in
mov
loopne
jp
daa
insb
rorb
xor
add
jmp
add
fs
dec
fs
data16
add
inc
fs
daa
pusha
add
add
push
mov
mov
or
in
add
data16
das
add
pop
test
cs
out
add
data16
sub
jbe
les
pop
add
add
add
push
or
add
bound
ja
add
adc
dec
add
lods
add
loopne
jb
in
add
addr16
add
add
bound
in
mov
or
imul
pop
insb
push
mov
add
lar
mov
mov
lcall
jle
add
pop
push
add
and
scas
mov
add
lcall
lcall
lcall
insb
adcb
loopne
dec
repz
je
fwait
in
icebp
adc
adc
add
outsl
add
xchg
sti
push
stos
addl
add
loopne
mov
sub
call
jecxz
shrl
loopne
bound
add
jg
loopne
in
add
cmp
ds
insb
xchg
iret
add
pop
data16
pop
or
dec
mov
stos
pop
fwait
add
in
mov
fs
sti
add
aam
iret
xchg
xor
add
push
addb
stos
pop
aam
cltd
andb
lret
addb
insb
das
in
mov
adc
add
stc
scas
add
lcall
lea
roll
add
cmpb
andb
daa
data16
add
xor
xchg
adc
push
test
cmpsb
sbbb
xor
cmpl
andl
pop
or
add
add
mov
shll
rclb
inc
pop
ret
gs
lcall
data16
and
data16
bound
pop
leave
and
add
add
cmp
inc
imul
arpl
xchg
pop
rclb
adc
shlb
lods
jmp
imul
and
insb
xchg
pop
mov
push
adc
adc
fs
arpl
arpl
add
pop
mov
in
and
arpl
sti
addb
or
inc
clts
arpl
test
dec
sbb
orb
pop
subb
sub
lods
jmp
aaa
hlt
das
scas
mov
xchg
shll
popa
sbb
bound
xor
dec
sub
or
scas
adcb
push
popa
add
scas
pop
sbb
xchg
inc
push
lahf
inc
or
stos
sbb
inc
add
test
mov
addl
sti
add
pop
add
jecxz
mov
and
xlat
add
push
inc
inc
add
jecxz
or
cmpb
jle
mov
data16
out
mov
and
addb
jmp
pusha
outsl
orb
cmpsb
data16
sub
push
lcall
es
push
loopne
or
add
inc
mov
add
fs
data16
fs
cs
mov
cltd
jecxz
adc
testl
add
stos
pop
insb
sub
push
ficoms
jno
pop
test
pusha
add
push
jbe
rolb
inc
add
jns
subb
sub
adc
shl
pusha
inc
fwait
enter
out
pop
lret
addb
or
add
fs
out
sarb
and
stos
iret
out
loopne
push
inc
adc
roll
inc
push
insb
sub
add
fsts
fcmovnb
adc
imul
or
loopne
jge
add
mov
hlt
roll
shl
roll
imul
adc
push
and
or
adc
adc
and
out
add
aaa
aam
xchg
insl
cmc
add
add
mov
pushf
xor
mov
xchg
add
insb
shlb
add
or
jne
sbb
sbb
mov
andl
data16
les
popa
add
push
inc
add
xchg
add
and
les
mov
mov
in
add
rolb
stos
mov
pop
mov
add
in
xchg
or
push
add
arpl
mov
addr16
adc
jmp
xchg
sti
mov
pop
inc
sub
ds
mov
jmp
loopne
or
gs
out
loopne
ljmp
inc
and
fs
and
loopne
xorb
aam
pop
loopne
loope
add
in
outsl
xlat
mulb
inc
iret
lcall
jmp
insb
push
pop
inc
inc
adc
fs
loopne
repz
imul
push
repz
pushf
add
sti
push
pusha
push
loopne
push
loopne
fs
int
arpl
add
lds
add
inc
fadds
fadds
stos
fsubs
and
and
push
adc
adcb
fs
pop
cmpsl
mov
inc
lahf
in
outsl
xlat
mov
mov
adc
sub
or
push
dec
addb
adc
test
test
add
rolb
sti
popf
jmp
repz
inc
mov
insb
mov
add
out
push
mov
imul
pop
inc
outsl
push
mov
imul
mov
loopne
pop
addb
loopne
inc
and
dec
addb
fwait
and
push
loopne
je
sub
cmpsl
mov
scas
jmp
or
sti
shl
mov
test
dec
add
add
add
fs
xchg
dec
mov
data16
addr16
sub
test
gs
mov
out
dec
nop
jmp
fwait
adc
jmp
dec
dec
xchg
dec
jmp
dec
xchg
dec
push
and
add
mov
imul
mov
hlt
jo
insb
movups
and
js
cli
jo
bound
mov
sbb
sbb
stos
pusha
iret
loopne
imul
int
jo
insb
xchg
roll
fwait
out
cmp
add
sbb
test
aam
add
loopne
les
push
add
add
aam
or
imul
mov
repz
push
xchg
adc
push
add
fs
test
add
subl
aad
ret
loopne
push
pop
loopne
nop
xchg
fwait
jecxz
scas
out
inc
aad
ret
cmp
add
or
imul
test
inc
or
or
or
ss
xlat
roll
loopne
dec
add
inc
pop
add
rolb
or
push
push
in
mov
mov
lods
out
add
insb
xchg
scas
add
push
xchg
add
mov
fwait
outsb
inc
add
insb
cmpsb
mov
movb
imul
lret
inc
push
cmc
sub
rorl
add
fs
repz
aam
dec
push
adc
add
not
add
mov
and
shl
push
lcall
jecxz
popa
jae
adc
mov
test
or
lcall
or
ret
push
inc
aam
lcall
addb
repz
pop
add
test
loopne
lods
adc
loopne
pop
jecxz
cs
rolb
and
jo
cld
aam
mov
cltd
loope
cmp
mov
sub
pop
add
das
add
loopne
in
add
cs
jmp
add
out
gs
test
adc
fdivrl
or
jp
fs
nopl
adc
stos
push
arpl
hlt
nop
or
xchg
xchg
adcb
and
add
test
cwtl
repz
lock
imul
mov
imul
fs
lods
aam
and
and
or
loopne
or
or
add
add
es
mov
popa
and
add
sub
nop
or
mov
jmp
jmp
or
push
dec
add
imul
icebp
add
push
pop
hlt
add
add
add
pusha
add
insb
cltd
adc
push
add
add
insb
mov
add
jo
push
insb
add
add
lods
insb
mov
divb
add
cltd
int
pop
loop
fwait
ret
rclb
fwait
stc
shlb
iret
lock
imul
or
add
das
test
push
mov
aas
adc
loopne
cmp
aas
aam
loopne
push
addb
push
sub
mov
nop
push
push
loope
aaa
lods
aam
and
jo
insb
pop
adc
loopne
inc
addb
loopne
jb
addb
dec
adc
lock
add
popa
sub
inc
pop
add
insl
cwtl
rolb
shl
mov
add
mov
mov
mov
shrb
addb
pop
neg
pusha
add
pop
enter
pop
mov
cld
xor
rolb
jno
insl
push
jecxz
add
rolb
add
addb
mov
push
addb
pop
mov
insl
push
lock
adc
loope
inc
adc
adcl
adc
push
popa
imul
inc
add
dec
add
mov
fndisi(8087
add
mov
loopne
aam
mov
mov
add
das
repnz
adc
aam
fdivr
and
fs
es
call
les
add
fdivrl
lcall
cmp
gs
adc
sbb
movsb
cltd
inc
stos
shll
sbb
mov
pop
test
loopne
pop
cs
faddl
jo
imul
data16
lcall
nop
add
insb
sub
ljmp
cmpsl
adc
push
out
push
add
movsl
or
add
push
outsl
mov
and
nop
fldl
jno
pop
adc
adc
and
jp
sbb
lcall
pop
test
andb
adc
in
mov
les
aaa
mov
aam
daa
loopne
xor
insb
xchg
add
lahf
push
pop
sti
pusha
dec
stos
pusha
or
lret
fdivrs
sub
or
add
bound
into
inc
int3
push
xchg
test
inc
rcl
mov
adc
data16
add
cs
out
daa
loopne
add
in
data16
lcall
nop
add
sub
add
loopne
das
bound
out
add
push
movsl
leave
inc
scas
add
push
outsl
mov
add
das
lcall
fsubl
scas
add
lods
mov
and
mov
loopne
fs
add
loopne
in
fs
fdivrl
lods
cmp
mov
in
gs
lods
inc
imul
imul
mov
xchg
add
fs
pop
aam
loopne
add
adc
insb
xchg
add
add
sti
loopne
sub
add
add
scas
data16
lret
or
test
les
aam
loopne
xlat
add
add
gs
lods
xlat
test
out
loopne
loopne
dec
push
cltd
sbb
adc
or
clc
add
loopne
adc
fs
sti
in
inc
lods
xlat
sti
out
add
add
add
jg
data16
adc
in
add
sub
add
orl
adc
add
leave
add
jnp
mov
cmp
test
aad
das
orb
add
add
add
pop
test
push
enter
xchg
mov
test
stos
add
out
mov
imul
add
mov
fdivrl
orb
cmp
addb
lods
adc
sbb
push
push
mov
jns
add
add
data16
aam
xchg
shll
inc
push
rclb
cmc
jo
lods
adc
xchg
add
cmc
fs
fwait
cld
aam
out
loope
jne
mov
or
pop
insb
inc
xchg
pop
add
push
adcb
insl
dec
pop
inc
pop
ret
add
lcall
add
lcall
adc
out
cmp
push
das
loopne
ds
add
orb
rorl
sti
add
push
out
xchg
into
inc
xorb
in
xor
les
adcb
test
add
push
cld
add
or
add
xor
xor
sbb
xor
inc
or
xor
out
xor
or
sub
or
lcall
insb
sub
xlat
jecxz
loopne
push
rorb
sahf
inc
or
add
add
push
push
adc
xor
lahf
scas
pextrw
push
inc
or
mov
stos
in
add
test
cmpsl
cmp
push
mov
push
sbb
rcr
push
and
incb
cld
ret
push
ret
push
dec
imul
addr16
mov
std
lds
sarl
push
fists
mov
inc
rorb
cmp
inc
push
pop
les
add
arpl
sbb
loopne
arpl
imul
int3
push
sarb
push
sbb
and
push
pop
sbb
push
imul
push
adc
add
scas
fildl
adc
imul
loopne
add
dec
out
push
and
fwait
test
ret
xor
sub
pushf
push
popa
adc
add
add
fsubl
fsubrl
outsl
shlb
xor
loopne
andb
pop
add
fs
fsubrl
pusha
pop
test
add
and
sbb
mov
add
dec
xchg
fsubrl
movsl
dec
add
sub
insb
pmaxsw
add
push
and
jg
dec
data16
dec
stos
adc
push
push
lcall
pusha
add
mov
popa
mov
add
add
insb
adc
pop
incl
add
lret
jp
sbb
scas
add
lahf
sub
mov
mov
and
loopne
mov
testl
nop
cltd
mull
add
fs
aam
add
add
ret
add
add
ss
repz
aad
ret
lcall
imul
movsb
sub
mov
and
add
mov
xor
and
mov
add
adc
in
sbb
push
and
pop
out
loopne
arpl
add
mov
adc
popa
insl
add
xchg
insb
adc
outsb
adc
imul
add
das
add
lcall
in
lcall
mov
or
scas
es
loopne
int
or
testb
outsb
adc
imul
add
loopne
jmp
pop
push
add
loopne
iret
fwait
jecxz
add
sbb
cmp
mov
stc
add
push
push
testb
xchg
push
adc
loop
popa
jp
add
imul
add
push
jae
add
xor
add
arpl
xchg
jo
cmc
arpl
stos
cmp
xor
mov
inc
test
pop
dec
movsl
rolb
mov
mov
inc
in
fs
lods
outsl
and
jmp
push
mov
ss
sub
mov
stc
mov
push
testb
push
xor
adc
rolb
ja
xor
xchg
add
dec
mov
jno
add
dec
mov
pop
xchg
mov
pop
xchg
push
dec
add
inc
add
dec
add
pop
pop
push
mov
imul
adc
aaa
xor
xchg
adc
add
aaa
fsubr
scas
add
sti
adc
cs
xchg
mov
aam
pushf
xchg
mov
loop
fs
add
movsb
and
mov
add
gs
aad
test
ss
shll
lods
out
aad
ret
adc
add
mov
add
add
aam
cltd
fmuls
roll
je
or
push
int3
jo
pop
pop
int3
xchg
jnp
loope
xchg
push
cmp
ss
rorl
xor
daa
lcall
cmp
and
into
jno
rep
mov
lcall
xor
xorl
push
adc
or
push
rolb
loop
rclb
add
mov
insb
add
lods
or
mov
lods
scas
aam
mov
aas
push
les
addb
inc
add
cmp
addb
add
push
adc
adc
inc
jbe
addb
add
loopne
imul
add
addb
jecxz
imul
add
loopne
and
mov
bound
push
ss
mov
addb
add
hlt
lods
rorl
pop
loop
push
and
xor
and
outsl
mov
bound
lcall
add
mov
jmp
mov
add
mov
lods
mov
mov
add
add
lock
add
rolb
int
add
mov
adc
and
pop
lock
add
xor
push
addb
push
loopne
sub
add
add
add
inc
mov
mov
add
add
jnp
add
add
add
add
addb
add
lock
add
adc
ljmp
in
add
loopne
sahf
in
pop
outsl
sarb
jl
sub
in
loopne
or
jmp
jp
js
in
es
mov
xor
mov
xchg
out
stos
jno
add
inc
insb
mov
add
xor
mov
loopne
call
loopne
jg
imulb
in
cmp
shll
test
adc
in
icebp
adc
adc
push
in
dec
xor
pop
mov
pop
or
outsl
rcl
mov
xchg
iret
subb
pop
rolb
mov
mov
test
rolb
fwait
mov
push
loopne
pop
in
jb
inc
iret
add
mov
push
mov
pop
push
and
rolb
test
test
loopne
sub
push
inc
mov
inc
pusha
add
nop
add
adc
scas
mov
mov
or
add
adc
in
sub
aas
pop
addb
adc
rorb
inc
lcall
cli
inc
repz
scas
add
add
lahf
bound
mov
insb
push
jae
pop
add
jecxz
imul
mov
popf
adc
popa
test
and
push
cmc
lock
push
pushf
jne
jecxz
iret
add
add
xor
adc
out
add
roll
cmp
add
push
scas
or
pop
add
in
sub
and
in
aas
add
outsb
sub
add
les
or
add
and
and
add
lcall
aam
adc
push
loopne
add
out
add
lahf
push
add
adc
adc
ds
stos
lret
loopne
mov
adc
add
lcall
add
in
sub
in
aas
add
out
sbb
add
add
xchg
lahf
push
mov
add
add
mov
aas
add
add
push
push
icebp
add
sub
orb
inc
push
adc
enter
push
add
fs
out
data16
out
jmp
mov
inc
mov
bound
jmp
fs
mov
imul
jg
pop
fs
les
lea
out
out
stos
iret
in
add
inc
add
insb
mov
add
arpl
stos
lret
adc
orb
cmp
mov
data16
xor
xchg
add
push
call
add
data16
loopne
mov
mov
in
add
push
outsl
sarb
mov
xchg
pop
rolw
incb
xchg
jmp
adcl
pop
shlw
es
and
stos
jecxz
imul
push
imul
scas
and
add
push
push
add
adc
aam
out
testl
inc
mov
imul
xchg
stos
out
je
stos
adc
imul
stos
out
test
sbb
stos
adc
and
hlt
das
lret
addr16
fwait
scas
push
jmp
adc
das
scas
add
adc
add
loopne
test
inc
ss
in
sub
iret
aam
add
add
add
pop
cmpsl
in
loopne
scas
jmp
add
daa
data16
add
sbb
aas
bound
add
insb
sub
data16
insb
pop
icebp
and
add
mov
fs
add
cli
add
sbb
push
das
lcall
sbb
paddsw
xchg
xor
cli
jmp
scas
add
lret
data16
or
fs
iret
add
adc
hlt
adc
inc
cmpsb
mov
das
loopne
ret
in
mov
andl
data16
sti
insb
nop
pop
out
loopne
subl
or
imul
push
fwait
call
mov
add
lcall
orb
jp
inc
inc
and
mov
inc
fdivrs
fs
xor
cmp
daa
nop
loopne
mov
or
cmp
cmpsl
addb
or
push
fwait
jmp
fs
sti
push
arpl
adcb
shll
stos
lret
sbb
add
pop
dec
push
stos
add
mov
fwait
and
add
fs
pop
stos
sti
loopne
bound
loopne
lcall
lcall
pop
pop
xor
sbbb
mov
sti
andb
adcb
cs
add
fwait
pop
push
and
jmp
imul
add
mov
add
sbb
stos
pop
xchg
xor
add
push
fwait
not
nop
mov
popf
cld
rclb
mov
mov
and
pusha
sbb
pusha
mov
loopne
fcmovnb
adc
fs
adc
add
push
mov
add
pushf
cmp
inc
and
imul
inc
add
add
mov
cwtl
loopne
xor
add
or
ret
and
and
and
and
addb
pop
in
fs
fdivrl
lods
cmp
mov
in
gs
lods
pusha
imul
imul
cmp
cmp
dec
push
ds
and
shlb
mov
xchg
or
fwait
or
lods
add
movsb
and
add
fs
xchg
inc
dec
add
es
mov
loopne
mov
push
hlt
add
push
and
mov
shll
push
or
shlb
inc
or
imul
add
loopne,pn
mov
add
push
sbb
push
add
add
mov
sub
or
mov
inc
jl
add
add
sbb
andb
sbb
dec
push
addb
and
aaa
mov
inc
and
movl
lods
mov
bound
mov
bswap
or
adc
inc
insb
pop
add
dec
push
dec
imul
pop
push
push
cmp
mov
popa
jb
scas
loop
inc
push
insb
test
cmpsb
orl
push
imul
or
dec
mov
jne
orb
pusha
xchg
movsl
and
popl
ret
push
add
loopne
mov
add
int3
loopne
insb
xchg
sbb
lcall
inc
clc
test
add
sub
fisttpll
mov
add
pop
or
lret
repz
aam
ss
repz
mov
mov
cmp
rcl
ret
es
inc
add
adc
lods
insb
push
loopne
loopne
pushf
mov
adc
bound
insb
pop
in
imul
and
imul
jecxz
ljmp
fwait
hlt
and
push
add
inc
add
das
inc
test
mov
push
add
dec
addb
aam
dec
loopne
jne
add
pop
out
imul
iret
loopne
mov
rolb
add
addb
cltd
inc
add
loopne
fidivl
pop
les
imul
fs
add
insl
cli
lock
push
or
mov
push
jmp
sub
int
add
adc
pop
test
incl
loope
add
imul
jo
outsl
dec
xor
cmp
pop
loopne
xchg
loopne
add
test
mov
mov
es
imul
pop
or
adc
or
push
add
add
xor
je
add
sbb
add
mov
repnz
scas
add
add
adc
add
or
add
add
inc
xor
sub
scas
add
xor
mov
xchg
scas
add
push
xor
out
add
mov
xor
icebp
xor
add
scas
add
xor
xor
das
xor
and
add
add
add
inc
xor
pop
push
scas
add
jo
scas
adc
add
scas
add
jbe
pop
mov
add
scas
add
xor
mov
or
add
add
inc
push
scas
add
xor
inc
xor
add
xor
dec
adc
scas
adc
jp
add
xor
into
adc
add
add
lock
inc
mov
dec
xor
mov
add
in
in
jmp
jmp
jmp
in
jecxz
cmpsb
cmpsb
loop
loopne
add
cmpsb
std
cld
sti
cli
stc
clc
or
div
add
hlt
hlt
repz
lock
into
add
int
int3
and
lret
movl
ret
add
rolb
cmpsb
fstp
fcmovnu
add
fcmovu
fcmovu
fcom
or
aam
add
add
rcl
rolb
scas
scas
lods
lods
stos
stos
test
jg
sbb
add
sbb
dec
adc
add
paddusw
inc
add
add
scas
add
add
xor
pop
xor
fbstp
add
pop
jo
xor
jno
add
adc
adc
xor
aam
scas
or
jle
add
add
sbb
add
adc
add
pop
xor
push
xor
stos
in
jo
in
add
xor
into
cmp
push
cmc
add
add
add
xor
cmp
add
add
cmpl
sbb
or
xor
daa
adc
mov
faddl
stos
adc
mov
data16
and
sub
xorb
adc
ds
fwait
aam
loopne
sub
jno
loopne,pt
push
jo
mov
mov
pop
rolb
repz
call
dec
mov
loopne
test
in
sub
pushw
push
xor
inc
scas
xchg
add
pushw
nop
add
scas
lods
loopne
pushw
mov
push
add
data16
rcrb
pop
push
aad
add
add
lret
bound
sub
mov
mov
xlat
pop
add
fs
inc
push
xor
pop
fs
out
sahf
pop
std
in
cs
push
jmp
cmp
aas
inc
loopne
test
mov
jecxz
push
in
mov
bound
add
loopne
daa
loopne
add
in
and
cs
imul
addr16
mov
add
data16
jecxz
xor
add
lahf
adc
and
jno
pcmpgtd
add
adc
testb
sub
pop
call
les
out
add
add
roll
popf
sbb
dec
add
fwait
ljmp
add
nop
add
and
mov
and
adc
pushw
xchg
add
add
out
int3
cs
xchg
loopne
data16
fwait
cmc
rclb
inc
add
fwait
loope
add
out
fwait
and
test
push
cmc
lock
mov
add
rorb
fwait
in
cs
clc
push
add
outsl
andl
ss
fs
cs
mov
mov
mov
add
add
mov
bound
movsb
rolb
mov
or
xlat
and
jo
add
push
xchg
in
mov
push
add
rclb
lock
shll
out
push
adc
bound
addr16
add
add
test
mov
ds
test
add
data16
add
jecxz
jp
add
inc
add
add
test
daa
sbb
icebp
stos
push
sbb
psubsb
div
add
jbe
in
mov
push
loopne
pop
test
nop
push
add
sub
sbb
daa
xchg
shll
out
test
in
and
jo
mov
loope
add
stos
xor
xor
add
add
mov
jmp
mov
or
adc
add
adc
push
fbld
add
and
jmp
add
inc
stos
pop
aam
repz
rclb
pop
test
add
adc
jecxz
fs
pop
jbe
sub
pop
lods
les
bound
jmp
add
insb
out
insb
add
jmp
daa
pushf
sbb
cmp
lcall
inc
rolb
daa
outsb
push
add
add
out
pmaxsw
sbb
data16
aaa
fwait
loop
xchg
push
rorl
rolb
fwait
leave
rolb
stc
xor
roll
sub
and
pop
imul
orb
mov
data16
dec
outsb
mov
add
jmp
bound
add
push
fwait
add
inc
or
push
jecxz
and
add
sbb
insb
xchg
aas
add
out
fwait
xchg
mov
insb
and
fwait
int
adc
adc
loope
sbb
les
add
faddl
add
les
adc
add
aam
cwtl
icebp
gs
add
sti
insb
push
add
fwait
gs
aad
add
test
xchg
arpl
popf
dec
cmp
jecxz
add
stos
add
push
add
add
stos
sbb
aaa
fiaddl
fs
mov
jmp
xlat
aam
sbb
imul
inc
add
and
sub
sbb
inc
add
push
pop
sbb
inc
push
inc
add
push
add
imul
add
fs
jmp
sub
aam
loopne
jge
cmovo
and
add
insb
add
xlat
add
fwait
enter
cltd
mov
stos
adc
adc
lods
adc
add
pop
sub
fstl
fiaddl
sub
and
popf
icebp
gs
fisubl
les
xlat
lcall
out
fwait
sti
gs
insb
xlat
mov
add
jecxz
jne
outsl
xchg
adc
lcall
add
jecxz
inc
out
in
jmp
adc
fdivrl
add
mov
mov
sub
les
rolb
in
add
xchg
add
jb
in
add
aam
and
sub
insb
xchg
out
add
loopne
out
aam
mov
mov
aam
popf
add
orl
add
cmpsl
add
or
and
adc
fcoml
mov
pop
testl
add
mov
data16
data16
push
add
or
mov
adc
data16
adc
push
xchg
add
fwait
in
add
mov
or
cmc
adc
adc
and
or
add
addb
cs
clc
loopne
popa
cmp
icebp
addb
inc
sbb
add
fs
jg
aam
lcall
das
rcll
fwait
mov
push
add
enter
aam
or
movsb
andb
fs
sub
mov
loopne
pusha
fwait
adcl
cltd
ret
in
inc
cltd
add
sbbb
add
add
adc
pop
cwtl
mov
arpl
addb
lds
in
lcall
lock
addr16
out
stos
in
lcall
mov
push
subb
add
add
fwait
shl
rolb
mov
fwait
jecxz
fs
addb
or
add
add
loop
stos
sti
fwait
out
fs
sti
push
pop
subb
es
iret
insb
xchg
repz
loopne
dec
add
mov
mull
mov
movsw
jmp
gs
add
push
insl
rolb
adc
repz
xchg
xor
jmp
int
jmp
pop
adc
sbb
insb
das
out
mov
add
cli
jmp
stc
scas
add
lcall
mov
or
ja
add
and
push
inc
add
das
add
and
les
adc
xchg
add
add
mov
fs
mov
test
mov
mov
mov
sub
jmp
push
fwait
in
adc
sti
cmp
sbb
add
in
add
add
add
add
in
add
add
sarb
add
adc
xchg
pcmpgtd
add
movswl
lcall
lods
add
out
push
adc
pusha
cmp
imul
add
inc
add
add
addl
add
enter
add
pop
sbb
adc
sub
mov
add
sub
and
cli
rolb
push
adc
add
inc
add
add
pcmpgtd
sbb
adc
stos
or
les
add
pop
out
adc
pop
sbb
adc
add
and
fs
pop
add
ds
jp
mov
rorl
loopne
and
mov
bound
add
xchg
add
adc
add
test
adc
cltd
jmp
cli
out
sub
adc
insb
mov
out
add
fsubrl
scas
sub
mov
roll
das
pop
xchg
jle
add
add
outsb
add
ljmp
push
sbb
sub
adc
orb
add
test
pusha
sub
or
fwait
in
add
fsubrl
push
mov
cmpb
es
lret
mov
popa
sub
jg
sub
data16
aaa
and
repz
add
add
cld
scas
add
cmp
aam
loopne
and
and
mov
aaa
xchg
shlb
fildl
ja
sbb
add
shrb
xchg
add
add
mov
bound
xor
adc
and
call
mov
mov
add
stos
movups
lcall
fcoml
add
xchg
setnp
adc
mov
jmp
je
cli
mul
add
stos
xor
sub
or
mov
mov
push
and
mov
addb
sbb
add
out
inc
sbb
or
jno
adc
or
dec
gs
sub
rcrb
jmp
add
lods
arpl
fimuls
or
test
in
jo
add
lods
jle
add
fdivs
enter
add
pop
and
cmp
or
inc
xor
add
iret
pop
xchg
inc
movsl
ds
dec
es
jnp
dec
xchg
add
jo
fdivs
in
pusha
mov
mov
data16
fistps
add
popf
movsl
dec
lods
push
push
or
add
loope
or
add
add
mov
dec
into
or
add
and
add
add
popl
popa
mov
push
mov
into
and
jo
nop
inc
stos
lret
rcrl
add
and
data16
addr16
xor
es
lea
bound
loope
add
jo
dec
xor
in
add
andl
mov
jbe
inc
in
xchg
mov
inc
loopne
push
add
cmpsl
andb
xlat
mov
sarl
inc
insb
and
pop
outsb
add
cmp
bound
in
lods
add
xor
add
incl
add
adc
lret
lret
es
mov
cmpb
and
or
stos
lret
add
add
cli
jecxz
pusha
ss
xchg
lret
call
add
repnz
add
xor
sti
aam
lcall
pop
in
and
add
adc
das
rolb
adc
add
inc
mov
lcall
or
test
mov
mov
jg
or
sbb
jecxz
das
xchg
das
test
pop
scas
mov
gs
sub
push
or
bound
insb
sub
inc
inc
mov
inc
add
mov
sub
mov
xor
or
cli
push
incl
or
sub
rorb
adc
or
xorb
fwait
lret
repz
add
mov
imul
fwait
adc
iret
add
lock
adc
add
popa
and
cmp
add
add
mov
out
cmp
add
mov
add
das
fdivl
sbb
addl
sub
lds
add
fwait
fs
insb
push
cli
popf
in
sbb
sub
loope
in
fs
inc
add
cmpsl
push
add
and
add
jb
insb
roll
cli
fwait
sbb
adc
cltd
in
push
jecxz
and
jecxz
mov
fwait
add
pop
adc
adc
adc
mov
orb
mov
add
ret
add
add
xor
pop
das
mov
mov
add
add
add
pop
dec
xchg
adc
sub
pop
jb
mov
add
lock
call
sbb
mov
inc
data16
add
bound
test
bound
imull
lcall
das
mov
test
or
bound
inc
add
dec
add
shll
add
fs
dec
or
push
adc
test
bound
pop
jo
mov
mov
in
push
or
adc
add
cmp
popa
cmp
and
push
jmp
add
bound
jo
jo
clc
lret
or
and
mov
popa
xor
aas
jo
popl
addb
addb
or
jo
popl
addb
mov
adc
adc
adc
out
lock
jmp
dec
aam
fwait
add
aam
fwait
add
push
fistps
movsl
in
insb
push
xchg
add
lcall
aas
mov
add
mov
cwtl
out
add
bound
bound
push
add
ljmp
bound
adc
inc
insb
inc
sub
mov
or
add
data16
callw
xor
mov
bound
adc
sub
cli
jnp
rcrb
fstl
fsubl
add
sub
loopne
add
rclb
add
mov
data16
insb
das
in
mov
and
loope
pop
insl
mov
rolb
movups
cs
add
daa
mov
clc
adc
dec
incl
aas
nop
bound
adc
mov
adc
add
mov
test
add
subb
lret
loopne
push
std
nop
add
sub
sbb
cmp
xor
or
pop
std
lock
test
mov
fidivrl
add
cmp
icebp
add
iret
adc
jle
mov
xor
xchg
ljmp
lret
negl
push
rolb
add
cmp
jge
jae
mov
nop
inc
pop
xchg
pop
jns
xorl
sti
scas
add
add
mov
rolb
inc
push
sub
add
test
jle
and
xchg
pusha
or
jo
xor
pop
push
stos
lret
mov
add
pop
mov
add
addr16
add
test
inc
dec
pushl
add
xchg
testl
sub
repz
sub
pop
pop
and
ljmp
add
pop
iret
mov
mov
adc
dec
mov
gs
adc
push
sub
mov
outsb
add
add
inc
mov
lcall
ja
pusha
add
inc
xchg
loope
sbb
or
push
pusha
add
loopne
sub
add
loopne
loope
subb
loopne
xor
add
das
jae
mov
aad
lcall
cmovs
pop
xchg
roll
adc
inc
add
pop
stos
push
mov
inc
add
ret
bound
das
or
lods
lds
andb
adc
adc
and
mov
mov
add
mov
shll
das
and
add
sbb
mov
add
pop
movsl
mov
adc
sub
lcall
adc
adc
lcall
and
add
mov
sub
andl
jecxz
subb
fldl
sbb
push
bound
and
adc
add
loope
cmp
scas
lods
mov
add
xchg
add
inc
outsl
sub
lahf
mov
in
cmp
mulb
xor
add
int3
mov
les
shlb
pop
sti
loopne
mov
add
insb
cs
cmpsl
lods
mov
sbbb
in
push
in
movsb
adc
shll
fsubrl
mov
rorb
add
cmp
mov
add
es
fwait
inc
adc
inc
or
das
xchg
pusha
lcall
rcll
lcall
lock
hlt
es
push
mov
bound
add
mov
mov
pop
mov
mov
test
xchg
push
mov
cli
add
data16
or
mov
lock
adc
repz
inc
mov
outsl
shlb
test
xchg
add
add
adc
fwait
add
shll
mov
fwait
stc
enter
pusha
cmp
pusha
sub
and
add
pop
out
rolb
jno
nop
adc
fwait
out
add
xchg
sub
mov
sbb
stos
jecxz
lret
out
and
loop
sbb
test
hlt
das
mov
mov
outsl
and
add
out
pop
adc
add
add
add
pop
add
scas
add
push
fwait
test
xchg
adc
pop
test
add
lcall
add
xchg
filds
add
sbb
scas
add
add
sub
out
mov
adc
push
std
add
fs
add
aam
jmp
stc
sbb
jecxz
xor
add
add
testb
mov
push
pop
add
sbb
sub
fs
fs
add
test
add
out
sbb
add
dec
mov
adc
add
add
pop
add
incl
mov
add
test
bound
es
push
lcall
fs
sbb
fs
and
es
mov
add
add
add
pop
fs
adc
adc
add
fwait
lret
jmp
cli
add
outsb
add
jmp
add
pop
adc
adc
scas
adc
pop
addb
add
adc
add
scas
add
push
add
out
add
pop
adc
adc
pop
mov
incl
add
fwait
rclb
lcall
andl
iret
test
addb
push
add
das
adcb
or
pop
xorb
sbb
adc
orb
ja
stos
mov
outsl
subl
lea
sbb
jmp
sub
or
sub
add
jecxz
sub
shlb
sub
sub
rcrw
inc
lcall
popf
inc
add
jmp
add
sbb
js
mov
rcrl
mov
push
fwait
jecxz
push
rcrl
jmp
lcall
das
sub
loopne
pop
das
mov
aaa
or
das
lret
in
mov
inc
cmp
dec
add
cmpl
mov
lock
lds
test
mov
ret
loopne
sub
lea
gs
inc
xchg
imul
and
fdivl
lods
sbbb
add
push
das
inc
add
aam
loopne
jge
sbb
nop
sub
insl
rolb
cs
add
add
sub
add
add
sub
sub
test
ljmp
outsl
jns
add
in
mov
out
add
rolb
sbb
bound
add
jb
mov
mov
mov
push
add
andb
scas
add
cmpsl
sbb
cmc
das
adc
pop
add
adc
adc
lcall
mov
or
adc
xchg
inc
or
lcall
dec
mov
push
addl
cmp
mov
inc
adc
or
out
mov
shl
mov
jle
or
fs
push
lcall
jmp
in
insb
pop
rcrb
add
das
mov
adc
ret
movsb
dec
loop
add
sub
add
mov
add
add
pop
out
mov
mov
popa
sub
pop
outsb
add
mov
inc
mov
inc
out
fs
lret
pusha
dec
pop
push
out
and
and
bound
pushl
xor
and
and
shll
add
cmp
sub
and
sub
pop
addb
addl
sbb
ret
pop
lcall
out
pop
fs
sub
mov
add
mov
pop
xor
add
mov
js
add
loop
mov
xchg
roll
sbb
push
test
mov
testl
imul
add
add
idivl
add
cli
and
lret
shll
and
rorb
pop
inc
push
fcompl
add
lcall
es
in
pusha
pop
loopne
inc
and
or
imul
loopne
inc
inc
push
stos
lret
mull
insb
ud0
in
aam
lcall
add
lcall
push
sti
adc
pop
mov
xchg
jecxz
out
aam
out
or
add
adc
inc
repz
mov
add
add
iret
adc
sbb
or
fwait
movsb
mov
or
fwait
stos
lds
rorl
and
fildll
addb
push
fs
sbb
bound
lahf
pusha
sbb
pop
lcall
lea
adc
and
mov
cli
xor
loopne
cld
mov
adc
mov
sub
pusha
mov
stos
pop
sbbb
xor
in
inc
int3
pusha
xorb
rolb
inc
and
pop
adc
mov
rolb
push
sahf
add
movsb
aam
xchg
xchg
sub
mov
std
aam
fwait
in
mov
pop
lds
mov
pusha
mov
mov
adc
mov
jp
adc
xlat
add
in
daa
in
add
aam
xchg
lds
add
sbb
out
mov
mov
adc
sbb
add
mov
loope
pop
adc
addl
ret
bound
add
mov
pusha
push
pusha
adc
add
adc
jecxz
ds
loopne
dec
addl
push
and
add
push
mov
es
xlat
mov
insb
push
pusha
add
and
add
lcall
bound
fwait
or
push
add
mov
add
add
movsb
add
add
rcl
stos
cltd
fwait
jmp
in
lcall
lret
push
test
add
add
ljmp
test
mov
inc
sub
popa
pop
outsb
add
scas
xor
adc
das
lock
sub
inc
mov
xor
out
pusha
push
pop
out
xor
addr16
push
fsubrl
mov
mov
mov
stos
cmp
stos
cmp
out
push
adc
mov
pusha
add
das
sbb
int3
xchg
add
test
stos
xor
jmp
pop
jecxz
and
bound
stos
adc
or
cli
cmpsl
and
fwait
test
jo
nop
inc
bound
add
inc
pop
mov
mov
push
xchg
sarb
sub
pop
sub
and
mov
push
xor
addl
aam
rcll
stos
adc
add
add
mov
gs
adc
adc
lods
add
shlb
iret
rorb
rolb
cmp
fs
fwait
lret
jecxz
ljmp
outsb
sub
popa
popf
pop
fsubrl
mov
add
add
sub
in
and
add
fs
add
loop
scas
outsb
sub
add
sub
scas
xchg
inc
addl
mov
pusha
fwait
xchg
mov
xchg
or
ljmp
fwait
jmp
call
pop
dec
xchg
add
scas
aam
daa
jecxz
bound
pop
add
adc
insb
adc
popa
add
lcall
and
add
mov
adc
popa
add
mov
andl
pshufw
adc
insb
xchg
out
mov
xchg
mov
and
out
nop
add
adc
and
pusha
inc
mov
pop
adc
mov
add
stos
sti
out
mov
bound
adcb
jmp
out
xchg
jmp
pop
jmp
add
insb
xchg
incl
fs
jecxz
data16
out
sahf
push
add
sbb
mov
pop
mov
loopne
xor
add
aam
cltd
std
les
add
loope
in
loopne
mov
or
add
adc
lock
jns
add
cmp
outsb
xor
test
mov
add
lcall
mov
lcall
pop
mov
call
mov
mov
cmpb
mov
loopne
popa
popa
add
add
mov
add
push
rcll
jo
ret
lret
out
fwait
repnz
dec
out
pop
subb
sub
xor
and
jno
mov
lock
icebp
push
lods
mov
add
pop
xchg
jo
add
repnz
andb
loope
and
addr16
pop
pusha
add
pop
out
push
in
mov
mov
lret
scas
loope
mov
adc
cmp
jno
xchg
clc
inc
pop
cmpsl
roll
loope
out
xor
jecxz
xor
stc
adc
aas
xor
shrb
fs
lcall
rolb
mov
pusha
add
xorl
add
data16
repz
pop
push
adc
popl
mov
add
aam
lcall
data16
iret
mov
lcall
fwait
adc
jmp
push
inc
rorb
les
mov
stos
repz
pop
mov
or
mov
xchg
lret
jae
push
repz
in
add
nop
or
adc
xchg
or
or
or
or
add
or
fwait
or
fwait
iret
xchg
or
ja
xchg
or
loopne
lcall
add
add
nop
adc
xor
push
mov
and
insl
jmp
adc
xorb
push
mov
add
xor
icebp
sub
stc
inc
add
subb
add
lods
add
xor
repnz
add
ljmp
shll
mov
data16
inc
data16
addr16
adc
add
loop
add
fldt
stos
and
mov
or
adc
in
popf
xor
in
pop
out
nop
add
out
mov
xchg
ret
add
mov
mov
or
or
or
or
pop
aad
loop
fwait
icebp
mov
pop
add
adc
mov
fwait
test
add
mov
out
scas
jecxz
or
pop
nop
sub
sti
nop
inc
push
push
pop
faddl
xor
sbb
testl
mov
bound
bound
pop
add
test
mov
out
jmp
ja
rcrb
pushf
add
fwait
mov
mov
add
jecxz
add
xchg
adc
mov
add
lock
sbb
test
in
add
in
lods
add
ljmp
pop
out
xorl
or
stos
adc
xor
sub
rolb
jo
adc
adc
adc
mov
add
sti
fs
mov
add
add
add
lock
add
les
cmpl
and
pop
mov
cmp
addb
mov
add
add
aam
jb
sub
jp
stos
adc
mov
pop
mov
pop
push
add
pop
orb
inc
push
push
add
lcall
xchg
add
push
out
out
add
pop
sub
sub
data16
pop
bound
add
pop
fcompl
fs
aam
xor
fwait
cwtl
add
adc
scas
add
pop
xorb
idiv
scas
add
add
adc
adc
lcall
adc
adc
pop
mov
mov
adc
add
fwait
rcr
xor
lcall
sbb
jmp
add
ljmp
fs
aam
add
add
lods
insb
sub
aam
add
popf
adc
pop
add
add
sub
add
test
push
or
add
outsb
mov
add
rcrl
rcll
roll
add
cmp
mov
mov
dec
stos
sti
sarl
in
es
fxam
dec
jno
lock
xor
iret
in
fidivs
dec
jno
add
mov
mov
es
mov
sahf
add
mov
add
mov
or
dec
add
shll
in
jno
and
sbb
testl
rcll
mov
or
add
out
popa
mulb
in
sbb
lcall
cmp
fwait
movsl
dec
out
test
push
add
push
add
push
add
in
loope
or
popa
xorb
and
xor
popw
in
mov
stos
lret
roll
jo
push
addl
add
sbbb
add
push
lea
in
jbe
and
sbbb
adcl
xlat
jo
and
cmpl
out
dec
popl
sbb
cltd
movsl
dec
movsl
dec
or
xorb
cmp
mov
xchg
hlt
or
cmp
add
bound
push
add
adc
outsb
add
add
orb
add
mov
and
xchg
jmp
add
bound
add
push
add
inc
add
push
mov
or
add
das
mov
add
pop
fwait
jecxz
pop
lret
pop
add
add
das
es
mov
adc
adc
es
leave
add
in
lods
ret
adc
nop
add
ret
or
add
add
sub
add
add
jnp
add
add
lahf
or
enter
loop
out
xor
imul
mov
dec
push
jle
add
sub
in
add
mov
cs
or
pop
inc
add
xchg
add
or
sbb
clc
add
lahf
std
es
outsb
mov
addr16
rolb
add
or
add
lods
rol
nop
pop
stos
or
rcrl
lock
int3
mov
push
addb
lods
or
insl
inc
nop
dec
adc
push
jae
outsb
pop
or
outsb
mov
sbb
add
mov
fimuls
inc
iret
loop
or
push
add
sbb
gs
pop
pop
fs
mov
add
mov
mov
add
inc
data16
pop
fdivrs
adc
sti
ret
add
sub
imul
add
jmp
or
inc
sub
pop
xor
cli
inc
add
pushf
bound
bound
adc
mov
adc
insb
pop
out
inc
lcall
xorb
adc
add
test
add
pop
mov
bound
add
add
add
bound
insb
daa
adc
pop
and
pop
outsb
lods
add
sub
stos
adc
popa
jns
js
mov
inc
lcall
sbb
mov
push
iret
pusha
mov
pop
inc
pusha
xchg
pusha
add
mov
add
mov
adc
mov
loopne
loopne
add
in
add
push
mov
loopne
imul
add
sbb
mov
cmp
imul
adc
pop
and
jecxz
adc
push
jl
add
andl
pop
adc
lahf
incl
mov
adc
das
fwait
andl
bound
push
or
rcrl
bound
mov
pop
push
add
lods
test
mov
push
shlb
test
and
sti
dec
add
loopne
lds
pusha
add
add
and
adc
and
out
adc
loopne
cmpsl
adc
add
enter
and
add
push
sub
test
test
xchg
outsl
mov
fsubp
adc
test
push
mov
sbb
add
popa
pcmpgtw
adc
mov
jnp
bound
aas
inc
jb
xchg
inc
add
bound
jae
inc
imul
rclb
ret
cmp
bound
push
push
sbb
adc
add
cmp
fisubl
add
lods
add
out
lods
and
in
adc
jnp
inc
dec
and
out
adc
inc
sbb
sub
outsb
bound
add
orl
test
test
push
daa
add
mov
or
and
inc
xchg
inc
outsl
adc
imul
fisubrl
xchg
sti
scas
add
daa
rcll
adc
inc
mov
or
add
cmp
cld
sbb
addb
push
mov
loopne
push
fwait
jmp
add
scas
sbb
shll
add
xchg
out
sub
out
add
sbb
sahf
sbb
push
adc
pusha
xchg
pop
out
mov
sub
addb
cli
sbbl
fs
out
adc
out
jcxz
add
add
data16
add
jmp
add
lret
and
mov
loope
fwait
icebp
mov
xchg
in
add
mov
iret
fwait
out
cli
addl
add
adc
aaa
loopne
and
mov
jecxz
and
add
mov
add
sub
fs
xchg
orl
and
data16
cli
pop
loope
shrl
push
pusha
or
loopne
imul
and
insb
xchg
pop
in
add
les
or
les
inc
out
xchg
pop
out
add
out
mov
add
loopne
stos
pop
insb
pop
add
nop
repz
cli
cmpsl
cmpsl
fwait
add
xor
iret
insb
pop
jmp
fwait
hlt
cmpsl
lcall
pop
add
insb
pop
loope
fwait
icebp
cmpsl
fwait
stc
cmpsl
fwait
in
cmpsl
lcall
mov
add
jb
pop
add
jo
inc
add
adc
data16
bound
cli
mov
mov
add
loop
loopne
scas
fwait
testl
push
inc
add
add
cmp
add
add
mov
les
add
lcall
cli
pushl
add
sub
and
ret
add
mov
in
mov
cs
and
xor
ffreep
mov
push
fwait
iret
andl
add
sub
fnsave
dec
ret
jmp
addb
int
add
add
addb
xor
add
addb
push
add
adc
mov
sub
pop
fs
adc
imul
sub
mov
adc
les
inc
add
pop
add
cwtl
ret
lcall
and
or
nop
fsubrl
imul
imul
fs
adc
lock
mov
push
leave
add
mov
mov
lock
mov
sti
fs
outsb
adc
jo
fwait
adc
outsb
adc
jno
out
adc
jo
lcall
test
repz
adc
aam
lahf
nop
or
fwait
shl
pop
mov
adc
sub
jmp
cs
mov
inc
ja
xchg
pusha
adc
loopne
testb
nop
add
sub
imul
add
add
pop
fs
addb
shlb
sub
add
jo
out
mov
test
adc
cmp
int3
test
jge
and
mov
mov
das
push
add
add
inc
pop
mov
dec
mov
adc
testl
data16
testl
pusha
push
loopne
imul
add
pop
lock
add
fwait
cwtl
insb
adc
add
insb
push
out
or
fwait
into
rorb
pusha
add
fwait
rcl
mov
fwait
rorb
add
addb
out
push
add
and
mov
dec
add
fs
adc
lcall
les
add
jb
loope
adc
add
pop
push
or
push
or
std
nop
add
cmp
sub
cwtl
loopne
add
mov
add
adc
dec
jb
add
test
lcall
lcall
or
add
mov
shl
or
sub
scas
lret
add
add
add
jo
add
insb
adc
fwait
rorl
loopne
cmpsb
rolb
insb
adc
xchg
add
adc
fwait
icebp
insb
adc
cli
loopne
fldenv
add
push
outsl
push
add
push
mov
mov
add
adc
add
push
fs
or
sub
add
imul
add
lret
out
sbb
hlt
das
lret
push
add
fists
nop
push
add
mov
or
sti
and
fs
add
addb
test
mov
or
mov
xchg
sbb
fwait
lds
sbb
fs
inc
incl
sub
and
insb
or
jmp
rolb
xor
push
loopne
adc
data16
sbb
aam
lcall
mov
mov
and
and
data16
or
adcb
popa
dec
loop
jmp
inc
rorl
loopne
xchg
pusha
das
data16
in
fwait
jmp
test
add
sbb
fwait
adc
mov
and
inc
insb
mov
iret
mov
scas
adc
add
add
insb
mov
mov
pushl
jnp
mov
jo
adc
push
bound
xchg
pop
test
mov
pop
insb
das
sbb
xchg
adc
cwtl
fisttpl
dec
lret
push
add
add
add
ds
test
outsl
lcall
jo
ljmp
push
fwait
ret
xchg
mov
add
inc
scas
fwait
int3
aam
loopne
fwait
cli
test
inc
add
adc
mov
nop
test
stos
add
shlb
add
fs
push
push
fwait
shlb
jmp
cmp
add
add
aam
fwait
jmp
call
mov
fs
add
outsb
xchg
out
xor
xor
push
mov
loopne
imul
mov
inc
rcll
adc
daa
sbb
xchg
push
ficoml
jecxz
adc
in
lock
out
lcall
push
or
adc
add
les
dec
jecxz
les
inc
das
in
pop
add
fs
out
xchg
sbbb
fwait
loope
mov
xchg
dec
add
adc
repnz
xchg
cmp
xchg
mov
adc
pop
gs
andl
rclb
dec
bound
scas
fwait
popa
add
xchg
mov
arpl
fimull
or
rorl
jmp
and
xchg
insl
add
add
or
and
pop
roll
aaa
mov
or
jbe
add
add
add
imul
push
jmp
daa
mov
add
inc
incl
sbb
adc
pop
and
cmc
fs
add
and
pop
inc
and
mov
sub
adc
imul
add
pop
ja
adc
shlb
xor
int3
gs
add
out
add
data16
sub
das
add
adc
jecxz
and
mov
jno
movsl
nop
xchg
and
stos
lret
xor
data16
out
mov
cmp
scas
add
add
pop
out
lods
add
mov
stos
pop
incb
das
fwait
shll
incl
fcompl
aam
lcall
xor
mov
pop
loopne
adc
mov
mov
sub
iret
scas
add
mov
cli
outsl
add
xchg
pop
lcall
cmp
das
add
add
lret
mov
scas
pop
push
addl
xlat
add
loop
add
add
lcall
mov
inc
add
adc
fsubrl
mov
mov
sub
ljmp
add
das
sub
lret
inc
push
test
xchg
push
lods
and
push
leave
fs
out
pop
push
inc
fwait
iret
mov
aaa
push
das
lcall
bound
sub
lret
push
insb
xchg
lret
jmp
inc
fwait
add
adc
inc
test
test
add
outsl
add
sti
test
jmp
push
testl
fwait
lret
out
adc
add
fs
mov
adc
sub
add
fwait
xchg
inc
mov
lcall
lcall
lcall
subl
mov
sti
add
add
adc
dec
lods
add
pop
movsl
mov
add
sbb
add
in
sub
sti
bound
pop
scas
jmp
int3
add
pop
pushf
hlt
add
in
sbb
adc
inc
jge
pop
ljmp
mov
sub
fsubrl
scas
sub
test
das
pop
ret
and
sbb
mov
out
add
fs
insb
mov
add
shrl
dec
add
add
test
inc
add
dec
addb
data16
push
loopne
arpl
inc
add
jecxz
ss
add
out
sbb
hlt
das
int3
add
mov
les
fs
roll
aam
fwait
mov
insb
adc
xchg
add
ds
xchg
ljmp
or
fs
add
loopne
mov
add
adc
add
add
cld
in
ds
out
popf
stc
shrb
aam
cwtl
loope
fs
jecxz
aad
aad
add
data16
xchg
call
stos
add
add
in
mov
add
or
xor
mov
inc
xor
xchg
add
fdivl
mov
adc
fs
fistpll
test
add
mov
adc
ret
rorb
paddq
fwait
mov
mov
jle
daa
data16
fiadds
mov
sysret
xor
add
cmc
mov
xor
lcall
inc
add
or
add
adc
xlat
mov
lcall
add
push
ret
or
stos
inc
lds
cmovno
fs
inc
cmovge
out
add
xchg
add
inc
pop
test
in
sub
add
ffreep
mov
insb
xchg
jmp
add
lcall
mov
pusha
sub
pop
loopne
mov
xor
in
add
data16
or
xor
addb
xchg
call
add
add
add
das
in
mov
jecxz
add
mov
insb
sub
insb
stos
or
jmp
aas
insb
sub
add
movsl
xchg
sub
mov
adc
mov
rclb
sub
fs
add
and
loopne
sti
cltd
nop
test
adc
jmp
cs
add
xchg
lock
testl
lcall
jecxz
ljmp
stos
or
add
insb
das
jmp
xor
push
loopne
add
adc
or
pop
arpl
push
sub
mov
cli
add
push
pop
in
add
aam
mov
fstl
pusha
xchg
inc
pop
imul
or
addb
add
adc
adc
add
mov
addb
cli
arpl
add
dec
dec
and
xchg
adc
and
loopne
pop
repnz
roll
push
aas
call
filds
sarb
loope
fs
sub
daa
bound
sti
add
add
mov
in
cli
add
adc
sarb
inc
adc
mov
popa
push
add
bound
jecxz
pop
or
loop
lret
loop
add
add
add
mov
ret
adc
adc
popa
xchg
leave
sbb
sbbb
dec
adc
mov
pop
fsubrl
and
rorb
mov
pop
andb
add
push
mov
or
lea
cmp
fwait
pusha
es
cmpb
mov
imul
mov
movsl
or
imul
add
rolb
loopne
pop
shlb
and
insb
rolb
push
add
imul
ljmp
lret
push
add
subl
pop
adcb
add
stos
lret
orl
pop
mov
push
mov
mov
dec
add
and
fs
adc
mov
pusha
xor
lods
add
mov
nop
bound
addr16
adc
inc
or
fwait
lret
rep
sub
sub
mov
add
mov
add
dec
es
rolb
add
hlt
fwait
mov
add
xchg
mov
mov
or
mov
inc
add
mov
loope
mov
loope
pusha
arpl
mov
add
add
ret
out
lcall
out
ret
scas
subb
mov
int3
add
iret
popf
fsubl
mov
mov
mov
adc
mov
push
jns
call
add
inc
add
add
xchg
out
addb
sub
shll
inc
das
insl
mov
fwait
in
insb
adc
fwait
ljmp
add
fs
add
fwait
mov
fwait
inc
repnz
pop
jmp
lcall
mov
sbb
pop
add
mov
out
xchg
sbb
ret
inc
xchg
inc
or
and
rorb
push
daa
push
add
adc
jmp
aad
add
nop
push
adc
mov
rcrl
adc
push
and
rcrl
jmp
jno
add
mov
sbb
icebp
cltd
sarb
adc
add
and
sbb
add
jo
or
std
es
add
add
add
fs
data16
add
mov
add
fs
push
in
insb
sub
jmp
and
adc
mov
add
sub
adc
test
cwtl
jmp
jecxz
pop
jmp
and
add
cmp
jo
add
shrb
mov
add
in
stc
data16
adc
xor
inc
add
fldl
mov
pop
fs
adc
mov
insb
pop
scas
popf
add
test
test
jecxz
mov
adc
addb
add
pop
out
mov
sub
add
add
fwait
sti
outsl
push
in
lcall
out
push
jmp
add
insb
int
cmpsl
fbld
scas
scas
aad
pushf
in
gs
pop
das
inc
aas
out
pop
pop
add
push
ss
out
mov
loopne
lcall
fwait
loope
add
inc
daa
loopne
pop
loopne
add
pop
stos
adc
mov
inc
stos
jecxz
pop
xor
in
sbb
sbb
add
data16
pusha
aam
loopne
ja
push
add
inc
js
sti
insb
mov
add
add
insb
xchg
incl
cltd
leave
fs
jecxz
push
in
sub
sub
mov
sbb
pop
test
out
and
out
add
out
mov
aam
lcall
add
scas
in
mov
lcall
jmp
scas
lods
aam
popf
and
add
shr
outsl
add
add
cli
shr
lcall
pop
in
mov
or
xor
pop
mov
es
adc
add
adc
mov
add
aaa
xchg
or
mov
mov
add
mov
pop
aam
loopne
jo
add
add
mov
add
adc
mov
shll
sub
add
stos
sti
xchg
add
xchg
sbb
sbb
xlat
jecxz
add
mov
xchg
push
loope
add
add
test
xchg
incl
xchg
sbb
jmp
xchg
pop
aam
pop
add
in
jo
insb
xchg
lldt
pop
xchg
in
lods
add
jmp
mov
add
sub
add
test
inc
add
les
scas
lods
mov
add
fs
add
pop
loopne
lods
lcallw
sbb
add
add
jmp
mov
xchg
repz
bound
mov
jmp
inc
mov
pusha
pop
sbbb
stos
aaa
roll
add
mov
fsubrs
push
or
in
mov
mov
rolb
mov
adc
addr16
outsb
in
xchg
add
data16
sbb
aas
aam
sub
lods
nop
test
ds
fs
mov
add
add
insb
xchg
sbb
fwait
sti
add
add
in
add
add
lock
stos
sbb
mov
sbb
mov
adc
add
jno
xor
xor
mov
adc
arpl
pusha
mov
lods
add
or
jno
sbb
cmpsl
mov
repz
and
fs
add
adc
adc
add
stos
adc
data16
das
data16
pop
aam
loopne
bound
sbb
daa
mov
add
adc
pop
add
adc
loopne
arpl
add
jo
stos
aas
test
mov
adc
sbb
xchg
cs
sbb
and
xchg
add
fs
add
pop
mov
add
fs
out
xchg
sbb
lcall
loopne
rcrb
jecxz
fs
pop
push
mov
loope
test
lcall
stos
daa
sub
clc
xor
cmp
sub
xor
mov
add
mov
aad
adc
rclb
add
add
stos
clc
lcall
stos
daa
adc
xchg
aaa
add
add
sub
add
sub
add
aam
setns
gs
adc
gs
clc
add
add
add
fwait
ljmp
outsl
loopne
addr16
adc
out
andb
test
jno
imul
outsl
xchg
cmp
add
fwait
lock
xchg
adc
add
add
add
and
addr16
adc
andb
test
mov
adc
addr16
mov
sub
movsb
sbb
cwtl
dec
pop
pop
inc
rorb
in
pop
orb
inc
add
adc
lcall
and
nop
adc
adcb
stos
adc
jae
pusha
test
adc
in
xorb
add
adc
sbb
stos
add
add
insb
cmpb
aam
stos
das
loopne
xchg
adc
insb
stos
inc
pop
xor
pop
insb
andb
add
loopne
mov
rcl
or
int3
xchg
pop
ret
jmp
sbb
sarl
pop
loop
dec
rcrb
and
loopne
adc
cmp
xor
in
data16
push
cmp
addl
jb
or
add
mov
mov
repz
lcall
pusha
aam
call
add
push
les
aas
aam
sbb
jo
xchg
sbb
sbb
cmp
ret
in
es
mov
inc
fs
pop
loopne
les
pop
fs
sub
in
aaa
out
pop
data16
or
cmp
push
aas
call
adc
cmp
sbb
add
cmp
addr16
cmp
adc
or
pusha
cmp
pop
data16
pusha
cmp
mov
push
adc
cmp
pop
add
lock
insb
and
rolb
mov
jge
out
mov
xor
dec
jo
pop
out
or
and
stos
adc
cmpb
sbb
cmp
mov
mov
stos
sti
loopne
lea
add
adc
mov
sub
sub
add
mov
add
cmpsb
repz
add
fs
in
daa
in
adc
add
add
stos
adc
data16
push
data16
add
add
loopne
or
add
les
daa
add
add
fs
push
mov
aas
or
bound
xor
add
stos
and
add
data16
in
inc
data16
pop
fs
daa
add
aaa
add
loopne
mov
mov
mov
adc
add
adc
inc
mov
mov
sbb
add
insb
mov
add
pop
add
or
add
loope
sub
add
lcall
sub
sub
clc
out
add
xchg
mov
xchg
pop
add
lcall
xor
loopne
add
add
adc
xchg
inc
or
lcall
or
jo
adc
stos
or
adc
in
insb
xchg
cmp
andb
nop
push
add
subb
fs
add
aam
or
stos
andb
add
addb
add
xchg
adc
jmp
cmc
outsl
loopne
add
loope
pop
aas
cs
adc
stos
loope
inc
adc
data16
outsl
xchg
clc
add
loopne
jne
add
outsl
add
out
xchg
aas
add
add
add
mov
push
add
movb
lods
stos
xor
and
push
andb
add
jecxz
add
lcall
das
sub
lcall
mov
add
adc
pop
push
lcall
add
sub
orb
call
stos
adc
stos
adc
jns
ret
add
pop
sbb
sub
rorb
insb
stos
pop
jmp
pop
insb
andb
aam
adc
arpl
add
rolb
andb
add
loopne
arpl
rolb
sub
add
add
test
das
adc
jl
mov
xchg
add
mov
cmpb
add
or
pcmpgtb
aam
loopne
outsl
addb
cs
in
addb
mov
mov
bound
pop
rolb
fs
shrb
aaa
fs
pop
roll
in
movsb
fs
adc
aam
call
add
jecxz
lcall
xchg
sbb
jmp
xchg
sbb
xchg
adc
inc
xchg
xchg
sbb
jg
out
add
add
insb
add
ljmp
or
in
test
sti
xchg
add
xchg
add
les
mov
lods
mov
fs
and
loopne
lods
lcallw
sbb
add
data16
add
xchg
repz
bound
mov
loopne
mov
mov
ja
stos
xor
or
fs
jecxz
fsubs
adc
andb
in
mov
in
insb
sub
mov
jmp
daa
ret
adc
add
add
adc
and
or
insb
sub
inc
push
add
add
lods
fs
adc
ds
and
cmc
rolb
cli
inc
insb
xchg
pop
adc
adc
fs
add
fstpt
aam
aaa
xchg
or
pop
adc
rorb
xchg
aas
adc
mov
insl
inc
cmp
cmp
subb
addl
subl
push
subl
inc
andl
add
adcl
sbb
cmp
xorl
add
adc
lcall
push
pop
loopne
inc
mov
and
and
add
pop
data16
cmp
jbe
outsl
cld
add
push
xchg
mov
add
stos
aaa
mov
aaa
mov
mov
stos
cld
inc
jge
addl
jmp
jg
add
test
stos
setns
xchg
mov
inc
stos
xor
push
add
jg
ljmp
cmpb
aas
cs
icebp
out
add
incl
test
icebp
in
loopne
sub
sub
outsl
xchg
cld
pusha
orb
push
fsubs
ljmp
inc
jg
jecxz
fs
and
or
add
data16
mull
and
adc
and
sub
icebp
adc
and
pop
mov
mov
push
sub
pop
or
paddsw
pop
icebp
mov
loope
out
popa
subl
loopne
insb
stos
pop
pusha
addl
pusha
add
jecxz
add
jmp
push
mov
in
lcall
sti
cltd
iret
fs
fdivrl
add
scas
out
stos
out
loopne
test
in
aaa
aam
add
popf
pcmpgtb
sti
gs
in
stos
jecxz
add
and
out
lcall
mulb
add
sbb
sub
in
addb
mov
cld
outsl
rclb
lcall
loopne
inc
in
test
data16
jecxz
adc
fwait
adc
adc
add
leave
loopne
add
mov
mov
cmp
add
in
add
loopne
sahf
sub
aam
loopne
testb
aas
loopne
cmp
mov
mov
cmpb
add
data16
data16
aas
inc
push
les
test
pushf
pusha
ljmp
inc
popa
pop
add
nop
in
add
add
loopne
fwait
daa
inc
add
and
loopne
add
loopne
pop
scas
in
mov
popa
iret
adc
or
inc
or
mov
mov
movb
inc
or
inc
or
loopne
test
shll
and
lcall
add
pop
loopne
cwtl
inc
fucomip
stos
pop
in
mov
sub
mov
loopne
outsl
xchg
shrb
data16
push
sbb
mov
lcall
push
sbb
in
daa
data16
pushf
mull
les
daa
in
and
out
aad
sbb
push
inc
add
inc
das
popf
out
add
cwtl
jecxz
sbb
aas
push
add
add
in
lcall
add
xor
mov
in
aas
aam
pushf
bnd
add
pop
in
push
lcallw
das
mov
jb
lcall
popf
add
mov
cltd
and
rclb
mov
loopne
fyl2x
add
sbb
xchg
add
lcall
push
cld
insb
das
jmp
add
jae
aas
or
sbb
or
adc
add
add
insb
nop
mov
out
stos
adc
add
inc
xor
stos
out
fisubs
push
stos
add
out
jecxz
lcall
adc
or
imul
fs
add
add
xor
jns
mov
sub
jmp
mov
pop
mov
jmp
add
mov
jmp
mov
push
bound
cmpsl
jecxz
loopne
lcall
mov
add
mov
xlat
cmpsl
fwait
iret
add
mov
add
and
mov
add
pop
jns
adc
adc
pop
add
sbb
cld
dec
add
xor
or
push
fwait
loop
mov
and
or
xchg
out
adc
push
inc
adc
mov
pop
push
mov
add
xor
ljmp
fsubrl
mov
test
bound
out
cs
push
mov
loope
jo
out
add
adc
push
xor
lcall
ljmp
fcompl
adc
aaa
adc
add
xchg
mov
es
ds
adc
inc
add
fwait
pop
fs
in
fs
lret
out
out
sub
mov
add
adc
call
lods
add
fs
and
scas
inc
pusha
jge
sbb
imul
out
data16
mov
mov
jo
test
xchg
adc
and
lods
loopne
loopne
add
adc
cmp
ljmp
mov
add
or
sti
mov
mov
add
mov
ljmp
sbb
lock
mov
mov
in
addr16
loopne
inc
cs
in
and
or
adc
rolb
test
bound
mov
addr16
jo
addr16
int
cmp
jp
addr16
add
pop
lcall
out
xchg
add
sub
stos
pop
push
inc
sub
and
cli
cmp
add
pusha
add
adc
mov
bound
lret
inc
mov
cmp
bound
lock
lock
pop
sub
add
lock
pop
pop
add
add
fidivrs
adc
gs
scas
loopne
test
test
push
insb
fwait
mov
pop
lret
test
adc
stc
adc
cli
bound
push
adc
jmp
add
out
cwtl
mov
add
adc
inc
cli
add
add
fmull
sbb
sbb
add
cltd
push
jmp
add
adc
leave
nop
push
cltd
testl
inc
pop
push
jo
mov
sub
jo
mov
adc
adc
sbb
add
add
jmp
cs
add
cmp
or
cs
out
push
out
cs
and
popa
adc
pop
scas
pusha
cmp
push
fwait
pushl
add
ret
add
add
pop
out
add
and
movsb
xor
outsb
add
adc
sbb
jecxz
add
scas
scas
add
add
loopne
adc
add
xchg
scas
cwtl
hlt
add
daa
mov
or
test
jmp
mov
push
inc
stos
and
pop
test
add
and
add
and
stos
add
xchg
adc
and
add
add
or
aas
add
push
mov
or
add
adc
and
loopne,pn
ljmp
jo
mov
push
in
loope
fdiv
add
test
bound
adc
pop
loop
and
xor
in
fs
push
add
ud0
aas
add
adc
cs
out
or
in
inc
mov
fistl
or
cmp
add
pop
rcrl
cmpsl
loopne
int
add
or
stos
adc
movntq
nop
add
fs
jp
adc
jmp
and
add
addr16
or
adc
mov
es
and
jmp
pop
lcall
xor
imul
inc
add
and
pop
movsb
out
outsl
sbb
lods
lock
pusha
inc
jae
fs
in
add
xchg
adc
add
or
mov
and
push
call
fs
cmp
pop
test
or
iret
mov
dec
mov
adc
stos
dec
push
add
add
test
bound
aam
or
orb
pusha
stos
mov
xchg
inc
int3
je
pushl
add
stc
scas
add
inc
adc
push
xor
daa
mov
bound
and
add
rolb
adc
mov
add
cmp
mull
outsl
lcallw
mov
imul
xchg
and
inc
fsubrl
pop
add
insb
pop
adc
loopne
push
mov
inc
cli
scas
add
mov
add
ljmp
in
test
adc
add
cs
jecxz
out
mov
insb
mov
add
or
adc
and
mov
out
mov
add
call
sub
pop
jo
aad
push
imul
add
roll
fs
pushl
pop
lcall
out
out
and
adc
pop
loopne
lock
out
out
mov
adc
xor
popf
jns
xor
loopne
les
cmp
lret
jo
add
repnz
push
xor
xor
dec
adc
enter
cs
or
xchg
stos
adc
and
rolb
cmpsl
xor
sub
arpl
and
cmpsl
loopne
dec
add
add
jmp
add
add
add
add
or
imul
sub
mov
popl
pop
mov
lret
adc
andb
jmp
sub
ljmp
add
add
add
pop
out
or
data16
sub
pop
add
popf
int
adc
xor
loopne
cmc
add
fcoml
lcall
push
in
adc
fs
inc
adc
add
push
and
adc
ss
out
sahf
ljmp
rolb
ss
addb
mov
stos
push
out
add
sbb
test
fcoml
push
add
outsl
add
add
das
mov
loopne
stos
cmp
stos
push
lcall
or
ljmp
stos
aaa
mov
outsl
push
out
outsl
or
fwait
leave
imul
fsubl
add
mov
cmpsb
insb
orb
insb
cs
add
or
inc
jecxz
cs
push
add
jmp
outsl
or
insb
cs
or
sbb
add
outsl
push
add
lret
in
aad
fwait
faddl
das
imul
jnp
cmpsl
insb
add
das
scas
in
sbb
stos
pop
out
out
xchg
outsb
inc
and
out
add
add
addr16
test
add
adc
pop
nop
stos
sbb
mov
add
adc
adc
xchg
call
pop
add
filds
add
xchg
jnp
loopne
das
loopne
add
add
js
aas
fs
cs
push
ljmp
add
in
add
sub
dec
add
adcb
adc
cs
adc
adc
push
out
stos
mov
rolb
mov
push
push
sbbb
pop
and
add
add
cmp
out
xchg
and
sbb
faddl
adc
and
mov
fs
add
mov
ljmp
insb
das
out
xchg
pop
popf
add
add
lcall
mov
bound
iret
adc
inc
sahf
adc
add
add
and
dec
inc
push
push
movl
out
adc
add
aas
inc
or
in
bound
hlt
test
pop
addb
sbbb
insb
mov
adc
mov
push
out
in
mov
cmpsl
mov
cmpb
pop
or
in
bound
sbb
add
xchg
rorb
sbb
pop
pop
sub
ret
ds
add
add
das
push
add
adc
cmpsl
pushf
mov
add
cs
in
data16
fs
fs
cs
add
adc
and
rol
sbb
int3
sub
lods
add
ljmp
in
data16
mov
mov
mov
inc
movsb
cmpsl
popf
pop
add
ret
add
mov
int3
sbb
adc
out
sbb
mov
in
data16
ret
xchg
repz
push
adc
or
xchg
rcl
out
fiaddl
call
lods
add
cli
and
and
cmpb
out
and
sarb
pushf
or
pop
hlt
shlb
mov
add
sub
shrl
in
push
outsb
loopne
sub
bound
and
inc
pop
fwait
test
adc
fwait
jecxz
add
fwait
jmp
lcall
fwait
mov
inc
push
addl
pop
add
stos
add
pop
bound
pop
out
pop
xor
adc
add
lods
scas
add
mov
xchg
sti
add
sti
adc
lret
incb
scas
add
test
pop
xchg
add
mov
adc
dec
adc
add
add
mov
in
lcall
add
incl
add
gs
movsb
fdivrl
add
rol
lcall
das
outsl
push
add
xchg
clc
mov
add
pop
in
add
cs
inc
fnstsw
add
loopne
in
or
shlb
in
fwait
or
xchg
popa
inc
addr16
sub
out
sub
add
mov
insb
xchg
lret
jmp
mov
pop
out
ret
insb
add
in
rep
push
loop
add
in
xchg
add
in
or
das
subb
in
loopne
adc
pusha
add
push
jecxz
add
push
fwait
and
push
push
sub
add
add
xchg
rep
push
and
add
cltd
add
and
das
stos
lret
jecxz
add
mov
out
add
sti
loope
mov
jp
popa
add
movsb
xchg
pusha
add
test
sub
test
rorl
faddl
das
add
aam
lret
out
sbb
sbb
loop
sbb
sub
mov
jecxz
add
fwait
in
add
dec
add
mov
adc
insb
mov
sbb
add
xchg
sti
mov
sub
add
pop
rcrb
mov
push
sarb
pop
add
bound
and
add
cmp
xor
stos
and
pop
push
loopne
fs
out
lods
sti
data16
punpckldq
lods
jmp
stos
add
sub
inc
push
stos
daa
data16
add
fs
add
fs
sbb
in
bound
sbb
fwait
lods
popa
jnp
roll
adc
adc
sub
loopne
jae
sarl
adc
add
pop
ss
add
add
loopne
inc
or
pop
subb
add
mov
loopne
add
add
das
mov
sub
stos
adc
push
mov
pop
cmp
das
fwait
add
mov
loopne
pop
cmpsb
adc
add
pop
add
adc
sbb
fs
cmp
sub
fwait
les
fs
mov
push
lcall
adc
mov
adc
adc
add
sbb
add
das
adc
stos
adc
loopne
notl
enter
aam
popf
cmpsl
push
fistps
roll
add
pop
fcom
out
add
gs
pop
add
loopne
mov
sub
mov
push
mov
addl
sub
int3
mov
les
incl
mov
dec
add
push
pop
pusha
xor
add
and
fs
mov
sbb
sbb
in
mov
adcl
fisttps
out
push
adc
imul
popa
or
popa
or
pusha
or
pusha
or
popa
or
out
push
lcall
ret
adcb
cmpsl
fwait
loope
lcall
pusha
add
test
mov
add
dec
add
add
loopne
in
mov
test
mov
xchg
jg
pop
fs
add
mov
push
das
xchg
stc
adc
sarb
gs
dec
mov
adc
fistl
add
adc
in
insb
stos
sbb
out
stos
pop
jmp
xchg
add
push
outsl
stos
cmp
sbb
adc
insb
mov
add
dec
sub
orb
inc
loope
add
mov
nop
add
mov
out
mov
nop
add
stos
pop
xchg
add
jle
sbbb
lcall
adc
sub
add
rolb
add
adc
add
cli
xchg
add
test
jmp
subb
sub
out
mov
mov
lret
mov
inc
jmp
sub
add
mov
lcall
add
add
add
imul
lcall
imul
stos
adc
loope
movsb
sub
test
shlb
adc
sbb
add
sub
sub
stos
adc
loopne
add
fs
ljmp
sbb
jo
loopne
pop
test
cmpsl
fwait
loopne
and
add
bound
mov
in
lcall
sub
push
or
imul
pop
test
mov
lcall
mov
loopne
adc
and
adc
addr16
push
scas
add
fwait
mov
push
repnz
fwait
cmpsb
insb
and
stc
loopne
pop
and
push
or
fwait
aam
sbb
mov
mov
inc
adc
or
rcl
xor
xchg
xor
add
add
pusha
add
or
lcall
sbb
add
adc
shrb
in
loopne
lock
nop
add
adc
lcall
dec
test
add
inc
add
lahf
add
clc
loopne
repnz
add
adc
add
sarb
mov
or
xchg
loopne
insl
jle
movsl
adc
repz
cmp
cli
arpl
or
push
repz
mov
out
xor
adcb
mov
loopne
and
sbbb
imul
loopne
and
notb
daa
stos
adc
data16
push
pop
sub
sbb
add
fs
jb
repz
fwait
mov
sbb
lods
lahf
add
pusha
add
fs
lcall
xor
hlt
sbb
stc
int3
pop
test
sti
bound
insb
das
add
adc
jecxz
scas
add
jecxz
cmp
gs
adc
test
add
test
popf
jae
add
fs
aas
fisubs
dec
loop
in
mov
pop
and
stc
xor
or
mov
ljmp
lcall
mov
inc
ret
jmp
lock
loopne
in
mov
mov
bound
cwtl
mov
sarl
add
data16
lods
aam
mov
aam
fwait
in
mov
fwait
pop
test
and
or
xor
test
adc
scas
add
mov
data16
adc
test
bound
addb
bound
sarb
pop
insb
sub
bound
test
fistl
cmp
bound
add
adc
fs
jno
imul
imul
addb
adc
and
and
fs
adc
cld
inc
add
mov
out
fwait
jmp
popa
movaps
mov
call
mov
mov
faddl
jno
std
push
add
mov
xor
sbb
adc
ja
xlat
add
filds
mov
cli
adc
lods
aam
mov
fidivrl
adc
and
cwtl
mov
fs
mov
sbb
mov
mov
push
mov
add
add
rorb
add
add
adc
cmp
pop
repz
mov
lods
mov
add
rorb
mov
xchg
loopne
pop
pop
sti
mov
jb
addb
addb
test
fs
data16
adc
mov
out
mov
lcall
and
xor
fs
out
mov
insb
das
stc
rcrb
hlt
adc
pop
inc
dec
nop
jns
adc
insb
sub
faddl
data16
lea
add
pop
fs
es
add
iret
fs
add
insb
cs
sbb
hlt
das
add
cs
insb
das
jmp
sub
hlt
add
fistpl
or
lods
mov
or
inc
add
popf
inc
and
adc
pop
pop
add
adc
mov
es
add
insb
mov
add
xor
xchg
out
push
push
push
xor
jo
pop
sub
cmp
mov
fs
adc
add
stos
sbb
insb
add
out
lcall
lcall
out
add
add
shlb
mov
in
es
aam
shlb
xor
xor
adc
and
and
adc
fs
mov
mov
pop
add
mov
push
and
inc
bound
mov
xchg
verr
jnp
xchg
jnp
fwait
jecxz
stos
setge
add
cmp
sbb
and
sbb
sbb
add
shlb
and
out
adc
scas
and
pop
aad
xor
mov
imul
mov
jo
mov
xchg
shlb
xor
mov
icebp
xorl
push
cwtl
add
cmpsl
sti
add
and
test
and
stos
adc
in
adc
mov
stos
push
or
pop
add
jno
fwait
insb
xchg
add
fstl
stos
add
and
mov
cmp
imul
std
adc
inc
fs
add
jmp
sub
pop
push
inc
std
adc
mov
outsl
add
bound
add
add
mov
add
add
push
outsl
add
outsl
xchg
push
add
loopne
push
adc
adc
test
mov
cli
add
inc
bound
add
mov
das
xchg
leave
fs
test
add
in
faddl
add
pop
push
stos
add
addr16
add
test
fs
jb
add
add
test
bound
pop
cs
outsb
nop
add
xchg
out
addl
add
lcall
stos
adc
mov
add
add
cmpsl
mov
mov
add
pop
add
stos
pop
lods
loopne
popa
out
add
xchg
add
lcall
pop
xchg
add
push
add
add
stos
jecxz
lcall
jmp
loopne
bound
pop
orb
fwait
mov
and
bound
jmp
add
insb
sub
and
mov
inc
add
lcall
sbbb
inc
add
add
jp
sti
andl
push
subb
subb
add
or
orb
orl
add
fs
out
xchg
fiadds
mov
nop
jmp
xchg
loopne
pushf
call
addb
es
add
inc
stos
pop
add
sbb
xlat
aam
ja
sti
adc
add
dec
add
adc
fwait
out
stos
out
pop
fldenv
adc
mov
es
inc
adc
jno
cli
sbb
insb
sbb
aaa
hlt
das
sbb
sub
std
adc
aad
sub
push
or
outsb
add
sbb
add
mov
push
xchg
subb
nop
lret
adc
pop
add
fs
mov
testl
add
lret
fbld
lret
jecxz
mov
pop
lahf
dec
subb
lret
jecxz
aaa
pop
sbb
rorb
es
pop
mov
inc
pop
xlat
inc
pop
roll
push
addb
adcb
rolb
mov
ret
data16
pop
add
adc
test
pop
scas
add
adc
push
fwait
loop
add
mov
xchg
jmp
fs
add
fcompl
orl
adc
lcall
sarb
add
bound
repz
adc
loopne
test
adc
cmp
lret
ret
add
sbb
scas
add
adc
xchg
fwait
out
add
fcmovnbe
cs
mov
sbb
adc
add
mov
adc
cmp
imul
fs
push
aam
lcall
std
add
rorb
sub
loopne
inc
add
jmp
push
sub
cmpsl
jmp
call
add
outsl
xchg
lret
jmp
or
xchg
fwait
push
pusha
push
loopne
stos
add
mov
fsts
cli
mov
scas
add
add
mov
add
mov
jp
and
loopne
out
push
and
pop
mov
adcb
lahf
fs
xchg
rolb
adc
add
push
frstor
cmp
in
pushfw
jmp
xor
jp
addb
add
add
or
xor
mov
push
xchg
lret
iret
fs
lret
sti
add
fwait
incb
ret
and
mov
sbb
addl
pop
out
ja
or
add
fwait
mov
insb
xchg
lret
mov
mov
sub
insb
inc
pop
and
jecxz
bound
ret
add
add
rolb
inc
sbb
xor
xchg
bound
add
add
mov
add
fs
rclb
mov
loopne
pop
xor
adc
mov
imul
mov
push
mov
push
or
imul
adc
xor
mov
adc
mov
add
cli
mov
lret
testl
adc
dec
mov
pop
test
pusha
pop
mov
or
push
mov
and
fchs
add
mov
in
pusha
sub
pop
and
add
lcall
sti
mov
inc
movsl
and
loopne
add
data16
add
inc
arpl
adc
pop
aad
loopne
xor
gs
and
adc
int
mov
mov
xchg
imull
add
stos
add
mov
data16
pop
mov
cli
mov
call
add
jecxz
add
add
or
pusha
adc
es
loopne
and
mov
and
loopne
pop
sub
out
inc
in
jecxz
ljmp
or
sub
adc
adc
add
sbb
mov
addb
add
andb
mov
xchg
out
add
repz
mov
inc
pop
mov
and
lcall
loopne
lcall
mov
add
es
int
fwait
lock
pusha
xor
pusha
dec
and
aam
sub
adc
and
loopne
out
mov
mov
xchg
in
inc
or
outsl
xchg
incl
xchg
loop
and
xchg
in
fsubrl
fsubl
mov
data16
xchg
adc
pop
xchg
adc
test
jmp
pusha
aaa
repnz
std
lock
lcall
sbb
fs
add
and
aam
stos
add
in
data16
adc
adc
outsb
sub
loopne
add
add
dec
add
adc
and
mov
jmp
xchg
mov
cld
inc
jbe
daa
bound
cs
pop
fs
and
xchg
sub
insb
es
popa
dec
add
jecxz
mov
pop
outsb
sub
or
loop
inc
fbld
out
pop
loopne
or
push
loopne
jmp
mov
or
add
mov
loope
jmp
out
in
subb
aas
das
add
test
mov
lret
loopne
aam
hlt
sbb
call
in
sbb
test
mov
aam
aas
hlt
cmp
sub
mov
mov
dec
in
mov
and
jmp
add
in
das
mov
pop
not
inc
or
or
loopne
dec
add
and
inc
hlt
and
sub
jmp
add
jmp
lcall
or
mov
test
pop
xchg
in
pop
in
loope
push
jecxz
pop
xor
add
xor
cmp
jmp
mov
ret
insb
adc
xor
adc
add
pop
bound
inc
sbb
add
aam
mov
inc
sub
nop
fwait
scas
repnz
insb
adc
sbb
add
adc
pop
mov
sbb
out
pop
adc
out
sbb
jo
mov
add
jmp
mov
add
cmp
and
aad
xchg
outsb
xorb
push
fwait
shlb
inc
jno
out
add
add
bound
and
add
icebp
add
sub
mov
mov
adcb
mov
loopne
sarl
fwait
out
sub
mov
jmp
jmp
xchg
add
les
sti
mov
push
xchg
stc
xor
movsl
cmp
add
cmpsl
cmpsb
xchg
add
cltd
loopne
add
add
jp
or
mov
pop
loopne
add
bound
out
cwtl
ljmp
add
push
rolb
ljmp
es
bound
add
inc
lock
fwait
call
fnsave
call
addr16
pop
out
insb
sub
add
out
dec
xor
jmp
adc
xor
insb
mov
inc
xorb
jecxz
add
insb
iret
add
aam
loopne
adc
imul
xadd
sbb
ljmp
sbb
add
repz
push
add
sti
fwait
add
scas
shlb
fs
les
add
mov
fs
pop
mov
push
pop
pop
lock
bound
ljmp
mov
fwait
cmc
mov
add
inc
mov
out
and
jle
fwait
imul
sbb
adc
add
insb
xlat
add
mov
adc
loopne
xchg
stc
gs
outsl
add
iret
fwait
out
push
out
add
jo
lods
test
pop
xchg
add
rcr
bound
xchg
sti
gs
sbb
add
cmpsl
movsl
xchg
add
adc
out
mov
push
or
jmp
icebp
lahf
adc
out
insl
loopne
adc
adc
and
sub
andb
call
sub
add
pop
adcl
add
out
add
inc
mov
insb
shrb
add
out
pop
in
push
out
inc
loop
push
loop
out
adc
xor
sub
adc
bound
fwait
add
outsl
adc
lcall
inc
add
out
xchg
ljmp
adc
xor
aaa
add
add
lock
adc
mov
fwait
push
sbb
out
fwait
adc
or
adc
mov
mov
jmp
push
lcall
inc
xchg
scas
add
adc
mov
inc
pop
loope
mov
fwait
stc
adc
sbb
push
fsubs
xchg
push
stos
pop
add
xor
or
in
and
mov
sub
insb
cmp
nop
sbb
pop
out
lock
insb
add
out
loopne
push
loop
or
insb
das
loope
aam
popf
or
add
in
insb
push
add
push
int
repz
adc
loopne
add
iret
fwait
incb
add
adc
adc
or
adc
mov
or
lcall
scas
mov
insb
jo
sbb
add
aam
lcall
lods
adc
adc
fs
adc
adc
test
pop
jecxz
add
adc
nop
add
adc
mov
mov
sbb
mov
mov
loopne
icebp
sub
mov
sub
add
fs
pop
iret
inc
fwait
notb
out
jmp
cltd
loop
cs
loopne
out
sub
cmp
loop
mov
inc
xlat
xor
bound
add
jmp
or
andb
out
iret
loopne
and
xchg
test
xchg
loope
test
add
add
adc
fs
add
fistl
adc
xchg
pop
add
loope
add
and
mov
xchg
adc
stos
pop
inc
aam
jecxz
insl
mov
subb
rcl
sbb
ss
push
jo
sbb
rorb
jo
popa
add
sbb
adc
mov
lcall
push
push
jae
sbb
das
scas
push
inc
jg
add
das
push
pushaw
add
and
insb
xchg
jecxz
adc
push
fiadds
loopne
aas
les
and
mov
xor
sbbb
cmp
add
mov
jecxz
inc
mov
into
xor
fwait
neg
das
push
add
cli
mov
lock
in
scas
test
aam
xchg
out
add
in
les
jo
sub
inc
iret
mov
adc
int3
xchg
xchg
mov
or
adc
jo
or
aad
jl
add
or
add
or
addr16
or
loopne
call
les
lcall
fwait
mov
fcmovnbe
les
pop
fwait
add
iret
or
lret
into
rorb
ret
fsts
or
inc
in
addb
push
add
or
or
ljmp
gs
es
sub
out
aam
sub
std
inc
ss
aaa
mov
pop
mov
jmp
mov
das
sub
add
mov
stos
adc
xor
ljmp
mov
mov
adc
bound
lcall
cld
add
mov
insb
pop
adc
add
scas
add
sub
sub
add
mov
out
push
add
pop
add
subb
adc
subb
shrl
add
jp
and
cmp
jmp
add
adc
pop
xchg
add
add
cltd
mov
add
add
and
xor
sbb
adc
lods
add
push
xor
loop
add
cmpsl
in
adc
into
shll
add
in
pop
sub
adc
and
add
mov
add
jecxz
bound
inc
fs
nop
push
xchg
in
fadds
incl
add
mov
sub
sbb
lcall
jecxz
mov
sbb
sub
mov
sub
inc
sub
mov
sub
fs
insb
adc
add
subb
cli
add
adc
sub
add
xchg
sbb
das
fwait
mov
adc
add
add
add
mov
jmp
add
mov
fwait
and
addb
fwait
in
add
push
lcall
in
insb
sub
out
add
cs
loopne
and
add
and
das
add
sub
add
gs
roll
in
out
loop
ljmp
fs
and
out
aam
pushf
jecxz
loop
lcall
xor
sbb
test
fstpt
repz
mov
add
or
insb
mov
out
add
xor
adc
mov
cltd
add
fs
stos
add
fs
mov
sysret
push
adc
add
imul
loope
aam
add
popf
xor
sti
data16
testl
or
testl
add
adc
sti
data16
pop
pusha
test
inc
rclb
data16
jmp
repz
icebp
lcall
and
andb
add
sub
mov
sbb
imul
add
push
fwait
pop
add
mov
adc
jecxz,pn
lods
add
cs
repnz
cwtl
in
outsl
sub
add
movsl
addb
outsl
sub
add
add
loopne
sub
add
cli
jae
scas
add
nop
loopne
stos
adc
stos
rorb
xor
cmp
adc
lcall
lock
jmp
insb
lcall
mov
out
loopne
xchg
add
test
stos
pop
add
outsl
and
addb
adc
loop
push
add
mov
out
insb
stos
roll
push
jmp
mov
add
scas
mov
or
aam
aas
movsb
push
rolb
cmpb
fwait
fwait
add
inc
add
mov
jmp
aam
pushf
call
fwait
sbb
sub
out
pop
and
pop
adc
adc
mov
adc
stos
nop
cmp
stos
aaa
add
add
adc
movb
and
mov
push
rolb
add
push
dec
inc
add
add
mull
pop
pusha
and
and
bound
mov
mov
das
es
fs
scas
jmp
add
add
lds
add
into
mov
mov
loop
insb
or
pop
insb
add
mov
movl
imul
fwait
xchg
and
rolb
mov
xchg
in
lods
add
das
xchg
mov
sti
add
add
iret
pop
daa
call
cmpsl
or
or
push
fwait
add
test
mov
inc
inc
add
loopne
ljmp
ljmp
fwait
out
mov
pop
pusha
adc
add
add
sbb
lcall
lcall
sarb
lcall
xorb
mov
and
sbb
adc
out
lcall
pop
adc
or
add
pop
data16
ret
push
loopne
mov
stos
lret
loopne
xor
add
push
loopne
cmp
add
jecxz
loopne
and
add
push
xchg
inc
push
subb
push
addb
faddl
mov
pop
imul
mov
add
data16
filds
add
add
mov
add
push
pop
lcallw
fwait
xchg
fiaddl
jecxz
push
adc
pusha
push
fcoms
sub
pop
sub
add
add
adc
adc
mov
fs
push
inc
add
ljmp
gs
fcompl
rolb
pop
push
retw
pop
in
loop
mov
pop
lcall
add
pusha
adc
ret
sub
ret
mov
sub
pop
or
adc
jge
mov
lret
pusha
or
loopne
lcall
lret
addb
add
fs
jecxz
shrl
adc
mov
add
mov
fwait
test
xchg
incl
add
lods
add
ret
push
sbb
cmpsl
addb
inc
lcall
sbb
andl
movsb
out
pop
pop
and
inc
dec
call
addb
add
add
adc
mov
incl
add
pop
das
jmp
fcomip
add
aad
fsubl
mov
mov
mov
pop
add
gs
fstp
fnstsw
add
aam
in
add
scas
in
sub
jmp
add
push
fdivrl
les
loopne
mul
pop
and
shl
mov
adc
fmull
adc
mov
adc
adc
or
loope
orb
mov
add
add
mov
out
add
add
adc
fwait
cmpsb
add
les
add
mov
loopne
lcall
mov
adc
repz
addr16
loopne
jecxz
loopne
cmp
mov
push
gs
out
fucom
aad
loopne
add
mov
mov
or
mov
or
mov
add
or
push
imul
mov
and
sub
mov
cltd
and
rclb
mov
incb
add
sub
add
pusha
or
fs
addr16
add
fs
cs
in
add
add
outsl
xchg
adc
addr16
clc
adc
adc
cs
jmp
add
add
inc
pop
rclb
add
cltd
loopne
add
push
add
add
pop
into
inc
loopne
sbb
data16
bndldx
jo
loopne
mov
data16
jmp
add
mull
sbb
addr16
addr16
in
insb
das
jmp
or
push
mov
mov
stos
out
add
inc
dec
jecxz
mov
pusha
pcmpgtb
data16
sbb
and
insb
mov
mov
add
xor
or
gs
ljmp
lods
bound
cwtl
in
pop
cmp
dec
pusha
push
xor
add
lret
bound
adc
int
aam
popf
add
imul
call
addr16
lods
insb
adc
jo
movsb
mov
push
gs
add
pop
jmp
cs
adc
das
push
jmp
das
or
in
in
addr16
mov
stos
adc
add
gs
loop
adc
pusha
addr16
add
aam
loopne
insl
mov
sbb
or
out
jo
gs
adc
scas
out
les
push
bound
adc
ljmp
sub
inc
mov
mov
mov
adc
add
call
jmp
jmp
insb
iret
add
in
push
daa
add
bound
lea
add
lock
mov
or
fs
push
mov
loope
test
popf
sbb
adc
jo
gs
gs
mov
and
shll
icebp
adc
add
lcall
mov
es
jmp
stc
insb
adc
add
and
lds
push
add
add
add
adc
adc
sbb
ljmp
fwait
lret
movsl
add
movsl
lcall
pop
sbb
add
hlt
test
add
test
mov
pop
iret
and
add
mov
adc
sub
ret
in
add
fwait
std
cmpsb
add
cmp
mov
push
paddsw
loop
add
mov
add
fs
data16
fwait
mulb
nop
inc
or
es
cmp
add
data16
add
jb
pop
sbb
adc
das
mov
add
or
fs
mov
xchg
rorl
or
add
add
cmp
test
or
pop
roll
or
lock
and
sub
inc
cmpsb
sub
mov
fs
cmpsl
mov
in
ds
mov
xchg
mov
mov
jne
push
or
sub
enter
xor
mov
xor
push
xor
mov
adc
add
pop
test
fs
fcmovnb
add
inc
aas
loopne
sub
add
sahf
jmp
add
fucomi
pop
add
cwtl
imull
out
data16
test
data16
nop
xchg
jecxz
mov
add
jno
ud0
shr
lcall
xchg
add
rol
add
loopew
add
in
lcall
sub
or
mov
popa
add
pusha
add
in
daa
add
mov
add
insb
sub
insb
das
in
adc
cs
pop
mov
xor
push
shr
lcall
in
call
nop
add
push
es
jp
rorl
jge
jecxz
popa
ret
mov
add
fwait
call
in
and
add
xor
and
sbb
xlat
mov
lcall
in
adc
inc
push
insb
daa
nop
iret
sbb
push
and
add
add
data16
data16
sub
push
add
and
adc
daa
lock
push
and
pop
ror
bound
jno
bound
stos
sub
jp
add
adc
or
aam
xchg
ljmp
loopne
ret
add
add
data16
push
and
inc
push
iret
fwait
inc
ljmp
add
cmp
cld
xlat
mov
mov
movl
add
inc
add
add
push
push
pop
add
and
adc
loopne
adc
mov
mov
fs
aam
adc
imul
add
cmpb
addr16
and
sbb
imul
add
out
cwtl
repz
push
stos
das
jo
jecxz
add
rolb
push
add
lock
stos
adc
mov
and
jo
fs
add
data16
dec
fs
xor
add
data16
pop
add
les
push
rolb
adc
mov
cmpb
data16
scas
add
shlb
jo
and
xchg
adcl
cli
jg
lock
adc
rolb
sbb
add
mov
fwait
inc
loope
cwtl
pop
adc
add
bound
nop
xor
sbb
jae
cmp
mov
jae
incb
xor
ja
add
inc
and
or
cmp
lcall
add
xchg
cld
inc
mov
adc
pop
mov
repnz
rorb
add
pop
add
xor
adc
or
pop
and
add
mov
adc
cmp
sbb
hlt
das
scas
mov
adc
loope
lahf
add
mov
mov
test
jmp
or
or
pop
rol
add
add
test
fwait
mov
adc
push
or
adc
push
jmp
add
rorb
rolb
loopne
adc
adc
mov
cli
xor
scas
add
adc
mov
mov
sub
stos
sbb
fwait
xor
mov
add
fwait
loope
add
lcall
add
aaa
add
add
pop
dec
adc
adc
adc
jnp
scas
add
push
lcall
inc
sbb
pop
out
lods
add
jmp
fs
out
mov
sti
fwait
mov
add
imul
stos
push
adc
add
scas
add
push
fwait
rcl
jmp
lcall
sbb
adc
fs
add
test
bound
test
out
pop
add
sbb
out
add
add
cld
scas
add
add
outsl
mov
out
int3
pop
mov
imul
das
fwait
in
lahf
jmp
lcall
adc
lret
inc
mov
aas
or
mov
fadds
clc
add
rorl
repz
xchg
jmp
clc
sbb
out
jl
add
adc
adc
adc
cmp
add
andl
hlt
add
add
add
add
fs
out
call
orb
leave
pop
outsl
aad
pop
aas
nop
add
mov
add
mov
addr16
jae
or
fs
mov
adc
add
mov
inc
mov
insb
xchg
jecxz
fwait
loopne
insl
add
jecxz
pop
push
pop
adc
adc
add
cltd
out
cli
sub
addb
pop
test
add
and
sbb
hlt
das
inc
pop
scas
data16
or
mov
imul
orb
add
inc
add
andl
test
and
andl
add
adc
push
add
mov
test
sarb
enter
and
insb
outsl
out
add
add
dec
jmp
add
sti
test
mov
std
scas
add
in
inc
push
loopne
imul
add
xchg
adc
add
jae
addb
test
and
adc
repnz
add
rcr
es
enter
and
pop
out
add
adc
mov
adc
mov
fadd
pop
jecxz
add
add
stos
add
mov
scas
add
jecxz
pushf
jecxz
or
addb
pop
adc
outsl
add
bound
mov
mov
inc
pop
mov
add
jmp
das
sbb
flds
push
mov
adc
xchg
in
add
pop
mov
pop
mov
cli
xchg
je
add
add
add
pop
out
mov
es
shrb
or
insb
add
mov
adc
pop
rorb
add
fidivl
inc
jnp
add
ficoml
cmp
stos
and
mov
aam
ljmp
addb
mov
lret
dec
repz
add
inc
ficoml
adc
fs
add
outsb
lret
mov
cmp
adc
lret
idivl
pop
adc
push
mov
jnp
mov
les
mov
adc
shrb
xchg
add
fs
pop
fucomip
add
add
pop
das
data16
sbb
or
push
and
bound
lcall
adc
test
in
bound
lods
add
mov
bound
in
shlb
inc
add
add
stos
adc
add
sub
nop
adc
fisubl
mov
andl
mov
inc
in
loopne
loopne
add
jmp
addb
adc
push
mov
test
pop
loopne
or
sub
inc
pusha
mov
or
mov
adc
orb
pop
test
rorl
push
andl
xlat
insl
xor
pop
outsl
push
and
out
lcall
test
cmp
mov
jecxz
scas
lret
loopne
scas
inc
lcall
inc
or
aaa
loopne
test
bound
mov
add
test
imul
pop
out
add
add
mov
test
add
rorb
insb
mov
adc
daa
and
mov
cmpsl
lret
sbb
cs
add
jmp
add
fs
insb
sub
add
and
inc
or
and
mov
das
loopne
das
imul
inc
ret
roll
cli
xchg
and
mov
add
push
add
addb
jmp
fs
add
jecxz
stos
lret
sti
mov
adc
fcmovnb
or
add
iret
sbb
add
pop
out
mov
dec
sub
inc
mov
shlb
bound
mov
inc
mov
aaa
push
xchg
fcoml
inc
fcompl
adc
repnz
popa
push
pop
mov
sub
or
adc
dec
std
insb
sub
test
insb
adc
jmp
adc
mov
pop
mov
daa
outsb
add
xchg
or
pop
jg
add
cmp
data16
jmp
sbbl
add
faddl
sbb
jbe
nop
imul
sti
add
shlb
pop
pusha
adc
out
sub
bound
xchg
add
add
add
test
push
test
lods
add
jecxz
add
int
xchg
testl
inc
add
scas
add
or
inc
add
and
pop
add
add
mov
and
roll
aam
sub
imul
mov
in
rorb
notl
xor
cmpsl
xor
and
ljmp
lods
divl
xor
stos
pop
inc
add
addl
push
test
out
pushfw
lret
pushfw
movl
lcall
cmp
mov
fists
cli
cmp
and
cli
mov
lods
iret
pusha
sub
pusha
sbb
pop
pop
stc
test
das
or
or
pushf
repz
imul
add
scas
add
mov
pop
in
lods
xlat
add
pop
das
loopne
lods
ret
data16
insb
adc
cs
add
xchg
out
add
mov
cmp
push
sub
dec
jo
add
pop
push
add
inc
push
incl
mov
pop
aam
add
pop
jo
dec
pop
fwait
movsl
mov
outsl
and
mov
add
xchg
pop
bound
lock
in
add
pop
mov
rcrb
sbb
cli
adc
add
jo
aam
loopne
incb
mov
pusha
sbb
jle
pop
aam
fwait
dec
cmpsb
push
or
insb
xchg
cmp
subb
filds
add
and
data16
mov
add
xchg
cmp
mov
mov
add
loopne
jno
pusha
inc
lock
sub
repnz
xchg
add
cmp
test
dec
mov
adc
lock
shrb
adc
xor
add
sti
jno
jmp
xchg
lret
xor
imul
mov
adc
fs
imul
rolb
inc
add
cmpsb
fs
fs
imul
jb
std
inc
pop
dec
std
adc
dec
outsb
sub
jae
or
popa
cmp
push
outsl
adc
push
lcall
add
adc
pop
pop
int
xor
mov
dec
add
rcl
dec
add
mov
lock
jno
add
fsubrl
add
fs
add
imul
add
dec
stos
add
add
imul
movsb
add
add
fsubrl
imul
imul
daa
in
imul
imul
mov
out
or
rorb
push
nop
cmp
jp
mov
xor
mov
xor
nop
adc
stos
jg
addb
stos
jg
add
pop
int
adc
lcall
jb
test
adc
insb
loop
adc
mov
mov
out
sub
js
jmp
in
and
add
mov
mov
mov
outsb
add
add
mov
mov
lret
mov
data16
adc
test
in
mov
mov
mov
mov
in
cmp
mov
add
es
mov
call
pop
jmp
sub
add
orb
adc
xchg
cmp
jecxz
pop
jecxz
mov
rolb
adc
mov
mov
add
or
cs
add
add
adc
xorb
insb
add
pusha
addr16
imul
push
add
loopne
push
faddl
adcb
loopne
mov
add
push
xor
nop
or
xor
pusha
incl
add
push
xchg
lret
mov
pop
jo
imul
decl
roll
orb
data16
sti
subb
mov
adc
or
xor
sti
xor
call
push
pop
push
sbb
adc
add
nop
add
xchg
push
pusha
push
xchg
add
adc
sub
add
pusha
xchg
in
loopne
mov
fwait
stos
rorl
jno
mov
mov
xor
add
mov
add
pop
add
xor
lret
xchg
scas
lock
add
add
sbb
add
add
fwait
shrl
jo
add
fwait
mov
gs
add
mov
shl
pop
aas
cs
ret
or
loopne
addb
push
incl
adc
lret
data16
filds
jnp
inc
adc
add
adc
and
jo
adc
lock
inc
mov
mov
das
mov
adc
insb
add
roll
loope
ret
lret
sub
movsb
sub
loop
cmpsl
lcall
adc
lcall
add
push
push
repz
test
call
loopne
xchg
xchg
add
jmp
lret
add
fs
add
not
ficoml
push
fcos
mov
pop
pop
mov
rolb
call
add
mov
mov
push
lea
std
pop
add
add
pop
add
sbb
or
pusha
push
and
notl
or
pop
add
mov
imul
sbb
push
add
jo
scas
pop
add
mov
jb
mov
add
adc
sti
mov
add
cld
scas
add
mov
sub
add
sbb
pop
out
lods
add
mov
fwait
into
pop
sbb
add
add
fwait
not
fiaddl
add
and
mov
adc
nop
inc
push
nop
jmp
sti
add
in
dec
add
lcall
pop
add
inc
mov
push
inc
sub
xlat
or
adc
add
int
and
add
pop
nop
fwait
andl
and
mov
in
mov
jecxz
fsts
and
add
ja
xchg
lcall
add
ljmp
dec
je
push
add
push
mov
push
les
ljmp
sbb
mov
inc
orl
movl
inc
lret
sbb
pop
jae
adc
adc
fwait
cli
test
mov
pop
mov
push
adc
data16
xor
add
mov
cli
inc
mov
and
sub
adc
or
stos
mov
adc
or
fisttps
push
faddl
pop
in
dec
lds
leave
adc
lcall
adc
mov
andl
andl
push
inc
xchg
xchg
dec
adc
push
adc
dec
adc
add
adc
mov
mov
lahf
add
pop
add
add
fs
fcompl
add
xor
mov
add
inc
add
out
imul
testl
mov
add
add
shlb
stos
add
inc
test
in
mov
add
fsubrl
add
sbb
add
adc
add
dec
dec
xchg
mov
dec
adc
inc
adc
mov
mov
fs
or
ja
andb
stos
adc
add
inc
pop
fs
push
fwait
mov
bound
mov
int
adc
iret
rcrb
sbb
xlat
shlb
sbb
orb
sbb
xor
inc
es
insb
xchg
sbb
lcall
adc
add
outsl
xchg
add
lcall
mov
mov
mov
sbb
or
inc
insb
mov
add
add
add
sbb
sub
test
mov
xlat
xchg
in
sbb
xor
mov
cltd
lret
jmp
add
test
out
add
adc
insb
and
adc
add
cmpb
add
mov
popf
xor
das
mov
mov
or
mov
mov
pop
jmp
bound
jmp
fs
in
sub
or
push
ljmp
or
out
scas
add
adc
ljmp
mov
pusha
or
rclb
in
add
bound
add
cli
scas
add
rcll
add
test
mov
add
das
mov
add
mov
cli
filds
cmpb
mull
fsubrl
inc
rorl
iret
cs
in
pop
add
push
movsl
test
lods
jmp
ss
mov
xor
pop
push
inc
pusha
dec
out
loopne
mov
push
in
aaa
add
stos
out
mov
mov
add
cmp
andl
les
fs
pop
mov
push
dec
mov
pop
das
add
loop
roll
mov
push
das
lcall
mov
loopne
pop
xchg
adc
add
mov
dec
jecxz
pusha
push
aam
loopne
jp
add
inc
fiaddl
or
inc
adc
xchg
loopne
adc
add
push
jmp
daa
add
and
mov
and
daa
add
and
andl
dec
lret
rolb
shlb
orl
inc
or
add
fwait
call
rolb
aam
fwait
jmp
cs
and
das
mov
mov
jne
add
insb
or
lcall
jle
insb
loop
enter
mov
push
movl
dec
cmpsl
inc
add
mov
sub
mov
push
xor
in
mov
lods
add
pop
sub
add
pop
outsl
adc
adc
add
add
add
dec
inc
mov
add
and
add
xor
inc
pop
jmp
add
popf
push
pop
out
mov
xchg
add
leave
or
sbb
dec
sbb
fadds
enter
fists
cli
stos
jmp
and
add
add
fists
pusha
add
test
mov
arpl
adc
inc
pop
out
mov
loope
outsb
and
out
add
mov
bound
adc
adc
add
inc
cmp
filds
orw
test
mov
test
add
xchg
and
cmpsb
pop
adc
outsl
adcb
bound
aas
add
dec
mov
das
popa
rcrb
add
mov
imul
loopne
outsl
rolb
push
out
loopne
add
xchg
add
adc
out
add
repnz
add
addb
adc
inc
or
fsubrl
mov
pusha
add
mov
les
sub
jb
sysret
xchg
xchg
add
cld
movsb
adc
inc
pcmpgtb
add
xor
add
adc
insb
add
mov
fs
and
das
jecxz
outsl
jnp
add
out
addb
pop
out
fwait
in
outsb
rcrb
loopne
add
or
in
add
push
xor
nop
sub
push
sti
xor
iret
add
es
add
mov
mov
jmp
add
add
cli
add
mov
mov
pop
cmc
xor
push
xor
add
xor
add
cpuid
add
mov
bound
pusha
sbb
and
add
sub
or
faddl
sbb
test
xchg
sub
mov
cli
pop
push
or
inc
dec
and
mov
inc
adc
push
add
push
rolb
and
jmp
pop
add
dec
add
add
fwait
jmp
inc
out
fwait
in
fsubrl
ds
rcr
mov
stos
and
addl
pop
lret
es
sbb
add
aaa
and
adc
xchg
mov
data16
rsqrtps
adc
adc
add
push
jo
shrb
cli
and
inc
aam
fwait
out
inc
adc
add
rclb
adc
pop
gs
adc
pop
outsb
add
lock
xchg
xor
or
data16
aas
jmp
data16
repnz
inc
sub
dec
pop
mov
and
mov
movntq
mov
or
or
sub
cld
mov
cli
and
addr16
inc
add
add
sub
jno
out
test
add
div
add
inc
out
lcall
push
mov
add
inc
sbbl
nop
mov
repnz
adc
scas
add
and
call
or
aam
lcall
mov
rolb
inc
loop
nop
or
dec
daa
push
add
nop
sub
imul
add
or
add
rolb
adc
jg
sbb
pop
loopne,pt
or
pop
stos
js
lcall
and
sub
add
bound
dec
adc
test
add
sub
lret
and
add
mov
push
fwait
xor
push
inc
add
jl
imul
fcoml
icebp
push
fs
push
and
faddl
das
mov
in
data16
adc
dec
pop
ljmp
lock
mov
sub
cmp
arpl
xor
outsb
add
mov
pop
adc
pop
xchg
adc
pop
bound
rolb
pop
stos
xlat
add
pop
test
bound
inc
rolb
mov
ja
dec
dec
inc
fucom
add
mov
bound
stos
ja
inc
adc
and
stc
adc
lldt
rcrb
loopne
lcall
sbb
data16
ljmp
adc
sbb
outsb
fs
jecxz
push
rcrb
xor
lock
pop
fists
pop
mov
pusha
outsl
loopne
insb
faddl
addl
pop
icebp
maxps
inc
or
or
test
nop
pop
inc
sbb
xor
cli
shrb
or
das
orb
add
add
and
insb
mov
jns
adc
xor
shlb
xor
call
push
add
bound
lcall
cli
add
loope
sub
jo
add
out
jecxz
fs
mov
mov
sbb
stos
pop
bound
add
jle
in
adc
andl
add
add
adc
add
add
lcall
xorb
inc
sub
sub
add
mov
fwait
cli
xchg
add
jo
mov
push
fcom
add
fs
pop
adc
mov
xchg
add
adc
mov
rolb
xor
and
mov
sub
pshufw
sbb
nop
lcall
jno
nop
test
dec
mov
sub
inc
lahf
shlb
mov
rorb
roll
data16
popa
add
cli
jecxz
add
mov
in
add
bound
mov
push
sbb
mov
sbb
add
addl
arpl
adc
pop
mov
inc
mov
bound
and
std
icebp
add
add
stos
arpl
andl
lcallw
add
nop
or
bound
or
lahf
fs
sbb
mov
and
adc
sub
bound
jae
mov
lcall
adc
data16
pop
or
xchg
push
inc
aaa
adc
adc
mov
mov
or
add
add
push
xorl
loopne
adc
lcall
xchg
add
adc
mov
adc
insb
sub
mov
add
out
xchg
in
push
pop
inc
add
insb
sub
fwait
and
mov
mov
nop
mov
fs
popa
inc
in
xchg
sub
fs
add
gs
out
scas
mov
pushf
jecxz
inc
jbe
xchg
cmp
adc
add
pop
adc
xor
fcomi
inc
lahf
xchg
mov
popa
popa
dec
pop
push
and
jo
sub
inc
mov
mov
es
nop
adc
add
mov
addb
fs
data16
add
fs
add
es
das
add
sarb
fwait
scas
add
mov
mov
imul
imul
inc
add
lcall
ljmp
push
add
fwait
fwait
adc
ja
sub
xor
jmp
data16
mov
lcall
push
mov
sub
aam
test
insb
xchg
pop
add
xor
aam
add
in
xchg
xchg
lock
add
pop
ret
and
stos
pop
fs
pop
aam
out
loopne
mov
aas
mov
mov
adc
imul
add
fs
mov
adc
push
int3
adc
adc
adc
bound
jmp
mov
scas
add
sub
add
pop
outsb
add
jecxz
add
mov
add
xchg
add
lret
adc
pop
dec
add
mov
pop
pop
aad
add
add
add
add
push
fwait
add
bound
mov
repz
add
pop
add
add
imul
jecxz
adc
sub
add
or
add
add
add
and
pop
fs
or
push
adc
add
mov
pop
ret
or
fcompl
fsubrl
andb
pop
fbld
add
and
add
aam
sbb
pop
fsubrl
scas
bound
push
adc
insb
mov
sbb
bound
cmp
sub
add
add
mov
or
lcallw
fcmovnbe
add
cltd
ffreep
adc
bound
sbb
xchg
out
sub
pop
xchg
sbbl
sbb
pop
and
add
fs
push
add
fcompl
mov
add
xchg
out
scas
add
insb
sub
mov
sub
add
insb
adc
adc
xor
sub
call
mov
cmpl
aam
loopne
push
add
add
dec
pop
out
lods
add
pavgb
add
imul
mov
add
add
pop
stos
sbbb
sbb
daa
jmp
sub
ja
cmpb
add
adc
sbb
add
in
push
sbb
adc
adc
adc
sbb
or
add
add
inc
scas
add
or
fwait
ljmp
add
outsl
inc
add
adc
xlat
mov
fwait
int
orl
rorb
fiaddl
adcb
sbb
in
stc
add
mov
adc
mov
stos
adc
add
data16
pop
test
add
pop
rolb
mov
add
iret
mov
adc
fadds
add
shrl
and
sti
rorb
cli
sbbb
scas
add
add
adcb
add
mov
sub
popf
inc
test
pop
sbb
fwait
and
test
pop
dec
addb
add
add
frstor
orb
subb
test
adc
fildl
push
mov
mov
out
sti
add
outsb
shr
mov
lcall
in
daa
adc
fsubrl
sub
adc
or
das
add
insb
add
xor
pop
sbb
add
bound
pop
add
scas
add
flds
push
pop
adc
inc
add
pop
flds
mov
lret
addl
push
add
push
in
sub
adc
or
push
add
add
pop
mov
jg
add
in
add
inc
mov
and
add
lcall
mov
int3
fs
mov
bound
pop
add
imul
push
lcall
stos
mov
or
xchg
inc
outsl
loopne
push
rorb
popl
mov
rorl
imul
loop
and
add
xlat
pop
add
shrl
mov
add
scas
add
stos
xchg
push
loopne
sbb
dec
adc
xadd
repnz
inc
add
add
or
adc
cmp
mov
and
add
pop
loopne
inc
iret
or
bound
popl
dec
mov
pusha
dec
bound
push
and
inc
cmp
or
lcall
loop
cmp
cmp
adc
mov
aad
adc
test
adc
arpl
fs
push
fwait
and
mov
adc
out
pop
es
and
out
adc
scas
loopne
insb
xchg
and
and
test
addb
les
or
data16
mov
sbb
rolb
push
dec
sbb
sbb
pop
gs
fisubl
or
pop
mov
int3
adc
sbb
imul
cli
mov
and
lcall
stos
sbb
test
fstps
testb
rorb
pop
das
inc
fildl
fwait
sub
addl
sub
cmp
lcall
fwait
dec
xchg
addb
sbb
pop
add
aaa
insb
mov
add
adc
jmp
xor
std
scas
add
hlt
pusha
inc
adc
pop
adc
adc
mov
cmp
add
fs
xor
xor
xchg
inc
or
xchg
push
xchg
xchg
cmp
mov
cmpsl
and
or
loopne
inc
fiaddl
loopne
mov
adc
adc
add
xor
adc
sbb
adc
pop
sbb
imul
or
pop
inc
adc
ret
dec
pusha
or
bound
sbb
pop
nop
xchg
adc
pusha
or
xchg
sub
xchg
bound
mov
mov
add
xlat
mov
sbbb
rolb
mov
push
xchg
subb
xchg
mov
xchg
xchg
lcall
sub
mov
popa
inc
rorl
add
mov
fwait
inc
ljmp
adc
cmp
adc
add
add
xchg
out
lcall
cwtl
shll
pop
enter
gs
andb
insb
sub
or
cmpb
ja
ret
imul
fs
xchg
and
fdivl
cli
repz
mov
loope
aam
fwait
mov
xorb
pop
and
scas
mov
lcall
insb
push
mov
out
lret
call
lcall
iret
insb
das
jmp
add
fwait
mov
inc
or
loopne
mov
aas
and
add
insb
and
add
insb
add
test
pop
add
or
sbb
das
or
imul
mov
jmp
aaa
fwait
ret
test
push
add
or
icebp
fs
pop
jmp
aas
add
out
loopne
das
cs
or
sub
pop
push
gs
imul
cli
inc
mov
adc
add
xchg
fsubrl
imul
das
test
incl
sbb
fs
call
xor
mov
pop
adc
mov
mov
add
jecxz
call
xchg
lret
jecxz
fwait
iret
adc
inc
jp
fwait
lret
shl
fsts
cli
mov
add
dec
add
into
call
pop
or
mov
and
sub
stos
adc
rclb
add
adc
adc
out
pop
mov
add
adc
lcall
call
insb
or
cs
in
jb
mov
sub
inc
lock
aam
and
jmp
add
out
push
push
and
lcall
icebp
adc
pop
add
in
add
addr16
gs
jmp
add
adc
cwtl
jecxz
mov
add
mov
adc
xor
cmc
xor
adc
out
add
gs
mov
mov
notl
or
xor
sbb
nop
sbb
fwait
add
and
add
test
sbb
mov
andl
push
jmp
test
add
mov
pop
imul
mov
xchg
add
bound
jmp
and
testl
xchg
mov
repz
add
rolb
xor
repz
adc
jnp
daa
mov
add
imul
mov
mov
inc
fwait
repz
stos
add
lcall
sub
pop
pusha
add
sub
push
mov
mov
jo
sub
xchg
repnz
cwtl
jo
popa
aas
subl
sbb
and
inc
rcrb
add
lret
loopne
mov
lcall
xchg
jecxz
sbb
shlb
stos
lret
loopne
or
sti
pop
mov
mov
or
idivl
shll
pop
adc
data16
ret
rolb
and
cli
mov
and
pop
fs
lret
sti
rclb
jge
add
fwait
ret
rclb
iret
lcall
and
adc
repnz
into
sti
rolb
mov
lahf
movsb
pop
mov
mov
adc
gs
add
xchg
or
mov
jmp
fldl
bound
push
incl
gs
ret
out
add
pusha
xor
in
das
shl
xchg
add
loopne
das
jbe
in
and
adc
out
adc
push
das
add
jnp
in
pop
cmpsb
insb
push
add
nop
and
cmp
sub
sbb
cmp
das
scas
and
test
and
rolb
gs
add
fcmovnbe
in
cltd
jmp
sub
loopne
bound
gs
adc
cwtl
ljmp
fwait
mov
shll
pop
cs
and
daa
pusha
lcall
shrb
mov
jmp
add
sbb
add
inc
add
insb
push
in
and
fiadds
sub
jmp
jmp
and
add
mov
mov
data16
pop
add
sub
push
lods
mov
add
lcall
insb
adc
cwtl
or
das
mov
les
xchg
jecxz
data16
push
lcall
mov
jecxz
fnsetpm(287
stos
adc
popf
in
data16
adc
add
jecxz
stos
adc
shrb
rcr
pop
pop
and
jo
dec
in
stos
xor
jecxz
jo
push
and
pushf
push
daa
lcall
pop
rcll
adc
lcall
inc
popa
cmp
add
adc
add
stos
adc
mov
pop
sub
movsl
and
arpl
or
push
and
stos
jecxz
add
stos
pop
push
add
ds
push
add
sub
or
cs
incl
in
cs
out
or
rcll
icebp
inc
in
xor
adc
shrb
call
add
mov
add
sbb
adc
lcall
movsb
out
jo
add
pop
movsb
jecxz
push
and
cs
out
rolb
in
mov
jecxz
add
aas
mov
xor
stos
std
cmp
std
xor
sti
cmp
sti
xor
stos
stc
cmp
stc
xor
idivl
divl
add
xor
repz
or
cmpsl
pop
repz
fwait
shlb
test
jecxz
in
xor
mov
jmp
add
jb
movl
fs
inc
add
rcl
mov
push
loopne
ja
xor
insb
mov
add
stos
pop
add
data16
add
pop
pop
jae
fnsave
inc
xor
fs
sbb
jle
xor
adc
mov
mov
add
mov
add
fs
pop
xorl
add
push
and
mov
mov
out
dec
jecxz
outsb
insb
jb
nop
gs
push
adc
adc
in
adc
test
adc
add
pop
mov
out
add
loopne
xchg
and
sbb
sub
add
orb
lock
and
push
xchg
std
fs
sub
add
or
mov
mov
sub
in
and
jl
and
jns
icebp
and
pop
fcompl
lock
clc
xor
test
fdivrl
cmp
popf
jmp
fs
add
mov
add
fcoml
push
add
insb
adc
xchg
xor
adc
adc
sub
add
adc
mov
add
pop
adcb
mov
sarb
add
loopne
jo
mov
xchg
orl
add
pusha
xchg
xchg
adc
xchg
jmp
xchg
ret
sub
add
das
xor
lcall
push
adc
mov
xchg
cmp
mov
xor
pusha
pop
mov
insb
xchg
ljmp
lret
mov
jge
xor
pop
bound
mov
add
xchg
std
insb
sub
add
je
adc
insb
pop
in
xchg
add
fsubrl
add
fsubrl
scas
add
lret
out
add
jmp
cmpsb
adc
aam
lcall
insb
movups
add
push
scas
add
jmp
filds
shll
add
add
sub
add
jecxz
add
mov
mov
out
add
addr16
add
mov
add
xchg
add
push
test
bound
stos
aaa
mov
scas
add
inc
jecxz
xchg
jmp
mov
and
add
add
mov
jmp
add
in
mov
xlat
pop
sbb
adc
imul
loopne
jp
add
jmp
add
xor
stos
pop
data16
add
mov
xchg
cltd
data16
add
in
xchg
add
data16
mov
xchg
add
fs
test
sti
mov
imul
stos
adc
subb
stos
pop
xchg
adcb
and
xor
adc
cmpb
test
xlat
in
add
test
scas
mov
jmp
cli
jmp
push
adc
fs
sbb
xlat
pusha
aam
jmp
pusha
add
orl
mov
mov
sub
sub
das
xchg
inc
test
add
add
outsl
add
mov
push
fwait
out
jb
adc
adc
jmp
sub
iret
adcb
cmp
add
add
scas
andl
addb
inc
xor
mov
add
add
mov
mov
test
add
pusha
and
inc
add
test
roll
pop
pop
adc
aaa
add
in
faddl
xchg
adc
pop
mov
inc
ds
mov
add
mov
stos
adc
add
cwtl
repz
bound
inc
jp
push
cli
add
inc
loopne
das
imul
lcall
orb
test
mov
inc
dec
rclb
add
pop
test
mov
lods
iret
add
add
lods
iret
roll
cmp
cwtl
lret
bound
subb
sbb
bound
lret
push
sbb
add
fisttpl
sbb
add
add
adc
add
shlb
fs
fs
and
out
fs
aam
ds
in
movsl
xlat
mov
pop
add
fldl
fwait
loope
adc
fs
push
adc
inc
shlb
pop
pop
inc
jbe
xor
mov
inc
xchg
adc
push
les
pop
ja
push
shlb
lods
insb
sub
aam
sub
and
mov
and
mov
sbb
mov
add
lret
adc
rclb
adc
movb
incb
sub
fdivrl
enter
mov
add
add
outsl
push
sti
add
xlat
and
rolb
jp
das
mov
sub
test
daa
les
mov
add
out
addr16
jmp
sbb
jle
dec
outsb
add
inc
out
add
push
bound
inc
popa
pop
adc
andl
inc
adc
bound
add
std
scas
add
das
push
mov
mov
add
out
lods
add
fldenv
jmp
jae
add
add
pusha
add
inc
add
inc
add
inc
add
adc
pop
test
add
pop
out
add
test
test
add
insb
push
or
add
stos
sbb
es
inc
or
add
subb
outsl
shlb
lcall
add
mov
pop
leave
andb
nop
loope
lret
add
ljmp
arpl
add
push
adcl
pop
pop
rolb
jecxz
and
aaa
hlt
das
scas
mov
repnz
out
mov
faddl
mov
sub
jecxz
add
mov
xor
jecxz
add
cli
pusha
add
mov
in
test
inc
sbb
mov
iret
faddl
das
pusha
add
call
inc
push
les
hlt
sub
loopne
les
add
std
cltd
addb
lret
movsl
pop
and
fsubrl
mov
das
mov
add
mov
mov
mov
adcl
out
mov
cmp
orl
shrb
cli
mov
bound
and
orb
add
test
outsb
test
fwait
stc
pop
and
hlt
loopne
mov
outsl
and
add
bound
loopne
inc
pinsrw
test
inc
xor
fs
xorl
incl
and
and
bound
das
testl
test
add
sbb
hlt
sbb
add
loopne
jmp
loopne
pop
cli
lcall
ja
adc
push
test
in
adc
or
mov
fildl
jmp
mov
sub
mov
mov
jno
or
shlb
inc
and
stos
lret
jmp
add
add
fs
mov
iret
fdivrl
jl
enter
lret
out
add
add
ret
aam
xor
xchg
insb
add
in
xchg
rep
push
jmp
add
insb
push
fwait
std
insb
push
add
lcall
add
sub
adc
and
das
push
push
andb
or
add
sti
pusha
add
insb
push
movb
jmp
xchg
lret
sti
insb
push
inc
les
add
jmp
loopne
incl
loopne
or
loopne
and
orb
rolb
or
push
or
add
push
add
nop
insb
stos
lret
out
subb
add
add
loopne
cwtl
shrb
outsb
xchg
add
movl
push
add
cmpsb
insb
push
fimull
loopne
mov
add
lret
bound
cmp
loopne
add
in
imul
insb
mov
mov
outsl
adc
sbb
and
rolb
adc
push
mov
pop
mov
lret
add
jecxz
addr16
adc
loopne
add
or
inc
adc
lret
add
iret
inc
pusha
add
sub
out
loopne
add
out
incl
pop
push
xor
add
cmp
push
push
lock
and
ljmp
push
mov
add
push
add
push
add
add
push
add
add
add
adc
xchg
adc
rclb
add
adc
adcl
bound
lods
and
out
mov
sub
insb
pop
fbstp
add
icebp
add
pmulhuw
add
xchg
lret
or
nop
iret
lock
mov
and
in
cs
add
imul
add
out
fs
lret
inc
stos
or
push
jbe
add
aas
shrl
push
std
mov
jecxz
add
adc
mov
loop
add
push
adc
fists
mov
std
push
mov
inc
add
adc
add
inc
add
xor
xchg
rolb
roll
repz
xor
add
push
scas
jo
nop
sbb
fwait
hlt
outsl
adc
loopne
mov
and
add
aad
add
add
adc
add
pop
loopne
lock
add
addl
push
rcrb
pop
and
loopne
adc
or
sbb
loopne
arpl
jo
outsl
adc
loopne
jle
addb
and
sbb
and
add
nop
mov
mov
fwait
shlb
pop
in
fwait
lret
imul
addb
fwait
pushl
xor
add
push
ja
add
pusha
addl
push
imul
push
fwait
addl
push
add
fwait
scas
cmpsl
add
ficoml
repz
inc
loop
shl
add
push
cmpsb
mov
scas
addl
push
fadds
roll
add
add
repz
xor
imul
rolb
gs
fs
bound
sbb
test
mov
add
adc
cld
mov
popa
add
repz
aaa
add
rolb
ljmp
lcall
std
xor
addb
or
addb
adc
inc
addl
push
jo
outsl
pusha
adc
loopne
out
addb
add
test
or
jno
add
jae
shrl
lcall
daa
rolb
inc
cmp
add
test
push
rolb
ret
pop
addb
lock
push
inc
addb
push
jo
add
add
scas
loopne
addb
add
push
insl
addb
add
loopne
in
rorb
outsl
adc
lcall
mov
add
rclb
loopne
add
add
or
add
shl
loopne
push
and
mov
add
stc
add
insb
adc
push
loopne
bound
mov
mov
insb
push
jo
mov
rolb
test
dec
iret
icebp
dec
lret
add
jb
xor
and
imul
shl
out
inc
xor
outsl
adc
loopne
adc
and
iret
outsl
add
outsl
adc
loopne
push
sub
and
mov
rolb
gs
iret
rorl
xchg
loopne
mov
and
cli
adc
stos
adc
je
clc
adc
add
adc
add
outsl
adc
loopne
push
or
shrb
stc
xor
loope
add
adc
add
sub
sbbb
outsl
adc
xchg
out
cmp
rolb
shl
xor
imul
iret
adc
add
fwait
shrb
aad
push
pop
inc
add
or
mov
roll
icebp
roll
ret
add
rolb
iret
push
fwait
lar
xchg
push
add
addl
loopne
sub
push
xchg
hlt
inc
scas
add
loopne
andb
loopne
and
rclb
fwait
dec
add
int3
fwait
stc
outsl
adc
test
push
aam
cmc
roll
rcl
add
add
rolb
das
test
inc
add
push
out
mov
fsubl
call
sbb
mov
push
mov
mov
add
inc
inc
roll
mov
test
test
inc
push
inc
inc
add
imul
sub
inc
or
imul
add
sbb
stc
push
sahf
push
movsl
add
movsb
add
add
add
mov
imul
addb
shrb
push
add
push
mov
push
add
push
adc
mov
push
test
add
out
push
add
cmp
push
add
lods
add
pusha
push
add
push
add
push
add
loopne
push
jo
mov
add
add
loopne
push
xchg
add
push
add
inc
data16
push
leavew
xor
cwtl
xchg
add
jecxz
enter
adc
and
xor
push
xlat
rorb
bound
fdivp
add
stos
hlt
add
lock
adc
outsl
rclb
repnz
add
mov
adc
loopne
das
xor
insb
pop
mov
lret
mov
add
add
fwait
xlat
insb
pop
loop
leave
add
fwait
sti
cmpsl
loopne
add
in
add
sub
add
add
add
sub
xor
add
ljmp
out
add
sub
sbb
pop
and
add
imulb
add
in
add
fs
insb
adc
add
cmp
lret
jp
cmp
lret
iret
out
insb
mov
fsubrl
outsl
push
and
jp
cmpsl
insb
paddsw
outsl
sub
nop
add
push
in
add
xor
pop
outsl
push
sbbl
add
fwait
jmp
add
or
add
add
mov
stos
lret
lret
add
add
xchg
lret
adc
in
jge
cwtl
iret
aad
add
imul
adcl
lods
push
xorb
andl
cmpb
loopne
mov
popf
in
and
add
inc
andl
andb
push
addb
rclb
sbb
add
loopne
in
push
sbbl
sbbb
adc
adc
xchg
cmpl
add
addl
mov
add
subl
loopne
pop
add
subl
subb
dec
addb
adc
pop
sbbl
subl
mov
addb
push
ret
adc
ret
rolb
pusha
adc
sbbb
lret
mov
loopne
sub
rcll
add
outsl
adc
loopne
pop
add
add
jecxz
push
dec
adc
add
sti
push
add
cld
mov
and
cmpb
das
loopne
cltd
sbb
aas
dec
mov
sti
sbbl
loop
or
inc
add
inc
clts
aad
or
into
addb
jmp
add
sub
adc
mov
xchg
lret
fsubl
add
jecxz
xchg
lret
testl
iret
rolb
lret
outsl
adc
lcall
add
cs
mov
das
xor
push
fsubl
orb
test
push
inc
addb
int3
rorl
or
push
mov
insb
add
movsl
fwait
enter
movsl
adc
adc
push
inc
adc
scas
push
inc
mov
add
mov
adc
inc
and
mov
aas
add
out
push
add
push
sub
pop
fbstp
subb
fiaddl
test
lcall
lret
add
mov
add
add
add
sbb
and
add
outsl
es
popa
sbb
adcb
inc
sub
loop
mov
aas
ret
xor
add
mul
push
inc
sbb
push
jb
push
loopnew
add
and
loop
pusha
inc
mov
insb
pop
add
imul
insb
and
out
imul
jecxz
loopne
fwait
and
push
jne
inc
add
xor
movsb
mov
test
adc
out
aas
aas
add
pusha
push
mov
and
lds
pop
scas
jl
add
ret
loopne
lods
ret
pusha
or
pop
sbb
jmp
push
add
fwait
sahf
insb
add
loopne
notl
std
loopne
repz
adc
mov
popa
inc
push
testl
push
addb
push
push
add
add
loopne
mov
mov
inc
add
xor
fwait
loope
push
jae
adc
lods
push
or
or
add
cltd
xlat
popa
pop
arpl
ret
popa
or
or
add
ss
call
loop
pop
incl
addb
cmc
cmpsl
fwait
loopne
mov
outsl
loope
push
sbb
add
inc
push
add
add
push
or
add
mov
adc
add
out
lods
push
push
fwait
jecxz
pusha
cmp
js
popa
inc
add
lea
sub
inc
cmc
add
lret
in
loopne
das
sbb
aaa
hlt
das
insb
nopl
pusha
mov
or
add
popa
addb
test
add
inc
lcall
stc
ljmp
mov
shrb
loopne
add
add
iret
lcall
mov
out
add
aaa
loopne
add
xchg
cld
nop
jmp
push
fwait
add
fiaddl
add
sub
loopne
insl
mov
adcl
flds
or
add
jmp
fs
add
ds
jecxz
jmp
add
jmp
add
in
fs
push
loopne
or
rclb
imul
add
inc
adc
fwait
loop
shrb
mov
add
sub
add
out
stos
notl
and
out
xchg
jecxz
and
pusha
push
ljmp
test
add
push
sub
fs
push
pop
loopne
xchg
pusha
add
add
add
subb
and
inc
or
add
sub
outsl
xchg
add
scas
add
adc
imul
push
and
sbb
loope
leave
push
loopne
sarl
fbld
add
sub
lcall
out
ss
push
pop
mov
shlb
inc
add
push
add
jmp
push
sub
mov
xor
jbe
test
and
add
add
add
push
dec
and
xcrypt-ctr
cmpsl
sbb
outsl
mov
iret
push
xchg
add
popa
or
rolb
push
pusha
inc
add
or
pop
jmp
xchg
lret
icebp
mov
xor
icebp
iret
adc
adc
push
and
aam
lcall
xor
fsub
add
xor
mov
loopne
in
or
add
rorb
pop
out
add
pop
ret
adc
push
sbb
out
fldl
shlb
sub
push
xor
imul
add
das
or
sub
add
lock
clc
pusha
sbb
inc
add
insl
jno
add
outsl
xchg
add
add
lret
out
test
jecxz
test
addr16
in
add
test
add
or
adc
scas
add
test
add
xor
repnz
mov
xor
xchg
xor
popa
xor
dec
xor
subb
add
sub
stos
mov
add
add
add
ljmp
andb
scas
add
add
xor
adc
add
mov
add
add
and
add
xor
xor
add
xor
mov
into
xor
fdivs
add
xor
sahf
xor
jp
add
add
and
scas
add
ds
inc
add
scas
add
xor
lods
adc
scas
add
scas
push
add
add
add
push
lock
add
add
xor
cmp
add
and
add
adc
add
add
cltd
add
pusha
add
add
sbb
mov
cs
jmp
jmp
cs
in
insb
verw
sub
out
mov
push
in
insb
xchg
lret
add
add
lcall
loope
cmp
add
bound
or
fdivrl
jmp
add
mov
stc
sub
add
mov
xor
mov
fwait
in
adc
adc
dec
add
mov
lock
pop
adc
sbb
mov
sbb
mov
adc
test
mov
nop
mov
push
add
bound
dec
shlb
pushl
lock
lcall
add
cli
scas
add
in
gs
pusha
add
pop
insb
dec
adc
mov
add
sub
insb
add
inc
add
ja
scas
add
xchg
jecxz
cltd
xchg
jmp
test
bound
in
pop
jo
sub
add
mov
and
mov
imul
rolb
sbb
adc
stos
lock
add
add
mov
add
mov
mov
dec
test
test
add
cltd
incl
outsl
xchg
testl
fildl
das
pop
jb
add
filds
push
pop
rolb
loopne
jecxz
add
mov
inc
loopne
mov
or
fs
mov
idivl
bound
pop
add
out
pop
mov
or
arpl
pop
aas
cmpsb
adc
rorl
lret
insb
xchg
xorb
rclb
rolb
mov
scas
orl
ret
lock
adc
mov
inc
mov
rolb
and
pop
out
add
jo
insb
add
mov
ljmp
mov
add
adc
adc
add
push
lcall
inc
add
out
jmp
add
jmp
shrb
pop
add
jo
inc
in
jb
jecxz
lcall
lcall
inc
out
fwait
in
stos
out
adc
add
stos
adc
inc
and
cmp
or
add
mov
outsb
add
aas
mov
bound
add
mov
mov
and
or
mov
push
add
shlb
scas
add
add
fadds
cli
xchg
rolb
sbb
and
stos
inc
mov
jns
sub
add
fsubrl
mov
data16
jecxz
stos
das
mov
stc
icebp
adc
add
test
xchg
pop
jmp
ret
mov
es
sub
insb
or
outsb
add
lock
out
push
bound
mov
dec
adc
dec
mov
inc
add
cs
pushl
loope
add
fsubrl
gs
mov
pop
jmp
add
fsubrl
scas
insb
push
out
addb
clc
nop
sbb
xorl
test
addb
pop
xor
add
pop
stos
sti
or
mov
lcall
test
add
push
cmp
mov
pop
mov
push
xchg
test
mov
or
mov
push
xchg
xor
xchg
jo
test
adc
or
adc
adc
adc
and
and
loopne
sub
nop
pop
shlb
rcrb
out
mov
popa
xor
jb
mov
imul
mov
push
add
push
add
lcall
inc
adc
mov
repz
mov
daa
loopne
pop
test
adc
add
insb
pop
in
fwait
out
pop
add
lcall
or
lret
mov
data16
loope
add
inc
test
jbe,pn
or
cs
in
mov
add
mov
test
add
adc
in
data16
lcall
icebp
pop
cli
daa
and
add
adc
sub
jmp
add
sti
mov
inc
adc
mov
fwait
out
or
adc
es
inc
aaa
jmp
push
add
sbb
add
call
data16
jmp
das
jmp
add
jnp
lods
add
cmp
popa
add
add
add
loopne
pop
add
add
mov
adc
adc
nop
fs
jmp
jmp
aaa
add
int3
add
add
fs
ds
insb
or
stos
sbb
loop
add
add
or
mov
add
add
xchg
fsubl
jp
add
out
fsubrl
and
pop
add
add
add
adc
ds
fcoml
data16
insb
cs
push
jnp
inc
lods
add
pop
dec
mov
fsubrl
add
cs
add
push
add
add
fsubr
out
add
dec
add
and
sub
fs
pop
in
daa
fs
mov
adc
psubsb
or
arpl
adc
or
add
cs
add
fsubrl
sub
add
add
cli
jg
add
mov
scas
add
lcall
or
fs
add
pop
inc
adc
adc
adc
sub
push
mov
rolb
adc
repnz
mov
addb
lcall
adc
and
andb
sub
ret
add
add
ljmp
cmp
add
adcb
xchg
add
mov
cmp
sub
mov
lret
sub
cltd
int3
sbbb
add
lcall
add
loopne
cmp
fs
add
fcompl
add
mov
lret
sti
mov
pop
add
cmp
mov
add
test
or
add
jl
add
mov
subb
pop
lcallw
adcb
add
or
stos
pop
pop
addb
push
loope
add
add
add
add
adc
call
sbb
loopne
hlt
add
stos
out
add
jmp
sbb
in
lcall
adc
insb
mov
add
add
fwait
shll
adc
out
cltd
lret
pop
dec
inc
pcmpgtb
daa
push
out
inc
push
int3
daa
aam
add
test
mov
mov
mov
sbb
add
stos
out
fsubrl
add
jmp
movb
add
or
ljmp
push
lcall
pop
push
rcll
jecxz
pop
das
adc
mov
jmp
add
jecxz
shll
add
xor
jp
test
cmpsl
insb
orb
insb
das
ljmp
adc
jmp
or
inc
add
fwait
loopne
xor
fwait
in
or
adc
iret
fwait
loopne
add
add
adc
adc
fwait
out
push
xadd
out
call
lods
adc
adc
pop
add
mov
or
mov
and
push
fwait
cli
rcrl
add
mov
lcall
lcall
add
jmp
fwait
add
loopne
out
push
mov
xchg
cwtl
jmp
mov
sub
xchg
addb
jmp
add
mov
scas
add
sub
mov
add
add
mov
mov
adc
add
rorb
stos
sti
data16
add
bound
pop
xorb
outsl
add
mov
adc
aaa
mov
inc
addb
aaa
bound
addb
add
add
adc
test
adc
lcall
mov
pop
inc
jle
add
bound
dec
add
add
bound
push
add
add
xchg
add
pop
fildl
loopne
xorb
add
or
pop
lret
shrb
sub
push
add
decb
in
inc
add
pushw
pusha
add
sub
xor
in
and
data16
fs
push
pusha
push
bound
sbbb
es
mull
shrb
mov
add
adc
add
fiaddl
insb
sub
mov
adc
xchg
inc
or
addl
and
sub
test
bound
inc
add
inc
and
addl
add
add
lret
shll
add
add
ljmp
add
lock
loopne
push
das
andl
add
or
adc
insb
adc
sbb
add
cmp
jl
cmp
sarb
outsb
add
adcb
fs
lcall
jmp
adc
test
mov
push
cmc
insb
adc
out
fwait
loope
rolb
nop
cli
and
add
add
ljmp
inc
cmp
adc
add
cmp
mov
adc
lcall
adc
or
sbb
xor
icebp
rorl
bound
loopne
push
or
add
xor
add
push
mov
mov
rolb
adc
mov
imul
sub
das
mov
and
or
outsb
add
jmp
push
lret
incl
pop
mov
rclb
lret
aad
sub
mov
mov
dec
orb
mov
or
bound
cmp
inc
inc
cmp
dec
cmp
cmp
fadds
lods
xchg
mov
out
inc
mov
push
ret
bound
cmp
cmp
push
insb
add
loopne
loope
ret
xor
adc
and
arpl
fldenv
das
shrl
add
pusha
add
mov
aaa
mov
sub
mov
adc
add
add
loopne
mov
lcall
add
lcall
adc
lret
rcrb
push
and
add
add
add
test
bound
nop
jmp
add
lret
adc
test
sub
seto
mov
fs
inc
mov
mov
out
adc
addb
add
out
test
jmp
stc
fcoml
es
add
jmp
add
out
and
cld
mov
add
pusha
gs
fwait
jmp
loope
sub
out
add
push
fwait
call
add
outsb
adc
adc
adc
jmp
insb
xchg
inc
out
lcall
cmp
add
pop
shlb
add
das
scas
sub
pop
scas
sti
add
cwtl
in
fsubrl
sub
loopne
cmpsb
imull
les
js
add
add
add
lcall
pop
add
adc
data16
adc
stos
sbb
into
stos
pop
add
shlb
pop
in
adc
pop
pop
push
adc
mov
jbe
test
icebp
add
add
adc
inc
icebp
test
bound
test
add
roll
mov
sub
icebp
test
mov
mov
sub
xchg
add
add
sub
or
test
push
adc
or
add
xchg
add
gs
sub
test
jmp
in
sub
test
push
fwait
add
idivl
jecxz
add
pop
sti
xorb
or
insb
sub
inc
jg
add
js
adc
push
shl
cli
adc
xchg
or
jp
test
adc
pop
sti
scas
add
xor
fs
adc
or
sbb
or
fwait
push
bound
sbb
add
test
mov
add
nop
pop
cmp
and
jmp
cli
lret
jo
adc
add
fwait
lret
jmp
add
add
cli
dec
loop
fwait
push
in
add
sbb
add
fisttpll
sub
imul
adc
add
add
mov
add
mov
lds
and
mov
add
push
sbb
adc
mov
push
push
inc
outsb
shrl
lcall
mov
mov
mov
push
xlat
rclb
sub
into
add
sbb
cwtl
clc
dec
loopne
in
and
push
adc
sarb
rclb
sub
mov
mov
add
mov
aaa
cltd
jmp
das
inc
add
loopne
sub
inc
push
adc
mov
test
les
pop
mov
add
add
cmp
test
mov
mulw
jmp
sub
or
pop
pop
and
xchg
jecxz
inc
fwait
cmc
adc
bound
rorl
jno,pn
add
add
orb
adc
outsb
add
and
mov
add
out
adc
fs
data16
mov
add
stos
pop
fwait
mov
push
loope
jl
add
nop
daa
mov
add
xchg
sbb
loop
icebp
mov
xor
add
pop
sub
jge
adc
shrb
test
xchg
sbb
repz
adc
sbb
pusha
sbb
fs
xchg
add
les
sub
and
xor
inc
mov
cmp
scas
mov
loopne
mov
repz
faddl
addr16
mov
loopne
mov
mov
sti
out
stos
adc
outsl
xchg
adc
lcall
scas
aam
jecxz
xor
jb
lcall
add
adc
sbb
lods
inc
push
inc
or
and
loopne
and
loopne
sub
outsb
xlat
stos
mov
cmc
bound
mov
aas
adc
shlb
test
push
shrl
and
loopne
jp
add
lret
add
pop
scas
add
add
nop
xchg
adc
add
add
leave
add
cltd
loopne
scas
incl
push
add
std
add
loopne
cmpsl
jecxz
adc
in
fwait
jmp
mov
icebp
mov
add
insb
add
adc
sbb
add
add
and
push
add
add
add
mov
daa
data16
lret
jmp
add
jo
and
sbb
add
jno
cs
or
add
addl
insb
pmaxsw
jmpw
es
adc
add
test
mov
sub
stos
mov
xchg
xor
outsl
xor
stos
imul
dec
xor
pop
xor
pop
push
xor
xor
xor
and
add
add
xor
jo
add
sbb
mov
mov
jo
mov
mov
pop
add
cmp
pop
inc
jp
adc
icebp
lcall
testl
jo
adc
adc
adc
mov
mov
insb
sub
adc
mov
add
add
add
add
jmp
sub
lcall
add
add
dec
mov
jo
jno
pop
int3
and
fs
test
nop
add
pop
cmp
mov
add
add
roll
leave
add
lock
xchg
aas
jno
insb
mov
add
jp
imul
in
mov
add
jecxz
fwait
ljmp
inc
pop
outsb
and
add
add
pop
inc
out
lcall
pop
pop
orl
jo
jo
lahf
xor
nop
or
xlat
mov
out
push
sahf
add
xor
mov
stos
push
out
aas
mov
inc
push
nop
cmp
lds
push
push
or
loope
mov
adcb
lcall
lcall
out
imul
add
xorl
sbb
add
mov
lcall
pop
iret
xor
frstor
pusha
sbb
adc
xchg
jecxz
call
add
dec
add
sbb
mov
insb
sub
jecxz
xchg
pop
push
push
push
add
adc
popa
jne
imul
pusha
or
lcall
push
shr
adc
lea
mov
mov
lahf
out
pusha
xchg
adc
cli
xchg
mov
cmpsb
add
pusha
add
out
stos
pop
mov
cwtl
fsubs
rclb
pusha
jmp
daa
pop
mov
add
lcall
push
mov
xor
and
out
test
mov
mov
cld
sbb
add
adc
sbb
cwtl
mov
cmp
mov
xchg
mov
add
inc
addr16
adc
push
pop
orb
notb
adc
imul
or
push
mov
push
add
mov
aam
fwait
lcall
pushl
orb
out
add
lcall
fs
out
adc
lcall
xchg
cli
scas
add
fwait
shll
pop
aam
fwait
add
outsb
xchg
pop
add
dec
add
cwtl
mov
mov
adc
sub
add
stos
add
sub
add
sub
pop
push
pop
jge
adc
and
add
add
mov
lcall
push
fists
adc
adc
mov
es
addb
add
mov
add
pop
pop
cmc
aam
add
imul
xchg
xor
xchg
add
in
lcall
in
fcoml
addr16
loopne
add
repz
and
add
adc
cs
adc
add
sti
mov
fs
sub
enter
lcall
add
stos
add
outsl
xchg
loopne
popf
push
add
in
pop
add
add
sub
mov
inc
out
addl
cs
add
sbb
pop
push
lcall
xchg
orb
mov
inc
add
add
push
fwait
stos
xchg
incl
add
test
adc
call
and
add
push
adc
adc
loopne
verr
or
adc
and
fs
adc
aam
loopne
sub
jmp
add
add
mov
add
mov
lcall
sbb
addb
mov
add
mov
test
test
sbbl
fwait
lods
adc
orb
sbb
lcall
fldl
icebp
andb
add
out
lcall
loop
mov
sub
mov
push
fsubrl
mov
es
cmp
pop
sbb
popa
inc
sbb
inc
sbb
aad
sbb
inc
sbb
das
in
fwait
inc
enter
adc
ret
xlat
ret
or
sbb
inc
or
sbb
xorb
jns
cli
ja
xor
lcall
sbb
inc
adcb
adc
add
rolb
mov
sbb
aaa
add
test
scas
fwait
test
push
add
aad
mov
shrb
add
inc
adc
andl
aas
stos
pop
fs
sbbb
cmpb
sbbl
jmp
inc
adc
stos
sbb
data16
cmpsl
subb
add
fs
sbb
into
bound
mov
sbb
data16
out
or
stos
nop
pop
adc
insb
add
lcall
push
mov
add
add
fwait
jmp
das
add
subl
sbbl
add
pop
mov
adc
rorb
cmp
cmp
add
pop
scas
pusha
sti
inc
pop
sbbl
add
add
pop
add
add
mov
or
das
shll
fs
test
imul
adc
orb
iret
outsb
xchg
add
add
lcall
roll
jns
add
pop
sub
loopne
rcll
ret
mov
sub
lcall
adc
loopne
sbb
loopne
popa
and
mov
pop
ret
imul
add
cmp
add
scas
add
mov
add
add
mov
sub
pop
insb
adc
loopne
push
loopne
push
push
add
lcall
out
sub
stos
add
out
test
test
insb
adc
ljmp
mov
add
insb
pop
adc
lcall
xchg
ljmp
fidivrl
inc
add
shrl
stos
fidivrl
push
fs
fcmovu
loopne
add
dec
fiadds
rolb
incl
sub
stos
cmp
data16
cmp
jecxz
and
mov
ljmp
xchg
pop
loop
popa
sbb
lcall
addr16
ret
sub
pop
insb
add
rcrb
testl
sub
sub
fwait
loop
mov
and
jmp
xchg
sbb
inc
sbb
add
test
xchg
add
inc
cmp
pop
shlb
pusha
sbb
nop
les
adc
int3
and
mov
lret
insb
push
adc
loopne
xor
add
lret
mov
repz
xchg
lret
ret
pusha
add
sbb
cli
push
inc
or
std
pop
cmp
add
insl
mov
or
adc
xchg
lret
jecxz
imul
add
ljmp
fdivl
add
add
mov
mull
add
ljmp
lret
cwtl
movsb
popf
jmp
iret
cwtl
lods
outsb
xchg
add
loopne
mov
out
add
adc
pop
mov
lds
lods
js
push
dec
adc
push
lahf
inc
inc
fadd
mov
addb
addb
addb
imul
mov
loopne
test
mov
and
add
insb
mov
jecxz
push
sub
ret
rolb
and
punpcklbw
lret
roll
leave
mov
and
jecxz
pusha
pop
loopne
mov
loopne
and
and
adc
add
adc
bswap
sub
inc
sub
imul
test
mov
add
imul
imul
addr16
adc
and
add
inc
xor
mov
rorb
pop
subb
shlb
fiadds
data16
pop
loope
push
bound
xor
cmp
push
sarb
lcall
inc
cmp
add
add
pop
lcall
inc
js
adc
aam
push
in
loope
add
add
adc
push
add
mov
in
sub
das
popa
in
mov
add
mov
rolb
rolb
inc
fdivl
add
mov
jecxz
mov
cmp
sbb
faddl
inc
dec
call
add
mov
jns
add
stos
lret
add
out
lcall
test
sbbb
pop
pop
movl
mov
or
lcall
adc
mov
push
dec
stos
hlt
and
loop
xchg
les
pop
lcall
lods
fs
add
jmp
mull
mov
mov
jge
add
sub
inc
push
and
repz
mov
mov
in
sbb
or
push
enter
or
sbbb
shrb
pop
adc
loopne
imul
out
add
enter
fwait
mov
fwait
movsb
repz
adc
inc
arpl
ret
adc
add
jne
sub
mov
addl
add
inc
insb
add
out
lcall
adc
inc
lcall
mov
add
or
sub
out
lcall
add
jo
in
sub
sub
adc
sbb
inc
add
bound
adc
repz
daa
add
xchg
ljmp
mov
mov
push
mov
lea
loopne
jmp
add
out
cs
outsb
add
xor
mov
ljmp
fs
lret
add
add
mov
push
push
std
add
lret
stc
or
xchg
push
mov
es
pop
arpl
inc
dec
sub
mov
sbb
sub
xchg
xchg
cld
mov
push
add
sbb
inc
push
add
loopne
test
xchg
inc
stos
add
push
add
push
lret
pop
add
push
add
jmp
lods
add
cltd
icebp
mov
sub
pop
xchg
ret
rolb
xchg
aaa
lock
sub
add
outsb
sub
or
mov
inc
xor
pop
inc
cli
add
xor
sbb
cmp
fsubrl
outsl
xchg
jecxz
loopne
add
cmpsl
insb
bndstx
add
inc
jmp
outsl
adc
shrb
mov
aam
fwait
popf
data16
adc
xchg
aam
test
fs
cli
test
insb
cs
mov
or
pop
jmp
sub
push
ljmp
inc
add
inc
add
add
lods
insb
das
out
or
xchg
daa
cmpsb
push
ljmp
sti
popa
cmpsl
mov
mov
aam
add
stos
adc
jmp
or
cmpsb
pop
mov
inc
push
add
add
in
add
sbbb
sbb
add
add
add
call
das
push
mov
loopne
jo
out
sbb
mov
lods
pop
push
or
adc
bound
mov
nop
pop
adc
pop
shl
gs
add
and
sbb
fwait
add
mov
add
add
fwait
std
shl
add
in
ret
add
int
add
call
mov
pusha
pop
and
add
add
adc
jmp
imul
adc
loopne
inc
jo
fs
fidivrl
jecxz
pop
mov
xchg
fs
rolb
and
insb
pop
in
mov
pop
xorb
in
aaa
test
jo
push
xor
movups
xor
in
sub
testb
call
push
sub
add
add
jb
hlt
sbb
or
add
adc
adc
mov
and
cmc
xor
add
nop
or
or
fwait
inc
stos
bound
jne
and
xchg
loope
jmp
xchg
add
add
cli
push
xorl
das
xchg
xor
sub
movsb
or
add
insl
nop
add
rcrl
cmp
add
add
cmp
fmull
arpl
repnz
rcrb
outsb
mov
adcb
mov
pshufw
cmpsb
adc
adc
ss
xor
test
adc
sub
xor
fwait
cmc
inc
and
iret
filds
and
pop
cmp
add
sbb
lcall
fwait
adc
ret
adc
mov
insb
enter
sub
sub
mov
adc
xchg
sti
data16
mov
adc
add
bound
cmpsb
push
push
orb
adc
xor
mov
adc
pop
mov
hlt
test
popa
add
mov
pop
fldenv
adc
add
push
lcall
adc
pop
lret
inc
adc
inc
lock
add
orb
jmp
jne
or
pop
in
push
and
push
pop
add
sbb
das
bound
push
add
lcall
dec
cwtl
jmp
add
pop
xor
inc
add
sub
add
mov
mov
add
roll
push
rolb
push
insb
adc
fwait
push
pusha
adc
xor
jmp
push
add
out
xor
je
xchg
ljmp
adc
fadds
add
add
and
incl
iret
adc
mov
sbb
add
and
xor
pop
or
push
outsb
shll
pop
cmp
loop
add
scas
cltd
cli
add
add
jg
add
insb
mov
rolb
rolb
lcall
repnz
adc
or
xor
sub
pop
adc
push
xchg
into
or
mov
loop
or
outsb
add
out
pop
mov
xlat
add
mov
ljmp
pop
in
inc
lock
inc
sti
fcoml
test
sbb
iret
inc
or
mov
add
jmp
stos
lret
fbld
lret
cmpsl
add
add
bound
mov
sub
inc
scas
add
aam
scas
add
roll
arpl
adc
xchg
out
add
add
add
adc
add
stc
scas
add
pop
jmp
insb
pop
add
repnz
lcall
in
sti
mov
fadds
testl
lret
testl
add
xchg
add
add
pop
mov
add
pop
out
pop
fsubrl
add
mov
sbb
adc
imul
imul
outsl
rorl
add
push
xchg
loopne
stos
lret
add
sbb
bound
mov
mov
jmp
rol
sar
add
in
sub
bound
daa
mov
and
aam
fwait
call
add
adc
aam
sub
imul
adc
pop
fs
add
sti
fs
and
das
mov
or
outsl
mov
add
fs
aam
loopne
add
orb
pop
push
lock
add
adc
add
mov
iret
lcall
sub
adc
addb
in
or
insb
inc
addb
add
adc
scas
add
das
fwait
aad
in
xchg
inc
mov
inc
sbbb
push
xchg
popa
adcb
adcb
jnp
adc
adc
adc
adcb
out
insb
mov
xlat
add
add
jge
jl
das
fwait
mov
add
or
pop
lods
add
test
sub
and
or
add
in
fs
pop
jne
inc
sbb
xlat
fs
rolb
filds
pop
adc
adc
mov
add
in
lcall
adc
inc
icebp
inc
or
lcall
adc
sbb
imul
adc
adc
or
pop
fwait
inc
or
dec
adc
adc
xor
lcall
mov
fisubl
inc
or
add
mov
adc
fs
push
fwait
mov
push
fwait
shrb
stos
and
out
push
sti
rorb
push
add
inc
mov
jmp
inc
add
ljmp
adc
pop
ljmp
out
das
lcall
fsubrl
scas
add
add
mov
add
mov
pusha
mov
lods
add
imul
push
bound
cltd
jecxz
out
mov
shlb
dec
inc
push
outsl
inc
xchg
loope
sub
xor
call
add
xchg
pop
inc
add
adc
pop
adcb
pop
mov
xor
mov
adc
pop
dec
add
add
nop
addb
pop
add
imul
adc
add
out
mov
lods
add
add
mov
lods
pop
sub
add
fs
add
fwait
lret
fs
ljmp
adc
addl
xchg
mov
data16
adc
sbb
adc
roll
sub
cmp
mov
add
lcall
sub
add
ror
inc
mov
add
incl
push
addr16
add
add
xor
mov
loopne
loop
mov
add
out
aas
loopne
pusha
sti
mov
push
sbbb
jmp
mov
in
popa
push
add
pop
data16
data16
pop
xchg
ljmp
add
mov
lcall
xor
push
loope
jns
mov
fs
sbb
das
lcall
faddl
add
lahf
sti
mov
pop
inc
cmp
test
pop
mov
dec
ljmp
das
inc
add
data16
mov
add
das
data16
addl
mov
mov
adc
add
mov
aaa
pop
mov
cwtl
inc
daa
sbb
es
pop
fld
push
mov
and
fwait
std
addb
sbbb
lahf
pusha
push
dec
data16
pop
inc
pop
pop
push
mov
in
and
loopne
pop
and
or
adc
pop
sbb
and
fs
pop
mov
sub
mov
and
and
add
add
add
inc
adc
fs
pop
pop
addb
or
pop
mov
bound
dec
incb
fwait
jmp
aaa
in
add
mov
inc
or
add
add
es
or
outsb
add
addl
outsb
xchg
testl
mov
nop
add
insb
cli
and
test
pusha
jp
testl
loopne
popa
outsl
add
sti
bound
int
ds
mov
sub
pop
inc
fadds
cmp
sar
mov
xchg
addb
add
pusha
and
push
and
insb
xchg
jecxz
sbbb
clc
addb
mov
jae
add
bound
test
xchg
bound
push
add
add
inc
xchg
dec
dec
inc
andb
bound
shlb
adc
test
mov
shrb
add
test
add
loopne
sti
and
inc
rorb
mov
pop
dec
inc
xlat
add
lahf
clc
mov
pop
leave
pop
and
pusha
scas
stos
lret
add
pop
adcb
out
adc
mov
sahf
xor
pop
xor
arpl
pop
cmpsb
mov
add
mov
sti
add
fs
mov
inc
mov
fbld
addb
stos
pop
mov
pushf
scas
mov
lcall
fildl
cmp
aam
fwait
fs
jnp
adc
jl
inc
out
test
pop
mov
xor
pop
aaa
rolb
inc
jmp
outsb
ljmp
mov
testl
xchg
adc
insb
pop
adc
lcall
add
xorl
add
mov
int3
lcall
adc
movsl
rolb
pop
add
mov
adc
lret
jmp
popa
inc
fs
bound
push
adc
adc
daa
sub
pop
xchg
loopne
cmpsl
rcrb
loopne
loopne
mov
pop
rorb
sub
fsubp
add
add
push
pop
add
inc
jb
add
lret
mov
pusha
jne
push
mov
bound
pop
inc
clc
addb
addl
pop
in
and
lcall
xor
cmpsl
push
or
pop
pop
scas
push
notl
sbb
pop
and
add
adc
aad
mov
and
lret
mov
push
nop
je
scas
add
scas
sbbb
mov
lret
add
fcomip
pusha
rolb
xlat
mov
adc
imul
push
add
pop
pop
lock
insl
adc
sub
fneni(8087
add
test
sub
adc
out
nop
add
add
mov
adc
outsl
addr16
out
add
addr16
and
add
mov
push
add
aas
push
cmp
bound
add
and
add
xchg
adc
fwait
add
adc
jae
or
add
cld
mov
insb
sub
or
addb
mov
cld
add
das
adc
lret
add
push
or
sub
push
add
cmpsl
cmpsl
fwait
loop
insb
pop
cli
fwait
jmp
das
add
jmp
pop
out
and
add
jmpw
add
pushf
insb
rcll
fwait
in
pop
out
and
pop
test
fwait
add
sub
in
mov
add
add
fsubl
scas
test
inc
gs
loopne
mov
pop
push
or
es
sub
jmp
xchg
jmp
fwait
add
xchg
jecxz
jnp
sub
nop
mov
add
jmp
or
mov
adc
push
add
and
adc
xchg
jecxz
push
adc
inc
and
popa
or
and
lock
addb
aas
shl
add
adc
in
add
add
sub
pop
mov
jbe
adc
data16
pusha
adc
or
out
jno
orl
xchg
fwait
in
push
fdiv
push
clc
mov
rsqrtps
inc
add
inc
add
cltd
inc
add
nop
adc
test
mov
outsb
add
adc
sub
sub
push
mov
bound
xchg
add
add
or
add
pop
jo
nop
adc
mul
pop
bound
add
inc
or
movntq
push
and
cs
das
rcrl
add
mov
fs
and
and
pusha
sub
test
mov
jnp
add
loopne
in
insb
pop
in
lcall
loope
sbb
add
jp
bound
repz
bound
fwait
adc
adc
push
fcoml
inc
dec
loope
arpl
adc
add
add
sub
leave
bound
out
incl
pop
loopne
add
or
sbb
loopne
stos
or
add
add
mov
and
out
mov
add
insb
or
bound
pusha
cmp
or
add
or
push
or
adc
test
icebp
or
add
addb
test
cli
xor
pop
pop
cmp
push
or
mov
xchg
bound
stos
and
pop
mov
sub
sub
test
repnz
mov
fwait
mov
mov
cmpsl
pop
aas
cmp
push
sub
mov
mov
pushf
das
out
add
add
add
roll
sub
repz
xor
scas
add
add
outsb
xchg
sub
jno
cltd
nop
pushf
pop
adc
push
iret
jo
mov
stos
sbb
xor
or
mov
cs
pop
inc
or
xor
mov
stos
lret
sti
mov
cli
jnp
or
lods
pop
into
mov
xor
lcall
pop
pop
inc
jb
pop
fs
add
loopne
cmpsl
add
sbb
sbb
incl
js
adc
sub
mov
in
rolb
daa
loope
pusha
add
xor
test
aaa
pop
mov
pop
xchg
adc
fsubrl
mov
mov
add
insb
adc
ret
andl
add
push
xchg
jmp
pop
add
fadds
lcall
sbb
pop
and
sbb
ljmp
push
nop
push
pop
out
mov
xor
add
and
push
shlb
pop
adc
mov
xor
lds
xor
add
xor
in
fwait
stc
stos
jl
inc
dec
sbb
add
adc
pop
mov
adc
popa
and
mov
test
xor
jo
adc
add
push
bound
sub
jecxz
ja
fs
pop
push
out
xchg
dec
inc
cmpsb
out
daa
adc
add
pop
adc
fs
in
and
shl
sbb
dec
cmp
jo
mov
andl
pop
dec
sub
dec
shll
fs
sub
inc
out
xor
movsl
loopne
mov
addb
xor
aam
cli
bound
popa
cs
lock
xchg
in
push
in
mov
adc
add
jno
push
xchg
adc
fwait
push
out
cmp
mov
test
out
and
orl
ja
or
leave
rolb
add
stos
xor
leave
mov
gs
inc
add
bound
mov
test
into
bound
mov
and
add
sub
mov
jb
jbe
ficoml
je
in
je
mov
testb
pop
adc
adc
fwait
ljmp
ljmp
jmp
add
repnz
dec
mov
add
sti
pop
jge
adc
pop
cli
scas
add
test
fs
mov
test
test
mov
cmp
adc
fwait
add
insb
adc
lcall
aas
add
adc
add
mov
gs
sub
add
mov
xlat
add
mov
shrb
add
cmc
pop
xor
add
ljmp
stos
out
test
pop
jmp
adc
add
pop
adc
adc
jns
mov
adc
mov
add
cmpsl
mov
out
mov
adc
and
sub
shl
add
add
fldenv
aam
add
adc
data16
out
add
adc
adc
add
das
fwait
in
add
pop
or
adc
add
xorl
mov
add
add
out
add
add
add
test
add
sti
lods
add
stc
scas
add
add
lods
add
std
pop
add
bound
adc
adc
add
cmp
mov
test
cmp
out
addb
mov
out
mov
sub
jmp
mov
adc
outsl
shrb
mov
test
lcall
lahf
loope
lret
adcl
test
add
adc
addl
scas
add
sbb
add
inc
popa
rcrb
movsb
shrb
cs
testl
fsubrl
mov
add
add
data16
pop
out
add
mov
das
lds
lds
cmp
aaa
add
add
ja
adc
jg
push
xchg
rorb
sub
add
bound
inc
or
bound
addl
mov
inc
inc
or
add
add
in
add
mov
pop
lret
popl
aas
sbbb
repz
jne
or
roll
insb
mov
incl
add
lret
sti
mov
mov
or
add
insb
mov
adc
add
ljmp
cmc
mov
mov
add
lret
mov
pop
or
mov
insb
daa
adc
xchg
fwait
addl
lret
negl
fwait
add
sti
bound
and
popl
rcll
jmp
dec
add
addb
bound
pop
add
adc
pop
pop
mov
or
arpl
inc
pop
call
inc
add
jecxz
adc
rorb
xor
inc
add
xchg
addb
das
shlb
adc
aas
mov
test
pop
push
pop
inc
pop
add
std
insb
xchg
adc
sbbb
leave
add
popa
shlb
pop
repz
add
and
es
fdivl
add
jmp
add
call
pusha
xor
fwait
lret
mov
daa
sti
and
mov
mov
push
add
sub
mov
out
add
sbbb
add
adc
adc
pop
pop
mov
scas
add
sbb
filds
add
fucomip
add
mov
jae
ret
loopne
pop
adc
pop
pop
push
lcall
pop
adc
xor
push
sub
mov
testl
xor
jmp
aaa
bound
jbe
fwait
jmp
adcl
cltd
inc
pop
gs
and
mov
in
pop
xadd
mov
cmpb
lcall
repnz
or
pushf
mov
cli
mov
and
and
adc
add
fsubrl
mov
inc
or
pop
out
inc
pop
pop
and
mov
outsb
pop
add
ljmp
pop
imul
shlb
pop
loopne
pop
push
and
rorb
bound
adc
adc
sub
loopne
xchg
loopne
bound
add
cwtl
test
mov
xor
loopne
repnz
inc
mov
insb
xlat
add
imul
add
testl
and
pop
add
pop
lods
in
adc
ss
aad
add
xor
pop
xorb
addb
aaa
lods
adcb
push
loopne
add
add
decl
and
cmp
pushf
adc
add
rcrl
adc
daa
add
cltd
cmpsl
mov
xchg
sbbb
pop
adc
xor
adc
adc
lret
cld
mov
fwait
jmp
and
imul
fld
inc
rolb
push
inc
mov
adc
or
jp
and
add
cs
pop
out
cmpsb
inc
inc
inc
jae
or
dec
mov
inc
sub
inc
addl
fs
push
xor
outsl
add
add
xor
adc
push
cld
add
outsl
rolb
imul
push
and
mov
inc
xchg
push
outsl
inc
inc
sar
mov
or
shlb
sub
imul
shll
mov
mov
mov
mov
and
add
and
pop
add
cltd
in
test
mov
mov
cli
jmp
xchg
mov
add
xchg
mov
or
pop
mov
loopne
fcoml
cmp
inc
and
add
jmp
pop
adc
sub
insb
xchg
out
sbbl
aas
out
add
mov
cmp
add
add
cltd
sub
sub
push
inc
add
stos
lret
jecxz
test
fsubr
adc
jo
loop
adc
jle
add
push
cwtl
jmp
xor
lret
pop
mov
pop
add
xor
daa
inc
or
xchg
sahf
rorb
lret
jecxz
movsb
pop
add
and
loopne
add
jecxz
mov
ljmp
cmp
aam
add
xchg
sbb
sbb
mov
and
daa
daa
and
and
mov
inc
xor
jmp
inc
and
inc
loopne
xchg
pop
jo
inc
inc
inc
push
or
mulb
sub
mov
pop
enter
push
adc
fdivrs
jno
or
movb
push
add
repnz
shlb
add
shlb
cmpxchg
push
push
push
movsl
lahf
and
mov
add
add
stos
adc
lock
out
cmpsb
repnz
loopne
mov
shll
fiaddl
sbb
fnsave
je
sub
aaa
jo
or
shrb
fs
out
adc
or
aaa
xchg
insb
and
push
adc
cmpsl
pop
adc
mov
adc
push
sahf
pop
adc
cmp
sbb
push
pop
adc
add
lret
adcb
add
xchg
gs
pop
adc
xchg
xor
push
stos
lret
pop
adc
pop
adc
dec
loope
pop
adc
shlb
addb
mov
fwait
mov
mov
inc
mov
xchg
mov
arpl
push
jl
adc
inc
inc
mov
cmp
and
push
or
add
shlb
pop
sub
mov
fs
mov
adc
add
out
pop
push
stos
nop
add
addb
insb
pop
add
in
fsubrl
sub
inc
fdivl
push
rorw
roll
inc
fs
outsl
aam
adc
push
adc
sti
mov
push
movsb
adc
add
or
inc
pop
xchg
push
mov
xchg
fistps
pop
jne
rorb
mov
fs
mov
adc
add
and
sbb
add
insb
mov
lret
add
das
and
stos
lret
testl
or
cld
outsl
roll
add
out
add
push
push
nop
fists
push
pop
pop
jp
adc
outsb
test
lock
add
xor
add
inc
outsb
sub
stos
orb
mov
adc
or
and
lcall
mov
pusha
cmp
add
sub
adc
gs
fsub
add
add
nop
add
ret
mov
cmp
add
loopne
push
xor
enter
lahf
cmp
inc
add
jo
pop
rorb
cmp
addl
lret
iret
mov
xchg
jb
cmpl
push
shld
sub
add
mov
sub
adc
gs
loopne
or
sub
xlat
loopne
and
vaddsubps
lods
cmp
sub
sub
or
cmp
or
xchg
lret
lret
mov
push
or
jae
or
loopne
inc
or
xchg
rolb
dec
fnstenv
push
dec
lock
adc
rorl
cmpsl
and
gs
adc
mov
jb
insb
shll
inc
or
xchg
fdivl
scas
call
mov
xchg
lcall
stos
sub
ds
mov
sti
mov
cmp
add
jne
push
loopne
or
lock
mov
repz
in
add
nop
testl
add
loopne
loop
mov
sti
pop
loopne
push
shlb
jmp
addr16
pop
stos
lret
lret
test
es
addr16
cld
mov
adc
and
pop
inc
inc
add
jl
outsb
fs
ja
xchg
inc
add
adc
mov
push
or
xchg
or
xchg
loopne
adc
mov
loopne
repz
pop
in
mov
add
iret
pop
xchg
xor
mov
jmp
out
lods
xor
pop
ja
add
loopne
imul
add
adc
adc
adcb
sub
nop
lds
pop
xor
add
dec
sub
lret
lret
mov
mov
xchg
push
mov
lods
add
pop
and
add
lret
loopne
mov
lret
add
mov
adc
bound
xchg
sub
adc
gs
loopne
xchg
add
repz
push
adc
add
adc
lea
adc
push
pop
add
es
add
jmp
jp
test
mov
test
les
pop
shrb
adc
adc
pop
pop
mov
scas
add
fsubrl
scas
aam
lcall
in
add
add
sub
jae
add
test
adc
push
loopne
addl
add
mov
add
xor
push
add
mov
outsl
push
lods
add
mov
add
mov
std
add
push
xchg
inc
out
lcall
add
fs
out
pop
loop
adc
mov
add
out
mov
add
mov
add
data16
pop
mov
adc
imul
les
and
add
adc
pop
ficompl
bound
stos
add
out
adc
add
lcall
add
lcall
add
das
mov
mov
sub
xchg
add
add
xor
or
pop
out
add
add
mov
bound
and
add
pop
xchg
add
sub
stos
adc
push
fwait
shll
pop
test
fdivrl
sbb
push
lcall
adc
sbb
int3
add
bound
cli
jecxz
scas
add
jecxz
das
fwait
out
sub
or
jmp
pop
adc
mov
gs
adc
cmpb
add
adc
mov
add
daa
push
es
rep
adc
mov
sbb
xor
add
mov
fs
mov
and
das
mov
sub
cmp
fwait
int3
add
aam
repz
xlat
lcall
and
add
call
fsubrl
add
scas
add
in
orb
or
rolb
fwait
call
shlb
adc
andl
nop
jmp
add
add
mov
add
add
mov
adc
jmpw
sub
add
incl
jmp
ss
jmp
shll
mov
les
imul
add
pand
mov
jmp
or
out
add
jmp
or
jmp
or
adc
mov
iret
inc
addb
add
mov
add
inc
xchg
fs
lcallw
add
cmpsl
mov
jmp
bound
les
popa
subb
loope
mov
or
sbb
insb
push
out
inc
lcall
daa
insb
add
add
outsl
mov
adc
add
add
or
add
fucomi
add
insb
xchg
inc
out
cmpb
rolb
jecxz
adc
testl
mov
lods
add
add
bound
lds
adc
repz
sub
add
lret
pop
addb
bound
roll
in
rorb
jecxz
bound
addl
pop
or
inc
bound
sbb
filds
test
data16
xlat
inc
aam
mov
fildl
sbb
and
or
in
xchg
roll
jecxz
sbb
push
iret
mov
add
lods
add
and
adc
add
aaa
inc
add
aam
fwait
movsl
or
add
outsl
shlb
pop
out
loopne
shll
inc
pop
xorb
dec
pop
adc
les
mov
add
outsl
adc
addr16
xorl
adc
or
setb
loopne
gs
push
or
push
lret
and
pop
push
loopne
imul
add
xorb
add
sbb
add
sub
jno
and
mov
push
ret
pop
mov
popa
sub
xor
lock
mov
adc
mov
push
shrl
add
cmp
mov
adc
add
outsb
adc
daa
add
cltd
or
adc
dec
jecxz
sbb
idivl
test
popa
rolb
jmp
mov
cmpsl
mov
mov
loopne
push
dec
dec
pusha
or
movsb
adc
movsb
cli
push
mov
movsb
es
stos
add
cs
fs
cmp
adc
data16
ret
rclb
pop
sub
add
push
mov
and
inc
and
addb
and
add
sub
xor
mov
and
cmp
das
and
loopne
test
aad
xor
movsb
add
xor
inc
add
xor
add
and
adc
add
adc
fbstp
into
xor
mov
xor
loopne
fbstp
lds
out
aam
xor
mov
lds
dec
pusha
inc
mov
push
mov
shlb
cltd
push
fbstp
lds
push
xor
leave
xor
addb
loop
shlb
push
add
adc
daa
insb
xor
mov
xor
cmp
adc
inc
add
data16
cmp
sub
loopne
cwtl
pusha
xor
nop
and
add
stos
sub
add
data16
data16
add
add
bound
mov
inc
add
adc
cli
push
pushl
cmp
xchg
mov
adc
imul
add
xor
data16
pop
icebp
add
add
adc
mov
xchg
nop
addb
cli
adc
sti
scas
add
jne
sub
nop
iret
bound
or
add
push
pusha
loope
stos
and
or
cli
add
in
data16
sbb
rolb
in
data16
pop
inc
js
stos
lcall
jb
add
xor
add
pop
adc
cmp
xor
add
and
lcall
inc
pop
adc
pop
add
addb
mov
fwait
iret
add
les
aas
push
jnp
cmpsl
and
stos
push
and
sub
mov
push
movups
popa
pop
xchg
cmp
lcall
add
pop
data16
pop
cmpb
cmp
adc
cli
add
add
add
addb
or
adc
cmp
adc
lcall
or
adc
aaa
adc
adc
aas
mov
pop
sbb
xchg
xchg
out
mov
push
roll
jnp
pusha
or
cmp
adc
or
mov
les
and
add
hlt
adc
mov
mov
mov
add
adc
jno
push
adc
pop
es
lock
inc
cmp
pop
inc
xchg
icebp
add
inc
fwait
sti
mov
incb
mov
add
pop
push
add
mov
jo
fwait
lret
jmp
cli
popl
jo
and
loope
dec
xor
mov
in
jo
add
fdivl
and
or
and
addr16
adc
cmp
adc
push
mov
mov
mov
cli
xor
push
push
and
mov
add
mov
ret
push
mov
adc
sbb
imul
mov
data16
out
aam
lcall
dec
fs
push
andl
mov
xchg
mov
fs
mov
sti
or
add
add
iret
mov
mov
adc
add
jo
icebp
or
addb
or
and
add
mov
insb
lcall
loopne
jo
adc
cli
mov
push
cmpsl
lcall
stos
adc
xchg
fildl
gs
imul
les
inc
cmp
clc
gs
push
add
add
push
jmp
loopne
xor
add
jmp
lcall
xchg
imulb
cmp
es
lcall
out
outsl
rcl
lcall
jmp
leave
lcall
pop
leave
sub
cmpsl
mov
lcall
sub
mov
sub
in
and
insb
add
add
fdivl
bound
out
xchg
rcrb
shrb
stos
aaa
loopne
nop
or
adc
sub
cli
push
shll
cmp
je
adc
test
mov
push
setp
fs
pusha
aaa
pop
cltd
mov
sub
fs
pop
outsl
xlat
rolb
in
mov
or
adc
mov
out
bound
and
mov
rcrb
out
xchg
and
add
nop
aaa
and
adc
add
lcall
add
out
mov
and
sub
rclb
repz
scas
test
fs
and
mov
jecxz
cmp
in
fwait
loope
fwait
ljmp
sub
shrb
rorb
mov
insb
add
mov
nop
mov
pop
adc
add
or
mov
mov
sub
out
add
add
lcall
fwait
ljmp
adc
and
shrb
out
add
daa
adc
nop
movsb
nop
ret
add
add
incl
test
add
cmp
cmp
mov
mov
cmpsb
jo
pop
mov
adc
pop
pop
or
pop
xor
mov
pop
outsl
rcl
lcall
push
add
add
and
add
gs
pusha
or
roll
iret
fwait
call
out
jmp
add
cltd
out
rcrl
lcall
mov
xchg
ss
fsubl
mov
data16
adc
pop
data16
out
imul
push
and
mov
outsl
shl
shll
mov
jo
fcomi
gs
push
mov
stos
or
xchg
pop
sbb
les
or
adc
lock
faddp
insb
adc
loopne
xor
dec
loopne
addb
pop
mov
scas
mov
aad
cmp
and
stos
adc
push
andb
mov
aam
cltd
clc
push
add
notl
add
rolb
out
push
jnp
add
nop
add
pop
stos
jo
push
jae
add
xchg
add
fldt
sbb
bound
sbb
adc
adc
popf
mov
add
add
outsl
inc
lock
movsl
rorb
loope
lcall
shl
fwait
scas
add
out
rcl
leave
lcall
insb
pop
ljmp
push
rolb
bound
cs
loop
push
insb
stos
pop
add
sub
test
jmp
notb
stos
pop
adc
test
adc
xchg
out
loopne
and
pop
mov
add
sub
in
stos
out
push
pusha
sbb
pop
jo
loopne
push
add
loopne
push
add
lcall
add
in
push
add
shlb
rcrl
pushf
ljmp
bound
cwtl
rolb
mov
inc
add
add
add
outsl
adc
sub
and
or
call
xor
add
call
pusha
add
mov
fucomip
addr16
add
in
jcxz
test
aam
and
sti
loopne
xchg
pusha
adc
jmp
add
add
out
das
in
scas
mov
test
sub
loope
jns
add
aam
add
inc
rolb
shrb
jecxz
xchg
jmp
loope
adc
aas
add
insb
adc
adc
out
inc
mov
jo
sti
insb
into
mov
pop
aam
pushf
mov
pop
pop
or
mov
adc
add
lcall
inc
insb
xchg
out
fwait
test
sub
add
cltd
cmc
adc
lcall
cli
add
das
lcall
shr
aad
add
xor
mov
mov
sub
push
stos
pop
add
les
data16
or
lock
aaa
add
iret
fwait
add
outsl
push
out
loopne
push
add
nop
in
adc
data16
jp
lods
test
str
popf
pop
add
add
out
fwait
jecxz
add
add
add
fs
addl
fs
sbb
pop
add
out
add
lock
in
out
gs
ror
add
call
in
lods
add
fs
sti
add
and
out
sub
mov
adc
adc
add
fs
adcb
ja
scas
add
lahf
add
xor
mov
aam
pushf
mov
adc
cmp
das
fwait
scas
fs
pop
aam
sub
jecxz
jns
outsl
and
aam
lcall
les
add
mov
adc
mov
stos
out
jbe
adc
xchg
addb
out
cmpb
mov
fiaddl
mov
adc
mov
pop
add
aaa
data16
insb
dec
add
inc
sbb
cmpsl
addb
push
push
loopne
bound
or
pop
add
add
ret
addl
add
and
les
push
fwait
les
sub
push
fwait
jmp
stos
clc
out
add
stos
pop
cltd
loop
sti
add
and
push
adc
add
pushf
in
mov
pop
popl
add
jmp
iret
andb
test
imul
inc
and
les
lcallw
out
xchg
sbb
aam
loopne
ret
push
mov
stos
jecxz
jnp
push
pop
mov
pop
xorl
add
xchg
mov
das
xchg
mov
inc
adc
pop
popf
mov
scas
mov
cmp
aas
adc
xlat
in
sbbb
mov
mov
push
fwait
add
adc
sub
add
pop
shlb
aam
roll
add
lcall
and
in
sub
test
adc
fs
in
xorl
pop
outsb
add
out
add
sarb
add
mov
stos
adc
stos
adc
loopne
imul
dec
mov
add
and
jmp
scas
add
bound
add
cs
stos
out
bound
pop
adc
adc
push
add
xor
adc
xorl
pop
dec
mov
adc
fwait
enter
adc
add
sub
pop
mov
add
test
data16
mov
pop
rol
add
data16
add
add
mov
adc
stos
adc
sub
inc
xchg
add
das
fcoml
inc
mov
stos
pop
shrb
add
pop
and
add
add
fs
cmc
test
fs
insb
sub
add
push
fwait
cli
sbb
cmc
inc
les
or
fsubrl
sub
add
mov
sbb
lcall
ljmp
loopne
jecxz
insb
sub
add
out
and
loopne
out
andb
data16
loopne
push
lcallw
pusha
push
fs
and
test
cs
and
mov
mov
mov
mov
lcall
sbb
push
add
sbb
add
adc
push
add
loop
add
mov
sbb
out
mov
add
lcall
icebp
lcallw
and
fisubrs
sbb
mov
data16
inc
add
mov
out
add
das
inc
sahf
test
test
sub
cli
orb
sub
fs
add
cld
and
stos
lret
out
inc
fwait
jmp
add
adc
add
add
pusha
pusha
ljmp
adc
xlat
pusha
pop
insb
mov
sub
scas
jmp
add
loopne
add
out
outsl
fwait
add
fsubrl
sub
das
scas
sub
insb
xchg
lret
jmp
fwait
jmp
add
insb
mov
and
bound
xchg
mov
data16
rol
or
push
xchg
call
in
fcoml
das
es
jmp
pop
int
adc
adc
arpl
add
outsb
add
mov
adcb
adc
loopne
jnp
sbb
outsb
adc
xor
pusha
addr16
add
add
jne
loopne
in
insb
pop
in
add
fwait
fs
and
add
cmp
and
add
sub
roll
fwait
mov
in
bound
popf
stos
xchg
rolb
mov
add
pop
cmpsl
pop
adc
adc
das
inc
adc
add
fcompl
add
repz
mov
pop
xor
test
and
fs
and
jmp
add
jmp
sbb
outsl
loopne
add
cmpsl
test
mov
addb
insb
sub
pop
in
or
adc
loopne
out
adc
or
add
test
add
pop
mov
fs
adc
pop
call
fs
and
mov
inc
adc
insb
and
and
data16
bound
adc
fsubrl
test
or
insb
sub
mov
ret
test
insb
sub
mov
lret
mov
sbb
mov
add
iret
xchg
mov
add
fcoms
adc
xchg
add
fs
adc
add
sub
add
lret
add
test
add
cmp
pusha
push
cli
add
sub
add
add
ret
and
stos
pop
mov
mov
mov
and
or
stos
add
loope
cmp
xchg
adc
and
sbb
pop
cmpb
lcall
or
imul
add
sbb
lcall
mov
in
mov
add
rolb
imul
add
aam
movsl
loopne
aaa
loope
xor
add
or
mov
push
add
fbstp
setp
jne
adc
popa
test
add
pop
add
add
sbb
shlb
mov
popa
sub
pop
cwtl
mov
inc
push
push
push
add
fcoml
inc
test
mov
pop
das
add
fwait
sahf
data16
cltd
xlat
test
incl
stos
push
mov
add
test
shl
stos
ljmp
adc
ljmp
add
ljmp
stos
push
mov
aaa
xor
pop
xor
mov
fs
pop
fwait
in
fs
adc
add
xlat
mov
sbb
mov
rolb
pop
xor
push
popl
sbb
add
mov
xchg
add
or
add
popa
or
mov
fs
cwtl
shrl
cmpsb
adc
mov
mov
mov
or
pop
data16
imul
leave
xorl
xchg
out
cmp
cltd
and
add
test
pop
add
adc
stos
adc
adc
add
mov
bound
imul
out
or
out
test
mov
shll
arpl
add
pop
pop
sbb
and
fldl
xor
fs
add
jecxz
add
adc
mov
pop
dec
popa
pop
fsubs
loopne
adc
mov
adc
mov
mov
fsubrl
popa
dec
mov
subb
add
mov
stos
adc
loopne
push
add
mov
or
aam
or
cltd
jmp
in
inc
jmp
jmp
add
or
xor
ret
xor
and
out
mov
inc
out
in
loopne
icebp
xchg
insb
add
cmpsl
loopne
out
ss
add
int3
daa
loopne
out
cmpsl
cmpsl
inc
fwait
insb
pop
cli
fwait
loopne
out
add
add
rolb
out
fs
in
or
mov
lock
cli
adc
out
inc
cmpsl
fwait
call
daa
and
test
mov
pop
mov
test
adc
lahf
incl
pop
pop
or
and
push
loopne
imul
adc
mov
fs
pop
cmc
mov
inc
cmp
bound
stos
aas
test
pop
and
add
test
bound
push
adc
push
pop
sbb
fsubs
aas
test
mov
add
inc
cmp
scas
test
or
xchg
xor
push
aas
sbb
adc
out
xchg
jecxz
lock
data16
pop
or
xchg
fldcw
add
add
shl
add
sbbb
cli
mov
mov
adc
pop
mov
enter
outsb
add
ljmp
bound
push
and
adc
imul
fdivl
mov
cmp
add
adc
loopne
xchg
rolb
xor
pop
or
push
mov
adc
imul
inc
add
xchg
xor
test
inc
mov
adc
inc
aam
sub
popa
fnsave
add
aaa
inc
adc
popf
mov
mov
in
adc
push
addb
inc
stos
pop
fdivrl
fs
pop
xchg
mov
add
xchg
push
jecxz
adc
lcall
mov
add
xchg
repz
mov
mov
nop
dec
adc
inc
adc
fwait
roll
leave
nop
sub
pushf
inc
test
add
jb
xlat
or
mov
add
add
xchg
jmp
or
lcall
adc
aam
aad
loop
in
xchg
xor
sub
push
pop
adc
cli
jno
mov
sbb
dec
and
xor
lcall
jo
or
and
sbb
lcall
fwait
jmp
incl
sbb
pop
xchg
push
mov
adc
flds
pop
rolb
pop
inc
add
adc
bound
add
int3
shlb
gs
out
sbb
jnp
add
sbb
add
mov
jmp
bound
adc
adc
and
adc
xchg
sti
in
adcb
test
data16
shlb
mov
mov
jo
fs
lret
jecxz
mov
sub
add
jecxz
jmp
out
cmpsl
sti
jo
in
push
push
pusha
andb
popa
leave
jmp
sbb
stos
fdivl
mov
iret
inc
mov
fwait
cld
adc
xchg
mov
adc
stos
out
test
or
add
int
add
jecxz
loopne
fs
insb
xchg
add
scas
popf
enter
add
call
stos
in
incl
fs
fs
les
push
pop
aam
cwtl
in
add
sbb
mov
add
fs
mov
loopne
cmpsl
jmp
add
nop
push
lahf
mov
loop
mov
mov
add
arpl
sub
test
mov
push
add
pop
rolb
adc
movsb
add
test
lcall
lret
jmp
mov
mov
sbb
add
inc
add
test
add
rcll
add
das
add
mov
mov
jecxz
jmp
call
stos
call
sub
and
push
adc
jo
adc
cmp
adc
jecxz
out
pushf
xor
push
fs
jo
adc
ljmp
add
adc
out
push
xchg
xchg
out
fcmovnb
fsubrl
and
cmp
xor
push
insb
adcb
inc
add
jecxz
lcall
adc
jmp
int3
sub
stos
jecxz
mov
mov
stc
adcb
and
mov
sbb
mov
add
add
rolb
rclb
ss
insb
leave
add
or
cs
inc
xor
test
rolb
jmp
in
roll
or
lock
test
add
adc
and
shl
adc
add
bound
add
add
fs
cmpsb
mull
add
add
repz
repz
add
mov
fwait
add
insb
das
add
in
daa
bound
adc
mov
inc
jecxz
das
loopne
push
add
pushf
sti
fs
add
cmpsw
jmp
mov
add
jecxz
cmpsl
jecxz
cmpsl
out
es
std
mov
mov
cli
add
stc
scas
add
add
mov
pop
inc
adc
adc
push
lcall
add
mov
das
add
mov
bound
out
ret
add
fwait
mov
add
insb
xchg
add
add
fldcw
inc
push
adc
adc
add
loope
fs
add
add
xchg
cmpsb
adc
adc
push
cmpsl
adc
add
out
pop
add
mov
sbb
testw
incb
mov
mov
sub
test
pop
ldmxcsr
add
push
fwait
call
fs
add
fcompl
add
add
adc
lods
add
cli
and
scas
add
sub
sub
sbbb
add
sub
mov
mov
or
outsb
add
add
add
mov
and
pop
add
add
sarb
adc
dec
addb
xor
and
mov
sbb
adcb
orb
xchg
out
add
bound
filds
pusha
adc
and
addl
iret
add
fwait
jecxz
or
insb
test
test
lahf
and
testl
jmp
iret
mov
ret
jecxz
ret
push
lcall
ret
sarb
add
shlb
data16
push
xor
jmp
pop
inc
dec
and
sub
add
fs
add
bound
push
fwait
fwait
fs
pop
pusha
add
add
mov
inc
inc
test
repnz
fs
repz
repz
sti
insb
add
add
mov
adc
adc
rclb
sti
sbb
rorb
inc
mov
testl
andb
xlat
add
mov
push
inc
andb
or
nop
mov
xchg
out
stos
sbb
data16
pop
inc
add
fs
pop
add
pop
mov
sub
stos
and
add
maxps
nop
pop
icebp
add
mov
icebp
mov
pop
or
scas
add
or
test
insb
inc
sub
mov
add
jmp
push
out
orl
enter
adc
lcall
sub
adc
rclb
mov
fs
fs
or
lods
add
adc
fsubl
pop
incl
push
roll
cs
push
push
negl
mov
jecxz
xor
es
cltd
add
fs
out
das
jecxz
add
mov
addr16
scas
ror
and
test
int3
mov
add
sahf
mov
inc
sub
aam
fwait
mov
rorb
fs
mov
xchg
mov
faddl
shlb
cli
shr
pop
adc
jmp
loopne
sub
aam
stos
jecxz
cmp
add
out
add
nop
add
add
inc
loopne
ret
arpl
add
mov
jecxz
ljmp
outsb
scas
add
dec
inc
sbb
add
outsl
scas
add
add
iret
add
cli
scas
test
dec
fbld
add
add
and
xchg
and
and
stos
cmpsl
and
lahf
and
xchg
add
add
and
lahf
and
dec
and
stos
xchg
and
pop
and
mov
add
and
stos
fwait
and
aas
and
mov
add
and
sub
and
pop
and
cmp
add
sbb
add
and
jmp
add
push
and
iret
and
jg
add
and
rep
sti
and
and
mov
and
and
sbb
mov
add
popa
add
add
add
and
push
and
dec
and
iret
mov
add
popa
add
and
dec
and
aas
push
and
push
and
mov
pop
and
pop
movsl
and
inc
and
add
loopne
das
and
stos
jmp
add
mov
sbb
add
mov
daa
and
stos
mov
add
add
and
outsl
and
addr16
pop
stos
jg
add
popa
add
add
and
stos
pop
and
imul
popa
and
popa
add
and
das
and
dec
pop
and
add
adc
push
popa
add
and
push
and
iret
and
pop
push
and
fbld
add
loope
scas
and
sti
push
and
mov
add
and
lahf
and
jae
scas
add
inc
dec
outsl
add
pop
call
mov
stos
xchg
mov
pusha
push
cmp
inc
jg
add
cmp
push
addl
addb
addl
addb
xchg
addb
ljmp
add
pop
pop
adc
adc
imul
lret
aaa
add
adc
adc
daa
loopne
adc
push
adc
add
add
push
pushf
inc
adc
mov
sub
in
mov
lret
jmp
mov
mov
mov
add
and
mov
fs
call
add
pop
insb
daa
adc
roll
jecxz
add
jns
adc
adc
mov
cmp
adc
mov
adc
aam
or
bound
lret
loopne
in
add
addb
subl
scas
out
ljmp
loop
roll
pop
out
and
and
lret
mov
pop
adc
mov
loopne
adc
leave
loop
jecxz
add
ret
loop
stc
loopne
fs
data16
add
mov
iret
loopne
xchg
loopne
mov
sbb
imul
out
sti
adc
and
pop
lock
push
adc
flds
addb
gs
pop
add
add
xchg
lret
repz
adc
imul
add
add
and
mov
add
mov
lret
push
adc
add
stos
lret
loopne
add
insb
xor
or
bound
das
sub
aad
mov
cmp
mov
lock
mov
inc
in
test
loopne
push
loope
pusha
add
add
pusha
add
or
or
rol
mov
ja
cmpl
mov
and
bound
mov
xor
rcl
sbb
add
pusha
or
sti
and
pusha
sbb
mov
mov
inc
sbb
nop
add
les
add
popa
or
nop
adc
lret
out
rolb
xor
sti
in
adc
adc
loopne
xchg
mov
jo
fwait
loop
movups
pop
sub
mov
inc
xor
add
adc
jo
ret
or
scas
daa
addb
lret
iret
pop
inc
pop
adc
mov
addl
xor
dec
addb
xor
xor
jmp
add
adc
test
pop
stc
pusha
push
lock
rolb
arpl
mov
add
adc
mov
loopne
stos
adc
add
movsl
mov
xlat
mov
and
inc
and
push
outsb
add
in
rorb
mov
addr16
insb
adc
fadds
fs
mov
imull
add
inc
inc
insb
pop
out
loopne
jns
adc
and
popa
es
fcoms
adcl
bound
inc
loopne
mov
mov
mov
lcall
pop
adc
sbb
mov
bound
jmp
push
add
push
add
das
adc
jns
stos
pop
bound
pop
mov
sbb
xorl
fs
push
add
jecxz
add
adc
dec
xorb
pop
mov
rclb
add
into
xchg
inc
or
adc
adc
or
and
add
mov
fwait
add
sbb
in
cltd
imull
mov
addl
adc
inc
add
test
mov
adc
iret
loopne
test
stc
mov
pop
jg
add
and
mov
inc
stos
adc
mov
es
or
adc
adc
push
loopne
popa
sbb
roll
push
roll
adc
mov
gs
dec
add
and
dec
loopne
mov
fistl
mov
add
cld
mov
add
das
mov
nop
pop
inc
popa
add
add
out
adc
bound
add
push
pop
add
mov
push
pop
add
mov
loop
or
mov
icebp
add
mov
inc
pop
js
xchg
sbb
push
jbe
movaps
add
mov
subl
cltd
iret
add
fwait
clc
add
adc
das
mov
inc
add
scas
cmp
adc
jecxz
mov
pop
push
cmp
adc
mov
add
mov
out
add
adc
add
sbb
roll
add
cmp
pop
push
out
xor
inc
das
sub
xor
add
add
lock
add
add
pusha
add
pop
notl
cltd
add
pop
xchg
out
add
push
pop
push
or
mov
lcall
mov
adc
fwait
in
leave
push
adc
inc
addl
fwait
movb
and
add
dec
mov
xchg
add
pop
insb
pmaxsw
das
mov
xor
adc
rolb
test
adc
pop
jo
mov
push
outsb
add
xorl
movsl
pushf
incl
lcallw
inc
popa
push
loopne
pop
loopne
fs
sti
fsubrl
mov
in
loopne
and
sub
lock
lcall
add
insb
xchg
jmp
adc
mov
shrb
leave
bound
nop
adc
pop
mov
push
mov
and
pop
adc
lcall
out
jmp
add
add
out
add
popf
fs
mov
jmp
pop
cs
add
bound
add
or
rcrb
adc
add
adc
jbe
add
faddl
add
test
mov
sbb
popa
and
jmp
inc
jecxz
mov
mov
cmpsl
bound
lock
mov
adc
adc
pop
iret
add
add
mov
and
lcall
movsb
rolb
or
lock
add
scas
mov
or
add
add
push
add
inc
add
pusha
add
and
repz
imul
lcall
rolb
xchg
addb
test
xor
mov
inc
or
mov
adc
mov
add
mov
pop
adc
sub
daa
pop
adc
push
or
imul
add
incl
test
fdivrl
inc
sbb
loopne
ds
add
jmp
addb
addr16
sbb
pop
loopne
jp
add
test
push
in
test
not
loop
pusha
jmpw
add
fs
add
loope
push
mov
outsl
aad
add
bound
sti
pushf
test
add
mov
sbb
test
notl
mov
popa
int3
jecxz
mull
mov
stos
lret
pushl
add
les
pop
push
add
insb
addb
insb
sub
loopne
loopne
xchg
jne
lcall
test
mov
test
pop
ljmp
roll
fcoml
adc
push
cmp
mov
xchg
outsl
addl
adc
add
lcall
rcr
outsl
add
mov
lods
add
cwtl
call
out
es
lret
jg
nop
sysret
jne
adc
bound
mov
add
add
pop
enter
add
ljmp
lcall
das
sti
lods
add
outsl
adc
addr16
add
xor
sub
cmc
xor
adc
mov
adc
adc
push
add
bound
or
add
push
fwait
in
add
add
push
and
push
add
outsb
adc
daa
add
add
fs
add
jmp
mov
add
loopne
cs
add
pop
in
jle
adc
loopne
pop
mov
scas
add
fsubrl
scas
aam
lcall
in
add
add
sub
jae
adcl
pop
not
add
add
add
pop
aaa
jnp
addb
add
stos
lret
idivl
xor
pop
push
add
adc
stos
lret
loopne
add
fwait
jmp
adc
adc
xor
mov
loopne
mov
fwait
lret
repz
add
adc
imul
inc
bound
add
push
push
xor
addb
addb
add
mov
mov
or
mov
inc
add
fs
fcoml
add
lcall
scas
add
test
xchg
sbb
sbb
loopne
pop
andb
stos
adc
stos
pop
add
loopne
out
add
in
jecxz
push
loop
add
insb
das
in
aam
popf
add
fs
les
add
mull
in
aam
add
lcall
lcall
mov
jmp
add
lcall
add
adc
imul
mov
clc
adc
pop
xchg
add
add
push
fwait
adc
fs
pop
addb
jmp
add
fwait
call
cltd
enter
pop
mov
or
insl
addl
insb
xchg
pop
adc
lcall
push
add
shrb
bound
add
adc
fcoml
xchg
adc
loopne
xor
sbb
inc
pop
add
add
add
shl
loopne
add
push
fs
mov
xlat
sub
imul
cmpl
lcall
jmp
bound
movb
loopne
arpl
or
xor
jmp
push
add
xorb
fildl
add
fs
cli
adc
scas
add
out
add
popf
cmp
cmpb
adc
adc
rorb
imul
loopne
push
mov
or
adc
add
enter
ret
xchg
pop
fs
popl
add
insb
xchg
pop
add
insb
stos
add
adc
cmpsl
aam
pop
loopne
jb
inc
aas
add
inc
rorl
rclb
fs
pop
add
xorl
or
outsb
add
inc
js
in
xchg
push
mov
adc
cltd
push
das
lcall
mov
out
lret
lods
add
pop
push
add
push
xchg
inc
iret
cmpb
and
jmp
add
fs
insb
pop
jmp
or
cmp
shlb
sbb
add
add
or
add
fcompl
and
loopne
push
add
mov
adc
insb
mov
loopne
aaa
mov
mov
bound
incl
pop
add
rcll
adc
lcall
mov
jg
rclb
mov
add
es
push
mov
adc
xchg
inc
add
cltd
addb
mov
pop
mov
sti
insb
mov
filds
add
xlat
stos
add
xor
pusha
add
add
repz
mov
lret
repz
lret
lret
sub
cmpsb
lods
add
add
or
scas
addl
pop
xor
adc
sub
and
rcrb
push
and
loopne
ljmp
loop
faddl
pop
adc
add
pop
pop
mov
rol
fwait
lret
testl
imul
pusha
pop
rorb
fsubs
and
fstl
adc
adc
pop
pop
ret
inc
je
fwait
repz
lcall
lcall
lcall
pop
insb
loopne
mov
xor
ret
sbb
faddl
pop
pop
push
and
mov
imul
pop
and
sub
aaa
add
sti
sbb
lcall
adc
pop
mov
and
incl
sbb
loopne
mov
subb
mov
xor
mov
in
pop
out
orb
or
add
sub
sub
rolb
pusha
sub
add
sbb
lcall
xor
int3
incl
add
insb
and
add
sbb
out
leave
loop
loope,pn
dec
mov
bound
add
aam
lret
sti
add
add
incl
adc
mov
fsubrl
test
lods
add
out
cltd
aam
mov
mov
lods
add
mov
orb
fwait
lock
add
mov
add
push
sub
imul
dec
inc
add
cwtl
insb
add
mov
fs
bound
jmp
sbb
push
cmc
mov
mov
bound
aas
loop
ljmp
mov
roll
add
add
add
mov
sub
pusha
sub
test
pop
jno
add
daa
and
pusha
mov
mov
mov
sub
adc
or
sbb
addl
and
add
and
adc
repz
fs
sbb
out
add
lcall
add
test
mov
or
mov
fs
mov
fbstp
sahf
out
adc
ja
xor
xchg
mov
repz
pusha
add
sbb
stos
add
cltd
fdivl
stos
add
fs
in
repz
pop
scas
and
adc
test
adcl
mov
mov
xchg
into
test
push
jmp
add
das
xchg
pop
mov
mov
adc
arpl
stos
rolb
dec
fs
loope
and
mov
adc
add
rcrl
jmp
add
add
mov
roll
mov
xchg
jmp
test
loopne
mov
test
xchg
mov
fs
and
mov
sub
mov
and
mov
add
inc
add
adc
mov
lcall
fs
jmp
rorl
in
addb
rolb
stos
mov
push
in
rolb
add
rep
and
cmpb
xchg
nop
xor
jp
inc
adc
mov
add
sbb
or
in
jno
and
mov
add
roll
roll
adc
fldl
ja
or
sarb
cmp
stos
movsb
pop
stos
push
add
mull
xor
and
adc
and
out
shlb
fs
adc
das
sbb
add
mov
adc
and
xchg
push
mov
mov
bound
mov
adc
and
sti
inc
psubsw
add
sti
bound
add
loope
dec
stos
jecxz
jmp
and
or
mov
faddl
and
xchg
negl
lock
loop
notl
add
adc
loopne
rep
paddw
jo
adc
mov
add
loope
adc
add
and
xor
jmp
adc
sub
add
imul
adc
mov
add
notl
rolb
adc
fs
loopne
sbb
cmp
xchg
pop
add
fs
fwait
loopne
pop
insb
xchg
jecxz
add
lcall
jno
bound
mov
aaa
sub
dec
nop
subl
push
jecxz
loope
orb
testl
pop
add
xor
pop
imul
add
add
rcrb
pop
mov
add
outsl
xorb
fdivl
lcall
add
lock
out
mov
push
sub
push
jo
popa
push
add
or
sub
add
jns
xor
mov
loope
push
add
mov
loopne
imul
mov
nop
or
std
jae
add
fwait
ljmp
mov
and
mov
fs
out
add
push
adc
adc
jmp
fcoml
add
sbb
add
add
add
fs
test
ss
adc
aas
aam
fwait
in
add
mov
aam
and
stos
daa
aam
fwait
in
mov
icebp
fwait
ljmp
push
sub
xor
adc
stos
adc
pop
mov
lock
sub
adc
lcall
adc
adc
insb
adc
add
sbb
faddl
mov
pop
jb
adc
inc
add
jne
xor
sbb
jno
xchg
in
jb
loope
ja
push
fs
sahf
stos
nop
or
add
add
cld
dec
addb
cld
addb
cld
addb
pop
loope
sub
add
add
addl
add
xor
add
sti
addb
sti
addb
dec
sti
addb
loope
sti
test
cmp
add
mov
adc
adc
and
adc
sbb
sbb
sbbb
push
inc
xor
dec
out
xchg
pop
and
test
mov
pop
fcomi
jge
and
popa
xor
sysret
inc
lds
add
cmpb
fwait
rolb
add
fs
adc
mov
push
das
xchg
into
fs
out
push
jecxz
mov
jle
jo
rolb
in
lcall
adc
mov
sub
add
or
shlb
pop
lock
mov
stos
add
test
stos
jo
pushf
ret
add
bound
stos
push
adc
jl
inc
fdivl
mov
push
mov
xlat
mov
fstl
pcmpgtd
add
bound
ret
add
data16
adc
pop
fwait
lds
cmp
or
or
push
mov
mov
bound
pop
push
lock
xor
adc
and
cmp
mov
fwait
cwtl
insb
pop
out
inc
xchg
popf
fs
outsb
push
xor
outsl
add
adc
les
add
lcall
cmpb
cmp
rolb
mov
pop
leave
repz
andb
mov
pop
test
jns
lock
ljmp
lcall
pop
cwtl
add
rorb
sbb
add
xor
adc
rolb
inc
pop
shll
inc
xor
icebp
inc
push
mov
mull
loopne
xor
cmp
das
mov
ret
mov
loopne
adc
adc
add
lcall
cmp
test
push
push
inc
sbb
pop
aaa
lret
and
lcall
pop
pop
pop
mov
add
pop
and
movsl
jb
pop
pop
adc
add
es
push
and
lods
ret
mov
xor
mov
or
adc
xor
test
push
add
inc
sub
aam
push
sbb
addb
call
mov
mov
and
push
inc
add
inc
repz
inc
add
loopne
es
and
test
nop
cs
push
mov
into
iret
rorl
mov
pop
dec
cmp
adc
sub
loopne
mov
add
bound
pop
sbb
roll
xor
cmp
lcall
es
in
rcr
mov
jg
pop
push
aas
mov
push
add
pop
pop
xchg
adc
sbb
add
addb
push
or
pop
arpl
lcall
popl
pop
loopne
push
aam
shrb
stos
ds
imul
fwait
ljmp
or
push
add
pop
mov
or
sub
adcl
add
cmp
push
nop
in
ffree
xor
xor
imul
mov
fnsave
iret
mov
roll
sub
mov
adc
mov
fwait
in
adc
movzwl
adc
add
adc
pop
mov
mov
adc
addb
mov
addb
xor
loope
lcall
daa
adc
testl
pop
int
adc
fs
add
mov
fs
out
pop
out
mov
sub
add
inc
in
add
add
das
xlat
stos
out
add
jp
mov
inc
add
insb
das
mov
addl
bound
add
and
add
and
bound
add
adc
fs
sub
add
adc
adc
sub
imul
add
add
loopne
imul
test
sbb
pop
into
add
fiaddl
inc
mov
xchg
sbb
adc
add
scas
add
and
cmpb
pop
pop
jmp
andl
or
pop
andb
incl
pop
mov
add
scas
add
test
mov
daa
lret
adc
stos
pop
bound
stos
add
add
test
test
bound
add
pop
sub
addb
xchg
and
dec
add
popl
add
mov
test
test
mov
bound
addb
cmpb
mov
xchg
add
add
outsl
pop
push
cmp
adc
xorb
pop
aam
sub
imul
add
dec
cmp
scas
add
aas
orl
test
sbb
add
add
adc
add
add
add
bound
aas
push
loopne
add
add
stos
pcmpgtb
bound
mov
and
adc
movl
das
mov
lcall
jne
inc
or
das
jmp
push
add
adc
mov
iret
add
or
inc
push
pop
inc
push
daa
push
mov
inc
push
adc
inc
fs
stos
inc
add
daa
add
mov
add
xor
pop
adc
loopne
and
data16
add
bound
mov
mov
loopne
js
inc
add
in
stos
add
fnsave
out
push
icebp
add
in
fistps
add
sub
add
repz
push
fwait
mov
mov
pop
pop
push
cli
inc
adc
gs
add
add
pop
or
pop
mov
or
xchg
cld
add
adc
loope
or
add
pop
or
lock
sarb
mov
add
push
add
stos
sbb
insb
stos
add
call
test
mov
mov
xor
mov
mov
pop
fs
xor
pop
insb
stos
or
aam
or
insl
fiaddl
fs
mov
aas
cmpb
dec
add
adc
push
add
xchg
gs
inc
add
fs
pop
adcb
push
pop
adcb
jbe
aas
shlb
sub
sub
pop
adcb
xchg
add
daa
inc
xorl
addb
mov
pop
add
int3
adc
test
mov
push
int
add
insb
and
and
mov
inc
xor
rcrb
add
add
mov
adc
adc
inc
stos
pop
mov
xorb
test
add
add
fs
add
ds
mov
adc
and
stos
adc
loopne
stos
adc
or
add
scas
mov
adc
and
mov
add
jns
or
test
mov
bound
out
push
mov
cmp
add
mov
add
roll
fwait
mul
pop
bound
add
fwait
cld
insb
das
in
loopne
pop
out
push
lcall
fwait
in
fsubrl
addb
arpl
pop
dec
pusha
aas
inc
mov
sbb
jg
add
in
pop
xchg
fwait
ljmp
adc
adc
imul
xchg
cmovb
adc
push
das
andl
sbb
add
mov
aaa
mov
ret
subb
shlb
jmp
loope
add
mov
adc
pop
fildl
pop
lcall
add
out
pop
sub
add
mov
add
xchg
inc
mov
pop
pop
cli
cmc
add
rolb
sbb
mov
add
sbb
bound
data16
stos
add
repz
pop
jecxz
adc
add
fs
adc
adc
loope
xchg
mov
rorb
stos
dec
and
lods
mov
sbb
xchg
filds
in
fcompl
add
gs
push
loopne
or
loop
add
add
daa
lds
add
movsb
scas
test
aas
fsubl
data16
add
add
insb
add
or
iret
pusha
sbb
mov
insb
inc
add
inc
add
pusha
adc
rclb
sub
adc
add
mov
jecxz
and
inc
lods
in
pop
add
es
insb
or
outsb
add
mov
sbb
add
sbb
test
or
imul
or
andb
adc
lret
arpl
add
pop
mov
mov
add
test
adc
adc
add
fdivl
adc
imul
pop
inc
push
orl
mov
addr16
rcll
cli
add
mov
stos
lret
add
xchg
lret
fbld
lret
sbb
mov
add
imul
ret
push
xchg
jecxz
sub
loopne
lret
mov
inc
add
adc
testl
iret
add
lret
xlat
mov
mov
test
and
pusha
add
add
pusha
add
add
mov
lods
pusha
add
xor
push
mov
adc
fwait
lret
repz
mov
imul
cli
loopne
stos
roll
xor
pop
cmpsl
rclb
mov
pop
add
lret
add
lds
roll
or
rolb
flds
mov
pushl
mov
jno
xchg
lods
test
mov
jne
rclb
fwait
lret
iret
fs
lret
iret
rorb
adc
sub
add
add
mov
or
insb
sub
inc
xchg
std
fs
clc
call
mov
adc
push
lret
test
cs
push
adcb
sbb
add
adc
add
pop
mov
xlat
mov
lret
lcall
scas
loopne
mov
pop
out
mov
or
add
mov
stos
pop
andb
xchg
inc
bound
jo
test
repnz
push
mov
add
bound
push
addr16
or
mov
mov
mov
sub
cltd
into
mov
cmp
adc
xchg
pop
loopne
add
mov
lcall
push
mov
jo
add
stos
pop
int3
mov
xor
bound
pop
leave
pusha
add
bound
push
mov
pop
ljmp
icebp
pusha
es
add
jno
sbb
mov
push
adc
test
push
sub
cltd
std
and
rolb
dec
add
out
cwtl
adc
roll
sbb
and
inc
popa
aas
pop
adc
outsb
add
add
adc
loopne
pop
stos
insb
add
jmp
push
sbb
or
adc
add
loopne
arpl
roll
data16
roll
popa
cmpb
sub
push
jne
iret
sub
jns
jbe
sub
es
cmp
mov
mov
xchg
jmp
and
out
sub
xchg
push
repnz
add
rorb
outsl
cmp
push
cmp
cmp
add
stos
or
pop
data16
add
push
icebp
sarl
mov
jecxz
cmp
nop
add
cmp
sbb
je
pop
bound
mov
pop
and
imul
roll
ret
adc
insl
roll
ret
push
insb
inc
roll
ret
push
imul
ja
rolb
push
nop
add
adc
sub
imul
cmp
inc
add
sub
add
outsl
nop
or
cmp
lcall
xchg
mov
andb
mov
add
mov
jae
add
push
aas
fwait
mov
adc
xchg
scas
inc
test
in
or
and
pusha
add
xchg
nop
pop
mov
pop
add
pop
sub
sub
jno
pusha
jecxz
jns
stos
sysret
aad
gs
and
xor
es
push
cmp
daa
pop
pop
push
rolb
lods
cmpsl
pop
inc
out
pop
bound
out
sbb
mov
mov
out
loop
test
loopne
mov
add
out
add
and
cmp
ljmp
nop
movsl
movsl
cmp
pop
out
or
push
adc
fstl
bound
roll
rolb
adc
xorl
push
push
push
outsl
sub
push
adc
mov
shlb
cmp
and
add
add
cli
xchg
loopne
fcoml
rcl
adc
push
jo
andl
pop
notb
pop
xorl
dec
icebp
add
roll
roll
sub
add
push
add
addl
lret
rol
add
stos
cmovae
inc
inc
xchg
inc
xorl
or
push
jo
jo
fbstp
mov
cmc
inc
dec
pop
mov
cltd
add
pop
jg
fabs
aaa
push
mov
xchg
rolb
xor
inc
cltd
add
repnz
adc
test
insb
adc
popf
dec
insb
xchg
adc
lcall
sbb
lock
or
and
or
add
lcall
nop
adc
sahf
adc
dec
shl
adc
sbb
dec
sti
mov
xchg
add
dec
push
add
lret
test
mov
or
inc
and
xchg
test
pop
jl
jnp
es
ja
push
add
jbe
xor
push
jns
loopne
js
addl
clts
sbb
gs
cmp
add
add
mov
jns
add
int
adcb
jl
adc
repz
bound
push
rolb
mov
mov
push
pusha
roll
scas
roll
rcll
jnp
pop
add
push
jle
add
pop
rolb
push
sbb
add
mov
inc
cli
add
add
add
add
lret
ja
add
add
mov
repz
add
scas
add
das
loopne
push
add
test
adc
je
add
lret
adc
cmpsl
rclb
add
jge
or
mov
add
or
xchg
cmp
add
scas
or
add
or
cli
add
jae
cmpsl
test
fwait
mov
xchg
add
adc
xchg
iret
fs
lret
iret
adc
pop
mull
add
add
add
lret
mov
adc
insb
sub
push
xchg
add
fs
or
adc
imul
in
and
test
lretw
pop
add
add
fs
aam
adc
push
adc
dec
sti
pop
hlt
add
adc
xlat
mov
lret
lcall
jecxz
pop
mov
add
mov
or
mov
arpl
addb
mov
andb
stos
pop
mov
stc
add
bound
jbe
and
adc
bound
add
push
add
add
out
add
mov
mov
bound
outsl
adc
adc
or
add
pop
adc
insb
pop
adc
cltd
into
mov
adc
adc
inc
or
mov
adc
adc
mov
lcall
jnp
sub
addl
push
nop
sub
pop
int3
add
andb
fcompl
bound
xor
mov
pop
pop
mov
sbb
mov
aas
test
test
bound
adc
adc
test
popf
sub
cltd
sti
fs
dec
pop
xchg
adc
add
pop
add
out
lcall
adc
sub
inc
insb
or
outsb
or
dec
in
addl
lret
inc
rorb
test
ss
enter
pop
loopne
imul
fwait
aad
shrb
jns
adc
adc
adc
mov
fsubrl
mov
lcall
xchg
addl
orl
push
push
filds
push
mov
add
pop
xchg
lret
fldt
or
imul
push
fwait
lret
xchg
js
or
mov
and
jg
add
rcrb
or
jmp
jecxz
mov
addl
inc
mov
stos
lret
jecxz
or
or
pop
push
lcall
pop
ljmp
sti
add
insb
mov
push
stos
push
jbe
push
mov
add
lea
pop
filds
and
repz
push
orl
push
dec
mov
lret
inc
mov
loop
sbb
cmp
add
in
sbbb
adc
or
pop
mov
inc
or
add
sti
fcompl
adc
sub
imul
mov
fisttps
loopne
rclb
xor
imul
rolb
fcompl
fwait
xchg
mov
fcomps
add
testl
add
imul
popf
in
outsb
rolb
pusha
jns
out
stos
or
idiv
pusha
push
test
lret
bound
imul
std
mov
mov
fstpt
jo
sub
jo
imul
and
inc
loope
outsl
fwait
lret
adc
pop
fsubrl
orb
pop
lds
add
mov
mov
add
pop
pusha
xor
out
add
xor
sbb
add
adc
add
mov
push
jae
push
pop
lds
and
sub
pop
in
mov
add
push
adc
daa
xorb
xchg
loopne
push
pop
mov
loopne
sbb
mov
inc
add
adc
test
adc
mov
add
repz
subl
and
inc
sub
push
loopne
mov
add
out
pusha
add
bound
and
gs
pusha
add
das
outsl
add
mov
aas
fwait
adc
mov
fnstsw
loopne
pop
cmp
scas
test
cmp
mov
test
or
and
jecxz
add
test
add
adc
and
xor
xchg
xchg
or
mov
pop
lret
add
push
jno
adc
incb
cltd
pop
cmovns
xor
jo
add
loopne
push
loope
data16
and
daa
aas
bound
ja
dec
inc
add
lcall
addb
adc
dec
addl
push
dec
and
add
rcrb
stos
adc
ljmp
data16
sbb
adc
test
sbbb
outsl
nop
adc
add
add
push
rolb
sbbb
add
mov
fs
adc
adc
stos
ja
shrb
pop
inc
add
stos
pop
shrb
adc
sub
imul
xchg
pop
pusha
cmp
add
fwait
jmp
sub
loopne
das
jge
add
inc
or
add
mov
push
mov
add
mov
stos
imul
gs
nop
add
insb
daa
adc
movsl
fs
pop
pop
pusha
or
andb
test
xor
ficoml
lcall
lcall
push
call
out
insl
incl
pusha
add
xor
push
inc
add
and
add
sub
adc
xchg
imul
cmp
loopne
add
add
stos
sbb
sbb
loopne
xchg
push
add
pop
test
in
mov
cmovno
adc
dec
lock
mov
pop
cmp
in
popa
push
sub
es
jnp
les
sub
outsb
adc
jno
add
bound
add
loopne
sbb
pop
mov
sub
das
subb
loop
pop
ljmp
sub
mov
outsl
adc
lcall
bound
inc
add
bound
push
add
loopne
out
mov
pop
sub
sti
out
bound
roll
cmp
out
ret
loope
add
lcall
adc
inc
add
cmp
pop
add
in
data16
xchg
sbb
xor
push
das
nop
insb
mov
xchg
repz
xor
xchg
jle
enter
loopne
imul
es
or
je
aaa
je
xor
pop
mov
adc
dec
xor
sub
outsl
sub
pop
inc
xchg
loop
xor
orb
pop
jae
add
dec
icebp
add
add
push
adc
nop
ret
push
cmp
add
and
bound
loope
icebp
xor
fwait
push
in
loopne
push
nop
push
addr16
pop
jbe
jecxz
add
andb
repnz
js
mov
xor
jb
and
push
shrl
add
xchg
pshufw
jo
cmpsb
add
mov
add
aaa
mov
scas
mov
add
stos
aas
in
stos
xor
mov
inc
sbb
nopl
sub
add
and
out
popf
out
xor
add
and
nop
lahf
pop
mov
pop
xorb
xor
and
nop
lahf
lcall
movsl
ljmp
xor
pop
pop
adc
mov
lahf
stos
pop
scas
mov
bound
xor
xor
das
adc
pop
pop
adc
xorl
or
pop
mov
or
xor
add
pop
popa
jmp
lock
fs
fwait
sbb
add
inc
xchg
jnp
and
mov
inc
inc
xchg
inc
je
add
scas
push
inc
popa
push
fwait
push
in
xchg
iret
dec
xchg
filds
xchg
pop
popa
add
loopne
jo
imul
sbb
pop
adc
mov
mov
lret
mov
shlb
pop
ret
adc
rorl
sti
xor
xchg
jmp
or
xchg
lret
mov
inc
addl
sub
xor
push
roll
fists
roll
jge
add
add
add
and
xor
rolb
lods
imul
and
or
loopne
lahf
inc
add
fs
shrb
adc
push
adc
addb
push
test
stos
mov
add
adc
fistps
add
add
adc
rclb
xor
loopne
std
nop
add
xor
test
jo
insb
stos
lret
sti
push
test
sti
addb
jmp
inc
stos
sbbb
push
testl
sbb
fisubl
mov
add
fwait
mov
sub
inc
lock
add
add
gs
rcr
lcall
xchg
fwait
jmp
mov
loop
or
jmp
mov
add
rclb
add
adc
in
add
inc
add
xchg
pushl
xchg
nop
outsl
mov
pushl
xchg
push
pop
sti
outsl
xlat
add
cwtl
inc
xchg
addl
add
pusha
add
xchg
add
add
in
add
imulb
add
test
sarl
pusha
scas
cmp
lock
push
jae
lret
in
les
ret
sbb
ds
iret
and
adc
dec
adc
aam
fneni(8087
or
test
or
jecxz
adc
mov
hlt
rolb
or
dec
rcrl
shrl
xchg
daa
push
pop
add
and
xchg
cmpsl
nop
add
setbe
jecxz
xchg
das
setbe
lcall
xchg
mov
dec
setbe
push
push
pop
inc
add
test
cmp
pop
cmpsl
jmp
or
fs
sub
mov
divps
jo
imul
and
je
punpckldq
and
push
pop
add
in
lcall
es
push
add
push
ret
push
push
pop
xchg
add
add
push
jp
roll
roll
mov
pop
mov
mov
rolb
pop
scas
adc
data16
pop
mov
fs
sbb
adc
and
mov
daa
mov
add
push
xchg
jne
pop
push
test
ror
add
mov
fs
xor
mov
adc
adc
cltd
push
add
adc
pop
insb
pop
adc
fwait
popf
aam
cltd
cmpl
das
xchg
adc
in
or
pop
insb
adc
popf
out
outsb
adc
adc
add
mov
lahf
bound
inc
jmp
add
adc
adc
add
add
adc
insb
sub
add
add
pop
fists
adc
imul
fwait
in
adc
adc
add
pop
add
add
lcall
inc
add
adc
xchg
add
adc
outsl
lcall
adc
fs
cmpsb
in
adc
add
mov
cltd
sti
fs
pop
and
and
fcoms
add
je
cmp
adc
adc
add
mov
mov
sub
mov
outsb
add
add
dec
mov
add
push
rcrb
add
or
pop
add
push
mov
and
add
push
xor
add
push
test
push
jns
add
jg
scas
lar
pop
jnp
or
push
test
add
push
out
add
jne
popa
or
add
push
test
andl
push
cmp
test
dec
add
add
dec
push
popf
add
dec
push
ret
orb
push
add
add
add
push
mov
add
inc
push
ds
add
push
cs
jb
add
push
iret
lahf
add
test
cmpl
push
pusha
add
push
out
add
add
push
cmp
add
push
popa
add
das
push
scas
push
push
xor
sub
and
or
push
sub
push
test
push
incb
add
adc
push
lds
add
push
cs
mov
add
push
nop
faddl
add
add
cmp
cmp
add
cmp
xchg
add
aaa
push
test
jecxz
add
add
xor
dec
add
xor
inc
stc
add
xorps
addb
or
add
or
mov
push
pop
pop
add
pop
push
test
js
add
add
add
popf
add
add
inc
lea
add
push
pusha
jmp
push
pusha
xchg
add
push
adc
push
jae
add
pop
push
test
enter
push
data16
add
adc
push
cmpsb
add
adc
inc
xor
add
push
adc
add
or
pusha
add
jmp
add
and
add
push
jp
add
out
inc
cmc
test
add
push
pop
inc
push
jecxz
push
test
xchg
loope
mov
push
jns
push
std
push
jb
and
sti
push
jno
add
stc
push
xchg
subb
out
add
cmc
push
subb
repz
repz
pop
add
icebp
push
sub
add
daa
orb
pop
roll
int
aad
add
lret
push
inc
ds
add
leave
push
aaa
add
adc
push
mov
inc
add
push
jle
sbb
add
push
sub
or
in
add
fists
xor
rcll
je
add
or
pop
and
rcll
pop
mov
shlb
mov
push
add
sub
scas
das
rclb
push
mov
test
test
add
add
movsl
push
jnp
adc
add
mov
and
mov
mov
jbe
or
or
test
inc
and
push
shlb
addb
add
mov
pop
and
mov
jae
and
push
and
mov
inc
or
push
test
inc
add
add
xchg
fadds
add
add
adcl
add
addl
add
push
pusha
or
add
sub
push
push
sub
mov
mov
in
fucomi
cs
add
pushf
cmpsl
bound
inc
pusha
xchg
sub
mov
mov
das
push
xchg
enter
stos
loopne
mov
loopne
pop
out
cs
ds
mov
add
test
aam
sub
jmp
add
add
fsubrl
mov
sub
xchg
rclb
insb
add
sti
mov
lret
or
push
push
add
adc
mov
sub
stos
lret
fsubrl
mov
xchg
outsb
lods
add
bound
and
aad
adc
and
sub
add
pop
add
mov
jp
and
bound
test
mov
addb
jmp
fs
add
pop
insl
inc
lods
push
jmp
inc
push
add
push
aaa
add
adc
cmp
xor
add
push
inc
test
in
bound
adc
rclb
das
or
push
addl
add
pop
mov
test
bound
add
pop
jnp
adc
test
add
lcall
sub
bound
bound
push
jb
add
pop
lahf
pusha
add
shll
cmp
or
add
inc
loop
lcall
add
xchg
pop
bound
data16
shll
mov
pop
shll
popa
push
inc
add
pop
push
push
loope
out
addr16
or
jecxz
lcall
push
xorb
bound
and
cmp
scas
or
xor
daa
and
and
or
subb
rolb
mov
xlat
loopne
outsb
add
aam
xor
fwait
xchg
add
xchg
pop
fwait
pushf
fs
pop
and
adcl
adc
mov
add
sbb
xchg
add
or
ljmp
jmp
mov
xor
inc
pusha
jmp
mov
loopne
mov
sub
inc
or
xchg
fs
pop
bound
in
adc
adc
aas
and
mov
pop
dec
jo
mov
pop
inc
pop
ja
add
sbbb
push
bound
sbb
fs
mov
mov
pop
out
mov
es
shr
add
add
sub
add
scas
add
bound
aaa
push
cs
adc
pop
inc
inc
adc
adc
cmpsl
mov
nop
sysret
jae
add
roll
ret
push
roll
insl
roll
xchg
add
or
push
add
pop
bound
add
cs
pop
fcompl
dec
sub
push
popa
cmpb
push
aas
adc
mov
push
andb
pop
adc
aaa
adc
and
fwait
lock
loope
or
mov
bound
and
pop
inc
push
add
add
mov
xchg
pop
sub
adc
mov
xchg
adc
adc
xor
add
lods
add
pop
div
add
insb
mov
add
pop
dec
xor
adc
adcl
add
add
add
jno
inc
add
sub
lcall
add
add
das
scas
sub
mov
insb
and
and
add
in
cmpsl
add
cmpsw
jecxz
scas
jecxz
add
aam
popf
lret
fs
jmp
sti
popf
mov
add
insb
cs
lock
mov
lcall
adc
or
add
add
cmp
insb
add
mov
fsubrl
adc
stos
out
leave
add
stc
mov
add
insb
das
in
adc
loopne
das
inc
or
scas
xchg
inc
inc
or
das
pop
xchg
nop
add
mov
push
fwait
adc
pop
in
mov
into
insb
pop
add
lcall
add
xchg
fwait
ljmp
pop
imul
sub
in
mov
enter
add
sbb
cmp
fwait
test
aam
add
push
ret
ljmp
push
add
lcall
add
cwtl
cli
test
in
pop
add
bound
in
add
add
pushf
or
in
insb
daa
out
inc
in
inc
fwait
call
adc
sub
or
es
test
add
outsl
push
fistps
out
outsl
push
mov
outsl
push
mov
or
test
push
add
mov
mov
outsl
adc
cwtl
in
loopne
es
sbb
push
add
add
bound
ljmp
mov
add
add
add
mov
lock
data16
mov
sub
iret
icebp
or
add
scas
add
add
std
fs
and
adc
stos
in
in
mov
adcb
or
xor
insb
adc
fs
data16
lret
lret
mov
cli
rcll
push
loopne
xor
loopne
andb
mov
pop
stos
jecxz
in
cs
jmp
cs
adc
xor
and
xor
mov
mov
mov
pusha
add
mov
repz
shrb
add
out
inc
add
cmp
mov
pop
fs
pop
pop
xchg
xor
mull
cmp
lret
sbb
lock
adc
add
push
fwait
in
jmpw
mov
sub
shlb
mov
add
inc
out
sbb
cli
xchg
andl
and
add
add
pop
inc
add
insb
xchg
jecxz
sbbb
test
inc
inc
jecxz
pop
out
cli
pushl
mov
adc
add
rolb
dec
inc
aaa
sub
add
push
sbb
mov
xlat
xchg
add
mov
aam
fiaddl
bound
stos
or
lock
sarb
add
inc
popa
push
stos
out
out
test
add
add
cmp
push
lcall
nop
sbb
add
mov
ret
test
adc
pop
nop
add
repz
xchg
add
aad
lcall
bound
sub
add
adc
outsl
push
add
mov
pop
adc
imul
jecxz
cli
cmpxchg
es
addb
or
mov
test
test
fdivl
adc
fs
adc
adc
mov
cmp
popf
inc
adc
mov
fs
sub
mov
aam
pop
aam
fwait
rolb
inc
or
add
adc
adc
push
xchg
loopne
mov
aad
sbbb
mov
arpl
clc
fs
add
add
add
add
add
add
cmc
xor
mov
ret
addb
orl
dec
xchg
pop
fcomi
or
imul
inc
adc
repz
sarl
adc
add
or
adc
sub
xchg
adc
adc
jp
es
add
and
rclb
cmc
test
mov
pusha
sub
sub
push
add
lcall
das
mov
jecxz
adcl
mov
call
push
lcall
xor
incl
pop
sbb
dec
adc
and
fiaddl
pop
adc
shrb
sbb
jns
das
mov
jecxz
aaa
rolb
jecxz
lcall
jg
icebp
or
inc
push
and
jecxz
sti
sub
push
add
add
aam
sub
fs
arpl
add
add
xor
xor
mov
in
adc
pusha
sub
addb
mov
rolb
addb
data16
sbb
or
adc
adc
xchg
jo
jo
xor
notl
rolb
add
jb
pop
mov
cmp
adc
rorb
das
mov
bound
add
lcallw
dec
aam
lcall
push
jle
lock
pop
mov
hlt
das
lret
filds
inc
inc
jmp
mov
add
andb
cmp
adc
xor
adc
rclb
and
add
adc
aas
std
mov
mov
stos
pop
mov
es
jmp
add
std
scas
add
sbbb
jmp
mov
adc
mov
mov
incl
mov
call
lcall
adc
mov
mov
fs
incl
add
fsubrl
mov
jecxz
add
pop
outsb
add
add
adc
mov
cli
xchg
sti
scas
add
add
add
add
add
bound
adc
add
pop
push
out
adc
insb
sub
jecxz
mov
das
xchg
sti
bound
push
adc
add
imul
jmp
out
add
and
das
es
ljmp
pop
adc
pop
xchg
jecxz
scas
add
xchg
jg
inc
adc
loopne
out
add
les
add
bound
pop
add
add
sti
add
or
ljmp
cmp
imul
push
add
pop
test
popa
add
out
aaa
pop
or
push
adc
imul
mov
sbbb
loope
add
push
jnp
add
add
adc
mov
add
adc
and
and
orb
test
test
push
mov
stc
scas
add
mov
add
imul
stos
push
stos
add
sub
add
jbe
xorb
das
sbb
add
add
adc
mov
add
lea
cmp
fwait
cld
insb
das
jmp
inc
fwait
lret
out
loope
addb
mov
sahf
add
jecxz
adc
fcompl
subb
cltd
mov
fmull
cmp
sbb
xchg
stos
pop
mov
or
scas
sbbl
mov
push
inc
jae
sub
ret
and
add
cli
add
cli
add
pop
out
lcall
adc
pop
addb
add
out
stos
out
lcall
add
loopne
das
mov
inc
mov
das
test
inc
and
xchg
add
adc
bound
adc
add
fwait
loop
xchg
jecxz
lcall
jecxz
rorl
popf
nop
fwait
lret
call
lds
cli
cmp
sbb
stos
lret
jecxz
adc
adc
pop
call
test
add
add
andb
adc
insb
shr
loopne
das
cmpsl
insb
add
sbb
mov
cli
pop
rolb
mov
addl
mov
mov
or
pop
aaa
inc
push
mov
lea
adc
pop
adc
jae
adc
add
mov
out
rcll
shrb
rol
call
add
adc
data16
pop
clc
lcall
add
repz
lcall
sbb
adc
rcrb
sub
fwait
loop
pop
mov
in
add
xlat
cmpb
pop
fs
pop
adc
fwait
inc
das
lcall
pop
into
addb
mov
pop
pop
push
mov
ret
jle
mov
aas
push
aas
lods
adc
and
test
rcrb
addb
notb
in
and
mov
and
cmp
dec
loopne
adcb
and
bound
add
and
or
fcompl
add
lcallw
mov
cltd
mov
stos
lahf
adc
xchg
aam
lcall
mov
data16
mov
and
mov
adc
inc
data16
xchg
xchg
pushf
mov
add
adcl
cmp
stos
xchg
stos
lahf
add
push
or
loopne
mov
or
push
popa
add
add
xchg
data16
push
and
cmp
or
bound
mov
sbb
test
mov
mov
bound
scas
pushf
xchg
inc
aas
neg
xor
push
and
mov
jmp
mov
mov
add
into
add
adc
fwait
inc
cli
sub
paddsw
adc
pop
out
add
das
aam
or
mov
test
test
and
bound
lcall
add
cli
loop
dec
daa
adc
subl
fistpl
pop
rolb
pusha
xchg
imul
out
insb
adc
out
popf
pop
add
fs
dec
add
loopne
loopne
fsubrl
mov
scas
pop
lds
add
sti
bound
mov
mov
outsl
mov
inc
xor
add
incl
pop
and
rolb
cmp
pop
jmp
test
cli
loop
pop
insb
push
in
shr
bound
fwait
push
in
add
insb
and
sub
push
pop
cld
add
out
fwait
jmp
add
add
mov
out
jmp
imul
insb
mov
lret
push
ljmp
insb
or
sub
mov
pop
add
xchg
dec
addb
ret
fs
pusha
sub
add
mov
add
inc
adc
andb
add
arpl
hlt
fs
mov
or
or
add
or
fs
stos
pop
pusha
movb
add
add
cmpb
out
or
cmpsl
inc
or
pop
es
mov
aas
inc
adc
or
adc
loopne
fwait
lret
jecxz
inc
cli
iret
cld
scas
add
fisubl
jmp
adcb
loopne
pop
mov
adcl
cmc
and
mov
jmp
scas
orb
adcl
sbb
sub
mov
xchg
shll
stos
out
pop
mov
ret
loop
jmp
lcall
orl
sbb
addb
out
sub
mov
or
push
pusha
sahf
add
addr16
pop
andb
or
push
lcall
or
mov
orl
fs
add
push
loopne
sub
call
out
sub
mov
and
shll
add
mov
bound
mov
test
int3
add
test
bound
push
pop
xchg
cmpsb
adc
bound
imul
fs
pushaw
stos
pop
fs
adc
arpl
push
add
cmpsl
cmpsl
fwait
insb
pop
add
fwait
jmp
das
add
fs
fs
cmc
add
jb
add
shrb
lods
ljmp
stc
xchg
gs
int3
sub
mov
push
test
and
and
and
bound
xor
push
cmp
adc
adc
gs
loopne
mov
push
outsb
add
lock
cmp
sbb
mov
xchg
add
int3
sub
pop
scas
in
insb
add
add
xor
imul
adc
nop
or
push
cmp
pop
mov
adc
mov
insb
pop
repz
add
sub
add
cmp
dec
sbb
insb
sub
pmulhuw
int3
sub
ss
push
or
and
in
pop
push
or
xlat
inc
or
inc
or
filds
push
xchg
add
ljmp
das
inc
ret
shlb
xchg
push
xor
mov
and
sbb
cli
xor
das
test
adc
test
add
fs
lcall
lcallw
or
mov
shrl
insb
adc
in
loope
adc
bound
loopne
add
adc
or
pop
pop
mov
rorb
daa
push
xchg
jmp
pavgb
add
lock
push
stos
add
xor
pop
xlat
fs
aam
jmp
xchg
jb
flds
iret
orb
test
cmc
push
add
xchg
mov
lahf
adc
push
push
rorb
data16
jecxz
mov
fs
add
push
jecxz
insb
add
test
test
jmp
pop
insl
test
adc
adc
in
lcall
adc
mov
pop
xor
test
insb
stos
adc
add
adc
jecxz
pop
push
or
xor
xor
adc
test
ret
bound
adc
inc
or
push
loop
push
or
dec
push
mov
das
cmp
or
outsl
pop
pop
mov
add
add
sub
push
mov
jo
add
insb
or
xor
outsb
add
pusha
pop
rcrl
add
pop
rcll
lret
incl
pop
popf
xor
bound
shrl
add
add
popl
pop
cld
pop
adc
subb
jecxz
fwait
shlb
add
add
lret
inc
loopne
pop
mov
inc
xor
jmp
cmpsl
lcall
out
xchg
lret
incl
adc
add
add
sbbb
inc
add
pop
cltd
dec
adc
mov
cmp
xor
jb
add
fsubs
lea
fsubs
dec
add
pop
sub
and
or
pop
jle
add
roll
fdivl
mov
adc
int
push
pop
inc
aam
fwait
test
jmp
fmuls
cmp
adc
sbb
sub
rolb
mov
fwait
lds
and
jnp
mov
cmc
lods
jmp
ja
ss
shlb
adc
mov
inc
pop
jle
loopne
stos
adc
xor
add
push
jae
inc
add
lods
add
sub
inc
push
pusha
adc
bound
push
add
aaa
push
add
push
add
push
add
arpl
bound
andb
adc
add
sub
dec
das
bound
inc
push
adc
jae
push
mov
fs
sbb
pushw
sbb
add
addb
add
add
sbbb
add
xchg
nop
push
mov
or
add
cli
pop
shlb
fsubl
pop
cli
adc
es
push
or
adc
add
aam
loope
lcall
shr
add
mov
fwait
clc
add
cld
mov
gs
mull
scas
scas
subb
push
mov
sub
add
add
add
push
xchg
aam
adc
jecxz
jmp
in
rorb
mov
add
fs
cwtl
leave
bound
add
add
sti
mov
incl
cmpb
enter
in
lcall
addb
add
push
add
xor
fwait
hlt
fs
and
add
gs
out
addr16
mov
add
pop
arpl
les
adc
cwtl
dec
mov
mov
and
or
or
and
add
ss
lcall
cli
add
add
add
or
or
or
xor
mov
mov
add
cmpsl
ljmp
cltd
jmp
add
add
pop
adc
mov
add
popf
add
mov
adc
xor
sbb
add
aas
bound
add
sub
cmp
insb
pop
out
mulb
testl
mov
bound
push
jno
xor
ds
loopne
sub
in
sub
pop
mov
mov
fs
add
mov
add
add
add
mov
cmpsl
mov
mov
adc
sub
ret
mov
add
sbb
hlt
in
mov
aam
xor
push
aam
test
pop
cwtl
cli
loopne
or
sbb
xchg
call
add
cltd
jmp
mov
jecxz
nop
push
aam
cwtl
push
mov
popa
sbb
pop
sbbb
in
pop
jmp
sti
out
loopne
mov
fs
lcall
cwtl
sarl
push
mov
add
add
sbb
setnp
aam
or
lock
add
push
aam
cltd
cld
or
or
mov
fs
and
pop
aam
push
xchg
aam
pushf
cli
fs
mov
xchg
push
push
data16
add
scas
data16
pushf
pusha
mov
mov
adc
add
jnp
add
pushf
loope
mov
popa
mov
shll
add
data16
sbb
loopne
call
add
and
mov
xor
loopne
adc
and
lret
jmp
sti
add
mov
jnp
lods
add
add
dec
add
lods
add
add
stos
lret
out
lretw
inc
add
add
lahf
jecxz
adc
add
aam
xchg
insb
adc
aam
cltd
shll
add
pop
jmp
cmpsl
add
insb
xchg
jmp
lcall
add
pop
pusha
adc
add
add
jecxz
jmp
add
mov
add
push
insb
sub
mov
mov
inc
add
sbb
push
or
daa
faddl
outsl
out
cmpsl
out
fsubl
pop
adc
adc
adc
call
lahf
sti
pop
rcll
adc
insb
sub
mov
and
inc
in
push
add
sub
add
add
sahf
repz
movl
jmp
add
add
xor
cmp
adc
ds
mov
sub
fs
test
sub
mov
orb
adc
or
test
test
add
mov
push
add
xorb
lret
out
mov
sti
pop
pop
inc
adc
and
push
add
fs
out
mov
fs
out
mov
adc
add
stos
sbb
outsl
bound
fwait
in
mov
fsub
xlat
adc
jecxz
mov
add
scas
jmp
loopne
push
add
bound
adc
data16
pop
add
insb
adc
sbbb
add
add
sti
mov
mov
stos
jns
data16
pop
add
data16
pop
push
fwait
sti
sbb
pop
out
jg
cmp
push
add
stos
pop
add
add
lcall
fwait
iret
fs
cmp
mov
inc
sub
add
pushf
orb
lcall
add
add
and
add
add
push
fwait
loopne
andb
cli
roll
mov
orb
sti
mov
fwait
add
fs
cmp
fs
pop
pop
inc
add
inc
mov
pop
addb
push
add
add
mov
add
mov
pop
mov
push
leave
add
lret
stc
scas
add
lret
add
inc
arpl
movl
loop
inc
add
addr16
inc
add
imul
outsl
inc
add
inc
xchg
inc
add
add
xchg
jae
add
xchg
addb
fwait
addb
lret
add
addl
dec
addb
stos
add
ret
dec
ja
add
out
dec
dec
roll
movlps
adc
lods
add
inc
add
dec
add
dec
jae
add
ljmp
add
sub
jnp
inc
add
addl
or
and
inc
fisubs
xor
adc
aaa
scas
add
xor
xor
cli
inc
jo
xchg
mov
das
lcall
jecxz
cmp
aaa
add
rolb
fs
and
sub
add
ds
add
fs
fs
add
add
push
ds
add
lcall
mov
stos
lret
add
sbb
in
ds
loope
inc
loopne
cwtl
out
loopne
pusha
sbbl
lret
sti
adc
xor
add
and
jecxz
xor
xor
cmp
and
sub
mov
pusha
sbb
add
rclb
jecxz
movsb
out
lods
jmp
add
mov
add
adc
sub
and
add
ss
cmp
mov
add
mov
out
fwait
jmp
das
add
jne
shr
outsb
xlat
mov
lcall
loopne
mov
cmpsl
mul
jnp
sub
or
pop
stos
mov
daa
loopne
scas
sti
mov
sahf
jmp
bound
cltd
hlt
add
cmpsl
jecxz
push
add
out
lcall
in
insb
das
aam
popf
or
fsubrl
pusha
pop
mov
test
add
pop
jnp
add
pop
mov
add
add
mov
rolb
mov
add
and
les
cs
lock
aas
insb
pmaxsw
stos
adc
loope
add
fs
add
fs
shlb
das
loopne
jnp
fs
mov
mov
pop
xchg
rorb
xorl
daa
and
out
add
inc
sbb
pusha
sub
or
sti
in
add
push
in
cmp
xor
xchg
dec
data16
add
lret
jmp
add
jo
fisubrs
data16
fs
adc
bound
push
add
sub
mov
cltd
inc
add
jge
sub
daa
add
lcall
add
adc
lods
and
xchg
roll
add
mov
adc
or
dec
mov
ja
adc
or
out
adc
mov
movswl
mov
es
jne
popa
shll
or
add
loopne
sti
mov
jecxz
pop
cmp
scas
orb
xlat
add
jecxz
pop
mull
add
fildl
pop
or
add
add
cltd
out
mov
sub
add
push
aaa
inc
adc
add
add
xchg
pusha
add
add
push
adc
lods
add
adc
in
or
pusha
add
add
add
rcrb
scas
add
pusha
add
add
mov
mov
scas
add
mov
add
add
scas
add
pusha
add
add
pop
sar
sbb
in
loop
scas
lods
add
pusha
add
add
adc
popa
add
mov
or
mov
incl
add
mov
add
pusha
add
add
add
xor
shll
add
xor
stos
add
add
cmc
add
iret
jo
repz
push
xor
sti
xor
lret
xor
icebp
add
stos
jo
mov
add
adc
pop
xor
ficompl
xor
jmp
add
add
jo
mov
stos
wrmsr
add
xor
aaa
xor
cmp
add
add
lock
stos
push
xor
push
xor
pop
xor
sub
add
add
jae
add
xor
jnp
add
add
add
push
lock
xor
xchg
xor
fwait
insl
xor
imul
icebp
add
lock
add
xor
out
add
push
std
or
add
cmp
inc
xor
inc
xor
fists
add
xor
xor
lret
xor
iret
push
xor
repz
divl
add
xor
call
add
xor
out
add
xor
add
add
loopne
add
xor
sbb
add
xor
add
add
lock
cmp
add
add
add
add
add
std
add
dec
push
mov
and
das
jo
push
push
xor
push
xor
pop
xor
pop
jo
inc
push
xor
inc
xor
dec
xor
dec
xor
jae
xor
ja
add
add
add
xor
xor
imul
outsl
xor
xchg
aad
add
add
icebp
add
mov
mov
add
xor
scas
xor
shll
add
xor
stos
add
xor
ret
xor
xor
push
mov
lret
xor
iret
xor
repz
xor
divl
add
xor
pushl
add
push
xor
sub
or
jo
add
add
push
loope
wrmsr
add
xor
stos
jo
mov
xor
cmpsl
xor
wrmsr
add
mov
add
xor
cmp
icebp
add
mov
stos
sub
add
xor
push
xor
push
xor
stos
pop
xor
pop
jo
inc
xor
inc
xor
stos
dec
xor
dec
xor
jae
add
add
add
xor
cmc
add
mov
stos
cmp
add
or
add
mov
stos
jo
xorl
stos
mov
add
add
xor
iret
xor
repz
stos
divl
add
xor
les
enter
cmc
add
sbb
xor
mov
inc
xor
add
xor
fdivp
xor
add
push
xor
add
add
xor
or
add
push
xor
xor
add
xor
pushl
add
sub
add
xor
push
push
xor
push
xor
pop
xor
xchg
mov
inc
add
sbb
add
fyl2xp1
add
xor
xor
mov
adc
jg
add
add
add
add
xor
xchg
xor
mov
sub
add
xor
mov
add
jo
mov
add
add
add
jo
jno
add
jo
stos
xlat
xor
jge
add
jo
repz
stos
divl
add
xor
pushl
add
xor
or
xor
jmp
add
add
lods
adc
lock
xor
sbb
add
xor
stos
add
add
xor
or
add
lock
xor
jne
shll
add
push
xor
fnsave
add
xor
push
xor
push
push
xor
pop
xor
pop
xor
inc
xor
inc
lods
xor
dec
xor
std
add
add
add
xor
push
jo
add
jo
or
add
xor
cmp
add
xor
mov
add
xor
stos
xor
scas
xor
shll
add
xor
fbstp
add
xor
stos
xor
lret
xor
iret
xor
repz
stos
divl
add
xor
pushl
add
xor
sub
xor
jmp
add
xor
adc
stos
lock
add
xor
pop
xor
add
add
xor
wrmsr
add
xor
stos
aaa
xor
cmp
add
xor
and
add
xor
das
xor
push
xor
stos
push
xor
pop
xor
xor
sub
add
xor
dec
xor
popa
lock
mov
jno
jg
add
add
xor
jnp
add
add
mov
or
add
xor
mov
add
add
add
jo
push
add
add
xor
icebp
add
add
xor
cmc
add
mov
stos
fwait
xor
iret
xor
repz
divl
add
xor
jecxz
add
xor
lret
add
xor
adc
lock
add
xor
add
add
xor
push
or
add
add
lock
add
mov
fnsave
add
mov
icebp
add
xor
lock
add
addr16
jo
dec
xor
jae
add
xor
jnp
add
add
add
xor
imul
outsl
xor
icebp
add
mov
stos
fwait
mov
lahf
xor
xorl
xchg
add
xor
mov
add
xor
mov
add
xor
stc
add
add
push
xor
xlat
xor
add
xor
repz
xor
divl
add
xor
pushl
add
push
xor
inc
jo
jmp
add
xor
adc
lock
add
xor
pop
xor
add
add
xor
or
add
xor
xor
add
xor
cmp
add
xor
and
add
add
xor
push
push
xor
push
xor
pop
xor
pop
xor
inc
mov
add
add
add
stos
ja
add
add
add
add
xor
outsl
xor
xchg
xor
stos
xchg
xor
fwait
xor
lahf
xor
xorl
stos
xchg
add
add
xor
mov
bound
out
add
add
scas
add
roll
sbb
add
sbb
sbb
add
jne
or
jns
or
add
add
sbb
imul
movb
lret
stos
cltd
add
repnz
addl
or
push
pop
out
add
add
mov
push
stos
sbb
push
push
add
add
push
push
add
stos
or
add
add
fldl
add
add
stos
cmp
add
add
and
add
add
stos
cmc
add
stc
add
std
add
push
add
stos
pop
add
pop
add
inc
add
inc
add
orb
sbb
add
jb
pop
stos
jbe
add
add
add
add
add
outsb
add
xchg
add
stos
xchg
add
lcall
add
stos
push
add
push
addb
addb
addb
inc
addb
addb
addb
addb
jno
add
add
add
add
addb
addb
addb
xchg
addb
addb
addb
addb
addl
addb
mov
add
add
addb
addb
addb
addb
roll
flds
stos
roll
addb
addb
icebp
addb
addb
addb
addb
loope
add
addb
addb
addb
adc
sbb
stos
add
or
stos
xor
cmp
stos
and
sub
stos
push
addb
rolb
rolb
rolb
inc
rolb
rolb
rolb
rolb
jno
add
add
add
add
rolb
rolb
rolb
xchg
rolb
rolb
rolb
rolb
add
mov
add
rolb
rolb
rolb
rolb
mov
add
add
rolb
rolb
rolb
rol
leave
rolb
rolb
icebp
rolb
rolb
rolb
rolb
loope
add
rolb
rolb
rolb
adc
jb
rolb
rolb
rolb
add
add
add
rolb
rolb
rolb
rolb
and
add
add
rolb
rolb
rolb
rolb
inc
rolb
rolb
rolb
rolb
jno
add
add
add
add
rolb
rolb
rolb
xchg
rolb
rolb
rolb
rolb
add
mov
add
rolb
rolb
rolb
rolb
mov
add
add
rolb
rolb
rolb
rol
leave
rolb
rolb
icebp
rolb
rolb
rolb
rolb
shr
add
rolb
rolb
in
rolb
rolb
rolb
rolb
sbb
add
add
rolb
rolb
rolb
cmp
add
add
rolb
pusha
add
add
ljmp
mov
mov
add
stos
mov
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
loopne
shll
aad
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
jmp
add
jmp
pusha
add
pusha
add
add
pusha
add
add
xor
add
test
add
add
sub
pusha
add
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
in
push
call
add
in
test
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
loopne
adc
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
loopne
adc
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
add
pusha
dec
adc
add
pusha
add
add
pusha
add
add
out
add
repnz
add
pusha
add
pusha
add
xor
sub
xor
ljmp
add
add
xor
sbb
xor
push
xor
or
add
xor
stos
xor
add
xor
cmp
add
xor
xor
sub
add
xor
stos
push
xor
push
xor
pop
xor
pop
xor
sub
add
add
add
pusha
stos
int3
sub
stos
in
iret
adc
sub
insb
xchg
fsubrl
add
int3
loopne
add
jmp
in
add
jmp
aas
insb
pop
adc
les
insb
mov
enter
sub
add
sub
add
roll
cmp
in
insb
pop
out
lcall
insb
pop
in
addb
mov
cs
pop
ljmp
jmp
les
insb
cs
in
data16
xchg
jmp
roll
add
insb
psubsb
data16
std
insb
xchg
std
ljmp
add
add
or
mov
in
sub
lea
adc
adc
stos
int3
insb
add
stos
int3
sub
addb
xchg
in
lcall
loopne
sub
stos
in
add
arpl
adc
out
and
pop
mov
add
mov
mov
mov
ljmp
in
inc
add
mov
add
loop
int
push
jg
adc
jb
sbb
mov
add
stos
int
xchg
int
mov
and
cmp
roll
out
adc
and
add
aas
push
or
adc
adc
jmp
mov
add
add
xchg
mov
int3
mov
stos
int3
lock
ret
pop
push
add
mov
cmc
popa
add
fiaddl
add
je
xor
jmp
sbb
incl
adc
sub
test
add
adc
adc
push
and
add
out
roll
cmpsl
lret
mov
hlt
sbb
mov
pop
dec
xchg
add
test
pop
ja
add
jae
call
push
and
lcall
adc
push
jmp
add
mov
pop
outsb
mov
push
insb
xchg
stc
add
or
mov
shll
add
mov
or
les
jbe
add
adc
sub
adc
test
sub
xchg
rolb
rclb
nop
and
pop
test
add
add
sub
adc
pop
in
pop
loope
loope
in
sub
adc
adc
dec
pop
mov
adc
xchg
fldl
imul
add
ja
jmp
rolb
adc
ja
add
aad
add
adc
mov
add
push
xchg
jmp
movsl
mov
jmp
ret
adc
aaa
pop
pop
lock
lret
push
add
push
add
push
add
enter
add
in
add
add
in
loopne
inc
rclb
inc
xchg
loope
loopne
dec
nop
add
push
dec
inc
add
out
cmc
add
add
sub
popa
insl
icebp
add
add
lcall
add
inc
jecxz
add
add
leave
adc
cmpsl
pop
aam
stc
ljmp
push
jmp
call
add
push
sub
add
add
roll
pop
jmp
or
fstl
mov
jmp
adc
in
sub
and
add
add
lods
icebp
sub
add
add
xor
push
mov
aad
ss
mov
jmp
add
add
push
mov
call
add
pop
push
mov
add
xorl
mov
and
lcall
in
mov
mov
loope
shlb
lds
add
pop
cmc
mov
jmp
add
fs
in
popa
add
adc
sbb
push
sarl
mov
pusha
or
stc
mov
dec
jo
mov
sub
add
rolb
je
add
mov
enter
popa
add
popf
push
add
in
and
dec
adc
mov
movsb
or
sub
pop
in
lcall
adc
xchg
shll
fs
lcall
stc
add
fwait
mov
mov
roll
jecxz
add
sbb
mov
popf
mov
push
add
add
mov
pop
xor
lcall
add
pop
das
rolb
mov
adc
adc
add
insb
stos
int3
add
sub
add
adc
insb
adcb
js
push
add
in
loopne
dec
add
add
push
push
push
fwait
add
in
add
push
xor
test
xor
add
in
lcall
lcall
push
lcall
add
int3
push
add
add
jmp
add
add
call
sbb
adc
add
pop
test
adc
pop
leave
add
adc
incb
cmp
in
in
lcall
sar
pop
push
add
add
in
lds
int3
pop
dec
add
add
add
add
pop
insb
add
sub
stos
int3
sub
stos
in
incl
js
stos
int
sub
mov
adc
loopne
pop
out
jmp
in
add
jmp
aas
adcb
adcb
sbb
adc
jmp
mov
fs
mov
fs
mov
jmp
add
rorl
std
rorl
add
roll
in
inc
fwait
add
shl
fwait
in
add
sub
add
or
or
push
push
push
inc
dec
inc
sbb
sarl
roll
adcb
rorl
dec
add
fldl
fwait
lds
roll
roll
int
roll
icebp
sbbb
sbbb
push
roll
sbb
sbbb
xchg
nop
sbb
mov
xchg
andb
add
add
test
dec
es
mov
out
or
mov
xchg
sub
add
inc
scas
out
rclb
add
sbb
add
push
orl
adc
jb
or
or
mov
xchg
mov
insb
rorl
add
rclb
sub
add
data16
push
loopne
adc
insb
push
add
add
insb
adc
insb
push
in
add
in
push
addb
addl
addb
addl
sbb
add
mov
sub
notb
pop
incb
rolb
es
pop
shrb
and
inc
andl
add
insb
mov
add
pop
sbb
xor
add
push
jmp
loope
mov
mov
mov
scas
pop
outsl
popa
or
or
cli
insb
push
out
iret
insb
push
or
fwait
hlt
sbbb
stc
pop
mov
jo
pop
stos
mov
add
xlat
fisttps
incb
mov
punpcklbw
xchg
int
loopne
push
add
cli
adc
daa
sbb
cmp
or
pop
in
or
inc
sbb
pop
and
dec
daa
jecxz
daa
pusha
out
incb
jnp
add
daa
mov
pop
xchg
aas
or
add
shll
push
and
and
fwait
jmp
and
fisttps
incb
cmpsb
lds
mov
aas
fs
leave
or
inc
and
and
and
pop
cmp
loope
push
incl
xchg
stc
pop
das
inc
addl
arpl
pop
pop
loope
pop
add
sbb
and
pop
inc
add
in
add
or
add
jae
add
mov
push
xor
loopne
addr16
adc
xlat
loopne
xchg
push
push
add
pusha
add
push
jnp
pusha
add
out
push
pusha
add
stc
or
add
push
add
pop
pusha
or
daa
out
lods
paddsw
addr16
add
punpckhbw
icebp
push
push
in
add
add
call
in
add
loopne
mov
push
lds
add
loopne
mov
add
aad
add
add
pusha
adc
popf
pusha
and
add
pusha
add
add
add
pusha
add
inc
pusha
add
xor
add
pusha
add
add
add
pusha
add
pusha
add
pusha
add
pusha
add
push
xor
add
pusha
add
pusha
add
push
pusha
add
add
pusha
add
add
add
pusha
add
pusha
add
pusha
cs
pusha
add
lods
pusha
add
pop
loopne
and
stos
pop
pusha
add
add
add
pusha
add
loopne
popa
add
jo
sti
push
xor
ja
add
jo
sbb
add
mov
xchg
xor
xchg
add
xor
shll
int
add
lock
or
add
add
xchg
xor
popa
xor
jae
add
add
xor
or
add
xor
mov
lret
xor
fbstp
add
xor
mov
add
xor
jae
add
add
xor
lret
add
xor
jecxz
xor
xor
stos
shll
add
add
xor
jge
add
add
and
add
mov
xor
add
ds
add
xor
stos
lds
add
xor
mov
add
xor
inc
xor
push
xor
stos
sub
add
xor
add
add
jo
stos
pushl
add
xor
stos
xor
mov
xor
xchg
xor
arpl
add
leave
xor
std
xor
jmp
xor
mov
add
xor
or
xor
in
add
and
add
xor
sub
add
add
xor
outsl
xor
fwait
xor
stos
mov
add
add
xor
stos
jmp
or
xor
sub
add
xor
jge
add
add
xor
movsl
xor
shll
add
pop
xor
lds
jmp
test
add
xor
daa
xor
push
xor
stos
inc
xor
jge
add
add
xor
lods
xor
fnstenv
add
xor
mov
pop
xor
wrmsr
add
xor
pop
xor
dec
xor
stos
jns
add
add
add
xor
lods
xor
lds
add
xor
sbb
add
xor
dec
xor
pop
xor
push
sub
mov
adc
xor
icebp
add
add
outsl
sarb
push
out
add
pushl
inc
or
add
add
jo
sub
xor
inc
xor
ja
add
add
xor
stos
xor
fnstenv
add
xor
in
add
jo
stos
or
add
xor
sub
add
add
xor
xchg
xor
mov
add
add
cmp
inc
xor
leave
add
add
cmp
add
push
xor
xor
add
add
xor
jns
add
add
xor
xor
mov
add
push
xor
shll
icebp
xor
sti
xor
xchg
push
jo
jge
add
add
xor
xor
add
xor
in
cmp
push
add
xor
iret
xor
add
xor
xchg
add
xor
ja
add
mov
int
add
inc
xor
adc
in
add
xor
sub
add
add
add
push
xor
ja
add
add
jo
push
xor
and
add
xor
sbb
add
cmp
fs
mov
sbb
add
push
xor
sub
add
add
add
xor
xchg
xor
xchg
add
xor
shll
add
xor
int
add
push
xor
jmp
add
xor
aaa
push
xor
add
add
push
xor
loope
add
add
push
xor
push
xor
inc
xor
stos
jo
mov
xor
xchg
xor
xor
ja
xor
inc
xor
push
xor
sub
add
lret
xor
jno
jmp
lock
add
xor
dec
xor
arpl
add
xor
cmpsl
xor
shll
stos
pushl
add
lock
or
add
xor
stos
push
xor
dec
xor
imul
push
xor
scas
xor
mov
adcb
cmp
out
mov
loop
xor
call
add
lock
leave
xor
shlb
sub
add
outsl
pusha
popa
outsl
fwait
fwait
xor
mov
in
jo
loopne
outsl
ljmp
daa
xor
std
jo
xor
pusha
outsl
push
xor
clc
mov
jno
stos
xchg
xor
xor
ja
add
xor
push
xor
sub
xor
cmp
add
inc
push
xor
jnp
sub
add
xor
movsl
xor
dec
xor
mov
push
jmp
mov
sbbb
orl
mov
mov
fwait
lods
lcall
mov
mov
add
pop
jmp
orl
ljmp
add
jmp
mov
add
mov
xchg
out
stos
xchg
lahf
mov
orl
andb
mov
pushf
adc
add
fwait
stos
popf
popf
sbbb
mov
test
add
out
test
mov
addb
pushf
stos
mov
insb
xor
mov
add
jo
out
and
mov
mov
in
cmpsl
mov
xor
add
add
mov
add
and
test
xchg
add
rolb
add
add
in
mov
add
push
add
add
mov
mov
jo
stos
icebp
add
mov
pushf
sbbb
mov
add
addl
cmpl
add
cmp
add
add
push
inc
push
cmpsb
orl
subl
adc
cltd
add
add
or
add
xchg
mov
adc
and
mov
add
pushf
add
add
pop
add
stos
sbbl
mov
fwait
xchg
push
push
adc
add
pop
push
add
push
test
mov
add
add
mov
cmp
mov
addl
test
fwait
mov
add
add
add
out
test
xchg
popf
pushf
fwait
test
add
add
pushf
add
mov
add
roll
lods
addl
add
mov
pusha
jl
cmpsb
mov
add
add
add
stos
mov
popf
add
cmpl
addl
popf
mov
and
push
mov
add
bsr
adc
mov
addl
xchg
subl
xchg
add
add
jno
mov
add
adc
xchg
add
addb
add
fnstsw
or
push
mov
orl
ja
popa
orl
orb
mov
popf
xchg
add
test
push
lcall
sbb
add
add
orb
pushf
fwait
popf
mov
xchg
scas
add
push
addb
addl
mov
mov
cwtl
mov
cmp
mov
or
test
cmp
pop
test
add
sbbb
adcl
stos
sub
fwait
test
cld
inc
jmp
mov
addl
add
add
jno
inc
addb
pop
add
outsb
les
stos
xchg
lret
sbb
test
inc
cmp
xchg
or
sbbl
cltd
mov
adc
cmp
xor
inc
pop
lret
rcll
adc
pop
cmpsb
orl
test
cwtl
stos
add
stos
xchg
xchg
add
mov
mov
inc
xor
jmp
mov
scas
add
sbbl
cmpsb
inc
movsb
cmpsl
inc
inc
lahf
inc
cmp
sub
lods
lcall
inc
lods
inc
or
mov
pushf
mov
add
add
cmpsb
pushf
lods
mov
mov
add
push
shr
rol
test
mov
add
push
in
add
andl
add
inc
add
rolb
jmp
mov
popf
mov
rcrb
andb
shlb
mov
push
xlat
add
ljmp
adc
or
mov
mov
movb
addb
xchg
mov
add
sub
mov
orl
ja
imul
shlb
pusha
jg
add
xor
inc
and
mov
loope
sub
or
mov
mov
daa
mov
add
jmp
mov
add
add
jno
dec
ret
dec
sub
push
dec
in
sub
loope
add
popf
popf
add
mov
bound
xor
mov
and
sbb
add
shlb
cmp
xorb
mov
out
inc
dec
add
add
sbb
or
inc
pop
sbb
pop
addl
or
add
or
aaa
addl
add
add
mov
and
shrb
mov
loopne
shlb
or
and
cmpb
add
scas
add
loope
fisubrs
push
orb
les
insb
or
add
mov
test
add
mov
mov
mov
sub
popa
push
jecxz
stos
inc
scas
imul
cltd
cmpsl
aaa
arpl
add
mov
xchg
andb
mov
inc
lods
sub
inc
add
mov
sub
out
inc
mov
add
mov
addl
mov
mov
and
out
loop
ret
movsb
mov
roll
pop
mov
popf
loopne
xlat
mov
mov
cmp
cmpsb
pushf
add
lahf
fwait
xchg
add
dec
popa
adc
inc
adc
pushf
add
push
add
loope
add
bound
pushf
add
orl
rcrb
and
push
cwtl
add
xchg
test
lcall
loopne
pushf
sbbb
mov
and
in
mov
fs
sub
jmp
jmp
pop
scas
rolb
sbbb
mov
aam
pop
loope
call
out
jmp
pushf
pushf
ret
add
add
icebp
add
outsl
fistl
xchg
add
jae
or
adc
scas
add
addl
addl
popf
mov
add
xor
mov
fwait
add
add
add
in
mov
movb
add
aam
mov
jbe
lock
mov
rclb
cmp
bound
lock
in
pop
mov
push
add
stos
sahf
cmp
xorb
jb
arpl
xchg
mov
xor
int
push
stos
lods
jns
xor
add
andb
add
arpl
lahf
mov
jb
loope
add
mov
add
sub
stos
popf
mov
stos
mov
xor
add
inc
cmpl
add
push
push
roll
add
mov
stos
push
orl
andl
add
xchg
test
xor
js
pop
popf
pusha
dec
and
pusha
icebp
add
add
adc
add
mov
rolb
jo
xor
mov
push
rclb
addl
pusha
mov
add
ja
pop
mov
pop
xchg
or
add
add
xor
pop
add
mov
xchg
fwait
sbbb
mov
je
add
je
mov
and
icebp
add
jecxz
add
ret
and
add
rclb
loopne
pushf
loope
mov
orb
orl
mov
popa
or
sbb
and
and
addb
mov
xor
adc
cmpsb
xorl
jns
or
sbb
mov
mov
mov
fadds
add
ss
mov
jo
stos
add
add
ss
mov
xchg
or
adc
sub
cmp
add
xor
adc
stos
xchg
pushf
lahf
mov
sbb
repz
mov
xchg
das
pushf
add
adc
nop
cmpsb
mov
sub
cs
loope
add
ret
xchg
add
int
adc
or
mov
push
or
xchg
add
cli
add
lahf
adc
int
add
add
inc
mov
jg
frstor
mov
jo
popa
xor
repz
add
in
jecxz
dec
xlat
push
out
out
shll
push
roll
mov
add
mov
adc
ret
int3
rcrb
add
jns
mov
mov
add
and
add
icebp
add
add
pop
add
repnz
mov
nop
dec
jo
mov
aam
shlb
xchg
xchg
or
mov
mov
add
xor
mov
push
orl
adc
add
mov
mov
xchg
lahf
fwait
jo
nop
cmpsl
mov
xor
jo
mov
movsb
xor
and
jae
test
add
xor
sbb
add
add
jb
and
add
xor
roll
flds
icebp
or
xchg
xorl
mov
xchg
jb
add
jge
addl
adcl
jo
xchg
xchg
mov
sarb
cmp
sub
jo
adc
xorl
sbbb
pop
adc
xchg
or
add
movsb
int3
mov
rolb
and
mov
lcall
sbb
and
das
mov
cli
pop
and
nop
or
xchg
jne
add
repnz
fdivrs
sbbb
sbbb
add
mov
mov
pushf
mov
out
add
lahf
mov
xchg
add
add
add
scas
mov
orb
mov
scas
stos
add
ffree
mov
addl
mov
fwait
xchg
mov
mov
mov
and
add
push
adc
add
mov
addb
mov
add
mov
mov
lahf
or
and
popf
mov
jl
add
mov
addb
add
mov
xchg
xchg
orb
mov
sub
into
test
cmpsb
mov
cwtl
cltd
sbbl
orb
sbbb
addl
adcb
or
test
orb
or
or
test
stos
xchg
fwait
mov
sbbl
popf
cmpl
mov
icebp
adc
adcb
pushf
mov
sub
cmpsb
adcb
stos
test
mov
add
sub
lods
test
fwait
test
mov
jmp
addb
xchg
popf
mov
cltd
inc
add
addl
lcall
stos
mov
add
adc
test
inc
or
add
add
or
xchg
inc
and
add
stos
sbb
add
rcrb
cmpsb
sbbl
add
add
addl
add
inc
add
movb
xor
movsl
add
mov
cmpsl
test
orb
orl
mov
mov
jge
add
add
lds
xchg
in
mov
mov
in
mov
add
ffreep
adc
fwait
xchg
dec
rclb
mov
mov
test
add
xchg
add
or
adc
inc
or
lahf
sbbb
shrl
into
adc
mov
rorb
mov
mov
ret
addb
add
cmpsb
lods
add
jg
add
ffree
add
mov
orb
sbbl
add
popf
mov
inc
movsb
mov
add
cmpsb
add
mov
orl
add
inc
add
pop
enter
add
add
inc
add
add
arpl
add
enter
lcall
sbbb
add
fabs
add
mov
lods
addl
mov
xor
into
pusha
add
and
xchg
mov
sbbb
add
lahf
mov
fwait
mov
rolb
dec
std
loop
add
xor
add
out
mov
andb
ret
loop
stos
inc
adc
or
lret
stos
lcall
add
fwait
add
xchg
stos
or
aaa
xor
sub
mov
xchg
add
add
and
sbb
fwait
lahf
subl
lcall
mov
add
xchg
cmpsb
orl
sbb
add
and
inc
add
pushf
lods
mov
andl
cmpsb
add
or
mov
add
dec
pop
cmpsb
add
inc
pshufw
data16
dec
mov
adc
adc
lods
orb
fwait
ret
pop
push
or
pop
and
mov
loopne
mov
mov
mov
add
es
add
test
mov
jb,pn
add
cmpsl
add
loopne
and
pushf
add
andb
or
loopne
js
out
loope
scas
add
add
and
jne
fiaddl
add
push
sbb
mov
mov
mov
add
sarb
add
mov
add
scas
lahf
xchg
les
add
movsl
add
push
push
add
or
mov
ja
jmp
mov
add
add
add
bound
andb
jae
and
mov
mov
lcall
loope
add
loopne
sti
ljmp
add
fwait
addb
lea
cwtl
add
sbbb
sbb
data16
mov
lcall
mov
push
adc
jmp
fwait
shlb
shlb
das
xchg
dec
lods
lcall
addb
jmp
addl
andb
popf
add
dec
jmp
adc
add
push
adc
mov
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
notb
and
imulb
jmp
inc
add
adc
adc
inc
add
add
add
in
add
outsl
inc
jo
outsb
adc
adc
jo
out
xor
iret
xor
nop
xor
add
xchg
mov
ljmp
mov
mov
or
sbb
mov
outsl
jns
stc
and
divb
es
popa
add
hlt
sub
pop
add
lahf
les
sub
xchg
or
add
testb
sahf
jns
cmp
loope
movb
scas
push
push
dec
stos
add
std
pusha
outsb
insl
push
scas
push
roll
cmp
adc
cmp
subb
arpl
outsl
add
test
jl
scas
push
push
test
lahf
lldt
xor
jb
adc
xchg
inc
mov
cltd
or
sbb
add
stos
clc
inc
pop
inc
add
or
sub
cmp
add
movsl
xchg
jp
and
loope
add
testb
loop
add
jecxz
outsb
imul
dec
jl
add
ficoml
add
shrb
mov
fs
jge
adc
add
mov
adc
fs
aaa
lret
push
add
inc
jp
sbb
push
add
mov
outsl
andl
sub
and
and
add
adc
sahf
shl
cmp
inc
add
shlb
add
cmp
add
mov
or
ds
sarb
loopne
imul
dec
add
scas
add
xchg
add
rcr
rclb
xchg
add
cmp
cmp
shrb
mov
cwtl
and
inc
or
shlb
push
jnp
or
sarb
sub
push
add
shlb
mov
add
jnp
lret
add
sub
mov
fs
rorb
add
xchg
std
push
mov
cmp
add
jmp
add
ror
rorb
add
add
xchg
add
or
xchg
test
rorl
mov
outsb
sarb
adc
lret
add
inc
ror
data16
insl
add
cmp
xor
addr16
hlt
pop
pop
or
add
aam
imul
lcall
sahf
repz
cmpsb
add
dec
push
xor
pop
fisttpll
dec
mov
pop
inc
lret
ret
lret
mov
dec
das
xor
sub
jno
addr16
add
push
mov
add
inc
jmp
or
xor
add
aaa
in
xor
add
add
insl
and
add
push
arpl
and
add
xchg
sti
add
add
cld
add
xchg
xchg
sti
add
add
add
xchg
sti
add
cld
add
cld
add
movsl
cld
add
sti
add
add
sti
add
add
add
stos
je
add
add
cld
add
sti
add
add
jb
add
cld
add
jno
sti
add
add
push
cld
add
cld
add
movsl
cld
add
cld
add
popa
sti
add
add
sti
add
and
shl
add
bound
add
mov
scas
add
xor
or
mov
or
dec
or
xchg
and
push
aad
or
lods
or
inc
loope
or
out
push
scas
or
ja
or
cmpsb
sub
sub
movsbl
add
mov
scas
add
add
cmpsl
add
scas
add
stos
xlat
addb
addb
addb
addb
testl
mov
addb
addb
addb
aas
addb
addb
addb
addb
inc
addb
addb
push
xor
test
jmp
cmpl
addb
addb
jg
add
add
add
add
addb
addb
addb
lahf
addb
addb
jbe
push
incl
add
das
rcrb
fdivr
add
repz
lret
xlat
ret
xlat
fildl
xlat
rcl
stos
xlat
mov
mov
mov
adc
add
xchg
xlat
imul
xlat
jnp
xlat
jae
dec
xlat
inc
xlat
pop
add
push
xlat
sub
and
arpl
rolb
rcrb
rolb
shl
add
not
lret
rcr
rcl
add
stos
shll
add
mov
adc
rcll
arpl
jnp
jae
rorl
inc
rcrl
push
add
sub
and
cmp
xor
rorl
roll
rcrl
rcll
add
jmp
jecxz
sti
shl
add
lret
rol
rcr
rcl
add
stos
shlb
add
mov
adc
rclb
arpl
jnp
jae
rorb
inc
rcrb
push
add
sub
and
cmp
xor
rorb
rolb
rcrb
rclb
add
add
iret
add
inc
out
add
add
fcomip
add
lret
ffreep
add
stos
fbld
add
mov
sbb
fists
arpl
jnp
jae
fisttps
inc
fistps
push
add
sub
and
cmp
xor
fisttps
filds
fistps
fists
add
jmp
jecxz
sti
fdivp
add
lret
faddp
add
stos
fisubs
add
mov
sbb
ficoms
arpl
jnp
jae
fimuls
inc
ficomps
push
add
sub
and
cmp
xor
fimuls
fiadds
ficomps
ficoms
add
jmp
jecxz
sti
add
lret
ffree
fstp
fst
add
stos
frstor
add
mov
sbb
fstl
arpl
jnp
jae
fisttpll
inc
fstpl
push
add
sub
and
cmp
xor
fisttpll
fldl
fstpl
fstl
add
jmp
jecxz
sti
fdiv
add
lret
fadd
add
stos
fsubl
add
mov
sbb
fcoml
arpl
jnp
jae
fmull
inc
fcompl
push
add
sub
and
cmp
xor
fmull
faddl
fcompl
fcoml
add
jmp
jecxz
sti
fcomi
add
lret
fcmovnb
fcmovnu
fcmovnbe
add
stos
add
mov
sbb
fistl
arpl
jnp
jae
fisttpl
inc
fistpl
push
add
sub
and
cmp
xor
fisttpl
fildl
fistpl
fistl
add
jmp
jecxz
sti
add
lret
fcmovb
fcmovu
fcmovbe
add
stos
fisubl
add
mov
sbb
ficoml
arpl
jnp
jae
fimull
inc
ficompl
push
add
sub
and
cmp
xor
fimull
fiaddl
ficompl
ficoml
add
jmp
jecxz
sti
fpatan
add
lret
fld
add
stos
fldenv
add
mov
pop
fsts
das
or
sub
pusha
xor
push
rolb
sarb
cmp
push
pusha
cmp
rolb
shlb
add
xor
xor
addb
add
mov
dec
aas
xlat
mov
aam
aam
add
pop
aam
aam
aam
add
scas
rorl
add
sub
and
add
cmpsb
shlb
inc
rorl
mov
cli
rol
shlb
pop
inc
shrb
loopne
add
adc
scas
pusha
inc
in
fcomip
filds
scas
filds
insb
fbstp
pop
fildll
filds
cmp
push
fiadds
mov
fsubp
fisttpll
cmpsl
fisttpll
xchg
fmull
jno
mov
ja
add
fistl
in
movsl
fiaddl
fiaddl
fisubrl
popa
and
jbe
add
dec
fiaddl
fisubl
push
fisubrl
fisubl
and
push
fiaddl
add
push
ficoml
ljmp
neg
lock
shll
fstps
sub
and
aas
fnstcw
flds
xor
flds
flds
add
sbb
adc
enter
fadds
fcoms
add
fdivrs
xlat
add
jo
pop
xlat
add
add
rcl
lods
add
test
add
jp
or
adc
add
aad
aad
aad
aad
cmc
aam
aam
aam
aam
aam
aam
aam
aam
pop
aam
aam
aam
roll
lret
rol
rcl
shll
add
pop
shrl
shll
roll
ljmp
shlb
shrb
add
sarb
and
inc
shrb
loopne
sbb
add
in
shl
shl
roll
push
jp
je
add
ja
rorl
sarl
mov
inc
pusha
xor
pusha
pop
add
fldl
inc
fsubrl
faddl
clc
fcmovne
loopne
add
fildl
fistl
fildl
rcr
adc
flds
fadds
in
pop
add
arpl
pop
es
add
push
add
sbb
add
aad
aad
aad
aad
mov
insb
aad
aad
aad
or
loop
rcl
mov
cmpb
aam
rcr
and
add
sarl
sarl
roll
add
xchg
rolb
add
shlb
rorb
adc
add
ror
rcl
shll
imul
roll
cmp
add
sbb
in
add
ror
rol
rorb
andb
mov
adc
neg
fists
stos
fiadds
mov
fidivrs
add
fisubrs
fldl
enter
fdivl
sbb
ret
and
xor
loopne
pop
add
fmuls
push
xlat
test
add
sti
aam
aam
aam
lahf
aam
aam
shrl
roll
or
adc
shl
rolb
rcr
rcr
ror
shll
add
add
add
fbstp
fucomip
fcoml
xor
pop
and
sbb
add
fnstcw
pop
fsub
loopne
cmp
add
xlat
or
adc
cmc
add
mov
and
rorl
pusha
sub
rolb
iret
rcr
rcr
rcl
shlb
movsl
shlb
dec
add
ja
or
add
dec
fbld
fbstp
fistps
add
ficomps
xor
adc
sbb
adc
fnstsw
or
add
loopne
out
repnz
rcr
mov
js
fistl
add
out
loopne
neg
insl
add
hlt
fldenv
cmp
movsb
xlat
xchg
loopne
push
xlat
xor
xlat
jecxz
sti
repz
lret
adc
ret
xor
cmp
xor
push
aad
add
pop
aam
aam
aam
adc
int3
rol
mov
fwait
shll
sarl
sar
mov
pop
xor
mov
fists
or
out
filds
ret
adc
fidivs
pop
fimuls
xor
add
repz
faddl
push
faddl
add
aas
fstpt
add
pop
fprem1
rcr
mov
adc
out
loope
stc
fadds
icebp
fmul
fadd
fcom
fadds
lods
fdivrs
fadds
lcall
fadds
inc
fadds
pop
fcoms
add
mov
scas
mov
add
out
cli
ror
roll
rcl
shll
adc
shll
or
roll
jmp
in
mov
lock
cmp
inc
insb
mov
fistpll
add
push
fidivrs
add
push
fstl
add
sub
ficompl
dec
sub
push
dec
jmp
icebp
fld
fldenv
insb
fstps
pop
add
push
jo
xor
out
add
neg
int
scas
fcoms
dec
fcoms
fsubr
adc
xlat
rclb
add
gs
aad
aad
add
add
aam
add
fcom
dec
aam
inc
rcrl
adc
in
shlb
aas
add
add
lods
fbld
jle
loop
mov
dec
fucom
nop
adc
neg
add
xor
flds
fmuls
aad
aam
aam
aam
test
xchg
and
sbb
cmpb
repz
aad
inc
fisttpll
fildl
fdivs
xor
shrl
xchg
rolb
pop
add
shll
cld
fists
add
fnstcw
aad
add
ret
aam
xor
aam
xchg
rcll
stos
shlb
xor
mov
mov
and
pop
shlb
or
add
jecxz
push
rcr
mov
and
dec
pushf
fiaddl
nop
fisubrl
add
fidivrl
fiaddl
dec
fimull
dec
add
adc
push
ficoml
and
sub
and
adc
fiaddl
cmp
xor
xor
or
orb
dec
out
ficompl
sbb
dec
add
fld1
ftst
fldenv
loopne
dec
clc
fxtract
jo
int3
enter
push
fcomp
add
fnop
fldcw
fldenv
flds
mov
mov
mov
mov
add
cwtl
flds
xchg
fstps
fsts
adc
add
fsubr
fsub
fsub
fadds
cld
fdivr
fdiv
fdiv
fadds
int3
fmul
fadd
fadd
fadds
fcomp
aam
rcr
add
mov
mov
fadds
mov
mov
test
sbb
pushf
fcomps
fadds
insb
adc
jl
add
je
jo
dec
fadds
dec
mov
inc
fcomps
xlat
or
out
test
or
sbbb
add
out
add
adc
jmp
int
filds
movsl
fiadds
mov
inc
fidivs
ficoms
fiadds
cld
frstor
fldl
sub
fcomp
cwtl
fsubl
faddl
sub
cmp
faddl
adc
mov
popa
and
fidivrl
pop
xor
fiaddl
stos
flds
fadds
push
fsubr
xor
xlat
adc
leave
sub
ljmp
aam
aam
aam
aam
sti
rcl
sarl
add
rcrl
shll
sbb
hlt
rcl
lock
adc
push
rcrb
shlb
cld
rol
rol
xor
nop
insl
xchg
rorb
ds
sbbb
add
out
add
mov
add
fists
cmp
fiadds
mov
sbb
fimuls
and
jle
movsb
faddl
lret
fcmovnu
fstpt
dec
fldt
push
jo
or
jle
jo
movsl
fisubrl
mov
imul
rcrb
in
fabs
fsqrt
fldcw
push
mov
and
pop
fcoms
cmp
xlat
add
mov
mov
test
pushf
xchg
add
jge
add
or
add
sbb
adc
jmp
call
stc
aad
aad
aad
lock
nop
sub
lcall
aam
pop
aam
sarl
or
rorb
loop
adc
rcl
mov
fs
and
adc
fists
jae
in
ffreep
nop
jp
fildll
fbstp
push
xor
fidivs
fisubrs
les
sbb
fldl
add
shl
outsl
fsubrl
dec
add
inc
fsubl
faddl
fcompl
add
xchg
jno
dec
add
and
rcr
sahf
fidivl
add
out
mov
fstps
jns
push
out
aad
aam
aam
aam
add
push
test
sub
and
aam
aam
aam
shl
add
ret
push
jae
shll
lcall
inc
inc
rcrl
and
or
sbb
add
rorb
pop
rorb
add
mov
mov
jge
rclb
or
jb
subb
fdivrp
fdivp
xor
test
mov
ficomps
inc
ficoms
lock
fimuls
push
ficomps
adc
adc
jmp
fldl
fstpl
fnstsw
frstor
fnsave
xor
popf
fdivrl
rclb
fdiv
fcmovne
fcmovne
adc
rcrb
frstpm(287
sbb
fiaddl
mov
add
push
fstpl
fistl
xchg
and
add
in
cld
add
scas
xlat
pop
xlat
or
in
add
dec
aad
aam
aam
add
xor
rolb
adc
and
xchg
add
push
test
add
ret
push
fcos
fdivrs
xor
jo
xlat
addb
xlat
add
ret
xchg
outsl
pop
sub
cmp
jmp
xlat
jo
pop
aad
add
fcmovnbe
mov
push
rorl
adc
mov
jecxz
nop
sbb
jo
adc
jle
mov
add
or
fistpll
fiadds
sti
fldl
fucomp
shrb
fsubr
fcmovnb
fstpt
daa
fcomi
lock
xor
cld
add
iret
push
gs
add
rcll
shrl
addb
rclb
out
dec
add
out
loope
add
push
cmp
sub
and
in
nop
mov
fisubs
fiadds
xor
or
loope
lret
fldl
mov
sahf
nop
jle
jns
icebp
mov
fmul
jo
mov
fistpl
xlat
les
xor
push
in
aad
add
leave
aad
aad
aad
add
fs
aad
aad
adc
adc
mov
addl
aam
aam
xor
aam
shlb
shll
rcrl
xor
mov
out
shl
shl
rclb
lahf
rcrb
ja
mov
mov
rolb
add
shl
shl
rcr
rcr
add
mov
cwtl
shll
jno
roll
mov
add
in
iret
fst
mov
sub
cmp
add
add
lret
xor
inc
fildll
add
sbb
fbld
jns
fisttps
nop
test
ficomps
adcl
xchg
fnsave
repnz
ret
fmull
das
and
cmp
into
fcmovnu
add
mov
lea
xchg
xchg
fisubl
pop
pop
inc
push
mov
fxch
jo
mov
fldcw
lcall
pushf
fsubs
add
fdivrs
fsubr
fcom
xlat
add
xlat
adc
cmc
stos
add
dec
add
xor
sbb
sti
aad
ret
aad
aad
aad
mov
aad
aad
push
aad
aad
aad
aad
call
aam
aam
mov
push
jl
inc
aam
and
ss
aam
roll
int
xlat
shll
outsb
rorl
shrl
roll
push
rcrl
shl
rcr
rolb
scas
sarb
rolb
jnp
je
dec
rolb
inc
rcrb
push
shlb
rolb
jmp
cli
sarl
dec
rcrl
sbb
out
add
shlb
rolb
push
shlb
add
add
xchg
add
jmp
jbe
add
aas
fisubs
mov
sahf
ficomps
inc
ficoms
fiadds
daa
fisubs
fidivrs
xor
or
add
sbb
adc
jmp
out
add
fldl
fstp
fst
popf
fstpl
jnp
dec
fstpl
push
fldl
sub
cmp
or
pop
fldl
sbb
adc
in
faddl
movsl
fdivrl
faddl
outsl
fmull
fdivrl
adc
jmp
into
fildl
enter
xlat
fstpt
test
lahf
fistpl
insb
dec
fildl
aas
fistl
neg
add
fidivl
fiaddl
cltd
ficoml
fiaddl
sub
or
add
sbb
add
out
fsin
flds
iret
fxch
fld
flds
stos
fnstenv
flds
sbb
fnstenv
inc
flds
push
fldcw
flds
add
fadds
fdivrs
dec
fadds
cmp
xor
call
repz
rcl
xlat
popf
xlat
add
xlat
ja
add
push
xlat
cmp
aaa
xlat
add
xlat
sbb
not
ret
mov
popf
jae
add
aad
aad
aad
aad
xor
jb
cmp
hlt
roll
lret
rorl
mov
jge
push
shlb
add
rolb
sbb
adc
add
sar
rol
rcr
roll
insl
sarl
ror
rolb
pushf
shlb
rorb
rcrb
rolb
adc
add
add
add
arpl
fisttps
fbstp
add
sbb
movsl
fimuls
xchg
ficoms
fiadds
ss
fsubp
fldl
ret
frstor
pusha
fldl
dec
fstpl
push
fisttpll
fldl
icebp
fadd
fcompl
jle
dec
fcompl
or
fsub
fildl
fstp
mov
fildl
fimull
fiaddl
and
adc
mov
xlat
add
aam
rorl
nop
rolb
rcl
mov
and
jne
and
das
out
add
add
fists
add
fbld
fistpll
or
add
fistps
fists
lock
sub
jbe
fdivl
dec
fsubr
fdivrs
push
add
aad
aad
aad
aam
mov
shll
cmp
rcr
rolb
out
add
rclb
sbb
sbb
fidivs
lods
faddl
mov
lcall
adc
inc
fldt
ficompl
pop
ficoml
add
fisubrl
fisubl
fiaddl
and
fidivrl
fidivl
fiaddl
xor
push
fimull
fiaddl
fiaddl
add
push
ficompl
ficoml
fisubrl
adc
ja
inc
js
sarb
and
fptan
fxch
inc
jp
flds
ret
flds
rcr
scas
fldcw
mov
fnstenv
sahf
flds
lcall
flds
push
fldenvs
jle
add
jbe
jb
dec
flds
dec
rolb
fadds
pop
fcomps
xlat
or
add
imul
jb
add
push
sbb
arpl
and
pop
aad
inc
jnp
aad
int3
aam
aam
aam
aam
sub
and
add
push
aam
shl
ror
rorl
fcmovnbe
aam
xorb
shll
jle
dec
roll
inc
rcrl
push
shrl
roll
sbb
jecxz
lock
lret
rcr
rcl
rolb
lods
shlb
rolb
xchg
sahf
shl
shl
roll
not
lock
roll
rolb
dec
shlb
rolb
pmaxsw
or
loopne
inc
mov
fisubs
sub
fcmovu
dec
loopne
add
and
fdiv
fcmovnb
pusha
arpl
dec
fistpl
fucomi
fisubl
rcr
fidivrl
daa
push
fimull
xor
adc
fadds
in
xlat
xlat
and
adc
add
jmp
or
stc
and
add
fst
add
aad
mov
sahf
add
dec
and
sbb
add
aad
aad
aad
aad
mov
aad
aad
push
aad
mov
and
rcl
sarl
xor
loopne
cli
pusha
sbb
rcl
shrb
jns
pop
shr
ror
roll
cltd
rcll
roll
in
leave
rcrb
sbb
add
out
add
fisttps
fisttps
xchg
and
add
pop
faddl
imul
add
and
fcmovu
ficoml
ja
flds
jecxz
cmp
flds
arpl
xlat
pop
xlat
call
arpl
push
sahf
aam
jmp
icebp
loopne
mov
mov
shl
loopne
mov
fs
invd
lods
shll
rorl
jae
cltd
cmpsb
loope
add
add
add
push
repz
filds
push
faddl
fsubrl
jp
fildl
add
sub
sub
and
cmp
fistl
add
enter
add
mov
pushf
ficompl
inc
fxch
fldenv
pusha
xchg
fdivrs
jo
push
add
or
scas
xlat
mov
sahf
mov
xchg
add
inc
arpl
dec
sub
cmp
std
aad
aad
aad
add
inc
pusha
inc
add
in
roll
aam
aam
aam
aam
add
or
pop
aam
aam
add
loopne
cld
shl
ror
add
rcl
rcrl
push
rorl
mov
rcrl
rcl
add
mov
mov
adc
rclb
sub
cmp
shlb
rorb
pusha
mov
sub
rcl
shll
mov
rcrl
shl
rolb
add
in
loop
cli
fisttps
outsb
pusha
sub
pusha
lods
sub
push
fnstsw
paddusb
leave
loopne
cmp
fcmovnb
fidivl
inc
fiaddl
fnstcw
ltr
leave
fadds
jnp
dec
adc
jmp
push
rolb
aad
aad
aad
aad
push
aam
aam
mov
insb
add
shlb
shll
rcll
add
mov
rclb
and
sub
in
add
sub
filds
rcr
cmpsb
filds
xor
add
ficomps
or
fstl
cmp
cli
fdivrl
data16
push
faddl
call
subb
andl
fisttpl
frstpm(287
fiaddl
cld
fcmove
fcmovb
fimull
rcr
mov
push
adc
std
flds
test
mov
test
dec
flds
push
fldcw
fldenv
fnstenv
flds
push
fmul
fdivrs
add
fmuls
fdivr
mov
add
lret
aad
aad
cltd
aad
aad
aad
aam
shl
rorb
lods
rorl
roll
adc
mov
add
movsl
and
and
pop
fidivrs
pusha
test
frstor
fnstsw
mov
xchg
fsubl
sahf
fistpl
mov
fiaddl
fnstenv
insl
xlat
inc
inc
xlat
cld
and
or
push
pusha
jmp
add
rcl
rclb
loopne
lret
pusha
lcall
rorb
loopne
pusha
fwait
add
shlb
cmpsl
cmpsb
fbld
mov
mov
mov
fistps
and
pusha
fistpll
je
fisttps
adc
pop
fistps
push
push
fildll
push
push
and
jbe
nop
pop
xor
adc
push
filds
fistps
pop
add
adc
in
fsubrp
fsubp
add
fdivrp
fdivp
fmulp
add
lret
faddp
add
fisubrs
fidivrs
add
mov
test
lahf
ficomps
nop
fisubrs
data16
popa
xor
fidivs
dec
rcr
fiadds
pop
xor
sarl
sub
and
mov
pusha
xor
or
pop
push
sbb
jnp
inc
fsubrp
fucomp
fucom
xor
add
cmc
ffree
adc
rcr
rcrb
mov
inc
fnsave
jl
add
xchg
frstor
popa
fnstsw
fnsave
jl
fstpl
pop
add
push
fisttpll
adc
jnp
fdivl
fcoml
ds
aaa
fimull
add
and
std
fmuls
xchg
fsubrs
jge
dec
add
adc
ljmp
xor
pop
xlat
sbb
repnz
ss
aam
add
icebp
rol
shll
cmp
stos
jo
shll
rcl
icebp
es
sbb
iret
ffreep
fistps
push
fiadds
sub
push
xchg
fnsave
frstor
outsl
test
sbb
inc
fistl
sbb
call
mov
pop
add
ds
fs
aam
add
mov
rcl
add
and
ja
rolb
in
add
xorl
cltd
fcomip
fidivrs
fidivs
ficomps
loopne
repz
stos
faddl
faddl
fstpt
fidivl
inc
ficoml
fidivrl
pop
adc
sub
or
xchg
fcomps
and
xlat
lock
rcl
push
push
mov
aad
aad
aam
adc
aam
push
pusha
mov
insb
add
pop
rcl
sarb
rorb
test
xchg
icebp
sub
push
and
fmulp
xor
pop
fiadds
fstp
jno
mov
adc
cmc
fcmove
fisubl
pop
ficompl
loope
add
xlat
insb
xlat
test
insb
aad
jl
add
cmp
aam
aam
push
push
sub
add
in
add
mov
movsb
fisttpl
xor
nop
adc
dec
add
xlat
test
xlat
add
dec
xlat
pop
xlat
and
cmpb
adc
les
or
pop
sub
add
aad
aad
hlt
aad
aad
aad
aad
cmp
add
aam
lods
aam
aam
adc
aam
aam
shrl
cwtl
mov
and
out
shll
out
nop
pop
xchg
adcb
roll
mov
and
rolb
loope
aad
push
add
add
or
filds
loop
clc
filds
ja
xchg
or
add
adc
xor
mov
adc
fsubrl
xchg
xlat
outsb
xlat
lock
and
and
div
xchg
add
or
add
add
jmp
std
shl
shl
lock
fcmovnbe
aam
lods
shlb
mov
mov
adc
cltd
rclb
rolb
jo
inc
rcrb
push
rorb
sub
and
add
adc
fisubrs
add
push
rcr
jne
repz
fadd
add
rcr
scas
fsubl
mov
mov
adc
cmpsl
arpl
jg
mov
inc
add
pop
fcoml
das
fsubl
or
aas
faddl
and
pusha
add
fsubrl
mov
xchg
imul
fmull
jo
sub
or
sbb
stos
sti
add
lret
fcmovnu
fldt
mov
fldt
jnp
nop
pop
fldt
fstpt
fisttpl
inc
fistpl
fucomi
adc
adc
stos
fidivrl
imul
jp
ficompl
sub
cmp
jo
jmp
sti
xor
add
fstps
jnp
dec
fstps
sub
cmp
add
pop
add
sbb
pop
fsts
flds
add
jmp
out
jecxz
incl
fdivr
fdiv
fdiv
fmul
add
lret
shrb
ret
fcomp
fcomp
add
xlat
fcom
fsubrs
mov
fmuls
fadds
sbb
fcoms
or
das
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
mov
add
add
mov
or
clc
std
aad
xchg
and
xor
in
jae
cmpsb
pop
or
xchg
jge
xchg
movsb
pushf
add
adc
sbb
sarl
xor
mov
pop
mov
add
rolb
fistl
cmp
data16
adc
mov
cmp
add
push
loope
adc
repz
fdivrl
jae
mov
mov
xor
imul
daa
sbbb
push
ds
in
ss
and
inc
mov
mov
daa
add
fcomps
ss
adc
sub
arpl
push
mov
addl
sbb
or
add
pusha
mov
sbb
jns
cmp
pop
leave
cmp
rclb
int
arpl
and
imul
adc
jge
push
add
push
inc
xchg
add
sbb
hlt
pop
ret
add
int
add
add
mov
mov
repz
add
add
imul
jo
jmp
cmp
fsubrs
add
imul
and
add
jb
or
cmp
mov
mov
jae
into
mov
loopne
aam
mov
inc
xchg
inc
inc
mov
fstps
dec
add
sub
xor
add
repz
inc
daa
shll
jae
jg
jae
fstl
incb
mov
add
jg
or
sbb
addb
jo
jns
cmp
add
jl
xchg
cwtl
add
mov
sub
lcall
mov
rorl
mov
scas
add
ja
add
insl
je
xor
jae
add
inc
sti
incl
mov
fdivrs
add
xor
xchg
in
add
add
xor
jns
scas
subl
jnp
cmp
add
adc
sti
pusha
pusha
fstpl
jmp
cmpsl
mov
pushf
add
jmp
cltd
nop
add
mov
arpl
jge
and
cmp
cmpsb
add
jmp
inc
mov
loopne
das
xchg
pop
subb
shll
daa
add
push
xchg
stos
inc
fcompl
mov
inc
and
verr
mov
cld
add
mov
push
inc
stc
add
bound
loop
lock
ret
ret
cs
adc
je
adc
sbb
xchg
xchg
fldl
push
test
iret
pushf
in
lock
clc
idivl
lcall
mov
mov
and
xchg
sub
mov
test
lods
cmp
push
add
enter
gs
sub
push
mov
mov
push
pop
outsl
cmp
sbb
adc
pushf
pop
outsb
push
dec
inc
cld
jmp
imul
roll
xor
fldenv
push
test
dec
in
pusha
aaa
mov
fnstcw
pop
inc
mov
addr16
mov
lret
and
adc
movsl
in
push
xorw
mov
jns
or
mov
jl
cmp
mov
imul
cld
ds
push
outsb
dec
mov
jp
repz
sbb
sub
sub
loopne
jmp
addr16
sub
sbb
lods
scas
add
or
jns
mov
je
shlb
icebp
mov
mov
adc
gs
aad
push
fldlg2
pop
mov
fstps
arpl
cmc
fs
setne
ret
dec
pop
jge
test
scas
gs
lock
jb
sbb
push
fisubl
mov
push
lods
enter
nop
setl
xor
ljmp
and
mov
hlt
lahf
sbb
stc
xchg
sbb
ljmp
loopne
mov
popa
or
mov
xchg
and
mov
in
cwtl
ficoml
sbbb
popa
cmp
addr16
push
repnz
adc
ficoml
add
popa
xchg
and
outsb
andl
ljmp
xlat
adcl
add
add
add
add
mov
add
push
mov
dec
add
add
add
dec
add
dec
add
add
add
dec
add
dec
add
add
add
dec
add
dec
add
add
add
mov
dec
add
mov
dec
add
add
add
mov
add
repnz
add
push
mov
add
sbb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
jo
je
imul
outsl
insb
gs
cs
insb
add
jae
je
insb
jae
fs
insb
add
popa
jb
fs
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
insl
insl
outsl
outsb
push
jb
jo
jb
jns
push
dec
push
add
dec
insb
gs
dec
inc
push
push
outsl
jne
arpl
add
push
gs
je
insb
push
je
jo
gs
imul
je
jo
outsb
inc
popa
jb
dec
popa
insl
gs
