push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
lea
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
add
cmp
je
add
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
stos
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jmp
ret
std
sub
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
mov
popf
push
decl
ret
add
pop
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
sahf
and
add
add
in
add
xor
add
in
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
add
sbb
add
add
add
pop
and
add
add
or
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
add
add
and
add
add
inc
and
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
add
pop
and
add
add
add
add
add
add
nop
and
add
add
add
add
sahf
and
add
add
sahf
and
add
add
in
add
xor
add
in
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
add
sbb
add
add
add
pop
and
add
add
or
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
add
add
and
add
add
inc
and
add
add
add
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
fs
imul
add
add
gs
outsl
jbe
inc
imul
jns
add
addl
jb
popa
je
inc
imul
jns
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
repnz
imul
jb
je
arpl
add
call
inc
imul
bound
gs
add
rolb
insb
outsl
bound
inc
insb
popa
addr16
movsl
add
je
gs
imul
data16
je
je
dec
popa
outsb
fs
add
roll
dec
gs
jo
jb
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
insb
outsl
jae
dec
popa
outsb
fs
add
inc
imul
insl
gs
insb
outsl
jae
add
add
imul
outsb
je
outsl
insb
add
inc
gs
je
imul
inc
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
inc
jne
jb
outsb
je
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
ret
add
inc
jb
add
sbb
insb
imul
outsl
outsb
add
add
push
outsb
jb
imul
jb
gs
mov
push
push
gs
popa
addr16
outsl
js
add
lods
add
gs
insb
inc
bound
je
add
add
addr16
imul
and
inc
js
jb
arpl
outsl
outsb
inc
add
mov
push
dec
inc
gs
gs
imul
inc
jb
addr16
arpl
jo
inc
imul
insb
insb
push
outsb
jb
imul
jb
gs
mov
inc
push
add
addr16
jne
jb
inc
imul
inc
dec
dec
xor
cs
insb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
xor
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
ss
xor
fcompl
popf
push
jl
fiadds
push
mov
jg
movsl
lock
inc
pop
dec
xchg
cltd
cmpsb
jbe
fisubrs
jg
in
lods
lahf
sbb
ljmp
dec
xor
rcrb
lock
xor
loope
sti
je
rol
idivb
das
out
js
mov
jb
cmp
scas
sub
xchg
ds
sub
mov
jbe,pn
pop
sub
mov
inc
cmc
xor
fucom
test
add
or
inc
mov
sub
mov
iret
jno
lods
movsl
mov
adc
loop
pop
and
xor
lret
cmpsl
xor
xchg
mov
and
cmpsl
out
ss
out
leave
pslld
dec
or
push
subb
sub
and
stos
adc
mov
roll
test
adc
cmpsb
repz
movsb
adc
pop
mov
imul
addr16
loop
loopne
dec
inc
push
cmp
xor
and
out
and
pop
sbb
adc
inc
loop
aam
loope
xor
sub
mov
movsl
push
loopne
push
jns
std
aaa
xlat
xchg
aad
xchg
inc
aas
dec
xor
lods
mov
xor
xchg
hlt
roll
jno
xchg
jg
pop
das
out
out
cmc
cld
pop
xlat
into
mov
xor
test
cltd
mov
daa
daa
int
xor
mov
inc
dec
aad
xchg
mov
pop
inc
push
or
stos
mov
lahf
mov
push
notb
push
les
mov
insb
js
mov
dec
gs
bound
adc
out
xor
shlb
add
outsl
out
pop
cwtl
sbb
popf
loopne
lea
mov
xchg
xor
repnz
ds
xor
rolb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jp
jnp
lods
lods
stos
add
test
push
mov
mov
mov
lret
lret
int
rcl
in
rcl
shl
rcl
iret
hlt
into
into
int3
hlt
leave
enter
enter
in
mov
mov
stos
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
leave
leave
not
rcl
cld
fcomp
std
fcom
fdivr
aad
dec
rcl
dec
int3
int3
aam
aam
ror
sar
ret
ret
ret
mov
mov
iret
movsl
movsb
movsb
xchg
mov
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
sbb
mov
jnp
mov
sar
mov
lret
call
ror
aad
fcom
call
xlat
call
aad
dec
int
dec
int
call
aad
dec
int
inc
rol
mov
mov
scas
std
test
cmpsl
ljmp
push
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
dec
add
pop
add
push
or
inc
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
enter
int
rcl
sar
fcomp
call
fcom
call
aam
into
into
int3
dec
lret
leave
dec
int
inc
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
push
push
imul
pop
fs
sbb
movntps
sbb
xor
ss
aaa
cmp
and
adc
pop
pop
pop
add
add
add
add
gs
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
inc
leave
call
rcl
call
aad
aam
call
iret
sar
leave
leave
leave
inc
ret
mov
mov
scas
scas
scas
jmp
pushf
cwtl
cwtl
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jg
jge
jb
jo
popa
arpl
push
push
push
xchg
cmp
inc
inc
mov
jo
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsl
movsl
add
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
lret
leave
enter
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
lahf
cmp
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsl
add
pop
or
jnp
xchg
mov
xchg
xchg
xchg
incb
jl
idivb
jmp
jo
out
data16
data16
jae
jle
jge
jns
jns
arpl
inc
inc
inc
cmp
pop
sbb
adc
adc
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsl
lcall
nop
incl
test
xchg
xchg
xchg
sahf
lahf
mov
ficomps
jle
jns
pop
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
incl
xchg
std
mov
jle
jb
jb
jne
je
jle
jge
addb
push
cmp
ss
jg
cmp
mov
stos
test
sti
lods
stos
stos
lods
lods
lods
test
mov
lcall
xchg
js
js
jnp
jp
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
lods
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
pop
push
push
push
or
dec
insl
imul
xchg
lcall
out
lcall
std
mov
mov
mov
mov
mov
cltd
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
test
call
cltd
xchg
xchg
incl
test
decb
xchg
xchg
sahf
pushf
sahf
std
mov
mov
xchg
in
xchg
xchg
xchg
in
xchg
jne
push
push
dec
add
add
or
or
sub
push
dec
dec
dec
outsw
jo
test
xchg
xchg
rclb
xchg
xchg
std
lea
call
sahf
sahf
jmp
cmpsl
lods
pushl
cmpsb
scas
mov
xchg
test
roll
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
popf
xchg
pushf
decl
mov
xchg
nop
decl
xchg
xchg
sahf
sahf
pushf
mov
test
movsl
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
bound
jae
mov
jle
addl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
lahf
pushl
insb
xchg
mov
dec
xchg
mov
sub
mov
movsb
mov
mov
mov
stos
lods
lods
mov
movsb
mov
add
pop
pop
adc
mov
ljmp
pushf
decl
call
xchg
xchg
call
xchg
xchg
lcall
lahf
sahf
lahf
mov
movsl
movsl
stc
cltd
cwtl
lcall
nop
xchg
les
xchg
cltd
in
xchg
xchg
out
lea
nop
stc
xchg
test
std
xchg
je
lcall
jmp
jge
mov
jnp
mov
je
mov
outsl
ljmp
adc
lods
or
stos
or
mov
jge
mov
mov
stos
pushf
movsb
movsl
movsl
and
add
shll
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
sahf
lcall
sahf
popf
lcall
xchg
xchg
decl
xchg
xchg
call
xchg
cltd
cld
xchg
cltd
pushf
stc
lahf
lcall
popf
mov
xchg
push
xchg
pop
jle
xchg
dec
js
fwait
je,pt
fwait
sub
popf
pop
push
jmp
adc
adc
stos
adc
stos
adc
scas
adc
mov
push
mov
imul
mov
lcall
scas
lods
lods
scas
movsl
movsb
movsb
sub
movsb
movsl
movsb
add
pop
pop
adc
mov
ljmp
pushf
call
popf
jmp
movsb
mov
jmp
cwtl
xchg
decl
mov
decl
mov
fwait
jb
lcall
call
cs
push
call
or
add
call
pop
lcall
adc
lods
sbb
mov
outsl
pushl
push
jo
mov
and
mov
and
inc
test
ret
mov
scas
scas
mov
sahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsl
movsl
jmp
cmpsb
cmpsl
ljmp
cmpsl
test
pushf
lcall
mov
decl
cmp
mov
arpl
mov
pop
incl
add
push
decl
add
nop
add
xchg
add
lcall
ljmp
pop
jo
mov
jbe
mov
sub
shrl
ret
inc
sub
cmp
xor
leave
inc
mov
leave
scas
inc
mov
mov
movsl
movsb
movsb
dec
mov
mov
add
add
add
lods
mov
push
adc
test
mov
lahf
cltd
popf
jmp
test
ljmp
stos
stos
pushl
scas
scas
jmp
jno
incl
push
push
incl
pop
push
incl
add
addl
incl
add
add
xchg
add
xchg
add
fwait
add
mov
add
scas
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
test
mov
mov
mov
test
ljmp
mov
pushl
mov
pushl
stos
lods
lcall
es
incl
adc
mov
push
decl
or
xchg
incl
add
add
xchg
add
sahf
add
mov
add
stos
add
sbb
ret
cmp
int3
inc
call
inc
call
inc
nop
call
dec
xchg
fmuls
fisttpll
fsts
call
xchg
std
mov
mov
movsl
movsl
mov
or
add
add
add
add
dec
inc
adc
jl
lahf
mov
lcall
test
pushl
mov
mov
mov
mov
mov
mov
scas
mov
movsl
xchg
decl
sbb
nop
pop
popa
decl
adc
mov
push
decl
add
xchg
add
popf
add
mov
add
stos
add
mov
fs
mov
dec
call
push
xchg
call
push
cltd
fsts
fstl
fistps
fists
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
cmpsl
cmpsb
cmpsl
jne
mov
mov
add
add
add
inc
inc
adc
js
mov
movsb
cmpsb
lcall
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
and
and
xchg
and
call
sbb
or
decl
add
lcall
jmp
add
mov
data16
mov
xor
fldenv
fisubs
fisubs
jecxz
test
in
test
out
cmpsl
call
data16
ljmp
dec
mov
mov
mov
sahf
mov
add
add
add
inc
inc
adc
je
fwait
xchg
cltd
call
sahf
pushf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
call
sbb
pop
call
add
mov
add
stos
add
mov
pushl
call
inc
frstor
jmp
outsb
lods
jmp
outsl
stos
call
je
jmp
mov
in
jae
out
jne
in
jbe
out
jb
jmp
mov
mov
test
lcall
sahf
add
add
aas
adc
insl
js
mov
lcall
mov
pushl
mov
mov
mov
mov
lods
lcall
xor
sahf
cmp
mov
xor
cltd
push
callw
add
sahf
add
movsb
add
test
add
mov
data16
mov
sbb
ficoml
jmp
ja
call
jle
in
xorl
push
test
hlt
cmpl
mov
inc
mov
test
pushf
popf
popf
daa
mov
sahf
sahf
add
add
add
pusha
add
ss
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
ret
mov
mov
sahf
outsb
mov
fwait
cmp
movsl
inc
jle
movsl
inc
jle
movsl
ss
lcall
lcall
add
stos
add
lods
add
add
mov
add
iret
and
movsb
jmp
mov
lock
mov
push
pop
push
xchg
xchg
ret
push
xchg
push
ret
in
nop
sar
mov
inc
ret
stos
lods
test
xor
pushf
pushf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
mov
inc
ret
inc
mov
jle
lcall
jg
lods
dec
test
movsl
xor
lcall
add
mov
add
stos
add
mov
arpl
mov
add
enter
xlat
xor
in
xchg
ret
push
lcall
repnz
negb
lret
lahf
into
cli
popf
into
cli
lcall
loopne
int3
inc
mov
mov
lahf
lahf
sahf
aas
xchg
xchg
add
add
add
ss
or
cmp
outsb
dec
dec
dec
jecxz
pop
popa
call
mov
mov
mov
sar
ret
mov
inc
mov
mov
ljmp
push
xchg
movsl
sub
cltd
push
pop
lcall
add
lods
add
mov
arpl
mov
add
movl
jne
fiadds
in
lea
push
movsl
into
push
movsb
int
stc
cmpsl
iret
sti
cmpsl
sar
cld
movsl
iret
cld
cmpsl
into
test
sar
cmpsl
iret
push
lahf
jmp
mov
dec
enter
mov
into
mov
xchg
xchg
add
cltd
fwait
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
je
jo
mov
mov
mov
ret
ret
inc
leave
mov
pushl
push
test
scas
push
mov
scas
dec
test
sahf
sbb
lcall
add
lods
add
mov
mov
add
into
add
xlat
add
ficoms
jge
in
pop
cmpsl
push
sahf
lret
scas
sar
sti
mov
cld
mov
cld
scas
sar
std
mov
cld
mov
mov
std
mov
pushl
sar
mull
dec
leave
int
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
ss
outsb
mov
mov
aad
fsubr
fdiv
rcl
sar
lret
dec
lret
lret
dec
lret
lret
enter
mov
mov
scas
push
mov
lods
cmp
jmp
add
lods
add
mov
arpl
mov
add
rolb
outsb
call
add
fiadds
jae
jmp
jno
cli
lods
aam
std
mov
fcos
cld
mov
fdivr
std
mov
fdivr
mov
xlat
std
rcr
mov
int3
jmp
mov
call
lret
mov
lahf
mov
or
add
add
xor
add
add
or
leave
movl
call
out
loope
jecxz
fstp
fucom
fcmovnu
fcomi
fcomp
fdivr
std
int
iret
mov
push
ljmp
sub
mov
add
mov
mov
add
leave
add
aad
jb
fildl
jbe
in
jbe
in
xor
cld
mov
loope
inc
std
std
fdivrp
dec
loopne
std
dec
inc
dec
loope
cli
mov
lret
lret
sar
mov
mov
xchg
adc
add
add
std
add
std
std
add
incb
repz
hlt
or
out
in
pop
in
out
in
sub
out
in
dec
call
call
out
jecxz
out
fucomp
ret
stc
lods
jno
cmpsb
cmp
movsl
push
jmpw
add
mov
mov
add
into
add
fadds
je
fiadds
js
call
inc
popf
cld
mov
in
dec
jecxz
dec
out
std
int
dec
jecxz
std
into
loop
std
int
dec
jecxz
call
in
shl
shl
sti
fcos
out
mov
inc
ret
test
cmpsl
mov
xchg
xchg
add
add
add
std
add
incb
idiv
clc
add
repz
add
hlt
icebp
push
in
repnz
pop
in
icebp
icebp
cmp
out
in
pop
fsubp
loop
lds
xchg
sti
sahf
es
mov
add
mov
gs
add
movl
jo
flds
jne
in
jns
jmp
jle
negb
sti
mov
cld
shl
shl
shr
std
shr
shl
std
aad
fsubr
call
jmp
fld1
fld1
std
iret
loopne
hlt
ret
jmp
rcr
dec
lret
test
xchg
xchg
and
xchg
cwtl
add
std
sti
add
clc
add
cli
cli
add
cmc
repz
aam
sarl
negb
add
add
lods
add
mov
add
lret
add
roll
jno
faddl
ja
call
sbb
cli
fdivrp
std
fsubr
fucomi
fldl2t
std
fsubr
std
fucomi
fucomi
fucomip
fsubrp
fsubrp
std
shl
push
ret
jmp
aad
dec
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
outsb
add
add
add
loop
add
mov
xchg
repnz
ljmp
add
mov
add
int3
add
add
loopne
jae
jmp
sub
shl
fucomip
std
fucomp
fldl2t
fucomi
xlat
call
cld
shl
cld
iret
loopne
cld
iret
loope
stc
iret
fdivrp
test
out
mov
fcos
xlat
fdivr
mov
mov
cltd
fwait
cltd
cmp
lcall
add
add
add
mov
subb
imul
add
ljmp
add
add
lds
push
iret
add
xlat
add
loopne
jns
ljmp
cld
xchg
cli
leave
loopne
cld
lret
loop
cld
fdivrp
idivl
aam
hlt
mov
iret
push
mov
int
call
mov
sar
call
vmaskmovdqu
fnclex
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
int3
int3
add
mov
movsl
loopne
ss
mov
add
mov
data16
mov
add
dec
push
jo
rorb
jmp
sbb
call
scas
int3
call
scas
leave
std
loopne
cld
fildll
mov
enter
int
into
iret
xlat
shl
xlat
fcmovnb
out
loope
in
in
test
out
out
popf
jmp
leave
lret
push
stos
lods
lods
adc
test
cmpsb
add
ret
mov
lahf
stos
aam
dec
jg
sahf
sbb
cmpsl
push
push
lods
and
jns
mov
inc
test
ret
push
mov
leave
arpl
hlt
rorb
mov
mov
enter
lret
rcl
int3
mov
iret
shlb
xlat
rcl
jg
fcmovu
jb
gs
in
call
out
jmp
repnz
sub
div
and
icebp
icebp
sbb
fcmovnu
or
mov
int3
add
add
add
sarl
mov
xchg
stos
jbe
ljmp
mov
sarb
test
mov
mov
cmpsl
enter
lret
mov
enter
into
into
addr16
ror
push
iret
rcl
dec
fcom
inc
rcl
aad
aam
fldenv
fcomp
fistpl
fcmovu
ficoms
fsubp
loope
loope
jecxz
call
icebp
in
add
cld
testl
incb
std
incb
mov
mov
mov
mov
stos
scas
xchg
mov
mov
mov
mov
ret
mov
ret
xor
int3
lret
rcl
and
aad
sbb
aad
adc
aam
or
xlat
push
rcr
fadds
fcmovnu
add
add
in
add
in
jmp
leave
xlat
add
incl
mov
mov
add
ret
mov
mov
mov
mov
push
rol
or
mov
add
int3
leave
add
aam
add
xlat
add
xlat
add
add
aad
add
fsub
add
fildl
fsubp
loopne
fstp
loopne
in
out
icebp
repnz
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
mov
mov
mov
ja
stos
test
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
ror
into
jmp
aam
cmc
aam
sar
iret
into
iret
cli
int3
int3
int
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
cmpb
inc
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
enter
iret
iret
into
aad
call
xlat
dec
iret
sar
into
int
dec
lret
mov
mov
cld
lods
stos
lods
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jae
jae
data16
dec
inc
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
aam
aam
lret
lret
inc
sarl
test
lahf
sahf
xchg
xchg
xchg
jmp
outsl
jno
pop
push
adc
xor
add
add
add
add
jg
jg
jnp
jp
test
jns
imul
movsb
push
push
push
stos
push
imul
cmp
cmp
outsl
jo
adc
mov
mov
sar
mov
mov
mov
jmp
pushf
lcall
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
fwait
cltd
add
pushf
xchg
cwtl
fcoml
addb
jnp
jge
js
js
jns
jp
jns
jp
jae
jae
push
push
push
cmp
aaa
pushf
sahf
popf
mov
lods
lods
rep
scas
scas
sti
scas
lods
scas
std
test
cmpsl
std
pushf
popf
pushf
call
xchg
call
mov
scas
jmp
lods
lods
leave
cmpsb
cmpsb
movsb
cltd
je
je
adc
adc
add
add
add
add
outsb
outsl
outsb
pop
stos
movsl
stos
loop
cwtl
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
outsl
orl
lcall
mov
call
lahf
ljmp
scas
std
mov
scas
mov
mov
mov
movsl
mov
addl
add
add
pusha
pusha
pusha
or
lods
mov
movsl
lahf
mov
decl
mov
xchg
xchg
cwtl
std
sahf
popf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insb
outsl
outsb
xchg
subl
nop
xchg
lock
mov
lcall
mov
mov
xchg
mov
mov
jnp
mov
scas
stos
insl
test
add
add
add
add
pusha
or
mov
in
mov
xchg
call
xchg
xchg
lcall
lcall
fwait
sahf
popf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
out
xchg
jbe
notb
cmp
dec
jl
movsb
inc
jns
lods
ss
scas
sub
pop
outsb
ljmp
sbb
mov
lods
mov
mov
scas
jle
movsl
movsl
push
pop
pusha
pusha
or
mov
in
movsb
cmpsl
lcall
sahf
sahf
jmp
mov
xchg
decl
addl
xchg
jb
cld
xchg
pop
cmp
dec
jns
cmp
xchg
daa
push
call
or
push
pushl
sbb
mov
and
mov
stos
mov
scas
lods
scas
xchg
sahf
popf
lahf
adc
add
add
pop
pop
popa
or
lods
mov
stos
mov
mov
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
xchg
pop
decl
add
xchg
add
pushf
add
cmpsb
or
je
mov
sub
jle
leave
xor
lret
dec
pop
xchg
inc
stos
mov
mov
mov
cmpsl
test
sbb
add
add
pusha
pusha
pop
or
movsl
test
test
cmpsl
jmp
scas
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
push
push
decl
add
xchg
add
sahf
add
add
mov
insb
inc
ss
inc
mov
rolb
rolb
aad
nop
fiaddl
call
popa
lahf
inc
cmpsl
mov
mov
mov
movsl
movsb
movsb
daa
std
add
add
add
pusha
or
mov
ljmp
mov
pushl
mov
ljmp
push
jge
mov
decl
or
mov
push
call
add
cmpsl
add
lods
add
ja
iret
dec
nop
call
pop
lcall
pop
mov
jmp
pop
mov
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jge
jl
pushf
xchg
lcall
lods
scas
pushl
mov
mov
lcall
cs
sub
call
push
pop
call
add
cmpsl
add
mov
pushl
xor
fsubl
jmp
insb
test
call
jo
in
jb
jmp
test
mov
inc
jg
jg
add
add
dec
dec
dec
pop
outsl
outsl
push
mov
cwtl
pushl
mov
mov
mov
je
lcall
cmp
popf
sub
cwtl
or
lcall
ljmp
gs
or
xchg
jmp
jns
jmp
test
push
xchg
out
xchg
mov
test
push
fwait
fwait
fwait
add
sub
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
ret
mov
pushf
jmp
inc
cmp
sub
lcall
ljmp
add
add
lret
push
ja
loopne
mov
push
xchg
ret
push
cwtl
push
xchg
enter
lret
pushf
lret
push
cwtl
lods
mov
lods
popa
lahf
lahf
mov
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
ret
inc
xchg
test
cmpsl
pop
xchg
lods
dec
cmp
and
add
pop
pushl
add
lret
add
fsubs
cmp
hlt
mov
into
stc
test
cli
test
sar
cld
lods
sar
sti
cmpsb
int3
jmp
mov
inc
mov
stos
jne
pushf
popf
or
add
add
push
push
dec
aaa
jb
jb
stos
stos
stos
ror
int3
int3
out
into
int
lret
sti
leave
leave
enter
mov
pusha
mov
stos
inc
jle
mov
add
mov
arpl
rolb
dec
add
fildl
clc
xchg
std
mov
std
mov
fcos
std
mov
mov
sar
jmp
ret
scas
scas
lods
mov
add
add
add
add
or
aad
dec
loope
loope
fstp
fadd
fcmovnu
xlat
xlat
out
mov
gs
test
jae
movsl
pop
popa
ljmp
add
leave
add
xlat
add
or
repnz
mov
cld
ret
loop
std
loopne
inc
loopne
dec
std
enter
leave
loope
sti
out
mov
lret
divb
popf
popf
sbb
add
add
std
incl
std
std
std
add
jmp
in
sbb
jmp
xor
loopne
loop
lds
mov
mov
add
mov
fs
add
into
add
fildl
jbe
jmp
insb
mov
std
cld
iret
out
std
shl
std
shl
shl
std
xlat
out
std
fsubr
cld
shl
push
fcos
fcmovne
sar
mov
mov
mov
add
add
incb
std
std
add
cld
cld
pop
aad
push
mov
pop
mov
sahf
or
pop
pushl
add
rolb
jno
loopne
ja
in
and
shl
std
fsubr
std
fld1
std
xlat
call
std
xlat
out
xlat
call
push
xlat
jmp
rcl
sti
mov
sahf
lahf
das
add
add
int
into
or
fs
lahf
adc
lods
add
mov
add
roll
jae
loop
jns
out
das
nop
push
lcall
cli
lret
fdivrp
test
repz
repz
aad
lock
sar
in
vpsubw
ljmp
ljmp
test
std
incb
aam
push
mov
je
push
gs
mov
insb
inc
pop
jae
int
jge
xlat
cs
loopne
lcall
mov
out
jecxz
lret
mov
lret
faddp
int3
leave
ffreep
sarl
jecxz
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsl
les
pop
mov
mov
xchg
fidivrl
andb
int
mov
shll
enter
int3
insl
aad
iret
pop
aam
rorl
xlat
fnstcw
fnstsw
fisubrs
jecxz
fsubl
jecxz
repnz
in
in
or
std
incl
std
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
enter
rclb
sarb
or
loopne
or
int
add
std
std
incb
std
std
add
add
add
into
int
rol
or
int
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
leave
leave
enter
mov
ret
sarl
mov
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aam
aam
rcl
sar
iret
int
std
vshufps
mov
cmpsl
roll
pop
add
add
add
add
add
add
add
add
jno
jae
data16
inc
dec
das
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
int3
call
aad
dec
iret
int
enter
mov
scas
lcall
mov
push
add
add
add
add
je
je
test
adc
jo
ret
popa
mov
push
insl
jb
pusha
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cltd
cltd
lds
jno
es
add
add
add
jb
je
fwait
xchg
lcall
test
clc
xchg
or
addb
push
dec
push
inc
mov
fwait
into
movsb
mov
mov
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
popf
pushf
popf
cmc
cltd
lcall
push
push
push
imul
jle
mov
xchg
testl
mov
mov
jno
mov
lods
lods
push
stos
stos
stos
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
fwait
cltd
lcall
fwait
lcall
mov
loope
je
out
xchg
bound
std
lcall
ljmp
and
mov
outsb
pushl
pushf
lods
lock
mov
imul
into
add
test
pop
lods
movsl
lods
test
sahf
popf
popf
jmp
movsb
call
jl
mov
xchg
inc
jb
mov
imul
xchg
adc
xchg
or
mov
sbb
je
mov
daa
jp
lds
xchg
rcrl
subl
jae
push
mov
movsb
test
test
test
scas
mov
pushl
mov
decl
or
xchg
decl
add
mov
adc
shll
int3
ds
iret
inc
mov
aam
mov
aam
xchg
dec
lcall
movsb
mov
add
push
push
xchg
xchg
xchg
test
mov
lods
pushl
mov
movsl
call
sbb
pusha
call
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
popa
movsb
jmp
cmpsw
call
fwait
mov
mov
cmpsb
cmpsl
pop
add
add
arpl
adc
popf
pushf
lcall
mov
mov
lcall
xor
cltd
and
xchg
or
lahf
add
stos
add
mov
xor
jmp
outsl
stos
jmp
ja
in
jp
out
jl
out
jle
fistpl
mov
mov
add
add
adc
imul
mov
mov
mov
rol
mov
arpl
lcall
add
ljmp
add
les
outsb
fisttpl
in
mov
notb
enter
enter
mov
movsb
sub
aas
inc
inc
adc
push
xchg
xchg
cld
rol
inc
ret
ljmp
dec
cmp
sbb
movsl
add
mov
fs
add
adc
ljmp
cli
stos
sar
cld
lods
sar
std
scas
sar
lods
sar
ljmp
fldenv
std
add
jno
inc
scas
mov
mov
aam
mov
fnop
rcl
out
lret
enter
mov
jmp
add
les
imul
call
pop
std
mov
std
rcr
inc
cld
rcr
lock
ret
in
cmpsl
cmpsl
dec
jg
addl
lods
stos
stos
add
in
in
or
call
in
outsb
fcmovu
fisubl
mov
add
mov
add
fiadds
jne
out
aaa
xchg
cld
mov
cld
int
dec
out
call
out
shl
aam
push
rol
int3
in
scas
lods
scas
popa
addl
add
std
incl
std
std
std
push
lret
int
sub
sahf
sbb
lods
add
mov
add
loope
jp
hlt
push
movsl
cld
enter
aad
std
out
std
shl
sti
aad
sti
shl
push
leave
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
add
mov
or
fstpl
cmp
out
mov
shl
jmp
ror
jmp
leave
aad
jmp
scas
vsqrtpd
add
add
mov
lods
xchg
dec
and
push
mov
ret
int3
int3
js
mov
xlat
mov
lret
adc
int3
outsl
fxch
iret
pop
fst
dec
in
loope
out
out
out
out
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
ret
and
ror
fstp
fisttpll
int3
int3
int3
or
aam
push
std
incl
jg
addl
stos
std
incl
mov
incb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
mov
test
ror
mulb
jae
jb
sub
push
data16
xchg
ja
pop
cmp
call
dec
or
xchg
xor
cli
icebp
xchg
cmp
push
pop
xor
cmp
repnz
mov
lock
into
fcmovne
dec
adc
mov
daa
dec
shl
or
aam
ret
add
ret
test
hlt
cmp
mov
repz
shl
inc
out
lret
add
push
addr16
in
pop
inc
mov
sub
inc
outsb
xchg
cmpsl
fwait
cmp
xlat
pop
int3
mov
sub
mov
int
sub
cmp
rcrb
pop
and
ret
xchg
push
lea
push
test
pop
test
mov
push
xchg
ljmp
sub
mov
mov
adc
cmp
out
inc
imul
imul
jle
adc
lcall
push
cld
cltd
and
in
dec
aad
xchg
pusha
aaa
sub
add
adc
stos
cli
xchg
cmpl
imul
jb
mov
shlb
pop
or
push
jne
rcrb
insb
in
cmp
adc
scas
es
arpl
inc
sub
std
aad
loopne
in
test
dec
lret
test
or
push
ds
push
mov
js
fsubr
xchg
mov
fisttpll
cmp
pop
mov
es
outsb
stos
scas
pop
fmul
pop
call
xchg
xor
mov
xlat
stos
test
std
bound
and
push
imul
inc
cmp
imul
jb
imul
mov
rcl
ficomps
in
jg
pop
test
dec
or
lret
leave
loop
add
mov
mov
mov
dec
pop
xchg
dec
xor
sub
lret
insb
dec
sbb
pusha
out
sbb
cmp
roll
sbb
or
pop
inc
cld
insb
in
sbb
mov
cmpsb
testb
mulb
insl
rcll
rcr
addr16
jb
out
data16
aad
outsl
pop
jne
mov
es
pop
xchg
adc
stc
xor
sarb
ja
jne
imul
sarl
fidivrs
arpl
ret
and
xchg
sbb
or
sub
or
jbe
push
push
icebp
mov
mov
jns
in
arpl
js
lock
inc
fs
sbb
push
in
mov
mov
or
fnstenv
lods
rol
pop
sub
packuswb
aas
fwait
adc
cwtl
fisttpl
fiaddl
int3
test
fidivl
sub
lret
lods
cltd
adc
into
adc
xchg
sub
movsl
jge
mov
bound
sbb
mov
lods
loop
or
in
sub
and
ja
xor
fs
push
in
or
or
jge
sub
or
xchg
inc
push
shrl
xor
mov
lret
pop
insb
icebp
xchg
mov
sbb
enter
outsl
push
sahf
xor
cld
rolb
push
ja
jne
inc
icebp
movsb
jbe
adc
lahf
shll
jl
out
loopne
cltd
inc
pop
jge
into
inc
mov
and
xor
lock
popa
divb
ja
imul
adc
jg
cmp
dec
loopne
in
mov
movl
xor
cwtl
das
or
pushf
enter
les
iret
rcll
inc
push
cld
dec
sub
sbb
das
and
sbb
das
rcrl
mov
xchg
sahf
loopne
or
ret
push
js
cltd
test
lret
adc
fcomip
std
test
roll
push
lahf
sub
cmp
movsl
add
mov
pop
test
push
add
daa
jecxz
out
adc
push
jle
sub
nop
ljmp
shrb
mov
cmp
jecxz
dec
push
push
shl
mov
loopne
cmp
pop
inc
pop
sub
mov
cmc
sub
inc
adc
add
test
aad
adc
nop
inc
push
jnp
pop
sbb
cli
mov
sub
in
and
enter
or
aam
cmp
sbb
xchg
lret
enter
sbb
jb
enter
scas
insl
hlt
xor
daa
scas
pushf
and
mov
into
icebp
pop
inc
dec
loope
fsts
and
aaa
lret
xchg
cmp
sub
movsl
xor
and
icebp
push
int
sbb
rcrl
cmp
mov
mov
es
ret
mov
sbb
int
fstp
je
dec
jl
in
ds
or
jg
mov
cli
sub
stos
out
divl
call
sbb
pop
pop
outsb
out
addr16
fs
jno
fadds
push
std
sub
popf
pop
mov
cmp
pop
in
into
mov
pop
imul
das
mov
xchg
mov
cs
or
jne
movsb
mov
add
cmpsl
pop
out
jb
cs
cmp
lea
aas
fwait
push
mov
mov
shll
aaa
mov
xchg
pop
mov
adc
ret
xor
cmp
lods
jne
pop
subb
sbbl
sub
and
fisubs
lret
lock
xor
sti
xchg
in
lret
or
mov
ret
jl
outsb
outsb
sti
jmp
inc
mov
or
ret
and
or
mov
jbe
js
xor
pop
or
xchg
enter
xor
mov
out
jne
ss
xchg
mov
mov
push
inc
jmp
aaa
stos
scas
push
add
adc
add
mov
mov
pop
or
sbb
mov
pop
fsqrt
xchg
lret
inc
push
idiv
iret
data16
dec
xchg
int
pop
cli
xchg
mov
imul
jnp
je
or
jb
das
xchg
in
jo
push
bound
fwait
xor
lea
stos
inc
or
aad
imulb
fidivl
pop
add
scas
imul
lods
add
lret
push
push
pop
repz
jae
jmp
xchg
cmpsb
jo
mov
pop
pop
xor
jne
das
mov
ret
mov
sub
jle
and
rcll
std
dec
push
pop
popa
dec
and
push
sub
js
adc
out
push
adc
jge
cs
cmp
pop
add
xlat
dec
popf
pop
negb
or
out
xchg
pop
mov
fsubp
jnp
fcomps
cltd
arpl
mov
mov
jle
jb
ds
sar
nop
add
pop
repz
and
jp
lods
ja
int3
test
cwtl
das
add
push
ljmp
jb
dec
je
imul
repnz
ret
hlt
sbb
test
adc
das
popf
push
dec
in
mov
insb
add
sub
xchg
pop
inc
fstl
mov
xor
mov
aaa
pop
or
sub
xorb
add
and
shl
lea
jecxz
popf
dec
dec
add
jge
and
pushf
cltd
and
mov
pop
jnp
adc
fildl
push
push
sbb
lret
addr16
or
js
stc
popf
add
jmp
push
xor
fnstcw
inc
mov
and
fldl
fs
sbb
sbbb
jo
jmp
jl
jo
hlt
popf
mov
es
lock
imul
out
xchg
sbb
inc
call
or
imul
or
fists
cli
mov
scas
inc
lods
sbbl
mov
lahf
ss
ljmp
sub
lahf
pop
cmpsb
jle
mov
sub
inc
rcrb
in
test
jo
fnsave
jmp
xchg
push
pop
sahf
push
mov
mov
aaa
js
test
lret
mov
fst
imul
icebp
and
loop
xchg
or
and
push
fisttps
orl
xchg
mov
arpl
dec
dec
add
aas
in
rcrl
mov
mov
je
pushf
gs
icebp
mov
xchg
lahf
divl
xchg
push
std
xchg
jb
sub
sbb
sbb
inc
cmp
daa
scas
jecxz
lds
rolb
sahf
rol
push
loop
aam
xchg
dec
in
hlt
pop
out
sub
fwait
pop
ret
aas
push
movsl
pop
lcall
and
ret
pop
mov
rorl
lcall
lds
mov
out
jge
and
push
pop
stc
xchg
jmp
sbbb
or
sub
adc
adc
stos
lds
popf
mov
sub
jns
jbe
leave
sbb
sbb
sbb
inc
fsubrp
mov
adc
shlb
inc
mov
js
cmpsb
push
repz
and
mov
mov
fst
jb
add
aad
icebp
movsl
fdivl
adc
cmpl
fwait
movsb
jecxz
push
aas
int3
arpl
xchg
sub
lret
mov
fiadds
dec
stc
icebp
mov
and
mov
pop
lea
sub
cltd
and
bound
push
in
inc
dec
jmp
aas
out
cmp
popa
call
in
je
add
jo
roll
cmp
cmp
adc
or
out
push
add
inc
out
cmp
gs
push
mov
outsb
add
mov
inc
mov
inc
or
xchg
xchg
arpl
push
xor
mov
inc
lock
adc
and
mov
imul
ja
xchg
mov
mov
pop
and
outsb
adc
fbstp
mov
int
cmp
mov
dec
pusha
imul
pop
dec
and
repnz
fdivl
add
inc
cmpsb
sub
pop
out
cmpsb
cmp
stos
les
int
test
loopne
adc
push
inc
xlat
in
xchg
sub
jne
ja
aad
dec
cwtl
cmp
or
mov
and
fistpll
pop
repnz
push
jb
inc
dec
shrl
fs
push
sub
mov
push
mov
call
sbbb
and
data16
dec
jmp
jo
cmp
mov
push
es
insb
rorl
lahf
push
mov
std
in
test
mov
sti
and
inc
mov
cmp
mov
dec
sti
add
pop
enter
jg
cmp
testl
xchg
and
rcll
mov
xchg
not
push
cmp
push
ljmp
in
shll
das
mov
dec
mov
jl
dec
push
out
subb
in
cmp
lods
fstps
or
cmpsl
sbb
sarb
imulb
inc
or
mov
lods
inc
inc
cltd
cltd
xor
jmp
in
pop
sub
add
xor
push
cmpsl
mov
test
pop
jne
dec
jecxz
mov
add
sbb
mov
mov
push
mov
dec
shlb
push
push
call
jb
jns
push
pop
fidivl
ja
lods
push
mov
cli
xchg
push
movsl
leave
sbb
pop
lea
aaa
xchg
xchg
xor
push
arpl
sbbb
addr16
pop
mov
daa
in
jp
push
insb
sub
and
fwait
pop
repz
sbb
lods
mov
cmpsb
and
inc
jnp
je
ss
ja
inc
push
xchg
sub
stc
push
jae
xchg
jmp
ret
subb
test
inc
out
xchg
cmp
xchg
sbb
xchg
ds
enter
xchg
or
xlat
pop
in
orl
lahf
insl
dec
loopne
xor
mov
jno
adcb
xchg
fidivl
int
xchg
pop
repnz
mov
cmp
test
inc
mov
fwait
pop
test
mov
jno
xchg
sub
test
sbb
pop
ss
mov
test
jbe
scas
cmp
lods
inc
mov
xchg
cmp
fwait
rorb
add
in
jnp
es
enter
jmp
orb
push
mov
push
and
mov
push
push
sub
inc
cli
sbb
push
mov
sub
jbe
cmpsl
addr16
sbb
pop
cli
sbb
inc
sbb
mov
stos
inc
sub
or
add
scas
inc
xor
add
mov
shrb
inc
or
push
pop
lock
into
sti
push
mov
inc
mov
dec
push
ljmp
add
dec
rclb
mov
sbb
outsl
dec
xor
mov
cli
xchg
push
and
jle
call
int
sub
sbb
cmp
pop
sbbb
roll
dec
fs
roll
jno
sub
out
test
stos
xchg
sub
inc
xlat
aas
cmp
mov
add
mov
push
jmp
dec
push
popf
hlt
add
popl
hlt
mov
or
or
push
out
sub
movsl
popf
mov
lea
mov
pop
out
lods
inc
inc
xchg
lret
gs
cmpsb
push
jle
pop
jns
ss
or
xchg
ds
jbe
into
sbbl
mov
xor
and
and
inc
out
xor
xor
ds
mov
jge
addr16
fstpl
pusha
idivl
dec
into
gs
mov
les
sub
xor
mov
adc
incb
adc
mov
mov
dec
inc
cltd
xor
cmp
out
outsb
adc
popf
xor
pusha
div
and
int
mov
int3
and
sub
stos
inc
mov
aaa
pop
inc
fisttpll
cmp
das
pop
adc
dec
jge
repnz
add
shll
clc
popl
ret
jmp
or
shll
dec
jl
sbbb
or
cmp
aaa
mov
cld
dec
dec
jno
aas
or
enter
jno
sahf
dec
out
or
aas
stos
lret
sub
aam
fucomip
adcb
ret
lahf
push
mov
or
data16
scas
sub
pop
icebp
aad
xchg
sub
jmp
add
push
jns
rcrl
cmp
dec
pusha
dec
sub
pop
daa
js
shlb
and
xorl
pop
cmp
into
aas
pop
add
mov
push
addr16
call
push
pop
and
push
jnp
out
jno
mov
cmp
in
dec
pop
inc
fnsave
pop
sahf
ss
sbb
scas
aaa
jp
imul
enter
adcb
aas
mov
nop
mov
fistpll
lock
addb
dec
push
pop
pop
mov
fwait
aam
jge
sub
adc
test
sub
xchg
cs
adcb
mov
ret
aad
cmc
es
pop
push
icebp
mov
clc
imul
std
jno
adc
jns
mov
lods
adc
insl
jmp
cmp
dec
mov
ret
and
insl
and
sbb
xlat
inc
fmul
jb
push
xchg
rorb
sarl
push
rcrb
insl
movsl
sbb
icebp
dec
es
stos
inc
xlat
ljmp
gs
sub
jp
pushf
xor
ret
movsb
cmp
push
add
addl
pop
cltd
movsb
dec
out
mov
or
movsb
cmp
pop
repz
sbb
movsl
inc
and
clc
jae
fsubs
pop
lock
jns
in
mov
outsb
addb
cmp
sub
out
sbb
popf
pushw
nop
pushf
xor
fs
hlt
lret
sub
or
sbb
xchg
jmp
addr16
sub
ljmp
sub
jl
inc
push
and
enter
pop
jp
jbe
inc
outsl
xchg
movsl
dec
jae
test
call
fwait
pop
in
inc
add
psadbw
sub
lock
call
push
montmul
cmpsb
sbbb
jmp
popa
lods
in
sbb
fildl
and
cmp
push
lods
cmp
cwtl
jbe
push
inc
cmpsb
lea
and
jno
in
clc
inc
popf
shlb
fucomi
inc
mov
dec
scas
test
pop
js
movsb
jecxz
inc
mov
divl
ret
sub
fidivs
dec
dec
movsl
cmp
mov
addr16
dec
mov
push
fldcw
addr16
push
pop
adc
jno
push
pop
inc
ss
xchg
dec
out
pop
push
int3
push
mov
imulb
mov
adc
push
cmp
xchg
jo
mov
in
xchg
repz
push
into
outsb
push
inc
xlat
gs
shrb
xchg
mov
and
cmp
ljmp
scas
repz
ss
and
sahf
mov
mov
repnz
outsb
mov
rclb
in
dec
enter
cmpsb
in
dec
out
out
push
flds
and
jae
shlb
je
adc
scas
mov
popf
insb
sbb
pop
lahf
lea
or
cmpsb
cmp
pop
adc
das
xchg
lret
fcomp
ret
pop
into
add
mov
or
sub
aaa
out
sti
sbb
or
cmp
mov
ret
fdivl
scas
inc
xchg
dec
out
cmpsl
xchg
sub
loop
stc
nop
lods
add
int
sbb
ret
out
test
out
xchg
std
jno
das
in
movsb
out
or
xchg
jne
cmp
montmul
cmpsb
add
daa
dec
loope
and
lods
aam
ret
cmc
pop
mov
sti
add
arpl
dec
in
test
sbb
push
out
cmp
mov
call
fcompl
arpl
les
test
xchg
mov
std
xchg
inc
popf
xchg
sub
sbb
idivl
push
ds
adc
push
push
in
mov
stc
int
sub
mov
div
mov
out
pop
cmc
fbstp
sbbl
push
mov
inc
roll
cld
push
loopne
sub
fcoms
cwtl
xor
mov
pop
repz
add
idivb
les
adc
push
mov
pushf
add
cmpsb
and
mov
push
inc
inc
fdivl
add
jae
ss
mov
addr16
xlat
test
enter
sub
pop
sub
scas
movsl
cmp
pushf
stos
inc
movsbl
xor
pop
hlt
lds
push
out
sarb
adc
fwait
adc
or
es
aas
mov
dec
out
cltd
iret
data16
mov
test
repz
mov
inc
jae
push
mov
test
xchg
enter
add
cmp
lret
sub
in
dec
xchg
sub
lret
outsl
push
std
jge
xor
push
and
inc
xor
mov
jo
jae
or
jns
fnsave
fidivs
maxps
jg
in
or
pop
aas
inc
fstpl
rcrb
mov
shrl
jo
daa
mov
sub
shll
mov
pop
adcl
push
inc
jne
mov
mulb
lret
mov
jmp
xchg
sub
arpl
mov
push
push
popf
jno
lcall
cwtl
inc
fimuls
push
push
jmp
pusha
push
call
leave
ss
dec
in
or
jl
adc
roll
cwtl
das
fsubrl
add
pushf
mov
dec
loop
aam
fcmovnb
enter
scas
shlb
inc
addr16
cmp
repz
rcr
dec
fsts
lods
pop
jl
cld
lods
idivl
fcompl
mov
and
sahf
add
xor
les
push
add
xchg
mov
inc
repnz
xchg
lret
bound
xchg
sub
cmp
mov
mov
stos
or
and
push
in
jae
insl
xor
hlt
mov
stc
mov
adc
adc
data16
mov
jno
push
in
mov
in
xorl
out
jl
sbb
xor
mov
add
rorb
adc
jge
xor
jmp
or
lret
scas
inc
pop
mov
int
jns
push
stos
push
push
in
popf
int3
mov
mov
stc
ret
pop
into
sub
mov
sarl
scas
cmp
cmpsl
rcrl
data16
and
sbb
sbb
das
pop
cmp
test
push
movsl
sbb
cmp
pop
pop
insl
xchg
pop
hlt
and
lods
inc
roll
pop
loop
ds
out
cmp
pop
aam
insb
cmp
jl
lea
lcall
jnp
jp
shrl
fwait
icebp
mov
xchg
shrb
jmp
or
xchg
mov
ret
hlt
mov
add
xorl
std
xchg
pop
sbb
lods
jns
add
jmp
dec
xor
insl
jno
mov
mov
shll
add
mov
cmp
repz
or
mov
mov
push
jmp
xor
lods
xchg
cmpsb
fidivs
mov
out
sbb
xor
sbb
pushf
xor
ret
mov
cmc
xor
rclb
jge
loope
movsl
shlb
call
push
and
js
pop
icebp
lcall
mov
push
add
push
jp
push
dec
ja
iret
inc
jo
xchg
dec
push
sbbb
pop
test
fs
mov
xchg
mov
adcb
outsb
add
pop
rclb
and
jge
adc
movsb
call
or
dec
push
lock
fistps
inc
ficomps
xor
jmp
out
test
data16
pop
push
ficomps
push
out
loope
inc
testb
ja
mov
ja
daa
mov
cmp
jg
shlb
cmp
jns
dec
xchg
sub
stos
jo
arpl
mov
xchg
sub
movsl
int3
cmp
xchg
fbstp
sahf
sarl
pop
int3
lahf
incb
aas
jl
les
xchg
mov
mov
aam
movsb
pop
lock
sub
mov
push
ds
test
mov
ljmp
adc
sub
fwait
ror
mov
and
mov
repnz
pop
xor
nop
adc
shll
cmc
pop
and
jns
push
loopne
jle
testl
xchg
jae
jge
inc
fsubrs
clc
cmp
jmp
std
xchg
and
outsl
mov
cli
mov
fistpl
adc
pop
mov
push
jmp
into
into
inc
fsubl
lock
nop
std
inc
outsb
add
dec
arpl
outsb
orb
ret
jge
and
dec
push
mov
popa
or
mov
outsl
movsb
mov
push
adc
lahf
ss
mov
jns
out
popf
lcall
icebp
push
mov
adcb
dec
inc
mov
lret
bound
mov
jmp
mov
movb
shrb
adc
test
add
cwtl
push
pop
scas
inc
mov
es
les
rcrl
das
scas
sarb
imul
dec
lods
inc
inc
ficoml
cwtl
mov
inc
das
aaa
vdivsd
sbb
or
mov
fsubl
mov
pop
inc
fnsave
pop
fiaddl
mov
mov
imul
imul
inc
mov
dec
inc
enter
or
pop
push
lcall
jecxz
lcall
pop
cmc
scas
das
push
pushf
xchg
sbb
popa
clc
sub
das
add
jge
pop
scas
and
pop
xchg
or
sub
xchg
add
lds
in
inc
and
mov
push
pop
test
int3
arpl
and
mov
je
out
inc
push
jp
push
imul
and
fisubrs
or
testb
pop
gs
lea
outsb
addr16
out
push
mov
inc
mov
mov
and
out
xchg
out
pop
aas
pop
insb
pushf
pusha
jge
nop
scas
das
jp
jno
addr16
into
jge
fwait
dec
sarl
inc
jbe
jae
xor
outsl
jnp
inc
mov
jno
push
sarl
ljmp
loope
aaa
out
sbb
mov
or
stos
pusha
testl
mov
mov
push
sub
pusha
mov
je
pop
lds
cmp
imul
imul
jne,pt
or
test
outsl
shll
jecxz
lds
ret
xchg
or
adc
lods
pop
mov
and
mov
out
movsb
fildll
cmpsl
aas
rcll
rcrl
pusha
test
lret
aaa
fsubrp
push
xor
popf
mov
add
mov
imul
ss
insl
mov
aas
sbb
adc
pushf
andl
lret
imul
sub
or
outsl
shrl
push
xchg
jns
out
push
adc
xchg
icebp
cmc
popl
jecxz
or
push
cmp
xor
adc
mov
and
inc
dec
test
data16
xlat
outsb
popf
jp
xchg
pop
imul
sbb
add
jae
loope
cmpsl
xchg
add
mov
loopne
dec
test
dec
scas
stos
ljmp
add
sbb
xchg
pop
sahf
rcll
int
test
xchg
ret
mov
scas
jno
stos
shrb
add
xchg
cmp
pop
addr16
fidivs
push
push
jmp
lea
mov
mov
mov
adc
mov
int
xor
mov
inc
lds
pop
ds
xor
inc
jns
pop
lock
ds
mov
mov
xchg
add
ja
mov
test
sbb
enter
jnp
mov
filds
lds
push
arpl
dec
in
test
jo
repz
movsb
pop
hlt
aad
incb
ds
push
sub
sub
mov
outsb
or
cmp
stos
push
jnp
out
inc
pop
dec
lret
dec
dec
or
push
dec
or
inc
push
testb
or
mov
test
xchg
dec
or
ficoml
pop
repnz
stc
fisubs
or
jbe
sbb
loope
enter
xchg
jp
aas
mov
aaa
mov
clc
filds
outsb
jae
mov
cmc
jmp
pop
mov
clc
std
imul
call
aad
or
mov
jl
scas
inc
icebp
popf
aam
iret
adc
inc
cwtl
into
stos
outsl
int
mov
mov
xchg
pop
movb
xchg
mov
ret
mov
sbbb
pop
dec
in
sub
push
in
push
push
lods
inc
std
xchg
mov
mov
sub
ja
pop
xor
mov
test
mov
pusha
add
enter
out
nop
aas
repz
sub
iret
into
inc
mov
mov
cmp
pop
xchg
inc
xchg
pop
enter
add
dec
rolb
add
xor
insl
xchg
add
insl
add
dec
mov
pop
xor
fs
insb
add
xchg
popa
jbe
dec
xchg
lods
mov
cmp
addr16
das
popf
lcall
mov
mov
cmp
push
xchg
xchg
into
pop
shll
and
mov
sub
cmpsb
push
cmpsl
inc
fstp
jno
fidivs
int3
or
aam
sub
inc
adc
negl
clc
popa
mov
and
fisubs
sbb
sbb
insl
cmpsl
loope
outsb
add
fdivl
adc
add
and
add
loop
pop
push
push
mov
mov
fld
inc
fmulp
mov
loop
xchg
data16
fs
cli
repz
mov
inc
xchg
loope
imul
in
cmp
lods
sbb
or
cmp
cmp
repz
nop
fisubl
inc
sub
add
stos
sub
clc
jo
push
and
notl
js
je
inc
dec
movsb
movsl
and
dec
mov
insb
mul
sub
ljmp
or
push
cld
mov
mov
xor
test
mov
pushf
stos
les
and
or
inc
es
sbb
cmp
sub
jmp
int3
xor
lcall
sbb
lea
fbld
cmp
movsl
inc
outsb
add
lds
sahf
xor
rcl
gs
xchg
xorb
jg
mov
push
cmp
imul
ja
pop
xchg
push
hlt
lods
inc
es
sti
ret
dec
in
push
test
ss
loop
jmp
ss
jo
sub
mov
call
xchg
fildl
cmpsb
cmp
mov
sahf
jmp
mov
ret
sbb
hlt
push
icebp
add
mov
bound
les
mul
adc
push
aaa
into
xorb
negb
or
mov
adc
or
sbb
fsubs
inc
js
iret
adc
jmp
add
neg
inc
loop
jmp
rcrl
enter
out
iret
icebp
stc
in
test
lcall
mov
dec
notl
out
mov
pop
adc
cmc
repz
stc
xchg
xchg
inc
push
xchg
mov
sub
xchg
aaa
into
ret
lret
sub
cmp
mov
jno
jmp
ss
mov
fsubl
mov
in
xor
dec
mov
and
test
mov
and
scas
mov
div
and
ljmp
ss
enter
and
aaa
sub
ret
repnz
xor
jg
pop
lock
js
and
mov
sbb
cmc
jecxz
adc
shlb
mov
sbb
je
jae
leave
pusha
pop
push
int
fcmovu
sub
pop
sarl
jl
loop
out
sub
or
add
lods
mov
cmp
jge
or
sub
sbb
movsl
mov
sahf
mov
pop
and
and
xchg
popf
xor
or
mov
rcrl
cmp
fnstenv
loopne
push
push
mov
jl
cmp
stc
nop
add
pop
xchg
sbb
xlat
lods
lcall
xchg
cs
dec
cmp
outsb
xor
cmp
jge
mov
test
aas
push
pop
dec
cli
xchg
add
push
les
and
cmp
mov
sub
cmp
push
popa
xor
jno
fs
xchg
xlat
into
and
icebp
inc
pushf
shll
sti
idivb
stos
cltd
add
xor
jl
popw
dec
int3
lcall
loop
inc
pushl
pop
adc
fnstenv
ret
jnp
cmp
push
punpcklwd
pop
ficomps
daa
add
sbb
cmp
lcall
and
addl
sbbb
cmp
bound
xchg
sub
popf
fs
adc
mov
inc
dec
outsl
iret
cmp
push
sahf
cltd
addr16
xchg
mov
cs
ds
adc
jp
pop
in
pusha
xchg
xchg
xor
pop
xor
jle
loopne
sbb
leave
js
and
push
or
xor
adc
jbe
inc
xchg
push
inc
mov
ja
lret
out
xor
arpl
xchg
or
or
mov
popa
pop
cmpsb
rclb
addl
imul
pop
dec
mov
dec
dec
or
adc
in
xor
es
pop
sub
daa
mov
out
les
test
gs
cmp
add
adc
sbb
xchg
imul
push
fxch
es
rol
push
test
adc
aam
add
outsl
orl
xchg
sub
mov
imul
fbstp
pop
in
push
sbb
push
into
mov
outsb
bound
sbb
xor
shlb
mov
mov
das
dec
lea
int3
ljmp
adc
dec
adc
fstl
jo
mov
jae
xchg
push
mov
sbb
std
shlb
sbb
push
jmp
ds
pop
fildll
gs
fwait
lea
out
repnz
and
and
cs
sub
push
lock
adc
sbb
mov
loop
sbb
imul
push
fldenv
outsb
call
pushf
cmpb
cwtl
inc
xor
orb
inc
pop
sub
sbbl
pop
data16
cmp
xchg
xor
jns
mov
fwait
mov
and
pop
xchg
lds
dec
pop
add
bound
mov
jp
xchg
hlt
and
je
arpl
xchg
push
mov
mov
sub
inc
ja
stos
xchg
je
sub
cmpsb
mov
out
sbb
xchg
lods
lods
xchg
aad
or
xchg
hlt
mov
mov
mov
xor
mov
rolb
mov
dec
sub
push
pushf
inc
out
cltd
add
cmpsb
bswap
push
cmpsl
sbb
mov
pop
fstps
mov
callw
or
pop
aas
cmp
movsb
sbb
clc
mov
aam
rclb
xchg
mov
cltd
fidivl
imul
mov
repz
loope
sub
icebp
leave
and
es
mov
pushf
add
cli
cmp
test
sbb
shrd
arpl
scas
icebp
mov
and
add
bound
mov
dec
dec
and
dec
negl
mov
sub
pushf
repz
jno
popa
dec
out
int3
clc
and
in
jo
dec
mov
xlat
sub
or
cmp
out
sub
pop
adc
enter
push
test
cmpl
mov
std
pop
pushf
dec
xchg
xchg
xor
insl
int3
push
push
sti
jle
push
call
test
push
imul
and
test
out
ret
dec
push
inc
mov
dec
sarb
imul
pushf
mov
xchg
adc
dec
pop
fwait
ss
jnp
dec
rclb
out
scas
imul
in
pop
lea
mov
mov
mov
cmp
mov
xchg
push
sbb
and
xchg
les
cmp
push
imul
movl
sar
add
dec
cmp
and
push
xorb
js
or
je
push
mov
psubsw
mov
add
inc
push
or
sub
sbb
sbb
outsl
fdivr
ret
roll
arpl
int
shrb
cmp
mov
jae
sbb
pushf
repnz
cmp
inc
lods
inc
je
incl
mov
inc
and
test
into
or
sub
loopne
inc
imul
mov
dec
hlt
loopne
pop
pop
gs
jae
dec
testb
sarb
mov
xchg
cmp
pop
jo
cmp
and
stos
pushf
shr
shrl
repnz
sub
les
and
pop
iret
mov
ljmp
xor
sub
jno
insb
imul
mov
scas
mov
lret
or
pop
loope
xor
jle
xchg
test
leave
jno
inc
insb
sti
mov
inc
sarl
std
xchg
data16
pushf
xchg
fstpt
dec
in
cld
xorb
jns
xchg
sbb
daa
sub
jo
fidivrs
test
mov
jmp
sub
mulb
in
cmc
hlt
mov
dec
out
add
sub
mov
cmp
cmpsb
xor
or
movsl
xor
push
popf
xchg
add
jle
mov
adc
jnp
adc
push
push
pop
mov
std
push
out
stos
push
daa
xchg
rcrl
inc
xlat
adc
cmp
pop
rcrb
aaa
into
xorl
mull
in
cld
mov
call
rcll
and
sbb
popa
push
mov
aas
and
mov
pop
hlt
test
aad
les
pop
insl
testl
lock
popf
cltd
sbb
ret
pop
xchg
lcall
mov
add
daa
push
ss
pop
sbb
inc
xor
hlt
in
or
hlt
push
hlt
inc
jnp
out
aam
sbb
xchg
push
pushl
xor
xor
aaa
push
jnp
or
xchg
xchg
and
xchg
fwait
push
inc
sub
ret
lods
mov
rolb
in
sbb
loop
cmp
pop
and
dec
leave
int3
push
out
cli
cmp
and
and
mov
dec
jae
mov
jbe
cmp
lock
cmp
or
push
les
cmc
das
into
sub
and
enter
sbb
adc
cwtl
out
xor
and
pop
les
pushf
jne
cmp
fnstenv
mov
in
pusha
mov
rolb
adcb
leave
imul
dec
pop
cwtl
es
cmp
cmpsb
mov
sbbl
jge
sti
scas
in
inc
ja
int
iret
ficompl
insb
pop
fmuls
std
roll
sub
aad
pop
push
dec
in
aaa
ret
or
xchg
js
cmp
gs
aas
insb
pop
popa
out
jecxz
dec
xor
jmp
jb
jl
rolb
stc
sub
neg
mov
sub
jno
movsb
les
jno
xchg
pushf
mov
icebp
imul
adcb
stc
sub
stc
shrl
cmc
mov
insb
mov
insl
or
sahf
dec
lods
mov
shl
in
hlt
add
and
cwtl
inc
fmulp
out
imul
stos
ret
or
insb
pop
mov
scas
loopne
adc
jnp
push
xchg
paddq
mov
mov
sahf
mov
rclb
int
movsb
repz
and
ficompl
pop
cmc
and
sbb
addr16
xor
sub
push
adc
mov
mov
push
fwait
pop
xor
fwait
push
xor
push
loopne
xor
mov
cltd
jne
gs
pop
scas
dec
pop
idivb
cmpsb
sub
mov
sub
lret
mov
sub
mov
pop
xlat
iret
int3
push
les
outsb
btc
sub
mov
inc
add
scas
push
push
addr16
and
pop
in
orl
cmpsb
push
leave
sbb
scas
test
xchg
adc
cmp
mov
adc
in
pop
jo
js
xchg
xchg
jp
cltd
sub
sub
mov
test
out
sub
mov
dec
fmuls
xor
push
pop
pop
or
data16
sbb
mov
pop
loop
movsb
pop
lock
cli
testl
jo
pop
push
dec
or
dec
icebp
mov
aaa
pop
pop
mov
pushf
mov
cmp
popf
mull
xchg
lahf
xchg
mov
dec
addr16
ret
cld
pop
push
lods
in
fisubs
sbb
ss
sub
mov
dec
jbe
stos
mov
out
shlb
sub
jmp
lods
dec
mov
in
cltd
jae
pop
inc
mov
addr16
cwtl
shl
dec
out
int
in
adc
cwtl
movsb
push
les
aaa
cmpsb
stc
mov
dec
or
dec
sub
jnp
aaa
in
insb
mov
ss
stos
out
sub
jmp
sub
or
push
push
mov
fcomi
inc
cmp
mov
sub
mov
arpl
rcrl
test
push
fbstp
cwtl
mov
xchg
xchg
push
mov
and
ret
icebp
mov
gs
int
lods
pop
sub
mov
xchg
rcrl
int
jecxz
lods
orl
mov
push
mov
dec
lea
mov
popa
mov
dec
jne
mov
imul
lds
cmp
loop
xlat
xchg
sub
xchg
xlat
dec
das
push
xchg
dec
nop
jl
jbe
or
pop
push
bound
push
mov
hlt
mov
shll
fists
int3
pop
std
sub
imulb
pop
loope
ret
push
cmc
leave
cmpb
ljmp
mov
pop
xor
jl
xor
push
test
les
pop
jno,pn
call
push
fs
fdivrs
jp
cmp
cltd
dec
jecxz
fnstsw
xor
adc
push
adc
data16
pop
add
xlat
aam
or
jg
addb
push
mov
and
dec
pop
adcb
sub
test
jne
scas
mov
mov
mov
aaa
call
dec
mov
ficoms
orl
mov
in
test
xchg
mov
pushl
sub
jnp
les
fs
jle,pn
repz
dec
lods
sbb
bound
push
mov
xlat
les
bound
xchg
fwait
sahf
mov
sarb
sbb
push
fcompl
lock
or
xchg
cmp
and
mov
add
imul
and
test
in
test
xor
ljmp
lock
and
mov
and
or
dec
test
jge
mov
addr16
daa
cltd
aas
mov
ds
or
aam
pusha
push
imulb
push
scas
pop
pop
lret
out
push
scas
inc
push
xor
cmp
out
add
inc
aad
fldt
in
ljmp
decb
or
bound
xchg
cld
nop
xlat
jo
mov
fcmovbe
mov
inc
pop
xchg
mov
mov
jle
nop
out
ret
arpl
push
loopne
lcall
cld
lahf
iret
popf
or
xchg
add
lods
outsl
push
fisubs
in
test
es
inc
flds
mov
add
cwtl
lahf
in
test
ja
push
mov
jmp
dec
out
mov
xchg
sahf
mov
out
imul
imul
out
shrb
add
jecxz
hlt
popa
stos
mov
or
jecxz
adc
test
pop
dec
fisttps
outsb
jmp
or
lea
pop
adc
jnp
or
into
nop
daa
add
push
call
push
push
outsl
push
xchg
cmpsb
test
and
ljmp
sbb
mov
subb
pop
mov
inc
jecxz
inc
fsubrl
inc
fadd
pop
jo
push
mov
lret
sbb
inc
call
pop
inc
imul
mov
imul
sti
push
je
push
mov
push
ret
jg
lods
arpl
sub
inc
popa
push
dec
fdivp
adcb
pop
dec
popa
mov
xchg
outsb
pop
scas
push
cmp
inc
les
dec
mov
into
repnz
ja
add
or
xchg
jnp
je
mov
ss
push
sub
outsl
loopne
gs
jmp
test
pop
js
in
mov
popl
cmp
inc
leave
or
aaa
pop
inc
add
daa
jle
fcomp
stc
mov
fidivrs
rcl
adc
add
fbstp
push
ret
sbb
imul
or
sbb
add
add
daa
mov
xchg
lods
lds
outsb
les
aas
fistl
lods
fidivl
pop
cmpsl
jmp
dec
add
and
xchg
lret
push
mov
or
ljmp
push
incb
ja
out
cld
cmp
mov
push
aaa
insl
fisttpll
xchg
std
xor
loopne
fsubl
enter
mov
sarl
jecxz
movsb
aaa
push
mov
inc
xor
inc
adc
jmp
xchg
jns
inc
push
xor
xchg
adc
loop
xor
add
pop
je
sub
inc
and
xor
lods
mov
or
andb
push
repz
pop
pushf
jae
cmc
fsubs
popa
adc
inc
test
addr16
xchg
lds
sub
pop
dec
sbb
and
cmp
jl
ljmp
mov
in
call
cltd
pop
jb
ret
pop
push
inc
popa
mov
jae
test
jno
out
cli
pop
insl
sub
inc
stos
xchg
js
pop
inc
in
stos
lahf
stos
faddl
lea
nop
aad
lods
pop
cmpsl
add
cmp
jnp
add
sarb
negb
add
fstpl
jbe
das
push
dec
hlt
push
dec
push
jo
stc
cs
mov
mov
mov
popa
dec
cwtl
inc
lods
repnz
ja
je
fstpl
and
jecxz
mov
adc
jecxz
ret
aaa
xchg
cmp
jnp
jecxz
sub
jl
std
or
dec
push
shlb
into
xchg
addr16
mov
push
jmp
jle
jo
dec
sbb
jne
mov
xor
cs
mov
mov
xor
sub
mov
stos
mov
into
push
add
mov
or
cmpsl
xlat
insl
loope
inc
flds
cmc
mov
fsubrl
xchg
mov
loopne
mov
mov
pop
repnz
aad
and
push
dec
cmp
repz
inc
loope
dec
add
push
sahf
imul
push
or
jnp
sub
in
jns
jo
jne
je
mov
jl
hlt
xchg
sub
mov
or
lret
mov
cld
push
popf
cwtl
stc
adc
xorb
push
and
xor
cltd
sbb
add
push
ficoms
dec
inc
push
iret
jbe
push
pop
loopne
mov
arpl
lret
test
lods
cmp
or
push
rolb
pop
and
dec
pop
hlt
inc
ljmp
daa
outsl
dec
sbb
adc
mov
mov
or
test
jb
xsha1
cmpsb
into
gs
xchg
cmp
mov
mov
and
jo
jmp
lahf
stos
sub
iret
loop
in
emms
or
into
inc
das
jbe
jbe
hlt
and
or
sahf
clc
xchg
and
outsb
xchg
je
jns
cmpb
adc
or
scas
sub
imul
add
xchg
and
gs
sbbl
jp
test
mov
cmp
mov
mov
cmpsb
mov
jno
les
in
and
jg
mov
addl
decl
or
add
xor
jnp
add
add
lcall
dec
mov
fimuls
or
cltd
pop
lahf
stc
jp
mov
cmp
imull
mov
std
test
mov
leave
icebp
and
or
stos
push
lcall
and
add
outsl
les
mov
adc
int
setnp
dec
in
xchg
xchg
cld
lods
xchg
movsl
outsb
push
jo
push
insb
test
insl
daa
mov
and
sub
out
stos
inc
sub
out
popl
and
mov
cmp
lods
dec
mov
sbb
addb
test
shlb
adc
mov
sub
stos
enter
mov
scas
sbb
inc
inc
pop
adc
mov
loope
les
xchg
stos
fs
sahf
gs
sub
shr
add
and
push
sub
xor
xor
daa
daa
mov
mov
scas
and
rorl
fsubrp
and
and
add
push
push
daa
int
dec
xchg
and
loopne
repz
pop
mov
lds
mov
add
xor
sbb
lods
movl
arpl
dec
nop
xchg
jmp
mov
sub
jg
dec
xor
outsb
cld
test
shrl
lcall
pop
fs
sub
fld
aam
pop
cmc
int3
pop
or
and
int3
fs
add
cli
jmp
or
jbe
and
or
clc
fsubs
ja
mov
es
jg
inc
mov
fidivrl
fsub
lcall
mov
sbb
aam
aaa
iret
push
ret
sub
push
je
icebp
data16
and
mov
jbe
sti
mov
out
loopne
or
loopne
pusha
sub
jne
hlt
cmpl
fstpl
loopne
repz
lret
cmp
push
jmp
fisttpl
fidivl
outsl
in
xchg
push
mov
nop
sbb
sti
shld
mov
push
fldl
push
pcmpeqd
or
enter
test
cmp
out
xor
jg
xor
sub
stc
mov
cld
add
fisubl
imul
inc
fmuls
test
mov
or
mov
nop
mov
out
daa
mov
bound
int
fistl
ja
inc
sti
sub
stos
in
cmpsb
lahf
int3
inc
fdivrp
mov
lahf
into
mull
movsb
cltd
dec
shrb
mov
imul
jb
addps
leave
test
icebp
mov
pushf
pop
push
adc
lret
push
sahf
mov
pop
shrl
mov
jo
dec
in
fwait
mov
cmpsl
ds
lods
xlat
ljmp
xchg
pop
fcoms
fsubl
mov
mov
push
and
fsubs
add
cmp
pusha
les
jmp
pop
jecxz
mov
inc
cmp
jl
popa
dec
loopne
sbb
decb
clc
or
arpl
stos
xor
jmp
xchg
pop
cwtl
push
dec
cmp
xchg
loop
gs
xorl
mov
imul
scas
push
stos
movsl
jg
push
gs
xor
lea
inc
cld
jne
push
sub
in
pop
lock
gs
adc
or
add
imull
or
loopne
dec
push
mov
pop
enter
pushf
js
rcrb
sub
dec
repz
rcll
jl
add
or
negl
iret
sub
jbe
pop
sub
mov
addr16
or
in
iret
xor
pop
fsubrl
jae
cld
xchg
int
xor
lods
imul
push
cmp
ret
outsb
add
imul
arpl
es
cmc
mov
adcb
fcoms
cmpsl
into
sub
fistpll
mov
std
inc
cwtl
lret
ficomps
shr
cltd
push
ret
fstpt
shlb
mov
bound
inc
pop
pop
test
or
rcrb
cltd
setnp
sbb
sbb
les
insl
dec
loop
stc
push
sahf
fidivrs
lock
jmp
xor
jb
pop
cmp
ret
sahf
pop
je
mov
cmp
leave
mov
sub
outsb
inc
std
arpl
aam
pop
loop
loop
sub
aaa
lods
and
dec
mov
daa
push
push
inc
inc
and
loope
cwtl
clc
cmpsl
bound
push
call
push
orl
adc
cmp
xor
and
mov
ret
xchg
lea
jecxz
xor
xor
jge
add
leave
cld
xchg
sti
sbb
xor
daa
mov
cmp
jmp
lods
mov
int3
or
stc
fmull
jg
test
cmp
js
push
gs
sbbl
jp
mov
push
aas
popf
mov
mov
mov
mov
into
xor
daa
int3
dec
or
rcr
cld
movsb
shr
rcr
and
fldl
dec
in
push
add
push
rcrb
cmpsb
cmp
loope
jns
push
mov
inc
addr16
mov
push
neg
add
int3
cmp
movsl
out
pop
hlt
push
or
xchg
jmp
fsubl
cwtl
inc
mov
pusha
outsl
arpl
orb
pushf
mov
ljmp
pop
pop
dec
cmp
inc
pop
enter
or
ret
loopne
popf
or
cmp
mov
inc
xor
bound
shlb
shl
xchg
mov
dec
out
iret
call
int
popa
cmp
hlt
cmpsl
movsb
call
repnz
jp
fstl
out
cli
jne
test
sbb
dec
dec
mov
mov
daa
dec
loop
lods
mov
arpl
imul
dec
dec
js
hlt
movsb
cmp
push
or
ret
cwtl
mov
mov
lds
mov
popa
xor
push
mov
ljmp
in
popa
sbbl
stc
popa
repnz
and
or
lret
xchg
out
jg
or
cld
int3
out
stos
inc
jmp
or
jb
push
push
insl
cmovnp
ljmp
jmp
cli
pusha
movsl
mov
dec
ds
add
push
in
movsb
fsubr
aad
into
gs
fdivp
mov
mov
ret
jle
scas
lahf
mov
iret
lcall
sub
add
mov
mov
rcll
fisttps
add
cld
push
add
xchg
mov
pop
cmc
call
lea
scas
pop
ret
pop
dec
enter
dec
pop
in
jae
cmp
out
mov
sub
jbe
sbbl
adc
aaa
cmp
push
pop
push
mov
movsb
adc
xlat
outsb
fbstp
sbbl
inc
sbb
pop
hlt
mov
xchg
jb
push
push
aas
int3
and
jne
aad
ret
xchg
mov
xor
inc
mov
mov
jecxz
jb
mov
mov
stc
popf
jns
xor
faddl
xor
adc
fbstp
cmpsl
ficoml
jl
or
xor
cmp
jno
push
cli
push
loop
xor
fldl
fwait
xchg
in
mov
cli
xchg
pop
push
dec
mov
sub
shlb
idiv
sub
sti
cmp
xor
jmp
ljmp
cmp
stos
jge
je
mov
cld
loopne
testl
fisttps
push
popa
or
add
gs
jp
xor
popa
mov
adc
lcall
and
dec
mov
pop
out
pop
push
sbb
push
push
aas
icebp
movsl
hlt
in
push
xchg
lcall
in
ds
add
xor
sbb
sub
mov
outsb
cmp
and
dec
pop
inc
or
mov
xor
mov
sub
ficompl
mov
popa
adc
sbb
push
or
nop
pop
sbb
inc
or
dec
outsb
fwait
stos
pop
lds
jbe
je
jge
fbld
xchg
arpl
lret
push
leave
add
push
mov
push
lret
and
push
addr16
lret
mov
adc
es
sbb
pop
sub
dec
sahf
mov
add
out
inc
pop
fildl
adc
jle
and
cmp
shlb
je
stos
int
jae
fcomi
dec
stos
adc
imul
stos
xchg
sub
out
adc
push
in
jnp
lock
mov
inc
jns
inc
push
jle
dec
jmp
clc
inc
add
repnz
sbb
jl,pn
pop
test
jnp
mov
out
int
cmc
dec
ret
fcompl
or
shl
xor
cs
sub
neg
pop
repnz
andb
adc
xor
push
mov
xor
lret
into
cs
xchg
cmp
in
out
mov
imul
mov
jo
inc
or
sbb
push
repz
in
test
mov
stc
imul
addr16
add
xor
pop
sub
loope
incl
add
pop
push
mov
test
in
xor
and
dec
cwtl
rcll
push
inc
lret
fdivl
sub
pop
lock
mov
ret
mov
aad
push
hlt
mov
fdivrs
dec
pop
jo
jl
in
pop
idivl
pop
jmp
pop
or
cmpsl
xchg
sub
insl
pop
enter
sti
dec
pop
iret
orb
jg
pop
and
addl
insl
and
cld
lahf
mov
pushf
dec
jle
mov
push
sbb
push
stos
lret
sub
push
stos
enter
or
leave
cwtl
mov
add
add
mov
and
movsb
xor
bound
inc
cmp
loopne
push
vandnpd
add
mov
mov
std
stc
nop
cmc
and
push
sub
sub
adc
es
xchg
inc
lds
das
aas
lahf
pop
sub
ret
pusha
jmp
dec
xor
push
dec
mov
mov
inc
inc
notb
fsubs
push
sbbb
mov
push
nop
lahf
push
test
nop
sub
shl
shll
jns
push
cmp
hlt
inc
lds
xchg
fsts
mov
cli
out
arpl
jae
or
push
stc
les
inc
scas
pushf
scas
sub
in
lahf
into
rorl
push
outsl
push
into
add
fsubrl
pop
and
out
insl
icebp
lods
shrb
daa
push
sbb
and
outsb
ja
add
inc
lcall
jae
dec
pop
fldenv
sahf
mov
push
mov
ljmp
jb
dec
cmp
jl
jo
jle
jne
fs
push
loope
jle
and
mov
clc
inc
in
addr16
fistl
and
lds
xchg
pop
xchg
outsb
pop
mov
shrl
lcall
add
jno
xor
pop
std
inc
mov
push
movsb
test
sti
enter
dec
ds
xchg
sub
movsl
and
cmpsl
sti
lret
leave
rorl
pop
in
inc
rcrb
cmp
in
lret
push
or
push
es
mov
aam
jmp
xchg
sbb
mov
or
pop
and
mov
mov
sbb
push
dec
into
xchg
pop
dec
sub
jbe
mov
push
insb
mov
mov
in
xchg
lods
push
mov
rcr
call
sbb
mov
inc
stc
pop
cmpl
cmpsl
ds
pop
cmpsb
dec
loopne
dec
daa
addb
loop
fs
ja
shrb
fsqrt
cmpsb
inc
dec
jns
sub
imul
cwtl
dec
imul
mov
xor
stc
mov
mov
lods
ret
pop
sbb
add
sahf
lret
xchg
dec
sarl
xor
fnstsw
fstps
cli
cmc
mov
dec
pop
xchg
add
mov
push
ds
mov
insb
mov
push
repz
clc
les
jbe
sbb
popf
dec
loopne
lods
push
insl
or
lods
ficoms
mov
fs
leave
pop
in
scas
ljmp
daa
insb
test
and
repz
leave
xchg
mov
sbb
adc
fistps
mov
add
test
adc
outsb
add
push
adc
adc
sub
mov
cwtl
mov
pop
jno
add
xchg
fnsave
mov
cli
adc
push
pop
xchg
ds
inc
sbb
xchg
push
in
lods
fs
mov
cmp
je
movsb
or
out
dec
rorb
xor
cmp
test
inc
inc
sub
sti
xor
sti
out
shlb
cmpsl
data16
clc
or
and
xchg
and
insb
sub
inc
inc
fstpl
pop
xchg
aad
shll
scas
aas
hlt
shll
scas
pusha
jbe
xchg
gs
and
cmp
adc
push
or
cltd
sbb
mulb
movsb
sti
or
test
xchg
sub
lret
jnp
stos
pop
lret
pop
into
inc
shlb
out
mov
cmp
pop
add
jle
dec
fildll
lds
leave
cmc
cli
jnp
insb
out
push
dec
push
or
push
pop
dec
stc
push
icebp
mov
ljmp
fmuls
sahf
or
ret
lea
dec
or
sbb
mov
lock
leave
mov
imul
and
test
ja
mov
int3
add
cmc
adc
and
stc
mov
adc
fcomp
daa
lea
or
out
add
xchg
dec
ss
mov
fcoml
lret
js
iret
sub
lret
inc
pop
outsl
cmp
in
loope
mov
lea
inc
or
mov
push
sbb
xor
and
data16
pop
and
mov
ror
cmp
shl
jmp
out
stc
or
shlb
pusha
xchg
dec
dec
in
call
sbb
mov
cmp
ss
ret
fisttps
mov
mov
stos
mov
mov
aas
es
push
fimuls
data16
fmuls
in
sbb
cmpsb
sbb
cmpsb
insb
add
test
in
movsl
sbb
test
pop
mov
fcoml
int3
fisubl
rolb
cwtl
inc
cmp
pushl
imul
xor
or
mov
notl
mull
movsl
imul
outsl
into
aam
cld
test
sbb
xchg
out
repz
jmp
les
sub
inc
pop
pop
icebp
mov
fdivrl
mov
dec
add
movsl
add
or
xor
mov
mov
ljmp
push
mov
inc
leave
dec
cmc
ds
jo
out
inc
shlb
int
aam
imul
ds
add
imul
inc
test
loopne
inc
mov
xor
inc
xchg
fists
aas
jp
lock
xchg
fisubrl
xchg
lahf
push
dec
out
lea
insl
pop
repnz
in
pusha
iret
into
jns
add
ja
pop
and
pop
jle
jle
xchg
cltd
mov
xchg
and
inc
push
xchg
scas
or
mov
pusha
notl
xchg
in
add
je
aad
mov
xor
push
fadds
bound
dec
adc
add
sub
int3
orl
add
outsl
clc
inc
mov
add
or
enter
jl
xadd
mov
add
scas
ds
rorl
push
mov
lods
dec
scas
inc
shll
pop
xor
loope
mov
mov
push
jne
or
repz
add
sub
or
mov
lret
sti
and
ss
inc
sbb
and
bound
lret
clc
lds
push
pop
jb
subl
mov
scas
out
xorl
xor
dec
test
testb
adc
mov
ja
mov
cli
shr
adc
inc
inc
or
dec
mov
arpl
shl
mov
gs
aam
push
lods
subl
xchg
scas
sbb
sahf
repz
dec
call
icebp
insb
inc
pop
fsubr
sub
aas
out
inc
fcoml
sub
out
orl
or
pushf
loopne
adc
adc
add
xchg
dec
lods
mov
cmp
jns
pop
jecxz
pop
xchg
xchg
or
pop
lea
cmp
stc
cmp
loope
into
movsl
cmp
pop
push
inc
pop
sub
sub
rcll
fldt
shl
ret
scas
xchg
xchg
loopne
movsb
jbe
test
mov
loope
ja
call
lods
or
dec
pop
loope
vandps
jne
pop
out
insb
ffreep
mov
and
dec
push
mov
sbb
xor
popl
outsl
pushf
mov
stos
and
icebp
inc
add
dec
sub
jb
mov
insl
inc
test
or
pop
mov
jecxz
xor
jmp
mov
adc
xor
jne
cmp
mov
sti
lea
int3
inc
pop
mov
jl
adc
inc
inc
xchg
add
cmpl
pop
mov
movsb
inc
es
pop
jne
not
into
dec
sub
call
jge
scas
push
mov
std
dec
mov
adc
mov
mov
sub
mov
std
fs
shrl
dec
cs
and
mov
sbb
and
cmc
mov
lcall
push
int
adc
cwtl
mov
cmp
pop
pop
xor
and
cmp
jg
sarb
cmpl
je
jle
roll
dec
scas
icebp
movsl
xor
cmp
jp
lcall
fstpl
enter
inc
out
dec
inc
mov
in
stos
js
push
or
pop
and
cwtl
add
stos
mov
xchg
jge
sbb
ret
test
sub
pop
sub
mov
repz
xchg
push
lods
movsb
repz
mov
subl
loope
jnp
or
and
and
in
ss
mov
jmp
rorb
dec
add
popf
lret
int
rorb
jne
mov
sub
aam
addb
bound
mov
inc
loopne
aad
and
mov
inc
or
mov
lock
pushf
ljmp
push
adc
lea
jno
sub
xchg
lea
xor
cmp
cli
outsb
mov
loopne
pop
jmp
xchg
adc
inc
pop
test
xchg
lds
out
popa
and
jl
cmpsl
aas
add
ds
pop
dec
clc
lret
xlat
loopew
push
icebp
mov
add
adc
adcl
jno
mov
ss
in
mov
mov
jg
lahf
pushf
and
movsb
in
jno
inc
sub
pop
and
repz
nop
cltd
or
push
aas
mov
in
insb
js
in
cld
cli
retw
mov
mov
js
pop
xor
mov
hlt
push
cld
imul
pop
xor
push
lods
daa
adc
nopl
mov
aaa
insb
sbb
lcall
movsb
imul
or
test
or
enter
xor
dec
ja
rcrl
jb
sub
psubq
inc
pusha
int
jno
pushf
mov
push
push
push
aaa
pop
xchg
sub
jno
int3
mov
or
and
add
cwtl
pop
inc
push
in
jnp
out
xchg
adc
dec
jns
jle
lods
ljmp
push
ss
xchg
or
pop
call
in
insb
cmp
sbb
jecxz
xchg
repz
cmp
adc
add
mov
dec
loop
push
cmp
das
mov
enter
xor
pusha
not
mulb
mov
cli
xchg
jmp
aad
in
inc
out
xchg
andb
sti
insl
outsl
pop
leave
jo
inc
xor
push
dec
cmp
push
pop
enter
es
sub
and
add
mov
int
loope
pop
rcl
mov
or
pop
out
in
mov
imul
or
dec
mov
jecxz
dec
aaa
push
mov
out
push
jge
test
or
jmp
or
dec
aad
jmp
push
ret
filds
pop
lds
add
sahf
cld
mov
pushf
xor
cli
xor
imul
pop
xchg
adc
xchg
arpl
mov
inc
mov
mov
lcall
cmp
sti
or
cmp
lret
mov
push
repz
cli
or
push
pop
pop
lahf
sti
andb
xchg
adc
lahf
xchg
mov
dec
fwait
xchg
xor
inc
loopne
cmp
repnz
sbb
pushf
or
sbb
out
outsl
adcb
add
mov
dec
inc
jmp
insb
pop
cs
pop
jo
xor
mov
and
inc
mov
cmp
inc
aaa
and
add
bound
or
nop
clc
loop
aam
xor
sbb
dec
xchg
xchg
sbb
push
xchg
xchg
sbb
mov
loope
out
and
xchg
rcll
lds
movl
pop
out
jmp
testl
lcall
cmpsb
mov
sbb
add
cmp
roll
fldcw
enter
mov
sub
cmpsl
addr16
dec
in
xchg
push
jne
jecxz
add
mov
xchg
sub
jecxz
xor
lods
lds
lahf
xchg
cmp
add
fidivs
ds
leave
test
sbb
movsl
push
add
pop
test
out
mov
not
dec
movsl
mov
sub
stos
popf
pop
repnz
xchg
cs
cmp
adc
ds
and
jne
mov
adc
cmp
jb
jge
int3
mov
sti
xchg
test
dec
loope
in
imul
in
pop
and
cmp
into
outsl
pop
ret
test
jne
mov
pop
or
mov
and
pop
out
dec
xor
and
aas
mov
call
push
sbb
fwait
gs
loope
or
push
mov
add
adcb
xor
sub
mov
data16
sub
out
jg
xor
jnp
push
cmpsl
test
sub
aas
mov
in
dec
popf
sub
mov
das
aad
cwtl
mov
xor
rcrl
in
imul
cmp
pop
pop
push
inc
add
cmc
cmpsb
lea
xchg
push
lret
lods
sub
imul
dec
cmp
mov
popa
je
cmpsb
cmpb
jb
dec
pop
dec
loopne
jl
sub
jl
shrl
cli
push
out
sub
aam
into
mov
mov
pusha
sar
inc
push
push
xorb
xor
or
dec
in
aad
adc
negb
pop
mov
sti
or
push
xor
lds
push
xor
xchg
mov
pop
in
daa
xchg
ret
add
sub
adc
lea
in
pop
das
je
mov
cmc
std
xchg
sub
int3
lock
or
push
push
imul
call
push
daa
jge
xchg
xchg
bound
ds
xor
fbstp
adc
sub
mov
ss
dec
sbb
lods
pop
cmpsl
pop
mov
push
aad
mov
idivl
mov
les
mov
jmp
scas
push
pop
sub
inc
push
xchg
jmp
pop
mov
addr16
cmp
or
xchg
jo
mov
mov
jno
dec
sbb
int3
add
sub
repz
aam
pop
dec
and
add
rorl
dec
pop
es
mov
inc
fstpt
insl
xlat
sub
jb
loop
aam
cmpb
xor
xchg
cmpsl
pop
xchg
jo
inc
jne
icebp
cmpsb
addr16
test
mov
outsb
fmulp
nop
scas
cli
push
rorl
push
dec
pop
hlt
cmp
fistpll
adc
push
inc
cld
cmp
mov
xchg
mov
inc
mov
mov
cmpsl
loopne
cmpsb
inc
push
lds
pop
dec
jecxz
cmpsl
in
fnstenv
test
or
jnp
pop
mov
push
scas
cli
shlb
push
outsb
jne
mov
pop
fwait
xor
fisttps
or
test
aas
bound
or
into
mov
and
repnz
js
gs
and
sub
in
push
push
decb
int3
dec
mov
fldenv
mov
jbe
and
clc
jae
xchg
push
or
add
dec
lods
xchg
push
insb
push
into
iret
arpl
rolb
je
fisubs
fildll
pushf
lods
jno
bound
lea
stos
sub
or
and
orb
push
js
push
shrb
lret
pop
aad
mov
and
insl
in
jns
pop
dec
jg
inc
shlb
lcall
xchg
outsb
das
cld
jae
shlb
outsb
xchg
sub
notb
lret
dec
sub
ret
aaa
test
and
sub
inc
mov
jp
enter
test
popa
jmp
fwait
in
jno
mov
cli
jne
ss
jl
and
add
mov
scas
lea
push
jg
mov
mov
push
or
cmp
push
imul
add
scas
stos
push
int3
jb
inc
mov
push
sahf
xor
js
pop
outsb
leave
stos
xchg
xor
scas
jge
test
or
mov
jle
inc
mov
adc
cs
or
push
or
inc
and
jno
sub
jo
andps
in
faddl
or
mov
push
mov
sub
je
mov
addb
sub
jnp
testb
inc
popa
mov
jecxz
sub
enter
dec
jnp
sbb
inc
inc
pop
ret
hlt
inc
mov
es
pop
cmp
push
outsb
test
pop
jne
les
sbb
jno
test
mov
icebp
loope
xchg
fists
dec
push
pop
out
hlt
mov
into
mov
jge
loopne
cs
mov
jg
inc
lcall
aam
adc
mov
pop
repz
sub
mov
in
test
arpl
sbb
ud0
sbb
insb
jg
cmp
addr16
push
in
es
outsl
popf
nop
out
mov
push
adcb
jno
test
clc
inc
inc
ret
in
cltd
or
push
cmp
test
dec
loope
aam
inc
adcl
and
out
loop
dec
in
push
mov
in
imulb
imul
std
add
sbb
cs
cmpsb
or
adc
mov
add
icebp
cwtl
out
repz
into
aaa
jb
pop
lret
mov
mov
add
jns
addb
jns
and
add
sbb
jb
sbb
mov
jae
rcll
push
add
das
divl
push
adc
mov
jg
add
adc
adc
das
mov
or
lds
xchg
sbb
aas
std
cmp
call
sbb
dec
pop
push
add
out
cs
inc
sti
mov
cli
neg
pop
xchg
inc
imul
or
lds
into
push
push
cmp
cmp
outsl
les
or
addr16
sbb
mov
push
ficoml
mov
jbe
xor
push
push
lahf
pop
jnp
lret
cmpsb
fs
mov
jae
adc
mov
aas
loop
mov
pop
add
inc
xor
push
in
adc
xchg
dec
or
or
xorl
xchg
frstor
sti
shrb
pop
scas
test
push
mov
in
or
test
sbb
xacquire
inc
push
xor
xchg
mov
cmp
cltd
and
push
je
into
xor
out
cmp
push
fldt
pop
cmpsl
cmp
push
mov
je
and
push
jl
xor
sub
repnz
jge
ss
stc
cmpsl
dec
mov
jns
sub
ljmp
pop
and
call
pop
clc
in
sahf
xor
sbb
faddl
jge
in
and
sub
pop
ret
arpl
aam
pop
jmp
js
pop
jp
jb
push
mov
mov
incl
pop
mov
iret
lcall
lret
adcb
pop
pop
ds
icebp
pop
sbb
outsb
lds
push
push
scas
mov
mov
shrb
add
cwtl
aaa
jecxz
arpl
pop
fcmovnbe
jl
test
aaa
loope
es
jle
jmp
ficomps
cmc
cmp
pop
dec
repnz
mov
jecxz
jne
and
fs
pusha
pop
push
inc
aam
push
fcmovnbe
movsb
scas
ret
fisttps
mov
aad
jle
xor
outsb
sbb
or
es
les
into
cmp
pop
cmp
pusha
test
jge
push
iret
test
dec
leave
int
cltd
out
mov
push
les
fildll
inc
out
or
sbb
rcrb
cld
mov
dec
mov
jge
cld
scas
or
and
inc
sub
pusha
pop
jno
or
push
or
lods
cwtl
jns
pop
into
test
aas
mov
test
mov
push
jg
shlb
add
int
inc
mov
inc
loop
enter
stos
sub
inc
hlt
xor
and
iret
pop
cmp
aas
xchg
in
xchg
popa
xor
xlat
iret
push
jno
clc
fimull
jo
xchg
je
mov
dec
lcall
scas
mov
sbb
xchg
shl
pop
clc
aad
jle
dec
mov
cli
daa
mov
dec
lods
sbb
seta
ljmp
push
push
push
dec
out
lock
and
jne
dec
js
pushl
adc
xchg
push
cmp
jbe
in
shrl
or
dec
sahf
in
out
push
lods
or
insl
sbb
addl
hlt
cmp
sbb
cmp
cmc
mov
sub
inc
sub
push
xlat
sarb
in
jge
insb
fcomip
pop
jl
sahf
push
jbe
lds
or
rorl
test
data16
ficoml
gs
ss
les
jmp
cmp
lea
fs
mov
ficompl
and
mov
mov
scas
pop
adc
outsb
shrl
push
push
test
adc
inc
dec
push
mov
cmp
inc
decl
movsl
and
xchg
imul
mov
pushf
aad
inc
pop
sar
inc
cwtl
xor
jmp
mov
mov
push
fcmove
orb
pop
cmp
push
dec
sbb
xor
sbb
loopne
dec
inc
fdivrl
sbbb
testl
jle
sbb
hlt
cmpsb
push
dec
je
jge
mov
loopne
cmpsb
aad
dec
daa
mov
sarl
cs
leave
int3
xor
pop
pop
cmpsl
stos
mov
int3
push
inc
sbb
in
loop
lock
cli
inc
in
leave
jne
repz
adc
sub
out
scas
leave
pusha
loope
outsb
mov
je
aaa
fadd
addr16
push
pop
out
inc
push
jmp
mov
rcrl
inc
out
sub
mov
jb
bound
mov
imul
aaa
ss
push
mov
push
push
fs
test
lahf
fcmove
inc
dec
ds
test
mov
das
out
in
test
mov
push
or
dec
std
jle
sbb
xor
jae
jge
xchg
js
mov
jns
adc
ret
lds
dec
out
test
jmp
hlt
mov
ret
mov
push
xchg
ja
mov
js
mov
insl
ret
fidivl
add
jb
and
movsb
or
loop
loope
data16
add
aam
jno
push
and
adc
movsb
es
pushf
fld1
int
in
mov
sarl
add
sub
dec
adc
mov
jl
sub
pushl
adc
mov
cmpsl
movsb
mov
push
push
mov
push
lds
pop
mov
ja
in
iret
jl
dec
data16
outsl
sbb
pop
in
les
repnz
push
pop
mov
in
cmc
push
mov
jbe
and
inc
or
cltd
or
sahf
insb
dec
repnz
lcall
or
dec
jecxz
cmp
imul
sahf
adc
repnz
cmp
mov
xor
imul
cmp
or
out
ja
pop
in
fwait
xchg
popf
movsb
scas
daa
inc
loopne
push
sahf
sbb
adc
sarl
and
in
dec
mov
sbbl
push
push
fld
lds
int
les
pop
gs
hlt
xchg
lds
in
imul
mov
adc
scas
cmpsb
jae
pop
jb
popa
mov
pusha
lods
mov
xchg
jbe
xchg
mov
sbb
ljmp
jecxz
sub
mov
lock
adc
push
cmc
xor
in
ret
inc
test
test
lret
dec
mov
cmp
pop
leave
arpl
lret
dec
iret
and
test
enter
fidivrl
stos
inc
sub
jns
sbb
mov
adc
sahf
pop
add
lcall
movsl
aad
movsl
inc
vmulss
xchg
stos
test
mov
or
iret
xchg
push
gs
add
sbbb
and
cli
movsl
sbb
xlat
sbb
in
xor
push
jae
cvtpi2ps
inc
sbb
add
mov
xor
int3
inc
stos
imul
mov
mov
mov
jb
test
out
repnz
jae
adc
mov
pop
sarb
bound
aad
mov
fists
cmp
test
call
and
adc
imul
loopne
incl
aam
leave
sahf
scas
jo
pop
je
jne
adc
mov
pushf
scas
jl
pop
cmc
arpl
dec
shrb
xor
pop
mov
int3
pop
cli
mov
out
push
ss
out
imul
dec
andb
mov
mov
aaa
add
dec
push
je
pusha
and
dec
in
enter
jne
je
mov
pop
jl
cmp
or
loope
xor
lret
roll
adc
scas
mov
mov
pop
dec
sbbl
shr
and
and
dec
add
outsb
jne
stos
orb
jle
xor
mov
push
and
push
popf
in
repnz
lcall
push
mov
aam
pop
jns
cmc
pop
into
add
or
jnp
pop
mov
movsl
or
mov
outsl
pop
out
dec
xchg
aas
in
xor
addr16
adc
movsb
cmp
xor
icebp
sbb
ss
addr16
ret
mov
ds
in
ss
jg
cmp
jno
ljmp
dec
xchg
push
mov
aam
jp
lds
push
lods
xor
jno
out
xor
jbe
aam
adc
mov
in
jnp
mov
cmc
mov
push
mov
pop
out
sbb
add
mov
ret
leave
pop
out
jcxz
jmp
aas
mov
les
jno
fwait
and
dec
jbe
inc
pop
fcmove
ret
sub
scas
sarb
or
push
mov
cmp
into
loope
cmp
scas
aam
sarb
mov
mov
add
sbb
push
inc
lea
mov
pop
xchg
and
int
dec
sub
jne
pop
gs
cmp
test
or
cmp
jnp
pop
xor
cltd
or
imul
inc
adc
sub
add
cmp
adc
into
fwait
adc
mov
je
cmp
inc
inc
push
mov
and
fs
and
dec
ljmp
adc
cmpsb
xchg
sub
dec
test
jne
pop
ss
lahf
nop
xor
mov
aas
mov
lcall
fsub
add
mov
fucom
add
push
jae
and
aaa
pop
cmpsb
cmp
dec
ss
movsl
movsl
fiadds
lcall
out
push
sub
jns
mov
mov
push
fnstenv
sub
push
jle
lret
clc
mov
or
stos
jl
mov
jmp
adc
add
xor
dec
inc
sti
fwait
jmp
dec
movsl
sub
clc
dec
mov
inc
mov
in
shrl
ss
lcall
inc
cld
ja,pt
in
ljmp
push
test
sub
fbld
or
fdivs
std
neg
xchg
movsb
sub
pop
repnz
jo
out
hlt
pop
iret
jl
in
jnp
icebp
add
add
shl
sub
out
clc
mov
sub
sbb
fs
lret
add
pop
mov
call
nop
add
adc
movsl
aaa
imulb
negl
or
pop
cmp
dec
enter
push
mov
divl
xchg
mov
xchg
imul
ret
add
adc
out
sbbb
dec
rcrl
shrl
popa
mov
jle
ss
jp
pop
jns
sbb
mov
loope
or
inc
gs
mov
lods
pop
jo
js
mov
fcmovne
and
xor
lods
aas
mov
loope
push
inc
call
call
xlat
or
mov
out
cmpsl
cmp
add
mov
cmp
sti
pop
insb
and
mov
jmp
sub
and
int
leave
push
mov
cli
adc
inc
adc
shlb
push
int3
hlt
or
cmp
xor
adc
jge
pop
xor
dec
mov
jns
int3
fidivs
jmp
sti
dec
cmc
rcl
xlat
mov
clc
dec
and
sar
mov
fbld
xor
mov
or
aad
jb
xor
fidivrl
xchg
lea
dec
fdivp
mov
daa
shl
icebp
outsb
not
push
sbb
adc
aad
cmp
and
aam
and
pop
fsts
mov
fidivl
cltd
jae
in
mov
pop
int
int
dec
xor
push
xor
into
loop
in
dec
int3
lret
hlt
js
sarl
icebp
mov
mov
inc
incb
inc
and
xchg
or
lds
repz
or
or
lods
mov
xchg
dec
loop
sbb
xchg
fimuls
jle
mov
jae
add
imul
inc
sbb
test
scas
fsubp
inc
shrb
jmp
cmp
int
mov
mov
sub
pop
jb
dec
add
add
int3
push
in
test
pop
xchg
mov
test
cmpsl
insl
call
lds
sbb
pop
push
fstpt
pop
fidivrs
adc
mov
mov
mov
fnstsw
iret
rcr
sub
mov
ljmp
cmpsl
and
adc
repnz
jecxz
andb
xchg
mov
movsb
cmp
imul
addr16
push
mov
xchg
fisubl
push
xchg
jnp
lahf
pop
dec
xchg
mov
pop
or
and
jb
roll
filds
lea
pushf
or
js
ret
jnp
jl
fs
incl
test
mov
movsb
dec
std
inc
cmp
arpl
rcrb
out
xchg
loope
cmp
push
jmp
sbb
gs
test
jns
jl
jmp
or
repnz
mov
push
and
out
add
adc
lea
mov
cltd
imul
and
iret
push
es
arpl
call
mov
aam
xor
orb
imul
arpl
jl
out
pop
mov
xor
pop
cmp
fdivrs
xor
xor
xor
push
popf
shl
xchg
lods
push
popf
inc
mov
enter
adc
cltd
push
or
or
and
fdivl
adc
cld
inc
mov
popa
mov
pop
mov
call
pushf
jge
mov
cmp
imul
add
addr16
push
lcall
jb
mov
enter
outsl
lcall
mov
into
gs
mov
movsl
hlt
jnp
cltd
mov
es
adcl
test
pop
repnz
out
cmpsl
push
fidivs
aaa
jg
cmc
mov
mov
adc
cmp
ret
inc
and
push
adc
lds
sub
rolb
mov
and
insb
xchg
jnp
inc
cmpsl
insb
inc
sub
loopne
cs
shrb
cltd
jne
enter
xor
mull
sahf
sbb
cmpsb
ds
and
movsb
aad
int
ret
and
data16
enter
out
push
sbb
and
mov
jg
mov
rcrl
xchg
push
mov
lret
je
pop
mov
mov
inc
dec
fisubrs
aaa
inc
in
insb
ret
pop
pop
push
out
push
jne
xchg
addr16
in
adc
mov
rcr
lods
rorl
mov
inc
int3
jne
sbb
test
cmc
mov
mov
test
add
mov
cwtl
lock
out
ljmp
ljmp
mov
jg
push
aas
enter
and
cmp
jno
in
mov
mov
loop
push
sbbl
inc
repz
in
inc
fdiv
inc
add
lock
adc
shl
leave
lea
pop
sti
ljmp
pop
mov
lods
and
inc
sarl
iret
in
adc
sub
and
pop
nop
inc
cwtl
sbb
mov
sbb
push
out
sbb
lcall
xchg
hlt
mov
mul
adc
xlat
icebp
or
insl
add
movsl
push
icebp
insl
rorb
rclb
and
movsl
ret
fiadds
pop
jns
in
imul
jo
clc
pop
mov
fxch
and
dec
sub
inc
in
jns
lods
stos
add
sbb
xchg
push
loopne
int
jne
mov
mov
cmp
stos
mov
fdivl
sbb
fwait
pop
sub
inc
aaa
cmp
sti
jg
push
cmc
popa
fsub
mov
jp
pop
repz
xor
or
add
adc
jg
push
lea
mov
push
jecxz
mov
ljmp
in
test
sbb
inc
aas
xchg
testb
ljmp
cmp
loopne
push
pop
mov
xor
int
sbb
or
or
mov
push
pop
cmpsb
mov
xchg
jge
mov
or
popa
mov
push
outsl
fisttpll
hlt
stos
push
movsb
aaa
les
mov
mov
dec
xor
test
or
xor
leave
bound
jmp
call
fs
and
dec
xchg
sub
push
lea
mov
mov
ja
xchg
push
pusha
jnp
ss
fsubs
mov
rolb
sub
fs
aam
repz
dec
icebp
aas
dec
pop
std
cmp
xor
push
cmpsb
inc
sub
cwtl
icebp
cmp
xchg
pop
jl
mov
sub
xor
add
or
pusha
cmc
and
adc
and
jb
or
or
mov
jns
out
and
sbb
movnti
ror
cmp
cs
aaa
into
push
rorb
notl
cmp
enter
pop
mov
xlat
jmp
dec
mov
outsl
jnp
pop
movsl
sbb
repnz
jecxz
jbe
dec
or
rcll
cli
or
and
lret
loop
cmpl
arpl
cmp
addr16
push
mov
sbb
mov
cmc
mov
mov
ret
notb
dec
loopne
push
xchg
jge
sub
cmpsb
sub
inc
lret
mov
sub
xchg
push
loope
hlt
fstpl
lods
test
scas
jno
in
pop
shrl
add
pop
hlt
xlat
popl
daa
ds
jae
stc
jg
xlat
sarl
lds
shll
dec
mov
xchg
addl
mov
mov
icebp
xor
movsb
mov
lret
jnp
repz
lock
fiadds
inc
test
cmp
fdivs
jmp
stos
hlt
push
xor
add
add
mov
ficoms
xchg
pop
stos
push
mov
mov
adc
add
jb
bound
mov
cmpsl
mov
inc
int3
inc
rcrl
lret
mov
add
pop
clc
cmp
scas
sub
pop
loope
mov
adc
xor
cmpsl
out
lods
andb
gs
decb
gs
adc
test
or
fidivrl
movsl
shrb
mov
and
enter
adc
pop
leave
pusha
popa
js
cltd
and
out
popf
shl
jle
out
test
push
inc
lret
pusha
pop
or
loope
out
jb
mov
add
and
xchg
xchg
pop
mov
jno
fwait
sub
insl
push
repnz
fstpt
in
and
divb
in
daa
lcall
and
loopne
aas
and
mov
adc
xor
int3
push
aam
aam
inc
pop
shrl
outsl
scas
sub
notb
and
cmp
lods
pop
jb
mov
jp
in
and
mov
add
adc
mov
pop
push
jbe
test
fisubs
or
movsl
cmp
or
ret
stc
xor
sub
add
divb
fs
and
sti
insb
into
inc
mov
pusha
jnp
movsb
aad
iret
cmpb
in
pushf
in
xor
dec
loopne
pop
mov
mov
push
lcall
sahf
out
adc
add
xchg
jns
cmpsb
nop
rcl
mov
and
mov
xor
inc
fimuls
out
inc
in
rorb
sub
sub
rclb
or
push
ss
and
ja
hlt
mov
cmp
into
fsubl
push
out
out
adc
jne
mov
cmp
add
mov
divl
mov
pop
shlb
out
repz
and
and
push
in
jle
mov
inc
dec
mov
pop
add
mov
cmp
cs
mov
adc
and
xchg
push
mov
sub
shr
repz
jae
push
sub
sbb
or
fs
pop
mov
cmp
call
cs
cmpsl
lea
push
cmp
movsl
jge
and
mov
daa
das
jge
inc
enter
xchg
jmp
cld
inc
xchg
cwtl
mov
add
clc
xor
js
sbb
cmpsl
sbb
add
mov
bound
inc
xchg
insb
lds
ljmp
rclb
mov
pop
lods
test
pop
mov
loopne
push
outsl
test
sbb
cmp
xchg
cmp
jno
insb
inc
in
push
outsl
loop
incl
mov
jb
lods
outsl
cmp
cmp
hlt
cld
lret
movsl
cmp
shrb
nop
jns
xchg
outsl
lret
add
scas
dec
push
xchg
cmp
sbb
jb
add
sub
inc
scas
jno
mov
repz
add
pop
les
icebp
es
fwait
popf
jp
out
jo
xor
push
test
mov
jge
outsl
mov
les
das
mov
pop
scas
pop
mov
jnp
mov
add
xchg
ljmp
gs
stos
pop
adc
out
xchg
add
pop
fstpt
sbb
sub
orl
call
jbe
movsl
icebp
lea
mov
std
xchg
or
sbb
lcall
xchg
push
xchg
mov
xor
xorl
mov
add
jge
in
sub
inc
lods
dec
pop
xchg
icebp
aam
dec
aas
lahf
inc
jno
ret
test
popa
fsubrl
sbb
movsl
dec
movsl
cwtl
idivb
push
mov
out
cli
out
cmpsb
out
cmpsl
and
pop
out
cmp
cmp
mov
xor
jg
aaa
and
lret
cwtl
add
ljmp
filds
imul
push
sbb
xor
lret
and
pop
roll
cmpsl
movsl
mov
fisubrl
les
sbb
sbb
or
or
cmp
nop
mov
push
test
xchg
cmp
xor
and
lea
jecxz
xchg
sti
pop
lds
mov
data16
push
in
out
cld
adc
add
inc
arpl
push
outsl
dec
jp
jmp
pusha
icebp
out
dec
pop
cs
pop
movsb
repnz
ret
xor
jnp
scas
aaa
ffreep
cmp
cli
or
jno
mov
push
out
and
mov
cmpsl
inc
and
lret
mov
bound
xchg
cmp
outsl
inc
sub
stos
mov
or
aad
js
dec
inc
push
fmulp
jb
movsb
cmp
mov
xchg
and
jae
xchg
sub
sub
xchg
inc
leave
jae
xchg
cmpsb
cmp
lahf
push
pop
lcall
add
std
stos
and
test
push
add
frstor
enter
jmp
add
pop
adc
mov
sub
push
inc
scas
lods
daa
xchg
push
xor
push
rcrl
mov
and
call
pushf
fistpl
pop
repz
dec
cld
xchg
notl
ficomps
int
inc
test
mov
outsb
fdivl
inc
adc
dec
inc
xor
arpl
mov
push
iret
jmp
dec
jmp
aam
sub
xchg
in
cmp
outsb
sub
xchg
mov
pop
repz
add
test
rcl
rorl
xor
dec
lret
loopne
push
loop
sbb
mov
andl
sbb
mov
sbb
lret
mov
mov
gs
mov
shll
jecxz
rclb
daa
mov
ljmp
js
adc
dec
sbb
inc
test
je
orb
mov
mov
mov
out
fnstenv
int
decl
xchg
or
pop
jle
enter
cmc
inc
leave
nop
pop
push
pop
jg
jl
mov
sbb
jle
int3
scas
loope
icebp
fwait
dec
aas
aad
lahf
mov
outsb
jmp
dec
loop
xlat
adc
insb
add
aam
pop
inc
hlt
scas
call
sub
inc
mov
movsl
pusha
adc
pusha
dec
lcall
sarb
lahf
xchg
sti
jp
hlt
shrb
sbb
mov
or
jge
ljmp
push
mov
jp
pop
mov
mov
jmp
lret
and
or
jae
inc
sub
mov
outsb
nop
dec
jo
mov
lock
and
sub
repz
scas
aad
sub
xor
cmp
pop
aad
xchg
shll
in
jecxz
add
adc
xchg
mov
jo
les
xor
push
rcr
ret
pop
or
or
xor
mov
shrb
stos
add
mov
leave
in
in
adc
adc
cld
mov
push
outsl
movsl
pop
sub
stos
jge
les
pop
in
std
in
test
push
sbb
or
ss
mull
or
ds
dec
dec
pop
js
dec
push
ja
adc
imul
repz
sub
fiaddl
lods
das
pushf
add
lds
mov
inc
in
icebp
mov
fstl
sub
popf
push
push
scas
and
and
mov
inc
xor
das
in
push
lock
mov
adc
fidivrs
xchg
fcompl
dec
fidivs
cmp
mov
dec
xlat
mov
aam
cwtl
cmpb
pop
addr16
leave
pop
in
and
adc
dec
cmpsb
lret
lea
adc
test
push
mov
mov
jns
das
cli
cmp
test
cmpsl
mov
xchg
pop
xchg
xchg
sti
xor
inc
mov
mov
cmpl
repz
jecxz
push
cmp
pusha
repz
cmpsb
mov
std
fldenv
cmp
dec
aad
cli
imul
add
push
cli
rcrl
loopne
icebp
pushf
jle
pop
daa
stos
pop
cmpsl
push
sub
filds
imul
out
push
icebp
mov
bound
fxtract
mov
test
nop
lahf
xor
test
push
push
rol
xor
loop
jecxz
leave
xchg
mov
pop
fstps
xor
ror
repnz
xlat
in
pop
rcll
jne
add
fwait
cltd
icebp
cmp
lods
lock
mov
pop
std
inc
mov
sub
les
and
cmove
in
add
int3
cmp
pop
hlt
and
les
mov
adc
std
mov
in
jg
mov
or
cltd
fwait
jbe
in
mov
jmp
cmp
jg
mov
fsub
xor
aaa
sub
push
lret
add
and
lret
add
pop
xor
lods
out
out
sarl
pusha
rep
pop
or
adc
aas
subl
mov
cmpsl
nop
dec
xor
insb
sarb
jg
pop
daa
lret
call
dec
push
and
rorl
ds
push
loope
rcrb
out
nop
jo
iret
pusha
test
repz
mov
aas
xchg
out
fwait
jnp
mov
stc
std
pop
cmp
adc
icebp
mov
cmp
pop
jmp
int3
pop
jo
aas
mov
mov
jnp
arpl
rclb
or
jge
test
rcr
enter
rolb
iret
sbb
inc
push
mov
in
jge
pop
pop
mov
xor
out
xchg
push
jecxz
out
adc
sub
jne
fwait
movsb
gs
arpl
stos
and
xor
popw
mov
cmpsl
and
xchg
out
mov
pop
mov
andb
ret
inc
sbb
fldenv
mov
or
in
xor
mov
fldl
fisubl
lret
jnp
ret
pop
popf
ss
sub
outsl
xor
cmp
xor
pop
mov
sub
sahf
xor
xchg
push
movsb
aas
push
lea
mov
insl
push
inc
sbb
lcall
cwtl
mov
xor
lds
repnz
xor
mov
leave
das
popl
push
sub
inc
sahf
mov
inc
and
push
pop
jno
fldt
sbb
push
inc
jge
mov
mov
mov
xor
mov
push
lahf
cmp
push
sti
xchg
cmpsb
and
aas
addr16
clc
push
pop
adc
xchg
push
leave
add
push
shl
sbb
jecxz
cmp
adc
push
push
inc
dec
dec
movsl
or
cmp
cs
push
push
or
and
dec
aam
jns
jmp
cmc
jne
repz
stos
fiaddl
sbb
cmp
iret
outsb
pop
dec
pop
jo
in
dec
pusha
loopne
imul
iret
mov
push
in
addr16
fidivl
jne
cltd
cmpsl
mov
cmp
adc
in
cwtl
sub
rcll
push
out
push
fldcw
or
dec
mov
lods
pop
xchg
lea
arpl
hlt
jnp
mov
jge
inc
lahf
pop
jg
int3
push
test
or
or
jb
pop
adc
sub
mov
adc
loop
int
sbb
icebp
shrl
push
lea
out
push
add
fsubrs
and
pop
pusha
xor
popa
js
fwait
cmpsl
cld
mov
stos
adc
js
fisubs
or
lds
std
mov
ss
pop
cmp
lret
adc
xchg
loopne
es
push
popa
push
addr16
mov
call
aaa
dec
or
fstpl
mov
xchg
lock
popf
in
or
mov
ds
lret
push
rolb
jg
jo
mov
cltd
cltd
inc
lret
mov
loop
lods
sbb
xor
test
inc
cmpsl
mov
push
add
pop
pusha
xchg
cmpsb
add
cmp
pop
jg
mov
dec
and
lret
incl
mov
jl
jge
and
sahf
pusha
cmp
xchg
add
daa
leave
and
testl
or
xor
fimuls
cmp
push
ds
push
add
mov
cld
inc
aad
adc
movsb
xchg
pop
and
testb
dec
lds
xchg
loop
ss
cli
outsb
mov
pop
lret
pop
popa
enter
xchg
and
cmp
insl
scas
xchg
jns
aam
cmp
inc
lcall
inc
xor
fsts
lods
out
in
sub
stos
repz
jae
addr16
sbb
jbe
rclb
into
rcll
xchg
test
and
leave
push
lea
push
sbb
out
xor
int3
pushf
adc
gs
or
aam
add
repnz
or
xchg
add
jb
scas
aaa
sub
inc
adc
sbb
and
push
std
sub
sbbl
add
mov
test
dec
or
sub
inc
test
or
xchg
or
fwait
out
mov
cmp
stos
jmp
ret
mov
lock
push
int
jp
xchg
push
sub
aaa
add
dec
inc
xor
xchg
data16
cwtl
pop
xor
xlat
outsb
aas
sbb
iret
fisttpll
mov
mov
xchg
hlt
mov
insl
jge
cmpsl
jno
jmp
mov
test
pop
pop
pop
xor
add
fcmovnb
orl
push
sub
sbb
dec
lock
ja
pop
push
dec
lahf
push
mov
add
mov
mov
lret
insb
iret
popa
and
fcomps
xchg
cwtl
gs
and
mov
sarl
test
pop
dec
adc
cs
pop
cmp
mov
lcall
subb
fsubrs
imull
push
mov
ja
xorb
mov
push
push
mov
jle
mov
push
lcall
popa
inc
sbb
fbstp
aaa
and
cs
std
lods
sub
pop
notb
jl
dec
add
in
jge
mov
repnz
lret
stos
gs
dec
mov
sub
and
nop
sub
ss
xchg
pop
lahf
lret
in
ret
cwtl
cmp
into
lcall
inc
push
daa
jp
movsl
jno
pop
ds
sbb
clc
in
pop
cmp
add
out
fisttpl
inc
pop
xchg
cmp
mov
iret
jg
cmp
pop
lret
mov
xor
fildl
pop
mov
arpl
push
js
add
cs
movsl
cmp
adc
das
jo
jbe
test
jl
pop
and
and
movsl
sti
enter
xlat
and
jp
jb,pn
or
pop
mov
mov
shrl
mov
and
clc
sub
nop
stos
cmpsl
pop
mov
add
inc
ds
fbstp
push
cmpsl
jmp
or
pop
dec
sub
out
sub
mov
dec
mov
and
outsl
rclb
push
mov
ss
cmp
mov
and
loop
sbb
mov
push
mov
out
sub
int3
cmp
std
dec
scas
sbb
rcrl
in
push
lret
mov
in
inc
sbb
call
pop
shrd
enter
icebp
stc
add
push
mov
fsubs
push
push
cs
pop
lea
mov
pusha
xchg
shl
les
add
add
dec
mov
inc
add
insb
out
jle
push
sbb
data16
sbbl
in
or
popa
jbe
sbb
jecxz
sahf
xchg
outsl
rclb
pop
sbb
bound
insb
out
cmc
mov
or
add
push
xor
jmp
lret
xchg
cmp
hlt
xor
test
dec
mov
sub
imul
stc
jmp
push
mov
pop
fists
es
inc
stos
mov
fwait
adc
cmp
notb
push
jne
xlat
mov
xor
or
imul
lods
stc
data16
dec
or
aaa
and
loop
stos
or
rcll
push
dec
xchg
jge
pushf
test
mov
add
inc
clc
push
movsb
cltd
stos
aad
adcl
pop
lods
xchg
inc
or
aam
ret
add
fadds
orl
in
les
pop
inc
lods
adc
ja
mov
sub
mov
lock
iret
jnp
scas
fisubrs
sub
ret
rclb
fadds
pop
nopl
push
push
mov
adc
out
das
cli
jno
mov
jb
push
fcmovb
stos
nop
std
mov
xor
iret
lret
loop
subb
aas
mov
dec
cmp
aaa
jle
rcl
sbb
or
and
loope
jbe
xchg
xor
pop
jbe
in
dec
push
push
test
ret
mov
out
sbb
imul
xor
fnstenv
test
cmpsb
mov
data16
pop
xor
sub
pop
pushw
pop
jp
sub
inc
mov
int
mov
mov
sbbl
push
or
push
fidivs
lock
sarl
push
jb
les
popf
add
or
cmp
sbb
cmp
mov
negl
and
popf
inc
pop
iret
in
add
frstor
mov
and
adc
adc
xchg
mov
inc
cmpsl
cmp
in
or
cmpsl
cmpsl
ss
inc
imul
inc
or
xor
sub
push
outsl
lds
and
sbb
pusha
stos
xor
loopne
and
ljmp
test
or
sbb
jle
fs
es
sub
xlat
jmp
fstps
and
xlat
dec
mov
fldenv
stos
cld
pop
pop
pop
icebp
cmpsb
or
mov
dec
sbb
setns
jo
jnp
inc
mov
inc
xorb
pop
mov
subl
das
les
pusha
sarl
jbe
test
enter
push
mov
aam
or
enter
movsb
dec
fs
inc
bound
push
push
inc
dec
mov
loopne
sbb
clc
subl
das
dec
pop
sub
out
adc
xchg
sub
lods
push
inc
dec
sub
inc
loopne
push
in
or
dec
push
push
lret
daa
lods
xor
jo
mov
nop
push
lods
add
cs
push
ds
lcall
notl
repz
xchg
sbb
lret
sub
in
jp
pop
add
fadds
jg
ljmp
dec
xor
pop
insl
pop
lock
push
inc
mov
xchg
jnp
mov
jle
shr
addr16
pop
push
insl
lahf
stos
orl
icebp
ret
xor
outsl
scas
imul
in
dec
lock
jl
es
loope
cli
adc
cmp
sbb
call
sbb
push
mov
lret
mov
pop
lea
cmp
out
shr
out
jmp
in
jge
incl
pop
cmp
popa
popa
imul
stos
les
jne
ret
cli
xchg
xor
adc
xlat
mov
dec
outsb
std
pop
jno
pop
pop
push
mov
jle
xlat
addr16
fcomp
js
aam
xchg
jg
outsl
push
sub
gs
mov
jge
cmp
out
jge
inc
and
movsb
movsb
push
and
fidivl
shlb
lret
mov
jae
adcb
mov
out
push
lds
popa
inc
push
mov
nop
call
sbbb
push
cli
xchg
movsl
shrl
ret
mov
stos
fcmovb
cmc
mov
dec
jnp
in
mov
mov
jg
cmp
addl
das
repnz
or
dec
es
dec
in
sbb
xor
xchg
dec
adc
mov
lret
shl
lock
mov
jmp
lods
je
mov
bnd
aas
jmp
mov
test
ret
xlat
imul
stc
jl
push
addr16
or
push
lahf
push
das
ret
and
lret
xor
pop
add
adc
std
and
sub
int
rorl
xchg
bnd
jb
cs
mov
dec
dec
sbb
mov
sahf
push
cmp
stos
pop
call
sbb
pushf
and
lea
nop
xorl
cmpsl
aas
or
jle
test
xchg
jecxz
fwait
repz
inc
shr
rcrl
call
mov
xor
das
repz
fnstsw
xor
rol
inc
jmp
dec
sysexit
popa
and
push
call
mov
sahf
stos
add
mov
test
loope
insb
sub
and
mov
repz
daa
int3
std
lahf
dec
and
lods
fwait
outsb
sbb
adc
or
jns
out
shlb
cli
ret
sbb
hlt
sbb
mov
lea
arpl
mov
loopne
jmp
das
mov
mov
xchg
fwait
add
shl
out
cmc
mov
test
adc
and
int3
fsubr
or
adc
imul
inc
xor
cmp
mov
repnz
xchg
hlt
cs
inc
jecxz
mov
xchg
ficoms
dec
fisttps
push
fisttpl
cmpsl
lock
and
shlb
jmp
push
call
mov
test
leave
sub
imul
aas
jl
xor
ljmp
out
imul
in
fbld
ret
add
pusha
cmp
mov
push
mov
jge
ja
lods
imul
jle
jo
stos
ss
lea
arpl
pop
lcall
dec
cmp
repz
fwait
xor
inc
ljmp
dec
dec
fcoml
push
and
sbbb
fildll
jle
mov
lock
xor
negl
stc
nop
pop
jecxz
orl
daa
icebp
jg
es
sbb
dec
mov
jnp
mov
push
cltd
mov
pop
inc
fstl
mov
mov
mov
int
lock
xchg
fstpt
dec
sahf
inc
lock
lods
xchg
or
int
jmp
repnz
shlb
in
test
out
or
xor
jnp
jne
push
shll
out
pushf
ja
les
dec
sarl
mov
repnz
idivl
adc
jmp
jnp
ret
sub
imul
push
add
xchg
sti
xchg
or
fsub
mov
sub
movsl
dec
cmc
mov
icebp
ds
testl
mov
je
fsubrl
xor
mov
movsw
in
sti
jnp
sub
dec
call
fsubs
test
and
gs
jae
stos
mov
fidivl
mov
das
or
das
mov
inc
insl
lret
jl
out
andb
pop
popf
mov
pop
scas
cmp
jle
mov
jb
lods
inc
sub
lods
loop
insb
js
add
ret
jnp
fimull
cmp
sub
mov
nop
lcall
and
popf
mov
jl
test
mov
mov
fisubl
push
imul
adc
cmpb
xlat
sub
aam
mov
or
into
jns
jl
aam
lret
mov
sub
and
sti
outsb
push
into
fucomip
outsb
std
jl
fisubrl
stos
in
sub
jp
mov
add
dec
or
pop
cli
ljmp
mov
das
sub
mov
push
sti
test
add
sbb
pop
add
mov
mov
sbbl
inc
push
push
int3
cmpsl
out
jae
jo
in
sbb
adc
jl
jbe
insl
mov
je
mov
js
ljmp
rolb
add
xor
fstps
mov
and
or
push
push
dec
movsl
jnp
mov
movsl
insb
add
lods
or
mov
call
mov
push
out
jp
add
cwtl
inc
adc
push
in
pushf
or
test
jae
mov
aad
xchg
jge
or
pop
and
jle
call
fcomip
outsl
adcl
enter
call
loop
push
push
in
xor
jmp
mov
mov
jle
jb
dec
dec
popf
or
cmp
repnz
push
pop
xchg
pusha
mov
mov
rorl
shlb
dec
mov
pop
int
in
sbb
imul
and
inc
fs
test
mov
ds
inc
fisttpl
cmp
or
xor
cli
gs
mov
stos
or
leave
cmp
bound
xchg
ds
fiaddl
xchg
push
xchg
or
push
and
jbe
repnz
and
sti
mov
rorb
es
adc
lret
pop
xchg
outsl
fimuls
mov
jno
mov
aad
test
aam
rclb
cmpsb
sbb
pop
loope
cmp
lods
pop
pop
sbb
repz
shrb
movsb
cmp
jae
fwait
das
sbb
inc
popf
jns
loop
dec
sub
xchg
xor
mov
mov
xor
dec
jae
aad
jno
cmpsl
ds
xchg
imul
cmp
push
xchg
mov
push
movsb
and
mov
cmp
cmp
push
cmp
enter
lea
shrd
sbb
dec
mov
orb
cs
jmp
mov
jo
dec
push
ljmp
jl
rcrl
push
lret
xor
push
inc
cmp
int3
jae
mov
add
push
xchg
pop
adc
ds
sti
dec
jge
gs
xor
adc
stos
push
movsb
repz
mov
popa
divl
mov
lock
outsl
mov
add
sbb
filds
xchg
mov
jns
xor
test
mov
movsl
addr16
mov
add
push
mov
movsb
jl
aad
push
pusha
jbe
and
pusha
test
inc
add
jbe
mov
arpl
jge
ficoml
loopne
mov
mov
sbbb
mov
and
adc
ror
cwtl
stos
xchg
cltd
mov
and
cmp
adc
cmp
jno
push
mov
push
in
push
push
scas
jge
jl
je
fdivrs
adc
ret
aaa
mov
dec
jg
fidivs
mov
mov
and
add
aaa
les
add
loope
into
and
xor
push
je
sti
gs
or
cmp
pusha
loop
test
cmpsl
jl
popf
fdivl
mov
mov
cmpsl
sbb
stos
sbb
mov
loop,pt
pop
push
lods
outsb
push
bound
ret
push
call
out
call
sbb
cmpsb
sti
add
outsb
test
push
or
and
nop
and
mov
xchg
les
and
mov
xor
je
cltd
xchg
add
push
pop
xchg
jnp
mov
fcmovnb
stos
insb
rolb
pop
add
scas
outsl
icebp
lahf
and
adc
xor
mov
das
mov
test
push
xor
or
notb
xor
add
pop
mov
ret
es
and
sub
dec
mov
cmp
xchg
mov
gs
mov
je
push
jbe
and
dec
psubsb
lock
loope
dec
add
inc
inc
ret
jae
and
dec
dec
dec
add
loopne
pop
call
push
flds
mov
xor
das
and
rcrb
mov
divl
stos
cmp
mov
scas
jbe
mov
imul
stc
sbb
popa
bound
jnp
mov
stc
cmc
cmpsb
or
push
orb
sti
fwait
js
outsl
cmp
jne
ficompl
fdivrs
out
fmulp
push
mov
xchg
mov
add
xchg
and
cltd
jne
lret
inc
cmpsb
rclb
xchg
push
or
out
out
push
outsb
adc
jmp
push
xor
inc
push
sub
pop
das
popa
cs
repnz
mov
xchg
xlat
insl
mov
lahf
pop
data16
mov
pop
cmp
dec
adc
shrl
lret
pop
dec
das
popa
mov
iret
push
jl
cmp
pushf
fisttpl
xchg
cmpsl
imul
mov
lcall
and
out
and
jbe
dec
lods
fnsetpm(287
in
sbb
mov
shr
js
fnstcw
pushf
outsb
xor
mov
pop
lods
push
movsl
fistl
stos
loop
out
inc
mov
pop
push
out
push
out
xchg
jae
sub
inc
mov
push
gs
lret
bound
pop
imul
xchg
adc
dec
mov
shr
jns
cli
sub
sarl
push
shl
repnz
inc
mov
jg
pop
mov
mov
pop
int3
js
mull
dec
pop
mov
mov
mov
sarb
imul
mov
push
imul
dec
roll
rorb
stos
shrb
repz
out
cs
mov
mov
mov
inc
enter
lock
notb
or
add
shr
test
inc
push
sub
push
mov
and
jnp
out
shl
sarl
sub
out
insb
data16
push
lret
mov
in
xorl
sbb
push
or
mov
push
xlat
stos
test
shl
xor
mov
movsb
jecxz
insl
mov
ret
cli
pop
in
mov
push
out
out
adc
mov
rsqrtps
adc
cld
daa
xchg
bound
je
fs
inc
xchg
sbb
add
adc
push
cwtl
out
or
xchg
cs
scas
addr16
push
insl
mov
jnp
cld
and
xor
jmp
sub
mov
xor
rolb
scas
ja
idiv
dec
sbb
sub
repz
mov
mov
adc
lods
std
and
push
fldl2t
jmp
out
xor
and
jb
ret
add
jmp
cmpsb
lock
add
test
inc
adcl
in
pop
enter
cmc
lcall
or
mov
scas
in
hlt
push
sbb
push
xlat
sub
dec
pop
cmp
faddl
cmp
outsb
loope
adc
sbbb
pop
in
fildll
les
cmpsl
sbb
lds
mov
or
aam
int
sbb
mov
mov
push
mov
mov
adc
pop
or
mov
xor
outsl
mov
pop
ljmp
dec
mov
pop
out
jmp
inc
sub
push
into
mov
xchg
rcrw
mov
push
mov
mov
inc
int3
xor
loopne
lock
cmpsb
push
daa
out
popa
test
jp
xor
in
add
sub
lahf
xchg
imul
std
frstor
iret
pop
mov
mov
pop
shll
outsl
inc
add
push
pop
xor
mov
rorl
cli
std
sbb
insl
jg
mov
jecxz
pop
fsubrs
mov
xor
ret
sub
mov
cvtps2pd
insl
jns,pt
cmp
push
ret
pop
adc
sbb
repnz
pop
add
out
addl
mov
push
popf
add
cmp
and
fs
pop
call
int
fnstsw
add
sbb
mov
jne
dec
or
xchg
add
movsl
stos
in
mov
out
inc
push
daa
rcrb
inc
popa
push
mov
push
andl
adc
xchg
es
sbb
inc
push
inc
mov
xor
or
add
stos
sbb
push
sbbl
mov
lret
jo
shrb
xchg
fsubrp
repz
adc
sub
scas
fdivrs
ret
inc
fimull
inc
xorl
adc
add
mov
mov
shrl
fsubrs
sbb
mov
xor
jmp
sub
and
cmp
inc
cmpb
and
push
out
inc
scas
and
inc
outsb
add
xlat
lods
fdivl
cmc
mov
push
imul
mov
out
ljmp
decb
test
test
dec
adc
mov
xchg
or
ret
cld
adc
pop
in
xchg
mov
mov
jl
cli
and
gs
sub
inc
inc
dec
test
je
loop
or
fnstsw
fldz
popa
rcrb
xchg
cmc
and
cld
push
sbb
xor
push
sub
mov
dec
dec
fistpll
cwtl
outsl
or
in
std
dec
lods
test
push
pop
jae
testl
test
dec
negl
xor
push
mov
ljmp
sbb
insl
leave
shr
je
hlt
mov
and
mov
mov
roll
and
mov
ret
jecxz
hlt
jno
scas
movsb
test
aaa
out
mov
cmp
addr16
pop
sarl
push
jecxz
pop
cmp
in
test
pop
std
xor
andb
mov
pop
mov
lea
mov
dec
incb
cmpsb
cmp
fmulp
and
push
ret
mov
nop
pop
hlt
pop
sti
mov
xchg
shrl
inc
xchg
mov
pop
repnz
cmp
js
sub
leave
int
pushf
or
mov
mulb
or
test
mov
arpl
das
jp
lret
adc
rorb
push
dec
icebp
insb
adc
insb
sub
pop
nop
int
pop
pop
mov
xchg
sub
and
pop
mov
sahf
xor
into
cmp
jl
xlat
and
lret
aam
and
ss
stos
movb
mov
lea
jns
loope
lods
mov
cmp
rcrl
ja
repnz
and
mov
pop
or
loope
pop
sar
hlt
jecxz
and
jns
aad
add
ror
jbe
outsl
test
add
dec
fisubs
push
je
cmc
push
bound
stos
push
inc
aas
cmp
ds
lret
xor
or
push
sbbl
sub
std
push
jbe
pusha
stos
cltd
test
and
or
es
dec
mov
sub
test
imul
outsb
jmp
sub
mov
inc
jae
arpl
adc
cmpsb
sti
fsubrp
lods
push
sub
mov
aaa
scas
sub
movsb
sub
inc
sbb
pushf
mov
dec
mov
sti
xchg
or
sbbl
gs
cwtl
inc
fld
pop
lods
mov
out
lods
adc
lods
das
adc
incl
cmp
add
sub
dec
pop
lea
popf
fs
lret
sti
aam
daa
push
mov
in
fs
xchg
mov
ret
repnz
mov
sub
jbe
loope
dec
mov
js
or
mov
or
mov
sbb
stos
push
jge
sbb
xor
into
cld
inc
arpl
mov
push
xor
add
int
push
inc
ljmp
aaa
fistpl
mov
pop
ss
in
mov
adcb
push
fadds
cwtl
pop
fs
jo
and
mov
mov
jp
jle
cmpsl
fistpll
inc
das
sti
fldcw
ret
dec
addb
aas
bound
sbb
repz
into
dec
shll
jb
outsb
push
mov
aaa
pop
inc
or
cs
xlat
lock
push
int3
xor
std
loopne
nop
gs
dec
add
or
jg
insl
mov
inc
pop
loop
hlt
addr16
mov
jle
rcl
pushf
mov
or
mov
mov
mov
jb
sahf
xor
popf
inc
push
xchg
js
fwait
inc
push
and
xor
inc
push
xchg
in
sbb
adc
xlat
mov
scas
add
adc
pop
and
push
out
daa
push
mov
mov
outsb
xchg
lahf
push
mov
loop
xchg
mov
scas
cmp
loopne
mov
daa
idivl
lock
daa
push
mov
push
outsb
adc
mov
sbb
dec
mov
jmp
sbb
push
inc
mov
pop
mov
mov
dec
in
sarl
inc
repnz
push
lods
sarb
jecxz
adc
jb
movsb
mov
push
cmpsl
inc
je
cld
cwtl
mov
or
inc
leave
clc
scas
test
mov
insl
ret
jle
xor
popa
sub
add
inc
cli
xchg
mov
jne
sbb
push
es
mov
dec
outsl
mov
adc
inc
hlt
std
test
mov
xchg
jbe
adcb
movsl
fldpi
mov
inc
fiadds
push
call
fdivr
outsl
push
addl
or
sbb
mov
js
jg
ljmp
inc
popa
enter
enter
adc
xchg
aam
leave
xor
insl
lds
pop
outsb
imul
sub
shl
push
pusha
leave
out
xchg
jnp
das
adc
pushf
pop
icebp
cli
add
js
pop
aaa
push
mov
ljmp
inc
push
sbb
jge
xchg
mov
bound
leave
and
hlt
sbb
xchg
subl
call
mul
jnp
sbbl
ljmp
pop
popa
xor
xor
dec
mov
popl
ret
push
std
dec
in
xchg
mov
leave
adc
jg
in
push
inc
and
sahf
les
lret
jbe
add
repnz
subb
push
jl
mov
jo
add
mov
movsl
mov
dec
jle
pop
pop
out
xchg
and
mov
arpl
cmp
out
insl
inc
ss
sbb
jg
inc
test
jge
mov
xchg
adc
dec
sahf
mov
ja
mov
or
inc
jne
movhlps
ds
push
xor
dec
xchg
lods
dec
loopne
dec
add
negb
hlt
in
xchg
dec
mov
xlat
mov
es
xchg
jmp
or
in
mov
cmc
mov
cltd
push
or
enter
idivl
mov
and
inc
add
aas
movsb
and
pop
mov
inc
sub
test
dec
mov
adc
aas
cmc
mov
or
leave
adc
mov
pop
lcall
mov
cmp
push
imul
fsubl
jmp
aas
sbb
jns
or
es
data16
jl
sub
call
lods
jg
ret
roll
mov
ficoms
das
lds
jg
gs
lret
outsl
jnp
ret
adc
repnz
xchg
insl
jp
adc
sbb
mov
pop
imul
daa
and
mov
call
lock
pop
xor
jg
xlat
data16
sub
outsl
push
movsb
jb
mov
imul
fcoml
cmp
test
arpl
pop
sub
pop
xor
xor
xchg
xchg
popa
cwtl
adc
hlt
adc
dec
or
daa
lret
bound
insl
push
and
leave
lea
insl
xchg
cmp
imul
xor
sbb
jge
into
sub
mov
dec
movzbl
loopne
push
icebp
test
xor
push
mov
add
out
jecxz
sub
cs
xchg
sub
inc
inc
movsl
lds
add
mov
sbb
or
jecxz
jns
cli
arpl
jge
faddl
mov
daa
imul
inc
mov
adc
push
mov
das
inc
inc
fdivrs
mov
imul
dec
jno
shlb
pop
test
js
xchg
es
adcl
imul
int3
jae
mov
pusha
mov
jae
das
adcb
jg
push
ret
mov
push
fimull
cli
mov
fdivrl
adcl
or
lcall
lods
xor
push
scas
and
sbb
mov
or
test
inc
fsub
inc
sahf
cltd
push
mov
ss
cli
push
psraw
dec
cmp
hlt
aaa
fidivrl
jmp
dec
jecxz
xchg
add
push
std
xchg
and
dec
cmp
inc
sbb
inc
add
pop
aam
shr
test
scas
cmc
outsl
and
pop
mov
xchg
mov
push
arpl
subb
aaa
fsubrs
lcall
es
fistl
sbb
jno
ljmp
pop
les
pop
mov
fsub
ja
jmp
and
in
mov
inc
mov
add
mov
cmp
xchg
cmpsl
cwtl
pop
cmpsb
cmp
pop
std
les
ss
mov
and
and
inc
and
pusha
jae
mov
pop
je
fdivrs
add
adc
xor
and
rorl
sar
roll
and
fldenv
sbb
and
lds
jns
imul
dec
jo
shlb
push
push
cmpsb
daa
lds
dec
sub
test
out
movb
fildl
mov
jmp
jae
lret
mov
pop
sub
repz
mov
shrb
sub
addl
dec
adc
cld
xchg
cmp
xchg
sbb
jmp
pop
fistl
mov
cs
fidivrl
ds
daa
cmp
xor
jmp
notb
xor
in
imul
push
bound
jne
cmp
sahf
cmp
imul
scas
pop
stc
xor
push
idivb
addl
scas
in
sbb
jle
xchg
loopne
popf
lea
orb
xchg
dec
cmp
mov
popa
lea
lock
out
xchg
gs
fwait
mov
mov
or
popa
sbb
lahf
add
cmpsb
xchg
xchg
adc
add
add
mov
xor
jo
push
inc
xchg
mov
sbb
add
shr
test
insl
mov
fcomi
inc
mov
pop
jb
ljmp
mov
loopne
xor
xchg
push
mov
inc
outsb
std
cli
mov
mov
daa
xor
xor
les
fsubrs
dec
adc
in
mov
cmp
arpl
icebp
dec
roll
xchg
cmpsb
dec
mov
aas
fucomip
pop
scas
aad
in
popf
ss
xchg
push
pop
shlb
jge
in
imul
jl
out
inc
out
push
in
inc
jne
xor
push
outsl
mov
mov
and
out
mov
andl
and
mov
mov
jne
add
dec
fdivl
jb
fistpl
mov
fwait
lret
adc
or
cmp
dec
scas
inc
fsubp
push
rcrb
mov
js
insl
daa
mov
or
mov
xchg
adc
and
mov
cld
lcall
push
out
test
fwait
inc
dec
outsb
loope
popf
push
mov
pop
sbb
pop
out
ret
or
jns
or
bnd
and
nop
daa
dec
sub
aas
or
xor
add
cmp
stos
jl
aad
xchg
in
out
shrb
subl
pop
lock
cmp
shrl
push
mov
xor
fistpll
dec
xchg
stc
push
pop
iret
scas
push
bound
xlat
jmp
hlt
js
adc
sbb
pop
push
and
das
jne
mov
mov
add
hlt
loopne
aam
mov
leave
fstpt
lahf
imul
mov
sar
dec
es
cmp
movsb
xchg
xor
lret
test
pmaxub
mov
test
outsl
inc
xor
adc
in
cmpsl
call
or
lds
inc
push
xchg
cmp
sahf
add
mov
scas
adc
aas
push
pop
cvttps2pi
pusha
xor
shr
mov
dec
mov
mov
push
adc
pop
dec
cli
testl
adc
push
fldl
push
xor
fisubrl
push
cld
hlt
push
and
shrb
push
popa
cltd
test
vmaxss
rcrl
lds
jae
lds
xchg
inc
pop
scas
mov
sub
push
dec
dec
inc
mov
cmp
jle
inc
pop
aad
outsl
add
xor
adc
mov
mov
add
mov
loop
pop
adc
xor
pop
repnz
jge
sbb
jns
cmp
sahf
test
dec
rcl
mov
sub
sahf
fs
sub
gs
inc
out
jb
fcmovnb
xor
mov
mov
xor
fbstp
mov
mov
lret
cli
sub
push
inc
arpl
push
lret
hlt
inc
mov
repnz
push
cmp
mov
stos
add
sbb
lret
add
arpl
mov
fnstenv
iret
push
pushf
test
mov
push
cmpb
xchg
jl
xchg
repz
cli
mov
in
insb
in
or
cld
lahf
leave
mov
out
rorl
mov
stos
insl
inc
inc
bound
dec
bound
sbb
mov
jnp
or
sub
cmp
scas
ljmp
xor
clc
lsl
fidivs
pop
and
testl
xchg
jp
inc
push
rorb
fmull
leave
test
dec
pop
scas
jg
sub
push
dec
lods
dec
stc
push
pusha
sbb
push
mov
bound
jecxz
jl
pop
repnz
cli
xchg
adcb
inc
cmp
xor
lahf
add
adc
cmp
ljmp
aaa
mov
stc
je
cwtl
stc
ds
repz
and
inc
add
ja
mov
mov
test
mov
lret
imul
push
cmpsb
fwait
neg
ss
sbb
cmp
dec
jno
sub
out
js
mov
les
pushl
jo
in
std
pop
call
fwait
ljmp
jno
or
dec
loope
jns
andl
pop
jbe
pop
cmp
lret
mov
inc
int
jb
dec
cmp
pop
lods
pop
inc
or
xchg
imul
scas
sub
adc
cmc
out
mov
sbb
int3
in
cmpl
xchg
sbb
add
loopne
scas
jecxz
adc
nop
enter
jnp
mov
aam
and
out
orb
sbbb
xchg
mov
or
adc
sbb
int3
dec
cmc
push
cmp
xor
sahf
xor
vpcmpeqd
int3
pop
push
mov
pop
icebp
cmp
jmp
xchg
dec
inc
dec
dec
xor
jmp
lods
loope
data16
pop
mov
aad
aaa
add
mov
xchg
lahf
inc
sbb
xchg
in
lahf
add
mov
aaa
xor
popa
ljmp
stos
and
pop
xchg
mov
inc
cmp
mov
outsb
jmp
dec
pop
sub
rcrl
popf
mov
inc
jnp
or
xor
mov
and
sbb
mov
addr16
or
push
stos
rcl
pusha
xchg
popf
push
cmc
adc
cmp
scas
in
dec
rcrl
rorl
in
inc
insb
cmp
sbb
cmp
mov
jl
jl
xchg
push
inc
inc
or
and
test
ret
lds
xor
mov
int3
outsb
sarl
cmpsl
and
jl
ja
pusha
cmp
mov
mov
enter
in
mov
testl
mov
outsb
jno
push
xor
rcrl
xchg
out
dec
mov
mov
addr16
shlb
test
jge
mov
adc
data16
fbstp
mov
jl
cmp
inc
inc
in
cwtl
insl
imul
jo
iret
gs
sysexit
lea
orb
fwait
adc
push
daa
mov
fidivs
jmp
cli
add
sub
iret
sbb
add
call
clc
in
inc
sahf
ljmp
shl
aad
push
mov
cmp
test
ss
fdivs
add
xchg
or
rorb
js
mov
fdivrl
pop
arpl
sti
scas
daa
push
dec
fdivs
lret
add
scas
add
and
xchg
adc
je
iret
xchg
popf
lcall
in
ja
nop
inc
sti
add
lods
jp
push
fldl2t
aas
xchg
ret
into
outsb
jne
sub
lahf
push
ret
pusha
sti
push
call
jle
and
pop
lret
dec
sahf
jno
or
mov
sahf
or
xchg
cmp
pop
repnz
daa
mov
bound
jo
shrl
push
aad
test
pop
out
fwait
stos
push
movsl
push
repz
jnp
shr
test
and
xchg
jne
adc
add
cmp
xchg
push
lods
subl
mov
xor
pusha
pop
leave
sub
sub
es
in
jmp
cmp
mov
clc
adc
dec
xchg
dec
and
into
enter
ss
out
xchg
popf
mov
sbb
sti
lret
pop
lock
jo
stos
jmp
mov
add
testl
add
sarb
aam
addr16
fmuls
pop
scas
mov
outsb
xor
shl
movsl
mov
shlb
popf
data16
fmul
cmp
mov
pop
mov
cmp
pop
sti
lea
loope
fnsave
outsb
inc
lret
dec
push
mov
dec
mov
jp
mov
popa
rorl
cmp
cld
add
xor
inc
int
xchg
xor
xorps
xchg
arpl
scas
push
inc
push
xchg
add
inc
cmc
arpl
cmp
arpl
push
or
mov
ljmp
dec
mov
mov
mov
mov
pop
fdivrl
out
sbb
inc
cmp
in
andb
push
mov
mov
rol
les
xchg
dec
sbb
and
scas
cmpsb
mull
mov
lock
roll
fisubrl
in
pop
dec
adc
test
shlb
cmpsl
cltd
rol
std
or
das
or
les
mov
jbe
shrb
xor
cmpl
sub
int
or
jne
add
mov
jno
scas
pop
in
lret
mov
xchg
int3
mov
push
jno
stos
dec
roll
clc
mov
in
mov
xchg
ljmp
and
and
es
sub
outsb
add
enter
test
cmpsl
and
aaa
mov
mov
sbb
mov
push
mov
xchg
jp
pushf
add
repz
nop
sbb
imul
lcall
lock
pop
mov
lcall
mov
jge
mov
nop
ss
dec
pop
and
mov
lcall
leave
mov
mov
jns
loop
inc
sbb
mov
je
fsts
push
aaa
cs
std
loop
push
push
imul
mov
fsubs
xchg
sub
pop
das
popa
cmp
cmp
stc
aad
repz
out
xchg
cmp
out
pop
mov
pop
int3
cmp
lahf
adc
and
mov
dec
jb
lods
cmp
jnp
into
movsb
stos
ficoms
in
push
aaa
sub
fdivs
das
cli
xchg
sbb
sbbl
inc
dec
out
sbb
xchg
jno
adc
mov
insb
leave
in
mov
sbb
mov
mov
pop
cmc
and
test
lds
js
rorb
adcl
lret
mov
mov
punpckhdq
je
mov
jmp
cmpsb
mov
stc
jno
and
sbb
inc
xchg
sbb
jp
dec
cmp
mov
stos
and
imul
insb
movsb
mov
sbb
xchg
mov
add
sbbl
loop
mov
add
sub
arpl
xchg
sbb
test
pop
mov
pop
cmp
push
pop
movsb
aad
add
fnstenv
xchg
mov
stos
adc
popl
idiv
stc
mov
or
cmp
in
add
fadds
ret
js
adc
icebp
cltd
pop
cmp
adc
aaa
inc
mov
mov
bound
sahf
pop
out
and
dec
cmp
jo
pop
sbb
in
push
sbb
mov
sbb
push
das
mov
jp
jmp
stos
fs
sub
xchg
jbe
into
outsl
stos
xchg
xchg
or
cmc
add
inc
push
fldenv
movsb
sbb
xor
and
sbb
pop
lods
mov
fwait
outsb
inc
xchg
ss
dec
jne
pop
cs
imul
mov
push
xchg
add
push
mov
call
xchg
loope
ljmp
pop
cmc
jmp
xor
mov
arpl
dec
sbb
and
out
jnp
lock
and
jecxz
cli
jb
je
xchg
jae
push
loope
jbe
js
mov
aas
xchg
adc
xchg
mov
lods
xlat
lahf
gs
clc
mov
jmp
jmp
push
not
adc
fwait
push
sub
lahf
loope
cli
sub
test
push
push
rcrl
add
sub
in
add
xchg
mov
dec
jo
push
mov
loope
inc
fidivrl
xchg
ljmpw
decl
cs
adc
pop
popf
fdivs
inc
ds
xchg
sahf
cmp
cmp
out
je
pusha
sub
jp
jmp
lods
jg
mov
iret
inc
int
mov
stos
and
inc
int3
xchg
fldcw
in
mov
test
lods
cmp
nop
push
stc
dec
std
push
inc
idivb
cmp
fs
ljmp
mov
xlat
sbb
aam
lock
mov
mov
fadd
inc
gs
mov
inc
adcl
sbb
pop
out
pusha
std
data16
cli
inc
inc
std
nop
std
fstpt
mov
inc
sbb
adc
je
sahf
and
and
pop
xchg
std
cltd
idiv
shr
adc
je
xor
jg
out
gs
mov
pop
stos
mov
mov
dec
aam
add
fidivs
mov
int3
jo
lods
cmp
outsl
jnp
inc
push
sarl
sub
cmp
fcmove
std
pop
mov
cld
ss
mov
sub
or
test
dec
or
iret
fcoml
mov
add
add
mov
cwtl
das
insb
mov
mov
inc
push
lretw
mov
or
shlb
xor
in
jo
inc
cltd
sbb
adc
mov
out
fnstsw
je
add
mov
mov
pop
sub
and
mov
xor
fstl
sahf
nop
lret
icebp
mov
lods
mov
push
sbbl
fists
aam
mov
pop
pusha
cltd
xchg
test
loopne
adc
add
int3
pop
cltd
arpl
int
popa
xlat
sub
dec
and
mov
jp
push
cmpsl
jae
add
pushf
jb
daa
ds
imul
lret
icebp
adc
push
sub
pop
mov
lds
xchg
enter
add
push
adc
add
inc
push
out
test
jae
fldl
xor
idivl
sahf
dec
movsb
inc
aas
cmpsb
lock
in
fnstenv
push
mov
pop
clc
xor
push
push
fcmovu
pop
xchg
push
fcomps
test
sbb
xor
ljmp
pop
data16
xor
mov
add
xor
xlat
in
xchg
mov
gs
aaa
jp
cli
push
lcall
sub
sahf
fcompl
mov
mov
mul
sti
clc
sbb
sbb
notb
decl
fs
xor
jmp
dec
and
add
push
lock
leave
cmpl
cmp
les
xchg
lods
sub
jmp
ja
orl
int
add
insb
cltd
nop
xor
daa
aaa
int3
xchg
les
sbb
stc
into
das
sub
push
jae
push
or
sbb
xchg
push
mov
mov
scas
das
xchg
xor
or
pop
inc
popa
clc
xchg
push
ja
call
stc
xchg
push
in
inc
pushf
cmc
int3
ret
or
test
loop
cmp
sub
aaa
jle
add
sub
loop
push
out
push
cmpsl
adc
or
mov
xchg
imul
test
dec
mov
ja
inc
fsubrl
mov
sub
pop
das
sahf
adc
lret
inc
sti
mov
call
xor
xacquire
mov
jb
repz
popa
movsl
cmp
push
rclb
bound
fnstenv
jae
mov
notl
dec
nop
enter
xor
test
lea
in
mov
je
test
mov
lret
cmc
mov
xor
pop
mov
outsb
pop
pop
and
xor
repz
std
pop
jle
popa
and
jmp
xorl
je
stos
jle
cmpsb
cmp
je
iret
data16
mov
cmp
pop
in
jo
add
and
or
int3
decl
mov
add
push
push
divl
aad
jae
cli
add
lcall
aas
mov
pop
fld
xlat
lods
mov
push
icebp
sbb
js
in
sahf
sub
iret
push
imul
movsl
cmp
out
divb
loope
iret
xchg
cmp
enter
jge
push
xlat
lret
rcl
push
iret
fwait
mov
addl
es
bsf
je
xor
shlb
jg
clc
mov
lret
inc
ficoms
sti
push
cmp
neg
adc
adc
cwtl
das
fxch
cmpsb
popf
stc
inc
call
test
lret
mov
cltd
pop
imul
or
fnstsw
push
cmp
lods
ja
xlat
out
stc
or
in
test
sbb
dec
push
or
sub
mov
pop
mov
inc
jp
cmp
sbb
dec
outsl
mov
sub
mov
in
loop
test
mov
add
sub
pop
repnz
and
adc
dec
mov
cmp
xorl
and
xor
jle
and
adc
int
pop
or
rorl
push
iret
or
jg
fucomip
jns
adc
lret
cmp
cwtl
jg
pop
scas
pop
mov
stos
mov
popf
xor
stos
inc
out
pop
xor
scas
int3
std
xchg
stc
cmpsl
add
daa
mov
scas
xchg
sub
mov
jmp
aas
iret
xor
lret
test
loope
les
cs
rolb
stos
cmp
push
xchg
int3
mov
xor
bnd
xchg
pshufw
cmp
inc
jl
shrb
pop
int3
inc
leave
cmp
jns
adc
sti
xchg
inc
push
pop
shlb
cmpsb
lock
daa
mov
ljmp
push
add
xor
sub
or
mov
sahf
lret
rcrw
and
xchg
add
sub
lods
inc
icebp
xchg
push
cmpb
dec
push
test
insl
pop
aaa
xchg
add
cld
jmp
jb
mov
and
jns
icebp
inc
aad
nop
mov
pop
cmp
nop
dec
cmp
lret
cltd
xor
add
push
and
inc
push
jae
pop
addr16
or
leave
enter
push
mov
or
out
lds
sub
popa
cmc
mov
lahf
xor
lcall
dec
data16
lds
pop
jno
pop
mov
dec
loope
jmp
rorl
stc
insb
insl
loop
fiadds
xchg
pop
jl
dec
mov
andb
push
push
rcll
adc
xchg
lock
inc
or
mov
pusha
inc
pop
xchg
push
test
jb
es
xor
adc
rolb
test
inc
inc
adc
sti
and
xor
xchg
inc
inc
icebp
fidivl
fcomps
jae
cwtl
inc
test
cld
mov
and
fdiv
mov
cmp
shr
out
jecxz
je
mov
int3
jmp
xchg
ja
les
imul
mov
sbb
push
or
outsb
jns
push
or
das
jp
pop
adc
sbb
add
mov
test
pop
je,pn
pusha
cmp
dec
out
dec
jg
jnp
in
pop
pop
push
adc
lret
add
les
xchg
pusha
push
sbbl
inc
xchg
add
sbbl
lahf
mov
adc
out
loop
rclb
arpl
into
xchg
adc
stc
or
pop
jmp
inc
xor
in
inc
popa
loopne
push
scas
rolb
ja
xor
dec
push
push
lods
rcr
aam
push
lret
jae
ds
mov
dec
and
xchg
iret
das
enter
push
mov
jb
pop
mov
stos
xchg
in
ds
adc
int
pop
out
sti
sbb
enter
jmp
and
gs
cmp
in
xchg
in
das
andb
push
xlat
std
jp
add
test
jns
and
dec
mov
push
sbb
lea
adc
into
fcoms
inc
fidivrs
mov
mov
dec
jge
aaa
pop
ljmp
cmp
rclb
mov
xchg
xchg
mov
adc
mov
mov
inc
stos
jns
push
fxch
jg
les
testb
mov
lods
cmp
je
adc
lods
arpl
iret
dec
dec
movlps
shlb
outsb
sub
sahf
sub
dec
or
cli
cmp
aad
mov
pop
jmp
add
aas
and
dec
cld
jae
inc
sub
shlb
iret
push
popa
fucomi
add
and
push
pop
push
cmc
jg
shl
sar
cltd
add
sub
sbb
adc
cmp
jmp
sub
or
xchg
add
push
mov
and
clc
inc
popa
sub
mov
sti
dec
mov
adcb
push
push
out
inc
sub
mov
push
and
xorb
sub
sti
sbb
shl
pop
out
es
cwtl
add
cld
jbe
add
cltd
or
dec
jecxz
loope
rcll
push
and
pop
pop
pop
mov
pmulhw
notl
add
sub
jnp
test
popf
xchg
adc
pop
pop
mov
push
stos
or
and
lret
xchg
inc
popf
xchg
mov
stos
push
cs
pop
jb
out
test
dec
sub
aaa
pop
je
jg
imul
shll
and
shrl
sbb
icebp
xchg
cld
adc
in
sbb
subb
loope
notb
dec
out
dec
pop
dec
xchg
mov
pcmpeqw
xchg
add
sub
scas
fidivrs
daa
xchg
std
mov
xchg
inc
add
je
test
cltd
jnp
je
flds
add
into
gs
jp
cld
jmp
in
ja
mov
cmp
adc
mov
movsb
push
sub
addr16
bnd
cld
fdivs
lret
push
cmp
jge
push
out
daa
stos
cmovl
mov
cmp
add
sbb
nop
jno
scas
xchg
mov
mov
jns
xlat
cmp
xchg
push
pop
push
popf
dec
outsb
add
push
sbb
xchg
xor
push
mov
test
xor
adc
jmp
push
sti
jmp
add
lock
ret
and
sbb
aad
repnz
daa
test
add
in
push
mov
cmpsl
sahf
stos
lds
cld
lods
add
push
push
in
lea
add
enter
pop
leave
icebp
dec
cmpsb
ljmp
cli
es
pop
push
lahf
jbe
xchg
and
inc
in
nop
sbbb
into
call
mov
ss
sub
fpatan
mov
inc
out
out
std
ss
push
mov
or
ss
jb
mov
dec
or
dec
cmp
outsb
add
push
cmpsl
or
adc
mov
or
cmp
lds
pop
cmp
shrl
inc
pop
jne
mov
pop
gs
nop
inc
test
ds
add
sbb
test
push
hlt
addr16
jecxz
call
sbb
mov
inc
sub
jne
add
dec
enter
jle
mov
iret
ljmp
rcrb
into
or
xor
data16
mov
or
loope
cmp
leave
inc
jo
lods
ja
fiadds
xchg
je
jb
mov
pop
mov
roll
sub
lcall
cwtl
das
fbstp
xor
pop
pop
in
scas
aam
pop
jg
js
jg
or
stos
xchg
lret
stos
pop
stc
icebp
pop
sub
xchg
and
pop
mov
inc
fmull
sarb
mov
arpl
daa
mov
inc
inc
loopne
pusha
notl
cmc
add
icebp
jecxz
in
push
jl
mov
scas
jb
mov
or
mov
cmp
ret
sbb
add
or
test
jnp
mov
xchg
pushf
loop
mov
inc
out
cmp
in
adc
cltd
stos
cmpsb
je
imul
mov
mov
int
xor
fcmovb
cmpsb
in
sti
push
ljmp
icebp
adc
and
lret
push
test
mov
push
fistl
loopne
dec
loopne
sub
aas
push
pop
jo
adc
cmp
xchg
sbb
mov
jecxz
pop
pushf
adc
ss
xchg
data16
cmp
addr16
and
adc
dec
outsl
cmp
jg
push
push
ja
or
arpl
fsubl
mov
loopne
xor
or
clc
mov
sti
xchg
int3
pop
std
pop
aas
sbb
sbb
insb
notb
daa
xchg
pop
push
popf
mov
adc
cmp
fwait
leave
push
shr
inc
pushf
sub
leave
and
sbb
xchg
dec
mulb
or
test
xor
mov
js
cltd
stos
and
lds
sub
cmp
sbb
and
aam
ja
les
rorb
push
adc
dec
xor
js
mov
jp
out
push
into
xor
mov
sbb
ja
pop
jno
sbb
sbb
arpl
insb
js
push
addr16
ja
xlat
imul
inc
mov
pop
loope
rcrl
jle
add
std
jg
and
xor
mov
out
push
sbb
inc
stc
mov
loopne
lods
int3
and
movsl
inc
in
ss
sti
out
pusha
sbb
loopne
add
pop
push
mov
fstpt
out
lret
pushf
xor
and
cmpsl
add
mov
inc
scas
sbb
cmc
dec
pand
nop
sub
sub
mov
push
ss
cwtl
sahf
jnp
jmp
inc
pop
mov
push
push
adcb
addb
push
rcrb
movsl
inc
inc
xchg
xlat
mov
out
into
xchg
pop
loop
push
aas
push
test
jmp
jne
pop
pushf
fldl
out
xchg
mov
jbe
fwait
add
mov
imul
mov
and
sbb
outsl
in
mov
push
push
xlat
repz
mov
mov
mov
movsb
pop
in
sbb
repz
xchg
jns
lods
jns
pop
in
in
cltd
insb
stos
xchg
outsb
cmpsb
lcall
mov
sub
and
pushf
imull
outsb
cmp
sbb
lahf
sbb
addr16
fists
mov
in
mov
push
add
xor
into
clc
jb
push
and
lock
fisubs
rorb
inc
mov
mov
and
xor
fsubrs
xlat
outsl
sub
pusha
xchg
and
repnz
inc
and
inc
inc
inc
push
push
jbe
mov
cli
pop
cmc
movsb
es
adc
fnstcw
ret
adc
cwtl
inc
repnz
jmp
loop
jge
add
push
push
int3
mov
and
rorl
cmpsl
xor
adc
pop
test
cmp
sbb
jns
movq
ret
iret
push
xor
loope
repz
mov
inc
scas
iret
pop
pop
mov
push
dec
notb
xchg
aam
pop
sub
pop
inc
xlat
cmp
or
sahf
inc
or
nop
repnz
xchg
ljmp
lock
or
jle
jecxz
std
sbb
pop
and
scas
sarl
mov
mov
push
mov
xlat
xor
sbb
sbb
adc
xchg
mov
cld
sbb
cmp
ret
push
test
jb
xor
shlb
ds
jb
push
mov
jmp
and
stc
adc
in
jg
jns
cld
loop
divl
mov
or
adc
incb
xor
sti
pop
mov
cmpsb
hlt
scas
into
enter
shrl
test
or
push
pop
sub
cmp
add
imul
divb
or
jle
int3
jge
repz
jno
push
cmp
mov
sub
xchg
aam
pop
mov
jne
jle
lds
push
mov
push
and
data16
xchg
pop
popf
cmp
mov
jae
in
aaa
aaa
sub
xor
aad
mov
dec
push
fdivrs
enter
push
mov
xor
xchg
jmp
aas
mov
mov
outsl
daa
inc
ret
hlt
push
inc
sbb
lcall
jnp
lret
mov
mov
cmp
icebp
int
pop
divl
lods
push
imul
es
xchg
add
jnp
aad
adc
dec
shlb
xchg
xlat
sub
mov
push
or
cs
sbb
and
aas
mov
pushf
add
das
pusha
push
jo
cmp
stos
hlt
jae
adc
loopne
push
stc
and
mov
clc
leave
nop
jl
and
bound
leave
pusha
sarl
call
lods
popa
stc
add
lock
xchg
cmp
dec
and
push
gs
hlt
push
sarl
lcall
inc
pop
imul
aas
cmovno
xor
aad
inc
pop
enter
add
xchg
mov
int
pop
xchg
repnz
leave
lcall
sub
push
and
sbb
mov
jg
mov
mov
jbe
push
aam
and
add
xor
jae
out
lahf
push
sti
nop
mov
inc
sahf
cmp
push
sub
dec
add
mov
sbb
pop
in
loop
jle
out
pop
int3
lods
push
sbb
xorb
cmp
and
hlt
and
in
mov
and
xchg
dec
xlat
push
std
in
loopne
cmp
jne
je
out
xorl
lret
cli
jne
es
jp
imul
pop
add
fs
cltd
xor
jp
pusha
mov
push
fdiv
mov
dec
repnz
push
roll
adc
dec
lods
jp
dec
inc
inc
add
mov
cmp
sbb
push
enter
mov
insl
subb
mov
jne
xor
pop
cmpsb
das
adc
mov
jno
sbb
int3
push
jp
add
add
movsb
cltd
sub
pop
fidivl
and
fisubl
js
dec
push
sahf
inc
rcr
and
xor
lea
inc
lret
xchg
xor
dec
stos
add
pop
xor
in
data16
mov
push
je
lea
jno
xchg
fidivs
adc
and
adc
fimuls
add
in
mov
in
jns
mov
add
adc
mov
fstps
cltd
jmp
jmp
jle
leave
mov
sti
movsl
hlt
adc
xchg
pop
scas
dec
repnz
data16
cmp
push
fs
push
jbe
lret
push
cld
gs
out
pop
mov
addl
hlt
lahf
push
and
cmpsb
xchg
mov
jecxz
aaa
push
pop
push
fbstp
jb
or
andl
sbb
fwait
scas
xor
xchg
lods
pop
pop
add
xor
test
cld
pusha
pop
orl
jnp
jp
sbb
in
fdivrl
add
scas
dec
pop
dec
pop
push
sub
inc
iret
cld
int
sub
pusha
repnz
cmp
or
ja
call
dec
test
call
aad
cmpsb
popl
arpl
les
mov
aas
ret
xchg
push
cmp
sub
xchg
sub
or
pop
repz
dec
xchg
adc
clc
jg
cs
inc
xor
pop
xlat
test
mov
jecxz
push
scas
jp
or
insl
push
inc
mov
fdivrl
into
or
dec
lahf
loopne
xchg
in
push
mov
nop
movsl
mov
mov
out
pop
int3
mov
add
mov
or
jp
add
popf
mov
sbb
sbb
adcb
lret
xlat
mulb
pop
xchg
sahf
pusha
jg
cmp
sbb
repz
sahf
in
jl
pop
pop
mov
mov
push
adc
or
inc
push
xor
lret
jl
pop
ja
shlb
jge
rcrb
mov
loop
ds
les
mov
mov
mov
mov
sti
and
pop
cld
push
mov
imul
push
fsubrs
mov
cmp
mov
jl
and
jo
les
mov
cmpsl
xlat
aam
es
clc
push
cltd
imul
or
or
mov
ljmp
inc
lea
mov
arpl
fs
sbbl
fildl
add
lods
cs
fdivrp
or
jmp
or
mov
jno
mov
sbb
out
repnz
imul
fstpt
push
jne
mov
icebp
gs
jg
or
shlb
fsubl
jmp
out
je
testl
mov
sbb
sbb
sub
and
subl
adc
iret
lcall
shl
mov
mov
cmp
lret
das
cwtl
out
pop
mov
cmp
arpl
sbb
iret
jno
cli
in
test
sub
xchg
inc
add
push
sbb
xor
inc
and
fnstsw
bound
pusha
mov
adc
sti
shll
jl
shlb
pop
mov
sbb
loope
ret
sbb
arpl
jnp
jb
xchg
lret
loope
movsl
adcb
stc
xchg
add
mov
ljmp
call
push
cwtl
shll
mov
xor
dec
fstpt
or
mov
inc
dec
test
and
jmp
test
inc
das
jle
cmp
es
mov
mov
or
in
shr
xchg
add
pop
sub
xor
std
pop
dec
push
add
mov
jmp
sti
cld
jb
stos
and
mov
push
add
ja
mov
lret
aaa
sarl
icebp
call
loop
jge
in
stos
pushf
mov
xchg
insb
out
sbb
xsha1
cmpsb
dec
xor
scas
loop
push
xchg
testb
mov
xor
xor
notl
sub
into
sar
outsl
push
jge
sub
aas
lcall
pop
stc
cwtl
dec
ja
inc
mov
cmc
jge
fiaddl
mov
mov
sbb
jge
mov
or
push
mov
jle
bnd
into
sbb
mov
or
fwait
mov
inc
dec
aad
out
push
and
mov
test
rorl
or
xchg
in
mov
jno
rcrb
jmp
xchg
inc
inc
mov
outsl
xor
imull
imul
jae
push
add
dec
sbb
mov
rcrb
adc
xchg
inc
xor
jl
mov
adc
xor
das
cmc
sub
xor
or
cmpb
test
pop
pop
dec
jns
dec
loopne
inc
adc
mov
xchg
scas
mov
out
imul
loop
shrb
mov
cwtl
test
jl
in
mov
jg
mov
iret
adc
inc
lods
inc
dec
mov
rcl
cmpl
push
out
jns
xchg
scas
sbb
push
ret
cmp
inc
inc
in
inc
push
insb
xor
sahf
mov
xor
adcb
pushf
movsb
pop
jbe
xchg
test
or
lods
push
movsl
icebp
pop
jmp
stc
mov
or
int
mov
pop
jle
push
sub
mov
inc
sbb
bound
idivb
mov
outsb
flds
adc
ret
in
mov
push
jne
stos
add
mov
or
pop
neg
jnp
push
xor
fs
es
pop
jbe
addb
out
sub
inc
cmp
push
mov
aas
mov
dec
push
push
shrb
xchg
xor
adc
add
jmpw
xchg
xchg
insl
or
ds
movsb
push
lods
mov
dec
add
pop
push
add
stos
mov
lods
sbb
or
repz
pop
aaa
add
xchg
sbb
xchg
jle
push
movsb
cwtl
aam
loope
lods
movsl
les
gs
mov
xchg
add
bound
or
sbbl
loop
lock
and
loope
lret
das
dec
mov
sub
inc
psllw
in
fcoms
xchg
xor
add
inc
inc
pushf
sbb
or
aam
pop
jecxz
jmp
xlat
sbb
arpl
mov
cwtl
stc
scas
push
cmp
push
lods
fimull
js
shrb
mov
mov
imul
scas
mov
sbb
mov
jecxz
adc
cmpsb
add
mov
jae
nop
movsb
xchg
test
adc
jo
fdiv
and
enter
sarb
mov
mov
mov
pop
test
inc
xor
or
shll
push
enter
lea
inc
or
repz
sub
repz
mov
or
jge
pop
pop
fmull
in
push
shll
cmp
insb
inc
int
xor
out
fdiv
xchg
out
pop
push
imul
push
out
cmc
adc
pop
cmc
or
fwait
dec
inc
cwtl
jmp
daa
inc
jmp
push
mov
and
push
xor
sub
push
rcr
or
xchg
jle
gs
sbbl
mov
inc
push
adc
pusha
mov
add
push
hlt
cmpsb
ficoml
jne
clc
dec
movsl
ret
pop
pop
mov
inc
push
mov
repnz
and
xchg
mov
hlt
stos
and
inc
jae
je
mov
cmpsb
dec
and
cld
adc
push
ja
sbbl
add
cmpl
jno
out
dec
jno
xchg
mov
into
pushf
dec
mov
push
out
test
hlt
insb
jle
adc
mov
int
rol
cmc
push
xor
push
test
popf
mov
mov
adc
pop
sbb
stc
mov
aad
in
jmp
or
fxtract
sub
dec
mov
adc
imul
inc
mov
add
xor
test
dec
jbe
mov
cld
incb
jbe
pop
cmpsb
fs
loopne
js
dec
jecxz
cltd
pop
icebp
lret
jl
inc
js
jmp
data16
inc
mov
xchg
ret
inc
xlat
fsub
and
std
pop
mov
or
xor
mov
iret
cmp
inc
data16
in
dec
cmp
movsb
rcrl
xchg
pop
mov
dec
into
sbb
pushf
into
inc
cmpsb
push
jnp
in
daa
xor
sbb
mov
hlt
sbb
xor
outsb
add
int3
int
jae
mov
fisubl
lahf
test
aas
sbb
sbb
xor
and
fistl
and
lret
jmp
imul
sub
inc
fisttpll
fs
pop
push
jno
int3
xor
xchg
xor
repnz
dec
popa
ficoml
mov
scas
cmp
adc
fs
aad
or
sub
dec
push
jae
mov
mov
mov
xorb
bound
test
push
push
es
mov
push
mov
adc
aas
nop
adc
cld
in
xchg
fwait
sbb
cmp
jmp
mov
fxtract
mov
and
and
out
mov
test
std
mov
clc
xor
inc
flds
or
adc
adc
cwtl
mov
lret
cmc
pop
icebp
out
stos
mov
fidivrl
push
rcrl
jb
mov
test
loop
data16
cmc
mov
movsb
movsb
rcl
shlb
jo
cmp
pop
sub
mov
xor
mov
xor
push
addr16
push
rol
fcoml
stos
cmp
sahf
xor
into
bound
xor
data16
adc
clc
dec
icebp
sbb
lods
jbe
xlat
mov
std
xchg
scas
lock
dec
sbb
add
sarb
sub
lret
imul
fimull
or
mov
xchg
or
roll
andl
xlat
addr16
adcl
add
dec
cmp
add
xor
outsl
outsl
xchg
shl
idivl
cmp
push
shlb
cmp
jg
int3
jae
push
cs
sub
aam
pop
les
jne
cwtl
call
aaa
neg
imul
movsb
je
xchg
push
xchg
sub
xchg
sbb
jb
xor
into
xchg
repz
std
das
subl
das
mov
loop
sbb
pop
mov
lret
test
jo
loopne
rclb
int3
mov
jle
dec
cmp
pop
mov
sub
lock
lds
adc
push
mov
sub
jb
adc
nop
jno
idiv
aas
push
mov
cwtl
and
jecxz
inc
adc
or
out
xchg
push
inc
add
inc
addr16
std
push
jne
mov
out
pushf
dec
or
cmp
mov
add
cmp
shr
push
xor
je
cltd
mulb
pop
xor
inc
movsb
decb
notb
ret
mov
xlat
lods
in
or
add
mov
sbb
sahf
loopne
ret
pop
or
movsb
mov
stos
mov
cmp
mov
fstpt
testl
sub
mov
mov
out
fistpll
adc
pop
inc
sub
xchg
add
add
xor
cmpsl
cmp
in
pop
imul
sbb
xchg
clc
jl
imul
sub
clc
add
push
mov
push
stos
fincstp
and
adcb
add
sub
cmpsl
sub
shrl
int
push
pop
pop
pop
or
xchg
ss
test
sarb
sbb
into
fildll
dec
lods
lods
sbb
icebp
shrb
sub
lret
lock
adc
aas
sar
push
jmp
aaa
pop
dec
sub
jb
sbb
adc
sti
or
popf
test
int3
sar
fsubl
scas
int3
in
jmp
sbb
ljmp
aas
mov
out
bound
loopne
nop
or
fmul
mov
mov
negl
nop
daa
outsb
inc
es
repnz
iret
push
lahf
inc
mov
rorb
call
popa
stc
mov
stos
inc
bound
stos
cmc
adc
movsl
ljmp
push
inc
sti
mov
cli
xor
adc
call
push
xlat
outsl
cli
sarl
ss
int
mov
pop
mov
divl
ret
xchg
dec
shll
cmp
fcoms
out
xor
in
xchg
dec
mov
loope
add
xchg
dec
stos
jp
out
mov
mov
addr16
adc
imull
rdtsc
cmp
int3
loop
or
push
lds
mov
addr16
outsl
push
xchg
andl
in
enter
or
aas
imul
cmp
lock
loopne
push
ds
imul
mov
mov
pop
sarb
cld
pop
push
or
lret
sub
mov
xor
scas
sbb
pop
out
insb
aaa
cltd
push
in
arpl
stc
mov
push
push
sbb
das
add
and
bound
pop
mov
lods
jmp
cld
int3
dec
jns
mov
xchg
inc
fisubl
cmc
xchg
sti
int
mov
orb
insb
xlat
sbb
push
outsl
lret
add
cmp
add
push
dec
sbb
and
out
lahf
rclb
add
ljmp
or
loop
jne
xchg
clc
mov
cmpsb
pop
xor
ljmp
xchg
pusha
gs
fs
notb
sbb
pop
sahf
mov
dec
pop
popf
jmp
fistpl
jg
inc
lods
loope
cmp
dec
sarb
dec
xchg
cli
movsb
movb
insl
jge
jge
mov
mov
cwtl
sti
inc
push
mov
xorb
inc
in
neg
jnp
andps
pop
adc
pop
dec
fistpl
call
enter
push
sub
das
lods
xor
insb
incl
sbb
lcall
int
hlt
and
stos
jb
push
sub
daa
adc
mov
scas
insl
rorl
mov
test
cmp
sub
sub
pop
imulb
sti
or
add
sub
mov
pop
mov
cmpsl
xor
stos
pop
and
mov
jle
dec
push
push
pop
icebp
dec
inc
sub
scas
stc
mov
popl
mov
shrl
in
xor
xchg
cltd
and
push
add
stc
ljmp
jne
andb
and
sbb
xchg
sub
iret
pop
inc
push
jmp
icebp
push
cmc
push
ja
cmpb
jl
adc
or
mov
mov
push
ds
mov
pop
lods
imul
add
inc
mov
shr
cli
and
sbb
sbb
in
cmp
mov
push
scas
jp
ret
mov
mov
jmp
jl
loopne
faddl
or
sarl
insb
repnz
ss
mov
call
loope
adc
lods
js
add
jb
jecxz
and
aaa
stos
pop
into
mov
cld
lock
mov
or
jo
unpckhps
je
and
arpl
sub
jl
int
subl
or
adc
stos
fcmovnb
fdivl
lcall
sahf
in
in
inc
push
hlt
addr16
adc
mov
sbb
jl
adc
das
test
orl
jno
and
push
xchg
inc
scas
cmp
mov
pushf
ret
adc
sbb
addr16
jne
push
mov
bound
jmp
push
pop
int
sub
inc
or
and
push
inc
daa
or
cmp
pop
push
into
scas
test
mov
cs
iret
stos
push
add
ret
jnp
nop
jno
data16
mov
lock
or
xchg
movsl
inc
lds
dec
adc
fildll
or
out
xchg
dec
mov
xchg
and
es
ror
dec
xor
sub
push
push
fcoml
rep
ja
xchg
pop
mov
sub
pushf
arpl
cmp
pop
test
mov
hlt
xchg
add
xchg
imul
or
add
movsb
sub
push
cmp
sahf
xor
mov
mov
jecxz
shlb
cmp
sbb
jl
adcb
jae
cmp
int
push
dec
fnsave
mov
data16
xor
add
ljmp
jmp
movsl
sbb
std
aam
xor
cli
xchg
mov
cmp
lock
sub
scas
push
mov
into
push
outsl
and
cmp
lock
push
pusha
mov
mov
pop
pop
stos
dec
loope
pusha
loopne
cmp
mov
or
ljmp
repz
push
mov
ja
loope
cmpsb
pop
jb
fnsave
sub
cmp
push
jge
jno
jle
xor
inc
push
inc
mov
cmpsb
xor
xor
int3
mov
js
fldl
into
xchg
subl
pop
insb
roll
das
scas
scas
mov
ret
cmc
cmp
pop
ret
and
movsl
push
xlat
add
scas
adc
fmuls
js
aam
dec
pop
lret
jmp
fwait
pop
or
xchg
mov
roll
and
sahf
push
pop
add
push
adc
dec
insb
fmulp
mov
cwtl
cmpsl
call
sbb
je
mov
dec
jmp
test
inc
mov
lahf
add
mov
add
dec
and
jge
test
mov
stc
dec
xchg
fucomp
sub
loope
sbb
sbb
pop
add
insb
add
mov
and
xor
ficoml
pop
sti
mov
call
adc
repnz
outsb
bound
fdivp
push
dec
fs
jbe
pop
inc
dec
popf
int3
test
pop
xchg
ds
movsl
xchg
out
xlat
mov
mov
lea
inc
pop
pop
out
insb
inc
popf
jno
cmp
mov
loop
dec
out
inc
fdivl
dec
sahf
call
sarb
sbb
push
int3
xor
jl
jmp
pop
jo
shlb
add
cmp
xchg
cmp
mov
jp
mov
fisttpl
mov
cmp
popf
cmp
jno
lret
bnd
push
jne
fdivrl
fsubs
mov
push
test
jae
fisttpl
adc
ja
jmp
mov
jbe
jbe
jb
add
pop
je
pop
cmpb
pop
sahf
xchg
test
cmp
into
cwtl
out
out
sbb
insl
test
mov
call
or
loop
ss
loop
fcompl
cmp
sarb
cmp
xchg
outsl
out
sbb
dec
movsl
mov
pop
jmp
or
fnstenv
xchg
out
mov
cli
or
xor
mov
cmp
mov
pop
cwtl
int
and
shrl
pop
sub
std
imul
mov
loopne
inc
stos
gs
xor
inc
fldl
and
xor
adc
jne
jge
pop
icebp
cmpsb
callw
push
xor
sbb
stc
push
jl
les
daa
pop
pop
jg
dec
jge
lods
hlt
cmp
in
rorl
mov
jl
cltd
add
lcall
add
ret
mov
ret
pop
fwait
pushf
cli
aas
push
adc
and
sbb
mov
loop
pop
rol
and
arpl
ret
xchg
and
outsl
mov
jmp
lret
int
or
push
and
jne
jl
jp
or
push
xchg
cmpsl
dec
mov
fcoml
cmpsb
orl
cli
movsb
or
jnp
int
mov
in
sbb
push
movsb
and
test
dec
cwtl
stos
movsb
stc
test
mov
inc
jecxz
mov
cmp
cmp
push
cmc
daa
xchg
pushl
movb
or
stos
jnp
daa
dec
mov
add
inc
lock
lods
sarb
pop
ds
dec
out
nop
stos
sbb
mov
fidivl
and
mov
clc
bound
mov
mov
jl
dec
cmp
mov
mov
jno
cmp
sti
xchg
inc
dec
loopne
mov
fiaddl
inc
fildl
imul
frstor
stos
sub
cs
xchg
andl
dec
imul
mov
cltd
pop
insl
fdivrl
pushl
dec
mov
xlat
inc
std
fldt
mov
mov
jg
or
xchg
mov
mov
mov
aas
push
popf
les
loopne
cmp
sahf
cli
lahf
je
xchg
ljmp
mov
add
adc
bound
pop
ret
fsubs
jo
pop
xchg
inc
loopne
jnp
int
and
divl
sarb
stos
cmp
hlt
mov
cwtl
adc
insl
and
mov
adc
sub
lret
fwait
pop
or
imul
xchg
lock
jae
mov
mov
outsl
int
mov
xorl
lds
mov
sub
shl
and
repz
adc
std
lods
mov
push
pop
inc
mov
mov
dec
imull
pop
insb
insb
ret
pop
xchg
test
mov
mov
loopne
imul
stos
xlat
push
jle
sub
push
mov
in
lock
int3
arpl
add
addl
cmp
aam
jne
lods
hlt
mov
les
clc
and
adc
or
mov
test
dec
sbb
xlat
pop
jge
push
jle
movsl
mov
sbb
ficoms
or
in
test
andb
jno
cmp
pop
jle
pop
inc
into
roll
adc
insb
push
or
fimuls
xchg
adc
mov
jae
pop
sarl
ret
imul
push
gs
inc
and
das
cwtl
add
insl
cmp
cmp
mov
int
add
pusha
outsb
adc
cld
xor
xlat
bound
clc
or
mov
adc
cmp
or
sub
mov
popf
std
sbb
cmp
xlat
cmp
fisubrl
out
cmp
sarl
filds
adc
nop
in
push
lcall
cltd
xchg
mov
or
aaa
aad
xchg
sbb
popf
data16
mov
ret
dec
sub
icebp
adc
in
push
jbe
ficoms
add
inc
sti
aas
scas
stos
es
pop
mov
sub
dec
aam
inc
mov
ss
adc
fwait
and
push
xor
mov
test
mov
cltd
std
xor
mov
or
out
inc
sub
movsl
mov
sbb
repnz
add
dec
and
jo
jl
jecxz
int
in
cmpl
or
ret
outsb
fucomi
fidivs
mov
cld
push
push
rolb
repnz
lret
cld
sub
dec
pop
cwtl
rcl
in
dec
xchg
mov
ficoms
repnz
js
push
in
or
pop
fstps
dec
in
aad
pop
repz
sbb
xchg
jne
xchg
mov
dec
call
clc
sub
es
pop
mov
xor
jle
fnstsw
es
push
out
lea
repz
mov
jp
inc
stos
lock
adc
je
pusha
mov
mov
ds
mov
pop
loopne
lret
rcl
push
mov
mov
push
iret
jl
movsb
mov
in
sub
xlat
pop
outsl
add
pushl
stos
les
xor
inc
lahf
xor
jmp
stc
test
inc
call
xor
mov
inc
loopne
arpl
ss
or
pushf
scas
pusha
lock
cmp
xchg
xchg
leave
pushf
sub
std
mov
adc
into
xor
mov
ret
mov
inc
sbb
mov
mov
mov
mov
and
cmp
subb
sbb
xchg
mov
pop
xchg
lahf
ss
cmp
mov
lods
add
jno
sbb
std
mov
mov
js
pop
stos
je
ljmp
cmpl
cmpsb
dec
scas
mov
xlat
das
mov
xchg
jge
aam
mov
mov
pop
add
iret
lock
loopne
pushf
add
aad
sub
lea
or
xchg
ficompl
pop
push
cmc
es
shll
ja
pushf
adc
pop
test
ret
mov
and
insb
fwait
pop
mov
or
shl
xlat
pop
jl
addr16
xchg
inc
repnz
in
and
iret
scas
inc
shll
pop
add
mov
mov
fsubr
add
xor
add
mov
xor
shlb
mov
push
cmpsb
out
mov
push
inc
repz
xchg
adc
dec
ret
jmp
inc
push
or
mov
lock
push
stc
inc
push
pop
xchg
rclb
mov
into
outsl
inc
jg
fwait
sub
push
testb
pop
insl
popa
aas
add
adcl
cmp
mov
mov
jmp
jb
je
push
xchg
add
xor
shlb
jbe
push
aam
in
or
es
inc
sbb
jne
pop
in
or
pusha
and
xchg
test
mov
loopne
mov
outsl
push
push
xchg
call
ficoms
xchg
xchg
pop
sti
xchg
xchg
mov
or
sahf
adc
xor
frstor
fnstcw
ss
cmp
insb
out
subb
enter
sbb
rorb
and
pop
movsl
out
ja
aaa
xor
insb
imul
lock
fsubr
lahf
adc
jae
xor
loop
fsubl
icebp
inc
rcrl
in
ss
leave
push
mov
mov
mov
and
add
mov
fidivs
aad
dec
add
mov
jb
adc
aas
sti
shr
das
xchg
ljmp
jg
pushf
lock
mov
int
or
sub
mov
call
inc
sbb
js
fidivrs
add
fldcw
fadd
filds
popf
mov
out
sti
and
jnp
mov
mov
test
lods
and
in
jg
daa
or
push
in
dec
jbe
mov
xor
cli
cmp
lock
ss
lcall
rolb
dec
mov
add
push
push
xchg
pop
andb
pop
sub
aaa
int
mov
push
push
inc
mov
jne
out
or
pop
mov
pop
arpl
push
xchg
xlat
lods
decl
cwtl
fcmove
mov
xor
mov
ljmp
iret
fwait
out
xorl
push
int
push
add
stos
in
sbb
inc
push
push
bound
add
aad
stos
and
and
rorb
add
mov
shufps
sbb
mov
dec
cmp
mov
cwtl
add
cwtl
test
aam
cs
movsl
hlt
mov
lods
mov
ffreep
daa
cli
jmp
push
mov
and
loop
shl
aaa
mov
pop
loopne
rorl
lods
daa
mov
filds
fidivl
push
adc
filds
test
shlb
testl
adc
pop
popf
ss
movsb
sti
sbbl
mov
and
pop
scas
test
cmp
stos
fwait
clc
icebp
sub
xor
push
aas
jo
sbb
out
xchg
lds
lret
rcr
out
pop
mov
push
sti
mov
adc
fsub
jp
xchg
cmp
add
nop
inc
mov
push
rolb
scas
fiadds
and
lock
scas
popa
popa
push
loop
dec
jno
sbb
in
test
or
shll
dec
pop
ret
mov
push
or
push
lcall
mov
or
fbstp
insb
add
sbb
push
daa
cmc
jg
lods
repnz
push
dec
ret
out
pop
outsb
out
rcrl
adc
aas
sbb
outsl
fidivl
xor
fcoms
cmp
mov
gs
cpuid
cmp
mov
and
jbe
lret
sub
pop
mov
xchg
test
cmp
aaa
idivl
fs
int
imulb
jne
dec
hlt
pop
cmc
sub
mov
adc
shrl
sbb
sahf
or
rcrb
xor
xchg
or
sbb
jno
pop
mov
fsubp
movsl
inc
adcl
mov
add
rcll
imull
xchg
xor
push
or
mov
inc
sbb
add
cltd
insb
inc
and
iret
fldt
dec
stos
and
wbinvd
mov
push
mov
xchg
adc
je
and
outsb
adc
pop
or
mov
mov
aaa
xor
jmp
xchg
xchg
mov
lcall
xor
push
push
fs
shrl
out
icebp
dec
int
jae
and
popf
push
inc
shll
repnz
lret
xlat
push
and
mov
loopne
lods
sahf
xchg
or
loope
mov
in
mov
jl
in
jmp
mov
mulb
sub
rol
add
push
aaa
add
fs
dec
inc
ret
xor
push
cmc
aaa
neg
aad
mov
cli
add
test
outsl
aaa
push
outsb
jne
mov
pop
adc
add
sbb
xorb
cmc
bound
jecxz
inc
ret
xchg
push
cmp
movsl
pop
out
repnz
lea
xor
call
pop
mov
ss
sub
cmp
insl
in
sbbl
xchg
push
mov
out
xor
lock
test
jnp
sub
sbb
pop
nop
dec
cs
cmp
push
jecxz
mov
stos
cmpsl
je
testl
inc
cmpsl
push
rcr
fs
jns
rcrb
jmp
rolb
jl
imulb
mov
mov
mov
lock
or
in
xor
lea
insb
cmp
outsb
push
pop
cwtl
pop
out
mov
lea
push
icebp
js
shrb
enter
in
movsb
mov
sub
rol
flds
adc
mov
and
jo
xor
cltd
mov
push
jb
out
popa
sti
shlb
lods
loopne
icebp
sbb
test
scas
cli
addr16
lods
in
jmp
cmp
xchg
addr16
and
and
sbb
pop
insl
imul
mov
push
aas
mov
pop
iret
pop
ljmp
decb
lahf
das
pop
outsl
lds
loopne
call
xchg
adc
out
lcall
mov
popf
jae
pop
ror
sahf
popf
lods
iret
out
mov
loope
ljmp
adc
mov
test
jb
pushf
add
cmc
ss
dec
mov
bound
psubusw
sahf
xor
sbb
mov
xchg
std
sbb
or
add
ret
and
shll
mov
insl
std
push
sub
inc
cmp
aas
lret
or
lret
repz
adc
jmp
inc
mov
jno
cmp
dec
imul
arpl
dec
pop
lea
add
std
jno
movsl
pop
loopne
or
scas
xlat
jl
insl
in
lret
sub
jg
shll
adc
cltd
test
mov
jno
out
and
xor
push
aaa
push
add
jmp
push
repz
lcall
push
sub
adc
xchg
fwait
int3
fdivr
xchg
mov
or
adc
sub
sbb
out
popf
inc
mov
cmpsl
aad
mov
xlat
mov
cmp
js
xchg
xor
movsl
sbb
lods
adc
sub
sti
xchg
dec
pop
jg
lea
push
cli
xchg
and
and
inc
sbb
jno
sub
sub
sarl
stos
loop
clc
mov
jg
scas
dec
insl
out
lahf
sub
add
push
mov
jne
in
scas
adc
or
out
popa
mov
aad
lock
lds
out
scas
jmp
dec
xchg
popf
ss
sbb
push
mov
popa
fimull
or
lret
and
push
lcall
xor
outsb
add
cmp
xor
xlat
mov
mov
pop
add
fst
push
mov
mov
inc
cld
inc
mov
or
inc
push
insl
adc
adc
adc
xchg
adc
loopne
repnz
mov
cmp
pop
add
pop
popf
mov
dec
sub
scas
pop
imul
mov
aad
pop
cmp
dec
aad
cli
mov
arpl
xchg
and
xor
out
inc
add
mov
popa
mov
clc
or
add
sbb
mov
sbb
adc
push
fnstcw
icebp
clc
push
inc
inc
fwait
cmp
mov
push
cltd
inc
push
js
clc
test
dec
jg
jl
aam
ja
fidivl
pop
repz
clc
or
jecxz
stc
mov
dec
and
pop
push
fdivs
or
adc
pop
inc
out
pop
loope
xor
pop
cmp
xchg
pop
negb
lock
repnz
mov
inc
cmp
push
add
jno
popa
clc
sub
ss
and
and
jle
jns
sbb
lret
leave
aam
rcrl
add
loop
repz
xor
scas
xor
sub
je
pop
jno
dec
xchg
imul
pop
mov
sbb
cmp
subl
xchg
aaa
je
addl
repnz
loop
sbb
test
ja
push
test
pop
xor
xlat
or
leave
adc
xor
loop
inc
cmpsl
cmpl
insl
mov
shr
shrb
inc
int3
jb
mov
and
dec
dec
add
je
dec
cmc
roll
xor
adc
sbb
push
add
and
and
jmp
out
sti
js
xor
and
out
push
add
fstpl
scas
add
jb
pop
out
and
push
inc
scas
dec
push
nop
dec
loopne
pop
or
cmp
pop
inc
shll
clc
cmp
outsb
add
fisubl
mov
loopne
bound
cmpsb
add
or
xor
mov
sbb
loop
xor
adc
jb
out
pop
repz
pop
mov
cmp
enter
cmpsb
mov
sub
adc
pop
cmpsl
sub
inc
insb
movsb
lahf
jb
sub
pop
nop
out
stos
push
rep
in
or
pop
xlat
es
aam
mov
sahf
movsb
inc
sub
test
in
mov
xlat
push
scas
mov
icebp
xchg
mov
or
sbb
leave
jno
mulb
mov
fists
mov
gs
mov
in
sbb
stos
xchg
mov
xor
shrl
scas
ds
adc
inc
add
pusha
lahf
imul
je
cmp
inc
rorl
jae
aad
test
loop
mov
daa
out
test
stos
std
in
test
push
sbbb
fstps
clc
mov
out
push
add
xchg
out
imul
mov
xchg
aaa
push
add
or
ss
pusha
or
adcb
fwait
hlt
lods
pop
out
inc
mov
mov
sarb
into
icebp
lock
insb
enter
data16
xchg
sub
repnz
callw
mov
or
cmp
cltd
test
push
ds
pop
xor
dec
xlat
sbb
inc
jb
fs
xchg
xor
into
xchg
mov
adc
in
subb
mov
imul
adc
inc
ja
mov
andb
pop
or
inc
sub
push
out
and
jns
mov
sbb
xor
call
lea
andb
dec
jbe
rcrb
sub
in
mov
out
inc
out
outsl
sub
lods
jbe
mov
cmp
ficoml
or
mov
nop
pop
into
jo
jae
mov
pop
mov
or
dec
out
outsl
xor
je
push
sub
push
pusha
aas
adc
pushf
pop
mov
fnsave
push
inc
mov
ja
fs
xchg
lods
inc
pop
movb
cmpsl
dec
add
stos
mov
jge
sbb
aas
movsl
ja
lret
jns
stc
mov
xchg
sub
insb
sub
xchg
add
mov
cmc
mov
jne
and
pop
dec
lods
xchg
push
push
out
sti
jno
dec
add
in
mov
mov
lcall
fld
sahf
sub
es
xor
and
adc
and
fwait
adc
push
jo
leave
push
and
push
ffreep
fcmovb
in
repnz
sub
jmp
mov
mov
in
rorb
dec
add
mov
add
scas
subl
lret
sbb
push
inc
push
mov
out
jae
pop
fadds
int3
addr16
loope
mov
mov
sub
js
pop
pusha
test
outsb
jge
jmp
test
cltd
lock
sbb
rol
into
sbb
test
call
cmp
mov
mov
sub
out
loopne
mov
jl
in
add
lret
out
inc
mov
sub
push
push
test
movsb
jns
mov
add
xchg
cld
and
sub
pop
cld
test
shrl
push
inc
cmpsb
loop,pt
pop
lret
int
mov
sub
lods
dec
sbb
fs
mov
sub
pop
or
jmp
ds
mov
xor
in
sarb
loopne
inc
or
ud1
les
push
iret
mov
cmp
arpl
sub
mov
push
jb
push
popf
repnz
ficompl
fistps
out
les
arpl
popa
jbe
jmp
xlat
sub
stc
pop
out
mov
sbb
clc
jnp
xor
xchg
test
popf
ds
dec
repnz
stos
mov
data16
popf
inc
fwait
rcrl
jo
loopne
stc
push
ror
outsl
sub
stc
js
mov
ss
cltd
std
push
mov
int
jmp
outsl
and
xchg
shl
clc
std
cmp
mov
scas
addl
cltd
sub
out
jno
adc
ss
es
lods
in
push
sbb
ljmp
insb
jb
adc
gs
pop
xor
push
call
lds
dec
cs
and
or
pushf
xor
addb
sbb
pop
outsl
pop
mov
inc
push
mov
aam
ljmp
jmp
mov
lret
or
add
jmp
mov
jb
xchg
cli
fwait
or
popa
movsb
xor
ss
popf
sub
sti
aam
push
jo
jo
adc
jle
lea
ss
clc
and
sbb
inc
sbb
push
push
sbb
mov
cmp
mov
cmp
adc
lds
jnp
out
mov
push
hlt
or
loope
daa
fmuls
out
push
mov
mov
inc
xor
cmpb
xor
push
outsl
sbb
pop
lcall
adc
mov
adc
push
or
fcomps
xchg
inc
sti
cmpl
pop
add
popa
xor
add
ret
dec
repnz
cmpsb
add
outsb
xchg
xchg
outsb
das
xlat
push
mov
cmc
xlat
loop
mov
ds
lds
das
pop
mov
or
jmp
dec
gs
je
inc
mov
mov
add
mov
pop
repz
mov
jno
cmp
push
int
fimull
sub
repz
aas
clc
lds
xor
or
fnstenv
sbb
dec
daa
adc
sub
in
dec
leave
jmp
sbb
push
and
ljmp
mov
cmc
inc
lret
mov
push
into
test
cmp
mov
daa
jle
push
movsl
imul
and
pop
push
mov
fdivs
add
pop
in
cmp
clc
fucomip
loopne
or
pop
lea
ja
out
push
aas
pop
inc
cwtl
in
mov
xchg
movsb
out
push
pusha
testl
adc
lock
loope
rcll
xor
pop
aas
xchg
cmpl
cwtl
adc
jnp
mov
in
adc
fidivrs
mov
ds
in
push
dec
shl
pop
mov
add
cmpsb
mov
sbb
std
dec
add
and
stos
int
jle
add
xor
inc
cmpsb
sahf
test
hlt
inc
call
inc
das
cmp
and
aaa
mov
cltd
pushf
jo
xchg
cmp
sub
mov
cmpsb
rol
and
pop
call
jnp
in
push
push
dec
xchg
push
add
or
and
std
push
dec
mov
out
mov
out
jo
jecxz
dec
imul
leave
ds
add
imul
sbb
mov
in
sub
and
xor
mov
sbb
cmp
xor
sahf
pop
mov
or
and
shrl
pop
popa
subl
add
mov
mov
movsl
in
jnp
data16
adc
shll
mov
decb
out
dec
roll
mov
pop
hlt
aad
mov
fdiv
imul
lods
adcb
xchg
fwait
aas
mov
inc
repz
popa
inc
sbb
loopne
rcl
cltd
fcoms
das
mov
mov
xchg
insb
fbld
inc
pop
xor
mov
dec
adc
jns
inc
fadds
push
push
fsubs
fdivl
mov
es
stos
and
mov
adc
daa
mov
xchg
xchg
lea
repz
cmp
xor
hlt
xchg
fbld
cmpsb
in
cltd
add
test
or
push
inc
sbb
xchg
fldl2t
cmc
pop
cmpsb
in
lahf
lahf
shrb
xor
jecxz
sbb
pusha
jp
jl
lods
push
xor
test
lods
das
test
stc
stos
outsb
icebp
cwtl
push
int
add
add
movsl
and
sub
inc
sub
jae
xchg
scas
xor
push
ljmp
cmpsl
lcall
cmp
cmp
pop
cwtl
repz
cmp
add
jp
leave
or
into
lret
add
mov
jle
dec
fisubrs
mov
imul
sti
jns
insb
insb
scas
js
hlt
gs
ss
in
cli
or
xor
imulb
fldcw
cmp
mov
lret
bound
mov
jmp
pop
or
jo
fmul
arpl
int3
in
mov
lahf
fiaddl
sbb
lret
sbb
xor
inc
pop
push
cltd
add
pusha
and
dec
pop
pop
inc
adc
mov
les
add
adc
test
xchg
js
mov
sti
inc
int
lea
cmpsb
mov
xor
add
inc
inc
dec
fsts
ja
inc
xchg
jmp
int3
fistpl
mov
es
movsl
out
dec
fcoml
push
mov
loope
pop
out
rclb
outsl
daa
iret
jge
pop
mov
pop
cmp
mov
fidivrl
sbb
scas
rol
sbb
iret
push
sbb
lcall
in
jge
repnz
test
sbb
fbld
loop
mov
xchg
addr16
cmp
mov
ret
dec
dec
outsl
dec
shr
ds
adc
jmp
mov
call
test
mov
aam
adcl
or
xchg
pop
pop
out
std
cmp
dec
std
nop
xor
das
pop
cmc
dec
push
jae
pop
call
and
clc
in
inc
cmpsl
hlt
mov
xchg
mul
cld
aaa
adc
pop
lcall
fdivrp
push
xchg
in
mov
lock
daa
adc
xchg
mov
push
jbe
int
push
mov
pop
cmp
imul
mov
or
lea
ss
pop
gs
dec
movsl
dec
xchg
adc
lret
dec
jecxz
or
in
dec
mov
shrl
add
push
hlt
arpl
sahf
dec
push
sub
js
popa
adc
pop
or
fnsave
pop
imul
sub
mov
cltd
xor
jae
cmc
mov
push
lods
xchg
push
sub
and
jnp
sub
cmp
sub
pop
mov
sti
xchg
jns
popf
lret
lcall
mov
jbe
test
push
pop
mov
imul
rcrl
mov
inc
cmpsl
je
pop
push
ds
mov
cwtl
loop
cmp
ret
insb
int3
ret
dec
jns
call
test
lds
std
dec
out
scas
sub
pop
pop
outsb
mov
imul
cmp
fistl
mov
lea
rcl
gs
xor
sbb
stc
cmp
cmp
push
xor
mov
mov
xlat
sgdtl
cmpsl
test
lods
sub
inc
stc
rep
mov
hlt
push
bound
les
das
push
repnz
mov
std
mov
xor
mov
inc
fcmovnbe
outsl
bound
int3
pop
ret
jecxz
pop
pop
into
xchg
aam
inc
insb
es
into
inc
cmc
sbb
adc
sub
lcall
sub
cs
sarb
adc
loope
mov
sbb
sub
jno
ret
xchg
cmc
cmpsl
xor
mov
dec
pop
sti
jle
pop
je
sub
xchg
sub
fsubrs
out
cmp
xchg
sbbl
add
cli
ret
add
loopne
std
aad
mov
add
sti
xchg
push
xchg
lcall
dec
lahf
xorb
mov
sub
adc
outsb
add
imul
inc
push
out
in
push
xlat
xor
push
lods
sub
sub
sti
je
mov
jbe
ret
sbb
loop
fsubp
mov
ljmp
mov
xchg
fstps
and
fs
pop
lock
mov
mov
shr
mov
mov
mov
mov
nop
cli
test
mov
xor
ds
jbe
loopne
lahf
and
das
stc
jge
pop
ret
or
lret
ds
sub
ja
call
or
adc
inc
bound
mov
cmpsb
dec
mov
cmp
xchg
dec
ret
sbb
test
lret
adc
push
imul
jbe
test
insb
out
or
sbb
mov
mov
cs
mov
cmp
mov
sub
or
repnz
pop
popa
pushf
testb
inc
int3
add
adc
lea
adc
call
dec
pusha
outsl
sbbb
aas
inc
mov
ret
adc
xchg
out
lea
mov
fdivs
xor
outsb
or
inc
sahf
and
fucom
ja
and
adc
imulb
das
mov
or
and
jnp
and
mov
lock
jno
daa
out
addr16
test
insb
cs
dec
mov
mov
cmp
in
mov
mov
add
subl
orb
pop
testb
call
xchg
test
in
mov
jecxz
arpl
fs
push
and
imul
je
call
or
mov
pop
mov
out
push
jb
aaa
fwait
cwtl
outsl
and
gs
bound
pop
lret
push
cmpl
push
fcomip
xchg
pop
or
mov
mov
ja
pop
incb
inc
sti
cmp
push
lahf
pushf
jne
push
mov
lret
sub
jne
mov
std
and
add
repz
addr16
lcall
pop
aam
inc
mov
nop
push
inc
sahf
and
ljmp
push
mov
or
cmp
in
jge
aaa
xor
outsb
pop
pop
lods
rorb
aad
jp
mov
cltd
testb
jbe
mov
shrb
mov
xor
pop
movsb
pop
or
testb
adc
ljmp
jp
hlt
jnp
jecxz
fdivrs
add
fadds
ljmp
jecxz
mov
aas
sub
ljmpw
cmp
js
push
stc
sub
dec
jecxz
jg
icebp
movsl
pop
mov
aaa
dec
js
pusha
ljmp
mov
es
test
jae
inc
cmpsb
loopne
push
adc
and
mov
pop
loopne
mov
xchg
lret
xor
mov
addr16
ljmp
insb
divl
add
addr16
or
aaa
movsl
ljmp
jp
jae
dec
outsb
lock
loope
pop
add
mov
sub
imul
fucom
mov
fidivrs
xchg
iret
push
push
or
std
or
rcll
pop
mov
pop
fwait
stc
hlt
je
dec
add
int3
arpl
insl
lret
lret
mov
popl
popf
movsb
and
out
cltd
clc
aam
orb
stos
push
pop
je
fwait
scas
lock
loop
mov
faddp
rclb
leave
pop
mov
ret
fs
jns
sub
xchg
and
jno
xor
xchg
mov
div
dec
adc
mov
mov
ja
or
mov
cwtl
or
xor
push
add
stos
xor
rcrl
cmp
or
jb
loopne
icebp
nop
daa
and
add
mov
push
js
fsubs
jns
dec
je
sub
jp
lret
rcrl
xlat
enter
lahf
idivl
fldl
sahf
or
cs
adc
and
inc
add
cmpl
ret
dec
xlat
cmp
mov
pop
sub
popa
add
stc
mov
xchg
call
and
dec
push
fwait
cmpsl
xchg
pusha
xchg
mov
fdivs
push
hlt
jnp
ss
rcrl
add
repz
pop
cmp
lds
jle
shrb
lret
aam
dec
jne
xchg
mov
into
ss
inc
stos
loope
les
xor
adc
bound
adc
fstpl
cltd
mov
mov
ret
pop
into
xor
fimull
push
test
xor
sub
out
push
cmc
jae
es
and
adc
jo
adc
pop
xchg
xor
xchg
xor
push
call
cli
lcall
pop
jl
aas
mov
push
inc
mov
or
fnop
stc
dec
cmpsb
sbb
outsl
fwait
mov
sub
push
mov
jl
jno
xor
outsl
nop
xchg
lcall
xchg
xor
fwait
scas
push
xchg
cmpsb
cmc
dec
lret
ret
movsb
jl
cwtl
idivl
mov
insb
mov
sbb
xchg
bound
inc
repz
jg
fs
jp
mov
dec
fcmovu
push
pop
repz
sub
sub
pusha
mov
sbb
aaa
and
lret
insb
pop
jg
or
scas
mov
push
mov
daa
ret
iret
cmp
xor
lods
dec
out
insb
movsl
test
xor
and
pop
mov
push
xchg
adc
movsl
and
sub
ljmp
call
sub
inc
fiadds
cld
enter
xor
fbld
mov
imul
and
push
fwait
push
inc
bound
sbb
sub
decb
dec
jmp
jcxz
aad
paddw
mov
filds
xchg
mov
mov
push
mov
stos
push
or
or
shlb
or
movsb
push
hlt
push
jmp
xlat
inc
mov
sbb
jp
xor
xchg
testl
xchg
mov
sbb
push
leave
aaa
stos
out
bound
xor
mov
hlt
sbb
xlat
jno
xorb
pop
mov
push
aas
xor
inc
adc
jo
jb
pushf
push
mov
not
les
mov
rcll
arpl
pop
aam
mov
and
test
das
scas
mov
insl
daa
movsl
push
nop
mov
std
and
fmul
es
iret
lods
mov
jmp
sub
xor
sub
or
aaa
mov
les
push
out
dec
outsb
sbb
lock
fcomip
ljmp
dec
fisubl
and
push
mov
lds
cmp
mov
push
movsb
jnp
and
inc
fcompl
aaa
xlat
mov
stos
xor
adc
inc
mov
notl
cmp
xchg
stc
xor
jge
pop
adc
aam
sbb
aam
add
jmp
jg
mov
sahf
dec
mov
and
pop
outsl
inc
sbb
mov
hlt
pop
scas
scas
xor
lods
movsl
inc
cs
jnp
mov
pop
lea
ret
sbb
sub
push
inc
mov
rcl
push
out
ja
and
mov
inc
popf
fidivrs
adc
in
adc
jns
popf
mov
dec
jae
clc
scas
scas
je
addb
icebp
mov
xchg
lahf
ss
imul
and
icebp
sbb
mov
pop
fisubl
xchg
mov
ret
lea
cmc
int3
jbe
sub
rorb
xor
jl
or
mov
les
mov
xchg
gs
mov
test
pushf
std
fs
jbe
aaa
jecxz
in
in
xchg
pop
push
insb
push
mov
jp
pop
out
adc
push
int3
push
lods
int3
pushf
dec
std
push
mov
cmp
pop
adc
mov
pusha
and
cmpps
mov
dec
stos
jg
push
cmpsb
inc
xchg
add
and
popf
fldl
mov
loopne
sub
adc
mov
scas
mov
push
cwtl
mov
pop
pop
in
ljmp
incb
jmp
lea
aad
roll
fldcw
insb
mov
inc
xor
imull
daa
jge
inc
mov
clc
sbb
mov
in
jo
push
xor
jl
jbe
test
or
js
mov
insb
fidivl
adc
lcall
scas
push
mov
loop
push
cs
pop
lods
dec
and
out
mov
pop
adc
xchg
or
lcall
push
inc
cmp
push
call
rolb
jo
mov
pusha
arpl
insl
or
outsb
cmp
xor
lcall
and
inc
pop
and
enter
or
cmpsl
xchg
xchg
and
push
adc
xchg
sub
mul
imul
fstpl
and
dec
notl
out
cmp
jns
inc
and
sahf
jno
pop
ljmp
mov
movsl
icebp
data16
mov
and
scas
cmc
lock
aas
push
into
lea
inc
arpl
lret
push
and
punpckhdq
sbb
push
jns
sub
gs
or
xor
mov
mov
ja
subl
cld
sub
jns
xchg
jae
or
mov
mov
cli
adc
sbb
rclb
pop
sbb
fs
testb
out
loopne
andb
dec
fldl
sub
stos
fwait
mov
cwtl
push
cmpl
testb
xchg
and
mov
jecxz
pushf
testb
fmuls
aad
jb
or
lock
cwtl
aas
inc
mov
jg
mov
pop
daa
add
fcmovbe
out
arpl
fdivrs
ficompl
pusha
jp
cmp
inc
push
rclb
cmp
popf
sqrtps
pop
ljmp
and
jnp
in
cmc
js
push
test
into
icebp
shl
aam
or
adc
ret
loope
icebp
rcrb
mov
mov
nop
data16
rcll
fs
and
test
jnp
movsl
iret
mov
sti
js
sbb
cmp
and
gs
sub
enter
mov
push
fnsave
cmpl
pop
repnz
popa
xlat
movsb
push
mov
push
or
and
shrl
jecxz
dec
popf
cmp
aam
daa
ss
in
les
jecxz
xchg
cmp
jecxz
mov
faddl
bound
loop,pt
adcb
inc
jno
out
test
dec
mov
rol
ret
les
ss
in
lahf
mov
xlat
imul
dec
popa
adc
sub
xor
out
mov
fwait
jae
or
pop
mov
mov
bound
mov
sarb
sub
dec
pop
icebp
add
nop
insb
lcall
jae
adc
xchg
scas
arpl
jns
aas
mov
push
mov
aad
or
xchg
popa
test
sbb
test
pop
push
dec
pushf
pop
leave
xchg
sarl
cmp
insb
xchg
adc
cmp
jno
add
or
add
cmp
jmp
mov
test
fwait
pop
nop
movsl
clc
stos
mov
imul
and
pop
inc
js
cmp
mov
sahf
xchg
andb
ljmpw
fsts
push
daa
inc
aas
xor
out
and
mov
mov
rcll
dec
movsl
fisubl
xlat
imul
scas
cmp
pop
dec
mov
rcr
aam
jbe
hlt
sub
and
xchg
dec
gs
mov
jmp
mov
inc
repnz
scas
inc
iret
adc
adc
lock
jmp
out
imul
inc
lcall
out
out
nop
das
xchg
jne
fdivl
sub
std
xchg
sub
jns
push
orb
cli
lock
gs
movsb
cmp
sub
sbb
add
dec
cmp
nop
pop
mov
pop
cmc
cld
mov
jge
mov
inc
enter
cmc
popf
push
mov
mov
fwait
jle
add
sbb
jo
adc
pushl
sti
lcall
mov
dec
cmpsl
sub
je
scas
push
push
pop
or
mov
daa
sub
cmc
sarb
cmp
sbb
jo,pt
cwtl
xchg
loop
push
mov
lret
mov
or
int
out
inc
inc
inc
jl
xor
sub
cmc
adc
add
movsb
mov
inc
mov
inc
pop
mov
aad
push
ds
div
mov
mov
mov
push
outsb
add
inc
rclb
mov
jne
cwtl
test
aam
jae
push
pop
and
mov
jecxz
mov
out
dec
mov
rorb
cmpsl
out
sti
je
sub
jnp
movsl
jns
jg,pn
stos
inc
xorb
lret
mov
lea
mov
jb
stos
fs
out
jle
test
out
add
int3
jecxz
mov
and
ror
clc
bound
pop
pop
in
or
or
add
xchg
arpl
xchg
mov
or
sti
mov
push
test
out
mov
sbb
and
cmp
and
mov
fmuls
push
ja
mov
lods
loopne
pop
mov
fisttpll
xchg
and
sub
cmp
mov
lret
pop
adc
mov
shlb
jbe
push
ds
outsb
and
push
movsb
arpl
orb
lock
jl
dec
add
comiss
mov
sbb
adc
xchg
fcoml
pop
arpl
pop
mov
pop
lcall
sahf
sbb
adc
cs
test
mov
dec
jecxz
loopne
and
jo
test
mov
or
and
jbe
in
add
xlat
outsb
lahf
cmp
ffreep
cwtl
lret
inc
pop
cmpsl
jb
fcmovne
push
ret
fcompl
xchg
dec
mov
jns
stc
adcl
adc
mov
jecxz
adc
xchg
mov
sub
and
mov
mov
decl
inc
sti
in
scas
inc
jmp
stos
mov
push
outsl
leave
ds
jnp
ficomps
jecxz
jg
sti
xor
cmp
jge
jb
cmp
shr
jge
out
je
sub
sbb
sti
shrl
cli
mov
jl
pop
or
sbb
dec
bound
testl
jle
mov
arpl
stos
testb
mov
push
out
rcrl
rcl
test
mov
test
mov
ljmp
xor
jae
cmp
dec
or
lods
adc
xor
movsb
cmc
add
outsb
inc
sub
pop
leave
xor
push
pop
sub
dec
repnz
lret
adc
loop
mov
or
imul
jl
ds
test
push
mov
in
call
rcrb
cmp
loope
aas
push
inc
fidivs
ret
in
push
xchg
adc
cli
xchg
aas
or
stc
sbb
push
mov
cmp
icebp
lcall
lret
ret
jnp
outsb
lock
out
test
ss
jno
pop
addr16
add
sbb
add
sub
outsb
jo
xor
fisubrs
es
sbb
lock
push
sbb
fadd
insl
push
mov
jo
xlat
cmc
nop
dec
adc
dec
daa
orb
or
inc
add
inc
arpl
mov
mov
bound
lods
cmpsb
int3
arpl
into
dec
mov
sti
nop
push
dec
lods
ret
pop
das
add
push
xchg
das
insb
jg
mov
xchg
mov
mov
mov
mov
cwtl
das
xor
sbbl
mov
push
les
loopne
aam
outsl
out
jae
js
scas
test
fisubl
or
inc
cwtl
imul
sub
jne
push
dec
jle
enter
cmp
rcrl
adc
ds
pusha
cmp
jb
fsubr
lods
inc
push
test
xchg
sub
fsubrs
jns
cld
xchg
add
xchg
xchg
lods
jmp
inc
pop
mov
shll
inc
and
pop
fldt
pop
pop
cmp
mov
pop
rcrb
rol
loope
clc
insb
cmp
sub
inc
and
sub
sti
xchg
shrd
jno
push
jae
sbb
dec
sub
in
dec
notb
jl
push
in
js
in
shlb
testb
jnp
mul
mov
stos
sbb
ds
scas
xor
pop
jmp
lods
or
stos
cld
xchg
pop
loopne
add
jg
dec
sahf
lret
sahf
mov
shlb
insb
lock
sahf
add
xor
je
popf
mov
sbbb
pop
or
jle
aad
mov
imulb
jnp
data16
adc
or
pusha
xor
lods
and
test
push
xorl
fisttpl
outsb
js
lods
test
push
out
fwait
pop
sub
cmp
out
jnp
xor
fidivrs
loopne
shll
imulb
push
or
xchg
sbbl
into
push
add
das
cmc
lods
movsl
lock
xchg
divb
stc
into
ja
pop
push
push
sub
push
scas
nop
fidivrl
push
cmp
cmp
idivl
scas
call
sbb
mov
call
test
mov
jle
das
mov
add
gs
add
dec
divl
adc
cli
xchg
or
stos
xor
fsts
fxch
adc
cmpsl
fiadds
pop
scas
lret
or
shll
mov
icebp
out
pushf
dec
mov
mov
push
or
xchg
pushf
sub
cld
ljmp
inc
sti
rol
sbb
push
repnz
iret
adc
jno
sbb
scas
add
adc
jne
ret
or
pop
pop
sbb
xlat
test
push
leave
out
push
insb
jge
fcomps
adc
adc
xchg
ljmp
and
mov
cld
cld
push
pop
imul
sub
mov
cltd
pushf
cld
cmp
iret
scas
out
cmpb
adc
cmp
dec
pop
cmpl
lret
push
outsl
xor
mov
push
cmpsl
jb
aad
ljmp
add
mov
std
in
push
jns
push
jb
enter
std
and
mov
loop
call
mov
pop
sbb
loop
mov
add
movb
scas
and
pop
movsb
aaa
mov
mov
adc
or
addr16
sub
add
les
mov
mov
mov
loope
sbb
cld
dec
in
sbb
mov
out
dec
jno
adc
cmp
mov
testl
cld
push
or
adc
jl
cmc
pusha
pop
adc
lret
pop
rcrb
in
push
mov
pop
cld
addr16
es
sbbl
negb
lods
xor
pop
mov
jge
lock
rorl
and
stos
cmp
mov
mov
js
ljmp
adc
inc
mov
gs
shlb
dec
mov
in
mov
test
ds
fs
mov
loopne
scas
xchg
inc
fnstenv
pop
jge
fsubrl
out
dec
pop
pop
ret
mov
mov
stc
sbb
push
cmc
cmc
out
or
jge
in
cmp
aam
sub
pop
std
xor
popa
jp
pushf
pusha
push
jnp
arpl
aaa
xchg
test
lods
test
pop
int
inc
cld
mov
dec
xor
cmp
andb
mov
nop
insl
ret
ret
adc
sub
mov
idiv
test
or
add
mov
icebp
mov
mov
mov
bound
ret
dec
push
ss
sub
xchg
push
jge
shrl
xsaveopt
lds
test
outsb
mov
dec
out
pop
call
and
pushf
loop
dec
sub
data16
jno
mov
aas
pop
dec
cmp
or
push
cmp
lds
data16
lock
cmp
pushf
jg
movnti
sbb
pop
pop
hlt
jp
icebp
lcall
es
fstpl
mov
clc
test
add
xchg
arpl
sti
fnstcw
cmpsl
repnz
jmp
cwtl
sahf
lods
add
fsubrl
xchg
dec
popa
rclb
repz
push
psubusw
out
and
sahf
cs
hlt
jmp
lock
sti
les
pop
add
fs
xlat
and
jae
pop
cmpsl
enter
mov
shrb
rclb
mov
push
lods
hlt
push
test
adc
sub
nop
sub
pop
jns
sub
popf
xor
into
lods
fwait
xor
push
je
add
inc
incl
popf
ret
lea
in
stos
fwait
and
mov
out
pop
dec
shrl
jnp
js
mov
jecxz
sbbl
push
leave
leave
pusha
sti
fiadds
cltd
je
lret
dec
lahf
adcb
mov
cmp
jmp
cmp
push
ret
jle
cld
add
cwtl
aas
dec
and
mov
pop
rcrb
push
mov
jl
jne
dec
push
out
cmpsb
lahf
pop
or
or
sub
adc
lea
ret
sub
ss
filds
xchg
dec
es
pop
cmp
gs
notb
daa
mov
cwtl
sub
xor
cmp
icebp
test
cmp
enter
mov
mov
out
ss
or
push
cmp
neg
jo
or
or
insb
idivl
iret
scas
in
jmp
lds
adc
cmp
imul
popf
and
mov
imul
movsl
cmp
loope
stc
and
xchg
hlt
inc
rcrb
push
sub
inc
arpl
xchg
adc
mov
clc
out
sub
and
lods
push
xlat
xor
xchg
pop
xchg
les
sbb
push
idiv
and
jg
and
push
xchg
pop
adc
push
adc
xor
in
mulb
lds
rorl
add
push
jge
notl
inc
sbb
rolb
add
lods
mov
daa
mov
dec
xchg
xor
lcall
and
mov
mov
mov
jg
add
jle
shrb
ljmp
outsb
shll
sbb
mov
sbb
and
hlt
ds
orl
das
sub
xor
les
mov
insl
mov
inc
shl
popf
popa
stos
out
cwtl
pop
adc
mov
jo,pn
xchg
in
pop
mov
cmp
cmp
imul
shr
sbb
fmuls
testl
add
fstpt
xor
jne
mov
icebp
jle
push
popf
outsl
jnp
scas
xor
xor
test
mov
fdiv
test
loop
decb
xchg
dec
out
stc
add
cmp
cmp
jo
mov
lahf
xchg
insl
inc
lahf
dec
rcll
enter
sbb
fdivrl
adc
push
or
in
jnp
mov
mov
mov
fstpl
push
xchg
jle
or
in
sub
ficoms
lcall
mov
gs
mov
adc
pop
iret
loop
pop
sbb
call
in
sbb
inc
jbe
cld
pop
int
out
jns
sbb
push
jno
fdivrs
pop
outsb
stc
xlat
sbb
dec
out
test
stos
pushf
xchg
push
pop
or
mov
cld
sub
sub
vmwrite
push
aaa
stos
push
lcall
lods
aas
outsb
fistps
repnz
dec
pop
inc
sti
mov
mov
xchg
frstor
pop
pop
xchg
pop
sarl
push
mov
imul
adc
sahf
ss
and
push
mov
push
jmp
sbb
fs
and
loopne
fldenv
leave
push
aam
iret
xchg
cmpsb
bound
pop
jne
sti
xchg
pushw
add
mov
sbb
popf
pusha
ss
call
mov
movsl
sub
fnsave
jo
popa
cwtl
inc
fcmovb
dec
add
jg
and
cmpsl
jns
push
pop
mov
fbld
push
push
ret
sbb
inc
lahf
push
inc
add
pop
scas
push
es
fbstp
cmp
pop
fnsave
push
sub
pop
clc
and
ret
dec
mov
push
jno
pop
fcmovu
les
movsl
adc
loopne
stc
mov
sbb
lret
mov
jge
cmp
in
pop
es
mov
mov
insl
aad
sbb
push
sarb
call
dec
jle,pn
xchg
or
test
shrb
mov
push
cmpsb
cs
arpl
cmp
out
dec
fld
test
dec
pop
fnstenv
xchg
inc
mov
notl
cmpsl
shll
sbb
ret
mov
add
pop
pop
out
div
mov
adc
lret
cmc
jae
das
and
mov
sub
lret
dec
js
repnz
pop
inc
stos
add
lea
xchg
pop
mov
lods
push
out
cmp
sub
fildll
je
jbe
cmp
jg
out
out
fstpt
or
ja
push
out
sbb
rcll
aad
add
xor
js
or
in
out
jp
fnsave
les
jae
inc
xlat
mov
ret
or
dec
cmp
jbe
movsb
icebp
cld
sub
in
xor
xchg
and
nop
xor
mov
dec
das
ja
popa
shrl
sbb
or
mov
jb
es
arpl
fnstcw
jae
push
out
int
stc
cld
or
cmp
adc
cmp
js
or
sbb
xchg
loop
inc
dec
in
push
cmp
push
dec
in
and
xlat
adc
sahf
sub
mov
inc
popf
and
mov
addb
pop
sbb
adc
sub
daa
lcall
sbb
fs
mov
and
in
jg
cltd
inc
fs
push
fldenv
sub
cmc
mov
pusha
dec
xchg
aam
call
imul
enter
xchg
lods
sarb
inc
outsb
stc
xchg
outsl
and
dec
pop
insl
add
insb
jle
lcall
aaa
and
or
jnp
mov
hlt
mov
mov
adc
push
shlb
mov
push
push
and
ret
dec
or
sub
js
xor
xlat
or
or
imul
js
cs
jge
in
das
pop
ljmp
popf
je
pushw
lods
pop
sar
xchg
movsl
mov
sbb
mov
jbe
int3
or
xchg
xchg
out
test
dec
cmp
jbe
pop
and
inc
cli
sar
leave
int3
dec
jl
adc
jmp
cltd
cmpsl
jns
and
jne
insl
add
mov
daa
mov
sbbl
icebp
cltd
add
xchg
test
push
jmp
or
dec
pop
inc
daa
sub
mov
cmp
dec
push
sub
add
fs
in
cltd
or
pop
inc
push
sub
xor
lcall
insl
pop
push
and
push
push
xorb
popa
push
pop
sbb
scas
jno
shl
stc
jge
ficomps
inc
push
hlt
fistps
xor
xchg
cmc
or
js
into
gs
mov
ret
in
clc
xchg
sbb
xchg
cmp
leave
inc
sbb
fstl
xlat
push
pop
fwait
and
mov
push
mov
sbb
or
and
enter
fisubrs
push
xorw
pop
or
loope
push
ret
lods
int3
xor
inc
fdiv
in
cli
fwait
inc
es
dec
in
loopne
inc
jmp
inc
pushf
int
mov
out
mov
mov
xor
pop
inc
dec
test
dec
and
mov
cmp
xorl
mov
lock
aaa
xor
clc
sarl
fbld
adc
jo
sub
add
inc
sar
fdivp
cmpsl
icebp
enter
pop
jne
movsl
adc
mov
in
pusha
jne
pushf
aam
mov
pop
outsl
les
les
addr16
dec
push
ret
out
insb
and
pop
cwtl
aas
jnp
jge
test
test
inc
dec
mov
out
mov
call
push
lcall
loope
test
xchg
cmpsl
add
mulb
xor
push
xchg
fsubr
ss
sbb
xor
push
pop
jle
movsb
and
xchg
sub
inc
push
in
adc
mov
dec
addr16
lods
sbb
push
call
jbe
in
push
mov
sbb
cmpb
dec
in
outsl
sbb
jle
and
cmc
push
mov
data16
sbb
jb
popa
dec
nop
add
clc
jbe
mov
push
pop
mov
adc
mov
cmp
aad
fsubr
je
push
mov
push
in
mov
push
push
mov
les
es
sti
fldcw
pop
adc
sbbb
movsl
mov
aaa
xor
pop
cmp
inc
push
idivb
dec
mov
sar
add
sub
sub
mov
cwtl
cli
cmp
inc
mov
std
out
jecxz
ljmp
mov
cwtl
cmp
fbld
inc
sub
push
popf
stc
aaa
or
jae
hlt
cmp
movsl
stos
pop
movsl
dec
push
movzwl
mov
mov
jae
inc
fsts
stc
in
cld
inc
cld
fldl2e
sub
sub
mov
imul
pop
cwtl
mov
add
ss
xchg
sub
adc
xor
cld
sub
int3
std
orb
add
push
pusha
xorl
cs
repnz
inc
lahf
call
push
jge
adcb
and
cmp
outsb
and
mov
jns
rcll
lret
jle
outsl
test
test
jns
fnstenv
dec
mov
in
sub
xor
mov
push
cmp
adc
pusha
pop
out
or
add
aas
fstps
cmovo
cs
xor
push
fs
mov
das
ficomps
xor
mov
test
fiaddl
das
jbe
cmp
in
xor
mov
sarl
mov
sbb
mov
inc
lret
incl
fldln2
pusha
xchg
stc
cmc
movsb
imul
cli
cwtl
cs
xlat
mov
or
xor
ljmp
mov
jns
subb
out
add
mov
nop
dec
mov
and
jle
jo
pop
popf
int3
fucomip
repnz
mov
pop
sahf
push
add
xor
jge
and
or
xchg
sub
cmp
xlat
cwtl
mov
test
out
es
das
push
sbb
mov
adc
pop
pop
stos
inc
clc
dec
add
adc
push
movsb
cmp
ret
mov
mov
test
test
ja
ret
pop
sbb
mov
adcb
lahf
sbbl
int
inc
or
sbb
adc
mov
or
or
xor
rorl
pop
movsl
cmp
dec
ret
fcmovnb
ja
inc
pop
sbb
insl
push
push
xor
push
loop
mov
mov
imul
aaa
addb
pop
sub
loope
pop
daa
mov
pop
icebp
aas
outsb
lea
mov
cli
jbe
imul
clc
lea
xchg
add
cs
sbb
pop
push
xchg
dec
mov
flds
leave
xchg
movsb
cli
dec
push
pop
lcall
mov
fstps
and
jns
shrl
incl
pop
push
dec
scas
or
adc
mov
adc
lods
scas
mov
fbld
mov
loopne
mov
movsl
outsb
dec
in
cld
or
and
cmp
mov
aaa
fucomi
inc
dec
and
inc
in
insb
adc
lcall
push
pop
std
cld
or
lds
imul
sahf
sbb
and
adc
xchg
jp
jbe
cmp
incl
fdivrl
and
push
xchg
adc
cmp
jecxz
cltd
dec
mov
in
mov
sub
stos
push
or
in
or
and
xor
int3
sub
inc
aas
popf
mov
lret
pushf
leave
push
sbb
pop
jle
adc
or
and
sbb
or
pop
sub
stos
add
sub
ds
inc
les
cmp
jb
inc
data16
cmp
cmc
aad
jns
pop
sub
jge
xchg
imul
in
adc
sub
cli
and
sbb
ret
outsl
push
xchg
jns
mov
xchg
add
lcall
std
movsl
inc
fisubrl
outsb
push
fs
xor
test
push
pop
mov
cli
lret
add
decl
xor
mov
inc
push
dec
jecxz
mov
cmp
in
fdivs
inc
aam
dec
into
inc
push
jo
out
shr
pop
mov
cltd
xor
stos
xchg
arpl
out
in
inc
fucom
repnz
lods
lods
cli
shll
add
in
into
adc
sti
mov
mov
dec
dec
sub
dec
add
enter
inc
pop
xor
cwtl
sub
dec
cmp
jecxz
sti
inc
shlb
notb
inc
fld
adc
dec
add
pop
int
mov
scas
mov
mov
push
pop
inc
fisubrl
aas
lret
push
jge
outsl
dec
data16
inc
cmp
ret
leave
add
pop
lock
out
repz
xchg
stos
int3
adc
fcoml
popa
loopne
iret
cmpsb
pop
cmc
add
sarb
pop
push
dec
mov
fs
ficoml
repz
fldl
rorb
mov
or
les
lahf
mov
cli
cmpsl
xor
sbb
popf
add
movsw
stc
mov
inc
inc
test
push
sub
movsb
push
shrb
pusha
repnz
jno
cmpsb
xchg
jecxz
pop
and
out
add
in
xchg
cmp
imul
mov
mov
mov
push
jle
insl
std
loop
mov
xchg
es
sahf
sub
into
lea
xchg
je
shrb
fildll
iret
xchg
js
movsl
stos
mov
jne
xor
or
sub
cmp
mov
mov
pop
lahf
int3
inc
dec
pop
hlt
in
rclb
pop
mov
imul
movsb
cmp
in
cmc
mov
dec
testb
inc
jge
pop
aaa
pop
mov
iret
out
imulb
add
adc
mov
push
loope
xchg
test
repz
sub
hlt
dec
mov
inc
pusha
clc
mov
jmp
stos
into
jo
jecxz
cmp
icebp
mov
xchg
mov
jbe
shlb
or
adc
ret
xor
sbb
lods
shlb
fucomi
sbb
ss
mov
insl
pop
sbb
les
adc
mov
cs
shlb
jne
add
js
xchg
gs
sub
push
mov
and
test
pushf
inc
mov
in
fnsave
jnp
inc
push
mov
je
setge
mov
adc
pop
in
pop
repnz
adc
pop
add
fs
mov
xchg
push
sub
jmp
push
repz
push
jne
inc
imul
add
data16
fimuls
fbld
cmp
sub
packssdw
leave
loopne
lret
xlat
or
popa
jecxz
sarl
adc
cmp
sub
je
js
cmp
fmull
mov
gs
out
adc
dec
or
in
das
sbb
scas
outsl
clc
sahf
fimull
pop
mov
inc
sub
jns
xchg
fldl
or
mov
call
adc
jae
adc
or
test
stc
imul
addr16
xor
stos
add
xor
daa
jle
add
dec
in
std
andb
aad
mov
mov
rorb
pop
dec
loop
dec
shlb
out
je
fucomp
test
adc
lret
sub
mov
mov
push
mov
push
inc
test
cmp
frstor
cmp
in
and
mov
push
and
cltd
pop
xchg
cmp
orb
mov
mov
push
ror
or
push
mov
dec
fwait
push
addr16
outsb
and
enter
orl
adc
adc
push
ret
pop
repz
sub
stos
sarl
mov
push
pop
mov
push
sarb
popa
or
outsb
jp
or
push
mov
lret
cld
loope
push
and
fnstcw
mov
push
or
xchg
test
mov
mov
mull
mov
mov
cmp
dec
dec
outsb
loope
fwait
cltd
add
je
and
cltd
addl
inc
jmp
js
or
fists
fwait
mov
inc
popa
adc
test
lds
movsl
adc
cmp
loop
xchg
aas
mov
sbb
or
sbb
ret
mov
push
sub
hlt
leave
ficompl
push
out
mov
jg
aad
cmc
xchg
inc
lret
outsl
daa
data16
mov
cli
pop
mov
pushl
scas
pop
xchg
sarl
xchg
inc
clc
mov
push
arpl
test
cli
enter
jbe
mov
mov
fldcw
leave
loopne
int
dec
or
std
push
push
in
push
sbb
lret
in
ljmp
pop
lods
lret
pop
stos
mov
out
push
mov
mov
ljmp
mov
add
out
mov
jno
rcrb
push
shll
jnp
sbb
scas
jb
xor
ret
jnp
xlat
mov
pusha
int
adc
xchg
mov
ret
aas
aad
push
and
sbb
xchg
fs
inc
stos
test
pusha
add
pop
test
push
and
jl
stc
pop
push
jns
out
cwtl
add
pushf
shr
and
xchg
xor
push
icebp
cmpsb
test
dec
gs
jns
push
mov
mov
jne
sub
adc
pop
jae
add
xchg
inc
fdiv
dec
add
push
jb
sbb
push
mov
xchg
push
not
and
cmpsb
push
rcl
bound
inc
jnp
adc
out
loopne
jl
lods
popa
std
pop
mov
loopne
or
jl
cwtl
negl
jp
adc
xchg
data16
lock
pop
outsb
add
add
pop
loope
cmp
add
mov
fwait
push
pop
push
sbb
and
and
pop
sub
pop
sub
cmpsl
pushf
nop
fiadds
mov
in
xor
fidivrl
mov
iret
mov
pusha
out
or
aas
call
xchg
setb
pop
push
jp
mov
rcll
ljmp
and
xchg
subb
xlat
mov
dec
lds
lea
ds
fcoms
or
xchg
out
ss
pop
xor
mov
call
jmp
ljmp
divb
sbb
sub
or
pop
lods
jecxz
adc
out
inc
int3
arpl
mov
adc
jnp
outsb
mov
sbb
cmp
jp
dec
mov
push
fstpl
repnz
pop
cltd
mov
rorl
outsl
movsl
jle
pop
mov
shlb
mov
xor
xor
push
fdivl
aam
xor
lods
ljmp
and
xchg
cli
aas
lcall
and
or
in
repz
hlt
loope
lcall
iret
fcmovnu
out
add
cwtl
cmc
and
lock
push
adc
aad
add
inc
movsl
push
push
repnz
xchg
and
cmp
and
aam
std
xchg
mov
out
repnz
xchg
enter
mov
mov
hlt
mov
xor
inc
fists
push
lods
xchg
xor
out
ja
jl
out
cwtl
je
dec
add
test
lahf
mov
clc
mov
fnstcw
imul
dec
inc
add
mov
jg
mov
in
push
rcl
and
push
repz
sarb
adc
pop
stos
fs
in
ss
push
inc
mov
cld
push
mov
inc
hlt
or
rcrb
daa
inc
or
mov
cmp
aas
cmpsb
cmp
iret
push
les
test
stc
xchg
inc
ret
adc
pusha
imul
into
ljmp
stos
push
jnp
and
mov
mov
dec
nop
test
iret
sahf
call
andl
mov
inc
cmpsl
nop
int3
mov
or
xchg
insb
ret
mov
inc
call
ret
xor
dec
sub
mov
inc
out
ret
or
xchg
mov
jl
imul
mov
adc
insb
andl
in
sub
ljmp
push
pop
sbbb
loop
pop
ss
add
dec
mov
shlb
mov
add
jle
aam
lods
sbb
jo
sbb
scas
aas
pushl
test
mov
or
aaa
sbb
pop
mov
es
lahf
rorb
sbb
pop
mov
dec
jg
mov
inc
push
push
sub
mov
xor
xchg
and
sub
mov
dec
cwtl
ds
sub
inc
inc
out
dec
jp
inc
int
and
sub
xchg
inc
push
inc
test
sahf
push
adc
mov
sbb
dec
dec
enter
imul
xchg
int
mov
xchg
sbb
add
jle
mov
and
scas
and
dec
rcll
repnz
test
xchg
sbb
xchg
mov
mov
push
stos
cmp
mov
fcoml
jp
mov
enter
dec
rcl
jbe
imul
cmp
xlat
cmc
and
fisubrs
aaa
stos
aas
inc
pop
ss
push
cwtl
inc
cwtl
mov
stos
out
leave
mov
mov
cwtl
sub
dec
shr
dec
popa
or
push
xlat
shrb
xchg
in
jno
jmp
aaa
sbb
xor
movsl
add
xor
data16
and
xchg
pop
test
jl
adcl
and
cmc
push
mov
or
pop
ficomps
sbb
or
fdivrs
nop
mov
lods
sbb
mov
push
inc
adc
aam
dec
push
popf
lods
cmpsl
pop
scas
mov
pop
fwait
jg
nop
sti
int
scas
mov
jle
cltd
pop
ret
iret
jno
insb
push
gs
stc
stc
out
xor
xor
jo
inc
pop
out
ds
xor
and
cwtl
es
test
lcall
fwait
es
ljmp
imull
ss
mov
cltd
fisubrl
cmc
mov
loopne
shl
scas
push
adc
fwait
sub
inc
fs
push
fisubrl
scas
mov
cmp
cld
sbbl
add
pmullw
or
and
addr16
stos
rorb
mov
fadds
xchg
add
movsb
add
cs
add
mov
dec
mov
pop
cmc
jnp
fs
dec
popa
or
lods
out
sarl
roll
xchg
cs
cmp
enter
xor
push
in
test
scas
jno
dec
pop
lcall
dec
loop
sub
cmc
popa
push
jmp
pop
xor
iret
cmpsb
pusha
not
jo
pop
push
clc
and
sbb
adc
lcall
fcmovbe
repz
das
jmp
inc
in
imul
ficoms
aas
sub
mov
loopne
mov
fimull
out
out
push
out
test
or
pop
outsl
rcl
adc
adc
loop
addr16
mov
inc
es
scas
call
fbstp
mov
push
xchg
mov
jmp
sub
cltd
sbb
or
fwait
sub
rcrb
push
jmp
dec
mov
rol
or
cmp
jl
sbb
inc
pop
cld
rcrl
pop
sub
popa
jbe
repnz
mov
addr16
in
cmp
jno
xor
in
mov
and
or
push
xchg
push
inc
inc
or
adc
das
mov
in
inc
stc
cwtl
sub
xor
lret
icebp
fs
jno
cmpsb
sbb
xchg
call
inc
bound
mov
mov
inc
fisubrs
dec
pushf
orl
mov
cltd
push
repnz
mov
leave
lods
inc
and
ja
dec
sbb
or
and
js
add
cld
outsl
out
sbb
rcrb
cmp
pop
xor
mov
add
clc
xchg
jle
jo
movsl
cmp
dec
jnp
outsl
ds
fisubs
adc
clc
repz
dec
mov
sbb
jge
pop
dec
icebp
shl
jg
xchg
cmp
fcoml
adc
popf
cld
mov
aad
sbb
adc
sub
movsb
mov
pop
pusha
gs
mov
pop
pop
sahf
push
repz
cld
sub
mov
stos
mov
xchg
test
insl
dec
jl
je
mov
shlb
sti
ret
sarl
dec
ds
iret
mov
icebp
ja
int3
int
sbb
jle
dec
xchg
jbe
pop
cmpsl
lcall
movsl
cmp
push
sub
es
sub
test
movsb
cmp
cmp
out
sbb
cmp
jo
std
imul
xor
sub
ds
inc
pop
addr16
hlt
rorl
cmp
enter
repz
push
insb
out
popf
jl
gs
fwait
xchg
bound
shlb
in
lret
xchg
sbb
outsb
cld
push
mov
jae
ret
xchg
mov
and
jl
sbb
sub
lcall
inc
int
call
or
jns
out
jl
cmp
xchg
stos
test
mov
jle
icebp
or
lahf
lret
pop
packsswb
movsl
xor
mov
out
fcoms
aam
xor
mov
sbb
push
add
ss
cmpsb
mov
cmp
push
lret
or
fs
jmp
out
xchg
pop
bound
mov
adc
test
or
xchg
sub
push
xchg
mov
push
xchg
cmpb
fsubr
mov
and
popf
out
inc
clc
xor
or
rcr
mov
test
inc
push
frstor
js
adc
test
cltd
and
xchg
add
decl
sbb
xchg
js
ret
inc
nop
jmp
push
iret
mov
cld
rcll
mov
stc
sub
les
inc
out
call
pop
jbe
ss
push
mov
insb
imull
xor
lods
ret
hlt
into
mov
into
push
cmc
mov
or
js
es
icebp
jge
inc
sahf
cmp
movsb
push
and
mov
imul
fidivs
xchg
mov
insb
mov
cs
cwtl
mov
inc
out
cli
orb
rorl
testb
inc
lods
call
sti
mov
cmc
test
mov
push
mov
int3
dec
jmp
dec
pop
aas
or
lea
movsl
add
jmp
push
pop
cmpsb
insl
inc
push
mov
mov
divl
jge
pop
inc
adc
mov
insl
leave
cmp
scas
push
sub
mov
pop
out
ret
cld
mov
sbb
js
mov
or
and
sub
out
sub
jp
data16
sbb
dec
shrl
daa
mov
pop
aam
fxtract
ja
jg
jae
mov
scas
out
pop
sbb
in
daa
fsubrs
or
sub
aam
inc
xchg
loopne
sub
mov
sbbl
jp
aad
lret
je
sub
in
xchg
std
cmp
dec
jp
test
xor
outsl
add
int
insl
imul
sbb
xchg
push
data16
xor
cli
or
adcl
mov
sbb
mov
xlat
lret
xchg
in
mov
adc
jp
ss
fsub
jle
mov
loopne
or
xchg
mov
sbb
pop
push
outsb
dec
push
call
push
adc
stc
mov
ficoml
pusha
outsb
push
lods
jns
jb
dec
fmul
fadd
xchg
enter
lret
popf
ds
dec
pusha
repz
xorb
rcrl
jge
push
or
cmpsl
mov
shrl
or
jne
fsubs
cli
pop
add
repnz
xchg
inc
ljmp
test
sbb
sub
inc
enter
bound
ret
xor
and
loopne
imul
arpl
and
test
movsb
dec
sbbb
imul
pop
pop
push
shlb
nop
dec
fsubl
dec
loope
das
int
push
in
icebp
insl
push
mov
inc
adc
xchg
inc
mov
dec
ret
add
mov
in
push
inc
xchg
sti
pop
enter
enter
imul
pop
and
mov
mov
dec
mov
shlb
adc
add
dec
sti
cltd
xchg
xchg
mov
push
adc
or
out
cli
xchg
loope
jno
lahf
cmp
xchg
popf
gs
lahf
outsl
jge
xchg
pop
idiv
push
dec
arpl
sbb
pop
icebp
mov
jbe
in
add
inc
outsb
push
test
dec
mov
movsl
pop
dec
test
shrb
push
sbb
xor
in
mov
loopne
test
push
ja
jge
js
loope
ret
ja
cmc
scas
addr16
subl
or
jge
xchg
sub
dec
inc
mov
pusha
cmp
addl
adc
int
inc
mov
jecxz
push
pusha
adc
scas
push
movsl
mov
incb
dec
insl
pop
scas
adc
adc
xchg
fstpt
push
pop
or
int
push
daa
je
pop
shll
cmp
aas
mov
jne
inc
adc
xchg
jge
and
pop
mov
mov
loope
or
mov
ficoms
test
into
test
out
jp
mov
test
xchg
mov
lret
in
inc
repnz
xor
test
lret
pusha
fwait
out
jne
stos
cmpsl
inc
ficoms
mov
and
push
adcl
hlt
popa
mov
mov
popw
and
push
lcall
mov
mov
inc
xor
mov
mull
mov
test
lcall
es
pushf
neg
adc
sub
test
sbb
pusha
add
pop
mov
adc
aam
incl
addb
mov
sbb
and
add
test
cmp
shrb
hlt
add
shlb
lea
inc
out
xchg
repz
cmp
arpl
loop
jno
cmp
ret
jmp
xchg
pop
push
pop
cmovno
pop
jno
ds
pop
cmp
cmp
dec
pop
or
inc
sub
and
rcl
fimuls
dec
shrl
jecxz
pop
cmp
jecxz
and
inc
fidivrs
fs
pop
lahf
fdivrl
sbb
das
je
adc
movsb
inc
jae
pop
adc
fs
sub
sbb
shll
push
ja
inc
cld
cwtl
sbb
pop
mov
je
and
xchg
mov
out
jmp
xor
and
pop
sub
cmp
leave
inc
decl
mov
mov
leave
aad
mov
mov
lcall
loopne
ret
loopne
in
mov
mov
in
cmp
push
or
scas
ret
lock
pop
mov
fnsave
mov
addr16
mov
xlat
repz
push
jae
dec
mov
in
jae
xor
pop
out
mov
fcmovnb
rcrb
sbb
jne
mov
cld
xchg
das
sub
ret
sahf
sbb
cltd
pop
scas
lret
or
inc
xor
sub
xor
rcrb
je
test
movsl
cmp
jnp
sbb
repnz
mov
mov
sarl
in
sti
imul
jecxz
jne
addb
mov
leave
jae
add
ret
jne
repnz
outsl
gs
adc
sub
push
inc
jne
xchg
sbb
cmp
lea
mov
or
adc
or
repnz
lret
cmp
cmp
rcrl
int3
pop
cmpsb
and
xchg
rcr
xor
mov
ljmp
inc
dec
and
pop
loope
fidivs
add
pop
popf
jg
cltd
popf
fwait
sub
dec
ss
sbb
or
bound
sbb
fistl
jo
andb
dec
push
outsl
lret
jno
js
inc
sub
jno
enter
sub
jne
ret
mov
mov
pop
pusha
scas
and
icebp
xchg
dec
mov
lea
pop
in
xor
push
repz
leave
jno
jl
fldl
push
push
sbb
and
es
add
and
mov
cmp
and
inc
ja
pop
roll
mov
loop
pop
mov
stos
add
pushf
jo
bound
mov
mov
xchg
loopne
sarb
aad
jnp
out
into
and
mov
loopne
jbe
mov
stos
inc
aas
pop
push
sbb
test
lcall
stos
xor
popl
cmp
movsl
vrsqrtps
iret
aaa
push
in
jmp
or
js
inc
cli
sbb
js
outsb
adc
outsb
add
pop
pop
mov
add
mov
repnz
mov
xchg
lcall
xor
es
or
lods
xor
mov
jbe
arpl
xchg
mov
lock
add
xor
xor
inc
sub
jecxz
push
sbb
inc
sti
mov
fdivl
call
sub
fldl2t
xchg
stos
add
mov
push
jae
lods
nop
xchg
and
cmc
sub
push
inc
mov
fs
pop
int3
jnp
testw
arpl
jns
add
mov
inc
data16
insl
jge
xor
xchg
adcb
mov
jbe
inc
cs
jne
outsb
xchg
mov
xor
movsl
push
add
test
jno
inc
sbb
lret
lret
fidivl
cld
push
dec
jge
scas
test
test
into
push
inc
in
cmpsl
mov
cmp
xor
lods
push
cmp
adc
sbb
sub
cli
es
popa
pop
sbb
mov
push
sub
cmpsl
add
xchg
push
jo
mov
shl
mov
add
fnstenv
inc
gs
fbld
enter
rorb
push
ljmp
xchg
aam
sbb
sub
daa
jle
movsl
cmovs
sbb
out
push
jno
shrl
xor
movsb
out
sub
hlt
adc
and
sub
push
arpl
imul
ud2
mov
stos
and
pop
or
ret
rcrl
dec
sbb
addr16
repz
or
mov
js
lds
pop
fwait
pop
xor
jo
or
test
insb
jnp
std
out
cld
pop
push
mov
dec
pop
fisubrs
rolb
adc
push
xchg
pop
cmc
ss
das
xorb
enter
int3
mov
push
movsl
ja
js
shrb
pop
pop
sarl
mov
xchg
push
scas
adc
or
nop
or
mov
test
je
xor
cmc
imul
or
rorb
pushl
push
call
and
mov
sub
mov
dec
std
mov
leave
scas
cmpsl
cmc
mov
mov
jmp
subw
add
inc
cmp
movsl
adc
jmp
and
jecxz
in
arpl
sub
ss
lret
mov
and
ss
out
mov
or
mov
stos
out
out
scas
cmp
cli
into
cmp
sub
andl
sbb
dec
in
in
jno
ud1
mov
push
ja
inc
dec
mov
pop
cmc
or
and
cmpsb
mov
ret
outsl
pop
jg
idivb
jbe
mov
shl
testl
daa
gs
xor
ss
xlat
xchg
mov
rcrl
add
test
mull
nop
loope
mov
xor
inc
lea
xor
sahf
icebp
lcall
cmpsb
testl
addr16
xor
loopne
nop
in
pop
add
mov
jl
sti
mov
mov
lahf
pushf
testl
push
dec
jle
add
es
pop
or
mov
imul
daa
scas
scas
or
cmp
lcall
fsubl
divl
push
xchg
ds
ja
xor
adc
shr
mov
xchg
je
sbb
sbb
xchg
push
loopne
mov
repnz
sarl
stc
inc
push
ja
cli
out
jne
and
push
insb
std
jno
jmp
testb
mov
ret
outsl
add
xchg
push
pop
jns
cmp
xorb
inc
cmp
ficomps
xlat
mov
pop
xor
xchg
in
mov
call
lock
mov
daa
loop
push
inc
scas
push
cmpsl
sbb
jns
leave
mov
out
out
orl
out
adc
rorl
test
mov
sarl
fcomps
inc
mov
call
mov
bound
nop
cmp
push
sbb
test
out
test
imul
aad
mov
jnp
jbe
lds
mov
xlat
pushf
lret
cmpsl
mov
lock
cwtl
or
xchg
in
popf
js
pop
pop
jg
lcall
aaa
push
or
das
push
adcl
in
mov
lahf
mov
push
mov
add
movsb
insl
fmuls
lock
in
fcomps
lods
sbb
mov
pop
addr16
aaa
mov
or
adc
aaa
pop
push
cmp
jmp
iret
xchg
cmp
mov
pop
sub
out
xor
lcall
sbb
inc
mov
outsl
sbb
mov
mov
out
xor
push
push
aaa
push
fwait
int3
dec
rclb
bound
test
repz
mov
imul
xchg
mov
rolb
insb
push
mov
and
sub
inc
add
jb
lock
bound
lret
xchg
jle
pop
insl
push
pop
mov
and
fidivs
shl
sahf
shrl
or
int
test
das
scas
aad
and
dec
sub
ss
xchg
add
mov
mov
dec
rolb
push
out
aam
out
xchg
mulb
jns
lods
mov
das
mov
mov
inc
mov
rorl
lods
stos
xchg
sbb
out
mov
push
mov
cwtl
in
cmp
fisubl
iret
xor
mov
rorl
mov
xchg
sub
fnsave
mov
sbb
xor
hlt
pop
sbb
lods
adc
ret
pushf
and
int
rolb
sahf
in
sbb
mov
dec
and
adcb
cmpsb
jo
sti
mov
dec
mov
icebp
aam
mov
ficomps
mov
mov
aas
cmpsb
ror
aam
pusha
mull
inc
add
cmp
adc
push
pushf
sti
repz
mov
adc
dec
and
lahf
fsub
shll
or
pop
cmp
pop
loope
pop
enter
cmp
pop
stc
push
mov
mov
sbb
xor
cmpsb
cmp
mov
aas
mull
jo
pop
xor
test
xchg
and
mov
mov
mov
xacquire
out
adc
jne
inc
fcoms
fucomp
push
leave
ret
dec
jbe
sub
imul
rcr
out
sti
or
fs
ja
xor
push
push
ret
pop
iret
sub
xchg
aas
arpl
mov
mov
lods
inc
sub
xchg
and
outsl
movsl
push
mov
ret
jge
pop
adc
mov
inc
pusha
dec
aaa
add
sbbl
outsl
pop
cmc
pop
mul
xchg
data16
nop
sbb
cmp
mov
aas
mov
cmp
js
shlb
xor
dec
and
mov
rolb
push
and
popa
fdivr
sub
dec
mov
cmc
popf
xor
and
sbb
roll
or
add
shll
out
aad
pop
outsl
inc
dec
pop
jmp
imul
enter
cmp
test
cmp
cmp
inc
not
icebp
shlb
jb
mov
dec
push
hlt
xchg
push
jmp
inc
shll
les
addr16
pusha
cltd
testb
mov
ljmp
pop
adc
xor
inc
fdivrl
movsl
mov
cmc
movsl
push
lods
add
mov
cmpsb
inc
xchg
pop
arpl
stos
jne
mov
xor
push
fs
addl
adc
stos
mov
ja
xchg
ja
shrb
addr16
push
push
stos
lock
repz
std
sar
mov
dec
cmpsb
mov
leave
or
shrl
scas
cmp
jp
adc
adc
push
xchg
xlat
mov
loop
xor
addr16
bswap
insl
cwtl
lods
xchg
pop
fisttps
movsb
sti
push
pop
out
test
or
pop
bnd
pop
bound
mov
iret
leave
std
and
and
and
cmp
push
test
rcl
faddl
adc
cmc
and
fsubs
dec
lock
out
jg
pushf
cmp
movsl
shrl
sub
add
das
std
test
xlat
push
xchg
push
sub
push
push
jg
xlat
insl
sti
enter
lahf
hlt
lret
dec
sbb
aam
push
xchg
sahf
hlt
cmp
and
shl
jnp
mulb
fmul
mov
or
xchg
jnp
push
stos
dec
fwait
repz
stos
and
xchg
sahf
hlt
mov
stos
aas
xchg
xchg
inc
pop
mov
pop
push
jb
sbb
jne
mov
mov
jns
mov
pop
testb
mov
ss
pop
pushf
push
outsl
es
movsl
cli
mov
rolb
inc
dec
aad
push
sti
push
leave
add
sbb
cli
fdivrl
cmp
scas
insb
movsbl
imul
fwait
sti
movsl
xchg
std
loopne
je
lea
in
xor
push
lock
adc
in
xchg
in
das
mov
xor
test
icebp
sbb
dec
jge
lds
stos
adc
push
jl
adc
xor
ljmp
popf
aam
pop
sub
push
addr16
push
mov
add
mov
jmp
cs
aad
daa
imul
jbe
add
imul
imul
cli
outsb
mov
adcl
movsl
stc
sahf
push
and
lock
hlt
jle
or
call
adc
xchg
imul
inc
outsb
rorb
jp
sbb
xor
js
sahf
test
in
stc
fmuls
mov
mov
jo
xor
mov
int
mov
dec
mov
mov
push
jle
jg
mov
sbb
or
mov
out
lods
jecxz
push
and
dec
pop
scas
ret
xchg
inc
push
outsb
add
sbb
mov
aad
fwait
int
int3
int3
lock
ljmp
jbe
adc
lods
test
ja
cwtl
test
or
add
and
lods
mov
and
pushf
push
or
dec
cmp
add
mov
or
adc
adc
rclb
into
mov
pop
pop
and
sub
inc
and
pop
push
in
mov
insl
scas
pop
and
clc
push
or
arpl
cmp
cld
bswap
sbb
stos
out
jne
mov
xlat
pusha
lods
cltd
pop
filds
pop
cmp
test
dec
stos
stc
or
push
data16
sbb
xlat
iret
insl
inc
pop
lahf
lock
add
or
test
sbb
or
jne
dec
fisttps
push
test
jp
enter
fldl
mov
push
test
inc
std
adc
imul
and
cs
popa
orl
scas
lock
jns
or
add
arpl
or
std
jle
or
arpl
jmp
mov
repz
jmp
mov
arpl
sbb
fidivs
repnz
jg
loopne
or
jmp
pushf
or
out
jle
cmp
adc
lea
pushf
or
or
xchg
and
mov
out
add
daa
push
xor
add
cmp
jae
mov
movsl
jecxz
fidivs
call
into
xchg
lds
fmulp
xchg
push
or
frstor
insl
add
cmp
inc
and
mov
xorb
mov
dec
jno
adcb
pop
jmp
and
outsl
fdivrp
xchg
adc
push
sbb
ret
mov
mov
in
xor
xor
pop
test
cmc
mov
mov
fidivs
add
and
fildll
clc
sub
xchg
fstps
mov
cs
mov
jmp
ss
dec
mov
pop
cmc
stos
xchg
push
call
or
jnp
cmpb
fiaddl
and
mov
sti
ja
or
lahf
xor
mov
test
mov
and
xchg
adcb
outsl
fisubs
xlat
leave
popa
clc
stc
and
xchg
add
stc
rcll
sbb
pop
int
iret
lret
loop
loope
mov
xchg
jns
sbbb
fcompl
out
sti
stos
dec
movb
cmc
or
or
adc
sbb
xor
and
inc
push
inc
pusha
fcmovnu
jne
pusha
lods
sub
cld
sub
divb
test
or
dec
fs
sub
js
xlat
mov
lcall
xor
insl
imul
dec
mov
push
dec
lds
pop
cmp
rolb
jb
mov
daa
sbb
pop
out
push
inc
and
fisubrs
xor
cmp
sub
xchg
cld
xchg
or
adc
mov
ret
jbe
popf
mov
insb
mov
mov
adc
cmp
sbb
loop
insw
sbb
push
xorb
scas
cmp
push
xchg
sub
mov
outsb
test
sbb
rcrl
push
imulb
scas
inc
lock
int3
ffreep
xchg
es
into
jb
adc
aam
xchg
xchg
ret
mov
jl
lahf
scas
mov
test
pop
lahf
cmp
ljmp
adc
add
cs
test
call
mov
push
push
jae
fimull
bound
xorb
adc
pop
repz
or
aad
shrb
cmp
mov
stos
xchg
push
push
and
jg
mov
mov
lcall
popa
cli
sbb
cmp
and
xorb
sti
fidivs
call
jge
shll
in
xchg
cmp
xor
and
out
lret
fdivl
jmp
add
cld
sahf
push
rcl
xchg
mov
loop
insb
inc
or
fmuls
dec
add
xor
sub
inc
loope
inc
add
aas
aas
xchg
jno
into
dec
lods
sahf
cmp
adc
lret
mov
and
int3
sbb
shll
aas
shrl
cmpsl
or
xchg
psllw
int
dec
jecxz
sti
mov
outsb
jle
push
sbb
add
xchg
jmp
sbb
xor
push
shlb
jo
adcb
pop
std
pop
out
xchg
xor
int3
int
jle
jecxz
jecxz
add
adc
outsl
adcb
mov
cmpsl
jge
mov
xor
pop
mov
push
mov
lods
rolb
shrb
xor
aad
add
sahf
push
subl
lret
das
inc
fdivl
mov
mov
cwtl
mov
dec
call
insl
dec
inc
cli
add
rcrl
and
imul
cmpsl
mov
mov
insl
xchg
or
ret
fsubrl
adc
xchg
sbb
mov
inc
jmp
or
test
bound
pushf
or
mov
ret
out
jle
ror
test
pop
repnz
ja
mul
xor
inc
or
xchg
sub
jl
loope
or
jbe
outsl
mov
rcrb
sarb
lods
repz
adc
imul
inc
test
ljmp
add
outsl
imul
scas
add
rolb
inc
adc
stc
inc
jnp
fiadds
mov
and
aad
sub
mov
xlat
pusha
in
jmp
xchg
fnsave
or
jge
std
mov
sub
sub
dec
or
aaa
jg
dec
and
bound
nop
push
dec
popa
addr16
inc
or
es
ja
or
out
push
fistl
pusha
divb
inc
dec
inc
mov
insb
adc
fisubl
loope
xor
out
stc
fsubp
jge
int3
pop
addr16
add
xchg
mov
sub
push
cmp
call
sbb
add
addl
xchg
sahf
jns
cmc
xor
test
in
add
and
push
inc
aaa
ret
leave
sbbb
push
icebp
xor
inc
pop
outsb
je
js
cmpsl
push
or
jb
insb
pop
mov
dec
adc
jnp
jecxz
stos
or
lock
cmp
fs
test
pop
mov
xor
dec
cli
pushf
dec
cwtl
pushf
jae
js
mov
pop
cli
insl
stos
mov
mov
push
pusha
jp
push
pushf
xor
adc
inc
stos
insb
pusha
push
mov
mov
fwait
fwait
cmpsl
hlt
add
mov
mov
or
insb
dec
or
add
lds
sbb
xor
outsl
cmp
insb
dec
aad
lea
adc
jecxz
mov
sbbb
add
xor
push
push
inc
xchg
loope
loope
insl
inc
stc
or
inc
or
stos
adc
cmp
inc
fcoml
xchg
xchg
shl
arpl
and
push
mov
adc
ret
xchg
iret
cmp
mov
and
mov
loopne
outsl
push
add
inc
pop
aam
cmp
inc
mov
cmp
icebp
cli
pop
sahf
jmp
arpl
jne
out
jb
cmp
sub
aam
popf
aad
push
mov
inc
cmpsb
ret
xchg
sub
enter
pop
daa
cmp
into
popa
sarb
sub
andb
inc
lcall
mov
scas
lods
jne
mov
call
in
test
repz
data16
and
xchg
inc
mov
mov
in
rolb
je
pop
fcoms
dec
test
add
add
inc
ss
in
xchg
or
rcrl
push
clc
mov
jne
lods
xchg
dec
in
inc
iret
movsl
add
mov
xchg
les
aam
aas
rcll
inc
sub
insl
fidivs
push
adc
fsubrs
roll
push
xor
popf
push
sub
cltd
push
aas
mov
pop
cmp
into
js
adc
movsl
cltd
pusha
mov
push
pop
adc
ficoml
jmp
add
sarl
cmp
fbstp
and
inc
or
jge
sub
or
sti
cwtl
jge
std
xor
push
adc
or
test
enter
xchg
nop
imul
cli
jbe
outsl
add
cmp
add
push
mov
adc
imul
xchg
lods
lods
ljmp
pushf
scas
imul
iret
fistpl
sbb
push
xor
dec
cmp
cmp
ja
mov
stos
sub
popa
mov
add
mov
push
cmpsl
xorb
mov
ret
imul
and
mov
jno
in
pop
add
pop
lret
pop
fidivl
and
pavgw
test
testl
pop
mov
inc
mov
scas
daa
mov
inc
cmpsb
xor
push
stos
mov
fisttps
adc
push
xchg
insl
sub
addr16
xchg
pop
inc
xor
popf
xor
adc
mov
stc
and
outsb
pop
lods
add
or
xchg
add
xchg
and
scas
lock
sbb
cwtl
mov
mov
push
pop
cltd
adc
jns
cltd
and
sti
fstpt
add
data16
mov
adc
mov
sti
addr16
rcll
test
or
jo
pop
cmp
pusha
sti
out
adc
sbb
out
push
mov
aam
sbb
enter
lods
xchg
xor
cmpsb
push
xor
mov
es
mov
push
cmp
int3
fucomp
or
or
and
adcb
mov
scas
inc
jmp
adc
aas
mov
cmpsb
push
icebp
add
sbb
push
add
popf
add
ljmp
test
mov
xor
pop
pushf
dec
enter
push
out
adc
ret
jbe
int
push
or
cmp
mov
push
pop
cmp
mov
cmp
pushf
jmp
xchg
in
or
xchg
mov
lock
cmpsl
mov
and
shlb
ja
adc
pushf
xor
std
dec
pop
test
cli
pushf
dec
xchg
hlt
push
ljmp
std
fistl
decl
cmp
js
push
cmp
jecxz
jg
cli
add
pop
mov
int3
add
or
out
test
lods
fidivs
and
dec
fs
pop
mov
enter
sub
push
jb
adc
iret
push
inc
add
mov
les
testb
xor
pop
mov
jno
xchg
sub
rcrb
push
gs
iret
testb
xchg
adc
clc
mov
xor
xor
sub
arpl
test
daa
mov
mov
fld1
add
cmc
shlb
mov
cmp
daa
inc
les
fwait
loope
pop
imul
cmpsb
fnstsw
and
sti
mov
jp
adc
outsb
adc
jbe
lret
sbbl
cwtl
ss
inc
dec
jp
insb
mov
push
in
or
sbb
add
pushl
push
sti
inc
jp
cmp
inc
js
mov
pop
in
pop
mov
fimuls
push
jmp
nop
add
xor
pop
mov
xchg
rcrb
rolb
cltd
test
adc
jmp
push
lods
or
lea
shr
pop
stc
mov
pushf
scas
repz
sbb
sarl
jle
hlt
xchg
cs
sbb
dec
lods
ds
pop
sub
pop
sub
add
sahf
cltd
lret
add
jmp
ja
leave
mov
mov
shl
ret
lods
xorl
test
mov
gs
out
mov
pop
jns
dec
out
adc
mov
jle
xor
inc
dec
scas
xlat
stos
out
and
push
inc
inc
in
jns
outsb
mov
pop
fmuls
pop
cmp
loop
sahf
call
cld
push
out
jns
mov
push
fs
add
int
in
js
ljmp
xor
negb
inc
loop
jo
stc
cld
loopne
sbb
jp
mov
arpl
mov
int3
outsl
ss
push
out
je
pop
stos
lahf
sti
pop
out
fcoml
push
addl
ds
mov
dec
sbb
cld
inc
icebp
push
aaa
idivl
das
clc
sub
jecxz
mov
insl
cmp
lcall
sub
pop
fstps
mov
sti
fidivrs
hlt
imul
mov
cli
sub
fnstcw
out
mov
outsb
adc
enter
in
loopne
loopne
and
ret
sbb
mulb
push
rcrb
iret
pop
dec
xchg
clc
pop
mov
lds
popa
pop
cmp
nop
xor
and
push
push
dec
js
insl
mul
pop
jecxz
cmp
mov
dec
nopl
imul
out
mov
adc
stc
xchg
rorb
pop
mov
add
mov
in
pop
cmp
orb
push
dec
jecxz
cmp
mov
rcr
repz
xchg
cld
sahf
mov
xor
stc
add
mov
je
nopl
int3
mov
pop
cmc
test
sub
aas
inc
icebp
movsl
in
fucomp
cmp
es
inc
xchg
inc
push
lret
test
push
mov
hlt
lea
shlb
shlb
sub
cld
cs
popf
mov
sbb
sub
inc
cli
add
dec
lds
int
sub
lretw
pop
dec
mov
enter
jecxz
nop
stos
pop
movsl
sub
data16
pop
mov
imul
je
movsl
ljmp
mov
push
movsl
fs
fnsave
adcb
sbbb
or
cmp
cmc
add
xchg
jl
scas
outsb
sub
push
les
mov
imul
pusha
into
aad
imul
loope
setbe
xlat
jmp
mov
pushf
pop
ret
pop
std
xchg
push
and
outsb
inc
pop
add
mov
jne
cmpxchg
cmp
pop
insb
jg
cmp
sub
sahf
xchg
mov
pop
jnp
and
fchs
mov
mov
mov
shrl
repz
adc
cmp
push
insb
enter
push
xor
scas
aaa
in
ljmp
lock
scas
mov
into
jne
bound
and
jno
dec
cmp
pop
ret
jae
sbb
cmp
adc
mov
loope
cli
xchg
push
imul
in
test
shlb
movsb
mov
pop
int3
repnz
out
cmp
jecxz
jb
arpl
sub
shlb
inc
lods
jo
xchg
sbb
enter
loop
jge
add
enter
clc
and
or
pop
jge
xchg
addr16
add
std
and
pop
repz
jnp
dec
fs
cmpsl
sbb
sub
pop
push
loopne
pushf
fwait
mov
push
xor
xchg
fs
addr16
sarb
inc
in
jl
jnp
fdivl
pushf
mov
mov
sbb
test
jo
int3
es
outsl
inc
cmp
fsubp
aam
pusha
mov
movsb
pop
ficompl
int3
fdivl
xchg
mov
pop
and
aas
push
push
xchg
push
movsb
mov
and
jge
movsb
adc
je
test
push
jecxz
fiadds
fmulp
mov
push
test
mov
in
xor
inc
mov
sahf
hlt
stos
xlat
mov
sbb
mov
imul
pop
outsb
cmp
jnp
shlb
dec
xor
xchg
dec
ret
cmpsl
sbb
add
outsb
movsb
test
add
icebp
cs
fisubl
cli
cs
dec
adc
mov
push
mov
xchg
mov
hlt
mov
cmpsb
mov
cltd
fbstp
gs
inc
sbb
cmp
add
sbb
scas
gs
lret
pop
loop
push
movl
mov
jmp
in
out
xor
adc
inc
xchg
sub
push
aaa
les
repz
stos
dec
jmp
sar
rcrl
loop
inc
adc
pop
mov
or
nop
push
cs
in
xchg
jmp
popa
rcl
xchg
sub
imul
add
outsl
out
and
mov
in
adc
xchg
shrb
mov
pop
negl
rcrl
loope
popa
fistpl
aad
mov
adc
or
cld
aaa
repz
mov
xor
cmp
mov
lock
das
stos
sub
inc
xchg
mov
mov
and
xor
out
stc
mov
adc
lods
test
pop
inc
xor
mov
nop
std
lea
subl
or
ljmp
inc
push
js
mov
fists
sub
test
dec
or
mov
dec
fimuls
stos
data16
scas
test
jl
scas
pop
scas
or
inc
lods
sbb
test
aas
jge
cmp
fwait
xor
lcall
adc
pop
mov
xor
push
xlat
in
popa
pop
mov
addb
cmp
cmp
push
cwtl
sub
xchg
ret
sbb
push
mov
rcrb
mov
clc
dec
jns
xchg
loope
insb
add
push
mov
sar
aas
add
push
aas
stos
and
push
cmp
pop
cltd
sub
and
add
xchg
je
movsb
insb
test
sti
pushf
repz
push
in
fbstp
sub
out
enter
shrl
push
movsl
dec
enter
jmp
notl
lods
pop
outsb
test
les
ret
or
aaa
push
outsl
int
fmull
insl
sahf
jb
jo
inc
shll
movsl
push
out
popa
je
lods
adc
inc
add
lret
mov
inc
loope
mov
and
lods
gs
xor
jno
jno
xor
jl
and
cltd
add
lcall
cmpsl
add
test
inc
pusha
lret
outsl
daa
mov
lret
test
push
jo
xchg
jmp
fsubs
xchg
xchg
jno
xor
mov
add
in
mov
pop
cmp
xchg
ret
popl
pop
iret
inc
or
sti
sbb
pop
inc
pop
cmpsl
std
adc
jns
sti
mov
xchg
sub
out
jb
xor
dec
lds
hlt
pop
iret
cwtl
cmc
inc
mov
xchg
add
outsl
jns
ret
jne
cmc
sahf
out
fisttps
mov
push
xlat
jl
add
xchg
loop
mov
or
pop
push
fstps
cmp
out
lods
pop
arpl
out
jmp
scas
or
push
pop
push
loope
addr16
aas
clc
xchg
rorl
add
pop
xor
pop
cmpsl
ret
mov
icebp
leave
or
or
adc
insb
lds
xlat
cmp
nop
test
xor
push
add
out
insl
arpl
pop
mov
mov
push
ret
push
pop
mov
and
decb
xchg
fidivl
push
negl
test
push
mov
jnp
negl
ret
jle
sti
xchg
or
mov
xchg
je
lret
dec
stos
sti
mov
mov
xchg
nop
mov
loop
js
cmpsb
les
xchg
mov
inc
divl
outsb
xchg
inc
dec
mov
adc
cmp
les
lds
ret
repz
add
aas
ljmp
rcr
and
subb
repz
cmp
ds
nop
stos
aas
xor
cmpb
cmp
popl
in
push
test
push
lcall
xchg
xor
lret
into
cmp
je
xchg
test
jbe
dec
sbb
outsb
or
and
jp
or
outsl
lods
test
xor
push
ret
cmpsl
push
inc
pop
nop
enter
mov
movsb
insl
repnz
cmc
and
add
push
pop
je
lret
pop
andl
stos
push
jl
fadd
jb
push
mov
aad
push
ret
ret
test
adc
xlat
and
sub
sub
pop
rcrb
icebp
out
xchg
mov
adc
mov
int3
add
pop
out
pop
aas
rcr
hlt
push
aad
sti
inc
bound
into
in
lods
pop
insb
cmp
pop
hlt
cmp
pop
dec
loopne
jecxz
out
add
dec
movsl
fstpl
int3
arpl
pop
jo
cmp
adc
call
inc
addb
push
adc
cli
adc
xlat
add
mov
ret
jmp
mov
frstor
jg
mov
lret
outsl
xchg
outsl
daa
mov
test
call
mov
pusha
ss
xchg
mov
dec
push
fnstcw
mov
clc
ljmp
push
push
and
add
jns
mov
ret
pop
negb
xchg
cmp
xchg
loop
mov
inc
repz
jns
pop
mov
adc
and
gs
mov
xchg
loope
mov
pusha
jno
into
pop
loopne
sub
pop
sahf
pop
mov
pushf
lea
jne
pop
sub
sahf
sbb
push
and
mov
mov
pop
sub
push
mov
mov
mov
jge
push
cmpsl
cmp
pop
popf
and
je
mov
idivl
movsl
or
jb
inc
cmp
dec
xchg
pop
insl
add
js
sbb
out
fsubs
ljmp
xor
mov
scas
lock
fistpl
sbb
pop
xorl
movsb
test
pop
pop
dec
or
insb
add
data16
or
push
popf
xchg
mov
jne
call
cwtl
incb
out
xchg
pop
jb
frstor
xlat
test
loopne
jb
sub
out
ret
mov
sub
push
cli
or
xchg
inc
fdivl
pusha
ljmp
xor
push
cltd
ds
xor
push
inc
mov
push
imul
leave
adc
mov
dec
bound
ja
jmp
test
loop
xor
sub
lret
outsb
cmp
into
shrl
stos
mov
or
out
popa
or
pop
stc
sub
pop
sbb
test
mov
sbbb
aad
jp
popf
shl
popa
lods
dec
repz
lret
cmpsb
int3
jmp
leave
das
push
sub
out
and
ss
inc
aam
jae
xchg
add
bts
pop
xor
cmpsb
lahf
or
roll
test
bound
inc
xchg
jl
dec
std
cltd
mov
push
scas
call
lods
and
rorb
inc
pop
ds
movsb
test
pop
mov
adc
neg
cmp
shrb
adc
push
daa
lcall
movsl
sub
fwait
test
push
std
sub
or
leave
je
pop
stos
es
lods
fisttpl
cwtl
es
in
add
pusha
xor
push
sub
js
xor
xchg
jle
add
inc
xorl
jmp
adc
xchg
ja
sbb
xchg
mov
jbe
inc
sahf
jbe
rclb
leave
push
inc
lret
or
inc
call
aas
std
mov
dec
scas
xor
pop
imul
adc
cmp
pop
xchg
adc
int
jne
cmpsb
mov
jg
sbb
push
icebp
cmp
pop
xor
xor
mov
adc
push
mov
int
mov
push
iret
dec
out
mov
ret
outsl
jbe
and
call
or
testl
pop
shrl
jno
insl
icebp
sbb
push
int
mov
pop
adc
pop
jne
xchg
ljmp
jecxz
mov
aad
stc
cli
ror
xchg
es
outsl
adc
cmpsl
call
xor
xchg
jl
imul
mov
inc
outsl
inc
push
rcr
insb
jmp
stos
add
xchg
jle
icebp
inc
fisubl
test
dec
icebp
cmp
mov
or
ds
inc
fadds
xchg
test
pcmpeqd
xchg
lods
hlt
jo
adc
add
fwait
fs
push
mov
fcmove
fmull
mov
mov
das
movsb
cmp
jne
lods
mov
sbb
in
cmp
push
pop
mov
mov
jmp
sub
cmc
pop
nop
idivb
iret
mov
jbe
dec
mov
pop
imul
in
stos
cmp
cmp
loop
dec
fbstp
dec
loopne
sbb
push
push
cli
stos
mov
outsl
outsb
adc
mov
fisttpll
fisubrl
mov
mov
or
sbb
adcb
xor
lods
mov
outsb
subl
and
adc
or
adc
cli
ljmp
jecxz
movsb
sbb
jne
sub
fcomps
cmpsl
popa
inc
xchg
test
cmpl
cmpsl
pop
mov
clc
cmpsl
push
cmp
outsb
imul
stc
repnz
das
mov
lds
enter
nop
or
prefetchnta
enter
cmp
inc
and
pop
xor
xorb
repz
les
js
ljmp
cmc
pop
test
mov
popa
not
mov
mov
scas
jbe
loope
inc
and
rcrl
xor
icebp
es
xchg
sub
push
lea
nop
fcmove
in
stos
xchg
cs
pushf
sub
cmp
pop
cmc
out
in
push
test
inc
xchg
add
cltd
inc
stos
or
pushf
ds
xchg
push
lea
mov
mov
push
and
push
dec
pushf
xor
xchg
arpl
fidivrs
add
and
adc
cs
addr16
subl
dec
out
cld
inc
arpl
push
sbb
sbb
cmp
in
popa
and
xor
dec
inc
jmp
sub
nop
mov
fisttpl
jp
adc
cwtl
fnsave
fsubrs
mov
and
xchg
lds
dec
ss
cmp
in
sti
cmpl
out
sahf
and
inc
and
and
mov
or
movsl
int
pusha
push
orb
imul
cmp
push
jbe
jne
lds
pop
pop
rclb
rcrl
dec
sbb
xor
sub
out
add
xchg
aaa
shlb
jne
pop
cmpsb
aam
fimuls
fistpll
sbb
sbb
adc
pop
mov
mov
aas
and
mov
cmp
aas
mov
inc
push
shl
xor
xor
or
or
pusha
aaa
pop
lcall
inc
enter
dec
call
loop
cmp
add
repnz
int
push
outsl
insb
aam
cwtl
clc
imul
rcl
inc
pop
ret
dec
fdivs
les
xchg
negl
hlt
ds
inc
pop
sub
shll
movsb
jle
loope
lret
xchg
mov
jno
sbb
ss
sub
sub
notl
pop
mov
inc
jns
ja
cmp
sub
bound
jnp
imul
stos
xchg
fistps
rolb
mov
outsl
pop
movsl
addr16
iret
cmp
xor
daa
pop
ret
insl
out
addb
cmp
test
rcrl
fmul
xchg
sub
cmp
fstps
fs
mov
fucomip
xor
cmc
loope
mov
ret
jnp
sbb
pop
js
aam
addr16
push
and
loope
js
loopne
and
cmp
loopne
fnsave
lock
rcrb
daa
pop
jg
pusha
stc
adc
mov
bound
into
sarl
pop
add
cs
or
ljmp
dec
popf
movsb
mov
sub
dec
add
add
jle
ljmp
jg
inc
add
sub
fstpl
and
pop
mov
aam
and
lock
fwait
scas
inc
movsl
or
daa
movb
fildl
or
les
jle
add
xor
movsb
xchg
pop
stos
mov
rclb
pop
sbb
and
dec
subl
mov
dec
add
ljmp
or
jo
push
jnp
mov
dec
inc
daa
out
sbb
xchg
bound
sub
xchg
sbb
imul
aad
mov
insb
jecxz
sbb
ret
inc
outsl
xchg
jge
out
xchg
daa
xor
or
and
push
jae
sub
dec
xor
xor
mov
jle
int
mov
adc
das
or
stos
in
inc
notl
movsb
xchg
ret
pop
loopne
and
pop
sbb
mov
add
and
and
pop
jecxz
mov
sub
cmp
cmp
fcoml
pop
cmp
enter
mov
mov
push
cmp
sub
inc
push
push
mov
or
adc
xchg
out
sbb
sbb
inc
fdivl
mov
hlt
mov
clc
adc
or
cld
aas
or
stos
stos
pusha
sbbl
lret
cltd
movsw
xchg
mov
test
push
les
xchg
fdivrs
int3
push
pusha
cmp
lret
test
movb
test
dec
dec
aaa
js
js
dec
mov
ret
pop
pop
clc
pop
outsb
push
jnp
icebp
stos
and
inc
js
jne
addr16
es
jmp
test
add
imul
push
nop
or
mov
xchg
sub
dec
iret
fdiv
push
pop
mov
sbb
jns
pop
xor
bound
mov
and
insb
fcompl
push
int
and
push
std
lods
push
or
push
xchg
fadd
mov
mov
mov
pushf
cmp
lret
popa
lock
adc
shl
mov
shlb
mov
loopne
push
sbb
ror
push
lret
cmp
shrd
lods
inc
dec
cmp
data16
push
add
jecxz
push
dec
or
mov
mov
mov
je
inc
pop
mov
or
cmpsl
inc
mov
in
sbb
mov
lock
pop
gs
jnp
lret
xchg
adc
pusha
sub
dec
scas
xchg
fmuls
pop
mov
add
in
cld
out
mov
std
scas
nop
bound
sub
cs
cmp
jno
cld
mov
nop
jge
rclb
lahf
test
sbbb
jecxz
out
or
notl
cmp
xchg
pushf
aaa
das
inc
mov
mov
or
jno
clc
mov
lret
jg
cmc
insl
mov
addb
cli
sbb
jne
sub
hlt
or
pop
mov
adc
jbe
divl
mov
iret
aam
jns
aaa
lret
fwait
xor
mov
mov
push
mov
mov
dec
xchg
stc
je
xlat
mov
pushf
and
dec
mov
jg
out
ficoml
jl
sub
push
outsb
jle
dec
cmp
add
in
push
inc
inc
shll
call
dec
or
addb
cli
push
test
cmp
out
cmc
dec
vpcmpeqb
imul
scas
imul
inc
imull
jl
rcr
xchg
cltd
pop
mov
lea
mov
movsb
cwtl
lret
addr16
iret
mov
rcl
jecxz
dec
adc
inc
roll
xor
adc
inc
loopne
cmpsb
fucomp
push
mov
push
mov
js
push
xchg
stos
pop
leave
dec
scas
cli
jg
sbb
adc
int3
mov
popf
and
cmp
roll
icebp
xchg
cmp
cmp
inc
push
cmpsb
out
incl
pop
insl
mov
cmp
rcrb
loop
ds
bound
fisubrl
pop
mov
mov
push
jecxz
mov
xor
imul
pop
mov
out
push
gs
insl
xchg
jbe
cmpsl
push
or
jmp
cmpsl
jne
cmp
movsb
dec
cmp
popl
push
rorb
mov
jl
sub
ret
push
cmp
ja
cmpsb
dec
push
fisubrl
push
cmp
mov
xor
iret
add
lds
imul
es
int3
jg
add
enter
mov
lods
jmp
mov
or
sbb
fcmovnb
adc
idiv
pop
push
movsb
fdivrl
test
fldcw
lcall
cmp
lock
ret
sub
xor
push
jmp
sarl
mov
cmp
into
gs
lcall
pop
leave
mov
mov
jnp
jnp
lock
pop
push
cmpsb
cmp
sbb
scas
jl
pop
mov
mov
cmp
mov
pop
lods
adc
mov
dec
inc
or
pop
push
xchg
xor
sbb
push
dec
mov
shrl
bound
or
xchg
inc
mov
xlat
pop
in
lds
mov
les
pop
and
xchg
or
cmp
mov
xor
inc
nop
xor
fisubl
dec
dec
hlt
or
mov
sub
mov
push
dec
xor
sub
mov
sub
inc
ret
or
add
jnp
inc
popa
andl
adc
iret
dec
pop
repnz
cltd
adc
or
leave
pop
ss
dec
sub
popf
xor
and
or
in
and
pop
rcll
mov
addr16
leave
sbb
dec
fwait
daa
lcall
adc
aad
popf
jo
cld
sti
xchg
xor
pop
dec
fldl
mov
xlat
xchg
test
nop
and
ja
adc
xor
xchg
filds
mov
es
fnstenv
mov
cmp
insl
cmc
hlt
push
daa
popl
jg
pop
hlt
dec
mov
add
ss
mov
sbb
adc
pushf
ja
js
cmp
and
cltd
repz
stos
xchg
or
lahf
repz
lock
ds
ret
jge
repnz
push
shrl
dec
xor
int
lock
rclb
test
pop
push
arpl
jl
and
les
inc
lret
sub
je
mov
jbe
add
xor
outsl
fsubr
aas
or
inc
enter
push
jl
je
mov
lret
mov
loop
sub
mov
sub
mov
cmp
mov
sub
mov
aad
or
mov
leave
fcoms
jg
adc
shl
stos
pop
pop
push
into
ret
shll
fsubs
sub
jnp
cmp
push
in
mov
loop
into
fiaddl
ret
add
push
mov
sub
jns
mov
or
xchg
jge
dec
xor
aaa
mov
daa
sub
mov
adc
cmp
push
pushf
in
fistps
out
xchg
or
push
cmp
enter
sub
pop
sub
ss
aad
cmc
push
mov
jmp
xor
loopne
mov
push
mov
lds
rorl
mov
decb
mov
mov
stc
lea
mov
xchg
aaa
sbb
xor
test
scas
jnp
jnp
hlt
dec
das
inc
pop
pop
je
aas
stc
inc
sahf
push
add
mov
or
push
cltd
sbb
fsubr
das
dec
scas
in
repnz
inc
push
lods
dec
mov
std
cmpsl
sub
lock
push
push
push
add
orb
fisttps
dec
cmp
push
cmc
shlb
cmpsb
pop
or
lret
out
fcmovbe
imul
pop
sbb
mov
test
rorl
mov
es
test
push
enter
add
mov
push
rclb
les
mov
mov
stc
or
pop
movsl
inc
mov
aam
cmp
jle
inc
and
push
adc
jnp
imul
mov
xchg
sbb
cmpsl
jns
test
inc
imul
fsubl
cmpsl
mov
into
mov
out
out
cmp
cs
xchg
ljmp
insb
dec
int3
fimuls
mov
dec
adc
test
iret
xor
gs
push
pop
push
adc
out
sbb
mov
popl
rcrb
cltd
sub
pop
jnp
popa
mov
aad
xor
or
pusha
notl
ljmp
or
push
shl
xor
adc
ss
je
and
ret
mov
xchg
mov
xor
pop
cmpsb
aam
mov
leave
pusha
js
xchg
ds
or
adc
lcall
dec
loop
popa
sbb
enter
jl
fisubrl
and
dec
mov
fwait
les
movsl
xor
fmulp
push
lcall
pusha
scas
xchg
popa
add
mov
lahf
sbb
pop
fs
lret
es
pop
in
or
dec
ror
aas
cs
mov
fnstcw
mov
cmp
insl
inc
push
adc
cld
pop
cmpsb
dec
and
or
push
mov
adc
fnstsw
into
adc
dec
shll
enter
and
sub
adcb
fiaddl
or
xor
xchg
sbb
dec
scas
popa
sahf
das
cwtl
push
in
test
inc
out
jmp
mov
daa
dec
jecxz
es
roll
sti
insl
je
lahf
sbb
leave
sbb
in
mov
jbe
repnz
outsl
loop
or
int
mov
fcoms
lret
mov
add
aad
mov
sub
minps
jne
push
push
pop
mov
fiadds
mov
cmpsl
js,pt
lods
jo
call
clc
jae
popf
icebp
adc
inc
xchg
sub
mov
pop
insl
ja
arpl
into
xorl
or
xchg
enter
stos
in
dec
loope
push
adcl
jb
lea
sbbl
cs
stos
mov
mov
and
ss
fdivrs
or
insl
inc
and
mov
adc
add
std
jno
mov
into
inc
xlat
mov
pushf
fistpl
leave
lods
adc
sar
xor
pop
push
lock
dec
inc
push
and
xlat
out
xchg
mov
mov
ja
imul
fldt
mov
xchg
icebp
push
mov
and
sub
or
xor
inc
xchg
enter
sub
add
or
notb
xchg
mov
jmp
lods
lock
outsb
inc
lods
sbb
frstor
aaa
fs
addr16
loope
xlat
inc
fmul
loopne
dec
fisubrs
stos
fistl
mov
std
xor
inc
add
mov
add
rorb
pop
icebp
mov
push
outsb
and
sub
sbb
icebp
cmpl
xchg
or
cmpsb
mov
push
fisttps
lret
ja
rcrl
rolb
repz
std
pop
xor
pop
push
pushf
adc
cmp
mov
ss
ss
loopne
pusha
push
mov
mov
aas
leave
dec
mov
fsubs
or
jp
jg
jge
out
clc
sub
or
loop
jnp
dec
ljmp
pop
es
mov
nop
push
sbb
cmpsl
testl
daa
dec
mov
pop
aaa
mov
shll
xchg
mov
mov
flds
mov
fisttpl
mov
cmp
dec
sbb
cmp
inc
xor
jmp
cmpsl
sbb
out
dec
adc
int3
arpl
out
mov
adc
aam
adc
lahf
mov
xor
dec
xor
popa
adc
push
xor
loop
movsl
into
cmp
aam
stos
loope
and
mov
xlat
mov
jg
mov
xchg
ret
lcall
jbe
and
push
movsl
mov
movsb
xchg
test
lods
fdivl
push
call
cmp
hlt
mov
pushf
mov
pop
mov
lahf
arpl
loop
jo
hlt
xchg
mov
push
cmp
les
xor
std
add
cmc
vmwrite
dec
mov
lock
pop
cmp
pushf
outsl
loop
mov
insl
es
clc
or
jae
pusha
lret
cmp
push
aas
xchg
lds
lea
dec
add
xlat
jp
mov
notb
dec
jne
out
outsl
ds
dec
cs
mov
adc
inc
test
mov
adc
cvtps2pd
test
outsb
out
testl
rcrb
test
mov
imul
mov
cmp
insl
popf
cmp
inc
lods
or
sahf
in
pop
pop
push
mov
mov
add
xchg
mov
pusha
idivl
inc
fdivs
lret
mov
jmp
or
imul
mov
mov
std
push
pop
cmp
cld
xchg
and
mov
aaa
cs
out
outsb
aam
test
popa
adc
sbb
out
jp
push
cmc
xchg
push
jns
inc
mov
sbb
loope
jmp
or
push
jae
in
dec
mov
js
xlat
jae
mov
bswap
pushf
sarl
push
in
xor
adc
lds
sti
xchg
adc
fwait
jns
int3
int3
rcrl
adc
sbb
add
xchg
std
stos
stc
aam
dec
pop
test
ret
mov
sub
or
sbb
rorl
sub
adcb
mov
stc
lret
imul
ret
cmc
xchg
xlat
sub
pop
out
cmp
xorb
xor
push
clc
push
push
push
icebp
idivb
adcb
mov
push
pop
mov
ret
jne
mov
sahf
xchg
loopne
mov
test
mov
pushf
jo
movsl
cmp
lods
cmp
rdmsr
xchg
add
ret
jp
int
and
movsb
inc
mov
mov
dec
fsubrs
mov
cld
fwait
adc
mov
fwait
pushf
lods
int3
lret
jae
jl
popf
inc
and
jmp
push
jo
dec
jle
mov
inc
iret
sbb
jo
mov
aaa
stos
adc
fstps
mov
mov
lock
sbb
pop
in
pop
sar
cmp
cmpsl
push
add
aaa
push
lret
add
hlt
iret
adc
push
jle
cmp
cmc
pop
sbb
aad
fsubl
lret
aas
dec
and
mov
xor
fwait
xchg
sbbl
je
dec
bound
cmp
testb
bound
faddl
push
sti
xchg
dec
in
lahf
repnz
mov
lds
mov
cmp
dec
sbb
adc
sbb
ficoml
cmp
decb
ss
loop
jns
das
inc
mov
outsl
add
fsubrl
icebp
idiv
inc
neg
push
ss
xchg
comiss
or
cld
inc
push
and
pushf
xor
out
loop
lahf
add
mov
dec
test
dec
cmp
imul
cmpsb
setnp
fildl
stos
push
pop
lret
xlat
nop
jbe
shlb
enter
mov
inc
push
add
bound
cli
ja
aaa
xchg
aas
push
add
ljmp
call
bound
mov
push
jecxz
mov
sub
dec
mov
pop
jge
and
pop
cmpsl
out
ret
mov
sbb
dec
int
adc
test
clc
dec
incb
xor
pop
lret
xor
xor
xchg
jb
lea
and
test
leave
pop
sahf
cli
sti
pop
sub
out
ds
add
imul
mov
jnp
sub
jg
icebp
inc
pop
sub
pop
cmc
cmp
aad
je
imul
xchg
xchg
pop
push
hlt
rorl
imull
pop
mov
mov
insl
mov
cmc
hlt
cmp
into
mov
jge
les
enter
ret
outsl
inc
dec
loop
nop
or
dec
mov
xor
mov
sarl
or
out
std
pop
sbb
mov
and
xorb
xchg
pop
and
cmp
push
out
int
xlat
hlt
stc
js
jne
mov
mov
pop
mov
jns
outsl
xor
lds
popa
enter
push
test
sub
je
xchg
and
pop
adc
cli
inc
adc
sbb
push
je
mov
fsubrl
push
insl
inc
into
jne
dec
sbb
mov
loop
mov
andb
xor
jg
cmp
mov
push
mov
movsl
jmp
or
shll
mov
scas
rorl
cmpsl
out
jns
pop
mov
xchg
notb
sti
pop
repz
xchg
xor
popf
jp
mov
les
dec
aas
add
or
xor
mov
cmpsl
xorb
adc
adc
mov
es
rcl
xor
push
lods
cs
jge
pop
lds
ljmp
das
jge
nop
arpl
mov
movsb
lea
xor
cltd
xchg
das
ret
js
icebp
mov
sbb
adc
jmp
and
cli
testb
mov
ljmp
inc
xlat
mov
cmpsl
fs
inc
in
pusha
cmp
lret
lret
icebp
cmp
test
adc
inc
jecxz
dec
and
jl
in
xor
fwait
std
pop
lahf
fsubrp
rolb
out
mov
xchg
adc
xchg
cmp
jo
adc
sbbl
in
sub
adc
jbe
out
cwtl
jnp
pop
xchg
xor
out
loope
cmp
stos
andl
lea
mov
jne
js
cmp
add
cli
lods
inc
in
mov
cwtl
ss
negl
add
enter
pop
scas
call
loop
lret
pop
rep
mov
les
popf
add
and
or
lods
bound
fldl2e
shll
dec
pop
test
les
clc
inc
jecxz
lds
testb
mov
movsb
cmp
sub
xchg
cwtl
das
ret
lods
mov
popf
pushf
inc
aas
mov
std
dec
popa
and
pop
ljmp
jbe
jne
adc
ds
jns
fsub
lds
add
xchg
mov
bound
xchg
out
xchg
call
inc
lds
iret
andb
dec
mov
xchg
push
hlt
out
sub
pop
and
shrl
cmpsb
sbb
cmp
insb
push
loope
or
pop
lds
mov
mov
outsl
inc
and
ds
fidivrs
mov
inc
sti
mov
xchg
subb
lods
sahf
clc
stos
iret
or
dec
cmp
push
adc
mov
lods
pusha
clc
dec
fdivrl
xchg
jmp
lcall
dec
pop
addl
imul
mov
adc
inc
test
xor
fadds
stos
je
clc
jae
push
loop
sbb
fstl
aad
out
push
jbe
mov
mov
ljmp
lock
bswap
in
test
andb
aas
test
scas
ret
mov
ljmp
sti
inc
aaa
out
pushf
cmp
jns
test
and
sub
or
pushf
cld
sub
int3
in
lcall
pop
push
lahf
push
mov
push
idivb
mov
inc
pop
inc
inc
xor
pop
xchg
jns
das
in
popf
sbb
xchg
out
add
andb
les
shlb
dec
loop
sub
imul
xchg
cmp
lahf
lcall
shr
lock
clc
jbe
in
mov
or
or
in
jns
jae
sarb
mov
adc
je
pop
iret
data16
ja
loopne
in
loopne
add
hlt
cltd
fadd
loope
dec
xchg
orb
subb
daa
arpl
ds
xor
adc
sbbb
mov
test
xchg
insl
push
imul
and
test
add
mov
mov
jge
xchg
cli
movsb
les
pop
repz
pop
ljmp
cmpsb
insl
pop
loop
aam
faddl
sub
dec
sahf
adc
imul
rcrb
mov
fwait
repnz
sub
or
ja
in
jbe
mov
test
repz
xor
push
insl
jne
sti
stos
int
hlt
mov
bnd
inc
lods
adc
test
or
orb
scas
aas
sub
out
mov
ss
adcl
aad
dec
addr16
cmp
push
cmp
cmp
cltd
mov
aaa
stos
call
mov
lcall
mov
jle
loope
fimuls
les
push
push
test
sbb
aas
xchg
out
push
sub
cmpsb
insb
repnz
sbb
fnstsw
test
popa
mov
rcrl
sahf
push
clc
dec
adc
sbb
xorl
xchg
pop
stos
ret
aam
jmp
test
inc
cmp
mov
xchg
fdivrp
scas
inc
jmp
adc
push
dec
in
fistpll
cmp
mov
scas
adc
jno
xor
jns
stos
stos
sub
sub
adc
je
sbb
add
nop
imul
push
mov
rol
fdivp
cli
stos
jbe
fstpl
leave
and
adc
outsb
rcrl
add
clc
inc
in
pop
push
cld
outsl
inc
mov
mov
xchg
fnstsw
add
insb
sbb
in
mov
aaa
push
aas
jb
cmp
shlb
lods
xchg
lods
dec
in
test
ret
mov
cmp
sahf
xor
mov
mov
jnp
cmpsl
ficoml
sub
repz
cld
jo
dec
push
outsl
sbb
push
pop
or
xchg
jmp
sub
shlb
xor
ret
dec
jmp
and
mov
jae
pop
jbe
js
pop
test
int3
cwtl
negl
dec
test
jg
jle
cmpsl
mov
shrb
or
mov
out
inc
adcl
jp
enter
jle
adc
aaa
out
test
jb
ret
popa
lret
sbb
jl
adc
insb
mov
sti
sbb
jecxz
int3
jle
or
jmp
jecxz
les
test
out
add
mov
rolb
bound
iret
push
test
lret
in
fwait
xor
int3
lea
push
sub
or
xchg
pop
movsb
dec
push
cmp
mov
repnz
adc
sub
and
div
cmp
pop
jne
fldt
xchg
andl
ret
enter
mov
scas
sub
jge
cmc
inc
jne
out
sub
lea
sub
sub
repnz
push
jne
idivl
mov
mov
fidivs
mov
cmp
jo
xchg
mov
xchg
and
das
icebp
jns
mov
lods
aas
loope
sub
inc
ficoms
mov
lods
das
adc
xor
xchg
dec
shl
mov
cmp
pusha
add
shrb
bound
js,pn
mov
cmp
rol
xchg
imul
in
inc
fisttpll
jmp
shll
xor
mov
icebp
adc
mov
sbb
call
out
leave
push
xchg
sub
pop
xor
fsubl
popf
push
push
inc
faddl
lds
mov
sbb
dec
cltd
adcl
inc
data16
push
rol
pop
in
lret
insb
mov
clc
mov
mov
or
add
in
fwait
push
push
mov
lods
sub
test
sbb
sti
cltd
jo
mov
mov
jb
inc
movsb
xor
fiaddl
leave
and
adc
test
pop
sub
adc
xchg
pop
push
jp
add
pop
sub
pop
pop
stos
inc
scas
icebp
int
and
lret
pop
mov
jecxz
dec
pop
and
mov
nop
jg
mov
lcall
xchg
shrl
jmp
pop
sbb
mov
daa
call
push
pusha
aaa
int
outsb
sub
arpl
lods
xchg
rclb
xchg
popa
dec
inc
push
loop
or
popa
fidivs
js
or
lret
xor
pop
adc
jg
out
pop
cmpb
outsb
lahf
xlat
stos
jns
adc
cs
mov
int3
fidivl
or
mov
jbe
lods
or
fwait
mov
adcb
mov
je
ret
jne
cmc
cmp
loope
fsubl
stos
rcrl
or
adc
test
leave
pop
adc
adc
or
cmpl
dec
dec
xchg
dec
dec
aas
es
fdivrl
gs
jmp
sbb
sbb
xchg
cmp
std
xchg
fldenv
pop
mov
adc
and
in
pop
addr16
sbb
iret
lahf
shll
out
test
shrb
popa
jge
mov
pop
sti
cmp
test
lahf
jno
cmp
scas
dec
dec
orb
rorl
mull
mov
pop
dec
inc
outsl
mov
clc
sysenter
dec
and
xor
cmp
xor
addr16
leave
dec
repnz
loop
dec
loopne
or
fcompl
out
jbe
mov
ret
add
pop
frstor
pop
xchg
inc
popa
lods
leave
aaa
leave
test
cmp
dec
pop
xor
push
inc
adc
test
pop
inc
lods
loope
test
rcrl
pop
mov
sbb
xor
dec
in
lods
cld
jnp
xlat
insb
aam
push
loopne
pop
arpl
xor
cmp
and
jl
sbb
outsl
insl
or
xchg
dec
loop
mov
mov
sti
fidivrl
mull
sbb
cmp
or
sbb
add
xor
xchg
orb
jmp
pop
repz
dec
sbb
pop
jmp
mov
dec
mov
push
cmpsl
out
cmp
insb
stos
mov
enter
cmp
shrb
mov
pop
into
jb
filds
std
mov
jmp
orl
pop
cmpsb
repnz
cli
rol
mov
pusha
sbb
in
cli
imul
adc
xor
scas
sbb
fnsave
adc
fwait
cmpsl
fnsaves
sbb
ds
nop
jns
lds
ficoml
mov
push
hlt
inc
lods
or
bswap
insb
andl
in
xchg
sub
testl
in
stos
icebp
cld
sub
push
imul
or
mov
pushf
jno
xorl
mov
lds
adc
in
fs
pop
lahf
sub
call
or
adc
rcll
or
into
aam
in
clc
adc
sub
enter
push
ret
adc
mov
dec
insb
popa
or
enter
sub
out
add
sub
jbe
shll
movl
inc
cmp
fisubrs
cmp
addr16
jbe
lcall
lcall
mov
pop
addr16
shll
sub
pop
fidivrl
ljmp
push
fndisi(8087
or
add
inc
test
lds
jmp
adc
mov
arpl
sti
mov
pushf
sub
lcall
push
jge
add
dec
dec
cmpsb
hlt
mov
repnz
or
lods
inc
movsl
movsb
fnstcw
andl
inc
cmp
jmp
pop
shlb
lcall
dec
xlat
adcl
test
mov
test
insb
imul
jle
mov
jge
or
sub
or
repnz
pop
cmp
int
inc
fs
mov
xor
scas
or
mov
push
popa
faddl
push
or
les
jle
dec
push
adc
pop
and
dec
mov
pop
into
into
sub
mov
push
sbb
dec
popf
or
add
iret
out
sbbl
mov
insl
push
add
jns
jo
dec
adc
bound
or
sub
cld
adc
addb
add
xchg
ss
sub
cltd
or
adc
pop
mov
jne
lds
add
enter
jle
ss
popf
jns
lret
cltd
sub
mov
movsl
loopne
cli
inc
push
cmp
call
or
mov
out
shll
pop
in
cmpl
and
jle
sub
mov
jne
jns
out
imul
xor
insb
push
jmp
pusha
popa
icebp
repz
test
xor
push
jns
gs
mov
cmp
lock
xchg
push
mov
or
popf
lds
mov
movsl
ret
jne
mov
stos
xor
sahf
mov
inc
mov
push
xor
aad
mov
call
fisttpll
sti
pop
scas
and
xorb
shlb
xchg
ljmp
mov
push
push
mov
std
mov
js
push
leave
xchg
xchg
dec
jp
add
xchg
mov
and
pop
and
aad
pop
pop
icebp
movsl
mov
mov
pushf
aam
mov
mov
pop
fadd
push
in
push
and
clc
mov
mov
jg
sub
cmp
fsubs
xchg
xor
sub
cmp
mov
aaa
cmpsb
mov
arpl
xchg
rorb
mov
out
xchg
sarb
icebp
cmp
jl
sub
dec
push
das
mov
add
nop
daa
aad
jnp
sbbl
out
xor
orb
insb
adc
or
testl
ds
mov
filds
js
mov
and
les
fsubl
test
jne
fadd
imul
outsl
xorl
xor
scas
inc
mov
movsb
cltd
push
int
mov
cmc
pop
daa
ret
sbb
mov
lret
mov
das
lods
out
inc
call
cmp
push
xchg
daa
test
push
mov
jg
jmp
popa
cli
push
or
jo
mov
fsubr
ret
repnz
lahf
nop
add
cwtl
or
inc
cmp
adc
mov
test
inc
fistpll
sti
test
inc
push
jne
xor
pop
and
and
push
in
decb
cs
dec
inc
ret
push
stos
in
dec
gs
call
dec
dec
loope
dec
scas
mov
shrb
add
sbb
fldt
pop
bnd
xchg
mov
dec
push
or
arpl
dec
fcmovbe
popf
sbb
fildl
cmpsb
popa
sbbb
push
inc
xchg
out
cs
stos
scas
arpl
sbb
ret
outsb
stc
inc
je
insl
les
mov
xchg
out
call
dec
pop
sbb
int3
roll
lahf
je
mov
mov
test
out
cli
add
sbb
ljmp
in
loope
pusha
sti
push
loop
cli
aas
cmp
in
mov
mov
fbstp
jle
out
popf
sub
iret
pushf
stos
ficoms
pop
scas
push
push
cltd
rcrl
add
xor
cmpsl
lock
mov
jp
sbbb
cli
push
cmp
andl
xchg
out
addb
jo
rcrl
bound
out
std
sbb
das
negb
jo
addr16
les
pop
ss
mov
xchg
lret
push
xor
adc
pushf
fisttps
imul
ja
add
sub
xchg
lahf
popa
jge
in
stc
ds
jae
loop
xor
jae
xchg
sub
fcomps
lcall
push
jnp
pop
mov
sti
out
pop
dec
in
enter
icebp
dec
ds
movsl
sub
add
je
inc
pop
outsl
enter
jb
rcrl
lea
xchg
sub
jecxz
stc
iret
pop
mov
inc
mov
xchg
sbb
cmp
mov
cmc
sbb
and
and
repz
inc
jb
hlt
xchg
pop
sbb
arpl
movsl
cmp
xor
int
cmp
test
and
push
aam
idiv
or
adc
dec
notl
insb
lds
mov
std
adc
fdivs
jne
or
jae
inc
pop
mov
add
mov
loopne
fistps
mov
popa
ss
aam
fadd
pop
mov
lret
das
add
lahf
add
jbe
call
orl
ja
sbb
dec
mov
fadds
mov
subl
into
pop
adcb
fists
clc
js
inc
in
std
ljmp
outsl
inc
insl
dec
aam
outsb
mov
test
dec
lahf
sub
iret
mov
shll
or
add
out
sub
pushf
mov
push
push
mov
jns
xchg
les
pop
and
cmp
push
mov
ret
adc
lds
mov
les
int3
das
fnstcw
pusha
fiadds
xchg
xor
jle
add
js
lret
push
cmp
out
push
nop
xor
cmp
mov
les
out
scas
mov
sbb
mov
lods
jmp
imul
in
inc
add
mov
mov
jmp
aas
mov
imul
mov
push
jge
bound
je
pushl
and
xor
daa
cmp
pop
cmpsb
sub
or
rcrl
pop
cld
xchg
dec
inc
fldl
aam
pop
pop
push
int
sbb
lock
cmp
js
iret
jmp
and
andb
cmp
cs
cmc
cmpsl
sbb
and
adc
ret
call
jmp
aam
fcoms
fidivs
or
fsubrp
cmovg
movsl
jns
adc
mov
out
sahf
pop
and
dec
imul
cmp
add
push
loop
dec
dec
add
repnz
mov
add
dec
dec
xchg
ja
leave
std
adc
adc
cmp
mov
push
fnstsw
mov
push
daa
jmp
rcrb
fwait
pop
xorl
xchg
fdiv
lahf
xor
gs
and
ja
inc
xor
repz
mov
pop
js
mov
inc
or
fsubrs
loope
jb
xor
mov
shr
add
fadds
mov
call
push
pushf
lock
andl
dec
sub
insb
sub
sub
lds
mov
sub
mov
out
ror
xlat
pop
xchg
inc
mov
inc
mov
push
leave
mov
add
mov
xchg
sbb
clc
xchg
inc
and
xor
inc
mov
fldln2
test
cli
mull
dec
and
popa
imul
stc
popf
cmp
mov
incl
push
in
sahf
or
xchg
mov
pop
mulb
mov
push
xchg
dec
jge
jp
in
test
push
mov
mov
imulb
and
push
inc
xor
orl
lahf
ret
jns
rol
jno
lcall
in
or
pop
insb
mov
fdivrl
movsb
sub
cmp
push
mull
outsb
sub
push
adc
and
pop
cld
mov
sbb
or
or
cs
std
notl
fbstp
push
xchg
mov
testl
add
jle
jecxz
push
mov
rclb
aam
add
and
jbe
push
in
xor
lods
andb
mov
fs
ret
cmp
mov
or
ja
enter
movb
je
push
jecxz
pushf
adc
into
mov
int3
dec
add
lods
sbb
cmp
cmp
mov
ljmp
aas
jl
sbb
mov
sbb
pop
pop
pop
cmp
push
stos
inc
lods
mov
leave
js
mov
inc
mov
mov
cmp
daa
cmp
inc
push
repnz
shr
or
fildl
nop
adc
aas
nop
cmpsl
push
push
xchg
dec
sbb
sbb
imul
ljmp
push
repnz
xchg
aaa
rcr
out
notl
mov
and
int
notb
bound
xchg
mov
push
mov
stos
mov
roll
imul
stos
repz
outsb
cld
xchg
scas
jnp
lods
int3
sahf
adc
or
adc
jbe
inc
mov
add
ror
cli
incl
jnp
dec
sub
lcall
call
cmp
mov
call
pop
or
fsubrp
xchg
fucomi
push
std
xlat
xor
push
iret
jb
fcomps
pop
xchg
adc
mov
fwait
lods
jp
jns
gs
sub
mov
cmp
repz
mov
dec
addr16
mov
std
or
sti
mov
sub
xchg
subl
pop
loop
mov
jae
test
ret
and
jg
clc
inc
add
sarl
mov
mov
outsl
imul
mov
or
out
lahf
push
push
and
out
enter
testb
out
sub
push
push
mov
jge
push
in
sub
aam
daa
ds
test
sub
leave
mov
aaa
into
add
fstl
dec
adc
dec
xor
xlat
aad
rorl
pushf
dec
sahf
pop
add
push
aas
andb
inc
xchg
sub
xchg
pop
fcoml
push
leave
popa
or
mov
je
add
aam
movsl
cmp
pop
fnstcw
xchg
xor
inc
lea
xor
popf
cwtl
xor
leave
mov
shll
xchg
inc
lcall
pop
xor
dec
ljmp
jecxz
push
dec
jecxz
mov
jle
lret
aaa
mov
add
subb
or
pop
aaa
in
and
cmp
pop
add
popf
insb
gs
xchg
in
les
cmp
fsts
cmp
xor
xchg
in
pop
scas
cmp
cld
pushf
mov
int3
ljmp
pop
ret
fsubrs
jmp
jns
mov
add
les
lahf
hlt
pop
adc
add
ror
mov
xchg
or
pop
push
inc
jmp
frstor
jmp
iret
mov
aad
mov
sahf
mov
push
or
setne
xchg
lds
push
insl
outsl
fwait
cmp
sbbl
mov
lahf
or
insb
adc
adc
pop
cmc
dec
sbb
adc
cli
xchg
lret
arpl
push
pop
lahf
nop
lock
orb
add
inc
mov
sub
enter
and
lods
aas
bound
mov
jne
testb
or
cmp
das
ret
xor
imul
and
sub
iret
push
push
mov
xor
xchg
cs
xchg
inc
or
roll
std
cwtl
daa
lock
or
mov
pusha
sub
pop
dec
add
sbb
mov
cmp
inc
add
sbb
aas
hlt
fadds
sub
aaa
pop
sub
sub
shrb
addb
jl
mov
push
and
xor
cmpsb
lcall
add
xor
mov
or
or
xchg
sub
cmpb
mov
mov
push
sbb
fdiv
push
ret
gs
shlb
mov
pop
rclb
cmp
fdivrl
jecxz
add
fsubr
mov
mov
shlb
jb
mov
mov
add
ret
into
fadd
sub
or
loopne
outsl
dec
ja
xor
incl
sub
sub
out
movsl
xchg
cmp
lret
cmpb
mov
mov
mov
cmp
xchg
mov
mov
cmp
sbb
cmp
mov
adc
popa
jl
or
idivl
or
mov
pop
in
lods
movsl
adc
adc
add
data16
das
outsl
arpl
arpl
add
movsl
add
jecxz
js
xor
jmp
fstps
cwtl
xchg
mov
cmc
sbb
and
fcompl
jno
shlb
addl
mov
mov
aas
lods
shl
jbe
in
test
daa
negb
push
es
cmp
hlt
mov
adc
sti
xor
aaa
into
dec
mov
iret
es
loopne
ja
mov
rorl
in
add
sub
out
lcall
out
mov
fbld
cli
jne
inc
mov
out
hlt
enter
test
cmpsl
xor
mov
lret
rolw
mov
pop
mov
fimull
cltd
dec
ljmp
add
push
or
xchg
pop
xchg
gs
add
pop
mov
mov
mov
dec
pop
jg
push
push
mov
cltd
std
mov
cmp
int
dec
test
insl
dec
scas
xchg
mov
je
ds
pop
shrb
js
sub
popa
popf
sarl
lcall
in
inc
clc
xchg
xor
add
shll
fcmovnb
imul
out
sbbb
fdivrl
out
aam
dec
push
movsl
inc
mov
push
pop
xor
pop
pop
xor
sbb
xchg
sub
jle
cld
mov
jns
pop
es
push
je
adc
adc
or
jmp
loop
pusha
dec
hlt
push
add
mov
imul
mov
sbb
sbb
adc
mov
popa
cli
aaa
mov
add
pop
andl
pop
cmp
fwait
pop
lock
jmp
dec
mov
sbb
add
cmp
push
xor
xchg
pop
stos
inc
stos
fildl
iret
pop
stos
andl
cld
sub
stos
mov
push
inc
pushl
jmp
jno
jnp
repnz
pop
push
adc
cmpsb
sub
dec
loopne
les
sub
jecxz
push
pop
scas
xchg
in
mov
pop
add
inc
sti
movsl
and
and
cwtl
imull
or
rol
out
fs
iret
cmpsl
sbb
lret
mov
dec
mov
or
loope
fwait
push
push
in
les
pop
and
cwtl
mov
ret
vpmaxub
sbb
dec
lock
cmp
mov
jno
je
add
pop
dec
fs
dec
pop
jns
sub
aaa
lret
je
fwait
jne
mov
rclb
insl
dec
rorl
lods
pusha
pop
repnz
lret
mov
cld
loop
jo
out
bound
aaa
divb
fdivrs
cs
cmpsb
enter
push
jmp
js
sub
mulb
pop
cmp
sub
pop
shl
cmp
xchg
loop
leave
jno
xchg
sbb
or
and
push
inc
sbb
dec
std
and
setp
inc
js
outsb
mov
int3
lea
and
xor
push
add
xor
pushf
cltd
mov
and
xchg
repz
int
cmp
sbb
dec
dec
rclb
sbb
pop
test
fs
and
js
loope
mov
hlt
cld
stos
xlat
cs
and
test
out
jnp
add
jmp
std
jo
hlt
jle
and
repz
cmp
xlat
leave
and
addr16
pop
xor
jbe
outsb
sub
nop
jecxz
pop
adc
aas
outsb
jmp
out
pop
ljmp
mov
xchg
pop
sbb
lcall
push
cld
stos
and
jmp
or
mov
seto
xchg
test
xor
lea
stos
sbbb
andl
inc
adc
loope
gs
xchg
mov
ja
mov
mov
arpl
fiadds
fnsave
in
push
xchg
sti
xchg
ret
repz
mov
pop
lret
cld
jl
insl
scas
xor
hlt
xchg
movsl
jl
repnz
pop
push
outsb
clc
dec
and
add
mov
loope
insl
stos
cmp
push
je
clc
inc
pop
scas
mov
push
inc
add
test
shrb
sub
xchg
cmp
stos
jno
sub
cmp
cwtl
repz
push
in
das
int3
fimull
shlb
dec
push
dec
mov
mov
insl
cld
or
imul
insb
rcrl
mov
movsb
inc
ljmp
dec
test
int
xor
rorb
cwtl
push
sti
in
orl
sbb
adc
mov
movsl
sti
xchg
xlat
cmpsb
fiaddl
lret
je
lret
pop
push
fs
or
jns
hlt
adc
mov
fildl
clc
seta
inc
out
mov
fstp
notb
test
js
test
mov
sbb
adc
jge
outsb
test
and
sbbb
sub
js
in
leave
test
add
sub
cmp
iret
mov
stc
addr16
cmpsb
aas
test
repz
leave
or
pop
and
push
push
imul
sbb
decl
mov
jbe
std
out
test
sarl
add
lcall
mov
pop
loope
dec
xor
loop
push
adc
cli
lret
mov
or
mov
movsb
and
shlb
or
push
mov
jp
inc
or
aas
jl
mov
rolb
sbb
xor
andl
xor
sbb
adc
cwtl
call
pop
test
sbb
mov
sub
add
cmp
sbbl
mov
cmp
mov
aam
push
xchg
out
jle
adc
or
mov
mov
add
pusha
stos
fucomip
fisubrs
inc
imul
in
arpl
inc
or
push
stc
cmp
xor
dec
and
ss
sbb
das
mov
in
sbb
and
lret
icebp
jl
push
fidivs
push
aad
mov
sbb
adc
aam
je
cmp
dec
xchg
dec
jo
xchg
daa
push
loop
mov
pop
cmpsb
mov
ds
cmpsl
ret
mov
sub
inc
xlat
jns
mov
jae
fldl2t
cmc
cmp
xor
imul
scas
jb
les
xor
lahf
inc
mov
cmp
scas
jmp
loope
fildll
loopne
mov
xchg
test
pop
xchg
in
mov
inc
inc
aam
das
movb
inc
pop
xchg
sbb
or
xchg
jb
jl
pop
sub
pop
add
pusha
xchg
inc
jbe
adc
cs
push
test
jmp
xor
pop
and
cmp
cwtl
in
cmpsl
adc
cmc
movsl
sbb
dec
shlb
imul
scas
and
mov
hlt
ss
test
ret
mov
mov
std
fwait
cli
xchg
mov
mov
sbbb
aas
cltd
mov
mov
sti
xchg
push
sbb
sbb
scas
jbe
fwait
stos
ds
int3
sub
sbb
in
sbb
hlt
jg
jns
out
ljmp
add
add
sub
pcmpeqw
or
or
add
cwtl
lods
cmp
mov
repnz
out
push
sbb
ljmp
or
pop
subl
push
pop
sbb
xchg
and
jmp
mov
add
xor
cs
or
gs
mov
or
sahf
les
adc
cwtl
mov
in
push
cmpsl
add
mov
adc
jo
mov
ja
insl
jge
and
cld
cltd
addb
inc
jmp
inc
test
lock
cmpsl
push
xor
push
pop
test
push
mov
add
scas
cmp
push
inc
cmc
xor
and
mov
lea
sub
das
mov
out
cmpsb
pop
mov
loop
les
cld
lods
pop
ljmp
push
xchg
or
jecxz
rcrl
das
and
aam
pop
outsb
roll
sbb
pop
dec
insb
sti
dec
or
dec
and
cmc
push
fdivr
jno
and
cld
lcall
lcall
loop
sub
sbb
dec
jno
or
dec
pop
rclb
jp
popf
push
dec
jg
cmp
mov
sub
lds
dec
mov
jl
add
push
push
fwait
jne
push
sub
loope
cld
testb
in
cmpl
xchg
outsb
int
cmp
call
in
sub
das
push
icebp
adc
sarb
cltd
add
out
rolb
stc
dec
repnz
add
push
xchg
adc
xchg
imul
ja
lahf
xor
fwait
pushf
and
xlat
out
lds
movsl
mov
jmp
or
push
jbe
xchg
nop
add
xchg
insl
out
sub
lock
cmp
shll
dec
xlat
ljmp
test
lock
sub
xchg
mov
add
dec
fmull
flds
jmp
cmpsb
inc
mov
mov
subl
dec
in
mov
sbb
insl
mov
mov
adc
out
repz
mov
cmp
xlat
outsb
inc
jbe
pop
test
add
cmp
loop
jle
pop
cmc
popl
jl
push
adc
inc
inc
cmp
xchg
mov
fistps
movsl
mov
call
xlat
adc
xor
adc
ds
jecxz
or
outsb
jle
push
repz
pusha
rorb
lods
or
sub
pop
aaa
or
pop
fiadds
inc
xchg
sbb
and
mov
and
mov
jbe
orl
sub
sub
ret
mov
ret
sbbl
inc
sbbl
cli
pop
dec
mov
lds
cli
rcrl
movsb
xchg
or
dec
shlb
xchg
and
fcoml
push
gs
jae
inc
mov
int
popa
inc
lret
xchg
pop
lret
ss
xor
cmp
cmpb
jbe
ret
cmpl
pop
insl
jg
cwtl
and
mov
mov
push
cmp
insb
dec
inc
popf
and
mov
loop
mov
push
xchg
inc
popa
mov
dec
jns
sub
ss
fsubrs
push
jns
test
ja
addr16
daa
mov
xchg
pop
inc
xchg
nop
imul
subl
inc
orb
mov
and
clc
cld
sub
and
sbb
scas
inc
xchg
jae
mov
lock
iret
loope
pushf
mov
mov
imul
pop
cmpsb
scas
inc
flds
stos
jae
or
mov
imul
test
xor
mov
push
fldcw
xchg
out
mov
xor
mov
loope
mov
adc
dec
loop
cwtl
loope
lret
loopne
cmc
push
fcoms
nop
inc
fadd
push
or
cltd
pop
and
jle
add
adc
mov
cld
pop
sbb
inc
fld
and
pusha
sbbb
or
in
lea
pop
jg
inc
mov
movsl
jns
add
mul
mul
or
sbb
mov
bound
iret
data16
outsl
xchg
inc
mov
push
xor
pushf
xor
popf
aaa
test
fidivrs
push
popf
sbb
popf
aaa
push
add
pop
add
or
cmp
cld
int
sti
lods
aad
ja
adcb
push
lods
or
lcall
jne
dec
or
sarb
and
ds
inc
sub
mov
dec
push
push
xorb
les
mov
lds
int
push
pop
push
dec
mov
int
or
push
fadd
push
movsb
test
loop
pop
adc
dec
cld
je
add
push
outsl
push
inc
mov
je
jno
das
add
mov
mov
cmp
aam
mov
sbb
jbe
or
mov
mov
add
jbe
gs
dec
mov
inc
imul
pop
mov
fcompl
testb
jnp
cmpsb
push
xchg
sub
int3
sar
fs
mov
filds
and
scas
sbb
mov
jne
add
nop
pusha
push
cmpsl
gs
sbbb
mov
sbb
xchg
inc
mov
pop
sbb
aad
cmp
sahf
imul
lcall
icebp
enter
daa
jno
ret
push
xor
cmpsb
and
scas
sub
mov
pusha
lret
dec
rorl
inc
cmp
mov
push
sarb
xor
insb
mov
push
jno
sbb
shl
add
push
les
test
into
loope
inc
out
push
mov
sub
rep
ljmp
xchg
mov
jp
cltd
sbb
lret
imul
inc
pop
icebp
testb
inc
lret
mov
and
lahf
out
lret
mov
inc
mov
test
adc
mov
cmpsb
inc
lret
out
cmc
mov
shr
aad
sysret
lahf
jno
imul
push
repz
mov
lds
fstpl
mov
jo
loopne
jno
sub
add
shlb
adc
mov
scas
cmp
mov
mov
imul
pop
sub
stc
and
test
and
cs
call
xor
popf
mov
loope
push
das
push
mov
cmp
jbe
and
idivb
aas
push
inc
jae
add
shrb
aas
xchg
ja
jg
sti
mov
add
std
xchg
cltd
inc
aaa
pop
loopne
mov
mov
or
lds
hlt
cld
xchg
out
dec
in
aaa
lahf
pop
popa
jno
dec
rolb
rcll
sub
dec
push
and
jl
icebp
inc
fcomps
fwait
out
push
adc
in
test
cmp
fs
mov
std
push
xor
insl
imul
lcall
leave
pop
cmp
mov
jne
pop
cmc
mov
xchg
cmp
dec
cmp
imul
push
jp
mov
mov
cmp
xlat
rol
mov
cmp
in
push
popa
addl
addr16
shr
mov
mov
jb
pushf
mov
xor
xchg
je
jl
xor
cmpsl
insl
int
notl
hlt
pop
sbb
adc
dec
js
and
mov
int3
pop
mov
lock
movsb
or
add
es
loopne
filds
stos
mov
shl
pop
pop
out
xor
mov
jge
dec
sbb
pop
push
cltd
ja
adc
cltd
mov
stos
cwtl
mov
push
movsl
inc
les
jb
test
or
cs
sbb
xor
ss
bound
aad
or
sbb
or
xchg
sub
mov
jo
flds
pushf
dec
and
pop
xchg
push
pop
icebp
cmpb
fs
adc
movsl
mov
out
push
mov
pop
inc
icebp
int3
push
pop
xor
in
sub
mov
fidivrl
mov
ljmp
dec
hlt
cwtl
push
or
xor
or
ss
in
pusha
mov
jnp
daa
lea
mov
jecxz
stc
stc
or
xor
mov
into
sbb
add
in
test
jno
insl
mov
icebp
add
push
pop
mov
mov
jbe
pushf
fnstenv
fistl
jl
sub
pop
push
into
les
mov
outsl
clc
sarb
or
jno
add
imul
sbb
hlt
mov
fsubl
ror
nopl
jns
or
xor
pop
out
sbb
out
pop
out
cmp
pop
test
fldt
in
movsl
int
mov
hlt
mov
shll
dec
loope
ret
adc
in
inc
scas
pusha
jb
insl
cld
cwtl
aam
jp
testl
inc
sbb
lds
aad
inc
dec
lock
test
push
xchg
lahf
lahf
dec
inc
xchg
sbb
push
mov
xlat
in
jmp
lea
push
push
add
in
sbb
cmp
mov
ljmp
insb
fbstp
push
mov
inc
setbe
xor
dec
cmp
repnz
xchg
ljmp
cmp
lret
cmp
mov
pop
popf
lret
shll
jnp
and
or
mov
push
mov
cmp
or
mov
sub
daa
aad
in
insl
mov
imul
call
xlat
inc
inc
xchg
pop
dec
mulb
fdivp
dec
push
test
push
out
lret
loopne
cwtl
and
pop
pop
mov
push
es
in
les
and
mov
int
lods
out
dec
out
rcl
int3
and
cmc
or
out
in
and
sub
pushf
lds
or
cmpsl
pop
ds
cmpsb
push
xchg
cmc
dec
jecxz
jne
ror
xchg
pop
or
stos
fucomip
movsb
xchg
imul
call
out
sub
out
std
xchg
lret
jb
adc
jmp
rcrl
mov
out
mov
flds
dec
push
mov
xchg
out
gs
cmp
cli
inc
push
mov
lret
push
aaa
loope
jg
jmp
adcl
xchg
lock
or
pop
inc
lret
adc
enter
mov
movsl
std
jb
inc
dec
lods
test
or
and
sub
lds
scas
lahf
jle
rorl
xchg
add
int3
stc
popf
jp
adc
lahf
outsl
daa
incb
or
xchg
and
mov
fs
es
xor
out
icebp
inc
pusha
pop
ret
pop
movsl
mov
jg
jp
mov
jb
dec
add
shl
aaa
test
cmp
xor
add
xor
ja
scas
inc
stos
xchg
inc
sbbb
push
or
jnp
cmp
push
andl
or
pop
dec
fsubr
mov
jb
pop
mov
lret
pop
push
sbb
adc
sub
xor
cmp
mov
push
ja
sbb
mov
mov
xchg
enter
ret
and
cmp
and
cmp
popf
mov
pusha
and
xor
fwait
mov
cld
or
loopne
insb
test
add
xor
popf
cmp
jecxz
ljmp
in
test
stos
fcompl
js
arpl
and
es
insl
fisubrs
mov
xchg
es
orl
addl
adc
xchg
test
andl
ret
pop
jl
fsubr
inc
movsb
sub
cltd
push
or
ss
xor
js
loop
out
mov
inc
jl
cli
or
ftst
mov
icebp
mov
ret
inc
lret
ds
and
dec
aam
enter
clc
pop
xor
nop
pop
mov
aas
sbb
lds
xchg
decl
dec
sarb
xchg
xor
dec
rcrb
add
aad
xchg
xorb
sub
cltd
jl
mov
jle
push
inc
popf
fildl
sbb
ljmp
xchg
or
jge
popf
scas
sbbb
sub
push
jge
sub
mov
pusha
data16
mov
in
stc
lea
addr16
push
mov
pusha
jp
push
pop
orl
mov
inc
arpl
rol
xchg
sub
sti
sbb
sbb
insl
cmp
cwtl
mov
adc
test
push
nop
and
repz
push
push
insb
lcall
push
loop
test
fldl
sbb
popf
mov
sarl
loope
mov
mov
repz
ja
imul
sub
arpl
int3
add
push
xchg
mov
and
sahf
lret
push
inc
push
call
shlb
or
inc
mov
out
mov
pop
scas
movsb
jmp
adcl
out
xchg
jns
cs
inc
sub
fcoms
cmp
rolb
mov
jnp
scas
xchg
push
jo
jg
inc
lahf
inc
fmul
je
mov
and
xchg
clc
out
test
cmp
or
stos
fdivrs
pushl
push
cmpsl
loopne
cmp
lods
int
or
sbb
adc
adc
xchg
cmp
stc
jbe
out
jnp
cld
lahf
xor
push
arpl
ja
repz
mov
adc
pop
inc
loope
and
popf
xor
aam
sub
lret
lahf
movsl
int
mov
dec
push
inc
loop
mov
or
mov
aaa
adc
lds
outsb
test
push
push
mov
movsl
loope
xchg
cmp
or
lods
push
dec
add
cmpsl
mov
insl
adc
insb
fnsave
jb
jns
jo
mov
add
ss
test
mov
outsb
cmp
adc
add
jno
dec
std
or
mov
jnp
imul
sbb
sarl
cwtl
lcall
xor
sarl
pop
cli
or
mov
sbb
jp
or
aam
mov
push
aad
cmp
clc
mov
adc
pop
add
nop
into
adcl
or
mov
popa
fxch
pop
addb
loopne
push
jl
push
repnz
inc
pushf
add
or
out
push
pop
sub
lea
cmp
imul
cmc
out
lods
scas
mov
scas
jg
pop
mov
adc
inc
and
push
xor
dec
mov
mov
sub
pop
outsb
xchg
jmp
dec
xchg
add
mov
inc
push
incb
xchg
inc
fdivs
jecxz
dec
mov
test
cmpsb
xchg
pop
inc
popa
lret
ja
fcmovne
adc
imul
stos
psubusw
mov
and
ret
or
jmp
aaa
push
addr16
jp
xor
jne
pop
ja
cmp
and
dec
repz
push
xor
or
out
aad
aaa
dec
outsb
add
mov
dec
push
inc
rolb
push
in
and
insb
push
insl
inc
int
enter
mov
push
sub
orb
inc
bound
out
les
popa
sbb
lahf
mov
inc
push
in
sbb
lock
cmp
pop
mov
xor
ds
aas
xor
jb
adc
jno
mov
out
mov
lods
xchg
cmpsb
movsb
or
mov
add
or
lods
icebp
adc
sbb
mov
pop
call
jp
movsb
dec
loop
sarl
dec
mov
mov
or
push
fsubrs
dec
mov
cmc
lret
adcb
cltd
mov
jae
mov
mov
or
sbb
pop
ss
aad
decb
inc
push
sbb
dec
clc
xor
ljmp
inc
or
gs
mov
xchg
pushl
mov
out
rclb
cmpsl
lcall
dec
mov
mov
add
pop
repz
dec
or
mov
mov
iret
cmp
inc
leave
fcompl
mov
xchg
push
sbb
loopne
cmc
scas
aam
jbe
data16
cwtl
push
sbb
ljmp
cltd
cmp
pop
jecxz
cmc
sbb
sub
add
pop
pop
cltd
xor
mov
sbb
fs
inc
mov
loopne
lock
mov
push
sbb
fisttpl
pushl
sub
data16
pusha
je
sub
xchg
pop
stc
mov
jne
pop
fildl
pop
pushf
cs
cmp
pop
fistps
jbe
clc
fcomps
fdivrp
sub
push
mov
rcr
pop
movsb
xor
jp
xor
mov
xor
bound
xchg
inc
nop
mov
add
xorl
outsb
clc
icebp
pop
cmp
xorb
lcall
inc
mov
adc
or
rolb
sub
jp
mov
gs
inc
mov
subb
jp
mov
mov
add
and
mov
cmp
test
pop
mov
push
movsl
cmp
sub
mov
cwtl
icebp
or
dec
sub
inc
mov
cmp
ljmp
cmpsb
fs
test
fstpt
lcall
push
inc
adcb
xor
int3
fsubrs
jnp
ja
icebp
and
rol
mov
adc
pushf
scas
jg
cli
sbb
fisubrs
sahf
mov
ja
pop
cs
ja
jmp
arpl
mov
int
sbb
jl
lock
mov
or
jg
jge
into
mov
jl
xor
push
lock
std
enter
mov
lret
in
adc
popa
addr16
cmp
sub
out
cmp
pop
shl
and
or
rolb
out
dec
call
fbld
out
movswl
inc
fistpll
das
push
cwtl
repnz
or
bound
adc
cmp
push
sbb
dec
fwait
ds
pop
jne
sbb
and
gs
mov
aaa
into
xchg
fcoms
shl
xchg
fisubrs
sbb
or
pushf
or
adcl
dec
add
and
mov
dec
push
ret
jg
push
cs
scas
mov
sahf
xchg
repnz
and
test
sub
pusha
popf
add
dec
cs
icebp
jbe
and
enter
repz
mov
lock
and
out
cltd
push
jp
ss
dec
push
addr16
and
fs
orl
or
pop
lds
jbe
mov
push
nop
dec
push
clc
js
out
pop
sbb
ds
push
mov
mov
lods
shrb
decl
cmpsb
cmp
pop
xchg
xchg
shrl
sbb
fidivrl
sub
sbb
jge
lock
add
dec
pop
adc
outsb
scas
sub
sbb
roll
sub
test
xor
stos
fnsave
in
in
out
or
out
pop
clc
testl
push
inc
push
sti
fnstcw
jne
out
mov
mov
mov
jo
mov
mov
push
movsb
scas
cmp
scas
andl
test
jl
lock
mov
xchg
popa
gs
add
and
push
test
or
std
test
jge
call
daa
push
call
vpaddq
inc
bound
push
lods
push
hlt
aad
ret
push
xchg
xlat
xlat
pop
leave
dec
cmp
mov
pusha
dec
mov
mov
and
jmp
and
adc
xchg
out
fildll
xchg
sbb
ret
dec
sbb
das
add
inc
repnz
fdivs
insl
sbb
mov
xchg
dec
cltd
push
sub
push
outsl
das
dec
in
popl
verw
test
sub
push
paddw
shrb
dec
cwtl
sti
push
out
in
jo
adc
add
aaa
mov
push
mov
pop
mov
and
lods
mov
roll
mov
lods
scas
cmpsl
xchg
scas
lret
cltd
sub
outsl
add
jecxz
in
push
test
mov
or
int3
mov
mov
pop
out
jle
cmpsb
sub
and
push
in
aaa
lock
out
xchg
inc
cli
push
mov
cmp
scas
sbb
push
loop
mov
dec
push
out
jp
sbb
insb
jb
xchg
cmp
sti
ss
mov
leave
sub
mov
gs
adc
cmp
cmp
jmp
jne
test
jb
mov
mov
cltd
aas
dec
pop
cli
mov
dec
clc
adc
imul
inc
aaa
shl
push
outsb
add
adc
bound
xchg
sbbb
test
pop
add
inc
int3
test
imul
outsb
leave
cmp
das
push
lcall
and
int3
pop
ss
xor
inc
ljmp
push
in
sub
jae
imul
das
add
subl
mov
test
hlt
jmp
jp
mov
lods
add
mov
lret
popa
cld
and
sub
sbb
add
jp
out
lods
pop
xor
lcall
and
cmp
pop
push
loopne
push
xchg
jne
xchg
jp
jmp
mov
adc
insb
push
das
xor
stos
cld
xchg
lods
xchg
cmp
jmp
pop
cmpsl
into
fs
fnsave
or
mov
sahf
rol
lahf
jno
andb
sub
cmp
icebp
rcrb
jl
xchg
adc
hlt
xchg
mov
sbb
test
in
sub
sub
jl
mov
or
cltd
jg
out
insb
push
cmp
stos
inc
popf
mov
inc
mov
jmp
ret
stos
repnz
xor
and
je
pusha
sti
xchg
push
fbstp
xlat
dec
dec
xchg
jb
inc
lcall
and
out
pop
inc
sarl
adc
add
mov
mov
pop
pusha
pop
test
add
adc
xor
movsb
jl
rorl
mov
adc
jb
fdivl
add
lret
and
or
cmp
aad
inc
loope
jb
sub
push
mov
sbb
arpl
push
xor
test
mov
pushf
movsl
push
add
cld
bound
cmpsl
inc
mov
add
fsubl
dec
push
or
out
xchg
out
mov
dec
or
incw
sbb
mov
lcall
cmpsl
sbb
lea
mov
dec
adc
and
xchg
sub
faddl
stos
jne
std
scas
into
fsubrs
shrl
repz
repnz
hlt
les
outsl
add
jle
clc
xorl
mov
fabs
xchg
mov
lret
pusha
mov
mov
xor
jmp
pop
jge
mov
hlt
push
or
ljmp
push
jl
and
mov
vshufps
das
push
aad
cmp
and
pop
xor
xor
or
jne
jbe
ret
dec
cltd
jns
mov
insb
jbe
lods
icebp
test
xchg
push
xor
or
push
cltd
sub
mov
push
jp
ja
mov
or
pop
shrl
jle
ljmp
lods
int3
jmp
sti
mov
sbb
test
sbb
aas
jmp
dec
pop
sar
xor
fdiv
mov
outsb
in
xchg
cmp
jb
xchg
inc
cmp
jb
test
jne
dec
sbbl
sbb
loopne
mov
cmpsb
addl
cld
jo
or
cmp
js
push
jns
lcall
or
push
fisubrl
lret
aaa
stos
call
or
cmp
mov
imul
int
push
sbb
lret
cld
sub
movsl
cmp
popf
les
adc
ja
in
int3
outsl
fst
ljmp
mov
pop
fisttps
loope
xchg
out
in
add
stos
adc
arpl
add
into
outsb
mov
fprem1
mov
roll
jg
imul
jmp
or
scas
and
xor
lods
sbb
enter
jo
imul
iret
and
dec
mov
jmp
aaa
push
sahf
sub
imul
mov
shrb
jecxz
cmp
out
ja
pop
shl
and
mov
ret
pop
repnz
dec
and
jns
adc
inc
out
inc
or
inc
xor
sahf
add
xorb
inc
mov
fs
pusha
xchg
dec
addl
repnz
cwtl
cmp
je
xchg
adcb
adc
jmp
nop
or
mov
cmp
shlb
lods
cmp
jae
fnstenv
dec
xor
sub
pop
push
mov
les
sbb
dec
shrb
cli
out
xchg
in
add
orb
js
or
add
add
adc
xor
and
out
adc
jge
mov
negb
in
gs
xchg
cmpsb
xchg
arpl
add
push
xor
lret
xor
fisttps
push
jle
cmpsl
sbb
fs
loopne
stos
in
mov
jo
test
cmpsl
xor
pop
adc
xchg
movsb
jno
test
mov
roll
clc
ljmp
xlat
lcall
xchg
xor
dec
outsb
mov
scas
jmp
mov
orl
or
test
push
cltd
add
and
call
jnp
lret
push
popa
popf
movsl
inc
mov
adc
loop
aad
inc
xchg
or
pop
mov
dec
xchg
mov
fadds
sub
ror
repz
sbb
mov
dec
mov
scas
movsl
sbb
inc
mov
fwait
lahf
lods
jge
push
push
xlat
es
push
inc
cli
jne
pop
ljmp
cmc
xor
jmp
mov
inc
jns
mov
xchg
and
ret
test
addr16
cwtl
mov
test
adc
xchg
scas
popf
test
or
sbb
add
or
cli
lcall
cmpsl
lcall
or
mov
nop
das
push
and
pusha
ljmp
loopne
inc
and
sub
addr16
insl
or
sub
sbb
arpl
mov
cmp
jo
arpl
adc
data16
mov
xchg
rcl
aad
cmc
inc
ficoms
mov
cld
call
cmp
push
ficompl
push
neg
repnz
cmc
mov
loope
jecxz
movsb
out
fst
lds
and
adc
add
xchg
xor
inc
mov
inc
fidivrl
fbstp
dec
leave
int
stos
cld
xchg
sub
sbb
dec
cmp
je
sbb
in
scas
rorl
insl
and
mov
and
rclb
jmp
sub
inc
lock
mov
mov
cmpsl
jmp
and
inc
inc
or
ds
mov
js
stc
mov
loope
scas
or
leave
aaa
jle
push
mov
push
pop
lret
adc
inc
rclb
loop
mov
jbe
scas
xchg
jmp
inc
sbb
dec
gs
sub
popl
movsb
mov
xor
and
xchg
shlb
xor
xor
dec
inc
fadds
ret
sub
add
mov
or
inc
pusha
push
call
xor
push
xchg
push
addr16
arpl
push
pop
push
fidivl
mov
out
jp
stc
nop
dec
inc
push
or
add
scas
orl
test
cmc
out
testl
sbbb
push
jge
and
daa
hlt
fstps
lock
jl
mov
push
daa
mov
sahf
dec
jno
loop
mov
xor
mov
mov
sahf
loop
test
movsb
mov
loopne
sub
test
lcall
mov
adc
cmpsb
std
leave
adc
xchg
mov
or
test
shrb
lds
ljmp
mov
repnz
dec
int
sbb
in
and
mov
jmp
out
andb
xchg
dec
test
dec
jb
cwtl
xlat
rcll
mov
fbstp
pushf
push
outsb
add
lret
push
adcl
pop
add
insl
jle
divb
xchg
mov
gs
push
adc
sbb
imul
mov
dec
jb
inc
test
in
dec
das
mov
rcrl
cmc
pop
mov
sbbb
pusha
addr16
mov
lods
xchg
or
or
repnz
push
add
test
add
clc
outsl
mov
jl
or
sbb
insl
pop
in
cli
cli
jmp
fldt
int3
rcll
test
jbe
xchg
and
adc
jmp
dec
stos
pop
cmpsb
jb
mov
jl
inc
cwtl
int
xor
incb
jns
jmp
mov
jno
inc
scas
push
ds
mov
and
sbb
dec
test
jno
sub
das
fstl
mov
js
fsubrs
xor
cltd
mov
outsb
xor
fwait
push
xlat
test
mov
pop
xchg
mov
loop
push
adc
sarl
push
dec
mov
cmp
ljmp
ss
add
test
mov
iret
inc
inc
negl
inc
loope
std
pop
insb
sbb
mov
addr16
scas
and
cmpsl
sbb
cmp
ret
jl
push
pop
and
les
ret
mov
push
lock
pminsw
xchg
cmpsl
nop
push
inc
mov
mov
loop
cmp
lds
aad
into
push
push
and
pop
cmc
addr16
es
movsb
sub
cli
jl
cmp
cltd
jmp
orl
push
xor
cmp
dec
in
pop
jno
loop
push
ret
jg
xorl
lret
or
movb
dec
in
inc
mov
jae
mov
fldt
insb
pop
loopne
push
repnz
in
and
cmp
inc
lds
pop
adc
ja
mov
out
fwait
xchg
shrl
sbb
jbe
jnp
enter
xchg
and
lods
cld
push
insl
jg
and
inc
es
lahf
sbb
into
sti
push
adc
push
jae
aas
push
xor
shl
adc
xchg
cwtl
cwtl
push
pop
or
lods
jo
movsl
push
pop
mov
jnp
cmp
scas
mov
jg
cmc
mov
fucomip
test
rcrl
mov
into
sub
or
std
stos
dec
in
sbb
xchg
sub
dec
scas
mov
cmc
es
dec
cmpsl
xchg
push
jae
sbb
es
fs
in
mov
or
popa
imul
cmp
test
push
idivl
add
rcrb
mov
or
jl
loope
dec
int
add
jge
cmp
sarl
jle
add
add
sub
sbb
adc
or
js
repz
stos
stc
mov
sub
jmp
in
push
or
aad
dec
add
jl
push
adc
lock
dec
and
les
int3
lea
xor
xchg
push
call
test
pop
mov
jl
add
sbb
inc
dec
dec
mov
or
bound
xchg
jge
out
testb
addl
jns
mov
adc
add
jge
mov
gs
adc
push
and
jmp
mov
imul
xchg
xor
mov
dec
xor
xor
cs
ficoms
out
aaa
jp
mov
cmpsl
xchg
mov
hlt
add
push
decl
testb
xchg
mov
mov
cmp
add
repz
cmpsl
sub
fimuls
or
aad
pop
pushf
outsb
sarl
sbb
xor
unpcklps
lods
roll
xchg
inc
repnz
lret
popa
add
arpl
shlb
xor
clc
mov
sub
sub
inc
add
addr16
xlat
jmp
cwtl
pop
mov
sbb
push
popf
xchg
mov
sub
int3
pop
mov
shll
push
xchg
add
mov
sub
jmp
outsb
iret
dec
mov
leave
fnstenv
jmp
mov
pushf
push
dec
or
fidivl
filds
xchg
add
jae
pop
ds
subl
loope
test
outsb
xlat
shll
cmc
mov
inc
dec
pop
jo
cmp
mov
mov
int3
arpl
push
scas
sbb
dec
mov
jecxz
dec
sub
xchg
lcall
jmp
orb
mov
jne
pop
cmp
lods
dec
js
push
push
sarb
lods
dec
pop
test
dec
fnstsw
sbb
xchg
pop
insl
mov
in
xor
mov
push
sbb
in
xor
dec
in
push
mov
xchg
call
inc
insb
out
xor
in
pop
xchg
sub
pop
mov
rcl
filds
inc
daa
repnz
hlt
hlt
pop
jno
add
sbb
push
xor
fs
rorl
or
push
pop
push
and
pop
push
sub
or
repnz
lahf
pop
aaa
xchg
and
add
sub
push
mov
mov
push
mov
shr
jge
out
lea
mov
sbbb
filds
push
data16
sbb
arpl
cmp
outsl
pop
ljmp
mov
fsubr
js
xlat
mov
jge
in
pop
and
cli
adc
repz
mov
jl
sub
out
push
gs
push
mov
bound
lahf
mov
xor
jmp
pop
pop
int3
imul
push
pop
sbb
stos
push
fnsave
mov
insl
xchg
sub
aad
cmp
mov
push
xor
mov
mov
ret
outsl
jno
xchg
adcl
mov
or
lods
pop
push
ret
scas
inc
loope
in
dec
sub
in
arpl
xor
out
insl
and
adcl
inc
pop
adc
subl
push
iret
push
aaa
into
test
xchg
lea
inc
into
lds
pop
insb
push
adc
cmpb
push
lret
ficoms
in
xlat
mov
inc
in
lea
jns
sub
stc
lea
dec
mov
xchg
xchg
dec
push
ljmp
push
popf
xor
and
sarl
ja
sahf
xchg
sti
xchg
fiaddl
sub
imul
mov
mov
mov
int
bound
pop
ds
ja
inc
and
cmp
cmovne
jge
xor
pop
cmp
outsl
insl
jnp
mov
mov
outsb
add
inc
adc
lahf
popf
negl
sub
je
mov
lahf
int
xor
out
test
clc
jecxz
sub
sbb
lcall
movsb
adc
clc
inc
lods
je
fisubrs
sub
inc
dec
loope
mov
jne
jmp
or
adc
shlb
jle
adc
fadds
loope
lds
or
fnstsw
clc
mov
pop
xchg
cmpl
shrb
lcall
jge
scas
push
mov
xchg
aad
ret
sbb
rcll
inc
subb
mov
mov
mov
fs
in
dec
xchg
xor
lea
xlat
xor
sbb
aam
mov
inc
out
cmp
js
push
outsb
je
lds
je
cmp
bnd
aad
rclb
jno
inc
ret
in
inc
or
fmull
lea
sbb
fsubrs
add
stc
inc
fcomps
mov
loop
addr16
sub
dec
cmp
arpl
mov
or
pop
inc
adc
push
and
adc
cmc
lds
jns
out
jge
enter
repnz
and
pop
outsb
pop
pop
xchg
mov
imul
int
jge
push
cld
mov
and
popa
clc
sti
repz
and
xor
and
add
lea
push
inc
aad
repz
insl
std
cwtl
sub
sub
mov
and
inc
sbb
sub
sbbl
mov
decl
mov
xor
jg
pushf
aaa
iret
xor
cmp
adc
andb
xchg
daa
clc
les
std
push
mov
mov
xchg
add
xchg
leave
mov
cmp
dec
js
mov
dec
fists
mov
enter
notb
xor
xor
and
jge
xchg
lea
gs
sbb
subb
push
fmul
mov
cli
lret
jl
adc
mov
fs
xor
mov
movsb
jmp
repnz
shll
pop
xor
aas
sbb
or
xsave
lock
loopne
fwait
push
add
std
push
push
shrl
sbb
and
adc
jbe
dec
or
imul
or
leave
scas
jbe
pop
arpl
rcll
out
addr16
out
adc
mov
in
xchg
xlat
cmc
mov
sub
arpl
sti
mov
xchg
fiaddl
data16
sbb
shlb
outsb
shr
addr16
mov
or
aas
test
shll
jge
rorb
out
or
adc
jl
adc
push
pop
repz
mov
dec
pop
jb
movsl
inc
decl
das
jl
jle
add
std
or
xor
dec
push
outsl
cwtl
ja
fstp
je
inc
ja
cmpl
out
cmp
xchg
push
jae
loop
sub
std
repnz
insb
mov
sar
jb
xlat
rorb
xchg
test
ljmp
movsl
fiaddl
fdivrl
jmp
fildll
adc
add
stc
inc
fcmovb
in
xchg
fdivr
sub
push
dec
rorl
inc
mov
ja
in
xchg
push
inc
sub
insb
jae
mov
mov
adc
cmp
cmpsl
jbe
sub
aad
test
ja
shll
pop
in
add
scas
div
imul
xor
add
into
cmpsb
sub
add
cmp
jbe
out
add
clc
fnstenv
and
push
adc
loope
or
xor
push
mov
movsb
cmpsl
test
jecxz
int3
inc
lcall
inc
es
jbe
inc
das
mov
jmp
jb
cmpsl
inc
loope
jmp
push
adc
dec
ret
sub
jns
aas
xchg
mov
test
jne
sahf
into
data16
mov
movlhps
xchg
int3
in
or
cmp
pop
xor
sbb
cmp
lret
dec
pushl
push
or
or
mov
push
xor
pop
adcb
movsl
sub
das
lock
xchg
pop
or
les
cmpl
push
adc
mov
cmp
xor
out
mov
mov
push
mov
insb
cwtl
push
ljmp
jno
adc
repz
outsl
and
and
push
xchg
sbb
fidivl
lock
cmpsl
dec
loop
jl
lods
pop
mov
cmpsl
xchg
sub
into
add
setae
rorl
call
xor
and
mov
xor
mov
xchg
mov
mov
jecxz
jb
and
out
std
test
inc
sti
cmpsl
cmp
push
xor
add
adc
mov
cwtl
movsl
and
mov
push
or
fstpl
jge
loopne
add
addr16
jnp
mov
xorl
xor
mov
jnp
hlt
jmp
cltd
mov
aaa
out
jne
loopne
adc
and
push
xchg
add
mov
fbstp
jge
add
jo
jge
sub
rol
test
mov
sub
adc
ss
subl
orl
negb
icebp
xor
adc
xchg
lahf
scas
jb
cmp
popa
insl
fs
pop
clc
nopl
push
aam
sub
mov
sbb
fists
push
adc
xor
jno
repz
jnp
mov
in
je
lock
arpl
and
mov
and
mov
and
gs
mov
mov
jg
mov
push
les
xchg
sbb
mov
push
dec
fnstenv
arpl
leave
das
mov
popf
rcpps
ss
xor
mov
rcll
jg
call
inc
orl
add
shrb
int
hlt
cltd
je
out
mov
inc
out
sbb
addb
mov
jb
or
lock
rolb
jno
ja
sub
mov
inc
fcoml
jb
bound
inc
lahf
out
test
mov
lret
pop
mov
loopne
adc
inc
jmp
mov
sub
out
mov
sub
push
mov
imul
ret
adc
or
xlat
lahf
push
fstpl
test
std
xchg
xor
cmpsl
add
repnz
push
xchg
arpl
adc
loope
xchg
xor
lock
je
call
sti
dec
or
mov
dec
push
aad
lahf
push
sub
dec
jns
cmp
adc
xchg
push
mov
fisttps
sbb
lods
xchg
adc
out
test
iret
mov
testl
rolb
lret
outsb
sbb
idivb
js
mov
jns
pop
or
pop
jl
stos
jns
fisubl
inc
sbb
loope
cltd
mov
add
jmp
cmp
fnstcw
jae
mov
test
or
fs
outsb
push
das
insl
and
int
adc
push
pushf
xor
negb
bnd
fidivrs
rcr
xchg
mov
pop
xchg
sbb
mov
dec
or
sub
and
push
data16
xchg
scas
loope
pop
sahf
mov
pop
sbb
push
je
cmpsl
push
inc
fidivrs
add
xor
cmp
inc
pop
mov
daa
jbe
xchg
int
in
loop
jl
aad
out
cld
shl
jno
push
inc
xlat
pop
pop
xchg
or
sti
pop
push
repnz
jge
pop
xchg
cwtl
mov
cmp
icebp
out
dec
movsb
mov
pop
xchg
or
or
sub
testl
sbb
sbb
loop
enter
gs
sbb
add
mov
fsts
test
jmp
mov
xor
xchg
aam
into
dec
scas
cmc
mov
scas
sarb
fcmovne
cwtl
flds
xchg
enter
rcl
xor
mov
aad
jno
test
out
sub
repz
add
xor
cmp
push
popf
cmp
dec
mov
cltd
mov
and
xlat
pushf
outsl
nop
inc
pop
inc
adc
sub
enter
mov
dec
add
push
jo
mov
loope
test
xor
cmpsl
cmpsl
xchg
mov
sub
jno
rorb
popf
jo
sbb
shrb
imul
addr16
inc
dec
or
pop
push
xchg
jno
pop
push
ds
mov
add
scas
cmc
sbb
adc
in
dec
pop
std
or
das
mov
push
sub
sub
lods
sub
loopne
mov
imul
outsl
jg
dec
mov
mov
sbb
dec
pushf
add
mov
iret
jle
dec
je
js
adc
mov
jl
sub
aad
jecxz
pop
jmp
fnsave
add
sahf
shll
lds
in
outsb
cmp
in
jne
outsb
cmp
add
xchg
mov
sbbb
scas
add
pushl
xor
mov
popf
adcl
nop
outsb
cmp
dec
or
scas
pop
icebp
subb
out
mov
loop
cltd
shlb
iret
jge
dec
addl
add
inc
psubsb
sbb
cs
cmp
je
dec
pop
int
in
mov
mov
jnp
inc
shlb
or
test
rcr
or
push
in
subb
adc
fildll
sbb
xor
xor
cli
mov
jp
das
xchg
cwtl
add
or
adc
xchg
shl
and
popf
xchg
int
lds
loopne
xor
mov
cmp
loop
push
lret
lods
pusha
neg
mov
push
jle
jg
pop
pop
pop
push
lods
rclb
shlb
mov
jl
cmpsb
scas
jecxz
mov
mov
loop
and
js
cmp
push
or
mov
or
cli
pop
repz
insl
jnp
or
or
mov
xchg
loop
pop
pop
sbb
shll
ds
mulb
sti
out
mov
ret
cmp
in
pop
push
push
or
fnstcw
stc
push
mov
sub
cmpl
rcrl
scas
pop
imul
inc
fwait
loop
sbb
jnp
xor
outsl
imul
add
add
and
popa
repnz
and
ret
outsb
call
xorb
sarb
imul
flds
adc
xchg
mov
push
cwtl
inc
inc
xor
gs
xchg
mov
push
aaa
adc
roll
fisttpll
sub
push
loopne
lds
mov
iret
jno
jbe
adc
add
lret
mov
push
fcomip
mov
pop
push
mov
pop
xcrypt-ofb
cmpsl
push
mov
or
cmp
testb
rclb
out
pusha
or
add
clc
or
sub
loopne
inc
out
lds
stos
push
lahf
js
scas
inc
loope
mov
pop
mov
pop
cmc
cmpsl
adc
pop
mov
push
mov
aad
add
and
ja
fcomi
adc
daa
rcrl
outsb
pushl
frstor
jne
fsubrl
add
mov
mov
dec
xchg
cld
out
insl
stc
and
dec
movsl
dec
imul
std
out
xchg
test
loopne
rol
cltd
sbb
outsb
jle
add
leave
adc
nop
imul
cld
or
push
in
pop
bndstx
push
addb
and
or
and
or
cmp
push
ja
jecxz
push
sub
sub
inc
fiaddl
jnp
int3
mov
fs
mov
cmp
sbb
add
loope
setle
lock
movsb
int
out
int3
outsl
daa
pushf
je
outsb
pushf
mov
sub
lds
jae
addr16
scas
dec
cli
push
push
xlat
sub
mov
xchg
or
mov
pop
roll
in
inc
inc
inc
inc
or
xchg
in
jne
or
xor
mov
push
cwtl
adc
adc
xchg
mov
das
mov
push
pop
ret
hlt
xchg
cwtl
mov
mov
andb
rep
mov
push
loope
aaa
xchg
dec
in
test
fisttpll
testb
les
xor
lea
pop
ja
shl
xor
mov
mov
js
repz
cmpsb
jp
mov
repnz
shrl
std
adc
and
xchg
fucomi
lea
pop
push
jne
push
mov
mov
pop
mov
add
jle
inc
sbb
or
jp
mov
inc
stc
or
neg
and
dec
popf
lods
out
bound
and
push
repz
stc
mov
js
jbe
adc
cmp
mulb
fwait
test
xchg
test
xlat
adc
jns
jo
outsl
sti
push
adc
sub
fs
ret
lods
inc
adc
into
enter
sub
and
fwait
sti
sbb
mov
or
icebp
cmp
lahf
imull
xor
fwait
aas
xor
incl
or
push
push
imul
sub
imul
xchg
push
mov
or
popa
movsb
dec
adc
insl
arpl
xor
adc
lahf
bound
gs
push
push
jnp
jle
aam
or
jb
popa
mov
arpl
out
cs
adc
aaa
pop
add
aas
push
aas
fcom
ljmp
and
sub
inc
int3
push
out
lea
sbb
mov
shrb
lahf
loope
repz
sti
push
mov
xchg
ret
je
repnz
mov
mov
push
pop
loop
mov
icebp
mov
aas
sbb
mov
adc
test
dec
ror
push
jbe
nop
xchg
dec
loopne
mov
cmpsl
aad
jbe
pop
dec
fbld
xchg
addr16
scas
out
rolb
stc
cmp
push
lods
pop
xchg
add
dec
mov
inc
test
cwtl
mov
pushf
xchg
push
call
cmp
insl
shl
xchg
mov
dec
std
pop
fstpt
dec
mov
aaa
cli
mov
mov
mov
aaa
sbb
push
cmp
pop
fdivrl
adc
into
test
add
rcrb
test
mov
shll
sbb
mov
rcl
cmp
sbb
add
cltd
fs
daa
lea
push
faddl
pop
cmp
jmp
dec
add
mov
out
mov
add
inc
xchg
lcall
rcrl
sahf
lcall
icebp
cmc
and
imul
sbb
test
mov
mov
sbb
jbe
cmp
push
jno
inc
pop
scas
push
push
mov
jno
cmp
pop
mov
jae
adcb
fwait
cmpsb
sbb
pop
dec
pop
adc
jnp
jmp
mov
out
push
aas
push
xlat
test
fisubs
mov
dec
push
fstps
mov
sti
pop
stc
cmp
fidivrl
adc
pop
inc
pop
and
dec
aam
in
dec
loope
fstps
inc
mov
incl
mov
popf
clc
mov
fcmovu
add
not
push
adc
out
cwtl
adc
and
push
sub
inc
xchg
or
sub
arpl
lods
mov
pop
daa
jle
dec
jbe
in
fs
pop
xchg
dec
je
inc
roll
cmpsl
lcall
jl
insl
xchg
inc
add
inc
movsb
pushf
jmp
push
cld
jg
jmp
mov
adc
ja
into
jge
add
mov
fildll
rcl
stc
enter
jmp
ds
shr
pusha
xchg
push
lds
ret
rcll
js
jle
push
out
mov
fcmovne
int3
or
js
and
inc
xchg
test
jl
lock
jno
sub
loopne
pop
cmpl
sub
add
xor
xor
fs
pop
jg
popf
ss
sub
mov
inc
insb
cmp
push
pushf
xor
fisubrl
sbb
dec
and
sbbl
movsb
push
mov
ds
stos
xchg
pop
call
sub
lret
jg
mov
rcrl
sarl
in
lret
inc
jl
leave
popa
add
mov
pop
daa
mov
pop
aaa
mov
sbb
or
bound
add
mov
mov
inc
add
scas
in
sbb
lods
cmpsb
mov
notb
dec
mulb
push
or
data16
lret
lods
inc
rorl
add
push
inc
clc
push
jne
dec
inc
popf
jbe
mov
fcmovnb
jecxz
jl
mov
mov
adcl
mov
stos
movlps
jecxz
int
insl
or
xor
es
mov
aam
jg
sbb
outsb
repnz
test
sub
push
cmc
cli
mov
jl
cmp
mov
insl
xlat
mov
ds
out
xchg
sub
cmp
iret
xchg
inc
jae
dec
rcl
sub
popa
xchg
nop
dec
push
mov
sahf
sarl
insl
shl
pop
cmp
insb
popa
mov
xchg
lea
lcall
mov
dec
in
loopne
adc
movaps
clc
pop
adc
aaa
inc
sub
imul
xor
dec
insb
or
stc
xor
cmp
push
insl
bndstx
lds
and
loope
xor
cmp
pop
cmp
xor
stos
popf
cld
rcr
mov
sbb
cmp
sub
ljmp
repz
lret
xor
in
mov
push
jmp
andl
test
cli
inc
imul
add
xor
outsb
jno
inc
sub
jno
fcompl
mov
mov
jo
ljmp
mov
out
rcl
inc
loopne
enter
lret
pop
repnz
test
cmc
subb
push
outsl
fsub
mov
test
ret
mov
push
jnp
rcll
jbe
xor
in
sbb
lds
pop
in
sbb
das
loop
fstpl
and
lret
push
or
test
sub
fsubr
xor
test
push
in
mov
int3
fs
into
mov
jbe
jmp
std
jecxz
mov
pop
xlat
cli
adc
popf
xchg
outsb
fmuls
mov
mov
sub
mov
shlb
sub
add
xchg
sbb
xchg
jge
or
lret
mull
ret
xor
add
movsb
cld
push
inc
pusha
sti
divb
jne
js
in
jo
mov
aam
jge
add
test
xchg
or
mov
or
aad
xor
dec
mov
pop
xchg
xlat
rorl
adc
cmpsb
and
addr16
int3
push
pop
jp
out
test
popf
loop
or
dec
dec
jl
mov
xchg
shlb
mov
jb
mov
add
insb
xchg
outsb
leave
loope
in
sub
push
inc
cs
lahf
dec
cmovnp
sarb
cli
add
xchg
jne
leave
fcoml
test
ja
or
inc
sbb
mov
cld
popl
dec
push
fists
sbb
push
jne
adc
jl
mov
inc
jo
cmp
pusha
insb
int
adc
mov
xchg
mov
mov
enter
lcall
and
add
pop
dec
fists
cmp
xchg
mov
test
cmp
sbb
mov
rclb
sti
cwtl
imul
pop
push
mov
push
inc
dec
dec
jmp
pop
pushf
sbb
dec
mov
out
shlb
popa
insl
cwtl
das
lahf
xchg
mov
loop
sti
dec
xor
inc
pop
mov
in
std
test
lea
pop
lods
add
push
jp
adcl
adcl
outsl
cmp
dec
jecxz
fwait
pop
idivb
pop
stos
pop
out
jge
jbe
jns
add
xchg
cmpsl
xlat
aad
or
sub
inc
fwait
out
lods
nop
xchg
out
cmp
test
dec
fnstenv
movsl
cmp
add
sahf
push
mov
fsubl
pop
mov
cmc
mov
fnstenv
add
sbb
dec
mov
pop
outsl
sub
lcall
sbb
enter
shlb
jns
cmpsb
lock
lcall
sbb
add
ja
subl
sub
pop
lock
sahf
or
lahf
ja
add
lds
pusha
xorl
adc
aam
mov
ja
roll
ljmp
insb
jg
add
loop
mov
call
hlt
inc
pop
or
mov
popf
jecxz
mov
xchg
mov
fisttps
mov
xchg
mov
or
stc
leave
sub
stos
fstl
ret
out
cmpsb
leave
xor
rcr
inc
fcomi
sti
inc
mov
js
pop
mov
mov
adc
ror
bound
fcomip
xor
movsb
jmp
pop
cmc
inc
sub
xchg
rclb
std
setno
outsb
and
cmc
andnps
cmpsl
lea
iret
lea
fwait
xchg
js
add
inc
or
scas
xlat
bound
lret
out
in
loopne
or
pop
add
sahf
cltd
jne
sub
fdivp
lock
add
hlt
imul
incl
add
imul
nop
push
shll
out
hlt
ja
out
push
mov
adc
adcb
mov
scas
movsb
mov
arpl
pop
jne
cmp
push
adc
mov
stc
insl
sub
or
pop
add
fnsave
cwtl
shrb
push
out
incb
push
ljmp
mov
push
push
and
test
stc
test
dec
outsw
adcb
fcoml
lods
ja
idivb
testl
rcrl
dec
idiv
scas
ret
fidivrl
aam
rcrl
ljmp
push
ljmp
inc
and
dec
push
push
sub
xchg
pop
int3
and
loope
ret
sahf
clc
test
dec
mov
scas
dec
push
sub
data16
inc
ret
push
push
mov
sub
nop
push
ljmp
call
imul
ljmp
mov
loopne
mov
dec
xor
subb
in
in
adc
stc
xchg
daa
pop
test
insl
cmp
jae
xchg
mov
mov
movsb
int
in
aam
or
jle
shlb
fstl
loope
sti
jle
sbb
mov
dec
clc
pop
fldl
cltd
call
or
outsl
inc
in
mov
push
mov
stos
xchg
leave
in
jb
sub
movsb
jg
xchg
lea
jbe
arpl
sub
ja
outsb
dec
mov
in
mov
mov
xor
xor
shlb
adcb
out
xchg
pop
adc
adc
lret
es
jg
leave
sbb
sub
sbb
ds
sub
into
fmull
cli
pop
and
xor
outsl
add
in
mov
nopl
lock
mov
enter
repz
push
loope
imul
dec
mov
aas
mov
lahf
std
mov
xor
popf
push
aaa
loopne
outsl
adc
xor
mov
inc
mov
mov
cmpsl
dec
mov
sbbb
push
test
mov
jg
insb
xor
int
sbb
push
cmpsb
jmp
or
xor
fwait
popf
bound
pop
and
mov
lock
scas
cmpsb
push
xor
mov
and
cwtl
roll
out
pop
testb
push
adc
loopne
les
negb
fidivs
repz
cs
mov
fidivrs
or
fcmovb
loope
push
clc
inc
pop
push
cmp
ss
insb
mov
dec
adc
inc
push
or
fisubs
test
rcl
outsl
daa
pop
out
sar
dec
pop
aaa
dec
mov
add
or
mov
jb
pop
ds
rorl
cmp
pop
and
daa
mov
pop
mov
or
iret
mov
sub
add
sbbb
xchg
cmp
jbe
push
cmp
inc
repz
mov
mov
adc
inc
sbb
call
ds
insl
popf
push
outsl
sub
cmp
cwtl
mov
outsb
jecxz
mov
pop
jmp
aad
dec
into
pop
shrl
mov
cmpsb
loope
fimull
pop
add
mov
testl
or
gs
mov
add
inc
dec
repnz
mov
rcrl
push
inc
fidivrs
daa
adc
inc
inc
pusha
jne
cltd
das
cmpsl
jb
je
enter
iret
test
sbb
adc
dec
jne
movsl
stos
insb
shrl
cmp
inc
pop
push
lret
repz
fs
inc
insb
add
inc
pop
stc
shrb
jp
mov
sub
pop
sahf
orb
jl
sub
sbb
frstor
data16
mov
mov
add
jecxz
mov
push
dec
sarb
dec
inc
lods
leave
ret
mov
mov
xchg
adc
and
insl
ret
std
lahf
mov
loopne
mov
out
mov
popa
aam
xchg
push
and
or
cmp
aas
faddl
adc
fsubrs
das
or
ss
cmp
jl
lahf
pop
mov
jne
xor
es
or
testl
add
add
mov
arpl
adc
into
in
pop
test
and
mov
sub
sbbb
adc
mov
das
mov
fidivl
cmpxchg
adc
push
mov
jb
xchg
stos
ds
nop
jno
aam
int
pop
jg
xor
andl
mov
sub
testl
daa
xor
mov
or
stc
or
adc
push
adc
inc
pop
mov
js
loopne
es
add
stos
mov
call
sub
ss
adc
mov
lret
fsubrs
and
leave
mov
mov
inc
imul
sub
mov
xchg
push
dec
mov
sti
jno
inc
aas
pop
jbe
push
mov
cs
popf
cltd
cld
mov
mov
in
clc
popf
mov
xchg
xlat
ret
in
jns
pop
pop
out
mov
cs
in
fildll
les
sbb
test
cmp
pop
jecxz
daa
aaa
sub
ret
dec
sub
jl
pop
addr16
add
imulb
rep
push
gs
lea
aaa
insl
xchg
js
mov
mov
pop
arpl
cmpsb
leave
xor
jbe
pushf
orl
addb
xor
cmp
push
mov
jae
xor
xchg
cmpsb
bound
xchg
jae
pop
xor
xor
test
loope,pn
pop
rcr
sbb
in
mov
sub
push
sub
adc
cwtl
lock
xchg
xor
imul
mov
add
les
fwait
push
fsubrp
cmpl
iret
pop
mov
les
sbb
or
add
mov
cmp
test
sti
std
cvtps2pi
xor
loop
pushf
mov
add
xor
int3
xor
xchg
jecxz
cmp
rorb
pop
or
sbb
mov
movsb
js
fnstcw
jg
ret
leave
fiaddl
and
sub
ret
daa
xchg
popf
ret
and
test
bound
cmp
dec
mov
dec
movsl
repnz
xchg
inc
cmp
repnz
mov
adc
push
adc
or
insb
out
and
or
cmp
mov
fcoml
and
cld
cwtl
cmpsb
mov
out
cmp
dec
in
repnz
movsb
cmp
adc
int3
push
mov
rorl
out
test
or
loope
xor
ja
or
fdivrl
into
dec
int3
and
mov
lods
test
mov
in
in
pop
and
lds
inc
dec
movsl
orl
nop
test
jne
mov
push
add
js
in
inc
mov
or
sti
inc
lcall
and
pop
xchg
or
iret
cmc
sbbl
adc
aaa
cmp
mov
push
jae
sbb
ret
data16
xchg
sbb
inc
xor
lret
mov
add
jno
jnp
push
mov
push
xlat
test
out
mov
pop
mov
mov
pop
fdiv
cmp
or
xchg
insb
xor
inc
repz
xchg
scas
sub
fxch
and
sbb
sbbb
jmp
xlat
ss
imul
test
ret
or
addr16
imul
add
sub
pop
mov
lahf
pop
mov
sahf
pop
adc
pushf
xchg
jmp
packsswb
mov
push
lods
dec
add
bound
xor
cmp
xor
xchg
dec
xchg
insl
jns
xchg
addr16
div
lea
je
andb
or
rcl
stos
icebp
icebp
jge
push
pop
inc
icebp
dec
das
pushf
push
data16
add
sahf
mov
cmpsb
mov
popa
ret
jnp
pop
lret
or
fs
push
lea
aad
loop
daa
add
leave
add
mov
aad
scas
pop
orb
aam
mov
cmpsl
aad
iret
add
cmpsb
inc
adc
inc
scas
mov
sbb
ds
test
sahf
les
or
jl
es
nop
imul
daa
lock
cmp
cmp
dec
dec
shrb
fwait
je
jne
sub
cld
push
dec
sub
jmp
or
dec
mov
test
fwait
pop
xor
stos
mov
test
pop
mov
int3
lock
sbb
shrb
pushf
lods
pushf
jne
sub
mov
cld
push
xchg
pushf
adc
ljmp
leave
movsl
mov
stos
call
xor
mov
insb
xchg
push
rcrl
mov
cmp
dec
sti
shrl
std
js
jne
mov
push
mov
std
fdivl
icebp
into
mov
or
in
xchg
sub
loop
cmp
add
push
out
iret
sbb
xlat
hlt
inc
aam
or
push
and
inc
test
inc
inc
mov
je
cmc
notl
loop
mov
xor
shr
inc
sbb
adc
fnstenv
cmp
testl
aaa
xchg
aaa
stos
dec
fnsave
push
push
int3
jg
jns
in
push
repnz
adc
pusha
push
push
ret
imul
push
add
push
out
clc
out
mov
sub
popf
sub
mov
ficoml
fmull
push
ljmp
cmp
mov
jge
jns
adc
sub
mov
cli
lea
cmp
cmp
xlat
insl
add
cmpsl
inc
and
loopw
lds
add
xor
repz
and
dec
lcall
movsb
push
aaa
pusha
testb
daa
lea
dec
jno
push
loop
inc
fildl
out
insb
aad
push
sub
pop
xor
or
push
ljmp
jno
add
push
jbe
add
mov
mov
mov
fwait
int
int
lds
addr16
cltd
test
mov
hlt
push
lods
push
fs
lret
cmpsl
xchg
jns
xchg
push
jmp
jl
jo
jl
enter
ds
pop
out
mov
jmp
ljmp
jns
mov
popa
xchg
imul
mov
inc
pop
arpl
aam
push
sbb
movsl
lea
jmp
xor
ss
push
jge
sub
fistpl
pop
mov
mov
out
or
rorl
mov
aad
jmp
mov
jle
mov
inc
mov
xchg
mov
sbbb
js
inc
jmp
sbb
fsubr
shrb
pop
jae
cmpsl
xor
mov
jle
add
pop
adc
popl
push
lods
int3
repnz
mov
lahf
push
popf
xchg
lds
or
imul
push
int3
pop
mov
data16
cld
in
test
adc
sub
or
das
dec
mov
jl
push
je
enter
inc
outsl
in
mov
jmp
mov
mov
cmpl
pushf
fwait
xor
and
idivb
nop
xor
xchg
stos
loop
mov
xchg
xorl
dec
bound
jp
mov
xchg
xchg
jmp
test
cmpsb
mov
in
test
sub
cltd
mov
notb
cmc
fnstcw
in
pop
nop
xor
mov
inc
pop
xchg
fcmove
ret
cmpsl
leave
push
cmpsb
cmc
out
pop
sahf
cwtl
dec
mov
sti
sbb
dec
sbb
stc
enter
test
mov
pop
fisttps
cmpsb
in
sub
jno
mov
clc
or
stc
mov
dec
mov
dec
ds
sbb
cld
imul
or
outsl
add
or
jl
mov
adc
mov
dec
pop
mov
dec
sbb
inc
sbb
sahf
pop
mov
jnp
or
sbb
mov
in
insb
subb
sub
xchg
adcb
dec
inc
mov
lcall
mov
add
cmpsb
mov
adc
mov
fcmovnbe
mov
rclb
loope
mov
les
rep
sbb
enter
imul
jecxz
mov
push
das
enter
add
out
arpl
xor
or
pop
push
stos
xchg
lods
mov
and
loop
or
lcall
cld
mov
xor
pop
adc
mov
pusha
mov
into
cmp
jle
sbb
mov
mov
rclb
pop
xchg
ja
bound
rorl
in
jge
push
cmp
inc
sti
mov
pusha
or
mov
pop
test
adcl
mov
insb
mov
arpl
cli
push
jmp
sub
xchg
scas
stos
inc
loope
jg
into
push
leave
pusha
cmp
out
rorl
dec
jmp
std
test
scas
mov
or
sub
mov
dec
push
shlb
inc
cwtl
test
mov
pushf
sub
in
mov
dec
rcll
push
insb
mov
and
xchg
mov
and
and
out
sub
call
mov
iret
pop
cmc
add
jge
lcall
repz
push
cmp
xor
fstl
std
pop
test
fiadds
ret
sub
or
mov
xor
outsl
cmp
pop
repz
int
sbb
cld
mov
call
out
cmc
scas
ret
arpl
jmp
xchg
jle
icebp
inc
fisubl
inc
pop
test
jbe
lret
bound
push
ljmp
dec
gs
mov
gs
inc
push
cmp
sbb
sbb
ret
nop
mov
jae
imul
shll
add
sti
dec
mov
idivb
jmp
pop
sbb
mov
sub
outsl
loop
or
or
outsb
xor
and
adc
pop
pop
or
test
data16
mov
and
std
mov
icebp
bound
das
ret
lds
pop
cmc
mov
loopne
cltd
xchg
outsb
idivb
mov
sbbl
out
negb
add
divb
fsubl
mov
fdivp
jno
mov
mov
cmp
repz
xchg
dec
cmp
daa
idiv
loopne
push
push
xchg
sbb
and
push
jno
xor
and
push
leave
push
xchg
pop
lock
into
in
f2xm1
xchg
adc
xchg
imul
sub
pop
nop
xchg
xor
mov
je
cmp
xchg
pop
ss
lods
incb
lret
aam
mov
inc
mov
jns
mov
xchg
adc
mov
fsubs
dec
inc
popa
arpl
xchg
data16
jae
incb
cmp
push
daa
into
fwait
xor
insl
jo
imul
test
scas
rcr
adc
and
push
push
dec
xchg
dec
inc
dec
pop
jo
icebp
enter
movb
push
mov
push
ja
movups
cwtl
ret
cmp
out
test
out
mov
ret
pop
outsb
inc
push
and
pop
mov
aad
lods
cmpsl
ds
dec
push
cmc
shlb
adc
lahf
add
lods
fadd
ret
decb
cmpsl
inc
cwtl
das
jb
fdivrs
bound
xchg
push
sub
cld
das
pop
dec
add
ret
div
mov
imul
int
sub
pop
push
push
enter
dec
ds
lret
pop
aam
inc
xor
leave
and
push
xor
dec
jno
xor
fnstenv
and
xlat
data16
push
stc
jb
out
inc
push
pop
repz
inc
xor
in
lcall
sti
out
sbb
xchg
xor
lock
adc
xchg
scas
inc
shrl
subl
dec
sarb
test
pop
dec
dec
into
aaa
out
add
shrl
addr16
or
movsl
sbb
pop
xchg
sub
push
sub
push
jl
dec
sbb
out
mov
pop
sarl
mov
icebp
insb
add
push
fstl
test
aas
mov
int
mov
mov
sub
in
add
adc
xor
daa
test
sub
cli
pop
mov
sbbl
xchg
or
mov
adc
sub
push
xor
in
xor
fmull
int
sbb
push
hlt
jae
out
mov
cmc
cli
int
rcll
lcall
sbb
pop
pop
orl
arpl
xchg
adc
in
mov
insb
add
pop
sub
icebp
push
mov
dec
adc
leave
jp
dec
outsl
inc
sub
fidivl
adc
mov
in
lods
push
mov
hlt
test
loopne
sbb
divl
push
push
sbb
jb
nop
inc
mov
inc
jae
sub
push
push
popf
outsb
or
and
add
inc
nop
adc
movsl
cmp
jmp
test
sbb
dec
test
stos
inc
jecxz
lcall
cmp
repz
shrl
jo
mov
add
or
ds
ret
outsb
sub
cltd
add
jle
mov
push
cmp
sub
bound
adc
push
in
mov
mov
dec
pop
in
mov
scas
jae
push
imul
cld
sti
mov
and
leave
vgatherdps
ret
xchg
sti
xor
test
or
jns
mov
repz
sbb
push
lock
imul
lods
faddl
push
mov
fidivs
mov
mov
mov
mov
sbb
add
lret
dec
mov
add
imul
setl
dec
adc
push
loope,pt
xchg
adc
icebp
fcomps
sahf
xchg
jecxz
xor
cs
push
cwtl
inc
add
xor
mov
lea
outsb
mov
outsl
fs
push
sbb
in
aas
push
mov
aad
outsl
jnp
sub
pop
push
nop
imul
shrl
and
mov
mov
scas
sbb
lret
cmp
testl
fcompl
mov
sahf
mov
in
test
aaa
mov
popa
jnp
fisttpl
leave
pop
jmp
stos
stos
mov
shrl
jno
lret
scas
vpavgb
xor
push
jge
mov
popf
jae
repnz
xchg
test
mov
push
test
scas
xchg
lock
cwtl
shrb
adc
or
fidivs
subb
sub
jnp
shl
dec
add
add
pop
add
adc
inc
pop
movsb
mov
loope
mov
cmc
push
ss
fcoml
inc
mov
adc
into
or
das
adc
xor
sti
lret
pop
mov
leave
shl
xorb
mov
pop
jne
jmp
pop
xchg
in
enter
imul
shl
or
jg
divl
dec
cld
stc
adc
sub
mov
dec
xchg
adc
dec
dec
cwtl
in
mov
jne
jg
je
popf
sbb
dec
aaa
sbb
cmp
lock
ret
xchg
xchg
aaa
mov
add
xchg
or
cmp
aaa
xorb
pop
sbb
dec
pop
adc
gs
sbb
inc
leave
push
lods
jmp
stos
mov
adc
pop
hlt
out
push
xchg
push
add
dec
push
imul
faddp
jnp
divb
inc
in
xchg
les
inc
cmpsb
in
scas
push
dec
mov
repz
ss
sbb
sahf
xchg
push
in
cmp
adc
mov
dec
cmc
adc
in
cvtps2pi
inc
pop
js
dec
out
jns
lock
mov
popl
push
aam
inc
pop
mov
std
xchg
cld
loope
insl
cmp
iret
adc
push
and
ss
inc
out
xchg
stos
out
add
cmpsl
inc
push
andl
mov
inc
in
mov
imul
cmc
pop
adc
outsl
inc
and
mov
ss
xor
inc
push
bound
inc
mov
jp
imul
inc
mov
mov
jo
shll
fs
int
aas
shr
jnp
pop
js
call
mov
xchg
test
push
xor
fxch
cltd
addl
pushf
sbb
mov
sub
outsl
adc
mov
push
ret
pop
mov
push
loope
pop
out
sub
and
mov
pop
aas
jae
insl
outsl
dec
dec
ret
mov
dec
mov
push
jl
xor
lahf
push
jbe
cmp
outsb
push
ret
xor
jo
push
dec
mov
mov
icebp
inc
inc
sub
fidivl
ffreep
insb
pop
jae
add
inc
jae
push
ljmp
inc
enter
xchg
xchg
pop
dec
ret
loopne
jg
ljmp
xor
cmp
test
or
lods
lds
insb
pop
jbe
xchg
push
daa
repz
jns
out
push
jne
mov
inc
mov
lahf
mov
adc
cld
mov
sbb
sub
daa
data16
test
sub
popa
or
ja
cli
and
xchg
stos
push
inc
andb
pop
out
movsl
out
mov
cmp
popa
add
sbb
rolb
mov
inc
mov
lds
inc
dec
hlt
and
lcall
pcmpgtb
mov
mov
mov
stc
mov
test
ja
ret
int3
mov
jbe
ds
sbb
enter
pop
imul
push
nop
popa
mov
mov
lcall
sbb
mov
inc
fwait
mov
cmp
fcomps
hlt
mov
lret
mov
fdivr
cmp
push
sub
push
mov
or
mov
rorl
jge
in
pusha
sub
xor
cmp
lahf
dec
outsl
out
jb
popf
sbb
push
ljmp
stos
shlb
or
sub
subl
sub
mov
popa
and
movsb
fcomps
mov
mov
jns
notb
sub
push
and
mov
dec
loopne
aam
aaa
adc
aaa
pop
pusha
js
mov
mov
or
cmpsl
and
sbb
sbb
les
push
js
pop
push
imulb
mov
mov
push
sub
pop
call
or
inc
xchg
dec
add
call
pop
sbbl
pushf
dec
shll
fldenv
add
dec
jb
hlt
mov
sbb
or
xchg
or
cltd
mov
in
pusha
xchg
sub
fwait
inc
iret
adcb
mov
ret
adc
rolb
adc
subb
push
test
icebp
mov
clc
xchg
test
bound
sar
int
adc
imul
dec
ss
icebp
pop
inc
pop
dec
movsl
sbb
adc
cmp
push
sbb
and
dec
test
in
push
pop
push
pop
fisttpll
pop
insl
lea
and
scas
scas
mov
push
imul
push
imul
sbb
mov
fs
fsubr
jp
ret
aaa
lret
push
cs
adc
push
dec
test
sbb
mov
out
mov
into
xchg
arpl
jnp
jge
stc
insb
sub
jbe
sti
jge
cli
cmp
sbb
cmp
cmp
aad
iret
push
pop
fdivl
test
inc
scas
loopne
shrl
js
push
xor
adc
mov
dec
movsl
inc
jb
inc
pop
popa
lods
jle
mov
push
mov
je
negb
jmp
stos
icebp
jl
jb
mov
imul
or
mov
gs
dec
jl
add
lods
xchg
push
aam
jo
and
mov
stos
nop
dec
pop
clc
lret
jo
shlb
jp
push
call
js
add
cmp
loopne
adcb
sub
push
push
pop
in
xchg
ja
lods
test
fwait
sbb
test
shl
loope
fdivrl
inc
test
mov
icebp
mov
aad
leave
inc
mov
and
lds
xor
sub
sti
pusha
cmp
pop
jg
jl
add
mov
add
and
push
dec
inc
stos
movsb
cmp
pop
jae
andb
rorl
add
call
cmp
jge
mov
and
outsl
add
jne
int3
mov
sahf
iret
aad
push
fstpl
push
mov
xor
sti
pop
fdivl
test
sbbb
lods
lock
xor
lock
mov
sbb
inc
mov
lahf
ss
mov
icebp
push
stos
inc
into
hlt
mov
fisttps
fidivs
enter
or
cltd
and
pop
xor
aas
xchg
ret
nop
nop
daa
add
insl
add
and
shrl
cwtl
cmp
in
and
or
movsl
dec
loop
repz
sbb
dec
les
sbb
pop
pop
pop
dec
loope
jl
sub
or
cmpsl
mov
mov
fmull
std
cmpl
js
rorl
repz
ds
add
sarb
add
cmpsb
mov
xchg
ror
jnp
pop
mov
cmpsl
movsl
js
loopne
xor
loop
sarb
mov
and
mov
and
inc
sti
xchg
jns
pusha
notl
mov
outsb
jle
xor
and
stc
sbb
push
dec
es
cmp
mov
mov
aam
pop
cmp
jno
clc
repnz
test
insl
adc
lahf
add
cmp
mov
jbe
rorb
movsb
cmp
sub
cmpsb
ret
mov
and
jmp
movsb
mov
testl
leave
ss
xchg
push
mov
stc
sar
add
and
rclb
pop
loopne
cwtl
lods
xchg
mov
daa
xchg
ss
adc
imul
rolb
mov
mov
aaa
fisubs
add
ljmp
data16
out
jge
ja
adc
cli
or
push
and
aas
or
lcall
and
sahf
mov
cld
inc
test
inc
add
lcall
cmpsb
jno
mov
shll
loope
popf
adc
mov
pop
std
popf
mov
les
push
xorb
out
mov
mov
jnp
fsubrp
mov
mov
jb
push
push
movsb
dec
imul
push
dec
andl
shll
mov
aam
int
sbb
pop
mov
cmp
mov
cld
outsb
aam
loope
and
clc
mov
decl
das
ljmp
xorl
enter
inc
ss
lret
movsl
inc
fldt
inc
push
mov
dec
and
push
inc
push
dec
sbb
xchg
sbb
jno
icebp
mov
pop
and
xchg
imul
cs
jle
pop
lret
push
jle
pop
xchg
ja
test
lret
imul
sub
stc
mov
cmp
push
jo
dec
mov
jl
nop
and
cmp
outsb
scas
pop
stos
jns
shlb
mov
jno
push
dec
inc
jbe
or
mov
xchg
out
jbe
or
aas
aas
call
shrl
out
imul
scas
push
dec
sbb
mov
dec
fcoml
xor
insl
jnp
addr16
sub
cld
push
stos
lods
in
insb
mov
loope
in
mov
push
xor
int
xchg
mov
jae
pop
nop
sbb
orl
test
push
cld
orl
leave
pop
lret
ljmp
aad
push
cs
push
loop
push
mov
cmpl
or
mov
daa
push
call
or
fisubl
add
mov
test
dec
fisttps
sbb
fwait
in
icebp
add
push
imul
repnz
mov
decb
aam
sbb
clc
mov
xchg
cwtl
daa
lahf
push
call
int3
fdivl
inc
js
add
movsb
int3
testl
jmp
push
sub
lock
in
jb
insb
push
mov
jns
mov
les
repz
movsb
xchg
pop
jne
push
jns
and
aas
sahf
xor
inc
xchg
stos
pop
dec
js
clc
and
fimull
adc
sbb
cmp
jle
cmpsb
jno
inc
add
js
pop
push
mov
pop
mov
out
push
fsubr
lahf
mov
dec
fdivrl
test
jno
jno
in
loope
xchg
mov
enter
lds
mov
add
mov
lods
sbbb
and
lea
int3
mov
movsl
xchg
adc
mov
inc
fists
sti
jbe
jne
fstl
rcll
cwtl
and
mov
push
stos
sub
testl
or
decl
pop
loope
ljmp
push
mov
out
ret
dec
xchg
leave
mov
lahf
decl
sarl
jb
add
cmp
rcll
add
enter
movsl
push
shlb
adc
notl
jle
mov
or
jg
in
xchg
ja
sbbb
cmp
lcall
push
incb
xchg
push
mov
lods
in
les
xchg
jns
dec
loope
push
bound
cmp
ljmp
pop
jne
mov
cmpsb
mov
gs
je
int
cmovne
push
cmc
sbb
add
stc
or
cld
scas
and
js
ss
mov
test
mov
divb
and
or
and
pusha
pop
insb
jle
mov
xchg
ret
cmp
rcrl
cmp
jo
jecxz
es
push
fldenv
cwtl
lods
gs
out
pusha
stos
fimuls
iret
mov
ljmp
pop
jecxz
jecxz
mov
in
xor
pop
js,pn
sbb
sub
cmp
pop
popf
adcb
test
stos
sbb
mov
loop
inc
in
add
out
inc
jnp
lcall
in
stos
xlat
adc
dec
repnz
mov
mov
xchg
mov
cld
xchg
int3
push
inc
shrb
cmp
mov
xchg
and
lcall
and
jg
jb
loopne
sbbl
fld
aam
sub
pop
aaa
sub
leave
int
movsb
stos
jne
xchg
mov
mov
sbb
out
mov
cmpsl
adc
xchg
stos
pop
inc
in
adc
scas
and
sub
test
hlt
mov
inc
mov
mov
daa
dec
add
in
lods
mov
mov
aad
push
mov
mov
jp
inc
push
or
xchg
testb
jbe
cmpsl
and
fisttps
cmp
sub
das
imul
ss
add
sbb
stos
mov
aad
add
mov
aam
mov
or
sub
jge
ret
icebp
mov
pop
loope
sbb
xchg
rcrb
jecxz
lods
cli
test
jnp
mov
into
xchg
cmp
rol
out
ret
and
push
les
lds
adc
or
iret
sbb
push
add
push
mov
out
and
sahf
push
and
push
stc
je
add
xchg
ss
clc
jle
ljmp
cwtl
fcmovnbe
xchg
testb
jge
jecxz
lock
cmp
nop
daa
pusha
push
dec
inc
mov
mov
inc
fdiv
adc
cmp
pushf
sbb
push
push
or
lods
add
pop
ja
cmpsl
popa
clc
mov
ds
stos
jg
xchg
and
xchg
cmp
dec
pushf
pushf
aaa
imul
fidivrl
or
imul
and
or
jo
adc
jle
mov
fs
mov
or
adc
mov
lret
push
mov
xor
lods
mov
jbe
sbb
push
xchg
push
out
xchg
cmp
adc
int
iret
leave
pop
xchg
push
fs
jg
jb
rolb
sbb
dec
and
sbb
repz
divb
xor
lock
rorb
ds
inc
stos
lock
rcrl
clc
mov
sub
dec
in
mov
sbb
shr
loopne
mov
sub
lahf
mov
sub
insl
inc
scas
and
daa
pusha
idivl
daa
push
sahf
test
lcall
or
std
scas
mov
in
in
fwait
push
jmp
and
rcr
clc
movsl
push
push
iret
loopne
in
sbb
outsb
fstps
jb
add
test
adc
jecxz
add
mov
movsl
mov
mov
sbb
outsl
pop
push
repz
mov
clc
or
cmpl
scas
cmp
fs
xor
out
xchg
or
mov
lods
mov
nop
lods
xchg
stos
dec
or
add
dec
and
shrb
or
xchg
lods
or
lea
stos
adc
xchg
fwait
xor
lret
fadds
or
lods
mov
ror
jg
jne
fimuls
or
pop
data16
dec
push
fnstsw
gs
loop
push
popf
lahf
lods
flds
stc
popf
pop
cmp
cs
cmp
into
js
mov
add
inc
out
movsl
je
dec
data16
dec
inc
xchg
mov
fildl
iret
and
js
add
bnd
pop
movl
push
ljmp
pushf
cmp
rolb
and
inc
inc
fdivl
push
cmp
ss
xchg
addr16
push
std
lea
mov
testb
lret
mov
decl
rcl
std
aaa
mov
pop
repz
icebp
sbb
aaa
pop
mov
lret
xchg
mov
cli
jne
mov
jle
jecxz
mov
lods
test
inc
enter
inc
iret
cli
addr16
and
push
sbb
xchg
lahf
sbb
push
les
jge
mov
or
xchg
xchg
lahf
push
or
insl
leave
sbb
add
mov
cmp
dec
fs
addr16
sbb
mov
cmpsl
jecxz,pt
scas
mov
dec
inc
call
jl
je
jae
adc
enter
ds
pop
add
add
add
mov
sub
popf
stos
scas
or
jbe
mov
fidivrs
dec
outsb
stc
nop
mov
adc
addl
sbb
mov
pop
pop
and
inc
lock
dec
mov
adc
adcl
xor
mov
lods
dec
or
addl
repz
loopne
out
xchg
jg
mov
popa
xor
shl
pop
push
push
lea
lahf
lods
push
push
mov
icebp
jno
or
lret
inc
fwait
jns
pop
push
xchg
pop
in
ja
xor
shl
xchg
sub
lcall
and
xchg
ja
orl
lods
ret
mov
nop
add
faddl
cmc
mov
cmp
popf
movsb
enter
dec
and
cmp
stos
mov
ljmp
and
mov
xchg
push
mov
mov
inc
or
cmp
xchg
jbe
loop
aam
mov
das
jge
mov
adc
inc
bound
and
mov
fbstp
jno
mov
cmc
in
jnp
aam
add
pusha
xchg
addr16
pop
mov
test
mov
jecxz
adc
mov
xchg
mov
jnp
sub
xor
repnz
andb
je
fnstsw
cld
aas
int3
jecxz
sbb
xchg
add
iret
mov
and
sti
dec
repnz
cmp
dec
das
jns
cmpsb
xor
hlt
mov
and
dec
es
mov
test
xor
stos
repnz
sbb
ficompl
sub
dec
test
in
sbb
fisttpl
ss
or
pushw
cmpsl
fs
xchg
scas
jb
repz
fistpl
insb
add
mul
jns
sub
out
lea
stc
stos
lods
in
test
stc
push
fildl
clc
pushf
push
push
popa
cmp
shll
scas
cmp
testb
cltd
mov
and
cmc
adc
adc
or
jle
adc
jg
nop
jge
clc
cmpsl
insl
jp
cli
stos
dec
mov
in
or
adc
lret
pop
dec
sarb
mov
fwait
cmpsl
or
push
icebp
push
mov
negl
xor
arpl
shll
lret
shll
cmp
aaa
and
cmp
add
stc
dec
fbld
sti
mov
fstpt
int3
xor
push
out
hlt
iret
push
loop
push
mov
or
xchg
mov
cmpsb
cmp
mov
repnz
jmp
ret
pop
mov
push
loope
add
out
imul
ss
cmp
or
fistl
push
mov
out
mov
dec
and
lods
and
adc
rorb
adc
lcall
lods
sub
test
jns
inc
mov
stc
clc
lret
xchg
mov
sbb
nop
xor
jb
aad
popf
xor
jle
out
mov
call
sbb
mov
or
add
pop
mov
bound
rclb
out
push
mov
fidivs
ffreep
jecxz
mov
stos
fnstsw
ss
lods
jmp
fnstenv
decb
cli
imul
xor
jo
ljmp
in
fldcw
dec
int3
insb
sub
or
sub
pop
rcrl
sub
mov
mov
cmp
fwait
mov
daa
popa
dec
mov
repz
ds
jns
ret
in
fcomp
jb
fldcw
data16
dec
pop
pop
repz
cmp
sub
xchg
xlat
sub
imul
fwait
xchg
mov
sub
pusha
ljmp
lods
lods
mov
lret
cmc
stos
and
test
push
or
leave
pop
inc
lcall
inc
mov
aas
enter
nop
push
cmp
or
xor
jecxz
movsl
xchg
pop
and
push
pop
mov
xor
sbb
mov
xor
and
xchg
test
sahf
jg
lock
pop
cli
mov
ret
hlt
adc
enter
xchg
xor
lcall
out
or
mov
xchg
add
mov
fidivs
mov
and
rcll
iret
stc
sub
std
or
sbb
dec
push
test
push
jge
dec
push
sahf
push
adc
xor
jne
js
sbb
sub
mov
cmp
xchg
test
fucomp
xchg
fsubr
repz
xor
mov
hlt
mov
jne
mov
negl
das
lret
mov
cmp
ja
shlb
fidivrl
push
lahf
mov
je
jmp
out
xchg
adc
xchg
push
mov
out
sbb
or
add
outsl
in
dec
stc
mov
xor
dec
xor
pushf
test
sub
jae
jo
xor
push
loop
out
ss
and
psrad
push
test
inc
cmovle
jge
or
mov
loopne
mov
mov
cld
push
push
shll
inc
into
movsb
dec
in
fwait
jge
addr16
sub
and
mov
xlat
repz
ja
out
mov
xchg
jp
adc
jecxz
push
cltd
je
jno
es
mov
sub
inc
xchg
cmp
sub
int
sbbl
push
mov
inc
add
xor
xchg
push
sahf
push
repz
lods
and
or
pop
int3
add
js
jne
fimull
loope
add
movsb
outsb
adc
push
lret
mov
mov
sub
aad
and
adc
dec
adc
call
ds
cmpsl
xlat
add
test
in
cmp
mov
addr16
xchg
pop
insl
test
loope
popf
xor
imul
cmpsb
mov
cmc
sub
cltd
xchg
pop
enter
cltd
and
push
cmpsl
adcb
scas
test
sbb
shlb
or
xchg
movsb
jmp
test
dec
push
inc
push
sub
arpl
popa
mov
data16
push
out
pop
out
xor
and
add
scas
xor
add
adc
in
mov
mov
lods
jo
inc
enter
call
mov
cwtl
stos
aaa
int
jp
xor
inc
pop
pop
and
or
xor
outsb
les
test
stos
jge
outsl
daa
inc
cltd
cmp
and
mov
mov
inc
pusha
dec
repnz
movsb
mov
push
or
aaa
out
mov
fs
mov
xor
jg
stos
mov
pop
add
movsl
cmc
mov
cmp
add
mov
push
jl
adc
movsl
xor
jbe
or
inc
fidivs
das
cltd
xor
testb
aad
mov
cmpb
xchg
cmp
test
repz
shr
cltd
add
jns
mov
inc
push
out
adc
adc
xor
jge
shlb
inc
push
inc
lds
addl
fisttpl
daa
cmp
lret
pop
adc
pop
jb
lret
sub
shrb
inc
jmp
mov
inc
push
lds
out
sbb
push
and
or
cmpsl
dec
cmp
cmc
or
mov
push
fidivs
or
jne
mov
in
test
cmp
push
mov
pop
movsl
ljmp
xor
es
dec
bound
mov
lods
or
insl
mov
pop
leave
or
push
insl
outsb
xchg
push
lods
dec
xchg
push
clc
pop
dec
xlat
dec
xchg
xor
loope
in
cmp
arpl
mov
icebp
mov
test
out
jp
insb
xchg
in
and
dec
adc
cmc
nop
mov
aam
add
lret
mov
jb
in
and
in
mov
push
push
push
pop
or
cli
repnz
cltd
jecxz
xchg
adc
inc
sub
dec
and
into
push
addr16
cmpsb
push
dec
xchg
cld
jg
pop
jo
out
shr
sti
cmp
negb
sub
jp
movsl
mov
lock
sbb
pop
ja
stos
cmp
pushf
xlat
and
add
jg
and
insl
lods
inc
jg
jno
or
mov
lds
mov
cltd
adc
pusha
ljmp
jb
out
faddl
mov
enter
lods
cli
aam
stos
mov
mov
aam
inc
es
cmpsl
out
mov
and
dec
sub
dec
xchg
jle
mov
test
add
add
fisubrl
lahf
test
mov
pop
rcll
test
jg,pt
add
das
inc
popa
inc
andb
ds
rcll
shl
mov
call
iret
push
loope
inc
sub
cmpsl
out
xor
push
out
add
sbb
adc
jp
or
or
xor
dec
xchg
sub
push
push
mov
inc
je
xchg
xor
mov
add
mov
inc
fldt
jno
cmp
mov
es
mov
jl
rcrl
movsl
pop
std
inc
and
test
adcb
jo
lahf
cld
and
cmp
xor
sub
cmp
lret
popf
es
test
adc
das
stos
dec
loope
das
and
and
cltd
push
xchg
adc
or
imul
cmp
das
ds
imul
jge
enter
pushf
stc
cld
xchg
push
rcll
lea
jno
xor
or
push
loopne
mov
jae
xor
inc
xchg
inc
mov
fisubl
ret
bound
and
push
inc
add
sti
xchg
xchg
jne
mov
push
jne
movsl
insb
push
adc
xchg
mov
data16
inc
and
popf
dec
dec
fistps
mov
sub
fsubrp
push
cmpsl
pop
out
ret
mov
dec
mov
loopne
in
adc
xchg
fdivrs
in
push
mov
jne
jp
xchg
fsubs
subb
pop
imul
insl
stc
in
mov
scas
out
add
cmp
push
fdivrp
mov
fildl
push
sbb
std
mov
jb
xor
sete
adc
xor
imul
mov
leave
xor
out
xchg
mov
xlat
icebp
cwtl
inc
sub
xchg
add
inc
and
xor
fists
push
or
jae
pop
cmp
add
add
call
outsl
mov
sbb
rorb
js
mov
cmp
pushf
call
aaa
sbb
and
pop
push
out
xor
rclb
lea
in
inc
sbb
movsl
mov
lahf
mov
or
mov
loopne
mov
cli
mov
add
popa
movl
mov
ljmp
movl
arpl
test
orb
cmp
shll
pop
add
jl
dec
les
dec
std
popf
out
adc
ljmp
out
rcrb
jle
sbb
pop
mov
lock
cmp
fcmovu
out
test
out
push
popf
jmp
jbe
faddl
jl
pop
fmull
mov
fs
lock
stc
xor
fisubl
lock
fimuls
dec
fwait
ja
int
lahf
push
fcmovbe
pop
insb
popa
and
jg
add
sub
mov
mov
daa
lret
mov
insb
pop
jmp
adc
sar
adc
sahf
xlat
sub
or
xor
inc
adc
call
xchg
enter
mov
aaa
scas
xor
sub
push
jno
cmp
mov
or
addr16
rcrl
dec
hlt
test
lret
out
mov
xor
scas
jne
loopne
rcrl
jmp
inc
fcompl
jge
push
das
data16
mov
sbb
sbb
inc
cmp
std
mov
test
jg
hlt
mov
pop
adc
nop
mov
xlat
push
loopne
or
or
push
rcrb
int3
sub
add
push
xor
scas
inc
loop
in
xchg
inc
clc
inc
sub
lahf
sbb
dec
mov
ss
sahf
sub
and
sub
sarl
cmp
movsb
sti
lods
popf
mov
mov
jnp
push
aad
roll
xchg
insb
push
xchg
or
nop
jp
fmull
fwait
sbb
xlat
pop
xlat
cwtl
clc
repz
push
jg
addr16
ficoml
mov
int
jnp
jbe
mov
cmc
xchg
cmp
jge
xor
mov
pop
jae
popf
inc
inc
daa
and
sbb
push
mov
lods
sti
ficompl
int3
mov
mov
jl
mov
movsb
out
fs
push
or
push
ds
arpl
sub
or
push
or
mov
dec
into
gs
pop
xor
or
adc
div
dec
adc
push
cltd
push
fnstenv
add
push
push
imul
mov
cwtl
outsl
cmpsb
fidivrs
aaa
pop
jo
cmp
lods
push
adc
call
or
bound
test
sub
and
aad
xor
cmp
xor
cmc
adc
cmpl
dec
mov
adcb
in
and
sbb
mov
dec
pop
push
ljmp
cmp
cltd
pop
fsub
jns
sarl
fwait
inc
mov
xor
pop
cmp
mov
stos
xchg
sub
mov
xchg
jle
shlb
gs
push
inc
pop
imul
cmp
jbe
ljmp
imul
sub
adc
add
iret
xchg
loop
push
jmp
into
cmovbe
addr16
or
lcall
sub
sbb
outsl
insl
push
mov
aad
add
xor
xchg
jl
and
sbb
cmp
outsb
jae
sbb
dec
mov
dec
cwtl
test
lds
gs
cmpb
sbb
xchg
fs
cmpsl
cmp
mov
cs
addr16
repz
mov
es
push
xorb
push
mov
ficoml
hlt
mov
jne
pop
xor
arpl
das
or
xor
and
gs
pop
inc
push
jecxz
aam
in
aaa
out
in
dec
sbb
inc
mov
mov
pushw
cmp
lea
xchg
push
sub
pop
ja
and
and
imul
stc
out
mov
xor
xchg
pop
inc
lret
mov
and
imul
push
mov
mov
imul
shl
jb
ss
lcall
and
fs
rol
xchg
sub
subb
movl
push
cmp
outsl
push
add
rcrl
nop
packsswb
gs
cmp
sbb
mov
cld
cmp
dec
push
inc
sahf
xor
out
dec
mov
pop
push
mov
mov
mov
dec
pop
fsubs
imul
movsl
pop
gs
rcrb
adcl
daa
mov
imul
or
rcll
test
mov
sbb
jle
sbb
test
ja
lods
or
dec
mov
gs
cmp
inc
cltd
mov
mov
rorl
mov
xor
dec
push
mov
shlb
iret
inc
pop
fisubs
stos
ret
cmpsl
cli
addr16
repz
fdivs
inc
mov
and
gs
jne
cltd
cmpsl
cmp
cli
rcl
or
cmp
ss
shll
iret
data16
push
test
dec
adc
outsb
sbb
or
outsl
push
pusha
pop
fisttpl
orl
cmp
mov
xchg
vpunpcklbw
out
cld
and
jnp
das
push
clc
xchg
ret
sbb
mov
loopne
inc
adc
cwtl
fwait
push
mov
test
gs
inc
ficoml
in
adc
repnz
outsl
test
cltd
xor
fcmovu
pop
fs
mov
lds
dec
adc
stc
or
cmp
pop
jns
pop
xchg
jle
fbstp
int
ret
int3
mov
mov
pop
push
es
bound
cli
leave
pusha
in
sbb
sub
mov
mov
mov
sarl
enter
mov
pop
cmc
sub
mov
or
mov
clc
mov
scas
cmc
add
xchg
dec
push
mov
das
cmp
push
insl
nop
and
icebp
xor
lods
jb
dec
xlat
dec
sub
pop
xchg
push
and
lea
xlat
pop
pusha
adc
insb
xor
add
ljmp
bound
stos
mov
push
movsl
pop
shlb
add
das
imul
into
mov
lock
loopne
imul
dec
or
fwait
mov
cmp
pushf
sub
inc
xor
mov
push
loop
mov
into
xor
dec
aaa
fchs
push
or
jae
push
cltd
dec
fwait
xor
stc
pop
cmc
les
mov
in
es
mov
inc
test
out
je
dec
fidivrs
push
dec
dec
leave
mov
cmp
out
add
xlat
and
mov
or
daa
xchg
mov
in
dec
scas
mov
aad
xchg
push
idivb
je
adc
es
cmp
aaa
push
pop
repnz
mov
jo
dec
mov
insl
rorb
inc
out
adc
mov
cmp
xor
dec
popl
dec
fwait
pushf
adc
inc
cwtl
cmp
sbb
mov
mov
push
xchg
outsl
js
push
stos
push
mov
xchg
pop
pusha
and
mov
mov
seta
push
jnp
icebp
out
mov
std
jne
outsb
xor
push
cmpsl
and
xchg
mov
test
std
cltd
icebp
movsl
push
and
in
xchg
ret
ret
xor
cmp
dec
imul
mov
lds
insb
inc
push
mov
push
inc
lea
jo
hlt
lret
or
lods
call
pop
test
sub
sar
aaa
into
lock
jae
dec
push
mov
pop
jle
mov
sbb
sub
mov
sarl
lahf
inc
fcomps
adc
cmp
or
and
pop
pop
fisubl
stc
icebp
inc
push
and
pop
fadds
test
sub
loope
xor
jne
push
or
call
insl
mov
jno
inc
scas
pushf
ret
sahf
aas
mov
mov
sub
roll
lds
mov
mov
aad
shr
lods
ss
ret
mov
ja
stos
sub
adc
adc
popa
clc
push
xor
xchg
mov
pop
or
es
mov
mov
pop
mov
jecxz
cmc
xchg
cmp
aas
sahf
pop
jo
dec
lods
inc
shlb
ds
dec
sbbl
lods
jno
test
or
repz
pop
xchg
jo
ret
insl
stos
xlat
mov
loopne
add
xorb
in
imul
xchg
jnp
cli
cmpsb
sbb
insb
loop
or
xchg
dec
add
mov
fwait
iret
jp
cli
sbb
mov
push
repnz
pop
xor
out
leave
pusha
stos
add
or
xchg
fsts
add
test
dec
cmp
lods
mov
jp
mov
jmp
mov
xor
cwtl
adc
mov
pop
add
xor
dec
mov
test
pop
test
push
xor
rcrl
xchg
pop
lds
xchg
pop
movsl
pop
mov
mov
ljmp
leave
test
idivl
idivl
xor
repnz
jle
shrl
jne
mov
aas
aad
fs
sub
mov
mov
fists
clc
or
test
add
sti
lds
push
and
test
mov
inc
jge
outsb
xor
dec
push
push
and
push
arpl
push
fldl
mov
sti
es
shl
sub
xchg
add
mov
repz
sbb
inc
or
je
and
mov
outsl
lods
jp
pushf
or
adc
insb
pop
loop
sub
sbb
movsl
sbb
xlat
xchg
dec
aad
sub
pusha
mov
in
dec
rclb
test
in
shl
mov
dec
or
jecxz
rcrb
dec
loope
mov
xchg
pop
popa
leave
xchg
xchg
sub
ds
cmpsb
test
lods
sti
mov
cwtl
add
xor
leave
dec
cmp
mov
xchg
adc
mov
out
test
out
in
inc
scas
mov
jmp
or
fs
int
jmp
lods
mov
insl
ficompl
push
sbbb
inc
scas
mov
xor
sub
and
stc
sub
lea
xchg
push
lock
sub
inc
push
dec
scas
mov
out
lods
xchg
leave
in
orl
jge
lock
xchg
jnp
cwtl
add
das
push
mov
incb
pop
add
movsl
rclb
rcrb
mov
in
cmp
insb
test
mov
mov
push
test
mov
les
adc
lods
mov
idivb
cltd
mov
cmp
into
rcrl
cs
inc
mov
inc
testl
rcr
mov
push
inc
mov
clc
jmp
daa
pop
in
cmp
call
add
fmull
in
sti
lret
pop
mov
sbb
arpl
insb
popa
popf
xlat
mov
push
aad
dec
pop
stos
mov
lahf
ja
cmp
sbb
movd
dec
dec
cli
push
test
push
pop
push
repz
lret
sarb
pusha
lret
fildll
mov
hlt
inc
mov
daa
test
sbb
xor
ljmp
ds
jo
and
xchg
cmp
adc
pop
adc
mov
fwait
or
fbstp
addr16
ljmp
xchg
add
mov
push
stos
lea
mov
fs
sbb
aam
pop
xchg
mov
push
or
movsb
leave
testl
sbb
jb
add
adc
std
sbb
out
sti
dec
cmp
sahf
lods
sahf
rcrb
add
fnsave
pop
int
vmread
sbb
adc
shll
adc
dec
mov
frstor
iret
add
jmp
movsb
ja
mov
push
push
inc
rcrl
fstpl
js
push
dec
arpl
push
lahf
test
adc
jb
pop
icebp
cmp
ficomps
inc
xlat
ds
repnz
mov
pushl
pop
xchg
or
jg
mov
fdivrs
scas
es
inc
jmp
mov
xor
jo
in
sub
push
or
sub
repnz
jg
lods
fiaddl
mov
rorl
sbb
test
imul
ja
push
mov
repnz
mov
sbbb
cltd
in
inc
sahf
xchg
mov
cmp
xor
mov
es
test
call
xchg
sub
out
rorl
dec
mov
xor
aam
loop
adc
lcall
dec
mov
or
js
pop
jmp
ljmp
testl
imul
pop
and
mov
lcall
lock
jne
push
je
filds
out
xor
iret
data16
add
daa
inc
fwait
or
adc
stc
cmpsb
xchg
pop
pop
or
and
pop
lret
test
gs
inc
or
les
xchg
add
cwtl
inc
pushw
adc
loop
pop
xchg
lahf
push
xor
sbbl
mov
add
jnp
mov
mov
add
inc
xchg
jno
bnd
sbb
test
addl
pop
movsl
scas
dec
outsl
adc
fsub
mov
inc
fsts
jb
test
int
enter
leave
dec
cli
test
jg
adc
sarl
jno
sbb
ficoms
push
jmp
and
or
jmp
push
jmp
movsb
mov
repz
jle
out
jle
jo
pop
xchg
push
sti
fbstp
mov
ljmp
cs
cmp
shrl
aas
ret
test
sub
jno
mov
add
cmp
rcr
mov
loopne
cwtl
stos
shl
or
push
outsb
mov
xchg
scas
rorb
inc
push
outsb
pop
lock
inc
shrb
cmpsb
push
mov
int
sbb
push
adc
lods
pop
sbb
lahf
mov
aad
ljmp
cmp
xlat
jb
lea
rcrb
and
mov
push
lahf
outsb
cmp
jne
push
mov
gs
rcl
pop
or
push
je
jb
aad
push
mov
das
sub
mov
mov
aas
push
out
mov
loope
hlt
adc
lret
in
cmp
xor
sahf
adc
mov
xor
loope
mov
rolb
jne
loop
pop
out
and
xor
sub
pop
sub
dec
fbld
stos
mov
xchg
shll
xchg
inc
mov
dec
xor
xchg
in
int3
push
rorl
push
insb
int
sbb
pop
sbb
repz
inc
loope,pt
daa
and
push
or
bound
dec
add
fiaddl
push
pop
ss
push
xchg
xor
pop
and
and
stos
mov
pop
into
adc
ja
andl
jbe
std
dec
gs
ret
rcrl
mov
ss
push
fcom
push
inc
arpl
mov
and
pop
repz
adc
jg
mov
bound
adc
pop
inc
shll
cmpb
jmp
jle
js
cmp
fwait
pop
scas
lea
pop
push
sbb
rolb
in
sti
and
push
clc
and
and
mov
xchg
loopne
adcl
movsb
ss
out
sbb
lea
dec
fistpl
in
mov
push
mov
sbb
xchg
xor
mov
pop
jp
xchg
sub
push
sbb
sbb
out
xor
inc
cmp
imul
aaa
and
mov
push
leave
aas
into
fsubl
mov
and
mov
sub
mov
ret
gs
mov
fsubs
adcl
es
sbb
in
push
add
insb
daa
sahf
jns
scas
lea
xor
or
dec
sti
push
push
push
imul
pop
loope
clc
fwait
sub
stc
cmp
jle
pop
in
and
call
mov
pop
scas
cmc
xchg
and
leave
ss
cld
test
add
cs
push
push
iret
cmp
in
sbb
aaa
leave
iret
sbb
stos
push
lock
jb
xor
cld
mov
pop
jno
push
aas
dec
inc
inc
cmp
lock
dec
loop
or
xchg
frstor
popa
push
jle
lret
rcrl
rcrb
jecxz
hlt
sub
testb
push
stos
sti
wrmsr
inc
dec
in
xor
sbb
mov
scas
or
or
pushf
lcall
sbb
add
push
mov
fdivrl
iret
add
xor
int
jle
je
mov
daa
ljmp
push
jne
jge
fcomps
mov
fimull
cwtl
adc
xchg
mov
sub
hlt
push
push
mov
pop
adc
outsb
test
sub
sbb
cmpsb
mov
inc
outsb
hlt
jne
cmp
dec
push
lahf
jae
aam
jo
inc
fldenv
sbb
mov
incl
flds
push
cli
call
xor
lcall
lcall
dec
jno
inc
push
sar
and
loope
mov
dec
mov
cmpsl
mulb
dec
pop
pop
cmp
lahf
mov
xchg
imul
sbb
imul
cmp
repnz
mov
shl
cmpb
cmp
aas
mov
out
mov
mov
out
cmpsb
xchg
mov
xor
mov
inc
jl
xchg
cmp
jg
and
lock
leave
push
in
jno
jae
in
sbb
mov
test
rcr
aad
lods
cs
data16
jns
repz
push
add
dec
xchg
xor
addr16
push
lret
incl
in
movsb
inc
sahf
mov
push
aam
jno
lret
lret
ja
sbbl
fcom
mov
popa
pop
sub
test
gs
mov
arpl
mov
xchg
inc
popa
mull
loope
add
sti
add
xor
fisttpl
lock
insb
sbb
in
cmp
lcall
repz
outsl
push
jmp
shlb
in
cmp
jp
clc
push
pop
push
ret
and
fists
mov
fcoml
outsb
sbb
popf
pop
rcl
out
es
sub
enter
js
inc
stos
mov
push
insb
pop
loopne
xor
test
movsl
fcomps
hlt
pop
pop
and
sub
popf
in
mov
movsb
inc
mov
or
pop
imul
mov
xchg
aad
out
dec
ljmp
xor
ja
inc
fnsave
push
sub
test
mov
fwait
inc
push
xchg
clc
int3
arpl
sbb
adc
add
xor
frstor
xor
sbb
adc
pop
inc
das
fidivs
xchg
sub
jae
cwtl
int3
fstps
or
and
dec
inc
cs
test
fistps
jb
adc
mov
inc
cmc
adc
push
pop
repnz
sbbl
lods
shrl
ret
outsl
nop
movsb
and
pop
lods
mov
push
stc
inc
gs
stos
xor
aam
mov
inc
dec
xchg
lock
fwait
mov
dec
icebp
mov
push
and
pop
insb
and
andl
add
out
pusha
clc
pop
xor
push
stos
cmc
movsl
in
inc
popf
stc
in
or
cmpb
xchg
test
gs
repnz
loope
mov
push
or
xor
ret
or
pop
xchg
stc
orl
sbb
sub
and
jae
outsl
and
cwtl
pop
adc
inc
pop
cmpsb
cmp
outsl
icebp
sahf
sbb
aaa
clc
movsl
pop
jno
inc
dec
adcl
sarl
inc
and
xchg
ja,pn
test
es
jb
xor
fwait
or
mov
mov
mov
jae
sub
sarl
cs
xchg
sarl
int
gs
sbb
dec
jno
xorl
dec
mov
jns
rol
insb
cmp
pop
mov
push
mov
xchg
jne
xchg
repnz
adc
stc
or
sbb
push
dec
pop
aad
jl
lock
push
cwtl
std
fcomp
imul
and
leave
or
dec
rol
pusha
xlat
scas
mov
cmpsl
rol
xchg
loop
inc
inc
and
push
gs
add
jp
pop
and
out
lcall
stc
in
adcl
or
dec
aad
and
add
sub
push
call
fcomps
clc
mov
scas
or
mov
or
dec
addr16
inc
cmp
in
testb
adc
outsb
ja
repz
insb
leave
sarl
cmp
ja
pop
ljmp
mov
ret
cwtl
pop
or
sbb
and
adc
dec
fisubs
mov
iret
inc
xor
aaa
lea
xchg
ffreep
leave
or
mov
ja
push
arpl
cmpsb
mov
btr
adcb
out
and
pop
push
xadd
arpl
icebp
pop
jecxz
cmp
imul
test
push
push
icebp
das
rolb
dec
shlb
jo
leave
pop
sub
testl
inc
ret
or
gs
xchg
xchg
xor
jno
in
push
add
xor
stos
inc
sbb
cmpsb
xor
leave
pusha
cmc
xor
push
call
inc
or
push
lea
in
sbb
rol
movsl
in
add
mov
or
fdivs
outsl
scas
test
sbb
jle
jmp
rcll
pop
ret
lcall
imul
mov
jno
xchg
lahf
push
je
lods
cwtl
pop
cmpsb
inc
lret
push
les
or
loop
mov
or
aam
das
mov
fnstenv
xchg
mov
dec
dec
es
jnp
cmp
pop
rorl
sub
mov
mov
hlt
dec
add
adc
add
cmp
fadds
lret
adcb
loopne
test
or
stos
out
loope
dec
jae
push
movsb
test
jae
inc
mov
shll
inc
movl
inc
popa
int3
xor
std
pusha
or
sub
inc
mov
cmp
cmpsb
in
rorl
ret
out
dec
data16
test
xor
sbb
push
or
push
or
or
dec
test
repnz
pop
xchg
jbe
dec
push
mov
mov
sahf
jecxz
repnz
fldcw
rcrl
mov
nop
jnp
jo
cmc
mov
cmpsb
clc
xchg
sbb
lods
ficoml
scas
and
sub
ss
mov
or
or
inc
push
subb
push
jno
int
xchg
in
inc
gs
xchg
data16
xchg
je
in
mov
fidivs
int
mov
push
out
shrb
das
jae
jnp
lds
cmp
shll
fstpl
mov
jb
pop
or
xchg
out
cs
mov
jmp
int
addr16
dec
rorb
pusha
inc
cli
xchg
xor
subl
loopne
fs
test
ljmp
push
fcoms
xor
jl
cmp
call
sbb
in
ja
pop
sub
shlb
out
icebp
dec
or
sub
ficoms
add
add
hlt
ja
lahf
mov
in
cmp
sahf
cmc
cld
add
mov
imul
and
xchg
mov
adc
into
std
add
push
mov
add
push
xor
add
fnstenv
cli
cmpsl
aaa
ret
fbld
inc
scas
test
data16
pop
test
test
daa
xchg
enter
ja
cli
jns
stos
pop
add
dec
lahf
lods
push
test
lret
xchg
mov
jnp
jb
push
inc
push
iret
gs
pop
dec
insb
xchg
in
clc
iret
arpl
add
mov
ljmp
enter
cmpsl
mov
bswap
and
push
loope
cmpsl
shl
sbb
fisttps
mov
loope
pushf
mov
jno
out
subb
js
or
pushl
int3
pop
dec
lock
pushf
aas
enter
or
ret
aas
push
shlb
fists
movsb
bound
lea
xchg
inc
fcmovb
pop
pop
insb
out
jb
call
jae
addr16
idivl
adc
fwait
adc
in
add
enter
or
lcall
lock
hlt
cld
sbb
cmpsb
imul
scas
jo
out
mov
and
in
fidivrs
xor
adcb
pop
imul
addl
mov
pop
aad
xchg
lcall
inc
mov
ret
fucom
add
and
pop
repz
pusha
mov
mov
fsubrs
psrlq
into
jne
xlat
mov
push
stos
fdiv
cmpsb
nop
pop
jle
mov
add
pop
jo
cmp
js
sbb
add
mov
aad
sub
insl
loope
in
outsb
xchg
and
popl
xchg
mov
pop
rol
lea
stc
push
xchg
dec
or
jns
sub
out
push
addb
jle
addb
jp
mov
out
mov
clc
dec
jp
mov
insb
xchg
cs
pushf
cmpsb
je
in
cmp
xchg
sub
addr16
mov
out
test
mov
mov
inc
cltd
ss
mov
les
dec
dec
out
pop
sbb
mov
lods
jmp
jo
add
cmpsl
out
cmp
or
mov
cmp
fcoml
mov
jle
icebp
lods
jg
mov
and
mov
dec
test
int3
cs
loope
movsl
sub
lock
daa
pusha
mov
jge
lret
pop
repz
rcll
lds
mov
dec
jnp
jnp
mov
push
ss
inc
jbe
das
push
lcall
cli
in
sub
push
hlt
jl
and
dec
in
mov
jecxz
or
sti
nop
loopne
arpl
subl
pop
mov
mov
sub
xchg
cs
push
jmp
push
mov
mov
test
repnz
stc
scas
jns
shlb
rclb
out
enter
lret
je
jmp
imul
cltd
mov
adc
stos
mov
scas
int3
clc
or
xchg
mov
out
dec
les
sub
push
popf
xchg
dec
mov
jbe
sbb
mov
mul
jns
sub
popa
shll
add
test
int3
pop
faddl
push
icebp
xchg
cmp
adcb
mov
addr16
cltd
insb
push
mov
rclb
mov
cmp
movsb
push
fmulp
inc
or
cmp
test
pop
loopne
pusha
imulb
fidivrs
mov
js
sub
add
aaa
int
dec
unpcklps
aad
sub
dec
pop
std
stos
pop
sub
in
mov
dec
aas
jno
sahf
push
mov
sbb
and
inc
bound
add
cmp
push
gs
fimuls
in
fmull
les
stos
mov
inc
xchg
test
andl
icebp
cld
push
jne
adc
push
cmp
xlat
and
aas
data16
in
clc
jae
push
or
jns
xchg
outsl
xchg
mov
xor
pop
addb
mov
add
cli
clc
fwait
push
into
lcall
xchg
xchg
sbb
dec
scas
lahf
negb
push
pop
xor
push
jmp
push
xlat
cmp
stc
sub
insb
lds
adc
sbb
xor
jno
push
rclb
mov
rcll
pop
dec
mov
and
sti
repnz
aas
and
jbe
inc
test
sahf
stos
loope
xchg
cmp
les
inc
movsb
add
int3
arpl
test
ss
lods
ret
mov
push
push
fiadds
adc
xchg
orb
dec
movsb
cmpsb
cmc
pop
bound
adc
nop
jns
fdivrl
and
xchg
outsl
gs
pop
rorl
and
in
int3
or
int
pop
adc
ss
lds
cltd
and
pop
sub
lock
dec
call
or
cmp
imul
jbe
loope
push
into
gs
loope
ret
adc
imul
dec
lock
dec
mov
push
out
push
int3
mov
and
mov
das
push
adc
ret
sub
push
pop
adc
pop
mov
jle
mov
int3
arpl
adc
addl
inc
insb
movsb
push
cs
test
in
mov
mov
and
or
inc
cmp
mov
lds
jp
pop
test
or
in
cmp
insb
and
pop
test
movsb
adc
sub
das
je
js
shll
iret
jbe
mov
mov
fbld
and
sub
out
jge
jne
es
push
fwait
mov
mov
dec
push
dec
or
mov
cmp
add
in
and
mov
mov
xchg
dec
inc
cmpsb
sbb
lea
jne
cmpsl
dec
iret
cmpsb
inc
adc
dec
rclb
pop
pop
xor
fldcw
xchg
out
adc
add
sbb
add
sbb
xor
mov
inc
fisttpl
push
fidivl
sub
push
imul
subb
or
push
dec
xchg
sbb
mov
dec
pop
mov
mov
shl
mov
and
xchg
xor
fldl2t
mov
int
aaa
outsl
fisubrs
add
xor
sub
xlat
popf
scas
inc
xchg
pop
insl
dec
jo
sub
jle
outsl
mov
mov
jge
aad
add
out
cmp
sbbb
add
inc
adc
xchg
mov
jne
jne
sbb
mov
sahf
fildll
xchg
nop
icebp
and
lods
dec
xchg
push
adc
adc
test
sub
call
lods
subb
mov
pop
xchg
scas
pushf
mov
mov
jo
mov
mov
or
mov
cltd
jge
cmp
scas
cltd
std
push
repz
xchg
cmp
imull
rorb
movsb
insb
shlb
inc
stos
dec
cmp
aaa
dec
add
inc
scas
mov
outsl
lods
mov
mov
push
add
rcrl
shll
mov
mov
cmp
mov
adc
out
add
jne
jb
dec
push
mov
mov
das
xchg
mov
mov
xor
xor
adc
arpl
cmpsl
push
mov
rcrb
push
dec
push
and
ja
into
xor
push
dec
rcrb
aam
addr16
pushf
leave
or
mov
cmp
test
scas
mov
push
push
or
test
rcll
fidivl
js
cwtl
pop
mov
leave
mov
cmpsb
dec
fisubl
int3
lret
sub
add
sbb
and
gs
cmpsb
inc
lahf
cmp
call
inc
fwait
xor
lock
repz
pop
lret
sti
jns
dec
fwait
mov
repz
scas
push
or
repnz
jbe
dec
cmpsb
outsl
jns
fwait
push
adc
jge
fistl
inc
push
and
xor
xchg
jl
aad
and
jae
imul
jl
jnp
sub
repnz
out
xor
int
and
ret
std
xor
sahf
gs
dec
pop
jnp
push
jo
imul
fisttpl
test
add
sub
rorl
jg
fldenv
test
mov
push
loope
xor
aas
inc
fs
leave
aad
jno
or
in
add
jb
pop
scas
xor
gs
mov
inc
lret
insl
or
lock
mov
fisubrs
xchg
enter
xchg
cmc
fs
sub
gs
test
inc
push
sbb
cwtl
add
lret
lcall
mov
jge
test
lods
mov
sub
icebp
stos
and
adc
push
insb
imul
sbb
mov
mov
pop
xor
dec
sub
add
aaa
add
pop
ljmp
pop
add
dec
jae
inc
lea
ss
gs
sbb
pop
cld
and
push
fwait
jb
jno
andl
fdiv
adc
js
jae
push
pop
push
testl
ja
inc
pop
add
mov
cmp
mov
push
ds
sbb
fldpi
inc
into
xchg
pop
adc
ss
push
sbb
sub
push
cmp
addb
push
sbb
or
sahf
cmp
loopne
rorb
jle
adc
xchg
dec
pop
and
in
push
sbb
outsl
xorl
pop
repz
fcmovnb
fnstenv
adc
mov
and
push
xchg
fisubrs
hlt
nop
shll
lods
inc
sbb
add
xchg
pushf
in
in
push
repnz
sahf
push
iret
mov
ror
inc
in
jp
xchg
das
sub
dec
lea
push
pop
cwtl
into
cli
test
xor
jae
in
xor
adc
addb
xchg
inc
lods
nop
mov
mov
sbb
lcall
inc
mov
shrb
sbb
mov
jmp
cmpsb
cmp
cli
inc
cmp
jp
push
jo
push
es
add
xlat
mov
adc
fwait
cwtl
inc
fwait
inc
mov
pop
cmc
adc
sub
mov
inc
jno
mov
xchg
outsb
jge
out
ret
adc
mov
test
add
outsb
leave
sub
lret
and
cmp
inc
pop
push
jnp
add
rcrl
iret
mov
cli
fwait
ss
xlat
xlat
out
ljmp
sbb
mov
loopne
cmpb
icebp
fcmovbe
cmp
movsb
addr16
lahf
and
imul
pop
cmc
fsubrs
mov
lahf
stos
ss
in
push
xchg
je
loopne
das
in
cmp
in
xchg
popf
cmp
pop
movsb
adcb
adc
stos
ljmp
adc
push
je
in
shrl
push
pop
int
dec
push
daa
hlt
pop
js
test
xor
mov
stc
stos
daa
movsb
cs
push
andb
push
sub
sarl
fucomip
jno
lods
into
nop
mov
repz
andb
cmp
cmp
push
pop
jno
shlb
xchg
xchg
jge
fwait
push
int
cwtl
loopne
repnz
cmpsl
cmpsl
add
pop
push
stos
xor
dec
pop
add
push
and
fnstenv
jns
sbb
and
mov
popf
rclb
pop
mov
pusha
and
popf
or
imull
jle
jb
fsubrs
dec
inc
sub
aam
sub
jecxz,pn
sbbb
xchg
js
out
cmpsl
sahf
xchg
jecxz
call
add
xor
and
out
loopne
jle
adc
xchg
bound
mov
dec
incl
sub
add
pop
lret
sbb
mov
pop
push
add
jo
jns
cmpsb
ret
inc
test
xor
push
pop
sbb
mov
shrl
ljmp
sbbb
aaa
sti
xchg
dec
loop
sbb
push
push
lock
int3
sbb
xlat
cmp
shl
idivb
xchg
out
lds
inc
faddp
and
xchg
jo
fsubs
sbb
stos
xchg
jl
adc
pop
and
stos
xor
xchg
cmpsl
sub
jp
int3
mov
pop
call
rcrb
push
mov
push
pusha
mull
pop
mov
sti
jle
test
cmp
push
popa
cmp
xchg
mov
cmp
cld
sbb
or
cmp
sub
jmp
outsb
repz
add
sub
loop
pop
mov
cli
and
xchg
jb
push
add
mov
xchg
insb
int
ss
and
iret
lea
pop
addr16
in
push
and
stos
leave
mov
fcoml
gs
sbb
outsb
mov
jge
inc
xchg
cmp
sarb
insb
inc
fs
cmpsl
aad
cmc
paddsw
imul
ljmp
pop
icebp
imul
adcb
lahf
cwtl
lds
inc
lds
mov
inc
inc
sarl
mov
push
leave
shlb
int3
rolb
jne
cmpsl
sbb
aaa
jp
dec
add
adc
sbb
ljmp
es
push
push
mov
pop
fists
jecxz
adc
pop
add
mov
dec
ret
les
mov
lret
jg
clc
add
mov
outsl
jg
and
fisubrs
xchg
loop
popf
imul
loop
fdivp
sub
dec
lock
push
fmull
movsl
cwtl
xor
std
aas
sahf
or
jmp
add
jne
ja
cld
xchg
xchg
mov
push
movsl
cmp
aas
jmp
movsl
push
fdivrl
fbld
mov
xor
cmp
leave
je
loopne
insl
out
out
scas
pop
xchg
fmul
fidivrs
fdivl
std
xchg
movsb
jg
pusha
xor
out
fisubs
adc
pop
scas
insl
and
or
aaa
int
stos
push
inc
pop
mov
je
sbb
mov
sub
jne
out
test
pop
jb
shr
cmc
mov
add
call
dec
clc
mov
lds
je
xchg
mov
lret
clc
leave
jl
push
fcoms
sub
je
dec
xor
adc
sbb
leave
jo
and
sbb
leave
xchg
lods
imul
ror
mov
mov
cmpb
flds
jns
cmpsl
outsb
js
mov
cmpsb
mov
mov
icebp
mov
mov
cmp
sbb
mov
je
and
sbb
pop
adc
push
negl
sbb
daa
sbb
sbb
ss
ljmp
mov
or
cltd
jne
xor
mov
test
clc
adc
scas
cmpsl
shrl
cmpsb
imul
xor
negl
shll
pop
dec
cmc
pusha
cmp
js
fcomps
int
pop
push
stos
insl
inc
xor
mull
mov
sbb
inc
push
sub
mov
jmp
pop
sbb
push
sbb
jne
adc
dec
and
in
jno
out
lret
cli
je
icebp
push
outsb
mov
or
dec
stos
xchg
out
push
into
scas
clc
jbe
in
movsl
mov
push
mov
push
cmp
cli
dec
cltd
pop
std
xor
inc
ficoml
inc
into
and
fwait
pop
ret
aaa
xchg
stos
popf
mov
notb
mov
sbbl
ljmp
mov
add
push
xchg
int
dec
out
adc
in
std
jns
sub
adc
xor
inc
adc
push
cwtl
jae
add
mov
cli
jne
out
cmpsl
cmp
mov
mov
and
inc
notl
sarl
int
mov
jo
cltd
popl
cltd
jo
jecxz
xchg
sbb
add
popa
orl
je
das
jo
sbb
cmp
pop
insb
outsl
lock
daa
loope
cmp
mov
mov
rol
inc
xor
xchg
aaa
jecxz
jnp
pop
inc
adc
jns
sti
jno
scas
mov
lcall
mov
adc
cmp
add
loopne
rcll
int3
jg
lods
lret
mov
repnz
adc
out
inc
mov
or
lea
xchg
je
popa
cmpsb
int
pushf
push
movsb
pushf
outsl
popa
loop
lds
cmp
dec
cld
das
fdivrl
xor
dec
imul
or
push
or
dec
movl
ret
aam
sbb
xor
clc
outsl
mov
xchg
push
jmp
xor
jmp
decb
rolb
leave
pop
rcrb
scas
stos
stc
popa
in
jne
movsb
aaa
or
push
movsb
jecxz
jne
inc
cmpsl
fwait
out
int3
dec
mov
aas
aaa
pushl
sarl
adc
das
mov
push
loopne
or
into
loope
mov
sbb
lea
inc
dec
push
dec
out
jnp
js
mov
mov
mov
pushf
sub
aas
jnp
data16
xor
push
addl
into
jmp
pop
inc
outsb
mov
dec
lahf
insb
adcb
ljmp
pusha
or
mov
leave
xlat
cmp
ljmp
sbb
clc
adc
mov
jmpw
call
jo
dec
dec
pop
xor
xor
sahf
xor
es
inc
pop
into
inc
ss
lock
sbb
sub
int3
fsubl
sbb
es
or
dec
dec
fstpt
add
cmp
gs
mov
push
mov
mov
rcr
sub
sub
mov
mov
xchg
mov
jo
xchg
dec
and
cwtl
fdivrl
add
stos
insl
lret
in
mov
adc
or
test
int3
fiadds
in
js
xchg
es
ds
jmp
iret
leave
fs
rcrb
xor
leave
inc
sbbb
leave
in
cltd
nopl
popf
pop
xor
rolb
icebp
push
sub
iret
adc
pop
mov
cmpsb
xchg
jbe
roll
mov
push
incb
mov
int3
push
jg
movb
push
movsl
inc
ficompl
sar
xchg
sub
out
add
rcr
adcb
inc
inc
bnd
lds
cmpsb
clc
sahf
mov
in
and
arpl
loop,pn
stos
in
adc
es
push
jge
sub
mov
inc
push
fdivrl
dec
push
rcl
mov
sub
push
mov
pop
sarb
sti
and
pop
fisttpll
or
cli
inc
push
scas
cmp
aaa
mov
mov
insl
loopne
shrb
push
adc
movsl
sbb
mov
cmp
xchg
mov
in
les
or
mov
sbbb
sub
aaa
pop
lcall
mov
dec
pushf
jno
pop
je
mov
sti
adc
cltd
mov
shlb
nop
mov
pop
inc
jmp
daa
rorb
push
movsl
shl
mov
test
inc
adc
mov
pop
mov
das
addl
sub
mov
pop
add
shl
jp
loop
je
jge
movsl
inc
sbb
les
int
push
push
xchg
jo
sub
cld
fiadds
cmp
inc
mov
orl
jns
push
loopne
xor
dec
jp
idivl
mov
out
push
dec
sub
dec
in
xchg
mov
push
mov
test
fldt
sbb
push
add
rol
or
push
fsubrl
sbb
push
mov
insb
insl
iret
decb
lret
mov
cmp
adc
imul
xchg
add
outsl
push
in
daa
jecxz
call
call
xchg
dec
test
rcrl
call
push
js
aaa
xor
and
nop
lahf
mov
push
insl
out
pop
adc
outsb
mov
push
popf
pushf
mov
xchg
ss
xor
or
test
pusha
sub
aad
push
testb
push
je
scas
hlt
mov
idivl
sub
roll
adc
imul
xchg
sbb
addr16
insl
pop
pop
notb
shlb
enter
aam
test
xor
cmpsl
pop
push
adc
addr16
cmp
jae
mov
ss
call
out
lods
aas
imul
push
push
cs
test
push
cmc
xchg
test
es
cld
lcall
cmpsb
cmp
xlat
xchg
aaa
push
in
ret
pop
out
insl
stc
out
test
js
outsb
add
pop
lea
and
mov
cmpsl
jp
test
push
mov
in
xlat
xchg
mov
clc
arpl
sub
les
dec
cwtl
cmpsl
popf
pop
and
mov
push
jno
push
ret
arpl
adc
inc
scas
rol
fs
inc
popf
fxch
arpl
mov
outsl
jnp
in
xor
ss
jle
xchg
xchg
lcall
pop
xchg
jp
shlb
and
call
rclb
add
jne
xchg
cs
jmp
std
and
and
jmp
mov
pop
sahf
mov
jb
fstp
std
les
mov
or
sbb
mov
pop
mov
movzwl
mov
add
mov
movsl
add
mov
loop
mov
sub
mov
test
gs
jb
test
movsl
mov
mov
mov
aas
bound
pop
imull
or
jp
roll
std
nop
and
or
mov
ss
jne
dec
pushl
mov
lret
jae
pop
ficompl
cmp
popa
lcall
inc
fstpl
sub
xor
inc
dec
in
orl
pop
shrb
imul
push
mov
js
div
mov
mov
and
lods
inc
inc
es
mov
push
xchg
je
pop
cmpsb
or
jl
mov
mov
ja
lcall
sbb
cli
sub
sub
push
out
xor
es
cli
adc
ja
xlat
mov
and
dec
mov
pop
scas
rorl
sbb
movsw
push
inc
fistps
js
cmovbe
add
femms
dec
mov
test
gs
fbstp
repnz
sub
add
xor
xchg
xor
movsb
pop
xlat
testl
xor
das
cli
cs
mov
cli
aaa
add
subl
andb
scas
gs
fisttps
cmp
pop
jg
jo
mov
rorl
pusha
push
or
leave
push
xor
mov
int
ss
sbb
mov
sbbb
test
lahf
xor
cmovae
insl
imul
sbb
xchg
lods
orb
imull
inc
xchg
dec
fimuls
fldt
jecxz
shl
jge
out
inc
inc
xchg
and
sahf
fnstenv
sub
ljmp
or
das
loopne
fildl
insl
xchg
cmpb
xor
hlt
xorb
repnz
test
and
loop
xor
xchg
push
xchg
xor
add
insl
cmp
in
fistps
nop
div
or
inc
xor
mov
mov
mov
mov
fmull
cmp
jae
cmp
push
out
dec
xchg
ljmp
repz
lcall
frstor
in
cmc
decl
and
mov
mov
les
jae
aam
andl
popf
sbb
lcall
in
popa
pop
sbb
popf
loop
push
mov
jle
jl
mov
jno
arpl
mov
inc
es
mov
sti
rclb
cltd
loopne
loop
push
lds
push
ficoms
ror
inc
push
inc
es
cmp
cmp
dec
icebp
mov
lea
pop
add
pop
mov
movsl
div
ja
and
jb
push
adc
out
iret
int
pop
cwtl
scas
xchg
cltd
enter
lods
repz
push
pop
lcall
ljmp
or
je
shrb
cli
jge
and
aam
inc
add
push
or
mov
xchg
inc
inc
pop
dec
loope
bound
js
lret
push
or
cmpsb
xchg
ds
jge
in
sbb
insl
ret
insb
scas
dec
sub
dec
add
or
xchg
push
cli
lds
and
popa
jb
push
pop
mov
popl
adc
addr16
movsl
sub
mov
negb
mov
scas
popa
stc
sbb
jmp
cmpl
dec
push
xor
test
fsubrl
ficompl
ret
call
cmp
mov
cmpb
pushf
pop
xorl
cmp
xchg
adc
leave
int
pop
mov
pop
aad
aaa
dec
lea
mov
or
pop
ucomiss
push
mov
mov
and
shll
fiadds
movsb
xlat
push
test
jecxz
mov
dec
sbb
or
lods
xchg
int
sahf
call
lcall
lods
mov
jmp
cmpsl
icebp
ret
cmp
jecxz
sub
dec
stos
inc
jl
dec
shl
sbb
fiadds
ds
sub
adc
lret
es
imul
cmp
inc
pop
sub
in
std
movd
outsl
sub
dec
xchg
xor
cmp
inc
sub
jmp
cwtl
je
fsubl
subb
adc
jne
jnp
out
adcl
mov
fisttps
jge
cmpsb
scas
or
lret
cmp
or
ror
mov
mov
mov
int
xlat
jns
and
xorb
cmp
mov
mov
sbb
mov
clc
hlt
xlat
fdiv
and
adc
xor
mov
cmp
inc
je,pt
mov
fstpl
push
cmpsb
inc
cmpsl
jp
dec
jb
not
add
jmp
rorl
pop
dec
cmpl
mov
test
call
pop
adc
mov
out
push
cmc
adc
fwait
xor
push
aaa
xor
mov
pushf
incb
cmpsb
lock
jnp
adc
lahf
sti
roll
lret
and
add
testb
fisttpll
andl
and
xchg
fucomi
mov
cmpsl
fcom
jb
nop
or
test
push
inc
sbb
in
insb
push
pop
xor
test
dec
repz
mov
adc
sbb
pop
dec
adc
jle
mov
cmp
enter
jns
andl
xor
into
cli
or
and
sbb
pop
je
pop
test
cbtw
mov
clc
std
cmp
rcrl
add
insl
not
xchg
js
xchg
xor
push
aad
xchg
shr
test
adc
or
call
sbb
testl
push
pop
xchg
xor
les
into
int3
bound
push
push
xor
ret
mov
or
scas
cmp
mov
push
push
fsubrp
mov
shll
pop
mov
dec
addr16
popf
mov
mov
or
and
mov
sti
xor
jecxz
stos
jg
mov
sbb
pop
cmp
lret
stc
icebp
out
ret
fcmovne
xchg
mov
sbb
enter
add
jae
push
daa
xchg
xchg
cld
dec
pop
and
adc
test
inc
jg
jb
sbb
imul
xor
outsb
lret
lahf
idivb
rorl
arpl
mov
imul
cli
fsubrl
bound
push
sbb
cmp
and
xchg
loopne
push
aam
notl
fwait
xor
in
mov
imul
mov
xchg
mov
enter
xor
lret
cltd
jg
inc
mov
addr16
cltd
clc
fs
cmpsb
ljmp
mov
cmp
lcall
sub
cmp
pop
xchg
int
adc
aas
cmc
xor
jae
outsb
scas
mov
fidivs
pop
xchg
lds
in
data16
sub
sbb
push
jo
inc
add
mov
mov
pop
add
dec
inc
lock
pop
push
fldcw
mov
mov
adc
imul
test
adc
arpl
stc
shrl
iret
sahf
xchg
lea
xor
inc
jo
jg
sti
push
push
dec
cmp
aam
stc
and
fnsave
pop
test
ja
int3
push
push
in
rorb
jl
mov
jle
shl
jns
shrl
xchg
mov
stc
loop
mov
and
jno
imul
push
jns,pn
pop
pop
or
cmp
sarl
push
loope,pt
sub
dec
cli
inc
xor
lret
push
sbb
inc
mov
mov
pop
fidivl
dec
jg
scas
sub
popa
mov
imul
fnstenv
mov
push
push
xor
inc
and
dec
fwait
mov
lahf
dec
xchg
stos
mov
mov
pop
mov
loop
or
ja
stc
sub
sbb
mov
xor
sbb
test
cwtl
gs
pop
mov
and
sti
cmp
add
mov
mov
fildll
dec
jmp
xchg
mov
add
outsl
push
or
adc
ficoml
mov
gs
inc
push
inc
jmp
arpl
cld
jb
lods
cwtl
jl
dec
into
aas
in
into
jg
stos
fldenv
xor
das
pusha
subb
mov
imul
enter
sub
andb
nop
das
insb
jne
inc
jge
add
dec
gs
cmp
mov
mov
jnp
adc
mov
mov
push
popf
cmp
mov
xchg
popf
mov
cmc
sub
and
adc
jmp
pop
dec
movsb
or
lea
pop
scas
sahf
fmuls
mov
pop
int
mov
rcrb
or
leave
push
fisubl
jmp
mov
jb
push
sbb
adc
pop
and
adc
mov
fnsave
iret
cmc
fs
xorb
push
subl
and
in
jle
adc
and
and
insb
jmp
add
jge
shll
sbb
lret
jle
inc
lcall
mov
dec
rorb
jo
xchg
dec
jge
popf
mov
fsubl
icebp
xchg
mov
dec
ret
inc
xlat
les
ds
adc
hlt
inc
ljmp
xchg
jno
ljmp
sbb
ljmp
lds
rcrb
sbb
movsl
icebp
lcall
dec
rolb
mov
xlat
testb
mov
in
js
call
sbb
push
pop
or
push
and
pop
sti
imul
lock
jmp
mov
repnz
iret
xchg
mov
xchg
mov
xor
testl
and
adc
xchg
in
aas
push
xchg
mov
in
mov
xor
rol
mov
add
sub
pop
adc
testb
orb
repnz
cmp
jnp
pusha
pop
cmp
mov
sahf
and
mov
jmp
pop
jb
mov
jle
sub
fildll
inc
ljmp
loope
mov
das
lret
fiadds
and
dec
out
popf
xor
pop
xlat
insb
mov
ret
cmc
dec
or
jne
xor
aam
fistl
sbb
stos
lods
imul
insb
scas
out
lods
mov
jg
or
icebp
xor
and
ret
pop
or
cltd
mov
call
mov
xor
insl
aam
pop
jo
mov
rclb
sbb
mov
imul
mov
lret
sbb
loope
mov
sarb
fcompl
lret
clc
push
movsl
imul
or
mov
mov
sbb
ret
pop
out
out
sub
fwait
das
fcoms
mov
mov
out
gs
xchg
cs
mov
fistpl
subb
je
dec
xchg
add
rolb
sbb
mov
cltd
jnp
sti
xchg
loop
and
add
mov
test
cmpsb
dec
pusha
mov
ds
cmpsl
fs
and
dec
xchg
jmp
push
jp
mov
insl
mov
sbb
aaa
pusha
imul
ret
cld
sub
mov
inc
inc
push
ljmp
out
shll
insl
clc
in
mov
sarl
sbb
push
dec
in
bound
push
cwtl
rorb
jp
fsubrs
adc
dec
mov
or
aam
insl
jge
jo
ret
ja
jecxz
jae
fisttps
push
sbb
loop
push
clc
inc
cmp
inc
popf
imull
ficoms
lods
jmp
cwtl
jge
mov
or
mov
daa
int3
cmp
shl
in
outsl
xlat
add
insl
cmp
jae
mov
fisttpl
jmp
lcall
adc
fsubrp
test
sarl
idivl
pop
les
lcall
push
in
sti
lahf
daa
jecxz
popf
xchg
call
mov
loope
daa
push
inc
iret
mov
mov
pusha
pop
dec
pop
cwtl
ret
jecxz
movsb
xchg
in
dec
cltd
leave
cltd
bound
iret
std
in
jne
lock
and
insl
xchg
jb
mov
ja
call
rcl
orb
cmp
cwtl
xor
pop
repnz
ret
add
lods
adc
lret
push
lret
icebp
lret
add
adc
cmp
push
out
leave
jge
ret
cmpsb
sub
ret
icebp
dec
sbb
loope
das
cmp
into
cmp
bound
xchg
xchg
js
push
pop
xor
lret
call
xchg
adc
dec
pcmpgtw
ljmp
jno
jle
adc
mov
loopne
int
push
in
dec
enter
inc
mov
cmp
subb
fidivl
aam
lea
mov
sub
dec
xchg
cmp
ret
mov
and
cmp
js
idivb
push
dec
mov
dec
ja
cli
push
shll
push
aam
jo
fdivl
insb
or
stos
mov
push
cs
push
dec
leave
and
lcall
je
dec
mov
mov
ret
sahf
filds
scas
lret
cmp
pop
dec
das
mov
negb
lahf
cs
sub
scas
mov
jbe
xchg
pop
jle
mov
lods
lods
pop
roll
push
iret
arpl
cmc
adc
daa
repnz
int3
cmc
dec
xchg
dec
mov
into
enter
pop
inc
scas
roll
outsb
sub
test
lea
xchg
pop
mov
es
adc
addb
push
jb
sbb
hlt
test
fwait
gs
jl
xchg
xchg
mov
mov
pop
and
out
pop
repz
sti
test
mov
test
cmp
test
mov
mov
sbb
xor
inc
popa
mov
push
idivl
sub
aas
or
scas
shll
inc
lret
sbb
mov
mov
scas
mov
push
outsl
int3
sub
add
gs
dec
or
mov
out
ja
sub
seto
pop
and
mov
mov
dec
mov
popf
sti
dec
adc
stos
xchg
fwait
into
testb
test
push
mov
into
mov
in
fisubs
mov
cli
lock
cmpsb
sbb
in
out
adc
cltd
addr16
cmp
jbe
fisttps
push
rcll
mov
cmpsb
imul
iret
ss
repnz
shl
pop
xor
mov
cmp
and
push
and
xor
enter
jnp
mov
shl
adc
gs
call
xor
xchg
stos
clc
add
push
xor
fsubrs
ljmp
push
dec
out
divl
lds
push
add
jbe
jg
sbb
cmp
mov
xor
jmp
flds
pop
mov
lock
mov
jmp
xchg
inc
jo
mov
loope
aad
aas
data16
leave
daa
mov
popa
sbb
in
xor
data16
loope
mov
bswap
inc
mov
xchg
lea
mov
pop
mov
sbb
add
dec
cli
imul
xlat
scas
jmp
dec
dec
or
mov
lods
xchg
test
sbb
int
push
inc
outsl
outsl
pop
inc
mov
mov
outsb
pop
cmp
mov
sub
sarl
lret
jae
mov
cmp
lods
pop
sub
push
leave
les
insl
push
mov
dec
push
rorb
arpl
sbb
cmp
mov
aaa
mov
popl
aam
lods
dec
cmp
dec
int
jne
fcmovbe
pop
push
jns
xchg
imul
int3
daa
mov
divb
push
lods
repz
dec
xor
mov
imul
sbb
arpl
push
rcl
cmp
mov
or
adc
adcl
xchg
xchg
xor
or
aas
shlb
fldenv
sub
sti
adc
out
pop
arpl
jp
sub
es
add
add
jb
or
xor
cmp
shrl
scas
dec
idivl
or
lcall
push
cmp
repnz
pop
mov
loope
push
mov
mov
scas
in
fdivl
fstpt
lods
repnz
push
lcall
or
and
sbb
adc
in
negl
dec
push
jb
sub
sbb
test
push
sti
mov
mov
das
inc
lahf
ss
inc
lods
push
mov
fildll
andb
cmpsl
gs
fildl
lahf
or
js
sbb
es
sti
adc
outsl
and
stos
sbb
or
sub
push
popa
aam
xor
jg
enter
lret
fiadds
jmp
pop
push
mov
and
mov
int3
pop
fmul
fidivrs
arpl
dec
mov
out
xchg
in
aad
ret
and
inc
loope
mov
lock
orl
pop
dec
inc
int
mov
jno
popa
cwtl
jbe
xchg
rclb
add
pop
outsb
xchg
mov
in
dec
insb
fyl2x
mov
mov
loope
movsb
repnz
fldt
sbb
xlat
dec
cmp
push
pop
scas
aas
rcrl
add
pop
mov
xchg
push
mov
push
xchg
sbb
mov
cld
int3
mov
add
xchg
or
les
insb
int3
jb
mov
lahf
ret
dec
das
sqrtps
add
push
inc
ja
in
orl
add
pop
je
and
pop
repnz
les
cmp
outsb
iret
and
and
lods
xchg
mov
aaa
push
mov
pop
cmpl
jae
jno
cld
orb
jno
xor
out
mov
dec
or
jp
rcrl
lods
outsl
test
mov
mov
sbb
addb
test
cmp
lahf
adc
lods
xchg
inc
adc
aaa
or
gs
fiaddl
ss
jbe
cwtl
and
ljmp
push
rcl
mov
dec
and
out
add
in
sarb
rep
xchg
pop
adc
sub
repnz
jbe
lret
sub
cld
push
movsl
ja
into
loope
add
push
xchg
loopne
call
inc
sbb
mov
mov
ss
pop
ja
ret
xchg
lods
js
sub
mov
pop
imul
sub
cli
daa
lds
jmp
aam
lods
pop
xchg
pusha
hlt
ljmp
shll
mov
push
ficomps
mov
pop
mov
adc
pushf
aaa
xorl
pop
mov
or
jb
in
xchg
cmpl
negl
push
push
and
xor
mov
mov
pop
es
int3
data16
push
mov
mov
roll
sub
cmc
lods
xor
jg
fsubl
mov
and
xchg
xor
pop
mov
and
mov
fisttpll
ss
pop
repnz
ret
ss
or
lock
into
enter
scas
shll
enter
stc
outsb
cs
rclb
js
mov
imul
ja
ret
sub
jecxz
scas
pop
pop
daa
outsl
aam
jp
adc
jae
add
mov
jb
cltd
and
inc
add
out
or
or
push
cmp
mov
xchg
push
mov
mov
lret
daa
push
fnstcw
sbb
lcall
xchg
enter
mov
mov
pop
mov
lahf
in
pminsw
and
mov
jg
push
or
imul
xchg
lcall
push
dec
loop
cmc
lods
ss
push
mov
lret
add
cwtl
stc
mov
outsl
stc
or
aam
rorb
or
push
cmp
jmp
push
sub
xor
add
fucomip
cs
movsb
cli
loope
pop
divl
das
xchg
lret
addr16
dec
es
stos
das
lret
jns
inc
jbe
dec
incl
mov
jb
push
adcb
xchg
inc
les
adc
ret
mov
inc
xchg
subl
mov
push
hlt
cwtl
jge
cmp
sbb
arpl
mov
lret
js
mov
popf
dec
pop
icebp
cmp
cli
xchg
mov
add
cmp
dec
xchg
mov
cwtl
dec
loop
jmp
cmpsl
cmc
js
inc
and
lock
out
out
ficoms
jl
lahf
add
and
stos
mov
sub
jl
rcrb
cmp
xor
pop
mov
stos
mov
jbe
ljmp
sahf
icebp
add
pop
lret
push
loope
cwtl
push
mov
ljmp
aas
dec
jb
dec
xor
out
and
xchg
aas
in
enter
mov
jb
jmp
or
cwtl
cmpsl
and
and
xor
test
and
lea
stos
ss
imul
mov
jle
es
pushf
ret
mov
adc
bound
movsb
cmp
mov
dec
add
sbb
add
mov
push
adc
cmp
jge
dec
int3
jle
movsb
jg
pop
mov
fs
and
xor
mov
xlat
jecxz
hlt
xchg
lods
call
sahf
push
xchg
mov
in
cmp
jmp
jo
adc
xchg
call
stos
movsb
xchg
add
outsb
or
inc
mov
mov
out
cmp
add
fidivrs
dec
ja
stos
xchg
rcll
ret
inc
frstor
inc
js
inc
pop
mov
pop
xchg
jp
jl
lret
loope
aaa
inc
and
insl
and
leave
xchg
mov
lcall
and
test
or
lret
push
cs
adc
pop
xchg
lret
leave
mov
pop
mov
fsubp
and
rorb
int3
jl
test
fistpll
jecxz
into
gs
jne
jp
movsl
in
sahf
lods
sbb
jo
inc
or
iret
sbb
enter
dec
out
rcrl
scas
and
shlb
int
xchg
and
or
cmp
test
dec
in
or
ss
sub
jns
mov
sbb
stos
movb
adc
mov
jns
rcrl
frstor
push
pop
push
int
mov
mov
fwait
bound
mov
adc
sti
mov
sbb
out
inc
out
xchg
lds
outsb
outsl
push
bound
inc
jle
cltd
pop
or
adc
pop
lods
jo
xchg
mov
mov
imul
mov
cmpsb
lock
leave
hlt
push
aad
jb
outsb
pop
pop
push
dec
push
call
pop
pop
movsl
push
sub
dec
adc
cld
dec
xor
cmp
enter
mov
into
xchg
jo
shlb
lea
mov
mov
int
into
mov
in
pushf
je
lds
es
push
sarl
in
insl
push
data16
dec
scas
loopne
lea
subb
fidivrl
imul
jecxz
add
push
je
rep
jbe
sbb
mov
mov
das
cmp
rcrl
ret
ljmp
push
clc
arpl
sbb
aad
lret
and
sub
aad
sbb
addr16
cmpsl
outsb
jl
mov
dec
mov
incl
test
insb
xchg
sahf
sbb
add
xchg
or
test
loopne
cmpsb
in
subl
or
inc
insl
jns
aad
xchg
adc
notb
inc
int
std
adc
cs
loope
in
fs
nop
dec
sub
sub
add
pusha
stc
test
call
jo
les
add
xchg
or
sbb
adc
mov
or
out
fldl
inc
mov
xchg
flds
inc
iret
jnp
jno
lock
movsb
sbb
lods
jg
pop
sub
pop
movsb
push
popa
mov
jge
inc
shr
dec
add
aaa
into
test
push
jmp
inc
push
jns
mov
mov
jmp
insb
sbb
lea
push
lods
filds
fldcw
add
das
pop
test
push
pop
sahf
rcl
ja
cltd
out
filds
push
push
push
nop
pop
loopne
dec
pop
inc
xorl
test
and
lcall
loop
in
adc
outsb
sub
js
clc
sub
push
adc
fchs
push
jns
push
jo
or
and
test
or
cmp
mov
lods
jno
daa
nop
data16
test
sti
mov
faddl
shrb
mov
xchg
std
ret
test
out
xchg
lret
popf
sub
scas
xchg
test
add
push
mov
fildll
rcll
jp
repz
popa
xchg
cmpsb
mov
lods
jl
dec
mov
add
jns
adc
cmp
xor
int
test
cmpsb
add
push
push
jg
pop
out
jae
in
out
jbe
dec
add
negb
add
or
enter
adc
cmp
xchg
push
je
cwtl
push
das
lods
mov
fisttps
push
imull
rolb
stc
and
js
pop
shrb
mov
adc
outsb
data16
mov
daa
mov
jbe
stc
push
push
cvtdq2ps
xchg
lret
int
mov
jne
icebp
mov
dec
divl
inc
pop
loop
mov
ret
inc
pop
lret
pop
sbb
and
sbb
cmp
mov
jmp
add
mov
sbb
mov
loope
das
pop
pop
jge
mov
jbe
stos
lcall
pop
mov
adc
xchg
push
loope
lcall
gs
je
outsb
jne
fucomip
cmp
fidivrl
loop
imul
or
jge
ret
jp
mov
mov
xchg
aam
mov
mov
das
into
std
sub
mov
repz
test
pop
mov
int3
pop
adc
pop
shld
mov
sbb
add
repz
cmp
and
push
pop
lret
fwait
push
sahf
add
std
jge
xchg
sahf
pop
jnp
inc
jecxz
inc
lea
cld
sub
test
js
loope
xchg
insb
jmp
xor
call
outsl
lods
jo
xor
xchg
and
add
xor
leave
pop
push
popa
fstpt
imul
adc
mov
sub
test
mov
js
xchg
inc
xchg
std
pop
arpl
mov
mov
addr16
jae
into
push
push
adc
pop
rcrb
push
in
dec
in
inc
xlat
xchg
cs
pushf
or
aas
outsb
push
mov
mov
sahf
notb
adc
std
mov
rcrl
jb
dec
xchg
sbb
push
lahf
movsb
fisttps
pop
xor
fcom
insb
add
mov
and
inc
xor
jno
out
test
adc
sub
dec
inc
aas
xor
lcall
fildll
mov
jo
test
mov
cmpsb
xor
aad
xor
mov
in
sub
test
mov
mov
ret
loopne
je
mov
ficoml
pop
ja
enter
push
pop
cmp
push
mov
add
jb
fsubrl
or
push
jno
push
clc
mov
xor
fsts
xchg
mov
add
and
stc
pop
das
call
fiaddl
fstpt
mov
pop
out
adc
inc
mov
test
or
mov
mov
xchg
into
jb
mov
mov
in
sbb
xor
cwtl
jmp
jmp
stc
nop
cltd
xchg
lcall
pop
cmp
imul
jns
pop
push
jae
int3
int3
sub
fsubl
mov
into
pop
inc
fcoms
mov
or
in
push
gs
add
loope
sub
js
es
push
sarl
inc
mov
mov
push
push
jns
leave
inc
jg
andl
daa
push
test
xor
mull
dec
jno
xorl
adc
insl
inc
mov
adc
inc
insl
arpl
ljmp
inc
gs
fdivs
jb
dec
fs
nop
push
cwtl
fisubrs
cmp
adc
sbb
cmp
iret
lahf
jno
subb
cmp
aad
mov
ret
jge
jbe
dec
sub
jl
arpl
int
popf
adc
cmp
jge
pop
scas
fcoms
push
jns
adc
inc
fucom
cmp
xor
cmp
hlt
inc
repz
mov
jne
sub
data16
negb
leave
mov
pop
jecxz
mov
mov
seto
dec
add
and
jp
mov
jae
mov
in
xchg
dec
ja
movsl
icebp
movsl
pop
cs
xor
lds
stc
add
xor
rcrb
pusha
lods
fcompl
dec
inc
not
je
jne
dec
mov
int3
pop
and
test
popa
xor
inc
pop
adc
pop
dec
out
adc
ss
xchg
or
fwait
std
add
std
jo
pop
cli
xchg
int3
imul
sbb
ss
jo
sbb
fs
sbb
insl
lods
adc
mov
mov
jno
imul
cmp
lcall
loop
nop
mov
xchg
pop
cmp
je
mov
mov
sbb
rorl
add
lock
pop
cmc
xorb
adc
sub
jmp
jp
mov
jno
sub
and
pop
aad
xor
push
inc
sti
push
cld
dec
in
and
fnsave
movsb
out
cmpsl
ret
out
adc
das
mov
int
lret
jb
std
inc
rorb
sbb
addb
fldcw
jbe
aam
jo
xlat
add
push
jo
bound
sar
adc
loopne
and
mov
lcall
out
imul
sahf
jg
iret
pop
int3
ss
arpl
cmp
call
in
mov
sbb
test
dec
ds
sbb
cld
dec
repz
out
sbb
icebp
movsl
inc
pusha
fists
sbb
adc
pop
pop
test
xchg
mov
xchg
mov
loopne
insb
cmp
mov
inc
aam
jb
lret
sbbl
xchg
lret
xor
sub
insl
aad
loopne
jo
mov
xchg
sti
bound
adc
andl
shll
out
mov
stc
in
xchg
pop
lock
add
mov
rcl
and
adc
mov
lcall
movsl
mov
xor
jle
jmp
mov
ret
in
jp
mov
daa
jmp
xor
sub
cmp
sub
call
imul
ljmp
push
fnstenv
sub
cmp
dec
or
xchg
pop
repnz
stc
cmp
push
jns
or
xor
mov
push
addl
cmp
pop
fidivl
add
sub
lods
xchg
mov
mov
pop
imul
lcall
aas
lret
sar
fwait
xlat
mov
in
xchg
testb
sub
sbbb
adc
push
sbb
and
inc
and
aaa
dec
cmp
add
push
fadd
push
mov
inc
icebp
mov
sub
pop
test
outsl
stos
out
xor
notb
mov
xor
daa
insb
bts
cmpsl
ds
insb
or
cmp
and
dec
cmp
xchg
sbb
cs
sub
fsubs
xor
in
jne
cmp
jnp
jecxz
fwait
rcr
ljmp
jb
lds
test
test
fmul
imul
imul
lds
dec
scas
lcall
out
scas
pop
lods
cmp
mov
mov
xor
insb
jo
jo
pop
ds
dec
jno
jmp
add
repz
sub
aaa
pop
loopne
je
jnp
push
pop
call
push
daa
sbbl
push
add
clc
xor
es
lahf
in
fsubp
add
mov
push
and
loope
sbb
fs
pop
mov
inc
in
test
outsl
mov
mov
fiaddl
or
sbb
lods
movsl
xchg
adc
sub
std
out
pusha
pushf
xor
or
jno
sub
std
cmpsb
daa
and
sbb
iret
jecxz
cmp
pop
ficompl
jmp
out
cmpb
dec
lret
or
xchg
andl
push
and
push
jb
dec
pop
ret
jge
stc
sarb
mov
test
scas
in
pop
cmp
stc
fsub
iret
mov
test
mov
daa
cmp
lods
pop
dec
mov
imull
mov
in
xchg
cmovle
lods
cld
xor
in
pusha
lods
or
and
and
or
xor
and
push
out
je
out
xchg
dec
fsubr
inc
out
pop
add
js
sti
stos
sub
jns
movsb
cwtl
sub
lods
xor
push
or
fwait
and
lea
xlat
loopne
pop
in
stos
out
jle
add
js
add
sbb
jb
mov
push
imulb
leave
sti
out
mulb
test
jle
mov
adc
pusha
xchg
aas
push
sub
lret
divl
leave
sub
hlt
mov
sbb
push
or
addr16
sub
popf
mov
pop
adc
lock
bound
in
lea
sarb
stos
arpl
ret
into
shlb
push
pop
jg
mov
nop
rdpmc
pop
xchg
sub
jno
popa
data16
or
sbb
addl
pop
sub
enter
fnstsw
inc
mov
sub
leave
dec
sub
inc
sub
shlb
jge
sub
mov
and
jmp
out
mov
test
xor
or
es
xchg
xchg
dec
cmp
mov
pop
pop
jbe
mov
cmp
hlt
xchg
mov
cmp
xor
push
dec
movsl
or
sub
xchg
lcall
mov
pop
xor
cmpsl
pop
mov
adc
imul
pop
jae
jne
xchg
xchg
pop
hlt
arpl
into
mov
jno
cli
inc
fstps
cltd
mov
push
insb
lret
stc
je
mov
jmp
mov
pop
mov
stc
jmp
mov
pop
add
mov
stc
gs
mov
xor
jge
xchg
cmpsl
pop
or
jne
dec
and
jl
jge
mov
jno
mov
imul
imul
sub
mov
mov
xlat
mov
sarb
inc
push
mov
bound
int
fmuls
fldl
loopne
enter
jno
adc
in
and
xchg
sbb
inc
inc
shrl
xor
fsubl
mov
or
dec
mov
jb
xchg
sub
out
test
xchg
and
fsts
bound
cmpsb
fidivrl
inc
cld
add
jo
adc
or
data16
lret
push
mov
ret
cmpsl
rcl
jl
shlb
je
divl
adc
pop
movsl
adc
out
cmp
aaa
push
push
test
testl
and
lods
xchg
xchg
ds
nop
mov
and
add
popf
icebp
sub
aam
and
pop
adc
aas
bound
js
push
adcb
jb
push
pusha
push
test
pop
fwait
repz
out
outsl
and
pop
loopne
icebp
imul
arpl
dec
inc
push
hlt
dec
mov
sbb
pop
xchg
ja
dec
sbbl
movsl
cmp
lret
out
fimull
imul
inc
sti
inc
loope
inc
xor
leave
mov
popa
inc
movsl
in
int
pop
jbe
push
adcb
jno
mov
jno
xor
pop
cli
xchg
pushl
lods
jg
out
shlb
lea
sub
daa
mov
stc
xor
in
xchg
test
mov
sbb
and
lods
adc
fucomip
sub
sbb
push
fstl
je
out
and
sti
cld
lds
lock
aaa
xor
cmp
add
imul
jbe
ret
outsl
pop
xchg
push
mov
xchg
xor
cmp
or
ss
lods
inc
xchg
cltd
push
lcall
push
mov
mov
mov
push
cmp
cmp
ds
jae,pn
xchg
mov
sub
or
dec
aad
cmp
pop
icebp
shll
cs
test
fbstp
jg
mov
sbbb
lock
mov
push
pop
dec
cmp
scas
dec
dec
or
xabort
dec
rorb
lahf
inc
inc
xchg
pop
pop
repz
add
add
js
mov
jge
addr16
daa
inc
adc
fstl
pushf
aam
push
nop
int3
gs
xor
jecxz
mov
rcrl
in
inc
rcrl
insb
push
cli
xchg
xchg
clc
std
ret
sbb
pop
mov
or
sti
sub
shll
orl
jbe
pop
mov
mov
push
cmp
mov
cmpsl
cmpsb
scas
test
bound
cltd
and
leave
mov
imul
int3
push
sbb
inc
inc
aad
jmp
add
decl
adc
pop
scas
arpl
in
jb
stc
push
shl
jb
dec
ja
test
sbb
mov
cs
je
jge
adc
mov
xchg
je
out
dec
sub
dec
imul
adcl
adc
jl
mov
pop
les
mov
mov
sub
add
fldt
ret
mov
mov
jno
push
pop
adc
push
lods
fmulp
dec
int
mov
ror
repnz
rorb
push
xchg
mov
inc
arpl
mov
pushf
mov
fsubr
cltd
insb
aaa
push
jbe
das
loopne
je
xchg
xor
in
push
ds
cmpsb
lea
adc
jl
or
add
or
xchg
shrl
movl
pop
test
xchg
sub
push
ss
dec
mov
cmp
mov
aad
int3
outsb
aam
lret
push
cmpsl
dec
ja
lods
pop
jnp
jns
popf
addr16
xchg
cmc
mov
dec
jnp
adc
outsl
sub
push
inc
xchg
jns
dec
fbstp
add
sub
push
push
cmpsb
push
insb
xor
js
test
jmp
rcrl
fsubrs
outsb
inc
mov
fisubl
push
cmp
fs
std
popa
push
xchg
outsb
or
ss
cli
inc
dec
cmp
dec
push
cwtl
cltd
pusha
pop
mov
ret
jl
cwtl
and
xchg
imull
lods
ljmp
pushf
or
and
add
imull
sub
sub
xorb
xchg
inc
das
xchg
divb
add
enter
and
imull
popa
mov
cmp
cmc
pop
aad
jnp
push
pop
pop
add
int3
xchg
mov
in
pop
cmp
popf
push
push
adc
xchg
add
xor
arpl
xchg
cmpsb
adc
adc
xorl
and
xchg
xchg
jl
or
fsts
dec
cld
mov
and
dec
in
cmpsl
nop
fstpt
in
rcrl
das
sub
pop
add
and
cmpsb
sbb
nop
daa
int3
and
mov
repz
std
and
push
out
inc
inc
adc
mulb
cmpsb
cmp
push
les
and
lock
pop
jmp
stc
inc
pop
jl
aam
jnp
xchg
out
cld
cmp
pop
shr
cmp
or
fisttps
test
xchg
call
cmpsb
inc
lahf
pop
into
push
mov
cld
push
or
aad
pop
div
xchg
and
shlb
sub
push
fnstsw
pop
mov
mov
jb
sbb
insl
sbb
pop
negb
js
out
sub
incl
mov
daa
sub
xchg
fisttpll
rol
inc
jb
fucomi
shlb
mov
ja
pusha
clc
fidivrs
jg
and
sbb
pop
fdivrp
mov
loope
xor
roll
sbb
mov
push
push
inc
jne
push
inc
dec
jecxz
das
mov
and
sbb
xor
repnz
jb
and
xchg
sub
mov
arpl
jg
bound
mov
adc
fisubl
int3
repnz
and
data16
clc
and
pop
mov
add
ss
fwait
push
push
mov
mov
jp
aam
aam
into
jmp
inc
in
add
ja
enter
gs
imul
pop
out
iret
rolb
and
push
in
jl
pop
push
mov
nop
jo
sbb
lea
push
ss
cld
push
decb
push
mov
scas
pop
insb
mov
and
ds
out
dec
pop
sub
add
mov
mov
in
test
dec
fildll
data16
and
xor
stc
jnp
jg
loop
jo
test
inc
nop
data16
xor
dec
mov
nop
dec
or
sbb
ret
xor
rcl
sti
frstor
and
jecxz
ds
adc
jbe
insl
fisubs
fsubrp
fmulp
sbb
add
xor
scas
movsb
push
aaa
cmp
jle
pop
je
jecxz
jp
ret
dec
pop
movsb
imul
push
std
mov
pop
sub
dec
xchg
push
cltd
pop
sarl
decb
cs
adc
lock
adc
jae
movsb
mov
inc
dec
call
sbb
mov
xor
data16
scas
jmp
adc
sbb
dec
cmp
mov
pop
add
xor
sbb
fadd
shrl
sbb
sbb
jae
sarb
jl
dec
scas
jecxz
jecxz
fdivrl
sbb
insl
add
aad
xlat
inc
lds
loop
lock
or
inc
lods
imul
jo
mov
rolb
and
pop
rolb
add
adc
and
repnz
xchg
sub
in
xor
shrb
mov
mov
jno
dec
lahf
jle
jmp
int3
xor
es
jno
and
negl
aaa
lahf
aam
loopne
lods
aad
sub
mov
add
mov
push
dec
jae
jge
inc
xor
mov
pop
adc
or
mov
bound
xor
fwait
mov
in
sbb
add
imul
mov
ror
pop
fwait
loopne
icebp
mov
daa
lcall
inc
mov
cmp
inc
fs
xchg
sbb
mov
stos
push
ficoms
pop
push
jae
in
push
mov
mov
mov
lods
aam
andl
pop
dec
lods
xor
cs
dec
not
mov
or
xor
scas
dec
lea
rcll
enter
fdivrs
fnstcw
ret
mov
lahf
int
inc
imull
mov
xlat
repz
stc
xchg
or
xor
mov
das
push
cltd
pop
add
mov
sahf
into
pop
mulb
sub
and
mov
testb
jnp
sbb
add
push
or
and
sub
jne
mov
in
stos
push
inc
test
jg
gs
popf
jl
mov
mov
mov
into
mov
out
mov
imul
shrl
jl
hlt
into
fsubl
jae
rcll
ret
sbb
lret
outsl
into
mov
ficoml
sub
jmp
cmpsl
das
mov
aas
push
loopne
mov
inc
test
adc
inc
pushf
inc
test
idivl
jbe
jp
and
pop
adc
xchg
jo
daa
data16
sbb
jbe
insl
mov
pop
inc
arpl
rclb
call
loop
mov
add
ret
mov
pop
shr
lret
out
jae
adc
fmull
test
jb
js
fs
cmc
push
sub
fdiv
mov
or
cmp
addr16
and
daa
test
xchg
cmc
adc
or
cwtl
mov
sti
in
repz
dec
sub
outsl
or
in
push
outsb
int
add
add
add
sbb
push
stos
mov
aam
inc
in
adc
mov
in
adcb
test
push
in
push
and
test
add
inc
cmp
stos
and
push
into
xor
jle
lods
pop
xor
clc
fs
pop
jns
in
jg
inc
xchg
inc
xchg
add
mov
push
and
adc
add
cli
cmp
adc
sbb
in
ss
mov
jmp
xchg
xchg
movsb
das
pop
xlat
arpl
push
jle
clc
jne
mov
cmp
js
les
push
xor
mov
enter
push
rorb
shlb
adc
ja
jne
movsb
aaa
sub
mov
cmp
daa
add
push
add
mov
dec
iret
andb
or
outsb
inc
subl
mov
aad
sbb
aas
dec
daa
mov
mov
mov
xor
add
cli
push
and
inc
push
lret
xlat
in
or
decb
je
repz
lea
xor
mov
mov
in
daa
mov
xor
nop
popf
mov
js
das
jecxz
mov
cltd
mov
adc
jnp
dec
lds
int3
pop
xchg
jmp
or
xor
mov
adc
adc
jg
pop
lock
sub
cld
mov
mov
and
xchg
push
insl
add
and
xor
lret
lcall
out
nop
xchg
pop
push
push
or
imul
and
lock
fidivrl
test
pop
hlt
data16
adc
adc
xlat
shll
ret
push
cwtl
add
dec
xchg
ss
lds
mov
insb
outsb
sbb
sub
xchg
iret
and
add
cmpsb
add
clc
repz
sub
pop
lret
mov
adc
sbb
add
xor
push
test
lret
std
out
cmp
push
mov
movsl
adc
fdivrl
push
xor
fs
mov
leave
test
leave
push
push
cld
das
repnz
lcall
outsl
int3
jo
add
scas
jb
outsl
add
and
and
cmp
sub
cmp
cmc
or
sbb
dec
add
add
pop
mov
and
fs
jle
jl
fiadds
sub
mov
xor
xchg
nop
add
xchg
adc
mov
pop
andl
popf
xchg
test
xchg
cmp
imul
shr
lret
pop
fisubs
mov
ficoml
mov
pop
out
pop
jnp
shll
xorl
arpl
adc
sarl
pop
aad
and
or
mov
dec
inc
fnstcw
or
daa
inc
popa
add
test
sarl
and
cmp
stos
mov
loope
push
and
aaa
inc
cmp
sbb
xor
xchg
cmp
sub
mov
mov
mov
rcll
add
mov
push
lods
mov
test
sub
jmp
mov
test
inc
into
sbb
mov
cmpl
add
mov
je
add
repz
dec
cmp
repz
adc
jno
mov
cld
scas
pop
shlb
pop
repz
pop
mov
pop
call
outsb
movsl
sbb
cmc
inc
repz
mov
test
cli
dec
loopne
push
lret
jns
dec
lock
ret
xchg
ja
push
mov
mov
pop
mov
sbb
clc
xchg
loope,pt
mov
divb
rcrl
dec
fiaddl
insl
sbb
das
mov
jmp
test
popf
pop
mov
adcl
push
rclb
addl
or
add
sti
push
testb
mov
jg
xor
cmp
popf
mov
sbb
fcmovnb
cmp
into
enter
cs
mov
push
adc
fildl
push
pop
xor
aam
bswap
notb
loopne
scas
pushl
lea
add
dec
jmp
dec
pop
subl
jge
dec
aas
inc
cmc
dec
sub
int
call
jne
or
push
fdiv
subb
iret
pop
decl
cmc
cld
dec
gs
adc
cwtl
repnz
mov
shr
fnstsw
xor
insb
fbld
inc
jns
js
imul
inc
mov
hlt
mov
pop
dec
enter
add
shl
notl
xchg
push
push
jno
xorb
leave
mov
rorb
jae
and
shl
dec
mov
rorl
xchg
jbe
mov
test
mov
inc
sbb
incb
andb
in
jge
shll
mov
call
loope
repz
and
stos
lret
jnp
dec
add
adc
jge
mov
ret
xlat
out
fadd
enter
xchg
mov
or
xor
ja
cmpsb
lret
cmp
dec
std
scas
mov
push
in
cmp
lods
imul
mov
int
jg
add
pop
mov
dec
fcmovbe
mov
cwtl
in
enter
add
mov
sar
pop
shlb
inc
arpl
push
aas
inc
mulb
dec
push
xchg
movsl
ds
std
sar
cmp
divl
sbb
xchg
sub
loope
inc
testl
pop
sahf
push
call
pop
add
xchg
stos
dec
fnsave
inc
sbb
lret
movsl
inc
push
lods
jmp
leave
and
mov
push
insl
and
data16
rcl
movsl
cmp
std
lret
fmull
jbe
movsl
mov
notl
adc
jge
jecxz
cmpsb
inc
cmpsl
orl
jle
inc
xor
xor
fld1
dec
loop
dec
cld
lea
aaa
inc
scas
or
roll
inc
push
or
cmp
adc
test
and
nop
pop
pop
add
mov
clc
out
xchg
dec
in
nop
pop
lcall
push
inc
aaa
lahf
pminub
inc
in
fs
test
dec
and
cwtl
call
inc
xlat
push
inc
pop
imul
aam
mov
movsl
notb
inc
popf
adc
movsl
lcall
inc
add
pusha
mov
pop
shlb
ret
inc
lcall
inc
lret
outsb
jp
lods
sub
popa
out
xchg
sbb
imul
sub
ds
fwait
lret
sub
or
movl
pop
stos
or
movsb
push
stc
dec
movsb
mov
dec
sub
fcomp
xchg
and
fwait
sti
pop
int
inc
std
loop
mov
pop
mov
mov
and
in
in
mov
xchg
lds
push
cmpsl
sti
xor
in
test
icebp
mov
insb
mov
js
and
adc
push
mov
xor
movsb
lock
shlb
lods
xchg
xchg
in
fistpl
mov
into
and
xchg
mov
les
jp
sub
inc
jg
mov
sarb
scas
loope
mov
cmp
mov
mov
nop
pop
inc
pusha
mov
mov
movsl
xchg
adc
gs
inc
xor
mov
pop
push
or
xorl
repnz
dec
mov
xchg
loope
stos
or
popa
adc
push
xor
kxnorw
mov
fbstp
sti
stos
rclb
stc
mov
ljmp
add
testl
es
pusha
xchg
iret
imul
add
ss
repnz
mov
jb
xor
nop
or
lcall
and
mov
cmp
loopne
mov
ja
jg
dec
xlat
sub
out
in
adc
mov
movzbl
xchg
cs
xor
push
decl
pop
dec
lcall
pop
sub
pushf
cmpsb
adc
aaa
jb
lea
int3
lcall
or
lcall
icebp
iret
xor
adc
in
ds
jne
rcr
cmp
push
cmp
xchg
xor
ret
repz
ffreep
test
mov
repnz
lcall
mov
ret
pop
shl
jbe
fists
jmp
lds
into
jne
xchg
insl
movsb
fstpl
in
rcl
sub
sub
std
es
lds
sti
xor
jl
or
fisubrl
or
iret
ss
jo
ret
inc
dec
pop
dec
push
shll
xor
imul
xchg
jo
lds
imul
mov
adc
jnp
cmp
negl
out
out
jb
lret
xor
movsl
push
out
pop
lock
xor
pop
outsb
adc
inc
fistl
cmp
cmp
mov
mov
dec
pop
fdivs
bound
mov
inc
std
and
int3
push
lret
cmp
mov
cmp
mov
lahf
loope
lds
cmpb
daa
test
dec
mov
test
or
mov
scas
repz
movsl
or
add
mov
sbb
push
or
mov
push
out
out
cmp
or
cmp
dec
jecxz
hlt
add
lds
xchg
arpl
test
pop
stos
insb
daa
xor
lahf
in
pop
adc
nop
and
add
scas
out
out
arpl
lods
sbb
das
jb
out
lods
and
add
push
push
shlb
leave
xlat
mov
rcrl
notb
or
sub
imul
mov
push
cmc
jle
push
push
fs
jl
jnp
ficompl
xor
nop
xchg
pop
mov
xchg
lcall
mov
mov
ror
xor
sub
outsl
scas
daa
cmp
adc
mov
adc
icebp
inc
in
clc
lcall
adc
jmp
or
cs
xor
sub
fisttpl
cld
stos
cs
cmpsb
rorl
and
insb
filds
in
jp
adc
into
into
or
sar
or
fildll
ret
jbe
push
cltd
repnz
dec
out
in
fwait
cld
pop
cwtl
mov
cltd
ret
mov
mov
or
daa
adcl
jns
pop
mov
movsl
ret
sti
xchg
cltd
ds
dec
loope
ficoml
xor
out
int
lret
stos
jp
shlb
decl
sbb
xor
push
mov
dec
gs
jmp
insl
sbb
sub
xor
test
mov
add
adc
jns
mov
in
cmp
aaa
shrb
lock
stc
sub
das
xor
pop
jmp
pop
hlt
xor
inc
in
fisubl
mov
mov
fiaddl
push
jae,pt
stos
movsb
pusha
mov
ljmp
inc
cmp
mov
into
pop
mov
dec
dec
add
in
sbb
pop
add
adc
and
adc
inc
xlat
hlt
xor
nop
gs
loope
testb
push
pop
ss
test
xor
push
fwait
or
out
cmp
adc
sub
pop
int
and
push
enter
cs
shr
cmp
xor
push
add
cmp
fnsave
iret
mov
xor
sbb
jb
mov
adc
aaa
fimuls
sahf
lahf
test
lds
ja
and
movsl
dec
cmpsl
sbb
mov
rcr
jne
sub
cld
xchg
sbb
imul
mov
iret
pop
push
sbb
push
xchg
movsb
cmp
xchg
call
lahf
ret
ja
dec
pop
and
shlb
stc
negb
xor
imul
adc
push
shlb
pop
dec
sub
imull
jbe
mov
mov
add
xchg
push
incb
fucomi
sbb
jno
inc
test
sub
adc
pop
les
loopne
xor
or
jb
lahf
sub
adc
shll
dec
xor
jg
and
add
mov
and
inc
mov
leave
jmp
loope
pusha
mov
test
jge
sub
push
and
lahf
dec
mov
enter
shr
adc
xor
lock
cmp
push
test
dec
xor
xchg
sub
jg
add
push
popa
and
sub
clc
pop
inc
push
scas
test
cld
cmp
ss
mov
loope
add
stos
fnsave
sbbl
outsl
jnp
loope
mov
pop
xlat
ret
sub
hlt
mov
enter
in
jo
enter
repnz
out
inc
adc
push
cmp
std
inc
int
jae
push
adcb
fstl
push
popf
fs
ret
xor
push
push
es
rolb
push
in
push
pop
fadds
pop
jle
or
mov
or
push
or
int3
mov
push
into
das
or
xor
sub
dec
inc
mov
js
enter
push
jmp
mov
sub
inc
iret
data16
into
mov
in
enter
cmp
outsl
cmp
mov
cmp
testb
lret
sub
ds
sbb
push
rclb
cmpb
cld
sbb
stos
inc
mov
mov
idivb
pop
cmpsl
lock
in
cld
aad
enter
cmp
fldt
insl
mov
pushl
mov
mov
fdivr
mov
mov
sbb
xchg
mov
repnz
fstpt
or
int3
call
add
mov
lods
sbb
fwait
cmpsl
pop
inc
int3
adc
push
popf
jnp
outsl
adc
inc
cmp
inc
in
ljmp
inc
sub
sbb
daa
xchg
cmp
popa
popa
mov
or
inc
sti
or
ja
mov
nop
in
xchg
mov
shlb
pop
or
push
xchg
mov
addr16
sub
add
mov
push
xchg
pushf
xlat
sbb
jle
scas
mov
into
mov
mov
xchg
sub
pop
ds
bound
mov
into
fwait
lock
xchg
cmp
es
cmp
inc
sahf
sbb
popa
or
and
insl
mov
mov
pop
cwtl
aam
nop
push
scas
inc
push
and
ret
push
lods
cmpsl
mov
fmuls
popa
clc
jnp
leave
xor
test
loope
mov
rcrl
lds
sub
pop
ljmp
push
out
aas
adc
jbe
andl
dec
sub
xorps
fisubl
fwait
push
sti
sbb
jae
ds
stc
jecxz
jge
inc
les
and
ss
fldcw
mov
xchg
je
xchg
pop
insb
push
cmp
jg
pop
mov
aam
hlt
push
divl
mov
mov
cld
inc
pop
loop
mov
jmp
pop
jo
arpl
dec
cmp
in
pop
push
aam
js
mov
push
xor
sbb
mov
sub
iret
mov
imul
and
inc
pop
test
and
sub
ja
cwtl
xlat
call
mov
test
je
pushf
ss
daa
mov
sub
mov
hlt
mov
mov
lea
pop
loope
push
add
xor
jmp
jne
pop
test
test
jecxz
bound
rcr
lds
jne
xor
ja
mov
add
iret
pop
push
mov
adc
jnp,pt
rcrb
movsl
out
inc
fldt
fsubs
mov
fstl
adc
xor
out
jbe
sbb
lcall
add
sbb
sub
push
aas
add
clc
loopne
xlat
xchg
xchg
int3
les
mov
jbe
rol
data16
xor
cmp
outsb
int3
mov
mov
inc
sub
jae
dec
mov
inc
into
andl
sbb
inc
or
mov
or
rcl
mov
add
dec
cmp
cs
mov
fadd
jl
sbb
rep
xchg
lahf
lods
add
std
mulb
mov
shll
jmp
dec
xor
jbe
sbb
rcl
xchg
push
subl
in
or
dec
arpl
xor
inc
gs
sbb
hlt
push
movsl
cmp
stos
push
test
cmp
xor
andb
out
push
fdivrl
pop
push
lahf
outsb
mov
aad
dec
inc
push
in
leave
mov
pusha
int
cmp
and
das
rcr
out
iret
push
or
aaa
sub
dec
fmulp
dec
fsubrs
lods
loope
mov
mov
rol
out
pop
cmp
jp
sbb
arpl
mov
dec
imul
add
in
xor
push
les
adcl
aas
pop
icebp
mov
shll
inc
inc
adc
rcl
add
or
push
push
pop
fildll
dec
es
fcmovnb
test
inc
loop
xchg
into
xlat
lods
mov
into
movsb
jae
sub
movsl
dec
adc
clc
mov
jno
andb
std
mov
int3
sbb
mov
fisubl
push
jge
inc
outsl
dec
xlat
inc
rorb
adc
or
sub
ja
subb
pop
push
out
inc
dec
cwtl
repnz
cmpsb
pop
mov
insb
pop
negb
in
push
imul
and
dec
popf
mov
inc
in
add
xor
jae
lret
push
bound
push
jnp
pop
addr16
rcrb
sbb
jnp
rep
adc
pop
ds
outsb
out
mov
lods
mov
mov
pop
mov
mov
xchg
mov
xor
mov
and
ret
andb
push
mov
push
imul
call
insl
movsb
mov
dec
mov
and
jp
fildl
es
inc
sbb
push
ss
pop
in
shlb
mov
push
jle
mov
decl
jbe
sub
jo
aad
popf
lock
dec
roll
inc
sub
mov
xchg
out
movsl
and
pop
cmp
outsl
aam
imul
test
sahf
movsb
stos
sub
xor
push
or
sub
mov
inc
mov
cmp
cwtl
pop
cmc
leave
int3
push
test
sbb
inc
adc
movsl
cwtl
pop
mov
push
pusha
lods
mov
scas
popa
and
push
popa
dec
sbb
dec
daa
and
xchg
call
ja
lock
adc
les
mov
fistl
lea
pop
lds
xlat
loope
xor
out
aas
fildl
sub
leave
xor
xchg
inc
out
xchg
test
xor
cs
fiadds
scas
cld
push
insb
xchg
leave
fdiv
cltd
sbb
inc
cmp
lahf
jmp
icebp
rcr
stos
jmp
push
or
add
out
cli
sbb
mov
and
sahf
fnstenv
xor
push
and
xchg
adc
jmp
sbb
aas
insl
xor
aad
xor
push
add
fwait
xor
shrl
sub
out
xchg
or
pop
lcall
stc
inc
inc
sub
sbb
sbb
ret
dec
xlat
loope
or
adc
lea
test
xor
repnz
jle
or
aas
dec
sbbb
add
mov
clc
mov
or
xabort
lahf
out
and
inc
xchg
adc
fs
or
out
sarb
mov
pop
jae
xchg
fnsave
jmp
pop
lahf
adc
adc
aas
adc
cmp
xchg
ljmp
out
andl
enter
cwtl
cmp
inc
enter
add
pop
mov
adc
leave
or
fnsave
ds
outsb
ds
clc
outsl
insb
jecxz
cmp
xor
mov
add
dec
xchg
xchg
add
xchg
mov
ret
mov
sbb
shl
push
xchg
add
cmpsb
mov
jo
adcl
jno
loopew
stc
xchg
mov
adc
lea
mov
enter
dec
cld
lcall
cmpsb
sbb
ficoms
inc
je
push
jge
bound
enter
mov
inc
fstpt
addr16
cltd
pushf
clc
jae
push
push
and
push
fistpll
popl
or
das
cli
lret
rcrb
pop
jmp
inc
outsl
ret
rcll
mov
cmp
cmp
add
imul
mull
push
jmp
mov
add
pop
rep
inc
out
jae
loopne
popf
iret
fwait
adc
inc
pushl
and
aam
push
and
popa
mov
xchg
adc
sbb
and
jae
shl
sarb
push
xchg
lcall
push
adc
pop
jp
mov
popf
pop
rcr
jo
mov
lods
repz
dec
fisubl
stos
stos
xor
jmp
test
lret
in
push
test
push
insb
into
pop
inc
or
mov
and
movsl
pop
inc
mov
dec
bound
inc
out
rcr
out
jecxz
or
cmpsl
add
sub
mov
cmp
ret
stos
jo
sub
cmc
mov
jmp
pop
sbb
pop
push
lock
mov
mov
into
cmp
cmp
iret
inc
sbb
dec
addr16
enter
mov
call
sarl
addr16
das
jecxz
rcrl
dec
add
mov
maxps
jle
cs
mov
testb
push
jp
daa
mov
ljmp
subl
icebp
sub
aaa
push
or
push
jno
sub
sub
adc
cld
inc
push
push
cmpsb
inc
cmp
jnp
lea
ljmp
pusha
movsb
jecxz
rorb
mov
pop
inc
faddl
xchg
mov
dec
cs
rcl
rcll
imul
cmp
mov
lcall
push
ljmp
push
push
test
incb
jnp
and
insl
lahf
adc
jae
mov
sahf
cs
inc
repnz
stc
push
push
sub
add
popf
mov
loopne
pop
mov
mov
jno
shll
fdiv
xchg
in
das
fwait
sub
mov
push
inc
out
mov
hlt
dec
rcr
cmp
add
loop
mov
andl
xchg
mov
or
addr16
into
enter
jp
stos
lret
cs
push
fists
ljmp
push
sarb
cmp
insl
push
xchg
mov
ljmp
int
pop
push
out
and
and
iret
xor
out
pop
div
push
and
test
xor
data16
je
pop
icebp
ljmp
loope
fldenv
and
pop
mov
push
cmpsl
aas
xorl
not
jecxz
stc
loope
xor
dec
test
fsub
dec
dec
lock
stos
cmp
xor
jecxz
mov
out
icebp
xchg
jmp
test
add
push
mov
fwait
pop
andl
inc
mov
inc
aad
mov
pop
dec
movsl
push
mov
push
sbb
insb
inc
shlb
je
jb
sti
push
fmuls
fstp
mov
sbb
mov
lods
dec
es
xchg
ret
pop
sbb
sub
repnz
jne
int
cmc
or
mov
xchg
fnsave
fdivrl
fs
and
into
fiaddl
loop
xlat
xor
imul
std
pop
jb
cmp
insb
mov
xor
test
jno
xchg
in
mov
fdivs
adc
lcall
cwtl
pop
push
in
nop
pop
ror
cld
lcall
in
push
pop
fs
add
pop
dec
mov
ret
mov
pop
xor
mov
cmp
call
test
cmp
and
push
shl
adc
cs
stos
stos
sahf
fstps
subl
jp
loop
sbbb
leave
pusha
push
inc
xchg
mov
ja
test
lahf
loop
insl
fnstcw
fildl
fsubr
outsl
in
iret
sbb
stos
and
sub
lret
int
mov
lds
in
cmpsl
pop
push
adc
daa
scas
mov
fistpll
popa
mov
inc
call
jae
sbb
ret
dec
push
or
arpl
dec
or
mov
lret
pop
fiaddl
or
int
repnz
push
out
or
sbb
sub
sbb
dec
pop
lret
add
enter
jecxz
inc
add
ja
sbb
pop
cmp
mov
inc
addr16
int
inc
test
cs
jl
push
xor
cmp
sub
cmp
and
push
add
or
inc
jae
xchg
int
lahf
dec
push
inc
add
mov
dec
adc
and
push
push
stc
sub
xor
lock
fwait
sahf
mov
out
add
mov
mov
pop
mov
lods
ljmp
testl
incl
shrb
cltd
pushf
test
in
scas
sub
mov
mov
adc
int
or
cmp
sbb
pop
jo
mov
jns
stos
or
aas
cmp
adc
mov
je
and
fdivrs
clc
loopne
push
xchg
fdivrl
je
int
sbb
sbb
roll
sbbl
cmp
imul
daa
cmp
adc
dec
lods
ja
loop
sub
shrl
fdivs
sarb
clc
jne
sti
mov
mov
test
into
insb
enter
mulb
pop
push
out
pop
mov
dec
repz
loopne
dec
mov
inc
mov
cmc
cmp
dec
mov
movsb
insl
mov
jle
cwtl
vphaddbw
data16
movsb
cltd
or
icebp
ja
xchg
jge
push
mov
cs
inc
lods
xchg
inc
in
add
mov
pop
lock
in
ret
repz
lock
push
aad
mov
or
add
pop
shrl
jo
fcmovnb
data16
gs
inc
push
mov
lcall
or
pop
dec
push
cmp
cmc
outsl
test
rcrl
std
pop
pushf
dec
outsl
push
popa
outsl
arpl
fisttpll
mov
inc
sbb
adc
pop
fnstenv
pushf
xor
stos
stos
data16
sti
sti
pusha
clc
mov
xlat
mov
loop
xchg
and
subb
cmc
xor
in
decl
xor
mov
lods
aad
fldt
popl
clc
mov
stc
mov
jo
repnz
or
test
pop
jecxz
cmp
fistps
xor
daa
mov
pop
nop
inc
fnstcw
adc
cmp
ds
mov
pushf
or
stos
mov
rcrb
testl
dec
ret
mov
pop
mov
jae
inc
push
cmp
test
xchg
std
fisubl
adc
inc
into
xchg
sbb
jecxz
inc
jns
jge
iret
add
or
push
push
into
in
add
xor
shrl
inc
lods
cmpsb
outsb
or
mov
addr16
pop
cwtl
xor
push
jae
mov
or
inc
test
xor
das
mov
sbb
pop
mov
test
pushf
sub
in
mov
popa
or
insb
fcomip
popf
test
sub
call
std
mov
xchg
mov
pop
xor
inc
xchg
pop
scas
popf
xchg
mov
dec
dec
in
jns
mov
hlt
shrb
xor
nop
insl
cmc
sub
add
fstpt
out
mov
addr16
or
mov
mov
inc
or
adc
jbe
cltd
xor
pop
lds
arpl
dec
jecxz
js
xor
adc
and
inc
ficompl
loope
mov
pop
call
cld
or
adc
loope
xor
insb
jbe
sahf
inc
outsl
rolb
push
data16
cmp
pop
sarb
sub
push
in
sub
fldt
loopne
clc
enter
mov
cmp
mov
pop
out
nop
pop
shlb
outsb
int
mov
out
inc
fdivl
outsl
jecxz
mov
jmp
lds
jo
ret
faddp
jecxz
or
mov
call
jo
jmp
cmpl
xchg
add
pop
push
in
xor
ret
xchg
push
inc
mov
popf
ja
and
mov
sbb
pop
or
sbb
sbb
push
cltd
cltd
jle
mov
andl
jecxz
mov
jae
sub
push
das
popf
std
loopne
pop
jb
mov
or
ret
sub
adc
add
arpl
jge
inc
pop
mov
cltd
sbb
lea
lret
insl
sub
cmc
xor
movd
cs
push
or
add
iret
sub
pop
add
dec
testb
mov
push
jmp
pop
stc
insl
sub
cli
add
dec
sbb
aam
jle
pop
xchg
lds
dec
xchg
jb
push
xor
adcl
sbb
pop
test
cmpsb
out
fs
inc
mov
fwait
xor
dec
js
faddl
cld
mov
inc
scas
cwtl
pop
xor
cmp
fcmovu
inc
or
mov
ja
int3
lret
shll
jae
lds
pop
sarl
je
mov
and
out
push
or
stc
cwtl
mov
adc
adcb
jl
mov
cmp
stos
in
mov
push
lcall
mov
icebp
mov
in
or
scas
daa
in
adcl
sbb
rolb
xor
dec
shlb
lds
rorb
lret
cmp
pop
adc
mov
subl
iret
sbb
movsl
sbbb
lds
dec
in
int3
adc
push
aaa
adc
in
aas
pop
scas
cwtl
xor
into
in
out
test
mov
js
fs
les
test
test
cmc
push
or
cmp
mov
push
push
mov
fnsave
shlb
nop
adc
xor
fsubs
cmp
hlt
cmp
xchg
pop
push
fldlg2
loop
and
jl
add
insb
cmp
je
or
push
mov
mov
xor
sub
mov
cmp
repz
or
cld
ret
push
aad
nop
std
cmpsl
ds
mov
dec
pop
pop
cmp
data16
ret
hlt
xchg
sarl
scas
in
xor
mov
cmp
fistps
mov
shl
pop
add
dec
scas
mov
pop
xor
or
xor
inc
clc
es
insl
and
out
xchg
imul
test
mov
and
out
or
iret
push
jbe
dec
jecxz
cmp
xlat
int
orl
pusha
cmp
jg
push
add
lods
mov
iret
adc
enter
or
loop
mov
leave
cmp
push
jo
test
aas
rorb
jmp
cmp
pop
adc
arpl
fmul
sub
pop
call
mov
fdivrl
adcb
clc
nop
std
es
subb
aam
or
mov
lahf
testb
push
addl
cmp
push
inc
inc
popf
add
cmpsb
out
scas
loopne
jbe
pslld
pop
lcall
push
loop
lcall
loopne
inc
repnz
jmp
bswap
cltd
fcomps
fs
mov
sub
push
jmp
mov
jmp
jne
push
xchg
and
pop
or
arpl
lahf
sbb
and
push
cld
inc
mov
xor
aam
ficoml
subb
call
mov
jne
in
push
loop
sbb
or
sub
aam
mov
or
in
xchg
xchg
pop
lcall
or
xchg
jl
xchg
or
aas
aad
dec
dec
or
shrl
inc
inc
sbb
push
push
xorl
in
xor
sub
and
pop
gs
add
clc
fcomps
jns
stos
scas
mov
test
pop
adcl
xor
cmp
mov
push
xchg
xor
test
int3
out
jne
pushf
or
scas
jno
pop
fisttps
cmp
cltd
iret
sbb
rcrb
cld
loope
sub
mov
int
sub
pop
and
adc
sahf
xor
mov
repnz
in
mov
push
xor
mov
push
scas
dec
flds
movsb
lea
sub
popa
addr16
sub
add
scas
jp
int3
addr16
jnp
in
jo
mov
mov
jb
cs
rcrb
jns
movsb
pop
mov
mov
hlt
pop
movsb
adc
fldl
add
sub
add
push
jmp
in
lds
sbb
stos
mov
adc
dec
mov
cmpsb
out
adc
push
lds
jbe
mov
pop
subl
bound
insb
fidivl
adc
xlat
add
fcompl
fisubrs
cld
arpl
and
andl
sub
inc
fildl
and
add
sub
mov
in
dec
ja
cld
add
aad
sbb
sbb
add
jno
stc
xchg
fcmovnu
xor
push
push
out
lea
daa
xchg
call
pusha
and
imul
repz
xchg
mov
popf
hlt
pop
icebp
pop
xor
std
insl
jns
bts
adc
pushf
movl
popf
mov
lock
imul
enter
dec
in
mov
xchg
dec
sub
pop
cmp
xlat
lods
dec
frstor
repz
aad
cli
out
xchg
out
adc
les
push
ja
iret
mov
mov
inc
push
out
ja
int3
mov
mov
rcl
push
sbb
xor
gs
arpl
and
lcall
ret
out
stos
mov
fwait
out
outsb
xor
test
push
mov
movsl
es
leave
push
imul
inc
inc
fldlg2
mov
loopne
fidivrl
jb
enter
repz
lods
mov
adc
cmp
popa
push
outsl
xor
lds
stos
jae
in
ljmp
fnstenv
add
fnstcw
mov
test
insl
or
cmp
sub
shr
rol
pushf
out
aaa
dec
into
jecxz
push
daa
cmp
pusha
call
inc
out
mov
lds
xchg
das
filds
pop
lods
aas
and
testb
pop
add
sbb
mov
mov
cli
xlat
mov
out
pop
movsl
add
sahf
push
cli
fs
in
mov
les
pop
mov
fwait
dec
mov
jge
sbb
or
insl
mov
pop
jbe
mov
dec
xchg
and
push
xchg
rcll
mov
cmp
pop
cvtdq2ps
repz
pop
in
xchg
jb
popf
f2xm1
jle
cmp
data16
mov
lret
bound
les
push
lods
pop
fcomps
jmp
lret
jle
xorl
add
jae
jnp
in
pop
xchg
dec
mov
xor
stos
test
mov
or
out
cltd
jp
dec
or
dec
dec
xchg
sbb
stos
leave
loopne
or
lods
mov
push
mov
pop
repz
jle
mov
aad
mov
jle
insl
sub
movsb
adc
push
sarl
dec
xor
mov
cmpsb
sbb
pop
dec
add
push
rcrl
lahf
bound
lods
xorl
xor
aas
dec
lahf
mul
in
jns
ret
jbe
imull
mov
and
lock
xor
movsl
andb
insl
jnp
pop
insb
push
sub
mov
mov
gs
call
mov
mov
test
mov
addl
jae
ljmp
adc
lcall
push
outsb
enter
sub
mov
mov
aam
push
push
cli
jo
sbb
in
add
mov
roll
lea
test
cmp
xchg
loope
stos
cltd
adc
mov
push
mov
xor
sbb
jno
cmp
inc
cmc
cwtl
xchg
inc
repnz
or
mov
mov
push
or
mov
addl
pop
aaa
adc
jp
cmpsb
xchg
hlt
pop
sub
rep
outsb
xchg
pop
dec
sbb
jge
jae
clc
jo
jle
cltd
arpl
loop
clc
push
add
push
repnz
leave
pop
shrb
xchg
loope
sub
adc
mov
stc
insb
imul
outsl
xor
push
rorl
dec
jp
iret
pushf
fcmovnbe
test
pop
push
std
mov
add
mov
sbbl
mov
xchg
sbb
popf
cs
inc
sbb
lret
nop
inc
pop
shll
mov
fidivrl
mov
inc
dec
outsl
stos
cmp
rcrl
xchg
test
xchg
cltd
std
add
inc
push
daa
stos
mov
imul
jae
std
xchg
inc
adc
sbb
mov
clc
xorb
sub
pop
repz
inc
aam
repnz
mov
movsb
rcrb
push
push
scas
rclb
mov
rorl
scas
pop
jecxz
add
mov
xchg
popf
dec
setge
cwtl
sbb
mov
adc
cli
and
jle
mov
sbb
jmp
push
cmp
mov
sbb
outsl
or
push
scas
mov
pop
lock
repz
pop
xlat
pop
jecxz
jp
data16
push
mov
adc
dec
mov
jle
and
add
add
lret
mov
out
xorl
mov
test
inc
sbb
ss
cli
data16
inc
mov
pop
or
jo
sbb
mov
sbb
mov
xchg
push
mov
fcmovnu
push
push
xor
fistpl
dec
loop
pop
cmp
out
lds
imul
xchg
sub
les
cmp
lcall
sub
gs
lret
sti
lea
pushf
push
aas
dec
adc
call
lds
cmp
ret
outsl
scas
test
test
dec
inc
ret
lret
mov
cld
or
stos
cmp
loope
ss
out
testb
lret
jo
out
mov
lds
push
stos
sub
pop
cltd
pop
pop
push
push
jge
cwtl
das
insb
sahf
dec
mov
pop
push
hlt
negl
dec
dec
int3
sbb
in
in
adc
and
insl
sub
adc
aad
repnz
lret
repnz
dec
sub
arpl
cmp
es
add
shrl
cmp
testl
paddsb
pop
in
push
lea
jo
insb
daa
arpl
dec
add
push
mov
mov
or
lds
mov
cli
mov
fcmovnbe
lcall
repz
inc
pusha
subb
add
in
or
stc
push
decb
push
cmp
cmpsb
arpl
movsb
ret
xchg
pop
imul
xchg
jl
addr16
imul
adc
xor
lock
insb
jg
xchg
sbb
aam
ljmp
insb
enter
popf
adc
enter
lea
pop
fstpt
in
sbb
inc
mov
aaa
mov
fucomi
aaa
cmp
push
addr16
ss
mov
ret
hlt
cmp
das
ret
push
adc
pop
imul
mov
dec
pop
loop
cmpsl
fidivl
fisttpll
cld
mov
cwtl
push
jb
rcrb
iret
aam
xor
or
pop
neg
mov
sub
lret
jnp
mov
cmc
xchg
pop
ss
push
das
pop
push
sarb
pop
mov
add
lret
push
inc
mov
aam
repnz
and
lcall
xor
shrl
and
dec
jns
sti
adc
aaa
jne
push
fnstsw
stos
jae
pop
int
sub
jle
jmp
bound
mov
push
mov
sub
jge,pn
cli
mov
les
adc
idivb
gs
sbb
lcall
xor
jge
pop
mov
fsubl
jns
fistps
test
or
bound
push
push
aas
lds
add
mov
dec
insb
je
loope
lcall
xchg
xor
mov
mov
cmpsl
mov
sub
mov
outsb
mov
sub
cmp
push
ljmp
ss
add
xchg
sbb
lcall
jb
sbb
add
add
movsl
clc
adc
mov
sub
fisttpll
fldl
les
and
hlt
cmova
xor
xchg
stos
inc
test
lock
xor
inc
adc
mov
pop
sbb
jl
sub
inc
mov
nop
aaa
rcrl
nop
sarb
xchg
pusha
add
push
add
cmp
rcr
int
fbld
push
fldt
fsubr
nop
mov
test
aad
push
push
xor
push
fxch
adc
lods
dec
scas
call
pop
add
mov
mov
dec
icebp
scas
jl
andl
cmpsb
xor
pop
xor
lock
cmp
sub
inc
fcoms
sbb
les
mov
mov
mov
psubusw
pop
les
or
xchg
fucomip
fldt
xchg
inc
lock
and
dec
fbstp
or
jle
sub
enter
insl
cs
imul
push
jo
push
roll
lea
addr16
xchg
or
and
in
lea
aas
and
movsl
aad
ss
fisubl
dec
cmp
mov
jae
push
test
test
andl
bound
dec
dec
pop
pop
xor
push
push
call
sbb
lret
stc
or
xor
sahf
dec
add
scas
mov
lcall
ficompl
mov
shlb
clc
xchg
pop
jae
cmp
mov
rol
adc
pop
mov
mov
inc
sbb
daa
push
ffree
adc
or
cwtl
ds
push
push
int
or
adc
imull
scas
add
sbb
cmpsb
sub
pop
inc
push
int3
sti
mov
outsb
push
xchg
das
mov
dec
cmpsb
inc
add
cwtl
and
push
mov
cmp
cmpsb
jns
sbb
cmp
rcl
xchg
or
andb
jge
sub
push
pop
add
fcompl
and
in
inc
sbb
les
popa
fcompl
mov
sub
ljmp
adc
jmp
addr16
cmpsb
fldt
push
pop
lcall
ror
mov
push
addr16
lcall
mov
sub
mov
jmp
addb
adc
stos
adcl
mov
out
fs
popf
sbb
pop
aam
mov
bound
sti
stos
in
dec
int3
mov
inc
or
dec
or
mov
hlt
in
dec
and
dec
shll
bound
mov
jbe
in
and
mov
test
aas
pop
dec
mov
arpl
popa
jns
inc
inc
pusha
jo
roll
or
dec
sub
out
out
dec
loope
inc
jae
fsubl
adc
pop
mov
xor
jle
sbb
pop
mov
aad
xor
dec
adc
cmp
cld
sahf
push
in
sub
je
mov
fucomip
imul
jp
frstor
pop
and
or
sbb
sub
aam
mov
push
adc
pushf
lahf
add
add
and
sub
lds
lock
adcl
mov
fadds
mov
lret
cltd
test
jp
ja
cmp
loop
pop
cmp
aad
sti
sub
enter
jns
in
enter
jns
push
pop
jne
push
std
lcall
insb
fisubs
cmp
or
popf
xor
imul
leave
push
xchg
or
fldenv
les
fs
mov
shlb
out
jp
jb
jle
and
popa
push
push
mov
fstpl
sahf
xor
xchg
nop
jnp
dec
or
sahf
test
jae
push
lds
cltd
mov
add
insb
add
pushf
xchg
scas
out
xor
mov
sub
xlat
xor
imul
icebp
pop
push
movsl
inc
int3
stc
cmpsl
icebp
cmp
outsb
pusha
sub
jb
imul
stc
nop
mov
pop
je
adc
sub
jno
addb
pop
mov
int
xlat
jbe
sbb
ja
push
test
push
mov
push
sbb
fbstp
insl
cmc
mov
shlb
enter
add
dec
ljmp
adc
fdivrp
jb
mov
inc
pop
outsl
call
ljmp
and
sub
in
into
arpl
popa
lret
insb
std
jo
and
pop
mov
lahf
jb
xorb
push
into
pop
pop
xlat
bound
xchg
jo
dec
dec
ret
rorb
idivb
bound
lea
enter
movsl
icebp
or
xchg
dec
repz
fisttpl
xchg
mov
adc
outsb
xchg
pushf
cli
cltd
adcl
xor
sbb
iret
std
jnp
in
mov
inc
into
push
rolb
int3
jae
loop
jne
xor
ss
xchg
mov
push
fldl
inc
cmp
jb
mov
hlt
inc
mov
add
adc
cltd
stos
push
and
data16
mov
sbb
or
in
inc
fists
cwtl
scas
clc
inc
insb
mov
jp
cmp
jno
jae
sub
mov
mov
inc
mov
cmp
cs
sbb
mov
in
shl
fs
popf
inc
fnstsw
ror
leave
imul
shr
add
xor
jmp
stc
xchg
aad
sbb
shrl
push
ljmp
push
leave
mov
out
xchg
in
dec
sti
mov
cmp
jns
sahf
sbb
sbb
mov
sbb
or
jecxz
mov
cmpsb
inc
inc
fdivl
ja
sbb
sarb
pushf
xor
sti
cmp
ljmp
mov
dec
adc
imul
inc
fstpt
pop
repnz
call
test
test
or
xchg
cmp
and
cwtl
cmp
or
and
xchg
in
lret
adc
das
test
jle
test
idivb
insl
xor
jecxz
push
sub
xchg
pushf
pop
pop
dec
test
iret
clc
aam
jnp
and
xchg
push
outsb
add
dec
leave
pusha
mov
gs
pop
andb
mov
cwtl
das
mov
lds
iret
outsw
iret
enter
shlb
insb
movsl
cmp
decl
les
hlt
dec
loopne
addr16
push
xor
mov
ret
mov
push
in
imul
pop
pop
inc
sbb
and
test
std
mov
or
mov
or
iret
add
add
dec
mov
cwtl
test
int3
bound
dec
or
int
adc
xor
lcall
xor
or
lock
jecxz
xor
stos
popf
stos
mov
scas
sub
xlat
pusha
dec
dec
and
loop
add
xchg
jb
sbb
fwait
sbb
movsl
lods
inc
fnsave
or
ret
push
in
shll
insb
aaa
dec
call
xor
fnstcw
movsb
sub
filds
mov
mov
ret
jns
and
mov
xchg
jo
ljmp
push
cld
xor
add
sub
imul
pop
std
adc
cmp
js
mov
cmp
out
inc
lds
aad
pusha
dec
in
and
es
sbb
int
cmc
insb
add
xor
xchg
lock
push
inc
icebp
pop
cld
data16
jmp
or
sub
mov
and
lds
cli
push
ret
inc
fsub
je
xchg
xor
std
stos
xor
repz
addl
cmp
pusha
stos
cltd
mov
mov
lahf
and
xlat
mov
outsl
repz
adc
pop
push
xor
pop
cld
mull
imul
dec
bound
pop
jae
outsl
pop
ss
clc
jp
sarl
pop
fcomip
fwait
xor
inc
fsubrs
ss
pop
cmpsb
out
insl
add
jl
xlat
outsl
inc
cmp
xor
lea
cmp
jl
fisubs
mov
fmuls
add
mov
jmp
sub
xchg
jb
bound
xchg
lods
xor
aad
jns
xor
out
sub
or
hlt
adc
scas
repnz
iret
cmp
xlat
mov
or
popa
mov
imull
stc
or
push
adc
add
xchg
adc
or
or
sbb
jmp
shlb
bound
and
ret
addr16
sbbl
xchg
loope
iret
test
mov
movsb
sbb
cltd
or
push
or
mov
adc
sub
mov
enter
fadd
flds
sbb
sbb
test
repnz
scas
cs
fildl
lahf
mov
xchg
pop
shrl
adc
lahf
or
mov
xchg
pop
aam
mov
lods
or
out
shll
xor
adc
mov
sbb
mov
shl
mov
arpl
xor
mov
mov
jle
test
jmp
nop
add
adc
mov
cltd
mov
mov
lods
cmp
scas
jae
flds
mov
add
pop
jnp
mov
or
add
lcall
pushf
lock
fadds
sub
inc
jle
mov
jns
sub
sub
jmp
aam
jns
push
jb
adc
add
std
or
cmpsb
xor
out
outsb
xor
shll
xor
pop
xor
push
arpl
gs
push
loope
cmp
inc
xchg
xor
jne
std
cmp
xchg
sub
bound
in
dec
inc
mov
pop
scas
or
mov
int
push
and
lcall
dec
inc
push
cmpsl
mov
add
xchg
loopne
aam
mov
idivl
push
sbb
pop
hlt
xchg
arpl
mov
js
pop
cwtl
in
add
mov
jae
test
inc
push
js
pop
xor
add
mov
stc
popf
cmpb
jmp
jmp
in
cwtl
push
dec
fdivrp
jnp
sub
inc
fists
mov
sti
xchg
in
xchg
cmp
ficompl
mov
loope
mov
iret
test
popa
pop
mov
in
scas
mov
call
push
xchg
std
lods
xchg
scas
sub
add
adcl
cmp
ss
jo
push
pop
aam
lea
mov
lds
jle
mov
out
into
dec
add
insb
lahf
sbb
mov
in
test
ret
jns
movsb
mov
sahf
xchg
shlb
in
paddsw
popf
out
and
pusha
stc
sub
popf
hlt
fsubl
dec
out
cmpsl
push
movsl
adc
inc
push
cmpsb
lcall
mov
stos
inc
fld
xchg
out
and
testb
and
jmp
add
mov
jno
les
je
pop
outsb
lea
add
fildl
mov
jecxz
pusha
mov
decb
in
in
dec
adc
insl
aad
mov
pop
adc
mov
ljmp
mov
subb
popf
arpl
cmpsb
mov
inc
pop
add
inc
imulw
mov
mov
aas
mov
or
cmp
les
adcb
push
or
mov
popa
jmp
push
xchg
std
pop
xor
pop
add
or
dec
lods
repnz
sbb
push
lock
adc
pop
lret
lea
push
adc
mov
push
push
xor
mov
pusha
inc
fnstsw
test
scas
fiaddl
adc
nop
and
add
or
mov
ficoml
test
sub
xor
or
or
jp
mov
or
lods
mov
aas
testb
pop
xor
dec
pop
and
pop
sub
leave
pusha
stos
xor
lds
das
pop
sahf
rcrl
in
loop
and
push
loopne
mov
or
and
dec
loope
inc
add
lods
ret
out
mov
fadd
jb
sarl
int
add
add
ljmp
jmp
je
dec
loope
xlat
popf
add
adc
fimuls
das
std
jl
pop
out
lcall
sub
mov
sahf
inc
scas
in
push
arpl
or
cmpl
flds
jp
out
ror
push
push
mov
int
push
lea
sub
pop
fwait
jge
addr16
in
aaa
mov
lds
xchg
mov
aam
add
addr16
cltd
xlat
jae
dec
lret
sub
mov
sbb
push
jge
fwait
inc
sbb
imul
lds
add
sbb
add
mov
mov
pop
testl
mov
imul
inc
stos
and
sarb
test
pop
push
fists
pushf
lea
dec
sarl
les
add
dec
call
mov
bound
xlat
jo
mov
sbb
mov
repnz
ss
divl
xchg
and
mov
sbb
xchg
shlb
mov
outsl
inc
inc
sbb
mov
fdivrl
cmpsb
ds
or
pop
rorl
pop
bound
mov
and
ret
mov
imul
stos
dec
add
ret
in
insl
xchg
mov
pusha
add
adc
xchg
in
lods
inc
pop
mov
iret
sarl
inc
into
mov
loopne
fcoml
dec
in
sbb
mov
insl
mov
mov
aad
push
sbb
and
mov
addr16
xor
mov
xchg
addr16
fdivs
shr
mov
and
scas
push
mov
push
iret
iret
test
leave
mov
mov
mov
ljmp
and
movb
stos
mov
lock
lods
inc
lea
lret
ja
jle
cwtl
mulb
add
mov
insb
notb
and
ret
cmp
lret
jle
mov
xchg
pop
sub
test
push
inc
leave
cmpps
or
mov
push
cmp
jmp
inc
pop
adc
cmp
loop
xchg
jmp
call
cmp
mov
or
inc
movsl
add
ja
dec
or
lcall
jnp,pn
je
in
sub
idivb
add
lock
cs
dec
mov
fildll
mov
cmpsb
data16
sbb
cld
xchg
clc
fwait
pop
mov
xchg
sbb
cmpsb
push
lret
cmp
test
cmp
ror
cmp
or
inc
out
stos
in
push
das
mov
popa
clc
sub
add
ss
mov
ljmp
xchg
adc
pop
sub
stc
adc
fildll
push
fadds
mov
xchg
adc
dec
mov
addr16
push
xchg
cmp
call
loopne
mov
gs
pop
mov
mov
xorl
jmp
jle
std
push
pusha
add
mov
sub
cmp
sub
xor
cli
aam
sub
mov
pop
jbe
or
mov
fimull
in
cmpsb
adc
mov
loope
inc
mov
sub
push
dec
pop
jmp
daa
js
popa
inc
out
jae
mov
mov
jle
xor
sbbb
in
push
pop
cmp
testl
add
sahf
sub
mov
xor
inc
jae
les
movsl
aaa
loopne
add
push
int3
test
cmp
shr
jns
daa
repz
and
sbb
fidivs
cmp
out
inc
insl
cmp
hlt
repnz
das
jp
mov
add
cmp
pop
fmul
and
mov
add
add
insl
cmpsl
mov
mov
push
insl
jne
sahf
xor
fildl
jbe
jno
cs
sbb
icebp
test
xchg
inc
xlat
dec
aaa
imul
loopne
roll
fldcw
aam
divl
bnd
and
into
push
jge
jmp
cltd
in
jbe
mov
add
mov
out
adc
in
adc
cmp
lea
adcb
push
aaa
int
cs
mov
jb
lret
mov
rclb
jl
and
push
push
jp
das
push
mov
add
and
pslld
test
jmp
xor
roll
push
dec
imul
imul
or
push
imul
or
hlt
mov
mov
mov
inc
inc
jbe
dec
mov
aad
shll
sahf
push
xchg
or
mov
adc
stos
int
fsubrs
out
cmc
push
dec
sbb
mov
jecxz
rcll
dec
cmp
mov
cmp
dec
cmp
jecxz
mov
mov
push
and
shl
jns
push
addr16
cs
nop
cmpsl
mov
add
lods
js
or
mov
push
sub
insl
jp
aam
xchg
add
inc
in
jne
sub
popf
or
push
mov
push
pop
inc
leave
sub
repz
and
cmc
dec
test
xchg
dec
cmp
test
xor
xchg
in
sbb
xor
imul
roll
xchg
out
or
dec
icebp
enter
jecxz
xchg
xorb
xchg
push
sbb
cmp
add
repnz
mov
inc
cwtl
push
cmp
imul
das
push
xor
in
xchg
xchg
push
incl
ret
mov
loop
jbe
inc
enter
xchg
sub
mov
jmp
mov
and
fwait
shl
dec
sbb
call
mov
es
sahf
jl
jge
jb
aas
mov
les
or
jg
adc
inc
bound
outsb
lock
movsb
and
dec
cmpsb
lds
shrb
dec
sti
ds
jo
xchg
cs
jne
cld
in
dec
xchg
and
pusha
mov
pop
cmp
xlat
add
mov
das
outsb
jno
cmp
mov
std
sub
push
add
mov
pusha
dec
ficomps
mov
out
mov
adc
jp
pusha
aaa
cld
jg
imul
stos
and
cmp
mov
xor
xchg
test
push
xor
mov
fidivl
xor
add
pusha
addr16
dec
ljmp
pop
dec
int
popf
jns
and
cltd
lcall
and
sub
outsb
mov
or
push
insb
jns
sbb
iret
loop
adc
mov
sub
aad
mov
mov
or
or
in
inc
adc
xchg
push
mov
lret
enter
fldcw
lahf
popa
in
push
sbb
adc
cs
test
lds
cmp
mov
mov
into
fwait
int3
pop
cmpsb
add
xchg
loopne
mov
sbb
and
or
mov
push
xor
cmc
int3
inc
test
mov
cmp
dec
mov
pop
cs
mov
xor
daa
popa
out
adc
cmc
outsb
mov
ss
pop
sub
pop
add
scas
mov
add
test
idivb
inc
and
mov
lea
repnz
dec
lds
insb
mov
stc
cmpl
addr16
fisubrl
jmp
inc
jmp
pop
sbb
mov
out
int
nop
push
cwtl
inc
int
xchg
push
add
fs
stos
xlat
jmp
push
aad
inc
icebp
xchg
lods
adc
jbe
push
mov
cmpsl
stos
es
sbb
cwtl
dec
nop
xlat
and
xor
cmp
inc
xchg
pop
out
or
dec
pop
jns
push
mov
cmpsb
push
adc
addr16
jne
fiadds
sahf
sbb
xchg
or
xchg
sub
pop
ret
cmp
rcll
jle
lock
stos
push
mov
inc
popa
mov
push
cmp
push
jl
mov
sub
push
push
mov
outsl
out
sub
dec
imul
in
enter
addr16
xor
rcr
mov
je
les
lds
scas
push
out
out
xor
out
out
scas
jg
inc
popf
rolb
mov
jp
sub
popa
xor
out
mov
aaa
inc
add
cmp
xor
lahf
in
into
fst
jmp
and
and
std
lea
mov
and
or
cli
mov
push
lcallw
shrb
out
xchg
jo
add
dec
and
jg
sahf
nop
sub
mov
lret
jg
hlt
pop
stos
std
inc
js
add
fimull
nop
ss
inc
faddl
mov
iret
adc
xchg
nop
push
dec
adc
rcrb
and
mov
jmp
push
cwtl
ja
fs
jmp
xchg
sbb
cmp
shl
sbb
fs
mov
rorl
add
dec
dec
inc
dec
mov
xor
sub
mov
arpl
push
fdivrl
lods
stos
mov
fisttpl
jecxz
enter
fcmovnb
bound
outsb
inc
sbbl
sbb
dec
hlt
mov
sub
and
sub
sbb
testl
popa
outsb
xchg
lret
add
stos
insl
fldenv
dec
cwtl
xor
popf
jnp
push
mov
cmp
popf
xorl
out
sbb
sbb
xor
fldt
push
mov
fbstp
push
and
mov
js
push
add
and
dec
or
jle
imul
jo
mov
mov
jge
or
jp
ss
sub
cmpsl
rcr
jnp
aam
insl
pop
insb
pop
cmc
push
cwtl
add
push
push
mov
int3
push
cmp
lock
or
mov
popf
push
pop
or
ds
das
vpand
gs
cltd
mov
lret
dec
mov
shrb
ljmp
sbb
mov
fbstp
add
mov
add
inc
pop
adc
aas
mov
faddl
jmp
mov
insl
jge
lods
push
imull
icebp
sbb
mov
in
test
das
sub
or
call
dec
nop
jmp
adc
xchg
in
ja
sbb
add
daa
push
call
fnstcw
jl
leave
mov
dec
xchg
fildll
loope
divl
je
rcrl
or
pop
ja
lahf
testl
pop
imul
or
test
roll
test
jb
sbb
out
addb
iret
enter
stos
es
mov
push
call
mov
outsb
sarb
cmp
insb
ljmp
loopne
push
dec
rolb
test
push
andl
insb
sarb
sbb
xlat
bound
insb
js
dec
int
xchg
sbb
outsl
jno
inc
xor
cltd
mov
fnstenv
jmp
movsb
and
cmpsb
adc
jb
mov
mov
cmp
xchg
pop
lock
jp
and
push
fucom
jl
aas
js
jge
xorb
sub
sbbb
pop
adc
mov
pusha
out
mov
push
and
test
add
sbb
imul
add
dec
stos
hlt
mov
inc
stos
nop
jp
sti
fdivs
dec
lahf
push
and
lret
jnp
push
push
mov
fnsave
and
inc
dec
leave
mov
add
push
inc
sbb
inc
jmp
add
xor
sbb
fadds
leave
bound
arpl
into
fs
jmp
inc
cmp
or
loope,pn
rclb
mov
test
pushf
aam
mov
ret
vmovdqa
mov
dec
sbb
dec
popa
push
cli
push
xchg
mov
sub
rcrl
jnp
cmp
or
xchg
arpl
dec
push
mov
cmpsb
pusha
xlat
call
mov
adc
inc
fnstsw
xlat
orb
loopne
pop
cmp
adc
pop
je
mov
into
dec
fdivrs
cmp
xchg
or
sarl
add
and
fs
xor
pop
jbe
cmpl
les
mov
fldt
scas
adc
xadd
xchg
xchg
ja
or
cmp
sbb
std
push
mov
pop
jne
adc
cmp
sub
into
lods
mov
sbb
sbb
cmp
mov
ficoms
push
out
aaa
imul
xor
sub
stc
or
mov
imul
sub
int3
and
mov
insb
lods
ret
repz
repz
test
mov
push
xlat
cli
xchg
lds
adc
sub
cld
sub
leave
mov
push
fwait
push
sub
lock
fwait
add
and
loope
cmp
push
sti
pop
stos
lret
jns
jge
cmpsw
xchg
ret
mov
pop
mov
sub
inc
sbb
cmp
outsl
push
push
cwtl
and
jns
inc
cmpb
jne
dec
pop
mov
lret
mov
pop
push
or
cmp
or
int
inc
xlat
xor
scas
push
or
cmp
lahf
push
mov
inc
push
mov
mov
xor
pop
jp
into
fadds
xchg
pusha
and
sbb
push
lcall
and
inc
jne
push
fsubrs
aam
repz
out
cmp
dec
xchg
add
test
lret
mov
std
jo
sbb
xchg
jl
push
lea
je
sub
pop
sbb
dec
outsb
call
aad
in
orl
test
xlat
insb
out
sti
cmpsb
pop
ret
rorl
xchg
mov
adc
mov
mov
out
rolb
inc
and
fs
mov
pop
movsb
repnz
sbb
xchg
insl
inc
shl
sahf
aas
stos
out
pusha
out
ret
sub
in
and
lcall
xor
shl
cmp
sub
pop
pusha
dec
add
mov
push
inc
fdivrs
add
addr16
aam
adc
imul
addr16
inc
mov
push
xlat
mov
lods
or
data16
push
xchg
fbstp
xor
inc
adc
test
arpl
insl
leave
ds
sti
xchg
jae
adc
xor
sbb
js
xchg
stc
ja
xorl
sub
push
inc
rcrb
xchg
adc
aas
xchg
pop
das
push
popa
addr16
test
inc
fdivrs
fcompl
mov
dec
add
movsb
dec
mov
mov
scas
xchg
add
pushf
imul
cmpsb
loope
mov
jae
xchg
push
mov
fidivl
ss
jnp
leave
jae
xchg
and
push
xor
mov
pop
rol
lock
mov
fstl
sub
cli
jne
lret
jns
add
sub
sarl
pop
sahf
in
movb
sbb
dec
jp
test
hlt
shr
testb
cmp
lahf
push
jo
fsubrl
int
jg
nop
fidivs
mov
pop
mov
push
nop
insb
or
mov
mov
negl
movsl
cmp
addr16
push
push
das
ror
fimuls
pushf
and
inc
push
sbb
sbb
ljmp
inc
add
ret
aam
mov
das
out
push
push
pop
push
fidivs
pushf
mov
fldenv
jno
in
mov
push
lods
cmp
rcl
dec
dec
mov
hlt
imul
sub
sti
shll
push
data16
enter
pop
ss
lcall
push
imul
dec
inc
jmp
insb
sbb
push
dec
mov
lds
pusha
push
lods
push
adc
popa
scas
xchg
ja
add
cli
pushf
int3
mov
jo
jno
std
jge
cmpsl
jge
mov
inc
test
addr16
test
lret
push
xlat
cs
ja
test
or
jp
mov
inc
xor
mulb
ret
pop
cwtl
arpl
or
test
jmp
jle
rolb
pop
std
rcll
roll
push
inc
repnz
push
push
out
enter
jmp
rorb
out
aam
sbb
loope
mov
adc
sub
push
daa
pop
rcrb
jnp
jo
lds
ljmp
jns
add
stc
mov
push
lcall
push
ljmp
scas
jge
jg
cld
adc
xorb
pop
adc
scas
xchg
popa
jne
mov
movsl
in
push
lahf
dec
imul
test
std
and
xor
aaa
mov
repz
xor
add
rcrl
sarb
clc
fists
adc
fnstcw
gs
stos
ficoms
pop
cld
push
xchg
add
cwtl
xchg
insb
mov
pop
repz
or
adc
and
jo
or
inc
nop
xchg
frstor
repz
popl
pop
jp
sub
cltd
add
mov
popl
out
cmp
ret
insb
jg
sbb
inc
xor
mov
pop
aaa
push
out
arpl
int
and
jecxz
cli
adcb
pop
add
xor
add
fstpl
repz
jle
test
stos
push
jne
push
adcb
movl
aam
push
jmp
xchg
xchg
mov
adc
mov
adc
ljmp
popf
xchg
dec
mov
das
xchg
push
cltd
xchg
iret
push
fs
cmc
and
xchg
fs
popf
jb
push
mov
pop
dec
inc
test
sbbb
test
aad
inc
test
sbb
movsl
inc
cmp
lret
out
sbb
in
mov
into
xor
jae
scas
push
fcmovu
xchg
adc
std
and
push
and
std
notl
cmp
mov
mov
adc
pop
test
lret
mov
add
adc
fsts
mov
mov
mov
in
pop
mov
xchg
nop
push
inc
leave
pop
pop
xor
faddl
pusha
ljmp
testb
dec
mov
loop
and
shlb
mov
jnp
sahf
loope
xchg
and
xchg
js
enter
or
nop
mov
inc
rclb
mov
cmp
push
scas
js
push
xchg
ret
mov
pop
repnz
push
jbe
test
jecxz
repz
in
pushf
out
xor
inc
jle
sbb
movsl
shll
fdivr
push
or
subb
inc
js
loopne
fidivl
and
inc
cmpsl
and
mov
mov
mov
mov
and
inc
xchg
cmpl
and
jns
fs
inc
in
mov
int
push
xor
mov
add
jmp
lds
loope
mov
adc
add
clc
in
push
mov
push
push
fcoms
scas
leave
cmp
mov
fildl
cmp
sub
popa
lret
mov
and
fbstp
inc
xor
mov
loopne
ss
cltd
push
dec
loop
mov
imul
dec
add
mov
pop
shrb
faddp
es
push
enter
inc
xor
bound
push
test
add
lea
scas
dec
pop
sbb
pushf
adc
pusha
ret
bound
push
icebp
mov
dec
mov
inc
sbb
mov
in
fcoms
mov
stc
push
test
vmaxss
aad
in
add
jns
dec
loopne
pop
mov
lds
xor
shlb
mov
test
cmpsb
movsl
popf
xchg
adc
mov
cmpw
jno
and
cmp
rclb
jnp
inc
mov
sub
addr16
cwtl
sub
cmp
xor
cwtl
sbb
cmp
daa
dec
cmp
sarl
mov
repz
and
cmp
add
adc
adc
dec
push
int
xchg
cmp
adc
cltd
inc
popa
leave
inc
scas
xchg
and
bswap
mov
add
mov
je
out
mov
sub
xor
sub
push
mov
call
sbb
dec
cs
push
stos
in
cmp
cwtl
cmc
sbb
inc
movsl
xchg
dec
loop
xchg
push
aaa
push
push
out
sub
dec
mov
bound
fs
push
in
push
cmpsl
orl
push
call
jecxz
andl
xorl
add
add
mov
push
insb
and
mov
jl
pusha
mov
sub
loope
mov
push
sbb
push
cmp
add
push
pop
sub
mov
jne
bound
xor
add
xchg
pop
xchg
add
movsb
pop
push
daa
loop
test
xchg
dec
xchg
dec
cmc
jne
xchg
out
lds
pop
icebp
adc
ss
or
insl
adc
pusha
shl
mov
scas
popl
shl
out
cld
inc
inc
inc
pop
icebp
fdivrl
outsl
adc
out
jle
arpl
rclb
lds
testb
popa
dec
sub
pop
das
cld
cltd
cmp
loop
loope
call
or
dec
cld
aad
push
dec
pushf
xchg
ror
ret
xrelease
and
xchg
sub
icebp
add
scas
jae
shrl
fdivs
je
mov
xchg
je
jecxz
sbb
adc
push
shll
jmp
cmpsb
xor
cwtl
xor
out
scas
out
fsubl
std
jecxz
clc
adc
cld
xchg
xor
jg
inc
mov
addr16
adc
mov
lret
lret
push
push
fs
icebp
mov
sub
imul
inc
movsb
jecxz
test
mov
adc
push
push
call
jl
cmpsl
ret
leave
pop
jge
sahf
insb
icebp
and
jne
jbe
cmpsl
mov
pusha
xor
cmpsl
dec
xchg
mov
jne
mov
cltd
es
cld
xor
mov
push
lea
cmpsb
sbb
jg
fistps
imul
push
and
daa
stc
mov
fcompl
test
mov
js
dec
pop
movsl
push
in
fcmove
xchg
lods
movsl
jae
cwtl
test
arpl
ljmp
enter
repz
in
les
insb
pop
pop
insl
adc
movsl
fiaddl
test
lcall
enter
aas
pop
lret
cld
testb
sbb
stc
jno
rcl
clc
inc
shl
iret
or
shl
sub
dec
adc
inc
rorb
and
adc
adc
pop
mov
mov
sub
sbb
sbb
jp
pop
xor
pop
fcmovbe
stos
inc
and
inc
gs
adc
sbb
pop
and
iret
jae
xchg
test
pop
bound
hlt
cmpl
pop
cmp
fidivl
jns
shlb
int
inc
pop
pop
cli
cmp
mov
xlat
movsb
xor
xor
adc
jbe
cwtl
mov
jae
fs
pop
rcrb
call
pop
loopne
pop
ret
bound
mov
int
shl
sub
pusha
xchg
repnz
xor
ffree
fdiv
mov
pop
shl
in
pop
mov
ret
call
into
in
aas
ja
sbb
mov
xchg
push
imul
ljmp
mov
dec
stc
or
jae
jmp
xchg
mov
pushf
sub
outsb
clc
push
sbb
daa
jle
and
or
push
pop
mov
and
repz
cmpsb
mov
cltd
adcl
lods
ljmp
mov
mov
mov
push
imulb
dec
jne
jns
cld
sub
cs
int
ret
out
mov
adc
add
cltd
or
pop
icebp
std
ds
stos
mov
psrad
cmp
out
cltd
pop
fwait
data16
sbb
sub
and
shrb
inc
adc
in
cmp
cmpsl
mov
and
das
xlat
pushf
stos
dec
fwait
cmp
flds
out
cli
stc
mov
sbb
dec
daa
xchg
sbb
sbb
add
adc
sbb
clc
mov
sub
mov
loope
out
imul
push
and
lahf
xchg
pop
roll
xchg
sub
or
rcrl
push
push
dec
pop
jo
in
enter
repz
dec
out
jecxz
sbb
pop
outsb
or
in
or
pushf
andl
adc
jge
lds
cwtl
push
mov
pop
sub
outsl
insb
adcl
cmp
dec
push
cmpsl
mov
mov
leave
out
sbb
and
push
pop
pushf
cmp
push
jb
movl
mov
jmp
dec
add
ja
test
lds
jle
sub
jno
cmpsb
jno
xlat
rcrb
jb
inc
stos
add
fisubl
adc
jne
push
pop
clc
add
sbb
push
inc
repnz
and
add
insl
int
jge
lret
int
xor
adc
sarl
xor
pusha
mov
jno
inc
pop
mov
pusha
pop
xor
dec
ret
push
gs
sub
movsl
enter
adc
pop
lods
mov
aas
push
inc
jecxz
test
mov
mov
mov
test
mov
jg
fistpl
xchg
into
lret
loop
call
test
lods
xchg
shrl
dec
dec
enter
and
stc
rcll
sub
cmc
nop
sub
mov
sub
rorl
xchg
jmp
popa
fucomp
ljmp
or
jg
cld
push
scas
mov
insb
out
xor
ret
xchg
adc
cmpxchg
xor
out
sub
push
data16
lret
jle
sbb
mov
mull
mov
out
mov
aad
data16
test
push
jae
push
inc
or
inc
mov
adc
int3
push
jp,pn
jb
aam
test
daa
daa
out
lods
cs
sub
cwtl
lahf
lods
lret
mov
mov
subb
sub
push
mov
or
mov
ja
gs
add
mov
dec
inc
fbstp
lahf
cmc
dec
inc
push
std
inc
xor
push
or
push
shlb
aam
cmp
jb
hlt
je
mov
inc
mov
std
lea
scas
inc
fwait
cs
mov
sbb
sub
or
lock
push
xchg
outsl
loop
or
mov
ret
loop
andl
add
test
jns
xor
cmp
sub
dec
inc
add
leave
negl
inc
fistl
leave
pusha
inc
mov
scas
inc
sbb
clc
and
nop
outsl
ret
ficompl
push
out
lahf
and
xlat
pop
nop
inc
push
lahf
adc
cmp
loop
out
psraw
pushf
jp
jns
test
jmp
pop
adc
sub
leave
push
cmp
push
enter
xor
lret
fsubrs
loope
popa
clc
mov
inc
aas
test
sti
fwait
adc
in
lods
and
shld
popa
call
or
stc
nop
negb
dec
xor
mul
ja
ja
and
sbb
fnstenv
shll
xchg
roll
cs
xchg
inc
pop
mov
jo
ja
fisubrl
or
mov
inc
int
inc
iret
inc
fnsave
mov
lds
sub
call
cmpl
xchg
mov
cli
and
or
adc
dec
and
jno
jl
mov
xchg
ret
jge
pop
das
rcrl
ret
push
adc
mov
movsl
ja
roll
lea
mov
xchg
arpl
or
sahf
pusha
movsl
add
and
jne
adc
leave
int
pop
push
fcompl
sti
hlt
repnz
mov
xor
jge
mov
push
fs
pusha
mov
or
xchg
addl
lahf
add
sub
in
pop
dec
dec
and
xchg
icebp
gs
cmp
push
adc
mov
test
sbb
sbb
jge
shl
roll
mov
mov
mov
jecxz
jmp
push
push
pop
lock
mov
js
sahf
push
repnz
push
repnz
sub
mov
repnz
xchg
and
movsb
in
pop
cmp
div
inc
loope
fnstcw
shl
xor
insb
cs
lea
push
adc
inc
sbb
decb
inc
rol
pop
jns
cmp
stos
lcall
lea
push
icebp
mov
stos
out
dec
loop
cld
lods
jno
jno
push
cmpsl
or
add
mov
sub
out
lds
fdivrl
jae
int3
faddl
lods
fnsave
bswap
and
mov
ret
or
aas
dec
jmp
fwait
xchg
jmp
gs
in
addr16
add
xor
pop
pop
mov
xchg
loope
adc
fisubrl
int3
lretw
push
les
rcll
add
sahf
push
ss
mov
pop
hlt
enter
inc
fcmovne
push
sub
rol
adcb
sbb
jecxz
cltd
jmp
xorb
in
fistps
mov
imul
popf
cltd
cmp
add
movsl
cld
in
das
stos
xchg
gs
aam
inc
xchg
mov
or
mov
mov
sub
repz
je
test
jle
int
and
push
in
push
arpl
out
cmp
fchs
or
sub
dec
outsl
push
jl
dec
add
sbb
lods
xchg
xor
jmp
adc
daa
pop
loopne
iret
xor
fnstenv
icebp
pusha
sub
ja
cwtl
es
mov
xlat
push
mov
xor
mov
and
adc
xor
mov
xchg
sbb
mov
sub
cmp
or
bound
test
fucomip
lods
ret
jnp
xorl
int3
out
insb
insl
dec
mov
addl
scas
js
dec
shlb
add
loopne
rdmsr
leave
enter
sbb
push
jmp
inc
cmp
jb
mov
dec
jmp
push
sub
test
fbld
fmulp
mov
mov
lock
cmp
mov
push
pop
dec
mov
jnp
cmpsl
fdiv
cmp
es
int3
fildll
inc
dec
out
push
sub
push
daa
inc
or
cmp
dec
sub
and
notb
push
pop
mov
push
adc
pop
jo
sbb
mov
jb
sub
cld
adc
popa
xor
lcall
adc
inc
repnz
xorl
loopne
popa
xchg
js
das
xor
rorb
aas
push
fisttpl
notl
es
sub
rol
lea
into
adc
daa
pop
xchg
cmpsl
inc
push
adcb
and
jle
push
sti
jb
ret
pop
dec
rcrb
cmp
outsb
push
out
adc
data16
and
sti
pop
arpl
mov
sbbl
cmp
stc
add
dec
imul
stos
bound
mov
mov
mov
jnp
mov
stc
call
popa
xor
push
in
stc
xchg
popa
pushf
lret
push
movsl
rcrb
mov
pop
testl
xor
jmp
lret
in
jns
loope
sbb
mov
movsb
ficomps
addl
pop
sub
lahf
jbe
push
jecxz
incb
xchg
pop
and
sbb
xchg
mov
pop
jg
fwait
add
pushf
test
or
adc
dec
pop
push
jnp
jg
repnz
imul
sbb
push
xor
sbb
mov
pop
mov
or
jb
adc
int3
jmp
mov
lds
xchg
call
mov
data16
mov
cwtl
pop
loopne
cmp
scas
mov
les
std
mov
faddp
xchg
push
mov
testb
stos
mov
xchg
and
or
leave
daa
mov
or
in
push
movsl
push
jl
mov
pop
pop
les
dec
pop
dec
clc
mov
call
mov
fistps
adc
int3
test
and
mov
dec
pop
cmp
mov
aaa
mov
in
test
or
or
mov
push
cs
jbe
jns
mov
lds
out
cltd
pusha
adc
sbb
aaa
std
or
popf
xor
sbb
rorb
push
insl
inc
or
cmp
push
or
push
ret
icebp
push
xorb
int3
cmpsl
mov
adc
mov
inc
dec
lods
js
test
xor
ret
hlt
jg
mov
ret
jge
xor
mov
push
push
mov
sub
inc
popf
add
movsl
arpl
mov
jae
xchg
sub
sub
cmp
or
add
orl
addr16
jl
add
movsl
ja
xor
pop
add
add
sbb
xchg
sub
lock
cmp
xchg
add
xchg
push
mov
sbb
pop
movsb
cld
andps
or
and
and
scas
push
push
xchg
scas
loopne
ss
add
pop
testl
sbb
dec
push
sarl
rolb
dec
in
out
xlat
xor
cld
pop
xchg
sbb
lahf
pop
lcall
and
inc
and
xor
pop
sub
mov
cld
jmp
movsb
pop
popf
mov
int3
arpl
daa
cld
outsl
xchg
int
push
lret
xchg
add
mov
or
test
in
outsb
fsubrs
movsl
mov
test
mov
add
enter
xor
jnp
jno
fs
inc
xchg
pop
repz
notl
and
in
aaa
fnstsw
fisubrl
loopne
lret
sbb
fisubl
or
movsb
shlb
or
sbb
ljmp
pusha
push
stos
push
xchg
and
sub
mov
push
dec
cmp
add
jmp
std
in
rcrl
fdivrl
fidivrl
jge
add
jmp
xor
and
jo
jne
shr
dec
push
cwtl
cmc
cvtps2pd
mov
add
dec
mov
push
xchg
test
sub
das
sbb
inc
mov
jne
mov
loopne
jb
mov
push
rcrl
mov
imul
cld
rcrl
adc
fistl
mov
popf
dec
mov
lahf
lds
push
pop
scas
pop
xor
inc
xor
pushf
fwait
xchg
aas
jle
imulb
sbb
ja
pushf
loopne
jmp
xorl
clc
out
push
ret
mov
ljmp
aam
andl
ficomps
mov
jp
fcompl
fisubrs
inc
cld
leave
pop
inc
pushf
and
push
jge,pt
lea
jmp
cmpxchg
adc
add
jno
pop
in
mov
mov
mov
enter
mov
ljmp
movsl
cwtl
dec
pusha
lret
and
cmp
mov
dec
push
xor
xor
jmp
push
cmp
in
cmpsl
cmp
push
xor
mov
mov
loopne
xor
hlt
pop
lock
lea
lods
mov
cs
into
jl
rep
or
add
dec
push
inc
push
cli
push
aaa
xchg
cmc
xor
jmp
mov
add
imul
mov
push
push
rcrl
int3
mov
mov
loop
xchg
lds
lret
cmp
arpl
addr16
scas
or
ds
addr16
adc
cmc
sbb
les
pop
xchg
aam
stc
popf
les
push
mov
xrelease
repnz
cltd
adc
repnz
test
inc
out
in
rcll
mov
outsb
jl
repnz
inc
xchg
mov
lahf
ss
icebp
push
popa
pushf
daa
push
test
iret
push
add
lret
mov
cs
outsb
clc
enter
jo
xchg
loop
dec
es
es
mov
repz
add
stos
xchg
out
adc
xchg
mov
mov
pop
and
fwait
cmp
int3
push
push
add
call
dec
shrb
jle
shlb
sbb
xchg
repnz
inc
sbb
hlt
mov
jmp
xorb
je
push
sub
jns
and
aaa
dec
lret
sti
loope
adc
ret
test
lcall
jne
pop
push
sahf
inc
sbb
jge
aaa
push
lods
out
jbe
les
or
and
mov
pushl
and
fwait
rorb
mov
pop
ljmp
sbb
mov
dec
loop
mov
sti
scas
imul
iret
push
int
xor
leave
addr16
adc
pop
pop
cli
or
sub
inc
bound
xchg
cs
orl
aas
pop
inc
xlat
jmp
mov
sub
sahf
mov
xor
dec
scas
push
scas
mov
or
je
insb
jbe
push
and
adc
adc
jbe
hlt
fisubrs
adc
and
ds
and
shlb
push
adc
pop
inc
dec
aam
in
int
sub
inc
bound
jno
faddl
xor
mov
stos
jmp
sub
mov
ja
in
cmc
inc
aaa
or
push
call
inc
jb
movsb
sub
fnop
mov
bound
or
mov
movb
test
imul
mov
cmp
mov
mov
cmp
out
xchg
stc
cmp
ljmp
xrelease
mov
xor
dec
addr16
sbb
push
jbe
out
icebp
dec
sti
dec
jns
sub
pop
mov
jg
inc
adc
dec
pop
out
push
mov
dec
push
insb
cmc
je
push
cmpsb
push
cmc
vmread
rol
fwait
sbb
sub
xor
aad
sbbl
iret
daa
mov
mov
inc
and
rorb
mov
xor
mov
ja
test
bound
fucom
ficoms
xor
arpl
cmpsb
xchg
sbb
test
fmuls
sbb
sbb
fiadds
mov
mov
int
push
test
jecxz
lods
xchg
inc
mov
push
hlt
mov
mov
imul
cmp
xchg
and
push
mov
or
es
xchg
hlt
sbb
dec
fwait
std
enter
test
mov
pop
jg
xor
rcll
sub
mov
addb
mov
sub
jo
adc
stc
cmpsb
adcb
popf
inc
sbb
sahf
cmp
cld
mov
testl
xchg
sub
pop
xor
dec
aad
xlat
and
stc
sbb
loopne
mov
dec
xchg
inc
jp
inc
int
jg
cli
loop
and
adc
push
js
push
aam
lock
jge
and
jae
aas
sahf
xchg
aam
jbe
pop
or
dec
fidivl
rclb
adc
cmp
sbb
sbb
fdivs
nop
sub
inc
stos
lods
sahf
and
fistpll
jnp
or
inc
aaa
sti
jg
adc
in
xchg
and
xor
ret
xchg
dec
fsts
outsl
add
loope
sbb
or
xchg
push
not
cmp
mov
cmp
es
decl
aaa
cli
mov
xchg
add
cli
sahf
push
mov
jb
enter
push
adc
ja
sub
icebp
or
loopne
sbb
xor
frstor
pusha
popa
mov
push
jne
pushf
cmp
test
mov
loope
es
inc
adc
cld
xchg
stos
test
scas
push
or
mov
push
cmp
sbb
mov
push
pop
fsubs
hlt
scas
push
and
iret
sbb
inc
fwait
lods
inc
sbb
fidivl
test
ret
inc
xchg
fsubs
inc
mov
mov
cmp
rorb
fdivrs
enter
mov
int
jbe
or
xor
rcrb
mov
mov
pushf
jo
outsl
push
test
imul
fildl
mov
ljmp
cmp
cmpsl
mov
add
xor
mov
mov
jae
or
sbbb
mov
add
jbe
sbb
enter
lcall
pushf
pusha
push
mov
ret
lret
pop
mov
in
jecxz
push
push
mov
ja
push
mov
fidivs
dec
in
inc
and
push
imul
adc
mov
adcl
insl
lea
jb
sub
pop
cmp
xor
cmp
xor
js
xlat
sbbb
mov
pop
jecxz
pop
mov
std
fucomip
fidivs
add
add
mov
add
lret
mov
xor
and
aas
lahf
jns
sbb
xchg
xor
mov
mov
sbb
fdiv
push
cmp
or
sti
rol
dec
addr16
mov
mov
ret
insl
push
popa
xchg
lahf
aas
mov
sub
pop
add
xchg
add
test
xor
or
test
mov
xor
imul
dec
out
mov
imul
lahf
jmp
rcll
mov
mov
jne
dec
fisubrs
and
and
fs
ror
out
xor
cmp
mov
and
or
fildl
cli
lahf
pusha
sub
mov
cmp
jb
xor
push
mov
stos
in
xor
lcall
int
loop
push
sub
or
inc
adc
ljmp
mov
jmp
cwtl
rcrb
cld
mov
pop
xor
xchg
test
pop
in
pop
mov
aaa
data16
lods
outsl
repz
arpl
xlat
icebp
lret
jb
push
cmp
xlat
adc
and
sbb
lcall
lahf
sbb
fs
cmp
sub
ffree
sbb
push
scas
pop
cmp
jp
dec
and
cmp
lahf
pop
xor
gs
jp
cmp
ficoml
or
outsb
fisubl
ss
pop
jb
cmp
rorl
dec
addr16
mov
stos
xor
mov
sbb
adc
test
dec
xchg
repz
xchg
or
cmp
popa
cmp
pop
leave
daa
cmp
jecxz
out
repnz
testl
stos
xchg
mov
pusha
jl
or
mov
push
pop
movsb
test
loopne
iret
dec
sbb
jp
cmpsl
mov
dec
xchg
mov
push
and
inc
cli
out
in
jno
or
dec
jge
jl
push
lcall
push
inc
xchg
xor
push
daa
push
aad
leave
and
dec
cmc
rcrl
xor
ds
dec
fisubrl
rcrl
pop
int
push
pop
push
loope
dec
cmpsl
xor
inc
fcom
pop
cs
sahf
adc
mov
add
or
cmp
push
cmp
in
leave
mov
sarl
mov
pop
sbb
push
shrb
and
pminsw
push
out
pop
mov
inc
fst
outsl
mov
mov
mov
addr16
movsl
cmp
notb
daa
lcall
adc
adc
add
repz
aam
cltd
mov
adc
mov
cmp
or
hlt
dec
stos
xchg
sbb
cwtl
das
in
and
mov
jle
dec
test
inc
fimuls
das
mov
add
int3
shlb
cltd
stos
sbb
frstor
lods
in
movsl
lcall
les
push
inc
or
mov
jo
out
fdivr
dec
xchg
outsb
adc
cmpsl
sbb
mov
ds
shrb
shrb
push
jno
xor
fstpl
ds
jl
in
mov
add
lods
xor
xor
cmpsl
ja
or
add
or
cmp
adc
and
jl
jge
int
lock
in
xorb
dec
pop
mov
int
sub
fs
leave
push
dec
push
add
mov
es
mov
out
jo
cmp
hlt
mov
push
mov
dec
sbb
stos
pop
push
adc
je
push
mov
sti
jge
xor
xor
stos
in
in
push
fsubr
nop
add
mov
movsb
pop
inc
lods
roll
xor
cltd
repnz
mov
push
mov
ret
adc
daa
mov
pop
sarl
pop
xor
adc
cmp
push
and
cmp
fidivrl
stc
call
rolb
sub
je
pop
push
adc
fs
fcmovb
push
push
ljmp
pushf
in
mov
sub
push
dec
push
mov
sbb
or
test
js
cmp
sub
cmp
jne
pop
leave
int
out
and
pusha
jb
push
movsl
push
fdivrs
movsl
cwtl
and
push
cmpsw
cmp
jl
sbb
cmp
xor
add
or
mov
addl
lods
sub
push
stc
adc
pusha
or
mov
xchg
es
outsl
inc
add
test
testb
xlat
xchg
xlat
push
insb
xchg
sti
or
dec
add
aam
loop
cld
sub
sub
stc
aad
fisubrl
jp
push
jbe
mov
rclb
sub
hlt
pop
inc
arpl
sub
in
inc
mov
lods
imul
les
mov
sti
xchg
bound
pop
xchg
dec
insl
ret
cmp
bound
mov
jg
shll
mov
fldcw
dec
and
jo
xor
scas
cmc
rcr
call
sbb
cltd
icebp
stos
aad
loope
je
das
mov
ret
in
pushf
mov
sbb
std
test
scas
adc
push
mov
imul
or
xchg
cmp
xorl
dec
ds
fcompl
sub
shrl
pusha
insb
mov
add
bound
out
popf
sub
and
lock
or
push
xor
inc
fildl
addr16
ss
das
rol
inc
int
ret
rcr
les
in
out
orl
mov
imul
hlt
mov
in
je
pop
hlt
mov
sarl
ret
and
add
lret
insl
mov
cmp
xchg
fnstcw
cmp
xchg
daa
inc
adc
ljmp
pushf
add
addr16
ljmp
fs
xchg
jbe
mov
pop
push
dec
sbb
xorl
jns
and
inc
cmc
fs
in
mov
out
jo
and
stc
ljmp
mov
out
ret
out
jecxz
mov
call
stc
mov
xor
movsb
adc
sbb
cmpsl
dec
ret
xchg
gs
mov
jg
adc
inc
mov
push
sub
push
or
int
loopne
aad
mov
or
int3
mov
xor
jmp
test
or
dec
add
bnd
or
nop
cmp
inc
push
std
add
cs
inc
adc
cmpl
cmp
mov
mov
xchg
imul
aas
push
insl
adc
push
mov
pop
jno
push
push
pop
xor
xchg
sub
push
stos
adc
add
fidivrs
pusha
scas
sbb
nop
jno
mov
movsl
test
push
pop
enter
mov
dec
adc
xchg
ja
fs
mov
fcmovbe
fcompl
sbb
inc
adc
aaa
out
jl
cmp
cltd
cmp
aas
mov
push
fisttpll
mov
mov
or
jbe
lods
mov
fwait
testb
pop
jne
lods
cs
pop
sbb
pop
loope
icebp
fwait
arpl
out
setbe
inc
lods
inc
lret
xorl
shl
dec
pop
ds
jmp
fcomp
xor
or
adc
push
shl
inc
xchg
push
mov
pop
xor
and
call
lea
push
sub
jbe
dec
aaa
or
mov
sbb
sbb
cmp
dec
cmc
out
or
shr
icebp
bound
xchg
sahf
push
cli
lret
or
sahf
stos
flds
jp
repnz
pop
out
cmp
add
jg
or
cmp
scas
int3
xor
stos
cld
fimull
or
inc
push
add
push
insl
adc
push
cmpsb
xor
push
leave
iret
and
xor
xor
adc
dec
jge
mov
sub
pop
repnz
nop
or
mov
mov
cmp
add
xchg
fstps
jno
insb
push
pop
fldt
mov
jo
icebp
mov
aas
pop
lods
push
dec
xchg
sub
pop
int3
into
js
sub
fs
push
cmp
fucompp
sbb
pop
pop
fsubrs
stos
or
test
movsb
sbb
lods
jno
ror
into
cmp
arpl
in
adc
lret
insb
sub
into
scas
inc
loopne
sub
add
leave
adc
mov
mov
sbb
scas
ja
shl
cwtl
inc
lods
mov
inc
lods
loopne
es
mov
jb
push
in
outsl
out
cmp
jnp
inc
dec
loop
incb
fstl
push
dec
ret
aas
in
push
dec
shll
xchg
or
subl
jl
mov
inc
xchg
jnp
adc
in
cli
das
cmpsb
btc
pop
and
inc
loope
ljmp
mov
jge
int
and
mov
je
xchg
sbbb
xor
std
dec
imul
sbb
ss
inc
adc
sub
cmpsb
icebp
jbe
insb
pop
iret
subb
jp
mov
adc
mov
sub
insb
fildl
jle
movsb
inc
aas
fidivrl
aam
popl
or
mov
xchg
pop
sub
pop
jg
fisubs
lds
les
pushf
dec
push
fwait
mov
xchg
push
pop
arpl
mov
jg
pop
sahf
scas
pop
jne
sub
sub
pop
int3
imul
xchg
push
mov
xor
mov
outsl
mov
insl
sub
cmp
nop
insl
cld
dec
mov
decb
pop
mov
lea
sub
xchg
shll
repnz
int
ja
cli
sub
enter
int3
ret
ret
adc
std
pusha
rol
push
push
or
push
std
or
mov
mov
test
testl
jmp
pushf
iret
std
rcrl
ljmp
pop
fxch
and
mov
and
lret
gs
sbb
stc
push
jo
out
testb
dec
inc
xchg
les
fwait
shl
jnp
out
jbe
adc
mov
push
xchg
pop
cmp
inc
cmp
pop
add
inc
bound
aam
mov
orb
addl
xchg
adc
or
sbb
mov
push
xor
icebp
mov
imul
das
mov
xchg
cwtl
and
and
movsl
mov
push
in
test
out
mov
aaa
xchg
mov
repnz
cld
loope
and
ret
sbb
out
gs
bound
out
push
aam
pop
ljmp
push
pushf
mov
adc
and
fists
ss
mov
xor
cmpsb
jno
adc
lds
dec
out
pop
sub
andb
pop
fcomps
pop
lds
aas
add
in
xor
dec
jb
and
inc
xchg
adc
push
in
sbb
pop
hlt
ret
ss
cmp
nop
imul
mov
mov
in
mov
loopne
xchg
out
dec
shll
adcl
adc
sbb
out
sbb
int3
push
jo
roll
xchg
push
pop
pusha
lods
jns
push
popf
testb
repnz
pop
outsl
pop
xor
cmc
outsl
jnp
iret
jg
mov
pop
xchg
in
aam
sbb
mov
mov
data16
mov
popa
mov
adc
sahf
and
inc
push
loop
fstpl
xchg
gs
sbb
gs
loop
popa
adc
mov
jbe
into
mov
lcall
xchg
movsl
jne
or
pop
call
js
mov
out
jne
adc
mov
inc
mov
inc
mov
sub
pop
sbb
dec
xlat
icebp
mov
pop
add
sub
adc
cwtl
hlt
inc
push
push
mov
das
jns
test
pusha
aaa
popf
jne
xchg
sub
push
or
inc
lods
lret
pop
stc
and
in
dec
mov
or
daa
push
inc
mov
insl
xchg
ret
cltd
sbb
repz
jecxz
push
or
lock
pop
mov
lret
xlat
push
ret
mov
adc
mov
test
leave
and
test
push
fildl
push
test
stos
jne
shl
sub
stos
call
ds
and
sbb
ss
jae
sub
hlt
test
and
push
andb
stos
push
je
xor
clc
pop
inc
in
jb
loop
xchg
xor
pop
inc
cmp
movsb
add
cmpsl
mov
filds
scas
jo
loopne
mov
push
inc
mov
test
lcall
pop
add
cs
pop
scas
and
mov
aas
mov
fldenv
ficoms
fs
sub
int
dec
rolb
mov
gs
jg
aam
xchg
mov
ficompl
in
cmp
test
test
cmpb
xor
jmp
into
pop
and
gs
aam
fsubrs
pushf
pop
mov
and
pop
sub
movsl
adc
lea
or
push
mov
inc
sbb
pop
jae
sahf
lods
mov
sbb
repz
lods
mov
js
add
lret
movsb
sti
negl
mov
out
cmp
fstl
dec
outsb
in
pop
lea
lret
dec
or
mov
in
repz
xchg
cmpsl
test
jmp
add
and
jecxz
faddl
sahf
daa
jo
insb
mov
movsl
rolb
xchg
loope
pop
mov
scas
inc
stc
pop
stos
ds
xchg
int3
pop
jmp
or
pop
mov
and
xor
pop
addl
shll
xchg
hlt
cwtl
cltd
xor
add
dec
inc
out
cmp
adc
adc
fs
push
pusha
push
add
bound
jns
or
mov
sub
enter
mov
push
rcrb
aad
mov
mov
loopne
push
adc
push
jne
pop
push
ret
outsl
fsubr
fwait
xlat
lea
mov
ss
mov
fstpl
mov
xor
mov
xchg
mov
popf
cmpb
sub
mov
mov
jg
sub
dec
or
fdivrs
movsb
test
mov
shll
xchg
pop
repnz
mov
inc
mov
or
and
or
dec
into
push
push
cmp
ss
dec
add
test
stos
inc
sbbl
ljmp
pusha
clc
xchg
mov
mov
ret
pop
movsl
fadds
xchg
rcl
add
cmpsb
inc
push
inc
cmp
ret
xor
ss
mov
leave
mov
jb
lret
inc
call
jne
divl
mov
jl
jae
dec
pop
cmc
push
movsl
lods
mov
ljmp
adc
roll
mov
jl
adc
scas
dec
cmp
jbe
and
sbb
adc
adc
mov
jp
push
fldt
outsb
mov
cwtl
sub
xchg
pop
dec
dec
or
arpl
int3
popa
les
jae
mov
addr16
ret
pusha
cli
jne
outsl
testb
fsubl
mov
hlt
mov
adc
mov
dec
movsb
pop
mov
mov
jp
fiadds
and
xor
mov
push
lds
movsb
sbb
lds
aam
imull
aas
ret
call
mov
pop
jb
jbe
movsb
xchg
and
jge
dec
es
inc
mov
push
repnz
in
stos
lds
mov
cs
sti
outsl
cld
ret
in
insl
ds
sbb
push
jne
sbb
inc
push
inc
sub
ss
push
add
into
mov
test
lret
xchg
icebp
jmp
push
cwtl
or
lahf
es
scas
push
sahf
subl
and
lea
lret
mov
out
xor
repz
jb
xchg
out
pushf
icebp
mov
cmp
mov
push
jb
ret
pop
jne
stc
jnp
jb
lock
and
shll
adc
adc
jo
push
cmpsb
dec
xchg
fcmovnbe
imul
outsb
arpl
inc
cmpsl
mov
insb
adc
mov
xchg
ret
int3
jecxz
add
sub
dec
dec
loopne
popf
nop
lea
or
pop
mov
cmpsb
sbb
and
shlb
ja
aaa
jmp
movsl
stos
sub
aam
fdivr
or
in
mov
cltd
or
xor
iret
mov
push
in
mov
movsl
rorl
xchg
jl
xchg
push
xchg
dec
ja
stc
test
sub
repz
in
mov
pop
adc
call
enter
test
pop
fld
sub
pushf
and
xor
or
push
ss
sub
and
into
in
aas
jne
jmp
lahf
mov
sahf
in
rcl
cmpsb
xlat
xor
negl
fidivs
inc
add
movsb
inc
in
push
aas
ljmp
and
add
data16
pusha
push
sub
add
stc
mov
jle
xlat
inc
adc
notl
cmpsb
mov
jmp
stc
xchg
inc
stos
repnz
das
addb
push
xor
lret
or
scas
insb
mov
iret
js
sbb
fisubs
xor
popfw
or
adc
fbld
test
dec
push
adc
xor
das
jmp
aaa
push
fwait
push
pusha
push
mov
add
aam
mov
imul
int3
dec
mov
dec
mov
jg
leave
add
mov
mov
fdivs
les
enter
xchg
mov
bound
mov
and
sbb
in
push
mov
sub
push
pop
fisttpll
pop
dec
gs
adcl
push
imul
adc
ss
out
stos
loope
xchg
test
lods
popa
push
xchg
jbe
adc
push
and
push
xor
xor
je
hlt
aaa
mov
jb
loope
mov
fs
fistpl
add
test
or
mov
sarl
pop
arpl
pop
daa
pop
in
in
add
cmp
xchg
popf
into
arpl
ljmp
bound
outsb
adc
xchg
lods
pop
jae
cli
iret
adcb
cmp
sahf
xor
into
sub
dec
mov
scas
rolb
push
cwtl
ja
test
imul
jno
stos
das
add
es
pop
cmpsb
xchg
sub
and
outsb
sbb
jge
push
insl
sbb
mov
dec
fiaddl
fsubrs
inc
dec
push
xor
cmpsb
fisubrl
mov
mov
mov
pop
and
xchg
scas
cmpsl
lret
xchg
xor
out
push
icebp
out
pop
loop
and
in
mov
roll
xchg
mov
cmp
jg
sub
jns
bound
push
mov
lahf
out
xor
and
daa
ljmp
lock
xchg
jo
cmc
imul
or
daa
xchg
jns
leave
dec
repnz
outsb
mov
xor
cwtl
outsb
int
cmpl
mov
pop
cs
pop
mov
add
hlt
fbld
or
fsubl
mov
pop
out
xchg
jo
scas
fsubrl
push
jae
stos
push
movsl
jbe
push
sub
cmp
cmp
adc
loop
mov
mov
data16
adc
mov
pop
aad
xchg
cmp
ds
lock
out
popf
push
movsl
cmp
inc
inc
mov
cltd
push
sbb
mov
adc
pop
in
mov
daa
in
or
stos
fldenv
rcl
sarl
std
insb
or
fadd
je
mov
adc
inc
push
test
add
loope,pn
ljmp
sahf
orl
sub
mov
mov
call
out
sbb
enter
sbb
mov
adc
scas
push
gs
cltd
or
in
push
leave
cmp
mov
cld
jb
xor
lea
fwait
dec
and
mov
push
mov
insl
adc
jecxz
clc
cmp
lcall
outsb
dec
push
xchg
dec
sbb
add
sahf
inc
rorb
lock
out
push
jo
pop
sub
int3
mov
jne
mov
in
fisubl
push
add
pushf
inc
mov
dec
mov
call
lds
add
xor
cmpsb
lock
addr16
add
cld
inc
pop
sub
xor
repnz
sub
mov
mov
jge
loop
mov
movsb
cmp
pop
cmp
ds
aad
pop
aad
pusha
cs
enter
test
out
cmpsl
dec
pop
jle
test
sub
add
scas
ds
xor
fnstsw
jg
sub
pop
fs
divl
add
push
pop
push
fstps
inc
rolb
sbb
inc
pop
icebp
or
push
jne
or
mov
dec
fistl
or
jno
or
or
inc
repz
jae
mov
jle
xor
add
and
cltd
mov
cld
adc
pusha
jle
fcomps
sbb
getsec
xchg
outsb
in
adc
mov
int3
pop
clc
in
pushf
sub
push
xor
ja
test
pop
movsl
ret
mov
xor
loope
and
jnp
lds
aas
gs
pop
aaa
out
int
jnp
inc
pop
inc
movsl
ljmp
notb
int
nop
pusha
scas
mov
adc
or
dec
gs
repz
sbb
sub
lcall
pop
cmp
outsb
loop
ss
mov
push
sbb
imul
sbb
cwtl
push
pop
bound
iret
lds
test
ss
pop
sub
sbb
mov
add
stos
mov
xor
dec
in
rcrl
sar
ds
or
pop
inc
int3
mov
je
mov
test
cld
sub
jbe
repnz
fs
fnstsw
inc
xchg
icebp
or
movsl
xlat
mov
or
jne
fidivrl
je
imull
pop
dec
fmulp
int3
push
js
and
cld
das
push
jge
xor
jae
mov
mov
dec
sbb
mov
or
sbb
jnp
mov
outsl
leave
lret
fpatan
aam
insl
mov
cld
mov
rcrl
fidivl
bound
jle
adc
adc
xchg
shll
cmpb
mov
add
add
nop
dec
cmp
stos
jne
xchg
xchg
push
in
dec
imul
adc
cmp
lret
inc
rolb
push
out
xsha256
cmpsb
pop
sbb
jb
popa
test
push
repz
imul
xor
push
movsl
out
scas
out
ja
sub
push
pushf
ds
mov
clc
push
in
inc
sub
sbb
jbe
in
cli
or
mov
sbb
sbb
push
push
lcall
and
data16
ret
adcl
sbb
int
jno
dec
lret
stos
adc
mov
fsubl
out
inc
sub
mov
ss
add
push
test
or
jne
mov
int3
and
push
sub
scas
stos
xchg
jno
ret
push
cmp
in
inc
shll
xchg
push
push
loopne
test
popa
sub
popf
je
mov
mov
fimuls
mov
insl
gs
in
mov
or
sbb
or
repnz
mov
fidivl
push
outsb
or
cmp
into
pop
add
stos
sbb
jo,pt
repz
shll
xor
jmp
paddsb
sbb
das
inc
pop
or
xchg
or
dec
mov
aaa
mov
adc
aad
adc
clc
dec
pop
test
loop
js
mov
adc
mov
rorl
dec
mov
data16
cltd
push
jle
aam
pop
dec
addr16
fnstcw
flds
sbb
loopne
jnp
es
dec
loope
lret
cld
xlat
sbb
cltd
push
jno
imul
lea
int3
mov
and
iret
jp
add
push
xchg
add
ss
daa
sbb
std
jb
repnz
out
or
adc
jbe
das
pop
movsb
fimuls
and
fbstp
mov
iret
pop
cmc
add
cmp
test
jmp
bound
dec
dec
jmp
inc
test
inc
fnstenv
mov
shl
sub
jb
aam
in
lods
mov
outsb
scas
push
jl
jnp
adcl
mov
mov
sar
bnd
subl
add
gs
lds
xor
xchg
xorb
and
and
mov
jg
xor
sbb
push
shlb
mov
push
out
clc
ret
jne
push
xor
mov
add
xlat
sbb
add
xorb
cmp
test
lret
cmp
inc
and
std
loopne
mov
xchg
lock
inc
mov
mov
mov
dec
rorb
inc
clc
dec
rcl
inc
xor
mov
mov
negb
adc
pushf
mov
lret
lret
jp
test
mov
and
loope
das
icebp
push
test
std
push
mov
insl
push
sub
iret
mov
push
fldl
flds
and
subb
mov
ljmp
imul
and
dec
js
lret
push
mov
pop
pop
inc
into
mov
jmp
mov
movb
pop
insb
aam
mov
mov
test
rcl
mov
mov
rolb
or
clc
int
jg
lea
adc
sbb
xchg
gs
adc
push
push
mov
adc
cld
fcmove
pop
pop
pxor
sub
das
out
ljmp
call
adcb
gs
cmpsl
xor
test
sub
stos
and
add
repnz
pop
test
and
lret
mov
fwait
lea
sub
jmp
shlb
mov
adc
mov
mov
into
or
sbb
pushf
es
mov
test
cmp
arpl
and
add
out
cmpsl
imul
adc
dec
mov
mov
push
movsb
mov
incl
ja
mov
test
repnz
enter
pop
mov
xchg
out
pop
fbstp
mov
mov
inc
xchg
fcoml
mov
jmp
aaa
fstl
mov
in
xchg
pop
xor
rcr
je
or
test
push
fwait
mov
add
aam
cmpsl
add
es
inc
rcrl
dec
mov
mov
cmp
lock
pop
cld
loopne
pop
lock
pop
test
insl
and
inc
or
add
push
push
inc
ret
add
and
data16
js
sbb
mov
dec
loope
add
push
xchg
mov
gs
xchg
pop
sbbb
nop
test
orl
dec
push
and
dec
sub
push
dec
shlb
adc
mov
inc
bound
rclb
test
lret
loopne
ss
jne
jo
fiadds
adc
int3
jg
scas
xchg
jl
insb
ljmp
or
addr16
mov
xor
leave
cltd
insb
add
mov
xchg
lret
adc
mov
stc
repnz
aam
jno
stos
std
pop
sbb
add
mov
xchg
xchg
sub
or
mov
movd
sbb
xchg
sti
inc
les
das
in
pop
cmp
inc
jmp
push
out
xchg
sub
lods
inc
jl
mov
or
loopne
mov
mov
jae
mov
push
jmp
aaa
and
lret
jae
mov
ret
stos
js
cltd
ret
sbb
mov
and
cmp
testl
push
pop
cmpsb
jns
stc
dec
rcrl
ret
jmp
loopne
jno
sub
jns
in
lock
sbb
fistpl
push
mov
loopne
stos
inc
jmp
push
fidivrl
pop
pop
mov
xchg
mov
or
mov
push
setne
cwtl
insb
movsb
sbb
add
data16
xchg
ja
sub
jne
mov
stc
in
in
fld1
mov
pop
int3
fsubrl
aad
cmc
cmpsb
push
jne
pop
in
pop
push
insl
insb
jbe
hlt
mov
fwait
testl
cmp
push
clc
fidivs
shlb
sbb
dec
and
mov
pusha
dec
mov
adc
mov
rclb
ds
iret
lahf
fidivs
push
test
jg
xrelease
and
push
imul
fmull
pop
sbb
or
sbb
je
xchg
mov
sahf
sub
jge
fs
jns
or
push
push
daa
jnp
sbb
mov
mov
pop
test
mov
and
int
mov
adc
int
add
jnp
xchg
pop
ja
mov
packsswb
imulb
and
leave
pusha
push
xchg
rorb
insl
mov
js
xor
in
sub
mov
roll
mov
fbstp
test
jb
sbb
je
inc
fwait
test
movsl
fs
mov
and
bound
lock
pop
addr16
cmc
add
inc
idivb
push
add
jg
jnp
loopne
xlat
push
in
pop
icebp
movsb
jecxz
dec
cltd
xor
popa
cmp
or
inc
fisttpl
std
gs
adc
pop
repz
add
cmpsb
imulb
ljmp
or
push
enter
xor
in
mov
pusha
mov
and
iret
or
push
mov
mulb
and
aam
insl
sub
mov
cmp
repnz
xor
in
add
sarb
into
ss
or
movsb
mov
mov
push
pop
testb
add
inc
shll
daa
or
sbb
ret
lret
test
lock
je
ret
pusha
mov
fsubr
sub
lods
lock
mov
fbld
aam
pop
repz
pop
or
push
and
push
lods
and
in
jnp
xchg
adc
cmp
mov
pop
cmp
testl
outsl
mov
sbb
outsl
push
cltd
imul
in
test
xchg
mov
jg
mov
jg
pop
adc
test
sub
add
xor
push
ds
inc
clc
jnp
movsl
jl
divb
push
nop
insb
adc
pop
fstps
jmp
inc
out
cmp
inc
pop
lock
addl
adc
mov
pop
test
mov
xor
arpl
jg
and
inc
jecxz
out
outsl
test
jne
cmp
test
adc
push
mov
push
push
nop
mov
ficompl
lahf
sub
mov
dec
movsw
dec
imul
xor
shll
iret
or
cmp
mov
and
push
push
lods
das
mov
cmp
test
inc
sbb
pushf
sbbb
repz
jmp
jbe
fistpl
cmc
jg
movsl
inc
jno
jl
cmp
cmpsb
pop
sub
push
sub
packuswb
cmpsl
imul
inc
mov
int3
push
sbb
test
jno
jmp
sub
jg
add
arpl
adc
pop
mov
jl
jns
dec
dec
sub
shl
idivl
pop
jmp
aaa
sub
mov
arpl
into
aaa
negl
in
and
xchg
xor
xchg
or
pop
pop
fwait
xchg
adc
test
es
out
adc
lcall
cwtl
cmp
adc
mov
js
jmp
outsb
aad
loopne
push
je
fnsave
stc
push
inc
mov
xlat
jbe
push
lods
xor
movsl
cmp
cmp
fs
jg
out
adc
dec
iret
es
dec
aam
test
fs
mov
iret
cwtl
inc
bound
inc
cwtl
lea
fiaddl
movlps
push
xchg
lea
call
sbb
mov
jo
inc
xchg
sbb
test
dec
sub
jbe
xchg
xorl
sbb
add
mov
loop
inc
aad
cltd
mov
out
xchg
inc
call
je
out
xchg
adc
cmp
cld
sbb
sub
sbb
stos
dec
enter
insb
jmp
pushf
repz
cmp
or
ljmp
std
xchg
jae
push
pushf
je
cmpsb
aaa
xchg
sbb
mov
cltd
dec
enter
loope
dec
lcall
sub
cmp
lods
xchg
mov
stc
or
jmp
adc
aas
xchg
cmpsb
out
or
cmpsl
cmp
inc
xor
mov
xchg
push
into
xor
cmp
sbb
xchg
dec
mov
or
jp
js
movsl
xor
mov
adc
imul
cmp
in
cs
inc
pop
fbstp
sti
push
aam
inc
testl
arpl
cmpsl
xor
adc
push
sti
dec
xchg
xlat
push
cltd
out
sub
pop
cld
fsubrs
jno
loopne
fsubrs
lret
xchg
or
mov
sbb
jae
clc
fwait
pop
arpl
lret
das
jle
pop
sub
or
sub
jp
add
js
mov
mov
or
cmpsb
adc
jns
jle
icebp
dec
dec
add
outsl
daa
clc
sbb
and
aas
orl
or
addr16
and
cmp
cltd
mov
cld
shrl
fiaddl
dec
dec
dec
push
cwtl
ss
loop
sarb
cmc
frstor
add
pop
in
push
repnz
std
xchg
jae
sahf
popa
roll
int
xor
sbbl
imul
addl
lods
push
aad
imul
jmp
mov
jno
and
inc
sbbl
sbb
mov
adc
jae
repnz
or
jne
jge
jle
dec
call
into
mov
or
push
frstor
sub
xor
rcrb
adc
out
test
pop
cmp
lea
mov
push
into
popa
or
add
daa
jle
mov
in
xor
inc
dec
fnsave
xor
mov
jl
mov
xor
aas
cmp
adc
mov
sbb
mov
cmp
jae
xchg
gs
lahf
test
jl
insb
daa
fidivs
pop
lahf
inc
xor
scas
adc
cltd
std
add
out
and
or
call
mov
mov
sbb
lret
xor
sbb
mov
pop
mov
in
aas
jmp
jo
sahf
int3
ret
cmpb
aaa
nop
push
cld
and
lods
ret
mov
inc
fs
mov
pop
cmp
fcoms
mov
sahf
mov
int
hlt
scas
cwtl
sub
lcall
adc
adc
cmp
push
lods
cmpsl
out
inc
sub
jo
out
lcall
adc
test
xor
adc
adc
mov
cwtl
out
scas
ficomps
fistps
adc
test
mov
push
lock
add
jg
xchg
sub
in
sahf
dec
dec
lret
in
dec
dec
sahf
or
ds
mov
insb
xchg
inc
leave
inc
xchg
addr16
mov
lods
shr
lods
xor
int3
cmc
push
pop
ss
dec
arpl
sub
pop
xchg
xchg
stos
stos
add
ret
sbb
hlt
mov
xchg
sub
xchg
test
lcall
daa
in
popf
jne
fmul
les
jb
and
lahf
mov
sbb
push
dec
or
adc
xchg
add
sar
jb
call
and
mov
xchg
xor
mov
jmp
stc
push
bound
inc
push
rcr
xor
push
add
icebp
sub
cmpsb
sbb
repnz
mov
outsl
pop
daa
aad
add
mov
add
push
xor
fs
cltd
jnp
push
popf
jle
icebp
cmp
xor
lods
test
jp
sub
testb
cmc
or
mov
cmp
test
xchg
test
xor
cmp
test
xchg
in
inc
pop
nop
fs
stos
cmp
jecxz
jbe
andl
les
mov
je
xor
pop
aaa
int
fmulp
fstpl
push
cmpsb
fsubrl
add
inc
mov
push
pop
in
xor
sti
nop
clc
mov
sarb
adc
add
test
lods
fsubrp
sub
adcb
gs
btrl
dec
pop
test
mov
mov
cli
test
icebp
inc
and
in
mov
xchg
mov
add
test
les
xchg
add
dec
and
out
pop
push
pushf
fs
mov
pop
xor
and
int3
out
sbb
std
dec
es
push
movsl
out
and
arpl
inc
jecxz
ss
ds
lea
cmpsl
aad
xchg
loope
ljmp
cmp
int
gs
add
dec
in
insb
mov
xchg
pop
mov
sub
dec
adc
or
bound
repnz
cmp
fxch
lcall
repz
mov
xchg
xor
dec
pop
les
daa
mov
test
insb
sub
enter
adcl
ja
shlb
add
cmp
cld
mov
add
mov
add
outsb
jp
cld
dec
and
push
fildll
shlb
pop
fucom
pop
aaa
add
out
add
mov
cvtdq2ps
mov
sbb
jge
dec
outsb
test
ljmp
sub
pop
out
jmp
adc
iret
in
test
sbb
stos
jae
out
add
inc
jp
pop
sub
pusha
stos
je
and
fildll
lret
cmp
mov
mov
pushf
cwtl
pop
mov
xchg
bound
lret
jb
jb
sbb
jl
cltd
sub
icebp
xchg
and
les
test
jmp
xor
mov
cmc
adc
adc
inc
leave
std
pop
sub
es
cld
or
and
add
fidivrl
mov
xchg
push
insl
fiaddl
jne
xchg
xor
inc
inc
pop
push
pop
sub
inc
mov
dec
jo
mov
add
lcall
and
jb
mov
imul
or
mov
adc
outsb
mov
aad
adc
mov
push
sbb
ret
mov
pop
ret
daa
xor
push
clc
cmp
mov
pop
pop
cmp
dec
jnp
pop
shrl
xor
lret
clc
imul
popa
mov
jge
mov
jge
sbbb
jge
and
pusha
int3
cmp
dec
jl
outsb
imul
xor
outsb
sbb
pop
jnp
rorl
sbb
xlat
mov
rcrb
addr16
pop
icebp
addr16
pushf
or
je
add
dec
lret
sub
lods
mov
inc
pop
inc
dec
inc
fs
push
and
or
jns
cmpsb
js
ret
dec
xor
dec
or
sbb
push
sub
add
fnstcw
cmpxchg
xchg
mov
sti
push
out
fstl
mov
mov
jnp
out
shrb
or
mov
mov
movsl
adc
pop
add
fmul
test
loopne
or
pop
xlat
subb
sub
mov
mov
mov
scas
pop
adc
jp
stos
mov
jae
fisubl
pushf
cltd
inc
ret
negl
ds
int3
sub
outsb
push
pop
pop
rolb
test
scas
mov
inc
dec
pop
popa
jnp
stos
dec
lods
rcll
inc
pop
or
shll
and
mov
inc
adc
aas
xchg
fwait
cwtl
mov
fwait
sbb
push
jge
in
dec
mov
pop
inc
fisubs
in
push
pop
andb
push
cmpsb
jns
in
cmpsl
inc
pop
inc
add
aas
push
clc
mov
daa
mov
sbb
jmp
arpl
add
mov
adc
fdivl
dec
push
cmp
add
mov
pop
test
jge
and
push
add
or
fwait
inc
mov
negl
dec
dec
pushf
push
stc
leave
fsubrp
push
lods
mov
add
add
xchg
cmp
adc
push
sub
and
sbb
aas
push
stc
test
pop
lock
push
xchg
dec
cmp
cmp
rorl
mov
mov
sub
cmp
pop
stc
mov
pop
imul
jo
xchg
and
idivb
xchg
and
adc
aas
imul
adc
call
and
add
loope
xchg
movd
mov
xchg
cli
jb
add
or
testb
sub
loope
cmc
mov
in
push
mov
insl
js
add
iret
jno
test
sub
mov
mov
dec
movsb
js
and
cmpsb
popa
xor
out
in
mull
jle
push
cmp
dec
outsl
pop
scas
mov
adcb
adc
push
jae
add
in
sbb
sbb
mov
insl
std
dec
mov
scas
ja
imull
js
cwtl
aad
mov
cld
stc
ret
je
cmp
or
jae
aaa
call
icebp
sahf
out
add
push
push
inc
fistps
daa
aam
dec
dec
hlt
jb
mov
sub
lock
jl
dec
out
ret
add
lea
call
sbb
inc
push
add
sbb
sbb
stc
popf
loope
mov
mov
inc
adc
decb
mov
jns
xlat
mov
fstpt
inc
imul
lret
leave
dec
sub
and
notl
lock
repz
mov
push
mov
ss
rcrb
lcall
adc
je
mov
xor
imul
in
fyl2x
sub
cwtl
pop
cs
pop
das
add
push
push
and
mov
pop
mov
push
mov
orl
jne
test
jp
adc
adc
xchg
cmpsl
ret
mov
and
mov
mov
jb
add
daa
push
mov
dec
mov
cmp
ds
lock
into
lods
jmp
mov
shlb
xor
jns
mov
adcl
sub
add
pop
jp
jmp
testb
ds
imul
addr16
inc
mov
cmp
xchg
sub
jl
cmpsl
mov
jg
rclb
xor
pop
sti
push
or
daa
data16
jmp
mov
scas
ret
fwait
ror
jge
scas
stc
adc
adc
jp
xor
jbe
mov
mov
sub
add
xor
mov
idivl
fsts
mov
cltd
in
xchg
cld
test
mov
arpl
sbb
mov
test
pop
add
mov
loop
notb
and
jns
shlb
aam
adc
je
add
aaa
call
mov
mov
cmc
mov
in
jg
and
mov
jmp
mov
shlb
mov
out
enter
push
int3
int
jp
sbb
lcall
push
out
add
movsb
sti
or
dec
sbb
xor
insl
cmpsl
jmp
in
dec
add
loop
mov
inc
mov
push
inc
cmpsl
mov
movl
lods
test
scas
xchg
in
dec
and
insl
pop
xor
mov
enter
mov
and
mov
dec
jp
pop
xor
lahf
adc
lret
adc
inc
adc
sbb
cltd
data16
test
fdiv
pop
push
and
lods
dec
ret
xchg
bound
pop
addl
scas
mov
mov
dec
inc
sub
mov
push
es
inc
dec
dec
pop
rcr
jecxz
sbb
and
adc
jnp
mov
lcall
adc
push
fbstp
imul
imul
ja
pop
sub
jns
jne
loope
leave
movsb
bound
push
mov
jg
inc
and
adc
popa
jns
test
sub
fucomp
sahf
push
daa
or
mov
push
and
inc
movsl
movsl
mov
clc
testl
js
andb
pop
adc
cwtl
jb
sahf
lods
ret
mov
cmc
mov
inc
adc
xchg
jl
fdivrl
push
subb
dec
adc
xor
inc
or
mov
fsts
lods
outsl
add
lods
icebp
lds
mov
inc
jne
movsb
cmp
test
aaa
mov
int
pop
rol
fldt
ret
pop
aas
addl
xchg
xor
cmpsl
add
pop
sbb
call
pusha
daa
sub
lods
inc
cmp
xchg
cs
bound
and
cmp
xchg
nop
setno
add
mov
push
mov
jmp
push
enter
and
lods
push
mov
loopne
adc
je
xor
in
mov
sub
mov
aad
data16
sbb
call
jb,pn
add
aas
jmp
dec
inc
pop
jle
shlb
push
lcall
or
faddl
xor
xor
ficompl
ljmp
lahf
sub
aam
add
jl
dec
movsl
jo
testb
xor
add
mov
push
push
xor
mov
lahf
les
sbb
scas
out
push
xchg
mov
icebp
pushf
std
pop
inc
fwait
add
lcall
out
sbb
fbstp
add
add
lret
mov
xor
jmp
sbb
mov
out
mov
push
dec
pop
mov
mov
mov
or
cmp
xor
aad
sti
push
xor
adc
call
sub
cwtl
stos
out
or
inc
push
cmp
mov
out
add
cmp
jmp
push
or
push
mov
pop
lock
loope
push
sub
mov
sub
out
roll
dec
repnz
xchg
ds
pop
imulb
ror
pop
scas
fs
jg
fs
shrb
sahf
jg
pusha
int
push
push
insl
push
pushf
int
lds
push
dec
sbbb
mov
pop
lods
adc
mov
mov
fstps
in
sbb
repz
sub
inc
xchg
sub
testb
mov
lds
fwait
clc
and
scas
cmc
std
mov
scas
push
and
rorb
pop
add
ficomps
in
test
cltd
mov
push
xor
fsubl
jbe
jns
pop
and
jnp
dec
in
dec
inc
in
out
push
daa
ss
add
test
push
xor
rcll
push
inc
sahf
cs
fdivl
mov
aad
ljmp
jb
test
mov
mov
sub
les
iret
sub
add
dec
pop
push
mov
aad
icebp
mov
fwait
jmp
or
mov
cmp
jmp
sbb
mov
mov
add
dec
sbb
repnz
and
xchg
mov
pop
insl
pop
loope
sub
xor
insl
push
lds
jnp
xor
mov
mov
nop
cli
sub
inc
or
dec
movsb
add
ljmp
inc
fidivrl
imul
outsl
mov
jne
andb
cmpsb
icebp
adc
sbb
ret
je
sub
pop
cmp
xlat
in
je
negb
cmp
mov
sbb
xchg
repz
arpl
daa
xchg
outsl
test
iret
repz
lret
or
cld
mov
xchg
in
adc
inc
and
cmp
mov
data16
imul
icebp
daa
int3
out
stc
mov
lods
mov
ret
mov
adc
sub
sub
shl
adc
orl
sbb
pop
ds
testl
stc
les
insl
xorl
js
std
jmp
jns
jmp
andb
dec
lods
cmp
inc
lods
push
cwtl
cmpsl
out
add
mov
movb
mov
in
insl
inc
sbb
stos
cltd
dec
mov
add
cwtl
xor
popa
loope
pushf
scas
xlat
enter
pusha
out
adc
insb
scas
shlb
xor
sub
jbe
jle
test
and
fcmovbe
outsl
cli
xchg
and
inc
sbb
adc
mov
xchg
pop
mov
lret
mov
lret
arpl
cltd
sbb
jmp
push
xor
pop
jl
js
int
jecxz
test
ja
mov
shlb
loop
stc
in
sub
repz
stc
hlt
ds
pop
adcl
jne
int3
insl
int3
mov
or
pop
lahf
orb
push
loop
and
xchg
scas
mov
dec
imul
cmp
sub
jecxz
xor
fdivrp
mov
dec
xor
and
push
cmc
mov
lods
push
mov
jle
pop
outsb
out
sbb
les
cmp
mov
dec
xchg
jmp
test
sarb
scas
les
psraw
test
dec
push
pushf
outsl
les
xor
ljmp
cmp
dec
push
sub
cmpsb
push
inc
stos
mov
or
mov
dec
test
loope
int3
fisttpll
mov
xchg
mov
sbb
call
jmp
scas
inc
pop
dec
jns
js
push
mov
push
hlt
cmp
and
jae
sbb
dec
jge
nop
hlt
mov
mulb
incl
pusha
xlat
pop
sub
loope
testl
ds
jns
pusha
test
loope
adc
in
insb
in
dec
loope
mov
jne
std
pop
xchg
cmpsl
sbbb
leave
dec
mov
leave
mov
ds
pop
repz
ret
jp
cmc
mov
aad
mov
pop
mov
push
les
mov
mov
push
test
lahf
adc
adc
inc
fs
cli
and
cmp
pop
inc
aad
inc
jp
dec
cs
aad
and
insb
inc
dec
jnp
mov
popf
or
cli
loope
dec
adc
mov
mov
mov
or
stos
mov
shlb
shll
mov
mov
jne
inc
cwtl
adc
cwtl
jne
in
push
rol
mov
neg
fcom
jae
jle
adc
jecxz
dec
push
fwait
xor
sbb
push
je
lock
cltd
lods
mov
xor
adc
outsb
call
or
and
adc
jae
cmpsl
out
mov
jns
jg
iret
xor
popa
sub
pop
push
sub
lods
pop
ds
push
sahf
jg
pop
jp
dec
push
adc
and
test
adc
inc
mov
push
and
pusha
das
cmp
call
dec
pop
scas
ds
in
loopne
lods
inc
or
push
outsl
mov
clc
xor
pop
mov
data16
push
pop
xor
push
outsb
lods
mov
bound
add
jns
mov
les
fmul
fisttpll
sub
cmp
jb
add
iret
xchg
pop
jecxz
or
scas
mov
rolb
cmp
mov
dec
loope
cs
ss
mov
cmpsl
mov
les
imul
add
mov
push
jg
push
jg
add
cmp
addr16
inc
decl
std
pop
dec
rorl
mov
loope
xchg
mov
push
fisttps
mov
arpl
outsl
cmpb
pusha
icebp
fwait
mov
hlt
jmp
mov
enter
shll
pop
popa
scas
xchg
test
lret
sarb
jae
push
mov
addb
mov
adc
cltd
lcall
or
in
fbstp
aas
std
cmp
jl
adc
test
xor
clc
outsl
out
aad
nop
and
mov
mov
mov
aam
jl
repz
xchg
mov
mov
xchg
pop
jbe
xchg
adc
or
pop
mov
and
insb
scas
inc
test
and
fmul
loopne
adc
ret
inc
sub
outsl
xor
mov
stos
jne
ss
pop
test
lcall
pop
jno
xchg
rcrb
sahf
outsb
xchg
and
popf
mov
jge
stc
inc
inc
sub
add
repz
push
pop
lahf
mov
dec
xchg
scas
hlt
xchg
call
add
mov
xor
nop
stos
dec
test
cmc
aad
jg
subb
sarl
add
fdivs
xor
aad
std
shrb
push
stc
mov
pusha
subl
imul
cmp
adc
mov
cwtl
repnz
lods
mov
pop
rol
jl
std
and
sbb
or
push
aam
xor
pop
sub
scas
rcll
das
push
or
sub
ret
pop
sbb
push
jne
xor
xchg
mov
or
lret
loope
ret
push
lcall
mov
fs
mov
test
mov
lahf
push
fidivrs
insl
test
lods
mov
je
bound
sbb
push
bound
push
out
sbb
dec
les
out
mov
dec
push
mov
cwtl
mov
insb
sbb
jecxz
int
cmp
mov
mov
popa
push
fsubrs
and
mov
insb
pop
int
dec
dec
ss
dec
dec
ljmp
out
push
jno
cmp
push
aam
test
mov
pop
ja
cmpl
scas
push
movsb
and
sbb
add
jl
fwait
inc
dec
mov
xchg
mov
pop
inc
xlat
dec
pop
loop
or
pop
cmpsb
dec
pop
sub
add
jp
mov
or
pop
repz
add
pop
jbe
frstor
jo
adc
daa
int3
or
push
mov
pop
cli
cmp
adc
mov
roll
xchg
dec
insl
push
cmpb
imul
lds
pusha
mov
mov
add
in
xchg
test
scas
mov
clc
jbe
push
rorb
mov
pop
iret
pop
mov
add
fnstsw
adcb
pop
jno
aam
sbb
xor
aam
mov
dec
shl
out
inc
bound
inc
push
imull
xor
mov
pop
inc
pop
sar
xchg
mov
push
mov
loopne
mov
icebp
out
scas
rorl
fdivr
cwtl
push
fs
popa
xchg
mov
mov
mov
scas
xchg
subb
imulb
ja
sbb
cmpsl
lea
sub
fnstenv
das
arpl
add
pop
das
dec
loopne
jmp
test
ja
pop
mov
fbld
orb
push
in
or
in
notl
es
into
mov
lea
sbb
jmp
push
xor
push
mov
xor
xchg
sbb
fwait
ds
in
mov
stos
test
dec
dec
inc
pop
scas
mov
push
sbb
xchg
mov
pop
inc
push
fsubs
adc
xchg
jbe
xchg
and
das
nop
aad
adc
insl
sub
sub
jl,pt
repz
enter
test
repnz
pop
lds
scas
dec
pop
rolb
out
add
idivl
lods
data16
and
sti
jge
aad
dec
pop
shlb
xor
mov
jno
jmp
aaa
out
sbb
js
imul
cli
mov
mov
push
jl
xchg
pop
decl
sub
push
imul
std
mov
xchg
je
mov
fldt
in
ret
imul
mov
mov
mov
pushf
jne
sbb
insb
pop
push
jno
popa
gs
cwtl
mov
ror
icebp
and
lods
mov
pop
sahf
sbbb
clc
mov
sub
sbb
push
sub
mov
mov
jge
lea
pop
fidivl
add
sahf
bound
sahf
ret
and
nop
sbb
dec
mov
rclb
out
mov
cmp
sbb
or
cld
xchg
out
test
and
adc
lods
fbld
ljmp
cmp
jmp
addr16
test
lds
outsl
fucomip
insb
aaa
pop
xor
jge
mov
in
pop
cmp
inc
aaa
fwait
inc
xor
mov
push
adcb
mull
add
sub
je
mov
in
fdivl
lcall
call
lods
outsl
aam
push
out
mov
mov
add
std
pop
xchg
filds
leave
int
dec
popa
jnp
or
pop
xor
inc
push
or
bound
xor
xchg
fadd
pop
ds
mov
jl
je
stos
pop
lcall
xor
xor
ljmp
lods
in
pushf
loope
lret
xlat
dec
lret
pushf
data16
and
push
and
and
enter
sub
xchg
sub
dec
xchg
imul
and
in
orl
push
mov
xchg
pop
sub
ja
xor
filds
xchg
inc
ficomps
shrl
cmp
into
adc
int
jecxz
xchg
xchg
mov
sbb
jecxz
and
out
adc
xor
push
js
xchg
xchg
sub
repz
mov
es
dec
leave
sub
popf
adcb
mov
mov
nop
mov
mov
mov
cmpsb
mov
std
xchg
aaa
sub
sub
sbb
sbb
add
xor
adc
test
inc
or
stos
pop
xor
loop
and
and
stos
inc
loopne
fwait
addr16
lret
pop
cmpsl
lds
je
lcall
push
insl
push
mov
outsl
shr
fldl
add
loope
insl
gs
mov
fildll
push
cmpsl
mov
loop
add
in
shrb
mov
pop
lock
push
daa
sahf
ja
inc
cltd
lds
sti
and
loope
inc
aam
mov
inc
mov
pop
add
test
loop
mov
pop
add
inc
xchg
fstpt
sbb
rolb
fnstenv
inc
dec
dec
mov
sbbb
shll
jo
je
out
scas
out
push
and
jb
xor
jp
call
test
pop
or
mov
xlat
adc
lret
add
in
pushf
cmp
mov
imull
or
jo
test
push
jno
inc
in
mov
pop
jno
push
adc
sbb
inc
arpl
cmc
mov
fwait
xor
rcr
mov
sub
rcrb
cmp
mov
push
out
push
stos
mov
lahf
cmc
jne
daa
shll
push
adc
dec
dec
mov
cld
out
lret
pop
test
cmp
sub
mov
aam
inc
or
xchg
sub
ss
in
mov
in
cmc
subb
xor
bound
ret
push
in
mov
fmulp
mov
in
outsb
mov
cmp
dec
stos
fsubrp
cltd
xor
jmp
aaa
xchg
scas
shrl
jnp
test
sarb
dec
jp
sbb
les
pop
or
lret
or
scas
jne
sahf
inc
shrl
sbb
lods
stc
and
lods
cmpsb
icebp
sbb
ret
sti
sti
inc
xor
fistps
dec
fisttpll
xor
xchg
in
jg
inc
or
dec
mov
outsl
cmp
divl
insl
pop
jle
std
ret
aas
push
or
out
aad
fcmovbe
test
add
xor
cmc
faddl
push
mov
lret
lret
es
movsl
cld
pop
mov
scas
jnp
pop
popf
cld
or
pop
pop
rorb
sar
movsl
sub
addr16
xchg
sub
adc
std
mov
push
xor
adc
mov
in
xchg
cs
mov
icebp
adc
into
xor
mov
jmp
int
and
mov
sub
int
fwait
sub
push
ret
pusha
lea
adcl
jmp
cwtl
in
cmp
insb
mov
mulb
in
push
mov
xchg
and
mov
dec
jnp
jecxz
jl
fwait
sbb
add
std
xchg
or
sub
mov
test
pop
adc
mov
push
add
cwtl
rol
leave
cmp
adc
inc
data16
fwait
fs
push
cwtl
inc
xor
jbe
rcr
pop
lods
fisttpll
clc
hlt
in
scas
inc
aaa
cwtl
stos
add
and
daa
mov
mov
fcmovnb
mov
lret
push
shll
in
cmpsl
mov
or
inc
faddl
mov
adc
stos
push
xor
mov
lahf
outsb
cmp
das
repz
test
cmpsl
mov
test
int
jle
xor
adc
and
ljmp
cmc
adc
loopne
pop
adc
inc
aas
mov
sub
cld
fadd
out
cmp
sub
pop
xchg
lock
push
fistpll
cmpsb
cmc
mov
or
mov
sub
test
lock
dec
lahf
gs
add
mov
pop
es
add
xlat
cmp
jge
jp
in
cltd
adc
imul
pop
sarl
mov
aas
push
imul
fs
adc
push
frstor
clc
ds
lcall
cmp
inc
add
or
xchg
lret
jae
or
sbb
mov
push
mov
imul
popa
mov
add
pop
sub
pop
enter
jne
movsb
sub
pop
mov
repz
jle
scas
sub
sub
jmp
push
test
ret
or
cmp
cmpb
movsb
in
inc
xor
mov
dec
out
xchg
arpl
push
push
outsb
shll
cmc
inc
mov
jnp
cmpsl
les
aam
loope
popf
dec
pop
nop
lods
inc
and
jg
push
push
mov
repz
mov
push
jno
pop
lcall
sub
mov
testb
jecxz
aam
push
shll
int
fwait
icebp
sbb
xchg
xchg
dec
cmp
testb
xor
mov
outsb
sub
sub
jbe
sbb
aad
jl
or
call
push
cmp
pop
mov
mov
jb
mov
pushf
es
les
sub
mov
adcb
cmp
pop
xchg
ljmp
and
pop
sbb
pop
imul
aas
dec
xor
ljmp
inc
pop
cmp
jle
push
and
dec
test
jnp
stos
add
mov
lret
imul
push
imul
dec
jnp
push
inc
jae
nop
das
loop
sbb
aas
aad
cld
cmp
mov
imul
popf
jmp
pop
je
jb
jmp
lahf
xchg
xchg
inc
clc
arpl
imul
outsl
fsubrl
ja
pop
stc
xor
addr16
or
inc
mov
stos
xor
xchg
lret
lock
loope
push
xor
or
popf
lods
mov
push
jne
popf
dec
lahf
inc
outsl
ret
in
adc
inc
insl
hlt
inc
mov
sub
fs
outsl
cmpsl
jnp
push
outsl
dec
out
les
or
std
fcmove
xchg
into
xchg
movsl
in
mov
and
out
push
mov
das
jp
xchg
cltd
in
nop
fidivrl
dec
movsl
test
jmp
pop
int
icebp
mov
adc
out
add
aas
push
into
imul
out
pop
out
loopne
add
adc
mov
mov
lds
cmpsb
xor
pop
xor
lret
or
inc
les
dec
jl
inc
in
sahf
shll
mov
mov
xor
fisubl
push
sub
nop
incl
addl
sbb
mov
or
stc
adc
imul
xor
cli
or
xor
les
sbb
out
xor
sti
repz
lods
lret
fnsave
fcmovbe
mov
mov
push
add
push
sti
inc
cld
xchg
and
ss
out
and
adcl
xor
test
push
aas
cld
mov
inc
jmp
jo
xlat
test
mov
dec
dec
call
dec
dec
push
jne
cmp
std
orb
pop
addr16
mov
and
outsl
orl
popf
adc
aas
mov
and
mov
adc
lods
popa
sbb
out
addb
imul
fcomps
sbb
aad
mov
mov
mov
pop
outsb
sbb
cwtl
xor
addl
pop
jns
fstpt
shlb
lret
daa
adc
nop
call
pop
push
sub
pop
xchg
imul
dec
in
stos
arpl
sub
mov
or
test
imul
aas
push
outsl
mov
aad
out
mov
movsl
lods
lret
jb
mov
or
adc
icebp
movsl
js
outsl
inc
jmp
loop
inc
or
mov
fwait
cmp
dec
mov
inc
fisttps
sahf
jno
sbb
gs
das
cmp
cmpsb
scas
lds
ret
mull
or
cli
in
and
or
movsb
cmp
add
adc
pushl
inc
pop
lods
or
mov
jecxz
stos
sbb
mov
mov
inc
stos
loope
jns
imul
adc
adc
clc
sahf
arpl
sbb
test
mov
pop
jne
pop
aam
xor
lds
in
add
mov
inc
dec
mov
das
out
enter
lret
cmp
clc
xor
adc
test
sbb
inc
popf
bound
lret
aad
divb
cmp
pop
test
fucomp
jno
sahf
aaa
je
sub
pusha
sarl
dec
imul
aam
cmp
add
stos
arpl
imul
in
in
cmpsl
jl
fcomps
insl
stos
leave
clc
xchg
cmpsl
cmp
out
popa
cmc
lret
xchg
fisubrl
jg
mov
mov
cmp
pusha
repz
xor
test
rcrl
pushf
aas
mov
pop
pusha
ljmp
mov
xor
jg
xlat
push
push
subl
lods
pusha
movsb
into
in
xorl
mov
sarb
mov
cwtl
cs
and
pop
insl
mov
divl
sbb
sbb
int3
stos
insl
jmp
and
dec
and
dec
adc
hlt
stos
jmp
mov
std
xchg
test
fdivs
or
add
ja
aad
mov
hlt
jne
aas
push
mov
cmp
or
scas
out
leave
popf
mov
loopne
daa
adc
push
inc
call
mov
jle
and
shll
lock
xchg
lock
popf
or
les
inc
jp
dec
or
popl
add
int
jno
xchg
jb
add
push
lods
cmp
daa
cmp
shlb
or
push
jge
jae
push
pop
or
lds
cmp
xor
xor
outsb
adc
mov
dec
jle
add
xor
jb
sbbl
pop
pop
sub
and
ret
ja
xor
sti
jmp
rcrl
mov
arpl
insl
pop
mov
ja
repnz
stos
enter
mov
mov
and
out
test
punpckhdq
sbb
dec
push
loope
dec
out
sbb
mov
jbe
outsb
push
out
adc
mov
outsb
jle
pop
mov
inc
xor
mov
pop
add
aaa
into
leave
lds
movsl
out
push
test
or
sub
push
ljmp
jno
cli
jno
xchg
mov
in
inc
sbb
jnp
push
push
add
leave
lret
jno
gs
xchg
std
push
popa
clc
jne
xlat
xchg
jge
jg
adc
repz
xor
or
cmp
mov
cwtl
repnz
dec
shlb
nop
sub
or
push
cmp
jecxz
jns
shl
dec
xor
cmc
mov
push
xor
mov
aaa
inc
fadds
in
iret
xchg
in
out
lock
into
push
and
sarl
ret
mov
out
out
dec
xchg
adc
mov
sub
or
sub
daa
mov
push
es
cmpsl
push
mov
jmp
add
jo
test
fwait
or
lret
shl
cmp
jae
cmp
and
test
stc
inc
jb
or
add
es
dec
xor
ret
and
roll
repz
push
je
cmpsl
repz
pop
sbb
loopne
cmp
xlat
in
repnz
sub
adc
sub
jl
in
mov
cmp
push
in
addr16
sub
pop
adc
push
scas
enter
imulb
fstps
jbe
cmpsl
mov
mov
push
lods
or
adc
mov
data16
jb
mov
push
bound
loop
mov
mov
sbb
test
stc
fwait
xor
inc
out
sub
leave
loope
dec
add
jnp
and
pushl
mov
xchg
leave
jge
in
push
pushf
outsl
push
lcall
push
pushf
arpl
js
mov
inc
dec
mov
and
jp
push
sbb
mov
add
scas
fiadds
mov
add
popf
push
movsb
bound
stos
xchg
pop
cmc
jne
sbb
push
jg
ds
roll
mov
test
pop
xor
shrb
jle
mov
leave
jae
push
pop
arpl
aaa
and
lea
sbb
enter
mov
xor
fbstp
insl
jmp
aam
jbe
insl
add
xchg
pushf
scas
out
mov
daa
xor
xor
stc
jge
xor
lcall
xchg
mov
ret
rcr
mov
sti
dec
loopne
les
testb
inc
gs
fcmovbe
shrl
inc
cmpb
std
inc
shrb
inc
xchg
or
dec
fmull
adc
imul
lahf
test
enter
mov
nop
daa
add
inc
mov
mov
adc
movsb
jb
out
push
dec
xor
insb
cmp
imul
ret
inc
out
repz
jo
inc
jp
inc
fld
pop
or
sub
pop
lock
repz
in
cmp
pop
pushf
dec
gs
jno
inc
ss
ss
push
std
lds
repz
mov
icebp
and
test
mov
jp
nop
or
and
sub
cmp
xchg
pusha
xchg
xor
daa
adc
jmp
call
jl
fwait
repz
addl
xor
popf
adc
inc
mov
jp
in
sbb
std
mov
test
push
imul
add
adc
lret
and
lds
les
and
jp
inc
bnd
and
call
dec
adc
xchg
popf
andl
push
adc
mov
pop
shlb
lret
cmp
popf
lods
mov
sub
cmpsb
xchg
adc
dec
lcall
inc
xchg
and
mov
xlat
xchg
inc
mov
mov
xor
stos
dec
or
out
data16
pop
test
repnz
ljmp
int3
test
cmpsl
or
enter
mov
ret
jge
sbb
arpl
sbb
mov
lds
jg
jp
fs
jl
test
js
iret
xor
pop
xchg
andb
les
mov
mov
jg
mov
sub
imul
mov
das
jno
pop
xchg
xchg
inc
pop
xor
pop
mov
sub
mov
dec
in
scas
xchg
mov
in
outsl
xchg
mov
xor
fs
xor
adc
mov
das
push
cmpsb
test
dec
jbe
cmpb
mov
std
xchg
in
push
mov
aas
add
inc
cmpl
cmp
repz
out
xchg
push
cld
push
clc
add
sbb
outsb
push
adc
push
lret
or
sbb
push
leave
pop
iret
dec
dec
fnsave
mov
test
repnz
arpl
or
adc
jnp
decb
xor
jp
mov
push
cmp
lahf
addl
adc
aaa
jp
cmp
mov
rclb
mov
jb
add
add
sbb
hlt
les
orb
jb
test
rcr
testl
jg
hlt
pusha
lock
jb
add
movsl
pop
gs
fwait
enter
rcll
and
repnz
adc
pop
mov
push
jmp
testl
and
sbb
clc
fdivrl
std
cvtps2pd
adc
scas
lds
mov
scas
outsb
pop
mov
mov
mov
addr16
cmpsl
sub
out
aaa
loop
aad
pop
ficoms
test
jmp
fbld
in
filds
xor
inc
aam
dec
outsl
inc
and
mov
je
sub
dec
jmp
or
sbb
aas
cmp
mov
pop
out
lret
mov
ret
push
je
insb
add
dec
hlt
mov
mov
aad
mov
jno
lret
mov
les
adc
rorl
xchg
aas
mov
jo
out
cmp
jno
mov
cmp
pop
fmuls
pop
insl
fdivrl
std
fisubrs
test
mov
data16
or
mov
mov
pop
pop
or
repnz
cmp
jmp
in
insl
add
fisubrl
sub
loopne
das
pop
test
mov
xchg
aaa
int3
or
sub
mov
push
ljmp
jns
ja
dec
sarl
shrl
mulb
xlat
insl
jns
aaa
mov
ret
test
ret
icebp
mov
add
cmp
xor
dec
lea
inc
sub
imul
repnz
and
adc
mov
dec
loope
rorl
jg
jb
mov
sbb
mov
add
sub
pop
mov
push
in
outsl
adcb
push
out
mov
out
jb
stc
or
insl
add
test
mov
orl
aaa
push
lods
sbb
mov
sub
pop
mov
mov
sbb
jns
popa
sbb
nop
mov
lods
inc
or
dec
push
mov
add
or
jp
pop
mov
mov
jl
mov
dec
cmp
shrl
mov
leave
jno
lcall
mov
frstor
jecxz
adc
dec
or
popf
jmp
cltd
mov
mov
mov
mov
test
fcomp
and
decb
int3
lea
push
xor
rcrl
hlt
sub
nop
leave
pop
dec
cmp
pop
push
xor
fwait
push
sub
shll
aad
test
inc
adc
cs
and
cmp
test
icebp
cmp
jnp
dec
and
jbe,pt
lods
xorb
or
jns
jno
mov
and
les
inc
add
test
add
lret
in
outsl
sub
lcall
pop
sub
lcall
and
inc
les
rolb
fimull
mov
popa
subl
mov
xchg
xchg
in
dec
add
xchg
notb
out
adc
cld
shrl
pop
xor
les
adc
out
ret
mov
fldl
pop
adc
iret
data16
sbbb
movsl
pushf
inc
xlat
pop
jge
add
inc
ja
stos
adc
fdivl
sub
roll
aad
hlt
ficomps
sbb
cmpsl
out
gs
decl
xchg
cli
test
outsl
lahf
adc
rcll
fstps
jnp
xchg
test
stos
xchg
pop
jp
sub
cli
dec
push
out
mov
lret
dec
xchg
sub
add
movsb
mov
inc
pushf
push
push
xlat
jmp
mov
mov
jge
sbb
inc
mov
cmp
cmpsb
les
out
nop
jg
and
mov
sbb
add
mov
stos
stc
and
dec
loopne
xor
pop
int3
rol
jns
sbb
outsb
hlt
mov
pop
mov
cmc
cmp
stos
cwtl
aam
imul
imul
scas
and
scas
int
dec
lahf
xor
hlt
rcl
rorb
out
sub
ret
hlt
pop
ss
mov
fisubs
or
leave
or
push
cltd
mov
stos
movsl
cmp
mov
add
jmp
cltd
js
dec
inc
out
jge
ja
aam
pushf
jmp
adcl
sub
xchg
jl
dec
dec
xor
push
push
pop
xchg
mov
lret
add
stos
arpl
imul
dec
sub
mov
in
push
push
popa
mov
jecxz
and
testl
popf
mov
cmp
push
mov
iret
mov
jo
mov
prefetch
xchg
xor
repnz
icebp
sub
cmp
rol
js
cmc
push
xchg
xchg
mov
out
xchg
stc
jecxz
sbb
xchg
insl
jnp
add
in
cmp
push
sahf
shlb
cmp
lahf
adc
mov
insb
inc
in
je
and
repnz
adc
aaa
pop
cmc
mov
mov
cmp
daa
mov
cmpsl
inc
cmp
ss
scas
add
outsb
cmp
mov
mov
cmp
notl
jge
push
out
cmp
add
jp
repnz
sub
adc
dec
cs
cltd
jge
hlt
insb
xor
sahf
je
jle
aas
addl
imull
jg
jb
or
int3
aad
ljmp
jmp
pop
jns
sbb
fstl
hlt
inc
mov
arpl
enter
pop
jmp
pop
popf
in
add
mov
jb
pusha
push
lret
data16
decb
add
movsl
stc
sbb
lock
mov
data16
inc
xchg
cmp
stc
fdivrl
sbb
push
mov
pop
cs
dec
loopne
cmpsl
ret
outsl
add
stos
and
or
adc
inc
sbbl
xchg
mov
popa
movb
xor
add
enter
movsl
out
push
inc
pushf
jae
or
fsub
sub
cmp
xor
dec
scas
lods
jns
ljmp
or
sti
or
je,pn
sbb
pop
jecxz
jp
fwait
cmpsl
incl
mov
add
sub
inc
sbb
jl
std
jno
or
cltd
dec
xchg
sub
cmp
fnstenv
fwait
mov
cld
mov
inc
inc
push
mov
mov
aam
sub
pop
mov
cld
out
enter
setle
pop
xchg
sub
sahf
addr16
push
add
je
xchg
xor
sahf
std
xor
cmpsl
ret
pop
fstl
movsb
inc
mov
and
sub
stos
js
mov
jl
xor
push
xor
add
movsl
jecxz
mov
adc
or
sbbl
test
cltd
xor
pop
mov
cmp
mov
mov
stc
mov
popf
repz
roll
push
mul
addb
push
adc
mov
jne
iret
bound
loope
xchg
push
les
cmp
pushl
outsb
fwait
xchg
rcrb
xchg
cmp
cltd
outsl
je
roll
xchg
pop
jae
cmc
sub
push
mov
leave
dec
es
jnp
lret
insb
dec
testl
mov
aaa
sbb
push
xchg
fdivl
fdivrl
cmovns
cwtl
cmp
xor
jbe
add
cmp
daa
jae
jmp
sub
sub
and
mov
clc
or
inc
xchg
insb
jl
arpl
fists
lds
jae
das
cmp
xchg
rclb
jmp
fisubrs
sub
xchg
jg
loop
push
sbb
sub
lds
fiadds
leave
fidivrl
imul
pop
int3
test
into
or
leave
xor
adc
mov
divl
jo
rcrb
je
cmpsl
testl
cmpb
and
notb
jnp
pushf
sti
out
add
sub
rorb
mov
xchg
in
sarl
call
mov
mov
sbb
fistpl
imul
iret
movsl
lahf
imul
cmp
imul
jle
xchg
mov
lret
jb
notb
inc
fdiv
mov
push
int
mov
cmp
stos
jmp
add
fwait
iret
xchg
in
shrl
push
sahf
pusha
mov
imul
xor
mov
pop
adc
inc
or
mov
cmp
daa
sbb
push
ret
or
inc
out
fnsave
push
push
dec
jns
sbb
sub
ret
fs
dec
data16
push
jge
cmpsb
addr16
or
mov
data16
imul
pop
mov
shlb
and
sbb
cmp
or
test
adc
push
icebp
or
xchg
adc
repnz
mov
fmuls
inc
sbb
enter
idivb
xchg
outsb
loope
jo
outsl
mov
mov
enter
mov
adc
cmp
xchg
push
fbld
jmp
add
add
es
test
jne
std
push
push
push
adc
inc
push
bound
pop
mov
fs
mov
inc
mov
pusha
xor
stos
push
add
mov
out
dec
cmp
mov
rclb
jge
cmpsl
out
pop
mov
sub
inc
repz
mov
in
xchg
gs
aad
cmpsb
pop
ss
test
mov
ret
insl
push
adc
dec
sub
jo
sbb
rorl
ret
addr16
js
cmp
or
mov
loopne
xchg
or
mov
pop
mov
push
jge
push
mov
les
xor
insb
jle
xchg
int3
int3
inc
das
mov
popa
fnstsw
adc
jae
mov
lock
mov
lods
push
push
iret
bound
ficoms
push
jmp
mov
pop
movsb
ret
cld
int3
pop
cs
or
out
test
mov
popa
sub
jmp
pop
jno
and
jo
push
out
adc
and
mov
sub
in
lds
int
cltd
cwtl
adc
lea
dec
mov
enter
xchg
jge
mov
adc
xchg
dec
mov
sarb
push
mov
adc
loop
cmp
jmp
jmp
jae
hlt
push
out
and
jl
repnz
fwait
inc
or
cs
test
dec
int3
rolb
xor
nop
add
or
adc
sbb
pop
out
or
push
inc
and
or
test
sbbl
jle
or
cmp
ss
sbb
shl
xor
xchg
xor
fwait
xor
fistpll
mov
push
mov
adc
lahf
and
fs
adc
push
xchg
xor
jmp
push
xchg
enter
data16
sub
xor
popf
xor
inc
mov
mov
dec
xor
add
rcll
add
test
xchg
dec
sbbl
scas
cmpsl
iret
js
jne
sbbb
pop
dec
fisttps
push
aas
sbb
or
es
out
jle
into
js
clc
loopne
bound
push
daa
mov
mov
push
xchg
xchg
xorb
adc
cwtl
inc
sub
fs
jb
push
outsl
arpl
mov
fs
test
lcall
stc
js
cmp
pop
sub
cmp
cltd
inc
iretw
mov
test
movsl
js
dec
sub
dec
loop
loop
test
adc
jbe
push
or
add
andb
cmp
mov
sbb
sbb
in
insb
inc
int
xor
xchg
push
jns
sub
movsl
pop
daa
call
pop
mov
sahf
mov
add
test
mov
xor
repnz
aam
xor
sub
push
sub
mov
orl
in
sbb
jge
inc
icebp
roll
mov
sti
ljmp
pop
and
xchg
lea
cwtl
out
and
sbb
add
or
mov
outsb
add
sub
and
pop
lret
jge
jmp
jle
jg
movsb
ds
mov
scas
nop
mov
add
pop
rcrb
jne
daa
inc
ja
clc
mov
fidivs
lahf
gs
loopne
mov
add
jnp
cs
jbe
push
add
or
sahf
mov
mov
fs
out
ds
dec
mov
adcb
pop
aam
ret
std
sub
mov
mov
out
adc
push
xchg
sbb
mov
lret
es
jmp
cmc
xchg
or
mov
dec
push
mov
or
test
xrelease
jg
push
lods
adc
fidivrl
adc
or
and
lret
mov
xchg
sbb
test
sti
in
sub
lds
pop
negl
dec
pop
cmp
mov
js
cmc
or
dec
mov
fldt
stos
popf
xor
push
insb
ret
jecxz
sbb
jg
dec
aad
pop
sarl
into
lea
popa
mov
jno
and
test
roll
lds
cli
repz
sbb
fmuls
lahf
lea
es
jae
add
add
enter
hlt
cmpsb
scas
outsl
push
fistps
lret
test
sbb
insl
sub
push
pop
cmc
outsl
lods
stc
popf
cmp
push
fstps
aaa
pop
xchg
dec
out
repnz
daa
mov
iret
dec
stc
int3
mov
pop
imul
adc
fwait
movsl
xchg
add
push
xchg
xchg
jbe
dec
mov
sbb
pop
mov
ret
inc
pop
jge
xchg
scas
pop
lahf
mov
mov
xor
sub
mov
add
data16
and
push
mov
jne
lods
out
xchg
sahf
pop
xor
repnz
pop
jg
xor
and
cmp
outsb
sub
test
push
push
std
enter
jmp
incb
test
test
icebp
pop
loopne
lahf
stc
push
push
inc
fistpl
shll
inc
dec
das
xchg
pop
lcall
fucomip
xchg
dec
shlb
xor
int3
xor
and
pop
and
pop
xor
xor
push
ljmp
lock
leave
sub
out
jnp
pop
cmp
or
daa
pop
jg
lea
cmpl
sub
or
or
pusha
loopne
jecxz
loopne
iret
or
jp
sub
rcrl
add
add
data16
aas
push
and
sti
addr16
imul
sbbb
fdivs
fists
mov
cmpsl
in
sbb
sarb
xchg
or
nop
out
lds
pop
sub
cmp
and
cs
lods
fwait
lret
test
pusha
jns
sub
inc
adc
mov
dec
push
jmp
adc
aas
lret
push
repz
out
sbb
nop
imul
into
sub
hlt
or
fiadds
and
cmp
mov
sti
dec
mov
stc
popf
inc
sub
xor
mov
ret
dec
stos
leave
stos
mov
fdivr
out
cmpsl
ss
in
xchg
mov
xchg
sbb
push
test
test
xchg
repnz
addr16
sti
cmp
rol
mov
push
cld
jnp
sar
icebp
filds
pop
xchg
sub
test
scas
es
sti
fisubrs
or
and
cmp
in
fists
ret
scas
add
xor
sub
sbb
and
pop
and
xchg
push
lods
xor
in
inc
shl
nop
into
jge
sahf
dec
negl
ja
mov
add
xchg
pop
push
xlat
jmp
cmp
jp
ret
mov
ss
je
pop
ds
dec
add
scas
xchg
imul
jmp
das
push
mov
movsl
jg
push
aad
popf
sbb
xorl
and
inc
push
icebp
mov
jle
fldcw
sbbl
outsb
lea
add
aaa
loopne
jae
mov
push
mov
dec
addr16
subl
mov
push
push
loopne
test
adc
cmpsb
and
push
in
int3
test
lds
jns
mov
dec
mov
outsb
cmp
pop
loopne
fsubrp
daa
xchg
ljmp
ret
incb
movsl
mov
loope
mov
sub
or
push
lock
orb
pop
push
ds
stc
xlat
jb
enter
adc
sub
out
sub
or
inc
pushf
jmp
adc
lock
ljmp
mov
test
out
dec
in
cmpl
out
addb
mov
shrl
dec
nop
data16
shrl
mov
fwait
and
rcr
repz
sub
pop
cmp
mov
mov
jp
pop
and
dec
daa
nop
insb
push
test
lods
mov
shrb
pusha
test
cmp
inc
fmuls
and
fst
ds
fmul
imul
ret
pop
inc
ss
fidivrl
repz
outsb
push
xlat
aad
gs
sarb
xchg
stos
add
fdivr
cltd
pop
mov
fldenv
dec
pop
out
cmpsl
lcall
xor
clc
push
fistl
or
stos
push
imul
adc
or
sbb
jge
sub
pop
push
mov
scas
cld
cld
fucomip
sub
notb
stc
add
add
int3
lods
push
movsl
ficoms
sub
pop
xchg
mov
aad
pop
push
and
imull
iret
dec
aam
mov
pusha
aaa
test
or
mov
pop
stc
rcrl
lahf
sub
jae
ljmp
pop
lret
loop
inc
sub
popf
imul
jo
cmpsl
cmp
mov
dec
lahf
jl
xchg
mov
scas
xchg
adc
clc
mov
cmpsl
jecxz,pt
xchg
sub
fcoml
lret
and
scas
fstp
sub
jns
in
imul
ja
leave
xlat
cli
mov
or
das
data16
pusha
inc
adc
pop
leave
dec
cmp
mov
mov
mov
pop
mov
shll
popa
clc
pop
in
mov
jg
mov
or
in
xchg
xor
sub
jo
ret
jae
sbb
sbb
sahf
leave
iret
sti
pop
inc
faddl
mov
xchg
and
mov
xlat
std
push
stos
mov
xchg
ret
sub
shrl
mov
mov
mov
bound
repz
lahf
repnz
dec
xorl
lock
push
cmc
push
mov
aaa
adc
imul
out
sbb
movsb
into
fisubrl
or
xor
inc
sub
pushf
adc
js
xchg
pop
dec
int
sti
test
sub
test
shrl
rcr
sub
daa
sub
js
pop
icebp
shlb
jnp
repz
loopne
in
sbb
stos
or
lods
jnp
or
xor
xchg
leave
movsl
xchg
xchg
repnz
mov
shlb
inc
push
inc
repz
xlat
outsl
rol
cltd
xor
scas
jb
dec
adc
jg
cli
ljmp
mov
mov
or
ljmp
iret
dec
mov
or
sbb
jg
or
les
out
addr16
cltd
jmp
aam
andb
rcll
andl
mov
montmul
cmpsb
sbb
scas
adc
jno
xor
leave
bound
push
out
test
dec
iret
xor
inc
fs
xchg
jnp
mov
lahf
and
fadd
iret
push
cmp
fwait
fs
or
scas
fs
cwtl
and
adc
sbbl
movsb
add
scas
ja
pop
push
inc
idivb
push
xchg
inc
or
fisttps
test
dec
out
in
xor
dec
js
push
and
cwtl
shrb
mov
lock
xchg
fimuls
cmpsb
pop
push
cmpsl
push
inc
test
cmc
jns
subb
dec
push
popa
clc
pushl
xchg
xlat
pop
cmp
xor
and
or
adc
in
test
pushf
fsubr
in
mov
add
sub
shlb
mov
cmp
and
adc
imul
jmp
sub
ljmp
mov
insb
pop
sahf
popf
rolb
stos
jno
xor
insl
cwtl
xor
mov
ret
mov
jl
in
std
sbb
mov
ficoml
mov
jb
cltd
clc
mov
in
sbb
cmp
cmc
leave
sbb
and
out
push
xchg
mov
leave
popa
and
xlat
mov
cs
sahf
aam
cmc
add
cltd
std
xchg
jo
imul
xorb
fsubrs
xor
and
and
xor
xchg
adc
mov
cmp
pusha
jg
mov
adc
xchg
fldl2e
ja
es
and
xchg
or
xlat
mov
add
ret
xchg
andb
mov
adc
sbb
sub
mov
into
loop
adc
push
ljmp
daa
and
lahf
jle
cld
es
push
lcall
mov
stc
dec
xor
daa
jo
pop
mov
push
push
sbb
aad
and
add
xor
les
cld
inc
xchg
lock
icebp
lea
hlt
mov
sub
int
sub
jbe
iret
sub
cli
stc
cmp
push
push
fsubl
add
cmp
movsb
andl
ss
mov
cmp
add
jne
mov
pop
stos
mov
test
pop
sub
jne
and
xchg
cltd
and
add
jns
push
shrl
les
lret
stc
insb
fldt
sbb
jmp
dec
jecxz
ffree
mov
shlb
imul
pop
mov
inc
call
sub
mov
int3
mov
in
fldenv
adc
test
aas
fistl
fldenv
fnstenv
push
out
test
inc
xchg
out
aas
push
fmuls
int3
sti
scas
add
pop
mov
push
mov
mov
jl
mov
pusha
push
cwtl
xchg
ret
cli
mov
jnp
pusha
lds
fs
cmpl
pop
xorb
push
add
inc
jne
and
push
fdivrp
xchg
push
dec
loope
sbb
aas
or
push
mov
int
dec
ss
out
pushf
out
sbbb
add
fdivrl
fld
push
push
arpl
jnp
aaa
dec
fisttps
sub
shrl
dec
dec
pop
mov
cmp
sub
lahf
orl
pop
call
lods
in
inc
fdivrl
pop
arpl
xchg
sbbl
lods
inc
jnp
stc
xchg
cld
fcmovne
mov
data16
push
fxch
sub
pop
or
sub
fistpl
or
lods
jmp
addl
cmpl
add
mov
jg
ret
movsl
add
outsl
inc
adc
rol
pop
mov
mov
jae
sbb
sbb
in
ret
lret
or
in
stc
daa
inc
sub
stc
push
mov
pop
lds
dec
loopne
pop
shll
or
cltd
outsb
mov
sub
mov
lock
pop
xor
insb
stc
cltd
add
or
jle
out
outsl
bound
pop
dec
mov
jno
aaa
loope
xchg
pop
and
ret
jae
jecxz
out
shl
stos
test
scas
cmp
or
aaa
aaa
cmp
mov
orl
xchg
ss
nop
bnd
int3
movsb
inc
mov
insl
lcall
inc
lods
push
dec
popa
sub
mov
add
jbe
lahf
push
push
repnz
movsb
push
push
inc
mov
int
mov
jno
test
fldcw
cmp
sti
int
int
sbb
sahf
pop
mov
jns
dec
dec
loopne
mov
ljmp
out
xor
pop
popa
xor
and
dec
xor
int3
leave
mov
insl
jge
sbb
jl
pop
shll
dec
fstpt
outsl
scas
pop
iret
push
dec
add
jl
sub
jb
sbb
and
mov
xchg
int
sbb
fucomip
sbb
lcall
test
mov
insl
adc
cmpsb
sub
jae
push
sub
test
jge
inc
insb
or
mov
jl
mov
shlb
aam
mov
and
enter
xor
push
fdivs
sub
dec
dec
and
andb
leave
pop
sbb
mov
shl
sbb
lret
fnstsw
scas
mov
pop
or
loop
xlat
push
ja
movsb
lcall
mov
mov
shrl
lods
popa
jl
pop
and
cs
cmp
outsb
mov
loope
mov
ret
sarl
outsb
fldl
test
mov
shlb
or
jns
cs
dec
lret
pop
data16
jmp
lods
mulb
inc
addl
adc
adc
jbe
dec
add
mov
les
mov
fildl
cmp
imul
and
lods
pop
or
data16
or
jb
cmp
sbb
fcmovb
lahf
push
adc
or
mov
and
adc
icebp
or
mov
jo
bswap
clc
or
pop
adcb
aam
cmpsl
sbb
and
in
daa
call
and
add
adc
je
aaa
mov
pop
mov
cmc
lahf
sub
pop
jo
mov
jb
mov
push
add
andb
sahf
jp
and
jle
test
add
scas
pop
jecxz
sbb
or
jl
inc
mov
pop
jmp
or
lea
loopne
nop
je
add
jnp
mov
push
cltd
and
nop
int
test
dec
dec
outsb
sbb
push
mov
inc
pop
inc
cmpsb
fidivl
popa
outsl
and
jo
mov
fidivrs
imul
ret
dec
sub
and
call
jbe
pop
lock
adc
add
pop
xorl
adc
mov
jo
dec
xor
xchg
adc
push
es
inc
jg
xchg
das
outsl
pop
sub
icebp
testb
add
sbb
fdivl
cmp
fisubl
mov
sub
xorl
imul
pop
out
dec
andb
add
enter
mov
xchg
xor
out
in
xlat
rcr
push
and
jne
les
aad
arpl
add
shll
and
sub
push
push
sub
cmc
jge
jge
xor
loopne
imul
xchg
cli
aad
cmp
repz
push
dec
testl
push
xchg
push
in
test
loopne
add
decl
pop
ret
outsl
inc
inc
clc
and
push
sbb
mov
iret
xchg
fldl2t
int3
test
mov
push
sub
out
sub
sbb
cmp
int
cltd
jne
ret
xchg
cmc
sbb
add
pop
cmp
mov
popf
dec
cltd
cmp
aaa
aas
dec
adc
iret
dec
mov
shll
ja
dec
fidivl
push
dec
in
shl
js
insb
sub
lea
mov
add
sub
lret
clc
pop
imul
or
iret
sbb
fistpl
cmpsl
arpl
js
jae
mov
loopne
sub
js
cs
stos
mov
or
cmp
loope
dec
out
sbbb
inc
push
out
cmp
sbb
outsb
jle
jne
mov
adc
std
stos
clc
stos
leave
xchg
dec
sbb
cmpsl
sbb
mov
cmp
out
fs
dec
lea
lea
mov
mov
shll
nop
or
xor
or
loopne
shl
or
jecxz
mov
les
cmp
inc
fdiv
mov
jbe
mov
jns
je
arpl
sub
pop
dec
inc
jno
subb
mov
stc
nop
push
out
int
add
int3
sbb
mov
mov
jg
push
adc
stos
and
mov
adc
cmp
orb
cmp
test
add
jmp
xor
mov
out
dec
push
push
lods
ljmp
xchg
xor
fwait
repz
test
fwait
cmpsl
cli
inc
pop
add
mov
test
xchg
jg
mov
popf
adc
mov
and
inc
cmp
fwait
out
lcall
inc
lds
add
and
push
inc
dec
mov
inc
aas
loopne
lret
push
cmpsb
inc
movsb
mov
mov
push
shll
xchg
pop
cwtl
or
sub
scas
jle
ret
or
popa
sub
ljmp
xor
adc
je
xor
cpuid
push
popf
push
jle
aaa
sub
add
subl
arpl
dec
gs
adc
int
mov
cmp
fstl
and
fucomp
std
jmp
rcrl
sarl
shrl
shl
mov
mov
sti
mov
add
xor
xor
dec
pop
mov
push
bound
push
shlb
xlat
and
pop
dec
cmp
into
stc
cmp
lock
cmp
clc
lods
in
inc
cmp
dec
xor
mov
adc
push
cld
xor
cmp
pop
movsl
inc
mov
pusha
rcr
mov
ss
scas
sahf
insb
bound
sbb
mov
add
inc
mov
mov
push
adc
and
das
bound
icebp
mov
insb
rcr
jb
cmpsb
movsb
lahf
cltd
cmp
inc
lock
ja
in
pop
pop
nop
ss
shr
ret
add
jg
dec
xchg
repnz
ljmp
sbb
sbb
jns
add
cs
xor
mov
xchg
or
stc
lret
push
inc
inc
mov
jb
movsl
lds
pop
adc
pop
rorb
out
cmp
pusha
cmp
add
shrb
call
cmp
push
scas
ds
les
push
leave
fbstp
xor
call
repnz
das
cmp
cmp
dec
mov
jbe
repz
dec
cltd
js
ds
mov
pop
rclb
clc
and
pop
xchg
arpl
xchg
mov
frstor
dec
les
outsl
cs
outsb
int
xchg
mov
mov
fcomi
dec
or
xor
sub
push
lods
scas
ret
fimuls
jle
inc
fdivrl
cwtl
cmovle
xchg
and
dec
and
out
xor
lret
push
mov
loopne
outsb
adc
cmc
xchg
in
addr16
popa
mov
adc
xorb
es
test
rclb
jmp
jge
mov
push
push
jo
dec
or
xchg
mov
xchg
insl
pop
sbb
xchg
cmc
cmp
sub
lods
pop
les
sti
jle
or
insl
into
pop
lret
and
or
in
pop
xor
daa
jp
popa
or
jno
mov
or
xor
push
mov
test
int3
mov
mov
mov
out
imul
popf
arpl
xchg
lret
jmp
pop
sbb
cmp
cs
mov
repnz
sub
aas
dec
loope
cmp
es
xchg
dec
jecxz
insl
push
cmc
inc
gs
adc
xchg
mov
mov
jg
hlt
jmp
and
xchg
mov
out
push
ss
mov
repz
pop
pop
mov
shrb
mov
cmc
sub
repnz
in
and
cmc
push
mov
popf
lock
ret
pop
ja
inc
pop
fs
dec
sti
movhlps
ds
loopne
push
pushf
xor
decb
pusha
pushl
test
repz
adc
xchg
call
test
je
icebp
mov
ficomps
mov
fidivrl
testb
mov
sbb
and
jns
add
leave
out
sub
stos
xchg
pop
add
mov
lea
rclb
mov
jmp
aaa
dec
and
seta
push
mov
push
fwait
and
test
in
sub
rcrb
push
addr16
test
lock
aad
cmpl
add
mov
fidivl
add
cmp
push
jno
fdivrl
jo
mov
push
movsl
or
mov
jge
inc
pop
push
jno
sub
ret
loope
mov
xor
fsubrl
cli
or
mov
jge
imul
mov
fadds
fs
adc
out
daa
add
fldl
or
xorb
mov
mov
cmp
movsl
lock
pop
cltd
mov
fbld
mov
nop
test
pop
xor
push
xchg
cli
jo
sub
xchg
jge
es
pop
push
imul
push
sub
sarb
inc
jno
in
and
rorl
repz
push
stc
stos
sbb
in
pop
jl
jo
cmpb
pop
out
pushf
ret
scas
aam
or
xchg
lcall
loopne
outsb
gs
jge
scas
lds
jge
mov
fdivr
sub
mov
inc
jl
jl
in
sub
scas
add
loopne
sub
lea
push
cltd
sbb
repz
pop
es
stos
add
mov
mov
jb
xchg
aam
and
cltd
jmp
add
adc
dec
cwtl
out
cmp
shll
sub
adc
pop
lock
icebp
jp
pop
aaa
add
es
pop
dec
stos
in
jecxz
int
jp
lcall
mov
in
and
pop
push
adc
push
adc
insb
adcb
inc
aas
xlat
outsb
scas
add
mov
cld
xchg
jl
pop
cmc
out
adc
or
pop
lock
shrl
xchg
lahf
fistps
int
loop
push
mov
sbb
inc
outsl
dec
push
movsl
cmp
sbbb
mov
mulb
xchg
mov
push
lods
pop
lock
shl
jnp
mov
cmp
imul
icebp
aam
loope
leave
ds
or
insb
leave
flds
mov
lret
push
push
add
jb
add
insb
js
out
pop
test
add
fimuls
xabort
movsl
pop
pop
mov
jb
jg
lock
popa
mov
xor
lods
add
lret
sahf
jmp
dec
and
push
in
std
push
cmp
ret
inc
stos
outsl
mov
jno
out
push
add
movq
adc
subb
xchg
xchg
fcomps
and
jge
dec
popf
rclb
popf
iret
in
add
inc
lcall
cs
imul
cmp
pushf
out
ret
repnz
fmul
push
dec
mov
stos
inc
sub
mov
popf
pop
jae
cmp
push
inc
cmp
loopne
addr16
stc
xchg
lock
xchg
mov
ret
cmpsb
cmp
jp
mov
into
sbb
adc
xchg
cltd
jns
hlt
daa
popa
gs
stos
pop
les
cmp
pop
xchg
add
cmp
sahf
jmp
jnp
lods
repnz
adc
and
mov
jecxz
test
jbe
inc
pushf
and
hlt
imulb
inc
fstpt
sarb
mov
ret
cmp
test
nop
adc
outsl
call
or
push
dec
sub
repz
gs
xorb
ljmp
popf
aam
loop
ret
js
cmp
das
mov
fisubs
or
addr16
shlb
cmpsl
add
cmp
enter
loop
lea
jae
cmpsl
ret
inc
xchg
nop
dec
data16
sub
xchg
jno
ret
pusha
shl
xchg
adc
mov
mov
daa
mov
jle
pop
push
lahf
mov
adc
cmp
cltd
push
add
fiadds
adc
sub
std
xchg
pop
jmp
xchg
jnp
repnz
push
jp
jns
jns
iret
jno
and
pop
repnz
mov
add
xor
dec
movb
loopne
adc
scas
jne
xor
in
xchg
adc
in
test
loopne
mov
stc
add
test
dec
add
testl
pusha
sbb
or
cmp
repz
loop
add
in
jp
dec
and
sub
pop
movsb
data16
xchg
mov
insl
into
fistps
enter
push
jbe
popf
test
sub
ss
shrb
push
addr16
pushf
clc
pop
outsb
sub
icebp
ret
stos
mov
mov
sbb
mov
sahf
out
cmp
rcll
fildl
test
inc
cltd
add
mov
cmp
iret
pop
dec
inc
and
movsl
cld
mov
stos
push
out
std
push
addr16
dec
mov
fstpt
xlat
rcll
pop
add
xchg
iret
dec
add
jp
addb
lret
mov
xchg
lock
mov
daa
pusha
fdivrl
fisubl
cmp
inc
fstpl
sbb
fs
cmp
clc
cld
aaa
popa
jl
push
aaa
jecxz
cli
rcrb
mov
sbb
fldenv
test
or
adc
dec
inc
cmp
mov
pop
cmc
mov
out
dec
adcl
jo
in
test
inc
out
cmp
aas
cmc
cmpsl
out
imul
xchg
xchg
sbb
cwtl
mov
mov
push
test
push
icebp
xor
scas
lcall
jae
mov
loop
addr16
mov
xor
and
addb
adc
stos
lret
mov
sahf
cmp
sbb
loope
jb
mov
test
or
inc
scas
pop
loope
fcmovb
mov
push
stos
mov
inc
ja
xor
je
aas
dec
mov
pop
add
loope
push
in
cmp
je
out
pop
or
or
and
loopne
xchg
daa
add
jecxz
jno
sub
push
ljmp
sub
pop
jo
inc
and
cs
inc
into
stc
cmc
sar
or
pop
ja
xor
adc
jnp
xchg
mov
popf
mov
mov
add
mov
lods
dec
sbb
sbbb
mov
ja
mov
fidivs
leave
pop
cmpsb
icebp
fdivs
lods
xor
fs
cmp
ja
sbb
stos
cmp
shll
iret
sbb
gs
sub
inc
int3
dec
cmp
push
pop
pop
fbstp
push
data16
lea
sbb
dec
movsb
cmp
mov
ret
push
cltd
movsl
cmpsb
inc
icebp
inc
lret
xchg
frstor
inc
int
xorb
mov
test
cmp
push
popa
sbb
inc
jnp
out
cld
jnp
int
fsts
out
addr16
pop
scas
mov
xchg
daa
pushf
jno
dec
jb
jl
mov
adc
mov
inc
jo
sub
adcl
and
shlb
mov
cmp
stc
mov
ss
sub
jne
push
add
mov
mov
dec
pop
mov
cltd
sub
jl
or
adc
and
test
int3
xor
imul
test
outsb
cmp
pop
out
mov
cs
pop
enter
clc
mov
mov
lret
and
mov
or
hlt
adc
dec
dec
js
pop
pop
loop
outsl
fwait
jg
jnp
call
add
popf
jmp
push
adc
mov
jbe
test
push
pop
mov
pop
push
icebp
mov
sub
cmpsb
pop
mov
jge
xchg
sub
inc
add
imul
stos
cs
sbbb
sbb
inc
pusha
scas
sbb
push
scas
js
lods
pop
shrl
mov
sub
decl
rcll
and
jg
xor
repnz
jo
xor
xchg
jp
dec
sub
mov
shll
adc
add
inc
daa
or
inc
sbb
jne
out
inc
ja
jns
test
sbb
mov
pop
sub
fnstsw
mov
cli
pop
sbb
fstl
scas
jmp
cmc
sbb
lock
or
xchg
negb
mov
mov
dec
inc
pop
icebp
js
or
outsb
fdivs
sbb
mov
sbb
repnz
out
pop
aas
faddp
jae
push
lcall
cltd
sub
iret
mov
add
mov
and
int
aas
push
stos
or
dec
jns
jp
outsl
adc
add
jnp
jl
lcall
daa
and
pop
and
mov
and
sti
jae
mov
dec
fdivr
push
ret
xlat
inc
cmp
adc
inc
imul
subl
pop
aad
cld
xor
adc
adc
or
and
and
add
cmpsb
jbe
hlt
insl
dec
mov
jns
add
sub
popa
jo
push
sub
inc
sub
and
lods
inc
adc
mov
into
sti
in
jo
push
test
sub
push
jne
lcall
and
scas
adc
jmp
out
rclb
mov
add
loop
xchg
push
mov
pusha
jnp
mul
jl
sbbl
loop
jmp
scas
clc
xor
incl
sbb
test
mov
out
pop
icebp
xchg
pop
push
aas
xchg
mov
mov
pop
xor
scas
imul
fsts
pop
scas
mov
push
xor
arpl
in
push
jecxz
jg
add
adc
jmp
stos
xchg
push
mov
cmpsl
notl
lahf
cmp
inc
inc
sub
cmp
xchg
sub
mov
faddl
or
imul
jl
mov
mov
push
add
sub
daa
dec
dec
ficomps
sti
mov
lds
inc
ret
loope
popf
stos
insl
inc
inc
sbb
lock
in
push
mov
and
and
cmp
ds
pop
imul
popa
clc
pushf
ds
and
test
pop
jecxz
or
sbb
xlat
outsb
scas
orl
cmp
push
in
jb
xchg
iret
iret
xchg
mov
rcrl
mov
int
lahf
or
and
push
pop
mov
movsl
cmp
aad
cmp
iret
fimuls
mov
mov
nop
or
addr16
jmp
mov
stc
dec
xchg
xchg
push
out
adc
lds
imul
aaa
pop
pop
or
jns
ja
data16
popl
bound
shll
xchg
cmpb
mov
xor
jne
inc
outsb
imul
sbb
lahf
movsb
dec
nop
subl
scas
mov
pop
nop
outsl
decb
idivb
lock
insl
jg
cmc
andb
push
push
ficompl
or
mov
dec
pop
add
cwtl
das
pop
jl
mov
cmp
xchg
test
mov
jbe
insb
push
sbb
aas
xor
inc
arpl
in
icebp
mov
out
or
stos
xchg
mov
mov
cmp
xor
nop
dec
push
or
enter
ds
data16
xchg
and
into
test
dec
andl
out
fadds
loope
shr
push
sub
nop
jge
out
inc
cwtl
xor
xlat
sub
sbb
lds
lds
and
stos
push
pop
bnd
pop
dec
ja
jp
push
rorb
insl
stc
dec
sbb
movb
sbb
sbb
add
mov
push
xchg
mov
iret
ds
movsb
cmpsl
xchg
repnz
mov
sub
or
fbld
int3
mov
or
fdivrp
jns
into
in
lcall
dec
push
scas
adc
jne
rorl
mov
cmpsb
and
dec
mov
lods
insb
jo
jg
or
cmp
dec
cli
dec
jmp
inc
sbb
push
cmp
cmp
dec
xlat
sbb
sub
jge
adc
rcrb
call
loop
cmp
aad
inc
pop
mov
dec
mov
push
mov
pop
cmp
outsb
lcall
push
jno
scas
xchg
push
sub
mov
ret
insb
cs
xchg
pusha
lea
orb
jmp
mov
jmp
test
addl
add
test
cltd
insl
adc
pop
popf
add
shrb
and
push
mov
sbb
cmp
jbe
test
mov
and
push
bound
push
shrb
out
xchg
mov
aam
mov
test
jl
outsb
jns
cmp
pop
cmp
fcoms
cld
in
stc
dec
and
mov
fidivrs
jg
sub
fcmovbe
outsb
or
jg
in
adc
mov
sub
inc
pop
movsl
incl
shl
jecxz
fisubrs
sub
outsl
and
pop
in
dec
sub
icebp
pop
jl
pop
outsb
roll
add
popf
xor
cmp
or
inc
insl
cmp
pop
lock
cmp
xchg
rorb
lods
or
xor
insl
inc
sbb
cmc
sarl
cli
mov
sbb
or
and
sbb
lods
and
fsubl
dec
dec
sbb
out
test
pop
in
cwtl
cmp
or
mov
xchg
movsl
out
fmulp
inc
fdivr
jmp
fidivs
mov
cld
xchg
test
fidivrs
and
xorb
lds
scas
fistl
or
add
nop
inc
aam
cmpsl
cmp
out
xchg
mov
xchg
add
enter
std
fmull
stos
push
adcb
je
jp
xlat
into
xor
cmc
lret
pusha
mov
xchg
aam
aaa
add
insb
dec
lods
add
in
pop
push
js
aad
add
arpl
adcl
cmp
inc
jmp
jno
jo
gs
pop
dec
xchg
sub
and
or
pop
cmpsb
xchg
xchg
sub
pop
mov
orl
mov
mov
imul
fdivl
movsb
mov
push
iret
fs
pop
addb
out
pop
insl
sahf
mov
ss
adc
std
xchg
mov
xlat
add
inc
bound
lods
lret
and
xchg
fisttpll
and
adc
ds
xor
pop
hlt
inc
mov
rcrb
lods
sbb
leave
sbb
clc
ds
jae
stos
int
imul
aad
scas
cs
je
pop
and
push
and
jne
xor
mov
inc
lods
jmp
or
popa
pop
xchg
ja
cmp
pop
in
outsb
jnp
sub
xor
sub
das
loope
insl
icebp
dec
pop
out
mov
xor
cld
aaa
fnstcw
dec
push
xchg
decl
in
stos
or
push
add
or
push
mov
rcrl
mov
cmp
mov
dec
lds
stc
xchg
sbb
or
shrb
enter
dec
pop
cmp
lods
out
imul
xchg
outsl
je
insb
xchg
clc
mov
loopne
repz
mov
mov
dec
add
sbb
stos
insb
stos
cmp
movsl
inc
decl
out
add
stc
mov
into
int3
adc
mov
loopne
shrb
mov
ret
push
and
or
incl
clc
andl
and
push
outsb
push
add
imulb
dec
pop
lock
lock
out
imul
fsubr
inc
pop
add
push
ficompl
rcr
jnp
es
int3
add
jne
push
cmc
jp
xlat
test
ds
pop
pushf
cmp
popf
fistps
cmpsl
ds
test
pop
jp
lcall
daa
xchg
pop
les
repnz
xchg
hlt
inc
arpl
dec
test
and
inc
mov
push
shrb
fs
sbb
sub
sbb
jo
xchg
jo
insb
cwtl
dec
dec
repz
test
xor
int
dec
mov
mov
int3
fisubl
push
in
fists
jbe
push
xchg
imul
iret
sbb
je
fisubs
lcall
or
lret
das
pop
inc
frstor
out
lods
add
cmp
sub
sub
pop
mov
push
mov
dec
mov
lock
adc
pushf
test
xor
jno
pop
sub
ret
cmpsb
adc
mov
push
push
or
or
daa
ja
cmp
push
lret
ficompl
lods
add
sub
mov
jo
test
je
shrb
loop
pop
pop
test
jg
data16
sbb
jbe
sub
sbb
les
mov
xor
xchg
sub
or
jle
fwait
jnp
adc
int3
pushf
gs
lret
repz
repnz
push
sahf
mov
aad
sbb
int3
fsubrp
std
ja
jbe
or
dec
movl
rol
aam
adc
repz
xor
xchg
aaa
mov
lea
or
rorb
test
mov
inc
imul
xchg
and
stos
push
inc
xchg
outsl
push
pop
push
popf
sub
jge
loopne
xor
push
add
je
in
pusha
mov
out
xchg
cmpsb
je
jo
adc
add
jmp
jmp
inc
and
sahf
test
xchg
xchg
jle
inc
pushf
mov
sbb
shlb
sub
xchg
sti
and
sub
cld
enter
hlt
inc
bound
push
push
dec
cmp
push
mov
sbb
rcrl
nop
pop
sub
cli
mov
enter
dec
cmp
push
jb
or
sub
fmul
adc
sbb
pop
repnz
ss
test
in
jge
mov
lret
sub
mov
dec
or
cmova
loopne
dec
clc
or
loopne
lock
dec
into
cmc
cmc
popl
add
imul
mov
xchg
dec
inc
xchg
adc
or
ljmp
rclb
out
dec
insb
pop
and
mov
inc
xchg
jo
and
sub
add
ds
xor
mov
int3
lds
jns
and
cltd
ret
adc
mov
sub
xchg
ja
xchg
mov
xor
dec
and
js
inc
pop
jle
subb
pop
popa
jle
outsb
mov
iret
jbe
lds
stos
mov
lcall
push
out
pushf
xchg
aas
jo
add
aaa
jecxz
popf
xor
mov
fiadds
push
repz
and
xor
mov
xchg
push
and
jle
jecxz
out
push
push
jl
sbb
push
jo
adc
and
mov
leave
lods
push
movsb
pushf
mov
ret
jg
inc
inc
andb
xor
cmp
test
enter
push
inc
sbb
rorb
push
stos
xor
xchg
pop
inc
jecxz
aas
icebp
fisubs
xor
fdivr
int
fstpt
jb
call
imul
dec
sub
aam
mov
movsb
inc
cli
add
jne
xchg
cmpsl
or
es
dec
fidivrs
aad
and
pop
dec
fsubrs
lods
inc
in
dec
bound
clc
hlt
fdiv
mov
andb
ja
add
std
insl
add
fsubrs
add
mov
icebp
mov
mov
mov
test
or
daa
jle
cmpsb
dec
mul
test
jecxz
push
test
imul
cmpsb
xchg
push
hlt
aam
mov
scas
xor
addb
fucomi
cmp
jecxz
arpl
jne
daa
inc
mov
bound
stos
test
movsb
dec
push
add
shlb
insb
inc
xchg
fidivl
mov
pop
imul
mov
mov
jg
fwait
lcall
xor
mov
jl
movsb
loope
push
ss
dec
out
mov
movsb
in
xchg
ljmp
xchg
mov
pop
out
jmp
dec
hlt
and
mov
sbb
out
jb
jle
mov
nop
fwait
xor
adc
cmpsb
or
cmp
in
test
and
xor
adc
call
or
ja
in
sub
jnp
repz
or
push
or
cmp
push
push
pushf
pop
and
loope
sbb
int
jl
pop
loop
adc
imul
inc
testl
add
out
push
xchg
push
jno
daa
sub
scas
cmp
or
and
jmp
or
sbb
lret
xor
push
imul
cmc
mov
movsl
inc
inc
out
imul
jle
aas
test
dec
inc
das
cs
test
mov
aas
mov
mov
or
stc
or
clc
push
pop
loope
xchg
jo
repz
loope
sbb
fidivl
xlat
push
mov
sub
inc
popa
fs
xchg
pop
cli
xchg
mov
pop
push
fnstenv
outsl
fistpl
jp
add
sub
lods
leave
nop
sbb
pextrw
movsb
inc
mov
decb
test
xor
flds
mov
out
les
mov
jno
popa
fisubrl
sbb
add
jge
push
andl
les
das
add
add
imul
xchg
add
push
repnz
xor
pushf
in
and
and
sahf
cmp
dec
mov
fmuls
mov
cmp
lods
jb
andl
and
fistps
jecxz
dec
jmp
mov
movsb
cltd
fisubrs
xchg
sbbl
cmc
xchg
xor
sarb
xchg
jl
dec
sbb
popf
sbb
jmp
add
fucomi
sbb
add
or
mov
int3
arpl
xor
rorb
loop
jg
sbb
dec
xchg
dec
cmp
jns
jecxz
mov
fwait
out
dec
shl
mov
mov
lcall
xchg
mov
mov
orl
scas
mov
adc
leave
enter
pop
ret
sub
and
std
adc
cmp
xor
std
insl
or
cmc
sbb
jle
ret
iret
pop
stos
jmp
push
lcall
aam
adcl
gs
lods
pushf
jo
jecxz
sub
sub
mov
out
mov
pop
push
cmp
mov
subl
ret
fwait
xor
dec
mov
rclb
push
dec
cmc
and
pop
inc
adc
rcl
dec
fs
mov
fisubl
mov
andb
icebp
lods
jg
inc
aad
repnz
mov
add
in
push
pusha
stc
add
hlt
mov
adc
and
xchg
xchg
sbb
es
in
test
mov
sbb
fistps
mov
pop
mov
aad
ljmp
ljmp
mov
sti
mov
adc
rcrb
mov
imul
mov
sub
ficoms
mulb
test
enter
sbb
jle
pop
mov
adc
pop
out
inc
push
jecxz
push
fcomi
mov
xor
fldcw
aaa
gs
push
jno
xchg
mov
push
fsubrl
xchg
jmp
jns
jo
popa
loopne
push
adc
mov
insb
xchg
cmp
mov
push
repnz
and
mov
xor
test
and
mov
inc
in
pop
add
repnz
mov
aas
jecxz
xchg
sub
push
fadds
push
mov
inc
fucomp
std
pop
cmp
inc
jne
xor
push
js
pop
mov
adc
or
std
out
mov
push
pop
jecxz
xchg
adc
enter
lahf
xor
cmp
testb
les
stos
inc
lahf
xor
int3
aas
push
rcrb
in
popa
das
xchg
and
mov
out
enter
add
fisubrl
ficoml
sbb
cmpsl
popa
jge
dec
push
or
subb
lea
mov
in
cmpsb
loope
inc
ss
cmp
pop
or
sbb
dec
sub
xor
sub
dec
vpsrld
mov
stos
je
test
fstpl
xor
inc
lea
dec
pop
sub
repnz
mov
es
add
inc
sub
mov
pop
xchg
mov
jle
imul
and
mov
jecxz
xor
inc
xchg
js
rcrl
mov
rcr
mov
inc
test
lods
push
pop
dec
in
mov
call
int3
sbb
push
ror
jne
repz
adc
scas
inc
pusha
pop
ds
arpl
arpl
cmp
mov
fimuls
ret
jg
dec
and
aaa
add
inc
loopne
fbstp
jnp
dec
lret
jo
popf
movsb
dec
pop
repnz
add
cmp
sub
es
sbb
dec
push
jmp
and
pop
mov
push
jbe
xor
lret
daa
fsubrs
enter
pop
xchg
std
xchg
inc
adc
stos
cs
dec
cmc
pop
xlat
movsb
jnp
jp
jmp
notb
adc
daa
xchg
daa
inc
mov
pop
shrb
and
sub
iret
popf
and
test
push
add
and
stos
mov
mov
pusha
ja
sub
or
fisttpl
scas
bound
add
mov
jmp
out
ret
fwait
out
aaa
jmp
stos
std
add
mov
addb
adc
pop
sub
shr
pop
ljmp
popa
cmpsb
es
mov
inc
fcompl
mov
xor
pop
xchg
xor
repz
icebp
or
stos
out
mov
and
sahf
sbb
std
xchg
loopne
lea
rorb
insb
enter
fwait
pop
mov
mov
lcall
mov
adc
lods
xor
je
lret
movsl
jbe
in
outsl
sbb
sbb
stos
inc
pop
xor
sbb
xchg
cmpsl
jo
ja
iret
xchg
cs
popf
mov
pop
outsl
mov
shrb
push
jno
mov
ss
int3
imul
jae
push
cmpb
sbb
fstps
mov
std
adc
gs
in
cld
cmc
mov
xlat
sub
dec
dec
stos
jl
jne
xor
adcl
xor
enter
addl
mov
stos
pop
in
mov
cmp
les
shlb
inc
lods
lcall
and
shlb
and
jns,pt
fiaddl
mov
push
daa
push
test
mov
sbb
insl
loopne
mov
jb
mov
mov
pop
sub
hlt
shlb
sub
inc
insb
cli
cltd
int3
movsl
or
in
popa
aaa
ja
scas
inc
lock
in
cmp
and
roll
das
xchg
mov
lock
aas
dec
push
adc
mov
jno
and
inc
lcall
cmp
pusha
push
cli
jb
daa
js
jle
dec
mov
arpl
pop
outsl
test
pusha
lods
inc
rcl
mov
or
rorb
in
fnsave
out
cli
fdivr
xchg
push
push
aas
dec
cmp
jge
pop
sbb
sub
xchg
sub
loope
push
xchg
sbb
add
xchg
xchg
mov
lods
mov
cmp
add
push
repnz
imull
jge
and
mov
add
add
test
mov
out
mov
inc
lock
shll
hlt
cwtl
in
push
jmp
sbb
fldenv
imul
inc
adc
cld
mov
mov
ret
clc
sbb
xor
imul
xchg
lds
pop
shlb
sahf
xchg
mov
ret
and
mov
inc
fcomps
mov
jmp
pushf
sbb
xchg
mov
jecxz
xor
in
out
sti
sbb
cld
sub
or
push
sbb
invlpg
xchg
rcr
jne
ss
pop
cmc
out
xchg
dec
mov
mov
imul
xchg
arpl
mov
mov
dec
imul
lock
rcr
pop
or
ret
enter
mov
fsubs
jle
and
rorb
push
pop
imul
aad
out
pop
push
mov
mov
or
xchg
add
jg
dec
mov
mov
jno
out
push
in
lea
push
or
and
aam
loopne
mov
mov
pop
inc
sti
sub
sbbb
adcb
mov
push
insl
fsubp
mov
xor
lcall
cmpsb
mov
in
cmpb
xor
inc
lds
sti
cmpsb
incb
pusha
imul
cmpsl
pop
push
lahf
cmc
out
subb
scas
push
sbb
out
aaa
inc
fldcw
inc
fidivrl
fldt
out
pop
mov
stos
stos
daa
or
xchg
daa
outsb
insl
xchg
pop
or
das
in
lret
les
outsb
jmp
pushf
lods
mov
mov
ret
adcl
push
adc
adc
fs
lods
cmp
mov
fisttpll
test
scas
sarb
test
xrelease
xchg
pop
lods
adc
lods
rcr
and
mov
cld
xchg
lods
pusha
sti
inc
or
jecxz
outsl
sub
push
int3
addl
lret
fwait
sub
jecxz
dec
les
mov
pushf
jno
scas
mov
ret
notb
fcmovnb
xor
out
pushw
into
pop
jne
pushf
cli
mov
ficomps
bound
js
adc
sti
outsb
jecxz
out
cmp
mov
sbbl
pop
rcrl
xchg
sub
sahf
cmp
xchg
sub
adc
lcall
int
mov
call
sbb
cmp
test
fimuls
popf
mov
shrb
pop
imul
xchg
sub
popf
cmp
mov
fisttps
lcall
lods
cmp
pop
daa
or
cwtl
test
jb
mov
add
cmp
ljmp
scas
pop
cmp
add
fisubrl
or
mov
jno
dec
cmp
mov
add
mov
pop
add
cs
jb
sbb
adc
xlat
addr16
rcrb
loope
jne
jno
mov
cmc
cmpsl
mov
std
adc
cmp
xor
adc
lods
inc
pop
mov
mov
sub
adc
pusha
enter
jmp
inc
or
shrb
or
or
or
mov
pop
jo
pop
pop
sub
test
inc
or
scas
pop
push
popa
or
loope
sub
je
rorl
lret
dec
cmpb
in
mov
xchg
jge
inc
xlat
mov
cwtl
cmp
in
aas
subl
add
out
lcall
xor
jecxz
push
aaa
xlat
jmp
sbb
sbb
inc
xchg
addr16
pop
es
rcl
xchg
inc
in
movsl
mov
push
decl
pushf
ss
cld
sahf
push
mov
loopne
and
out
dec
mov
ret
adc
into
mov
push
leave
sti
repz
gs
setl
xchg
cmpsb
hlt
mov
inc
inc
and
addr16
cwtl
adc
jle
xor
aam
sbbb
test
pop
call
es
lods
aas
jmp
mov
push
outsl
dec
sahf
std
sub
mov
and
loope
inc
test
add
and
push
dec
cmc
mov
xchg
fdivp
lods
lds
int
xchg
ljmp
xchg
je
outsb
in
xchg
sbb
dec
add
sub
mov
or
xlat
outsb
mov
int3
push
adc
pop
mov
shl
or
push
aaa
add
aad
jmp
pushf
push
popf
jo
cmpsb
mov
popa
xor
cmp
cmp
xchg
mov
pop
bound
cli
cmp
adc
push
jmp
shl
fwait
out
xor
cs
push
jbe
dec
dec
mov
adc
das
int3
out
sbb
xchg
icebp
xchg
test
or
aas
icebp
or
inc
xor
adc
cmpsb
es
mov
dec
dec
in
push
dec
loope
mov
imul
and
inc
les
push
cltd
xor
mov
inc
fistpl
stc
cltd
xor
cmp
in
jbe
inc
fcmovnb
push
xor
push
in
mov
inc
faddl
cltd
xor
adcl
push
inc
fstl
cltd
xor
test
out
outsb
mov
cwtl
ss
stos
cmp
mov
dec
or
xchg
mov
sbb
adcb
push
adc
sub
cmpsl
int
add
scas
pop
imul
movsb
push
inc
test
mov
sbb
jl
shlb
jo
and
iret
mov
sbb
imul
sbb
mov
dec
mov
adc
outsb
addr16
popa
loopne
outsb
add
jle
lea
cmp
es
pop
lds
push
jnp
inc
pop
shl
mov
mov
imull
out
push
mov
test
jnp
sbb
pop
in
jno
cmp
in
sbb
dec
inc
mov
sahf
imul
inc
fwait
hlt
jg
push
mov
movsb
cmpsb
jge
sbb
loop
movsl
fsubrs
stos
loop
cmp
insl
sbb
aam
stos
nop
mov
adc
aas
push
xor
sub
js
aam
jecxz
mov
sbb
aas
mov
adc
cli
adc
loope
mov
and
xchg
dec
lds
call
stos
xor
call
mov
and
orl
in
push
jmp
orb
jns
pop
mov
pop
shrb
out
cmp
out
lock
jnp
das
in
addl
mov
xchg
int
shll
push
cmp
dec
pop
movsl
lret
dec
lcall
out
ljmp
add
fnsave
sbb
mov
mov
fxtract
cltd
mov
xchg
mov
push
xchg
push
jecxz
shl
inc
loopne
xor
lret
mov
insb
mov
and
sbb
sub
mov
xchg
pusha
aam
std
nop
cmp
out
add
es
daa
mov
in
out
sub
jns
pop
jb
add
hlt
mov
sbb
rcrl
add
sub
cmp
ja
add
gs
ss
mov
orb
push
bswap
imul
xchg
sub
fld
xor
dec
push
fldl2e
mov
xor
and
fcoml
pushf
ss
addl
adc
mov
loop
movsb
inc
push
lret
jns
sti
cwtl
push
or
in
addl
decl
jmp
iret
fidivs
popa
scas
cmp
rorb
in
adc
and
mov
xor
or
mov
push
movsb
imul
push
enter
outsl
and
leave
dec
ret
push
mov
add
mov
scas
out
xchg
aad
push
movsl
repz
shl
dec
xor
xchg
arpl
push
sbb
sbb
mov
pop
jmp
lret
inc
enter
mov
push
hlt
data16
mov
jecxz
add
push
fists
jns
mov
into
jno
aam
cmp
xchg
xchg
aas
cmp
rcl
out
sti
sbb
and
scas
dec
notl
sbb
push
imul
fildll
movsb
int3
je
jb
sbb
out
add
dec
mov
mov
push
push
inc
mov
repnz
scas
andb
lahf
mov
cmp
stos
fcmovne
fdivrs
mov
jle
test
and
scas
cmp
imul
sub
mov
dec
out
shlb
inc
fldl2t
int
add
loope
je
xor
or
test
jnp
call
out
xchg
cmp
aaa
dec
pop
int3
je
adc
fiaddl
std
test
mov
mov
and
sarl
and
push
sub
mov
mov
lcall
lea
les
movsb
push
mov
cltd
dec
pop
sbb
dec
xor
lret
pop
imul
pop
and
into
fwait
mov
mov
lcall
and
push
push
in
aas
or
sti
xor
test
pop
xor
mov
shrb
xor
fwait
das
xor
jge
dec
xchg
push
push
jmp
xor
inc
add
mov
enter
gs
inc
xlat
adc
je
mov
iret
roll
mov
mov
inc
pop
mov
xlat
mov
xor
sub
pop
lods
xor
and
outsb
clc
jbe
sbb
repz
mov
fwait
lret
rcrb
xorb
fistps
sbb
sbb
fs
xor
pop
scas
push
sbb
addr16
cmp
dec
outsb
cmpb
scas
mov
mov
enter
mov
pop
sbb
sub
sub
iret
bound
sub
jno
stos
mov
xor
les
insl
xchg
jne
cmpsl
out
xor
pop
lods
into
dec
scas
test
dec
subl
xchg
xchg
mov
cmc
push
lret
daa
pop
dec
push
sbb
jp
int3
mov
mov
mov
hlt
jbe
imul
inc
popa
fdivrs
orl
mov
cmp
inc
and
das
cmp
xlat
dec
ffreep
into
sbb
out
mov
mov
xor
xchg
dec
pop
popf
xor
call
addr16
inc
mov
mov
loopne
mov
dec
in
rolb
ret
imul
jg
mov
cmp
push
sub
push
inc
push
mov
cmp
mov
test
mov
and
gs
js
dec
jns
popa
lods
jo
pusha
filds
clc
push
sbb
inc
jle
mov
movsl
mov
popa
mov
jno
rcrb
sbb
and
movsb
mov
mov
jle
push
cltd
jmp
cmp
roll
xchg
icebp
jle
loop
nop
adc
gs
int3
cmp
idiv
shlb
movsl
sbb
fisttpl
mov
mov
lds
scas
cmpsb
inc
or
out
sbb
mov
int
push
cwtl
xor
dec
hlt
movsl
das
aas
leave
mov
imul
scas
adc
jge
cmpsb
sbbb
mov
mov
and
push
popa
imul
push
push
enter
cli
mov
dec
sub
imul
arpl
addr16
dec
pop
test
movl
and
jno
ljmp
test
lret
push
stc
shlb
mov
mov
xchg
cltd
stos
jbe
cwtl
imul
cmc
xchg
daa
push
mov
hlt
gs
xlat
insl
mov
adc
push
add
int
loopne
loop
sub
imul
adc
lret
lcall
pop
cmp
lds
push
jmp
leave
dec
popa
leave
mov
es
std
xchg
jg
dec
mov
jnp
test
rclb
cmp
loope
xchg
repz
pop
mov
inc
cmc
dec
add
mov
loopne
pop
jp
std
xor
in
and
push
pop
xor
insl
scas
mov
pop
pop
in
add
fidivrs
data16
fcoms
dec
in
rolb
cmpsl
call
imull
push
inc
push
or
jns
pop
fwait
aam
fldcw
out
sub
mov
pop
lahf
call
mov
adc
lret
mov
mov
mov
int
mov
jmp
leave
mov
jle
fwait
cs
rolb
sahf
mov
mov
test
sub
pop
cmp
loop
popf
arpl
mov
das
mov
mov
dec
sub
ljmp
mov
add
or
dec
sbb
popa
push
aad
or
xchg
test
or
mov
xor
pushf
push
popf
into
mov
and
cmp
fnstcw
xor
scas
inc
and
leave
xor
inc
mov
push
lods
pop
push
pop
lods
cmp
jl
icebp
scas
ss
hlt
xchg
inc
js
call
xchg
jno
cwtl
and
or
std
pop
jmp
or
in
jne
repnz
int
jmp
test
cwtl
movsl
ret
jnp
mov
aaa
cltd
xor
inc
pusha
push
pop
jmp
mov
movsl
mov
xor
xor
jmp
mov
or
addr16
add
adc
inc
aam
mov
pushf
xorb
cli
stc
nop
sub
in
stos
inc
dec
pop
xor
jno
int
pop
aad
mov
sub
inc
iret
sub
bound
pop
pop
xorl
push
loopne
push
xor
push
daa
scas
aad
decb
lret
mov
shr
daa
stc
pop
clc
jae
sub
imul
add
les
out
lcall
sbb
addr16
sub
pop
mov
jno
int3
pop
sub
fbstp
ja
inc
out
xor
add
sbb
xchg
insb
mov
movsl
sbb
and
push
jns
sub
cmp
inc
sub
xor
sub
in
fsubrs
ja
xor
addr16
lea
nop
push
push
pop
repnz
hlt
sbb
out
mov
in
js
sbb
mov
icebp
lcall
jg
fs
pop
in
and
push
test
cmp
not
push
out
or
jle
daa
mov
push
mov
call
cmpsb
sbb
clc
inc
dec
sub
faddl
sbb
and
fnstenv
push
push
lret
pop
daa
adcb
insb
leave
int
lods
test
push
aaa
push
cld
sbb
cmp
movsb
mov
adcb
xchg
arpl
movsb
jmp
lds
mov
pop
out
inc
cwtl
dec
or
add
arpl
sahf
test
inc
inc
xchg
dec
sbb
lahf
dec
outsl
push
fidivrl
push
mov
pop
mulb
xchg
rolw
xor
push
in
push
inc
arpl
sub
mov
adc
mov
add
xlat
outsb
cmpsb
sarl
xor
loop
in
lahf
mov
mov
dec
cmp
mov
inc
xchg
cmpsb
shll
in
fdivrs
addr16
adc
inc
mov
fmull
out
xor
mov
iret
ljmp
test
loop
push
xchg
loopne
xor
or
andb
ss
jecxz
lea
movb
idivl
in
cs
and
popf
mov
add
jp
sbb
cmc
rclb
mov
cwtl
lods
mov
pop
xor
arpl
add
mov
scas
popf
mov
adc
sub
fadds
xor
fldl
inc
push
je
cmp
jnp
sub
or
cmp
gs
xchg
push
mov
push
xchg
push
je
dec
add
xchg
cmc
mov
xchg
mov
adc
cmp
jne
inc
out
lock
jp
sti
aas
loope
in
movsl
inc
xor
jmp
or
icebp
mov
cwtl
stos
out
ret
mov
out
xchg
sahf
inc
ret
pop
mov
sbb
pop
and
cld
push
cmc
lock
ficomps
jecxz
bound
push
pop
mov
cwtl
sbb
xchg
jae
test
lret
hlt
fidivl
or
fdivrl
sub
aaa
hlt
push
arpl
xchg
pop
jnp
mov
aaa
into
push
mov
push
sub
ret
sub
jbe
rcll
add
imul
add
pop
mov
lea
rcl
push
scas
mov
repz
lcall
dec
cwtl
jno,pt
add
push
subl
dec
or
call
xor
andl
ss
adc
mov
cmp
fdivs
inc
repz
pop
mov
inc
lea
xchg
mov
ljmp
fldl
pop
sub
adc
pop
dec
and
lods
nop
stos
fs
out
fcoml
iret
test
aas
incl
paddq
and
loope
xchg
ss
inc
sbb
inc
push
sub
pop
sti
imul
lret
xchg
xor
leavew
pop
dec
mov
pop
dec
mov
addr16
lcall
int3
ss
data16
xchg
gs
jmp
into
ret
pop
rorl
dec
push
mov
dec
mul
dec
shll
dec
push
dec
lahf
mov
mov
push
mov
fidivrs
sub
dec
xor
cmc
xchg
ja
test
inc
mov
call
sbb
shlb
jge
and
mov
rol
test
fisubrs
push
mov
push
mov
xor
push
lods
xchg
test
jbe
add
scas
cwtl
mov
loope
ja
lock
arpl
mov
je
lods
test
repz
adc
dec
add
cmp
xchg
jbe
mov
sbb
lods
cmc
or
or
mov
mov
rolb
xlat
mov
movb
jb
mov
aam
cmpsb
jge
popa
stc
mov
aaa
sbbb
mov
mov
adc
sarl
in
inc
adc
dec
pop
push
pop
push
add
imull
popl
imul
mov
add
push
mov
and
add
iret
push
adc
enter
or
push
cmp
jb
or
mov
xchg
dec
lods
testl
cli
lock
pushf
mov
dec
cmp
add
jbe
pop
sbb
int3
test
pop
dec
pop
push
stos
xchg
sub
push
pop
sub
cs
xlat
push
mov
dec
and
sbb
incl
in
cmpsb
fs
adc
ss
out
bound
loop
push
ljmp
imul
xor
mov
dec
push
mov
mov
nop
sbb
mov
sbb
mov
sbb
in
icebp
adc
lea
push
or
fadd
les
repz
in
lock
sub
imul
lahf
ja
lea
lahf
xchg
gs
xor
inc
adc
xor
push
dec
repz
ret
imul
out
and
std
shlb
adcb
cli
cmc
es
sbb
add
das
mov
adc
xchg
jle
cli
push
addl
cmc
mov
inc
ja
jo
push
mov
sub
mov
sbb
mov
addr16
mov
test
cmp
sahf
sub
push
std
sahf
add
sub
mov
pop
aaa
std
hlt
repnz
cmp
mov
inc
lahf
mov
pop
lods
std
inc
sbb
sbb
dec
aas
push
scas
call
stos
out
mov
popf
repnz
sbb
jno
outsb
lcall
jne
das
addr16
movsl
sbb
mov
rcr
xchg
insb
xor
inc
mov
jmp
inc
dec
pop
jl
andb
push
iret
outsb
inc
mov
fwait
hlt
cmpsb
fcompl
das
loopew
cmp
lods
pop
jecxz
lock
stos
aam
aaa
pop
lods
dec
xchg
add
in
and
xchg
mov
push
xchg
mov
mov
or
mov
inc
mov
sub
adc
sbb
stos
pop
dec
push
xorl
mov
into
imul
push
test
lds
sub
out
dec
jecxz
xchg
loopne
dec
inc
push
cld
lahf
cmpsb
sbb
push
mov
rorl
scas
fmuls
lahf
outsb
inc
lds
std
js
mov
outsl
call
frstor
jg
pop
lret
das
cmp
jle
enter
push
dec
call
fadd
xchg
jnp
jg
mov
sbb
sbb
fs
xor
mov
mov
test
in
push
jle
xchg
daa
jle
ds
xor
mov
scas
jbe
mull
adc
fwait
jo
push
call
mov
xlat
repz
int3
or
ss
jle
xchg
sbb
cwtl
mov
fldcw
mov
std
inc
mov
into
mov
outsb
seto
xchg
sub
add
out
hlt
stos
push
aad
mov
pop
xor
cli
fwait
jmp
inc
dec
popa
orl
hlt
mov
scas
push
js
mov
cltd
clc
shl
in
mov
mov
add
mov
in
ficoml
jb
and
jle
rolb
push
hlt
cmp
shlb
shrl
push
stos
dec
rcrl
pop
and
mov
sub
or
and
push
shl
add
jge
rol
inc
xchg
int3
sbb
sbb
add
sub
cmp
pop
xor
mov
push
push
andl
mov
xchg
stos
ds
add
inc
mov
les
daa
inc
lock
mov
int3
insl
add
pop
jp
rcrl
ss
out
icebp
mov
les
ret
ret
or
and
sbb
ret
jae
xchg
dec
lock
stos
jmp
dec
pop
sahf
call
test
aad
or
pop
jmp
jbe
ljmp
and
sbb
das
cmp
mov
jl
add
xorb
fisttps
scas
scas
inc
sbb
sbb
jge
cmp
xor
leave
cmp
fwait
imul
into
popa
gs
mov
adc
xor
mov
sub
mov
push
sbb
js
add
sub
add
mov
push
xchg
add
xor
pop
scas
addl
test
enter
ds
sbbl
pop
inc
icebp
call
cltd
stos
aad
stos
push
push
inc
adc
lret
sbb
sti
adc
mov
push
cmp
xor
jge
mov
in
or
pop
adc
cmpsb
adc
xchg
inc
imul
mov
dec
inc
aad
cld
jge
test
dec
sub
shrb
and
sub
mov
fistpl
enter
cmc
fs
cmp
out
lods
jo
dec
dec
jne
xor
outsb
inc
gs
in
mov
sub
jecxz
std
das
sbb
cmp
sbb
jge
fildll
popa
int3
adc
add
xchg
push
stos
outsb
add
ret
adc
sub
sbb
pop
sub
dec
ss
lret
cmp
jle
jmp
inc
inc
pop
dec
lods
aaa
pop
pop
insb
mov
and
scas
cmp
cmpsl
jl,pt
dec
out
ret
mov
mov
roll
pop
jecxz
enter
movsb
cmp
out
adc
in
push
jne
mov
sbbb
or
mov
repnz
stos
sbb
rolb
aas
adc
inc
shlb
cmpsb
icebp
lret
dec
dec
lahf
mov
dec
in
sub
stc
outsb
mov
sbbl
jecxz
inc
dec
mov
aaa
inc
fldt
ljmp
stc
pop
xor
cmpsl
dec
mov
jp
cli
xchg
cld
ficoms
inc
or
xor
cmpsb
cmp
es
or
cmp
mov
or
lret
lods
test
dec
mov
mov
cwtl
dec
loop
loopne
ret
adc
or
out
jbe
adc
mov
xor
movsb
or
dec
iret
sbb
aaa
stos
xchg
mov
loope
aas
inc
dec
pop
cmp
inc
dec
lock
pop
imul
inc
xor
ret
jae
fsubrs
mov
cld
test
lret
mov
cmp
insl
push
cmp
test
xor
inc
gs
filds
mov
movsl
pop
xor
es
jge
divl
sub
add
push
inc
jg
mov
push
mov
inc
or
daa
inc
lcall
enter
xor
push
xchg
in
mov
dec
lds
outsb
add
add
adc
aam
mov
sbb
in
test
push
gs
pop
daa
pop
xor
jb
adc
mov
sbb
js
dec
dec
cmpsb
repz
mov
inc
xlat
inc
aaa
sbb
andb
lcall
jge
mov
mov
fdivl
dec
mov
push
sub
sahf
jecxz
hlt
test
addr16
mov
cli
xor
dec
jns
divb
in
sahf
push
scas
sbb
data16
jne
adc
stos
pop
mov
adc
fs
xor
aam
sub
mov
fidivs
insb
les
repnz
addb
adc
push
push
pop
mov
pop
sbb
pushf
pop
repz
dec
jl
jl
rcr
xor
and
std
mov
das
jl,pt
xor
mov
xchg
cmpsl
rcrb
outsl
push
xlat
jbe
cmp
dec
jg
pop
es
add
ficompl
pusha
mov
sarl
xchg
stos
out
jo
xsha1
cmpsb
or
ss
movsl
push
sbb
push
clc
inc
jo
push
mov
pop
bound
push
inc
push
popf
xchg
pop
or
cmp
sub
mov
scas
adcl
sbb
lock
pop
xchg
shl
shll
loop
and
mov
pop
mov
jnp
sbb
mov
test
pop
out
cmpsl
dec
mov
outsb
push
pop
enter
aam
test
addl
mov
adc
jo
jno
jle
arpl
mov
js
xor
sub
loop
test
lret
pop
or
pop
xchg
mov
loop
repnz
and
cmp
cld
shlb
dec
cmp
std
push
repnz
aaa
sub
dec
xchg
sub
xchg
mov
popf
scas
mov
inc
dec
aaa
add
mov
lds
adcb
cli
dec
daa
jle
add
push
mov
iret
std
sub
std
mov
fisttps
in
mov
int3
rclb
stos
in
lods
in
lds
lds
sbb
or
push
inc
popf
mov
int3
inc
in
adc
mov
fsubl
fisttps
dec
adc
sub
clc
rorb
icebp
pop
fsubl
les
in
aam
lock
inc
fcoml
pop
arpl
mov
mov
loopne
movsl
pop
pop
cmp
mov
add
lock
xorl
add
jg
mov
lods
cmp
arpl
in
stos
bound
xor
cmp
push
lods
pop
je
fldenv
jnp
inc
insb
add
int
pop
sbb
popf
xchg
aam
add
xchg
mov
mov
inc
jle
iret
pop
cmp
pushf
scas
pop
fbstp
iret
and
adc
jbe
add
lcall
out
in
xor
int
sub
in
jl
pushf
xor
xor
dec
cwtl
mov
push
les
sub
scas
arpl
xchg
rorb
popa
mov
mov
mov
mov
bound
push
cmp
insl
stos
jmp
xor
add
jae
sti
xchg
xchg
push
rcrl
sbb
loopne
push
jne
in
test
addl
out
fidivl
mov
adc
int3
jne
stos
inc
pop
xchg
push
inc
lcall
xor
ds
jecxz
aad
xchg
fwait
sahf
movsb
repnz
test
lods
cmc
das
mov
pop
mov
fs
mov
mov
fsubrl
push
das
ret
stos
scas
inc
sbb
jno
cmp
leave
cmc
mov
subb
je
pop
pop
shll
pop
sbbb
stc
dec
mov
pop
mov
jnp
xchg
lods
aas
adc
insl
bound
leave
mov
add
pop
hlt
push
xchg
mov
adc
cmpl
pop
jns
push
stos
jl
xchg
scas
int3
xchg
sub
jb
inc
movsb
xor
xchg
bound
mov
sbbl
mov
cmp
repnz
aaa
into
popf
add
cmpsb
xor
sub
rcrb
popf
and
cmp
inc
xlat
outsb
jbe
ret
pop
mov
cmc
mov
aad
push
bnd
and
stos
inc
inc
inc
xchg
sub
enter
adc
fildl
lret
mov
cs
push
call
cmp
jbe
mov
fstl
int
cmp
jo
xor
jae
pop
out
ret
call
adc
das
and
inc
dec
in
jae
in
xchg
fnsave
push
out
adc
loop
xor
arpl
jg
mov
stos
inc
pop
jl
cwtl
lods
cmp
pusha
push
pop
mov
popl
cwtl
rorb
inc
dec
stos
inc
jg
cld
xchg
xchg
mov
adcb
jecxz
outsb
adc
adc
xorb
mov
sti
xchg
mov
pop
cmc
hlt
aad
mov
push
jge
dec
daa
aaa
into
pop
imul
sbb
js
jbe
bound
sahf
xchg
jb
adc
or
mov
shrl
push
push
in
test
lds
scas
inc
pushf
lea
dec
mov
addr16
sub
mov
ds
inc
fcoml
lea
fs
pop
adc
push
mov
add
mov
mov
leave
gs
notb
mov
rol
dec
loop
pop
xchg
sub
in
mov
fisttps
or
mov
sahf
pop
push
testb
stos
or
cld
add
xchg
xor
shlb
push
xchg
sub
movsb
fnsave
add
sub
dec
out
dec
cltd
xor
mov
jg
lock
aad
sub
add
lret
mov
dec
push
sub
js
lret
cli
in
pop
sbb
push
out
pop
or
push
inc
lret
repz
rorl
add
mov
pop
adc
test
pop
sahf
cli
shl
jp
sub
cwtl
pop
adc
test
fadds
or
pop
mov
sbb
dec
mov
adc
jb
add
dec
mov
adc
or
mov
push
mov
out
repz
adc
push
test
cmpsb
fadd
inc
dec
outsl
push
jnp
pop
sahf
pop
scas
jmp
or
dec
cltd
xor
xchg
sub
rcl
daa
add
cmp
sbb
dec
xchg
mov
testb
icebp
mov
xchg
push
out
ret
ret
cmp
icebp
push
pop
mov
sub
jne
xchg
mov
int3
dec
in
push
adc
inc
lahf
xlat
outsb
into
shlb
push
inc
sahf
mov
iret
rcll
add
xor
popf
shrl
shll
sbb
adc
mov
lods
sub
loopne
cld
xchg
adc
add
xorb
lds
sub
sbb
in
test
push
movsl
xor
scas
inc
adc
shrl
pop
lea
mov
insb
in
mov
sbb
sbb
lret
cmp
xchg
and
mov
push
and
arpl
out
divb
je
mov
cmpsl
jge
clc
mov
sub
std
mov
xor
stos
inc
adc
sub
add
mov
mov
add
jmp
daa
mov
aas
mov
pop
out
ss
cmp
pop
insb
cmc
and
out
clc
adc
je
xor
das
mov
mov
adc
ret
pop
push
sbb
mov
frstor
mov
adc
lods
inc
xor
mov
std
rclb
fs
adc
xchg
sub
out
xchg
ret
repz
outsl
jecxz
adc
mov
push
pusha
jmp
mov
rcrb
pop
repnz
negb
fsubl
push
ljmp
jb
inc
hlt
daa
mov
cltd
inc
add
stos
jmp
and
or
dec
ds
enter
push
in
push
or
mov
fidivl
or
addr16
es
adc
push
cwtl
xor
popa
xchg
gs
jp
cmc
insb
xor
mov
jg
shrl
je
arpl
jne
movsl
cmpsl
mov
add
test
jne
inc
test
shrb
jbe
jmp
push
push
mov
fs
in
call
shrl
les
mov
sbb
mov
les
xor
push
cmp
rclb
fidivs
es
push
pop
xchg
sub
cwtl
cli
xchg
int
adc
xchg
ret
pop
or
push
lods
inc
inc
dec
adcb
arpl
fwait
xchg
sub
inc
push
sub
setnp
adc
insb
add
movsb
mov
shlb
fsts
nop
daa
and
inc
scas
inc
je
sbb
iret
and
stc
push
in
mov
sbb
mov
ret
dec
fdivl
sbb
lret
pcmpeqw
cltd
pop
rol
repz
aaa
scas
adc
in
inc
iret
test
std
data16
xchg
push
mov
dec
mov
push
push
cmp
pop
nop
daa
mov
mov
stc
xchg
sti
pop
repnz
sub
add
lea
notl
test
stos
imul
inc
daa
mov
cmp
fisttps
mov
mov
ss
jecxz
add
adc
fucomip
add
test
imul
lcall
test
dec
mov
repnz
mov
fs
gs
fsubrs
addl
mov
fstl
shll
or
and
cmpsb
cmp
jbe
outsb
add
ret
or
rclb
movsb
cmp
push
testl
cltd
repnz
fsubs
mov
int
xor
xchg
sub
lock
and
sti
icebp
mov
cmp
insb
imul
test
inc
fidivrs
loopne
test
dec
fisttps
fildl
pop
fnsave
fbld
ret
pop
mov
and
movsb
or
repz
sbb
mov
loope
nop
mov
bnd
mov
stc
in
mov
pusha
test
mov
dec
sar
sti
mov
leave
add
mov
lret
sub
dec
xor
pop
pop
push
adc
fisttpl
sub
and
psrlq
adc
in
and
jno
lock
mov
out
insb
cltd
fsubl
gs
fisttps
push
fwait
xchg
fistps
fcoml
xchg
enter
push
into
movhlps
inc
dec
mov
fildl
or
imul
adc
adc
repnz
xor
cmpsl
xlat
dec
es
dec
dec
jae
dec
cli
outsb
stos
jbe
mov
mov
push
jne
push
inc
sahf
xor
incb
sub
push
je
fcompl
es
dec
scas
xor
xor
gs
xchg
int
pop
std
xor
bound
push
dec
int
jnp
inc
add
push
shll
or
cmc
sbb
sbb
call
sub
adc
iret
jg
divl
sarl
fsubs
sbbb
subb
test
mov
push
outsl
ret
fwait
inc
mov
pop
pop
xor
mov
and
or
fimuls
lock
out
dec
dec
loop
lods
sbb
jb
inc
dec
jo
push
inc
dec
scas
inc
jp
mov
cmpsl
push
add
pop
test
push
jmp
jnp
sbb
cmp
and
cmp
rcrl
jbe
movsb
insl
sbb
xchg
xchg
sub
stos
push
mov
loop
data16
movsb
add
jmp
btr
mov
ljmp
and
ds
dec
inc
jno
addl
push
jg
aaa
divl
xlat
ret
jne
jmp
sbb
test
aas
xor
cmpsb
inc
push
mov
gs
push
lret
popl
jbe
je
movsb
xchg
push
mov
jecxz
sub
mov
sbb
loopne
cmp
jle
les
add
inc
lret
clc
xchg
dec
mov
inc
mov
and
pop
lret
xor
xor
cmpb
pop
pop
jmp
add
inc
inc
clc
je
sub
push
xchg
das
hlt
adc
or
int
xchg
and
sti
insb
sub
aam
and
sbb
cld
mov
xor
dec
adc
incl
or
mov
cmp
sbb
bnd
call
mov
lret
int3
pop
rcr
lods
inc
mov
sbb
xchg
mov
in
jnp
loopne
das
loope
mov
sub
rol
pop
jl
or
sbb
out
jmp
adc
repz
scas
jp
mov
imul
cmpsb
pop
fiadds
popf
test
test
out
js
out
rcrl
clc
xchg
insb
shr
adc
mov
ret
out
sbb
repz
repz
jp
jae
insl
mov
inc
jge
or
xchg
aas
xor
xor
pushf
cmp
dec
push
jg
rorb
test
aad
sub
je
out
insl
shlb
inc
lret
xchg
mov
inc
fmull
jbe
out
flds
gs
pop
mov
xchg
mov
hlt
or
xchg
sub
sub
cmc
xor
sbb
and
inc
mov
and
pop
mov
inc
mov
movsl
push
pop
push
xor
push
mov
je
mov
dec
mov
jno
jl
lods
jne
cmp
fadds
icebp
jns
jecxz
aaa
push
or
xor
scas
ja
adc
int
pop
icebp
push
out
pop
mov
imul
popf
xchg
jl
outsb
mov
add
pop
iret
cmp
jno
push
inc
cwtl
sbbl
aaa
es
xchg
xchg
data16
add
test
add
cmc
adc
int
mov
inc
cmpsl
repz
rorb
or
int
cmp
mov
fistl
stc
or
shlb
adc
into
daa
sbb
adc
or
into
inc
cmpsl
xorl
loopne
movsl
bound
cmpsb
cmp
pusha
add
or
ss
jne
loopne
dec
xor
cmpsb
imul
loop
arpl
xor
sbb
cmc
pop
push
stc
arpl
jecxz
shrl
adc
jnp
lods
pop
mov
out
mov
push
mov
les
cltd
inc
lds
out
shll
mov
repz
and
xor
addb
pop
xchg
mov
inc
dec
in
insl
mov
inc
mov
mov
lods
sub
jne
push
lret
ja
in
out
and
loop
ljmp
adc
inc
mov
daa
mov
add
and
mov
roll
xchg
popa
cmpsb
sub
mov
add
add
add
mov
jo
or
fstpt
mov
mov
in
pop
loope
nop
daa
cmp
xchg
jnp
adcb
sbb
xchg
ss
sbb
nop
cmp
push
fs
pushf
mov
jb
in
fs
mov
ljmp
cmc
cmc
sbb
mov
lock
add
xchg
std
push
mov
repz
sti
push
loope
mov
add
adcb
test
inc
mov
inc
mov
out
cmpsb
addr16
cmp
sub
mov
in
adc
sub
inc
jo
arpl
xor
xchg
lcall
fwait
push
out
std
sahf
lods
pop
or
sub
jns
mov
dec
pop
inc
insb
inc
mov
sub
rolb
adc
xlat
cmpsl
iret
fadds
sbb
aad
push
leave
push
scas
lods
or
repnz
sarl
scas
pop
rclb
jmp
movsl
mov
adc
out
lret
lcall
scas
xchg
lea
fdivrs
iret
imul
lret
dec
sarb
cmp
fwait
jge
add
in
ds
fmuls
mov
mov
push
outsb
repnz
and
and
inc
adcb
popf
mov
lods
inc
dec
or
insl
into
cmp
jmp
rcrb
cmp
fisubrl
ja
sti
mov
mov
icebp
lahf
xchg
mov
sbbb
repz
in
sub
mov
out
jne
stc
adc
ja
lods
filds
fwait
js
iret
pusha
adc
adc
cltd
outsb
xor
mov
insb
xchg
sub
or
xor
and
loop
insl
jae
loopne
and
data16
sbb
pop
mov
mov
dec
sub
movsl
cmp
push
pushl
cmpl
cmp
int3
dec
out
jp
sub
ret
cmp
aaa
outsl
shrb
xor
sub
xor
or
pop
push
cli
outsb
sub
xchg
lea
pop
aam
imul
lods
cmp
shr
insb
add
inc
movsb
sub
and
lods
push
gs
cmp
lds
sbb
mov
loop
test
fisttpl
loopne
pop
lock
je
mov
test
lods
stos
orl
push
jmp
cmpsb
pop
rorb
mov
addr16
xchg
mov
hlt
jo
add
data16
roll
das
loopne
cmpl
adc
fbstp
ja
loop
adc
sbb
ficoms
inc
cli
xchg
aam
mov
ret
mov
shrl
adc
jge
xlat
cmp
ss
or
in
aam
cld
daa
clc
xor
lret
cmp
fnstenv
add
filds
or
aad
push
aam
orb
adc
fwait
int
and
lcall
mov
int
mov
out
enter
inc
jmp
sbb
les
out
jo
mov
mov
jbe
pop
incb
xor
fwait
mov
ret
fsubrs
xor
out
fs
pushf
movsb
push
adc
adc
jecxz
fdivr
xor
std
adc
stos
int3
gs
in
pusha
int
mov
xlat
adc
aam
repnz
mov
clc
pushl
push
stos
into
gs
cmp
dec
mov
dec
repz
testb
push
xchg
xchg
mov
shlb
rorl
outsl
leave
inc
fnsave
repnz
shrb
sbb
icebp
lock
ret
push
test
fdivs
cmpsb
faddl
test
and
in
repnz
xchg
cli
xchg
and
dec
ret
iret
inc
cmpsb
push
or
in
jle
cltd
stos
sarl
notb
xor
test
push
ja
nop
xor
es
movsl
push
in
inc
and
pop
int3
stos
pop
xlat
sub
mov
movb
push
and
test
sbb
xor
push
in
cmpb
cmp
sub
dec
jge
imul
mul
sub
mov
xor
pop
mov
lret
push
andl
daa
insb
jbe
cmp
sub
xor
inc
inc
int
bound
xchg
cmp
lods
pusha
jae
dec
mov
mov
rclb
mov
adc
jecxz,pt
mov
dec
and
popf
dec
inc
xchg
xchg
bound
dec
push
push
scas
imul
in
push
pop
lock
xor
out
sbb
rorb
outsb
mov
push
sbb
imul
push
cmp
dec
rorl
les
add
movsl
jp
fmull
fwait
adc
ss
jbe
ljmp
rorb
push
cmp
xor
pop
loope
mov
enter
mov
adc
jp
call
mov
mov
jbe
push
adc
xchg
test
pop
dec
shrb
ss
shlb
pushf
jnp
jne
shrl
sarb
rcr
push
repnz
shl
jns
and
jb
cmpsb
xor
dec
mov
lea
push
cwtl
sti
inc
fldcw
sub
rorb
divb
fimull
mov
enter
add
iret
push
loopne
arpl
or
dec
ret
lcall
dec
mov
jle
jbe
dec
mov
gs
je
xorl
xchg
test
sarb
rcll
ss
xlat
movsb
sbb
aas
xchg
imul
and
pop
bound
mov
inc
cmp
inc
cwtl
insb
add
dec
dec
iret
xor
and
decl
xor
lcall
rolb
jmp
cmp
pop
push
push
call
xchg
xor
iret
push
jp
jae
sbb
lock
test
sbb
jp
insl
lahf
lods
pop
dec
lcall
xchg
out
cmovnp
adc
dec
shlb
or
push
mov
or
icebp
or
daa
jmp
lcall
call
outsl
lods
test
ljmp
adc
inc
pop
lds
mov
rcrb
xchg
lea
jb
fcoml
dec
rcrl
fimuls
jmp
sub
shll
rcll
push
icebp
push
adc
dec
mov
test
clc
inc
cmp
push
addb
fmuls
scas
inc
stos
hlt
out
adc
mov
shlb
cmp
jg
xor
dec
cs
cmp
add
adc
and
sti
fists
test
scas
inc
add
daa
and
test
sti
dec
push
hlt
and
and
lods
adc
mov
push
lea
es
int3
and
dec
mov
xor
dec
ret
test
adc
sarl
sub
mov
negl
mov
xchg
push
mov
lret
xchg
inc
lds
fdivrl
mov
stc
lcall
mov
out
mov
imul
cmp
decb
stc
xor
adc
sbbb
fs
add
sbb
fisubs
inc
mov
cmp
push
ror
jne
cmc
cmp
cmp
fsubrl
mov
decb
leave
mov
in
pop
int3
mov
add
iret
cmpsb
inc
mov
rclb
test
call
bound
mov
mov
xchg
sub
ljmp
and
dec
jp
roll
dec
mov
push
dec
mov
pop
lea
je
add
insl
imul
fwait
sbbb
outsl
mov
jge
push
fildl
shl
cmp
sbb
and
cld
mov
outsl
push
mov
dec
ja
imul
jns
sub
shrl
lahf
xchg
jge
xor
popa
sahf
xchg
jbe
stos
dec
xor
lock
inc
push
rclb
or
pop
cs
jp
loop
and
adc
jne
cli
inc
ss
jmp
inc
inc
xchg
movsl
lea
inc
xchg
push
sub
mov
dec
aad
loop
mov
add
repz
mov
das
lds
in
adc
sbb
push
fwait
lret
ljmp
jp
pop
int
jbe
jns
cwtl
cmp
shrl
cmp
dec
out
test
aaa
loopne
cltd
mov
divl
movl
sti
xchg
xor
rorb
cmc
test
loop
mov
or
xor
inc
leave
dec
loopne
popa
jl
inc
cmp
out
mov
xor
and
xchg
ja
insb
dec
pop
or
dec
add
lret
sti
xor
mov
add
xlat
push
push
cltd
xor
repz
xchg
sbb
fldcw
xor
jbe
bound
fdivrl
sbb
call
test
or
dec
test
mov
scas
pushf
nop
adc
pop
testb
jp
imul
dec
mov
lret
test
pop
jb
js
xchg
mov
std
outsl
movsl
ret
adc
int3
xchg
es
lds
loop
mov
daa
jmp
xchg
mov
call
mov
inc
fcomp
sbb
fsubl
clc
xor
ljmp
mov
adc
mov
out
or
push
sbbl
pushf
sub
dec
jns
add
xchg
dec
push
or
imul
add
int
xor
xor
iret
gs
ja
xchg
aaa
add
mov
stc
and
inc
adcb
lcall
cmp
add
imul
aas
or
aad
add
scas
inc
sbb
add
mov
cs
jg
subb
fbstp
cmp
xor
dec
lods
jg
aas
cld
sub
loop
mov
mov
and
dec
or
movsl
pop
mov
push
mov
sar
pop
ror
rcll
ljmp
pop
mov
incl
or
or
cwtl
stos
in
xor
sbb
jmp
fstp
push
mov
clc
scas
insl
out
pop
aaa
mov
or
sbb
aaa
mov
sbb
enter
cs
cmp
insb
xchg
mov
out
sbb
mov
and
inc
js
outsb
mov
lea
int3
pop
lods
add
repnz
xor
insb
mov
das
cli
lahf
mov
int
int
aam
mov
push
int3
mov
pop
inc
test
xchg
repz
push
rcr
sbb
loopne
sub
mov
ljmp
adcb
cltd
adcl
mov
into
aaa
mov
inc
int3
fstpl
faddl
mov
icebp
pop
icebp
mov
loop
ret
fadd
push
out
sti
stc
push
repnz
es
adc
nop
mov
adc
stos
mov
and
sbb
popf
adc
pop
fsts
xchg
es
xlat
jo
mov
test
jl
mov
pop
sahf
fldcw
xchg
ret
imul
imul
test
popa
mov
mov
pop
mov
bound
xchg
sub
add
xor
mov
aam
enter
int3
jmp
inc
mov
stc
cmp
jecxz
cmpsb
pop
shrb
mov
lcall
jle
out
sti
mov
ljmp
popa
fwait
ret
sub
into
pop
aam
rorl
fidivrs
out
pop
ret
adc
movsl
cpuid
fs
pop
les
hlt
xor
and
dec
mov
pusha
stc
xchg
push
adc
inc
mov
jge
inc
jmp
push
call
or
and
or
jmp
fdivrl
fidivs
aas
cmp
jge
fcoml
popf
pop
aam
pop
ret
pop
jp
adc
push
dec
call
orl
sub
outsb
mov
xchg
inc
mov
pop
pop
lret
pop
icebp
cmpsb
cs
jp
out
and
cmp
fldl
movsl
cmp
add
repnz
outsl
insb
add
jecxz
inc
fdivrp
add
arpl
aad
xlat
loopne
dec
adc
sbb
ret
xor
mov
sbb
mov
mov
xchg
test
test
add
ljmp
int
cmp
ds
jle
push
sahf
scas
cmp
and
mov
fnstsw
loopne
add
xor
inc
mov
and
sub
js
xor
add
xor
repnz
sbb
movsl
loope
std
mov
sub
aad
cmp
pop
sar
xchg
add
or
jb
in
ss
cmp
pushf
inc
jmp
movsb
pop
jnp
inc
insb
das
jp
mov
scas
inc
popa
lods
xor
push
push
cwtl
xchg
pop
xchg
jmp
mov
stos
mov
adc
icebp
sti
xchg
inc
cmp
mov
fs
push
int3
xchg
xor
bound
inc
mov
clc
adc
cwtl
mov
adc
test
out
push
les
scas
inc
leave
inc
xchg
addr16
jp
cmp
les
mov
fdivrl
fisttps
xchg
jecxz
imul
bound
adc
mov
in
pop
cmp
xchg
imul
lea
stc
and
xor
dec
pop
into
push
pop
dec
inc
shrl
jg
sub
mov
stc
jbe
les
cmp
jg
stos
xorl
aad
pop
bound
xor
cwtl
insl
andb
fs
in
ljmp
mov
out
loop,pn
stos
dec
mov
lock
aas
sbb
loop
pusha
jge
inc
lret
xor
fisttps
push
aam
loop
cmp
or
jbe
cwtl
adc
insb
or
mov
xor
shl
enter
fiadds
mov
dec
out
sbb
fwait
mov
xchg
add
ficoml
imul
adc
inc
lea
mov
add
and
pop
xchg
out
es
flds
jae
fimuls
stos
inc
cmp
hlt
inc
pop
or
pop
inc
pop
stc
inc
dec
and
cmp
mov
adcb
sti
xchg
jmp
sbb
out
lds
hlt
dec
hlt
popa
jmp
dec
xchg
stc
push
mov
test
adc
shl
xchg
nop
xchg
mov
div
adc
mov
std
mov
lock
cmp
add
or
ss
frstor
xchg
int3
aas
es
inc
jne
js
push
mov
mov
xchg
mov
divb
iret
insl
loopne
mov
pop
push
xchg
mov
cmp
sub
fmuls
dec
ss
mov
dec
adc
mov
stc
into
add
sbb
bnd
decb
sbb
dec
pop
imul
push
hlt
xor
shlb
enter
add
add
and
push
jbe
outsl
lds
lock
sbb
iret
call
ret
repz
stos
ret
adc
call
hlt
sbb
mov
sub
jl
mov
data16
cmp
lods
jbe
dec
test
push
add
jmp
mov
dec
shlb
mov
lea
lret
int
movsb
insl
add
inc
and
or
sti
out
jle
lods
sarb
pop
cli
mov
cmpl
mov
inc
mov
cmp
lods
dec
pusha
ret
dec
aas
dec
gs
mov
rcll
loope
xlat
les
aas
inc
int
cmpb
repz
mov
and
inc
int3
out
cmp
out
les
scas
mov
in
in
addr16
lret
mov
jo
adc
add
mov
push
mov
xchg
add
adc
or
sub
mov
ljmp
dec
jnp
fidivs
mov
es
les
loop
out
rclb
lods
sbb
cli
lea
scas
call
push
cmp
sbb
inc
scas
sub
lds
pop
mov
lock
cmp
mov
push
mov
dec
int3
or
mov
pop
push
xchg
mov
mov
cmp
icebp
and
cmp
hlt
cmp
outsl
insl
adc
testb
loope
stos
adc
xor
fs
ret
pop
inc
test
mov
loope
xchg
xlat
outsb
add
out
mov
pop
or
mov
jge
inc
scas
pop
cmp
mov
enter
pop
icebp
fisubs
out
push
js
xor
fwait
test
xchg
sub
cli
movsl
mov
xlat
sbb
dec
clc
shrb
outsb
pop
negb
and
jno
ds
xchg
icebp
mov
outsb
popa
clc
pop
movsl
jg
pop
aas
push
out
jo
popf
xor
xchg
ja
ret
mov
pop
mov
and
dec
sub
cmpsb
dec
aam
jl
mov
stc
popf
icebp
loope
inc
nop
imul
xlat
outsb
imul
hlt
aad
rcll
mov
sub
add
aaa
into
push
fstps
or
movsl
sub
jecxz
les
cmc
mov
out
inc
faddp
push
adc
scas
lcall
or
push
or
sbb
arpl
mov
dec
test
mov
shrb
xchg
insl
xchg
sub
call
xchg
mov
push
call
sbbl
imul
ja
rorb
insl
adc
sub
mov
mov
call
xchg
cmp
test
in
fsubrs
aam
inc
mov
xchg
rcrb
jl
pop
inc
movsb
sahf
push
mov
adc
out
ds
sub
in
clc
inc
inc
lds
push
pop
mov
insb
jp
jg
aaa
clc
xchg
cmpb
scas
sti
push
scas
inc
adc
sbb
out
inc
or
test
mov
jb
pop
mov
call
sbb
loope
pop
mov
cmpxchg
push
cmp
jecxz
rcll
mov
dec
cmpsb
adc
sub
xor
stos
pop
repnz
cmpsb
cli
retw
mov
movsl
ret
sub
lcall
insb
ljmp
mov
add
cs
repz
or
pop
negl
adc
pop
sbb
ret
add
dec
push
fst
push
adc
lock
testl
lods
sti
stc
push
add
subl
mov
in
push
or
iret
push
push
or
and
jmp
sbb
rcll
data16
notl
xchg
inc
notb
mov
shll
inc
insl
sub
adc
sbb
loop
and
xchg
inc
mov
pop
repnz
roll
inc
ret
inc
and
es
js
jbe
sbbb
cld
outsb
aad
flds
add
insb
test
pop
xor
xor
pop
push
jge
cmp
lret
frstor
notl
hlt
sub
push
push
inc
sbb
jo
or
xchg
imul
cmp
jno
movsb
mov
stc
insl
enter
inc
fwait
xor
lcall
jno
mov
stos
sub
or
leave
test
jnp
push
pop
stc
xchg
xor
and
dec
in
adcl
test
movb
sub
sbb
pop
fbstp
xchg
neg
aas
adc
mov
xchg
inc
outsl
mov
xchg
daa
cltd
sub
popf
ja
push
and
mov
loopne
inc
rolb
ds
bound
insb
and
xor
add
popf
or
add
sub
mov
dec
pop
lock
lahf
ss
or
or
mov
cmp
mov
sbb
ret
or
inc
fcoml
data16
xchg
test
call
mov
sti
inc
push
in
ss
pop
repnz
scas
lods
inc
and
pop
shll
mov
jl
icebp
push
mov
cmp
out
fsubs
shrl
mov
xchg
daa
xor
loopne
insb
stc
lea
xor
lds
movsb
cmp
ja
lock
cmp
das
outsl
cmc
gs
out
data16
arpl
test
cmp
cmp
dec
lea
psllq
pop
sti
fwait
in
inc
adc
pop
jae
adc
into
mov
jb
xchg
cmp
test
and
fcoml
push
clc
add
popa
int3
out
mov
mov
push
cmp
mov
jmp
mov
jns
aad
mov
mov
loop
cwtd
cmp
lea
mov
cmpsb
cmp
mov
ret
inc
or
aas
inc
or
mov
mov
in
mov
fiaddl
outsb
add
mov
pop
push
ss
dec
jno
cwtl
aas
add
mov
lock
insb
dec
loope
sbb
mov
push
xchg
add
jg
mov
lods
stos
xor
pusha
jne
dec
in
xchg
lcall
dec
xchg
and
rol
orb
mov
test
lock
insl
sbb
xchg
cmp
dec
add
xchg
cmp
dec
mov
scas
mov
xor
call
aaa
pushf
movsl
lds
and
lret
cmp
and
mul
in
sbb
xlat
jnp
dec
add
cwtl
inc
out
scas
int3
test
mov
mov
test
in
adc
dec
sbb
orl
dec
test
dec
lahf
inc
les
das
mov
insl
in
xchg
inc
mov
push
fisttpll
adc
cmp
mov
jne
pusha
jmp
arpl
pop
and
or
push
std
int3
pop
test
sbb
jl
inc
or
rcrb
mov
add
int
es
cmpsl
sub
fcoml
add
int
push
xchg
xchg
xor
dec
lahf
inc
add
lcall
adc
cmovl
and
sbb
push
pop
jmp
inc
sahf
aas
nop
ss
dec
mov
xlat
add
notb
push
or
jo
mov
scas
sbb
cs
xchg
dec
ret
leave
xchg
cmp
mov
inc
mov
mov
notl
arpl
mov
jbe
or
sbb
inc
or
fsubrs
lea
mov
xor
stos
shll
rcll
mov
sub
push
ja
shll
mov
jmp
cmp
stc
je
adc
test
out
in
dec
sti
pop
mov
movsl
lods
sub
pushf
inc
punpckhdq
movsl
add
stos
loop
mov
imul
in
xchg
push
lret
ret
cmp
sbb
outsl
loopne
xor
ja
xor
pop
dec
cmp
xchg
inc
mov
and
aam
sbb
loop
lods
ja
pop
aam
outsl
xchg
out
insb
mov
and
nop
dec
in
jle
fistpll
addr16
je
out
insb
mov
test
stos
xlat
xorl
mov
hlt
nop
xchg
in
inc
int3
bswap
mov
fidivrs
test
ret
inc
adc
and
cltd
cwtl
in
into
ret
jg
or
outsb
bound
or
sarb
adc
leave
mov
xchg
add
loop
mov
add
hlt
sbb
leavew
inc
mov
adc
inc
dec
jo
mov
jg
adc
imul
dec
insb
call
cwtl
cmp
leave
inc
push
outsl
in
mull
sti
dec
push
jno
fs
dec
or
test
out
dec
arpl
nop
add
in
iret
outsl
call
pop
xor
cld
xchg
pop
lret
mov
daa
mov
outsl
addr16
push
add
inc
add
sbb
and
pop
mov
xchg
aas
adc
push
aad
xlat
jg
or
aaa
dec
int
pop
sbb
negl
or
cmp
iret
icebp
gs
xlat
jg
hlt
mov
fcompl
iret
xor
mov
mov
mov
imul
cltd
jne
aaa
cmpsl
sbb
lea
popf
cmc
popf
adc
sti
mov
or
popa
mov
mov
mov
cmpsl
mov
fwait
mov
mov
push
shll
cmp
xor
jge
sub
xor
rclb
jl
test
mov
cmc
les
mov
sbb
cmc
mov
adc
mov
inc
push
in
and
test
mov
jbe
in
and
nop
xlat
nop
inc
xor
sub
mov
jnp
cwtl
lods
push
shlb
std
pop
mov
mov
cmp
insl
test
shr
jle
mov
fdivs
dec
or
scas
cmpsb
lcall
pop
cwtl
xchg
cmp
mov
ja
in
jne
std
mov
or
mov
cmp
mov
xchg
mov
jno
outsb
std
dec
adc
sbb
dec
inc
or
mov
and
jnp
shlb
push
aad
addl
mov
lahf
lock
push
jecxz
mov
xchg
jmp
or
push
cli
inc
push
fadds
repnz
mov
mov
lcall
repnz
orl
sub
mov
mov
pusha
lock
push
in
pop
cli
xchg
in
ljmp
lea
ds
fisttps
aad
sarl
pop
sbb
fisubrs
mov
cmp
mov
dec
jl
popf
sbb
jb
cmpsl
imul
mov
cmp
andl
fsubr
je
lahf
push
shll
ljmp
in
fwait
sbb
sahf
icebp
rolb
outsb
out
int3
dec
jnp
dec
test
mov
mov
push
sbb
jo
fld
xchg
insl
fwait
inc
inc
repz
mov
dec
adc
cmpsb
stc
arpl
aaa
cltd
sub
sbb
pop
call
out
or
and
xchg
cmp
aaa
pop
add
scas
das
cmp
sub
xchg
cmp
outsl
cmpsb
sub
xchg
ja
pop
pop
rclb
rorb
ret
xchg
sbb
adc
sub
jp
xorl
jp
sub
sbb
mov
sbb
cs
lcall
mov
pop
xor
xchg
aas
test
mov
jae
repz
push
jne
data16
lcall
in
pop
mov
addl
jae
int
xchg
or
mov
mov
fs
sti
mov
adc
repz
aam
aam
jg
cld
cmp
mov
movsb
inc
setbe
fidivrs
push
add
aaa
mov
popf
or
lcall
jb
push
movsb
hlt
out
push
mov
in
push
push
cmp
and
fidivs
cmp
sub
inc
xchg
inc
add
xor
into
mov
mov
mov
dec
or
mov
iret
xchg
sbb
sahf
addr16
daa
inc
and
jb
dec
or
outsl
aaa
lahf
sbb
adc
mov
cmpsb
push
rcrb
inc
push
out
jno
cmp
hlt
test
cmp
mov
scas
imul
orb
dec
shll
lods
mov
lods
jl
ljmp
adc
iret
xchg
dec
add
jmp
cmp
das
arpl
rclb
jge
jnp
ret
outsl
fiaddl
mov
stos
add
sub
out
and
inc
adc
cmp
jbe
dec
push
jmp
lret
xor
adc
stos
sub
outsb
mov
inc
arpl
fsubs
lds
rclb
cli
bound
scas
pop
outsb
stos
xor
cmpsl
sub
sbb
std
gs
sbb
fisubrs
pop
shrl
sub
mov
stos
out
jo
sbbl
adc
ds
add
outsl
pop
dec
or
icebp
data16
imul
bound
sbb
and
xor
add
jmp
enter
or
lea
in
jne
mov
push
ret
lret
faddl
popf
adc
dec
adc
dec
adc
jecxz
popf
dec
popa
aam
inc
or
addb
pop
fmuls
mov
stos
outsl
js
test
ja
pop
mov
test
outsl
mov
lods
fildl
inc
jmp
int
shlb
push
inc
jb
jmp
pop
divb
cmp
sub
stos
cmp
mov
sub
mov
mov
and
ljmp
test
addl
pop
push
and
xchg
lock
lods
sub
mov
lock
scas
push
add
sub
xchg
inc
movsb
sub
mov
mov
sbbb
adcl
mov
int3
jle
ja
add
push
inc
pop
adc
es
jnp
xchg
cmp
add
mov
jg
outsl
out
push
inc
fiadds
outsb
add
jae
xchg
cmp
mov
lret
add
adc
inc
sub
push
push
loope
mov
ds
push
mov
mov
out
mov
sbb
sbb
das
cwtl
jne
sarb
jae
fldl
jmp
xor
and
insl
shr
pop
pop
in
and
xor
jnp
lret
out
dec
sub
pushf
dec
xchg
es
xchg
adcl
dec
pop
notl
jb
jnp
dec
lret
out
adc
jbe
jl
pushf
imul
scas
ret
and
pop
mov
test
adc
mov
adc
push
xchg
dec
or
ret
inc
adc
aas
xchg
scas
xor
imul
and
jbe
or
cmp
push
sub
and
and
jmp
icebp
pop
sbb
dec
adc
rolb
sub
push
add
push
mov
seta
leave
or
in
insl
inc
push
and
sbb
fs
and
or
int
insl
inc
xchg
inc
xlat
pushf
cli
pop
cmpsb
or
and
aaa
lahf
sub
mov
imul
cmp
xchg
pushf
dec
subl
test
mov
das
mov
outsb
rorb
jmp
insl
dec
and
adc
sahf
into
xchg
push
mov
lret
sahf
inc
scas
xor
lds
mov
mov
ret
loopne
or
stos
sbb
addr16
movsl
push
xor
adc
dec
mov
inc
shlb
divps
push
cmp
and
mov
mov
call
filds
mov
add
mov
or
inc
popa
orl
scas
xor
fsubrs
xchg
sbb
aas
mov
mov
mov
adc
cli
test
jecxz
push
or
add
ficoml
mov
pop
aam
mov
insl
ljmp
call
lahf
leave
test
cmp
clc
bound
jb
xchg
pop
cld
sub
mull
push
das
lods
lods
addl
add
jl
sti
pop
pop
popa
pop
rcll
iret
pop
stc
push
xchg
addr16
push
add
pop
sti
dec
popf
in
sbb
jnp
xor
pushf
cmp
arpl
sahf
xchg
dec
inc
adc
fidivrs
push
pushf
sbb
andl
jle
pop
lock
jo
mov
out
sbb
lahf
pop
cli
pop
stc
jecxz
daa
scas
add
cmp
adc
inc
mov
inc
or
lcall
jb
jnp
or
shr
popa
jmp
loopne
jl
adc
cmp
lods
rorl
cmp
pop
xchg
cmp
fildll
scas
sbb
daa
jecxz
pushf
cmp
cld
lds
jo
mov
lds
jbe
jno
lcall
or
mov
adc
lret
xchg
aad
xchg
push
push
push
clc
into
xchg
push
jecxz
in
dec
xchg
imul
stos
push
aam
cmpsb
daa
mov
sub
f2xm1
arpl
cwtl
add
test
clc
pop
sub
cmp
std
pushf
aaa
nop
ucomiss
mov
mov
lods
sub
mov
hlt
lods
lods
push
add
add
inc
jae
mov
popf
hlt
bound
fucomip
adcb
popf
inc
movsb
inc
push
lds
add
mov
sbb
dec
dec
popf
jmpw
add
jg
stos
xor
xlat
cmpsl
psrlw
fisubs
xchg
test
jbe
addl
xchg
insl
test
pop
add
xor
outsb
call
or
inc
fcomi
pop
xor
outsb
mov
dec
adc
sahf
mov
data16
jbe
jmp
pop
filds
in
scas
xor
idiv
popa
xchg
sub
and
dec
adc
dec
adc
dec
adc
mov
push
in
ja
addr16
pop
or
xchg
mov
dec
jb
xlat
dec
loope
add
testl
insl
sub
dec
mov
mov
sub
cmc
scas
roll
sbb
or
xor
sbb
daa
dec
and
in
jg
jnp
das
mov
push
inc
cmp
cmp
cmpsl
jno
mov
repz
sub
lcall
lock
pop
loope
cmc
outsb
hlt
in
mov
push
sub
push
pop
and
fiadds
loopne
cmp
rolb
xlat
in
jbe
fisubrl
loop
pushf
inc
mov
scas
cmp
fldt
int
ss
xchg
pusha
and
or
adc
insb
cmp
pop
add
cmp
aaa
cltd
inc
push
test
sub
inc
into
orb
sbb
into
sub
cmp
and
cs
pop
inc
dec
jl
fst
addl
cli
pop
xor
les
shlb
inc
imul
aaa
inc
scas
sub
sub
loop
xor
fnstenv
lea
in
mov
scas
mov
inc
inc
add
mov
addb
ds
adc
mov
scas
cmpsl
sub
cmpsb
push
cld
aas
pop
jo
lock
test
mov
out
jge
cltd
sar
sub
pop
pop
add
jno
push
push
insl
aas
pushf
inc
inc
sbb
cmp
scas
sub
and
xor
pop
les
and
adc
inc
xor
jns
mov
lock
sti
pop
repnz
mov
xchg
fists
rcll
sub
sbb
lret
nop
sub
cmp
cmp
subb
mov
jl
inc
gs
pop
test
jle
shrl
sahf
jl
rorb
add
lea
jmp
jle
test
gs
shlb
xchg
inc
mov
cmp
outsl
scas
scas
inc
loopne
push
out
inc
add
icebp
xchg
inc
or
jns
or
cmp
sub
test
mov
std
pop
imul
imul
add
jno
outsl
cmpl
jp
mov
and
loopne
mov
mov
mov
test
adc
sub
push
add
lret
xchg
push
mov
shlb
in
or
fldcw
test
add
mov
inc
push
aam
icebp
aad
shrl
gs
lods
daa
in
movsl
xor
fnstenv
or
out
adc
push
or
ja
lahf
pop
mov
iret
int3
mov
sbb
fcoml
out
push
in
push
cli
mov
fnstcw
movsb
mov
or
lods
sub
push
aaa
movsb
outsl
cld
js
pushf
jbe
and
and
mov
dec
scas
sahf
cmp
xchg
or
xor
dec
xor
fdivrl
das
lds
xor
push
and
adc
xor
xor
lcall
inc
or
jnp
push
add
sbb
mov
in
repnz
cmp
es
push
loope
mov
xor
push
enter
cmc
adc
add
ficompl
mov
mov
cld
pop
ret
jp
and
call
clc
cmpsb
cmp
inc
dec
shlb
xchg
lds
inc
mov
ljmp
je
or
and
sarb
xor
and
dec
push
push
xor
popf
test
insl
dec
lret
fistpl
flds
insl
das
and
fdivr
mov
prefetchw
or
push
adc
dec
icebp
popa
sbb
pop
mov
dec
mov
add
lods
inc
push
add
out
jb
inc
xchg
cmp
mov
mov
cmp
mov
lahf
push
and
add
ss
into
aas
cs
mov
lods
cwtl
inc
test
lahf
aas
jae
in
imul
xorb
cmpsb
cltd
push
das
in
stos
sub
inc
xchg
add
xchg
inc
push
pop
sub
inc
mov
fsubrs
mov
pop
cli
cmp
push
mov
xchg
xlat
outsb
lds
pop
out
add
pop
imull
mov
mov
insl
or
inc
or
jne
or
pusha
add
test
push
push
pop
add
xchg
cmpsl
mov
mov
movsb
jae
pusha
pop
aad
cmp
sub
lahf
or
mov
popa
and
insl
xchg
ds
mov
shr
repz
dec
call
ss
repnz
fisubs
in
or
inc
mov
ljmp
push
stc
and
add
mov
or
addb
pop
cltd
xchg
jne
ret
mov
adc
mov
push
stos
adc
idiv
xchg
pop
cli
jne
repnz
insb
insb
jmp
mov
cmpsl
lcall
dec
mov
js
insl
out
lds
out
push
jb
mov
scas
cld
mov
mov
movsb
xorl
xchg
popa
fs
popa
sahf
je
ret
xchg
int
pop
pop
lds
sbb
int
dec
pop
add
xor
cltd
mov
pop
les
test
jno
jg
mov
loope
jmp
xor
mov
outsb
hlt
and
mov
sbb
dec
xchg
push
xchg
push
movsb
outsb
icebp
mov
cmp
sbb
sub
pop
xchg
pop
add
scas
xor
push
leave
icebp
xchg
inc
or
imul
mov
lods
jb
mov
lods
das
sbb
mov
les
lods
or
mov
cs
push
mov
cmp
sub
fisttps
mov
sub
cwtl
add
mov
iret
popa
out
mov
mov
mov
aad
scas
xor
add
inc
pop
int3
xor
cld
pop
fisubl
ror
add
push
cmpsl
xor
addr16
clc
pop
dec
lods
pop
clc
stos
xchg
pop
rol
mov
push
sbb
cmp
jnp
fs
mov
mov
mov
outsl
xchg
not
cmpl
lods
fs
mov
mov
enter
nop
dec
pushf
dec
out
insl
arpl
ds
gs
das
hlt
pop
push
pop
mov
xchg
mov
sbb
ds
gs
mov
adc
movsb
outsl
xlat
push
mov
insb
lock
mov
mov
mov
push
mov
xchg
fsubrs
pop
cmp
mov
cli
fs
fbstp
mov
add
lock
jmp
push
add
icebp
pop
inc
inc
in
insb
mov
leave
pusha
push
add
xchg
outsb
repz
cld
ljmp
or
jbe
jmp
data16
inc
mov
jne
jb
stos
xor
gs
adc
pop
ja
loop
xchg
pop
pop
cmp
test
cmp
into
jle
jp
sbb
shr
sahf
mov
sar
ljmp
jle
stos
jge
sub
mov
mov
adc
mov
pop
in
cltd
pop
nop
ds
mov
insb
inc
adc
jns
xchg
mov
push
jbe
xor
ja
or
and
push
mov
xchg
negb
jae
jmp
jecxz
insl
jmp
cmp
bnd
orb
es
push
rcll
pop
pushf
cmp
mov
leave
inc
call
fstpt
arpl
std
push
jns
int
xchg
in
push
movsl
xor
cmc
loop
pop
loop
out
xchg
mov
push
leave
test
inc
adc
jnp
pop
movsb
rcrb
test
in
mov
insl
add
mov
jb
shlb
iret
xchg
jb
adc
out
movsl
cmpsl
sub
ja
jmp
sti
aad
aas
and
sub
jne
dec
push
inc
or
pushf
inc
or
add
sbb
lret
push
nop
aas
mov
mov
mov
movsl
push
into
aaa
jp
jnp
das
cmpsl
xor
stos
xchg
jne
jo
popa
jo
shlb
jno
dec
push
jmp
cltd
add
mov
lcall
jbe
movsb
loopne
sti
pop
pop
dec
mov
pop
cld
xchg
mov
adc
mov
lods
xchg
insb
and
pushf
push
fiadds
les
gs
pusha
in
cmc
inc
mov
jecxz,pt
push
dec
sub
push
xchg
lods
sub
lcall
xor
cs
mov
sbb
aad
jle
push
push
mov
mov
dec
notb
jecxz
cli
lods
lcall
and
int3
jnp
pop
add
sbb
movsb
call
xchg
cmp
aad
std
repz
fcmovne
call
jno
cmpsl
sysexit
cwtl
xchg
mov
lret
jo
mov
jle
faddp
mov
sarb
adc
test
es
cwtl
sub
sbb
or
mov
or
push
push
nop
cmp
lret
jmp
sbb
sti
pop
icebp
xor
or
cmpsb
sbb
push
das
int
mov
mov
sbb
sub
lea
xor
in
xlat
stos
and
aas
mov
aaa
mov
dec
pop
and
mov
mov
mov
testb
nop
daa
add
push
mov
mov
dec
inc
jp
mov
sbb
push
sti
cwtl
dec
mov
lret
iret
xchg
daa
sbb
mov
aad
dec
psubd
pop
lret
or
mov
pop
cmp
daa
mov
enter
sub
pop
lcall
inc
mov
scas
cwtl
cmc
pop
add
mov
bnd
cmp
jo
xchg
pop
pop
aaa
cmp
adc
mov
lods
or
out
xor
xchg
cs
pop
inc
pop
sub
das
xchg
adcb
xchg
inc
call
clc
scas
inc
sub
inc
fildl
int3
int3
arpl
and
loope
in
push
std
or
repz
rcrl
pop
pop
mov
pusha
xchg
xchg
or
push
adcl
scas
sbb
sti
lcall
mov
mov
dec
sbb
dec
mov
std
mov
and
ss
aas
xor
lds
xorb
int3
ds
imul
mov
into
movsl
push
adc
cs
clc
rorl
hlt
in
lods
push
push
cmpsb
sub
add
cwtl
inc
imul
xor
std
and
add
filds
cmpsl
icebp
pop
rcl
pop
jp
xchg
cmp
push
andl
loopne
je
loopne
mov
gs
jne
into
mov
inc
or
mov
mov
and
addr16
aaa
pushf
inc
mov
mov
out
insl
add
add
adc
shrl
push
sbb
jbe
inc
xchg
inc
repnz
and
clc
pop
pop
sti
mov
pop
idiv
test
sti
pop
repz
scas
mov
sti
pop
lahf
fdivs
mov
roll
insb
cmc
xchg
inc
insl
je
xchg
cmpsb
jae
mov
push
jp
or
xor
mov
push
jecxz
jg
add
mov
aaa
push
out
xchg
decb
sarb
inc
xchg
cmp
clc
sbb
mov
dec
and
cmp
pop
std
mov
mov
sub
stos
xchg
aas
addr16
stc
jge
pop
stc
outsl
popa
jnp
inc
jae
cltd
dec
cltd
adcb
stos
sub
sahf
mov
sarb
xchg
mov
push
int3
or
pop
fcompl
mov
adc
jg
adc
mov
dec
jno
lds
fldl
cmp
repz
cmp
add
cwtl
push
test
adc
sub
mov
xchg
dec
pop
test
outsl
jmp
mov
jg
mov
push
popf
mov
fldl
or
pop
out
ja
div
jnp
xchg
enter
cmpsl
sub
aaa
inc
push
faddl
inc
or
or
fwait
call
filds
fisttpll
pop
sti
mov
cmpsl
loop
jae
dec
or
rorl
adc
xchg
mov
adcl
xor
insl
mov
lcall
pop
clc
je
fdivrs
add
notl
call
sbb
rorb
mov
cltd
pop
cli
pop
icebp
and
divb
jecxz
fs
imul
jne
pop
frndint
sarl
or
or
imul
cmp
std
pusha
mov
scas
lods
xor
out
das
mov
mov
enter
addr16
dec
jbe
or
add
xor
out
daa
xor
arpl
testl
jnp
and
mov
add
cmp
dec
dec
js
imul
test
cmc
cmp
pop
clc
movsb
add
cwtl
rcr
sahf
push
mov
add
inc
adc
mov
cmp
outsb
dec
mull
jbe
xor
mov
loopne
inc
jbe
fcompl
xchg
scas
aaa
cwtl
cmp
sub
ljmp
inc
adc
inc
cmpsb
xor
sti
pop
and
mov
outsb
cmp
and
xlat
mov
add
mov
mov
stos
test
mov
pop
push
mov
fimull
inc
or
sub
push
mov
lods
jne
test
xor
cmpb
fldt
sub
ss
les
fdivrs
test
mov
mov
out
popa
mov
fdivrs
cmpsl
sbb
imul
mov
cmpsb
test
cmpsb
into
mov
cmpsb
mov
cs
call
loope
fdivrl
add
lcall
pusha
pop
adcl
add
fwait
cmp
xchg
outsl
push
jmp
pop
sbb
dec
loopne
insb
in
push
std
jnp
ja
mov
mov
adc
loopne
mov
mov
sbb
pop
xchg
and
xor
jno
pop
inc
sub
movaps
jbe
sti
pop
push
push
push
clc
push
jns
faddl
inc
pop
dec
xchg
sarb
popf
sub
fldl
mov
mov
stos
addr16
sahf
rorb
int
out
sbb
and
dec
inc
pop
push
jg
into
cmp
out
jo
sub
es
inc
or
fcmovbe
jg
repnz
inc
in
inc
lds
mov
xor
pop
mov
mov
cli
pop
lods
cwtl
pop
test
mov
cmp
lock
mov
push
ret
fisubrs
call
jne
cltd
cmp
push
jge
insl
out
js
iret
outsb
add
fsts
xor
ret
icebp
adc
cmp
movsl
xor
sbb
stos
daa
or
push
mov
sub
inc
scas
inc
js
or
scas
imul
leave
xchg
adc
lds
jae
jno
cltd
mov
stos
xchg
nop
pop
lcall
ret
js
push
leave
or
jne
pop
fldl
inc
xor
mov
xchg
cmp
sti
fs
cwtl
xor
test
mov
dec
cld
loop
jge
in
ficoms
jbe
fwait
cmpsl
cmp
cmp
sbb
icebp
sub
ljmp
and
and
xor
out
inc
jae
jp
mov
loop
pushf
in
insl
nop
cmp
mov
int3
ds
pop
jmp
ds
add
ret
out
or
pop
shrl
mov
ljmp
sbb
mov
fnstenv
add
xor
fimuls
and
xchg
cmp
xor
sbb
enter
je
std
in
jo
jnp
xchg
and
daa
push
pusha
in
lahf
xor
jnp
or
lea
push
mov
loopne
sti
mov
movb
jp
ja
xchg
lret
or
fwait
jecxz
sub
sub
sar
nop
sbb
adc
or
push
js
inc
push
sbb
push
popf
fwait
popf
xor
mov
call
push
fs
adc
pop
add
xchg
add
cs
fwait
inc
or
jmp
sarb
lcall
out
ret
into
and
pop
les
repz
sub
movsl
sbb
popf
jl
sub
mov
test
sub
fbstp
pop
mov
cmp
cmp
add
roll
nop
pushf
mov
shll
dec
fists
mov
test
es
mov
dec
cmpb
mov
jle
dec
mov
shl
or
cmp
cld
popa
xchg
sub
xchg
xchg
inc
loope
out
pusha
cld
stos
sub
movsl
jecxz
push
das
inc
psubusw
or
int
roll
loop
stos
sub
stc
pop
stc
jb
and
sarl
fimuls
leave
mov
adc
pop
pusha
fnstsw
dec
test
push
jbe
fisttpll
push
ljmp
icebp
jmp
or
and
hlt
jo
stos
addb
xchg
xchg
mov
aaa
ror
insl
ljmp
pop
cld
push
iret
add
fwait
mov
pop
arpl
out
test
jle
fsubrl
iret
inc
adc
rorl
daa
out
push
pop
mov
inc
scas
gs
loopne
int
into
inc
sbbl
out
lret
xchg
sti
arpl
mov
sbb
ja
cmp
mov
js
addr16
sbb
cmc
mov
cmp
jp
push
ret
ljmp
in
xchg
clc
mov
inc
scas
pop
xchg
aaa
sbb
xchg
sub
inc
rolb
fbstp
and
push
clc
data16
sub
add
cmp
fcmovb
mov
mov
js
adc
iret
jbe
fstpl
and
gs
lods
pop
add
dec
negl
lret
push
clc
push
add
shlb
test
sbb
mov
stos
mov
jb
in
jne
popa
jno
push
rolb
scas
addb
mov
pop
add
mov
fninit
sbb
incl
sub
pop
add
or
and
xor
sub
sbb
scas
subb
push
inc
xchg
mov
pop
push
inc
mov
jl
xchg
orl
mov
in
test
or
adc
push
dec
inc
test
lcall
and
test
cmp
pop
ljmp
ljmp
add
push
sub
lock
xor
sub
sbb
jns
and
mov
push
adc
xchg
dec
adc
and
mov
adc
mov
cmp
mov
pop
call
or
ja
push
sub
mov
sbb
loope
fs
and
inc
sbbb
push
pop
lock
ja
fldlg2
mov
sub
inc
fdivl
dec
mov
adcb
push
pop
cmc
out
xchg
cmp
int
dec
or
jmp
lcall
paddsw
push
xor
jo
scas
inc
mov
test
xlat
int3
arpl
in
cmp
sub
sbbl
or
mov
xchg
adc
inc
fistl
mov
jne
stc
cmpsb
test
shlb
push
out
pop
sbb
or
outsb
mov
sub
into
mov
add
iret
push
push
in
test
or
cmp
pop
jae
nop
imul
mov
sub
mov
mov
ss
mov
cmp
rcrl
or
cmp
mov
mov
sbb
loopne
fs
and
cmp
xor
sbb
pop
lock
ja
fsubr
mov
sub
aas
fdivl
dec
mov
jg
cli
xchg
les
sbb
cmp
int
inc
or
jmp
cltd
sub
lret
or
in
dec
loopne
xor
outsl
subl
ret
arpl
in
cmp
sub
sbbl
lahf
scas
mov
jbe
iret
es
adc
inc
fistl
sbb
movsl
cmpl
mov
adcb
aad
out
push
sbb
or
insl
mov
sub
mov
call
cli
xchg
inc
and
addr16
data16
movsl
mov
or
testl
sub
dec
pop
jae
mov
loopne
scas
xchg
sub
mov
mov
xor
xchg
xchg
cmp
mov
pop
out
or
cmp
mov
lea
sbb
sti
and
cmp
xor
sbb
pop
icebp
test
js
xlat
jmp
xchg
sub
outsl
dec
mov
jle
cli
xchg
ret
imul
xrelease
inc
push
movsl
ja
push
jmp
cwtl
sub
leave
fidivl
or
dec
loope
cs
daa
pusha
cmp
scas
inc
mov
xchg
push
jecxz
cmp
ss
jnp
lahf
lods
mov
ja
int
mov
push
and
push
das
sbb
pusha
jb
cli
mov
les
out
add
mov
or
popf
js
sub
lret
mov
std
adc
xchg
inc
push
shrl
sbb
mov
les
in
cmp
sub
inc
pop
je
mov
loope
lods
xchg
sub
mov
mov
xor
push
ds
iret
test
cmp
cmpsb
in
test
mov
pop
in
or
cmp
sarb
mov
push
mov
out
gs
and
cmp
das
inc
sbbl
push
pop
icebp
adcl
mov
sub
outsb
dec
mov
jnp
sti
xchg
rcrl
adc
lock
xor
push
movsl
je
push
in
mov
fnstenv
or
dec
loope
sub
push
inc
mov
xchg
add
daa
jmp
pop
xor
pop
gs
mov
mov
fsin
xchg
or
inc
fstl
sbb
pop
jno
sti
mov
ret
sbbb
rcrb
add
mov
or
pushf
jne
sub
enter
adc
xchg
inc
sbb
push
xchg
outsb
out
xchg
rorl
cmp
sub
inc
pop
jne
mov
loope
lods
xchg
sub
mov
call
or
data16
cmp
movsl
in
test
mov
pop
loop
or
ss
sub
jnp
add
int
push
mov
out
gs
pop
cld
cmp
sub
dec
pop
icebp
jg
mov
psrld
mov
sub
insl
inc
mov
jns
sti
xchg
rcrb
mov
out
lock
xor
into
gs
push
movsl
jb
push
in
mov
sub
fdivs
or
dec
loope
sub
sub
push
inc
mov
xchg
add
movsb
cmp
es
pop
xor
pop
arpl
mov
mov
daa
mov
or
inc
fisttpll
sbb
pop
jo
sti
mov
ret
hlt
into
pop
out
call
ja
push
push
xchg
sub
mov
mov
clc
push
cld
xchg
inc
sbb
imul
lock
mov
push
out
adc
or
arpl
xchg
stos
xchg
sub
mov
add
std
mov
das
or
data16
mov
les
testb
daa
add
jp
dec
sub
jns
add
lret
test
mov
in
gs
sbb
aas
sbbl
dec
pop
bnd
mov
adc
in
push
pop
repz
cs
inc
mov
js
sti
xchg
mov
fistps
mov
in
icebp
mov
xor
into
arpl
cmpsb
jno
push
in
mov
sub
or
in
loop
sub
add
scas
inc
scas
mov
fs
movsl
cmp
and
adcb
pop
arpl
mov
mov
daa
mov
or
fisttpll
sbb
sti
lahf
jl
shrb
into
pop
lock
mov
rsqrtps
push
cwtl
jae
sub
jmp
mov
clc
or
xchg
ds
push
pop
sbb
sahf
mov
iret
loop
lock
xor
lds
jne
xchg
jecxz
test
sub
mov
add
sti
mov
sub
dec
iret
data16
mov
lds
or
xor
push
add
leave
test
mov
ljmp
sub
sbbl
dec
pop
repz
mov
adc
jecxz
push
adc
aaa
fnsave
mov
js
sti
xchg
mov
fstpl
mov
in
repnz
xor
into
popa
inc
adc
mov
cs
jae
push
in
jecxz
sub
add
scas
inc
lods
mov
fs
cmpsb
cmp
push
xor
pop
arpl
mov
mov
daa
mov
or
inc
fisttpll
push
mov
insb
fs
popf
jnp
shrl
pop
icebp
adc
adc
mov
movsb
mov
je
lds
xchg
cmp
aam
dec
pop
sbb
popf
scas
cmp
loopne
adc
xor
das
movb
or
bound
xchg
cmpsb
xchg
sub
mov
add
stc
mov
sub
mov
cmp
jle
test
lea
pop
loopne
or
xor
sub
jne
add
cmpsl
and
sbb
aas
sub
sbbl
dec
pop
hlt
jge
mov
adc
loope
push
adc
cltd
xor
mov
ja
sti
xchg
mov
fistpl
mov
in
repz
cs
into
pop
aas
adc
mov
das
mov
jae
add
dec
in
es
sub
imul
jns
inc
stos
mov
fs
fsubl
adcl
pop
popa
jae
mov
mov
sub
push
sbb
dec
daa
pop
mov
push
cld
fwait
jns
aam
mov
pop
repnz
cpuid
cmp
jp
dec
rclb
cwtl
das
mov
ret
mov
cmc
or
xchg
cmp
aad
dec
pop
sbb
fwait
lods
cmp
fidivrs
out
xor
xor
inc
push
jne
andl
xchg
movsb
xchg
sub
mov
add
divl
and
dec
iret
data16
test
test
lods
pop
fcomip
or
xor
shlb
fwait
test
mov
pop
stc
inc
xlat
sub
sbbl
dec
pop
cmc
jl
mov
adc
fistpll
xor
xor
je
inc
mov
xchg
mov
fstps
mov
jmp
mov
adc
scas
nop
xor
rcl
or
jecxz
in
and
sub
insb
add
scas
inc
test
lret
cld
fldt
adcl
pop
pusha
jno
mov
mov
sub
add
and
cltd
js
aad
mov
pop
repz
or
jnp
dec
pusha
rclb
cltd
xor
ret
hlt
push
std
xchg
cmp
sbb
lcall
test
cs
xor
aas
dec
jne
andl
sub
mov
add
cmc
mov
daa
push
mov
cmp
data16
stos
inc
mov
enter
or
xor
shlb
pushf
test
and
adc
aaa
sbbl
dec
pop
idivb
mov
adc
fnstsw
xor
xor
je
inc
mov
xchg
mov
xlat
outsb
enter
or
cmc
mov
aaa
into
pop
cmp
push
in
lods
xor
ror
or
loop
out
and
add
jne
inc
cmpsl
xchg
fs
fisubrl
orl
pop
pop
outsl
or
mov
sub
add
inc
fiadds
and
xchg
ja
test
sbbl
leave
pop
hlt
cli
or
adc
rclb
lcall
sarl
ss
outsb
inc
push
sbb
cltd
test
adc
sub
xor
ds
jne
jg
push
out
mov
outsb
add
and
inc
iret
data16
stos
inc
mov
leave
pusha
fucomp
or
xor
sub
jo
add
faddp
movsb
and
adc
inc
fsubrs
sbbl
dec
pop
idivb
mov
adc
fdivrl
xor
xor
je
inc
mov
xchg
mov
xlat
outsb
sbb
sbb
aaa
into
pop
cmp
stos
insl
jnp
in
lods
mov
enter
or
loopne
out
and
add
je
inc
cmpsb
test
gs
fsubrs
test
pop
pop
outsb
or
mov
sub
icebp
roll
lcall
and
xchg
jne
cmpsb
mov
sbb
pop
hlt
clc
or
adc
rcrl
lcall
mov
xchg
xor
push
sbb
xchg
mov
mov
pop
out
sub
xor
cmp
jbe
jle
push
out
lahf
xchg
sub
scas
outsb
add
and
lea
push
stos
inc
mov
leave
pusha
fucomi
or
sbb
out
das
ds
outsl
push
add
ffreep
mov
data16
adc
inc
fsubs
xor
pop
idivb
mov
adc
fcmovnb
push
or
das
fidivs
inc
mov
xchg
mov
xlat
outsb
mov
out
mov
sub
iret
pop
cmp
stos
imul
stos
mov
enter
or
fimuls
mov
sub
insl
add
jae
dec
movsl
orl
clc
test
test
pop
pop
insl
or
sahf
jl
jl
mov
add
inc
and
mov
xchg
jae
movsb
mov
sbb
lds
testb
cmp
pop
jl
dec
pop
ret
push
xor
mov
xchg
xor
xlat
outsb
inc
push
sbb
mov
mov
stos
out
pop
lock
xor
cmp
push
jge
push
out
sahf
xchg
sub
lods
outsb
add
and
lea
inc
shrl
push
stos
inc
xchg
leave
pusha
fldl2e
or
jle
cmp
add
loopne
mov
addr16
adc
inc
fsubs
test
inc
pop
divb
mov
adc
fcmovb
pop
or
fwait
xor
ds
xchg
mov
xlat
outsb
ret
aam
mov
in
mov
daa
cmp
pop
cmp
stos
imul
enter
or
fmull
or
cs
add
jb
dec
movsb
orl
inc
push
sbb
xchg
pop
pop
insb
or
jl
mov
add
inc
pop
and
xchg
jno
xlat
mov
ret
pop
cmc
hlt
pop
movsl
cmp
adc
ret
pop
mov
xor
mov
add
inc
push
push
mov
popa
testb
mov
stos
in
pop
icebp
daa
pop
xor
cmp
pop
push
call
int
outsl
push
fucomp
mov
and
lea
inc
shrb
push
stos
inc
test
leave
pusha
xlat
call
out
sub
sub
insb
dec
add
loope
sahf
and
adc
inc
fsubs
xor
divb
cmp
fadd
pop
or
fwait
xor
sub
ja
cmp
push
outsb
jg
xchg
mov
xlat
outsb
rcl
mov
jecxz
mov
adc
test
xor
mov
fimull
or
insl
add
jo
dec
mov
ret
shrl
shrb
xchg
pop
push
push
movsl
fwait
js
jl
mov
add
aas
sbb
imul
mov
rcrl
push
cmpsb
cmp
inc
pop
les
data16
xor
mov
add
aas
push
push
mov
pusha
testb
mov
stos
in
pop
icebp
es
xor
aaa
inc
js
jns
push
call
int3
stos
outsl
push
fsubr
mov
pop
decb
imul
lock
movsb
leave
pusha
out
movsl
sbb
out
sub
sub
imul
jl
dec
loope
popf
and
inc
fsubs
xor
divb
movsb
cmp
xlat
ret
call
loopne
pop
cmp
xchg
mov
xlat
outsb
rcl
mov
loop
mov
cmp
push
xor
pop
out
cmpsl
xchg
enter
or
or
add
outsl
mov
mov
ret
hlt
shrl
xchg
pop
push
imul
jl
mov
add
ds
mov
xchg
outsb
inc
xlat
lahf
mov
push
in
pop
cmc
icebp
add
jge
inc
pop
les
gs
xor
mov
add
ds
push
mov
pop
testb
mov
stos
jecxz
pop
icebp
and
inc
js
js
push
call
lret
test
mov
push
std
lea
inc
shrb
push
stos
inc
adcb
pusha
aad
push
movsl
pop
mul
jle
cmp
push
add
loope
pushf
and
push
out
inc
fsubs
xor
divb
movsb
cmp
ret
out
xor
sub
ja
cmp
xchg
scas
xlat
outsb
mov
loope
mov
and
rcll
stos
gs
out
cmpsb
xchg
enter
or
or
xchg
sub
sub
pop
outsb
mov
mov
rcl
repz
xchg
pop
push
push
in
test
sub
jmp
add
cmp
pop
imul
sahf
mov
push
jecxz
pop
cmc
lock
cmp
inc
push
les
fs
xor
mov
push
jmp
or
outsl
cmp
pop
testb
mov
stos
loop
pop
icebp
and
xor
xor
push
push
call
lret
push
mov
sbb
aas
shrb
dec
stos
inc
adcl
push
movsl
push
mul
jle
cmp
imul
loope
fwait
and
or
das
xchg
jno
movsb
cmp
ret
out
xor
sub
ja
cmp
xchg
scas
mov
outsb
mov
loopne
mov
and
rcll
adc
movsl
test
enter
or
or
xchg
sub
sub
pop
insl
mov
lahf
jl
and
iret
test
xchg
pop
push
addr16
movsl
cwtl
jne
jl
mov
add
cmp
and
insb
inc
xlat
popf
mov
push
loop
pop
cmc
out
add
adc
push
les
arpl
jns
mov
push
call
or
outsl
cmp
push
mov
pop
testb
mov
stos
loope
pop
icebp
and
xor
xor
js
jbe
push
call
leave
cmpsl
outsl
push
fldl2e
mov
sbb
lea
dec
stos
inc
adcb
pusha
shl
push
movsl
adc
aaa
sub
push
mov
mov
fldt
or
inc
fcomps
xchg
jo
movsb
cmp
aam
pop
push
in
xor
sub
ja
cmp
xchg
lods
mov
outsb
mov
fdivp
mov
and
rclb
adc
movsb
xorl
mov
ja
not
dec
out
sbb
add
insb
mov
sahf
jp
and
test
mov
pop
push
gs
cmpsb
xchg
jae
jge
mov
call
or
sbb
mov
lea
fcomps
mov
cmpsl
xor
jle
inc
push
lds
pushf
xor
or
or
xchg
and
jns
mov
xchg
jg
int
les
cmp
ja
push
orb
mov
jno
dec
orb
jnp
and
mov
ds
jmp
xor
lret
insb
mov
xor
mov
pop
inc
arpl
add
mov
xchg
aaa
outsb
mov
ja
repnz
jb
push
cltd
mov
sbb
daa
inc
pop
loopne
imul
adc
les
pusha
test
fcoml
ret
jno
cmove
or
push
fcomps
and
mov
push
dec
xchg
xchg
sarl
jle
xor
imul
add
sub
mov
and
cmpl
inc
mov
cmc
dec
adc
mov
aaa
xchg
das
movsw
sti
aaa
mov
test
scas
and
dec
sub
rol
pop
fimull
adc
mov
outsl
notb
mov
repnz
add
imulb
dec
xchg
inc
sub
push
xchg
cmp
fistpl
mov
push
lds
jge
push
nop
push
fcoms
sbb
adc
cmp
mov
push
test
rorb
arpl
das
jl
pushf
rcll
push
pop
test
jle
fiadds
pop
mov
mov
add
fimuls
sub
mov
es
adc
ret
lcallw
insl
imul
mov
test
aam
or
push
dec
adc
mov
inc
sbb
inc
cmp
mov
mov
loope
adc
pop
hlt
frstor
cmpsb
arpl
push
les
mov
mov
inc
fcomi
adc
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
mov
jb
js
adc
sbb
sbb
adc
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
pop
mov
icebp
and
sbb
inc
hlt
rcrl
popf
mov
mov
sbb
cli
fstl
