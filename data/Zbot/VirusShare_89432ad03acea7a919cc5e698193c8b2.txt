jb
test
in
add
add
add
add
add
adc
mov
push
add
add
xchg
addb
fwait
jg
popa
mov
add
or
inc
push
je
loopne
fists
incl
add
sub
jbe
imul
leave
lahf
or
sbb
mov
jecxz
or
sti
leave
and
les
or
and
lret
add
ficompl
jo
pop
jle
xchg
sahf
jle
mov
add
mov
psrlq
pop
add
add
repnz
lcall
lock
and
add
test
push
sbb
fisttps
cmp
addr16
mov
jg
and
data16
fisubrs
or
rorb
sbb
sti
sub
ljmp
sbb
out
sbb
stc
add
mov
sbb
xorb
add
scas
add
xchg
jnp,pt
push
add
add
lahf
and
insb
adc
nop
xchg
test
in
das
push
adc
stos
mov
fstpt
aam
and
andps
insb
mov
xchg
outsl
pop
jnp
pop
sub
loope
mov
cmovne
mov
pop
in
enter
dec
inc
inc
jmp
bnd
testl
add
add
popa
test
stc
add
jmp
mov
mov
shrb
add
adc
or
push
jg
jmp
iret
das
pop
in
ds
mov
es
or
pop
sahf
jmp
mov
std
out
mov
rcrl
in
js
imul
add
mov
shl
mov
pusha
cmp
jns
cld
das
pslld
dec
in
add
add
cmp
lcall
mov
shll
xor
inc
clc
ret
iret
add
sbb
cs
sbb
and
push
mov
push
rcll
mov
add
lret
mov
inc
jle
sbb
mov
adc
rolb
sbb
iret
and
jle
add
add
lods
jo
fisttpll
rcrb
lods
insl
out
jne
add
jmp
push
out
fdivrs
fcmovb
mov
scas
adc
in
testb
cmp
outsb
pop
fsubrl
adc
sub
mov
pop
mov
test
outsb
int
jae
in
test
icebp
dec
lea
jp
mov
testb
mov
fidivrs
pop
aam
mov
dec
hlt
mov
mov
dec
mov
pop
jmp
inc
inc
add
jl
mov
inc
add
add
push
lcall
bound
add
rorl
dec
nop
sahf
das
cmp
rcll
mov
dec
xchg
jns
xor
xor
pop
jno
sub
xor
stos
adc
icebp
fwait
in
cli
fmulp
jge
push
add
andb
mul
dec
add
test
dec
xchg
dec
sbb
xchg
ja
fldt
xchg
rolb
add
mov
or
incl
cmpsb
xchg
lahf
mov
das
xor
add
gs
idivl
dec
data16
cmp
repz
dec
push
das
xchg
jno
mov
cmp
fisttpll
pushf
mov
scas
mov
cltd
aas
jo
mov
bound
rcrb
inc
adc
clc
test
popf
andb
cmp
aad
and
jnp
push
or
jnp
inc
jo
add
inc
adc
repnz
nop
rcrb
inc
add
fsubrs
iret
ret
repz
add
push
filds
ss
loopne,pt
cmpsl
ss
pop
push
in
cmpsb
jg
outsb
jmp
gs
in
mov
add
dec
xchg
jge
pushf
mov
and
decl
xchg
xorl
ja
out
xchg
jmp
and
dec
push
pushf
sub
pop
out
inc
or
les
inc
repnz
outsb
pop
leave
jp
add
ja
mov
or
xor
incb
inc
adc
xor
xchg
push
dec
xor
iret
inc
call
xor
ret
push
push
push
push
outsb
shlb
ret
pop
cmc
cmpsb
mov
addr16
jecxz
popf
fisubrs
cmp
popf
insl
loop
mov
loop
xchg
call
adc
lret
out
pop
jl
flds
lds
stc
popf
insb
test
clc
push
xor
and
sbb
pop
or
pop
mov
mov
lret
jo
sub
cli
nop
sahf
mov
fldenv
mov
adc
push
out
daa
sub
mov
fadd
adc
scas
dec
or
stos
fdivrp
incl
data16
pop
ret
ficoms
sub
ss
daa
es
or
aaa
push
sbb
jecxz
adc
aas
pop
sbb
aas
pop
cmp
dec
xor
pushf
mov
mov
add
popa
pusha
jns
in
scas
mov
push
pop
addl
pop
lret
call
sub
pop
aas
sub
add
add
cmp
jp
jmp
lret
testb
sbb
xchg
mov
dec
jb
pop
stc
popf
subb
sub
pop
cmp
adc
or
add
cmp
or
rorl
int
leave
mov
leave
xchg
sub
in
inc
mov
jne
mov
outsl
rcrl
jmp
jecxz
mov
lods
popf
loope
pop
iret
or
rcll
jge
fs
push
push
lock
fwait
cmp
add
xor
orb
add
mov
and
dec
dec
mov
cmp
int
lds
cmp
lds
test
sub
aaa
add
and
adc
stos
jle
les
imul
jl
jl
loopne
jbe
shrl
sbb
xchg
dec
jns
mov
cmp
fdivs
cs
mov
xor
ret
xor
dec
sub
or
fstpt
jle
mov
adc
repz
cld
icebp
fwait
xor
lds
icebp
push
imul
push
cwtl
mov
add
pop
cmp
mov
and
stos
jmp
jns
in
cmp
jg
dec
les
cwtl
lahf
sbb
adcb
and
sbb
cli
loopne
dec
add
scas
xor
ret
fists
inc
or
shl
inc
pop
mov
test
popw
inc
leave
xor
xor
data16
int3
mov
popf
clc
loope
sbb
stos
or
cld
mov
push
sarl
loope
inc
jo
inc
mov
mov
sbb
cmpsb
xor
lds
bound
mov
jmp
xchg
lahf
xchg
lods
inc
psubusw
in
push
ljmp
sbb
adc
or
outsb
outsb
jmp
stc
pop
push
cld
int3
cmp
clc
pop
ret
cmc
nop
repz
pop
sub
inc
fs
pushf
inc
pop
das
jp
in
sahf
lahf
and
fwait
or
in
repz
mov
mov
fistps
mov
pusha
push
jb
xchg
fwait
mov
movsl
rolb
test
jo
insb
stos
push
jns
or
cwtl
or
dec
arpl
lahf
jmp
sbb
sahf
xchg
and
loopne
clc
icebp
rcll
fsub
mov
dec
in
pop
xchg
negb
pop
and
xor
js
add
rclb
mov
sbb
pushw
sub
jl
int
pop
and
cwtl
es
xor
or
xor
dec
outsl
loope
loopne
add
mov
outsb
pop
outsl
sub
and
push
pop
dec
or
xchg
dec
xchg
out
cmc
or
inc
cmp
rcll
xor
in
xchg
int
je
jbe
lods
dec
and
ja
cmp
inc
xchg
add
mov
xchg
loope
mov
xchg
pop
mov
lds
push
sub
lock
lods
and
mov
into
or
bound
push
aas
inc
sbb
int
gs
cmp
mov
sbb
or
and
xchg
jbe
xor
adc
inc
or
into
clc
and
fisttpl
xlat
pop
mov
rol
fs
call
pop
xchg
es
jmp
cmp
mov
mov
sub
xchg
sbb
shrl
xchg
pop
loopne
sahf
lock
fdivs
sbbl
sahf
sbb
je
pop
mov
sbbl
insb
cmp
jne,pt
sbb
lret
ljmp
mov
xchg
inc
cmpsb
xor
push
ud1
call
dec
push
dec
ret
cli
add
add
jno
adc
out
divb
add
divb
sahf
push
ss
xchg
in
and
xor
je
lcall
xchg
push
jae
or
xor
mov
and
jns
add
adcl
fsubr
add
loop
in
cmp
dec
xor
add
sbb
fsts
lods
and
dec
out
in
movsl
ucomiss
out
sub
and
dec
fistl
das
bound
inc
mov
mov
lods
outsb
push
andb
xchg
sysret
xchg
pop
out
xor
and
test
mov
push
sub
sbb
pop
jl
sahf
inc
lea
das
scas
or
inc
pop
cmp
sub
jbe
pop
lock
leave
cld
aas
loop
mov
stos
stc
imul
iret
aaa
mov
adc
jp
push
mov
jb
aaa
sub
insl
mov
xchg
inc
pusha
pop
xlat
cmp
andb
pmaddwd
loopne
lret
inc
inc
mov
mov
mov
sub
push
add
push
or
mov
xchg
out
xchg
sub
fidivs
xor
xchg
push
sarl
and
and
jp
mov
sti
ret
ficoms
jg
mov
movsb
pop
decl
inc
xlat
lods
add
test
xor
sbb
fisubs
mov
ds
fistl
movsb
lock
pop
jle
outsb
filds
cmp
stc
ds
mov
rclb
cmpsb
clc
xchg
int3
lock
fbstp
pusha
in
inc
and
lret
ret
push
cmp
rorb
icebp
mov
je
data16
rcll
inc
pushf
and
mov
test
push
icebp
cli
pop
jo
sub
sbb
xchg
inc
icebp
scas
jb
jo
mov
xor
aas
lea
add
push
flds
divl
mov
push
push
bound
push
movsl
fsubrl
mov
or
pop
or
mov
repnz
hlt
loopne
int3
xor
add
adc
fists
loope
sub
jb
add
inc
aas
jge
dec
and
jg
inc
dec
cmc
ds
popa
cmp
dec
inc
adc
jnp
es
test
mov
bound
popl
repz
mov
mov
movsb
sbb
hlt
sub
stc
inc
xchg
into
stos
mov
scas
repz
test
popf
out
xlat
mov
lret
push
adcb
ret
jge
cmc
xchg
dec
xor
rcll
xor
jb
mov
pop
xor
cmp
ret
ja
adc
leave
xchg
rcl
mov
lds
test
addb
pop
push
cmc
call
add
jns
mov
int3
repnz
jns
ret
mov
in
inc
sub
and
adc
mov
mov
and
mov
sbb
mov
or
push
and
pop
dec
push
rcl
jmp
scas
fdivl
xchg
adc
mov
and
add
or
adc
ss
popf
cmpl
inc
xor
in
xchg
mov
out
add
dec
ficomps
sbb
cmc
xchg
aam
or
lahf
aad
fistpl
cmp
cld
inc
insb
dec
xchg
out
cli
push
push
fadds
aas
sub
in
add
push
mov
lock
push
test
es
in
xchg
movsl
ljmp
dec
fistps
loopne
hlt
pop
dec
lods
test
pop
or
movsl
cld
sub
ja
and
sbb
and
test
mov
inc
mov
roll
ds
or
adc
or
packsswb
out
push
xchg
pop
adcl
cmp
insb
sbb
sbb
sub
movsb
iret
push
inc
sahf
pop
pop
mov
inc
jbe
repnz
mov
ja
lahf
mov
pop
iret
push
arpl
out
ljmp
mov
push
sarb
sub
sti
xor
mov
popf
push
daa
popf
jg
outsb
movsb
testl
outsl
lods
imul
and
ja
pop
insb
pop
jns
shll
loope
pushf
clc
cwtl
jl
sub
pop
ret
scas
out
sub
or
xor
jne
fnstcw
lods
mov
das
shl
aas
fwait
out
cwtl
jbe
sbb
add
pushf
repz
subl
xlat
xor
cli
pop
aam
out
sbb
adc
cli
dec
mov
and
scas
sbb
xchg
push
mov
dec
xchg
pop
mov
inc
adc
cmp
lds
add
pop
pop
inc
test
pop
mov
jp
sbb
push
shlb
ret
dec
outsb
movsl
sbb
data16
adc
pop
inc
sub
push
jo
jbe
pop
popa
shrl
add
sahf
cmpb
fwait
mul
mov
inc
shlb
push
or
push
lea
pop
adc
sbb
xchg
dec
in
movhps
shrb
cld
lods
sbb
ror
cmp
pusha
jae
mov
shll
sarb
fiadds
jb
jle
das
or
jge
cmpsb
inc
sbb
and
es
ret
inc
xor
sub
cmp
mov
aad
lea
dec
and
out
mov
pop
push
addr16
and
push
and
clc
scas
pop
adc
mov
dec
dec
shll
adc
clc
jns
pop
sub
loopne
mov
mov
rorb
and
in
sub
gs
jne
hlt
push
mov
in
jg
lods
sbb
xchg
mov
shr
test
xor
cld
cmp
jo
hlt
mov
sti
ds
fs
lret
aad
dec
fwait
cli
cmp
xchg
es
pusha
mov
sub
xor
add
in
shr
and
lret
mov
mov
imul
pop
adc
xchg
mov
daa
adc
and
sub
inc
dec
stos
mov
pop
cwtl
jo
loope
add
ds
leave
jne
insl
movsb
push
jmp
mov
enter
loope
rcl
push
push
movsb
inc
test
test
mov
les
add
jp
jmp
jp
int
es
icebp
xor
or
std
cltd
pusha
cmp
xchg
or
xchg
in
jmp
mov
pop
and
cli
cmpsl
push
popf
repz
or
fistps
mov
ljmp
jge
clc
rclb
in
js
xor
mov
jg
ud1
sub
loopne
add
inc
pop
clc
loope
pop
jle
es
out
aad
sbb
and
inc
or
inc
jge
xchg
clc
fidivrs
lods
adc
mov
xchg
popl
movb
je
enter
cmp
popa
lock
fisubs
std
xchg
or
pop
mov
pop
in
cmp
push
sbb
adc
or
aas
sbb
dec
pop
imul
popf
xor
mov
jmp
je
adc
push
mov
js
mov
cmpsb
push
pop
js
xor
mov
xchg
sbb
add
hlt
fimuls
inc
cmpsw
or
pop
xchg
inc
or
push
pop
insl
xchg
inc
lods
cmc
sbb
add
aad
add
cmp
in
xchg
iret
into
imul
dec
xchg
mov
testl
mov
insb
lahf
xchg
scas
mov
cmp
xchg
jnp
mov
mov
adc
jmp
lea
lods
sbb
xchg
adc
jle
sub
pop
imul
pop
lds
inc
cmp
ret
aas
mov
lea
xor
mov
icebp
inc
inc
mov
nop
jb
nop
xor
cmp
push
aas
test
add
out
jnp
sbbb
adc
popf
das
mov
push
out
cmp
dec
sub
jne
andl
lret
adc
es
xor
cmp
subl
rolb
js
sub
pusha
jle
icebp
lods
xorl
in
aam
cmpb
test
pop
cli
pushf
rcl
ret
addb
pushf
jg
adc
sbb
mov
das
sub
les
mov
daa
and
dec
and
push
mov
aam
xchg
add
call
xchg
mov
jge
pushf
jge
xchg
loopne
inc
mov
xor
inc
mov
cmp
adc
jp
js
xor
clc
ret
popa
notl
lss
mov
insb
pop
mov
cmp
add
mov
nop
mov
mov
push
mov
outsl
in
xchg
or
jmp
mov
enter
mov
lea
mov
inc
in
mov
xor
cmpsl
add
cmp
mov
xor
adc
pop
cli
aas
or
dec
push
xchg
xchg
outsb
sbb
test
fsubp
fucomi
push
inc
xor
les
mov
pop
cmp
sub
pusha
addr16
and
or
inc
aam
sub
arpl
add
jb
or
mov
js
inc
mov
lock
xlat
out
jmp
mov
iret
mov
ljmp
mov
cmp
scas
jecxz
inc
daa
or
add
mov
push
sbb
add
xchg
fwait
adc
sbb
loopne
cmp
sbb
adc
add
out
lret
sub
pop
or
push
dec
movsl
sbb
fisubrs
sub
test
pusha
mov
push
xchg
into
mov
popa
inc
add
pushf
out
xchg
sbb
pop
fwait
pop
fldl
inc
sbb
dec
sbb
pusha
fstpl
add
pusha
push
mov
aas
jns,pt
cmp
push
outsl
mov
pop
inc
lahf
add
fwait
arpl
ss
add
adc
movsb
ss
adc
push
push
daa
iret
into
mov
adc
jno
test
insl
add
aas
mov
andl
stos
jge
xor
addr16
sub
mov
test
adc
jle
mov
jle
cmp
aas
icebp
pushf
jecxz
sub
xchg
cli
outsl
jle
iret
inc
iret
adc
xchg
xchg
jecxz
sbb
push
mov
rorb
mov
enter
or
insl
push
pop
cwtl
aam
add
icebp
pop
rorl
fisubrs
adc
pop
clc
sbb
dec
xchg
and
dec
out
add
aad
push
cwtl
loop
test
lds
sub
inc
push
pop
mov
andl
mov
dec
lcall
mov
xchg
jne
shrb
ss
sbb
cwtl
jp
div
repnz
push
jl
fwait
mov
add
rcl
icebp
leave
mov
add
fcom
jecxz
adc
xor
pusha
jmp
imul
pop
jmp
movl
fbld
add
mov
out
dec
cmpl
scas
sahf
add
sub
push
ds
mov
pop
ss
pop
ficoms
cs
lcall
jnp
out
cmpsb
or
add
push
xor
es
jne
pop
cmpsb
arpl
shrb
insb
fisttps
mov
pop
dec
add
mov
mov
xor
xor
das
ret
test
adc
or
lahf
iret
cmc
sub
and
mov
pushf
xlat
lcall
and
sbb
outsb
xor
push
jns
mov
push
jo
fcompl
xchg
inc
xchg
dec
sbb
inc
cmp
and
inc
push
test
adc
mov
adc
xor
das
push
ds
fildl
leave
mov
pop
pop
ret
add
insl
cwtl
fdivl
shll
es
dec
pop
adc
in
xor
pop
repnz
xchg
or
jo
cmpxchg
pop
hlt
ss
stos
xlat
and
icebp
pop
mov
sub
pusha
gs
mov
test
cmp
scas
push
jb
lds
insb
cmp
add
push
pop
pop
data16
sahf
icebp
sbb
adcl
jb
lcall
mov
addr16
aam
or
in
icebp
sbb
loope
push
add
stc
mov
xor
xchg
jecxz
dec
jno
xchg
inc
addr16
push
jb
shlb
je
push
aad
int3
ja
adc
pusha
jno
movsl
push
mov
sub
int3
and
repz
fcmovu
mov
sub
arpl
push
cmp
mov
in
aas
dec
jb
pop
loopne
fsts
xor
and
icebp
and
xchg
or
mov
test
ret
and
and
cmp
fmul
sbb
std
int
xchg
push
fadd
cmpsb
mov
mov
stos
xor
cmpsb
xchg
mov
mov
ss
mov
sarl
add
sbb
popf
lea
mov
pop
push
pop
mov
orl
mov
mov
mov
dec
inc
sarl
popa
pop
js
or
adc
sbb
cmp
aam
popa
xchg
mov
and
cmp
jge
lea
dec
cmp
xchg
mov
sahf
inc
lods
mov
stos
fistps
out
add
ret
pop
pop
pusha
sub
cld
sbb
xor
rorl
mov
into
fsubrs
and
sbb
out
test
rorb
mov
enter
jno
cmp
and
loop
scas
push
loop
jns
or
repnz
or
inc
jae
scas
arpl
cmpsb
arpl
movaps
call
or
mov
into
inc
add
hlt
rcrl
in
popa
je
bound
xchg
loopne
and
dec
xchg
sub
jmp
out
fscale
insl
mov
nop
dec
xor
xchg
cli
jmp
xor
in
sbb
inc
and
insl
mov
adc
inc
pop
adc
loop
sbb
icebp
dec
jecxz
enter
fnstcw
repnz
cmp
cltd
iret
daa
push
xchg
pop
insl
cwtl
addr16
pusha
insl
imul
lret
pop
cmp
movsl
or
cmp
jle
iret
jl
fldl
jge
insb
in
cld
add
mov
daa
mov
sahf
sbb
push
mov
lds
sub
in
mov
inc
mov
and
fnstsw
fistps
sbb
int3
pop
xlat
test
mov
and
or
inc
lret
mov
jbe
test
sbb
xor
outsl
xchg
or
js
subb
adc
gs
and
daa
cmp
fs
mov
rcll
loop
jecxz
repz
push
push
push
pop
sbb
push
fnstenv
pop
mov
rolb
cmpsl
and
pusha
jmp
test
sbb
push
into
roll
mov
pop
cmp
mov
fisubs
adc
push
cmp
inc
daa
inc
int
push
and
push
and
hlt
pop
jnp
jb
aas
mov
mov
pop
gs
ret
lahf
xor
mov
shl
cmpsl
push
lock
loopne
or
sbb
movsb
push
mov
and
fsubr
mov
jbe
inc
mov
jg
ljmp
testb
push
pop
loop
inc
sbb
adc
add
fucomp
or
mov
mov
adc
jp
imul
add
jge
adc
mov
or
fildl
sbb
nop
pop
dec
dec
je
insl
inc
dec
andb
sub
lds
and
dec
or
lock
movsl
or
stc
scas
adc
pslld
das
and
js
pushf
mov
pushw
cmp
mov
stos
push
or
repnz
sbb
into
insb
in
pop
push
mov
xchg
sbb
sub
out
sub
jno
stc
je
sbb
decb
daa
cmc
inc
arpl
ficoml
mov
sbb
sarb
adc
cs
inc
and
and
mov
lock
rcrl
aad
ret
and
pushf
mov
outsl
jl
jge
inc
mov
mov
lock
push
insl
and
add
icebp
ja
add
popf
insb
xchg
fadds
stos
mov
out
js
cmp
add
icebp
lods
pop
xchg
mov
pop
xchg
xchg
cmc
jmp
pusha
loope
sub
mov
test
push
mov
mov
cmp
out
pop
test
arpl
aaa
cmpsl
xor
add
or
add
mov
xchg
in
xadd
jbe
movsb
cmp
data16
loope
xchg
jns
push
add
xchg
std
and
out
xor
mov
jle
sti
jae
push
insl
cld
adc
hlt
sbb
jne
mov
xchg
daa
push
repnz
insl
fs
push
mov
stos
shll
call
hlt
mov
xlat
int
jns
test
cmp
sub
scas
cltd
out
adc
inc
sbb
movsl
cwtl
jne
cmp
mov
or
ret
push
adc
js
aad
xor
adc
mov
pusha
rclb
std
sti
shlb
test
icebp
dec
scas
xor
push
inc
adc
icebp
pusha
lds
pop
sbb
mov
cmp
cmc
nop
pop
test
push
int3
fstpt
inc
test
jne
sti
sbb
in
dec
mov
and
jmp
jb
add
xor
xorl
lods
rclb
sub
cmovnp
sbb
out
and
outsl
popa
push
ror
sub
jecxz
add
nop
add
bound
push
mov
pop
jge
or
mov
loope
rcr
pop
pop
fildl
xchg
jno
pusha
mov
je
inc
cmc
push
or
adc
xor
fnstenv
shlb
xchg
imul
ja
dec
sbb
pop
pop
hlt
lcall
outsb
mov
subl
jbe
stc
scas
icebp
test
jne,pt
cmp
and
adc
pop
in
jne
les
movsl
test
inc
lret
es
or
sbb
mov
xchg
aad
push
ss
stos
mov
loope
xor
rorl
push
pop
adc
loop
adc
loopne
mov
jo
sbb
jb
cmp
cmpb
add
in
jp
pop
fldt
or
orb
pop
clc
stc
jne
pop
pop
out
mov
mov
ljmp
and
icebp
mov
mov
pusha
nop
pop
or
dec
and
sbb
test
pusha
addr16
sti
sti
sub
lock
xchg
gs
pop
loop
mov
mov
dec
adc
xrelease
std
fildl
in
ljmp
jecxz
outsb
adc
pop
loope
in
adc
icebp
jo
test
cmp
arpl
sbb
inc
push
popw
test
jl
add
push
nop
xchg
ljmp
inc
mov
inc
je
fnsave
scas
arpl
ljmp
outsl
pop
in
cmp
out
popf
xor
sbb
dec
nop
call
shlb
outsb
cmp
stos
cwtl
repz
cmp
jge
iret
mov
test
int3
fwait
mov
mov
pop
mov
sbb
pop
andl
xchg
jno
mov
push
iret
and
jl
push
sbb
push
jl
arpl
test
insb
push
aam
mov
fnstsw
pop
xchg
ret
add
add
sub
loopne
mov
hlt
sar
es
jb
sub
pop
fbstp
and
sub
pop
push
sti
dec
xchg
pop
sub
push
dec
sbbb
cmp
scas
jae
adc
jge
adc
popf
sahf
mov
ss
jle
mov
loop
dec
loopne
sub
lods
jns
and
pop
lods
bnd
mov
ss
aas
clc
lods
cmpsl
jne
leave
movsb
cmp
cmp
inc
cs
test
pop
xor
sbb
and
into
inc
cmp
sarl
cli
fisubrs
sbb
cmp
pusha
mov
dec
addr16
mov
adc
clts
in
shrb
scas
clc
or
jb
test
mov
scas
fwait
mov
push
cmp
mov
shrl
xor
pop
and
dec
push
lods
cmpsl
es
cmpsb
and
cli
and
push
jp
add
adc
pop
sbb
mov
inc
jl
push
add
jb
bound
cmp
add
nop
adc
or
mov
stc
push
sub
cmpb
shll
pop
pop
sbb
mov
rorl
mov
das
xchg
sbb
hlt
fdivl
and
xchg
out
push
call
and
or
stc
cmp
xor
mov
fs
sbbl
and
xchg
loopne
xor
cwtl
mov
xor
lock
ret
fstpl
dec
jo
xchg
mov
roll
int
or
inc
int3
cmp
addb
lods
cmp
jo
push
xchg
std
aas
mov
sahf
inc
outsl
pusha
push
insb
push
xchg
add
adc
push
cmp
sub
outsl
add
leave
xchg
inc
or
aam
pop
add
xor
cmp
mov
daa
fwait
ss
movsb
jp
xorl
in
insl
pop
push
mov
jle
add
rcrl
mov
mov
dec
cmp
int3
sbb
xchg
pop
mov
mov
or
mov
mov
test
push
adc
mov
lcall
cwtl
mov
mov
data16
cmpsb
data16
and
sub
daa
cs
adc
jb
loopne
ret
dec
leave
dec
jl
jl
dec
cvtps2pd
cmp
mov
inc
movsb
fldl
add
fstpl
xor
mov
adc
test
mov
add
nop
adc
scas
and
daa
or
je
and
dec
cmc
sar
sub
stc
mov
cmp
jno
imul
push
dec
xlat
sbb
loopne
out
adc
inc
mov
addr16
jne
sub
pop
add
ja
js
adc
fwait
std
call
inc
lods
inc
xchg
iret
mov
sbb
pop
in
cmp
adc
lock
mov
and
jg
pop
push
cmp
cmpsb
out
cmc
inc
lret
cmc
mov
out
mov
adc
popf
ret
loope
outsb
int3
adc
adc
add
movb
mov
shlb
mov
ret
cld
movsl
bound
add
stc
sbb
std
jne
icebp
call
test
fistl
loope
lods
or
jo
popw
and
jbe
xchg
hlt
inc
cmp
and
pushf
dec
sbbb
xchg
repnz
cmp
into
stos
and
into
mov
push
jae
pop
bound
mov
add
icebp
jle
cmp
xchg
testb
dec
xchg
xlat
movsb
inc
test
cwtl
xchg
imul
jno
and
inc
cmpsb
int
stos
and
mov
add
or
mov
fbstp
out
jl
imul
jp
loopne
add
push
sub
and
lods
cli
int
dec
add
bound
fdivrs
nop
daa
lahf
cmp
std
test
imul
pop
sbb
icebp
shlb
sahf
add
cmpsl
dec
mov
push
mov
mov
test
fwait
jge
dec
aam
inc
addr16
dec
addr16
push
addl
push
xchg
xor
sub
push
push
pop
jne
lds
add
mov
fwait
icebp
loop
mov
jne
scas
aam
ja
and
jo
rorb
add
sti
cmp
aas
fsubr
push
dec
cli
sbb
sub
scas
fdivrs
jbe
outsl
adc
add
jne
inc
aas
ja
adc
xor
jb
inc
inc
out
outsb
les
popa
xor
fdivrs
xchg
mov
insl
dec
data16
test
sbb
test
or
rcr
adc
daa
or
dec
fcomps
ffreep
lock
mov
pop
and
dec
and
sub
bound
jnp
jb
pop
or
icebp
pusha
cwtl
and
mov
mov
outsb
nop
mov
cmp
mov
ds
aas
mov
int
sbb
js
out
mov
dec
push
lahf
rorb
imul
jge,pt
sbb
or
adc
xchg
sub
xchg
fildl
lds
sbb
push
cli
sbb
dec
xor
jmp
push
outsl
test
aam
lea
aad
inc
das
cs
lret
fildll
dec
add
hlt
jns
shlb
jmp
nop
arpl
mulps
mov
je
cwtl
adc
jl
push
lds
xlat
push
mov
push
sbb
sbb
pop
cmp
add
mov
or
mov
xor
sub
movsb
jnp
lock
dec
jmp
add
sbb
iret
fldenv
cmp
push
mov
dec
mov
ret
andl
jb
mov
clc
movsl
xlat
add
and
gs
sub
dec
repz
xor
sub
inc
mov
or
add
and
or
inc
das
adc
jle
push
sbb
cmpsl
and
imul
cmpsl
shr
and
outsb
jne
adc
pop
aaa
mov
pop
push
loope
or
or
fnstsw
popf
jno
sarb
mov
xchg
bound
or
push
jae
cli
outsl
fldcw
aaa
or
out
push
inc
or
aam
les
xchg
xchg
mov
bound
icebp
or
dec
sbb
lods
mov
cld
sbb
stos
or
and
data16
cmp
pop
cmp
push
shlb
jl
ja
adc
adc
xchg
in
mov
push
and
lods
sub
shll
pop
mov
sbb
es
cmp
inc
cmp
xchg
dec
jne
push
stos
jecxz
das
or
inc
or
mov
xchg
dec
xchg
xor
in
popf
add
add
mov
jge
and
lock
or
jbe
jp
pushf
repnz
cli
leave
dec
cmc
jb
push
inc
scas
adc
jne
in
jge
mov
cmp
fmul
aaa
cli
ror
mov
mov
imulb
jo
mov
cmp
jmp
pop
push
adcb
sbb
add
xor
push
insl
xchg
sub
imul
iret
and
sahf
push
mov
and
stos
sarl
gs
dec
sbb
mov
stc
repz
pop
stos
scas
add
and
sub
cmp
mov
shrl
sahf
aaa
jmp
loope
fwait
xor
addl
dec
cmp
aas
shll
repnz
jnp
rolb
cwtl
jle
sbb
icebp
faddp
sbb
adc
or
andb
inc
imul
and
ss
pop
mov
xor
xchg
addl
cmp
dec
in
jbe
loop
jbe
in
out
xchg
dec
jns
jp
out
xchg
xor
mov
sub
pcmpgtw
push
mov
xor
mov
adc
rorl
inc
mov
enter
mov
popf
jg
sbb
in
inc
andb
jnp
xchg
pop
or
repz
sub
xor
out
fcoml
jb
jno
stos
inc
mov
fisttps
push
and
push
cmpsl
sti
int
or
add
dec
pop
lcall
dec
add
les
add
out
mov
pushf
rcr
movsl
rolb
inc
push
in
and
cwtl
mov
and
xchg
shlb
mov
rcrb
pop
lods
call
popa
popf
adc
jne
xor
cmc
adc
sbb
test
cmc
loop
jnp
inc
cwtl
xchg
pop
movaps
rcrb
pop
movd
push
pop
dec
sbb
mov
cmp
xor
cwtl
or
and
sub
xchg
mov
or
mov
jecxz
cmp
sbb
mov
xor
fcmovnbe
pusha
dec
sahf
sbb
sbb
jno
in
mov
jecxz
ds
lahf
dec
cmp
dec
cmp
add
popa
mov
xor
cmp
adc
outsb
push
mov
fiadds
jl
popf
pop
push
pushf
lock
fs
js
add
cmpsb
mov
int
ss
insl
icebp
decb
ss
fidivrs
or
das
inc
sbb
inc
jp
imull
or
sub
cmc
and
push
sti
mov
push
xchg
gs
cmp
xchg
cmp
rolb
sub
lret
and
add
inc
out
push
xchg
push
mov
es
ss
jmp
jge
add
cmp
mov
lret
outsl
ja
shrl
sub
jecxz
jp
adc
daa
pop
iret
add
pop
jp
test
pop
stos
das
sbb
inc
inc
repnz
xor
fcompl
ss
xchg
and
xor
into
sbb
negb
cmp
ljmp
loopne
fld
xchg
inc
jno
lret
adc
addr16
inc
roll
fildl
cmpsl
das
inc
or
cld
push
in
idivb
loop
and
mov
js
loop
inc
es
dec
pusha
or
adc
mov
inc
es
es
in
das
or
lds
jb
push
inc
cli
pop
fdivrp
pop
enter
sbb
push
dec
test
jg
and
arpl
add
sbb
stos
incb
or
xchg
inc
lods
jns
dec
decl
mov
stos
adc
and
push
mov
push
jbe
add
sti
insl
jmp
and
and
loope
push
in
cmp
jmp
mov
mov
daa
mov
inc
jo
dec
add
in
fists
push
pop
push
mov
loopne
pop
pop
jno
shlb
or
pop
or
mov
sbb
mov
cmp
xor
adc
pop
sahf
inc
fstpt
jg
leave
inc
jl
fdivrs
icebp
mov
out
sti
push
mov
sbb
in
insl
cmp
add
inc
insb
inc
ret
out
pop
inc
xchg
and
mov
pusha
xchg
ret
notl
sub
dec
icebp
jmp
and
jl
xchg
inc
xor
push
test
pop
loope
xor
inc
lea
push
or
xlat
movsb
mov
pop
mov
test
test
icebp
mov
jge
in
cltd
faddl
cmp
pop
add
pop
mov
xchg
xchg
cmp
push
cltd
stos
pop
sbb
xor
pop
pusha
cmp
dec
aad
pop
cs
lods
or
insb
fisttpll
xchg
and
loope
sbb
sub
jmp
and
xor
jge
pop
bound
and
xchg
cltd
jmp
dec
ret
jb
mov
mov
dec
or
cmp
nop
push
or
push
scas
scas
sbb
push
incl
jmp
xchg
fwait
xor
xchg
push
inc
sbb
pushl
loopne
dec
mov
mov
jle
jmp
popw
push
add
jnp
push
jl
insb
sbb
sub
adc
mov
mov
inc
sbb
cltd
xor
std
add
push
xchg
xor
fdivs
mov
lea
mov
pop
fucomp
out
ret
jl
out
inc
cmp
mov
dec
sub
xor
or
xor
test
inc
ss
jne
and
pop
fistl
jb
fildll
add
into
xor
mov
pop
jp
movsl
out
je
and
das
inc
mov
fldt
fsubrl
dec
std
and
lock
dec
sbb
lods
push
and
and
fcomps
and
ljmp
pop
fstps
jns
notl
inc
jmp
xchg
dec
pop
nop
jg
or
and
or
stos
ret
jne
bound
xchg
cmc
loope
or
sub
push
imull
add
cmp
mov
cmp
mov
shl
cmp
loope
inc
mov
cli
sbb
fisubrl
jno
jg
mov
jae
shll
pusha
outsb
cmp
cmp
xchg
push
jg
mov
out
add
push
lods
xchg
std
mov
inc
xor
ja
test
popf
jle
jp
fbstp
testl
out
pusha
sub
cld
and
in
jg
in
dec
out
push
and
inc
in
add
cltd
xchg
movsb
push
outsb
shlb
pushf
mov
dec
xchg
inc
ss
dec
dec
orl
mov
pushf
shrl
add
gs
pusha
jns
das
sub
out
in
xchg
inc
shll
adc
jbe
push
xchg
ds
add
icebp
mov
bound
int3
mov
jno
dec
stc
xchg
jecxz
ss
dec
sub
ja
jecxz
and
pop
cmp
and
clc
es
inc
nop
pop
arpl
shlb
or
or
sub
loopne
fwait
push
rclb
sbb
add
jbe
ret
fbstp
lods
popa
into
jmp
jbe
loop
ret
inc
inc
jnp
imul
pop
daa
out
push
loopne
sub
adc
mov
pusha
icebp
shlb
shll
mov
jge
cltd
leave
mov
adc
les
cmp
stos
icebp
lods
out
sbb
sub
cmc
and
mov
mov
push
mov
sarl
adc
mov
mov
add
icebp
sub
fwait
mov
add
lahf
jle
dec
xor
sbb
imul
mov
and
fisubl
inc
lds
addr16
xor
sbb
dec
rclb
mov
sbb
call
movsb
aad
filds
pop
push
pop
je
inc
gs
daa
sarb
fs
or
rcrb
jg
subb
sub
out
dec
rorl
push
mov
mov
or
add
insb
aaa
inc
daa
inc
push
or
pop
and
push
test
arpl
xchg
cwtl
cmpsb
jmp
and
aad
test
ret
fdivs
jae
add
sbb
inc
cltd
or
push
mov
inc
lret
bound
test
pushf
dec
ljmp
hlt
imul
aas
pop
dec
or
mov
inc
dec
push
mov
push
cld
mov
inc
lret
dec
aad
mov
mov
sbb
and
inc
shlb
cmp
rcrl
jbe
add
dec
in
sbb
inc
fimuls
mov
cmp
sbb
les
pusha
adc
or
fldl
in
int3
mov
pop
xor
nop
adc
fs
rol
mov
sub
dec
xchg
push
lods
in
imul
loopne
orb
clc
out
pop
lds
cs
insl
xchg
daa
sbb
xchg
out
les
clc
inc
mov
jmp
insl
cmpl
add
ljmp
nop
shll
adc
add
in
cmp
das
and
js
dec
aad
sbb
xor
das
decl
imul
mov
clc
dec
daa
inc
jle
mov
xchg
orb
dec
push
adc
xchg
pop
pop
pop
inc
add
sub
mov
add
push
jne
or
fistl
and
test
mov
lods
push
push
je
pop
adc
movsl
rcrb
cli
and
aas
fcoms
add
push
push
lea
rcl
push
mov
mulb
out
push
hlt
adc
neg
xchg
xchg
mov
cmp
ret
xlat
call
leave
push
cmp
push
xor
inc
out
xchg
mov
shlb
inc
clc
xor
and
or
mov
aam
ss
mov
mov
xlat
test
adc
and
lock
add
enter
xchg
pop
inc
pop
insl
mov
test
jae
xchg
aad
lahf
aad
mov
adc
adc
icebp
or
cmp
pop
mov
inc
pop
xor
push
sbb
inc
dec
fs
test
rclb
xor
or
in
in
inc
aas
call
inc
jo
push
sub
adc
nop
push
sbb
test
pop
push
adc
push
ret
int3
popa
imul
or
sbb
mov
or
cltd
add
hlt
fbld
les
mull
sub
inc
das
sbb
ficoms
aad
je
jns
sarl
pop
mov
fstpt
mov
mov
fcoms
fimull
mull
mov
pop
scas
aam
insb
dec
or
outsb
dec
inc
dec
dec
rcrl
out
aad
mov
xchg
shlb
cwtl
pop
sahf
cli
aas
jle
sahf
xchg
jge
outsb
or
jb
xchg
mov
cmp
repz
jbe
je
mov
ds
sahf
push
push
and
lock
push
cmp
adc
out
push
inc
mov
sub
sbb
push
and
mov
dec
adcl
xchg
adc
cmpsb
or
fidivs
aam
fidivrl
icebp
andb
shrl
movsl
or
sbb
fcompl
daa
sti
in
push
insl
dec
out
inc
xor
push
mov
mov
fsubrs
ficomps
ja
cmp
mov
data16
leave
adc
and
lds
or
fisttpl
sub
pop
outsb
mov
test
pusha
fildl
adc
fsubs
loopne
sub
inc
jae
dec
pop
scas
and
push
out
inc
mov
cmp
movsl
mov
jo
call
jg
mov
flds
mov
sbb
adc
shll
push
das
push
dec
int3
mov
jae
test
jmp
pop
js
test
adc
aas
xor
inc
ret
add
push
lret
sbb
scas
popa
sbb
or
sub
sub
nop
or
pop
adc
js
cld
mov
xor
std
mov
js
rorb
loope
cld
adc
mov
rolb
lock
ja
jge
push
repnz
je
pop
outsl
lock
movsl
xchg
stos
and
or
sahf
add
dec
push
cmp
aam
addl
cmp
mov
inc
push
repz
mov
jmp
mov
inc
shll
enter
mov
mov
lods
sub
int3
mov
mov
push
jle
push
outsb
cmp
pop
pop
daa
mov
mov
and
push
leave
std
jmp
incl
mov
xchg
aaa
adc
insb
mov
and
test
lock
imul
mov
ret
mov
or
mov
cmp
push
push
jb
jne
test
jl
jmp
in
lret
jbe
sbb
and
movsl
lods
insl
std
shl
mov
add
adc
jle
mov
jno
insl
insb
lcall
mov
xchg
push
imul
sub
and
lret
adc
fs
insl
je
aaa
push
aad
cmp
outsl
sbb
ds
loopne
jns
decl
sub
sbb
sub
and
or
int
in
es
ret
pop
cmp
sbb
das
jg
xor
jo
sti
aas
adcl
enter
and
pop
test
mov
in
aad
adc
add
or
arpl
cmp
shll
fimuls
test
jmp
xchg
inc
lock
rorl
popa
mov
jp
das
aas
xor
inc
popa
std
push
cltd
xchg
xchg
inc
nop
test
insl
lcall
addb
dec
ljmp
pop
xchg
inc
mov
adc
rcr
lods
push
lds
fcoms
push
ds
jg
rcrb
cmp
cmp
scas
ljmp
fisttpl
lods
mov
adc
inc
push
mov
mov
sbb
mov
adc
mov
iret
jle
push
test
jo
in
and
cmpsl
mov
mov
add
sub
daa
jecxz
rorb
int
sbb
insl
imul
fisubrs
pop
push
jge
addl
sub
cs
cltd
fisubrs
int
pop
lea
dec
daa
xlat
fisubrs
das
mov
jge
loop
xorb
pusha
cltd
dec
ficomps
push
pop
aas
loopne
xor
jmp
loopne
jge
push
adc
mov
pop
adc
in
add
sbb
js
mov
jg
push
leave
jo
cs
mov
push
dec
sbb
leave
popf
stc
cmp
fs
lea
lods
cs
cld
cvtps2pd
hlt
clc
das
js,pt
pop
pushf
fidivs
mov
cmp
push
sar
stos
vpminsw
inc
add
mov
and
ss
mov
cwtl
pop
lock
hlt
adc
mov
adc
push
insl
lods
fadds
aam
shll
ljmp
mov
adc
mov
jno
nop
out
mov
arpl
inc
incb
fwait
mov
adc
test
mov
imul
cmp
jb
stos
mov
call
adc
sbb
je
arpl
or
mov
das
orb
outsl
test
cmp
jbe
and
cwtl
pop
add
lcall
movsl
fsubp
mov
pop
mov
jp
call
cmp
mov
ss
cli
movsb
add
xchg
addr16
jg
sub
mov
mov
sub
mov
icebp
sti
data16
cmp
push
add
imul
gs
clc
or
shlb
mov
or
inc
jae
hlt
dec
sbb
push
repz
arpl
jno
push
subl
and
lods
ficoml
pop
xchg
test
add
test
test
xchg
push
les
xor
jge
or
cs
loope
xor
lret
fwait
push
in
cmp
mov
enter
aam
cmpb
out
daa
call
add
test
mov
jg
in
insb
sarl
lret
mov
inc
jmp
or
mov
std
in
cmpsl
bound
xor
add
out
add
fwait
jb
mov
rol
mov
leave
xchg
jae
jno
pushl
shrl
stos
in
test
fildl
jge
outsl
inc
mov
mov
dec
cmc
mov
and
sub
lock
mov
jo
inc
pop
outsb
pop
ja
adc
sub
sti
and
and
test
pop
fcompl
lret
and
mov
lret
mov
fidivs
dec
sbb
adc
mov
sahf
fadd
jo
jle
inc
lret
cmp
test
fcoml
icebp
gs
cmc
outsl
fildll
idivb
int3
cld
xor
dec
sub
pusha
inc
nop
adc
dec
mov
andb
scas
cmp
arpl
dec
dec
and
mov
mov
fildl
mov
jno
cmp
mov
enter
fdiv
cmpsb
mov
lcall
or
push
out
shlb
sub
js
jne
test
cmpsb
push
xor
loop
jmp
mov
jge
adc
cmp
cmpb
pop
fmuls
sbb
or
jp
rcll
adc
jb
push
mov
push
mov
test
data16
cmpsb
arpl
fbld
and
xor
mov
das
add
pop
inc
in
das
aam
imul
xor
sahf
sub
mov
push
rcrl
mov
mov
xor
mov
xor
scas
dec
pop
xor
jae
insl
imul
repz
pslld
jae
pop
mov
int
decl
mov
or
mov
lds
aam
ljmp
pop
js
add
or
push
sbb
and
inc
imul
push
fidivs
into
jae
fistpll
daa
aas
or
outsb
xchg
movl
jns
mov
mov
jp
shlb
sbb
call
mov
insl
jecxz
imul
inc
jnp
jge
dec
jl
repz
lret
ret
sub
movsl
add
rorb
dec
lea
push
js
push
stos
insl
mov
fistpl
stc
jp
and
ss
push
test
stos
in
push
nop
in
rolb
sbb
fldcw
pop
clc
mov
jp
outsl
fs
es
mov
rol
dec
sbb
daa
loope
push
lahf
inc
pop
mov
jmp
inc
sbb
adc
test
stos
mov
pop
stos
inc
shrb
inc
mov
loopne
jl
xchg
fnsave
addr16
mov
pop
inc
inc
inc
js
mov
int3
rcrl
or
xchg
mov
mov
mov
pop
or
push
insl
loop
les
fdivl
pop
cmc
jae
fldcw
mov
pop
loopne
jo
pop
add
mov
jmp
xchg
mov
pop
aaa
mov
fsts
sbb
cmpsb
imul
sbb
outsb
fwait
mov
push
inc
stos
jnp
popf
sbb
shlb
lcall
lock
mov
stos
pop
ljmp
push
mov
adc
clc
jne
and
sbb
xor
sbb
lahf
add
xchg
fidivrl
je
jle
imul
clc
loop
mov
add
shl
pusha
ja
rol
aad
pop
mov
pusha
mov
je
push
push
xor
add
dec
mov
inc
inc
test
fucomp
js
cmp
add
std
sbb
pop
mov
mov
inc
mov
outsl
nop
jnp
jl
mov
cmp
fwait
and
idiv
xor
pop
mov
std
jmp
std
ss
jle
or
jg
jg,pn
dec
mov
mov
std
sarb
dec
test
pop
dec
fisubs
pusha
sti
iret
dec
pcmpeqb
pop
and
push
ret
dec
js
inc
popa
fisttpl
push
mov
inc
push
hlt
arpl
scas
test
pop
aad
mov
insb
fildl
insl
or
push
mov
stos
cs
mov
mov
xchg
je
insl
mov
call
xchg
pushf
out
push
mov
je
mov
push
sbb
cmp
imul
not
mov
sbbb
adc
mov
sub
mov
or
movsl
out
mov
sub
or
mov
pop
dec
push
sub
jle
clc
outsl
pop
insb
push
jecxz
pop
lds
mov
and
add
insl
cmpsl
jne
mov
xchg
add
fmuls
dec
mov
xor
push
cmc
lret
xchg
movsb
adc
sub
ljmp
test
cltd
subl
addb
fst
arpl
inc
adc
test
std
pop
int3
adc
ret
add
mov
sub
jg
gs
fcmovne
cld
mov
xchg
popa
jmp
push
sar
push
sbb
dec
add
insb
test
in
daa
lds
ficompl
pop
jp
xchg
pop
push
jmp
push
and
lods
divb
imul
xor
insb
dec
roll
and
js
pusha
sti
movsl
jmp
mov
test
or
pop
in
out
lock
mov
mov
xor
les
std
ss
cld
loop
testl
inc
hlt
pop
xchg
and
rol
repnz
mov
inc
imul
sbb
fldenv
out
mov
dec
inc
jmp
mov
pop
ficomps
cmp
fwait
dec
adc
mov
inc
sbb
push
loopne
jnp
sub
mov
mov
fnsave
arpl
shrl
sub
cmc
test
loopne
xor
ja
add
fcomps
insb
les
cmpsl
test
inc
dec
int
fwait
mov
aad
scas
or
hlt
sbb
sub
or
jecxz
cmpsb
jmp
or
out
addl
inc
shl
insl
cwtl
push
cmp
inc
in
add
cmp
inc
rorb
pop
jecxz
call
adc
hlt
sbb
sarb
cmpsl
adc
push
xor
clc
das
sub
subb
pop
adc
and
inc
stos
pop
fildll
loopne
add
push
fidivl
pop
fistpll
jmp
lods
outsl
cmp
mov
mov
movsb
in
mov
inc
adc
xchg
incb
jno
mov
push
js
in
rolb
jmp
dec
lds
fbstp
sbb
fdivrp
jns
inc
sub
shrl
insl
jmp
mov
fsubrl
out
pop
ljmp
push
xchg
or
xchg
mov
in
lods
mov
jns
inc
dec
fcom
mov
mov
addr16
pop
sbb
fs
fistpll
addr16
subb
push
lret
inc
cwtl
cwtl
push
fidivrl
push
testb
test
rolb
add
movsl
in
incl
jno
inc
les
pop
and
ljmp
xlat
test
add
repnz
dec
pop
add
pop
push
and
shr
not
mov
xchg
mov
in
push
outsl
or
jne
and
int3
aaa
fidivs
pop
rcrl
push
mov
push
pop
push
in
and
lods
outsl
mov
or
pop
leave
xor
push
sbb
push
dec
adc
push
mov
movsl
sbb
test
and
insb
fists
sbb
addr16
out
mov
push
inc
xlat
outsl
sub
imul
jne
sub
orl
adc
dec
cmp
cld
fidivs
push
icebp
les
test
or
xor
dec
cmp
loopne
imul
in
xor
mov
push
fisttpl
jns
bound
lret
outsl
mov
push
push
pop
add
mov
adc
negb
xchg
pop
cmp
lret
push
add
or
lods
sbb
lock
fldl
lods
xchg
inc
ljmp
loop
aam
ret
pusha
jno
inc
xchg
lods
and
sub
std
add
pop
sub
ljmp
mov
inc
lcall
pop
push
daa
movsb
addr16
out
mov
mov
aas
mov
mov
mov
lods
inc
stos
inc
mov
gs
push
mov
call
insl
aaa
cmp
outsb
pop
das
test
dec
test
addl
push
adc
sarb
cmp
out
das
or
cmp
jbe
mov
leave
adc
les
xor
cmp
or
jle
jge
sub
les
jmp
incl
cmp
mov
call
pop
sub
or
fnstsw
andb
mov
and
mov
sub
test
ffreep
leave
cltd
adc
lds
jp
mov
addr16
sahf
lods
inc
jne
rorb
cmp
frstor
lea
pop
jmp
mov
scas
call
cmp
shlb
mov
mov
mov
hlt
icebp
or
push
andb
sub
daa
fsubrs
mov
addl
sub
scas
mov
shll
push
rcll
pop
and
int
lea
mov
push
clc
push
dec
adcl
imul
nop
cmpsb
mov
mov
das
lcall
xchg
mov
mov
sbb
add
lock
jmp
add
fists
rclb
mov
lret
sub
sub
clc
jl
or
push
in
pop
pop
adc
adc
je
pop
jl
fsubrl
adc
push
vpmacssdql
outsl
das
inc
lods
xchg
outsl
sbb
xor
xor
sarb
push
lret
jns
xchg
call
mov
jno
mov
adc
pop
and
in
cmp
stos
dec
cmpxchg
les
xchg
and
das
insl
xchg
rcll
sbb
lods
cmpsb
ljmp
lods
rclb
ret
inc
shll
add
jge
and
mov
cmp
mov
dec
lret
ss
xor
call
pop
fcmovu
andl
push
test
or
mov
xchg
fwait
loopne
mov
or
cmp
push
lock
adc
out
loope
pop
fisttpl
test
int3
sarb
and
add
iret
sbb
cmc
rcrb
insl
xchg
scas
loope
sahf
mov
pop
mov
leave
dec
stos
imul
ret
ss
mov
cmp
int
jl
ret
cmp
jmp
jnp
test
inc
imul
icebp
orps
js
pop
lds
and
insl
sarb
inc
int3
incl
int
push
mov
push
jbe
jle
in
fiaddl
hlt
ds
test
dec
mov
adc
movsb
mov
movsb
dec
add
and
jne
xor
arpl
mov
add
pop
sub
inc
jecxz
mov
pop
xchg
mov
add
push
dec
pop
out
call
call
mov
mov
and
and
ds
fdivrs
pop
mov
sbb
imul
bound
mov
lcall
mov
ret
fs
mov
imul
les
sbb
sbb
push
test
call
mov
ljmp
gs
cs
fstpl
add
lret
cwtl
mov
mov
js
dec
sub
addr16
cmpsb
mov
roll
or
mov
mov
add
mov
cmp
push
mov
dec
add
pmaddwd
xor
ret
call
stos
cmp
or
or
es
adc
mov
dec
inc
mov
into
fdivr
xchg
push
icebp
xchg
push
shlb
or
xor
notb
add
dec
fisttpl
and
icebp
push
jmp
shll
adc
cmc
mov
cli
in
shll
mov
inc
adc
xor
or
std
stc
adc
or
jb
or
push
sub
leave
add
rcrb
cmp
add
inc
dec
outsl
mov
inc
daa
int
test
inc
shlb
cmpsl
xchg
pop
nop
dec
rcr
inc
pop
lret
mov
test
and
sbb
xor
jb
pop
add
ror
ss
xchg
xchg
call
sub
insl
push
pmullw
adc
fnsave
in
sbb
pop
lahf
jl
inc
mov
fisttpl
and
push
adc
pushf
lea
add
mov
pop
jmp
xchg
out
into
adc
xchg
or
cmp
xchg
sub
out
xrelease
jnp
cmp
inc
or
fwait
shr
and
pop
lret
xchg
pop
movsb
cmp
stc
cmp
fsubrp
nop
add
xchg
mov
adc
adc
xchg
mov
sbb
or
sub
stos
and
cmpsl
xor
push
pop
sar
inc
xor
outsb
pop
loope
out
loop
pop
jne
xor
test
stos
pop
das
lds
sub
push
adc
jns
xchg
sub
and
dec
shl
pop
scas
in
test
xor
mov
fisubrl
sub
cli
lods
push
loopne
push
pusha
popa
adc
lcall
xor
xor
xchg
jne
ret
mov
rcl
jbe
sub
jnp
or
adc
jle
jl
and
push
mov
sahf
push
das
insl
mov
jecxz
enter
sahf
sti
or
inc
mov
push
mov
sbbl
push
and
jecxz
jbe
xor
sub
ret
sub
mov
dec
dec
xor
jo
mov
add
pop
mov
dec
repz
imul
les
push
pop
or
dec
push
sti
pop
adc
push
xlat
jp
and
sub
leave
xorb
mov
loopne
mov
cmpsb
dec
inc
fsubs
aad
inc
fistl
jo
aas
cmc
mov
pop
push
and
fucomi
lea
ds
pop
mov
mov
fisubrs
mov
shlb
pop
xor
sub
fld
arpl
sbb
push
inc
popa
sahf
pop
xor
das
xchg
inc
xchg
add
pop
jne
xchg
les
roll
inc
xchg
outsb
cmpsl
pop
xor
leave
push
push
sbb
fsubrs
sahf
dec
aaa
and
inc
out
adc
jmp
mov
add
jo
or
mov
push
sbb
pop
jl
loop
js
cmp
leave
mov
push
out
inc
cmp
sub
cmp
faddl
inc
into
movsl
and
add
test
paddq
add
imulb
or
or
nop
and
test
shll
adc
jbe
les
adc
mov
or
jecxz
mov
dec
pop
inc
stos
das
sub
mov
pop
lret
mov
out
fwait
ljmp
xor
add
jbe
test
fildl
xchg
and
inc
inc
cli
orb
pusha
mov
rorb
mov
inc
decb
ret
and
test
pop
cmpl
repz
inc
and
les
jne
mov
es
xchg
adc
mov
jno
or
pop
jp
fcoms
dec
scas
jmp
dec
jnp
aam
dec
mov
dec
pop
mov
push
push
xchg
xchg
mov
adc
fstpl
in
sarb
jg
pushf
sahf
or
icebp
mov
hlt
fildll
insl
mov
add
iret
adc
mov
fildl
popf
lret
cmp
nop
sub
jno
xlat
shll
sbb
pop
inc
mov
mov
xchg
push
inc
fstpl
decl
sub
adc
push
lahf
hlt
mov
mov
sbb
xor
stc
mov
sub
or
ret
les
or
ret
cmp
inc
xchg
ret
test
adc
add
scas
fdivrs
aad
loop
mov
in
cmp
rol
pminub
add
test
push
push
loop
pop
cmp
mov
mov
pop
push
or
push
mov
cld
enter
aas
shlb
adc
add
fidivl
add
movsb
sarb
and
or
dec
cld
lret
mov
or
inc
sbb
pushf
movsl
adc
daa
mov
or
mov
outsl
in
and
imul
dec
pushl
mov
fdivl
push
cli
lock
inc
add
sub
adc
and
sbb
sar
insb
mov
jnp
fucom
dec
sbb
mov
mov
gs
hlt
push
cmp
in
std
mov
mov
mov
roll
push
jnp
jne
dec
push
iret
push
add
inc
rorb
and
cmp
push
outsl
aaa
aad
addr16
ljmp
mov
dec
add
lods
jl
sub
sbb
fadds
xorl
push
or
cmp
inc
sub
push
and
into
in
xor
pop
mov
inc
insl
fstpt
and
cs
inc
mov
inc
xor
push
aaa
subb
fcomps
sub
sub
sub
dec
enter
add
xchg
mov
push
insb
mov
test
and
cmpsl
fnstenv
decl
xor
ljmp
lds
xchg
and
call
lret
movsl
data16
adc
cltd
push
or
and
call
adc
jnp
std
idivl
mov
xchg
cs
dec
out
fidivrl
xor
outsl
xchg
mov
insb
insb
cmovbe
jge
ret
popa
lods
pop
aad
add
orb
aaa
decb
rorb
push
pop
mov
dec
or
and
popa
xchg
xor
jmp
xor
ljmp
dec
or
jno
repz
hlt
mov
icebp
adc
push
jg
sar
andl
xchg
adc
int
mov
add
sbb
test
mov
pusha
mov
jp
fcomps
mov
lock
mov
dec
or
push
cltd
adc
out
jnp
ret
arpl
mov
pop
pushf
and
mov
xchg
mov
adc
lcall
sbb
and
movsb
sbb
leave
dec
jge
sbb
frstor
cmp
call
arpl
add
jae
sbb
adc
cwtl
dec
push
lock
xchg
fwait
inc
mov
jo
sarb
test
mov
xchg
pop
shl
bound
xchg
out
pop
add
jo
stos
mov
inc
add
sub
fistl
lods
enter
jo
fldenv
lock
mov
adc
lock
jle
loop
cli
jmp
dec
mov
mov
gs
sub
pop
pop
mov
adc
test
mov
fucomip
mov
or
sub
add
push
dec
mov
xor
fisubrs
insl
pop
or
int3
ret
mov
jmp
outsb
push
inc
popa
rcll
xchg
jle
testl
test
icebp
sub
sub
test
stos
sub
pusha
xor
adc
shll
mov
popf
pop
std
push
sub
mov
inc
mov
sub
rcll
dec
xchg
push
cmpsl
jle
pop
sbb
flds
sbb
xorl
xchg
xchg
lcall
xor
inc
outsl
loopne
test
in
dec
nop
sub
fsubrs
sbb
push
cmp
daa
push
inc
push
and
outsb
sbb
cmp
inc
sti
lods
insl
xchg
mov
fadd
stos
dec
cwtl
and
loop
sub
mov
fisubrl
and
daa
cmpb
pop
fmul
add
lret
int3
fcmovbe
and
clc
inc
fildl
fsubs
sbb
adc
cmp
call
inc
cmp
fiaddl
insl
adc
cld
daa
sti
adc
dec
lods
pop
lock
xor
cmp
jle
cmp
add
bound
add
inc
cmp
dec
adc
push
fcompl
test
aas
sbb
mov
inc
icebp
push
daa
pushf
adc
test
jecxz
and
loopne
push
sub
sbb
outsl
inc
mov
and
in
bound
loopne
nop
test
sub
mul
sbb
mov
int
js
aad
insb
or
add
test
imul
inc
je
xor
loope
outsl
dec
ljmp
push
cmpb
lea
out
jle
rclb
and
pop
mov
sbb
mov
mov
jg
fdivs
add
push
inc
lock
invd
out
ja
loop
lods
push
or
sbb
pushl
fdivrs
dec
subb
adc
nop
push
fs
jle
cli
andb
ret
sub
dec
xchg
lahf
adc
mov
test
mov
insl
mov
stos
stos
xor
fwait
mov
cmpl
jle
push
shll
les
jae
push
xor
pop
pop
lods
lock
in
push
xlat
aam
jle
outsb
mov
ljmp
out
push
in
sarb
sub
imul
add
push
pop
out
inc
mov
jmp
push
mov
sbb
adc
fistpl
aaa
jbe
jge
test
fbld
and
ja
jno
cmp
scas
inc
adc
in
push
mov
ja
test
scas
sub
cmp
cwtl
cli
push
inc
jb
inc
jg
movsl
mov
mov
push
mov
mov
dec
cmc
cwtl
stos
lods
or
push
or
in
ss
aam
outsl
inc
arpl
xchg
and
negl
enter
pop
fistps
lock
inc
sahf
lds
inc
aas
shrb
scas
inc
cmp
mulb
push
mov
clc
xchg
out
and
loope
dec
lods
cmpsb
in
or
push
fdiv
mov
mov
das
insl
lsl
ret
add
pop
sub
stos
out
ljmp
push
push
sub
jbe
inc
mov
push
mov
out
xchg
cs
or
lds
scas
jne
push
mov
mov
cli
add
xor
insb
jno
sti
insl
sti
aaa
jae
fdivs
outsb
imul
mov
arpl
cli
adc
outsl
mov
fbld
xchg
repnz
push
int3
sub
xor
ret
inc
add
inc
aas
inc
xchg
jp
stos
das
mov
lret
jge
stos
cmc
or
and
roll
mov
mov
sub
pop
push
pop
mov
cmp
mov
bound
add
xor
clc
lahf
inc
js
jl
gs
aas
inc
dec
cmp
pop
sub
or
mov
cmpsb
js
sti
mov
add
ret
orl
push
or
loopne
mov
adcb
pop
sbbl
mov
movsl
test
pop
pusha
push
dec
pop
xor
or
test
mov
in
mov
push
jmp
push
enter
mov
loop
imul
aam
scas
insl
iret
sub
test
pop
pop
aas
jecxz
adc
mov
jno
or
pop
mov
xor
outsl
jg
mov
pop
xor
xorl
jmp
mov
shlb
inc
sbb
inc
sti
fildll
sbb
hlt
push
cmp
call
pop
jg
ret
inc
push
je
clc
mov
inc
sbb
push
xor
jb
fistl
dec
mov
ret
sti
cmp
sbb
aad
adc
sbbb
mov
or
addl
xchg
loopne
movsl
movb
cmpsl
mov
clc
loopne
add
sbb
add
mov
and
movsl
dec
cs
inc
and
mov
xchg
sbb
adc
aad
movsl
lea
add
cs
push
mov
push
std
in
mov
in
fsubrs
int
dec
arpl
fildll
xchg
xor
cmp
cmp
movsl
adc
or
arpl
fcomp
push
imul
into
outsb
js
xchg
adc
bound
adc
hlt
lock
jmp
or
lret
aas
ret
cmp
je
inc
je
pop
mov
adc
add
push
icebp
sub
jno,pn
jne
sub
or
mov
sub
addr16
mov
xchg
mov
xchg
cmp
mov
mov
lcall
pop
mov
cltd
jbe
dec
cmpsb
outsl
xchg
decb
outsl
data16
into
mov
lahf
mov
icebp
pop
mov
nop
push
inc
rcrl
and
icebp
out
rorl
out
mov
loope
in
cmp
adc
les
aad
negb
add
orb
mov
into
je
lahf
inc
cld
mov
push
fldt
into
sub
add
xor
movl
inc
and
pop
insb
dec
or
push
arpl
mov
aas
andl
inc
inc
inc
stos
or
adc
je
out
jecxz
dec
or
outsb
mov
mov
mov
xchg
adc
je
or
push
sbb
dec
mov
fisttps
jne
mov
dec
push
das
mov
ljmp
xor
subb
mov
das
sub
enter
frstor
sbbb
xchg
loopne
rcll
pop
mov
cmpl
pop
mov
cmp
and
test
pop
sarl
cmp
add
and
dec
das
dec
popf
sub
test
sbb
decb
test
lret
bound
mov
loop
mov
mov
xor
out
test
insl
sbb
inc
mov
or
jns
pop
mov
fstpt
jge
ja
dec
add
mov
xchg
mov
shlb
sub
sbb
jge
mov
mov
pop
push
and
cli
stc
push
bound
outsl
or
popf
lahf
add
mov
mov
xor
mov
sub
mov
mov
call
dec
popa
add
mov
nop
cmp
fldt
or
xor
clc
or
cmpsb
or
lds
xchg
mov
pop
lcall
add
add
push
in
adc
arpl
fs
decl
pop
dec
pop
out
sub
rorl
test
iret
inc
mov
dec
push
fsubrp
sbb
fistpll
mov
out
xor
loopne
xlat
std
dec
lahf
push
decb
mov
scas
pushf
lds
cld
jmp
ret
insb
push
clc
and
add
loopne
call
aas
xchg
sub
ljmp
adc
adc
xor
or
ss
data16
mov
arpl
mov
shl
or
mov
fstpt
sbb
adc
shlb
mov
and
loopne
lods
mov
or
lcall
dec
mov
lock
ret
sbb
pop
unpckhps
push
adcl
mov
es
and
mov
dec
jno
sbb
stos
std
mov
jg
sbb
lea
mov
pop
xlat
sbbl
imul
sbb
or
mov
mov
sbb
pop
arpl
inc
jae
and
sbb
cmp
cmp
mov
or
mov
roll
call
or
cmc
movsl
test
rcrb
call
adcl
imul
icebp
xchg
pop
xorb
stos
push
in
push
or
pop
pushf
shlb
xchg
cmp
inc
aam
enter
push
aad
mov
repnz
jno
or
sti
xchg
mov
add
inc
lods
xor
jl
leave
inc
add
push
mov
idiv
push
stc
out
daa
jl
cwtl
xor
test
data16
in
adc
ret
js
inc
test
ja
or
mov
pop
ret
sub
mov
inc
dec
cs
shll
jo
xor
or
outsb
dec
and
std
sar
jo
stc
inc
xor
dec
lea
sbb
inc
mov
lds
jno
lcall
push
ror
aas
xor
mov
cmp
jmp
push
fiaddl
and
inc
or
sub
push
outsl
mov
inc
xchg
mov
or
hlt
enter
rclb
sub
hlt
pop
adcb
cmpsl
pop
add
pusha
incl
loopne
push
lds
dec
and
mov
pop
and
jg
es
lret
jmp
repz
and
pop
cwtl
adc
adc
push
lock
mov
hlt
dec
sub
aad
inc
outsb
mov
nop
lock
fcoml
ss
push
sub
mov
das
ljmp
jnp
inc
jo
xchg
sbb
cwtl
lret
lods
ss
insb
hlt
daa
xchg
mov
pop
jecxz
or
push
xor
fisubrl
pop
in
or
inc
dec
dec
in
arpl
xchg
push
inc
mov
mov
lods
sub
adc
loopne
xchg
sti
jp
in
fistpll
xchg
ret
and
mov
lods
dec
dec
push
inc
in
xorb
push
dec
sbb
fildll
sub
lret
xchg
pop
pop
pop
add
fcomip
jns
mov
adc
cs
jbe
or
cmp
sti
and
xchg
subl
call
inc
lea
inc
jle
push
lcall
lea
xor
mov
outsl
xchg
cmpsl
inc
xchg
or
int3
dec
lock
pop
inc
nop
push
mov
lods
leave
xor
std
pop
es
arpl
or
shll
sub
test
orb
inc
add
add
sub
mov
test
mov
pop
out
in
loop
fmuls
dec
jl
or
mov
push
sub
jb
inc
add
adc
xchg
mov
out
lds
lcall
or
sbb
lods
lods
stos
jge
sbbl
sub
adc
aas
add
mov
sub
inc
push
cmp
leave
lea
out
pop
sbb
or
inc
pop
push
xchg
lcall
and
pop
loopne
inc
out
inc
pop
out
or
sub
sbb
adc
pop
loopne
cld
sbb
cmp
mov
data16
call
mov
outsb
ljmp
push
push
and
inc
sub
imul
std
sub
aad
add
jle
or
cmpsb
and
bound
ret
rolb
es
lcall
inc
jnp
push
outsb
hlt
insl
mov
sbb
nop
jbe
push
shll
xor
mov
scas
mov
adc
xchg
and
fdivrs
fdiv
mov
sti
and
push
push
cmc
ret
sbb
jnp
call
movsl
outsl
sbb
ds
xchg
add
lret
pop
and
lods
jecxz
sbb
add
jl
cmp
in
fldenv
lret
stos
inc
lock
insl
cld
inc
dec
xchg
cmp
xchg
add
fwait
or
sti
outsl
cmp
fisttpl
push
jno
push
sub
lea
pop
sbb
inc
inc
inc
outsb
rdtsc
sbb
pop
call
test
add
push
mov
add
mov
testb
bound
push
push
add
dec
cltd
cmpsl
cmp
sti
add
jb
cmp
repnz
push
mov
inc
mov
sub
adc
mov
xchg
int3
mov
mov
mov
mov
add
stos
sub
lods
push
fidivs
lcall
bound
gs
xlat
add
sbb
xchg
xchg
orb
add
cltd
mov
xor
mov
jae
or
jne
jg
or
sbb
xor
popl
outsl
or
cmp
bnd
mov
hlt
in
jbe
sub
jo
repnz
and
sbb
outsl
fmull
arpl
dec
mov
inc
subb
pop
lods
sbb
xchg
aaa
mov
inc
jbe
xor
mov
imul
fldt
add
test
das
xor
mov
sub
push
mov
mov
mov
cmp
sbb
jae
mov
or
cmp
inc
or
adc
insl
or
mov
mov
add
pusha
jmp
gs
mov
sbb
cmc
rcr
sub
fstps
rcl
xchg
orl
sbb
das
dec
hlt
outsb
sub
mov
mov
xchg
or
push
push
sbb
or
jbe
mov
and
aaa
sahf
add
xchg
int3
daa
or
mov
roll
xchg
rol
pushf
mov
push
pop
shlb
xchg
popa
and
mov
pop
fcoms
ds
sub
loopne
inc
push
sbb
pminub
mov
popf
cld
cmp
insl
jnp
jmp
fistpl
clc
xor
mov
sub
popa
jg
pop
pop
add
fwait
xor
ret
addr16
jmp
pop
insl
mov
mov
cmp
lods
cmc
sbb
pop
loop
jno
leave
insl
and
ljmp
je
int
adc
or
jb
xor
adc
push
mov
push
xchg
js
clc
mov
pop
shrb
iret
push
sub
add
xchg
mulb
mov
mov
in
jo
movsl
inc
cs
dec
loope
mov
ret
dec
dec
mov
movsb
mov
xor
xor
stos
mov
les
dec
sbb
or
fmuls
cmp
jecxz
bound
lods
lods
add
dec
mov
inc
and
js
imull
sbb
imul
pop
xchg
or
fsub
pop
rcrb
mov
mov
inc
shlb
imul
inc
addr16
cs
jbe
or
faddl
dec
int3
lcall
inc
enter
jle
pop
icebp
lods
pop
or
sub
in
mov
push
icebp
mulb
mov
adc
mov
cs
data16
pop
lahf
mov
outsb
inc
mov
mov
add
inc
fidivrl
and
and
pop
lret
outsl
fstpl
cld
bound
lret
mov
mov
or
pop
test
test
jbe
js
call
subl
jne
lea
out
cs
sar
push
push
cmc
lret
inc
das
icebp
push
faddl
inc
pop
mov
dec
rcrl
arpl
pop
mov
test
rolb
call
stc
rcll
pop
sbb
in
lods
lods
movsl
pop
pop
loop
and
addr16
jae
and
lds
pop
cmp
jmp
and
dec
addl
lret
test
inc
dec
mov
push
mov
or
add
in
push
in
imul
cmp
push
pop
scas
test
imul
stc
sbb
sahf
aam
fldl
decb
xchg
fucomip
push
punpckhdq
or
insl
xor
adc
pop
cmp
das
or
pop
enter
das
cld
jns
mov
popf
mov
fisttpl
lods
sub
in
pop
mov
or
mov
lds
add
mov
call
clc
aam
dec
icebp
shlb
add
and
outsb
mov
sbb
inc
int
rcl
push
int3
mov
lock
roll
out
dec
sbb
mov
outsl
sub
cmp
push
ret
inc
mov
adc
mov
sbb
roll
rclb
inc
test
inc
dec
pop
mov
xor
mov
aas
test
and
or
or
sub
jmp
mov
and
pop
and
dec
or
and
dec
sub
test
pop
and
jbe
mov
icebp
push
out
or
cs
das
adc
mov
movsb
loope
add
or
shrb
or
aas
hlt
lock
and
push
ljmp
push
xor
into
dec
add
jo
movsl
or
cli
xor
or
insb
insl
imul
cmpsb
or
sbb
js
inc
fisubl
ljmp
push
imul
movsb
add
cmp
mov
sub
mov
jg
call
hlt
push
jbe
and
push
mov
dec
jns
cmp
pusha
sub
inc
jmp
add
sub
aaa
lds
mov
cmpsl
adcb
rolb
and
mov
add
scas
nop
subb
subb
out
addr16
pop
icebp
lcall
and
mov
inc
sbb
adc
pop
sbb
sub
imul
push
add
sub
fldt
stos
ficompl
outsb
pop
mov
mov
and
not
push
outsb
loope
data16
inc
mov
js
dec
jns
loope
sub
sbb
inc
jns
aas
mov
xor
dec
arpl
les
lock
test
je
std
insl
outsb
inc
andl
repnz
sub
test
push
lea
mov
push
xor
sub
inc
xchg
xorl
jns
decl
and
cld
jbe
and
dec
mov
fadds
add
testb
mov
sbb
mov
xor
enter
lea
nop
rolb
ljmp
xchg
push
cltd
mov
mov
jnp
sti
lea
xor
or
xor
push
inc
movsb
xchg
or
loop
or
and
scas
push
jne
popf
push
xchg
mov
mov
rcrl
out
and
xchg
cmp
dec
push
subb
pop
xchg
std
aaa
bound
out
dec
lret
shll
cs
pop
lss
shrl
xchg
ljmp
add
das
inc
call
sbb
mov
push
dec
fwait
inc
fsubrl
add
mov
aaa
mov
and
lcall
sti
pop
xor
or
add
xor
dec
push
inc
push
dec
xchg
repnz
adc
mov
inc
stos
xchg
sti
mov
push
sub
fdivrl
sub
cld
lea
dec
adc
jo
or
add
std
or
in
jle
mov
es
inc
xor
ljmp
adc
mov
pop
andl
dec
movsb
loop
mov
fldt
xor
fisubl
stc
stc
add
addl
xor
divb
xor
push
cmp
add
cmpsb
jmp
xchg
push
xor
sbb
dec
mov
adc
xor
ja
adc
aam
sbb
test
rcrb
xchg
mov
leave
fcoml
xchg
push
pop
into
cli
push
or
movsl
mov
and
cli
mov
pop
xchg
add
cs
pop
call
dec
lods
pop
lret
sub
or
fiadds
int
mov
xchg
mov
pop
outsb
outsl
or
xor
test
and
cmp
into
inc
inc
movsb
shrb
push
sub
lods
insb
add
mov
jbe
mov
outsb
lods
xlat
insl
mov
sarl
insb
xchg
shl
push
sub
add
sub
add
test
jnp
out
clc
ret
mov
ss
sub
fcomps
mov
add
jp
popa
push
cltd
aad
clc
test
sub
or
and
cltd
pop
or
shlb
popa
fisttpl
or
call
jg
cltd
loop
or
leave
or
in
lea
mov
test
out
mov
rorb
es
leave
cwtl
int
fisttps
pop
test
adc
fs
push
lods
andl
and
or
sbb
les
mov
fstpl
add
jo
inc
fldt
in
gs
push
call
push
repz
in
loopne
test
js
mov
jne
sub
test
mov
enter
lock
pop
repz
pop
xchg
cld
aaa
cs
cld
out
ss
stos
or
bound
dec
lahf
mov
outsl
sbb
dec
or
inc
xor
jbe
xchg
les
out
iret
jnp
add
ret
lods
call
das
insb
mov
mov
xchg
shlb
add
and
pop
aaa
xor
outsb
aad
das
int
insl
imul
or
xchg
mov
loopne
mov
pop
andb
and
insl
shll
je
mov
push
push
inc
sub
mov
jb
pop
xchg
hlt
outsl
in
add
cmpsl
clc
hlt
add
mov
addl
push
push
ret
or
insl
mov
and
scas
enter
mov
mov
jb
inc
add
shl
jge
or
mov
cltd
or
dec
es
pop
pop
jecxz
les
adc
pop
mov
jle
dec
stos
out
jmp
outsl
insl
xor
adcb
push
dec
cmp
add
ret
mov
std
aas
mov
shll
pop
dec
lds
dec
sbb
or
sbb
cmp
mov
lods
dec
insl
pop
in
sub
add
into
pop
lahf
daa
fdivr
dec
lds
xor
enter
ja
xor
insl
mov
lahf
and
call
fmuls
hlt
jl
and
push
mov
mov
adc
push
bound
cmp
lret
push
and
pop
mov
insl
mov
lods
ljmp
dec
movsb
xchg
add
push
inc
fisubrl
add
push
jnp
fists
pop
jl
cwtl
and
jo
nop
test
dec
jecxz
mov
adc
mov
inc
mov
adc
shr
push
aam
or
es
in
outsb
or
push
lahf
inc
sub
popf
sub
adc
mov
mov
or
xchg
cli
lods
and
mov
movsb
mov
pop
sqrtps
pop
or
sbb
cmp
sub
test
xor
mov
movsl
pop
and
in
or
rorl
subb
push
lds
mov
mov
mov
mov
xor
mov
loopne
mov
lcall
pop
mov
inc
adc
sbb
cmp
mov
insl
cli
mov
fdivrs
lods
mov
sti
arpl
pop
or
mov
jecxz
sub
jg
test
add
insl
loope
clc
sub
mov
adc
rcrl
ds
flds
enter
sarb
pop
out
mov
add
fildll
xchg
sub
mov
xchg
jge
outsl
mov
and
popf
xor
push
scas
imul
or
jle
inc
fwait
xchg
or
push
testl
nop
test
sbbb
dec
pop
pop
clc
pushl
jmp
enter
or
push
cmp
aaa
mov
test
aaa
jle
sbb
enter
sbbb
sbbl
cmp
mov
or
inc
daa
pop
imul
pusha
xchg
xchg
jp
lods
xchg
sub
jno
sbb
push
xor
jge
mov
addr16
fwait
stos
shll
mov
and
mov
bound
jp
or
subb
sbb
mov
cli
fwait
xchg
mov
mov
pop
or
mov
fcomp
je
mov
adc
mov
xor
divl
jg
push
and
lds
insl
and
ja
or
sbb
xor
stos
cmpsb
and
call
cs
pop
mov
inc
dec
cli
inc
out
mov
sub
xor
pop
inc
shrb
dec
hlt
sbb
mov
add
push
add
sbb
shlb
and
xchg
inc
jo
pop
push
jmp
cli
dec
jl
rorb
xchg
lods
xchg
jnp
icebp
push
fsubrs
int3
leave
mov
xchg
pop
cwtl
pusha
sbb
ret
je
shrb
das
sahf
std
jo
sub
xchg
gs
xchg
jge
push
xor
dec
pop
cmpsb
adcb
test
sbb
mov
dec
push
enter
pop
test
stos
pop
ljmp
daa
pop
lods
and
dec
fisttpl
mov
pop
fcmovu
imul
shlb
dec
notl
mov
xor
push
fwait
jns
neg
sbbb
xor
xor
pop
pop
push
cs
pop
lods
jle
gs
inc
adc
jmp
or
dec
popa
inc
xchg
movsl
dec
in
sbb
ds
testb
mov
and
loopne
in
and
andb
or
js
popa
ja
or
sbb
jg
sub
or
mov
cmpl
ror
xor
xor
out
pop
sub
and
mov
pop
push
int3
or
adc
mov
add
sbb
push
mov
sbbl
and
aam
daa
inc
rcrb
sbb
xor
lds
push
dec
adc
mov
loope
and
sbb
mov
sbb
das
faddl
jle
sub
and
add
leave
cs
ret
add
test
inc
mov
scas
mov
jecxz
adc
sbb
jb
pop
cli
mov
and
stc
add
jecxz
or
lea
popa
jecxz
inc
fstpl
push
push
sub
aad
cli
rorl
jle
lods
and
pushl
cmp
push
orb
add
loop
xchg
push
test
xchg
xchg
dec
cmc
xchg
xchg
cmp
adc
adc
stos
sbb
xorb
pop
mov
add
in
fldl
push
mov
add
dec
mov
or
addl
push
lret
dec
fmul
rcrl
lods
mov
mov
repz
pop
dec
mov
stos
sub
adc
mov
dec
test
push
cs
pushl
dec
loope
push
and
sub
xor
ror
pusha
mov
mov
sub
enter
push
mov
pop
jmp
sbb
daa
mov
push
xchg
scas
mov
aad
inc
mov
stc
jge
or
pop
hlt
lea
inc
lret
movsb
inc
mov
mov
lcall
xchg
std
dec
les
cltd
sbb
ret
scas
mov
roll
cmpsb
fdivrs
lods
int
nop
xchg
mov
xchg
clc
push
add
push
xchg
outsl
adc
pop
cli
dec
push
jne
cli
es
xorl
push
pop
fistl
mov
jge
rolb
ja
sbb
hlt
call
and
mov
gs
outsl
aam
insb
jnp
lcall
dec
sbb
sub
call
lods
shrb
sbb
pusha
loope
sbb
or
jno
dec
jmp
adc
push
xor
lods
dec
or
bound
fisubl
sub
dec
ror
sahf
repnz
clc
or
cltd
mov
lods
jg
ljmp
or
movsl
insb
xchg
or
pop
mov
stos
test
cmc
jae
xchg
int
mov
movsl
mov
push
mov
add
xchg
adc
dec
dec
xchg
daa
fbstp
insb
in
lahf
insb
adc
inc
add
mov
out
lods
scas
test
sbb
jns
lock
insb
adc
mov
jge
mov
stc
mov
mov
and
lret
dec
outsb
pop
loopne
orl
sub
sbb
in
jnp
dec
cmpsb
xchg
imull
xor
pushf
in
stos
pusha
add
push
push
cwtl
popa
push
add
jns
or
lock
fnstenv
roll
fdivrp
pop
rolb
jp
scas
in
icebp
mulb
out
mov
push
sarb
popa
stos
pop
fstl
cmp
mov
jmp
cmp
shrb
mov
imul
popf
in
loopne
das
mov
jb
mov
and
pop
pop
inc
movsb
push
xor
cmp
pop
lret
sahf
xor
pinsrw
jo
add
add
or
in
mov
insl
hlt
jno
inc
std
mov
add
jge
test
sub
sbb
and
dec
addl
das
rcl
push
mov
insl
mov
fwait
in
cli
inc
pop
cmp
sbb
push
rorl
inc
ljmp
add
cmp
push
sahf
jno
sarb
imul
shll
add
cltd
mov
lds
aam
loopne
pop
leave
jae
xchg
scas
sbb
sbb
adc
or
mov
decl
dec
xor
mov
sahf
push
aad
inc
dec
lock
dec
shlb
xchg
addr16
or
lock
adc
pop
pop
fdivs
shl
and
test
lods
shrl
test
in
stos
xchg
outsl
xchg
into
cli
xor
icebp
inc
add
xchg
or
loope
mov
jl
je
xchg
mov
cmpsl
mov
shll
dec
cmc
sbb
movb
out
out
or
push
imul
sbb
shrb
rcrl
dec
adc
xchg
popf
xchg
movsl
clc
inc
push
and
add
push
jnp
xchg
or
movsl
add
and
lods
adc
push
sarb
pusha
dec
cmp
inc
sbb
or
jae
dec
out
out
pop
clc
ja
orl
xor
bound
cmc
mov
push
push
inc
and
jb
inc
shrl
sub
cs
out
bound
xacquire
lods
mov
xor
bound
lock
jo
sbb
cld
pop
pop
or
repz
imul
jmp
or
adc
insb
popl
roll
sbb
sub
cmc
adc
xor
xchg
popa
mov
mov
addb
mov
adc
nop
add
add
rcll
mov
push
fsubrp
mov
idivl
shl
bound
pop
mov
aas
xchg
adc
subb
dec
mov
and
dec
insb
inc
or
mov
xor
jecxz,pn
incl
xor
xchg
arpl
jmp
into
ret
fmull
xor
lds
add
scas
jmp
pop
or
fstpl
push
push
push
clc
jbe
test
sub
xor
addl
lods
daa
stos
mov
sti
inc
fstpt
cli
leave
xor
pop
int
push
outsb
mov
cmovb
mov
push
jl
adc
insl
pop
js
pop
or
adc
shll
insb
cs
sub
jmp
fnstenv
cltd
stos
das
dec
aaa
dec
inc
adc
fimull
cwtl
loop
icebp
inc
push
add
fcomps
inc
jp
inc
xor
outsb
jle
cld
arpl
movb
dec
xor
or
jb
mov
dec
dec
mov
ljmp
aaa
dec
cmp
inc
sbb
sbb
push
and
aad
ret
jae,pt
cmp
add
sub
and
sub
mov
jne
jo
mov
jmp
sbbl
fdivl
push
js
xor
js
wrmsr
rclb
test
pop
popa
mov
ret
ljmp
xor
xor
add
popf
mov
lods
lret
adc
pop
mov
lods
cmp
ret
mov
adc
cmpsb
mov
aas
mov
or
mov
jl
jg
cmp
fsubrs
ja
pop
adc
ss
and
dec
jne
and
aad
stos
stos
mov
les
push
mov
cmc
and
int3
and
hlt
push
and
and
sub
lahf
sbbb
dec
push
add
aam
int
notb
movl
or
mov
xchg
mov
lock
into
push
push
rcll
push
cmp
sbb
vcvtpd2dq
push
xchg
sub
cli
out
cmp
or
arpl
loopne
loopne
mov
or
push
pushf
std
inc
jnp
sub
insl
pop
stos
mov
pusha
mov
enter
inc
test
test
bound
xor
or
orl
sti
push
cmpb
in
mov
fs
sbb
mov
shlb
push
push
rclb
out
mov
and
lds
pop
fisubl
pop
jle
cmp
int
inc
fisubs
test
mov
sub
into
mov
inc
fsubr
push
pop
push
call
in
iret
jle
xchg
sub
arpl
insl
mov
mov
xchg
pop
mov
loopne
push
sbb
movsb
test
movb
leave
jbe
fisttps
shl
scas
or
sub
lahf
dec
les
jae
incb
inc
jecxz
add
mov
pop
lock
dec
inc
sbb
or
mov
cmp
push
add
push
xchg
sub
dec
cmpsl
inc
add
dec
ret
pop
sub
aaa
es
mov
test
cmpsb
outsl
pop
mov
adc
popf
mov
push
push
inc
aas
mov
jmp
cmp
add
arpl
pop
aam
test
pop
das
sub
imul
inc
pop
jnp
stos
lret
or
mov
mov
dec
test
fcomip
inc
pushf
subb
pop
push
xorl
arpl
xor
outsb
sub
daa
std
leave
mov
les
mov
fidivs
cmp
dec
leave
stos
jo
movsb
jo
push
jnp
popa
imul
gs
shrl
xlat
cmc
mov
fwait
xchg
sub
sti
lods
push
ret
pop
push
dec
adcl
cld
mov
imul
jae
mov
inc
xor
dec
adcl
hlt
add
mov
fs
jge
je
cli
scas
pop
xor
clc
mov
push
repnz
outsl
fdivr
mulb
jl
pop
xor
cwtl
push
sbb
aas
or
fstl
inc
mov
mov
sub
sub
push
sarl
ret
jp
in
roll
into
pop
and
sbb
mov
sub
adc
jbe
sbb
es
jb
and
hlt
std
pop
mov
xchg
out
iret
shrb
dec
inc
mov
dec
in
xchg
xor
ret
fnstcw
lcall
mov
push
sti
cmp
test
dec
fildl
xchg
jge
lcall
adc
lods
push
sbb
or
push
sub
add
add
mov
rcl
stos
push
xchg
cld
sarb
shll
icebp
aaa
arpl
lea
inc
jp
cs
rcll
jae
push
or
je
lods
ljmp
mov
mov
gs
mov
pop
adc
adc
push
mov
pusha
cmp
test
xlat
or
iret
andl
xchg
add
inc
push
mulb
pusha
pop
dec
pop
xchg
sbb
xor
sub
jg
cmp
mov
pop
push
jmp
mov
jl
jnp
lock
xchg
jecxz
inc
jno
mov
mov
cli
dec
cmp
mov
mov
ss
inc
mov
das
jg
jb
dec
sub
stc
arpl
jb
and
lods
orl
push
mov
xchg
inc
insl
add
push
mov
xchg
es
das
or
icebp
dec
xor
or
das
inc
test
sub
roll
xchg
rolb
aad
shll
cld
mov
mov
popf
test
cwtl
lods
in
pop
clc
xor
xlat
adc
hlt
hlt
inc
add
lret
xchg
fisubrl
into
mov
pop
push
ret
rclb
sub
mov
loope
mov
push
mov
xchg
and
add
insb
daa
lds
jg
test
cmp
outsb
sbb
out
sub
repz
mov
xor
dec
and
push
pushf
push
cmpsb
sub
lret
jns
xchg
loop
jo
pop
push
outsl
xchg
inc
cltd
cli
cmpl
add
in
mov
lods
incl
fs
pop
jae
das
enter
dec
mov
pop
push
incb
dec
pop
push
mov
inc
or
mov
dec
pop
repz
add
dec
andl
push
ret
int3
mov
add
adc
and
mov
adc
popa
sub
xchg
addr16
push
pop
lahf
xor
es
mov
dec
inc
aaa
stos
xchg
and
sbb
or
mov
xchg
mov
mov
inc
cmp
popf
pop
mov
sbb
mov
dec
out
mov
and
in
jno
push
cmc
rclb
pop
insl
lea
mov
outsb
pop
sti
outsl
fisttpll
repnz
imul
xchg
lods
roll
dec
dec
xchg
pop
pop
loop
lock
xchg
mov
or
stos
adc
lods
and
lea
and
in
pop
adc
in
dec
pop
rcll
dec
int
inc
or
jno
js
or
call
sar
icebp
inc
mov
loopne
fisttpl
sbb
stc
jo
sti
mov
out
data16
dec
sbb
xchg
fnsave
push
xorl
fists
sbb
fcmovnb
or
jle
shr
push
stos
mov
jo
stc
fadds
insl
loopne
mull
orb
xchg
outsb
fcmovnb
cli
dec
stos
sub
mov
push
das
push
repnz
std
shll
pop
push
sahf
push
dec
pop
je
in
call
sbb
fsubr
sub
or
inc
xlat
stos
mov
or
inc
pusha
imul
xchg
subb
cwtl
pop
in
das
mov
into
sbb
jge
fistpl
inc
imul
sub
out
aaa
xor
mov
lret
dec
mov
adcl
push
or
ss
adc
lea
adc
rep
dec
jo
and
out
orb
insl
adc
insl
and
add
cmp
and
mov
in
rol
gs
jae
test
push
mov
test
pop
lret
adc
mov
mov
dec
fldz
les
icebp
shll
or
push
aaa
sbb
and
xchg
scas
mov
sub
pop
inc
arpl
aad
repz
not
lock
in
lock
pop
movl
shll
cli
push
lea
sub
add
stos
pop
pop
fstpt
cmp
fstpl
jo
inc
push
dec
sub
add
jb
push
mov
add
cld
icebp
inc
pop
lea
mov
or
notl
test
aaa
sbb
fidivrl
es
jno
ret
test
test
lods
mov
mov
stc
adc
or
cmpsl
jle
pop
in
rcrb
pop
jae
sub
leave
sti
push
pop
pop
mov
add
ljmp
push
sbb
test
insb
jl
or
push
add
inc
add
lahf
adc
inc
lea
insl
adc
clc
test
xchg
scas
mov
fsubrs
pop
loop
arpl
xchg
test
jg
cmp
rep
ror
push
adc
dec
jb
jg
arpl
jb
sbb
andl
push
test
push
cld
xor
das
popl
mov
pop
cmp
sbb
inc
xchg
fmuls
aad
jne
add
fdivrs
mov
loope
repnz
in
ret
call
cmp
mov
dec
xchg
xchg
mov
mov
outsb
jge
dec
mov
into
push
mov
cmpsb
ds
push
enter
jmp
test
pusha
push
insb
sbb
push
sub
scas
fdivr
add
cld
pusha
xor
push
pop
bswap
xchg
cwtl
sbbl
rol
insb
aaa
fldt
mov
push
call
pop
mov
test
daa
aad
mov
add
into
pop
adc
fmuls
or
movsl
and
sahf
sbb
pushl
adc
scas
je
and
mov
xchg
pop
fidivrl
sbb
sub
adc
cs
aas
negb
inc
push
add
add
add
sub
daa
insl
jge
push
sahf
jle
pop
cltd
inc
push
arpl
push
lods
jo
mov
and
mov
addb
push
cmp
or
test
mov
mov
js
fs
sbb
movb
out
push
andl
shr
mov
hlt
sarl
mov
imul
andb
cmpsl
mov
push
pop
pushf
cmp
sub
mov
test
and
in
mov
or
sbb
sub
mov
pop
lds
cmpsl
push
jg
gs
mov
sbb
and
xchg
sbb
inc
movsl
gs
add
jb
xchg
inc
shrl
cmp
mov
mov
mov
cli
enter
cltd
addr16
inc
into
sub
aad
ss
cld
push
pop
adc
push
clc
das
push
pusha
movzwl
data16
dec
xlat
call
fisttpl
pop
les
imul
mov
dec
add
sub
mov
mov
rol
aaa
dec
pop
cli
lods
xor
icebp
mov
mov
daa
sbb
add
xchg
jp
aaa
push
mov
cmpsb
mov
sub
movsl
push
sub
dec
cwtl
cli
shrb
mov
cli
dec
or
gs
pop
add
je
dec
sbb
xor
adc
rclb
roll
call
sbb
xor
xchg
ss
mov
mov
int
pusha
cld
add
aam
mov
movsl
mov
mov
mov
adc
cli
push
mov
mov
lret
out
clc
and
and
pop
push
sahf
cmpsl
sbb
add
jbe
jbe
arpl
cmp
xchg
push
outsb
or
out
fcmovne
inc
jp
inc
shl
push
push
sti
jle
ljmp
outsl
inc
inc
and
hlt
mov
add
jbe
sti
inc
adc
mov
push
call
mov
lock
sbb
xchg
add
inc
test
mov
add
mov
imul
dec
call
fldl
jl
fldt
push
dec
mov
sub
inc
pop
mov
xchg
sar
adc
outsb
jno
add
mov
aad
adc
ret
out
ret
subl
dec
cli
int
ss
fucomp
pop
not
stos
xchg
jno
outsl
mov
cmpsb
mov
sub
shrl
jb
mov
movsl
roll
dec
or
test
negb
push
sub
lds
mov
in
popa
in
and
sbb
jo
daa
inc
mov
adcl
stos
loop
das
insb
cmp
ficompl
xor
jns
jl
test
mov
or
and
jo
sbb
aaa
cli
sub
push
push
in
mov
adc
rcl
xor
lgs
icebp
cvttps2pi
aam
stc
add
add
add
xchg
jns
pop
in
cld
sbb
test
aas
std
in
adcb
jo
rcl
daa
outsb
popf
or
xchg
jge
push
pop
fiadds
inc
dec
sub
inc
popf
jp
fnsave
sbb
imull
lea
popa
fstps
cmp
mov
jmp
rolb
sbbb
push
mov
adc
mov
loope
pop
push
mov
lods
jno
sub
lahf
jno
lea
sbb
ret
fistl
dec
clc
push
aam
stos
xorl
inc
in
jns
mov
mov
pop
sbb
lret
in
lret
aaa
add
mov
outsl
xchg
aam
loopne
push
push
jl
imul
xchg
add
mov
test
fcmovnbe
cli
cmp
pop
cmp
ret
add
xchg
xor
arpl
cld
out
push
pop
push
mov
lock
sti
inc
fcomi
jae
cs
and
hlt
aaa
outsl
cmp
jnp
clc
pop
shll
cmc
dec
sahf
push
test
mov
inc
in
mov
mov
jno
mov
sbb
movsb
cmp
xlat
popa
dec
stos
cmpsl
pop
ss
loop
or
btr
addl
push
dec
loopne
adc
into
hlt
inc
pop
xor
aad
in
jecxz
pop
adc
lods
push
frstor
mov
lret
aam
push
mov
mov
arpl
push
aad
push
hlt
rcrb
sbb
movsl
scas
push
xor
mov
jbe
sbbb
or
mov
stos
xorb
inc
sub
pop
outsb
out
push
bound
addb
mov
sub
test
neg
fisubrl
cld
xor
test
cmc
push
sub
shlb
mov
insb
push
pop
cwtl
jge
cwtl
push
sub
pop
loopne
adc
pop
push
xor
jno
jo
shrl
ds
call
push
ljmp
mov
icebp
int3
push
dec
icebp
test
pop
popf
dec
xchg
mov
fisubl
js
adc
scas
js
xchg
popa
sbb
lds
mov
fbld
into
mov
adc
fcompl
mov
pop
lock
pop
sub
dec
movzwl
pop
xor
fsubs
sbb
nop
mov
mov
push
pop
shrb
idivl
push
loop
adc
in
addb
push
inc
jns
jge
ret
insl
mov
ret
adc
mov
mov
dec
lahf
pop
loop
inc
cmp
in
mov
aad
cmpsl
jp
cli
push
mov
andb
orl
dec
call
clc
mov
mov
out
fsubrl
dec
cwtl
gs
pop
cli
and
push
outsb
jno
in
push
pop
pop
xor
xor
add
mov
aam
mov
and
push
cltd
js
sbb
jle
jae
fists
xor
inc
and
test
inc
lcall
adc
push
pop
xchg
repnz
insl
cli
sub
jg
stos
mov
aad
jo
stos
sbb
out
insb
add
jmp
adc
adc
mov
pop
jo
int3
mov
pop
sbb
test
iret
imul
and
pop
xor
dec
cmpsb
add
mov
icebp
push
cwtl
in
push
push
pop
addr16
js
adc
mov
jbe
jae
xor
or
fstpt
sub
stc
sbb
mov
loopne
fiadds
xchg
sbb
or
jg
fildll
ret
daa
mov
xchg
popf
nop
fldcw
dec
cmpsl
jmp
add
outsb
rcll
add
push
mov
stos
fnstsw
aam
push
std
cmp
rorl
and
cmp
es
in
cmpl
or
adc
inc
imul
into
cmp
adc
scas
shll
push
outsb
test
testl
add
xor
mov
dec
pop
je
pop
fdivr
stc
add
inc
call
mov
imul
lds
mov
popf
xchg
or
sbb
inc
dec
jp
sbb
jmp
jl
add
lret
hlt
push
rol
push
insb
ffreep
inc
mov
jae
enter
aad
push
fucomi
sub
mov
hlt
xor
mov
xchg
add
lret
xchg
xchg
es
sbb
in
jecxz
hlt
jge
or
mov
fdivr
leave
and
daa
lods
adc
scas
shll
sub
cmpsl
cmp
dec
fs
lret
jbe
add
sahf
aad
pop
push
leave
xchg
ja
loope
pop
push
movsb
in
adc
adc
iret
test
in
dec
and
addb
push
sbb
cmp
pop
inc
jmp
inc
adc
pusha
nop
testb
pop
outsb
inc
xor
inc
jns
mov
pusha
flds
push
pop
push
mov
xchg
xchg
mov
mov
jecxz
inc
stc
fmuls
repnz
ret
mov
pop
je
enter
hlt
xchg
inc
mov
mov
scas
and
mov
mov
mov
outsl
sub
mov
sarb
negl
inc
push
adc
in
pop
aaa
xchg
xorl
jl
mov
mov
sbb
outsb
xchg
pop
ret
ja
or
ds
inc
imul
cmp
inc
cmp
inc
aad
imulb
xchg
mov
sbbb
cli
dec
dec
lcall
push
sti
sub
mov
sub
aaa
mov
nop
dec
adc
loop
mov
ds
shll
sbb
mov
or
rcr
lcall
popf
es
pop
pop
test
outsb
cmp
aas
dec
and
inc
or
cli
jmp
xchg
dec
xor
arpl
stc
mov
adc
mov
outsl
push
mov
test
adc
lea
lock
aam
std
out
push
mov
fincstp
aad
push
xor
sbb
outsl
and
inc
repnz
push
testb
cmp
in
pusha
sub
pop
jecxz
xchg
popf
mov
jnp
inc
mov
push
hlt
push
mov
test
push
aam
and
push
sub
inc
cmc
pop
stos
and
leave
jp
lock
push
jle
mov
popa
xlat
mov
add
je
mov
xor
add
dec
inc
sbb
popf
xchg
ljmp
mov
test
lock
dec
pop
add
mov
jns
fidivrs
rorb
rcl
lock
js
xchg
fwait
inc
sub
jle
jp
mov
arpl
and
hlt
das
icebp
dec
xchg
mov
xor
and
hlt
call
xchg
inc
test
fs
xchg
or
inc
inc
shlb
cmp
popa
cmp
mov
adc
jmp
cmp
and
lret
xor
repnz
mov
ret
dec
xor
cmp
and
ljmp
xor
std
dec
xchg
cmc
frstor
loopne
imul
xchg
xor
sub
inc
pusha
aaa
xlat
jle
aas
testl
inc
mov
pushf
mov
mov
pushf
jmp
aas
shl
iret
mov
outsl
jge
dec
sub
xchg
lcall
jp
pop
cmpsb
and
xchg
jnp
lret
xor
std
aas
and
test
cwtl
dec
cmp
mov
lret
int
mov
adc
sahf
mov
les
pop
addr16
fildl
mov
popf
daa
mov
jae
loopne
negb
adcb
negb
mov
add
dec
xchg
and
xor
outsl
jb
mov
adc
push
das
or
loop
aam
insb
stos
cmp
xchg
or
pop
cmp
sbb
xchg
loopne
and
mov
gs
add
push
imull
lea
mov
push
in
add
ret
or
cmpsb
test
xlat
push
das
or
add
mov
loope
push
mov
and
imul
mov
shrl
jo
sbb
insl
or
mov
sbb
inc
mov
mov
inc
decb
mov
xchg
lcall
pop
mov
mov
mov
mov
and
rcrb
loopne
das
fidivl
and
mov
inc
test
adc
aaa
pop
lods
mov
test
jne
insl
stos
data16
mov
sbb
movl
sub
js
sbb
cli
adc
mov
arpl
out
jo
jmp
call
icebp
je
cmp
jecxz
pop
mov
inc
cmp
outsb
in
dec
ss
sbb
pop
xchg
jle
std
mov
mov
or
mov
mov
or
xchg
and
pop
adc
loop
cmp
pop
data16
sub
pop
ret
mov
jg
pop
push
in
clc
imul
xor
repnz
jg
int3
cs
push
and
mov
test
cmp
add
jne
push
imul
roll
not
scas
mov
sbb
sub
push
sarb
add
movsb
pop
sbb
pop
adc
sub
fsubs
arpl
sbb
or
adc
jl
mov
add
cwtl
or
andl
mov
jnp
pop
les
les
adc
push
jo
pop
movsl
and
stos
stc
inc
adc
mov
and
xor
dec
insl
popa
mov
sbb
dec
inc
xchg
adc
insl
or
xchg
sub
mov
inc
xor
xchg
or
scas
inc
imul
lds
cmp
jg
inc
and
test
in
sbb
ret
adc
mov
data16
sar
pop
push
and
data16
cmp
leave
mov
gs
fisubrs
pop
cli
test
lret
push
xor
push
filds
lock
les
inc
loope
lahf
sub
fsubrs
call
shlb
add
ds
test
lcall
aam
mov
lods
ud1
dec
dec
fists
out
cmpsl
cmp
mov
repz
add
mov
in
out
js
push
lcall
cmc
adc
jg
insb
fnstenv
cmc
push
loop
push
jmp
orl
in
jl
adc
shl
adc
fidivl
test
inc
mov
cltd
push
in
inc
mov
mov
rorl
std
fwait
cmp
mov
inc
inc
addr16
insl
mov
mov
clc
adc
inc
aas
sti
popa
imul
scas
test
jl
xchg
out
adc
mov
inc
add
and
mov
sbb
loopne
lcall
dec
jecxz
leave
rorl
in
std
sub
loop
adcl
mov
dec
cli
shr
pop
jo
adc
insl
arpl
shrl
add
sub
iret
arpl
add
jno
or
xor
cmpsl
ret
jg
ret
pop
pop
push
inc
mov
adc
pop
cli
push
fdivl
lds
push
dec
inc
sbb
cmp
xchg
fstl
ficompl
sti
push
shlb
das
push
test
in
mov
cltd
xchg
jp
aad
rolb
js
lcall
rorb
leave
and
pop
insb
lahf
mov
pop
push
push
je
sbb
adc
xchg
adc
adc
in
xchg
in
push
imull
and
jmp
xor
pop
cld
mov
and
push
push
lahf
movmskps
xchg
push
pop
xor
or
inc
xor
popf
addr16
cmp
cld
push
xor
ror
xchg
and
lods
mov
mov
adc
in
arpl
jle
add
xor
push
sub
jmp
xor
mov
leave
aam
inc
pop
add
jmp
mov
pop
test
xchg
push
sub
jmp
push
std
outsb
xchg
mov
fildl
pusha
or
sbb
or
mov
ds
dec
add
jmp
mov
push
lods
pusha
mov
notl
xchg
rcrb
aad
inc
incb
push
pop
inc
movsl
pop
es
jecxz
xchg
pusha
mov
bound
loope
push
and
or
and
mov
daa
fbld
movsl
sbb
in
jne
adcb
mov
jb
pop
adc
adc
push
icebp
mov
push
leave
push
jo
add
inc
arpl
xchg
add
push
mov
sub
lea
cwtl
outsb
leave
lock
outsl
inc
test
dec
shr
add
test
mov
push
mov
jg
add
fstl
sbb
add
insl
sub
rorl
mov
add
incb
es
stos
incb
xor
arpl
cmp
inc
std
int
aas
mov
push
dec
sbb
rorl
push
jne
int
movsl
cs
and
and
lret
mov
mov
in
dec
push
sub
inc
popf
xchg
fldcw
ret
fdivr
inc
ljmp
dec
aad
mov
push
push
pop
pop
sbb
jecxz
xor
and
stos
push
mov
or
and
xchg
mov
fbld
fsts
pop
inc
pop
lret
ret
push
pop
jmp
ret
decb
insb
outsl
sub
jmp
js
or
add
pop
add
clc
pop
ret
and
or
shll
inc
and
ja
mov
inc
lret
sbb
loop
icebp
mov
jp
stos
mov
lret
xor
test
sbb
sahf
addr16
shlb
pushf
adcl
idivb
pop
fcompl
mov
jne
loopne
fistps
inc
push
xchg
les
sahf
rorb
mov
jns
andl
pop
dec
add
adc
push
sbb
movsl
loopne
data16
push
and
mov
sarb
insl
popa
mov
and
lods
and
subb
jmp
ljmp
lret
sbb
jg
out
or
add
inc
and
cli
pop
movsl
jbe
cmp
lret
mov
mov
push
inc
movsl
clc
push
add
pop
pop
sahf
imul
mov
or
mov
andb
mov
pop
xchg
sub
or
mov
inc
jns
push
mov
jns
jl
fdivrs
jmp
mov
stos
add
lcall
addr16
rorl
imul
fisttps
imul
add
shlb
cmp
mov
sbb
sarl
shrl
out
push
mov
fmuls
lods
push
and
push
pop
mov
outsl
sub
jl
fldt
xchg
jl
add
sti
pop
push
mov
sbbb
add
mov
rep
xchg
in
jge
in
and
lock
inc
cmp
xchg
mov
mov
lock
push
movsb
clc
jnp
fisttpll
dec
push
rclb
mov
xchg
lret
add
mov
xlat
sar
jmp
inc
in
lea
js
mov
xorl
fcmove
shrb
fs
push
adc
rcrl
xchg
dec
mov
lahf
adc
dec
es
movsb
das
mov
test
or
std
mov
mov
movl
mov
and
xchg
cmpsl
sbb
movsb
mov
aam
mov
cmc
and
pinsrw
pop
adc
mov
sbb
dec
push
pop
lret
sahf
lds
in
stos
arpl
cmp
pop
mov
rcll
aam
call
jmp
xlat
aad
jg
js
dec
scas
pop
xor
clc
sarb
divb
clc
in
call
inc
pop
cli
jle
cli
pusha
inc
mov
adc
or
sbb
push
pop
popa
mov
pushf
push
rol
fwait
add
lods
pop
cli
inc
and
cltd
loope
and
adc
ficompl
jmp
xor
iret
fstl
add
divl
add
add
and
out
je
lds
imul
insb
test
lods
and
mov
mov
pop
cmp
and
sub
xchg
movsl
and
sbb
aaa
mov
test
daa
ds
aam
lods
mov
inc
sub
arpl
push
jmp
pminub
xchg
adc
imul
fcompl
lock
adc
jge
sbb
sub
clc
xchg
push
subl
mov
or
imul
dec
sub
or
cwtl
push
outsl
cmp
insl
in
leave
repnz
movsl
cs
call
testl
add
jo
add
push
lock
mov
and
mov
cltd
and
aad
into
jne
orl
push
mov
popf
call
loopne,pn
cld
bound
movsl
test
jns
aad
xchg
mov
push
rorb
je
add
xchg
pushf
lock
sbb
int
test
in
push
mov
xchg
adc
leave
pop
jmp
scas
mov
es
insb
and
jl
in
lea
pop
rcr
cmp
addr16
dec
mov
dec
lcall
js
int3
jno
mov
or
jge
pop
mov
mov
jp
scas
dec
inc
xor
sar
cld
mov
fildl
enter
jo
xchg
lea
iret
daa
lods
xchg
test
mov
out
pop
dec
dec
test
ffree
cmp
ret
cmp
js
fisttpll
dec
sub
and
fisttpl
adc
dec
std
icebp
int3
sbb
cmpsl
inc
pop
loope
mov
add
cltd
popa
mov
mov
or
aaa
xchg
jmp
pop
int
lods
mov
fstps
addr16
pop
jo
sbbb
pop
jmp
dec
icebp
aaa
adc
inc
pop
cmp
push
and
inc
jmp
pusha
and
gs
jae
out
popa
mov
xlat
push
inc
pusha
jecxz
jb
fcmove
inc
hlt
addl
xor
popf
out
aam
inc
mov
push
leave
test
xchg
call
sub
add
xchg
loopne
popa
aaa
call
out
fistps
repnz
mov
dec
inc
aas
inc
xor
add
sub
fs
inc
mov
push
out
mov
push
rol
add
fadds
subps
sbb
mov
inc
shll
ret
mov
leave
push
mov
repnz
cmp
xor
test
jns
mov
inc
shrb
bsr
aad
popa
popf
fsubs
mov
push
fisubrl
pusha
rolb
mov
idivb
jae
mov
outsl
mov
mov
mov
mov
xchg
int3
bound
push
add
push
adc
add
cmp
dec
push
pop
push
mov
fstl
dec
aam
rcrb
mov
mov
cs
std
add
daa
leave
sbb
or
negb
mov
mov
scas
in
add
and
cs
js
mov
dec
sbb
pusha
icebp
dec
sarl
das
sub
lea
aaa
cmp
ror
insl
jge
subl
mov
pop
test
mov
dec
jb
imul
shrb
shlb
or
in
jmp
faddl
add
jg
test
pop
push
aas
push
cmp
fdivp
and
xchg
pop
lret
repz
pop
hlt
or
ss
aaa
jae
mov
je
or
jne
jle
jmp
in
sub
test
ret
lea
mov
mov
cmp
mov
push
xchg
loop
inc
hlt
movsb
out
addr16
inc
mov
push
inc
ss
movsl
mulb
cmp
je
sub
cld
lret
dec
rolb
jno
clc
and
push
jae
fldenv
adc
sub
push
xchg
cmp
fisubl
addl
sub
add
jne
mov
mov
cmpsb
or
ficoms
shlb
cli
cwtl
cmp
fyl2x
or
in
fsub
lods
lret
mov
js
and
add
push
xchg
xchg
cs
shll
sub
cmpsl
fisubl
add
or
or
inc
and
sub
and
adc
pop
mov
mov
gs
jo
or
push
jno
pop
dec
mov
outsl
xor
xchg
sub
mov
xchg
adc
loop
stos
adc
mov
iret
push
mov
outsl
mov
mov
shl
adc
xchg
push
iret
jp
jbe
adc
lahf
in
or
add
daa
imull
mov
inc
mov
es
sub
mov
xor
rcll
jbe
imul
cmpb
nop
dec
scas
in
or
call
insb
shrb
cmp
fisttpl
adc
xlat
inc
stc
ss
dec
inc
addr16
xchg
daa
call
int3
mov
xor
or
adc
orb
jecxz
pop
push
dec
sbb
bound
insl
out
lea
in
mov
pop
mov
lds
sbb
or
sbb
jae
fucomp
mov
push
push
mov
lods
fadds
xchg
push
aam
sbb
cld
fcoms
test
xchg
jne
xchg
inc
jp
insl
mov
mov
cwtl
mov
xchg
adc
lahf
std
hlt
sbb
mov
andl
shl
rorb
xlat
fistps
mov
lret
mov
rclb
shrb
adc
xchg
jl
out
in
adcb
xor
imul
daa
push
dec
sbb
and
jmp
jns
shl
es
jg,pn
lds
mov
hlt
aaa
rcll
pop
mov
adc
adc
adc
hlt
mov
pop
adc
loope
test
push
mov
lock
push
mov
push
daa
mov
popa
mov
outsl
pop
cmp
xchg
ss
repz
or
imul
push
add
insl
sti
outsl
mov
stos
lock
sbb
ficomps
dec
loopne
frstor
shlb
ds
or
lds
dec
clc
stos
imul
nop
sarl
call
jb
mov
adc
nop
rcl
scas
xchg
nop
dec
dec
stc
mov
scas
mov
addr16
dec
aad
pop
clc
lds
xchg
or
add
imul
ficompl
push
mov
sub
rolb
xchg
mov
xchg
mov
mov
ret
dec
pusha
and
andb
shr
add
mov
pop
in
cltd
fistl
lret
sahf
mov
mov
jnp
movsl
ss
repnz
ss
push
lcall
mov
aam
mov
cmp
jg
aad
lock
push
fwait
arpl
in
adc
in
mov
sub
repz
insl
add
cmpb
push
ja
mov
or
fistps
das
lds
addl
mov
test
cmpsb
movb
loop
mov
xor
test
adc
insb
lods
icebp
dec
mov
mov
pop
hlt
adc
sub
xchg
and
adc
cli
outsl
aaa
adcb
push
inc
jb
stos
and
cs
cs
ja
adc
cli
sub
pop
or
filds
sub
mov
add
rep
push
lds
and
pushl
repz
jmp
pand
sub
jne
and
inc
loop
push
push
imul
mov
mov
inc
jbe
or
sarb
cmp
mov
dec
xchg
cmp
add
adc
sbb
mov
push
daa
pop
stos
inc
xchg
cmp
dec
cltd
cmpsl
or
insl
sub
leave
jmp
adc
xor
test
jo
jnp
jb
cmp
push
les
gs
in
das
pmaddwd
jb
add
jle
fdivrs
mov
out
xor
sub
mov
xor
fmuls
or
cmp
movsl
in
xor
lahf
xor
xor
push
lcall
popa
movsb
jo
roll
lods
sbb
mov
push
mov
xor
fisttpll
cld
gs
hlt
nop
pop
dec
rcl
xchg
cmc
sbb
push
jno
test
adc
int
ljmp
mov
push
pop
loop
ret
mov
int
cmp
jmp
or
std
adc
jo
mov
xlat
cwtl
adc
dec
and
xchg
or
adc
loope
loop
aam
adc
inc
fstpt
push
mov
inc
or
mov
cld
mov
mov
fisttps
or
mov
insl
add
add
aad
pushf
insl
jmp
icebp
ljmp
adc
adc
xor
std
outsb
int3
outsb
fstpt
adc
push
imul
cmp
lret
loope
es
shlb
cwtl
enter
das
sub
pop
add
xor
or
shl
rcll
rolb
xchg
push
mov
fs
adc
mov
mov
add
pop
shrl
fdivl
inc
push
out
call
mov
ds
mov
cmp
pop
pop
mov
loope
or
dec
pop
cmp
xsha256
cmpsb
aad
mov
sbb
jle
mov
mov
aaa
sub
fstl
imul
fadd
movsl
dec
aam
lea
add
pop
addr16
lcall
bound
nop
loope
push
add
mov
add
add
std
adc
mov
dec
push
nop
scas
dec
icebp
cmc
jbe
pop
popa
loope
subb
lret
scas
push
mov
xchg
xchg
add
or
out
dec
ret
lods
in
pop
in
nop
sbb
and
repnz
jmp
sub
fadd
int3
mov
outsb
dec
jo
andl
movsl
mov
mov
pusha
in
and
aaa
xlat
shlb
xor
and
movsb
jg
nop
test
rorb
mov
jg
inc
adc
insb
ds
cs
pusha
shlb
pop
outsb
pop
fists
jbe
jns
or
lock
mov
adc
loop
inc
fidivrs
mov
rorb
sbb
cmpsb
add
inc
fwait
jns
mov
test
js
sub
fistl
xor
mov
scas
fisubrl
fcomp
lret
push
sbb
sub
js
add
push
popa
in
mov
mov
iret
xchg
stos
out
dec
loope
inc
std
mov
call
sub
inc
cli
push
and
ss
sarl
fwait
cmp
lahf
push
mov
mov
in
pusha
fwait
jle
xchg
in
dec
pushf
jle
insb
mov
mov
pop
fcoml
into
xchg
push
aas
and
fbld
pop
fdiv
and
movsb
aad
mov
pop
rorb
mov
xor
popa
scas
dec
cmp
lret
mov
mov
inc
scas
subl
pop
pushf
pop
ror
sbb
daa
add
loop
mov
inc
adc
jnp
mov
aam
insb
mov
fisubrl
mov
cmpsb
and
push
popa
sub
inc
cli
es
adc
mov
rorb
xchg
xor
ss
sub
mov
xchg
fdivl
xor
push
ljmp
jne
pop
cld
xor
fsubl
lret
inc
pop
rorb
dec
add
movsl
dec
lock
mov
jmp
xchg
xor
xchg
pop
icebp
testl
mov
jo
lret
or
xchg
lea
push
pop
out
fwait
or
mov
pop
stos
and
js
stos
adc
dec
adc
lock
cli
iret
add
mov
mov
ss
rcll
jnp
mov
cmp
cmp
pusha
inc
cmp
imul
inc
cs
dec
rolb
add
mov
mov
mov
inc
leave
cli
inc
scas
in
in
rolb
iret
call
jge
adc
jl
aad
mov
pop
pop
les
insb
adc
or
orb
jg
inc
xor
mov
cmp
add
jmp
mov
mov
ljmp
sarl
pop
xchg
shlb
rcll
mov
sub
call
jp
xchg
push
add
aam
pop
jb
inc
popf
mov
sti
xchg
filds
repz
fstl
leave
inc
add
add
idiv
fs
pop
pop
push
mov
mov
push
mov
xlat
adc
add
test
inc
shlb
mov
mov
in
jo
push
xor
mov
cli
xchg
xor
inc
xchg
mov
mov
push
add
xor
nop
jnp
mov
pop
xor
cmpsl
in
add
clc
and
in
iret
movsl
lods
orb
test
jno
ja
dec
inc
xor
pop
outsl
push
pusha
add
leave
movsb
frstor
iret
mov
pushl
dec
xor
push
aas
stc
std
cs
mov
aaa
and
inc
dec
mov
dec
ljmp
cmp
cmpb
push
pop
push
adc
nop
sub
outsb
push
sbb
lcall
cmp
mov
or
das
adc
or
push
sub
add
insb
dec
mov
mov
or
sahf
jne
iret
push
out
mov
loopne
inc
mov
push
xor
jne
xchg
les
xor
add
fldl
bound
sbb
insb
fistps
sbb
mov
fdiv
jo
daa
adc
fildll
inc
pop
cmp
test
pop
out
outsl
fucomi
mov
hlt
push
inc
mov
inc
cli
jecxz
push
ja
outsl
and
arpl
xchg
push
lcall
push
pop
insl
scas
dec
test
in
int3
cmp
es
inc
and
push
ja
push
sub
add
das
insb
je
test
push
and
lret
inc
fisttpl
out
xchg
clc
lods
or
pop
mov
jno
int
xor
mov
push
out
pop
sbb
icebp
inc
xlat
xlat
mov
clc
popa
dec
ret
push
loopne
clc
js
in
movsl
lods
mov
out
and
movsb
inc
iret
jae
sbbl
test
ljmp
dec
fstsw
or
push
leave
jle
adc
and
insl
sub
and
out
sti
insb
cli
adc
or
add
push
add
sahf
fs
das
orl
mov
loope
pop
dec
push
out
push
insl
jmp
xchg
sbbl
adc
add
insl
xchg
cmc
inc
aas
mulb
aaa
ljmp
loopne
lods
cmc
mov
insl
cmp
clc
repz
or
inc
mov
stc
dec
ds
or
inc
push
lock
or
lret
fs
movsl
stos
mov
lret
mov
or
cwtl
pop
ret
dec
push
jne
mov
mov
icebp
lods
jne
adc
repz
mov
sbb
push
pop
cmc
xchg
dec
dec
adc
jbe
sahf
inc
mov
cmpsl
std
outsb
sbb
popf
scas
fs
pop
adc
cmp
or
dec
fidivl
stos
push
sub
fidivs
jecxz
lods
popa
stos
push
and
imul
mov
cmc
mov
popa
add
jl
jl
inc
jecxz
push
mov
cmp
test
pusha
movsb
or
and
push
roll
orb
adc
test
aas
cmp
dec
subb
pop
mov
sub
lea
xchg
aas
adc
add
bound
int3
sbb
fcmovb
aas
popa
movsb
mov
dec
int
push
mov
lds
xor
into
pop
rclb
inc
add
popa
stc
pop
das
lea
pusha
cmp
xchg
fisubrl
jge
adc
test
jno
push
xchg
sub
iret
movsl
xchg
lret
push
aad
das
mov
test
add
inc
aaa
movb
mov
inc
inc
mov
out
and
pop
dec
push
fistl
mov
es
stos
test
decl
fisttpl
jnp
jns
test
inc
pop
jp
lret
dec
push
adc
adc
dec
insl
cld
aas
mov
push
dec
and
push
dec
ret
mov
dec
xor
lock
push
sbb
add
ds
inc
mov
inc
hlt
rcr
shrl
dec
mov
fcompl
outsb
inc
stos
fidivrl
sbbl
addr16
in
mov
ljmp
pop
loope
gs
push
dec
dec
push
mov
mov
mov
push
push
aad
insb
repnz
gs
add
adcb
shrb
dec
repnz
insl
lea
xor
sbb
sub
cs
arpl
cmpsb
pushf
bound
leave
int3
in
push
mov
mov
jb
and
out
dec
mulb
nop
imul
in
adc
pop
test
xchg
dec
jg
inc
jbe
inc
jg
gs
ret
je
test
fisttpll
add
loope
clc
enter
or
sbb
adc
movsl
adc
cmp
xchg
jl
push
xor
inc
incl
add
outsb
std
adc
inc
push
and
out
int
mov
mov
arpl
popf
pushf
shrl
push
sub
test
adc
jo
lret
pop
push
pop
jge
or
mov
xor
jl
xor
adc
cltd
jecxz
rorl
sub
mov
jp
cmp
in
outsl
andl
sub
xor
lods
sbb
stos
lea
push
mov
dec
or
mov
pushf
imul
jp
stc
lods
mov
sbb
mov
push
mov
insb
shll
cmpsl
scas
add
or
inc
je
stos
push
fidivrs
and
sbb
cltd
popa
scas
and
mov
or
mov
fmuls
pop
sbb
jbe
pop
push
shlb
push
jne
push
hlt
cmp
scas
inc
test
sbb
and
jmp
out
pop
sub
xor
repz
push
in
fcmovnu
push
mov
jmp
frstor
add
push
ljmp
fcomps
push
mov
mov
cs
rol
gs
adc
call
arpl
enter
in
ss
cwtl
out
lds
ror
mov
test
xor
sbb
add
outsb
hlt
push
jb
sub
push
and
cltd
mov
sti
outsl
push
inc
negl
pop
testl
inc
outsl
fildll
dec
inc
adc
lods
jne
xchg
inc
and
xor
iret
fisubl
mov
scas
mov
mov
sub
or
mov
jle
sbb
jle
das
sub
sbb
idivb
sub
mov
mov
push
pop
pop
cltd
stos
mov
sbb
ss
mov
int3
loopne
add
sbb
or
jnp
sti
icebp
ficompl
in
in
add
ja
sub
sbb
jb
rorl
push
and
add
inc
sbb
jbe
jecxz
cmp
lret
leave
fldt
movsl
pop
inc
sub
dec
stos
mov
and
mov
pushl
or
xchg
dec
xchg
pop
add
mov
jae
sub
xor
rorl
xor
xchg
jg
scas
and
xchg
scas
ljmp
test
fwait
xchg
test
jnp
or
push
lcall
push
sbb
xchg
ret
inc
pop
loopne
mov
add
shrl
adc
jbe
push
mov
bound
mov
mov
stc
loope
mov
imul
push
mov
mov
addr16
movsl
fcmovu
add
cmpsb
jne
push
incb
cld
mov
sbb
xor
adc
pop
add
add
or
mov
dec
cmp
adcl
in
sub
mov
inc
or
pop
mov
xor
inc
mov
call
xchg
enter
inc
xchg
mov
movsb
sbb
push
mov
cli
or
popa
lret
mov
sub
fists
fisttpl
mov
inc
aaa
testl
in
xchg
loop
sub
enter
divb
icebp
dec
mov
sbb
xor
aad
pop
rorb
rorb
dec
jb
cmp
adc
cmp
add
mov
into
hlt
and
sar
add
loop
dec
data16
xor
mov
and
mov
je
aad
jne
jle
sub
popf
sub
sbb
push
jl
add
add
cmp
adc
push
lcall
adc
rcl
or
outsb
pushf
fstl
cmp
roll
mov
ljmp
js
push
jecxz
mov
enter
cli
mov
push
loope
cmp
mov
ja
je
sub
push
imul
xor
mov
jle
xchg
jae
cmp
ret
addb
jp
sub
mov
bound
enter
mov
or
sub
xchg
movsl
cmp
xchg
jg
fucomi
sbb
rcrb
mov
pop
add
loop
jmp
test
xorl
dec
insb
sbb
je
cmovo
in
jnp
push
xchg
xorb
pop
and
iret
out
cwtl
mov
ds
rcll
push
mov
xchg
or
xchg
push
pushf
inc
in
pop
jbe
push
mov
subl
fisttps
in
popa
jnp
sub
in
mov
iret
sub
xchg
pop
fcomi
outsb
clc
mov
in
rolb
adc
dec
pop
add
xchg
mov
add
cs
imul
mov
int
or
andb
iret
pop
cwtl
rol
add
sbb
mov
adc
imul
repnz
cmc
pop
adc
sub
push
decb
fcmovnbe
lahf
sbb
test
dec
xor
fstl
aad
enter
fildll
arpl
popa
rcll
fnsave
out
cmp
loop
hlt
inc
movzwl
mull
cmp
jp
mov
lret
mov
push
scas
fimull
push
push
mov
sub
xor
adc
xlat
and
or
push
les
mov
pop
pop
insb
mov
insl
sub
xchg
fdivs
sbb
ficoms
jo
lea
mov
add
inc
cs
cs
push
mov
in
test
insb
xor
fisubrl
cli
rcl
mov
mov
dec
dec
sub
jns
push
mov
push
mov
xchg
imul
add
xor
les
mov
in
adc
mov
jmp
dec
iret
add
outsb
xchg
mov
add
push
inc
xchg
ljmp
dec
jb
test
and
dec
add
fmul
fidivs
or
in
sbb
mov
mov
dec
cmp
les
inc
sbbl
fisubrs
outsl
adc
adc
pusha
sti
fists
cmpsl
ret
call
insl
pushf
mov
das
sub
lock
shl
cmpsb
rcrb
out
add
lahf
cld
dec
aam
mov
mov
pushf
mov
push
cmpsb
in
inc
loop
adc
mov
xor
and
cmp
std
sbb
cmpl
sahf
fwait
adc
enter
into
mov
movsb
scas
jne
icebp
or
mov
push
shl
lods
pop
scas
orl
jmp
and
into
pop
mov
les
pop
js
loope
cs
jl
test
dec
sub
or
mov
dec
jae
inc
dec
mov
lea
subl
repnz
inc
fidivrl
cmp
adc
rcrb
mov
jle
lds
adcl
dec
push
stos
inc
insb
hlt
push
ljmp
xor
jns
imul
sub
popl
cmc
push
mov
pusha
hlt
aam
loop
stos
nop
mov
mov
cmp
adc
clc
aam
or
sbb
shlb
fadds
aad
cs
insl
pushf
add
and
sbb
call
jbe
popa
cmp
pop
sub
fs
and
or
insb
inc
pop
mov
addb
jbe
loope
pop
pop
cmp
out
aas
lods
loope
rolb
shrl
lcall
icebp
rcll
mov
adc
fdivs
push
das
dec
test
mov
mov
jbe
imul
jl
xchg
sbb
xchg
sbb
int3
dec
test
inc
cmpsl
push
in
adc
mov
jne
xorl
xor
add
xchg
adc
aam
cmp
mov
mov
in
call
sbb
add
and
fcos
fistps
xchg
fmuls
add
and
and
xchg
sbb
pop
rorb
xchg
insb
or
testb
adc
mov
fstl
addl
pop
clc
fcmovbe
jne
adc
ja
push
adcb
add
testl
adc
aad
outsb
jbe
aaa
ret
xchg
or
mov
cmp
push
mulb
dec
ret
add
rorb
or
mov
xorl
inc
loopne
pop
hlt
mov
lret
mov
dec
in
pop
dec
pop
add
dec
push
js
outsb
pop
push
dec
ja
fs
adc
sarb
stos
fildl
lret
out
loopne
sahf
loop
fcmovnbe
fidivrs
scas
fnstsw
leave
jns
xor
adc
dec
std
in
fisubs
lock
shrl
out
cmp
mov
adc
lods
mov
xchg
loopne
add
mov
push
icebp
lret
pop
scas
aas
push
sbbb
lret
jecxz
jno
jno
stc
fyl2x
fsubrl
xor
pmulhuw
decl
adc
add
fidivrs
jecxz
mov
insb
xor
fidivrl
loope
iret
push
je
movsl
sti
test
aas
push
xchg
mov
pop
inc
cmp
mov
nop
in
pop
inc
lret
cmpl
pop
push
test
stos
nop
cmp
lock
js
movl
lods
mov
mov
mov
mov
insl
mov
ljmp
jnp
mov
lods
decl
inc
dec
pop
cmc
mov
inc
jle
sub
out
jmp
sbb
repz
loop
xor
push
push
fists
bound
sub
arpl
add
jecxz
aaa
decb
add
loop
cmp
mov
xor
outsl
fidivl
shrl
cmp
std
mov
xorl
mov
jecxz
mov
int3
jmp
insl
stc
negl
mov
jmp
sbb
dec
pusha
add
cmpb
sarl
pop
sub
xor
nop
fimull
in
pop
dec
jne
fidivrs
xor
jnp
inc
icebp
aad
inc
xchg
sub
inc
scas
aaa
mov
icebp
lds
loope
mov
mov
xor
mov
es
aas
pusha
fistpll
roll
cmp
incb
mov
movsl
sbb
and
arpl
inc
sbb
loop
popa
xlat
clc
fbstp
push
pushf
test
aam
fs
fdivl
ficoml
jmp
push
mov
mov
mov
add
lds
xchg
push
sub
movsl
mov
sahf
push
jmp
cmp
push
ljmp
insl
mov
ss
sbb
cmc
test
iret
es
inc
movhps
and
sub
orb
sub
pop
xor
xor
inc
or
pop
lods
cld
adc
shlb
or
sahf
lods
hlt
mov
gs
mov
push
mov
pop
sbb
adc
and
out
mov
lret
or
mov
pop
dec
ret
sar
repnz
push
stc
inc
cmp
and
pop
lcall
cltd
mov
jno
push
and
sbb
xchg
add
add
insl
xchg
in
mov
insl
loope
inc
xor
sbb
insl
fistl
icebp
jnp
mov
js
add
arpl
sbb
shll
imul
mov
je
inc
sub
jno
sbb
mov
inc
jle
pop
rcl
inc
movl
inc
cmpsl
filds
stc
cmp
hlt
outsl
mov
xchg
xchg
push
mov
scas
lea
sub
mov
or
and
notl
mov
in
or
add
clc
add
sub
cmc
call
out
push
or
push
mov
imul
repnz
and
jge
mov
ret
adc
rol
int
cmp
cmp
popa
mov
inc
push
fbld
or
mov
add
adc
pop
in
mov
pop
addr16
sahf
hlt
mov
cli
jmp
mov
add
enter
into
mov
aam
je
dec
push
data16
fisubrl
out
cmp
jl
mov
add
test
cli
mov
mov
repz
scas
adc
xorb
sub
ja
inc
mov
fcompl
mov
loop
mov
push
les
std
mov
mov
cli
loopne
xchg
sub
addr16
leave
idivl
push
aas
clc
out
repnz
stos
repz
in
test
aad
push
dec
adc
pop
xchg
lret
mov
or
sub
loope
pop
cmp
clc
popa
imul
jae
cmpsb
test
jg
mov
lods
dec
test
stos
dec
lret
aam
jle
inc
dec
mov
xor
push
xchg
clc
call
or
push
testl
cmpsb
lock
into
into
add
int3
test
loop
lret
xchg
ss
scas
enter
shlb
cs
dec
push
and
or
adcb
push
inc
cmp
push
dec
aaa
pop
xchg
outsl
rol
xchg
sbb
mov
dec
jnp
loop
andb
cmp
and
dec
push
pop
shlb
adc
jmp
loope
mov
push
lcall
loop
inc
arpl
fsubrs
fbstp
mov
inc
or
dec
test
imull
fwait
ja
dec
mov
leave
sub
add
jecxz
loop
cmpsl
cmp
jecxz
push
popf
sbb
sub
in
jle
adcl
ljmp
roll
sub
insb
push
sub
jo
in
cmp
inc
arpl
rorb
cmp
adc
mov
cmp
popa
jno
daa
or
cmc
jmp
inc
mov
sub
scas
xor
jns
lods
adc
lahf
add
mov
xor
dec
mov
pop
or
push
fadds
mov
ret
mov
pop
mov
fwait
mov
lea
lock
adc
or
sbb
pop
dec
dec
push
jno
sti
js
leave
sub
sahf
sub
sbb
stos
push
mov
incl
dec
cld
cmp
outsl
ror
repz
mov
fsubr
daa
jle
jl
dec
sarl
inc
xchg
loopne
shrl
sub
dec
fisubrl
adc
lods
add
rol
sbbb
add
pop
scas
enter
sbb
jecxz
mov
xchg
and
adc
lret
andb
adc
fildl
gs
cmc
dec
push
scas
es
dec
dec
push
xor
jmp
fdivrp
les
outsl
add
out
dec
xchg
sbb
stos
pop
lcall
mov
aas
ss
scas
push
sti
push
test
imulb
rolb
add
cmp
arpl
rcl
xorl
pop
cli
sub
mov
mov
arpl
movsl
xchg
push
or
outsl
in
inc
out
orb
lods
and
dec
jnp
inc
shlb
sbb
jns
std
or
add
cmpsb
data16
sub
inc
int3
jbe
cmpsl
enter
sub
std
mov
aad
and
mov
mov
ds
sbb
stos
mov
fdivrs
daa
repnz
mov
and
mov
outsb
pop
aad
outsb
addb
outsl
push
insb
or
dec
cmp
xor
xor
mov
mov
sub
adc
aas
hlt
gs
mov
push
dec
add
rclb
stos
in
push
and
inc
call
cmpb
test
mov
mov
lods
sahf
dec
fistpl
pushf
movb
sub
ret
rcll
pushf
lea
add
jg
leavew
mov
cmp
jmp
sub
shrb
fwait
loop
adc
and
sbbl
pusha
pop
shlb
or
cwtl
add
lret
mov
jl
jno
adc
je
fstpl
sahf
loopne
mov
xor
out
dec
push
push
ret
addl
loop
stos
adcl
sbb
insl
movsb
dec
stos
xchg
adc
inc
outsl
std
loop
js
call
mov
lds
push
push
shlb
push
andb
sbb
add
dec
in
sub
and
orl
push
pop
lock
loop
insl
jecxz
je
js
mov
adc
pop
sub
xor
and
mov
dec
adc
mov
xor
aas
mov
stos
mov
inc
lds
pop
idivb
in
add
inc
sbb
mov
sub
in
push
xor
iret
pop
adc
cld
test
sub
add
mov
test
insl
add
pushf
inc
push
fdivs
xchg
out
enter
mov
xchg
fstps
jmp
lods
stos
pop
or
mov
aam
sbbb
mov
es
jno
push
test
sti
repz
lret
mov
add
das
test
cmpb
test
pop
dec
clc
inc
xor
mov
mov
pop
add
fwait
sbb
cs
mov
adc
cmc
cmp
test
call
lock
push
lock
add
outsl
aaa
lcall
mov
fstpt
mov
push
ds
ljmp
insl
insl
gs
xchg
push
mov
popa
mov
push
fidivrs
aad
mov
xor
pop
inc
ds
aam
dec
sub
mov
jbe
std
ret
push
dec
adc
jne
fs
shrb
and
ja
push
mov
dec
push
in
adcb
sarb
mov
xor
aaa
rorl
pop
sbb
cmovnp
push
ljmp
je
push
dec
mov
and
lea
xor
out
sbb
adc
add
xor
inc
mov
inc
add
cmp
xchg
pushf
jne
push
xorb
mov
ret
push
fdivl
scas
bound
xchg
add
sub
adc
das
or
dec
pusha
enter
xchg
leave
ljmp
rclb
std
push
pop
movsl
aas
or
jns
cmp
int
mov
push
imull
add
rorb
xchg
dec
lods
fcmovu
push
xchg
mov
icebp
rolb
inc
jecxz
push
sub
and
pop
dec
fcmovnu
jb
pushf
xor
inc
stos
popf
jmp
mov
mov
jns
cmp
adc
sub
aas
xor
xchg
jge
out
or
mov
std
das
push
xchg
push
mov
push
and
mov
inc
rcr
sbb
add
jge
cld
outsl
in
test
mov
fwait
push
ficompl
repnz
mov
xchg
out
arpl
fisttps
jecxz
fcompl
mov
inc
stos
or
shlb
fsubrp
insl
cmpsl
scas
mov
push
mov
mov
adc
test
insb
cld
out
fnstcw
push
lahf
push
mov
je
bound
test
mov
test
clc
pop
push
scas
out
push
test
call
push
jne
outsb
jbe
sub
lcall
insb
mov
add
sbbb
dec
jnp
loopne
in
xchg
mov
add
mov
inc
xor
cltd
pop
addr16
push
inc
mov
push
ret
mov
mov
data16
push
shlb
stos
push
fldl
pop
clc
xor
mov
aas
rcl
pusha
clc
mov
xorl
push
xchg
mov
and
adc
cmp
sub
mov
cmp
cs
jl
dec
jae
sbb
js
mov
aas
and
cmp
dec
sar
and
or
adc
cmc
push
imul
pop
rolb
cmpsl
lock
stc
int3
pop
lds
push
bound
jns
inc
dec
xchg
mov
inc
in
sbb
lcall
mov
pop
pushf
dec
loope
in
jbe
je
js
push
rorb
adc
sarb
add
mov
paddw
inc
daa
es
add
pop
sbb
orl
nop
fwait
aam
js
add
ret
dec
test
jmp
lock
in
insl
jmp
fistpll
cli
cmpsl
add
pop
jle
xor
adc
pop
mov
test
icebp
adc
adc
xchg
clc
test
adc
arpl
jp
jmp
mov
add
xor
sar
inc
mov
add
mov
ret
pop
mov
stos
js
push
iret
xor
pop
gs
ss
jno
add
cmp
pop
insl
mov
jp
pop
call
jmp
pop
enter
and
outsb
sub
je
jne
fwait
sar
aad
into
lret
fs
cmp
fimuls
push
xchg
shrl
pop
push
testl
xchg
arpl
clc
shll
xor
mov
jno
lcall
inc
imul
push
pop
aaa
stc
dec
push
sbb
sbb
filds
aad
add
lods
push
mov
loope
mov
out
push
pusha
dec
mov
dec
popa
mov
or
lods
adc
xchg
mov
xor
insl
mov
jo
or
mov
popa
or
adc
inc
cmp
xchg
pop
aam
addb
clc
enter
ficoml
xchg
insb
xor
push
sbb
push
mov
xor
xchg
data16
mov
outsl
sub
lahf
sub
movsl
jmp
add
xor
sbb
shll
dec
test
dec
pop
fisttpl
fimuls
pusha
aad
loop
mov
cmpsb
xor
dec
adcl
or
aad
pusha
repz
rcll
in
outsl
mov
mov
loopne
iret
call
and
ret
jg
bound
pop
cmc
xor
dec
sbb
add
cmp
orl
scas
icebp
and
ss
xchg
mov
and
mov
inc
add
sub
pop
scas
dec
aam
cld
lods
add
sbb
shrl
xchg
push
outsb
pop
mov
aad
mov
fs
leave
movsl
int3
xor
xlat
jo
cwtl
adc
popa
mov
lret
adc
jb
dec
test
nop
out
mov
inc
dec
sub
xor
ror
cwtl
es
dec
fistl
test
movsl
stos
mov
mov
sti
push
in
bound
sub
setne
aam
sbb
aam
mov
mov
dec
jne
aad
xor
adc
outsl
jae
lods
dec
inc
dec
jbe
push
cld
lea
xchg
test
jno
iret
scas
xor
sbb
or
test
shlb
scas
shr
rcrb
mov
inc
or
dec
sti
push
es
push
cs
sbb
rorl
push
add
cwtl
pop
dec
add
xchg
lea
add
xor
lock
daa
fcoml
jbe
insl
mov
clc
xchg
pop
fwait
sbb
movsb
stc
xor
fwait
push
or
push
lea
or
aam
idivl
pop
je
ss
je
jb
xchg
nop
and
lcall
incl
dec
mov
adc
adc
mov
xchg
jmp
int3
lods
testl
shl
sub
nop
or
mov
iretw
sub
cwtl
add
push
jmp
or
push
ror
pop
cmp
mov
mov
stc
pop
pop
das
push
js
adc
sbb
nop
xor
push
andl
and
pop
sub
jle
jl
insl
imul
outsb
pop
sub
push
in
outsl
mull
comiss
gs
sbb
test
subl
jno
push
fwait
or
adc
aas
cmc
das
jl
test
or
adc
rcr
cmp
mov
arpl
outsl
and
insb
adc
mov
sub
fstpt
adc
adc
xor
enter
pop
fisubrl
or
rcll
out
xor
cli
out
icebp
lret
loop
rorb
jge
ret
pcmpeqd
dec
out
xchg
in
and
pop
mov
cmp
rclb
mov
cld
cli
inc
mov
mov
xor
or
ret
das
jb
push
jecxz
add
jge
popa
mov
or
in
sbb
shrl
movsl
push
lcall
dec
lret
or
adc
daa
jno
jg
inc
cmp
ljmp
push
sbbl
add
and
fs
and
pop
xchg
sub
jns
cld
and
or
nop
test
inc
repnz
mov
js
imul
xor
cmp
jg
or
cmp
fdivs
mov
loopne
xchg
cwtl
aas
jo
fcompl
dec
cwtl
inc
out
add
bound
test
or
outsb
daa
sbbb
lea
mov
mov
jo
rorb
imul
xchg
repnz
rorl
jmp
loope
stos
out
xlat
ss
inc
add
mov
pop
jl
mov
push
sub
jbe
in
cmpsb
enter
pop
orb
xchg
cltd
outsb
inc
mov
movsl
mov
mov
js
push
inc
adc
sub
or
in
sbb
jno
mov
gs
pop
cli
lds
and
sub
or
js
stc
cmp
rcll
stos
test
out
loope
sbb
das
das
sbb
push
pop
incb
xor
cmc
into
inc
mov
mov
mov
sahf
xchg
and
lret
and
and
loope
test
pop
and
std
push
aas
fistl
push
adc
mov
sub
rcll
hlt
sahf
mov
sbb
adc
push
flds
pusha
test
je
in
inc
sub
fsubs
ss
or
pop
add
add
test
sbb
gs
fiadds
lret
fcmovne
outsb
jno
inc
or
aam
jge
adc
fs
push
pop
and
pop
push
loopne
jno
sub
adc
cwtl
mov
pop
push
pop
jo
mov
jg
lret
imul
sub
loope
mov
ret
ds
push
ja
sbbl
mov
cmp
xchg
mov
dec
es
lods
push
mov
mov
jecxz
mov
fdivs
jo
rorl
enter
cmc
hlt
addb
mov
cltd
fisttpll
int
les
insl
fnstcw
shlb
jae
dec
jne
xchg
inc
divb
pop
jmp
popa
insb
sub
jne
inc
mov
fisubrl
mov
and
bound
aad
rol
add
add
mov
in
bound
xor
scas
int3
add
fldl
inc
sub
arpl
inc
mov
loop
jecxz
out
jne
xlat
popa
scas
mov
xorl
jnp
mov
in
mov
lea
xlat
orb
mulb
inc
sub
xlat
dec
jns
nop
test
sarb
push
daa
adcb
fisubrl
popa
pusha
lsl
xchg
add
mov
hlt
sti
aad
mov
int3
pushf
sub
and
adc
js
mov
mov
cmp
push
mov
loop
dec
or
je
mov
inc
iret
insl
adc
es
out
sub
xchg
mov
int3
pop
lock
and
add
pusha
stos
mov
cmp
adc
out
mov
cmp
jns
fcmovnu
addr16
pushf
in
test
mov
adcb
mov
pop
jne
stos
das
loop
mov
sub
out
dec
xlat
aaa
ret
jg
mov
xor
insl
push
push
inc
and
out
insl
push
add
dec
subl
fisubl
xor
inc
add
xchg
popa
cltd
call
xchg
mov
and
sti
sub
dec
je
addr16
or
add
sti
add
add
fildl
add
outsl
mov
rorl
pop
sbb
dec
push
mov
dec
outsl
or
bound
mov
cmpsl
mov
sbb
andl
mov
pop
fstps
mov
lods
dec
xlat
jno
pop
cmpsl
mov
movsl
cli
pop
jb
mov
in
test
adc
or
test
sahf
mov
ss
shll
push
ret
mov
andl
add
adc
nop
xchg
mov
jle
and
and
das
push
add
loopne
mov
dec
inc
jge
mov
jb
pop
movsl
das
dec
cmp
jmp
inc
addb
pop
jae
jno
fsqrt
rclb
jecxz
xchg
sub
cmp
adc
sub
mov
xchg
sbb
imul
in
and
data16
stos
or
jne
jecxz
loopne
pop
push
gs
mov
jge
mov
inc
fldl
push
incl
push
push
and
mov
sbb
sbb
fbstp
inc
cmp
je
scas
icebp
lods
mov
icebp
xor
xchg
xchg
and
loop
outsl
out
pop
shlb
aas
jmp
cld
inc
lret
dec
scas
jmp
xchg
dec
jnp
in
dec
aam
mov
loop
inc
rolb
fwait
bound
ja
test
xchg
mov
mov
and
add
jne
pop
push
jno
dec
aaa
pop
scas
pop
mov
or
sbb
movsl
xor
faddl
xchg
pop
fcoml
cs
je
jb
or
jle
pusha
add
daa
push
out
mov
lods
outsl
and
xlat
pop
jl
addr16
adc
mov
jae
ffreep
gs
cltd
dec
push
aad
adc
in
mov
dec
mov
sub
cmc
pop
cltd
push
mov
ja
ret
in
outsb
jbe
pusha
lock
sbb
lds
sahf
mov
std
mov
xchg
test
insl
inc
push
and
sbb
jg
jns
lcall
in
movsl
lret
jmp
sbb
add
daa
mov
or
sbb
jmp
cmp
rol
dec
bound
testl
ds
stc
push
adc
shll
cmp
cltd
sub
outsb
pop
scas
in
aam
push
pop
mov
jle
adc
lods
daa
outsl
cmp
add
popf
inc
out
mov
push
xor
mov
sbb
jnp
mov
subl
mov
and
add
movsl
shr
lock
fisttpl
pop
repnz
cmc
cmp
faddl
popa
push
inc
push
cld
mov
fcmovu
jle
sub
xchg
pusha
inc
pushf
test
mov
loopne
and
xchg
push
pop
les
push
popf
jo
push
sub
push
test
pop
push
scas
pop
mov
push
xchg
stos
icebp
push
jne,pt
sti
cld
pop
daa
add
or
popf
test
mov
xchg
mov
and
and
push
fisttpl
sbb
stos
push
rcll
dec
orb
pop
and
mov
outsb
adc
pop
mov
shrl
adc
sbb
mov
sub
jmp
test
imul
lea
es
jl
push
push
ds
jge
sub
mov
jno
fistps
outsl
rorb
lods
sub
mov
jbe
je,pt
jno
sbb
mov
add
xchg
test
pop
adc
out
shll
or
idivb
xor
icebp
ja
test
jb
pusha
test
cmp
inc
pushf
fbld
xchg
mov
push
clc
adc
std
adc
rol
cmpl
lret
mov
and
andl
cmp
pop
popa
and
ret
sbb
and
in
jno
ficomps
push
lahf
aam
pop
jns
cmc
int3
cwtl
inc
in
pop
mov
dec
fs
rorb
imul
jp
ss
ljmp
enter
jmp
lret
movsl
mov
adc
add
pop
and
hlt
sbb
ljmp
adc
imul
pop
movsl
mov
adc
inc
jmp
inc
int3
rol
test
pop
pop
pop
daa
push
gs
sub
sbb
test
inc
mov
mov
push
fldl
or
inc
shll
imul
les
mov
aam
pop
mov
xor
movsb
dec
and
inc
insl
mov
sbb
bound
les
mov
jle
push
inc
push
hlt
test
mov
mov
push
imul
push
push
jp
mov
adc
out
mov
mov
pop
test
push
dec
ret
fistpll
inc
mov
int
inc
sub
popa
sbb
cltd
arpl
mov
pop
in
and
insl
sub
adc
inc
push
movsl
mov
mov
adc
xchg
mov
negl
cld
jp
loope
lock
out
jnp
mov
push
aad
pop
movb
fidivrs
push
inc
cmp
and
lret
adc
cwtl
xchg
andl
test
inc
mov
mov
inc
dec
fnstcw
fistps
dec
and
cmp
fcompl
int3
and
mov
pop
aad
std
mov
or
jo
push
xchg
and
stos
or
pop
mov
notb
or
les
or
lods
lea
rcll
loope
mov
sub
test
imul
test
movb
push
push
xchg
inc
xchg
nop
jge
adc
jo
push
push
sub
adcl
out
mov
cmp
xchg
add
in
xor
sbb
pop
fwait
movsl
aaa
adc
ljmp
xor
shl
lret
test
pop
xor
mov
loopne
cli
adc
aas
in
xchg
push
rol
sub
and
int3
add
lea
call
gs
add
outsl
mov
sbb
loop
scas
fcomps
mov
rcl
daa
test
shl
and
mov
outsl
mov
popf
or
add
cli
dec
lods
ret
jge
sub
push
sub
dec
iret
xor
mov
mov
addr16
jg
mov
mov
or
xor
mov
push
in
in
adc
xor
or
pop
ret
into
jmp
push
lock
xor
or
pop
add
lds
add
push
insl
mov
test
mov
push
push
xchg
ss
jle
loope
jecxz
loopne
jb
mov
test
test
push
push
adc
aas
ds
inc
xchg
adc
pop
xor
pop
jp
or
sub
loop
mov
test
or
mov
inc
xchg
loop
insl
out
inc
mov
loopne
xchg
insl
jecxz
xor
aas
push
pop
test
test
lea
outsb
lods
ficompl
adc
scas
adc
pop
mov
incl
or
jecxz
popa
repnz
into
xchg
mov
repz
rolb
or
pop
imul
std
popa
mov
iret
xchg
and
push
stos
sbb
mov
decl
pop
loop
push
push
adc
xlat
icebp
and
das
jo
xchg
cmp
push
cmp
test
mov
dec
test
xor
or
rcrb
jnp
dec
mov
mov
cpuid
mov
push
push
mov
add
inc
shl
jae
rcl
adc
pop
pop
push
ljmp
push
jne
cwtl
and
push
or
leave
pushf
xor
mov
ljmp
jp
cs
lods
popa
mov
sub
sbb
lock
jmp
add
outsb
pop
icebp
orb
and
call
or
push
jno
adc
out
rolb
mov
mov
add
outsb
cmpsb
inc
es
sbb
test
data16
or
fadds
cli
stos
mov
push
jp
dec
push
or
ror
into
ds
and
adc
mov
cmc
xchg
movb
add
inc
mov
and
aam
test
pusha
call
jle
xchg
adc
repz
jmp
sbbl
das
subl
arpl
pop
adc
dec
outsl
mov
sub
test
fists
push
mov
pop
pushf
sbb
fwait
cmpsb
andb
push
add
mov
nop
outsl
jo
aaa
notl
sub
cmp
adc
shrb
incb
rcrl
xor
inc
mov
inc
cmpsl
mov
fdivl
jmp
sub
adc
int
inc
sti
outsl
test
mov
lret
dec
xchg
stos
lods
mov
inc
pop
pop
ret
xchg
push
or
add
add
ljmp
out
fs
jp
loop
push
lds
repnz
adc
insl
mov
bound
mov
hlt
inc
notrack
jns
dec
lods
out
inc
insb
movsb
and
xor
mov
or
push
or
in
pop
adc
addr16
mov
mov
clc
or
fs
mov
mov
in
cmp
adc
inc
fbld
mov
out
xchg
dec
rorb
inc
test
std
outsl
in
loop
mov
xor
lods
xor
sub
pop
enter
movsl
movsl
mov
cmp
or
mov
fs
jp
jns
imul
add
add
xchg
jg
mov
outsl
insb
stc
mov
sbb
inc
add
lods
push
mov
es
pop
cmpl
fstpl
adc
mov
lahf
ret
inc
push
cmp
lods
aaa
cmp
mov
rcrb
mov
inc
test
or
fidivs
add
rorl
mov
fisubl
cli
shlb
mov
dec
push
mov
mov
adc
addl
add
sub
add
push
and
inc
inc
outsl
in
stos
repz
cmpsl
lods
inc
lret
popa
loope
dec
sub
jle
dec
sbb
mov
push
xlat
cmp
push
inc
dec
mov
mov
push
imul
and
lcall
lock
ret
ret
and
sub
add
incb
mov
insl
inc
stc
cld
sub
mov
lds
mov
jecxz
rolb
add
lcall
insb
cmpsb
icebp
mov
jno
stos
inc
sbb
mov
inc
mov
jp
add
sub
and
add
test
pop
fimull
mov
xchg
adc
ljmp
mov
mov
push
or
dec
cs
jp
add
lea
mov
lcall
std
call
xor
cli
jbe
and
add
push
pop
lcall
test
cwtl
nop
sbb
cmp
gs
pop
dec
mov
cli
pop
xchg
or
xor
jmp
sarb
addps
arpl
xlat
sub
out
adcl
clc
xchg
jg
test
lock
push
ret
xor
jnp
int
xorb
loop
in
push
jae
pop
push
xchg
cs
aaa
leave
dec
jae
jge
sub
dec
pop
xchg
pop
lahf
fimull
shrl
cmp
icebp
mov
sub
cs
loopne
jg
faddl
imul
mov
jle
mov
subb
clc
das
sbb
xor
jmp
sahf
mov
adc
je
pusha
pop
je
outsl
aaa
out
or
jae
dec
push
sarb
and
inc
mov
fistl
mov
incl
cld
xchg
loop
out
rcll
add
into
int3
sbb
pop
pop
lds
test
sbb
xor
push
pushf
rcrb
movsl
aas
aam
int3
or
lock
xor
xchg
das
cmp
insl
xor
adc
mov
arpl
sub
dec
jno
xor
push
outsb
addr16
push
les
popa
aam
mov
sti
ja
iret
subl
xor
das
add
in
mov
mov
insb
dec
out
out
cmp
cmp
test
jg
das
icebp
ljmp
or
repnz
cli
or
xchg
adc
mov
jb
mov
push
pop
shr
and
adc
movzwl
scas
push
gs
push
enter
shll
lcall
jge
jge
lret
cmp
inc
cmc
outsl
cwtl
dec
and
cmp
imul
or
sub
rolb
mov
fists
cmp
jne
add
push
setns
xchg
cmpsl
inc
inc
adc
rclb
xchg
push
push
imul
in
es
insl
and
xchg
lahf
add
pop
dec
inc
fisttpl
rorb
hlt
int3
sbb
xor
pop
and
jle
fisubrs
push
pop
mov
sub
pushf
rcll
cmpsb
je
pop
mov
outsl
jae
popa
jnp
jmp
ss
icebp
idivl
inc
sub
inc
mov
gs
push
add
in
addr16
jl
std
es
daa
loope
or
test
ss
lock
invd
loopne
push
add
popw
addr16
pop
cwtl
xchg
shrb
cmpsl
and
hlt
pop
mov
add
shrl
adc
xor
xchg
test
xchg
mov
or
js
or
sbb
jbe
js
jo
lcall
sbb
lea
or
pop
shl
cli
cmpsl
into
lea
cld
xchg
scas
push
xor
mov
mov
push
icebp
push
xor
add
mov
pop
cs
push
sbb
jg
arpl
sbb
int3
dec
int3
punpckhdq
ret
ss
mov
movsb
rcl
lods
mov
add
pusha
test
sub
jp
mov
add
xchg
enter
inc
fucomip
cmp
push
ret
cli
jge
hlt
fucomi
rcrw
fistl
sti
xchg
or
repnz
xor
cs
mov
loope
mov
in
push
push
hlt
clc
dec
push
daa
and
sub
pop
cltd
jb
mov
stos
adc
mov
test
pop
js
pop
mov
ljmp
sub
mov
mov
rcr
adc
inc
push
dec
adc
mov
inc
inc
mov
test
cmpb
cmpsl
in
shll
jnp
lea
pop
xchg
loope
sub
jno
cld
mov
sbb
or
xchg
add
ret
xchg
rolb
scas
inc
jg
inc
testb
dec
jl
mov
push
mov
jae
adc
and
xor
lret
dec
inc
in
pop
and
pop
ds
movsl
mov
movsl
adc
test
pop
push
es
fcmovb
lods
and
in
lcall
mov
test
out
push
mov
outsl
aaa
cmp
fsubs
loop
in
xchg
les
dec
repz
cmpsl
fwait
rorb
aad
mov
outsl
pop
lds
xor
mov
fcomp
pop
sub
addr16
icebp
cwtl
std
adc
rcr
es
lret
inc
arpl
mov
adc
dec
imul
fcmovnbe
mov
fld
fs
mov
sbb
or
repz
aaa
jne
adc
fbld
jp
dec
or
daa
adc
pop
clc
sbb
addr16
or
adcl
cmp
adc
and
clc
lret
push
movsb
inc
dec
ljmp
stos
add
pop
jl
jns
add
bound
sbb
dec
repz
push
cli
inc
mov
sub
roll
mov
fnstenv
cmp
pop
scas
or
dec
and
inc
mov
outsl
jg
mov
xchg
stos
test
inc
out
pop
or
out
mov
lret
cmp
popf
orb
or
jl
inc
sbb
mov
sar
ret
lret
pusha
inc
sub
push
js
adc
clc
popl
cmpsb
and
adc
lret
sahf
push
stos
es
or
je
adc
out
mov
daa
jmp
jecxz
fdivrs
mov
int
das
sub
mov
sub
push
daa
jno
movsl
mov
xchg
jge
inc
or
sti
adc
out
add
jmp
push
mov
inc
mov
mov
push
jge
sub
call
pop
mov
lar
mov
adc
cld
icebp
xchg
push
or
dec
sbb
testb
xor
lea
and
std
addr16
add
sti
push
ret
and
push
mov
dec
mov
mov
xor
lcall
mov
insl
sbb
test
mov
loop
sbb
mov
clc
outsl
insl
mov
loopne
insl
rcll
adc
inc
pop
dec
mov
sub
mov
and
outsb
mov
add
dec
sbb
loopne
cmp
jecxz
das
sub
fnstenv
inc
ficoms
mov
sbb
sub
and
jmp
cmp
and
cs
iret
jmp
dec
addr16
cmp
fcmovnbe
test
jne
mov
mov
aam
ret
mov
scas
dec
push
or
das
jle
sub
mov
ss
pop
mov
fnstenv
test
xchg
into
lret
insb
cs
lds
mov
fwait
ret
or
pop
mov
and
sbb
stos
add
inc
dec
fsts
xchg
xchg
jle
sub
or
int
mov
test
rorl
push
mov
cmp
xor
sub
jae
hlt
out
sbb
ret
push
pop
subl
jbe
imul
mov
mov
xor
je
lock
sub
add
mov
dec
and
clc
jg
push
jne
pop
inc
lcall
sub
mov
rcll
dec
dec
pop
mov
out
hlt
cmp
adc
shlb
outsb
and
xor
scas
adc
mov
lds
push
lock
mov
ret
or
push
or
and
cmp
jno
push
lods
pop
or
xchg
push
inc
aaa
xchg
mov
test
cwtl
push
pop
test
stos
call
sahf
enter
aad
inc
dec
xor
inc
adc
js
add
cmpsl
xchg
push
xchg
add
push
push
lahf
scas
xchg
nop
aad
movsl
fnsave
cmc
and
adc
cmpsb
bnd
shll
or
xchg
cli
jecxz
pusha
mov
cmp
sub
push
pop
inc
in
js
test
out
xchg
mov
inc
insl
jmp
adc
call
or
in
inc
icebp
push
inc
cwtl
mov
call
sahf
mov
mov
cli
push
add
lock
loop
mov
adc
xchg
ljmp
push
lds
out
aam
loop
xchg
cmp
push
lret
divl
shll
xlat
fs
sti
sub
mov
xor
data16
leave
xorb
movsl
sarb
sbb
mov
mov
in
fistl
cmp
sub
jg
pop
pop
mov
lods
cltd
into
mov
mov
popa
sub
hlt
ret
jnp
dec
jl
filds
ret
ja
les
mov
mov
mov
stc
outsl
push
in
mov
scas
pop
jl
loope
pop
std
inc
cld
push
push
cli
mov
cli
inc
sti
decb
xchg
dec
mov
cli
cmc
pop
mov
inc
movsl
sbb
xor
and
and
stos
pop
push
jne
add
lret
fucom
jp
movsl
mov
or
insb
cmpsl
pushf
xchg
bound
jge
in
cmp
fmuls
cmp
repnz
jo
and
out
cmpsb
test
pop
fdivrs
dec
inc
in
sti
add
pop
arpl
cwtl
push
jge
xchg
in
lods
push
adc
test
mov
ss
shl
dec
jg
repnz
mov
insb
pop
inc
call
sbb
stos
mov
sub
cli
lods
ret
xor
sbb
push
sar
adc
loope
inc
push
add
sbb
inc
jb
adc
cmp
ret
aad
xchg
pop
inc
sarb
jg
addr16
or
xchg
pop
pop
sbb
add
sub
xor
dec
fistpll
int
out
pop
sub
jae
pop
pop
insb
xor
imul
sub
push
test
loopne
ret
in
pop
cld
cmp
clc
call
cmpsb
ret
mov
or
hlt
test
rcl
idiv
mov
adc
addr16
hlt
mov
mov
xor
jp
adc
mov
mov
pop
push
ret
lret
or
add
shlb
sbb
cmp
imul
push
ljmp
call
jb
adc
icebp
sub
or
jno
add
jmp
icebp
lods
ss
popf
xchg
ret
mov
insb
jl
pop
adc
or
inc
mov
nop
daa
mov
test
mov
shrl
sbb
inc
sbbl
cmp
fdivr
or
rolb
dec
inc
int
divl
cmp
leave
in
ret
lods
std
pop
pop
sbbl
mov
daa
sbb
lea
std
fcmovne
and
hlt
xchg
push
mov
jp
xorb
fmul
mov
sbb
and
dec
inc
scas
mov
xchg
sub
pop
dec
add
and
daa
aas
cmpb
add
insb
pop
mov
nop
jb
ljmp
pop
insl
test
insl
stos
jne
jne
mov
xchg
xchg
mov
in
sub
jecxz
adc
ss
popa
movsl
pop
add
inc
sbb
jecxz
lds
xchg
adc
test
outsb
fistpll
inc
jno
cmp
and
push
or
and
cmp
or
dec
fsubrl
lock
cmp
enter
outsl
rorb
sub
fidivl
jbe
lds
je
in
fists
test
lods
sub
fstps
jg
stos
xchg
js
jae
cmp
jb
inc
pop
jle
and
outsl
xchg
stos
stos
imul
mov
pushf
add
aad
xlat
jecxz
sub
xchg
or
xchg
push
cmp
xchg
shlb
lods
out
das
shlb
insb
sub
repz
test
loop
push
xlat
or
test
addl
lea
in
and
adc
pop
push
push
fistpll
add
sub
inc
mov
inc
xchg
mov
stc
dec
lea
push
mov
cmp
scas
pop
mov
jecxz
aaa
cs
pop
mov
sahf
cmpsb
lahf
les
jb
inc
cmp
jno
pop
dec
loop
in
incl
inc
sbb
sbb
xchg
sbbl
aas
or
stos
hlt
mov
fdivr
pop
dec
jnp
jno
adc
mov
call
and
mov
sbb
push
jbe
sarb
pop
add
inc
out
adc
push
xchg
cmp
pop
sti
arpl
movb
xor
adc
mov
inc
lcall
or
jp
outsl
imul
lret
scas
lds
jge
push
lahf
or
pop
fdivrs
mov
mov
and
outsb
sub
loope
pop
pop
mov
fisubl
mov
call
cmp
orb
adc
inc
out
push
xchg
mov
add
lcall
cs
pop
adc
add
outsl
insl
xor
inc
sub
lcall
fcoml
fidivrl
int
adc
mov
push
or
out
ds
inc
mov
dec
lcall
out
mov
mov
mov
dec
push
shlb
add
insb
jge
ficoml
mov
mov
in
xchg
insl
loopne
mov
jae
pop
incl
roll
notl
aad
int
aaa
xchg
shll
mov
push
jae
and
mov
jg
outsb
aaa
add
pop
adc
xchg
ret
push
push
scas
sub
pop
dec
cmp
cwtl
iret
das
push
pop
out
in
out
jo
pop
cmpsb
ret
and
inc
rolb
loop
sbb
sbb
mov
decl
xlat
daa
ljmp
rorl
ret
cmp
insb
inc
int3
jge
ljmp
shll
add
lcall
cmc
lret
js
popf
adc
stos
clc
fs
stos
mov
jmp
or
add
cmp
ss
or
pop
ss
push
mov
adc
rcll
outsl
mov
inc
jg
lods
pop
adc
jne
testb
cld
fimull
sub
cli
dec
jmp
mov
outsl
fdivl
jl
push
inc
push
jge
out
pop
test
mov
sbbl
add
push
sbb
insl
or
mov
pop
ljmp
adc
and
mov
inc
inc
sub
push
and
push
fstpt
adc
or
xchg
mov
jl
mov
ds
adc
imul
arpl
mov
cmp
cmp
mov
mov
push
fmull
jnp
push
push
add
jmp
adc
cld
push
divl
xor
add
std
mov
push
or
lea
inc
aaa
fsubs
pop
stos
mov
cmpsl
loopne
filds
fidivrs
jno
in
pop
mov
insl
dec
mov
pop
test
lock
or
lcall
fnsave
inc
or
xchg
popf
ljmp
add
in
std
fcmovnb
lods
mov
nop
inc
inc
mov
mov
nop
dec
gs
sbb
inc
add
pop
fdivs
es
sbb
popa
xor
imul
and
ljmp
scas
xorb
stc
xchg
mov
add
mov
dec
jp
push
test
jg
fs
add
dec
xor
push
xor
insb
outsl
das
add
mov
rolb
mov
ss
sub
add
movsl
std
testb
and
in
push
outsb
sbb
and
cmp
imul
insl
insb
or
add
xchg
mov
lea
sub
inc
jg
or
in
mov
mov
adc
stos
sbb
dec
sub
stos
cmp
aad
pushl
and
mov
ljmp
adc
cs
lahf
daa
xchg
andb
es
movsb
jo
loopne
hlt
push
mov
cmc
shlb
out
ja
arpl
xchg
shr
leave
test
inc
push
popf
mov
mulb
mov
dec
pop
xor
jecxz
insb
lret
adc
jle
js
iret
in
sub
sbb
std
fldcw
push
push
sub
out
ret
inc
mov
pop
inc
push
idivb
mov
aad
mov
mov
aam
pop
sbb
jle
outsl
xor
lcall
pop
push
sub
rol
fistpl
mov
loopne
sbb
mov
hlt
pushf
fcmovnbe
and
or
std
jg
test
push
push
push
push
cmp
push
fneni(8087
fbld
into
push
push
nop
xor
add
lock
xor
ret
movsb
xor
cld
scas
push
mov
push
int3
xchg
mov
mov
push
mov
test
mov
shll
call
mov
ds
pop
pop
clc
aaa
fisubl
and
rorb
inc
or
sbb
sti
sbb
or
xor
sbb
sub
std
cmpsl
xor
nop
lret
inc
aad
es
mov
aad
pop
dec
inc
pop
xor
inc
mov
insb
pop
sarb
and
cltd
icebp
ljmp
sti
enter
les
test
pusha
shlb
jg
mov
cmp
sub
scas
sbb
mov
testb
in
xchg
ret
pop
lods
mov
lods
int3
loope
lods
test
and
adc
pop
mov
das
and
orb
push
subl
cs
adc
pusha
add
inc
std
inc
fstps
jo
mov
mov
xchg
push
xor
sub
sbb
xor
loopne
push
sbb
repz
and
or
mov
mov
lods
pop
jmp
sbb
test
cmp
add
ljmp
rolb
push
outsb
jl
sbbb
sahf
xor
arpl
xor
inc
lcall
je
mov
jb
lock
mov
mov
xchg
adc
sahf
pushl
movsb
shl
movsb
dec
cmp
push
cmpsb
call
mov
dec
sub
daa
dec
push
in
mov
jo
pop
rclb
loop
mov
daa
stos
adc
nop
hlt
sbb
push
es
and
xchg
movsl
ret
dec
leave
int3
xchg
pop
adc
imul
mov
jp
mov
and
push
sbb
and
nop
in
push
push
mov
decl
mov
mov
adc
test
mov
bound
scas
sub
sbb
sbb
outsb
and
arpl
arpl
or
fldt
cs
xchg
push
pop
adc
leave
movsl
push
mov
xor
adc
ss
inc
stc
sbb
xor
in
inc
imul
mov
outsb
shl
adc
mov
mov
std
mov
sbb
jg
push
or
pop
subb
push
mov
lock
loope
lahf
add
or
cltd
ss
in
in
inc
xor
mov
push
mov
push
dec
add
ds
add
mov
mov
loope
mov
mov
icebp
push
xchg
cwtl
pop
sub
mov
subl
addr16
scas
or
les
add
sbb
popf
jbe
inc
sub
xor
push
xchg
adc
mov
push
mov
lret
dec
and
xchg
and
adc
ret
and
adc
pop
jae
inc
mov
adc
cwtl
add
mov
push
xchg
sbb
mov
add
add
adc
add
jle
test
aaa
jle
inc
jecxz
std
bound
hlt
push
sbb
cwtl
fistpl
movsb
aas
insl
in
and
dec
sbb
pop
adc
pop
sub
adc
cmp
test
clc
bound
mov
aam
movsl
and
lods
test
imul
pop
out
stos
add
js
mov
and
dec
cmp
das
stc
outsl
and
xor
gs
int3
fimuls
loop
movsb
mov
nop
adc
jbe
adc
mov
cli
pop
sbb
adc
fldt
adc
inc
add
adc
fs
test
stos
test
adc
add
or
and
mov
push
insl
sbb
mov
push
add
sarb
scas
cmp
or
mov
lods
inc
cmc
jecxz
and
adc
add
jecxz
fcoms
lahf
mov
out
mov
dec
cmpsl
or
and
or
mov
adc
or
jbe
xor
in
push
int3
jl
aam
call
clc
add
xchg
xor
xor
mov
inc
lods
mov
push
cmp
rcrl
std
or
sbb
xor
lcall
pop
fcomps
in
das
cltd
and
add
mov
push
mov
jbe
fcomps
ficoml
push
scas
push
inc
test
xor
mov
stc
lret
in
and
sub
or
dec
add
rclb
js
pop
or
jl
push
inc
pop
js
push
mov
lock
push
sbb
mov
or
mov
xchg
push
pop
lods
icebp
lret
adc
fstps
lods
xchg
aad
lds
test
aad
cmpsl
jo
aam
shr
sbb
mov
cld
clc
test
jae
gs
xor
jecxz
push
pop
mov
pop
enter
jbe
sub
mov
push
mov
cmc
and
mov
leave
sbbb
subb
push
iret
jno
pop
std
mov
imul
imul
and
and
out
sub
push
push
mov
mov
mov
andb
fldenv
and
dec
or
leave
mov
aaa
inc
data16
push
nop
icebp
mov
in
mov
ror
insb
sub
xor
mov
adc
fstpt
into
cmpsl
and
mov
sub
or
inc
in
inc
xchg
mov
test
mov
inc
cmp
cmp
in
js
or
nop
int3
addl
push
pop
pop
vpsrad
rol
push
lret
xor
mov
outsl
mov
mov
outsb
cltd
lcall
adc
jge
jne
pop
push
adc
mov
hlt
or
jmp
iret
xor
cmp
inc
movb
dec
mov
sbb
insl
sti
cmp
mov
data16
and
dec
mov
xchg
xor
pop
les
test
pop
stos
fstpt
lods
pop
in
out
adc
mov
faddp
mov
lods
push
mov
jno
mov
andl
sub
jp
xchg
mov
insl
mov
sbbb
dec
ret
sbb
int
inc
imulb
les
mov
outsl
jecxz
inc
enter
adc
adc
imul
mov
sbb
imul
push
jae
dec
xor
add
icebp
out
lret
adc
jbe
and
xchg
nop
test
pusha
jo
cmpsl
es
movsl
aaa
outsb
or
sbb
inc
adc
inc
int3
inc
cmp
xchg
lock
repnz
mov
and
and
adc
sub
cmc
pop
ss
aaa
std
dec
insl
xlat
outsl
jl
dec
adc
and
dec
ret
add
add
push
fistpl
lahf
nop
jmp
xchg
loope
push
xor
mov
jne
rclb
mov
test
ret
or
ficompl
mov
test
lahf
outsl
fcompl
stos
xchg
push
outsb
mov
fsubl
xlat
inc
jle
inc
inc
push
je
or
xchg
pop
inc
rorb
pop
or
pop
xor
sbb
fidivl
add
sub
push
cmc
ffreep
cwtl
leave
mov
pop
popf
sbb
mov
ret
cli
pop
rcrl
push
push
push
pop
cmp
sub
jmp
mov
lods
mul
test
sbb
or
nop
sbb
mov
mov
jle
mov
movb
stos
mov
repz
jmp
adc
sub
mov
outsb
and
inc
add
sbb
pextrw
test
inc
pushf
xchg
stos
jge
addps
aam
add
imul
dec
adc
cmp
movsl
daa
decb
adc
outsl
mov
addb
xorb
xor
sahf
movsb
or
lea
inc
imul
xchg
dec
outsb
xchg
sbb
cmp
add
xchg
add
lds
push
xchg
adc
in
inc
js
pop
inc
test
ja
insl
sub
sti
sub
push
add
incl
test
push
dec
inc
mov
xchg
mov
addr16
or
push
insl
in
push
jne
out
clc
jg
iret
jnp
xlat
std
pop
mov
shlb
inc
push
adc
stos
mov
outsb
inc
or
fistps
adc
jecxz
loope
pop
sub
js
test
loopne
dec
pop
data16
or
ljmp
jo
stos
aam
fdivrs
shrb
into
jo
push
dec
or
popf
adc
lret
mov
cli
movsb
sahf
imul
ljmp
cmp
roll
jbe
ret
daa
test
or
sbb
andl
scas
and
pop
push
sti
add
fwait
and
dec
pop
pushf
dec
add
add
add
fs
sub
gs
or
into
mov
mov
and
mov
sub
dec
xchg
xchg
adc
ja
cmp
cs
repnz
shr
incl
cli
cld
pop
ds
push
js
popa
jae
cld
jb
outsb
repz
iret
xor
mov
lods
rcrb
mov
add
rorb
shlb
in
and
test
and
mov
add
sti
mov
out
add
lods
push
or
imul
std
popl
jecxz
dec
mov
mov
mov
sahf
push
dec
lret
mov
into
xorl
push
js
cmp
sbb
jmp
sub
into
cmc
loopne
ficomps
jo
outsb
fisttpll
cmc
mov
mov
dec
imul
mov
or
mov
inc
xor
jmp
inc
pusha
sbb
mov
push
or
add
inc
insl
cmp
clc
jns
add
imul
addb
repz
imul
sahf
jno
stos
jecxz
mov
mov
ds
jl
loope
daa
test
cmp
daa
adc
inc
jl
jns
add
pushf
cmp
pushf
cmp
mov
push
testb
mov
dec
pop
add
aaa
adc
popa
inc
mov
mov
jmp
and
sbb
xchg
daa
js
aaa
push
or
rorl
dec
pop
add
inc
xchg
std
xor
mov
dec
adc
mov
cmp
sbb
and
pop
xchg
aam
or
fbstp
imul
xchg
repz
shlb
lret
jmp
jmp
mov
sbb
ficoms
lret
flds
sbb
mov
sub
mov
std
add
test
cmp
xor
xchg
rolb
outsl
sub
sub
push
pusha
add
and
or
sub
jb
xlat
shrb
xchg
test
jbe
inc
mov
xchg
xor
dec
data16
roll
sub
ljmp
mov
or
mov
shl
mov
jmp
jge
mov
pop
inc
push
add
popf
ficompl
pop
inc
push
inc
cltd
adcb
pushf
enter
out
xchg
jecxz
add
dec
orb
and
xor
dec
or
sub
adc
jmp
or
pushl
dec
dec
or
rclb
xchg
or
ja
and
in
mov
and
inc
test
add
cwtl
or
xor
dec
push
cld
adc
jne
sub
adcl
loop
pop
mov
mov
add
mov
or
stos
fmuls
jge
cmp
mov
orb
sbb
mov
add
inc
loope
ss
cltd
inc
dec
adc
or
cld
adc
pusha
and
mov
xor
jb
and
dec
and
push
or
es
mov
jne
sbb
shll
and
or
adc
ret
jne
daa
inc
xor
mov
lcall
scas
leave
and
aad
adc
or
pop
dec
add
push
or
seto
push
pop
mov
and
or
inc
ror
int3
xor
push
out
mov
addr16
inc
std
lea
in
test
add
int
push
mov
mov
clc
cmp
mov
les
ljmp
or
pop
mov
adc
insb
mov
jno
dec
iret
lods
or
jle
mov
add
push
mov
mov
sbb
cld
jle
sub
pusha
nop
loopne
movsb
mov
mov
mov
adc
dec
bound
xchg
mov
call
pop
inc
push
sbb
out
sub
xor
push
sbb
or
mov
mov
xchg
dec
andl
pop
or
sbb
xchg
push
enter
stc
xchg
cli
daa
lcall
arpl
bound
xor
cmp
scas
push
pop
ds
std
les
xor
pop
dec
mov
rclb
mov
cmp
roll
jmp
lds
xchg
push
sbb
popa
push
add
mov
imul
pop
sbb
or
out
dec
mov
ljmp
mov
in
stos
add
pop
mov
mov
popf
xor
out
jle
sub
pop
jbe
or
or
mov
mov
pop
mov
lods
push
xchg
sub
or
mov
cmpl
xchg
xchg
addb
adc
sbb
loopne
iret
mov
jnp
stc
jae
fbld
daa
hlt
pop
sub
mov
outsb
pushf
dec
inc
cltd
inc
xchg
dec
aas
pop
sbb
pop
ffreep
xor
xor
hlt
push
push
pop
sub
call
aam
js
jae
xchg
loopne
lods
cmc
and
cmp
and
je
push
mov
xor
pusha
shll
insb
and
outsl
fcompl
lods
lcall
mov
ja
add
add
inc
inc
cld
xchg
les
inc
push
dec
aas
loopne
push
imul
and
mov
inc
cld
outsl
addb
fildl
popa
or
cmp
mov
and
pop
movsb
es
sarl
aam
xchg
cld
cmp
aam
adc
enter
dec
cs
pop
dec
adc
and
ljmp
mov
lods
decl
test
dec
call
add
dec
call
or
jmp
les
jge
mov
rcrb
pushl
lods
adc
pop
dec
out
fdivs
adc
jo
repnz
fxch
inc
cmpsl
mov
insl
loope
stos
sbb
hlt
test
imul
inc
loope
dec
call
pop
insl
imul
fcoml
jbe
inc
mov
mov
lret
outsb
mov
hlt
lret
push
les
push
xchg
xorb
jnp
inc
mov
sbb
mov
push
sbb
notl
test
xor
imul
adc
xor
and
push
xor
lcall
jne
inc
push
arpl
pop
xchg
cltd
mov
mov
mov
movsl
ret
ud2
subl
movsb
stos
bound
pop
cmp
sub
fisubs
jle
sub
sub
push
inc
cwtl
push
daa
test
fwait
mov
mov
mov
and
data16
pop
aaa
cmpsb
repnz
ss
cmpsl
mov
sbb
mov
imul
dec
pop
mov
dec
push
je
mov
lods
sub
sub
inc
inc
mov
and
add
or
fldcw
xchg
push
mov
cwtl
mov
add
lcall
fdivrs
mov
mov
nop
cmp
in
out
xor
bound
insb
js
cmp
loop
adc
cld
push
in
dec
aad
std
push
or
movsl
rolb
cmp
dec
inc
into
std
insb
add
sbb
inc
push
sbb
popa
mov
add
cmc
mov
insl
mov
aas
out
mov
mov
movsb
out
fcmovnu
bound
in
loopne
add
iret
push
cld
addl
sbb
jg
les
cmpsl
add
mov
mov
mov
outsl
pop
push
adc
and
das
xchg
dec
and
xor
ror
rorl
inc
inc
aad
xorb
loopne
pop
inc
shll
mov
push
jg
les
or
fsubr
push
enter
insl
push
fcmovnbe
mov
dec
adc
inc
and
mov
mov
adc
ja
push
push
dec
push
std
outsl
push
mov
shrl
dec
jnp
push
jp
pop
and
sub
xchg
jmp
push
push
enter
int3
dec
popf
adc
aad
inc
fistl
pop
in
fists
jg
idivb
dec
dec
or
iret
mov
or
sbb
loop
mulb
push
or
mov
jo
jae
and
fisubrl
xchg
js
dec
es
sbb
sbb
inc
cmpsl
mov
mov
jl
push
lret
fildll
sbb
movsl
jae
aad
inc
and
xchg
jb
dec
das
inc
jge
pop
iret
and
enter
push
inc
incl
jecxz
push
lods
ret
test
ja
mov
and
int3
pop
test
push
and
negl
pop
fwait
cwtl
push
jno
int
orl
cmp
and
out
cld
nop
daa
sbb
lcall
clc
sbb
cmp
push
lret
sub
cmp
jg
movsl
mov
adc
mov
adc
dec
xor
ret
lock
dec
sbb
stos
or
or
std
jle
popa
jmp
xchg
xchg
addl
and
dec
push
aaa
dec
push
andl
mov
push
call
dec
inc
push
scas
loope
mov
pop
xchg
inc
inc
mov
push
rorb
je
std
sbb
loopne
xor
jmp
adc
mov
and
xor
add
mov
adc
mov
lret
lods
fwait
push
pop
cmp
mov
xor
icebp
das
jno
arpl
lahf
rclb
add
cld
pusha
and
push
mov
pop
or
add
add
mov
push
mov
das
insb
xchg
mov
dec
inc
mov
fwait
cmc
data16
aad
test
pop
mov
mov
and
sub
ds
js
mov
es
pop
inc
or
sbb
arpl
xchg
xchg
mov
mov
and
cmpsl
pop
fisubs
xchg
and
mov
mov
mov
xchg
mov
xchg
xorl
jg
dec
mov
mov
sbb
push
stc
icebp
mov
cmp
jg
shlb
mov
xchg
shrb
dec
ja
addl
xor
dec
xor
stos
int
pushf
pop
push
sbb
pop
inc
mov
lcall
sub
sub
add
test
adc
mov
jle
adc
or
xor
hlt
lcall
stos
dec
adc
imul
dec
and
int3
popa
fnsave
mulb
gs
mov
jbe
shll
ljmp
pusha
add
add
sahf
dec
mov
inc
outsl
inc
mov
data16
sbb
cs
mov
push
push
add
cmp
lcall
aad
sub
cmp
jecxz
loop
cli
mov
repz
xchg
out
add
lds
fwait
stos
mov
adc
adc
lcall
lea
out
lahf
inc
lahf
and
pop
push
inc
sti
insl
leave
dec
jle
xchg
mov
dec
es
cld
add
sbb
mov
insb
daa
cmp
jle
subl
or
fwait
mov
sub
cmp
int3
jle
mov
jle
int3
cld
mov
sub
shlb
insl
test
jle
hlt
push
sbb
iret
xor
shrl
movsb
out
aas
dec
sub
adc
jle
stc
int
mov
cld
and
push
jbe
xchg
push
std
fbstp
out
lahf
mov
sbb
arpl
jb
lods
or
out
inc
cmc
pop
jmp
aas
push
dec
jb
cld
jle
dec
ja
inc
inc
scas
mov
dec
jle
cld
cs
loopne
cmp
lahf
xorb
xor
jle
outsb
mov
jle
andb
xchg
loop
movsb
fsubs
aas
bound
and
loopne
push
jl
icebp
dec
mov
js
cmc
xchg
cltd
cmp
jnp
mov
pop
cmp
mov
and
xor
lock
xchg
daa
cmp
std
int
idivl
jae
jb
mov
adc
arpl
clc
out
iret
cmp
into
mov
std
dec
dec
inc
inc
push
daa
mov
jb
ret
xor
test
cld
stc
test
inc
aad
push
shr
xchg
call
mov
push
pushf
cli
int
loopne
push
stc
in
sbb
lods
fldln2
popf
xor
mov
inc
jl
lahf
insl
stc
lods
iret
decl
cli
roll
jp
adcb
jns
or
inc
scas
mov
fcomps
fs
pusha
push
xchg
rcll
push
test
mov
cmp
mov
lock
rcrl
pop
stc
mov
jecxz
loope
mov
les
outsl
fcompl
ss
lahf
pop
shlb
push
mov
lods
cmp
mov
or
xchg
xor
lock
insl
imul
mov
rcl
xor
das
push
setge
jecxz
test
dec
aaa
add
cli
mov
jb
cld
in
adc
jo
sbb
orl
fptan
or
sbb
mov
cmp
cmpsl
aaa
clc
jae
cld
daa
and
cld
fsub
loopne
fisubrs
mov
je
movsl
and
test
in
filds
iret
fisubs
and
cmp
jmp
in
and
inc
mov
push
insb
sti
cltd
and
scas
outsb
or
mov
pop
sbb
adc
shrl
jp
mov
js
pop
fstpl
sbb
jbe
into
pop
jne
cmp
mov
shll
cmp
sbb
xor
pop
loopne
mov
icebp
mov
nop
bound
les
jmp
adc
sar
loope
dec
adc
filds
loope
lea
dec
popa
test
sar
or
push
aad
add
cmc
or
adc
dec
mov
sub
add
cmp
dec
bound
lcall
push
aam
sbb
mov
xor
mov
push
or
daa
mov
mov
in
push
jge
loope
dec
and
sbb
push
mov
not
in
nop
gs
outsl
je
inc
mov
outsb
xchg
sahf
into
sbb
loop
and
xchg
sub
mov
rclb
pushf
test
ja
icebp
dec
inc
ret
mov
scas
adc
pop
pop
mov
mov
test
adc
daa
jns
push
roll
and
and
leave
dec
and
mov
push
daa
jp
icebp
adc
cwtl
repz
aaa
arpl
aad
mov
jo
scas
movsb
in
xchg
sbb
mov
inc
fs
dec
jmp
jnp
xorl
mov
in
outsl
gs
mov
inc
repz
sub
loopne
cmp
cs
or
adc
jmp
arpl
jecxz
test
pop
ret
inc
pop
xchg
and
mov
jb
neg
sub
lret
pop
dec
gs
mov
cmpsl
jmp
hlt
push
mov
or
je
loope
icebp
pop
mov
jo
in
mov
add
test
addl
sbbb
cmpsb
jl
sbb
call
sarb
xor
mov
cmpsl
mov
cld
xor
dec
sbb
lret
call
mov
pop
fwait
les
mov
dec
add
cmp
aaa
daa
fwait
rorl
in
call
cmp
shl
pusha
sbb
icebp
sahf
out
pop
pusha
mov
mov
dec
rcll
dec
pop
dec
cld
lahf
push
ret
push
push
repz
call
inc
outsl
add
push
xor
jge
mov
mov
and
and
push
jp
jbe
add
mov
out
add
lods
add
jge
imul
jecxz
jo
enter
dec
sbb
mov
adc
sbb
leave
sbb
pop
out
xchg
push
mov
popa
push
inc
xchg
xchg
xchg
dec
mov
mov
jl
xchg
jae
loop
cmpsb
jno
out
xchg
int
daa
sbb
cld
cmp
in
arpl
cmp
pop
dec
mov
mov
ret
stos
aaa
dec
pop
in
movsl
call
xor
sbb
push
ret
orl
pop
inc
pop
and
fisubs
fldl
sbb
push
popa
sub
dec
movsl
cmp
adc
aaa
mov
xor
and
dec
addr16
lods
ss
push
pop
rcrb
inc
inc
jmp
aas
sti
push
shlb
aas
arpl
loop
test
fsts
dec
jno
ret
push
out
dec
je
loopne
push
mov
mov
xchg
es
in
pop
push
ds
and
add
popa
mov
das
pop
sub
jl
sbb
jecxz
fmull
ror
xchg
push
xchg
popaw
mov
add
add
adc
gs
xchg
rolb
aas
sbb
push
inc
cmp
sub
fxch
jo
dec
xor
rorl
imul
mov
xchg
xchg
inc
cmpsb
jnp
fsubp
aam
or
in
sahf
fnstsw
mov
sub
add
sbb
rol
ljmp
inc
dec
out
arpl
jmp
lret
andl
ljmp
out
loopne
outsb
insb
pop
test
xchg
aas
mov
inc
test
mov
jo
xor
or
add
mov
push
dec
pop
inc
add
pusha
leave
mov
or
push
xor
pop
and
sbbb
cltd
jno
cmpsl
fdivrl
dec
shlb
inc
or
addr16
outsl
dec
xchg
sarl
sarl
push
sbb
xchg
mov
cmp
test
shr
fsts
sbb
outsl
mov
sub
add
insb
push
and
add
sub
or
shrb
call
sub
nop
iret
push
and
les
std
lods
into
mov
aas
lds
insb
shll
fisttpll
cmpsl
dec
cmc
sub
loope
andl
jg
inc
aas
sbb
dec
adc
test
xchg
pop
shrb
mull
ffreep
jo
mov
jae
pop
add
jo
arpl
divb
roll
sub
fmull
std
lahf
mov
push
and
ss
and
fistpll
push
or
cs
adc
inc
addr16
inc
dec
jne
clc
push
sbb
lea
fidivrs
xchg
inc
add
imul
sbbl
dec
dec
aas
jge
push
repnz
mov
lahf
mov
mov
imul
mov
pushf
loope
fs
incl
dec
mov
data16
insl
loope
shll
shll
add
jmp
cs
frstor
lods
xor
push
in
int
xchg
push
pop
fildll
lcall
movsl
repnz
or
xchg
test
dec
lcall
push
adc
sub
ljmp
movsl
adc
lods
push
add
push
inc
bound
stos
mov
call
xor
dec
add
jp
stos
cmp
sub
push
add
dec
push
rcr
scas
fwait
dec
push
mov
xor
in
dec
sbb
in
sbb
mov
filds
lea
ljmp
test
adc
mov
mov
xchg
pop
iret
jg
mov
xor
sbb
incl
jge
mov
fidivrs
aad
sub
imul
sub
dec
push
outsl
movsl
mov
cpuid
roll
push
jne
call
jp
fcomp
decb
fsubl
sub
iret
cld
sub
out
xchg
mov
hlt
jmp
test
lods
pop
arpl
mov
jo
lock
mov
bound
setae
cs
push
cmp
loop
rclb
pop
inc
push
adcb
pop
adc
lock
les
out
inc
lock
mov
cmp
add
outsl
fmuls
dec
jecxz
and
bound
jg
lods
mov
or
xor
sub
add
pop
clc
xchg
mov
cs
mov
add
push
out
and
lgdtl
pusha
pop
sets
and
insl
gs
ss
inc
rolb
mov
mov
adc
pop
test
sub
out
mov
aaa
add
inc
in
dec
add
jnp
xlat
int
push
popf
fwait
cmp
xor
xchg
fmull
or
test
daa
dec
add
add
push
or
inc
adc
movsb
push
mov
jp
mov
cmpsb
xor
xchg
mov
in
rolb
movsb
adc
dec
test
or
pop
mov
mov
inc
or
push
fwait
lods
push
mov
add
loope
or
fs
insb
inc
inc
cs
jl
lods
xchg
dec
movsl
push
ret
push
ret
scas
fistl
inc
js
rcrb
scas
and
add
mov
xchg
adc
lahf
add
adc
dec
jbe
and
sahf
or
mov
sub
ret
rclb
loope
addb
lock
mov
and
je
mov
mov
mov
mov
dec
pop
lahf
add
mov
mov
aam
add
insb
es
insl
int3
andb
xchg
addl
or
sbb
fwait
or
cmp
sub
inc
nop
mov
jne
insl
and
pop
jo
pop
mov
test
ret
leave
inc
enter
popf
sbb
stos
lods
dec
xor
jbe
pop
pusha
daa
add
ficomps
add
sbb
mov
jp
and
cmp
jg
lcall
sbb
je
loope
push
mov
push
mov
adc
fstps
jl
inc
sub
pusha
and
jmp
inc
pop
mov
cmpb
sbb
xchg
sbb
andl
cwtl
inc
sub
je
stos
inc
sahf
push
test
push
pop
sub
in
aad
sub
test
testl
add
mov
aam
pusha
call
inc
ret
sar
push
nop
aad
inc
loopne
mov
orl
pop
in
daa
sbb
push
xor
sbb
movsl
lcall
and
sbb
add
enter
je
pop
sub
sbb
sbb
mov
xlat
loope
mov
push
push
adcl
add
and
test
outsl
in
daa
pop
sbb
sti
or
mov
jo
test
pop
lahf
subb
cmp
add
mov
jg
pop
cmpsb
in
fldenv
jle
cmp
fcoms
adc
loope
dec
push
add
cmp
sub
imul
and
arpl
mov
in
enter
stos
dec
lahf
adc
fs
ret
es
xchg
cmpsb
lret
dec
in
cmp
push
mov
aam
in
sbb
loopne
popa
adc
adc
xor
xor
iret
aas
into
rcr
and
and
push
add
repz
in
repnz
cmp
jp
cmp
inc
in
add
pop
mov
lret
psubsw
sbb
mov
rcrb
add
lret
loopne
xchg
fdivrs
cmp
mov
and
lock
inc
jb
push
jb
add
ret
adcb
or
push
jle
aam
jp
sbbb
sbb
insb
mov
pop
leave
cs
sbb
adc
xchg
lret
inc
and
xchg
xchg
mov
and
or
in
std
adc
mov
repnz
add
push
push
addr16
mov
or
mov
adc
cmp
cmc
pop
push
xor
shrb
repnz
or
pusha
pop
movsb
push
xchg
mov
cli
jmp
or
lock
out
repnz
lds
cmp
mov
or
sbb
inc
leave
push
pop
or
sarb
and
mov
push
push
cmc
cs
xchg
dec
rdpmc
into
imul
andb
jecxz
insl
mov
adc
fwait
mov
loop
jmp
mov
adc
imul
adc
sarb
push
or
arpl
testl
push
pop
sub
lds
add
std
test
sbb
fadds
xchg
lods
xchg
loopne
sbb
or
dec
ljmp
leave
js
dec
in
xchg
sbb
add
adc
mov
arpl
cmp
mov
add
pop
pusha
lods
sbb
gs
inc
adc
lret
enter
dec
inc
xchg
dec
or
addr16
mov
jecxz
pop
fdivs
sbb
mov
push
xor
add
movsl
and
xor
movsl
cli
jg
inc
add
movl
push
insl
fstps
inc
lcall
lock
or
push
xchg
dec
ljmp
and
pop
and
pop
or
add
and
clc
cli
pop
es
dec
jge
push
mov
inc
dec
andb
int
jecxz
fldenv
mov
cmp
aad
sbb
cmp
add
nop
in
adc
push
and
jle
adc
jnp
dec
push
sbb
adc
add
cmc
mov
inc
xor
sub
out
loopne
ljmp
or
push
push
add
pop
pop
xor
and
daa
jo
lahf
pop
lods
xchg
push
into
xor
mov
loope
jb
jnp
jno
xchg
pop
pop
push
add
push
sub
shlb
les
sbb
rorb
insl
mov
dec
dec
pop
add
arpl
or
pop
mov
es
dec
pop
mulb
adc
dec
repnz
and
cmp
lret
or
and
mov
add
mov
movsb
push
mov
xchg
pushf
pcmpeqb
loopne
xor
pop
flds
lret
push
popf
dec
sbb
sbb
and
pop
sbb
adc
and
push
adc
sub
push
cld
xchg
dec
call
arpl
and
jbe
add
xor
or
inc
inc
into
and
xchg
jnp
dec
add
mov
scas
fmulp
push
loop
sahf
js
jg
fnstsw
andb
jg
jge
push
rolb
iret
fwait
popa
push
and
or
js
xchg
mov
rorl
adc
outsb
test
int
stos
push
notb
xchg
arpl
movsb
lods
xor
sbb
mov
jge
lods
dec
lret
roll
pushf
sbb
pop
daa
pop
jb
jne
mov
xchg
dec
adc
lea
or
inc
jmp
sbb
dec
xor
push
sub
sbb
rcll
mov
xchg
lcall
int
leave
or
jmp
ffreep
sub
lods
ds
xchg
xchg
test
push
orl
test
dec
add
insl
add
cs
and
loopne
add
sbb
add
test
add
incb
ss
mov
pop
jne
outsb
data16
cs
test
and
pop
sbb
js
enter
leave
ret
push
ret
cwtl
out
mov
repz
pop
mov
cmpsb
and
pushf
pushf
cmp
or
addr16
mov
hlt
imul
pop
sbb
mov
push
adc
dec
loop
add
and
ret
mov
xchg
inc
jle
outsl
and
and
jle
les
sub
dec
or
popa
lcall
fldcw
sub
pop
imul
push
sbb
popf
je
push
loopne
or
cmp
jecxz
jne
or
pop
loop
add
cld
sahf
movsb
mov
push
cld
lahf
mov
xor
data16
bound
pop
lea
jp
lods
and
shlb
mov
inc
subb
imul
pop
xchg
mov
cmpl
cmpsb
inc
sbb
cltd
andb
jmp
scas
xor
movsl
xor
or
cmp
sub
or
and
add
test
sbb
pop
addr16
gs
or
and
jns
and
dec
sahf
sbb
cmp
fdivrs
or
or
jl
push
push
sbb
sbb
pop
mov
popa
out
adc
inc
add
cmp
dec
je
into
xor
orl
cmpsl
push
pop
rolb
es
bound
mov
push
dec
sub
mov
mov
add
enter
cmp
lret
or
nop
dec
shlb
or
mov
xchg
and
adc
jns
add
sti
or
mov
cmpsl
pop
addr16
push
stos
data16
js
pop
mov
imul
fidivrl
inc
push
mov
loopne
or
push
add
lcall
push
jp
sbb
insb
aam
sahf
mov
mov
or
in
and
dec
popf
je
loopne
incb
add
xchg
add
ror
aad
and
inc
mov
leave
call
jge
pop
add
leave
push
and
sub
pop
sbb
in
mov
pop
jecxz
ficoms
xchg
and
sbb
outsb
cmp
cmp
xchg
ror
orb
mov
pop
adc
mov
loopne
repz
add
mov
mov
add
sbbl
mov
add
mov
cmp
dec
pop
push
mov
pop
inc
add
pusha
mov
fnstenv
cmp
fadds
add
mov
push
leave
shll
and
xchg
mov
add
mov
movsb
mov
mov
add
ud1
leave
clc
or
fs
cmp
pop
hlt
aaa
dec
add
test
popl
adc
je
sub
push
or
jnp
lods
ret
jb
and
jg
pop
push
daa
jne
loop
mov
sub
mov
jbe
aam
fldl
xor
repnz
in
jp
orl
mov
push
data16
roll
mov
or
dec
sahf
lds
cmpsb
daa
pusha
push
shrb
inc
jg
ficomps
or
add
or
dec
add
adc
pop
push
fld
fwait
test
test
pop
popaw
mov
or
int3
loope
push
insb
sub
lret
dec
push
jg
sbb
push
jb
pop
pop
icebp
les
inc
push
stos
stc
jno
pop
sub
cmpsl
push
dec
cli
inc
add
jp
gs
adc
xor
mov
mov
add
push
enter
dec
xchg
insb
adc
je
aam
pop
lods
dec
xlat
and
jnp
pop
or
andb
jecxz
jl
or
add
sbb
cld
push
push
or
cmp
cmp
lret
outsb
repnz
inc
adc
jno
fs
sub
dec
icebp
add
movsb
or
test
aam
xlat
popf
xor
xchg
cmpsb
inc
sub
push
seta
nop
sub
fiaddl
and
jae
cmovbe
je
cmp
sbb
movsb
pop
repnz
mov
pushf
sub
sbbl
sub
push
and
dec
loope
push
add
mov
dec
push
subb
into
xor
add
inc
xor
add
jnp
and
jge
out
arpl
xor
mov
andb
cmp
and
sub
and
inc
or
dec
jg
arpl
lock
andl
rorl
int
leave
pop
ljmp
ret
mov
addr16
mov
inc
lea
mov
jb
or
dec
in
add
bound
pop
out
add
jne
sbb
fsub
or
int
xor
repnz
or
xchg
loop
or
scas
xchg
in
push
leave
subb
add
sbb
in
push
scas
inc
add
dec
lcall
inc
push
push
mov
sub
add
dec
dec
mov
or
push
lock
push
push
daa
int
xchg
mov
adc
rcrb
mov
popa
sbbl
mov
sub
inc
cmp
lock
inc
xor
adc
scas
cmp
sbb
mov
or
pop
iret
add
clc
xchg
or
inc
adc
jo
add
push
add
pop
mov
sub
lret
cmp
clc
movsb
lret
xchg
inc
js
lods
fs
popf
les
xchg
pop
dec
push
mov
sub
cmpsb
dec
ss
cli
mov
jne
cmpb
sub
icebp
jno
fprem
mov
push
addb
or
enter
xchg
imul
push
push
xlat
xor
hlt
sub
mov
scas
jp
pushf
pusha
lea
addb
into
call
inc
sbb
fwait
pop
sub
add
dec
std
cmp
nop
or
xchg
movsb
adc
push
sub
jl
nop
or
sub
mov
push
mov
inc
pushf
jo
mov
and
test
cs
fnstcw
and
inc
cmp
imul
xor
inc
cwtl
mov
ret
jae
jp
or
push
in
adcb
sbb
fiadds
pop
pop
cmp
push
cmpsl
add
icebp
cld
and
lret
and
or
xchg
je
repz
mov
sahf
push
insb
adc
mov
xchg
aad
lock
push
push
lods
sub
dec
add
inc
xchg
out
sbb
xor
and
fimull
leave
mov
and
sar
lahf
add
or
mov
arpl
adc
insb
push
xor
sbb
fs
arpl
adc
dec
je
jno
xor
adc
add
testl
rcll
popf
rcll
push
mov
or
and
fwait
mov
lods
jle
add
bound
mov
push
sub
cmp
lcall
cmp
bound
stos
sub
fistpl
imul
jl
inc
dec
jp
addl
int
stc
or
lret
test
aad
dec
add
pop
out
add
lcall
lcall
jg
inc
loopne
cwtl
in
fdivrs
add
adc
and
cmp
inc
rorb
lcall
ljmp
or
inc
cmp
and
pop
cs
fildl
jnp
xor
fs
xlat
pop
mov
cmp
scas
mov
les
or
dec
hlt
lds
movsb
movl
sbb
bound
or
pusha
jno
aad
data16
je
cmc
mov
mov
pop
inc
jge
inc
imul
sahf
push
push
or
insb
inc
inc
inc
mov
insb
cmp
add
nop
push
sub
sub
hlt
lret
sbb
inc
and
adc
into
sbb
nop
ss
test
loop
ret
pop
addl
xchg
scas
lcall
adc
adc
adc
push
push
inc
fstl
icebp
gs
push
test
repz
jne
xchg
xchg
sarl
dec
andb
mov
mov
inc
jo
xor
jge
xchg
bound
sbb
mov
mov
add
or
addr16
ret
and
push
loop
mov
leave
pop
ljmp
cmpsl
int3
push
fwait
roll
adc
adc
gs
bound
pop
pop
rol
inc
xor
popa
sbb
mov
add
lahf
inc
loopne
or
xchg
push
es
hlt
stos
ja
xchg
ret
cmp
call
mov
dec
xchg
sub
push
sub
xchg
add
insb
addb
jge
dec
into
xchg
lock
movsb
lcall
mov
orl
add
mov
ror
push
mov
out
rolb
ja
arpl
testb
and
add
ficoml
into
push
cmp
cmp
add
xor
adc
mov
cld
dec
push
and
add
mov
add
mov
addr16
nop
leave
mov
sbb
stos
inc
or
inc
cmp
and
test
add
mov
sub
xchg
sbb
xchg
xor
dec
push
sub
dec
movsl
sbb
push
or
cmpsb
adc
xor
inc
addb
jmp
inc
push
ja
sbb
hlt
inc
xor
add
sub
shlb
int3
das
call
and
xchg
xor
xchg
les
dec
insb
and
push
aaa
dec
xchg
and
fucom
pushf
or
cmp
adc
ss
mov
pop
mov
rorb
inc
dec
inc
cmpsb
mov
iret
dec
push
pcmpgtw
mov
or
in
inc
sub
out
lahf
adc
dec
mov
add
shl
sbb
mov
sahf
sub
nop
imul
test
cltd
daa
mov
mov
test
xchg
ljmp
test
cwtl
xor
dec
fs
outsb
mov
mov
cmp
leave
mov
std
inc
or
xor
dec
mov
insl
and
movsb
fmul
pop
inc
lret
dec
shlb
test
lds
dec
jl
leave
pop
repnz
dec
and
loope
push
aas
js
xchg
and
das
arpl
xchg
jl
call
adc
mov
loopne
fs
add
dec
outsl
push
popf
addl
rcrb
ja
xchg
push
sbb
subl
push
mov
sub
xor
dec
mov
insl
xchg
push
leave
xor
xchg
dec
nop
push
add
movsb
loop
dec
fstps
fldl
dec
mov
and
cmp
dec
cmp
imul
popa
sbb
add
inc
sub
or
inc
jge
pusha
outsl
mov
sbb
xchg
inc
push
mov
xlat
inc
popf
pop
adc
dec
js
testb
test
add
repz
cwtl
test
add
inc
add
and
lahf
cmc
inc
push
loopne
call
xchg
jne
out
shrl
pusha
xchg
xchg
cmp
xor
and
rorb
push
xor
sub
jbe
xor
movsb
pop
loop
and
adcl
bound
pop
mov
inc
in
jmp
adc
mov
push
repnz
aad
pop
mov
fstps
loope
or
imul
and
js
sbb
inc
inc
jb
in
pushf
cwtl
in
enter
or
test
and
repnz
out
xchg
lea
mov
push
les
pop
and
es
leave
push
xchg
rcll
insl
mov
lock
dec
aaa
jmp
mov
pop
sbb
inc
mov
ljmp
adc
dec
fisttpll
pushf
jo
mov
es
sbb
and
test
jno
dec
scas
pop
or
or
add
and
inc
or
push
add
pop
ljmp
and
inc
arpl
cmp
shll
out
add
dec
mov
clc
adc
jmp
imul
jle
out
fidivrs
push
nop
stos
or
int3
mov
mov
fs
pop
cwtl
adcb
mov
inc
cli
lret
xchg
or
sar
or
stos
lcall
shrb
adc
and
adc
inc
ret
inc
insb
inc
xchg
adc
push
add
in
test
cld
jne
and
movsb
into
push
bound
sbb
into
lods
or
mov
cli
lcall
xchg
push
hlt
dec
call
test
mov
sbbl
arpl
or
push
popf
call
out
enter
test
pushf
sub
js
es
repz
mov
inc
scas
int3
inc
fcompl
adc
dec
xchg
orl
inc
push
aad
xchg
in
xchg
mov
stc
adc
or
add
arpl
test
dec
dec
loopne
dec
in
push
lret
xchg
pop
ljmp
inc
add
sbb
xor
loope
cltd
mov
outsb
rolb
out
enter
aaa
mov
dec
sbb
dec
lcall
cwtl
stos
push
popa
nop
push
and
loopne
jb
icebp
aad
enter
mov
insl
adc
xor
push
lock
xor
jo
adc
or
mov
mov
fwait
xor
mov
sbb
stos
inc
cli
sub
mov
loopne
dec
mov
xor
bound
push
movsb
fs
fs
pop
loop
and
dec
mov
sbb
inc
stos
dec
out
xor
bound
mov
pop
scas
aaa
xor
cs
lret
sub
xchg
push
jmp
arpl
push
cwtl
scas
pop
jmp
int
mov
cwtl
rcrl
mov
and
sbb
jno
pop
loop
adcb
pushf
sbb
lds
adc
cli
fldcw
and
xchg
icebp
aad
xor
or
sub
shll
sub
mov
lcall
lret
std
outsb
movsb
or
push
bnd
adc
xchg
fldcw
add
or
xor
sub
xlat
loop
and
sbb
mov
inc
and
lock
in
or
inc
orb
lret
inc
and
outsb
mov
push
fadds
fwait
lret
cmp
rcrl
pop
or
jnp
xchg
mov
aam
sahf
dec
lcall
rcrl
mov
sub
jg
ss
add
shrb
jle
pop
js
xor
or
mov
pop
xor
adc
imul
dec
jmp
gs
fiadds
leave
inc
adc
push
mov
sti
imul
cmp
sbb
pop
stos
dec
mov
push
or
mov
scas
movsl
shll
pop
mov
mov
push
idivb
or
outsb
xchg
xchg
sbb
mov
xchg
pop
ljmp
cwtl
lahf
insl
test
stos
ret
and
shlb
test
pop
outsl
fisttpl
add
push
mov
or
jns
pop
add
rcll
imul
lret
or
or
test
jns
pusha
fnsave
stos
mov
jmp
stos
lret
and
rolb
sbb
and
or
sbb
into
mov
jmp
rorl
cmpsb
les
bound
cmc
das
add
mov
add
jge
ficomps
mov
jae
iret
filds
xor
popa
pop
test
leave
push
sub
inc
cli
xchg
xor
jne
ljmp
cwtl
fnstsw
mov
fsubs
inc
adc
loopne
out
fwait
sub
mov
lds
orl
iret
aas
out
das
test
inc
push
cmp
ds
test
add
inc
cmp
mov
mov
arpl
hlt
rorb
sub
push
std
mov
fildll
pop
rcrl
mov
repnz
cltd
mov
mov
in
popa
sbb
pop
arpl
bound
ret
jne
jmp
jae
bound
fs
pusha
dec
test
mov
xchg
punpcklbw
rcrl
dec
xlat
cmp
jb
mov
mov
inc
mov
push
jne
or
adc
enter
pop
lea
stos
cmpsb
jnp
inc
sub
xchg
push
xchg
mov
mov
mov
inc
sub
and
and
mov
sbb
push
imul
lea
jp
aam
lret
dec
repz
xchg
jns
pop
lret
add
jg
mov
add
xchg
and
adc
cld
in
aaa
popf
test
xchg
rcrl
or
popa
xor
or
xchg
fldcw
xor
test
lret
inc
add
in
adc
mov
or
nop
jl
enter
ljmp
daa
fwait
lods
movsb
xchg
dec
push
lret
dec
inc
jne
or
scas
cmpl
adc
lods
jp
rolb
stos
ror
cmp
stc
cld
leave
pusha
iret
call
test
movsb
adc
push
xor
shll
stos
cs
ret
leave
test
inc
out
or
int
cmovnp
cmc
xchg
xchg
scas
dec
loope
mov
mov
icebp
add
sbb
iret
rcrb
cmp
pop
int3
shll
sbb
add
jae
nop
adc
into
outsl
dec
jle
sub
call
mov
lcall
fwait
lea
fstl
test
andl
jns
mov
push
test
inc
lods
or
add
jbe
aad
addb
mov
inc
iret
enter
or
mov
dec
xchg
sub
lods
add
lods
scas
std
popa
push
pop
fists
xchg
push
test
add
vpmovswb
xchg
loopne
or
push
or
add
inc
movsb
add
push
jbe
and
and
dec
cmp
out
jno
sub
ja
mov
mov
xchg
popa
jae
sti
push
adc
cmp
mov
jmp
xchg
orps
enter
adc
pushf
popa
pushf
xor
mov
push
fimull
and
xchg
cmp
lock
xchg
popa
xor
add
in
andb
pop
lods
push
mov
mov
jle
sahf
pushl
stc
imul
pop
aaa
inc
mov
mov
pop
rolb
add
xor
xchg
jp
daa
xor
iret
inc
lea
add
mov
leave
movsb
adcl
ret
in
push
mov
mov
insb
sub
clc
cld
xchg
mov
mov
cmpsl
cmp
stos
imul
add
push
test
enter
adc
pop
xor
adc
dec
mov
pop
push
icebp
pop
or
dec
jbe
mov
lret
in
rol
test
or
add
sarb
in
lock
sti
imul
stos
mov
imul
sbb
fs
imul
xlat
cli
and
push
dec
je
and
and
sahf
pop
out
jbe
xorb
adc
mov
pushf
adc
jp
shlb
leave
out
inc
icebp
xor
insb
sbb
stos
sbb
push
cmp
xchg
mov
int3
insb
sub
and
enter
pop
xor
or
push
jge
pop
testb
leave
adc
xchg
lret
add
mov
add
jo
movsl
pusha
sti
push
sub
cli
fildll
mov
dec
cmc
repz
sub
movsb
mov
aas
add
adc
test
jbe
and
lcall
xchg
out
rcrb
sbb
jo
pop
xchg
jnp
cs
pop
test
ds
andl
loop
dec
cmpsb
movsl
popa
roll
dec
xlat
xchg
insb
cli
add
adc
mov
jno
lcall
cmpsl
pop
lcall
adc
ss
adc
dec
rcll
jmp
push
cmp
cmpsl
xlat
bound
cmp
and
cli
xchg
arpl
prefetcht1
leave
xchg
les
sbb
lods
into
int
pop
pop
int3
xrelease
pushf
adc
shlb
add
or
es
in
je
out
push
mov
adc
cmp
test
fdivrs
xor
test
mov
mov
int3
push
ret
rcll
cltd
orb
add
loope
adc
hlt
jl
lods
xlat
sbb
pusha
mov
mov
test
mov
pop
mov
sbb
cmpsl
decb
addr16
sub
xor
dec
sbb
or
and
dec
sbbb
clc
mov
cld
insb
lahf
mov
pop
sub
push
xchg
stos
inc
inc
mov
sub
lcall
bound
xor
add
dec
mov
test
imul
jecxz
rorb
xchg
push
mov
lea
test
sub
stc
nopl
mov
xor
sbb
pushf
cmc
rorl
pop
push
lea
es
inc
scas
cmp
add
xchg
repz
cmp
dec
sbb
pusha
push
test
mov
add
xlat
mov
loop
xor
mov
add
add
and
pop
ja
enter
add
and
fs
add
scas
scas
xchg
push
xchg
aam
lcall
push
fildl
mov
inc
inc
fwait
testl
sub
js
call
rorb
outsb
jnp
mov
or
stos
add
cmp
cmpsl
push
sbb
test
cmp
and
dec
jnp
insb
add
repz
dec
in
icebp
xor
out
outsl
mov
andl
popa
xor
jmp
pop
mov
fwait
jl
sbb
adc
cli
push
jg
out
or
repz
roll
lods
nop
push
inc
jl
sbb
sub
mov
sbb
mov
mov
xchg
or
test
fwait
mov
insb
repz
dec
stos
and
mov
add
sbb
sbb
mov
cli
or
cmc
jp
ljmp
inc
sub
xor
and
push
adc
mov
mov
xor
cwtl
orl
in
enter
call
adc
in
data16
inc
out
and
push
ja
out
cmpsl
mov
mov
loope
mov
call
add
inc
mov
lcall
test
orb
push
ret
jne
leave
xlat
gs
mov
xor
cmp
hlt
and
popf
jmp
leave
ficompl
mov
bound
sbb
xchg
fnstcw
sub
cmp
or
test
mov
dec
xchg
dec
pushf
test
test
sub
lcall
inc
inc
je
sbb
fsub
sub
mov
and
mov
psllw
test
stc
xchg
pop
pusha
push
xchg
cmp
movsb
loop
xchg
mov
dec
dec
cmc
adcb
adc
lock
sub
mov
sbb
in
xor
test
and
test
push
push
mov
arpl
pop
cmovl
test
arpl
dec
mov
mov
lret
mov
sarl
leave
popf
outsb
jbe
cld
insb
sub
sbbb
rcrb
sbb
and
cli
inc
xchg
outsl
dec
mov
and
xor
cmp
arpl
pop
or
pusha
mov
xchg
or
gs
pusha
pop
mov
pop
daa
xchg
les
xchg
negb
add
xchg
js
daa
jns
xchg
decl
adc
les
fnstcw
rorb
jb
dec
xor
mov
cmp
cs
enter
mov
mov
sub
inc
rcr
jne
gs
inc
xor
jne
hlt
push
movb
mov
jns
repnz
push
push
lock
mov
ds
daa
pop
pop
mov
fdivrs
loop
dec
pop
fldcw
jl
popl
fstps
insb
sbb
cld
in
sahf
and
nop
ss
jno
mov
cld
jmp
push
bound
sbb
sbb
lea
call
mov
xchg
adc
insl
xor
shlb
and
ror
mov
test
lcall
movsb
arpl
subb
inc
xor
dec
xchg
sbb
cltd
pop
jecxz
das
mov
adc
and
xor
jge
sub
or
dec
lods
adc
popf
or
in
jne
in
mov
dec
push
aaa
sub
push
jne
stos
or
push
loopne
mov
sub
or
xchg
iret
das
aas
sbb
push
xor
testl
inc
push
inc
fadd
and
repnz
in
scas
xchg
xchg
push
aaa
or
stc
push
mov
idiv
or
mov
jne
adc
repnz
bnd
mov
call
jae
dec
push
jg
test
mov
sti
adc
and
push
xor
mov
lock
jg
into
mov
xchg
xchg
es
pop
sbb
out
add
mov
mov
cli
shrl
jl
popf
bswap
push
jle
or
mov
popf
ret
dec
inc
dec
jnp
xchg
into
push
xor
lcall
out
pop
aaa
push
out
mov
aam
mov
dec
inc
push
adc
dec
rcrb
roll
lock
mov
and
in
sbb
pop
push
mov
ja
xor
xor
mov
pop
rorl
pop
enter
add
std
inc
popa
aad
cmp
ljmp
leave
cmp
lahf
add
pop
inc
in
bswap
or
push
sub
mov
adcb
dec
mov
cmovge
and
jle
pushf
inc
push
add
and
sarl
mov
jno
loope
dec
xchg
jl
dec
pop
daa
inc
sbb
jp
pop
roll
pushf
int
daa
mov
adcb
sub
sbbb
loop
or
jecxz
and
jb
mov
dec
pop
add
xchg
imul
sbbb
sub
sub
jp
sbbl
pop
insl
push
dec
nop
xchg
mov
pop
das
verr
xor
sbb
test
mov
sbb
xchg
add
arpl
loopne
pop
mov
or
mov
mov
adc
inc
cmp
jno
loopne
and
cmp
fwait
xor
into
adc
sarb
sbb
call
loop
xchg
mov
movsl
sub
adc
es
pop
xor
jno
in
push
dec
into
mov
loopne
push
adc
aaa
jb
xchg
mull
push
jp,pt
aas
sub
xlat
int
adc
mov
and
dec
hlt
aad
jge
jg
pusha
pop
xchg
pop
shlb
or
cs
shlb
enter
xlat
xchg
and
nop
adc
jg
adc
push
dec
rcrl
adc
jb
mov
xchg
lahf
mov
jno
sbb
dec
scas
push
vmovlps
mov
cmp
pusha
dec
cmpsl
dec
int3
ss
addb
mov
aam
dec
xchg
jp
cmp
orb
out
rolb
add
sarb
sub
ret
or
stc
cmc
popa
les
testl
imul
fcom
inc
dec
pop
or
mov
aad
mov
test
rorb
icebp
shll
hlt
nop
cmp
lahf
or
jne
add
ss
cltd
dec
or
pop
daa
xchg
jae
dec
les
add
sbb
push
lds
mov
sarl
cmp
xchg
aam
sbb
es
in
stc
ja
and
mov
add
imul
das
stc
push
cmp
stos
scas
sbb
icebp
add
pop
lea
add
cmp
shrb
and
push
xchg
pop
out
les
and
jecxz
cmp
cwtl
gs
mov
and
movsb
inc
inc
int3
inc
frstor
dec
fdivl
imul
jmp
push
xor
in
mov
rcrl
xor
sarl
enter
xor
mov
jae
shr
lods
add
xchg
push
add
mov
and
jno
fwait
adc
add
addr16
stos
jno
inc
mov
mov
xchg
dec
nop
add
sbb
fsubl
inc
push
roll
push
repnz
lock
dec
pusha
add
cltd
push
movsb
or
push
inc
mov
shlb
push
in
ret
std
sahf
nop
inc
ret
add
push
add
sbb
arpl
mov
and
mov
dec
cmpsb
aam
shlb
pop
add
pop
imul
xchg
and
push
lods
or
in
ljmp
add
and
mov
or
aas
xchg
repz
inc
or
sub
or
add
sahf
xor
or
mov
jbe
add
stc
ljmp
mov
or
xor
jb
mov
add
cmc
xlat
ret
cmc
pushf
mov
push
add
cmp
pop
les
movsb
stc
subb
and
fisttps
imul
int
xor
out
popa
or
jmp
fs
and
sub
cmp
adc
xchg
dec
inc
or
notl
mov
push
les
push
rolb
adc
inc
xor
mov
jbe
loop
mov
pop
in
inc
push
imul
xchg
add
xchg
inc
js
gs
xchg
fadd
insb
ret
inc
lret
jns
mov
pusha
pop
sub
dec
xor
add
cli
jo
lcall
rclb
stos
dec
inc
lods
mov
add
mov
inc
add
xor
mov
and
xor
rorb
xor
test
pushf
in
xchg
or
and
bound
xchg
insb
sahf
mov
test
and
cmp
sub
loopne
sub
xor
and
sbb
aad
jne
pop
and
cmp
adc
push
mov
gs
bound
insb
call
cmp
pop
inc
pop
je
xchg
or
push
test
aam
cmp
sbb
je
loop
mov
xor
sub
jp
xchg
pop
ds
jo
sbb
and
inc
out
and
fisttpl
aam
inc
hlt
arpl
push
cmp
bound
cmc
add
mov
push
loope
aad
sub
push
mov
ss
sbb
or
xor
mulb
pop
mov
mov
sbb
pop
xchg
pusha
inc
in
or
divb
sub
mov
adc
fs
mov
js
add
mov
rolb
mov
hlt
cltd
add
mov
jnp
hlt
or
pop
cld
push
mov
sahf
test
stos
aam
xchg
adc
iret
and
scas
shlb
mov
cmc
xchg
dec
dec
aam
sbb
rol
and
test
sub
inc
iret
enter
add
fst
jno
jle
pop
pop
mov
or
js
push
in
dec
jo
cmpsb
dec
dec
test
pop
bound
adc
and
inc
dec
pop
outsl
in
leave
push
addl
in
push
push
icebp
or
dec
icebp
lea
or
leave
gs
mov
orl
pop
mov
sbb
mov
pop
pusha
addr16
mov
int3
adc
dec
xlat
xchg
xchg
jnp
sub
frndint
pusha
jae
mov
jne
loopne
mov
ss
sub
or
popf
jl
insl
jmp
sub
mov
adc
pop
movsb
lods
pop
push
mov
push
stos
repnz
sub
mov
cmp
int
dec
outsl
aad
mov
dec
test
and
les
sub
and
jnp
xchg
fwait
push
push
loop
js
loop
sbb
mov
jae
outsl
sub
outsl
mov
mov
rclb
pop
inc
cmp
dec
mov
pop
sbbl
dec
dec
push
sub
jo
orl
nop
cmp
js
jecxz
pop
scas
fwait
jno
sub
push
pusha
jne,pn
ret
pop
es
loopne
dec
rclb
push
test
adc
push
or
mov
fcompl
push
xchg
sbbl
jnp
cmp
pushf
cmp
jno
pop
xchg
popf
addl
popf
sarb
pusha
pusha
xor
adc
and
pop
cs
add
adc
fcompl
adc
mulw
fwait
loop
add
push
push
or
pop
outsb
scas
out
xor
shll
icebp
pushf
shrl
push
inc
dec
lahf
push
jle
je
add
xor
xchg
pop
jb
jns
xlat
test
adc
or
mov
adc
mov
or
jnp
mov
mov
mov
aad
loop
mov
rorl
arpl
or
daa
inc
push
daa
mov
jbe
addl
add
mov
or
or
shl
jmp
pop
mov
sarl
fwait
mov
push
sbb
lahf
mov
adc
into
cwtl
enter
xchg
or
add
sbb
sbb
lods
push
lds
xchg
mov
xchg
add
bnd
cmp
pop
xchg
fbld
cmp
popf
xchg
call
popf
mov
arpl
inc
inc
push
lahf
sbb
or
xchg
or
sti
shrb
hlt
repnz
xor
jge
and
out
mov
daa
addb
inc
and
js
in
xor
dec
or
jg
orl
xchg
cli
jge
sbb
repnz
mov
and
and
mov
jecxz
xchg
aas
fsubrl
or
popf
mov
jns
daa
xchg
nop
mov
and
adc
repz
sub
add
sbb
rolb
or
xor
aam
movsb
loop
xchg
fdivrl
sub
xchg
lahf
inc
fldt
movsb
adc
adc
cmp
inc
cs
enter
lret
cmp
je
imul
test
inc
xor
add
nop
in
iret
outsb
sub
or
add
jb
mov
test
mov
sub
mov
inc
andl
lret
dec
push
sbb
notb
mov
inc
inc
int3
fcoms
sbb
xchg
pop
ret
xor
loopne
and
pop
adc
imul
es
icebp
pop
movsb
dec
subb
dec
push
mov
add
jge
push
lcall
imul
adc
and
pop
pop
sbb
adc
lock
loope
iret
dec
mov
cwtl
lock
fisubs
jo
sub
lret
andb
fists
int3
cs
push
jp
jnp
dec
pop
jo
repz
mov
xchg
add
xor
or
hlt
enter
mov
imulb
loopne
mov
adc
dec
mov
in
lods
jle
xor
sahf
xchg
pop
ret
pop
and
jp
sbb
pop
jne
fmull
cmp
pop
jmp
push
mov
jne
xchg
cmp
add
dec
ret
loop
cmp
push
arpl
lock
hlt
pop
dec
test
xorb
in
test
repnz
inc
loop
inc
test
inc
cmp
mov
sbb
mov
mov
xor
inc
xchg
scas
sbb
enter
sbbl
shrl
sub
and
cwtl
inc
xchg
sbb
or
cmc
sbb
fbld
lds
add
inc
sub
rorl
xchg
xchg
insb
push
cmp
test
jl
mov
push
sub
scas
dec
sub
test
jle
jns
jno
aaa
daa
jl
fs
daa
or
into
lahf
int
test
lret
ds
cmpsb
mov
add
mov
or
or
push
sub
lea
pop
sbb
insb
arpl
sbb
pop
aas
add
push
cld
add
shlb
pop
clc
ja
fwait
xchg
mov
andb
cmc
cmp
subb
lcall
inc
jmp
xchg
cmpsl
and
and
mov
jno
jo
imul
lock
inc
ja
std
adc
mov
stos
fstps
and
fs
mov
xchg
pop
ret
shlb
add
push
sbb
fs
and
pop
mov
aad
cmp
cmc
sbb
cmpsl
fsubl
imul
add
xchg
rclb
add
pop
movsb
adc
shlb
sbb
lret
ret
mov
mov
rcl
popa
cli
xchg
jo
xchg
sti
addr16
adcl
dec
or
jmp
mov
fists
mov
scas
jl
repnz
jne
cmp
or
inc
and
test
mov
cmp
rorb
adc
xchg
les
sub
push
mov
add
adcb
or
add
enter
mov
rolb
outsb
add
out
inc
sub
adc
sub
xchg
pop
xchg
adc
stos
and
dec
ja
pop
add
adc
mov
lods
rcll
inc
inc
pop
popf
pop
aad
sbb
lock
xchg
cmp
lock
cwtl
or
sub
jae
je
push
cmp
xchg
popf
pop
daa
xchg
cmpsb
stos
test
and
mov
cmp
lds
xchg
mov
sbb
into
xchg
fdivrl
xchg
add
xchg
leave
movsb
or
daa
sbbb
push
dec
test
sti
lret
mov
xchg
mov
fmuls
rcll
test
inc
sub
dec
imul
popa
dec
xchg
and
mov
sub
mov
fsts
lock
adc
push
adc
movsl
cmp
pop
pop
dec
jmp
inc
push
cmc
js
push
pusha
jp
test
jo
adc
fs
push
jmp
mov
xchg
inc
daa
les
mov
or
pop
cmpsl
test
fwait
push
pushf
in
pusha
and
sbb
and
cmp
sbb
ja
push
push
ret
sbb
pop
adc
or
jle
sub
sub
pusha
push
leave
inc
les
push
mov
or
mov
in
je
fimull
push
mov
sbb
or
dec
pop
imul
outsb
jae
push
or
fs
inc
pop
shlb
push
inc
rclb
xchg
add
mov
sbb
adc
pop
pop
les
inc
loopne
lea
jmp
pop
ret
cli
addr16
dec
and
adc
add
cmp
repnz
addr16
scas
cmp
inc
jnp
into
xchg
pop
mov
in
ds
fadds
rclb
xor
les
test
adc
xchg
lea
and
push
adc
xchg
cmp
shrb
in
xchg
or
cmp
pop
fsubs
mov
and
or
test
push
xor
dec
dec
aam
adc
push
repnz
push
mov
jns
int
add
lcall
and
js
std
dec
popa
cmp
sbb
pop
movsl
jns
les
pop
lock
or
js
sbb
lret
mov
lcall
iret
dec
cmp
test
mov
mov
or
push
popf
pop
mov
sub
dec
pop
les
mov
ret
cmpsb
pop
les
cmpsl
sti
loope
mov
stos
lret
pusha
adc
insl
stos
dec
ljmp
and
data16
sahf
ljmp
js
hlt
adc
data16
sbb
inc
push
js
jns
out
addl
push
xlat
pop
xor
lea
cmp
bound
insb
dec
aad
loope
or
mov
hlt
add
pop
daa
jb
mov
fistl
mov
sar
pop
sti
sub
sub
mov
and
call
lods
rcr
jno
ljmp
addr16
pop
sbb
xchg
jmp
inc
mov
jge
push
cmp
cmp
mov
xor
mov
mov
in
andb
stos
fstpt
pop
rcrl
mov
mov
or
shrb
pushf
rcll
loop
or
iret
jae
dec
jle
repnz
or
loop
jp
shll
stc
js
push
cmp
and
repz
and
push
dec
fsubl
cmp
xlat
pop
ficoml
sbb
imulb
in
rcrb
xchg
inc
outsl
xor
and
jb
xchg
push
push
add
pop
nop
fistpll
adc
aaa
das
and
dec
xor
mov
or
nop
lea
repz
mov
push
sub
xchg
lods
lahf
sbb
ror
adc
arpl
in
mov
addb
rcll
mov
push
jl
out
sbb
xor
pusha
cmc
and
or
jne
test
std
rcll
mov
enter
imul
xor
roll
cmp
jne
pop
or
mov
jo
shll
inc
adc
xor
jg
out
sarb
cmpsb
lcall
dec
or
push
sbb
push
dec
mov
lret
sub
push
inc
rcl
fs
push
sbb
pop
sub
je
or
dec
cli
cmp
lcall
in
xchg
popf
ss
fldt
mov
popa
inc
movsl
mov
xor
push
mov
daa
inc
test
lret
fcmovnb
sub
mov
adc
dec
mov
pop
adc
call
dec
sbb
dec
xchg
pop
mov
and
cld
add
mov
inc
adc
or
push
mov
insb
fwait
cmpsb
sahf
cmovs
pop
clc
enter
jno
shll
lea
shll
mov
sbb
adc
shlb
mov
rorb
loope
pushf
xlat
dec
dec
xchg
xchg
out
inc
inc
mov
call
int
xor
fcmovb
or
fisubrs
test
push
and
cmp
aad
sbb
sti
add
cmp
movsb
cmpb
inc
js
call
cmpb
popf
pop
dec
shlb
xchg
add
push
push
andb
jl
leave
das
dec
ds
push
push
stos
pusha
enter
fstps
mov
inc
jge
stos
lock
les
mov
ljmp
cmp
adc
jb
vpunpckhbw
adcl
sbb
push
fsts
and
xchg
aad
addr16
inc
mov
push
adc
popa
or
jecxz
push
loopne
outsl
jb
mov
jecxz
lahf
arpl
dec
mov
popa
insl
sbb
push
inc
ficompl
xor
jecxz
cmp
sbb
lret
jle
jns
pop
dec
nop
or
icebp
aad
cmc
jl
dec
ljmp
cmpsb
mov
pop
or
mov
adc
cmpb
xor
rclb
int3
adc
jno
add
fstps
push
lahf
cwtl
xor
adc
das
jle
fldenv
orb
xlat
insb
push
push
imul
push
cwtl
sbb
cld
test
rorl
jb
out
push
std
mov
fs
push
push
shll
xor
out
fldcw
mov
aad
sbb
shrl
mov
and
fcomps
adc
pop
or
push
mov
cmc
mov
js
arpl
lret
int
sub
jl
mov
data16
inc
out
inc
popf
xchg
fistps
addl
ss
pushf
pop
mov
push
sbb
mov
jge
pop
push
sarb
push
ret
jnp
dec
mov
dec
pop
repnz
sahf
repnz
dec
jbe
jmp
pushf
mov
adc
scas
sub
jno
idiv
lods
adc
ja
movsb
sar
push
xor
xor
repnz
add
push
nop
mov
cmp
xlat
int
subl
jge
push
xchg
cli
and
cmp
xchg
sub
pop
xchg
nop
and
push
mov
pusha
dec
mov
fldenv
aas
add
shlb
fmuls
lds
xchg
ffreep
sub
call
pushf
dec
add
hlt
push
dec
push
sub
mov
pop
cmp
das
xor
rcr
fdivl
pop
inc
hlt
xchg
or
stc
stos
sahf
push
pop
push
push
repnz
out
add
scas
ficoml
into
gs
jecxz
xorl
inc
cmc
leave
imul
inc
lahf
lods
bound
sbb
inc
imul
or
adc
mov
jmp
out
add
pop
cmp
addr16
add
pop
je
ret
psubsw
in
in
push
mov
xchg
or
adc
xor
lret
insl
nop
add
inc
in
scas
lcall
loop
in
jl
dec
aad
cmc
loope
push
jmp
mov
push
sbb
mov
cmpsl
add
jo
push
push
xchg
popa
lahf
adc
xor
xor
pop
add
pop
in
es
inc
stos
ret
push
adc
orb
xchg
pushf
inc
xor
stos
sub
mov
sub
rolb
ja
or
push
inc
dec
mov
sbb
push
ret
shl
xchg
js
lock
mov
adc
jmp
mov
mov
outsl
pop
dec
xlat
mov
xchg
or
pushf
or
lods
fisubs
push
push
pop
das
add
mov
push
and
imul
cmp
das
sbb
jno
xchg
in
xor
mov
push
ljmp
or
dec
and
xor
andl
xchg
sbb
orl
jle
imul
sbb
pop
jnp
or
dec
mov
xchg
shl
clc
bound
pop
lock
xorb
xchg
mov
push
in
mov
xor
pop
jmp
adc
pusha
xchg
or
or
daa
arpl
dec
sbb
dec
push
sub
or
sub
xchg
out
inc
add
shr
pushf
mov
mov
into
pop
push
iret
sahf
in
aaa
xchg
ret
mov
cld
mov
fs
dec
ret
in
stos
adc
packuswb
sbb
mov
push
xor
push
stos
sahf
mov
test
adc
xchg
xchg
mull
jl
add
nop
mov
and
xchg
adc
repnz
mov
inc
adcl
bound
scas
inc
sbb
nop
sub
and
pop
fcomip
rclb
gs
leave
test
and
jo
cli
movsl
cmp
mov
movsl
sub
push
aad
arpl
adc
je
mov
js
push
jno
cmp
icebp
jmp
mov
push
push
ret
or
shlb
sub
and
adc
aad
lods
loop
push
data16
ret
and
out
or
mov
push
mov
mov
aad
push
push
xchg
cmp
sbb
pop
adc
fstps
and
subps
push
lods
in
inc
push
je
jle
xchg
push
cmp
add
in
push
insb
jle
fdiv
rcrb
mov
fiaddl
sub
mov
fcomps
movsb
sbbl
or
or
and
hlt
jnp
sbb
inc
fcoml
mov
fidivrs
loop
and
cs
ret
dec
rolb
dec
shl
rol
or
dec
or
loope
mov
addr16
mov
jl
adc
pushf
dec
out
sub
sbb
movsb
sub
xchg
pushf
xlat
pushl
and
aas
sub
addb
add
lods
push
loop
and
jl
stc
xchg
scas
mov
call
inc
test
xor
popa
popa
shll
dec
dec
cmp
mov
mov
sbb
adc
js
sbb
data16
aas
and
fwait
sbb
dec
mov
bound
and
nop
inc
repz
inc
testb
jo
mov
and
test
shrl
sbb
arpl
push
notb
popa
xorb
mov
addr16
test
dec
add
mov
push
dec
mov
rorb
or
mov
mov
xchg
sarb
dec
mov
loopne
pop
jge
mov
hlt
and
inc
dec
or
cmp
bnd
jecxz
push
jge
push
int
mov
test
dec
lock
xchg
xor
push
push
add
mov
sbbb
fs
fsubs
and
add
xchg
hlt
fwait
sbb
ret
push
push
push
mov
sbb
loope
sub
repz
lods
push
fistpll
fs
das
sub
mov
cmp
pusha
or
push
and
cmp
jb
loopne,pt
ljmp
cmp
or
and
divl
xor
and
push
fwait
adc
mov
and
bound
mov
xchg
test
mov
cmp
jno
rcll
movsb
xlat
in
aam
cmc
dec
pop
rcrl
sub
inc
aad
pop
push
mov
dec
and
jmp
add
mov
mov
outsb
xor
cmp
notl
push
in
pop
sbb
adc
in
movsb
mov
enter
test
inc
daa
or
popa
push
xor
pop
pop
xor
scas
adc
xchg
sbb
test
adc
mov
jecxz
mov
ret
call
xor
push
rol
inc
ja
cmpsl
jge
inc
orb
push
lea
cld
stc
dec
xor
pusha
lock
sbb
pusha
nop
iret
js
xor
je
fsts
mov
adc
stc
inc
mov
jecxz
jns
les
cld
jecxz
cld
ljmp
mov
mov
cmpsb
mulb
cmp
mov
dec
push
jno
adc
cmp
dec
fadds
out
xor
or
popa
add
pop
int3
add
or
dec
sub
mov
jg
inc
les
aam
outsb
insl
add
jno
pop
mov
shlb
mov
mov
or
add
enter
loop,pt
add
leave
out
lods
sbb
lods
mov
out
out
mov
js
xor
xor
cmp
in
mov
push
repz
cmp
aam
jmp
andl
test
addl
add
pop
rcrl
push
add
xor
xchg
jp
adc
xchg
fs
add
sub
xchg
sahf
xchg
and
inc
mov
add
pop
jb
nop
pop
lock
push
test
dec
xor
inc
fadds
and
mov
mov
or
lahf
mov
sub
fmuls
ds
push
push
repnz
xchg
loop
in
jbe
inc
stc
or
add
and
popf
dec
test
sub
ret
cmp
loopne
outsl
push
xor
mov
loop
jb
xor
in
jecxz
push
dec
insb
daa
or
add
repnz
sub
roll
ljmp
sub
fstps
fmuls
or
std
into
mov
pop
jg
mov
addr16
fxch
mov
stos
test
inc
mov
or
pop
std
idiv
les
jo
arpl
sbb
xchg
scas
mov
inc
cmpsl
pop
rcll
mov
and
subb
inc
jecxz
mov
call
test
sbb
cmp
icebp
xchg
or
xor
push
mov
daa
and
jno
sub
sbb
cmp
sahf
adc
es
movsl
mov
sub
push
add
dec
xchg
xor
adc
and
mov
xchg
push
cwtl
aam
or
sbb
xor
pop
xor
cmc
int3
or
pop
pop
loop
cmp
cmp
xchg
xchg
ds
sarb
aaa
pop
sbb
in
sub
xchg
jno
out
dec
xorb
popa
push
add
mov
in
and
dec
mov
pusha
inc
mov
adc
add
mov
mov
jb
xchg
cli
cli
push
sbb
pop
adc
jg
pop
xchg
dec
push
mov
jmp
xchg
add
sbb
loop
mov
add
sub
xor
inc
mov
cmpsb
adc
rolb
xchg
xchg
add
xchg
cmpsl
js
push
xchg
shl
cmp
and
loop
mov
je
imul
pop
pop
or
sbb
gs
xor
sub
mov
sbb
jp
xchg
mov
fbstp
test
imul
push
push
cmp
icebp
lock
imul
inc
jp
icebp
dec
rcl
data16
inc
dec
adc
mov
das
sub
add
rolb
add
ds
dec
mov
stc
sti
and
int3
push
push
add
inc
clc
aaa
inc
iret
call
out
push
push
inc
cs
decl
je
or
aad
and
xor
push
mov
mov
adcl
je
push
jecxz
and
push
sbb
loope
mov
push
insl
rclb
push
adc
cmpsl
pop
xor
push
push
inc
rorb
jle
lods
nop
push
shll
loop
xor
pop
push
inc
sbb
lcall
hlt
add
mov
mov
adc
or
mov
loope
shrl
ret
popf
out
mov
jge
mov
mov
mov
pop
mov
jl
ljmp
repz
aad
imul
out
movsb
daa
cmp
push
or
and
push
xor
sub
sub
fadds
and
sbb
cmovle
in
push
sbb
mov
nop
lret
or
inc
or
mov
and
jl
and
cmpb
sub
inc
cs
xchg
and
or
iret
out
jmp
es
jno
mov
daa
dec
cmc
pop
test
notb
insb
imul
nop
inc
repnz
cmp
add
mov
sbb
jne
fildll
addl
addl
inc
mov
imul
xchg
lods
out
inc
and
and
es
js
jl
mov
mov
js
mov
and
and
ds
inc
sbb
sbb
nop
es
daa
aad
pop
sub
cltd
xor
popf
out
add
jmp
pop
dec
dec
leave
xchg
lods
gs
cmc
xchg
pop
mov
les
add
add
mov
push
int
mov
fcoml
sbb
enter
fldcw
mov
pusha
aam
test
xor
inc
addr16
pop
or
les
pop
roll
ret
mov
popl
xor
push
pinsrw
lea
inc
fs
inc
aaa
xchg
sbb
adc
in
mov
sub
add
push
lret
jb
aam
adc
xchg
cmp
loopne
add
jg
sbb
stos
sub
arpl
enter
add
or
test
push
mov
pop
nop
sub
xor
sbb
mov
rorb
inc
mov
sbb
jae
mov
jmp
mov
sahf
fs
xor
xchg
or
add
xor
out
xor
addb
and
inc
leave
inc
adc
xorl
inc
aas
loop
rclb
fisttpll
adc
xchg
cmp
loopne
sub
xchg
into
mov
test
mov
mov
stos
movl
xor
xorb
pusha
push
mov
sub
andl
orb
and
mov
jle
inc
test
adc
lcall
ret
pusha
jmp
add
outsl
and
xchg
or
and
rcrb
xor
rorl
mov
dec
stos
in
mov
das
movsb
movl
ficomps
fidivrs
pop
xchg
jo
insl
xchg
stos
adc
dec
pop
adc
push
add
addl
movsb
out
and
xchg
or
insl
popf
sbb
or
lret
xchg
sbb
mov
pop
mov
xor
xchg
addr16
sbb
lret
ljmp
hlt
mov
push
cmp
popa
insl
and
movsb
dec
movsl
fstl
push
jmp
ret
xchg
loope
adc
inc
jecxz
xchg
add
mov
fwait
sub
xor
nop
aam
mov
pop
push
enter
mov
xchg
aad
dec
arpl
fsubs
negb
add
mov
mov
sarb
xlat
mov
clc
mov
push
insb
xchg
mov
loopne
jno
mov
fdivrs
mov
mov
add
orb
mov
mov
and
or
jno
int3
and
lret
lcall
dec
sarb
arpl
aam
insb
and
mov
inc
jge
in
testb
or
jnp
jecxz
insl
pusha
mov
mov
xchg
xorl
pop
inc
dec
or
test
or
jmp
xchg
push
jp
fnsave
lods
pop
fcom
andl
loopne
std
adc
lret
jmp
jno
into
adc
pop
sbb
adc
cmpl
or
add
dec
aam
gs
cmp
sub
shl
dec
lcall
out
sbb
and
lds
add
pop
jmp
inc
mov
sub
or
adc
test
mov
adc
sub
inc
lcall
sub
mov
iret
xchg
sahf
pop
xchg
fs
xchg
pushf
test
repz
or
jmp
stos
pop
push
mov
sbb
xchg
test
and
test
xor
aad
arpl
loope
stc
aaa
shl
test
mov
push
and
aaa
adc
mov
mov
daa
jp
push
rcl
add
outsb
mov
push
cs
leave
inc
out
cld
push
loop
fxch
pop
outsl
push
imul
jbe
lods
nop
sub
movsb
dec
adc
and
sub
dec
movsb
or
test
inc
subb
jp
lds
loope
enter
loop
or
int
adc
add
push
adcl
loope
cvttps2pi
popa
scas
mov
les
add
lods
mov
aad
in
sub
jg
outsl
push
icebp
mov
mov
pop
xor
adc
loopne
lcall
xor
dec
push
jns
add
cmp
lret
scas
sbb
std
lahf
xchg
lcall
dec
ret
xor
hlt
jno
popf
mov
mov
aas
xchg
or
cld
leave
scas
mov
xchg
ret
push
pop
arpl
filds
adc
add
daa
insb
adc
xchg
inc
cmp
add
lods
lods
nop
adc
xor
outsb
mov
or
and
mov
sub
daa
push
push
das
push
iret
xor
dec
xchg
sub
sub
lods
push
jne
loope
or
mov
lahf
xor
bound
and
and
roll
dec
dec
or
mov
movsb
movsl
pop
push
sbb
inc
push
pop
out
cmp
orb
call
xchg
jmp
outsl
and
pop
cwtl
aam
int
lret
bsf
dec
xchg
and
std
call
sbb
mov
and
pop
push
gs
inc
jl
insl
adc
mov
dec
dec
xor
or
subb
jecxz
cmpsb
movsl
xchg
sbb
ds
loopne
xor
inc
jp
dec
sbb
push
push
fmuls
sbb
push
pop
push
add
andl
pusha
add
sbb
rcrb
lock
sbb
xor
icebp
je
and
clc
cld
mov
mov
pop
sub
or
push
dec
pop
xchg
popf
sbb
lock
icebp
fwait
xor
push
cmc
cmpb
xor
adc
scas
jnp
nop
inc
pop
mov
add
lods
sarb
lahf
pop
add
push
lcall
add
adc
pop
inc
loopne
outsb
mov
pop
adc
jb
mov
xor
ret
out
or
mov
inc
jo
pop
loop,pt
xchg
sub
and
call
mov
lret
dec
roll
fidivs
mov
mov
arpl
jns
mov
es
dec
adc
lahf
cmp
push
or
jo
int
mov
divl
dec
cmp
sbb
lret
repnz
sbb
ret
clc
fidivrs
lret
loopne
pop
pop
sbb
mov
popf
int
mov
adc
pop
mov
sub
mov
xchg
test
in
inc
cli
clc
adc
jecxz
mov
xor
lret
mov
incb
popa
add
add
frstor
add
data16
je
test
push
popf
out
insl
xchg
pushf
icebp
and
daa
enter
or
ret
xchg
sbb
push
push
daa
adc
into
stos
cmpsb
rorb
or
lret
orb
out
mov
daa
mov
or
cmp
or
mov
add
pop
shr
fisubrs
movsl
scas
loope
or
rcrb
xchg
pop
loop
mov
xchg
dec
divl
inc
add
test
push
insb
adcb
aam
adc
test
rcrb
jo
dec
adc
sbb
test
pusha
xorb
xchg
adc
sub
int3
jp
sahf
or
fisubrs
pop
jnp
js
push
ror
xchg
adc
mov
mov
cmp
and
popw
popa
cs
sbb
ss
jle
jbe
cmp
lcall
jp
mov
jmp
or
cwtl
inc
lcall
popf
js
mov
inc
push
test
out
in
sbb
ja
aad
ss
std
fwait
hlt
ljmp
cmpb
cli
ljmp
and
push
push
adc
xchg
xor
cmp
inc
cmp
sub
jne
popa
sub
mov
add
rolb
pushf
xchg
xchg
enter
in
sbb
dec
fldcw
rcll
popa
or
inc
sub
and
mov
and
daa
cli
mov
leave
rorl
add
sub
fisubrl
dec
lods
into
sbb
lds
xor
invd
mov
xchg
lods
shrl
jns
inc
xor
inc
cli
cmp
dec
sbb
mov
mov
mov
inc
ljmp
subb
ljmp
cld
getsec
f2xm1
jo
inc
sahf
dec
jl
xchg
js
adc
mov
add
and
dec
test
inc
jns
or
and
fisubs
sub
hlt
bound
jecxz
dec
sarb
xchg
xchg
xchg
sbb
mov
mov
adc
pop
pop
mov
jae
lahf
xor
clc
inc
sbb
les
inc
xor
and
sub
jo
arpl
push
xchg
test
les
or
fldt
add
sbb
sub
into
push
push
xor
aaa
jl
outsb
insb
sub
adc
addb
jno
pusha
in
pop
pop
mov
pushf
and
mov
aam
out
sti
popa
push
popf
insb
sbb
insl
lods
sbb
shll
loopne
xchg
repnz
pop
cmc
shlb
xor
jo
add
push
mov
adc
aaa
scas
icebp
jl
xchg
mov
inc
loope
xor
xchg
xor
cmp
xor
dec
and
push
adc
mov
js
mov
pop
adc
test
jbe
js
aas
jns
mov
movsl
lcall
mov
lea
mov
pusha
sbb
cmp
movb
sahf
loop
dec
adc
jmp
ja
and
inc
ror
dec
bound
nop
aaa
xchg
rorb
inc
pop
leave
push
mov
mov
icebp
inc
sbb
pop
cmp
loopne
and
adc
fdivrp
dec
mov
test
lret
sbb
icebp
xchg
push
sbbb
lret
leave
ja
push
lods
pop
test
int
icebp
push
cmp
adc
lret
outsl
pop
xor
pusha
cmc
jae
xor
push
out
or
mov
dec
stc
add
lea
sbb
and
cmpsb
sub
and
inc
and
cs
push
xor
inc
mov
pop
dec
or
xor
push
decl
pop
xor
in
jb
andl
and
sub
ret
js
daa
push
dec
cmp
push
and
outsb
stos
cmp
push
lsl
rolb
mov
cld
mov
shlb
js
xor
jmp
push
ret
hlt
es
jno
dec
push
in
jo
rorb
jb
and
es
sbb
lods
lds
pusha
iret
adc
and
xchg
orb
ret
sub
sbb
push
push
mov
lcall
mov
jecxz
test
ss
mov
inc
loope
cmp
or
aas
inc
sub
addr16
or
je
retw
adc
pop
sbb
mov
cmp
out
cmp
les
repnz
mov
sub
xlat
mov
pop
movsb
inc
movsl
test
cmp
adc
outsb
cmp
lea
adc
inc
push
cmp
mov
int
jb
and
dec
mov
inc
jecxz
test
dec
jns
mov
sub
cs
jl
or
imull
jne
xor
or
arpl
fildl
popf
xorl
cmp
test
mov
icebp
nop
xchg
xor
xchg
push
jo
mov
movsb
xor
xchg
mov
data16
push
xor
addl
or
outsb
mov
and
mov
fs
jae
leave
add
xchg
fs
add
test
jne
das
subl
lcall
add
aaa
push
jl
mov
jns
mov
add
pop
cs
mov
and
adc
xchg
insl
xchg
xor
jae
jbe
xor
test
inc
cmp
ret
and
mov
insb
scas
push
adc
fldcw
sbb
and
mov
mov
in
push
mov
mov
popf
cltd
jecxz
mov
fnstenv
xor
adc
jns
ret
test
adc
insl
into
out
imul
push
xchg
bound
insb
sub
lret
loop
jno
movhps
je
add
sub
test
test
or
pop
xor
icebp
mull
xchg
sub
sbb
aas
mov
add
adcl
pusha
mov
nop
ficompl
mov
outsl
xor
sbb
lods
xchg
push
ret
adc
mov
orb
pop
lock
sbb
xchg
test
adc
sub
push
std
aad
mov
ret
in
shl
inc
dec
dec
ljmp
sub
mov
and
sub
or
xor
lods
scas
ljmp
xor
push
movsb
xor
fwait
pop
mov
add
sbb
and
sbbb
movb
std
repz
stos
add
nop
and
and
sti
or
sahf
dec
sbb
nopl
mov
nop
pop
pop
pop
mov
lea
dec
ljmp
jno
or
adc
shlb
ds
pop
js
push
pop
js
adc
sub
outsb
dec
aas
mov
mov
clc
adc
enter
mov
push
mov
lret
or
add
aam
dec
rolb
movsb
mov
mov
sahf
rcrl
push
mov
mov
add
sub
psrld
lock
dec
and
push
icebp
cli
arpl
dec
push
jl,pn
lcall
dec
shlb
sub
cmp
sub
inc
pushf
scas
or
insb
adc
adcl
arpl
jl
aam
imull
push
inc
test
repnz
pop
xchg
jbe
jge
rorb
pop
repz
enter
jg
sbbb
test
icebp
dec
adc
imul
jno
ret
pusha
sub
add
pop
jg
add
shll
popa
add
je
lcall
jno
xchg
mov
push
fdivrl
cwtl
aas
andl
lds
mov
sbb
fimuls
push
aam
cmp
and
xchg
pop
lds
push
push
lahf
popf
aad
mov
dec
adc
xchg
xchg
bound
adc
add
xlat
xchg
aam
xchg
jle
lcall
adc
js
lods
bound
sub
in
inc
ret
or
xchg
push
aam
arpl
jge
in
inc
push
cmpsb
mov
mov
cwtl
sbb
in
add
add
pop
pop
cmp
in
sub
and
dec
xlat
xor
aam
mov
clc
fsubp
mov
jae
sub
pushf
dec
push
pop
stos
mov
or
and
inc
adc
sbb
jg
popa
add
lea
push
sub
rorl
rcr
aas
sarl
or
cli
mov
nop
mov
dec
sbb
xchg
or
cmp
dec
shrb
cmc
test
xor
stc
fwait
jmp
nop/reserved
cmp
pusha
dec
ss
rorb
sub
dec
push
xchg
inc
push
mov
sbb
repz
outsb
push
cli
sbb
inc
ret
mov
mov
xchg
andl
hlt
repz
lret
test
and
mov
ja
stos
mov
rolb
inc
xlat
jp
std
dec
fwait
adc
idivb
cwtl
nop
cmp
sub
and
sbb
mov
push
pop
sub
arpl
mov
stos
stos
outsl
mov
and
rolb
jge
fadds
adc
adc
fsubs
or
movlps
inc
inc
ds
jecxz
stc
mov
in
pop
push
js
xchg
ljmp
shrl
xchg
sbb
pop
push
fcmovb
inc
cli
mov
xor
add
roll
fwait
adc
lds
fisubs
ret
loope
das
adc
sbb
push
inc
les
mov
jns
and
pop
sub
out
inc
addl
decl
bound
sbb
xchg
adc
jmp
push
xchg
pop
push
loopne
fbstp
sub
cli
lock
push
or
inc
lods
lds
cmp
mov
dec
lea
mov
xchg
inc
mov
scas
out
dec
sbb
mov
sbb
loope
xchg
adc
pushf
frstor
pusha
or
inc
jp
icebp
mov
xor
sbb
xchg
daa
jns
les
mov
loope,pn
push
and
and
xor
mov
add
roll
xor
int
adc
insl
sbb
and
clc
addl
inc
sahf
enter
mov
popa
cmp
fisubrs
inc
jge
fistl
test
mov
cmp
ret
data16
cmp
inc
in
and
pop
and
dec
pusha
testb
hlt
xchg
adc
mov
mov
fisttps
hlt
nop
sub
nop
push
in
mov
push
jb
rclb
lret
cmc
sbb
mov
cmpb
out
sub
inc
pop
dec
and
xchg
inc
mov
and
mov
push
mov
les
inc
xchg
cmp
xchg
jmp
icebp
lahf
clc
jecxz
cwtl
xchg
inc
test
imul
adc
mov
add
js
arpl
outsl
mov
repnz
pop
xchg
jp
in
gs
das
lcall
xor
xlat
cmp
inc
arpl
sub
cld
bound
iret
inc
in
popa
dec
das
jmp
push
mov
int3
loop
push
lret
repnz
out
pop
mov
outsb
and
sbb
push
xchg
leave
mov
shll
and
inc
lods
xor
popf
pop
cwtl
test
sbb
sub
aaa
aas
jbe
mov
cmp
movsb
cmp
int
inc
xor
sub
arpl
sbb
nop
shll
arpl
mov
xlat
adc
mov
repz
or
daa
mov
insl
add
in
sub
sbb
xchg
bound
jae
inc
aad
dec
push
cmpsl
imul
into
push
inc
add
je
lea
clc
fldenv
je
xorl
cs
and
into
push
sub
mov
add
enter
and
xchg
mov
addr16
lret
fistpll
adc
sub
ffree
push
out
stc
cmp
stos
and
sbbl
fwait
scas
mov
test
mov
jmp
ret
pushf
adc
rcll
fwait
stos
pop
and
movsl
pop
inc
push
cmpsl
jb
mov
cmp
add
push
dec
cmp
rolb
push
loope
xor
popf
xchg
push
push
mov
mov
add
sbb
mov
sbb
loop
int
loope
pop
test
stos
int
inc
jne
jl
mov
sbb
jne
cmp
es
xor
gs
pop
dec
ja
add
inc
jp
test
negb
sahf
in
pop
cmp
in
or
mov
insl
cli
pusha
pop
xchg
add
repz
or
mov
sub
int3
jle
mov
loopne
and
dec
xchg
mov
pop
or
and
int3
ffree
pop
dec
jp
pop
icebp
push
mov
pop
lahf
push
push
adc
adc
ret
pop
xchg
xchg
push
loop
mov
cld
test
dec
sub
pop
xor
push
mov
outsl
xchg
stos
and
shlb
cmp
or
xchg
movsb
mov
stos
add
bound
push
lods
js
sti
add
out
add
popa
inc
mov
mov
inc
aam
enter
xchg
inc
sub
lods
jg
cmp
aaa
repnz
mov
adc
mov
push
mov
push
lea
leave
rorl
mov
jo
insl
dec
dec
pop
xchg
push
xor
dec
push
mov
jp
inc
and
imul
mov
xchg
and
aas
jmp
imul
push
push
call
pop
lods
dec
dec
mov
and
out
sbb
pushf
es
or
and
addr16
pop
mov
push
pop
sbb
out
lods
dec
call
cmp
test
sub
push
dec
je
adc
inc
arpl
adc
push
cmp
test
imul
lahf
inc
inc
cltd
xor
xchg
xchg
jp
lret
scas
mov
add
enter
aam
add
mov
repz
aad
rcll
jecxz
mov
stos
xor
cmp
mov
jno
pop
call
nop
pop
add
push
jecxz
mov
test
pop
xchg
fcoml
in
jle
jle
adc
jle
jmp
mov
lock
jb
adc
push
hlt
rolb
div
or
dec
jl
test
jae
xchg
cmp
scas
out
cmpsb
pop
aas
add
push
push
mov
xor
xor
rcll
mov
add
mov
pusha
lahf
call
leave
xor
xor
inc
dec
imul
push
push
pop
xchg
jae
pop
adc
rclb
jge
and
and
xor
xchg
add
jne
scas
dec
dec
and
sbb
inc
cs
fcoml
popa
ljmp
out
add
test
or
xchg
fsubp
leave
ficoms
outsb
dec
lcall
sbb
pop
arpl
es
lods
and
cmp
inc
rcr
xchg
inc
and
inc
add
in
push
nop
mov
push
or
inc
pop
fadd
sub
adc
les
stos
loopne
aas
mov
test
inc
xchg
dec
mov
movsb
test
cmpsl
jnp
xchg
sbb
adc
adc
add
testl
dec
or
sahf
and
xor
in
mov
fmuls
inc
push
mov
fldenv
rolb
int3
shlb
andb
test
test
cmp
push
mov
pop
std
push
push
xchg
movsl
sbb
mov
shll
lret
loope
hlt
movsb
mov
lret
add
mov
stos
xor
insl
sub
push
fs
mov
and
sbb
jle
jp
leave
int
sub
imul
sub
inc
mov
sbb
push
dec
or
outsl
xor
out
xchg
adc
imul
stos
xchg
push
sbb
push
jecxz
insb
xchg
and
jo
cli
and
into
or
mov
fwait
sbb
jge
mov
jae
mov
push
test
clc
shlb
mov
and
gs
shll
xchg
sub
inc
nop
cltd
sub
icebp
lcall
and
sbbb
sarb
cwtl
pop
push
jmp
inc
repnz
data16
mov
je
pop
jbe
mov
and
sbb
pop
add
cs
jne
cmp
daa
adcb
and
cmp
gs
call
lds
movsb
dec
mov
inc
lahf
ljmp
and
xchg
push
xchg
rolb
rolb
xchg
or
sbbl
xor
inc
add
add
arpl
out
dec
std
inc
in
push
jmp
ret
pop
cli
das
sub
pop
push
and
cmp
popf
lods
push
lret
push
mov
scas
mov
nop
add
in
subb
stos
adc
xor
adc
scas
dec
cli
lock
daa
and
sub
or
addl
arpl
add
movsb
rcrb
clc
inc
mov
inc
push
cmp
dec
dec
or
or
js
popa
push
setl
fdivl
insb
push
out
mov
popa
rcll
jno
cmp
cmc
cmp
aam
push
add
add
fisubrs
adcl
sub
ficompl
mov
clc
inc
xor
pop
push
ds
sub
jmp
mov
jno
xorl
push
mov
xor
xchg
andb
mov
jne
pop
shll
push
or
stos
dec
stos
inc
push
es
xchg
das
inc
inc
enter
fsubr
adc
mov
add
dec
or
adc
jne
out
ljmp
push
add
leave
mov
push
add
adc
add
and
jmp
pop
sbb
out
orb
push
push
sub
push
mov
sbb
mov
nop
shrl
scas
jmp
cs
fsubrs
push
sub
xor
std
shrb
sbb
lods
xor
pop
les
inc
jno
push
push
scas
sbb
sbb
sub
dec
or
andb
test
loope
mov
shlb
lock
fs
ljmp
addr16
xlat
or
fiaddl
fcomp
rcll
sbbl
and
orl
loop
mov
jae
inc
es
dec
pushf
sbb
adc
adc
cmp
nop
inc
pop
sbb
and
ljmp
xchg
dec
sub
and
or
jno
push
lea
cli
mov
dec
sbb
and
adc
add
fucom
xor
sbb
and
xchg
nop
pop
lret
imul
enter
mov
and
popl
mov
in
popa
sub
mov
fwait
roll
sub
inc
xchg
adcb
or
adc
dec
ljmp
push
mov
push
mov
shll
add
das
sahf
nop
scas
ds
push
fiadds
mov
sub
andl
push
rolb
pop
js
inc
push
jns
aaa
and
sub
adc
inc
mov
daa
lea
mov
ja
dec
cmp
movb
fistl
and
mov
sub
das
cmp
ficompl
jge
aas
xor
xchg
ret
mov
or
cmpsb
nop
adc
dec
aam
popa
lds
mov
mov
ss
sahf
out
jbe
push
jmp
xor
push
inc
int
add
lcall
pop
pop
les
mov
dec
out
idivb
and
movsb
idivl
std
lods
addb
leave
xor
popf
xchg
fstpt
mov
jl
popa
mov
js
mov
sbb
adc
sbb
xor
or
dec
lea
and
adc
outsb
insb
and
jbe
out
jb
mov
ficomps
test
push
cmpsl
jge
test
pop
mov
ficomps
call
and
mov
mov
sub
shll
outsb
inc
std
outsb
in
testl
push
pop
inc
test
lcall
fsubrl
inc
xchg
icebp
dec
pushf
sub
mov
je
pcmpeqw
enter
aad
jno
sbb
outsb
jno
shl
and
mov
cmp
xor
popf
lcall
jno
mov
push
dec
mov
or
dec
aad
lods
mov
aaa
and
and
and
xor
xor
xor
pop
cs
or
xchg
scas
testl
insl
cld
xor
fstps
inc
cli
ds
xchg
sbb
call
enter
cmp
ret
adc
fmuls
pushf
push
jne
testl
aam
scas
pop
add
jmp
mov
je
mov
dec
addr16
out
xorb
shlb
xchg
mov
nop
pop
sbb
mov
xor
out
ret
mov
add
mov
sbb
mov
sbb
shl
pushf
addl
fiadds
inc
jecxz
xchg
mov
dec
cltd
push
cmp
jae
pop
push
mov
popa
mov
cmp
int
je
stos
add
cmp
dec
mov
cs
movsl
dec
dec
and
scas
and
push
inc
or
test
xchg
inc
push
test
push
add
adc
mov
or
shll
scas
mov
imul
add
pop
lea
mov
fcoms
shl
mov
bts
jp
push
mov
lea
sub
or
jno
mov
mov
mov
das
je
mov
adc
inc
in
es
cmp
mov
mov
and
test
push
push
icebp
push
loop
push
dec
mov
shlb
push
dec
js
adc
jo
int3
mov
jp
inc
mov
ljmp
add
xchg
test
cmp
mov
xor
jnp
and
add
pop
add
ret
hlt
jle
pop
mov
fstpt
sbb
jns
pop
push
mov
jno
add
call
aam
cmpb
aas
arpl
aam
lods
int3
pop
ljmp
and
pusha
mov
ror
das
loopne
mov
in
xchg
cmp
shrl
mov
mov
cmc
adc
fstps
in
adc
mov
je
inc
pop
or
leave
mov
lahf
sbb
addr16
jns
out
scas
outsl
fs
mov
pop
or
mov
cmpsb
or
inc
or
mov
rol
dec
lea
js
lock
cmp
xchg
mov
cmp
mov
test
jg
and
ss
xor
pop
rcrb
add
mov
jne
xchg
jns
sahf
js
das
mov
adc
adcl
adc
adc
clc
popa
push
pop
dec
pop
sarb
roll
push
push
cld
adc
inc
ds
mov
adc
test
loopne
mov
stos
and
sbb
cmp
mov
addl
data16
pop
dec
sub
lods
andl
sbb
mov
jg
and
les
outsb
test
jns
lahf
pop
or
sub
fsubrs
pop
push
pop
hlt
add
add
fadds
test
mov
ss
mov
dec
loopne
fldcw
and
push
in
push
mov
test
sarb
sbb
jge
fstps
sub
inc
add
pop
mov
lret
mov
xchg
shl
push
cmpsl
and
dec
mov
ljmp
push
xchg
ljmp
std
cmp
dec
inc
iret
ja
fs
sub
cmc
add
in
enter
es
aam
inc
inc
xlat
ja
out
stos
inc
test
xor
gs
popa
aam
cld
push
cltd
mov
aad
xchg
shrb
or
mov
stos
icebp
icebp
push
dec
ss
cmc
add
mov
xchg
rcrb
xor
call
xor
call
xchg
mov
or
in
cmp
ret
xchg
push
jge
inc
and
insb
std
or
dec
dec
adc
scas
adc
rol
xor
or
cli
jge
pop
je
adc
test
fidivrs
lds
adc
mov
in
jge
or
adc
ffreep
sbb
push
dec
fcomi
and
flds
mov
js
or
orb
xchg
xor
outsl
adc
or
jge
jne
pushf
add
push
fldl
loope
add
in
stc
xor
mov
or
aaa
cmp
inc
das
mov
xor
and
add
pushf
rclb
cli
sbb
mov
add
and
mov
in
pop
xor
inc
lods
call
xor
pusha
inc
jo
jns
or
jne
mov
mov
sub
sti
push
inc
and
push
xchg
inc
push
and
pop
inc
inc
call
cli
jno
ror
mov
ds
inc
adc
or
ja
lds
xor
aam
pop
and
fwait
cmp
sahf
inc
sbb
jno
push
repnz
cmp
or
jg
xor
push
push
add
out
or
scas
cmp
roll
jbe
addb
loopne
sub
movsl
jp
lock
imul
roll
sti
xlat
repz
and
inc
xchg
add
pop
adc
or
adc
dec
adc
xchg
cmp
push
sbb
cmp
sbb
add
test
mov
mov
cli
arpl
xchg
fwait
lea
ret
jns
test
out
into
cmp
inc
jl
mulb
adc
sahf
lods
xchg
or
inc
mov
inc
sti
es
adc
dec
jno
packssdw
mov
jae
fimuls
and
nop
loopne
xchg
imul
xchg
push
nop
neg
pop
lahf
cwtl
rclb
pop
cmp
jbe
daa
xchg
and
cmp
enter
add
inc
fs
or
fimuls
outsb
movsb
loope
addb
jo
test
jmp
add
mov
push
inc
test
cli
sbb
push
iret
xor
jmp
jecxz
js
adc
xlat
js
fnstsw
sbb
lcall
lods
sahf
int
scas
test
push
movsb
test
push
dec
aas
je
test
insl
mov
js
mov
mov
daa
inc
pop
mov
inc
and
add
lds
or
sbbl
outsb
dec
xchg
push
dec
fcomps
push
dec
inc
pop
test
mov
xchg
xor
mul
jne
and
inc
jae
cmc
mov
fbld
dec
or
xlat
or
adc
fadd
movsb
cmp
mov
fwait
adc
push
ret
cmp
roll
inc
jns
sbb
pop
push
and
in
cs
adc
dec
xchg
lea
popa
mov
cmp
mov
movsb
cmp
xor
arpl
ljmp
pop
inc
sbb
hlt
mov
mov
push
insl
lock
dec
fimuls
xor
add
sub
movsb
lock
or
mov
cld
xchg
icebp
mov
sbb
or
js
ror
mov
or
add
lock
push
xchg
rcl
dec
shlb
lods
mov
aas
cmp
sahf
fstl
fnstsw
jmp
mov
dec
or
inc
mov
push
or
loopne
adc
push
push
or
in
xchg
es
sbb
sub
dec
push
xor
mov
movsl
or
out
pop
test
pop
out
es
shrb
pop
push
shlb
fsubl
jecxz
push
movsb
movsb
dec
fisubs
mov
in
pop
push
call
test
mov
dec
xchg
xor
fists
mov
cmp
scas
lods
or
sbb
sbb
pop
push
arpl
call
mov
add
sbb
jo
push
push
push
daa
or
push
adc
outsb
fs
dec
cmp
addl
cmc
test
loope,pn
sti
leave
add
push
imul
out
xor
test
adc
shrb
gs
push
cmp
and
lds
imul
add
xor
cli
sbb
test
or
icebp
andl
ljmp
loopne
or
retw
insb
push
call
loope
mov
call
mov
fcomps
into
pushl
ret
push
fs
pusha
inc
push
test
inc
jl
inc
movsl
or
dec
or
jle
movb
add
push
mov
filds
cmc
xchg
shrb
mov
or
push
gs
jo
mov
ret
cs
jbe,pn
orl
ret
dec
pop
add
std
xlat
xor
xchg
lods
nop
mov
ljmp
sti
push
repnz
mov
into
daa
icebp
sbb
fcomps
ja
xor
or
not
xlat
test
inc
cmp
lods
cmp
mov
into
movsl
and
adc
mov
jmp
or
je
aaa
mov
push
cli
nop
jo
inc
or
sub
sbbl
sbb
push
and
pop
arpl
je
push
sub
roll
fs
pop
push
mov
sbb
adcl
sub
mov
data16
xchg
xor
push
rcrb
cmp
jl
cli
ljmp
push
jbe
fildll
inc
add
pop
xchg
mov
cwtl
in
fwait
movsb
ror
or
xchg
jo
push
inc
push
icebp
imul
cmp
aam
add
adc
sbb
sub
add
mov
mov
test
dec
sbb
inc
or
pop
repz
inc
adc
clc
out
xchg
cli
pop
jbe
pop
sub
rcrl
inc
aas
fiaddl
xchg
push
scas
sti
test
cwtl
fcmove
repnz
out
add
mov
and
ss
test
xor
loopne
push
fistps
push
xchg
out
dec
dec
jb
adc
loopne,pt
stos
push
cmpsb
ljmp
mov
je
push
and
pop
ja
and
and
cwtl
push
push
push
test
nop
sbb
sti
pop
arpl
in
daa
push
repz
pop
push
out
imul
mov
adc
imul
dec
repnz
test
mov
imul
arpl
push
lretw
inc
or
sti
gs
aad
js
aaa
cmpsb
je
xchg
loopne
pop
addr16
dec
push
pop
rolb
push
outsb
jae
adcl
xchg
mov
hlt
adc
jns
and
in
push
mov
jl
out
adc
es
sbb
adc
out
push
dec
push
test
repnz
ret
pop
lahf
xchg
pop
inc
inc
lock
loop
push
jne
sbb
dec
xor
jmp
rolb
inc
cmp
repnz
movsb
int
sub
dec
in
dec
sub
in
cld
pop
test
mov
imul
and
les
and
ret
mov
mov
push
adc
hlt
ds
fwait
out
js
inc
jle
add
mov
insl
xchg
add
data16
pushf
sub
push
push
sbbl
xor
lahf
jge,pn
mov
ljmp
adc
mov
xchg
ljmp
xchg
cmpsl
ret
mov
sub
or
push
and
lret
cmp
rorb
ss
and
dec
nop
mov
movsb
or
push
add
mov
bound
pushf
fadds
fdivs
xchg
je
xchg
lds
pop
pop
add
cmp
out
sbb
jp
and
jle
adc
pusha
js
shlb
fwait
sbb
lcall
push
cmpsl
stc
jo
and
outsb
or
push
aas
push
ds
mov
mov
push
mov
gs
int
insb
out
mov
xor
push
add
jmp
inc
hlt
add
shlb
add
xchg
lcall
inc
push
xor
addr16
arpl
sbb
dec
bound
and
rolb
push
xchg
pop
inc
out
or
adc
mov
xchg
pusha
pop
sbb
adc
js
call
cmp
andl
mov
add
inc
lods
js
lock
shrl
mov
sub
push
or
das
fsub
ja
mov
inc
lret
mov
xlat
lcall
xlat
xchg
pushf
dec
sbb
leave
testl
roll
adc
xchg
fld
mov
loopne
add
cmp
scas
and
cmpb
fmull
sarl
ror
mov
pop
sub
sbb
daa
jbe
xchg
cmp
shlb
mov
in
xchg
std
cmp
dec
lcall
mov
fbstp
jge
jp
lret
stos
push
test
movsb
adc
or
inc
test
js
lock
adc
push
lea
xor
and
js
addb
rcr
xor
outsl
xor
test
push
rorl
sub
lea
rorl
or
push
mov
jmp
lahf
rclb
cwtl
sbb
movsb
sbb
pop
popf
mov
repz
les
cmp
and
jne
les
xchg
xchg
sti
daa
dec
std
ror
scas
dec
aam
jns
leave
or
mov
subb
in
xor
mov
sbb
ret
rorl
movsb
adc
xor
cs
mov
insl
dec
in
das
js
inc
loopne
inc
dec
out
mov
jp
lret
and
push
jp
xchg
loopne
pop
stos
and
adc
adcl
mov
daa
mov
in
inc
adc
jmp
and
pop
dec
jbe
adc
in
sbb
aas
int3
addr16
push
sahf
or
imul
cmp
pusha
adc
and
jge
xchg
sub
mov
pop
dec
mov
mov
fsub
repz
into
sub
inc
mov
roll
mov
pusha
xor
add
adc
insb
mov
mov
pusha
cmc
sbb
fnstcw
lock
sub
xor
iret
cmp
push
adc
mov
lds
addr16
mov
fadds
mov
xor
movl
mov
pop
cmp
jle
or
cmp
xor
mov
add
jmp
inc
add
jmp
adc
ret
ljmp
and
shlb
mov
jp
fdivr
xchg
push
xchg
je
cmpsb
push
cmp
push
sub
lods
mov
iret
gs
xor
sbb
test
pusha
arpl
push
cld
les
loope
pop
fdivs
dec
filds
dec
jne
pop
mov
pusha
add
jge
inc
rorl
fwait
cwtl
xor
orl
lret
repnz
loopne
mov
mov
gs
jp
dec
imul
loopne
dec
push
xor
es
mov
fdivl
mov
loope
adc
aam
jo
loopne
movsb
adc
out
and
and
xlat
fwait
lea
fwait
imul
rclb
pop
add
mov
pop
push
push
stos
aad
sbb
test
inc
and
jne
lret
inc
adc
imul
rcrl
mov
pusha
adc
mov
or
insl
cmp
stos
dec
das
aam
bound
mov
jmp
push
add
xchg
jno
mov
push
daa
nop
or
mov
test
fld
pop
ljmp
jge
cmpsb
xchg
cmpb
fisubrl
stos
pop
xor
pop
push
nop
xchg
in
ret
shrb
inc
xchg
mov
loope
push
pop
or
inc
mov
sti
enter
shlb
lods
xchg
pop
push
push
mov
xor
mov
and
aaa
and
push
lds
and
addr16
pop
adc
jg
xor
rorl
and
pop
xchg
pop
cmp
and
xor
nop
vfmsubadd132ps
jge
push
stos
adc
push
vcmpss
shl
or
inc
sbb
xor
or
adc
mov
mov
pop
and
hlt
inc
push
lds
in
test
inc
add
aad
mov
and
or
inc
loopne
add
push
push
lret
test
das
clc
lds
outsb
and
mov
xchg
incl
mov
mov
pop
or
cltd
jbe
push
cmc
les
push
lock
xlat
push
sub
push
lcall
out
xchg
adc
jle
in
mov
pop
fs
cmpl
js
mov
push
push
test
jge
loope
jmp
adc
dec
loopne
mov
add
cwtl
loope
nop
movsl
das
or
jle
push
and
movsb
les
mov
adc
and
int3
mov
adc
pop
cmp
shlb
shrb
pop
scas
lahf
adc
pop
cwtl
jmp
inc
daa
and
inc
ret
mov
inc
pushf
les
aaa
push
sub
roll
add
lock
in
mov
mov
jnp
add
lds
sub
mov
or
jle
stc
and
std
xchg
push
mov
lods
cwtl
hlt
push
xchg
lods
sbb
mov
pop
jbe
dec
daa
jl
inc
mov
repnz
dec
jne
dec
dec
mov
shll
dec
add
loopne
push
add
test
lds
aad
in
maxps
pop
cmp
dec
jmp
sbb
cmp
lret
ljmp
sub
or
xchg
inc
mov
add
inc
pop
insl
movsb
lret
or
jb
inc
sbb
and
xchg
cmpsl
addr16
rcrl
xchg
in
xchg
xchg
inc
inc
dec
call
and
fmuls
xchg
mov
and
dec
pop
adc
arpl
xchg
xor
call
cmpsl
dec
movsl
add
sbb
sahf
pinsrw
and
mov
loopne
adc
adc
push
nop
pop
popf
shll
mov
push
aam
idivl
push
push
add
and
mov
dec
adc
pop
dec
xchg
cmp
cmp
je
adcl
das
push
mov
arpl
adc
mov
roll
loop
hlt
pop
shll
mov
add
pusha
sbb
and
adc
cltd
inc
jle
repz
ret
scas
mov
jecxz
or
sub
cmpsl
bound
add
add
xor
inc
sbb
pusha
xor
jle
daa
adc
mov
mov
ljmp
xor
test
xlat
cwtl
lcall
or
mov
inc
lock
enter
movaps
loopne
cmp
jns
jno
int3
mov
sbb
leave
jecxz
pop
cmpsl
add
and
push
cmc
and
push
xor
jmp
push
inc
push
mov
sub
xchg
xchg
ret
add
pop
xor
push
js
cmp
jl
add
sub
repnz
add
sbb
push
jge
push
xor
scas
cwtl
mov
js
push
push
mov
mov
mov
pop
inc
outsl
or
xor
xor
decl
jecxz
pop
adc
testl
cmp
push
gs
xlat
int
negb
pop
or
and
inc
jo
cli
test
inc
inc
ret
test
fninit
xor
and
into
pop
push
cwtl
add
pop
rol
or
inc
mov
sbb
mov
mov
das
add
mov
xchg
shlb
or
and
dec
mov
mov
xchg
sahf
or
fiaddl
or
mov
lock
sub
xor
jb
or
push
sbb
test
pushw
xchg
adc
rcrb
xchg
adc
inc
cmc
pop
loop
push
push
test
inc
sub
ja
adc
push
ja
pop
adc
data16
js
xor
clc
repz
leave
inc
lcall
dec
int
mov
xchg
push
fwait
loop
mov
add
cs
dec
adc
cmc
sahf
xor
mov
psrlw
push
aam
popa
mov
repnz
or
sub
jg
es
sbb
mov
int
mov
push
iret
push
cltd
shrb
mov
xchg
xchg
imul
push
test
jge
inc
xor
hlt
shll
add
inc
rorb
pop
out
mov
jo
add
jnp
inc
cmp
or
mov
jp
dec
leave
shr
aas
dec
jno
xchg
loope
dec
loope
call
mov
cmp
xor
cli
inc
and
lret
jne
sub
mov
cmp
pop
cltd
add
xchg
icebp
aad
cmp
cmpsb
scas
rcrb
xchg
adc
arpl
adc
cli
adcb
out
xchg
stc
dec
and
in
lods
mov
nop
fildl
imul
pop
daa
es
dec
mov
jmp
mov
lock
scas
xorb
pop
and
ret
mov
xchg
lret
lods
mov
inc
add
xchg
sbb
scas
daa
sbb
icebp
pop
fisubrl
iret
mov
push
push
ror
dec
sub
lret
fcomps
add
or
add
paddsw
out
xchg
sbb
pop
push
inc
ss
das
repz
xor
dec
mov
cwtl
push
pop
lret
xchg
outsb
ds
in
pop
sysenter
ret
imul
add
rcrb
lds
push
sub
push
add
mov
cmp
add
dec
inc
btr
cs
push
dec
imul
aas
aas
daa
lret
test
inc
xchg
push
cmc
or
mov
push
pop
pop
sbb
mov
sub
push
cmp
adc
and
adc
lds
or
and
adc
jmp
jle
jge
lods
xchg
mov
and
pop
aas
mov
faddl
sbb
test
dec
push
test
sbb
cmp
sbb
push
mov
adcb
add
out
bnd
jbe
xchg
add
jns
pop
mov
adcb
fildl
cmpsb
ss
out
push
les
ja
adc
adc
jbe
cmp
sbb
mov
pshufw
cmp
cmpsb
decl
inc
dec
lea
test
lcall
lea
xchg
lahf
movsb
into
xlat
push
and
int
jmp
and
inc
sub
int
sbb
jle
imul
adc
push
imul
lock
stos
pop
inc
fwait
mov
pop
xchg
movsb
mov
xor
push
mov
and
popf
leave
loope
xchg
sbb
aam
inc
mov
mov
lahf
insb
adc
or
adc
mov
bound
imul
push
mov
les
popa
dec
inc
call
inc
dec
or
push
adc
aas
or
adc
arpl
insb
pop
fimuls
mov
jle
inc
cli
rorl
or
inc
repnz
push
push
into
inc
dec
or
aad
in
and
mov
outsl
testb
inc
aaa
addr16
xor
push
not
mov
sbb
leave
shll
xor
fdivs
fiaddl
pop
rcll
shlb
xchg
add
sbb
pop
jmp
or
enter
stos
mov
dec
test
test
jecxz
pop
xchg
lds
xor
add
or
iret
fdivrs
xchg
cld
in
lahf
cwtl
rcrb
xchg
aas
out
pop
or
clc
sbb
mov
xchg
inc
fldenv
mov
insb
xor
adc
dec
add
sbb
mov
lret
mov
or
addl
cmpb
flds
xchg
and
xor
fcmovnu
rol
adc
addl
clc
or
insb
mov
insb
nop
das
repnz
cwtl
cld
mov
bound
push
or
gs
dec
xchg
shlb
popa
add
fdivp
in
ret
ret
into
fldcw
pop
pop
divl
mov
nop
mov
mov
and
lahf
in
dec
mov
sub
lcall
addl
loop
cmp
mov
addr16
and
mov
loop
push
pop
fsts
lock
jo
lahf
mov
dec
xlat
bswap
jg
inc
inc
pop
mov
sub
in
mov
adc
mov
imulb
mov
rcrb
push
cmc
les
xor
adc
data16
xchg
cmp
arpl
add
add
sub
sbb
xor
pop
es
push
lock
enter
bound
mov
push
adc
pusha
cmp
push
xor
fs
clc
dec
inc
hlt
fldt
jns
lds
stos
out
lods
lods
mov
lods
add
xor
bnd
cmp
std
push
daa
mov
sub
pop
dec
inc
lock
clc
in
andl
divb
adc
in
std
jo
aam
jg
adc
lahf
lret
loop
add
pop
mov
xchg
cmpsl
push
mov
jne
add
cmpsb
mov
jp
push
pop
mov
ret
add
pusha
cmp
dec
cmpsl
in
lock
push
cltd
push
stos
rcl
pop
mov
and
mov
dec
fdivrl
mov
mov
add
mov
les
sbb
jne
ljmp
pop
add
adc
mov
sbb
outsl
das
xchg
rol
orb
clc
add
xchg
lret
inc
addr16
aaa
outsl
adc
enter
push
pop
leave
cmp
jb
xchg
xor
fnstcw
test
or
enter
out
bound
inc
jnp
xor
pop
cli
push
popf
inc
inc
loopne
mov
jb
rcrb
lcall
mov
push
hlt
sarb
xor
and
insb
adc
je
adc
or
dec
ja
gs
push
lea
sbb
and
sub
adc
loope
push
sbb
or
rclb
inc
pop
adc
faddl
cld
jp
sub
out
and
sbb
adc
push
icebp
jge
cltd
ss
sub
repz
push
lods
cmc
sub
push
andl
outsl
jnp
jae
add
inc
ss
shlb
daa
pusha
add
adc
insb
pop
mov
mov
push
pusha
xor
add
jb
lock
test
cmp
xor
sbb
fsub
push
adc
pop
mov
lods
sub
pop
jecxz
fdivrl
or
add
jb
pop
pushf
inc
sar
sub
pop
lahf
mov
dec
sub
add
sarb
shrb
push
push
mov
inc
clc
add
loope
jge
pop
jno
sbb
lea
inc
loope
and
fdivrs
xor
jnp
mov
stos
or
js
shrb
push
repz
mov
cmp
jns
ds
in
add
jb
sbb
mov
inc
andl
push
frstor
iret
cmp
iret
dec
popa
repz
sti
dec
mov
xor
cmp
adc
jne
adc
gs
xor
in
sti
inc
xchg
stc
jecxz
cmp
or
push
jecxz
movl
loope
addb
lret
add
xorb
iret
mov
xchg
jno
or
mov
xchg
add
or
inc
jp
and
dec
adc
xor
addb
lret
in
mov
add
mov
sbb
dec
add
mov
ja
ss
sub
cmp
lret
or
xor
or
dec
adc
addr16
xchg
insl
inc
insl
sub
inc
jnp
pop
mov
ret
dec
and
rorb
adc
mov
mov
es
or
hlt
xchg
or
pop
xchg
push
dec
mov
scas
mull
aaa
ja
les
lret
test
mov
xor
subl
pop
and
addr16
pop
push
cmp
push
leave
test
ror
js
stos
test
push
imul
cmpsl
stos
push
iret
popa
addr16
movsb
add
pop
xor
repnz
or
mov
fldenv
or
sbb
lret
dec
mov
xor
loope
inc
test
cmpsl
rorl
jne
inc
push
xlat
fisttpll
bound
stos
movlps
cmp
aaa
mov
and
int3
mov
stc
push
dec
std
push
xchg
mov
les
negl
push
dec
ds
or
repz
mov
sbb
sub
push
test
call
mov
jmp
sub
or
cmp
sub
adc
rol
shlb
in
nop
sbb
cmp
sub
sbb
dec
push
js
push
scas
cld
add
loopne
pop
loop
pusha
dec
mov
rorb
inc
sahf
fcomps
testl
jo
cmc
iret
test
std
loop
fptan
mov
inc
mov
icebp
xor
dec
repz
cmp
mov
fidivl
push
xchg
mov
insb
jp
push
sbb
xor
adc
sbb
int3
xor
hlt
std
mov
pop
or
or
ss
and
adc
cmpsb
mov
out
or
dec
mov
or
pop
cltd
sahf
mov
or
cmp
pop
push
push
sbb
notb
mov
lods
ljmp
xor
mov
subl
sub
and
push
andl
mov
and
dec
popa
ret
test
pop
add
cmpsb
jb
xchg
rorl
push
sub
jmp
jg
xor
sub
push
jmp
inc
cmc
test
adc
jge
and
data16
stc
dec
dec
cmovge
and
das
jp
sbb
lret
push
iret
xchg
jno
call
nop
pop
ja
or
mov
push
addr16
inc
adc
sbb
adc
sub
loopne
or
jmp
subl
xor
pop
mov
cli
loopne
loopne
inc
xchg
data16
inc
inc
mov
mov
sub
push
add
filds
dec
mov
stc
insb
xchg
hlt
pop
daa
outsb
aas
scas
xorb
ret
pop
enter
pop
mov
mov
add
mov
arpl
shr
or
lcall
mov
sub
push
sbb
dec
clc
sbb
aas
lods
add
gs
cmp
sbb
lcall
cmc
addl
pop
mov
loope
xor
lcall
rorb
adc
ljmp
xor
sahf
ret
or
loope
push
ss
push
mov
dec
inc
push
pop
xchg
cmp
pop
and
jo
das
ret
rol
lahf
aad
jb
cltd
aam
adc
mov
xchg
gs
cmp
ret
push
sahf
xor
mov
cmp
cs
mov
sub
jno
sbb
popa
popf
mov
add
mov
outsb
cmp
sbb
add
ret
inc
test
xorb
das
and
or
aaa
adc
xor
test
dec
test
pushf
call
add
cmp
xchg
xor
xchg
add
add
and
inc
mov
lret
mov
xchg
cmp
fistpl
cltd
clc
ss
popa
cmp
repz
fcompl
sub
mov
inc
fs
mov
sbb
add
xor
pop
lahf
fmuls
ret
sbbb
pop
out
cmp
out
adcl
jecxz
xor
pop
addb
es
jne
mov
lock
mov
mov
add
shr
fsubl
and
add
jmp
fnsave
adc
lock
cmp
sarl
xor
pop
test
inc
leave
scas
xchg
adc
dec
sbb
mov
andb
adc
popa
pop
icebp
cli
inc
jl
shr
mov
or
rcrb
mov
popa
cld
sbb
xchg
or
sbb
jo
sysexit
add
iret
bound
fstp
mov
cmpsb
ljmp
mov
stos
js
mov
shl
inc
bound
push
push
cmp
test
cltd
jno
and
lods
adc
xor
int
ja
ljmp
jl
add
or
dec
jns
inc
xchg
push
jne
fimuls
ret
adcl
outsb
mov
cli
ss
dec
pusha
xlat
movsl
jbe
and
sti
xor
cmpb
gs
xor
mov
bound
rcr
popa
pop
inc
in
add
lret
ljmp
pop
loopne
xor
xlat
mov
cltd
jle
jo
add
dec
pop
loopne
ret
xchg
mov
xor
xchg
js
fwait
rsm
cltd
and
aaa
jg
sbb
cmp
and
inc
xor
popa
xchg
test
mov
stos
push
cmp
push
sub
stos
enter
and
cmc
xor
in
xor
xchg
adc
or
lahf
js
lret
inc
insl
mov
adc
xchg
movb
xor
jb
dec
pop
adc
xchg
inc
or
in
arpl
xor
iret
shr
enter
push
xchg
mov
insb
jle
es
shrl
pusha
cmp
out
mov
js
mov
dec
or
scas
push
dec
pop
adc
sub
xor
pushf
xchg
nop
mov
gs
xor
pop
dec
adc
xchg
test
aaa
es
pop
adcb
or
pop
pop
cmp
sub
rorb
xchg
mov
pop
sbb
push
cmp
ljmp
mov
out
ret
or
movsl
daa
data16
mov
add
ds
in
inc
addr16
gs
push
dec
mov
or
jno
cmp
test
rol
enterw
sar
xor
dec
mov
inc
add
ret
and
rcrl
ds
outsl
testl
inc
stos
out
movsl
lock
fnstsw
push
lahf
mov
std
cmp
add
jl
loope
arpl
aad
mov
clc
dec
invd
lret
iret
insb
jnp
dec
pop
adc
fsubrs
out
mov
les
cmpsb
rcl
push
pusha
and
and
mov
ret
sub
push
inc
dec
push
dec
pop
lret
andb
jns
mov
rorb
fstps
sub
into
pop
sbb
stos
shrb
and
fs
pop
cld
xorl
lods
fstl
hlt
mov
cmpsb
rolb
inc
cmp
adc
jae
inc
arpl
jne
adc
jno
mov
cli
pop
rcl
mov
fs
sbb
push
or
mov
mov
fstps
pushl
pop
test
sub
flds
lret
xor
add
fs
inc
and
insb
inc
sub
pop
push
mov
cmpl
fwait
in
or
sub
xchg
mov
pop
ret
adc
call
push
in
push
lea
push
push
and
lds
in
add
cld
push
push
push
mull
mov
enter
hlt
push
push
inc
cld
add
push
ja
repnz
pop
mov
adc
push
push
idiv
in
mov
lock
pushl
add
push
aas
jge
insl
add
add
movl
std
insl
sub
and
xor
push
push
jne
nop
out
aaa
sub
xor
push
in
mov
push
sbb
or
sbb
aaa
mov
outsb
inc
ja
push
cld
jne
push
insl
mov
jnp
xor
stc
mov
cmp
cmp
add
sbb
mov
sbb
test
jbe
je
lock
cwtl
stc
mov
dec
imul
add
mov
inc
arpl
xor
dec
hlt
inc
in
push
xor
and
and
mov
arpl
inc
pop
or
inc
js
push
push
sub
adc
popa
sbbl
in
xlat
lock
push
negl
xchg
dec
push
insl
cltd
xor
cmc
add
clc
jno
xchg
cmp
jo
push
xchg
ss
cld
jge
push
xlat
fnstcw
mov
and
lock
push
mov
stc
sahf
mov
or
adc
test
sub
push
pop
mov
push
pop
js
dec
clc
push
in
mov
lea
adc
cld
bound
inc
pop
out
xor
cs
pop
in
push
shll
push
jbe
pop
xchg
jne
in
pop
divl
clc
pop
pop
jno
popf
jge
push
pop
loopne
mov
sub
pop
jl
into
add
inc
neg
add
sti
and
dec
inc
cmp
loopne
or
xbegin
dec
jl
mov
ja
icebp
fbstp
jo
pop
and
mov
inc
add
inc
and
neg
and
neg
inc
add
dec
out
lcall
mov
neg
not
add
and
inc
mov
add
and
and
mov
dec
not
inc
pop
inc
mov
aas
fiaddl
iret
and
mov
not
pop
fistl
push
cmp
or
add
inc
rcr
fists
ret
inc
and
inc
repz
mov
insl
imul
shrl
stc
xor
and
sbb
lods
sub
repz
pusha
adc
mov
dec
jge
imul
and
inc
daa
lcall
fstpt
mov
dec
mov
repnz
in
out
fists
jb
mov
and
imul
rolb
add
push
mov
fistpll
and
inc
dec
sub
and
ljmp
rclb
xchg
mov
lock
inc
jbe
daa
adc
and
int3
ds
and
ret
popf
popf
in
sbb
test
pop
fisubrs
xchg
sbb
adc
dec
push
adc
add
sbb
jge
repnz
xchg
ja
push
clc
mov
aas
and
mov
sub
pop
enter
jo
in
mov
cmp
xor
jns
popf
ds
pushf
mov
xchg
xchg
pop
fidivs
inc
sub
cmp
ljmp
inc
fs
insb
fidivl
pop
mov
mov
mov
cwtl
dec
or
ffree
mov
jecxz
jo
sbb
mov
or
ljmp
inc
add
sbb
popf
popf
lret
or
mov
jmp
pop
xchg
xchg
push
and
mov
imull
push
fimull
hlt
repnz
adc
mov
cs
sub
pop
adc
das
and
pop
std
xor
mov
sbbl
mov
nop
dec
ret
xchg
dec
lahf
and
scas
daa
mov
repz
fstps
ret
sbb
mov
xchg
ret
pop
scas
push
push
xchg
test
loopne
fsubs
cs
sarb
icebp
aam
sar
sub
xchg
aad
es
push
cld
or
dec
out
mov
ffree
mov
repz
xor
jmp
jg
and
subb
lcall
xchg
xchg
nop
mov
andb
shll
dec
rorl
sub
push
push
and
rep
inc
push
test
test
aam
arpl
xor
pushf
lods
add
adc
cli
or
arpl
push
pop
pop
ljmp
addb
add
repz
inc
mov
cwtl
adc
in
cwtl
add
push
gs
mov
or
ljmp
push
pop
nop
cmp
mov
repnz
movzbl
pop
mov
std
xchg
push
mov
daa
sub
xchg
xor
dec
lds
adc
adc
xor
insb
jo
adc
xchg
fmull
xchg
mov
push
cmp
jbe
cltd
xor
dec
pushl
cltd
mov
sahf
mov
out
and
mov
daa
lret
sub
push
sub
insl
ss
sbb
popf
cmp
xchg
or
adc
sbb
xchg
fdivr
call
add
adc
sahf
sub
mov
cmp
jg
rorb
mov
std
cmp
insb
mov
and
fnsave
mov
rorb
mov
push
xchg
int
ficoms
pop
mov
sbb
sub
shr
nop
push
fnstenv
mov
fcoms
pop
sbb
ljmp
pop
clc
test
pop
sub
xchg
mov
inc
arpl
subl
mov
dec
mov
mov
push
nop
sahf
push
and
loope
fs
adc
pop
push
mov
in
pop
sbb
fisttpll
inc
or
mov
lahf
xorl
adc
jp
test
or
mov
clc
adcl
sub
fnstenv
std
cmp
out
lret
lahf
fbld
insl
mov
in
pop
nop
lock
loope
outsb
sbbl
loopne
jmp
sahf
rcrb
imul
mov
cld
ret
mov
jmp
and
jg
aad
push
shlb
push
ret
fistl
xchg
mov
in
cmp
jg
or
add
nop
mov
mov
in
xchg
mov
sbb
mov
xchg
ljmp
mov
fistl
sbb
call
jmp
pop
cmp
mov
jno
mov
mov
jno
push
or
aas
repnz
xorl
mov
enter
sahf
inc
jmp
jne
mov
mov
in
daa
out
or
pop
mov
jmp
cld
dec
lahf
mov
pop
ljmp
dec
fists
test
lea
nop
andb
adc
sub
inc
testb
ljmp
and
mov
in
jb
in
jecxz
sahf
scas
xchg
aaa
enter
mov
shr
adc
dec
mov
dec
sub
fildl
or
xchg
fists
and
add
add
cmc
push
loope
jo
ret
mov
dec
cli
and
mov
xor
sub
xchg
inc
add
pop
and
into
cmp
cli
and
mov
add
nop
mov
ret
loopne
stc
cmp
movsb
xchg
cmp
adcl
sub
and
push
jnp
stos
mov
add
adc
jo
mov
nop
std
jecxz
mov
jns
push
mov
pushf
mov
xchg
outsb
mov
mov
mov
fsubl
or
mov
aad
and
mov
loope
pop
pop
xchg
pop
out
mov
push
mov
xchg
pushf
or
insl
mov
push
hlt
aam
and
xorl
xlat
sbb
dec
jo
xchg
jbe
jmp
in
mov
sub
inc
enter
ljmp
pop
fwait
mov
cltd
dec
leave
in
int
cmp
stc
enter
insb
shl
add
icebp
and
addb
xchg
lock
sbb
out
and
mov
nop
pop
sahf
inc
insl
ret
mov
dec
fimuls
mov
xchg
or
adc
adc
ja
xchg
insb
push
mov
arpl
mov
sbb
fisubrs
insb
or
sbb
addb
clc
daa
enter
test
pop
loopne
or
mov
loope
push
dec
pop
pop
movsb
dec
push
push
mov
fidivrl
mov
push
scas
pop
pop
nop
mov
popa
sub
push
repz
sbb
loope
pop
mov
sbb
test
jp
mov
or
adc
shrl
mov
xchg
push
xlat
int
inc
pop
fcoml
scas
sub
pop
mov
icebp
inc
inc
xchg
out
xchg
cwtl
lock
mov
enter
cltd
and
push
popf
xchg
call
jo
ret
inc
mov
sub
mov
int
ljmp
stos
jns
or
ficomps
add
daa
push
or
scas
repnz
cmp
nop
and
cli
notb
add
jno
jg
divb
sbb
inc
and
scas
lcall
pop
xchg
cmc
es
mov
rcll
xchg
fdivs
aad
cli
mov
aaa
in
test
dec
lods
sbb
cmp
int3
xchg
stc
gs
adc
mov
fcompl
outsb
fisttpll
mov
leave
push
rcrl
rcrb
jecxz
mov
add
adc
outsb
jmp
jg
push
xchg
sub
fnsave
stos
jb
in
mov
xchg
pop
lock
bswap
mov
adc
mov
mov
in
mov
lods
pusha
pop
repz
cs
mov
xorb
adc
nop
jl
adc
call
mov
insb
jmp
ja
add
push
pop
xchg
lret
popa
mov
adc
hlt
lods
daa
leave
sub
sub
and
lret
inc
dec
xchg
pop
rep
mov
cmpsb
mov
outsb
xchg
pushf
movsl
xchg
stos
pop
bound
cmp
mov
in
iret
inc
lahf
lds
adc
in
pop
and
and
in
sbb
iret
test
mov
mov
xchg
or
adc
arpl
sahf
mov
xchg
fs
pop
inc
mov
mov
or
fadds
cwtl
sub
jp
mov
fs
add
lods
aad
xorl
enter
pop
mov
cli
and
jmp
jle
test
rclb
pop
xchg
dec
or
addr16
inc
fs
out
cli
scas
mov
out
sbb
sub
lret
rclb
push
mov
call
and
outsb
mov
subb
push
and
sub
mov
jmp
out
scas
mov
or
subl
xorl
sbb
shr
sbb
xchg
inc
ds
fwait
mov
dec
adc
aaa
and
loopne
fstpt
cwtl
sub
cwtl
pop
loope
inc
incl
xor
pop
cltd
faddp
rolb
test
cmpsb
lcall
and
pop
jecxz
fistl
mov
push
mov
inc
sti
sub
cmovs
hlt
pushf
cmp
xchg
sarb
sbb
inc
mov
add
loopne
lret
scas
xor
loope
adc
sub
push
shll
adc
mov
incb
addb
cmp
loop
add
mov
pop
and
mulb
or
mov
inc
jb
lahf
pop
or
cwtl
adc
xchg
test
test
loop
cmp
inc
push
in
mov
mov
iret
mov
cmpb
dec
nop
jno
mov
xor
and
mov
sub
scas
pop
ret
xor
cli
jmp
xchg
lods
mov
mov
xchg
adc
pop
or
or
mov
dec
pusha
and
xchg
adc
lock
lret
stos
adc
pusha
mov
rcrb
mov
or
jge
adc
mov
fcoms
stc
add
adc
mov
fprem
sub
jg
mov
mov
xchg
adc
xorl
leave
into
mov
popf
adc
lahf
sub
inc
in
dec
pop
or
add
dec
sbb
jge
scas
jle
mov
lods
into
mov
repz
lods
inc
notb
lcall
dec
xchg
mov
push
fisubrl
adc
cwtl
rcrb
lahf
sbb
fnsave
sbb
jnp
nop
push
mov
jno
mov
sub
stc
pop
sti
push
pop
insl
xor
pop
mov
stos
in
dec
mov
or
and
cld
and
sbb
cmpsl
enter
fcmovb
pop
mov
mov
data16
test
sar
add
sub
adc
aad
shll
and
fs
jp
aam
nop
test
add
push
iret
pop
sbb
cmp
dec
cltd
fwait
testb
mov
stos
pop
add
push
mov
inc
pusha
jae
aaa
push
repnz
sbb
jne
inc
jb
outsb
inc
in
add
loop
push
and
pop
hlt
inc
adc
dec
flds
add
andb
and
pusha
push
jb
xor
inc
xor
xor
sbb
popf
sub
sub
or
add
dec
dec
pop
pop
lret
cmp
cmp
jmp
and
pop
xor
fmuls
sbb
sub
and
sub
sub
adc
dec
fsts
ss
sbb
cmp
inc
nop
and
aad
ret
dec
gs
incl
aas
pop
or
inc
cld
push
push
bound
xor
loopne
push
sbb
sub
std
fwait
lcall
loope
and
in
repz
sbb
fldt
addr16
ss
hlt
push
pushf
add
mov
add
jmp
repz
push
jecxz
add
cmc
not
push
in
jle
outsb
add
add
sti
dec
mov
push
nop
out
add
outsl
cld
or
push
je
loopne
dec
enter
add
insl
add
fwait
es
push
mov
fs
push
push
push
xchg
adc
adc
add
pop
fcmovnu
in
lea
lds
call
dec
sbb
jae
bound
sbb
xor
sub
adc
pushf
push
or
fiadds
dec
imul
stos
cmp
mov
addr16
bound
sahf
or
pop
jp
or
vsubps
add
xor
and
inc
and
mov
inc
pop
add
pop
inc
imul
sub
dec
testl
sarb
dec
aaa
or
dec
adc
je
pop
cli
mov
and
enter
xlat
dec
dec
jbe
fwait
jns
dec
add
sub
cmp
inc
dec
push
ja
or
je
dec
push
cld
xchg
push
movl
nop
je
jo
sub
sbb
add
mov
push
loopne
and
ret
mov
jg
pusha
scas
subl
dec
add
sbb
inc
test
add
mov
cmp
xor
jnp
aam
jle
sub
or
inc
add
inc
mov
or
shlb
das
add
cs
stc
pop
cmp
dec
mov
push
cmpsl
dec
and
xchg
mov
mov
in
mov
dec
mov
mov
or
sahf
pop
sub
lock
inc
xor
sub
dec
lock
daa
sbbb
dec
hlt
dec
inc
push
repz
jmp
andl
mov
clc
adc
leave
xchg
rcll
aam
xor
inc
xchg
out
sbb
mov
xchg
dec
mov
sub
inc
std
sub
xchg
xchg
inc
lock
outsl
faddl
dec
or
ss
adc
mov
and
push
and
xchg
hlt
xor
sbb
and
outsb
add
nop
in
test
shl
or
incb
call
cmp
pusha
sbb
jo
arpl
clc
cmc
push
mov
mov
subb
adc
dec
add
aam
jbe
mov
repnz
push
push
mov
gs
or
enter
push
imull
inc
loopne
imul
xor
loop
mov
xchg
lods
adc
cli
and
xchg
add
dec
inc
jmp
mov
rcll
outsl
test
mov
call
jg
push
cmpsl
shlb
in
sbb
push
mov
mov
xor
les
and
inc
mov
sub
repnz
ljmp
sbb
leave
xchg
dec
sar
pop
push
nop
push
test
xor
push
fwait
orb
popa
gs
cmp
inc
push
lock
add
repz
push
test
pop
nop
pop
add
call
outsl
jno
jg
ret
cmp
push
and
cmp
add
fsubr
pop
adc
dec
frstpm(287
add
movb
push
or
fwait
mov
or
and
and
std
xchg
xor
jne
or
cld
ret
negb
push
xor
dec
or
ds
jbe
dec
and
ret
fstps
cmpsb
adc
sbb
mov
pusha
push
pop
loope
pop
pop
cmp
fisubs
rorl
inc
dec
movl
out
iret
dec
dec
mov
pop
test
adc
add
enter
and
add
cmpsb
cmpl
test
xchg
lock
dec
pop
adc
into
pop
mov
jb
cwtl
iret
sahf
pop
bound
subl
sub
test
hlt
loopne
out
cmc
bound
dec
outsb
sbb
jmp
adc
jl
loope
xorb
push
repnz
fisubrl
cld
aaa
aaa
pop
sub
push
dec
add
dec
and
jb
add
jle
or
jle
nop
xor
or
xor
add
out
push
jb
pop
rorb
dec
add
cmc
dec
inc
add
push
outsl
cli
inc
xor
cmp
ss
popa
jae
push
lock
insl
popa
jns
or
mov
or
lret
call
lea
xor
add
add
out
fildll
mov
lock
not
rol
add
push
lea
inc
ret
xor
daa
inc
jecxz
dec
fldt
sub
lock
push
repz
mov
dec
add
neg
inc
and
dec
mov
mov
neg
mov
sub
inc
xchg
popa
not
add
push
push
mov
fsubs
adc
cmp
lret
cmp
xor
int3
ret
inc
jp
dec
push
das
sbb
sub
or
imul
les
or
push
cwtl
sub
rcrb
adc
add
aas
sbb
or
andb
push
jae
pop
pop
testb
xchg
into
or
pop
addb
sub
jne
call
shll
aaa
imul
xor
outsb
xor
and
outsl
shll
js
dec
pop
xchg
xchg
add
xchg
xchg
inc
cmc
sub
and
adc
call
andb
cld
add
sbb
fwait
add
add
out
jae
pop
lock
add
push
jne
pop
adc
adc
mov
faddl
push
or
movsl
inc
push
jge
call
imul
push
pop
orl
add
dec
les
dec
not
push
and
test
fidivrl
pop
lea
pop
pop
dec
pop
mov
dec
gs
in
push
out
shll
pop
inc
dec
jae
mov
mov
test
sbb
roll
adc
fucompp
mov
hlt
mov
and
add
lea
sbb
sub
ss
cmpsl
fmul
in
add
inc
push
int
pusha
push
aaa
jo
outsb
sbb
add
or
in
mov
es
insb
mov
sbb
sbb
push
jl
pop
jg
pop
push
in
loop
les
pop
sbb
push
clc
fwait
cmp
in
xor
es
imul
adc
stos
mov
arpl
test
call
and
push
push
nop
xchg
in
or
push
or
fists
xor
mov
imul
mov
and
xchg
add
jp
fsubrs
and
push
je
or
cld
js
mov
filds
xchg
idivl
push
hlt
sbb
push
mov
or
fdivs
or
or
je
ret
popa
push
add
mov
lods
xor
leave
xchg
and
add
jl
and
inc
jle
inc
outsl
filds
and
rclb
xor
movsl
or
or
mov
pop
pop
popa
outsb
xor
and
pop
clc
and
dec
inc
insl
mov
sbb
cmpsb
movsb
mov
dec
decb
repnz
popf
add
xor
rorb
bound
cmp
rorl
jno
insl
pusha
push
sbb
inc
repnz
pop
mov
sbb
movsb
pop
popf
call
daa
jmp
push
jl
push
mov
outsb
jbe
aaa
push
xor
sub
mov
aad
adc
stc
and
mov
xor
fdivr
mov
orl
mov
loope
pop
adcb
into
je
push
or
dec
or
mov
push
fcoml
clc
and
add
push
sub
cltd
into
jns
fs
adc
push
push
xor
add
or
add
lods
cld
jmp
cmp
fldl
daa
jns
push
icebp
dec
mov
push
jle
ss
sub
daa
inc
push
leave
cmpsb
fisttpll
movsl
or
leave
in
jae
arpl
mov
mov
or
push
dec
rclb
adc
dec
dec
test
test
je
loope
mov
push
xor
ds
nop
in
adc
hlt
lcall
mov
movsl
push
push
and
pusha
pop
cmp
jne
mov
loopne
arpl
cmp
push
sbb
and
movsl
sti
push
push
ret
pop
rcrb
fldl2e
pop
inc
data16
mov
inc
jmp
lds
inc
in
clc
add
sbb
push
mov
and
lea
adc
mov
or
xchg
sub
adc
push
add
push
lahf
mov
pop
inc
xor
xor
add
cmp
and
cmc
andl
mov
jb
ret
call
xchg
sbb
adc
sar
cmp
add
jno
xlat
jo
cld
cld
ja
stc
jge
clc
das
push
add
add
jle
setbe
roll
sub
fisttpl
rclb
sbb
and
push
dec
fs
movl
aam
mov
fs
add
imul
sub
push
mov
pop
push
imul
xchg
cmp
lods
nop
push
dec
enter
pop
xchg
adc
inc
fs
add
and
cmp
add
sub
mov
inc
xchg
cs
mov
cmp
or
push
xlat
jmp
in
add
ja
mov
incb
clc
rorb
insb
xor
es
or
inc
push
aaa
mov
xchg
imul
call
stc
dec
push
mull
icebp
add
push
or
ds
mov
loopne
test
sub
lock
mov
dec
dec
add
add
xchg
add
and
lds
filds
cmp
std
pop
lret
mov
aad
dec
add
add
lods
clc
inc
hlt
adc
push
pop
pop
pop
loope
xchg
add
fistps
jmp
shlb
push
je
xchg
push
sbb
inc
dec
adc
mov
push
dec
add
imul
xchg
inc
insl
insb
push
push
nop
add
jns
sub
push
hlt
test
adc
dec
push
adc
aad
mov
mov
daa
inc
inc
xchg
pop
adcb
pop
std
stos
and
addb
mov
aam
dec
sub
or
or
ljmp
inc
hlt
adc
push
sub
test
ljmp
inc
xchg
add
sub
push
dec
adc
lret
dec
orb
popf
sub
add
nop
inc
add
add
xorl
adc
add
nop
push
add
mov
push
and
and
iret
xchg
push
filds
add
add
add
jmp
aaa
add
add
add
add
add
and
pushl
dec
add
add
add
add
add
add
adc
outsb
mov
add
add
mov
add
jg
dec
addb
fwait
add
jns
jae
dec
sbb
fldl
imul
sbb
dec
mov
xor
adc
scas
and
push
add
push
bound
popa
out
pop
push
pop
xor
adc
insl
negl
fcmovb
or
jmp
insl
arpl
insb
pop
pop
outsl
popa
add
or
cmp
jae
std
fisttpll
lret
add
push
pop
incl
jmp
add
xor
cmp
inc
adc
std
cmp
jne
sbbl
inc
ret
pop
sbb
xor
popf
pop
ret
and
push
cmp
sub
ljmp
add
inc
and
jae
and
adc
push
adc
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
or
lahf
or
jl
add
add
jb
jne
xchg
std
insl
stc
insb
inc
jb
gs
add
imul
std
outsl
arpl
jae
cmove
gs
imul
je
or
pop
dec
outsl
fs
lods
jge
stc
dec
popa
outsb
fs
inc
insb
insb
and
jae
out
arpl
inc
outsl
insl
insl
push
dec
imul
fildl
dec
gs
push
push
outsb
push
insl
xor
jo
imul
popa
jb
outsb
cmpl
mov
popa
insl
jbe
in
push
pop
inc
jns
push
outsl
push
imul
jge
inc
push
pop
push
imul
or
fs
push
pop
push
dec
outsl
outsl
jae
xor
repz
xor
addr16
mov
in
push
popa
jbe
adc
outsb
pop
imul
inc
hlt
mov
jnp
out
xor
daa
cmpsl
iret
outsl
ja
sbb
imul
push
jae
jns
pushl
loope
push
xor
dec
cwtl
popa
addr16
inc
outsb
jne
inc
ret
addr16
inc
arpl
jb
pop
mov
sub
push
lock
out
fidivrs
outsw
push
push
imul
lret
leavew
push
in
dec
pop
fisttpl
scas
jne
dec
dec
jbe
jns
loope
pop
adc
pop
mov
fcmovnu
ja
arpl
inc
arpl
test
jno
dec
neg
adc
lahf
adc
popa
jmp
rorl
andw
mov
push
ds
sbb
popa
and
inc
push
jge
imul
dec
cmc
lahf
inc
jo
fisubrs
iret
push
dec
or
subl
sbb
cs
sub
dec
mov
sbb
insb
and
mov
imul
xchg
outsl
outsb
xchg
jo
pop
xor
push
popa
bound
push
gs
jne
nop
ss
lods
jo
push
lret
movsb
pop
mov
mov
ds
getsec
adc
insl
inc
push
lods
lahf
or
jo
imul
cld
inc
arpl
mov
push
sahf
jns
sbb
insb
arpl
outsl
lods
jmp
outsl
insb
imul
outsb
comiss
arpl
jae
in
adc
out
psllq
cwtl
fcomps
mov
cmp
outsl
addr16
adc
sub
xor
adc
xor
jle
imul
divb
jnp
out
dec
inc
dec
mov
mov
pushf
dec
xchg
int
xchg
push
inc
ret
mov
fwait
loope
sbb
adc
xchg
arpl
inc
fidivrs
stos
test
mov
inc
pop
push
insb
adc
fsub
mov
ss
arpl
xor
popa
mov
cltd
setno
cmpsl
pusha
les
or
inc
xlat
imul
add
jp
add
cmpsl
sub
je
or
ret
xchg
dec
xlat
daa
popl
popa
lret
es
adc
or
add
in
inc
inc
push
in
push
imul
inc
mov
sub
or
or
xor
push
jno
sbb
pop
dec
popa
push
xorb
sub
lret
or
xor
scas
jb
or
sbb
cmp
xorb
sti
or
insl
and
dec
inc
adc
gs
pop
push
lret
fisubrs
pop
das
outsb
mov
js
adc
inc
jnp
popa
ret
xchg
push
and
or
lcall
or
ret
pop
scas
pop
lods
stos
xor
push
sub
addr16
push
nop
or
or
mov
arpl
orl
mov
aad
fstl
jbe
aas
jecxz
jmp
clc
dec
jae
or
and
adc
ret
push
sbb
sbb
mov
dec
scas
xlat
adc
je
dec
pop
adc
imul
outsl
mov
dec
push
leave
in
lret
incl
xlat
mov
insb
or
or
or
sub
lock
push
xlat
int3
jno
loopne
ret
xor
pop
cmp
or
shrl
icebp
dec
data16
or
daa
repz
push
push
imul
bound
or
push
fwait
mov
fdivs
adc
je
inc
add
fs
pop
clc
aaa
adc
adc
test
pop
mov
test
mov
shrb
loop
int
nop
cwtl
sbb
lods
orl
dec
inc
cmp
sbb
push
lret
sub
mov
inc
jmp
mov
sti
adc
xlat
inc
push
xchg
xor
push
into
xor
add
inc
dec
push
setne
insb
popa
mov
xor
sub
or
jne
mov
push
outsb
pop
fcompl
aam
scas
xchg
push
inc
dec
add
idiv
pop
repnz
jmp
loopne
sidtl
add
outsw
mov
movsb
movl
add
divb
or
add
push
in
push
ss
push
add
adc
insb
jnp
dec
push
add
dec
push
aaa
lea
jnp
add
loope
mulb
imul
testl
lret
and
mov
sub
xor
add
es
cmpsb
xor
add
sbb
rorb
arpl
inc
pop
add
inc
pop
add
add
jge
in
add
dec
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
add
add
xor
add
add
add
sbb
add
add
pop
push
add
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jno
add
jno
add
jno
add
in
add
in
add
add
add
in
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
fs
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
jb
outsb
je
insb
addr16
add
add
je
inc
add
das
xor
xchg
pop
jge
je
or
pop
lcall
lods
cmc
scas
xor
xchg
ret
int
fcomps
pop
cmp
add
ret
inc
aad
xor
add
dec
lahf
out
mov
push
push
mov
jecxz
push
mov
lea
push
cmpsl
jecxz
bound
xchg
shl
and
fwait
imulb
mov
call
bnd
jmp
hlt
mov
mov
xchg
leave
pop
mov
lret
fiadds
jle
stos
xor
and
pop
mov
aam
lcall
pop
sub
movsl
out
cmpsl
cwtl
push
adc
jb
addr16
movsb
or
pop
pop
imul
adc
js
pop
xor
adc
or
hlt
loopne
add
mov
pop
and
adc
xchg
sbb
rclb
ja
imul
jle
jle
mov
cs
or
inc
dec
out
in
scas
xor
movsb
enter
nop
lret
xchg
sub
adc
imulb
sub
lret
and
pop
test
mov
cmp
jae
imul
xchg
jl
xor
stc
popf
xor
mov
mov
xorl
negb
sbb
lock
mov
jg
arpl
fwait
lret
movsl
xchg
adc
test
push
lret
mov
add
cmpsb
hlt
cmpsl
and
cmp
xchg
inc
jno
lea
or
shl
cmp
jmp
adc
out
fistl
repz
mov
sti
pop
icebp
pusha
movsb
rcl
jb
cmpsb
gs
push
xchg
mov
in
push
setno
or
aam
jecxz
dec
sbb
pop
or
mov
cmp
shll
fiadds
xchg
int3
fs
mov
mov
mov
cmp
cld
pop
