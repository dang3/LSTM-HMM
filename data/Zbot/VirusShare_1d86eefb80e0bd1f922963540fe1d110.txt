int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
nop
nop
xor
popl
pop
pusha
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jb
ret
xor
lea
add
mov
mov
rol
xor
call
pushl
mov
sub
cmpb
je
add
lea
inc
movzbl
sub
ja
nop
mov
sub
ja
mov
cmp
ja
lea
jl
pop
call
popf
push
pushl
decl
ret
outsl
notb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
pop
dec
jmp
jmp
call
add
mov
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
push
pop
test
je
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
xor
pushl
lea
lea
pop
bswap
jmp
mov
pop
ret
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
and
add
and
add
and
add
and
add
add
and
add
and
add
add
js
add
push
and
add
and
add
and
add
and
add
add
jb
add
xor
add
and
add
and
add
and
add
add
add
add
mov
add
cmp
add
cmpsb
and
add
and
add
add
xchg
and
add
and
add
add
fisubl
add
sub
add
and
add
and
add
and
add
add
add
add
xchg
add
add
add
add
mov
add
add
and
add
and
add
add
add
add
add
add
add
shlb
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
and
add
and
add
add
js
add
push
and
add
and
add
and
add
and
add
add
jb
add
xor
add
and
add
and
add
and
add
add
add
add
mov
add
cmp
add
cmpsb
and
add
and
add
add
xchg
and
add
and
add
add
fisubl
add
sub
add
and
add
and
add
and
add
add
add
add
xchg
add
add
add
add
mov
add
add
popa
insb
imul
add
add
imul
jb
je
arpl
mov
jo
outsb
fs
push
add
add
inc
popa
fs
gs
fs
je
add
addr16
gs
imul
gs
add
push
gs
imul
rolb
dec
gs
jo
gs
jb
jns
adc
dec
outsl
fs
gs
imul
add
mov
inc
jb
popa
je
inc
imul
jb
popa
je
inc
imul
jns
add
dec
add
je
jb
arpl
jae
gs
jo
add
inc
gs
je
dec
popa
outsb
fs
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
call
inc
imul
bound
gs
add
add
popa
jo
imul
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
adc
push
gs
insl
gs
push
add
les
inc
insb
outsl
bound
push
imul
insb
jae
jb
outsb
inc
add
cmp
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
cmp
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
jbe
outsb
je
add
add
je
jne
jb
outsb
je
push
dec
add
sahf
add
gs
je
dec
jne
gs
add
mov
inc
jb
popa
je
inc
imul
dec
inc
dec
xor
cs
insb
add
jp
inc
gs
imul
outsb
addr16
add
mov
inc
gs
jb
jns
arpl
add
jo
je
push
popa
addr16
add
pusha
pop
inc
gs
imul
outsb
addr16
add
int
dec
outsl
popa
fs
jne
jae
jb
add
push
arpl
push
inc
gs
jb
jns
outsb
jne
jno
push
gs
jne
jae
jb
repz
dec
gs
popa
addr16
outsl
js
add
imul
jae
addr16
add
test
inc
gs
imul
js
inc
add
sbb
ja
jo
imul
pop
inc
jb
ja
arpl
add
push
push
inc
push
xor
cs
insb
add
or
inc
insb
insb
push
imul
jb
gs
push
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
or
inc
insb
insb
push
outsb
jb
imul
jb
gs
pop
add
inc
gs
insb
popa
jae
dec
bound
arpl
push
dec
inc
push
cs
insb
add
dec
jae
popa
insb
imul
inc
push
inc
push
dec
xor
cs
insb
add
pushf
pop
scas
and
notb
ss
xchg
cmp
dec
push
inc
sti
cmpsb
ss
sbb
push
pop
pop
in
inc
xor
and
jge
cmp
xor
add
test
insl
xchg
das
cld
lds
push
cmp
lock
outsb
cli
dec
add
ret
movnti
xchg
inc
and
aad
push
xchg
mov
jae
mov
mov
push
sbbl
or
mov
inc
pop
rcrl
xor
adc
mov
jo
test
xchg
call
xchg
sub
loop
out
dec
dec
repz
mov
ja
inc
adc
xchg
cld
jno
jge
mov
adc
jmp
or
push
in
loop
cmp
xor
mov
clc
jle
lahf
xchg
mov
pop
sbb
addr16
mov
in
hlt
mov
sbb
aad
xor
cmpsl
xor
adc
mov
cmpsl
das
lea
dec
movsl
mov
ss
xchg
repnz
xchg
insb
inc
clc
adc
in
and
dec
shrd
mov
jg
mov
mov
xchg
pop
sbb
xor
dec
push
test
mov
xchg
mov
in
je
jns
or
push
andb
push
add
mov
jns
jbe
or
mov
outsb
fsubrl
xchg
push
hlt
pop
in
add
push
cmp
push
push
mov
enterw
and
mov
mov
adc
and
shlb
xor
cli
test
icebp
pop
mov
lods
call
cmp
lahf
jo
sub
pop
ljmp
decl
leave
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
test
add
clc
dec
add
push
add
add
add
add
add
fs
add
arpl
add
xor
add
xchg
add
xor
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
std
add
sar
add
std
cld
add
div
add
repz
add
out
jmp
in
in
in
add
in
add
loopne
add
xlat
in
add
fucomip
add
into
jmp
add
loopne
add
loopne
add
add
add
fcmovu
add
aam
add
roll
xlat
xlat
add
rcl
add
aam
aad
rolb
rcl
roll
fadd
xlat
add
iret
aad
ret
add
fxch
add
aam
add
ror
add
rol
add
ror
add
into
ret
lret
int3
add
lret
add
leave
les
lret
enter
add
fiadds
mov
mov
ret
add
in
add
jecxz
add
in
add
loop
add
loop
add
loopne
add
add
aam
add
mov
add
add
loopne
add
xlat
movsl
add
xlat
mov
add
int
add
int
add
sarl
add
lds
add
lret
mov
add
ret
ret
add
int3
mov
add
scas
add
fcompl
add
aam
add
lret
xchg
add
aad
add
aam
add
int3
xchg
add
into
test
mov
sarl
mov
test
mov
mov
rol
mov
ret
add
shlb
xlat
shlb
lds
movsl
add
mov
mov
in
xchg
jecxz
xchg
fdivrl
xchg
add
lods
xchg
add
lods
xchg
add
mov
add
cmpsl
mov
shlb
add
mov
mov
add
mov
mov
mov
mov
test
scas
mov
add
mov
shlb
add
mov
scas
mov
add
movsl
add
stos
add
test
cmpsb
add
mov
mov
mov
add
mov
lods
add
fwait
mov
add
movsl
mov
add
rcrb
cmpsb
mov
test
pushf
lcall
pushf
xchg
fwait
add
cwtl
cwtl
add
xchg
xchg
add
nop
nop
add
popl
orb
add
lret
add
iret
add
in
enter
mov
add
lahf
add
mov
jge
mov
std
jge
std
ret
test
insb
add
mov
jno
mov
data16
mov
add
scas
fs
movsb
jg
into
mov
jns
into
cltd
jne
fstps
fs
mov
add
scas
push
add
cmpsb
dec
add
stos
inc
add
cmpsl
inc
add
mov
pop
add
xchg
push
add
xchg
pop
add
mov
int
push
add
test
mov
jbe
cmpsl
mov
stos
mov
movsl
test
xchg
scas
mov
mov
inc
add
popf
xor
add
fwait
das
add
xchg
sub
std
xchg
and
add
sbb
hlt
test
add
mov
incb
add
lods
subl
mov
jge
add
jle
add
jle
add
insb
xor
aam
sub
shll
add
insl
sub
iret
outsb
es
gs
jl
add
jae
add
jbe
add
jb
add
jb
add
jo
add
jge
add
jl
add
js
add
jbe
add
jo
add
outsl
add
in
add
in
add
aam
sbb
aad
sbb
iret
arpl
fsubrl
add
bound
add
pop
push
add
pop
add
rcrl
add
pop
or
mov
add
add
call
sbb
jmp
adc
adc
pushl
jae
push
pop
add
push
adc
ljmp
xchg
push
pop
add
add
adc
jmp
jae
xchg
add
push
adc
lcall
and
jne
xorb
or
sub
jmp
js
jbe
daa
and
push
pop
sbb
sub
jmp
jge
cmpb
dec
dec
and
outsl
js
mov
pushf
fwait
sahf
cmp
jmp
outsb
pop
daa
push
je
xchg
xchg
push
dec
dec
outsb
es
lea
jle
mov
cmp
sub
jno
movsl
test
scas
push
dec
dec
es
orb
pop
popf
mov
cwtl
mov
mov
dec
push
push
push
and
outsl
lcall
sahf
sahf
fwait
fwait
cwtl
sahf
sahf
fwait
fwait
sahf
sahf
fwait
mov
pop
push
add
push
jae
andb
incl
pushf
pushf
fwait
sahf
sahf
mov
leave
lret
xchg
jp
sbb
add
add
pop
and
incl
mov
lret
fcmovnu
fucom
in
loop
insb
inc
push
pop
add
add
push
adc
lcall
addb
cli
std
cld
sti
hlt
repnz
inc
push
add
adc
ljmp
jge
addb
cld
sti
hlt
icebp
out
out
xlat
shll
and
ljmp
jae
jae
jg
idiv
sti
stc
hlt
repnz
in
fcmovu
fcom
iret
mov
pushl
outsb
outsb
outsb
jae
mov
repnz
fcmovu
aam
rcl
shlb
call
jae
insl
jecxz
hlt
repz
in
fcmovu
into
mov
bound
jmp
jno
push
out
fcmovu
fnop
mov
scas
dec
inc
sbb
jmp
outsb
pusha
lock
fcmovu
mov
push
push
dec
inc
and
pushl
sbb
and
pop
jmp
out
fcmovu
fcmovbe
mov
dec
dec
xor
xor
incl
push
pop
adc
pop
ret
in
fcmovu
fnop
push
xor
xor
xor
inc
es
incl
and
fcmovu
mov
das
das
xor
inc
es
call
mov
lock
out
mov
xor
cmp
aaa
xor
call
addr16
jmp
inc
inc
inc
inc
pop
sbb
or
decl
pop
imul
sbb
lcall
clc
jg
jmp
ud0
rolb
incl
add
cld
add
push
add
jmp
add
and
add
addb
add
add
add
add
jo
add
aas
addb
aas
addb
pop
addb
pop
addb
pop
addb
pop
loopne
add
incb
add
incl
add
incl
add
add
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
fcmovnbe
incl
shll
add
push
incl
pop
xor
add
adc
add
add
add
add
add
add
add
add
push
add
or
das
add
add
add
incb
in
sar
add
mov
add
xchg
std
add
jno
add
std
add
add
add
iret
add
mov
push
add
add
add
sbb
xor
add
add
std
std
add
sar
add
mov
add
xchg
incb
clc
jb
add
push
incb
repnz
add
adc
add
add
add
add
add
add
add
add
das
add
add
add
std
incl
call
repnz
mov
add
xchg
fiadds
std
jno
add
push
leave
add
xor
add
add
add
add
jo
dec
add
aaa
add
add
add
add
add
incb
shl
add
mov
add
xchg
mov
jno
add
push
mov
pushl
jno
call
pop
add
add
rolb
inc
add
add
jb
and
push
add
add
add
add
add
add
std
std
add
roll
mov
add
xchg
xchg
add
jp
add
pop
push
add
xor
jmp
adc
icebp
adc
add
push
add
mov
add
nop
or
add
add
push
add
add
add
add
std
std
add
out
add
aam
add
rcll
lahf
push
add
mov
add
jp
add
imul
rcrb
add
add
jb
add
push
and
add
push
add
add
add
incl
clc
roll
push
mov
jmp
add
in
add
fstl
std
fnstenv
add
aam
add
les
add
stos
add
mov
add
xchg
je
add
add
push
inc
add
div
out
add
lock
repnz
add
in
in
add
in
add
loop
add
add
les
loopne
fiadds
fiadds
fldl
aad
fildl
flds
aad
fcom
aam
rcl
roll
fcmovne
loopne
loope
iret
add
aam
add
ror
add
rcl
add
into
leave
add
lret
lret
add
lret
lret
leave
add
enter
mov
add
mov
add
mov
rolb
loop
add
fdivl
add
xlat
mov
add
add
lret
scas
add
int3
cmpsl
add
leave
mov
add
les
add
les
add
rorb
fidivs
test
aam
addl
mov
mov
mov
mov
mov
add
mov
mov
scas
mov
add
mov
add
stos
mov
add
lods
lods
add
stos
add
cmpsl
cmpsb
add
mov
mov
lcall
xchg
mov
add
xchg
addl
lcall
xchg
xchg
xchg
add
xchg
xchg
add
fadd
add
nop
add
leave
jge
clc
sarb
lds
jecxz
jb
std
mov
outsl
add
mov
add
test
dec
add
xchg
pop
add
xchg
push
add
mov
mov
addr16
mov
das
add
lea
add
mov
add
xchg
std
xchg
cld
addl
int
inc
add
jle
add
data16
ja
add
jge
add
jnp
add
jnp
add
jns
add
jbe
add
je
add
insb
or
in
jno
add
outsb
add
shrb
add
add
pop
add
add
add
add
lcall
lcall
orl
cltd
mov
mov
lcall
stos
mov
rol
mov
scas
xchg
xchg
int3
xchg
xchg
rcl
aam
rcl
ror
mov
mov
shl
lock
out
mov
jle
xchg
call
cld
stc
hlt
jmp
ljmp
cld
cli
cmc
jmp
out
mov
inc
les
in
call
incl
repnz
loopne
lahf
lahf
movsl
mov
pushl
mov
ljmp
test
incl
add
addl
incl
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
lock
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
cmp
add
incl
std
std
add
xchg
xchg
pop
mov
sarl
mov
mov
fwait
lcall
add
add
stos
lods
stos
add
sahf
lahf
sub
cmpsl
cmpsl
movsb
jne
test
mov
mov
mov
test
push
lahf
lahf
popf
das
nop
adc
add
cltd
fwait
cltd
add
cltd
mov
movsb
xchg
test
stos
les
mov
int3
out
aam
aam
into
rcl
fmul
lret
mov
test
xchg
and
add
add
rol
mov
pushf
cltd
push
mov
cmpsb
out
mov
cli
mov
into
int
jecxz
loope
in
in
out
in
jmp
ljmp
out
mov
mov
scas
outsb
mov
lcall
std
add
into
int3
add
mov
xchg
cltd
rcrb
stos
std
mov
mov
jmp
in
push
div
std
cld
sti
std
cld
push
cmc
repnz
loopne
loope
sarb
addr16
xchg
cltd
sbb
push
add
add
add
xchg
xchg
pop
mov
mov
nop
xchg
xchg
pop
lahf
sahf
sahf
and
lods
stos
scas
mov
fwait
fwait
std
mov
mov
inc
rol
ror
into
loope
out
in
out
hlt
div
cli
cld
cli
cli
stc
sti
jmp
out
dec
lret
shr
lods
mov
mov
mov
mov
stos
stos
stos
add
daa
mov
test
pop
cmpsl
cmpsl
cmpsb
jo
test
mov
mov
lods
mov
cmpsl
movsl
test
test
cmpsl
pushl
int
cli
fcom
clc
in
in
ljmp
bnd
jmp
loop
dec
shl
cld
scas
mov
mov
xchg
lcall
jg
jg
mov
nop
cmp
lods
scas
popf
mov
mov
mov
mov
scas
sar
mov
mov
stos
stos
mov
into
shl
iret
leave
repz
aam
fsubp
fdiv
loop
loope
in
out
fmul
out
mov
mov
mov
xchg
lcall
addr16
fs
dec
dec
dec
adc
cmp
or
xor
cmp
add
add
add
add
jg
addb
mov
subl
mov
cli
mov
mov
cmpsl
mov
scas
pushl
lods
mov
dec
leave
lret
lret
repz
leave
enter
lret
repnz
shl
fnstcw
mov
int3
lcall
popf
mov
dec
jo
outsb
and
addr16
pop
pop
gs
dec
dec
push
inc
inc
inc
pop
dec
dec
dec
pop
pop
pop
pop
cmp
push
sbb
dec
or
jbe
xchg
xchg
xchg
inc
movsb
cmpsb
movsl
mov
mov
cld
lret
dec
leave
pushl
test
test
cmpsl
test
cmpsb
inc
mov
inc
mov
mov
out
lret
lock
cld
movsb
lcall
xchg
xchg
xchg
cld
xchg
xchg
xchg
rorb
dec
xchg
nop
pop
test
jl
je
jne
imul
je
int
jge
lods
ja
je
gs
popa
popa
pusha
and
test
stos
mov
mov
lock
mov
ret
ret
mov
mov
mov
lahf
ret
cwtl
ljmp
lret
into
int
inc
ret
mov
mov
mov
negb
pushf
call
nop
mov
rorl
mov
fsts
mov
cli
mov
mov
mov
xchg
mov
jge
insl
insl
insb
pop
mov
mov
out
mov
mov
lret
jmp
scas
lcall
jbe
adc
pushl
lds
inc
sar
int
sti
vcmpss
cmpsb
lods
stc
movsl
xchg
movsb
std
test
test
movsl
xchg
mov
clc
xchg
xchg
xchg
xchg
xchg
xchg
dec
shrl
decl
xchg
xchg
lcall
pushf
sahf
cltd
cltd
fwait
sti
nop
xchg
xchg
out
xchg
pop
jg
push
push
insb
imul
les
mov
cmc
pop
repz
xlat
xchg
call
mov
mov
call
aam
fcom
dec
lret
leave
std
mov
mov
test
test
jmp
mov
xchg
xchg
xchg
ss
mov
lods
fldt
xchg
nop
decl
xchg
xchg
lcall
popf
popf
lcall
xchg
xchg
cld
mov
mov
push
push
xchg
pop
pop
pop
cmpsl
jo
jb
test
lcall
iret
lret
mov
ljmp
sarb
loop
jecxz
in
in
ljmp
ljmp
mov
lods
lods
lcall
xchg
ficomps
xchg
xchg
push
fld
mov
xchg
xchg
call
lcall
nop
xchg
decl
mov
icebp
addl
xchg
xchg
mov
out
mov
xchg
cmp
stos
mov
pushl
mov
iret
fstp
fdivrp
lock
cli
cld
cli
std
cld
std
cli
sti
cld
push
out
out
call
fcom
mov
stos
stos
lock
dec
xchg
addb
fadd
mov
scas
test
sahf
lcall
mov
lcall
xchg
xchg
xchg
mov
popf
mov
imulb
jns
stc
mov
jae
std
shlb
int3
je
dec
addb
popf
jl
mov
mov
jmp
out
push
div
cld
sti
cld
std
std
cld
std
clc
clc
clc
jmp
loop
inc
enter
mov
mov
cltd
fwait
push
cmpl
pop
int3
mov
mov
ljmp
movsb
movsl
lcall
cmpsl
pushl
xchg
mov
push
inc
jo
inc
arpl
dec
pop
adc
lret
push
add
jmp
addr16
in
or
fildl
test
iret
ret
aam
call
clc
stc
std
std
cld
std
std
push
clc
cmc
in
out
in
sti
loope
loope
enter
mov
scas
jbe
stos
movsl
daa
cltd
cltd
fwait
add
mov
mov
fldt
stos
stos
ljmp
lods
mov
movsb
mov
stos
inc
test
inc
je
dec
pop
or
rcrl
call
push
add
rcrl
call
pop
add
fsubl
in
add
in
jno
push
ja
push
jg
jmp
aaa
jmp
test
cmpsb
jmp
in
jecxz
push
jmp
out
ljmp
rcl
shl
lret
test
mov
lods
and
mov
scas
pop
mov
scas
fldt
mov
pushl
mov
ljmp
lods
lods
inc
lods
sahf
dec
orb
pop
or
xlat
pop
add
aam
add
popa
add
fsubs
jmp
imul
push
ja
cli
jge
std
addl
push
mov
push
lahf
dec
call
mov
xchg
ffree
mov
mov
mov
test
test
adc
mov
add
mov
test
mov
scas
fldt
mov
mov
mov
mov
mov
mov
ret
mov
call
xchg
pop
call
bound
ficompl
fisubl
fsubl
jmp
push
jmp
jne
cld
jns
std
jle
cld
addl
std
mov
cld
sbb
std
xchg
and
sahf
xor
in
mov
inc
mov
stos
stos
xchg
cltd
xchg
lods
stos
lods
add
add
add
cmpsb
movsb
fldt
mov
mov
pushl
mov
inc
mov
call
xchg
imul
arpl
ficompl
fbld
call
jae
stc
jp
std
jg
incb
adc
xchg
sub
std
xchg
sub
cld
lcall
std
sahf
das
push
mov
stos
clc
test
xchg
xchg
inc
push
push
push
add
add
add
sbbl
pushf
mov
mov
ret
mov
pushl
mov
jl
shll
fsubs
frstor
in
add
in
jae
push
jp
std
addb
cld
jg
cld
addb
cld
xchg
and
std
test
dec
sti
test
stos
dec
stos
dec
std
lods
dec
sti
ret
aad
lods
sti
mov
lods
rcrb
add
add
dec
gs
pop
pop
insl
fistl
mov
ret
inc
ret
ret
mov
mov
ret
call
scas
xchg
call
jne
fsubrl
jmp
push
jmp
jns
std
jle
incb
add
sti
mov
cld
test
insb
cld
mov
addr16
mov
outsl
inc
push
jmp
shlb
leave
lahf
lahf
popf
pop
cltd
cltd
lcall
add
add
dec
pop
push
pop
pop
fcoms
mov
inc
ret
ret
mov
mov
mov
mov
fadds
or
jmp
add
bnd
cli
jl
cld
addl
incl
add
sti
xchg
sub
std
mov
test
dec
cmp
iret
xchg
rorb
aam
sti
fistpl
std
mov
mov
mov
mov
push
popa
inc
jnp
jge
scas
mov
fld
shr
int
shl
int3
int
cld
ret
ret
ret
mov
mov
call
mov
dec
call
jo
cli
jp
cld
addl
incb
add
cld
mov
mov
pushf
call
fwait
std
ficompl
jmp
mov
std
ficomps
mov
mov
xchg
sbb
incl
jp
jno
pushf
popf
popf
inc
lret
fs
in
loopne
in
aam
fcmovu
lret
int3
int
int3
lret
iret
mov
dec
jmp
or
repz
sti
jl
incb
add
incb
pop
cld
lods
push
cld
fisubrl
loop
in
std
call
mov
loop
jmp
shll
ljmp
mov
add
add
loopne
or
repnz
icebp
repz
in
lock
jmp
out
pop
out
in
jne
fsubp
xchg
fcomp
fadd
xlat
lds
jmp
ja
sti
jg
incb
add
incl
inc
jbe
jmp
ret
call
sar
ljmp
cld
ljmp
cld
in
ljmp
icebp
cmpsb
cmpsb
movsl
pushf
mov
addb
add
add
incl
std
std
add
cld
or
cmc
hlt
sbb
icebp
out
xor
jnp
leave
jno
in
outsb
adc
clc
jbe
std
jl
sti
jge
std
jg
incb
xor
dec
mov
std
in
cld
in
cli
loope
push
fsubrl
jmp
fidivrl
sti
loop
mov
ret
mov
cmpsl
xchg
lea
addl
aam
or
lret
into
ret
mov
sti
out
adc
hlt
imul
clc
jno
push
je
push
jl
testb
std
in
les
cli
ljmp
hlt
fmulp
cmpsb
in
leave
scas
in
leave
mov
iret
int3
mov
ror
mov
pushf
test
xchg
xchg
sbb
addb
add
add
pop
enter
enter
lret
scas
xchg
neg
addb
xorb
fidivrl
cld
xlat
jge
neg
mov
fistps
loop
mov
stos
rol
shrl
ret
ret
sarb
jns
les
dec
mov
mov
mov
add
add
add
mov
mov
nop
iret
mov
stos
repz
mov
mov
mov
scas
cmpsl
movsl
mov
cmpsl
lea
mov
push
scas
stos
mov
sub
mov
push
mov
int3
add
jg
addl
incl
mov
mov
mov
mov
mov
mov
lods
pushf
scas
scas
test
lods
mov
push
mov
cmpsl
inc
scas
stos
mov
and
shrl
xchg
xchg
xchg
pop
stos
lods
stos
add
addb
std
incb
std
add
add
add
mov
mov
mov
mov
mov
adc
lods
stos
setnp
mov
cltd
cltd
cltd
add
std
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
add
incl
add
cld
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
loopne
add
incl
pop
jmp
add
add
jmp
add
add
jmp
add
add
rcrb
push
out
and
movsl
cmp
inc
jne
js
ret
pop
jbe
xchg
sub
xchg
loope
leave
in
mov
push
jmp
xchg
sbb
ds
test
nop
cmp
shl
mov
adc
inc
fsubrs
ja
mov
mov
fdivrl
push
fdivl
xor
shrl
cmpl
mov
xlat
outsb
or
or
mov
ret
adc
stos
iret
xor
add
addr16
and
push
pop
xchg
movsl
jb
cmp
ret
sbb
js
insb
enter
call
icebp
mov
add
roll
and
xchg
mov
fsub
mov
or
cmp
xchg
cmp
adc
mov
shrl
add
mov
push
fnstenv
push
adc
fsubs
adc
jecxz
dec
xor
jge
push
jl
push
call
iret
lock
push
and
pop
pop
out
mov
and
xor
jne
pop
repz
jp
push
mov
jno
jbe
das
cmpsb
ror
add
dec
push
aaa
in
test
fimull
mov
mov
lds
montmul
cmpsb
pop
jg
fidivs
push
gs
cmpb
stos
mov
decb
mulb
mov
aas
test
dec
ds
xchg
mov
repz
in
dec
pop
in
jp
pop
cmp
data16
sbb
hlt
dec
mov
adc
ret
hlt
xor
push
inc
xchg
xchg
mov
hlt
mov
into
adc
lea
xor
push
scas
pop
repz
out
add
xor
cld
mov
jo
stos
sbbl
cmpsb
testl
xor
push
jae
stos
inc
test
pusha
xlat
out
xchg
sbb
out
into
mov
mov
outsb
addr16
lahf
das
out
pop
mov
pushf
lods
fbld
mov
and
in
jb
popf
xor
xchg
adc
shl
enter
adc
add
xor
xchg
imul
or
movsl
int3
aaa
repnz
test
jbe
xor
std
xchg
clc
jbe
je
and
sti
xchg
cli
ja
shrb
leave
pop
scas
cli
insl
jbe
lahf
sbb
int
rclb
adc
or
shrw
adc
xchg
gs
inc
xchg
or
movsl
cmp
pop
sub
or
cmpl
or
xor
sub
xchg
inc
fidivs
test
cmp
push
gs
test
ret
pop
sub
dec
loope
cmp
cmp
call
jg
sbb
je
inc
cmp
js
sti
xchg
es
js
ja
push
lcall
jno
push
in
sbb
jae,pt
jo
shrl
xchg
xchg
sub
cmp
xchg
scas
inc
pop
lea
fs
sub
adc
loopne
fisttps
mov
mov
daa
mov
or
cmp
arpl
pop
jge
pop
scas
sub
jbe
jl
ss
and
xchg
push
iret
mov
mov
and
jb
leave
cmp
cli
jne
nop
cmpsl
sbb
dec
enter
insl
jbe
lahf
sbb
int
rclb
adc
or
shrw
adc
xchg
fs
inc
xchg
or
movsl
cmp
pop
sub
cmp
dec
loope
pop
or
xor
sub
xchg
inc
fidivs
test
cmp
push
gs
test
ret
pop
sub
dec
loope
cmp
cmp
xchg
sub
mul
js
dec
add
xor
shrl
push
push
in
addl
cmp
ljmp
or
lret
gs
sbb
rorb
xchg
and
and
rorb
scas
inc
int
nop
daa
and
sbb
mov
push
loop
sti
sub
sub
je
and
cli
jbe
nop
daa
xor
adc
jne
pop
hlt
xor
jnp
orl
movsb
xchg
sub
fwait
lea
dec
dec
loopne
push
jae
xchg
sbb
jg
aaa
into
and
imul
jg
xchg
cs
in
sar
gs
sub
fiaddl
movsl
popa
clc
rorb
jle
jg
and
pop
negb
xor
sub
out
mov
insb
sbb
mov
cltd
xor
fdivrl
adc
inc
fcoml
ds
ret
icebp
mov
jecxz
xor
and
jo
add
xor
add
adc
mov
xor
xor
adc
repz
mov
mov
sbb
lret
cmp
dec
jecxz
inc
call
cmp
sub
mov
cmp
imul
adc
mov
inc
pop
pop
cmp
push
cmp
inc
sahf
mov
iret
pusha
testl
push
dec
loopne
popf
inc
fmulp
inc
fiaddl
pop
sub
mov
fdivl
sahf
testl
adc
out
xchg
pusha
adc
enter
jnp
mov
test
and
out
cmc
into
sub
adcb
push
mov
std
pop
xchg
inc
fadd
add
and
pop
pop
repnz
rcrl
push
call
daa
pop
inc
fmull
popf
loope
sar
jnp
sub
stc
pop
repnz
lea
pop
push
ljmp
and
dec
jg
or
pop
xchg
ds
outsb
popf
int
shlb
and
push
nop
test
cmpb
rcrl
movsb
cmp
pushf
sub
rcrb
into
mov
hlt
jno
pop
mov
inc
jnp
mov
sbb
fcomps
pop
lock
lds
push
shll
push
subb
aaa
pop
mov
cwtl
mov
jne
cli
cmpsl
add
insl
add
sti
dec
loop
cltd
xchg
int3
out
cmp
inc
sbbl
sbb
sqrtps
xor
hlt
fidivs
push
cmp
jp
add
insb
xor
xchg
cs
add
push
mov
jb
int3
cmpsl
insl
push
movsl
lcall
lret
out
pop
push
lods
inc
push
xchg
sub
xor
xchg
js
mov
imul
lahf
ss
add
or
push
mov
xchg
test
add
jbe
js
outsb
stos
loop
fisttpll
fs
jne
and
fimuls
inc
fnstenv
or
cwtl
stos
pop
repz
out
data16
cmp
sub
jno
push
imul
pop
inc
fisttpll
xchg
jp
ret
test
aad
fs
icebp
cwtl
xchg
pop
cmc
ret
cmp
mov
adc
ss
in
stos
pop
data16
xor
mov
rcr
cli
psrad
rcll
sbb
dec
push
push
call
psrad
out
dec
push
outsb
add
or
sbb
repz
xor
cmc
loop
pop
adc
xchg
aaa
iret
enter
fs
adc
mov
pop
add
sub
lcall
enter
push
dec
lods
xchg
fldt
lods
sahf
cld
movsl
cmp
shll
testb
sbb
rorl
dec
out
outsb
mov
dec
daa
mov
jae
jle
pop
mov
lahf
sti
xchg
int
gs
nop
out
dec
loopne
mov
in
cmp
jle
add
xchg
popl
sbb
push
outsb
add
xchg
cmpsl
lea
stc
cmp
push
cmp
test
mov
xchg
sub
dec
mov
sub
lods
ret
roll
xchg
mov
mov
mov
in
add
xchg
push
addr16
dec
testl
iret
stos
out
ficoml
movsl
cmp
pop
sub
dec
xchg
sub
hlt
ret
hlt
mov
push
jns
push
addr16
pop
int3
cltd
out
test
lock
sbb
cmp
mov
push
movsl
mov
loopne
movhps
aaa
into
push
mov
rol
andl
push
or
push
in
push
or
and
xchg
push
ja
push
mov
inc
out
shrl
cmp
bound
fnsave
jmp
add
sbb
cmpsb
in
rolb
xchg
add
je,pn
sbb
lock
mov
pusha
cmc
adc
fcompl
cmp
jb
mov
das
test
adc
pop
sbb
fmul
arpl
or
test
test
pop
and
lods
dec
cld
jmp
xor
arpl
jp
lea
jl
dec
inc
lahf
in
roll
push
in
push
dec
stc
xchg
je
or
cmp
call
dec
jnp
insb
add
mov
inc
mov
sbb
mov
sti
rcrb
loopne
xchg
adc
xchg
imul
sbb
mov
cli
andb
xchg
cld
dec
femms
cs
aaa
imul
into
mov
outsl
adc
jnp
pop
bound
inc
fwait
cmp
insl
ret
test
call
add
arpl
and
nop
or
pop
sbb
sub
jns
inc
pop
sbb
push
fisttps
cmp
push
and
add
cmp
push
xor
push
movsb
aad
js
clc
in
sub
ja
subl
mov
mov
cmp
xor
cli
mov
sub
xchg
jnp
push
icebp
test
aas
jle
and
das
xchg
xor
push
lds
inc
push
daa
inc
icebp
movsl
ljmp
imul
dec
push
leave
ljmp
sbb
mov
cld
dec
lock
jle
xchg
cmp
out
shlb
push
cltd
rorb
jge
lret
je
sbb
xor
into
out
out
xchg
testb
mov
inc
xor
push
fisubs
fisubs
pushf
push
repz
cwtl
cmpl
sub
and
hlt
adc
push
mov
leave
mov
sbb
faddl
inc
rol
repnz
pop
fimull
int3
sub
bnd
push
shrl
stos
lods
int
frstor
sub
test
ja
jp
cld
repnz
loop
xor
leave
orb
iret
xchg
mov
or
jge
imul
lret
xor
out
imul
xor
test
sti
mov
pop
mov
adc
dec
or
or
or
xchg
sbb
add
call
incl
sar
and
cmp
cmp
out
pusha
xchg
call
iret
jne
mov
mul
bound
rcrl
fwait
and
out
lds
push
or
jle
cmp
mov
sub
inc
dec
push
mov
fwait
test
jl
gs
sti
or
movsb
mov
lret
jno
mov
jp
je
cmp
test
mov
sub
jnp
scas
flds
lods
and
inc
or
gs
ljmp
jae
iret
cmp
sub
push
mov
push
rorb
mov
loop
mov
sub
ja
jg
repnz
cmp
xchg
pop
int
add
inc
pop
out
and
repz
in
test
xor
adc
int
mov
out
push
sub
data16
xor
fsubs
ret
popa
clc
mov
pop
hlt
insb
sarb
add
jnp
shlb
sub
sbb
hlt
daa
mov
enter
dec
loop
jle
push
ljmp
jno
outsl
and
add
inc
fdivrs
rcrl
push
sbb
jge
imul
or
jo
daa
mov
mov
testb
pop
adc
cmpl
adc
cmp
mov
add
adc
xchg
cs
cmp
jle
adc
pushf
nop
jb
imul
repnz
daa
xor
rcrb
mov
push
out
cmpsl
lds
outsb
add
cmpsb
pushf
xor
push
mov
fmuls
arpl
mov
sbbl
jge
jns
sub
iret
les
push
in
xchg
icebp
push
mov
mov
cmp
cmp
push
pop
bnd
rcrl
outsb
add
xchg
or
icebp
mov
cltd
stos
inc
les
mov
in
leave
pusha
add
out
pop
mov
jbe
pushf
gs
jp
jecxz
and
xchg
aam
fdivr
mov
pusha
testl
dec
iret
lretw
out
pushf
xor
out
sti
xchg
mov
mov
mov
mov
outsl
out
mov
into
jo
testl
int3
mov
xor
and
mov
test
mov
and
mov
fdivrp
xchg
ljmp
mov
add
and
cmp
rcrb
dec
jmp
pop
sahf
push
addr16
cmp
push
test
repz
xchg
ljmp
xchg
sub
fidivs
xchg
pop
repz
jnp
inc
in
mov
outsl
cltd
xor
cmp
jns
mov
lods
lahf
ss
aad
or
push
in
lret
and
xchg
outsb
in
test
xchg
mov
out
cmp
cmp
dec
inc
pop
pop
repnz
imul
sti
jns
clc
adc
test
adc
mov
fsubl
shrl
aam
push
xchg
inc
cmp
mov
pop
adc
out
cs
mov
popf
std
dec
jecxz
mov
data16
sub
in
test
orb
notl
cmpsl
ds
adc
shll
lds
pop
lock
shrl
in
push
lret
xor
mov
in
pop
pusha
pop
montmul
cmpsb
xchg
sub
dec
in
dec
loop
out
shrl
xor
test
roll
sub
cmp
or
les
sub
in
push
loop
sahf
stos
imul
mov
xchg
fimull
pop
mov
repz
jnp
cmp
push
lret
mov
sarb
add
pop
mov
sub
jno,pn
cmp
pop
jmp
dec
in
add
insb
add
dec
cltd
xor
sbb
dec
add
cmp
jp
aad
loopne
pop
lock
hlt
mov
sub
pop
cmp
mov
xchg
mov
mov
xor
loope
pop
shrl
pop
push
xchg
clc
or
sub
cs
push
add
dec
loopne
jmp
addr16
mov
rolb
mov
and
jnp
int3
daa
mov
mov
and
lods
cmc
ds
jb
lcall
daa
data16
adc
scas
inc
xchg
mov
jae
fidivs
xchg
fstpl
aad
stos
sti
or
mov
repz
fildll
shll
adc
push
das
mov
js
outsl
fisttpl
add
imul
push
mov
loope
mov
in
pop
mov
mov
test
dec
mov
mov
scas
and
shlb
mov
mov
inc
out
test
test
dec
jecxz
aam
roll
dec
fistps
mov
std
loop
xchg
sub
inc
and
jge
loopne
scas
xchg
rcrl
xchg
dec
or
ja
jo
mov
andb
add
sbb
aam
inc
std
cmp
out
gs
aas
adc
inc
pop
jae
aas
outsb
ja
lods
pop
xchg
sub
lds
pop
stos
dec
rclb
loope
cmp
fidivs
pop
lock
std
xchg
arpl
sbb
and
cmp
fisttps
loope
notl
xor
js
fistpl
or
hlt
xchg
sub
mov
mov
pop
and
jbe
jbe
addr16
dec
jmp
push
mov
or
adc
sub
cmpsl
testb
iret
dec
push
addr16
xor
pop
jb
scas
jg
cmp
enter
pop
mov
inc
jg
into
gs
shr
subl
or
dec
popf
sub
mov
leave
inc
faddl
push
jmp
cs
sahf
mov
sbb
mov
xlat
lahf
mulb
mov
jl
mov
imul
jae
jnp
mov
loope
xchg
fisttpll
ljmp
mov
int
mov
adc
hlt
outsb
add
or
mov
inc
and
out
arpl
add
ljmp
testb
stc
adc
inc
or
pusha
aaa
arpl
outsb
pusha
out
mov
pusha
testl
push
inc
add
outsb
outsb
mov
in
inc
fld
add
div
mov
jg
inc
pusha
shrl
insb
popf
xor
dec
out
xchg
jle
push
mov
outsb
add
cli
scas
mov
pop
adc
test
jns
dec
cmp
mov
ret
shl
add
mov
shll
mov
cmpsl
int3
inc
xlat
jle
test
ret
xchg
pop
cmc
movsl
jmp
cmp
les
cmp
push
push
call
fidivs
lret
mov
xchg
aam
fsubrs
lcall
mov
cmp
iret
inc
stos
and
xchg
arpl
sbb
je
mov
rcll
add
imul
fidivs
sbb
xchg
repz
je
sbb
mov
lret
loope
cmp
xchg
or
out
sub
scas
pcmpeqd
push
xchg
xchg
sub
je
in
pop
stc
mov
push
je
or
inc
shlb
inc
movsl
cmp
insl
out
test
lods
or
in
mov
sub
pop
xor
test
or
mov
roll
out
sub
mov
or
mov
cmp
testl
repz
aad
scas
outsl
adc
xchg
xchg
das
mov
adc
in
das
xchg
push
insb
add
mov
hlt
sbb
and
stos
test
sbb
lea
xor
pop
inc
shrl
jnp
push
xlat
outsb
imul
cltd
pop
test
mov
mov
lea
stos
aaa
xchg
aad
pusha
xor
enter
dec
lock
neg
addr16
mov
int3
fnstenv
inc
mov
lahf
mov
jmp
add
push
dec
testl
in
ret
jo
mov
xor
sbb
mov
xchg
xor
push
js
popa
dec
jno
and
call
aas
call
adc
mov
xchg
js
fisubrl
shll
stos
montmul
cmpsb
xchg
jg
or
mov
jno
inc
out
and
xchg
jbe
ret
xchg
xchg
push
clc
lret
bound
dec
add
mov
in
gs
add
mov
cltd
xor
and
shlb
inc
and
fdivl
jmp
jmp
rorb
imul
idivb
cmp
mov
or
imul
adc
sbb
ds
fldcw
lret
bound
mov
mov
call
or
outsl
pop
xor
mov
dec
jecxz
jecxz
push
push
adc
stos
dec
cwtl
add
ret
aas
xchg
daa
test
mov
pop
and
fcomp
enter
cmp
cmpsb
out
movsb
or
aas
sub
xchg
xor
jl
inc
adc
add
push
and
aam
mov
sub
out
mov
lods
xor
test
push
rcl
insl
mov
ljmp
dec
cs
adc
pusha
out
xchg
xchg
xchg
daa
fcmovnb
and
shlb
fs
mov
and
test
sbb
cmc
push
sbb
cmp
sub
fdiv
movsb
mov
subl
stc
dec
mov
setnp
int
add
cmp
bound
sub
jae
fcmovu
or
cmc
xchg
nop
cmpl
xchg
sub
mov
sbb
mov
or
mov
mov
ljmp
hlt
inc
mov
ret
outsl
jo
iret
xchg
jle
mov
std
popf
push
mov
leave
pop
shrl
gs
mov
jno
push
subl
lods
out
outsl
arpl
and
sti
jl
loopne
pop
arpl
cmp
sbb
xchg
pop
fisubrs
mov
lea
push
pop
fmuls
loop
xor
add
aas
push
push
add
pop
insl
push
loop
fldl2t
sbb
mov
adc
add
jecxz
xor
ljmp
ss
mov
lods
adc
mov
push
lods
mov
jl
loop
aas
mov
jecxz
or
mov
das
add
test
outsb
pop
mov
cltd
jmp
roll
test
ja
push
test
clc
outsl
lcall
mov
fdivrl
test
push
iret
adc
mov
ret
pop
repnz
andb
push
lret
cltd
out
std
incb
ja
dec
repz
pop
dec
leave
ret
and
fildll
ss
dec
mov
jnp
test
or
nop
xchg
das
mov
pop
push
xchg
adc
push
cwtl
sub
cmp
xchg
push
sub
jmp
pop
sbb
movl
and
repz
bound
cmp
fwait
cld
push
inc
dec
pop
ret
sahf
mov
test
pop
or
xchg
call
ja
into
clc
jb
movsl
aad
lods
mov
lock
sub
pop
cmpsl
jl
inc
jge
add
jae
jae
mov
in
js
movsb
dec
mov
js
or
and
or
mov
dec
sarb
pusha
cmp
jmp
push
mov
cmpsl
lret
dec
jns
xchg
movsb
xchg
ljmp
fcomps
mov
cmpsb
mov
sbb
lods
jne
xchg
mov
adc
stos
fcoml
jo
sbb
sub
mov
xchg
lcall
push
out
cmp
call
jge
rcr
iret
imul
cmpsb
popa
movsl
inc
adc
push
ficoms
nop
xchg
or
std
xlat
je
push
push
dec
pushf
and
cltd
shl
fneni(8087
into
pop
push
lds
test
addr16
jno
push
sbb
adc
bound
std
inc
pushf
push
adc
repz
data16
cmp
sbb
adc
sub
adc
or
cltd
leave
test
out
in
jmp
or
pop
ljmp
faddl
adc
mov
jp
scas
inc
fwait
aaa
mov
mov
or
loop
xor
lea
lea
dec
jmp
cmpsb
jno
shll
pop
adc
cmpsb
xchg
cmp
cmpsb
adc
insl
push
fcmovbe
jbe
jno
pusha
sbb
leave
outsl
pop
scas
mov
mov
mov
loopne
sub
je
hlt
ficomps
scas
push
add
fbld
jo
hlt
adc
les
rcr
scas
ss
dec
jne
mov
adc
sub
mov
dec
add
sbb
testl
sub
cmp
pop
adc
adc
in
into
movsl
cmp
daa
xchg
sub
inc
pushf
sub
jae
cmc
sbb
scas
inc
jns
mov
stos
addr16
scas
and
shlb
cltd
fcoml
outsl
xor
xchg
and
jmp
dec
test
or
jle
dec
mov
pop
mov
or
xor
repnz
std
orb
sub
into
push
ss
pop
mov
mov
push
dec
inc
jmp
sbb
xor
pop
xchg
jbe
push
mov
cmp
insb
jmp
xchg
pop
lea
mov
mov
sbb
popa
pop
repnz
xchg
mov
loopne
push
jnp
shlb
sub
cltd
aas
in
push
dec
mov
icebp
imul
dec
jmp
dec
lock
sbb
fs
ja
mov
ljmp
inc
pop
hlt
push
mov
xor
mov
pop
pusha
loope
lea
stc
pop
sub
adc
pop
jno
cli
push
data16
popa
dec
inc
adc
sahf
and
mov
data16
jg
dec
into
push
inc
xchg
sub
push
pop
lretw
dec
add
xchg
mov
mov
scas
sub
or
inc
and
or
xchg
pop
sub
aad
sub
jae
ja
sarl
pop
jmp
push
cmp
jmp
aad
jmp
imul
fs
mov
push
xchg
mov
sbb
lret
lock
idivb
sub
mov
cmpsb
mov
daa
test
ds
inc
test
sub
xchg
jne
ss
mov
cltd
add
stos
mov
sub
ret
daa
xchg
mov
ja
cmp
flds
xor
sub
mov
cmpsl
test
and
mov
orb
out
cmpsb
into
inc
xor
lret
sbb
inc
push
out
rcrl
cmp
jge
jle
pop
push
fwait
hlt
pop
orl
addl
repz
cmp
ficomps
cmp
imul
cmp
dec
fcoms
mov
dec
or
fiaddl
push
xor
cwtl
lret
and
shrb
lods
pusha
jb
jb
repz
inc
cmp
ret
test
aad
arpl
jmp
push
or
adc
push
mov
push
gs
pop
fwait
sbb
arpl
repz
enter
or
mov
mov
loopne
imul
xchg
xor
hlt
shlb
add
fildl
gs
sbb
sbb
xorl
xor
negl
call
jmp
shl
push
loopne
mov
inc
xchg
mov
xor
pushf
fsqrt
xchg
xor
ret
lret
outsb
js
dec
imul
or
push
ds
pop
es
out
cmp
pop
in
pop
cld
dec
fmuls
outsb
call
leave
pop
flds
incb
fmull
add
lds
mov
mov
ss
jp
das
jns
pop
stc
push
mov
repz
push
pop
insl
dec
sub
xchg
inc
loope
repz
jo
fldt
aaa
cltd
xchg
pop
icebp
nop
jl
and
lret
gs
add
les
push
sub
pop
out
addr16
leave
das
rclb
dec
frstor
ret
inc
loope
push
xchg
movsl
lret
pop
std
jns
dec
or
in
mov
shll
outsl
or
lret
stos
dec
testb
xlat
pop
icebp
fmull
mov
int
pop
gs
sbb
push
test
adc
cwtl
shl
mov
ds
dec
inc
push
sub
aam
push
sti
sbb
hlt
pop
stos
xchg
lds
inc
dec
adc
call
xchg
jae
push
xchg
mov
imul
mov
cmpl
leave
jmp
or
push
or
scas
mov
sahf
aaa
mov
mov
jp
mov
adc
adcb
mov
add
faddl
xor
inc
mov
lcall
or
pop
shrl
in
jnp
dec
and
fdivrs
dec
mov
mov
arpl
in
lret
push
les
cmp
cwtl
mov
mov
pop
popa
xchg
cmp
in
fadds
popa
push
ds
xchg
push
addl
adc
fsubrl
repz
xchg
test
add
vdivss
sub
pusha
cmp
and
adc
inc
add
mov
out
mov
popf
shrl
mov
jnp
or
or
dec
lods
test
add
jns
mov
pushf
sbb
subb
fisubrl
in
push
ror
es
push
dec
mov
jle
inc
into
dec
loopne
lcall
lcall
add
lods
xchg
pop
hlt
lahf
loop
fs
mov
push
mov
aaa
inc
or
or
rep
sbb
call
pop
pop
mov
ljmp
jbe
push
dec
dec
xor
xchg
lret
cmp
inc
daa
arpl
arpl
mov
xchg
outsl
sub
sbb
push
jnp
or
xchg
sbb
arpl
jno
mov
lahf
mov
cmc
pushf
ljmp
ja
mov
je
pop
inc
sti
add
and
mov
sub
mov
cmp
dec
sub
jnp
sub
xor
or
je
outsl
mov
lods
xchg
fcoms
pop
daa
dec
mov
pop
movsb
in
xor
data16
adc
cmp
psubw
mov
mov
aaa
push
cmp
test
ret
mov
inc
cli
in
mov
gs
push
xor
sub
clc
jb
andl
fdivr
rcr
inc
adc
int
cmc
shl
or
inc
mov
lods
ss
jns
xor
mov
cli
mov
out
gs
lret
push
xor
mov
mov
add
inc
sub
sub
rcrb
ret
mov
hlt
mov
in
sbb
dec
xchg
lret
lahf
mov
push
xor
cmpsb
push
imul
push
inc
pop
mov
mov
or
aad
jnp
clc
into
das
pop
sbb
cltd
xchg
mov
mov
ss
scas
sbb
daa
sbb
adc
cmp
adc
popa
shrl
fistpll
jg
fildll
popf
lahf
out
push
fstps
mov
bound
stc
aas
and
mov
enter
inc
jmp
out
jmp
lds
enter
leave
jne
sbb
fs
jp
pop
and
mov
loopne
mov
scas
push
add
mov
push
lahf
ret
jmp
movaps
fs
popa
dec
lcall
xchg
int3
dec
jae
int3
xchg
mov
das
ss
or
jp
rorl
dec
addr16
int3
js
pop
lcall
pop
xor
dec
ret
pop
mov
fcomi
jne
popa
in
mov
cwtl
dec
aam
inc
adc
test
push
iret
clc
adc
insb
or
add
test
aas
mov
inc
repnz
hlt
xchg
nop
repz
adc
rolb
pop
insl
std
pcmpgtd
push
add
or
cld
pop
push
clc
inc
aas
xchg
fmul
push
sbb
cs
movsl
cmpsl
push
push
in
in
mov
or
nop
cld
push
mov
xor
sbb
pop
test
cmp
leave
das
xchg
mov
pushf
adc
movsl
push
sbb
inc
cld
dec
cmp
sbb
sub
out
aas
xor
dec
lods
clc
add
push
push
clc
jb
inc
icebp
push
xchg
orl
and
inc
xchg
push
ret
shrl
cwtl
pop
pop
arpl
mov
jno
clc
sub
cmp
mov
pop
je
imulb
mov
push
ss
popf
test
mov
jnp
pop
cmc
sahf
sbbl
das
push
std
push
push
int
fwait
fs
sbb
jbe
xchg
mov
lds
loop
jns
add
ss
add
fsubp
mov
xor
sub
xor
push
fnstcw
cs
fimull
clc
sbb
jl
std
loop
inc
popw
fisubrl
or
in
mov
sbb
or
sbb
sbb
mov
cmp
ror
mov
push
jmp
addb
pop
sbb
mov
cmp
adc
mov
mov
gs
dec
bound
pop
rcl
imul
or
std
pop
mov
cmpsb
mov
jnp
out
add
gs
jmp
in
stc
pushf
daa
lock
cld
and
hlt
push
insb
in
jg
lret
add
push
insl
test
mov
xor
negb
mov
popf
jns
push
xor
and
imul
push
lea
cmc
cltd
push
xchg
and
stc
push
mov
inc
std
xor
fadd
in
and
jmp
push
es
inc
movsb
cmp
shr
dec
inc
ss
aad
mov
das
test
pop
cli
pop
push
push
cmp
xchg
sbb
enter
out
in
aas
jmp
sbb
sub
dec
mov
aas
loop
loop
dec
lods
nop
sbb
fs
inc
mov
into
adc
inc
mov
mov
jmp
sub
aas
sahf
fstpl
inc
xor
stos
outsl
ret
inc
fsubrs
shlb
lea
lds
dec
jae
push
jo
cwtl
in
push
outsl
out
leave
out
cwtl
clc
icebp
rcl
sub
sahf
addr16
xor
mov
push
jbe
adc
loope
push
pop
and
out
pop
ss
sub
loop
paddd
jo
push
adc
and
push
ss
enter
and
in
fidivl
and
aas
rcrb
and
pop
lods
push
xor
mov
fstps
js
sbb
loope
pop
push
mov
outsl
inc
xor
pop
shll
dec
loopne
pop
jp
addr16
xor
dec
jne
inc
nop
pop
cmc
lcall
cmp
mov
pop
fildl
fs
out
jg
gs
push
popf
fdivrl
inc
inc
jbe
loope
jecxz
mov
pusha
in
in
fwait
xchg
add
cmp
pop
ja
mov
subb
sbb
adc
and
lahf
nop
out
push
cmp
jmp
sub
pop
jle
insl
jecxz
mov
test
test
adc
nop
cmp
adc
push
mov
add
ds
fadd
loope
cmp
imul
aam
sbb
sbb
cmp
push
jg
dec
popf
or
insb
dec
fcmovnbe
mov
enter
xchg
inc
ret
fwait
repnz
mov
pcmpgtd
xchg
test
and
aaa
xchg
jno
xlat
clc
mov
mov
lret
fsubl
rcll
pushf
test
mov
test
mov
dec
xor
cmp
js
add
jmp
pop
push
jmp
mov
xchg
mov
test
mov
imul
pushl
push
or
jp
cmpsb
iret
adc
into
out
popf
push
test
fs
or
sub
out
imul
and
jno
int3
mov
cmp
stos
push
test
push
xchg
in
out
mov
popf
push
jne
in
fldenv
push
outsl
outsl
add
in
clc
jge
arpl
mov
pop
push
mov
xchg
std
push
sbb
sti
jae
fld
test
ret
and
iret
fidivl
mov
scas
fsts
hlt
and
xorb
pop
cmc
stos
stc
inc
mov
xor
mov
fsub
shl
jae
mov
arpl
imul
stos
cld
aam
dec
mov
out
ljmp
es
mov
jge
or
push
stos
push
inc
movsb
pop
mov
in
aaa
popl
cli
mov
cli
lods
mov
or
test
int3
in
push
loope
push
repz
or
mov
push
sub
sti
dec
sti
mov
inc
in
shll
sub
sub
int
ljmp
add
lcall
push
mov
fnsave
ficompl
scas
imul
add
pop
stc
subl
ja
ret
insl
mov
aam
xor
sbb
sub
pop
pop
subl
movsb
xlat
std
imul
fstl
jmp
inc
ja
dec
out
cli
data16
inc
pop
repz
lret
inc
rorb
orl
xchg
jno
cmp
outsb
je
push
add
and
adc
pop
xor
xor
mov
xor
mov
mov
pushf
out
and
add
jo
cld
cmp
cmp
jo
mov
out
stc
sbb
add
nop
push
push
and
adc
repz
pop
xorb
pop
arpl
xor
stos
add
out
test
lret
sub
data16
jecxz
add
pop
pusha
fst
shrb
pop
sti
mov
xchg
aad
cmp
add
sbb
or
fisubrs
pop
add
popa
jle
mov
xor
enter
push
xchg
scas
jbe
mov
outsb
mov
jecxz
mov
push
mov
shr
pop
test
std
hlt
pop
sbb
lock
cmp
in
push
jo
jbe
hlt
sbb
lcall
xor
ret
jb
push
push
push
mov
adc
outsl
scas
scas
xchg
imul
js
xlat
lods
push
pushf
pop
iret
jmp
xchg
cld
jno
cmpsb
sbbb
inc
mov
mov
test
mov
mov
mov
dec
add
add
add
int
or
jne
xchg
jo
rcll
pop
xchg
pop
dec
fwait
adc
fidivl
xchg
scas
inc
sarl
or
pop
mov
shlb
inc
je
mov
xchg
in
inc
sahf
or
pop
xor
mov
in
xor
pop
addr16
mov
push
ret
stos
in
pop
aas
gs
out
in
inc
loope
jl
mov
out
cmpsl
mov
cmp
scas
pop
lock
outsl
shll
aaa
loop
pop
mov
into
out
jl
jb
scas
mov
adcl
shlb
mov
negb
fstps
nop
out
adc
and
repnz
imul
push
leave
lock
dec
les
mov
mov
xchg
add
jae
mov
xchg
push
add
lret
and
push
fnstsw
daa
call
jecxz
cmp
mov
dec
ret
divl
movsl
imul
addr16
push
dec
shl
pushf
jno
insl
adc
lret
push
adc
dec
leave
mov
jl
pop
jbe
js
shl
and
rclb
js
inc
cmp
adc
push
call
mov
in
push
pop
mov
jmp
xchg
je
pop
lods
fdiv
dec
pop
mov
ja
shlb
add
xchg
addr16
into
add
inc
lods
mov
loope
fisttpll
xlat
movsl
jno
mov
push
int
decb
jp
fcmovnbe
and
inc
push
movsb
dec
shll
push
pop
xchg
mov
sub
scas
xor
pop
cmpsb
and
lcall
in
les
out
adc
xor
loopne
fsubrl
outsl
add
add
cmp
fidivrl
fwait
or
jmp
push
fildll
test
aam
or
inc
cmp
sarl
dec
int
daa
mov
adc
pop
cli
fwait
sbb
add
sub
mov
sub
inc
xchg
and
cmp
xchg
clc
dec
or
mov
mov
sbb
xor
ficoml
lods
mov
test
lods
popa
cli
shlb
fld
mov
and
inc
inc
dec
fs
test
mov
clc
movsb
adc
in
les
lahf
mov
add
shlb
pop
movsl
lea
inc
insb
pop
out
repz
or
jns
adc
call
push
out
pop
lds
jp
cltd
mov
xchg
adc
jp
dec
mov
xchg
loopne,pn
dec
outsb
cmp
movsb
sub
jo
cmp
mov
loopne
ljmp
cltd
int3
cltd
cmp
mov
cmpsl
sti
jl
ret
frstor
pop
mulb
xchg
outsl
xor
jge
xchg
stc
in
fwait
test
mov
pop
mov
or
push
inc
and
sub
add
inc
in
pop
sub
jle
mov
pop
arpl
mov
jb
test
jmp
repnz
add
loopne
xchg
and
mov
mov
or
xor
loop
bound
dec
nopl
in
and
out
push
in
shll
adc
lahf
popf
jbe
mov
repnz
fs
sub
jl
mov
rolb
loopne
aam
lods
xchg
cs
clc
adc
ret
jns
xchg
mov
cli
pop
into
pushf
rcll
clc
mov
ljmp
push
fwait
aad
and
or
clc
jbe
or
inc
xor
fstpt
jge
lret
int
pop
cmp
dec
movsl
jb
int
fwait
sbb
mov
cmp
cld
sarb
mov
stc
push
aad
push
rolb
stos
shrb
cmpsb
mov
lcall
leave
adc
test
mov
jle
sbb
mov
and
push
into
sbb
inc
xchg
fs
mov
roll
or
xchg
mov
push
dec
cmp
loope
in
jecxz
or
scas
out
push
popa
insb
xchg
and
rclb
jbe
adc
jbe
mov
lret
jl
jbe
push
imul
or
lcall
scas
sub
stc
inc
aaa
dec
add
fnstenv
mov
cmp
push
out
stos
sub
fsubr
cmpl
or
pop
or
jge
mov
lahf
mov
fsubrl
or
sbb
sub
add
jae
mov
push
gs
nop
mov
stos
mov
xor
jo
aam
pop
cli
movsl
repnz
mov
mov
mov
enter
test
pop
jo
pop
ja
lods
fcmovb
dec
movsb
xlat
inc
or
jg
adc
dec
das
ret
xchg
mov
adc
mov
popf
adc
jnp
push
xchg
xlat
in
fisttps
leave
pop
sahf
in
mov
xchg
loop
jl
insl
mov
sbbb
jno
lods
mov
sub
mov
fiadds
or
push
lods
fdiv
test
ds
sarb
rcrb
mov
daa
push
sub
inc
push
pushf
mov
in
rcrb
cmp
cltd
cmp
int3
mov
push
mov
rol
jnp
or
fnstenv
or
dec
and
inc
jae
ret
bound
lods
cmpb
and
pop
push
inc
add
jg
and
into
xor
daa
dec
out
and
aam
lods
mov
sbb
push
bound
lock
jle
shll
xor
int
cmpsl
pushf
repz
or
ret
cmpsb
mov
sbb
mov
outsl
xchg
enter
js
fmulp
push
clc
filds
mov
lcall
std
xor
fisubl
test
mov
cs
cmpsl
in
dec
pop
xor
pop
loop
fs
scas
push
jae
jae
cld
jle
int3
xchg
insl
cmp
sbb
lahf
popa
push
sbb
and
inc
dec
push
cmp
lods
adc
cmp
testl
mov
ret
gs
jbe
jmp
bound
jne
cmp
sub
data16
xor
insl
subl
pop
arpl
fiaddl
adc
sbb
sub
mov
mov
pop
and
insb
leave
int
jge
loopne
cmp
dec
push
mov
shl
sub
xchg
mov
push
monitor
popa
mov
add
mov
mov
stos
xchg
xor
cmp
push
dec
jbe
arpl
push
xchg
stc
imulb
add
lock
adc
lods
mov
bound
scas
subl
jbe
or
rcrb
cs
shll
insb
xchg
call
je
in
adc
sub
fnstsw
rcrl
popf
lcall
cmp
bound
cltd
imul
cmpsb
dec
add
or
pop
call
pop
data16
pop
push
mov
push
popl
mov
pusha
repz
jmp
xor
jae
push
push
mov
dec
repz
xchg
add
scas
inc
add
or
or
sbb
std
mov
test
js
repz
ret
xchg
mov
insb
mov
mov
out
inc
mov
sub
sbb
pop
mulb
sahf
inc
mov
scas
mov
rorb
shrl
cltd
jo
mov
ds
idivl
or
mov
or
push
fisubl
cmp
rcrb
xchg
inc
push
xchg
push
mov
cli
sub
out
sub
and
sub
or
popf
sub
pop
jno
xor
add
mov
ja
xchg
pushw
js
jl
mov
test
xchg
adc
outsb
cli
jo
pop
enter
mov
mov
jle
fidivs
nop
std
jl,pt
xchg
cmpsb
in
rcll
iret
outsb
stc
mov
loop
bound
xchg
filds
dec
jbe
dec
and
out
inc
in
jns
add
push
jns
aas
adc
xchg
ja
mov
lahf
adc
cmp
fistpll
mov
shlb
xchg
fstpt
inc
add
mov
sti
mov
bound
or
ljmp
jno
mov
mov
mov
out
mov
cmpsb
sub
mov
inc
add
push
test
data16
in
xchg
and
mov
push
test
mov
cs
loopne
cli
adc
pop
movsl
cmc
fnstsw
or
xor
fldcw
loop
insb
mov
add
rorb
xchg
xor
dec
stc
xchg
cmp
pavgb
loope
jge
ljmp
stos
and
aad
and
mov
xchg
jecxz
inc
daa
enter
jp
ss
stos
and
std
jo
in
adc
lds
jbe
inc
call
mov
xchg
bound
repnz
sbb
push
or
xor
aas
add
sbb
mov
adc
lret
das
or
stos
push
dec
or
cmp
hlt
xchg
xchg
and
sbb
pop
adc
sub
sbb
mov
lea
mulb
fnstenv
out
adc
cmp
test
sahf
sbb
pop
dec
enter
loope
sub
add
push
jo
insl
test
or
mov
pop
es
aas
add
mov
mov
fdivrp
xor
mov
or
pop
jl
dec
adc
mov
lret
cmp
clc
gs
nop
pop
aad
testl
mov
or
scas
and
inc
je
dec
xchg
jl
sbb
push
mov
dec
cmp
or
sahf
xlat
jg
push
pop
push
fdivr
jo
mov
pop
mov
xchg
aaa
or
lock
dec
das
adc
inc
sbb
popf
fiadds
stos
aam
scas
mov
in
mov
add
lds
pop
dec
xchg
jge
cltd
push
pop
push
icebp
out
imul
pusha
daa
out
mov
aad
sub
xor
testb
les
jle
pusha
pop
or
rcrb
sub
xor
dec
or
rorb
in
and
je
gs
sarl
jne
adc
sub
or
adc
pop
xchg
inc
add
sbb
mov
inc
clc
test
push
gs
movsl
imul
mov
xchg
inc
push
cmc
and
jb
and
leave
pop
gs
rcr
repz
jle
mov
xor
inc
fsubl
fwait
addb
mov
or
inc
xlat
daa
sub
cmc
jns
mov
adc
rcr
jb
out
lcall
inc
mov
stos
test
lret
sti
out
nop
sbb
sbb
mov
ret
hlt
ficomps
movhps
push
bound
pop
fwait
adcl
loopne
rcrb
clc
xchg
xor
push
es
xchg
stos
inc
fcmovnu
mov
mov
cld
stc
sub
dec
jg
sbbb
mov
ja
fdivp
mov
sub
inc
shrb
push
scas
inc
test
lret
in
adc
sub
xor
jno
or
ret
lahf
das
shl
outsl
push
push
repnz
in
and
xchg
sub
outsb
add
mov
fidivrs
ds
ds
cwtl
mov
fsubrs
xlat
pop
mov
in
lea
sub
stos
imul
mov
fstl
push
and
add
cmpsl
orb
aad
inc
pop
sbb
xchg
leave
pusha
pop
outsl
pop
sahf
mov
rcrl
cli
jns
add
sbb
arpl
pop
addr16
je
ret
cld
pop
mov
sbb
mov
pop
push
sbb
movsb
mov
xchg
lds
sbb
and
pop
pop
mov
nop
movsb
movsb
add
incb
daa
and
pop
dec
inc
fnstenv
lcall
sub
in
inc
fsts
ss
jo
pop
sahf
movsl
xchg
add
add
sbb
pop
sbbb
jge
repnz
xchg
mov
jbe
in
ret
and
mov
bound
cmpsl
add
mov
fsubrp
orl
sub
dec
cwtl
je
cmp
loop
add
cmp
pop
jno
mov
pushf
test
inc
fsubp
hlt
and
xor
mov
sbb
ret
lods
pusha
not
in
int3
sbb
aas
leave
pusha
imul
int3
mov
loopne
xlat
aam
orb
mov
mov
mov
jle
cltd
xor
jne
adc
nop
daa
adc
ss
jo
mov
mov
std
xchg
lret
xlat
push
jmp
in
pop
repz
xor
lock
jo
mov
sbb
add
inc
fcoml
ss
outsl
jle
subb
mov
out
adc
jne
outsb
outsl
int3
arpl
fcmovbe
push
aas
and
in
test
mov
add
add
push
inc
and
aas
fwait
jg
xlat
test
mov
out
pop
lock
push
out
adc
inc
fwait
insl
js
xchg
mov
icebp
mov
pop
outsb
add
cmp
pop
scas
fwait
pop
jo
xchg
push
rolb
mov
inc
rep
inc
sub
dec
aad
js
fsubrs
cltd
test
ret
pop
sub
inc
in
xor
mov
out
test
mov
test
pusha
testl
das
push
call
fdivrs
mov
stc
mov
and
daa
mov
jg
mov
dec
lahf
jne
enter
xchg
ljmp
out
xor
pop
dec
lea
or
mov
inc
fstpl
in
test
mov
mov
fcmovne
gs
lods
inc
loopne
jne
popa
add
gs
fdivl
inc
loope
outsb
add
cmp
pop
out
test
stos
cmc
mov
adc
mov
outsl
fnsave
mov
mov
sahf
xor
ds
jne
cs
xor
push
js
jle
loop
jne
ret
int
jecxz
xchg
sbb
cmp
mov
mov
loop
adc
aas
loopne
dec
sbb
or
cmp
sub
shrb
mov
mov
ss
aam
dec
packsswb
pushf
xor
imul
mov
fdiv
mov
push
mov
nop
and
mov
in
jg
dec
test
jbe
ss
mov
js
adc
dec
mov
rcrl
sbbl
jecxz
ss
add
cltd
mov
cmc
mov
stos
or
jb
mov
cs
jbe
into
dec
mov
js
leave
pusha
sub
ss
out
inc
and
or
out
ss
lahf
ljmp
jmp
mov
lret
xor
mov
jmp
jo
lea
or
adc
jne
push
ss
mov
adc
jne
add
cli
xchg
pop
jmp
cmc
mov
fistl
stos
or
adc
sbb
lods
cmp
push
outsl
int
add
nop
scas
inc
leave
sbb
xchg
sub
outsb
mov
fwait
inc
lret
mov
rclb
testl
mov
daa
jg
adc
fscale
inc
fsubrl
sti
mov
push
jl
scas
inc
jns
mov
lcall
adc
scas
inc
pop
xor
jnp
inc
insl
add
lahf
ss
fidivrl
xor
xor
jp
dec
mov
orl
pop
scas
or
out
test
cs
pop
push
push
mov
jge
fisubrs
lret
add
stc
and
jg
pop
inc
outsb
add
mov
fwait
xor
rol
pop
or
mov
and
out
pusha
inc
jecxz
jns
testl
add
sbb
mov
jle
inc
xlat
test
popa
stc
into
lret
add
test
sbb
jnp
popa
cmp
inc
data16
jno
fmulp
pop
or
decl
and
jns
je
cmpsl
mov
stc
mov
fnsave
iret
pop
cmp
cltd
push
test
mov
xlat
xor
or
addr16
and
pop
adc
xchg
xor
enter
mov
lock
dec
push
and
les
push
hlt
lock
andb
adc
outsb
mov
xchg
bound
popf
mov
andb
add
mov
mov
sets
mull
sub
push
cmpsl
dec
inc
xchg
ss
xor
sahf
xchg
shlb
pusha
push
out
in
xchg
sbb
xchg
xor
insb
push
shll
push
idivb
andb
xor
lds
mov
pop
mov
loopne
scas
adc
mov
jg
cmp
aam
push
repnz
push
fsts
cmpsl
push
xlat
loop
in
xchg
mov
or
add
or
inc
mov
sub
xchg
loop
bound
push
add
mov
int3
ret
dec
jns
mov
pop
ficoms
mov
adc
sub
call
xor
shlb
push
adc
cwtl
sbb
and
and
sub
fnstsw
xor
add
mov
adc
push
xchg
das
in
lods
shlb
lcall
xor
or
xchg
ds
shll
popf
out
dec
out
and
jns
lods
push
xchg
and
push
outsl
xchg
add
sbb
stc
jnp
ja
daa
pushf
pop
out
mov
shll
push
lcall
push
stos
faddl
ds
sbb
lret
xchg
push
pop
hlt
out
mov
or
aad
xchg
pop
mov
test
inc
loop
imull
add
insl
insb
push
cwtl
and
add
rcl
inc
jmp
sub
subb
jl
imul
push
stos
jmp
cmp
sbb
inc
jmp
push
xchg
subl
ja
test
shrl
jne
daa
xor
jg
push
je
ja
out
cmpsl
xorl
add
dec
add
lods
dec
jae
pop
popf
jne
mov
lock
sub
lock
je
or
inc
jnp
test
and
call
adc
cmp
mov
das
xchg
dec
scas
dec
xchg
pop
adc
sub
pop
mov
jg
lret
push
into
loop
js
mull
push
push
ljmp
sbbl
je
icebp
or
das
cmp
adc
shlb
add
cmc
dec
loopne
xor
outsb
add
mov
fcmovne
gs
das
cld
xchg
popa
inc
fdivl
adcb
mov
testb
call
push
mov
cmp
adc
int3
cli
xchg
loopne
xor
push
xor
fs
push
movsl
test
jno
xchg
sub
fdivr
dec
dec
sub
addr16
jge
int
shr
repnz
push
jmp
inc
and
data16
xchg
je
cmp
nop
daa
stc
or
jae
sbb
dec
pop
jp
nop
insl
sub
das
in
lret
cmp
ljmp
arpl
lahf
xchg
mov
es
dec
adc
inc
mov
mov
and
push
movl
cmp
mov
pushl
push
scas
and
jp
test
jns
sub
jg
in
loope
or
cmp
ret
pop
nop
daa
sub
imul
mov
mov
shl
es
aaa
mov
jl
jp
arpl
mov
and
sbb
ds
sti
cmc
jl
negl
mov
iret
fs
test
xorl
test
cmpsb
fdivl
push
adc
pop
shll
jb
mov
cli
cld
sti
repz
mov
pop
and
push
jg
pop
mov
ret
add
es
pop
testl
ss
jbe
dec
push
mov
mov
ss
clc
sbb
lock
ss
cmpsl
popa
aaa
in
dec
ljmp
incl
mov
mov
out
cmpsb
sahf
jo
sbb
mov
sbb
lahf
push
cmc
loop
lcall
inc
mov
bound
pop
jmp
or
or
out
jno
fisubl
add
mov
xchg
and
test
dec
xor
imul
jne
xchg
repnz
jnp
insl
adc
aas
or
out
xor
xor
pop
popf
push
fidivl
fbstp
cmpsb
add
shrb
jbe
jmp
mov
jge
push
out
negl
adc
sub
jl
cwtl
das
scas
popf
sbbl
icebp
das
jnp
les
aas
lret
pop
movsl
fs
push
into
sbb
xchg
mov
xchg
out
add
movsb
and
lahf
pusha
test
mov
mov
daa
pop
lock
xchg
sub
sub
mov
iret
pushf
jns
into
lock
loop,pt
adc
out
lds
mov
pop
xor
aas
mov
push
jmp
scas
popf
xor
arpl
pop
call
and
fwait
and
mov
ret
sub
in
mov
jo
lahf
mov
xor
inc
les
mov
pop
out
cmp
inc
scas
xchg
xchg
fildl
insl
mov
xor
fcomps
sti
xchg
add
mov
jae
xchg
push
push
outsl
ss
sarl
les
or
mov
shufps
sbbl
cld
ss
mov
notl
sub
imul
lock
rcll
test
imul
enter
out
jno
call
inc
les
clc
arpl
sub
test
dec
mov
rcl
cmc
in
jg
sbb
mov
lcall
and
out
jne
mov
aas
lds
negl
out
mov
jae
fsubl
sbb
mov
scas
inc
mov
scas
inc
sbbb
adc
mov
test
push
movsl
xor
out
mov
insb
into
add
mov
inc
test
add
pop
xchg
fnstenv
push
ret
daa
cmp
cwtl
sbb
repz
pusha
cmp
xchg
dec
xchg
sub
add
mov
pop
ljmp
jb
mov
inc
test
jge
push
mov
jae
sbb
daa
mov
xchg
cmp
lock
or
cmp
repnz
bound
xchg
loope
push
rcll
sbbb
hlt
xor
push
xchg
push
or
xor
jmp
fstps
repz
dec
push
mov
push
icebp
mov
rclb
pushf
xor
push
in
js
pop
scas
addr16
imul
push
cli
inc
dec
loope
sbb
outsl
push
scas
xchg
sub
dec
pop
icebp
mov
sub
adc
push
push
push
ljmp
addr16
xor
aad
push
jp
sbb
adc
inc
pop
or
pop
xchg
pop
push
inc
cmp
xor
icebp
mov
push
call
pop
addr16
pop
inc
sbb
in
push
insb
add
push
in
cld
push
out
test
pop
jge
dec
mov
lea
push
repz
pop
xchg
sub
sub
xchg
push
out
xchg
scas
inc
insl
push
mov
adc
and
pop
and
lahf
xchg
inc
pop
hlt
jnp
sub
and
scas
inc
pop
inc
mov
enter
add
sub
rcrl
js
jge
add
repz
xor
aaa
and
adcl
inc
fidivs
dec
pop
cmp
jl
pop
jg
dec
jmp
push
sub
js
int3
cltd
cmpb
inc
adc
pop
xchg
jge
cmpsl
adc
push
xor
insl
push
lret
cld
xchg
mov
fdivp
mov
push
daa
mov
loop
sbb
jne
ja
and
fnstenv
sub
pushf
mov
wrmsr
mov
fs
push
adc
inc
aad
push
stc
arpl
shl
xchg
cs
mov
sti
ret
or
fwait
xor
mov
mov
int3
rcrl
xor
xor
jmp
fstl
inc
ret
stc
push
cmp
lds
pop
insl
ficoml
jne
xchg
ret
pop
shll
movsb
cmp
jns
daa
mov
xchg
cmp
push
call
dec
xchg
jecxz
les
pusha
fnstenv
mov
xchg
xchg
cs
cmc
mov
cmpsl
nop
daa
sbb
and
cld
int3
clc
mov
fbld
hlt
repnz
sub
stos
shrl
add
loope
out
ja
or
cmpsb
cmp
jecxz
inc
fisubrl
shr
testb
inc
lods
gs
fbld
push
ret
and
cmpsb
gs
jecxz
testl
mov
mov
push
lods
lcall
aas
sahf
xor
pop
rcl
push
fwait
push
out
xlat
out
fcmovbe
lret
lods
inc
add
fs
ljmp
pop
jge
add
ud1
in
xor
fsubr
ret
xchg
mov
adc
enter
fucompp
adcb
lds
mov
in
mov
hlt
in
add
fldenv
lods
inc
xor
cwtl
movsb
jns
out
movsb
lds
pop
das
fnstenv
lret
jb
movsl
in
jno
fdivrp
lds
out
jb
xor
scas
xchg
jp
add
daa
and
pop
mov
add
sarb
pop
insl
push
arpl
sbbb
movsb
cmp
nop
daa
idivb
sbb
mov
hlt
mov
or
dec
cmp
leave
lods
push
add
mov
enter
inc
fstps
inc
jo
jbe
jnp
in
pop
sahf
inc
push
out
test
movsl
cmp
lcall
imulb
gs
xchg
int
loop
jne
xor
inc
inc
push
pop
lock
cwtl
push
and
jbe
imul
jle
std
sar
add
cmp
sbb
sahf
xor
lahf
inc
xchg
ss
sbb
enter
mov
push
fistpl
jns
or
mov
fimuls
mov
mov
gs
xchg
push
mov
stos
mov
out
dec
test
stc
ss
int
dec
or
gs
push
mov
xlat
xor
hlt
jl
jnp
xchg
mov
cmp
pop
push
jmp
and
sbb
es
inc
dec
inc
adc
pop
pop
sti
xchg
dec
mov
cmc
mov
push
ljmp
or
test
cli
popa
cmpsb
dec
in
add
push
lods
test
lret
es
daa
fisubs
addl
gs
jecxz
push
movsl
loopne
imul
mov
pop
jp
lea
sbb
insl
mov
es
dec
and
xchg
adc
popf
xor
mov
push
test
xchg
fiadds
and
sbb
das
aas
iret
data16
imul
ret
lahf
pop
scas
mov
pop
mov
push
sbb
pop
aaa
or
mov
aad
std
daa
pushf
mov
push
mov
xchg
mov
ret
cmp
mov
hlt
mov
push
dec
in
out
jb
in
cmp
cli
aad
in
pushf
cli
xchg
in
mov
jg
fdivl
mov
push
movsl
ja
and
xor
adc
xchg
xlat
and
enter
mov
repz
push
or
out
inc
push
call
xor
pop
adc
ss
cmpsl
xchg
adc
mov
fldt
int
adc
fists
sbbb
add
jb
add
push
mov
sbb
daa
sti
xchg
cltd
call
outsl
sub
sbbb
dec
in
test
cmp
cmpsl
pushaw
adc
push
add
repnz
sbb
pop
idivl
mov
movsb
stos
dec
loop
inc
adc
scas
sub
jo
iret
ss
hlt
out
xchg
loop
lret
sarl
scas
inc
out
jg
movb
enter
jl
cltd
leave
pusha
or
jae,pt
test
sahf
adc
popa
clc
xor
nop
daa
adc
sbb
shl
pop
scas
push
sbb
jno
push
pop
scas
sti
adc
jo
decb
daa
dec
scas
test
imul
xor
ret
adc
addb
ja
or
sub
daa
fwait
call
out
inc
add
pop
pop
lock
cld
mov
mov
pop
mov
add
fisubrs
in
mov
repz
sub
das
loopne
sub
jnp
int3
xor
fstps
bound
add
fdivs
sbb
jle
add
mov
xor
xchg
stc
nop
ret
test
rcr
in
scas
adc
aaa
xor
movq
xchg
sub
or
das
es
inc
shrb
subb
int3
aad
bound
out
push
movsl
pop
sub
sbbb
ret
jno
pop
sahf
lods
xchg
dec
loope
into
and
call
xchg
movsb
mov
neg
ret
sbb
ja
insb
mov
xchg
mov
aad
jp
das
adc
add
or
insb
push
add
lcall
in
stos
mov
out
xor
rolb
lret
rclb
mov
out
fnstcw
popa
mov
pop
icebp
mov
mov
fnstcw
lds
lret
pop
inc
push
aad
mov
pusha
in
stos
ds
inc
mov
jg
xor
in
cld
mov
lcall
adc
and
es
cltd
hlt
inc
inc
stc
ja
out
inc
cwtl
adcb
popa
add
xchg
jmp
xor
in
mov
fdivs
xchg
fidivl
pop
pop
testb
jge
fnsave
push
lods
push
mov
mov
fcoml
or
jo,pn
pusha
clc
cmc
mov
orb
jl
lods
inc
pop
sahf
xor
iret
sub
popa
pop
lock
out
jl
jg
inc
insl
add
iret
push
adc
jns
test
imul
out
xchg
and
inc
fcoml
inc
movsl
icebp
loopne
lret
xchg
or
cmp
mov
repz
inc
stc
stos
sarb
push
int3
in
aas
jl
imul
or
out
inc
pop
push
stos
push
fldenv
fisttpl
pop
mov
pop
cmp
push
pushf
xchg
pop
ss
xchg
push
push
or
data16
aaa
add
fiaddl
adc
cmp
fcmovu
pop
push
sbbb
inc
js
inc
jecxz
pop
call
out
pop
xchg
fnstcw
cmc
cmp
inc
cmp
mov
outsb
sub
xchg
movsl
das
jbe
in
out
mov
std
jmp
inc
lcall
aam
mov
shrl
test
nop
pusha
in
cld
icebp
outsb
mov
aas
pop
pushf
hlt
out
adc
jmp
imul
inc
jle
pop
xchg
mov
xchg
icebp
fldcw
or
push
hlt
fdivr
cltd
and
sbb
push
ljmp
rcrl
xor
mov
jne
cmp
jp
mov
repz
mov
jecxz
aaa
lcall
cwtl
int
out
in
mov
call
cmp
xchg
jae
jl
out
mov
xchg
ret
mov
lds
leave
aam
mov
insb
jge
mov
jb,pt
xorb
scas
mov
jo
xor
mov
mov
xchg
daa
and
cmpsl
adc
add
shrb
popa
cld
dec
xchg
adc
jo
xor
cmp
lret
xor
jl
mov
sti
pop
or
insl
add
lret
mov
inc
mov
les
push
stc
jp
cmpsb
test
dec
jp
inc
add
lods
test
sarl
lods
cmc
scas
jnp
cmpb
sub
and
jmp
push
jo
rorl
mulb
mov
hlt
cmp
sub
xchg
rcll
push
out
or
mov
cli
rorl
roll
cmpsb
sub
cmp
pushf
lock
inc
mov
mov
pop
mov
or
lods
fidivs
sbb
mov
jbe
jecxz
out
scas
daa
pop
out
out
sbb
sbb
fstl
lods
dec
or
ljmp
movsb
jno
stc
pop
outsl
outsl
out
or
int3
pop
outsb
mov
push
ja
jl
cld
ds
fs
or
mov
pop
std
mov
movsb
mov
mov
add
negb
push
xchg
add
pop
inc
aas
test
lret
dec
push
push
movsb
mov
in
je
fists
test
ja
xchg
aad
pop
stos
lds
mov
rol
ja
in
push
add
fldenv
sub
xor
mov
hlt
pop
push
movsb
fwait
inc
lret
jne
sbb
push
jb
test
mov
mov
add
add
shrl
addr16
cmc
negb
push
popa
mov
lret
push
sti
xor
lds
dec
and
stos
mov
dec
push
stos
fcmove
es
mov
jne
shll
and
shlb
loope
lahf
xor
or
push
mov
mov
push
fists
mov
scas
xor
jmp
sub
adc
dec
fcomps
and
test
int
sti
shlb
pop
jle
inc
fwait
repnz
or
aaa
and
loope
xor
test
cmp
fcomps
jg
inc
mov
into
xchg
iret
popa
and
shlb
adc
pop
push
ret
mov
or
daa
cmpsl
pop
cmp
xchg
pop
adc
push
push
leave
into
jg
mov
pop
push
mov
mov
das
cltd
inc
sbb
jnp
jg
sub
lock
sub
int3
inc
dec
adc
sbb
xchg
imul
inc
xchg
pop
clc
pop
jbe
addr16
out
popa
ja
subl
jl
fidivrs
imul
imul
dec
leave
insb
stos
dec
ds
gs
push
stos
cmc
mov
adc
or
outsb
pop
orl
and
xor
rcrl
and
test
movsb
xor
add
divb
fistps
jl
add
push
gs
add
xchg
ja
mov
jge
seta
cwtl
pop
rcl
mov
cmp
fstl
int
call
mov
pushf
xchg
sarl
or
mov
inc
ret
mov
xor
and
testb
mov
scas
push
mov
fst
mov
outsb
xor
ret
test
notb
push
ret
or
mov
aam
mov
sub
repnz
xor
ret
es
imul
ds
arpl
mov
testb
cld
fs
xchg
cmc
and
hlt
jno
xor
jmp
pop
daa
adc
push
jp
dec
or
aad
stc
pop
imul
in
lahf
repnz
insl
repz
outsb
dec
push
bound
leave
loope
push
jns
dec
push
mov
and
jecxz
push
jp
std
push
shrb
mov
inc
icebp
inc
out
cs
push
popf
sub
push
test
mov
ret
dec
pushaw
add
jbe
fdivrl
xchg
sub
jnp
in
in
mov
insb
fcmovnbe
sub
shr
lods
dec
add
daa
mov
cltd
outsl
cmp
lea
adc
mov
mov
and
test
movsl
addr16
hlt
push
push
lcall
lret
mov
or
scas
jnp
test
adc
mov
cmpl
out
sub
pop
lahf
cwtl
es
out
ljmp
push
mov
jns
outsl
std
mov
out
loop
cmp
movsl
cmp
or
adc
icebp
xchg
jecxz
inc
lahf
imul
sti
rcll
imul
test
inc
ja
cmpsb
xor
clc
xchg
out
outsl
jg
lret
test
sub
push
mov
push
adc
fnsave
adc
or
mov
push
out
xchg
sub
cmp
imul
arpl
not
xchg
push
ret
fisubrl
test
sbb
sarl
inc
sub
lret
inc
inc
pop
push
push
pop
sbb
jmp
mov
loope
leave
rorb
ret
pop
push
lds
js
add
push
xor
xchg
aaa
cmp
dec
outsl
ss
test
mov
into
sbb
mov
pop
sub
call
xorb
sar
xchg
sub
cmpsb
mov
sbb
testb
push
push
pushf
mov
xchg
cli
xchg
or
adc
movsb
inc
lods
inc
jne
daa
mov
mov
cmp
xchg
mov
fs
enter
sbb
add
lret
push
popf
sti
popf
mov
push
cmc
addr16
and
or
imull
cli
cltd
negb
mov
rorb
movsl
add
sub
jge
xor
lea
test
ret
repnz
jb
jb
pop
scas
dec
jno
das
bound
mov
arpl
aaa
aad
test
pop
cmc
sub
xchg
int3
daa
enter
adc
movb
fnstenv
fdivrl
xchg
clc
xor
sbbl
mov
test
xchg
aam
xchg
inc
pop
aas
xchg
jl
mov
leave
mov
int3
adc
pusha
call
ret
inc
or
push
adc
pop
cmc
fidivrl
lea
mov
pop
out
mov
mov
jae
test
push
in
mov
mov
outsl
push
sub
cmovnp
cltd
push
mov
add
add
sahf
dec
jb
cmp
push
mov
es
mov
pushf
xor
push
mov
push
adcl
aaa
ja
inc
fmull
xchg
clc
sub
inc
jge
mov
lcall
sub
test
out
add
mov
jnp
or
movsb
xchg
sub
loope
pop
sahf
cmpsl
in
fbstp
cmpsl
gs
pop
pop
xchg
sub
ret
mov
mov
std
xchg
sub
in
daa
xlat
outsb
pop
out
fnsave
lcall
or
imul
sub
lret
testb
mov
mov
enter
fs
mov
mov
or
shrl
mov
arpl
out
xor
sti
mov
in
push
aad
sub
and
lret
cwtl
das
cld
jecxz
aam
fnstenv
sbb
mov
xchg
sub
xor
mov
mov
nop
daa
pop
imul
push
loope
andl
push
test
dec
mul
jl
lock
and
out
in
fwait
jmp
aam
add
adc
sarl
call
adc
shrb
mov
mov
and
mov
movsb
stc
nop
pop
pop
xchg
sub
push
push
in
dec
xor
jne
mov
sti
imul
in
aad
jns
lock
and
jmp
cli
adc
lods
xchg
xchg
and
push
out
sub
or
lret
sub
popf
add
xchg
loopne
pushf
rolb
sbb
jge
cmpb
roll
jg
add
rcr
sbb
or
jl
paddd
fs
sbbl
sahf
test
xchg
fmuls
adc
ja
out
test
mov
adc
mov
out
cltd
out
sbb
fstl
test
lret
adcb
jge
daa
outsb
div
mov
mov
ret
pop
push
and
and
cmpsl
fbstp
pop
inc
xlat
cmp
xchg
sub
lods
fidivs
jno
push
mov
stos
outsb
add
adc
pop
nop
daa
dec
nop
jno
mov
lds
mov
lret
bound
or
or
testl
rcrb
mov
dec
test
popf
xlat
outsb
push
adc
mov
pop
jo
dec
cmp
adc
push
lods
or
stos
inc
push
mov
pmullw
cli
xchg
inc
out
hlt
mov
mov
lret
cmc
mov
inc
hlt
das
out
jb
shl
iret
out
cld
xchg
cmp
jo
in
jne
out
mov
outsl
clc
mov
test
pop
out
mov
mov
js
shll
sub
or
xchg
cmp
aaa
jae
push
popa
xchg
xchg
mov
sti
fldt
or
add
cltd
jne
mov
fnstsw
add
mov
lret
in
adc
pop
or
push
arpl
or
pop
pop
inc
push
movsl
je
pop
sahf
adc
imulb
test
test
repnz
icebp
inc
xlat
loope
adc
xchg
xlat
mov
lock
mov
stos
and
push
imul
das
or
call
or
test
sti
xchg
outsl
pop
jecxz
dec
push
push
out
add
testl
andl
fadd
pop
lret
clc
ja
sub
js
jl
cli
xchg
push
jg
mov
shrl
sub
sbb
xchg
dec
fs
push
mov
mov
mov
xchg
out
sbb
and
lea
sub
mov
sbb
pop
mov
mov
pop
sahf
add
lods
inc
movsl
mov
mov
out
xchg
daa
and
sub
xchg
loope
pop
movb
mov
mov
out
xor
test
cmp
sub
adc
sbbl
mov
jnp
push
out
test
int3
jg
out
mov
mov
in
sbb
and
adc
gs
jne
repz
rclb
jl
dec
mov
scas
decb
out
xchg
mov
sbb
in
aad
fsubrp
in
andl
sub
sbb
rcll
jg
pop
outsl
push
js
mov
inc
jnp
call
mov
mov
and
adc
fbstp
push
jmp
inc
pop
xchg
sub
and
clc
sub
and
and
cmp
shrb
pushf
xor
cmp
imul
mov
push
fimuls
inc
mov
cmp
mov
scas
ret
hlt
lods
cld
xchg
push
sub
xor
push
cmp
xchg
inc
fadds
arpl
and
faddl
push
test
test
lods
dec
loop
cmpl
dec
mov
dec
in
iret
adc
pop
cmp
nop
jno
frstor
xor
or
push
push
inc
cmp
rolb
dec
mov
fsubr
cmp
shrl
rclb
inc
fcoml
fldcw
mov
lret
inc
dec
loopne
or
jl
and
lods
jg
push
jo
dec
in
jae
and
push
mov
cwtl
inc
fimull
mov
mov
scas
out
and
loop
pop
pop
lods
inc
push
xchg
mov
xchg
aaa
into
push
adc
jle
inc
rcrl
mov
mov
mov
les
in
and
dec
pop
fbstp
mov
sub
add
enter
jb
je
push
addr16
sub
pop
cmpsl
xlat
outsb
fcomps
fwait
xor
xor
insl
sarl
push
mov
cwtl
das
cmp
ss
aaa
and
add
jb
push
rorb
ja
daa
test
lret
scas
inc
std
sub
int
push
pushf
mov
andb
or
insb
push
sub
lcall
lds
mov
dec
out
push
sbbb
jg
add
rorb
pop
out
cmpsl
cmp
cmp
pop
stos
pop
std
xchg
mov
jecxz
cld
scas
sbb
push
add
into
xor
and
xchg
aas
shl
mov
pop
repnz
decb
adc
mov
leave
fs
push
cmp
pop
fidivl
cmp
mov
mov
mov
xor
inc
fmull
push
xor
cli
pop
cmpsb
push
ljmp
jno
sub
lahf
ss
es
mov
inc
sarl
jb
repnz
bound
stc
nop
incb
xorb
scas
push
cwtl
pop
sahf
lret
int
add
add
inc
push
ljmp
outsl
push
test
addr16
stos
stos
mov
sbb
or
push
pop
fs
push
xchg
pop
stc
cltd
or
ja
add
xor
testl
lock
cwtl
repz
jecxz
or
rorl
add
pop
repz
fwait
cmpsl
movl
cs
add
inc
push
jno
mov
dec
retw
cmp
repz
push
cld
ss
xchg
repz
sub
into
pop
dec
pop
mov
xchg
cmp
ret
cmp
xor
cmp
aaa
cmp
stos
popa
xor
xchg
fsubrl
iret
fildl
or
cltd
xor
sub
jne
scas
inc
gs
fdivl
mov
out
test
push
and
mov
test
in
in
rcl
and
fidivrl
dec
jecxz
in
imul
xchg
push
test
xchg
fisttps
pmullw
sarb
cmp
mov
lods
sub
ss
push
inc
fadds
lcall
pop
lahf
ss
cmp
cmp
ss
add
into
sahf
jb
sub
pop
imul
sub
int3
ds
dec
xchg
cmp
das
daa
xor
fldenv
push
popf
imul
shr
roll
add
addr16
fmull
jle
push
out
ja
fsubl
mov
mov
jae
dec
loopne
jae
cli
arpl
mov
addr16
dec
in
cwtl
stc
or
mov
cmp
in
scas
jne
in
movsl
lods
pop
repnz
pusha
push
jmp
dec
xchg
pop
icebp
add
call
lock
sbb
and
push
ljmp
and
insb
pop
dec
in
sahf
xor
adc
and
xchg
insb
push
call
sbb
sbb
or
shrl
inc
push
in
jb
mov
push
jl
scas
lods
xor
lock
shl
mov
and
in
call
sbb
mov
mov
mov
push
ljmp
push
mov
inc
shrb
mov
lods
inc
cmp
xchg
sub
xchg
mov
mov
mov
jno
in
popa
jmp
jmp
add
sbb
test
push
in
add
sbbl
jnp
shrb
je
icebp
movsl
add
pop
jb
adc
negl
pop
testb
nop
js
adc
cld
mov
inc
faddl
mov
mov
xchg
push
adcb
fistpl
mov
ja
push
inc
push
ljmp
push
mov
cmp
dec
out
loopne
xchg
shl
and
aad
dec
loop
in
movsb
aad
es
aad
inc
fisubs
or
pop
int3
dec
loope
xchg
inc
fcmovb
rorb
ret
leave
inc
hlt
dec
in
mov
mov
mov
inc
in
dec
in
lock
fsubl
cmp
sub
pop
or
loop
xchg
inc
fadd
jge
cmpsb
insl
movaps
outsl
cmp
imul
dec
out
fisttpll
push
loopne
cmpsb
rolb
mov
in
out
jno
call
test
aad
dec
dec
in
clc
push
call
sub
aad
je
dec
in
jle
call
rcl
aad
stc
adc
xor
call
mov
aad
jle
fs
and
push
call
xchg
aam
insb
not
pop
test
push
jmp
jnp
insl
lret
jp
out
insb
add
inc
outsl
sbb
rcrb
push
jmp
push
sbb
inc
ss
pop
adcb
xchg
push
in
call
sbb
aaa
push
out
xor
ret
cmpsb
popa
and
sub
push
call
popf
inc
sbb
jbe
add
sarb
in
scas
adc
scas
fcmovb
inc
fnstenv
mov
outsl
daa
lea
stos
mov
mov
cmc
call
loope
cmpsb
adc
scas
inc
sbbl
call
cmc
mov
andl
data16
das
es
sub
fsubrl
ret
push
lds
fidivl
push
add
aas
andl
cmp
push
hlt
mov
xchg
xchg
xchg
or
or
sarl
jp
je
or
xor
mov
aam
mov
ljmp
ljmp
out
mov
jge
add
cld
xchg
in
dec
add
xchg
jne
or
mov
xchg
jecxz
lret
bound
movsl
sbbl
pop
clc
mov
hlt
rorb
lret
sbb
lahf
mov
cmp
pop
rcll
adcb
or
cltd
cmp
imul
push
cld
xchg
andl
push
and
decb
push
jnp
inc
inc
or
cmc
andb
loope
sarb
lods
inc
xlat
in
notb
pop
adc
fcmovne
pop
repnz
jmp
sbb
push
lods
and
mov
loopne
push
out
pop
adc
xchg
sbb
mov
mov
sbb
ljmp
loopne
iret
out
and
jg
dec
jecxz
jle
jne
xchg
and
loope
or
fnsave
and
imul
jno
frstor
ljmp
fsubrs
jae
xor
scas
aad
loopne
shrl
jmp
pop
repz
fnstenv
imul
pop
iret
xchg
sub
xchg
xor
add
jo
push
nop
daa
inc
jbe
sub
mov
inc
fisubrs
stos
mov
jae
pusha
test
push
mov
sub
andl
fld
pop
lret
sub
sbb
lret
xchg
lahf
add
jnp
ds
xchg
jo
aaa
into
ret
cld
stos
hlt
mov
out
or
fstps
dec
jecxz
xchg
lret
mov
fidivl
and
sbb
out
xchg
mov
sub
ljmp
inc
loope
mov
and
mov
sbbb
es
je
pop
mov
daa
mov
std
jo
js
add
jb
mov
fbstp
inc
bound
out
dec
popa
and
mov
in
addl
ljmp
sti
sbbl
cmp
out
test
cmpsb
cmp
loope
fs
xchg
ljmp
lret
and
stc
jl
mov
xchg
jg
cmp
jb
push
je
cli
inc
sti
xchg
jns
cmpsb
cmp
movsb
xchg
stc
add
dec
movsl
cmp
jmp
pop
repnz
mov
jle
mov
lods
call
inc
call
pop
repnz
mov
cmp
add
icebp
scas
dec
mov
cmp
jne
inc
cmpsl
jecxz
ljmp
mov
sbb
push
adc
cmp
shlb
add
push
ljmp
cmpsb
cmp
movsl
std
push
jmp
loope
cmpsb
cmp
sbb
push
mov
cmp
loop
hlt
jns
loopne
std
mov
das
lcall
pop
cmp
xchg
frstor
addb
loope
mov
cmp
mov
mov
xor
pop
fs
mov
fcoms
lret
loope
mov
es
push
or
pop
xor
jns
idivb
mov
xor
loope
push
push
addr16
add
mov
aam
fiadds
cli
fisttps
push
andb
fsubrs
inc
mov
push
adc
xchg
inc
sub
lods
adc
push
or
mov
int
xlat
rep
lahf
mov
lds
ret
dec
add
push
sbb
pushf
mov
lret
push
jae
xor
push
in
mov
cmc
pusha
fsubl
xor
dec
out
test
inc
push
pop
mov
rep
daa
inc
lret
test
ljmp
jl
loopne
scas
popf
insl
iret
sar
xchg
add
gs
push
div
mov
jbe
sbb
leave
movsb
cmp
sti
insl
add
sbb
or
mov
into
cmp
push
sub
and
jl,pt
mov
adc
lds
aad
lock
cmp
pop
lock
cmpsb
cmp
knotw
icebp
out
xchg
sbb
xchg
sub
std
xchg
push
xchg
sub
mov
aad
push
les
fmuls
shrb
jge
into
push
sub
repnz
or
shll
dec
loop
subb
and
js
int
stc
and
mov
push
pusha
xchg
ja
fildl
push
je
ffreep
stc
shlb
mov
pop
lods
jecxz
mov
jge
outsl
and
aaa
inc
and
mov
push
add
sub
mov
addr16
inc
xor
lret
xlat
fucompp
pop
jbe
push
dec
imul
pop
subl
jo
int3
dec
aas
aam
enter
scas
rcrb
es
lret
ret
mov
negl
xchg
xchg
pop
scas
mov
leave
xchg
push
xorl
pop
inc
cs
mov
enter
cmp
push
loopne
into
shlb
inc
insb
push
dec
in
mov
jne
pop
jnp
xchg
cmp
fldt
and
fistps
mov
daa
ret
lret
push
inc
call
movsl
dec
mov
pop
stc
mov
add
or
sbb
movsl
lods
xor
mov
mov
scas
clc
pop
ret
xor
aam
fidivrs
jne
mov
imul
scas
cwtl
pop
and
mov
cmp
cltd
mov
out
insb
mov
push
lds
fmull
xlat
dec
mov
push
jnp
data16
pop
pop
push
add
xor
mov
fbld
and
cmp
xor
dec
rcll
cmp
aad
xchg
push
repnz
jge
or
frstor
jns
cmpsb
mov
lcall
dec
in
inc
fcomps
mov
jge
cmp
add
push
dec
mov
dec
in
fstps
pop
cli
lret
cli
sbb
ja
and
mov
xchg
test
mov
in
aaa
mov
push
es
aam
add
mov
cmp
es
test
aas
insl
sbb
jb
xchg
cmp
mov
test
mov
push
es
jne
gs
dec
and
lahf
and
xor
out
and
jmp
call
cmp
aam
inc
pop
sub
or
les
jl
or
test
mov
cld
mov
mov
scas
inc
int
aad
adc
ljmp
fnsave
cmp
adc
cmc
adc
loope
or
js
lods
rcrl
outsb
sbb
je
cs
mov
xchg
jne
gs
mov
pop
ds
xchg
fnsave
lds
cld
xchg
sbb
jp
cmp
mov
lcall
mov
ficoms
cmp
or
xor
inc
cmp
mov
push
call
pop
mov
push
jmp
or
in
lods
dec
stos
inc
jp
je
lcall
xchg
sub
out
and
cmpsb
inc
add
pop
push
jmp
jge
add
lahf
xor
add
andps
mov
popa
cmpsb
inc
fcmovnbe
addb
clc
cld
cmp
inc
lahf
pop
sbbl
ror
repnz
mov
test
mov
and
out
xor
inc
push
fs
xchg
call
fnstenv
mov
or
cmc
push
inc
cmp
jle
cmp
inc
xlat
adc
ss
cmc
lods
cmp
adc
data16
lret
in
dec
lret
inc
push
arpl
xchg
xchg
cmpsl
sbbl
call
or
dec
es
xchg
adcl
lcall
xor
adc
or
jo
sub
jmp
or
cmp
mov
std
mov
inc
xlat
push
mov
mov
fdivrl
push
rclb
lcall
xorb
scas
push
push
in
push
rcrb
popf
std
cmp
pop
add
mov
xchg
push
daa
aam
scas
inc
call
lds
andb
clc
push
fcomps
push
mov
push
cmp
in
xchg
nop
cli
popf
sbb
inc
insl
push
sub
xor
dec
inc
fidivrs
clc
ss
mov
sbbl
stos
xor
fstpt
mov
jmp
lds
pop
and
je
mov
sti
xchg
imul
inc
daa
lea
mov
dec
lret
fbstp
into
adc
in
out
push
popf
and
mov
or
inc
pop
out
notl
jle
fs
jle
push
jmp
add
mov
adc
mov
gs
inc
fdivr
xchg
mov
ficoml
lods
or
sbb
shll
scas
adc
pop
inc
shrb
add
js
and
xchg
xorl
jge
and
mov
call
imul
or
mov
mov
inc
les
jnp
lods
ret
clc
sub
xor
inc
dec
out
je
repnz
testl
loopne
and
push
sbb
pop
push
imul
test
or
ffreep
push
adc
out
out
fcoms
xchg
insb
jecxz
int3
mov
fisttps
enter
adc
xor
push
lods
inc
pop
repnz
in
mov
jo
adc
jp
enter
pop
hlt
shrb
mov
mov
lret
loope
sub
xchg
cs
or
popf
scas
dec
notl
stc
push
xor
lock
cmp
insl
fiadds
arpl
jge
pop
sub
fbld
xor
mov
fdivp
leave
fbstp
ficompl
ds
cmp
jne
dec
and
sub
or
mov
jb
je
sub
dec
cltd
pushf
xor
mov
jne
popa
clc
test
test
jb
shl
add
add
pop
jno
mov
scas
adc
or
test
jp
loop
inc
outsb
leave
loop
scas
pop
xor
cwtl
addb
gs
and
rol
rcr
inc
and
jne
mulb
nop
insb
lds
inc
int
mov
cmpsl
sbbb
push
enter
pop
and
stos
shrl
aas
cmpsl
in
testl
loop
push
cld
xchg
test
and
push
clc
popl
scas
and
sub
dec
xchg
cmp
int
leave
imul
aad
pop
fisttps
mov
fldcw
data16
pusha
cli
jmp
test
push
and
cmp
jmp
clc
and
mov
add
in
out
js
add
lret
imul
inc
jecxz
fisubs
and
int3
iret
mov
push
rcrb
mov
sub
fs
data16
add
movsb
or
cmp
mov
fdivs
adc
mov
lret
out
sub
mov
mov
jg
ret
pop
negb
add
sbb
jp
xor
sub
mov
ret
arpl
pop
stc
les
nop
sbb
test
mov
rclb
jnp
mov
jecxz
lds
add
xor
and
sarl
xor
imul
inc
jae
cwtl
adc
push
cmp
insb
dec
dec
imul
pop
test
push
ljmp
mov
loopne
xchg
pop
sti
daa
fidivrs
add
lret
xchg
movsb
lds
mov
pop
jnp
inc
sub
fiaddl
unpcklps
out
clc
jle
insl
pop
es
jle
enter
xor
inc
ficompl
push
jmp
mov
cmc
push
xchg
popf
iret
shlb
mul
ftst
add
gs
sarb
daa
xor
sub
inc
adc
sbb
iret
push
push
push
int
imul
inc
dec
inc
xchg
test
loop
and
shrl
or
cli
mov
out
je
ret
push
inc
imul
enter
fsts
cmovp
inc
sub
sub
xchg
fldenv
mov
pop
sbb
inc
in
mov
clc
add
mov
cmp
js
ss
mov
repnz
adc
sbb
jl
xchg
fbstp
dec
fisttps
push
jmp
or
popf
dec
icebp
arpl
enter
movsb
xor
pop
ret
sub
mov
pushf
imul
jl
mov
xorb
pop
xchg
outsb
ja
in
lahf
movsb
lods
int
push
test
xor
xor
sbb
push
orl
mov
mov
xchg
push
jecxz
loop
xchg
xchg
inc
fnstsw
enter
andb
in
jp
out
cmp
lret
sub
fstps
loop
or
mov
icebp
mov
ss
test
jnp
and
arpl
cld
cmp
xchg
or
xor
inc
data16
pop
dec
lock
fadd
ret
bound
stos
inc
imul
jns
push
lods
outsb
push
sbb
mov
orb
inc
sti
pop
icebp
sub
mov
cld
dec
ficompl
fcmovb
push
jmp
and
std
and
stos
imul
mov
push
fnstenv
adc
roll
mov
mov
push
xor
inc
sbb
mov
pop
pop
adc
cmp
mov
mov
sub
outsl
lea
or
push
loopne
shl
adc
add
insl
mov
pop
scas
es
mov
fdiv
in
push
push
adc
sets
int
orl
sbb
cmc
stos
sbb
mov
stos
js
mov
lret
mov
stos
orb
jge
mov
xchg
test
xchg
add
pop
mov
fisubl
imul
je
andl
mov
dec
data16
mov
flds
test
sarl
mov
repz
mov
xor
pop
repz
lock
addr16
push
dec
lea
adc
neg
outsl
jl
idivb
jo
les
push
add
xchg
mov
ret
xchg
and
sub
pop
popa
sub
imul
xchg
mov
mov
mov
rcrl
clc
ss
call
jbe
aas
adc
sbbl
push
loopne
pop
push
aam
pop
dec
fdivl
push
fadd
shrl
cmpsl
pop
bound
pop
repz
and
mov
push
pminub
xchg
lods
test
addl
push
adc
les
cmpl
mov
addb
inc
dec
movsl
dec
leave
xchg
dec
test
dec
mov
sub
and
mov
mov
stos
mov
or
sbb
orl
or
xchg
enter
insl
addr16
lock
adc
inc
cmpl
mov
add
fsts
cmp
or
cs
mov
pop
dec
xchg
pop
pop
xchg
fiadds
push
testl
mov
lds
movsb
pop
ss
jp
test
sub
dec
mov
scas
filds
mov
jmp
jge
rcl
pushf
add
dec
jl
lock
das
movb
clc
daa
in
push
test
or
daa
mov
fildll
cmpsl
and
lds
cmpsl
neg
mov
mov
add
rorl
pop
push
int
mov
add
adc
pop
and
addl
adc
clc
pushf
sbb
adc
adc
and
int3
lahf
add
mov
sbb
adc
aad
jl
jns
popf
into
movsb
ja
cmp
sbb
lea
in
mov
test
push
aas
popa
add
jle
cmp
inc
outsb
jl
push
in
lret
and
xchg
stc
enter
decb
push
jp
push
jbe
pushl
xor
cmp
add
inc
pop
pop
scas
nop
arpl
fcoms
xchg
test
scas
fwait
jl
ljmp
pusha
dec
pop
test
insb
enter
icebp
aas
cmp
imul
test
pop
push
ds
ret
or
push
hlt
out
jbe
sub
shl
lods
mov
sub
andb
mov
add
or
faddl
bound
and
xchg
leave
inc
cmpsl
aad
fldcw
call
mov
jo
xchg
lret
adc
push
xor
mov
add
add
loopne
and
dec
jg
in
mov
imulb
dec
loope
ret
mov
push
hlt
xchg
mov
or
inc
hlt
sub
cmpsb
inc
arpl
jle
add
out
inc
jecxz
or
cmp
xorl
jo
push
or
loopne
iret
in
push
sbb
dec
loop
inc
add
loopne
sbb
outsl
int3
cli
and
adc
inc
call
lock
mov
sbb
xchg
imul
in
out
cmp
pop
xchg
loopne
add
adc
adc
or
push
popf
sub
jmp
lods
hlt
in
repnz
pop
and
jl
int3
faddl
lcall
pushf
rolb
pop
out
rcll
mov
fucomip
scas
xor
ret
data16
es
das
push
filds
add
pop
sbb
int
and
xchg
push
jns
jmp
add
icebp
jns
outsl
stos
adc
arpl
lods
arpl
inc
data16
jno
loop
jg
add
inc
xor
idiv
iret
dec
push
push
pop
jecxz
in
cmp
jg
stos
mov
jg
mov
xchg
pusha
mov
sub
andl
jle
xor
ss
xchg
xchg
mov
das
add
call
fwait
cmp
push
jg
mov
cwtl
push
sub
adcb
lcall
mov
xchg
push
hlt
add
mov
ficomps
or
iret
jne
inc
fcmovnu
xchg
push
dec
cwtl
inc
ret
int3
mov
test
addr16
mov
mov
fs
xchg
inc
lahf
cmp
or
ret
js
dec
repnz
stos
cmp
jle
stos
mov
movl
pushf
xor
imul
dec
jmp
mov
pushf
bound
or
jg
pushf
lods
mov
popf
push
scas
in
push
test
in
push
leave
loope
mov
mov
pop
jb
subb
sbb
loop
fcomps
adcb
xchg
in
lahf
idiv
insl
jg
fwait
loop
mov
cmp
pop
je
mov
push
mov
pusha
outsl
push
pop
lahf
lods
movb
xor
fucomip
pop
sbb
pushf
iret
push
adc
mov
cmpsb
cmp
mov
sub
scas
ret
fistps
lds
gs
int
jl
movsb
mov
out
sbb
pop
fwait
je
xor
mov
and
fstl
insb
add
and
add
and
adc
push
data16
leave
sub
dec
scas
inc
jg
mov
cmp
xor
sub
fucompp
leave
test
testl
push
xchg
repnz
movsb
xchg
fisubrs
lret
mov
or
sahf
call
mov
loopne
pop
es
push
mov
andl
pop
lods
cmp
mov
push
inc
dec
mov
inc
dec
pop
mov
dec
xor
jecxz
out
xchg
notb
or
pmulhuw
or
adc
sbb
push
sbb
popf
jbe
ds
insb
and
aas
cmp
inc
insb
and
scas
insl
push
push
jnp
call
outsb
jo
mov
lcall
mov
mov
in
cmp
hlt
ljmp
shlb
loop
andb
mov
push
push
mov
add
test
cs
sub
in
cmp
adc
push
xchg
xor
rolb
test
in
push
popa
clc
andl
pop
mov
mov
and
xchg
popl
xchg
data16
stos
mov
lea
jne
aaa
jge
xlat
pop
cmc
or
insl
fstps
jb
sub
fs
push
les
lock
fmul
mov
dec
cmp
xchg
mov
popf
sbb
and
sahf
xchg
adc
mov
inc
fs
add
rol
jo
mov
aas
pop
dec
push
xor
mov
push
mov
arpl
out
jp
push
xchg
lret
push
and
push
mov
mov
pusha
adcl
and
sub
cltd
ret
repz
shlb
dec
lret
iret
jmp
dec
xlat
dec
inc
xchg
push
lods
or
mov
cwtl
outsl
subb
in
clc
daa
dec
mov
and
pop
arpl
outsl
and
push
adcl
jo
testl
pop
cmp
or
inc
pop
xor
dec
mov
jns
std
mov
pop
je
sbb
insl
loopne,pn
mov
adc
inc
mov
inc
dec
in
push
addl
push
inc
lret
and
popf
jns
ret
dec
mov
pop
ficoml
inc
inc
fdivl
mov
mov
cmp
sbb
xchg
dec
aas
pop
cmp
popa
and
pop
inc
jp
clc
movsl
shrl
shlb
pop
mov
xchg
loop
mov
jecxz
mov
sub
jl
adc
pop
xlat
adc
xchg
pop
adc
sti
scas
shlb
out
push
in
ljmp
mov
mov
out
push
loop
cmp
faddl
xor
xchg
ret
dec
clc
rcr
pop
shl
sahf
xor
mov
and
ds
pop
or
jns
mov
ret
pop
ds
xchg
xorl
cmp
push
cli
mov
pop
add
cmp
je
jmp
xchg
ds
mov
adc
and
out
daa
push
clc
push
insb
fs
push
pop
shll
test
cmp
pusha
in
daa
sbb
les
repnz
movsb
enter
insb
push
dec
popf
dec
mov
push
sub
jnp
inc
xor
ds
addr16
xchg
inc
cld
daa
aas
mov
pop
xlat
outsb
stos
sbb
mov
or
pop
sarl
cltd
push
arpl
push
jb
mov
or
push
div
in
push
pusha
sbb
mov
dec
push
pop
xchg
pop
js
mov
add
repnz
and
js
lcallw
jae
std
xchg
jle
jne
pop
hlt
rcl
iret
inc
xor
fldt
iret
aam
xorb
std
idivb
std
outsl
pmaxsw
jecxz
rclb
xchg
aam
pop
push
inc
xchg
lods
ficoms
adcb
push
clc
xor
shl
ficoms
fadd
pop
or
xlat
push
xlat
xchg
lods
sub
shll
and
jo
xchg
and
mov
inc
jecxz
add
pop
cmp
xchg
mov
std
movsl
popf
mov
iret
or
jg
repz
push
and
ss
and
insb
and
fwait
dec
in
inc
cmp
xchg
mov
xchg
hlt
call
push
ret
mov
test
aad
jp
add
shlb
push
jns
adc
rcll
xor
push
bnd
and
fnsave
mov
push
dec
lret
jns
inc
nop
mov
pop
mov
arpl
xchg
mov
xor
leave
pop
and
push
std
lcall
and
lcall
xchg
pop
das
mov
add
in
js
enter
insb
inc
fst
insl
jb
jnp
mov
addr16
push
popf
stos
or
push
imul
mov
mov
shlb
in
mov
fiadds
cmp
mov
push
scas
jmp
sbb
mov
ret
je
std
jl
scas
cmp
loopne
stos
cmp
out
jns
dec
jns
dec
mov
add
lret
stos
pop
icebp
fsubrl
cmp
jo
dec
xchg
pop
push
adc
aas
inc
jno
js
xor
dec
lods
cmp
pop
lahf
adc
xor
pop
les
dec
test
jle
imul
insl
mov
pop
call
enter
and
xchg
add
pusha
mov
sahf
xor
lods
in
xor
aad
je
aaa
notb
cmp
nop
daa
and
sti
xchg
push
add
fistpll
dec
in
push
and
cmp
ds
fdivs
add
test
testb
inc
pop
out
jb
cmp
fstps
rorb
adc
mov
xchg
jp
mov
add
xor
lret
mov
ljmp
jbe
and
aam
mov
inc
jecxz
and
rcl
xor
jecxz
ret
fmuls
ljmp
lds
insl
scas
insl
xor
cmp
xor
fwait
xchg
orb
and
sbbl
inc
orl
xor
and
pusha
movsl
lcall
aam
push
push
iret
insl
loope
fsts
das
hlt
sbb
or
xor
sub
xor
xor
cmp
fbstp
insb
clc
sahf
xor
cltd
arpl
cmp
shlb
push
mov
repnz
icebp
xor
loop
cmp
cwtl
sub
sbbl
sbb
test
lea
jmp
mov
mov
or
and
insb
xchg
mov
fnstcw
int3
arpl
sbb
xchg
sbb
jo
out
xlat
outsb
bound
int
test
mov
and
outsb
repnz
sub
mov
repnz
jns
fisubrs
or
test
push
ljmp
or
les
jecxz
push
dec
in
negb
mov
fs
push
jge
fildll
lock
inc
fimull
out
xchg
sub
and
insb
xchg
adc
ficomps
movsb
cmp
xor
pop
movsl
pop
int
dec
xor
les
scas
shlb
inc
jl
ss
pop
xchg
mov
and
dec
push
dec
loope
outsb
dec
fistps
shlb
push
out
inc
dec
ret
lcall
add
sbbl
and
xchg
push
inc
mov
cmpsb
repz
push
lahf
ljmp
mov
in
jnp
inc
fstps
push
or
pop
addr16
cli
xor
push
outsl
push
inc
lahf
pop
repnz
and
icebp
push
out
add
fidivs
and
mov
popa
jmp
dec
sarb
aad
cmp
jns
mov
cli
mov
mov
in
mov
out
and
jno
testl
cmp
fdivrl
push
or
inc
out
pop
pop
icebp
mov
jnp
lock
dec
add
out
cmpsl
mov
push
mov
mov
adc
icebp
xor
xchg
popl
push
inc
insl
mov
dec
aaa
dec
add
notl
aad
mov
flds
sub
sbb
jg
sbb
and
inc
mov
js
and
fidivrs
inc
fsubrs
xchg
sub
mov
push
push
shlb
jbe
cmpl
aam
sbb
rcll
and
cmp
mov
insl
add
jno
inc
bound
lea
shrl
in
fcmovbe
pop
sub
movsl
and
lds
xor
and
data16
mov
cltd
out
inc
mov
or
sub
shrl
sub
xchg
sub
jae
testl
jmp
repz
pop
pop
jecxz
es
or
subl
cld
movsb
cmp
xchg
flds
insb
add
push
xorb
pop
jb
dec
pop
jno
imul
push
das
pop
sarl
fsubs
push
icebp
cwtl
inc
pop
scas
inc
cli
inc
lret
jo
into
adc
mov
fisubs
fcomip
mov
adc
insl
xchg
nop
inc
lahf
fstpt
pop
inc
jnp
outsb
xchg
repz
cmp
pop
iret
push
mov
xchg
sub
and
insb
daa
jmp
mov
jb
dec
scas
loop,pn
dec
push
int
mov
clc
sbb
das
in
mov
stos
mov
sti
je
iret
mov
stc
push
lret
inc
mov
or
push
lret
cmp
fldt
mov
mov
out
and
stos
xchg
addr16
add
test
push
add
pop
test
ret
lcall
sub
jl
xor
out
inc
mov
xor
aaa
and
insb
je
lds
nop
daa
or
fdivl
dec
cli
xchg
pusha
mov
cmp
subb
and
push
lahf
lcall
fimull
cs
sti
std
xchg
or
imul
xor
shr
test
test
push
sub
xchg
fwait
add
dec
fwait
pop
jl
push
add
cmp
push
clc
sub
jecxz
scas
daa
int
xchg
loop
mov
scas
inc
test
in
or
or
fsubrs
es
sbb
xor
push
dec
lds
fistps
adc
xchg
xor
bound
jo
mov
outsl
push
cmp
mov
or
mov
scas
inc
lcall
into
xchg
cmp
subb
imul
jno,pn
pusha
iret
sahf
xor
gs
pop
and
test
xor
push
data16
xchg
movsl
jbe
pop
test
sbbl
lock
cltd
mov
cmc
sbb
xchg
dec
push
loope
dec
gs
push
lret
push
call
clc
sbb
dec
sbb
movsl
mov
inc
jo
push
inc
jnp
xor
mov
and
jle
je
jle
adc
mov
dec
out
xchg
sub
insl
add
adc
pop
icebp
mov
testl
rolb
or
jp
loop
lock
cmp
adc
popa
lret
int
jno
and
sbb
mov
aad
pop
fsubs
out
lods
inc
dec
or
mov
cmp
fidivl
das
adc
xor
stos
inc
xor
inc
xlat
lret
push
insl
jmp
mov
aam
xor
inc
fdivr
cmpsb
rcrl
test
jmp
rclb
inc
fdivrl
and
int
jae
sub
leave
cmp
jmp
fnstcw
popf
mov
leave
test
jnp
fwait
daa
sti
or
and
fdivs
movsb
imul
rorl
loop
sub
rcll
insb
enter
xchg
scas
add
adc
adc
sub
loope
fs
pop
out
adc
xor
pop
jbe
in
ds
lcall
mov
int
pushf
xchg
xchg
daa
dec
xor
push
insb
jg
dec
inc
and
arpl
mov
aas
adcl
out
and
xor
or
xor
rolb
movsb
inc
xchg
sti
hlt
mov
out
fnsave
xor
jns
ds
mov
es
dec
in
pop
mov
adc
mov
clc
lods
cmc
lahf
pop
in
mov
inc
mov
cmpsb
inc
sarl
push
xchg
sbb
jo
jecxz
and
rorb
adc
insl
jo
mov
sbbb
and
push
dec
fwait
std
cmp
dec
add
addl
and
xor
and
xor
xchg
adc
cltd
lock
inc
sbb
inc
out
dec
inc
and
cmp
ficoms
jb
sub
mov
jb
aad
pop
enter
mov
xchg
mov
arpl
xlat
rcr
je
nopl
mov
cmpsb
inc
and
imul
aas
in
sub
adc
mov
and
ljmp
and
mov
jmp
xor
jo
je
adc
dec
in
fbstp
das
sub
lahf
mov
aas
and
sbb
push
ficomps
loop
jp
dec
add
xchg
push
jg
stc
nop
mov
into
mov
fsts
fmull
pop
scas
xchg
std
push
in
fdivl
adc
stos
out
out
lret
jge
or
xchg
idiv
nop
les
arpl
ret
sub
lods
cmp
sub
std
pop
sbb
sbb
aas
pop
repz
cmp
mov
mov
mov
lods
imul
push
pop
mov
push
inc
imul
dec
mov
lret
jo
sub
pop
inc
into
jmp
pop
add
xchg
jl
stc
pop
mov
scas
or
cs
idivb
jecxz
popf
sbb
insb
out
or
mov
sbb
out
dec
fisubl
mov
fsubrl
mov
dec
imul
rcl
in
ret
push
xor
fwait
xor
loop
cmp
ret
cwtl
push
in
or
add
fidivrs
les
fdivl
mov
mov
lcall
cwtl
sti
movsl
cmp
arpl
inc
scas
std
xchg
and
repz
repz
repz
push
in
dec
aaa
ds
mov
insb
daa
lcall
mov
and
xchg
push
lock
lods
push
lret
into
fisttps
dec
test
sub
and
xchg
xchg
lea
es
inc
jge
test
add
leave
pusha
and
cltd
xor
test
mov
cmpsb
sbb
lea
subb
adc
mov
ret
fwait
xor
movsb
sub
cmp
xor
inc
jnp
pop
push
fs
cmp
push
xor
push
test
lds
fisubrl
mov
aaa
or
enter
ds
dec
out
stos
fbstp
cld
or
mov
pop
repnz
mov
test
lret
mov
or
dec
in
xchg
mov
ret
dec
insl
add
in
jo
mov
lock
jne
flds
jl
push
mov
jns
das
nop
daa
popa
mov
xor
cmp
aas
hlt
add
mov
adc
jae
pop
xor
shlb
popf
inc
xchg
xor
addr16
xor
push
add
xor
pop
lds
sub
xchg
and
jnp
out
test
pushf
push
jmp
mov
fimuls
movsl
fildll
inc
fidivrl
push
call
daa
mov
sub
mov
fisttps
out
push
out
pop
push
xchg
sub
mov
and
xor
sub
xchg
outsl
lds
fbstp
test
leave
testl
sub
outsl
xchg
lods
inc
notl
xchg
cs
and
xchg
and
jge
loop
jle
loop
repnz
sbb
sbb
or
mov
fiaddl
iret
pop
icebp
repz
out
inc
andb
xchg
aad
push
pop
mov
fdivl
or
cmp
pop
mov
nop
into
sbb
jecxz
aaa
into
push
add
pop
ss
in
mov
les
imulb
insl
cmp
mov
pop
hlt
xchg
lret
rorb
ljmp
scas
inc
pop
repnz
and
or
out
sbbl
push
pop
jo
add
xchg
mov
cmp
and
pop
add
loope
cmpsl
fiadds
sub
es
inc
out
xchg
cmpsb
mov
rcl
fldt
and
mov
mov
mov
xchg
or
sub
sub
lock
into
adc
jg
outsl
xor
movsb
push
jmp
jb
adc
cmp
into
int
in
rcll
add
loop
dec
cwtl
outsb
add
andb
mov
fists
or
mov
mov
cmp
aas
shlb
jae
push
pop
push
je
sbb
dec
ror
pop
cmc
leave
fldenv
jl
pushf
mov
push
or
mov
inc
lcall
mov
inc
cmpsb
add
cwtl
les
jne
cmp
fs
sbb
sub
jae
gs
dec
shl
ds
adc
cmp
mov
loopne
pop
sarb
into
stos
repz
repnz
and
rclb
mov
daa
sbb
and
in
pop
jae
outsb
fbstp
fwait
xchg
sub
lds
jno
std
popa
mov
fists
inc
add
sub
loopne
adc
and
adc
lea
adc
push
mov
mov
jb
inc
adc
cmc
sub
pop
dec
inc
sbb
mov
xchg
adc
ljmp
and
jae
int
sub
jo
mov
test
lahf
arpl
bound
filds
rolb
mov
mov
sub
cwtl
lods
jle
lds
pop
adc
jne
js
xor
pop
push
movsl
push
or
cmc
inc
je
testl
add
or
cmp
repnz
popa
xchg
mov
mov
je
inc
jmp
cmc
mov
loopne
dec
pop
inc
sbb
pop
ret
pop
nop
cli
mov
mov
cmp
cmp
push
mov
jae
ret
jae
mov
jnp
adc
lods
iret
push
in
push
jecxz
syscall
repnz
fcompl
aad
std
movsl
xchg
xor
xchg
incl
or
out
push
push
dec
dec
imul
fldt
mov
call
cmp
orl
push
mov
es
push
and
dec
sahf
stc
mov
jb
push
mov
cmp
mov
jl
pop
nop
test
inc
in
test
ret
mov
ljmp
call
fwait
pushf
aam
adc
mov
aam
lahf
cld
jae
cs
dec
fsubs
shlb
push
and
sbb
cmp
xchg
in
cmpsb
adcb
rcrl
stos
mov
xor
add
and
jbe
dec
xchg
imul
inc
leave
pop
sahf
push
call
jmp
outsl
inc
imul
out
aaa
loopne
inc
add
add
lcall
lahf
cmpsl
orl
sahf
xchg
jmp
pushf
lahf
cs
push
rcrl
aad
mov
iret
adc
pushl
or
jbe
pushf
mov
roll
test
pop
insb
adc
jnp
dec
or
imul
in
sbb
clc
mov
jl
or
push
or
push
loopne
cmp
test
mov
daa
push
mov
push
and
mov
push
ljmp
xchg
xchg
xor
fldl
push
mov
in
call
cli
jne
ret
add
mov
and
sbb
mov
pop
loope
aaa
into
pop
aaa
mov
cmp
mov
ds
lahf
or
dec
mov
into
cmp
cmp
dec
push
je
push
loopne
sub
push
mov
inc
jno
fldcw
popf
sbb
fsubs
inc
movsb
lods
lods
or
cs
cmc
cmp
sub
or
sbb
push
imul
adc
insl
or
movsb
cmp
icebp
dec
cwtl
outsl
push
ffree
out
iret
data16
dec
pop
test
fdivl
or
mov
adc
lsl
arpl
sub
addr16
jmp
fsubr
sub
mov
fs
add
cs
repz
cmp
rcl
fsqrt
mov
lea
aas
add
je
sub
pop
mov
sub
pop
lods
mov
test
xchg
scas
xchg
pop
or
mov
mov
dec
and
rorb
mov
jmp
mov
sbb
or
sar
jmp
add
shr
sahf
or
mov
test
mov
mov
inc
imul
push
mov
inc
test
mov
jns
xchg
mov
test
imul
adc
xor
icebp
or
lock
sub
cmp
lret
and
ret
jb
imul
inc
pop
and
pop
movsb
mov
in
mov
mov
out
rcrb
dec
lret
lret
or
jp
mov
shl
cmp
cmpsl
stos
adc
pop
lahf
mov
shrl
cld
mov
jle,pn
mov
lahf
imull
sbb
dec
dec
and
fcom
shll
es
lcall
out
stos
jmp
inc
js
dec
lret
inc
pushf
cli
push
lds
aam
out
out
cmp
pop
inc
insl
jnp
aas
fbld
adc
push
mov
filds
std
lret
imul
in
sub
dec
push
loopne
cltd
xchg
jb
mov
mov
xlat
daa
jne
imul
icebp
mov
imul
popa
xorl
pop
push
mov
pop
xor
cmp
mov
inc
inc
js
movsl
fldl
sbb
popl
imul
pusha
testl
test
jbe
inc
mov
or
jmp
xchg
scas
xchg
push
mov
mov
mov
nop
cmp
ret
sbb
mov
out
sub
adc
repnz
repz
hlt
sbb
push
iret
adc
inc
out
shl
aaa
mov
add
jmp
dec
dec
aas
add
or
mov
pop
add
notb
push
in
pop
insl
call
xchg
in
aam
jl
xchg
xor
sbb
dec
xchg
shl
pusha
add
js
ds
lahf
pop
mov
fistpl
add
outsb
js
pop
pushf
loop
inc
hlt
call
in
dec
inc
fiaddl
out
outsl
sbb
jecxz
mov
xchg
or
add
xchg
push
sbb
aas
rcl
or
xchg
aaa
mov
pop
mov
pop
out
cmp
cmp
jae
fisttpll
fidivs
cmp
push
fidivrs
popf
mov
ret
adc
cmc
shrl
add
xchg
bound
add
jns
out
ret
andl
mov
cmp
inc
loopne
pop
popf
xor
popf
popa
cld
push
mov
testl
bound
mov
or
into
xor
mov
mov
xchg
add
jne
lret
loope
lcall
rcll
sub
jb
lds
pushf
sahf
notb
xrelease
mov
sub
xor
jae
sub
popf
mov
and
adc
mov
mov
movsb
call
mov
movnti
es
ja
inc
sbb
subb
mov
int3
dec
and
pop
stos
xchg
call
mov
lret
adc
push
les
mov
lock
out
adc
lahf
mul
pop
jle
andb
push
hlt
rorl
cmp
xor
sbb
in
cltd
add
inc
and
fwait
clc
mov
jge
jae
sbb
leave
test
xlat
mov
xchg
pop
mov
cmpsl
test
std
mov
int3
and
inc
aas
clc
mov
fwait
mov
fs
xlat
psrlq
std
jbe
sarl
sbb
mov
xor
pop
sub
lea
addb
fildll
push
xchg
repnz
sub
out
mov
or
leave
fnstenv
shrl
add
sti
push
stos
stos
jne
and
loope
sbb
mov
push
jp
push
jle
int3
xor
repnz
pusha
push
jo
xchg
scas
testl
add
pop
in
adc
mov
inc
lods
orl
popa
call
cmpsl
pusha
sahf
cmc
push
fldcw
pushf
xor
dec
push
sub
push
mov
lret
or
ret
cmp
dec
push
mov
loop,pn
jo
loopne
xor
jo
sti
cmpsb
push
mov
loopw
cmp
and
fcompl
insl
mov
pop
or
jnp
mov
cli
inc
leave
jge
pop
mov
sbb
in
mov
js
pushf
mov
pop
aaa
sti
ret
mov
xchg
ret
xchg
sbb
sbb
ficoms
xor
out
lahf
inc
pop
push
shld
movsb
scas
cli
push
leave
out
sub
ret
dec
rorb
shl
shrl
sub
mov
cmpsl
inc
cmp
mov
adc
data16
nop
pop
insb
call
dec
xor
in
test
mov
sbb
cld
mov
mov
or
insb
leave
daa
or
pop
scas
std
cltd
sub
std
or
jbe
loop
push
data16
lahf
fstpt
add
inc
out
sub
adc
add
out
add
cmp
mov
sub
daa
push
icebp
and
inc
mov
je
and
and
test
lock
cmp
in
ds
imul
sub
add
jnp
adc
mov
add
insb
in
mov
inc
out
inc
sub
shlb
dec
or
loopne
out
lods
dec
arpl
or
adc
jecxz
shrl
or
out
neg
je
push
mov
mov
jo
movsl
pop
bound
jno
fiadds
lcall
lods
add
pop
cmpsl
jge
and
popa
or
shrl
add
mov
xor
and
cmp
sub
inc
sbb
repz
push
xor
pop
adcl
xchg
pushf
pop
das
stc
std
xchg
inc
pop
inc
push
sbbl
xchg
jmp
aad
fistl
sarl
aas
pop
jg
sub
sub
inc
lret
mov
stc
test
lret
sbbb
ds
rcrb
mov
pop
aaa
hlt
mov
mov
repnz
ds
cmovl
sub
divb
add
es
or
add
fisttpl
mov
adc
jle
push
jae
ss
cmp
invd
insl
sbb
les
xchg
je
iret
ljmp
fcmovbe
rorl
jnp
ss
push
test
sarb
popf
stc
fdivs
int
or
jae
adc
cli
mov
mov
insl
in
stos
nop
enter
shrb
mov
fildl
mov
push
fistpll
aas
push
or
mov
stos
mov
aad
icebp
mov
pop
fistps
dec
inc
pop
cmovo
pop
and
cld
fiadds
mov
lret
jbe
mov
pop
and
jle
or
aas
aad
sahf
stos
das
mull
sub
and
int
popf
xor
push
and
cmp
xor
pop
mov
jle
popf
push
fstl
outsb
jne
scas
jmp
push
fwait
fwait
pop
fsubs
jle
dec
imulb
pusha
aaa
cmp
lret
mov
ret
adc
test
sbb
pop
outsl
pop
mov
in
orb
mov
mov
out
pcmpgtb
int3
out
xor
mov
mov
fisubs
movsb
xor
aam
dec
pop
fcomps
mov
mov
insb
add
leave
sub
jns
jo
stos
and
adc
push
adc
fsubs
ficoml
scas
sahf
fmul
inc
fidivl
aad
out
cld
movsl
and
mov
mov
pop
mull
inc
popf
mov
ficoms
rorb
js
inc
pop
das
pop
jle
inc
sbb
lcall
in
add
cmp
lahf
inc
sub
pop
cmp
sbb
add
dec
pop
pusha
inc
mov
in
mov
push
jns
clc
pop
insb
sub
mov
sti
adc
lods
inc
add
mov
cwtl
inc
xchg
cmpsl
push
fiaddl
jae
loope
andb
pop
and
or
push
sti
xchg
gs
cld
out
xchg
fiaddl
mov
popf
pop
mov
daa
mov
lods
mov
mov
in
loope
xor
inc
add
js
sub
mov
fsubrs
mov
dec
xor
xchg
jo
xlat
jne
fucomi
idivl
push
fisubl
cli
ret
and
std
das
rolb
jge
in
cmp
scas
scas
jbe
dec
and
dec
jp
rcll
xor
lods
push
lahf
filds
mov
xor
cltd
or
mov
ficoml
test
jae
das
fs
setbe
shlb
imul
das
mov
sub
xchg
arpl
test
popf
sti
push
popf
leave
das
repnz
mov
test
xchg
jl
lds
dec
pop
andb
movsb
mov
popa
cmp
add
lcall
mov
iret
mov
sub
add
and
je
stc
cmpsb
jmp
jo
out
outsl
jns
aaa
mov
push
mov
aas
dec
lret
movsl
aas
seta
insl
push
repnz
int3
adc
cmp
add
negl
in
inc
fwait
push
ljmp
jno
lret
push
sub
pop
mov
or
dec
icebp
dec
inc
jle
or
mov
add
push
or
jns
imul
cmp
mov
les
outsb
repnz
daa
stc
shrb
subb
mov
cmp
and
push
scas
adc
aaa
xor
pop
je
outsl
lahf
pop
mov
dec
clc
popa
sbbl
arpl
repz
jns
jl
stos
ret
xor
sahf
add
repnz
inc
bound
negl
mov
ss
aaa
push
jb
dec
popa
xchg
fcomi
dec
jmp
ja
roll
pop
movsl
and
pusha
jg
movsl
cmp
inc
mov
and
sub
lods
inc
sub
or
daa
mov
pop
jmp
xchg
bound
rorl
lock
daa
lds
pop
pop
mov
lea
or
fidivrs
icebp
adc
push
movsl
arpl
les
add
or
pushf
icebp
cmpsb
les
mov
nop
jo
nop
cmp
rcl
lock
jb
xor
insb
add
cmp
fnsave
or
cmp
enter
pop
xor
das
mov
gs
pop
cmpsl
les
in
in
jb
outsb
pop
push
out
dec
icebp
or
insl
jne
pop
pop
sbb
dec
lea
xor
cld
xor
cwtl
das
dec
mov
cwtl
push
push
dec
add
cmp
jecxz
push
pushf
mov
push
push
mov
inc
push
jo
push
push
jge
lods
inc
cmpsl
or
add
mov
sbb
jnp
sahf
jle
pop
jmp
insl
add
iret
jae
sub
push
jb
mov
sbb
xchg
mov
cmp
jmp
or
mov
mov
leave
fcompl
out
pop
fbstp
add
push
inc
lods
shlb
mov
lods
inc
lods
outsb
test
lret
push
add
xchg
repnz
loopne
sbb
dec
movsb
push
jl
jne
dec
fnstenv
scas
push
sub
mov
insl
shlb
jns
lret
fnsave
and
in
ds
cld
pop
lcall
xchg
out
inc
scas
inc
inc
mov
int3
fsubs
sub
xchg
sbb
jae
ljmp
stos
sbb
or
test
fwait
daa
mov
in
idivl
ret
push
mov
mov
mov
cmpsb
sbb
inc
pop
rolb
and
or
fnsave
sbb
push
out
insl
jnp
or
addl
push
je
lret
push
in
cld
add
or
mov
pop
repnz
and
push
repz
and
xchg
cltd
cld
outsl
mov
insb
push
cli
pop
xchg
outsb
gs
jnp
jg
cmp
lods
ret
adc
idiv
lock
scas
cwtl
xchg
push
ret
mov
cli
mov
dec
iret
jb
xchg
push
pop
and
pushf
inc
aas
pop
jae
cmp
mov
les
or
sub
mov
movsl
xchg
xor
fisubrs
int3
sub
int3
xor
call
fsubl
cmpsb
push
out
jnp
or
ret
push
sahf
mov
mov
inc
aaa
jo
outsl
lret
imul
int
and
sub
sub
fisttpll
jp
loop
mov
mov
or
jle
mov
jae
leave
sti
xchg
daa
pop
rcrb
aad
xchg
mov
idiv
or
test
dec
mov
pop
repnz
mov
pop
lods
mov
repnz
in
insl
leave
pop
inc
cmp
and
mov
xchg
sbb
mov
cmp
pop
jl
dec
and
les
sti
jmp
test
push
faddl
rcr
int3
add
cmp
mov
daa
add
sub
mov
inc
cmc
and
sti
sub
sub
inc
or
stc
xor
leave
cmpsb
or
cmp
cltd
and
mov
mov
xchg
mov
loopne
cltd
pop
imul
xlat
xlat
outsl
test
jl
sbb
dec
or
les
repnz
lahf
incl
sarb
and
fidivs
inc
enter
cld
rcrb
push
mov
dec
mulb
loop
arpl
addb
xchg
xchg
fwait
push
add
movsl
scas
or
lods
mov
sub
repnz
push
mov
adc
mov
xor
fs
mov
add
icebp
and
loop
test
daa
dec
mov
and
fistps
or
and
jmp
dec
call
push
lods
or
cli
sbb
insl
mov
push
mov
outsl
add
popa
cmp
and
mov
incb
inc
cwtl
inc
aaa
gs
out
bound
cmpsl
inc
push
push
or
outsl
out
sbb
cltd
and
xor
dec
imul
add
sub
shl
mov
jno
pop
dec
je
lea
rol
xor
mov
adc
movsb
and
insb
test
sub
jp
cli
ljmp
pop
sar
cli
rcll
out
lods
mov
add
fildl
and
imul
enter
popf
jmp
xchg
dec
jo
jno
mov
flds
stc
arpl
cltd
mov
push
out
insl
push
dec
ret
rol
jle
mov
ja
cmp
fwait
cmpsl
mov
cmp
pop
aaa
or
cmp
push
jne
push
mov
gs
mov
notb
xor
or
or
mov
jo
jo
cltd
pop
pop
aad
insl
mov
fucomip
jbe
sbb
xor
pop
pop
aam
into
mov
dec
in
mov
sub
cltd
xor
and
inc
push
call
cltd
mov
out
and
out
sub
outsb
mov
addr16
add
outsb
push
pop
jae
mov
xchg
test
push
lahf
dec
fdiv
jge
push
push
bound
fwait
das
loop
stos
mov
mov
jne
and
ret
sub
xor
or
add
push
in
test
pop
xlat
mov
pop
pop
cmp
hlt
jns
std
shlb
push
lcall
cli
cmp
xchg
imul
sbb
gs
push
cmpsl
lds
cmp
orl
xchg
sub
fs
or
mov
lret
rorb
fwait
sar
das
loop
cmp
sub
pop
push
cld
cmc
bound
mov
add
jmp
inc
jg
push
and
mov
ss
stc
jo
push
bound
loope
lcall
inc
inc
popa
pushf
lea
dec
and
fs
jge
inc
mov
imul
cmp
ret
insl
pop
and
aas
loopne
and
cmp
shl
push
jle
cmp
fdivrs
ret
inc
cltd
fdivl
ss
lea
out
bound
aad
push
cmc
add
out
dec
and
movsl
out
jne
addl
cltd
stc
or
movsl
decb
add
aaa
inc
inc
jp
gs
xchg
pop
jle
std
and
dec
pop
pusha
or
mov
test
mov
sbb
int
mov
imul
ds
mov
out
shr
adc
jno
cmc
xor
clc
popf
sbb
pop
outsb
cli
clc
jbe
push
ret
cmpb
lahf
lret
jge
loop
sbb
pop
rorb
inc
int3
pop
stos
sbb
xchg
dec
mov
aam
inc
sbb
xor
sub
pop
repz
mov
mov
in
mov
or
mov
or
cmp
pop
xchg
lock
mov
aad
dec
mov
outsb
and
jge
inc
push
inc
jmp
addl
in
outsb
clc
fsubl
pop
push
jae
movsb
aas
test
add
mov
mov
jp
outsl
adc
inc
push
dec
test
cmpb
pop
jno
push
je
mov
sti
out
pop
pop
mov
push
dec
rcrl
mov
dec
pop
lahf
mov
decl
daa
pop
adc
dec
shl
dec
movsb
cmp
jge
or
ret
pop
dec
sub
sub
mov
and
cmp
mov
movsb
xor
int
push
je
jg
or
out
sbb
fstl
pop
cmp
inc
fwait
push
cmp
dec
push
mov
jne
add
push
jle
outsb
and
inc
xor
popf
in
fwait
xor
adc
dec
push
cmp
mov
arpl
xchg
shll
dec
aad
xchg
xchg
testb
fldenv
sbb
rorb
or
ss
sub
pop
inc
fdivs
and
dec
lds
insl
ljmp
pop
ss
faddp
ljmp
xor
sbb
fnstsw
and
shrl
inc
scas
pop
pop
inc
in
jb
fdivs
or
jns
js
cmp
cmp
cmp
fwait
pop
adc
mov
xchg
in
mov
rorl
test
inc
push
jg
dec
sbb
sub
call
and
mov
inc
pop
adc
and
mov
loop
jbe
stos
jmp
or
stc
lcall
icebp
rcl
or
in
jae
lods
adc
pop
xchg
shrb
ss
xchg
jg
mov
mov
outsl
mov
arpl
in
xchg
pop
lcall
sub
cld
popf
and
inc
pop
into
jg
add
and
jns
ret
rcrl
jo
mov
test
aas
pop
std
out
cmp
nop
mov
in
xadd
addl
test
xchg
std
cmpsb
jp
ljmp
bound
insl
xor
repnz
xchg
mov
stos
es
shll
test
pop
mov
pusha
cmp
in
cli
sarl
sub
std
scas
clc
cmpsl
or
xchg
pop
test
xchg
jmp
mov
imul
xchg
push
lods
dec
mov
or
outsl
lea
xchg
push
repz
pop
cmc
mov
cmpsl
gs
xchg
mull
jp
jns
cld
push
idivl
or
shlb
les
scas
jnp
mov
add
stos
cld
fwait
adc
push
lock
xchg
xchg
sub
xchg
in
adc
mov
cmp
jbe
ds
pop
repz
cmp
pop
sub
or
cmp
dec
xchg
arpl
scas
out
and
out
arpl
xchg
lds
les
mov
out
sarb
cli
xor
add
in
mov
mov
push
push
mov
out
fcmovnbe
mov
ljmp
push
dec
mov
leave
mov
jl
add
pop
cmp
negl
sahf
jns
into
push
inc
mov
call
insb
icebp
outsl
add
mov
imull
iret
xchg
js
mov
adc
mov
adc
es
imul
jns
and
jnp
or
mov
into
mov
gs
dec
fstl
lret
push
and
cwtl
fldenv
lret
xlat
jbe
pop
mov
iret
out
fwait
add
aaa
mov
call
and
adc
jp
mov
sbb
fldl
push
pop
stos
andl
mov
movsb
jno
out
sub
push
inc
addb
aaa
movsl
sbb
cmc
mov
pushl
fcomip
movsl
lods
inc
bound
repz
cmp
jp
cmp
jns
dec
jmp
jae
shlb
lcall
mov
loope
mov
inc
push
xchg
xlat
jmp
inc
aam
lock
mov
int3
data16
push
cltd
popf
xor
mov
cltd
std
sti
fdivl
or
aad
sbb
xchg
gs
xchg
dec
pop
add
ret
and
mov
cld
jb
test
jns
hlt
mov
push
push
mov
es
dec
stos
push
xchg
adc
repz
jp
push
loop
xchg
cmp
and
pop
dec
add
adc
adc
leave
ficoml
dec
xlat
mov
sub
inc
adc
ja
imul
jg
adc
daa
lea
leave
pusha
push
out
aad
pop
jl
dec
inc
bound
idivl
push
mov
into
imul
roll
adc
pop
inc
gs
pop
inc
loopw
nop
dec
mov
scas
shlb
mov
shlb
mov
push
sub
cli
movsl
xchg
inc
pop
stos
inc
scas
lock
mov
mov
pop
sbb
fs
pop
lret
mov
imul
push
adc
adc
inc
push
loopne
and
lret
mov
push
in
mov
mov
push
popf
sbb
movsb
cs
repz
lret
xchg
jne
std
mov
loopne
push
rcrb
jge
ja
push
adc
test
lea
aaa
fwait
lret
movsl
sahf
stos
fadd
xor
movl
xor
sbbl
clc
jae
lods
loope
and
sti
jbe
ja
into
sub
push
jno
jg
fdiv
js
gs
adcl
cwtl
andb
sbbl
into
adc
js
sbb
repnz
mov
sbb
sbb
mov
ds
bound
mov
js
rol
lret
dec
hlt
fidivrs
mov
sti
push
push
lock
loopne
rorb
mov
or
faddl
daa
push
stos
fnstsw
adc
add
scas
addr16
mov
decb
xor
daa
in
jae
sbb
popa
and
xlat
mov
clc
test
pop
inc
pushf
js
popf
test
inc
int
addr16
and
dec
es
push
rclb
insl
mov
aad
std
icebp
bound
inc
mov
rolb
loop
sbb
inc
sbb
mov
mov
mov
push
xchg
outsb
push
mov
notb
cmp
cwtl
add
and
dec
push
idivl
inc
mov
out
sub
jmp
not
push
and
fwait
imul
inc
sahf
pop
jb
subl
or
out
les
xlat
inc
test
fnstenv
jl
lock
mov
icebp
iret
flds
xchg
adc
dec
xchg
sbb
shl
mov
cltd
andb
hlt
out
add
adc
stc
mov
jge
aad
dec
ficomps
je
jecxz
jg
int
push
adc
sbb
cmpsl
dec
jle
add
jns
push
shll
inc
sbb
jnp
sti
rorb
push
ret
gs
arpl
lcall
call
ss
outsl
inc
nop/reserved
dec
dec
mov
cltd
lock
fstpl
cwtl
push
mov
sti
ljmp
lock
scas
lea
xor
xchg
int3
jne
mov
outsb
inc
pop
leave
int
test
arpl
pop
cmpsb
mov
cmpsl
imul
push
test
lcall
push
adc
inc
iret
js
inc
pop
clc
in
cmpsl
int
pop
jle
push
fistps
pop
popf
cmpb
or
or
and
add
jmp
sbb
scas
loop
orb
mov
cmc
lcall
or
or
xlat
scas
mov
fisubs
iret
cmp
cwtl
and
add
repz
out
lcall
pop
adc
push
imul
fisubrl
shlb
mov
adc
push
jecxz
jae
lret
sub
hlt
cli
movsb
and
iret
int3
fidivs
jle
pop
addb
push
mov
pushf
xor
daa
mov
cmp
mov
cmpsb
inc
cmp
jno
mov
dec
sbb
jg
insl
or
pop
xchg
add
fisubrs
dec
lock
testl
lcall
xor
rcr
and
pop
mov
cmp
imul
mov
push
mov
push
push
cmp
outsb
push
ja
cs
cli
icebp
insb
ror
mov
mov
sub
loope
or
frstor
loope
jnp
sahf
test
fbld
mov
je
lret
in
cmp
mov
scas
pop
ret
mov
xor
bound
push
sbb
push
jns
fstps
dec
inc
in
mov
inc
lods
mov
pop
cmp
fwait
dec
iret
mov
movsb
pop
rcl
inc
into
das
ret
aaa
dec
inc
dec
rcr
out
das
mov
inc
gs
ret
mov
push
and
jno
jbe
in
mov
jae
test
lods
or
or
dec
rorb
ja
call
cmp
popa
ja
jp
imul
scas
lret
lea
mov
mov
incb
jg
sub
push
xor
fidivl
xchg
mov
push
lahf
data16
jns
or
adc
jnp
xchg
jns
sub
mov
das
push
rcrb
icebp
jp
and
sub
push
xor
fabs
test
nop
subb
add
cmc
pop
scas
xchg
cmp
clc
int3
mulb
rcr
lahf
repnz
inc
sub
mov
fildl
std
add
sub
push
push
shr
jne
mov
out
stos
dec
cmc
rdpmc
push
orb
add
sbb
popa
cli
sub
stc
sub
xor
xchg
push
mov
or
dec
inc
cmp
test
mov
sahf
xor
or
mov
push
mov
and
imul
xchg
out
pop
out
mov
aaa
mov
lds
cmpsl
aaa
incb
mov
shrb
inc
fsub
stos
into
ljmp
mov
test
sarb
vfixupimmps
sub
and
loop
cltd
add
addr16
inc
daa
adcb
into
and
stos
test
out
dec
add
aad
push
jecxz
sarb
sbb
sbb
add
mov
lods
rol
pop
mov
mov
sub
mov
pop
xor
in
cld
aad
dec
mov
aaa
sub
sub
mov
push
cmp
andb
sbb
mov
sti
sub
cmc
mov
jecxz
rcrb
into
and
fistpll
ds
or
lcall
mov
jo
std
xchg
sub
mov
ss
xchg
sub
stos
jmp
mov
shrl
add
inc
icebp
mov
sub
fisubrl
nop
divb
cmp
and
push
fadds
sub
mull
inc
push
stos
mov
inc
fadds
mov
sbb
mov
xor
and
xchg
pop
movsl
mov
sbbb
test
aad
mov
mov
insl
decl
mov
jl
xor
or
push
mov
xchg
sub
mov
push
add
scas
dec
and
push
mov
xchg
cs
push
xchg
inc
cmp
adc
lods
sahf
adc
es
sti
inc
lret
sub
pusha
and
inc
push
ljmp
or
ljmp
jno
aas
out
idivl
pusha
lret
mov
in
sbb
ljmp
inc
or
dec
pusha
ds
je
fldenv
add
xor
cmp
mov
sbb
in
sbb
sub
inc
push
aaa
mov
adc
pop
fmuls
sub
pop
lahf
sti
stos
mov
xchg
cli
lea
add
lret
data16
cmp
push
mov
ds
clc
push
push
sub
scas
inc
repnz
dec
test
push
mov
add
jp
sahf
in
pop
push
mov
sbb
xor
dec
add
popf
xchg
ja
or
imul
ret
sbb
mov
cld
fdivl
xor
xor
idiv
xchg
out
jp
enter
das
mov
in
insl
rclb
cmp
jb
cmp
aad
xchg
stc
popf
into
push
inc
int3
data16
xchg
fstps
mov
xchg
cltd
pop
add
les
and
and
inc
int3
ljmp
push
daa
push
insb
aad
dec
cmp
lahf
stos
adc
sub
and
and
lahf
or
test
clc
and
sub
dec
and
mov
lahf
push
imul
jmp
aaa
mov
mov
xor
xor
add
popf
add
es
xor
fwait
push
sbb
cmc
pop
rcrb
mov
jo
in
lds
jle
mov
fs
inc
fstpl
aam
es
sbb
pop
popf
xor
cmc
jecxz
jecxz
mov
add
les
leave
xor
xchg
nop
mov
or
out
sbb
fnstenv
jg
div
jle
mov
iret
xor
add
loope
sub
pop
cmc
and
movsl
jb
inc
popa
dec
inc
sub
mov
aas
xchg
mov
jge
or
add
out
sbb
push
jecxz
dec
addr16
xor
and
or
movsl
fstl
push
movsl
mov
bts
cmpsl
shl
loopne
lods
add
std
mov
into
mov
popa
clc
pop
imul
inc
jg
xchg
push
jb
cmp
jae
dec
mov
popf
push
adc
inc
fyl2xp1
fwait
mov
dec
ficomps
mov
iret
mov
cmp
xor
cmp
std
ret
es
or
xchg
mov
pushf
jnp
xchg
or
out
lods
sbb
xorb
cwtl
lcall
xbegin
enter
fcoms
mov
mov
cmp
sbbl
adc
jl
mov
xchg
outsb
inc
ret
mov
push
xchg
and
fsubrp
pop
enter
mov
sbb
adc
and
shll
xchg
out
or
mov
inc
nop
in
xor
pop
lds
or
subl
mov
add
sub
or
imul
add
gs
add
sbb
aad
fimull
sbb
add
push
or
cmpsl
lret
fnstcw
cmp
int
xchg
pop
ficoml
iret
fidivrs
add
inc
fistpll
cmp
inc
and
lahf
mov
push
aaa
mov
andb
lods
iret
and
mov
jge
ss
mov
xchg
and
pop
fwait
push
test
popa
jle
dec
pop
stos
lahf
lock
lods
dec
cmp
test
mov
lret
push
frstor
adc
cmp
push
xlat
fwait
out
ret
jecxz
lds
xchg
jbe
adc
pop
lret
and
mov
adc
les
cmp
iret
insl
adc
dec
dec
sub
add
lock
jns
sti
imul
xchg
jb
inc
cli
inc
sbb
add
jne
pop
pop
pop
or
mov
mov
enter
imull
sub
mov
popa
enter
cmp
sbb
cmp
mov
fcomps
push
push
insb
loopne
enter
mull
in
xchg
lahf
dec
movsl
and
shlb
rcrb
push
cmp
jno
sub
mov
jg
adc
jge
lret
mov
push
or
pusha
repz
and
add
sbb
mov
jo
movsl
add
repz
mov
cmc
cmp
mov
mov
dec
adc
jp
rcrb
repnz
fwait
cmp
lahf
mov
ficomps
push
loopne
xor
testb
imul
dec
shll
outsl
lret
pop
mov
sbb
ret
sbb
cmpsl
dec
and
mov
mov
mov
and
sahf
test
fprem1
fistl
incb
mov
cld
mov
aad
xchg
and
jecxz
adc
dec
lret
mov
jle
shr
sbb
and
adc
jecxz
pop
stos
jbe
outsb
dec
cmp
sbb
inc
call
jae
inc
push
cld
push
mov
xor
xchg
popw
cltd
pop
lock
push
sub
mov
mov
lahf
jns
cld
mov
push
jne
cmpsl
add
std
mov
push
jp
inc
jae
pop
rcrb
xor
movsl
lret
data16
mov
insl
dec
inc
int3
clc
mov
cmp
jo
mov
mov
int3
jbe
lcall
mov
clc
add
add
xchg
sub
movsl
iret
mov
jne
inc
fmull
push
callw
lock
inc
or
insl
jge
sub
es
test
lods
xchg
pop
xchg
decb
cli
xchg
xor
mov
loop
daa
mov
std
pop
lea
mov
bound
push
pop
push
lret
std
jne
and
cmp
in
mov
lods
jnp
loope
loopne
mov
adc
ret
mov
xor
ja
dec
sarl
test
push
cmp
mov
xlat
xor
cs
or
dec
adc
mov
mov
xchg
imul
and
jbe
in
rcll
scas
movsb
clc
mov
jmp
sub
and
mov
mov
js
es
bound
addb
mov
xchg
cmpsl
add
stos
pop
or
leave
in
cmp
fiadds
in
aaa
aas
dec
fbstp
xchg
dec
loope
insb
cwtl
das
pop
jecxz
hlt
aam
out
test
ss
fsubs
mov
stc
fs
push
pop
sbb
dec
mov
les
lods
dec
in
or
pop
jnp
jmp
sub
push
outsb
xchg
mov
mov
xchg
and
jb
sbb
sti
sub
sub
jns
aaa
lea
lock
xchg
push
stc
cmp
dec
mov
mov
lock
dec
jle
dec
push
xchg
jle
aad
clc
push
jnp
stos
out
xchg
xor
sbb
fistl
or
or
xchg
jmp
inc
or
movsl
cs
cltd
mov
mov
out
mov
xor
enter
adc
negb
adc
aaa
std
adc
mov
push
jo
scas
adc
icebp
jns
sbb
imul
cmp
xchg
andl
in
xchg
mov
shl
jmp
jne
add
mov
lahf
test
or
lahf
enter
mov
push
call
add
sub
dec
sub
pmulhuw
fwait
popa
cmc
loope
mov
ret
pop
movsb
ret
push
pop
pop
xchg
push
imul
scas
lret
sahf
push
jmp
int3
outsb
negb
lahf
int
push
jne
and
push
mov
or
adc
out
pcmpgtb
inc
mov
int3
mov
es
or
data16
pusha
fildl
and
pop
cli
enter
aas
adc
shll
inc
fildl
jge
mov
add
cwtl
pop
lock
xor
enter
dec
add
enter
outsb
int3
sub
mov
iret
xchg
loopne
sarb
dec
add
jp
xlat
sub
lcall
and
and
jbe
mov
jg
sahf
in
ljmp
lock
xchg
cmp
iret
sarb
add
loop
in
sbb
dec
gs
mov
sbb
ja
lret
fistps
sbb
jne
pop
mov
inc
dec
mov
shlb
fmull
mov
fwait
mov
lcall
adc
and
scas
mov
xchg
mov
ret
dec
sub
xchg
sub
sbb
loop
push
xor
aas
xchg
adc
stos
inc
mov
adc
pop
mov
mov
and
clc
fwait
mov
dec
sub
xor
mov
iret
scas
out
adcl
out
mov
dec
adc
push
mov
adc
jg
sub
clc
mov
inc
scas
push
imul
sbb
into
mov
repnz
mov
adc
push
jno
mov
test
sahf
lods
insl
les
cmp
adc
mov
mov
lock
push
cmp
popa
pop
loopne
xchg
jno
xchg
cmpsb
mov
mov
jle
loop
lahf
dec
les
xor
and
sub
mov
pop
test
lods
ret
adc
mov
lahf
adc
mov
xor
mov
decl
lret
push
imull
stos
movsl
inc
cwtl
jge
fstpt
sbb
jbe
adc
cmp
pop
sub
nop
test
or
fdecstp
lea
or
lods
mov
daa
jae
stos
xor
popf
add
iret
xor
or
jecxz
adc
sbb
sub
daa
xor
push
cmc
or
cmp
jmp
push
scas
pop
icebp
mov
and
mov
inc
push
mov
in
fs
push
pop
ja
xchg
dec
jp
sub
add
js
push
push
lods
jns
mov
jmp
jge
dec
ffreep
push
mov
pop
data16
mov
add
adc
scas
dec
roll
push
imul
cmc
jmp
pop
scas
mov
xor
mov
push
out
daa
fbstp
outsl
out
push
gs
es
xchg
test
push
inc
pop
mov
push
jmp
pop
test
mov
sbb
cmp
xchg
sub
mov
cmp
movl
inc
mov
adc
xchg
cmp
clc
pushf
addr16
cltd
or
and
sub
dec
fidivs
jp
xchg
xlat
out
in
in
mov
pushf
jg
insl
xchg
dec
enter
push
cld
inc
pop
movsl
push
mov
inc
out
inc
inc
jb
lret
scas
jmp
scas
push
dec
in
dec
les
test
fmuls
adc
je
jnp
or
sbbb
adc
fiaddl
sahf
lods
ljmp
pushf
adc
jmp
fwait
das
daa
ret
clc
aaa
int
xor
jecxz
dec
cmp
cs
adc
mov
popf
push
or
dec
pop
mov
rorb
mov
test
add
push
mov
out
mov
outsl
sub
fadd
lds
fbld
mov
lahf
jge
jne
js
push
cmc
mov
adc
inc
xlat
cmp
pop
fldcw
mov
outsl
lret
rcll
pop
and
inc
sbb
ficomps
fdivl
out
jge
push
rclb
mov
sahf
jne
imul
mov
in
xor
push
cmc
xor
mov
aam
adc
iret
xor
rcrl
add
xchg
push
insl
xorb
xchg
leave
inc
mov
mov
fisttps
ja
sahf
cmp
iret
jae
decb
push
xchg
lret
in
outsb
xchg
add
hlt
lods
cmpsl
xor
push
jg
and
fildl
push
stc
popf
leave
ficomps
pop
pop
sti
dec
fisubrs
testl
outsb
inc
in
cwtl
aad
in
testl
repz
lods
shlb
add
jnp
cwtl
sahf
jno
outsl
into
andl
and
mov
lea
mov
pop
fisubs
cmovge
jge
outsb
xchg
mov
pushf
mov
sbb
shll
out
outsb
in
jecxz
js
mov
push
icebp
jle
iret
pop
iret
std
nop
in
test
bound
icebp
cli
xor
cmp
leave
pop
cld
repz
cs
fadds
inc
fsub
fisttpl
scas
loop
jg
cltd
add
dec
xlat
call
lock
outsb
xchg
inc
push
mov
add
mov
lahf
mov
pop
es
scas
cmpsl
inc
sbb
fsub
sub
ret
sahf
loope
xchg
and
subl
cmp
out
mov
in
mov
stc
sub
fildl
loop
xor
mov
dec
add
sub
jle
mov
pop
sbb
pop
and
sbb
xor
mov
mov
loopne
lods
push
mov
mov
push
mov
sarb
fcmovb
pop
add
push
xlat
dec
and
mov
fadds
iret
aas
mov
mov
jnp
insb
xlat
outsl
jnp
dec
pusha
aaa
add
shll
test
aas
sarl
push
pop
fsubrl
mov
push
jl
pop
out
push
xchg
push
je
dec
mov
addb
xchg
dec
in
mov
or
push
cld
dec
and
inc
pop
out
repnz
jne
jnp
sbb
iret
idivb
mov
push
jne
push
inc
adc
out
cld
adc
cmpsl
aas
and
xlat
inc
cld
fsubrl
jp
inc
sub
test
pop
cmpsb
outsb
jl
test
sub
popf
je
adc
shl
and
mov
insb
test
aad
in
int3
mov
hlt
pop
clc
inc
stc
mov
sti
xor
jmp
push
push
fldt
int
push
or
mov
out
in
pop
out
cwtl
ret
lock
ja
jmp
popa
jb
xchg
sub
lret
inc
insb
div
sarb
xchg
mov
out
adc
xchg
push
mov
xor
arpl
lds
sahf
stos
mov
das
xlat
repz
shr
es
inc
fs
jae
or
mov
cltd
outsl
sub
cmp
je
jmp
xlat
adc
bswap
addr16
dec
mov
xlat
xchg
sub
test
xchg
push
ret
sub
call
mov
into
out
cld
or
sub
shrb
fcoml
push
dec
dec
ret
popf
ljmp
rcrl
ficomps
sub
repnz
cmpsb
iret
lahf
pop
das
or
pop
inc
jle
jne
out
scas
rcrl
adc
scas
fwait
sub
mov
xor
sub
sbb
mov
stc
mov
xor
cmp
mov
pop
cmpsb
ljmp
aam
das
les
mov
sbb
pop
ds
xor
cs
mov
inc
test
add
jo
in
mov
pop
add
sub
pushf
ljmp
adc
loop
mov
cwtl
mov
loop
out
movl
hlt
or
mov
and
jnp
movsb
cmp
dec
lret
rolb
cld
aam
xor
in
inc
push
cmp
dec
popf
sbb
insl
ret
or
lcall
cmp
test
push
fcmovu
xchg
arpl
mov
xchg
test
xchg
push
xor
ja
hlt
xor
cltd
int
cwtl
ss
adc
or
iret
mov
std
cmp
jle
push
mov
dec
sub
out
jns
cli
stos
out
rolb
add
mov
in
aas
sbb
out
push
push
or
js
loope
add
rorl
cmp
and
pop
jae
jae
dec
fs
lds
jmp
xor
test
clc
xchg
mov
push
jp
jb
adcl
and
push
negb
lods
shll
pop
das
sbb
ror
push
mov
pop
jge
jecxz
imul
imul
jno
dec
mov
dec
rclb
test
xlat
pop
cltd
cmp
jge
sbb
rcll
jp
jo
arpl
jbe
cmp
std
adc
add
in
xor
into
out
es
push
adc
push
loope
or
sbb
scas
neg
ficompl
shl
cmpsb
pusha
sahf
cmp
div
push
xchg
inc
adc
pop
mov
dec
pop
push
cs
ret
mov
in
scas
jmp
sbb
xchg
sub
dec
xchg
fdiv
pop
push
add
in
pop
mov
jbe
adc
and
jp
add
mov
push
sbbl
hlt
ja
gs
push
xor
inc
pop
test
inc
inc
int3
mov
sahf
xchg
xor
orb
nop
mov
cmp
inc
lret
mov
ficompl
cli
xlat
aad
push
push
xchg
inc
dec
popf
or
int3
call
adc
dec
into
scas
inc
add
lret
dec
and
adc
out
sahf
mov
mov
loopne
mov
dec
mov
lea
iret
loop
xchg
std
cltd
fwait
xchg
mov
adc
cmp
push
nop
xor
mov
mov
xor
cli
push
jnp
push
jmp
shl
loopne
mov
cmpsb
inc
scas
sbb
sbb
jb
or
stc
nop
stos
add
mov
adc
into
pop
fidivl
jecxz
in
mov
pop
pop
in
xchg
test
or
dec
and
push
outsb
lahf
cmp
arpl
cmp
push
xchg
and
or
xor
outsb
jns
and
lahf
stos
push
in
int3
push
adc
cmc
popaw
nop
mov
inc
movsl
andl
out
out
andb
add
cwtl
loop
jno
test
stc
adc
data16
loop
das
xchg
mov
xor
aam
repnz
ljmp
dec
movsl
sub
or
dec
sub
inc
jle
arpl
inc
in
inc
dec
inc
out
test
fcompl
ja
notl
mov
mov
mov
pop
and
pushf
in
int
xchg
rcrl
mov
subl
lcall
cmc
push
xor
inc
mov
or
roll
hlt
pop
sub
adc
inc
xor
mov
bound
or
mov
mov
into
fs
jmp
xor
enter
je
dec
out
rcrl
add
or
test
dec
dec
mov
add
lret
jne
call
jl
dec
pusha
xchg
lds
dec
arpl
add
adcl
jbe
lea
cltd
stc
lcall
in
xchg
jbe
loop
mov
and
fildl
es
sub
addr16
adc
pop
aaa
xorl
mov
ss
ljmp
lcall
loopne
pop
out
nop
jp
sti
mov
cmp
fstpt
sub
adc
inc
inc
jge
jne
mov
mov
xor
stc
cld
dec
out
xor
xor
push
jnp
jo
outsb
push
xchg
sub
mov
jnp
push
xchg
sbb
mov
push
xor
call
and
push
push
cs
ljmp
sub
out
mov
mov
fbstp
sbb
lahf
scas
inc
mov
popa
jb
pop
out
push
fistps
std
mov
or
pushf
bnd
mov
sbb
dec
stc
cmpb
stc
jb
repz
add
mov
xchg
ljmp
inc
cli
xor
fs
mov
ret
xor
push
sub
data16
inc
ss
dec
mov
movsl
push
in
mov
int3
rcl
sub
rorl
xchg
fisubrl
mov
leave
jecxz
push
outsb
test
sbb
enter
sub
stc
push
in
rcl
adcb
pop
push
inc
adc
sarl
iret
push
aaa
add
repz
jmp
adc
push
addr16
jno
je
je
xchg
out
addr16
ss
and
lret
les
add
fsubrl
mov
ja
daa
mov
mov
ret
dec
out
fimull
ds
mov
bound
sahf
cltd
mov
rcr
stos
sbb
xor
mov
notl
icebp
mov
adc
pop
aad
xchg
mov
mov
loop
das
xchg
ret
push
cmp
mov
test
xor
jp
pop
aaa
pop
jl
pop
test
sbb
addr16
dec
push
sarl
mov
push
out
xor
sbb
fdiv
cmp
sbb
pop
xchg
sub
xchg
das
mov
adc
sbb
pop
ss
mov
xor
xchg
testb
cld
adcl
xor
pop
mov
jne
js
dec
and
adc
jp
inc
outsb
popf
ret
arpl
add
xorl
mov
and
addl
cltd
push
movsb
push
lds
push
pop
lods
inc
jae
lahf
inc
sbb
or
enter
outsl
push
lock
js
imul
or
outsb
mov
arpl
mov
addr16
in
stos
aam
xor
sub
icebp
mov
cmpsb
jb
in
into
add
pop
das
inc
xor
adc
inc
xchg
ficomps
btr
movsl
enter
mov
lods
icebp
jl
inc
push
xor
push
aam
mov
mov
and
cmp
cld
aas
icebp
adc
loop
mov
test
push
sbb
adc
imul
cli
xchg
pop
fists
testl
into
fldcw
push
out
sarl
xchg
dec
arpl
aam
mov
inc
jp
negl
arpl
notl
mov
jge
rorb
scas
and
push
outsl
add
fs
jns
push
imul
sar
movsb
add
test
icebp
or
repz
adc
sbb
add
mov
lret
push
and
lods
int3
enter
mov
repnz
and
push
or
test
nop
stc
mov
mov
adc
pop
sbb
cmp
sbb
sbbl
mov
xor
ret
rcll
xchg
out
pop
jle
xor
pop
pop
cwtl
jne
cmp
pop
repz
lcall
fnstenv
xchg
scas
push
mov
xchg
jae
pop
repz
mov
jnp
sub
jge
lret
ss
out
xchg
call
cmc
mov
insl
cs
adc
bound
repnz
or
xor
sbb
clc
test
aam
cmp
aas
push
push
inc
fs
dec
sbb
mov
xchg
xchg
cmp
mov
push
xchg
mov
sub
cmp
sti
sub
push
inc
xor
push
scas
fisttpl
or
es
inc
cmpsb
sbb
mov
mov
loopne
sbb
dec
ret
xchg
lcall
cld
stc
inc
test
and
xor
rcr
xlat
push
jl
dec
mov
repz
inc
loope
aam
xor
add
sub
std
adcb
push
mov
insb
sub
ret
testb
jmp
jl
push
nop
cmp
ds
lahf
stos
es
push
test
pop
jge
movsl
mov
test
add
int3
loopne
cwtl
es
mov
ds
daa
loope
push
fsqrt
cs
sub
inc
push
in
mov
je
cmp
or
in
sbb
sti
xchg
pop
mov
test
jne
sbb
cmpb
call
scas
icebp
mov
addr16
daa
sarb
mov
mov
out
aaa
shlb
push
fcomps
jecxz
mov
out
cmp
sbb
cmp
dec
cmpsb
clc
fimull
mov
xchg
cmp
inc
mov
mov
int
clc
push
idivl
cmp
xchg
push
or
incl
cltd
push
clc
out
outsb
inc
sbb
adc
loope
mov
push
pop
mov
sub
stos
in
pushl
mov
mov
jp
jo
call
jecxz
mov
bound
push
dec
fstpl
dec
sbb
idivl
icebp
sub
pop
or
mov
fsubl
cmp
mov
xor
and
loopne
pop
fdivl
mov
inc
mov
imul
or
mov
jge
inc
pusha
outsl
jp
xchg
mov
xor
push
shll
push
out
pop
stos
xchg
gs
dec
mov
inc
out
inc
sbb
push
out
rcrl
stos
jle
faddl
popa
stos
mov
fsubl
xor
imulb
jmp
dec
jl
push
cmpsl
ret
push
lds
mov
adc
outsb
add
testl
dec
leave
jne
push
daa
pop
aaa
mov
dec
mov
pop
lds
fnstenv
jg
addr16
subb
int3
add
jbe
out
mov
pop
cmp
and
xor
test
int3
pushf
dec
sub
pop
and
ret
lds
mov
pop
jne
ds
or
jo
in
dec
xchg
rolb
pop
dec
movsb
stc
notb
repnz
cmp
adc
lcall
add
mov
add
adc
roll
add
mov
mov
mov
ljmp
sub
rorb
sub
lcall
and
add
mov
ss
fidivrs
add
pop
xchg
xor
xchg
data16
mov
push
mov
call
mov
push
loopne
icebp
test
test
leave
pop
repz
push
lods
pop
push
inc
nop
out
inc
xor
xor
jg
and
pop
fcoms
pop
mov
arpl
cltd
mov
in
jns
pop
pop
add
dec
lods
sbb
out
push
rcrl
sub
nop
push
sbb
fwait
repnz
repnz
mov
mov
lret
rcrb
orl
test
xchg
pusha
addl
pusha
xor
and
ss
lods
jg,pn
mov
out
mov
imul
mov
mov
fdiv
mov
pusha
add
fldcw
sbb
mov
xchg
sub
dec
lret
arpl
sbb
mov
aaa
shlb
popa
xor
mov
lock
repz
sub
push
and
xchg
mov
mov
sbb
xor
push
or
pop
repz
rep
rcrl
das
mov
or
aaa
cmpsb
xor
xor
dec
mov
push
push
icebp
mov
or
fnstenv
add
movsl
testl
pop
push
mov
leave
push
neg
jecxz
imul
xchg
daa
clc
pop
sbb
fwait
xor
cmp
aas
push
les
cmp
fsubrs
and
lock
mov
sbb
xor
popa
xor
enter
push
scas
leave
sbbb
or
sbb
pop
cmp
iret
pop
and
ja
mov
in
aad
movsb
xor
enter
pop
cmp
adc
inc
lret
fstl
lcall
int3
xchg
pop
inc
and
std
jle
adc
push
xor
mov
outsb
leave
pop
sub
shrb
fwait
jae
mov
loope
imul
cmp
push
inc
in
leave
xchg
mov
es
ss
lret
aaa
cli
popa
jbe
lahf
xchg
lcall
mov
testl
xadd
cmp
jae
add
xchg
pop
xor
ret
or
pop
insl
mov
ja
xor
push
out
ret
add
subb
repnz
nop
roll
xor
sti
fwait
mov
push
daa
xchg
jmp
int3
sar
scas
clc
stos
jns
xchg
jns
loope
mov
mov
inc
adc
ret
js
notb
or
cli
xchg
push
add
lock
jge
xchg
mov
es
push
adc
cs
outsl
lret
shlb
jg
outsl
adc
sarl
fucom
mov
enter
mov
das
popf
inc
cltd
test
add
lock
outsl
jnp
out
jle
popa
es
mov
sub
cmp
xor
cwtl
outsl
lea
or
dec
or
popa
mov
test
push
mov
negl
jmp
cmp
jo
adcl
inc
lods
mov
mov
sub
and
adc
popa
loopne
jae
imul
icebp
add
test
mov
aas
movsb
jnp
sbb
fsts
inc
pop
lret
pusha
mov
push
int3
and
stos
addl
or
pop
and
push
sub
rcr
xor
push
inc
pushf
int
mov
sub
cli
jecxz
adc
pop
negl
je
sti
mov
push
test
out
out
xor
insl
les
inc
inc
mov
sub
in
sub
xchg
imul
or
sbb
outsb
xor
add
mov
out
sbb
ss
shrb
aaa
cmp
and
out
cmpsl
cmp
adc
pop
jo
or
stos
pusha
mov
push
cltd
lock
mov
xor
fists
stc
mov
adc
or
ret
out
add
jp
pop
mov
inc
mov
jmp
push
mov
inc
mov
mov
lahf
sahf
pop
add
or
aaa
cli
mov
push
pop
jge
inc
mov
ret
pusha
divl
jle
mov
xchg
test
inc
adc
fs
cld
sbb
mov
movsb
pop
hlt
or
sarl
sub
cmp
jg
data16
sub
pop
mov
fistpl
ss
call
in
loope
iret
push
push
dec
add
negb
jle
imulb
adc
fisubs
mov
aaa
cmp
pop
fbstp
cs
lret
js
bound
and
sbb
pushf
jecxz
outsb
jmp
inc
sub
or
cs
pop
arpl
xor
mov
lcall
jge
adc
push
test
and
adc
mov
adc
insl
xchg
inc
fwait
jae
adc
mov
fwait
int
dec
test
enter
inc
repnz
lret
repnz
lret
cmp
gs
lcall
push
clc
dec
rol
fs
mov
sub
mov
adc
lret
cltd
lods
cmp
push
sbbl
mov
mov
mov
adc
mov
rcr
sub
enter
dec
push
je
out
add
cmp
push
ss
dec
fsubr
imul
popf
jecxz
rclb
pop
mov
xor
sarb
mov
scas
adc
xchg
xchg
lds
and
gs
rol
cli
mov
negb
loop
fidivrs
loop
loope
inc
out
lahf
and
nop
xchg
aaa
gs
mov
fnstenv
adc
repnz
arpl
roll
cs
xchg
scas
cld
jns
lea
stos
test
dec
dec
outsl
enter
es
sahf
js
shrl
sbb
adc
mov
in
shlb
inc
mov
popf
mov
jb
or
add
pop
imul
and
xor
in
arpl
mov
jne
dec
mov
daa
aam
xchg
mov
lcall
push
inc
scas
rorb
pop
pop
inc
inc
or
dec
test
mov
adc
push
out
mov
aam
adc
das
dec
fisttpl
push
ljmp
cmp
bndstx
cmp
pop
leave
or
jge
or
push
loopne
mov
cmp
push
sbb
push
test
or
ret
fisubl
scas
and
lds
rcll
cmp
stos
out
stos
xchg
lods
bound
arpl
js
out
mov
push
cltd
out
mov
xchg
adc
repnz
rep
xorb
std
dec
mov
ret
xchg
mov
scas
aaa
std
sub
in
push
faddl
add
jae
movsbl
mov
xchg
int3
scas
sub
jno
mov
jp
dec
xlat
cltd
mov
imulb
pop
dec
in
es
jmp
ja
dec
addr16
out
push
pop
xchg
rcr
lods
fsubl
and
sar
sub
push
mov
push
ljmp
popa
adc
adc
daa
imul
mov
mov
cmp
add
inc
jle
mov
or
std
jmp
xchg
sub
mov
dec
mov
es
inc
or
rcrl
cmp
sahf
pop
mov
in
cmp
mov
mov
xlat
insb
push
jle
or
repz
stos
sub
and
lods
dec
test
loope
fcmovnbe
pop
xchg
repnz
in
mov
je
jbe
cmp
xchg
xlat
and
dec
pop
jnp
stos
xchg
addb
loop
sti
mov
pop
xchg
mov
fmul
fmuls
pop
xchg
cmpsl
cltd
dec
sbb
jmp
repnz
test
leave
or
inc
sub
xor
sahf
lahf
ss
test
cmpl
jno
fdiv
insl
into
adc
add
sahf
std
nop
dec
mov
repnz
jg
in
lods
or
adc
adcl
xchg
mov
sub
out
add
lock
aaa
cmc
or
mov
mov
xchg
loopne
xor
in
push
xor
lods
push
push
mov
shll
in
xlat
mov
or
scas
xor
cmc
lret
mov
mov
imul
repz
hlt
das
xchg
iret
loop
sub
and
test
test
das
cmp
dec
jae
mov
xorl
nop
inc
sub
adc
stc
inc
or
pop
fildll
sub
jbe
popw
enter
jl
ljmp
sbb
dec
sbbl
sbb
cmp
cmpsl
mov
push
xchg
mov
andl
xlat
data16
fdivr
adc
xchg
mov
movsl
mov
mov
inc
xchg
loop
mov
mov
out
mov
add
dec
cmc
and
xor
pop
cmp
or
movb
xchg
inc
push
movsl
mov
insl
push
call
fsubr
in
sbbl
xchg
add
pop
out
imul
and
rolb
xchg
xor
stos
mov
mov
push
cmpsl
ficoms
lret
or
push
push
pop
int
movsl
aaa
mov
push
and
jne
sub
jp
cwtl
popa
and
movsl
add
and
call
lcall
testl
sti
test
mov
pop
cmp
popa
cld
test
fwait
xor
mov
xchg
scas
dec
movsb
jg
cmpl
int
push
sti
loope
push
lahf
dec
ffreep
pop
or
cmpsl
xchg
push
pop
mov
das
loop
and
jge
insb
jl
sbb
cmp
das
push
into
mov
cmc
mov
in
mov
mov
adc
xor
icebp
mov
orb
mov
dec
inc
fstpl
and
add
into
and
pop
adc
rclb
or
xchg
ljmp
and
lcall
inc
flds
sub
pop
and
inc
adc
cmpsl
fnstenv
jo
cmpsb
adc
sub
incb
sahf
inc
push
scas
mov
rclb
test
or
out
cli
inc
gs
inc
loopne
bound
push
in
divl
cli
cmp
fs
push
cs
in
pop
loope
mov
pushf
xor
sub
mov
cli
xor
enter
sub
scas
repz
and
or
or
loop
rorb
cmp
cmpsb
testb
adcb
stc
and
inc
inc
pop
pop
hlt
mov
cmpsl
sbb
pop
sub
aam
sub
push
pop
push
xchg
xor
loope
outsl
or
cmp
or
mov
push
lcall
lods
mov
and
mov
cltd
pop
lcall
ret
dec
pop
cmc
push
das
jmp
lahf
es
mov
out
outsl
inc
push
xchg
push
jne
ret
hlt
mov
inc
ljmp
data16
cltd
jo
mov
divl
xchg
aad
xchg
mov
and
mov
test
ds
push
cmpsb
inc
test
hlt
push
rorb
adc
imul
jp
test
add
adc
loop
mov
xchg
les
out
mov
and
mov
mov
mov
inc
inc
sbb
shrl
or
enter
mul
sub
les
movsl
cli
pusha
pop
xchg
sahf
sti
dec
jno
jecxz
sar
push
xchg
sahf
ja
xchg
fidivrs
out
insb
cmp
fsts
in
negb
or
mov
sub
rcrb
push
push
or
pop
jns
mov
cmpsb
cmp
mov
cmp
jl
in
fcomp
jl
test
push
push
negl
push
mov
mov
pop
out
mov
lods
dec
dec
fs
jne
hlt
inc
dec
xchg
xchg
add
cmp
or
lret
cmp
and
pop
icebp
pop
adc
int3
aad
call
aam
test
dec
mov
add
and
fnop
inc
fstpl
les
aam
jo
mov
and
movsb
push
xabort
inc
pop
xor
push
mov
loop
xor
xchg
stos
das
pusha
cli
rorb
sub
shlb
mov
dec
and
jo
repz
ret
push
insb
jge
bound
stos
shl
sbbb
mov
or
mov
outsl
andl
inc
iret
mov
sahf
fbstp
inc
dec
in
test
push
mov
push
push
out
pop
cmp
mov
aaa
jle
mov
mov
sub
mov
xchg
lret
clc
mov
lods
scas
mov
fsubr
scas
mov
es
subb
movsl
mov
push
jp
ds
mov
mov
std
or
adc
adc
into
cmp
xchg
sbb
xchg
inc
negl
add
adc
into
pop
fwait
dec
inc
push
test
insl
repnz
cmp
outsl
sub
loopne
jnp
dec
test
inc
mov
push
cmp
jle
in
push
or
nop
subl
lock
daa
xor
out
xchg
jns
into
lods
sbb
les
push
aad
pop
jno
lcall
loope
push
mov
dec
rcr
lods
addr16
and
outsl
lock
in
pushf
fisttpl
jns
mov
inc
cwtl
in
add
mov
add
and
xchg
pop
xchg
out
cmpsl
cmpsl
pop
addr16
fadds
into
pop
enter
pushf
jg
hlt
sbb
fs
loop
jge
sub
outsl
jb
aaa
xchg
sar
xchg
or
cmpsl
dec
pop
and
es
or
xchg
pop
ret
aad
mov
push
hlt
les
xlat
inc
into
dec
jl
cmp
std
or
cmp
fwait
mov
add
push
inc
pushf
or
mov
shlb
es
push
repnz
mov
adc
les
pop
iret
cmp
subl
aad
cltd
xor
dec
push
popf
ds
or
inc
icebp
xchg
jae,pn
fwait
rorb
xchg
pop
mov
inc
out
popf
pop
hlt
outsb
bswap
push
and
imull
rorl
shlb
insb
xchg
xchg
cmp
jecxz
xlat
xor
lret
mov
jns
xchg
adc
pop
icebp
mov
in
and
xchg
insb
jl
xor
sahf
jle
ret
lcall
fists
push
fiadds
pop
pop
mov
fwait
lea
jne
enter
aas
dec
mov
repz
stos
xchg
sbb
stos
add
cmp
sub
cmp
push
daa
sub
es
inc
mov
rorl
hlt
push
sub
and
inc
fisubs
fildl
scas
fbstp
and
lcall
adc
repnz
push
mov
dec
iret
repz
lret
bound
and
rorl
inc
cmp
cmp
shll
inc
arpl
xorl
fsubrs
sbb
test
fimull
das
mov
ret
pop
push
andb
xor
icebp
loope
pusha
or
add
sbb
aas
out
xchg
sti
push
or
cltd
sbb
mov
inc
lret
lret
out
xor
stc
enter
cmp
cmp
das
shl
inc
mov
jl
jne
pop
out
and
and
cs
and
fs
jecxz
jg
aam
xchg
insb
pop
inc
clc
adc
div
pop
and
out
pop
ja
adc
pop
cmp
xorl
movsl
or
push
test
inc
sbb
mov
push
sub
or
mov
lds
enter
js
insl
stos
pop
test
jge
pop
lea
lods
in
pop
push
push
pop
xor
andl
sti
ret
mov
cli
insl
rcrb
xchg
mov
aad
mov
dec
pop
mov
xchg
pusha
adc
gs
dec
cli
rorl
insl
push
dec
pop
dec
mov
in
jnp
out
imul
mov
out
dec
cmc
fisttpl
movsb
aas
xlat
loopne
mov
adc
addr16
cltd
jb
ret
push
push
push
jae
orb
test
mov
mov
pop
push
sbb
sahf
sti
xchg
out
loopne
cmp
inc
out
ror
mov
jbe
pop
push
xchg
lcall
fs
pop
pop
comiss
adc
idivl
addr16
ficoml
mov
sub
js
pushaw
in
in
jo
push
xchg
xor
fldenv
lret
es
arpl
jge
scas
inc
dec
test
jne
int3
dec
sbb
cmp
dec
jge
leave
xor
or
test
sub
call
mov
pop
push
xchg
sub
pop
jb
pop
sub
xchg
mov
shrl
stos
mov
lret
es
adc
out
aaa
sbb
add
test
xorb
cmp
mov
dec
mov
lods
jnp
pop
jmp
cmp
popf
pop
mov
shr
push
mov
arpl
dec
leave
mov
int3
cwtl
jae
push
movsb
dec
jns
test
loopne
push
push
dec
inc
or
jb
push
push
sahf
xor
mov
jbe
subb
sahf
in
scas
sub
into
cmc
into
ss
popf
push
movsl
mov
inc
stos
lock
orb
sub
inc
mov
pop
mov
fnstenv
inc
inc
fs
push
out
cli
lahf
adc
stos
xchg
pop
adc
jae
cmp
inc
push
fldt
bound
ja
mov
push
nop
fstpl
data16
or
xor
in
popf
pop
fists
lods
hlt
mov
inc
adc
pusha
mov
cmp
push
int
mov
and
cs
mov
aas
jno
and
xor
in
mov
pop
cmpsb
or
jbe
sub
inc
iret
mov
aaa
loop
xchg
out
dec
push
movsl
lock
pop
iret
imul
adc
and
outsl
adc
xchg
mov
add
loop
orps
mov
xchg
popf
scas
aad
cltd
push
add
lods
push
lcall
popa
shlb
cli
dec
and
aad
sar
rolb
pop
mov
and
mov
jle,pt
pop
jg
roll
cmp
fxch
add
ljmp
adc
lret
pop
insb
dec
pop
loopne
jmp
test
ja
pop
inc
daa
inc
dec
and
and
jp
mov
sbb
and
push
aaa
inc
arpl
ficomps
popa
adcl
push
jno
push
jp
or
stos
or
cmp
xor
lahf
outsb
mov
clc
repnz
inc
jmp
dec
pop
das
inc
int3
in
testb
jb
jne
inc
ja
stc
cmpsb
fs
cmp
xor
and
rclb
jmp
arpl
or
push
push
jmp
mov
pop
or
popf
dec
mov
scas
repz
push
int3
or
xchg
stc
mov
add
xor
jno
mov
cmp
add
mov
andl
push
mov
push
sbb
xor
lret
xor
and
push
push
ja
sbb
jae
xchg
sub
dec
in
dec
jbe
pushf
divb
dec
sub
or
mov
sbb
pop
jno
and
pop
xor
pop
add
xchg
push
in
sahf
jo
dec
in
adc
inc
add
xor
fmulp
mov
fidivs
ret
fldl
aad
icebp
mov
out
jo
cld
rsqrtps
movsb
sbb
and
ficoml
fmull
lods
push
nop
cmp
lods
out
jo
shll
dec
mov
dec
lcall
adc
push
jbe
daa
pop
and
dec
hlt
mov
lahf
stos
sbb
idivb
mov
imul
add
fisubl
jb
mov
sub
push
jne
mov
xor
mov
adc
mov
and
sub
pop
loop
push
dec
sub
lret
popf
jle
lock
leave
fistpl
or
mov
test
imul
mov
divl
mov
sub
add
dec
sbb
sub
pop
sub
xlat
loop
pop
sub
dec
jl
xchg
hlt
add
and
dec
fxch
mov
nop
mov
ficompl
ret
negb
jb
cmpsb
inc
and
xchg
xchg
outsb
je
fsubrp
push
mov
mov
arpl
test
adc
lcall
mov
stos
pop
rcll
jle
fdivs
in
xlat
jmp
jmp
test
daa
xor
lret
lret
cmp
xchg
scas
or
lcall
sbb
jmp
jne
cmpsl
lahf
hlt
scas
test
popa
jnp
js
xor
sahf
add
clc
push
mov
pop
mov
xor
mov
gs
push
rdmsr
pop
sub
lret
dec
in
inc
jae
in
cmpsl
and
in
cmp
stos
lds
fcoml
jl
add
push
aas
hlt
mov
inc
fimuls
loopne
sub
gs
clc
pop
aad
inc
sbb
insl
dec
adc
mov
sub
mov
mov
mov
push
fnsave
jne
dec
push
cld
pop
sub
add
push
repz
popf
and
scas
jno
xchg
hlt
adc
es
adc
and
adc
cmpsb
push
leave
cld
push
jecxz
lcall
fidivl
int3
test
push
sub
mov
fsin
cmpsb
bswap
icebp
push
xor
push
and
repz
mov
mov
push
aad
cmp
adc
cmc
cs
pop
arpl
int3
dec
daa
inc
enter
lods
test
pop
ror
push
call
ja
and
push
cmp
dec
mov
cmc
pop
enter
pop
sbbl
jmp
fcoms
mov
pop
mov
xor
outsb
inc
fcomps
popa
les
fiaddl
jb
jns
lods
or
push
in
inc
fldcw
dec
es
dec
dec
pusha
je
lea
and
std
and
out
push
popf
cmp
mov
repnz
jo
add
push
inc
test
add
dec
push
dec
cs
add
pop
inc
add
inc
popa
mov
loope
add
push
mov
pop
lods
movsb
cmp
sub
sub
ret
pop
push
dec
push
lcall
sub
xchg
jp
or
add
xchg
cld
in
cmc
cmp
fimuls
scas
adc
jbe
shl
add
inc
jns
sbb
mov
jo
test
push
and
xchg
cmp
call
mov
cmp
pushf
cltd
mov
push
rcll
fsubl
mov
fsubr
sbb
mov
stc
inc
push
mov
int
push
jbe
mov
js
ret
push
and
aam
adc
or
mov
pop
pop
xchg
cmp
push
jl
pushf
cmp
rcrb
mov
mov
cmpsl
ret
inc
mov
sbb
std
jl
stos
xor
fsubl
pusha
jecxz
aam
and
call
or
sti
hlt
movsb
ja
arpl
xchg
adc
inc
mov
imul
shrb
das
mov
cmp
add
gs
push
push
dec
in
nop
mov
int3
adc
push
ljmp
lock
pusha
sub
in
data16
scas
ljmp
sbb
jne
adc
xchg
jmp
mul
lock
lahf
sbb
add
ljmp
xchg
shrl
mov
jp
jle
cld
push
test
fidivl
das
stos
or
xchg
imul
add
in
pop
adc
mov
inc
call
aam
loopne
sti
jnp
sub
in
sti
insl
in
xchg
imul
sbb
sbb
sub
push
sbb
out
fwait
test
lret
out
pop
lcall
lods
pop
pop
mov
inc
cmpsl
jmp
sti
inc
in
or
lods
cmp
jg
push
push
inc
mov
push
lods
cmovb
adc
ss
out
lock
sub
jle
lea
pop
adc
mov
push
das
out
add
cs
ss
cli
out
loope
cltd
jmp
cld
sbb
xchg
ljmp
js
jae
push
sub
sbbb
movsl
pop
ds
imul
movsb
cmp
inc
push
addr16
adc
xor
dec
or
pop
push
daa
mov
sar
pop
test
sbb
mov
cmp
aas
sub
jg
shll
xor
xchg
testl
sub
rclb
pop
inc
stc
int
cmp
lock
in
test
js
imul
fstl
fsubrl
fcomps
jg
mov
popa
fsubl
lds
mov
dec
dec
movsl
pushf
or
movsb
call
ja
clc
stc
sahf
jo
xchg
pop
mov
pop
movsl
fmul
pop
sti
outsl
fbld
fnsave
sub
or
cs
xchg
pusha
cmp
lods
insb
xlat
outsb
mov
sub
sbb
cmp
xchg
sub
shlb
fcompl
xchg
mov
fwait
call
adc
in
jns
call
out
add
fisubrl
pusha
mov
mov
in
out
add
cmp
stos
xchg
sahf
dec
scas
jecxz
jne
loope,pn
push
minps
outsl
jmp
call
xor
rorb
test
sbb
imul
pop
jge
es
add
xchg
push
and
mov
into
cmp
add
data16
push
negb
kmovb
nop
push
jo
sub
clc
push
lcall
cmp
stos
test
xchg
mov
pop
mov
push
dec
pop
ljmp
push
inc
adc
mov
inc
stc
mov
inc
cmpsl
inc
sub
push
stos
es
or
ljmp
inc
fmul
out
sub
aas
mov
xor
jae
pop
ret
xchg
outsb
lret
lods
sbb
imul
ja
pushf
cmp
aaa
pop
cmp
push
cli
lods
call
sbb
xor
xchg
mov
xchg
push
sub
inc
loopne
clc
push
movsl
xor
pop
hlt
mov
push
adc
xchg
shrb
jmp
inc
jecxz
inc
out
dec
repnz
test
pop
mov
jns
rclb
pop
out
dec
xor
push
movsl
mov
stos
jnp
loop
das
popf
xor
pop
call
mov
stos
jb
inc
push
cltd
daa
xor
arpl
push
sub
jp
adc
mov
sbb
cmp
add
cmp
xchg
in
inc
xchg
mov
and
mov
aam
xor
cmp
xchg
loopne
xlat
sub
icebp
in
das
pop
jno,pt
testl
jl
shlb
xlat
repz
cmp
insl
dec
sarl
popa
mov
mov
imul
cmpsl
addr16
into
fdivl
call
ljmp
pop
repz
mov
lods
cmp
leave
xchg
xor
cmp
xchg
inc
push
fidivrl
cmpsl
imul
aad
lods
pop
iret
insb
pop
aas
lds
insb
sbb
mov
mov
mov
mov
lock
pop
add
inc
mov
jne
lods
rclb
lds
sub
loope
add
xor
inc
popf
in
sub
test
fstpl
lret
or
push
dec
xor
and
mov
jmp
outsb
lret
lahf
lret
iret
or
leave
jo
pop
in
sub
les
or
stos
dec
and
rcrl
rcll
bound
movb
rclb
cltd
imul
jmp
out
xchg
jecxz
aad
xor
imul
lock
gs
lcall
pop
cmp
push
test
test
jmp
cmc
dec
xchg
pop
fscale
insl
cmp
push
mov
fwait
je
icebp
mov
inc
adc
lock
and
popa
push
daa
imul
arpl
pusha
cmp
aad
rol
cmp
jo
movsb
sbb
adc
pop
lret
adc
mov
push
mov
loopne,pn
add
stos
out
popa
adc
lods
pushf
fsubs
dec
in
cmpsb
pop
les
ret
dec
pop
loopne
mov
daa
adc
mov
push
mov
jno
dec
mov
insl
adc
inc
aaa
add
push
je
adc
mov
pop
andb
cwtl
mov
hlt
jb
xor
imul
outsb
adc
out
mov
aaa
imul
xor
ret
cmc
bsf
icebp
scas
test
xchg
popf
dec
hlt
into
cld
fmull
push
cld
xor
mov
xlat
pusha
lds
pop
out
xor
push
popf
cmc
or
cmp
push
in
xor
shlb
mov
jnp
jge
inc
scas
adc
or
sti
inc
in
ljmp
pop
mov
push
cmp
mov
xchg
mov
push
js
scas
std
xchg
div
xchg
sub
xchg
mov
push
sbb
cvttps2pi
repnz
cmpl
lret
cmpsl
test
fsts
inc
loop
imul
aas
stos
xor
movsl
out
cmp
pop
ds
mov
inc
jg
add
push
pop
dec
je
push
jne
aas
sbb
push
cwtl
into
test
es
fcoml
sub
jae
je
push
test
push
adc
cltd
jge
lret
push
add
fistpl
lahf
es
ret
in
test
mov
ds
stos
stc
rcrb
ret
jge
jo
ret
sub
xor
dec
cld
cmovle
dec
xor
push
push
fistpl
lock
lock
and
stc
fldl
les
arpl
imul
or
jmp
jo
cmp
das
mov
jo
fisubl
mov
stos
mov
fidivl
or
mov
xchg
jne
sub
sbb
xlat
cwtl
fidivs
lods
inc
jl
aas
push
dec
aas
inc
aad
push
pop
mov
mov
mull
adc
xor
call
mov
aam
mov
sbb
or
fcmove
shlb
add
or
js
dec
loopne
mov
ret
ret
xchg
sub
inc
jmp
loop
pop
notb
mov
jle
push
test
mov
and
jnp
lea
sub
iret
xor
xor
in
push
arpl
push
sub
xor
push
sbb
addr16
and
add
sahf
mov
adc
in
mov
mov
adc
leave
in
icebp
pusha
mov
push
fldt
add
dec
mov
cmp
loop
repz
sbb
int
movsl
jecxz
leave
ret
jp
fwait
and
lea
int3
mov
jns
fs
daa
adc
ljmp
xor
test
insl
sbb
pop
push
dec
add
loopne
loop
jmp
mov
sti
jle
cmp
lods
cmpsl
pop
add
gs
dec
pop
mov
scas
cmpsb
imul
outsl
shrb
test
dec
jmp
ds
dec
cmp
inc
adc
sub
sbb
aas
lret
js
jmp
push
xor
pop
test
lret
lods
jmp
popa
insb
mov
cmp
stos
inc
jae
repnz
adc
aaa
dec
mov
inc
push
sub
mov
fistps
arpl
sbb
dec
adc
mov
cltd
std
sbb
hlt
pushf
daa
shlb
aad
mov
pop
cmp
mov
aam
stc
sub
out
test
xchg
jnp
jmp
sbb
fwait
or
mov
movsl
jl
sbb
xchg
sbb
xor
cltd
jmp
and
push
outsb
or
mov
popf
xor
jle
sahf
call
test
repz
fstps
das
mov
fs
sbb
movsb
push
dec
popa
xchg
daa
leave
add
outsl
int
into
push
das
add
lods
pop
sub
pop
dec
adc
sbb
out
sarb
sbb
test
mov
std
push
movsb
or
sarl
enter
data16
jnp
cmpsl
lods
sarl
jns
pop
ret
negl
ret
fdivrl
scas
es
jno
dec
arpl
sub
imul
xchg
fnsave
adcl
jecxz
push
fsub
mulb
int
mov
or
and
jle
mov
fistpll
subb
xlat
es
cmp
mov
es
idivb
dec
jmp
popf
mov
popa
sbb
cltd
mov
lods
repz
in
or
int3
idivb
and
aas
sahf
push
outsl
rcrb
mov
lock
and
cmp
sub
aam
lahf
mov
push
sbb
fldl
inc
push
cmpsl
imul
sub
xor
cmc
in
andl
insb
addl
or
mov
daa
mov
pop
mov
fsub
jns
sahf
stos
jge
cmp
inc
sub
orl
mov
fcom
test
outsb
ljmp
jge
dec
icebp
mov
sbbb
adc
add
jo
fsubl
pop
int
xchg
dec
das
jg
mov
idivl
jge
jmp
adcb
adc
pop
dec
add
jo
mov
xchg
rolb
fiaddl
xchg
sub
push
mov
dec
and
push
adc
add
mov
mov
mov
or
addb
mov
jl
pop
sub
pop
inc
jns
ss
stos
sub
fwait
xchg
xchg
inc
sbb
mov
sahf
in
inc
inc
or
inc
inc
iret
xor
loopne
adcl
lret
or
mov
xchg
sub
lret
bound
push
and
or
je
or
inc
xchg
es
dec
aaa
mov
lret
daa
loopne
mov
enter
jne
sub
jns
in
xor
inc
out
inc
cmp
stc
lock
lods
dec
or
sbb
outsl
push
pop
outsl
inc
sbb
inc
data16
mov
mov
sub
rcr
lahf
cmc
add
jb
and
cmp
inc
pusha
or
inc
dec
xor
push
rcrb
xor
mov
inc
les
sub
cmc
call
push
xchg
xchg
sti
icebp
sahf
xor
cld
cmpsl
xor
pop
push
jnp
test
sbb
and
push
mov
mov
xchg
insb
mov
mov
in
in
mov
mov
dec
or
adc
stos
xchg
out
into
stc
mov
lahf
push
arpl
hlt
jbe
mov
cmp
xchg
add
loope
xchg
test
fnstenv
push
outsb
mov
add
mov
movsl
jb
lods
cmp
mov
out
andb
repz
mov
in
push
cltd
mov
bound
lcall
sub
jle
pop
jge
inc
xor
add
cld
into
pop
and
test
mov
pop
cli
cmp
dec
popf
cmc
inc
and
cli
dec
out
ret
imul
out
stos
add
sbb
sbb
pop
mov
outsb
call
dec
fiaddl
iret
jno
push
push
sbb
xor
xchg
and
jl
mov
out
jo
cmp
nop
sbb
pop
inc
in
stos
adc
or
movsl
cmp
fstps
fisttpl
rcl
stos
or
in
jb
mov
mulb
daa
push
xor
lret
bound
out
sti
push
aas
dec
insb
mov
je
imul
loope
push
mov
push
jne
cmpb
lods
add
jle
imul
les
mov
in
inc
lds
imul
pop
cmp
cmp
in
dec
in
push
mov
pushf
mov
inc
popf
dec
clc
inc
pusha
add
and
add
aaa
pusha
mov
and
gs
or
in
pop
shlb
lret
push
lock
xor
into
mov
ds
xchg
adc
int
cwtl
xchg
insl
mov
dec
mov
hlt
mov
imul
pushf
cmc
jmp
jb
mov
add
mov
ss
fwait
jge
test
and
imul
cmp
push
and
push
rolb
jge
mov
lahf
arpl
sbb
push
in
test
stc
jbe
sub
or
out
enter
dec
daa
mov
sbb
rcrb
or
jnp
mov
fadd
cmp
mov
imul
cwtl
push
inc
dec
test
bound
test
aas
shlb
push
loop
push
pushf
xor
mov
sub
flds
mov
jne
jecxz
xchg
lret
mov
mov
outsb
in
das
orl
scas
popa
push
push
jno
push
scas
inc
inc
enter
insl
xchg
jge
cmp
bound
hlt
imul
pop
cmp
lods
mov
ret
pop
lahf
xchg
sub
or
pusha
mov
outsl
jmp
addl
pusha
ffreep
push
movsb
fdivrs
fdivrs
or
adcb
les
jb
aas
pop
mov
dec
dec
cmp
mov
mov
mov
push
adc
mov
dec
js
test
inc
ficoml
or
sbb
jo
add
fiaddl
jg
sahf
popa
lds
xchg
jge
in
aaa
push
cld
sub
mov
pop
mov
sarl
sbb
adc
aam
std
insl
cmpsl
sti
pop
mov
rcl
cmpsl
call
mov
lret
xor
adc
add
mov
ss
in
cmp
mov
repnz
xchg
daa
sar
popl
cmpsl
rcrl
mov
sbb
lea
loop
aas
into
insl
add
dec
sub
inc
out
les
stos
cmpsb
cmp
jo
call
cld
addr16
adc
bound
out
push
and
adc
and
pop
fistps
ret
pop
sbb
and
xor
addr16
rcl
mov
out
fbstp
push
in
iret
push
pop
dec
imul
ds
mul
sbb
movsl
or
in
iret
scas
push
cmp
scas
cmp
pop
jp
jne
aas
outsl
aaa
or
push
push
stos
outsb
fwait
shll
stc
mov
fidivrl
dec
jge
push
mov
addr16
lock
test
jns
test
or
aas
notl
sub
sub
xchg
jmp
dec
mov
mov
andl
aaa
fstl
push
jmp
add
int
xchg
stos
lea
aad
stos
test
pop
sti
inc
mov
jmp
in
inc
mov
mov
insl
jnp
gs
dec
xchg
das
add
xor
js
mov
jecxz
shll
mov
cmp
outsb
cmp
sbb
inc
into
scas
dec
sbb
shrb
mul
xchg
add
imul
lods
dec
scas
mov
arpl
add
dec
dec
test
fdivrs
sub
enter
fdivs
xchg
or
mov
mov
xchg
fstpl
jnp
gs
push
fbstp
add
add
mov
mov
out
popf
or
sbb
lds
ljmp
and
adc
out
sbb
adc
push
divb
cmp
aad
xor
inc
pop
xor
sbb
mov
aam
in
fimuls
in
jmp
sub
push
or
stos
cmp
add
xchg
mov
inc
ret
repnz
jp
ja
fwait
ja
jg
movsb
rclb
sbb
movsl
dec
cmc
in
mov
dec
pop
std
mov
shrl
mov
add
clc
dec
sbbb
adc
test
lret
test
in
and
aad
fldl
add
sbb
stos
push
in
push
adc
je
pop
into
xchg
jmp
adc
jae
popa
xchg
adc
xchg
divb
mov
or
cs
stc
push
icebp
or
pusha
cld
outsl
cli
movsb
ret
sbbl
inc
mov
cmp
rorl
imul
in
inc
pop
ret
ljmp
sbb
icebp
jle
inc
testb
lcall
and
rol
and
in
xor
loopne
cli
push
sbb
lcall
int
xor
jp
notb
les
inc
dec
outsl
out
cmp
add
fdivrs
sbb
outsl
aaa
pop
mov
push
daa
rclb
fidivs
mov
arpl
mov
testb
rclb
pop
xor
cmp
in
mov
sub
xchg
call
fwait
mov
sbb
cmc
fsubr
or
call
push
inc
sahf
icebp
clc
ja
dec
cli
xor
jo
adc
xor
mov
jo
cmp
xchg
mov
ds
outsb
out
test
pop
inc
testb
cmp
insb
mov
cmp
ret
sbb
repz
loop
sbb
out
jle
sub
push
lea
or
movzbl
mov
outsb
ret
outsl
test
mov
daa
jecxz
adc
std
xchg
or
pop
mov
sahf
xor
mov
sub
test
sti
in
push
adc
cpuid
cltd
lock
jmp
xchg
mov
sahf
jmp
push
shufps
xor
shrb
push
pusha
jl
or
or
adc
push
test
add
cmc
mov
popa
jnp
push
add
sub
inc
xchg
push
mov
daa
cmpsb
and
int
mov
xchg
mov
lea
adc
imul
sbb
into
fisttpl
adcb
xchg
outsl
mov
and
pop
xor
push
pop
add
sub
dec
stos
mov
cmp
pop
mov
js
adc
hlt
sbb
fwait
out
sub
xchg
ret
and
mov
xor
xchg
data16
add
data16
dec
add
test
call
jns
ljmp
inc
push
je
sbb
sub
sbb
or
iret
into
ljmp
mov
push
cmpsb
test
mov
mov
lock
cmp
sbb
icebp
insb
mov
test
arpl
mov
or
xchg
out
mov
or
in
ss
in
inc
fnstcw
sbb
das
arpl
nop
cs
and
mov
mov
outsl
and
pop
movsl
xchg
aas
sarl
pop
mov
insl
jmp
push
imul
push
sahf
ljmp
mov
push
int3
jecxz
cmc
fwait
ss
in
jl
cmpl
sbb
cmpsl
dec
sbb
add
out
stos
hlt
imul
xchg
xchg
sub
add
test
and
lret
lea
ja
mov
cld
adc
jle
or
add
stos
cltd
cmc
ret
inc
stos
in
cwtl
aas
jae
es
lcall
and
setp
test
xchg
scas
dec
inc
adc
or
add
xor
xor
pop
aad
aam
scas
mov
les
scas
repz
and
test
orb
ljmp
pop
xor
cltd
nop
sub
push
lret
cmp
icebp
jo
es
add
inc
pop
jo
or
cmc
push
test
int3
jbe
aaa
ficoml
lahf
mov
and
shrd
std
sbb
add
mov
ja
adc
mov
jnp
icebp
sbb
bound
push
cld
push
mov
xchg
out
xlat
loope
imul
and
jno
pop
out
xchg
jb
popf
and
push
add
std
jmp
test
ret
scas
sub
shr
pop
mov
pop
ja
inc
sub
cmc
mov
xor
xchg
and
pop
ljmp
stos
ret
xor
mov
push
rcl
nop
or
push
ljmp
inc
or
and
sbbl
lea
pop
cmc
nop
pushf
or
mov
sarl
in
ficompl
or
je
aad
imul
jg
lds
pop
clc
dec
inc
dec
aaa
jle
jl
mov
into
loop
in
sub
subl
mov
divl
mov
push
xor
pop
lods
dec
mov
lods
in
sarb
cmp
js
sbb
cmp
pop
je
jno
xchg
jno
and
jbe
outsl
jge
popl
into
repz
cmp
es
shll
test
mov
shl
jb
sbb
xor
pop
xor
add
daa
cmc
mov
outsb
adc
xor
jae
fmulp
mov
data16
int3
in
mov
dec
std
jge
outsl
daa
lds
cmpsb
movsb
mov
fwait
adc
in
mov
mov
pop
test
mov
cli
enter
pop
fs
mov
adc
cmp
cmp
scas
lods
sahf
imul
jbe
sub
sbb
clc
lods
rol
in
xor
or
pop
jb
std
or
shl
shll
mov
in
mov
xchg
sahf
cmp
into
adc
and
sbb
dec
dec
fidivrs
out
jnp
nop
roll
fld
rcrb
mov
add
push
inc
push
pusha
pop
jecxz
push
shll
repz
cmp
sbb
les
inc
out
cmc
jl
cmp
cmp
pop
pop
mov
or
mov
push
and
mov
ds
mov
push
loopne
mov
shl
sub
inc
xchg
cli
pushf
push
xlat
jmp
fnstenv
je
push
adc
jl
mov
fcmovne
xchg
mov
sub
mov
ds
adc
pop
ja
or
xchg
mov
pusha
mulb
cmpsb
cmp
xlat
lods
rcrb
push
sarb
mov
scas
push
inc
sbb
jb
ds
fucomip
fisubrs
sub
pop
test
imul
fiadds
jnp
sub
dec
stos
jmp
movsl
icebp
out
rclb
test
movsb
test
ret
mov
push
cmpsl
hlt
fdivl
mov
and
push
mov
imul
sbb
rcll
mov
adcb
push
jb
mov
xchg
les
les
mov
xchg
out
bound
mov
add
mov
aam
adcl
xor
jmp
dec
push
fxtract
mov
test
jmp
enter
xchg
add
enter
sbbl
sbb
cmpsb
mov
jg
mov
or
dec
sub
xor
cs
push
sbb
sub
rcll
jno
push
rcl
push
dec
sbb
lea
inc
imul
enter
lea
js
push
inc
lahf
js
int
push
sub
imul
pop
fsts
lods
xor
mov
xor
jne
sar
xchg
mov
dec
xchg
insb
js
jge
cwtl
sahf
fcmovb
push
or
cmpsl
and
or
dec
or
push
popf
outsl
mov
ffreep
mov
add
fs
xchg
mov
xchg
addr16
popf
andl
add
cld
out
jno
dec
lock
mov
ja
test
lahf
call
inc
push
mov
in
lock
in
ds
stc
add
push
mov
out
cmp
enter
loope
into
es
jne
outsb
aam
dec
test
orb
or
inc
je
inc
adc
and
jno
icebp
in
dec
test
dec
rcrl
pop
mov
popa
mov
dec
lock
test
scas
fwait
sarb
fsts
outsl
dec
iret
shll
cmpsb
pop
dec
bound
add
idivb
dec
push
clc
xchg
lahf
sbb
rolb
lds
cmp
daa
push
push
std
inc
sub
call
xchg
xor
fdivrl
pop
mov
push
cs
push
add
dec
push
sub
shll
jbe
inc
js
movsb
iret
cs
jae
lods
lret
mov
ljmp
push
mov
push
mov
dec
xchg
and
push
lods
push
cmp
jge
dec
ror
push
inc
jmp
iret
jno
lcall
int3
and
lods
fidivrl
daa
mov
ret
insb
inc
inc
push
mov
imul
mov
jne
in
loop
test
cmp
adc
and
in
rcr
push
pusha
jns
cmp
sarl
std
mov
xchg
sub
cmp
ret
ret
xor
push
push
push
xchg
adc
repz
cmc
out
ljmp
xor
lret
mov
arpl
push
outsb
sbb
int
notb
xor
shll
movsb
push
sbb
xchg
daa
inc
inc
and
popf
cmpsl
test
jne
mov
jg
push
icebp
mov
sahf
jg
lcall
push
adc
fimull
push
pop
cmc
gs
inc
out
enter
cmp
jo
add
jge,pt
and
mov
jge
pushf
jmp
pusha
aaa
test
fs
and
inc
out
xchg
out
sbb
xchg
add
rol
imul
inc
int
mov
ss
mov
xor
push
mov
xchg
negb
mov
in
or
xchg
sub
flds
filds
in
std
lods
addr16
mov
fs
out
sahf
popa
xchg
jp
mov
rol
mov
out
ret
adc
cwtl
mov
dec
cltd
pusha
imul
sub
sti
pop
sub
js
jl
loop
or
mov
inc
int
sbbl
fcoml
clc
orb
roll
pop
dec
dec
lods
inc
mov
cmc
in
cmp
push
das
hlt
mov
mov
push
xor
jne
pop
js
pop
insl
push
adc
mov
xchg
mov
mov
jl
pop
mov
daa
ret
mov
and
or
fwait
std
jg
xor
adc
dec
test
mov
das
dec
inc
push
shll
push
ret
adc
loopne
data16
cmpsl
sub
cs
mov
xchg
sbb
test
pop
pop
subl
jg
repnz
pop
cmp
push
lahf
rclb
mov
daa
pop
enter
push
pop
mov
jecxz
mov
mov
ljmp
pop
push
out
or
adc
fs
xchg
pusha
jae
rorl
mov
data16
cmpsb
push
fwait
xor
push
mov
mov
popa
out
xchg
sbbl
pop
jns
or
fcomip
outsb
je
cwtl
ret
jnp
pop
repnz
cltd
sub
adc
stc
inc
jns
or
lcall
sti
pop
shll
scas
push
add
in
mov
sub
dec
pop
mov
or
add
sub
aad
iret
out
in
and
mov
xor
and
mov
mov
cmp
sti
sbb
sub
fwait
xor
invd
mov
jle
jl
cs
lods
xor
lahf
adc
xor
imul
fstpl
fildl
pop
xor
cmp
xor
mov
mov
ja
movb
popa
stos
cmp
movsb
inc
cmp
xchg
xor
lods
and
xor
shll
sbb
pop
xor
rcrl
push
ds
insb
mov
pop
jbe
mov
ds
push
fldl
jle
inc
daa
xchg
xor
mov
ljmp
call
push
jg
mov
xor
adc
xor
jbe
mov
xor
push
xchg
sub
cwtl
jecxz
cmpsl
adc
out
mov
push
pop
cmp
loope
inc
out
dec
mov
int
sub
std
arpl
inc
cmpsl
call
push
loopne
int3
div
push
lods
sub
sbb
xor
popa
movsl
xchg
xchg
xchg
dec
mov
cs
bound
xor
sbbl
adc
pop
inc
shl
mov
cmpl
xlat
or
dec
loope
push
pop
cmp
pop
ds
mov
pushf
xchg
lods
cwtl
ljmp
pushf
xchg
mov
lods
call
ds
adc
ja
or
out
pop
popf
jp
pop
in
loopne
add
fistps
mov
out
cli
arpl
addr16
pop
scas
or
ret
mov
add
jae
xchg
push
add
test
and
mov
or
int
sbb
sbb
test
mov
imul
inc
push
mov
sbbl
sarl
pop
or
or
bound
push
jne
mov
loope
push
mov
mov
adc
leave
flds
cs
sub
lea
movsl
dec
mulb
int3
xor
outsl
bound
mov
pushf
shl
int
cmp
int
pushf
ja
jo
imul
mov
mov
dec
fimull
rep
stc
sub
push
xor
inc
repz
outsl
xor
mov
fadd
mov
push
push
xchg
xor
in
mov
hlt
inc
cltd
fs
repz
mov
test
mov
das
das
ret
cmp
jl
dec
dec
xlat
mov
sti
xor
pop
and
lods
mov
inc
xor
mov
dec
mov
imul
jae
scas
add
sub
jae
dec
negl
mov
xchg
jb
cmpsl
cmp
or
lret
mov
cmp
sub
cmp
outsl
adc
jae
add
push
in
push
leave
sub
subb
inc
adc
jbe
cmp
mov
movsb
mov
test
mov
jns
jg
cmc
fmull
or
inc
push
insb
scas
sbb
dec
adc
xchg
push
add
mov
movsb
fnstcw
fcmovnbe
mov
popf
cmc
rcrb
bound
cmp
push
add
sbb
stc
jae
lea
mov
js
not
mov
rorl
sbbb
push
xor
pop
cli
repz
and
or
out
jmp
add
mov
jb
les
ret
scas
inc
outsb
ret
xor
dec
or
xor
out
or
scas
scas
sub
ja
mov
cli
shll
pusha
add
les
ficoms
push
cmpsb
repz
pop
mov
js
jno
mov
mov
mov
std
aam
sbb
inc
mov
sbb
or
mov
andb
loope
cmpb
push
push
xor
dec
pop
negb
jnp
out
mov
mov
or
xlat
xorb
test
pushf
xchg
mov
jae
movsb
lea
mov
adcl
push
cmp
add
lcall
mov
daa
mov
push
jno
mov
push
mov
ds
or
dec
fmull
ret
adc
dec
popf
repnz
push
pushf
out
xchg
mov
xchg
icebp
ss
loopne
push
or
fcompl
pushf
pop
dec
popa
dec
mov
adc
ss
maxps
xchg
xor
or
jge
adc
mov
xor
insl
inc
mov
nop
cld
aad
gs
sbb
ret
jnp
shll
mov
mov
sub
int3
mov
pop
mov
mov
push
push
inc
xchg
jnp
adc
cltd
inc
adc
xor
jg
lea
xchg
cmp
sub
pusha
jle
or
sbbl
inc
in
push
cs
and
sub
push
bound
mov
int3
or
pop
mov
mov
sti
into
pop
add
lret
mov
test
adc
outsl
xlat
fucom
mov
dec
nop
gs
mov
xor
xor
jge
popa
arpl
pop
loopne
loop
cmp
pop
sbbb
and
cld
out
nop
sahf
int3
in
pop
jns
cmp
movsl
std
mov
int3
js
int
adc
daa
dec
scas
or
stos
add
sub
push
enter
inc
dec
inc
and
cltd
ljmp
push
push
movl
mov
dec
fcmove
push
sub
fnstcw
adc
xchg
fldl
xor
popf
loope
in
les
mov
adc
pop
inc
add
cmp
stos
jbe
pop
push
cmp
sti
movsl
pop
rcl
test
push
out
lods
popa
imul
leave
lock
sbbl
pop
int
adc
jge
aas
dec
fsts
jge
jns
or
or
xorl
in
jb
int
mov
ss
dec
mov
nop
jae
outsb
aaa
or
iret
fisubs
or
jns
repz
lea
push
and
cmp
inc
cmp
js
sub
cli
insl
jl
jmp
ja
shll
ja
sti
test
icebp
mov
pop
mov
scas
fstpl
fcomps
mov
in
addl
xor
pop
test
sub
jge
dec
cmp
outsl
pop
outsl
sub
imul
cmc
mov
push
jns
mov
inc
xor
or
push
cli
cmpsb
outsb
push
imul
jl
sbb
xchg
jg
in
out
xchg
push
jmp
sti
xor
xchg
scas
lock
add
mov
lods
inc
test
dec
pop
jecxz
cld
push
stos
call
loope
into
jns,pn
pop
fmull
insb
mov
test
js
gs
inc
in
stos
xchg
pop
sbb
pusha
jne
sbb
fcompl
rolb
mov
jae
dec
xchg
cmpsl
jp
xchg
push
mov
add
test
and
jge
mov
ljmp
lock
fwait
mov
xor
jne
test
add
loope
or
movsl
lea
inc
jo
ficomps
movsb
daa
repz
dec
dec
lcall
not
mov
sub
ret
loop
inc
xchg
in
clc
cltd
inc
mov
enter
pushf
jne
into
push
mov
aaa
call
stc
xchg
push
in
sbb
outsb
outsb
aam
ja
xor
subl
mov
frstor
rorb
push
sbb
mov
les
das
rcr
ret
or
imul
pop
icebp
xchg
xchg
das
mov
jbe
test
xor
imul
sbb
stos
mov
add
sti
jns
push
mov
push
ja
test
rol
cmpsb
popf
stc
mov
adc
cmpsl
cmpb
push
sti
js
mov
loop
dec
sbb
test
jmp
or
xchg
loope
or
ret
sub
andb
cmpsb
dec
les
adc
daa
dec
aam
pop
or
mov
into
xor
es
sbb
bound
xor
mov
inc
sbb
push
or
inc
nop
push
scas
xor
inc
push
out
loopne
jnp
sub
aas
loope
lret
outsb
inc
jae
rorl
stc
outsb
stos
dec
push
pusha
dec
cltd
lock
xchg
mov
loopne
inc
sub
xor
outsb
sub
shl
ja
loop
adc
ret
and
adc
scas
outsb
repnz
sbb
fidivs
imul
xor
mov
xchg
push
mov
out
or
and
in
mov
ss
push
lcall
push
sbb
cs
and
add
mov
pusha
xor
sub
cmp
cmp
add
test
push
or
mov
shl
out
xlat
in
andb
pop
sbb
push
aad
ficomps
fsubrl
mov
jmp
jle
and
mov
sbb
aaa
mov
cltd
shll
cmp
popf
je
jg
adc
mov
ljmp
push
in
push
jae
mov
xchg
ret
jge
addr16
adc
jl
enter
out
ljmp
imul
std
std
aas
loopne
stos
es
and
mov
mov
inc
mov
nop
or
xchg
xchg
cltd
out
inc
mov
sbb
inc
pop
inc
mov
and
in
nop
mov
fsubrs
xlat
je
dec
ja
mov
sub
xchg
int3
add
or
stc
xor
pop
cwtl
pusha
cmp
jb
iret
mov
xor
mov
hlt
sub
xor
and
add
inc
js
and
add
mov
loop
mov
arpl
push
movsl
imul
cmpsb
mov
cmp
pop
les
cmp
sub
push
popa
dec
adc
popf
cwtl
decb
fsub
popa
push
mov
in
rcll
sub
push
fcom
add
mov
notb
jno
dec
cmpsl
pop
mov
pop
popa
xchg
pop
mov
das
arpl
or
hlt
adc
pop
push
lahf
push
adc
int3
inc
mov
jns
or
sbb
mov
outsl
roll
add
xchg
les
sbb
jno
adc
or
pop
bound
xor
jb
scas
xchg
ds
adcb
xchg
popa
mov
cmp
cwtl
test
jb
lock
mov
inc
inc
aas
adc
addl
icebp
xchg
sbbl
arpl
xor
repz
push
loopne
fwait
jmp
movsb
mov
imul
jmp
aaa
push
or
inc
add
orl
sub
sub
add
lods
insl
add
xor
shrl
gs
lcall
xchg
adc
and
inc
orl
andl
adc
jp
mov
push
inc
lret
cmp
ds
and
dec
sbb
and
mov
xor
jae
or
stos
adc
bound
xorl
xchg
rorl
dec
cwtl
pop
sub
or
out
fs
pop
add
imul
icebp
cmpsb
dec
fstps
leave
and
call
lock
into
shlb
outsl
push
dec
adc
mov
mov
adc
mov
pop
sbbb
bound
mov
fcoms
mov
mov
jecxz
and
push
adc
leave
mov
mov
popa
lock
ret
and
xor
jle
xchg
es
adc
push
sub
mov
xor
ret
mov
add
xchg
repz
and
lret
inc
xchg
jecxz
push
mov
das
lret
mov
mov
sub
xchg
scas
pusha
out
in
aaa
cltd
pop
repnz
xchg
pop
push
or
inc
imul
into
mov
arpl
mov
or
sub
frstor
and
loop
jnp
push
mov
je
int3
push
add
std
or
shll
repz
fucomi
test
add
imul
mov
ficoml
fildl
inc
sub
in
lods
adc
cmpsl
call
stos
jmp
mov
xor
dec
icebp
or
into
in
and
push
call
lea
mov
imul
in
into
push
adc
inc
push
push
scas
rcrb
ss
inc
mov
rcll
mov
arpl
cmp
sahf
loopne
int
lods
test
pop
ss
lea
fs
arpl
lret
icebp
adc
sbbb
jmp
mov
imull
xor
into
xchg
arpl
push
fwait
fs
mov
leave
mov
mov
sub
add
popl
xchg
xor
jb
mov
pop
hlt
pop
xchg
dec
dec
mov
bound
push
test
sbb
lahf
sub
add
loope
in
fwait
or
pusha
push
rol
fdivl
ret
outsb
sub
sbb
popf
cli
adc
test
dec
mov
push
in
xchg
aaa
dec
mov
call
push
ljmp
in
dec
pop
cli
shll
lcall
out
fdivs
lock
lods
jbe
and
imul
daa
data16
push
xchg
mov
call
in
jg
or
dec
aaa
fisttpll
pushf
das
xchg
cs
push
repnz
sti
int
movsb
in
ja
test
mov
or
mov
clc
popf
cld
cmpsb
inc
sub
xchg
mov
movsb
fsubl
es
xchg
add
cmpsl
sbb
fsubl
push
inc
js
inc
mov
mov
getsec
mov
stc
pop
sahf
mov
bound
add
mov
xor
push
pop
add
int
test
jg
ret
push
cmp
dec
insl
and
adc
arpl
int3
insb
mov
enter
or
or
imul
push
mov
es
call
lds
ljmp
sbb
into
jne
dec
mov
outsl
sbb
lds
imul
sbb
dec
mov
aam
repnz
shll
test
fsubr
sub
enter
xchg
pop
sbb
xchg
push
mov
sarl
mov
push
pop
mov
addr16
mov
out
sahf
fs
or
std
mov
cld
cmp
arpl
in
push
aaa
dec
and
jb
popf
mov
push
call
inc
dec
xchg
push
jl
mov
jb
xchg
jno
xchg
fcompl
add
lds
mov
stos
cmp
fadds
mov
mov
sub
inc
dec
divb
xchg
jl
out
mov
cltd
cmp
pop
int
test
jbe
add
sbb
or
out
icebp
out
add
push
rorl
jae
xchg
aas
push
jns
adc
and
or
push
and
ja
cltd
jns
lahf
cmp
bound
scas
hlt
mov
jns
in
std
sub
xor
adc
scas
in
stos
jnp
xchg
scas
imul
jmp
test
lret
jns
ja
jle
cld
lret
dec
mov
inc
outsb
aam
push
add
xlat
jbe
je
test
stos
sti
enter
push
xchg
xor
adc
inc
lods
mov
fs
xor
lods
jmp
or
call
fldenv
mov
ljmp
push
stc
popf
sub
movsl
lds
add
cmpsl
sub
pop
sub
mov
pop
insb
cmp
testl
jle
scas
call
dec
data16
xor
xchg
icebp
inc
fsubl
mov
fbstp
sbb
dec
add
and
cwtl
xor
aad
test
sarl
add
dec
push
fistps
sub
fcompl
outsb
loopne
xchg
mov
xchg
xor
sub
jp
add
push
sbbl
repz
xchg
and
iret
dec
mov
mov
xor
fdiv
jecxz
mov
xor
movsl
cmp
mov
jae
inc
daa
mov
or
mov
clc
inc
xlat
sub
mov
mov
mov
pop
faddp
rclb
imul
add
jecxz
in
ja
lods
push
js
mov
inc
jle
push
mov
mov
jecxz
aaa
fcmovb
in
stos
mov
xlat
xchg
pusha
das
cmp
lahf
push
dec
and
test
sub
dec
and
mov
inc
xchg
mov
add
fildll
adc
inc
mov
daa
lret
mov
mov
mov
es
cmp
push
in
add
cli
dec
andl
add
push
test
jg
pop
push
xor
dec
push
jae
xchg
lds
push
xchg
mov
jo
shll
pop
mov
out
lcall
mov
push
cmp
and
cmp
add
bound
xor
pop
outsl
push
dec
add
sub
out
and
or
jmp
ret
sub
sbb
sub
iret
scas
inc
add
and
dec
lods
mov
cmpb
push
mov
xchg
and
or
dec
cmp
xchg
pop
sbb
sti
lret
fisttps
push
int
and
lods
pop
cmp
pop
mov
xor
sub
jle
cmp
xchg
stos
cmpsl
fsubl
lds
fdivs
mov
pop
cmp
xchg
fld
inc
cmpl
xor
mov
ds
push
ss
sbb
ja
mov
clc
insl
cli
sti
mov
mov
test
push
lcall
in
stos
mov
pop
pushf
or
dec
in
cmp
mov
pop
je
fsts
mov
mov
aad
shlb
out
add
push
out
mov
inc
pop
dec
cmc
jge
mov
inc
push
loope
push
sub
stc
adc
bound
xchg
xchg
mov
mov
mov
scas
adc
sti
es
notl
add
jge
fnstsw
call
ja
or
movsb
syscall
jp
sub
daa
xchg
jp
cmp
stos
sub
orb
lret
idiv
push
daa
rcr
jne
out
dec
mov
and
negb
and
test
pop
hlt
mov
jb
mov
push
sahf
push
add
dec
jle
fldl
sbb
xchg
pop
xchg
lret
push
jp
and
adc
mov
into
call
mov
sub
sub
pop
cmp
add
xchg
call
mov
outsb
popa
add
mov
imul
jle
add
xor
test
cmpsl
aaa
out
xchg
push
dec
inc
pop
out
mov
inc
fisubl
push
clc
rol
sbb
fcom
movsb
mov
push
pause
pop
mov
mov
int3
rol
fs
jo
or
adc
xchg
shlb
dec
lea
jnp
ret
jo
jae
shll
add
push
cmp
movl
shr
add
out
cmp
pop
hlt
dec
or
xchg
sbb
add
rclb
repz
mov
les
inc
into
lahf
jae
mov
mov
lret
sub
push
cmp
jo
rorl
mov
je
jecxz
push
imul
fs
cmp
pop
or
icebp
xor
cmp
mov
jp
sbb
arpl
negl
je
adc
mov
add
clc
jnp
les
push
movsl
out
pop
outsl
enter
mov
dec
stos
inc
pop
leave
nop
inc
adc
mov
sbb
popa
adc
push
inc
mov
fwait
jecxz
test
cmp
mov
out
int3
movsl
inc
clc
cmpsl
dec
cmp
sub
cmpsl
dec
fdiv
jbe
shlb
push
aad
shlb
adcb
in
or
mov
inc
push
js
outsb
mov
lret
addr16
outsb
adc
and
stos
rcrl
imul
pop
or
mov
leave
lods
mov
ds
test
jnp
mov
lods
ret
jnp
pop
mov
fldpi
icebp
out
add
aaa
popa
jns
mov
sub
pop
fdivp
cmpsl
sti
sbb
ljmp
mov
cli
add
int3
jno
sbb
addl
orb
dec
pop
mov
mov
xor
add
xchg
xor
pop
add
cmp
xor
mov
movsl
push
push
push
add
fnstsw
movsl
repnz
xchg
mov
gs
aas
lret
scas
jecxz
adcl
enter
insb
sub
or
add
mov
sbb
xor
sbb
xchg
and
or
test
jae
xlat
sbb
inc
sbb
in
stos
mov
fildl
push
adc
loope
aaa
icebp
push
lock
xor
mov
push
jnp
inc
lods
push
aam
lods
call
sub
push
or
mov
or
insl
sahf
xor
nop
addb
ret
lock
cmc
jg
dec
out
inc
imul
js
lret
mov
mov
repnz
xor
and
mov
push
inc
xchg
repz
stos
loop
mov
imul
jmp
adc
mov
adc
bswap
pop
aam
pop
xor
dec
and
imulb
mov
mov
add
cmp
jne
jle
pop
fwait
das
adc
fimull
mov
mov
adc
popa
add
lods
aad
sub
sub
adc
arpl
pusha
lret
mov
in
out
leave
gs
mov
int
adc
jle
cmp
pop
sbb
enter
lods
sbb
std
leave
into
cmpsl
aaa
ret
outsb
inc
or
push
xor
fistps
lock
push
pusha
fdivrl
xchg
mov
in
add
cmp
sbb
mov
adc
and
mov
bound
lcall
aas
pop
stos
xor
ret
icebp
push
stc
aas
mov
and
or
jne
and
or
ss
jp
push
popf
or
adc
inc
mov
and
dec
adc
mov
jo
mov
push
fsubrs
jbe
or
in
pop
mov
cmp
sarb
ja
sub
adc
sbb
insb
mov
or
jecxz
rolb
add
sbb
hlt
pushf
or
pop
in
cwtl
pop
or
jmp
sub
mov
add
call
inc
shlb
adc
pop
dec
pop
push
mov
ret
out
imul
jp
inc
sbb
mov
repz
or
jae
cld
outsl
sbb
cmp
in
pop
insl
pop
sub
lahf
fadds
push
loopne
rcl
and
pop
hlt
mov
repz
fimull
stc
cmpb
push
mov
adc
in
das
fstl
mov
hlt
aas
jb
insb
cmp
sbb
int3
sub
push
jmp
out
loopne
subb
orl
rcrl
push
sub
jne
mov
jo
mov
xor
xchg
cmpl
lods
bound
sbb
inc
fs
jo
and
lret
les
add
sub
pushf
xor
and
mov
nop
jb
movsb
lods
inc
xlat
jmp
sub
lcall
loopne
fcomps
insb
adc
insl
sbb
repz
mov
cmp
std
sbb
scas
test
mov
push
shrl
add
xor
xor
cwtl
out
in
out
in
push
pop
push
jmp
mov
cltd
icebp
mov
andb
ja
xchg
cmpsl
cmp
xchg
outsb
xlat
dec
rol
dec
adc
jnp
arpl
gs
inc
sbb
fisttpll
out
sub
outsl
push
or
cli
testb
xchg
divb
inc
dec
test
out
stos
fsubl
clc
flds
inc
cli
jnp
icebp
ljmp
cmp
aas
je
xchg
push
pop
aam
dec
pop
cmp
adc
mov
cmpsb
scas
push
loope
iret
or
dec
add
or
cmp
js
xor
push
fidivrs
xlat
pop
cmpsl
adc
in
lret
mov
arpl
adc
xchg
out
inc
adc
cmp
or
es
out
cmp
inc
lock
mov
lret
inc
cwtl
idivl
fdivl
mov
mov
sub
xchg
mov
cmpsl
popl
mov
mov
xchg
cmpsb
rcll
shrl
jno
lock
movsl
mov
and
jg
sub
test
int3
adc
xchg
pop
pushf
cli
sarl
mov
lock
sub
stos
xor
add
fimuls
push
enter
mov
push
sarb
aad
adc
pop
dec
lea
daa
mov
movsl
leave
shrl
add
ret
jns
pop
out
sbb
into
xchg
pop
xchg
mov
sbb
loopne
push
push
fwait
jp
daa
add
push
cwtl
add
test
mov
mov
jmp
incb
mov
sub
sub
aad
adc
fs
adc
fistps
rcr
ds
sbb
dec
xchg
shrl
lret
fs
push
movsb
hlt
pop
out
xchg
in
xchg
adc
xchg
pop
fdiv
popa
adc
adc
ficompl
outsb
hlt
push
sub
cmp
popf
je
cmp
sub
xchg
cld
xchg
adc
jns
testl
jmp
mov
in
addl
pop
cmp
iret
adc
movsb
lock
ds
sub
mov
lret
pop
stos
aas
cmp
push
pop
divb
push
cltd
mov
lcall
dec
pop
scas
inc
mov
cli
mov
lahf
stos
rcl
test
sbb
loope
and
in
stos
insb
js
adc
mov
aas
out
lea
das
js
or
fwait
loope
sub
test
push
push
push
jb
cld
mov
test
scas
add
les
xchg
push
enter
xor
adc
sbb
cmp
stc
lods
cmp
adc
test
sbb
sarb
pop
mov
jg
test
pop
pop
aam
jae
dec
xor
data16
jecxz
mov
mov
jp
std
sub
shll
inc
mov
stc
xor
pop
push
imul
out
and
lds
xchg
loope
pop
xlat
jne
jne
jl
push
xlat
xor
xor
push
sbb
lret
popf
bound
popf
andl
mov
insb
jns
mov
cmc
enter
ds
in
mov
popf
dec
mov
mul
dec
add
inc
xchg
divb
pop
lcall
cli
mov
fcmovnbe
push
repz
mov
rol
out
cmp
jge
jno
adc
fwait
xchg
test
push
insl
push
fcoml
mov
sub
cmpsl
rorb
inc
mov
cmp
loop
or
pop
mov
out
sti
xor
ds
pusha
fs
push
cwtl
pop
lea
ss
xchg
dec
repnz
outsb
out
adc
out
xor
mov
push
xchg
fs
mov
stos
sub
je
imul
lret
sbb
into
fstpt
gs
repz
orl
lahf
lcall
loop
shl
jae
xchg
mov
cmpsb
pop
dec
call
jbe
push
pop
xlat
mov
loopne
les
gs
lcall
lods
stos
fwait
sti
test
pop
movsb
pushw
popf
xchg
lds
mov
push
adc
je
repz
and
leave
shlb
icebp
sub
xchg
dec
inc
jb
adc
pushf
xchg
daa
ljmp
jge
jnp
lahf
push
jne
sbb
mov
ja
sbb
mov
dec
jecxz
adc
mov
cmp
movsl
push
popa
jmp
lmsw
ss
xchg
lock
dec
and
sub
xlat
pop
dec
inc
mov
movsb
test
clc
nop
sub
fcoms
and
bndstx
pop
xor
dec
sahf
mov
iret
inc
popa
add
in
das
cmpsb
and
outsb
test
lods
jmp
mov
xlat
pop
ret
cmp
xlat
pop
cmp
or
movsb
jp
loope
adc
call
cmp
pop
std
negb
popf
xchg
lahf
ljmp
faddp
sbb
jp
sub
push
mov
mov
pop
notb
pop
cmpsb
in
pop
popl
rclb
outsb
ret
inc
adc
pop
jp
xchg
ficoms
add
ss
les
xchg
jne
adc
enter
nop
decb
or
sub
or
out
mov
lahf
xor
mov
mov
insb
pop
sub
jle
fs
or
clc
pop
inc
sbbl
mov
lahf
push
sbbb
or
mov
jns
push
lea
add
stos
add
in
shlb
jo
pop
xchg
adc
sbb
sub
sub
pop
in
sbb
movsb
mov
insb
outsl
mov
xor
jns
jo
call
test
inc
sub
test
aas
jle
insl
lcall
sbb
les
pop
jae
adc
cli
arpl
out
add
cmp
and
mov
adcb
and
fwait
cmp
std
xchg
lds
adc
jns
sbb
jmp
cmp
pop
call
sub
aad
es
clc
pop
mov
sbb
adc
cmp
jb
lods
movsb
inc
pop
dec
adc
sub
outsl
ret
les
insl
pushf
mov
arpl
cmp
bound
mov
adc
push
jmp
orl
stos
xor
xchg
imul
push
js
xor
int
inc
scas
jns
aas
outsl
fwait
inc
lret
pop
xor
push
adc
sar
int3
dec
gs
enter
cmpsb
push
scas
mov
jle
sub
repz
je
frstor
cld
push
mov
mov
cmp
push
call
jno
or
imul
movsb
rol
mov
and
bound
cld
cmpsl
rcrl
pop
jle
stos
xchg
mov
mov
push
mov
outsb
inc
xorl
sub
xor
jnp
cmpsl
push
test
push
mov
adc
in
jns
rcl
ds
push
sbb
call
cs
arpl
in
cmp
mov
pop
adcl
dec
mov
add
cmp
or
clc
in
push
loopne
mov
das
ljmp
mov
cmpsl
push
inc
mov
jmp
mov
out
push
bound
sub
loopne
and
pop
out
cmpsl
mov
pop
loopne
pop
addr16
sub
push
ja
cmp
imul
ljmp
int3
cmpsl
mov
cmp
into
jecxz
pop
es
pop
mov
sarl
adc
jge
movsl
repnz
ljmp
rcrb
fsubl
ds
fldcw
nop
jecxz
cltd
jbe
enter
in
mov
out
mov
inc
mov
mov
std
mov
push
push
orl
mov
das
push
aaa
into
add
pop
pusha
adcb
pop
pop
mov
mov
cmp
insb
xor
data16
or
jbe
cmp
jp
fnstsw
mov
shl
scas
insb
aam
add
test
jle
and
and
pop
push
add
mov
in
xorl
adc
out
and
add
mov
add
cmc
mov
jle
dec
inc
jo
hlt
rcrl
jno
adc
into
ret
pushf
inc
jo
cmp
in
inc
ficompl
les
movsb
or
into
xchg
frstor
cmp
mov
mov
mov
addr16
insb
rcrl
cmp
mov
cmp
imul
mov
inc
es
push
xlat
outsb
push
or
shll
cli
adc
jno
pop
scas
dec
mov
ss
fldenv
leave
nop
out
mov
push
xor
mov
cs
into
std
dec
fs
dec
popa
clc
jnp
cmpps
sbbb
mov
mov
pop
popl
pop
mov
mov
inc
fistpl
jmp
dec
push
out
adc
orl
les
xchg
insb
aam
cmp
adc
pop
ds
mov
mov
fldt
add
push
lock
ss
dec
outsb
inc
or
je
ds
xchg
sub
inc
push
mov
dec
xor
xor
sarl
dec
inc
scas
dec
pop
aad
dec
fcoml
lods
and
adcb
stos
cltd
xor
xor
jecxz
xchg
hlt
and
cmp
loop
xchg
push
nop
sub
and
mov
cli
clc
jbe
xor
adc
nop
jle
lret
push
loopne
push
inc
fisttpl
inc
and
fs
rcrl
xchg
inc
xchg
adc
push
outsl
sub
lret
sarb
pop
fstps
xchg
lods
jg
push
test
xchg
lock
pushf
xor
add
outsb
sub
inc
push
pop
sbb
ret
adc
test
aas
push
lds
in
xchg
fnstenv
insb
lret
subl
enter
sub
insb
aas
mov
daa
insl
pop
mov
dec
movzwl
loop
push
and
arpl
repnz
stos
fwait
and
or
jo
into
xchg
imull
adc
cmp
iret
cmpsb
mov
xchg
aas
push
cmc
mov
sbb
aam
notl
push
mov
push
cs
rorb
mov
push
sub
outsb
ret
mov
and
repnz
movups
neg
jne
xchg
cld
jg
adc
imul
call
or
jae
mov
push
fsts
je
jne
and
xchg
sub
hlt
mov
roll
ss
xor
lods
push
push
push
popf
xor
fs
fiaddl
cmp
jb
outsl
out
xchg
add
cmpsb
aad
cmp
and
mov
stos
push
or
insb
mov
test
mov
mov
mov
adc
add
xor
and
mov
addr16
sub
cltd
cmp
mulb
dec
jne
xor
outsl
and
push
ljmp
pop
sub
pop
mov
aaa
sbb
sbb
sub
aam
sbb
pop
dec
inc
xlat
jge
xchg
sub
mov
mov
push
add
cltd
inc
or
out
cmp
adc
push
outsl
mov
ret
dec
movsl
std
mov
popa
cmp
xchg
push
mov
fidivrs
and
iret
mov
sbb
adc
and
dec
pop
std
mov
out
and
shl
and
push
aas
shlb
and
popa
push
pop
inc
add
xchg
fstps
incl
nop
pusha
test
stc
popf
pop
mov
jmp
out
sarl
push
jns
cmpsl
push
popf
mov
xchg
pop
cld
jg
out
and
loopne
push
push
inc
dec
icebp
int3
ds
loopne
mov
xor
lds
cli
pushf
inc
inc
shrl
cmpl
in
and
shl
fwait
push
mov
adc
movb
mov
sbbb
subl
shlb
adc
shll
cmp
jmp
loopne
mov
xlat
lcall
jo
pop
sub
and
out
lods
mov
bound
cmp
push
outsb
adc
dec
test
jae
cmp
shrl
and
or
jns
cs
fcomps
pop
add
outsb
std
and
dec
mov
in
mov
push
pop
mov
xchg
ja
out
pop
inc
sbb
int3
jae
popa
mov
ljmp
or
lods
or
out
enter
xor
js
pushf
ja
xchg
inc
mov
pop
in
jbe
pop
adc
aaa
sarb
pushf
xchg
aas
jecxz
ficoml
pop
jge
jecxz
push
dec
nop
or
in
add
aam
mov
pushl
cmp
inc
xor
pop
or
jg
test
bnd
daa
sub
adc
xchg
test
icebp
enter
pop
jbe
inc
in
sbb
lcall
push
jo
jl
add
mov
pop
sub
dec
nop
push
out
daa
mov
insl
jge
mov
inc
pop
cmp
and
or
lods
adcb
mov
stc
push
inc
pusha
xchg
scas
shrb
not
andl
xlat
in
push
sbb
insl
lret
loop
push
fildll
xlat
inc
pop
insl
push
in
or
out
stc
inc
pop
fistps
addl
push
push
xor
or
push
mov
fnstcw
mov
adc
pop
cltd
out
insb
pop
repz
test
cmc
jnp,pt
lds
nop
push
mov
inc
pop
icebp
test
pop
inc
in
add
andl
fs
mov
outsl
sbb
dec
dec
nop
cmpsl
scas
adc
clc
xchg
jno
and
fstl
shrl
arpl
repnz
ljmp
mov
jle
pop
pop
nop
lret
fstpl
sbbb
scas
pop
out
sbbb
sbb
loope
sub
cs
pop
lods
lcall
mov
ret
cmp
fdivrl
fadd
rcll
sbbl
sti
movsb
or
nop
dec
lods
dec
push
enter
arpl
sti
sub
xchg
insb
shrl
add
jo
repz
sbb
cli
aas
aaa
pop
pushf
jo
jo
push
xchg
jge
mov
adc
jp
call
rolb
test
mov
mov
je
into
mov
shlb
pop
inc
sbb
test
sbb
in
ss
adc
mov
fisttpll
and
jb
ret
pop
pop
fwait
mov
inc
imul
shr
mov
pusha
mov
push
dec
xchg
cli
xchg
leave
cmpsl
out
repz
and
sbb
bound
jmp
js
int3
jg
test
push
fstp
mov
inc
and
jg
imul
iret
and
jmp
mov
shlb
or
inc
scas
ret
jb
cmc
adc
inc
sbb
iret
mov
xor
adc
sub
pop
cmp
into
mov
jmp
dec
insb
mov
dec
movsb
jbe
add
xchg
das
ljmp
shlb
outsb
lds
loope
xlat
push
or
dec
ds
pop
cmp
ret
outsl
lea
sar
cmp
into
pop
mov
add
test
stos
outsb
and
cmp
cmp
pop
ljmp
xor
ss
stos
movsb
aam
negb
xor
das
fmuls
mov
loope
dec
adc
push
adc
je
pop
xor
xchg
sub
mov
cmp
fwait
sahf
add
mov
xorb
dec
iret
jno
stos
mov
ljmp
jmp
addr16
sbb
test
xor
mov
jg
sahf
mov
cld
lcall
jne
mov
ret
jae
enter
jno
iret
and
lahf
roll
add
mov
in
xchg
lock
psrld
mov
pop
icebp
jo
repz
dec
sub
stos
ror
js
mov
pushf
mov
outsl
jnp
loope
imul
loope
clc
lds
jae
outsb
mov
aad
cmp
scas
and
inc
faddl
jecxz
pushf
jo,pt
mov
aad
jb
loopne
adc
xor
xchg
gs
jge
adcb
mov
adc
arpl
movsl
and
int3
repnz
imul
jge
rcrl
insl
inc
gs
rcr
and
push
or
adcl
mov
jmp
nop
add
jmp
xchg
or
pusha
adc
or
jmp
push
inc
xchg
cmp
mov
test
lea
js
pop
scas
lods
push
jmp
mov
mov
xor
xchg
pop
loop
out
shr
call
mov
jo
inc
or
mov
gs
mov
cli
push
and
and
fdivp
shl
add
ja
cmp
xor
mov
and
fisttps
mov
sub
pop
mov
or
nop
add
xlat
inc
mov
ja
inc
fs
test
testl
add
movsb
sub
ljmp
call
cmp
inc
ret
add
jg
sub
sbb
lods
imul
loope
sub
fmul
cmp
bound
xchg
push
scas
xor
mov
pop
pusha
xor
icebp
cmp
dec
repnz
dec
sti
cmpsb
cmp
mov
outsb
cmp
mov
mov
xchg
dec
scas
mov
sbb
lret
jmp
negb
loopne
jne
test
leave
stos
sub
out
movsb
stos
mov
lahf
or
or
ret
and
sbb
rolb
jg
push
mov
hlt
lret
rol
imul
dec
ret
iret
pop
jmp
dec
pop
insl
jmp
fistps
mov
mov
jmp
cmp
xchg
in
cmp
push
push
lock
pop
xlat
and
pop
dec
pusha
adc
pusha
negl
mov
xchg
jl
hlt
lds
test
mov
scas
mov
adc
daa
xchg
sbbb
cmpsb
mov
imul
adc
outsl
lret
mov
ret
mov
test
fsubr
sbb
pop
js
aaa
xchg
out
in
mov
mov
fwait
subl
out
pop
addr16
sub
inc
test
adc
mov
xchg
cmpl
mov
cli
push
loop
xchg
xor
mov
jmp
pop
aad
aam
repnz
fnstcw
mov
aaa
imul
lcall
mov
xchg
push
popf
pop
or
mov
or
sbb
dec
inc
inc
pusha
fbstp
cmpsb
inc
dec
inc
mov
push
pop
rorb
inc
push
in
and
shlb
jo
arpl
mov
push
and
xchg
outsl
stos
mov
les
test
push
cs
xor
mov
bound
mov
push
add
lods
nop
xchg
xchg
shlb
hlt
push
orb
hlt
std
sub
sbb
test
push
cmpsl
cmpsb
add
sahf
lods
shr
xchg
ljmp
xchg
jo
icebp
mov
and
rorl
test
es
fldl2t
addr16
dec
loopne
push
mov
pop
enter
pop
nop
push
aam
ja
mov
mov
test
jnp
outsb
shrl
xor
loopne
lret
xor
arpl
push
sbb
loope
fisttps
mov
mov
outsb
mov
ja
and
in
scas
and
outsb
loope
mov
dec
add
ljmp
xchg
ss
in
cmp
loop
ljmp
mov
ds
pusha
pop
inc
clc
scas
sub
std
push
mov
int3
pop
add
sti
push
jb
mov
popf
movsb
mov
push
lods
push
in
lret
divb
xor
jae
pop
sub
loopne
shr
test
xchg
xor
jle
sub
shrb
insl
or
mov
daa
notb
testl
mov
xor
lret
lret
mov
sbb
or
lods
outsl
pop
test
or
jl
mov
popf
jge
movsb
push
jecxz
dec
jg
sti
xor
or
sti
jge
inc
lods
aas
push
test
int
mov
xor
mov
mov
push
jge
dec
je
ficomps
dec
js
sub
lret
pop
aad
xchg
sub
insb
iret
mov
in
insl
addr16
jp
cltd
test
mov
or
and
push
cmpsl
cmp
inc
push
inc
pop
inc
push
and
jne
cmpsl
push
pusha
dec
mov
loop
or
adc
mov
jmp
outsl
es
rol
lock
jecxz
mov
rolb
mov
sbb
mov
inc
clc
xor
jmp
xor
adc
pop
fildll
ja
mov
adc
adc
insb
fsubs
fcoml
mov
adc
cmpsb
mov
aam
lcall
fists
mov
jb
scas
je
and
pop
mov
neg
mov
mov
je
dec
mov
sbb
mov
xchg
cmp
popf
mov
std
scas
xlat
jne
pop
jmp
jmp
aaa
jp
test
test
dec
pop
movsl
dec
in
push
xlat
dec
fwait
jns
inc
imul
inc
xor
lock
in
daa
mov
inc
test
lret
and
or
dec
and
and
add
cmp
pushf
mov
cmpsb
lahf
stos
xlat
cltd
sub
stc
test
dec
cmc
loope
subl
push
jge
mov
sarl
adc
mov
or
loopne
stos
bound
imul
std
and
and
sub
add
notb
mov
sub
push
pop
xchg
sub
mov
pop
movsb
mov
ret
jle
or
sbb
push
adc
jg
push
rcrl
scas
mov
dec
popf
lahf
jb
stos
repz
minps
out
test
movsl
fisubrl
adc
ds
addl
mov
cmp
loop,pt
mov
bound
insl
sub
sub
xlat
cmp
jge
xchg
push
mov
into
cmp
repnz
cmp
cs
int
sub
and
add
in
or
xchg
mov
push
test
inc
test
mov
push
cli
and
andl
jo
fimuls
mov
push
lods
mov
cltd
scas
es
xchg
add
cmp
scas
ss
insl
xchg
push
sarb
push
pusha
xor
ror
add
ljmp
inc
mov
adc
je
lret
mov
pushf
fdivl
dec
push
bound
adc
mov
cld
xchg
clc
mov
cmp
rcrl
jmp
mov
adc
inc
roll
test
gs
push
push
cli
mov
mov
clc
push
mov
ljmp
jo
dec
bound
cld
stos
push
cmpsl
sbb
cs
xchg
into
pop
jmp
pop
ret
mov
orb
dec
mov
scas
ret
sbb
test
push
adc
testb
shrb
lret
arpl
in
frstor
sar
xor
inc
data16
mov
mov
aaa
xchg
sbb
idivb
mov
xchg
fdivr
xchg
gs
add
cmp
sub
xor
xor
or
popf
cmp
push
mov
xor
xor
dec
mov
dec
inc
push
int3
dec
jecxz
mov
iret
hlt
dec
ja
daa
push
push
dec
shr
out
or
sbb
fidivl
xchg
es
cmp
mov
daa
outsb
add
push
mov
test
lock
gs
sub
lods
hlt
dec
push
add
mov
push
xchg
jecxz
dec
jb
fsubrl
iret
mov
cmpsl
lds
frstor
dec
pushf
push
adc
stos
mov
push
in
jnp
addl
jo
xchg
jle
xchg
xchg
pop
clc
push
loop
push
aad
adc
decb
pusha
inc
mov
mov
adc
and
incl
sbb
scas
push
out
decb
push
pop
sub
aas
je
fldenv
in
mov
dec
add
into
stc
nop
add
xchg
and
and
iret
cmp
fstps
jbe
mov
add
or
dec
mov
jp
sub
addb
jmp
fsubs
popf
inc
dec
mov
mov
dec
add
mov
pushf
xchg
dec
iret
pop
mov
jb
arpl
xchg
pusha
mov
mov
cs
inc
out
xchg
jb
gs
movsb
inc
idivb
rorl
aam
lods
sbb
out
xor
jp
call
dec
pop
xor
iret
lret
andl
xlat
mov
sbb
dec
adc
cltd
mov
cmp
push
leave
adc
int
add
out
stos
in
insl
lahf
xchg
sbb
outsb
and
push
sbb
or
inc
ja
xlat
in
mov
or
xchg
xchg
ret
sbb
xchg
fisubs
loope
inc
repz
sti
imul
lret
xchg
rol
lahf
mov
pop
mov
xor
pop
pop
imul
and
stos
jne
test
adc
push
sbb
pop
pop
mov
inc
sbb
icebp
int3
ja
inc
push
cs
fs
in
lret
in
jb
andl
pusha
scas
mov
loope
in
push
lea
dec
enter
shll
ja
jle
push
mov
adc
mov
dec
outsl
sahf
loope
pop
cmc
sahf
add
pusha
fistl
es
out
mov
scas
xchg
scas
ja
sub
xchg
jno
push
lret
inc
or
aad
sub
mov
push
in
cmp
fsubrs
pop
inc
cs
pop
xchg
adc
scas
jnp
mov
cmp
add
repnz
adc
mov
xor
jne
sahf
ror
mov
jno
and
lret
push
or
sub
or
dec
xor
aam
xchg
pop
test
or
xchg
pop
adc
ds
aad
stos
mov
sub
aaa
fwait
jnp
mov
xor
ljmp
mov
ficompl
xchg
sbb
pop
scas
xor
inc
iret
pop
lods
or
lret
xchg
and
rcr
out
pushf
add
mov
jp
jmp
inc
mov
int3
ja
cmp
gs
mov
imul
mov
leave
pop
mov
adc
inc
je
pop
cmp
and
pop
sub
mov
xor
or
lahf
jbe
cmc
mov
lret
adc
dec
fldt
scas
and
fwait
sbb
cmc
das
out
scas
scas
cli
pop
xchg
int
adc
push
out
addb
popf
mov
aam
stos
add
ss
sub
and
fisubrl
adc
iret
inc
jmp
fisubl
enter
pop
jbe
gs
fucomi
pop
lret
jb
loopne
idivb
addb
add
add
test
imul
jnp
cmc
and
loopne
inc
es
or
lock
subl
call
or
mov
std
dec
fisubl
orl
jmp
or
outsl
sub
popf
or
les
lcall
pop
fcomps
daa
dec
nop
daa
push
scas
jg
mov
out
aaa
ror
sbb
push
dec
mov
cmc
jno
xchg
cs
adc
scas
adc
mov
fs
out
xchg
xchg
fidivrs
or
sahf
jg
cmp
dec
push
decb
lods
jmp
popa
sbb
mov
mov
sub
sbb
in
or
cmp
ljmp
xor
dec
mov
popf
xlat
ds
out
jnp
xor
cmpsl
out
test
ds
cmpsl
dec
sbb
test
outsb
ret
dec
pop
fwait
lods
xor
das
pop
push
push
loopne
fcomip
repz
jl
sub
xchg
dec
push
insb
incl
test
sbb
popa
icebp
adc
adc
mov
xchg
icebp
clc
mov
cmp
mov
dec
fmull
push
jno
outsb
xchg
mov
cmpsl
or
shlb
shll
loopne
pop
xchg
pop
add
fildl
cltd
sub
and
mov
mov
out
pushf
repz
dec
xor
cs
repz
or
mov
mov
jp
jo
add
filds
pop
call
in
inc
jo
test
add
add
dec
cmp
push
push
jae
imul
aam
or
mov
xchg
and
out
in
std
mov
inc
pusha
inc
mov
into
test
push
rol
sub
add
roll
ljmp
mov
test
pop
fistps
sub
inc
add
shll
ret
adc
ror
cmp
mov
adcb
jp
add
fwait
call
sbbl
das
xor
xchg
fldt
mov
test
mov
push
mov
add
push
xor
in
push
mov
mov
cmp
aad
xor
xorl
sbb
sub
pop
sbb
fldt
or
inc
daa
sub
xchg
test
jbe,pn
add
pop
sub
dec
addr16
pushf
ja
pop
stos
mov
dec
push
loopne
and
or
xor
ja
lock
call
in
test
aam
test
xchg
adc
fs
sbb
sbb
pop
cs
in
sbb
imul
pop
jnp
shll
leave
and
jns
inc
mov
push
fstpl
xchg
aad
dec
rcrb
and
inc
or
rclb
ret
adc
stc
mov
jno
popf
push
pop
xchg
push
in
idiv
inc
sub
xchg
push
jo
movl
lds
inc
loop
ja
movsl
in
sbb
pop
repz
hlt
sbb
dec
sar
jno
dec
pop
mov
pop
mov
mov
fs
pop
dec
lcall
mov
xchg
pop
or
push
cs
sti
idivb
adc
mov
lret
mov
loope
mov
and
xchg
sub
lret
mov
addr16
int3
or
pop
cwtl
pop
jae
cmp
mov
out
mov
rclb
incb
js
pop
das
enter
jp
sub
inc
js
mov
ss
int3
movsb
xchg
jmp
int
out
lods
adc
rcrb
cli
aad
sub
mov
mov
cmpsl
push
in
test
xor
push
lret
jnp
loope
fs
sarl
sub
incl
decb
insb
sbb
and
jmp
flds
mov
cmpsb
pop
mov
addl
bound
ret
hlt
pushf
mov
xchg
mov
add
stos
cld
sbb
cld
fs
xchg
enter
shll
jae
insb
sti
push
sbb
dec
out
add
inc
callw
or
popa
pop
sbb
sbb
inc
ds
push
jae
jb
jne
or
jae
or
test
and
jo
pushf
lret
xchg
out
cmp
fmuls
lods
pop
lahf
xor
out
add
aaa
mov
sub
push
jmp
xchg
push
jo
mov
push
repnz
lahf
test
shlb
inc
adc
mov
mov
mov
add
jo
fsincos
adc
gs
sti
mov
jg
fsubrs
or
inc
inc
fcomps
test
je
pop
test
lret
aas
inc
jmp
mov
in
test
sahf
push
mov
mov
mov
inc
push
add
mov
rcrb
rcrb
outsb
subl
xchg
xor
leave
push
lds
in
fisttpl
push
add
and
pop
outsl
adc
pushf
dec
pop
repz
notl
repnz
rcl
aam
int3
nop
nop
cs
lahf
out
cwtl
es
popf
xor
pop
add
or
sub
jp
int3
arpl
push
pusha
push
es
enter
jle
xor
insl
int
xchg
jbe
dec
mov
fstps
adc
cmp
and
push
addb
xchg
lods
inc
or
fnstenv
add
stc
xchg
scas
mov
sbb
or
inc
mov
scas
out
arpl
test
mov
test
cmpsb
dec
pop
lock
inc
cmc
mov
cmp
mov
mov
test
or
pop
jb
fnstsw
or
notl
fldt
sub
hlt
jmp
aaa
push
shlb
arpl
js
mov
imul
xchg
sub
fistps
loop
jbe
loopne
inc
lcall
ret
adc
sahf
test
fidivrs
vhaddps
sub
out
popa
test
pushf
mov
or
mov
mov
ss
hlt
fisttpll
lods
inc
xor
sahf
add
lods
das
add
data16
stos
mov
lock
adc
or
push
repz
push
mov
stos
add
in
push
or
xchg
in
mov
jge
movsl
or
mov
testw
inc
push
adc
repz
lcall
jb
push
inc
in
or
sbb
insl
and
sub
fiadds
push
movsl
pop
cwtl
fldenv
sub
dec
dec
loope
inc
mov
or
inc
jg
jns
adc
fsubrs
push
je
pop
dec
and
inc
pushf
push
movsl
aam
push
cmc
mov
mov
out
nop
push
pop
dec
add
pop
mov
mov
rcrl
xor
rcll
push
in
jecxz
les
cmp
ficoml
mov
or
daa
cwtl
or
push
arpl
pop
insb
add
mov
sub
sub
movsb
test
xchg
mov
and
add
and
fisubrl
add
orl
mov
mov
jge
mov
cmp
sbbl
mov
sub
and
xor
and
push
mov
enter
rcrl
bound
add
cs
inc
xor
xor
xchg
aad
fimull
push
mov
rcrb
mov
orl
adc
adc
stc
nop
xor
and
or
mov
adc
pop
daa
jmp
pop
fadds
sbb
push
dec
and
mov
roll
movsl
out
call
dec
mov
pop
mov
sbb
test
xchg
cmp
inc
pop
lods
add
adcb
in
mov
cmp
mov
inc
inc
mov
loopne
mov
jne
fs
iret
leave
test
xchg
sub
xchg
pop
mov
aas
fnsave
repnz
mov
aad
inc
sbb
push
nop
add
into
in
fs
stos
mov
fbstp
stc
add
mov
int3
xor
or
stc
cwtl
xor
push
rep
jecxz
inc
xchg
xchg
cltd
mov
cmp
dec
ficomps
fmull
cmp
jns
add
xor
mov
call
adc
arpl
push
jno
jno
push
sbb
inc
fldcw
lock
test
lods
cs
push
mov
jne
push
or
or
out
dec
sub
aam
jae
and
or
mov
mov
shll
jl
nop
xor
mov
mov
test
out
adc
xchg
xor
sbb
cvtpi2ps
cmp
aaa
pusha
cmp
ret
cli
jne
test
fdivrl
sbb
popf
fs
push
cmp
and
into
mov
fwait
mov
push
sbb
jns
cmp
shlb
pop
scas
lods
popa
mov
mov
xchg
mov
ret
lock
pop
stos
mov
xchg
mov
pop
add
in
cmc
or
scas
clc
cmpb
and
mov
mov
xchg
xchg
cmp
xor
xor
push
scas
inc
mov
test
arpl
inc
fwait
mov
ljmp
adc
loopne
pusha
and
adc
mov
mov
push
add
sub
ljmp
inc
imull
pop
adc
inc
mull
ljmp
dec
inc
fdivrs
int3
jg
imul
lret
das
sbb
add
adc
mov
int
mov
lock
cs
jno
mov
lds
mov
in
adcb
aad
cmpsl
mov
jno
jo
sub
cmpsl
daa
inc
gs
xchg
fcomps
scas
inc
aad
insl
andl
xor
inc
in
add
dec
rorl
in
dec
adc
out
mov
fcomi
cli
add
std
in
je
mov
sub
pop
xchg
adcl
in
sbb
add
test
adc
xchg
and
ffreep
add
xchg
adc
sbbb
imul
gs
adc
adc
push
dec
fiadds
push
mov
fcomip
outsl
shrb
sarl
add
negb
xlat
hlt
pop
inc
jle
test
sbb
inc
pop
push
hlt
rorb
pop
fistpl
adc
out
sbb
xchg
iret
insb
outsb
add
xchg
out
mov
shl
xchg
mov
ffree
fidivs
cmpsl
lock
das
addr16
cs
push
lods
mov
fiaddl
std
ret
mov
pop
lods
lds
cmp
jl
fidivrs
fcom
mov
push
je
cwtl
xor
sbb
lods
ret
and
iret
mov
dec
and
mov
jg
push
ret
dec
xlat
cs
pusha
test
xchg
out
daa
mov
inc
pop
test
repz
add
push
sbb
mov
push
ds
jl
jo
push
mov
test
clc
fisubl
flds
jge
sbb
lret
aas
out
inc
in
push
in
mov
push
inc
pop
mov
and
push
in
sahf
scas
and
pushf
cmp
adc
ss
xor
adc
sub
movsl
mov
enter
jp
sub
cmp
je
adc
pop
and
mov
pop
loope
dec
outsl
lret
cld
mov
test
aaa
es
es
jle
xchg
or
out
jnp
mov
lret
xor
jo
lret
inc
out
jg
or
icebp
cmp
iret
adc
cmpsb
xchg
push
scas
std
jne
inc
pop
rcll
add
and
and
aas
in
xor
adc
pop
mov
or
add
and
daa
inc
mov
mov
pop
icebp
in
adc
je
xor
lods
xchg
xor
andl
repz
ja
jns
sub
push
repnz
jo
jno
arpl
sbb
push
pop
push
pop
xor
mov
xlat
lds
sti
scas
inc
cltd
sbb
loopne
adc
pop
iret
movsb
pop
icebp
aad
pushl
jg
xchg
sub
test
ds
sbb
lds
ret
mov
leave
out
andb
push
jae
lods
mov
shll
dec
fstps
lea
mov
push
pusha
fistl
xor
das
mov
mov
jmp
push
mov
xor
cmp
sar
out
fwait
xor
mov
push
jecxz
sub
xor
xor
pushf
push
sub
popa
fidivrl
add
adc
dec
mov
sbb
mov
cmp
sahf
outsl
adc
lods
arpl
divl
jno
popf
mov
pop
sbb
jno
sub
divl
add
xchg
fmull
pmaxub
movl
and
cmp
inc
cmp
dec
push
fsubr
cmp
xor
dec
pop
leave
xor
shrb
sub
mov
lods
inc
or
pop
mul
stos
lret
or
add
in
jns
inc
in
enter
push
or
mov
pop
mov
xchg
mov
mov
shll
int
dec
outsl
inc
push
addr16
rorb
mov
stos
inc
loopne
or
es
push
or
aam
sbb
aas
jb
dec
lea
into
leave
aam
testb
pop
pop
testl
pop
outsl
popa
hlt
dec
incl
push
xchg
int3
push
fidivrs
push
pop
fildll
shrb
jne
push
loope
inc
mov
dec
xchg
mov
dec
rorb
mov
int
cmc
push
insl
aam
pop
sub
outsb
xchg
xor
nop
jno
mov
shrl
jbe
mov
ljmp
mov
std
inc
sub
pop
inc
sbb
loop
cwtl
pop
mov
mov
popf
daa
xchg
sub
sarb
jne
add
es
lds
add
ja
ret
sub
sbb
sub
das
out
dec
out
repnz
mov
ret
mov
or
sub
das
adc
pusha
sub
dec
cmpsl
lock
shrl
lea
jb
inc
iret
into
rep
fnsave
sbb
testl
cld
sti
mov
insl
cltd
xor
leave
mov
push
or
lret
jns
scas
xor
push
jnp
inc
loopne
and
cmp
dec
inc
out
jb
jbe
ret
andb
fs
sbbl
jo
mov
pop
sbb
popa
push
in
push
cwtl
and
rclb
into
imul
sbb
mov
xor
push
mov
or
cmp
adc
insl
sbbb
icebp
sbb
xchg
add
subb
aaa
cmc
enter
aas
pushf
mov
push
push
loopne
cld
pushf
cmc
push
imul
movsb
enter
in
nop
pop
leave
sti
dec
je
push
sti
hlt
gs
dec
jae
pushl
popf
leave
cmp
mov
sti
mov
out
sbb
addr16
mov
cmp
xchg
call
in
xlat
ja
popa
xor
repz
pop
jmp
xchg
loope
adc
xor
or
push
shlb
mov
je
out
jno
mov
test
pop
sub
pop
dec
rcrl
adc
iret
push
xor
ljmp
insl
add
repz
mov
arpl
mov
fs
shrb
sbb
ss
scas
lock
imul
scas
or
cli
imul
sub
xor
fsubr
cwtl
cmc
aam
adcb
mov
pop
mov
nop
push
clc
enter
stc
inc
les
push
cmp
nop
test
xor
cs
pop
jle
leave
daa
shlb
push
cwtl
and
cmp
jmp
les
jg
xor
push
mov
mov
sub
test
xor
decb
inc
shl
sub
popf
and
clc
and
and
inc
insb
mov
xor
dec
imul
xchg
sbb
push
ljmp
call
xlat
xlat
push
fsubrp
cmp
cmp
mov
inc
arpl
jns
insl
add
push
cmp
add
sub
mov
dec
adc
xor
pop
inc
sbb
dec
arpl
cmp
dec
mov
adc
mov
inc
out
cmp
into
push
and
sbb
inc
mov
mov
je
sub
sbb
lcall
mov
les
and
lcall
jl
mov
xchg
jmp
in
clc
lcall
push
fstl
xor
sbb
test
jle
enter
sbb
out
sub
cmpsb
mov
and
dec
sbb
js
inc
data16
ror
dec
push
in
and
mov
nop
sti
shll
push
imul
mov
loope
push
out
ja
pushf
or
add
insl
add
movsl
rorb
push
jge
sub
or
push
lock
add
adc
and
add
into
sub
test
cs
cmpsl
sbb
mov
adc
into
lret
or
dec
inc
mov
jae
sbb
orl
add
xchg
pop
fwait
mov
xorl
and
gs
imul
enter
pop
jns
jns
mov
mov
sub
pop
xchg
adc
fs
xor
icebp
mov
pop
dec
mov
xor
pop
mov
xor
sub
enter
add
jno
mov
shlb
daa
sahf
cmc
push
movsb
repnz
mov
daa
sub
push
add
add
scas
dec
pop
sub
xor
outsb
je
das
in
mov
mov
in
test
mov
int
sarl
cmpsb
out
sub
or
loopne
mov
add
jae
cwtl
adc
push
cmc
and
test
inc
xchg
out
imul
sub
adc
lock
pop
js
call
jle
mov
imul
fisubs
fs
cmp
mov
push
adc
dec
pop
mov
stos
or
push
ja
das
mov
xor
jns
cmp
push
add
jo
outsb
add
push
mov
and
clc
rorb
ljmp
shlb
xchg
into
cmp
mov
nop
andb
mov
shrb
movsb
or
xchg
adc
test
js
cmp
lret
sti
xor
mov
or
or
scas
xchg
lret
iretw
jns
xacquire
test
jo
sub
imull
mov
pop
pop
inc
sbb
and
cld
into
cmc
dec
js
popa
cmp
rcl
push
shrb
cmp
sbb
xor
cmp
adc
xchg
push
xchg
dec
jbe
mov
xor
mov
enter
dec
popa
xor
sub
inc
mov
push
mov
lcall
mov
imul
ds
xchg
pusha
push
cwtl
sbb
int3
mov
std
and
sti
lret
stos
xchg
in
inc
les
or
xor
shrb
in
jle
mov
pop
jl
cmp
ds
outsl
jae
fldl
xchg
imulb
and
clc
dec
and
ret
shl
pusha
testb
cs
mov
shll
xchg
pushf
test
mov
jg
lods
imul
fstpt
mov
aad
and
lret
xchg
jle
lods
lret
and
mov
in
lock
sub
into
or
mov
je
lret
xor
imulb
imul
mov
scas
mov
push
cmp
mov
pop
gs
push
out
popa
aaa
pop
mov
aaa
push
test
lcall
or
daa
in
fwait
cld
je
scas
sub
fistpl
push
dec
add
inc
loopne
test
mov
daa
mov
mov
sbb
jnp
add
xchg
es
repz
adc
mov
cmpsl
jne
or
push
push
inc
ficomps
out
push
inc
clc
jnp
jno
jmp
or
pop
outsb
outsl
inc
fwait
aad
inc
jmp
mov
add
xor
sub
repz
dec
mov
push
lock
fstps
lods
and
negl
add
jns
pop
test
xchg
ss
int
mov
mov
ja
std
clc
decl
rorl
sbb
ja
ss
inc
je
outsl
xor
inc
adc
cmpb
popa
jnp
xchg
sbb
mov
adc
sbb
push
je
ret
xor
lods
lahf
sahf
and
imul
add
adc
sbb
insb
mov
push
out
jne
stc
or
ljmp
inc
pop
ret
and
cmp
xchg
dec
push
dec
loope
xor
dec
mov
sbb
inc
push
addr16
inc
add
int3
test
test
pusha
jecxz
dec
push
addr16
sub
in
es
out
stos
pop
mov
sub
mov
popf
aaa
stos
sbb
std
xchg
pop
mov
sbbl
inc
test
in
sbb
mov
addr16
or
lahf
test
rcl
dec
bsf
adc
push
push
cwtl
mov
push
inc
dec
push
sahf
fdivr
mov
scas
push
shrl
out
inc
lret
sbb
fists
sub
add
jns
push
in
adc
ud2
push
mov
addl
jo
in
and
pop
fsubl
addr16
cmp
push
in
pop
adc
mov
les
xor
cs
fisubl
jne
and
gs
loope
or
jp
xchg
mov
adc
inc
and
cmp
pop
sahf
mov
imul
xchg
dec
fildll
adc
and
fnstenv
cmpsl
cmpsl
test
sarb
cmpb
insl
mov
mov
sbb
rorb
stc
or
push
mov
enterw
test
sbb
push
lret
push
adc
repz
aad
xchg
imul
xchg
jnp
fists
in
jg
frstpm(287
inc
mov
stos
xchg
push
dec
inc
fs
data16
shl
inc
clc
hlt
mov
out
out
addb
out
pop
lret
repnz
cmp
test
repz
sbb
dec
add
out
adc
icebp
movsb
xor
cwtl
inc
mov
pop
jb
jmp
out
xor
mov
or
add
lock
inc
xchg
jns
push
dec
jecxz
cmp
dec
pop
leave
sub
jg
xchg
inc
xchg
pop
inc
inc
imull
jmp
shrl
ljmp
pop
pop
mov
lcall
or
outsl
cwtl
test
xchg
cmp
cmc
pop
and
inc
out
in
inc
sbb
lret
add
mov
jge
cwtl
and
mov
into
insl
stc
jo
inc
mov
iret
or
stos
pop
mov
in
int
mov
or
es
aam
inc
push
js
mov
stc
cs
repnz
addb
xchg
mov
notl
les
negb
aam
fcmovu
mov
jae
andl
ja
daa
sub
fidivrl
pop
fildl
out
inc
xchg
mov
lret
sub
sbb
add
dec
push
xchg
lods
fst
cwtl
and
inc
fsubl
mov
mov
stos
aad
pop
and
fisttpll
repz
test
pop
aam
je
cmc
lock
leave
adc
clc
bound
cltd
into
iret
add
fisubl
mov
pop
push
inc
test
dec
out
mov
add
movsl
xchg
xchg
mov
ja
mov
mov
shrl
mov
sbb
and
inc
ljmp
and
pop
xchg
adc
mov
push
inc
add
and
aaa
pop
lret
sti
and
adc
sub
lods
js
mov
mov
mov
push
cmp
xor
or
xchg
jl
push
into
adc
call
push
lcall
loop
cmp
pushf
lds
idivl
xchg
call
dec
movb
in
cmp
out
test
iret
mov
fucomip
lds
cs
mov
loopne
mov
sbbl
add
jl
dec
mov
movsb
cmp
pop
pushf
cmp
cmp
jp
xchg
test
xchg
in
or
dec
pop
cmp
stos
pusha
mov
movsb
push
add
cmp
dec
jae
and
outsl
in
adc
jnp
xor
andb
lcall
jmp
xor
mov
or
leave
int
scas
addr16
loopne
mov
mov
mov
and
cltd
mov
pop
dec
int
lock
sub
pop
out
ja
pop
and
pop
loope
xchg
sub
scas
or
aas
icebp
mov
cmp
movsb
out
cwtl
mov
nop
insl
out
add
inc
mov
std
or
add
xchg
push
test
dec
or
mov
adc
mov
stos
iret
inc
cltd
jae
mov
es
or
mov
nop
fsub
pop
push
es
into
cmpsb
in
adc
movsb
loop
test
call
fadds
adc
dec
lods
cmpsb
dec
fistpll
add
add
mov
imul
jg
ja
and
xor
fnstenv
rorb
cmpsb
xchg
adcb
mov
js
repz
cltd
out
jecxz
ret
cltd
sbb
xor
jo
sub
ret
ret
lcall
mov
stos
xchg
dec
lds
divb
xchg
push
les
stos
add
mov
sbb
or
data16
push
iret
push
mov
hlt
push
and
gs
loop
rdmsr
sbbl
cld
fbld
sbb
xor
fisubl
pop
cld
pop
fwait
sti
aad
xor
ss
popf
addr16
bound
jle
mov
add
fidivrl
push
or
popa
bound
data16
outsl
mov
sbb
push
ret
jl
jecxz
or
pop
xchg
outsb
mov
fnsave
add
pop
mov
pop
loope
imul
jl
mov
mov
cwtl
and
test
in
leave
fstl
jns
loop
jge
add
movsl
and
insl
mov
cli
daa
xor
rcl
std
aaa
addr16
fldt
addr16
xchg
sarb
mov
sub
repnz
mov
test
mov
and
cmpsl
inc
in
gs
push
mov
jmp
aas
stc
push
adc
sbb
inc
js
fs
in
adc
notb
sub
xor
inc
popa
dec
sub
xor
push
test
mov
mov
sbb
and
ss
inc
inc
cmpsl
mov
jbe
lret
aad
ret
push
fs
stos
push
jg
sbb
je
icebp
sub
push
testb
sub
xchg
int3
sbb
sahf
lods
push
test
or
jae
pop
adc
hlt
fldl
dec
leave
and
shlb
inc
cld
insl
xchg
lret
xor
filds
mov
shrb
cmp
jecxz
mov
mov
adc
push
xor
cwtl
loope
sti
pop
in
mov
push
loope
jne
inc
or
jb
lcall
pop
jle
xchg
test
ret
sub
xor
aas
or
cmp
and
push
push
ss
mov
push
mov
lret
push
pop
dec
xchg
mov
push
sub
aas
sub
aam
pop
sahf
xchg
loop
xchg
notb
mull
js
mov
fidivrl
lret
mov
lret
sahf
xor
andb
inc
or
into
pop
push
add
mov
adc
sbb
push
sub
add
daa
add
mov
cmpsb
push
int
mov
mov
pusha
lock
loope
loop
add
cmp
mov
into
inc
clc
and
shll
fidivrl
pop
repz
es
lahf
sub
xchg
out
outsb
push
imul
xchg
and
mov
ss
popf
mov
daa
roll
xor
mov
test
lds
out
xchg
xchg
xor
hlt
mov
xor
pop
and
int3
push
divl
cmp
test
push
hlt
pop
or
lret
mov
imul
cwtl
lahf
cmpsb
sub
or
sub
mov
ret
jae
sbb
movaps
mov
push
ljmp
test
negb
sbb
mov
ficomps
mov
aad
push
or
sbbb
outsl
pop
mov
sub
adc
inc
inc
and
aas
fnstsw
icebp
sbb
jno
sbb
leave
nop
xor
sub
dec
clc
push
jmp
enter
sbb
out
jb
mov
mov
cmp
mul
mov
mov
imul
jp
mov
daa
ljmp
jl
int3
cli
xchg
aas
pusha
mov
mov
movsb
push
cmpsl
fcmovbe
imul
jne
inc
sub
jmp
cmpsl
xor
sbb
mov
inc
shrb
das
mov
mov
lret
movzbl
jmp
dec
movsb
or
lods
ret
lods
xor
mov
subb
scas
es
jecxz
cmc
sahf
out
sub
call
mov
scas
sbbb
mov
xor
inc
outsb
popf
test
and
jmp
into
or
not
nop
and
movsl
mov
test
jmp
fisubrs
inc
shrb
jno
cwtl
and
out
inc
and
mov
push
imul
cmp
outsb
xchg
mov
js
adc
mov
mov
sarb
leave
lock
into
mov
gs
or
loopne
add
out
test
call
fisubrs
mov
pop
repnz
inc
jns
jp
xor
xor
repnz
jne
push
icebp
cmpsb
jns
jne
push
xor
fidivrs
push
mov
pop
out
aad
mov
and
sbb
adc
inc
pop
xor
mov
pop
lock
cld
jg
lahf
xchg
adc
data16
lret
outsb
mov
fsubrl
cmp
dec
bound
les
inc
fnstsw
push
pop
pushf
cmp
inc
sti
jbe
cmpsl
or
mov
mov
fmull
jmp
fmul
aas
sub
pop
cmp
xchg
fs
add
imul
sbb
lods
cltd
xchg
mov
and
xor
sbb
cltd
sub
daa
lahf
adcl
imull
push
adc
push
cltd
fs
enter
add
push
mov
stos
test
adc
repnz
adc
xchg
adc
int3
leave
fcoms
lcall
xchg
push
jbe
xchg
push
and
cld
and
and
sub
addr16
repnz
cmp
jecxz
jno
loope
int3
iret
mov
xchg
lea
mov
ret
sbb
jo
xor
out
mov
pop
xchg
sbb
mov
and
das
xor
pop
dec
xchg
pop
mov
jmp
adc
pop
loop
pop
mov
mov
and
imul
filds
jmp
mov
movsl
aad
pop
nop
adc
ljmp
and
xchg
and
cmpsb
mov
fninit
xchg
cmp
aaa
je
and
imul
push
mov
jmpw
lret
rorb
dec
mov
jns
sbb
dec
and
jns
jg
pop
enter
cltd
xchg
mov
or
dec
xchg
push
sbb
dec
nop
push
push
ja
inc
lods
mov
ja
ds
mov
xor
jle
adc
rol
jecxz
ficomps
or
push
outsb
or
or
push
mov
mov
imul
xchg
cmovae
movsb
push
out
and
rcll
out
cld
pop
addr16
xchg
push
dec
cli
mov
je
shr
and
sbb
imul
adc
arpl
push
jns
sbb
cld
sbb
loope
lock
jp
inc
lods
call
loop
fidivrl
lret
lcall
or
adc
jno
stos
sbb
sarb
out
push
sub
jno
add
pop
or
test
out
jp
data16
or
push
pop
sub
adc
sub
inc
dec
lcall
dec
jmp
in
jp
jle
je
or
rcrl
ret
stc
lahf
xor
push
mov
stos
test
shlb
test
sub
insb
mov
xor
push
mov
fxam
jne
aam
or
or
xorb
xchg
push
call
fdiv
xor
xor
xor
sub
push
aas
arpl
int
roll
test
call
jbe
xchg
popa
xchg
fsubrs
outsb
das
ret
jne
cli
orb
sbb
dec
daa
dec
in
xchg
jo
negl
out
into
pop
and
out
add
movsb
test
and
leave
sub
lret
repz
adc
cltd
rcl
pop
test
call
daa
imul
repnz
lock
sbb
lretw
mov
pop
pop
cmp
out
jl
pusha
push
dec
movsl
lea
mov
stos
es
jae
int
inc
std
xchg
jae
jo
xchg
inc
sbb
mov
je
sub
fnsave
xchg
test
mov
aam
daa
nop
mov
lahf
or
in
test
lret
rcl
jge
push
cmp
lahf
pop
icebp
sbb
mov
dec
hlt
add
cmp
push
je
test
cltd
push
jle
xchg
sub
imul
enter
push
es
rcll
inc
push
ret
xor
cmc
shr
fucomp
jecxz
movsb
imul
sti
in
mov
push
jo
shrl
adc
xor
cmp
push
mov
ret
sbb
clc
cmpsl
xor
stc
nop
insb
rorl
jo
push
push
adc
adc
jnp
cmp
movsl
lds
pop
cmp
mov
aad
inc
lods
jecxz
shl
shlb
lods
inc
lea
add
scas
lret
jne
shll
pushf
push
insb
xchg
test
loop
leave
sbb
pop
push
cmpl
out
cmpsl
and
pushl
push
xorl
or
jbe
dec
popa
aas
push
outsb
int
and
mov
mov
pop
cmp
pop
nop
imul
imulb
stos
test
mov
dec
js
add
mov
iret
sub
das
push
jns
sub
mov
xchg
les
arpl
lds
add
movsl
mov
pop
or
add
dec
xchg
cld
sbb
test
lret
xor
cld
lret
mov
test
lahf
sub
loopne
fwait
inc
clc
lock
repnz
mov
ljmp
xchg
rcr
icebp
push
mov
and
notb
flds
fcoml
out
push
stc
cmp
mov
or
jno
xor
test
push
repnz
xor
cli
popf
xor
inc
push
inc
gs
cmp
les
push
mov
out
dec
adc
dec
dec
lret
adc
jne
cmp
lods
mov
lret
loope
adcl
xchg
inc
xchg
fstps
lcall
push
in
test
sub
jae
out
clc
lret
dec
jbe
out
lea
add
fildll
push
subb
inc
pusha
fimuls
mov
push
ss
push
ret
out
out
fwait
inc
ja
shr
sbb
mov
hlt
and
cmp
ret
lahf
xor
pusha
add
mov
sar
pop
test
iret
xor
fcomip
push
push
lahf
mov
cmp
cmp
stos
and
mov
shr
mov
insl
add
mov
fistps
lcall
push
xor
frstor
jle
pop
movsl
lea
inc
mov
xchg
sbb
pushf
xor
jl
hlt
popf
mov
sbb
dec
sahf
aaa
ficompl
xor
daa
push
push
cltd
xchg
and
inc
cltd
push
insl
lret
sub
aad
xor
mov
and
lods
push
lahf
subl
testl
cwtl
sahf
push
mov
mov
stos
sub
outsl
pop
loop
fistpl
mulb
mov
fdivp
mov
dec
jb
push
leave
in
hlt
mov
adc
mov
xchg
dec
mov
and
pop
adc
shrb
repz
out
push
mov
mov
lcall
into
jl
fs
and
scas
fdivl
outsb
mov
int3
jg
insb
outsl
sub
push
cmp
and
out
lods
pop
xor
xor
outsb
mov
bound
ret
gs
test
pusha
fs
push
adc
stos
cmp
std
fcomps
les
mov
fnsave
xchg
add
aas
jmp
mov
jg
ljmp
jae
gs
add
pop
and
and
aad
cmc
jbe
sub
test
jns
mov
int
dec
scas
aaa
enter
aad
cmp
jo
sti
sub
xchg
and
pusha
data16
add
mov
jl
test
mov
dec
test
inc
jns
enter
clc
add
out
stos
lock
push
sbb
outsb
aaa
int
cld
pop
push
int
jae
ss
adc
xchg
cmp
mov
jnp
pop
pop
pushf
lods
mov
pop
imul
inc
gs
cmc
cmpsb
mov
push
lahf
sarl
out
ret
sbb
mov
insl
arpl
jle
bound
in
inc
stos
popa
call
mov
in
subl
or
out
aad
pop
int3
add
inc
mov
movsb
pop
out
jl
adc
ret
sbb
mov
xor
dec
add
jg
inc
dec
push
fwait
out
or
inc
mov
jne
mov
nop
adc
mov
sub
lret
in
jmp
and
cmp
cmp
dec
ljmp
notb
mov
xor
dec
call
jae
push
loope
stc
sub
jecxz
pop
insl
lods
call
sub
inc
lea
in
cmp
cmp
pop
loope
adc
call
mov
or
movsb
and
je
lds
into
gs
and
or
lcall
ds
aaa
push
in
loop
add
ljmp
shll
ja
stos
stos
push
jmp
arpl
sbb
xlat
insl
mov
xchg
jno
pushl
out
push
push
mov
sub
mov
xor
and
ja
jbe
adc
scas
ss
mov
mov
and
rcrb
push
nop
push
frstor
adc
sbb
ss
shlb
call
test
sbb
loope
adc
push
ss
xlat
mov
pop
push
fdivs
movsl
in
loopne
pop
push
stos
and
push
cmp
movsl
dec
movsb
imul
pop
and
jmp
pop
add
dec
aam
imulb
xchg
fadd
cmc
lahf
mov
fs
mov
std
mov
push
jae
filds
pop
roll
fsubs
mov
xchg
test
xor
loop
sbb
dec
loopne
outsb
push
jg
loopne
clc
cmc
adc
fwait
hlt
xorl
stc
adc
push
nop
inc
icebp
in
aad
mov
mov
pop
test
dec
pop
repnz
dec
push
mull
mov
jbe
fcmovne
sub
jnp
in
jae
icebp
jo
pop
jl
roll
out
insb
fistpll
nop
fwait
push
push
fnstcw
mov
mov
fcomi
mov
dec
mov
or
inc
mov
test
js
das
pop
outsb
fwait
rorl
xchg
mov
test
cmp
out
sub
and
push
in
leave
push
jnp
mov
notb
pop
fldl
imul
inc
xor
idivb
lret
sbb
iret
adc
popa
mov
fucomp
inc
addb
cli
and
sbb
out
test
insb
out
dec
shlb
fdivr
inc
cli
mov
jne
xchg
cwtl
nop
xchg
inc
ljmp
mov
nop
into
pop
xchg
or
divb
cwtl
insl
cmp
test
mov
xlat
outsb
nop
jg
in
mov
adc
push
xchg
add
fadds
lea
scas
or
mov
lods
mov
xchg
push
jae
xchg
addb
incl
pop
pop
cmc
mov
into
enter
jmp
arpl
cmp
test
sbb
out
mov
fisubrl
nop
pop
lods
lods
adc
push
sbb
js
jp
add
jb
cmp
stos
pop
loopne
dec
fidivrs
in
inc
jle
jecxz
aad
stos
mov
sbb
fbstp
xchg
iret
adcb
push
in
fidivrs
inc
pop
je
adc
imul
imul
adc
shlb
sbb
popf
popa
cmpsl
xchg
fwait
jmp
push
and
jno
nop
scas
loop
subb
fcmovnbe
mov
mov
lret
aam
sub
mov
popa
mov
mov
addr16
rcrl
dec
adc
loop
xchg
fists
addl
adc
int
or
leave
fsts
xchg
jecxz
mov
adc
push
iret
pop
div
test
fcomip
push
sbb
jmp
aaa
aaa
mov
test
pop
inc
cmc
in
adc
pop
pop
in
int
add
mov
fsubrs
test
scas
mov
arpl
mov
ficoml
lods
jae
mov
mov
and
pop
dec
mov
std
out
push
repz
push
sub
xchg
cli
inc
repnz
fwait
cwtl
push
repz
sahf
and
pop
ja
hlt
xor
sbbl
scas
lods
aas
dec
sub
or
cmp
fsubrl
aam
cmp
jp
lods
in
inc
fimuls
add
jbe
sbb
mov
jno
push
inc
lods
fadd
std
popl
xor
aad
mov
adc
lods
cmp
pop
cmp
repnz
sbb
xchg
jae
jnp
cs
js
or
lretw
inc
aas
std
xchg
sub
mov
adc
in
lret
loope
gs
int3
cwtl
stc
cmpsb
xor
in
loopne
lret
adc
mov
insb
xchg
dec
mov
sti
test
push
out
adc
mov
add
notb
or
dec
pop
out
jmp
ds
in
movsb
and
cmpb
in
mov
xchg
adc
enter
dec
mov
lret
movsb
std
push
lds
jge
dec
stos
add
mov
jae
add
mov
fwait
dec
dec
mov
jae
cmpsb
add
fsubs
mov
xor
mov
jo
arpl
sbb
mov
xchg
sti
aaa
xchg
add
add
fcompl
andb
adc
jns
push
inc
aam
add
jne
add
in
repnz
mov
pop
fiaddl
jbe
mov
in
push
out
or
dec
fnstsw
mov
fimuls
loopne
xlat
sarl
enter
mov
cmp
cmp
cmc
mov
daa
daa
repz
enter
scas
sbb
div
add
into
jb
fsub
push
adc
lock
add
and
out
cmp
pop
mov
pusha
pop
xor
addr16
and
jge
ss
pop
test
ljmp
aad
xchg
prefetcht0
lock
push
add
andl
rclb
cwtl
out
sbb
mov
or
scas
and
fld
int
sub
inc
lcall
push
cmpsb
les
cmp
movsb
insb
or
iret
push
fnsave
lock
mov
jmp
sub
scas
out
inc
mov
scas
fnstsw
and
ljmp
sbb
cltd
cmc
xor
xor
aaa
jmp
ret
push
add
and
mov
leave
iret
jb
jne
daa
outsb
add
sbb
enter
mov
inc
mov
pop
mov
pop
repz
mov
je
pop
sub
push
aam
jge
arpl
mov
mov
xchg
or
xchg
cwtl
jo
mov
inc
fisubrl
inc
ljmp
xchg
ror
movsl
pop
loopne
in
sbb
sub
inc
std
xchg
and
dec
cmp
sbb
inc
popa
adcb
lock
or
and
push
popf
addr16
xchg
add
jne
lods
xchg
or
ret
ret
inc
dec
mov
inc
pusha
or
dec
stos
xchg
sub
mov
lds
movl
push
mov
mov
in
addr16
mov
js
mov
sbb
push
pop
add
es
mov
arpl
jecxz
sbb
cmp
xor
nop
xchg
loope
cld
fwait
mov
popf
sub
hlt
lahf
and
jnp
fs
stc
ret
mov
pushf
int
sbb
scas
call
loope
and
pop
push
int
adc
pop
xchg
cmp
mov
mov
adc
xchg
push
sbb
icebp
in
inc
roll
in
lock
enter
add
std
out
sahf
cmpsl
dec
test
push
xchg
call
mov
push
inc
int3
mov
dec
or
sbb
pavgb
mov
in
xchg
mov
push
stos
es
pushf
jge
or
mov
into
pop
stos
scas
out
arpl
aad
mov
roll
es
in
pop
loopne
in
aad
je
cmp
cmp
pop
xchg
xlat
push
or
push
mov
outsb
ret
pop
mov
push
push
adc
stos
inc
cmp
lods
push
repnz
push
mov
and
inc
add
out
mov
mov
loopne
mov
aad
jecxz
mov
lret
xchg
or
mov
push
repnz
ret
pop
dec
clc
jae
mov
fstpt
add
mov
xor
arpl
decb
xchg
push
fcomps
lods
cmp
push
inc
fadds
in
dec
ret
jno
push
or
xchg
clc
push
push
lgs
adcl
mov
adc
sti
jbe
mov
int
or
lret
xchg
jmp
lcall
mov
xchg
mov
loope
jns
sbb
cmp
adc
mov
repz
cld
icebp
mov
pop
hlt
das
xor
sub
adc
cli
xor
enter
sub
je
jo
pop
aas
das
fdivl
cmp
filds
fidivs
jne
popa
ret
decb
pop
test
or
rclb
mov
lahf
orl
and
nop
add
shl
and
push
test
mov
js
and
add
imul
mov
stos
push
xor
pop
imulb
pop
mov
sub
xor
lret
sub
ret
sbb
into
dec
pop
int
mov
push
test
aas
add
repnz
insb
mov
xchg
cmp
test
pop
mov
mov
addr16
or
inc
sbb
cs
or
outsl
mov
push
sbb
dec
das
cli
scas
dec
pop
pop
ret
gs
cld
mov
and
push
push
ds
cs
stos
inc
sbb
add
adc
cmp
or
mov
rcrb
xchg
cmpsb
subb
mov
xchg
mov
imul
cmc
mov
and
xor
int
push
push
subl
popf
push
pop
outsb
cmc
inc
movsb
repz
lahf
jmp
int3
xchg
add
fwait
and
or
pop
dec
mov
daa
into
aam
loope
mov
loope
aas
rclb
shrb
jp
push
jbe
and
mov
mov
pop
and
pop
xor
fwait
cltd
shll
adc
std
out
xor
pop
cmpsb
jg
xlat
scas
mov
bound
cli
subb
mov
ret
lods
test
sahf
inc
repnz
or
pop
cmp
dec
sub
push
lods
and
dec
sub
mov
push
jbe
sbb
adc
jge
xor
popf
sbb
add
faddl
int
dec
cmc
cs
aam
and
nop
movsl
ret
movsb
scas
sub
orl
lret
xor
jl
pop
leave
mov
inc
rclb
cmp
or
push
push
jmp
add
ja
dec
push
mov
pop
lds
mov
out
scas
shll
ret
sub
adc
orl
dec
out
push
sub
or
int
cmpl
addr16
in
ret
inc
pop
and
dec
pop
test
adc
andb
xchg
popa
or
gs
cltd
jbe
std
mov
mov
mov
outsb
push
cltd
fwait
das
jmp
inc
jmp
fucom
outsb
sub
jp
lret
andl
sbb
es
push
inc
cld
xchg
mov
imul
sbb
xor
push
or
ja
mov
mov
loopne
sub
insb
scas
mov
mov
mov
adc
jl
and
repz
mov
adc
inc
sbb
mov
scas
in
sbb
out
nop
std
inc
dec
fidivrl
pop
or
adc
std
iret
xchg
hlt
mov
sub
inc
add
inc
mov
jg
sbb
push
leave
fnstenv
or
sub
pop
call
shr
inc
adc
cwtl
or
push
xchg
xor
pop
dec
fimull
push
jmp
push
jmp
roll
cld
cmc
out
mov
ficoml
fstpl
jb
out
loope
sub
or
or
aas
push
jg
cmp
sarb
lret
adc
push
xor
xor
and
test
fdivrs
sub
push
cmpsl
xor
lcall
and
xchg
fistpll
or
mov
es
sbb
mov
push
fadd
fisubrl
das
shll
leave
nop
scas
or
outsb
inc
dec
loopne
or
mov
jne
nop
push
and
pop
testb
pop
adc
xchg
fnstenv
pusha
test
mov
into
add
lock
imul
fistpll
fbstp
xchg
arpl
or
test
outsl
push
sti
and
lea
push
lods
cmc
in
out
mov
add
js
sahf
mov
xor
xchg
cs
and
jno
dec
push
pop
xchg
pop
cmp
mov
out
xchg
sbb
adc
push
ret
or
cmp
out
scas
jb
scas
dec
loop
cmc
cld
xchg
push
cmp
push
add
lock
jne
xor
jp
xor
sub
dec
shll
cli
xor
aaa
jecxz
mov
jg
cmp
and
push
jne
xchg
add
mov
shrl
std
stos
into
das
fdivrl
push
sub
xor
jno
popf
fnstsw
mov
push
dec
cld
mov
or
dec
jp
mov
popf
pandn
jl
out
mov
loop
cmp
add
jg
out
test
aas
push
lcall
xchg
sub
lret
mov
adc
xchg
js
and
dec
pop
xor
lcall
mov
cld
push
xor
pop
cmpsl
inc
mov
mov
dec
add
xor
neg
loope
or
lds
inc
jecxz
mov
or
push
sub
adc
imul
push
sub
cmp
popf
xchg
icebp
jbe
cmpsl
mov
xchg
shlb
adc
cltd
fs
mov
mov
rclb
inc
xchg
and
dec
mov
sbb
pmulhuw
mov
adc
imul
sub
sbb
loopne
mov
xchg
lods
mov
fcompl
mov
inc
enter
enter
scas
out
sbb
mov
adc
sub
mov
scas
loope
mov
ljmp
std
mov
sbb
ljmp
imul
cmpsb
enter
insb
pop
loopne
mov
mov
outsl
es
pop
nop
imul
cmp
cmpb
inc
sbb
lods
or
arpl
push
movsb
mov
std
ss
fdivp
push
arpl
mov
rolb
inc
arpl
xchg
sarb
mov
cmpb
and
inc
dec
insb
sti
insb
xor
pushf
cmp
fcompl
outsl
sbb
shlb
insl
mov
es
push
add
lea
cli
mov
mov
movsl
out
push
sbb
mov
add
sbb
enter
jnp
cmp
cltd
adc
xor
adc
and
adcl
jb
das
adc
jnp
jae
xchg
jb
dec
mov
ret
jns
mov
pop
test
hlt
mov
loope
pop
cmp
out
sbb
xchg
jno
test
out
mov
out
outsb
inc
cmpsl
mov
sbb
mov
mov
inc
jl
xchg
cmp
hlt
fwait
jo
mov
xchg
cld
cmp
das
dec
repz
lea
cmc
cmpsl
or
popa
jo
mov
jg
popl
leave
int
push
testl
imul
push
movsl
adc
push
rcr
dec
or
mov
adc
push
fdivs
adc
icebp
lcall
stc
mov
mov
scas
rcrl
jl
dec
mov
xor
mov
xchg
push
mov
dec
cmpb
ret
xchg
mov
cmp
in
push
push
and
sbb
adc
inc
shrb
fwait
aad
mov
or
cltd
mov
fsts
xchg
ret
inc
mov
test
sbb
jp
dec
out
sti
nop
sub
inc
sbb
lret
imul
mov
sbb
xchg
cmp
out
out
sub
ja
das
jge
xlat
idivb
imull
mov
repnz
popa
into
gs
pop
mov
popl
scas
add
movntps
dec
ljmp
dec
jnp
arpl
sub
inc
mov
nop
fiaddl
ret
test
dec
xchg
nop
movlps
sti
fwait
inc
sub
xchg
pop
lea
sub
nop
push
xchg
jp
mov
in
push
jno
pusha
or
int3
rol
add
push
jne
sub
adc
mov
out
sbb
cmp
call
mov
adcb
push
jns
out
cmpsb
subb
aam
dec
aaa
mov
mov
mov
mov
jns
jae
mov
cmp
lret
addr16
cmpl
push
jae
ja
xlat
sub
pop
fidivrs
ror
negl
pop
jno
jnp
dec
lret
mov
insb
sbb
sub
sahf
pop
pop
fsubs
mov
aaa
mov
adc
sub
xchg
insb
mov
aam
inc
sahf
dec
inc
push
xchg
or
add
int
addr16
testb
lret
xor
mov
imul
xchg
adc
add
out
fsubl
leave
lds
fildl
fs
shr
cmp
into
mov
sbb
pop
xlat
inc
adcl
or
mov
icebp
rcrl
mov
dec
mov
lret
adc
xchg
inc
rclb
dec
jne
rcr
pop
imul
stos
cld
mov
test
adc
or
movl
cli
clc
pushf
jae
or
xchg
inc
sti
in
mov
sahf
xor
iret
pop
mov
mov
jnp
mov
sbb
add
or
push
sub
sub
xor
hlt
test
nop
jecxz
testb
aam
xor
fs
xlat
jbe
lea
xchg
push
lods
or
ljmp
dec
or
sbb
pushf
cltd
push
lret
dec
sbb
add
cmp
mov
test
fisttpll
push
lea
fnstenv
xchg
sti
stos
fstpt
ret
xchg
xor
rorl
pop
popa
ljmp
mov
lcall
sub
dec
shll
add
outsl
ss
sbb
add
fxsave
lods
push
push
mov
lcall
bound
xchg
shl
sbb
mov
insb
add
scas
mov
cli
mov
cwtl
jns
push
push
sbb
add
fists
xchg
insb
xor
xchg
push
pop
mov
stos
xchg
jg
out
scas
adc
mov
bound
inc
pusha
mov
jg
sub
mov
jae
sbb
sub
ds
lcall
cld
in
xchg
inc
xchg
adcl
mov
fs
dec
push
fwait
rcll
nop
push
dec
dec
adc
jmp
movsb
sbb
mov
lret
mov
shlb
pop
or
mov
repz
adc
push
lret
xor
incb
fnstsw
rcll
insb
mulb
jb
and
ss
shrb
cmpsl
loop
addr16
jl
imul
pop
and
fstps
push
flds
jecxz
cli
xor
xchg
int
ror
sti
lret
popa
xor
insl
js
mov
adc
mov
test
sub
roll
jbe
lds
sbb
mov
incl
test
pop
mov
xor
repnz
xor
aam
imul
ja
xchg
jmp
jno
outsl
and
adc
sub
cmpsb
push
fsubrp
cmp
mov
in
inc
push
inc
lods
mov
dec
iret
icebp
movsl
sub
out
add
cltd
xor
dec
or
fnstenv
stc
roll
push
and
test
jle
cli
lods
aam
rorl
lods
adc
mov
dec
push
jnp
fldl
movsl
fs
adc
int3
roll
decl
out
xor
pop
in
and
xchg
pop
fisubs
lds
mov
and
or
pop
fistpll
in
push
jmp
lea
xor
test
ljmp
or
hlt
mov
cmpsl
cmp
insl
insb
movb
movsl
add
mov
and
inc
or
daa
fists
dec
lods
ss
mov
mov
jp
sbb
mov
pop
jo
mov
sbbl
into
jmp
out
mov
aas
adc
cmpsl
cmp
xorb
arpl
in
nop
ficoms
test
pop
out
xor
lods
vpmaddwd
ret
push
in
add
notl
test
sub
mov
mull
lea
pop
pop
add
daa
xchg
aaa
push
jb
and
cmc
stos
adc
stos
fwait
mov
sbbb
in
cld
addr16
lret
mov
je
stos
inc
lods
jl
dec
sti
ret
hlt
loopne
jnp
push
aaa
lea
adc
cmpl
add
adcl
pop
arpl
sbb
pusha
and
sub
test
dec
in
push
jne
and
inc
out
xor
mov
fwait
test
jmp
jge
mov
push
mov
mov
sbb
movsb
sbb
xchg
dec
add
dec
inc
pop
push
lock
rol
mov
push
das
push
ret
push
loope
jb
dec
dec
jge
mov
pusha
call
leave
test
jbe
and
sub
dec
movsb
ljmp
xor
ss
ljmp
pop
adc
cmp
fst
jge
add
cmc
sbb
adc
and
pop
cmc
js
fildll
cwtl
dec
lret
xor
les
imul
ja
lret
or
jnp
test
adc
sti
push
or
cmp
mov
jo
das
cmp
mov
int3
add
sbb
dec
dec
fidivrl
stos
sti
push
pop
fcoms
into
mov
xchg
out
mov
lret
sub
and
push
rcr
and
or
pop
and
in
xchg
pop
cmp
dec
loopne
loop
pop
fwait
mov
lret
fwait
or
rcll
push
xchg
in
sub
jne
flds
xchg
and
or
mov
push
addr16
popa
iret
fsts
in
rcrb
aaa
and
and
jl
adc
bound
add
jmp
mov
sbb
add
lret
mov
pop
and
fmull
jns
mov
hlt
inc
pop
into
jae
lret
test
mov
inc
or
rcll
les
addb
scas
loope
das
push
out
push
xchg
or
xchg
scas
add
push
incl
add
insl
add
gs
or
push
lret
mov
xor
arpl
push
mov
stos
fsubrp
fmull
mov
cmp
inc
pop
inc
insl
mov
cltd
push
or
data16
aas
push
pop
pop
or
mov
loop
je
dec
cmpsb
pop
movsb
cmp
add
xchg
pop
lea
stos
fidivrl
cmpsb
dec
dec
mov
xorl
in
jne
addr16
out
int3
sahf
pop
pop
dec
xor
in
lods
mov
cmp
cmp
and
ljmp
imul
jne
and
in
add
stos
test
sub
pop
pop
ja
xor
adc
fdivrs
push
lcall
xor
rcl
xsha1
cmpsb
or
sbb
fstpt
movsl
iret
movsl
mov
sbb
ds
cltd
ficomps
shlb
push
jecxz
pop
cmp
inc
sub
ljmp
clc
mov
mov
adc
add
es
repz
sarb
mov
xchg
mov
bound
adc
aad
pop
enter
or
repnz
std
xchg
imul
jp
aaa
mov
jge
pop
push
test
test
jne
out
pop
rcrb
add
aaa
pop
js
cmp
add
test
adc
xorl
pop
addr16
cwtl
sbb
push
movsl
in
lcall
inc
fcoms
pop
inc
jbe
ss
cwtl
int
cli
leave
xlat
scas
sub
cltd
jl
pop
int3
dec
mov
filds
aas
lret
add
ja
mov
and
movsb
fdiv
and
jae
inc
xchg
jge
pop
insb
cmp
pusha
clc
pop
xchg
sub
add
nop
cmp
icebp
loop
gs
je
push
xorb
mov
sbb
lock
scas
ja
dec
sub
cmp
insl
pop
popf
adc
mov
xchg
mov
leave
out
test
adc
xchg
movsb
inc
or
test
popa
xchg
xor
fstl
sub
ficompl
sbb
out
cmp
cmpsl
mov
sbb
aas
push
aaa
cmp
xchg
daa
inc
cmp
xchg
mov
cmp
roll
int
or
dec
fildll
adc
ret
push
cs
test
lds
add
jg
pop
mov
popf
xor
mov
push
adc
cvtps2pd
out
std
push
cmp
push
insl
dec
sti
push
idivl
ljmp
stos
add
inc
outsl
push
jns
loope
xlat
adc
lret
stc
pop
mov
inc
push
sub
push
push
loop
test
jb
mov
push
jl
xor
loop
inc
push
push
mov
jmp
xchg
leave
xor
or
sub
lods
sbb
fmul
pop
dec
xor
stc
xor
pop
bound
sti
jl
cmc
adc
pop
push
and
adc
andl
xor
jle
in
es
push
fucomip
sbb
scas
or
fpatan
addr16
xor
ss
push
pop
loope
out
sbb
jecxz
dec
dec
mov
cld
xor
test
adc
mov
or
jle
mov
add
inc
pusha
scas
sub
ret
pusha
cs
int3
pop
enter
cmp
into
imulb
int3
and
cld
stos
shlb
jno
xor
jmp
lea
adc
sbb
pop
dec
jp
fstpt
je
add
and
push
dec
pop
sbb
inc
outsl
loop
dec
or
xorb
inc
out
sti
shrb
push
add
stos
imul
dec
mov
xchg
pop
mov
gs
and
mov
or
xchg
andl
pop
lods
cs
sub
loop
add
dec
nop
dec
sarb
or
mov
test
repz
jo
jne
jmp
jg
cmc
or
imul
jbe
mov
and
xchg
ss
lret
lret
push
inc
add
mov
mov
jg
push
jb
adc
inc
fst
not
sub
andb
push
dec
cwtl
add
icebp
lcall
pop
and
in
cmovle
inc
or
pop
loope
sahf
pop
sarb
mov
stos
and
orl
in
jle
lret
push
mov
xor
adc
pop
push
mov
in
xor
cwtl
cmpsb
mov
and
dec
jecxz
dec
jns
cwtl
xchg
sub
sub
adc
js
pop
iret
jb
pop
sarb
sbb
addl
sub
mov
ljmp
add
je
cwtl
xchg
aas
jo
adc
mov
inc
arpl
cmp
push
test
mov
je
aas
jecxz
dec
ds
out
cmp
mov
fcompl
lock
stos
in
push
aas
fdivrl
fcomip
cmp
icebp
sbb
adc
repnz
jmp
and
test
es
push
cltd
int
ret
out
jp
lahf
pop
std
je
ja
lea
das
jns
xor
xor
push
adc
push
adc
vmovhpd
mov
imul
cwtl
test
movsl
add
js
pop
xchg
xor
and
daa
ret
mov
adc
cmc
jmp
stos
shrl
pop
mov
pop
add
add
mov
jno
insb
int3
sbb
adcb
dec
cmp
cltd
insb
pop
out
js
mov
jl
icebp
movsl
mov
fiadds
xor
mov
pop
repz
sub
loope
lahf
rorb
jmp
dec
mov
and
mov
adc
cmp
cmpl
sub
xor
ret
incl
je
xchg
push
push
pop
xchg
mov
mov
mov
mov
inc
pop
movl
daa
mov
ret
dec
pop
outsb
dec
push
js
push
int
mov
add
fstps
jbe
jmp
mov
jle
imul
mov
test
jp
and
xchg
pop
ja
jp
gs
movsb
lcall
leave
push
cmp
in
rorb
dec
rolb
mov
iret
mov
push
icebp
imul
mov
mov
movsl
outsb
add
xchg
cld
cli
sub
mov
mov
ret
stos
mov
aaa
sbb
xorb
pop
je
pop
ds
lret
push
test
outsb
loop
lods
jo
adc
loop
test
ret
imul
aad
fdivrl
xlat
outsb
push
ret
outsb
mov
cmp
jp
aam
aam
xlat
pop
jne
imull
sub
bound
outsb
rcrl
pop
ret
hlt
jnp
sbb
cmp
push
icebp
sbb
and
mov
xlat
add
push
mov
cltd
pop
push
pop
xlat
addl
or
dec
or
insb
outsb
mov
and
sub
fstl
test
das
adc
cltd
test
adc
pop
push
arpl
mov
stos
test
int
ds
out
push
sbb
mov
cltd
mov
rorb
leave
dec
fcomps
jb
ja
push
repnz
sti
xchg
jb
xlat
cmc
test
inc
add
mov
nop
in
inc
scas
mov
arpl
xor
pop
ds
mov
xchg
xlat
push
fldl2t
xchg
xor
cmp
stos
leave
pop
sub
xlat
mov
push
insl
adc
xor
loope
xchg
push
xchg
mov
jno
hlt
push
or
int
lods
sbb
mov
lcall
in
xor
jle
fsubrs
pop
or
or
push
repz
cmc
sbbb
mov
mov
outsl
xchg
scas
fwait
sbb
xchg
imul
dec
inc
jo
mov
insb
adc
cmpb
xchg
stos
roll
sub
mov
cmp
nop
mov
xor
inc
mov
sti
popl
enter
push
leave
mov
push
mov
std
xchg
jecxz
in
sti
add
out
or
cmpsb
les
inc
or
push
sbb
leave
pusha
adc
inc
pop
push
sbb
jg
gs
fsin
jmp
pop
call
rcrl
int
mov
cmp
push
shlb
int
cltd
xor
add
dec
cmp
sbb
pop
mov
jge
shll
iret
push
lea
ja
pusha
idivl
mov
test
and
add
adc
fwait
adc
adc
cmp
mov
adc
cmp
aaa
pushf
mov
std
xchg
mov
and
xor
jg
push
pop
sub
inc
pop
lods
and
outsb
in
xchg
jl
mov
scas
adc
sub
mov
test
adc
int3
pop
test
ss
xor
dec
addr16
jb
aas
fistl
call
add
aam
push
pop
pop
sub
mul
mov
pop
xchg
inc
pop
sbb
in
push
dec
leave
push
jae
cld
push
call
bound
mov
push
lahf
adc
cmp
xor
jp
adc
or
mov
xchg
xchg
retw
cs
movsl
mov
sbb
pop
rclb
in
incl
pop
fisttps
pusha
testl
ds
sub
pop
cltd
xor
dec
movsb
sub
mov
movsb
nop
lods
jae
mov
pop
inc
aas
sbb
push
stc
nop
dec
adc
lds
dec
arpl
dec
and
fldcw
xor
outsb
iret
push
sub
inc
mov
fninit
mov
xchg
sub
and
jl
cmp
lcall
push
jb
je
or
adc
hlt
jl
cmp
xor
or
out
sbbl
xchg
mov
sub
int3
ret
push
cld
jnp
pop
xlat
cmp
mov
test
push
inc
fisttps
insl
aaa
test
es
mov
jbe
mov
push
xchg
mov
test
test
jnp
cs
and
arpl
ret
jg
dec
pop
div
pop
pop
add
xchg
jge
mov
popa
loop
xor
lds
mov
loop
mov
mov
fcoml
mov
adc
bound
push
rcll
or
cmp
push
cmp
lock
inc
movsl
test
ja
dec
push
leave
inc
jge
ss
mov
ficoms
pop
or
sbb
pop
sub
pop
in
push
movsl
mov
sbb
jnp
xor
sbb
stos
pop
insl
sbb
ljmp
inc
pop
push
xorb
mov
or
ret
mov
int
push
jecxz
test
outsl
add
xchg
iret
lods
ret
insl
test
in
test
mov
mov
jbe
ss
push
jg
adc
lret
or
mov
or
inc
out
mov
outsb
mov
jb
popa
mov
dec
inc
mov
xchg
out
aad
fmull
sub
jno
add
jl
lea
pop
mov
cmpsl
ljmp
pop
daa
ds
inc
call
sti
fldt
ret
lret
daa
orl
es
pop
rol
jno
imul
in
sbb
jnp
lret
mov
in
int3
push
xchg
add
sbb
xchg
add
dec
jmp
sbb
xor
mov
and
fs
in
mov
pop
idiv
or
pop
jg
add
adc
out
mov
mov
fcmovu
jnp
lds
repz
insb
out
mov
xlat
sub
idivl
or
sbb
add
popfw
dec
in
scas
std
mov
mov
push
aaa
stos
jnp
jmp
ss
pop
bound
repnz
xor
pop
mov
dec
push
inc
loop
in
dec
xchg
mov
mov
inc
fnstenv
test
rorb
sahf
lret
inc
daa
mov
cld
xor
insb
jno
dec
ljmp
inc
xlat
js
cmp
addr16
sti
pop
mov
mov
sub
push
ds
xor
flds
pop
adc
into
sbb
mov
xchg
jo
inc
xchg
aam
fdiv
rcll
sub
adc
aas
inc
adc
nop
pop
inc
in
cmpl
mov
dec
sbb
inc
movq
repnz
sub
mov
out
outsb
xchg
sub
imul
cmp
das
sub
pop
push
cs
sti
cmp
outsb
sub
mov
es
inc
push
pop
clc
xorl
pop
stc
data16
into
andl
in
popf
cwtl
loope
xor
and
faddl
jp
mov
scas
inc
or
lock
stos
xor
out
arpl
orl
cs
xchg
std
cltd
fwait
mov
pop
lds
notl
cmp
in
and
cmp
mov
push
xchg
fists
sti
push
loope
or
cli
lahf
call
sub
push
adc
pop
mulb
iret
jge
jge
sub
fcoms
pop
shll
push
or
mov
jle
test
stos
inc
fidivl
in
inc
movsl
mov
cwtl
syscall
or
pop
cmp
in
fistps
push
fsubrs
mov
dec
fistpl
test
xchg
and
adc
inc
cmpl
adc
mov
stos
inc
sar
pop
jmp
xor
pop
shlb
scas
cmc
cld
jnp
jb
pop
movsb
jae
sub
lret
jae
int3
sub
test
cmpb
pusha
lea
cmp
cmpsb
jg
js
add
adc
pop
pushf
jno
add
xchg
xchg
and
sbb
jbe
or
xchg
sub
aas
aad
mov
pop
repz
mov
stc
adc
adc
dec
jecxz
push
hlt
or
lods
or
jne
movsb
mov
fs
and
addr16
lds
xchg
adc
adc
flds
out
push
repz
std
test
ja
push
test
push
jmp
cmpsb
fisubrl
mov
data16
mov
push
je
or
dec
dec
sti
push
push
fsubr
cmp
xchg
std
lahf
jo
adc
mov
outsb
mov
addr16
push
push
mov
aad
movsb
mov
jp
jl
dec
popf
xor
arpl
sarl
mov
inc
repz
sub
push
or
mov
xor
lds
movsl
ds
xor
push
xchg
push
aad
out
push
add
hlt
out
xchg
xor
jle
fwait
mov
jne
ljmp
stos
fmull
in
imull
or
leave
test
xor
test
mov
test
pop
icebp
pusha
pop
into
rolb
jle
cmpsb
mov
jg
fisttps
fcoms
in
rcrl
mov
mov
jle
fdivr
inc
int
xor
push
pushf
scas
or
push
lods
push
pop
adc
and
xor
add
xor
dec
push
jo
cmpsb
sbb
mov
inc
hlt
mov
lret
das
cmp
cmp
movsl
mov
js
xchg
negb
mov
iret
addr16
rol
cwtl
xor
popf
xor
sti
lcall
and
je
mov
jle
xor
dec
fnsetpm(287
push
pop
dec
fs
cmp
scas
mov
pop
mov
sbb
jb
in
sub
and
cmp
imul
into
ljmp
xchg
and
mov
sti
sub
mov
pop
add
and
fcompl
out
mov
test
outsb
outsl
sbbl
aas
je
das
andb
insb
mov
lods
cwtl
dec
aam
mov
out
outsl
xor
push
inc
cwtl
cmpl
xchg
or
add
lea
shlb
les
adc
in
test
std
and
lret
xor
inc
mov
out
rolb
aad
aaa
lea
popa
dec
iret
iret
xchg
xchg
dec
adc
aas
arpl
jmp
push
rcrb
pop
mov
roll
cmc
mov
sbb
adc
xchg
jp
add
add
into
movsl
xlat
ds
and
dec
dec
xor
sub
ljmp
or
xchg
ljmp
xor
cmc
xchg
test
leave
sub
inc
aad
and
fmul
loop
aam
and
mov
stc
add
xor
and
pop
push
dec
sbb
add
xchg
and
mov
push
xchg
fisubrs
xor
adc
in
mov
inc
xor
loop
les
sub
inc
in
ret
lock
call
mov
fdivr
addr16
fisubrl
jecxz
jb
mov
sub
cli
push
ret
rcr
roll
mov
pop
xor
mov
les
sahf
add
dec
mov
shld
pop
ret
std
in
jp
adc
cwtl
or
dec
lcall
xlat
pusha
sbb
push
cmp
cs
mov
dec
cmpsl
push
out
les
add
mov
repz
mov
or
sub
vmwrite
cli
sahf
dec
cmp
cmp
decl
and
pusha
movsl
imul
xchg
dec
push
icebp
imul
jmp
sub
xor
sub
inc
mov
mov
insl
nop
imulb
pop
test
outsl
sub
mov
pop
cmp
popf
push
jmp
in
pusha
mov
push
add
pop
je
gs
mov
and
jbe
insl
repz
inc
adc
into
lods
push
das
bnd
hlt
cmp
xlat
sub
or
and
mov
jge
insl
pushl
faddp
iret
adc
mov
dec
call
aaa
push
call
xor
jecxz
lods
lahf
into
leave
repz
out
sub
rcrl
push
xor
xchg
inc
dec
mov
or
cmpsl
call
das
pop
and
enter
mov
pushf
jns
push
repz
push
add
or
icebp
adc
pop
jg
jp
cld
mov
mov
mov
mov
push
sbb
ds
xor
aas
cmpsb
inc
fdivrl
scas
stos
mov
lea
negl
sbb
and
in
or
mov
xchg
rolb
and
adc
and
fwait
loopne
pushf
repz
mov
ret
adc
js
sahf
and
sbb
dec
scas
sbbl
aam
int3
xchg
outsb
fnsave
flds
mov
xchg
js
scas
insl
in
or
and
add
test
loop
mov
cmpsl
adc
cmpsl
push
lods
fisttpl
js
push
scas
imul
les
leave
pop
adc
fiaddl
or
jb
adc
cmc
or
dec
or
stc
jnp
mov
sbb
dec
cmp
adc
xor
clc
adc
gs
and
in
jo
push
xlat
push
aad
int
pop
cs
mov
dec
leave
pop
pop
test
sbbb
lret
std
jnp
ljmp
and
inc
cmp
jmp
fnstenv
jmp
movsb
jl
pop
pushf
jmp
xchg
push
add
mov
or
cmp
mov
add
dec
cmp
cmc
mov
mov
fwait
adc
imul
xor
inc
adc
adc
xor
sbb
cwtl
test
mov
or
jae
fisubl
xchg
xor
mov
daa
fdivl
scas
jns
rolb
outsb
pusha
and
inc
push
or
push
sub
outsb
rcll
je
es
adc
sti
jo
sub
inc
aad
sti
pop
pop
sub
outsb
cmpsl
xchg
jno
dec
test
mov
xchg
cmp
jb
sbb
push
stos
add
loop
jb
sti
pop
loope
jno
rcrl
cmp
dec
out
sub
shr
imul
xchg
xor
inc
cmp
stos
cs
push
pushf
inc
pushf
dec
cmp
movsl
sbb
lret
addr16
dec
in
or
push
jmp
xor
icebp
enter
mov
test
pop
movsl
arpl
jle
in
je
adc
push
cltd
add
jbe
inc
sahf
cltd
sub
and
cli
inc
pop
adc
stos
pop
stc
xchg
popa
mov
push
clc
lock
dec
hlt
inc
cmp
jecxz
adc
xor
xor
jnp
pusha
outsl
shr
nop
sti
fwait
es
sbb
sahf
dec
sbb
xchg
inc
lods
inc
stos
lret
iret
mov
lahf
lea
bound
jp
and
mov
lcall
mov
in
daa
shlb
add
stc
mov
outsl
scas
jecxz
loope
pop
mov
fldcw
sub
push
mov
push
pop
sbb
imul
adc
cld
cmp
pushf
shll
les
adc
insb
negb
arpl
pop
jns
dec
rorl
shrb
jecxz
mov
pop
sub
mov
xchg
scas
in
pushf
and
mov
dec
inc
pop
hlt
daa
mov
push
rcrl
push
mov
popa
stc
mov
testl
inc
clc
daa
repnz
pop
enter
addr16
inc
addr16
ret
clc
cmp
mov
ret
cmp
lcall
and
add
push
xchg
push
xchg
dec
inc
std
mov
outsl
inc
mov
lods
mov
xchg
repnz
jle
add
fists
inc
stc
mov
push
fbld
dec
fwait
scas
jle
push
out
xchg
repnz
pusha
xchg
add
or
sub
loopne
popa
mov
scas
lods
pop
push
sub
jb
stc
add
aaa
out
scas
inc
loope
mov
inc
dec
mov
push
imul
lods
enter
lods
mov
fildl
add
stos
pop
nopl
loope
bound
sbbb
insb
add
out
add
xchg
fists
mov
fcoms
mov
out
inc
fldpi
ds
push
lods
mov
xor
icebp
mov
popf
or
shll
jecxz
orb
pop
mov
jp
jo
shrb
sarl
call
into
push
ljmp
push
mov
mov
popa
pop
outsb
fdivrl
xchg
dec
jb
mov
add
loope
ret
jnp
xchg
fisttpl
xchg
sbb
ss
in
cmp
loop
mov
mov
scas
lock
adc
out
lds
outsl
sbb
push
out
inc
cmpsb
test
test
cmp
xorl
fisubrs
inc
scas
inc
xlat
and
in
add
push
fsubr
dec
jae
cwtl
cwtl
mov
in
mov
dec
xor
mov
jno
fwait
sub
xchg
push
push
mov
jb
imul
jle
xchg
mov
jae
in
cmp
xchg
pop
dec
add
dec
mov
fcoms
sub
in
adc
or
or
lret
bound
mov
cmp
jo
les
lods
bound
inc
int
loop,pn
dec
gs
imul
or
aad
icebp
inc
inc
mov
add
out
mov
in
cmpsl
repnz
repz
nop
push
and
adc
fstps
mov
insl
cmpsl
int3
xor
sbb
push
call
lock
pusha
test
iret
inc
add
add
lock
pop
mov
add
and
rclb
push
xlat
push
nop
popa
adc
int3
in
not
or
sbb
inc
repz
jns
and
mov
mov
out
je
jnp
out
inc
movsl
or
out
inc
enter
dec
fists
fucomip
leave
jbe
and
and
out
inc
add
sarb
int3
jnp
adc
clc
xor
and
jae
bound
inc
idivl
in
ret
pop
divb
cmp
mov
and
mov
hlt
adc
bound
jmp
adc
lods
jmp
les
pop
mov
jnp
push
xchg
ja
inc
stc
xor
lret
xchg
pop
in
inc
push
in
loop
sub
sub
test
adc
or
push
mov
fcmovu
xor
sbb
xchg
cmpl
or
pop
pop
sbb
cmp
out
xlat
mov
and
mov
mov
call
sbb
and
push
mov
add
cmp
sarb
cs
jbe
pop
stos
pop
add
clc
dec
and
or
mov
sub
lock
cmpsl
fbld
fwait
add
add
push
push
fs
sbb
cmp
lret
fcomps
rorl
sbb
cmc
pop
xor
xor
adc
push
add
or
dec
loope
notb
call
movl
pusha
test
xor
sub
aam
out
loop
aaa
into
push
call
mov
and
clc
js
sbb
imul
std
bound
daa
call
dec
pop
push
addb
mov
cwtl
les
std
mov
idivl
out
push
pushf
aaa
out
popf
bound
pop
and
test
ficoms
xchg
add
mov
scas
les
inc
jno
jmp
sarb
fldcw
and
and
mov
icebp
cld
lret
push
jo
shrb
lods
aaa
sbb
add
pop
jle
stos
pusha
jb
lcall
stos
fidivrl
push
sbb
test
cmp
jecxz
push
sub
cmpsl
out
out
jnp
push
inc
mov
xor
cmp
clc
pop
xor
cmpl
das
in
xchg
jb
or
xchg
sti
mov
lret
pop
mov
add
jmp
int
leave
test
sbb
lods
jno,pt
dec
mov
shr
mov
imul
scas
cmc
cmp
jno,pn
sub
push
jnp
sarb
pop
mov
mov
scas
mov
cltd
and
je
xchg
cld
mov
sub
or
xor
shl
xchg
mov
stos
es
or
nop
das
inc
pushf
scas
dec
pusha
cmp
outsb
ss
mov
xor
pop
and
dec
mov
sbb
cmc
sbb
mov
pop
mov
out
insb
scas
dec
loopne
sub
stos
push
addr16
cwtl
xor
shrb
icebp
dec
jl
icebp
adc
out
test
or
ja
cmp
loop
pminsw
sbb
imul
out
dec
inc
int
push
fists
mov
push
ljmp
lcall
pop
stc
xor
sub
inc
xchg
pop
fstpt
fcmovnb
lock
bound
mov
adc
adcb
ret
and
xor
sahf
stos
or
xchg
xchg
sub
inc
push
jge
push
repz
or
in
imul
test
or
adc
mov
ja
sub
push
js
sub
repz
cmp
test
jl
arpl
sub
hlt
ja
lahf
rcrl
xchg
mov
or
adc
and
and
fcompl
jnp
in
ret
incb
mov
jmp
notb
in
lods
popf
and
fsts
or
xlat
mov
pusha
pop
in
mov
mov
dec
lcall
add
pop
fwait
aam
shlb
lahf
testl
imul
sti
cmp
dec
cltd
pop
mov
or
cltd
xor
xor
out
popa
xor
imul
mov
mov
mov
and
lds
inc
sahf
int3
inc
jp
mov
es
popf
mov
adc
dec
les
mov
popa
and
add
subb
cmp
scas
test
jle
jle
sbb
adcl
loope
scas
inc
aas
push
jno
movsl
cmp
ja
rol
mov
adc
pushf
test
jb
pop
xlat
push
mov
dec
mov
repz
mov
push
mov
idivl
loop
mov
stos
or
or
fstpt
mov
dec
mov
or
mov
mov
adcl
mov
fcmovbe
sbb
add
cmpsl
or
js
daa
arpl
imul
pushf
popa
call
dec
movsl
out
or
cwtl
push
outsl
ret
sarl
mov
sbb
loope
dec
mov
xor
dec
out
sub
outsl
aam
fucomp
fnstenv
jae
xor
mov
xchg
pop
push
push
mov
xchg
cmc
mov
or
or
je
or
xchg
adc
and
fwait
xor
out
insb
dec
les
dec
out
add
jl
xor
shrl
repz
jo
adc
xor
xchg
jmp
fwait
xor
add
shl
push
in
repnz
scas
jae
cmp
add
shrl
push
sub
gs
addr16
pusha
mov
push
ret
loope
insl
icebp
push
icebp
mov
jecxz
or
call
push
pop
mov
dec
pop
mov
inc
in
jb
lcall
mov
and
les
push
stos
xchg
mov
rorl
ficoml
jmp
xchg
out
inc
jae
sti
push
outsl
push
cmp
jo
test
jbe
icebp
inc
fwait
ja
add
rcr
jbe
xchg
pop
push
inc
and
inc
sbb
das
aas
fndisi(8087
sti
or
lds
lds
mov
push
lcall
jne
jmp
sbb
adc
push
in
dec
cmpb
sbb
fidivrl
pop
rorl
push
into
lcall
lret
mov
into
push
into
rcll
add
addr16
push
test
cli
fldenv
orb
dec
sti
xchg
adcb
cmp
sbb
push
xchg
stos
jae
fnsave
push
movsl
fildl
imul
and
xchg
arpl
es
or
pop
mov
loope
sbb
mov
add
inc
iret
jb
push
cmp
push
test
cmpsl
xor
or
rcrl
in
gs
gs
xchg
fidivrs
push
shl
mov
fstl
loopne
cld
ss
in
clc
mov
cli
mov
inc
incb
sub
repnz
cltd
mov
lods
std
inc
cs
pop
mov
frstor
sbb
push
cs
xchg
test
imul
push
push
push
lods
push
cli
adc
xchg
push
inc
fildl
cmpsl
mov
mov
xchg
pop
xor
sub
mov
icebp
dec
or
sub
push
cmp
js
arpl
xor
ljmp
stos
pop
push
xor
mov
nop
shrl
arpl
jne
int
in
pushl
xchg
add
dec
mov
dec
xlat
fmuls
rorb
aaa
fadds
sahf
or
xchg
enter
scas
jmp
pusha
lahf
mov
fisubs
jo
push
push
jno
or
xor
cli
stos
lds
xor
mov
mov
outsl
adc
leave
arpl
inc
fstpt
fsubl
les
test
movsl
repnz
shlb
mov
xchg
push
ja
outsl
fcmovnb
cmp
push
cmp
dec
pop
out
xlat
xor
mov
jae
xor
add
mov
push
adc
sbbl
in
pop
out
mov
jns
je
cmp
shr
and
out
mov
mov
cmc
stos
inc
daa
sub
and
leave
xlat
ret
push
rcrl
movsb
repnz
sub
aaa
outsl
jnp
stc
lock
mov
lock
mov
pop
and
adc
icebp
add
xchg
fwait
mov
sbbb
lahf
sub
hlt
inc
pop
mov
addb
adc
mov
sbbl
pop
sbb
sbb
add
cmp
popa
out
ret
shll
inc
lret
and
insb
test
dec
rclb
inc
add
xchg
ds
filds
test
push
jp
rcr
pop
test
add
mov
mov
dec
arpl
out
roll
shlb
aas
push
cs
lret
bound
dec
loop
xchg
imul
jmp
push
mov
and
daa
fistl
mov
pop
adc
cmpsl
inc
daa
adc
jo
mov
cwtl
sub
loopne
cmpsl
fwait
mov
enter
loop
std
lret
fwait
jge
jo
mov
clc
push
and
dec
pop
inc
cld
xor
xor
daa
mov
mov
inc
rcll
xchg
mov
js
mov
jo
adc
inc
aaa
cmc
fdivrl
jnp
sbb
in
enter
push
sbb
inc
jae
hlt
xchg
mov
out
push
jnp
ljmp
cmpsl
dec
arpl
lods
and
sbb
pop
inc
xor
mov
lcall
sbb
pop
dec
add
insl
outsb
dec
dec
ret
pop
imul
and
jo
inc
xchg
cs
das
int
sub
pop
mov
cmpsl
call
test
lds
lods
dec
xchg
mov
xchg
sub
jbe
adc
out
mov
inc
push
je
loope
mov
sbb
push
andb
cmpsb
pop
addl
imul
jge
ss
adc
addb
jno
andb
nop
xor
or
pop
lock
add
aad
rcl
jno
xchg
sub
xchg
enter
cs
ja
mov
aam
lret
icebp
jl
out
lcall
mov
insl
push
test
xchg
repnz
shl
mov
push
stos
ret
pop
jl
xor
nop
and
nop
jae
iret
outsb
adc
mov
mov
das
xchg
nop
sub
add
xor
inc
inc
inc
inc
fwait
xor
and
sbb
sbb
shl
push
mov
sub
push
push
imul
repnz
out
jle
lret
pop
jl
and
mov
jb
idivb
pop
in
cmc
and
data16
movsl
testl
cmp
es
xor
pop
aaa
ss
dec
pop
sbb
pop
stos
aam
and
icebp
out
inc
jne
inc
pushf
or
and
mov
stos
sbbb
or
sub
fbstp
hlt
cmp
pop
mov
icebp
jo
and
fsubl
sbbl
pop
mov
clc
loopne
jle
aaa
or
pop
cwtl
xchg
insb
pop
popa
sbb
push
xchg
repz
push
push
jnp
pop
xor
sub
or
or
xor
xchg
aas
dec
subl
dec
loope
xlat
sub
pop
ds
mov
ljmp
mov
jecxz
nop
mov
das
pop
pop
adc
sub
push
cmc
cltd
add
iret
in
je
jne
or
bound
popf
xchg
clc
mov
sbb
push
aam
std
mov
push
xor
bound
inc
push
pop
pop
push
jmp
clc
pop
cli
inc
jl
pop
mov
fimull
jle
xorl
push
movsb
cmp
inc
mov
enter
adcb
sbb
xor
jmp
paddusw
and
sarb
xchg
xor
inc
adc
xor
sbb
mov
add
mov
fwait
test
out
mov
in
xchg
scas
mov
pop
icebp
jmp
and
jae
xchg
pop
xor
adc
and
mov
jg
push
xchg
or
mov
jae
jp
cmpsb
cltd
adc
popf
adc
sub
xchg
add
sub
jg
rclb
pop
ja
loope
std
add
es
sub
out
inc
pusha
cmp
nop
std
enter
or
mov
or
in
cmc
out
aam
mov
dec
mov
adc
xchg
lods
cmp
or
jecxz
es
popa
dec
in
test
mov
ss
int
and
push
jecxz
mov
dec
xchg
fdivrs
mov
lret
outsl
call
stos
ljmp
imul
xchg
mov
mov
in
push
jae
inc
sahf
pop
or
out
xchg
cld
sub
in
cmp
leave
and
repz
push
add
cmpsb
adc
adc
and
xor
js
fdivrl
pop
ja
stos
das
out
pusha
lcall
xchg
xor
enter
nop
aad
xor
pop
lcall
sbb
push
aam
jns
mov
xchg
dec
popa
hlt
sub
sub
push
and
sub
pushf
dec
popf
mov
dec
sub
jns
ret
jnp
call
nop
sahf
push
stos
cmc
std
jbe
iret
xchg
mov
cmpsl
adc
movsl
add
ret
push
je
push
popf
dec
sbb
popf
push
aaa
push
xchg
test
add
mov
sbb
jl
xchg
pop
loope
cmpsl
fwait
push
mov
icebp
ds
insl
addr16
popf
pusha
push
jl
fldl
fisubl
or
jecxz
push
fsubs
ret
or
loopne
sbbl
out
mov
es
jg
into
insb
aam
mov
cltd
add
mov
jge
mov
push
aam
push
hlt
pop
repnz
jns
push
mov
fs
adc
fildl
in
ret
fs
adc
test
leave
dec
sbb
lods
jns
mov
test
das
add
mov
pop
arpl
add
lea
aaa
xchg
pop
jne
das
cmp
cs
inc
cmc
scas
pop
or
push
sar
nop
insl
fstpl
jg
inc
mov
das
adc
mov
jbe
test
mov
cmp
aas
call
jo
cmpsb
out
decb
sub
mov
xor
lods
add
sbb
fnstsw
add
lret
lret
and
hlt
pop
push
in
mov
ret
sub
incl
movsl
xor
mov
mov
je
decl
dec
xchg
cmp
nop
adc
mov
pop
mov
jo
addr16
jnp
xor
inc
mov
gs
pop
adc
dec
mov
mov
scas
inc
or
jmp
aaa
imul
inc
xchg
lret
and
inc
call
mov
orb
outsb
cmp
es
jge
xchg
pop
add
nop
pop
in
cmpsb
outsb
jl
shrb
test
ret
es
push
loope
inc
repnz
enter
push
sbb
mov
mov
cmp
push
xor
js
jp
lret
mov
ret
mov
jmp
push
fcmovb
lea
pop
xchg
pop
jge
lea
cmpsb
mov
fwait
cmp
fdivrl
roll
sub
sub
arpl
movsb
rcl
pop
adc
xchg
ret
addr16
pop
mov
jns
fisubrl
inc
pop
and
sbb
xchg
icebp
mov
adc
loope
jb
cmp
mov
insb
jecxz
and
pop
adc
mov
add
mov
push
fidivrs
rorl
push
loope
out
lahf
sbbl
out
mov
jecxz
and
push
mov
xchg
and
jecxz
popa
jne
xchg
cmpsl
orb
jl
outsb
sbb
sahf
pop
add
inc
mov
inc
fimuls
lret
mov
es
in
inc
andb
jmp
ja
push
cmp
mov
inc
jmp
dec
push
push
cmp
pop
cmpsb
jmp
js
or
xchg
sbb
int
jl
adc
iret
rcr
mov
inc
jmp
lea
ljmp
xor
xor
sbb
mov
jmp
aaa
mov
xchg
repz
add
leave
cmpsl
sar
or
mov
and
fisttps
push
pop
jb
sub
add
mov
sarb
or
loop
jp
adc
hlt
adc
stc
jnp
scas
pop
jae
rorl
or
and
popa
xorb
cmc
xchg
xor
mov
cmp
pushf
call
bound
push
into
cmp
mov
rclb
divb
inc
out
or
jecxz
arpl
pop
imul
test
push
jmp
stc
jae
sub
fiadds
hlt
shld
ret
hlt
leave
das
cli
adc
int
sbbb
cmp
pop
add
sbb
or
adc
xchg
lcall
and
dec
hlt
mov
fnstenv
sub
jge
mov
stos
cmp
jle
lret
ret
mov
push
push
fwait
mov
cli
push
xchg
add
data16
lret
adc
mov
and
add
pop
dec
or
inc
incl
mov
popa
adcb
fldpi
sub
or
in
std
xor
out
ljmp
mov
push
scas
xchg
jmp
sarl
xorl
jge
orl
and
jmp
imul
xchg
mov
addr16
jae
dec
rol
ret
add
andl
in
mov
inc
mov
xor
jg
jo
cmc
and
out
jge
std
xchg
adcb
add
jae
adc
shrl
jecxz
stos
fwait
fwait
shrb
mov
dec
adc
sbb
push
jno
rol
popf
sahf
cwtl
outsl
rorb
adc
in
lods
cwtl
mov
xor
or
aaa
pop
inc
lock
stos
pop
mov
inc
out
xor
jns
inc
inc
inc
adc
cmp
mov
xchg
das
push
or
daa
movsl
mov
in
jge
in
xlat
ficoml
mov
mov
jns
inc
into
lcall
jae
mov
cmp
popa
mov
aad
sbb
sbb
shlb
pop
add
jge
push
or
push
fwait
pop
pop
and
test
sbb
cmpsb
xor
pop
cmpsb
dec
in
sub
jno
add
outsb
idivl
adcl
adc
push
fadd
xor
dec
dec
dec
cli
jp
sbb
mov
dec
scas
cmpsl
filds
stos
lahf
shlb
mov
push
mov
adc
add
cmp
adc
aas
jmp
mov
lods
cmp
jb
pop
xor
gs
and
andps
std
dec
test
push
push
sub
test
cmpsl
mov
mov
xchg
and
mov
cmp
xor
push
andl
lahf
lcall
lgdtl
mov
enter
fwait
cmp
jnp
movsb
mov
dec
sub
mov
mov
rolb
xchg
int3
faddp
jns
adc
adc
jl
mov
push
addb
inc
jle
jbe
cs
pop
add
aas
mov
flds
adc
push
int
mov
cld
cmp
daa
push
imul
das
cmpl
dec
jns
out
jbe
mov
add
inc
push
repz
fcmovne
out
cmp
clc
fs
dec
mov
out
dec
adc
in
lods
xchg
cmpsl
jbe
pop
mov
lds
dec
and
sbb
mov
clc
xchg
jl
hlt
pop
adc
das
pop
cmpsl
aam
add
dec
xchg
lahf
push
push
and
shlb
mov
push
xor
adc
sub
call
xor
pop
add
mov
loope
adc
jno
push
push
fidivrl
inc
loop
push
mov
ja
xor
pop
or
lret
sub
jmp
in
pop
sub
je
bound
mov
or
cmp
aas
into
mov
jo
lea
mov
xor
xchg
out
adc
pusha
and
and
sti
xchg
jecxz
sbb
xor
pop
fiaddl
stos
mov
leave
mov
aam
push
add
or
out
in
andb
pop
sbb
mov
in
test
jb
stc
addr16
or
mov
pushf
jle
test
mov
push
enter
ja
ds
dec
xchg
pop
clts
scas
nop
lods
test
lret
loop
push
jmp
pop
xor
mull
andl
je
pop
imul
jno
cmp
jb
mov
jmp
jo
adc
mov
push
fnstenv
into
lret
mov
icebp
pop
push
mov
sbb
mov
loope
jge
and
fldt
pop
sub
fbstp
fmulp
nop
add
jl
in
xlat
lods
inc
inc
ret
bound
mov
in
mov
loope
clc
jecxz
push
scas
jae
adc
test
aas
clc
movsl
mov
xor
push
daa
mov
pop
and
and
add
outsl
jb
cmpsl
push
pop
push
cmpsl
jge
cmp
add
das
or
jle
sub
inc
pop
repz
insb
push
jmp
cmc
mov
mov
sbb
js
out
clc
test
mov
fidivl
or
pop
sbb
lcall
mov
pop
cmp
xchg
icebp
pop
cmpsb
sub
cmpsb
sbb
or
and
jno
aas
dec
enter
push
rcrl
jns
out
xlat
outsb
jg
mov
movsl
push
stc
shrl
xchg
mov
jno
jle
cmpsl
aam
xchg
pop
loope
lea
inc
std
out
pop
imull
xchg
imul
clc
xchg
mov
div
dec
shlb
scas
pop
push
cmp
dec
cmp
scas
call
adc
or
mov
jl
dec
jbe
sub
scas
inc
mov
xlat
adc
js
call
scas
jp
fs
mov
cmp
mov
std
xor
inc
cs
or
insb
mov
out
insb
jmp
sub
out
xchg
push
push
xor
es
inc
arpl
and
jl
dec
lret
xchg
mov
jne
sbb
dec
mov
xchg
out
cli
pop
mov
sbb
and
enter
push
add
sbb
imul
push
stc
aas
lret
sbbl
add
mov
push
aaa
stos
cmp
cmc
addr16
push
sub
dec
scas
cmp
leave
sub
cli
and
and
cmc
pop
repnz
cwtl
xchg
sub
mov
int
inc
mov
cld
sarb
xchg
stos
inc
adc
sbb
call
out
int3
and
sub
sub
shl
jae
mov
in
lds
and
or
mov
push
js
arpl
es
ficoml
mov
mov
ds
int
and
mov
add
xchg
jmp
xchg
test
jp
push
lcall
push
js
es
adc
add
sub
int3
mov
lock
cmp
jb
mov
mov
test
dec
lret
data16
mov
imul
out
scas
out
xchg
cmp
dec
cmp
out
xchg
dec
push
mov
push
fdivrp
rorb
xor
sub
push
inc
pop
lock
and
mov
mov
add
insb
inc
mov
dec
rol
incb
dec
sbb
mov
dec
cs
add
negl
xor
jb
mov
xchg
adc
mov
jl
mov
lock
fistpll
sub
add
xchg
cmp
lock
mov
sti
lcall
scas
jne
pusha
and
xchg
sub
mov
mov
xor
int3
mov
cli
mov
add
pop
adc
jns
lods
and
cld
xor
stos
dec
aam
mov
notb
and
rclb
cmpsl
dec
bound
icebp
outsb
push
pop
adc
hlt
nop
jno
roll
sub
pop
push
in
nop
or
test
call
xor
bound
shr
mov
and
add
xlat
pop
lcall
test
xor
cmpsl
ret
inc
stc
lods
add
andl
rolb
push
xor
mov
sti
or
add
sahf
sbb
clc
daa
pushf
jno
jb
mov
mov
mov
lods
aad
cmp
pop
dec
loopne
fwait
cmp
dec
lods
cmpsb
aas
pop
push
adc
xor
and
je
lods
fwait
inc
test
call
fidivs
js
inc
aas
jecxz
jp
ja
cmp
outsl
sbb
jo
xor
inc
push
aaa
push
add
out
dec
stos
fidivrl
jecxz
xor
cmp
xchg
jnp
iret
and
faddl
and
or
jp
adc
lret
sti
sbb
push
lock
xor
sbb
xchg
mov
push
pop
adc
mov
jo
sub
test
arpl
ljmp
and
mov
lahf
jle
repnz
mov
into
aam
int3
cmp
mov
jno
mov
cmp
pop
in
sahf
insl
stc
sbb
inc
fstpt
in
ret
scas
jmp
mov
adc
popf
je
sub
pop
imul
adc
jg
mov
int
push
sti
imul
dec
adc
fnop
insl
mov
aam
js
and
call
sti
pop
jne
mov
adc
insl
sub
add
adc
xchg
adc
popf
lods
imulb
cmp
add
int
roll
movsb
add
mov
mov
dec
xor
das
aas
and
xchg
jecxz
test
add
cmpsl
cmp
xor
aas
pop
fwait
or
loop
decb
adc
xchg
lcall
mov
or
test
or
in
pop
cli
test
push
loopne
dec
cmpsb
or
fsubrs
jmp
fwait
lods
and
lret
or
ret
jae
loope
cmc
pop
jl
sbb
nop
roll
sub
xor
inc
das
pop
dec
xlat
aas
push
pop
jbe
inc
arpl
cld
add
jb
adc
stc
imul
dec
or
imul
or
xchg
mov
std
adc
cs
push
mov
add
sbb
mov
inc
mov
add
outsl
ss
lret
inc
scas
idivb
leave
lods
in
pop
add
mov
aaa
cmc
adc
testb
sub
movsl
mov
daa
fstl
data16
jecxz
insb
pop
lcall
lret
and
cmpsb
pop
mov
pop
ljmp
push
in
cs
into
or
push
cmp
push
push
pop
push
push
iret
mov
sbb
fisubs
loopne
orl
jns
cmp
or
jnp
addl
dec
pop
test
es
aam
sub
notl
cmp
push
cmc
sbb
aas
push
stos
xor
out
cmp
js
jno
adc
mov
mov
sub
clc
dec
aaa
push
jg
xchg
mov
jl
cld
lea
mov
xlat
das
addr16
clc
adc
ss
cmovbe
mov
or
gs
jmp
jmp
mov
adc
jbe
mov
inc
and
scas
mov
mov
les
pusha
jp
jb
test
jne
inc
adc
pop
push
jb
jecxz
or
cmpsb
out
jge
data16
rcll
aas
outsl
rclb
add
mov
rcrl
out
mov
xchg
add
test
jb
sub
roll
xor
mov
dec
xor
inc
push
dec
xchg
fdiv
push
jmp
push
outsl
stc
dec
xchg
add
push
xchg
push
or
test
sti
jbe
ss
rorl
inc
pop
push
mov
xlat
es
in
inc
mov
xchg
mov
dec
ret
pop
push
cmc
cmp
xor
mov
xorl
scas
pop
and
hlt
xchg
mov
sti
scas
xor
ficoml
clc
or
or
xor
mov
jmp
test
push
mov
mov
sbb
mov
xor
mov
arpl
aaa
jge
push
arpl
add
mov
les
iret
jbe
shll
popa
std
or
jbe
dec
rorl
imul
sbb
cmp
mov
fiadds
pop
sub
and
push
sbb
sbb
sub
mov
xor
inc
dec
push
in
xor
jnp
jge
loopne
and
xlat
mov
pusha
pop
mulb
add
add
pop
cmc
daa
aas
popa
jl
sub
test
and
cmp
dec
daa
sbb
mov
mov
mov
sarl
pop
andl
lock
inc
loope
cmp
bound
sub
int3
pop
jmp
push
sub
popl
or
stos
xchg
rorb
mov
ffree
scas
nop
dec
or
adc
leave
scas
mov
lcall
pop
jnp
sbb
inc
pusha
jmp
out
ret
xorb
sub
mov
shrb
dec
lcall
lret
leave
push
fwait
push
pop
cmc
cmp
ss
and
dec
dec
sbb
inc
orb
mov
jne
inc
pop
xchg
fyl2x
hlt
jle
jae
icebp
adc
cmp
es
fildl
ret
adc
add
xor
mov
mull
inc
sbb
cmp
xor
pop
push
popa
add
xorb
loope
jns
cmp
repz
out
and
stos
push
and
sub
and
shl
cmp
scas
testb
movsl
sbb
xchg
dec
popa
mul
mov
jmp
sbb
and
in
sub
dec
shll
into
jle
arpl
sbb
pop
push
mov
jbe
mov
push
mov
popf
cmp
clc
cmpsl
movsb
mov
stos
dec
sbb
mov
adc
or
fwait
test
ja
mov
jae
repz
in
and
in
data16
pop
in
les
test
jae
mov
stc
call
repnz
loopne
xchg
fcmove
repz
loop
in
add
cli
cltd
stc
ss
push
sahf
std
push
xorb
stos
call
lcall
cmpsl
ds
dec
stc
or
push
dec
iret
xor
dec
aam
lret
out
cmpsb
or
pop
lds
dec
std
lds
roll
shlb
push
add
repnz
scas
mov
mov
mov
ret
daa
dec
xlat
repz
ja
fiaddl
cmp
dec
xchg
es
push
pop
mov
and
dec
dec
add
adcl
or
xchg
jnp
sahf
jnp
push
mov
or
mov
mov
in
pop
outsl
test
adc
push
and
pop
sahf
xor
adcl
clc
repnz
jno
add
rclb
lods
pop
or
sub
lret
jecxz
mov
xchg
inc
pop
and
xchg
mov
fwait
and
push
xor
movb
xchg
mov
xchg
fstpt
shll
out
cmp
push
mov
xchg
fldenv
negl
xor
lds
das
sub
aam
fimull
lret
xchg
mov
adc
jns
dec
negb
shl
mov
movsl
ds
mov
cwtl
das
mov
sub
xchg
in
es
lods
fs
pop
sar
push
push
jmp
outsb
fsubr
push
push
nop
jp
push
xor
loop
dec
adc
pop
inc
inc
sbb
repz
fildl
or
mov
push
imul
mov
test
pop
scas
lock
testl
pop
xor
out
xor
cmpsl
or
in
movsb
fwait
xchg
rorl
cmpsb
loopne
cld
push
mov
bound
inc
sbb
icebp
xchg
cmp
imul
or
adcl
shll
data16
shrl
mov
scas
push
mov
xchg
and
pushf
int3
les
cmc
xorb
cld
shrl
pop
repnz
icebp
fwait
sti
mov
mov
jmp
jne
and
push
arpl
stos
arpl
cmpb
and
insl
adc
inc
mov
stos
lahf
push
inc
inc
out
daa
xchg
sub
pop
cs
rclb
ljmp
xchg
push
subb
cmpsl
insl
or
dec
jg
ret
bound
adc
sub
cmpsl
mov
shl
flds
scas
jno
stos
inc
add
ss
or
pop
addr16
imul
sbb
xchg
adc
inc
roll
mov
call
popa
mov
lahf
imul
mov
frstor
fadds
xchg
imul
shl
jecxz
iret
in
and
push
adc
cmp
xor
mov
test
pop
shlb
test
mov
in
aas
ja
in
xchg
mov
pop
mov
jge
sub
mov
out
xchg
test
lods
jl
adc
pop
jne
aad
push
adc
mov
xor
js
xor
sub
push
sti
shlb
pop
or
aaa
fdivrl
leave
fldt
push
mov
stc
je
test
shlb
cmp
std
adc
add
repnz
out
mov
lret
inc
dec
dec
shl
sub
out
or
xchg
lods
dec
sbb
pop
jp
cmp
xrelease
cltd
call
int
lret
push
jmp
sub
loop
test
int3
fnstenv
pop
cmpsl
jp
fsubrs
in
jge
sar
imull
inc
ror
sbb
add
iret
test
pop
jno
cmp
out
jbe
push
test
adc
ss
aam
mov
push
call
sbb
outsl
sti
push
mov
out
xchg
inc
ffree
lahf
repnz
cmc
push
gs
lret
sbb
cmp
jmp
dec
pop
push
or
es
pop
jle
mov
cmc
loop
dec
fiaddl
cmpsl
pop
in
xchg
stos
pop
vpshufhw
cmp
out
jg
xor
call
sti
xchg
push
mov
adcl
add
ja
sub
movsl
cmp
cmp
int
jge
cmc
or
xchg
pop
ret
adc
or
lock
es
fwait
push
lock
cmpsb
sbb
aaa
leave
mov
les
xchg
repnz
jnp
insl
adc
pop
cmpsl
pop
aaa
scas
cld
hlt
test
dec
inc
lret
mov
loope
inc
imul
jns
jp
jmp
iret
fwait
arpl
inc
out
jno
and
sbb
jae
call
mov
or
out
icebp
rorb
adc
dec
movsb
and
mov
imul
arpl
pop
ss
jecxz
lods
dec
adcl
fldpi
test
sbb
mov
lds
add
lock
jl
add
icebp
mov
sbb
sub
fnstcw
ficompl
push
subl
out
pop
fucomi
cmp
sub
rolb
iret
or
mov
rcrl
sarl
out
jg
popf
aaa
je
push
jnp
dec
push
jmp
or
loope
xchg
inc
scas
lea
aad
push
rorb
imul
xor
mov
add
int
repz
jo
movsb
ret
xor
cs
adc
jl
push
lea
lcall
out
clc
and
or
das
mov
sti
xchg
and
mov
pushf
out
imul
add
fidivrs
xor
out
loopne
pusha
and
push
insb
pop
test
sbb
enter
cmc
xchg
pop
daa
ja
int
stc
xchg
jb
jecxz
lret
add
mov
mov
outsl
dec
sbbl
aaa
mov
enter
stc
pusha
sub
mov
jle
outsb
inc
pop
shrl
bt
mov
or
adc
iret
lds
push
dec
incl
testl
pop
cmpsl
aaa
stos
adc
push
scas
stos
gs
xor
xchg
and
arpl
cld
es
popf
fucomp
inc
inc
adc
jmp
xchg
jmp
lods
mov
or
adcb
jecxz
clc
icebp
scas
or
add
fnstenv
out
fidivrs
lods
inc
mov
mov
into
addr16
popl
fistpll
roll
in
imul
pushf
dec
movsb
inc
and
clc
int
fistpll
push
mov
test
and
inc
mov
dec
pmaddwd
xor
test
xchg
arpl
out
dec
mov
cld
cmp
cld
push
dec
scas
mov
pop
out
cli
dec
les
cwtl
or
stos
and
adc
jb
sub
or
xor
decb
mov
jg
mov
les
testb
xor
adc
clc
fiadds
outsl
jns
clc
mov
jbe
xor
xchg
cmp
push
mov
js
int3
mov
fisttpl
pop
push
pushl
adc
mov
mov
fstpt
test
inc
add
sub
fstps
dec
enter
int3
xchg
aas
dec
push
in
aad
inc
into
or
jmp
push
xchg
mov
arpl
repz
mov
lahf
jb
mov
mov
add
ret
xchg
ss
ds
in
dec
or
mov
and
es
cld
sub
xor
in
scas
inc
jecxz
mov
std
dec
jbe
mov
jg
add
ret
mov
mov
cmp
test
push
jae
jne
sbb
leave
in
cmp
pop
mov
or
xchg
mov
push
lea
data16
cld
insl
test
pop
imul
dec
out
divb
fdivs
mov
and
out
icebp
shrl
jne
fld
push
pop
test
rorl
jle
fs
xor
iret
in
and
and
pop
loope
lret
cld
and
mov
xchg
mov
aaa
jle
add
pop
dec
jmp
repz
js
loope
daa
push
sub
mov
mov
outsb
dec
popf
mov
call
sbb
clc
push
jbe
cltd
add
mov
lods
leave
mov
mov
orb
repnz
pop
cmpsl
push
lret
fisttpl
xchg
and
popf
pop
jle
pop
stos
jle
popa
inc
int
push
add
adc
add
or
lds
or
mov
fsubrl
jno
fisttps
inc
aam
sub
cmp
and
or
cld
roll
les
xor
push
iret
pop
mov
loopne
es
cs
mov
push
repz
sub
xchg
add
push
daa
jae
pop
lds
in
sub
jecxz
sub
fadds
pusha
sti
adc
leave
add
inc
mov
imul
daa
dec
jo
call
shll
push
pop
push
imul
xor
mov
dec
pop
jmp
leave
pusha
mov
jle
pop
inc
fdivrl
add
cli
dec
sahf
and
test
iret
xor
inc
arpl
adc
inc
jbe
dec
aad
mov
adc
sub
sbbb
mov
adc
xchg
test
pop
push
movsl
xlat
mov
les
pusha
dec
in
bound
jno
nop
stos
and
fmul
push
mov
jp
or
stos
lods
rcrl
jno
leave
test
sbb
pop
xor
stos
pop
xchg
push
add
sub
fs
xchg
out
cmpsb
dec
fsubrp
mov
imul
pop
out
mov
cmpl
subb
mov
jge
mov
aam
sbb
mov
adc
push
jo
jl
cs
sub
xor
lds
push
push
fs
sarl
iret
jmp
adc
dec
dec
sub
cmp
mov
push
je
into
adc
dec
fmull
ret
fldcw
sbb
xchg
mov
bound
popl
icebp
mov
int3
dec
test
pusha
and
vmwrite
in
ja
movsl
jle
jg
andl
mov
fisttpll
xchg
mov
dec
push
mov
aam
les
insl
fsubrl
sub
mov
dec
add
mov
dec
ss
popa
stc
test
mov
push
fwait
xorl
adc
fs
push
sbb
mov
js
or
arpl
xlat
js
test
sbb
inc
pusha
and
push
mov
mov
cmp
rclb
push
push
or
fdivrl
cmpsb
mov
data16
lcall
test
or
je
hlt
loope
pop
ss
xlat
fsubl
loopne
testl
jle
insl
dec
adc
xor
adc
sbb
test
dec
xlat
gs
fwait
stos
xchg
mov
in
cmpsb
adc
imull
nop
aas
pop
sbb
test
mov
adc
push
inc
jnp
sbb
out
enter
jmp
or
stos
mov
mov
mov
push
shrb
sbb
sub
lods
iret
inc
cwtl
adc
scas
push
pop
imul
cmp
jg
mov
fxch
cmp
test
inc
fstps
int3
dec
jecxz
bound
je
repz
add
les
popa
jge
push
sub
pop
sti
inc
movsb
mov
mov
insb
ret
mov
lods
lds
mov
dec
lret
or
rcrb
je
repnz
cmpsb
cmp
xchg
subl
pop
sub
inc
adc
mov
aam
das
cmp
data16
je
adc
push
test
stos
add
popf
push
dec
scas
inc
push
movsl
lds
lds
jecxz
dec
mov
add
cltd
and
setns
mov
rorb
mov
or
jge
and
jo
subb
lea
outsl
hlt
pop
mov
adc
out
adc
xlat
pop
outsl
fdivs
repnz
xchg
cs
pushf
test
inc
gs
subl
jmp
mov
or
leave
int
xchg
out
lahf
cs
fstps
push
rclb
push
ficoml
and
out
dec
insl
mov
cmp
or
repz
cmp
scas
gs
ret
subb
xor
ja
lock
mov
outsb
xor
push
mov
sub
negl
cmp
test
pop
mov
popa
sbb
mov
rcrb
push
and
add
fnsave
cli
xchg
fmull
and
push
fsubs
dec
rorl
mov
mov
lcall
fnsave
enter
cmc
outsb
mov
cmp
addl
outsl
shll
fldl
sub
adc
ss
aam
dec
orl
and
lret
movsb
aad
cmpsl
fs
jg
mov
push
mov
lcall
mov
fstpt
or
mov
pusha
push
dec
inc
mov
xchg
sub
or
xorl
test
lret
out
pop
jp
inc
mov
ret
jnp
leave
mov
mov
call
jle
inc
aaa
pop
inc
add
xchg
inc
nop
push
fs
in
sbb
mov
idivl
fisttpll
lods
stos
cld
pushl
pop
dec
aam
ds
xor
js
cwtl
xor
pop
fstl
mov
add
cmpsb
dec
jecxz
pop
lods
inc
fldenv
shrl
pop
adc
sbb
popf
or
es
xchg
jmp
mov
pop
mov
xchg
scas
jmp
nop
je
pop
pop
ljmp
insb
ljmp
addr16
jbe
movsl
in
lcall
jno
pop
imul
add
js
push
insl
xchg
xchg
inc
fcmovnb
mov
push
bound
lods
and
xchg
sub
inc
shl
dec
mov
das
aaa
popa
inc
int3
outsb
add
mov
mov
push
fistpl
push
lcall
stc
lahf
xchg
push
cmp
xor
jo
gs
andl
fildl
repnz
insb
lret
vpsubq
int3
je
imul
push
dec
repz
or
and
xchg
xchg
xor
or
pop
mov
sbb
and
cmp
sbb
xor
sbb
mov
enter
and
xchg
test
out
sahf
pop
inc
fdivrs
les
push
xchg
sahf
out
inc
loop
jns
sub
pusha
inc
movsl
ja
mov
push
scas
lds
xor
dec
stos
out
shlb
ja
adc
ds
xlat
jbe
inc
lods
adc
scas
outsb
stc
adc
daa
cmp
loopne
jp
dec
aaa
mov
xor
outsl
and
test
mov
out
popf
inc
cmpsl
movsb
cmp
notl
hlt
xchg
xchg
fimuls
adc
push
push
outsb
mov
loope
jl
mov
push
mov
call
sub
mov
enter
addr16
jl
mov
and
ret
mov
loop
mov
test
lods
mov
add
push
xchg
add
cmpsb
mov
fsub
mov
cmc
lds
jge
mov
or
lods
jl
pop
ljmp
push
inc
fsubrp
inc
pushf
cs
and
lods
test
or
dec
cmp
arpl
push
lods
inc
test
cmpsl
push
jae
pop
movsb
test
sub
loopne
mov
xchg
mov
aad
cli
or
sbb
test
ds
in
jbe
cld
sbb
or
ss
and
loope
mov
jb
arpl
mov
out
mov
shrl
mov
cs
in
pop
xchg
fisttpl
xlat
repz
rcll
loopne
ds
mov
pop
cmp
pop
add
stos
fmull
adc
xchg
xchg
neg
call
rcl
scas
adc
repz
or
shlb
jg
push
int3
dec
push
and
or
lods
fadds
pop
rorb
int3
pop
xchg
stos
jo
jle
data16
outsl
xlat
xchg
jmp
mov
push
les
pop
sbb
sub
mov
cmpsb
stc
or
pop
lahf
popa
xchg
and
cmp
fnstcw
and
fsubs
inc
pop
or
push
fbstp
mov
and
push
imul
daa
scas
push
mov
push
xor
cmc
sub
iret
push
icebp
sarl
push
sub
dec
frstor
bound
rep
in
add
pop
call
out
ss
pusha
test
fidivrs
push
mov
jo
cmp
lcall
adc
mov
enter
mov
je
dec
fwait
pop
out
iret
lret
jp
test
add
xor
jmp
and
pop
xchg
cmp
rol
incl
add
xchg
popf
pop
call
ret
cwtl
cmp
das
and
sarl
sub
xor
int3
adc
mov
xchg
call
mov
xchg
repnz
mov
test
bound
sbb
xchg
fadds
or
fildll
inc
cmpsb
mov
or
or
int3
jl
insb
xor
dec
xchg
mov
mov
mov
inc
jns
in
xchg
or
sub
iret
xor
sub
add
icebp
mov
mov
xchg
dec
test
xchg
xchg
cmp
int3
dec
pop
loop
fldenv
cs
bnd
adc
jne
test
xor
jnp
fsubrl
pop
out
xchg
jae
pop
in
mov
out
outsb
int
xchg
scas
or
lods
inc
and
mov
sub
mov
cmp
test
dec
hlt
dec
add
jecxz
rclb
mov
js
jle
mov
ret
xchg
jo
xor
mov
lods
pop
loop
popf
jo
sbb
push
mov
jb
aaa
jecxz
out
sbb
enter
add
jmp
dec
adc
insb
jne
int3
inc
cli
leave
push
nop
fstpl
lahf
nop
add
scas
daa
aaa
ss
pop
mov
adc
jl
mov
pop
dec
fmuls
mov
lahf
sub
push
adc
mov
pushf
xor
mov
push
pop
call
xchg
xor
xor
loopne
adc
pop
mov
cmp
and
pop
inc
fstpl
cmp
adc
add
sub
push
push
lods
mov
mov
cmpsb
in
mov
aaa
fwait
jg
sbb
mov
pop
dec
out
and
rcrl
cltd
push
jae
fstps
sub
push
iret
sbb
mov
pushf
insl
cmc
int
sub
mov
or
test
pminub
loopne,pn
or
test
mov
lock
adc
dec
aad
sbb
jp
mov
cmpl
cld
or
xor
arpl
lods
mov
pusha
xor
pop
outsb
testb
into
outsl
mov
idivb
in
mov
xor
dec
adc
mov
ja
add
or
test
rcl
or
fdivs
mov
aas
mov
sti
xchg
loopne
sub
repnz
jb
andl
xchg
inc
xor
jecxz
ljmp
mov
push
iret
jmp
into
and
in
ja
mov
xchg
aam
adc
stos
arpl
imul
test
lret
xor
fistps
mov
add
dec
push
loope
lea
shlb
dec
fnsave
and
jge
cmpsb
test
ret
aas
ljmp
jo
mov
xchg
std
or
fsubrs
jle
lock
cmp
pop
push
insl
loop
cmp
jl
cltd
dec
test
data16
or
xlat
mov
in
test
leave
push
mov
and
insl
loopne
sbb
test
fwait
jne
loopne
cmpsb
push
daa
in
pop
mov
cld
outsl
adc
fdivrl
stos
mov
insl
add
cmpsb
hlt
mov
lock
lcall
into
cld
or
shlb
jmp
in
enter
adc
xor
ss
and
push
lret
das
cmp
int3
sub
aad
or
dec
popa
sbb
inc
mov
cltd
add
subl
or
push
es
in
xchg
lods
mov
ljmp
jmp
loopne
outsl
push
or
cltd
mov
adc
mov
add
and
popa
jecxz
xchg
andb
cmp
cmp
xchg
dec
push
je
and
cmp
lcall
inc
jb
shlb
fisubrs
mov
outsl
incb
and
sbbl
jb
lahf
les
out
bound
or
stc
clc
hlt
pop
sub
scas
jns
out
mov
push
test
inc
loopne
fwait
arpl
sbb
aas
xlat
scas
cmp
cmp
addl
popf
adc
pop
and
sbbl
mov
mov
xchg
imul
aaa
jle
jne
mov
xchg
xchg
adc
mov
push
outsb
mov
inc
xchg
inc
loopne
cmp
cmp
rcll
shlb
ljmp
aad
sbb
jle
and
mov
inc
insb
mov
clc
push
leave
in
mov
mov
dec
orb
ds
jno
adc
xchg
pop
mov
sub
mov
lahf
test
and
les
dec
mov
xor
sarb
aas
scas
addl
cmp
pop
xchg
je
pop
push
inc
mov
sbb
ja
ljmp
xor
jbe
loopne
xor
push
jnp
sahf
pop
gs
dec
lods
movsb
jg
outsb
push
push
mov
test
add
add
sub
cmpl
xchg
ret
cmp
add
js
lret
and
cltd
mov
and
pop
cli
out
test
clc
inc
mov
in
inc
int3
inc
mov
xor
imul
sahf
faddp
imul
push
sub
lahf
lods
jl
scas
adcb
out
sub
cmp
clc
cmp
ret
push
shlb
inc
xchg
lcall
out
lahf
add
inc
lret
jnp
dec
sarl
push
ss
rclb
mov
or
int
aad
loop
insl
mov
int
mov
into
mov
lock
jno
into
jns
xchg
mov
in
inc
stos
mov
xor
cmpsb
dec
ss
out
dec
daa
inc
popa
sbb
sahf
mov
add
jnp
and
dec
out
in
add
int3
int
jno
sbb
push
sbb
orb
xchg
dec
out
cmpsl
or
mov
dec
adc
cmp
push
rcr
outsb
jno
xchg
aas
xchg
fs
push
popa
or
cmpsl
mov
adc
movsb
in
pusha
bsf
pop
outsb
inc
jge
test
mov
in
xor
pop
pushf
push
adc
ss
les
pusha
ss
jae
and
test
pushf
lods
and
mov
fisubrs
add
dec
fs
outsl
push
fiaddl
lret
scas
movsl
pop
scas
fcmovne
jmp
icebp
xchg
aam
pop
inc
lds
out
mov
xchg
push
adc
jb
sub
ret
pop
push
fcmovb
xor
jle
push
nop
stos
mov
rorl
cmpsl
repnz
push
nop
push
sub
pop
sarl
jns
loop
cmp
sarb
jp
push
test
test
push
xor
cmp
sbb
push
inc
movsb
aad
jae
dec
mov
jae
or
icebp
rorl
jbe
leave
jecxz
sub
and
ret
arpl
in
mov
cltd
stos
sbb
xchg
pop
outsb
or
jb
es
mov
cli
pushf
mov
out
dec
and
mov
adc
push
cwtl
fisubs
jno
add
lcall
add
lcall
push
cmpb
stos
xor
ret
xorl
fsts
cmp
push
mov
hlt
mov
xchg
pop
enter
shr
rcrb
ljmp
aam
movsb
cs
dec
jbe
xor
pushf
push
dec
lahf
jp
negl
loop
daa
jbe
nop
mov
push
cmp
push
jnp
cmp
dec
das
xor
jbe
mov
mov
je
arpl
add
dec
push
inc
sar
push
int
push
xor
pop
xlat
cmp
pop
lret
xlat
mov
pop
scas
clc
pop
dec
in
ret
mov
cmp
pop
jp
xchg
and
insb
cli
mov
sub
cs
inc
dec
int
outsl
stc
popf
push
cmp
dec
movsl
les
mov
es
test
cli
jbe
push
leave
bound
dec
iret
push
xchg
ja
in
pop
push
in
push
xor
je
cwtl
imul
mov
dec
mov
addr16
xor
mov
imul
push
jns
xchg
jno
pushf
lcall
mov
lret
pop
jle
gs
xchg
call
clc
adc
sub
movl
jo
shll
ret
pop
jg
xlat
mov
or
pop
sbb
add
test
mov
iret
insl
cmp
cmp
sbb
scas
jno
ljmp
mov
inc
cmp
jecxz
les
andb
or
push
mov
sbbl
mull
loope
int3
pop
addr16
jl
ret
xchg
fstp
stos
imul
mov
mov
in
xor
pop
push
or
sub
mov
adc
int3
fidivrl
jbe
das
and
pop
xor
ret
push
ja
cltd
test
lret
in
jg
inc
aad
mov
push
lds
adc
pop
sub
jle
sub
pop
add
xchg
sub
mov
xorl
cwtl
ss
cmp
insl
or
std
outsl
insb
scas
loopne
cmpsb
push
xlat
inc
lds
in
jl
rorb
xchg
popf
or
mov
imul
imul
xchg
jb
and
ljmp
and
daa
lret
test
cmp
and
and
jo
orb
insl
sub
sub
mov
adcb
push
mov
insl
cmp
pop
mov
mov
xchg
cs
imul
mov
scas
mov
sub
lret
pusha
lock
aad
ffreep
mov
decb
inc
lock
mov
mull
in
loopne
sbb
xor
mov
or
adc
shrb
pop
stc
je
cmp
push
sbb
pop
push
sbbb
mov
sti
pop
xor
add
dec
mov
rorl
and
pusha
lret
insb
out
xor
xchg
sbb
mov
mov
mov
xchg
xchg
sub
jno
mov
repnz
nop
adc
xlat
mov
or
inc
clc
ds
ja
adc
jp
bound
mov
lock
sbbl
out
cs
je
cli
movsl
push
je
mov
js
fdivrl
ror
mov
cs
cli
outsl
movsb
ljmp
pop
cwtl
lret
mov
pushf
xchg
enter
rol
add
push
and
cmp
incl
shll
and
in
test
int
fisubs
mov
rcrb
in
mov
dec
rcl
dec
dec
dec
inc
in
sti
mov
pop
push
shl
mov
mov
jmp
cmp
mov
in
sbb
in
lcall
inc
push
xlat
dec
and
xchg
adc
jmp
pop
iret
popf
push
aad
lds
jg
push
mov
in
das
and
mov
jno
xchg
add
jle
xchg
subl
test
ror
xchg
in
icebp
dec
dec
push
jo
mov
jno
into
mov
sbb
and
adc
pushf
out
sbb
rcr
outsb
cld
movnti
jg
fcomps
pop
fildll
dec
repz
arpl
sbb
cwtl
push
adc
mov
sbb
push
and
mov
cmp
cmp
stos
pop
cmp
scas
mov
pop
mov
xchg
sbb
pop
push
add
pop
loopne
cmp
icebp
pop
adc
data16
addr16
mov
lret
lret
pop
cld
lcall
rcl
movsl
rorb
lea
inc
in
mov
xchg
repz
mulb
pop
cld
pop
push
mov
jae
std
sub
scas
rorb
out
dec
jmp
inc
inc
hlt
mov
cmpsl
add
fsub
xchg
loope
sbb
xor
push
push
mov
test
cmp
inc
ficompl
pop
ret
aas
mov
nop
or
pop
adc
jecxz
mov
sbbl
xchg
fbstp
inc
or
mov
insl
pop
mov
cli
repz
mov
dec
inc
add
dec
cmp
leave
adc
jne
push
or
add
jge
mov
mov
in
fdivr
nop
or
pop
xchg
or
push
out
push
cmp
arpl
adc
sbb
imul
or
lods
mov
andl
inc
addr16
out
mov
push
cmp
test
sbb
mov
subl
cmc
xor
mov
sub
ljmp
pushf
inc
fstpt
loop
and
push
inc
push
divb
pushw
inc
stos
pop
inc
or
divb
loope
insl
push
ds
fidivl
mov
scas
fdiv
mov
cmp
pop
xor
cmp
jge
adc
mov
cmpsl
pop
loop
adc
loopne
fistps
js
inc
jbe
pop
decl
out
dec
sub
shrb
mov
je
movb
push
add
outsb
xchg
stos
mov
jmp
ljmp
iret
loop
popf
adc
add
ds
lea
dec
xor
push
call
mov
fsubrs
and
sbb
addr16
or
and
inc
jl
subb
and
mov
jge
test
ja
pop
mov
add
cmc
sbb
xchg
hlt
mov
push
jne
sbb
pop
loopne
add
jge
sub
push
xchg
loope
dec
in
inc
scas
mov
sahf
xor
push
jne
and
scas
lcall
loopne
les
aaa
mov
cmp
mov
adc
mov
mov
mov
movsb
rcr
test
sbb
lret
and
movsb
xchg
movsl
pop
push
mov
mov
sbb
pop
or
pop
cmp
push
mov
cmpsl
jle
cmp
jb
or
push
xchg
pop
imul
dec
add
xor
or
aad
sbb
mov
xchg
add
andl
mov
cmp
mulb
addr16
ret
cmp
lds
scas
pop
das
add
sub
lcall
or
sbb
je
lret
and
imul
in
negb
pop
fs
fwait
cmc
loop
daa
add
xor
pop
mov
push
aaa
mov
rcll
pusha
fdivp
mov
cmp
push
shlb
stc
dec
cmp
mov
test
xchg
pop
xlat
adc
sub
inc
sahf
clc
jbe
ljmp
push
addl
sti
repnz
xor
adc
ds
mov
xor
jl
sarl
mov
xlat
sbb
and
jl
adc
mov
inc
jp
xchg
daa
cmp
push
loopne
adc
cmp
test
divb
sub
mov
xor
loope
push
xchg
jl
popf
cmc
andb
cmpl
loopne
fstl
jg
dec
pop
movsl
das
outsb
lds
jg
mov
cmp
orb
adc
lret
data16
pop
scas
mov
mov
es
mov
mov
and
addr16
dec
cmpsb
rorl
sub
out
pop
mov
js
inc
ljmp
inc
stos
and
subl
jg
inc
lea
inc
jg
dec
in
mov
out
jb
jno
mulb
sbb
clc
lds
dec
fs
and
inc
push
ds
dec
fists
mov
es
mov
mov
adc
or
orb
andl
inc
mov
data16
dec
add
cwtl
sub
fucomi
mov
cmpsb
fisubs
cmpsl
inc
inc
mov
mov
inc
pop
adc
dec
inc
sub
mov
insb
dec
adc
dec
dec
add
sub
lfs
jo
js
dec
mov
lret
xor
lret
int3
lret
push
movsb
vsqrtpd
push
mov
jnp
jmp
aaa
adcl
xchg
cmpsl
out
mov
pop
xlat
insl
aam
insb
push
sbb
add
cmp
inc
inc
or
test
mov
fistl
cli
jb
jnp
jmp
orb
sbb
das
lret
cmpsb
pop
add
in
mov
mov
jge
push
sub
stc
adc
cmp
in
repz
push
and
or
fstpt
add
es
adc
cltd
mov
sub
jb
or
imul
sbb
mov
mov
ja
jle
test
ret
scas
pushf
mov
mov
cmpsb
test
outsb
orb
lret
inc
sbb
pushf
xchg
popa
je
outsl
sub
sub
loopne
divl
lds
jns
sbb
movsl
fisubrl
xor
mov
and
fpatan
out
lods
out
sahf
jmp
dec
pop
in
imul
pop
dec
mov
mov
jne
repnz
test
rcrl
sbbl
insl
out
fs
mov
sbb
fcmove
sub
mov
js
in
sub
call
lret
jp
out
imul
add
pop
mov
jge
jg
nop
mov
push
ret
jg
ret
out
mov
imul
shll
rcl
jnp
jbe
jge
repz
sbb
sub
adc
mov
sbb
insl
pop
in
adc
ret
movsl
inc
out
pop
cmpsb
pop
bound
mov
imul
sahf
mov
or
test
es
and
lret
push
sti
push
bound
imulb
jge
jmp
icebp
adc
inc
jb
cmp
inc
jnp
xchg
sbb
push
jno
or
xchg
cli
es
sbbl
push
or
or
pop
fs
inc
inc
lahf
dec
xchg
and
lds
pop
les
test
jns
lret
sar
add
cmc
daa
mov
xchg
mov
sahf
imul
push
in
inc
test
loope
pop
mov
cmpsb
mov
loopne
xchg
mov
fmull
xorl
jno
rolb
arpl
rol
jne
popf
cmpsl
and
fiaddl
mov
mov
mov
adc
sbb
jle,pt
mov
push
push
lods
icebp
mov
or
cmp
xchg
add
mov
push
jle
inc
mov
cli
adc
mov
or
adc
pop
enter
hlt
mov
add
lret
add
dec
ljmp
mov
or
push
mov
pop
ficompl
xchg
or
push
dec
ds
sub
dec
add
aam
cmp
in
dec
mov
fisubs
jp
push
nop
fisubl
in
fs
mov
fadds
push
push
pop
xorb
jns
mov
or
mov
mov
dec
inc
xchg
cmp
pushf
push
dec
jecxz
pop
daa
bound
shr
addb
cmp
push
pop
xor
pop
scas
and
push
push
jmp
aaa
pushf
jmp
aam
sahf
addl
mov
cmp
jae
mov
push
lahf
mov
jg
sbb
fwait
je
pop
insb
xor
stc
dec
cmp
xchg
cmp
sub
jge
cmp
xor
movsb
push
sub
int3
xor
inc
gs
in
sbbl
adc
jns
cmp
aaa
sbb
push
dec
inc
imul
xor
mov
aas
addr16
sbb
jp
jmp
or
jl
xchg
push
push
push
mov
push
pusha
popf
stos
inc
das
fildll
mov
cmp
jle
or
mov
push
lcall
xchg
dec
popf
cmp
lret
outsl
xor
and
mov
mov
sub
adc
imul
insl
mov
rcl
push
bound
ret
lods
lcall
add
mov
push
mov
cli
out
and
add
sbb
add
and
pop
jne
and
jo
pop
jmp
push
movsb
gs
xchg
inc
mov
lods
jno
in
pop
jns
popa
lock
cld
and
mov
sbb
inc
mov
ffreep
jo
outsl
inc
push
imul
in
rolb
jae
rep
daa
call
dec
sub
jg
push
ljmp
aas
loop
lcall
sub
jbe
mov
adc
jnp
jns
pusha
movsl
adc
xor
add
icebp
jae
stos
enter
hlt
jns
adc
inc
push
sbb
stos
xlat
adc
std
lods
jp
out
sub
test
jle
subb
cmp
push
sub
sub
fldcw
adc
lret
jb
shrb
mov
jno
das
test
jg
mov
notl
adc
mov
cmp
out
push
sub
or
stos
stos
sub
lcall
pop
mov
gs
mov
dec
push
inc
mov
rol
sbb
mov
outsb
loop
js
sub
nop
or
notb
sub
mov
scas
and
mov
mov
arpl
jnp
dec
loopne
imul
mov
bound
sub
int
xor
cmp
out
inc
icebp
sti
loopne
fcomi
loopne
push
adc
addr16
les
mov
push
jo
loop
push
mov
je
ret
adc
sub
adc
insl
and
jecxz
sbb
fiadds
idivl
inc
ficoml
inc
sbb
xchg
jns
scas
fnsave
cmpsb
in
push
cmpsl
out
in
addr16
mov
loop
scas
and
sbb
cmp
andb
pop
js
add
sbb
clc
inc
cli
pop
repnz
push
call
cld
and
lret
cmpb
push
call
aaa
xchg
outsl
nop
aad
sub
mov
mov
mov
dec
out
aam
daa
push
ret
hlt
and
stc
or
xor
jns
xlat
push
shr
addl
adc
mov
in
in
imul
sub
dec
mov
cmp
jl
jbe
or
mov
jno
sub
add
nop
cld
sbb
outsb
ss
lods
movsb
push
into
xchg
mov
scas
dec
test
js
inc
pop
int3
push
jge
xor
jmp
fimuls
mov
mov
je
repz
insb
and
aas
pop
pop
dec
js
adc
in
pop
xor
sbb
push
mull
and
sbb
fdecstp
mov
dec
das
jcxz
gs
pop
jecxz
fsubs
mov
lock
mov
and
fnstcw
or
insb
cmp
pop
jmp
insb
dec
cld
inc
dec
jmp
push
lcall
lock
fistpll
rcl
scas
jecxz
jmp
and
push
xor
jl
xor
insb
or
test
dec
pop
icebp
mov
or
int
jo
mov
ret
fyl2x
or
jo
adc
sub
push
cli
xchg
xchg
adc
gs
pop
sahf
testb
mov
pop
es
enter
popa
ljmp
rorl
filds
rol
and
shl
stc
inc
repz
cltd
mov
adcb
cmp
mov
adc
fwait
inc
shrb
imull
pusha
xchg
daa
xor
push
push
lcall
adc
push
out
sti
mov
fimuls
inc
fs
sahf
gs
scas
call
jl
sahf
push
dec
sar
or
sub
repnz
into
enter
notl
cld
add
mov
lock
pop
iret
aam
call
loopne
fistpl
pop
or
fidivl
or
mov
icebp
mov
adc
movsb
test
xchg
add
es
xor
xchg
add
mov
fistl
or
dec
xchg
lcall
fnsave
mov
adcl
clc
jmp
add
cmp
mov
and
mov
push
push
jb
dec
add
scas
jg
js
enter
and
inc
xor
cld
aaa
mov
sbb
cltd
aas
adc
imul
lods
icebp
dec
loopne
jno
data16
xchg
add
fwait
mov
xchg
bound
aad
rolb
pop
cmpsb
adc
lret
xor
push
lea
push
loope
xchg
inc
in
aad
cmp
mov
xchg
push
das
loop
and
js
scas
push
jbe
mov
rcr
and
je
lahf
push
fmuls
jp
push
mov
sub
mov
jnp
sbb
insb
or
pop
cmpsb
divb
cmpsb
shlb
push
out
movsb
inc
fcom
inc
jne
aaa
pop
pop
cmc
pop
ljmp
cmp
cld
inc
fdiv
jl
cs
push
call
mov
sub
inc
cmp
test
aad
cmpsb
push
fwait
mov
iret
jmp
jbe
stos
jge
inc
in
cli
inc
loopne
and
ret
cmp
mov
jo
outsb
mov
test
xor
mov
addr16
out
div
jl
fdivp
ja
bound
nop
in
cmp
push
in
cmp
xchg
jmp
inc
inc
mov
je
cmp
filds
lock
lahf
push
cmpsb
iret
add
mov
mov
jecxz
cmp
push
mov
loope
add
mov
stos
mov
jle
test
sub
fistps
dec
mov
lret
out
fists
jge
mov
les
sbb
xor
jne
popf
push
xchg
cli
aaa
jl
jmp
dec
cmp
arpl
adc
in
add
imul
inc
or
jno
xor
mov
mov
mov
loopne
aad
aas
movl
inc
mov
dec
je
sub
ljmp
test
adc
sbb
in
xchg
mov
push
mov
or
lahf
pop
mov
repz
jmp
popf
lret
sbb
inc
cmp
pop
mov
push
cmp
loope
xchg
les
pushf
mov
cmc
sub
mov
xor
cmp
jmp
jmp
push
dec
adc
jp
mov
sbbl
lea
mov
and
sub
xchg
fcomps
mov
dec
into
sbb
mov
xchg
das
and
cmp
fmul
lahf
repnz
sub
or
dec
xor
and
mov
jecxz
bound
int
jecxz
in
push
adc
shll
xor
mov
jecxz
hlt
pushf
insl
sub
jb
push
subb
add
sbb
mov
test
into
mov
mov
out
out
sti
sbb
cmpsb
pop
push
xor
mov
scas
push
and
outsb
jl
xor
addb
pop
shrl
mov
outsb
push
imul
cwtl
add
add
cmp
and
xor
mov
dec
je
xlat
test
movsb
mov
mov
mov
inc
add
mov
cs
daa
repnz
hlt
and
fnstenv
in
mov
dec
cmp
push
pop
out
push
hlt
xor
push
lahf
push
cmpsl
ds
push
in
mov
lds
pop
repz
xor
inc
push
cli
and
int3
mov
in
sbb
pushf
stos
scas
and
adc
xor
fcoms
jmp
inc
iret
and
and
jnp
fldenv
cld
std
stos
test
test
pop
jp
ds
movsb
ja
add
fidivrl
push
sbb
imul
push
out
jmp
enter
ds
push
jo
test
push
xor
adc
and
push
jp
lahf
sahf
ds
mov
lahf
cwtl
icebp
inc
fisubrl
into
mov
mov
xor
sbb
lret
xchg
jnp
arpl
jl
mov
push
adc
or
in
sahf
or
mov
and
into
xchg
xor
jecxz
jl
jge
jecxz
lea
mov
stos
sbb
inc
jecxz
pop
out
data16
and
sbb
divl
sub
add
icebp
adc
xor
inc
ljmp
int3
mov
dec
mov
fldt
inc
in
pop
or
out
mov
aaa
mov
shl
pop
pop
in
fisttpl
mov
or
leave
push
pusha
inc
pushf
inc
jb
fiadds
cs
sbb
repnz
xchg
cmp
cwtl
pop
movsb
dec
pop
xor
lds
dec
popa
sarl
fs
enter
fldl
ret
xor
sub
insl
cmp
pop
mov
pusha
cmp
mov
in
jle
jbe
dec
rolb
adc
pop
rcrb
and
popa
test
mov
xchg
andl
out
hlt
xor
mov
ljmp
lret
clc
enter
or
xor
pop
or
popa
cmp
daa
cmpsl
aas
push
jbe
mov
imul
mov
jl
imul
and
movsb
add
rolb
lea
cmpsl
hlt
imul
clc
sahf
pop
add
xchg
xor
sahf
stos
mov
outsl
push
sbb
push
mov
in
push
repz
lds
pop
or
inc
pop
or
pop
stos
xchg
add
ds
outsb
inc
jmp
mov
ss
fistl
xor
adc
pushl
ljmp
in
jmp
pusha
xchg
mov
fldcw
lock
shl
enter
loop
rcrb
ja
and
scas
and
int3
dec
sbb
outsb
jge
push
in
icebp
lea
icebp
popa
std
fistpll
jg
push
xor
cmpb
pushl
fadd
adc
lret
mov
and
adc
nop
push
clc
xlat
repz
push
fwait
lock
nop
sub
jnp
xchg
push
inc
loope
sbb
sbb
fisubrs
mov
xor
setno
std
or
inc
inc
sub
cmpb
enter
cli
adc
jl
pop
jb
out
push
icebp
pop
loop
insl
add
rcrb
daa
sbb
jo
stc
dec
mov
idivl
iret
lods
out
bound
shll
jb
inc
mov
mov
xor
mov
adc
jne
sbb
inc
sub
adc
cmpb
xor
dec
pop
adc
sbb
dec
in
mov
notb
mov
add
push
dec
in
dec
sbbb
clc
inc
bound
aam
and
ljmp
lret
lea
mov
jg
scas
jno
push
xchg
sbb
scas
add
fcomps
push
out
pop
leave
sbb
mov
rcll
out
mov
sub
add
popf
mov
inc
cld
cwtl
cmp
cltd
and
cmp
lods
cmp
push
jae
js
je
into
test
jae
inc
mov
mov
fimuls
sbb
or
mov
fstpl
dec
pop
push
jae
mov
xlat
adc
fnsave
ja
fldenv
add
loope
adc
movsl
dec
and
mov
adc
dec
cmp
add
sub
sbb
sahf
sahf
xor
js
mov
cmpsb
int3
inc
in
test
push
dec
mov
lea
jne
sbb
fstpt
jmp
incb
outsb
repz
mov
xchg
mov
js
fcomi
cmpsb
push
je
mov
sbbb
mov
fcoms
insb
rcr
pop
xchg
mov
dec
neg
int
call
pushf
cmc
les
mov
in
sahf
adc
ss
dec
aaa
adc
and
jecxz
test
shr
cli
push
jno
out
inc
bound
outsl
and
mov
movups
aad
in
jl
jecxz
sbb
dec
iret
mov
rcrb
pop
dec
pop
lea
out
shlb
paddq
or
pop
add
ret
pop
cmp
lahf
test
fcompl
out
arpl
xor
test
faddl
vmovdqu
insb
cltd
out
sub
sbb
shlb
cs
aaa
mov
data16
xor
fiaddl
out
or
inc
xchg
mov
adc
sub
cmp
popa
jnp
out
fwait
addr16
and
cmp
cmpsl
add
jmp
and
inc
push
jecxz
movsb
mov
in
push
jmp
cltd
push
popa
cltd
cmp
jno
pop
mov
mul
cmp
dec
or
cmp
filds
sbb
ror
jmp
testl
in
sbb
xchg
inc
push
push
out
mov
nop
pop
inc
jo
xor
add
clc
pop
loope
and
in
lods
adc
or
dec
std
cli
and
nop
movl
mov
js
sbb
lods
adc
pusha
lock
andl
loope
adc
aas
or
lea
jo
push
stc
add
adc
cmpsl
inc
jecxz
or
lods
dec
test
adc
nop
jecxz
cmp
inc
arpl
mov
dec
scas
push
rcrl
mov
inc
shlb
cmp
push
aam
daa
xchg
mov
rcll
aam
add
sti
cmp
mov
push
jp
pusha
ss
insl
lret
push
out
pop
sbb
and
dec
xchg
xchg
xor
sahf
lods
dec
inc
or
mov
fidivs
pusha
int
and
loope
mov
push
lea
nop
xor
repz
push
and
verw
sbbb
push
push
inc
inc
movb
dec
iret
xchg
xchg
ljmp
orl
mov
lods
xchg
bound
movsl
les
mov
clc
cmp
shlb
mov
cmp
mov
in
pop
orl
test
adc
clc
xor
popa
ret
ja
aaa
sti
or
adc
xlat
pop
sti
addr16
jp
cmp
adc
insl
lcall
sbb
or
call
or
cs
sahf
mov
cmp
push
jmp
clc
inc
lcall
cli
push
push
cli
xor
xor
push
inc
lcall
sub
es
out
xor
xor
add
jle
call
shrb
scas
rcll
cmp
mov
das
into
jo
js
roll
add
es
pop
add
out
cmp
int
ds
movsl
mov
sub
adc
nop
lods
add
movsb
shlb
jo
sub
je
dec
dec
iret
fisubl
cmp
lret
xlat
ret
cltd
andb
decb
in
daa
test
lods
fldl
enter
inc
cmpsb
mov
pop
push
popf
sbb
xchg
das
mov
clc
mov
fwait
bound
inc
push
fists
clc
fnstsw
or
xor
sbb
jb
ret
lret
fstps
mov
or
daa
loop,pt
mov
mov
fbld
movsl
inc
add
fdiv
das
mov
fwait
into
pop
in
push
stos
xchg
std
je
in
add
lods
jle
icebp
jno
or
out
xor
loop
fsubs
xchg
js
mov
mov
cmpsl
sbb
arpl
push
nop
adc
jl
les
sbb
jl
mov
scas
inc
stos
xchg
fidivrl
rcll
xlat
xor
jge
ret
scas
faddp
xchg
add
dec
mov
inc
cmp
arpl
adc
xor
pop
cmpsb
movsb
pop
adc
es
cmp
in
lock
fdivp
jle
jo
fdivs
push
push
pop
into
and
cwtl
and
mov
lods
mov
movsl
icebp
call
mov
out
push
pop
scas
cmpsl
jno
dec
xchg
xchg
pop
push
mov
loope
jne
out
bound
imul
scas
daa
pop
adc
sub
bound
add
sbb
mov
jg
push
push
push
rolb
icebp
test
es
lds
push
and
xchg
pop
insl
dec
mov
hlt
cmp
scas
fadd
xchg
lock
mov
xchg
ljmp
insb
jl
dec
fsubrp
xor
xor
mov
sbb
jo
dec
cs
sub
mov
dec
out
popa
inc
xlat
dec
loop
xor
mov
mov
and
mov
lods
js
xlat
push
sbb
inc
jecxz
xor
xchg
in
jnp
xchg
mov
faddp
push
push
adc
and
daa
enter
sti
xchg
add
sti
inc
and
cli
fnstsw
xor
jecxz
add
pop
shrl
mov
mov
movlps
push
mov
sub
int3
jg
lods
add
xor
popf
pop
popf
stos
cld
xchg
push
aas
cmp
daa
leave
lea
nop
aas
inc
jo
sti
loope
mov
and
in
ret
rclb
imul
dec
inc
mov
aas
xchg
mov
push
sub
popa
decl
sub
sar
push
outsl
push
int3
xor
and
mov
and
cltd
dec
mov
lods
mov
ror
in
mov
lcall
leave
mov
sysret
mov
dec
push
int3
ss
sub
dec
shl
mov
out
das
cli
pop
cmp
cli
push
jb
arpl
sbb
pop
sbb
mov
push
int3
sbb
pop
sti
lcall
cmpsb
inc
mov
loope
std
push
sbb
mov
jmp
or
pusha
inc
cmp
dec
daa
out
es
cmpsb
mov
xchg
mov
fxch
jo
xchg
lret
push
lods
push
lock
sbb
pop
xor
addr16
fs
jl
lds
movsb
cwtl
fcmovb
xchg
pop
mov
loope
sbb
in
xor
xchg
cwtl
fcmovnb
pop
int
and
mov
jno
out
fstpl
or
push
xchg
pop
test
jo
mov
lahf
inc
pop
js
imul
jbe
shrb
std
or
or
sbb
dec
pop
push
mov
andl
xchg
add
mov
push
pop
in
aas
pop
jle
adc
push
jp
scas
ret
push
cmpsl
mov
imul
repz
jb
or
cmp
jl
mov
out
adc
inc
lret
push
divb
cmp
xchg
jle
fcomip
scas
push
js
xchg
test
ja
pop
test
arpl
and
sbb
mov
lcall
jae
loopne
jge
filds
fwait
xchg
push
xchg
mov
xor
shlb
sbb
dec
scas
jno
pushf
mov
lods
les
dec
in
rolb
add
jae
or
popa
mov
fld
dec
idivl
shll
jge
mov
xchg
test
mov
fidivs
add
notb
jae
pop
sub
stos
or
out
loop
cltd
shll
imul
pop
jl
loopne
add
fbstp
es
das
aaa
and
push
test
jge
das
movl
mov
sahf
add
insl
std
ss
cli
sbb
mov
jl
mov
sub
sarb
test
test
fwait
loope
out
xchg
inc
push
xchg
sub
xor
sub
xchg
idivl
push
jp
scas
data16
mov
and
push
lcall
jmp
sbbl
jge
add
xchg
lds
dec
adcb
xchg
in
mov
xor
pop
cmp
inc
fimull
push
xchg
loop
fistl
push
imul
adc
cmc
mov
xor
mov
cld
jnp
cmp
test
push
shll
int
jp
sarb
mov
or
push
in
push
xchg
cmpb
out
imull
ss
gs
lcall
xlat
dec
cmp
in
pop
add
lock
adc
arpl
js
pop
int
pushf
loope
mov
adc
movsb
xor
fnstcw
int3
das
leave
arpl
xchg
prefetch
adc
jns
ret
jle
pop
je
insl
nop
jecxz
pop
jmp
je
jb
dec
in
inc
mov
dec
pop
mov
sub
sbb
pop
adc
mov
pop
test
xlat
push
or
stos
mov
sbb
mov
mov
lods
fsubs
imul
jge
jns
pop
xchg
pop
popa
cmp
sbb
pop
adc
faddl
sbb
incl
in
sar
popa
sub
in
pop
insb
xor
adc
lahf
stos
inc
pop
dec
pop
xchg
test
cmp
or
mov
lds
lds
adc
mov
lret
les
aas
add
aaa
push
push
test
ret
pop
fisubs
push
pop
bound
inc
mov
rol
and
pop
es
mov
jns
push
decl
cmp
pop
mov
pop
jg
and
dec
jle
dec
mov
insb
mov
dec
or
xlat
iret
cmpb
sbb
iret
popf
ret
push
xchg
jp
aaa
scas
and
dec
in
pushf
jg
cltd
std
cli
pushf
adc
or
mov
mov
push
inc
jl
addb
xor
cmc
push
adc
xlat
addb
lock
iret
mov
jle
fsts
repz
mov
int
pop
int3
adc
jmp
cmp
jb
mov
fld
dec
pop
popf
fadds
cltd
icebp
sbb
aad
xor
sbbb
nop
test
sub
mov
lds
mov
push
push
outsb
in
test
ret
mov
pop
ret
inc
test
xor
rcl
jne
sub
xchg
jbe
jo
das
xchg
pop
add
lret
out
xlat
xchg
and
jno
pop
cmp
mov
mov
test
lods
and
adc
adc
icebp
js
ret
sbb
lea
fldenv
or
imul
jns
scas
jb
sahf
adc
pop
cmp
xor
daa
push
mov
push
stc
dec
mov
inc
inc
push
jp
shl
xchg
xchg
mov
out
dec
repz
imul
push
cs
xchg
jbe
mov
fs
dec
pop
faddl
dec
icebp
and
and
fidivl
pop
out
test
push
or
jmp
aam
mov
add
and
adc
sub
fnstsw
test
inc
movsl
ret
outsl
lret
std
mov
hlt
daa
push
cs
insb
pusha
push
and
cltd
stos
sub
jo
fs
jne
lret
into
cmp
inc
lods
movsb
push
ret
repnz
outsb
cmp
xchg
divb
or
fcompl
pop
insl
mov
jg
jecxz
or
pop
mov
push
lret
out
hlt
dec
call
adcl
or
aad
cmp
into
rcll
clc
imul
in
orl
xchg
push
push
add
inc
repnz
inc
push
in
xor
imul
rorb
dec
lods
jmp
test
and
js
dec
stos
std
pop
mov
call
or
shrb
dec
cmp
in
ret
icebp
xchg
in
fstpl
cmc
cmp
orb
pop
sub
arpl
std
mov
addr16
inc
jg
ljmp
inc
jno
shrl
fidivrs
cmp
jne
jecxz
push
mov
adc
sub
push
shlb
or
filds
mov
inc
repnz
or
ljmp
ret
xor
cmp
or
ss
sbb
sub
mov
imulb
out
xchg
mov
xor
jns
add
leave
adc
int
push
sti
push
xor
data16
notl
pop
cwtl
dec
or
mov
iret
int
inc
mov
push
xor
es
jbe
pop
pop
pushf
sub
pushf
lcall
fs
icebp
int
not
or
mov
add
leave
test
adc
jns
mov
test
xchg
jle
scas
ret
js
or
lcall
cmp
clc
cpuid
rcll
mov
inc
sbbl
and
outsb
shll
insb
mov
and
sbb
es
push
scas
push
cmp
scas
push
filds
rorl
mov
inc
test
pop
vpshlb
xchg
jge
cltd
aaa
ficoml
test
add
xchg
xchg
add
rorb
mov
fisubl
pushf
ja
daa
mov
orl
shll
dec
dec
push
aad
xor
mul
push
or
inc
leave
cmp
push
out
into
mov
mov
les
xor
push
rclb
mov
ja
lret
sbb
cld
mov
icebp
cmpsb
cmp
add
repnz
add
cmpsl
jne
mov
sbb
lods
inc
pop
sub
inc
add
adc
popl
xchg
pop
push
or
sub
inc
dec
dec
jg
test
insl
ret
ret
xchg
add
mov
xor
bound
out
cmpsb
lock
sub
fbstp
mov
scas
mov
hlt
mov
in
mov
hlt
ds
adc
or
test
sbb
fwait
adc
inc
lock
orl
inc
xchg
sub
xorb
or
cmp
insb
or
jbe
hlt
adc
push
xlat
test
scas
data16
test
mov
push
nop
jge
inc
iret
push
jmp
lock
in
out
jl
dec
cld
mov
loop
sub
mov
sbb
clc
inc
cmpsb
cmp
mov
xchg
sub
enter
and
inc
fisttpl
loopne
and
xchg
jb
imul
pop
lahf
scas
leave
dec
hlt
mov
stos
inc
sbb
push
scas
sbb
xor
dec
imul
ja
pop
cmpsb
ds
xchg
es
mov
jno
and
aas
push
mov
mov
cwtl
leave
xchg
fmuls
pop
cmp
and
push
inc
sbb
pop
inc
push
sbb
je
fidivrl
push
xchg
inc
sbb
sbb
aaa
xor
xchg
test
or
xor
push
cltd
inc
ret
cli
insb
mov
sahf
sbb
jo
pop
mov
mov
cli
mov
test
rol
fiaddl
fdivl
xor
shll
mov
popf
xor
test
mov
mov
and
xor
cld
lret
aas
add
mov
addl
data16
stc
xchg
lods
cmp
rolb
insb
shrb
jae
insb
mov
inc
sti
dec
ffree
sbb
idiv
sti
stos
push
popf
insb
sub
jl
cmp
or
in
sub
xchg
pop
jp
jg
aam
add
cli
es
in
jl
leave
sub
fidivrl
dec
in
mov
mov
mov
cmpsb
dec
repnz
jp
ret
and
cmpsb
and
push
les
mov
and
or
pusha
or
pop
xor
out
mov
push
aas
jae
fisubl
out
cmpsb
xchg
outsb
mov
arpl
add
cwtl
mov
cmc
pop
push
cmp
sbb
shl
mov
xor
mov
bound
xor
or
cld
xchg
clc
adc
cwtl
mov
inc
lea
pop
ds
out
fldt
lds
push
dec
insl
cmp
cmpsb
or
xor
mov
outsb
sbb
dec
pop
outsb
stc
xchg
push
pop
cmpsl
push
add
ljmp
xlat
xchg
cmp
lea
mov
push
ss
mull
insl
test
mov
or
dec
mov
add
mov
mov
mov
mov
movlps
push
lods
nop
push
sub
pop
xchg
repnz
mov
out
adc
fs
or
push
filds
repz
mov
pop
cmc
sub
dec
jl
imul
inc
sbb
xchg
fsts
ss
stos
mov
out
cmc
xor
out
out
outsb
cmc
lods
jl
js
fwait
mov
add
mov
mov
push
and
cld
push
adc
ljmp
xor
dec
test
lahf
lods
mov
xchg
mov
shll
mov
jle
lret
xchg
push
fcoms
popa
clc
fcomi
stos
fldenv
std
pop
aaa
xor
fwait
inc
sbb
xor
adc
addr16
inc
sbb
out
xchg
add
aas
xchg
fbld
ret
pushf
jae
jno
popf
mov
dec
sbb
pop
push
push
clc
mov
sub
loopne
adc
pop
clc
aaa
std
in
cmp
fimuls
adc
jae
xor
sub
inc
fpatan
popa
xor
ja
fld
jbe
or
pop
aas
adc
jns
and
mov
push
sub
and
icebp
push
fiaddl
or
push
inc
leave
in
jmp
daa
lcall
pop
xor
mov
xor
push
dec
mov
xchg
pop
push
xor
cmp
hlt
fwait
mov
int3
shl
mov
sbb
inc
dec
or
movsl
push
scas
test
sub
sub
test
add
fs
sub
add
xor
mov
out
mov
outsb
stos
add
add
scas
jno
out
lods
out
fcoml
in
not
ret
dec
mov
ret
jno
loopne
jg
and
movlps
test
pushf
pop
fnstcw
mov
pop
sahf
and
xchg
arpl
xchg
mov
arpl
sbb
outsb
sbb
inc
push
sbb
shl
jl
adc
scas
dec
sarl
mov
pusha
xchg
ret
sub
testl
pop
mov
insl
ret
js
inc
in
pop
roll
test
popa
decl
popw
in
push
jle
outsb
push
xchg
push
cld
inc
hlt
rol
cmp
add
sbb
push
loop
addb
lds
in
pop
xchg
mov
ret
outsl
jno
xchg
clc
mov
stc
loop
sbb
cvttps2pi
fs
repnz
fs
push
dec
adc
xor
into
insl
ljmp
sub
xchg
xor
jnp
pusha
xchg
pop
mov
sbbb
int
xchg
negl
leave
jl
and
je
adc
sbb
jmp
movsb
cld
out
inc
push
repnz
sbb
arpl
or
or
add
xchg
js
and
repz
sbb
pop
mov
imul
lds
xlat
sbb
test
mov
push
dec
mov
jge
pop
nop
stos
inc
shll
jnp
xchg
jbe
dec
cmc
ret
ds
and
cmp
xchg
mov
add
loope
addr16
lcall
sub
subb
leave
jbe
mov
popa
int
mov
cmp
mov
sahf
pop
dec
sub
rcll
popa
or
pop
inc
push
jo
or
mov
test
pop
sahf
or
sbb
test
movsl
dec
sbbb
jecxz
jo
dec
ja
mov
adc
inc
out
out
sbb
pop
loope
out
xchg
shlb
add
in
in
loop
into
pushf
pusha
lcall
stos
das
cmp
mov
hlt
mov
push
mov
pop
jg
or
xor
mov
lock
jecxz
sbb
xchg
push
sarl
push
mov
mov
push
push
stc
outsl
and
stc
rcll
loopne
add
or
and
shrl
jp
pop
into
xor
add
jecxz
inc
xchg
inc
loope
fwait
lods
sub
mov
cmpsb
mov
pop
movsb
inc
pop
ja
fs
imul
shrl
ljmp
mov
int3
leave
cwtl
std
jb
enter
xchg
mov
sbb
inc
mov
fstps
inc
lds
dec
dec
cmp
push
enter
lret
xor
xor
aas
push
ljmp
jp
and
fucomip
mov
jo
or
adc
stos
pop
xchg
xor
push
fcmovne
aas
push
mov
sub
or
jne
in
cmp
mov
loopne
sarb
pmulhw
test
pop
testb
adc
shlb
dec
cmp
out
mov
adc
addr16
stos
push
mov
test
lret
jns
dec
out
dec
mov
pop
xchg
sub
out
rorb
xchg
fcomps
cli
dec
mov
adc
mov
sbb
ljmp
mov
pop
test
sti
andb
popf
xchg
add
add
into
xchg
jne
sahf
mov
lahf
stos
outsl
daa
sti
ja
stos
test
leave
adcl
push
sbb
in
and
int3
hlt
nop
out
add
sub
sbb
mov
pop
mov
out
cmp
ret
lret
mov
scas
cwtl
mov
xchg
xor
stos
mov
push
mov
rcl
mov
jl
enter
int3
push
aas
shl
repz
xchg
popa
clc
add
push
jg
sub
sahf
aad
xor
fs
imul
mov
inc
and
sbb
inc
xchg
test
repz
mov
mov
aam
mov
cwtl
xor
shr
jns
mov
sub
pusha
jnp
push
pop
inc
push
jmp
orb
test
in
jns
jmp
jmp
fisubrl
cwtl
rclb
addr16
in
or
jg
mov
cld
js
push
in
mov
repz
fiadds
or
mov
in
and
inc
push
lea
xor
pop
xchg
and
das
jne
sub
xor
cmp
pop
and
in
push
cs
xchg
in
jp
addr16
jno
jb
icebp
add
mov
test
sub
jp
movsl
lods
add
inc
je
inc
popa
inc
mov
inc
ret
adc
jp
scas
nop
jge
nop
pop
or
div
xor
repz
or
shrb
movsb
insb
iret
pusha
icebp
lock
xchg
jb
gs
call
adc
pop
pop
ds
xchg
cmp
pop
xchg
mov
mov
cmp
cmp
pop
int3
cmp
icebp
clc
outsl
subl
mov
fcmove
movsl
test
in
lods
jmp
gs
fsts
or
repz
jae
pop
hlt
xlat
in
xor
ljmp
pop
push
push
mov
js
adc
jp
and
inc
push
stos
jno
inc
outsl
test
ja
xchg
es
mov
push
icebp
je
inc
lret
clc
push
iret
fiaddl
lret
dec
scas
out
test
lahf
ss
lock
outsb
mov
fcmovnb
push
xlat
lds
sub
lock
adc
add
xchg
and
jmp
push
add
add
and
pop
pop
dec
mov
nop
andl
and
scas
mov
adc
mov
arpl
jg
xor
dec
dec
sub
popf
pop
leave
push
mov
cmc
inc
jge
fadds
nop
xor
or
movsb
xchg
cmp
jb
or
jb
repz
imul
adc
jno
dec
lahf
dec
fisubs
jne
push
sarl
incb
dec
insb
add
ja
test
mov
fidivs
ret
and
mov
popf
es
mov
in
jns
cmp
adc
mov
mov
sbb
pop
sub
xchg
pop
lock
mov
inc
clc
stc
pop
rorl
ror
repz
xlat
mov
cmpsb
lock
daa
mov
adcb
bound
pop
pop
lds
pusha
add
pop
fistl
scas
xchg
sahf
arpl
inc
mov
pop
push
imul
xchg
cmc
test
lods
imul
and
iret
dec
adc
pushf
mov
mov
add
insb
ret
xlat
in
fcoml
dec
cmp
push
inc
xor
jne
sbb
rcl
push
xor
aad
movsl
in
addl
cmp
push
xchg
mov
cmp
cmp
jmp
push
stos
addr16
out
inc
lock
out
nopl
test
cmp
xchg
sbb
sub
mov
lea
mov
stc
ds
je
test
and
mov
sbb
addr16
out
push
mov
sti
xor
or
xor
xchg
ja
nop
daa
xchg
scas
inc
or
xor
adc
adc
call
jo
inc
dec
adcb
shrb
bound
push
loopne
jecxz
mov
cmp
mov
and
xchg
mov
xchg
test
and
lcall
dec
sub
mov
mov
xlat
adc
scas
nop
mov
aas
push
repz
sahf
mov
cld
mov
out
xchg
inc
stos
repz
call
xlat
mov
xchg
add
jo
xor
fisttps
sub
push
imul
pop
lcall
dec
cmp
xchg
mov
stos
cmp
cmpsl
jbe
cmc
stc
cmpb
and
inc
stos
pop
inc
push
rcl
push
out
loop
inc
into
pusha
adcb
shlb
adc
mov
iret
mov
mov
je
sbb
xchg
push
les
loopne
out
mov
out
pop
dec
sti
mov
mov
dec
and
jg
push
lock
mov
sub
repz
rcr
in
mov
imul
mov
leave
leave
divb
int3
ljmp
mov
sub
lahf
idivl
xchg
loop
pushf
push
or
out
call
pop
sbb
dec
das
mov
push
pop
rol
jg
pop
jg
jl
insl
sahf
mov
add
sbbl
xor
push
leave
cltd
push
jp
sub
imul
mov
test
fdivs
out
popf
ds
mov
push
mov
rcrb
or
shlb
pushf
jecxz
mov
movb
pop
jo
scas
dec
repnz
dec
mul
daa
outsl
fdivrs
lret
xor
cld
jecxz
test
imul
pop
gs
loopne
xchg
fwait
jo
cmp
call
insb
cmp
sub
and
lahf
repnz
fsubs
lea
arpl
adc
jmp
lret
test
nop
push
repnz
stos
and
xor
mov
cwtl
stc
adc
or
cmp
sbb
cmp
int
push
dec
in
pushf
mov
popf
stc
cli
add
xchg
jb
fdivrs
pop
push
flds
mov
cli
xchg
jo
add
stos
sarb
pop
leave
scas
dec
jmp
push
dec
aaa
test
test
xlat
cmp
adc
mov
or
aad
jecxz
push
cwtl
cmpsl
aad
daa
jns
dec
dec
sub
std
push
into
inc
loope
push
inc
xchg
push
jne
lret
mov
sbb
repz
outsl
cmp
mov
js
add
mov
aas
int
aad
notb
dec
xor
cmpsb
in
mov
jne
mov
stc
cmp
popf
jecxz
sub
pop
push
in
dec
push
xor
in
in
cld
adc
adc
out
xor
pop
test
mov
fdivrl
mov
xchg
jns
xor
inc
into
fiaddl
fwait
cmpsl
push
pop
daa
fsubl
lock
mov
lods
jg
xchg
jae
fildl
xor
lods
or
sbb
push
mov
push
inc
stos
std
fcmovnb
fsubl
mov
imul
sbb
adc
mov
fcoml
lahf
or
movsl
mov
dec
fwait
js
andl
repnz
notb
push
adc
sbb
dec
pop
fdivl
pop
xchg
jle
dec
jp
in
in
push
shlb
cltd
call
jnp
and
push
sbb
pushf
cmp
sbb
sbb
or
fldcw
inc
pushf
lock
stc
pop
popf
adc
xchg
js
in
decb
inc
lock
jg
repnz
sub
dec
cs
cltd
sarl
adc
and
push
mov
imul
xor
mov
mov
jbe
int3
and
add
sbb
lcall
sub
gs
dec
xor
addl
sub
int3
stos
ret
dec
in
js
sbb
jl
insb
push
stos
jbe
dec
dec
cmp
pushf
dec
cli
or
jecxz
inc
imul
out
inc
lret
repz
leave
sbb
or
int3
cmpsl
aas
shl
xchg
cmp
adc
rolb
popf
pop
sbb
clc
sbb
test
movl
push
sbb
inc
xor
and
dec
or
and
push
cmp
jns
push
inc
sub
add
cmp
rolb
add
scas
inc
inc
pop
out
cld
cmp
lea
pusha
sub
adc
jle
mov
add
xchg
fwait
xor
cmc
xchg
sti
mov
test
out
push
inc
push
sub
xchg
push
sub
mov
pop
sbb
add
jmp
dec
adc
mov
add
outsl
jns
cmp
sbb
fdivs
std
movsb
mov
mov
lds
dec
aad
ficomps
lds
push
out
push
bound
outsl
popa
std
jne
insl
or
movsl
push
movsl
fs
cmpsb
lahf
inc
lret
test
cli
test
mov
fwait
or
adc
mov
fwait
outsb
fldl
inc
xchg
push
dec
sbb
jns
mov
mov
xchg
mov
cmp
jns
cmpsb
cmpb
add
fnstcw
shrl
jbe
sub
test
mull
mov
ret
dec
movsl
mov
push
sti
insl
adc
pop
dec
and
lret
push
adc
aaa
into
fldcw
push
sbb
aam
push
fcmove
sarb
mov
xchg
jae
mov
sbb
jecxz
lret
sub
out
sub
sbb
jnp
mov
fdivl
lods
sbb
fimuls
jno
and
stc
les
inc
mov
push
xchg
mov
pop
xlat
pushl
sbb
pop
push
sahf
push
sub
fwait
or
lcall
call
sbb
scas
leave
lock
sub
scas
cmp
cld
mov
out
pop
int3
sub
std
js
jae
bound
out
in
movsl
push
sbb
sbb
jl
scas
push
hlt
pushf
or
pop
lock
outsb
icebp
pop
imul
jae,pt
cli
sub
popa
pop
test
cmp
adc
jg
xchg
adc
xchg
arpl
cmc
and
aad
les
inc
mov
pushf
cs
jbe
ja
sub
add
repnz
dec
aam
or
out
pop
push
cmp
pushf
mov
xor
pop
pop
xor
adc
testb
sub
jp
repz
loopne
sbb
and
nop
jnp
or
icebp
xchg
movsl
loopne
xor
jl
adc
mov
jbe
inc
add
dec
cmp
test
dec
popf
lret
lret
sub
adc
pushf
and
sbb
loop
adc
rol
je
shrb
xlat
pop
scas
and
jno
fs
stos
scas
popa
pop
loope
das
adcl
imul
dec
orb
dec
push
cmp
push
sub
aam
inc
call
sbb
icebp
dec
in
push
mov
lcall
sti
in
add
mov
outsl
popa
push
inc
xor
mov
push
pop
push
jp
scas
inc
push
jbe
es
lret
sti
idivb
lods
lret
xor
adc
push
movsw
inc
jmp
jno
xor
sti
scas
xchg
cltd
lret
bound
shr
push
push
ret
out
push
add
cmp
ret
inc
cmpsb
in
push
mov
sub
or
test
adc
xor
mov
pusha
ss
lretw
xor
movsb
loopne
push
adc
scas
cmp
ret
and
jnp
das
ljmp
cltd
pop
out
sub
or
add
inc
and
jb
mov
push
out
stc
mov
mov
adc
sub
ficomps
mov
xchg
sbbl
ds
cmp
hlt
out
gs
sbb
sbb
cmp
pop
scas
and
sub
adc
push
sub
jne
mov
sbb
and
xchg
adc
mov
cmpsl
je
lret
shlb
xlat
push
pop
scas
or
pop
fcoms
sub
nop
pop
xor
xchg
fs
orl
adc
fs
inc
push
mov
add
xchg
lcall
adc
mov
xchg
mov
xchg
popf
xor
and
or
pop
sub
dec
sarl
add
add
xor
inc
xlat
cmp
mov
roll
shlb
pop
mov
jmp
cmp
test
iret
fsts
sbb
jp
mov
mov
sbb
sbb
rolb
clc
rorl
mulb
or
add
lret
lock
shll
dec
and
add
mov
cmpsb
xchg
jno
inc
jg
lret
mov
jmp
jle
into
gs
adc
inc
mov
vmovddup
iret
cltd
stos
pop
into
cmp
out
push
hlt
fs
sub
lcall
and
addr16
je
lods
inc
sbbb
scas
out
movsl
sbb
jecxz
daa
jle
mov
jne
adc
inc
fdivr
cwtl
pop
pop
stos
mov
lods
out
cltd
push
fcmovbe
insl
add
lahf
test
or
sarl
aaa
enter
mov
aad
xchg
popa
and
pusha
mov
orb
or
xchg
adc
pop
xchg
cmp
push
mov
in
xor
xorb
xchg
xor
adc
les
loop
aas
adc
pop
cmp
loopne
xchg
add
mov
lods
cmp
lahf
pop
int
mov
clc
jge
pop
out
repnz
mov
mov
loop
cmpsl
neg
loop
xchg
nop
dec
lret
jmp
aam
repz
xlat
or
loope
jae
repnz
mov
xchg
jp
imul
pop
pop
cmp
cwtl
jecxz
mov
sbb
and
dec
movsb
mov
pop
inc
andl
inc
popa
cmp
loop
daa
clc
ret
mov
jp
faddl
insb
lcall
sbb
ljmp
lret
addr16
mov
push
push
pop
cmpsb
mov
mov
mov
push
push
out
mov
cmp
pop
in
in
ljmp
xlat
sub
push
outsl
sbb
insl
lock
push
fsubrp
fidivrl
sbb
cs
dec
dec
add
insl
shrb
fwait
sti
or
xor
adc
ja
shrl
inc
cmp
or
stc
push
pop
xchg
ret
insb
xor
ljmp
xchg
cmpsb
sbb
sbb
inc
xor
repz
pop
xchg
loop
rcl
lock
mov
call
jae
xchg
mov
ret
pop
or
mov
cmpb
into
sbb
test
or
mov
mov
arpl
lds
repz
loop
jnp
sbb
push
loopne
addr16
std
pop
shrb
ljmp
push
jne
ret
adc
cmp
mov
test
xor
fdivrp
das
xlat
ret
jae
dec
aaa
sbb
stc
xlat
add
cwtl
push
push
push
popf
icebp
repnz
inc
fsubrp
arpl
push
or
es
push
jmp
dec
scas
out
ret
mov
lahf
stos
mov
adc
leave
jo
adc
push
mov
scas
iret
pop
push
leave
aad
test
or
pop
sahf
fnstcw
and
or
xchg
mov
push
adc
or
xchg
sub
xlat
insb
outsl
pop
subl
inc
pop
int
xlat
bound
sub
add
jo
add
cmpsl
and
pusha
addb
cmpl
iret
dec
xlat
jne
push
rcll
or
dec
ss
jg
aad
adc
fstps
mov
lcall
shr
pop
cmc
mov
les
jecxz
shrl
add
and
mov
adc
add
xchg
mov
dec
push
inc
or
cmp
lea
pop
cltd
xorl
jae
scas
add
push
loope
pop
jecxz
sbbl
icebp
dec
mov
scas
bound
das
sarb
push
jno
aas
and
sti
dec
or
push
mov
dec
fcomps
jb
pop
xor
fisttpl
aas
stos
fnstenv
bound
or
movsb
movd
sbb
add
cmp
std
and
jl
frstor
mov
adc
rclb
xor
lock
pop
in
cmc
jl
cwtl
pop
pop
xor
jae
adc
int3
arpl
mov
mov
and
fwait
cld
dec
or
mov
data16
shlb
fs
mov
test
lret
mov
add
push
bound
cmp
or
cmc
pop
in
pop
xchg
jne
mov
mov
inc
out
inc
arpl
shlb
pop
and
sahf
cmc
mov
inc
sbbl
or
cwtl
mov
jge
aaa
sub
sti
pop
adc
mov
fdivs
and
inc
push
cs
test
out
fsubs
insl
je
in
mov
inc
addr16
inc
in
cltd
or
and
jo
add
rorb
sub
or
jg
outsl
mov
mov
ret
pop
mov
pusha
in
insb
inc
xchg
pop
out
pop
test
xchg
adc
repnz
pop
mul
jnp
pushf
sub
inc
icebp
sub
movsb
lret
inc
fidivrs
cli
sub
lcall
inc
inc
loopne
cmpsb
adc
xchg
push
xor
mov
shl
outsb
sub
pop
pop
jle
loop
mov
push
xor
fxch
push
push
daa
loope
inc
mov
jge
pop
hlt
fcoml
cmpsb
les
xchg
in
mov
test
sbb
mov
mov
push
xor
sub
jb
dec
test
mov
or
lds
movsb
jecxz
fistpl
jecxz
xor
cltd
call
or
lea
inc
adc
jge
pop
mov
and
rcl
add
mov
mov
inc
je
mov
loopne
xchg
popa
mov
aad
xlat
subb
icebp
insb
or
sti
jbe
out
test
jb
int
test
in
ja
push
cltd
fidivl
scas
push
sub
dec
adc
ss
rcrb
test
cmp
mov
sub
jb
in
sti
jmp
inc
out
mov
mov
mov
adc
and
ret
xchg
jae
jecxz
adc
pop
idivb
mov
cmp
stos
imul
and
xor
fwait
or
rcr
xchg
sti
push
in
sub
lret
das
xchg
sbb
insl
mov
cmc
bound
dec
add
aas
add
cmpb
pop
call
mov
or
int
sbb
mov
push
addl
test
sub
outsb
rolb
inc
jle
pop
or
and
sbb
arpl
mov
pop
pop
aam
jb
adc
sub
repz
add
sbb
ret
pop
mov
lods
into
mov
cli
xor
xor
ret
cwtl
add
and
push
outsb
sbb
aas
mov
pop
jmp
fidivrs
iret
sub
bound
inc
sub
xchg
push
dec
cmp
adc
scas
sbb
cmp
pusha
sti
cmp
pop
pop
push
mov
fildll
pop
xchg
rol
dec
loop
call
sbb
in
push
cmp
movsb
hlt
rcrb
cmp
shrl
cmp
lahf
divl
mov
push
pop
mov
jl
push
xchg
testb
fistpll
popf
outsb
into
addl
cmp
and
out
shll
je
xchg
dec
js
push
leave
lahf
test
aas
push
lock
and
loop
inc
ss
jmp
push
icebp
xchg
and
push
add
or
or
mov
xlat
sbb
mov
mov
in
pop
dec
inc
ret
mov
cmp
or
pop
mov
dec
sbb
jl
test
es
xchg
mov
popa
sbbl
adc
test
rcll
gs
jae
xchg
inc
inc
and
call
jg
das
push
lret
gs
add
fisttpl
idivb
fucomp
imull
jo
mov
pushf
out
insl
xchg
jle
les
add
sub
aas
inc
xchg
mov
push
xor
subl
loop
jle
push
add
xchg
das
call
lahf
jbe
daa
cmp
out
std
rcr
cmp
dec
sub
popa
outsb
inc
and
leave
and
arpl
sub
pop
push
orl
iret
aad
bound
xchg
cwtl
dec
mov
xchg
mov
jae
and
xlat
pop
dec
dec
lret
adc
push
jle
repz
int
jmp
inc
test
jnp
sub
pop
movsl
imul
cltd
cli
adc
fistpl
or
pop
hlt
xchg
out
cmp
mov
push
in
loopne
arpl
mov
or
daa
das
sub
adc
je
icebp
push
insl
sub
cld
mov
mov
adc
jp
sar
mov
pop
loope
adc
cwtl
test
dec
stos
fisubrl
sti
mov
dec
mov
mov
aad
adc
mov
add
xchg
xor
mov
in
jp
sub
pop
adc
lret
mov
fistl
push
lds
mov
arpl
jno
push
sbb
sub
sub
sar
test
sub
inc
pop
add
cld
aas
ss
dec
subl
ret
or
sahf
or
negl
mov
cs
add
testb
mov
cmp
pop
cmp
sbb
incb
aaa
ret
pushf
xor
push
and
fstpt
push
lahf
and
pop
fmull
gs
fdivl
mov
cli
dec
imul
mov
pop
ret
in
sbb
sbb
mov
loop
addr16
std
or
push
in
or
js
lahf
mov
fsubr
xor
stos
jmp
nop
lods
repnz
cs
leave
pop
adc
add
scas
or
push
fwait
sub
lods
cmp
sbb
repz
icebp
outsb
sub
dec
push
inc
test
cmp
icebp
rcrl
mov
xchg
in
inc
in
mov
or
jg
movl
add
lcall
es
sar
adc
std
lret
sbb
int
movsl
repz
add
roll
test
testl
push
push
push
jne
add
aas
negb
or
jo
mov
inc
adc
fsubr
dec
push
mov
imul
sbb
rclb
mov
or
jae
fists
ja
or
mov
pop
cmp
subl
cld
inc
xor
push
sub
imul
cltd
cmp
pop
out
mov
loopne
mov
std
rol
jne
mov
in
leave
and
cmpsl
out
push
sbb
adc
push
fstl
mov
sub
popa
scas
inc
xchg
push
enter
int
dec
push
adc
call
xchg
mov
mov
pop
stc
test
loop
notl
sbb
dec
hlt
stc
nop
es
or
test
mov
push
xchg
mov
mov
les
inc
sub
movsl
ja
cltd
cwtl
lods
stc
mov
jo
shlb
inc
pop
pusha
aaa
adc
inc
and
aaa
add
mov
jbe
push
push
int
pop
cmpsb
push
je
inc
fbstp
xchg
push
rcrl
mov
add
xor
popa
cs
addb
xor
pop
xor
adc
repz
mov
adc
iret
inc
sarl
push
push
cld
enter
sahf
insl
mov
insl
jge
lcall
mov
mov
jb
ret
sub
push
movsl
add
dec
and
out
push
fisttpl
test
mov
sub
push
shrl
clc
mov
sub
jo
outsl
mov
lcall
inc
lock
cwtl
mov
xchg
ja
inc
xchg
out
nop
daa
pop
clc
dec
add
iret
pop
jle
cmp
scas
insl
insl
rep
xor
mov
or
arpl
cmp
shrl
cmpsb
sbb
adc
scas
in
add
gs
inc
jnp
sub
mov
pop
loopne
daa
outsl
push
icebp
mov
frstor
lods
push
or
lret
iret
mov
jnp
gs
jb
jge
addb
out
leave
and
cmp
subb
ret
sub
cld
fnstcw
cs
or
and
je
js
out
and
mov
push
out
mov
jg
fsubr
hlt
inc
sahf
hlt
pop
insl
es
and
shlb
jg
popa
enter
aas
ljmp
mov
or
add
adc
sbb
test
mov
movsl
mov
int3
cmp
fwait
mov
xlat
jmp
dec
repnz
and
push
jne
sub
shlb
inc
push
or
mov
inc
arpl
push
xchg
bound
lds
mov
cltd
push
fildl
bound
movsl
imul
mov
popf
es
xor
cwtl
dec
mov
in
stos
outsl
pop
das
fsubrl
fsubrl
mov
push
mov
repnz
lea
flds
shl
test
mov
adc
mov
out
int3
dec
xchg
inc
sarl
and
in
push
fsts
pop
mov
inc
xlat
addl
mov
mov
rorl
mov
push
mov
mov
mov
mov
pop
incl
sub
mov
in
loopne
adc
mov
xchg
imul
lock
shl
xchg
mov
sub
xlat
cmp
add
ret
cmpsl
test
sub
shrl
sbb
sti
loopne
xchg
push
add
out
rorb
clc
jbe
aam
stos
push
xor
mov
mov
test
inc
lea
jae
out
std
enter
cs
xor
fistps
cwtl
xor
cmp
pop
xor
mov
hlt
das
mov
aad
inc
mov
xchg
fcomps
sbb
sbb
mov
xor
bound
ds
outsl
mov
inc
fistl
jae
cmp
and
test
and
rcr
repnz
or
std
push
inc
cmc
jl
mov
enter
xchg
ror
pop
jnp
imul
out
xchg
inc
push
dec
mov
pop
or
imul
lock
xchg
cmp
xor
sbb
fbstp
jns
inc
pushf
fistpl
repz
push
pushf
imul
xor
add
push
lcall
mov
inc
push
xchg
sbb
mov
insb
or
sti
mov
negl
add
lahf
mov
lods
arpl
and
hlt
daa
pop
jae
pop
movsl
inc
scas
call
into
outsb
inc
xchg
xor
shll
stos
int
stos
pusha
imul
mov
mov
cld
cltd
cmpsb
sub
negb
inc
in
out
jbe
je
push
or
mov
sbb
std
shl
jmp
pushf
in
adcb
dec
jmp
or
and
mov
jge
inc
mov
fmuls
iret
fsubr
lods
add
clc
adc
adcl
mov
lcall
ljmp
insb
test
push
dec
jecxz
sbb
or
push
xchg
push
lock
mov
pop
dec
out
push
test
nop
xor
adc
aas
inc
ds
push
ss
push
dec
jmp
inc
inc
lret
in
pop
ja
push
pop
aaa
rcl
es
jae
nop
movsl
mov
xor
outsl
sub
inc
fsts
arpl
int
outsl
add
sbb
or
push
sub
mov
xchg
das
mov
push
cs
mov
jbe
and
inc
iret
xchg
jge
sub
lcall
or
and
sub
mov
rep
mov
ss
lahf
out
movsb
pop
mov
repz
and
xchg
pop
push
adc
out
mov
insl
clc
and
clc
addr16
jp
popf
sub
and
scas
ljmp
dec
adc
stos
add
insb
pop
xchg
cmp
or
fadds
stc
pusha
imull
xchg
xchg
test
data16
mov
or
pop
int3
xchg
ljmp
scas
test
jno
pop
les
cld
dec
mov
cmp
push
mov
ret
shlb
inc
clc
loope
jb
leave
mov
pop
mov
xchg
sub
ja
push
loopne
add
ret
mov
push
insb
cmp
add
mov
test
xlat
bound
mov
cmpsb
or
xor
popa
lea
leave
add
pusha
sub
scas
pop
aam
imul
and
mov
mov
mov
sub
outsb
gs
stos
ds
repz
insl
js
cmp
in
notl
mov
or
insl
or
sahf
jne
into
push
sub
push
ret
outsb
leave
loope
mov
jbe
sti
and
xor
xor
push
pop
das
xchg
push
xor
adc
clc
in
icebp
add
iret
lods
pop
pop
bswap
adc
stos
les
pop
negl
mov
into
gs
push
inc
mov
cmc
outsl
aas
daa
test
int3
push
and
push
testb
mov
push
pop
mov
and
adc
dec
icebp
enter
jle
cmp
pop
fdivs
stos
int
out
pop
cli
push
into
lds
push
mov
mov
sub
fadds
or
jecxz
adc
es
andl
and
mov
mov
fdecstp
push
or
leave
xchg
lret
and
dec
add
test
adc
pop
cmp
sarb
aaa
push
or
loopne
lods
aad
out
adc
push
pop
das
jg
xchg
imul
sarb
stos
mov
sub
rolb
jno
dec
in
insb
in
mov
repz
adc
aad
mov
fdivp
movsb
push
test
subb
xchg
sub
punpckhbw
cmp
sub
pop
ljmp
insb
pop
xor
mov
nop
mov
arpl
push
cmp
push
mov
outsb
lock
stos
jnp
shrl
rol
fisttps
push
pushf
addr16
fmul
and
les
pop
pop
lock
push
push
xchg
std
inc
int3
xchg
sub
sbb
dec
and
and
leave
xchg
out
sar
sub
add
xlat
and
out
xchg
fimull
fildll
lods
repnz
push
jnp
jp
daa
jge
leave
mov
int
and
mov
fidivl
pop
outsb
test
rolb
pusha
xor
pop
mov
test
shr
stos
es
or
sbb
mov
xor
lods
mov
popf
cmc
js
lods
jnp
in
insl
fidivrl
addb
jmp
test
movl
into
gs
mov
cmp
xlat
or
cwtl
dec
lds
hlt
addr16
arpl
adc
push
push
xchg
or
xchg
fidivs
sti
jmp
inc
inc
mov
data16
push
rorb
jne
fwait
mov
std
outsl
jnp
out
in
fdivl
mov
mov
sti
dec
gs
lock
shr
jbe
mov
cmp
mov
push
jo
push
jae
cmp
leave
lea
xor
xor
lea
out
mov
adc
add
leave
pop
jmp
jns
hlt
addr16
adc
gs
decb
pop
repnz
gs
push
pop
pop
ret
dec
push
in
outsb
add
push
push
pop
out
xchg
mov
data16
push
hlt
popf
insl
adc
std
or
lock
add
add
shl
push
clc
fidivrs
inc
scas
fdivrl
pop
pushf
add
jg
pop
jns
or
test
or
dec
mov
mov
adc
fucomip
sbb
stos
sbb
loop
and
int3
ja
and
scas
jmp
sbbl
or
mov
loopne
add
pop
mov
mov
pop
add
sar
je
arpl
jae
sahf
out
inc
out
cli
pop
sub
into
push
and
lea
fs
push
mov
into
xor
and
cs
xchg
xchg
xchg
repz
cmc
int3
rcrl
jle
repz
push
jns
jl
and
and
xchg
sti
xor
adc
xchg
push
sbb
xor
inc
pop
scas
fisttps
xlat
mov
jecxz
jo
jl
jl
and
inc
pop
jnp
dec
adc
das
and
icebp
rorb
decl
scas
bound
cwtl
add
cs
sub
push
movd
je
les
movsl
ficoms
frstor
ja
inc
cmc
or
fcoms
pop
mov
push
sahf
aaa
scas
cmpsb
and
inc
arpl
lcall
stc
or
mov
aam
out
sahf
sub
out
sub
xchg
push
enter
insl
sub
and
jmp
pushl
jno
fdivl
movsb
icebp
dec
fsts
jg
int
aam
sub
pop
adc
inc
mov
push
cmp
inc
dec
iret
es
push
int3
mov
outsb
adc
or
add
loope
push
sbb
push
or
jge
or
int
stc
les
xor
and
imulb
ret
push
or
lea
test
mov
xor
cld
inc
xchg
xchg
jp
cmc
mov
add
aam
or
btc
xchg
cmpsb
repnz
je
pop
fnstcw
lods
aas
push
ficomps
test
cmp
dec
insb
rcl
notb
clc
movsb
cmp
add
jmp
mov
std
dec
std
inc
out
fld
aas
or
test
push
sub
repnz
shl
sbb
dec
je
jp
cmp
mov
mov
sti
mov
test
movsl
data16
mov
rol
xchg
mov
pop
in
into
loope
cmp
mov
addr16
jge
mov
mov
jne
xchg
dec
mov
xchg
ja
push
or
rclb
xor
stc
lea
add
imul
test
pop
cmp
mov
mov
pop
or
cs
or
xchg
pop
int3
sub
cli
sub
cs
stc
cld
pop
insl
es
fstpl
ljmp
inc
pop
lret
sbb
jl
and
sbb
jne
lret
pop
ret
cmpsb
xor
pop
add
jmp
and
inc
pop
stc
inc
xchg
push
and
jp
repz
sbb
int
outsl
imul
nop
aam
ret
dec
enter
add
int
xor
fsubs
sbb
xchg
pop
pop
imul
loope
xchg
fsubrp
add
xor
dec
pop
inc
std
push
xchg
shrb
icebp
jo
jle
jmp
mov
xchg
adc
push
inc
pop
xchg
lret
sbbl
mov
sbb
scas
add
loopne
sub
sbb
imul
ret
dec
sbb
fbld
hlt
cmp
pop
ljmp
or
sarl
pop
or
test
fldenv
xchg
push
push
mov
and
pop
adc
lds
scas
fwait
repnz
or
push
stos
xor
insl
popf
outsl
lea
add
dec
add
lods
inc
outsl
sbb
insl
jbe
xor
dec
xchg
or
sbb
in
push
orb
push
popf
push
sbb
ja
jae
mov
sub
inc
mov
jmp
cmp
mov
and
add
jbe
nop
das
jp
and
pop
or
aam
cltd
and
cmp
push
mov
data16
loope
cmp
sub
or
sub
jns
fldpi
iret
and
push
outsl
lret
out
or
lods
mov
outsl
imul
push
popf
xor
inc
test
std
cld
outsl
cli
pushf
mov
inc
ljmp
sub
sbb
subb
loopne
addr16
push
imul
cli
adc
imulb
mov
cld
outsl
int
aaa
gs
out
add
mov
stos
sarb
stos
xor
mov
push
inc
jne
push
push
cmp
fwait
int3
add
dec
or
dec
js
in
in
out
pop
lahf
in
push
gs
lret
addr16
arpl
popa
filds
push
imul
push
movsb
stos
fcomip
rolb
push
mov
aaa
pushf
adc
out
ret
rclb
popa
adcl
test
jl
ljmp
xor
add
stos
pushf
cli
xchg
jo
hlt
fwait
jbe
mov
ds
outsl
inc
fsts
inc
xor
fs
cmpsb
sar
and
ja
test
and
xor
mov
pop
cmc
cmp
or
into
sbb
out
sub
aaa
into
xor
push
push
fdivs
push
clc
iret
imul
aad
xchg
lods
pop
sysret
loope
dec
outsb
pop
lcall
dec
loope
loopne
xchg
cmp
sbb
inc
out
adc
sarb
ret
loopne
push
test
mov
add
cmc
xchg
icebp
enter
push
push
addr16
dec
adc
xchg
inc
inc
aas
ret
ret
out
or
stc
sahf
test
filds
call
mov
not
ljmp
mov
mov
pop
sub
pusha
jmp
adc
cmp
jge
aaa
push
push
jl
addr16
lret
aad
add
pop
pop
pop
lea
and
das
int3
jp
mov
fwait
psubq
outsb
es
jecxz
jecxz
cmp
ja
loop
fsubr
aaa
movsb
repnz
test
mov
loope
sbb
or
cs
lahf
add
loop
pop
int
ret
fcoms
push
push
je
push
out
jecxz
fwait
aam
scas
cmp
pop
rorb
fildl
out
pop
mov
xorl
inc
jg
dec
adc
iret
mov
test
lock
ljmp
xchg
push
lods
add
mov
jno
xchg
lret
in
stos
fisttpll
pop
fdivrl
mov
into
test
decb
mov
stos
push
lcall
jns
xchg
scas
adc
adc
aas
dec
mov
cmc
ljmp
jecxz
inc
xor
push
mov
and
mov
add
cs
lret
mov
outsl
add
loope
nop
cmp
addr16
sbb
iret
pushf
sbb
jle
mov
sbb
les
inc
jbe
inc
mov
out
out
add
insb
cmp
cmp
js
xchg
aaa
mov
cmp
xchg
loope
rorl
xor
sub
outsl
iret
push
sub
shll
mov
xor
mov
daa
xchg
and
xor
std
negb
out
scas
jns
scas
addr16
mov
jg
cmp
shll
loope
movsl
mov
add
imul
fyl2xp1
pop
out
aaa
inc
outsl
sub
xchg
mov
les
mov
and
pop
dec
push
xchg
add
sbb
repz
out
push
popf
xlat
cmc
minps
xor
mov
test
cwtl
and
mov
pop
jg
aam
jno
pop
loop
aam
jnp
dec
mov
mov
movsl
rclb
xor
push
sub
int3
lods
sbb
daa
sbb
pop
lods
mov
mov
fnstenv
lret
notb
jle
outsl
push
ficoml
xchg
mov
inc
movsl
push
push
popf
jnp
daa
outsl
push
movsl
cld
or
stc
pop
ljmp
jno
out
push
mov
lods
xor
leave
mov
ja
mov
rcrb
jae,pt
xchg
pusha
test
cltd
cmp
cld
add
es
loop
iret
in
js
fldenv
test
ja
daa
and
inc
scas
sub
test
nop
mov
pop
mov
mov
sbb
push
jnp
mov
cmp
xor
jb
lds
pop
popa
nop
xchg
imul
or
push
inc
sub
or
stc
pop
dec
push
insl
je
add
mov
pop
dec
dec
xlat
and
xchg
inc
sbb
pop
sbb
push
cs
sbb
sbb
and
outsb
inc
hlt
mov
cmpsl
cs
jbe
mov
jae
jl
fcmove
movsb
xor
js
out
sti
jl
mov
mov
scas
scas
jns
arpl
mov
adcb
std
stc
push
cmp
cmpsb
fstpt
mov
lcall
mov
stos
kmovd
mov
clc
pop
fsubrp
xor
inc
test
fldt
jle
scas
mov
adc
icebp
pop
scas
dec
insl
repz
imul
pop
xchg
int
addr16
jl
push
fcos
popf
test
or
imulb
dec
jne
mov
loopne
repnz
mov
popa
mov
scas
test
and
push
adc
fimull
cmp
movsb
push
mov
ret
xchg
in
jge
test
fmull
out
adc
repnz
cmc
push
stos
sub
popa
cmp
pusha
idivl
cltd
jnp
dec
mov
scas
mov
dec
filds
push
pop
cli
test
sub
movsl
icebp
or
stos
jmp
ja
mov
aad
inc
clc
movsl
fidivrs
xchg
inc
push
outsb
and
xor
add
jae
pop
jbe
xchg
push
icebp
push
or
pop
cmp
xor
in
xor
popf
mov
daa
in
cmp
pop
cmc
fsubrl
ficoml
sbb
je
or
and
hlt
jb
jae
mov
into
add
adcb
add
push
inc
dec
ljmp
push
pop
repnz
push
add
and
xchg
pop
lret
add
in
jecxz
lret
sub
xor
ja
pop
and
add
jnp
add
inc
adcb
add
testl
cmp
andb
xchg
mov
push
mov
popf
aaa
les
mov
mov
loopne
test
sbb
test
jge
add
mov
pusha
xchg
es
insl
lea
sbb
rolb
insl
lods
jle
fimuls
xchg
mov
adc
int
sbb
scas
mov
mov
jp
outsl
mov
ds
pusha
push
mov
push
pop
xor
shr
scas
pusha
aaa
push
repz
xchg
fdivr
adc
lahf
inc
repnz
pop
repnz
or
mov
mov
in
sub
imul
stos
jo
or
ficoml
fadds
std
or
xor
add
mov
xchg
outsl
xchg
mov
popa
xchg
pop
sub
pop
lock
cmp
fbstp
pusha
mov
jb
push
cmp
pop
jl
inc
scas
cmp
mov
sub
dec
mov
inc
movsb
jecxz
dec
jl
das
inc
dec
sbb
xchg
pop
pop
lods
cmpsl
dec
lock
adc
leave
cmp
sub
xchg
and
lods
xor
ljmp
lret
fisttpll
inc
inc
lea
adc
cld
int
cmp
pop
add
sbb
ja
jl
sub
loop
test
daa
sti
jle
mov
sbb
lea
mov
push
add
es
sbb
or
lock
ljmp
mov
cwtl
addl
adc
pop
xor
int3
xor
cmpsb
idivb
sahf
sbb
ds
pop
jg
dec
mov
push
inc
mov
xchg
imul
inc
es
pop
into
mov
mov
push
in
and
cmpsl
popf
mov
and
mov
fldpi
arpl
xchg
enter
dec
dec
push
call
movsb
fwait
outsl
aad
test
imul
and
add
jecxz
or
mov
pop
adc
sub
xor
cmc
stos
inc
out
sub
jno
les
lock
mov
pushf
inc
add
add
fcomip
add
cmpsb
aad
aas
rolb
in
rcrb
testl
cld
mov
lds
mul
xor
mov
jae
cwtl
mov
pop
mov
or
cwtl
daa
outsl
xor
jecxz
jns
loopne
lcall
test
fmul
push
xchg
sub
jmp
mov
pop
rcr
jl
pop
lods
movsb
mov
outsb
lds
cli
les
add
jo
test
je
inc
scas
mov
out
fsubrs
xor
cmc
rolb
adc
mov
outsl
cmp
jns
je
dec
dec
int3
mov
mull
cli
stos
sbb
mov
sahf
jecxz
inc
insb
test
cltd
dec
cmp
mov
pop
gs
test
stos
push
xchg
rol
cltd
int3
loope
or
mov
ret
imul
mov
add
ror
cltd
sbb
xor
or
mov
inc
sbb
or
mov
dec
dec
sbb
sub
or
mov
add
mov
sbbb
repz
push
lret
jo
cmp
sub
imul
xor
sub
cwtl
std
pop
lret
gs
pop
fwait
mov
cmp
mov
mov
leave
mov
inc
test
mov
add
sub
jae
bound
jo
xadd
les
icebp
shl
cmp
pop
mov
data16
jl
pop
pop
popa
adc
pop
mov
mov
shll
push
hlt
test
mov
arpl
cmp
push
jg
arpl
sub
scas
mov
pusha
xchg
repnz
jns
inc
in
dec
call
loopne
sbb
push
jl
popf
lea
pusha
ss
lret
jge
cmp
lcall
jg
in
imul
into
push
shr
jecxz
decl
pop
mov
pusha
sub
stos
xlat
aaa
xchg
jecxz
sbb
data16
mov
jnp
push
repnz
pushf
pop
cmc
into
mov
jl
cwtl
sar
adc
stos
xor
add
pop
adc
out
imul
add
xchg
call
push
out
pop
mov
stc
pop
lahf
push
add
adc
mov
mov
in
jge
rorb
sti
xchg
jno
arpl
lock
mov
sub
push
dec
shlb
inc
pop
jecxz
sahf
punpckldq
adc
ljmp
add
push
cld
jae
xor
pop
in
pop
hlt
add
pop
int3
rolb
pusha
xor
pop
push
scas
adc
mov
mov
ffree
scas
add
or
pcmpgtd
mov
xchg
pop
in
hlt
mov
not
les
in
test
pusha
mov
mov
xor
sbb
push
add
and
push
push
fwait
test
dec
or
push
sti
sahf
rclb
movsb
rol
test
add
adc
ficoml
inc
jge
insl
inc
fs
in
or
imul
mov
sub
cmp
cmpb
pop
loopne
pushf
cmpsl
mov
jl
or
insb
push
push
or
xor
pop
repz
stc
and
mov
xchg
jmp
jae
idiv
sar
jne
sub
inc
lock
rcll
call
dec
or
cwtl
sub
test
ret
icebp
jb
cmp
adc
lcall
push
fidivs
pop
repnz
and
mov
lret
xor
xor
mov
mov
es
pushf
jo
testb
sub
mov
je
push
xchg
sub
push
je
fwait
mov
pop
faddl
xchg
int
mov
push
into
gs
arpl
inc
adc
mov
push
scas
mov
scas
add
ret
push
clc
aas
aas
or
jge
sub
pcmpeqd
sarb
in
cmpsb
xchg
sti
mov
dec
in
inc
cli
push
stos
ss
pop
dec
sbb
cli
pushf
sbb
xor
out
stc
popf
jb
shrl
xor
psrlq
mov
mov
ret
ss
cld
xchg
scas
jmp
lahf
xor
mov
push
mov
hlt
xor
mov
imull
test
xchg
xchg
bound
popf
and
js
mov
add
lret
adc
or
push
jno
cmc
dec
in
sub
enter
scas
insl
sbb
pushf
call
mov
xor
orl
sub
hlt
pop
filds
ds
stos
sub
addb
jmp
bound
dec
rorb
iret
es
dec
mov
int3
in
insl
pop
mov
outsb
lret
push
imul
dec
and
je
push
movsb
repnz
add
outsb
pop
ss
das
mov
aas
jp
movsb
fnstenv
push
lds
dec
xchg
movsb
cmp
insl
lock
call
sbb
push
ds
sub
pop
dec
mov
xchg
jmp
adc
jp
orl
pop
mov
popa
mov
fs
int
mov
sub
push
es
insb
leave
mov
pushf
xchg
adc
mov
inc
mov
fdivl
cmpsl
mov
stc
pop
cmp
pop
sahf
and
adc
lret
popa
subl
xor
inc
in
sti
mov
aad
jmp
sub
xchg
cli
mov
test
xor
sti
outsl
das
mov
fcmovnbe
bound
or
fildl
lods
insb
ffree
jmp
das
ret
lret
sub
jbe
int
xchg
popa
inc
stos
mov
fwait
inc
lea
fcoms
leave
xor
mov
sbb
dec
adc
lods
push
jb
add
push
jmp
and
jo
and
ds
push
mov
xchg
and
repz
popa
xor
mov
push
outsl
gs
std
xor
xchg
pop
daa
test
js
int
pop
pushl
mov
and
push
call
lea
jle
sbb
insb
sbb
outsl
test
cmp
adc
pusha
sbb
arpl
pushf
and
push
ja
dec
and
inc
lods
in
add
push
dec
mov
add
sbb
add
jb
dec
inc
gs
ret
lea
push
and
sbb
jae
adc
jo
out
ljmp
dec
lock
idivb
out
pushf
movl
and
shll
aas
jecxz
incb
add
outsl
add
popl
mov
scas
mov
popf
cld
pushf
mov
push
les
jbe
jne
scas
mov
jle
add
adc
pop
or
in
mov
mov
enter
mov
dec
mov
jp
xor
cmp
xchg
mov
roll
dec
xchg
mov
xchg
out
cmp
enter
ljmp
loop
xchg
adc
out
jns
sbb
enter
mov
push
mov
cmpl
dec
out
je
inc
shrl
mov
rorl
pop
jge
out
popf
in
pop
jecxz
sbb
pop
sub
insb
imul
xor
push
fmul
subb
add
rorl
rol
sahf
cmc
int3
cmp
xlat
scas
jmp
sbb
push
xchg
jb
sub
mov
shll
jo
cld
xchg
xchg
fsts
test
test
in
fidivrs
loop
mov
aad
xchg
aad
add
das
dec
icebp
lea
and
push
adc
push
aas
rcl
and
fstpt
sbb
lret
pusha
mov
sbb
cld
push
lcall
xor
notl
subl
das
or
xchg
int
imul
sub
xlat
xor
stc
lods
mov
inc
das
sbbb
out
cmpsl
imul
filds
jne
aas
push
xor
xlat
xchg
dec
push
ret
in
or
push
mov
sahf
jnp
sbbl
jb
daa
pop
movsb
arpl
mov
imul
repnz
out
push
jge
add
outsb
push
jg
aas
push
lahf
mov
js
data16
dec
push
and
adc
sbb
outsb
xchg
fucom
pushf
into
fnstenv
fs
sub
pop
fisubl
mov
sbb
inc
in
pop
rorl
cmp
mov
pop
sub
pop
lret
mov
push
fnstcw
in
push
mov
sbbb
mov
ds
inc
hlt
push
popf
and
inc
jle
cmp
jo
add
sbb
push
les
movsl
mov
ret
sub
hlt
jecxz
jp
int
imul
mov
or
sub
pop
xor
scas
add
imul
cwtl
int
jge
or
cmp
lcall
scas
scas
aad
aas
or
loope
scas
xchg
stc
push
cmc
loop
add
push
pop
sbb
xchg
add
xor
push
mov
sahf
mov
outsb
mov
push
pop
arpl
pusha
insl
cld
or
sub
push
xor
jg
push
pop
repnz
dec
popf
xor
pop
mov
inc
pop
popf
imul
or
inc
imul
decb
xchg
hlt
pop
inc
aad
inc
pop
fldcw
cmp
lcall
push
es
adc
cmc
mov
jg
cmpb
sbb
aad
add
mov
cmp
fsubr
push
out
mov
xchg
daa
outsl
fwait
sub
loop
mov
xor
push
lret
loope
ret
mov
jbe
mov
repnz
sbb
cmp
ret
jo
mov
add
sbb
and
jns
adc
shrb
xor
fdivs
movsl
mov
lock
scas
pop
fstpt
dec
push
ret
adc
xchg
add
mov
out
mov
rol
outsl
add
dec
int3
xlat
jmp
movsl
adc
rorb
sub
mov
and
adc
xor
fists
adc
orb
or
mov
lahf
scas
xchg
daa
aam
std
shl
inc
lods
pusha
mov
jae
cmc
pushf
xchg
addr16
xor
or
ret
int3
adc
xor
inc
cmpsl
orl
mov
push
mov
adc
mov
nop
dec
fstps
or
push
mov
in
cmpsb
jnp
int3
push
je
int
pop
xchg
stos
adc
mov
xchg
adc
mov
cmp
cld
mov
dec
stos
lahf
xor
xchg
mov
in
pop
nop
sbb
imul
jno
ss
xchg
jge
lods
jb
insl
sub
lret
in
test
mov
dec
es
in
push
xor
rcrb
lods
std
cltd
lea
jne
sub
test
adc
mov
pop
lahf
or
test
repnz
cmpsl
dec
sub
fidivrs
shl
icebp
cwtl
loope
loope
ficompl
sarb
icebp
fldt
sub
xor
frstor
xor
daa
xor
stc
cs
inc
mov
mov
pop
dec
fildl
sti
bound
stos
in
jae
sbbb
movsl
aaa
push
jmp
leave
cmp
test
xchg
aaa
dec
jge
xor
jns
orl
test
test
xlat
pop
mov
jo
arpl
test
fistl
lock
int
pushf
push
popf
leave
push
int
mov
jmp
inc
in
cmpsl
out
icebp
dec
xor
xchg
cmp
pushl
pop
cmp
sahf
sub
add
xor
mov
imul
jl
push
fistps
daa
mov
enter
jns
inc
stos
jle
xor
arpl
mov
mov
js
and
aad
pop
lcall
cmpsb
sbb
xchg
rcrb
sub
xchg
hlt
xlat
and
pop
sub
in
dec
mov
test
xor
pusha
leave
or
xor
repz
push
cmpsb
and
sbb
lret
out
xchg
jmp
inc
lock
lods
rcrb
cmp
jge
daa
stos
inc
mov
imull
lret
dec
cs
movsl
test
push
or
xor
mov
add
mov
fildll
enter
add
cltd
int3
mov
and
push
jns
xor
add
push
xchg
adc
and
mov
inc
mov
jo
and
dec
mov
adc
and
and
mov
or
sbbl
sub
in
scas
push
fwait
xchg
loopne
xchg
out
insl
sub
fldl2t
cmp
sbb
lock
fdivl
outsb
sub
push
mov
je
mov
aas
cmpsb
xchg
jb
adc
fistpl
cmpb
inc
or
adc
test
or
jne
pop
add
mov
insl
dec
in
push
pop
adc
add
xor
pop
push
fdivl
stos
mov
inc
sti
lret
pop
inc
sti
dec
arpl
aad
jbe
pop
in
add
xchg
icebp
out
push
or
int3
decl
cli
scas
or
pop
loope
sub
xchg
pop
xor
mov
aam
xchg
add
xchg
push
xor
push
cmpb
mov
pop
outsb
jne
mov
pushf
loope
mov
xorb
stc
call
or
jo
pop
out
or
fldenv
sub
test
or
sbb
les
orl
lea
loop
pushl
xor
mov
push
jmp
push
jo
dec
divb
repz
cmp
lahf
testl
add
lock
mov
stos
outsl
add
sbb
xor
pop
in
rorl
es
pusha
cmp
jl
sub
dec
pop
adc
popa
jns
push
cwtl
cmp
and
and
popf
stos
dec
xchg
std
pop
mov
aad
sub
adc
lcall
and
shll
in
jae
cltd
mov
sub
lea
xlat
jb
imul
shl
push
imul
repnz
jne
mov
clc
xchg
mov
add
arpl
gs
addr16
scas
xor
jge
sbb
int
sahf
stos
clc
mov
adc
xchg
cmp
adc
push
adc
cld
push
mov
data16
imul
jle
mov
push
sub
imul
dec
cmc
sub
iret
fs
in
movsl
sti
inc
xchg
xchg
jne
scas
mov
aas
add
cmpsl
ret
cmp
outsb
ljmp
ret
jp
cmc
add
adc
sub
pop
push
sahf
clc
and
push
and
ret
aas
cmp
or
or
pop
and
push
stc
sub
addr16
dec
sbb
adc
cmpsb
cmp
int
pop
mov
stos
subl
movsl
pop
movsb
xor
adc
mov
ljmp
push
dec
mov
xor
nop
aas
add
mov
andb
std
sbb
js
inc
mov
pop
cmp
pop
adc
xchg
and
pop
xchg
test
pusha
mov
enter
mov
push
into
enter
dec
dec
in
das
jge
mov
lds
and
iret
fidivl
lcall
cs
das
add
ficomps
jle
ljmp
lock
jne
push
jo
sbbl
cmc
add
adc
cli
dec
pop
insb
in
outsl
xchg
scas
push
inc
mov
pushl
fwait
dec
jae
std
adc
jmp
in
jmp
add
cmpsb
pop
or
mov
fbstp
sarl
sbb
mov
je
call
mov
xchg
jbe
cvtps2pi
mov
loop
pop
ljmp
ficoml
ljmp
mov
or
mov
leave
sbb
out
aad
mov
movsb
adc
push
pop
add
jae
shrl
jno
aad
dec
fistpll
gs
mov
mov
jg
shll
pusha
cmp
repnz
fsts
dec
ret
ret
sub
ret
fldcw
xchg
imul
movsl
pusha
cmc
dec
inc
xchg
or
inc
testb
mov
int3
int3
push
jp
push
xchg
inc
dec
xor
fmulp
sahf
xchg
daa
rclb
adc
lods
sbb
fnstenv
mov
inc
sti
push
pusha
push
adc
fisttpl
push
mov
mov
xchg
mov
pop
jmp
call
int
xor
inc
sub
jecxz
addr16
push
jp
fisubs
mov
cltd
cld
inc
or
repz
ds
test
stos
ljmp
push
mov
sub
sub
mov
mov
loop
and
call
lods
filds
mov
cmp
jb
push
int3
dec
push
aaa
fidivrl
xor
add
jae
out
cmpsl
lock
jbe
jb
cmp
cmp
inc
mov
test
cwtl
lret
mov
inc
fidivs
sbb
rolb
insb
js
mov
mov
push
dec
lret
pop
mov
adc
jno
push
jg
wrmsr
ja
add
mov
inc
and
cmpsl
in
ret
fldt
cs
fcoml
xchg
lock
push
push
lods
testl
pushf
cmc
mov
stos
cmp
jg
jne
xchg
je
inc
sbb
dec
js
repz
ja
rclb
push
mov
fisubl
mov
pop
das
mov
out
lods
mov
push
movsb
adc
outsl
andb
or
sbb
xchg
sbbb
movsb
rcll
and
lahf
jb
mov
mov
pop
cli
adc
daa
inc
outsb
jle
cmp
cs
leave
dec
mov
pop
sub
fs
cmp
mov
jno
dec
cs
pop
inc
repnz
fcompl
xor
in
scas
ja
push
xchg
lock
sbb
inc
sub
or
and
dec
inc
inc
push
sbb
cmp
cltd
jmp
out
jae
mov
out
outsl
in
inc
fwait
xchg
fdivs
lods
xchg
jecxz
ficoms
cmp
and
imul
lcall
xchg
adc
ds
add
xchg
pop
sbb
mov
hlt
shrb
fstpt
sbb
pop
insl
lret
in
dec
sbb
mov
pop
dec
jecxz
adc
aaa
jns
lds
jg
sub
movb
rclb
mov
sahf
mov
fstpt
inc
and
std
stos
inc
sbb
push
lods
pushf
ret
sbb
push
mov
imul
pop
inc
fxtract
jge
mov
push
cwtl
ret
data16
arpl
cltd
mov
rolb
loope
xchg
add
cmpsl
out
insb
lods
push
sti
sub
push
sbb
jle
jl
repnz
mov
pop
mov
arpl
notl
push
xor
or
fidivrs
data16
push
inc
lret
add
outsl
sbb
mov
xchg
mov
sub
fnstcw
cltd
movsl
icebp
lock
xor
xchg
and
mov
add
cmc
clc
xor
cmp
loop
cmc
call
inc
loopne
pop
enter
jmp
jge
out
pop
mov
inc
in
and
lea
xor
cmp
or
cmpsl
insl
lcall
rclb
stc
mov
xor
testb
jo
push
mov
pop
les
movsb
pop
inc
leave
insb
loop
into
fldl
xchg
push
xchg
mov
movsl
push
js
mov
bound
and
scas
sahf
xor
xor
inc
xlat
push
sbb
fldl
xor
mov
push
adc
out
inc
sub
ljmp
jecxz
mov
add
sti
dec
dec
xor
dec
pop
sbb
cmp
mov
fs
mov
stos
orl
or
dec
stc
ja
or
sbb
mov
popl
xchg
icebp
and
popf
or
xchg
jne
lret
adc
cmp
mov
xor
mov
xchg
xchg
add
lock
int3
ret
mov
pop
mov
arpl
push
fs
fisttps
outsl
cwtl
ljmp
mov
repnz
inc
popf
sbb
movsb
push
push
frstor
ds
sub
mov
push
jb
xchg
cmp
fwait
pop
inc
int
inc
xorb
cmp
dec
dec
push
dec
sub
cmpsl
xchg
test
pop
gs
sbb
fsts
std
or
mov
es
shrl
loop
pushf
cmp
push
sub
outsb
mov
sahf
cmc
adc
cmp
fcoml
xchg
dec
jg
adc
popf
adcl
scas
test
pop
and
sarb
dec
add
adc
dec
std
fdivl
insb
push
inc
push
arpl
aam
inc
sbb
shl
imul
mov
cmp
jnp
adc
rol
ret
addl
call
ret
pop
pop
mov
in
sub
inc
aam
dec
inc
mov
out
inc
into
ja
in
dec
pop
jbe
bound
jne
dec
movsb
cli
jp
out
cltd
sub
lret
idivb
pop
mov
lret
out
sub
dec
rcrb
jne
call
in
mov
mov
push
imul
stc
fsubrs
icebp
cmp
xor
mov
std
ja
mov
jge
pushf
das
jbe
test
mov
fidivs
enter
insb
and
adc
inc
mov
outsl
out
mov
pop
scas
mov
fnstsw
xchg
arpl
mov
mov
sub
enter
fbld
and
scas
sbb
xor
cli
cmp
test
sbbl
hlt
cmp
jae
popa
sub
sbb
inc
fistpl
fstpl
pusha
mov
jp
shll
push
jmp
add
mov
xlat
cwtl
std
int3
mov
movsb
push
loopne
xchg
leave
out
sbb
jecxz
ss
or
cmp
sub
cmpsl
xlat
test
rclb
test
inc
or
push
push
ljmp
inc
mov
xchg
aad
dec
pop
mov
cmp
and
pop
out
ret
lcall
lahf
mov
sbb
xchg
cmp
jbe
or
lods
and
stos
es
mov
lods
cwtl
fmuls
mov
push
sbb
out
xchg
pop
adc
add
xor
les
data16
shlb
clc
push
pusha
push
sub
xor
out
cmp
je
adc
cmp
sti
pop
push
in
fcmovbe
xchg
nop
pop
push
dec
icebp
sub
jp
fwait
lods
popf
fbstp
fidivl
popf
int3
out
push
sahf
mov
pop
test
dec
es
leave
push
or
scas
mov
cmp
ficomps
xor
divb
imul
mov
fnsave
std
cli
cmp
and
add
or
jmp
xchg
sbb
stos
push
in
iret
sti
fdivrl
sub
fdivrl
cmp
mov
pop
jle
cmp
loope
int
sti
and
inc
mov
sub
mov
imul
insl
pop
jno
call
lret
data16
sarb
jge
mov
or
popf
and
xor
mov
add
push
xor
add
adcb
in
cmp
leave
iret
cli
mov
push
cmpsb
incl
xor
incb
xor
rorb
xor
arpl
nop
into
insb
lds
fsubl
mov
stos
mov
jle
xchg
imul
fildl
movsl
in
ja
movsb
int3
add
cmp
pop
popa
dec
loope
pushf
pop
adcb
sub
pop
gs
jb
push
cmp
dec
in
cmp
inc
clc
fldcw
or
out
popa
in
adc
and
std
andb
jns
xchg
mov
popf
push
sub
jb
test
adcb
sbb
mov
jp
mov
push
jg
mov
pop
mov
andl
aam
jp
into
cs
aad
ret
arpl
outsb
sub
jle
adc
xor
bound
or
xlat
adc
or
push
jecxz
dec
cltd
jg
bound
in
adc
xor
mov
and
push
andl
rorl
rorb
jp
fidivl
sbb
aam
pop
fimuls
cmpsb
movq
rcrl
cld
inc
arpl
pop
or
sti
fisubs
mov
and
lea
pop
sbbb
int3
push
mulb
dec
dec
jecxz
lea
push
std
mov
sbb
add
adc
mov
fsubrs
les
cmp
mov
mov
push
inc
jmp
dec
fwait
sti
jg
outsl
xchg
mov
cmp
mov
sub
mov
out
sbb
rorb
push
insl
xorl
fsubrl
gs
push
inc
mov
pop
adc
xor
mov
push
mov
push
into
xchg
rcr
stos
cld
stos
cltd
xor
lahf
test
fucomp
mov
test
ss
jecxz
add
push
out
mov
je
pushf
in
dec
add
sti
jp
dec
dec
cmp
vpand
dec
add
nop
loope
ret
movsl
xchg
int3
jmp
test
jb
push
sarl
adc
mov
inc
jle
imull
xor
out
lahf
or
stc
pop
add
xchg
mov
xor
ja
loope
mov
mov
mov
movlps
push
mov
fs
xchg
andl
inc
xor
xchg
cwtl
popf
cltd
dec
mov
je
stos
es
sbb
mov
cmp
popa
test
jb
mov
jnp
jle
out
scas
icebp
jg
hlt
jno
mov
icebp
push
inc
and
inc
xchg
mov
fwait
adc
inc
fdivs
pop
cmp
and
mov
notb
inc
movsl
xchg
mov
mov
push
push
out
aas
cmc
jge
daa
push
mov
xor
add
jl
insl
pop
rol
sbb
jl
ljmp
or
ret
clc
push
jne
loope
stos
jne
xor
pop
call
in
cmp
and
cmp
sahf
lods
stos
lret
dec
adc
ds
int3
cmp
je
loopne
ss
dec
inc
inc
les
stos
push
call
cmpsb
mov
dec
fdiv
ret
cs
xlat
lret
add
add
push
inc
notl
lret
and
icebp
pop
and
mov
imul
adc
fidivrl
adc
bound
aam
adc
jmp
jge
inc
pop
jb
mov
cmp
mov
xor
or
add
pop
cmp
int3
bound
mov
mov
mov
mov
iret
out
inc
dec
out
test
mov
fwait
adc
nop
xor
pop
fwait
lock
sbb
adc
push
lret
push
sbb
stc
test
ss
ja
push
mov
mov
inc
xor
or
dec
call
push
aaa
mov
std
jg
shrl
ret
push
cli
mov
subb
loope
loop
xorl
fs
leave
mov
and
sti
xchg
push
dec
dec
nop
lods
add
sbb
lret
or
adc
popa
stc
sub
dec
jg
stos
xchg
stos
xorb
or
scas
repz
aam
mov
cmp
sarb
lcall
cmp
mov
push
lea
lock
das
stos
cmp
loopne
jbe
cmpsl
iret
adc
pusha
mov
adc
shlb
ret
scas
mov
icebp
sub
adc
push
int
fwait
sbb
mov
mov
xor
rcrb
hlt
clc
jae
fldcw
scas
iret
inc
ljmp
subl
lods
daa
je
in
imul
out
jl
sub
pushf
cs
scas
aad
push
fmul
xlat
pop
sbb
mov
and
or
fucomip
aas
ja
in
das
pop
aaa
sahf
dec
lds
lods
jl
stc
inc
enter
fstps
mov
aam
sub
or
dec
clc
shll
cwtl
repnz
adc
xchg
pop
shll
lods
aad
push
ret
jge
int
loope
in
stos
loop
mov
faddl
add
pop
inc
imul
mov
imul
push
jo
aas
xchg
lret
sbb
pop
sub
inc
in
inc
cwtl
dec
out
and
xchg
orb
jge
mov
imul
cmp
add
lahf
jg
push
jo
fstpt
jp
popa
mov
test
in
and
cmp
xchg
xchg
or
push
sbb
rclb
jb
mov
jno
es
xchg
jge
push
sub
decb
dec
mov
in
adc
sbb
icebp
js
sub
jnp
dec
push
sub
xor
mov
xor
push
push
mov
cwtl
xor
mov
or
mov
movsl
js
mov
mov
cmp
pop
mov
pop
pop
add
jae
ja
jecxz
inc
adc
ss
lret
out
js
cmc
or
cmp
or
pop
lahf
and
jno
or
dec
xor
pushf
inc
insl
mov
cmp
jg
pop
or
xchg
std
stos
out
shrb
test
and
dec
dec
push
enter
push
push
lods
std
inc
xlat
shrb
aad
testb
pushf
mov
repz
cli
mov
mov
mov
clc
push
jmp
mov
jnp
jmp
fcompl
mov
test
enter
pusha
negl
cwtl
mov
add
jle
mov
bound
ret
sbb
fmull
andb
shl
xor
jecxz
adc
inc
ja
ret
test
subl
xchg
mov
pop
mov
shrb
loope
pusha
and
fadds
xchg
inc
dec
mov
movsl
mov
je
ficomps
mov
xlat
repz
push
jl
mov
push
leave
cvtdq2ps
sub
dec
pop
sqrtps
cmp
ljmp
cmp
pushf
pushf
pop
pusha
pop
cmp
stc
pop
cmp
cli
test
dec
lahf
sbb
gs
push
loope
push
fwait
ss
mov
mov
fimuls
and
mov
in
loop
jl
mov
or
jmp
enter
cmp
ja
cld
mov
bound
repz
xor
fildll
push
push
ds
sub
cmp
imul
or
insl
dec
xchg
dec
out
pop
hlt
mov
lahf
xchg
pop
shlb
dec
test
icebp
mov
fistpll
push
push
sbb
mov
sti
stos
inc
sbb
push
inc
jb
sbb
stos
mov
fsubrp
add
cmpsl
sub
popf
sub
ljmp
das
dec
mov
cmp
test
push
mov
je
bound
pop
pushf
ret
cmpsb
xchg
sti
sti
lea
loope
je
xor
add
mov
data16
xchg
adc
xchg
sub
xchg
xchg
mov
pop
mov
ret
popl
repz
jmp
push
sub
ja
sub
xchg
sub
mov
fiaddl
popf
jp
xchg
sbb
call
cmp
js
mov
insb
mov
pop
in
enter
pop
jo
and
push
int3
adcl
imul
rol
xchg
pop
adc
push
mov
stos
xor
dec
in
iret
mov
mov
testl
aam
cmp
into
cmp
sub
dec
call
inc
idiv
mov
add
and
lds
das
pop
aad
scas
sub
test
and
sbb
out
scas
sahf
loop
test
cmpsl
adc
jne
mov
mov
xlat
push
or
mov
fnstcw
xor
add
push
mov
das
nop
mov
jl
xchg
mov
sarl
pop
imul
ss
or
mov
mov
or
xchg
std
pop
ret
xchg
imul
icebp
mov
cltd
loopne
lcall
xchg
or
fnstsw
cmpsb
adc
fsubrp
sbb
mov
loope
xlat
scas
inc
sbb
imul
mov
xchg
push
in
fisttpl
or
add
arpl
sbb
adc
bnd
inc
movsb
loopne
mov
arpl
inc
fisttpl
jne
mov
bound
and
mov
mov
orl
in
jne
push
push
pop
mov
out
bnd
lods
sbb
pop
and
sti
mov
and
xor
scas
push
sub
testl
insl
jnp
ljmp
insb
sub
lcall
fldcw
divl
mov
sbb
jecxz
sub
in
insb
or
xchg
fnstcw
dec
loopne
ffreep
jp
movsb
xor
xchg
dec
push
sahf
jns
mov
es
dec
add
shr
xor
fcoms
lcall
out
arpl
addps
stos
hlt
cmpsb
lock
xchg
icebp
xor
pop
lcall
cltd
inc
push
jno
mov
or
xchg
adc
lret
mov
or
push
inc
popf
adc
mov
pop
mov
dec
or
xor
gs
push
mov
pushf
rclb
cmpsb
mov
call
sub
mov
fld
push
xchg
jns
andl
inc
pop
jmp
and
push
push
sti
pop
push
jae
ljmp
aam
movsb
icebp
and
mov
clc
xchg
sub
shrb
sbb
addr16
in
movsb
icebp
lret
push
fbstp
popa
xchg
push
xchg
push
movsb
xlat
push
mov
mov
fisubl
mov
sbb
jns
ja
sbb
sbb
sub
lret
shlb
and
out
xor
xchg
cmp
scas
cmp
sahf
popf
loopne
adc
mov
or
les
imul
mov
shll
sub
jo
jae
in
inc
adc
lret
loop
push
fwait
push
xchg
push
outsl
inc
clc
dec
pushl
cmp
pop
negb
sbb
addr16
adc
jns
clc
enter
scas
cmp
xor
and
call
add
sub
aad
negl
and
mov
insb
cmp
movsb
shl
lret
bound
lret
fucom
jmpw
call
mov
push
mov
cmpl
mov
test
ret
leave
lea
inc
push
std
test
pop
xor
xchg
push
jo
daa
inc
mov
xchg
call
xchg
adc
xchg
adc
addb
in
ljmp
addw
mov
fsubrl
out
or
inc
mov
xor
mov
cmp
ja
jle
cmp
and
adcl
jnp
movsl
in
push
dec
cltd
push
mov
fs
popf
fstl
push
add
and
out
cmp
xchg
push
loop
fwait
adc
mov
xchg
jl
inc
pop
adc
push
sub
jmp
mov
fsubrp
movsl
mov
xor
and
lret
mov
push
fs
xor
cmp
fdivrs
iret
gs
push
jb
fsubs
pusha
xor
mov
xchg
lahf
mov
insl
mov
and
sbb
mov
sub
mov
sub
stos
test
stos
jmp
pushf
hlt
mov
inc
fwait
sti
in
push
test
mov
push
leave
loope
test
jmp
cmp
aas
in
iret
sub
cmc
into
mov
fimuls
add
mov
ret
cwtl
jne
jb
add
add
pop
push
mov
icebp
inc
fsubrs
popa
test
or
les
cmp
mov
mov
cmpsb
xchg
xchg
hlt
addr16
xor
outsl
jle
sub
adc
mov
sub
sbb
adc
aad
std
pop
rol
mov
out
push
repz
ljmp
sub
dec
or
int3
and
inc
push
xor
add
xchg
xor
jne
ljmp
and
loope
mov
jge
xchg
adc
pop
or
adc
sub
pop
fidivs
movsl
sub
es
cmc
loope
add
add
dec
sbb
aaa
cmp
push
add
loopne
jns
les
lods
addr16
fstl
movsl
popf
xchg
imul
mov
jb
repnz
push
mov
push
or
sub
imul
test
loopne
adc
inc
hlt
dec
dec
test
enter
dec
movsl
movsb
mov
les
xchg
mov
in
xor
adc
sbb
addl
lds
nop
imul
scas
hlt
inc
std
xchg
jns
mov
imul
lret
ret
idivl
inc
fwait
lods
cmp
inc
pop
in
fs
sahf
test
loop
xor
dec
inc
xor
xor
cmp
cltd
js
test
jp
xchg
decb
in
xchg
mov
inc
loopne
ljmp
popa
mov
fldenvs
push
sub
or
cmp
adc
pop
loop
iret
data16
pop
push
mov
xchg
out
loop
inc
in
cld
xchg
orb
push
or
cmp
jl
insb
inc
das
cmp
mov
sub
cmp
jg
sbb
addr16
adc
xor
popf
pop
sub
in
mov
das
xor
les
inc
std
sbb
and
cmp
push
addr16
scas
mov
xor
and
mov
mov
add
je
inc
sbb
and
sti
xchg
and
loope
mov
mov
mov
sub
xchg
repnz
imulb
push
inc
mov
jb
aad
popa
xchg
pop
and
cmpsl
aas
sti
push
lds
push
outsb
add
xchg
icebp
xchg
mov
jge
fs
jp
add
add
arpl
test
pop
push
outsl
push
scas
inc
cld
jae
dec
ss
mov
sti
or
cltd
jle
int3
faddp
fs
add
mov
movsl
or
push
add
pop
hlt
addr16
jmp
inc
mov
test
inc
sub
decl
push
out
adc
testb
xchg
cli
fwait
adc
dec
fildll
imul
jecxz
out
std
adc
push
cmp
or
mov
call
seta
jae
fbld
js
xchg
test
leave
pop
cmc
xor
xchg
adc
ret
pop
pop
xor
jmp
icebp
cmp
xor
cmp
ret
push
push
xchg
cltd
hlt
dec
pop
and
inc
inc
cmp
popf
push
lahf
sarl
xor
jmp
in
in
imul
insb
mov
cmp
sbb
pop
sbb
rorl
cli
test
aaa
jnp
mov
notl
adc
push
and
pusha
jb
out
repz
lods
rcrb
in
jp
xchg
and
arpl
lret
mov
mov
push
sbb
sub
incl
xor
outsl
data16
cmpsb
inc
inc
mov
pop
gs
rclb
mov
pop
aaa
shrb
lret
lods
push
and
mov
xchg
mov
pop
lahf
xchg
mov
xor
jmp
rol
out
or
adc
mov
divb
dec
inc
stos
dec
push
mov
inc
cli
xchg
pop
sbb
dec
aas
pop
imul
movsb
inc
gs
jmp
mov
jnp
dec
out
inc
sti
xchg
add
inc
shlb
dec
jno
sub
push
xor
imul
dec
xchg
xchg
sub
push
dec
or
outsl
mov
dec
inc
in
ja
mov
in
xlat
xor
loop
push
mov
adc
xor
mov
lea
xorb
fabs
es
and
dec
inc
insl
inc
std
or
mov
mov
aam
test
sbb
divb
mov
xor
sbb
inc
add
jo
sbb
int3
jle
and
into
stos
and
mov
add
adc
xor
pop
and
xchg
push
cld
loop
fidivrl
cld
xchg
out
mov
shr
das
flds
push
aas
shr
std
les
aad
cmp
cmp
push
sbb
enter
mov
call
fdivs
mov
xlat
adc
in
jbe
pop
shlb
test
dec
sbb
test
enter
push
mov
sbbl
inc
in
jae
pop
leave
sub
data16
lret
es
push
loopne
lahf
mov
sub
sbb
pop
add
int3
jg
arpl
push
fisubrs
xchg
xchg
das
pop
and
addl
enter
test
mov
jae
mov
push
lods
dec
mov
xchg
push
in
dec
pop
jb
js
cmp
imul
ja
pusha
test
movsl
add
inc
jle
or
cld
jle
xor
inc
leave
flds
scas
cmp
mov
in
loop
fbld
test
scas
inc
fcomp
mov
sbb
jbe
cmpsl
mov
out
arpl
mov
pusha
int
xchg
sbbb
lcall
push
addb
dec
mov
fldl
mov
and
inc
out
popf
jae
xchg
mull
mov
loop
dec
and
sbb
vpmullw
gs
or
mov
shrb
push
shll
or
jb
movsb
pushf
imul
pop
fldcw
clc
mov
cmp
mov
inc
faddl
sbb
cmpsb
stos
jbe
xor
aam
pop
lcall
movsb
mov
adc
push
mov
sub
adc
cmpsb
fimuls
cli
nop
xor
hlt
dec
rolb
and
daa
mov
mov
fldcw
or
mov
and
lock
out
jmp
pop
xlat
add
and
xor
inc
jl
inc
pop
xchg
mov
movsb
cmp
test
sub
cs
push
loop
cs
cmp
lcall
std
sub
xor
cmp
add
pop
xlat
jge
repz
pop
outsl
enter
subl
shll
leave
lahf
push
mov
movsb
in
jl
ucomiss
mov
icebp
sub
mov
lahf
xchg
pop
mov
jns
add
inc
push
push
movsl
pop
loope
dec
adc
je
aas
aad
jo
xlat
push
call
adc
add
movsb
jb
fwait
mov
lret
and
and
jg
jmp
xor
inc
addr16
push
es
sub
inc
pushf
hlt
cmp
fimull
pushf
sub
jo
jg
cmpsl
and
push
test
xor
xlat
outsb
das
push
jmp
push
insb
fistpll
add
mov
pop
push
arpl
jnp
lret
loopne
add
lea
mov
mov
ljmp
cmc
ficoml
into
mov
shrb
data16
fists
xchg
out
es
and
and
out
mov
adc
std
iret
push
insl
jbe
xor
dec
xchg
jo
in
lret
pop
fbstp
cmpsb
out
pop
sar
xchg
add
xchg
mov
sbb
dec
imul
and
push
sahf
rolb
es
fdivl
sub
pop
pop
ja
fld
xor
sbb
repnz
mov
dec
std
add
inc
outsl
cmpsl
stos
shll
lods
sbb
mov
and
mov
xor
daa
test
sbb
dec
orl
in
sub
adc
push
lock
mov
cwtl
mov
xor
mov
idivb
shl
repz
daa
lcall
and
call
iret
jp
jg
or
jmp
shll
rcrl
and
pop
jmp
pop
loopne
sbb
add
and
inc
stos
cmp
and
pop
out
loop
mov
arpl
in
push
or
push
mov
loope
repz
jp
xor
ret
mov
and
shrl
mov
jp
mov
add
aam
shrb
pop
adc
vmovntps
ret
clc
dec
cmc
xor
jge
test
mov
mov
sub
sub
mov
mov
dec
and
lock
iret
data16
jno
and
in
loope
or
dec
sub
sahf
ret
mov
shll
jg
js
inc
mov
xchg
mov
lds
jp
cmp
mov
push
push
lods
test
fisubl
mov
sub
pop
adc
fld
xor
idiv
fsts
lahf
dec
stos
in
adc
xor
xor
pop
stos
inc
pop
xchg
jns
mov
ficomps
adc
in
scas
add
push
mov
inc
inc
dec
add
mov
es
loopne
iret
mov
sbb
inc
ficomps
pusha
xchg
sbb
ss
or
cmpsb
inc
fwait
xlat
inc
jbe
ljmp
sahf
inc
js
ret
lea
jmp
xchg
xorl
add
mov
mov
ja
push
sbbb
mov
dec
dec
mov
lahf
push
out
mov
xchg
mov
loope
mov
pop
xor
sub
xchg
push
vshufps
icebp
mov
push
jmp
pop
cs
sbb
lds
stc
jg
mov
xlat
xchg
dec
or
cmp
call
add
stc
mov
test
inc
stos
xor
roll
cs
push
fcoml
mov
pop
and
pop
jnp
mov
xchg
pop
fwait
ret
ret
ljmp
sbb
sbb
mov
jae
pop
xchg
call
sbb
cwtl
sbb
and
divb
mov
loop
mov
cmpb
jae
nop
aas
mov
mov
mov
dec
mov
sti
ficoms
nop
ret
shlb
push
rcl
jp
fildll
inc
fldt
mov
xchg
pop
fs
andl
wbinvd
nop
pop
cli
inc
mov
out
das
or
enter
cmp
pop
mov
add
mov
lods
inc
or
std
int
cmp
sbbb
adc
sbb
cs
fnstsw
adc
lret
xchg
mov
in
insl
jno
js
mov
pop
adc
cwtl
pop
test
jne
hlt
inc
ja
add
adc
push
add
add
jns
jb
xchg
stos
cli
xchg
dec
jmp
jl
dec
in
lahf
or
into
jb
sti
or
push
mov
test
aad
int
inc
mov
lcall
test
mov
cld
xchg
mov
jns
and
adc
jmp
jnp
arpl
stos
xchg
sub
pop
int3
fwait
mov
mov
leave
bound
ljmp
aas
adcb
push
add
inc
hlt
loope
es
jnp
xchg
jp
mov
rorb
inc
cmc
fs
loope
cwtl
xchg
sub
cltd
movsb
push
mov
mov
jg
mov
lret
bound
gs
nop
xchg
xor
imul
mov
int
inc
mov
pop
iret
mov
outsb
lret
mov
aad
shrl
gs
call
aad
cwtl
das
xchg
jle
add
mov
aam
jecxz
addr16
xchg
or
outsl
push
sub
mov
addr16
adc
and
dec
xchg
das
pop
mov
xor
or
cmp
stc
adc
aaa
btr
add
in
inc
dec
sbb
or
loop
aad
dec
ds
mov
push
sbb
in
addr16
mov
mov
push
imul
sbb
nop
lods
sbb
jg
pop
popl
jae
pop
sbb
je
xchg
adc
clc
adc
pusha
mull
fwait
push
push
mov
push
add
mov
dec
add
aaa
aam
lret
sti
pop
repnz
or
push
cmc
iret
sub
fs
lods
push
sbb
cwtl
stos
inc
lret
cmpsl
mov
movsb
sub
int3
dec
repz
not
shll
lds
pop
ret
fisubrs
mov
adc
cmp
mov
repz
je
dec
dec
scas
mov
cmp
loope
neg
xor
stos
ljmp
add
pushf
mov
sbb
out
pop
loopne
lds
push
ss
inc
mov
jnp
aaa
sbb
cs
fstpl
inc
leave
mov
je
ljmp
adc
and
and
test
adc
mov
scas
aam
add
mov
push
out
inc
mov
xlat
pop
es
filds
mov
shll
jo
cmpsb
mov
mov
enter
push
les
lcall
mov
jecxz
mov
stos
inc
xor
or
adc
fstp
dec
sub
pop
outsl
jg
ret
xor
xchg
imul
call
inc
cmp
mov
pop
mov
mov
add
insb
push
iret
testl
test
push
pushf
sub
call
shll
mov
test
ret
adc
and
scas
mov
push
jae
ret
cmp
pushf
testb
mov
xor
lds
jno
roll
imul
jno
in
mov
scas
add
outsl
inc
stos
inc
mov
xor
jno
stc
cmp
repz
dec
adc
sbbb
fcomp
mov
sbb
popl
or
xchg
repz
lret
sub
cmp
cmp
sub
pop
ret
dec
adc
test
jno
insl
xor
xor
jno
pop
mov
add
ret
movlps
andb
imul
nop
xor
jl
in
shrl
add
mov
scas
in
test
inc
and
add
mov
jge
xor
insl
mov
adc
or
movsl
xchg
jne
enter
loop
cld
pop
sbb
xlat
ljmp
negb
mov
cmpsb
ds
mov
in
or
in
or
or
rcr
mov
pop
test
sub
orb
sub
not
cmp
mov
insl
jns
jne
cmpsl
and
test
outsb
mov
xchg
popf
sbb
frstor
mov
cmp
fcomps
mov
in
lock
and
lea
mov
repnz
add
inc
divl
xor
sbb
mov
lret
gs
add
mov
xorb
push
xorl
mov
jno
push
push
pushf
or
rclb
mov
jo
ret
mov
leave
imul
mull
xchg
iret
in
xchg
mov
popa
pop
lcall
fnstcw
pop
xchg
xchg
aaa
cmp
push
std
rcrl
or
fidivl
idivb
aaa
add
mov
fldcw
and
add
stos
jmp
call
pop
mov
sbb
and
jge
call
cmp
outsb
outsl
xor
add
dec
mov
inc
push
or
shlb
pop
sbb
mov
mov
mov
mov
pop
insb
push
out
popf
jnp
xor
xchg
mov
fildl
in
hlt
cmc
lcall
pusha
and
mov
frstor
add
jb
push
xor
call
or
lods
daa
cwtl
mov
sbb
push
mov
dec
in
mov
mov
scas
cld
push
dec
xchg
sti
mov
mov
sbb
mov
pop
hlt
or
subl
sub
sub
mov
movl
xchg
xor
jp
fmul
fiaddl
lret
adc
push
lods
sub
lods
lds
shrl
jo
mov
cs
gs
mov
jl
mov
popf
and
sti
sbb
adc
bound
mov
sbbb
and
mov
cmpsb
sbb
fadds
cmp
jecxz
push
das
push
ud1
jmp
test
mov
cmp
or
or
xchg
dec
cmp
in
jns
lcall
arpl
pop
add
mov
repz
mov
dec
repnz
jecxz
data16
inc
test
ja
sahf
push
cmp
xchg
lahf
popa
loopne
inc
loopne
push
push
test
sub
push
divl
sti
dec
aaa
jno
cli
rcrb
add
inc
int3
mov
cmp
pop
pop
loope
in
adc
shll
push
fbld
int3
out
or
aaa
dec
das
lret
insl
or
jb
movsl
jecxz
ja
sbb
and
fisubrl
push
jb
add
dec
xchg
movsl
mov
xchg
gs
andnps
push
out
test
sbb
fldcw
rcl
xor
pushf
mov
iret
adcb
cmc
sbb
jle
addr16
xchg
add
add
int3
xchg
lret
andb
imul
aam
mov
cs
movsl
push
pop
inc
fsts
dec
and
jl
hlt
sbb
and
iret
aad
adc
ds
pop
mov
jb
aas
fdivrl
or
push
movsb
les
fistpll
js
ret
jno
cmp
and
push
cli
cmp
cld
jp
out
xchg
mov
xchg
mov
nop
cmp
mov
gs
mov
and
mov
mov
sub
popa
cmpsb
adc
jecxz
or
es
jno
out
add
add
xchg
fdivrs
fwait
ds
dec
push
cmp
sbb
lea
jl
xor
jb
mov
in
push
idiv
repnz
cmp
lods
mov
sbb
sbb
mov
sbb
dec
filds
cs
divps
mov
mov
xchg
mov
cmp
insl
insl
mov
lret
cmp
or
daa
into
cmp
jae
jg
mov
add
movsb
fs
push
pop
sub
mov
mov
jb
icebp
sub
out
cmpsl
or
rorb
add
ds
push
idivl
pop
mov
adc
mov
xor
les
xor
rclb
or
xchg
cltd
jge
mov
enter
push
sub
add
sti
and
sti
xor
aam
es
stc
jo
xorl
mov
xchg
pop
daa
out
lahf
push
in
iret
repz
inc
and
out
sbb
jp
jne
sbb
aad
lret
mov
mov
add
out
lds
lea
mov
sbb
out
lods
les
pop
sbb
lea
rcll
push
loop
fnstcw
or
aaa
outsl
ret
pop
cmp
scas
jb
lods
scas
test
mov
iret
popf
sub
or
test
jp
leave
std
push
das
mov
lret
leave
mov
dec
adc
lcall
movsl
pop
sbb
mov
xor
pop
lea
sarb
fsubrl
mov
rcr
ja
loop
jb
out
mov
dec
xor
jmp
cmp
jo
aas
lods
enterw
lods
jne
mov
int3
sti
mov
push
push
dec
adc
shll
rolb
cmpsb
arpl
pop
push
push
stos
cmp
inc
xchg
xor
jne
mov
std
jo
movsl
insb
add
loopne
add
jecxz
cli
cmp
and
or
cmpb
adc
gs
mov
pushf
out
fcmovu
cmp
divb
repnz
test
cmpsb
shrb
outsb
cmp
ret
popl
or
xor
inc
and
ss
cmp
jo
sub
xchg
andb
rcl
in
fidivs
xchg
cmp
mov
cmp
aaa
call
pop
mov
lods
jo
pop
mov
xchg
mov
je
jae
pop
sub
es
mov
jge
rep
and
mov
popl
dec
pop
aas
push
mov
xchg
popa
enter
shr
push
movsl
lods
mov
lret
std
clc
sbb
xchg
fbstp
pushf
push
inc
std
push
std
xchg
je
jnp
aaa
xchg
sbb
cmp
clc
iret
pushf
in
mov
jecxz
inc
fstps
ss
fistpl
or
cmp
mov
lock
je
mov
addl
sti
rclb
lahf
dec
fldl
push
shll
pop
adc
popa
clc
and
outsb
cwtl
mov
xor
pushf
add
inc
test
add
int
jmp
or
mov
jno
fstpl
addr16
lock
sub
lret
xor
fldl
xor
inc
loope
lea
repz
push
fnstsw
pop
pop
jo
in
or
or
ja
fs
push
cwtl
cltd
dec
das
les
sub
xchg
in
sub
ds
inc
xchg
xor
cmp
andb
xchg
ljmp
xor
and
arpl
hlt
pop
cli
mov
and
lods
dec
mov
arpl
stc
pop
scas
mov
stos
adc
adc
push
xor
sbb
rcrb
imull
repnz
push
jle
sub
aas
xchg
mov
xchg
aam
adc
mov
dec
mov
pushf
outsl
test
lahf
lods
popf
dec
mov
fisubrl
hlt
lret
sbb
ret
arpl
pop
mov
lea
rcrl
lock
mov
test
call
dec
mov
xchg
iret
dec
or
or
fnsave
dec
pop
mov
adc
pop
test
or
das
mov
dec
insb
add
mov
pop
mov
cltd
push
mov
sbb
mov
xchg
arpl
leave
int3
xchg
mov
arpl
pop
cmp
and
test
lock
jbe
sbb
pop
mov
lret
das
add
dec
push
out
insb
sbb
dec
imull
repnz
into
mov
and
sbb
xchg
testl
cmpsb
xchg
or
xchg
push
cmp
jae
lea
mov
push
and
mov
cmpsb
and
clc
mov
movsb
imul
lods
inc
sub
jo
push
push
jl
testl
mov
lock
and
push
lods
mov
jg
stc
lods
xor
movsl
jecxz
mov
in
sbb
cmpb
jae
mov
testl
movsl
jl
xchg
out
out
jge
lahf
push
cmp
insl
loope
jmp
out
jo
cmpsl
pushl
jo
into
in
inc
or
mov
and
mov
cmpsb
jmp
xor
jge
adc
jns
push
es
out
jo
ss
cli
sub
mov
push
popf
dec
into
lods
mov
insb
and
pop
in
cmp
sbb
fnstenv
pop
mov
in
cmc
dec
cli
add
out
dec
call
cmp
shr
sub
dec
in
pushf
cmp
rol
dec
xchg
dec
xor
mov
fbld
inc
xchg
movsb
and
adc
or
cmpl
pop
cmp
mov
xlat
outsb
lds
in
mov
dec
xchg
mov
pop
xor
sub
cwtl
jp
data16
jg
stos
cmp
test
js
xor
inc
out
std
popa
divl
push
pop
jg
stos
mov
pop
cmp
xchg
cs
icebp
mov
cmp
sbb
pop
xchg
jo
in
cli
jne
ret
repnz
mov
sub
aas
ficoml
clc
bound
or
movsl
mov
xchg
push
jno
clc
pop
and
adc
imul
nop
fisubs
rclb
fxch
mov
mov
sbb
push
out
aas
sbb
mov
test
cltd
mov
leave
call
add
scas
loopne
bound
loop
out
mov
cmp
pusha
jne
hlt
xor
sbbl
jl
imul
sbbl
push
aad
sarb
lret
dec
repnz
push
add
sub
iret
push
mov
pop
mov
mov
jl
mov
dec
jle
sub
jae
aam
mov
icebp
inc
loope
pop
add
test
or
and
hlt
cwtl
xchg
jg
sub
cld
enter
pop
jbe
or
lcall
clc
es
push
dec
or
data16
sarl
jecxz
stc
lds
mov
or
insb
add
mov
clc
add
or
or
mov
in
clc
or
jae
xchg
or
lret
cld
gs
push
pop
sub
push
mov
fxch
pop
pop
sbb
sub
jl
in
cmp
sub
adc
and
cmp
test
push
js
xor
std
mov
pop
cwtl
out
std
jo
xor
mov
push
mov
jo
push
dec
sbb
insl
lret
jb
call
imul
in
in
cwtl
push
rcrb
movsl
mov
addr16
fs
xchg
adc
xchg
mov
push
mov
insb
mov
sbb
mov
jmp
push
push
ret
and
popf
push
scas
lret
mov
dec
mov
out
sbb
mov
mov
aam
cli
mov
push
icebp
or
es
jl
inc
outsw
popf
inc
lcall
fwait
loope
fdecstp
lea
lahf
xchg
pop
adc
scas
divb
sub
clc
mov
js
mov
or
hlt
mov
push
mov
cmpsl
mov
pop
das
add
mov
fdivrp
xor
pop
arpl
or
cmc
fcmovnb
xchg
add
push
pop
mov
int3
mov
in
push
das
pop
add
mov
push
aad
dec
adc
xchg
sub
stc
dec
mov
int
pop
sub
mov
push
jmp
pop
jns
lret
je
hlt
int
xorl
fnstsw
out
mov
mov
repnz
dec
scas
xchg
adc
ffreep
mov
pop
mov
sbb
mov
cli
or
push
jbe
sbb
or
aam
sub
leave
nop
mov
dec
stos
mov
ret
mov
call
cmpsb
inc
fdivrl
jge
movsb
inc
pop
cmpsl
jb
cwtl
das
loop
stos
and
xor
inc
xor
fldl
negl
sti
push
test
fdivrp
nop
lea
adc
in
mov
test
sub
push
pop
aas
mov
dec
pop
orl
push
scas
call
mov
mov
cwtl
xor
sub
xor
cmp
inc
fisttpl
push
xlat
andb
pop
outsb
mov
icebp
xchg
popf
pop
or
push
ds
push
lahf
lahf
into
mov
jns
test
flds
mov
aaa
dec
sti
shrl
in
jns
mov
lds
andb
loop
inc
fwait
sbb
call
add
das
push
cmp
push
aad
push
incl
cmpsb
cmp
xor
and
dec
push
je
add
sbb
and
or
fbld
dec
pop
jbe
or
nop
pusha
dec
test
or
loope
sarl
xchg
bswap
mov
lods
repnz
aam
out
xchg
push
lea
outsb
pop
in
popl
or
xchg
mov
loopne
fbstp
test
cmp
pop
pop
cmp
ret
arpl
xchg
rorb
sbb
jo
test
subl
or
dec
aam
pop
out
lea
icebp
gs
mov
dec
hlt
jecxz
in
cli
roll
mov
aad
sbb
xor
inc
js
xor
push
in
jg
iret
mov
imul
xchg
rcr
data16
cwtl
loop
sub
cmp
mov
outsl
dec
out
repnz
iret
data16
ficompl
inc
daa
in
subl
or
call
or
gs
dec
mov
inc
sbb
push
ss
lods
out
je
icebp
cmpsb
iret
cmpps
sub
outsb
add
inc
sbb
mov
xchg
ja
mov
mov
dec
scas
int3
lret
fstl
sahf
lock
mov
out
jae
mov
mov
cmp
xchg
rorb
ss
jmp
sbb
leave
push
test
test
jl
dec
das
mov
loop
push
mov
jle
sub
push
sbb
sbb
cmc
fldenv
jmp
jge
mov
test
xchg
rcrb
pop
add
jecxz
or
test
cmp
jl
push
cmpsl
leave
inc
push
imul
pusha
add
sbbl
mov
mov
aam
insb
mov
dec
leave
push
int
or
lahf
mov
addr16
adc
addl
push
push
popf
subb
incb
fiaddl
jp
test
cmpsb
xor
inc
inc
and
out
scas
inc
xchg
add
dec
cmpsl
outsl
mov
push
pop
outsb
enter
das
loope
xor
ljmp
sbb
push
insb
add
lods
mov
mov
cwtl
loopne
out
xlat
xchg
add
dec
dec
cwtl
dec
aam
dec
fcomps
lods
cwtl
test
loop
mov
and
mov
out
shll
push
inc
std
sahf
xor
lahf
inc
mov
rolb
mov
mov
gs
and
mov
testl
xchg
pop
fstp
lret
xor
jns
out
mov
mov
leave
int
pop
pop
out
je
out
mov
imul
test
outsb
imul
sbb
stc
push
mov
push
in
push
xor
adc
mov
iret
sbb
rclb
fisubrs
insb
jo
ret
mov
pusha
sub
iret
sub
xchg
ret
jae
pop
dec
dec
cmpsl
mov
cmp
nop
push
hlt
or
inc
lods
addr16
pushf
adc
fidivl
insb
or
stc
cmpsl
fcomps
int3
lret
jb
pop
push
or
jae
or
mov
add
or
in
test
loopne
movsb
xchg
pop
fdivp
xchg
pop
scas
lock
adc
pusha
and
pop
out
fidivs
and
jae
aad
mov
jbe
xchg
cmpsl
testb
daa
cld
cwtl
hlt
mov
pop
mov
push
ret
xor
stos
and
xor
push
sub
mov
dec
stos
das
or
sbb
dec
mov
testl
dec
jno
popa
xchg
je
test
push
xchg
sub
leave
jbe
cli
mov
xchg
or
nop
mov
jge
mov
stos
divl
lcall
imull
nop
hlt
mov
sbb
dec
fwait
ss
xchg
sarl
xchg
mov
adc
mov
sub
jmp
out
and
inc
push
repnz
jbe
jp
fnstenv
xchg
sbb
call
or
jne
movsl
lds
mov
lcall
and
sub
push
pushf
jp
cmpps
and
pushf
jp
dec
mov
xchg
mov
sbb
cmpsl
jge
mov
pop
scas
lods
add
outsl
cltd
and
mov
stos
mov
dec
mov
leave
mov
sbb
mov
fcompl
push
test
jle
mov
push
jge
lret
sub
rcrl
jno
lds
lea
cmc
mov
xchg
jne
iret
std
dec
stos
cmc
sti
mov
aam
xor
mov
mov
movsl
cmp
cmpsb
pop
repz
mov
pop
cmc
hlt
out
lret
push
int3
int3
in
jmp
push
inc
cmp
outsb
jno
mov
push
inc
xchg
stos
push
fs
lcall
and
popf
aas
cli
ljmp
jbe
xchg
cmc
adc
push
mov
mov
push
nop
xor
jp
add
xchg
js
in
fistpll
push
push
scas
push
push
lods
subb
scas
aaa
cs
cmp
inc
mov
lahf
pop
mov
push
lods
daa
rolb
lea
sbbb
add
pop
shrb
mov
loopne
iret
loop
inc
movsb
cmp
dec
mov
push
ret
adc
icebp
inc
ret
mov
pop
push
ss
fsubl
ret
jns
xchg
stos
pop
cmpsl
mov
cli
and
pop
push
sbb
mov
sub
jp
cmp
ljmp
ds
lea
push
mov
fcmovb
push
mov
mov
test
orl
or
pop
jle
xorl
mov
push
jecxz
xor
popf
xor
add
sub
sub
fwait
nop
lock
push
inc
jmp
ja
leave
pop
lods
je
ror
into
out
bound
pmaddwd
rcl
sub
sarb
jecxz
in
adc
addr16
push
lods
mov
lds
test
ret
sub
and
xor
cmpsb
jp
in
or
sub
sbb
push
nop
pusha
jno
jne
or
into
sub
cmpsb
push
xchg
mov
cmovo
sbbb
js
sahf
sbb
jne
cld
adc
mov
std
cmp
push
aaa
push
cmp
mov
jmp
stc
lods
xor
sbbb
push
mov
punpckhwd
popa
inc
das
xchg
pusha
cmp
pop
call
push
xchg
push
pop
sbb
mov
stos
cmp
pusha
loop
in
out
cmp
aas
imulb
lock
roll
xor
mov
fsts
test
or
dec
xor
inc
sub
int3
mov
sub
fstl
in
adc
pop
push
mov
sbb
mov
loop
push
and
cmc
xchg
cmp
ss
mov
mov
lahf
mov
imul
rcrb
xor
or
inc
mov
fisttpll
mov
adc
imul
xorl
test
jno
out
popa
adc
xor
pop
ret
cmp
ficompl
hlt
fcmovnb
ss
incl
loope
mov
icebp
sarb
add
dec
ret
mov
mov
arpl
push
mov
add
leave
dec
mov
out
shrl
xor
in
push
mov
cld
and
in
cli
imul
cmp
pusha
mov
mov
popa
jnp
sbb
cmp
dec
jns
fwait
jnp
mov
cmp
cmpsb
pop
xor
lahf
xor
stos
and
out
fmulp
fidivl
add
lock
sbb
lret
push
outsb
leave
pop
inc
cmp
sahf
jnp
mov
xchg
mov
adc
repz
jb
or
mov
mov
dec
cmp
sub
mov
xchg
pop
mov
push
loop
sti
mull
decl
sar
push
das
stos
lcall
xor
mov
pop
in
test
jne
dec
loop
rorb
mov
dec
out
pop
fnstcw
aam
dec
mov
and
push
aas
cli
cmp
pop
or
mov
jg
scas
jo
dec
gs
popf
xchg
imul
addb
je
jg
nop
jmp
jge
pop
test
mov
or
sbb
inc
in
or
lock
and
mov
push
cmpsl
mov
xchg
stos
std
mov
mov
push
mov
mov
adc
add
cmp
jno
test
shll
add
jmp
mov
or
insl
or
or
nop
daa
inc
sub
adc
pop
pusha
pop
dec
pop
pushf
cli
aad
and
ss
nop
decl
testb
dec
push
push
shl
xchg
sti
int3
fnstenv
mov
mov
fistpll
insb
jo
pop
lock
mov
js
pushf
cmp
mov
jno
lret
xor
push
push
popa
es
and
jl
lods
xchg
add
scas
cmp
fwait
js
popa
clc
sti
lcall
mov
cmpsl
inc
filds
mov
sub
shrb
iret
insl
les
aaa
push
mov
push
mov
lcall
rcl
data16
cmp
outsl
daa
cmpl
out
lods
pop
adc
sbb
shlb
inc
fcomp
arpl
hlt
push
lcall
and
insl
add
in
or
mov
push
inc
es
mov
nop
xor
push
icebp
fldenv
ja
fcoms
pushf
mov
ss
test
int
lods
lahf
pusha
push
jbe
sbb
sub
test
cmpsb
sbb
ret
dec
cltd
insl
hlt
in
mov
ds
and
pusha
add
xor
mov
push
rcrl
jge
shlb
pop
sbb
adc
mulb
sbbb
in
dec
hlt
lcall
mull
cs
jno
movsl
test
xchg
test
push
insb
in
cmpsb
pop
repz
or
pop
pusha
mov
adc
neg
mul
sub
je
or
inc
jnp
xchg
jg
xorl
adc
xor
or
add
imul
xor
insb
add
mov
mov
add
push
outsb
pop
adc
inc
test
cmp
fists
mov
mov
mov
fcomps
push
pop
ret
int
add
push
cmc
xchg
ja
push
jnp
xchg
insb
xchg
xlat
lcall
cs
shll
mov
jle
bound
out
dec
add
stc
sbb
push
xor
sahf
jp
adc
andb
imul
or
inc
out
cmp
fstps
mov
lahf
add
call
or
lods
fstpl
cmp
cmp
test
jmp
or
out
inc
scas
sbb
xchg
mov
cmp
jmp
lods
fdivrl
mov
mov
scas
inc
popa
dec
les
ror
repnz
mov
mov
adc
fistpl
mov
pop
or
and
sub
imul
cmpsb
imul
test
push
and
mov
fldl
mov
mov
and
lret
shll
cs
enter
push
jne
adc
jae
fwait
popa
nop
js
mov
nop
mov
or
pop
jl
xchg
add
mov
and
cmpsl
pop
push
in
jl
outsb
push
fstps
xor
rorb
add
pusha
and
xchg
adc
mov
leave
dec
sahf
out
pop
stos
jmp
cli
fwait
cmpsl
add
fwait
test
je
mov
lods
pushf
mov
adc
fwait
out
mov
mov
mov
lahf
or
les
jg
ss
les
mov
clc
mov
inc
push
mov
shl
pop
or
pop
clc
xor
jge
insl
test
sbb
add
mov
pop
ds
repz
sti
and
ror
out
ret
enter
jmp
cmp
mov
inc
lock
loop
adc
add
outsl
sbb
or
or
stos
add
mov
push
mov
jl
jb
insl
shll
sbb
inc
mov
and
inc
inc
dec
jmp
mov
dec
mov
pop
jns
xchg
clc
mov
xchg
sahf
jl
shrb
dec
jmp
loop
aaa
into
add
pop
repnz
push
or
sub
imul
andl
leave
cmpsb
sub
add
xchg
push
inc
jbe
jo
mov
pop
xchg
ja
push
or
test
jle
and
sub
arpl
pop
cmp
push
cmc
pop
push
jecxz
stos
int
sti
test
inc
fdivr
aas
cmp
movsb
rcl
jg
or
scas
xchg
dec
dec
imull
cs
bound
ja
pop
in
cmp
loop
fs
sbbl
mov
sub
scas
pop
loop,pn
movsb
cltd
mov
push
xor
xorl
add
adc
jae
and
rcll
lret
and
gs
dec
cmpsl
stos
repnz
pop
and
sub
push
pop
pop
inc
fmuls
scas
pop
lcall
and
in
inc
sub
das
iret
cmpsb
fildl
pop
inc
jns
xor
repnz
inc
inc
mov
lds
cmpsb
xchg
mov
fistl
out
or
inc
fldl
push
in
notl
pop
popf
fs
sub
jns
and
int
nop
pop
xor
jmp
ret
aad
fmull
xor
sub
scas
add
das
inc
or
mov
sbb
mov
mov
out
out
leave
dec
fisttps
enter
and
outsl
dec
out
dec
push
pop
or
jo
push
lcall
mov
push
mov
out
dec
call
or
xlat
adc
mov
xchg
fstps
rol
adc
testb
mov
push
repz
test
pop
cs
pusha
daa
repnz
std
mov
xor
push
or
cmp
xchg
insl
push
sbb
fmull
xlat
jp
cld
xchg
xchg
pushf
adc
bnd
inc
test
dec
inc
fidivrs
lcall
fs
jmp
lock
out
push
cmc
loop
fsts
pop
ficoms
ds
push
jmp
test
fwait
sub
pop
and
fdivs
movsb
movsl
mov
mov
test
add
outsl
mov
data16
test
negb
and
cld
xorb
lods
push
call
pop
cmp
insb
jge
sub
lret
adc
pop
arpl
aaa
arpl
es
pop
andb
cli
cmp
push
aaa
ret
shrl
testl
and
imul
adc
fnstenv
sub
stos
mov
sarb
xor
or
cmp
inc
pop
outsl
in
lret
and
lds
mov
leave
jnp
adc
stos
lret
or
test
jne
rcrb
pushf
cwtl
je
xor
std
inc
out
cli
iret
and
lods
pop
adc
cmp
aaa
add
aam
push
enter
pop
dec
sbb
cmp
sbb
push
mov
xor
xor
ret
sbb
cmc
push
adc
add
sarl
inc
adcl
lret
mov
xchg
jae
pop
mov
or
mov
scas
and
int
fstps
in
xchg
repz
fcoml
mov
push
call
lret
ret
and
pop
imul
iret
dec
call
jl
je
into
mov
push
ljmp
das
mov
stc
out
cmp
xchg
and
pop
push
in
fdivl
pop
shrb
jmp
outsb
leave
mov
fisttps
popf
outsb
sbbl
jae
sbb
ss
mov
push
push
loopne
push
cmc
adc
test
fwait
add
fisubrl
adcl
sub
push
inc
xor
mov
push
xchg
dec
inc
push
out
in
movsl
sbb
cmp
push
jge
rcrb
xor
mov
xlat
int
stos
jo
xchg
push
push
imul
jo
sub
jno
pop
xchg
cltd
push
or
popa
fcompl
lahf
ss
mov
add
ja
add
test
and
pop
js
insl
jge
jge
add
mov
ror
insl
fsubr
xchg
cli
or
into
mov
or
fucomi
and
xor
xor
mov
mov
shl
push
stc
xchg
movsb
dec
outsl
adc
shl
adc
into
jl
rol
scas
mov
ss
jne
jl
adc
fildl
pop
jo
bound
cmp
enter
cmp
adc
pop
sbb
jmp
dec
fwait
xor
outsl
fcomi
mov
xchg
scas
call
cmp
and
pushf
fwait
mov
mov
jle
or
cs
outsb
push
adc
pop
leave
lods
testb
ljmp
adc
xchg
pop
fldt
sarl
xchg
mov
repnz
mov
fildll
inc
mov
push
jo
lods
mov
dec
mov
adc
jmp
pop
jecxz
std
pop
and
int3
fsubrs
or
dec
add
std
add
and
hlt
jge
popa
mov
lahf
cmp
jo
push
mov
push
mov
lahf
stos
jbe
stos
shlb
int
test
sbb
bound
and
pop
ret
hlt
inc
dec
jno
or
mov
or
or
add
sar
cld
or
inc
in
sub
js
mov
lret
push
push
call
sbb
adc
mov
int3
jne
sub
pop
jno
jbe
xchg
data16
in
xchg
testl
sahf
pop
sbb
scas
fnstsw
mov
scas
js
mov
push
into
cmp
outsb
fmuls
pop
stos
ja
sbb
mov
mov
jmp
xchg
dec
adc
int
stos
sub
push
mov
js
ds
aad
jl
pop
push
push
in
out
cmpsb
int3
jle
sub
lahf
adc
sahf
ja
out
std
cwtl
arpl
pop
std
push
pop
les
es
mov
mov
movsb
jae
sbb
push
xchg
insl
xchg
movsb
das
jmp
popa
loop
xlat
fdivr
add
dec
imul
mov
adc
push
data16
dec
fsub
sarl
pop
jmp
sub
mov
lcall
pop
popa
mov
loopne
shr
sbb
adc
push
push
mov
adc
add
fmuls
scas
test
shl
rcl
or
adc
push
lods
or
out
into
xchg
mov
out
imul
and
outsb
gs
inc
movsb
fcomip
jbe
inc
test
imul
dec
push
jne
mov
idivb
xor
push
sbb
jo
pop
push
push
lods
cmc
jp
shll
jno
xor
push
inc
stos
xlat
fmul
sbb
sub
xor
insb
jl
cmp
lds
xorl
push
adc
out
test
out
inc
lds
mov
fsts
mov
incl
pop
ss
and
shl
adc
add
sahf
lret
shrb
mov
lods
jbe
mov
inc
jle
jge
mov
mov
mov
push
mul
ljmp
fsubrl
jo
mov
std
pop
mov
sbb
push
in
mov
pop
cmc
dec
dec
xrstors
mov
push
xor
mov
loop
pop
clc
call
sahf
mov
imul
int3
add
xor
mov
stc
ss
mov
mov
mov
lods
inc
rcl
mov
cmp
fwait
lock
push
pop
dec
lcall
mov
jle
repz
cmc
sar
xchg
mov
gs
jg
in
xchg
push
leave
and
mov
and
cld
cmp
push
or
mov
sub
daa
fidivl
mov
es
movsl
or
ret
lea
mov
mov
fwait
cs
clc
or
dec
and
add
imul
push
cmpsl
jp
repz
add
mov
fld1
rolb
mov
add
scas
and
repz
jne
xor
xchg
popf
or
xor
mov
and
inc
adc
cli
shr
addl
out
jg
or
lea
xchg
movaps
das
add
xor
pop
das
cmp
cmp
shlb
push
mov
lcall
pop
ret
and
out
cmp
bnd
pop
mov
dec
ja
in
push
popf
ret
cltd
push
jl
and
pushf
popf
pop
add
stc
mov
xor
mov
inc
imul
data16
js
pop
pop
movsl
cmp
jle
xchg
cmp
lahf
mov
pop
das
test
test
mov
and
call
xchg
cli
test
jne
mov
dec
shrl
les
jge
xchg
or
repnz
scas
popf
pop
loopne
push
adc
and
jp
fnstenv
int3
vpmaddwd
repz
dec
or
fidivrl
sub
stos
jbe
gs
xchg
push
xchg
push
mov
xor
iret
sub
lea
andb
insl
cmpsb
cmpsl
fmuls
shll
cmc
int3
mov
push
daa
loope
pop
js
inc
stos
jbe
std
dec
into
xor
aad
popf
stos
loopne
adc
push
in
adc
stc
mov
scas
add
iret
jge
sbb
or
out
jno
sub
test
stos
lods
sub
mov
jge
mov
in
fwait
push
mov
jbe,pt
jmp
cmp
cltd
or
cld
dec
out
mov
scas
sbb
adc
jecxz
test
lret
pop
daa
and
xchg
xor
js
push
sbb
jp
js
or
jne
aad
arpl
fs
insl
sub
xchg
jecxz
sub
hlt
mov
mov
dec
inc
fadds
sub
pop
jae
cmc
mov
jp
and
cmpsl
ds
mov
lds
fwait
bound
jecxz
cmp
pusha
out
sub
pop
push
lods
and
lret
flds
pop
out
jecxz
in
xor
repz
and
sbb
mov
imul
jne
mov
inc
push
out
imul
sbb
sbb
pop
lret
dec
decl
adc
xor
sub
mov
adc
sar
sub
fsubr
test
xor
fcomps
mov
imul
jb
push
testb
ret
sbb
sub
and
inc
cwtl
inc
imul
or
mov
stos
adc
push
jno
jecxz
and
push
rcrl
popa
add
cli
xchg
cmp
scas
or
es
jne
loop
ja
push
mov
mov
loop
mov
xchg
enter
out
or
into
xchg
pop
add
and
dec
mov
sbb
ret
push
push
cs
push
add
sub
dec
xchg
mov
mov
mov
ja
sub
mov
xor
daa
jnp
ja
push
xor
mov
or
in
pop
push
adc
mov
inc
cld
sbb
loop
stc
mov
xlat
jnp
das
stc
shrb
lret
push
mov
popa
lock
js
mov
int3
dec
data16
jmp
cmpsb
sbb
dec
out
daa
aam
in
xchg
out
jno
add
push
imul
mov
jmp
rcrb
jns
jmp
sub
jno
add
pop
lods
and
jl
xor
mov
std
or
mov
aam
inc
xlat
sahf
divb
or
dec
lret
push
mov
mov
add
int
in
push
or
sub
mov
or
mov
inc
sbb
pop
or
imul
negl
mov
mov
aas
inc
outsb
orl
lock
stos
jne
mov
gs
int3
inc
or
xchg
jns
xor
mov
sub
or
push
sub
jmp
jne
sub
ret
aaa
stos
insb
and
out
dec
mov
or
das
jo
aad
push
push
adc
xchg
in
pushf
loopne
fidivrs
sti
add
mov
jmp
and
adc
andb
dec
or
aas
sbb
push
scas
and
cmpsb
scas
inc
inc
hlt
movsl
push
je
push
icebp
aad
shl
sub
jmp
or
jl
or
lcall
fsubs
arpl
add
mov
test
push
fimull
cld
push
lods
sub
shll
stos
pop
pop
rcrl
mov
in
xor
loopne
je
add
out
cmp
lea
jmp
sbbb
jge
out
imul
testb
and
dec
sub
and
inc
push
mov
add
out
insb
xor
adc
pop
push
sbb
xor
lods
inc
sahf
enter
fsts
push
sub
shll
shl
mov
das
mov
pushf
jmp
out
popl
cmp
inc
jmp
sbb
mov
cmpsb
jle
daa
push
rol
fistps
rcrl
insl
loopne
dec
fists
sti
xor
aad
stos
jecxz
ret
sbb
std
cmpsl
or
pop
sbb
bound
xchg
or
jle
mov
push
jo
inc
shll
jp
adc
or
cmp
add
jp
push
pop
mov
test
pop
mov
out
aas
mov
add
iret
lret
xor
push
in
cltd
mov
filds
notl
aaa
lret
dec
mov
jmp
mov
xor
mov
jo
adc
cli
sahf
clc
sub
fistpl
adc
dec
cmp
cmp
xor
mov
jno
imul
in
movsb
enter
dec
xchg
rcr
jb
and
and
js
das
jo
cmp
sarb
fdivrl
mov
arpl
cmp
sbb
imul
jo
shl
bound
ljmp
daa
or
ret
fwait
and
les
fsts
xchg
xor
mov
push
mov
ljmp
and
rcll
sbb
xchg
inc
mov
mov
sbb
iret
aad
int
or
inc
pop
pop
push
in
aaa
sub
cli
insb
fbstp
mov
pop
test
iret
cmpb
jbe
rcll
mov
test
roll
mov
test
xor
or
mov
outsb
dec
cli
jne
out
sbbb
push
ja
mov
push
call
or
test
sub
out
sub
jo
sbb
scas
fidivrl
divb
mov
call
cmp
aad
repnz
sbb
jmp
fs
addr16
mov
imul
push
mov
xchg
or
lcall
jmp
rcrb
xchg
iret
add
mov
test
lret
mov
insl
jno
mov
xchg
cmp
dec
pusha
bndstx
mov
in
jbe
mov
mov
add
push
pop
cmp
jb
xor
add
shlb
fwait
xor
cmpsb
jns
es
jg
in
aaa
mov
dec
sub
cmp
ja
fsts
push
xor
push
pop
inc
stc
into
sbb
les
mov
or
xchg
add
ret
mov
mov
in
loope
es
and
mov
pushf
je
mov
jge
fsubr
sarl
jno
sbb
mov
cmp
jb
mov
mov
xchg
jne
adc
ljmp
mov
and
xor
sub
cmpb
xchg
aam
pop
push
mov
push
outsb
and
fisubrl
mov
inc
mov
pop
das
or
hlt
sbb
scas
inc
mov
cld
or
je
test
mov
xor
pop
sub
and
xchg
call
scas
inc
out
decb
test
int
sub
ja
cmpsb
aaa
test
insl
cmovs
loope
xor
adc
sub
push
lds
mov
sbb
add
inc
or
xchg
paddd
cli
adc
addr16
and
mov
xor
icebp
cmpsb
lock
hlt
fbstp
dec
and
dec
inc
aas
outsb
xchg
mov
movsb
test
sub
test
jge
call
jmp
dec
jo
js
insl
jo
and
jecxz
mov
les
and
sbb
pop
lret
dec
es
fists
in
mov
jae
es
popf
loopne
adc
adc
orb
movl
add
xor
cltd
std
mov
fldcw
dec
outsb
sti
outsb
jl
clc
popf
or
and
addl
push
enter
sub
or
jae
mov
add
ss
and
push
jne
dec
adc
cmp
pop
and
inc
in
leave
in
std
inc
out
insb
xchg
add
fwait
nop
int
fchs
in
aas
jge
sub
lcall
push
aam
movsl
lds
shl
jle
leave
mov
or
imulb
test
pop
mov
lea
mov
push
pop
jae
mov
xchg
pusha
lea
into
pop
pop
jb
stos
movsb
mov
push
xor
daa
loop
jno
xor
push
and
cli
or
lock
rcrl
pusha
shrl
cmc
int3
and
mov
sub
dec
sbb
or
pop
outsb
in
inc
inc
imul
cmc
push
mov
testl
loope
notl
movntq
call
push
inc
cmc
cmp
inc
xlat
ret
cmp
or
push
js
and
xchg
pop
mov
push
cmp
or
enter
bound
push
jb
cmp
push
jae
mov
nop
or
lods
inc
mov
mov
cltd
cmp
icebp
jp
jo
ret
pop
mov
cwtl
jl
stos
mov
rcrb
or
aam
jne
fs
ljmp
icebp
insb
sbb
dec
inc
mov
xchg
sub
hlt
pop
imul
and
pop
in
cltd
in
test
and
lahf
mov
jb
ss
nop
das
add
xchg
dec
stos
cmp
sbb
or
les
movsb
dec
push
push
inc
repnz
cmpsb
cmp
mov
addr16
pop
aas
mov
sti
sub
out
cmc
ds
xchg
lcall
xor
inc
xchg
cmp
shl
xchg
and
and
mov
add
pop
push
sahf
inc
sub
adc
inc
idivl
push
jnp
xchg
add
mov
add
mov
bndstx
lods
decb
pop
jmp
aas
sub
push
inc
cmp
xor
test
outsb
sub
jae
xlat
sarb
add
inc
add
negl
jle
in
aaa
add
into
cmp
mov
push
test
mov
dec
xchg
negl
mov
jnp
sub
pop
sub
out
jl
aas
outsl
imul
and
aas
and
sub
lahf
jb
loopne
mov
cltd
jnp
rorl
fistps
movsl
sbbb
cmpsl
jg
push
sub
loope
aam
and
cli
push
add
xor
das
pop
sub
mov
pop
cwtl
dec
add
stc
pop
add
shlb
out
dec
scas
loope
test
cmpb
std
or
bound
rolb
push
jge
clc
xchg
scas
sub
loopne
jb,pn
pusha
rol
testb
and
and
cltd
adc
popf
cmp
jl
loopne
sbb
std
mov
add
out
adc
loope
cmp
adc
jmp
sbb
mov
fildll
mov
fwait
push
int3
int
or
sbb
popa
mov
sti
roll
fsubp
lcall
pop
rclb
and
dec
push
xor
icebp
push
xchg
xchg
pushf
dec
jl
int3
lods
imul
mov
pushf
adcl
sbb
mov
push
xor
push
inc
push
imul
xor
jo
icebp
cmpsb
jg
sti
adc
or
cmpb
push
icebp
daa
fildl
and
jb
loopne
dec
mov
cltd
movsl
cmp
lahf
scas
fiadds
mov
pushl
jl
leave
and
test
push
push
fwait
or
jbe
orb
jg
fcmovne
mov
test
hlt
jp
gs
push
dec
cmp
repnz
stos
sub
jnp
lret
push
inc
push
push
sbb
inc
mov
rorb
mov
test
mov
inc
adc
xchg
sub
mov
push
mov
cmp
xlat
hlt
hlt
mov
cwtl
adc
inc
fistps
jg
iret
outsb
inc
jge
or
dec
xchg
jbe
cwtl
cltd
lock
aaa
into
sub
push
jne
inc
push
push
std
lcall
add
inc
xchg
arpl
test
fwait
mov
pushf
insl
fdivs
hlt
mov
cvtpi2ps
pop
and
std
out
jg
pop
mov
jb
dec
shr
jnp
cmpsl
ret
call
in
push
in
mov
lock
adc
mov
jae
xor
xchg
cmp
dec
jle
sbb
jns
jmp
movsl
cmp
lret
rclb
pushf
cmp
jmp
mov
mov
mov
movsb
jecxz
adc
inc
fisubrs
add
inc
das
sarb
iret
mov
imul
adc
xchg
adc
cmpsl
lret
lret
mov
and
inc
movb
outsl
add
jno
pushf
sub
cmp
jp
and
orb
push
imul
add
dec
xor
jno
pop
cwtl
mov
jns
mov
adc
xchg
out
dec
aaa
add
movsb
and
adc
add
xlat
popl
leave
and
popa
inc
hlt
xchg
or
cmpb
sub
fistpl
and
aaa
jbe
movsl
or
inc
addb
ds
test
jmp
xchg
into
lea
cmp
fcmovnb
dec
out
sub
out
inc
call
cmp
sbb
sub
add
imul
add
jp
pop
xor
adc
loop
int3
xor
in
mov
sbb
ljmp
rcrb
jmp
std
mov
insb
add
mov
dec
mov
mov
leave
cmpsl
sbb
adc
lock
dec
fidivrl
shrb
dec
add
and
daa
xlat
inc
daa
inc
outsb
ret
pop
add
insb
xchg
sbb
aad
mov
dec
das
cmp
cs
add
dec
jecxz
test
sti
fldenv
aas
fbld
mov
push
aaa
adc
inc
pop
fbstp
out
xlat
pop
xchg
std
inc
enter
andb
addr16
inc
sub
cwtl
cmp
repz
ret
into
pop
hlt
cmp
js
cmpsl
xlat
or
push
pop
lds
ljmp
into
jnp
out
shl
push
push
cmpsl
jmp
sub
add
sub
lret
jle
lret
pushf
int
fwait
std
popa
ljmp
mov
es
xchg
pop
rcll
mov
cmp
jb
repnz
lret
mov
notl
xchg
adc
cmp
test
jle
cs
push
dec
push
scas
push
ficompl
bound
xlat
mov
insb
add
popf
mov
cmp
cwtl
aad
pop
mov
or
inc
inc
lcall
push
lret
andl
xor
lock
out
or
xchg
mov
mov
add
xor
lock
ret
push
push
jp
xor
inc
leave
mov
push
in
sub
rcr
pop
fmul
jns
inc
xchg
arpl
xor
lods
mov
mov
push
stos
xchg
sbb
mov
mov
pushf
icebp
mov
mov
insb
rcrl
sahf
pop
dec
ret
mov
mov
inc
mov
xchg
mov
lret
mov
pop
dec
inc
jmp
mov
test
pop
inc
mov
push
xchg
push
sub
je
out
or
mov
into
sbb
loopne
loope
push
ret
pusha
pop
push
and
push
lret
dec
jge
jecxz
jne
cmp
or
cmp
push
xlat
fildl
in
push
call
cld
sbb
sbb
cli
push
pop
sbb
cltd
inc
divl
xor
add
mov
mov
mov
pop
adc
jl
scas
inc
stc
sarl
insb
iret
pushf
scas
popa
mov
cmp
xor
subl
inc
mov
xadd
mov
mov
imul
pop
test
sub
mov
push
out
lret
or
cmp
mov
ret
hlt
xchg
mov
pushf
ja
ret
test
je
outsb
mov
pop
jg
dec
rcr
or
ss
rcr
jl
dec
movsl
aaa
enter
loop
dec
dec
aad
inc
jg
jbe
in
xor
jnp
dec
ss
aad
xchg
jge
out
cmp
dec
es
out
cltd
data16
cmp
dec
sbb
push
out
test
bound
sarl
insb
xchg
xor
xchg
pslld
dec
shrl
mov
ja
and
jmp
xchg
into
addl
sub
jne
or
aad
enter
pop
xchg
inc
sbb
arpl
cmp
cmp
data16
sub
stos
cmp
jns
mov
orl
pushf
and
aas
mov
lcall
xchg
mov
imul
pop
jge
pop
popa
or
call
out
daa
pusha
ljmp
stos
dec
or
aas
shrl
stos
or
fistpl
fidivrl
iret
movsl
lds
pop
sbb
cmp
movsl
add
pusha
mov
rorb
cmpsl
inc
movsb
fs
push
push
jae
mov
je
jb
insb
mov
inc
into
int3
push
mov
push
mov
sub
xchg
xchg
mov
shlw
fcmovne
xor
stos
inc
mov
es
ja
or
test
ljmp
icebp
mov
in
mov
cmp
call
inc
add
scas
in
mov
sti
pop
je
je
push
sub
mov
mov
jle
popa
loopne
lret
dec
nop
jecxz
inc
dec
out
dec
dec
stos
imul
mov
mov
or
sub
movsl
mov
jns
inc
dec
mull
mov
jb
adc
sti
imul
roll
loopne
mov
or
pop
mov
xorb
mov
in
cwtl
mov
ret
pop
aam
jo
inc
xlat
lock
jge
dec
mov
leave
fwait
std
and
cltd
jp
cli
push
adcb
sti
stos
pop
orl
je
fsubr
inc
xor
loopne
or
ss
jo
pusha
mov
xchg
shll
int3
and
xchg
push
sbb
ds
xor
pop
call
dec
jnp
or
aas
shrl
dec
xchg
inc
jae
add
cmp
negl
cmc
cltd
in
mull
fwait
cmpsl
mov
mov
jle
mov
push
call
or
xchg
mov
push
pushf
mov
jle
sub
rorb
or
push
nop
mov
in
and
push
cmpsl
inc
jae
xchg
sbb
xchg
push
movsl
lcall
push
mov
jecxz
xchg
aad
mov
add
push
cld
fucomi
dec
sbb
xchg
dec
shr
jne
push
test
sbb
jnp
shlb
add
mov
gs
add
hlt
cmc
lahf
and
cwtl
inc
push
cwtl
cli
add
test
pop
pop
lret
pop
or
mov
xchg
adc
movsl
shll
sub
lods
jecxz
mov
sbb
fsubr
pop
dec
ret
jp
test
scas
lock
jo
pop
xchg
xorl
test
xor
scas
es
imul
dec
repnz
rcrl
sub
fimull
mov
mov
jg
jle
lods
adc
xlat
stc
inc
xchg
outsb
cli
jp
jo
rcll
bound
and
xchg
lahf
lcall
fiaddl
movsb
inc
pop
sub
adc
or
iret
cmpsl
fldl
pop
aad
std
adc
add
add
je
or
cmp
jmp
les
and
pusha
xchg
cmp
pop
cmp
jecxz
push
insl
mov
push
dec
jae
mov
mov
pusha
xlat
loopne
sub
les
push
loope
mov
pushw
xchg
push
sahf
jbe
push
aad
lods
lret
jbe
push
push
pushf
scas
sbb
out
nop
testb
fldenv
sbb
sbb
in
cmp
push
insb
pop
sbb
and
xor
lds
cmp
clc
or
fcmovnb
out
in
imul
shlb
or
mov
int3
jg
idivl
mov
cli
xchg
push
jle
add
pop
test
jns
sub
outsl
stos
sub
xchg
negb
gs
les
les
mov
jae
mov
shl
scas
adc
push
movsb
and
sub
sbb
repnz
add
lret
pop
cld
and
lret
jbe
and
mov
fildll
jno
lret
push
test
mov
rcll
aaa
add
arpl
out
das
push
cmp
insb
js
movsl
popf
sub
xor
sub
and
leave
jp
ror
pop
cmp
cmc
xchg
pushf
jmp
sbb
das
mov
negb
int3
ljmp
dec
mov
jp
jnp
js
mov
push
dec
ret
sbb
nop
add
jmp
andb
mov
add
xchg
int3
jno
and
fwait
xor
fs
sti
lret
xor
popa
push
aam
add
std
lret
adc
bound
and
mov
out
repz
dec
lahf
xor
pop
mov
aam
jmp
jmp
pop
fstl
push
inc
jno
inc
cs
pop
cwtl
das
out
xor
sbb
dec
mov
int3
sbb
mov
sub
dec
lods
dec
push
mov
or
bound
sbb
popf
jno
inc
mov
mov
add
mov
adc
ja
mov
fwait
icebp
pop
xchg
pop
loope
jo
push
stos
dec
test
and
movsb
sahf
out
in
js
xorl
push
push
ret
enter
lea
lret
xlat
inc
sbb
xchg
ss
xchg
pop
jae
lret
cld
inc
dec
push
in
xor
sub
jne
repz
out
loopne
ljmp
or
out
and
mov
ss
hlt
sub
and
sub
dec
adc
subl
xchg
pop
mov
mov
or
push
addl
cs
fwait
lods
aas
repnz
push
pop
out
add
add
inc
pop
les
cmp
xchg
rcrb
sbb
sbb
mov
or
mov
imul
xchg
push
and
rolb
out
lret
xlat
sarb
and
mov
adc
mov
sbb
inc
jae
dec
push
aaa
pop
hlt
jns
cmp
das
jnp
add
dec
dec
xor
outsl
daa
dec
dec
or
add
idiv
or
sub
push
lahf
and
arpl
ds
dec
movsl
push
mov
sahf
hlt
dec
inc
out
loop
es
push
adc
push
cmp
outsl
addl
xchg
lods
out
ljmp
and
and
dec
adc
std
fldenv
nop
mov
test
fcmovbe
dec
mov
orl
andb
movsl
cli
jo
in
mov
pop
out
add
movsb
les
loopne
test
xor
xchg
pop
sub
cli
push
mov
inc
and
bound
fidivrl
push
lret
lods
shlb
dec
nop
xchg
inc
out
call
lret
mov
lods
mov
push
or
int3
mov
sbb
das
stos
mov
xor
pop
outsb
std
shl
pop
aaa
es
repnz
adc
gs
repnz
stc
cmp
sbb
or
inc
push
sbb
pop
and
pop
and
push
dec
fnsave
pop
dec
inc
pop
xchg
cmp
sbb
or
push
fsts
pop
add
cmp
mov
sub
push
jle
in
mov
stos
sub
fs
and
subl
ss
popl
cmp
xor
and
iret
jle
into
out
xchg
mov
rol
and
test
add
daa
inc
arpl
or
push
rcrb
test
lcall
data16
dec
sbb
mov
cmp
mov
hlt
mov
clc
or
cmpsb
pop
xchg
cmp
in
ja
adc
adc
roll
adc
lock
and
cmpsb
inc
test
dec
push
rorl
call
pop
xor
mov
inc
aaa
in
push
sub
push
insl
jp
insl
les
jbe
aaa
mov
rcrb
push
lret
loop
out
sbb
out
idivb
lret
std
cltd
aaa
enter
push
cmpsl
movsl
or
sbb
cmp
mov
repnz
fmul
jecxz
and
scas
mov
jge
shr
jp
push
outsb
inc
cld
pop
stos
push
mov
push
iret
and
es
ljmp
push
cmpsl
adc
adc
mov
push
arpl
ret
add
mov
lahf
lea
inc
psllw
lods
jns
js
push
popa
add
aad
sbb
rorb
out
subb
out
xchg
mov
xchg
pop
les
cmc
mov
imul
xor
push
cltd
pop
movsb
mov
lock
insl
loop
test
mov
les
js
enter
pop
scas
adc
and
out
fistpl
adc
rorb
scas
pop
scas
and
mov
jbe
jecxz
cld
test
adc
sbb
fsubrs
jne
int3
sub
push
sahf
push
outsb
jb
push
ret
pushf
xor
aas
lds
xlat
cmp
rcrl
mov
xor
adc
icebp
sbb
psrlq
scas
scas
pause
out
into
popa
and
lds
cwtl
cmpl
mov
enter
push
inc
pop
mov
sbb
roll
inc
cmp
aad
pop
je
lret
lea
daa
dec
ret
push
movsb
xchg
or
sbb
or
mov
add
mul
sub
cld
mov
dec
sub
cmpsb
or
xchg
hlt
and
insl
mov
mov
adc
cmpsl
jle
add
pop
cmp
fstpl
cmp
loope
out
jnp
punpckhdq
lds
outsb
jle
cmovge
jbe
lret
push
xor
pushaw
aam
js
dec
push
mov
sbb
fldcw
push
stc
adc
adc
mov
arpl
cmp
push
and
pushf
dec
jne
push
xchg
push
les
and
in
lahf
negl
push
or
sub
outsb
and
ss
sub
jb
ret
or
les
adc
into
shlb
sbb
adc
sub
mov
cmp
or
xchg
xor
repz
in
add
ss
inc
sbb
sub
cmp
in
push
mov
int
sbb
outsb
mov
xor
pop
xlat
ljmp
ljmp
push
cld
jb
push
ljmp
and
ret
mov
sub
mov
cmp
push
clc
inc
fcmovnb
jle
leave
stos
fcoms
adc
dec
sbb
cwtl
imul
insb
xchg
cs
cmpsl
mov
inc
jo
xlat
orl
mov
stc
adc
scas
xchg
test
dec
mov
daa
mov
punpckhdq
adc
jg
sub
mov
les
pop
ss
les
mov
mov
sbb
mov
push
jae
jl
sub
mov
test
cltd
stos
mov
in
das
xor
fwait
sub
push
lock
outsb
cld
cltd
mov
lahf
pop
push
pop
in
xchg
iret
insb
mov
sbb
int3
pop
xchg
pop
cmp
jbe
iret
mov
data16
ret
insl
jg
icebp
mov
fcmovne
inc
or
sbb
push
gs
push
sarb
mov
not
inc
out
lods
lock
hlt
mov
jae
xlat
jmp
adc
incb
xchg
sub
add
and
pop
cmp
sub
test
dec
hlt
sbb
and
fsubl
mov
outsl
popa
mov
sbb
in
or
inc
or
xchg
jge
rorb
cmp
dec
xlat
cmp
scas
lods
and
cmc
sub
dec
insl
testl
mov
cmp
push
loop
mov
dec
lods
inc
cmp
stc
lods
hlt
pop
pop
repnz
push
and
pop
jae
sub
repz
lods
cmp
jg
pop
xor
mov
fcmovbe
test
xchg
and
mov
repnz
aam
cmpsb
and
push
movsl
jne
jge
loope
loope
xor
sarl
loope
jnp
mov
mov
dec
cmp
inc
sti
adc
mov
add
mov
les
jge
mov
out
pop
pop
into
push
push
jns
bound
xchg
ret
outsl
sub
jnp
lods
mov
adcb
pop
repz
je
cmp
pop
xor
punpckldq
xchg
mov
cmp
sub
cmp
mov
mov
lock
rorl
or
imul
push
and
and
fs
cmpsb
adc
xor
pop
das
pop
and
lahf
cltd
aad
mov
mov
insl
iret
cwtl
mov
mov
stc
out
push
add
rcl
jne
adc
mov
ud1
sbbb
popa
loop
ja
mov
sbb
lcall
cmpsl
fnsave
add
movsl
sbb
push
push
push
xchg
imull
mov
and
fisubs
mov
out
bound
mov
call
outsl
xchg
dec
dec
jo
hlt
mov
mov
adc
popf
mov
push
mov
jmp
in
mov
movsb
subb
repnz
dec
or
in
xchg
lret
les
int
cli
mov
movsb
inc
pop
repnz
lcall
movsl
pop
mov
adcb
jnp
icebp
pop
mov
and
dec
sahf
shll
push
push
push
inc
pop
pusha
and
and
cwtl
mov
xchg
sub
xchg
insl
inc
inc
repnz
cwtl
hlt
outsl
cli
pusha
testb
loop
sti
fstpt
push
mov
push
push
rorl
xor
test
jbe
pop
rcl
adc
cmpl
inc
mov
jnp
roll
mov
leave
cmc
xchg
pushf
out
inc
sub
pop
test
enter
int3
jg
cmp
aaa
jmp
rcrb
cmpsl
das
pushf
push
test
inc
pop
mov
std
pusha
jle
jbe
mov
rclb
mul
pop
add
sbb
mov
bound
mov
fsubrs
mov
push
mov
lahf
data16
adc
adc
cmp
sbb
pop
rcrb
mov
adc
sub
push
mov
dec
movsl
testl
std
xchg
in
addl
imul
mov
frndint
lds
and
fs
stc
inc
mov
cmc
and
in
add
lret
icebp
nop
imul
or
test
clc
xchg
mov
popa
fstps
mov
dec
sbb
les
popf
pop
xchg
sbb
pop
ss
cltd
loop
push
roll
mov
mov
mov
movsb
jge
lea
das
or
int
xor
adc
inc
push
jmp
xchg
aam
je
cmp
inc
mov
leave
inc
pop
jb
push
out
in
xchg
mov
adc
enter
push
fsubl
adc
lods
incb
std
jg
imul
jmp
sub
jo
jl
and
xchg
xor
loope
and
lcall
adc
subl
add
push
icebp
lods
jle
xlat
scas
into
ja
push
lods
sbb
aaa
xor
call
or
xchg
cmp
cmp
inc
arpl
xchg
pop
icebp
shl
pop
popa
jnp
negl
movsl
rcll
movb
sti
aad
outsb
push
ljmp
adc
inc
xchg
adc
add
jg
test
inc
jecxz
call
push
mov
les
pop
mov
std
in
stos
int
fdivl
repnz
inc
clc
loopne
mov
pop
mov
movsb
mov
rcrl
in
out
inc
fsubl
jg,pn
fld
pop
dec
js
popf
in
cwtl
jecxz
leave
shrb
out
push
hlt
mov
mov
pop
data16
dec
jl
jecxz
lods
fldt
jb
hlt
pop
inc
pop
loopne
cmpb
add
fistps
mov
xchg
cltd
scas
push
out
clc
jle
mov
sarl
inc
dec
dec
repz
xchg
test
dec
roll
mov
mov
xchg
or
and
pop
jecxz
nop
les
pop
in
aam
out
and
out
mov
mov
or
into
outsb
xchg
mov
push
mov
mov
xor
sbb
xchg
jecxz
ficompl
test
xchg
push
les
pop
gs
or
into
xchg
daa
or
inc
inc
push
scas
dec
addr16
cmpsl
or
enter
pop
ljmp
push
imul
sahf
gs
enter
inc
and
dec
mov
mov
rcrb
cltd
sbb
idivl
shlb
and
fcmovnu
sub
sbb
push
jmp
lods
addr16
adc
les
gs
aam
xchg
arpl
fwait
pop
jp
dec
aas
fwait
jns
icebp
mov
inc
mov
repnz
sbb
adc
loop
test
fucomi
imul
or
iret
fildl
movsl
js
push
and
sarl
cltd
ja
jg
mov
lcall
and
mov
add
xchg
in
sbb
mov
push
mov
pop
jge
shrl
xor
roll
adc
insb
stos
loope
xchg
int3
dec
cmc
movsl
inc
shrb
pusha
pop
rorl
outsb
adcb
cmp
cmp
inc
sub
ja
les
inc
dec
or
and
rcl
es
fwait
xor
inc
and
and
pushf
push
in
or
sub
out
sahf
and
into
fdivl
rorl
mov
popa
ja
and
push
jg
shll
xor
psubsw
add
xchg
arpl
mov
jnp
push
aad
cmp
insl
pop
repnz
mov
es
xor
sub
add
int3
inc
xchg
jne
aas
in
pop
into
xchg
adc
cmc
xor
repnz
rcrb
shrb
and
ret
bound
jbe
out
test
aaa
push
mov
add
shlb
xchg
xchg
icebp
push
jne
sbb
fs
push
jns
ss
jmp
pop
jge
jmp
sti
pop
jno
or
lret
insb
call
pop
lret
add
push
adc
repnz
decl
push
pop
cmp
hlt
scas
inc
daa
or
cltd
int
and
or
movb
mov
out
pop
pop
or
push
jle
or
sub
mov
das
out
pusha
cs
in
aas
sti
aaa
int
shr
jp
push
jmp
pushf
adc
or
xchg
pop
or
rcrl
sub
lcall
push
push
test
cmpsl
aam
xor
push
dec
frstor
clc
arpl
repz
cmp
jo
and
dec
lret
mov
adc
mov
adc
cmp
loope
fsubl
add
add
push
push
xchg
loope
sahf
sbb
add
xchg
test
xchg
scas
cwtl
cmp
push
push
ret
hlt
ja
in
ret
cmpsl
push
out
push
add
scas
mov
mov
outsb
mov
orb
xor
mov
addr16
sbb
pop
scas
push
nop
mov
sbb
lahf
mov
cmp
shll
inc
jns
dec
pusha
sbb
imul
in
mov
imul
xchg
pop
pop
jo
cmp
imul
insb
push
insl
popf
cli
xlat
mov
push
jnp
mov
inc
dec
xor
cld
inc
pop
push
jb
jbe
pop
mov
xchg
sub
pop
mov
push
pop
push
in
jg
jge
lods
pop
jne
push
int
lret
gs
xchg
es
xor
jnp
push
push
cmp
jne
cwtl
lods
push
and
pop
push
sub
mov
and
sub
out
rorl
jne
and
sub
decl
cmc
sub
fidivl
cli
aaa
mov
adc
xchg
sahf
ja
mov
and
sarb
rclb
fs
in
in
adc
aas
jnp
push
data16
ja
or
enter
xchg
jnp
xchg
dec
xor
ss
mov
out
pushf
adc
add
lahf
imul
and
inc
adc
xchg
and
sbb
jle
in
scas
fnstsw
aad
mov
jmp
mov
cld
lcall
cwtl
xor
lods
cmp
inc
add
add
gs
out
shrl
pop
dec
test
lods
aam
test
dec
cmp
pop
pop
ffreep
xor
xchg
inc
inc
inc
shrl
mov
jmp
mov
movsl
sbb
lea
fisubrl
lahf
js
fisttps
int
outsl
sub
call
add
mov
loope
push
pop
inc
ror
int
xor
jle
sub
leave
test
dec
out
mov
aas
lret
pop
insl
lea
cmp
xchg
insl
sub
add
movsl
movsl
ret
pop
or
cmc
fsubr
cmpsl
or
ljmp
or
xor
adc
sbb
loopne
icebp
fsubrp
dec
repnz
xchg
movsb
gs
rep
and
lret
syscall
out
sbb
cmpsb
mov
enter
insl
mov
mov
adc
xchg
lret
xor
loope
aaa
jmp
or
jl
inc
add
ss
xchg
js
jae
dec
movsl
fisubs
xor
outsb
mov
mov
sub
sbb
adc
mov
in
xor
lret
xchg
add
xchg
mov
stc
scas
xchg
test
xchg
jb
rcl
stos
mov
jmp
js
mov
or
mov
iret
mov
jl
sub
shrb
xorl
adc
jmp
insb
aad
push
or
xchg
fildl
push
jnp
or
nop
jns
fwait
hlt
int3
shr
xor
and
lahf
rclb
je
shrb
lock
adc
jnp
or
test
inc
fistpl
mov
cmp
icebp
fadds
mov
xlat
test
sbb
adc
jne
cmp
sub
icebp
sub
stc
mov
pop
push
inc
jne
jl
test
xor
adc
int
xor
pop
lds
push
int3
fs
orl
pop
mov
mov
stos
lods
fcmovnbe
addr16
outsl
lret
in
repnz
push
test
jmp
xchg
shl
repz
dec
fisttps
stos
xor
pop
pop
incl
sarl
lcall
lods
xchg
int
lea
add
xor
arpl
dec
and
push
sbb
icebp
insb
sbb
not
cmpsl
push
dec
cs
jns
loop
mov
movsb
movsl
cld
movsb
push
cmc
punpckhwd
rcrb
icebp
push
mov
mov
xor
inc
repz
or
jge
rolb
pop
dec
sub
push
mov
fwait
std
ss
cmpsl
aad
push
jecxz
sbb
cli
stos
and
in
add
flds
jne
mov
push
jmp
xchg
out
mov
or
shll
and
aam
inc
popa
add
addr16
mov
loop
sti
push
push
repz
jl
and
std
or
cmp
push
scas
sbb
out
dec
dec
int3
stc
xor
outsl
in
dec
out
xchg
adc
out
xchg
popf
das
or
cmp
and
inc
shrb
insb
mov
adc
push
int
mov
int3
mov
loope
out
data16
jl
mov
jge
mov
dec
notb
jge
aam
nop
and
mov
or
roll
xchg
ljmp
pop
cmpsl
into
call
out
or
xchg
mov
ss
insb
shrl
mov
jmp
jne
cmp
mov
mov
sub
xor
push
das
xchg
push
ss
adc
dec
filds
or
push
push
std
sbb
cmp
in
call
mov
jge
out
pop
push
pop
movsl
xor
mov
mov
loopnew
push
lahf
or
xchg
push
dec
dec
sub
inc
mov
cli
hlt
inc
push
cmp
sbb
jb
xor
scas
inc
scas
loopne
into
movsb
aas
fidivrs
dec
fldl
fwait
add
es
gs
jg
sahf
sbb
sub
es
lret
rep
jnp
das
adc
sbb
lret
shl
push
notl
xchg
xchg
fwait
xor
les
adc
mulb
xor
incb
sub
jp
add
sub
leave
xor
jp
jnp
ss
dec
sbb
ja
sbb
push
sub
fcmovbe
push
mov
aaa
mov
mov
cmpsb
rcrl
sub
cmp
xchg
xor
jo
push
mov
and
push
rcr
push
fs
test
or
daa
sbbb
or
xor
xchg
dec
cwtl
sbb
mov
sahf
cmp
push
ret
adc
add
mov
cmp
mov
xorl
test
mov
fildll
inc
test
aad
push
pop
adc
repz
inc
cwtl
dec
xchg
sub
sarb
dec
adc
test
outsl
and
rcrl
mov
subl
les
jmp
hlt
push
jmp
inc
sahf
and
mov
jge
mov
mov
or
loope
adc
stos
sub
jo
pop
cmc
sub
sub
dec
or
loopne
iret
jb
or
xchg
test
arpl
xor
mov
enter
mov
das
ds
sub
dec
cltd
popf
xchg
lea
mov
out
test
sub
pop
cltd
mov
outsl
lods
jo
not
out
jb
add
sbb
sub
cmp
jecxz
in
cmp
in
add
jl
mov
fidivrs
xchg
inc
xchg
pop
icebp
lds
add
xchg
push
popa
pop
call
in
out
bound
imulb
mov
or
les
pop
in
cltd
sbb
inc
mov
repnz
ja
dec
xor
adc
out
cwtl
push
icebp
mov
fsubl
pop
repz
leave
fisubrs
lret
div
and
jp
enter
out
cwtl
das
xchg
pop
jns
mov
scas
inc
or
mov
add
int
fnclex
dec
in
jg
stos
lds
add
jo
cmp
xchg
jmp
xchg
add
stos
test
pcmpeqw
bound
jo
lcall
stc
adc
in
jae
push
in
sbb
sub
inc
scas
inc
ja
jle
sub
pop
lock
leave
lock
nop
loope
adc
rclb
adc
mov
jbe
shlb
jne
cld
xchg
jl
or
inc
or
ja
stc
xchg
outsb
movsb
cwtl
mov
xor
popa
cmp
mov
xchg
and
and
or
int3
xor
fabs
mov
xchg
bound
cmp
sub
mov
push
sbb
jae
cmc
push
stos
es
cli
faddp
sub
jb
jmp
je
xchg
fwait
stc
xchg
or
xchg
sub
sbb
and
sub
dec
dec
xchg
rorl
ret
nop
cmp
lahf
pop
adc
xchg
enter
fsubrp
push
mov
cwtl
gs
push
aaa
fst
xchg
fisttpl
xor
dec
xor
ja
cmpsb
sub
mov
add
out
mov
into
loop
lock
adc
lret
xor
out
adc
xor
add
xchg
xchg
add
outsl
lcall
outsl
xor
inc
or
popa
shll
stos
mov
cmpsl
out
leave
loopne
psadbw
cwtl
xchg
pop
xchg
lcall
mov
sti
jp
push
xor
push
push
imul
add
pop
dec
mov
mov
test
mov
cmp
mov
push
pop
push
or
daa
cmp
in
mov
lock
outsl
jb
cmc
jecxz
loop
jg
andl
cmp
and
cmpb
lcall
dec
popa
iret
cmp
push
je
and
inc
cwtl
subl
jae
mov
lods
push
mov
adc
int3
arpl
and
enter
lcall
jo
dec
jo
xor
insl
enter
inc
xlat
cmp
loop
add
pushf
imul
push
stos
mov
adc
jbe
mov
std
mov
dec
cltd
std
dec
decl
test
scas
mov
dec
jb
push
xor
adc
xorl
mov
pop
push
mov
pop
gs
lock
movsb
nop
mov
test
pop
cli
js
ficoms
or
mov
xchg
xor
sbb
test
stos
push
loopne
mov
ret
fbld
xchg
jnp
lods
xchg
xchg
mov
int
push
add
cmp
and
push
hlt
jbe
mov
insl
sub
or
push
fsubrp
jne
lret
inc
jbe
test
shr
sbb
sbbl
loope
sub
push
mov
push
add
mov
cmp
fcomps
sub
mov
mov
cmp
xchg
scas
dec
cmp
jl
push
lret
jp
pop
lods
sub
or
dec
adc
andb
mov
inc
push
lds
fdivl
xor
dec
push
test
xor
ds
cmpsl
out
insb
shll
jle
jbe
jb
sub
lcall
sub
stos
arpl
xlat
test
mulb
dec
xchg
mov
mov
xor
mov
xchg
push
fcoms
jg
add
cli
cwtl
ss
sbb
imul
das
lea
std
mov
mov
ds
mov
xchg
fnsave
shrl
aas
or
mov
pop
mov
test
mov
dec
sub
mov
clc
fnstenv
mov
sbb
sahf
pop
inc
pusha
jge
xor
leave
mov
inc
icebp
popa
leave
loope
adc
fs
cmp
xchg
andl
push
movsl
jne
cmc
daa
mov
fisttps
mov
sarl
push
adc
lret
xor
or
fimull
xchg
jge
mov
mov
rorb
shrb
push
jmp
hlt
ljmp
jle
push
fldcw
inc
and
int3
cltd
addb
jle
clc
or
mov
jno
pop
dec
pop
pusha
dec
sarb
scas
inc
sbb
jle
or
mov
cmpsb
mov
mov
aad
sahf
fldt
or
iret
repz
mov
inc
mov
pop
bound
push
jb
pop
lret
push
mov
add
lcall
push
jne
pop
xchg
rcll
sub
arpl
das
leave
lea
lds
xchg
sbb
mov
movsb
jg
stos
ficoms
lcall
mov
sub
mov
loopne
aad
jge
out
pop
push
fildl
test
inc
gs
xchg
mov
js
test
sbb
arpl
xor
xor
or
or
xor
dec
pop
jg
adcb
xchg
xchg
jae
aam
inc
push
fstps
pop
add
testl
push
inc
dec
in
mov
hlt
mov
xor
insb
cmp
pusha
decl
or
mov
push
sahf
dec
and
js
sub
test
subl
or
ret
pop
popa
pusha
into
push
mov
arpl
es
mov
lret
outsl
daa
addr16
mov
mov
inc
mov
out
push
cmp
pop
roll
andb
mov
mov
lret
cli
mov
jbe
lret
dec
in
call
insb
add
inc
mov
js
aam
push
icebp
adc
daa
les
xchg
mov
shrl
mov
add
mov
and
test
xchg
sbb
cmp
jne
pop
dec
jae
mov
pusha
inc
testl
adc
popa
and
or
cmp
push
adc
sbbb
lea
sub
lcall
std
xor
fcompl
icebp
ljmp
pop
and
fldt
jbe
cli
xor
dec
sahf
fs
sbb
add
loop
mov
pop
xor
dec
cmpsb
cmp
decl
addr16
mov
xchg
stc
sbb
xchg
sbb
sbbb
ds
cmp
jecxz
adc
testb
dec
push
jae
push
inc
and
rcrl
add
push
aam
call
pop
inc
add
or
aaa
jnp
in
push
fisttpl
ficoms
jnp
xchg
inc
jle
pop
add
popa
xlat
mov
call
xchg
test
imul
repnz
nop
dec
pop
adcl
movsl
mov
xchg
pop
jae
jp
sub
stos
xor
adc
dec
xchg
das
sar
add
cmp
mov
sbb
je
fstl
in
mov
adc
mov
fxch
cmp
push
shr
mov
xor
sbb
mov
icebp
shrb
sub
out
push
subl
loopne
pop
pop
out
mov
pop
cmc
add
shrb
jno
sub
int3
push
mov
testb
and
xchg
xchg
pusha
add
xchg
jne
in
jg
add
push
push
imul
xchg
jge
jbe
leave
mov
rclb
pushf
repz
push
inc
insl
xchg
mov
test
inc
push
xchg
not
sbb
mov
dec
pop
aam
jns
xor
clc
fcoms
cli
pushf
jp
dec
and
dec
mov
pop
xor
cmpsl
insl
decb
xchg
movsb
es
shlb
sub
insl
test
dec
jbe
inc
in
jbe
std
or
push
movsb
add
ljmp
test
mov
repnz
les
adcb
jbe
or
sbb
dec
mov
popa
mov
das
inc
movsl
xchg
js
jno
inc
movsb
testl
jge
adc
sarb
xchg
ret
mov
dec
and
out
and
lods
and
shlb
nop
mov
mov
repnz
and
mov
std
xlat
or
hlt
ss
mov
dec
ret
add
xor
aam
inc
push
mov
mov
lea
and
push
cmp
pop
int3
testl
xor
mov
or
xchg
adc
and
dec
aaa
int3
push
xchg
push
cmp
mov
popf
push
xchg
mov
adc
push
scas
pop
mov
cmpsb
and
xchg
roll
mov
add
xchg
add
push
bound
lcall
cmp
into
stos
cwtl
cs
dec
lds
insb
rcr
out
push
sar
lock
cmpsb
and
and
bound
loope
fbstp
nop
mov
xchg
cli
sbb
in
ret
mov
sub
xchg
jae
push
sub
dec
mov
cmpl
jno
push
int3
adc
enter
pusha
stc
stos
ret
mov
ret
dec
je
jg
inc
pusha
leave
mov
test
aad
and
cld
lods
pop
test
sbb
rcrl
inc
popaw
das
pop
aaa
aam
cwtl
jns
mulb
jmp
cwtl
dec
push
push
mov
inc
jne
xchg
outsl
setp
pop
inc
dec
shlb
fdiv
cmp
ljmp
cmp
add
xor
and
mov
mov
ret
jb
test
mov
jg
adc
les
or
sti
xchg
cmp
imul
add
and
push
fsubrs
lods
jg
popf
sub
out
push
stos
mov
ficoml
rcrb
sbb
adc
mov
lods
daa
jmp
push
sbb
dec
jae
dec
and
or
jmp
adc
push
push
fsubr
push
or
cs
sub
mov
imul
cmpsb
or
dec
push
push
mov
jno
test
add
movsb
cmp
dec
into
push
ret
and
insl
lods
lock
add
cmpsl
mov
ljmp
mov
sub
daa
rol
jne
popa
mul
stos
jmp
sbb
leave
test
push
int
mov
mov
add
add
aam
cli
mov
js
fidivrs
imul
ret
mov
push
mov
test
arpl
popf
dec
popf
scas
out
xchg
cmp
or
add
loop
pop
hlt
sub
lret
mov
push
faddl
add
das
pop
sub
mov
mov
mov
mov
pop
sti
mov
mov
lds
int
in
mov
lret
xchg
out
subl
pusha
mov
loop
mov
int
addl
add
roll
cli
stc
jp,pt
jmp
pop
adcb
pusha
jecxz
add
sahf
lods
imul
scas
aaa
jo
sub
pop
lcall
dec
dec
movsb
ss
cld
outsl
mov
xchg
sub
imull
sub
testl
dec
add
lds
jns
les
dec
dec
cmp
and
pop
xchg
imul
xlat
cmc
xchg
cmp
repnz
inc
fldenv
add
xchg
mov
ficomps
scas
cvtdq2ps
orb
xchg
mov
repnz
ljmp
dec
push
inc
hlt
push
popf
and
int
inc
jmp
fbstp
mov
cmp
adc
jbe
cmp
icebp
sbbl
sub
lea
movsb
mov
int3
std
inc
fdivl
push
cmp
arpl
inc
inc
cmp
or
les
add
mov
jle
mov
daa
xchg
xchg
add
lods
add
adc
je
ror
outsl
out
rcll
lahf
inc
cmpsl
lea
pop
mov
js
pop
push
notl
adc
xor
pop
and
into
xor
in
repz
fidivrl
lods
insb
sbb
jge
aas
ja
pop
rcll
mov
pusha
ror
sub
hlt
rcl
cmp
xorl
xchg
dec
loopne
inc
bound
mov
in
in
jmp
enter
das
mov
jo
rorb
inc
push
mov
mov
xor
push
mov
out
inc
inc
popf
test
or
je
out
out
sub
pop
mov
lahf
xchg
in
push
rcrb
bound
jns
stos
cmpsl
jp
sub
in
and
loopne
js
cmc
inc
enter
dec
sub
pop
jge
clc
jnp
fildll
push
jno
mov
push
out
jns
add
or
test
loope
push
popf
rcr
and
inc
pop
pop
xor
fldl
pop
cli
or
mov
mov
xor
mov
negl
mov
hlt
push
pop
call
jb
outsl
push
pop
ss
mov
fwait
movsb
cmp
ss
pop
sub
mov
inc
stc
enter
sbbl
mov
fimull
xor
test
mov
jae
and
jmp
in
push
add
lea
and
push
jb
mov
loopne
pop
cmp
mov
or
inc
ja
stc
cwtl
mov
add
jno
inc
rcrl
add
mov
aad
lea
mov
scas
xchg
or
mov
rcrb
push
mov
or
mov
daa
repz
aas
push
jle
mov
lods
add
cmpl
mov
sub
push
ljmp
jno
sub
aad
pop
hlt
subl
cld
inc
push
sub
or
cmp
push
cltd
shl
mov
icebp
aas
xchg
pop
adc
std
lea
movd
and
sbbb
lock
pop
and
mov
dec
leave
ss
fiadds
push
mov
mov
dec
incl
jo
test
testl
sub
and
daa
fwait
call
cltd
stos
mov
sbb
test
or
aas
jb
in
orb
adc
fistps
sti
test
cmc
inc
ds
dec
cmp
pop
mov
mov
xor
les
repz
mov
push
insl
sbb
add
add
aas
sar
jo
insl
sub
mov
fsubl
or
outsb
xor
aaa
aam
fldenv
inc
stos
and
popa
xchg
cmp
sub
ss
in
aad
pop
aas
jo
jl
or
push
cli
test
mov
lea
sbb
add
test
pslld
out
movsl
adc
bound
fidivs
mov
leave
movsb
push
mov
add
sub
test
mov
dec
mov
lock
aam
and
add
inc
mov
ret
and
aas
sub
xchg
cmp
cmp
pop
and
enter
push
sub
cmovle
inc
cmp
fsts
cmp
shlb
push
outsb
add
fisttps
sub
pop
inc
jno
idivb
test
sahf
movl
into
push
ret
test
gs
loope
jnp
testl
lods
fisubrl
sub
xchg
mov
rol
cmp
push
jnp
push
addb
or
mov
fimull
cmpl
aas
fs
jmp
repnz
jo
jns
sub
cmpsl
cmp
mov
or
push
mov
movsb
push
repnz
repz
dec
xchg
add
mov
push
push
jae
mov
jmp
xchg
ljmp
mov
fs
lock
mov
push
jge
lret
pop
fisubs
into
mov
mov
and
inc
pop
inc
push
dec
loope
mov
lcall
dec
mov
and
xlat
mov
and
aad
inc
or
shrl
arpl
inc
daa
imul
lods
jge
inc
or
jne
sarb
pusha
nop
jnp
push
ljmp
push
jne
pop
pushf
pop
jb
inc
or
fstpt
push
push
push
mov
push
sub
or
sub
xor
push
mov
rol
inc
mov
ret
jmp
mov
popa
cltd
mov
xor
lahf
negl
lock
xchg
or
pop
xchg
sub
sub
mov
jge
inc
push
mov
jbe
mov
mov
sahf
mov
cmp
rolb
sbbl
ja
lock
inc
inc
int
cmp
pop
pop
push
sbb
mov
cli
mov
jl
aad
xchg
push
push
sahf
xor
into
faddl
scas
cmc
jge
inc
pusha
and
movsb
xor
les
jns
and
add
lret
test
jmp
jp
daa
add
push
pop
jo
adc
xor
xchg
inc
pusha
mov
shl
pop
pop
cld
daa
inc
fstpt
ss
jl
add
add
inc
push
and
lahf
inc
sahf
dec
test
dec
lods
inc
sbb
lcall
or
shl
fidivs
insl
out
sbb
xor
outsb
jne
xor
or
cli
pusha
pop
sub
pop
cltd
movb
pop
sbb
mov
add
ljmp
cmp
in
test
sarb
cwtl
mull
and
js
or
xchg
and
addr16
push
mov
outsl
rcll
shll
mov
in
jbe
xchg
sbb
inc
mov
mov
jp
es
pop
dec
mov
jle
xchg
stos
cmp
shrl
fbstp
into
mov
inc
inc
add
xor
lret
xor
loop
dec
fwait
int
cld
sbb
repz
add
adc
cmc
xor
das
in
pop
aaa
ja
adc
push
loopne
loopne
cs
inc
sub
jecxz
aaa
aam
push
sarb
icebp
mov
pop
lock
es
cwtl
xor
pusha
mov
mov
adc
jbe
inc
shl
imul
pop
out
stos
shrl
cmp
and
stos
gs
outsl
subl
pop
xor
ja
jp
bound
hlt
sbb
js
fisubrl
push
fmull
xchg
push
dec
mov
sbb
jle
lds
or
xchg
mov
xchg
adc
cld
lcall
push
stc
cmp
stos
and
inc
inc
sarb
bound
dec
pop
imulb
in
aam
popf
add
xor
gs
imull
mov
inc
sysenter
ret
cmp
xchg
lock
push
mov
js
sbb
mov
jb
pop
aam
mov
mov
cli
ror
jbe
adc
in
shll
or
jg
in
cmp
cmc
inc
pop
add
aaa
ficompl
mov
push
fistl
adc
test
mov
jno
and
or
mov
push
stc
xor
sbbb
pop
in
addb
pop
sub
aaa
mov
jne
xor
jnp
enter
pop
fucomp
test
int
cmpb
cmp
push
das
inc
and
movsl
jnp
pop
cs
repnz
test
lret
xchg
inc
out
cltd
xchg
lret
movsb
gs
out
cmp
in
add
bound
dec
adc
adcb
xor
out
pop
js
mulb
movl
add
test
and
push
adc
cltd
imul
push
ret
mov
fisubrl
mov
inc
test
sti
mov
pop
jecxz
shll
xchg
addr16
bound
xchg
hlt
out
mov
jae
repz
xor
jae
xchg
scas
loop
inc
mov
xlat
ljmp
imull
push
mov
cli
add
inc
popf
addb
movsb
sub
and
fsts
mov
popa
cmp
jne
mov
or
movlps
cwtl
adc
pop
lock
push
loop
outsb
jp
inc
or
mov
test
arpl
cwtl
xor
fmulp
pushf
mov
outsl
add
fnstenv
pop
add
xchg
or
enter
jns
ljmp
mov
jl
inc
mov
push
dec
xchg
push
pop
lods
insb
inc
lds
mov
dec
ret
outsl
xor
lahf
stos
je
mov
test
int3
stc
adc
push
jns
frstor
inc
fldt
inc
mov
andl
add
mov
adc
sub
mov
sbb
xor
lea
mov
adc
dec
fs
pop
mov
cwtl
jecxz
xchg
jl
cld
jne
xor
adc
cmp
dec
pop
addr16
cmp
pop
and
pop
ljmp
sbb
inc
jge
pop
dec
jecxz
mov
out
loopne
pop
or
jne
rorl
jo
adc
xchg
jg
push
xor
stos
xchg
sub
mov
xlat
repz
sbb
add
fdiv
dec
xchg
lods
std
arpl
adc
sbb
cmp
sbb
jle
shll
push
in
fcmovu
push
adc
stos
jg
negl
dec
pop
jg
push
cwtl
mov
pop
or
sub
out
mov
das
ja
dec
movsl
je
push
mov
into
enter
mov
adc
push
arpl
mov
loopne
mov
pop
and
std
leave
mov
movsb
jl
jle
add
jbe
mov
les
pop
addr16
addr16
push
pop
ljmp
mov
cmc
lds
and
fistpl
popa
fsubrl
pop
push
push
dec
mov
xor
dec
mov
aaa
movsb
jmp
cmp
fsts
movsl
negl
scas
sub
jle
sbb
dec
jmp
test
sub
sbb
int3
add
mov
insb
shll
dec
int3
in
xchg
jbe
and
xlat
push
inc
pop
movsb
call
and
repz
out
xlat
add
je
push
and
xorb
cmpsb
testl
fcomps
aas
fsubl
out
incl
dec
sbb
je
xor
into
dec
inc
push
sbb
loopne
xchg
sbb
and
aaa
mov
dec
outsl
pop
pop
rcrl
lock
loopne
fisubrl
mov
sbb
pushf
stos
dec
out
adc
daa
mov
jne
or
add
xchg
push
fdivl
pop
inc
cmp
divb
out
sbb
dec
pop
dec
loopne
imul
orl
or
movl
xchg
lcall
ror
into
mov
repnz
fsts
mov
and
sahf
jle
arpl
jae
mov
cmp
mov
fwait
ljmp
test
jle
inc
fs
mov
jae
mov
fcom
in
or
adc
sbb
mov
sahf
leave
add
leave
fdivp
test
lock
mov
and
fsubs
loopne
mov
jg
dec
pusha
rorb
adc
mov
mov
push
sub
dec
and
lcall
jg
out
push
in
pop
icebp
popf
popl
hlt
fdivr
add
inc
sub
jbe
add
daa
sbbb
aam
ljmp
lock
arpl
roll
sbb
scas
push
xchg
iret
imul
mov
mov
inc
clc
cmpsl
mov
addr16
pop
ret
mov
and
repz
fcmovu
mov
testb
imul
xchg
pop
xor
cli
pop
mov
bswap
cmp
movsl
lods
rcrl
mov
pusha
sahf
fistl
pop
lahf
in
fwait
sarb
std
mov
cltd
cmp
jle
out
pop
lret
in
ljmp
or
scas
add
mov
ds
jnp
pop
sub
cmc
jl
mov
push
loop
adc
or
mov
shrl
cwtl
add
pop
addr16
jle
lret
jge
cld
setg
push
std
mov
ret
popf
xor
inc
int
arpl
fs
xchg
or
out
sti
sahf
sub
sbb
inc
arpl
xchg
pop
rcll
test
stc
xor
les
push
shll
inc
pop
mov
and
inc
ficomps
mov
adc
mov
cmpsb
jbe
xor
lea
adc
mov
addb
arpl
loope
cmpsl
repnz
je
outsb
push
mov
adc
fidivl
push
adc
dec
or
imul
movlps
adc
push
push
jmp
mov
shrb
aas
jl
pop
pop
ret
mov
xchg
pusha
fisttps
adc
adc
mov
adc
cmp
push
jp
lods
mov
cmp
mov
test
cmp
pop
jmp
pusha
inc
mov
sub
fdivs
enter
add
inc
pop
test
in
lfs
push
jge
mov
jmp
int
jl
movsb
cmp
roll
sbb
jns
lea
pushf
and
push
jge
lret
mov
mov
out
jne
push
lock
test
incb
dec
push
pop
mov
ljmp
cli
ds
pop
loop
cmc
xchg
cltd
mov
les
inc
ret
mov
push
mov
push
ljmp
and
call
flds
and
sub
xchg
jns
in
pop
jb
mov
cmp
and
adc
pop
punpckhwd
lahf
xchg
popa
scas
sahf
mov
pop
fadds
aam
ljmp
in
add
lret
jmp
mov
push
add
push
popf
shl
mov
add
shll
or
fidivs
loope
dec
fidivs
cmpsl
sub
pop
cmpsl
imul
adc
je
dec
in
insb
sub
xor
add
iret
insl
aad
cmpl
rorb
enter
or
ret
xor
xorl
push
or
fidivrs
push
fdivs
jecxz
lret
xchg
mov
insl
ds
inc
stos
lret
pop
out
cld
ret
stc
bound
fsubrl
aad
jle,pt
repz
push
fcoml
inc
inc
js
cs
push
dec
loope
pop
xchg
inc
cmp
iret
pop
sbb
lods
dec
push
repnz
sub
insl
or
hlt
or
or
insl
sub
fs
xor
lock
fiaddl
mov
inc
adcl
xchg
jecxz
in
mov
push
scas
fldcw
int
pop
cli
sub
stos
mov
cmpsb
mov
adc
push
or
mov
imul
pop
xchg
add
addl
mov
popa
and
jnp
aas
lods
mov
icebp
mov
push
mov
push
jge
test
jmp
or
fldcw
push
cli
cmpsl
pop
lods
add
leave
inc
int3
addr16
aaa
mov
pop
jle
iret
fbstp
mov
sub
cmp
jnp
inc
fisubrl
mov
push
stc
pop
push
mov
xor
adc
xor
daa
rorb
dec
xor
out
inc
adc
xor
fldenv
cmpsb
cmp
xor
xchg
lret
test
cmp
sbb
cmpsl
scas
add
push
rcrl
mov
sahf
int
or
mov
xor
xchg
add
insb
stc
pop
and
repz
sub
mulb
mov
mov
dec
pop
jo
and
jo
enter
mov
cmp
xchg
fisubs
push
sbb
enter
push
stos
out
cmp
mov
test
out
lea
je
leave
sub
movsb
jecxz
idivb
andl
inc
adcb
sbb
mov
negb
adc
into
ss
sub
out
cwtl
jle
bound
xchg
xchg
mov
aaa
mov
lcall
lods
jmp
xor
ss
pop
addr16
out
enter
xchg
rol
fstl
xchg
dec
adc
loop
lret
cmp
test
jb
fndisi(8087
test
sbb
pop
xchg
js
push
jae
out
sbb
jno
cmp
movsb
ret
sub
mov
out
rcl
add
es
sbb
jns
test
mov
dec
stos
rclb
fstl
mov
je
ss
push
cltd
xor
lods
rolb
sbbl
inc
jb
cwtl
arpl
and
aaa
mov
repnz
fnstenv
aad
add
cmpb
inc
mov
arpl
loop
pop
subl
inc
sbbb
jo
jg
or
fcmovnu
and
out
or
adc
cmp
cmpsl
xchg
cwtl
lahf
ret
pop
stos
leave
aam
inc
jns
and
repnz
mov
cmpsl
inc
out
push
mov
mov
test
pop
out
mov
psubb
mov
pushw
shl
cltd
mov
cmp
pop
adc
mov
xor
popf
mov
sbb
cmp
cs
mov
dec
jecxz
cmpsl
push
dec
lods
cmp
ja
xor
push
or
cmp
dec
hlt
icebp
xor
mov
xchg
cli
adc
sbb
in
xlat
fsubrp
clc
jecxz
hlt
xchg
sbb
cmp
scas
inc
mov
ror
mov
fadds
cltd
sbb
lret
pop
clc
jae
arpl
cli
ljmp
in
fldenv
sbb
dec
adcl
xchg
mov
fnsave
adc
out
stos
pop
cmp
shr
inc
out
adc
ds
sub
dec
add
xchg
cmp
sahf
pop
and
loop
xchg
test
ljmp
js
in
loopne
mov
xchg
stos
aad
mov
xor
mov
mov
jl
dec
add
adc
mov
or
data16
mov
mov
mov
ret
add
mov
es
loope
icebp
insb
push
mov
mov
add
insl
clc
and
fldt
es
fnstsw
leave
mov
push
sbb
in
fisubl
aas
ss
test
int3
mov
js
pop
stos
sub
and
mov
test
fdivrl
sti
sbb
pop
dec
sbb
dec
sub
fldt
dec
fs
pop
push
out
cmpsb
and
in
icebp
mov
or
ljmp
xor
inc
dec
add
xor
pop
jge
push
cmp
lods
mov
test
pop
pop
inc
or
jo
lcall
popf
testl
lock
nop
dec
pushf
dec
aam
ljmp
dec
push
clc
dec
push
test
fcomip
mov
out
mov
subl
popf
mov
cltd
cmp
fldl2t
push
pop
pop
jbe
mov
ss
nop
lods
and
inc
mov
cmpb
dec
aas
hlt
rcrl
mov
repnz
addr16
stos
cmp
xchg
movsb
idivb
ds
ljmp
ret
mov
les
gs
dec
iret
movsl
mov
das
out
lcall
dec
cmp
add
xchg
push
mov
mov
add
ret
mov
xor
outsb
jp
push
test
test
loop
jb
mov
adc
lahf
pop
cmp
and
ret
ret
xchg
loopne
jo
xchg
mov
enter
je
leave
movsl
sbb
fxch
lds
imul
mov
daa
jae
or
or
dec
in
lds
mov
fwait
repz
cmp
pop
jg
adc
mov
out
subl
dec
pop
mov
mov
lock
or
xlat
push
cli
adc
cmpsb
outsl
dec
jecxz
adc
fsubrs
nop
sahf
inc
sub
notb
sbb
lods
inc
arpl
enter
cltd
pusha
div
xor
and
je
cmc
inc
push
divb
jge
mov
pushf
xor
repnz
xlat
das
and
push
dec
pop
push
cli
stc
into
xor
cmp
aas
jmp
ret
adc
or
popa
int
jecxz
sti
inc
out
mov
add
cmpsb
push
mov
push
adc
xorb
mov
xchg
insl
aas
cltd
sti
push
inc
mov
dec
cmpsl
aaa
xor
testl
push
push
inc
pop
fiadds
and
add
mov
lods
out
daa
or
shll
out
fbld
jecxz
ret
ret
add
add
mov
fcomip
ret
inc
xchg
mov
lret
aas
loope
and
mov
cmp
mov
push
stos
sbb
cwtl
and
jo
lret
popa
dec
xchg
arpl
xchg
mov
lcall
adc
daa
or
clc
dec
stc
jb
sub
jnp
dec
ficoms
sbb
push
jl
xor
sub
add
loop
or
inc
std
gs
sub
sub
mov
js
mov
enter
call
mov
dec
pop
mov
and
inc
cmpsl
mov
jae
outsb
pop
cmp
mov
pop
out
arpl
inc
mov
xor
movsb
jl
pop
aaa
mov
xchg
sub
xchg
jmp
aaa
jle
in
sbb
rep
cmp
or
fsubp
sub
jo
lcall
push
call
ds
sbb
adc
push
sbb
stos
in
and
mov
std
mov
addr16
dec
cltd
out
sub
push
sub
dec
lea
into
xchg
xor
push
repz
and
dec
mov
mov
scas
scas
fsts
movups
adc
push
mov
imul
add
push
hlt
inc
push
xlat
mov
jbe
adc
lret
outsb
inc
push
dec
push
and
inc
into
push
jne
loopne
inc
pop
fcomip
pop
pop
or
orb
add
dec
mov
nop
or
dec
mov
push
mov
outsb
stc
addr16
xor
xchg
mov
out
push
sub
sarb
insb
lcall
inc
call
xlat
movsb
mov
jp
pusha
pop
push
mov
insl
fadds
jmp
repnz
aas
push
fiaddl
and
mov
dec
outsb
movsb
cltd
sub
mov
insb
in
xchg
pop
cmp
xor
xor
jp
addr16
aas
pop
inc
push
lods
test
jge
dec
das
jg
add
aad
insl
xchg
rolb
xor
sub
sahf
clc
shlb
arpl
insb
xchg
inc
and
orb
cmc
cmp
test
jns
push
out
xchg
xor
shrl
cmpb
jns
les
es
jl
inc
and
int3
aad
shll
dec
dec
dec
loop
adc
mov
pop
jb
mov
push
mov
enter
adc
add
adc
pop
inc
jo
outsl
pop
xor
push
cli
repz
mov
scas
bound
inc
or
imul
sbb
xchg
or
addr16
aas
xchg
cmp
push
jns
inc
cmp
pop
jg
pop
mov
pop
icebp
push
fs
mov
movb
sbb
iret
add
std
loop
cs
sub
and
xchg
mov
shlb
fnsave
lds
xor
adc
jns
movsl
lcall
add
pop
mov
or
popf
aad
mov
xor
inc
mov
test
inc
inc
dec
loop
jp
call
out
mov
cmp
lock
jo
xlat
lods
shlb
dec
sahf
ss
sub
out
lahf
push
fdivrl
push
in
cltd
lods
add
popf
sub
and
and
popa
mov
xor
mov
ret
shrl
sbb
cmpsl
cmc
adc
cld
xor
mov
cmp
pop
sub
adc
xchg
pushw
jmp
cmp
jb
stc
pop
and
pop
cmp
push
mov
xorb
es
cs
subl
clc
jbe
mov
fldt
and
loop
mov
add
lcall
in
xorl
or
lock
gs
out
pop
stos
xchg
fcomps
test
push
dec
sub
push
nop
add
mov
das
pop
clc
in
loopne
das
mov
fst
xchg
stc
inc
addr16
and
testl
test
mov
sub
adc
movsb
jbe
aad
pop
loop
loope
mov
mov
fsubrl
mov
loope
push
out
pop
mov
lea
pushf
mov
sub
out
push
dec
add
jbe
and
test
arpl
inc
int
mov
insb
sub
fldenv
imul
add
inc
orb
xor
orl
lcall
add
push
mov
popf
fcom
and
lret
push
jle
stos
inc
pop
rol
mov
mov
xchg
dec
mov
push
imul
pushf
adc
xchg
ret
rorl
or
or
cmp
orb
and
adc
arpl
into
xorb
ds
pop
xor
out
cmpsb
or
sub
and
int3
inc
movsl
addr16
sti
ljmp
xor
add
mov
out
fyl2x
push
arpl
outsb
test
mov
arpl
fbstp
push
dec
pop
gs
sub
sub
pop
sub
add
dec
repnz
pushf
sbb
and
lcall
push
dec
push
add
xor
arpl
loope
testl
mov
xchg
lahf
xchg
test
popf
mov
outsb
mov
pop
cmp
sub
sub
mov
loopne
adc
std
rcrl
loopne
stos
cmc
iret
push
mov
out
js
fnstcw
aad
cmc
push
loopne
aas
adc
jle
mov
pop
mov
xchg
adc
push
cmp
mov
lahf
xor
sbb
dec
and
adc
xor
call
stos
inc
aaa
lock
or
sbbl
iret
ja
fdivrs
pop
mov
popl
std
lock
aad
out
add
mov
jge
sub
int
movsl
repnz
inc
sbb
or
push
jecxz
test
mov
xchg
bound
out
sub
outsb
clc
and
cmpsl
mov
mov
das
in
addb
mov
das
mov
adc
or
inc
xchg
aam
clc
mov
insb
ret
sub
rcrb
icebp
clc
and
inc
fstpt
filds
xchg
aas
and
fstpt
mov
add
inc
iret
mov
push
popf
push
and
stos
imul
cwtl
jo
dec
shr
adc
jns
repz
xchg
mov
cmp
sti
cmp
fisttpll
xchg
daa
popf
fiadds
push
out
xchg
loopne
jnp
dec
mov
repnz
xchg
ss
adc
jp
daa
outsb
add
cmp
jns
icebp
or
aam
dec
es
loope
inc
dec
mov
int3
pop
jno
fists
pop
je
pop
add
outsl
dec
xor
fdivrl
sub
loop
mov
jge
xchg
out
adcb
jg
pushf
mov
and
xor
mov
lret
jmp
icebp
xor
leave
fnstenv
sbb
movsb
xchg
pop
ss
or
loop
mov
rol
mov
sbb
clc
decb
or
popf
and
sti
cmp
mov
insb
cmp
push
mov
outsb
push
or
das
lea
sub
cmpsb
fidivl
xchg
mov
xlat
repz
bound
xor
out
pop
jl
mov
lahf
bound
int
aam
mov
mov
mov
fists
sub
jge
orl
push
xchg
out
cmpsl
pop
pop
aam
add
push
push
repz
jl
mov
js
sbb
xchg
lcall
adc
jbe
push
popf
in
pop
je
push
jg
cmp
xlat
insl
or
or
sub
mov
sbb
sbb
and
xchg
xchg
repnz
sbb
mov
pop
movsl
mov
arpl
loope
hlt
inc
sbb
jl
mov
clc
mov
shlb
mov
in
repnz
fs
je
nop
shll
pop
jmp
bound
sub
and
outsb
std
cmp
outsb
or
lods
cmp
shrl
mov
xor
adc
mov
inc
addr16
adc
insb
jecxz
mov
xorl
inc
out
mov
mov
mov
cs
push
pop
sub
stc
inc
pusha
jb
push
pusha
push
sbb
lea
mov
and
xchg
add
mov
jne
outsb
in
mov
jg
and
xlat
frstor
dec
dec
stc
or
loope,pt
and
test
mov
xchg
imul
fstl
jle
push
cmc
adc
sahf
push
dec
push
adc
pop
inc
dec
neg
dec
sub
fucomi
fbld
insl
mov
lea
mov
clc
movsl
adc
mov
mov
jmp
push
das
fistps
leave
mov
pop
inc
pop
enter
push
jb
outsl
xor
adc
xchg
outsl
push
xchg
push
outsl
inc
jp
fnstsw
adc
enter
cmpsb
in
ret
mov
pop
cmc
push
out
ljmp
jg
jle
aaa
add
sbb
push
lock
loope
sbb
enter
pop
bound
lods
out
ficoml
lret
popf
sbb
and
push
jnp
aad
lods
sti
jmp
and
sahf
or
shrl
notb
movsl
lock
jg
or
icebp
mov
xchg
jns
cmp
subl
jbe
mov
daa
cmp
das
xor
xor
int3
fimuls
out
rclb
mov
ljmp
pop
movsb
mov
js
fstps
fisttpl
in
adc
out
sbb
or
xchg
ja
mov
or
xchg
nop
mov
rcll
jg
dec
or
sbb
shlb
push
cmp
dec
and
cmpsl
fcmovne
int3
mov
mov
fcompl
lds
or
sbb
add
fiadds
push
jmp
mov
ret
jmp
repz
sbb
or
cmc
int3
xor
xchg
and
or
pop
or
out
jecxz
mov
outsl
mov
adc
mov
cmp
pop
push
cmp
into
pop
xchg
sub
cld
sub
outsl
mov
dec
hlt
sbb
mov
lds
insl
push
bound
fmuls
ret
insl
sub
clc
popa
test
std
movsb
jl
inc
push
sti
adc
xor
cmp
leave
push
mov
push
dec
mov
mov
out
repz
xchg
mov
out
jl
add
pop
sbb
dec
pop
mov
mov
cmp
xor
mov
adc
imul
push
pusha
and
xlat
or
aaa
jg
loope
popa
nop
lcall
inc
in
push
dec
jp
mov
test
or
pop
dec
pop
jp
mov
mov
mov
or
aad
clc
in
mov
add
jns
mov
imul
loop
adc
inc
out
cmc
cmp
push
movsb
shr
push
dec
nop
test
or
cmp
mov
arpl
sub
sub
call
cmc
add
mov
xlat
jns
and
sti
test
lcall
test
clc
xorl
mov
adc
rorl
cli
sbbb
cmp
pop
cmpsb
adc
mov
or
xchg
pop
mov
js
inc
add
mov
rcl
xor
outsb
push
dec
dec
les
pop
and
popa
je
sti
push
sub
negl
jle
orb
add
or
jge
and
sbb
ret
adc
dec
leave
das
bound
clc
mov
fcoms
or
sub
or
pop
loope
add
pop
pushf
adc
ss
in
fsubrl
xchg
wbinvd
dec
repz
and
outsb
xchg
hlt
stos
nop
push
sbb
dec
in
jp
imul
ss
lahf
jno
ret
add
stos
cmc
arpl
xor
lock
dec
push
mov
frstor
cmp
cltd
jbe
jl
lahf
pop
sbb
jmp
stc
adc
xchg
mov
mov
adc
out
jne
mov
stos
ja
hlt
aam
sub
xor
out
lds
mov
loope
negl
xor
or
lcall
jns
je
dec
lods
pop
mov
subb
xor
add
fs
inc
stos
pop
cmc
sbb
push
add
jno
nop
xor
jl
fwait
scas
pop
movsl
cmp
idivb
gs
insl
push
les
imul
in
and
stos
test
shrl
inc
and
mov
xlat
sahf
cwtl
cld
pop
inc
mov
lret
jbe
xchg
ret
outsb
adc
loope
subb
adc
mov
push
js
mov
insl
cmpsb
stc
pop
ja
jo
add
xor
call
fwait
testl
and
cs
fbstp
jb
adc
cld
cwtl
out
test
lds
aam
lcall
mov
cmpsb
in
mov
popa
jg
add
push
and
jno
cmpsb
pop
lds
cmp
out
loope
mov
add
and
xchg
iret
mov
shl
mov
push
jae
aad
cmp
scas
es
fcompl
into
fiaddl
and
and
pop
cmc
sbb
clts
fstpl
sub
fnsave
pop
in
or
adc
fwait
into
inc
pop
or
fldt
jnp
push
and
or
std
iret
jmp
or
cmp
pop
dec
mov
adcl
push
and
pop
mov
fnstsw
cmp
add
jle
lahf
xchg
sub
cwtl
rcrb
stos
jns
sbb
inc
mov
mov
mov
dec
ret
insl
xchg
out
test
pushl
sbb
and
out
pop
mov
push
ret
inc
gs
push
inc
fidivrl
dec
test
xchg
mov
and
mov
xchg
sub
cmc
jecxz
add
daa
lcall
pop
add
inc
ss
jbe
insb
in
aaa
adc
sub
add
stos
fisubl
roll
arpl
shll
fsubs
int3
push
pop
pusha
in
sbb
dec
mov
loopne
sub
adc
xorl
fildll
stos
das
jnp
cmp
pop
into
incl
pop
cmp
imul
and
es
lret
bound
mulb
inc
rclb
push
call
enter
pop
test
stos
sub
imul
pop
clc
hlt
es
repnz
push
std
mov
inc
xlat
sbb
scas
cmp
xor
in
sbb
test
xor
lcall
lcall
loop
pusha
lods
pop
incl
int
inc
jbe
sahf
and
jno
and
sub
test
call
fsubr
cli
or
sbb
in
stc
cmpsb
divl
mov
ss
pop
inc
shl
dec
add
jne
mov
ret
and
push
test
jge
xor
inc
jo
int
fisubrs
movsb
adc
mov
xchg
fisubl
jmp
xchg
lea
xor
cmc
mov
sbb
out
iret
rcrb
pop
mov
popf
jecxz
iret
cli
pop
lret
add
mov
adc
scas
fmulp
filds
mov
loope
and
or
ret
movsl
pop
mov
and
push
negl
fucomi
arpl
addb
add
jns
xchg
or
xorb
push
mov
vphaddbd
in
es
pop
dec
loop
xor
nop
adc
mov
call
mov
bound
decl
lods
addl
aam
push
iret
inc
out
xchg
test
jl
into
and
std
cltd
out
aas
jno
pop
call
dec
shrb
sbb
or
repz
mov
cwtl
inc
in
mov
and
sbb
sub
inc
cwtl
xchg
dec
pusha
xor
shr
outsl
sbbb
sub
and
jg
daa
leave
mov
rclb
lods
or
mov
mov
xorb
xchg
and
into
fcmovu
and
xchg
and
add
idivl
pop
test
imul
sub
pop
cld
mov
in
idivl
push
add
arpl
inc
pop
clc
mov
and
mov
push
sub
outsl
cmp
dec
add
andl
inc
jmp
addl
ja
jno
stos
pop
cmp
popa
aaa
imul
mov
ds
add
repnz
jge
rorl
pop
stos
sub
pop
sub
pop
dec
movsl
fsubrp
int3
jmp
mov
loopne
pop
cli
imul
lods
pushf
std
gs
into
rorl
xor
sbb
adc
sub
push
jb
repz
pop
mov
cld
jne
icebp
pop
into
and
cmp
mov
pusha
je
adc
cli
mov
push
cltd
adc
outsb
add
jb
mov
scas
cli
push
mov
repnz
adc
insl
sub
outsb
fwait
aaa
mov
or
jb
inc
pop
and
push
inc
adc
or
lret
cltd
jge
lret
dec
dec
push
je
pop
jle
mov
mov
sub
cmp
lods
push
ror
mov
pop
popa
pop
adc
jb
popa
sbb
push
es
clc
xchg
leave
jbe
cmp
dec
fsubrs
fstpt
add
mov
xchg
mov
lds
pop
xchg
pop
imul
js
mov
jbe
mov
push
push
or
cmpsl
aaa
pop
pop
jo
dec
aas
inc
xchg
cmp
hlt
sbb
out
ret
movsl
inc
xchg
leave
insl
call
stos
push
das
mov
test
lock
out
adc
repz
testl
aam
push
repz
and
and
jbe
cltd
sti
in
push
mov
mov
sbb
pop
fnstcw
fsubs
inc
pop
pop
cmc
pop
or
mov
ljmp
insb
xor
jecxz
imul
add
movsl
mov
jp
ret
pop
shlb
sbb
in
cmp
or
scas
adc
xor
mov
sti
pop
sbbl
lahf
push
iret
inc
iret
mov
lret
sbb
pop
mov
loopne
jecxz
out
int
add
cwtl
or
mov
xchg
out
je
sub
jg
pop
jae
add
xchg
xor
pop
or
cmpl
js
xor
inc
mov
rcrb
arpl
out
dec
ficomps
bound
sti
push
fldcw
insb
adc
pop
xchg
push
shlb
xchg
test
call
jp
xor
fcomi
push
inc
daa
std
jb
and
aas
iret
push
or
mov
js
or
push
add
cltd
pop
stos
fldl2t
or
ljmp
mov
dec
push
jle
dec
push
push
fadd
lds
jle
subl
outsl
negb
shrb
or
adc
imul
mov
aam
or
outsb
mov
ret
xor
push
out
dec
push
fldt
aam
adc
mov
push
pop
add
aaa
dec
mov
push
es
cmp
fsubl
lahf
mov
out
testb
pop
sub
movsb
push
push
xor
in
iret
xor
mov
insl
sub
dec
add
incb
movsb
fcomps
push
aas
jecxz
xor
pop
loopne,pt
cmp
outsl
mov
xor
push
mov
cmpsl
sti
add
push
xor
xor
jge
sub
imul
arpl
jb
loope
fmull
adc
mulb
add
mov
mov
xor
shrl
fmul
add
mov
in
int3
arpl
pop
cmp
cmp
popa
and
fidivs
ret
aaa
stos
push
hlt
and
pop
test
mulb
cmp
add
sbb
push
in
sub
hlt
push
fmul
icebp
stc
popf
inc
pop
cmp
adc
push
lods
cmp
pop
xor
cmp
xor
push
mov
scas
push
or
mov
and
xor
xchg
notb
sbb
insl
int
push
sbb
mov
andb
inc
adcl
jge
shll
ss
dec
cwtl
out
push
sub
dec
mov
pusha
addb
icebp
mov
xlat
testb
daa
out
dec
in
iret
jge
or
jp
les
push
jb
or
pop
pop
lcall
add
pop
fbstp
lock
jne
mov
insl
clc
call
js
jmp
test
test
inc
mov
ss
ret
pushf
jg
jb
mov
test
inc
test
popf
sub
ja
lods
push
addl
repnz
mov
sub
mov
jg
in
fisttpl
jnp
sbb
pop
call
mov
add
jbe
pop
jae
pop
cmp
adc
xchg
push
and
push
sub
pusha
ret
icebp
jns
sbb
js
pop
mov
pop
adc
fimull
cld
pop
or
mov
pusha
iret
loop
shl
or
dec
push
ss
xchg
adc
mov
pop
adc
sti
and
adc
xor
loop
jnp
push
jbe
inc
inc
out
add
icebp
test
sub
adc
fdivrl
jp
jl
mov
adc
sbb
fisubrs
and
pop
inc
incb
adc
xor
mov
nop
clc
stc
decb
pop
adcl
push
or
mov
rorb
incl
sub
addr16
cmp
inc
sahf
mov
mov
je
rcll
aas
lock
or
dec
movsl
inc
fbld
icebp
mov
mov
stos
adc
mov
mov
lock
cmp
popf
dec
test
mov
mov
inc
subb
adc
pusha
jae
push
test
movsb
jb
xchg
lcall
sarl
adc
dec
mov
and
lcall
arpl
pop
jmp
loopne
ljmp
ljmp
sbb
int
dec
add
out
aas
scas
sarb
mov
loope
scas
testb
mov
ljmp
mov
jns
mov
xchg
bound
mov
outsl
sarb
inc
ficompl
jp
xor
dec
lcall
bound
pushf
add
adc
test
hlt
adc
int
xchg
push
lahf
and
adc
test
mov
dec
dec
pop
loop
mov
js
in
out
adc
jne
jg
mov
aam
pop
repnz
dec
out
in
mov
sub
dec
inc
push
cli
test
insb
inc
aas
clc
mov
mov
cld
cltd
mov
mov
sub
loopne
push
jbe
ret
jns
mov
flds
jmp
icebp
pop
lahf
stos
inc
jbe
cld
rolb
mov
or
pusha
repz
repnz
inc
xor
or
int3
or
dec
aas
push
je
dec
in
xchg
lods
push
ret
sbb
jnp
xchg
push
subl
cmp
aas
shr
jo
ret
xchg
outsb
into
imul
xor
sub
mov
fistpl
je
dec
push
push
and
mul
sub
std
adc
xor
mov
mov
or
dec
fistpll
sub
nop
sbb
andb
xchg
mov
dec
sbb
push
cmp
aas
stc
mov
scas
test
adc
cmp
sbb
push
adc
jle
push
and
push
pop
je
add
das
push
pop
xchg
ret
mov
pop
sub
cwtl
dec
lock
stc
mov
shr
insl
adc
lock
dec
pop
cmp
jg
cltd
push
cmpsb
dec
mov
mov
and
outsb
stos
mov
shll
jae
fucomp
ficoms
cmpsb
adc
xor
test
mov
adc
pop
adc
outsl
ret
paddsw
popa
inc
push
mov
rolb
aam
roll
add
add
loope
loope
loope
idivl
push
lods
loopne
mov
dec
insb
jo
iret
pop
cmp
jl
mov
push
lea
mov
ret
dec
adc
cmp
mov
mov
lcall
fldcw
arpl
cmp
sub
adc
sub
dec
cmp
jmp
sbb
jl
cld
sbb
mov
or
imul
test
movsl
in
xor
inc
vprotb
es
leave
xchg
in
stos
repnz
push
insl
clc
cs
cltd
call
cmpsl
cmp
arpl
stc
lds
or
pop
xchg
push
or
sbb
and
outsb
mov
cmc
jp
std
push
inc
dec
pushf
fsubrl
test
imul
sub
push
std
push
mov
and
inc
adc
stc
sbbb
adc
cli
and
daa
sbb
sub
cmp
mov
add
int3
loop
dec
arpl
push
rcrl
dec
fbstp
fdivl
enter
adc
ficompl
mov
pusha
mov
lret
jns
and
push
xchg
add
mov
push
cmp
mov
mov
mov
pop
push
sub
inc
cmc
mov
test
push
adcb
jecxz
jbe
dec
pop
test
inc
sbb
lock
lods
test
jle
into
add
and
cld
push
and
test
int3
insb
jle
lea
lods
insb
inc
bound
sub
aad
lods
inc
xor
add
mov
push
jno
xchg
inc
inc
dec
lock
jecxz
shll
dec
mov
loop
xor
fs
rorl
mov
push
enter
pop
or
cmpsb
pop
pop
pusha
leave
insb
pop
cld
fldcw
fstps
cmp
xchg
iret
jecxz
mov
arpl
sub
mov
dec
lods
daa
mov
cmp
mov
lock
inc
decb
push
pop
cmp
mov
mov
pop
push
sbb
in
and
jno
test
push
mov
clc
sbb
jmp
pop
inc
and
int
addr16
or
mov
insl
in
xchg
adc
mov
pop
inc
sub
out
sub
sub
loopne
inc
lods
mov
pop
pushf
and
in
clc
js
enter
fcompl
mov
loop
sub
mov
inc
mov
sub
shlb
sub
in
insl
dec
push
inc
push
scas
sbb
sub
xchg
adc
icebp
outsb
sub
dec
xlat
adcl
cwtl
stos
pop
loop
shr
es
xchg
adc
adc
xor
ljmp
bound
icebp
xchg
inc
pop
cltd
mov
pusha
repz
add
ret
adcl
push
out
mov
outsb
add
cmp
shll
add
mov
and
lods
lcall
lret
in
xor
add
andl
fbstp
outsl
dec
pop
mov
data16
or
push
sub
mov
pop
jbe
xor
xchg
in
leave
movsb
aad
push
gs
xchg
jne
xchg
iret
jge
mov
fstl
int3
int3
mov
mov
push
jno
cmp
pop
js
xchg
push
je
xchg
rol
xor
test
pop
rcr
inc
dec
in
sub
bound
notl
mov
pop
or
into
adcb
sarl
adc
push
xchg
pushf
call
inc
mov
cmp
xchg
adc
sarb
pop
sahf
ja
ret
sub
jnp
repz
lret
lahf
leave
xor
sbb
push
jb
movl
popf
leave
pusha
idiv
mov
cs
frstor
sub
push
addr16
rol
jae
push
mov
aas
add
sub
sbb
xor
stc
mov
adc
mov
cmc
sub
mov
mov
inc
fldln2
fneni(8087
xor
punpcklbw
mov
push
in
pop
cmp
nop
mov
sti
mov
push
out
dec
ss
in
cmp
or
jbe
mul
sub
mov
xchg
cmp
add
sbb
iret
jnp
add
repz
pop
movsb
adc
fldl
xchg
stos
popf
sbb
mov
outsl
cmp
es
xor
inc
inc
mov
sub
leave
pop
mov
fmull
aad
mov
jno
inc
fcmovnbe
pop
inc
push
jns
bound
jns
inc
fcoms
pop
mul
loop
xchg
ss
je
aam
mov
loope
es
adc
add
jbe
cmp
in
call
lock
aas
sbb
cld
dec
pusha
jns
sbb
sub
mov
mul
push
mov
dec
pop
stc
cmp
shrl
shl
std
outsl
push
pop
cmp
in
push
ret
test
js
fisubl
mov
cltd
test
pop
and
jno
das
rcll
inc
lock
xor
inc
add
dec
loope
jo
ss
ret
hlt
add
dec
add
lds
mov
jcxz
cmp
stc
subl
outsl
rcll
jae
mov
and
in
pop
movsl
out
xchg
mov
loopne
repnz
mov
lret
sbb
mov
cli
sub
hlt
roll
mov
xchg
das
test
enter
xlat
std
pop
cmc
aaa
jnp
pop
sahf
mov
xchg
jbe
sbb
dec
inc
cmc
mov
outsl
je
test
jb
dec
movsl
iret
mov
pop
xor
aas
loop
gs
out
jb
mov
dec
sbb
ret
dec
dec
das
push
andl
fcomps
cmpl
add
sbb
jle
int3
lret
test
stc
pop
inc
fs
mov
cs
imul
int3
mov
nop
dec
jecxz
in
xor
testb
dec
adc
mov
in
outsb
shlb
mov
shlb
idivb
add
inc
dec
mov
dec
xor
sbb
sbb
jns
pop
mov
jnp
repnz
icebp
loope
jno
gs
xor
pmulhw
xor
xor
outsl
xor
xchg
fldenv
jle
repz
stc
dec
pushf
and
subb
icebp
nop
fdivrl
sub
mov
in
ret
mov
ret
scas
mov
outsb
cmp
lods
dec
cltd
or
jno
adc
jnp
and
add
sub
inc
mov
or
mov
push
mov
shrb
scas
testl
add
lret
push
cmpsl
inc
or
aam
in
mov
daa
aaa
sub
lret
pop
loope
mov
inc
mov
jbe
dec
bound
daa
imul
ret
mov
fwait
nop
xor
cmp
cwtl
cmpsb
mov
dec
cmp
loop
mov
movsb
inc
sbb
mov
ljmp
jno
or
mov
mov
rorb
mov
jecxz
call
push
jp
gs
push
fstpl
or
jp
add
xchg
adc
mov
fdivl
bound
and
loopne
ss
nop
in
mov
mov
movsb
mov
es
and
adcl
js
pop
aad
jno
xor
mov
xchg
dec
mov
lcall
xchg
ljmp
add
pop
popa
sub
jbe
or
scas
inc
ja
push
int
adc
jb
sahf
mov
inc
dec
push
xchg
lods
xchg
adc
movsb
add
xchg
and
out
mov
pop
add
aaa
push
nop
sti
data16
mov
xorl
das
icebp
int3
fdiv
fnclex
xchg
mov
iret
mov
mov
shlb
stos
in
cwtl
test
out
out
or
cmpsb
sub
inc
add
mov
mov
rol
insb
xchg
pop
movnti
icebp
jbe
push
aam
pop
dec
lock
pop
out
in
add
xchg
in
flds
or
lret
mov
gs
mov
mov
addl
test
mov
cmp
out
sub
lea
jnp
push
popf
fstpl
add
sahf
cmp
mov
mov
cmc
pop
outsl
outsb
ds
popl
xrelease
adc
leave
and
inc
fistl
cmp
in
jmp
cmpsb
pop
xchg
sub
imul
nop
mov
loopne
nop
mov
sub
push
or
sub
call
js
test
into
adc
adc
fistpl
mov
add
adc
fsub
jno
adc
aad
mov
jbe
cmc
frstor
dec
dec
std
lods
jns
out
xor
inc
fisubl
xor
outsb
mov
popa
or
mov
rcll
mov
lcall
sbb
movsl
pop
sub
loopne
repz
ljmp
add
test
push
inc
lock
into
cmp
push
push
subl
jl
pop
mov
xor
imul
jmp
test
movsb
jge
loopne
dec
and
inc
imul
mov
inc
dec
in
sub
dec
ds
movsb
je
mov
mov
mov
loopne
cmpsl
adc
nop
jl
mov
lcall
dec
fwait
shlb
sbb
jne
cmc
mov
sub
stc
loope
mov
cli
lret
test
outsb
into
sub
movsl
and
cmp
or
push
xchg
pop
jecxz
in
sahf
rorl
sub
pop
mov
in
and
or
mov
dec
sbb
repnz
scas
and
sbb
push
ljmp
sbb
cmp
xchg
mov
lods
rcrl
mov
jecxz
push
xor
stos
cmp
push
cmp
test
fcomp
lds
push
inc
inc
rorb
rorl
bnd
lods
adcb
lcall
femms
loopne
pop
xor
inc
stc
inc
fs
push
dec
and
cmp
pop
push
or
xchg
movsb
push
popf
cmp
ss
insb
xchg
mov
or
or
xchg
stos
inc
ret
sahf
push
inc
cmpsl
and
add
test
jl
xchg
add
stc
or
and
push
jbe
ljmp
jbe
pop
test
ss
cwtl
stos
mov
mov
pop
pop
cs
adc
test
js
xchg
aad
jge
xor
ja
cld
lret
adcl
daa
sbb
fwait
or
cmp
mov
mov
rorl
loop
in
testl
mov
xor
fucomp
mov
adc
xor
rcl
xor
nop
jmp
add
repz
shll
mov
jo
insl
pop
mov
add
push
adc
or
js
or
mov
or
push
jo
jecxz
aad
scas
add
push
scas
jmp
rclb
sahf
xor
add
aas
push
movsl
and
leave
pop
push
add
cwtl
push
jae
insl
mov
cwtl
cmpsb
fcmovu
xchg
mov
inc
xorl
out
scas
add
inc
ds
dec
inc
xchg
ss
jecxz
push
push
xchg
cmpsb
mov
ss
jbe
sub
mov
mov
push
outsl
xor
pusha
and
xor
lret
push
lret
lock
mov
inc
mov
or
jne
sbb
sbb
dec
dec
ret
cmc
lock
xor
cltd
cwtl
outsl
adc
in
mov
adc
js
mull
add
flds
xchg
sbb
repz
dec
mov
fadds
aam
movsb
add
js
cs
dec
dec
out
cli
pushf
movb
pop
mov
fbld
push
ja
lcall
push
inc
mov
nop
push
hlt
push
adc
repnz
lock
pop
dec
aam
and
imul
hlt
inc
inc
es
push
inc
cmp
sarl
or
cmp
cs
cwtl
mov
mov
xchg
add
mov
test
lret
ret
dec
dec
outsb
push
in
mov
mov
dec
in
test
rcll
shl
xchg
rcr
loop
sub
cli
cmpl
dec
rcrl
mov
cmp
jb
sbb
and
mov
ds
add
outsl
outsb
push
mulb
cmp
or
mov
fimuls
insl
in
pop
xchg
pop
imul
inc
cs
cld
pop
mov
shl
int
sub
adc
push
sub
cld
jbe
inc
or
and
fnsave
lods
mov
and
adc
push
lret
in
mov
jp
push
xchg
add
cmp
ljmp
push
popa
xchg
call
test
cmp
sub
or
cmp
cmpsl
xor
sbb
out
ret
hlt
jecxz
jp
xchg
xor
or
mov
icebp
shll
fcoml
dec
xchg
and
jge
mov
loop
enter
jmp
and
fmuls
pop
insb
sbb
sbb
pop
mov
cmp
rcr
pop
movsl
add
arpl
push
stc
movsl
push
cmc
push
or
lahf
imul
inc
pop
daa
in
mov
push
insb
xchg
or
inc
jle
xchg
sbb
pop
push
fsub
add
mov
pop
cmp
cmp
test
mov
xchg
in
lret
aad
insl
or
mov
in
stos
in
das
sbb
les
cmp
sbb
mov
ret
mov
mov
ja
clc
jne
cmp
pop
sbb
stc
pop
and
inc
cli
push
ss
pop
ss
xor
into
mov
cmp
sub
stos
leave
xor
lret
jmp
mov
push
cmpsl
xchg
cmp
cmc
pop
fcmove
int
fimull
cmpsb
cmp
jmp
insb
dec
loop
aas
loopne
cmp
outsl
push
push
int
mov
lock
inc
sbb
xor
in
pusha
inc
pusha
cmp
mov
sti
arpl
and
sub
inc
xlat
and
popf
stc
addr16
pop
mov
or
lret
sti
imul
fstpl
scas
sbb
xor
xchg
cmp
cmp
incb
loope
or
cmpsb
incl
pop
push
shll
es
lds
dec
add
shll
pusha
fildl
jg
insb
xchg
sbb
sbb
sub
push
cwtl
or
mov
xor
in
mov
gs
dec
lea
dec
jl
les
mov
out
jp
fistl
rcrl
js
leave
add
push
lcall
shll
push
sbb
cltd
pop
jnp
add
movsb
lock
mov
xchg
mov
mov
lods
sbb
scas
fistps
jecxz
pop
cmp
lcall
xor
mov
cmpsl
mov
sub
sbb
dec
stos
call
test
js
inc
fwait
lods
sbb
pop
jl
push
cmpsl
jne
das
imul
ret
insl
lcall
xchg
es
sbb
sub
outsl
mov
dec
in
sub
out
sub
pop
in
add
jno
pop
push
out
cmp
das
cltd
scas
pop
movsl
mov
xchg
sti
xchg
sar
sub
loope
and
add
pop
outsb
in
into
sbb
xchg
sub
stos
mov
in
in
mov
jg
push
lcall
sbb
test
nop
push
outsl
ret
xor
out
jns
add
and
sbb
mov
int3
fadds
rclb
test
mov
mov
dec
or
imul
inc
sbb
ja
cmp
sbb
sub
push
movsl
inc
adc
push
aam
insb
call
xchg
lock
dec
mov
lret
pop
and
mov
mov
or
pop
lds
inc
addr16
mov
jb
addb
jns
dec
cmpsl
std
xor
xchg
xlat
das
fwait
sbb
lret
data16
push
xchg
call
cmp
imul
xlat
xchg
dec
jle
daa
je
dec
dec
jg
pusha
xlat
mov
addr16
cwtl
dec
sbb
sub
push
fwait
and
mov
pop
fiadds
sarl
orl
adc
mov
out
push
mov
loopne
dec
movsb
dec
loopne
cmpsb
std
pop
add
push
mov
jecxz
dec
loop
aam
jnp
xchg
imul
cmp
ret
xor
lret
or
cs
stc
dec
adc
xchg
imul
dec
repnz
adc
fidivl
out
xchg
cwtl
in
test
lea
xchg
ss
or
ret
rol
add
pop
test
cmp
fildl
pop
aaa
xor
std
mov
inc
test
arpl
imul
ret
sarl
fsubs
pop
cmp
or
inc
push
sbb
jp
xor
xor
dec
xchg
out
mov
jmp
test
lea
ss
mov
ja
dec
aas
clc
test
cwtl
sub
mov
loopne
cltd
adc
pop
ljmp
jmp
shlb
push
add
enter
jbe
in
sbb
stc
lock
icebp
punpckhdq
test
inc
cld
xchg
add
fiadds
pop
mov
mov
cmpsb
sarl
les
call
mov
ret
pop
testb
stc
loope
mov
inc
push
lods
jno
mov
int3
cmpsb
in
xchg
xchg
das
enter
fwait
call
cli
fidivrs
mov
push
lcall
inc
push
sub
mov
arpl
stc
sbb
cmp
decl
lahf
pop
call
dec
shrb
shl
mov
pop
push
ljmp
pusha
ja
rcll
repnz
in
add
jne
pushf
scas
int
inc
in
jg
cs
std
das
jbe
stos
or
sub
cmc
rcrl
pop
push
pop
xor
jne
scas
mov
ret
push
std
fcmovnb
pop
lock
scas
nop
add
sbb
jg
jbe
dec
sar
notb
shrl
movb
stos
pop
in
mov
in
sub
pop
jp
movsb
mov
xchg
adc
mov
adc
and
xchg
sub
fimull
pop
jle
outsl
push
add
fs
mov
enter
jecxz
adc
ljmp
ja
add
or
add
in
mov
push
xchg
add
cmp
fs
adc
popf
mov
sub
xchg
lds
add
shll
lods
dec
stos
push
arpl
push
into
hlt
ss
data16
leave
inc
leave
in
fbld
in
inc
loope
jmp
xor
in
add
mov
pop
fadd
jmp
xchg
fsubl
pop
cmp
mov
and
and
cli
xor
inc
inc
jmp
or
push
add
sub
loop
rcrl
rclb
test
rcr
mov
add
lds
je
jns
cbtw
in
stos
cwtl
mov
jae
movsl
std
mov
xchg
push
push
outsb
jo
push
jmp
xchg
or
inc
cmp
or
inc
xor
and
pop
fsub
jns
popf
in
mov
jb
mov
add
dec
scas
enter
sarb
adc
add
push
mov
pop
mov
pop
in
pop
mov
push
cmpsl
iret
adc
stc
pop
stos
inc
dec
sbb
outsl
out
push
sbb
adc
mov
hlt
je
sub
cmp
fisttps
mov
pop
adc
xor
imul
inc
ficoms
fidivrs
mov
mov
mov
outsb
add
mov
bound
add
mov
aad
nop
mov
aam
movsb
sub
mov
loopne
test
fldenv
jns
aaa
les
cmp
iret
sbb
push
ss
fisubrl
cmp
outsl
je
mov
dec
mov
clc
jb
fwait
xor
mov
loop
fsubs
les
test
mov
addr16
or
test
pop
in
es
mov
std
cltd
xor
mov
push
insl
xchg
sub
hlt
inc
push
cmpsb
pop
mov
jp
lret
pop
inc
and
cmpsl
push
icebp
fdivs
pop
dec
push
pop
bound
push
xchg
clc
cltd
stos
fnstcw
xlat
fcomps
adcl
add
dec
lahf
xsha256
lock
in
add
push
sub
sub
adc
pop
daa
outsl
or
pop
mov
gs
pop
test
pop
scas
xchg
rcrl
pop
xor
mov
loope
inc
xchg
ja
lcall
fcmove
jp
jo
adc
jo
add
sti
popf
xchg
add
es
fidivrs
pop
negb
xchg
sub
xor
dec
cmpsl
repz
fldcw
daa
jnp
movsl
movsb
cmp
mov
shlb
push
testl
sahf
inc
mov
es
enter
iret
clc
out
loope
loop
xchg
push
icebp
sub
jne
mov
test
scas
xchg
sub
int
bound
mov
pushf
test
fnstsw
pushf
jns
cmp
sahf
push
inc
orl
sbb
add
movsl
xchg
pop
fdiv
adc
mov
pop
xlat
or
push
aas
ljmp
add
loopne
jl
cmp
clc
out
movsb
jmp
out
push
shrl
xchg
fisttps
inc
or
jnp
mov
insb
cld
or
jne
int3
lret
stos
sbbl
inc
push
hlt
gs
mov
inc
icebp
dec
add
stc
or
je
aad
inc
out
inc
les
xchg
aam
jecxz
scas
dec
arpl
fwait
cmpsb
mov
lcall
and
sbb
es
push
mov
add
cmp
call
or
lds
adc
loop
sbb
int
dec
out
in
dec
loop
jne
pop
and
lret
sbb
idivb
popl
jge
fsubp
test
jo
cmp
mov
or
jecxz
or
pop
jp
cmp
xor
test
scas
pop
adc
je
or
movsl
sbb
sti
mov
sub
daa
aam
adc
repnz
xchg
test
xchg
popa
test
and
sub
or
in
in
dec
cmp
ret
jno
in
arpl
sub
and
pop
sbb
xchg
mov
jo
fcomp
mov
and
dec
push
inc
mov
imul
faddp
xchg
mov
lock
and
lods
test
lcall
mov
test
in
aaa
ss
rclb
insb
inc
adc
sbb
mov
rcrl
repnz
in
push
das
cmp
popa
ja
inc
movsb
or
push
je
scas
les
cltd
lock
cmp
sbb
rcl
movsb
mov
sbb
decb
fldenv
adc
popf
xor
pusha
ljmp
add
xor
push
pop
sahf
jo
mov
icebp
sbb
mov
cmpsb
mov
push
js
or
repz
or
jbe
sub
push
sub
pop
pop
in
pop
scas
imul
sbb
popf
adc
mov
cmp
ds
xchg
pop
sbbl
cmp
leave
test
sbb
xor
mov
ja
sub
dec
fs
jns
push
jno
dec
idivl
xchg
or
mulb
fwait
jbe
push
mov
add
into
xor
sbb
add
jmp
pop
push
pusha
adc
ljmp
mulb
fisttpl
dec
mov
insb
xchg
sbb
add
in
imul
mov
jle
or
pop
inc
push
fldln2
inc
stc
fdivl
xor
aam
mov
xchg
pop
scas
cmpl
sbb
in
xor
std
and
xchg
add
lock
hlt
pop
test
xchg
cmpsb
sti
out
leave
and
call
xchg
lock
shlb
inc
faddl
mov
outsl
push
jae
jmp
pop
cmp
mov
out
mov
dec
xor
jns
minps
xor
sbb
mov
ret
ret
into
gs
mov
jmp
inc
loope
or
push
aas
dec
cmp
ret
jbe
jecxz
in
loope
add
add
andl
fisubrs
cmp
pop
add
repz
mov
push
faddl
and
ss
std
stc
jmp
daa
push
pop
add
dec
jmp
in
xlat
aas
test
lods
loope
push
xchg
ret
jne
cmc
mov
and
repnz
jmp
mov
out
push
xchg
jae
push
dec
cmp
jbe
and
ret
jnp
sbb
mov
push
loop
push
imul
xor
adc
xchg
jo
add
test
lahf
jo
inc
dec
xchg
dec
aas
jmp
ljmp
out
fisttps
movsb
cmp
jmp
xchg
jo
lods
jecxz
pop
jge
mov
cltd
call
fld
xchg
mov
repnz
push
pop
popf
sub
sti
aam
jl
dec
push
lods
sbb
jecxz
dec
movsl
ret
lcall
sub
mov
fucomip
in
incb
inc
inc
scas
cmp
call
push
scas
pushf
mov
inc
ss
in
add
add
insl
push
enter
xor
xlat
push
rorl
xchg
jbe
loop
lcall
test
incl
lods
push
in
pop
arpl
js
enter
mov
dec
fmul
popa
scas
out
push
fwait
mov
lahf
dec
ret
clc
sbb
cs
or
cltd
out
rclb
sub
mov
jo
mov
fistpl
or
mov
rcl
aad
fiadds
fbstp
fisubl
push
adc
mov
mov
push
subl
shl
imul
push
jle
aas
aad
ja
mov
push
adc
ret
xchg
dec
shll
ret
stos
test
sbb
push
addb
pop
pusha
clc
pop
xchg
xor
test
hlt
aas
adc
adc
push
jae
repz
or
jns
mov
hlt
cmpsb
int3
inc
pop
sar
clc
mov
scas
xchg
xor
call
add
fldenv
fildl
popa
es
pop
rorl
mov
cmp
xchg
and
push
stos
inc
and
cmpsb
fldt
push
mov
fldenv
jmp
and
cmpsb
adc
xchg
jns
sbb
mov
rolb
pop
cmc
call
iret
push
in
add
or
dec
lcall
lds
dec
xchg
pop
sub
bound
sbb
dec
outsl
xchg
adc
and
outsb
movsl
pop
mov
or
cmpsb
loopne
xor
cmc
mov
pop
cmp
mov
push
cmpl
cwtl
xchg
mov
punpckhdq
dec
out
filds
hlt
xchg
aaa
push
adc
xchg
mov
inc
gs
mov
mov
xchg
and
aaa
adc
jmp
mov
pop
xchg
shll
imul
mov
imul
repz
push
pusha
iret
sub
pusha
mov
lods
lods
jo
icebp
dec
jo
hlt
enter
les
inc
std
enter
sbb
pop
pop
sbb
les
in
push
orl
repz
ret
hlt
add
push
lods
adc
xchg
sub
clc
dec
enter
lock
add
dec
stos
data16
pop
add
sbb
ds
xchg
xor
sahf
clc
add
push
xchg
push
ret
jno
xor
sbb
fwait
movsb
movsb
jg
cmp
dec
push
cltd
push
push
mov
subb
rclb
dec
adc
xor
sarl
shr
test
lret
and
cwtl
add
ja
loopne
std
xchg
inc
cld
mov
cld
dec
jg
mov
pop
xchg
out
adc
inc
push
and
lods
dec
scas
inc
pusha
sbb
testl
mov
mov
ret
lret
adcl
pop
xor
fisubs
jl
stos
adc
lret
ja
jmp
scas
xchg
hlt
add
mov
pop
push
lret
jb
test
or
aam
sub
adc
into
jne
fsubl
jmp
cmp
dec
and
jmp
sbb
push
or
and
fists
add
jae
mov
mov
xchg
adc
sub
fwait
inc
inc
cltd
stc
in
pop
mov
ret
fbld
scas
and
testb
lods
addr16
lcall
mov
mov
mov
adc
test
cmpsb
jp
jg
add
push
dec
icebp
insb
xor
fst
cld
sti
dec
mov
aam
adc
cwtl
and
xor
daa
cld
mov
cmc
jnp
scas
xchg
pop
mov
fidivs
cs
mov
ret
push
bound
jle
lods
out
and
out
inc
loop
xchg
and
sbb
push
or
mov
out
aad
std
or
push
notl
icebp
jmp
cmpl
sahf
sub
into
cmp
mov
mov
inc
pop
jbe
adc
or
cmpsl
loopne
and
rorl
mov
xor
repz
fcmovbe
mov
jno
add
cmp
lods
mov
imul
pop
hlt
inc
inc
gs
daa
inc
fstpl
cs
sbb
insl
ret
imul
imul
mov
add
les
cmp
inc
clc
push
mov
ds
in
ret
mov
mov
cmpsl
push
pop
push
out
insl
scas
xchg
inc
mov
out
xor
rolb
dec
loopne
shll
sbb
xchg
fistpll
sub
sbb
pop
daa
dec
add
testb
shl
andl
push
and
pop
icebp
push
add
orb
outsb
and
pop
xor
jge
rorl
sbb
inc
rcrl
fiadds
and
int
ds
push
lcall
faddl
mov
add
in
js
mov
pop
pusha
sbb
rol
sbb
imulb
or
and
sbb
xchg
jne
les
xchg
add
pop
jne
js
xchg
stos
adc
nop
xchg
jbe
aad
cmp
inc
sahf
push
adcb
jbe
adc
shll
subb
loopne
ljmp
inc
cmp
clc
inc
lods
ret
pop
xor
test
bound
sbb
jns
mov
inc
cmp
push
mulb
mov
mov
aam
into
aaa
test
adc
dec
mov
mov
leave
fucomp
cld
push
xchg
cmp
dec
ja
sahf
test
sbb
add
stc
mov
add
lret
mov
inc
test
jo
push
mov
pushf
or
lret
fs
pslld
fsubl
xchg
add
lahf
add
add
test
push
or
shl
int3
popa
andl
aad
and
push
sahf
int3
out
xor
jle
loop
roll
int
test
fidivs
das
jmp
push
es
pop
jae
mov
and
lahf
iret
jecxz
or
and
outsb
into
inc
repz
adc
mov
mov
out
jns
addr16
into
imul
add
or
in
cmp
jns
inc
out
movsb
addl
mov
sti
pop
mov
adc
inc
xor
adc
push
add
dec
orl
pop
push
or
pop
loopne
push
xchg
inc
jmp
xchg
scas
pop
insb
inc
or
mov
and
push
mov
imul
dec
mov
pop
loop
mov
sub
pop
xchg
int
or
push
push
adc
or
xchg
stos
jns
les
cmp
mov
loopne
push
inc
add
pop
adc
jp
mov
mov
hlt
and
sbb
sub
add
mov
repz
add
fcoms
stc
loope
fdivrs
pusha
lret
aad
addb
jo
leavew
jl
mov
or
lea
jns
shll
das
cmp
cmp
sti
ficoms
mov
mov
mov
sbb
cmp
inc
pop
inc
add
mov
cmp
or
cwtl
fsubp
mov
adc
addl
mov
int
mov
in
imul
out
jp
fimull
sub
out
or
cmc
push
imul
mov
xchg
add
je
pop
and
loopne
std
outsl
bound
inc
aas
outsl
push
jno
sbb
loop
and
adc
jns
fdivs
mov
push
lods
incl
stos
cmp
pusha
scas
bound
cmp
imul
cmp
mov
ja
aad
cli
test
js,pt
in
aas
out
jp
mov
sub
xlat
vpunpcklqdq
mov
cs
repz
mov
rorb
push
loop
jl
adc
loope
loope
push
jno
out
pusha
aam
xchg
sub
ret
mov
js
dec
pop
adc
add
outsb
cwtl
and
mov
scas
jecxz
lahf
push
aam
dec
outsb
pusha
aad
shll
je
pop
mov
jbe
sub
push
mov
stos
lcall
enter
outsl
in
mov
pop
mov
jne
pop
sub
rorb
ja
pop
loop
lods
idivl
aas
mov
fwait
test
int
mov
in
sbb
cmpsl
push
xchg
enter
scas
push
test
xor
xchg
mov
pop
or
cmpsl
cmp
mov
leave
shr
popa
mov
mov
mov
and
mov
scas
adc
imul
clc
imul
mov
clc
or
add
dec
push
test
cmp
push
pusha
sbb
stc
filds
sbb
decb
or
mov
fsin
mov
or
jp
test
ffree
cwtl
pop
in
test
or
cmc
nop
and
inc
cli
icebp
ja
insl
test
clc
cmp
les
data16
or
adc
je
jmp
push
push
mov
call
pop
lret
hlt
addr16
mov
out
sbb
mov
into
xor
add
sub
jl
shll
mov
mov
push
mov
sbb
dec
cld
stos
iret
sbb
stos
cmpl
xor
in
push
push
movsl
insb
sbb
decb
xor
jg
pop
and
mov
add
jmp
imul
mov
mov
rcll
pop
or
mov
dec
shlb
mov
sub
inc
xor
fwait
lods
andb
pop
mov
adc
fcompl
mov
mov
mov
out
mov
dec
cmp
shll
test
roll
lods
mov
sbb
sub
shrb
inc
jns
mov
adc
xchg
pop
xor
xchg
mov
xor
jo
lods
add
xor
loop
cld
iret
jnp
mov
xchg
popf
cmpsb
mov
fisubl
xor
pop
jo
mov
js
sahf
aam
mov
cld
data16
out
shld
out
push
iret
push
test
insb
and
and
sbb
adc
cmp
in
sub
leave
add
xor
xchg
cmp
push
insb
jns
stos
int3
xlat
jmp
or
mov
mov
out
inc
sti
mov
adc
addr16
outsb
leave
insl
fsubrp
shr
testb
mov
movsb
sbbb
ljmp
pop
dec
ret
jg
mov
fs
fwait
clc
in
decl
jmp
icebp
mov
sbb
jl
dec
dec
mov
cmp
inc
stos
daa
mov
pop
rorb
sub
fwait
jno
adc
mov
push
lcall
adc
test
pop
addr16
adc
daa
ljmp
loop
arpl
inc
or
push
in
rolb
xor
push
test
or
shrl
fdivrs
jae
jb
mov
stos
dec
pushf
scas
call
in
dec
arpl
sbb
rclb
xchg
aam
mov
les
push
or
mov
push
fnstcw
gs
out
mov
movsb
arpl
stos
cmp
or
cmp
mov
roll
mov
dec
push
add
mov
xchg
out
test
pop
mov
xchg
and
jne
dec
adc
and
in
jns
push
mov
out
rcrb
xor
scas
inc
stos
cmp
cltd
adc
cmp
test
pop
stc
pop
mov
push
xchg
and
inc
add
test
mov
fsubrp
fwait
push
lock
push
imul
ret
pop
mov
mov
sbb
dec
fnstcw
jne
push
xor
lcall
imul
cltd
aaa
out
data16
mov
test
enter
shl
inc
mov
jmp
and
pop
hlt
lea
popa
fmuls
adc
loop
dec
xchg
jmp
bound
xlat
int
and
mov
or
aam
mov
mov
push
cmpsb
and
cmpsb
cmp
cmpsl
ret
sub
mov
test
ja
inc
xor
add
mov
es
pop
lcall
aas
dec
aas
mov
out
ret
aad
xchg
orb
das
xor
lods
popf
pop
mov
lea
test
mov
sbb
out
ret
mov
rol
jecxz
xchg
mov
mov
enter
into
pop
loope
data16
popf
out
push
aas
ljmp
dec
stos
xchg
mov
cmp
cli
pusha
push
xor
add
int3
lcall
in
stos
movsb
xchg
jo
das
into
arpl
outsb
cmp
inc
cs
jmp
jne
testb
and
cld
outsl
pusha
enter
adc
xchg
ja
jmp
clc
cwtl
push
mov
or
mov
shll
fdivl
mov
sub
lcall
sub
into
mov
xor
lock
cmpsl
sarl
enter
lret
adc
add
cli
adc
addr16
jns
sti
or
sbb
cmp
cmp
outsl
jmp
movsb
fisubs
mov
xchg
dec
outsl
daa
out
dec
lcall
sub
lods
mov
cld
mov
mov
shlb
adc
pop
ja
les
push
or
clc
leave
test
leave
cmpsb
popf
xchg
das
and
shr
dec
pop
movsl
and
and
mov
dec
sbb
xor
xor
ret
lds
sahf
dec
mov
dec
call
test
sahf
or
cmpb
or
repz
cmpsl
movl
jbe
mov
mov
mov
inc
fcompl
stos
inc
mov
lods
xor
addr16
and
cmp
mov
push
jbe
sarb
sub
ds
add
testl
push
data16
pop
mov
movsb
mov
or
xchg
outsb
jl
popa
test
jg
mov
push
loopne
mov
test
je
and
test
das
decl
or
and
sub
stc
cmp
push
pop
pop
mov
lods
js
xchg
adc
pop
lods
jmp
repnz
jns
loopne
lods
jmp
mov
jmp
adc
or
mov
jns
dec
lods
mov
cmpb
xchg
or
jnp
arpl
loopne
adc
cmpsl
pop
sbb
mov
sub
inc
jne
cmp
mov
push
pop
mov
jecxz
jne
xchg
ss
inc
xchg
adc
adc
jmp
cmc
fwait
add
jmp
pusha
rcr
jp
loopne
mov
cmp
pushf
dec
popa
sub
loop
ret
xlat
xor
sbb
jno
fadds
pop
add
sti
xor
jbe
data16
xor
cmp
lcall
cmpl
aam
dec
and
stc
sbb
inc
fisttpl
andb
pop
mov
in
test
adc
pop
jmp
or
sbb
mov
fdivrs
jne
mov
cld
or
adc
pop
int
or
xchg
sub
jp
sub
pop
dec
mov
imul
push
insl
sub
mov
pusha
dec
cmpsl
push
lcall
add
movsl
lret
mov
pop
popa
sub
sub
shr
pop
xor
push
in
xchg
add
cmp
xchg
xor
or
inc
or
dec
and
fcmovb
xchg
js
inc
pusha
cmpsl
dec
ljmp
xor
notl
es
dec
stos
cmp
fsubrl
sub
mov
ja
in
or
fcoml
mov
in
dec
fidivl
mov
mov
push
jp
sub
fwait
movsl
sahf
dec
mov
sarb
mov
push
iret
subb
fsubs
add
es
xchg
stos
lret
dec
lods
cmp
in
xor
xlat
outsb
and
pop
cmc
flds
sub
mov
fldcw
jp
cli
add
pop
fptan
mov
stos
es
adc
mov
cmp
inc
scas
sbb
push
fistpl
fdivs
in
jns
jge
lcall
xchg
push
aaa
adc
dec
jno
xrelease
ljmp
aas
mov
mov
movsl
cmp
mov
push
mov
lods
imul
dec
dec
mov
push
push
push
cmp
push
outsb
pop
cmp
sbb
int
rol
inc
bound
push
cs
or
xor
xor
lea
loope
insb
push
cmpsl
shrl
xchg
outsl
cmc
jbe
sub
jmp
add
jbe
xchg
mov
mov
push
rcr
mull
subb
int
sub
jmp
jle
jnp
addr16
in
pop
pop
imul
dec
cmp
arpl
push
repz
ljmp
pop
into
xchg
mov
and
add
orb
movsl
outsb
stos
inc
mov
testb
inc
enter
daa
mov
adc
mov
sub
add
xor
cmp
cli
shlb
lret
loopne
movsl
push
popa
ds
rolb
sub
mov
enter
mov
adcl
repnz
and
dec
dec
push
mov
mov
out
pop
inc
fdivl
enter
addr16
dec
sub
mov
scas
addr16
sbb
add
push
xor
xor
lret
bound
rcrl
loopne
adc
sbb
push
fs
mov
xlat
pop
ret
mov
pop
and
mov
hlt
pop
sub
xchg
adc
add
inc
and
xlat
lcall
sub
call
daa
mov
addr16
inc
xchg
xchg
lods
pop
xchg
dec
jecxz
aas
ret
outsb
dec
test
inc
push
insb
outsb
xchg
push
addr16
das
xchg
fistps
sub
cmp
outsb
sub
or
cs
xchg
sub
pop
lds
aas
repz
push
inc
shlb
pop
stc
adc
leave
xchg
mov
in
aam
enter
sub
jae,pn
cmc
ds
fildll
and
push
push
xchg
mov
sbb
sti
shl
jg
dec
cmp
sbb
jge
pop
jbe
mov
pop
rorl
pop
je
or
pop
stos
push
adc
fs
sbb
out
mov
dec
xchg
out
rorb
aas
sbb
movsl
icebp
and
pop
call
jecxz
cmc
xor
shlb
cmovo
movsl
outsl
pop
fnstcw
mov
repz
pushf
xor
jb
xchg
loop
pop
stc
mov
out
xchg
sub
ret
enter
inc
xchg
ja
sbb
inc
leave
scas
and
jge
push
loope
mov
dec
add
stc
out
imul
aam
rcl
xor
roll
fs
mov
adc
fadd
shll
out
outsl
arpl
ret
aad
movsl
dec
mov
icebp
daa
outsl
and
and
inc
dec
shlb
push
pop
sub
mov
mov
mov
jbe
rol
add
rcrl
incl
add
nop
cmc
xchg
xor
jecxz
cwtl
fwait
sti
xchg
pop
test
xor
and
mov
xlat
add
inc
out
sbb
dec
adc
sti
xchg
jns
xlat
scas
lods
lahf
imul
mov
hlt
loopne
stc
cmp
mov
sbb
mov
or
stos
es
mov
insl
or
stos
jbe
cmp
mov
testb
sub
dec
jecxz
mov
sub
jns
fwait
popf
popa
leave
xchg
adc
sub
aas
inc
or
and
in
std
xor
mov
in
mov
aaa
cmp
aam
jmp
sub
pop
mov
jge
out
mov
rclb
mov
sub
xchg
mov
xchg
mov
dec
push
sti
sbb
xchg
cs
inc
pop
mov
cmp
push
cli
and
xor
adc
mov
inc
xor
aaa
push
ds
jae
jo
scas
fst
sbb
test
test
in
sub
insb
sbb
shll
pusha
jp
jo
pop
scas
aaa
add
xor
dec
stc
mov
das
push
inc
sub
xchg
lret
xor
or
popf
cmpsl
push
dec
or
jp
mov
sarb
lret
sub
stos
push
or
aaa
dec
pop
leave
call
xchg
mov
lock
imul
cmc
mov
divb
negl
scas
pop
sbb
xlat
and
stc
sub
mov
test
pop
xchg
addr16
ror
cltd
push
ljmp
call
xchg
mov
adc
sub
sti
cmpsl
xor
cwtl
mov
or
mov
imul
sbb
adc
and
jnp
enter
xchg
mov
inc
inc
and
mov
adc
adc
cwtl
clc
mov
jge
mov
mov
loopne
sbb
pushf
stos
mov
inc
push
pop
mov
or
jecxz
and
cmovbe
cmp
mov
xor
loop
xchg
mov
movsb
jp
jp
xchg
out
loop
cld
das
or
in
fs
scas
fadd
push
sub
lret
xor
pop
dec
ficoml
ljmp
out
xor
stos
fcmovbe
or
cmp
loop
sub
loop
lock
imul
pushf
scas
aad
int3
pop
pop
push
pop
mov
lcall
sub
shrb
inc
fucomp
lods
subb
mov
pop
push
stc
popf
add
inc
xor
push
jne
int
out
xorb
or
sbb
mov
mov
imul
fnstsw
in
mov
and
aad
cmp
test
xor
iret
loope
aaa
push
arpl
mov
sub
fistpl
sbb
lods
jmp
sub
dec
lods
aad
lcall
sbb
lret
shrb
fcmovbe
mov
decl
adc
lods
in
dec
push
loope
mov
xchg
sub
xchg
lret
out
mov
sub
jo
xor
je
and
in
fisubl
xor
std
jmp
mov
loopne
movsl
fs
xor
test
jns
lods
add
subl
loopne
push
out
jg
out
inc
bound
js
fldcw
push
jne
dec
fldcw
adc
xor
scas
push
daa
jbe
dec
jo
shll
shlb
bound
rcll
add
fadd
sub
mov
sarl
xchg
sub
loope
into
dec
or
lods
mov
ret
sti
scas
or
fiadds
hlt
dec
aad
shl
mov
test
mov
push
xchg
mov
mov
subl
xchg
in
outsb
mov
clc
mov
pop
icebp
mov
adc
add
push
dec
mov
dec
int
scas
cmpsb
dec
repz
xchg
fdivs
jecxz
mov
inc
dec
push
jmp
ja
sub
dec
stos
icebp
decb
insl
std
test
daa
lcall
loop
add
and
imul
xor
jb
icebp
out
hlt
adc
jecxz
xchg
and
sub
std
mov
cmpsl
inc
add
mov
fs
xor
adc
into
xor
sub
rclb
loopne
mov
fstp
movb
aam
shl
xchg
in
mov
add
subb
or
pusha
sub
jne
jb
rcll
jmp
push
jle
xlat
test
aas
push
inc
fisubrl
xchg
lods
jmp
cmp
lahf
xchg
test
sbb
mov
repz
dec
mov
rcrb
not
push
mov
jmp
dec
jmp
pop
into
or
sbb
and
enter
call
mov
cmpsl
adc
adc
push
orb
mov
mov
loop
adc
js
mov
jecxz
mov
mov
mov
adc
inc
cmp
xor
rorl
jne
and
add
mov
ficoms
ret
sbb
outsl
loop
add
sub
dec
cmp
mov
enter
or
scas
pusha
jg
shrb
mov
test
into
stos
inc
test
das
lods
ljmp
pushf
jb
mov
xchg
ret
pop
or
xchg
sbb
les
jbe
pop
mov
xchg
adc
ds
fs
pop
mov
loopne
mov
pop
sti
adc
hlt
dec
sahf
mov
pop
inc
or
dec
scas
add
push
jb
push
adc
scas
in
sub
lea
insb
lea
mov
lret
imul
mov
enter
push
js
xchg
cs
adc
in
dec
and
mov
cld
xchg
or
or
sub
shr
sub
xchg
cmpsl
rcrl
test
fists
dec
outsb
fwait
mov
clc
and
in
out
sbb
mov
testb
add
pop
push
jnp
je
and
es
shl
adc
divb
clc
and
clc
mov
iret
jge
sbb
cmp
pop
outsb
push
out
nop
ljmp
cli
xor
xchg
add
xchg
mov
dec
push
sarl
int3
negb
push
les
push
lods
lret
or
stos
xor
push
ss
aas
rolb
xchg
clc
or
and
xlat
repz
ja
push
shll
jae
xor
mov
push
jno
aad
dec
pop
xchg
cmp
xor
add
mov
adc
xor
insl
sub
std
or
iret
xchg
mov
data16
push
mov
sub
aam
movsl
ljmp
dec
andb
stc
in
scas
out
sbbl
add
sbb
lret
lahf
loope
repnz
outsb
lea
push
cmpsl
jnp
push
iret
xor
inc
hlt
fnstcw
sarl
ret
adc
push
cmc
insl
lcall
imul
mov
mov
popa
je
sub
dec
and
stos
inc
mov
lods
aad
xor
bound
inc
pop
cwtl
adc
bound
fyl2x
movsb
dec
test
repnz
mov
fidivrs
into
popa
pop
xor
ret
hlt
adc
push
mov
push
jno
scas
inc
lret
cld
xchg
scas
xor
movsb
ds
lods
xchg
sbb
add
int
fsubrl
mov
aad
cmpsb
xchg
push
jg
fs
fdiv
orl
pop
aas
pop
xchg
adcl
and
jp
mov
pop
xchg
loop
sahf
sub
dec
push
or
out
mov
mov
push
int
mov
lcall
jne
popa
out
jmp
negb
out
addr16
sbb
mov
inc
aaa
hlt
dec
xchg
cmpsl
shll
mov
mov
adcl
imul
shll
icebp
jmp
inc
in
sub
ret
sarb
cld
popa
iret
fcmovnu
cwtl
in
jl
inc
and
sub
sbb
and
push
imul
out
imul
leave
push
cmc
xchg
cmp
pop
add
pop
scas
mov
adc
out
push
sbb
ret
adc
in
cmp
pushl
outsb
dec
xlat
mov
mov
sti
xchg
dec
shrb
mov
mov
das
into
popf
xchg
or
pop
jmp
push
xchg
pusha
sbb
mov
shll
dec
jbe
popf
cmpsl
sbb
les
lret
sahf
push
lock
int
sti
fldcw
add
mov
cld
movsl
addl
sbb
rcl
cmp
mov
adc
movsb
xchg
cs
in
xchg
test
jno
lock
lock
popf
sbb
pxor
sti
inc
fsubp
cmc
mov
imul
xor
sub
mov
xchg
xor
bound
sbb
xchg
sub
jb
mov
mov
push
push
lods
shl
pop
data16
loopne
outsl
push
test
test
mov
sbb
mov
push
cmp
sti
pop
fsubl
cmp
ljmp
rol
pop
xor
mov
js
mov
vsqrtss
cmp
inc
inc
sbb
sar
adc
cmp
icebp
adc
adc
popa
cmp
loopne
aas
pop
loope
mov
jl
pop
scas
fmull
gs
pop
cmp
insl
fwait
xor
cmp
enter
addl
ljmp
sub
xor
popa
out
lds
inc
inc
adc
pop
movsb
cmp
lea
mov
xchg
leave
fidivrs
out
outsb
mov
scas
sbb
lahf
sarb
add
les
adc
pop
js
sub
neg
test
sub
je
cmp
repnz
jl
mov
shrl
leave
cmpsb
mov
imul
rcll
ljmp
or
jae
cmpsb
negl
in
jg
and
xor
mov
push
mov
add
jns
enter
and
sbb
push
jno
fsubp
xchg
cmpl
xchg
push
mov
in
in
and
das
ja
mov
rcrb
call
or
add
and
and
push
in
shl
orb
jg
das
xchg
cmp
test
mov
js
aad
fs
pop
jae
and
jle
push
xchg
jns
dec
sub
pop
sub
shlb
sbbl
xchg
mov
cmp
fdiv
push
fisubrs
push
aam
lret
pop
hlt
cmp
mov
lret
cmp
pop
mov
divb
push
cmp
mov
add
call
dec
arpl
cli
sbb
imul
insb
movsb
out
neg
out
xlat
imul
or
bound
shrl
jp
je
adc
or
push
jl
or
jge
or
adc
shlb
push
shlb
jnp
inc
cltd
and
cli
xchg
loop
sub
mov
les
or
into
dec
rcr
test
call
jb
in
xchg
addr16
and
rcll
arpl
jae
pop
lds
pusha
adc
mov
jg
lret
xchg
nop
cmp
pop
sahf
out
xor
cld
add
test
adc
inc
xchg
fnstcw
push
inc
sbb
ret
inc
scas
jnp
push
push
dec
test
lods
sbbl
push
in
sub
inc
inc
imul
call
or
sub
decb
cmc
rol
adcb
mov
or
inc
or
es
cli
add
int
xor
dec
mov
or
cmp
filds
xchg
mov
cltd
lcall
repz
int
xchg
mov
aas
jno
lods
mov
pop
mov
pop
cmp
iret
out
lods
dec
daa
adc
decb
mov
mov
shll
push
movsb
repnz
jge
iret
mov
test
les
add
outsb
sub
dec
cmp
xchg
sub
push
test
fsubl
mov
test
sbb
fidivrl
iret
xor
or
push
mov
aaa
in
daa
incl
add
xchg
and
lcall
out
dec
sub
push
push
repnz
mov
cmp
lds
out
or
pusha
jae
enter
or
add
nop
loopne
and
push
inc
sbb
flds
es
pop
clc
mov
sub
adc
ss
addr16
mov
ret
int3
movsl
das
xchg
hlt
adc
xchg
lds
leave
mov
cmp
add
outsb
and
lcall
xor
mov
andl
daa
js
scas
xchg
mov
notl
dec
and
mov
inc
cmpsb
iret
mov
xor
ds
dec
xor
mov
mov
addr16
lds
test
scas
mov
hlt
psllw
dec
imul
mov
mov
xchg
jecxz
mov
xor
leave
fmull
mov
cmc
js
je
cs
pop
sahf
jle
iret
push
mov
aaa
or
mov
nop
lcall
test
outsb
mov
adc
xchg
femms
pusha
and
outsb
orb
push
cmp
in
push
jecxz
popf
or
mov
push
mov
adc
lock
pusha
insl
ja
in
repz
ss
test
pop
cltd
jb
fildll
ljmp
push
call
push
outsl
andb
fcmovnu
shll
call
push
sub
and
inc
popa
or
loopne
jge
mov
cwtl
iret
into
repz
mov
lcall
cwtl
stos
cmp
lret
pushf
xchg
sub
mov
pushf
fdivrl
sub
or
mov
xchg
cs
mov
lret
and
push
add
fs
jbe
mov
addr16
and
dec
dec
adc
mov
and
nop
in
adc
leave
ss
out
leave
mov
cld
jne
jge
push
pop
jae
push
adc
cld
mov
pop
cli
inc
roll
das
in
sbb
push
pop
mov
xchg
enter
enter
fidivrs
inc
push
add
sbb
outsb
mov
lds
inc
rcl
in
pusha
ficoms
lea
jecxz
adc
je
outsl
pop
and
cld
jb
mov
dec
pop
jp
imul
lods
mov
inc
push
in
or
inc
lret
and
into
lds
ret
faddl
repnz
sub
std
adc
cmc
jns
jb
mov
inc
push
cmp
push
add
dec
dec
mov
inc
or
push
int
add
mov
mov
aad
jmp
or
popa
xor
rcrb
bound
xor
inc
pop
xor
insl
mov
dec
test
dec
or
sub
sub
jmp
scas
std
pop
mov
fwait
push
repz
mov
aas
pushf
aam
or
bound
dec
or
or
cli
or
xchg
xor
sub
iret
mov
outsl
push
add
lea
adc
out
packuswb
dec
sarl
stos
loop
hlt
xchg
loopne
imul
add
test
jne
jl
mov
loop
ss
fmuls
sub
inc
stc
repz
cmpsb
xchg
add
sub
scas
faddp
sbb
mov
pop
sarl
mov
je
or
fadd
xchg
mov
int
jle
pushf
lock
adc
push
mov
fldenv
pop
lods
aad
pop
das
mov
cmc
cmp
decb
addr16
mov
xor
cmpsl
mov
and
jae
jecxz
push
jg
int3
cmp
mov
fmul
push
or
jb
and
aas
push
fdivrs
or
xchg
push
fdivl
or
jg
and
mov
jne
gs
mov
push
pop
jno
shrb
cmp
icebp
add
daa
ds
aam
fs
jecxz
push
mov
cltd
mov
in
test
arpl
fidivs
pop
pop
mov
fcmovnbe
and
gs
and
sarb
lret
ret
decb
imul
jbe
repnz
xchg
inc
stos
xrelease
sar
cmc
lret
popf
pop
icebp
sbb
ja
insb
repnz
adc
cmp
and
sahf
or
dec
pushf
jno
mov
or
sub
and
fnsave
or
jmp
jae
push
sahf
lods
cmp
cli
xorl
pop
insb
xchg
inc
mov
in
add
and
popa
stc
xchg
push
pop
jno
shll
jmp
inc
mov
and
daa
mov
xchg
pop
jg
mov
cmpsl
inc
sub
jb
out
jle
mov
stos
cmp
pop
int3
lret
pop
adc
ja
push
mov
aam
dec
and
sub
and
push
push
arpl
push
jg
sub
jmp
jmp
ss
sahf
clc
or
or
cmp
jae
add
outsb
add
out
mov
scas
pop
imul
cmc
outsb
jo
rcrl
shr
push
mov
mov
je
mov
aas
add
dec
mov
leave
and
sbb
lret
pop
mov
out
sti
push
cmpsb
pop
cmp
imul
imul
or
adc
adc
push
aam
je
or
testb
push
testb
push
dec
push
xor
jb
push
xlat
jnp
mov
data16
cltd
mov
xlat
adc
adc
ds
xor
test
or
jbe
cli
mov
ret
cmp
mov
call
mov
push
repnz
push
ret
push
pop
call
add
clc
mov
jmp
std
aad
jge
mov
mov
cwtl
mov
mov
aam
mov
fwait
jnp
adc
daa
imul
imul
xchg
in
int3
jnp
lods
xor
jnp
add
dec
inc
shlb
fldenv
lcall
mov
mov
bound
xchg
ret
subl
sub
fsubp
inc
sub
sub
jp
mov
add
es
pop
jle
add
pop
rcrl
pusha
enter
test
mov
popf
in
or
popa
insl
jnp
mov
imul
xor
push
xor
cmp
sub
hlt
aad
mov
enter
sub
xor
adc
pop
jb
xor
dec
js
popf
mov
int3
in
stos
fs
push
rorl
fldl
rcll
sahf
or
out
mov
xor
test
iret
xor
stc
add
lods
das
sub
lods
add
and
jo
testl
js
jge
call
cmc
div
xchg
les
movsb
test
stc
in
aaa
jmp
inc
dec
pop
add
cmp
or
cmpsb
shrl
shll
int
and
aas
jne
das
mov
cmp
popf
inc
pop
jnp
test
daa
clc
add
dec
ds
into
imul
add
inc
jmp
mov
daa
setns
test
adc
cltd
add
inc
lods
mov
push
loop
mov
nop
daa
pop
scas
cmpsl
dec
jae
ja
aad
fists
sbb
lahf
mov
dec
imul
shrl
adc
scas
std
ja
xchg
mov
out
std
cltd
pusha
jns
inc
and
in
testl
adc
mov
cltd
cmp
jmp
hlt
cmp
sarb
cwtl
fcmovnbe
lret
clc
fs
loopne
inc
adc
out
andl
fists
pop
pop
pop
outsb
mov
jp
les
scas
mov
fldcw
es
jno
mov
adc
fwait
shr
inc
leave
imul
xor
mov
js
and
jecxz
repnz
fadds
lock
outsl
fs
pop
push
test
stos
adc
addb
adc
dec
movsl
test
cmp
fnstsw
cltd
jno,pt
adc
jno
dec
sub
in
fs
call
push
data16
jnp
push
xor
jb
rcl
cli
aaa
stc
nop
imul
and
mov
lahf
daa
cmp
xor
cmp
scas
push
bound
dec
adc
addr16
mov
lahf
and
and
sarb
int
mov
inc
pop
adc
pusha
push
movsb
dec
pop
or
dec
sbb
pop
in
out
decl
stos
inc
lret
in
imul
lds
imul
test
pop
mov
popa
or
pop
jns
cmp
adc
sahf
insl
rcrb
adc
test
iret
ss
leave
and
mov
pop
inc
pop
xchg
stos
jae
mov
shlb
and
popa
and
inc
ficoml
pop
fidivs
lret
ret
test
ss
shl
das
inc
or
pop
mov
mov
mov
shrl
outsb
test
testl
mov
pusha
xor
xchg
push
aas
jbe
inc
cmp
lret
faddp
and
ud1
mov
in
fwait
or
call
mov
orl
mov
xchg
pop
out
xor
insb
inc
popf
push
adc
dec
xchg
hlt
cmp
dec
mov
pop
push
call
lods
and
ds
and
insl
stos
cmp
movd
imul
mov
ret
mov
imul
dec
idivl
xchg
mov
mov
pop
cmpsb
les
cmp
ret
mov
lock
inc
pusha
mov
leave
push
jle
sti
mov
pop
xchg
jnp
add
jbe
sbb
or
ds
icebp
push
fst
dec
fimuls
mov
pushf
mov
xchg
sub
or
add
push
sub
test
clc
push
ret
fstpt
mov
shrl
jle
aad
mov
adc
adc
cltd
dec
loopne
insb
push
aaa
add
sahf
sub
shld
push
or
mov
pop
in
sbbl
fs
icebp
pop
in
mov
xchg
or
dec
mov
mov
filds
test
mov
dec
inc
mov
sub
push
cli
inc
pop
and
and
scas
fcmovbe
outsb
or
jecxz
mov
mov
jp
mov
je
add
push
in
inc
mov
gs
push
out
xchg
ljmp
jmp
sbb
and
sahf
enter
cmp
and
loop
cmp
pop
or
cs
mov
sbb
pop
push
sub
in
pop
cs
and
dec
add
add
stos
cltd
and
push
jns
inc
stos
jb
dec
mov
outsb
cmp
xor
fimull
repnz
add
jg
scas
dec
dec
andl
xchg
sbb
inc
sbb
add
jg
pop
cld
mov
cmp
std
xlat
mov
vmread
lret
mov
push
mov
inc
daa
sub
cmc
fisttpll
cmp
jnp
xor
imul
stos
das
push
xchg
dec
in
in
inc
push
mov
dec
mov
mov
xchg
stos
rcll
pop
adc
pop
ja
fnsave
les
popa
cmp
scas
or
mov
cmc
sub
cmp
clc
or
icebp
cmc
mov
imul
mov
cmpsl
pop
inc
push
push
inc
popf
fs
mov
xor
in
in
test
ljmp
fsub
xor
loop
cmpsl
loopne
insl
xor
jge
mov
jo
lea
repz
test
ja
cwtl
mov
push
pushf
xor
mov
je
xor
out
aaa
xchg
pop
add
rep
movsl
sbb
sbb
jl
jle
add
mov
jle
arpl
push
std
and
int3
out
test
movsb
stos
in
mov
stos
mov
rcrl
fldl
xchg
push
dec
stos
jg
popf
mov
sub
lahf
fdivrs
inc
cmpsl
loope
mov
pop
xchg
mov
sbb
dec
pop
xor
in
ljmp
or
pop
inc
adc
xchg
cmc
sbb
dec
movsb
mov
les
and
jb
pop
push
lahf
adc
pop
pushf
add
sar
xor
loope
outsl
shrl
loop
xor
mov
xchg
cld
pushf
stos
rolb
lret
rcrl
mov
push
xchg
inc
adc
test
ja
adcb
gs
movb
int3
mov
outsb
jno
or
pop
inc
cmpsl
sub
jnp
mov
push
scas
mov
inc
push
pop
cmp
ret
adc
rcl
xchg
bound
aaa
rcrb
push
call
sub
mov
xchg
sbb
in
cmc
pop
xlat
mov
insl
ss
xlat
data16
daa
jmp
ficompl
push
mov
cmp
fmul
mov
pop
stos
pop
punpcklwd
xor
ja
and
mov
fbstp
fistl
push
sub
icebp
adc
outsl
xor
out
fnstsw
sub
repz
dec
ds
jl
fdivrs
addr16
or
sub
testl
xchg
add
mov
int
adcl
pop
mull
jge
or
push
push
mov
stos
jmp
push
je
mov
adcb
fdiv
xchg
pusha
sbb
bound
xor
or
daa
bnd
or
aad
jp
arpl
sbb
inc
xchg
push
sub
adcb
jae
data16
jb
mov
adc
push
adc
dec
mov
xchg
jp
xchg
add
leave
add
push
pop
int
insb
sbb
sbb
in
sahf
xor
jmp
xor
add
les
mov
pop
cmpsl
out
rorl
pop
cmp
je
pusha
cltd
add
mov
push
push
mov
call
mov
out
outsl
daa
inc
adcb
inc
loope
mull
jnp
push
pop
mov
add
scas
pop
imul
fidivl
cmpsb
gs
into
inc
fdivrp
jo
sub
pop
cmp
adc
sub
jne
ja
inc
dec
inc
mov
lock
iret
sbb
jne
pop
cmpsl
mov
js
inc
or
jg
cld
sti
insb
mov
ret
pop
mov
mov
cmp
mov
stc
mov
leave
fisubrl
loop
in
xor
in
cld
add
cmc
push
xor
inc
icebp
ja
mov
sbb
ficomps
xchg
sub
adc
mov
out
gs
cmp
bound
inc
jmp
mov
mov
inc
testl
cld
or
dec
sbb
iret
sbb
push
fcom
in
add
xchg
mov
jmp
dec
cli
fisubrs
insl
mull
or
xchg
je
mov
mov
popa
mov
shl
push
rclb
addr16
aaa
or
lea
mov
pop
sti
into
je
push
sub
and
cmpsl
test
inc
div
mov
das
jno
or
mov
or
lea
xchg
xor
insl
scas
call
std
clc
sahf
and
das
mov
test
test
mov
insb
pop
std
pop
adc
shl
scas
add
mov
lcall
insb
jb
cmpsl
sub
cwtl
jb
sbbb
cmp
ljmp
inc
lretw
dec
jle
mov
cmpl
lahf
rcl
push
stos
les
push
jae
inc
pop
cli
pop
fdivl
push
lcall
push
jae
inc
inc
mov
push
notl
pop
cs
mov
mov
addr16
push
pushf
xor
lods
lea
dec
pop
push
mov
dec
push
add
arpl
xchg
fnstsw
cmp
aaa
or
and
insl
push
inc
sub
sti
icebp
insl
and
sbb
loope
dec
test
ss
mov
push
idivl
push
imulb
dec
mov
cmp
rclb
sub
out
gs
scas
sarl
push
push
popa
clc
mov
fdivrl
push
mov
out
imul
out
xor
arpl
pusha
pop
cmp
in
xchg
pop
cmc
les
cmc
push
xchg
jo
mov
mov
add
fmull
mov
mov
jnp
jmp
lcall
mov
and
sub
lret
shl
cld
out
aam
xchg
mov
fidivl
jp
les
mov
mov
adc
jne
stos
inc
ret
into
les
and
stos
mov
mov
js
mov
or
dec
push
mov
enter
aam
adc
inc
push
cltd
jmp
mov
sbb
lds
jge
mov
pop
mov
cmp
stos
push
and
xor
cmp
arpl
cmp
arpl
mov
adc
xchg
jbe
std
mov
xchg
stc
cltd
pop
ds
cmc
dec
push
push
mov
hlt
mov
nop
fs
dec
jae
sub
xlat
pop
xlat
cmp
out
popf
movsb
or
out
push
in
mov
push
inc
in
jle
sbb
sub
out
pop
jb
sbb
cmp
and
inc
xchg
jecxz
or
sub
sbb
lret
add
jmp
stos
sbb
or
jp
sub
mov
inc
fstpl
and
push
aas
loop
mov
sub
incl
sarb
sub
add
mov
fstl
push
outsl
cmp
mov
cmp
fmuls
cmc
cmp
xchg
pop
repnz
cmpsb
dec
push
pop
adc
xor
pop
mov
notl
cmp
in
sub
mov
mov
insl
mov
enter
dec
pop
or
cmpsl
jns
cwtl
cmpsl
repnz
jg
mov
pop
pop
lret
cmp
sub
iret
and
in
or
and
lret
mov
push
or
mov
xchg
add
inc
mov
cld
rcll
aam
scas
shlb
xor
push
icebp
ljmp
int
mov
sub
or
lea
aaa
gs
in
in
mov
sbb
jp
sti
jp
test
xor
addr16
outsb
nop
jae
mov
adc
pop
shr
aaa
shrb
xor
xor
popa
out
sahf
cs
mov
icebp
adc
add
orl
popl
rol
and
or
push
shrb
mov
sbb
test
jo
addr16
lcall
jmp
dec
out
sub
mov
sar
push
je
fstpl
call
aaa
xchg
insl
ja
jle
stos
pop
push
mov
adc
addl
xor
out
sbb
add
add
test
xlat
orl
inc
test
imul
sbb
inc
data16
ljmp
lods
clc
adc
add
test
es
xchg
add
jnp
in
or
or
mov
adc
jge
fisubrs
data16
xchg
ret
xchg
mulb
mov
dec
cmc
adc
orb
xchg
sbb
gs
xorl
jns
popa
and
mov
mov
push
cs
mov
popl
xchg
pop
add
stos
inc
sbbb
movsl
call
rol
rcrl
enter
repnz
mov
fidivrl
adc
jecxz
movsl
std
neg
ja
fs
das
jle
mov
jno
or
or
test
daa
out
les
pslld
loope
cmpsl
gs
adc
jbe
pushf
cmpsl
xor
push
shlb
dec
jae
xor
les
push
mov
inc
mov
sbb
adc
mov
inc
sti
aaa
push
test
xor
sbb
roll
push
fildll
xor
xchg
adc
inc
and
sbb
jns
pop
in
imul
sbb
outsb
mov
faddl
dec
loop
aad
outsl
psllq
dec
stos
inc
mov
push
inc
fdivl
mov
pop
outsl
aam
lods
ret
add
lods
jecxz
or
xchg
mov
or
mov
out
lods
inc
and
das
cmp
lds
fbstp
rcrb
mov
rorb
flds
jge
shrl
inc
push
mov
and
xchg
es
movsb
cmp
loop
fs
jl
imul
cmpl
out
mov
adc
inc
push
test
ja
xor
insl
shrb
ss
adc
fisubrs
xchg
jmp
shrl
pop
inc
mov
scas
inc
add
icebp
cmp
into
push
cmc
dec
or
and
mov
scas
sbb
and
xchg
fildll
lcall
push
jne
xcrypt-cfb
cmpsl
out
mov
addr16
cmp
mov
lahf
mov
cmp
lds
sarl
push
or
repnz
cmpsb
rol
mov
insb
scas
lods
ljmp
pushf
scas
sar
adc
stc
jne
mov
adc
inc
sbb
sti
dec
movsl
mov
inc
push
cli
outsb
fdivrs
push
cmp
sbb
inc
add
cmpsl
test
inc
mov
sbb
int3
cmpsb
inc
cmc
and
les
pop
mov
shll
out
cld
push
mov
in
cmp
movsl
inc
idivb
aad
test
stos
hlt
push
adc
enter
pop
mov
jnp
or
pop
fsubrs
sbb
notb
mov
popf
mov
inc
pushf
daa
divl
or
mov
ret
xor
cmc
enter
cs
mov
sbb
dec
fstpt
dec
add
inc
leave
adc
mov
sti
xchg
or
int3
cmp
inc
inc
pop
loope
movsl
push
xor
sbb
enter
dec
out
mov
jp
pusha
orb
dec
fistl
mov
insb
test
lahf
fs
fsubl
sub
stos
inc
mov
xlat
imul
push
jno
push
xor
push
or
pop
sti
je
sub
lret
mov
dec
push
js
cmp
ja
add
xor
add
xchg
jnp
dec
bound
add
andl
jmp
nop
xchg
dec
pop
xorl
nop
adc
lahf
ljmp
inc
add
cmpsb
adcl
mov
mov
out
mov
lret
in
inc
xchg
mov
ret
shrb
lods
repz
mov
xor
dec
mov
rclb
sub
xor
mov
cld
pushf
stos
sbb
lds
cmpl
adc
push
adc
arpl
jcxz
imul
repnz
das
pop
das
add
test
sub
inc
scas
sub
xchg
je
les
jbe
push
push
mov
aaa
push
xor
outsb
gs
dec
fcmovnu
sbbb
add
jg,pt
and
nop
pusha
call
cmp
aaa
mov
loopne
jmp
roll
les
push
or
test
mov
lcall
scas
mov
lahf
cltd
pusha
sbb
mov
xor
subl
dec
sbb
sbb
mov
jg
lea
clc
or
add
std
jno
rclb
rsm
or
xor
lret
jecxz
pop
xchg
sub
sub
ret
lahf
mov
dec
cmc
mov
push
out
push
cmpsb
adc
xlat
je
mov
mov
sbb
adc
push
outsb
jl
push
add
xchg
mov
je
je
push
cmp
cmpsb
in
add
push
mov
add
dec
shll
icebp
pmulhuw
cwtl
das
dec
inc
pop
mov
aaa
mov
jmp
pop
repnz
clc
push
sub
xchg
lret
mov
and
sub
ret
scas
xchg
or
xchg
sub
dec
xchg
test
xchg
and
shll
xchg
in
add
adc
dec
dec
fisttpl
and
cld
sarl
mov
xchg
enter
ficoml
pop
inc
sbb
nop
mov
pop
testl
ds
inc
sub
mov
add
int3
notl
xchg
mov
movsb
jle
pop
fidivrs
out
das
pop
in
push
jae
or
xor
jmp
mov
rcll
das
int3
sarl
pop
sub
jbe
inc
sbb
pop
dec
popa
lea
lret
or
push
ds
aas
or
iret
cmpsb
dec
sub
mov
add
int3
adc
cmp
mov
sbb
mov
or
inc
js
pushf
pop
filds
cmp
fdivrs
sub
push
jae
cmp
jle
movsl
jle
pushf
xor
mov
mov
es
adc
pop
pop
xor
ds
lcall
stos
jae
xchg
mov
or
lret
push
inc
jmp
ficompl
jno
scas
inc
scas
les
sub
out
and
jp
sub
push
mov
mov
mov
inc
xlat
sbb
repz
in
add
les
call
xor
pushf
pop
pop
repz
aas
mov
xchg
int
mov
sub
adc
push
repz
sub
push
out
lods
imul
jbe
adc
pop
sbb
pop
mov
add
es
test
les
adc
pop
add
popa
clc
stc
gs
stc
into
fwait
jg
inc
ret
adc
mov
or
test
leave
test
cmpsb
arpl
pop
outsl
rolb
and
pop
in
in
mov
insl
lea
enter
mov
inc
or
into
lret
jno
sar
inc
ret
rol
push
jb
roll
fld1
ret
cmc
btc
out
jmp
mov
mov
jg
subb
mov
fbld
sub
mov
fisttpl
sub
mov
mov
jns
xchg
sub
and
push
pop
push
xchg
mov
idivb
fstpt
adc
adc
xchg
imul
sub
mov
dec
or
xchg
and
inc
sbb
rcrb
xchg
mov
jle
cld
xchg
xchg
pop
push
jge
mov
xor
push
pop
clc
mov
loopne
andb
sbb
push
pop
insl
mov
sbb
xchg
adc
xchg
cld
push
mov
jo
and
in
popf
add
dec
xor
xor
jns
stos
mov
dec
add
hlt
mov
imul
push
jo
cld
addr16
xor
pop
loopne
mov
imul
mov
les
leave
das
scas
pop
mov
push
or
jg
cli
js
jne
mov
xor
and
add
xor
popf
je
das
mov
sub
push
xchg
imul
daa
mov
sub
das
js
cltd
dec
pop
int3
dec
xor
or
pusha
xchg
sub
jge
sub
jecxz
loop
pop
je
out
clc
push
xchg
sahf
xor
push
inc
fldt
push
mov
or
jbe
call
or
cmp
jne
pop
sub
popa
mov
pushf
jl
cwtl
fnsave
mov
mov
in
adc
push
jp
fidivs
pusha
mov
movl
shll
test
test
jecxz
cli
push
push
hlt
aaa
or
subb
clc
lret
pop
divl
pop
repz
mov
adc
jp
and
out
or
mov
dec
adc
aam
outsb
pushf
push
hlt
jae
outsb
push
xchg
pop
mov
and
or
xchg
pop
cmp
mov
hlt
andl
sub
and
push
push
push
cmp
jne
mov
cltd
inc
cmp
insb
and
or
mov
and
mov
les
outsb
lea
imull
cmpsb
popa
push
popf
stc
fsubrs
aad
pop
je
sbb
out
inc
jmp
or
sbb
or
push
divb
xchg
insb
mov
fbld
pop
dec
push
imulb
cld
xchg
es
sub
inc
sbb
gs
add
test
shrb
or
adc
adc
or
sub
sub
mov
imul
incl
cltd
xor
push
sbb
push
fs
cmpsb
inc
gs
sub
pusha
sub
mov
pop
leave
imul
cltd
adc
repz
test
hlt
arpl
adc
xor
outsl
mov
test
popf
lea
hlt
aaa
nop
lea
cld
lea
cmpsb
test
icebp
fstpt
sub
mov
mov
and
mov
add
cmc
mov
pusha
sbb
loop
clc
out
add
push
xchg
shlb
cmpsl
mov
add
cmp
sbb
cli
ret
shll
sarb
add
inc
iret
jbe
adcb
sbbb
xor
mov
sti
aam
xlat
jecxz
aad
lods
mov
in
jmp
adc
or
lret
out
pop
mov
jne
ds
divb
cltd
pop
mov
mov
adc
xor
sahf
push
jmp
inc
icebp
jo
and
pop
adc
popl
adc
or
xor
pop
jne
jns
xor
adc
lcall
lods
xor
lret
adc
inc
jbe
fisubrs
cmp
mov
push
jns
add
cmp
cmc
mov
sti
popa
in
in
std
push
xorl
inc
add
test
jne
adc
cmp
mov
into
ds
fisubl
jecxz
cltd
faddp
aas
subl
cltd
cmp
ljmp
stos
pop
lock
stc
dec
sti
cld
cmp
sub
das
pop
adc
inc
push
jecxz
jne
std
mov
jmp
test
adc
push
inc
xor
jnp
test
lds
mov
popf
movsb
cmpsb
cmp
add
les
and
mov
jmp
in
fcomp
sub
test
mov
fsts
fbld
hlt
push
out
and
push
mov
cmp
mov
mov
mov
lods
fstpt
sbb
xchg
out
pop
mov
mov
xor
ljmp
pop
jmp
das
addr16
or
dec
bound
xor
shl
mov
sbb
dec
stc
mov
or
cmpsb
subb
mov
jmp
test
mov
jb
lods
dec
imul
test
daa
lock
adc
cmpsb
scas
push
cmp
ds
or
popf
shlb
cmp
cmpsl
in
popf
mov
outsb
push
stos
sbb
jg
int3
and
sbb
mov
cmpsb
mov
test
jecxz
movl
daa
int
fidivs
mov
and
dec
adc
icebp
push
jne
xchg
xchg
xchg
cmp
sbb
push
popl
jl
stos
es
rcrl
push
mov
stc
xchg
sub
addb
sbb
push
lcall
in
ds
pusha
jge
insl
jg
dec
jb
jge
xor
inc
xchg
jmp
int
xor
pop
jns
push
and
mov
into
add
mov
sub
pop
aad
outsl
les
pop
pop
fisttpl
imul
pop
xchg
add
aad
imul
lods
xor
js
mov
imul
sbb
fiaddl
sbb
vsqrtps
gs
outsb
test
cmp
popl
or
loop
ds
pop
push
xor
int
dec
xor
test
adc
or
inc
adc
sbb
ds
jnp
shrl
lcall
mov
loopne
aad
call
push
cmpsl
mov
jecxz
repnz
inc
dec
adc
leave
inc
sbb
sbb
mov
cmp
cmp
adc
sub
subb
mov
mov
adc
inc
xor
lahf
pop
adc
jecxz
pop
enter
pop
mov
mov
xchg
rcrb
rcll
lcall
jge
decb
sbb
test
mov
fistpl
adc
add
xchg
gs
imul
stc
adc
repnz
inc
test
adc
ds
jge
mov
je
inc
fstl
fdivs
push
or
arpl
mov
lcall
in
xchg
cmp
sub
push
bound
lods
xor
ljmp
call
test
es
mov
mov
xlat
loope
pushf
and
les
mov
les
pusha
pop
inc
jno
daa
mov
loopne
rclb
lahf
push
xor
xchg
shr
inc
fsubr
mov
inc
jmp
aaa
dec
mov
scas
sbb
push
lods
mov
cmpsb
cmp
jle
les
mov
add
xchg
ja
sbb
jno
lret
mov
mov
nop
cmpsb
push
mov
mov
dec
insl
fwait
jae
mov
out
iret
sub
adc
xlat
push
pop
jae
pushf
test
xchg
in
xor
int3
push
add
imul
stc
push
sbb
sbb
test
insb
xorb
shl
push
ja
stos
and
inc
pushf
jmp
pop
dec
mov
sub
sti
cmpsb
shrb
mov
leave
lea
inc
adc
stos
gs
insl
push
fdivl
rclb
mov
push
jb
push
inc
adc
xchg
cmp
inc
sbb
inc
sbbb
and
enter
dec
jmp
sbbb
xor
mov
add
mov
and
test
adc
imul
lock
pop
data16
icebp
push
cmp
or
mov
dec
mov
int3
jge
nop
xor
sbb
mov
aaa
dec
call
mov
pop
jecxz
mov
jmp
pop
and
or
jb
jo
fucomip
mov
mov
dec
std
xor
pop
stos
sub
je
cltd
test
pop
jno
loopne
sub
shl
pop
sub
fsubrs
xchg
test
sbb
mov
dec
fildl
ljmp
jl
sbb
sbb
sub
repnz
mov
hlt
lcall
int
jp
ja
push
jbe
cwtl
out
test
and
pop
imul
inc
or
pop
fdivp
mov
enter
popf
jg
lcall
jge
push
enter
aaa
pop
sahf
push
xchg
repnz
and
mov
add
mov
sti
data16
in
pop
xchg
inc
fsubrl
test
add
push
jo
mov
scas
ret
push
lcall
mov
jecxz
or
cmp
jl
mov
rcll
dec
cmp
push
data16
mov
data16
shrb
pop
insb
sbb
inc
mov
xchg
mov
js
dec
pusha
hlt
rcll
push
bound
pop
mov
xchg
add
xchg
inc
cmpsb
lock
lahf
xor
inc
shlb
xor
adc
push
adc
mov
and
push
pop
sbb
lods
cli
sub
insl
dec
into
mov
nop
xchg
mov
ret
insl
int
add
dec
rol
in
int
add
jmp
paddsw
test
sahf
bound
std
mov
jmp
stos
mov
data16
mov
insl
sub
inc
std
cmp
sub
jo
out
mov
inc
jg
in
shll
nop
sbb
dec
inc
clc
mov
ljmp
fld
cwtl
mov
push
sub
push
lock
cli
movsl
pop
sbbl
adc
sahf
cmp
xor
mov
popa
shrl
dec
in
jnp
jg
sub
push
incl
sbb
jns
mov
mov
test
frstor
and
pop
pop
fs
add
push
push
loope
or
in
sti
mov
outsb
push
push
sarb
aaa
lea
sub
std
jl
cmpsl
jecxz
mov
cli
xchg
shrl
sbb
lret
mov
adc
popa
or
or
inc
aaa
lock
ljmp
into
and
mov
out
xor
mov
cmp
or
stos
mov
push
inc
pop
pop
cmp
divb
lret
sub
sbb
js
lcall
adc
and
jb
cmp
cmp
and
mov
insb
inc
pop
loope
mov
mov
in
jbe
inc
and
clc
mov
aad
sbb
dec
dec
fbld
imul
sub
scas
inc
add
xchg
sub
mov
into
jle
fnstenv
pop
mov
or
mov
dec
and
add
lret
mov
xor
ja
xor
inc
mov
hlt
and
popf
adc
xor
daa
cwtl
fadds
adc
dec
pop
push
xchg
in
fwait
cwtl
adc
test
sub
inc
jmp
cli
enter
xchg
aam
mov
sbb
adc
push
test
hlt
aas
shl
test
outsl
adc
ret
sub
adc
or
mov
es
shlb
fs
inc
cwtl
inc
fbstp
or
push
mov
lock
mov
add
lods
xor
or
add
mov
or
fidivl
notl
push
daa
mov
xchg
in
daa
lahf
je
pop
inc
lea
and
push
inc
mov
mov
pushf
rcrb
cmp
sbbl
es
cmpsb
jecxz
test
xor
lods
push
dec
repnz
stc
popa
jp
pop
xchg
hlt
mov
adc
out
sub
mov
inc
arpl
out
shll
inc
cmp
lahf
gs
push
popf
ret
in
aaa
dec
push
stos
repz
je
dec
push
and
movsl
loope
adcl
push
in
clc
xor
mov
xlat
out
cmpsb
inc
pop
jecxz
shl
xor
and
jns
scas
stos
push
xor
mov
lds
test
pop
add
ja
jg
mov
mov
pop
ja
lcall
sub
and
dec
and
push
into
popa
cmp
mov
fidivs
push
aaa
adc
push
mov
add
je
xor
testl
mov
rorb
hlt
repz
sti
mov
rolb
add
inc
and
stos
lds
fdivl
xchg
jl
loope
and
fnstcw
adc
cli
imul
sub
and
push
sub
dec
sbb
in
mov
stc
pusha
fldenv
inc
popa
sti
test
lret
loope
or
sub
push
cmc
mov
add
mov
push
xlat
sbb
pop
jp
inc
mov
cmp
hlt
call
jno
pop
mov
iret
push
or
fdivrl
addr16
dec
inc
rcr
cmp
sub
mov
add
cli
xchg
mov
jo
jp
test
imul
loopne
cwtl
jne
ret
xchg
dec
loope
clc
test
addl
lds
adc
fiadds
insb
packsswb
gs
sub
or
arpl
push
dec
loope
add
pop
cmp
mov
fisubs
push
mov
xchg
jno
mov
cmc
mov
icebp
xchg
push
lds
je
cli
lods
iret
int3
fdivrl
rcrb
or
insb
fmulp
imulb
stos
pushf
outsb
push
lods
push
mov
cmp
movsb
cmp
shr
xchg
je
in
rcrl
add
pushf
mov
dec
adc
stc
and
xchg
mov
adc
clc
mov
imul
test
ljmp
jno
add
je
or
mov
mov
pushf
pusha
inc
adc
sti
push
stc
mov
adc
and
mov
push
mov
adc
pop
fucomp
pop
push
adc
mov
or
mov
pop
xchg
dec
cmpl
cwtl
decb
and
jae
rorl
repnz
inc
pushf
sbbl
push
popf
mov
aas
in
jns
lret
das
out
inc
push
and
cwtl
loope
xchg
pop
add
popa
push
jb
mov
mov
xor
es
add
inc
mov
test
lret
sbb
dec
dec
or
js
mov
fisttpl
mov
add
scas
jge
fisubrs
add
repz
cmc
sti
adc
movsl
jns
pop
scas
sbbl
dec
jecxz
cli
nop
and
mov
mov
mov
in
call
mov
adc
cmpsb
sbb
subl
stos
xor
xor
sbb
pop
dec
fldl
leave
adc
sub
aaa
mov
xor
xor
stos
stc
mov
add
inc
push
js
dec
and
stos
inc
repz
inc
mov
push
aaa
idivl
cli
cmp
popa
add
or
cmc
mov
cs
push
outsb
jno
out
lea
sti
aas
ficompl
cwtl
fbld
xor
stos
icebp
jmp
gs
in
push
int
out
add
fisubl
jmp
mov
jp
xchg
xchg
push
ljmp
jno
movsl
inc
jecxz
jns
ret
mov
add
mov
sbb
fwait
push
jl
les
mov
add
push
push
movsl
add
xor
das
push
lcall
jbe
jns
sahf
sub
push
xchg
sub
xchg
xor
mov
inc
dec
out
repz
push
dec
enter
or
dec
xchg
es
xor
jle
shll
pop
das
cmpsb
sub
push
or
data16
mov
in
push
mov
imull
add
pushf
stc
pop
bound
cmp
stc
inc
xor
ljmp
mov
cltd
mov
and
sub
xchg
hlt
dec
outsb
add
adc
mov
pop
ror
addb
mov
sti
inc
gs
mov
sahf
mov
aaa
mov
dec
in
subb
js
lods
mov
and
mov
mov
sub
rcrl
xchg
in
mov
test
push
ss
xchg
cmp
in
dec
push
cmpsl
cmc
jo
enter
ror
pushf
or
std
adc
cmpsl
pop
out
mov
adc
add
je
cltd
in
pop
push
scas
and
shlb
xchg
cld
add
lods
sbb
popl
and
xchg
sahf
imul
mov
push
in
sbb
shl
cmp
into
jbe
sub
adc
adc
push
add
pop
test
mov
dec
mov
mov
push
out
sub
and
push
addr16
mov
bound
mov
fsubr
cmpl
mov
ss
insl
mov
rcrl
or
and
mov
leave
pusha
sahf
adc
loop
mov
mov
pop
or
xchg
arpl
xchg
outsb
mov
push
adcb
cmpl
cmp
jmp
rcl
mov
in
mov
jo
ja
loopne
lahf
dec
decb
imul
xchg
push
jl
or
cmp
in
lods
fiadds
test
mov
cs
add
leave
inc
sub
and
xor
or
gs
pop
movsl
cmp
stc
mov
dec
cmp
fstpt
pop
shr
test
cpuid
jmp
pop
lock
xchg
lock
cmc
ret
push
push
pusha
int
iret
data16
mov
in
mov
pusha
jb
sahf
je
xor
mov
or
inc
mov
imul
mull
lods
sbb
xchg
gs
cwtl
sbb
xor
inc
push
mov
push
jmp
shr
call
or
lret
or
notl
sbb
movsb
ret
sahf
mov
lods
and
test
shl
aaa
push
sarb
call
xor
dec
dec
or
es
jae
mov
jo
inc
push
dec
cmp
mov
xorb
cmpsl
pop
push
jae
test
or
jmp
arpl
or
in
in
lds
mov
orb
addb
cmpb
aam
outsl
inc
push
and
and
call
iret
xor
int
xorl
adc
jae
xor
pushf
xchg
outsl
loope
mov
inc
mov
push
dec
or
add
movsl
mov
pop
out
lret
sbb
lds
sbb
roll
mov
lods
ljmp
pushf
push
iret
jno
sub
arpl
je
adc
fld
mov
shr
jge
jmp
repz
inc
lods
mov
movsb
movsl
push
loopne
dec
adcb
repnz
les
jge
dec
pop
test
negl
inc
icebp
jno
ret
jecxz
mov
stos
testb
hlt
mov
jg
nop
lds
cwtl
cmc
mov
cltd
cmpsl
push
and
push
fxch
sub
fidivs
push
cmp
sub
add
arpl
add
push
and
cmpsb
push
jo
imul
push
pop
movsl
jb
lods
mov
cld
fbstp
mov
shrl
pop
mov
push
ss
xchg
out
loope
push
call
mov
mov
jb
mov
out
dec
stos
fadd
leave
les
insl
out
test
adc
stos
lds
cld
scas
sub
push
push
pop
sub
aad
lds
sarl
jns
mov
rcl
rorb
imul
and
xchg
jmp
ds
notl
push
data16
lock
add
xor
int
cmp
add
aas
sbb
mov
add
sub
sbb
push
mov
gs
or
inc
bound
jae
adc
pop
inc
adc
push
cltd
loope
clc
stos
cmpsb
lock
xchg
sbb
cli
xor
cmpsb
scas
insl
add
hlt
dec
sub
insb
and
xchg
ss
mov
jl
int
in
fbld
mov
pushf
mov
fxch
vpackuswb
cmp
loopne
ds
add
mov
repnz
out
xchg
push
add
aas
mov
out
sbb
pop
push
push
sub
inc
jns
and
test
imul
iret
mov
in
inc
push
sarl
bound
stc
int3
pop
or
stc
and
mov
out
cmp
cmpsl
sbb
cltd
mov
push
cs
mov
or
adc
sbb
ret
cwtl
les
lds
mov
dec
es
xlat
sub
pushf
scas
mov
xchg
ljmp
push
fimull
sub
push
adc
out
mov
adc
pop
je
push
push
mov
mov
fistps
xor
push
mov
shll
shrb
inc
mov
cmp
int
sub
js
and
sbb
test
fisubs
adc
push
cld
dec
or
cmp
pusha
and
xchg
sbb
pusha
dec
xorl
cmp
aam
lods
fistpl
fisttpl
push
adc
xlat
insl
adc
inc
stos
add
sub
out
fs
and
mov
cmp
mov
add
out
or
push
lods
add
mov
in
sub
pop
add
jl
inc
rclb
out
lret
jnp
cmp
ds
stos
or
flds
test
fcompl
stos
lds
cmpsl
dec
lock
ds
dec
pop
sbb
cmp
push
add
gs
mov
scas
out
mov
cmpsb
popf
cmp
inc
jecxz
rcrl
sub
das
cmp
lods
push
sub
add
mov
inc
sbb
popa
repz
je
subl
xchg
and
mov
mov
and
push
ficoml
inc
pop
add
xor
imul
shlb
mov
lds
pusha
push
call
and
mov
cli
mov
out
std
lods
outsb
xchg
mov
int
inc
xor
dec
in
mov
add
push
mov
pop
das
inc
xlat
sub
mov
fidivrs
fimull
shlb
popa
sbb
std
dec
pop
push
cmpl
jle
orb
orb
das
sbb
outsl
ret
jnp
repnz
xchg
pop
hlt
mov
enter
jnp
fmul
pop
outsl
das
shl
pop
mov
lods
jns
test
addr16
in
adc
out
test
adc
dec
add
jno
std
cltd
gs
xchg
bound
ss
pop
je
cmpsb
scas
in
sbb
repnz
cmp
mov
sbb
testb
inc
pop
sbbb
jno
out
and
sub
mov
out
xchg
jle
outsl
sub
lahf
sbb
out
imul
push
fs
filds
jnp
adc
mov
mov
xchg
pop
outsb
pop
shrb
movsl
inc
adcl
loop
mov
je
jg
sbb
in
ret
dec
data16
in
adc
mov
fwait
jmp
dec
xlat
cmc
jns
test
pop
mov
sbb
es
and
sbb
push
xchg
decl
add
mov
adc
add
pop
and
dec
lret
orl
out
push
in
pop
mov
gs
cmp
mov
sub
pop
fisttps
push
movsl
inc
out
repnz
andl
sub
mov
out
or
cmp
sbb
and
dec
sbb
lods
mov
enter
mov
xchg
dec
and
push
movsl
inc
adc
insl
movsl
or
shrl
in
into
mov
pop
xor
lods
pop
orb
jp
pop
mov
sub
xlat
in
adcl
jg
test
push
cwtl
stos
mov
mov
mov
pop
cmc
lods
and
cmc
sub
push
das
mov
xor
aam
pop
push
divl
sub
cli
lods
aam
cli
or
xchg
sub
insl
movsl
addb
or
pop
jp
lahf
out
lret
mov
fimull
popf
cli
lods
add
adc
notl
into
fcoml
cmp
cs
out
cmpsl
and
xor
sbb
jns
sbb
mov
jb
add
jle
fs
mov
icebp
mov
mov
sub
test
out
lods
pop
enter
pop
ljmp
sub
repz
call
iret
es
cmp
jmp
mov
aaa
jg
imul
cmp
xchg
and
jecxz
xchg
insl
cmc
inc
xchg
jnp
out
and
pop
add
sub
stos
fisubrl
sbb
sbb
test
sbb
push
cld
mov
test
mov
fistpl
sub
cld
xor
sbb
nop
jno
jl
test
push
push
mov
or
jle
movsb
xchg
sub
divl
imul
loop
pop
aam
cmp
add
sub
adc
adc
pop
mov
mov
notl
mov
xlat
xor
mov
out
fisubrs
outsl
push
and
xchg
sub
mov
mov
sbb
jns
pushf
xor
adc
ret
into
insb
jecxz
push
dec
int3
mov
jmp
pop
and
sub
sub
cmp
aas
jbe
sbb
sbb
mov
push
dec
fiaddl
dec
insb
mov
inc
and
jp
out
inc
and
sbb
lods
jge
pop
movsb
mov
adc
inc
add
pusha
sub
push
inc
mov
add
adcb
push
mov
movsb
mov
mov
xchg
inc
mov
push
mov
shrl
pop
jb
bound
lods
mov
scas
sub
push
add
dec
fldenv
pusha
notl
ret
mov
and
xor
and
int
sahf
ljmp
sub
pop
mov
lea
xchg
xchg
push
push
negb
fwait
sahf
add
into
jecxz,pt
jbe
push
out
out
cmp
adc
pushf
cli
push
adc
jne
or
cmpsl
ljmp
dec
inc
shll
push
imul
pop
dec
mov
pop
xor
dec
negl
xlat
outsb
dec
mov
mov
pop
repz
ds
pop
pop
mov
ret
in
jno
xlat
jb
pop
cld
loope
cmp
pushf
test
push
xchg
andb
shr
add
out
cmp
daa
xchg
mov
inc
and
in
jb
hlt
jecxz
pop
loopne
mov
mov
test
jmp
out
mov
loop
jecxz
and
dec
add
pushl
incb
clc
xor
ja
fcom
insb
or
ret
or
xor
dec
ja
mov
sbbl
push
push
cmp
bswap
xor
fmull
loopne
push
sub
cltd
jo
cwtl
scas
sub
cltd
mov
cmpb
mov
mov
lcall
mov
mov
repnz
lahf
lahf
dec
mov
jb
fbstp
insb
xchg
into
loope
ret
out
jge
loopne
dec
cmp
sahf
lods
adc
pop
cmp
mov
push
movsb
inc
in
cmc
jb
mov
aad
hlt
jne
sbb
push
movsb
jno
xchg
sub
adc
clc
jo
sbbl
cwtl
xor
les
in
pop
adc
inc
jns
or
push
mov
mov
nop
xor
pop
push
js
mov
das
pop
jl
call
jo
and
mov
andl
push
call
call
pusha
lret
outsl
push
clc
mov
cmp
test
scas
cmp
mov
xchg
sbb
lret
adc
cld
in
lahf
xor
pop
pop
dec
idivl
aad
cmpsb
std
rcl
in
xor
out
cmc
cmp
movsb
inc
addb
arpl
mov
mov
testb
jb
mov
imul
jns
mov
mov
fimull
hlt
xor
mov
sub
pop
fldl
and
pusha
pop
mov
sub
stc
popf
int
fs
out
jmp
cmp
les
aaa
pop
or
dec
xlat
movsl
in
into
pop
push
pop
cmc
dec
arpl
add
mov
out
push
negb
sbb
push
pop
aaa
leave
pop
mov
leave
shlb
xchg
sub
data16
ror
ss
jmp
xor
cmp
mov
and
cmp
add
stos
das
hlt
testl
int
cwtl
repnz
mov
fdivrp
jo
sub
mov
push
gs
aaa
push
negl
fldenv
dec
inc
push
leave
fldcw
testb
cld
in
out
inc
push
outsb
mov
les
dec
lcall
cmp
inc
mov
cmp
adc
aas
insl
jo
jmp
mov
scas
loop
idivb
adc
loop
clc
push
repnz
outsb
inc
fcomp
jmp
push
sub
sbb
aas
in
ss
adc
cmp
jle
pop
sub
xor
hlt
pop
cmp
les
jns
shl
sub
sub
nop
out
pushw
xchg
xor
ror
clts
test
ret
pop
movsb
push
adc
xor
movsb
pop
mov
idivl
jmp
xlat
outsb
push
lahf
and
sub
clc
bound
adc
mov
in
sbb
fsub
testb
pop
add
pop
in
addr16
push
call
push
pop
pop
repnz
cltd
and
out
xor
cmp
cltd
hlt
or
mov
mov
sahf
testb
mov
jg
aad
test
push
in
popf
out
iret
or
jl
shrl
sbb
pop
mov
inc
aaa
push
mov
inc
push
arpl
sbb
add
int3
push
inc
add
xor
addr16
lahf
adc
aaa
push
mov
xchg
outsl
jle
in
lods
sub
xor
in
stos
inc
in
es
loope
xor
pushf
hlt
insl
iret
or
ja
mov
adc
imul
jno
lds
cmp
pop
sub
jno
add
gs
rorb
push
cmp
or
aad
adc
pop
add
xchg
mov
mov
inc
cmp
lahf
add
pushf
mov
loop
testb
mov
dec
lahf
cmpsb
jnp
and
lret
adc
jle
imul
shll
push
insl
mov
ret
pop
mov
mov
push
ljmp
jno
leave
movsl
xchg
and
inc
dec
test
mov
lcall
sub
sub
fdivrs
sub
aad
or
into
idivb
in
sahf
lods
add
push
xchg
and
adc
or
inc
and
call
lahf
push
cltd
xchg
jne
jbe
cli
jmp
andl
not
lret
mov
jns
adc
push
pop
mov
int3
and
pop
xor
int
ret
xor
fistps
insb
ret
repz
sarb
les
rolb
cltd
testb
jl
sub
icebp
movsl
push
dec
sub
pop
adc
xchg
xor
pushf
pushf
add
pop
xchg
cld
sahf
jo
adc
pop
ret
sbb
inc
subl
mov
dec
add
xor
lds
xlat
jb
mov
jecxz
stos
inc
popa
clc
push
cmc
push
inc
xchg
out
xchg
hlt
fs
mov
fldt
pop
ss
aam
xchg
mov
xor
sar
inc
stos
dec
xor
xchg
dec
mov
loope
cwtl
fiaddl
in
adc
shld
xor
sub
cmpsb
repnz
out
mov
roll
mov
insl
push
sbb
pop
cmc
push
or
popl
lods
adc
pop
sub
in
push
enter
sub
mov
sbb
arpl
sarl
mov
dec
andl
xor
adc
mov
jb
fucomp
adc
pop
or
cmp
das
out
push
fsubrs
xor
mov
sbb
xchg
xchg
xlat
add
cmp
js
sbb
std
inc
roll
insb
adc
test
dec
dec
fistpll
mov
sbb
xor
movsl
mov
out
inc
scas
add
sub
sbbl
hlt
mov
ret
mov
cmc
xor
adc
icebp
shlb
push
pop
ljmp
insb
cmp
inc
cmp
insl
jle
popa
sti
xchg
sbb
repz
mov
js
inc
or
sti
das
sub
popf
add
cmpsb
add
mov
pop
incb
xor
add
ret
mov
push
lahf
popf
pop
lret
mov
nop
mov
mov
adc
dec
fwait
mov
lcall
out
jno
mov
jmp
cmp
mov
push
fnstenv
mov
and
add
inc
leave
jne
je
in
aaa
lret
mov
gs
sahf
add
test
cmp
sbb
les
jmp
in
ss
adc
mov
or
jp
xchg
loope
adc
adc
lods
movsl
stos
aam
lahf
adc
pop
movsb
cmp
stos
ret
rcl
jnp
movsl
std
mov
je
or
pop
or
mov
mov
jle
xor
mov
int3
push
shr
mov
fldcw
mov
and
cmp
sbb
dec
adc
pop
push
out
mov
gs
pop
sbb
push
xor
push
fimuls
and
mov
aaa
pop
pop
cmp
ljmp
inc
inc
testb
push
lods
add
mov
pop
xchg
enter
mov
cltd
bound
lret
push
mov
imul
mov
and
dec
cmc
and
dec
fistpll
clc
push
push
test
inc
cli
mov
sahf
and
xchg
mov
cmp
pushf
xor
clc
scas
push
push
xor
loop
jbe
mov
ror
ffree
add
jecxz
sub
push
ljmp
add
sbb
pop
insb
outsb
imul
pop
push
mov
push
leave
inc
jns
aas
imul
aaa
inc
xlat
pop
xorb
cmpsl
pusha
and
mov
adc
pop
repnz
jecxz
scas
adc
call
xchg
ret
ljmp
push
sub
xchg
mov
push
call
and
and
and
xorl
jecxz
call
inc
mov
xchg
or
and
and
inc
sub
push
sub
and
test
push
outsl
sub
or
mov
fiadds
fnstenv
enter
add
shrb
push
xchg
mov
mov
dec
mov
jnp
pusha
adc
js
or
fs
daa
cmp
dec
pop
loope
or
frstor
mov
jmp
push
loopne
out
jno
add
inc
dec
xor
cmpsl
xor
cli
test
dec
fisttpll
fdiv
add
daa
and
cmc
lcall
push
ljmp
jb
jl
mov
sub
bound
mov
mov
scas
adc
jae
test
jg
shrb
sub
dec
outsl
mov
aam
jle
xchg
adc
scas
sahf
ss
shl
add
out
sar
enter
fnstsw
lods
pop
andb
dec
imul
call
mov
push
test
dec
sti
xchg
shll
cmp
cmp
xlat
stos
xchg
fldt
jl
enter
sub
call
int
stc
pop
pop
sbb
fidivs
xchg
aaa
adc
sub
pop
subl
jo
pop
adc
add
sub
or
pop
mov
and
repnz
out
mov
adc
adc
pop
sub
add
mov
test
mov
int
test
insl
dec
cli
xor
sub
imul
cli
push
mov
pop
and
jo
test
jmp
addr16
dec
jge
ja
push
ss
pop
mov
pop
xchg
cli
xchg
pop
inc
std
xchg
scas
mov
sbb
out
ffreep
pop
test
xor
cmpsb
push
testl
mov
adc
out
inc
xlat
push
pop
sbbb
repz
test
lret
ljmp
push
movsb
push
daa
and
icebp
pop
dec
mov
ret
jp
inc
sbb
sahf
or
jns
push
mov
mov
loopne
aad
flds
lods
dec
cld
or
insb
push
pop
in
or
mov
add
subl
decb
mov
test
loope
ja
and
pop
aas
loop
test
sbb
in
test
aaa
insl
not
xchg
mov
adc
push
nop
lods
jecxz
sti
pop
xor
add
into
jg
sub
mov
jno
mov
mov
inc
sbb
aad
mov
sti
and
fisttpl
mov
sub
inc
pop
jae
xchg
push
lcall
testl
pusha
jecxz
test
xchg
movsl
mov
dec
fstpl
ss
ja
mov
add
xchg
push
fildll
cmpsb
rcll
sub
popa
movsl
xchg
insb
mov
mov
rorl
or
sub
jbe
stc
int3
fdivl
cmpsl
test
inc
sbb
xchg
push
out
pop
xchg
movl
sub
data16
cmpsl
mov
jle
sub
cld
jns
out
dec
pop
jno
push
mov
sbb
lock
xchg
add
test
pop
dec
arpl
xor
add
es
add
loope
dec
fucomp
cld
outsb
xor
or
fbstp
or
dec
xchg
sub
xlat
or
arpl
mov
cmp
jecxz
add
mov
lcall
pop
pop
sub
mov
sarl
pusha
push
and
xchg
jecxz
in
aaa
add
sub
lcall
fst
daa
inc
add
movsb
jns
cmp
mov
bound
cmp
sti
nop
rclb
in
xlat
out
pop
sbb
sub
adc
aas
loopne
movsb
xchg
std
xchg
inc
mov
dec
adc
push
mov
les
jecxz
push
outsb
inc
add
mov
and
jge
and
adc
jl
mov
pop
cmpsl
flds
cmpsb
mov
mov
jae
out
sti
xchg
push
testl
mov
dec
adc
sub
push
popf
mov
dec
xor
xor
mov
adc
inc
arpl
outsb
push
jnp
out
out
add
add
or
mov
push
jmp
scas
sub
push
gs
fnsave
lret
cmpsb
cmp
add
insb
cmp
mov
dec
das
inc
shrl
stos
jnp
sbb
xchg
sub
iret
jne
popa
push
adc
fisttps
adc
cmp
lcall
imul
xchg
mov
inc
mov
and
push
or
and
pop
or
cmc
or
jge
push
cmova
out
and
pop
and
cmpsb
ja
dec
stc
jle
repnz
inc
outsb
adcb
mov
mov
cmc
xchg
lock
push
jno
enter
add
and
sbb
adc
xchg
cld
mov
fsubl
movsb
xchg
mov
push
je
xor
jge
jns
dec
and
cmp
jl
dec
xor
stc
idivw
pop
int
movsl
xchg
enter
jp
mov
sbb
mov
shrl
repz
outsb
repz
psubusb
lea
mov
lock
cmp
loopne
insl
test
cmp
xchg
jnp
movsl
addr16
push
inc
jmp
lds
into
fmul
mov
xor
cmc
adc
xlat
daa
std
cltd
cmpsb
and
xchg
inc
shlb
insb
xchg
push
popa
pop
adc
fs
mov
rcrl
mov
and
jp
cltd
outsb
sub
ljmp
pop
vpsubw
jp
mov
les
loop
sub
sub
into
cmpsl
sbb
pop
lea
or
sbb
mov
mul
movsl
pop
rcl
xchg
lods
adc
xor
mov
ret
add
shll
mov
hlt
mov
adc
sbb
mov
mov
imul
xor
shlb
xor
xchg
loop
ret
mov
add
outsl
xchg
cmp
push
mov
mov
ret
xchg
jne
les
and
dec
push
sbb
or
add
dec
test
fisttps
js
sub
test
jnp
mov
mul
leave
ljmp
jp
sbb
cld
push
jne
push
mov
addr16
xlat
pop
lds
cs
mov
xor
loopne
xchg
sbb
aas
push
and
das
xabort
or
inc
aam
xchg
call
pop
cli
pop
loope
jge
in
fdivl
add
test
adc
insb
addr16
pop
sbb
imul
scas
call
lahf
insl
popf
std
mov
int
mov
sub
test
dec
bound
sbb
ret
loope
sahf
sbb
sbb
andl
cwtl
sarb
es
fbstp
cli
or
lods
fmull
je
push
add
inc
mov
js
les
sarl
inc
adc
cmpsb
test
int
dec
sub
and
shrb
add
out
xor
cmp
xchg
movsl
fstpt
push
ljmp
repnz
stos
orb
insl
lock
cmp
shl
cmp
sub
fildll
push
lret
bound
xor
in
inc
jmp
mov
gs
lcall
popa
jmp
and
adc
rcrb
push
mov
ljmp
mov
or
mov
push
rcr
jb
int3
scas
leave
stc
pop
stc
nop
dec
icebp
lock
mov
out
xor
fs
shrb
push
bnd
test
fldenv
pop
xchg
dec
and
enter
jo
add
mov
pop
mov
or
aam
test
mov
push
nop
call
pop
neg
push
fdivs
jb
pusha
repz
mov
lea
adc
pop
dec
adc
xchg
sbb
arpl
xor
sahf
and
mov
lds
mov
and
push
repnz
loopne
adc
jb
out
xlat
add
mov
bound
test
dec
enter
test
loopne
push
jne
pop
sbb
jp
ret
xchg
test
mov
pop
mov
pop
push
loopne
jp
fwait
stos
ss
stos
push
out
inc
and
push
lds
push
dec
push
xchg
imul
decb
jle
leave
pusha
push
lahf
mov
in
push
je
bound
xchg
add
sub
stc
scas
dec
mov
cld
dec
lods
jns
inc
adc
hlt
adc
repnz
adc
mov
fidivl
jno
sbb
cltd
clc
lret
xchg
sub
pushf
imul
je
sahf
push
push
loope
xor
inc
mov
dec
fisubrs
add
lea
add
lret
xchg
sub
leave
repnz
xor
jmp
push
cli
xchg
push
repz
or
push
inc
iret
mov
dec
popf
mov
je
shl
in
mov
xchg
mov
jmp
sahf
aad
mov
lods
arpl
sub
cmpsb
mov
arpl
mov
into
and
mov
imul
lds
xor
mov
aaa
fnstcw
jmp
test
roll
repz
sbb
or
pop
daa
pop
and
inc
loopne
cmpsl
jae
fisubl
or
ljmp
insb
scas
inc
sahf
aaa
jne
add
movsl
lods
fsubrl
ja
movsl
test
push
xchg
xchg
into
jl
pop
sub
rorl
jnp
out
fcomps
out
arpl
push
adc
and
dec
test
push
outsl
adc
lods
mov
cmp
dec
addr16
sbbl
sahf
lods
negb
daa
leave
gs
mov
mov
adc
xor
inc
dec
in
lea
adc
sub
inc
pop
in
rcrb
notl
scas
or
jl
adc
sub
cwtl
lock
lcall
ja
xlat
mov
gs
xchg
outsb
jl
data16
pop
jecxz
fwait
xor
pop
mov
sbb
ror
notb
cmp
cmpsl
push
scas
cwtl
shlb
xchg
movsl
jp
scas
xor
fildll
jmp
rcll
pop
dec
out
xchg
mov
cmpsl
add
mov
lret
pushl
in
mov
mov
subl
fucomip
push
lcall
out
movsl
aam
in
std
cwtl
pop
repnz
jle
out
cmp
cmp
jmp
mov
ret
repz
repz
pop
std
test
lret
jge
mov
mov
mov
les
jle
xchg
test
movb
sbb
inc
xor
sahf
xor
imul
ficomps
push
inc
test
loop
bound
push
jno
aaa
mov
imul
xcrypt-ctr
add
pop
or
mov
sbb
mov
and
negb
mov
cmp
packssdw
cmpsb
cmp
push
out
mov
xor
and
xchg
repz
cmpsb
inc
jbe
fdivr
fidivl
fidivrl
stc
js
mov
bound
dec
ror
mov
jl
mov
xchg
out
movsl
and
stos
std
js
mov
js
shr
mov
xor
pop
xchg
add
in
xor
xor
pop
bound
and
cmp
jecxz
flds
pusha
movd
test
cmp
arpl
lret
inc
outsl
leave
sti
pop
bndstx
xchg
rorb
adc
mov
scas
pushf
test
push
sbb
or
adc
xchg
push
pushf
xor
pop
ret
mov
sbb
fyl2x
push
jmp
push
jo
popf
xorl
shrl
fidivs
je
fdivs
test
inc
dec
shrl
cmpsl
mov
push
call
xchg
jo
imul
loop
pop
jns
call
adc
pop
xchg
dec
cmp
jecxz
pop
shll
jg
mov
mov
mov
cmc
rclb
and
push
jp
cwtl
add
sub
sarl
push
gs
shlb
adc
pop
xor
sbbl
push
pop
hlt
fildl
js
cld
jnp
movsl
popf
push
and
test
stos
xchg
fs
xchg
push
lret
mov
into
push
dec
gs
out
cs
mov
negb
cltd
xor
cmc
inc
and
mov
sub
inc
mov
iret
data16
xchg
jle
pop
xchg
jg
inc
mov
adcb
cltd
push
in
les
inc
or
jae
pop
cli
scas
ds
jno
in
xchg
xor
add
andw
roll
xchg
jnp
adc
push
and
mov
push
dec
xchg
xchg
inc
fstl
pop
or
cltd
das
fdivrl
and
out
mov
ja
mov
out
mov
mov
mov
test
int
adc
inc
int3
ja
jbe
or
push
xchg
mov
insb
sub
add
lods
insl
or
xor
jbe
call
xchg
inc
mov
sbb
pop
mov
mov
add
adc
mov
pop
lahf
lea
sub
mov
adc
jns
push
mov
inc
out
sbb
test
sub
cmp
jnp
sbb
sbb
mov
cmp
dec
pop
imul
sahf
sub
and
test
fisubrs
mov
and
aas
test
sti
adc
icebp
mov
lock
jb
dec
shl
xchg
data16
ret
cmp
pop
rclb
pop
jmp
cli
adc
mov
mov
addr16
popf
cwtl
inc
fs
sbb
adc
and
mov
test
inc
test
leave
rorb
aam
bound
popf
mov
nop
xchg
push
sub
fldl2e
orl
inc
nop
daa
mov
mov
scas
mov
inc
adc
mov
jne
in
push
mov
rcll
mov
push
bnd
push
or
inc
push
nop
xor
sbb
mov
cmc
mov
outsl
sbb
mov
jb
mov
adc
jo
insl
sub
scas
jb
and
jmp
fst
fdivrl
imul
jmp
push
push
dec
pushf
das
sbbl
rcrl
inc
popa
pop
jb
cmc
xchg
js
sarl
mov
push
lods
adc
cmpsb
loope
mov
push
call
ret
aaa
mov
xlat
repnz
movsl
dec
scas
pop
iret
fildll
mov
jp
mov
xchg
sbb
pop
dec
iret
lds
pop
loope
lds
dec
in
out
jmp
sbb
jne
add
es
lods
shld
imul
xchg
sub
xchg
lahf
nop
stos
loope
sti
fwait
imul
pop
aad
sub
cmpsl
not
in
lods
aam
xchg
fstp
out
std
and
mov
cmp
jl
and
loope
fsubl
xchg
aam
dec
cld
call
nop
jae
test
sarb
sbbb
lds
subb
mov
data16
mov
mov
jnp
cmp
div
test
pop
mov
into
mov
cwtl
add
mov
or
jp
push
xor
xchg
ss
jle
xor
add
sbb
scas
add
push
clc
jmp
sub
inc
popf
adcl
in
mov
out
mov
lcall
dec
xchg
pop
and
inc
sahf
xor
and
inc
add
sbbb
xchg
sub
push
outsl
mov
sbb
cmp
in
stos
iret
sarl
incl
or
cmp
daa
inc
or
nop
xchg
cltd
lret
mov
test
sbb
shrb
loop
mov
int3
test
jmp
add
jo
jle
push
jo
lahf
cld
cmp
push
xchg
push
jne
mov
xorb
lock
xor
cmp
mov
shl
adc
push
mov
jmp
jp
sbb
push
and
iret
aas
ds
cli
or
xor
pop
hlt
jns
xor
jl
inc
je
out
sub
fucomi
mov
jno
loop
jmp
bnd
rolb
push
in
sub
pop
push
iret
and
xlat
dec
pop
cmc
aas
popa
clc
pop
insl
push
repz
bnd
das
add
cli
dec
and
pop
imul
fsts
mov
mov
adc
pop
iret
loop
loop
adcb
inc
pop
in
stos
mov
jg
lahf
jge
sbbb
sbb
mov
mov
push
inc
cltd
std
xchg
rcrl
mov
xor
outsb
lock
and
sahf
mov
mov
js
lcall
fisttpl
enter
ja
mov
das
mov
mov
packuswb
js
jmp
mov
mov
sbb
stc
movsb
out
jle
jns
fisubl
dec
popa
push
es
sti
xchg
movsb
inc
xchg
sbb
push
scas
mov
sbb
cmpsb
shll
aad
dec
jno
in
in
outsl
or
mov
rolb
mov
push
insb
mov
imul
icebp
pushf
repz
push
ljmp
repz
movsb
rcrl
cmp
cmpsb
stc
mov
aas
or
pop
push
xor
jbe
int
pushw
das
push
pop
icebp
jbe
pop
mov
pop
jns
fnstcw
lea
xchg
push
jno
inc
sbb
dec
pop
subb
adc
mov
fdivp
sub
adc
sarb
js
sbb
call
es
xchg
je
sbb
xor
pushf
hlt
adc
inc
nop
out
mov
push
pop
mov
push
out
push
shll
outsl
mov
cmp
test
cmc
xchg
lods
call
fwait
sbb
xor
mov
jmp
push
shlb
data16
sahf
nop
mov
jp
enter
and
lret
mov
or
sub
inc
stos
or
adcb
jne
pop
pop
sahf
mov
push
sbb
in
test
adc
dec
dec
stos
es
sbb
inc
bound
add
adc
lcall
cli
jle
pop
inc
insb
jb
inc
sbb
nop
nop
arpl
in
xor
lds
cs
fs
fs
mov
sbb
lds
lods
dec
and
je
push
pop
cmpb
test
add
in
pop
and
mov
cmp
xchg
fsubrl
imul
jge
ret
popa
mov
pop
fimuls
in
loopne
ret
xchg
insb
inc
inc
jmp
into
and
es
xchg
xchg
outsl
dec
xchg
push
pop
dec
daa
out
test
or
mov
xchg
mov
imul
xlat
insl
outsb
popf
stc
ret
outsl
mov
cli
int
test
dec
ficompl
sub
aam
or
test
dec
fisubrl
xor
ret
jecxz
call
imul
mov
mov
or
loopne
add
bound
push
mov
cmp
dec
inc
jo
mov
or
jo
sub
fistpl
and
imul
imul
dec
pop
xor
nop
sbb
mov
fwait
cmpsl
loope
cltd
pusha
xor
ja
cmp
out
nop
cwtl
int
push
fs
enter
mov
inc
in
loop
adc
jno
ret
push
pop
sahf
pop
sbb
leave
popf
sbb
cmpsb
inc
mov
fcmove
add
test
add
push
out
mov
xlat
add
imul
and
ja
jge
aam
sar
xchg
cld
fwait
xor
mov
fldt
jg
xor
lahf
cmp
dec
fs
hlt
sub
out
inc
pop
sub
dec
loopne
push
stos
sbb
lret
jl
fcoms
and
xor
sti
cmc
jbe
loopne
fldenv
dec
fmuls
bnd
xchg
movsb
adc
fdivl
test
rcrl
pop
out
mov
dec
loopne
jg
mov
rcrl
add
mov
sub
sbbl
imul
jo
ret
aas
inc
cld
sar
xchg
add
aad
and
out
in
mov
addb
imul
adc
inc
jmp
inc
pop
jo
dec
ficoml
jae
jl
icebp
enter
rcll
push
inc
icebp
mov
pop
jl
sbb
icebp
cld
movsb
dec
mov
add
movb
add
imul
pushf
ljmp
mov
fwait
rorb
es
xor
fsubrp
and
lahf
and
jg
cmp
push
les
ffreep
iret
test
sub
inc
imul
adcl
lock
fstpt
into
cmp
addr16
and
dec
ret
cld
and
rol
jno
ret
dec
hlt
adc
jno
imul
mov
sub
mov
fidivrs
mov
pop
sbb
mov
les
je
mov
push
shrl
push
hlt
hlt
lcall
mov
mov
daa
mov
cmpl
test
fxch
rcl
jge
xor
addl
push
aam
inc
into
cld
sar
popf
call
jo
cmp
test
repnz
sub
mov
repz
dec
push
out
sbb
xchg
mov
scas
mov
pop
xchg
js
dec
adc
insb
inc
jnp
ret
mov
and
pop
cld
rcll
aam
cs
xor
mov
pop
lds
push
lret
dec
lret
in
popf
jno
dec
popf
mov
push
out
mov
xor
or
adc
in
add
ss
inc
jecxz
das
jp
rcll
or
push
jl
mov
mov
dec
shlb
adc
scas
fidivs
inc
into
jmp
andl
adc
mov
pusha
repz
cmpl
adc
int
mov
sar
xchg
cli
stos
ret
dec
adc
and
out
sub
pushl
cmc
nop
pop
jl
popf
lock
iret
imul
addr16
push
xor
xchg
xchg
mov
mov
add
nop
mov
movsl
push
mov
jmp
push
loopne
mov
and
fnstcw
mov
lods
pop
sbb
jb
fsts
leave
stc
nop
sub
rcll
repz
mov
add
pop
hlt
push
and
push
jno
push
jecxz
fidivl
add
add
and
ljmp
xchg
xchg
movsl
mov
adc
mov
or
cmpsl
aam
sti
into
pop
cmp
jnp
cmc
int3
out
fadds
int3
fsubrp
cmpsb
mov
mov
mov
rorb
or
xchg
ret
jp
gs
adc
jno
inc
mov
scas
and
fdivrs
mov
pop
comiss
ret
fcomip
mov
pop
mov
imul
xchg
dec
lds
and
jns
dec
icebp
in
scas
hlt
mov
mov
mov
cwtl
hlt
iret
test
mov
xlat
sbbl
jo
add
sub
out
pop
xor
or
or
xchg
dec
pop
sub
jnp
cmc
cmp
nop
testl
das
jo
es
popa
inc
lahf
sbb
bound
mov
lahf
cmp
outsl
or
leave
dec
movsb
mov
sbb
insb
roll
lea
in
sub
pop
push
add
adc
sbbl
ljmp
imul
stos
mov
sbb
sub
call
pop
ja
pop
mov
dec
fisubrs
dec
dec
push
cmpsb
rcll
push
push
lret
mov
ret
cld
sti
testl
mov
adc
mov
cwtl
stos
jg
popf
stos
mov
xlat
jge
clc
jns
pushf
mov
pop
sbb
adc
loop
inc
not
mov
push
or
or
cs
xlat
insb
dec
bound
stc
push
out
add
and
mov
arpl
xchg
pop
gs
dec
movsl
pop
in
mov
fdivl
xchg
dec
subl
lcall
gs
jnp
jg
fcoms
test
stc
rol
inc
cmpsl
and
ja
pop
addr16
js
mov
les
mov
scas
in
mov
fldl
xor
push
jns
add
cmc
pop
push
popf
sahf
jge
divb
std
jb
loopne
dec
xchg
sar
iret
jns
lretw
mov
xor
jmp
mov
adc
loopne
std
scas
mov
fwait
jns
test
ret
out
pop
fsubrs
lds
xor
jae
add
mov
or
dec
out
sub
ficomps
imul
sub
test
rol
lock
lret
jb
call
fisubrl
adc
outsl
jge
lahf
mov
cmc
addb
les
mov
push
inc
mov
jp
add
push
xor
das
ficompl
dec
in
mov
sub
ret
or
je
xchg
movsb
mov
aam
gs
cmp
loope
out
in
cmc
add
aam
push
xor
sub
mov
call
ja
insb
cmpsl
add
cmpl
add
call
xor
mov
out
push
outsb
sbb
stos
dec
insb
inc
dec
jno
jl
add
adc
mov
out
out
out
inc
jmp
or
xor
in
cmp
les
scas
cmp
cmc
test
idivl
push
push
js
push
sbb
push
mov
and
daa
lahf
mov
cwtl
fs
bound
push
sub
orl
fsubrl
and
jp
in
xchg
pop
adcl
mov
lret
roll
in
mov
sub
std
dec
lret
idivb
mov
pop
pusha
cmc
adc
ret
int3
sti
pop
inc
es
add
cwtl
popa
sbb
adc
movl
mov
xchg
repnz
jg
ds
xchg
pop
arpl
fnsave
test
sar
add
pop
mov
orl
pop
bound
int
xchg
testb
inc
xchg
mov
dec
fdivrs
sbb
pop
mov
ret
outsl
test
xchg
icebp
cli
rcll
push
push
les
subb
xchg
mov
outsb
iret
imul
sbb
imul
mov
adc
shlb
decb
lods
inc
xchg
jne
jmp
mov
or
adcb
int3
and
incb
inc
nop
mov
push
ljmp
jb
mov
pop
cmp
fmulp
jecxz
js
sbb
or
pop
xchg
sub
orl
mov
movsl
xor
ja
mov
and
popf
cmp
mov
pop
mov
stos
and
je
pop
fbld
dec
gs
js
inc
fisttpl
pop
or
jge
fsubl
mov
cwtl
cmp
mov
xchg
sub
xchg
sbb
push
and
test
xchg
add
cmp
icebp
jle
lret
negl
lcall
outsl
xor
pop
adc
push
and
inc
jmp
int3
out
jecxz
push
lcall
pop
jmp
insl
mov
fwait
mov
mov
mov
mov
mov
sbb
and
sbbl
mov
js
xorl
pop
mov
popf
cmp
push
cmpsl
xchg
inc
sub
std
mov
push
in
mov
jne
inc
fcoml
ror
xchg
jnp
add
inc
sbb
mov
xchg
xor
sbb
inc
xchg
xor
iret
cld
mov
cwtl
out
sbb
gs
cmp
pusha
divl
pop
int
shlb
sti
mov
adc
sbb
pop
lcall
in
push
ja
push
xchg
jge
dec
aas
jg
test
xlat
or
mov
int
inc
bound
fsubp
data16
add
dec
mov
and
sbb
xlat
mov
int3
arpl
sahf
push
ljmp
lea
repz
ds
iret
cmp
cs
cmp
push
imul
mov
sub
pusha
pop
in
mov
insb
sti
xchg
mull
jecxz
sub
add
inc
inc
lods
je
jno
rcll
call
or
mov
dec
pop
ja
sub
iret
in
dec
xchg
xchg
lret
sti
mov
or
push
rclb
push
shlb
loopne
nop
repz
aaa
xchg
mov
mov
jg
jle
sub
fidivl
dec
inc
stos
jge
clc
pushf
pop
repz
mov
and
fidivrl
mov
int
ja
sub
push
cwtl
out
test
subl
insb
popa
jno
int3
push
popa
xlat
leave
cmp
and
push
mov
jae
cmp
sbb
ljmp
scas
inc
mov
je
pop
sbbl
aaa
lret
mov
addr16
popf
mov
fsubl
adc
cvtps2pi
std
adc
dec
inc
pop
jb
insb
push
jmp
adc
mov
pop
je
inc
mov
or
enter
cwtl
push
sub
repnz
insl
sti
rolb
mov
inc
mov
jno
shrl
mov
das
mov
push
mov
mov
jmp
cwtl
or
jp
xor
mov
repz
xchg
push
sbb
js
mov
stos
nop
mov
and
or
movsl
inc
cmp
rcll
mov
pop
jno
popa
adcl
sahf
jbe
lods
mov
das
push
scas
call
test
in
clc
pop
leave
inc
xlat
cli
jmp
pop
cmp
shrl
out
ret
jle
insl
jge
mov
xchg
loope
mov
fwait
cmp
sahf
adc
or
ss
adcb
ds
dec
addr16
es
loop
inc
arpl
lods
push
popf
fnstsw
jmp
fld
popa
jl
sub
outsb
mov
inc
outsb
adc
inc
cld
xor
cs
xchg
jb
adc
xchg
lret
popf
mov
mov
jl
faddl
or
loope
mov
xchg
mov
xchg
mov
test
js
jmp
and
cs
jne
cmp
push
imul
push
mov
pop
or
mov
ss
in
mov
lret
cmp
lods
idiv
mov
lret
mov
lods
ret
aaa
stos
push
jmp
adc
jno
sbb
sbb
addr16
andl
jnp
dec
ja
cltd
pop
xor
mov
negl
lahf
jns
into
push
xor
es
push
in
pop
icebp
mov
and
lods
cld
ja
leave
mov
in
push
out
leave
mov
pop
sbb
pop
addr16
data16
sub
pop
loope
das
arpl
pop
cmp
data16
sbb
loop
sub
roll
mov
fcompl
mov
test
add
cmpb
mull
adc
mov
fcmove
sbb
mov
js
std
xchg
stc
pushf
sub
pop
pop
out
and
cmp
fimull
lahf
xor
iret
xor
sbbb
mov
jmp
mov
aas
jno
test
leave
xchg
mov
mov
hlt
popa
lock
sbb
pop
push
add
push
in
sbb
lock
xchg
push
adc
xor
jle
jp
clc
ret
iret
les
icebp
in
aam
call
mov
jbe
test
jmp
rolb
or
and
getsec
iret
push
pop
xlat
imul
push
repnz
dec
sbb
ss
in
or
xor
daa
dec
mov
mov
jo
loope
jnp
insl
add
mov
in
mov
lds
dec
nop
or
lods
mov
sbb
int
in
test
outsb
iret
mov
insb
mov
push
sahf
dec
fldt
loopne
jle
sub
sub
int
insl
add
mov
sub
inc
subl
lods
jp
repnz
xchg
in
test
iret
insb
push
mov
xor
iret
xchg
sub
sub
insl
repz
aas
shrl
pop
push
stos
mov
xchg
cli
mov
jle
xchg
or
dec
fs
sti
test
negb
lods
push
jae
les
es
or
mov
push
mov
push
inc
cmp
or
aaa
shrl
popa
aaa
push
lods
scas
cmp
pop
sub
loopne
cs
mov
test
aad
sub
mov
or
aaa
push
mov
into
movsl
ja
js
shll
fimuls
push
pop
push
imul
and
dec
pop
lahf
push
cs
nop
mov
ret
jnp
ja
mov
mov
pop
dec
push
push
mov
ret
repnz
jmp
xchg
xchg
push
jne
xchg
push
sbb
cmpsl
es
sub
dec
or
enter
rorb
push
out
cwtl
scas
mov
or
sbb
sbb
sub
loope
hlt
les
push
push
addr16
jecxz
cmpsl
xchg
dec
dec
sub
rorb
cmpsl
pop
out
add
rorl
and
outsb
sbb
cmpsb
mov
push
mov
push
minps
clc
jg
sub
aad
push
mov
pop
test
jno
gs
and
sub
xchg
push
sti
and
std
sbb
or
shlb
loopne
push
std
pushf
sbb
dec
pop
push
or
xorb
imul
or
dec
sub
jmp
lock
ja
inc
mov
lret
or
movsb
stos
in
mov
in
xorl
adc
cmp
idiv
lahf
cwtl
in
pop
lock
sub
xchg
jl
lock
push
sub
inc
flds
jne
test
fcomps
push
or
and
iret
mov
lret
cmp
ljmp
xlat
jo
shlb
out
repz
cmp
rorl
or
add
arpl
xchg
fstpl
dec
sub
and
js
push
rclb
fcomip
add
fcomps
mov
leave
pushf
sub
ret
mov
push
inc
fmuls
fwait
xor
insb
pop
negb
mov
fdivl
adc
in
mov
xchg
add
fs
call
or
and
scas
jge
loope
arpl
sbbl
or
mov
jl
adcb
sti
inc
sahf
jae
iret
fisttps
adc
xchg
jae
loopne
mov
lret
inc
jl
icebp
push
gs
fldt
jae
add
and
push
andb
arpl
sti
or
jae
or
xchg
add
jne
fnstenv
pushf
pop
pop
adc
ja
aam
insb
inc
hlt
push
les
imul
xchg
cmp
sbbb
or
add
shrl
fadds
hlt
or
xor
push
mov
jno
jo
mov
ret
bound
test
shll
cmpsb
repz
mov
das
fldcw
xor
inc
ljmpw
popl
add
fdivl
fisttpll
pop
fidivs
push
pop
adc
or
cvtps2pd
add
aad
stos
jle
mov
adc
pop
xchg
fnstsw
test
jbe
cli
stos
loopne
ret
cld
int3
xorl
fisttps
pop
mov
jge
mov
fidivl
or
sbb
cmp
fldt
dec
je
jbe
inc
shl
mov
jle
fistpl
sahf
andb
jmp
or
push
in
inc
divl
inc
pop
mov
stc
push
sbb
and
mov
scas
test
out
sti
mov
ret
aad
stos
in
lret
push
adcb
or
jno
xor
lret
push
or
pop
cmp
iret
sub
ss
shl
dec
repz
adc
lods
dec
lret
fnstenv
das
mov
je
fs
popf
dec
jnp
mov
push
mov
cmp
jnp
fisubrs
movsl
lds
pop
sub
add
add
mov
andl
insl
adc
jnp
fmull
mov
ds
inc
shlb
cmp
sbb
out
mov
push
repz
xor
jbe
cld
stos
in
fildll
pusha
ljmp
mov
add
push
jb
lock
mov
adc
dec
mov
dec
stc
cltd
cli
lea
les
clc
mov
insl
insb
sbb
scas
push
mov
adc
stos
lret
jo
and
out
pushf
jg
jo
inc
sbb
xchg
into
bound
inc
cld
imul
ss
insl
js
cmp
sahf
adc
push
mov
lods
mov
orl
or
aad
jns
xchg
repnz
lods
inc
push
in
mov
mov
imul
and
pslld
fldl
and
add
and
push
push
jecxz
rclb
push
or
push
add
push
andl
jb
xchg
fldt
inc
mov
xor
movd
jo
mov
shl
push
push
sbb
mov
add
jl
push
movsl
xor
mov
stc
orl
mov
jmp
lods
sbb
test
or
pop
sti
mov
mov
fdivs
add
insl
cmpsb
out
xor
rcl
xchg
push
fdivrs
fucomip
pop
mov
insl
and
bound
rcll
scas
jo
lea
sub
in
sub
insb
mov
push
mov
into
ds
int3
pop
popa
sbbl
ds
int3
daa
pop
dec
pop
or
xchg
xchg
ret
xor
aas
lret
ja
jmp
or
pop
cli
adc
fldl
add
cmp
sti
mov
dec
fsubl
cwtl
insb
cltd
enter
adc
jge
xor
dec
push
js
mov
mov
lods
movsl
cli
or
test
inc
sbb
movsl
inc
push
adc
push
sti
ljmp
cmp
icebp
bound
cld
pop
jmp
mov
lret
push
shr
xchg
insb
or
lea
movsl
cwtl
sbb
xchg
sub
gs
fwait
pop
das
test
mov
or
nop
std
push
inc
inc
cmp
jae
and
xchg
lock
lret
es
lds
fsubp
cltd
stos
mov
pop
int3
imul
int3
pop
roll
jae
pop
dec
sub
jno
mov
xchg
rclb
sarb
push
sub
and
mov
mov
push
aad
pushf
pop
dec
stc
into
cmp
cmpsl
inc
or
mov
fmull
mov
xlat
add
imul
imul
push
pop
xchg
idivb
movsl
inc
mov
mov
lret
sub
test
adc
xor
xchg
int3
pop
add
lock
adcl
lret
mov
push
jmp
push
xchg
rorl
je
push
shrl
sub
movsl
cltd
pop
xor
mov
sti
mov
push
fwait
ret
ljmp
jne
mov
pop
or
int3
lret
pop
cmp
repnz
js
shll
push
xchg
mov
fnsave
roll
xor
je
sbb
mov
push
dec
cli
rol
sahf
cmp
pop
nop
push
inc
in
je
jnp
or
jno
arpl
mov
xchg
cmp
stos
ret
sarl
outsl
xchg
lret
hlt
or
sub
frstor
test
push
mov
xor
cmp
inc
ret
call
test
mov
enter
subb
cmp
jnp
fcoml
aaa
mov
cltd
xor
stos
ret
mov
outsl
xchg
lret
bound
cld
pop
pop
imul
add
daa
xchg
out
outsl
sahf
mov
xor
shlb
mov
dec
mov
flds
std
jne
dec
sarb
xchg
inc
bound
pop
imul
adc
adc
or
mov
xchg
xor
xchg
das
rclb
jmp
sbb
add
fistl
aaa
or
fdivl
pop
imul
sti
pop
xchg
movsb
xsha256
cmpsb
adc
sub
mov
aad
pop
icebp
push
shrl
test
rcr
mov
pop
or
xor
aad
adc
fisubrs
adc
addr16
xor
loop
shrl
add
aam
in
xor
pusha
clc
jns
jb
and
sbb
push
jno
aas
cmc
and
jg
shlb
push
insl
iret
mov
inc
jecxz
addb
outsb
inc
test
xor
lods
add
cmp
mov
push
adc
push
lcall
scas
mov
fwait
sbb
sarl
popa
inc
xchg
sahf
movsl
jg
cmpb
jmp
mul
out
xor
aaa
mov
shll
das
rolb
adc
jnp
pusha
lods
push
popa
jecxz
push
sti
das
xchg
mov
xchg
sub
in
cwtl
insb
cwtl
mov
add
mov
stos
inc
clc
or
add
sbb
fnstsw
mov
push
jns
ret
fnstsw
sbb
dec
xchg
fsubrp
lret
push
not
mov
push
inc
mov
push
dec
loope
fwait
mov
jno
incl
push
ja
mov
inc
lcall
mov
int
scas
inc
fisttpl
and
push
push
adc
cli
jl
fucomip
movsb
movsb
mov
push
and
push
sahf
jae
cmpsl
jne
push
andl
push
movsb
movsl
aaa
sbb
mov
cs
cmp
push
dec
sbb
clc
jle
inc
stos
out
pusha
jecxz
cmp
pop
aaa
rorl
and
sahf
sub
xor
popa
shll
jae
sbb
dec
data16
inc
insb
js
mov
mov
ss
repnz
pop
loop
icebp
push
out
cmpsb
jp
or
jo
sti
mov
xchg
stos
js
fdivl
or
push
sub
mov
fdivl
bound
out
sbb
pop
pop
mov
add
mov
mov
repnz
call
into
and
icebp
mov
lock
jecxz
sbb
shrl
aaa
pop
jnp
mov
pop
mov
dec
scas
fstpt
testl
js
shrb
inc
inc
in
aad
mov
add
mov
pop
shrb
sbb
test
shll
dec
loope
pop
pushf
and
pusha
xchg
cmpsl
inc
mov
dec
int
cmp
pop
sbb
insl
fisubrs
sti
add
xor
leave
inc
dec
xchg
mov
stc
loop
lcall
mov
ja
mov
xor
js
subb
pop
and
in
pop
fnsave
mov
jmp
into
sbb
pop
and
lret
in
imul
fcoml
cmp
lret
add
or
mov
jns
jl
and
mov
loopne
and
add
xlat
and
hlt
fprem
fisubl
testl
dec
cmp
push
cmc
xchg
fists
pop
cwtl
insl
push
pop
test
movsl
mov
loop
imul
push
jb
stos
mov
push
push
lock
cmp
xchg
loop
xchg
imul
or
popf
pop
mov
push
vpaddusb
inc
pop
mov
fcoml
aas
xchg
inc
mov
xchg
cmp
dec
xchg
sub
orl
fcomps
int3
cli
and
mov
adc
inc
repnz
mov
push
daa
sbb
pop
xor
push
hlt
push
pop
push
pop
xchg
mov
dec
jns
ret
dec
loop
and
xacquire
lea
movsb
or
push
ljmp
rcll
es
ds
mov
and
cltd
push
and
xor
loopne
add
into
xor
push
jne
andb
mov
out
or
push
cmp
scas
mov
dec
js
out
xor
sub
insl
pop
outsl
sub
xor
fildl
rorl
xchg
xlat
mov
pop
mov
nop
in
icebp
popf
nop
mov
mov
notb
mov
or
sbb
js
test
inc
push
xchg
and
arpl
and
fwait
and
loop
xchg
dec
rcrb
xor
xchg
popa
cmp
mov
inc
fadds
sub
out
pop
imul
outsb
add
mov
adc
in
leave
push
fistps
push
cltd
test
xchg
imul
ljmp
aad
xchg
mov
sub
out
xchg
pop
into
dec
sbb
mov
shrb
sbbb
scas
and
or
cmp
adc
mov
stc
and
inc
lret
mov
pop
fcmovnu
fucomp
ret
sub
mov
arpl
push
adc
mov
dec
popa
clc
or
movsb
push
cs
or
xchg
pop
fsubrp
dec
stc
jnp
fsubl
xor
cmp
mov
ss
inc
popf
push
push
push
xlat
sbb
sub
cmp
xchg
hlt
jno
sub
decl
lahf
stos
rcrl
loope
xchg
cltd
jle
mov
mov
jno
or
imul
scas
cmc
lret
loop
jno
test
xchg
mov
stos
cmpsb
outsl
jo
cmp
jg
enter
ret
and
adc
stc
sbb
fdivp
test
dec
adcb
jo
lea
clc
lea
jle
out
mov
cmp
mov
imull
sub
popa
lods
pusha
iret
out
gs
rcrl
in
iret
rcrb
dec
movsb
xor
in
jl
xor
in
imul
icebp
lock
and
mov
pop
push
cmp
fcoml
sbb
jne
andl
add
out
xor
inc
rcl
push
jecxz
cmpsb
stc
loope
xor
in
cld
push
cltd
sbb
iret
xor
jno
push
rcl
call
and
add
in
loopne
rcl
bound
cmp
pop
and
mov
jnp
je
lods
cmpsb
cli
inc
lock
sti
daa
ret
cmp
jbe
in
sbb
cmp
and
shll
jbe
shrl
push
cmp
push
sbb
xchg
pop
mov
adc
rorb
lods
add
subb
cli
cmp
subb
lcall
push
lods
outsl
jnp
xor
negl
mov
inc
mov
jno
jmp
mov
xor
insw
shll
add
sahf
mov
stos
daa
les
jg
xchg
lds
adc
loop
jo
iret
mov
add
sub
pop
loope
pop
mov
push
push
icebp
rcl
cli
pushf
pop
addr16
ljmp
addr16
lret
mov
lcall
jmp
sub
insb
pop
or
leave
jecxz
cmpsb
adc
cmpb
push
mov
add
cwtl
add
je
sbb
shlb
push
add
les
call
jle
pop
out
fildl
and
hlt
mov
mov
in
push
xlat
sub
xor
nop
fmul
mov
push
adc
and
pop
insb
or
and
fwait
sbb
add
outsb
sbbb
out
and
bound
xchg
out
arpl
lahf
test
and
ljmp
popf
stc
cmp
add
test
lea
inc
cwtl
idiv
sub
mov
pop
cmpsb
mov
scas
incb
mov
fstpl
test
mov
xor
fcmovu
orb
jmp
push
jmp
out
sbb
in
add
mov
and
hlt
push
sbb
fcompl
sub
fwait
into
inc
jge
xorl
jae
fiaddl
andb
pop
daa
rcrl
repz
aam
adc
repnz
xor
xor
mov
cld
and
data16
stos
test
stc
or
pop
adc
jns
add
lret
mov
inc
jne
stc
xchg
ss
push
stc
jle
mov
sahf
xchg
call
sbb
inc
inc
in
hlt
test
cmp
or
push
sbb
inc
jns
arpl
insb
fcoml
das
mov
push
dec
fiadds
arpl
cmp
pop
cli
movsb
mov
pusha
pop
leave
loope
or
lahf
nop
or
add
pop
push
xchg
imul
std
gs
movsb
sub
fnstsw
inc
jns
pop
xchg
in
fstpt
fiaddl
jbe
loope
test
dec
int
add
stc
and
jle
xchg
and
mov
mov
adc
inc
cmpsb
pop
popf
mov
mov
or
cmpsb
lock
sub
or
pop
cmp
movb
dec
sub
mov
out
adc
pop
pop
pusha
add
fidivs
subb
movsl
inc
rorb
aad
cmpsl
repnz
xor
roll
inc
add
xchg
data16
inc
dec
ss
jbe
scas
push
add
aas
leave
test
add
iret
push
stos
mov
and
push
xchg
roll
sbb
and
insl
or
jns
sbb
sbb
add
in
dec
jae
pop
mov
fwait
gs
repnz
sar
or
insl
jecxz
mov
fildl
xor
notl
xchg
inc
mov
iret
aaa
xchg
xor
test
lahf
dec
pop
mov
mov
pop
mov
cmp
rol
pop
sbb
cmpsl
notl
push
rcr
outsl
add
pop
mov
and
pop
lret
aam
lds
adc
or
outsl
in
shrb
cmp
leave
jnp
xlat
icebp
pushl
xlat
xchg
insl
xor
push
cmp
outsb
dec
shrl
ret
push
xor
jns
fadd
push
fisttpll
pop
notb
arpl
stos
js
fwait
test
cmp
mov
imul
push
insb
jge
mov
decl
test
lods
xorb
push
mov
sub
test
mov
xchg
cmp
sub
mov
in
cmpl
sub
xchg
sbb
dec
jo
pop
sub
fildll
mov
mov
imul
lods
lcall
test
imul
lcall
xor
add
mov
fwait
adc
add
xor
loope
mov
adc
mov
je
xlat
outsb
outsl
xchg
gs
ds
inc
mov
pop
pop
das
xor
jae
pop
loopne
xchg
jecxz
insl
sbb
call
das
or
scas
xor
loopne
push
add
popf
mov
andl
lret
loopne
mov
repnz
jno
insb
mov
pop
outsb
outsl
fdiv
mov
fcompl
in
dec
stc
addr16
repz
add
and
sub
push
dec
ds
xchg
outsl
dec
push
push
xor
sbb
xor
add
ss
cmp
mov
lock
push
add
mov
lret
loop
jb
jp
negb
xchg
jle
out
fdivl
lods
bnd
popa
mov
dec
leave
mov
fistpl
stos
ljmp
fwait
jmp
push
jge
sahf
popf
pop
test
mov
jb
out
sub
loope
or
pop
movb
sub
paddd
gs
mov
xchg
es
out
movl
jg
mov
pop
adc
mov
cli
adc
sbbb
xchg
mov
cmp
insb
ss
fadds
rolb
lods
push
pop
pop
and
into
or
enter
imul
jo
andb
dec
outsb
sbb
stos
mov
js
jne
push
xchg
in
push
jle
mov
dec
pushf
inc
loopne
leave
push
fucomi
lods
push
sarb
jnp
jnp
repnz
pop
push
sub
inc
push
scas
sub
pop
jae
int
xor
dec
bound
test
xlat
loop
lds
fistpll
repz
rcrb
xchg
aad
add
mov
scas
jnp
sbb
cmp
inc
shl
dec
jg
repz
fs
dec
rcr
imul
aam
test
cltd
cli
jge
push
imul
rcl
out
scas
cmp
or
add
mov
shl
test
orl
lret
lock
jnp
cwtl
push
mov
notl
aas
mov
fs
clc
popa
testb
sub
and
test
lret
cmp
adc
mov
inc
sbb
xlat
in
or
push
lods
cmp
mov
shlb
xchg
testl
jecxz
add
sbb
cwtl
cmp
cmp
imul
xchg
mov
dec
repz
xchg
mov
sub
adc
pop
test
int
icebp
rorb
sbb
or
das
dec
pop
in
shrb
cmp
jecxz
test
mov
repz
adc
shlb
outsb
cmpsb
outsb
outsb
shrl
es
fisubrl
and
iret
leave
pop
sahf
cmp
mov
sti
iret
and
cmp
mov
pushf
xchg
sub
out
mov
fnstsw
dec
cwtl
or
ja
mov
iret
inc
lahf
hlt
xchg
pop
stos
adc
insl
adc
xor
lcall
bound
inc
mov
cmp
sarl
test
loop
fwait
popa
iret
sub
dec
or
pushf
xor
cli
or
push
jno
inc
cmp
cli
mov
shll
or
fcomi
add
sub
and
or
mov
in
std
fs
mov
lds
jge
adc
repnz
pop
out
jmp
jbe
push
xchg
or
jp
arpl
xchg
xchg
push
sub
xor
out
dec
jb,pt
dec
mov
inc
mov
push
add
push
adc
divb
pop
addr16
xlat
fdivs
sub
sbb
out
cld
pop
sub
in
mov
ret
pop
add
test
mov
mov
loopne
sub
xor
mov
add
rcr
pop
push
inc
mov
mulb
rol
rcll
sub
lds
inc
mov
mov
cmc
dec
cmp
or
shll
dec
fs
or
sbb
mov
roll
jb
sub
mov
lods
aam
and
loope
loopne
dec
cmp
pop
icebp
cmc
sahf
xor
push
jecxz
stc
das
mov
xlat
and
sbb
adc
pop
movb
fildl
jl
ljmp
fucom
shrb
adc
mull
dec
push
sub
jmp
push
adc
in
ja
pop
out
sbb
cmc
xchg
aas
jle
xor
shlb
sub
mov
jb
push
mov
lds
aad
xchg
cmp
jne
test
xchg
mov
sub
ret
adc
adc
pushf
xor
or
aas
dec
dec
or
dec
lcall
insl
xor
sbbb
fnstenv
and
aas
sub
xchg
cmp
mov
ss
cwtl
sbb
aas
pop
fistl
cwtl
xlat
sbb
xchg
sbb
ds
lea
pop
mov
jns
mov
sbb
pop
test
imulb
shrl
pop
fidivl
push
out
xchg
push
fstpt
xchg
insb
or
mov
cmp
cmp
outsl
outsb
inc
call
test
inc
aad
fisubrs
pop
lds
xor
stos
push
jmp
dec
cld
jo
lret
in
in
and
in
insb
inc
pop
dec
shll
lahf
dec
test
and
dec
mov
or
xor
outsb
cmp
mov
rclb
adc
add
int3
outsl
stos
add
and
insb
divl
lods
or
adc
les
test
jmp
cmp
and
orl
fwait
clc
dec
loope
mov
push
ret
call
push
xor
ljmp
cmp
je
cmc
je
pop
cmp
xor
cmp
pop
sbb
int
push
int3
lret
in
push
sbbl
pop
add
mov
xor
arpl
cmp
push
and
lods
push
mov
shl
das
xor
cmp
or
pop
lock
lcall
testb
pop
pusha
and
lds
insb
popf
xor
stos
mov
jmp
adc
pop
xor
scas
std
ret
mov
icebp
mov
mov
jmp
and
das
lea
xor
in
cld
mov
inc
fcoml
mov
mov
das
adc
mov
cld
dec
icebp
mov
sub
and
ljmp
jo
pop
sahf
jne
les
mov
repnz
dec
out
push
ret
pop
push
aam
sub
sub
ret
aaa
movsb
scas
jle
loopne
mov
or
xor
mov
ret
outsl
test
cmc
aad
cmpsl
lds
jne
out
push
pmaxub
rcrb
leave
pusha
dec
icebp
xor
es
repnz
jp
adc
push
in
mov
jmp
or
jge
adc
cmp
movsl
mov
in
xchg
mov
add
push
jg
stos
in
or
adc
orl
or
mov
fmull
mov
shlb
jo
push
push
out
mov
and
fstpt
inc
scas
in
cli
xchg
and
insl
cltd
inc
sbb
jmp
xchg
dec
push
mov
test
movsl
insl
fadds
hlt
mov
push
in
mov
adc
add
jo
xor
andl
mov
insb
mov
sahf
ret
jo
repnz
cmp
leave
adc
lock
arpl
or
ret
pop
pop
or
xchg
cmp
js
pop
sbb
mov
in
mov
mov
xchg
adc
inc
mov
fnstenv
pop
test
dec
push
pop
repz
outsl
mov
adc
mov
aam
stos
or
cmpsb
cmp
pop
xsha256
cmpsb
nop
xor
call
mov
outsl
push
sbb
xchg
sub
xor
fs
push
mov
out
xchg
cmp
jmp
inc
fnsave
or
out
cmp
pop
add
loope
sbb
mov
fdivrl
rorl
push
sub
dec
imul
insl
mov
fsubrp
test
cmp
insl
sbb
fmuls
mov
shrb
fwait
jecxz
adc
insl
add
xor
mov
xor
push
stos
inc
mov
cltd
xor
xchg
mov
jno
push
mov
mov
mov
das
enter
inc
push
scas
inc
sbb
lods
or
add
inc
push
mov
or
dec
out
dec
stc
jns
or
rcl
sbb
mov
dec
push
jmp
cli
cltd
mov
int3
and
roll
fidivl
and
push
dec
movsb
cmp
inc
test
fsubl
jp
push
inc
or
ja
lcall
pop
daa
mov
js
push
ljmp
jno
push
cmp
xchg
mov
jle
loop
pop
sub
lea
mov
jge
add
jecxz
xchg
adc
pop
mov
jge
fs
push
call
movsl
adc
leave
pusha
lods
je
or
out
cld
sub
pop
sbb
add
repz
xchg
cmp
adc
pop
rcll
adc
mov
and
add
pop
lret
add
dec
sub
pop
pop
mov
xor
int3
arpl
ds
mov
gs
ja
xor
mov
mov
mov
mov
ss
outsl
call
sub
aas
es
push
out
add
notb
push
movsl
inc
and
and
cmc
sbb
dec
sub
pop
loopne
xchg
adc
or
cmp
sbb
sbb
shrl
or
jns
xlat
sbb
and
sbb
sub
sbbb
add
mov
cmp
lock
and
notl
scas
and
repz
and
add
daa
fldcw
pusha
sub
es
xor
dec
jecxz
in
pop
xor
popf
arpl
xchg
cmp
add
imul
stos
push
cmp
mov
adc
sbb
dec
jecxz
frstor
cmovne
js
cltd
xor
shlb
loopne
or
sbb
dec
nop
scas
inc
sti
cmc
dec
scas
inc
jp
xor
imul
nop
daa
pop
pop
mov
or
pop
repnz
lods
inc
mov
mov
sbb
cmp
mov
or
mov
lods
inc
dec
jl
xor
stc
addb
cmp
fldt
push
data16
xchg
mov
mov
js
adc
popa
es
push
lahf
insb
add
fsubl
adc
pop
js
das
dec
mov
addr16
dec
loopne
sub
mov
push
movsl
sbb
push
pusha
pop
test
neg
sahf
rcrl
and
jns
je
mov
jne
inc
test
pop
mov
lret
and
stos
and
fstl
dec
out
je
cmp
push
enter
js
mov
push
into
sub
add
movsl
and
clc
jae
lock
sbb
orl
add
stos
and
outsl
push
movsb
les
clc
adcb
and
mov
movsl
cmp
adc
stos
cs
xchg
lods
les
loopne
and
int
jp
scas
stos
into
pop
jae
int3
daa
mov
push
sbb
or
xchg
sub
int3
scas
inc
add
pop
push
sbb
add
push
jmp
add
es
sbb
out
int3
jne
add
push
out
sbb
iret
dec
pop
outsl
push
dec
shlb
or
and
inc
je
fsubrs
addl
dec
data16
xchg
fcomip
mov
andl
mov
inc
fisttpll
jg
xchg
fisttpll
jb
add
xchg
fstl
test
pop
cwtl
das
ss
xchg
loope
xchg
adc
adc
xor
push
dec
loopne
daa
mov
push
mov
cmpsl
movsb
cmc
icebp
mov
test
mov
inc
cltd
leave
pusha
iret
mov
mulb
inc
in
test
out
aaa
xchg
jae
ret
pop
inc
fmull
scas
arpl
aaa
in
push
mov
cmpsb
mov
lahf
mov
xor
repz
xchg
aaa
dec
ret
orb
pop
xchg
sub
nop
cltd
xor
subb
mov
stos
inc
mov
sahf
stos
std
xchg
fiaddl
or
lock
clc
stc
adc
mov
popa
js
adc
push
addr16
jecxz
dec
add
mov
ficoml
leave
and
cld
xor
xor
jp
cmc
push
dec
adcw
popf
inc
movsb
popf
mov
push
cmp
and
loop
or
fidivrs
xchg
dec
out
pop
jno
mov
pop
notb
stos
leave
pusha
loopne
sub
arpl
mov
cmp
loop
mov
shrl
stos
jle
fsubl
sub
or
pop
mulb
inc
xlat
cmpsb
cmpl
mov
stc
nop
fwait
outsb
and
sahf
xchg
fstpt
data16
xchg
jbe
mov
and
loopne
push
loopne
mov
ror
push
aam
movsb
cmp
mov
push
and
in
sub
aaa
push
dec
cltd
test
int3
sbb
add
cs
pop
test
push
int
mov
and
clc
and
adc
into
gs
out
iret
shlb
xchg
sub
mov
repz
loop
inc
xor
push
lret
adc
mov
or
add
je
out
sub
dec
sarl
cwtl
nop
xchg
and
cmp
cs
jb
fs
cmp
xor
sahf
push
pop
rorb
repz
inc
leave
icebp
jns
addr16
fadds
daa
sub
ja
icebp
sbb
aas
ss
ja
add
sbb
cltd
dec
jecxz
call
sub
out
rcll
mov
pop
ljmp
adc
mov
pop
out
add
jle
roll
repnz
clc
mov
add
xchg
cmp
jecxz
adc
mov
mov
popa
sahf
mov
xchg
push
jae
orl
testb
and
mov
adc
mov
pop
cltd
rcrb
gs
int3
aas
jl
pushf
mov
xor
add
out
pop
lahf
jp
aaa
pop
or
sbbl
inc
mov
xor
mov
mov
in
jns
mov
cwtl
ss
jge
add
lods
xor
sub
xor
repnz
mov
les
xchg
repnz
adc
cmp
mov
jl
js
imul
nop
inc
pop
cltd
xchg
gs
aas
xchg
and
mov
push
xchg
and
gs
inc
outsb
fbstp
pop
jnp
push
ret
or
in
and
mov
stos
add
stos
and
adc
add
fs
xor
leave
push
data16
call
movsl
and
icebp
add
lea
sub
test
inc
fldenv
lret
loope
and
push
movsl
out
add
out
inc
mov
imul
ljmp
inc
pop
andb
or
push
push
sbb
or
xor
pop
je
lock
repz
cmp
daa
jmp
sbb
pop
fbstp
cmp
sahf
xor
and
jl
test
sub
movsb
addr16
ss
xor
cmpsl
push
div
push
sbb
es
ret
ja
sub
push
pushf
outsl
outsb
sarb
inc
sub
js
call
sub
sahf
fs
lret
pop
test
adc
sbb
and
adc
test
jmp
int
sbb
xchg
sub
pushf
movsb
insl
adc
bound
adc
subb
pop
lret
xor
icebp
in
mov
sbb
cwtl
jl,pn
js
and
push
test
push
adc
sarb
fists
bswap
pop
jns
iret
ljmp
add
dec
lahf
addl
out
in
sbb
mov
js
pop
lcall
xor
pop
lret
data16
xor
xor
lock
push
test
mov
push
cltd
xor
push
nop
adc
inc
lods
adc
stc
int
arpl
mov
xchg
xchg
mull
xchg
sbb
movsl
imul
mov
icebp
pop
shl
cmp
sub
add
das
movhps
jmp
dec
cmp
xchg
push
ds
addb
mov
sarb
je
sarl
sbb
jl
lcall
dec
lahf
add
sbb
popf
call
sbb
xchg
daa
add
sbb
add
jo
sbb
mov
cmpsb
pop
dec
rorb
lds
imul
movsb
imul
sbb
inc
push
loopne
gs
pop
into
push
dec
aad
pop
pop
xor
aas
jp
pushf
dec
imul
dec
inc
dec
out
push
mull
das
arpl
dec
inc
addr16
cmp
mov
jae
je
mov
jmp
hlt
push
test
roll
cmpsb
pop
ret
fists
repnz
cmp
jge
je
mov
adc
cs
push
jge
add
xlat
pop
stc
and
sar
xchg
sbb
stos
xchg
inc
lcall
insb
xchg
pusha
stos
sbb
ds
jge
loopne
fidivrl
les
mov
mov
mulb
das
ret
push
push
popf
xchg
adcl
pop
mov
jmp
pop
in
dec
hlt
xor
ret
and
add
dec
enter
in
mov
out
adc
ljmp
add
pop
cmpsb
push
out
xchg
fnsave
inc
sbb
lahf
xchg
jne
adc
and
xchg
add
push
sti
je
leave
cltd
out
pop
push
enter
pushf
ljmp
fnstenv
cli
dec
shr
mov
cmp
cli
lods
test
into
pop
or
std
add
inc
cmp
scas
and
repz
test
out
adc
xchg
xchg
fwait
cwtl
and
and
cmpb
inc
mov
sub
mov
jmp
dec
loopne
xchg
fmuls
js
fiadds
inc
mov
ja
imul
add
pop
inc
sbb
jne
popa
dec
push
push
aaa
inc
pushf
xor
pop
jle
and
loop
push
dec
aam
push
inc
imull
pop
lds
dec
inc
pusha
cmp
inc
inc
mov
pop
pop
sub
sub
cwtl
xchg
ds
into
push
jnp
cmpsb
cmp
mov
pop
test
pop
cmp
push
scas
xor
lahf
jbe
cmpsb
dec
adc
insb
clc
sti
xchg
push
mov
sub
aaa
leave
sbb
sbbl
dec
mov
repnz
dec
cltd
or
dec
sbb
stos
outsb
lahf
push
sub
cmp
pusha
cld
ficoml
ss
mov
stc
and
sbb
in
jns
cmpsl
or
mov
push
mov
filds
lret
pop
cmpsl
lds
repz
mov
adc
jg
insl
dec
fprem
nop
sub
popl
pop
jle
adc
sub
dec
jp
cmp
jbe
fists
and
test
cmpsb
es
xchg
daa
xchg
popf
lret
and
sbb
das
cmpsl
insl
aam
and
mov
in
outsb
ret
pop
cmp
pop
jnp
pusha
insl
dec
aad
es
sub
pop
shlb
sbb
cmp
push
xchg
ja
xor
lahf
inc
sarl
push
jo
and
ret
ds
rorl
nop
loop
add
ret
xorl
push
xchg
xor
push
jb
push
jno
jne
pop
push
enter
cs
jo
in
mov
or
lods
xor
sbb
repnz
jo
fiadds
fisttpl
dec
inc
insb
ret
shll
inc
insb
rcrb
in
and
shrl
jecxz
mov
xchg
push
bound
test
dec
mov
or
std
in
mov
cmp
lahf
fwait
sbbb
pop
out
jnp
jns
push
and
xchg
xor
mov
unpcklps
sbb
adc
or
out
xor
mov
sbb
jecxz
lock
out
jl
add
xchg
cmp
loope
and
ljmp
inc
lahf
pop
add
adc
adc
and
lret
lock
push
xchg
mov
les
addr16
stos
push
xchg
inc
mov
push
push
lret
sbbl
fwait
in
insl
ficoml
or
cmp
in
lock
mov
out
test
mov
inc
int
in
mov
xlat
call
dec
mov
jmp
inc
sbb
inc
ret
ds
lds
lock
shlb
jge
and
in
xor
jno
push
xchg
popf
mov
inc
pop
or
mov
mov
push
pop
push
int3
arpl
and
xor
int3
cld
xchg
dec
and
mov
adc
push
clc
push
xchg
cwtl
das
lds
and
mov
std
xor
out
xchg
out
sub
mov
and
repnz
loop
mov
sbb
xor
out
and
jecxz
push
sub
push
scas
pop
push
enter
pop
leave
aas
sub
stos
lret
mov
lret
out
lea
or
or
mov
xchg
add
add
mov
das
sbb
aas
mov
subb
insb
setb
mov
or
cli
mov
out
loopne
sbb
or
rorb
mov
xchg
sbb
imul
in
fdiv
rcrl
jmp
mov
repz
dec
or
push
mov
jb
pusha
jmp
inc
popa
cmpsb
imul
bound
pop
inc
cmc
testl
add
jo
pop
popa
fwait
xchg
pop
mov
mul
jmp
fcomip
mov
int
shll
mov
mov
dec
rcrl
sbb
jg
lret
inc
pushf
dec
mov
dec
jp
mov
xor
mov
jno
push
xchg
lods
cmp
sbb
aas
lahf
mov
int3
jecxz
aam
faddl
xchg
jns
mov
adc
cld
mov
out
das
pop
pop
pop
mov
cltd
pop
pop
lds
pop
repz
inc
cmp
lahf
or
and
sub
das
mov
les
sbb
pop
icebp
mov
loopne
ljmp
or
lods
mov
xor
add
in
sub
sbbb
adc
jle
push
ret
rcrl
insl
rcl
outsb
add
sub
rolb
adc
lods
push
into
imul
sarl
hlt
dec
lret
push
xchg
mov
in
adc
imul
xchg
stos
cmp
test
lods
mov
aam
jb
repnz
or
mov
daa
jmp
test
sbb
es
stc
shl
add
loop
icebp
mov
sti
and
pop
or
jne
or
jg
enter
xor
pusha
shrl
movsl
adc
and
mov
cmp
test
and
mov
mov
sbb
lret
sar
lods
inc
loopne
sub
mov
cwtl
xchg
sub
stos
inc
fsubs
jp
cli
mov
sub
xchg
xchg
ljmp
or
lret
cmp
inc
mov
sub
push
popf
movsb
jbe
cld
or
pop
pushf
lahf
xchg
jl
and
inc
mov
test
mov
pop
mov
mov
clc
jae
adc
lahf
scas
in
mov
jmp
jp
cwtl
lock
mov
sbb
scas
add
std
daa
jmp
lods
enter
pop
cmc
fiaddl
ja
movsl
loopne
loop
out
mov
loope
mov
add
push
in
jge
cmp
cmpl
lret
jge
out
inc
stos
sub
bnd
scas
pop
shrb
fdivrs
mov
xor
xchg
xor
imul
pop
xchg
lret
sub
jl
lods
arpl
popf
movsl
push
xor
lock
std
and
fdivrs
add
mov
ss
call
sbbb
imul
lods
inc
outsb
aam
xchg
or
sub
xchg
std
mov
pop
push
cltd
in
push
mov
add
ret
loop
pop
ret
ret
into
arpl
in
and
xchg
mov
sub
jg
jle
leave
mov
aam
add
jp
dec
or
insb
adc
pushf
push
or
pop
cmp
mov
imul
iret
xor
sbb
inc
jnp
loope
xor
pop
pop
jle
cmp
mov
imul
dec
das
adc
pop
lods
jle
repz
stc
xor
or
cmp
fidivl
inc
fiadds
jb
test
popl
push
adc
test
sbb
cmpsl
sub
mov
sub
fldt
cmp
mov
out
sbb
loop
fmul
adc
daa
leave
aas
iret
adcb
mov
mov
imul
sbb
mov
int
imul
sti
mov
jns
cli
mov
arpl
jmp
dec
aam
mov
daa
push
repz
stc
mull
test
sub
push
mov
dec
adc
loopne
jmp
mov
js
ss
lret
pop
pop
je
inc
cmp
xchg
pop
jge
jle
adcb
jl
fs
sub
dec
pop
dec
push
call
xchg
pop
push
dec
and
dec
push
mov
jmp
push
xchg
orl
jne
mov
mov
cmp
or
sub
push
mov
das
dec
scas
pop
cmp
xchg
insl
js
pop
stos
pop
jne
cmp
mov
ficomps
sahf
xor
push
lock
aaa
aaa
pop
mov
rcll
dec
loop
hlt
mov
shlb
adc
shll
psubusb
xchg
pop
cmpsb
push
adc
ja
subl
cmp
scas
add
jo
sbb
jge
mov
lods
push
xchg
sub
xor
add
out
jp
cmc
inc
cmpsl
cmp
sti
inc
inc
sbb
adc
sbb
adc
cltd
popf
out
add
add
jp
sarb
and
sahf
orl
xchg
or
mov
leave
cmp
sbb
xor
jmp
rcrl
or
movsb
arpl
mov
stc
mov
pop
push
mov
mov
leave
sahf
aad
fs
adc
or
in
test
sbb
push
ret
push
test
inc
lret
scas
nop
mov
ret
call
movsb
int3
dec
std
xor
mov
imul
mov
jg
jmp
inc
sbb
cmp
cltd
xchg
dec
xor
shlb
sub
cmp
rclb
dec
xchg
jb
inc
push
push
lds
lcall
sub
push
mov
sub
push
jmp
xlat
dec
cld
ffreep
dec
lock
repnz
push
stos
adc
inc
test
mov
push
xor
jle
int3
push
lea
int3
dec
roll
insb
mov
xchg
sub
orl
pop
or
push
xchg
pop
inc
ret
les
sbbb
or
mov
push
rcll
jecxz
loope
cmc
sbb
les
les
inc
fs
cmpsb
mov
or
fwait
nop
pushf
mov
pop
pop
outsl
stos
bound
in
mov
popf
mov
hlt
sbb
or
xchg
push
cmp
adc
add
subl
sbb
pxor
jmp
or
xchg
fstpl
ret
and
adc
xchg
mov
jecxz
push
leave
es
hlt
sbb
xchg
jne
xchg
pop
std
dec
inc
stos
pop
stos
rcrl
xor
inc
shlb
in
cmpsl
jae
push
cmp
fs
cmpsl
jl
adc
test
lea
sahf
mov
sub
jbe
and
rorb
fmull
mov
lods
stos
mov
cmp
and
dec
dec
and
bound
or
loopne
or
mov
push
xor
mov
test
rolb
ds
lret
rcrb
movsb
pop
loope
jmp
cmp
push
xlat
push
mov
add
cmpsb
pop
xchg
dec
repz
mov
arpl
jns
cmp
mov
cld
sub
test
fsubrs
loope
cli
push
mov
fmuls
jecxz
push
shlb
jecxz
rcl
stos
gs
sub
sarl
mov
ficomps
mov
mov
xor
fnstsw
in
fisttps
cmpsb
push
out
outsb
mov
loope
push
test
jo
mwait
ss
orb
stos
pop
movsb
xor
mov
pushf
mov
std
jge
ret
fwait
cmpsl
ficoml
push
in
scas
xlat
dec
iret
popf
in
lds
fcomp
movsb
gs
dec
inc
sarb
cmp
hlt
das
daa
fnstsw
sbb
push
inc
xor
push
xchg
es
jg
and
mov
dec
push
cmp
iret
inc
movsb
out
xchg
out
sub
in
push
cmp
sub
aad
dec
shr
mov
orb
inc
fwait
push
sahf
mov
popa
lahf
fld1
jl
mov
jb
sub
es
push
inc
or
jg
movsb
cmp
mov
dec
mov
cmp
lea
mov
mov
or
mov
std
sub
sbb
mov
int3
ss
stos
adc
call
xchg
inc
repz
test
out
and
mov
pop
cmc
loope
lods
out
cmpsl
lret
xchg
xlat
movsl
push
rorl
fisubl
lock
sbb
and
sub
movl
cmpb
clc
sub
lahf
pop
lret
xchg
lods
cmc
rorl
jecxz
mov
lods
fcoms
call
cmp
stos
xor
inc
fidivl
pop
jle
pushf
add
icebp
cmpsl
in
cltd
ror
jge
fnsave
dec
loopne
jp
mov
or
sahf
cmp
nop
or
stos
adc
out
and
fstps
jmp
lods
ror
add
mov
lret
hlt
jo
in
stos
jo
mov
shrb
sbb
pop
arpl
imulb
jmp
lock
decb
add
or
jmp
imull
sbb
out
or
in
push
cs
jne
fwait
icebp
pop
cli
push
cwtl
mov
cli
data16
sub
add
mov
jbe
inc
loop
fnstcw
clc
xor
add
orl
push
cmp
mov
pop
outsl
pop
ret
mov
xor
call
dec
push
xchg
aas
in
inc
inc
sarb
dec
adc
push
roll
insb
add
add
dec
aam
xchg
jle
and
sub
cmpsb
xchg
pop
mov
imulb
inc
movsb
mov
repnz
mov
ljmp
cld
and
xchg
pop
lods
jne
cli
cmp
mov
or
lods
xchg
mov
andps
pushf
ss
sub
mov
call
decl
mov
and
cli
push
add
push
sarb
jo
mov
and
pushf
jg
js
pop
pop
call
mov
pop
hlt
push
cwtl
das
push
adc
out
xor
add
lcall
or
xchg
test
sbb
testb
in
mov
rcll
adc
roll
mov
popl
movswl
lock
repz
adc
jnp
pushf
inc
jmp
xor
addr16
inc
dec
add
pop
dec
fsts
xlat
push
pop
ss
fidivl
mov
push
jns
mov
xor
lds
rolb
fwait
pusha
fs
mov
test
ja
add
rorb
xchg
jne
and
popa
jne
xor
lcall
mov
xor
test
hlt
adc
inc
mov
xchg
insl
jae
cmp
adc
loopne
popa
int3
aas
ret
sbb
xchg
and
or
jp
fistl
pop
int3
adc
mov
xor
js
test
mov
push
push
sbb
sub
add
in
test
xchg
push
clc
push
cli
and
bound
mov
add
xchg
or
inc
pushf
xchg
std
or
rcll
mov
lret
lret
mov
ds
scas
scas
bound
mulb
jle
xchg
addl
jne
insb
cmp
inc
rcl
jge
insb
inc
xlat
or
mov
push
orb
sbb
loop,pn
in
mov
jg
or
addr16
lret
popa
arpl
push
mov
pop
jecxz
sarb
std
inc
xlat
inc
pusha
bound
jae
push
enter
pop
daa
jbe
lds
in
and
mov
fisttps
adc
insl
fwait
xor
lret
add
push
orl
push
jg
int3
cli
icebp
ss
ljmp
or
negl
mov
movsl
push
test
jmp
or
in
sbbl
jbe
push
loop
push
adc
dec
iret
aas
xor
nop
mov
shll
ss
es
push
cmp
stos
dec
xchg
and
dec
js
mov
pop
dec
mov
inc
dec
in
inc
push
leave
inc
xchg
adc
sub
jp
xor
stc
pop
pop
movl
subb
push
xchg
addb
arpl
xchg
xor
out
call
or
stos
mov
cmc
dec
mov
mov
add
cmp
fisttpll
adc
jo
and
out
or
mov
add
pop
fstpt
lods
cld
jecxz
cs
inc
fadds
push
add
push
mov
jge
movsl
hlt
cmp
xor
inc
pop
bnd
mov
adc
insl
fsubrs
jmp
cs
ds
jo
adc
push
xor
xchg
in
mov
mov
push
mov
and
or
lods
inc
in
imul
aaa
addb
mov
movsl
cmp
lods
pop
sahf
frstor
ret
pop
pop
and
js
push
inc
fiaddl
mov
push
mov
hlt
jg
es
shll
pop
icebp
negb
jns
dec
in
fnstenv
sub
popf
mov
xchg
inc
adc
popf
xchg
loope
aaa
adc
mov
or
cmp
cli
xchg
lret
sbb
test
mov
lahf
ds
mov
mov
ja
inc
int3
or
and
inc
data16
ja
es
lret
push
ja
mov
test
stos
mov
jecxz
add
int
cmp
shrl
adc
jmp
adc
mov
movsb
jnp
outsb
mov
mov
rcl
test
mov
pop
mov
dec
adc
push
dec
aam
push
mov
pop
sti
xchg
xchg
jle
fs
sbb
out
xchg
mov
cmovno
fnstenv
daa
xlat
mov
or
into
jp
shlb
outsb
add
ja
scas
and
andl
ds
adc
popf
sbb
cmp
push
xchg
and
imul
js
pop
outsb
loop
das
testl
data16
lods
xchg
test
or
sub
into
xchg
imul
test
cmp
arpl
hlt
fcmovnb
pop
mov
imul
psubsb
mov
test
push
outsl
fnstcw
repz
sbb
mov
xchg
leave
and
pop
xchg
sarl
xchg
push
aaa
clc
mov
xor
push
aaa
repnz
xchg
inc
cltd
es
icebp
and
test
xor
mov
xor
push
mov
sbb
fldcw
in
fimuls
cmp
sbb
fucomip
inc
insb
rcr
into
lret
mov
or
notb
scas
add
ret
mov
cmp
xor
lds
xor
cmp
in
rcll
jmp
jp
mov
sahf
mov
mov
or
stos
pop
stc
lds
sbb
push
aas
cwtl
mov
xor
jecxz
std
add
insb
ljmp
roll
pushf
cmp
add
adc
std
jmp
jae
push
pop
sbb
imul
fiadds
fsub
jb
xchg
mov
dec
in
sub
dec
or
sbb
scas
lret
xchg
push
cld
lcall
jns
or
pusha
sub
pop
mov
cwtl
subl
xor
adc
and
test
nop
and
sbbl
ds
and
mov
aaa
mov
mov
vpshuflw
call
mov
cmp
mov
jl
scas
addl
ss
movsl
cmp
pusha
add
jecxz
mov
daa
mov
jg
cli
dec
sub
cmp
lea
add
int3
dec
in
orl
mov
fmull
stc
in
adc
stos
shll
xchg
dec
in
or
mov
xadd
sahf
push
push
int3
aad
xor
popf
add
loop
int3
cmovp
fdivr
repnz
push
sbb
call
iret
xchg
xor
and
mov
outsb
mov
pop
std
xchg
dec
jl
jnp
jecxz
into
aam
fbstp
jge
sbb
shrb
or
jnp
sub
mov
test
cmpsb
cmp
mov
dec
mov
add
aam
clc
lds
mov
outsb
jecxz
pusha
add
loope
push
sbbb
adc
fildll
pop
ss
or
push
fs
das
and
xchg
pop
ret
mov
insl
int3
arpl
xor
mov
dec
jbe
inc
mov
addr16
lock
loop
fidivs
mov
imul
mov
push
std
repnz
gs
gs
push
sbb
or
push
stos
sub
loop
inc
inc
push
scas
sarb
data16
nop
inc
push
push
lds
fwait
test
jle
lods
sub
or
sub
mov
sbb
add
out
pushf
mov
xchg
imul
xlat
mov
test
mov
mov
sub
pop
notl
iret
add
pushf
push
rclb
hlt
mov
push
and
in
jbe
mov
enter
xchg
lcall
mov
xor
test
and
sub
lret
push
int
sbb
inc
or
test
stos
xor
movsl
sub
lret
inc
dec
jg
rcrb
lcall
xchg
fldl
xchg
loop
cmpsb
mov
jp
xchg
sbb
ret
jnp
sub
stc
aad
inc
fwait
jmp
pop
int
xchg
pushf
lcall
hlt
lret
mov
sbb
pop
xchg
cmp
roll
into
or
ja
sbb
mov
shll
icebp
ficoms
pop
ret
dec
mov
xchg
xchg
sahf
mov
xchg
vpshufhw
mov
outsl
clc
push
xchg
cmp
rcl
add
mov
scas
xor
dec
imul
idivb
out
push
out
mov
int3
loopne
lret
inc
or
mov
orb
mov
imul
pop
add
ss
and
nop
jecxz
andl
sahf
inc
dec
loopne
rorl
ficompl
jno
in
add
cld
pushf
pop
jo
jne
outsl
icebp
pop
bound
popl
adc
sub
mov
scas
pop
add
std
push
or
jmp
negl
arpl
fsubs
xor
and
jge
fwait
add
enter
ja
popa
out
bound
jae
out
jo
and
dec
repnz
cmc
cmpsl
xchg
imul
dec
daa
stc
pop
lds
push
stc
fisubl
pop
dec
outsl
pusha
negb
adcl
dec
add
cmp
jae
jne
and
push
outsb
pusha
negb
nop
repz
inc
add
adc
xchg
dec
add
mov
cmpsb
mov
xchg
shrb
popf
push
cmc
mov
jg
push
fs
xchg
lcall
aam
and
jae
dec
addr16
mov
inc
or
enter
add
sbb
xchg
cmp
aas
and
mov
pop
push
mov
lods
pop
add
inc
pop
jb
jnp
mov
mov
in
mov
pop
add
fildl
jb
jl
mov
mov
pop
dec
cmp
mov
xchg
cmp
push
divl
std
movsb
addr16
lods
mov
fxch
mov
jne
test
adc
jnp
push
movsl
push
mov
inc
mov
fimuls
ficoml
aaa
jge
push
std
test
mov
fcmovb
mov
dec
mov
scas
xchg
cmp
aaa
jecxz
jge
das
mov
outsl
push
and
scas
xor
cmp
jg
xor
lret
sub
aas
cmpsb
sub
shlb
push
pop
add
ficompl
xor
sti
data16
xor
popa
lahf
mov
and
int
dec
jecxz
xlat
jp
stc
push
std
xchg
push
jne
sub
loopne
stos
cmp
pop
daa
shlb
dec
xor
mov
cwtl
pop
iret
xchg
test
dec
push
add
or
xor
and
mov
jb
shrb
mov
dec
popf
aas
gs
inc
or
mov
test
dec
xor
test
out
adc
orb
mov
gs
mov
pop
into
cmp
inc
pop
mov
sub
jae
je
out
arpl
mov
jo
jae
cmp
jmp
adc
aad
xor
mov
pop
mov
aaa
notb
add
mov
jmp
test
sub
mov
aas
daa
mov
daa
or
movsb
mov
push
add
ret
xchg
or
dec
or
push
movsl
xor
mov
pop
mov
and
pop
xlat
cmp
pushf
inc
pop
inc
adc
pop
lds
lods
jo
sbb
add
mov
mov
push
add
push
dec
or
lcall
xchg
push
cmp
and
int3
ret
pop
aad
jp
or
outsl
popa
and
arpl
adc
stos
dec
mov
dec
push
inc
pop
push
push
sti
mov
and
fists
stos
or
and
mov
test
or
and
mov
cmp
mov
adc
stos
stc
stos
and
xchg
push
push
add
lahf
jmp
in
insl
xor
xchg
inc
xor
sub
cmc
out
mov
aad
push
dec
or
lahf
dec
and
mov
adc
sub
pop
mov
xchg
imul
cltd
xor
mov
xor
lahf
cmp
mov
ret
pop
notl
into
adcb
sbb
aaa
movsb
or
and
mov
cmp
gs
adc
pop
das
push
ljmp
cmp
xor
dec
or
mov
mov
out
ljmp
insl
ljmp
dec
or
xor
and
ljmp
in
push
xor
or
mov
or
fisubrs
or
subl
mov
adc
mov
mov
add
xlat
in
push
das
and
int3
mov
xchg
inc
repnz
dec
or
and
xchg
xchg
insl
movl
aam
push
sub
pop
popf
jns
aas
ja
lock
or
dec
xchg
pusha
leave
pusha
xchg
xor
out
sbb
pushf
cmp
push
test
adc
xor
mov
lahf
xor
add
fidivrs
pop
xchg
inc
mov
sub
adc
test
mov
dec
sbb
mov
loop
inc
adc
xchg
inc
rep
scas
sub
add
sarl
arpl
es
mov
sbb
mov
cmp
push
add
movsb
pop
rcrl
bswap
iret
or
push
adc
mov
jno
pop
cld
jle
xor
loopne
in
outsb
or
out
mov
movsb
jns
cmp
and
pop
lret
cmpsl
mov
cltd
pop
outsb
ljmp
mov
inc
dec
sti
mov
adc
repz
in
pop
scas
jg
cmp
cli
and
sti
pop
ret
xorb
push
mov
pop
test
icebp
inc
lock
dec
or
push
mov
xchg
js
shl
in
cmp
in
stc
pusha
mov
stos
orl
jmp
iret
lret
in
cmp
and
mov
lcall
adc
add
and
lcall
sbb
adcl
or
imul
adc
int
inc
outsb
hlt
ret
testb
daa
jne
mov
repnz
test
push
mov
jb
jbe
insl
out
stos
arpl
nop
xchg
movsl
xor
xchg
push
add
mov
cmpsb
mov
mov
adcb
xor
fadd
aam
pop
push
push
xchg
nop
loop
data16
jnp
jle
leave
xchg
jecxz
std
cmc
leave
jb
sub
pop
sti
add
pop
std
mov
shlb
pop
icebp
mov
jnp
push
add
addr16
add
lret
jge
lcall
dec
adc
mov
data16
jecxz
mov
and
leave
adc
test
mov
leave
xchg
mov
add
pop
jl
adcb
fistpl
aas
xchg
jg
lods
sub
mov
add
inc
insl
jbe
je
xor
pop
and
ja
mov
push
mov
mov
test
mov
pop
sar
pusha
outsl
dec
rolb
testl
rorl
fbstp
or
addr16
xchg
and
bts
pop
pop
mov
insl
adc
stos
jl
pop
decb
dec
push
dec
cwtl
bswap
inc
xchg
push
lds
fidivrs
xor
addb
adc
shlb
out
inc
aad
pop
clc
lcall
mov
mov
mov
lods
sub
mov
mov
outsb
mov
jne
js
xor
mov
sub
mov
outsb
movsb
pop
push
push
jns
ds
mov
shr
mov
lret
rclb
les
ficompl
jae
mov
pop
out
xchg
cmp
xchg
nop
sub
gs
jns
pushf
jbe
sub
int
jle
in
mov
stos
cmp
mov
rorb
insb
or
jg
aaa
sti
pop
and
or
jno
add
test
xor
adc
mov
adc
loope
pop
dec
ja
push
mov
lret
xchg
add
fcoml
or
cs
cmp
jge
loopne
jecxz
popa
inc
cmp
iret
loope
cmc
arpl
sub
fdivrs
mov
mov
fsubs
out
dec
mov
nop
inc
push
sub
lock
inc
ljmp
data16
mov
orb
lds
add
sub
mov
pop
xor
imul
mov
ffreep
dec
or
xchg
xor
nop
inc
cwtl
das
and
adc
lahf
xchg
lods
xchg
fidivrs
mov
dec
cs
cmp
test
imul
jbe
mov
lds
adc
sbb
mov
mov
pop
cli
push
pop
mov
mov
test
jmp
mov
and
fcompl
xchg
push
pop
add
scas
pop
lds
shrb
ss
cld
push
mov
jmp
sbbl
dec
pop
outsb
cmp
leave
les
inc
popa
inc
bswap
inc
jns
inc
dec
fwait
sbb
sbb
xor
mov
cmpsl
mov
movsl
xor
daa
xor
sub
adcb
xchg
inc
pop
mov
data16
jecxz
sbb
std
sbb
sbb
std
lcall
push
sub
pop
and
insl
add
cmp
mov
in
xchg
cmp
dec
xchg
jne
mov
scas
mov
ljmp
cmp
ljmp
das
mov
mov
add
mov
scas
sahf
inc
lds
jecxz
ja
xchg
cmp
arpl
iret
add
popa
nop
out
outsl
and
xor
mov
repnz
inc
mov
pop
push
add
and
mov
jo
push
aad
imul
ss
mov
xchg
xor
je
mov
cmpsb
aas
fwait
cmp
sub
imul
daa
dec
js
enter
test
in
push
orb
push
pop
xchg
stc
pop
mov
mov
test
cli
pop
xor
xchg
mov
jnp
push
mov
cmpsl
das
enter
loopne
mov
add
cli
jge
sub
mov
xor
push
pop
jno
jb
push
or
sarl
adc
adc
jge
ret
insl
repz
inc
xchg
test
xchg
dec
push
mov
stos
lods
xor
jge
test
jno
into
xchg
out
orb
add
imul
sbb
pop
cwtl
cmp
lock
adc
cld
adcl
cld
push
aad
inc
pmaddwd
adcl
cmpsb
xor
inc
adc
and
lret
cmp
xor
inc
inc
xchg
jbe
or
lock
mov
lock
clc
fiadds
sbb
push
jmp
ret
js
mov
lahf
popa
sti
pop
push
enter
push
dec
or
cltd
sub
mull
sahf
pop
out
test
inc
push
add
movsb
out
addr16
test
mov
sub
jge
pop
push
mov
inc
in
jae
repz
bswap
jo
daa
mov
imul
addr16
mov
mov
enter
enter
fidivrl
test
mov
daa
mov
popf
inc
and
jb
je
add
inc
push
mov
mov
and
pop
add
xor
js
mov
scas
mov
mov
mov
sub
mov
inc
inc
or
out
addr16
test
clc
push
add
pop
aam
push
sub
sarl
nop
popf
cmp
push
out
push
jnp
lret
pop
stc
jb
xchg
inc
cli
imul
out
inc
fnstsw
mov
pop
lock
mov
movsl
xchg
inc
rcrl
cmp
xor
popa
stos
cmp
scas
jne
loope
data16
clc
add
push
jmp
je
jnp
insb
cmc
clc
imul
push
cmp
mov
aam
sub
lods
pop
jne
add
out
aaa
pop
std
shll
call
dec
dec
rcrl
xchg
les
pushf
mov
scas
push
cld
xor
loope
fisubs
aam
test
negl
mov
orl
negb
pop
movsl
sub
aad
in
ja
jl
cmp
push
mov
dec
xchg
lods
inc
adc
dec
lret
or
mov
pusha
add
push
loop
mov
ljmp
fadd
mov
mov
sbb
jg
jo
mov
sbb
and
mov
outsl
out
icebp
stos
and
pop
lret
mov
imul
ret
jmp
sbb
xchg
cmp
or
test
mov
scas
mov
arpl
mov
into
xchg
mov
mov
jmp
jno
jno
sub
and
fs
jno
jns
data16
orb
mov
mov
dec
adc
fiaddl
jg
mov
dec
sti
ljmp
sub
roll
jge
fiadds
iret
or
add
jns
hlt
pusha
add
movsl
sub
jecxz
ss
out
shrl
lds
lret
mov
ret
pop
and
dec
pushf
clc
into
xchg
push
mov
fists
lods
adc
fs
inc
outsl
cmc
addl
rorb
nop
jns
inc
stc
add
test
jne
xchg
cltd
cmp
pop
fnstcw
js
out
out
jbe
hlt
and
test
jg
jo
and
cmpsl
test
cld
int3
cld
mov
add
inc
pushf
mov
into
popa
push
cli
sbbb
sbb
cmp
dec
notl
sbbb
inc
mov
mov
outsl
ds
nop
out
add
stos
jmp
sti
stc
fs
inc
or
mov
mov
adc
les
negb
push
push
repnz
addl
pop
adc
xor
inc
fisttpl
sub
scas
mov
inc
xor
jmp
repnz
js
xchg
cmpsl
fdivrs
cltd
mov
rolb
cmc
dec
add
xchg
lock
cmpsb
int3
xor
lds
int
pop
mov
lret
sarl
inc
xor
add
pop
nop
inc
les
push
mov
sbb
and
ds
je
shll
xchg
adc
jo
cli
dec
or
popa
hlt
pop
insb
push
push
mov
mov
sub
xchg
call
fimull
and
sbb
inc
int3
cmp
std
arpl
jno
out
popa
call
dec
inc
lea
add
orb
stos
sbbl
jge
mov
add
pop
cmpsl
push
test
mov
add
out
inc
pop
and
data16
lods
sub
jb
or
sbb
add
pop
je
cmp
sbb
and
rcll
aaa
movsb
mov
mov
xchg
inc
scas
mov
lret
lfs
sbb
lret
fidivrl
mov
adc
mov
add
mov
mov
lret
or
rcr
jbe
add
push
jmp
add
popf
push
addr16
leave
mov
jmp
int3
mov
pop
adc
dec
or
dec
mov
clc
mov
shlb
stos
push
out
mov
lods
jg
jns
pop
out
lds
test
lock
pop
push
push
or
adc
repnz
mov
mov
xchg
icebp
push
mov
scas
mov
ss
add
negl
int3
xchg
gs
shll
jne
fs
pop
les
and
adc
inc
or
jmp
std
add
pushf
push
inc
or
aas
inc
arpl
in
test
imul
mov
ja
call
outsb
xchg
sub
adc
inc
mov
out
es
jns
adc
inc
popf
inc
xchg
popf
aam
subl
inc
aaa
lcall
pop
add
fs
arpl
jo
or
cmp
mov
sub
pusha
sbbb
popa
cmpsb
mov
lret
jmp
xlat
scas
dec
adc
add
je
std
xchg
cmp
sbb
in
sahf
inc
lahf
repnz
pushl
mov
lods
loop
fstps
jl
imul
push
std
pop
xchg
push
mov
push
cmpsl
or
push
std
add
xchg
inc
xchg
xchg
sbb
fidivrs
inc
dec
pop
and
outsb
jmp
aas
inc
adc
fidivrs
xor
jnp
push
leave
cltd
xor
sbbb
sub
stc
pusha
xor
xchg
cmp
and
into
das
sti
negl
ds
clc
mov
lods
rorl
inc
orb
dec
push
stos
mov
xchg
insb
mov
pop
js
xchg
popa
sub
stc
lea
pop
loope
outsl
cmp
fdivrl
loop
ss
icebp
push
push
jp
xor
icebp
sub
jge
sbb
jecxz
mov
mov
xlat
outsb
sub
fsubrs
dec
popf
inc
xor
lea
shll
insl
in
add
shl
inc
or
out
jb
pop
cltd
inc
jbe
jae
jbe
call
cmc
pop
subb
daa
jns
lods
jecxz
cmp
inc
dec
add
ja
rorb
jbe
sbb
leave
jecxz
je
xchg
inc
fldcw
mov
shlb
iret
adc
pop
aam
popf
push
fimull
or
je
adc
push
out
mov
rcrl
int3
jmp
push
cmc
pop
cmp
xor
cs
or
pop
clc
mov
fdivrl
scas
xchg
inc
add
push
les
iret
fidivrs
movsb
mov
push
push
jo
mov
push
xor
mulb
sub
push
mov
sbb
retw
or
mov
cmpsb
icebp
mov
sbb
fsubp
popf
sbb
cmp
movsl
push
sub
lret
pop
mov
cltd
jno
jp
or
fsts
enter
mov
sahf
inc
stos
jo
lods
mov
cs
fsubl
push
into
xchg
xlat
imul
int3
inc
adc
mov
repnz
sub
ret
push
add
sbb
jo
or
je
jecxz
ficoml
pop
sahf
mov
fists
jb
jl
or
imul
inc
ss
ret
sbb
test
adc
xchg
aaa
xor
mov
mov
orl
xchg
inc
icebp
movsl
pop
cld
inc
ljmp
pop
movsb
add
movsl
pop
in
fdivrs
xor
mov
add
push
or
pop
or
aad
xchg
cmp
add
in
add
imul
out
jecxz
and
or
cs
mov
sbb
gs
outsl
xor
mov
je
shl
gs
jns
inc
pop
ja
addr16
jne
xor
sub
mov
in
mov
aam
push
add
popa
cmc
cld
test
adc
mov
jmp
ljmp
jmp
rorb
push
stos
xor
dec
movsb
push
aam
mov
adc
rolb
lahf
cmp
popa
in
jno
or
lcall
xchg
push
jmp
cmp
test
jl
push
inc
or
jbe
mov
xchg
sub
jns
aam
inc
insl
repnz
and
xor
icebp
je
and
out
mov
add
xchg
add
imul
inc
mov
shl
push
inc
fiaddl
aam
clc
add
push
inc
or
cmp
cwtl
mov
mov
aam
out
out
dec
negl
rcrb
push
sbb
dec
rolb
mov
testb
fdivrs
sbb
adc
adc
adcb
gs
stos
scas
inc
dec
in
sarb
lahf
sbb
mov
dec
inc
or
and
jle
mov
inc
or
sarb
adc
fdivs
imul
mov
jo
fildl
sub
js
push
xchg
push
fstl
xlat
push
or
or
xchg
pop
dec
adc
es
pushf
mov
mov
cmpsb
andb
jo
dec
mov
hlt
pop
je
mov
ror
mov
hlt
pop
adc
scas
leave
dec
stc
pop
xor
rcll
out
xchg
inc
pop
lds
fwait
cmp
fwait
das
lods
dec
dec
xchg
xchg
mov
fsts
lret
jecxz
aaa
mov
imul
cmpsb
movsb
adc
mov
inc
push
or
aam
pop
mov
xchg
arpl
movb
fdivrs
pushf
cmp
lcall
int
pop
decb
fdivrs
xchg
aad
lea
or
xor
jb
gs
dec
loopne
push
nop
daa
mov
mov
ljmp
xlat
jle
into
out
add
push
roll
ss
xchg
repz
hlt
cltd
loop
js
int3
cwtl
inc
arpl
lret
lea
inc
pop
mov
test
or
push
mov
cmp
push
add
cli
mov
mov
or
cmp
lods
sub
xor
imul
inc
push
mov
mov
add
mov
fucomip
imul
int
fucomip
sahf
cmp
add
int3
and
push
ljmp
push
not
mov
and
test
jmp
mov
pushf
inc
pop
lahf
push
cld
rorl
or
xchg
cmpsl
sub
dec
mov
pop
push
mov
mov
jl
in
jb
push
mov
jecxz
add
push
pop
push
and
and
pop
sub
lahf
mov
mov
bswap
xor
insl
in
popa
das
popf
cmp
push
sahf
stc
pop
mov
pop
aad
mov
fisubrl
call
arpl
clc
pop
iret
lcall
inc
dec
cwtl
das
jge
ret
mov
scas
xor
cli
cmc
cld
popa
adc
inc
add
push
push
mov
mov
or
adc
out
mov
mov
fsubr
push
xor
mov
testb
loop
orb
inc
adc
mov
testb
fs
ljmp
aad
add
or
popf
popa
push
stc
iret
leave
ss
pushf
sbb
lods
sbb
loopne
adc
mov
dec
lcall
insl
xor
jno
movsl
jl
jg
lods
insb
and
subb
dec
jg
pop
pop
xor
jae
in
cmp
pop
in
and
add
pop
sahf
sbb
orb
mov
fildll
mov
ljmp
or
pushf
adc
mov
stos
lcall
cli
and
dec
cmp
push
xchg
add
loope
xchg
inc
sar
jo
stc
or
data16
fisttps
shr
addr16
xchg
xchg
inc
push
outsl
arpl
xchg
movsb
lock
nop
movsb
xchg
inc
fmul
sub
inc
out
sub
mov
cmp
pop
lds
xchg
cmp
inc
add
lahf
jg
and
outsb
in
out
mov
mov
dec
jecxz
stos
mov
add
cld
add
pusha
pop
aaa
lcall
pop
enter
lea
adc
outsb
and
inc
testb
add
push
mov
int
das
test
push
andb
push
add
xchg
mov
ret
jmp
sbb
mov
lods
jne
lahf
inc
pop
bound
dec
orl
loop
mov
pop
or
cmpb
in
imul
dec
or
roll
into
jg
rol
push
push
mov
rorb
cwtl
sbb
test
rol
cmc
dec
fnstenv
push
les
ds
fldl
mov
mov
andb
sub
add
sbb
mov
scas
mov
addr16
repz
inc
in
loop
jbe
test
ja
icebp
adcl
popa
icebp
shrb
lock
mov
imul
xchg
filds
out
rcrb
mov
mov
sbb
cmp
lret
lcall
mov
cmpsl
cmp
xor
jno
dec
cmpsb
das
jno
xchg
aas
mov
mov
sub
data16
fs
mov
lods
stos
or
scas
sti
mov
in
std
fs
stc
pop
add
push
clc
pusha
std
mov
sub
in
pop
add
mov
movsl
sub
rorb
popa
out
and
aaa
mov
or
mov
insl
jmp
stos
cld
pop
mov
dec
jmp
hlt
adc
rorb
mulb
mov
cmp
ja
shrl
cvtps2pd
and
mov
jp
repnz
inc
pop
in
int
out
shlb
icebp
shlb
adc
pop
xchg
cmpsb
cs
inc
pmullw
lahf
or
in
and
insb
lock
xor
std
insl
or
mov
jmp
mov
sahf
test
in
jle
psrld
imul
call
adc
pushf
xchg
repz
scas
lret
push
cmp
fdivr
cmp
fwait
stc
jno
mov
mov
imul
push
sti
cmp
inc
or
orl
pop
push
cmp
sub
dec
imul
jo
mov
rcrl
clc
pop
xchg
inc
xchg
inc
lods
int
int3
mov
xchg
je
in
inc
push
loopne
xchg
gs
add
pop
js
add
mov
icebp
gs
lods
inc
inc
fldt
in
lret
bound
dec
sub
repnz
rcrl
cmp
pop
mov
stos
or
subb
stos
push
rcrl
sub
sarl
xor
pop
sbb
mov
inc
or
mov
int
mov
pop
pop
or
lods
outsl
mov
push
leave
popa
or
outsb
adc
jg
js
jl
out
sbb
sti
ja
fnstenv
lret
jo
mov
adc
inc
lds
faddl
lods
xor
and
aaa
sbb
sub
cmp
mov
scas
movb
loopne
mov
pop
ret
sub
pop
std
pop
mov
mov
mov
lods
cmp
idivl
mov
fnstcw
int
dec
or
bswap
ljmp
push
aaa
lods
pop
cli
loop
loopne
js
dec
or
ret
scas
out
in
insl
mov
xchg
in
popf
xor
cmc
sbb
cmp
cmp
mov
das
insb
repz
push
xchg
fists
pop
xchg
fldl
add
filds
lds
sub
or
outsl
out
arpl
push
mov
test
cmpsl
cli
fs
add
and
xlat
fdivrl
stos
fisubrl
cwtl
lcall
mov
mov
push
cli
inc
imul
push
cli
xchg
out
repnz
int3
or
ss
gs
jle
jl
sahf
popa
cs
adcb
mov
push
jbe
je
add
xor
and
push
sub
inc
or
cmp
ljmpw
jg
cwtl
inc
inc
or
outsb
ljmp
jb
cmp
test
cli
xchg
aas
bound
push
loope
push
xchg
daa
aad
pop
aaa
sub
adc
xchg
cmp
movsl
add
out
lret
repz
add
mov
adc
call
add
rorl
xchg
push
popl
leave
ret
xchg
xor
sbbb
aad
mov
testb
mov
push
in
adc
cmpsb
jae
fsubs
std
xchg
or
ret
jae
inc
pop
es
xchg
dec
or
gs
xor
and
push
mov
sbb
mov
jo
cmp
mov
movsl
pop
pop
or
pop
addl
loop
stos
sub
pop
cld
in
ja
cmp
cmc
aas
sahf
push
fs
add
mov
adcl
cmpsb
xor
xlat
sarl
and
nop
inc
ja
cs
subb
sbb
pop
sti
popf
inc
and
pop
test
gs
clc
pop
lret
xchg
add
mulb
mov
push
int3
cmpb
and
and
dec
or
dec
pop
cli
pop
addr16
cmp
push
fidivrs
pop
stc
ljmp
pop
adc
add
ret
jno
adc
dec
or
or
jp
or
xchg
sbb
cmpsb
xor
pop
inc
and
xchg
pop
decl
mov
mov
scas
push
cld
in
aad
xor
lcall
out
mov
stc
sbb
jbe
sahf
mov
push
add
scas
iret
xchg
push
imul
in
insb
jmp
and
cmp
add
insb
test
add
idivl
adc
outsb
add
push
mov
mov
stc
xlat
icebp
lea
add
dec
push
inc
sbb
enter
mov
add
in
jbe
pop
popa
jmp
lods
add
push
mov
orl
ret
add
out
fneni(8087
imul
push
shrl
fadds
aad
mov
sub
loope
outsl
adc
jp
inc
negb
shl
ret
bound
stos
lds
repz
repnz
mov
mov
subb
cmp
and
cmp
arpl
sub
in
les
not
sbb
mov
add
cmc
pop
std
dec
jnp
jg
xor
and
dec
in
hlt
mov
es
insb
add
inc
aad
jns
mov
sbb
test
insb
out
adc
rolb
jno
in
adc
add
pop
xchg
mov
cmp
aad
mov
repz
ffreep
pop
adc
adc
rcrl
cwtl
mov
mov
push
fcomps
mov
js
imul
repnz
jl
repnz
push
adc
add
mov
ret
dec
in
je
dec
cmpsb
adc
shrl
push
repnz
aas
in
insl
adc
inc
mov
in
xchg
adc
inc
mov
lcall
and
call
or
cmc
fistpl
mov
jl
cs
jnp
dec
lcall
mov
and
daa
test
mov
pop
hlt
sub
adc
xor
pop
mov
dec
in
repz
and
inc
aad
js
mov
sbb
test
imul
test
pop
mov
loopne
jnp
xchg
dec
in
xor
cltd
fs
add
xchg
mov
aaa
mov
imul
cmpsl
ds
faddp
pop
adc
adc
rcrb
cwtl
mov
mov
push
xlat
pop
mov
ja
imul
repnz
jnp
repnz
sbb
jns
ljmp
mov
rorl
jae
dec
movsl
adc
aam
clc
data16
cwtl
sbb
mov
test
jmp
adc
ds
in
xchg
adc
inc
mov
lcall
and
out
inc
xlat
xchg
test
cmc
fstps
pop
cli
jl
sub
in
loope
lcall
mov
and
and
inc
hlt
mov
pop
cmc
sub
jl
jge
xor
sbb
ds
in
repnz
add
inc
insl
ja
mov
push
cltd
hlt
mov
aaa
test
imul
pop
mov
fsubp
jnp
xchg
dec
in
xor
cltd
test
mov
mov
push
mov
repz
ffree
pop
jp
lods
xor
jnp
into
cwtl
das
add
dec
push
and
cmpsl
sub
aad
enter
jp
rep
sbb
test
int3
jp
insl
das
sahf
pop
cltd
xor
dec
in
jb
dec
movsb
adc
vpunpcklqdq
mov
xchg
sbb
mov
test
jmp
or
pop
cmp
xor
out
pop
in
cmovg
inc
mov
lcall
and
out
inc
xlat
test
stos
inc
cmp
enter
jl
sub
lcall
sahf
mov
mov
and
hlt
mov
pop
imulb
cwtl
adc
jl
xor
sbb
dec
in
icebp
mov
add
inc
xlat
outsb
jbe
mov
adc
cmc
mov
xor
adc
mov
fsub
jnp
nop
dec
out
das
add
adc
and
addr16
aad
mov
repz
fadd
pop
push
jns
adc
int3
cwtl
das
incb
mov
push
aam
mov
movsl
es
push
repz
js
hlt
test
lret
cld
imul
pushf
sbb
dec
in
jo
dec
mov
ret
insl
cmc
bound
mov
test
stos
lcall
enter
jge
or
add
fistps
add
xor
inc
fadds
movsb
pop
not
pop
leave
pusha
mov
jge
sub
xor
add
push
iret
push
and
and
mov
pop
mulb
xchg
adc
jp
xor
sbb
out
out
mov
add
inc
xlat
outsb
je
mov
adc
test
stos
sbb
xor
insb
frstpm(287
jl
mov
mov
loopne
add
andl
and
aas
add
test
hlt
push
fcmovb
pop
or
jnp
stos
sub
cltd
xor
addb
mov
mov
mov
movsb
and
push
divl
hlt
cmpsl
sbb
stos
dec
enter
push
enter
xor
dec
out
outsb
mov
add
repz
mov
xchg
adc
mov
stos
inc
out
adc
cmp
out
mov
push
out
lods
add
add
xor
inc
fadds
mov
leave
pusha
mov
jge
daa
stos
out
fisttpll
xor
add
push
into
push
and
and
cmc
mov
mulb
xchg
adc
jns
xor
sbb
dec
out
out
mov
add
inc
xlat
outsb
jae
mov
adc
test
stos
sbb
xor
imul
jl
lea
mov
fildll
adc
mov
sarb
add
pop
hlt
push
fld
pop
or
adc
lret
cld
jg
lcall
and
mov
hlt
mov
jne
hlt
cmpsb
pop
adc
stc
imul
xor
out
insl
mov
add
repnz
mov
xchg
adc
mov
stos
inc
in
adc
cmp
out
mov
push
out
lods
add
add
das
mov
and
push
inc
fadds
mov
leave
pusha
mov
jge
es
out
faddl
xor
add
push
int
and
and
cmc
mov
pop
mulb
inc
jge
js
xor
sbb
dec
out
in
mov
add
inc
xlat
outsb
jb
mov
adc
inc
fs
stos
sbb
xor
push
in
or
lcall
and
arpl
aas
add
pop
hlt
push
fadd
pop
or
adc
leave
cltd
xor
jle
lcall
and
mov
ret
hlt
mov
je
hlt
movsl
push
adc
clc
push
lcall
insb
mov
add
icebp
pop
mov
xchg
adc
mov
inc
in
adc
aaa
mov
enter
jle
or
cmp
outsb
add
cs
mov
loope
inc
fadds
mov
leave
pusha
xchg
jge
and
inc
fwait
xor
add
push
int3
dec
and
pop
mov
cmc
mov
pop
mulb
adc
ja
xor
pop
cltd
fwait
xor
cmp
imul
insl
add
aas
xlat
outsb
jno
mov
adc
test
stos
pop
test
pop
mov
xor
imul
dec
out
sub
lcall
and
sarb
add
hlt
push
xlat
pop
or
adc
enter
jge
lcall
and
mov
ret
hlt
jae
hlt
movsb
adc
jnp
mull
enter
xor
dec
out
imul
cmp
pop
mov
nop
adc
mov
stos
inc
jecxz
adc
ss
enter
jle
or
cmp
outsb
add
sub
dec
inc
fdivrs
stos
inc
xor
leave
pusha
xchg
jge
and
out
fiaddl
xor
add
push
lret
dec
and
push
mov
cmc
mov
pop
mulb
xchg
adc
jbe
xor
push
cwtl
fwait
xor
aaa
dec
out
jmp
push
sbb
xlat
outsb
jo
mov
setb
mov
xor
stos
push
test
pop
mov
xor
push
mov
mov
fsubrl
push
jge
mov
popa
iret
aas
add
pop
hlt
push
pop
or
cmpsb
sub
jl
cltd
xor
jl
lcall
and
lahf
and
push
shl
bnd
cmc
mov
les
gs
xchg
pop
fwait
xor
dec
out
push
push
pushf
or
cmp
mov
mov
testb
arpl
xchg
add
pusha
xor
xor
out
out
xchg
push
call
fstps
push
mov
and
fisttps
jge
lods
inc
xor
lret
lock
and
fwait
xor
push
popf
sub
and
jge
xlat
outsb
sbb
inc
fnop
cmp
pusha
mull
xchg
adc
jne
xor
adc
pushf
xor
xor
mov
add
cmp
mov
or
cs
stos
adc
ss
addr16
jl
mov
mov
fldt
or
mov
pusha
int
incb
pop
cmc
push
aam
pop
push
jb
adc
lcall
sbb
mov
popf
push
inc
fmuls
cmc
mov
jo
mulb
ret
hlt
arpl
leave
xchg
adc
push
out
push
outsl
push
cmp
lea
push
testl
xchg
add
popa
xor
call
jmp
xlat
push
jo
mov
and
sub
inc
fnstcw
lods
inc
xor
lret
out
jle
and
pushf
xor
popf
sub
and
jnp
fsubrs
popf
inc
fxch
cmp
lea
pusha
mull
nop
adc
roll
jae
xor
adc
push
out
call
outsb
add
insl
fimull
shrl
stos
adc
xor
gs
jge
xchg
mov
fldcw
or
mov
pop
int3
inc
xlat
std
jg
inc
mov
pop
testb
pop
add
jge
mov
les
fwait
test
lret
sti
push
outsl
pushf
sbb
fmuls
testb
adc
adc
bound
lret
pushf
xor
push
call
cwtl
push
jo
cmp
mov
lods
lods
inc
ficomps
lods
nop
dec
popa
xor
call
jmp
push
jo
mov
and
sub
inc
fnstcw
lods
inc
das
pushf
pusha
test
out
jle
and
xor
push
popf
sub
and
jp
fsubrs
pushf
inc
fxch
cmp
lea
pusha
negl
adc
rolb
jb
xor
adc
out
out
push
sbb
fsubrs
shrb
pop
loope
stos
adc
xor
fs
jge
xchg
mov
add
push
fsubrs
or
mov
pop
lret
inc
xlat
cld
jle
inc
mov
pop
testb
pop
add
adc
and
jge
ret
fwait
xor
ja
fwait
test
mov
mov
fwait
sbb
dec
mov
pop
negb
mov
xor
xchg
adc
in
mov
pop
aaa
mov
mov
cmp
pop
adc
popa
xor
call
jmp
aad
jo
xchg
and
daa
test
inc
fnstcw
lods
inc
cs
pusha
test
in
jle
pop
mov
pushf
xor
push
popf
daa
xchg
mov
mov
sbb
testb
mov
mov
loopne
leave
adc
push
out
out
push
sbb
fsubrs
fmuls
mov
loopne
stos
adc
pop
mov
xor
arpl
out
add
push
out
and
outsb
add
test
lret
sti
jge
inc
scas
sbb
testb
pop
add
adc
and
jge
ret
hlt
jbe
fwait
cmpsl
adc
and
lcall
in
insb
pop
negb
mov
xor
xchg
adc
jecxz
mov
pop
ss
outsl
jmp
or
mov
lods
inc
fcompl
lods
mov
lret
mov
lret
call
jmp
aam
jo
xchg
and
es
and
js
lods
inc
sub
dec
lret
in
jle
push
mov
pushf
xor
push
popf
es
mov
mov
sbb
testb
lea
mov
fbstp
leave
adc
push
out
in
push
pop
test
mov
fsubrs
xlat
mov
or
inc
pop
fists
adc
pop
mov
xor
test
mov
add
push
outsb
add
test
mov
pop
leave
inc
xlat
cli
jl
inc
scas
sbb
dec
iret
enter
jge
mov
rcrl
cmpsb
adc
push
inc
and
cltd
sbb
dec
mov
pop
negb
jge
out
pop
xor
nop
adc
loop
mov
pop
xor
push
mov
cmp
adc
popa
cs
xor
loopne
call
jmp
rcll
pop
test
and
and
inc
inc
fnstenv
lods
inc
sub
pusha
test
jmp
adc
sarl
pushf
xor
push
popf
and
inc
and
ja
fsubrs
cltd
inc
fxch
cmp
lea
pusha
negl
adc
mov
fidivs
leave
setno
popa
in
push
push
subl
aaa
fsubrs
mov
or
stos
inc
pop
ficoms
enter
xor
popa
shl
jge
adcl
and
push
aad
add
cmpsl
sub
stc
jnp
inc
lods
sbb
dec
into
enter
jge
lahf
and
jge
rcrb
movsl
adc
mov
cwtl
sbb
dec
mov
pop
negb
mov
xor
setl
inc
mov
call
xchg
add
xor
fsubrs
push
mov
cmp
adc
popa
sub
dec
call
jmp
rclb
pop
test
and
and
mov
jbe
lods
inc
sub
lret
ljmp
sarb
push
popf
and
mov
mov
push
cwtl
inc
fxch
aaa
testb
mov
mov
fnsave
leave
push
nop
pushf
xor
das
push
out
jecxz
push
adc
fsubrs
aad
and
mov
lea
adc
push
jl
pop
scas
das
xor
pusha
iret
out
add
add
push
aam
add
cmpsb
daa
mov
pop
movl
lods
sbb
dec
int
pop
ljmp
adc
and
jle
mov
add
push
inc
lds
mov
xchg
pop
inc
testb
or
adc
lea
popf
xor
scas
push
call
xchg
add
xor
and
cmp
push
lods
mov
lret
lods
xor
fimuls
jle
push
jmp
rcll
pop
xor
mov
xlat
inc
inc
fnstenv
lods
inc
sub
lret
jmp
call
xor
push
popf
and
and
jne
fsubrs
xchg
inc
fxch
testb
mov
mov
fdivl
leave
or
cs
out
loop
push
adc
outsb
add
addr16
and
mov
lea
fcoml
or
cs
pop
into
out
add
add
push
shrl
add
mov
pop
movb
jns
inc
stos
sbb
dec
int3
enter
jge
pushf
pop
out
push
mov
add
push
inc
les
mov
xchg
push
inc
flds
testb
or
adc
mov
push
call
xchg
ljmp
xor
and
pop
clc
cmp
push
lods
mov
leave
pusha
sub
out
jge
push
jmp
rclb
pop
xor
mov
xlat
inc
inc
fdivs
inc
sub
lret
call
call
xor
push
popf
and
and
jne
xlat
outsb
adc
inc
fxch
xor
pusha
negl
mov
stos
mov
enter
xor
sub
mov
add
xor
mov
add
es
stos
or
cs
pop
int
jl
adcb
and
push
shrb
add
and
push
lds
idivb
inc
stos
pop
pop
testb
pop
std
imul
push
mov
add
push
inc
ret
and
xchg
adc
testb
or
adc
mov
call
xchg
outsl
push
xor
lea
push
clc
cmp
lods
mov
leave
pusha
sub
jle
push
jmp
iret
push
jo
xor
mov
inc
inc
fdivs
lods
inc
sub
lret
out
adc
sahf
call
xor
popf
and
and
sbb
xchg
sbb
mov
dec
mov
ss
xor
jge
dec
fst
inc
jecxz
daa
or
out
sbb
mov
pop
xor
ss
xchg
imul
sti
cld
sub
xor
cmp
add
iret
scas
push
push
xchg
push
daa
cs
and
movsl
pushf
push
xchg
mov
jl
imul
repz
sbbb
popa
int3
sub
inc
insb
dec
and
push
and
stos
ss
mov
mov
and
dec
in
aas
daa
pusha
or
xchg
aad
fistpll
inc
xor
jns
ficoms
call
inc
rcrb
jbe
cmc
push
scas
sbb
cltd
cmp
cmp
mov
jecxz
mov
xlat
jge
scas
lea
xchg
sbb
xchg
pop
in
xchg
mov
test
movsl
insb
in
add
sbb
loop
inc
lahf
js
movsb
loopne
enter
mov
xchg
aaa
test
inc
in
push
das
and
mov
xchg
outsb
pop
stos
imul
lahf
ja
adcl
jp
shlb
push
sub
es
outsl
in
rcrb
in
andb
sub
fwait
scas
sub
es
xchg
jbe
loope
pop
mov
and
cli
shrb
or
adc
hlt
int
mov
fcmovu
push
in
sub
out
jecxz
xchg
ds
push
sbb
pushf
or
les
stc
lock
into
mov
adc
mov
or
orb
leave
outsb
repz
ljmp
stos
jo
into
or
sbb
cltd
inc
mov
push
aaa
xor
mov
fstps
add
push
ljmp
xor
jbe
aam
add
add
add
and
add
add
or
test
add
add
adc
add
add
or
push
add
and
add
add
add
add
add
sub
mov
xchg
sbb
stos
pushf
icebp
repnz
dec
add
cmp
inc
out
pop
adc
cmp
and
cld
ja
test
mov
loope
xor
jns
xchg
mov
cli
mov
cli
arpl
mov
daa
and
fnstenv
movsl
mov
xorl
imul
mov
mov
cmp
dec
lds
in
aad
and
or
mov
adc
pushf
in
mov
sub
subb
std
nop
cmp
mov
or
idiv
pop
dec
mov
dec
ss
out
cmp
je
stos
ljmp
xor
loopne
mov
jmp
sub
stos
inc
mov
or
in
mov
sbb
shl
jl
xor
xorl
jo
pop
mov
jne
xor
mov
or
or
xchg
jle
push
mov
cmc
and
push
jae
jg
adc
sub
dec
inc
adc
xor
into
popf
jbe
int
push
inc
jne
enter
nop
add
jmp
and
je
push
cwtl
popf
jle
inc
inc
ds
add
lret
and
ret
push
sbb
dec
push
dec
mov
jb
shrb
fs
popf
sub
cmpsb
lret
mov
in
sbb
adc
adc
std
shlb
pop
sub
dec
sbb
in
dec
pop
sbb
push
imul
cmp
xchg
mov
inc
cmp
xchg
les
test
ja
inc
lret
incl
repz
cmp
cmpsl
cwtl
clc
cli
cwtl
cmpsl
xor
lock
repz
cmpsl
cmpsl
pop
sub
test
mov
mov
fsub
pop
jmp
mov
aad
or
stc
xor
int
loope
stc
adc
mov
imul
nop
push
jg
push
cli
xchg
imul
pop
xchg
shll
lahf
call
fcoml
jecxz
rcr
test
les
lea
arpl
add
dec
sub
or
test
or
xchg
icebp
fadds
arpl
lods
xchg
xchg
mov
leave
mov
ja
mov
jo
addb
jbe
pop
jne
lcall
mov
repnz
push
idiv
test
push
aam
cmp
jle
pop
outsb
or
dec
lret
jne
jle
lret
jp
adc
popa
xchg
jns
mov
ljmp
mov
iret
add
sbb
in
jecxz
test
out
out
inc
shr
cmp
call
shlb
aad
es
sbb
pop
lcall
jp
mov
sub
add
pop
inc
xchg
push
pop
add
inc
jg
inc
push
nop
xchg
inc
mov
fmull
enter
inc
mov
add
sub
in
mov
mov
aas
rorl
into
rolb
inc
sbbl
jl
fwait
decl
repz
fbstp
push
fcmovnbe
ror
imull
mov
clc
iret
cwtl
mov
rcrl
enter
cmpsl
or
mov
sbb
fisttpll
out
mov
loop
cmp
fsubl
dec
or
pop
mov
repz
js
cmp
pop
roll
es
movsl
das
shlb
lret
aas
shlb
or
push
xchg
ret
or
imulb
into
xchg
xchg
ljmp
inc
in
int
add
cmpsb
ss
sub
sub
pusha
mov
pushf
icebp
dec
int3
pushf
push
pop
je
mov
mov
mov
rorb
cmp
xor
mov
sub
lea
imul
lods
xor
mov
in
mov
cs
xor
adc
stos
stos
mov
xor
push
les
mov
jge
inc
push
sub
iret
shlb
jae,pn
lea
lret
add
mov
xor
xchg
xchg
lcall
mov
ja
mov
mov
xchg
pop
stos
jo
shll
and
aad
int3
aad
stos
fsub
test
adc
loope
mov
fildll
and
dec
lret
cltd
fs
fs
out
out
icebp
test
icebp
test
sbbl
movzwl
xchg
adc
bound
sbb
call
cmp
lcall
pop
jnp
iret
ljmp
fucomi
mov
push
out
dec
stos
daa
out
adc
adc
sub
lods
pop
adc
mov
xor
push
mov
or
mov
jp
pusha
dec
jae
and
xor
dec
cmp
aaa
cmp
push
pop
fistpl
mov
jle
mov
and
shll
lds
aad
stos
aad
inc
xor
push
add
push
pusha
or
mov
jmp
rol
fimuls
mov
incb
jmp
lret
adc
mov
sbb
or
or
test
mov
loope
xlat
repz
jle
sbb
add
insl
fisubrs
jne
cmp
out
cli
and
int
push
int
push
xchg
jmp
rclb
mov
shl
jb
adc
jb
divb
adc
test
push
inc
jb
lret
xor
add
dec
dec
in
add
test
popa
adc
in
lock
int
lret
stc
aaa
aad
push
lret
sub
inc
xchg
pop
push
jne
jbe
jbe
and
test
sbb
test
jp
push
incl
xorb
loopne
xchg
mov
mov
mov
out
add
dec
add
sbb
jl
arpl
jl
popf
adc
jo
stos
jle
sahf
sub
adc
mov
dec
mov
adc
mov
orb
icebp
xor
xorl
int3
pop
mov
pushl
mov
pop
pop
jge
mov
push
sbb
sar
ss
std
dec
icebp
mov
mov
arpl
add
push
push
imul
push
push
fcompl
imul
push
fcompl
insb
insl
sbb
push
pop
fcompl
insl
outsb
sbb
pop
pop
fcompl
outsb
stos
and
pop
pop
call
call
in
mov
jb
test
mov
sub
jecxz
mov
mov
test
lret
lods
xor
jp
