push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
pop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
stos
stos
xor
mov
mov
pusha
call
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
jmp
ret
cld
xor
lea
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
clc
popf
push
pushl
decl
ret
pop
pop
push
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
push
mov
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
enter
add
add
mov
add
and
add
and
add
and
add
add
ljmp
add
add
sbb
add
sub
add
fsubl
add
shlb
add
lock
add
and
add
and
add
and
add
add
add
add
xchg
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
fsubl
add
mov
add
add
add
ds
add
add
push
and
add
and
add
add
add
add
add
and
add
and
add
and
add
add
sbb
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
add
mov
add
and
add
and
add
and
add
add
ljmp
add
add
sbb
add
sub
add
fsubl
add
shlb
add
lock
add
and
add
and
add
and
add
add
add
add
xchg
and
add
and
add
and
add
and
add
and
add
add
dec
and
add
add
fsubl
add
mov
add
add
add
ds
add
add
push
and
add
and
add
add
add
add
add
add
popa
jo
jb
add
xchg
add
je
jne
jb
outsb
je
push
add
push
add
outsl
jae
dec
popa
outsb
fs
add
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
aad
inc
imul
gs
add
je
imul
bound
gs
add
addl
jb
popa
je
inc
imul
jns
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
inc
gs
je
dec
popa
outsb
fs
add
call
inc
imul
bound
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
je
imul
inc
add
movsl
add
je
gs
imul
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
dec
outsl
arpl
inc
insb
popa
addr16
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
imul
jb
je
arpl
add
add
gs
outsl
jbe
inc
imul
jns
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
ret
add
inc
jb
add
sbb
insb
imul
outsl
outsb
add
add
je
popa
arpl
outsl
outsb
inc
add
lods
add
gs
insb
inc
bound
je
add
add
addr16
jne
jb
inc
imul
push
dec
inc
gs
gs
imul
inc
jb
addr16
imul
imul
je
imul
push
jo
arpl
add
gs
popa
insb
insb
outsl
arpl
mov
push
push
gs
popa
addr16
outsl
js
add
push
add
addr16
arpl
jo
inc
imul
je
inc
push
dec
inc
dec
dec
xor
cs
insb
add
add
arpl
outsb
jbe
jb
inc
arpl
inc
arpl
jae
add
add
arpl
je
js
insb
imul
jb
gs
or
inc
arpl
jb
gs
outsb
fs
jb
popa
jns
pop
add
arpl
outsb
jbe
jb
push
inc
push
outsl
inc
arpl
jae
add
dec
push
dec
inc
push
push
inc
cs
insb
add
jae
push
push
popa
je
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
sub
popf
xchg
movsb
loope
jne
mov
pop
dec
sbb
and
jne
xchg
stos
and
mov
or
mov
cmp
repz
inc
mov
push
jne
rep
sub
fsub
cmp
xchg
scas
inc
enter
and
pop
stos
arpl
repnz
xor
cltd
inc
inc
lea
or
call
jge
testl
dec
mov
and
xchg
adc
inc
imul
adc
stos
push
push
jle
aas
push
cmpsl
and
popf
in
inc
pushf
xor
mov
adc
mov
shlb
xor
mov
mov
lds
dec
inc
lods
lock
dec
pop
or
je
movsl
in
push
or
test
jge
fnstcw
lock
jbe
loop
sbb
cmp
sbb
test
cmp
les
xlat
push
rcrb
adc
cmp
and
test
fcomp
and
inc
cmp
repz
sbb
arpl
jns
push
xchg
inc
mov
lret
lahf
or
lods
aad
mov
enter
mov
mov
dec
fldl
addb
push
aam
cmp
les
std
xor
xor
movsb
sub
sub
push
outsl
xchg
in
jne
push
in
ja
cmp
fnstenv
jns
mov
add
lock
shll
add
divb
ret
jl
js
repz
in
fcoms
xchg
scas
into
in
push
xor
lcall
and
ja
in
clc
cmp
mov
pop
sub
push
xchg
ficomps
pop
pop
nop
xlat
roll
xchg
nop
sub
adc
scas
sti
in
ja
push
push
xor
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
lcall
jge
add
jp
lods
lods
stos
add
test
mov
mov
mov
les
int3
into
int
rcl
shr
rcl
shl
rcl
shl
int3
int
hlt
mov
enter
mov
mov
lods
lods
stos
lea
fwait
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
lret
rcl
sar
xlat
xlat
xlat
std
xlat
xlat
xlat
aad
dec
rcl
dec
int
aad
aam
iret
rcl
inc
mov
mov
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
sbb
mov
jnp
mov
sar
vpaddd
leave
lret
dec
rcl
aam
fcomp
call
fcom
call
aam
dec
int
dec
int
call
aad
dec
int
inc
sarl
mov
lods
scas
std
cmpsb
cmpsb
cmpsb
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
dec
add
pop
add
push
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
call
rcl
fcom
xlat
call
fdivr
aam
aad
int3
into
int3
dec
lret
int
int3
inc
mov
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
push
sbb
push
or
sbb
aaa
cmp
and
adc
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
ret
leave
leave
enter
iret
call
aad
call
aad
dec
iret
sar
enter
mov
mov
mov
ljmp
movsb
mov
cwtl
xchg
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jge
jl
jge
jge
jb
jo
bound
mov
cmp
inc
inc
mov
jo
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
leave
dec
lret
lret
leave
leave
inc
ret
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
xchg
cltd
lcall
aas
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
pusha
mov
incb
jnp
idivb
jp
jo
jo
addr16
push
ret
jg
jns
jp
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
incl
test
xchg
xchg
xchg
mov
mov
cwtl
mov
jns
jp
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpb
mov
mov
incl
xchg
std
mov
jge
jno
jo
jae
jne
jle
jge
addb
xchg
pushw
cmp
cmp
and
jge
cmp
mov
test
icebp
stos
stos
lods
sti
lods
stos
lods
lods
stos
lods
test
stos
std
movsl
mov
fwait
xchg
xchg
xchg
incl
jle
jns
jns
jnp
jnp
xchg
xchg
movsl
movsb
movsl
mov
mov
mov
mov
mov
mov
mov
scas
lods
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
pop
push
push
prefetchw
xor
inc
dec
imul
xchg
leave
fwait
cltd
cltd
fistps
cltd
lcall
mov
decl
mov
lcall
cmpsl
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
scas
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
popf
popf
pushf
std
movsb
movsb
movsl
stc
mov
xchg
xchg
in
nop
nop
nop
in
xchg
jne
or
add
or
or
sub
sub
dec
dec
data16
jo
mov
xchg
rclb
xchg
xchg
std
lea
call
sahf
sahf
jmp
test
lods
pushl
mov
test
std
les
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cltd
fwait
incl
mov
decl
xchg
xchg
xchg
xchg
popf
pushf
popf
mov
test
movsb
mov
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
arpl
jb
mov
lahf
addl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
lahf
pushl
insb
xchg
mov
dec
mov
mov
sub
mov
movsb
mov
mov
mov
mov
movsl
movsl
add
pop
pop
adc
mov
ljmp
sahf
decl
xchg
call
xchg
xchg
call
cwtl
cwtl
fwait
fwait
fwait
pushf
popf
popf
lahf
sahf
mov
std
mov
lcall
mov
xchg
aad
cltd
cltd
in
xchg
xchg
out
mov
nop
stc
xchg
test
std
xchg
je
lcall
jmp
inc
jnp
mov
jnp
mov
jb
mov
insl
ljmp
adc
stos
or
or
pushl
mov
mov
pushf
movsb
mov
movsl
add
pop
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
jmp
sahf
sahf
call
xchg
cwtl
call
xchg
xchg
call
cwtl
cltd
cld
cwtl
xchg
popf
stc
mov
xchg
popf
cld
sahf
xchg
xchg
insb
mov
xchg
push
jle
cwtl
dec
jp
fwait
cmp
cltd
sub
push
imul
movsl
adc
jmp
adc
lods
packuswb
stos
adc
scas
adc
mov
push
mov
imul
adc
cmp
mov
scas
scas
scas
movsl
movsb
movsb
sub
mov
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
mov
movsl
jmp
mov
decl
mov
decl
mov
fwait
jo
cltd
arpl
call
cs
decl
adc
nop
or
call
add
lcall
jmp
sbb
mov
outsl
pushl
push
jo
mov
and
mov
and
sarb
inc
xchg
lods
mov
scas
scas
mov
sahf
mov
mov
add
add
add
pop
pop
adc
scas
mov
shlb
lcall
movsb
ljmp
test
ljmp
test
lcall
mov
mov
mov
decl
sub
mov
pop
incl
add
incl
add
lea
pop
call
add
cltd
add
mov
or
mov
outsl
pushl
sub
mov
sub
sub
sub
inc
xor
inc
inc
mov
leave
lea
cld
scas
mov
lret
movsl
dec
mov
mov
add
add
add
lods
movsb
test
adc
test
ljmp
lahf
jmp
test
ljmp
stos
lods
pushl
lods
lods
jmp
mov
mov
incl
or
incl
add
push
incl
push
decl
add
add
xchg
add
fwait
add
sahf
add
mov
adc
mov
ss
cmp
dec
cmp
sarl
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
movsb
test
mov
mov
lahf
lcall
lods
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
call
add
pushf
add
add
cmpsb
add
stos
add
mov
jno
ret
dec
inc
mov
int
call
inc
call
dec
call
dec
xchg
call
dec
xchg
fimull
fmull
fistl
call
xchg
mov
mov
movsl
mov
lahf
or
add
add
add
add
dec
dec
adc
jl
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
sbb
mov
pop
decl
push
call
add
sahf
add
add
test
pop
ljmp
push
gs
mov
dec
call
push
cltd
call
push
lcall
pop
fwait
jmp
pop
pushf
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
test
mov
lahf
mov
add
add
add
inc
inc
adc
jns
lahf
cltd
sahf
jmp
lahf
cltd
sahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
nop
and
xchg
and
callw
sbb
xchg
or
popl
push
call
add
mov
add
lods
add
mov
data16
mov
xor
call
pop
lcall
movsb
fbld
jmp
cmpsw
jmp
cmpsb
jmp
gs
call
push
stos
fldl
ret
mov
cmpsb
cmpsl
mov
sahf
mov
add
add
add
inc
inc
adc
jae
lcall
jmp
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
cltd
das
outsb
lcall
daa
imul
xchg
or
xchg
add
fwait
add
mov
add
stos
add
mov
pushl
adc
roll
fsubrl
jmp
outsb
stos
jmp
jno
jmp
jno
ljmp
in
jae
in
jbe
in
jne
out
jae
jmp
mov
mov
cmpsb
cmpsl
lcall
sahf
add
jle
cmp
aas
adc
insl
js
lea
pushf
fwait
pushf
pushl
mov
mov
mov
mov
mov
cmpsl
scas
lcall
xor
lahf
cmp
mov
xor
lcall
lcall
add
movsl
add
test
add
mov
fs
mov
sbb
fistl
jmp
jbe
jmp
jle
jmp
mov
out
cmpb
repnz
push
test
call
mov
mov
stos
test
popf
popf
sahf
daa
mov
lahf
sahf
add
add
add
popa
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
rol
pushl
insb
mov
lcall
jmp
cmp
fwait
pop
call
pop
jmp
add
scas
add
mov
gs
mov
add
shll
cmp
movsb
jmp
mov
icebp
pop
push
nop
sar
nop
ret
xchg
push
nop
ret
push
xchg
push
pop
in
nop
sar
mov
inc
ret
lods
lods
stos
mov
popf
popf
xor
pushf
popf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
inc
ret
ret
mov
jge
lcall
jg
lods
dec
test
mov
adc
lcall
jmp
add
mov
arpl
mov
add
movl
jmp
js
in
xchg
push
lcall
repz
push
pushf
lret
pushf
leave
push
sahf
int3
cli
popf
int
cli
popf
int
cli
cwtl
lret
push
xchg
ret
fidivs
cli
mov
mov
sahf
sahf
lahf
aas
nop
xchg
add
add
add
cmp
add
sub
outsb
push
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
mov
inc
leave
enter
sar
mov
ljmp
mov
movsl
sub
fwait
or
add
movsl
add
add
mov
mov
add
leave
add
rorb
je
filds
out
mov
push
movsl
int3
push
cmpsb
int3
stc
cmpsb
iret
cld
test
cli
cmpsb
into
cli
test
std
stos
sar
stos
sar
cld
test
mov
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
fwait
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
jne
jo
mov
sarl
mov
ret
inc
dec
leave
leave
inc
ret
mov
test
mov
push
mov
scas
dec
test
sahf
sbb
pop
jmp
add
mov
fs
mov
add
int
insl
call
add
loopne
jge
in
pop
cmpsb
push
lahf
lret
lods
sar
cli
scas
cli
scas
sar
sti
scas
sar
mov
cld
mov
std
mov
cld
mov
mov
cld
mov
push
movsb
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
or
add
add
sbb
outsb
outsb
outsl
mov
vpsubusb
fcom
jmp
fdiv
rcl
sar
lret
dec
lret
leave
dec
lret
leave
lret
lret
enter
mov
mov
lods
push
mov
lods
cmp
lcall
add
stos
add
mov
fs
mov
add
rolb
outsl
fadds
je
filds
je
ljmp
cli
lods
aam
mov
cld
mov
mov
mov
fcos
std
mov
xlat
push
mov
jmp
mov
call
leave
int3
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
pop
or
leave
movb
jecxz
call
out
test
jecxz
leave
fsubp
fcomp
fdivr
aad
fdivr
int3
iret
iret
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
call
add
fldl
ja
in
ja
in
das
xchg
clc
mov
sti
mov
loopne
inc
loope
std
inc
inc
fdivrp
inc
loopne
dec
fdivrp
std
leave
loopne
dec
std
lret
sti
mov
enter
into
mov
mov
xchg
adc
add
add
incb
incl
incb
repz
or
out
in
pop
jmp
in
sub
out
in
dec
call
jmp
jmp
aad
fcmovnu
jmp
mov
xchg
test
ja
movsb
adc
pop
ljmp
add
mov
add
int3
add
xlat
add
loopne
jbe
call
inc
pushf
cli
mov
jecxz
cld
int3
jecxz
dec
in
dec
jecxz
dec
jecxz
dec
loope
dec
loop
std
iret
loop
dec
in
std
shl
shl
cli
fcos
in
mov
inc
ret
cmpsb
test
mov
cwtl
xchg
add
add
add
std
add
incb
idiv
testb
hlt
icebp
add
hlt
icebp
push
out
icebp
lock
out
repnz
out
in
pop
loopne
loop
mov
xchg
sti
lahf
and
lcall
add
add
mov
gs
add
movl
jno
fildl
je
in
jnp
in
push
jle
negb
cli
mov
dec
out
std
shl
std
shr
call
out
shl
std
aam
out
fsubr
fld1
std
fld1
fldl2t
std
shl
push
ret
jecxz
lret
repz
xchg
xchg
and
xchg
xchg
add
std
cli
add
std
clc
add
sti
cli
add
div
or
aam
xor
mov
xchg
negb
add
add
scas
add
mov
add
lret
add
roll
jb
fldl
jne
out
jns
out
sbb
cld
fsubr
std
fldl2e
fldl2e
std
fucomi
fsubr
std
fsubr
fucomp
fucomip
std
loopne
fsubrp
cld
aam
push
ret
out
rcl
sar
stos
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loopne
add
enter
mov
xchg
repnz
pop
jmpw
add
mov
mov
add
into
add
aad
jno
filds
jae
jmp
sub
aam
jmp
lock
fucomp
fucomi
fucompp
call
jmp
std
shl
cli
iret
loope
sti
iret
loope
test
cmc
rcl
in
mov
jmp
rcr
call
xlat
xlat
sti
mov
mov
lcall
add
add
add
add
enter
rol
scas
mov
jmp
add
mov
mov
add
roll
jo
fadds
jae
loop
jp
ljmp
cld
xchg
enter
cld
int3
loop
cld
clc
mov
aam
repnz
iret
push
mov
int
call
mov
sar
call
shl
ljmp
in
mov
mov
xchg
add
add
add
int3
int
mov
rol
mov
movsl
loopne
xor
jmp
add
mov
data16
mov
add
into
or
rorl
jbe
ficoml
js
loopne
cmp
dec
cwtl
ljmp
call
mov
std
loopne
ret
cld
fbstp
mov
lret
vpmulhw
lret
aad
loopne
fcmovb
out
loope
in
in
test
out
out
popf
jmp
leave
leave
push
stos
lods
lods
adc
cmpsl
cmpsl
cmpsl
add
ret
mov
lahf
lods
aam
dec
cmp
cmpsl
sbb
scas
and
jns
mov
inc
test
ret
push
stc
lret
gs
test
mov
out
mov
mov
lret
ret
lret
rcl
lret
mov
iret
shlb
xlat
aam
jg
fcmovnu
jb
fsubp
gs
in
out
out
jmp
div
sub
div
and
repnz
or
mov
int3
add
add
add
roll
roll
mov
stos
test
lock
xchg
ljmp
mov
sarb
test
mov
pushf
lret
mov
lret
iret
int3
shlb
ror
push
iret
rcl
dec
aad
aad
rcl
aam
daa
fcomp
fcompl
fcmovnu
fstl
fsubp
loop
in
call
icebp
out
add
sti
testb
std
add
std
add
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
rol
xor
into
lret
ror
and
aam
sbb
aad
adc
aad
or
xlat
aad
rcr
xlat
add
add
add
jecxz
add
in
ljmp
std
add
mov
add
rol
ret
vmovapd
mov
mov
push
rol
or
mov
add
into
lret
add
rolb
rcl
aam
rcl
aam
xlat
aam
aad
add
fsub
add
aad
add
loopne
add
add
out
add
lock
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
ret
mov
mov
mov
stos
stos
test
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
ror
jmp
aad
cmc
rcl
sar
iret
iret
sar
int3
int
stc
lret
lret
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
cld
into
ror
call
aad
call
iret
sar
int
int
int3
int3
lret
mov
mov
cld
lods
stos
stos
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jne
je
gs
dec
dec
dec
cmp
sub
sub
ss
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
lret
rcl
sar
aam
sar
lret
lret
int3
inc
mov
mov
mov
ljmp
lahf
lahf
cwtl
xchg
cwtl
jmp
jno
xchg
push
pop
adc
xor
add
add
add
add
addl
test
imul
pop
pop
pop
movsb
push
push
push
stos
push
insb
insl
push
pop
pop
cmp
cmp
pop
jo
jo
scas
scas
scas
pop
mov
mov
mov
mov
mov
rol
mov
mov
mov
test
pushf
fwait
call
xchg
xchg
fwait
cltd
fwait
out
addl
adc
xor
add
and
add
adc
add
pop
cltd
lcall
pushf
xchg
lcall
addl
jmp
jns
sarb
jp
jp
jp
jae
je
push
push
push
cmp
jae
sahf
popf
sahf
mov
lods
scas
repz
scas
lods
sti
scas
scas
scas
std
cmpsl
test
std
pushf
popf
sahf
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
movsl
movsl
cltd
jb
jae
adc
adc
add
add
add
add
outsb
outsb
outsl
pop
xchg
mov
lahf
lcall
mov
mov
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
outsb
outsb
orl
lcall
mov
call
sahf
ljmp
test
std
mov
scas
mov
xlat
cmpsl
mov
jg
pusha
pop
popa
or
lods
mov
cmpsl
mov
mov
mov
mov
xchg
xchg
cwtl
std
lahf
popf
mov
negl
jle
stos
push
push
push
jo
push
push
outsl
insl
outsl
outsl
xchg
subl
mov
lcall
mov
pushl
pop
mov
jge
mov
scas
lods
insl
stos
test
add
add
add
pusha
pusha
popa
or
mov
in
mov
xchg
call
xchg
cwtl
lcall
lcall
pushf
lahf
popf
cli
xchg
xchg
cwtl
jmp
xchg
lea
nop
orl
cld
xchg
pop
jg
popf
dec
jl
movsb
inc
jns
scas
aaa
ja
mov
jae
scas
sbb
push
scas
sbb
mov
scas
mov
mov
mov
movsl
mov
add
add
add
pusha
pusha
popa
or
mov
in
movsl
test
lcall
mov
mov
decl
orl
cld
cwtl
pop
cmp
dec
js
nop
cmp
nop
sub
xchg
sbb
maxps
sahf
punpcklbw
test
imul
mov
outsb
pushl
push
jno
mov
pop
mov
lods
scas
xchg
lahf
sahf
sahf
adc
add
add
pop
pop
popa
or
lods
mov
test
lahf
mov
ljmp
cmpsl
cmpsl
lcall
pop
jp
mov
imul
mov
pop
incl
or
mov
decl
add
popf
add
or
pushl
sub
inc
sub
jle
leave
xor
dec
pop
cwtl
inc
test
mov
cmpsl
cmpsl
cmpsl
sbb
add
add
popa
popa
popa
or
cmpsb
test
jmp
scas
mov
mov
mov
mov
mov
movsl
xchg
mov
decl
adc
xchg
push
incl
add
popl
push
call
add
movsl
add
mov
insl
inc
ss
lret
dec
inc
call
inc
mov
aad
nop
fmuls
call
popa
lahf
dec
cmpsl
mov
mov
movsb
movsl
daa
std
incl
add
add
pusha
pop
pusha
or
sahf
mov
ljmp
mov
mov
mov
stos
lcall
sbb
pusha
decl
or
decl
add
sahf
add
cmpsb
add
scas
add
jbe
rorb
fsts
fistpl
ficomps
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
cmpsl
xor
addb
add
add
dec
pop
jge
jl
pushf
xchg
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
cs
lcall
and
xchg
adc
xchg
add
sahf
add
cmpsl
add
scas
add
mov
xor
jmp
insb
test
out
stos
call
jo
in
jno
jmp
jp
call
cmpsl
mov
shrl
jg
add
add
add
dec
pop
outsb
outsl
insb
bound
lcall
mov
mov
sar
mov
xchg
lcall
cmp
pushf
sub
cwtl
or
lcall
ljmp
add
ret
or
xlat
dec
xchg
jmp
js
ljmp
push
test
cmc
mov
fldcw
mov
push
lcall
add
sub
push
push
dec
pop
addr16
xchg
mov
mov
mov
mov
ret
mov
popf
jmp
inc
cmp
sub
fwait
pop
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
push
cltd
push
cwtl
clc
fwait
lret
pushf
lret
push
cwtl
lods
inc
mov
lods
popa
mov
add
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
ret
inc
ret
mov
cmpsl
jmp
dec
test
mov
add
pop
pushl
add
leave
add
and
push
movsb
int3
push
test
iret
cld
stos
sar
std
stos
sar
std
lods
sar
stc
cmpsl
int3
call
rol
stos
stos
test
or
add
add
dec
push
dec
aaa
je
jae
stos
stos
test
out
int
cmc
leave
lret
lret
std
enter
mov
mov
stos
inc
jg
mov
add
mov
arpl
rolb
dec
add
fiaddl
jbe
jmp
xchg
std
mov
std
mov
fdivr
mov
std
mov
sar
ljmp
repz
scas
lods
mov
add
add
add
add
pop
or
aad
dec
loope
loope
fistps
out
shlb
cmpsl
sub
jmp
popa
mov
add
xlat
add
or
repnz
mov
std
loop
dec
loope
std
enter
enter
lret
std
fdivr
out
mov
leave
divb
pushf
popf
sbb
add
add
std
add
std
add
ljmp
in
in
jmp
call
in
xchg
mov
mov
mov
add
mov
fs
add
iret
add
fildl
jbe
call
outsb
mov
sti
ret
sti
shl
shl
std
shl
shl
call
call
std
shl
push
xlat
fmul
sar
mov
mov
add
std
incb
incb
cld
cld
cld
pop
aad
aam
mov
pop
mov
lahf
or
ljmp
add
ret
add
rolb
jno
fiadds
jne
out
and
cld
shl
fldpi
std
fldl2t
xlat
call
std
cld
xlat
call
push
enter
rcl
sti
mov
lahf
sahf
das
add
add
into
int3
int
mov
arpl
ljmp
add
movl
jae
loopne
jns
out
xor
stc
int
clc
lret
test
xlat
bnd
out
ret
sar
out
aam
in
shl
jmp
aam
in
fsubrp
mov
stos
das
std
incb
aam
aam
mov
jae
or
insl
inc
sbb
lret
and
aad
test
fists
clc
jecxz
mov
out
loop
lret
mov
loope
mov
lret
leave
loopne
sarb
in
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
mov
movsl
les
xchg
mov
fidivrl
andb
int3
mov
ret
ror
aam
int
aam
iret
pop
aam
rorl
xlat
fnstcw
fisubrs
jecxz
frstor
in
lock
jmp
or
incb
std
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
mov
aam
rol
adc
rcl
or
or
int
add
std
incl
std
incl
fwait
fwait
lcall
rol
or
int3
int3
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
enter
leave
mov
ret
ret
mov
scas
mov
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aad
std
rcl
sar
into
iret
int
vshufps
mov
test
gs
sbb
add
add
add
add
add
add
add
add
jae
jb
addr16
dec
inc
das
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
rcl
dec
into
iret
dec
enter
mov
scas
jmp
mov
push
add
add
add
add
je
jae
test
adc
jo
ret
arpl
outsl
insl
outsl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jb
es
and
pop
add
add
jb
jae
popf
xchg
fwait
mov
test
clc
mov
test
addb
push
push
push
inc
mov
popf
into
mov
lahf
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
adcb
movsl
cmpsl
cmpsl
stos
mov
mov
mov
cld
sahf
popf
pushf
cmc
lcall
mov
push
push
imul
jg
lea
xchg
notl
mov
pushl
xchg
mov
test
call
stos
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
cltd
cltd
lcall
lcall
xchg
mov
loope
jbe
out
xchg
arpl
std
lcall
ljmp
pop
outsl
pushl
aaa
jnp
mov
mov
imul
int3
add
test
pop
scas
cmpsb
stos
test
sahf
popf
sahf
jmp
movsb
movsb
call
push
decl
inc
je
mov
push
mov
call
or
or
ljmp
and
mov
sub
lds
mov
mov
subl
jne
push
movsb
popf
mov
cld
cmpsl
cmpsb
cmpsb
ljmp
mov
lcall
sub
decl
or
mov
push
decl
add
mov
adc
ret
dec
aas
mov
rolb
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
mov
add
add
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
ljmp
cmp
xchg
push
decl
or
xchg
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsb
call
fwait
mov
mov
test
pop
add
add
arpl
adc
sahf
pushf
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
push
pop
jmp
add
mov
xor
jmp
jo
jmp
ja
jmp
mov
out
jl
push
jge
ficompl
mov
and
add
add
adc
addr16
mov
mov
mov
mov
rol
mov
bound
lcall
add
ljmp
add
ret
fisttpl
in
lea
notb
clc
xchg
jmp
movsl
inc
mov
movsb
sub
aas
inc
aas
adc
push
xchg
mov
mov
inc
inc
mov
cwtl
ljmp
sbb
cmpsb
add
mov
arpl
ret
call
adc
in
insl
lods
clc
test
clc
stos
iret
cld
scas
sar
cld
scas
sar
cld
scas
iret
in
mov
inc
mov
movsl
ds
std
incl
xor
xor
scas
mov
mov
aad
aam
aam
rcl
shr
lret
leave
lret
cli
mov
mov
jmp
add
add
aam
jno
out
xchg
testl
cld
rcr
cld
ret
cld
rcr
out
mov
shl
test
addb
add
add
in
or
jmp
in
outsb
fcomp
fldenv
movsl
outsl
ljmp
add
lret
fiadds
jne
out
cmp
dec
in
std
iret
in
shl
call
out
call
out
cmc
enter
int
scas
lods
scas
popa
addl
add
std
incl
incl
int
shrl
sahf
sbb
stos
add
mov
add
jecxz
jns
cmc
push
cmpsb
std
loope
aad
std
aam
std
aam
cld
aad
cli
shl
push
fsin
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
gs
mov
push
je
fistps
cmp
out
mov
aam
call
mov
shl
out
aam
jmp
scas
lds
lcall
rol
or
pushf
lods
xchg
dec
and
push
mov
shlb
int3
js
mov
fdivrs
lret
int3
outsl
fxch
rcrb
rcl
dec
in
loope
call
in
out
sbb
sarb
cmp
movsb
lods
arpl
mov
les
ret
and
ret
fstp
fimuls
into
into
int3
or
aam
push
std
incl
cmpb
std
add
add
add
rol
incl
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
leave
fdivs
xchg
sub
push
out
test
add
or
in
test
inc
and
or
ja
sub
add
inc
ficoms
add
sbb
cmp
sbbl
vprotb
mov
fstl
outsb
rclb
fs
fs
repz
xchg
inc
fsubs
mov
sub
shr
jle
jae
or
out
cmp
pop
jbe
xchg
and
scas
push
mov
sub
jbe
int
add
push
jmp
pop
shrl
sbb
dec
stos
out
xchg
insl
xchg
sub
shrl
adcl
loopne
addr16
sbbl
or
js
sub
ds
mov
ficoms
mov
cld
jecxz
fbstp
add
sbb
xchg
std
xchg
les
cmp
stos
rclb
cmp
push
mov
mov
fdivl
push
movsl
sbb
popa
idivl
iret
sub
cwtl
jbe
or
push
mov
jns
test
inc
fsubl
lret
repz
pop
cmc
jne
xchg
sub
dec
jl
cmpb
stos
pusha
or
or
out
xchg
inc
fistl
or
cld
test
sub
add
adcb
and
push
popf
sahf
xor
movsb
lock
sbb
inc
pop
bnd
mov
adc
insb
rclb
xchg
cs
into
repnz
test
out
xchg
fs
xchg
decb
sub
push
sub
orl
dec
loopne
pop
into
mov
arpl
pop
xchg
push
pop
movsb
cmp
ret
enter
add
js
sbb
dec
enter
insb
and
dec
mov
movsb
cmp
rol
pop
add
lea
mov
stos
jecxz
xchg
test
xor
xchg
std
inc
fldcw
mov
mov
cld
lret
sbb
dec
stc
call
icebp
mov
ret
hlt
sahf
and
iret
adc
jl
inc
ret
call
sub
loope
cmp
call
xchg
sub
cmp
pop
and
mov
movsl
mov
jp
out
data16
jecxz
cwtl
das
and
test
jno
mov
jbe
mov
sub
push
jmp
dec
sbb
shrb
mov
mov
fcompl
or
das
js
popa
aaa
sub
push
mov
mov
fsubrl
or
xchg
scas
andl
pop
and
push
sub
ja
je
loope
jnp
xchg
lods
push
mov
sbb
rclb
movsl
cmp
jb
lock
les
notb
loop
inc
pop
xchg
sub
xchg
push
dec
pushf
mov
mov
mov
cmp
mov
pop
repnz
cmpsb
xchg
lods
jns
fidivs
xchg
xor
dec
jecxz
push
mov
test
add
mov
icebp
mov
add
cmpsb
jl
lds
sub
jp
out
dec
loop
sti
add
je
pop
mov
xchg
xchg
lahf
cmp
cmp
repnz
repnz
pop
outsb
inc
jns
jbe
loope
rcll
xchg
adc
mov
sbb
shrl
mov
sarb
ficompl
or
xsha256
cmpsb
push
sub
sub
sub
mov
mov
fsubrl
push
daa
shrl
das
xchg
popa
jp
xchg
or
pop
pop
and
push
sub
js
jb
loope
jnp
xchg
lods
les
cmc
into
sbb
push
inc
and
xchg
pop
fdivl
enter
sub
or
fbstp
fnstsw
dec
std
or
pop
push
in
xchg
lret
sti
add
aaa
cmp
add
adc
dec
loopne
or
pop
cmp
push
out
push
loope
pusha
adc
jno
cli
nop/reserved
push
call
shrl
or
sbb
call
out
xchg
and
push
out
call
adc
inc
pop
jae
dec
fidivrs
psubusw
or
pusha
testl
adc
xchg
mov
sbb
dec
add
popa
clc
mov
ret
hlt
mov
pop
icebp
inc
cli
lahf
xor
xchg
push
int
xchg
mov
call
xor
push
lea
mov
fists
and
xchg
jnp
xor
scas
push
mov
fwait
xor
and
cld
pop
inc
aaa
into
jno
cmc
mov
movsb
icebp
mov
adc
bound
adc
add
jecxz
inc
dec
daa
mov
or
sbb
iret
dec
xor
sbb
or
sbb
dec
cmp
push
jno
aad
push
cmpsl
xor
lret
dec
inc
lahf
ss
test
push
mov
push
dec
dec
sti
xchg
jl
jmp
cli
flds
stc
xor
mov
adc
add
imulb
outsl
push
adc
xchg
insb
loope
pop
adc
in
icebp
add
inc
pop
in
js
int
push
add
xchg
inc
aam
int
aad
inc
or
mov
push
pop
inc
fmull
lret
fstpt
or
fnsave
fidivl
ret
repz
dec
push
sbb
push
push
rcll
dec
loopne
and
fbstp
shrb
shl
mov
call
add
pop
lock
sbb
repnz
das
or
repnz
add
sbb
push
hlt
fnsave
leave
jnp
push
pop
mov
int3
cld
loopne
test
das
repz
scas
inc
aaa
sarb
add
push
clc
popl
lea
xlat
push
jmp
add
adc
jae
or
pop
fs
dec
sbb
lret
loope
xor
jns
push
add
jmp
clc
call
pop
repnz
or
dec
loopne
lock
or
in
iret
and
imul
and
pop
cmc
cmp
jmp
arpl
in
or
and
jmp
and
les
clc
adc
addl
and
fnstenv
cmp
arpl
sbb
test
movsl
xorb
cmpsb
lea
in
repnz
fstl
xor
imul
mov
test
in
xlat
jbe
add
es
stos
push
bound
inc
stos
mov
xor
lret
aad
std
pop
mov
aam
jmp
stos
inc
cli
cmp
lds
xor
pop
scas
pop
ffreep
push
insb
cmc
add
jb
sub
lcall
fnsave
mov
xor
in
dec
jecxz
mov
into
gs
shrl
icebp
fidivl
lds
shl
cli
cmp
sub
andb
mov
icebp
js
and
cmpsl
ds
in
out
fdivl
cmp
pop
jno
out
cs
xor
hlt
ljmp
cli
ds
ljmp
and
inc
jle
ja
push
call
in
adc
inc
cmp
push
mov
mov
stos
inc
dec
ss
addr16
pop
add
mov
jnp
cs
pop
rcll
cmpsl
add
dec
sbb
pop
dec
and
xchg
pop
aam
decb
ret
int3
arpl
adc
orb
lea
mov
dec
out
adc
inc
or
mov
xchg
fs
xchg
mov
test
call
or
pop
cmp
imul
sub
call
or
jp
cld
mov
sub
dec
pop
idivb
inc
pop
in
insl
test
add
pop
push
and
mov
stos
inc
xchg
fwait
mov
add
ss
inc
adc
icebp
mov
scas
gs
test
jnp
add
xlat
xor
add
andl
mov
fnstenv
jl
cli
push
out
sub
lret
adcl
sbbb
mov
jo
jne
pop
outsl
aas
xchg
sbb
enter
xchg
jmp
testb
pop
xchg
sub
mov
rclb
mov
imul
scas
jns
fdivrl
sbb
lods
mov
ss
sbbl
outsb
repnz
mov
xchg
mov
jno
mov
loop
jno
pushf
or
inc
lds
push
pop
gs
mov
std
xchg
pop
dec
jecxz
pop
jns
mov
test
in
outsl
sbb
lret
negb
pop
addr16
stos
mov
loop
dec
lret
and
mov
cmp
push
sbb
icebp
sahf
sub
xchg
pop
fmulp
out
sarb
add
push
lock
stos
xor
stos
icebp
sbb
fs
push
imul
sbb
push
insb
jb
ja
xor
mov
fwait
and
inc
sub
lds
sub
add
push
cmp
lods
popf
and
sub
cmpsl
cld
mov
push
call
or
outsb
sub
adc
add
fwait
add
pop
nop
test
push
inc
push
jns
jbe
imul
inc
pushf
cmc
pop
mov
cmp
mov
push
stos
scas
movsb
sub
arpl
mov
or
loopne
push
iret
pusha
mov
int3
or
lcall
dec
andl
dec
cmpsb
in
sbb
xchg
xchg
fsubl
xchg
push
sbb
jno
divl
or
jp
test
sbb
mov
inc
mov
pop
mov
push
or
gs
adc
imul
sbb
sub
xchg
sub
fwait
xorl
xchg
push
sub
jbe
pop
mov
dec
sub
int
xor
mov
dec
popf
cmp
jge
mov
sub
jns
mov
scas
mov
in
insb
js
sub
ret
cmp
in
mov
xor
mov
sub
movsb
fnsave
jbe
push
adc
jbe
add
mov
enter
and
mov
add
push
incl
cmp
out
add
fildll
mov
inc
inc
lcall
jns
fucom
popa
add
pop
cli
int
xchg
inc
iret
jne
dec
mov
jl
ja
loop
ljmp
mov
adc
aam
xchg
ss
icebp
enter
das
adc
test
and
xchg
pop
aas
test
sub
jnp
in
fcompl
sbb
fs
jb
inc
mov
mov
or
mov
dec
add
dec
and
shrl
adc
sahf
lret
push
xor
sub
mov
sub
push
xor
push
mul
xor
test
adc
inc
mov
inc
and
scas
and
test
std
jg
dec
sub
jae
ljmp
add
xchg
jnp
pop
test
push
dec
and
or
movsb
dec
popa
pushf
inc
or
dec
push
xchg
cmpsb
or
insl
dec
cltd
mov
fidivrl
rcrl
es
fistpll
shl
mov
pop
lock
cmc
mov
movsb
xsha256
cmpsb
rcrl
scas
inc
mov
pop
hlt
stc
lods
enter
insb
add
lods
mov
xchg
in
jae
mov
cmpsb
fdivs
ljmp
ret
adc
xor
mov
add
sub
ljmp
jmp
vaddsubpd
out
cmpsb
pop
mov
andl
sub
ja
test
nop
dec
mov
pop
scas
pushf
cmc
lds
xor
jnp
lcall
adc
lock
cmp
cmp
montmul
cmpsb
add
xor
test
push
mov
aam
outsb
push
lea
aas
das
cmc
mov
leave
adc
mov
xor
bound
dec
out
test
xchg
add
insb
inc
or
and
lock
leave
loop
inc
cld
loop
icebp
adcl
pusha
push
lods
js
push
jns
jle
jg
sub
shl
pop
in
and
push
dec
ss
cmp
xchg
test
jb
or
nop
daa
xor
scas
inc
xchg
fbstp
lea
xchg
sub
pop
ljmp
scas
or
adc
mov
jbe
inc
fdivl
loopne
cli
sub
sbbl
loopne
lahf
ss
or
mov
mov
xor
xchg
fdivl
outsb
stos
inc
outsb
lock
xchg
adc
leave
pusha
pop
cmp
cli
xchg
cmp
rorb
inc
fcompp
out
fdivl
loopne
cli
jne
sbbl
sahf
sbbl
data16
ss
mov
inc
mov
aad
bound
sti
xchg
cmp
sbb
iret
mov
into
fsubr
daa
mov
or
inc
fcompl
mov
cli
outsl
ja
sub
sbbl
mov
es
fs
out
inc
sbb
lods
inc
push
aas
fidivs
jg
popa
jnp
cld
xchg
mov
or
repnz
mov
dec
or
mov
fsubs
gs
clc
mov
int
push
add
sub
les
test
loop
cmp
fnstenv
popa
repnz
testl
jmp
add
jge
dec
in
xchg
push
jmp
inc
lock
adc
rcrb
cltd
xor
lock
mov
jle
ja
sbbb
cmp
in
repz
adc
pop
loop
adc
mov
aad
cwtl
push
nop
cli
insb
add
adc
lds
rcrl
fstps
xchg
bnd
push
mov
mov
push
or
jl
jp
aas
cli
jl
lcall
and
dec
fistpll
or
repz
pop
hlt
popa
adcb
mov
imul
aad
rcl
cld
mov
sti
cli
pop
lock
adc
call
jp
pop
xchg
cmp
sbb
out
loope
cmp
mov
and
cs
aas
and
out
test
pop
hlt
dec
and
scas
mov
adc
movsl
cltd
xor
into
data16
aam
mov
sbb
insl
mov
int3
hlt
mov
fistl
test
mov
xor
fucomip
orl
lock
scas
dec
bnd
repz
sub
ret
dec
jp
sbbb
xchg
shrb
cwtl
mov
xchg
mov
sti
push
movsl
sub
inc
sub
mov
ljmp
xchg
sbb
push
ss
rcll
pop
xchg
mov
push
pop
inc
imul
pop
cmp
test
ret
push
stos
shrl
das
jnp
dec
cld
add
adc
mov
lods
mov
aad
sub
insb
or
loop
and
mov
imul
push
mov
add
xchg
sub
cli
ret
mov
add
ret
mov
xor
and
aas
test
cmpsl
pop
lods
pop
mov
lds
jnp
sub
sub
cltd
xchg
ljmp
xor
call
dec
pusha
push
popf
inc
popa
dec
loopne
fs
lods
inc
enter
outsl
xor
filds
sbb
stc
stc
lret
cmp
jecxz
pop
je
ret
popf
sahf
xor
dec
push
xchg
xchg
popa
mov
sbb
aad
call
shl
out
and
dec
or
test
movsl
cs
ja
xchg
sub
mov
mov
insb
push
adc
shrl
ds
xor
sub
xchg
cmpsl
movsl
mov
pop
pop
call
insl
aas
sbb
hlt
mov
je
or
in
mov
adc
aas
cmpsb
cmp
dec
push
pop
hlt
jl
iret
data16
xchg
jnp
scas
adc
test
mov
enter
test
shrl
ret
into
mov
in
dec
filds
push
shlb
sub
outsb
das
cld
xchg
jne
test
fstpl
mov
iret
das
inc
rclb
push
in
loop
fidivs
push
test
stos
cld
xchg
jmp
mov
movsl
pop
pop
mov
pop
jno
ret
je
into
gs
adc
xchg
movsb
out
push
mov
sbb
iret
popa
movsl
cmp
mov
mov
enter
shl
or
and
mov
jecxz
sbb
push
xlat
cmp
cmc
sub
pop
icebp
gs
sbb
ud1
shrb
xchg
sub
loope
mov
sbb
push
imul
mov
jae
xchg
sub
pushf
into
gs
mov
push
imul
subl
loop
push
inc
or
or
mov
add
fidivs
cmp
dec
fwait
gs
ret
imul
in
sbbl
nop
push
cmp
jb
push
js
push
js
nop
daa
aam
fnsave
mov
xchg
sub
fidivl
inc
sbb
pop
xchg
aaa
into
or
and
push
jmp
jg
or
leave
cmpsb
cmp
and
pop
inc
pop
rcrl
loop
cltd
and
data16
add
outsl
out
push
mov
mov
mov
cmp
shl
pop
icebp
mov
pop
out
nop
mov
jbe
pop
add
jno,pn
movsl
cmp
lcall
in
shrl
add
push
aaa
icebp
mov
icebp
mov
push
xsha256
cmpsb
adc
sub
sti
rorb
pop
push
pop
repz
imul
leave
adcb
int3
divb
cmp
inc
mov
mov
shrl
xchg
adc
popf
lock
or
in
stos
cmp
sub
add
fisttpl
add
lods
mov
test
iret
mov
jp
std
xlat
outsb
js
add
push
sub
mov
jp
stos
mov
cmp
fdivs
fistps
dec
push
insl
add
imul
mov
and
aad
test
dec
ret
pop
ljmp
jge
xchg
repz
add
inc
outsl
adc
pushf
fistpll
mov
inc
xlat
pop
hlt
jp
pop
cmc
in
addr16
push
adc
aas
test
xchg
fwait
xor
mov
dec
cmp
outsb
jnp
shrl
xchg
cmc
mov
es
xchg
cmp
stos
outsl
and
xor
ror
cmp
std
stc
sti
sbb
popf
adc
lds
stos
jle
jecxz
into
jbe
fcmovne
push
push
cmc
xchg
sub
mov
push
lcall
ret
daa
les
in
xchg
in
mov
jns
add
add
ret
fistpl
mov
in
inc
fsubl
cmp
push
test
sbb
jae
mov
xlat
xchg
sub
mov
mov
mov
jp
sti
out
sub
jmp
mov
push
lcall
mov
leave
push
out
sbb
sub
cmp
lds
xchg
sub
out
stc
nop
and
mov
popf
cmc
scas
sbb
inc
push
cmp
cmp
aam
pusha
push
call
loope
jl
mov
xchg
sub
push
in
sub
xchg
fnstcw
shlb
mov
inc
jns
int3
arpl
movsb
repnz
lock
and
scas
jl
xor
ja
sub
int
dec
jecxz
out
push
in
pop
jmp
mov
push
add
loope
pop
mov
imul
ljmp
inc
int
jb
cmp
cmpsb
jne,pt
mov
pop
mov
pop
xor
orl
push
loop
inc
outsb
fwait
and
sti
jno
jne
test
jns
bound
lret
les
mov
movsb
dec
push
xor
push
inc
imul
lods
js
cs
xor
adc
mov
push
mov
mov
or
je
int
jg
int3
decb
mov
cli
xchg
lcall
outsl
fwait
je
jl
mov
in
xchg
lock
into
or
pop
insl
jecxz
out
inc
test
icebp
cmp
cmpsb
mov
cwtl
inc
test
inc
cmpsl
jg
dec
xchg
add
lcall
pop
jp
xchg
cmp
in
hlt
jp
popa
subl
jmp
lea
insl
scas
je
inc
stos
cmp
inc
mov
push
neg
sub
push
cwtl
pushl
mov
xchg
xor
lods
mov
stc
cmc
sub
movb
mov
daa
cmp
xlat
sub
and
jbe
fptan
add
ds
clc
in
loopne
inc
sub
es
aaa
push
popa
mov
mov
or
enter
aad
xor
idivl
in
out
sbb
xchg
aad
mov
xchg
pop
std
jp
push
dec
mov
push
adc
or
in
int
inc
inc
cltd
jb
inc
or
int3
inc
fstps
add
gs
mov
mov
aaa
scas
push
mov
ja,pn
xor
mov
add
sub
cwtl
mov
xor
sub
mov
cli
addr16
cmp
inc
ss
push
shl
aaa
lea
dec
push
cmpsl
and
xor
push
jmp
mov
icebp
test
mov
mov
cmp
jg
and
mov
push
cld
shrl
aam
mov
sti
cmp
shr
mov
stc
les
notl
adc
jecxz
movb
pop
loope
lcall
add
xchg
shr
test
push
xchg
xlat
push
push
fstps
lcall
sti
mov
lahf
and
mov
xchg
mov
fcmovne
push
fwait
jnp
add
aad
jl
imul
and
sbb
xchg
movsb
int3
loope
xlat
cmp
mov
aad
nop
call
cmp
push
mov
ss
pop
out
jb
xchg
in
pop
dec
push
or
adc
or
std
or
leave
mov
cmp
push
jg
dec
or
fwait
xor
mov
in
xchg
icebp
mov
outsb
add
push
push
jmp
pop
jl
mov
or
dec
mov
mov
xchg
push
jle
mov
fadd
outsb
jg
das
push
aaa
sub
mov
mov
jnp
mov
dec
jle
or
pusha
mov
and
lods
sbb
push
dec
mov
sub
xchg
mov
xchg
pop
cmp
mov
jno
call
or
add
dec
test
xchg
rcrl
roll
cmp
jg
mov
lods
fwait
fwait
idiv
mov
rorl
cwtl
pop
push
sbbl
cld
xchg
pop
adcl
mov
add
int3
das
insb
jbe
icebp
loopne
pop
cmp
cmp
or
popa
cmp
jg
imul
xchg
pop
iret
mov
imul
data16
xor
add
scas
xor
test
jns
pop
jle
arpl
add
jp
jnp
adc
sbb
fnstenv
sub
test
mov
adc
push
pushf
shrb
jecxz
daa
sub
jmp
iret
adc
stos
decb
add
nop
mov
insb
push
push
jp
push
xor
mov
inc
ret
ret
and
cltd
or
daa
add
fsubrl
dec
rcll
iret
add
cmp
cltd
xor
pusha
inc
xchg
inc
pop
jl
lret
test
out
stc
cmp
and
iret
sub
cmp
imulb
aad
ret
lret
push
mulb
shll
decb
mov
add
aad
dec
loop
into
das
std
add
sub
subl
fcomp
push
mov
faddl
into
cmp
mov
andl
sbb
out
scas
cmpsb
xchg
jmp
movsb
out
lret
and
mov
outsb
int3
push
jae
idivb
pop
ja,pt
cmp
xor
nop
push
ficoml
inc
xchg
movsb
dec
dec
hlt
fs
imul
divl
lds
in
adc
stos
mov
adc
loop
stos
movsl
stc
xchg
xchg
jp
cmpsb
mov
into
sbb
sbb
scas
mov
enter
subb
out
into
inc
mov
cmpsb
inc
shll
fsubs
cltd
jge
jp
lret
cmc
lock
addb
pop
sahf
in
push
xor
adc
push
jnp
out
push
es
ret
jmp
iret
lret
push
into
jne
fldl
pushf
stos
lds
adc
sti
xchg
insl
xor
jmp
in
ss
push
cmpsl
pop
pop
mov
sbbl
lods
loopne
xchg
out
adc
sub
dec
pushf
popf
or
pop
cmp
or
mov
mov
dec
pop
sub
je
enter
cmp
jae
in
sbbl
add
lods
adc
mov
les
sub
mov
aas
push
fninit
xchg
or
push
xchg
insb
pusha
enter
push
insl
imul
pop
jb
mov
cltd
cwtl
and
inc
sub
shrl
call
mov
leave
inc
pusha
cltd
rep
iret
ja
cmp
pusha
cmp
mov
xor
les
mov
fwait
mov
cmp
and
jo
cmc
mov
cmp
dec
movsb
xor
push
mov
loope
cmp
sbb
add
bound
ret
outsl
jmp
rolb
clc
sub
mov
and
rorl
js
aad
mov
loop
mov
cmp
xchg
addr16
xchg
movsb
cmc
add
adc
fnstcw
mov
sub
cmpsl
dec
mov
jmp
xor
xor
lret
add
push
add
into
shl
lahf
orl
mov
push
ljmp
ret
lret
ljmp
push
mov
sbb
movsl
loope
dec
or
lcall
ljmp
int
push
jo
rol
cmpsb
fidivrl
cmp
jge
xor
hlt
jno
sub
or
mov
mov
lret
mov
mov
sbb
pushf
xchg
stos
bound
int
int
jnp
mov
add
lahf
test
in
cmp
xchg
ficomps
sub
les
push
push
jl
inc
push
jne
mov
addr16
lret
or
pushf
mov
call
mov
repnz
into
push
iret
and
dec
jl
loope
in
or
fcoml
pusha
cs
mov
and
dec
push
je
insl
mov
jp
lea
fwait
inc
fisttpl
jg
aad
dec
lock
nop
sub
addl
cmp
mov
lret
xor
xchg
inc
mov
cmpsl
jns
fwait
sub
jne
pop
leave
pushf
pop
and
cs
fcomps
push
jl
push
testl
adc
sarb
pop
jecxz
jns
test
stc
addl
pop
lcall
addr16
arpl
or
out
cli
shll
mov
adc
fdivrs
mov
jle
out
ss
repz
scas
out
xchg
xor
movsb
xor
jae
inc
sbb
xor
jle
mov
adc
pop
inc
cld
mov
push
cmp
stc
addr16
je
ret
addb
cmpsb
mov
ds
fcompl
fistps
push
adc
mov
aas
out
pop
cwtl
xorb
cwtl
cmpb
mov
push
ret
push
adcl
cmp
orb
sbb
sbb
push
push
mov
fimuls
jns
ja
mov
pop
cmp
mov
decb
or
xor
sbb
iret
ljmp
fcos
mov
jae
js
cld
ss
push
push
xlat
not
dec
push
aaa
into
inc
ret
cmpsl
and
hlt
lahf
sub
out
sbb
and
test
mov
xor
outsb
sbb
jae
pop
popf
sbb
mov
lahf
push
es
out
fwait
push
cmpsl
nop
xchg
add
roll
mov
std
data16
test
pop
adc
loope
in
jp
dec
cmp
jo
adc
adc
movsb
mov
test
addl
js
jecxz
fstpl
lods
sti
scas
mov
add
pop
sub
xlat
and
loopne
leave
push
pushl
sub
sarb
inc
xchg
or
push
and
cmpsl
pop
push
int
mov
sub
les
dec
roll
and
dec
repnz
iret
mov
jno
je
push
jne
and
xor
inc
pop
push
pop
mov
testl
out
lods
outsl
lahf
and
int3
jbe
ret
push
lock
hlt
popf
mov
mov
or
daa
out
imul
jmp
mov
mov
cmpl
dec
insl
dec
das
fnstsw
pop
das
and
mov
cltd
decl
cs
adc
cli
xchg
ret
rcll
jmp
inc
je
fnstenv
and
jmp
call
inc
lods
cmp
or
pop
xor
cmp
push
jne
cmc
in
mov
cmp
test
pop
xchg
lds
packuswb
cmp
or
push
hlt
mov
lods
aad
addr16
cmp
iret
mov
jle
sarb
lcall
jmp
scas
leave
jl
push
sub
es
push
lds
mov
add
xor
xlat
cmp
push
fldz
dec
push
pushf
stos
shr
push
sbb
mov
mov
rcll
bound
in
std
push
push
push
sub
rol
ret
rcll
push
xchg
push
shlb
mov
dec
call
adc
sbb
xchg
loopne
sub
aad
adc
adc
sub
dec
ret
imul
lcall
roll
ljmp
xor
je
mov
fldl
lret
cmc
jp
out
in
cmp
xor
hlt
mov
stos
mov
mov
sub
int3
or
push
shrb
push
nop
mov
dec
repnz
jecxz
setg
add
push
fisttpl
mov
mov
rcl
cwtl
add
add
or
cmpsl
in
out
mov
aad
jo
push
fwait
jbe
rolb
dec
mov
xchg
mov
out
xor
jecxz
mov
cmp
pop
pusha
ds
cmc
leave
add
cs
push
repz
stos
ret
bound
test
ror
int
xchg
jne
adc
in
jmp
lea
hlt
movsl
aad
bound
cli
ss
pop
cmp
or
pop
mov
mov
xchg
xchg
jge
mov
mov
or
push
xchg
mov
ljmp
inc
jbe
js
pop
xlat
loope
jp
imul
enter
clc
add
jne
cld
cmp
lods
std
or
cmc
je
loope
push
dec
dec
add
sarb
test
dec
cmp
mov
adc
cmp
xchg
cmp
nop
sub
jle
xchg
push
das
jb
dec
add
lea
stc
and
add
aad
jle
lea
jge
inc
scas
cs
movsl
adc
pushf
xor
sti
and
xchg
sbb
mov
pop
mov
inc
aaa
aad
jns
loope
subb
in
faddl
test
xorl
inc
mov
dec
je
test
and
aaa
sub
mov
inc
push
mov
ss
mov
xor
mov
pop
jle
add
rclb
xchg
push
cld
jne
mov
jmp
pop
xchg
push
sbb
ficoms
lds
or
and
mov
jmp
ret
jae
cmp
pop
jbe
pop
shrl
mov
rcrl
inc
stc
or
adc
ja
sub
mov
popa
cmpb
bound
in
not
pminsw
notb
sub
shrb
sbb
les
je
sbbl
jmp
hlt
outsb
aam
les
iret
imull
adc
mov
rcl
fidivrs
pusha
scas
adc
sbb
int
or
in
cmp
fstl
inc
mull
xor
je
pushf
push
sarb
pop
mov
cwtl
icebp
xor
pushf
jge
stc
dec
mov
fsubrs
cmpsb
and
add
cltd
xchg
mov
ja
xor
or
rorl
dec
sbb
insb
adc
adc
xchg
xor
pop
stos
out
sahf
pop
idiv
inc
push
fstpt
or
fildll
iret
fcmovu
mov
fs
add
iret
mov
popf
repnz
sbb
mov
mov
mov
mov
mov
stos
daa
shlb
mul
mov
and
in
or
xlat
sbb
cld
lds
add
jnp
pop
pop
jl
add
sub
sbb
fisubs
sbb
push
or
cmpb
mov
add
sub
jno
xchg
icebp
mov
push
mov
push
mov
add
mov
mov
dec
xor
das
cmc
lret
and
test
or
cli
push
xor
push
xchg
out
rorl
xor
jl
xor
hlt
int
test
popf
lds
xor
call
ja
loope
clc
repnz
outsl
mov
push
shr
lret
jae
popf
test
mov
mov
adc
ret
rcr
fs
xchg
test
mov
and
loopne
sub
sti
mov
adc
inc
insb
add
adc
xchg
or
scas
popfw
loop
repnz
sbb
cwtl
add
sbb
popf
jae
aaa
push
dec
ret
rcrb
dec
icebp
dec
popf
mov
mov
inc
dec
mov
cmp
pop
adc
mov
xchg
cmp
jecxz
fdivrs
add
ja
adc
jmp
hlt
xchg
cmp
mov
std
pop
mov
jo
cmp
jnp
pusha
xlat
mov
sub
xor
cmp
nop
out
in
cmp
adc
xchg
pop
pop
xchg
push
mov
mov
xchg
arpl
sub
fmuls
cmpsl
imul
push
xchg
leave
popa
repnz
cmp
fwait
push
shrl
gs
mov
mov
pop
sbbb
lods
xlat
mov
jns
pop
js
mov
js
je
int
shlb
hlt
cwtl
cmp
pop
mov
outsb
mov
mov
lret
jnp
adc
pushf
rcrb
sahf
shlb
jnp
out
sar
and
push
jl
add
dec
jmp
push
lods
sbb
xchg
imul
stc
movsb
stos
lahf
xchg
fsubr
aas
jle
fistps
xchg
push
cmp
imul
and
pop
sbb
pop
mov
dec
jle
ret
test
dec
negb
enter
fcomps
sti
mov
xchg
test
bound
in
add
inc
rorb
ret
lcall
push
cmp
adc
lods
adc
xchg
push
mov
fimuls
adc
je
ljmp
loope
jb
inc
les
cli
push
insb
or
sub
xor
lcall
fldt
out
sub
cs
fcmovne
jne
jns
add
ret
cmp
sub
pop
dec
xchg
sbb
mov
sbb
mov
insb
cld
adc
mov
dec
out
add
adc
in
push
das
adc
xor
test
xchg
aaa
mov
cli
inc
push
jno
repz
dec
adc
ss
xchg
inc
and
xchg
imul
sahf
sbb
ret
jno
sti
cmp
xchg
out
jp
pop
cmp
in
or
sbb
mov
lock
xchg
sbb
fsubl
leave
xchg
jnp
repz
push
out
adcb
mov
add
sarb
inc
mov
mov
in
and
sbb
popf
jae
push
ror
add
jle
jecxz
flds
jne
ret
addl
das
sub
fmulp
jl
mov
dec
add
fidivs
fcomps
mov
push
xlat
xor
inc
and
jge
pop
test
aas
iret
bound
loop
jne
mov
testl
arpl
xor
push
sbb
xchg
pop
adc
mov
pushf
push
pushf
dec
shld
or
lea
cmp
xchg
mov
jae
out
bound
mov
movsb
cmpps
xchg
push
push
push
mov
xchg
pop
push
cmpsb
sti
xchg
mov
sbb
xor
push
mov
jl
dec
cmp
or
mov
pop
ja
idivl
xlat
sbb
loop
mov
movsb
dec
lret
ja
icebp
dec
xorl
jno
dec
adc
pop
or
out
andl
adc
xchg
jbe
ret
sarb
cmpsl
fnclex
cs
repnz
cli
sub
aad
jmp
push
sbb
jmp
adc
jb
test
push
sbb
jg
push
sahf
mov
lea
mov
and
jb
push
fistpl
sti
xor
shlb
mov
inc
pusha
pop
scas
cmp
jmp
dec
out
xchg
push
or
push
sbbb
cmc
fistpl
pop
int3
lods
fsubl
and
cs
movsl
pop
mov
pop
outsl
sub
mov
sbb
stos
xchg
jnp
sub
inc
inc
cmp
stc
push
and
push
jno
xchg
ret
loope
push
add
movsb
call
mov
push
movsl
iret
xor
xor
pop
mov
mov
out
and
das
jae
addl
out
cs
cwtl
push
sbb
sbb
xor
dec
dec
adc
mov
daa
cmc
mov
cs
inc
mov
xor
inc
in
addr16
les
add
cmp
add
adc
jne
or
insb
pushf
test
movsl
jo
pop
fstpt
call
push
shrl
xchg
xor
inc
fsubs
movsl
cltd
clc
or
out
add
in
xchg
push
out
lret
mov
mov
xchg
fadds
dec
sbb
sbb
dec
mov
fildll
cmc
add
imul
mov
shl
push
popf
shrl
sbb
sbb
push
and
dec
inc
scas
pop
add
lds
imull
or
or
mov
inc
imul
dec
jge
jmp
lret
das
cmpsb
xor
adc
jbe
xchg
ffree
sbb
pop
jnp
jb
jp
lds
xor
insb
dec
cmpsl
outsb
enter
not
xchg
add
sbb
and
adcl
data16
orl
jecxz
jne
dec
popf
cli
pop
shrb
addl
in
cld
fisubs
mov
mov
ja
pop
push
divl
mov
xlat
push
adc
dec
xlat
or
popa
orl
inc
lcall
add
sbb
nop
cmp
bound
test
lea
out
lahf
cwtl
loopne
sbb
cmp
cmp
shlb
lea
addl
mov
mov
mov
adc
adc
jno
xchg
inc
mov
nop
sahf
pop
repnz
daa
mov
in
gs
or
sub
out
loope
cmpsb
mov
adc
ljmp
inc
lret
in
push
lds
adc
or
movl
in
and
jecxz
dec
gs
aas
les
add
xchg
ds
add
inc
sbb
xor
xlat
push
sbb
cmp
aad
sub
mov
test
xor
add
mov
mov
mov
bound
pop
in
or
sub
sub
lods
pop
inc
xor
or
gs
movsl
cmp
mov
pop
jb
mov
sbb
dec
xor
data16
lock
vmovntdq
gs
dec
cmp
pop
les
push
xchg
jne
idiv
test
jo
adc
jg
movsl
and
dec
push
cmp
aas
xor
dec
je
pushf
mov
inc
mov
pop
and
call
add
insb
ljmp
pop
jl
add
popf
cmp
in
in
out
or
sub
xchg
mov
iret
cltd
pop
add
test
push
cmp
aas
xchg
dec
jge
mov
mov
pop
mov
int
inc
mov
lods
xchg
in
push
insl
ficompl
imul
lock
sti
cld
fcmovnu
aam
popf
and
and
fcoms
lea
scas
bound
jno
xchg
mov
insb
call
cmpl
push
adc
scas
lcall
pop
pop
jecxz
inc
dec
loop
int3
fwait
mov
loopne
xchg
sahf
cmovo
inc
cs
aas
mov
lret
or
push
ljmp
pop
and
dec
mov
arpl
mov
cmp
or
jge
mov
loope
ret
inc
imul
xchg
lods
mov
xor
sbb
xor
rorl
jmp
sbb
jae
outsl
push
mov
movsb
fnstsw
ja
and
jb
cmp
fstpl
loopne
inc
xchg
mov
jo
mov
popf
js
pop
inc
dec
or
mov
scas
out
pop
sti
mov
cmpsl
push
pop
pop
push
pushf
mov
xor
fcmovne
push
pop
in
sbb
inc
out
cmp
add
int3
test
out
xchg
cli
test
mov
pop
cmp
mov
mulb
inc
xor
and
add
pop
mov
xchg
pusha
int3
loop
xchg
loop
nop
cmp
xor
jo
xor
inc
lret
pusha
es
lods
pinsrw
fcomip
out
push
xor
rcrb
pop
xchg
dec
pushf
jl
or
or
js
add
lret
xor
cld
cmc
out
insb
xor
inc
sbb
cld
dec
jb
loope
test
xacquire
pop
aad
nop
xchg
inc
pop
loope
xchg
push
mov
xchg
cmp
pop
mov
pushl
mov
jne
mov
sbb
and
ss
add
or
outsb
jo
inc
xchg
adc
adc
pop
out
jns
cwtl
cld
inc
mov
adc
loop
dec
mov
leave
hlt
mov
scas
scas
loope
leave
aas
mov
mov
and
mov
push
xor
cmpsb
in
jg
pop
push
or
cwtl
popf
in
shlb
clc
fldl2t
pop
sti
add
stos
inc
add
adc
lock
or
aad
lcall
aas
pop
popa
pop
outsb
adc
ss
sub
jbe
sbb
ss
lock
or
adc
pop
and
push
imul
inc
inc
jno
lods
mov
mov
jmp
xchg
out
loope
fimuls
sub
xor
ret
out
orb
in
in
mov
fildl
sbb
pop
sbb
lcall
adc
test
cli
iret
and
or
mov
ret
xor
push
xlat
jmp
mov
test
testb
xor
sbb
leave
xor
clc
bound
test
pop
cmp
mov
push
leave
mov
adc
xlat
xor
inc
xor
ret
jbe
pushf
je
out
jg
pusha
xchg
pusha
mov
js
cmp
test
pop
or
pop
push
xchg
add
sub
lods
mov
test
xor
enter
sub
add
aam
xor
pop
and
adc
xchg
and
or
xchg
data16
cmpsb
fdivl
mov
pop
sub
fs
push
inc
lret
mov
int
aaa
pop
cmc
enter
nop
in
lock
jno
mov
mov
aam
pushf
mov
stos
dec
xchg
xor
mov
jmp
call
mov
and
and
jbe
cmp
xor
mov
scas
ret
sbb
test
movsb
or
cmc
jae
sub
xor
jns
xlat
pop
test
dec
mov
addr16
out
add
jecxz
pop
push
push
mov
int3
mov
pop
pop
pop
icebp
or
inc
ss
cmp
jge
pop
mov
lcall
lret
je
sarl
lods
mov
sbb
sahf
pop
lds
das
loopne
imul
cmp
xor
mov
mov
repz
sub
mov
inc
sbb
mov
cmp
cltd
fisubrl
and
dec
int
loope
sbb
iret
data16
mov
sub
hlt
pop
nop
shll
or
jle
sub
shll
out
xor
loopne
cmp
mov
dec
mov
shll
shrl
rclb
adc
mov
ja
mov
and
xchg
or
push
jnp
xor
xchg
not
jns
push
mov
lea
out
data16
aaa
dec
mov
outsl
mov
lcall
insb
popf
scas
mov
jecxz
pop
sub
inc
stos
mov
sti
xor
push
and
in
mov
out
les
xchg
es
les
xchg
rol
mov
sbb
movsb
fdivrl
lods
push
jp
outsb
xor
leave
aam
jnp
push
mov
inc
and
lods
test
cmp
push
sbbb
and
outsb
movsl
loopne
stos
sbb
insb
mov
dec
out
add
add
push
cli
jg
test
das
pop
and
xor
cmpsl
fdivs
pop
ret
outsb
jae
inc
jbe
scas
xchg
xor
andb
mov
adc
xchg
mov
outsb
jecxz
sub
jno
mov
inc
xchg
addr16
mov
insl
stos
jae
dec
push
or
adc
adc
sub
xchg
pop
jecxz
in
xchg
in
xor
inc
lea
jae
push
add
lcall
or
js
mov
lds
test
cmpsb
push
sub
xor
mov
and
cwtl
movsl
ljmp
jo
ret
cmp
xchg
cmp
in
test
and
and
out
jecxz
xor
loope
sub
enter
push
data16
lods
sti
cmpsl
dec
add
jb
xchg
jb
add
mov
mov
adc
loop
addl
and
mov
rcll
test
dec
mov
lahf
stc
sbb
jb
sub
fwait
and
addr16
cmp
adc
sbb
dec
repz
and
mov
push
dec
imul
jle
sbb
or
fldcw
mov
adc
sub
aas
stos
sbb
inc
ret
pop
jl
out
hlt
jnp
ret
fimuls
notl
sbb
mov
or
sub
sub
mov
sub
mov
rolb
sti
jecxz
pop
into
pop
daa
adc
cmp
mov
js
xor
enter
shlb
push
or
mov
inc
shrb
add
jae
ficoml
inc
or
adc
sbb
dec
mov
dec
or
xchg
inc
jle
xor
pcmpgtb
adc
int3
loop
dec
popf
mov
pop
push
incb
jmp
mov
mov
mov
loop
mov
mov
cmp
sub
mov
xchg
ret
jne
aam
dec
mul
or
or
mov
pop
rol
adc
jne
imul
fs
xchg
xchg
mov
sbb
inc
or
sarb
arpl
out
mov
jbe
fisttps
out
cmp
xchg
sub
pop
push
popf
lea
inc
test
int3
arpl
add
xor
out
sub
cld
test
jge
jg
xlat
sahf
es
sub
inc
xlat
and
jle
pop
lock
fnsave
jl
repnz
xchg
adc
mov
and
and
aaa
into
mov
into
gs
push
in
add
in
andl
mov
stos
xchg
daa
mov
std
jmp
shrb
cmp
insb
jb
mov
adc
xor
sbb
leave
dec
xor
in
fwait
xchg
jae
mov
add
inc
sub
scas
pop
arpl
ret
mov
out
or
jle
and
push
pop
cli
xchg
je
and
test
into
xor
enter
push
in
test
jge
cmpsb
jae
fadd
add
icebp
stc
xchg
sub
adc
mov
jle
inc
fcoms
mov
imul
bnd
and
jle
cmp
pop
sahf
jbe
popf
xor
xchg
and
ljmp
std
xor
push
mov
mov
jmp
pop
out
adc
jp
imul
orl
jne
mov
sub
nop
daa
insl
dec
cmp
inc
mov
aam
and
std
xchg
arpl
std
xchg
mov
loopne
and
daa
mov
adc
addb
xchg
pop
push
loope
push
sbb
xchg
sub
gs
gs
jg
xchg
jae
loope
sbb
sbb
adc
gs
lods
rol
cmp
loope
xchg
sbb
and
mov
data16
mov
ret
sti
loope
jo
sbb
cmp
cli
mov
shll
cli
loope
xchg
sbb
lret
inc
cmp
and
and
lahf
xchg
rol
stos
stc
loop
rcrb
gs
inc
cmp
push
data16
lahf
xchg
rol
jl
loope
push
sbb
jno
cmp
sbb
cmpsb
cmp
rol
inc
cld
loop
test
push
cmpsl
ds
cmp
xchg
imul
mov
jle
loop
aam
adc
sahf
dec
cmp
jae
push
std
xchg
xchg
rol
mov
cli
in
loope
sbb
and
pop
xor
addb
mov
loop
or
push
movsl
daa
ds
xlat
addr16
pop
bnd
lods
inc
mov
sbbb
rcll
out
xlat
outsb
sbb
test
arpl
pop
mov
les
fistpll
mov
sub
mov
mov
bound
and
enter
test
aam
movsl
jbe
fisubrs
rolb
mov
add
cmpsb
jne
lods
scas
movsl
cmp
sarb
or
jo
pop
sub
shlb
enter
shl
jge
adc
in
dec
sub
dec
push
outsb
cmpsl
ds
ja
xorl
add
jnp
sub
insl
add
js
xchg
ret
inc
frndint
hlt
shrl
push
sub
inc
dec
sbb
ja
push
out
xchg
xchg
daa
mov
jmp
mov
sbb
lahf
ss
mov
add
loopne
dec
sbb
push
jmp
cmp
addb
arpl
loope
xchg
sbb
out
xchg
cmp
xchg
sub
les
xchg
out
shl
xchg
cs
cmp
sub
add
jg
ja
scas
inc
rcrb
or
ds
imul
sbb
mov
fbstp
shrl
or
je
cvtpi2ps
jnp
xor
outsb
imul
scas
mov
mov
insb
add
fsubrs
add
push
push
and
fistpl
je
mov
daa
mov
or
sub
in
orl
mov
les
lock
pushf
xor
int3
arpl
jnp
xchg
imul
xchg
mov
push
out
mov
jecxz
adc
push
or
cmp
xchg
xchg
pop
lret
bound
mov
or
dec
std
mov
es
push
xchg
inc
cld
xchg
xorb
ficoml
jl
dec
sti
fdivl
insb
stos
inc
xchg
inc
dec
loop
mov
adc
sahf
sbb
enter
dec
jmp
sti
xchg
cltd
xor
mov
mov
mov
mov
mov
pop
mov
bound
jl
rorl
ret
pop
sub
dec
loop
dec
jl
js
adc
imul
cld
xchg
and
add
cmovb
stos
jl
mov
imul
fwait
mov
xchg
sub
fmul
bound
xor
in
pop
nop
mov
lret
orb
jmp
adc
and
push
aaa
repz
lret
bound
cld
xchg
movl
daa
mov
jbe
xor
sbb
scas
jecxz
mov
rcrl
loope
sub
cmpsl
movl
sti
xchg
cmovae
xorl
mov
xchg
dec
in
mov
scas
mov
loope
fcoms
cmp
jo
jae
jno
and
lret
daa
int3
jmp
push
adc
aaa
sbb
jo
sub
lret
andl
in
push
jmp
fiadds
sbb
xchg
cs
mov
dec
lods
fcoml
cld
sub
push
pop
sbb
enter
cld
xchg
mov
rcrl
sbb
xchg
dec
push
inc
faddl
test
gs
xchg
mov
jns
jmp
or
push
xchg
rclb
xchg
sub
mov
ret
adc
cwtl
dec
pop
leave
pusha
mov
mov
fistpll
pop
test
adc
inc
dec
ss
jo
push
stos
lahf
fs
les
xor
dec
xor
arpl
push
mov
mov
das
mov
add
das
push
repz
pop
dec
fadds
stos
pop
out
fmul
mov
repnz
imul
pop
inc
ja
jge
fldcw
xchg
cmpsb
inc
into
fsubrp
ja
in
jb
sub
mov
data16
iret
lods
mov
shlb
frstor
add
sub
ss
arpl
sahf
jnp
dec
cmpsl
mov
or
lret
mulb
sbb
fsubrl
popf
sub
fisubrs
movsl
out
mov
aam
jl
pop
movsl
pop
bound
lret
xlat
outsl
imulb
call
sub
mov
mov
and
leave
or
lods
aaa
out
hlt
sbb
mov
push
cmp
xchg
out
sbb
fistpl
sub
push
test
jo
hlt
xlat
push
adc
and
jbe
push
adc
rolb
rcll
repnz
fs
aad
sahf
jnp
mov
push
jecxz
shrb
cld
stc
xorb
or
aas
pop
jg
daa
xchg
lods
dec
scas
scas
les
aad
pop
add
cmc
test
cmp
insl
pop
dec
and
jge
mov
in
sti
in
test
and
sbb
jnp
mov
shl
xchg
add
rsm
push
sbb
jo
mov
mov
mov
fcoml
fnstsw
loope
cmp
inc
dec
jmp
push
lods
inc
jp
jle
fisttpll
outsb
or
cld
adc
sbb
or
fs
cmp
fnstenv
ret
cmc
es
dec
insl
or
inc
xchg
ficomps
jl
and
mov
jb
aaa
xchg
addr16
stc
xchg
sub
movb
push
repz
jae
pop
sti
test
es
dec
fwait
push
mov
mov
mov
pusha
lret
lret
stc
sbbb
sbb
fistpl
jne
adc
and
addr16
jp
xchg
lcall
lock
sbb
test
cmp
lods
popf
mov
mov
int3
mov
or
ss
aad
cltd
xlat
data16
push
jecxz
int3
add
xor
ds
push
inc
mov
nop
outsl
bound
test
lods
dec
in
xchg
and
sbb
ret
jno
push
lret
js
lea
stos
push
fwait
loope
hlt
test
sbb
shrl
les
mov
push
ffree
xorb
call
mov
push
xchg
loop
rorl
mov
push
sub
fstps
push
in
push
mov
mov
fstl
xor
xor
push
test
lret
cld
loopne
or
call
pop
jno
mov
lods
ret
inc
into
and
inc
and
test
push
outsl
push
movsb
mov
in
test
push
int
inc
sbb
xchg
imul
mov
and
mov
test
cmp
cmpsl
ds
pop
lds
ret
pop
xchg
lods
out
fidivs
add
cmp
pop
or
aam
or
daa
add
xor
xchg
jp
add
jae
test
mov
pop
std
inc
fsubrs
ds
das
jo
pop
idivb
dec
leave
xchg
jge
out
imul
fwait
xor
and
mov
push
pop
test
cmpsl
mov
xlat
outsb
jno
lds
hlt
mov
inc
inc
fidivrs
adc
fidivs
mov
sbb
lret
mov
inc
mov
cltd
xor
lret
fadds
push
shlb
push
out
push
mov
test
add
pop
inc
mov
cmpsb
out
ret
enter
push
shrb
sub
add
mov
adc
hlt
adc
or
push
ljmp
jb
sahf
jp
fsubrs
iret
pop
out
pop
push
ret
pop
imul
mov
mov
push
into
outsl
adc
lahf
jmp
insb
sbb
das
into
jmp
ljmp
jb
push
jmp
xchg
out
xchg
push
mov
rcll
xor
les
push
push
out
je
aam
xchg
adcb
out
xchg
xor
xchg
sub
push
adc
test
iret
popw
fstps
adc
lcall
or
sbb
lea
sub
jge
pop
inc
add
movsb
pusha
push
lcall
jl
leave
cwtl
sub
push
lcall
mov
dec
and
sahf
xor
hlt
cltd
mov
inc
jl
out
das
bound
ficompl
es
into
inc
adc
jno
xchg
inc
jp
cmp
sub
ds
dec
pop
insb
dec
sbb
or
out
in
andl
adc
lea
stc
fwait
push
add
test
xchg
sub
mov
cli
inc
sbb
popa
lea
push
jne
in
test
pop
and
jne
jbe
in
add
push
jne
jnp
or
mov
adcb
wrmsr
movl
dec
jecxz
cmp
push
outsb
mov
add
fsubrs
pop
mov
cmp
lock
jb
lea
mov
loopne
jne
mov
fnsave
and
mov
and
jae
movsl
or
cmp
mov
clc
pop
xchg
sub
mov
sub
insl
xchg
sub
xor
es
mov
in
cmpsb
movsb
cmp
jo
int3
stos
or
ss
push
aad
jle
dec
test
mov
lea
cmp
and
jno
xchg
lods
jne
loopne
mov
pop
lret
pop
clc
jl
fs
mov
mov
sbb
or
frstpm(287
pop
dec
dec
jle
sbb
or
inc
pop
dec
lods
mov
pop
sub
pop
repz
call
mov
ss
jmp
cmpsb
push
mov
in
mov
xchg
mov
adc
ret
movsl
or
adc
sub
xor
inc
stos
and
inc
adc
sub
aas
xor
mov
mov
jl
insb
fcompl
inc
and
jno
fisubrs
push
sbb
inc
ja
test
leave
jle
sbb
xchg
rorb
outsb
and
sbb
mov
shll
cmpsl
adc
popa
push
sbb
jecxz
divl
dec
roll
add
leave
insl
hlt
call
iret
nop
xchg
mov
add
sarl
popf
xor
jns
icebp
imul
pop
enter
sahf
xchg
sub
adc
adc
mov
inc
outsl
sbb
mov
int3
xchg
sub
lcall
dec
push
or
xchg
je
ret
data16
gs
jmp
dec
cwtl
decb
data16
cwtl
cmp
adc
scas
mov
mov
push
ret
push
es
sbb
mov
loope
rclb
sbb
jecxz
push
out
mov
lret
std
pop
pop
out
xchg
test
mov
mov
mov
push
mov
movsb
int3
arpl
gs
xchg
push
cld
xchg
dec
rolb
sbb
scas
dec
std
inc
fsubr
arpl
loopne
mov
sbbl
dec
pusha
mov
push
add
les
mov
inc
out
int
pop
push
sbbl
pop
insb
sub
movsl
push
mov
or
cmp
inc
or
xor
mov
fsubs
loopne
sub
cltd
push
in
subb
loopne
sub
mov
sub
dec
loopne
pop
adc
dec
fwait
out
test
mov
mov
sbb
xor
lds
mov
shrl
add
dec
xor
adc
mov
fmuls
or
sbb
out
out
test
or
lods
sbb
mov
lds
or
push
mov
insl
add
sub
or
sbb
sub
pop
sahf
sahf
lods
and
jmp
add
lahf
xor
and
xchg
sub
or
sbb
sub
test
lods
and
in
sub
push
popf
aaa
loopne
add
pop
mov
bound
enter
push
loop
cmp
test
lods
and
shl
lds
sbb
add
push
mov
add
insb
es
mov
inc
cltd
inc
inc
fdivl
nop
daa
iret
mov
hlt
mov
lds
mov
and
sub
cltd
out
stc
and
jo
into
dec
add
jbe
xchg
mov
inc
outsb
loope
fcoml
outsb
sahf
xor
push
in
test
test
xchg
push
out
or
and
ds
pop
outsl
cmp
stc
mov
sbbl
adc
pop
xchg
cmp
cmp
mov
mov
pop
sahf
jnp
loop
adc
jecxz
cmp
fstpl
mov
pmaxub
pop
adc
fidivrs
cmp
imul
add
sbb
or
and
jg
lret
jns
or
xchg
jp
test
jns
push
push
and
pop
imul
pushf
cltd
jbe
or
icebp
mov
syscall
pushf
aas
cmp
test
lods
push
mov
mov
data16
dec
sti
loop
sub
sbb
sbb
inc
pop
divb
xchg
and
movsl
out
lds
pop
cmc
sbb
stc
jl
and
enter
adc
mov
mov
ds
dec
in
lcall
mov
test
mov
and
sahf
cltd
lds
inc
in
stc
adc
cmp
cmp
and
cmp
sbb
jb
int3
fs
sub
pusha
xchg
ds
lea
lods
test
fmul
and
sbb
push
lds
ret
inc
fdivs
test
jbe
and
arpl
adc
int3
xchg
push
mov
out
cmp
pop
mov
faddl
lods
loop
out
out
repnz
or
sub
movsl
hlt
xor
out
pop
pmaddwd
pop
out
popa
clc
push
addb
ret
hlt
push
popf
out
mov
xor
inc
inc
fldl
mov
js
hlt
loop
out
xchg
out
and
jecxz
pop
mov
int3
popa
clc
sbb
mov
pop
sahf
dec
leave
jmp
mov
mov
aaa
into
repnz
cltd
sbb
push
iret
addr16
cwtl
push
test
xorl
mov
inc
mov
push
es
out
and
out
jmp
add
pop
jp
es
imul
data16
and
add
inc
cwtl
cmpsb
cmp
hlt
in
fcoms
cmp
cmp
faddl
stc
nop
nop
shlb
mov
mov
rclb
jle
mov
mov
rcl
outsb
add
xchg
outsb
sub
pop
insl
ret
pop
pop
je
xchg
roll
flds
and
hlt
jae
dec
movsb
call
push
call
mov
testb
jne
sub
shll
int
xor
inc
cmpsl
sub
push
sbb
or
dec
rclb
test
mov
pop
inc
es
stos
xor
testb
and
aaa
dec
jnp
int3
lods
jnp
lods
imul
nop
cli
fwait
fwait
xor
mov
inc
pusha
xsha256
cmpsb
push
outsb
push
out
xchg
movsb
cmp
lret
out
cld
inc
push
movsl
xor
sbbl
cmpsl
popa
es
sbb
mov
xor
pop
add
xor
mov
movsl
add
adc
sbb
outsb
xchg
dec
testb
das
iret
data16
mov
mov
xchg
and
push
in
in
fsub
jge
add
cmp
jl
xchg
sub
jg
aaa
jo
xor
ljmp
insl
ss
hlt
push
pusha
jno
xchg
xchg
rclb
push
lods
out
dec
and
cmp
push
in
test
int
shrl
cmp
push
cmp
push
sbb
sub
scas
inc
loope
dec
fistps
ficoms
test
lods
mov
ffreep
push
call
daa
mov
leave
pusha
subl
mov
stos
outsb
add
adc
or
dec
dec
scas
inc
orb
loopne
jmp
test
hlt
outsb
add
jb
popa
clc
fcomps
aaa
mov
leave
pusha
sbb
pop
hlt
ret
add
jb
or
popa
ljmp
push
xor
push
jmp
rorl
cmp
mov
sbb
push
call
data16
xchg
sbb
pusha
jle
push
in
outsb
add
add
or
cmp
push
lods
fisttps
cmpxchg
test
jle
xchg
jae
and
cs
outsl
push
in
adc
jle
loopne
movsb
cmp
mov
jle
mov
mov
mov
and
cld
mov
mov
fs
push
pop
out
inc
cmpsl
add
idiv
movsb
cmp
notl
out
inc
fimull
in
fstps
call
and
pushf
xor
dec
and
jle
push
in
jbe
ret
pop
lret
xor
loop
add
mov
addr16
outsb
mov
ret
cmc
mov
shl
jl
pop
adc
dec
inc
hlt
mov
leave
lcall
out
cmpsl
xor
fmuls
pop
cmc
dec
pusha
lea
mov
mov
mov
lret
popa
ss
out
mov
outsl
xchg
stos
add
in
pop
mov
pop
push
scas
aaa
dec
cmp
jnp
xor
xchg
push
ljmp
outsl
add
jo
mov
adcl
into
popa
push
repnz
cmp
jg
dec
out
jnp
add
aad
and
sub
fstps
inc
fnstsw
imull
sarb
push
ljmp
pop
cmp
mov
push
ret
outsl
add
fsubrs
and
lea
lea
adc
cmpsb
mov
mov
fdivl
leave
or
cs
out
insb
outsl
push
sahf
subb
fisttpll
mov
andl
int
mov
dec
loopne
mov
test
fucomi
test
and
and
mov
inc
fdivrl
lret
mov
mov
or
movsb
into
scas
inc
add
dec
loopne
pop
into
gs
jbe
test
ret
mov
cmc
push
adc
dec
ja
les
enter
push
jmp
jecxz
adcb
or
and
push
dec
out
scas
mov
jg
and
gs
jg
xor
clc
scas
mov
and
aad
ss
decb
das
daa
popa
clc
xchg
inc
fbstp
addr16
xchg
js
lds
outsl
push
jl
sbb
xor
test
in
aas
shr
inc
fucomi
fsubrs
adc
jnp
xor
gs
andl
lahf
mov
xlat
lahf
or
iret
push
std
and
mov
sbb
loop
push
scas
aam
call
xchg
das
lods
rcll
stos
ret
lds
div
adc
dec
adc
jp
ret
mov
test
in
adc
aas
or
mov
adc
rorl
or
jl
add
pop
inc
movsb
cmp
or
lds
lods
pop
in
pop
negb
ss
test
orl
mov
pop
sub
mov
movsb
xchg
xchg
or
mov
pop
mov
mov
in
int
pop
out
adc
dec
push
sbb
xchg
rcll
cmpsl
ret
shlb
je
inc
fimull
push
movsl
push
gs
xchg
data16
lock
movsb
pop
sbb
mov
outsb
imul
arpl
popa
add
stos
inc
cmpsl
pop
call
and
push
jg
cmp
sub
sbb
imulb
mov
je
adcb
sahf
fbstp
inc
out
ss
js
sub
mov
cmpsb
ja
lahf
ss
lahf
test
rorl
fwait
aas
stc
aas
sub
cmc
inc
inc
fsubrs
je
data16
pop
mov
std
or
scas
dec
lahf
ss
into
rcll
push
aam
iret
popw
out
push
fdivs
push
imul
call
cwtl
das
adc
es
das
imul
xchg
pop
mulb
ficomps
addps
pop
jl
mov
jno
mov
int3
sub
xchg
adc
lods
inc
sbb
out
mov
leave
lock
lods
lock
adc
pop
inc
das
pop
negb
scas
sbb
dec
cld
das
pop
repz
push
push
out
ficomps
scas
shlb
jle
adc
mov
push
lods
and
cmc
mov
push
dec
out
push
jge
xchg
sahf
arpl
adcb
push
mov
inc
push
push
popf
inc
push
rcrl
fs
add
xor
pop
or
mov
test
push
xor
inc
testb
dec
imul
in
cmp
mov
test
mov
cmpsb
pop
testb
mov
cmp
jae
adc
iret
jb
adc
mov
test
adc
or
lock
stc
or
sbb
test
mov
test
jnp
lahf
pushf
and
dec
call
sbb
or
leave
pop
jg
jge
jne
xchg
xchg
jae
and
inc
out
js
mov
cmp
pop
ds
ljmp
mov
and
mov
sub
ds
mov
movsb
cmp
push
movsb
insb
add
push
fidivs
decl
mov
stc
inc
lods
inc
js
pop
mov
xchg
dec
loop
in
pop
fsubrp
in
andl
pop
notb
roll
ret
xchg
sub
movb
ss
lret
bound
jns
fldcw
insb
add
jne
xchg
or
adc
lods
inc
adc
cmp
mov
cmpl
mov
add
cs
pop
sub
lret
bound
ret
hlt
push
pop
inc
push
or
dec
ja
call
cltd
xchg
testl
lods
or
xchg
cmp
push
fwait
xor
mov
shl
pop
jbe
push
or
jae
popa
pop
scas
push
push
jnp
test
dec
push
lods
sbb
fisubs
push
clc
mov
insl
testb
in
ljmp
shlb
out
mov
fs
loop
xor
fs
mov
imul
xlat
sti
xchg
or
pop
and
arpl
shrb
fdivl
xorl
inc
add
xorb
mov
test
push
jmp
add
mov
cld
pop
sti
xchg
mov
icebp
mov
mov
inc
and
cmp
and
push
fdivl
fsubrs
ror
jnp
fimuls
cli
xchg
jp
sbb
sub
inc
insl
inc
mov
adc
pop
repz
bound
lds
xchg
sbb
pushf
xor
lods
inc
cmp
sub
repz
sub
shll
xchg
push
adc
pushf
xor
fidivrl
rorb
sbb
mov
push
frstor
adc
sbb
clc
fsubl
inc
sbb
pop
repnz
fisubs
shlb
ret
pop
ja
pushf
xor
and
cltd
idiv
xchg
jmp
in
or
adc
or
sbb
dec
scas
mov
sbb
scas
pop
out
pop
push
clc
jg
dec
lods
inc
ds
jg
loope
montmul
cmpsb
inc
or
mov
je
mov
mov
arpl
dec
lock
xor
pop
or
xchg
imul
adc
scas
pop
mov
dec
dec
fistpll
idivl
sub
lods
jg
push
lahf
call
loopne
stc
jg
sub
sbb
cmpsb
lahf
cwtl
das
rcr
sti
xchg
lret
stc
das
sub
shrb
inc
enter
aaa
into
outsl
pushf
pop
test
fwait
xor
clc
sbb
pop
push
xor
stc
add
dec
stos
inc
cmp
mov
mov
push
stos
in
sbbl
ljmp
xchg
out
add
lahf
jbe
inc
and
shll
loopne
test
lods
sbb
js
xchg
xchg
add
and
cmp
pop
mov
and
out
xlat
outsb
mov
or
mov
lods
jge
data16
jle
stc
mov
sbb
xchg
imul
pop
mov
icebp
out
lret
bound
stos
sbb
lahf
cs
cmp
out
xor
rorl
push
loop
aaa
into
xchg
roll
mov
ds
sub
ds
jae
test
push
push
stos
in
fsubl
leave
push
testb
pop
inc
and
rcrb
pop
int
mov
popa
in
cld
push
xchg
inc
flds
add
test
lods
inc
ficompl
call
lods
inc
xor
shrl
push
lret
mov
mov
fsts
add
push
mov
sub
imul
ss
lds
ss
pop
xchg
push
test
movsl
add
enter
mov
test
add
sub
lcall
ds
rorb
clc
es
outsb
lds
cmp
sub
push
push
scas
dec
movsl
popa
pop
in
arpl
dec
cwtl
xchg
sahf
jl
cmp
fwait
jg
cltd
mov
sbb
loop
jno
fcoml
stc
add
imul
push
call
outsb
fimuls
andl
jl
sub
adc
fcom
es
add
outsb
inc
packsswb
sahf
jl,pn
mov
aaa
jnp
insl
mov
test
push
fs
mov
jle
jne
add
fstpl
adc
sbb
and
pop
repz
jle
inc
jecxz
mov
jp
icebp
pop
jae
or
xchg
mov
jne
xlat
iret
jnp
ljmp
inc
call
aaa
mov
cmpsb
fistpl
sbb
ret
cmpsl
lret
jmp
fmul
enter
loopne
or
stos
movsb
xchg
es
xor
mov
add
and
push
fisubl
and
jnp
add
insl
xlat
dec
sbb
add
xor
movsl
int
out
xchg
pop
movsl
shl
jns
dec
or
lret
xchg
loope
pusha
outsb
add
fadds
mov
popa
jno
sub
xchg
les
cs
fwait
jno
cmp
popa
imul
xchg
loope
mov
in
cwtl
nop
xchg
push
movsb
lcall
mov
js
cs
push
xor
push
test
fsubl
jmp
add
or
push
mov
mov
aad
fistpl
inc
mov
repz
lods
int3
arpl
dec
adc
xor
pop
divb
xchg
xchg
fwait
xor
clc
ret
cld
mov
ja
push
fsubrs
sahf
xchg
shrb
sbb
and
adc
cs
cmp
jne
xor
adcb
push
sarb
fdivl
setl
inc
inc
cli
xchg
js
mov
scas
lret
outsl
out
ss
scas
push
dec
out
mov
int
mov
push
jmp
or
es
cld
pop
out
xor
cli
xchg
push
push
jbe
xchg
scas
mov
les
int
sti
mov
xor
in
mov
inc
dec
data16
xchg
cwtl
outsb
leave
pusha
mov
shl
repz
pop
es
xor
push
jne
mov
scas
mov
ret
repz
mov
sub
dec
insb
stos
jg
pusha
divl
sarb
add
push
out
es
cli
or
lahf
ss
sub
sbb
mov
ss
pop
repnz
mov
adc
dec
pop
scas
jns
stc
nop
stos
cltd
xor
scas
std
jmp
ljmp
jno
outsl
jno
in
mov
ret
repz
lds
xchg
and
sub
addr16
hlt
pushf
xchg
lods
int
ficomps
clc
xor
adc
jno
and
mov
clc
xchg
xor
dec
xor
cmpsl
mov
cli
std
clc
andb
adc
xor
mov
mov
test
daa
cld
xchg
and
scas
inc
cs
sbb
adcl
push
in
sbb
or
outsb
dec
es
rcrl
inc
adc
stc
push
ss
gs
mov
cmpl
or
sbb
sub
imul
mov
loopne
lods
adc
sbbb
xor
arpl
aaa
stos
test
mov
mov
rclb
sbb
mov
ret
xor
cmp
and
movsb
sub
fistps
mov
popf
xor
or
rcr
test
and
test
paddsw
jl
clc
add
movsb
fucom
mov
int3
jp
imul
pushf
hlt
inc
adc
out
inc
jnp
fidivs
inc
movsl
xchg
xorb
popa
in
push
mov
fcomip
inc
or
int
and
js
sub
int
js
jmp
xor
icebp
add
adc
movl
scas
mov
ret
xor
mov
das
jae
push
movsb
jge
add
jne
fistps
ret
add
mov
or
fidivs
test
pop
mov
xchg
mov
fistps
mov
iret
jmp
rcrl
or
lods
outsb
sub
fwait
iret
jp
mov
xchg
cs
or
add
mov
pushf
xchg
shll
mov
inc
inc
sub
jno
shll
xchg
dec
out
mov
outsb
add
push
push
sahf
inc
xor
xchg
xchg
out
ret
pop
or
jge
std
sub
xor
push
jg
push
mov
mov
js
das
cltd
cmpl
xchg
mov
jo
jne
mov
push
es
inc
cmp
stc
jl
insb
bound
lret
pop
add
and
popf
pop
inc
ljmp
mov
push
jbe
jne
xchg
xor
adc
roll
mov
push
push
add
mov
push
inc
orl
dec
pop
repz
into
daa
sbb
xchg
ds
dec
pop
mov
mov
mov
enter
cmc
enter
or
call
das
repnz
repnz
mov
cli
mov
dec
pop
pusha
shll
xchg
fstpl
jmp
xchg
movsb
cli
sbb
mov
adc
imul
ljmp
xchg
adc
out
dec
outsl
aaa
jbe
ja
hlt
push
sbb
and
cltd
in
mov
inc
or
sub
mov
dec
pop
sbb
pop
test
lcall
mov
clc
lcall
jae
lds
mov
das
xchg
jmp
sub
jae
loope
dec
sbb
stos
sbb
sti
lret
stos
inc
pop
fwait
js
leave
push
jge
imulb
sub
call
adc
das
pop
nop
scas
push
jp
xchg
pusha
fisubrl
ret
sub
pop
cs
faddl
cmp
or
gs
iret
add
inc
into
dec
adc
gs
jae
loope
adc
adc
adc
or
lods
and
das
jp
adc
sbb
inc
inc
ss
mov
mov
mov
sbb
inc
mov
jo
subb
inc
scas
stos
mov
jns
movsb
incb
cs
mov
mov
lcall
adc
inc
orb
lret
dec
sbb
pop
test
mov
mov
cld
push
loope
or
sub
dec
inc
fiaddl
adc
jle
xor
inc
adc
sar
js
imul
clc
ret
out
scas
bound
out
ljmp
and
and
pusha
into
xor
les
mov
mov
imul
js
mov
es
aad
mov
fidivrl
scas
add
jnp
sub
xchg
xchg
xor
test
and
enter
mov
decb
int3
cli
lahf
ret
jb
ret
sbb
inc
inc
outsl
in
add
push
pop
sbb
lret
mov
imul
or
fldl
and
lds
inc
bound
inc
jae
jl
call
fs
repz
xchg
scas
sub
add
popf
lods
mov
push
andl
outsb
lcall
imul
mov
addr16
mov
test
dec
out
cld
xlat
orl
fidivrs
loop
dec
scas
mov
mov
dec
mov
andb
loop
bound
pop
clc
cmp
shlb
xchg
or
and
loop
stc
push
mov
outsb
cli
cmp
cld
mov
leave
and
adc
scas
rolb
popa
mov
xrelease
push
xchg
outsb
mov
dec
push
clc
jae
sbb
sub
push
outsb
jnp
flds
push
add
sahf
pop
clc
jmp
movsl
das
scas
negl
in
lcall
neg
ja
in
cmpsw
dec
call
mov
sti
mov
lcall
fdivrl
imul
fisubl
stos
lret
std
not
mov
adc
movsb
add
mov
jno
stc
pop
xorb
and
cmp
sbb
or
cmp
lret
repnz
testl
or
gs
divl
leave
pop
es
pop
call
ret
rcr
sub
insb
sub
cltd
adcb
jno
adc
xor
outsb
aaa
insl
ret
sarb
insl
xchg
ja
movsb
jae
mov
cmpsl
xchg
fldcw
xchg
fiaddl
test
inc
js
enter
xor
addb
lods
cld
push
shl
arpl
and
lret
mov
pop
cld
xor
adc
das
aas
lcall
test
sub
in
pop
mov
mov
les
mov
mov
and
int
push
add
mov
mov
xchg
inc
and
xor
aas
pusha
idivb
roll
and
stos
inc
outsl
arpl
test
inc
enter
add
in
arpl
imul
push
pop
push
push
add
mov
ret
out
xor
out
add
imul
std
test
push
aam
push
decb
ret
popf
mov
mov
mov
fldl2t
add
insl
dec
stc
push
cld
push
popf
sarb
pop
dec
adc
xchg
cwtl
enter
outsl
cmc
out
cmp
in
clc
pusha
xchg
cmc
in
je
lds
stos
fildl
dec
mov
pop
sbb
jnp
push
sahf
cltd
xor
push
adc
inc
insb
push
xchg
fs
in
jmp
sahf
clc
cs
scas
and
movsb
pop
cld
movsl
popa
into
mov
stos
xor
xchg
stos
add
mov
xchg
mov
cmp
jp
fcomip
imul
and
test
xor
jbe
lret
mov
push
ret
ret
lcall
inc
out
mov
repnz
mov
sarl
dec
sbb
mov
xchg
mov
cmp
iret
test
insb
cmp
insb
cmpsb
pop
sahf
xlat
lea
movsb
and
rclb
arpl
out
std
xchg
add
push
mov
cwtl
das
jo
xor
lahf
loopne
adc
mov
push
insb
inc
andb
mov
xchg
in
pop
jbe
mov
std
mov
clc
and
dec
in
rolb
fisttps
jne
xor
into
xchg
push
jmp
lahf
ss
or
jmp
sbb
cmp
inc
fs
stc
push
adc
jns
testb
add
or
cmp
inc
mov
push
xchg
jae
mov
mov
lahf
push
or
enter
repnz
xchg
sbb
popf
xlat
outsb
pminsw
cwtl
cmpsl
xor
jmp
push
nop
jp
fs
ficoml
icebp
pop
dec
inc
js
ss
leave
stc
sbbl
jl
mov
adc
xchg
out
fwait
xor
mov
in
scas
inc
addl
int3
arpl
pop
or
daa
lods
es
jns
inc
fldt
fwait
es
int3
das
fdivrl
or
push
pop
arpl
cmpsb
mov
push
std
mov
cmpsl
dec
jecxz
gs
cmp
push
in
jle
loopne
movsl
push
sar
dec
adc
insb
scas
sub
or
or
add
add
fs
xor
je
add
jae
push
aaa
outsb
std
xchg
inc
outsl
mov
inc
outsl
push
cltd
shrl
mov
out
xchg
or
push
movsl
cmp
popa
xchg
pop
sub
lea
dec
loope
push
pop
sahf
aaa
add
xor
mov
test
movsl
cmp
cld
popa
clc
sub
dec
jg
orl
xor
mov
mov
mov
dec
fnstenv
inc
cmp
ja
testl
and
ja
sbb
ds
sub
xchg
push
inc
popf
mov
cmp
addl
lahf
dec
dec
xchg
jb
gs
popa
and
jge
insb
mov
adc
lds
add
cs
mov
adc
mov
sub
add
cwtl
add
jnp
mov
jge
loopne
mov
or
popa
xchg
stc
popf
fwait
mov
jmp
mov
inc
pop
lret
lret
aam
call
fnsetpm(287
iret
fdivrs
hlt
mov
jae
inc
adc
jle
push
add
inc
in
mov
mov
inc
or
cmp
adcl
or
filds
sub
aaa
add
fimuls
stos
gs
sbbl
cli
testl
jle
mov
lret
fnsave
push
call
jl
outsl
push
jbe
sbb
leave
out
aaa
into
and
stos
inc
sbb
add
cs
push
repnz
and
fnstenv
inc
dec
loope
jae
mov
push
sbb
fcompl
push
out
inc
std
je
out
loope
movsb
sbb
cmp
cmpb
dec
adc
ss
test
mov
pop
mov
fcoml
adc
inc
push
out
repnz
cmc
adc
jae
clc
sti
xchg
ja
push
mov
nop
daa
cltd
jl
fwait
popf
mov
and
ds
int3
inc
pop
xchg
cs
in
push
adc
mov
pop
in
push
in
testl
add
xor
sbb
inc
cmp
push
lods
sbb
cmp
ret
sti
mul
lea
divb
das
mov
pop
or
or
cs
sub
sar
mov
gs
or
enter
mov
jmp
lea
cmc
in
insl
xlat
outsb
cltd
or
sbb
adc
inc
xlat
xor
aam
in
repz
ret
mov
gs
mov
inc
adc
in
push
jnp
inc
push
mov
insb
push
mov
fdivl
fnsave
inc
fnstcw
fldcw
lret
adc
mov
fucom
lods
inc
sbb
mov
mov
cmpl
cmpsb
movsb
adc
adc
ss
push
test
enter
flds
add
pop
hlt
int
mov
fldz
sahf
xor
mov
pop
dec
loopne
xchg
sbb
pop
and
mov
inc
sub
jmp
int
and
xchg
pop
gs
dec
xor
subb
in
or
dec
fcomip
loopne
mov
adc
jae
les
inc
sbb
push
movsl
lods
adcl
int
lea
loopne
adc
inc
data16
test
in
in
je
outsl
push
inc
mov
dec
cwtl
loop
or
std
xchg
es
inc
sahf
iret
pop
testb
mov
mov
sbb
lds
out
out
insl
fmuls
mov
es
xor
aas
jle
push
movsl
push
lahf
ljmp
xor
jne
mov
test
lret
jl
fwait
lcall
test
or
jno
dec
loope
xchg
push
out
add
scas
and
je
inc
pop
icebp
cmpsb
mov
mov
mov
stos
cmp
mov
xchg
dec
or
mov
pusha
shr
xchg
cmpb
scas
shrl
adc
inc
fcmovb
cmpsl
hlt
mov
imul
stos
cmp
into
push
add
dec
fists
shl
test
pop
repnz
out
mov
xchg
dec
in
sub
sub
pop
mov
and
inc
fldt
add
mov
fdivl
andb
out
mov
cmp
es
lea
aam
and
pop
divb
inc
push
out
xor
add
inc
lods
ret
pop
jecxz
mov
mov
push
pop
testb
mov
inc
pop
cmp
mov
and
sbb
cs
insl
or
dec
xor
addr16
pop
pop
or
adc
cmc
sbb
cld
xchg
out
adc
xchg
lea
and
push
xor
orl
jns
pop
stc
nop
dec
add
jo
imul
sbb
imul
xor
in
mov
xchg
inc
fcomi
test
pop
sbb
iret
lods
push
lcall
xor
add
cwtl
das
roll
lods
inc
mov
mov
xchg
push
pop
push
jmp
add
push
or
xor
and
jge
lahf
leave
add
mov
fsubrs
aam
mov
fsub
xchg
sub
jbe
rorl
daa
dec
loope
or
scas
jl
sub
jl
xor
mov
ret
mov
lcall
icebp
and
fcmovb
mov
adc
imul
jmp
lahf
addl
sbb
cmpsb
aas
loop
pop
movsl
cmp
clc
or
int
push
lods
repz
shlb
sahf
adc
mov
push
or
push
sbb
push
daa
mov
jle
mov
popf
xor
dec
shrb
test
frstors
rclb
imul
gs
cmpsb
xchg
cmp
mov
je
adc
outsb
add
xor
popf
push
adc
and
sub
push
out
xor
js
pop
push
testb
mov
sbb
cli
xchg
scas
sbb
gs
adc
ss
pop
out
inc
fidivrl
adc
sbbl
jns
and
lret
mov
jbe
gs
xor
sub
push
mov
cmpsb
and
dec
loop
inc
pop
rep
pop
lock
xchg
dec
bound
into
xchg
imul
mov
insl
adc
or
and
cmpsb
cmp
or
push
movsl
out
dec
sbbb
lahf
mov
lds
aam
jbe
stc
mov
push
loopne
mov
data16
jo
push
out
test
aad
inc
movsl
pop
icebp
push
negl
and
adc
pop
cli
lret
mov
fcoml
stos
int
pop
hlt
jge
mov
loopne
fs
inc
add
nop
jae
xor
and
sub
lret
sub
cltd
jnp
rorl
cmp
mov
jmp
push
roll
xchg
mov
cwtl
sbb
mov
add
push
pop
jns
imul
and
ret
pop
mov
inc
les
testl
xor
aam
sahf
lds
scas
inc
fcmovbe
xor
mov
ret
data16
mov
iret
push
aad
mov
out
or
jmp
pop
scas
xlat
cld
or
fwait
push
cld
xchg
subb
mov
mov
std
xchg
and
xlat
outsb
cmpsb
fmul
bound
enter
mov
test
mov
xlat
outsb
sahf
in
daa
mov
pushw
mov
adc
jb
add
scas
inc
movsl
in
pop
bnd
cs
pop
stos
fcmovnbe
outsb
sti
int3
shrb
nop
lea
fists
lods
sarb
jbe
icebp
fs
loop
sbbl
jne
pop
sahf
popa
xchg
mov
pop
inc
sub
lcall
sbb
fdivrl
shll
push
aas
inc
pushf
xor
fimull
or
lods
test
insb
add
pop
fnsave
pop
repz
xchg
lahf
scas
jns
or
pop
mov
test
repz
negb
daa
jbe
cli
dec
imul
insl
outsl
das
mov
ret
call
or
pop
negb
xchg
sub
mov
xchg
add
daa
outsb
add
lea
inc
pop
jo
mov
ret
testl
lds
jae
out
test
sbbl
fisubrl
fsubrs
sti
adc
mul
sbbb
pop
hlt
mov
shrl
ljmp
xchg
pusha
mov
lret
insl
add
or
mov
pop
rcll
jge
or
or
inc
adc
stos
popa
xchg
sub
movsl
push
jno
stos
push
aam
push
cmp
bound
mov
test
in
fcomp
and
sub
ss
dec
adc
mov
xor
adc
into
cmp
mov
test
ja
lods
test
or
mov
sahf
loope
adc
mov
xchg
test
dec
sbb
adc
jg
mov
out
outsb
add
pushl
sub
inc
imul
inc
push
push
inc
fsubrs
mov
or
popa
call
xorl
popf
ss
push
out
sub
out
dec
adc
fs
cli
dec
test
adc
mov
mov
sbb
xor
das
jle
stc
scas
push
push
inc
pop
mov
push
xchg
cltd
dec
and
out
test
xor
lea
imul
pop
cltd
imul
shlb
adc
push
cs
das
out
scas
cmp
lods
out
mov
test
mov
or
call
into
gs
xor
iret
mov
ja
mov
push
pushf
cmp
and
movsb
shlb
js
negb
xchg
je
incb
xchg
cmp
addb
rcrl
pop
mov
bound
lret
test
scas
loope,pt
int
pop
in
cltd
sbb
adc
jns
xchg
or
cli
loop
test
inc
int3
cmp
stos
push
in
sbbb
adc
hlt
inc
shrl
subl
lcallw
or
test
mov
and
inc
fidivs
xchg
nop
imul
mov
nop
pop
sub
cwtl
xor
jmp
in
in
adc
repz
sub
test
and
ror
loop
aaa
test
repz
mov
jecxz
outsb
pop
or
push
pop
fnsave
xchg
push
imul
cmp
fbstp
pop
inc
fsubrl
fbstp
nop
aaa
into
shrl
dec
lds
cld
rolb
push
es
sbb
mov
adc
sub
in
int
adc
adc
add
or
lret
add
in
add
xor
mov
aad
insl
xor
mov
ret
adc
aas
std
dec
loope
pusha
stos
inc
data16
or
mov
mov
inc
lcall
das
jmp
mov
pop
cmp
dec
dec
mov
cmp
pop
add
nop
inc
sub
ja
xor
sbb
sub
sbb
stos
fnstenv
sbb
mov
test
push
jmp
lret
fnstsw
push
movsl
test
mov
call
loop
cmp
mov
es
xlat
inc
fld
ror
fsubp
aaa
into
rcrl
daa
mov
push
repz
push
frstor
mov
mov
insl
add
stos
mov
inc
jl
rclb
icebp
mov
enter
inc
pop
sbb
jg
hlt
mov
mov
popa
pushf
testb
in
xor
xchg
cmc
mov
aas
xor
scas
jecxz
xor
flds
mov
aam
fld
xor
push
mov
in
ds
ret
mov
mov
popa
clc
icebp
fcom
dec
in
mov
mov
movnti
fmuls
mov
ljmp
out
inc
sub
jmp
add
es
es
shll
mov
jnp
es
into
faddl
ja
and
adc
ljmp
xor
push
mov
xor
jno
testb
cmpsb
jae
mov
xor
mov
xor
test
testl
imul
mov
int3
arpl
mov
jg
lods
stc
outsl
push
ljmp
jo
inc
rcrl
shrl
imul
xor
xchg
sub
push
mov
imul
loope
sbb
movsb
cmp
punpckhbw
inc
push
test
imul
les
test
or
sbb
test
cltd
sub
shl
mov
xchg
cmp
addr16
jecxz
lods
jecxz
mov
xchg
add
pushl
xchg
add
jbe
sbb
xchg
xor
mov
andl
cli
add
mov
in
adc
mov
fnstenv
sub
adc
pop
mov
jae
fildll
mov
stc
sub
adc
inc
jp
test
sub
xchg
dec
xchg
sub
inc
xlat
out
sbb
dec
sbb
push
nop
xor
movsb
testb
add
xchg
sub
mov
pop
testb
adc
les
pop
jnp
dec
or
jnp
pop
sahf
fwait
push
nop
pop
packuswb
add
hlt
xor
jne
aam
cmp
lahf
add
mov
rclb
int
add
mov
jl
jle
jmp
ljmp
fmull
lahf
out
pop
movsb
cmp
jns
cwtl
fidivs
mov
cld
xchg
xchg
sbb
mov
call
mov
je
xor
rcrb
lock
lret
adc
mov
adc
ss
das
mov
rcll
mov
mov
lret
dec
mov
xor
es
push
rcrl
mov
scas
inc
iret
sub
jns
cmpsl
ds
fadd
pop
loopne
insl
add
add
xchg
in
lods
inc
jmp
or
mov
sarb
or
pop
inc
mov
sarl
cld
stos
inc
shrl
aas
loop
inc
shlb
ss
xchg
xlat
push
movsl
out
test
pop
notb
mov
jecxz
adcl
mov
jae
push
in
push
xchg
xor
and
loopne
inc
inc
fnsave
decb
lret
sub
scas
cmp
ret
popa
clc
outsl
xorb
xchg
pop
sahf
ret
sub
movsb
lret
bound
jmp
xchg
sub
fldt
or
cs
xchg
mov
rcrl
incb
mov
pop
mov
fbstp
xchg
add
lret
pop
ret
out
jecxz
jg
loope
test
push
ljmp
sbb
les
pop
hlt
and
push
mov
fnstsw
pop
dec
xor
mov
out
fwait
sbbl
mov
in
sub
xor
in
orps
scas
push
xor
scas
iret
or
and
pop
bnd
inc
or
mov
fldenv
imul
pop
ss
jno
sbb
dec
hlt
adc
mov
pop
scas
rorl
iret
rclb
sbb
movsb
mov
pop
mov
imul
xchg
scas
sbb
push
loope
sub
aam
sti
lds
ss
jg
test
jno
lea
cmp
mov
sbb
cmpsb
xor
decb
mov
fldl2t
jmp
cmpsl
ds
fisubrl
loopne
sub
mov
orl
and
cmp
sti
pop
testb
ret
addr16
popa
clc
inc
cmp
test
lea
dec
in
scas
adc
aad
jbe
mov
dec
fdivrs
frstor
cli
mov
pop
push
mov
mov
mov
lret
bound
pop
hlt
es
subb
pop
hlt
sahf
mov
jae
pop
insb
add
aas
and
sbbl
sbb
ret
pop
sub
call
push
das
subb
add
fnstenv
jmp
add
or
mov
dec
loope
nop
inc
fadds
aaa
jg
cmpsl
rcrl
ret
jl
jecxz
fbld
jb
add
sarl
shlb
mov
mov
inc
inc
adcb
cld
xchg
addr16
jns
mov
sti
bound
mov
adc
dec
test
cmp
dec
xchg
pop
mulb
insl
or
popa
push
pop
repz
sbb
jp
push
jmp
sub
dec
and
jg
sub
std
mov
push
jmp
and
push
gs
push
shlb
gs
loopne
inc
jp
loope
ljmpw
adc
sub
js
lds
sahf
xor
cmpsl
outsl
scas
inc
popa
pusha
fidivl
movsl
inc
xlat
sbb
insl
enter
nop
jno
jnp
xchg
call
sbb
lock
jg
push
jo
aas
and
xchg
or
push
mov
adc
sub
iret
testb
dec
out
repnz
jecxz
xor
sbb
or
mov
push
jbe
inc
and
push
mov
or
outsl
cmp
mov
sbb
mov
repz
mov
or
cmp
jb
or
inc
aaa
insl
loop
lahf
test
aad
test
mov
pusha
je
adc
add
sahf
jb
cmp
push
dec
lret
sbb
cmp
xor
sbb
lock
stos
insb
inc
fistpl
hlt
adc
cmp
leave
xchg
hlt
mov
ljmp
call
test
fisttps
test
out
pop
lock
push
and
push
pushf
iret
push
and
sub
pop
imul
xchg
orb
xchg
xchg
xchg
mov
sbb
add
repnz
xchg
leave
rorl
fcomp
cltd
sub
jmp
in
xor
fisubs
das
movb
or
sub
jo
xchg
dec
mov
pop
jb
pop
repnz
fbld
push
outsl
mov
push
popa
pushf
gs
adc
mov
jne
js
push
mov
lods
nop
add
jae
jnp
sbbl
arpl
out
fsubrl
insb
mov
jmp
or
push
xchg
xor
popf
jns
or
jno
add
mov
aam
ss
gs
cmp
pop
mov
or
jns
mov
inc
mov
popf
mov
hlt
cwtl
das
es
mov
out
and
ds
mov
aad
jo
and
add
xor
gs
push
call
into
loope
lods
pop
bound
mov
dec
clc
push
movsl
sub
xor
lret
enter
sub
rcrb
add
into
add
es
int
aam
scas
sarl
das
mov
push
lret
or
shll
ss
sub
sbb
inc
test
and
push
push
int
mov
sub
pop
outsb
rclb
cmp
inc
pop
mov
fidivrl
jmp
and
adc
insl
in
pop
sti
jo
out
dec
ret
add
aas
repz
sbbl
pop
mov
fidivl
dec
dec
mov
lods
mov
xchg
mov
bnd
ljmp
and
sub
cmpsl
dec
icebp
mov
pop
scas
stc
mov
enter
or
ss
test
daa
clc
add
fs
fisttps
xor
loopne
repz
mov
cli
jnp
sbb
ja
stc
outsb
mov
xchg
int3
push
aad
adc
inc
mov
cmp
cmp
ret
and
hlt
and
movsl
inc
jnp
addr16
push
push
pcmpeqd
out
mov
repnz
and
inc
push
pop
hlt
or
lahf
mov
and
dec
lea
cmp
jo
repnz
rclb
or
shrl
es
ffree
lret
rcrb
jnp
mov
cmp
mov
dec
out
mov
call
jno
es
mov
addr16
ret
inc
fidivs
sarl
pop
dec
dec
fistpll
jae
cwtl
dec
ss
inc
jmp
sub
sti
cwtl
xchg
aaa
or
frndint
ret
jo
sub
lahf
leave
pusha
shrl
adc
sub
mov
jecxz
push
lahf
cmc
popf
xor
ss
xor
cmp
js
arpl
sub
or
mov
sbb
inc
mov
mov
sub
cld
insb
dec
xor
add
mov
sub
mov
fs
pop
cmp
pop
push
faddp
leave
mov
testb
push
mov
mov
cmc
fiadds
or
jno
jbe
insl
xor
arpl
push
lret
dec
lcall
js
lret
add
cwtl
js
mov
inc
loope
push
mov
lret
push
sbb
xchg
and
jns
fildll
or
imul
fdivl
mov
or
cwtl
fbld
inc
insb
ds
mov
xor
adc
jae
pushf
dec
xor
push
lret
inc
dec
pop
shll
cmp
jbe
sbb
repz
sbb
roll
and
in
add
push
stc
xlat
in
sub
test
fs
in
add
cmpsb
imul
cmp
mov
aad
or
ret
scas
or
lahf
adc
adc
and
gs
rolb
iret
xlat
mov
mov
out
movb
mov
loope
fs
mov
enter
add
scas
inc
lods
pop
lds
fidivs
mov
mov
gs
mov
jnp
jg
sub
iret
cmp
clc
xchg
test
pop
jp
popf
push
scas
lahf
cmp
lods
inc
or
stos
dec
in
jg
adc
add
daa
fisttpl
mov
movsb
scas
call
pop
ds
mov
or
decb
je
in
pop
cmp
das
jp
rcrb
inc
inc
inc
stos
xor
jae
sub
mov
mov
aad
stos
inc
andb
loopne
adc
ja
cld
addb
iret
data16
cld
orb
xchg
stos
fcmovne
and
jbe
pop
test
inc
imul
ja
push
push
call
rolb
rcll
loopne
ds
jnp
in
jmp
cld
jns
je
fadds
cmp
sbbl
mov
aas
dec
push
fistpll
adc
adcl
xchg
insb
mov
rclb
xchg
add
call
test
push
xor
mov
pop
and
push
jp
mov
adc
gs
pop
cmp
push
addr16
in
or
test
lret
pop
repz
or
mov
aas
lea
fwait
int3
rcrb
inc
call
xchg
mov
lea
out
cwtl
mov
sbb
mov
lahf
cmp
shlb
adc
in
subl
or
fs
sbb
cmp
mov
imul
and
bound
mov
lods
inc
jge
lock
xor
jp
lret
ljmp
jl
inc
cmpsl
cltd
inc
mov
mov
xchg
out
pop
and
mov
mov
lods
aam
xor
into
xor
movsb
fidivrl
sub
sub
mov
mov
jnp
lods
jle
xlat
lods
aas
or
out
inc
sub
add
in
test
negb
int
nop
repnz
sub
xchg
pop
xchg
pop
adc
or
sbb
dec
add
or
fs
lock
dec
jnp
lretw
dec
mov
push
iret
lahf
jnp
fsubs
add
fstps
pusha
divl
rolb
testl
sub
lret
xchg
iret
ja
xor
xchg
out
in
out
test
mov
xor
sbb
xor
jbe
sti
and
mov
lahf
xchg
insl
imulb
in
pop
jg
insl
enter
mov
jge
loopne
mov
in
adc
stc
nop
daa
sub
cmpb
sub
sub
mov
inc
sub
xchg
pop
jo
mov
xlat
mov
scas
mov
mov
cmp
xchg
push
xor
push
sub
pushf
xor
int3
xchg
outsb
and
test
cs
loope
adc
sbbb
andb
mov
outsl
mov
pop
movsb
fmul
imull
mov
add
inc
in
push
arpl
lea
push
out
lea
test
xor
or
call
ja
ja
into
add
imul
fidivrl
mov
add
push
enter
mov
xor
sbb
adc
cld
mov
in
xor
adc
inc
aaa
scas
xchg
sahf
ds
outsl
std
dec
push
dec
movsb
scas
out
jle
inc
jl
mov
daa
in
add
sbb
mov
or
mov
in
mov
ret
scas
pop
cmp
lock
cs
outsl
xchg
sub
add
ljmp
gs
jle
xchg
imulb
and
push
aad
cld
or
inc
or
sub
adc
sub
push
test
push
mov
repnz
lods
xchg
imul
icebp
mov
xor
repnz
into
icebp
mov
sbb
pop
xor
and
adc
mov
sbb
icebp
int3
sahf
xchg
cmp
cld
iret
push
jmp
xchg
mov
sbbl
outsb
cli
xchg
cmpsl
outsb
mov
mov
mov
inc
out
test
jg
xor
fwait
sar
fiadds
sbb
lock
callw
cmpsb
fcomps
mov
xchg
cmp
mov
repz
out
or
xchg
cmp
imul
int
call
leave
pusha
dec
inc
cltd
pop
inc
ss
sbb
sbb
subl
cs
dec
pop
ss
xchg
ds
in
pop
add
icebp
and
add
in
insl
pop
dec
sbb
mov
adc
mov
lea
mov
hlt
xchg
add
inc
sbb
jbe
dec
andl
stos
jle
cltd
out
rcr
cmpb
pop
ficoml
loop
push
loopne
inc
in
pop
sbb
dec
mov
bound
and
lret
adc
ret
mov
xchg
pop
adc
xchg
inc
xchg
xchg
outsl
sbb
loope
mov
rolb
clc
mov
mov
sub
jecxz
mov
rcrl
mov
cmpsb
nop
xchg
cmp
std
mov
in
push
sahf
aaa
inc
in
xchg
sub
pushf
mov
mov
das
push
outsl
mov
insb
fwait
mov
pop
or
push
out
adcb
cmp
cmp
mov
inc
or
insb
mov
mov
pop
mov
push
into
dec
aad
sbb
xchg
imul
dec
cld
inc
mov
pushf
xor
jae
mov
xchg
xchg
popf
xor
test
push
mov
mov
out
insl
add
pop
inc
adc
clc
loopne
mov
loope
pop
mov
or
xor
ret
aaa
int3
sub
jmp
popf
jae
fistpl
mov
pop
movsb
dec
sbb
jo
xchg
sbb
fiaddl
xchg
push
add
xor
inc
inc
std
out
jmp
aas
lcall
xor
loop
inc
icebp
adc
movsb
movsb
mov
or
adc
ret
mov
cmp
rorl
out
cli
add
add
popf
xchg
mov
cmp
ret
cmovo
mov
or
ja
dec
shlb
scas
add
aam
adc
mov
dec
and
jl
rcl
xchg
mov
mov
andl
gs
dec
loope
fidivs
add
and
dec
inc
cmp
xor
repz
push
xchg
pusha
scas
jecxz
mov
cmpsb
xorb
mov
jbe
jmp
xor
jae
nop
pop
xchg
arpl
push
mov
inc
cld
int
jge
sbb
negb
add
adc
inc
push
xchg
mov
jno
and
mov
mov
inc
jne
fwait
pop
cmc
nop
sarl
add
inc
inc
xor
into
pop
imul
fwait
jnp
jl
cmc
ret
pop
daa
mov
popa
clc
cmc
je
cmp
sbb
dec
iret
ret
xchg
sbb
dec
push
mov
iret
mov
ljmp
jg
stos
mov
push
in
lds
test
mov
mov
push
adc
ljmp
adc
mov
cwtl
lahf
ss
test
es
xchg
adcl
lods
mov
inc
jmp
cmc
xchg
sub
mov
stos
sahf
cmpsb
data16
int
fdivl
in
cmpsl
std
fsts
mov
inc
adc
mov
mov
loopne
lea
cmp
xlat
lock
xor
pop
addr16
xchg
sti
sub
sub
add
data16
clc
adc
fists
popa
movsb
mov
xor
lcall
and
lret
leave
mov
and
xor
js
push
nop
mov
imul
push
rorl
jmp
xor
mov
sarb
lahf
pushf
nop
int3
icebp
ret
xchg
mov
into
cli
or
xor
sub
stos
icebp
pop
imul
sub
stc
scas
fidivrs
inc
js
add
add
push
in
inc
movsb
xor
shrl
inc
jmp
jecxz
repnz
in
call
sarl
mov
daa
xor
xor
movl
ret
popa
popa
movsl
lods
loop
bound
pop
mov
inc
dec
into
pop
enter
push
cmp
jo
js
sarl
or
mov
pop
rcr
sub
add
daa
scas
faddl
push
ljmp
leave
icebp
push
nop
cmc
mov
repz
out
xchg
xchg
sub
mov
ret
pop
out
repz
mov
mov
ret
pop
out
inc
mov
shll
shr
mov
ss
decb
cwtl
sbb
movsb
xor
fdivrp
shrl
sarb
std
xchg
or
addr16
jno
mov
cmp
cmp
loop
outsl
cmp
mov
shl
fbstp
push
push
adc
and
pushf
cmpsb
cmp
popl
xor
and
inc
dec
mov
pop
push
dec
call
sub
sub
xlat
sub
daa
sub
adc
cs
out
lahf
and
call
pushf
pushf
inc
add
divl
gs
repnz
cmp
rolb
sbbb
insb
cwtl
mov
shll
movsl
movl
ljmp
jb
incb
push
ja
mov
fcomp
inc
push
cmc
mov
push
in
sbb
aad
add
and
mov
jne
mov
mov
into
jae
lret
insl
sub
mov
xor
test
fsts
mov
cwtl
out
pop
out
mov
movsl
sbb
and
dec
pcmpeqb
xchg
arpl
fidivrs
mov
push
add
je
fwait
pop
jo
out
pop
cmp
andb
push
and
jle
sbb
push
mov
push
int3
and
lcall
ja
mov
pop
sahf
daa
inc
addb
and
add
aam
ss
mov
inc
inc
pop
test
inc
mov
push
mov
dec
stos
and
mov
les
stc
jmp
push
lods
movsl
inc
fstl
add
insb
xor
loope
pop
test
cli
push
repz
leave
pusha
mov
push
adc
shl
adc
pop
enter
xchg
fs
xor
iret
notb
std
loopne
gs
push
push
fcmovnbe
fildl
push
sub
xor
push
mov
shl
push
mov
xor
scas
aam
repz
into
and
pop
sbb
xchg
lock
pop
imul
shlb
popf
adc
cmp
test
jb
hlt
iret
pop
inc
fistps
pop
push
dec
out
push
jp
mov
inc
push
xor
cmp
sbb
mov
les
jns
adc
std
fldcw
push
sar
cmp
cmp
leave
lret
xchg
sbb
jnp
mov
mov
jle
xchg
mov
lcall
es
mov
lods
adcl
add
mov
add
aad
hlt
fadd
cmp
out
test
mov
fidivrl
je
fsubrs
xchg
mov
popa
lcall
jb
lcall
enter
test
mov
xchg
sub
jae
jbe
outsw
mov
xchg
inc
mov
jae
and
push
push
inc
das
fdivrp
sbb
or
or
mov
out
mov
xor
into
and
cmp
or
scas
aad
cmc
cmp
nop
movsb
out
je
push
ss
gs
push
ds
add
jb
jmp
or
insb
push
mov
pop
scas
xor
xor
insb
cld
gs
les
pop
mov
stos
push
add
clc
sub
mov
shll
xlat
push
jmp
test
imul
mov
shll
mov
in
ret
gs
cmpsl
inc
sbb
inc
or
outsb
add
dec
add
out
sbb
cwtl
fsubl
sub
pop
add
push
push
call
push
jmp
or
jg
divb
jno
mov
dec
push
xor
in
rolb
xchg
jge
clc
scas
mov
xchg
add
sahf
jnp
push
fwait
xor
int3
aas
daa
sub
mov
incb
cmp
adc
stos
sbb
push
push
adc
dec
push
push
les
icebp
and
mov
inc
add
popf
mov
loope
add
push
push
popf
out
xchg
movsb
or
adc
cmp
repz
cwtl
or
lahf
mov
repnz
mov
xchg
sub
jmp
add
push
mov
adc
and
mov
fnsave
mov
pop
add
mov
push
mov
leave
xchg
fmuls
out
lds
idivl
in
push
and
cs
push
add
jle
xchg
int3
jbe
cmp
mov
std
notb
cmp
cld
dec
fmuls
lods
pusha
lret
mov
out
loop
sub
test
and
test
out
pop
push
repz
shl
leave
inc
xorb
lahf
movsl
movsl
adc
test
lock
mov
sub
jge
lea
loopne
jge
push
fsubl
push
pop
mov
mov
popa
ja
dec
inc
cmp
ds
data16
mov
xchg
cmc
mov
cmc
and
xchg
push
call
popf
imul
or
mov
sub
fildll
dec
cmp
cmp
xlat
cmp
out
or
loope
cmc
cmp
movsb
xlat
lds
popa
lahf
rcr
and
mov
out
cmp
pop
sbb
adcb
push
add
xchg
jbe
lret
inc
shr
xchg
sub
aas
mov
jno
scas
inc
jns
shlb
lcall
pop
out
ljmp
inc
or
mov
fisttpll
push
out
fistl
xor
popa
cmp
lods
xchg
inc
xlat
ret
into
adcb
in
in
sbb
cmp
sbb
adc
test
jmp
or
pop
jl
cmp
adc
aaa
test
inc
jo
jbe
mov
arpl
ljmp
jno
cmpsl
jmp
fs
mov
arpl
js
imul
or
aaa
push
mov
or
sub
inc
leave
pop
std
and
stos
mov
sbb
into
cmc
lret
adc
xchg
out
mov
mov
test
insl
push
rcrb
and
xor
lret
icebp
mov
imul
cltd
out
dec
bound
subl
outsb
call
out
daa
jle
imul
xor
add
cmp
mov
pop
mov
stos
xor
fsubr
mull
nop
je
add
sbb
pop
and
dec
popa
cmpl
xchg
jne
xchg
imul
out
ds
std
xlat
lods
scas
rclb
sbb
ds
out
cli
jne
lods
push
xchg
iret
mov
mov
mov
mov
lock
mov
add
int3
andl
push
and
mov
mov
mov
add
loope
jp
rolb
jp
mov
lods
sub
stos
clc
or
inc
add
pop
push
out
dec
adc
int3
fiadds
push
jbe
xchg
cwtl
daa
xchg
in
mov
faddl
lcall
pusha
in
cmp
or
inc
inc
push
mov
rcrb
mov
push
in
insb
add
mov
negl
call
mov
shrl
repz
out
leave
xlat
cmc
sarb
rcrb
push
push
in
mov
ret
cmc
or
ss
mov
jne
lahf
push
xor
in
test
out
ret
xor
cltd
mov
and
fiadds
mov
sbb
gs
pop
inc
fs
mov
mov
fbld
and
incb
out
xchg
imul
push
mov
dec
push
shll
pusha
and
push
mov
stos
mov
dec
test
lahf
adc
or
cld
inc
jge
inc
shl
mov
pop
popl
cmc
push
rol
add
inc
jmp
repnz
pop
scas
sub
sahf
cmpsl
mov
sub
adc
int
xor
mov
cmp
and
into
fs
leave
xchg
scas
and
cmp
pop
lcall
aaa
scas
mov
and
shll
inc
sub
jae
jnp
lret
mov
je
jnp
mov
push
push
cmp
mov
xor
sahf
adc
mov
arpl
lds
lds
jmp
movsb
pop
xchg
dec
xlat
bound
bound
nop
das
mov
test
xchg
rcrl
cs
dec
pop
jo
loope
daa
sbb
ja
and
loopne
hlt
popa
cwtl
daa
cmp
mov
pop
mov
popa
pop
sbb
int
pushf
lods
ljmp
xchg
stos
sub
in
push
sbb
insb
orb
push
fs
iret
xchg
jno
xchg
jae
inc
push
cld
mov
xor
loopne
mov
in
mov
mov
mov
dec
mov
int3
cmp
xlat
xor
test
subl
sub
lret
adc
jle
pop
test
pop
mov
sub
xorl
dec
lahf
mov
pop
es
dec
lret
lcall
cltd
xor
pop
imul
jl
loope
outsl
int3
jg
or
fisubrs
orb
adc
ljmp
sbbl
ret
mov
cmp
adc
xlat
fs
or
jae
insl
cli
bound
jge
out
jo
xor
push
stc
in
je
lret
cld
jmp
divb
enter
movl
cmpsl
dec
and
jns
mov
sub
or
loope
dec
cmc
das
lcall
xor
fcoms
or
sbb
push
jg
jmp
cltd
loopne
xchg
and
in
cwtl
and
enter
or
cmpsl
sahf
sbb
dec
repz
movsl
das
pop
daa
and
test
push
mov
daa
arpl
or
xor
sahf
mov
xlat
sbb
mov
cmp
mov
cmpsb
jbe,pt
dec
add
mov
test
add
pop
mov
xchg
stos
dec
in
lds
nop
scas
inc
dec
xor
out
insb
movl
mov
mov
stc
ja
add
xor
push
rorl
dec
sbb
pop
movsl
js
rorb
shrl
jmp
shl
and
aam
loope
repz
clc
fidivs
je
mov
mov
adc
lods
pusha
xor
scas
or
cmp
xchg
jmp
sub
or
adc
lds
xlat
pop
rorb
mov
inc
lods
sub
rol
loop
or
push
pop
int3
jg
lods
test
sub
out
rcrl
outsl
push
aam
fmull
mov
in
push
adc
mov
nop
jp
pusha
jl
cmpsb
hlt
push
fisttpll
sbb
fidivl
mov
mov
dec
adc
dec
popa
mov
ret
loopne
ja
sbb
cwtl
xchg
sbb
push
test
aaa
sti
sub
aam
sbb
jae
stos
insb
ret
pop
lahf
les
test
and
cld
mov
mov
jb
and
mov
shrl
shrl
cmp
ja
jg
leave
je
mov
sahf
popa
jns
into
sti
inc
jne
inc
dec
jmp
sar
lds
jle
xor
fstpl
cmp
psrlq
jle
sahf
lcall
mov
inc
fs
std
xchg
clc
call
sbb
mov
idivl
pop
mov
cmpsb
fbld
test
jbe
adc
xchg
cs
stos
popl
xorl
in
mov
shl
jno
pop
out
push
test
sti
xor
aam
xchg
xchg
loope
push
adc
sbb
insl
jp
xchg
outsb
push
ljmp
call
lds
dec
psubq
xlat
add
dec
in
cmp
jmp
add
roll
adc
popa
jl
jne
sub
xor
pop
setae
repz
bound
add
lcall
jne
cltd
lds
mov
mov
rorb
rcll
mov
sub
xchg
xor
sub
ss
push
insb
xchg
mov
in
stos
jne
sub
xchg
xor
xor
bound
fisttpl
or
test
insb
movsb
fwait
call
movsb
or
std
inc
mov
jbe
out
mov
andl
xor
dec
lock
pusha
mov
cmp
pop
out
push
inc
mov
mov
fmuls
mov
out
mov
aaa
or
pop
xchg
fstpt
inc
xchg
jbe,pn
rcrb
or
scas
add
cmpsb
xchg
mov
mov
jecxz
mov
mov
mov
cmpsb
cmpb
push
lea
les
mov
cmc
jmp
in
xor
fwait
jmp
repz
xchg
jae
xlat
mov
int
insb
sbbl
push
push
je
xchg
xchg
iret
mov
cmc
or
loopne
mov
iret
jns
pop
pminsw
and
sbbl
push
aam
pop
push
js
test
pop
test
xchg
add
adc
mov
mov
adc
data16
imul
in
cltd
repz
jb
jl
adc
test
shlb
mov
stos
sbb
insl
inc
or
mov
mov
xchg
sub
in
sti
fwait
nop
cmpsb
mov
add
pop
dec
fidivrl
jg
fisubs
dec
mov
sbb
lahf
repnz
cmp
pusha
mov
push
xchg
push
stos
shlb
mov
jge
or
test
lock
mov
sbb
cli
and
xor
test
std
int3
ret
dec
xchg
inc
mov
pushl
and
mov
inc
pop
inc
cld
add
popa
push
outsl
push
xchg
lea
mov
jbe
call
cmpsb
xchg
mov
fcmovb
push
movsl
hlt
ja
call
test
movsb
rcrl
add
or
xlat
inc
fidivs
loopne
dec
in
sub
dec
test
imul
adc
inc
inc
or
mov
jb
daa
or
test
xchg
inc
pop
subl
mov
aaa
dec
mov
mov
pop
mov
sahf
jmp
xor
pop
repz
leave
pop
fsubr
pusha
sbb
cld
mov
jmp
pop
repnz
je
cmp
mov
clc
outsb
cmp
roll
fstpl
xlat
push
mov
cwtl
push
adc
or
or
push
dec
or
or
xchg
sub
enterw
mov
dec
pop
icebp
mulb
cmp
int3
xchg
jb
in
lret
popa
jmp
mov
and
jmp
push
dec
rcll
jnp
fnsave
push
inc
pop
lds
cli
xchg
push
in
xchg
stos
std
dec
pop
das
int
mov
int3
dec
pop
test
jecxz
fldcw
and
inc
in
cmpl
add
or
sbb
in
gs
repz
xchg
xchg
sbb
pop
fs
hlt
mov
loope
lahf
push
xchg
stos
xchg
repnz
mov
push
xchg
add
fisubrs
inc
or
je
mov
cmp
fistl
data16
jo
nop
mov
shrb
pop
adc
mov
mov
ret
mov
jbe
cli
xchg
outsb
and
test
sub
cmpsl
icebp
mov
lock
or
pop
divb
push
push
stos
sarb
lret
fwait
xor
popf
push
jmp
jl
inc
arpl
pop
out
test
decl
nop
data16
sub
jo
outsl
push
xor
gs
push
push
imulb
xor
iret
mov
out
out
cmp
imul
insl
xor
and
jb
push
std
cmp
fbld
dec
fdivrs
mov
fidivrl
jns
stos
sub
push
data16
xchg
push
mov
scas
popa
std
or
mov
pushf
pop
sub
inc
mov
jne
movsl
daa
cmp
pop
sarl
cmpb
stos
movsb
mov
jbe
mov
nop
jb
inc
in
int
aad
xchg
addr16
js
xor
dec
loop
mov
cli
daa
ljmp
dec
fiaddl
ret
filds
dec
out
inc
fsubrs
stc
insl
sub
and
push
fadd
mov
repz
sahf
jne
and
cld
inc
shll
inc
fwait
sahf
or
pop
subl
imul
in
and
and
xor
dec
scas
mov
dec
out
subb
insl
aas
loopne
fidivs
inc
ret
sub
pop
sahf
out
pop
xchg
ss
and
mov
jmp
icebp
scas
jp
jns
sarb
dec
push
push
out
negb
cmp
fwait
mov
in
in
adc
push
ljmp
jne
add
insb
mov
cld
out
aad
jecxz
popf
outsb
fadds
mov
xor
lret
lock
inc
dec
addr16
stos
sub
cmp
mov
dec
dec
xchg
outsl
add
into
pop
sti
mov
xchg
mov
clc
mov
rcrl
adc
inc
outsb
aam
sub
ja
pop
gs
out
xchg
xor
sbb
jb
fucomp
adc
out
stos
shl
pop
push
ja
push
jl
sbb
fldl2e
jb
jle
imul
lods
pop
aaa
pop
inc
test
mov
lock
stc
rcrl
add
mov
rolb
or
inc
adc
test
jbe
mov
push
mov
rcr
mov
mov
repnz
in
nop
ss
sub
loop
sub
jg
shrl
push
dec
adc
dec
scas
repz
repz
mov
sbb
jl
into
std
cwtl
mov
aaa
negl
sub
rcrb
inc
aad
out
dec
shrb
xchg
or
mov
call
shlb
pusha
in
sbb
xchg
mov
and
xchg
mov
mulb
cld
mov
mov
add
jp,pn
and
shl
icebp
iret
enter
sarl
test
lcall
push
testl
xchg
sbb
repnz
xchg
data16
notb
ss
bound
scas
lods
nop
pop
push
ror
popf
mov
adc
cld
dec
adcb
loop
jl
or
dec
repz
add
sahf
inc
mov
std
pop
mov
push
aam
fdivrl
ss
mov
out
mov
shlb
pop
add
ljmp
call
loop
inc
dec
xor
repz
push
cmp
xchg
in
lds
test
test
mov
sbb
mov
sub
enter
sbb
inc
lret
pop
fdiv
mov
icebp
mov
fmull
jle
js
dec
shl
lock
js
int3
popa
mov
sbb
xlat
outsb
push
or
jecxz
xchg
ja
lds
adcb
or
xchg
lods
les
shr
lods
stc
xchg
fucomi
dec
daa
fidivl
imul
mov
pusha
std
jg
and
fistpl
sub
addr16
out
fwait
adc
ss
cwtl
jle
addr16
test
arpl
push
sub
mov
push
test
mov
stos
jmp
aam
orl
data16
sub
addr16
or
rorb
push
ja
xorb
sbb
fdivrs
cmc
js
fcomp
enter
aad
stos
decb
add
test
push
movsl
sbb
mov
jecxz
xor
ja
cmp
push
push
call
or
es
push
xor
adc
stos
inc
insb
mov
int3
jmp
dec
loop
or
fs
fistpl
push
cmp
cld
mov
xchg
clc
jae
mov
ds
fnstenv
or
mov
icebp
int3
loope
ljmp
je
inc
test
xchg
mov
ret
int3
ficomps
in
adc
int
add
sti
pop
lods
add
ljmp
push
in
sub
inc
iret
mov
fdivr
subb
cmp
mov
ret
pop
dec
sbbb
xchg
mov
shrb
aaa
push
inc
in
imul
xchg
in
in
mov
cmc
xor
and
pop
mov
sub
inc
dec
and
push
test
mov
mov
push
in
jp
mov
movsl
mov
ja
mov
repnz
mov
xor
add
xacquire
test
sahf
stc
xchg
stos
movsl
repnz
inc
pop
into
mov
in
push
lret
bound
fwait
outsl
jl
jne
xchg
daa
lds
incb
pop
subl
dec
movsb
dec
icebp
gs
ret
adc
fildll
scas
xchg
ds
pop
lcall
aam
jb
push
pop
or
mov
shlb
sub
mov
xchg
sbb
mov
lcall
iret
mov
popa
clc
and
cli
cmc
out
dec
fbstp
push
data16
mov
ds
mov
test
fstpt
cld
ljmp
push
movsl
mov
movsl
cmp
cmpsb
ret
xchg
mov
in
cmpsl
in
add
outsl
add
cmc
mov
inc
cwtl
mov
dec
push
out
mov
cmp
push
inc
sti
out
push
insl
xchg
pop
movl
mov
movsl
scas
dec
cmp
sbb
shrb
pusha
xorl
cs
ret
mov
jecxz
loopne
or
scas
cmp
test
pop
xor
fsubrl
ss
addr16
fildl
dec
dec
pop
adc
in
mov
imul
enter
pop
cmp
or
pshufw
xor
xor
inc
sub
daa
mov
sbb
lahf
jb
cmp
mov
loopne
int
sbb
xor
aad
and
fimuls
xchg
xchg
mov
dec
hlt
js
cmp
adc
add
xchg
in
sub
shll
ljmp
xchg
cmp
jmp
outsl
iret
mov
cmp
das
push
mov
and
sbb
aam
imul
push
xchg
mov
mov
lahf
or
push
es
inc
gs
dec
mov
jmp
shll
xchg
mov
cwtl
in
es
sahf
mov
sub
scas
lret
test
int
hlt
testl
jecxz
xchg
push
cmp
icebp
mov
outsb
call
dec
jb
jb
das
ds
lods
adc
jmp
stc
mov
adc
inc
jo
mov
push
gs
dec
in
mov
xlat
mov
int
dec
push
adc
push
mov
add
cmc
outsl
leave
dec
push
pop
sbb
imul
in
lods
mov
les
xorl
test
data16
jle
incl
sbb
mov
cmp
shlb
cltd
xor
cmp
xlat
lcall
out
dec
sti
imul
data16
xchg
inc
pop
repnz
xor
jne
sbb
adc
fsub
xchg
loope,pn
stos
inc
push
popf
xor
int3
dec
pusha
xor
call
mov
cmp
movsb
mov
inc
xchg
xorl
xor
pushf
dec
js
test
lcall
dec
loopne
imul
out
xchg
cmp
andb
arpl
cmp
movsl
clc
stos
pop
sub
dec
add
cli
xchg
andb
lret
sub
iret
add
movsb
cmp
dec
cmc
call
sub
nop
je
bound
rcrl
jo
and
cmpsb
jl
sbb
mov
andl
sub
lods
push
pop
rorl
jp
pop
out
rcrl
sbb
enter
roll
hlt
pop
adc
add
or
push
popf
stc
cmp
mov
jae
cmpsl
cmp
cs
dec
dec
cltd
hlt
pop
mov
sub
aad
inc
clc
loop
out
lock
inc
fcomip
sbb
idivl
lods
je
mov
int
xchg
subl
mov
inc
push
insl
mov
cltd
test
bound
divb
rcrl
add
jle
inc
hlt
insb
add
repnz
cmpsl
add
push
mov
cmovne
mov
aad
pop
xlat
outsb
xlat
sub
xchg
jge
push
aas
adc
ss
clc
aas
clc
fdivrs
cmc
daa
movsl
sub
es
xor
xchg
into
xor
adc
in
popa
je
pop
in
lock
pop
movsl
out
lods
pop
jg
pop
mov
ret
push
jb
and
loope
pop
xorl
movsb
sbbl
loope
lahf
jno
mov
cwtl
out
loope
inc
adc
into
aas
pushf
pop
and
es
xchg
test
cltd
into
or
cmp
repnz
idivl
scas
jno
xchg
mov
mov
lock
test
pop
jecxz
push
loop
outsl
rcll
push
enter
out
xchg
adc
lret
jno
psrlw
repz
push
mov
enter
jb
jge
adc
push
imul
jne
adc
mov
sbbb
mov
test
mov
pop
mov
fdivr
inc
mov
push
xchg
sub
dec
sbb
jno
popa
mov
test
in
loope
div
dec
mov
icebp
dec
lcall
out
or
mov
rcrl
fs
or
clc
mov
jp
inc
into
sbb
insb
add
sbb
mov
movsl
out
sahf
popa
in
test
clc
xchg
mov
fnstenv
cwtl
pusha
pop
mov
add
mov
out
leave
cmpsb
jnp
mov
roll
nop
jmp
ret
cmp
cmc
fstpl
cld
into
mov
inc
xor
inc
sbb
dec
stos
mov
adc
jg
dec
nop
sub
push
add
mov
fcos
xchg
pop
in
cli
popf
in
add
and
inc
xchg
enter
inc
rorl
or
adc
hlt
mov
scas
sub
or
dec
pop
clc
andl
jo
or
mov
mov
sub
xorb
rcrb
add
or
outsl
insb
scas
pop
outsb
pusha
xchg
push
add
int3
sbb
cmp
pop
push
jb
mov
cmp
xchg
test
jb
mov
stos
jge
imul
cmpsl
and
orb
inc
xor
inc
add
mov
dec
mov
test
scas
ds
cmpsl
stos
push
and
psrad
push
pushf
imul
cwtl
out
pop
push
je
fadds
or
jae
pop
lahf
and
adc
sbb
fbld
ret
dec
fistpl
pop
insl
xor
in
add
aaa
lret
dec
dec
outsl
jge
lea
cmp
jo
add
push
pop
shld
sbb
xor
push
or
mov
imul
cmpl
pop
movl
nop
shr
loopne
int3
pop
push
cs
int
inc
jg
cmp
es
mov
and
xor
jmp
fsub
dec
push
mov
dec
loope
push
jne
cmpsb
pop
xrelease
jne
inc
out
adc
fistpll
in
push
cmc
pop
push
mov
lds
pop
jp
push
ljmp
jno
dec
xchg
sbb
dec
lds
js
je
leave
sbb
fisubrs
jno
mov
out
in
out
mov
imul
je
xor
int3
inc
dec
sti
or
mov
out
xor
outsl
ss
inc
sbb
mov
sahf
cltd
push
int3
jp
jmp
sub
pop
stos
cwtl
out
mov
and
movsb
outsb
add
test
scas
ljmp
mov
and
mov
push
loope
imull
out
aaa
cmp
nop
fdivr
fsubrp
arpl
or
mov
cmp
es
push
xchg
int3
fiadds
pusha
ja
xor
leave
jae
push
fsubr
hlt
std
mov
enter
out
mov
mov
data16
push
mov
mov
cmp
cwtl
mov
push
xor
addr16
jl
std
int3
dec
sarb
ljmp
out
add
mov
in
movsl
cmp
mov
push
push
in
or
xchg
dec
shl
jae
xor
daa
add
cmpsb
lods
mov
in
jns
dec
cmpsl
inc
icebp
mov
and
push
adc
lret
sub
add
mov
mov
insl
shrb
mov
fcmovne
pusha
cwtl
fidivl
push
cmp
jl
pop
mov
jl
cmp
icebp
call
ficoml
sbbb
loopne
clc
pop
inc
xor
lcall
rclb
mov
mov
jp
fsubs
xchg
mov
mov
mov
out
add
and
fdivrl
bound
push
shr
mov
cltd
adc
data16
sbb
cmp
mov
mov
lds
push
jg
arpl
add
clts
stos
xchg
int
cs
hlt
scas
sbb
js
inc
das
and
mov
or
sbbl
das
addb
call
jb
mov
sub
push
sbb
mov
fdivp
iret
mov
sub
jae
nop
rorb
sbb
xor
mov
or
inc
xlat
xor
cmp
xchg
sub
hlt
call
add
out
mov
push
jns
pop
popf
cld
inc
xchg
scas
mov
dec
fldl
ficompl
ss
imul
pop
mov
in
xor
lods
sarl
lods
inc
icebp
rorl
icebp
inc
pop
mov
or
in
out
sub
in
or
push
push
sarl
sarl
scas
or
jg
sbb
rcl
pushf
jo
push
movsb
in
stos
dec
sti
add
mov
call
call
push
popa
cmp
jl
xchg
icebp
insb
negl
dec
popf
call
sub
push
mov
cli
cmp
mov
cld
sbb
fsts
pop
outsb
jl
sbb
out
push
mov
xchg
sub
xlat
in
dec
dec
repnz
xchg
mov
push
cmp
int3
cmp
adc
addr16
jo
sti
and
inc
out
filds
sub
movsb
mov
roll
psadbw
mov
add
aas
push
aam
mov
mov
cmp
or
sub
lahf
stos
mov
jb
xor
cmp
inc
xchg
push
cwtl
clc
popa
and
sbb
test
jp
jle
shl
mov
sub
iret
sbb
fisubrs
pushl
dec
sbb
in
shll
clc
mov
xor
inc
mov
xchg
lods
adc
pop
xor
addr16
jne
mov
jg
inc
xlat
mov
stc
push
jge
cmc
jns
in
iret
outsl
mov
fsubrs
fisubrs
jge
addr16
into
and
test
in
or
inc
out
jbe
rcr
fnsave
test
mov
test
push
in
hlt
leave
or
jno
les
adc
shll
sbb
add
lock
jns
rclb
mov
cmp
push
ret
stos
das
and
xchg
dec
fistpll
pop
or
fs
mov
pop
or
mov
sub
push
sub
pop
xor
add
lcall
in
add
lock
mov
imul
pop
xor
jb
mov
clc
adc
adc
dec
in
hlt
xor
scas
mov
rol
and
dec
sti
sub
data16
or
xor
jo
mov
jle
outsb
mov
enter
cmc
pop
mov
testl
xor
ds
dec
mov
daa
in
jge
mov
outsb
rcl
mov
cmpsb
jl
scas
mov
push
fcomi
ret
js
and
xchg
popa
xor
pop
call
fstps
jl
or
shll
loop
or
add
pop
xor
jge
sub
in
inc
xchg
push
mov
and
jg
cli
mov
rol
cli
pop
aas
aas
es
jb
clc
out
mulb
enter
and
in
adc
adc
jecxz
xchg
loop
test
push
pop
mov
jecxz
stos
hlt
mov
jle
imul
lods
loope
sbb
into
xor
xchg
dec
push
jne
cmp
fxtract
sub
ret
in
out
shrl
jle
push
xchg
sbb
cmc
getsec
mull
jmp
pop
push
daa
mov
mov
mov
divb
movsb
jge
fdivr
push
out
cli
xor
jmp
pop
mov
aaa
pop
cmc
scas
rol
xchg
add
ror
call
shrb
fs
std
pop
repnz
pop
sub
mov
pop
movsb
cmp
push
and
popf
cmp
or
imul
bnd
movsl
mov
push
adc
cmp
shll
pop
pop
and
nop
jmp
xchg
push
in
sbbb
ljmp
ljmp
push
jecxz
shl
test
pop
mov
cmpsb
mov
mov
fyl2xp1
or
out
or
js
and
dec
repnz
jle
in
push
pusha
sub
add
xchg
xor
in
inc
push
inc
pushf
movsb
lods
inc
push
or
jge
sti
dec
mov
jl
pop
in
or
lods
lcall
xor
inc
fldenv
or
dec
cmp
test
aad
in
pushf
ss
lret
inc
mov
js
icebp
jnp
cltd
shrl
lcall
push
jge
xchg
sub
push
fistps
adc
xor
insl
pop
sbbb
xchg
test
xor
inc
hlt
push
repnz
sarb
sub
cmc
lock
push
hlt
sub
mov
or
shlb
push
push
cs
jae
ja
lea
loopne
sarl
pop
imul
iret
movl
movsb
mov
fldl
aas
mov
outsl
fiaddl
add
sbb
int3
add
inc
ljmp
mov
push
inc
fdivrl
mov
inc
inc
pop
in
dec
cmp
jle
sub
nop
js
fadd
jno
mov
and
outsl
stos
cmpsb
roll
repnz
adc
stc
jecxz
movsb
repnz
rol
adc
stc
pop
cmp
or
sbb
test
push
shrl
cltd
movsl
mov
out
rcrb
gs
mov
jbe
pop
pop
cmpsb
aas
push
icebp
jnp
loope
ljmp
jmp
push
xchg
loop
adc
cmpsb
std
mov
xchg
push
pop
add
push
cmpsb
jns
add
dec
in
xchg
push
call
fimull
or
cs
dec
jle
xchg
cmp
and
addr16
ficoms
jmp
nop
iret
push
push
add
or
adc
mov
xor
sbb
das
lea
jae
mov
add
js
stos
mov
pop
and
leave
push
push
pop
gs
leave
xchg
mov
hlt
ljmp
push
add
jbe
inc
mov
push
sbb
enter
ret
xchg
sub
fidivl
cmpsl
das
push
js
and
push
inc
and
mov
or
dec
lods
or
cmpsb
and
std
inc
jp
loope
daa
addr16
mov
mov
sbb
jae
inc
dec
adc
loopne
cs
push
push
mov
fldcw
and
xor
and
incl
add
xchg
mov
push
call
pop
mov
adc
sti
pusha
cld
dec
pop
mov
pop
push
add
movsl
mov
fimuls
aad
stc
fidivs
aas
mov
jno
cmp
push
repz
iret
divb
add
jge
or
jge
push
inc
mov
jle
sarb
mov
adc
dec
jno
int3
ficomps
movsl
loopne
cs
scas
pop
rep
add
pop
std
xchg
inc
imul
lock
inc
add
mov
push
pop
ror
setle
arpl
push
fwait
sti
js
push
xor
xchg
adc
stos
push
xor
sub
mov
push
dec
not
shlb
sbb
push
xorl
ret
ficompl
popa
insl
aam
add
insl
fistps
mov
jp
jge
das
outsl
rorl
xchg
push
mov
leave
pop
add
xor
cmp
mov
aad
in
sub
dec
je
jg
mov
xor
pushl
cmpsb
mov
pmulhw
dec
xchg
adc
test
sbb
movsb
loop
imul
repz
inc
pushf
xor
cld
xor
pusha
jecxz
aaa
mov
add
push
xchg
subb
bound
or
stos
mov
jmp
clc
insl
adc
xorb
jo
insl
mov
sbb
aas
add
jbe
mov
dec
adcb
inc
inc
movsb
jmp
jns
or
adc
push
pop
ficoms
mov
inc
jno
in
and
xor
je
jae
mov
cmpsb
mov
and
or
xchg
inc
es
mov
sarl
cwtl
leave
fwait
adc
ljmp
adc
aam
mov
je
adc
and
mov
gs
nop
sub
bound
mov
jecxz
mov
mov
rcrl
add
push
mov
fidivs
add
inc
into
mov
test
and
mov
adc
jecxz
ja
jmp
mov
cld
in
and
iret
movsl
mov
sub
pop
or
push
scas
adc
lea
imull
insl
fcoml
jns
inc
notl
jns
mov
sbb
pop
mov
xchg
out
mov
das
cmp
pop
mov
add
xchg
insl
std
sbb
das
or
hlt
std
mov
mov
mov
sbbl
jge
adc
ret
mov
outsl
cmp
mov
fcmovbe
ljmp
mov
out
add
rorl
add
sub
and
call
or
sbb
jns
in
pop
xchg
aam
jns
movsl
jl
adc
add
or
mov
les
testb
push
test
pop
mov
push
sub
xchg
sub
call
mov
or
and
int3
outsl
fs
mov
stos
push
dec
gs
int3
test
sbb
mov
and
mov
cmp
and
jg
into
lds
arpl
push
fcoms
inc
jmp
popf
aad
pop
push
and
pop
push
pop
popa
and
mov
cltd
cld
outsb
lods
xchg
add
je
sub
stos
in
mov
lcall
and
push
or
stos
push
push
or
ret
test
jecxz
mov
pop
shlb
imul
mov
cmp
movsl
clc
movsl
lret
in
loope
jmp
and
mov
cmp
test
mov
and
adc
aad
sub
mov
jbe
fdivrs
dec
or
mov
mov
ljmp
mul
mov
add
add
mov
lret
frstor
jmp
jae
sbb
dec
xchg
int
lret
pop
jp
shrl
mov
fldenv
inc
mov
pop
xor
test
push
mov
mov
repnz
push
sbb
jp
loop
cmp
mov
outsl
push
cwtl
pushf
dec
out
xchg
fists
das
jmp
pop
test
pop
in
outsl
jge
inc
cmp
pop
lret
cmp
mov
sbb
pop
in
and
into
nop
rcl
lahf
jo
pushf
mov
mov
jl
int3
mov
push
mov
add
cmp
or
test
insl
aas
out
sahf
std
inc
adc
or
aaa
jno
addl
push
inc
jmp
dec
stc
mov
jbe
lods
inc
push
xchg
lds
addr16
mov
adc
jg
add
loop
mov
cmp
adc
push
push
push
push
pop
loop
arpl
mov
cltd
sbbb
rol
and
sub
jae
jl
jne
pop
clc
sahf
aad
mov
push
test
popf
xor
outsb
adc
xlat
ret
out
sbb
dec
sysret
out
push
mov
out
xchg
pop
out
stos
out
rolb
jp
inc
or
rcll
scas
jno
sbb
dec
dec
fldl
scas
call
pop
fldpi
jge
mov
mov
fsubrl
mov
bnd
or
ss
dec
pop
sbb
pop
out
or
push
fstp
gs
cmc
lret
mov
sti
and
pushf
leave
inc
or
or
fnstsw
pusha
divb
test
dec
das
cltd
mov
retw
pop
cwtl
jno
rorl
mov
insl
in
add
shr
mov
mov
popf
push
pop
inc
dec
aaa
into
jl
jbe
cld
jle
rcr
xchg
sbb
sahf
xchg
ret
mov
leave
mov
mov
adc
pop
mov
fldt
jo
popa
sbbb
or
aad
push
and
repnz
pop
push
sub
dec
fsts
out
sub
dec
push
jmp
sub
or
and
xchg
xchg
push
popa
test
cmc
xchg
loop
and
jge
lret
scas
dec
xor
xchg
pop
pop
pusha
sub
mov
fcmovbe
imul
imul
shl
pop
std
decl
das
jl
rcll
jb
fidivrl
push
jmp
xchg
je
adc
mov
jp
int3
fists
pop
cmpsl
xchg
push
lcall
cld
enter
push
movsl
out
sbb
scas
mov
icebp
and
jns
pop
cmp
pop
pop
scas
jge
mov
movsb
pop
aaa
stos
test
xor
inc
push
add
push
mov
push
mov
jle
mov
hlt
fcoml
and
cltd
add
scas
and
loopne
ss
leave
push
inc
push
push
mov
adc
inc
imul
dec
mov
call
shlb
push
jecxz
outsb
filds
fiaddl
mov
imull
movsb
int
dec
pushl
cmp
cmp
cmpsl
in
push
dec
fildll
shl
cmp
scas
lcall
faddp
dec
repnz
scas
cwtl
das
and
sub
push
and
push
arpl
fisttps
ds
adcl
pop
push
xchg
add
outsl
out
or
pop
and
bound
mov
mov
bound
mov
loopne
xor
sahf
pushf
out
inc
test
stos
xchg
lea
fcom
std
push
clc
sbb
mov
push
adcl
and
mov
xchg
dec
shrb
outsb
sbb
xchg
repnz
xchg
pusha
flds
stos
mov
into
jle
lds
fnstenv
scas
inc
cltd
mov
pop
out
pop
and
cmpsb
fsubrl
repnz
sarl
fistpl
mov
mov
mov
xchg
dec
mov
pop
loope
push
xor
cmp
or
outsb
push
call
xor
push
fnstsw
js
add
sbb
or
xchg
cmp
shll
cltd
xchg
loopne
loope
icebp
inc
clc
mov
pop
jge
lahf
ss
nop
mov
lahf
in
shlb
jecxz
daa
test
movsb
out
push
mov
fcmovne
or
dec
mov
jns
das
aaa
inc
imul
mov
inc
int
mov
inc
out
enter
mov
xor
in
ljmp
xchg
cwtl
call
sbb
push
cs
lcall
and
pop
push
test
xlat
shrl
pop
je
cmpsl
jns
sti
stos
pop
aaa
into
dec
sbb
mov
jo
xor
repz
and
mov
jecxz
mov
sub
xor
sbb
xor
sub
sbb
adc
push
cld
orl
pop
or
inc
ljmp
or
js
arpl
pop
adc
or
xorb
pop
fidivrs
add
rcll
push
shrl
dec
fmuls
repz
int3
cmp
divl
mov
andl
shrb
aas
mov
adc
pop
dec
jns
hlt
and
popf
jno
imul
sbb
insb
or
jge
stos
mov
add
lret
xchg
sbb
mov
inc
jnp
and
inc
sub
mov
xor
call
mov
shrb
rol
and
inc
ficomps
js
xchg
push
into
pop
push
pop
xor
jo
and
out
xchg
in
ja
ficompl
cs
scas
in
or
push
inc
int3
andl
xlat
jnp
xor
inc
pop
ja
mov
push
dec
cmp
idivl
jo
shll
and
mov
cli
sbb
leave
and
stc
xchg
pushf
mov
sub
mov
sahf
aaa
ret
dec
imul
cmp
jne
subb
mov
rcll
repz
je
xlat
jg
jp
cli
mov
mov
xchg
mov
mov
xchg
jp
call
push
inc
outsl
push
mov
sbb
inc
and
ljmp
cmp
pop
xchg
loopne,pt
xor
loope
unpcklps
jae
cmpsb
into
jb
dec
fidivs
mov
cmpsb
add
xchg
adc
je
out
cmpsb
or
fmuls
jmp
jg
sub
push
and
jl
test
lock
mov
jg
cmpsl
pop
lret
enter
int
sbb
add
jno
mov
insb
add
fnstcw
cmc
aam
xchg
iret
lret
mov
lea
sarb
and
or
push
mov
fwait
and
adc
les
jp
jo
push
test
inc
sbb
adcb
adc
cmp
stos
add
xchg
notb
mov
sbb
xchg
movsl
ss
es
mov
or
mov
stc
pop
sbb
cmp
push
or
xchg
lods
mov
mov
sets
addl
notl
loopne
xlat
sbb
in
movsb
xchg
sbb
repz
cmp
jbe
mov
es
into
and
and
add
nop
stos
std
in
je
pop
mov
cltd
pop
jg
xorb
mov
add
push
test
or
cmpsl
and
fdivrp
cmpb
popa
jae
mov
adc
enter
loope
hlt
das
loope
jno
dec
aas
add
jno
mov
mov
and
hlt
lret
cld
hlt
pop
scas
in
stos
push
loopne
loope
cmp
push
test
clc
mov
cli
stos
cmp
lea
mov
arpl
push
mov
mov
arpl
into
pop
xor
out
xchg
push
jmp
sub
add
jno
mov
mov
ret
mov
std
and
js
sbb
cmpsb
scas
pop
icebp
insb
pop
jno
mov
popl
bound
cmpsb
cmp
in
aaa
clc
cmp
sbb
xlat
add
jb
dec
xchg
mov
pop
aas
mov
fdivrl
call
cmp
iret
cld
and
mov
imul
lock
fadds
adc
daa
out
sbb
xor
and
sbb
imul
es
out
add
mov
cld
xor
sbbl
test
inc
in
cs
popa
insb
rcr
mov
mov
push
and
lahf
aaa
jns
and
data16
ret
outsl
xchg
insb
notl
mov
mov
jle
dec
mov
shrl
rcl
rcl
mov
pop
xchg
push
xchg
dec
and
mov
add
add
cmp
add
dec
push
hlt
cmp
xchg
lea
cli
xchg
insl
mov
popa
hlt
mov
mov
dec
jb
cmp
adc
or
popf
dec
jge
les
fidivs
fincstp
dec
jo,pt
push
in
cmp
fldcw
in
out
jnp
inc
sub
mov
cwtl
push
mulb
shll
addr16
pop
cwtl
hlt
jno
fdivrl
add
decl
js
out
mov
in
push
xor
xor
push
test
sub
dec
mov
fwait
sbb
test
arpl
int3
add
nop
pusha
add
adc
test
sbb
mov
call
test
filds
push
stos
sbb
mov
push
popa
adc
mov
int3
rcl
add
icebp
adc
inc
push
xchg
lret
imul
jle,pt
push
ljmp
pop
and
insl
fisubl
ret
aam
jecxz
mov
adc
das
add
lods
lods
mov
xor
flds
repz
lret
idivl
icebp
xchg
mov
xchg
xlat
sub
adc
std
jecxz
test
mov
in
add
mov
xchg
or
xchg
xor
xor
add
xchg
stos
push
push
jo
push
or
adc
mov
sbb
lods
insl
leave
fucomp
mov
pusha
bound
push
mov
fidivrl
and
push
sub
pop
loopne
cmpsb
cmp
adc
cmp
out
mov
fisubl
scas
aad
adc
dec
cmpsb
lods
shll
leave
add
push
popf
adc
scas
ja
add
push
cltd
lcall
inc
enter
fadd
push
push
loopne
sub
push
mov
or
ret
xorb
incl
push
cmp
jge
imul
mov
js
out
out
xchg
lea
jle
sub
int3
pop
stc
lods
cmpsb
cmc
pop
add
jg
xor
sbb
repnz
shrl
clc
enter
sub
adc
xchg
sub
aas
add
jo
mov
cmp
das
mov
xchg
xor
jmp
rcll
mov
dec
lock
sub
dec
lahf
cmpb
and
filds
je
imull
and
sbb
into
pushf
mov
cmp
push
fwait
data16
jb
push
popa
pusha
pop
xchg
adc
clc
ficomps
arpl
movsl
test
cmp
sti
or
adcl
pusha
movsb
xor
pop
adc
nop
dec
dec
repnz
sub
and
mov
int
or
je
pop
fsubrp
hlt
cmp
jns
xor
dec
lcall
jle
insb
nop
iret
out
jge
scas
fdivs
inc
sbb
jmp
cltd
cmp
add
and
faddl
cwtl
jbe
inc
filds
shlb
jo
hlt
mov
and
mov
nop
aaa
jl
pushf
and
pop
sub
lods
shll
and
sbb
lods
dec
ja
xlat
daa
sub
xchg
in
add
aas
mov
cmp
mov
loopne
ficoms
hlt
rol
fdiv
std
enter
into
inc
jmp
cmpsb
enter
jmp
or
repnz
addr16
xadd
daa
jg
nop
sub
xor
add
imul
xor
shrl
jmp
dec
es
insb
xchg
push
dec
jmp
iret
sub
call
popf
xor
pop
popf
insl
mov
mov
push
stc
adc
in
push
push
push
std
mov
sub
scas
shlb
and
addl
pushf
push
sbb
stc
sub
fisubs
jecxz
cmp
mov
adcl
cmp
fcomp
jb
fstps
nop
in
stc
pop
push
mov
movsl
jecxz
mov
es
xor
dec
out
inc
mov
lods
add
fimuls
incb
mov
jmp
dec
mov
fisttpl
lock
ja
or
iret
cmpsl
dec
sbb
xor
stos
out
jb
and
fstpt
adc
in
into
cmpsb
addb
cmp
cwtl
xor
mov
cmp
notl
inc
pop
cmpsb
xchg
cmp
jle
dec
mov
push
add
pop
loop
mov
xchg
pushf
fmuls
out
fsubrs
dec
fstpl
mov
sbb
xor
dec
or
flds
or
mov
dec
push
xchg
pop
mov
mov
fisubrs
scas
sbb
lahf
jmp
sub
mov
jecxz
add
scas
add
in
divb
cld
and
test
push
test
jmp
or
les
shll
mov
mov
xlat
outsb
scas
fsubrs
or
das
dec
xor
gs
test
test
bound
xchg
sbb
fisubl
sbb
mov
lret
mov
jae
iret
and
mov
cmp
or
jo
scas
xchg
in
js
int3
jle
rol
push
sbbb
inc
push
cmpsl
cld
lcall
fbstp
add
lcall
xchg
inc
sbb
mov
aas
adc
push
xor
pop
scas
cltd
pop
push
mov
pop
push
mov
dec
data16
scas
xchg
mov
into
push
sub
mov
jne
pop
sub
int
insl
pop
jb
scas
xor
mov
push
int
stos
jl
fmull
cmpsl
div
shrl
rep
sub
clc
sti
adc
pop
mov
mov
mov
mov
stc
push
popa
inc
out
xor
mov
in
mov
loope
daa
cmc
xchg
mov
out
test
int3
cmpsb
or
xor
call
cmpsl
aas
pusha
jge
mov
std
dec
mov
xchg
pop
test
lahf
mov
adc
cmpb
fs
test
add
aas
xchg
pop
or
push
divb
dec
sub
mov
jge
sub
pop
jp
dec
xor
es
xchg
fnstenv
pushf
ds
xchg
dec
push
ret
or
mov
mov
lock
rcrl
cltd
bound
fwait
bound
xchg
push
stc
or
ds
test
or
mov
push
lea
in
test
cmpsl
roll
cltd
das
xor
push
loope
loopne
test
lret
cltd
sbb
cmp
les
adc
out
mov
mov
sub
mov
testb
divb
jmp
sub
pusha
ret
outsb
add
add
mov
dec
hlt
pop
inc
mov
xor
fs
addr16
inc
xchg
dec
push
cltd
sub
mov
fiaddl
fwait
xchg
push
pop
or
xor
popa
das
xchg
xchg
add
sbb
mov
xchg
xchg
push
lea
cli
xchg
sub
ret
adc
imul
xor
das
inc
outsl
lods
jle
xor
outsl
leave
mov
cmp
loop
out
js
dec
call
add
jmp
mov
push
push
mov
hlt
pop
cmp
inc
xor
cmp
pop
push
pop
insb
test
cmp
imul
pusha
push
and
fs
fldcw
mov
clc
mov
cmc
das
shrl
inc
icebp
or
adc
or
jge
data16
mov
lret
cld
jmp
and
mov
cmc
mov
or
repz
cs
negb
xor
in
and
jnp
cmc
rolb
push
sti
xchg
fldenv
xlat
icebp
pop
into
sbb
dec
movsl
and
shrl
jle
movsl
loope
xchg
sti
add
xorl
outsb
decb
and
jmp
or
cmp
and
mov
lds
andb
movsb
insb
cli
leave
pusha
ss
roll
sub
or
mov
jne
ss
xor
imul
inc
data16
mov
shlb
jge
add
fdivp
and
cmpsb
nop
daa
aam
lea
xor
pop
mov
or
sub
cmp
mov
or
iret
pop
adc
div
dec
loop
mov
jo
sbb
xchg
rolb
inc
lds
call
out
imulb
rorl
mov
sub
push
stos
fxch
addr16
test
call
ss
outsl
rcl
test
push
aas
adc
sbb
clc
fistpl
mov
rcrb
or
je
fucomip
cmc
xchg
ja
inc
ds
xchg
mov
push
mov
cwtl
push
movsl
mov
mov
and
or
pop
dec
dec
andl
sbb
mov
insb
nop
sbb
in
and
dec
lret
shlb
or
add
and
insb
mov
lods
movsb
ret
inc
xchg
cmc
lds
notb
ljmp
xchg
fildl
sahf
mov
addr16
lret
adc
out
rorb
jmp
jge
mov
sub
fcompl
outsb
cmp
push
push
mov
adc
es
lret
gs
cltd
cmc
call
push
dec
mov
fstps
popa
adc
pop
xor
addl
out
adc
mov
adc
inc
xor
repnz
out
jb
pop
adc
xchg
arpl
pop
fldcw
push
mov
mov
ret
mov
les
in
cmpsb
cmp
int3
fcoms
jnp
pop
xor
popf
loopne
inc
push
lret
pusha
dec
leave
mov
mov
out
xor
mov
xor
rclb
mov
insl
add
pop
jg
fcoms
xor
cmpsl
arpl
repnz
sub
les
pop
adc
fmul
xor
sub
notb
xchg
mov
lods
mov
sahf
pop
inc
add
lds
mov
mov
inc
mov
in
or
or
cmp
mov
mov
add
xchg
pop
js
adc
lret
mov
fdivrs
sub
mov
jns
fdivs
lcall
sbb
push
jbe
int3
cwtl
fildl
or
jmp
cmpsb
mov
xchg
sbb
outsb
cmp
lahf
add
dec
fsts
push
mov
xor
sbb
clc
pop
in
cmp
lds
shrl
or
push
imul
cmp
js
mov
xor
cmp
jecxz
in
movsb
icebp
cmp
cmp
adc
bound
push
xchg
out
inc
cmp
int
push
add
pop
scas
push
int
shrb
pop
scas
mov
aas
dec
test
xlat
loopne
and
fidivrl
jbe
jle
pop
lds
dec
cs
mov
push
mov
push
sbbb
js
and
push
lret
fwait
adc
jmp
pushf
pop
jno
dec
sub
rcrl
popl
pop
pusha
test
add
cmp
cmpsb
test
cmp
or
xor
cwtl
das
mov
int3
arpl
lods
fucomi
ljmp
pop
les
std
sbb
dec
neg
xchg
aam
jg
fwait
cmpsb
or
sub
pop
aas
fwait
cmpsb
pop
sahf
mov
ds
cmp
inc
ret
push
ss
inc
sub
test
mov
popf
add
stos
out
jge
cmp
in
push
mov
mov
out
aas
pop
insb
bound
mov
push
popf
sbb
inc
xor
and
pop
cmp
jno
xor
stos
fldcw
es
xchg
sub
push
cltd
sub
mov
fisttps
and
add
inc
cld
sar
sahf
inc
or
or
adc
jp
loop
add
sbb
notl
push
loop
daa
add
and
arpl
cmp
sub
xor
fldl
mov
imul
lret
imul
jno
xchg
stos
lea
mov
sbb
mov
cmc
cmp
shll
mov
push
jne
in
mul
rolb
pop
ljmp
je
dec
mov
push
int
js
push
jo
xchg
in
pushf
sbb
push
int3
aas
push
mov
jmp
aam
lods
sub
daa
inc
jge
int
push
mov
xchg
mov
cmc
sbb
int3
shl
mov
dec
and
dec
mov
mov
push
mov
mov
push
sarb
mov
mov
outsb
neg
jae
sahf
xor
add
jbe
adc
mov
cld
in
test
loope
xorb
lea
push
xor
sbb
mov
sbb
sbbb
outsb
rcl
loope
cltd
test
in
lahf
cmp
int
arpl
stc
pop
mov
repz
xchg
mov
mov
jno
jecxz
pop
adc
ret
rcll
rcrb
xchg
add
aas
shll
leave
mov
jb
sub
adc
push
add
xor
xchg
enter
call
fwait
push
loopne
shrb
pop
imul
jnp
rcll
lods
ret
xlat
inc
movsb
test
sub
mov
jg
mov
int
daa
dec
mov
xchg
loop
mov
out
adc
sti
loope
call
es
xchg
pop
sbb
andb
clc
cmpsl
repz
fucom
dec
xchg
dec
inc
mov
out
cmc
sub
mov
xor
push
cmp
int
push
add
out
pop
mov
adc
fisttps
scas
aam
add
stos
and
aaa
ljmp
or
cs
and
pop
lahf
mov
out
test
push
or
addr16
cmpl
and
xor
call
sbb
adc
je
push
push
cmc
pusha
test
mov
add
lret
aas
mov
loop
mov
ret
pop
mov
movsb
js
ss
mov
inc
data16
cltd
dec
pop
mov
mov
jl
fcoms
dec
push
das
jge
mov
sbb
jge
xor
fdivs
mov
rcrl
shl
aam
mov
popf
xor
sbb
xchg
out
push
sarb
inc
aas
movsb
mov
dec
ljmp
fdivrl
xchg
jp
mov
jnp
std
dec
add
repz
mov
lret
inc
pop
das
push
dec
xchg
mov
jb
pop
in
in
aad
sbb
mov
incl
or
cld
push
push
inc
stc
sub
xchg
sub
pop
std
pop
or
fdiv
sub
dec
call
mov
in
les
fdivl
mov
aas
xchg
inc
cmp
xor
fldt
adc
pop
push
push
leave
popa
push
xor
sbb
imul
jae
sbb
lret
sbb
mov
sub
faddl
xchg
push
call
dec
mov
mov
mov
divb
dec
mov
cmpl
adc
add
popf
mov
mov
ret
inc
pop
and
repz
jbe
mov
mov
imul
jmp
jae
or
xchg
and
lret
push
ds
inc
dec
popf
lret
push
mov
sbb
fmuls
xor
dec
xlat
sbb
inc
mov
adc
and
xor
jnp
arpl
rclb
das
adc
xor
push
arpl
xchg
ja
mov
cmpsl
mov
ror
lret
mov
rcl
fiadds
ljmp
pop
ret
or
xlat
ss
ficoms
test
jnp
rcl
test
mov
cmp
cmp
mov
jge
imul
lea
xchg
daa
mov
or
xchg
sub
pop
sub
fdivr
sbb
data16
fiadds
out
std
fsubrl
clc
repz
fidivrs
loopne
inc
out
add
xor
in
icebp
push
xchg
js
pop
in
adc
pop
jne
cmp
popa
insb
dec
pop
hlt
xor
gs
std
cltd
xchg
ss
incl
addb
adcb
xchg
push
out
xor
jae
push
pop
clc
ds
sub
xorb
shrl
mov
push
mov
xchg
pop
lahf
stos
cltd
fwait
xchg
jo
xchg
mov
jmp
adc
daa
cltd
jbe
xchg
xor
in
test
rcrb
cmp
pop
pop
test
bound
push
sahf
or
imul
or
call
or
data16
push
jbe
add
xchg
push
stc
mov
dec
int
int3
push
mov
pop
push
sub
idiv
pop
jno
movsb
pop
ret
xchg
jge
jae
mov
sbb
jns
add
mov
pusha
cmpl
je
jno
loop
jb
sbb
adc
ss
in
cli
pop
pop
in
mov
mov
stos
cwtl
inc
scas
clc
adc
xchg
add
jnp
jle
sbb
sbb
cmpsl
cmp
sbb
add
ret
mov
pop
jecxz
rol
mov
mov
ds
dec
jo
call
cmp
add
dec
and
mov
jecxz
jae
xchg
push
and
adc
xor
mov
pop
cli
push
jge
sub
inc
sbb
insb
xchg
out
jno
push
lock
jp
out
cmp
sub
adc
pop
mov
arpl
push
inc
rorl
and
xor
shlb
adc
cmp
add
lret
push
popa
and
enter
aad
es
icebp
or
daa
mov
xchg
dec
mov
and
fsubrs
mov
pop
or
pop
aad
dec
cmp
hlt
aam
std
add
dec
mov
jp
jne
lret
lds
mov
adc
adc
pop
lcall
adc
call
mov
fnstenv
push
jns
clc
popf
leave
mov
sti
jno
stos
wbinvd
pusha
mov
sbb
mov
insl
cmp
ret
pop
and
cmp
push
jge
and
xchg
cmpsb
push
push
arpl
sbb
lret
test
daa
push
imul
or
push
mov
test
push
hlt
mov
push
sub
jne
xchg
iret
test
js
into
inc
sbb
inc
popa
dec
mov
imul
loopne
sbb
sbb
jne
fwait
jle
stos
ds
fstl
negb
pop
jp
mov
mov
jge
push
sub
cwtl
loopne
xlat
inc
cmpsl
push
and
xor
pop
je
hlt
mov
push
jns
jmp
add
imul
push
test
mov
dec
add
pop
add
sti
repz
lcall
cwtl
jae
adc
es
and
std
xor
cmp
stos
test
stc
or
repz
cld
out
mov
xchg
jp
ret
jle
add
aam
or
adc
sbb
inc
pushf
xor
xchg
movsl
push
aas
repnz
xchg
inc
popa
mov
push
inc
jno
adcl
adc
dec
push
mov
scas
cmpl
outsb
cmpsb
dec
pop
cmpsl
icebp
lret
and
js
cmc
popf
fsubrs
push
cmp
pop
jb
xchg
int3
es
mov
fmuls
cwtl
xchg
lret
cld
daa
test
aam
mov
xlat
sbb
int3
ficomps
mov
addr16
sub
push
outsl
pop
sbb
stos
xchg
fmulp
mov
rolb
pop
push
lods
pusha
divl
mov
cld
movsb
fidivrs
xchg
sub
pop
data16
sub
mov
lret
dec
and
xor
fstps
mov
jns
shr
mov
scas
dec
inc
loop
inc
test
in
pop
cmp
mov
nop
adc
push
imul
xchg
and
das
jl
push
cmp
nop
stos
dec
dec
test
xor
das
cmp
cmpsb
jae
shlb
sahf
cmp
sub
adc
and
push
jl
gs
jl
mov
push
xlat
iret
jecxz
jb
mull
mov
cmc
xchg
ret
jnp
outsb
mov
outsl
mov
jne
fcmovbe
shrb
add
dec
loopne
xchg
aam
cmpsb
sub
aas
cmpsl
mov
lret
sbb
add
cmp
cmp
mov
inc
sub
inc
push
mov
iret
fsubr
add
ror
hlt
and
fildll
out
mov
push
shl
mov
orb
push
xchg
mov
inc
or
jbe
cltd
push
add
cmc
sti
cmp
mov
pop
push
sbbl
mov
in
jmp
xchg
mov
jp
lods
pop
cmc
inc
add
jl
mov
inc
test
mov
inc
mov
cltd
scas
add
decl
mov
xor
icebp
mov
xor
pusha
ret
inc
mov
and
xchg
rorl
fimuls
into
xorl
jnp
in
mov
les
mov
ret
push
xchg
push
inc
inc
rorl
cwtl
clc
sbb
mov
pop
repz
mov
jp
and
and
and
adc
xchg
sub
jbe
mov
jbe
js
dec
jecxz
inc
add
bound
out
mov
ficompl
or
sub
pop
cmp
lock
fnstcw
arpl
outsl
mov
pinsrw
jmp
jge
nop
add
ret
add
add
or
mov
pop
popl
fldenv
jo,pn
and
mov
les
fwait
pop
add
or
push
mov
adc
fdivl
cmc
in
imul
incb
inc
push
pop
push
call
lahf
lock
push
cli
mov
and
in
pushf
push
jl
arpl
repnz
mov
jmp
cs
shlb
xor
lods
ljmp
lret
push
cmp
pop
and
fidivs
mov
xor
push
pop
gs
mov
or
push
xchg
es
xor
inc
push
rcrb
out
icebp
jmp
jbe
fdivs
xchg
daa
push
mov
ficoml
mov
arpl
adc
mov
or
into
dec
inc
inc
loopne
jmp
cmp
or
cld
adc
push
nop
xor
sti
xchg
int3
test
mov
push
je
insb
cmpsl
add
repz
add
jmp
sahf
stos
xchg
js
in
push
iret
push
dec
lock
mov
mov
subl
pusha
fdivs
pop
jle
push
hlt
jae
lret
btr
int3
lret
data16
xchg
sbb
jns
xchg
jp
push
push
movsl
test
dec
scas
dec
clc
adc
xchg
insb
movb
mov
xchg
sbb
rorl
jecxz
inc
xchg
inc
mov
xor
pop
push
sahf
push
sbb
ja
jmp
cmc
rcrl
call
push
sub
out
cmpsl
insb
adc
pop
and
sub
sub
lock
adc
mov
add
in
es
adcb
cmp
cld
outsb
sbb
add
clc
insb
add
push
inc
bound
adc
xor
leave
mov
and
fsts
mov
sub
arpl
mov
scas
xlat
pop
imul
jge
mov
aad
repnz
daa
inc
scas
pusha
loope
ret
add
sbb
movsl
call
es
and
add
in
push
addb
or
popa
dec
repz
fnstsw
inc
xchg
sub
addr16
daa
int3
xchg
push
xchg
xchg
in
mov
fsubr
mov
jo
push
add
pop
adc
mov
add
push
ds
pop
sub
ficomps
push
pushf
aas
push
movsl
lds
xchg
aas
push
inc
xchg
aad
repnz
xor
jge
push
popf
mov
inc
and
and
in
xor
fnstenv
test
stc
in
call
subb
std
mov
aad
lock
pop
movsb
fiadds
ljmp
cs
and
aam
lahf
xlat
sbb
push
cwtl
or
jb
push
pop
mov
jl
mov
sub
rorb
and
mov
jns
ja
mov
scas
dec
enter
mov
pop
sub
popf
int3
dec
in
mov
repz
lds
mov
ja
sbb
pop
and
in
or
or
lcall
adc
jnp,pn
dec
cmp
mov
inc
or
loop
popa
shrl
pusha
je
or
icebp
mov
insb
ja
mov
js
vphsubdq
xchg
sub
popf
mov
cmp
jns
ret
cmp
movsb
push
cmc
jmp
into
jmp
or
sbb
or
cmp
cmp
push
out
add
mov
jmp
xor
pop
sti
mov
mov
or
rolb
aaa
add
sbb
xchg
push
push
repnz
pop
cs
in
push
adc
pop
sub
faddp
push
loop
jbe
adc
mov
sarb
mov
sub
xchg
add
int
imul
lcall
out
cmp
rclb
mov
mov
in
mov
sbb
das
insb
loop
dec
pop
mov
pop
imul
repnz
out
mov
or
xchg
and
mov
mov
cmp
es
mov
push
adc
cmp
push
mov
outsl
adc
stc
cmp
jle
cwtl
bound
cmpb
ljmp
xchg
xorb
mov
jecxz
sti
push
dec
or
cmpsl
mov
mov
sub
sar
pusha
cwtl
and
fwait
lret
cmp
lods
ret
lret
sbb
push
push
repz
mov
jecxz
int
mov
adc
xor
ds
adc
jle
mov
fs
std
mov
mov
push
ja
iret
xchg
dec
push
add
lds
iret
or
jns
lock
xchg
push
pushf
jnp
inc
bound
rcll
jb
or
cltd
xor
orb
dec
sarb
lea
out
in
cld
mov
mov
std
pop
fcomp
cmp
shrl
in
sbb
pop
pop
icebp
dec
dec
pop
cltd
mov
xor
imul
imul
jmp
cmp
iret
jne
push
faddp
xchg
adc
daa
in
pop
push
ret
push
ret
cmpsl
out
mov
pop
lods
in
xor
mov
jl
out
test
daa
arpl
movsl
and
mov
sub
idiv
addl
sbbl
dec
sub
xchg
or
sub
jge
call
add
repz
insl
inc
or
jbe
and
out
shlb
xchg
decb
jbe
mov
std
inc
or
inc
sbb
pop
xchg
popa
pop
xor
ret
sbb
push
inc
mov
neg
pop
insl
mov
pop
or
or
jl
stc
sub
pop
sub
or
leave
inc
jns
jb
scas
out
ret
push
lods
add
xor
call
jns
xchg
stos
mov
mov
sbb
fnstcw
xor
loopne
mov
cmpsl
rol
loopne
pop
pop
adc
xstore-rng
cmpsl
add
cs
and
nop
adc
testl
jnp
push
imul
fstl
sahf
xor
divb
ja
mov
dec
std
inc
jecxz
inc
push
dec
xchg
or
ss
inc
sahf
xchg
add
fsts
aad
hlt
test
enter
les
ret
int
leave
divl
pop
mov
sarl
mov
xchg
call
wbinvd
push
jecxz
std
sbb
cmp
lods
pop
inc
adc
int
add
mov
jno
sub
mov
adc
mov
sub
pop
pushf
cli
or
adc
inc
out
sub
cmpsl
pop
lret
inc
lea
lock
std
aaa
stos
les
mov
mov
mov
adc
sar
or
nopl
out
mov
scas
ret
stc
nop
inc
fcmovnbe
out
cld
sub
hlt
or
insb
leave
add
ss
and
je
incb
mov
push
push
inc
arpl
pop
dec
loop
stos
daa
ljmp
daa
push
dec
clc
paddq
out
std
cmc
xchg
sub
cmp
jecxz
xchg
dec
insb
hlt
pop
fsubrp
sbb
and
mov
inc
inc
je
aas
cmpsb
stc
inc
in
mov
adc
test
pop
jp
dec
mov
stc
xchg
mov
mov
aam
jbe
sub
repnz
outsl
idivl
rol
pop
jnp
pop
popa
jl
imul
cltd
and
mov
adc
jle
adc
fwait
xor
xor
jnp
push
ds
adc
je
sub
xchg
inc
bound
jmp
jle
pushf
xchg
popf
xor
xchg
inc
fadds
out
ljmp
add
mov
lret
int3
push
pop
js
adc
mov
sbb
lock
dec
dec
jecxz
add
orl
inc
pusha
cmp
mov
out
push
inc
mov
or
outsl
scas
out
sub
mov
std
shl
or
popa
enter
push
push
and
pop
mov
push
decl
mov
shll
pushf
outsl
jae
out
xor
imul
mov
shr
roll
aas
mov
mov
dec
cmp
cmp
shrl
imul
inc
repnz
xor
xchg
sarl
push
adc
fisubrl
imul
lds
adc
loopne
and
rdpmc
cmp
fisubrs
pop
xchg
lret
mov
or
mov
pop
repnz
lds
jns
hlt
outsb
jmp
ss
jl
pop
ret
xor
cmp
ja
aaa
adc
lods
inc
rolb
and
xchg
add
lods
sub
inc
ljmp
mov
imul
movsb
out
xchg
dec
cmp
mov
adc
les
adc
sbbl
aaa
or
adc
daa
and
pop
nop
jne
ret
in
ret
lret
mov
adc
xchg
push
sahf
clc
pop
pushf
mov
sub
movsl
negl
jmp
mov
cmp
dec
sar
or
inc
xor
fs
and
cs
in
pusha
sub
or
je
push
movsl
rcl
jbe
sbb
pop
jmp
cmp
pop
rcll
insl
adc
cmc
fisttps
pushf
movsb
cmp
inc
aad
xchg
jnp
sbb
into
mov
and
dec
or
mov
jno
push
shlb
clc
jae
fstpl
lds
jmp
aad
shl
dec
pop
lock
mul
mov
ss
push
push
lods
jns
inc
stos
into
fidivl
push
push
fwait
cmpb
fs
imul
cmp
mov
mov
shrl
fldcw
fcmovne
push
xchg
cs
jmp
mov
mov
sahf
add
into
xor
lods
rcrb
cli
push
inc
jbe
orl
inc
xor
xchg
bound
pop
stos
or
and
lahf
pop
xor
bound
mov
mov
push
or
out
cmp
aas
popf
loope
add
dec
andb
insl
push
sbb
insb
lock
jmp
in
rorl
movb
int
inc
xchg
jmp
push
jmp
sbb
ret
lret
and
loopne
xchg
cmpsl
sbb
add
lods
add
cmpsl
inc
fstps
mov
inc
test
sbb
in
je
xchg
push
xchg
cli
aaa
mov
mov
xor
fsub
jb
loop
push
fsubl
or
enter
sar
sbb
sahf
lahf
pop
frstor
push
mov
xor
aaa
mov
pop
in
das
shlb
jo
test
pminsw
jb
pop
or
ret
xorb
test
push
jl
jg
jp
inc
jl
scas
pop
gs
add
call
data16
push
test
insl
push
sub
inc
clc
cwtl
stc
or
xchg
fwait
pusha
mov
out
jb
mov
push
clc
xchg
pop
mov
sub
lea
add
push
outsl
int3
arpl
subb
pop
xchg
or
ret
mov
pop
push
or
stc
cmp
inc
incl
xchg
xor
mov
xor
ljmp
rolb
lea
arpl
jmp
dec
xchg
and
pushf
cmp
pop
loop
jb
xchg
movsb
int3
ja
ret
sbb
sbb
and
sub
pop
fs
xor
xorl
shl
add
gs
or
or
mov
or
cld
jecxz
adc
out
pop
xchg
loope
inc
inc
popf
pushf
repnz
lret
cmp
cmp
pop
rolb
cld
or
push
stos
das
enter
subb
adc
subb
mov
into
inc
and
push
data16
mov
sub
pop
scas
jbe
pushf
add
outsb
inc
push
adc
fidivrs
ja
xor
inc
adc
adc
jle
repnz
mov
enter
loopne
mov
inc
orl
fwait
test
shll
lret
pusha
scas
pop
dec
lods
rclb
add
xor
test
mov
jb
mov
inc
cs
fwait
adcl
lock
cmp
test
in
les
adc
sbb
cmp
dec
lahf
dec
cmp
lods
cs
sub
daa
lcall
les
or
and
jns
orl
jnp
pusha
mov
mov
push
lea
mov
testb
fs
stos
jmp
mov
out
insb
movsl
add
inc
imul
inc
sbb
dec
rcrl
testb
or
popa
loop
sbb
sbb
jmp
cli
lahf
and
pushf
xor
and
dec
jae
jle
outsb
imul
cli
sbb
or
push
icebp
lea
stos
fisttpll
mov
mov
lods
inc
and
xchg
mov
stos
push
ja
arpl
mov
cmp
movsb
xchg
sub
dec
mov
fneni(8087
push
push
adcb
sub
pop
cltd
lock
xor
adc
mov
int3
cltd
or
js
xchg
jle
stos
sub
cmpsl
pop
int3
les
ror
idivl
jecxz
repz
das
jo
cmp
jbe
jmp
sbbb
in
sbbl
imul
sbb
pop
dec
adc
subb
faddl
rclb
push
mov
push
in
mov
shl
repnz
scas
nop
les
jg
or
testb
jnp
fdivl
bound
fs
or
inc
xor
xchg
in
popf
bound
jns
test
sub
cmpsb
jmp
sbb
lahf
and
cmpsl
ret
arpl
inc
mov
loopne
sbbb
cmp
xchg
popw
sbb
lods
mov
adc
xchg
call
in
sub
adc
add
pushf
addps
popf
fs
sti
jle
sub
sub
pop
ja
lcall
and
repnz
cmp
cwtl
adc
fs
xchg
jb
dec
jae
dec
es
or
mov
fimull
das
mov
and
mov
add
test
dec
inc
movsl
aaa
jl
and
adc
mov
lods
inc
jno
jle
sbb
outsl
mov
arpl
mov
or
sarb
jmp
push
pop
jp
mov
out
mov
xorb
mov
enter
orb
jnp
js
mov
rcll
jnp
movsl
testb
stos
pop
aaa
int
pop
xor
out
test
movsb
or
mov
pop
ret
mov
fimuls
icebp
push
adcb
jae
pusha
imull
add
icebp
enter
inc
fs
fstpt
xchg
adc
test
jne,pt
outsl
aas
or
push
insb
xlat
jge
adc
push
sbb
cmp
inc
bound
push
addl
rolb
add
xchg
lret
sub
pop
nop
repnz
pop
cmp
in
dec
imul
rorb
hlt
jnp
rorl
adc
in
pushf
push
pop
mov
popf
lea
out
js
movsl
outsb
jnp
mov
adc
sar
jae
inc
mov
cmp
cltd
hlt
ja
ds
aas
inc
nop
adc
mov
dec
push
mov
push
push
and
and
jg
cli
and
sti
xor
iret
aaa
mov
cli
mov
add
jo
or
fadds
enter
test
push
lcall
shlb
and
addr16
leave
aad
insl
mov
mov
scas
jae
loopne
inc
mov
dec
cmp
mov
add
jl
movsl
icebp
mov
sub
fbld
lcall
adc
popf
aaa
jg
subl
add
jbe
inc
ljmp
jb
movsl
ljmp
ja
xchg
pop
clc
pop
ja
movsl
bound
jge
faddl
stos
iret
lock
xchg
inc
sbb
mov
lahf
adc
rorl
rcrl
out
addr16
mov
cmp
std
bound
xor
iret
jmp
add
sbb
jb
lret
sbb
mov
mov
cltd
cli
mov
jo
or
push
and
inc
fnstsw
pop
push
mov
test
or
adc
mov
cltd
sbb
iret
mov
fdivl
pusha
inc
sub
xchg
add
ss
imul
frstor
movsl
mov
jecxz
mov
push
fwait
jp
xchg
stos
mov
dec
in
pop
jbe
jne,pt
jns
loop
jo
leave
rcl
jae
mov
add
dec
mov
movsl
call
inc
sbb
sbb
and
aaa
lods
sbb
fstpl
out
mov
or
decb
negl
lods
fbstp
push
enter
std
xchg
not
notl
subb
pusha
jl
pusha
cli
rclb
jl
push
lods
mov
fldpi
push
pop
sbbl
cwtl
push
data16
lahf
xor
insb
mov
or
pop
jp
js
sub
out
add
ror
stc
imul
push
movsb
jg
and
loop
shll
decl
pop
add
fcomip
inc
add
in
lods
adc
sub
js
aad
jb
mov
xchg
mov
stos
adc
call
or
stos
popa
push
jae
adc
xor
cmp
cmpsb
cli
or
movsl
push
insb
xchg
cmp
mov
mov
mov
notl
jno
cli
xchg
shll
push
or
stos
mov
sub
jecxz
negb
daa
mov
mov
les
dec
stc
nop
jg
cmp
mov
sbb
lret
mov
pop
sub
push
and
mov
sbb
arpl
push
scas
fwait
addb
test
daa
sbb
dec
shll
cmpsb
jle
cwtl
and
push
fstl
or
js
adc
xchg
dec
inc
xor
movsb
xchg
push
loope
lds
jns
dec
fldt
mov
lahf
adc
jno
mov
push
movsl
adc
add
scas
add
rol
test
jecxz
push
push
dec
daa
mov
xchg
pusha
mov
dec
lock
jno
cmc
bound
outsl
cld
fsubs
mov
hlt
testb
fnstsw
push
and
fmul
pusha
jp
cmp
jge
sbb
add
frstor
inc
fsts
movsl
mov
dec
or
xor
pop
mov
jae
xor
and
out
push
rcrl
mov
orl
insb
jbe
lea
shr
out
bound
in
sub
daa
pop
imul
mov
aaa
bound
mov
xor
out
push
add
call
or
out
mov
js
mov
jecxz
scas
fwait
mov
lods
pusha
fdivl
rorl
mov
mov
inc
jnp
and
int
adc
imul
clc
mov
out
out
popa
in
call
clc
movsl
sbb
sub
ds
data16
aas
mov
loope
enter
pop
xor
in
or
lret
xchg
cmp
mov
sbb
dec
adc
imul
movsl
js
or
xchg
mov
lods
rorl
in
fisttps
std
inc
ret
pop
aam
insl
and
push
pop
arpl
test
dec
add
adcb
adc
lds
push
jp
jb
jg
movsb
ja
adc
out
lea
mov
mov
cli
imul
add
faddp
stos
jbe
inc
testl
or
imul
pop
or
sub
jo
xchg
es
mov
pop
imul
xor
sub
scas
cmp
outsl
mov
pop
vpsubusb
adc
icebp
push
xor
cwtl
fdivr
orl
mov
scas
insb
jnp
gs
add
les
adc
inc
or
xor
or
shlb
pop
int
jge
fldl2t
push
and
inc
fwait
sti
jne
cmpsl
aaa
fwait
popa
cli
jns
adc
daa
mov
stos
addr16
xchg
push
fcoms
pushl
imul
cmp
lock
shrb
jp
imul
adc
sbb
jns
mov
rolb
std
dec
jl
dec
xor
dec
inc
jne
cmp
push
sti
mov
pop
mov
adc
icebp
mov
cmpsl
out
push
xchg
sub
and
fcoml
fsubrp
sbb
fadd
or
or
mov
in
std
add
sarl
inc
fbstp
nop
dec
ret
jle
cmp
mov
pop
adc
push
xor
mov
inc
adc
daa
pop
sbb
dec
jno
xchg
cwtl
scas
sbb
mov
mov
ss
pop
lock
out
xchg
sbb
mov
rcrl
sarb
test
xchg
std
xor
std
addr16
xor
pop
xchg
push
mov
ret
pop
mov
js
sbb
cltd
push
out
add
popa
xor
out
inc
pop
sbb
mov
mov
imul
push
xchg
sbb
mov
cltd
inc
ffree
mov
push
out
xchg
sub
jle
adc
mov
out
pop
fistps
fnstcw
cmpsl
aaa
shlb
xchg
mov
pushf
es
sub
fst
lds
ja
jmp
mov
jl
pusha
aad
insb
and
imul
push
sbb
or
pop
push
je
outsl
lock
aad
ds
pop
iret
fs
rcrb
xor
xorb
or
or
aam
aas
mov
push
add
jmp
xchg
push
jecxz
je
push
pusha
xor
push
jge
dec
cmp
dec
add
xlat
add
inc
dec
push
mov
cmp
sbb
nop
je
out
loope
mov
testl
xchg
nop
fstpl
stos
in
lea
inc
cmp
in
inc
xchg
ret
into
test
pop
mov
in
jnp
sbb
cmp
fucomip
int
push
call
imul
insl
jbe
mov
sub
sub
inc
inc
stos
mov
fs
sbb
jmp
xor
jl
std
dec
in
push
inc
fmuls
hlt
push
cmp
testb
cmp
xor
adc
mov
cld
lcall
xchg
xor
push
scas
aaa
stos
sbb
sub
loop
shlb
ds
jecxz
sub
pop
test
jne
fmull
loope
sub
mov
push
in
mov
xor
scas
aam
push
cmc
popf
frstor
mov
pop
mov
test
je,pt
xchg
in
jge
lds
adc
in
iret
and
out
and
lea
test
orb
adc
loopne
push
movsl
jb
scas
add
dec
jns
cmp
xchg
mov
push
pop
mov
in
and
out
jmpw
call
addl
fistps
addl
stc
rorb
mov
push
xor
es
jbe
inc
test
dec
not
arpl
pop
xor
mov
fisttpll
iret
xchg
jg
mov
mov
lods
outsl
pop
sbb
adc
das
xchg
les
push
xor
mov
les
data16
aaa
lahf
push
lock
mov
or
inc
sub
sbb
outsb
adc
mov
and
mov
loope
out
dec
and
cmp
popa
inc
out
jnp
lret
pop
test
jg
push
push
fnstenvs
add
popa
jbe
mov
out
mov
mov
ja
jno
aam
sub
aad
sub
js
or
and
xchg
xchg
dec
in
xor
loop
sub
fmul
addr16
shr
adc
and
jecxz
jo
push
nop
add
mov
jle
int
or
ja
add
mov
pop
test
sbb
cmc
mov
xchg
cmp
dec
and
push
movsl
in
sbbb
lock
add
cmp
and
repz
pop
orb
push
pushl
or
mov
mov
jmp
rolb
cmp
and
sub
mov
xchg
mov
push
js
fisubl
lcall
and
mov
add
in
adc
mov
loopne
and
jle
leave
xor
push
rcrb
push
aas
xchg
pop
icebp
ret
pop
jae
dec
and
test
js
mov
movsb
mov
faddl
test
ret
cmp
hlt
mov
pop
mov
add
fiadds
and
xchg
inc
push
cltd
xor
or
test
adc
fisttps
rorl
jno
add
xchg
out
clc
fdivs
ror
pusha
adc
dec
outsl
in
out
je
insl
mov
push
notl
imul
mov
pushf
jns
rcrb
shrb
xchg
jnp
push
cmp
mov
loop
push
xlat
mov
jmp
jge
es
jo
movsl
fadd
add
not
and
popf
gs
inc
addl
pop
repz
mov
sbb
shll
std
xchg
popf
push
mov
cmp
inc
fsubl
dec
and
aam
jmp
adc
xor
in
sbb
xor
adc
mov
ret
repz
test
fld
push
jmp
xchg
jle
fwait
sub
cmc
mov
lret
js
adc
cmp
into
adc
sbb
out
mov
into
icebp
or
ror
repz
iret
sarl
push
push
or
mov
xlat
sub
in
dec
inc
dec
xchg
xor
sahf
repnz
cld
lcall
sbb
das
xchg
push
adc
adc
push
cmc
mov
mov
cli
sbb
mov
addb
pop
scas
gs
sbb
jbe
cmp
xchg
out
xchg
jne
cmp
mov
cmp
fcmovnbe
and
jno
and
out
xchg
push
fcompl
in
fsubs
icebp
int
repnz
stc
adc
xchg
pusha
je
push
addb
xchg
negl
loopne
mov
cmpsb
add
and
rclb
xchg
pop
mov
shl
fcoml
add
dec
mov
xor
jb
lds
xchg
xchg
xchg
mov
adc
jne
push
inc
xchg
inc
push
fdivp
mov
ficoms
adc
dec
pop
pusha
fisttpl
adcb
sbb
js
shll
xchg
scas
fldenv
scas
mov
iret
mov
push
call
scas
ljmp
sub
fsts
adc
and
fyl2x
sub
mov
test
out
jecxz
call
xchg
sbb
pop
cld
movsb
ja
xchg
loope
mov
push
mov
insb
adc
fbld
cmp
inc
add
mov
fldcw
push
stc
push
lods
mov
jge
inc
mov
fmull
sbb
push
std
add
push
mov
jle
dec
mov
mov
push
call
inc
popa
sbb
hlt
mov
lret
push
mov
and
sarb
sub
aas
bound
mov
rcl
leave
or
addr16
jbe
jg
loope
std
stos
pop
sub
iret
mov
fdivl
pop
ljmp
out
test
arpl
pop
mov
mov
dec
and
add
sti
ljmp
sbb
jbe
mov
das
sbb
int
scas
enter
sar
xchg
jns
inc
jb
lcall
inc
bound
les
fdivrl
or
jno
adc
mov
cmp
cmpsl
mov
mov
sub
inc
and
sbb
popa
jns
pop
lahf
fcompl
mov
cmc
fwait
loope
inc
push
mov
aam
and
or
sahf
mov
mov
jmp
bound
fs
mov
adc
xor
xlat
fs
mov
cmpsl
in
fsubr
lock
pushf
mov
jns
fdivl
pop
adc
aad
xchg
sub
cmpsl
stos
mov
clc
jmp
inc
inc
sub
mov
push
addr16
stc
lret
xlat
lcall
mov
adc
cmpsb
inc
cmp
cmp
loopne
inc
cmp
dec
inc
xor
mov
adc
push
xchg
cs
jne
mov
or
imul
cmpsb
jge
in
mov
xchg
mov
and
in
add
xor
or
lods
jmp
jns
jmp
sub
jae
enter
fcompl
and
imul
std
test
and
out
xor
stc
inc
scas
mov
iret
fistl
sahf
fwait
pop
repz
stc
sub
adc
stc
lea
sbbl
ja
mov
imul
into
mov
test
mulb
push
loop
fistl
jb
adc
or
hlt
cli
in
push
mov
mov
insb
sub
lret
or
sahf
xor
dec
mov
cmp
adc
push
insb
arpl
aad
pop
loop
inc
pop
mov
mov
in
scas
fisubl
icebp
jno
and
jle
and
sub
and
test
cmp
test
push
add
test
mov
fs
sbb
and
mov
sub
fucomip
call
cwtl
ss
jmp
xrelease
jecxz
and
fdivp
into
or
push
xchg
mov
adc
mov
scas
icebp
cmp
cmp
pushw
lods
xchg
jp
sti
nop
push
sub
mov
cmp
pushl
cmp
and
fs
inc
rol
negl
outsb
jle
jg
loopne
pop
xchg
and
das
adc
fisttpl
pop
cs
pop
mov
mov
jg
loope
mov
dec
mov
daa
lock
xlat
and
sbb
mov
mov
and
clc
shl
pusha
clc
mov
mov
std
rorl
ficomps
sub
icebp
repnz
and
mov
stos
insb
gs
or
cmp
mov
es
cmp
xchg
cli
mov
sbb
pop
gs
test
or
mov
jns
icebp
stos
mov
paddw
xlat
pop
dec
add
jae
nop
sbb
cmc
scas
mov
mov
enter
mov
loope
add
xor
dec
data16
pop
int3
push
into
add
sbb
rcr
out
cs
sbb
pop
cmp
dec
add
daa
aam
gs
adcb
or
movsl
pop
cmp
fs
loope
xor
lahf
mov
mov
pop
das
addr16
adc
mov
xchg
jmp
jl
scas
scas
cltd
mov
mov
sbb
inc
ret
or
in
sub
or
adc
sub
pusha
jp
sti
scas
jecxz
dec
pop
mov
lret
push
fldcw
int3
mov
xchg
out
mov
mov
jmp
fisubrl
mov
xor
pop
addl
mov
mov
pop
pop
dec
mov
inc
sarb
push
adc
dec
loop
mov
icebp
movsl
jmp
lea
or
cmpsl
loop
cs
scas
add
xchg
pop
insb
std
iret
in
jge
in
inc
dec
xor
hlt
ljmp
sub
movsl
ljmp
outsl
or
out
std
data16
mov
test
sbb
dec
xchg
std
pop
hlt
dec
dec
aaa
popa
hlt
adc
dec
fistl
inc
popa
inc
mov
mov
pop
lret
cltd
lcall
inc
subb
in
dec
insl
shlb
shlb
adc
pop
xor
or
scas
push
sbb
xlat
les
popl
out
cmpsb
repnz
sub
or
xchg
sbb
test
xchg
xchg
das
shll
aad
push
clc
out
add
std
rcrl
push
push
test
mov
push
lahf
and
stc
ds
mov
fnstsw
xchg
jp
out
shrb
xchg
mov
adc
rcrb
sbb
fdivp
pop
les
mov
push
sti
sbb
xorl
cmp
lock
ss
push
jl
adc
imul
lcall
clc
out
mov
pop
leave
or
popf
xor
adc
dec
add
loop
cmp
dec
inc
enter
aaa
dec
icebp
inc
jb
std
ljmp
iret
dec
inc
dec
loope
mov
addr16
cmp
sbb
rol
das
cmp
cmp
fucomip
inc
stos
push
mov
enter
dec
and
adc
lods
mov
push
popf
sti
rcr
xlat
data16
andb
lock
test
pop
cli
ja
and
fcom
and
xchg
sub
sub
dec
inc
popa
jns
dec
inc
dec
sahf
cmpsl
jle
je
insb
loop
add
int
mov
je
lcall
fldl
and
cld
sub
decb
push
xor
push
shr
inc
lea
jns
daa
int
cwtl
or
ds
pop
shl
pop
iret
repz
push
dec
shl
jo
xor
or
je
push
es
je
push
ljmp
and
sub
test
lahf
sbb
pop
adc
or
and
mov
push
mov
fbstp
gs
lock
jnp
xor
pop
fcoml
out
pop
jle
push
das
jp
nop
push
jl
adc
dec
loop
jge
loop
outsl
mov
adc
dec
xlat
cli
push
mov
daa
jecxz
stos
adc
lret
push
xor
mov
mov
mov
mov
cmp
dec
leave
shll
rcrl
jge
call
or
mov
ss
sub
fsubrp
test
cmp
fnsave
fisubl
sub
test
int3
adc
dec
js
inc
lret
push
xchg
mov
adc
cld
dec
add
add
push
xor
mov
push
sub
dec
pop
mov
sbbl
daa
xor
jmp
xor
xor
dec
and
in
popf
shll
push
mov
cltd
rcrb
mov
jmp
lock
scas
in
cs
sbb
stos
xchg
xchg
js
ret
movsl
push
lret
mov
imul
in
pop
fistpl
ret
or
outsb
mov
jle
or
adc
mov
inc
lods
push
mov
xlat
push
jl
mov
and
pop
hlt
es
mov
mov
mov
jecxz
out
hlt
and
xor
jmp
jmp
sti
mov
imul
push
ds
pushf
out
adc
push
add
movsl
mov
mov
jmp
fwait
inc
shr
push
lea
mov
cs
inc
mov
jl
pop
loop,pt
and
cmp
cli
out
pop
push
aaa
adc
or
in
cmpsb
lds
stc
dec
ds
fs
pop
bound
mov
jecxz
ss
test
dec
xor
dec
mov
mov
push
fnsave
std
inc
lret
data16
push
push
pop
mov
sbb
decl
mov
and
das
inc
loopne
jne
shrb
xchg
and
subb
jmp
push
add
sub
mov
dec
mov
xor
jbe
push
fbstp
outsb
repz
xchg
mov
pop
add
out
mov
and
dec
int3
push
dec
jle
iret
arpl
pushw
mov
lods
cmp
cmp
test
push
push
xor
or
notl
mov
add
test
jne
int
cmp
mov
popa
outsl
jnp
sbb
pop
fiaddl
adc
movsl
pop
aaa
jl
je
sub
mov
push
mov
data16
aaa
dec
mov
sub
stos
pop
fwait
lcall
mov
push
mov
push
push
mov
cs
ja
loop
in
cmp
inc
dec
lahf
cmp
cs
pop
shrl
dec
pop
sarb
rol
pop
mov
xlat
or
lods
ljmp
wbinvd
repnz
out
push
adc
xchg
imul
adc
dec
aam
mov
leave
popf
mov
std
pop
mov
inc
sti
xor
jb
hlt
rorl
cmpsb
repz
push
mov
or
inc
push
ret
cmp
jb
inc
mov
adc
leave
mov
adc
imul
test
pop
cmp
dec
push
xchg
fnstsw
ret
mov
adc
sbb
aad
mov
and
pop
mov
in
push
ljmp
cmp
mov
jb
cmp
call
mov
cmp
rorl
in
call
insb
das
data16
add
notl
cpuid
xchg
sub
addl
inc
mov
add
xor
es
ds
inc
fbld
int
mov
cs
fwait
subl
movsb
mov
sub
into
fwait
sub
outsb
and
mov
in
sub
loope
inc
mov
push
loope
xchg
pop
and
adc
pop
push
cmpsb
mov
enter
pop
and
int
mov
sub
adc
xchg
push
push
movsb
inc
in
flds
ret
dec
cli
cmc
shrb
push
push
loope
cmpsb
icebp
iret
push
cmp
ja
pop
pop
fidivrs
dec
mov
pop
inc
or
jns
xchg
add
add
lods
mov
pop
test
pop
out
inc
data16
mov
gs
test
cmp
mov
mov
int3
and
push
lods
sbb
mov
add
pop
push
or
xchg
pop
popa
stos
pmaxub
pop
add
jp
jb
dec
xchg
sub
jno
sbb
sub
int3
dec
adc
fs
dec
jmp
std
xchg
push
lret
xlat
ss
xchg
sub
outsb
xor
xchg
test
inc
mov
xor
jbe
out
aam
scas
in
mov
dec
js
xchg
jbe
xor
jns
aas
push
hlt
jg
push
cmpsl
in
ja
ret
pop
or
enter
fwait
test
cwtl
stos
sbb
flds
pop
insb
push
push
xor
mov
dec
out
xor
test
pop
jne
push
ljmp
lock
xchg
dec
mul
mov
ficoms
nop
imul
or
cmp
dec
repz
leave
cmpsl
mov
repnz
push
mov
push
jmp
xchg
jo
das
out
nop
mov
out
sub
pop
sub
in
test
cltd
scas
mov
sar
push
xor
movsb
cmp
inc
popf
mov
stos
cmp
push
mov
adc
xchg
jb
test
mov
or
pop
dec
dec
loopne
ret
sub
inc
cmp
cmpl
insb
ret
push
inc
arpl
dec
lods
orb
mov
xchg
or
popa
sbb
mov
dec
fidivrl
cwtl
xor
fimuls
adc
push
rorb
repz
aaa
ss
lock
cmp
lea
daa
ja
mov
cs
push
repnz
popa
add
lock
xchg
cs
iret
aas
adc
push
push
dec
cltd
arpl
mov
outsl
jnp
dec
decl
xchg
push
xchg
pop
mov
push
or
lock
test
stc
aaa
fs
sbb
scas
cmp
dec
mov
cltd
xorl
cs
aas
ror
dec
jb
outsl
movsb
mov
cmp
cmp
lcall
add
inc
lea
ja
pusha
mov
xlat
pop
shrb
insl
fstl
insl
ljmp
repnz
les
cmp
fadd
sahf
stc
xor
bound
inc
cmp
imul
and
repnz
dec
das
mov
mov
push
jg
test
inc
dec
imul
pop
lds
addr16
sahf
mov
mov
test
ds
jp
mov
loope
jmp
mov
pop
addr16
and
adc
loop
in
lcall
or
xor
arpl
icebp
inc
mov
jl
sbb
cs
aas
popa
lock
mov
testb
cmp
es
pop
insl
add
je
bound
scas
push
out
dec
mov
out
mov
adc
adc
je
clc
sahf
insl
stos
mov
fcom
fsubrp
insl
je
fildll
lahf
xor
adc
push
mov
mov
jl
arpl
call
es
mov
es
insl
mov
insb
shll
jb
gs
enter
in
inc
cltd
jno
inc
icebp
adc
and
jbe
or
ret
mov
cmp
push
repz
jl
xchg
adc
xchg
imul
mov
push
dec
pop
clc
test
repz
inc
cli
xchg
jae
xchg
stos
loop
mov
sub
xchg
fisubrs
lds
mov
xlat
les
mov
test
stos
sarl
lds
stc
nop
pop
test
lods
jmp
push
repnz
lods
mov
idivl
mov
movsb
data16
add
fists
fidivrl
jno
jecxz
jg
xlat
clc
push
cld
outsl
shrl
lods
and
notb
ret
jnp
outsb
lods
fcompl
mov
sub
pusha
mov
sbb
ds
fwait
xor
sbb
add
lds
adc
lahf
add
mov
push
jge
lods
push
add
in
xor
cli
dec
pop
sub
mov
pop
jo
sbb
push
dec
daa
add
pop
push
and
gs
sahf
inc
shrl
xchg
gs
xchg
mov
movsl
jl
cmp
and
pop
std
pop
bound
jo
test
and
sub
cmpb
sbb
mov
das
pop
inc
lock
cmp
jl
mov
and
pop
adcb
add
sti
and
sbb
adc
mov
xor
orl
scas
cmpsl
ds
mov
mov
push
arpl
dec
sbb
dec
sub
lods
pop
insb
ss
xor
imul
jns
insb
jle
push
mov
cmp
flds
hlt
add
aad
mov
jno
repz
cwtl
into
xor
pop
sub
cli
xchg
loope
xor
lea
repz
fildll
movsl
test
lock
popf
das
lea
xchg
rorb
and
xor
ja
mov
fiaddl
fwait
shlb
int3
add
test
sahf
and
shlb
push
in
stos
rcl
jmp
mov
mov
inc
inc
dec
jl
and
das
mov
or
nop
mov
pushf
push
fadd
jno
out
pop
inc
sbb
mov
or
daa
in
outsb
mov
loope
imul
lcall
dec
ja
ret
test
sub
into
push
fwait
and
scas
cmpb
or
xchg
pop
mov
mov
adc
add
sub
mov
mov
and
xchg
int
fimull
mov
cld
mov
arpl
jns
rorb
adc
sub
shl
sbbl
adc
scas
xchg
ds
cmpsl
sub
dec
mov
push
call
subb
xchg
notl
lahf
xor
inc
lods
js
mov
or
push
sar
fs
lcall
mov
sub
cmc
pushf
or
int
lods
out
je
pop
fadds
test
scas
mov
mov
dec
mov
fwait
pop
js
fdivl
xchg
arpl
cmpsb
cld
add
mov
add
dec
pop
mov
dec
aaa
lods
lahf
xchg
sub
fdivrs
imul
inc
adcb
and
cmpsb
sub
pop
vpmullw
iret
mov
popa
or
inc
imul
jnp
fwait
lea
adcb
pop
mov
repnz
xchg
test
inc
in
std
mov
or
xchg
inc
adc
push
sub
lret
lret
pop
inc
ds
repz
mov
xchg
adc
scas
inc
cmpb
mov
in
jns
fsubl
aam
repz
mov
fdivrs
popa
dec
dec
arpl
inc
sub
jno
sbb
or
rolb
mov
scas
pop
jno
insb
push
ds
fsub
add
cli
loop
fsubrl
dec
fiadds
fbstp
cmp
sub
jno
xchg
testb
mov
fwait
xchg
or
mov
inc
fnsave
mov
lds
pop
or
nop
push
push
call
sub
mov
lds
shrb
rcl
jns
mov
add
add
mov
mov
cli
mov
out
adc
aaa
and
sub
popa
les
repz
fisubrl
mov
pushf
enter
call
add
bound
fstpl
mov
loop
xchg
call
rclb
adc
mov
xor
out
pop
adc
xor
ds
lret
std
jo
bound
push
insl
xlat
sub
sub
test
mov
push
lret
push
xchg
stos
push
test
fmuls
adc
push
sub
pusha
and
jno
ficoms
push
inc
loope
push
test
scas
push
daa
fnsave
or
ljmp
out
mov
andl
jmp
inc
mov
push
aam
xchg
adc
shrl
repnz
outsl
fwait
push
push
ret
es
outsb
or
lahf
cmpsl
mov
sbb
mov
and
add
insl
cs
mov
fwait
jnp
stos
and
notb
lahf
nop
fsubrs
cmp
stc
mov
cmp
mov
aam
das
out
mov
xchg
mov
lods
inc
ret
mov
test
mov
js
xchg
inc
cltd
test
fcmovbe
jle
cmp
mov
fnstenv
mov
mov
push
inc
sahf
js
mov
clc
aad
mov
jg
call
scas
mov
cmpsb
jno
fisubs
sti
push
ret
repz
sbbb
dec
out
sahf
ja
cwtl
jge
sub
mov
aad
cmc
data16
xchg
dec
out
xor
adc
pop
int3
lcall
cwtl
or
cwtl
movsl
js
mov
icebp
push
das
cmp
pusha
sbb
push
sub
sti
pop
iret
pop
popl
cmp
lahf
cs
lret
mov
push
insl
or
test
xlat
sub
jecxz
mov
and
lret
cmp
mov
stos
pop
jne
out
or
mov
pop
aad
adc
lods
cmp
push
stos
testl
stc
aad
ljmp
pusha
out
shrl
pop
int3
fcoms
jnp
mov
sbb
adc
or
mov
cmpsb
lock
test
push
push
push
sbb
cmp
inc
jecxz
xor
loope
jl
xor
sub
lahf
lcall
cltd
gs
xchg
and
fucomi
push
mov
rorb
popa
pop
mov
lret
hlt
mov
lock
shlb
inc
je
cwtl
sub
idiv
fwait
sub
jbe
push
push
mov
xor
pop
dec
cwtl
out
incl
xchg
push
jb
enter
cwtl
or
dec
pop
mov
lea
es
movsb
test
pop
test
mov
stos
lcall
das
loopne
mov
jnp
push
in
xchg
xchg
shll
xor
ja
push
cs
sub
scas
mov
out
pop
lds
stos
daa
cmpsb
aaa
adc
mov
mov
loop
bound
xchg
iret
mov
sbb
pushf
fcoms
xor
inc
fldcw
lret
cld
pop
add
push
inc
xor
jmp
pop
or
jg
inc
fstpl
cmp
lds
fwait
insl
stc
nop
pop
stos
mov
and
shll
fstps
xor
movsl
sub
test
dec
sub
pop
shll
jg
bound
mov
adc
lcall
stc
and
push
adc
dec
dec
call
dec
cmpsl
stos
add
jnp
movsl
int
ja
sbb
jo
in
stos
add
mov
pop
inc
push
int
mov
pop
inc
xchg
dec
into
adc
mov
cmp
push
adc
xchg
pop
and
add
imul
or
imul
mov
add
incl
add
testl
dec
notl
repnz
sbbl
stos
dec
lahf
idiv
lret
fidivs
mov
std
xchg
jae
inc
ljmp
xor
call
in
fsubs
in
xchg
sbb
rcl
shrl
les
in
sub
movsl
out
gs
rcrb
outsl
push
outsb
xor
cmpsl
popa
pushf
sbb
clc
mov
bound
push
test
int
movsl
scas
add
add
push
xchg
out
nop
xchg
mov
pop
stos
push
jmp
repz
ja
lods
adcb
aaa
mov
sub
cmp
vpunpckldq
pop
pop
mov
pop
mov
and
or
add
and
sbb
mov
push
mov
dec
adc
jl
scas
adc
inc
xor
jg
or
push
cmp
dec
stos
sbb
fildll
jp
gs
sub
adc
sbb
idivb
iret
xorb
lea
xchg
int3
jno
out
add
rcr
sub
pusha
fcomi
ja
add
popf
adc
add
mov
mov
mov
ljmpw
mov
push
out
bound
imul
jno
mov
xchg
sbb
int3
mov
divl
arpl
cwtl
lds
adc
cmc
mov
shll
pop
loopne
sarb
out
cmpsb
jns
out
dec
push
mov
mov
arpl
mov
stos
insl
pop
cmp
or
mov
push
push
mov
mov
in
adc
negl
xor
sub
in
add
or
into
pushf
test
add
sbb
je
mov
testl
into
dec
loopne
iret
fucomp
or
ljmp
sub
push
fmul
aam
pop
sbb
adc
sub
pusha
pop
call
aas
stos
inc
push
mov
flds
lock
jg
xchg
xor
sbb
cmp
in
sti
pop
shll
fbld
orl
rclb
out
movsl
mov
int3
loope
js
jae
jmp
mov
addl
cmp
stos
jmp
pop
mov
rcr
inc
pop
add
push
inc
xchg
push
dec
iret
ret
xor
test
addr16
mov
adc
push
ljmpw
dec
fidivs
lret
pop
f2xm1
dec
orl
xchg
dec
pusha
lret
into
push
cmc
dec
jae
cmpsl
push
pop
aam
lea
ret
sub
mov
sarl
rorb
sbb
ljmp
push
rorl
sbb
xchg
mov
xlat
fmuls
dec
pop
fucomp
ljmp
xchg
arpl
lods
frstor
bswap
xlat
mov
in
adc
push
and
ss
push
fsubs
xor
popa
cmp
cmp
xor
lods
movb
mov
mov
mov
jge
popa
lahf
pop
push
imul
mov
pop
outsb
and
sahf
xchg
sub
imul
aaa
inc
fidivl
addr16
sub
and
out
popa
add
daa
insb
adc
add
inc
mov
hlt
mov
adc
adc
xchg
jl
dec
jo
out
add
or
ds
mov
dec
mov
mov
jno
jg
xor
pop
test
mov
lods
pop
out
shrb
imul
imul
or
cmp
fadds
out
xchg
mov
inc
fcoml
adc
sbb
data16
sbb
dec
adc
aam
push
pop
icebp
and
mov
adc
lods
mov
add
xchg
pop
stos
rcrb
test
xor
mov
inc
lea
in
cmc
add
cwtl
push
and
jmp
cld
inc
andl
cmp
add
push
sub
xchg
movsb
xchg
sbb
dec
and
jb
hlt
sub
fbld
mov
jmp
mov
xor
xchg
cli
cmpsb
add
sahf
outsl
mov
sub
mov
fisttpll
push
jnp
lcall
addl
mov
xchg
xlat
sub
hlt
jmp
push
sub
dec
movsb
imul
adc
popf
adc
hlt
lea
aaa
into
sbb
out
sahf
sbb
int3
out
dec
pop
pop
push
mov
pop
test
loope
mov
jp
lock
pop
and
je
pop
jae
mov
adc
xchg
lea
sbb
aam
and
push
mov
mov
inc
mov
into
call
cld
mov
ljmp
mov
mov
inc
loope
inc
fidivs
xchg
sub
mov
idivl
fadds
mov
rclb
pop
push
sbb
inc
insb
cmp
shll
sahf
pop
adcb
cmpsl
cld
outsl
subl
pop
pop
cmp
pop
pop
and
dec
and
imul
push
scas
push
int
add
inc
fsubrl
shll
rol
test
cmp
cld
xchg
sub
cli
xor
pop
xor
outsb
pop
andl
mov
adc
fisubl
adc
jbe
mov
lods
lds
mov
jle
in
xchg
mov
push
jbe
xchg
sti
mov
or
out
icebp
xlat
inc
inc
dec
push
in
jnp
loop
adcb
sbb
lret
cmpsb
sbb
jmp
cmp
push
sbb
dec
cmpsb
shlb
sbb
js
dec
lahf
dec
popf
lods
jge
loop
xor
out
aam
inc
nop
lahf
mov
mov
outsb
iret
and
mov
push
adc
jg
jns
repz
in
pop
xchg
sbb
ret
fwait
xor
xchg
inc
cmc
fidivrs
pop
xor
sub
shrb
jl
fs
scas
cmp
imul
cmp
adc
lods
leave
arpl
jbe
popa
and
mov
add
and
and
xchg
ret
jnp
add
ss
andl
mov
rclb
sbb
std
mov
push
jo
mov
test
movsl
cmp
mov
cmp
xchg
pop
mov
psrad
fisttps
dec
fiaddl
and
mov
inc
sbb
or
pop
test
jb
inc
sbb
in
mov
outsl
insb
jae
jp
arpl
sbb
push
or
bound
add
fwait
pop
fs
xor
test
pop
repz
in
int
rolb
loop
sbb
cmp
cmp
cltd
imul
scas
or
xchg
test
stc
mov
sarb
xchg
mov
add
stc
push
int3
inc
arpl
inc
mov
mov
fidivrl
xchg
repz
sbb
lret
rcll
mov
mov
xorl
or
mov
out
sahf
mov
flds
jg
xchg
sahf
test
pushf
xor
lahf
push
xlat
push
jl
and
ljmp
jl
cs
shl
xchg
cmp
or
clc
or
inc
push
mov
arpl
jmp
mov
hlt
push
loop
nop
clc
jnp
mov
sbb
mov
pushf
addr16
negb
sub
pop
cli
mov
and
xchg
cmp
sub
ja
daa
mov
mov
mov
and
cmp
mov
decb
jg
arpl
lcall
subb
mov
cld
outsb
mov
jne
loopne
hlt
adc
dec
stos
lcall
and
arpl
repnz
push
mov
pop
sub
mov
mov
fs
jg
mov
sub
sbb
inc
cs
out
and
cmp
mov
inc
shll
cmp
lock
and
mov
mov
lds
stos
add
scas
xor
add
pop
jnp
gs
push
and
inc
adc
dec
add
daa
lods
xchg
test
std
repz
xor
orb
pop
add
inc
push
jbe
push
subl
sub
jl
mov
imul
outsl
inc
jle
fnstenv
inc
sub
dec
sub
repz
dec
mov
sub
inc
cmp
cmc
in
cmp
movsl
gs
nop
xchg
xlat
daa
icebp
lahf
pop
mov
movsb
jecxz
sbb
stos
dec
fdivl
add
lods
push
or
leave
cs
sub
btr
jp
insl
loope
sahf
pop
lock
mov
aam
in
orb
mov
and
shrl
xchg
cmp
cmc
or
dec
jae
pop
cwtl
pop
imul
mov
aad
jnp
xlat
push
cmp
jl
notb
push
shrl
lcall
out
add
lods
inc
out
jne
cwtl
add
lahf
pop
adc
sbb
out
pop
out
mov
or
inc
and
pop
mov
mov
hlt
shl
dec
pushf
xor
mov
imul
hlt
pop
or
addl
inc
jl
into
repnz
out
int3
xchg
int
jns
xorb
or
je
xchg
mov
fwait
dec
stos
orl
arpl
in
cmp
mov
int3
subl
and
xor
out
cmpsl
xlat
and
shl
push
inc
je
cmpsb
jb
stos
gs
scas
mov
and
enter
push
and
fnstenv
test
cli
jmp
aad
jno
popa
xor
aaa
nop
cli
push
mov
or
lds
xchg
xor
mov
jge
loop
sbb
aam
dec
xchg
inc
sbb
addr16
mov
add
js
pop
scas
inc
xor
pop
jle
jle
nop
cltd
xor
sbb
push
mov
test
lcall
test
and
add
inc
inc
xchg
pop
jne
jp
shll
lret
xor
pop
data16
pop
pop
das
out
popa
leave
mov
or
sub
sub
movl
test
lret
sti
lahf
mov
jae
push
jbe
adc
mov
mov
push
mov
xchg
dec
inc
mov
aad
leave
nop
je,pn
pop
pop
icebp
loope
jl
adc
outsb
dec
jmp
stc
inc
negb
fildll
pop
or
pop
stc
in
dec
push
fidivl
mov
sbb
sub
in
inc
lahf
lahf
pop
repz
lds
sahf
cmp
insl
add
cmp
mov
mov
pop
out
pop
xchg
movsb
or
mov
pop
lcall
sub
adc
mov
test
adc
mov
pop
add
and
lods
cmp
loopne
mov
into
pop
cmp
pop
in
inc
sbb
jo
rcrb
sti
mov
push
xchg
cmp
ss
cmp
mov
out
cld
jbe
aad
sub
cwtl
mov
mov
jecxz
arpl
dec
cmp
xor
clc
cld
push
je
push
pop
add
out
mov
jb
or
in
stos
and
mov
and
cmp
stc
mov
leave
or
and
push
push
lods
idivl
jo
dec
dec
mov
in
test
std
or
and
pop
xor
insl
popa
push
xchg
add
mov
idivl
jle
mov
shl
ret
aas
fwait
pop
lock
lock
sub
add
jle
xor
orb
pop
dec
adc
mulb
push
jge
sbb
cmpl
je
push
scas
shl
sub
rcr
lret
movsb
mov
sti
pop
imul
sub
or
add
dec
dec
add
dec
jmp
in
cmp
jbe
mov
or
xor
cmp
hlt
lret
test
stos
inc
mov
jnp
frstor
sbbb
pop
xchg
dec
sub
std
pop
dec
nop
dec
dec
lahf
cmpsb
or
pop
lock
add
mov
test
mov
in
stos
jmp
mov
jmp
movsb
ss
shll
pop
jp
adc
jno
hlt
jp
jmp
stc
mov
inc
ds
xchg
scas
arpl
loop
jns
imul
push
stos
movsl
pushf
cli
and
adc
clc
inc
mov
xor
add
or
mov
cmpsl
fimull
or
xor
clc
xor
pop
jl
cltd
inc
fcmove
inc
sbb
push
or
into
and
fldcw
jnp
lods
stos
mov
mov
or
lret
jle
std
fwait
repz
add
cli
stc
and
sbb
xchg
pop
add
mov
jno
in
mov
jg
data16
adc
add
stos
rcrb
rclb
jns
scas
add
shrl
mov
out
push
iret
ret
sbb
cmp
rcll
jg
add
stos
sti
add
nop
xchg
adcl
iret
fnsave
mov
add
push
jno
xchg
scas
fstp
dec
mov
fistps
in
xchg
cmp
out
cltd
sahf
clc
xchg
clc
jbe
push
aam
dec
dec
insl
pop
dec
test
idiv
daa
cli
cmpsl
pop
lea
jecxz
sbb
mov
leave
out
jbe
out
cmpsl
rorb
stc
inc
roll
push
push
lea
sarb
push
add
jle
enter
outsl
jnp
sbb
lock
fs
loop
push
mov
in
cltd
scas
int3
lret
shlb
mul
push
cmp
leave
jno
in
pop
xchg
sarb
in
in
test
sti
sbb
imul
pop
out
sub
mov
inc
test
inc
das
ds
dec
enter
xchg
xor
mov
sub
jecxz
ss
mov
sti
dec
fmuls
rcrl
mov
or
xlat
pop
pop
xchg
pop
fidivrl
or
jl
jecxz
dec
pop
stc
ss
mov
fcompl
out
cmp
mov
mov
cmp
add
dec
test
es
dec
fs
test
lret
jne
aas
mov
mov
dec
push
lods
mov
or
and
and
test
lcall
push
cmc
mov
xchg
fistps
std
mov
rorl
adc
stos
push
cltd
mov
inc
inc
xlat
mov
fdivs
pop
xchg
sub
mov
mull
sahf
dec
lahf
inc
add
inc
cltd
cltd
or
test
xchg
scas
or
icebp
pop
mov
mov
ds
adc
jae
jmp
test
leave
loope
pop
jb
push
rcl
scas
pusha
mov
lret
xchg
add
into
enter
pop
aam
cmpsl
xchg
loope
sub
mov
xchg
mov
jne
test
fidivl
movsb
jg
lock
adcl
mov
and
outsl
andl
bound
into
push
xchg
js
push
push
fucomip
and
xlat
fists
and
or
mov
add
in
icebp
mov
xor
loopne
outsb
bndstx
lret
shrb
push
notb
jg
inc
mov
pushf
add
xchg
pop
loop
mov
mov
les
iret
cli
mov
jge
lcall
arpl
sahf
push
mov
pusha
pop
xchg
fcompl
icebp
xor
xor
pop
repz
popf
cmpsl
stc
cmc
jp
lret
adc
popf
mov
fdivs
fldt
xor
dec
cmpsb
ja
cmp
sbb
pop
dec
push
dec
in
jno
ss
cwtl
insb
jle
imull
inc
mov
lahf
fbstp
daa
mov
fnstcw
xor
loope
in
fstpl
repz
movlps
cmpsb
mov
js
or
xchg
jecxz
in
sbbl
shll
das
or
mov
in
mov
dec
pop
lret
inc
pusha
mov
mov
sub
repnz
pop
adc
push
loope
sbb
mov
dec
add
or
jmp
shlb
mov
les
jg
mov
inc
fsubr
inc
pop
sbb
test
lret
int3
mov
loopne
pop
insb
cmp
xchg
add
out
out
xchg
test
aas
xlat
xchg
out
dec
or
dec
movsl
sbb
out
es
dec
mov
les
sti
in
sub
cmp
and
mov
mov
adc
ljmp
jno
cltd
lret
jecxz
in
fs
stos
adcl
jge
sbb
or
add
pushf
xorb
adc
repnz
mov
lock
fdivrs
jae
and
pop
scas
pop
fimull
jp
rolb
add
out
test
mov
add
fisubs
push
xchg
aad
insb
outsl
loope
fsts
xchg
lds
jo
push
pop
sarl
jns
inc
fxam
jnp
jmp
add
mov
push
jo
sbbb
or
mov
sbb
mov
xchg
test
fiadds
jbe
push
push
push
das
vpavgb
lahf
or
daa
test
mov
push
xor
loope
cmpsl
loop
incb
test
dec
loop
mov
scas
popa
xor
stc
or
fs
inc
fisttps
pop
push
andb
xor
mov
mov
mov
nop
rorl
insb
mov
jmp
inc
push
aaa
cmp
les
ljmp
and
fistps
mov
dec
inc
int3
xchg
inc
icebp
in
lret
ss
addr16
inc
shl
inc
int3
popa
ja
mov
cmp
xchg
xchg
in
notb
pop
push
sbb
xor
out
sbb
lods
mov
push
lret
nop
jmp
mov
lock
movlps
pop
data16
sub
cs
pop
popf
neg
aad
jne
and
ficomps
leave
xchg
cld
insl
pop
das
cmp
xchg
lods
inc
scas
loope
repz
sti
aas
jle
xor
inc
nop
int3
popa
sarl
fcomps
stos
sbb
inc
and
inc
cmp
movsb
out
insb
push
add
sub
mov
xor
xor
xlat
xlat
xchg
mov
aad
pop
xor
mov
sub
repz
dec
decb
xor
push
dec
iret
inc
or
imul
sahf
out
jl
sarb
cs
loopne
add
pop
sbb
scas
mov
test
add
mov
insb
cmp
push
out
push
jne
fmull
into
inc
mov
sub
into
sbbl
sbb
in
xchg
or
dec
out
or
aaa
mov
dec
cmp
ljmp
or
pop
sub
cmp
bound
enter
lcall
and
stos
aas
pop
jl
jg
out
fpatan
out
mov
loopne
mov
mov
jne
outsl
dec
loopne
adc
jle
outsb
rorl
inc
jns
sbb
cltd
ds
in
shrl
mov
push
outsb
add
nopl
sub
ret
mov
mov
mov
jns
dec
mov
pop
mov
or
aam
movsl
and
mov
fucom
or
fs
dec
xchg
mov
or
test
xchg
sub
and
fstl
mulb
add
jbe
pushf
stos
push
js
test
jae
cld
lods
add
xchg
ret
sub
stos
push
cli
test
mov
mov
test
cmpsl
jg
push
es
in
test
inc
jg
ss
push
push
push
sub
test
jp
subb
mov
loope
dec
outsb
test
mov
dec
push
inc
jmp
fldcw
xor
mov
adcb
out
push
jmp
push
lret
pop
add
pop
out
fwait
in
and
fldenv
add
ret
mov
xchg
mov
sarb
sub
scas
cmp
lock
shlb
outsl
loop
add
test
mov
mov
xchg
arpl
pop
out
aaa
jne
jo
sbb
stos
mov
adc
jge
jbe
mov
imulb
shrb
aaa
pop
jb
and
sub
mov
in
jge
ss
or
je
leave
add
ljmp
mov
push
call
sbb
dec
pop
sbb
je
push
xchg
les
jbe
pop
and
es
loope
loop
daa
sub
shrl
cld
xchg
insb
inc
fldcw
or
xor
imul
repz
adc
into
pop
movsb
leave
fwait
push
or
nop
sub
and
xchg
popa
cltd
hlt
push
sarl
dec
dec
or
mov
adc
mov
fs
scas
fdivl
ficoml
xor
cli
mov
iret
outsl
push
push
mov
xor
add
add
nop
sbb
pavgb
test
dec
cmp
cmpsl
jle
cli
fimuls
adc
jmp
jecxz
int3
xchg
fsub
test
imul
out
and
sub
jbe
sub
push
repnz
mov
mov
test
adc
ret
or
popa
mov
lcall
and
jo
mov
mov
aaa
push
fwait
xchg
out
loope
insb
std
sarl
test
xchg
sub
dec
test
cwtl
hlt
icebp
insb
mov
or
iret
sahf
repz
gs
jecxz
stos
sti
pmullw
fs
mov
and
mov
ljmp
and
push
gs
mov
sub
arpl
jne
outsl
inc
xchg
xlat
scas
test
dec
mov
inc
or
adc
clc
stc
nop
sub
out
stos
or
inc
insl
xor
lahf
jno
cltd
sub
rcrb
mov
loopne
movsb
out
sbb
idivb
sub
sbb
and
sbb
popa
bound
out
enter
mov
xchg
sub
fpatan
outsb
iret
mov
mov
adc
mov
loop
xor
test
pop
lods
fwait
cmp
inc
rorb
cld
or
outsl
or
shl
mov
shrl
sub
int3
loopne
ja
jb
add
popa
inc
pop
cmp
mov
xchg
mov
cmp
and
push
mov
jmp
jb
fnstenv
lret
push
loop
out
fstpt
fdiv
outsl
mov
mov
jne
ja
pop
jle
cmp
mov
sub
xor
clc
cmp
cmp
in
dec
aam
cmp
lea
jnp
fldcw
insl
fnstsw
outsl
shll
sbb
pop
and
loop
dec
inc
in
push
pushf
in
mov
and
xor
add
mov
shlb
mov
mov
test
int
add
out
xchg
cmp
fisubrl
inc
inc
stos
xor
and
subl
aaa
adc
inc
inc
test
push
shlb
pop
cmp
xchg
jns
dec
rcrb
ret
adc
pop
cltd
in
mov
ja
fs
push
or
data16
scas
adc
dec
rorl
jecxz
adc
sub
add
pop
stos
dec
mov
pop
into
cmp
xor
jp
data16
push
lret
sti
aad
out
popa
mov
out
cltd
cld
orb
js
or
aas
mov
mov
pop
test
mov
outsl
mov
xchg
mov
test
ss
jno
push
jns
fcoms
scas
or
jnp
pop
xlat
lods
cmpsl
sbb
jle
aaa
daa
jg
adc
ja
xor
nop
pop
out
xchg
inc
inc
adc
scas
shlb
stc
jno
daa
mov
shrb
inc
jecxz
out
xor
scas
xor
push
push
aas
imull
mov
add
rcl
insl
rcrl
nop
xchg
rorl
loopne
jbe
test
jge
dec
scas
cmc
inc
sbb
test
add
adc
stc
popf
pop
sarl
aam
sub
gs
loopne
adc
mov
add
jne
aas
mov
insl
or
inc
sbbb
pop
cwtl
cmp
mov
mov
aad
push
push
imul
in
fisttpll
mov
and
or
popf
lcall
cmp
pop
enter
cltd
pop
xlat
pop
loope
sub
pushf
insl
or
jns
dec
add
add
in
xlat
adc
push
or
dec
pop
jbe
cmp
dec
mov
je
xor
rcrl
pop
xchg
lds
sbb
sbb
dec
scas
dec
mov
jbe
cmp
in
ret
inc
lea
mov
fldl
adc
in
testl
or
sbb
test
push
lods
fsts
fwait
aas
mov
lret
dec
les
jg
outsb
pop
lods
pop
cltd
add
dec
cmp
add
mov
push
lret
ds
out
dec
stos
iret
add
rcrb
mov
repz
test
cmpsl
bound
sub
cmc
sub
inc
or
sbb
jge
mov
nop
outsb
and
ret
inc
scas
mov
loop
bnd
bound
outsl
mov
mov
repnz
imul
adc
jnp
popa
fmul
movsl
test
loop
dec
pop
mov
in
ja
and
adc
dec
sbbb
pop
xlat
outsb
mov
jg
dec
imul
lcall
mov
dec
pusha
pop
fimuls
fisubrs
jbe
mov
cmpl
decb
outsb
repnz
iret
sahf
pop
int3
outsb
and
jnp
pop
push
mov
insb
fidivs
mov
sub
lcall
outsl
mov
sub
cmp
stc
xchg
mov
add
daa
push
fsubrp
or
je
aas
clc
add
jg
ret
lods
test
sbb
test
outsl
into
stos
in
pop
dec
jl
lock
dec
cs
testb
movsb
xchg
or
jle
fstps
push
push
popf
pushf
sbb
into
adc
push
in
ja
mov
fsubrs
sbb
mov
subb
cs
xor
xchg
or
dec
sti
in
push
inc
jnp
pushf
lods
lock
jecxz
sub
lods
push
dec
pop
cmp
sbb
ds
cmpsb
lahf
ljmp
pusha
inc
iret
fxch
jae
insl
lods
or
mov
mov
aas
jmp
test
pop
mov
xlat
lds
movsb
xchg
adc
ja
push
movsl
and
shr
scas
mov
add
repnz
sub
outsl
pop
cltd
std
aam
mov
ret
mov
push
insl
and
outsb
out
imul
inc
in
into
inc
sbb
inc
push
je
mov
lds
or
or
cmp
inc
pop
cmp
pop
out
loope
mov
mov
push
repz
and
pop
outsb
sbb
mov
pop
mov
pop
mov
cs
xor
decl
or
add
mov
sbb
adcb
mov
inc
push
xor
jno
andb
inc
mov
xchg
xchg
decl
fs
lret
mov
sbb
and
inc
inc
mov
xchg
mov
sbb
xor
imul
arpl
mov
insb
jae
scas
bound
fildll
mov
fisubrs
adc
shlb
rolb
scas
dec
loope
out
xchg
adcb
test
pop
out
push
pop
lods
push
or
and
aaa
sub
adc
lcall
push
repz
leave
sub
rcl
cli
icebp
iret
cli
jecxz
add
push
daa
or
sbb
inc
sub
icebp
lea
mov
mov
sub
in
sbb
in
insl
les
rolb
decb
aas
sbb
test
mov
pop
push
cli
je
sub
add
pop
cmp
mov
sarl
jg
das
xor
cltd
sub
mov
jg
shll
push
stos
shlb
add
addb
xchg
mov
stc
nop
fdivrs
lcall
hlt
push
pop
jb,pt
xchg
enter
out
push
jne
sub
sub
or
movsl
out
daa
pop
loop
cwtl
hlt
mov
aas
jmp
adc
xor
fwait
in
xor
adc
and
hlt
notrack
pop
inc
mov
mov
pop
and
lret
ja
rcrb
mov
or
pop
xor
jne
dec
hlt
cmp
xor
sbb
adc
aad
jo
xor
mov
push
fmulp
fxch
push
pop
push
in
int3
hlt
daa
leave
pop
jg
stc
push
movsb
mov
pop
dec
sub
cwtl
das
jno
jp
jns
sub
inc
push
popf
cmp
and
lret
jl
pop
sub
adc
inc
mull
movsl
inc
decb
mov
fucomp
push
add
push
xor
jg
outsl
bound
into
pop
xor
dec
sti
jecxz
shrl
pushf
scas
add
fwait
mov
fldpi
mov
sbb
lret
mov
xor
cmp
push
shld
push
insb
bound
rcr
add
shrl
push
sbb
adcl
and
xchg
push
xchg
es
inc
and
push
js
outsb
addr16
call
dec
and
iret
data16
cmp
je
inc
mov
lret
jnp
cmp
push
imul
mov
adc
jecxz
and
cmpsb
dec
rcll
fwait
hlt
nop
xchg
in
orl
scas
sahf
shll
dec
pop
dec
es
gs
aad
fimull
aas
push
js
dec
pusha
mov
lds
pop
or
int
fmulp
add
push
popf
je
push
fildl
adc
or
dec
dec
andl
rcl
out
add
inc
loop
leave
xchg
addr16
inc
out
rorl
push
cltd
mov
xlat
in
rolb
push
insl
mov
movsb
popf
repz
stos
arpl
adc
outsb
xchg
jle
mov
cmc
or
aam
dec
jecxz
aaa
pusha
stos
stc
xchg
out
xchg
loopne
mov
adc
mov
pushf
jno
out
pop
sbb
cmp
outsl
iret
gs
cmp
fisubs
and
push
mov
repz
xor
adc
and
cmpsl
lret
enter
shr
cmp
je
cmpsb
dec
jp
mov
add
subl
into
movsb
cwtl
dec
dec
mov
out
jle
pop
inc
sub
lcall
push
sub
and
pop
lret
xor
das
or
mov
xchg
jl
pop
bound
aam
std
xchg
xorl
mov
insl
sbb
mov
lock
cmp
ja
jmp
bnd
sbb
mov
lds
dec
aad
stc
fmull
cld
std
sbb
sbb
add
dec
cmp
shl
or
jmp
push
sub
inc
shrb
std
lahf
fidivl
inc
into
mov
arpl
scas
lock
test
jbe
scas
jno
adc
sbb
cmp
jmp
jb
jl
outsl
sbb
cmp
adcb
sub
iret
pop
pop
call
sub
inc
addb
lods
mov
mov
jle
and
or
xor
stos
dec
pop
in
push
sub
mov
sub
add
cmpsb
cmp
xlat
es
jbe
cmpsl
sbb
push
jo
imul
sbb
jge
loope
or
imul
xchg
dec
xchg
stos
mov
inc
out
adc
arpl
cmpsl
adc
faddl
mov
cmp
sarl
adc
insb
mov
add
mov
pop
sbb
sti
inc
jg
mov
loopne
mov
out
ss
test
lea
add
es
sbb
nop
dec
xchg
add
cmp
adc
nop
cmp
sbb
hlt
pushf
xchg
sub
in
out
adcl
inc
fmulp
xchg
push
mov
in
lods
loop
dec
cmc
dec
jnp
addr16
sub
aad
push
loop,pn
push
mov
std
rcl
repnz
add
mov
fistpll
mov
or
pop
out
lods
pop
push
aam
iret
addr16
cmc
sbb
cmp
lret
add
gs
aaa
push
add
in
sub
lahf
loope
pop
push
loop
mov
jmp
jg
std
cmp
cmpsb
sete
pxor
mov
sbb
adc
out
jg
repz
hlt
cmp
xchg
out
test
lret
mov
lahf
push
cmp
leave
ret
sbb
fists
mov
xor
ficoms
mov
test
arpl
addr16
fnstenv
aas
push
stos
int3
fcomps
and
lahf
or
mov
or
insl
xchg
sub
jg
sahf
mov
push
cmp
popa
mov
push
leave
mov
jns
mov
or
jo
sbb
bound
jne
mov
sbb
inc
mov
cmc
mov
dec
pop
push
and
add
stos
xor
jb
adc
pop
lock
xchg
mov
pop
js
adc
pop
insb
pushl
ss
add
ds
mov
test
lret
xor
jns
xor
popf
lcall
or
jecxz
pop
cmp
xor
roll
jb
dec
aaa
cmpsl
es
adc
push
sbb
shrl
pusha
int3
fs
or
loope
stos
dec
fwait
mov
push
mov
fcomp
into
mov
fldt
or
cmpsb
inc
fdiv
or
mov
out
out
pop
jno
lret
hlt
mov
shl
iret
sub
xchg
sbb
repz
cmp
xchg
inc
mov
in
pop
jp
jle
pop
push
in
scas
sub
or
cmpsl
xchg
pop
fsts
mov
out
xchg
jg
loop
fs
push
js
dec
xchg
xor
inc
push
sbb
inc
into
mov
shlx
add
cltd
imul
mov
in
cmpsb
cmp
daa
pop
aam
lret
push
xchg
pop
in
mov
cmc
mov
pop
and
pop
mov
cmp
mov
out
rolb
jae
out
notb
or
adc
and
mov
das
into
jmp
rcll
mov
insl
mov
mov
sarl
or
ret
fbstp
jge
mov
inc
addl
jo
pop
es
call
sub
mov
test
mov
pop
scas
mov
popf
mov
ret
adcb
pop
out
fxch
xor
out
lea
lea
jle
rorl
xchg
pop
and
fwait
scas
push
push
fwait
mov
mov
arpl
mov
scas
ljmp
push
fnsave
test
fucomip
mov
xchg
sub
jmp
add
imul
addr16
stos
xchg
xor
adc
xchg
adc
jno
outsl
push
imul
jecxz
pop
mov
adc
aam
mov
cltd
arpl
imul
cli
arpl
fisttpll
jecxz
inc
enter
les
and
add
sbb
sbb
or
imul
cmp
adc
pop
jmp
cmpl
imul
aam
test
pextrw
mov
hlt
jno
or
or
in
xorl
mov
inc
repz
xor
leave
enter
insl
push
out
add
pusha
jmp
or
jg
add
stos
sbb
push
outsl
add
lea
add
adc
push
stos
dec
aaa
negb
lea
inc
in
das
ror
int
arpl
jno
or
jne
clc
jmp
inc
jo
bound
subl
fstps
cld
sbb
mov
mul
inc
sbb
out
jge
cld
dec
out
test
adc
xchg
or
add
xchg
in
push
push
mov
push
inc
div
lds
sub
adc
push
and
jmp
sti
mov
mov
xchg
fdivs
xor
dec
sbb
cmpsl
inc
out
in
sbb
out
je
mov
xchg
test
adc
cmp
or
push
adc
cmpsb
cmp
dec
bound
inc
cmp
inc
in
or
mov
call
mov
or
mov
aad
push
stc
sub
pop
imul
test
dec
cmp
xchg
xor
movb
hlt
ljmp
cmp
fnsave
loopne
lret
inc
mov
xchg
and
jecxz
shl
ss
add
cs
inc
pop
push
movl
adc
test
test
nop
pop
adc
imul
lock
and
xchg
mov
fsubrs
aad
ljmp
mov
sbb
lds
rol
je
xor
fists
data16
jl
insl
int3
cmp
mov
rorl
lods
push
pop
mov
sarb
aad
sub
in
mov
aad
mov
sub
inc
and
push
jno
aad
jge
das
js
cmp
nop
push
je
cli
in
pop
lret
sbb
xor
lcall
and
mov
jbe
outsl
addb
adc
mov
push
out
les
lret
hlt
sbb
sbb
ret
sub
sub
mov
jno
sbb
pop
adc
mov
loopne
js
jp
int3
xor
mov
imul
mov
jnp
lock
mov
add
xor
xchg
call
aaa
xchg
sbb
push
adc
and
std
inc
test
xchg
xor
dec
popf
int
xchg
jmp
mov
dec
inc
jg
add
dec
xor
xchg
aas
inc
mov
cwtl
cwtl
xorl
jnp
sbb
roll
pop
sub
aas
fmuls
ds
cmp
push
shr
ficomps
dec
cmp
ja
push
test
pop
das
mov
sti
scas
aaa
jae
rcrb
xchg
add
lret
arpl
out
inc
mov
jge
popa
jbe
test
sub
mov
movsb
jb
orb
inc
adc
dec
lret
int3
sbb
ror
cltd
sbb
imul
sbb
pop
sti
and
or
dec
mov
jge
xchg
sub
inc
dec
loope
pop
popf
insb
int3
xor
jne
mull
das
inc
lods
stos
xchg
outsb
jp
jns
out
and
sub
sbb
and
pop
pop
out
call
jmp
cmp
push
jecxz
inc
popf
fdivr
jg
lret
fcomip
mov
daa
lcall
push
adc
add
nop
adc
divb
enter
sub
aam
cmp
mov
es
dec
pop
jbe
lret
sub
sbb
push
loope
xchg
loopne
or
jae
stos
push
mov
shld
inc
popf
mov
pop
rol
rcll
rcrb
mov
jnp
mov
xchg
imul
mov
nop/reserved
cmc
lods
jb
and
fs
mov
inc
stos
loopne
out
int
fadds
pop
hlt
and
or
in
add
mov
mov
fisubrs
inc
pop
add
adc
in
aad
mov
repz
lret
cmc
add
mov
xchg
lcall
lea
and
fdivrp
test
or
sti
xchg
inc
mov
fldenv
test
insb
cmp
push
dec
out
dec
out
pop
sbb
movsl
dec
out
pop
mov
shrd
sbb
mov
fisttpll
mov
mov
pushf
xor
push
scas
mov
xrelease
fimull
xchg
mov
fdivl
adc
nop
mov
mov
pop
sahf
insb
adc
jae
es
xchg
repz
popa
jg
int3
fs
xchg
lea
pop
popl
movsl
push
fnstcw
xor
jge
sbb
sarb
mov
out
and
jge
shl
mov
notl
or
mov
or
sbb
fnstcw
lods
lds
xchg
fcmovnb
sub
cmp
push
sahf
and
and
std
push
outsb
das
mov
int3
mov
pop
imul
outsb
pop
mov
out
add
pop
push
cwtl
nop
inc
fsubs
loopne
das
mov
mov
jg
lahf
int3
arpl
ds
hlt
in
inc
outsl
iret
inc
add
cmpsl
inc
frstor
cmp
daa
cmp
lods
cmpsb
dec
mov
dec
adc
cltd
sbbl
inc
adc
mov
dec
and
stc
inc
mov
mov
xchg
xor
xchg
stos
nop
enter
add
jno
mov
into
faddl
stc
mov
mov
mov
push
jo
mov
clc
adc
sbb
movsl
mov
and
fwait
dec
lock
or
dec
ds
inc
fcmovnbe
aam
or
cli
jns
ljmp
push
jmp
add
bound
test
or
negl
sub
loopne
cli
dec
fildll
inc
stos
sbbb
shrl
sub
lahf
push
adc
mov
jle
inc
and
or
cmpsl
push
lods
mov
repnz
out
aad
and
insb
clc
jo
sub
aaa
aaa
mov
aaa
out
sbbl
jl
mov
and
push
xor
push
test
sbb
mov
scas
sub
icebp
notl
or
pushf
dec
dec
cmc
sub
cltd
push
xchg
subl
lcall
cli
sub
out
cmovnp
leave
pusha
mov
cltd
push
inc
in
jmp
lcall
lods
lods
shr
mov
xchg
adc
arpl
mov
push
mov
fnsave
sub
pop
xchg
xlat
sub
or
lret
hlt
mov
mov
loop
loope
mov
call
cmp
sbb
mov
push
lods
mov
inc
push
scas
nop
push
aam
mov
push
sub
or
nop
outsl
sbb
dec
es
test
sahf
and
ret
inc
push
xor
and
sub
adc
mov
shrb
add
add
mov
jae
inc
cmp
push
adc
fwait
testl
addl
popa
jnp
insl
ds
xchg
and
and
adc
mov
push
rcrl
lcall
ficoml
es
cmp
outsl
add
or
std
or
sbb
shlb
insl
test
mov
sub
cs
mov
sarl
xor
inc
mov
andb
jle
mov
rolb
jbe
inc
fcmovnu
dec
sahf
bound
bound
mov
or
xchg
mov
push
or
or
pusha
mov
jl
popl
jecxz
jo
popf
insl
mov
sub
dec
mov
aas
out
cmp
or
cltd
sbb
mov
popa
andl
clc
mov
daa
cltd
mov
fiaddl
or
ret
or
push
xlat
sti
aam
adc
adc
mov
stos
inc
pop
push
cmp
cli
enter
aaa
push
inc
test
sub
xchg
popa
add
rol
and
addr16
cmp
jecxz
mov
xchg
pop
insb
enter
mov
sbb
rcll
mov
pop
sub
pop
dec
fcomps
mov
cmpsb
addb
inc
in
shrl
scas
mov
repnz
push
stos
jecxz
inc
mov
mov
data16
jnp
shll
and
sub
adc
push
push
push
in
int
or
push
xchg
mov
push
adc
mov
adc
jmp
sbb
bswap
add
mov
rcrl
jge
sbb
pusha
leave
mov
lret
iret
std
cwtl
jle
xor
outsb
int3
fisubs
iret
pop
adc
loope
mov
imul
mov
pop
rcrb
pop
jle,pn
fwait
push
leave
inc
mov
pop
sub
add
xor
arpl
or
xor
out
push
data16
xchg
push
ljmp
jo
shll
pop
pop
cmp
cs
mov
arpl
jecxz
aad
pop
pop
add
inc
mov
push
jp
popf
cmp
loope
inc
inc
mov
dec
fcmove
popa
sub
mov
loopne
ret
cmp
xor
mov
pop
xor
jb
cmc
xor
push
outsl
and
jae
repnz
repnz
push
or
jb
bound
push
mov
js
int3
call
xor
lret
xchg
insb
cmpsb
mov
pop
imul
loope
mov
mov
shrl
pop
out
inc
loope
xchg
hlt
xchg
cmp
cmp
xor
push
hlt
or
dec
in
in
xor
and
xchg
xor
sub
mov
cld
xchg
je
movsb
cltd
sahf
jno
fnstcw
roll
es
out
or
jbe
inc
add
mov
push
iret
pop
jae
lcall
addb
xchg
mov
add
jae
jg
cmp
imul
cli
cld
jmp
mov
loopne
inc
in
sub
inc
xor
push
lods
jg
inc
adc
stos
sbb
mov
fld
mov
fwait
mov
push
dec
cld
pushf
pop
insb
xchg
add
pminsw
inc
cmp
mov
loopne
testb
lret
stos
es
mov
mov
loopne
dec
jecxz
xchg
and
in
aad
adc
push
or
popl
push
repnz
mov
lds
in
xor
andl
push
mov
jecxz
gs
aad
jecxz
lock
stos
sti
les
rcll
fistpl
mov
bound
xor
adc
insb
jecxz
pusha
jp
fwait
into
aas
clc
mov
jno
push
push
push
push
mov
imul
jmp
addl
cmpsb
inc
ja
and
adc
int
jno
and
cmpsb
out
ja
pop
xor
add
mulb
pusha
sbb
dec
loop
imulb
add
fistpll
mov
mov
js
cwtl
in
jnp
push
cmc
add
fs
xchg
jmp
and
psubb
mov
jbe
sub
les
pop
addr16
xor
lods
cmp
push
add
addr16
je
cmp
out
mov
rolb
cmp
aaa
call
daa
dec
or
cmp
xor
gs
into
jmp
push
mov
push
push
inc
fists
inc
ficompl
aad
cmp
in
mov
inc
enter
lret
movsb
jne
cs
rsm
cld
cld
pushf
cli
in
sub
inc
cmp
outsb
xchg
cmp
js
testl
and
movsl
mov
stos
ja
and
notb
dec
lcall
xor
pop
ret
and
mov
jmp
fstpt
dec
repz
dec
repnz
mov
test
mov
mov
insl
and
cmp
add
inc
iret
push
cmp
mov
insl
leave
fisttps
hlt
js
push
rcll
out
push
xchg
in
in
mov
jge
sahf
mov
inc
push
mov
sahf
and
sbb
test
adc
xchg
repz
mov
jnp
cs
in
lods
pop
icebp
ja
sub
pop
lcall
pusha
call
inc
ficompl
dec
push
push
lcall
cwtl
push
out
jmp
lret
in
lock
outsb
scas
nop
mov
in
test
div
inc
out
xchg
fistps
inc
repnz
xchg
sbb
dec
cmpsb
jecxz
loopne
les
mov
jp
addb
pop
test
mov
lock
lods
and
push
loop
inc
cmc
pop
jmp
jns
mov
pop
in
cmp
xor
div
mov
data16
ds
enter
push
loope
lcall
jecxz
push
iret
in
push
adc
pusha
mov
out
xor
sbb
inc
ret
jae
jle
aam
pop
jne
ret
std
dec
pop
jo
ss
dec
dec
pop
clc
xchg
push
jle
pop
mov
sbb
pop
loopne
out
ds
std
inc
neg
std
test
jecxz
xchg
push
pop
mov
and
cld
into
mov
push
nopl
fdivp
inc
xchg
popa
ja
xchg
into
gs
pushf
cmp
cwtl
push
pop
out
cmp
lea
cwtl
jmp
fidivrs
pop
push
or
mov
mov
fwait
pop
jmp
or
ret
mov
add
cmpsl
imulb
cmp
loop
insb
pop
add
stos
shll
xchg
xchg
jo
js
lahf
sbb
in
jne
aam
jmp
or
jo
out
ficoml
adc
aaa
scas
pop
outsl
fdiv
mov
int
test
aad
out
test
les
call
mov
and
out
in
addr16
cmp
mov
pop
sub
dec
push
lcall
inc
mov
cmp
aad
push
adc
or
outsb
test
rcrl
mov
mov
inc
loopne
adc
movsb
add
ds
les
dec
lcall
inc
lds
pusha
loop
movsb
push
or
jmp
lcall
in
mov
aas
and
and
out
jg
xchg
inc
call
call
cmp
iret
data16
nop
mov
aad
fcompl
jge
cmp
pop
inc
push
lcall
shll
mov
ret
ret
orl
in
gs
pop
aam
pop
in
incl
mov
or
cmpsb
insl
sub
pushf
shr
das
repz
shll
cwtl
test
mov
lock
fimull
pop
setp
rclb
movsb
dec
push
inc
dec
xchg
push
les
daa
sti
in
fucomp
out
or
push
xor
sbb
lea
push
xchg
cld
subl
lcall
inc
cmp
xor
cmp
jns
xchg
and
iret
or
aas
nop
sbb
mov
cli
pushf
addr16
xor
ljmp
popf
inc
pop
xchg
sbb
outsb
pop
ret
ret
xchg
xchg
or
enter
push
icebp
sbb
sbb
mov
mov
sub
adc
sbb
mov
sti
imul
call
nop
out
mov
and
insb
rorl
inc
out
fcoml
lods
adc
cmpb
sub
enter
es
adc
or
je
orl
popf
shll
les
inc
cltd
adc
jecxz
sbb
inc
call
out
mov
in
mov
inc
pop
lea
lock
jno
test
sub
ss
mov
sti
fwait
in
add
cld
test
jmp
pusha
das
mov
push
xor
int3
mov
je
lods
xchg
jae
adc
adc
mov
jo
inc
stos
pop
mov
xchg
pop
fstps
cmp
cli
inc
es
movsb
rorl
or
xchg
out
xchg
cmp
lea
push
call
and
outsb
sbb
push
std
or
aaa
ret
fadds
rorl
pop
je
into
xor
test
imul
daa
push
lcall
pop
imul
fidivrl
pusha
sbb
push
xor
ss
inc
pop
xor
or
push
inc
inc
fsubp
cmp
lcall
pop
mov
and
sahf
cltd
xor
scas
pop
addr16
inc
pop
mov
xchg
leave
push
daa
ja
fsubs
negl
xor
mov
pop
outsb
jb
mov
popa
je
lret
xchg
test
arpl
int
xor
sub
push
enter
outsb
push
mov
sbb
dec
adc
cmpsl
mov
jle
mov
pushf
fdivr
out
subl
fidivrl
or
test
jmp
sub
arpl
test
je
xor
outsl
cmpsl
mov
mov
pop
mov
sbb
jb
out
jno
mov
mov
movsl
mov
jbe
fiadds
dec
lret
and
lea
sbb
mov
add
mov
rolb
in
xor
popa
xchg
jnp
sbb
into
mov
adcl
mov
imul
inc
ss
xchg
cmp
push
outsb
mov
subl
lcall
mov
cmc
dec
and
das
fwait
lret
rcrl
pop
punpcklwd
mov
jo
mov
mov
mov
xchg
inc
ficompl
es
add
xor
lods
mov
or
bound
mov
mov
inc
xlat
mov
jnp
aaa
into
mov
nop
shlb
pop
or
ret
test
mov
xchg
pop
addr16
or
loope
sbb
orl
xor
aas
fisttps
cmp
push
jg
ret
add
insb
adc
mov
xchg
mov
rcrl
jge
loopne
sbb
fistl
mov
cld
iret
mov
push
dec
mov
aam
adc
mov
mov
arpl
out
add
fucom
cmp
adc
test
push
xchg
sub
jl
pop
xchg
gs
xchg
and
subl
pop
xchg
mov
mov
mov
ror
push
mov
inc
pop
jae
jp
daa
xchg
jecxz
dec
inc
test
sbb
stos
inc
adc
dec
jmp
jb
mov
lret
popw
pop
mov
pop
negb
sbb
or
sbb
mov
ret
push
shr
pop
sub
loop
add
lcall
sbb
fs
les
cmp
adcl
hlt
js
out
mov
lcall
dec
lods
in
test
out
mov
test
xor
outsl
aaa
lret
ret
xchg
pop
push
in
push
out
pop
lcall
cwtl
cmp
mov
sbb
cmc
ja
dec
xchg
lods
inc
jl
mov
xor
lret
sub
xchg
out
loopne
or
jecxz
push
ja
in
cbtw
jmp
mov
and
rcl
adc
xchg
mov
shrl
mov
stc
mov
mov
cmovo
adc
pop
push
ja
mov
dec
adc
hlt
popa
test
iret
addr16
fsubrs
xchg
je
ror
into
mov
mov
popf
push
mov
cmpsb
leave
roll
adc
xor
push
sub
or
cmc
dec
ljmp
mov
in
test
call
flds
or
aam
bound
dec
push
or
sub
daa
shll
sub
and
dec
jno
jo
gs
nop
mov
sti
mulb
arpl
fcoml
inc
fiadds
mov
jge
popf
mov
cld
sbb
cmp
jg
jno
call
lods
pop
scas
dec
jnp
sbb
movsb
pop
out
je
inc
lods
and
push
push
fstp
shlb
bound
cmp
adc
push
mov
xchg
das
outsl
mulb
lahf
xor
and
cmpsb
pushf
jge
xchg
jp
mov
pop
cmp
mov
addr16
and
push
fnsave
dec
push
fstpt
cmpsb
inc
push
push
cmpl
lods
in
mov
dec
cltd
xor
add
jae
xor
add
clc
fnstsw
adc
xchg
ds
sub
test
push
scas
xchg
adcb
orb
mov
ret
movsb
mov
cmp
pop
in
stos
rcr
push
sahf
pushf
pop
fsubl
cmp
xor
repnz
jge
pop
pop
jmp
dec
lcall
push
mov
pop
in
pop
mov
jl
pop
lods
mov
ss
push
dec
ds
scas
call
test
push
mov
imul
jmp
inc
pop
icebp
daa
data16
enter
lret
xlat
movsb
arpl
xor
ficoms
pop
movsb
mov
nop
and
sti
pushf
xor
push
aas
adc
inc
cli
pushf
inc
es
or
mov
les
int3
xor
dec
sbb
bndldx
pushf
ret
pop
into
call
loop
pop
inc
pop
jecxz
in
pushf
jno
push
loope
outsb
jp
jecxz
decl
in
jge
mov
adc
cmp
sbb
fstpt
addr16
sub
mov
ret
mov
adcb
add
fsubl
sub
pop
push
andb
repz
stos
pop
mov
pop
jge
jo
mov
stos
pop
or
ret
inc
xor
repnz
rclb
test
pop
scas
and
or
idivb
lret
push
mov
sub
imul
lcall
call
mov
popf
jle
mov
scas
mov
bound
stos
cltd
cmp
lods
mov
xor
cmc
popa
and
mov
mov
popa
rol
xchg
lret
adc
or
push
jae
test
bound
push
setle
cltd
sbb
pop
or
arpl
pop
sti
push
xor
push
insl
inc
add
xchg
loopne
cmp
int
mov
stos
inc
push
nop
sub
gs
push
loopne
sbb
lods
stos
xchg
sub
iret
dec
movsl
add
mov
test
ret
dec
test
adc
negb
movsl
xchg
lock
fwait
sbb
lods
add
pop
fucomip
nop
xchg
clc
cmpsl
jns
mov
xlat
mov
ljmp
cmpb
mov
push
mov
cwtl
pop
add
dec
mov
arpl
cltd
popl
cltd
sarb
adc
push
and
cmp
insb
add
hlt
popa
inc
mov
mov
pop
lahf
xor
push
and
push
mov
push
popf
mov
rolb
mov
shrl
mov
jne
jo
inc
in
mov
cmp
pop
sbb
fsubrl
or
add
ret
imulb
sub
scas
rcll
cmp
inc
mov
jl
and
adc
mov
int3
adc
lahf
adc
imul
mov
fstpt
out
inc
test
stos
inc
in
xlat
mov
push
in
mov
adc
inc
mov
je
sub
test
xchg
dec
rolb
les
fiadds
mov
mov
adc
lea
cli
aaa
fildll
rclb
add
je
jp
adcb
cmp
movsb
das
lds
fisubs
xchg
iret
stos
std
dec
sub
push
lret
repz
pop
cld
jg
stos
mov
in
test
pop
das
jno
push
test
mov
int
lods
jno
andb
jmp
rcll
xor
jae
sbb
adc
fiaddl
inc
push
int
mov
push
xor
jo
inc
rcl
inc
out
ljmp
cmpsl
cltd
push
push
mov
push
clc
push
push
inc
mov
insb
add
lahf
notl
or
std
add
sbbl
inc
cmpsl
sbb
and
sub
arpl
andl
out
into
sbb
jbe
inc
movsb
loopne
jecxz
aad
xchg
mov
dec
out
push
pop
fwait
or
cltd
lock
push
in
xorl
test
sbb
jno
add
cmc
sbb
cmp
lds
nop
test
inc
ret
daa
add
mov
dec
leave
cli
dec
dec
push
sub
add
shll
outsl
jo
ds
lahf
adc
mov
dec
addb
mov
dec
fimuls
mov
js
addl
fcmovbe
pop
xlat
jb
sub
or
jmp
out
adc
xlat
insl
add
in
adc
adc
lcall
insl
popa
adc
dec
xor
inc
cmpsb
jl
aaa
pop
rcrb
mov
fadds
add
xlat
pop
pop
pop
rorl
fisubs
pusha
clc
ret
scas
mov
dec
repz
aas
sti
xchg
in
mov
ret
and
dec
add
pop
repnz
idivb
ret
fwait
jle
sahf
test
pop
xor
mov
push
add
test
repz
mov
and
cwtl
stos
adc
and
or
clc
jl
add
sbb
popa
jg
inc
cmpsl
xchg
fs
mov
xchg
push
and
mov
movsl
mov
imul
repnz
mov
jb
mov
adc
add
cmp
popf
xchg
and
mov
stos
repnz
outsl
jns
push
out
pop
mov
sbb
shll
imul
addr16
pop
test
xor
int3
jg
pop
mov
cmp
popf
cmc
andb
pop
ret
and
into
xchg
out
clc
call
in
sub
sub
mov
pop
add
lods
mov
sbb
xor
ds
inc
mov
mov
subb
mov
adc
adc
lret
leave
and
cmpb
dec
xor
xchg
stos
jmp
pop
sti
sbb
std
fwait
fisubl
jbe
xchg
or
adc
cmp
les
mov
fs
mov
xor
ja
addr16
das
xchg
jge
lret
adc
not
in
call
xor
dec
xor
add
dec
adc
jbe
mov
xchg
pop
dec
pop
out
xlat
data16
mov
pop
aas
push
jecxz
popf
lcall
sbb
mov
jo
mov
outsb
stc
sti
or
inc
xchg
es
adcl
test
setl
mov
std
xor
push
and
pusha
xor
sub
push
scas
fcomps
fcmovb
lea
xor
adc
stos
jnp
and
std
rolb
jno
pop
cmp
lock
pop
call
dec
data16
xchg
pop
sub
pop
mov
dec
stos
inc
data16
jle
ljmp
xor
mov
popa
sub
das
jns
pushf
test
dec
mov
mov
stos
fnstcw
aad
imul
and
push
xchg
and
jp
push
fsubl
cmp
mov
lea
jle
movsl
push
and
jg
pop
clc
out
push
sub
ljmp
inc
cwtl
subl
icebp
jae
or
lods
fadd
jb
push
push
stos
mov
insb
mov
lahf
loopw
and
jns
add
xorl
sbb
mov
fmul
enter
mov
push
movsb
jne
cmpsb
cmp
gs
out
xchg
negl
jae
or
mov
inc
or
sub
outsl
outsb
inc
sbb
mov
add
subb
pop
sbb
ss
stc
fwait
add
push
adc
shll
imul
outsl
stc
xlat
jmp
push
adc
push
dec
mov
xchg
mov
aad
pop
or
mov
repnz
inc
pop
mov
pop
and
cmp
sub
push
repnz
insb
push
mov
outsb
sub
scas
xchg
xchg
test
push
aas
lea
sbb
and
mov
sti
stos
repz
jo
push
out
cs
xor
lahf
outsl
test
mov
sahf
xor
lock
out
dec
imul
outsl
test
push
ficoml
pop
stos
mov
js
xchg
aaa
push
adc
pop
sub
xchg
dec
xor
fcoms
addr16
push
xor
stos
pop
test
add
mov
or
test
cld
inc
push
cmpsb
pushf
scas
fisubrl
scas
out
fisubrl
mov
hlt
sti
jne
sub
mov
pavgw
mov
test
mov
iretw
cbtw
xchg
adc
sbbl
or
inc
popa
push
cltd
xchg
cmp
nop
jg
clc
daa
xchg
inc
inc
adc
ss
test
icebp
adc
inc
cmp
js
bound
xor
dec
imul
push
lods
into
nop
add
adc
repnz
mov
xchg
cmpsl
or
out
popf
or
pop
hlt
dec
lods
shrl
pop
sti
pusha
lods
mov
inc
jecxz
sub
sahf
or
loope
cmp
loopne
out
aad
test
test
roll
xor
xor
popa
clc
cmp
shlb
sarb
test
nop
repz
and
loope
lods
ret
hlt
dec
mov
mov
gs
pop
cmp
sbb
dec
dec
pop
ds
test
int
fcomps
mov
das
daa
imull
lds
dec
dec
jl
repnz
mov
xchg
xor
or
mov
lea
or
pop
out
pop
mov
mov
int
das
inc
ljmp
mov
pop
stc
dec
xchg
rolb
push
inc
inc
push
test
mov
in
jno
add
or
fimull
in
cmc
mov
mov
add
jg
sahf
sub
ret
or
pop
stc
int
push
add
outsl
insb
mov
inc
in
out
cmpsl
cmp
ds
add
push
movsl
in
fcmovnu
fwait
xlat
sbb
pop
or
dec
cltd
mov
sbb
int
sub
lea
std
inc
pop
xor
lea
mov
cld
xor
imul
pop
imul
xor
or
daa
and
cmc
adc
pop
push
addr16
das
fnstsw
mov
mov
push
inc
pusha
dec
ss
cmp
insb
push
xchg
movsb
add
repz
cmp
rol
add
jge
pop
push
repz
jle
push
or
and
xor
jne
sub
add
fs
inc
data16
dec
mov
shll
push
rcl
mov
dec
mov
fimuls
add
mov
add
fnsave
or
mov
cmpsl
cmp
mov
dec
cmc
ds
daa
mov
pop
pushf
ret
sbb
call
test
pusha
xor
adc
sarb
cltd
mov
xor
and
dec
icebp
cmp
mov
bound
or
insl
xlat
filds
mov
imul
inc
sbb
outsb
mov
sahf
cmc
sarb
out
repnz
aaa
jno
sahf
rorb
mov
adc
addr16
dec
lea
iret
sub
cmp
ret
sub
fs
movsl
mov
jecxz
sub
xlat
lea
je
inc
sbb
mov
jmp
push
sbb
dec
inc
into
mov
icebp
data16
xchg
lahf
pop
dec
adc
mov
mov
xlat
push
popf
mov
test
loopne
lret
push
jg
les
pop
in
xor
dec
push
jge
mov
mov
enter
cld
add
mov
or
jmp
or
aad
push
mov
test
repz
xchg
sbb
cli
sbb
ss
cmc
ds
fs
xor
jbe
fists
xlat
dec
cld
xchg
je
rcll
or
dec
mov
and
cwtl
add
ret
sub
rorl
popa
cs
subb
cmp
jne
icebp
loopne
pop
dec
xchg
cmp
ret
mov
repnz
fbld
pop
mov
mov
addr16
push
notl
mov
cmpsb
nop
mov
xchg
push
lock
pop
xor
adc
add
jmp
push
dec
fistpll
pushf
lea
ljmp
sub
pop
jmp
popf
imul
rcrl
mov
lahf
pop
jnp
sbb
lret
out
xchg
xchg
sbb
scas
xorb
sbbl
repz
dec
add
sbb
stc
xchg
push
xor
gs
dec
aam
fldl
sbb
movsl
dec
jg
dec
jl
loope
adc
mov
lcall
add
rcrl
ljmp
dec
and
xchg
cmp
popa
daa
movb
dec
pop
aad
arpl
pop
jge
nop
cmp
push
movsl
std
in
mov
sub
cmp
mov
shlb
dec
sub
add
testl
adc
cmc
mov
jae
xor
aaa
push
out
or
xor
push
adc
mov
jmp
icebp
sbb
adc
int
xchg
and
mov
sbb
addr16
out
mov
xor
mov
sub
mov
in
mov
dec
sbb
pop
call
or
aas
xor
sbb
div
mov
pop
dec
rorb
in
sub
inc
mov
jo
outsb
leave
pop
repnz
out
int
adc
jg
inc
inc
popf
mov
jne
mov
stos
out
or
adc
lahf
stos
push
or
gs
mov
subl
lcall
mov
pop
cli
cmp
lods
xchg
bound
jle
icebp
scas
push
scas
inc
inc
push
or
xor
daa
mov
jne
out
xor
fistl
pop
sub
mov
loope
cs
cmpsl
xlat
dec
iret
pop
inc
adc
jae
outsb
add
jo
fpatan
or
dec
jbe
mov
cmpsl
js
loope
jns
fbstp
push
lahf
push
mov
sti
divl
jae
test
lret
clc
out
add
cmp
jl
pusha
cmc
lret
bound
adc
bnd
cli
fmull
jns
cmp
and
daa
push
imul
pop
jle
in
sti
xor
mov
xor
pop
lret
out
insb
fimull
lcall
mov
add
in
movsl
dec
push
sub
or
jne
in
dec
inc
mov
xor
fstpl
arpl
mov
mov
mov
stc
jnp
push
mov
dec
cwtl
or
clc
cmp
loopne
mov
dec
dec
nop
fiaddl
into
mov
push
mov
mov
cltd
ds
jl
and
add
lcall
pop
mov
xor
out
pusha
cld
mov
fmull
leave
or
popf
mov
lahf
sub
pop
je
push
in
push
push
lock
adc
dec
shrb
and
repnz
stos
push
inc
movsl
pop
aaa
shlb
pop
add
movsb
mov
loope
xor
dec
in
xor
outsb
and
std
jp
adc
jle
sbb
pop
mov
notb
adc
call
in
movsb
sti
push
xor
sub
mov
shlb
mov
jmp
cs
pop
in
nop
pop
lods
sbb
cmp
cmpsb
mov
int
mov
mov
clc
orb
sar
mov
fldl
test
scas
mov
or
loop
repz
mov
sahf
cltd
out
push
insl
inc
orl
cli
ffreep
or
adc
ret
jl
movsb
sub
addr16
and
and
push
dec
in
fs
sbb
insb
fwait
stos
xorb
sti
add
xchg
mov
push
and
test
in
inc
jmp
jbe
mov
mov
nop
mov
enter
ljmp
mov
lock
fsub
mov
roll
out
popf
mov
jecxz
and
jl
in
pop
cmp
aas
inc
ja
xchg
push
faddl
arpl
in
fimuls
jp
push
inc
mov
jnp
sbb
mov
shll
cmc
in
push
outsl
push
xlat
push
insl
cmc
pop
mov
stos
mov
and
cmp
aaa
lds
fsubr
sbb
xor
pushf
aam
test
add
and
pop
mov
test
dec
mov
pop
in
aad
in
jmp
dec
mov
mov
ja
sub
and
jo
ret
inc
sub
sti
lock
cld
push
or
and
fstp
sahf
mov
scas
aaa
clc
mov
sbb
test
movsl
js
lods
popf
stc
fidivrs
jae
push
jl
mov
insb
insb
int
push
add
aas
fistpl
jb
loope
int3
dec
mov
outsl
push
add
mov
mov
test
push
fnstcw
pop
mov
inc
and
sti
inc
xlat
sub
or
xor
dec
pop
dec
call
aam
jecxz
rclb
out
add
neg
jae
cmp
test
mov
push
lret
das
inc
mov
lods
inc
fmull
aad
mov
stos
inc
mov
adc
addr16
ljmp
xor
cmp
sbb
scas
dec
xor
xchg
gs
scas
xchg
mov
js
cmc
popa
jb
xchg
jecxz
or
cmc
mov
mov
adc
test
pop
je
out
jl
sub
sbb
ja
xchg
jns
dec
pop
pop
sbb
js
add
pop
movsb
mov
xlat
adc
xor
shl
jbe
in
dec
cmp
shl
cmp
push
fcoms
sub
int3
das
cmc
lahf
jl
faddp
dec
out
imul
shlb
in
scas
cmp
dec
lock
aam
sbb
nopl
sbbl
shr
push
ret
mov
cmpsl
bound
sbb
xor
rcrb
pop
loop
sub
sub
dec
dec
mov
add
fadd
push
push
inc
or
jg
ljmp
hlt
mov
xor
lods
xchg
in
adc
shrl
lahf
out
jecxz
out
dec
out
mov
cmp
pop
mov
cwtl
mov
xchg
sbb
pop
call
movsl
mov
ja
jp
mov
popf
pop
mov
xor
dec
arpl
out
imul
cmpsb
inc
jnp
movsb
pop
jmp
lret
mov
sub
jb
push
or
and
jle
mov
mov
leave
mov
cmpsl
mov
pop
cld
aas
xchg
sbb
lcall
and
cltd
fnstcw
mov
push
movsl
fs
xor
add
pusha
inc
gs
jno
jg
mov
leave
int
aam
xor
mov
int
loop
push
adc
pusha
xor
adc
rolb
inc
cmp
out
pop
out
and
ljmp
jp
jns
xchg
mov
clc
push
fldl
jno
fistl
dec
nop
imul
stos
push
pop
or
cltd
pop
sahf
mov
cmp
pop
sub
lea
push
inc
ljmp
push
call
dec
addb
insl
push
mov
ljmp
xor
in
or
leave
aaa
in
jg
push
mov
xor
sub
xor
push
mov
adcl
out
fnsave
add
cmpsl
scas
lea
ss
daa
decb
insl
and
jns
stos
xlat
test
mov
cli
jno
cld
jge
inc
and
or
and
sub
cmc
adc
ss
cld
push
push
mov
fs
mov
imul
mov
sub
daa
ja
add
or
cltd
mov
popf
push
mov
scas
add
iret
es
push
xor
xor
std
adc
adc
shrl
jae
cmp
dec
xorb
mov
sub
push
lods
cmp
std
rcrl
dec
dec
cwtl
das
orl
sub
mov
test
dec
pop
imul
loopne
sub
scas
dec
rcr
outsb
cwtl
test
fcmovb
pop
jl
sbb
into
mov
xor
jns
cmpsl
stos
or
jle
lock
mov
mov
sub
daa
push
call
xchg
adc
pop
lock
sahf
mov
loope
iret
movsl
int
nop
insb
std
jo
xchg
pop
scas
cmp
call
push
cmp
outsb
test
fisubl
enter
js
mov
das
pop
mov
dec
call
stos
jbe
fiadds
cmpsb
les
push
xchg
shl
pop
sub
xor
js
xchg
xor
cltd
fisubrs
pop
lahf
lahf
dec
mov
pop
cmp
jecxz
adc
push
cmp
test
jnp
sbb
mov
pop
insb
or
adc
loope
jge
cmpsb
sub
mov
mov
pop
rcr
xchg
sbb
pop
jno
jbe
inc
xchg
mov
cmpsl
jo
inc
mov
xor
cmp
mov
outsb
aad
sub
movsb
sub
fistpll
jo
pop
pop
inc
mov
subl
mov
add
outsb
fldenv
mov
psadbw
shlb
mov
loopne
shll
and
adc
test
out
sbb
dec
enter
stos
test
lea
dec
adc
pop
mov
jp
xchg
adc
cmpsb
mov
roll
std
pop
push
test
in
addl
xchg
dec
sub
pop
insl
sbb
enter
test
mov
fidivl
adc
cmp
xchg
clc
pop
mov
adc
mov
cmp
ja
bnd
aas
das
inc
inc
dec
mov
ret
mov
mov
fistpll
popf
add
lret
and
xchg
push
loopne
cmp
push
imul
and
push
jbe
lods
mov
jge
ljmp
sbb
sub
cltd
testl
inc
cmp
jp
and
mov
mov
mov
dec
into
outsb
nop
sbb
in
xor
sbb
outsl
mov
xchg
pop
je
dec
add
lods
nop
adc
icebp
pushf
add
test
into
and
jnp
mov
xchg
sar
xchg
or
jns
jmp
in
and
sbbl
add
add
aas
es
sbb
inc
mov
mov
aad
shrl
cli
fdivrs
jl
push
push
and
sub
jae
inc
lret
mov
dec
sbb
dec
mov
dec
adc
mov
push
jae
out
insl
dec
dec
and
sbb
add
lods
lods
jo
movsl
xor
sub
sbb
xchg
mov
pop
lcall
enter
aam
sbbb
or
jno
out
lods
dec
js
mov
stos
inc
rorl
and
lret
xor
jg
mov
outsl
imul
lds
bnd
xor
lcall
pop
xchg
xor
mov
push
add
movsl
xor
shll
test
fldl
mov
add
jle
sbb
mov
adcb
clc
push
mov
ficoml
ret
bound
es
enter
mov
inc
mov
daa
pop
daa
mov
std
rolb
pop
sahf
scas
out
sbb
ret
mov
sti
pop
fstps
mov
adcb
mov
add
rep
sbbl
jle
jp
fstpl
pop
adc
cmp
push
test
cmp
add
pop
leave
pushf
and
stos
add
push
out
sbb
imul
iret
aad
xchg
ret
cmp
ja
push
loopne
push
iret
push
sbbb
mov
jns
cmp
ror
aad
fadd
pop
push
push
fidivrs
je
movb
rcrl
push
or
scas
test
mov
xchg
or
add
jmp
xchg
sub
dec
cmp
test
nop
mov
inc
repnz
and
pop
mov
test
push
inc
cmp
stos
inc
inc
test
sti
mov
pop
cmc
mov
test
inc
in
sub
rorl
or
sbb
fnstcw
sahf
adc
dec
jle
outsl
das
jns
jecxz
and
cmp
dec
xor
mov
and
pop
aaa
ja
outsl
jns
push
inc
push
xor
ds
push
xor
mov
adc
push
inc
ret
outsl
cmpsb
imul
inc
mov
jp
lods
mov
xchg
imul
and
leave
xor
imul
in
xor
frstor
aad
lret
sar
repz
adc
inc
loopne
xor
hlt
cmp
pop
dec
es
inc
cmp
daa
pop
xor
mul
add
xchg
ljmp
pop
imul
loopne
rorb
xor
xor
lcall
or
stos
repz
sti
ds
in
pop
call
add
aam
into
les
insb
jns
imul
out
lea
or
jns
push
pop
jne
outsl
push
fs
pop
shl
aas
xchg
loopne
mov
pop
add
xor
pop
mov
fdivrp
add
sub
push
add
lcall
xchg
fbld
test
and
aas
data16
dec
aaa
and
cmp
pop
adc
pushf
sub
aaa
dec
pop
cli
xchg
mov
sbb
cmp
sar
xchg
cli
insb
jmp
aam
jb
add
lds
fldenv
sbbl
add
decb
or
enter
mov
shrb
loope
cmp
pop
ret
xor
pop
das
stos
adc
or
js
repnz
pushf
mov
ljmp
mov
adc
mov
fstps
push
or
je
inc
bound
sbb
mov
mov
popa
dec
popa
and
push
and
filds
adc
in
test
cltd
sbb
dec
mov
pop
rcr
ret
in
add
lods
push
icebp
daa
iret
insb
addb
notl
popa
pop
popf
xor
add
das
xor
jle
push
and
shrl
clc
vfrczss
sbb
jae
mov
movsl
mov
push
push
lods
or
bswap
xchg
test
push
pop
xchg
push
mov
xchg
and
sbb
orl
stc
test
testb
in
lods
ljmp
xchg
dec
int3
jnp
mov
sbb
ret
lahf
push
xor
mov
sbb
cmp
xchg
cmp
pop
fisubrs
mov
montmul
cmpsb
pop
fsubr
inc
divl
xchg
test
ja
hlt
mov
jge
pop
pusha
insl
adc
mov
mov
cmp
pop
or
aas
xchg
xchg
out
js
dec
dec
popf
push
popa
in
shrl
push
and
cmp
mov
push
sub
shrl
mov
outsb
fbstp
out
fbstp
sbb
xor
cli
pop
pop
mov
mov
test
cmp
inc
nop
jg
addr16
shll
popf
hlt
mov
aam
ret
or
inc
shll
rcrb
lahf
out
lock
shlb
repz
inc
mov
mov
pop
xor
loop
push
lcall
mov
inc
test
pop
movsb
enter
or
mov
push
xchg
pushf
adc
aas
mov
ja
mov
push
mov
sbbb
mov
les
ds
addr16
cwtl
mov
xor
mov
push
inc
pop
scas
xchg
mov
push
insb
add
das
fidivl
pop
fxtract
scas
push
test
inc
shlb
add
push
cmp
adc
mov
mov
aaa
scas
inc
pop
push
fcomps
mov
out
dec
popf
jle
adc
shl
or
adc
mov
ret
adc
movsb
dec
ljmp
out
and
add
mov
push
pop
call
sahf
xor
outsb
lahf
enter
mov
cmp
mov
mov
and
ss
out
test
xor
xor
pop
jo
inc
mov
lss
adc
xor
stc
xlat
incb
pushf
ds
fs
repnz
lea
sub
jg
clc
push
push
out
dec
push
es
cltd
push
hlt
inc
popf
frstor
clc
test
out
imul
popf
add
mov
mov
cmp
lea
divb
and
sub
sub
dec
xchg
sbb
jb
movsb
insb
fistpll
fstpt
into
addb
and
cmpsb
sbb
mov
pusha
clc
ficoml
push
fcomps
mov
push
and
test
jne
mov
or
cs
mov
jl
jmp
mov
push
cmpsb
mov
push
or
sti
out
sub
sub
add
ficoml
jmp
data16
push
leave
mov
ret
xor
jg
push
out
ret
mov
xor
add
fs
fdivs
test
pushl
inc
es
mov
mov
inc
mov
xchg
xor
xor
push
xor
int3
jne
push
pushf
arpl
xchg
subb
jbe
lods
xchg
sbb
int
insl
jp
fbstp
fwait
sahf
pushf
adcb
or
roll
push
cmc
mov
out
push
and
mov
push
mov
imul
insb
pop
popl
pop
or
jno
int3
loopne
sbb
push
lds
lea
addl
sbb
mov
test
sbb
push
pop
push
pop
clc
aad
cmp
push
jmp
orl
fs
inc
mov
xchg
arpl
aam
mov
mov
repnz
sub
pop
sub
enter
push
xor
push
inc
vaesdeclast
scas
xchg
push
xor
jmp
and
cmpsb
jecxz
hlt
subb
dec
dec
aaa
inc
fwait
in
xchg
les
or
loope
push
insl
dec
int
insl
sbb
adc
lds
mov
jmp
loope
or
cmpb
scas
divb
xlat
imul
xchg
clc
mov
repz
int
xchg
test
add
ja
icebp
mov
mov
jns
pushf
insl
pop
repnz
add
xor
rolb
xor
int3
jg
loope
stos
jae
insl
xchg
add
and
xchg
lcall
sub
and
in
xor
daa
mov
adc
sbb
xchg
js
push
outsl
jnp
inc
add
test
loopne
xchg
dec
ret
cltd
and
inc
andb
lds
shl
je
rcl
fbstp
and
sub
cmp
jmp
daa
or
or
or
mov
dec
mov
aas
push
jbe
dec
loope
sub
jo
xchg
icebp
push
loopne
into
inc
sbb
inc
repz
push
pop
lcall
lock
out
adc
pop
js
and
xchg
dec
sbb
inc
mov
sti
or
cmp
iret
pusha
jae
push
sub
push
imul
imul
jnp
mov
lret
leave
mov
mov
stos
inc
pop
in
lret
stc
mov
sbb
or
push
or
jno
cmc
mov
jmp
aad
arpl
sbb
push
mov
push
sbb
xchg
dec
inc
fildll
sbb
mov
mov
cld
push
pop
sahf
les
fisubs
std
adcl
jno
jno
pop
arpl
dec
test
in
mov
std
inc
inc
arpl
xor
mov
mov
jecxz
popf
out
jg
insb
jl
mov
repnz
popf
leave
fs
enter
ret
jmp
outsl
es
and
adc
xchg
lods
pop
jns
arpl
int
xor
scas
inc
push
loope
push
jae
imul
dec
mov
push
jg
jecxz
xchg
cs
pop
mov
les
cmp
ret
adc
xor
jo
adc
arpl
xchg
test
push
inc
test
scas
mov
in
outsb
sbb
notb
test
or
mov
popf
outsl
pusha
push
jecxz
inc
arpl
mov
enter
test
les
jae
mov
cmp
push
pop
xor
in
sub
nop
pop
ss
popf
addb
loop
xor
inc
divps
les
aad
push
sub
int3
sbb
push
in
or
add
push
xor
jno
stos
aam
add
cli
xchg
sbb
adc
mov
lods
in
rcll
cld
mov
jno
adc
adc
es
adc
nop
leave
loope
scas
lret
mov
nop
aas
xor
sub
loop
pusha
sbb
and
repnz
data16
in
stos
dec
mov
ds
lea
inc
test
mov
aas
xchg
lahf
ficoms
mov
ud2
arpl
add
cld
xchg
xchg
jp
lcall
pushf
mov
xor
test
sub
enter
mov
mov
add
dec
jb
iret
dec
bound
shll
xchg
cmpsl
hlt
dec
lahf
clc
push
paddq
mov
or
sub
and
pop
inc
insb
adc
xchg
mov
adc
mov
aaa
mov
sbb
idivb
push
leave
leave
mull
jl
rcl
popf
mov
adc
bound
sti
gs
pop
push
xchg
fcomps
xlat
pop
xchg
add
enter
push
test
aas
push
fsubr
jl
popa
add
sbb
fmuls
cwtl
adc
or
fsubr
data16
push
mov
mov
daa
rcrb
cwtl
pop
dec
std
lods
ja
lcall
pop
sub
cmp
inc
loope
pop
jbe
out
adc
test
cmp
aas
into
gs
push
or
in
sti
lods
insb
aas
push
loopne
aaa
test
and
adc
jo
mov
or
mov
push
inc
notb
inc
push
push
ret
popf
jo
lcall
sti
sbb
inc
es
pop
jo
cmp
aas
pop
cmp
cmp
xchg
jp
and
adc
cmp
xlat
add
sbb
dec
jno
out
imul
xchg
cmp
leave
lods
jecxz
push
out
dec
pop
xchg
jae
or
popf
mov
sti
xchg
mov
cld
and
sbb
mov
out
xchg
fidivrs
cmp
das
cmovno
testb
sub
int3
mov
xor
inc
push
out
js
and
sti
imul
lods
xchg
pop
xor
xchg
sub
xor
fbstp
rcl
aad
jae
dec
imulb
mov
add
test
and
test
dec
sbb
insb
xchg
mov
jle
outsl
daa
add
out
fisubl
testb
add
enter
mov
pushf
enter
shr
and
sti
xchg
inc
adc
testl
mov
xor
mov
xor
push
in
add
cltd
std
lcall
pop
and
call
scas
mov
mov
pop
ja
jl
mov
iret
testl
int
pop
pop
repz
cmp
jp
enter
cli
inc
aam
fistpl
sti
mov
xchg
jne
adc
push
jbe
nop
dec
push
outsb
mov
aad
lea
mov
shrl
lds
mov
sbbl
cmp
jg
fsubl
push
jg
movsb
sbb
sbb
pop
outsb
mov
rcrb
lret
movsb
mov
xlat
cmpl
das
pop
pop
or
push
stos
std
mov
jns
sbb
mov
adc
adc
andl
lret
ds
add
popa
cmp
cmpsl
ljmp
stos
mov
inc
iretw
rorb
xor
js
fimull
out
push
xchg
sub
jle
dec
and
jl
sti
cli
outsl
out
sbb
daa
adc
mov
stos
ja
push
adc
and
fnsave
in
cwtl
xor
mov
repz
scas
call
push
push
push
pop
icebp
and
sbb
add
lods
jb
mov
xchg
bound
add
rcrl
mov
test
icebp
psrlw
stos
push
pop
aaa
scas
lods
xchg
jl
mov
addr16
inc
sub
sbb
adc
jle
push
dec
pop
mov
add
add
aaa
jmp
mov
inc
add
add
aam
lea
test
and
adc
jb
enter
fistps
xlat
ja
and
mov
aas
popf
test
testb
mov
popa
add
call
mov
subl
mov
push
outsb
add
mov
movsl
sub
add
xchg
jae
mov
fildl
out
ds
fmull
mov
lret
out
push
lods
outsl
or
notl
and
lret
sbb
jo
pop
neg
shll
adc
bnd
stos
lods
sti
xchg
mov
sbb
incl
jo
jne
outsb
std
gs
cmp
cmp
std
jecxz
shl
nop
icebp
mov
lods
imul
popa
cmpsl
xlat
outsb
sbb
sbb
aaa
aam
xchg
ret
push
subb
mov
loop
jmp
int
add
adc
mov
adc
test
ret
pop
stos
sub
dec
outsl
loope
pop
cmpsb
dec
jecxz
enter
xlat
mov
inc
xlat
add
pop
sub
push
ljmp
jb
ss
ficoms
in
push
mov
inc
daa
rclb
sbb
dec
out
xchg
sub
sbbb
sar
fwait
push
jno
add
jle
roll
aaa
push
sbbl
lds
sahf
out
inc
pop
lock
out
jns
js
push
stos
mov
test
or
push
pop
cwtl
cmp
leave
mov
push
push
mov
pop
add
add
popa
jns
fwait
icebp
jnp
push
test
stos
push
nop
sub
dec
lret
lcall
popa
pop
mov
jg
les
sub
aam
push
or
jnp
mov
or
inc
lahf
popf
sbb
or
adc
sbb
stos
xchg
aas
push
adc
cmp
xchg
sub
pop
mov
or
xchg
call
xor
cli
ljmp
fwait
movsl
fnsave
pusha
test
sub
and
ret
repz
xor
rcll
push
xor
push
add
sbb
lods
mov
jbe
mov
adc
call
fmuls
lds
je
cmpsb
insl
pop
adc
xchg
filds
pusha
xor
ret
mov
xchg
push
inc
into
shr
inc
push
mov
in
cmpb
sbb
jl
popf
pop
jns
into
mov
dec
push
xorl
dec
or
test
jmp
jmp
push
xor
xor
xor
dec
xlat
push
inc
jmp
lahf
mov
sub
neg
ja
push
inc
sub
mov
out
imul
or
push
cwtl
stc
leavew
mov
test
repz
or
out
aas
dec
fwait
pop
cli
pop
jmp
sbb
cmpsl
insb
cmp
pop
ror
mov
cmp
inc
dec
mov
sahf
sub
test
mov
push
cli
or
mov
xor
mov
pop
fwait
fwait
imul
mov
mov
jmp
adc
cmp
outsb
in
aaa
push
pop
add
arpl
add
std
or
xchg
jno
repnz
dec
pop
adc
mov
outsb
pop
jo
add
out
or
or
adc
jnp
mov
sub
rclb
xchg
sbbl
mov
iret
adc
and
xchg
jbe
push
push
cmpsb
mov
je
xchg
aas
mov
icebp
in
lcall
inc
icebp
insb
jb
out
xchg
and
cmp
cmpsb
sub
jle
jg
ja
iret
mov
mov
cmp
or
fstpl
dec
adc
xor
mov
les
scas
and
jge
loope
cmp
imul
arpl
jb
int
sbb
mov
jecxz
es
je
xlat
addr16
test
xchg
sub
test
sub
mov
cmpsl
mov
mov
mov
sbb
or
mov
dec
jge
sahf
cmp
add
jbe,pn
scas
lahf
sub
not
int3
outsl
push
repnz
xchg
ss
cmp
arpl
sbb
sub
xor
je
lcall
xchg
js
jne
lcall
mov
inc
ret
or
mov
xchg
xchg
aam
fwait
cwtl
mov
icebp
test
jbe
xor
pop
inc
pop
mov
jns
and
and
fwait
inc
lock
das
cmpsb
mov
insl
loopne
push
pusha
sbbb
dec
out
pusha
dec
iret
in
rcrl
popa
push
lods
sahf
push
stc
mov
cmp
pop
mov
pop
loope
cmp
movsl
mov
daa
shll
imul
dec
mov
mov
vmwrite
popf
and
xchg
in
jnp
fistpll
dec
shl
dec
sbb
fwait
xor
in
fidivs
or
std
adc
and
cmp
pop
mov
sahf
or
insl
stc
and
or
out
pop
outsl
cs
lret
outsb
add
mov
mov
cmpl
fldcw
sbb
mov
xor
stos
jecxz
push
movsb
or
lret
push
inc
pop
and
push
or
cmp
sub
dec
xor
mov
loopne
cmp
and
cltd
push
gs
cmc
inc
jns
adcb
pop
nop
ret
ret
fidivl
mov
push
mov
in
dec
cli
cmpsl
hlt
fildl
mov
std
out
fildl
push
leave
pushf
jae
mov
inc
pop
inc
xor
lea
cmp
popf
arpl
outsl
jns
setne
imul
repz
mov
pushf
pop
call
sahf
and
xor
mov
repnz
add
push
repz
xor
aaa
adc
addr16
insb
mov
pop
adc
inc
mov
es
jge
lods
jge
test
pop
jmp
in
ja
and
adc
adcl
fcoms
sub
cltd
rclb
cmp
xor
pop
fcompl
fsubs
outsl
and
xor
ja
out
jecxz
lods
sbb
fisubs
sub
clc
repz
mov
lods
jmp
jo
push
stos
int3
xchg
popa
mov
or
jmp
mov
orb
repz
incb
in
pop
out
test
add
cmp
dec
inc
pop
jnp
decl
cmpsl
sbb
lahf
popf
push
repnz
or
sub
lret
popf
shll
test
pop
dec
pop
mov
or
loopne
arpl
bound
test
mov
lret
cmp
test
jl
int3
adc
jae
adc
pusha
mov
jae
and
test
dec
sub
jnp
adc
pushf
push
push
push
aas
mov
mov
push
push
lods
adc
inc
aaa
lcall
icebp
jle
pop
aad
pop
jbe
sti
sub
rclb
sbb
enter
sub
loope
dec
xor
clc
out
lds
push
out
sbb
mov
jmp
in
adc
mov
fsubl
push
insb
sbb
inc
ss
mov
xchg
cld
ficoms
insb
sar
push
pop
mov
sub
aad
pop
dec
iret
jb
jge
lds
ret
sti
xchg
stc
psrld
cltd
push
cmp
sti
pop
cmc
sub
add
mov
outsb
pop
fiadds
jecxz
shr
sbb
cmpsl
mov
ret
push
js
and
lods
hlt
adc
adc
jne
jl
push
sub
mov
cmp
cmp
repz
pop
adc
ljmp
call
inc
test
mov
cmpsb
js
fistps
mov
enter
nop
or
lret
repnz
inc
cmp
hlt
test
dec
loopne
mov
stc
in
out
inc
aam
fcomi
fstpt
or
push
sbb
cmpsb
fwait
sti
mov
test
rcrb
pop
sti
cmp
into
jmp
rcrl
or
push
inc
addr16
jne
test
popf
iret
push
jmp
xlat
adc
push
xchg
aam
stc
out
mov
sbb
loopne
jl
nop
lds
pop
rcrb
jge
xchg
addr16
sub
dec
filds
jo
nop
aam
fldcw
cmp
dec
ret
and
leave
mov
inc
repz
or
jno
ja
fwait
enter
test
adc
dec
and
mov
inc
pop
dec
aad
cs
mov
lcall
and
or
xchg
push
xor
add
cltd
stos
aam
mov
aaa
mov
popa
sub
add
dec
scas
push
int3
out
add
pusha
stc
test
mov
movsl
xchg
xchg
adc
fmuls
movsb
aam
stc
sarb
stos
mov
xor
aad
int3
imull
cs
and
push
inc
mov
and
lret
inc
bound
loopne
pop
ds
gs
out
and
xchg
loope
stos
adc
push
xchg
pop
cli
xchg
pop
dec
insb
jp,pn
pusha
or
lods
imul
out
sbb
xchg
push
cmc
dec
insb
adc
iret
repz
jmp
aaa
cmpsb
out
iret
fwait
jbe
sub
xchg
xor
test
out
push
adc
cltd
and
testl
pop
push
ljmp
jb
dec
push
push
push
sbb
mov
pop
sbb
retw
mov
or
lods
jg
sub
mulb
jbe
lcall
push
pushf
mov
cmp
pop
lcall
mov
adc
inc
lods
sbbb
lret
add
out
lcall
jae
cmp
sbb
cmpl
push
popa
mov
mov
lahf
push
sbb
sub
mov
add
adc
imul
mov
add
adc
sub
or
add
addr16
lea
mov
in
xor
aaa
loopne
outsl
divb
and
fmull
int3
clc
lds
pop
imul
jo
dec
lods
sti
cmp
call
fsubrp
inc
xchg
out
sbb
pop
fisttpll
sub
mov
fs
jle
xor
or
xchg
cs
es
xor
test
jmp
lcall
mov
mov
rcrb
xchg
mov
or
out
cmp
mov
imul
loope
sarl
call
xchg
testl
scas
add
loopne
cwtl
xor
in
inc
aas
pop
mov
dec
push
jne
xor
cld
jecxz
xor
stos
test
sub
nop
cmp
jl
fst
push
mov
aas
pop
lret
push
sbb
dec
push
cmp
imul
or
xchg
cs
outsl
xlat
inc
pop
enter
sbb
je
incl
sub
imul
inc
pop
mov
or
scas
mov
in
inc
pop
inc
push
shll
sub
pushf
inc
dec
pop
sbb
int3
lahf
es
sbb
lret
push
addr16
sti
or
rolb
popa
add
sbb
xchg
push
cltd
enter
xor
testb
adc
fsts
loop
xor
out
push
xchg
call
mov
add
inc
std
inc
sbb
nopl
or
das
int3
sahf
jns
dec
dec
rolb
in
leave
subl
nop
int3
mov
fstpt
out
lds
jne
and
repnz
mov
cmpsl
add
fdiv
nop
mov
sti
inc
inc
ja
jns
adcb
push
aad
aas
jecxz
adc
aad
adcl
pop
scas
imul
push
aas
test
flds
jp
jo
jecxz
xchg
sub
loope
inc
or
stc
mov
xchg
cmp
sub
push
fwait
pushf
hlt
loopne
dec
out
cld
dec
sarb
push
lock
push
xlat
decl
adc
or
test
nop
adc
pop
push
imul
xor
xchg
adc
test
add
inc
mov
mov
mov
xor
adc
xchg
outsl
xchg
stc
adc
mov
or
lret
jge
dec
aaa
lahf
mov
ret
enter
lds
scas
or
fdivrs
or
pop
subb
mov
xchg
lods
rcll
cmpb
out
push
fists
mov
lret
addr16
push
out
xchg
cmpsb
mov
mov
push
ds
mov
pop
cmpsl
pop
outsl
mov
jnp
sbb
pop
dec
es
jo
fwait
pop
cmp
push
popa
popa
adc
je
cmp
or
mov
inc
js
jmp
sub
add
out
stc
out
lret
jecxz
lret
adc
dec
dec
fs
stos
push
adc
dec
inc
inc
mov
jp
mov
mov
and
cld
cltd
mov
sub
in
xchg
mov
xchg
imul
js
xor
jbe
and
inc
xor
sub
and
mov
in
add
sub
movsl
testl
in
cmp
scas
lahf
movsb
and
xlat
mov
jnp
push
test
lock
ret
push
negb
int
rolb
test
sbb
out
stos
inc
mov
movsl
cmpsb
lock
xchg
cmp
fwait
lret
fcoms
pop
gs
int3
jbe
loop
mov
andl
jmp
fcomps
test
or
mov
into
imul
sarl
push
mov
mov
mov
sbb
mov
mov
xchg
mov
mov
jo
stc
sub
dec
fstpt
sarl
inc
shrl
inc
testb
sub
in
mov
dec
dec
hlt
mov
sbb
sub
sbb
cmp
or
pop
mov
adc
adc
jae
leave
fsubl
inc
cmp
xchg
cmp
pop
push
addr16
lret
movsl
cmp
sub
jge
xor
in
addr16
aaa
stos
sysret
or
push
mov
cmp
mov
add
fs
dec
mov
lcall
in
ret
rcll
xor
mov
mov
in
jg
xchg
jle
enter
or
jmp
sub
data16
xor
jmp
push
dec
rcrb
add
push
dec
dec
cmp
xchg
out
inc
cld
aas
mov
out
enter
dec
scas
nop
dec
push
dec
pop
cmp
mov
out
xor
out
lock
aam
je
mov
inc
out
popa
jmp
jge
mov
lods
imul
jo
clc
mov
push
not
paddusw
les
sarb
ret
xchg
out
lock
cmc
xor
cmpsl
out
cmc
lcall
or
sti
not
or
sbbl
push
or
gs
and
xor
nop
push
jle
iret
in
adc
daa
lcall
inc
loope
es
roll
push
testl
sbb
jg
and
jmp
xor
jle
scas
shll
pop
push
sub
in
inc
lahf
mov
insb
adc
push
lods
jns
lret
mov
inc
lret
stos
cli
fcmovnbe
xchg
xor
scas
call
jne
sahf
std
fwait
mov
mov
pop
pop
xor
data16
fwait
jae
in
mov
push
mov
mov
cmp
ss
mov
nop
mov
and
je
loopne
cld
mov
xchg
mov
sbbb
loop
dec
gs
sbb
loopne
in
hlt
pop
adc
and
shll
stos
xchg
test
cmpsl
mov
mov
add
out
in
lock
leave
add
arpl
cmc
es
incl
push
sub
shlb
scas
xchg
cmp
orb
subb
loope
ret
orl
push
imul
adc
mov
leave
out
push
mov
adc
stos
cmp
sub
pop
adc
dec
xchg
insl
hlt
out
jge
cmp
shl
xor
cmp
jnp
xchg
test
les
jno
push
add
call
scas
jge
cmp
mov
fbstp
push
adc
test
inc
in
xor
dec
cmc
mull
hlt
dec
pop
out
arpl
ret
xchg
cmp
inc
outsb
icebp
aad
pop
popf
inc
sbb
mov
cwtl
push
in
pop
lea
mov
jo
xor
mov
scas
mov
xchg
sub
or
pop
xchg
enter
and
xchg
inc
push
mov
sarb
pop
cmp
pop
mov
popa
xor
inc
scas
aaa
rol
lods
mov
adc
aaa
stos
jne
rorb
or
lahf
loope
gs
rcl
sub
push
daa
jo
pop
cmp
inc
sub
pop
or
adc
arpl
push
jge
mov
ror
fnstsw
addl
cmp
pop
mov
out
push
lock
push
sub
pusha
clc
jae
adc
jns
ret
js
jns
loopne
adc
les
push
pop
jbe
mov
es
movsb
or
xor
sbb
adc
mov
arpl
jge
in
insl
loopne
adc
ja
int
shl
pop
push
testb
mov
xorb
pop
outsb
imul
ss
cmc
mov
sahf
out
lock
sub
lock
sub
stos
fidivl
mov
inc
mov
adc
rclb
fs
f2xm1
ret
sub
mov
in
mov
sahf
aam
das
xchg
ljmp
ds
les
into
loop
test
push
clc
push
das
dec
and
clc
addb
out
xchg
aad
push
inc
shll
mov
out
je
pop
dec
loopne
mov
iret
push
lea
jg
sbb
lods
mov
in
jo
ds
sbb
jg
cmp
mov
fstpl
xor
decb
dec
dec
repz
imul
leave
movsl
add
inc
xlat
gs
aaa
nop
inc
ret
pop
and
pushl
jle
loopne
xchg
flds
shl
ficoml
ret
xor
int3
jb
imul
addr16
jle
mov
das
js
adc
pop
insl
sahf
inc
aas
js
sub
lds
es
add
xchg
hlt
mov
and
scas
imul
xchg
adc
or
fistpll
inc
sahf
mov
rclb
add
jmp
dec
adc
call
pop
insb
mov
lods
or
jb
addr16
js
pushf
stos
mov
rcrb
jle
mov
popa
popf
lods
loopnew
test
daa
add
nop
sub
sahf
mov
push
into
adc
xchg
in
rcll
out
dec
loop
or
mov
mov
cwtl
icebp
js
pop
out
aam
cltd
xor
call
mov
in
pop
out
les
aad
add
add
xchg
das
test
fsubrs
dec
cmp
mov
jb
popf
sub
mov
call
fwait
inc
xor
sub
xchg
call
outsb
sub
mov
jle
in
push
add
mov
stos
mov
dec
fwait
cltd
and
cwtl
mov
pop
xor
negl
jg
insl
mov
mov
cmpsb
repz
jbe
into
or
mov
add
mov
stos
push
sti
jb
mov
mov
lret
out
adc
sub
cwtl
sbb
cmp
mov
inc
sti
in
inc
ret
test
es
mov
dec
test
clc
add
outsl
enter
test
movsb
push
subb
xorb
movsb
arpl
mov
xchg
sub
ret
and
aad
pop
mov
mov
add
es
in
pop
xlat
testl
test
pop
into
mov
sbb
xor
inc
popa
xchg
cmp
fcoml
fisubs
pop
jg
lret
inc
arpl
je
ja
int3
jb
clc
jecxz
dec
arpl
icebp
insl
divl
out
pop
loopne
xchg
ja
in
adc
sti
pop
test
add
xor
test
pushf
fucomp
vpand
adc
adcb
pop
outsb
mov
in
imul
imul
adc
add
cmc
push
lods
scas
aas
xchg
pop
sahf
lea
mov
nop
pop
add
imul
cmc
inc
dec
mov
push
push
in
pop
les
mov
jo
in
mov
push
add
jl
repnz
enter
sar
insb
push
ja
mov
sub
or
mov
out
or
lret
inc
mov
movsl
iret
xchg
shrl
outsl
push
pop
pop
fidivl
inc
mov
shrl
in
mov
addr16
pop
dec
jge
xchg
adc
push
call
pop
and
popf
fdivrs
in
and
lcall
adc
clc
sbb
push
aam
cmp
add
pop
pop
mov
sarb
scas
mov
test
add
xor
loopne
insl
rol
xor
sbb
push
mov
xor
out
sbb
xchg
xlat
rorl
jge
cmp
adc
xchg
inc
rolb
xchg
xor
int
sbb
test
mul
sbbb
add
cmp
mov
jae
pop
not
adc
mov
imul
mov
out
cltd
sbb
stos
inc
imull
ljmp
jb
mov
ljmp
rcl
jp
pinsrw
sub
ljmp
jno
inc
add
int3
fstl
pusha
lcall
test
mov
adcl
gs
sbb
into
mov
mov
subl
mov
insl
enter
lret
call
dec
cld
and
sbb
in
jecxz
popa
clc
jne
xchg
sbb
dec
add
aas
sbb
orl
insb
or
jge
mov
jp
pop
inc
shll
jmp
icebp
ret
ret
aas
mov
imul
mov
or
mov
mov
sahf
xor
clc
sub
int3
je
rcr
xchg
js
xor
into
push
movsb
ret
xor
mov
mov
dec
or
lea
mov
inc
cwtl
xorb
xor
popf
jp
pop
jnp
pushf
and
int
out
dec
addr16
fstps
std
xlat
repnz
cld
or
sub
inc
xchg
iret
fldl
dec
adc
mov
mov
push
pop
scas
addl
mov
fmull
andb
movsl
mov
movsl
pop
mov
sub
sub
mov
imull
cltd
rcll
stos
xchg
mov
enter
adc
arpl
add
mov
mov
or
sahf
xor
lods
push
movsl
fidivs
mov
scas
push
nop
sub
pop
and
push
sub
adc
dec
hlt
das
cmp
insb
fs
sahf
aad
ja
adcb
adc
inc
scas
push
pop
pop
cltd
pop
les
arpl
xchg
mov
push
cmpsb
cmpsl
mov
jae
cltd
out
xor
daa
lds
shr
pop
fisubrl
cmp
inc
xlat
or
test
xchg
call
scas
cmp
adcb
or
dec
mov
jo
fisubl
nop
push
push
shll
push
sbb
sub
outsb
loopne
cmp
in
es
lahf
jmp
adc
push
jmp
xor
jmp
loopne
int3
xor
pushf
aas
incl
or
inc
movsl
mov
fldt
jns
fwait
add
daa
les
cmpsb
sbb
dec
pop
mov
add
and
inc
push
jg
dec
call
or
movsl
mov
pop
pop
insb
inc
xchg
push
mov
sub
cli
mov
ret
cltd
test
fildll
mov
jge
mov
fisubrl
or
add
out
mov
cli
das
pusha
fcompl
xlat
sub
cmpsb
leave
xor
or
mov
shlb
add
rorb
mov
rorl
movsb
cmp
mov
mov
iret
xor
ficompl
addr16
sbb
push
fnstenv
std
sub
xchg
lods
push
dec
loope
dec
pop
mov
mov
mov
adc
gs
fimuls
xchg
dec
mov
stos
mov
sbb
andb
ret
inc
enter
shlb
jle
sub
ficompl
mov
shl
mov
out
or
in
in
or
shll
movl
mov
jo
test
ret
dec
negb
xchg
loope
leave
cmpsb
sbb
call
ret
push
lock
out
sub
inc
pop
adc
add
stc
outsl
dec
or
gs
das
lahf
xchg
inc
xchg
adc
es
jne
andl
jp
add
cmp
leave
test
and
es
inc
mov
lea
xchg
dec
push
push
mov
jg
or
aas
or
arpl
jp
mov
pop
mov
mov
jmp
push
jge
arpl
repnz
push
and
repnz
mov
push
add
stos
mov
ret
hlt
orl
cmp
pop
xchg
scas
pop
adc
addr16
jge
jb
pop
mov
lock
cmp
mov
sbb
lcall
cli
push
adc
push
jne
outsb
movsb
mov
jbe
lds
adc
inc
dec
push
xchg
xor
iret
loop
shll
into
add
clc
outsl
add
jmp
add
sbb
jne
nop
test
subl
out
sub
sub
mov
and
rol
lods
pop
cs
int
xchg
push
das
pop
push
xchg
bnd
mov
add
stc
sbb
inc
mov
adcb
sti
inc
fnsave
addb
dec
push
out
ja
cmp
jmp
test
cmp
imul
and
stos
ror
cld
pop
arpl
jno
or
js
push
inc
pop
dec
push
sub
lea
ja
in
sar
decb
mov
shl
jge
ror
insl
sub
pop
add
out
out
repz
push
gs
mov
cwtl
and
mov
jle
subb
mov
and
or
cmp
aas
pop
jecxz
lcall
sbb
mov
sbb
je
movsl
xor
mov
les
inc
lcall
loop
or
cli
add
add
push
jne
sub
jno
add
scas
pop
xor
lods
mov
clc
test
pop
ret
sub
imul
mov
pop
mov
loopne
cmp
cs
scas
mov
inc
jne
xchg
sbb
aam
and
dec
outsl
inc
out
aaa
out
popf
pop
mov
in
xchg
dec
push
imul
lea
shrl
in
adc
push
mov
add
stos
xor
adc
inc
sbb
jns
xchg
xchg
mov
loopne
cld
rcl
inc
pusha
outsb
aad
outsl
mov
mulb
inc
out
xor
jl
sub
jb
int
sarb
stos
test
adc
ret
sarl
mov
imul
jne
xor
stos
pop
pop
fstps
into
inc
push
stc
mov
dec
dec
outsl
aam
jl
pop
clc
scas
out
add
pop
out
cmp
shll
and
mov
out
xchg
dec
popa
or
int3
imul
mov
arpl
scas
into
push
xor
in
out
xor
xchg
xlat
movsl
lea
mov
add
incl
mov
test
mov
ret
mov
jnp
popf
arpl
cld
sbb
xchg
lret
and
scas
addr16
int
dec
test
lods
cmp
pop
je
mov
push
sarb
int
pop
aas
mov
lods
call
test
dec
mov
fiadds
mov
int
mov
repz
sbb
in
and
ficoml
lods
mov
movsb
inc
xlat
adc
pop
pusha
add
lea
or
outsl
sub
flds
aaa
add
cmp
ljmp
xchg
inc
fs
or
and
out
jae
test
and
jg
jae
push
sbb
jnp
push
mov
or
mov
lret
xlat
xchg
lock
fs
mov
sbb
cmp
pop
stos
fimull
sbb
push
imul
pop
daa
jle
push
inc
ja
pop
pop
jno
mov
xor
loop
lret
aad
pusha
divl
loopne
arpl
jecxz
mov
jbe
xchg
mov
scas
icebp
mov
les
xor
fists
jns
jge
in
dec
or
and
loope
lods
xchg
adc
push
es
mov
pushf
daa
fidivrs
pop
sub
das
and
fdivr
mov
movsb
cld
mov
cs
pop
xor
jge
aaa
jecxz
mov
inc
insb
mov
sub
lret
pusha
popf
jmp
icebp
sbb
sub
xchg
int
mov
repnz
pop
je
mov
pop
inc
push
jle
rclb
or
adc
pop
out
pop
dec
in
mov
adc
test
bound
adc
fsubrs
stos
dec
add
or
lods
push
arpl
popf
adcl
aaa
xchg
shll
outsl
push
stc
repz
push
adc
push
mov
pop
jno
mov
cmp
mov
mov
mov
dec
paddsb
push
mov
pusha
cwtl
lods
xor
cmc
shrl
mov
out
bound
push
or
mulb
pop
xor
fwait
pop
cld
push
or
mov
bound
mov
ljmp
xor
cli
test
loopne
cmp
push
mov
mov
sbb
sbb
cld
stos
and
jmp
xchg
ja
aas
and
cmp
shll
das
adc
and
xor
loope
hlt
xchg
mov
dec
jne
xlat
push
sbb
cmp
add
jns
mov
mov
fcoml
push
xchg
ja
dec
push
mov
enter
push
cmp
out
cmp
ss
movsb
shrl
jecxz
add
push
subl
into
gs
jl
xor
in
pushf
xor
fldcw
add
mov
dec
adc
push
aas
nop
dec
data16
pop
shlb
movsb
pop
mov
push
lahf
scas
pop
in
imul
adc
fldcw
xchg
stos
mov
rolb
jb
pop
cmp
pop
cmp
fidivl
mov
cmpsl
testl
bnd
cmp
sbb
jmp
and
or
inc
or
sbb
inc
push
cmp
mov
idivl
dec
add
inc
push
mov
push
aaa
or
imul
aaa
lahf
cmc
out
dec
cwtl
mov
inc
sarl
xorb
cld
push
sbb
loope
xchg
movsl
icebp
sbb
xchg
xchg
cmp
xchg
imul
iret
aam
or
and
and
mov
jno
shll
out
sbb
inc
pop
out
pop
xchg
sub
sbb
mov
outsb
dec
mov
push
pop
cmp
inc
sbb
xorb
or
lret
xor
and
jo
repnz
dec
jns
jle
test
push
sbb
dec
popf
inc
cld
adc
mov
cmp
imul
xor
les
xor
nop
sbb
fstpt
insb
shlb
cltd
xor
mov
xlat
pop
pop
jno
cltd
cltd
xor
pop
stos
lret
adc
push
pop
jle
jle
inc
xlat
outsb
jae
test
sbb
imulb
mov
jns
daa
loopne
mov
sbb
sbb
decl
insl
xchg
test
clc
xchg
insl
lock
test
xor
xor
mov
sbb
and
mov
push
sbb
lock
or
nop
jmp
mov
xorb
rcrb
mov
push
in
push
pop
shrb
and
shll
adc
adc
xor
fwait
or
pusha
pusha
dec
loop
icebp
cmp
and
pushf
rcrb
sub
pop
addr16
je
mov
inc
xchg
xor
ret
testb
js
nop
daa
rcrb
push
sub
and
fs
add
mov
cmp
pop
inc
fs
out
loopne
cmp
popf
cmp
out
rol
ja
lret
scas
push
nop
ljmp
and
out
bound
iret
xor
mov
addr16
stos
cwtl
mov
jbe
fucom
ljmp
in
sbb
xchg
cmp
arpl
vpshufd
pop
stos
cmp
adc
fistps
inc
mov
lret
cmpsl
in
add
dec
pop
in
fldt
mov
mov
xchg
xor
into
out
add
ja
push
je
rorb
pop
mov
push
push
dec
pop
add
into
ss
mov
fwait
push
sub
fs
mov
jbe
dec
test
testl
loope
pop
sti
and
in
loop
jbe
sbbl
sbb
ja
out
out
je
cmp
inc
bound
stc
pop
dec
insl
popf
ja
mov
or
cli
sbb
and
test
pushf
fnstenv
sbb
xorb
pop
sbb
dec
add
popa
cmpsl
jp
mov
cmp
int
sete
sahf
in
pusha
xlat
and
loop
int3
dec
jo
push
jae
rcl
lret
add
pop
ret
mov
sub
dec
test
adc
push
bnd
mov
aas
loopne
adc
in
inc
lods
jae
out
fucomi
and
inc
sti
fisttps
outsb
cmp
decl
push
mov
cmpsl
xchg
js
or
cmp
add
in
pop
push
cltd
cmp
push
data16
test
fucom
mov
sbb
or
cltd
imul
lret
and
mov
pop
add
popl
pop
mov
bound
test
push
or
and
mov
cld
mov
add
push
cmpsb
es
ja
jge
dec
in
das
mov
jne
xchg
das
inc
xchg
pop
ljmp
mov
shr
or
pushf
mov
and
stos
push
clc
adc
dec
xor
nop
imul
arpl
xchg
pushf
and
xchg
jl
dec
adc
fs
icebp
xchg
xorl
mov
divl
add
imul
mov
pop
and
jmp
sbb
insl
sti
lahf
push
into
fmull
addl
arpl
cmpsb
xor
loopne
imul
imul
jp
dec
sub
sbb
and
inc
in
js
test
mov
adc
int3
lret
fidivs
inc
mov
cltd
jle
imul
arpl
jle
cmp
mov
push
repnz
push
xchg
cmpsl
in
in
adc
ss
lock
scas
push
push
sbb
int
outsb
cmp
cmc
dec
add
repz
pusha
xchg
jno
repnz
test
push
cmp
std
cmpsl
lret
int
sub
lcall
jg
and
lahf
mov
ret
cmc
popa
clc
es
mov
sub
int3
arpl
in
ret
test
sbb
dec
inc
or
cmp
sub
xor
ja
lds
jmp
sbb
jmp
mov
leave
jmp
mov
or
add
daa
xchg
or
cmp
push
jmp
sarb
mov
add
pop
jge
inc
jmp
arpl
outsb
xor
imul
sti
out
ss
loopne
cmc
mov
or
cmp
bound
lds
pop
data16
jl
add
sub
rcr
insb
sbb
xchg
mov
jmp
add
cmc
jmp
cli
adc
adc
movb
sbb
jae
sub
in
jno
push
dec
sbb
mov
sub
push
das
lods
dec
dec
inc
loop
dec
imul
arpl
and
data16
pop
mov
mov
jp
adc
cmp
out
ss
pop
push
pop
loop
jo
popa
sub
enter
cmp
ret
pop
dec
dec
js
jge
cmp
fstpl
in
mov
sarl
add
sub
enter
pop
in
dec
dec
xor
cmp
cmp
les
dec
rcrb
mov
pushf
add
into
jg
cmp
inc
xchg
ljmp
cmp
xchg
jae
jbe
jno
sbb
xchg
clc
cwtl
cltd
jb
or
rcrl
xchg
push
cmp
mov
int3
insl
add
pop
mov
fwait
xchg
sbb
je
icebp
popf
push
mov
stos
jmp
add
dec
inc
and
pop
pop
enter
and
aad
popa
subl
cmp
aaa
sub
sahf
xor
testb
push
pushf
mov
gs
xor
icebp
sub
mov
jno
and
int3
jmp
in
ffreep
sarb
mov
movsl
mov
nop
mov
jmp
inc
xchg
stos
inc
lret
pushf
xor
mov
ss
aad
js
mov
mov
into
ja
jge
pop
sub
outsl
rcl
jmp
fisttps
sti
jmp
dec
add
xor
and
or
or
leave
push
jp
sub
sbb
sub
ficomps
lret
xchg
pop
sbb
test
push
movsl
adc
xchg
or
push
fidivs
inc
dec
int
push
and
dec
dec
dec
ret
sbb
mov
in
enter
lahf
lock
mov
push
jb
cmc
cmpsb
jo
lea
stc
xchg
je
sbb
xchg
dec
and
xchg
inc
inc
insb
mov
int
mov
rcl
sub
loope
xchg
mov
or
add
hlt
in
loopne
lahf
sub
dec
push
ds
out
ret
rclb
lea
mov
pop
rcl
loope
mov
mov
daa
pop
inc
fisubrs
and
mov
cwtd
pop
sub
std
sti
dec
out
mov
cmp
nop
push
sti
stc
nop
xor
loopne
adc
inc
mov
jbe
lock
xchg
popf
inc
add
jl
pushf
bound
cld
xchg
test
mov
mov
mov
add
pop
inc
int3
inc
cwtl
xorw
mov
fsubrs
or
xchg
add
clc
sahf
dec
mov
mov
inc
cmpsl
vrcpps
lahf
inc
int
loop
hlt
jb
mov
movsb
cmp
sbb
lods
ret
sub
xchg
and
pop
xor
mov
stc
divb
cmpsl
pop
push
push
ljmp
mov
cmpsl
xchg
shlb
adc
lret
aas
xchg
xlat
jmp
mov
addb
in
sbb
dec
cltd
fs
push
sub
lret
loop
inc
inc
add
orl
in
sub
lahf
add
push
xor
test
outsl
mov
repnz
mov
jle
mov
sub
inc
lds
mov
stos
nop
and
cmp
push
orl
inc
or
pop
dec
aaa
int3
mov
and
pop
mov
jne
pushf
lret
repz
jmp
push
out
test
xchg
idivb
movsb
jno
test
and
mov
mov
mov
pusha
sbb
inc
push
test
mov
je
sbb
mov
cmp
out
adc
or
jbe
inc
add
nop
imul
test
shl
adcl
aas
dec
loop
jno
or
xchg
dec
stc
jecxz
daa
adc
fs
xchg
push
daa
arpl
mov
data16
lds
sti
xchg
out
dec
ret
dec
mov
mov
add
sub
rolb
sti
jbe
scas
and
mov
aaa
ret
dec
push
out
loopne
push
loope
or
mov
cmp
add
mov
xor
mov
test
lds
das
out
aam
pusha
ds
mov
push
fildl
in
scas
xchg
fs
add
dec
mov
out
or
fcmovbe
fcoms
out
xchg
sti
mov
add
xchg
int
xchg
xchg
xor
lcall
cwtl
xchg
sarb
fs
lds
adc
loop
lret
lock
add
lret
lea
fsub
fdivp
jp
and
jno
ja
sub
sub
movsb
sub
adc
inc
call
cwtl
or
je
xchg
dec
cwtl
out
ret
xor
jbe
xlat
pop
adc
arpl
ja
enter
hlt
sub
sub
adc
xor
movsl
idivl
enter
push
or
push
out
sahf
test
jne
xchg
mov
popf
pop
xor
push
lret
shrl
ljmp
mov
in
xor
sarb
mov
push
repz
add
pusha
imul
sub
and
test
aad
mov
pop
hlt
xor
dec
int
loope
call
leave
mov
inc
pop
and
jecxz
and
push
mov
mov
decl
mov
and
popf
sbb
shll
ljmp
ret
inc
popf
shll
lds
pop
mov
or
xchg
sbbb
es
es
dec
inc
ret
gs
cmpsb
out
mov
insl
adc
xor
test
leave
xor
paddsw
sub
dec
pop
out
loope
pop
or
lock
out
mov
inc
mov
sub
iret
mov
mov
jne
mov
xchg
pop
mov
mov
std
xchg
repz
mov
imul
sti
jmp
and
scas
out
aad
call
pop
jmp
scas
test
inc
adc
enter
pushf
mov
cmp
jl
jb
pop
clc
dec
fbstp
sbb
outsb
jo
jl
cmpsb
push
idivb
in
andb
dec
jecxz
and
push
aad
mov
jo
pop
adc
ja
xor
jecxz
fisubl
and
and
outsl
mov
push
fdivrs
pop
mov
lcall
fnstcw
jnp
sub
imul
lock
movsb
je
push
into
fsin
or
rorb
popf
aad
inc
inc
shlb
lods
inc
jle
subl
sub
cmp
mov
es
fisttpll
test
xchg
out
vcvtpd2psx
das
sarl
faddl
addr16
fsubrs
xor
aas
lods
mov
xor
cli
dec
dec
icebp
sbb
cmpsb
arpl
inc
subl
test
sbb
movsb
orb
imul
out
stos
into
enter
bound
movsl
sbb
mov
cmp
outsb
sub
lds
xchg
addb
imul
push
xor
mov
mov
repz
fsubl
int
stc
pop
push
xchg
mull
jbe
mov
mov
test
gs
mov
arpl
mov
incb
fs
mov
shrb
mov
jns
dec
cmp
fcoms
hlt
dec
inc
loope
cmpsl
adc
jnp
aaa
in
adc
push
scas
imul
negl
push
test
mov
mov
fidivrs
mov
pop
insb
push
ficoms
test
std
adc
xor
je
sbb
mov
adc
cld
sbb
mov
pop
cmp
bound
adc
inc
fstl
jg
pop
and
push
mov
call
inc
mov
es
mov
icebp
loopne
mov
inc
mov
cmp
rcrl
jp
push
add
mov
data16
aaa
lahf
sbb
or
jecxz
lods
xchg
xchg
cmpsb
jmp
daa
test
lods
ljmp
pushf
mov
lret
shlb
gs
mov
inc
ds
xchg
mov
mov
sbb
dec
loopne
lods
sahf
jle
lcall
xor
xor
adc
rorl
adc
jle
insl
nop
ret
adc
insb
cmc
push
sbb
inc
and
pop
or
into
in
add
xor
and
push
push
pop
adc
ja
adc
lret
adc
ja
fcomps
sarl
mov
rcrl
push
cs
dec
sub
mov
mov
add
xchg
jp
cmp
jae
cwtl
aam
xchg
cli
or
and
fistl
sbb
push
add
inc
adc
mov
sub
or
xchg
jle
pushf
jg
xchg
add
mov
negl
xlat
mov
out
push
movzbl
push
pop
dec
mov
sti
stos
ficoml
testb
bound
rcrl
jno
lds
loop,pt
fisubrl
xor
jno
aaa
jmp
add
cmpsl
sub
aam
or
daa
or
inc
aad
in
lret
lret
xchg
inc
stos
aam
fld
fdivrl
hlt
xlat
mov
call
test
insb
pop
mov
repz
or
pop
mov
bound
xor
jno
push
in
mov
inc
je
shrb
sbb
push
mov
mov
test
scas
xchg
jbe
fistl
push
stos
scas
shl
js
inc
sub
fchs
inc
jae
add
lret
jp
xchg
fdivs
mov
pop
aaa
notl
stos
sbb
stos
int
mov
shll
sub
ja
mov
adc
test
out
jo
xchg
sub
dec
cmp
jbe
push
sbb
movsb
aaa
nop
btc
dec
data16
jge
fsubs
mov
or
sub
mov
pop
andl
mov
pop
or
insl
or
pop
cmp
cs
popf
dec
cmpsb
jecxz
mov
test
adc
lret
push
fwait
ss
push
pop
scas
push
test
lret
jo
and
xchg
dec
lahf
mov
out
pushf
dec
and
cmp
dec
jbe
rclb
jge
clc
mov
bnd
pop
repnz
scas
push
xor
addb
inc
arpl
outsb
shrl
jl
jnp
mov
jecxz
push
sbb
jae
test
scas
fdivr
fdiv
push
sbb
inc
or
xor
sub
lahf
lds
popf
mov
mov
ss
in
cmc
icebp
test
testl
fcmovbe
pop
repz
std
aad
test
leave
pop
inc
jg
jmp
push
mov
add
orb
mov
jnp
dec
ret
dec
in
ljmp
xor
xor
test
pop
cmpsl
aas
fsubrs
leave
pusha
pop
mov
or
out
outsb
mov
cmp
xor
call
repz
jo
adc
jne
lock
in
ljmp
sub
fwait
jge
mov
push
aad
inc
inc
enter
add
inc
daa
outsl
js
fwait
sti
pop
test
cmp
rorl
sbb
inc
ja
mov
les
mov
push
fimuls
les
test
or
and
push
mov
sub
add
movsl
or
int3
dec
sub
jb
aad
and
int
adc
xbegin
loop
mov
pop
cmovbe
pop
fucomp
mov
dec
mov
cmp
inc
fsubrl
in
mov
aaa
pop
mov
test
push
in
add
popl
scas
and
inc
fstpl
xchg
pop
stc
sbb
dec
daa
xor
fcoms
popa
in
popa
pop
subb
aam
lods
les
fnsave
xchg
loopne
sti
jnp
bound
jp
or
sub
mov
loope
jbe
bound
insl
dec
and
popa
int
add
mov
pop
and
notl
push
jmp
xor
jo
pop
int
add
nop
mov
dec
test
shrb
jl
sub
or
mov
outsl
std
pop
add
ret
push
pop
movsl
shrb
dec
mov
arpl
pusha
add
inc
push
imul
xchg
leave
test
mov
mov
dec
xor
dec
nop
sub
dec
mov
xchg
dec
pop
push
pushf
push
mov
jns
test
repnz
and
cmp
fcompl
je
cmp
mov
mov
int
iret
les
in
dec
sub
lea
adc
and
fmull
jp
and
xor
jbe
or
cmc
in
ret
dec
push
sbb
or
sbb
out
js
xchg
test
inc
mov
mov
repz
add
or
fcoms
lock
ret
fistpl
rclb
jl
and
mov
stos
int3
mov
or
and
lea
sti
stos
addr16
fiaddl
and
sub
inc
rcll
adcb
inc
out
mov
push
lods
test
flds
and
inc
jb
cmc
aaa
mov
movsb
xchg
push
fisubs
mov
in
aas
lret
ror
mov
mov
mov
movsl
das
inc
mov
jmp
sbb
hlt
dec
adcl
pop
mov
mov
pop
push
mulb
jmp
aam
sub
sahf
mov
adc
jecxz
repz
stos
nop
aaa
into
add
leave
lods
rolb
adc
push
mov
movsb
movsb
cmpsb
cmp
imul
ret
mov
lock
icebp
outsl
daa
das
push
or
xchg
js
enter
leave
sbb
dec
out
pop
in
mov
jg
cmp
imul
pinsrw
xchg
in
popf
xchg
sub
add
xorb
movsl
mov
xchg
insl
test
loopne
ret
add
jecxz
jecxz
jae
movsb
sub
mov
test
mov
sbb
lahf
mov
int
cld
push
fstpt
pop
and
xor
and
pop
pop
clc
sbb
sahf
or
pop
inc
jmp
adcb
shrl
jnp
gs
out
sahf
jbe
inc
fdiv
jno
pop
aaa
push
loopne
mov
mov
push
mov
lods
add
insb
xor
aaa
ja
jle
fs
sbb
arpl
or
or
dec
push
push
jnp
pop
lock
out
dec
insl
xchg
add
enter
or
mov
pusha
fcom
mov
andl
mov
iret
xor
cmpsl
or
test
dec
ds
xor
sarl
xchg
das
test
xor
xor
jbe
inc
ljmp
outsl
arpl
xchg
mov
or
ss
fwait
jno
mov
loope
insb
push
pcmpeqd
test
adcb
subl
mov
inc
add
and
les
add
push
pop
mov
pushf
andb
out
mov
push
mov
scas
jle
dec
sub
xchg
js
push
cs
pop
mov
or
or
pop
das
or
in
add
jbe
cmpsl
cmp
dec
sti
inc
jp
sarb
xor
scas
sbb
adc
fldl
push
xor
test
push
sub
aad
fucomip
iret
adc
or
add
sbb
imul
push
jge
int
pop
movlps
cmp
jecxz
mov
loopne
sbbl
scas
int
pop
sarb
mov
push
add
aaa
scas
call
int3
popa
jnp
and
or
hlt
push
movsb
movsb
dec
add
dec
lahf
sbb
cmp
imul
fimull
pop
and
xor
imul
hlt
xchg
or
xchg
das
imulb
pop
mov
jecxz
test
or
stos
xchg
lahf
or
mov
cmp
fldcw
jmp
and
xor
push
scas
test
sbb
rolb
jp
repnz
dec
hlt
sub
test
dec
pop
pushf
inc
push
pop
mov
cmpsb
dec
pop
and
mov
and
inc
arpl
imul
rolb
scas
jb
insl
pop
aam
add
lahf
mov
push
mov
mov
jne
and
mov
push
cmp
add
imul
xchg
fcomps
nop
fmull
orb
cmpsb
scas
mov
adc
pop
fistps
push
or
hlt
and
lods
mov
adc
push
scas
in
mov
adc
arpl
call
divb
popa
in
es
xor
js
lods
push
mov
xchg
arpl
cmp
test
daa
inc
xor
das
stos
in
nop
ds
xor
mov
xchg
inc
aaa
jle
push
sub
xor
mov
test
lods
push
je
cmp
dec
stos
xlat
pusha
jb
loopne
sub
jb
inc
push
flds
mov
cmc
xchg
out
pushf
repnz
lret
mov
sub
sbb
scas
lcall
fildll
cmpsl
out
and
xchg
or
das
leave
sub
jb
add
loope
insb
loope
or
shrb
insb
rol
imul
adc
scas
and
add
add
add
push
iret
sahf
lea
std
pop
outsl
inc
or
outsl
add
push
cs
fistl
fs
ljmp
int3
popl
dec
push
inc
dec
push
fisubrl
movsb
in
inc
dec
int
sahf
push
xchg
divl
push
xchg
adc
cmpl
mov
ret
xchg
mov
push
leave
lods
inc
or
mov
xor
mov
push
xor
movsl
sbb
fdiv
mov
ret
call
add
mov
add
sbb
and
xchg
sub
and
xor
les
adc
adc
jg
mov
adc
shl
in
push
cmp
mov
aaa
push
and
cwtl
push
jnp
inc
lds
push
pop
cmc
into
xchg
scas
cmp
xchg
dec
push
out
jge
mov
jg
jmp
fistps
int3
pop
inc
mov
xchg
insl
dec
or
xor
loope
mov
inc
pop
lcall
inc
fiadds
push
dec
hlt
lods
xor
mov
sbb
mov
fdivp
jmp
dec
rcll
movsl
dec
fs
xlat
repz
repnz
fcmovne
jno
mov
push
outsl
movsl
icebp
inc
push
jge
or
pop
pop
push
push
mov
jecxz
mov
xchg
and
xlat
mov
mov
and
mov
jne
push
stos
add
fidivrl
js
andb
insb
ret
or
push
repnz
jns
pushf
idivl
push
insb
lods
fimuls
add
call
movsl
push
mov
loopne
mov
into
or
jecxz
jb
dec
mov
inc
stos
movl
cmpsl
xchg
pop
push
dec
lods
icebp
lods
push
xchg
ficomps
notl
mov
dec
in
repnz
lea
or
movsl
test
and
adc
aaa
push
push
test
cmpsb
mov
mov
les
lods
push
dec
addl
adc
out
pop
xor
or
movsb
mov
dec
xchg
jne
sub
push
add
imul
mov
pop
mov
cmp
movsl
push
les
dec
dec
scas
jp
add
fsubrs
cmp
sahf
mov
lds
mov
fucomip
cltd
imul
in
and
outsb
fmulp
add
jns
and
xchg
push
insl
inc
dec
insl
frstor
mov
js
and
xchg
jg
ret
and
ror
test
in
push
mov
sub
xchg
mov
sbb
in
xor
pop
les
sub
out
out
cmpsl
sub
rcrb
sti
mov
gs
icebp
movsl
test
and
fildll
mov
das
or
popl
int3
xchg
aas
testb
inc
cmc
int3
cmpps
int
add
jne
hlt
sub
inc
scas
testl
push
lods
and
fnstsw
sbb
ret
rclb
add
lods
nop
push
sub
out
push
push
dec
shld
sbb
push
int3
and
repz
out
ds
add
push
enter
push
popa
retw
push
das
cmp
out
xchg
shrb
lods
dec
dec
dec
dec
jae
mov
out
xor
xchg
orl
inc
bound
mov
mov
mov
sbb
cmc
mov
andb
pop
je
scas
das
jmp
gs
jnp
shll
sub
cmc
cmp
fst
out
pop
mov
arpl
inc
xchg
sub
test
mov
jo
imul
pop
mov
or
fstpt
push
jmp
sbb
cmc
cmp
std
and
pop
imulb
clc
std
and
imul
jae
sbb
dec
mov
cmp
or
sub
test
inc
into
push
loopne
lds
mov
jl
ret
mov
sahf
repz
test
fld
pop
out
in
es
dec
lret
lret
loope
aas
jnp
or
stc
pushf
aam
push
push
ljmp
jno
cmp
mov
sbb
and
pop
pop
in
push
cwtl
shlb
xor
lret
adc
popf
sub
xchg
push
out
sub
movsb
push
pusha
xor
testb
fisubrl
inc
lods
popa
pop
xor
inc
es
popa
cmp
in
sbb
jae
outsl
popa
adc
xchg
mov
mov
in
loopne
pop
sub
pop
sub
shrl
push
jl
or
out
jo
inc
add
mov
imul
mov
outsl
mov
sar
inc
cmp
pop
jbe
mov
data16
mov
jle
add
add
inc
jle
stc
and
mov
fsubr
or
add
xor
push
outsb
add
fnstenv
push
lock
mov
lcall
sub
jno
jl
cmp
fisttps
pop
fnstenv
ds
test
leave
pushf
and
inc
mov
mov
jle
mov
loope
je
pop
xor
sbb
inc
jo
jns
lock
fisubs
cmp
inc
sub
dec
int3
mov
rcrl
pop
dec
or
mov
inc
and
movsb
push
or
mov
fwait
out
iret
adc
jle
aaa
mov
fcmovnu
and
jmp
adc
mov
ja
xor
movsl
pop
fs
lahf
outsb
push
jge
cmpb
mov
loopne
fprem1
sub
aam
fnstenv
mov
ret
outsb
push
mov
scas
shlb
push
idivb
push
sub
movsb
jns
jns
mov
push
jg
pushf
hlt
cmp
test
push
add
mov
pusha
jmp
push
adc
dec
test
push
adc
mov
jno
xlat
jnp
cmp
mov
dec
adc
adcl
sbb
test
arpl
jns
jecxz
dec
sbb
pop
lahf
in
fcmovne
lods
subb
mov
cltd
and
adcb
or
inc
imul
adc
mov
push
js
sbb
loop
or
mov
int3
jge
inc
cwtl
jmp
cmp
and
hlt
aaa
hlt
lock
es
fwait
or
movsl
xchg
orl
inc
enter
aaa
pop
lret
push
push
jmp
jb
adc
aad
pop
test
mov
dec
cmp
das
add
call
add
mov
sub
xchg
jb
ss
adc
dec
dec
ret
xor
sbb
cwtl
or
adc
xor
rol
dec
push
jnp
xlat
and
popl
or
cmpsl
inc
or
in
clc
call
and
sbb
fwait
jae
call
or
scas
es
imul
adc
fs
nop
mov
enter
insb
lea
and
idivb
jl
pushf
loopne
mov
dec
xor
push
add
push
jmp
xchg
mov
dec
leave
and
mov
xchg
enter
bound
xchg
imul
scas
sbb
js
fwait
mov
test
push
test
add
das
push
icebp
lods
daa
inc
cs
push
hlt
lret
je
scas
leave
into
jg
and
xchg
lock
iret
mov
ret
cli
or
xchg
inc
aam
into
jno
mov
and
xor
push
mov
shlb
sub
scas
sbbl
lods
loop
pop
out
inc
sbb
add
adc
jmp
icebp
mov
movsl
cmc
push
jmp
inc
jne
mov
jb
aas
and
fs
jbe
les
scas
out
pop
push
in
ljmp
sbb
mov
push
fdivrp
or
arpl
imul
mov
dec
cmpsb
addl
loop
jp
aad
mov
jg
dec
loope
aad
enter
pop
cmpl
mov
inc
jb
xlat
push
xchg
inc
mov
push
or
stos
lahf
inc
lahf
pop
out
fimull
xor
xchg
dec
loope
jg
stos
mov
mov
and
sub
sbb
lret
fwait
push
lock
daa
mov
ljmp
out
lods
int
pop
add
xor
je
out
pop
rcrl
cmp
outsb
xchg
dec
xor
pop
je
adc
mov
pushf
jns
inc
mov
jmp
adcl
in
cmp
adc
nop
inc
inc
fwait
pushf
testl
dec
xchg
and
xchg
cmp
imul
push
jmp
push
loope
ret
sahf
pop
in
dec
or
in
jp
xor
scas
inc
popl
mov
stc
jae
into
enter
push
rcll
fadds
sub
jmp
popa
jnp
xchg
repnz
xchg
or
and
add
mov
mov
test
mov
icebp
adc
cmp
sbb
or
ret
test
mov
push
test
pop
sahf
stos
sub
inc
and
movsb
lret
mov
mov
cwtl
lret
mov
fsubr
cwtl
xchg
arpl
call
cs
in
int3
push
sarb
scas
jae
imul
js
xchg
pop
mov
dec
xchg
mov
out
scas
fmuls
scas
faddp
rclb
ret
jle
cld
mov
shlb
or
pop
mov
adc
add
cmpsb
sub
mov
sbb
dec
jo
mov
xchg
pcmpeqb
sahf
hlt
repz
not
xor
sub
adc
add
imul
jecxz
adc
cmpb
cmp
inc
mov
adc
or
cltd
push
pop
mov
aam
cld
lcall
fiaddl
pop
xchg
sub
adc
ud0
rcrl
or
push
rorl
xor
out
movsl
inc
into
gs
lods
fistl
xchg
xchg
aam
test
xchg
inc
add
and
mull
jnp
dec
stos
cld
cmc
pop
lods
mov
scas
xor
es
mov
fstpt
stos
rolb
jp
pop
xor
ja
aas
pop
outsb
pop
sub
ds
jae
xchg
mov
jbe
bnd
test
pop
and
shlb
jmp
stos
and
sti
setle
enter
outsl
jge
cmp
les
dec
push
or
jg
insl
cmp
xor
or
dec
and
adc
outsb
fildll
out
int3
sbb
add
pop
dec
jo
jp
fmul
jl
cmp
cwtl
je
pop
xor
mov
loope
sbb
dec
mov
test
clc
sbbl
loopne
sbb
in
xor
pop
lock
xor
add
loop
les
adc
in
stos
in
test
int
rol
and
sub
pop
lods
sbb
mov
lds
sub
pop
cwtl
stos
mov
in
test
les
pop
and
movsb
out
jo
vmovddup
in
andl
scas
outsb
dec
cs
shlb
leave
hlt
into
xor
fldcw
sbb
arpl
popa
ljmp
stos
loop
pop
inc
mov
inc
es
pushf
pop
and
sub
hlt
clc
es
ja
push
pop
xchg
sub
xchg
sbb
pusha
ret
out
add
inc
and
outsl
add
sbb
or
clc
out
out
bnd
fnstenv
pop
mov
jo
mov
in
inc
add
scas
in
imul
mov
mov
jg
xor
jmp
add
push
jmp
daa
imul
push
xlat
pushf
loop
sbb
push
xchg
push
add
push
mov
xchg
arpl
movb
lcall
pop
imul
test
or
jl
aad
jbe
out
test
pop
mov
dec
cmpsb
jno
fsubrs
das
cmp
rcl
xor
lahf
mov
dec
push
mov
cltd
lods
xchg
jmp
xor
mov
jns
ret
and
ret
repnz
cmp
das
inc
addr16
in
cwtl
mov
xchg
orb
sti
lea
pop
dec
xor
call
mov
xchg
mov
mov
or
ret
es
push
nop
addb
dec
mov
enter
mov
sub
daa
or
ret
lret
push
mov
outsb
and
add
mov
push
movd
mov
popa
jno
xchg
in
xor
inc
aam
fimull
mov
inc
and
testb
arpl
inc
test
mov
fstpt
hlt
scas
nop
cmp
dec
not
dec
mov
fsub
popa
fwait
xor
sbb
sub
push
sub
sbb
or
mov
or
cmp
cmp
or
push
cmp
inc
out
cmpb
add
mov
push
aaa
cmp
sbb
sub
insb
cli
fdivr
lret
testb
inc
lea
sbb
and
mov
aam
ficomps
lock
xor
inc
fucomi
adc
test
push
sbb
sbb
movl
ds
in
add
fimuls
pop
ds
xlat
insl
mov
adc
lods
add
sub
fsub
shrb
cmp
and
sub
pop
movsl
cltd
add
mov
add
outsb
add
es
pop
repnz
lea
adc
movl
or
and
sbb
inc
dec
out
aam
aas
mov
call
pop
mov
stos
retw
outsl
sbb
xchg
jle
sub
lret
inc
lret
xor
push
pop
call
jnp
test
push
gs
daa
pop
or
jne
and
lret
movl
insb
les
out
sbb
pop
mov
loop
rorb
adc
fs
lds
xor
loopne
mov
pop
mov
mov
mov
out
jmp
xchg
insl
lret
jno
mov
imul
inc
add
jb
xchg
xor
push
inc
add
push
sbb
inc
mov
aam
cld
jle
cs
xor
inc
add
inc
mov
in
push
inc
xlat
and
popa
cs
xchg
lret
popa
mov
icebp
and
fstpl
or
sbb
inc
or
mov
loopne
adcb
sub
mov
pop
and
je
cmp
loope
pop
sub
lods
cmp
call
mov
out
jns
mov
sahf
daa
push
roll
shll
pop
inc
fidivs
rcrl
aaa
and
cli
sub
or
sbb
xchg
mov
dec
pop
fidivl
je
xor
sti
dec
scas
jl
scas
lods
ror
xor
stos
push
push
add
sti
dec
and
mov
addr16
dec
aam
inc
stos
iret
mov
imul
mov
mov
mov
arpl
xor
xchg
rol
mov
int3
pop
ja
ja
push
mov
or
push
add
les
test
add
xorl
or
push
repz
and
push
sbb
dec
mov
pop
fnstsw
add
xor
mov
xchg
inc
push
lods
arpl
push
mov
loopne
jmp
fildl
rcrb
dec
movsb
out
enter
sub
or
pop
lods
xor
hlt
stos
mov
mov
daa
aad
or
sbb
fisubs
or
xor
jecxz
out
iret
outsl
lods
jecxz
cltd
mov
pop
pushf
dec
aad
mov
repnz
sub
stc
or
lahf
scas
xchg
adc
test
sti
aas
cmp
leave
out
cmpsb
clc
std
or
sbb
into
addr16
mov
movups
repnz
call
out
jg
add
push
popf
lcall
mov
sbb
sarl
lret
or
jecxz
push
dec
mov
fwait
cwtl
jg
inc
outsb
cmp
jp
adc
mov
mov
jg
jb
in
jbe
dec
xchg
int
cmp
jae
pop
sub
movsl
push
mov
cmp
in
jns
sub
xchg
mov
call
mov
loop
stos
mov
push
scas
xor
imul
push
icebp
mov
loop
outsl
fmuls
push
idiv
jge
lcall
and
popa
out
push
outsl
mov
lahf
mov
imul
pop
sbb
xor
pusha
cmp
popf
push
out
xchg
sbbl
sub
pop
jp
lret
cld
in
add
or
push
fnstenv
pop
out
test
repnz
incl
cmp
jb
or
and
pop
in
scas
ljmp
jb
imul
jne
mov
lock
pop
loope
push
in
lods
int
sub
scas
imul
aam
movsb
adc
mov
sub
push
xchg
sub
inc
ja
xor
push
dec
pop
xchg
fld1
clc
mov
mov
imul
xchg
sbb
push
test
inc
cmp
lods
jne
push
xor
repz
dec
sub
mov
aam
sub
in
cld
mov
call
push
mov
push
outsb
mov
shll
push
mov
jno
mov
xchg
dec
ficomps
jle
jl
pushf
scas
jmp
jo
out
sahf
xchg
shll
outsl
mov
mov
dec
push
jl
mov
dec
aas
inc
aas
push
aas
push
mov
sbbl
lods
lret
adc
push
push
pushf
jnp
into
jb
shrb
and
jns
cmpsl
mov
sbb
lahf
repz
dec
sbb
dec
insl
and
jp
cmp
sbbb
sti
lret
mov
mov
ret
push
out
sbb
jb
dec
enter
jl
pushf
sub
push
orb
not
lea
sahf
mov
mov
in
cmpsl
lret
ss
aam
sbb
ss
and
lcall
pop
pop
icebp
insb
xor
jmp
mov
insl
jae
lahf
nop
sub
mov
fsub
jge
aas
mov
xlat
std
cmp
jg
icebp
pop
leave
mov
clc
ja
stc
ror
mov
mov
jb
das
fidivs
ficomps
fsubr
cmpsb
xchg
nop
dec
adc
movsl
fnstenv
in
divb
les
cmp
mov
push
xlat
mov
pushf
loop
add
aas
xchg
call
inc
mov
cmp
inc
adc
or
jbe
pop
sahf
xor
in
adc
add
iret
and
inc
add
mov
jae
sub
dec
inc
mov
jl
add
test
std
jb
out
das
lea
mov
out
cmp
and
gs
add
pusha
js
inc
std
notl
mov
enter
ret
adc
mov
sahf
xchg
aam
xchg
add
push
xor
add
and
pop
sub
dec
adc
jecxz
lods
into
fisubrs
scas
pop
js
jge
pop
dec
ficomps
loopne
dec
cli
fsubrp
sub
mov
xor
jo
ds
dec
repz
push
add
fistps
pop
sahf
icebp
xchg
loop
sahf
imul
sub
xchg
inc
gs
push
scas
fldl
rcrl
pop
or
cs
xchg
pop
test
jnp
out
or
arpl
cltd
jmp
popf
test
dec
jbe
jge
adc
xchg
mov
jl
jno
mov
popf
xchg
lcall
icebp
mov
lods
cld
push
jb
mov
leave
ljmp
out
jl
pop
pop
popa
outsb
int
xor
dec
pop
lret
xchg
mov
or
pop
lock
jno
jbe
repnz
fcoml
xchg
je
add
xlat
outsb
xor
push
cmc
int3
scas
mov
xor
add
push
mov
popa
xor
test
lahf
add
xor
repnz
neg
lcall
push
adc
in
add
stos
xor
scas
and
pop
dec
and
push
cli
inc
jae
dec
hlt
mov
les
xchg
jae
inc
stos
pusha
jg
loope
adc
mov
jmp
xchg
inc
movsb
push
stos
ljmp
insb
test
mov
mov
or
adc
mov
sbb
push
push
or
xor
loopne
sub
int
jns
scas
les
dec
xchg
push
mov
push
mov
pushf
jmp
dec
ret
hlt
insb
out
xor
rorb
sbb
add
inc
lcall
pop
fidivs
jmp
sti
push
in
push
jb
mov
xchg
mov
mov
and
aas
mov
into
inc
aas
in
sbb
push
mov
or
ja
lcall
push
je
push
call
lods
les
cmpsl
cmpsl
mov
sar
xchg
push
jno
add
dec
hlt
dec
popf
cmpsl
dec
adc
icebp
fiadds
and
fldenv
pop
sbb
mov
mov
out
jnp
aam
popa
cld
idivb
test
lods
adc
pop
aam
fwait
cmpsl
dec
loope
cmp
iret
out
or
es
sub
dec
mov
fidivs
dec
push
ljmp
sbb
add
rcrb
add
notb
fdivp
xor
mov
sub
ljmp
push
loopne
adc
aad
ja
dec
movsl
insl
jae
lahf
and
pushf
xor
in
scas
daa
aad
popf
inc
jbe
dec
mov
movsl
xchg
lods
fildl
mov
xor
or
and
jno
mov
inc
cmpsb
not
test
aam
sbb
mov
cmc
adc
pusha
idivl
xchg
mov
frstor
mov
mov
iret
or
lods
push
jo
or
or
popf
popa
mov
inc
cmp
int3
inc
mov
dec
or
test
inc
sahf
add
cmpsl
inc
pop
xor
mov
incl
in
mov
mov
pop
jo
dec
jae
aaa
xor
dec
shrl
xchg
inc
lock
sbb
mov
in
jne
call
int
push
xor
mov
mov
gs
xchg
std
int
aam
xchg
sahf
adc
dec
inc
pop
mov
aaa
jno
and
xchg
out
xchg
dec
push
jle
adc
test
fwait
jae
xchg
add
icebp
aas
pop
ja
jmp
sbb
fimull
int3
inc
mov
mov
test
insl
stos
out
xchg
mov
cmp
pop
hlt
mov
jge
in
pop
or
or
push
inc
stc
nop
jbe
insl
test
es
mov
inc
in
pop
cmp
sbb
icebp
into
and
movsb
mov
push
push
pop
sti
xorl
movsl
fucom
sbb
dec
or
push
jb
jmp
jb
in
sub
movl
or
or
mov
xchg
imul
lahf
shlw
cltd
xchg
xor
ret
and
daa
fdivrs
cmpsl
into
cmp
inc
dec
lahf
mov
negl
pop
mov
mov
add
mov
cwtl
push
fcoml
movb
jnp
cmp
or
add
mov
push
testb
cmp
imul
fs
cli
jne
into
rcr
in
mov
stos
xchg
mov
jno
pop
fidivrs
mov
push
jmp
mov
pop
clc
inc
nop
testb
ss
fwait
addr16
cwtl
rorl
jmp
lret
hlt
and
gs
jns
push
mov
outsl
xor
sub
xchg
push
push
or
cmp
adc
loop
sahf
adc
and
and
icebp
inc
fldenv
jl
leave
in
xor
popa
int3
push
pop
sbb
sahf
jge
test
sbb
pop
mov
pop
andb
out
push
jne
hlt
movsb
pop
loopne
inc
sahf
rolb
push
adc
sbb
pop
testb
pusha
jne
rol
mov
ret
xchg
arpl
add
add
xorl
jo
cli
xor
mov
push
mov
xor
gs
push
lret
adcl
repnz
les
enter
mov
stos
cmp
push
jo
leave
loope
sbb
out
lea
arpl
dec
pop
add
mov
pop
inc
pop
cmp
pop
lds
xor
push
add
insl
add
movsl
das
xchg
lcall
ljmp
gs
inc
cmp
sbb
into
cwtl
pop
inc
ja
lds
clc
jae
outsl
xchg
dec
dec
mov
jmp
test
ja
ret
or
add
stos
xlat
cmp
dec
jecxz
mov
repz
in
mov
fadd
popa
jb
dec
movsl
jle
ret
push
mov
push
dec
sub
mov
pop
push
inc
fcmovnbe
inc
jecxz
jg
sbb
movsl
std
cltd
mov
jns
mov
in
push
adc
arpl
add
and
xchg
repnz
fsts
fcoms
subb
pop
daa
rcr
cmp
pop
dec
mov
cli
outsb
mov
incb
mov
or
outsl
movsb
pop
leave
mov
pop
cmp
sub
negl
jmp
int3
dec
addb
iret
jg
push
insb
arpl
pop
clc
jmp
and
sbb
fs
mov
insl
jnp
fstpt
stc
bound
ljmp
insb
js
mov
mov
mov
mov
add
lret
repnz
mov
loopne
fcomi
daa
cmp
push
cmp
mov
sub
outsl
sti
cmp
adc
mov
pop
call
rcr
inc
bound
lods
add
movsb
jb
lea
and
jle
and
xchg
cmpsl
fiadds
imul
stc
xor
popa
sbb
rorb
push
sub
leave
xor
add
cwtl
mov
add
mov
or
adc
faddl
pop
movsb
cmp
fidivs
jl
cmp
mov
mov
or
les
test
outsb
int3
jbe
add
outsl
ss
fwait
mov
and
xchg
and
pop
jae
pop
out
sub
xchg
push
mov
push
aam
test
mov
mov
push
jnp
pop
mov
inc
xchg
push
bound
je
lahf
dec
cmp
xchg
dec
test
push
loope
mov
incb
lods
bound
cmp
xor
add
xchg
push
fdivs
cs
lods
or
lret
push
adc
dec
fmuls
leave
repz
addb
adc
ficomps
pop
add
mov
in
psubb
test
cmpsl
dec
inc
xchg
mov
jns
mov
fldl
mov
dec
xor
cmp
shr
and
dec
pop
sbb
aam
insl
outsb
adc
or
mov
enter
sub
dec
mov
incb
pop
insl
hlt
stos
cmpsl
incl
xchg
pop
sbb
dec
mov
xor
std
adc
inc
lds
xchg
dec
inc
fisubrl
sbb
scas
les
or
mov
push
cmc
and
ds
mov
xor
mov
jmp
outsl
mov
jle
cli
imul
cmp
popa
orb
rolb
loopne
cmp
aaa
into
dec
pop
mov
addr16
dec
push
sub
push
mov
fldenv
mov
jnp
dec
xor
out
cld
jb
das
scas
cmp
push
xchg
lea
lret
cmc
xchg
jle
rol
and
fdivrp
rcl
outsl
and
jl
loop
loop
fmul
dec
imul
jge
mov
lret
xchg
add
data16
xor
sub
add
fnsave
mov
sbb
nop
cmp
pop
xchg
mov
lcall
dec
loope
sub
jg
mov
mov
fmul
mov
xor
and
push
jae
adc
push
int
bound
dec
pop
in
mov
loope
sbb
inc
ss
jle
out
or
daa
in
loopne
ds
divl
jg
sbb
sub
fwait
and
sbb
shl
scas
icebp
dec
push
shrb
xchg
jns
repz
xor
jp
jb
adc
test
outsb
push
jo
mov
movsb
pop
call
sbbb
test
sbb
mov
dec
mov
out
std
xchg
mov
andl
mov
test
orb
enter
dec
xor
mov
aad
orl
add
sbb
and
rorb
shll
aas
outsl
divl
xor
push
sbb
push
ljmp
jno
cwtl
lret
cs
in
shl
data16
data16
lods
fwait
jae,pt
stos
xor
movsl
inc
das
pop
sbb
mov
pop
add
sbbb
mov
jle
in
out
sti
xor
xchg
add
pop
imul
mov
pop
mov
xorb
popf
and
mov
repnz
mov
ret
inc
int
imul
subl
push
test
dec
test
push
stos
ret
inc
cmpsl
jecxz
mov
es
in
jae
popa
movsl
inc
sbb
sub
xchg
aas
xchg
inc
dec
xor
mov
enter
addb
and
fmul
popf
rcrb
hlt
jbe
je
mov
fistl
stos
push
mov
cmpsl
loope
icebp
cs
push
je
sbb
cltd
inc
iret
mov
outsl
sub
sub
jnp
sti
shll
sar
filds
mov
out
sub
fimuls
loop
loop
imul
call
jle
scas
jg
dec
mov
loope
mov
gs
add
into
enter
sbb
adcb
in
js
inc
mov
lods
adc
js
imul
jg
xchg
in
adcb
fucomi
nop
jb
stos
lret
outsb
pop
cmpsb
leave
jo
cmc
sbb
xlat
push
mov
cmp
ja
xlat
cmc
mov
out
dec
loopne
in
adc
pop
xchg
in
pop
clc
aam
scas
push
mov
adc
xchg
mov
mov
mov
mov
jnp
mov
and
pop
xor
cmc
or
andb
adc
bound
inc
in
clc
or
lods
stos
sahf
or
cli
gs
ljmp
and
repnz
mov
inc
xchg
push
dec
push
pop
aaa
mov
pop
mov
and
pop
jg
outsb
pop
mov
pop
test
fists
cmp
in
aad
xor
or
mov
push
lret
mov
mov
faddl
jp
adc
in
ss
and
ret
frstor
mov
jbe
cld
pop
es
push
pop
or
fsubrl
popf
std
jg
loop
pop
inc
mov
mov
sbb
xchg
mov
xor
mov
sti
ljmp
js
leave
mov
into
push
cmc
in
dec
stos
repz
jl
jne
scas
inc
pop
push
pop
lods
bound
ret
test
ret
sti
mov
lcall
mov
cmp
mov
in
jl
push
sbb
mov
jo
xlat
cmp
negl
outsb
mov
sub
shl
xor
daa
stos
xor
mov
pop
dec
or
test
dec
aas
dec
fisttpll
icebp
andl
sbb
in
insb
lcall
loop
pop
subl
test
and
jl
hlt
je
dec
dec
dec
and
outsb
dec
pop
addr16
sahf
pop
pop
inc
inc
or
stos
push
dec
mov
ret
int3
jns
insl
shll
mov
push
ret
shrd
mov
fwait
sbb
mov
gs
pop
iret
cmp
mov
pop
dec
dec
dec
dec
push
ret
test
inc
sbb
sti
fcmovu
int
xchg
sbbb
xchg
nop
adc
test
fcompl
in
sbb
and
jl
mov
pop
xor
sbb
imul
jne
sub
mov
jbe
fsubr
jb
mov
lret
or
insb
leave
test
iret
or
push
call
pop
ret
pop
mov
xor
mov
leave
xlat
into
sub
sbb
lret
cli
or
out
pop
xor
cmc
aam
int
enter
lret
or
cmp
and
cmpsl
fsubrs
pop
push
adc
rcrb
rclb
fmull
test
mov
stos
adc
orb
mov
mov
shrb
lods
nop
lods
fiadds
in
add
cli
xor
int
jmp
dec
inc
fstpt
imul
fdivrl
lret
imul
pushf
xchg
mov
lcall
pop
mov
sbb
aad
pop
xor
sahf
inc
add
push
jle
xor
fdivrl
and
aas
dec
adc
js
ja
push
push
out
jle
sarl
inc
pop
nop
xlat
dec
ljmp
jns
mov
dec
add
jl
jge
sub
jns,pn
insl
les
std
int3
jmp
aas
lahf
xor
sub
inc
fisttpl
outsb
xlat
stos
lea
sbb
pop
fdivrp
mov
xor
popa
or
fidivl
repz
push
jl
lret
xor
insl
mov
add
pop
rcll
jo
add
lcall
aas
sbb
cli
test
fidivl
mov
dec
out
xchg
push
xor
xor
push
push
test
adc
les
mov
mov
dec
xchg
bound
sti
jl
testl
sbb
mov
packuswb
mov
and
push
sub
mov
pop
gs
hlt
mov
psubw
loope
popf
cmpsl
incl
sbb
dec
cld
push
inc
mov
test
push
setp
xchg
sub
add
scas
aaa
push
push
jno
jmp
xor
mov
adc
into
data16
xchg
add
fstpt
xlat
fs
sbb
test
ja
xor
sub
pop
ret
loopne
cmc
cmp
pop
sub
push
and
int
adc
xchg
aas
in
xchg
pop
orb
sbb
and
loopne
pop
mov
pop
push
enter
mov
mov
mov
orb
cmpsb
xor
dec
mov
bound
push
mov
or
aas
mov
mov
sub
lret
int
lock
sub
push
push
xchg
mov
inc
jbe
jl
jns
add
jmp
daa
jle
or
sahf
pop
xor
dec
cltd
cltd
inc
arpl
out
mov
push
push
rorb
test
mov
out
mov
scas
mov
and
mov
pushf
fwait
and
mov
scas
dec
sti
scas
rorl
and
cmpsw
mov
loop
inc
push
jbe
jns
repnz
xor
sub
push
adc
cmp
jg
nop
fsts
ret
loop
sbb
pop
xor
or
outsl
adc
cmp
pop
and
dec
and
bound
fadds
xchg
jne
sbbl
mov
pop
loope
cmp
popf
adc
adc
mov
dec
push
add
cmp
jp
jle
cmc
js
xchg
and
push
add
arpl
adc
or
into
mov
fcmovbe
enter
shl
mov
sbb
xor
out
rol
test
and
call
xor
leave
lea
jge
jmp
cli
cmp
clc
lret
aad
data16
mov
xchg
repnz
and
dec
nop
push
pop
pushl
cltd
or
notl
fadds
call
and
dec
rolb
in
or
jo
dec
ret
jnp
jp
fs
lods
cs
cmp
aad
or
jb
loop
cmp
addb
xor
push
add
push
orb
shlb
rcrl
push
out
pop
push
mov
and
push
in
inc
mov
jae
pop
daa
jecxz
shll
sub
add
stos
sbb
jns
jg
add
and
int3
mov
jecxz
jae
mov
cmpsl
repnz
icebp
clc
andl
inc
dec
movsb
cli
icebp
mov
lret
xlat
push
jnp
test
sbb
push
add
js
out
stos
pop
sbb
lea
fdivl
insb
push
stos
jne
or
xchg
lret
push
in
repz
lret
cld
adc
testl
lcall
and
movsl
cld
mov
sub
cli
xchg
mov
dec
ret
pop
scas
push
push
ss
inc
clc
pushf
aad
arpl
dec
ljmp
sub
dec
aad
addr16
dec
lds
xchg
mov
gs
repz
rol
cmp
push
adc
sbb
xchg
dec
mov
std
inc
aas
add
dec
mov
outsb
cmovs
je
test
push
sbb
hlt
add
mov
shlb
aam
aaa
xchg
pop
mov
push
pusha
adc
jo
inc
bound
icebp
jl
pop
scas
adc
cmp
mov
jg
in
lcall
in
mov
fimull
pushl
iret
push
rclb
sbb
add
push
jo
inc
enter
jmp
jg
inc
hlt
lret
out
pop
insl
inc
jge
pop
out
dec
jmp
cmc
mov
sub
lock
mov
xor
push
xchg
fbld
mov
and
loope
xchg
sahf
mov
call
sbb
sti
leave
out
mov
pop
mul
in
arpl
imul
inc
add
jne
jnp
push
lcall
stos
ffreep
push
mov
movsb
cltd
jnp
cmpsb
les
cmpsb
in
sti
icebp
or
sbb
je
cmp
shr
fisubs
ret
mov
mov
lock
adc
fadds
out
pushf
loop
inc
bound
insl
std
and
int
inc
mov
mov
popf
xchg
cli
pop
addr16
jnp
lahf
out
int3
pop
out
in
or
and
jae
je
cmc
inc
loopne
mov
jnp
mov
pop
lock
jo
mov
lcall
in
cwtl
xor
mull
or
add
sub
ljmp
jb
sbb
js
cmp
push
pop
jno
mov
sub
sbb
inc
push
in
dec
mov
hlt
ja
pop
push
mov
push
or
rorl
jae
fadds
sar
hlt
cld
inc
fldlg2
jl
mov
jg
fdivs
pop
mov
jns
dec
loopne
fwait
test
or
addr16
push
mov
mov
dec
xchg
jge
clc
sub
adc
sahf
ja
cmp
mov
mov
mov
hlt
notb
push
inc
orb
popa
and
push
mov
cmpsb
insb
daa
cmp
add
or
and
fstps
imul
repnz
cmp
jl
lock
into
add
mov
or
jge
scas
pop
lahf
adc
shrb
adc
xchg
addr16
adc
sbb
cmp
stc
push
pop
cwtl
loope
out
ds
stc
xor
add
add
sub
ja
fsubrl
ss
out
xlat
outsl
inc
add
jb
pop
fucomp
orb
loope
inc
notl
jmp
or
adc
cmpsl
in
sti
out
mov
fiadds
iret
jne
sub
in
xor
inc
mov
in
nop
insl
sbb
mov
mov
sbb
jl
sbb
outsl
mov
add
shll
lock
adc
movsb
stos
push
lods
fnsave
mov
inc
push
cmp
inc
pushf
scas
pop
or
int
adc
sub
dec
add
divb
mov
xchg
aad
or
mov
sti
daa
add
aam
and
xor
ja
je
push
andb
and
xchg
pusha
outsl
lret
cmpsb
cmp
int3
push
sub
int
ja
cmp
std
push
mov
out
popa
gs
adc
and
int3
pop
fisubl
xor
stos
dec
mov
nop
dec
add
rorl
and
pop
xor
rol
mov
sub
outsl
add
das
xchg
xor
add
sub
jecxz
sub
jbe
jne
mov
js
lock
sbb
int3
sbb
std
push
jne
pushf
repz
loopne
lret
addr16
sub
add
sbb
jle
inc
scas
or
je
movsb
xchg
insb
dec
ret
cmp
sub
shl
mov
cmp
out
fstpl
out
aaa
mov
pop
pop
stc
xor
jg
int3
in
loopne
nop
cmp
dec
jg
sbb
inc
shl
jae
jmp
push
js
lods
stos
lcall
jns
sub
pop
sti
inc
push
dec
into
adcl
js
jbe
imul
xchg
loop
add
aam
imul
sub
mov
mov
je
inc
fsubl
xor
imul
push
fld
out
cmpsb
enter
cmp
orl
xor
pop
cmp
jb
pop
mov
and
enter
stos
push
push
or
mov
dec
test
icebp
mov
cld
aam
or
in
clc
es
push
or
jbe
fisttpll
xchg
dec
test
fistl
loop
add
icebp
adc
jmp
movsl
es
clc
inc
or
cmc
sbb
push
lcall
fsubrs
jo
xor
fistl
mov
negl
dec
popa
sub
and
fwait
inc
sub
jbe
mov
pop
out
mov
mov
frstor
mov
or
mov
lahf
dec
mov
mov
scas
ret
lret
cld
fldl
add
cwtl
mov
push
jbe
cwtl
popf
xchg
icebp
je
repnz
cli
and
and
xor
mov
mov
inc
out
repz
push
lods
test
and
fnstsw
jb
inc
aam
mov
add
xchg
in
loope
clc
add
andl
bnd
add
sbb
pop
movsl
add
insb
mov
das
mov
popf
sub
mov
mov
pop
scas
pop
sbb
jno
mov
mov
int
xchg
shrl
stc
adc
adc
fisubrs
jne
icebp
addb
sahf
xchg
nop
push
push
push
cmp
arpl
dec
shl
sub
inc
ror
stc
std
fsubr
fstps
jns
jnp
jne
sbbl
lds
push
xchg
inc
mull
jmp
sbb
aaa
dec
dec
xchg
ret
insb
inc
popa
adc
xchg
arpl
adc
cld
xchg
and
jg
dec
faddl
pop
sub
xor
movsb
cmp
xchg
popl
sub
int3
xchg
dec
jp
xor
popf
fwait
and
ljmp
mov
add
fldl
fs
jp
outsl
lods
mov
jno
jne
movsl
cmp
jb
shrw
das
sarl
xchg
out
jge
jg
imul
ret
jmp
pop
popa
insl
out
mov
insl
pop
dec
xchg
ret
mov
or
cmp
aaa
push
add
int3
fimuls
adc
mov
pop
mov
fistpll
shrb
pop
cmpsb
xchg
vmread
inc
test
call
pop
sbbb
mov
adc
push
fstpl
adcb
adc
imul
dec
dec
jle
gs
cwtl
inc
and
inc
mov
das
jno
pop
ja
ja
mov
clc
aaa
loop
mov
dec
or
xor
andb
cmp
or
jns
sahf
orl
jnp
push
enter
mov
push
and
ja
ror
stc
adc
dec
sbb
xchg
inc
jle
adc
aaa
stos
les
and
daa
inc
inc
fdivrp
fildl
pop
in
xchg
js
xor
loopne
rdmsr
dec
out
scas
lods
pop
or
cmp
cmp
scas
ret
add
test
xchg
out
pop
push
adcl
in
sub
jl
adc
les
mov
popa
mov
fsubl
popf
fisubl
cmp
jecxz
imul
xchg
mov
pop
mov
dec
xchg
loope
inc
das
xor
xor
mov
jno
es
sub
js
orl
xchg
daa
sbb
mov
and
sub
std
ja
sbb
out
xchg
dec
sarl
sub
iret
sub
cwtl
test
adc
ss
in
lea
aad
int
data16
mov
cld
or
jo
mov
push
in
das
mov
jge
adc
add
shrb
push
outsb
or
sub
pminsw
mov
inc
pop
test
aas
sbb
mov
cvttps2pi
sbb
mov
in
pushf
shr
int
jge
sbb
xor
cld
xor
xchg
cmpsl
adc
outsl
lea
jecxz
cli
imul
inc
in
push
gs
rorb
das
push
out
pop
dec
and
lcall
sub
or
fnstsw
mov
jno
mov
daa
jle
sub
adc
jns
test
dec
loopne
hlt
inc
lret
das
xchg
mov
inc
dec
jecxz
repz
pop
out
arpl
insb
inc
inc
popf
test
and
test
outsb
test
and
or
xchg
xor
pop
xor
add
jecxz
fnsave
xor
flds
cmpsl
pusha
jp
xchg
inc
cmpsb
and
shr
ja
jp
push
jmp
testl
stc
pop
mov
add
mov
dec
outsl
ret
rcrb
jecxz
xor
movb
inc
xchg
dec
add
xor
push
and
call
and
sbb
stos
dec
add
test
out
mov
sub
cs
inc
shl
jae
dec
loop
js
or
imulb
loopne
pop
rorl
xor
ds
adc
lahf
mov
inc
inc
pop
out
jbe
add
cwtl
xlat
repnz
mov
mov
mov
inc
mov
repz
test
jo
mov
test
jno
icebp
test
cmp
mov
mov
repnz
dec
lcall
mov
jge
mov
adcb
jnp
mov
fsubrp
les
push
cmc
das
arpl
je
cmp
scas
out
add
dec
arpl
stos
jbe
or
and
je
dec
lret
sub
jne
in
popf
loopne
add
mov
movsb
aad
mov
rorl
cmp
dec
pop
fldcw
jecxz
sub
sbb
out
jmp
or
mov
ret
aas
pop
loopne
or
sahf
push
cmc
pop
adc
int
push
loope
jae
lds
cmp
cli
lock
loopne
adc
ja
rorl
xor
sarb
gs
aam
in
push
add
jne
mov
rclb
lret
iret
xor
cmp
push
sbb
cs
arpl
outsl
fdivrs
insl
aaa
mov
or
es
fisttpll
rcr
sub
mov
scas
jge
mov
in
outsb
fsubr
lahf
clc
divl
or
out
fstl
jmp
add
push
mov
int
cwtl
cmpsb
xchg
push
cwtl
sub
fwait
pop
imul
inc
fmul
nop
or
cmp
jmp
or
push
fwait
rol
call
stos
mov
int3
cmp
pop
shl
js
clc
nop
adc
addr16
mov
sub
enter
outsb
nop
push
jl
push
icebp
dec
pusha
data16
into
fidivl
fisubrs
add
mov
jl
pusha
mov
pop
fdivrp
decb
sarl
xor
fstl
dec
mov
push
mov
dec
cmp
lahf
test
inc
stc
dec
nop
inc
sub
push
movsb
out
fwait
sti
lock
fadd
dec
push
mov
pop
hlt
les
mov
mov
mov
test
dec
cmp
jg
xor
pop
adc
ss
sbb
data16
aas
jnp
push
in
fdivl
add
std
push
add
mov
xchg
and
ret
add
addr16
lds
test
test
cmp
imul
lret
cmp
sbb
adc
test
dec
popf
jl
xchg
imul
mov
repz
dec
mov
movsb
lcall
dec
aas
mov
xor
int
sub
pop
mov
inc
lock
shlb
into
cmc
pop
subb
pushf
inc
pop
mov
jmp
inc
dec
inc
or
cmc
cltd
das
pushl
inc
push
pop
popf
xor
lods
inc
pop
mov
into
cmp
call
adc
loop
popf
push
xchg
fbstp
out
aam
cmp
pop
repz
pop
imul
arpl
mov
imul
shrl
lea
nop
add
aam
fwait
mov
loop
call
aam
int3
sahf
clc
jp
out
sbbb
or
mov
pushf
xor
notl
inc
or
fs
pop
lds
in
mov
ss
mov
loopne
hlt
aas
and
rcrb
popa
mov
dec
movsl
or
ror
sbb
loop
mov
jno
lods
mov
dec
xor
jle
fidivs
out
mov
and
and
das
int
or
nop
mov
mov
dec
add
push
nop
daa
dec
test
movsl
fisubl
push
and
jb
sub
mov
es
sbb
mov
dec
jns
sub
push
add
pop
in
shll
xchg
xchg
mov
xor
stc
ja
xchg
gs
or
mov
mov
jo
sbb
xchg
mov
xchg
subl
cs
das
inc
out
shrl
add
xor
repz
jl
arpl
jmp
jg
pop
inc
lcall
and
js
mov
pop
fdivs
out
jmp
std
push
pop
cmovnp
loopne
fidivrl
add
jae
sbb
cmp
std
repz
test
faddp
sbb
xchg
mov
jle
dec
lahf
add
arpl
daa
push
mov
xchg
xchg
cmp
js
adcl
xchg
xchg
in
push
and
imulb
dec
mov
sbb
sub
push
in
icebp
fistpll
or
enter
xchg
es
rorl
in
lods
enter
jecxz
inc
lcall
sub
adc
mov
pop
hlt
xor
shrb
pop
push
mov
std
sbb
inc
add
dec
das
fisttpl
add
popf
inc
fsts
inc
cmp
add
xor
xchg
bound
dec
loope
inc
ja
pop
out
les
ret
lods
mov
and
gs
mov
sbb
jb
inc
lahf
lea
or
pop
add
test
or
mov
mov
xlat
scas
int
adc
lods
loope
fisubrs
sbb
repnz
xchg
imul
mov
dec
out
jle
leave
es
pusha
or
xchg
negl
sub
lea
mov
and
sbb
pop
sbb
dec
dec
ret
sub
in
push
cmpsl
or
arpl
cli
push
sub
fcomps
mov
adc
cli
cmp
xchg
mov
pop
jae
test
push
mov
xchg
popf
call
cmp
adc
dec
and
jmp
in
cld
outsl
mov
js
pop
mov
rorl
fistpl
out
fisubs
xlat
repz
test
xchg
sub
out
jno
pop
idiv
xchg
jl
ss
ror
fstpt
push
cs
rolb
clc
sbb
insl
or
xor
fwait
out
cld
int3
int3
je
xchg
inc
xchg
ljmp
and
push
shrl
or
scas
es
mov
ss
jecxz
repz
shll
push
arpl
mov
int
adc
push
cltd
loope
aad
mov
push
je
jmp
or
cmp
add
mov
adc
sub
or
mov
mov
rcll
pop
rcr
jae
jo
in
pop
sub
dec
popf
cmp
stos
xchg
fsubl
call
jnp
test
or
mov
pop
repz
data16
mov
or
xchg
mov
inc
mov
repnz
fdivs
mov
and
hlt
add
pop
xor
leave
pop
cli
jp
mov
sbb
test
jecxz
dec
push
js
xchg
in
sub
jg
fistpl
sbb
dec
mov
sub
jg
pop
jg
push
cmp
jbe
lods
fstpt
adc
mov
in
test
mov
or
lods
mov
sahf
cwtl
shlb
loope
push
pushf
cli
clc
inc
adc
push
jecxz
popa
jb
sbb
xchg
push
push
pop
mov
mov
addr16
bound
in
aas
adc
daa
test
pop
in
test
orb
adc
mov
test
test
jne
std
into
push
pop
jbe
out
cs
push
cmp
iret
xchg
xor
scas
scas
jno
dec
outsl
and
sbbl
mov
dec
lods
cmp
mov
push
insl
cmp
add
pop
enter
push
ds
cmp
push
into
test
stos
and
scas
inc
sbb
mov
fs
sub
and
pop
xchg
in
mov
movzbl
and
jns
clc
cmpsb
cmp
xchg
cmp
or
cld
mov
xchg
scas
arpl
jo
idivl
and
shl
cmpsb
or
gs
int
push
push
out
jo
pushf
jne
repnz
mov
jp
inc
in
out
xchg
fmuls
arpl
dec
mov
mov
scas
fstpl
in
jo
pop
xor
in
push
inc
imulb
stc
je
das
clc
cwtl
test
push
fwait
sti
mov
rcll
or
testl
data16
test
and
sub
movsb
test
inc
adc
std
lcall
sbb
cwtl
test
gs
bound
sbb
push
sbb
pop
cmpl
cmp
dec
popf
test
xor
xchg
rsm
arpl
fiadds
cmp
dec
push
sbbl
add
jne
insb
outsb
xor
mov
aas
push
mov
cmp
stos
mov
ss
sahf
fwait
jge
mov
fs
insb
mov
lcall
pop
testl
inc
daa
mov
shl
lret
les
inc
lods
in
add
icebp
jo
out
sub
xchg
test
inc
je
push
push
imul
mull
push
repz
push
cmpsb
add
pop
cmp
ja
movsb
ss
int
mov
ja
inc
fidivs
fnstenv
icebp
cmp
cs
dec
scas
int
mov
int3
bound
push
fsubrs
mov
and
aas
mov
xchg
ret
insl
mov
jp
daa
subl
dec
mov
lcall
xchg
lods
mov
ret
pop
jbe
insb
test
arpl
fldcw
in
aas
xchg
add
jmp
in
icebp
inc
cli
fiadds
aas
sub
inc
sahf
test
jle
mov
ret
ja
jl
into
pop
mov
mov
cmp
cmp
mov
das
push
push
les
sarl
push
imul
daa
inc
push
js
int3
lods
andb
aad
sbb
push
pop
xor
insl
push
sbb
in
pop
sub
in
jl
push
xchg
sbb
mov
sub
jecxz
sarl
adc
and
mov
push
jno
mov
mov
cmp
pop
cmp
cld
rcrl
fldt
mov
jle
imul
dec
mov
shr
add
sub
lahf
in
cli
cli
cli
sbb
mov
cmp
xor
inc
sbb
mulb
imul
dec
dec
mov
cmpsl
in
mov
mov
jbe
mov
inc
xlat
and
add
cmp
cmp
cmp
aad
out
mov
icebp
adc
or
lea
scas
stc
cmpsb
pop
mov
and
test
mov
lock
ds
fwait
mov
int3
js
adc
cli
push
insl
mov
fisubl
push
outsb
std
into
pushf
sub
push
xor
or
fiadds
push
push
and
rcrb
dec
orb
andb
out
repz
mov
mov
loop
dec
stos
lds
sbb
popa
push
xlat
mov
adc
inc
cli
pop
shr
or
sarl
dec
xor
sarl
lods
xor
push
push
out
push
mov
out
je
and
lods
adc
test
lds
ljmp
and
dec
in
lds
lea
mov
mov
mov
les
popa
rol
ret
cmp
test
fidivrl
push
jb
testb
jp
aas
pop
sub
out
je
in
xor
cli
cwtl
filds
fdiv
sbb
add
arpl
push
inc
out
pop
pop
insl
jnp
mov
xlat
pushf
or
scas
out
add
xor
sbb
outsl
lock
add
popa
xor
mov
mov
inc
popa
aam
out
test
out
sbb
outsb
mov
push
dec
dec
shll
bound
nop
and
adc
add
idivb
mov
sub
insl
sub
pop
sbb
negl
fdivrl
pop
std
cmpsl
ds
scas
adcl
pop
in
xlat
outsb
adc
addb
or
dec
jmp
in
xlat
pop
mov
jge
cmpsb
inc
les
mov
mov
stos
sbb
mov
int3
push
pop
stc
std
cltd
std
es
addr16
push
push
or
fwait
mov
in
cmpsb
push
lahf
or
mov
or
cmc
cli
jl
sbb
cld
jp
xor
cmp
out
or
mov
or
jbe
mov
cmp
push
xchg
dec
dec
mov
aaa
insl
stos
xchg
mov
insb
adc
test
icebp
pop
or
adc
sbb
mov
cli
arpl
aas
sbb
mov
clc
andb
push
shlb
push
outsl
out
int
aas
mov
mov
xchg
mov
js
mov
sbb
mov
xchg
cmp
adc
pop
out
rep
add
ficomps
jle
mov
sub
jmp
aas
imul
cs
iret
push
cltd
dec
jmp
dec
jmp
je
addr16
pop
ja
out
mov
lds
loop
inc
xchg
dec
add
xchg
cmc
cmp
sub
sbb
dec
test
icebp
cmpl
adc
xor
mov
mov
pushf
cmpsb
daa
into
adc
inc
scas
ja
sbb
add
push
xor
in
test
sub
fs
adc
repz
push
dec
stos
out
sahf
mov
push
inc
dec
xchg
mov
xor
mov
add
push
xchg
dec
and
mov
push
sbb
scas
idivb
fistl
pop
sub
into
sub
jge
arpl
std
jo
or
push
das
testb
sub
mov
jg
cld
cmp
roll
pop
andl
sub
sbb
fcmove
cmp
sub
fiaddl
or
fwait
xchg
sub
or
sub
out
int
push
add
xchg
sarb
ljmp
mov
or
cmp
mov
iret
xor
into
arpl
mov
pop
scas
xchg
stc
mov
dec
push
dec
iret
subb
add
pop
rolb
sbb
loop
adc
dec
repz
push
hlt
int3
fldl
dec
pop
lods
mov
rorb
add
hlt
fcompl
in
sub
mov
inc
fsts
divb
sub
in
and
mov
jne
not
and
pop
xchg
mov
pop
cmp
jo
sbb
xchg
add
and
inc
jne
mov
popa
and
xorb
mov
shrb
fimull
and
stos
stos
pusha
int3
xchg
jns
sti
stos
mov
add
xor
and
stc
jp
xchg
mov
fnstenv
mov
jbe
arpl
push
fildll
or
sub
fistps
jo
aaa
pop
out
jb
cmpsl
dec
push
mov
sub
adc
lock
cmpsb
cmp
xchg
lea
dec
aad
push
push
stos
addr16
int3
lret
scas
test
inc
or
clc
sbb
into
les
lahf
negl
sbb
adc
scas
push
movsb
stos
mov
mov
daa
and
cwtl
adc
inc
cmp
sub
cmp
push
popf
test
shr
repnz
lods
pop
add
pop
sbb
jae
subl
inc
mov
mov
fidivrs
mov
mov
jmp
jb
xor
push
enter
mov
test
cmpsl
test
xlat
out
data16
push
out
aas
dec
mov
pop
mov
outsl
sbb
repz
out
lahf
xchg
pop
mov
jno
enter
mov
sbb
scas
push
mov
or
inc
stos
sub
repz
sub
jnp
push
test
mov
test
inc
mov
cmpsb
into
das
out
mov
fdivrl
push
ljmp
jb
xor
add
insb
sub
out
ret
dec
dec
and
adc
sub
outsl
loop
daa
lahf
sbbb
test
pop
mov
insb
lods
jge
xor
add
pusha
or
jecxz
mov
adc
mov
ja
mov
imul
mov
movsb
int
push
cli
push
sbb
sub
ficoml
or
sbb
xor
or
mov
fistps
imul
xchg
fists
dec
loope
arpl
adc
mov
cmp
leave
jbe
push
mov
rclb
hlt
fdivs
or
lods
xchg
sub
fsincos
xchg
sti
add
js
jbe
aam
das
test
imul
cli
sbb
add
xor
fidivs
test
fs
mov
sub
xor
dec
iret
data16
test
out
push
cmp
cmp
mov
push
test
mov
sbb
test
xor
aaa
adc
jg
cli
and
cmpsb
lcall
out
push
push
jne
push
das
mov
in
mov
inc
stc
adc
sub
cs
lock
sbb
outsl
and
orb
shll
push
mov
mov
shlb
imul
adc
pop
mov
ud2
sbb
ja
out
loopne
std
push
jbe
mov
in
std
mov
movsb
stc
ret
hlt
mov
mov
mov
outsl
adc
or
mov
cld
push
pop
fcoml
fs
rcr
in
sbb
movsl
push
pop
cmp
stos
in
inc
add
mov
lock
icebp
xor
mov
mov
es
fistpl
in
shlb
punpcklbw
xor
mov
sub
xor
cltd
rorl
lock
insb
fcmovne
into
loop
mov
cmpsb
cmc
adc
lods
lret
mov
shr
sbb
push
jge
sbb
mov
cmpsb
mov
rol
notb
push
leave
in
repz
and
insb
jle
jno
mov
xchg
js
fdivr
mov
push
aaa
pop
mov
fiaddl
imul
in
ret
push
xor
in
adc
mov
jmp
out
clc
aas
sub
int
loopne
inc
fidivs
add
aas
les
in
lods
xchg
dec
adc
cld
xor
pop
mov
inc
test
push
cmp
dec
scas
ja
test
push
lods
lret
int
std
push
stc
notb
mov
dec
ret
cmpsb
and
add
mov
sbb
adc
shr
or
sub
or
push
xor
jmp
mov
xor
aam
adc
popf
mov
ret
xor
xchg
xor
cmp
jl
cmp
jl
ss
dec
es
and
out
cmp
and
loope
cmp
mov
test
int3
or
add
fbld
cmpsb
inc
out
subb
idiv
pop
stos
insl
xchg
stos
xorl
adc
pop
pop
test
jnp
push
sub
ss
stos
mov
outsl
in
outsb
sbb
call
pop
mov
popl
fidivrs
fnstenv
adc
arpl
mov
insl
mov
push
xchg
xor
xchg
movsl
inc
lods
xchg
in
mov
cmp
xchg
lcall
mov
jle
call
dec
mov
scas
shlb
ljmp
test
pop
mov
inc
and
popf
outsl
pop
fstpl
push
xor
pop
dec
xor
test
leave
and
pop
and
jno
sbb
and
xchg
sub
mov
mov
fimuls
test
xchg
cwtl
sub
cmp
cwtl
notb
sarl
xchg
pop
ljmp
adc
push
jne
fistps
mov
mov
insl
xlat
outsb
lahf
jns
in
cs
inc
adc
fucomp
test
lds
mov
or
sub
movsl
inc
shrl
in
test
push
cltd
cmp
out
mov
xor
adc
je
cli
out
popa
rorb
cmp
int3
jg
hlt
sbb
repz
adc
popf
ret
loope
xor
jmp
pop
fucomi
jmp
rorb
adc
shll
add
inc
sbb
dec
into
insb
and
sahf
out
iret
frstors
jbe
out
sub
lret
sbb
repz
subb
lea
dec
dec
mov
iret
cltd
xor
enter
jge
jno
or
stos
xchg
scas
adc
pusha
pop
push
push
lds
shll
or
dec
sbb
dec
popf
lods
sahf
jmp
xor
lods
adc
dec
push
mov
les
out
aam
popf
lret
jb
je
repnz
adc
adc
into
in
pop
fwait
or
mov
inc
fldcw
add
xlat
xor
dec
in
cmc
adc
scas
push
insb
xchg
mov
outsl
mov
mov
or
inc
mov
sub
out
dec
xchg
mov
mov
test
jb
into
cmc
daa
fidivl
ret
sbb
sub
jmp
cmp
cmp
jbe
xchg
push
clc
or
dec
imulb
mov
add
xchg
sarl
nop
mov
jnp
stos
pop
mov
ss
jo
shl
leave
xchg
testl
pop
stos
out
popa
clc
jns
mov
xor
stc
outsb
add
and
xor
data16
xchg
cwtl
out
ds
popa
cltd
jne
dec
xchg
popf
test
inc
sbb
xor
jo
xor
lods
cmp
cmc
cmpsb
or
jno
dec
xchg
lods
jg
cmpsl
or
pop
mov
push
dec
stc
push
sub
xchg
in
push
shll
inc
mov
mov
bswap
inc
inc
std
pop
arpl
jecxz
or
add
insl
jmp
xchg
loop
insl
adc
pop
mov
in
ja
lock
stos
or
daa
push
aam
and
decb
xor
loopne
insl
shl
movsb
sti
xchg
lods
mov
cmp
xchg
sub
push
pop
mov
add
xor
push
dec
jno
daa
mov
cwtl
add
leave
xchg
mov
inc
mov
xchg
les
inc
add
shll
outsl
jb
pop
jo
mov
insl
loop
inc
stos
xchg
lock
insb
cli
pop
push
dec
popf
loope
mov
mov
sbb
pusha
sub
pop
adc
shrb
push
pop
call
pop
cmp
gs
je
xchg
mov
sub
cmpb
mov
mov
cmpsb
ds
pop
scas
addb
lds
cmp
inc
cmp
sub
add
mov
les
and
std
and
int3
cmp
lret
out
and
mov
inc
call
hlt
enter
pop
add
daa
out
aad
lods
cmp
sub
cs
ljmp
ljmp
test
add
dec
push
jbe
cmp
fwait
ljmp
pop
mov
and
lds
leave
fcmovu
xlat
mov
jb
out
mov
pop
sbb
mov
movsb
mov
jbe
enter
cmp
mov
dec
repz
mov
mov
mov
push
jle
mov
push
movsl
inc
push
pop
daa
mov
int3
jecxz
cmp
outsb
ret
cmp
inc
in
xor
push
lea
aaa
xchg
mov
mov
add
lods
inc
xchg
push
shr
lods
push
int3
les
mov
add
pop
push
out
xchg
push
sub
mov
test
xchg
rolb
and
mov
fiadds
and
cld
popf
inc
icebp
jne
mov
xlat
push
mov
scas
std
aaa
sub
inc
shrb
adc
dec
mov
fnsave
aad
mov
std
popf
or
mov
dec
add
leave
xchg
cs
mov
aas
call
lea
loopne
mov
inc
call
into
ja
negl
jb
cmpb
inc
cs
je
ljmp
sub
adc
testb
sbbb
call
cmpsb
jg
lahf
pop
les
xor
insl
mov
in
insb
sbb
pop
jg
xchg
pop
lea
pop
icebp
and
inc
ficompl
mov
adc
icebp
xchg
popf
push
inc
pop
andl
movsb
ds
add
test
ja
in
insl
mov
jbe
fldenvs
sub
push
adcb
ss
imul
xchg
jo
or
mov
sahf
call
iret
scas
inc
rcrl
inc
arpl
int3
fmull
cmpsb
out
nop
aaa
pop
mov
inc
pop
mov
fldenv
ret
gs
dec
out
mov
add
sbb
xchg
push
test
out
pop
cmp
sbb
movb
sub
loope
or
jae
xor
push
repz
in
jg
and
dec
popf
outsl
das
loop
pop
xor
push
fbld
push
popa
mov
jne
jl
jmp
cmp
push
xlat
mov
shlb
cmp
push
jno
out
sub
push
dec
popa
nop
xlat
mov
or
adc
and
push
repz
add
mov
int
shll
and
mov
or
cmp
ss
sbb
rcll
add
movsb
inc
popa
mov
push
insl
fsubl
adc
mov
inc
cltd
mov
jo
enter
and
push
xchg
add
xchg
mov
pop
fsubrl
add
shll
aad
add
sub
xor
lods
jbe
mov
sub
dec
xchg
inc
jae
jo
jbe
fistps
adc
sahf
dec
icebp
loopne
das
outsl
pop
push
loopne
das
ret
mov
loop
mov
divl
insl
or
jmp
fwait
lcall
ffreep
or
pop
shrl
xor
and
push
mov
mov
rol
inc
clc
fidivrs
pop
insl
pop
imul
xor
test
ljmp
mov
negb
rolb
mov
out
jo
out
push
mov
xor
lods
xchg
xchg
adc
imulb
rclb
inc
pop
arpl
push
mov
test
ds
mov
mov
xlat
push
lret
dec
and
xorb
scas
jo
fs
xchg
ss
shlb
scas
das
hlt
loope
es
decl
out
ss
icebp
or
push
push
ret
lock
push
nop
jmp
in
mov
mov
lds
mov
mov
xor
and
out
push
mov
or
inc
add
cmc
xchg
dec
daa
ret
pop
xor
fbld
loope
nop
inc
dec
dec
fidivs
cmp
dec
jle
add
push
jbe
jne
adc
aad
xchg
xchg
out
mov
and
loopne
out
jge
jmp
push
pop
inc
lcall
out
movsl
icebp
jnp
addr16
dec
jo
popf
xor
dec
daa
dec
sti
xchg
xor
push
fisubrs
gs
push
imull
outsb
fistpl
repnz
insb
js
jle
iret
mov
sub
adcl
or
pop
mov
or
stos
leave
pop
sti
repnz
divl
xlat
pop
jmp
and
pop
pop
arpl
ret
cltd
jno
aam
xchg
inc
inc
sbb
dec
loope
outsl
mov
push
pop
push
adc
xor
arpl
cwtl
mov
ds
out
pop
dec
or
ss
or
fidivs
jmp
jb
add
cli
inc
cmp
xchg
mov
pop
pop
cmp
aad
pop
in
inc
push
das
int
out
lret
loope
push
in
pusha
out
dec
dec
xorl
clc
push
xchg
sub
lds
mov
lds
push
inc
mov
add
and
fiaddl
add
mov
scas
inc
sub
test
in
adc
cmp
cld
xchg
in
sbb
lahf
inc
adcb
scas
mov
xchg
es
cli
ja
adc
ss
cltd
inc
sahf
subl
test
jge
xchg
cli
pushl
or
jnp
repz
mov
dec
int
das
outsl
bt
push
scas
inc
pop
jns
iret
ret
dec
cwtl
out
or
fs
inc
in
adc
mov
nop
and
imul
out
dec
jle
gs
jbe
or
cmp
pop
inc
pop
out
dec
lahf
jne
inc
jo
jmp
or
cmp
xor
test
pop
jmp
lahf
mov
xor
pop
push
and
int
icebp
lods
inc
mov
and
add
movsb
xchg
cbtw
out
sarb
or
pusha
cltd
sub
adc
and
inc
adc
xor
ss
push
add
push
push
fsubrl
adc
add
dec
stc
push
sbb
out
add
pop
imul
out
fsubs
sbb
mov
push
fwait
fs
and
shr
dec
push
jecxz
lret
adc
mov
xchg
jmp
fnsave
orl
inc
cli
mov
jb
push
shl
mull
xchg
xchg
xchg
in
xchg
ret
incb
xlat
jge
and
or
stc
pop
shrl
imul
sbb
addr16
mov
dec
push
xchg
push
mov
idiv
sbb
add
aad
int3
cwtl
sbb
les
in
test
imull
add
push
cltd
mov
into
xchg
jmp
jbe
jmp
dec
add
add
pop
sbb
in
gs
push
mov
xchg
cli
mov
cmp
bound
into
pop
jecxz
inc
adc
add
test
sbb
inc
sti
lahf
mov
dec
loope
nop
repnz
addr16
out
adc
sub
or
add
pop
xor
test
xor
in
push
lret
lea
loopne
xchg
fs
fstl
mov
push
movsb
dec
jp
adc
lret
xchg
mov
faddp
fcomps
jb
test
ret
xchg
mov
jg
and
popf
mov
fisttpll
mov
les
lods
loope
fcompl
lods
jg
fnstsw
insl
inc
add
aam
inc
fnsave
xlat
mov
sti
xchg
mov
popa
addl
push
mov
sbb
mov
pop
jno
push
mov
sbb
std
inc
mov
std
je
lods
push
push
fisubrs
mov
jbe
addr16
mov
fwait
cmp
pop
or
jecxz
mov
sbb
inc
sbb
add
inc
add
jns
stos
shll
inc
lret
cmp
add
sbb
inc
dec
mov
subb
push
popf
test
rclb
adc
lret
lods
repz
push
addr16
xor
fs
jmp
push
push
pop
xor
movsb
jmp
and
inc
dec
pusha
inc
out
mov
fdivrs
mov
rcl
lock
jp
lcall
ss
int
je
add
mov
push
shrb
cmp
adc
daa
xchg
aad
sub
in
jmp
jmp
cwtl
pusha
loopne
lret
pop
sub
in
fildl
popf
cmc
ret
std
pop
shrl
mov
iret
jnp
and
insb
sub
cwtl
addb
loopne
sub
xor
lds
ja
pop
int3
jge
repnz
imul
adc
xchg
ret
lret
cld
in
test
stc
sbb
into
jl
add
icebp
adcb
je
mov
test
jnp
or
add
js
push
pop
lds
xchg
shrl
addl
push
or
add
daa
ds
cmp
les
ds
xor
xchg
shrb
rorb
sbbl
test
lahf
sub
push
cld
xor
cmp
aas
and
push
dec
test
orb
mov
jp
testb
jg
rcrb
xchg
shl
stc
and
fisubrl
ret
repz
scas
je
mov
dec
xor
enter
mov
push
cmpsl
or
cs
mov
add
xor
or
inc
mov
shr
xlat
scas
fadds
push
stos
aaa
push
testb
adc
fidivl
imul
adc
in
mov
sbb
pop
mov
fs
xchg
or
cmp
mov
arpl
jge
fsubrs
out
mov
cld
out
sahf
gs
in
and
pop
dec
pop
cmovo
stos
xchg
cmc
leave
xchg
lret
inc
push
xlat
mov
or
lret
push
lcall
addr16
mov
sub
fmulp
cmpsb
aam
test
test
out
bound
ret
sbb
push
lea
test
sub
movsb
xor
adcb
inc
cmpsl
ret
or
lahf
outsl
push
imul
mov
out
xchg
xor
test
push
mov
mov
rcll
or
sub
and
dec
dec
mov
cltd
lret
gs
lods
push
jno
int3
adc
dec
mov
fdivp
mov
ljmp
jp
andl
scas
xchg
cmp
pop
scas
jbe
ja
cmp
or
dec
pop
sub
cmpsb
or
aas
mov
cmpb
in
test
xchg
push
dec
jb
cmp
cli
mov
mov
xchg
xor
cltd
pop
mov
xor
in
data16
int
repnz
pop
adc
sub
jo
pop
cmp
lods
mov
fistl
test
and
aas
mov
mov
pop
sbb
je
rcr
das
into
sti
mov
push
lds
xchg
mov
dec
ljmp
jno
push
data16
sub
or
mov
das
push
pop
fisubl
jecxz
mov
cmpsb
mov
hlt
mov
sti
mov
lds
rclb
arpl
cmpsl
add
fisubl
dec
repnz
loopne
sub
adc
fwait
inc
pusha
sbb
cmpsl
out
xor
sti
mov
in
sub
push
push
push
out
imul
sbb
mov
lret
mov
in
movsl
cmp
cmpsb
mov
fisubs
mov
jp
lahf
cmc
gs
push
add
mov
aam
xchg
std
faddp
mov
push
mov
clc
inc
daa
scas
andl
scas
jb
jle
enter
jne
leave
xchg
aam
sub
inc
push
cltd
dec
repnz
jecxz
push
movl
mov
vminss
push
in
adc
mov
push
push
lds
sbb
mov
mov
xor
add
adc
adc
push
add
mov
cmpsb
inc
pusha
fisttpll
ret
mov
jp
pop
loopne
call
inc
mov
jae
add
push
cmp
int3
insl
ja
insl
mov
movsb
sbb
jnp
dec
adc
push
jg
imul
lds
js
jo
aad
mov
adc
out
out
icebp
mov
and
cmpsb
dec
test
in
mov
roll
push
mov
lahf
scas
fst
sbb
arpl
xrelease
jae
ljmp
mov
mov
push
jno
rcr
je
mov
out
lret
lahf
sti
xchg
inc
call
mov
cmp
jmp
lcall
jne
repz
pusha
cli
sub
mov
add
push
dec
div
fdivrs
sbb
orl
push
icebp
aam
jle
jae
into
cmp
cmp
push
dec
enter
popf
ret
repnz
insl
stos
sub
sbbl
xchg
push
xchg
mov
jl
or
push
enter
xchg
cmp
jl
decl
fucomi
enter
lret
faddl
fabs
call
pusha
repz
ja
dec
mov
rol
jns
leave
shr
testl
test
xor
dec
push
fmul
outsl
xchg
orl
fisubrl
push
aad
lcall
adc
mov
mov
add
shrb
pop
mov
int
test
xchg
pushf
cmpsl
xchg
out
je
push
mov
mov
ja
gs
or
adcl
iret
aam
leave
or
mov
nop
in
and
push
pop
adc
jge
pop
nop
xchg
enter
jnp
ds
sbb
push
enter
xor
outsb
jg
cmp
cmc
test
loop
flds
jge
cmp
mov
lods
cld
outsl
mov
cs
push
shlb
bound
xlat
movsb
and
add
mov
aam
cmp
mov
mov
in
and
mov
xor
sub
sub
inc
push
cwtl
imul
sbbl
call
rclb
fwait
scas
adc
sbb
jne
and
xor
mov
test
push
sti
pop
shrb
pop
xor
fiaddl
cmp
in
test
jo
adc
ret
or
enter
mov
outsl
ret
sub
rorb
imul
dec
jae
stc
inc
push
mov
xchg
mov
mov
mov
pop
fidivl
xchg
dec
adc
mov
xchg
bound
mov
mov
mov
mov
xchg
inc
stos
xchg
cmp
jne
add
xchg
inc
mov
scas
and
mov
mov
jae
cmp
mov
mov
xor
imul
push
in
pop
or
xchg
add
stc
sti
sbb
jp
mov
lods
lcall
fcoms
mov
scas
jbe
fsubrp
mov
adc
xor
test
mov
sbb
inc
aas
xor
stos
dec
enter
lock
xchg
cmp
fnstenv
data16
xchg
int3
scas
pop
pop
iret
dec
pop
adc
fldenv
lret
std
xlat
cmpsl
clc
out
mov
mov
mov
imul
sbb
sub
in
cld
outsl
mov
mov
fsubrp
adc
xor
jl
mov
ds
aad
and
jge
mov
push
int
scas
jae
and
test
es
incb
and
rorb
mov
sbb
aaa
or
pop
and
mov
mov
cmp
loopne
or
aas
cmp
repnz
bound
testl
sti
hlt
lea
add
mov
clc
add
mov
and
pop
push
push
inc
mov
mov
lds
or
cltd
mov
adc
outsb
loope
mov
dec
pusha
outsl
adc
lds
out
sbb
in
pop
repz
loop
lret
add
push
les
pop
icebp
movsl
mov
mov
add
xlat
in
push
mov
lods
pop
sub
cmp
int3
jns
and
test
mov
js
inc
xlat
and
iret
pop
adc
xchg
dec
aaa
pop
xlat
mov
inc
dec
xchg
push
scas
in
dec
rcrb
push
aaa
fcoms
inc
loope
mov
jecxz
dec
adc
dec
dec
push
mov
aam
xchg
mov
push
repnz
and
icebp
movsl
mov
scas
loope
mov
xchg
out
sub
shrl
adc
lock
shl
jno
daa
sbb
outsl
test
stos
sub
and
adc
sbb
sbb
jo
test
rorb
ret
jl,pt
mov
es
icebp
push
push
js
ds
jecxz
pop
xchg
dec
dec
sub
lock
mov
jmp
lods
add
mov
test
loopne
mov
add
push
cmovge
dec
pop
insb
ds
pop
cmpb
and
sahf
xchg
sub
loope
dec
push
sub
add
inc
frstor
cmpl
mov
cmpsb
je
xor
mov
mov
outsl
jno
jmp
push
aam
cmp
popf
movsl
popf
addr16
jmp
shlb
push
stos
inc
pop
imul
sub
outsb
jge
or
and
xchg
addr16
or
cld
or
leave
and
scas
sarb
out
mov
or
xor
dec
movsl
dec
push
rcrb
sub
stos
sbb
leave
gs
shll
cmc
dec
gs
push
loop
adc
daa
mov
jb
cld
inc
push
xor
movsb
loopne
fdivrs
hlt
xchg
cmp
jecxz
daa
or
cld
adc
cmpsb
cmpsl
add
xor
and
call
and
f2xm1
fldl
pop
mov
daa
pop
ret
sub
inc
std
mov
mov
jae
push
jae
or
nop
mov
jge
insl
movsl
ret
inc
mov
push
gs
lods
sti
xchg
xchg
jle
rorb
mov
or
lahf
push
xor
pop
mov
lods
xor
lods
xchg
mov
xchg
fldcw
push
adc
loope
cmp
cli
xchg
jl
cmpsb
mov
scas
xorb
cmp
cltd
fxtract
mov
adc
int3
cmp
push
jmp
enter
fcomi
sahf
xor
xchg
inc
loope
sti
fucomp
sbb
fsubrp
std
pop
inc
or
or
xor
scas
xchg
jnp
clc
sub
jb
and
xchg
icebp
inc
sub
jo
xchg
sub
sbbb
mov
pushf
jg
xchg
mov
rcll
imul
inc
add
popf
adc
mov
add
mov
inc
sahf
rorb
mov
dec
pusha
movsl
mov
inc
in
jne
sub
and
add
inc
xchg
jns
push
stos
aam
in
mov
jge
dec
into
dec
add
ja
out
xor
idivl
add
lods
dec
mov
loop
jbe
es
aad
and
pop
test
mov
sbb
leave
adc
dec
sbb
fprem
ss
cmpsl
inc
clc
inc
notb
sub
int
push
fs
jle
mov
push
out
mulb
in
dec
ficoml
repnz
or
pop
fs
xchg
loopne
sub
imul
pop
push
sub
push
jle
add
lods
mov
push
arpl
push
jp
ss
fnstsw
jb
mov
ret
push
ss
jle
ficompl
or
and
pop
ret
pop
xchg
daa
mov
xor
shrb
into
faddp
sub
icebp
pushf
in
pop
dec
pop
xchg
test
xlat
push
jmp
ret
jnp
jb
mov
dec
pop
mov
ret
loopne
stc
loopne
bt
cmpl
xor
push
stos
outsl
ret
loopne
cmc
nop
xor
repnz
or
mov
rol
xchg
sbb
push
push
mov
mov
fs
jns
and
or
js
cmpsl
or
ja
jns
jbe
adc
fdivs
push
inc
xchg
fcmovnu
notb
sub
int
pop
movsl
cmp
enter
ret
orl
add
gs
mov
cmpsl
ja
mov
fldcw
iret
push
or
sti
mov
fs
cs
mov
testl
adc
inc
movsb
sub
push
inc
inc
popa
xor
xor
sti
sub
and
xchg
into
test
int3
adc
hlt
sbb
push
jmp
or
jb
or
ds
jg
fcoms
pop
xchg
fmulp
or
popf
mov
mov
sete
ja
sbb
pusha
mov
mov
ret
jne
mov
fmuls
into
in
jmp
push
or
jl
cmpsl
adc
sub
or
mov
les
pop
xor
fisubrl
mov
or
dec
lahf
push
sahf
test
stos
rclb
pop
sub
mov
push
outsb
xor
mov
push
sbb
daa
fnstsw
sbb
push
repz
test
mov
frstor
push
call
mov
repz
stos
jb
das
std
sub
fists
in
xor
lcall
add
mov
push
in
mov
sub
mov
test
sbb
cld
in
and
adc
xchg
inc
mov
nop
shrb
sbb
aas
daa
sti
pop
sub
insl
into
mov
sub
mov
ja
insb
movl
adc
popf
hlt
xor
cmp
cmpl
imul
inc
hlt
push
inc
test
aad
push
out
aam
dec
mov
cwtl
cmp
cmp
int
mov
jmp
lods
jo
pop
mov
inc
mov
mov
inc
xchg
mov
xchg
sub
pop
push
add
je
pop
es
push
push
jne
repz
inc
decb
fdivs
or
into
cmp
pop
adc
movsb
mov
and
int
ret
xchg
fcomip
leave
inc
pop
xor
out
das
mov
add
add
outsl
sarb
xchg
mov
das
mov
mov
lock
jp
push
jmp
es
pop
cmp
pop
repnz
xlat
cmp
mov
scas
js
sbbl
adc
sahf
jno
xor
jle
cmpsl
push
jle
faddl
or
out
jo
sub
mov
dec
mov
imul
lcall
loop
cmp
fs
je
mov
pop
mov
icebp
imul
pusha
fwait
sub
and
out
mov
and
xchg
adc
pusha
clc
imul
in
push
fmul
xor
lret
iret
dec
ss
shlb
sub
out
lret
out
test
data16
pop
je
xchg
dec
rcrb
mov
jl
or
insl
mov
in
or
xor
imul
ficomps
testl
call
clc
shll
dec
push
push
into
gs
inc
mov
call
mov
sbbl
jle
mov
repnz
push
cli
hlt
xchg
sub
cmpb
pop
mov
test
div
mov
dec
pusha
repnz
das
jb
out
push
push
aam
inc
cld
push
lds
sbb
mov
insl
inc
in
cmpsl
cs
inc
into
or
fsts
pop
loope
sbb
xchg
out
jle
cltd
out
or
mov
insb
cmc
inc
popa
out
and
fsubl
xchg
adc
lods
adc
in
or
aas
add
jo
xchg
arpl
push
mov
dec
xchg
xor
push
adc
or
cmpsb
aas
insl
mov
sbb
mov
nop
lret
mov
mov
sbb
xor
pushf
pop
jge
outsb
test
mov
cmp
sub
or
lock
shl
sub
in
mov
js
cmpsl
popf
or
cmpsl
mov
imul
scas
rol
fimull
sub
push
pop
ret
mov
cltd
and
aam
mov
and
inc
pusha
leave
push
xor
jbe
lods
mov
arpl
ss
sahf
mov
lds
insb
mov
fbstp
dec
mov
and
cmp
mov
int3
pop
movsl
jl
sub
popf
movsl
insl
xchg
shlb
dec
mov
mov
add
movsb
dec
cmp
jecxz
mov
xchg
dec
arpl
sub
rcrl
pop
xor
sub
push
pop
pushl
jg
push
jecxz
sbb
inc
push
xchg
daa
sti
leave
inc
cmc
push
data16
decl
cmp
lods
arpl
or
into
andl
xor
cmpsb
mov
dec
loop
pusha
clc
int3
out
pop
fldln2
jg
or
mov
scas
inc
std
or
stos
inc
in
mov
cmpsl
aam
pusha
pop
sbb
call
jno
loope
loope
stos
lret
pop
pushf
jmp
enter
fdivrs
dec
out
pushf
pop
ret
hlt
ja
xlat
sbbb
mov
ret
std
mov
out
sti
movsb
test
adc
xor
adc
test
or
popa
fcoms
neg
js
pop
mov
xchg
add
push
sbb
add
push
cmp
and
mov
frstor
push
testb
mov
dec
xor
fisttpll
push
or
insl
test
add
cmp
jae
mov
cmp
jnp
mov
iret
mov
sahf
xor
pop
ljmp
out
sub
xor
jnp
mov
cld
in
stos
xor
jne
stos
mov
cld
lcall
mov
movsl
sti
bound
imul
pop
xor
aad
jns
scas
adc
add
inc
pop
sbbl
xchg
jmp
cmpsb
cmp
fcmovbe
mov
jl
xor
lcallw
sbb
mov
nop
ja
rcl
je
pop
push
call
test
mov
xor
inc
loopne
fwait
cs
xchg
xor
clc
xchg
jecxz
pminsw
and
or
fildl
les
rcll
scas
call
daa
mov
sub
adc
ljmp
imulb
mov
dec
aam
insb
lret
pop
sub
fdiv
mov
cs
cld
dec
sub
inc
or
call
sahf
sub
test
jns,pt
arpl
cmc
mov
fimull
jecxz
sbb
outsl
mov
lahf
cmp
ss
leave
sub
mov
fsubs
or
dec
mov
sbb
ljmp
popf
cli
arpl
and
adc
shlb
daa
cwtl
mov
test
icebp
pop
aas
pop
dec
popa
test
mov
sub
orl
movsl
dec
or
pop
arpl
push
pusha
outsl
daa
iret
inc
dec
mov
lock
xor
push
std
xchg
push
sbb
mov
cmp
das
cli
mov
lret
xchg
pusha
xorb
inc
pop
and
xor
into
add
out
push
xor
dec
xor
cltd
add
in
fs
inc
mov
out
int
mov
aaa
fistpll
push
jmp
clc
adc
inc
in
pop
div
cwtl
jno
packuswb
push
les
sarl
xor
incb
push
sbb
or
xor
mov
or
popl
push
aas
adc
adc
and
fmuls
testb
scas
call
mov
mov
movsl
loop
daa
pop
xchg
mov
cmc
sti
fwait
inc
in
dec
xchg
inc
ss
imul
or
jno
mov
aaa
out
add
pop
add
sbb
push
and
mov
insl
popf
jecxz
icebp
xchg
mov
jns
stc
fldl
sub
mov
pop
dec
into
fidivs
mov
cmc
mov
xlat
push
mov
dec
lods
cmp
out
push
sbb
icebp
les
and
mov
cltd
mov
aad
and
mov
insb
inc
dec
inc
data16
adc
mov
test
jmp
inc
push
jb
or
stos
mov
push
sbb
aas
mov
cmp
cmp
ret
jge
inc
scas
outsb
mov
lret
jne
fdiv
stos
stos
sahf
cmp
add
jl
ss
mov
jo
inc
push
mov
in
divl
mov
ss
out
jecxz
sbb
imul
and
dec
add
orl
mov
fadd
xchg
jmp
fsubp
fimuls
ds
pop
mov
push
movsb
pop
adc
push
scas
out
bound
pop
lds
dec
mov
out
lea
daa
stos
inc
lods
inc
xor
into
enter
pop
sub
in
push
rep
pop
cmp
adc
jno
adc
dec
sub
repz
xchg
andl
jge
pcmpeqd
fidivs
push
xchg
xchg
inc
ja
rsm
lods
xor
inc
mov
lods
cmp
mov
sti
pop
inc
fidivrs
sbb
jbe
fidivrl
adc
test
push
pushf
dec
dec
xor
mov
ret
lock
inc
mov
lds
pushf
cli
rep
or
clc
aad
movsl
subl
lods
fcmovb
cmp
pop
push
and
inc
push
imul
push
fisubrl
push
sub
xor
inc
cmp
xchg
mov
xor
and
and
adc
subb
add
add
je
mov
pop
cmpsb
lcall
fcoms
pusha
les
insl
outsb
add
lret
addr16
cmpl
or
sub
sub
inc
inc
jnp
jmp
cmp
fisubrs
push
icebp
enter
dec
cmc
pop
fisttpl
aaa
dec
jae
mov
ds
in
or
std
push
out
mov
mov
imul
notb
in
pusha
mov
or
lods
cmpsl
rclb
inc
loope
arpl
xor
push
pop
mov
pop
call
in
and
jb
movsb
ja
mov
test
movsb
cmpsl
xor
and
jae
inc
mov
jmp
cmp
test
lret
cld
scas
lds
loop
rol
lds
ret
adc
adc
enter
adcb
pop
sbb
mov
std
push
add
xor
lret
ret
into
push
inc
arpl
mov
fisttpll
dec
loop
sub
mov
cmp
and
mov
pop
xlat
sbb
xor
mov
mov
stc
testb
pop
int3
pop
aas
push
and
pop
and
or
xchg
cld
jns
rcl
fldenv
or
call
jmp
push
or
push
fidivl
sbb
pop
push
adc
stc
movsl
daa
pop
pop
test
cmp
and
fsubl
xor
jl
stos
es
jge
les
pop
std
or
cmpsl
fnop
mov
dec
dec
add
stc
bound
mov
out
dec
mov
sub
outsl
add
jge
pop
jmp
add
mov
push
mov
xor
push
push
or
ss
xchg
mov
adc
ret
iret
mov
lahf
dec
lods
in
out
aad
and
xor
pop
lret
jle
push
jecxz
mov
mov
or
lahf
adc
xchg
js
jnp
jae
or
sbb
js
ror
sub
lock
test
cli
xchg
movsl
and
and
or
cmp
inc
sbb
cltd
sub
in
test
add
mov
xor
pop
imul
lcall
inc
adc
scas
scas
sbb
outsl
inc
mov
cmp
pop
and
fdivs
mov
stc
dec
out
movsb
mov
les
push
and
fsubrl
mov
mov
cmp
lahf
mov
push
or
enter
mov
xchg
aas
popf
xor
mov
jp
or
das
popf
stc
add
add
adc
jne
lock
cmpsb
push
cltd
or
cmp
dec
movsl
cmp
add
add
xchg
pop
add
test
or
jb
loope
fidivs
filds
xchg
cmp
cld
xchg
and
test
and
xor
in
in
fcoml
mov
out
add
aaa
mov
fldt
rclb
mov
mov
jmp
push
sbb
adc
loope
out
mov
cmp
clc
inc
mov
and
sbbl
or
push
jmp
cmpsb
mov
pop
call
lret
mov
cmc
movsl
sbb
stos
inc
xchg
xchg
lret
push
sahf
popa
push
call
pop
cmp
push
lar
xchg
or
jns
out
shrl
shrb
sbb
push
mov
dec
sbb
iret
andb
sbb
outsb
mov
cmp
and
push
addr16
jae
fnstenv
outsb
and
scas
shll
mov
mov
push
adc
inc
pop
sbb
in
adc
sub
test
mov
pop
clc
sahf
lea
push
aas
lret
pushaw
fnstenv
pop
aas
cmp
test
std
repnz
ret
dec
dec
in
clc
mov
movsb
xor
aad
sbb
and
outsb
jp
sub
xchg
enter
sub
mov
outsb
pop
mov
mov
ja
xlat
cmp
push
hlt
jns
aad
mov
mov
mov
and
cmp
les
pop
sti
pop
pop
ret
push
scas
cli
push
enter
out
iret
fcompl
or
cmp
es
mov
leave
dec
mov
push
xchg
sbb
lds
cmp
jne
sbb
xchg
sub
pop
push
add
int
and
jne
sti
ret
shrl
arpl
das
jg
mov
inc
orl
xor
inc
ffree
cmc
inc
rcr
gs
in
push
add
mov
xchg
insb
ja
inc
fiaddl
push
or
cld
test
sbb
leave
sbb
mov
clc
loope
data16
shlb
mov
pop
fs
jbe
xchg
lret
loop
dec
push
repnz
jmp
clc
cltd
out
pop
das
lcall
dec
in
hlt
push
adc
shr
pop
cmp
insl
jge
das
mov
inc
jmp
jne
mov
or
lcall
dec
arpl
cmp
data16
fcompl
outsl
add
lcall
into
mov
imul
clc
mov
repz
pop
sub
stc
push
insl
dec
in
jb
test
insl
test
mov
push
push
mov
cmp
clc
mov
cltd
test
pop
adc
addl
or
add
out
push
and
paddb
adc
cld
in
xor
loopne
nop
divb
hlt
sub
rorl
push
sub
mov
lea
inc
divl
out
xchg
insb
filds
dec
outsb
fdivrl
repz
sbb
scas
test
lret
pop
jmp
or
addr16
mov
push
stos
xchg
cmp
push
fnstcw
scas
hlt
xchg
loopne
pop
aaa
mov
stos
inc
int3
lret
or
in
enter
dec
xchg
inc
push
cmpsl
ds
aas
cmp
lds
pop
jno
add
loop
fcmovbe
xor
mov
scas
add
jo
push
dec
mov
sbb
testl
insl
sub
inc
or
cmpsl
fmull
aad
sub
pop
aaa
pop
or
sbb
mov
push
jp
adc
cmp
xchg
ds
mov
ja
mov
jl
aas
loop
roll
leave
mov
dec
ljmp
popf
push
pushf
scas
in
loopne
fwait
xor
push
in
jne
fnsave
pop
test
add
test
gs
ljmp
cmpsb
or
xchg
out
imulb
xor
in
mov
mov
push
inc
mov
aaa
into
jnp
xor
cmp
push
jne
in
dec
ljmp
and
pop
lret
in
mov
jo
push
mov
data16
cmc
push
or
ret
and
jecxz
push
add
clc
nop
cmpsb
fsub
jle
test
mov
jae
lcall
lcall
pop
mov
mov
aaa
lret
xor
into
out
scas
call
cmp
mov
mov
mov
mov
fdivrl
adcl
xor
test
pop
sub
imul
data16
xchg
outsl
mov
pop
add
mov
jnp
shl
mov
adc
sbb
arpl
cmp
push
cmp
pop
out
ja
sub
repz
dec
mov
dec
cltd
fsub
add
mov
or
inc
push
push
xchg
xor
into
enter
movsb
mov
les
add
add
dec
mov
jg
adc
leave
int3
mov
pusha
sbb
outsb
out
in
pusha
cmp
mov
xor
inc
shl
sbb
repnz
cwtl
fldenv
or
or
loopne
add
dec
popl
jp
cmp
and
mov
cmp
or
jmp
sub
push
inc
idivb
jns
dec
inc
iret
sarl
pop
push
sbb
pop
jae
xchg
movsl
sub
out
xchg
jne
dec
inc
cmp
jb
cmp
pop
in
iret
repnz
mov
inc
adc
pop
icebp
outsb
jno
jge
test
cmp
das
or
shlb
dec
xchg
sub
or
mull
sti
adc
mov
cltd
lret
pop
data16
rolb
xchg
xor
dec
jno
xchg
pop
mov
and
scas
sub
mov
filds
gs
sub
push
hlt
cmp
jb
xchg
int3
cmpb
mov
lret
loopne
sub
pop
scas
lds
lcall
add
js
cmp
pop
out
and
xor
mov
cs
into
pop
mov
in
ficompl
in
adc
outsl
lcall
xchg
mov
cmp
dec
adc
add
aas
cmc
mov
and
in
fs
jge
cld
aad
test
or
mov
fsub
test
out
fstp
je
aam
cs
and
fwait
mov
test
xchg
fdivr
aad
xor
pop
lock
ja
cmp
sub
scas
js
loopne
mov
aad
pop
cmc
or
jl
test
outsl
jnp
lret
ljmp
out
xor
jecxz
test
cli
out
dec
mov
out
test
inc
mov
das
pop
push
mov
or
rcrb
mov
ficomps
imul
js
das
ds
in
adc
repnz
es
push
stos
test
rcrl
adc
loope
jnp
pop
ljmp
push
in
sbb
jns
cli
bound
inc
push
inc
xor
imul
mov
imul
imul
arpl
data16
sbb
sarb
idivb
mov
xchg
push
sbb
xchg
push
rorl
sub
push
sbb
lea
pop
outsb
inc
lea
inc
mov
cmp
imul
jnp
mov
cmpsb
push
popf
shl
in
test
imul
or
jge
inc
loope
sahf
jbe
xlat
or
mov
clc
jno
leave
mov
sti
testl
les
xchg
scas
out
rcrl
pop
fldl
mov
negb
mov
fwait
xchg
inc
popf
fxch
popa
push
mov
push
mov
push
xor
and
xchg
test
jmp
push
cltd
shlb
in
test
and
inc
mov
sub
sub
inc
or
dec
cmp
mov
test
scas
scas
call
inc
out
ljmp
push
dec
aaa
int3
dec
nop
push
in
dec
lahf
js
lcall
inc
add
add
sbb
cwtl
sbb
xchg
ljmp
jno
es
sahf
sbb
add
iret
add
push
mov
pop
stc
nop
dec
mov
movsb
ss
rol
sub
pop
xchg
xchg
pop
addr16
fisttps
pop
test
mov
xor
xor
or
dec
and
sbb
xor
jp
xchg
outsb
sbb
add
ljmp
mov
sahf
pushf
inc
lcall
and
gs
out
lcall
into
leave
mul
cmp
push
scas
push
popa
rcrl
jmp
push
sub
xchg
outsb
jmp
repz
dec
adc
popa
mov
pushf
fiadds
repz
and
imul
adcb
jb
jmp
fidivs
sbb
dec
mov
cli
dec
sub
xchg
push
jmp
jb
pop
mov
fsub
aaa
repz
idiv
mov
decl
and
lock
stc
xchg
popf
ja
out
dec
loop
mov
mov
xchg
loope
das
add
pop
sbb
mov
std
jbe
and
in
inc
es
cmpsl
test
int3
and
pop
popa
lods
test
loop
in
xchg
out
ret
lds
ret
cwtl
dec
movsl
fisubrl
sahf
jae
sahf
sub
cli
dec
pop
mov
gs
sub
aam
inc
adc
int3
and
shll
mov
xchg
xor
addr16
mov
mov
push
xlat
xor
inc
or
movsl
push
fdivrs
aad
sub
xor
inc
cld
and
roll
lcall
rcrb
insb
hlt
push
pop
test
add
sub
imul
lahf
inc
inc
lods
sub
xlat
sub
out
mov
stos
and
xlat
sub
cmpsb
testb
xchg
push
jns
daa
mov
scas
test
sub
aad
loopne
bound
mov
rcrl
cwtl
mov
mov
hlt
roll
push
inc
jnp
xchg
xchg
cs
and
aaa
je
pop
test
cmp
push
cltd
out
lock
cltd
jb
fld
pop
xor
sahf
jae
adc
das
arpl
cli
dec
dec
adc
sub
int
xchg
imul
cmp
jecxz
dec
dec
mov
lds
inc
fwait
mov
sbbl
and
jno
fbstp
mov
jmp
mov
mov
lahf
pop
in
loop
cmp
fs
jae
cwtl
jno
mov
stc
push
jno
sub
inc
ss
mov
fsts
or
jae
pusha
adc
and
sbb
mov
cmpsb
add
add
clc
sahf
inc
sub
aam
pushf
push
jb
and
push
cli
cmp
mov
mov
xchg
test
into
ret
insl
incl
mov
andb
push
pop
repz
sub
push
sarb
cltd
xor
cmpsb
pop
mov
nop
jl
stos
jecxz
xchg
lahf
sti
xchg
leave
aaa
xchg
xorl
jnp
movsb
lods
cli
test
cmp
in
dec
mov
xchg
push
mov
pop
adcb
jecxz
push
imul
push
cmpsb
and
pop
and
hlt
aaa
je
mov
cwtl
rorl
test
imul
fwait
xor
ret
mov
push
jg
and
cmpsl
push
xchg
adc
cmp
push
push
arpl
pop
orb
imul
test
sbb
outsb
repnz
cli
xchg
fmull
jge
jmp
sbb
push
sub
sub
jne
push
dec
xchg
mov
popa
inc
hlt
mov
push
push
int
mov
aad
xchg
and
adcb
sahf
sti
nop
mov
out
mov
rorl
jns
fisubl
lahf
loopne
gs
rolb
push
popf
fbstp
insb
test
bndstx
pop
dec
mov
loopne
xchg
adc
xchg
jb
add
cld
xchg
jp
popf
outsl
fwait
sbb
sbb
lods
cmp
pop
fdivs
cmpl
xor
mov
dec
movsl
cmp
xchg
ljmp
iret
xor
insb
filds
mov
xor
rorw
jle
push
sub
mov
jne
enter
mov
iret
mov
sbbl
movsl
fsubp
push
das
shl
sbbl
and
cmp
inc
ret
gs
sub
jne
lock
ljmp
and
addr16
pop
sahf
rorb
or
shlb
sub
insl
dec
cwtl
lcall
ret
repz
adc
mov
xor
push
stc
xchg
cmp
scas
add
test
or
ljmp
mov
cmpsb
xchg
sub
hlt
sbb
es
mov
ja
outsb
add
mov
cmp
les
or
fstpt
into
inc
lahf
ss
jmp
pop
add
fucomip
jl
fnstsw
mov
jno
addb
xor
lea
loope
sbbl
or
inc
xor
jecxz
push
in
je
clc
rol
test
je
pop
cwtl
xor
mov
in
nop
mov
mov
push
adc
inc
aaa
lds
xor
fstp
sbb
lret
and
cld
das
adc
cmp
daa
xor
xlat
sub
lods
and
ret
pop
lret
in
sbb
or
lods
pop
sub
inc
inc
fcmovnbe
in
dec
add
test
js
ror
cli
repz
add
test
repnz
sbb
xchg
cmp
xchg
mov
pop
repz
pop
dec
decb
cmc
adc
sbb
inc
jae
sub
lds
jb
push
push
les
aas
hlt
addr16
loop
push
pop
xor
repz
ds
fwait
pop
cmc
pop
lods
je
insb
add
cld
push
int3
or
mov
addr16
es
pop
lret
sub
lods
jge
mov
adcb
and
xor
push
lock
mov
add
add
out
adc
test
divb
fistpll
push
lcall
mov
sbb
leave
and
xor
mov
push
mov
lret
out
push
out
jb
les
stc
js
cs
mov
mov
mov
push
icebp
out
and
leave
pop
mov
fidivrs
mov
dec
fildll
int3
data16
std
jb
pop
inc
xchg
test
sbb
mov
out
push
xchg
push
out
sub
pop
data16
mov
xchg
or
repz
mov
decl
jp
stos
mov
sbb
add
inc
lcall
cli
dec
adcb
out
pushf
dec
rcll
mov
hlt
mov
mov
push
cmpsb
js
ljmp
aad
add
mov
aas
out
inc
gs
mov
and
and
mov
je
and
pop
jno
stos
jnp
jb
in
pop
bound
lock
push
mov
arpl
mov
pop
push
or
stc
or
sti
jo
lds
inc
dec
fldenv
ret
push
addb
testl
sbb
ss
mov
movsb
cwtl
das
mov
das
mov
imul
pushf
stos
cmp
ja
leave
pop
or
pusha
jne
xchg
xor
fnstenv
xchg
inc
arpl
in
lea
xchg
mov
out
out
hlt
vfmaddsub213ps
dec
xchg
mov
out
out
push
cld
jno
xor
and
insb
push
sbb
jne
cmpsb
outsb
daa
popa
xor
sahf
or
cld
cmp
mov
and
pop
aaa
fiaddl
or
mov
sbb
adc
lds
mov
test
xor
mov
call
int
arpl
icebp
sbb
adc
cmp
mov
hlt
ja
adc
std
mov
sub
pop
mov
sub
imul
adcl
cmpsb
aas
loope
rorl
loope
push
adc
xchg
aaa
pop
lcall
xor
adcl
xor
mov
ret
sahf
xor
orl
adc
movsb
dec
ret
js,pt
jle
sti
movl
dec
nop
pop
dec
cwtl
icebp
cmpsl
jg
push
ret
pop
mov
je
mov
sub
sti
js
mov
sbb
sarl
or
add
shrb
mov
push
es
fwait
mov
jne
sbb
iret
enterw
xor
mov
mov
das
push
cmp
or
mov
sbbb
xchg
mov
insb
sub
lret
jg
pop
je
mov
adc
sbb
jbe
fs
inc
pmullw
and
cmp
mov
sub
gs
push
lret
xor
push
das
adc
push
in
push
pop
pop
imul
mov
bnd
ret
cmp
inc
enter
xor
xchg
jmp
pop
mov
in
and
test
lea
sub
mov
and
shrb
add
into
adcl
sarb
cwtl
xor
sbb
mov
cmp
mov
jmp
ficompl
xorl
pop
insl
inc
scas
adc
lock
push
push
es
dec
loopne
stc
dec
pop
sbb
jno
add
movsb
push
add
add
pop
sahf
adc
sub
adc
test
mov
jge
popf
sti
in
cmp
mov
repnz
jle
fwait
adc
cld
ja
xor
jge
mov
mov
into
adc
hlt
xchg
pop
cmp
lcall
lret
push
negl
fsts
adc
mov
jb
xchg
pop
xchg
jb
mov
jbe
mov
nop
imul
mov
jge
iret
push
xor
dec
add
pop
push
js
jb
add
std
ja
add
cli
in
mov
adc
into
shl
xor
adc
stos
call
xchg
inc
or
mov
mov
push
les
ret
ret
inc
xlat
bnd
popa
clc
push
rcrl
pop
jg
nop
scas
xor
pop
aad
xchg
jo
jl
pop
adc
rol
andb
mov
xor
stc
loopne
add
inc
xor
xor
stc
test
push
sub
mov
push
in
shlb
je
and
lods
dec
xchg
jecxz
leave
insl
sbb
sahf
repnz
adc
dec
movsb
mov
push
mov
lods
inc
dec
pop
and
fimull
lahf
sub
pop
dec
sbb
mov
sub
cmp
or
lods
cmp
es
dec
bound
lock
icebp
in
or
cmc
es
cmpsl
nop
jae
gs
or
push
and
xor
jmp
xchg
fs
rorl
cmc
mov
das
test
dec
movsl
into
mov
aad
pop
mov
jno
repnz
sub
mov
repz
jnp
push
in
lods
or
pop
sahf
data16
test
loop
in
jmp
std
sbb
test
or
outsb
dec
dec
ret
push
outsl
lods
dec
mov
sti
xlat
sub
dec
subb
push
popl
ss
mov
sbbb
sar
or
push
jns
jmp
cltd
lock
adc
addr16
icebp
cmp
in
loopne
imul
sbbb
sbb
lods
mov
into
into
out
jnp
and
mov
fbld
insl
and
pop
xor
rorb
mov
mov
insl
xchg
insb
push
fmull
xchg
iret
and
mov
mov
ret
imul
push
addl
or
jge
jecxz
leave
pop
aam
insb
pushl
xchg
inc
push
add
xchg
mov
jns
mov
sbb
fstp
sub
pushl
std
or
cli
out
ss
and
mov
xchg
cmp
aaa
addl
cwtl
shll
out
inc
sarl
or
dec
jecxz
adc
fimuls
push
clc
sub
divb
jbe
shll
inc
stos
adc
clc
test
lock
aas
push
sbb
imul
shll
push
cmc
mov
and
es
adc
push
jge
cmp
adc
add
sub
fdivp
popf
dec
push
fbstp
mov
js
adc
xor
sbb
shll
mov
fs
sbb
adc
lock
stos
push
inc
pusha
ss
repz
xchg
mov
cld
pop
add
pop
stos
in
or
xchg
mov
and
sbb
push
sbbl
jne
push
movsb
jnp
ja
push
loopne
out
add
sub
cmp
or
inc
mov
test
mov
mov
xor
mov
xlat
or
mov
loopne
lcall
mov
fs
add
mov
daa
push
and
inc
cmp
lahf
jb
popa
movsb
jae
inc
xchg
add
xchg
cmpsb
lea
push
push
pusha
aaa
addr16
fisubs
out
les
jns
test
pop
out
xlat
mov
or
shrl
nop
popa
test
mov
inc
out
mov
sbb
mov
and
aad
or
test
xor
repnz
and
call
push
jmp
aas
mov
mov
fimuls
sub
sbb
cmpsb
add
push
in
jno
jae
pop
and
sub
dec
lcall
pop
jno
xchg
bnd
sub
dec
add
dec
aaa
mov
push
and
lea
movsl
daa
insl
jmp
xchg
mov
pushf
inc
push
ficompl
fldt
xorl
int3
icebp
xchg
mov
lods
mov
pop
pop
movsl
cmp
inc
sbb
mov
mov
jl
mov
dec
xor
xchg
int3
sub
mov
push
out
jns
aaa
imul
dec
mov
mov
cwtl
dec
xlat
in
into
mov
or
enter
add
mov
pop
mov
adc
popf
inc
scas
inc
fcomps
mov
testb
or
inc
cwtl
fbstp
xchg
test
mov
dec
push
lea
adc
call
out
pop
push
cmp
sub
jno
lock
test
imul
adc
or
jns
pop
xor
mov
je
incb
mov
add
mov
imul
mov
lret
pop
repnz
mov
jns
sub
shll
sbb
sub
out
ja
shrb
out
insb
lock
sub
sbb
jns
pop
mov
xchg
cmpsl
jp
sbbb
and
xor
cltd
adc
enter
insw
popa
add
sahf
xchg
sbb
inc
jne
push
imul
stc
inc
movsb
repnz
adc
clc
sarb
ret
xor
mov
cltd
mov
mov
shl
push
sahf
mov
pusha
push
and
out
shrl
adc
mov
and
pop
xor
idivl
push
ret
and
mov
shl
mov
repz
cmp
aad
sub
aam
ss
insl
filds
loop
lds
adcb
loope
push
outsl
push
mov
mov
movsl
mov
push
pop
aas
mov
mov
xchg
sub
add
dec
mov
inc
testl
xchg
cmc
or
and
call
pusha
int3
movsb
mov
lods
aaa
into
fucom
mov
add
bound
add
rorb
cmp
mov
jno
add
fidivrl
fwait
sti
testb
mov
mov
sahf
xlat
push
add
xchg
gs
or
mov
adcb
mov
xor
fstl
mov
popf
fbstp
adc
dec
pop
or
dec
xchg
stc
repnz
stc
popf
insb
sub
stos
mov
or
dec
add
cmpsb
sbb
or
xor
xor
testl
les
pop
cs
loop
adc
rcr
inc
or
mov
int3
mov
dec
mov
gs
jno
add
add
adc
and
adcl
mov
jbe
or
push
les
xlat
mov
mov
mov
push
je
fsubs
incl
xchg
cmp
add
fisttpll
xchg
sub
cmp
out
cmp
mov
push
lods
shl
jle
sbb
test
sub
or
movsb
push
cmp
out
test
mov
sbb
aad
int
jecxz
leave
popa
fdivrl
mov
push
fldcw
stos
jge
mov
lret
adc
jnp
jno
andb
inc
xchg
nop
jge
or
dec
pop
or
sub
gs
mov
data16
mov
stc
sahf
mov
in
push
aas
lahf
pusha
jmp
mov
add
push
mov
subl
xchg
mov
mov
jns
dec
test
repnz
mov
leave
pop
rcrb
adc
sbb
pop
sti
lahf
cmp
cltd
loop
dec
shll
repnz
cwtl
daa
pop
lcall
add
sub
lahf
mov
or
pusha
adc
jmp
lea
idivb
int3
cmpsl
fsqrt
xchg
ja
dec
pop
fildll
mov
lret
fwait
xor
push
sbb
sub
jecxz
inc
leave
pop
mov
mov
lea
jmp
mov
lds
das
inc
andl
xchg
ja
test
lods
inc
pop
punpckhdq
cmp
neg
jbe
lods
orb
movsl
adc
add
rol
je
movsb
push
lret
mov
mov
mov
icebp
jp
btr
nop
pop
rcrl
cmp
jecxz
lahf
mul
add
pusha
dec
xchg
dec
push
mov
sbb
gs
sub
bnd
fnsave
movsl
test
cmp
addr16
sbb
mov
shll
mov
pop
cmp
fldl
push
insl
mov
aas
icebp
mov
shrl
cli
pop
xor
jp
hlt
jno
out
xchg
cs
or
std
mov
call
in
sbb
add
arpl
movb
pusha
fwait
or
test
lods
inc
cmp
adc
insb
sbb
xchg
scas
sti
call
cmp
loopne
xchg
push
lret
sbb
in
aas
mov
clc
mov
mov
cmp
ret
in
mov
loop
loope
ret
or
std
mov
sahf
sub
scas
add
sbb
clc
jae
mov
fwait
out
push
lods
and
test
lret
sti
add
out
mov
sub
leave
shll
ret
mov
cwtl
in
mov
mov
iret
es
dec
pop
lock
adc
fnsave
jle
xchg
pop
sti
xchg
dec
stos
stc
xchg
leave
mov
sbb
out
cmp
jl
push
sarl
pop
hlt
cmp
paddd
fs
xor
out
add
add
and
test
lcall
outsb
imul
lret
inc
in
jb
pop
sbb
add
aam
inc
adcb
xor
leave
ljmp
jno
pop
jp
xchg
lods
cmp
lods
insb
stc
jmp
test
pop
inc
xor
mov
xchg
sub
int
into
call
cmp
ror
xchg
in
mov
lods
in
test
xor
xor
mov
dec
fcmove
add
cmp
mov
mov
xchg
mov
sahf
shlb
push
inc
into
daa
fdivs
out
gs
dec
pusha
gs
inc
int3
clc
pop
inc
into
int
dec
test
adc
icebp
adc
test
inc
in
leave
jl
cmp
mov
repz
cmpb
or
arpl
sbbb
pop
sahf
ljmp
or
orb
or
cmpsb
testb
xchg
imull
add
lea
rol
gs
sub
jmp
stos
shrb
ss
fildl
stos
add
enter
inc
adc
sarl
outsl
push
in
jl
jle
jge
divb
sbb
mov
xor
dec
jge
sub
test
inc
xlat
push
mov
inc
xchg
mov
xchg
mov
repnz
cwtl
outsb
enter
pop
pop
mov
imul
out
jb
mov
cli
jb
add
icebp
inc
add
cmpsl
mov
sbb
mov
cmp
repnz
or
and
push
fsubrl
stos
test
jns
sub
jg
loope
out
orb
outsl
jmp
das
jle
or
sahf
jne
mov
cld
lds
lahf
popf
dec
cmp
fnsave
ret
push
loope
test
test
stos
add
sbb
outsl
cli
adc
cmp
dec
lahf
hlt
lock
xchg
inc
push
fbstp
add
jge
jbe
pop
mov
mov
add
jb
push
js
sahf
mov
aam
test
sub
arpl
cmpsb
test
sub
jne
hlt
movsl
inc
mov
pop
inc
sbbb
shr
pop
or
repz
fwait
in
adc
shrb
push
or
pop
into
sub
out
jge
and
dec
lock
cmpsl
lds
cmp
fwait
and
jmp
ret
popa
rolb
xor
push
sub
jb
add
out
sub
push
shlb
sbb
out
int3
std
sbb
mov
into
movsl
and
inc
mov
adc
or
mov
rep
xor
lods
mov
ret
pop
test
mov
scas
xor
imul
xchg
add
mov
pop
push
repnz
adc
call
dec
aas
mov
stos
icebp
xlat
sub
sbb
inc
sti
xchg
xor
dec
and
push
cmp
mov
inc
add
sub
mov
ja
cld
outsb
lea
xchg
stos
mov
push
ret
testl
ds
jbe
rolb
je
hlt
pop
ficoml
out
jbe
pop
test
pusha
xchg
jl
add
mov
je
aam
incb
add
pusha
fwait
push
data16
xor
lock
aad
test
inc
dec
or
fsubs
mov
push
jae
cs
mov
jb
popl
jl
lock
jae
sarb
popa
icebp
jne
cs
daa
xchg
sbb
notl
je
jl
cmpsb
shlb
stc
mov
sbb
sub
daa
jnp
xchg
addl
sub
outsl
dec
cmc
cli
in
in
aad
inc
push
xchg
xlat
mov
xchg
dec
jge
mov
stos
and
sbb
ds
pop
addb
sub
aad
je
xchg
xchg
xchg
xor
push
outsl
xor
pushf
mov
sub
hlt
adc
dec
mov
loopne
iret
fsubrs
inc
ret
repnz
xor
dec
int
xchg
mov
inc
sub
shrb
dec
mov
jg
sbb
pop
mov
push
xchg
mov
loopne
call
push
push
lock
jo
scas
test
mov
mov
add
adc
int
cmp
movsb
out
push
sarb
test
pop
cli
adc
jbe
jb
insl
shrb
popf
mov
rol
lods
pushl
cli
push
jmp
lea
sbb
cs
lcall
xor
movsb
mov
add
decb
and
imul
dec
sbb
out
mov
cmp
mov
ljmp
push
sbb
jecxz
loope
inc
xlat
add
lea
sbbb
pop
stc
mov
mov
adc
cld
bound
lret
and
sbb
mov
clc
jle
mov
fidivs
push
jo
inc
scas
cld
push
pop
fs
fcoms
jne
mov
fldcw
es
sti
fwait
and
lods
repz
jecxz
mov
and
ljmp
cmp
mov
rcrl
lock
pusha
bound
jbe
cmp
push
data16
je
mov
push
xchg
mov
lahf
in
add
outsb
push
test
sbb
inc
xchg
sub
out
insl
popf
fsubs
dec
jge
mov
decl
sub
cmpsl
sbb
pop
xchg
sub
inc
std
sbb
pop
jns
leave
lea
pop
push
add
jg
shlb
cli
mov
xchg
pop
scas
mov
ljmp
xchg
inc
ja
lods
xchg
push
scas
mov
out
adc
dec
andb
push
push
ss
or
in
dec
push
dec
mov
pop
ret
ds
ljmp
jo
ss
insb
addr16
xchg
mov
in
jmp
cld
push
pushf
js
mov
sub
mov
xor
movl
je
scas
add
xor
int
pop
fistl
xchg
ja
shrb
lods
xor
push
and
jbe
scas
inc
ret
mov
mov
ja
pop
subb
sub
or
and
stos
push
pushw
push
fidivrl
sbb
push
scas
xor
xchg
std
mov
scas
negl
pop
add
out
jne
fldt
push
or
int3
inc
add
in
out
inc
inc
bound
or
ret
shl
inc
leave
es
popa
push
dec
xor
test
xchg
subb
adc
aas
dec
lea
in
out
push
and
out
adc
adc
xchg
add
jno
js
stos
mov
or
pop
push
cmpsb
sbb
mov
mov
sub
pusha
aam
rclb
lcall
and
xchg
stos
int
mov
inc
pop
sub
in
js
hlt
mov
mov
jne
xor
xor
dec
or
mov
out
das
xchg
xor
out
inc
iret
xchg
repnz
inc
mov
inc
lods
sub
jmp
jno
dec
in
mov
insb
sub
sbb
sbb
jge
add
shrb
in
dec
std
scas
push
out
sbbb
xchg
cmp
movb
adc
out
and
sub
pop
inc
nop
add
lock
mov
neg
test
push
aas
dec
lret
aaa
ja
pop
xor
loopne
push
xchg
jae
and
xchg
or
stos
xchg
mov
lahf
fistl
dec
cwtl
inc
lahf
inc
aad
in
jno
in
mov
mov
jbe
popa
xor
dec
adc
int3
arpl
mov
dec
outsb
loop
xchg
dec
pop
insl
dec
jge
int
mov
push
jne
sbb
fbstp
and
sbb
aas
and
out
movl
lret
imul
cmp
scas
repnz
mov
repz
ljmp
push
aad
dec
repz
mov
gs
out
cmpsl
dec
mov
jle
scas
inc
fs
mov
pop
out
sahf
xchg
xor
cmp
mov
notb
fldenv
imul
cmc
mov
xchg
in
sbb
in
dec
xchg
sub
xchg
xor
xor
adc
insb
xchg
out
sbb
outsl
sub
jae
xchg
lret
in
out
es
or
sbb
rolb
shlb
nop
pop
mov
idivl
pop
mov
sbb
cmpxchg
and
ret
dec
fwait
push
or
inc
les
cld
insb
js
loopne
or
les
pusha
fcompl
mov
jno
aaa
push
or
adc
jmp
sbbb
dec
addr16
mov
pop
jge
push
movb
push
notl
cmp
xor
mov
inc
enter
sbb
pop
mov
xchg
adc
dec
pop
sub
fidivrs
xchg
mov
ficompl
rol
xor
cmp
xchg
ljmp
xchg
dec
leave
sbb
int
cmp
popa
add
push
push
dec
xchg
sub
fmuls
mov
and
mov
or
sbb
in
pusha
std
jo
xchg
icebp
mul
and
push
out
les
cmp
lock
cmpsl
mov
pop
mov
mov
push
mov
movsb
jnp
and
mov
leave
orl
call
sbbl
into
ficoms
jmp
mov
je
xchg
push
mov
sar
or
movsl
xchg
dec
shl
insl
loopne
in
xor
pop
sub
std
pop
cmp
pop
in
sub
pop
mov
adc
int
je
repz
out
cld
imul
xor
sbb
lea
sarl
sbb
xchg
lea
xchg
repnz
sbb
jnp
sbb
ficompl
sub
xor
in
pop
lret
js
rcl
mov
add
sbb
pop
and
lret
aaa
fsubr
push
add
inc
push
rcr
out
inc
in
push
mov
mov
fs
lcall
and
je
cmc
sbb
adc
into
scas
mov
xlat
int3
in
decb
adc
ja
inc
rol
lret
mov
xchg
mov
pusha
adc
cmp
ja
loopne
outsb
addl
flds
pop
es
push
fwait
stc
jbe
inc
xchg
popf
lods
sti
cmp
push
inc
rol
ljmp
sub
jmp
pop
inc
jno
xchg
push
popa
iret
movsb
jne
ret
xor
xchg
rcrl
fisttpl
les
or
outsb
cltd
ss
lahf
cmpl
adc
call
pop
ds
into
adc
insb
inc
xlat
cli
mov
mov
inc
test
imul
sbb
test
andl
jl
cld
add
mov
out
push
lea
imul
inc
sub
mov
sahf
cmpsb
fcomps
jnp
outsb
call
push
pop
shlb
into
add
std
cmp
dec
pusha
insl
pusha
pop
jnp
xchg
xchg
push
daa
test
es
pop
pop
aaa
pop
cmp
sbb
mov
mov
fisttps
mov
mov
iret
cmpsb
mov
lret
adc
iret
out
setg
test
mov
push
fwait
mov
adc
sub
movsl
mov
insb
enter
pop
dec
outsl
push
into
rol
pop
jmp
lea
fisttpl
pushf
mov
adc
or
movsl
jecxz
cmpsb
loopne
jmp
dec
add
sbb
inc
jo
enter
fwait
xor
repz
scas
cmp
dec
clc
jne
or
pushf
shrb
fimuls
jae
or
cs
inc
jno
out
out
nop
dec
test
sahf
xor
dec
lahf
mov
mov
jno
sub
stos
les
cmc
inc
mov
jg
dec
in
and
imul
add
inc
divl
icebp
push
fs
popa
xchg
jno
enter
shlb
aas
dec
movsb
xor
mov
shll
pop
jp
xorb
scas
jnp
lods
inc
iret
js
sbb
test
pop
mov
and
and
std
mov
and
popa
jg
xchg
data16
addr16
sti
cmp
jno
dec
and
push
jno
stos
jmpw
jmp
inc
faddp
jl
fs
gs
mov
fbld
pop
imul
xchg
cmp
mov
pop
and
leave
in
movsl
mov
aad
dec
popa
adc
out
or
scas
ret
push
je
aad
cltd
cli
sti
fwait
adc
jne
add
rol
jo
cmc
test
outsb
mov
mov
or
or
xchg
lret
std
sbb
loope
and
add
test
jb
dec
sub
iret
es
add
mov
xchg
int
mov
clc
push
das
ljmp
and
shr
cmp
add
bound
push
ss
fimuls
ja
or
jne
aam
push
stos
ljmp
gs
add
std
and
jb
push
or
jb
out
lret
lods
stc
or
in
loopne
jnp
dec
sbb
popf
jne
pop
mov
adc
stc
xchg
dec
jg
lret
fwait
cmc
mov
jno
push
outsb
adc
data16
pushl
aam
push
push
stos
lock
lahf
xor
sbb
mov
dec
cmp
pop
mov
inc
iret
lahf
add
or
mov
add
call
nop
and
imul
shlb
movsl
xchg
dec
out
dec
mov
jbe
mov
cvtps2pd
popa
sahf
lock
mov
shrl
jae
movsb
test
jecxz
mov
data16
pusha
xchg
mov
lods
cmp
clc
leave
jnp
mov
arpl
dec
xchg
adc
adc
fisubrs
fwait
dec
movsl
inc
stc
int3
popa
hlt
jl
jmp
pop
movsb
add
pop
push
in
sbb
xor
cmp
push
test
push
or
cmpsb
fadd
aad
shrl
mov
push
js
test
mov
movb
or
test
push
jne
lods
scas
out
bound
or
dec
adc
scas
sbb
sbb
fbstp
out
add
and
or
cmpsl
leave
pusha
flds
jo
sbb
push
insl
dec
mov
jg
popa
or
pop
sysret
scas
jnp
sbbl
mov
push
lods
aas
or
pop
sbb
cmp
jnp
fcomps
adc
mov
rol
add
jb
imul
and
mov
shrl
pop
dec
dec
rcrb
movsb
cmp
xchg
repz
test
outsb
stc
inc
outsl
bound
jg
repz
fidivrs
roll
fistps
mov
inc
push
sbb
pop
mov
inc
pop
sub
mov
push
mov
xchg
mov
ret
cld
out
cmpsl
arpl
dec
and
in
pusha
iret
lret
outsb
imul
mov
fldcw
jecxz
or
std
shlb
sbb
mov
and
dec
dec
lods
outsl
mov
shl
pop
incl
cmpsb
and
inc
adc
ror
outsb
jo
cmp
clc
cmp
or
adc
push
dec
stc
popf
jnp
nop
sub
cmpsb
jmp
push
adc
inc
dec
adc
dec
pop
xor
sub
dec
mov
inc
or
outsb
mov
leave
pop
nop
dec
nop
inc
pushf
dec
xlat
notb
jge
dec
cmpsl
sub
sub
les
sub
daa
lret
cltd
cltd
jmp
sbb
jle
pushf
pop
push
jl
js
ljmp
pop
cmp
rorb
jge
out
cmp
in
test
lods
outsl
sbb
rcll
into
leave
pop
cld
stos
fsubl
lret
jle
pop
movsb
fildll
sub
and
or
sti
mov
and
jo
mov
pop
hlt
xor
push
divb
mov
loope
dec
or
add
jae
dec
mov
out
movsl
and
outsb
sub
subb
cmp
pushf
cmp
or
shlb
dec
xor
test
out
xchg
push
fldcw
dec
aaa
fcom
cltd
mov
dec
and
jae
jg
add
adc
mov
push
adc
cmc
sbb
adc
xchg
push
mov
and
leave
ss
mov
lds
repnz
ss
mov
inc
push
arpl
pop
jno
cmp
add
xor
movsl
or
and
aas
or
in
mov
push
int
or
cmp
les
and
in
xchg
push
mov
adc
cmp
imul
aam
lods
sbb
fiadds
out
jl
add
mov
cmpsl
sub
sti
mov
cmp
adc
inc
cs
outsl
mov
ja
sub
aam
add
dec
in
mov
fcmovnb
sub
addl
popf
outsl
adc
movsl
addr16
sbb
inc
js
cld
mov
sub
sbb
dec
js
dec
xchg
mov
mov
shrb
mov
out
ret
sub
pop
push
add
xchg
and
out
sbb
pop
daa
sub
jne
fdivl
ror
cmp
stos
cltd
std
mov
cld
xchg
dec
stc
inc
lock
aas
push
xor
inc
adc
xor
xor
add
enter
xchg
mov
test
push
push
and
mov
in
jb
nop
fnstcw
adc
pop
and
jno
mov
jne
aas
add
out
or
sub
mov
dec
out
daa
test
and
icebp
mov
xor
mov
outsb
scas
jp
pusha
and
xchg
es
leave
mov
rcrl
push
jmp
icebp
nop
das
shrb
mov
pushf
in
nop
ljmp
jb
sarl
test
and
pop
push
xor
pop
out
arpl
jmp
clc
in
add
xor
pop
mov
push
jne,pn
mov
xor
inc
mov
outsl
loop
ficomps
dec
imul
push
jbe
push
cltd
negb
stos
mov
xchg
pop
sub
fs
pop
push
addr16
loope,pt
cmp
and
sbb
fcomp
sarb
jl
inc
scas
int
mov
inc
int3
pop
mov
dec
jecxz
int
aam
dec
push
dec
xchg
daa
sahf
call
sar
jo
fs
xchg
mov
insl
or
les
cwtl
std
stos
xor
dec
pop
lcall
push
xchg
cli
insl
jecxz
cld
push
xor
push
dec
dec
cmova
inc
sbb
ja
je
push
dec
sbb
cmpsb
xchg
hlt
push
leave
in
iret
pop
aaa
mov
xchg
jecxz
loope,pt
xchg
adc
imul
lock
xchg
cmp
stos
mov
ss
inc
pushf
insl
mov
pusha
jmp
and
sub
fs
clc
pop
add
cmp
lods
lods
mov
or
rolb
inc
loope
cld
out
insl
stc
push
orl
es
stos
lret
pop
fdivrp
sar
jo
jecxz
xchg
inc
mov
jg
xchg
aaa
out
dec
push
pushf
call
jecxz
in
fwait
cmp
and
jne
and
fisubs
bound
cmc
popa
lods
imul
jb
in
sbb
push
arpl
test
add
and
dec
inc
dec
xlat
push
inc
cmpsb
dec
ss
insb
test
lock
adc
sbb
mov
shlb
dec
dec
add
out
cs
mov
xor
jle
cmp
cmpsl
jmp
lea
add
daa
jno
sbb
cwtl
jp
and
cltd
cli
xchg
pop
and
cli
push
mov
sti
fstpt
shlb
aam
loop
mov
movsl
mov
mov
aad
mov
mov
push
mov
mov
bnd
shll
push
fcmovne
add
adc
dec
jb
fsubrs
scas
stos
xchg
sbbl
lahf
dec
or
dec
loopne
sub
sub
imul
sbb
or
cmp
pusha
or
movsb
ja
fiadds
rorb
xor
push
shl
mov
jmp
inc
sbb
or
fucomip
pop
inc
mov
std
and
xchg
aas
add
and
icebp
pop
icebp
loop
mov
pop
jo
push
jmp
jae
or
lods
jns
fistps
ficompl
icebp
or
lock
jmp
jle
sbb
repz
xor
pop
jecxz
mov
pop
or
sbb
inc
pop
pop
push
jge
pushw
sahf
fwait
popf
add
bound
add
dec
fbld
xorb
popa
mov
cmp
addl
cmp
mov
icebp
aas
outsb
rorb
sbbb
repz
and
and
inc
cmpsl
mov
cmp
dec
dec
out
pop
dec
incb
dec
push
sarb
loopne
shrb
inc
repnz
outsb
adc
mov
adc
push
mov
mov
pop
sub
adc
les
dec
repnz
fldenv
aaa
clc
push
cli
shrb
mov
sbb
add
xor
into
into
das
add
jp
mov
rol
repnz
cmc
dec
js
sbbl
in
xorb
add
aas
orb
mov
fstpt
shlb
enter
out
push
aas
and
jo
stc
insb
mov
jle
push
in
cmp
mov
xor
cmpsb
cltd
mov
pop
insl
sarb
jae
add
inc
in
das
aam
popa
mov
outsb
adc
mov
cmc
in
in
lock
js
lods
jnp
mov
faddl
dec
dec
in
test
xor
aad
insl
stc
nop
pop
or
testb
mov
mov
push
scas
bound
dec
sbb
sbb
hlt
cmp
imul
repz
or
or
hlt
sub
xchg
add
mov
insl
cmpsl
dec
fstpt
push
outsl
outsb
add
sbb
sahf
clc
mov
xchg
addr16
push
push
cmpsl
inc
das
cmp
stc
test
shrb
jecxz
xchg
fs
mov
and
fcompl
out
mov
nop
shr
sub
sahf
sub
fnstenv
jge
cld
push
sub
ja
mov
pushf
test
xchg
sub
fnsave
mov
push
and
add
xchg
sub
out
dec
pop
outsl
fs
mov
and
sub
outsb
jp
loope
xlat
jecxz
pop
bound
xchg
flds
xchg
push
in
or
push
mov
mov
mov
xchg
test
jl
lds
insb
add
push
idivl
dec
mov
cld
out
mov
cwtl
js
loopne
lock
hlt
into
stc
repz
pop
test
out
xor
lret
inc
mov
leave
push
clc
jae
pop
repz
imul
pop
sub
xchg
add
imul
imul
xchg
xchg
sbb
push
mov
addr16
cmc
ret
daa
daa
and
test
sub
mov
xchg
adc
ficoml
lahf
repz
andb
and
push
sbb
shrl
inc
fstps
mov
xor
jge
push
jecxz
andl
imul
lock
pop
movb
inc
adc
lods
pop
sahf
sahf
adc
jecxz
popa
xor
mov
rolb
orb
mov
mov
imul
insl
neg
sahf
int3
cwtl
das
mov
fwait
xor
es
insb
int
ret
ret
cmp
fld
in
bound
fwait
mov
adc
int
mov
add
mov
fldcw
mov
pop
or
rolb
arpl
and
dec
popl
call
inc
adc
andb
jl
daa
xor
mov
iret
sbb
ljmp
cwtl
mov
stos
out
enter
sbb
insl
ss
xchg
cs
pop
pop
fsubrp
addb
mov
leave
push
jg
xor
mulb
push
cltd
popa
or
stc
nop
iret
shlb
mov
pop
lret
sub
les
lret
scas
push
repnz
push
jo
leave
int3
lahf
jnp
mov
loopne
out
sub
cmpsb
mov
push
pop
movsl
xor
adc
sbb
cmp
outsl
jmp
movsl
test
stc
jbe
ljmp
dec
lret
and
pop
sub
gs
out
xlat
adc
jecxz
jl
adc
adc
rcll
push
mov
call
cmp
int
and
jbe
scas
push
movsb
sahf
jne
jbe
popa
pop
xlat
cld
popl
sub
push
cs
pusha
data16
xchg
stos
dec
stos
push
call
cs
enter
jp
add
fwait
cltd
out
mov
sbb
lods
add
lock
arpl
xlat
jns
jne
jne
insl
push
sub
lods
mov
sub
dec
in
mov
pop
sahf
xchg
mov
nop
mov
in
out
rorb
in
mov
and
popf
insb
mov
xor
cmc
jl
pop
stos
push
cmc
jmp
fidivrl
mov
aaa
sbb
mov
push
jecxz
inc
fsubs
sbb
sbb
fwait
scas
pop
pop
jge
or
push
bound
sbb
sbb
cmpsl
mov
sarl
aad
cmp
push
mov
adc
add
ret
dec
stc
nop
jge
scas
les
inc
stc
lret
int
mov
lods
xchg
push
push
mov
xor
test
lret
lods
jns
shlb
dec
popa
fwait
sahf
mov
movsb
add
cmpb
ror
pop
jle
mov
cmp
and
ret
cmp
lds
shlb
jecxz
or
decl
jbe
mov
fidivrl
cmpsb
popl
pop
movsl
adc
aam
mov
jp
enter
fstps
add
jae
fs
sbbb
push
in
xor
xor
fldcw
mov
xchg
call
lsl
nop
dec
xlat
jne
push
xchg
pop
fisubrl
repz
lret
cli
push
pop
out
xorl
mov
jbe
xor
inc
int3
pop
cmp
push
iret
movsb
clc
or
xor
in
dec
push
or
xchg
xor
jp
rol
mov
add
pusha
mov
mov
mov
cld
inc
sbb
sub
fldt
cmpl
mov
outsl
cld
push
scas
loope
js
adc
mov
jp
lret
bound
xchg
test
pminsw
cs
pop
jno
xchg
je
push
mov
sub
ror
push
sbb
movsl
sub
leave
bound
scas
mov
xchg
addl
insb
mov
sahf
ljmp
inc
adc
sbb
xchg
jl
push
xor
and
jbe
push
push
xor
jle
pop
jle
push
ljmp
cmc
mov
mov
push
andl
and
scas
sub
les
insl
inc
inc
jecxz
into
inc
push
jbe
xchg
jle
adc
push
idivb
xchg
les
xor
pop
pop
notb
mov
sbb
inc
loope
rclb
and
out
push
sub
int3
arpl
ljmp
les
stos
in
add
jne
sbb
dec
push
shrb
lods
nop
mov
dec
ror
xchg
inc
negl
jp
mov
pushf
mov
xchg
out
iret
xor
es
test
pop
lea
shll
dec
fistps
xor
dec
in
dec
in
ja
pop
sub
pop
xchg
test
inc
jb
inc
sub
push
imul
adc
faddl
shll
fisubs
and
fsubrl
aad
and
mov
jmp
aad
and
les
mov
je
lods
xor
adcb
sub
hlt
mov
les
cmp
outsl
pop
jmp
inc
push
mov
movsl
mov
mov
dec
mov
clc
xchg
repz
mov
sub
cmp
push
js
jnp
je
ret
mov
fs
mov
cmp
out
add
ljmp
andb
sub
sbb
xchg
sbb
jg
mov
dec
subb
fsubrl
sub
outsb
inc
stos
subl
pop
hlt
jne
mov
adc
es
in
adc
inc
add
push
repz
pop
mov
mov
sub
jo
int
rclb
pop
adc
scas
dec
roll
daa
out
xlat
loop
sub
sub
lahf
ds
or
pop
cmp
jno
shrl
aam
adc
daa
gs
pop
add
sub
or
rorl
cld
inc
nop
sarl
add
pushf
push
mov
in
xchg
fs
decb
mov
jp
es
arpl
jne
mov
scas
add
pop
cld
mov
ret
dec
aam
aas
dec
xchg
or
jge
lcall
or
adc
das
dec
inc
dec
clc
add
nop
xor
mulb
into
sub
and
jae
ss
push
and
mov
lahf
cmp
nop
mov
in
bound
inc
inc
push
outsl
out
ficomps
outsb
mov
xor
loope
notl
inc
xchg
mov
mov
loopne
xlat
inc
outsl
daa
in
sti
es
xlat
xchg
adc
sbb
mov
jno
jae
cltd
inc
mov
add
sbb
sub
xor
or
and
mov
aam
out
cmp
ss
outsb
add
inc
lahf
loope
add
sbb
ja
outsb
mov
enter
or
add
lea
xchg
cs
repnz
ds
jp
inc
mov
je
scas
out
scas
dec
fwait
push
push
sbb
xor
bound
cltd
iret
ljmp
or
fstps
jns
lret
xchg
fdiv
mov
in
mov
pop
je
pop
clc
mov
cli
in
jbe
stos
stos
mov
fs
sbb
jp
aaa
dec
dec
xchg
jp
sub
fstpl
mov
into
cmc
jge
mov
lret
mov
call
pop
btc
inc
and
mull
out
leave
cld
inc
sti
mov
clc
add
xor
pop
mov
je
std
cltd
adc
push
lcall
jno
mov
fisubrs
fbstp
jne
dec
mov
xchg
lahf
rorl
and
daa
fwait
sti
lods
inc
arpl
lods
jae
fldt
fmulp
popa
lods
aas
mov
dec
int3
lea
sub
mov
jb
jns
inc
inc
inc
dec
popa
jmp
aaa
pushf
xor
sbb
lahf
pusha
adc
shrb
cmpsb
dec
push
js
add
scas
out
mov
jecxz
add
inc
jmp
negb
lcall
xchg
or
push
pop
jae
add
push
push
loopne
dec
push
in
xlat
mov
lds
mulb
iret
pop
out
cmp
mov
dec
lods
add
leave
shr
push
xchg
lods
out
mov
mov
imul
fcoms
les
and
pushf
jge
jge
mov
mov
mov
fsubl
ficoml
in
sbb
mov
mov
pop
call
and
shr
mov
insb
xchg
push
pop
jbe
orb
sbb
mov
sub
jno
lods
mov
divl
pop
push
sbb
or
and
mov
lock
aad
push
jne
inc
out
pop
mov
pop
outsb
xchg
cmp
test
test
subl
test
mov
inc
scas
arpl
roll
or
scas
ffree
pushf
inc
adc
sub
sbb
sbb
inc
jns
push
jp
lea
popa
add
mov
cmp
fiaddl
imul
xchg
dec
popa
jle
cmp
jecxz
in
inc
mov
clc
inc
sub
sub
jb
jle
jmp
sub
repnz
mov
push
mov
and
xor
outsl
cmp
nop
aaa
mov
inc
pusha
adc
xchg
jne
jo
mov
mov
imul
pop
cli
xchg
sub
or
scas
subb
cmp
aad
xor
push
xchg
and
push
aaa
stos
jnp
inc
lret
inc
in
je
or
ret
xor
sahf
data16
in
test
cmp
sti
mov
sub
sti
out
pop
in
xor
cltd
sbb
mull
movsl
into
iret
mov
mov
sti
sub
sbb
loope
push
cld
jb
sub
repz
sbb
fbstp
cmp
jns
cmp
xchg
inc
subl
dec
orl
push
adc
nop
aaa
mov
lret
jo
pop
mov
popf
jbe
test
or
adc
push
hlt
pop
sbb
and
ja,pn
in
fwait
adc
mov
jge
jg
jl
cld
cmpsl
mov
pop
dec
dec
sar
insl
dec
dec
pop
sbb
lcall
dec
movsl
notl
or
mov
mov
inc
test
jno
fnsave
cli
dec
fucomip
lods
pop
out
loopne
imul
aaa
xchg
jb
sub
fwait
insl
test
lret
cld
repnz
fsubs
push
fidivs
jns
in
scas
sub
movsl
dec
stos
sbb
popf
data16
pop
mov
fs
push
ficomps
fmull
sahf
enter
or
and
scas
xchg
mov
std
and
sub
mov
pop
adc
push
cmp
aad
rorl
mov
popa
add
push
pop
dec
pop
mov
cmc
clc
mov
ret
jg
xor
mov
mov
dec
cmp
add
daa
pop
fadds
fmull
fisubrl
push
cwtl
or
pop
cld
ds
pop
cwtl
sbb
add
arpl
cmp
roll
xor
adc
dec
je
cs
sub
sub
push
inc
and
lds
cmp
jg
in
ret
leave
fwait
xchg
jl
aad
lahf
popf
push
outsl
mov
fsubrs
xor
int
stos
repz
and
pop
and
lea
push
pushf
lret
jb
lods
ljmp
pushf
xor
hlt
mov
call
fiaddl
mov
and
or
dec
adc
and
icebp
das
ljmp
push
outsl
repz
push
test
in
stos
mov
and
xchg
jl
jg
pushf
lea
inc
repz
inc
popf
hlt
pop
cmp
cmp
dec
daa
inc
jge
outsb
jle
jp
pusha
sub
mov
jle
cmp
jl
and
mov
add
out
push
mov
lahf
and
jae
in
mov
pop
sbb
leave
or
popf
xor
mov
mov
mov
mov
push
fldt
imul
repz
pop
in
out
aas
xchg
jge
and
jecxz
mov
mov
adc
jb
fsubr
lock
stos
in
iret
scas
xchg
out
xor
pusha
mov
xlat
and
cld
js
xchg
or
out
scas
jns
or
ljmp
ja
dec
mov
lret
rcrl
and
jae
adc
adc
cmp
cmpsl
pop
stos
imul
cmp
lret
jg
hlt
push
pop
in
roll
mov
dec
fwait
nop
fcoml
push
ss
movsl
cli
clc
push
fdivrl
popf
and
mov
in
pop
mov
mov
aaa
pop
lret
sbb
push
cmp
push
cld
mov
cmpsl
stc
popf
pop
sbb
inc
cli
outsl
jg
dec
lods
es
sbb
leave
test
pop
sub
neg
lds
cmp
outsb
popf
das
ret
jne
xchg
adc
inc
icebp
and
jb,pn
rclb
push
in
ja
and
repnz
mulb
out
pop
jmp
mov
imul
fcmovb
js
sbb
rorl
pop
mull
mov
cmc
repz
dec
mov
clc
sahf
ja
repnz
repz
pushf
mov
ret
outsl
std
cwtl
stos
and
je
negb
scas
inc
jnp
pop
cmp
mov
mov
and
adc
icebp
and
xor
stc
popa
mov
add
clc
or
ffreep
mov
cmpsl
leave
ja
shlb
pop
jb
cmp
dec
aam
adc
pop
or
sbb
jbe
mov
movsl
pop
mov
dec
inc
push
lds
xor
lds
adc
adc
aam
sub
add
xchg
es
je
popf
stos
and
mov
push
out
push
push
test
add
js
stos
sub
dec
xor
mov
fcmovb
fildl
push
fs
andb
ret
xor
dec
loopne
rcll
mov
addr16
call
adc
repnz
icebp
jo
popf
xor
xchg
decb
pop
mov
je
das
cmp
pop
mov
outsb
ss
mov
adc
jge
insb
in
and
sub
jle
cmp
lods
mov
je
shrl
mov
mov
xlat
repz
shll
inc
cmp
sbb
jbe
movl
incl
icebp
xor
mov
ljmp
dec
loopne
int3
aam
sbb
out
sbb
out
xchg
sub
xchg
shll
jmp
dec
jbe
jmp
pop
mov
inc
into
inc
add
popf
or
sti
call
push
lcall
icebp
loopne
roll
test
cmp
jle
adc
fldl
sub
mov
fnstsw
dec
bound
or
mov
xchg
cmp
xchg
ret
cmc
sbb
mov
cmpsl
push
sbb
jp
or
and
adc
adc
inc
and
jmp
cwtl
lds
mov
notb
push
daa
test
mov
xchg
mov
orl
add
jl
imul
jne
stc
pop
pop
mov
int3
pop
cmp
outsl
aaa
scas
roll
pushf
scas
aas
xchg
jbe
dec
xchg
pop
mov
cmp
adc
cmp
in
pop
ljmp
adc
xadd
bound
jb
imul
cltd
or
pusha
xor
std
mov
jno
push
sub
out
mov
cwtl
out
pop
repz
or
xchg
dec
lcall
shrl
jnp
stos
adc
xchg
cmp
scas
mov
sbb
sbb
or
fimuls
cmp
decl
xlat
movsl
or
xchg
inc
sbbl
and
sbb
inc
xchg
in
cli
mov
in
and
cmp
mov
in
jns
inc
pop
aas
out
mov
adc
push
sub
push
movsl
test
stc
lret
int
mull
pop
lcall
lcall
mov
xlat
sub
fiadds
les
push
jne
nop
adc
xor
test
dec
mov
push
cmpsb
dec
and
ss
push
pop
insl
test
hlt
inc
adc
inc
sub
pop
jp
pop
jne
pop
mov
dec
cmp
bound
xchg
iret
daa
aam
push
test
scas
mov
ret
adc
jecxz
inc
inc
aad
inc
mov
pop
in
xorb
movsb
cmp
pop
xor
ret
es
pop
push
add
fnstcw
push
imul
push
cmovo
cld
dec
andb
cwtl
push
inc
mov
push
mov
push
repnz
and
fwait
push
push
xchg
das
cmp
sbb
or
add
pushf
sub
adc
cltd
sbb
fstps
neg
inc
xor
aad
cld
jg
push
leave
xchg
xor
cmpsl
add
call
mov
ljmp
mov
xor
cmp
std
jno
enter
test
adc
rcl
inc
insl
in
call
mov
decl
loop
cmp
inc
mov
sub
aas
ljmp
adcw
cmp
xor
mov
pop
test
popa
mov
jbe
mov
jbe
and
andl
data16
jp
fbstp
cld
pop
cli
jnp
cmpsb
xchg
cwtl
das
les
insb
mov
fstpt
js
in
lods
gs
popf
cli
lcall
enter
insl
cmp
push
sub
gs
in
add
sub
ret
push
or
cltd
pop
dec
mov
xchg
jae
icebp
inc
push
or
std
mov
xchg
sub
add
jle
mov
xor
out
xchg
dec
sub
mov
and
or
cmc
pop
imul
pop
mov
out
out
loopne
negl
pop
nop
inc
fs
sbb
push
shl
outsb
sarb
repnz
lods
sub
les
stc
lea
daa
in
gs
sbb
push
mov
test
notb
add
mov
xchg
cmp
mov
push
mov
and
insb
pop
notb
outsl
xor
jge
mov
fistpl
mov
add
pop
lret
xchg
jmp
aad
mov
ret
inc
xor
push
iret
lahf
movsb
jae
imul
mov
xchg
pop
push
cld
inc
pop
pop
xchg
sbb
and
fdiv
jecxz
leave
loopne
sbb
scas
mov
mov
sahf
out
sbb
shrl
mov
out
loope
xchg
sbb
sub
and
test
lods
inc
cmp
stos
fstpt
leave
push
inc
clc
cmc
fidivl
push
mov
rcrb
sub
fdivs
dec
pop
jle
pusha
repz
sbb
mov
cmp
jo
nop
mov
inc
int
push
xlat
dec
enter
mov
dec
mov
shr
push
movsb
push
sbb
mov
mov
and
xchg
stos
nop
enter
fisubrs
mov
shrb
lock
push
imul
xlat
repz
mov
adc
adc
mov
pop
es
jp
int3
xchg
adc
xorb
lds
pop
movsb
xchg
std
xchg
add
lret
push
xchg
mov
icebp
push
cmc
add
xlat
lods
rcrb
cmp
imul
mov
nop
loop
ds
fisttpll
dec
mov
ret
or
fwait
cmpsb
push
dec
mov
cmpsb
cmp
xor
ret
jle
fcmovu
insb
pop
mov
mov
inc
sub
xchg
out
dec
sbb
call
or
add
jnp
mov
mov
mov
sbb
lods
cmp
imulb
sbb
ret
fdivl
mov
push
mov
mov
les
xor
sbb
mov
sbb
dec
ds
jge
jno
xchg
outsl
sub
loop
dec
pop
add
scas
std
int
adc
jp
sub
dec
js
ja
fwait
test
inc
sbb
jmp
lret
popl
lcall
sub
xchg
xorl
nop
add
xor
push
movsb
ret
or
sbbb
mov
push
int3
xchg
mov
sub
jnp
idivb
mov
sub
es
cltd
mov
rcl
jbe
andl
pop
mov
add
testb
mov
cmp
cmp
pop
outsl
imul
dec
push
aaa
push
mov
insl
int
bound
jl
xchg
fidivl
push
adc
cmp
push
jg
push
in
mov
ja
stos
out
icebp
fiaddl
sbb
sbb
popa
add
and
imull
inc
jg
fsubr
inc
mov
out
mov
or
push
push
inc
iret
mov
je
fbld
in
inc
push
rcr
lds
loop
inc
out
push
sub
dec
shrl
dec
push
repnz
jg
xchg
inc
add
dec
mov
loop
xchg
mov
test
inc
mov
int
pop
ljmp
pop
or
xchg
jl
in
mov
pop
lock
lds
xor
jno
mov
mov
adc
inc
clc
or
pop
mov
bound
scas
nop
repnz
out
push
mov
mov
and
push
push
mov
pop
inc
in
jne
hlt
adc
insb
jae
pop
mov
jecxz
lock
mov
cli
and
repz
in
out
clc
outsl
lret
and
loope
pop
adc
xor
daa
mov
inc
adc
push
dec
mov
jp
fistps
scas
push
or
mov
sub
push
imul
lcall
rcrl
xchg
pop
or
lcall
enter
outsb
addr16
adc
subl
mov
mov
aad
adc
sub
pop
mov
aam
mov
sbb
and
test
cmp
into
pop
and
dec
cmp
mov
and
rcl
les
pop
push
lahf
data16
cmpb
pop
mov
andl
movsl
fimuls
stc
insb
outsl
shrb
loopne
cmp
test
add
xor
fs
aaa
jmp
test
imul
jp
js
cld
pop
test
cmp
xchg
insb
xor
repnz
loop
sahf
dec
fnsave
adc
dec
fcomip
fs
sbb
test
or
mov
xchg
mov
fwait
mov
movsl
pop
or
hlt
mov
xchg
cs
sti
fidivs
and
jl
clc
es
loope
mov
pop
sub
sbb
sbb
mov
ja
sarb
mov
pop
ss
int3
push
cwtl
mov
push
leave
sub
mov
jo
repz
mov
fcoms
xlat
sbb
mov
sub
hlt
xchg
sub
dec
cmc
mov
gs
in
or
cwtl
ljmp
dec
lret
hlt
aam
mov
and
mul
mov
and
xchg
mov
loopne
cmp
iret
mov
and
rclb
in
mov
or
jbe
cmp
cmp
push
inc
xchg
lods
jp
pushf
xchg
mov
jne
shlb
xchg
sbb
jge
cmp
cmp
cmp
scas
aaa
pop
cmc
loopne
mov
dec
aas
adc
cmp
add
gs
and
lret
jns
push
in
adc
push
cltd
mov
or
add
lcall
mov
mov
minps
loopne
or
mov
into
lahf
and
lcall
mov
or
cli
push
int
aas
jo
in
ficompl
sbb
inc
dec
stc
pop
je
mov
out
cmp
test
shll
xchg
in
lret
addl
xor
ja
xorl
jp
stos
notl
fldl
iret
adcb
sub
dec
pop
lret
push
call
divb
xchg
fistl
or
push
aad
mov
insb
and
xlat
sbb
jl
in
push
popf
mov
dec
xor
shrl
xchg
lret
push
lods
scas
iret
aas
js
rol
test
rcrb
xor
mov
mov
or
mov
jecxz
sbb
mov
sti
and
cld
inc
inc
fwait
xchg
aaa
movsl
jnp
inc
imul
cltd
nop
sahf
mov
nop
call
out
std
lret
push
test
ret
in
test
and
jb
cwtl
or
jno
pop
out
jo
out
push
mov
sahf
or
or
daa
js
sahf
dec
loopne
xor
add
mov
mov
push
adcl
jmp
fs
pop
sub
push
ljmp
cmp
add
js
pop
mov
out
bound
imul
mov
sub
fists
loopne
mov
push
push
das
ss
out
dec
lahf
sbb
add
inc
bound
sahf
bound
sbb
movsb
out
test
popf
je
cmpsb
inc
fistl
mov
stc
out
jb
aad
subb
mov
cld
mov
cmp
iret
imul
sbb
nop
xor
ficomps
mov
push
jb
int3
aaa
adc
and
pcmpeqd
popf
in
lcall
xchg
inc
sbb
mov
sti
push
stc
inc
or
dec
pop
es
sbb
mov
xchg
mov
pop
cmpsb
icebp
insb
mov
enter
ret
sub
dec
bndstx
fcmovbe
jbe
and
fsubs
fwait
jne
jno
daa
mov
gs
fldenv
aam
mov
fwait
xor
add
inc
adc
fildl
lods
ja
mov
popa
lock
ror
mov
pop
xchg
sbb
dec
lods
mulb
jp
cmp
xchg
mov
cmc
sub
lock
and
arpl
or
push
jnp
push
cmpsb
jae
aam
movl
sub
add
lea
xor
scas
testb
test
lret
cwtl
in
xor
sahf
imul
xchg
adc
xor
movsl
in
popa
adcl
daa
push
outsl
or
cli
loope
es
pusha
mov
inc
fxch
push
mov
inc
or
or
leave
push
into
out
mov
xchg
push
push
or
jl
sbb
sti
bound
xor
test
pop
leave
push
stc
mov
ds
jmp
jge
inc
mov
adc
push
das
sti
jnp
xor
aam
inc
bound
popa
jns
shl
add
ja
mov
and
sub
mov
shl
push
fwait
jg
and
negb
test
pop
cmp
aas
jnp
xlat
dec
sahf
rcrl
cmp
pop
sbb
jl
leavew
inc
sbb
dec
sub
jbe
xor
jge
jo
adc
stos
mov
imul
insb
lea
cltd
sarl
fcmovne
adc
scas
mov
jl
jl
in
popf
clc
scas
dec
add
lds
xor
lahf
push
and
pusha
daa
es
push
test
imul
test
jmp
fwait
ja
lahf
stos
stc
test
insb
push
aaa
lods
in
test
nop
or
xchg
hlt
pop
sub
cmpsb
in
shll
mov
loopne
repnz
fmull
jnp
mov
ret
mov
inc
dec
dec
out
sbb
xorb
dec
push
push
cmp
stos
jp
push
jnp
js
add
mov
es
mov
sbb
pop
and
fs
ss
xor
out
add
push
out
ja
dec
bound
mov
pusha
add
add
pop
mov
sbb
fisttps
xchg
mov
cmp
gs
rol
push
xchg
xchg
imul
pop
sahf
pusha
push
cli
rolb
rcrl
stos
leave
inc
jecxz
ja
xor
inc
cltd
test
loopne
xchg
nop
or
andb
addl
cmc
xor
lock
fisubrl
pop
stos
dec
call
cmp
outsl
push
pop
adc
test
mov
mov
xor
jge
jecxz
adc
movhps
mov
pop
ja
test
out
fucomp
test
lods
jmp
xchg
cli
popf
cmp
cmp
push
subl
sub
sbb
add
sub
shrb
pop
mov
cmp
aad
lods
inc
decl
add
push
outsl
and
adc
and
aad
call
std
fnsave
int3
adc
jne
or
es
cmpb
pop
mov
test
mov
add
pop
dec
cmp
or
jge
adc
je
dec
scas
sbbb
adc
mov
out
les
and
gs
into
jle
negb
and
dec
out
in
cli
lahf
mov
push
arpl
andl
imul
xor
ficoms
cld
insb
mov
push
and
fisttpll
in
sub
stc
push
les
jg
xor
inc
out
xchg
popf
pusha
mov
lret
bound
cmpsl
ret
mov
outsl
iret
lods
mov
adc
sub
test
mov
jns
mov
jb
pop
push
mov
inc
dec
int3
xor
and
jecxz
inc
mov
cmp
notl
mov
stos
or
sub
pusha
sub
jbe
jae
stos
push
imul
ret
dec
mov
sar
call
dec
loope
sbb
pop
push
in
int
mov
push
pop
xchg
pop
dec
repnz
sub
daa
daa
inc
lods
fwait
cli
aad
sbb
cmpsb
dec
imul
jmp
push
xor
adc
sbb
mov
out
add
cmp
pop
fidivrs
repnz
xlat
jns
or
inc
gs
jbe
xor
pushf
sub
pusha
xchg
dec
and
js
std
lea
subb
lahf
dec
dec
push
mov
hlt
mov
inc
pushf
and
test
lods
xor
test
push
pop
cmc
push
cli
inc
leave
xor
ds
xchg
adc
shlb
mov
loope,pt
cmp
jecxz
and
std
repnz
call
in
test
in
sub
lea
fiadds
push
and
repnz
xor
mov
adc
repnz
mov
addr16
push
lea
cmp
dec
and
cld
and
xor
and
std
pop
stc
cmp
cli
ljmp
push
pop
mov
xor
sub
outsl
ffree
push
icebp
hlt
xor
mov
in
sub
daa
sbb
ljmp
mov
jmp
mov
in
or
inc
push
sbb
xchg
cmp
call
mov
mov
dec
movsb
sub
repnz
lret
pop
data16
dec
lret
shl
jb
out
mov
nop
sub
nop
sahf
xchg
add
lret
in
pop
push
xlat
inc
bound
inc
lods
cmp
push
pcmpeqd
push
pop
sbb
test
stos
mov
cmp
sbb
push
jnp
dec
and
stos
xchg
mov
ret
or
xchg
sub
lret
rolb
icebp
jne
popf
in
fstl
testb
out
adc
and
es
call
mov
adc
cwtl
into
cmp
ss
outsl
scas
mov
adc
pop
push
cmp
out
pushf
pop
mov
xsaveopt
out
push
cmp
and
sbb
dec
inc
xchg
adc
sbb
insl
hlt
gs
js
xabort
adc
jl
add
sub
cmpsl
lret
add
rolb
iret
subb
rcll
and
sub
data16
int3
dec
fisubrs
push
jge
pop
mov
in
fidivs
js
lods
ljmp
push
mov
rep
int
jno
arpl
xchg
pop
clc
cwtl
pusha
cmp
or
lcall
popf
jno
ljmp
or
fbld
fnsave
nop
ja
pop
xlat
mov
cltd
xor
pop
insb
sbb
lds
outsl
jns
mov
dec
sbb
dec
mov
dec
ret
outsl
aam
mov
dec
scas
pop
imul
aam
insb
gs
popf
sbbb
adc
rcrb
dec
dec
ret
repnz
rorb
add
scas
xchg
or
dec
mov
pop
outsl
jb
sbb
cltd
and
mov
push
sbb
fisttps
pusha
pop
cmpb
ljmp
pusha
or
loope
gs
cmpsl
incl
push
cmp
shr
dec
mov
je
inc
sbb
mov
pusha
idivl
ret
add
outsl
lcall
in
mov
mov
jmp
ljmp
pop
jmp
jnp
cmp
pop
filds
repz
mov
pop
test
xchg
push
jno
pop
bound
xor
sub
add
stos
stos
fsts
xor
test
push
int
add
jl
sub
insb
inc
mov
pusha
xchg
jmp
xchg
xor
mov
push
test
fldcw
push
sahf
dec
inc
imul
lods
inc
cli
ret
fnstcw
leave
addr16
push
jmp
add
mov
xchg
add
mov
fsubr
lods
pop
hlt
ljmp
and
subb
adc
dec
dec
xchg
mov
bound
adc
js
fnsetpm(287
mov
pop
jp
loop
cld
stc
test
or
cmp
ret
clc
push
stos
js
rcl
or
scas
out
jb
xchg
or
out
cmp
shrb
sub
pusha
adc
orl
xchg
mov
call
mov
cwtl
mov
inc
xchg
xchg
adc
mov
test
dec
cwtl
das
add
or
lods
mov
aad
insb
fs
sti
mov
lcall
cmp
cmp
aad
pusha
xor
fsts
push
sub
dec
call
jmp
lret
cli
filds
sbb
sti
push
lea
inc
stos
xor
pop
gs
push
fwait
xchg
aad
xchg
xchg
pop
xchg
or
bound
jge
xchg
mov
imul
and
cmpsl
adc
dec
lret
push
pushl
xor
xor
mov
jmp
sub
mov
sub
pop
int3
movsb
xchg
lds
sbb
mov
push
cmp
jmp
imul
cmp
lahf
mov
stc
dec
mov
enter
fidivrl
pop
push
mov
cmpsl
sub
mov
or
aad
bound
cmc
or
in
dec
bound
mov
pusha
sahf
sbb
aaa
notl
sub
mov
push
jle
pushf
pop
inc
xchg
sub
cmp
nop
mov
sbb
mov
int
std
aaa
iret
fildl
xor
iret
in
push
stc
aam
andb
repz
sbb
lret
jb
fnstcw
and
jae
frstor
jmp
xor
rclb
xor
mov
adc
mov
js
pop
inc
aaa
or
outsl
or
ret
sahf
inc
pop
into
das
mov
in
mov
cmpsl
lock
out
mov
xchg
popf
inc
push
ljmp
jno
and
jmp
dec
xchg
cmpsb
mov
daa
nop
lea
mov
sbbb
jl
out
sub
xchg
dec
xchg
mov
icebp
sbb
mov
add
mov
mov
and
out
daa
cli
cwtl
push
push
sub
mov
xorl
and
scas
xchg
or
icebp
int3
scas
cmp
push
xchg
imul
loope
test
add
push
out
loop
push
cltd
or
jmp
push
push
rclb
fcomp
xlat
push
es
and
cmpsb
adc
ret
cmpsl
inc
push
sbb
iret
push
xchg
test
in
insb
or
rcrl
insb
mov
fs
cmc
addb
pop
mov
fimull
and
xor
rorl
rcrl
xchg
mov
adcb
add
push
sbb
and
sbb
xor
es
insl
pop
jns
mov
pop
scas
lock
mov
bound
jne
xor
cmp
mov
insb
mov
dec
in
push
sti
jp
pop
cmc
mov
pop
jb
insl
push
das
and
pop
inc
adc
out
cmp
mov
xor
jl
sbbl
xchg
test
inc
inc
loop
cld
lods
xor
mov
fimull
mov
jns
mov
int
adc
mov
cltd
jo
out
sbbb
rclb
sub
in
cmpsl
adc
xorb
push
pop
imul
aaa
jae
loop
test
in
ficoml
sub
dec
stos
inc
subb
and
dec
shrb
xchg
dec
or
fwait
iret
stc
iret
push
or
in
push
push
or
rolb
stc
nop
inc
jl
xchg
mov
popa
dec
out
movsl
cmp
shr
cmp
fwait
ret
push
mov
push
shlw
insb
fistpll
jb
adc
hlt
cmp
push
jo
push
dec
repnz
gs
cmp
and
in
xchg
shl
mov
rcl
and
fs
jb
in
inc
mov
andb
mov
mov
repnz
sub
lods
pop
jns
or
jp
jge
push
sub
mov
xchg
mov
out
rcr
std
sub
ret
scas
sbb
mov
lock
rcll
pop
add
xchg
xchg
cmc
xchg
ret
or
cltd
push
lock
jns
pop
in
insl
adc
sub
push
mov
mov
outsb
mov
push
popa
xor
aaa
adc
pop
je
ja
outsl
jno
mov
pop
ret
out
test
dec
adc
addr16
test
movsb
dec
test
call
mov
xchg
xchg
scas
out
jae
push
mov
xchg
sbb
call
out
bound
jne
cmpsl
arpl
add
shrb
push
fldenv
adc
daa
mov
outsl
xchg
dec
pusha
mov
std
add
test
jb
cmp
ffreep
fcomps
add
adc
push
pop
daa
in
cltd
or
cmpsb
in
jp
jp
cmp
cmp
mov
pop
stos
ret
int3
dec
out
dec
aam
orl
sbb
loopne
push
inc
fs
inc
out
dec
xor
js
mov
inc
or
pusha
iret
dec
nop
jbe
inc
fmuls
add
mov
mov
test
jno
out
pop
das
inc
into
outsb
add
xchg
mov
mov
loop
mov
test
pop
fistl
cli
jmp
sbb
das
mov
add
cmp
shr
mov
adc
int
lods
popa
cli
and
out
gs
repnz
mov
mov
movsb
jle
nop
jnp
push
je
ret
push
je
pop
push
cwtl
push
mov
sti
pop
cmp
int3
sbb
xchg
aam
movsl
subl
lahf
pop
or
sub
jae
shl
leave
mov
inc
dec
js
rorb
cmpl
inc
shlb
mov
movsb
lret
out
int3
jg
int3
mov
insl
or
in
ret
xchg
inc
shrb
xor
cmp
or
mov
jns
ret
aas
lcall
js
mov
inc
inc
stc
xchg
xchg
pushf
scas
iret
jbe
lcall
cwtl
mov
es
inc
pop
inc
sub
cld
je
pop
sarl
shrb
and
jae
mov
flds
fcompl
xorb
lret
pop
adc
sbb
mov
jne
cmp
pop
xchg
sub
fidivl
pop
mov
iret
jb
dec
xor
xor
lret
and
or
adc
insl
mov
cmp
inc
insl
jl
pop
in
ljmp
imul
and
hlt
mov
mov
push
or
cmp
out
xchg
imul
inc
out
cmp
pop
xorl
scas
mov
jbe
lods
or
xchg
imul
pushf
lock
jb
xchg
in
pushf
dec
inc
stc
adc
les
stc
mov
inc
pop
int
subb
sub
cmp
fdivs
test
jecxz
aaa
scas
inc
test
jae
bound
push
test
ret
jmp
cmp
cmp
or
dec
or
aad
dec
pop
dec
notb
mov
lds
adc
subb
xor
test
push
pusha
push
sub
insb
jns
sbb
out
insb
mov
add
pusha
add
mov
or
rcll
mov
adc
lcall
push
jbe
cmpsb
xchg
adc
mov
clc
ljmp
push
insl
jb
outsl
sub
lret
addr16
jbe
adc
imul
xorl
ss
incl
ficoml
inc
sbb
fs
mov
iret
pop
stos
push
in
cs
jb
ljmp
lock
dec
dec
jns
ja
xlat
jle
xchg
mov
jecxz
inc
mov
ficoms
cmp
cmc
fs
es
xchg
clc
push
clc
not
movsb
and
stos
mov
mov
out
aas
mov
xor
stos
in
fisttps
dec
push
push
je
mov
push
shlb
and
cmpsl
jo
pushf
insl
dec
push
aas
stos
cmp
cmpsb
scas
mov
ja
movsb
jns
sbb
movsb
push
mov
cmp
stos
dec
lret
pop
repz
mov
mov
jb
jmp
jle
xchg
out
popa
sbb
add
push
lock
fisubrl
into
gs
mov
xchg
sub
cmp
outsl
nop
movsl
inc
bnd
movsl
stos
inc
dec
lods
js
sub
xchg
test
pop
mov
lcall
mov
pop
push
push
lahf
push
ss
inc
push
cltd
xor
cmp
jl
out
dec
aas
fdivrl
mov
add
in
int3
pop
mov
sbb
pop
jo
ret
aas
pop
bound
mov
add
cmp
daa
shl
cmp
add
mov
push
cmp
push
sbb
out
mov
fs
mov
dec
pop
or
adc
cmp
cwtl
xor
test
clc
xorb
aam
lea
mov
orps
or
popa
fnstenv
or
popa
add
mov
sub
inc
pop
or
inc
in
or
ja
xchg
cmp
sbb
jecxz
xchg
outsb
aad
sub
inc
cld
xchg
enter
sbb
fdiv
in
xlat
scas
insl
or
lods
ja
add
jecxz
cmp
fwait
stc
pop
lods
mov
fcoms
mov
add
fnstcw
fidivs
lret
ds
sbb
ret
add
hlt
xor
shlb
push
lods
jbe
lods
into
stc
sti
and
movsb
lods
fmull
cmp
jl
jle
dec
enter
out
imul
out
xchg
shr
fsubs
call
test
movsb
cmp
std
or
inc
push
dec
sbb
fsubr
movsl
mov
popa
loope
inc
adc
add
lea
jns
xchg
pop
mov
pop
loop
xchg
pop
adc
sbb
outsl
pop
push
mov
sbb
mov
xchg
jle
leave
ja
ss
inc
cmp
loope
sbbl
push
sub
std
stc
rcrb
pop
add
cmp
nop
std
popl
or
scas
ljmp
mov
leave
in
aad
fdivrp
ret
divb
add
adc
jae
jecxz
stos
mov
movsb
sbb
aad
jl
ret
daa
adc
repz
cmp
insl
lods
jo
hlt
cli
testb
sarb
aam
stc
and
jae
dec
ds
mov
aam
push
mov
mov
adc
pop
push
int3
scas
xchg
mov
stc
sbb
jmp
popf
xor
bound
adc
cmc
cli
mov
fucom
push
mov
mov
stos
fs
sbb
out
popf
imul
fwait
xor
jle
mov
icebp
or
push
sub
nop
cmpsl
inc
test
push
iret
test
iret
cmovp
cmc
adc
dec
jmp
xor
mov
sahf
xor
push
xchg
mov
flds
bound
loop
insl
sub
out
mov
mov
inc
inc
sarl
data16
sub
pop
ret
lcall
jbe
push
pusha
sbb
daa
xor
dec
jo
jne
imul
in
mov
daa
iret
fwait
pop
insb
sub
inc
mov
ljmp
loopne
jecxz
hlt
add
dec
lods
push
fwait
insl
cmp
int3
and
mov
dec
cmp
mov
mov
cld
shll
out
or
cmp
dec
and
mov
jbe
inc
ja
movsl
cmpsb
leave
xchg
leavew
sbb
test
clc
stos
xor
inc
clc
cli
pushf
scas
xlat
fldcw
fsubrs
test
inc
add
out
xchg
std
cs
pop
test
add
sub
sbb
push
insl
jmp
or
aad
mov
push
cmp
cltd
dec
push
sbb
adc
imulb
gs
fwait
stos
imul
mov
mov
lcall
js
sbb
jecxz
sarl
lods
out
fwait
pusha
xor
in
or
addr16
pop
loop
xor
ret
jbe
clc
dec
cmp
add
outsl
rcrl
mov
gs
dec
data16
fbstp
inc
push
jle
arpl
inc
sbb
sub
arpl
inc
push
add
scas
lret
push
mov
outsl
mov
pop
mov
jl
das
in
loopne
inc
std
lock
ja
repnz
push
sub
scas
inc
adc
int3
mov
int
mov
sbb
and
or
mov
jbe
mov
adc
push
cmpsl
lds
testl
insb
jecxz
scas
inc
inc
jge
cld
shrl
add
mov
add
mov
lds
cmp
push
push
and
mov
in
and
mov
fbstp
sbb
add
pop
sbbl
mov
push
mov
lods
jecxz
mov
sub
fisttps
xchg
movsb
sti
f2xm1
out
push
add
cld
adc
adc
and
mov
and
adc
xchg
out
add
imul
cmpsl
inc
pop
lret
in
mov
rclb
movsb
xchg
pop
cmp
pop
ds
jno
pop
fwait
dec
pop
xchg
int3
or
mov
int
jnp
repnz
cmp
cmp
pop
fldl
arpl
xchg
outsb
jg
inc
inc
pop
pop
out
decb
stos
loope
inc
cmp
xchg
inc
sbb
frstor
loopne
imulb
int3
pushf
add
in
stos
xor
mov
fiaddl
or
jne
call
sarl
testl
rol
inc
push
imul
push
sbb
mov
and
and
xor
out
daa
mov
mov
iret
into
popa
aas
lret
jae
call
rcrl
mov
dec
loope
addl
mov
jnp
out
enter
arpl
arpl
pop
xchg
mov
cmc
lods
push
outsl
out
negl
movsb
xor
adc
pop
stc
repz
mov
xor
inc
add
jbe
jle
push
loop
out
mov
aad
stos
les
push
cmp
icebp
mov
int
xor
cmpsl
and
js
sub
inc
xlat
inc
cli
pushf
jb
lret
ja
daa
pop
cwtl
pusha
mov
bound
dec
mov
mov
and
inc
insl
dec
decl
movsb
push
jle
ljmp
push
sbbl
mov
and
add
pop
jb
stos
sub
xchg
pop
push
cli
cmpsl
sub
mov
addr16
adc
push
js
fdivrs
mov
jg
pop
je
and
loope
and
adc
dec
push
dec
shl
int3
fucomip
add
xchg
sbbb
stos
es
fsubr
movsb
fnstcw
lcall
mov
insb
mov
lods
and
fs
lods
mov
out
pop
lahf
pop
push
iret
popf
int3
test
xor
int
mov
add
and
clc
mov
jge
pop
iret
pop
mov
mov
cmp
adc
inc
push
inc
ja
je
or
xor
pop
in
xor
in
add
xchg
in
in
push
push
sbb
jle
xchg
repnz
push
jae
rcrl
add
or
shlb
or
dec
mov
push
call
scas
nop
adc
add
inc
push
mov
dec
hlt
sub
dec
lods
into
jnp
jg
cmp
and
insb
insb
dec
rol
pop
add
or
cmp
cld
and
cwtl
or
je
xor
sahf
popa
sti
inc
aam
xor
repz
xchg
or
aad
mov
shlb
daa
daa
leave
or
xor
or
lea
mov
enter
mov
pop
divb
clc
popa
fsubs
xchg
lods
test
pop
pop
int
loop
das
rcrb
mov
pop
incl
shll
fstps
js
sub
xchg
jle
or
scas
push
cmpl
mov
lcall
mov
and
stos
pop
jmp
shr
test
jno
mov
jae
mov
subl
pop
cmp
out
out
jb
ret
jbe
xor
stos
xchg
test
sbbb
mov
cmpsl
inc
js
ds
cmp
add
lock
mov
mov
cmc
add
pop
pushf
enter
inc
mov
loopne
push
push
jp
das
mov
cmpsl
pusha
aaa
push
stos
movsb
enter
mov
or
jp
add
mov
in
jns
adc
inc
popa
xor
ljmp
movsl
adc
push
shll
pop
adc
mov
mov
in
dec
sub
into
mov
or
insb
xor
xor
scas
mov
push
jo
dec
pop
pop
cmp
xchg
add
mov
add
imul
mov
sbb
inc
outsl
andb
mov
fldenv
adcb
out
lcall
mov
inc
mov
repnz
cmpsl
lret
jo
and
adc
test
pop
mov
inc
pop
jb
lock
sbb
lds
es
dec
xchg
in
xchg
push
stc
out
inc
aaa
pop
hlt
movsb
mov
adc
subb
add
das
jg
mov
add
sbb
popa
clc
popa
loopne
scas
out
sub
pop
dec
je
lea
jnp
stos
in
das
push
add
jno
xorb
cmpsl
pop
push
pop
mov
xchg
sub
jnp
add
rolb
xchg
outsb
loop
in
das
call
shrl
mov
insb
sbbl
xor
sbb
imul
or
test
xchg
sub
jno
jmp
and
fnstenv
or
add
mov
xchg
xor
pushf
sarl
dec
mov
sbb
ret
jecxz
jecxz
in
jge
jno
scas
cmpsl
cmpsl
add
pop
jno
mov
outsl
or
sbb
sti
xchg
cmp
sbb
jo
adc
sub
test
in
test
sub
and
pop
mov
movsb
lcall
push
mov
add
ret
inc
out
inc
mov
call
pop
sbb
pop
mov
ljmp
mov
out
repz
pushf
aaa
outsl
hlt
xchg
mov
ljmp
imul
rcr
icebp
int
shlb
orl
sub
or
clc
adcb
xchg
lds
sub
add
addb
lock
in
push
insl
jnp
popa
mov
xor
xor
test
inc
sbb
inc
xchg
scas
inc
sbb
in
and
int
push
lret
orl
outsl
sbb
rcll
jecxz
sub
cli
repnz
mov
pop
shrb
mov
arpl
insb
sub
stos
es
jecxz
inc
mov
je
dec
xorb
int
subb
push
xchg
inc
out
sbb
pop
les
repz
dec
and
inc
rclb
pop
cmp
fwait
pop
repnz
mov
pop
push
insb
lea
xchg
adc
mov
mov
lock
mov
daa
out
jno
mov
jge
inc
shrb
inc
cmp
cmp
push
loop
push
cmp
test
test
nop
xor
and
dec
push
je
mov
and
or
xor
adc
das
jne
lods
popa
cli
jno
jle
xor
addr16
pop
les
cmp
test
shlb
ret
mov
mov
and
add
add
inc
xchg
cmp
xor
std
rcll
jmp
add
sbb
xchg
xchg
mov
neg
mov
jecxz
inc
nop
lock
push
mov
rolb
mov
pop
rolb
icebp
add
push
dec
imul
adc
filds
cli
pusha
sub
adc
popa
iret
orb
xor
jb
add
pop
dec
aaa
out
es
xor
push
stos
xchg
addl
xchg
jp
rcll
xchg
les
dec
das
pop
pop
out
xchg
icebp
movsb
repnz
cltd
jo
shrl
cmp
sahf
push
popf
iret
fistpl
movsb
mov
out
jecxz
dec
fmuls
cmp
lahf
sti
xchg
add
xor
cltd
ja
fdivrs
push
ror
iret
adc
mov
mov
pop
test
ja
adc
cmp
inc
sub
push
addr16
dec
or
dec
dec
adc
aad
push
sbb
xchg
inc
cmp
out
pop
fs
dec
gs
pushf
aaa
lock
sbbb
jnp
xor
sti
sub
repnz
mov
add
jle
push
ja
sub
or
mov
pop
ficomps
hlt
mov
pop
nop
adc
pop
out
jns
sub
add
push
jnp
cmp
push
mov
ja
mov
push
pop
sbb
lea
lea
scas
mov
insl
loopne
add
iret
mov
ret
cwtl
dec
hlt
lea
outsl
sbb
arpl
mov
aam
dec
dec
cmp
inc
bound
xor
aaa
jbe
sbb
push
push
clc
jae
push
sub
push
fisubl
jle
adc
dec
add
cld
pushf
sub
imul
movsl
jp
jg
push
cmp
inc
fadds
mov
push
scas
fsubrl
sbb
insl
sbb
outsb
idivl
mov
mov
lds
cltd
aad
xchg
dec
out
out
lds
add
jl
cmc
aaa
xchg
mov
fcmovu
data16
dec
xlat
adc
dec
xchg
aam
sbb
outsl
and
xchg
pushl
sbb
lret
xor
jmp
or
push
fiaddl
mov
loope
mov
or
aad
or
fsubs
mov
loop
pop
clc
test
mov
xchg
sub
mov
lock
mov
adc
out
cmp
lds
rorb
sub
imul
adcb
lahf
pop
push
flds
sbb
adc
mov
insb
add
das
mov
sbb
aaa
xchg
outsb
push
cld
mov
push
xchg
hlt
jecxz
sub
mov
lods
idivl
fucomip
jnp
in
call
jae
cmp
out
add
je
push
mov
nop
call
jns
lods
jmp
cld
mov
mov
push
lods
ss
test
stos
repz
pop
pushf
cli
add
jbe
js
mov
pop
jae
pop
in
test
imul
cmpsb
mov
add
rcl
test
cmp
insb
push
in
add
sbb
fistpl
test
fdivl
jns
jl
ja
mov
or
sbb
fdivr
xchg
push
jp
enter
jnp
mov
push
out
into
xchg
sbb
stos
inc
jge
and
div
pop
pop
adc
sahf
daa
repnz
adc
pushf
leave
daa
pop
int3
test
aaa
lcall
dec
stc
hlt
push
fwait
aad
xchg
pop
aam
xchg
xorb
fimull
dec
ja
xchg
xchg
fcom
orb
push
movsl
daa
dec
cmp
loope
push
jmp
into
dec
in
xchg
or
jae
fs
mov
negb
fs
pop
adc
stc
test
pop
out
aad
and
inc
ret
addr16
aas
imul
sbb
sbb
adc
cmp
les
sbb
pop
xchg
pop
div
into
mov
testb
cmpsb
inc
xchg
add
push
mov
cmp
popl
mov
sar
xchg
aam
ss
pop
cmc
adcb
jge
cmc
mov
outsl
cli
adc
xchg
add
orl
sub
push
xor
xor
out
test
rorl
out
decl
sub
std
inc
pop
adc
lcall
jnp
mov
insb
mov
loope
fwait
pop
scas
in
xor
movsb
mov
into
orl
cmpsb
push
in
std
fimull
notb
in
das
leave
hlt
jne
loope
and
subb
and
ja
popf
pop
fcomi
jl
add
push
filds
mov
in
test
mov
cmp
cmc
or
lods
pop
xlat
mov
out
scas
out
mov
xchg
xchg
sbb
lock
push
pop
imul
and
inc
cwtl
int3
sbb
jle
sbb
or
sbb
cmpsb
adcb
jne
and
and
and
scas
sbb
sub
mov
es
mov
sti
bound
mov
cld
mov
jo
push
inc
in
in
scas
fidivl
sbb
andb
lret
xor
lret
int
out
into
ftst
mov
push
bound
push
xor
inc
cmpsl
and
loope
nop
aas
jge
jno
movsb
js
lcall
add
lock
in
sub
or
sti
push
shlb
jbe
scas
and
or
inc
mov
outsl
push
in
adc
sbbl
movsl
sbb
and
lea
cwtl
jns
cld
mov
xchg
cs
fsubp
mov
movsb
fdivs
aas
imull
mov
pop
mov
test
mov
mov
lods
cmp
imul
nop
inc
cmp
pop
fmuls
test
push
sub
add
jecxz
cmp
imul
cld
loope
xor
pop
jmp
mov
enter
test
mov
les
pop
jg
stos
leave
and
xchg
icebp
cmpl
enter
jnp
pop
mov
xchg
pop
mov
or
cmp
jle
add
jge
jae
mov
movsb
rcrl
mov
dec
pop
repz
mov
fwait
mov
fdivl
add
dec
pop
fimuls
push
and
inc
test
cld
inc
push
add
xchg
loope
cmp
mov
popa
cmpl
ljmp
call
fists
sub
popf
popf
xchg
push
out
inc
xlat
pop
add
shrw
jle
jbe
jg
fnstsw
outsl
stos
divb
mov
fs
mov
sbb
pop
fldenv
bound
je
dec
mov
movsb
or
lret
pop
cmp
popa
pusha
push
and
xor
push
rcrl
jnp
inc
xchg
pop
mov
rcll
push
insl
xor
sbb
addl
gs
inc
pusha
pushl
xchg
adc
xchg
xchg
in
and
mov
fcomi
pop
std
rorl
es
dec
mov
and
adc
xor
xchg
xchg
ss
les
shll
jno
incb
lock
adc
cwtl
imul
neg
dec
into
fdivrl
imul
inc
mov
mov
mov
sub
jg
pop
mov
testb
push
mov
mov
xchg
and
mov
and
adc
popf
lret
in
pop
popf
cmpsl
aam
cwtl
pop
enter
inc
ret
nop
daa
jne
and
xchg
scas
call
in
inc
test
lcall
cmp
dec
mov
jb
xrelease
xchg
ljmp
and
xchg
sub
lahf
movb
jle
inc
dec
mov
sbb
sti
out
cmp
test
jbe
ffree
fmull
jbe
in
das
jbe
adc
andb
mov
mov
ficoms
test
out
push
insb
jge
mov
mov
iret
xchg
pop
popf
jno
movsl
sub
pop
jp
jns
sub
lcall
and
aas
mov
cmp
sbb
ja
ja
xchg
jne
gs
dec
enter
popf
add
in
jmp
cmpsb
or
in
lcall
sbbl
or
outsb
ja
outsb
xchg
mov
dec
in
add
jns
icebp
and
pop
insb
pop
pop
push
jne
fwait
scas
xor
outsl
jge
lock
aam
jl
dec
scas
icebp
push
pop
pushf
jb
xchg
lcall
jg
cmc
push
ds
sbbl
or
jl
mov
and
daa
jbe
push
sbb
pop
push
decb
sub
jne
cmpb
sbb
dec
xchg
mov
mov
dec
pop
out
or
fucom
cmpsb
lcall
ljmp
daa
ret
sub
imul
leave
out
dec
and
mov
jb
xor
adcb
scas
lahf
daa
sub
lock
mov
jns
mov
stos
les
js
jl
mov
in
lahf
call
iret
ja
movsl
movsb
sar
jne
in
imul
cmp
push
sub
fdivrl
cmp
xor
andl
pop
inc
adcb
jno
push
pop
scas
sbbb
pop
test
lret
cmp
setle
push
mov
loop
and
cmc
rorb
mov
sub
mov
test
outsb
neg
addr16
repz
add
ljmp
loop
icebp
push
mov
ja
mov
inc
call
shlb
jo
xchg
pop
test
push
or
mov
daa
jg
xor
xchg
lahf
lods
push
inc
les
orb
insb
mov
cwtl
mov
fs
into
mov
aad
sub
incb
sub
sarl
jmp
iret
pop
repnz
hlt
xor
movsl
sbb
cmp
jl
cli
lahf
and
sub
push
pop
pusha
and
and
daa
push
dec
aas
add
push
sub
pop
outsb
jl
dec
ljmp
dec
aam
xorb
push
inc
in
ja
push
mov
sub
add
jae
sbb
push
dec
arpl
add
jl
add
cmp
pop
pop
in
xchg
lock
dec
test
xchg
ja
and
mov
ljmp
test
inc
hlt
pop
mov
fmull
xchg
pop
repz
inc
cmp
jg
push
mov
mov
ret
clc
add
xor
adc
into
stos
add
fnsave
lea
test
outsl
scas
in
loopne
push
flds
cltd
lret
test
shll
pop
and
ret
adc
add
mov
rorb
mov
xchg
fsave
cltd
cmp
dec
jl
jmp
ret
fcomip
push
out
fwait
roll
enter
fcomps
into
mov
frstor
out
int
std
fbld
cmp
pop
push
lods
mov
xor
ret
xchg
inc
jmp
cwtl
mov
or
neg
and
sub
mov
into
imul
adc
xor
and
or
adc
adc
imul
inc
fwait
add
fwait
xchg
and
in
inc
fcomp
sbb
scas
lcall
pusha
fildl
pop
nop
subl
xchg
mov
imul
testb
sbb
xchg
dec
cs
jmp
hlt
bswap
in
sti
xchg
or
and
jne
push
xchg
push
loope
movsb
out
adc
repnz
arpl
push
or
cli
push
push
sub
insb
pop
pop
clc
test
jnp
mov
add
into
xchg
fcomps
fistpll
cmp
mov
mov
cmp
add
cmpsl
mov
sbb
and
fistpl
xor
popa
fs
xchg
fcmovnb
call
out
and
pop
sbb
xchg
jp
or
int3
fwait
and
xchg
or
fdivrl
nop
sbb
lods
adc
mov
decb
sub
lock
cmp
ja
repnz
addl
xchg
and
push
or
and
dec
sar
xchg
add
hlt
ds
dec
fldt
scas
cmp
sahf
imul
enter
fstpt
iret
add
das
in
stos
jo
inc
fists
dec
out
adc
dec
xor
loope
in
fucomip
insb
mov
mov
addb
cltd
cmp
arpl
add
and
push
es
jbe
cmpsb
out
fcomps
ss
out
and
cltd
cmc
push
mov
pop
xchg
fistps
in
mov
jmp
xchg
insl
dec
nop
xchg
push
push
push
rol
jge
adc
movb
xchg
sub
pop
xchg
bnd
test
mov
sbb
je
pop
and
cmc
loopne
out
into
jnp
push
pop
out
add
xchg
jp
nop
loopne
dec
push
pop
jno
jae
fmull
test
jns
push
pusha
daa
mov
cs
sbb
mov
mov
pop
adc
scas
dec
pop
jb
int
sbb
sub
mov
in
mov
dec
loop
cmp
ja
adc
cmc
and
pop
rcll
mov
sbb
lret
ret
mov
jp
push
dec
and
sarb
mov
xor
cs
std
adc
lds
mov
ffreep
pop
or
insl
and
cmpsl
mov
das
push
insb
adc
inc
jbe
cltd
stos
xchg
cmp
insb
sub
jmp
loop
imul
das
add
dec
cmp
sub
push
and
dec
mov
mov
or
lock
pop
jp
je
add
das
sub
sbbl
mov
mov
inc
push
sti
push
int3
mov
shrl
adc
cmpsl
dec
jl
ja
pop
fistps
inc
in
sbb
sbb
sti
cmc
xor
popa
sbb
clc
sbb
aaa
push
jge
daa
mov
jmp
xchg
xchg
or
icebp
rcl
ds
xchg
sub
xchg
shrl
into
gs
daa
mov
xor
pushf
pop
dec
ret
push
divb
jo
inc
and
mov
popf
mov
mov
xor
mov
imul
adc
mov
pop
fcomps
dec
sarl
cli
fs
test
test
push
or
daa
stc
test
mov
pcmpgtb
pop
xchg
scas
aas
sbb
push
mov
in
mov
loopne
adc
pop
movsb
icebp
jo
pop
and
xchg
aam
push
mov
jmp
dec
add
es
mov
jo
sbb
sbb
repnz
cmp
pop
test
lret
mov
push
lea
jns
out
jmp
or
or
dec
adc
xor
imul
and
std
push
adc
sub
jge
in
lods
gs
adc
movsl
shlb
and
xor
inc
pop
lods
xor
dec
bound
aam
and
cltd
adc
shlb
and
mov
shlb
pushf
decb
or
inc
pop
insl
add
mov
pop
jo
iret
sbb
inc
popa
dec
sahf
mov
jge
xchg
jl
xor
push
lcall
and
rcrl
stos
or
sbb
repz
cmpsl
cltd
sub
mov
int
cmc
les
adc
xchg
lcall
lret
pop
cli
sti
xchg
sub
push
js
out
dec
dec
push
xlat
fmull
push
stc
mov
incb
or
mov
push
repz
and
pop
sub
js
sub
sbb
andb
bnd
test
into
sub
imul
or
das
cmp
xchg
imulb
mov
in
stos
cmpsl
scas
xchg
pop
add
idivb
out
lret
mov
bound
dec
insl
lods
shll
sti
cmp
add
mov
lcall
out
hlt
push
fucomi
jle
arpl
enter
jo
pop
push
lret
cld
pop
testl
mov
ret
mov
test
and
sbb
mov
insl
jmp
loope
jmp
test
or
jecxz
pop
dec
dec
into
jmp
sbb
loopne
pop
jmp
push
icebp
sbb
and
jae
pop
lret
jae
cmp
outsb
sbb
or
cmp
dec
xor
test
sbb
mov
adc
insl
int
testb
hlt
adc
sbb
popa
dec
push
or
call
lcall
add
jbe
out
cs
cld
stos
jno
push
inc
rcl
adc
pop
jmp
rolb
stos
sbb
in
ljmp
add
fstps
les
fldl2t
or
out
inc
sbb
lea
mov
out
mov
mov
cmp
and
les
add
mov
sub
ret
lods
add
lock
movsl
and
xchg
stc
jae
adc
int
js
rsm
cmp
mov
pop
cmp
dec
mov
lods
es
test
pop
inc
dec
mov
xor
and
data16
fisttpl
movsl
or
jo
popf
mov
push
in
loope
sbb
mov
lods
xchg
lea
mov
stos
adc
sbb
out
scas
call
pop
dec
test
mov
pop
sub
jge
je
mov
repnz
jo
scas
inc
rorb
sub
aas
mov
int3
cwtl
pop
xor
pop
sidtl
rorb
lcall
xor
adc
std
lods
sbb
jnp
inc
push
imul
and
adc
push
in
xchg
push
jo
rol
mov
inc
ret
fdivrl
or
inc
mov
movsb
sbb
imul
fs
icebp
or
pushf
rcl
jo
ds
pop
push
xchg
clc
mov
push
add
bound
cwtl
insl
pop
cmp
lret
inc
mov
and
jae
lock
xchg
xor
or
jns
push
idiv
sbb
jg
fwait
nop
sbb
dec
push
mov
mov
js
hlt
cmc
adcl
sbbl
jo
repz
iret
iret
sahf
idivl
mov
mov
divl
test
mov
or
pop
pop
movsb
push
popf
jne
lcall
in
adcb
aad
imul
hlt
and
cwtl
jge
sbb
cmp
sarb
aad
jne
std
sub
pop
sub
lcall
stc
sahf
mov
decl
xchg
and
in
push
sub
or
jle
insl
inc
mov
dec
or
out
push
out
lahf
mov
loopne
orl
mov
cmp
xchg
and
iret
inc
mov
jmp
daa
fwait
push
mov
jge
arpl
movsb
stos
in
sub
pop
adc
cmpl
repz
jo
sbb
aad
ja
stos
test
mov
inc
adcb
jmp
leave
fldenv
adc
and
fwait
push
mov
add
arpl
sbb
push
cmpsl
sbb
and
sbb
stos
mov
mov
enter
stos
icebp
into
pop
cmc
lods
and
adc
xor
aad
arpl
out
in
mov
add
test
imul
ljmp
sbb
push
jle
les
xor
adc
test
mov
addl
xchg
repnz
sub
out
add
ss
cmp
xlat
jnp
inc
adc
pop
add
gs
xchg
and
into
cmpsb
loop
and
outsl
mov
sbb
test
shll
out
push
dec
pop
fidivrl
jg
pop
arpl
out
dec
or
aad
nop
movsb
pusha
add
mov
mov
jb
mov
xchg
mov
roll
xchg
pusha
ja
xlat
mov
push
xchg
mov
movsb
stc
addr16
mov
jge
fcompl
xor
mov
fistpll
xlat
mov
dec
push
ja
daa
cs
repz
dec
push
mov
and
mov
cwtl
lods
mov
push
fsts
sbb
jne
insb
add
cmp
nop
mov
mov
repz
jge
shlb
dec
shll
push
stos
lock
es
add
insl
repnz
inc
jno
inc
movsb
xchg
jmp
gs
aaa
es
xor
jne
mov
adc
icebp
jl
xchg
mov
jns
mov
les
lods
das
shll
push
mov
or
stos
inc
out
ficompl
nop
cmp
mov
fldl
stc
movsl
xchg
imul
push
push
push
cmc
movb
sub
aas
ret
xor
xor
fwait
rolb
adc
xchg
and
shlb
cmp
mov
das
mov
nop
push
test
mov
jbe,pt
xchg
lret
frstor
cmpsl
push
mov
sub
repnz
mov
sar
and
aaa
bound
loop
and
fsts
repz
je
dec
pusha
popf
inc
xor
mov
mov
xor
add
and
fldl
mov
lret
xor
das
loopne
enter
mov
sahf
or
mov
rclb
scas
ret
aad
xchg
jge
dec
inc
push
scas
sbb
xchg
es
cmp
xchg
pop
jg
add
jne,pn
push
scas
addl
aad
fnstsw
add
insl
xlat
outsb
lahf
xchg
cli
jno
mov
mov
addl
dec
mov
mov
fs
jl
xlat
cs
lds
xor
imul
cmp
mov
shlb
sbb
ret
mull
dec
std
dec
mov
int
mov
shl
sbb
scas
stos
xchg
pop
movsl
xchg
mov
shll
or
dec
addr16
jns
cmp
push
stos
fidivl
push
pop
testb
sub
test
test
push
das
mov
xlat
jbe
jb
insb
adc
stos
add
mov
xor
sub
push
sub
in
mov
icebp
imul
lret
movsl
repz
cmp
xchg
outsl
divl
pop
xlat
xchg
std
fistl
or
and
inc
orl
xchg
mov
iret
and
test
and
rcrb
les
es
pop
orb
jge
mov
sbbb
fwait
outsb
add
mov
mov
stos
sbb
sbb
xchg
cltd
push
jbe
es
out
cmp
push
out
mov
repnz
dec
fists
cltd
push
jne
and
jb
sub
mov
sti
inc
sub
stc
sbb
sbbl
repnz
dec
cmp
xchg
push
out
int
leave
into
cmova
adc
xor
lea
inc
inc
dec
push
in
in
mov
aam
aad
jne
shl
mov
insb
ret
call
xlat
shrl
inc
andb
fwait
insb
jle
xchg
xchg
imul
sbb
out
inc
cmpsb
insl
adc
outsl
xlat
das
push
mov
leave
pop
arpl
mov
dec
push
sub
xlat
stos
push
insl
movsb
es
and
jo
out
mov
pop
mov
rorb
out
inc
pop
inc
sbb
mov
and
cmc
mov
push
pop
mov
pop
jecxz
push
je
mov
mov
or
lcall
insl
mov
add
idivl
cltd
add
out
insl
movsb
fdivp
aad
test
pop
mov
cmp
mov
cwtl
pop
mov
outsb
xchg
scas
pop
mov
sbb
inc
sbb
cmp
xchg
int
mov
out
cmp
inc
insl
sahf
inc
aas
add
jno
and
or
ds
aam
and
aas
xchg
in
mov
hlt
jl
enter
icebp
cmp
cmpsl
mov
and
rclb
shlb
jnp
fiadds
mov
cmp
add
mov
and
pop
sbb
sub
dec
xor
jae
or
sahf
mov
fidivl
or
pusha
jmp
mov
sahf
into
mov
setae
jge
sbb
inc
adc
push
and
mov
int3
into
in
iret
fistpll
push
push
xchg
test
out
fbstp
or
mov
sbbb
xchg
shll
daa
fidivrl
cmpsl
mov
mov
push
arpl
data16
loope
mov
and
dec
outsb
ret
push
in
pusha
push
loope
dec
cmp
lods
mov
lds
push
add
ret
mov
mov
fsubp
mov
or
aas
or
jp
add
das
dec
lock
gs
xor
in
loopne
and
lock
and
lcall
sbb
addb
push
frstor
pop
jmp
das
shr
jg
push
in
add
add
push
xchg
mov
cld
out
jae
rolb
sbb
xor
shrb
or
icebp
sbbl
repz
xchg
push
push
aas
mov
pop
push
push
sub
flds
jns
pop
shrl
sub
cmc
push
push
mov
testb
imul
push
add
insb
lret
sbb
push
mov
cmp
xchg
lock
mov
adc
mov
push
lock
xor
stos
pop
xchg
shrb
cmp
jb
cmp
test
xchg
and
dec
jecxz
in
dec
into
mov
rorl
add
nop
ud0
mov
pop
insb
add
fildl
push
inc
pop
push
xchg
icebp
cs
popf
xor
imul
mov
push
xchg
inc
pop
jl
xor
xchg
sub
mov
and
dec
pop
add
andb
movsl
sbb
idivb
xchg
cmovs
je,pt
inc
cmpsb
mov
iret
or
add
outsl
ret
xchg
mov
mov
xchg
sahf
xor
and
movsl
das
jbe
pop
stc
pop
xor
loop
mov
push
sbb
xchg
push
mov
ds
push
cmp
arpl
idivl
pop
fldt
sub
mov
add
loopne
imul
les
ja
fdivs
jp
stc
jno
sub
imul
push
out
and
aad
push
xchg
aas
pop
fcmovne
xchg
sbb
adc
jae
or
adc
fs
lea
sbbb
repnz
fwait
and
rcrb
cltd
dec
out
push
leave
xor
xchg
xchg
pop
mov
out
adc
sbb
iret
loopne
or
lods
mov
mov
cld
leave
test
adc
lock
in
mov
aam
in
mov
push
pop
pusha
pop
jae
ja
dec
jnp
cmp
jnp
test
adc
les
pop
cli
xchg
sbb
push
daa
bound
mov
adc
lock
fisttpll
into
sub
into
or
aam
aaa
push
xor
sub
fnsave
push
adc
stos
mov
hlt
fucomip
and
inc
and
stc
mov
xchg
sub
or
mov
pop
jnp
sub
mov
sub
sahf
imul
popf
ljmp
lea
arpl
dec
pop
sub
enter
push
pop
cmc
popf
or
xchg
jbe
loope
sbbb
push
and
mov
std
mov
aas
int3
addr16
arpl
popf
mov
std
dec
cltd
pushw
arpl
repz
xor
jmp
mov
jns
sbb
dec
iret
sbb
xchg
or
ljmp
fimuls
imul
jae
je
or
cs
scas
push
cmp
aad
je
mov
mov
loopne
lar
mov
or
add
mov
cmp
das
lods
ljmp
testb
mov
ret
std
jno
dec
pop
addr16
sbb
outsb
addr16
lahf
mov
add
ljmp
sub
push
dec
pushf
inc
cmp
mov
mov
mov
add
fisubrs
int
call
dec
test
sbb
leave
test
xor
lea
xor
mov
popa
enter
repnz
movsb
add
cmp
into
sub
in
incl
and
movsl
lds
jns
negl
xchg
scas
jns
inc
push
sub
jae
aas
sub
scas
jg
push
mov
adc
jo
divl
xchg
fbstp
jl
dec
mov
outsb
mov
aas
pop
pop
repnz
push
push
popa
pusha
push
pop
test
fs
mov
movsl
mov
mov
leave
cmpsb
fbld
stc
fcom
sti
aam
sub
xchg
add
xchg
repnz
sbb
jno
mov
mov
std
fs
lret
gs
xor
sti
xorps
dec
popf
lock
inc
push
lcall
in
fnstenv
jle
push
fcomip
mov
stos
or
push
sub
divb
lock
cmpsb
es
shlb
pop
scas
mov
daa
jp
stos
mov
iret
ret
mov
or
out
cs
mov
pop
repz
push
sub
out
pop
out
jl
mov
adc
inc
inc
movsl
jae
in
fdivp
adc
push
cli
lds
fisttpl
xchg
pop
pusha
cltd
xor
fwait
inc
test
loope
movmskps
xchg
cld
insl
xor
sahf
and
movsl
iret
lods
mov
cmp
xchg
push
mov
loopne
test
add
cmpb
fisttps
add
inc
mov
inc
sub
xchg
pusha
sub
sbb
mov
shrl
ja
and
adcb
xchg
jae
xor
add
cld
ljmp
or
mov
mov
outsb
mov
pop
mov
sbb
loope
hlt
xchg
inc
shll
sbbl
jl
add
xor
mov
dec
dec
mov
pop
cli
es
mov
popa
xor
es
sub
loop
pop
insb
movsb
sub
aaa
insb
mov
testl
fcmovbe
jno
clc
aas
mov
push
in
lret
sar
int3
fsubl
jge
shlb
int
jno
sub
mov
push
mov
movsb
add
dec
movsl
in
mov
les
daa
arpl
xor
xchg
es
jmp
push
mov
pop
cmp
xchg
xchg
xchg
out
js
pop
or
icebp
jae
leave
and
sbb
nop
mov
jo
mov
sbb
mov
mov
sub
or
jbe
out
jo
xor
maskmovq
imull
xor
sbb
pop
ss
std
mov
jp
or
imul
add
cld
ret
out
loop
mov
xor
nop
es
call
lods
jge
insl
inc
or
mov
push
jmp
shll
mov
or
cmp
test
dec
stos
inc
insl
pop
and
add
fldenv
std
je
int3
adc
sub
hlt
popf
push
pop
jo
xlat
stos
inc
xor
fs
fstps
jp
jp
xor
ss
out
nop
cmp
ljmp
clc
cld
insl
pop
hlt
sahf
sbb
insb
cmp
imul
add
ja
pop
hlt
ss
adc
push
jg
jno
adc
iret
or
stc
nop
inc
popa
ficompl
jo
cmpsl
mov
pop
imul
repnz
jns
popf
repz
adc
adc
cmp
das
ret
xor
scas
es
sarb
popl
call
jno
push
out
xor
pop
inc
inc
mov
ja
mov
loopne
sub
jns
fbld
movsb
and
insb
pop
inc
adc
mov
xor
adc
out
scas
mov
sbb
scas
repz
daa
ss
mov
imul
cltd
inc
push
int
jp
or
and
or
inc
lret
or
add
cmpsb
inc
sbb
dec
loopne
sub
ja
inc
out
int3
addr16
je
repnz
and
pop
xchg
push
push
push
lods
push
xor
scas
in
adc
push
into
and
mov
scas
insb
jmp
mov
in
ror
fisttps
enter
movsb
inc
xchg
lods
push
jo
std
dec
leave
movsl
hlt
mov
xchg
dec
fsubs
enter
and
lds
outsb
mov
xor
pop
std
push
lret
adc
lods
cmp
mov
lahf
cmp
push
push
mov
inc
outsb
std
nop
pop
loope
cmp
cmpl
mov
cs
mov
int3
mov
push
mov
sarl
sarl
fs
mov
push
divl
mov
ljmp
jns
add
clc
or
and
cs
dec
fcomps
jae
gs
ficomps
push
xchg
int3
mov
js
mov
jbe
and
push
mov
iret
sbb
push
push
cs
fnsave
imul
enter
sub
push
adc
jae
sbb
lods
lds
stos
xor
mov
jl
xor
mov
dec
sbb
es
fidivrs
sub
push
test
or
data16
xchg
or
sbb
scas
jmp
push
insl
loope
push
mov
lahf
or
popf
jb
fsubs
stc
fwait
aam
aad
sub
pop
sarb
xor
bound
mov
arpl
jno
or
cmp
outsb
js
mov
ror
jp
ss
xchg
in
xchg
inc
xor
jmp
add
pop
mov
mov
aam
ja
pop
je
fmul
or
or
jbe
cltd
pop
sbbl
out
ja
repz
or
inc
mov
fadd
jecxz
push
and
aaa
sti
ljmp
xor
je
sbb
int
iret
jmp
out
and
adc
ret
lods
nop
xorb
jno
int
pop
repnz
sub
stos
in
sbb
int3
adc
scas
xchg
dec
pop
mov
xchg
mov
lea
negb
push
inc
lret
cmp
scas
cs
ja
int3
adc
into
cmpsb
dec
xchg
call
outsb
fwait
outsb
adc
mov
ljmp
push
and
and
pop
ljmp
push
push
xlat
adc
pop
xor
int
inc
into
cmpsb
lea
mov
icebp
fidivs
int
xor
cwtl
popa
aam
mov
leave
cmp
xchg
sub
xchg
es
xor
mov
sub
iret
jg
test
in
pop
repz
push
lods
pop
imul
movsb
in
cmc
mov
jmp
les
pop
xor
es
fbstp
es
mov
bound
ret
xor
lcall
mov
add
and
and
mov
arpl
pop
cmp
pop
push
rcl
lock
jne
pushf
push
jae
mov
imul
mov
push
and
test
out
test
fsubrs
and
jp
adc
pusha
lahf
adc
lea
jo
xchg
inc
icebp
mov
sbb
cmpsb
or
cmpsb
sub
xor
jo
sub
mov
insb
xor
push
add
inc
or
movsb
sbb
shl
mov
inc
repnz
fwait
jo
add
ss
dec
insb
inc
dec
test
lea
mov
jbe
or
sbbb
stc
in
sub
hlt
shl
mov
sbb
xor
dec
adc
imul
sub
push
inc
dec
out
mov
mov
insl
inc
push
push
out
pusha
outsl
daa
cs
mov
int3
pop
loop
aaa
adc
and
add
pop
ljmp
fsubr
adc
cmp
aas
repz
movsb
ss
sbb
repz
icebp
mov
xchg
pushf
xchg
push
mov
xchg
lss
fwait
icebp
xchg
mov
sub
in
sbb
inc
cli
cmp
ftst
pop
out
inc
repz
in
cld
dec
mov
lret
lea
or
adc
fstl
adc
xchg
sbb
xchg
jg
iret
pop
xor
jne
push
adc
xchg
std
stos
int3
mov
xor
call
sub
jne
cs
sahf
daa
mov
hlt
in
scas
and
cltd
mov
mov
repz
or
bound
pop
ret
out
mov
rorb
sub
adc
out
xor
xor
pop
in
cmpsl
xchg
sub
cmc
xor
stos
popl
jnp
dec
sti
test
pop
ficomps
test
inc
popa
sbb
pop
lods
inc
mov
mov
popa
in
imul
mov
push
push
xchg
popl
mov
jp
add
movsb
fidivl
iret
lret
xor
push
jne
jl
and
add
fbstp
es
pop
lock
cs
sbb
mov
fsubp
xor
out
stos
add
xchg
jg
lock
pushf
sbb
movsl
push
out
cmp
adc
or
divl
jmp
jmp
and
in
cmp
out
sbb
ret
dec
in
in
int
sub
ret
sub
movsb
popf
out
fsubr
rorb
stos
lods
jle
jbe
mov
mov
push
inc
stc
je
std
jg
sbb
mov
bound
mov
das
push
lds
mov
stc
dec
ss
pop
ret
jp
xlat
cmc
outsb
lea
aad
aad
dec
or
mov
dec
lret
int3
into
xorl
mov
xchg
les
mov
mov
movsl
mov
imul
jb
and
lahf
stos
mov
pop
int3
fisubs
and
shl
jne
xchg
inc
stos
ret
jle
lock
pop
sbb
xchg
add
and
rol
subb
insb
add
pop
out
mov
ret
movsb
inc
pop
shrb
nop
loopne
and
stc
or
ret
jle
cmpsl
andl
gs
je
aam
std
ja
ret
mov
push
or
sahf
daa
repnz
js
cmp
lea
in
sbb
int
popa
fisttpll
rcll
lods
sub
jg
pop
xor
mov
in
push
inc
dec
test
mov
stos
out
push
jp
shrb
jbe
sub
lcall
mov
lcall
aad
fstps
in
dec
outsb
in
test
jbe
out
pop
sbbb
pop
imul
adcl
or
lea
mov
into
lss
loopne
lret
adc
cmp
and
jg
jns
dec
push
clc
test
insb
popa
adc
sbb
mov
mov
iret
je
add
sub
push
dec
pushf
or
int
lahf
ss
adc
test
mov
sub
xchg
cmp
add
jecxz
stos
xchg
enter
bound
sub
loopne
imul
sahf
lods
mov
xor
xchg
lods
dec
mov
ja
sub
dec
mov
out
cmpsb
sub
lea
xchg
ror
jl
jbe
xchg
push
mov
test
ret
dec
dec
mov
jge
fsubrs
jp
les
aaa
into
cli
push
inc
xchg
pop
inc
mov
push
stos
fsubrs
daa
cs
cld
hlt
add
iret
dec
aad
scas
rcr
fnstsw
mov
push
lods
xchg
fdivrs
mov
add
inc
inc
sub
push
in
pop
cmpsb
adc
mov
nop
repnz
dec
fcmovbe
sbb
sti
inc
push
loopne
add
mov
jecxz
and
mov
adc
sar
or
xor
pop
mov
and
xchg
xlat
imul
sarb
pushl
xchg
std
push
dec
add
lds
sbbl
lods
jmp
shl
dec
or
xchg
dec
mov
xor
add
jns
lcall
popa
or
enter
daa
and
push
jb
jno
adc
clc
mov
ret
arpl
mov
adc
leave
cmp
sub
mov
icebp
lea
dec
pop
pusha
rcl
push
adc
rcrb
push
add
cmpsb
sbb
mov
push
adc
popf
repz
push
lock
subl
cmp
sbb
arpl
mov
es
outsb
jmp
add
dec
popf
stos
mov
out
jmp
adc
in
fnsave
jle
pop
mov
cmp
out
fwait
jecxz
and
xchg
push
lret
test
mov
mov
jmp
ja
hlt
sar
jg
std
mov
and
dec
mov
push
ljmp
jmp
in
imul
xor
cmp
aaa
stos
xlat
aam
imul
or
sub
xchg
cltd
add
adc
loope
sub
add
dec
cwtl
jae
sahf
movsb
jmp
jne
xor
fdivs
mov
mov
nop
lods
outsl
jge
aad
add
mov
pop
int
mov
loop
jns
sbb
pushf
rorl
lea
mov
aas
sbb
icebp
or
scas
sub
jmp
test
adc
scas
inc
loopne
pop
cmpsl
lock
ljmp
sub
or
stos
sub
mov
sbb
in
or
cmp
iret
ljmp
insb
or
loopne
das
pop
mov
sbb
or
pop
cmp
jnp
mov
aas
mov
sub
add
pusha
js
mov
popa
mov
or
jg
dec
cmp
hlt
loope
mov
pop
xchg
adc
aad
clc
pop
inc
fcoml
stc
cli
push
sub
or
mov
pop
push
push
jns
dec
stos
aaa
xchg
shr
or
mov
sub
fdivs
shl
xchg
in
sbb
inc
outsl
mov
inc
mov
xor
cmp
test
scas
loope
in
add
gs
lcall
gs
int
jge
jecxz
and
orb
lds
fdivs
xchg
and
mov
test
mov
popf
xor
je
out
or
cmp
adc
adc
outsl
adc
xor
jo
fs
inc
and
pop
adc
cli
sbb
push
popf
sub
inc
add
xlat
mov
loope
and
out
push
imul
ss
mov
andl
mov
ret
inc
dec
push
subl
xor
xor
xchg
mov
xor
pop
imul
mov
sub
fsubl
loope
cwtl
loop
arpl
push
sub
add
ja
push
test
dec
and
je
dec
test
sbb
imul
lock
sbb
pop
and
mov
cmpb
sub
cltd
rorb
inc
lret
divl
push
inc
lret
pop
in
iret
punpcklbw
dec
jae
fstl
nop
daa
xor
mov
cmp
out
cmp
out
mov
xlat
rorb
and
mov
mov
les
adc
lahf
mov
jg
mov
test
inc
arpl
imul
mov
aad
in
mov
repz
popl
sbb
jp
add
icebp
subl
icebp
scas
out
shrl
cs
fstpt
xor
cwtl
pop
mov
or
pop
lahf
scas
sub
push
std
xchg
jne
add
mov
pusha
sarb
out
lds
inc
fnstcw
mov
cmp
pop
sti
hlt
or
jl
add
xchg
pusha
and
mov
jmp
mov
fisttpll
mov
mov
xor
scas
inc
pop
push
movsb
mov
jle
arpl
aad
push
mov
jmp
orb
cli
stc
es
and
lea
loope
fidivrs
cmp
jl
mov
mov
jnp
push
outsl
fidivs
dec
fbld
mov
push
data16
xchg
push
movsl
inc
lcall
fucom
adc
sbb
sub
xor
fnstsw
insb
add
ret
fnsave
in
movsb
jg
into
insl
std
jmp
les
adc
inc
push
loop
inc
push
push
iret
or
inc
addr16
aas
adc
lahf
sub
mov
adc
jno
or
add
ficompl
js
aad
add
mov
pop
xchg
jle
jecxz
dec
mov
cmpb
cltd
subl
mov
jbe
xchg
int3
sub
sub
mov
mov
mov
add
icebp
loop
pusha
and
adcb
das
mov
pusha
testb
lock
push
das
adc
xlat
scas
mov
xchg
pop
int3
cmc
sbb
jnp,pt
repnz
test
or
lcall
cld
and
mov
mov
pop
cmp
cmp
mov
hlt
fists
outsl
push
adc
or
and
fwait
xchg
dec
mov
jno
inc
xlat
fistps
ret
cwtl
mov
sbb
xor
mov
icebp
cmp
mov
jmp
jae
adc
lods
lahf
fcmovne
cmp
adc
mov
jno
inc
call
mov
int
aad
out
sub
xor
jb
popf
xchg
js
mov
jp
pop
lock
inc
mov
jb
icebp
psubb
mov
push
setp
inc
cmp
mov
jmp
test
jle
fs
stc
dec
iret
data16
inc
loope
pop
je
sub
leave
gs
ja
and
mov
sahf
or
push
adc
popf
xor
add
scas
call
clc
sub
call
fldl2t
ja
aam
or
jg
sub
movl
pop
ror
xor
sbb
popf
jge
sub
js
sub
xchg
cmp
es
sbbb
or
mov
jecxz
cmp
mov
sub
inc
lock
lock
jo
inc
das
push
fdivl
adc
xchg
mov
and
test
fnstcw
dec
fildl
add
lcall
jne
add
scas
push
cmp
dec
and
push
xchg
add
outsb
mov
stc
xlat
mov
ja
sbb
add
inc
push
push
addr16
ljmp
push
mov
das
lds
or
stos
sub
fcoml
mov
mov
mov
imul
mov
fisubrs
cld
notb
push
and
push
pop
xchg
movl
int3
and
das
pop
popa
and
lds
mov
or
in
test
inc
cvtps2pd
sti
xchg
mov
sbb
in
sub
rcr
aas
int
shrb
addr16
or
aaa
mov
mov
jecxz
push
shll
pop
pop
cmp
leave
les
loop
insb
push
loopne,pt
popf
int
cmp
jp
pop
xchg
cmp
out
stc
nop
aad
insb
rcll
cmp
mov
mov
mov
dec
mov
cmpsb
testl
out
ja
adc
push
mov
faddp
jecxz
pop
xlat
sub
pop
xlat
and
mov
jno
scas
jno
addl
xor
mov
inc
cmp
mov
dec
push
pop
push
out
xchg
dec
inc
aad
lahf
idivl
mov
jns
cmp
pusha
stc
orl
pop
into
sbbl
sbb
out
jbe
mov
jg
insb
lea
push
cmp
add
mov
add
jge
or
pop
jno
xor
push
sarl
cmpsb
lret
mov
cmp
shl
sub
cmpsb
repz
lret
ret
ret
inc
push
inc
lock
movsl
pop
sbb
sub
sbb
ret
pop
mov
out
adc
jl
ficomps
push
mov
hlt
adc
mov
pop
imul
js
pusha
adc
out
adc
mov
gs
xor
cld
adc
xlat
sbbb
push
pop
hlt
xchg
jno
or
ret
jns
mov
cmp
in
aaa
adc
in
ljmp
push
cmp
xchg
stos
jbe
mov
push
mov
not
shr
adc
aad
push
sub
repz
or
add
mov
popf
push
cwtl
xchg
mov
sub
jge
int3
adc
loope
lods
in
xor
lret
push
add
out
das
call
cltd
gs
sarl
fistpl
loope
mov
ljmp
jb
lods
inc
push
filds
shrb
int
mov
ret
lods
add
mov
scas
loop
pop
lods
xchg
inc
pusha
inc
sahf
push
data16
pusha
stc
cmc
xchg
mov
xchg
lahf
ss
das
sub
mov
jmp
call
aad
dec
out
xor
xor
std
mov
fiaddl
fisubl
jb
push
out
idivb
and
imul
outsb
xchg
outsb
inc
fcomps
xor
das
jp
xor
and
loopne
loope
sub
cmp
mov
in
test
mov
xor
mov
aas
lea
mov
sub
mov
das
cmp
push
call
lods
hlt
sbb
aad
sub
cs
or
or
adc
lret
int3
out
xor
loope
mov
arpl
mov
mov
rorb
bound
mov
add
or
lret
icebp
inc
dec
mov
pop
nop
aaa
xchg
fstpl
in
sbb
mov
and
bound
stc
pop
pop
shll
pop
repnz
mov
aad
and
lret
ret
lods
out
xor
stos
jno
add
jne
push
lods
push
mov
aam
out
icebp
mov
jo
pop
nop
mov
out
mov
inc
mov
or
xor
clc
inc
inc
dec
sub
dec
fsts
icebp
imul
mov
xchg
ja
adc
xchg
fiaddl
sub
das
fs
cmp
orb
sub
push
mov
adc
ret
dec
jbe
mov
jae
or
xchg
pop
fcmovne
xor
sub
stc
mov
lds
icebp
or
push
lods
bound
adc
mov
mull
out
lret
int
jmp
popa
cwtl
push
jns
adc
mov
jbe
jbe
stc
pushf
nop
mov
xchg
incl
jmp
pop
xchg
xchg
leave
jne
push
cmpsl
out
arpl
mov
ret
in
xor
dec
popf
push
test
push
out
dec
movsl
xchg
cs
add
shrl
mov
test
dec
lret
es
jge
cs
dec
dec
in
cmpl
insl
rcrb
or
cs
ja
sbb
pop
ja
stos
addr16
int3
jns
testl
and
hlt
out
call
fstpt
hlt
cmp
and
or
lret
mov
imulb
stos
lods
mov
fisubs
sbb
jne
jmp
dec
xchg
push
and
test
lock
sbb
jb
jle
and
sub
dec
lods
xor
sub
push
es
adc
inc
add
xor
dec
fsts
xchg
push
push
pop
push
pop
cmp
loope
scas
fldenv
popf
adc
adc
ret
repnz
jne
ljmp
leave
xchg
push
push
sub
pusha
pop
in
fcompl
mov
rcrb
imul
mull
dec
jg
cmc
fistl
xor
ss
pop
cmp
jg
jbe
jge
imul
lcall
imul
stos
push
stos
ds
popa
pop
sbb
xchg
inc
mov
jp
add
push
addr16
cltd
adc
cmpsb
pop
lea
push
push
xorb
lods
cs
sub
lds
xlat
jo
lds
test
rorb
add
mov
sbb
gs
outsb
scas
pushf
cmpsl
sub
fdivr
incl
stc
push
or
in
jecxz
fstpt
jge
lret
lahf
imul
pop
pop
jecxz
or
mov
jno
inc
xchg
sub
and
and
jno
mov
pop
add
sar
mov
or
aad
pusha
loop
xchg
les
loop
idivb
cmpsl
loopne
aam
add
ret
ss
lds
dec
push
pop
out
inc
frstor
inc
rcr
std
shrl
idivl
pop
insb
mov
out
push
sbb
aaa
mov
loope
push
mov
sbb
mov
add
xchg
xlat
xor
aad
jne
mov
arpl
add
mov
pop
aad
arpl
insb
shrl
repz
or
imul
shrb
data16
push
nop
cld
adc
outsl
outsl
xor
out
data16
xchg
cmpsb
and
add
and
ja
jbe
inc
movsb
pop
aaa
notb
or
xchg
dec
push
push
lahf
or
or
mov
or
imul
cld
and
mov
sub
outsb
insl
dec
push
dec
stc
pop
xor
sbb
push
pop
mov
fmulp
shl
clc
adc
pusha
clc
jbe
mov
lods
test
imul
adc
imul
ret
mov
xchg
dec
in
movsl
loope
cmp
movl
cmc
imul
sub
xchg
insb
xchg
mov
popf
cmp
lret
int
mov
pushf
add
or
mov
push
jne
push
cmp
fcoml
push
addr16
xor
scas
mov
pop
adc
pop
xchg
mov
stos
lods
jns
xchg
mov
in
cmp
mov
mov
lds
mov
sub
and
jge
mov
std
or
inc
test
xor
idivb
lahf
add
adcl
lods
out
or
push
and
movsl
outsb
add
inc
xor
into
leave
or
aam
push
xchg
cmp
xor
lods
or
mov
pusha
xor
sarb
xor
push
sahf
xchg
orl
imul
pop
ret
cwtl
add
lods
push
cld
pusha
jne
push
lods
xorb
into
mov
xor
add
rorl
arpl
or
arpl
xchg
imul
cltd
js
mov
pop
adc
and
int
loopne
sbb
aad
dec
pop
aad
lahf
and
cltd
stos
jns
addr16
pop
pop
in
push
test
and
vmread
dec
ljmp
aas
push
cltd
jo
enter
in
jp
mov
jle
fadds
out
mov
or
insb
out
pop
push
mov
push
cmpsb
or
sbbl
sub
dec
insb
jl
stos
je
inc
loop
pop
out
jo
dec
fstpl
inc
stc
scas
repnz
mov
scas
xchg
lret
dec
ljmp
mov
push
cs
fsubl
inc
mov
mov
pop
out
stos
leave
jns
fstps
pop
stos
jl
pusha
leave
mov
sbb
addr16
leave
mov
mov
icebp
xor
gs
aam
jg
insl
xchg
and
cli
pushf
xchg
adc
mov
or
call
fdivs
mov
clc
dec
pop
push
out
lea
or
mov
orb
cmp
scas
les
shrb
rol
pop
insl
dec
bound
fwait
inc
pop
cmp
dec
popa
ljmp
fstpt
orb
scas
adc
mov
cld
mov
pop
mov
mov
outsb
pop
fwait
test
sahf
mov
lahf
sahf
in
jno
dec
and
js
cwtl
das
dec
cltd
inc
pop
enter
ljmp
mov
cmp
add
xlat
xchg
xchg
cmp
jge
dec
dec
ret
jmp
test
into
pop
add
div
adc
xlat
mov
dec
lcall
ds
cmp
fisubl
cmp
pop
push
out
or
stc
mov
or
mov
fidivl
adc
dec
pusha
mov
sub
inc
xchg
lret
and
add
into
dec
mov
pushf
sub
shlb
rolb
das
sbb
cmp
push
or
adc
fists
repnz
call
subb
cmp
shll
xchg
or
xchg
add
mov
push
aad
jne
xchg
nop
aam
shlb
ret
xchg
adc
nop
jae
pop
pusha
shr
repnz
pop
popa
outsl
or
mov
adc
loopne
and
test
mov
xor
xlat
jbe
aaa
into
inc
xchg
sahf
inc
jo
fisubl
fisubl
push
mov
lods
ljmp
testl
sbb
mov
das
ja
push
jno
and
orb
inc
popa
in
mov
mov
lds
mov
rcr
mov
jbe
scas
roll
les
pop
and
pop
sbb
bound
cwtl
lods
pusha
adcb
into
xchg
stc
ljmp
sub
push
dec
mov
sti
leave
nop
mov
dec
push
mov
fcoms
ret
ret
leave
int
scas
mov
pop
pop
bound
or
test
iret
xchg
or
jbe
dec
cmp
cltd
jle
adc
scas
mov
and
jae
lds
xchg
xor
stos
lret
mov
jnp
xchg
xor
shrl
sahf
loop
or
test
fcmovnb
mov
mov
sub
add
cmp
mov
mov
xchg
mov
mov
xchg
mov
push
pop
dec
imul
xchg
pop
in
andb
mov
fwait
push
das
frstor
rcll
pop
cmovle
popf
inc
mov
mov
pusha
mov
jo
xchg
scas
out
inc
movsl
mov
push
imul
dec
jnp
mov
push
push
enter
mov
xor
jg
sub
leave
popf
addb
imul
mov
or
data16
mov
arpl
push
jle
pop
stc
scas
cmpsl
xor
adc
dec
hlt
test
aam
inc
jae
cmp
xchg
test
dec
in
ja
cmpsb
push
cs
subl
in
nop
pop
adc
inc
and
mov
fstl
mov
pop
lret
pop
mov
dec
loope
xchg
sub
adc
lea
ds
jmp
sahf
nop
das
cmp
movsb
dec
sub
push
and
xchg
xchg
in
push
fdivl
bound
stos
repnz
mov
fbstp
add
and
push
mov
or
xchg
xchg
sti
incl
cmc
sbb
and
cmp
out
into
cld
packsswb
push
cwtl
pop
loope
mov
jge
xorl
adc
mov
rolb
pop
mov
dec
fisttps
jae
dec
in
data16
shlb
add
dec
test
mov
stc
pop
adc
in
mov
arpl
int
loopne
or
lds
movb
xchg
cmpsl
pop
sub
int
mov
jle
gs
aam
or
shrb
push
testl
mov
add
outsl
fwait
test
ljmp
inc
int
push
js
add
popf
cld
or
sbb
in
popa
dec
mov
mov
sub
pop
std
loopne
xchg
adc
das
mov
or
inc
pop
fidivrs
lret
stos
mov
sarl
pop
push
push
adc
cmp
pusha
ficoml
jg
dec
test
add
bound
jg
inc
push
and
jb
mov
cld
sbbl
mov
mov
xchg
adc
xchg
cmp
and
ret
push
mov
outsl
or
xchg
in
cwtl
das
pusha
push
xchg
xor
mov
cmp
movsl
push
adc
movsb
dec
mov
push
inc
mov
iret
lock
xor
scas
shll
je
push
sbb
stos
arpl
leave
dec
cmp
mov
imulb
sbb
movsb
mov
jecxz
push
lods
cmp
xchg
hlt
dec
mov
add
push
icebp
adc
push
pop
or
push
sub
leave
leave
mov
icebp
or
out
rol
jp
push
popa
enter
and
stos
pop
xlat
xchg
je
xlat
cmp
mov
push
jge
movsb
idivb
subb
dec
push
ret
dec
push
shr
pop
pop
cmc
in
cmpsb
jne
int
repz
adc
xchg
jge
pusha
mov
dec
hlt
mov
shll
scas
pop
xor
dec
loop
lret
bound
xor
cmpsb
in
add
insb
mov
and
je
add
add
sub
aad
cmpb
jmp
enter
test
lret
nop
xlat
xchg
mov
ret
cmpsl
cmp
std
out
mulb
or
mov
add
and
rcll
sbb
mov
in
inc
push
cmpb
push
lcall
push
cmp
add
aam
dec
addr16
jg
mov
jb
aad
push
imul
pop
jae
push
push
and
adc
adc
lea
aaa
mov
sarb
aam
outsb
dec
and
adc
adc
pop
sbb
insb
mov
call
decl
movsb
cmp
and
lods
cld
mov
lock
out
test
test
lods
test
mov
ja
stos
inc
dec
je
cmp
jbe
and
push
xor
adc
cmp
decb
xor
jbe
cmc
icebp
adc
push
push
cmp
cltd
in
das
adcb
aad
sbbb
fsubp
sub
inc
loop
xor
mov
fistps
pop
adc
cld
loope
sbb
xor
or
loope
out
std
xor
stc
xchg
mov
fistpl
shrl
xchg
outsb
loope
jo
fstp
in
dec
sub
hlt
js
add
bound
sbb
and
fidivrl
mov
dec
and
sub
repz
stos
orl
out
ljmp
nop
mov
popf
mov
push
loopne
cmp
imul
je
arpl
xor
mov
test
test
inc
fimull
loopne
and
xchg
add
inc
ret
push
cmc
push
rorl
dec
testl
aas
shr
popa
xchg
adcl
insl
loop
mov
mov
pop
dec
sahf
daa
cmp
gs
xchg
call
adc
jno
das
add
xchg
dec
data16
mov
aam
aad
jge
dec
add
jmp
movsb
sti
fstps
xlat
push
cmc
push
mov
inc
inc
out
dec
cmp
cltd
hlt
dec
inc
adc
push
push
jno
mov
sbb
and
mov
pop
nop
cmpsl
and
dec
mov
adc
bound
data16
pop
adc
fildl
test
repnz
pcmpgtb
test
sbb
mov
and
add
aad
fstpt
ret
repnz
cmp
inc
dec
rcrl
jb
fucom
sahf
xchg
add
and
fwait
mov
repnz
jnp
in
nop
rorl
or
out
cmp
lret
pop
sub
or
pop
jno
push
add
push
fwait
cmpsl
in
xchg
and
testl
cwtl
in
callw
cmp
push
shrb
out
into
or
je
mov
and
hlt
into
scas
aam
push
sub
mov
mov
jge
aas
sti
adc
idivl
or
cs
jno
sbb
xchg
mov
pop
out
imul
mov
push
and
lock
pop
stc
fs
dec
fimull
mov
mov
sbb
iret
data16
cld
jae
dec
mov
loopne
ja
xor
cli
fadds
or
ret
jg
shll
pop
outsl
jl
pushf
jbe
dec
dec
mov
xor
ret
lret
pop
shrl
stos
popa
mov
sbb
hlt
cmp
test
and
mov
sbb
fistpl
pop
cs
clc
enter
out
add
lret
and
arpl
push
test
and
adc
add
jl
mov
arpl
out
stos
addr16
fwait
push
ret
js
adc
aaa
sub
xchg
push
aam
icebp
nop
aas
sbb
in
pop
sub
loop
movsl
lcall
lcall
loop
fisttpl
arpl
lods
cmp
xchg
adc
cmp
fs
adc
cli
xchg
sbb
and
in
jno
es
inc
rcrl
xor
lock
insb
add
dec
xor
out
inc
repz
incb
loop
out
pop
inc
jl
add
ret
or
sbb
jnp
fcomp
jne
sub
lcall
add
jmp
push
mov
iret
test
or
scas
lea
push
ds
jl
fsubrl
sbb
push
sub
fcompl
test
shr
rolb
push
push
loopne
mulb
outsb
mov
fdivl
mov
in
int3
adc
je
out
dec
je
out
sbb
and
mov
shll
fidivl
mov
pop
mov
pop
fs
sbb
inc
test
int
jns
cld
mov
cltd
dec
and
cmp
push
loopne
or
or
pop
repz
dec
in
test
cld
test
jp
js
jle
inc
out
inc
ret
fsubrl
cmc
push
and
rcr
test
aaa
push
shrl
pop
mov
push
jmp
sti
xchg
cmp
in
dec
outsb
push
insb
fldl
or
mov
push
imul
mov
mov
or
cmp
js
loop
xlat
xor
xchg
inc
dec
mov
sahf
negl
jo
or
cmp
repz
shl
imull
inc
cltd
ljmp
loope
and
sbb
pop
mov
mov
popa
movsl
add
sbb
iret
adc
cmp
mov
cmp
ljmp
int3
insl
sub
test
scas
inc
subl
dec
dec
outsb
cli
sbb
pop
cmp
mov
lret
or
lds
push
dec
lret
add
sbb
xor
sbb
lret
aas
xchg
xor
fst
fstpl
xor
mov
arpl
in
outsb
cwtl
mov
xchg
pop
cmp
aad
and
dec
in
dec
das
into
popf
inc
in
xorl
push
hlt
mov
xor
outsl
xlat
jnp
outsl
gs
fwait
lret
mov
sub
inc
fdivl
adc
dec
scas
push
fwait
iret
push
hlt
push
lcall
test
jmp
in
bound
and
mov
mov
negl
or
call
add
jp
adcl
add
mov
xlat
hlt
xor
pop
jg
cmp
fdiv
movb
subl
jmp
dec
inc
mov
shr
out
shrl
cmp
je,pn
push
in
sub
pop
cmpsl
mov
cli
cmp
call
fdivs
imul
clc
mov
fs
in
fidivrl
mov
cmp
rcl
rcl
push
mov
jge
push
or
testl
inc
add
cmpl
jnp
add
push
xchg
sub
scas
out
dec
dec
jae
gs
push
call
cmp
pushf
rclb
push
mov
and
push
shl
and
pop
or
push
push
ljmp
xor
stos
fnstenv
popf
repz
xchg
pop
out
aas
push
jno
xor
cwtl
lcall
es
inc
movl
cld
dec
shlb
mov
fistpl
bound
mov
pop
aaa
roll
aaa
adc
imul
lea
jle
test
ret
fsts
cld
cld
lcall
pop
ja
inc
in
dec
pushf
movsb
clc
inc
arpl
lea
mov
inc
sub
scas
add
mov
jmp
aad
cmp
dec
pop
notb
mov
add
mov
cwtl
add
test
setbe
sub
lret
xchg
imul
inc
movsl
pop
add
leave
lcall
sbb
gs
cmp
push
mov
in
cmp
pusha
jge
data16
insb
adc
dec
add
inc
pusha
sar
inc
andl
mov
ret
xchg
mov
scas
adc
or
test
stos
pop
cmp
sub
adc
daa
in
jno
xor
cmp
aaa
push
xchg
imul
cltd
sub
jnp
xor
adc
imul
cmp
clc
or
scas
lods
arpl
mov
mov
dec
sub
xchg
in
lcall
pop
jnp
mov
in
pushf
or
aad
movsl
sbb
xor
mov
sbb
xchg
das
rorb
imul
pop
out
push
mov
incb
mov
je
pop
xor
adc
sarb
jb
imulb
enter
add
push
pop
sbbb
ljmp
sti
sbb
out
imul
stos
jne
jno
cmc
sbb
mov
mov
or
imul
push
ds
jbe
aaa
jae
andl
xor
scas
cld
mov
dec
jmp
and
lahf
mov
dec
fists
stc
fcompl
scas
jg
in
in
fmuls
pop
into
xor
pop
push
jmp
in
pusha
push
xchg
and
stc
cltd
shll
movsl
rorl
push
xchg
pop
sub
loope
cmp
out
xor
and
insb
push
pop
cmpsl
icebp
or
repz
and
stc
adc
icebp
mov
movsb
inc
mov
js
shlb
add
sub
mov
xchg
cs
mov
outsl
cmp
loop
xlat
push
out
stos
loop
sbb
mov
decl
and
cltd
dec
push
xchg
xlat
scas
test
xor
inc
pop
xor
mov
jmp
stc
adc
mov
jmp
addb
into
xchg
sub
fstl
stc
cld
sbb
sbb
dec
dec
jo
jle
add
adc
dec
std
adcl
test
sar
cltd
shlb
and
fisubrs
jnp
jo
negb
and
or
jg
mov
xchg
pop
nop
arpl
inc
jno
int3
jne
add
jae
adc
movsl
inc
sbb
push
jge
nop
adc
popf
shll
das
and
pop
bnd
fidivrs
insb
pusha
pusha
inc
push
bound
xor
pop
mov
mov
aam
sub
mov
lret
mov
das
insl
mul
mov
cmpsl
dec
out
call
cld
sbb
cmc
cmp
inc
inc
push
push
add
pop
cltd
lahf
sub
in
stos
add
sub
pop
sti
adc
leave
jo
cli
ja
inc
jbe
jne
jbe
stos
ret
sbb
in
sti
or
adc
and
cmpsl
adc
xchg
pop
xorl
mov
adc
push
adc
lret
mov
cmpsb
dec
in
inc
and
mov
shl
pop
into
movsb
dec
xor
shl
adc
rcll
xlat
cmp
push
dec
mov
jmp
mov
aas
pop
push
sub
test
rol
cmpsb
dec
dec
mov
xor
mov
fdivs
das
insl
xor
jns
jno
cmp
dec
outsb
dec
scas
sahf
nop
xchg
add
jl
mov
add
or
adc
jecxz
fnsave
push
and
sbb
outsl
sbb
insl
mov
xchg
xchg
sub
pop
jo
sub
dec
aaa
and
fildll
push
inc
sbbb
fisubrs
xor
jno
adc
js
push
mov
mov
and
arpl
lahf
xor
lods
and
sub
call
outsb
clc
mov
stos
add
mov
aas
pop
xchg
fsubr
xchg
rcr
sub
pop
in
xchg
lods
mov
gs
loopne
mov
test
ljmp
fwait
daa
lds
scas
and
jae
mov
sub
mov
cmp
inc
push
mov
fwait
repnz
fs
jb
xchg
sub
lret
mov
les
das
fidivrl
lods
and
add
stc
movsl
stc
xchg
adc
mov
lock
sub
cmp
cmp
dec
mov
xor
rorl
in
mov
push
stos
xchg
insl
lcall
pop
sbbb
cmp
jne
lahf
and
popa
adc
push
hlt
aam
sub
out
test
cmc
subb
sbb
xor
aas
mov
scas
push
fistpl
push
out
mov
adc
inc
loopne
or
jl
adc
roll
and
test
les
subb
or
adc
sbb
test
mov
popa
pop
out
push
lcall
pop
sarl
dec
sbb
mov
lret
push
psubusb
jl
and
sarb
je
lcall
loopne
fwait
mov
int
ret
arpl
xchg
cld
xchg
mov
sbb
or
test
shrl
ja
fldcw
dec
icebp
popl
shll
xchg
clc
sahf
xchg
jle
adc
call
clc
push
jb
stos
pop
inc
dec
popa
pushf
jl
or
sub
push
push
jle
pop
scas
xchg
fwait
clc
int
movsb
in
fnsave
mov
loop
sbb
test
jb
adcl
outsl
lret
mov
cmp
movsb
outsb
adc
jnp
out
addr16
fwait
push
pop
mov
mov
or
inc
dec
bound
lods
lret
std
stos
jo
std
sub
test
sub
fistpll
cmp
fnstenv
mov
jl
cmp
mov
and
pop
fwait
sub
or
stos
jge
lock
dec
sbb
adc
fwait
sti
mov
pop
mov
inc
notl
jl
filds
das
xchg
test
sub
divb
mov
pop
sbb
jmp
add
xchg
xchg
inc
mov
push
lret
subl
mov
rcl
insb
cmpsl
cmp
mov
dec
cs
push
push
addr16
mov
cwtl
dec
popf
sbb
mov
int
movsl
cmp
or
sbb
js
sbb
adc
mov
es
popf
xor
repz
jl
adc
jmp
sbb
insb
fdivrs
out
lds
inc
in
mov
xlat
lds
aad
and
lret
mov
mov
icebp
shrl
pushf
mov
cmp
xchg
movsb
data16
cld
jae
xor
pop
sub
xor
cld
jae
xor
pop
sub
push
mov
jae
jg
add
lea
or
cwtl
and
pop
or
add
inc
ja
mov
enter
loopne
add
jnp
mov
inc
sub
stc
mov
pushf
loopne
xchg
in
jge
inc
pop
mov
bound
test
xor
enter
dec
push
push
popf
xor
or
stc
pop
mov
jb
out
mov
inc
test
xor
and
sub
and
cli
inc
cmc
mov
rcrb
imull
negb
loop
fisubrl
mov
mov
push
pop
pop
push
jns
xchg
int3
dec
loopne
lret
adc
aaa
or
pop
enter
popa
add
in
cmp
push
stos
rorb
jne
popa
adc
sbb
xor
movsl
fisubl
shl
or
es
pop
mov
mov
cmp
pop
enter
and
call
jl
sub
push
cmp
imul
popa
add
mov
roll
add
pop
sub
and
inc
xlat
adc
cmpsb
jne
jg
ret
shll
rol
or
sub
add
nop
outsl
daa
xchg
sbb
xchg
pop
das
inc
fs
and
pop
inc
and
xor
pop
je
adc
pop
insb
stos
push
in
push
mov
leave
daa
xor
xor
out
cs
data16
inc
jnp
sti
mov
or
imul
fwait
mov
stos
push
mov
pop
dec
popa
clc
sbb
push
insl
mov
stc
lods
fidivs
mov
lea
push
pop
mov
cmp
loop
sbb
adc
jbe
jns
lahf
or
enter
dec
or
push
or
mov
fwait
xor
inc
mov
xchg
sbb
mov
ljmp
imulb
sbb
dec
push
hlt
mov
adc
test
mov
test
jmp
adc
xor
dec
nop
push
cmp
dec
push
mov
dec
mov
and
dec
push
jmp
xchg
nop
mov
fstl
dec
outsl
mov
sahf
sbb
test
popa
cld
xchg
xchg
cltd
scas
jno
cmp
mov
sahf
push
add
mov
mov
cltd
inc
repz
aam
in
dec
push
in
daa
imul
ret
mov
insl
sti
lods
mov
jmp
scas
jg
sbb
adc
arpl
insb
lahf
and
insl
adc
data16
clc
sahf
jmp
out
call
sbb
cmpl
cs
cmp
divl
sti
push
in
ljmp
iret
xchg
dec
jp
cmp
hlt
jl
call
cmp
outsb
lods
mov
pop
icebp
outsb
add
sbbl
stos
scas
inc
sbb
jbe
or
jns
jns
mov
outsb
sbb
jge
scas
inc
mov
outsb
push
out
pop
push
mov
jle
add
sbb
or
jns
mov
insl
jg
popa
or
lds
or
pop
repz
jecxz
and
dec
fwait
lods
shrb
mov
mov
ljmp
test
imul
jb
in
in
mov
loopne
add
stos
out
out
je
outsb
push
mov
imul
ljmp
inc
pop
or
dec
pop
icebp
stos
into
push
aaa
into
inc
pop
push
jmp
ret
inc
lret
push
sti
xchg
dec
pop
mov
dec
loopne
or
jns
inc
testl
mov
clc
les
push
pop
cli
xor
sub
xor
dec
lret
mov
mov
in
or
sub
push
test
nop
jl
out
inc
loop
add
push
cmp
dec
in
out
sub
inc
pop
xchg
mov
pushf
push
fimull
push
bound
and
rorb
stos
stos
lcall
mov
xchg
sbb
je
stos
inc
aaa
xchg
scas
adc
rorb
and
ret
pop
sahf
jne
gs
inc
xor
fsubr
movsb
adc
lret
std
out
add
in
incb
mov
xor
or
mov
mov
xchg
stos
push
dec
sub
imul
push
mov
mov
icebp
mov
mov
clc
cmpsl
sub
sub
test
lret
dec
dec
jge
fs
sub
jnp
orb
mov
ljmp
shrb
jmp
cwtl
loop
xchg
addr16
imul
das
cwtl
mov
jns
jl
ss
cld
sbb
dec
mov
or
push
jg
pop
jp
add
adc
mov
daa
jl
pop
addr16
cwtl
and
sbb
jbe
outsl
fcomip
or
jge
jle
test
dec
aam
addb
scas
jne
sahf
rcll
fsub
std
sbb
inc
lcall
cmpsl
movsb
std
pop
pop
stos
popa
insl
lahf
js
aam
lcall
jno
push
cmp
push
cmp
pop
jge
shrl
sub
jmp
gs
daa
cmp
stos
sti
cld
xchg
jmp
es
lods
inc
cmpsl
mov
sbb
outsl
mulb
stos
sbb
repz
pop
mov
pop
xor
pop
ficoml
mov
pop
jmp
popa
mov
cmp
add
scas
pop
xor
and
movsb
js
loope
mov
pop
push
sub
out
aad
pop
nop
pop
cmp
xchg
movsb
adc
addl
jb
push
push
mov
inc
mov
dec
paddsb
cld
sub
rorb
sub
add
sarb
movsb
test
and
cmpsl
dec
pop
loope
or
sahf
jmp
ficoml
push
xchg
and
outsl
loope
adc
fidivl
insb
lcall
repnz
mov
repnz
push
jnp
sub
sub
sbb
xchg
stc
adc
pop
pushf
sbb
popa
jmp
adc
ret
int3
les
and
xchg
pop
out
push
cmp
cmp
sahf
mov
adc
mov
pop
xor
fs
push
mov
daa
push
dec
xor
xchg
add
mov
loope
out
leave
pop
clc
push
ficoml
dec
mov
mov
and
lock
loop
and
sub
imul
scas
sub
dec
mov
mov
push
outsb
insb
lcall
push
pop
push
mov
pushf
pusha
or
mov
cmp
jb
xchg
and
inc
push
jo
lea
push
arpl
shl
xor
cmp
je
push
push
shl
mov
jns
jns
cmp
sbb
imul
add
add
ret
jne
cwtl
xor
movsb
pop
push
mov
push
pop
inc
mov
cltd
or
mov
pop
push
fsubl
out
mov
cmp
inc
insb
mov
cwtl
in
or
add
dec
lods
scas
leave
daa
daa
pop
jns
xchg
push
sbb
das
int3
out
add
and
daa
scas
mov
or
sbb
hlt
in
aaa
movsl
cmp
push
int3
arpl
pop
mov
outsb
xchg
cmp
ret
mov
dec
loope
cmp
nop
jnp
mov
aaa
fsubs
jnp
dec
mov
ljmp
ljmp
icebp
repz
int
xor
stc
xchg
xchg
mov
notl
sbb
imul
jns
aas
mov
cmc
addl
mov
sbb
pop
out
cmpsl
imul
lods
mov
dec
loop
sub
sbb
dec
lds
mov
ljmp
adc
stos
outsl
std
rcrl
mov
add
ljmp
fiadds
pusha
pand
mov
and
xor
cmp
mov
das
pop
push
fisubrl
inc
push
or
jb
hlt
xchg
in
mov
lret
or
mov
dec
or
add
xchg
jno
movsl
sub
inc
pop
dec
lock
inc
sub
lret
xlat
cld
pop
rcrb
xchg
jmp
cmp
mov
subl
and
movsb
cmpsb
lock
inc
or
test
lret
mov
cltd
pusha
loope
cmp
jne
daa
jbe
xchg
or
jecxz
andb
push
addr16
mov
ss
add
jmp
test
adc
std
jl
clc
lahf
push
outsb
pop
sbb
adc
jp
movsl
and
shll
or
and
push
sti
rclb
cmp
inc
fmull
xorl
ss
push
call
cmp
mov
xchg
cmp
xchg
jp
pop
lock
ja
aaa
ja
aaa
and
sarb
mov
push
mov
sar
dec
inc
cmpb
cmp
fnstcw
sbbb
cmp
stos
fnstenv
jp
and
mov
inc
shll
push
subb
mov
into
add
pop
fisubrl
push
sub
test
push
mov
loopne
cli
push
aas
shll
pop
mov
sahf
push
call
jecxz
pop
pop
add
nop
icebp
test
jmp
cmpl
mov
ficoml
ucomiss
sub
lahf
mov
mov
inc
push
iret
jnp
aam
pushf
fdivs
addl
adc
mov
dec
push
lret
aad
xchg
adc
and
loopne
shrl
push
cltd
cmp
or
push
std
lahf
xchg
or
jmp
ret
pop
cmp
push
cltd
xchg
sub
cltd
jbe
or
outsl
ds
xlat
cmp
divb
call
lahf
hlt
lret
stos
xchg
jmp
mov
mov
jmp
dec
lock
cli
ret
dec
mov
push
jns
lock
xor
icebp
loop
push
out
push
int
lods
in
ljmp
imul
idivl
fisubs
adc
fisubrs
cli
inc
sub
decb
and
push
je
xor
cmpsl
mov
ds
add
flds
adc
xchg
nop
test
add
ret
jmp
adc
jmp
mov
cwtl
insl
jg
push
loopne
stos
mov
out
fdivs
aas
push
iret
sub
dec
fistpl
shll
xor
out
sbb
mov
add
dec
ss
adc
test
mov
lods
repz
sbb
lret
jle
jp
pop
movsb
loopne
call
aam
and
pand
inc
xor
addr16
inc
rorl
dec
std
scas
ret
fcom
mov
scas
jp
pop
pusha
inc
ret
lods
outsl
jl
jb
xchg
push
and
mov
xchg
xchg
je
dec
and
movsl
pop
enter
jge
lret
mov
leave
insb
std
mov
push
mov
rolb
pusha
and
les
dec
sub
pop
leave
pusha
push
xchg
bnd
ss
pop
cmp
or
dec
jp
jp
pop
rclb
imul
das
shrl
dec
and
test
daa
fisubs
rolb
and
clc
dec
mov
adc
shlb
jmp
jbe
dec
daa
mov
loope
cmp
jl
orb
scas
enter
pop
mov
insl
add
in
cmp
xchg
outsb
mov
ret
or
scas
inc
popf
scas
adc
xchg
and
shrb
icebp
and
mov
imul
or
push
cmp
pushf
mov
sub
adc
test
icebp
jle
popf
stc
sbb
cmp
stos
lahf
jle
in
or
cmp
pop
sub
loopne
push
cmp
push
cli
xchg
lods
add
in
dec
fcmovb
cmpsb
sbb
pop
test
inc
fcmovbe
xor
xor
xchg
xchg
adc
aad
jecxz
jg
pop
out
xchg
adc
mov
xlat
mov
stos
movsb
gs
inc
lds
loopne
cltd
and
inc
adc
push
inc
xchg
jne
out
sub
adc
and
loope
lcall
test
cmp
hlt
xor
dec
push
int
out
sbb
ljmp
xchg
push
sub
dec
xchg
loope
xbegin
dec
dec
shll
int
xchg
sub
sub
sbb
mov
cmp
inc
scas
shlb
push
out
cwtl
addr16
cmpsl
outsb
mov
subb
nop
and
or
jns
pushf
aaa
cmpsl
cs
cld
lds
inc
repnz
stos
or
cmp
sub
ficoml
bound
jb
test
imul
pop
movsl
cmpsb
adc
clc
mov
sub
in
insl
ret
js
out
es
and
rorl
mov
cs
pop
cmc
xchg
cs
or
repz
test
movsl
shll
or
and
cmp
and
xchg
scas
lahf
push
adc
mov
jae
push
mov
push
xchg
les
cmp
xor
push
and
add
sub
test
xor
adc
xchg
test
insb
test
pop
jo
shll
dec
shr
sub
repnz
test
sbb
push
mov
aas
or
jno
sti
nop
push
jo
ret
sub
push
imul
stos
push
dec
int3
mov
dec
es
or
jle
test
test
ficoml
or
in
jg
mov
pop
add
mov
and
dec
dec
repz
pop
in
mov
xor
mov
jbe
mov
mov
push
ljmp
pop
lock
cmp
sub
add
xchg
clc
sbb
outsl
mov
out
popa
sub
push
or
movsb
shlb
jmp
xor
and
push
inc
loopne
orb
je
decl
xchg
push
test
xchg
jge
cltd
mov
cmpsb
add
add
jno
inc
fdivrl
xchg
ret
or
test
add
pushl
sub
rclb
xchg
mov
gs
cmpsb
into
mov
or
outsb
sahf
ret
sbb
in
idivl
adc
dec
xlat
push
sti
xchg
loope
test
fsubs
add
out
repnz
adc
nop
xchg
adc
dec
nop
call
stos
jne
push
adc
loope
in
out
cmpsl
aam
dec
add
sub
popf
push
dec
fucomp
orl
sbb
jl
lret
bound
out
adc
mov
rorl
pop
push
aam
cltd
xor
int3
cltd
pop
sbb
inc
mov
pop
xchg
xchg
cmp
popa
aad
xchg
ds
mov
xchg
scas
or
dec
jb
dec
fsubl
cmp
pop
loopne
stos
mov
repz
adc
xor
jmp
lds
arpl
xchg
lret
mov
mov
sti
xor
jns
mov
sub
rorl
mov
pushf
xor
shl
lods
or
cld
pop
xor
jp
sti
sbb
push
xchg
sub
es
adc
mov
push
ss
xchg
fs
mov
shll
xchg
shrb
jmp
stc
sbb
mov
or
jmp
mov
push
stos
ror
in
adc
addb
add
ret
push
xchg
mov
ds
cld
sbb
das
or
test
outsb
xchg
mov
xchg
hlt
mov
jl
fldenv
mov
add
aam
movsl
xchg
rorw
in
js
xor
shrl
mov
mov
fidivrl
xor
mov
ja
fimull
push
rolb
gs
subb
mov
sbb
xor
xchg
add
jne
es
loope
inc
fdivrs
dec
cmpsb
dec
inc
push
add
shll
adc
xor
loop
pop
sub
aas
push
dec
mov
movl
push
mov
mov
fnstenv
and
inc
and
les
ja
xchg
repz
into
fidivrl
sahf
push
jae
int3
cmpsl
jp
fidivs
pop
jns
jp
std
inc
adc
dec
adc
fisttpl
outsb
add
adc
and
sub
rcrl
or
adc
xchg
add
cmp
adc
mov
push
pushf
jbe
dec
ja
or
lret
jbe
out
rcrb
rcll
inc
mov
inc
ud1
lds
out
jl
add
adc
mov
testb
lcall
pushf
adc
cld
inc
mov
xchg
inc
loope
pop
loopne
mov
mov
xchg
int
lods
mov
mov
rcrl
xchg
pop
push
add
mov
adc
mov
cmpb
or
sub
jbe
adc
xchg
sbb
dec
imull
movsb
jp
mov
shrl
movsb
jbe
enter
orl
mov
push
mov
adc
mov
das
stc
je
aad
cmp
and
and
mov
pop
adc
idivl
xchg
shll
lea
mov
mov
popf
pop
jg
ja
or
icebp
insb
fsubs
mov
sti
pop
outsb
leave
sbb
pop
insb
stos
pop
jle
jge
and
addr16
in
dec
sbb
dec
lods
ljmp
rcll
notb
lods
leave
sub
idivl
stc
in
inc
out
cmp
in
rcrl
fcoml
add
cld
movsb
sub
shrb
decb
lods
jne
mov
inc
push
mov
in
mov
fucomi
add
cltd
dec
in
lds
outsb
sub
sub
xchg
daa
in
mov
mov
push
rclb
fs
out
and
xor
in
jne
mov
test
xor
jg
cmpsb
push
fisttpll
mov
decb
jecxz
out
mov
cmp
les
push
nop
sbb
sbb
addr16
lret
mov
rorl
jns
ficompl
pushf
sub
jo
and
mov
out
xchg
jae
jg
jae
pop
mov
xchg
pop
cmc
add
push
push
int
movsl
aad
aam
xchg
and
js
or
push
xchg
push
inc
lds
jmp
loop
cmp
mov
div
mov
loop
shrl
mov
stc
nop
or
cli
push
inc
fisubs
nop
int3
imul
dec
cli
dec
mov
mov
add
push
and
pop
fldt
shlb
xor
xchg
inc
jg
add
mov
popf
mov
fcoml
push
loop
mov
fdivrl
jp
xchg
jns
shll
sbb
mov
enter
jno
jae
jae
xchg
mov
or
pusha
in
xor
sub
jl
add
data16
iret
mov
push
pop
arpl
xchg
push
outsb
mov
repnz
sbb
insb
or
push
sbb
movsl
mov
ret
mov
aas
push
or
fsubrs
sub
test
ds
insw
push
scas
jb
push
in
movsb
jb
adc
js
cmp
rcr
inc
faddp
and
dec
cmp
les
and
and
jle
adc
out
call
cmp
out
movsb
enter
jns
jno
pop
cmc
aaa
xor
jns
mov
call
jo
es
xchg
xor
sbb
movsl
shr
push
mov
cmpsl
mov
aas
pop
push
popf
dec
inc
test
outsb
and
jo
sti
jbe
push
push
daa
lea
jno
mov
lock
sub
cmp
mov
les
sarl
pop
dec
mov
dec
push
ret
popf
adc
ret
sahf
pop
pusha
movsl
icebp
mov
test
jecxz
cmp
sub
pop
push
rorl
dec
sub
pusha
aam
cwtl
adc
xor
in
xchg
adc
jne
call
or
loopne
push
fwait
xor
lods
xchg
adc
inc
fcmovnbe
adc
adc
xchg
mov
or
cmpsl
imul
dec
addl
cli
or
mov
testb
mov
aas
ret
xchg
out
adc
and
sbb
jnp
shrl
or
pop
sbb
and
in
out
jle
xor
or
dec
mov
push
shll
ret
xchg
pop
adc
sti
loopne
fbld
jo
sbb
xchg
sub
push
sub
jl
pop
pop
std
or
shl
jbe
sbb
iret
jecxz
and
out
fsubrp
scas
mov
cld
lock
push
ficompl
test
or
mov
or
or
jg
push
loop
movsb
or
sub
mov
dec
cmp
and
push
mov
xchg
daa
inc
call
mov
lahf
and
cmpsb
cs
mov
xchg
and
sbb
gs
pop
sbb
dec
push
sub
rcll
dec
xchg
test
pop
jnp
leave
push
inc
cwtl
pop
push
mov
mov
adc
cmp
mov
iret
jp
clc
insb
cli
pushf
popf
mov
int3
shlb
sti
xlat
js
fnstsw
int3
popa
andb
movsb
xchg
enter
lds
push
inc
lret
aas
pop
mov
xchg
out
mov
lea
sbb
imul
add
lcall
jne
cltd
mov
je
les
dec
fdivl
aaa
mov
test
push
fwait
adc
mov
cmp
roll
pop
aaa
jno
scas
lret
outsl
dec
push
mov
push
cltd
and
adc
jb
arpl
into
adc
cmp
incb
push
add
cmp
insb
pop
mov
ljmp
in
out
add
mov
lret
jmp
std
movsl
xchg
push
and
fdivrl
jle
fnstcw
sbb
xor
mov
pop
xor
sub
rcr
addr16
jnp
jno
cmp
mull
enter
add
sbb
test
fcomip
fcoms
shlb
cli
cmp
jmp
lea
xor
cli
mov
stos
xchg
das
pop
sbb
loope
movsl
inc
cmpsb
rclb
je
and
cmp
cmp
fistpl
sahf
stos
adc
and
cpuid
cld
call
sub
mov
adc
xchg
pop
cs
pusha
push
and
inc
das
out
sbb
out
xor
int3
stos
pop
pop
xchg
jl
idivl
xor
ja
push
test
aam
mov
cmp
sbb
hlt
out
jmp
aaa
scas
mov
fisttpl
and
imul
mov
repnz
xor
je
inc
mov
or
sti
mov
dec
test
clc
mov
out
ret
pop
fisttpll
arpl
outsl
dec
test
ljmp
pop
inc
scas
cmc
xor
aaa
or
lods
xchg
or
push
cld
sbb
stos
push
lock
insl
inc
sub
cltd
cli
lret
cld
dec
pop
clc
lea
data16
lret
inc
adc
push
push
dec
jne
push
lret
icebp
push
stos
data16
pop
fsubrl
mov
clc
mov
cltd
movsb
push
add
xor
pop
pop
add
stc
mov
inc
fs
lret
mov
hlt
outsb
ja
xlat
test
mov
je
mov
mov
inc
and
imul
sbb
pop
xor
add
shrl
adc
repnz
aas
fs
dec
xchg
insb
out
lcall
divps
xlat
js
dec
lahf
dec
imul
add
push
mov
or
pop
fnstsw
not
cmp
inc
int
cld
pop
sub
call
xor
dec
into
push
movsl
cmp
adc
out
xchg
jecxz
push
dec
jecxz
dec
es
sub
lock
jbe
push
pop
ss
mov
xchg
fs
outsb
xlat
sbb
outsb
inc
mov
aam
lods
aam
and
cltd
test
jp
je
mov
mov
jo
mov
bound
roll
incl
shlb
xchg
sub
push
mov
push
ret
imul
imul
daa
adc
push
fisubl
js
sub
test
arpl
aas
leave
sbb
sbb
cltd
xchg
cmp
data16
and
test
adc
mov
cwtl
dec
xor
push
gs
xchg
insb
jb
lcall
adc
sbb
push
xor
std
xor
push
mov
or
add
ss
cmc
pop
out
mov
mov
addr16
imul
cld
cmpsl
nop
lock
xor
mov
xor
push
add
and
push
fnstsw
out
test
dec
cmp
out
push
pop
mov
fsubs
sar
xchg
addl
cmpsb
lahf
cs
out
aaa
pop
pop
mov
ljmp
popa
cmpsl
cli
cli
stos
imul
das
loop
adc
pop
stos
xchg
sbb
push
adc
js
xor
pop
adc
and
pop
insl
aaa
cltd
sub
pop
push
mov
cmpb
jp
stos
sbb
out
std
incb
icebp
inc
add
lds
mov
sub
lods
add
and
pop
insl
and
mov
fwait
xor
xchg
adc
jg
xchg
das
out
int
mov
stos
jne
pop
lahf
sbb
pushf
testl
lea
add
push
loopne
test
jo
std
lahf
cmc
cmpsl
addr16
ret
mov
out
fdivs
mov
fcmovne
sub
jp
insb
adc
cmp
push
inc
ljmp
cmc
dec
shld
pushf
push
sbb
repnz
cmp
mov
subb
arpl
sub
mov
ret
cmc
lds
push
sbb
popa
mov
sub
add
repnz
decb
sbb
sbbb
aaa
fidivl
test
push
fwait
repnz
shll
sahf
and
addb
stc
and
popf
inc
mov
scas
push
xchg
or
leave
xlat
sub
mov
js
lock
leave
xor
xor
xlat
outsb
and
pop
in
fadd
cmc
test
jns
mov
xchg
sbb
mov
push
pop
dec
dec
popa
add
out
fsubl
adc
mov
jae
fs
adc
xchg
push
cmp
je
mov
mov
sbb
lods
or
push
std
jno
and
cmp
pop
cmp
pop
aam
or
imul
add
mov
push
push
orl
cwtl
xor
mov
out
adc
mov
sbb
mov
lret
push
sahf
mov
iret
es
push
push
inc
loopne
lods
ja
enter
jbe
sahf
fisubrs
push
iret
push
in
add
jae
jnp
xchg
stos
and
icebp
cmp
inc
push
enter
cmp
aas
loop
fucom
mov
divl
cmp
loope
dec
lods
xor
out
fs
pusha
pop
xchg
shll
push
push
in
dec
push
and
rcrl
pop
mov
add
lcall
xor
push
inc
inc
pop
out
adc
popf
mov
data16
cmpsb
arpl
in
jl
bnd
iret
js
dec
cld
mov
mov
shr
xor
mov
repz
pop
sbb
mov
cmpsl
adcb
xchg
xor
leave
gs
xchg
repz
sub
inc
pushf
jns
lcall
pop
jo
aad
mov
ss
lods
ljmp
es
sahf
stc
je
inc
mov
pop
inc
ret
mov
xchg
sub
mov
push
mov
dec
or
lret
pop
jbe
insl
adc
push
ds
sbb
push
or
popf
rcll
ljmp
lcall
in
test
sub
sti
aad
dec
popf
out
xchg
add
fdivrl
push
jo
in
lcall
mov
adc
and
add
lods
test
and
jle
mov
in
rcll
je
cld
cmp
mov
adc
adc
xchg
mov
add
xor
test
or
push
xchg
scas
xchg
daa
add
adcl
jae
jne
hlt
dec
or
jg
sbb
dec
sub
movsb
pop
pusha
out
jbe
push
pop
loopne
push
fdivl
lcall
jo
xchg
mov
fcoms
xor
loop
cmp
scas
mov
in
pop
test
inc
adc
dec
xor
mov
xchg
mov
mov
mov
xchg
sbb
and
rolb
jg
int3
arpl
mov
xchg
hlt
nop
adc
add
out
test
sbbl
mov
loopne
mov
popa
jl
push
arpl
mov
mov
hlt
push
pop
jnp
dec
jae
loop
lods
push
leave
jmp
or
int
lea
cmp
inc
mov
cli
mov
jno
push
stos
sub
psubb
popf
mov
jmp
adc
jb
stc
mov
mov
lret
addl
pop
mov
fwait
pop
imull
aam
mov
sbb
xchg
out
sti
lret
subps
mov
cmp
shll
mov
mov
icebp
movsl
loop
shll
loope
inc
xchg
gs
mov
xlat
pop
cmp
xchg
cmc
mov
lds
jp
cltd
bound
mov
out
xchg
pop
sbb
mov
jo
inc
mov
jo
data16
pop
mov
rolb
pop
push
push
push
fwait
xorl
jmp
dec
in
xchg
and
pop
cmp
jb
inc
decl
pop
cmpsl
dec
add
imul
lea
mov
in
adc
or
jp
adc
xchg
aam
jbe
mov
out
mov
jmp
cli
push
repz
leave
or
imul
dec
mov
add
mov
shlb
xchg
test
notb
push
arpl
mov
jle
das
push
xchg
lahf
shrb
pop
xlat
test
inc
xor
pop
in
sbb
lds
leave
jl
sbb
mov
fs
mov
sbb
add
sub
jmp
fscale
inc
xchg
icebp
lods
inc
cmp
mov
frstor
rol
inc
data16
cmpsl
int3
dec
cmpl
push
fsubp
xchg
lahf
aas
dec
movsl
mov
es
xchg
jnp
fcompl
dec
mov
or
std
push
mov
fidivrl
inc
in
mov
pop
inc
inc
sbb
xchg
cmp
in
dec
jg
hlt
mov
xchg
ljmp
jae
or
adc
pusha
test
shll
push
imul
xor
jo
push
add
test
cmp
adc
jle
inc
scas
inc
jns
or
ss
add
cmpsb
cmp
dec
icebp
mov
fisubs
stc
cld
jl
bnd
push
inc
cmp
fcomps
outsl
test
dec
and
mov
mov
and
jns
inc
fs
cmpsb
shlb
and
ljmp
je
test
adc
sub
addb
push
aam
pop
fcmovb
ret
push
out
ss
aas
push
push
xor
je
or
outsl
cwtl
xchg
jle
in
inc
xchg
and
jmp
mov
push
jne
loope
ljmp
jmp
inc
adc
cmpsb
les
jno
sbb
mov
sub
lret
pop
and
rcll
cmp
jns
xchg
stos
dec
setne
push
mov
lock
push
push
adc
mov
fbld
data16
lods
jecxz
sti
pop
push
inc
jns
inc
and
aam
or
jg
fldenv
inc
add
inc
fsubs
imul
or
bound
cmp
pop
push
push
out
lds
sub
pushf
xchg
mov
cwtl
xchg
fidivs
mov
hlt
cmc
cmp
test
lods
pop
xchg
or
jecxz
jle
ds
sub
loop
add
out
jecxz
dec
and
inc
fidivrs
pop
gs
adc
or
pop
mov
mov
mov
roll
mov
cmp
arpl
push
out
insl
jge
inc
mov
add
and
mov
dec
pop
jl
cli
mov
mov
jae
aaa
shld
pop
sbb
push
mov
push
into
jge
jo
pop
popa
orl
mov
stos
push
call
adcl
fildl
decl
mov
std
popf
pop
mov
push
sbb
sub
push
decl
loopne
adc
fmull
rcrl
dec
push
stos
push
mov
shll
jp
xchg
rcll
add
aas
push
sbb
cmp
out
inc
sbb
iret
jecxz
mov
mov
sub
mov
sub
mov
add
xchg
in
xor
je
cmpsl
xorl
mov
das
mov
popa
push
add
adc
ficoml
sbb
test
ss
cs
loop
sbb
xchg
mov
in
je
sub
mov
out
ds
xchg
inc
ffree
push
pop
ret
fs
popf
xchg
dec
push
sub
dec
hlt
lret
jne
push
shl
add
mov
shl
or
popf
adc
pop
out
das
pop
push
add
int
push
mov
out
push
xchg
fisttpl
or
xchg
sub
lock
sub
cmp
cmc
in
lea
cmc
addl
test
mov
add
daa
or
hlt
fwait
mov
or
dec
cmp
nop
vmwrite
pop
sbb
les
mull
xchg
pop
popf
cmp
movsl
mov
mov
ljmp
sub
mov
inc
es
fildll
jne
mov
call
ja
lea
inc
and
je
loopne
adc
or
mov
bound
je
roll
cmp
hlt
sbb
sti
or
jb
aam
ret
das
add
or
out
stos
ret
sti
or
mov
inc
mov
je
push
inc
pop
xchg
cld
xchg
adc
imul
or
lea
jb
lock
das
les
gs
scas
loope
or
inc
movsl
jo
xor
inc
std
fisubrl
iret
loopne
fstpl
shll
scas
pop
and
in
xlat
jno
dec
rorb
jmp
pushf
sbb
or
js
ret
cmpb
dec
mov
addr16
lods
mov
push
or
sbb
and
sub
movsl
pop
pop
push
data16
scas
xor
aad
xchg
push
or
pop
es
dec
push
inc
negl
subb
mov
aam
push
dec
inc
clc
sahf
out
pop
and
out
pushf
scas
out
cmp
rcrl
add
push
pop
push
es
bound
add
jecxz
adc
add
rorl
movl
cmp
cmpsl
sbb
or
mov
out
sti
fcmovb
or
sarl
pop
xchg
addr16
hlt
inc
lahf
stos
js
cmpsb
lods
arpl
mov
mov
fsubs
add
out
mov
inc
sub
mov
pop
push
jno
jnp
addr16
mov
sbb
sbb
cmp
xchg
sub
or
lret
add
jnp
sbb
popf
adc
ljmp
pop
mov
sub
dec
mov
pusha
mov
add
push
sbb
ffree
jae
xchg
dec
jno
insb
add
xchg
js
lahf
push
pop
adc
cmc
rcll
aam
ja
jl
int3
jl
or
or
cltd
sbb
mov
testl
sbb
inc
or
imul
mov
inc
mov
inc
push
push
inc
pop
pop
das
inc
mov
inc
vpsubsb
mov
fsqrt
lret
cli
mov
cmc
sbb
push
pop
sbb
jmp
pop
fildl
in
cld
mov
fiaddl
sti
jo
mov
xchg
sub
scas
ljmp
push
nop
xchg
sub
lret
aam
daa
dec
mov
icebp
stc
mov
jp
xor
sub
add
pop
mov
in
ret
fstp
addr16
hlt
ds
jns
cmp
in
cmpsl
adc
adc
sbb
mov
pop
imul
push
loop
subl
dec
int
jno
xchg
jl
fists
test
ja
adc
dec
push
lods
jge
aaa
jbe
push
lods
jmp
aaa
jmp
sub
xchg
push
out
mov
inc
out
inc
dec
push
mov
fdiv
aaa
pop
sbb
push
mov
or
inc
xor
leave
pusha
outsb
aad
ret
pop
nop
out
ja
sbb
jmp
in
loopne
scas
shll
ljmp
mov
and
pushf
mov
sbb
sub
adc
adc
mov
pop
inc
jae
lahf
fdivs
mov
clc
scas
cmp
adc
jecxz
mov
cmp
push
pusha
loopne
es
push
sti
xchg
inc
rclb
ljmp
mov
dec
pop
aaa
arpl
fdivr
aas
pop
jmp
pop
cmp
cmp
jge
pusha
imul
in
cmp
fwait
dec
lret
and
push
cmp
cmp
sahf
stos
or
fucomi
mov
ja
and
daa
outsl
movsb
cld
sti
xchg
and
popf
sbb
out
mov
loop
or
xchg
mov
cmp
or
cmc
jmp
and
inc
daa
in
mov
lock
loopne
adc
in
pop
lcall
xlat
movsb
inc
fnstenv
inc
jecxz
jne
idivl
fmuls
addl
aam
inc
and
push
inc
pop
lahf
inc
das
mov
cwtl
cmpsb
jg
int3
mov
leave
aas
aad
xchg
pop
sahf
dec
adc
inc
push
cmpsl
mov
pop
inc
xchg
sub
aas
ljmp
lods
mov
sbb
ja
fldl2t
sbbb
push
or
sti
jmp
int
and
push
push
ficoml
outsl
push
add
shrl
push
dec
pop
bnd
mov
testl
mov
loopne
movsb
rcll
lret
repz
ja
push
mov
test
push
sbb
mov
aaa
cmp
or
bound
arpl
frstor
adc
in
out
inc
fadds
repz
pop
xchg
mov
fs
pop
lods
mov
out
cmp
clc
mov
addr16
cld
jmp
out
movd
pop
or
repz
test
sub
mov
sbb
adc
cmp
lret
sbb
out
ljmp
cmp
fidivs
adc
repz
pop
mulb
pop
push
jb
jo
rol
cmp
sub
sbb
repz
add
das
movsb
mov
sub
dec
fldl
and
push
push
inc
clc
cmp
pop
mov
cli
mov
add
mov
shll
lds
insl
inc
movsb
enter
lcall
rcll
arpl
cmpsl
pop
rolb
mov
mov
mov
fisttpl
es
aam
imul
lods
or
add
or
pop
and
pop
push
cmp
test
cmc
dec
xchg
pmullw
mov
fisubl
mov
xor
pop
mov
xor
adc
push
sub
lcall
xchg
cld
roll
std
and
lcall
pop
and
aad
add
loope
pop
cmc
xor
icebp
mov
cmp
pop
pushf
sti
push
jmp
dec
sub
in
jb
xchg
xchg
dec
cmp
iret
data16
in
ret
cmpsb
movsl
ret
pop
rcr
add
loopne
mov
vandps
jp
and
sbb
hlt
adc
cmp
es
push
out
add
jbe
in
stos
push
inc
push
sbb
dec
or
xlat
out
jbe
shlb
xchg
insl
cmp
pop
hlt
mov
inc
xchg
mov
inc
push
mov
insb
push
fdivrl
faddp
cmp
pop
mov
in
mov
add
and
mov
addl
cmp
adcb
adc
mov
icebp
out
mov
add
mov
mov
pop
push
sarb
or
imul
into
gs
push
adc
adc
cmp
sub
sub
addb
cmp
mov
pop
mov
data16
fdivr
mov
ja
sub
pop
out
lret
je
jecxz
inc
xchg
fcoms
add
jg
scas
popf
in
notb
push
lods
push
push
mov
in
lods
pop
imul
push
mov
mov
cli
and
xor
xor
arpl
shl
test
sub
sub
js
dec
pop
xlat
pop
stos
jnp
add
das
icebp
mov
out
nop
lret
rcrl
xchg
mov
fwait
mov
fbld
mov
sbb
jbe
xor
mov
ret
daa
mov
mov
fisubrs
in
mov
imul
gs
mov
scas
and
and
add
cmp
pushf
scas
fstps
and
aaa
cmp
imul
and
inc
inc
xor
call
mov
imul
cmp
negl
clc
cmp
fdivs
add
outsb
add
aam
mov
addb
nop
jnp
sub
inc
mov
mov
mov
or
pop
iret
mov
mov
fimull
dec
fwait
or
jb
xchg
out
xchg
sub
xchg
aad
push
pop
mov
data16
flds
rcrb
and
js
fwait
cmp
mov
push
sbb
push
ret
lods
push
nop
mov
aaa
fsubrs
mov
das
roll
sbb
and
adc
sahf
cmp
push
call
and
add
push
daa
fistpll
clc
xor
dec
mov
jns
in
xor
stc
cmpsb
jns
arpl
push
sbb
in
cmp
pop
rorb
push
rclb
adc
test
mov
dec
imul
xor
rcr
stos
adc
adc
fnstenv
lahf
sahf
jae
in
cld
repnz
into
xchg
outsb
daa
mov
dec
jmp
mov
mov
cmp
imul
mov
test
out
adc
lods
arpl
mov
and
mov
xor
and
lret
inc
out
cs
mov
inc
movsb
mov
cs
push
inc
gs
xchg
dec
mov
mov
fnstcw
mov
addr16
lahf
fnstenv
popa
daa
mov
and
pop
sahf
jnp
or
nop
mov
sub
or
inc
fmull
and
push
in
cmc
push
jbe
subb
mov
cmc
fsts
sbb
xor
pop
lds
lods
test
push
dec
repz
aam
push
cmp
lds
iret
cmp
sbb
js
sarb
pop
ds
hlt
out
push
fadd
jnp
movsb
rcll
jmp
cmp
inc
in
repnz
xchg
orb
xchg
ss
inc
adc
out
xor
xchg
stos
mov
fnstsw
push
enter
xlat
jmp
mov
or
std
pushf
call
test
lret
or
imul
lock
adc
xorl
repz
hlt
cwtl
sbb
loop
in
add
sti
or
popa
cld
pop
lods
mov
pop
push
xchg
pushf
arpl
rclb
and
scas
fxch
or
iret
stos
inc
add
shlb
push
inc
mov
daa
cmp
pop
inc
adcb
pop
addr16
pop
lret
pop
jle
jne
aas
xchg
mov
cmp
jle
sub
or
cmp
push
adc
lahf
push
push
mov
pushf
aaa
imul
cmp
adc
test
mov
jnp
inc
pop
insb
push
lds
inc
adc
clc
jnp
andb
jg
sahf
cmp
fs
cmp
lret
dec
mov
clc
in
jbe
sahf
lahf
orl
pop
jb
lods
dec
mov
sbb
js
jae
or
test
insb
adc
shll
mov
adc
jno
push
pop
inc
push
jne
jmp
repz
imul
test
inc
movsl
sti
and
xor
clc
outsl
jae
dec
pop
push
out
ret
arpl
cmp
outsl
ljmp
pop
push
add
enter
int
clc
les
bound
sbb
cwtl
mov
into
push
and
push
enter
adc
fs
jno
mov
pop
cmpsb
ljmp
ret
aad
or
fisubrs
das
push
jmp
mov
xor
scas
mov
push
out
ljmp
repz
sti
pop
adc
cltd
sbb
stos
add
dec
sbb
ret
mov
xor
sbb
xor
jge
mov
cld
test
mov
xchg
int3
dec
pop
inc
mov
pcmpgtw
xchg
jmp
and
negb
sub
add
or
cs
sti
dec
call
test
xor
das
cmp
dec
sahf
push
test
mov
out
jg
testl
std
mov
shr
xchg
add
jecxz
outsb
inc
adc
jp
mov
push
push
popa
adc
pop
jno
mov
clc
push
out
inc
inc
inc
and
data16
aam
push
fisubs
mov
mov
jne
pop
mov
fsubl
pop
lds
fcomip
mov
stos
push
lcall
aad
push
jp
push
mov
and
lods
scas
add
mov
das
inc
inc
and
mov
inc
and
test
insl
lds
push
jecxz
clc
add
dec
imul
dec
push
ds
and
ljmp
mov
int3
sub
shlb
ss
leave
insb
pushf
mov
adc
push
and
pop
adc
and
and
inc
stc
pop
out
pushf
or
dec
or
leave
add
jge
jl
mov
ffree
adc
and
xchg
int3
arpl
xor
xchg
mov
clc
shlb
push
sub
pop
and
pop
fists
cmpsb
xchg
jbe
leave
adc
and
in
call
pop
push
push
mov
add
or
in
mov
sbb
cmp
loop
inc
arpl
loopne
lock
rcrb
and
mov
push
into
xchg
add
jl
pop
pop
add
popf
arpl
xchg
or
sub
aam
test
cmp
cmp
in
mov
aas
or
out
daa
popf
aaa
inc
mov
ljmp
imul
xchg
test
fwait
sarl
mov
adc
and
xchg
inc
cmp
ja
xlat
sub
jl
adc
mov
ret
cmpsb
cmp
mov
pop
push
inc
out
xchg
nop
stos
cmp
iret
xor
mov
dec
jns
repz
push
stc
mov
fidivl
outsl
les
clc
or
xchg
cwtl
or
lret
cmp
scas
push
add
lock
cwtl
adc
ja
jp
mov
test
lods
mov
push
xor
sbb
dec
push
and
xchg
add
inc
test
ljmp
cs
jae
xchg
sub
dec
pop
xor
pinsrw
xchg
xor
outsb
adcb
cmpsl
sti
inc
add
ljmp
pop
lock
cmp
dec
cmp
aaa
pop
loopne
orb
daa
jl
test
xor
jge
inc
pop
lahf
sbbb
push
repz
iret
pushl
in
enter
mov
add
adc
jge
xor
fildll
inc
cmpsl
ret
jge
mov
pusha
push
sarb
test
or
adc
in
jo
push
pop
pop
push
adc
cmp
mov
stc
sbb
nop
pop
mov
jp
sahf
addr16
pop
aaa
push
mov
dec
insl
iret
dec
fsubrp
mov
in
jbe
xor
or
shrl
lcall
sub
les
fcmovu
mov
popa
icebp
add
dec
sub
aad
xchg
cld
iret
cs
movsl
or
stc
std
inc
les
in
lods
repnz
jle
mov
dec
filds
dec
push
dec
mov
pop
les
movsl
loop
and
repnz
jge
clc
cmpsl
jp
lret
lret
xchg
inc
mov
ret
jp
lahf
aad
adc
fsubl
or
push
popf
fs
imul
and
sahf
xchg
pop
add
adc
ss
gs
imul
imul
jne
fnstenvs
test
imul
popf
push
mov
push
out
faddp
xor
inc
cmpl
jbe
dec
sbb
stos
push
nop
jnp
jnp
adc
divl
cs
inc
leave
repnz
jb
mov
push
icebp
pop
push
leave
pop
jp
pop
jbe
pop
jb
pusha
lock
rclb
mov
dec
icebp
into
fsubrl
pop
inc
arpl
lcall
jnp
subb
or
adc
ficoms
sti
fsubr
sbb
aas
dec
std
jne
dec
gs
cmp
xchg
mov
jne
mov
mov
jmp
psubq
jo
dec
in
xchg
sti
mov
xor
pop
pop
lock
push
imul
out
cwtl
frstor
out
cmp
fwait
inc
test
pop
movsl
sbb
lods
fidivrs
int3
test
xor
xlat
adc
xor
sub
add
lret
push
lea
movsl
pop
cwtl
sub
push
popf
pushf
inc
loope
inc
lock
jne
int3
dec
dec
int3
adc
pop
rcr
out
xor
add
mov
pop
les
outsl
pushf
sub
xlat
xor
scas
out
outsb
mov
lahf
arpl
mov
mov
into
inc
push
mul
adcb
sbb
mov
or
mov
lahf
and
jle
inc
popa
andb
mov
js
addr16
add
movb
faddl
mov
lods
jmp
adc
mov
sub
pop
cmp
fnstcw
pop
pusha
subb
dec
ret
or
int3
inc
into
pop
xor
sub
daa
xor
cwtl
cmpsl
mov
or
jo
mov
das
adc
stos
out
sbb
and
dec
sub
and
fcomi
insl
mov
and
xabort
dec
movsl
xchg
xchg
dec
out
lcall
push
out
xor
shll
loope
adc
jmp
cwtl
mov
pop
and
rcrl
sub
push
sbb
cmc
cmp
sub
lock
xchg
subl
lcall
int
jns
xchg
mov
xor
dec
je
pop
pop
and
or
pop
in
jg
jno,pn
push
cmp
ret
inc
scas
hlt
pop
subl
add
push
pop
mov
dec
jg
scas
nop
mov
insb
mov
and
bndstx
mov
mov
pop
add
rcl
test
imul
mov
fwait
imull
aad
je
and
outsl
test
cmp
push
push
mov
jb
pop
mov
pop
outsb
test
mov
lea
out
out
mov
mov
addr16
int3
mov
cmp
xchg
adc
ss
lea
adc
sbb
cmpsl
roll
pop
test
mov
xor
add
xchg
jge
es
jno
sbb
cwtl
lods
or
int3
xor
andl
int3
andl
push
into
push
jbe
shrb
sub
and
mov
pop
in
inc
jg
push
jns
lcall
hlt
add
aam
sbbl
cmc
in
add
or
xchg
jl
loopne
jns
out
push
mov
pop
in
push
mov
pop
std
movsl
push
xchg
add
push
or
push
pop
mov
mov
std
mov
inc
or
sub
push
adc
mov
loop
rcll
pop
shll
cltd
pop
cmpsb
cli
cmp
inc
int3
loopne
push
andl
push
loopne
and
push
cli
sbb
inc
mov
pop
xchg
and
cmc
shl
sbb
xchg
jnp
xchg
testl
aas
cmpsb
lock
jg
jl
fimull
mov
lock
xchg
mov
mov
adc
lods
mov
or
dec
int
out
loopne
xchg
or
aas
cli
and
adc
add
xor
sbb
imul
xchg
or
mov
mov
sbb
and
xchg
dec
js
jb
fdivs
nop
out
ret
xchg
mov
enter
or
fs
insl
jle
fnstsw
pop
bound
or
iret
cmp
sahf
lahf
ss
and
dec
inc
les
pop
xorl
cmp
fldz
les
arpl
adc
jns
xor
adc
in
push
ret
cmp
gs
push
or
imul
xor
xor
xor
sbb
testb
jns
push
add
pop
ljmp
test
mov
mov
mov
fs
in
and
add
imul
test
mov
outsb
jne
dec
push
movsl
jae
mov
xor
and
xchg
aaa
adc
imul
adc
cmp
sarl
fistpll
loop
xchg
lods
and
jp
cld
mov
pushf
cmp
and
xchg
and
pop
lret
cmp
pop
cld
dec
mov
das
lret
nop
adc
imul
xchg
dec
in
pop
pop
nop
mov
subl
add
push
add
jno
push
sarl
mov
out
stos
mov
in
imul
mov
ja
into
mov
ficoml
and
mov
sub
mov
push
mov
andl
stos
lock
jmp
out
xchg
out
test
xchg
in
jl
bound
dec
popf
test
dec
fcompl
mov
or
or
dec
jecxz
push
data16
fwait
mov
mov
or
imul
inc
sbb
cltd
inc
dec
xor
jl
fs
sub
sub
pop
lock
sub
jl
or
loopne
add
xor
js
push
mov
adcb
xchg
das
shll
rcll
ret
cltd
xor
cmpsl
mov
jbe
add
out
xchg
cmp
fidivrl
out
inc
out
hlt
hlt
dec
loopne
xchg
push
push
dec
jo
mov
push
call
in
sbb
pop
push
mov
mov
mov
mov
ffree
cmp
jae
arpl
into
adc
inc
or
loopne
xchg
inc
or
das
mov
inc
xor
rcll
inc
setnp
ljmp
and
sub
or
mov
or
cmp
hlt
daa
mov
mov
mov
or
fs
pop
push
sub
fldt
push
stos
shr
pop
mov
inc
fdivs
push
or
cmp
dec
mov
cltd
xchg
in
dec
testl
xor
push
imul
adc
jno
pop
xor
in
fs
and
jl
mov
lea
mov
sbb
fldt
push
sarl
sub
jo
aam
iret
or
mov
or
pop
sbb
dec
fs
mov
push
jecxz
inc
push
fidivrl
pushf
mov
or
mov
fbld
in
push
jge
mov
popl
add
dec
inc
test
dec
fnop
pop
inc
leave
lret
dec
dec
test
and
js
push
or
cwtl
mov
push
dec
push
jno
pop
arpl
movsl
stc
cltd
lds
dec
adc
adc
lcallw
outsl
mov
shll
pop
or
nop
mov
out
sahf
in
dec
dec
mov
pop
addr16
mov
cmp
fistpll
sbbb
or
mov
add
jle
dec
mov
dec
cmpsl
fcmovnbe
fadd
jecxz
hlt
push
jne
dec
cs
scas
shr
jge
inc
jae
xor
xor
push
fsubrl
leave
je
pop
jl
lret
xor
or
gs
push
mov
das
nop
sbb
inc
lret
das
mov
lret
mov
jns
mov
cmp
roll
mov
dec
lock
add
rep
adc
mov
adc
stos
mov
xor
cld
inc
jge
or
jl
aam
sahf
mov
mov
enter
stos
mov
repnz
or
xchg
int3
movsb
mov
cli
xor
pop
imul
cs
xchg
mov
arpl
xor
mov
out
scas
xlat
add
mov
inc
xchg
dec
or
add
adcl
and
mov
outsl
pop
jns
dec
insb
sub
lods
pop
mov
lods
cli
add
jl
pushf
mov
sbb
stc
xor
aaa
mov
cmp
enter
outsb
arpl
rclb
icebp
inc
divb
dec
mov
mov
in
push
pop
or
inc
test
fdivrl
inc
push
inc
cltd
hlt
hlt
xor
outsl
in
divb
shll
push
sub
mull
stc
and
mov
das
inc
dec
stos
fnstcw
fldcw
mov
lock
outsl
push
push
aas
ficoms
out
in
xor
inc
add
adc
and
and
xchg
dec
stos
mov
in
stos
inc
inc
outsl
daa
arpl
xor
cmp
subb
lea
rcll
test
jnp
add
sbb
push
shrl
jo
dec
insl
adc
push
xor
iret
jg
popa
and
adc
sbb
cwtl
mov
or
cli
dec
inc
mov
into
mov
enter
gs
scas
push
scas
xor
in
out
push
mov
push
jb
arpl
fisttpl
push
dec
sti
sub
inc
lods
xor
sub
cwtl
cmpsl
ror
add
movsb
push
or
rcrl
inc
sbb
das
mov
jns
lock
sub
push
aam
data16
and
dec
shrb
mov
pop
arpl
jl
jns
movsb
subl
pop
imul
hlt
push
hlt
cmp
jge
ljmp
andl
mov
movsb
cmp
pop
pop
mov
inc
outsb
jns
fisttps
pop
movsb
jge
pushf
sbb
loop
jb
sbb
sbb
jno
or
push
and
xchg
add
jmp
popl
outsb
clc
pusha
and
cmpsl
adc
push
or
pop
std
test
push
inc
int3
ret
int3
jp
fdivs
imul
pushf
push
aas
add
xrelease
in
icebp
pop
cmc
dec
push
cmpsb
mov
cmc
js
js
aas
lea
repz
mov
mov
add
cmp
ret
or
arpl
mov
jmp
inc
fcmovnu
or
jmp
or
and
cmp
sub
jbe
pop
mov
mov
test
add
loope
mov
outsl
daa
shrl
add
adc
sub
inc
cmpsl
mov
fldcw
sti
enter
push
mov
aam
push
cs
inc
mov
out
or
adc
pushf
xor
scas
lea
or
mov
lea
adc
test
adc
push
fdiv
push
shl
mov
pop
loopne
pop
xchg
fmuls
inc
les
inc
jp
sbb
mov
pop
inc
and
mov
dec
jae
rcrb
fisttpl
pop
xor
movsb
and
cmpsb
inc
mov
adc
xchg
adc
xchg
jle
in
out
mov
popf
in
cmpsb
jno
sarb
ds
lea
int
mov
jg
sarb
insl
ret
pop
sti
scas
mov
push
sbb
mov
push
andl
stos
notl
pop
mov
loopne
sub
mov
jmp
sti
icebp
mov
sahf
imul
imul
test
aad
insl
cwtl
repz
inc
fsts
insb
mov
xor
daa
shr
call
aam
stos
ja
xchg
mov
fsubrl
scas
les
movsl
xchg
xchg
scas
and
xchg
pop
adc
inc
mov
popf
loop
push
imul
test
data16
inc
insb
ss
ss
inc
pop
and
xor
and
jnp
movsb
fucomi
pop
mov
sub
xlat
jmp
or
les
fidivrs
push
or
or
sub
shl
iret
mov
jecxz
into
scas
and
mov
loopew
cmc
push
sbb
lret
xchg
push
dec
add
loopne
scas
in
mov
cmp
inc
add
or
outsb
dec
adc
push
jo
xor
sbb
dec
mov
test
fmulp
xchg
mov
mov
fnsave
test
xchg
movsl
cmp
cwtl
pop
mov
push
repz
mov
inc
sbb
jae
jnp
hlt
js
fstpl
pop
jne
ds
jge
cmp
push
pop
das
cmp
and
popl
popf
mov
js
xchg
jge
pop
push
lret
lock
pop
mov
dec
dec
test
add
add
dec
sub
xor
xor
push
popf
pop
outsb
sbb
mov
ret
rcrl
aaa
or
shl
pushl
xchg
xchg
jmp
hlt
imul
aas
rorl
mov
push
mov
jbe
pushf
pusha
lods
jae
fwait
mov
jb
and
mov
fs
mov
pop
mov
ret
adc
inc
dec
and
jg
je
xor
mov
pop
out
pop
lock
jns
stc
jnp
dec
aad
pushf
sbb
sub
cmp
or
jecxz
outsb
call
dec
insb
jle
inc
lea
gs
cmp
cmpsl
mov
push
jno
mov
dec
stos
imul
pop
xchg
outsb
mov
fiaddl
push
cmc
mov
lret
dec
ja
mov
ljmp
xorb
fists
xor
js
fldcw
dec
xor
lods
test
and
lret
mov
fistpll
popa
test
add
cmpsb
test
or
fnstcw
sub
adcl
adcb
pop
mov
xor
sub
je
ljmp
ljmp
popa
push
int3
addr16
mov
inc
out
xor
xchg
sbb
add
add
lcall
cmp
shl
push
mov
loope
outsl
xchg
fistpl
xlat
add
ret
out
test
inc
ja
js
mov
icebp
icebp
xchg
sub
into
enter
xor
mov
push
sahf
mov
ret
jl
push
lret
aas
inc
jmp
and
or
popa
test
and
jge
mov
or
add
jle
sbb
shrb
or
mov
aas
aad
jge
pusha
cli
roll
sub
jle
dec
push
jns
push
cmp
data16
test
lods
adc
test
imul
pop
fisttpl
xchg
adc
mov
xchg
aam
or
mov
sti
jp
outsl
add
pandn
mov
mov
ret
loopne
inc
pushf
and
aaa
adc
data16
stc
ja
xchg
inc
mov
pop
and
cmp
mov
adc
pop
mov
cmp
lret
jl
fnstsw
bound
adc
cmp
jg
mov
sbb
push
sbb
mov
sbb
sub
bound
jp
bound
pop
lahf
mov
imul
mov
notl
pop
cwtl
dec
xor
shlb
fisubl
and
fsubs
mov
and
inc
jge
jnp
rcll
ret
add
imul
cmp
andl
int3
jg
pop
inc
mov
pop
popf
jae
cmpsl
mov
out
fldl
xchg
or
cmpsb
push
lea
fwait
arpl
icebp
pop
inc
or
or
ret
add
xchg
shlb
stos
aaa
xchg
adc
jecxz
repnz
dec
dec
js
push
insl
add
movsl
repnz
xchg
or
sarl
iret
fsubl
insl
mov
jnp
and
fbstp
dec
repz
int3
mov
sarb
mov
adc
mov
mov
pop
sbb
mov
dec
mov
mov
stos
sub
inc
add
ret
inc
out
int
mov
js
cmp
mov
jmp
or
push
mov
mov
je
mov
icebp
adc
cli
xchg
aad
lea
xchg
dec
mov
adc
cmp
fnstcw
fisubl
push
mov
idivl
or
jne
pop
fimuls
mov
pop
cs
jbe
outsl
int3
sub
lock
in
imul
pop
movsb
imul
cmp
mov
dec
mov
sub
mov
mov
std
add
call
jge
adc
bound
out
push
jbe
cmpb
hlt
pop
dec
test
pop
iret
bound
add
dec
and
push
push
ret
pop
xlat
inc
test
bound
xchg
mov
mov
inc
sbb
cmp
outsb
arpl
lods
pop
out
cmp
int
lods
xchg
sub
iret
movl
inc
cmp
and
aam
fmul
push
mov
cwtl
lret
cmp
jb
pop
xor
mov
pop
sahf
pop
fsubrl
pop
xor
leave
nop
adc
add
push
fwait
inc
outsb
jns
ss
lcall
into
out
jns
lock
cld
xlat
test
sub
jg
mov
mov
loop
push
lahf
mov
add
push
jae
push
mov
xchg
cmc
add
mov
fsts
ret
jnp
movsl
icebp
mov
ljmp
pop
lods
cmpl
pop
push
or
jge
bound
dec
popf
sbb
ret
int
mov
inc
call
in
mov
divb
jp
outsb
stos
and
loopne
dec
gs
sub
iret
cmp
dec
clc
inc
jp
lock
push
inc
gs
mov
mov
fisttpll
cld
inc
ljmp
pushf
loop
mov
nop
shrl
cmp
jnp
into
and
out
mov
push
jno
add
bound
lods
mov
jb
inc
and
bound
adc
push
pop
hlt
mov
mov
mov
xor
mov
out
mov
adc
sub
jmp
sub
xor
dec
cmpsb
lock
or
mov
mov
jne
mov
cmp
adc
push
cmp
pop
stos
test
in
hlt
and
or
pop
cld
xchg
jl
xchg
popf
sbbb
idivb
cld
in
xor
sahf
fwait
xchg
cld
sub
fists
popa
jecxz
add
mov
jo
int
push
addr16
or
mov
add
mov
cmc
adc
push
mov
and
jbe
xchg
mov
sbb
mov
mov
cmpsb
mov
lea
mov
clc
push
jnp
cltd
mov
sbb
sbb
inc
fmull
xor
orb
mov
das
mov
in
or
sbb
mov
sti
inc
sahf
sbb
lods
pusha
es
xor
stos
xchg
jle
popa
int3
lods
sub
cmp
cli
mov
mov
nop
mov
pop
cmp
mov
in
push
shrl
mov
jb
lods
add
sub
fwait
daa
mov
xor
mov
mov
jmp
mov
ficomps
cmp
pop
xor
dec
lret
mov
subl
les
es
movsb
cmp
fcomps
mov
mov
arpl
push
ljmp
pop
lods
bound
cmpsl
lds
mov
clc
sub
mov
dec
and
mov
pop
jmp
scas
test
insl
jmp
int
shr
and
test
cmpsb
repz
and
fstpl
lock
pop
mov
xlat
mov
shlb
fisubl
mov
lock
cs
clc
mov
mov
jae
in
cmp
and
xchg
loopne
inc
lret
mov
adc
xchg
sahf
cmp
push
fldln2
clc
xchg
hlt
or
shll
jle
popf
lods
arpl
mov
sbb
sahf
add
bound
sub
cs
dec
push
mov
push
in
stc
sub
xchg
pop
popa
je
mov
addr16
push
pop
insb
jle
loopne
call
mov
popf
loope
sbb
lds
pop
icebp
mov
cs
mov
in
aad
sbb
sahf
stos
jbe
lods
mov
or
scas
cmp
or
fcoms
jb
outsb
or
inc
sti
divl
jg
sub
flds
test
adc
jbe
popf
lcall
lods
mov
add
jp
fsubl
lea
in
push
ret
mov
lods
aaa
xchg
adc
dec
shll
xor
xchg
cmp
add
outsb
sbb
adc
imul
aaa
jle
inc
xor
lea
rcll
or
test
add
pusha
or
adc
jecxz
fisttpll
xlat
divb
jmp
enter
push
sahf
sbb
in
sub
cli
mov
mov
xor
sub
push
ss
mov
dec
dec
mov
hlt
rol
cmp
loope
inc
sbb
sub
lock
fcoms
jb
sbb
bound
adc
ja
mov
dec
sbb
pop
cmp
pop
rorb
and
repz
push
adc
add
ret
psraw
mov
pop
jg
push
mov
pop
jg
xchg
dec
pop
subl
sub
popf
pop
dec
das
addr16
add
or
xor
shl
adc
stos
test
jns
fnstsw
and
mov
mov
cmc
push
enter
add
or
lret
mov
and
imul
sub
jae
imul
sbb
xchg
xchg
push
divb
lret
mov
mov
test
xorl
mov
ds
clc
dec
fnstenv
or
clc
sbb
negb
sbb
add
div
dec
mov
aam
cmp
imul
cmpl
loopne
sbb
mov
push
cmpsb
arpl
jp
inc
popa
lahf
in
gs
mov
lods
sbb
mov
aas
repz
xor
fsub
aaa
sahf
gs
jmp
rcrl
pop
adc
lret
push
shl
leave
cmp
dec
mov
shrb
xor
aas
add
mov
decl
mov
adc
xchg
pop
imul
cmp
sub
xchg
cltd
cmp
dec
mov
cld
mov
jno
add
int3
or
data16
lcall
mov
daa
inc
cli
add
mov
and
sti
mov
lds
cwtl
xchg
ja
sub
and
mov
leave
leave
cmp
aad
hlt
inc
fldenv
xor
pop
adc
stos
dec
jne
push
and
das
leave
std
xor
fisubl
cmpsl
fists
arpl
inc
fbstp
pop
lock
xor
push
popf
scas
push
fs
in
sbb
pop
sbb
lret
xchg
fsubrs
int3
enter
adc
mov
lock
push
incl
jae
and
ss
out
in
jmp
lds
fcomps
ja
iret
mov
push
mov
add
rorl
pop
mov
std
adc
test
aam
sub
ret
or
outsl
lcall
cmpsl
out
sub
lods
nop
mov
push
add
test
sahf
testb
cmp
jg
mov
adc
jno
adcl
inc
insl
repnz
into
cmp
stos
cmpsb
cmp
mov
and
sahf
dec
and
mov
outsb
rorl
dec
or
sbb
mov
je
xchg
jmp
test
rolb
insb
xchg
sub
imul
inc
bound
add
dec
jecxz
clc
xorb
push
jae
pop
adc
mov
pop
lcall
cmp
dec
out
testl
gs
mov
fnstenv
fs
push
sbb
dec
jmp
clc
inc
ja
andb
mov
fs
iret
adc
outsl
xor
push
scas
out
and
dec
cmp
pop
xchg
test
push
test
or
out
add
sub
fcomps
int
adcl
pushf
bound
pop
cmp
outsb
test
pop
loop
or
inc
aam
xor
mov
gs
out
hlt
xchg
cmp
lahf
jne
test
push
jb
mov
scas
push
cmpsl
xchg
outsl
pop
sub
and
pop
scas
loop
pop
out
add
add
xchg
orb
mov
pop
pop
jg
mov
and
ljmp
out
repnz
pop
push
sbb
call
popa
cmp
test
dec
jb
mov
mov
out
cltd
fistl
fst
mov
pop
inc
das
inc
orb
clc
scas
ss
mov
arpl
and
sbb
push
arpl
aaa
in
xchg
xchg
jmp
push
lods
fdivrs
es
cmpsb
enter
jnp
ja
pop
cmp
push
inc
inc
subb
mov
clc
sub
inc
sub
push
std
xor
das
cwtl
fstps
mov
xchg
call
rcrl
inc
in
in
cmp
movsb
pop
je
mov
ficoms
push
mov
nop
xchg
lods
add
xor
and
xchg
sub
jecxz
popf
xor
popf
xor
sbb
sbb
sahf
and
das
addr16
idiv
cmp
mov
inc
pop
test
mov
adc
mov
divl
mov
sahf
loope
imul
cmpsb
cmp
inc
repnz
ficoms
subl
or
push
popf
jns
cmpsl
dec
fimuls
xchg
repz
out
sahf
and
adc
mov
mov
and
loope
test
lock
aas
aad
jge
and
fstps
test
pop
icebp
xchg
add
daa
jp
sbb
cmpb
leave
pop
and
sarb
in
xchg
roll
and
scas
inc
idivb
dec
arpl
xchg
or
lds
and
pop
ja
push
jp
pop
pop
sbb
dec
enter
lock
mov
jo
mov
mov
rorl
jl
push
fwait
int
xor
out
cmp
sarl
inc
in
arpl
jg
aas
jg
and
sbb
bound
sbb
repnz
std
sub
hlt
into
xchg
adc
adc
dec
loope
fdivp
adc
or
repz
pop
popf
add
sub
lret
int3
jmp
adc
loope
es
push
pop
mov
pop
push
sbb
testl
pop
lds
ret
or
inc
jne
sbb
lret
sahf
js
xchg
pusha
jno
jle
push
jne
sub
in
popa
xor
mov
mov
or
jle
xchg
mov
ja
ret
aam
rorb
xor
or
sahf
jae
popa
mov
pushf
dec
repnz
jno
xchg
sbb
and
outsl
andl
fwait
lret
mov
ljmp
push
cmp
xor
xlat
xor
add
pop
and
xchg
dec
dec
cmpb
dec
mov
int3
and
mov
mov
inc
inc
add
mov
pop
out
xchg
cmp
sub
xor
adc
xchg
mov
jp
mov
adc
nop
dec
out
cmp
loop
cmp
es
pop
sbb
shrl
lea
pop
push
loope
cmpl
stos
movsb
jp
dec
enter
insb
cwtl
das
sahf
sub
push
xor
pushw
imul
scas
sub
ljmp
pop
pop
pushf
nop
inc
movsl
shll
pop
or
mov
ret
xchg
xchg
mov
pop
sbb
decb
cmp
cltd
jo
fidivrs
imul
mov
shlb
push
and
add
xchg
and
stos
bound
test
mov
ja
mov
mov
negl
sti
mov
jg
rcrl
inc
and
xor
mov
pop
or
lock
sub
dec
dec
sub
mov
pop
sbb
roll
daa
ljmp
imul
xor
imul
cmpsb
arpl
stos
inc
dec
lcall
pop
pushl
mov
add
mov
addr16
insb
inc
mov
jl
mov
xchg
fs
pop
negb
pop
cwtl
incb
ret
cmp
add
stos
into
iret
pop
lods
scas
push
test
fldcw
js
sbb
stos
jbe
mov
testl
imul
cli
push
jo
or
adc
sbbb
cmp
test
sbb
scas
test
dec
push
adc
xor
lock
sub
in
fldcw
or
jmp
adc
jb
and
andb
call
sub
out
movsl
sub
cmp
aam
sbb
pop
pushf
shrl
or
fsubl
mov
cld
xor
into
pop
les
ds
or
js
nop
test
arpl
cmp
idivl
sub
push
gs
xor
pop
fwait
cmpsl
dec
adc
push
sarl
push
mov
outsb
xchg
insl
adc
data16
lret
das
push
jbe
loopne
out
cmp
mov
stos
scas
scas
cmpsl
jle
das
inc
inc
pop
xchg
insl
mov
lods
inc
xor
push
lret
hlt
notb
icebp
push
js
js
loopne
mov
bound
cltd
repnz
xchg
or
inc
inc
sti
mov
das
pop
in
aas
push
xor
jge
inc
push
cmp
mov
add
sbb
jne
jmp
lds
clc
add
shlb
rclb
jo
mull
mov
sub
xchg
add
in
or
sbb
mov
jne
pop
call
pop
shrl
out
push
aad
ret
cli
cld
inc
mov
shr
shlb
shll
rcrl
pop
and
cmp
xchg
std
dec
pushf
cmpsl
mov
aas
push
insl
cwtl
jne
mov
mov
pop
mov
out
stc
dec
adc
rcl
mov
ret
sub
mov
mov
es
pop
dec
jmp
outsl
clc
lret
add
roll
out
xor
mov
sbb
mov
pop
call
popf
sbb
jge
mov
mov
mov
mov
push
sarb
inc
dec
ret
push
fsubr
adc
xchg
push
mov
add
push
xchg
xchg
in
jnp
clc
or
xlat
cmp
popf
dec
sub
mov
daa
and
dec
cmp
xchg
mov
xor
mov
adc
imul
addr16
and
stos
mov
mov
call
das
xchg
adc
mov
mov
or
call
stos
pop
test
push
iret
inc
lds
mov
inc
test
sbb
or
sahf
mov
mov
flds
fiaddl
pop
jbe
and
mov
repz
sbb
pusha
adc
addr16
bound
adc
push
inc
mov
lret
mov
gs
stos
pop
scas
push
pop
ret
gs
mov
adc
lock
lods
leave
imul
inc
in
pop
pop
out
fstpl
in
lods
push
inc
fimull
lret
js
pop
ds
mov
insb
sub
les
sbbl
mov
xor
das
lds
ret
out
nop
xchg
lret
fldln2
jmp
cmp
inc
mov
sbbl
add
aas
xor
shrb
lret
pop
push
into
fs
jmp
jo
shll
push
mov
jl
xor
imul
popf
out
sbb
shlb
inc
inc
sti
push
sti
jo
add
cltd
loop
and
sub
in
xor
call
push
ficomps
adc
inc
xor
sub
cmp
inc
cmp
inc
cmp
add
cwtl
push
pop
sub
pop
dec
mov
cmp
mov
push
cmp
mov
arpl
into
int
jbe
gs
lcall
sbb
xor
push
std
repz
inc
ffreep
gs
cld
ds
xchg
int3
add
pop
cmp
or
rclb
lret
das
mov
repz
pop
mov
sbb
mov
out
jae
sbb
into
scas
repnz
daa
pushf
xchg
push
and
je
adc
shrl
mov
sbb
ficomps
dec
insb
mulb
sub
pop
jne
out
outsl
mov
mov
in
cmp
adc
add
and
xchg
andl
mov
pop
or
ds
repz
mov
mov
fwait
adc
xor
push
xlat
and
in
inc
data16
mov
add
imul
cmc
push
ds
sbb
sbb
xchg
mov
inc
and
add
je
xchg
outsb
mov
test
aas
dec
rcrb
jns
dec
testl
inc
test
fcom
push
cld
andl
addr16
lcall
pop
inc
fcoms
testl
push
jne
pop
cmpsl
das
imul
jecxz
jae
mov
push
rcrb
dec
loope
jns
out
and
outsb
jl
pop
pop
mov
dec
scas
sub
sbb
mov
cmp
push
imul
pop
pop
scas
inc
dec
sub
int3
arpl
add
or
jb
xchg
sub
inc
stos
jg
push
push
pop
pop
inc
repz
aam
stos
dec
shrl
dec
jmp
mov
pop
inc
mov
jns
mov
push
mov
or
dec
ret
mov
push
mov
add
push
lods
out
fbstp
dec
pusha
xchg
sbb
test
mov
mov
arpl
aam
cmpsb
adc
xchg
arpl
hlt
test
pushf
vmovdqu
jecxz
push
inc
in
pop
mov
test
subb
loopne
cld
lret
push
mov
mov
filds
push
add
inc
adc
test
outsl
pop
loopne
or
dec
pop
mov
mov
scas
push
inc
es
xor
cmp
dec
rcrl
mov
stc
pop
into
or
jno
enter
xchg
ret
mov
cmp
in
insb
xchg
in
xchg
fcompl
jo
jge
and
xor
xchg
daa
dec
cmpsl
jle
xor
push
pop
ret
pusha
lret
add
push
ss
push
and
ljmp
cmpsl
cmp
ret
ljmp
je
in
scas
xchg
cwtl
cld
mov
cmp
fisubs
andb
in
icebp
mov
xchg
mov
dec
adc
in
imul
daa
int3
xor
pop
cmp
bound
jl
xor
mov
les
mov
es
cmp
push
lret
mov
jecxz
mov
mov
leave
mov
jno
inc
adc
mov
add
rcrl
mov
add
sub
fwait
shll
mov
stc
sbb
scas
mov
cmp
in
mov
shrb
sub
cltd
test
adc
sti
jg
sbbl
add
sbb
sub
push
push
mov
in
sti
shlb
outsb
xchg
hlt
andl
call
and
add
adcb
into
mov
sub
out
int3
dec
and
into
push
stos
inc
lock
sub
sub
addl
jo
sbb
dec
adc
mov
arpl
jb
cmp
gs
mov
fidivs
pop
jo
mov
pop
cmc
shr
in
js
inc
in
or
pop
add
mov
cli
adc
pop
jno
dec
mov
sub
and
xchg
in
mov
pop
mov
push
jp
sbb
cltd
and
mov
mov
fidivs
cs
lret
pop
pop
cld
sub
stos
xor
sbb
cwtl
into
fucomp
jecxz
cmp
lcall
test
lret
cwtl
pop
cmc
mov
jl
mov
cltd
daa
ret
adc
lock
sub
mov
cmpsb
enter
add
pop
sti
mov
mov
jne
mov
data16
ja
xor
mov
mov
or
inc
mov
pushf
pop
xor
idivl
inc
and
mov
dec
adc
jb
movsl
sahf
jmp
inc
xor
pusha
das
cmpsl
cmp
lods
push
aaa
jl
push
mov
sbbb
dec
push
mov
nop
daa
lds
cmp
pop
pop
inc
rcl
imul
jecxz
sub
jb
jmp
scas
mov
stc
call
or
adc
mov
sub
fsubl
mov
popf
stc
adc
pop
xor
sub
jmp
dec
push
scas
push
adc
cmp
push
mov
lds
repnz
cmp
adc
adc
sub
pushf
or
aad
mov
shrl
mov
lcall
xchg
mov
out
lock
movsl
icebp
fbstp
adcl
sbb
addr16
test
inc
dec
fnstcw
addr16
pusha
push
cmpsb
orb
push
ljmp
mov
push
add
sub
dec
and
lods
call
cmp
add
mov
push
push
mov
nop
fs
mov
test
push
fisubrl
jno
jg
pusha
sahf
inc
gs
or
test
lahf
pop
repz
jp
push
test
andb
imul
in
xor
jo
mov
fldt
icebp
adc
mov
and
mov
mov
pop
loopne
dec
sbb
test
jnp
jmp
mov
add
scas
xchg
xor
xlat
jne
lret
sbb
stos
pop
or
mov
divl
fwait
aas
imul
pop
cmp
cmp
mov
adcb
adc
xchg
push
jecxz
push
xchg
iret
out
sti
cmp
xlat
jne
in
and
mov
or
imul
ja
pop
gs
adc
xlat
sub
jne
fimull
jbe
inc
imul
fdivrl
lret
and
es
repnz
push
xchg
pop
scas
xchg
mov
xor
add
mov
nop
mov
xchg
jmp
and
push
mov
or
and
mov
or
sbb
pop
fwait
arpl
loopne
call
call
fdivl
cs
pop
sub
loop
push
ljmp
mov
popf
iret
xchg
and
in
ret
rolb
daa
pop
push
test
gs
inc
in
test
test
int3
xchg
jmp
ror
xor
lret
bound
lret
fcompl
orb
stc
andl
and
dec
fnstcw
or
mov
jmp
push
xor
or
jle
push
dec
scas
cmp
popf
add
xchg
xsha256
cmpsb
adc
cld
and
sub
mov
lods
int
push
pop
rolb
push
int
pop
movsb
push
push
stos
icebp
dec
dec
fisttpl
add
frstor
jno
add
inc
inc
dec
inc
leave
pushf
lret
bound
les
fldl2t
rorb
dec
out
outsb
es
inc
adc
int
adc
mov
imul
sti
fcmovnb
mov
mov
cwtl
outsb
and
call
pop
xchg
cmpsb
and
push
or
push
dec
mov
dec
lahf
sbb
or
stos
jo
sub
xlat
out
pop
add
repnz
scas
add
mov
adc
add
adc
and
shrb
jp
ss
cs
jns
lds
sbb
adc
mov
pop
dec
in
adc
inc
lret
pop
adc
imul
fldl
in
adc
pop
cmp
and
mov
aaa
jmp
pop
inc
xchg
test
aas
dec
and
sti
pop
inc
pop
ljmp
daa
data16
push
pop
daa
ja
and
jle
lods
mov
js
jmp
popa
dec
and
push
and
adc
ljmp
cmp
sub
add
or
pop
lahf
mov
cld
repz
xchg
loopne
dec
adc
add
fnstcw
rcrl
mov
dec
shrb
lret
aam
sbb
mov
add
and
mov
cmpsb
js
ds
pop
mov
aam
xchg
cli
test
int
inc
jl
fisubl
ss
imul
das
movsb
dec
orb
lds
mov
int3
pop
adc
imul
sbb
std
sub
mov
dec
xor
dec
push
sub
push
jl
add
mov
fs
ljmp
adc
ljmp
aaa
divl
imul
mov
shr
pop
xchg
ret
fists
dec
mov
stc
adc
fnstenv
or
cmc
push
fldenv
push
or
int3
and
add
icebp
mov
imul
cmp
dec
rol
xchg
subl
add
adc
ja
lods
data16
sbb
add
std
cmp
push
out
andb
xor
testl
jmp
cmpsl
test
test
inc
inc
fbld
add
cld
push
fcomi
nop
xor
jo
xchg
jae
iret
sahf
cmpb
popa
mov
and
and
push
sbb
or
cmpsl
mov
fstpl
dec
add
mov
pop
cmp
jl
daa
fidivl
pop
push
imul
mov
add
mov
dec
dec
jae
dec
data16
push
movsb
mov
sub
add
iret
add
xchg
ljmp
xor
cs
dec
mov
jp
pop
and
cmp
into
adc
mov
pop
gs
fdivl
insl
add
adc
mov
aam
jmp
mov
add
cmpsl
cmp
jp
pop
sub
cmp
mov
jbe
test
int
mov
outsb
dec
mov
ret
rolb
sbb
dec
push
shl
mov
loope
inc
into
add
imul
fsubrp
aas
xchg
push
mov
addl
aad
mov
in
pop
inc
cmp
add
jecxz
push
pop
cltd
adc
aam
push
xchg
outsl
mov
fucomip
dec
adc
push
bound
xor
mov
dec
in
mov
aaa
push
iret
into
sub
push
in
int3
dec
pop
testb
ret
es
and
aas
mov
jp
and
sbb
xchg
jl
mov
pop
mov
or
mov
pop
dec
add
jge
call
or
outsl
xor
lahf
push
in
and
iret
sbb
mov
push
out
jne
call
test
inc
shlb
add
jns
mov
jle
fisubrs
cltd
dec
pop
mov
imul
pop
cli
adc
leave
lods
push
mov
lea
cwtl
stc
or
mov
in
cmpl
scas
push
add
test
mov
xor
stos
sbb
xchg
xchg
sbbb
mov
xor
repz
pop
mov
sub
dec
xchg
imul
push
mov
out
lahf
pop
je
dec
inc
pop
jp
cmp
cmpsb
sbb
rcl
shll
add
leave
loope
jnp
cmpsb
and
mov
lods
xchg
shl
orl
ret
pop
lahf
stos
jmp
ljmp
jp
push
jae
shlb
std
nop
popa
mov
push
dec
mov
jle
js
int3
fisttps
in
iret
fists
mov
sbb
repz
dec
pop
cmp
dec
loop
add
dec
aad
cmpsb
inc
push
lahf
jmp
addr16
jmp
xchg
push
stos
sti
incb
test
mov
xchg
sahf
inc
add
lret
mov
jno
push
pusha
mov
mov
out
test
lret
sbb
mov
jns
stos
adc
adc
nop
sbb
cmp
cmpsl
ljmp
xchg
pop
cmpsl
int
lock
scas
inc
add
cltd
mov
icebp
rcll
xlat
je
ret
jnp
mov
cmp
xchg
push
sub
mov
addr16
push
xor
pop
sub
push
ds
ds
fmull
loope
add
ja
movsl
sub
push
add
sub
cs
inc
clc
cmp
push
into
insb
daa
mov
and
mov
xor
int3
push
cmp
mov
shlb
xchg
sti
pop
pusha
dec
in
sbb
jp
imul
cltd
cld
fwait
sahf
sub
idiv
inc
sbb
cs
push
jl
insl
ficoms
int3
and
xor
push
arpl
mov
sarb
mov
lcall
test
daa
add
push
pop
cmpsl
and
adc
lahf
pop
push
fwait
cmp
notb
pop
sbb
int
mov
fstl
push
mov
rcl
and
jl
inc
bnd
rolb
jmp
xchg
pminsw
jl
dec
in
push
loopne
popf
pop
sub
mov
pop
sub
xchg
adc
dec
mov
dec
rcrl
pop
or
ret
fmull
cmpsb
push
jbe
xor
sub
push
dec
xchg
inc
push
cli
xor
jl
out
xor
pop
jae
mov
adc
xor
inc
fildl
sbb
mov
ss
pop
mov
out
xor
lea
iret
inc
xchg
sub
sub
in
xlat
daa
jbe
cmpl
mov
xor
std
movsb
or
sub
les
loop
fsubrs
rcl
jg
mov
js
inc
aad
in
inc
dec
gs
leave
fnstcw
pop
xchg
lea
or
insb
jge
outsl
mov
lret
leave
pop
add
cli
sub
rcrl
int3
cmp
jns
or
fisttpll
pop
cmp
push
jl
gs
xchg
insb
stos
inc
fwait
pop
arpl
add
sub
lods
adc
add
cltd
ss
mov
ficoms
adc
rol
repnz
not
jns
addb
xchg
sbbl
xchg
ss
mov
gs
pop
dec
inc
int3
imul
into
int
mov
jo
push
inc
jmp
loope
jo
roll
fnstcw
cld
inc
rclb
dec
mov
nop
cli
xchg
or
in
pop
lods
sbb
jne
mov
sub
sti
ss
mov
push
pop
mov
orb
mov
pushf
out
shr
mov
and
jae
or
fidivrl
test
lock
shll
repz
mov
cmp
lret
jae
movsb
les
and
jbe
adc
adc
pop
push
insl
push
xor
stos
sub
mov
xor
jg
aaa
xabort
cmp
mov
test
lcall
aam
lret
adc
testb
mov
sti
cmp
mov
cwtl
jle
sbb
push
ja
mov
jg
dec
mov
ss
push
push
dec
fistpll
or
pop
pop
mov
ficoml
pop
out
sbb
cld
adc
jbe
insl
xor
xchg
repz
pop
sbb
mov
fucomp
decb
xor
mov
push
popf
sete
mov
fsubrs
mov
jmp
push
push
mov
aad
je
ljmp
adc
mov
xchg
pop
inc
adc
sub
lret
lock
sbbl
out
mov
outsb
lret
or
js
stos
push
xchg
movsb
mov
out
xchg
or
sbb
in
lahf
and
cmp
xchg
sub
pop
xchg
sub
and
xor
inc
pushf
insl
jbe
int
in
xchg
hlt
mov
enter
adc
adc
mov
sub
out
std
das
adc
dec
sti
xchg
jl
aam
movsl
shl
rorb
clc
xchg
out
call
pop
jg,pt
repz
cmp
sti
cltd
cmp
inc
in
fmull
ljmp
cltd
cmp
mov
lahf
xchg
cmp
fcmovne
das
mov
je
pop
sub
shlb
mov
lods
leave
jno
lods
mov
xchg
lods
lds
mov
fstl
xchg
daa
mov
cmc
mov
or
lcall
pop
loope
ja
enter
jne
mov
sahf
mov
inc
outsl
push
push
push
outsb
pop
xor
aas
into
xchg
stos
in
cmc
ds
pop
mov
push
xor
js
test
insl
pop
ret
adc
sbb
clc
test
jo
xchg
ss
add
fwait
cli
fisttps
jge
ljmp
bound
std
sbb
jb
mov
minps
xchg
repz
push
xchg
push
loopne
lret
mov
movsl
dec
rcrb
or
cmc
sub
in
popf
scas
es
mov
jg
insl
mov
shll
or
aaa
pop
adc
mov
sbb
jl
and
imul
adc
std
jmp
daa
dec
ss
aaa
aaa
jb
jo
fistl
mov
xchg
imull
or
ret
mov
push
aas
pop
inc
or
clc
ljmp
pusha
movsb
push
and
xor
jb
in
rolb
jnp
mov
sub
pop
shlb
or
jp
jl,pn
mov
mov
mov
daa
cld
adc
notb
pop
mov
cmpsl
xlat
cmp
xchg
dec
dec
cmp
sbb
in
inc
cs
cltd
test
lods
jae
and
data16
pop
jp
outsb
mov
push
ljmp
sbbl
sbb
mov
mov
notl
test
in
cmc
inc
mov
adc
xchg
in
je
ja
or
cmpsl
mov
pop
xchg
fsubrp
ja
icebp
lret
inc
xchg
push
testb
cli
xchg
pop
sub
testl
xchg
aad
ja
mov
push
fildl
mov
cmp
push
clc
pop
iret
movsb
xor
test
mov
add
fs
loope
sub
or
icebp
inc
test
mov
inc
in
lahf
cmp
mov
ja
leave
sub
or
shl
mov
mov
mov
cmp
and
mov
lea
subb
in
loopne
repz
mov
nop
cmp
mov
pop
repnz
inc
inc
stos
lods
inc
icebp
pop
dec
in
cltd
roll
imul
andl
mov
adc
fcmovbe
push
xor
push
bound
push
fs
dec
cld
pusha
jnp
repz
inc
test
mov
fldenv
push
test
test
aas
je
mov
in
sbb
pusha
sub
inc
mov
mov
lcall
dec
out
outsl
sbb
pop
cld
mov
lahf
les
mov
enter
push
incb
movsl
jl
call
jl
mov
movsb
jae
mov
icebp
mov
ss
addr16
or
add
xchg
add
push
insl
and
xchg
scas
adc
jo,pn
pop
mov
fcoms
jl
fwait
es
and
out
xchg
xlat
sub
dec
xor
jg
insl
inc
sbb
aaa
mov
andb
inc
loopne
pushf
mov
and
jbe
or
repnz
dec
or
insl
repz
hlt
xchg
sub
inc
push
cmp
lock
rclb
pop
inc
cli
lcall
xchg
pusha
cmp
add
mov
push
inc
pop
out
mov
dec
sti
dec
repz
test
dec
out
das
cs
mov
dec
aaa
int
xor
out
mov
sbb
in
xchg
jge
add
jno
rcrb
loope
adcl
inc
js
add
cmpsl
ds
dec
inc
enter
pop
test
mov
cwtl
push
cmp
jb
push
pop
cmp
cmpsb
cmp
add
sbb
jno
test
mov
push
sbb
pop
dec
cld
in
js
xor
decl
inc
sbbb
jae
jne
and
xor
divl
push
adc
movsl
icebp
xlat
ljmp
aad
inc
test
inc
lcall
sbb
push
gs
xchg
mov
shrl
loope
outsl
mov
mov
lret
sti
cld
test
adc
nop
mov
pop
jo
cmp
fsts
repz
push
sub
popl
out
jp
mov
jns
nop
icebp
in
pop
push
icebp
shrl
rorb
mov
out
or
filds
aad
mov
stos
imulb
fcmovne
shrb
lahf
jecxz
popa
je
cmp
into
lret
xor
mov
xchg
pop
or
adc
outsb
dec
add
push
enter
jge
jne
lret
mov
xor
inc
sbb
mov
push
sti
test
inc
mov
add
aaa
dec
dec
mov
jmp
in
cmp
push
popf
push
ficoml
test
lret
xchg
stos
in
lahf
sbb
sbb
jmp
sbb
xchg
jns
and
mov
in
roll
pop
je
mov
je
sbb
jae
sub
mov
andl
int3
sahf
aaa
incb
cld
push
jae
pop
push
loopne
push
enter
fldenv
jnp
enter
sub
nop
adc
addr16
pop
ja
repnz
int3
fsubs
jl
jecxz
imul
arpl
xor
mov
ds
jbe
jg
ljmp
mov
stos
dec
mov
mov
fs
fidivrl
in
dec
insl
and
push
fstps
cmp
and
das
cmp
mov
xor
mov
cmp
sbb
cmpsl
mov
mov
lock
imul
jl
loop
insl
ror
ret
mov
cmp
clc
adc
sbbl
out
inc
push
or
dec
sbb
adc
fs
into
push
xchg
add
adc
sbbl
fistpll
lea
popf
sub
xchg
push
mov
sbb
das
xchg
add
fstpt
mov
jo
stc
lret
sub
lea
jle
sbb
hlt
jge
or
jecxz
test
cmp
call
rorl
dec
lea
mov
xlat
cld
in
mov
cmpsb
cwtl
mov
lods
cs
lods
je
cmp
sbb
int
add
lahf
jbe
mov
clc
xchg
jno
xor
scas
nop
popf
in
lcall
cmp
out
cmp
sbb
xlat
pop
add
popl
jl
mov
add
adc
pop
jns
les
push
nop
loop
jb
dec
xor
sub
xchg
ljmp
and
or
lahf
jnp
xchg
dec
adc
cmpsb
sub
jp
xchg
and
cmp
cmp
in
cmc
in
inc
dec
sub
data16
or
add
sub
jns
xor
cmpsb
cld
lcall
in
mov
mov
inc
push
inc
push
ss
fbstp
data16
fmuls
sahf
scas
cltd
je
cwtl
mov
fs
rorb
popa
xchg
idivl
loope
in
sub
cmp
pop
jle
ds
les
mov
shrb
ret
push
mov
xchg
inc
inc
pop
std
jb
mov
adc
popw
mov
and
sub
test
ljmp
sbb
mov
jns
aas
xchg
mov
orl
roll
xchg
mov
push
cld
jb
push
call
dec
pop
outsb
out
shr
xchg
cmp
in
hlt
mov
icebp
sub
cmp
inc
push
add
pop
jp
mov
xchg
addb
out
pop
fs
sbb
xchg
jp
mov
add
or
lock
cli
push
sti
fwait
xchg
mov
jmp
int3
mov
stc
jge
hlt
xchg
pop
scas
dec
aad
mov
cli
fsubl
notb
xor
lahf
lock
out
cld
mov
cmc
inc
pop
fwait
cmpsl
aaa
cmpsl
dec
pop
xchg
mov
flds
mov
jae
lea
adc
push
or
mov
retw
pop
mov
lret
add
loope
inc
es
xchg
loop
jecxz
out
shrl
jmp
inc
push
jge
and
pusha
ss
sbb
dec
dec
ss
sub
cwtl
jmp
add
jl
shl
push
mov
outsl
sbb
sahf
rol
cli
dec
push
ret
loop
lock
outsl
loope
into
pop
sahf
mov
mov
inc
xchg
pop
cld
fdivrl
pop
aam
adc
dec
sub
inc
fdiv
nop
dec
cmp
test
xor
pushf
xor
xor
xchg
jmp
orl
ret
inc
lcall
jb
add
pop
sub
jmp
inc
in
ss
push
imul
popf
mov
int3
and
pop
mov
and
mov
movsb
cld
xchg
pop
xor
ss
pop
cwtl
cmp
push
sbb
insl
pop
repz
jnp
fidivrs
dec
fs
mov
fisttps
push
mov
inc
cmp
lock
jnp
sti
mov
shll
xor
lods
ljmp
popf
and
pop
imul
pop
cmpsl
push
or
dec
push
cld
repz
lea
jmp
sti
shlb
arpl
ss
push
mov
adc
dec
roll
cwtl
imulb
push
ljmp
inc
gs
imul
sahf
int3
and
addr16
in
jge
sbb
sub
pop
aam
test
nop
add
fs
fwait
rorb
ljmp
ljmp
jnp
fnstsw
pop
pop
scas
mov
loopne
sbb
cmpsb
dec
and
scas
aas
int3
rolb
sahf
jecxz
arpl
mov
or
mov
rclb
sub
fmul
int3
xor
xor
stc
xchg
enter
push
out
scas
and
sub
add
jg
adc
xor
sarb
sub
ds
rorl
jl
jnp
add
leave
pusha
mov
xchg
mov
es
pop
loope
es
push
cmp
lods
mov
mov
pop
push
je
das
sub
outsb
cmp
push
outsb
add
sub
fsubl
xor
popa
negl
sub
add
jns
cltd
pushf
das
adc
inc
inc
push
and
pop
pushf
xor
es
push
xor
push
je
mov
outsb
add
add
shll
adc
dec
pop
jb
ja
rcll
pavgb
and
test
mov
and
xlat
xor
sahf
xor
adcl
mov
adc
std
pop
iret
cmp
fisubl
mov
out
sbb
sub
in
out
hlt
adc
cmp
xor
xor
fidivl
loop
ret
and
lds
mov
stos
push
cmp
cmp
mov
jne
adc
jg
lods
xor
fbld
lret
pop
sub
sbb
add
fdivrl
xor
subl
jno
xor
mov
mov
jo
roll
addl
aad
mov
dec
ja
jle
aam
mov
jmp
dec
addr16
sub
jns
shrl
aad
xor
incl
cltd
imul
in
mov
mov
jae
pusha
hlt
in
test
test
mov
sbb
loopne
xor
mov
push
cld
into
outsl
cmp
adc
enter
mov
hlt
ds
movsb
sbb
out
push
arpl
xor
cmp
into
fistpll
icebp
jp
in
mov
fbld
in
sbbl
fs
pop
xchg
push
imul
mov
adcb
pop
addr16
lahf
mov
cltd
cld
inc
pop
repnz
in
push
je
cmp
ljmp
xchg
pop
xchg
pop
and
xchg
pop
inc
imul
mov
out
sahf
cwtl
pusha
add
lret
jno
ss
mov
and
adc
imul
or
sbb
sub
gs
les
push
mov
fadds
mov
lods
cmp
jo
out
xchg
pop
jbe
insl
jg
push
rol
js
inc
popf
pop
stc
pop
adc
cli
push
out
mov
jns
mov
int
xchg
hlt
iret
imulb
rcrl
jb
jnp
and
cmp
popf
orb
cmp
xchg
pop
push
push
sub
scas
jbe
lret
cmpsl
ucomiss
repz
imul
mov
mov
push
je
adc
mov
jmp
nop
dec
sbb
es
mov
into
and
gs
dec
adc
mov
xchg
popa
aam
sbb
sub
out
xchg
dec
xor
les
xor
frstor
cltd
fiaddl
shlb
adc
lods
aad
scas
xor
pop
pop
outsl
cmp
lret
dec
cmpsb
xor
jns
fsub
xchg
mov
clc
ret
xor
das
mov
dec
mov
push
cmpsb
sub
push
ror
xor
sub
sbbb
mov
dec
adc
jbe
mov
adc
aad
enter
or
mov
cmp
dec
sti
and
ljmp
ret
jns
adc
dec
ret
xor
pop
cmpsb
jge
jnp
sbb
das
and
push
mov
rcl
cmp
enter
out
imul
test
push
jo
out
mov
stos
divl
xchg
mov
mov
out
ficomps
xchg
mov
xor
pop
sub
jp
stos
jge
pushf
stos
or
xor
or
stos
push
testl
and
jo
dec
cmp
ds
out
inc
lahf
popf
icebp
shlb
and
adc
cmp
pop
xor
lcall
fnstcw
adc
push
xor
inc
cmp
xor
xor
stc
shl
mov
ret
sbb
sub
cmpl
fwait
ja
inc
xor
cmpsl
movsl
cs
gs
aad
insb
add
mov
mov
stos
sbb
cmp
jmp
leave
cltd
fsubrp
rorb
cmp
call
fdivl
cmp
sub
mov
lods
pop
xor
jmp
push
sti
jle
roll
push
jns
call
jmp
out
mov
xchg
mov
std
cmp
mov
cld
fcos
adc
pusha
andb
adc
xchg
pop
in
xor
and
cmc
inc
jo
push
lahf
loope
test
lret
jae
and
adc
mov
inc
adc
rcrb
std
sbb
loopne
adc
aad
push
rorl
mov
lds
pop
loopne
or
ljmp
xor
push
orb
pop
mov
mov
pop
out
push
test
out
fs
rclb
inc
dec
imul
fldl
movsb
push
lods
shll
push
fldln2
into
sub
test
fildll
cmpsb
dec
dec
mov
mov
dec
enter
shl
jne
out
icebp
dec
xchg
in
fsubs
adc
xor
pop
repz
mov
push
and
sti
int
mov
dec
mov
jno
je
add
mov
data16
pop
int
pop
int
mov
out
jecxz
clc
in
mov
in
in
inc
in
mov
dec
fmuls
repnz
mov
subb
dec
icebp
push
in
scas
data16
loopne
insl
and
leave
sub
cmp
popa
xor
sub
push
xor
dec
icebp
aam
or
mov
fldcw
jl
in
pushf
xor
ret
push
sub
xchg
divb
aam
push
xchg
pop
sbb
fs
mov
push
adc
cmpsl
jae
shrb
pop
lret
mov
jbe
cmp
mov
nop
nop
stos
xor
cmp
in
test
or
cld
inc
addb
mov
adc
andl
mov
mov
into
push
jb
mov
out
popf
mov
jp
mov
js
dec
aas
fisubl
push
enter
js
inc
stos
xchg
cmp
pop
rclb
sub
adc
mov
and
fstl
dec
sbb
mov
cmp
sub
cmpsb
mov
xor
outsl
push
call
or
push
sti
push
mov
push
bound
mov
fmull
cltd
sbb
xchg
xchg
jg
inc
cmpsl
mov
fwait
dec
inc
pop
imul
lcall
stc
lds
and
sbb
prefetcht2
imul
in
es
mov
scas
dec
rcrl
xor
notb
pop
xor
pop
xchg
sahf
sbbb
mov
push
pop
add
dec
faddl
mov
mov
test
sti
xor
cmpsl
arpl
std
insl
imul
xor
int3
shll
pusha
lods
repnz
xchg
leave
cs
out
cmp
loope
jns
dec
xor
mov
add
push
inc
and
lods
xor
sub
popf
ret
loope
mov
dec
fsubs
test
xchg
enter
loopne
cs
sahf
mov
hlt
push
lret
es
cmp
inc
loop
mov
fcoms
testb
inc
clc
fwait
xchg
cmp
push
jb
pop
movsb
jp
nop
les
xchg
or
aad
aam
pop
movsl
cmp
rcr
inc
into
pop
fiadds
cmpsb
scas
mov
imul
jo
fwait
cwtl
data16
push
inc
and
inc
fdivs
ss
push
sub
das
ljmp
dec
cmp
aaa
cmpsb
insl
fcom
sbb
int3
sub
mov
jnp
mov
mov
dec
aas
aam
iret
mov
jmp
or
mov
stos
inc
xor
mov
xchg
movl
mov
xchg
lea
cwtl
das
scas
and
fldt
sbb
cs
pop
test
adc
rcrl
mov
data16
fwait
mov
ret
inc
push
lods
jmp
sbb
lret
fistpll
scas
push
imul
das
xchg
loope
add
out
xor
imul
pop
jecxz
pop
push
push
insl
mov
mov
ret
sbb
in
mov
push
cmp
aaa
pop
jne
ret
mov
cmp
or
cmp
cli
pop
divb
mov
in
out
ja
inc
xor
push
fldt
sub
test
xchg
and
nop
test
inc
adc
clc
pop
insb
dec
fs
pushf
add
xor
push
pop
popa
cmp
mov
mov
jb
les
mov
adc
mov
jae
cmp
xchg
outsl
pushl
test
dec
or
shl
lea
push
pusha
jp
and
pop
ljmp
js
inc
sbb
adc
fcomip
and
enter
xor
push
or
mov
aam
cld
mov
mov
push
ficomps
mov
jmp
ja
lret
jb
mov
sbb
xchg
or
add
outsb
cmp
js
cvtdq2ps
insl
jb
outsb
cltd
pusha
sbb
enter
pop
pop
fs
aaa
rcrb
cmp
push
jl
xlat
lods
bound
jb
mov
xchg
in
stc
shll
and
add
push
push
xor
pop
push
xchg
in
out
jge
xchg
dec
ffreep
fnsave
repnz
loop
mov
jnp
xchg
pop
xchg
cmp
scas
jle
or
cmc
jecxz
xor
jle
leave
out
out
jmp
pop
lret
fs
mov
push
xchg
lock
push
and
js
mov
push
fbld
xchg
je
into
es
sti
test
shll
pop
jns
lds
or
jns
mov
jns
cmp
dec
pop
sub
arpl
sub
arpl
push
xchg
shrb
jmp
xor
cmp
pushf
xchg
movsb
push
inc
int3
push
pushf
iret
sbb
cmp
jae
push
sub
adc
das
mov
inc
int
cmp
fwait
ljmp
sbb
outsl
push
push
int3
daa
fdivr
addr16
and
pusha
sti
or
xchg
cmc
sub
test
ja
pop
movl
in
push
in
sbb
sar
cld
aaa
mov
maxps
addr16
mov
std
in
into
gs
cltd
add
add
mov
leave
mov
incb
inc
lahf
mov
mov
dec
loope
jae
jb
cltd
sbb
leave
cs
dec
pop
adc
mov
cmp
xlat
dec
stc
inc
cmp
push
js
cmp
in
push
push
add
daa
out
js
lods
notl
repnz
mov
in
test
arpl
into
push
test
jns
or
out
xchg
imul
mov
mov
mov
gs
stos
shrl
push
gs
in
mov
in
jne
sbb
cmp
sub
mov
inc
into
mov
loope
xor
movsl
inc
js
in
out
dec
repz
shll
mov
stc
and
pushf
push
ds
mov
arpl
xchg
sub
repnz
push
push
pop
mov
add
inc
mov
xchg
test
cmp
mov
mov
dec
pop
cld
cmp
xchg
xlat
inc
add
lds
out
imul
out
add
mov
cmc
inc
mov
mov
movsl
das
inc
fnstsw
jne
out
rcl
pop
ja
xor
mov
xchg
nop
mov
mov
test
push
imul
popf
xor
imul
jbe
and
test
lret
lds
mov
jne
cli
das
push
out
pushf
lds
fisttps
fisubrl
cmpsl
xchg
leave
jo
clc
popa
sbb
push
int3
in
xchg
popa
xchg
and
les
data16
cmp
loopne
repnz
cli
pusha
leave
cmp
mov
les
std
pop
clc
dec
sub
xchg
mov
sbb
add
ret
xchg
lock
hlt
fdivrl
int3
test
cmpsb
or
icebp
aam
mov
arpl
and
cmp
ja
repnz
pop
repz
mov
imul
adc
int
out
mov
xor
roll
in
bound
and
or
pop
negb
hlt
fwait
sub
sub
adc
ja
arpl
cs
and
jg
push
lods
sahf
int
int3
inc
pushl
mov
les
ja
push
movsb
pop
jmp
mov
dec
mov
gs
inc
cltd
movsl
dec
popf
pop
mov
insb
or
cmp
pop
setle
inc
inc
addb
mov
cmpsb
adc
dec
mov
pop
pop
testb
xorb
xchg
in
add
adc
inc
cmpsb
stc
jo
sub
fdivl
bound
adc
cli
xchg
add
movsb
mov
sbb
jne
pop
call
lods
sbb
cli
cmpsl
push
lods
loop
pop
cmpsb
xor
xor
pop
loopne
add
or
sbb
xchg
enter
mov
xlat
pop
mov
leave
inc
mov
out
and
push
aaa
gs
cld
mov
cmp
inc
push
xor
cs
nop
fisttps
ja
inc
testb
xor
int
popl
mov
sub
hlt
mov
rcrb
mov
fdivl
leave
sti
jle
pushf
out
icebp
push
xchg
lret
sbb
divb
fwait
rcrb
shl
cmp
mov
test
pop
and
mov
ficompl
adc
mov
push
or
mov
aas
mov
imul
adc
jl
mov
ds
out
and
ficoml
dec
adc
jnp
lcall
lock
push
push
xchg
cmc
scas
repnz
or
out
sbb
jmp
pop
addr16
sbb
mov
add
pop
push
adc
sub
xor
sbb
xchg
xchg
bound
leave
mov
adc
inc
inc
aam
scas
nop
dec
xchg
mov
jne
loope
in
xchg
loope
sub
mov
jnp
pop
mov
or
hlt
scas
sub
ja
pop
fidivl
pop
lock
pop
rcrl
add
fstpt
jne
dec
pop
push
xchg
lea
cmp
lret
or
addl
or
cs
pop
ljmp
jnp
pop
push
lret
cltd
les
and
push
scas
jg
mov
mov
inc
adc
repz
mov
iret
jecxz
insl
or
adc
push
inc
out
inc
xchg
add
outsb
scas
imul
aam
inc
or
call
xor
mov
pop
inc
sub
loopne
dec
nop
sub
jp
xchg
rcrb
add
pop
sahf
pop
cmpb
and
adc
inc
xchg
mov
push
filds
mov
mull
pusha
jge
xchg
sti
adc
out
shrl
mov
xchg
fincstp
lds
dec
cwtl
out
nopl
push
fnsetpm(287
mov
testl
aaa
xchg
dec
out
sub
insl
push
in
loopne
mov
loopne
inc
pop
or
cwtl
cmp
mov
insl
jge
cmpsb
mull
addr16
push
scas
mov
int3
mov
xchg
into
out
ss
pop
pusha
int
push
inc
rorb
cmpsl
pop
repz
cmp
or
inc
lods
mov
sbbb
sbbb
fcomip
jbe
mov
in
lcall
dec
pop
out
test
jmp
ficomps
adc
dec
mov
popa
inc
mov
cvtps2pd
jae
std
sarb
sub
xor
mov
call
push
mov
cmpsb
les
mov
push
xor
int3
shrl
or
cmpsl
push
insb
push
jmp
scas
sbb
hlt
mov
inc
inc
ja
xchg
bound
cli
mov
mov
imul
sub
sbb
jl
jb
outsb
pushf
push
sti
mov
out
les
push
add
mov
neg
jo
lea
or
push
shlb
mov
lds
sahf
and
sahf
scas
push
sbb
int
test
pop
xorb
and
mov
ret
add
mov
mov
clc
xchg
dec
out
loopne
outsl
pop
lods
add
es
pop
fdivp
mov
mov
xchg
xchg
push
aam
hlt
sbb
in
out
nop
jo
mov
rclb
xor
repnz
nop
daa
lret
add
xor
daa
icebp
les
rcrl
lret
mov
mov
and
test
js
lock
sahf
in
int3
aad
add
scas
imul
mov
lahf
xchg
fwait
xchg
push
sbb
out
inc
in
jg
fbstp
dec
mov
xlat
lods
adc
je
pop
xor
repz
stos
test
lret
jnp
sahf
xor
xor
into
scas
cs
jmp
ljmp
lea
sbb
int
inc
adc
stc
movsb
xor
test
push
add
or
or
sub
or
aas
or
popf
fcmovnu
in
sysret
std
and
in
push
push
fldt
nop
leave
sub
push
push
std
push
adc
pop
aam
icebp
adc
or
xor
stc
movsb
ljmp
or
jmp
jge
in
daa
int3
fwait
xor
xor
mov
les
push
ss
int
aad
rol
push
push
jmp
sub
stc
pop
repz
movsl
shrb
adc
lret
and
sbb
and
xchg
stc
mov
lea
lds
and
jmp
rcrl
in
icebp
and
xchg
std
inc
js
dec
aam
les
or
cmpsb
fimuls
pop
jae
idiv
shlb
ret
hlt
arpl
sbbl
decl
cmp
sub
cmp
push
loop
sbb
mov
jnp
sti
call
test
insb
adc
inc
push
rcr
or
aam
xor
sub
popf
lods
cs
mov
repz
daa
lcall
jns
push
in
js
and
inc
adc
testb
dec
and
cld
int3
mov
lock
fisubrs
aad
gs
and
adcb
xchg
sub
or
adc
scas
xor
in
jno
test
push
lock
xor
dec
outsl
addr16
pop
repz
xchg
push
xchg
dec
or
lock
add
mov
and
fwait
popa
popa
ret
mov
mov
loopne
cli
push
movsb
das
stos
insl
es
gs
shl
add
lods
arpl
mov
sbb
push
pop
xor
cs
push
and
mov
icebp
lea
stc
lea
adc
fs
fwait
xchg
mov
or
arpl
jb
mov
test
mov
sbb
ljmp
cmp
push
insl
loope
cmp
pop
testb
sbb
data16
call
xchg
adc
xchg
sub
push
cmp
iret
push
psubq
cld
mov
inc
adc
in
popa
cmp
push
movsl
add
imul
jl
adc
mov
cmp
in
jg
mov
jno
stos
ficompl
sub
lds
or
aas
xchg
aad
pop
addr16
andb
shrb
rcl
sbb
push
or
aam
xlat
sbb
clc
add
test
xor
add
xchg
xchg
repz
je
mov
lret
nop
das
add
es
pop
test
cmp
mov
dec
pop
out
jl
add
enter
push
in
addr16
push
jb
lcall
jbe
add
push
jg
mov
xchg
jne
jle
mov
mov
test
jmp
pop
rcll
sub
aad
fdivp
imul
fidivl
je
lea
nop
mov
or
hlt
ljmp
mov
adc
xor
mov
add
or
mov
lea
leave
cmp
mov
fstl
icebp
pop
pop
jp
jl
insb
subb
adc
je
test
lods
xchg
mov
and
add
push
daa
xchg
xor
leave
jl
pcmpgtb
and
cmp
mov
push
adc
adc
mov
cltd
clc
add
add
push
xchg
js
scas
jno
subl
or
arpl
in
mov
arpl
imul
xchg
and
xlat
mov
hlt
test
mov
dec
mov
iret
and
lea
cmp
pop
sub
adc
pop
mov
dec
inc
sbb
out
in
into
scas
stc
sbb
int3
lret
push
cmp
ljmp
jne
mov
jbe
enter
imul
mov
loop
arpl
out
or
and
jb
int3
outsl
in
pop
addr16
int3
imul
insl
cli
jge
xchg
pop
lock
add
gs
cmp
jg
mov
divb
jae
mov
pop
nop
sbb
stos
jbe
fistps
mov
cmp
cmp
mov
or
cmpsb
or
inc
adc
push
dec
xor
cmc
aas
cwtl
and
das
std
movsl
push
inc
out
dec
js
xchg
pop
cmc
dec
or
frstor
mov
fwait
sub
add
dec
inc
push
sub
or
test
jns
dec
sbb
adc
data16
cmp
xchg
dec
mov
insl
mov
lock
cmp
mov
adc
and
mov
cmp
stos
ja
insl
sbb
cwtl
xor
leave
icebp
adc
mov
push
cmp
jb
popa
pop
xchg
mov
cmp
mov
jno
scas
aas
mov
fmul
mov
call
mov
jecxz
arpl
mov
adc
insb
leave
popf
aas
rcrl
jmp
cld
hlt
xlat
jbe
or
or
push
int3
pop
lret
cli
and
test
adc
jbe
push
ss
cli
adc
inc
mov
mov
add
sbb
outsb
cmp
std
sub
test
icebp
inc
ffree
cmp
pop
sub
or
mov
ficoml
or
js
jl
cmp
lods
and
xlat
jp
nop
testl
dec
mov
and
test
cmpsl
fldl
add
lods
xchg
in
and
aas
fwait
mov
fs
decb
add
dec
sbb
ja
fisubrs
cmp
test
xchg
negl
lods
sbb
xchg
inc
loop
mov
movsb
xor
or
lea
into
icebp
daa
adc
test
ret
jl
or
dec
sbb
imul
cmp
out
in
sbb
pop
out
mov
mov
mov
clc
mov
adc
sub
iret
pop
mov
push
add
test
mov
xor
mov
xchg
pushf
scas
scas
cli
sbb
leave
outsl
cmp
int3
je
stc
int
xchg
adc
insb
scas
push
ja
fsubrs
push
xor
push
fiaddl
mov
notb
lcall
outsb
stc
cmc
adc
loope
mov
push
out
loop
out
fsubrs
sarl
andb
gs
mov
rclb
add
lahf
bound
and
popa
jg
jbe
lret
test
ficoml
aad
sti
mov
loopne
xchg
xchg
push
xchg
test
mov
shl
scas
scas
fsubr
rcr
jbe
andb
lods
test
cmp
addr16
rcrl
lds
mov
lahf
les
arpl
and
popf
add
adc
or
jnp
mov
cwtl
adc
xor
cmp
inc
scas
xor
xor
ret
push
inc
fadds
xor
sub
dec
xchg
scas
adc
stos
pop
fcoml
lock
lret
jg
orb
dec
repnz
lods
and
stos
add
int3
dec
subl
data16
je
sbb
sbb
idivl
mov
push
adc
pop
mov
flds
fs
sbb
mov
gs
lcall
sbb
mov
fsubr
push
fcmovnbe
cli
push
ljmp
push
scas
sarl
xchg
sub
out
adc
push
jbe
inc
ficompl
sub
sbb
add
rorb
hlt
cltd
xor
aad
and
sub
jmp
cmp
addr16
lcall
addb
push
dec
xor
adc
ret
out
out
shlb
out
addl
loopne
push
subl
xor
gs
fwait
idivb
jmp
repz
cli
xlat
nop
add
stos
and
pop
insb
sub
dec
jp
imull
and
hlt
mov
sub
dec
les
adc
enter
cmp
arpl
imul
loop
daa
inc
lods
mov
fnstsw
fs
iret
or
mov
movsl
jb
mov
fs
push
or
push
aam
mov
adc
fildll
add
push
aaa
fcomps
test
cld
mov
and
out
ds
lds
pop
std
pop
mov
fstpt
cmp
in
pop
bound
xchg
xchg
add
cltd
or
daa
int
jg
cld
xchg
xlat
mov
dec
pop
adc
mov
rcrb
push
and
jns
popa
shufps
inc
push
popf
inc
imul
cltd
and
pop
xchg
nop
out
stos
mov
testl
mov
add
push
pop
jecxz
pop
mov
add
dec
adc
cmp
loop
sti
in
aam
pop
push
popf
iret
xlat
mov
lock
sub
ljmp
or
add
pop
sub
pushf
insl
lret
outsl
inc
es
loope
shr
repz
adc
int
jbe
xor
test
popl
mov
leave
mov
dec
pop
sub
push
pop
push
jne
mov
and
sbb
mov
xchg
pushf
sub
sub
stos
cmp
xor
and
test
outsl
add
imul
inc
out
mov
sbb
xchg
push
inc
je
cltd
lods
js
imul
sub
stos
push
int3
jae
pop
push
jns
sub
repnz
jno
xor
clc
pop
stos
in
sarl
ds
or
sub
cs
ss
gs
cmpsb
nop
pop
jo
push
loop
es
sub
or
adc
xor
pop
lock
mov
cwtl
aas
mov
lcall
dec
rep
and
inc
jecxz
loop
shll
push
xor
mov
outsl
leave
lods
out
das
sub
cmp
xchg
inc
sbb
imul
rcll
insl
sub
popf
lea
adc
enter
xor
jnp
in
xchg
pop
addr16
cltd
aam
rorl
pushf
adc
ljmp
and
push
adc
push
out
xchg
xor
xchg
insb
jbe
pop
cmpsb
stos
push
hlt
push
xor
mov
orb
jae
mov
mov
push
or
or
mov
sub
mov
mov
inc
pop
leave
in
insb
repz
add
daa
nop
xorl
xor
ficomps
insb
jl
xor
mov
lahf
ja
call
adc
add
push
mov
push
xor
cwtl
sbb
jp
lret
cmp
xchg
push
fisttps
inc
fcmovnb
pop
jae
imul
bound
ret
jl
inc
lahf
ds
test
into
or
push
in
outsb
out
push
fbld
mov
push
ljmp
sbb
lret
stc
lods
push
or
cmp
jecxz
push
lcall
push
inc
test
cwtl
add
scas
shr
sbb
ja
out
scas
adc
xchg
jmp
jo
testl
sub
adc
insb
sub
clc
sti
sbb
lret
fbstp
je
out
push
and
scas
in
aas
loop
sbb
dec
xchg
mov
dec
es
mov
lds
pop
loope
cmp
pop
dec
xlat
dec
arpl
clc
jmp
inc
cmpsb
sbb
ds
jp
cmc
sub
adcl
xor
shrl
arpl
fwait
lock
in
xchg
leave
push
out
cld
sub
sbb
int
int3
in
mov
addl
adc
gs
fsubr
shl
aaa
scas
bound
xor
sbb
jle
pop
sub
add
loopne
and
or
xorl
xor
stos
or
mov
cmc
push
pushf
lods
lret
test
push
jae
mov
testl
push
leave
and
jae
add
adc
fsincos
andb
daa
shl
xchg
sarb
inc
fimuls
pop
and
test
loop
mov
mov
push
int
mov
xchg
jl
sbb
add
pop
std
mov
movsl
js
xchg
jbe
sbb
push
stos
jbe
inc
aas
clc
cmp
or
test
mov
dec
jo
insl
add
mov
mov
aad
push
xchg
dec
inc
inc
sbb
fldlg2
insl
add
aaa
inc
or
mov
stos
bound
mov
inc
push
test
loopne
xchg
cmp
mov
mov
cmpsl
jg
cmc
and
iret
xchg
adc
jns
std
outsl
stos
in
test
nop
test
add
dec
test
lcall
and
adc
mov
aam
popf
call
pop
cli
inc
push
fstpt
movsb
inc
sub
rorb
stc
sub
push
sbbl
xchg
inc
adcl
es
out
inc
jmp
test
sarb
sub
in
mov
sbbb
bound
jae
mov
ret
stos
xchg
aaa
add
and
shl
mov
pop
xchg
mov
lahf
sbb
mov
push
dec
add
mov
or
jl
xchg
sub
cmp
jae
cwtl
movsb
aam
adc
jmp
mov
pop
pop
xchg
aam
and
sbb
repz
lcall
and
movsb
ja
ljmp
inc
fimull
daa
adc
lcall
push
add
pop
mov
repnz
push
roll
xchg
lock
mov
shlb
push
add
packsswb
or
repz
pop
out
mov
inc
cs
aam
ffree
xchg
push
jno
cmpsb
mov
push
scas
sbb
jb
sbb
xor
mov
sbb
xchg
jg
add
movsl
fnsave
xchg
cwtl
mov
lret
outsb
cmpsl
sbb
test
arpl
pop
or
rclb
test
xchg
leave
imul
stos
sbb
mov
fs
sahf
and
cmp
pop
jmp
jge
ret
out
mov
push
jmp
loope
mov
sub
shl
or
fmuls
in
fidivl
push
cmp
outsl
xchg
mov
movb
jb
daa
mov
fs
jl
jle
cmp
pop
add
movsl
cld
fisttps
jp
sub
mov
imul
nop
xor
xchg
adc
das
mov
mov
push
dec
mov
inc
xlat
bound
pop
test
test
or
pushf
test
inc
shl
mov
fsubs
popa
inc
cmp
fs
or
test
push
xchg
in
test
arpl
notb
or
pop
cmp
mov
les
in
jl
ljmp
or
enter
ja
lret
daa
repnz
mov
inc
das
icebp
or
mov
ss
movsb
sbb
and
dec
in
shlb
jmp
pop
scas
jl
pop
lock
add
insl
jne
ja
pushf
cwtl
mov
sbb
je
jmp
lods
mov
cwtl
cmpsl
jb
lock
jbe
pop
mov
mov
xchg
mov
cmpsb
cmp
stos
aas
les
sub
fstpt
jecxz
lret
icebp
insl
or
js
sbbl
pop
fmulp
aam
loop
jmp
cmpsl
push
lcall
int
call
fwait
cmp
stos
jge
lcall
cli
jne
shrb
in
lret
xor
cld
iret
cmpsb
stos
in
fisubrs
xchg
mov
icebp
loope
xchg
sub
jns
lcall
enter
jecxz
dec
dec
dec
push
loope
sbb
fstl
stos
outsl
mov
scas
test
mov
imul
sbbl
pop
mov
fidivrl
sbb
mov
rclb
jne
jbe
xchg
push
fs
je
movsl
mov
pop
inc
inc
fiadds
stos
test
jge
repnz
ljmp
roll
push
xchg
cwtl
arpl
mov
outsl
orl
jecxz
das
adc
daa
xchg
test
lods
insl
lock
mov
mov
jno
pop
scas
mov
add
test
mov
or
inc
out
stos
xchg
jb
enter
notb
cli
mov
imul
adc
cmp
call
pop
and
sbb
cmp
in
mov
cmpsl
insl
mov
add
cwtl
stc
mov
and
loope
in
pop
outsb
jg
mov
je
jmp
cmp
jmp
aad
int
fstpt
test
test
lret
mov
test
js
adc
and
divb
mov
shl
addb
mov
movsl
or
pop
mov
scas
mov
clc
lods
sbb
cmovae
and
in
test
fdivrs
xor
shlb
pop
fldt
int3
popa
clc
or
das
addl
jo
aaa
push
xchg
ss
mov
inc
lods
stos
lret
adc
int
xchg
int3
mov
cmp
rcrl
lahf
and
leave
loope
push
and
test
inc
popa
aaa
ljmp
aas
sbb
call
inc
inc
ret
mov
decb
out
call
fidivs
jb
sbb
xchg
into
fcmovb
add
or
push
outsb
dec
in
cmp
outsl
outsb
or
rorl
xchg
push
pop
inc
sbb
push
fs
xchg
das
jp
pop
jb
shlb
aam
xor
das
sub
mov
lock
fucomi
mov
movsb
sti
dec
bound
ret
jnp
xchg
arpl
jb
test
add
leave
sbb
lret
xchg
mov
xor
xchg
add
push
pop
sbb
sbb
adc
fldcw
ret
in
jae
loop
in
lcall
ljmp
mov
mov
dec
jno
mov
sub
mov
pop
scas
mov
pop
xor
test
push
stos
ljmp
jno
dec
cmc
cmp
lret
sti
sbb
push
dec
fcompl
mov
outsl
fdivl
insl
aaa
into
scas
pop
or
cmp
dec
in
loope
lock
imul
jecxz
fistl
sbbl
mov
pushf
out
adcb
jge
test
jle
nop
lods
push
test
into
pushf
shlb
inc
add
or
xor
shr
add
sub
std
inc
sub
cmpxchg
orb
adc
push
pop
jbe
out
icebp
jno
sbb
insb
jle
das
jne
xlat
xchg
repnz
jnp
fcoml
call
cmc
fisubrs
pushw
iret
loope
inc
add
xor
aas
data16
pop
mov
lahf
in
shr
loop
push
loop
xchg
inc
adc
out
sub
test
pop
or
lret
adc
aam
pop
push
push
mov
lahf
dec
add
sbb
loopne
mov
xor
andl
sbb
imul
lds
inc
leave
jmp
std
xchg
pop
cmp
xor
insb
imul
dec
inc
cmp
mov
jge
clc
mov
mov
dec
sbb
out
arpl
movsb
xchg
lods
add
movsl
aas
jl
sub
out
pop
mov
mov
into
pusha
dec
push
rclb
out
xchg
or
test
dec
fistps
add
jg
add
push
xchg
xchg
in
push
push
or
jle
fstl
push
sub
mov
add
xchg
xor
push
xchg
fwait
loop
lea
jp
daa
ret
jne
mov
or
adc
sub
hlt
sahf
dec
xor
jnp
jl
test
or
orl
jne
lds
xor
mov
imul
out
rclb
mov
mov
fs
push
cli
movsb
mov
jge
fwait
push
xlat
fdiv
clc
shl
js
sbb
mov
mov
repz
mov
pushf
in
inc
repz
aad
out
test
add
sub
cmpsb
fnstenv
clc
lahf
les
inc
fsub
jecxz
push
cli
out
aas
movsl
aas
xor
out
fwait
xor
sbb
into
cmpsb
mov
in
adc
loopne
pop
adc
adc
leave
xlat
mov
mov
jns
add
cmp
imul
jmp
mov
in
out
pop
jmp
popa
mov
in
inc
icebp
das
mov
inc
pop
mov
cltd
sub
mov
ret
pop
or
inc
dec
test
xlat
mov
mov
jno
jb
sub
test
mov
imul
ds
mov
dec
icebp
xor
mov
adc
iretw
mov
jo
or
mov
ljmp
adc
nop
sbbl
js
fidivs
mov
ds
imul
lcall
push
fildll
jo
xchg
rolb
fnstcw
xchg
xchg
in
xchg
cwtl
xor
xchg
push
das
sub
shrb
pop
icebp
xchg
out
sti
push
shll
jle
gs
dec
add
hlt
dec
lock
jg
and
mov
push
int3
pop
test
loope
popa
push
xchg
xor
add
cmp
loopne
pop
enter
cmc
sub
jp
lahf
push
in
sbb
and
std
in
jns
rcll
push
test
jne
jne
xchg
inc
or
inc
fwait
push
adc
rcrb
lcall
fmull
out
jecxz
adc
jbe
lds
lret
and
fidivrl
add
sar
mov
addb
imull
aas
roll
les
lock
rcr
mov
fsqrt
rorb
test
jl
je
push
dec
fs
les
or
jo
rorb
pop
or
cmp
in
js
pop
sbb
repnz
xor
jecxz
fisttps
ds
jmp
aas
cmovbe
out
xchg
xchg
mov
sbb
mov
rcl
push
in
xchg
ret
fwait
mov
mov
loopne
mov
xchg
fistpll
in
inc
in
mov
and
cmpsb
test
adc
lods
std
mov
out
push
inc
sbb
pop
fidivrl
dec
pop
in
xchg
out
mov
in
inc
fisttpl
imul
sub
xor
and
xor
in
cwtl
push
incb
in
jne
fildll
jae
add
test
call
or
enter
dec
test
nop
and
xchg
inc
xlat
movsb
shlb
xor
push
sub
jb
jp
and
mov
dec
inc
pop
jbe
lret
lahf
sbb
aad
push
pop
pop
bound
ljmp
sub
jne
je
sub
xor
repz
dec
lcall
mov
jecxz
mov
jne
inc
sub
inc
xlat
jp
lea
sbb
pop
sub
cwtl
sbb
pop
add
mov
bound
lods
fldcw
sbb
mov
int3
test
mov
and
sub
cmp
mov
fldl
ss
mov
test
pusha
mov
arpl
adc
pop
pop
jmp
inc
pop
jno
mov
xor
scas
enter
rcrl
arpl
push
sub
call
mov
leave
test
dec
mov
jecxz
daa
testl
mov
addr16
cwtl
sbb
xor
dec
shll
push
lods
pop
mov
sub
sbb
mov
jp
stc
shr
lcall
loopne
fcmovne
les
push
insl
pop
jecxz
jb
into
xchg
jno
or
sub
mov
inc
mov
cld
xchg
in
push
sar
mov
xchg
ja
jge
xor
xchg
test
aam
add
and
xchg
std
adc
movsl
movsl
jl
adc
pop
jg
data16
mov
bound
xor
and
mov
ja
mov
inc
lods
test
gs
dec
daa
mov
scas
xchg
dec
dec
sahf
add
addr16
test
dec
test
mov
push
test
xchg
pop
cmp
lods
dec
dec
sbb
stc
int3
jg
sbb
sti
fldt
jns
stos
jae
scas
inc
dec
adc
lret
outsb
dec
call
insb
add
decb
sbb
jl
loopne
push
xor
inc
fisttpl
ja
mov
shlb
dec
popa
and
xchg
iret
jl
or
insl
jle
lahf
push
nop
sub
loop
mov
or
adc
cwtl
push
aas
mov
scas
out
fnstenv
daa
shr
jg
push
gs
inc
jg
out
inc
std
jl
sbb
jge
iret
sbb
fsts
push
sub
adc
sbb
adc
xor
pop
adc
dec
stos
xor
xor
in
mov
in
test
mov
or
shrl
xchg
mov
dec
loope
lret
icebp
bound
xlat
adc
cmp
pop
dec
enter
imul
xchg
adc
pusha
fdivrl
xchg
mov
cmpsl
jmp
jmp
and
pop
lcall
adcb
push
xor
pop
and
andb
repnz
shlb
insb
and
xchg
or
and
js
lock
hlt
aas
int3
xchg
bound
and
and
out
sahf
jne
adc
neg
test
outsb
adc
sbb
pop
pusha
cmp
mov
or
cmp
pop
push
rolb
pusha
sbb
jnp
xor
into
jecxz
inc
pop
ret
bound
popa
popf
nop
pop
adc
pusha
mov
adc
lds
mov
out
push
insb
jb
mov
ds
mov
call
insb
and
inc
mov
mov
mov
ds
or
push
lock
out
or
cld
ret
mov
cmpsl
adc
cwtl
and
xor
push
gs
push
pop
mov
jle
jns
dec
sbb
mov
mov
das
stos
fdivr
popl
stos
mov
and
sub
adc
popf
popf
mov
ret
and
jo
xchg
sub
cmp
dec
push
stc
aad
stos
or
mov
jns
out
add
sub
mov
lahf
push
popl
mov
sbb
push
and
dec
mov
and
push
pop
outsb
dec
sbb
in
icebp
nop
ss
ja
sbb
xchg
mov
xor
adc
popa
mov
sub
push
xlat
dec
and
inc
push
stos
inc
push
notl
ljmp
adc
repnz
imul
xor
imul
fs
mov
mov
or
mov
or
loope,pn
ficomps
aaa
inc
js
mov
bound
sbb
cmp
cld
popa
sub
mov
loope,pt
mov
push
jmp
sbb
jns
jnp
or
push
ds
and
sub
adc
xchg
inc
pop
mov
push
and
test
add
hlt
adc
jo
in
daa
and
push
jl
ja
jb
ljmp
jb
jno
shrl
adc
test
stc
pop
daa
addl
xor
es
pop
mov
xchg
ss
cltd
es
jl
inc
popf
adc
cmc
mov
movsl
cmp
pop
mov
mov
adc
bound
daa
sub
icebp
popa
aas
jns
xlat
cmp
cmp
sti
pusha
loop
jg
addb
push
icebp
das
stc
test
movsb
les
xchg
or
jle
andb
popa
in
dec
push
pop
nop
adc
push
pop
repnz
and
push
mov
popf
jo
cltd
test
mov
adc
pcmpgtd
xchg
fdivrl
jns,pt
adc
sbb
xchg
sbb
mov
dec
pop
hlt
jp
add
fwait
jnp
mov
jns
mov
shrb
inc
jecxz
pop
adc
pop
mov
shlb
pop
lret
adc
pop
lods
mov
sbb
aas
cmp
pop
push
jne
or
adc
inc
fsubr
ret
adcb
push
fimull
jmp
lret
inc
push
cmc
mov
sbb
lods
mov
mov
jne
dec
sarb
enter
icebp
xchg
imul
jo
inc
sahf
stc
outsb
fchs
cmp
andb
pop
imul
sub
inc
push
mov
push
add
mov
jmp
repz
sub
cmp
sub
cmpsb
ds
scas
popf
xor
lods
cmp
jb
ds
rcl
adc
jae
shrl
sbb
mov
sbb
imul
sbb
sub
fs
addb
jge
push
enter
fisubrl
add
jg
aaa
adc
frstor
daa
addr16
fwait
in
mov
pop
push
loope
out
cltd
repz
jmp
xor
pop
add
dec
xchg
push
std
lock
loope
out
inc
movsb
dec
outsl
ss
xor
inc
inc
cmp
int
add
sbb
jmp
sbb
or
mov
ja
data16
inc
sub
movl
dec
in
je
pop
cmpsl
into
xchg
cli
in
cmpsb
andb
imulb
fs
jg
add
jbe
rcrl
insl
enter
insb
hlt
fistpl
adc
inc
cmp
jp
and
sarl
fnsave
mov
dec
iret
icebp
fdivl
mov
ret
bound
jae
sub
adc
mov
lret
and
adc
ljmp
mov
cmc
imul
imul
mov
movsb
scas
inc
subl
shlb
adc
xchg
loop
dec
es
mov
xchg
clc
fldenv
shl
mov
test
ficoml
mov
xor
inc
and
add
mov
sbb
mov
mov
je
lret
xor
ret
ret
in
test
inc
sub
aas
and
xchg
retw
adc
jecxz
jns
out
testb
les
jns
iret
loop
lcall
repnz
pushf
jmp
lahf
ret
jge
aad
xchg
lahf
pop
sbb
rcrl
inc
popa
stos
pop
mov
inc
or
lds
testb
add
adcl
sbb
pop
insb
mov
adc
jmp
leave
js
js
mov
mov
clc
ror
or
jmp
adcl
pop
scas
mov
xchg
mov
shll
jg
xchg
pop
faddp
mov
gs
pop
dec
mov
sarl
adcl
push
jb
mov
cld
xchg
vcmpnlesd
imul
add
leave
popa
aad
adc
and
mov
sub
mov
ret
inc
xchg
orl
hlt
sbb
mov
jne
dec
adc
dec
popa
leave
icebp
cmp
adc
sbb
mov
jle
cmpsl
int3
push
mov
in
inc
mov
lods
pop
sarl
out
inc
rorb
iret
jecxz
jg
sub
xor
sub
mov
stc
js
fwait
scas
mov
leave
pushf
popf
in
jg
xchg
and
scas
or
and
add
mov
inc
sti
sub
sub
pop
cld
mov
fstl
lods
inc
rclb
lds
mov
pop
ljmp
shrb
add
into
bnd
or
je
aam
push
add
data16
pop
push
or
lods
xor
es
mov
mov
in
xor
or
lcall
in
adc
lret
sub
mov
xchg
mov
mov
add
push
loope
rcl
xor
je
popa
pusha
push
popf
push
sbb
push
out
scas
inc
fbstp
loopne
cmpsb
sub
push
pop
imul
jmp
sbb
hlt
dec
loope
push
sub
push
loop
cltd
sarb
jae
pop
or
sarb
adc
popa
clc
add
sub
bound
shlb
lret
mov
fdivl
pop
testb
pop
push
mov
push
es
std
dec
out
mulb
mov
add
inc
and
arpl
mov
xor
mov
inc
push
psubusb
roll
lea
push
adc
enter
inc
add
aam
jo
jo
sub
test
or
aas
xchg
sub
rol
push
mov
insb
sbb
ret
cmp
icebp
aam
paddd
hlt
push
lahf
stos
lock
jbe
sahf
mov
in
decb
in
and
lock
jl
mov
aaa
stc
imul
jl
add
or
cmp
sbb
or
or
pop
jo
mov
lods
out
lahf
push
dec
gs
std
or
adc
jne
pop
push
mov
push
inc
pop
das
int3
or
clc
dec
stos
sub
fwait
xchg
mov
hlt
shll
adc
repnz
push
dec
cmp
cmp
js
cwtl
pop
mov
xchg
adc
int
scas
imul
fadds
fisubrl
xlat
jmp
add
aas
xchg
pushf
pop
not
xor
rol
int
cli
mov
subb
fs
fstp
mov
rcrb
into
enter
adc
sbb
pusha
rcl
mov
int
xchg
xor
aad
cs
mov
fstp
inc
adc
repnz
mov
dec
and
mov
lcall
sub
lahf
xchg
push
dec
and
ds
add
lret
xlat
dec
dec
fs
stos
xchg
sub
add
es
in
inc
or
movsl
and
mov
pop
adc
jmp
orb
mov
pop
sbb
push
ret
xor
dec
hlt
inc
pusha
imul
sbbb
incl
nop
daa
mov
scas
scas
inc
and
scas
mov
stos
cmp
loopne
pop
fnsave
les
sbb
insl
cld
xchg
dec
inc
inc
mov
push
fst
pop
push
lds
mov
or
fs
test
sub
sbb
lods
inc
add
push
bound
loopne
jae
dec
loopne
lods
fpatan
ljmp
call
pop
cmc
mov
daa
movl
in
xchg
push
insb
divb
mov
jns
jb
fiadds
pop
pop
jl
outsb
add
lock
repz
inc
addb
lcall
dec
inc
mov
push
movl
mov
lret
sub
pop
aad
std
gs
and
sub
pusha
ljmp
test
ds
push
nop
rcrb
xchg
loope
leave
jb
lock
adc
int
xchg
push
push
push
mov
dec
cmp
jl
lods
inc
xchg
jle
mov
aad
aas
push
xor
popf
mov
ljmp
nop
imul
mov
push
lods
mov
loopne
or
lods
cld
lcall
and
xor
jge
dec
add
scas
leave
xchg
loope
popf
inc
or
mov
sbb
xchg
mov
std
mov
cmp
mov
lahf
jmp
aaa
add
mov
test
xor
mov
mov
mov
aaa
push
in
dec
or
popfw
and
lret
pop
mov
lds
js
in
ret
hlt
adc
xchg
movl
inc
arpl
dec
fdivrs
jmp
jae
xchg
pusha
mov
jg
dec
flds
daa
hlt
bound
push
repz
out
int3
lods
pop
or
inc
insb
xor
cmp
lods
jbe
cld
aam
cwtl
xor
fmull
sbb
add
xor
icebp
xlat
repz
mov
inc
sbb
jg
jmp
popa
enter
call
adc
and
push
lds
mov
sbb
or
xchg
pop
test
jb
cmp
mov
out
xor
lahf
jp
or
mov
mov
es
add
in
movsb
xor
cmpl
rcll
and
sub
icebp
seto
mov
or
cs
push
outsb
cmp
push
shlb
push
sub
arpl
mov
mov
and
jp
ss
jmp
mov
sub
or
cmp
loopne
insl
pop
cmp
pop
call
aas
scas
and
test
mov
sbb
das
rorb
stos
pop
lock
or
cmp
decl
ja
adc
pop
cmp
ds
xchg
xor
sub
mov
sub
inc
fldl
fs
push
fnsave
jle
rcl
sti
pop
pop
hlt
pop
push
push
mov
mov
add
mov
mov
insl
movsl
inc
push
shr
cmp
cmp
stos
cmp
add
icebp
mov
les
mov
mov
adc
cli
mov
ss
push
push
mov
or
jmp
daa
cmpsl
dec
inc
cmp
addl
jb
xor
lds
inc
cld
sub
les
cltd
push
imul
lods
cmp
push
jb
pop
movsb
ds
push
lcall
test
test
rcrl
pop
in
outsb
sbbb
je
rcll
aaa
push
sub
pop
lock
push
mov
lds
add
jmp
inc
xor
out
mov
xor
iret
in
je
mov
jns
cld
fsubrs
xchg
dec
loopne
cmp
mov
sbb
mov
mov
push
popa
insl
sbb
inc
lea
lcall
pop
mov
jno
test
hlt
ret
arpl
test
sar
imul
shl
stc
xchg
add
dec
subl
xchg
fimull
adc
out
push
sti
imul
push
sbbl
aas
sbb
lcall
xchg
cmp
scas
inc
test
pop
ret
dec
pop
addr16
int
mov
aad
mov
mov
mov
bound
les
fsubrs
dec
enter
lock
repz
sub
mov
loope
and
test
je
dec
cmpsb
icebp
aas
aad
lea
xchg
insb
popa
insl
inc
sub
mov
insl
jnp
out
sbbl
lea
sub
sub
lahf
aam
pop
push
rcl
outsb
imul
out
lret
lret
aaa
loop
shr
jg
lock
inc
es
fistpll
cmp
pop
mov
in
xor
jnp
cmp
ljmp
iret
push
fdiv
in
roll
lret
adc
add
sbb
pop
cmp
daa
mov
xchg
mov
jge
adc
test
and
and
xchg
and
frstor
ret
outsb
add
cld
mov
pop
xchg
lods
mov
jne
sbb
mov
xchg
clc
pop
mov
xchg
sub
cmpsb
adc
dec
loope
movsb
mov
xchg
or
cmpsb
cmp
or
inc
or
jbe
pop
xor
pop
pushf
hlt
cmp
mov
fistl
loopne
sbb
inc
insb
jg
inc
xchg
sub
jg
stc
ds
jo
mov
in
rcr
ljmp
jno
pop
insb
flds
ss
addr16
shrl
push
data16
xchg
out
out
ret
push
movsl
sahf
das
dec
sub
mov
mov
mov
and
xchg
mov
out
jbe
adc
dec
test
push
lock
movsl
xchg
lcall
call
cmp
scas
mov
js
pop
jno
add
mov
mov
add
clc
xlat
and
push
clc
stc
xchg
xor
mov
push
mov
pop
pushf
fstpl
dec
mov
loopne
je
fwait
jns
inc
sahf
dec
pop
jg
fidivrs
sbb
mov
sbb
popa
jl
cs
in
pop
cmp
pop
hlt
pop
je
jnp
repz
and
mov
cmp
loope
aas
mov
mov
loop
inc
sarb
fiaddl
lret
and
push
outsb
data16
add
loop
pop
adc
inc
int
pop
scas
lret
std
add
fsts
lea
lret
jg
pop
sub
in
call
hlt
movl
pop
add
or
xor
or
xchg
notb
ljmp
hlt
fimuls
pop
in
jg
divl
stc
stc
xchg
sbb
enter
mov
inc
dec
shrb
lds
sbb
jns
cld
repz
out
lock
cwtl
clc
sub
mov
ret
les
cmp
inc
mov
mov
xchg
rcrb
fcoms
outsl
pop
loop
sub
dec
shrb
imul
cld
add
sub
out
sub
sub
sahf
pop
mov
popf
xor
test
mov
cmp
xchg
jno
sbb
scas
or
loopne
enter
insl
pop
je
sbb
pop
sbb
mov
inc
fidivrs
sarl
roll
xor
sbb
je
clc
mov
int3
arpl
sbb
mov
aaa
push
je
push
ljmp
pop
jnp
mov
clc
ret
jmp
pop
add
js
jne
fcomps
imul
mov
push
cmp
call
rcr
or
cmp
add
in
cli
sbb
mov
adc
cli
mov
popa
add
jns
jo
pop
and
in
lahf
and
mov
andl
jp
test
fs
xchg
mov
pop
out
test
les
lcall
lock
test
jp
push
fs
pop
loopne
test
jbe
dec
pop
or
call
mov
es
ret
pop
ljmp
jmp
out
ljmp
stos
dec
out
in
popf
movb
mov
int3
jno
add
sbb
xor
mov
fnsave
push
mov
adcb
mov
push
push
inc
repz
call
jns
and
iret
int
inc
xchg
mov
insb
lret
bound
jmp
push
push
insb
push
enter
scas
aam
mov
sub
lea
mov
int3
mov
decb
call
lods
dec
rolb
fabs
inc
popa
sbb
js
or
or
arpl
imul
cmp
clc
pop
push
in
or
cmp
popa
dec
in
jg
inc
cmp
mov
sarl
test
popf
lret
cld
mov
adc
pop
test
mov
pop
ss
int
push
adc
stc
aas
and
dec
inc
int3
dec
inc
push
inc
sub
jge
push
out
lea
push
test
fsubrs
pop
xchg
sub
out
lock
lods
pushf
es
add
sub
jno
insb
call
and
push
push
loopne
mov
std
test
push
and
mov
sbb
stos
adc
pushf
mov
mov
mov
ljmp
jg
loopne
sub
test
ret
sub
mov
sub
mov
mov
cmp
jp
push
and
gs
fidivrs
jge
out
mov
xchg
imul
fsubs
lret
mov
cpuid
lods
xchg
fisubrs
push
nop
imull
xor
mov
orl
or
push
inc
lahf
fucom
jl
mov
sbb
pusha
sbb
fwait
pushf
mov
and
in
xor
setno
adc
xor
addr16
mov
mov
jo
push
dec
not
or
call
stos
pop
andl
mov
push
jae
je
jns
sub
xchg
inc
add
andl
push
ds
cs
sub
add
adc
push
cmpl
repz
pop
jl
call
pop
out
push
aaa
inc
pop
out
cmovp
nop
xchg
mov
adc
int
push
test
js
in
icebp
cltd
or
pop
mov
jmp
lock
ret
add
mov
and
pop
in
sbb
jg
pop
lods
pop
loope
cmp
scas
mov
test
loopne
xor
sbb
fldl
sub
fs
sbb
pop
fstpt
dec
out
bound
jecxz
and
lock
aas
int
sub
loop
push
or
int
mov
push
fmuls
cmp
ds
hlt
xchg
lea
lahf
mov
in
mov
mov
fwait
lret
mul
mov
jae
fs
jnp
dec
add
test
pop
adc
adc
lock
jnp
ret
and
fbstp
pop
push
movsb
rcr
movsl
popa
sbb
pop
sbb
nop
dec
mov
iret
mov
push
out
push
fnstcw
push
fidivrl
or
cmpsl
mov
mov
sbb
aad
dec
in
and
lds
cmp
sub
inc
sub
fbstp
ds
push
call
push
outsl
cs
mov
xchg
xchg
xor
jb
fwait
cmp
xlat
test
xchg
lods
call
lock
push
push
js
subl
sub
iret
pop
mov
lret
and
adc
add
jnp
push
popf
mov
sbb
cmpsb
cwtl
pop
jae
pop
lds
push
sbb
gs
popf
xchg
mov
lcall
test
fiaddl
hlt
pop
loope
cmpsb
xlat
lds
push
movsb
fcmovne
clts
mov
clc
add
jg
and
inc
out
jb
inc
scas
mov
sarb
bound
mov
fstl
cmp
in
fisubrs
aad
xchg
adc
mov
xchg
sub
xchg
cmp
xor
inc
outsl
push
jne
mov
sahf
pop
loopne
xor
add
mov
inc
test
lods
or
pop
movsl
subb
jo
lahf
das
xor
fs
adc
adc
pop
jmp
mov
imul
insl
stos
adc
xchg
add
int
xor
je
in
pop
jns
or
call
test
push
or
mov
das
les
jnp
xor
push
fdivl
adc
push
bound
stc
ja
mov
scas
pop
mov
xor
jl
cwtl
jle
or
ds
cwtl
das
je
sbb
leave
inc
sbb
jle
sbb
push
pop
mov
add
adc
shr
cmp
mov
pushf
add
adc
inc
cmp
or
xchg
pop
fnop
inc
ljmp
call
outsb
scas
dec
mov
xchg
fbld
arpl
sub
repz
sub
scas
adc
push
fadds
xchg
pop
in
imul
icebp
add
lahf
mov
fists
xchg
adc
jg
xchg
mov
popf
and
pop
mov
sbb
aaa
shll
cmp
add
mov
dec
shl
repz
and
lcall
lcall
adcl
sub
push
rorb
repnz
ljmp
imul
xor
popf
dec
daa
movsl
pop
dec
test
or
mov
loopne
mov
enter
dec
and
xchg
sub
shlb
sub
lds
incl
ret
mov
lock
mov
inc
sub
adc
inc
imul
popf
jb
and
jle
mov
mov
shrb
dec
popf
repz
call
lcall
inc
fldl
into
sbb
test
jae
adc
xchg
dec
mov
xor
jg
adc
dec
lret
and
jle
push
push
or
jge
jbe
sbb
add
stos
cmc
inc
ja
xlat
pop
imul
pop
les
mov
les
movsb
sub
dec
adcl
pushf
nop
gs
enter
pop
push
and
add
vpcomq
insb
rcrl
outsb
lds
cwtl
fisttpll
mov
shll
dec
mov
jnp
xchg
fimull
out
inc
push
cmp
popa
sub
push
aad
mov
popa
jo
icebp
imul
int3
lret
push
mov
in
xchg
std
arpl
jnp
scas
loopne
jns
push
out
aad
add
icebp
daa
movsb
or
iret
jns
dec
cli
aam
add
pop
mov
ja
cmp
lods
cmp
fwait
xchg
pop
xchg
adc
inc
sbb
inc
xchg
mov
stos
cmp
lods
or
enter
lods
popa
push
jbe
or
lds
sbb
loope
cmpsl
je,pt
idivb
lods
lds
mov
jno
movsb
sub
daa
mov
iret
push
inc
add
mov
inc
pop
sbb
fisubrl
repz
pop
insl
jle
repnz
inc
and
lods
push
adc
cmp
test
popa
fnstenv
mov
cmpsl
push
jmp
sub
jl
int3
pop
pushf
jae
cmp
mov
call
mov
pop
jbe
fisubl
pusha
repz
mov
xor
fisubl
insl
push
adc
jo
mov
int
mov
push
xchg
hlt
stos
fwait
or
mov
push
pslld
jne
pop
xor
test
loopne
jge
adc
sub
lock
cmpsb
pop
jg
add
xor
out
mov
jl
inc
loop
xlat
mov
dec
adc
mov
add
push
out
ljmp
mov
jns
in
repz
push
mov
jo
icebp
xchg
push
addr16
call
stc
nop
sbb
stos
int3
cmpl
imul
pop
in
and
add
icebp
ss
jecxz
call
cmp
jbe
pop
fwait
push
ss
xchg
out
cmp
push
fs
sub
mov
add
lret
loop
rcrb
fsubrs
cmp
sarl
cmp
or
push
cli
or
movsl
test
inc
adc
jbe
mov
xchg
push
hlt
clc
test
rol
add
push
add
pop
or
in
inc
int3
iret
fcomi
xor
in
add
mov
sbb
incb
shrl
iret
cmp
fmuls
movsl
inc
mov
repnz
sub
add
add
aaa
mov
icebp
idivb
mov
sbb
pusha
aam
test
mov
push
dec
mov
insb
stc
clc
or
inc
xlat
sbb
enter
ret
and
sbb
jl
mov
incb
imul
scas
pop
js
dec
cmp
cmc
shl
fdivrs
inc
dec
mov
cmc
js
mov
sub
jge
jae
imul
and
add
adc
adc
js
test
mov
into
iret
adc
mov
bound
push
push
jmp
mov
data16
dec
mov
idivb
aad
stc
add
mov
mov
inc
pusha
mov
shll
stos
sub
jle
stc
push
cmp
cmp
pop
sub
and
dec
repnz
sub
mov
and
rcll
adc
push
out
xorl
or
shl
ss
arpl
pop
test
lret
cld
in
clc
or
jg,pn
jp
out
xchg
jecxz
leave
lcall
xor
push
insb
mov
mov
aad
push
fbld
pushf
cvttss2si
add
sti
mov
test
dec
subb
xchg
push
outsl
scas
mov
rcll
pop
mov
or
mov
push
jp
mov
xor
negl
mov
sbb
loope
push
pop
cmpsl
add
jge
shrb
mov
jns
repz
cmp
movl
and
and
movsb
mov
dec
ljmp
pushf
or
mov
sub
jne
push
aas
mov
rclb
inc
test
add
in
xor
lock
jg
addr16
mov
iret
cmp
lret
icebp
mov
adc
lret
push
xorl
pop
jo
std
pop
out
mov
adc
int
pop
scas
sarb
xor
ficoml
pop
notb
popa
sahf
stos
xor
sahf
and
fisubrl
loopne
pushf
sbb
jb
lds
scas
push
xor
push
fs
mov
cmp
mov
test
push
mov
sub
xchg
jp
sbb
fdivrs
jns
jge
push
mov
ljmp
or
xor
push
sub
mov
into
divb
in
loopne
sub
and
movsb
stos
mov
inc
jbe
xor
adc
enter
lcall
sarb
shl
bswap
divb
adc
scas
mov
push
aas
mov
gs
mov
push
mov
fsubrs
mov
aam
nop
daa
pop
scas
pop
icebp
fwait
mov
push
hlt
cltd
mov
loopne
imul
and
hlt
sar
sub
test
iret
and
mov
jo
inc
movsb
xchg
push
dec
pop
nop
jecxz
inc
or
call
or
jp
pop
imul
addr16
clc
add
arpl
cld
jnp
xchg
xor
mov
cmp
lahf
das
icebp
xlat
clc
rol
jno
mov
lcall
repnz
push
mov
pop
daa
cmc
adc
sub
sbb
stc
or
jmp
and
inc
fdivrs
mov
popf
dec
pop
imul
stc
jbe
inc
or
out
and
dec
mov
jnp
inc
fldenv
sbb
ret
shl
mov
fsubrs
adc
shl
js
hlt
lock
loopne
xchg
sbb
cld
pop
mov
sub
push
pop
imul
sub
loope
clc
sub
hlt
inc
or
jl
cmp
mov
xchg
and
cmp
cmp
sbb
pop
dec
mov
push
imul
pushf
aaa
aas
aam
inc
mov
lea
lahf
mov
adc
pop
jnp
cmp
ds
sub
test
es
xchg
sbb
iret
fildl
dec
pop
insb
push
mov
movl
sbb
shlb
cld
jno
mov
cmp
xlat
hlt
xchg
clc
cmpsl
dec
out
dec
subl
sub
pop
stc
add
mov
inc
mov
cmc
aaa
lahf
and
cli
lods
cmc
imul
add
ret
mov
lds
mull
inc
int
mov
pop
push
jmp
xchg
sub
jg
mov
and
xor
repz
pop
sub
stos
inc
fstps
movsb
mov
sub
xor
inc
pop
pop
popl
gs
pop
sub
dec
sahf
push
cmp
int
shlb
not
das
shll
sbb
mov
call
scas
dec
loope
cmp
adc
shrl
pushf
sub
and
fdivrs
movsl
cmp
mov
pop
in
lock
idiv
leave
lcall
stos
mov
mov
or
xor
sub
dec
pop
jg
xor
das
cs
jbe
xor
sti
sbb
adc
dec
jnp
jnp
xor
adc
mov
inc
mov
inc
cmp
andl
sub
pop
ret
jecxz
jecxz
in
outsb
fidivs
jle
push
jecxz
jb
in
test
dec
or
js
jmp
xor
fistpll
out
inc
push
shrl
xchg
sub
shrd
mov
pop
fdivrl
outsb
mov
popf
stc
or
popf
jmp
mov
popa
nop
loope
popa
pop
jge
and
xor
stos
push
shll
popf
addr16
insb
aaa
call
mov
ret
sbb
in
test
mov
dec
data16
jnp
out
ja
sub
popa
add
mov
fimuls
xor
dec
dec
ss
jmp
cmp
out
mov
imul
sbb
je
or
int
jmp
jp
scas
cld
sbb
adc
insl
pop
daa
mov
test
or
push
or
dec
mov
in
hlt
ret
insb
es
pop
nop
jae
idivb
sub
cli
xchg
cmp
mov
lcall
scas
nop
and
adc
lods
cmpb
outsl
inc
rclb
cwtl
push
and
mov
push
sub
jle
pop
cmc
scas
out
xor
mov
push
lock
pop
lock
adc
add
adc
movsb
leave
dec
outsb
imul
pop
pop
scas
fbld
or
pop
int
fdivrl
dec
lcall
outsl
es
loope
mov
incl
add
scas
xchg
mov
rclb
scas
test
jb
rcrl
rcll
jl
ja
inc
pop
sub
lcall
and
cmp
mov
test
enter
cmp
lcall
ds
inc
pusha
mov
sti
aaa
call
xlat
push
mov
shll
mov
cmp
int3
and
push
outsb
cmp
push
mov
aad
aam
test
jecxz
repz
push
sub
push
fxam
mul
movsb
jno
int3
mov
inc
int3
jbe
rorb
sbb
push
adc
mov
xchg
add
je
cmc
dec
out
sub
rol
mov
mov
mov
add
rolb
cmp
mov
xchg
jns
xlat
repz
adc
jb
inc
gs
orl
jle
cmp
push
lahf
cli
or
inc
out
jg
aam
push
jle
xchg
mov
popf
xor
cmp
cld
testb
out
mov
jnp
aam
cmp
clc
mov
cld
shl
fldt
je
stc
or
movsl
xor
push
mov
inc
scas
and
loope
cmp
xor
mov
daa
jecxz
push
mov
xor
addr16
cmp
xor
lret
outsl
pushf
mov
mov
es
jmp
addr16
sbb
push
mov
repnz
xor
cmpsl
or
lods
nop
jb
aam
add
jne
push
addr16
xchg
or
adcl
int3
dec
mov
push
insb
push
lcall
and
mov
iret
fbstp
xchg
fbld
push
mov
mov
into
xchg
sub
sbb
add
loopne
jecxz
cltd
notrack
mov
roll
fwait
aaa
adcl
rorb
sarl
mov
jo
mov
add
or
js
lods
mov
dec
fimuls
repnz
insl
pop
loop
pop
mul
lcall
loop
sub
divl
push
or
inc
popf
int
xchg
fs
add
fistl
ljmp
add
fmull
icebp
jne
xor
data16
push
mov
cmp
pop
repnz
hlt
lea
ja
lret
fs
inc
in
testl
bound
test
mov
ret
test
or
jg
nop
sub
test
lea
movsl
jg
push
sti
lret
mov
dec
loope
pop
mov
add
xor
lret
fs
xlat
imul
sub
popa
add
inc
jmp
or
pop
adc
dec
add
in
in
adc
lret
push
insl
popf
inc
push
rorb
jmp
mov
mov
xor
jno
cmp
shl
or
adc
dec
sahf
mov
cmpsb
lock
fwait
jecxz
xchg
enter
in
mov
aas
jbe
aad
fcmovnu
daa
imul
dec
pop
or
push
mov
mov
fstpl
ret
fs
mov
cli
jl
mov
test
mov
movsb
or
loope
arpl
jle
fdivs
push
cs
mov
ljmp
imul
out
int3
mov
cmp
cmpsl
scas
inc
fldenv
mov
fsubs
pusha
outsb
jb
mov
push
data16
cmp
mov
das
ss
inc
rclb
cmp
sbb
pop
adc
add
dec
cmp
or
lret
push
les
sub
lahf
ret
cwtl
sbb
out
inc
std
cwtl
dec
cmp
je
cmpsl
cmpsl
mov
adc
cmpsl
in
inc
push
call
andl
outsl
popa
movsb
mov
jno
rcr
sbb
mov
sbb
dec
imul
iret
inc
loopne
xchg
fdivrl
mov
adc
lret
stc
cmp
mov
lods
sub
fdiv
inc
repnz
daa
lds
inc
das
mov
faddl
lret
dec
push
loopne
or
adcb
xor
mov
mov
stos
pop
xchg
daa
cmpsl
fsubrl
push
xchg
sub
dec
push
add
mov
rcl
clc
rcr
outsl
jnp
push
xor
cmp
mov
sahf
jl
stos
sub
or
mov
jbe
in
in
fcomps
movsb
adcl
xor
dec
cmc
jb
adc
das
cmp
loopne
call
test
daa
xchg
test
push
loopne
mov
xor
jg
test
sbb
das
adc
out
mov
jl
fisubs
lcall
add
sbb
push
fsubrs
sbb
out
xchg
jo
dec
mov
testl
dec
lahf
mov
lea
mov
nop
out
mov
lea
push
out
hlt
stc
nop
daa
fstps
lea
adc
stc
nop
and
sahf
xor
mov
push
jmp
shl
xor
shl
push
cmc
dec
dec
js
aam
inc
pop
ds
or
ret
inc
push
outsb
sub
mov
dec
fists
and
push
jo
xchg
in
je
std
push
adc
pop
sti
add
push
sub
enter
sbb
cli
in
jmp
addb
dec
cs
mov
clc
mov
mov
sbb
js
xor
notb
pop
dec
mov
xchg
dec
movsl
dec
sub
mov
cltd
je
movsl
sub
pop
cltd
xlat
sbb
pop
ss
lds
sub
mov
or
sahf
std
insl
or
test
mov
das
lret
xchg
cmc
lcall
call
mov
jmp
xchg
add
and
outsb
jl
push
ds
jg
mov
imul
inc
pushf
push
push
dec
insl
stc
and
push
aad
lods
pop
arpl
push
dec
shrl
jne
in
pusha
and
in
xor
stos
pop
or
scas
mov
test
divl
jns
mov
mov
xchg
jmp
enter
add
cmp
mov
fmull
call
pusha
mull
push
shrl
leave
pop
lcall
dec
aad
js
mov
addr16
jbe
test
mov
aas
and
mov
mov
and
push
mov
out
mov
int3
shl
fnstenv
shl
inc
rorb
lods
mov
xchg
mov
sbbb
xor
pop
xor
jae
mov
bound
jl
ja
pop
test
add
push
fldenv
cmc
lret
aaa
xchg
repnz
pop
xchg
sub
cltd
sbb
pop
xchg
push
shrb
pop
movsb
aas
lods
pop
insl
add
lcall
pusha
mov
outsl
cmpsl
jp
mov
cmc
sbb
cmpsl
mov
sbb
in
add
popa
outsb
add
add
sub
or
dec
cltd
iret
push
test
pop
aaa
cmp
popl
loopne
adc
jmp
and
cltd
sbb
nop
nop
stc
in
sub
daa
pop
add
push
hlt
test
mov
jmp
out
push
sub
je
add
xor
fcmove
mov
fdivrl
fwait
sarb
popf
imul
mov
call
mov
mov
dec
dec
cwtl
in
pusha
sbb
push
mov
into
sbb
hlt
cmp
fs
shrl
insb
jbe
lds
cmpsb
xlat
clc
stc
sub
movsl
test
sbb
lds
fmul
in
loop
fisttpll
pop
mov
cmpsl
fstpl
or
cwtl
mov
ljmp
and
cs
mov
and
iret
pop
ret
adc
inc
ds
inc
cmp
jo
pop
in
cs
cmp
es
xchg
inc
test
add
pop
or
pop
ret
mov
adc
push
jmp
lahf
stos
push
jnp
out
xchg
outsb
fdivrl
imul
out
add
pop
jno
mov
negb
cmp
lahf
push
or
aam
test
mov
fldcw
arpl
stc
lea
push
jns
and
out
cwtl
add
stc
je
stos
fcomp
fistl
pop
leave
sub
xor
pop
xor
xor
xchg
cmc
fidivs
fimuls
mov
hlt
fnstcw
dec
push
repz
xor
mov
dec
andl
xorl
push
or
cmp
pop
repnz
dec
lods
nop
ss
inc
pushf
or
mov
push
daa
lea
sub
jp
mov
addb
rcll
or
addl
dec
dec
add
bound
mov
aaa
jmp
pop
and
push
outsb
ret
push
jb
dec
in
xchg
orl
jecxz
push
pop
sub
xor
xrelease
cmp
gs
sub
bound
das
ret
loop
mov
repnz
pop
sub
push
aaa
test
or
lcall
xchg
insl
fsubrl
sub
pop
dec
jne
gs
arpl
inc
xlat
jmp
and
xor
sbb
loop
push
cli
addr16
iret
jl
jns
push
movsb
mov
shrl
xchg
xor
xlat
inc
xlat
push
imul
adc
imul
push
inc
decl
jne
jae
adc
adc
dec
sub
in
mov
cmc
mov
mov
jns
adc
pop
outsb
in
jl
outsb
cmpl
test
mov
in
xor
insb
push
sub
lea
cmpsl
and
sub
cwtl
add
or
xchg
bound
cltd
pop
jno
xor
sub
dec
xchg
out
pushf
pop
sti
cmp
and
add
pop
and
cmc
jne
push
lahf
stos
arpl
push
ret
pop
adc
into
dec
fs
xor
jl
orb
push
push
leave
pop
mov
sub
add
inc
in
sbb
adc
or
pusha
sub
mov
pop
dec
out
jnp
sbb
hlt
mov
or
scas
jno
cmp
mov
fdivr
negl
leave
pusha
dec
sbb
les
jb
mov
lea
ss
ret
and
iret
cmp
dec
outsb
pop
adc
mov
mov
stos
pop
push
ljmp
outsl
push
jg
lea
sub
mov
shll
pusha
ss
and
pop
xorl
scas
cmp
lods
std
cmpb
nop
fcmovu
xor
rclb
mov
cmp
loope
push
mov
add
cmpsb
test
cmp
sahf
add
sbb
test
push
jnp
cwtl
fs
rol
test
mov
pop
xchg
lock
xchg
imul
sbb
lret
pop
ss
pop
lods
sbb
or
ljmp
mov
mov
or
jmp
pop
testl
out
mov
ljmp
rorl
fcmovnbe
and
inc
fisttpll
pop
stos
leave
cmpsb
pop
cmpsl
sbb
jmp
jl
xchg
sub
adc
fwait
xchg
int
adc
cmp
sub
add
hlt
stc
adc
mov
inc
pushf
sbb
shld
les
addb
jnp
inc
out
mov
cmc
mov
out
pop
xchg
adc
add
pop
repz
shrb
inc
mov
popf
inc
orl
pop
cvtdq2ps
mov
inc
call
or
gs
pop
sub
pop
or
jo
jle
cmp
test
and
dec
dec
adc
jg
ficoml
or
adcl
and
insb
adc
xor
xchg
xor
ret
mov
jecxz
call
mov
push
adc
addl
jno
add
in
stos
movsl
movsl
pop
push
clc
cmp
std
pop
subl
or
jmp
jg
jmp
out
or
push
insb
jo
xchg
mov
outsb
test
mov
xchg
lods
stos
jnp
push
inc
jbe
mov
push
mov
aam
popa
dec
movsb
pop
mov
clc
sub
mov
fisubrs
je
mov
loopne
jecxz
push
in
add
std
mov
push
push
rcll
or
les
pusha
stc
cwtl
push
insb
icebp
scas
pop
repnz
mov
add
sbb
mov
fidivrl
or
jb
xlat
insl
lret
adc
or
and
scas
mov
nop
ss
hlt
mov
adc
and
sub
int
stos
ja
add
sbb
js
mov
filds
rcrl
mov
and
bound
popf
das
aas
adc
pop
jmp
and
nop
je
dec
lahf
fidivl
pop
in
jnp
fiaddl
shr
movsb
add
cld
mov
imul
adc
and
into
push
out
sub
push
sbb
xor
mov
xchg
push
out
enter
mov
rcrb
mov
push
in
loop
int3
dec
mov
push
adc
jne
fwait
insl
jmp
lea
pop
inc
stos
inc
ja
push
cs
sbb
jmp
dec
cwtl
fwait
mov
jl
cmp
rolb
fidivrs
aad
and
fcoms
dec
popa
negl
rorl
cmp
sub
jnp
push
jmp
stos
mov
push
hlt
pop
sbb
jecxz
cmpsl
sti
fwait
mov
cwtl
test
movsb
or
pop
enter
out
push
sarb
dec
out
punpcklbw
dec
cmp
or
xor
aas
mov
lahf
or
mov
push
jle
cmpsl
jbe
pop
addr16
es
mov
lcall
into
push
sub
jbe
xchg
cmpsl
in
lcall
clc
or
push
pushf
xchg
out
pop
xchg
aas
aad
mov
mov
adcb
repz
push
or
adcl
jle
jbe
in
test
ja
int
dec
loopne
aad
int
stos
xor
ja
jecxz
out
test
mov
ficomps
cli
xor
inc
fidivrl
aad
jb
xor
mov
inc
fists
in
out
pushf
inc
fmulp
mov
test
push
add
aas
and
inc
push
push
repnz
push
loope
mov
pop
sbb
and
jbe
jmp
cmp
enter
inc
sbb
mov
fcompl
mov
movsl
outsl
lret
lret
sarl
fistpll
adc
inc
push
inc
out
cld
dec
dec
bound
jno
mov
imul
sub
test
addr16
xchg
popl
inc
cmp
adcl
into
adc
add
shlb
mov
loope
push
push
or
jl
cs
xchg
pusha
sbb
sbb
daa
push
repnz
adc
push
adc
loope
sbb
das
inc
add
jb
or
scas
repnz
jmp
dec
pop
dec
adc
mov
push
pop
rep
sub
cld
int
int
push
test
xor
scas
sti
test
adc
or
sti
cld
mov
cmp
xor
inc
nop
pop
dec
subb
jbe
jo
popa
testb
pop
and
mov
xor
in
push
jecxz
aas
add
roll
mov
lock
jo
ret
push
sti
xchg
adc
leave
or
mov
in
pop
inc
sbb
insb
ljmp
ds
ja
bound
pop
stc
xchg
push
or
insl
and
mov
push
movsb
ss
inc
pop
sbb
pop
push
xchg
shl
jl
sbb
ss
xchg
and
mov
fsubrl
aaa
push
std
push
or
cmp
jb
adc
inc
ficoms
movsb
cmp
adc
mov
shrl
sub
out
bound
test
jns
or
and
lea
int
addl
add
in
dec
fs
mov
out
call
sbb
lods
pop
lcall
add
outsb
pmaddwd
lods
fcompl
pop
xchg
lcall
or
cmp
add
xor
cmpsl
jg
mov
leave
jns
negl
adc
pusha
xchg
adc
sbb
xor
idivb
loop
dec
mov
xchg
in
lock
mov
push
push
add
push
jbe
inc
fldcw
loope
aad
cltd
mov
sbb
pop
inc
nop
xor
jge
frstor
outsb
aad
lret
dec
xchg
pop
xchg
xchg
xor
lods
aaa
clc
iret
cmp
adc
inc
inc
ds
xchg
pop
sub
jo
fwait
xchg
xor
cmp
push
xchg
mov
inc
and
movsl
mov
jns
aam
fsubl
xchg
cmpsl
or
mov
mov
mulb
xchg
out
push
xor
mov
pushf
pop
or
call
inc
in
and
pusha
pop
out
pop
fninit
outsl
std
dec
dec
push
mov
dec
adc
ds
sub
push
add
je
sub
bound
xchg
add
dec
iret
fnstsw
movsb
sti
in
jmp
ja
jns
andl
ret
insl
shrl
rcrb
adc
push
leave
loop
imul
stc
das
sbb
rcl
ret
mov
punpcklwd
incb
push
and
push
les
mov
mov
mov
jg
push
lds
ret
daa
pop
jb
mov
or
rdpmc
mov
jp
addl
out
pop
imul
push
xchg
repnz
lock
cmp
xor
mov
idivb
or
cmp
stos
jg
or
sbb
test
ja
mov
dec
dec
mov
pop
outsb
pop
cmp
dec
cmc
cwtl
cmp
inc
and
aaa
push
test
aas
leave
into
xor
mov
jecxz
pop
clc
or
pushf
aam
xchg
xchg
mov
psubusw
xchg
or
lahf
test
dec
dec
cmpsb
jg
sti
mov
daa
or
mov
lods
or
xlat
ror
cld
xchg
sub
mov
int
fsubrl
scas
or
push
idiv
mov
out
inc
jmp
rcrb
mov
dec
push
pop
cmp
aas
aam
in
jp
inc
mov
fcompl
cmp
mov
adc
jo
movsl
test
movsl
sub
lret
aas
cld
xor
dec
ljmp
and
scas
add
cld
testl
ljmp
inc
clc
push
jno
aaa
movb
sub
je
ret
push
jns
test
push
pushf
push
lcall
sub
dec
adc
sbb
out
lret
push
dec
dec
dec
out
psubsb
lods
cmp
das
call
xor
cmp
repz
jno
shll
mov
rol
pop
ljmp
pop
scas
push
pop
rcl
xchg
in
lcall
out
jmp
hlt
cmpsb
imul
xor
imul
inc
mov
movsb
pop
sub
jno
loope
mov
js
add
add
inc
sti
pop
jae
mov
test
dec
cmpsb
cmp
std
and
pop
xchg
xchg
push
jae
out
pop
fsub
lds
push
or
add
mov
in
cld
lods
mov
or
sub
mov
or
cmp
in
mov
or
insl
sub
fisttpl
add
push
sahf
xor
jge
loopne
lret
ret
lods
jbe
scas
ja
fidivrl
insl
lret
lahf
cmp
leave
xchg
movsb
in
in
shl
adc
imul
fcmovnbe
aam
int3
mov
sub
mov
pop
movsb
sbb
mov
mov
sbb
xchg
loop
mov
and
inc
mov
jle
sub
jl
sbb
in
sbb
outsl
daa
cmp
push
fstps
jb
jecxz
inc
mov
cli
ret
fs
jo
jge
stc
aam
mov
pop
add
mov
lea
dec
xlat
fists
cs
dec
or
imull
test
mov
mov
mov
out
add
mov
push
sbb
fsubr
repnz
or
rcrb
in
fmuls
jo
xor
clc
jmp
shr
or
jecxz
xor
cmp
xchg
jb
mov
outsl
jnp
in
xorb
add
push
fldl
movsb
arpl
stos
mov
pusha
jae
stos
jmp
stos
adc
inc
movsl
in
mov
out
jl
cltd
aaa
movsb
xchg
push
mov
xor
sbbb
push
pop
insl
xor
mov
dec
jne
jae
cmp
fyl2x
and
lcall
and
push
mov
fadd
popl
mov
xor
push
in
or
jae,pn
dec
daa
mov
stc
sbb
scas
pop
jo
xor
push
loop
mov
dec
test
shl
icebp
int3
imul
fdivl
mov
inc
shlb
andl
imul
mov
jns
push
jg
mov
repnz
push
sub
mov
xchg
fs
lret
mov
gs
jae
data16
ljmp
adc
in
jb
push
add
aaa
ljmp
gs
icebp
xchg
in
out
pop
ret
jl
add
fiaddl
sahf
lock
adc
dec
in
mov
adcl
add
push
shr
out
loop
popf
ljmp
push
ret
jo
enter
mov
out
mov
sbb
jecxz
sbb
jns
mov
mov
mov
fidivl
sahf
jp
xor
or
add
out
int
not
sar
test
adc
lods
jae
cmc
nop
in
fnsave
sarl
sbb
loop
aas
and
push
jno
fisubrs
nop
lock
enter
cmpsb
jge
xchg
xchg
mov
lods
aad
loope
mov
repz
sub
mov
lods
dec
inc
fnstcw
sbb
in
adc
xchg
sbb
sub
insl
scas
and
xchg
mov
scas
insl
adc
clc
or
and
xchg
repz
pop
inc
inc
fsubrs
loopne
clc
sbb
ss
insl
and
iret
and
pop
mov
adcb
decb
mov
movsb
push
es
data16
jb
ficoml
pop
push
ds
mov
enter
hlt
mov
mov
xchg
dec
pop
mov
xor
ficoms
cmp
or
lahf
aam
sbb
sub
push
mov
push
jmp
jle
mov
sarb
pop
lods
pop
lea
call
test
cmp
cmp
int3
in
std
add
inc
xor
sub
and
test
adc
ds
cli
movsb
insl
mov
inc
cli
pop
je
xlat
ret
leave
imul
clc
std
inc
push
sub
and
in
sub
mov
mov
insb
and
dec
fisubrl
subl
mov
mov
stos
loop
pop
test
jns
fcompl
lea
lods
xor
inc
loopne
in
aaa
mov
jb
aam
ja
adc
mov
sbb
ret
lea
jl
movsb
cmp
mov
sbb
lds
stc
sbb
xchg
imul
mov
mov
pop
pop
pushf
outsl
jp
jne
stos
adc
dec
cmp
xor
mov
shrl
stc
mov
lcall
jmp
xchg
sub
or
cmp
fdivl
pop
mov
leave
and
stos
jecxz
loopne
stos
inc
lea
xlat
jns
sbb
pop
cmc
adc
rol
daa
mov
loop
stc
rcr
and
loop
dec
subb
jle
cld
mov
les
mov
adcb
fnstsw
aam
pop
pop
movsl
mov
dec
testb
loope
mov
xchg
cld
outsl
pop
mov
add
dec
cmp
sbb
pop
in
jae
shll
cltd
fidivs
out
lret
sub
cmp
bound
movsb
push
in
std
mov
inc
sub
xor
mov
push
jne
orl
sub
jnp
jo
add
and
pop
dec
sub
jne
or
out
subl
dec
sub
shll
xor
rorl
leave
mov
add
xchg
out
inc
dec
sbb
push
rcl
aas
repz
mov
sti
inc
push
mov
fdivr
pop
add
rolb
lret
xor
adc
mov
add
mov
sbb
mov
cmp
xor
jp
bnd
jnp
pop
xchg
or
scas
lods
imul
and
sbb
mov
mov
sub
neg
push
test
sti
xor
movsb
sub
iret
cmp
xlat
stos
inc
sbb
xor
xchg
xchg
sbb
fwait
dec
or
mov
lea
xchg
das
xchg
sub
sub
mov
mov
fldl2e
shlb
xor
lds
add
mov
lcall
and
pop
daa
lret
mov
mov
call
cmp
leave
out
das
sub
aad
inc
repnz
xor
lea
xchg
mul
cltd
jge
inc
loope
mov
push
inc
inc
sbb
call
dec
cwtl
sti
cmp
lea
sub
jbe
xchg
sbb
mov
daa
repnz
xor
mov
cmp
inc
pushf
out
add
das
cmp
lcall
stos
sub
lcall
push
fnstcw
xor
lret
int
and
subb
inc
out
cltd
out
rcrl
mov
outsb
sub
jmp
push
xchg
inc
in
xor
addr16
pop
jbe
lods
xlat
xor
or
repz
test
cld
test
jns
push
mov
mov
movsb
push
jg
push
jl
xor
lret
int3
cmp
inc
out
cmp
pop
es
sbb
fld
imull
cmp
lods
lahf
les
int
jl
jns
and
adc
ja
mov
jp
mov
push
lcall
cwtl
pop
ljmp
out
sbb
cmp
push
adc
fwait
cli
add
push
mov
push
test
pop
pop
insl
int
mov
ds
adc
ljmp
inc
inc
fsubrs
xchg
xchg
out
inc
dec
loop
xchg
je
aaa
xor
lcall
js
cmp
mov
jle
imul
adc
arpl
lret
jecxz
mov
repnz
pop
inc
mov
fwait
insl
stos
pop
dec
lcall
outsb
imul
pushl
xchg
sub
js
addl
sar
jo
sbb
push
test
pop
jle
lcall
push
and
xchg
and
adc
aam
shrb
jecxz
add
es
aam
push
jno
jno
mov
mov
xchg
pusha
mov
sarl
xchg
nop
pusha
mov
arpl
push
aas
test
jno
adcl
xorl
pop
jle
icebp
jo
sbbl
data16
lahf
notl
push
push
in
mov
loopne
test
cmpsb
cmp
popf
cwtl
push
lret
clc
jb
test
adc
xchg
test
adc
jp
add
int
sahf
adc
stos
jno
xor
repz
insl
fwait
stos
jp
xchg
dec
loop
xor
mov
imul
test
adc
mov
fbstp
xor
sub
jno
push
mov
lds
lahf
ss
xchg
test
push
cmpb
cmp
outsl
lret
shlb
popf
xor
sbb
jne
loopne
ficoml
scas
cld
lcall
push
in
lods
mov
and
dec
jecxz
and
jmp
jnp
sahf
xor
jnp
pusha
imull
cmpsl
out
xchg
mov
and
sbb
pop
cmp
jecxz
rcl
ja
push
xor
popa
das
xchg
add
rcrb
je
or
in
sub
testl
fwait
xor
enter
cmc
push
in
daa
and
dec
push
pop
mov
fldt
inc
loope
pop
pop
cmp
imul
lahf
movsb
or
icebp
mulb
mov
popa
push
inc
faddl
cmpsb
arpl
xlat
std
jge
xor
pop
jge
shrl
mov
test
lcall
cmp
test
lods
jnp
test
pushf
xor
int
mov
scas
test
popa
mov
fsubr
jg
into
stos
inc
add
cmp
cmp
les
pop
mov
mov
adcb
mov
fwait
xor
mov
push
mov
scas
inc
pop
lahf
adc
pop
icebp
xor
es
or
dec
loop
cmpsl
cmc
mov
mov
add
sti
mov
sub
out
cmpsb
sbb
jge
cmp
in
repz
ja
iret
cmp
jnp
lock
sub
lea
cltd
mov
lret
cli
mov
arpl
dec
or
addr16
lcall
pusha
leave
fdivl
ljmp
sbb
adc
lret
repz
arpl
cwtl
stc
nop
xor
pop
scas
addl
xor
aad
mov
ljmp
in
sub
aas
mov
test
xchg
insl
sti
int
sub
dec
nop
not
insb
es
gs
data16
xchg
imulb
mov
xor
pop
popf
in
xchg
and
lea
push
pop
repnz
lds
scas
inc
xchg
repnz
mov
mov
bound
mov
and
cmp
sub
push
xchg
icebp
push
in
and
fwait
xor
fs
cwtl
hlt
sbbl
addl
mov
mov
inc
add
pop
shlb
test
push
icebp
out
daa
jns
cmp
je
push
jmp
enter
dec
jmp
or
insb
mov
inc
fidivrs
fildl
mov
push
mov
pop
mov
outsl
addr16
popf
mov
test
das
jo
movsb
mov
dec
lock
mov
mov
cmp
rorb
movsl
jnp
icebp
mov
lock
stos
xlat
outsb
ficoml
addl
scas
xor
lahf
test
sbb
stc
ret
pusha
in
sbb
arpl
and
lea
call
lret
lcall
sbb
mov
pop
sahf
jmp
clc
xchg
aas
dec
loop
xchg
mov
sbb
mov
outsb
mov
icebp
jo
mov
and
inc
fldenv
js
add
jl
ja
lret
shrl
push
jae
pusha
mov
mov
in
in
addl
add
out
push
cmp
xchg
leave
pusha
imul
push
lock
je
mov
rcrl
cli
xchg
aad
gs
stc
inc
mov
pop
cmpsb
and
lret
cli
inc
testb
lods
push
movsl
loopne
jmp
mov
push
mov
in
test
cmp
imul
loop
mov
jge
add
or
inc
mov
xor
push
inc
aam
jns
out
xchg
insb
add
fnstsw
adc
jle
cld
xchg
xor
pop
cmc
adc
int3
arpl
pop
lock
push
adc
out
test
pusha
divl
mov
insl
adc
out
add
sbb
mov
out
xchg
inc
insb
add
pop
out
inc
test
arpl
shll
add
gs
jnp
dec
mov
mov
movl
ljmp
loope
or
jnp
mov
popf
xor
xchg
xchg
jp
ljmp
dec
loopne
ljmp
rcll
addr16
xchg
outsl
push
negb
sub
imul
js
aaa
into
rcrl
or
and
into
js
sti
xchg
ja
push
in
into
xchg
pop
ret
out
xchg
sub
and
outsl
xor
pop
xchg
dec
mov
fidivl
or
push
jmp
adc
pop
popf
push
insl
aas
addl
pop
or
ss
sbb
sbb
xlat
repz
adc
mov
mov
dec
fsubl
mov
ds
sbb
ds
sti
xchg
or
adc
ss
mov
inc
and
mov
adc
insl
das
push
inc
fdivrs
repz
sub
in
mov
add
mov
and
sbb
xor
pop
cmp
imul
addr16
in
mov
aam
cmp
pop
imul
loop,pt
movsl
cmp
cmp
test
xchg
ljmp
cmpsb
push
mov
mul
stos
jae
fidivrl
ja
push
cltd
xor
sbbl
mov
pop
sahf
imul
inc
jecxz
pop
sarb
jl
mov
rorl
jl
mov
nop
int3
cmp
loop
lock
mov
cmpsb
mov
fldt
adc
mov
mov
lea
mov
fnstenv
cld
shrl
hlt
pop
loop
lcall
adc
add
es
jb
jecxz
pop
jp
add
sub
push
sti
jns
stos
sbb
pop
dec
int3
pop
cli
insb
data16
cltd
sbb
push
dec
mov
pop
mov
ret
clc
pop
or
push
stos
das
loopne
testl
pop
and
mov
into
in
stos
ret
fcmovu
jno
das
mov
lds
and
dec
and
jge
stos
rorl
enter
push
lock
and
out
inc
fwait
xor
sub
inc
xchg
cmp
bound
rclb
mov
jbe
imul
or
mov
enter
rcll
mov
cmp
ss
add
orl
sbb
jge
shrb
bound
mov
fcmove
or
jmp
popa
push
stos
inc
mov
dec
out
xor
sahf
mov
testl
lea
gs
mov
inc
hlt
pop
mov
jno
pop
lea
std
jnp
out
mov
scas
test
hlt
stc
iret
push
mov
in
test
stos
inc
fcompl
mov
out
add
adc
add
or
mov
push
roll
pushl
and
loopne
shll
inc
ror
push
in
popf
xor
lods
les
adc
ljmp
pop
jecxz
arpl
cmp
or
dec
aas
mov
mov
inc
mov
scas
pop
push
daa
mov
sbb
mov
mov
mov
cmc
test
popf
mov
mov
stos
jb
int3
push
out
rolb
sub
insl
and
push
repz
xchg
pusha
out
sbb
jp
adc
negl
je
je
or
mov
call
pop
iret
jle
dec
mov
pop
fcoml
mov
jmp
addl
mov
repnz
or
rcrl
adc
jecxz
mov
push
mov
push
cmp
jb
daa
fstps
sub
push
mov
cmovbe
in
lea
lahf
jne
hlt
xor
adc
test
and
std
in
out
test
mov
push
or
stc
jmp
sub
jmp
test
fisubrs
imul
pop
into
cmp
dec
ret
popf
outsl
inc
mov
mov
pop
rcrl
sub
leave
movsl
es
out
dec
aad
and
cmp
fbstp
or
mov
lods
inc
push
adc
bound
sahf
push
pusha
jno
push
xchg
dec
and
shrl
mov
inc
and
int3
aaa
fs
outsl
inc
jae
push
xor
push
push
mov
inc
xchg
filds
data16
cmp
aas
in
inc
aas
push
push
popf
adc
xor
xor
dec
dec
fbstp
cltd
insb
dec
push
mov
jge
dec
imul
test
and
inc
lcall
jge
mov
cmc
loop
aad
xor
pop
sar
jnp
ds
mov
or
subb
rorb
imul
test
sub
dec
dec
push
or
sbb
cld
jne
fdivl
xor
xchg
outsl
mov
cli
mov
mov
mov
fistpl
orb
js
inc
sbb
sbb
lahf
fwait
mov
sub
dec
mov
lea
shlb
into
leave
sub
enter
fadd
rcll
scas
in
es
push
lock
gs
xor
pop
jmp
nop
add
enter
mov
push
jns
js
lods
mov
add
addb
loopne
mov
or
notb
inc
lret
scas
pop
dec
insb
std
inc
pop
testb
dec
dec
pop
lock
pop
mov
mov
sub
jbe
xchg
int
push
inc
fadd
push
cmp
and
mov
lret
cwtl
outsb
mov
rcl
dec
out
cltd
jle
sbb
mov
push
xor
jl
test
loopne
sub
jl
scas
xchg
jmp
or
mov
mov
loopne
mov
sbb
gs
push
add
xchg
ds
adc
pop
repnz
lret
xor
push
arpl
es
push
out
inc
out
data16
cmp
pushf
sub
push
stos
sbb
test
popf
mov
fstl
arpl
adc
dec
stos
add
adc
loopne
lahf
hlt
sub
fwait
adc
es
lock
sarb
cmpsb
mov
aaa
in
mov
lret
jne
jns
adc
xchg
push
xchg
mov
sub
lods
pop
out
test
dec
push
sbb
in
aaa
jecxz
std
mov
and
xlat
mov
sbb
fsubs
mov
jmp
or
dec
cltd
stos
xor
hlt
lock
enter
ljmp
and
stc
in
sbbl
mov
cld
and
cmc
sbb
adc
add
mov
jmp
add
jb
test
test
add
mov
mov
push
popf
popl
testl
jge
jge
clc
inc
fistpl
in
push
roll
add
fcompl
push
test
ret
fwait
push
sub
into
push
stos
rorb
dec
loop
ljmp
mov
ret
pop
sub
push
add
push
outsb
mov
clc
insb
popa
ret
inc
and
cmp
insb
dec
sbbb
push
mov
jg
xor
subl
inc
push
jge
shlb
pop
dec
inc
jecxz
mov
outsb
movups
dec
push
lds
jnp
test
sahf
xor
sbb
sub
push
in
pushf
mov
xor
in
push
mov
cmc
mov
add
dec
cmp
dec
sbb
and
pop
flds
test
vmovups
out
gs
cmp
mov
mov
jae
cmp
enter
fidivl
push
rcll
jp
mov
imul
sub
sub
xchg
mov
fbld
ret
aam
inc
int3
xchg
ja
fcoms
xor
xchg
mov
hlt
jns
ret
repz
ss
gs
or
ss
xchg
and
inc
xchg
mov
inc
or
insl
scas
jb
icebp
scas
mov
lea
leave
and
sub
icebp
sbb
dec
aam
pop
sbb
insl
mov
jecxz
xchg
mov
out
leave
aam
sub
adc
sbb
adc
and
inc
push
and
jne
jnp
dec
xchg
inc
ret
and
dec
rorl
std
inc
mov
mov
push
ret
and
sbb
xchg
push
or
shlb
xchg
loopne
mov
sbb
in
scas
ljmp
dec
jmp
in
mov
sti
and
shlb
xor
cli
jbe
fisubrs
fildl
add
iret
pop
xchg
inc
mov
push
jle
lods
dec
ss
scas
ds
add
jle
std
inc
pop
daa
jg
pop
jg
inc
dec
dec
fisttpll
dec
mov
movsb
inc
mov
das
mov
fwait
xor
fstpl
imul
push
jnp,pn
lcall
enter
ds
dec
pop
les
or
add
aaa
fnstcw
inc
lahf
add
cmp
jb
pop
adc
pop
test
xor
mov
shll
fs
fcmovbe
mov
aad
fsub
mov
xor
mulb
pusha
movsb
mov
adc
pop
adc
out
jae
or
shrl
imul
sti
xor
adc
fstl
xlat
mov
out
shrb
or
jb
add
imull
push
mov
jae
gs
cmp
jno
sbb
outsb
add
jb
sub
mov
pop
xor
sbb
imull
lock
mov
ret
sub
cmp
rcrb
jae
shll
out
lds
sub
mov
mov
fs
mov
loopne
lds
adc
xchg
cmpsl
je
and
lcall
xchg
smsw
ss
insl
leave
push
push
mov
jmp
dec
pop
pop
fwait
sbb
or
adc
idivb
sub
and
fstl
dec
into
bound
dec
test
push
mov
andb
scas
aam
cmp
call
mov
sub
lret
repnz
inc
mov
xor
push
mov
js
mov
repz
into
and
inc
inc
fnstcw
cld
and
rcl
sub
mov
inc
cltd
mov
in
jle
mov
add
out
cwtl
mov
adc
fcomp
pop
shl
ficomps
leave
jecxz
add
fildl
shr
add
lods
mov
fucomip
adc
fdivr
mov
xor
adc
xchg
clc
cs
enter
push
aam
arpl
cmc
daa
fdivl
add
xchg
std
scas
jne
pop
pop
rcll
cmp
test
sbb
xchg
cmp
mov
imul
mov
mov
cltd
daa
or
test
pop
cli
cwtl
in
rorl
daa
mov
mov
jno
dec
ljmp
shlb
out
xchg
xchg
mov
push
jg
pop
dec
aas
icebp
push
pop
fmuls
push
or
xor
pop
jp
bound
dec
lds
addl
bound
mov
sub
jnp
jne
cmp
xor
dec
lds
sbb
das
ret
nop
jb
pop
cmp
adc
mov
call
jb
pusha
lret
out
andl
negl
rorb
out
aaa
jp
dec
xchg
pop
lret
push
pop
pop
scas
push
mov
mov
out
and
movsb
sbb
dec
movsl
nop
sahf
dec
mov
push
push
jmp
bound
popa
or
mov
dec
je
push
das
es
dec
inc
cmpb
adc
xor
lock
ss
xchg
inc
ffree
loop
mov
jp
daa
leave
loopne
stc
cld
ljmp
repz
pop
and
inc
jnp
insl
mov
jb
mov
rorl
loop
cmc
mov
ljmp
jno
sub
lcall
mov
jno
mov
inc
outsb
dec
in
arpl
xor
sub
add
rorl
xor
je
inc
mov
out
and
ss
fsubrs
sub
dec
cmp
leave
imul
lcall
adc
fsubl
inc
leave
mov
imul
lret
push
out
arpl
or
int3
inc
jbe
pop
repnz
inc
xor
push
push
imul
pop
dec
rorl
test
cmp
mov
adc
mov
jecxz
mov
and
daa
mov
jp
hlt
rcrb
rcl
jp
mov
inc
lods
mov
fs
xor
and
mov
test
shrl
data16
loopne
mov
fcoml
hlt
fnstenv
testb
adc
aaa
and
test
imul
jnp
cltd
xor
repz
fcoms
sbb
cmpl
rorb
out
mov
daa
test
mov
aam
inc
lea
mov
dec
mov
push
sbb
wbinvd
sbb
xchg
pop
adc
ss
and
adc
cmp
out
dec
out
xlat
dec
repnz
mov
scas
inc
mov
fidivrs
mov
lret
iret
mov
sti
sub
icebp
fbstp
sbb
mov
clc
or
into
sbb
in
xor
xor
mov
ja
xchg
gs
fsubs
nop
mov
aaa
or
pop
mov
loopne
or
sub
fcomps
call
ret
xlat
cmp
sti
mov
push
rcl
je
call
or
mov
push
prefetch
pop
into
push
mov
fidivs
ret
pop
mov
popf
rcr
push
lret
add
test
in
ljmp
dec
fldl
and
add
test
loop
aaa
cli
pop
lret
xlat
inc
dec
mov
mov
mov
sbb
scas
nop
jno
pop
inc
add
mov
push
cmpsb
sub
add
xchg
push
movsl
sub
jp
orl
stos
cmp
mov
js
push
aam
dec
pop
adc
mov
std
sub
adc
push
data16
push
inc
pop
insb
pushf
bound
jno
sub
mov
xchg
dec
adc
xchg
dec
lods
push
pop
dec
out
jbe
divl
xchg
cmp
adc
adcb
adc
push
aaa
sbbl
adc
add
lea
lret
divl
jnp
inc
mov
push
es
shll
xchg
daa
aaa
cli
xchg
lcall
es
mov
mov
adc
sub
and
adc
xchg
rorl
sti
push
and
js
insb
ds
lea
lcall
push
xchg
mov
jmp
add
mov
int
pop
lock
test
mov
mov
repnz
int3
jb
mov
fdivrl
ljmp
insb
sti
jnp
cmp
mov
or
ret
mov
xor
jle
push
cmp
jae
pop
movsl
push
mov
push
into
inc
mov
fstps
out
arpl
mov
icebp
movsl
lds
loope
sbb
test
repnz
mov
stos
or
xchg
mov
mov
push
iret
pusha
mov
ficoml
or
lret
push
mov
mov
pop
imul
repz
sarb
fsts
push
mov
inc
dec
test
testb
xchg
mov
nop
jbe
mov
test
lret
out
jl
out
cmpsl
jbe
cld
dec
daa
fsts
imul
js
adc
mov
in
mov
ret
shll
aam
jecxz
xlat
lds
and
sbb
out
std
xchg
mov
jecxz
mov
dec
mov
inc
mov
mov
xlat
dec
xchg
repnz
inc
cmp
stc
xor
xchg
adc
es
dec
jbe
adcb
mov
pop
add
dec
cmpsl
pop
insl
popf
insb
out
ja
and
push
adc
and
mov
shrl
shrb
bound
mov
popf
sbbb
js
cmp
mov
jne
cltd
xor
loopne
xchg
in
cltd
cmpb
push
mov
mov
vpsubsb
xchg
aam
pushf
jbe
rorl
sub
push
in
adc
fcmovb
movsl
sub
daa
shlb
shll
and
sub
mov
fists
rolb
aam
mov
icebp
mov
mov
loope
loop
pop
xchg
pop
push
loop
stos
add
test
sbb
lods
pop
sbb
xchg
xchg
xchg
adcb
push
push
pop
shlb
cmc
and
out
hlt
mov
loope
les
scas
fs
jnp
sub
mov
jg
repnz
or
enter
sar
xchg
add
daa
pusha
mov
add
push
mov
push
ljmp
mov
outsb
cltd
jmp
jmp
movsb
or
scas
jl
pop
int3
xchg
pop
leave
pop
pop
xor
mov
das
jp
test
ss
andl
mov
or
aad
sub
xchg
jb
cmp
lahf
cmp
mov
or
fs
cs
xchg
add
mov
adc
cltd
pop
jge
inc
mov
xlat
dec
inc
orl
push
mov
dec
jl
push
dec
pop
mov
or
add
xor
inc
fsubrs
pop
fmull
dec
push
mov
insl
dec
push
enter
imul
jp
xor
imul
mov
popf
push
cmc
mov
mov
sbb
cltd
mov
sti
push
ljmp
xor
sbb
fdivrl
lods
xchg
sub
daa
in
jl
dec
addr16
dec
loope
push
rcrb
cmpsl
rcrl
push
hlt
cmc
sbb
pop
inc
shll
into
and
sbb
ds
js
sub
lcall
int3
test
repnz
pop
bts
and
lret
jmp
inc
shlb
fcomps
lods
fs
mov
mov
cmpl
lret
int
dec
xor
fbstp
jle
pop
outsl
aas
les
roll
clc
jmp
mov
xchg
scas
sbb
add
mov
jg
push
add
inc
xor
jge
push
repnz
push
pushf
xor
push
icebp
sub
jno
inc
dec
sub
pop
pop
test
push
jl
movsl
cmp
subl
imul
out
iret
add
mov
push
pop
jmp
and
or
movsl
mov
add
mov
push
add
add
ret
and
sub
sbb
stos
jg
push
dec
cli
cmp
sub
jae
dec
int
pop
and
push
test
lahf
insl
mov
out
and
dec
in
cmp
outsl
jecxz
xor
data16
or
cmp
xchg
cwtl
add
push
in
xor
jmp
test
sub
push
jmp
fs
gs
cmp
inc
push
pop
movsl
popa
dec
lar
push
mov
movsb
test
negb
popa
fwait
fwait
mov
lock
jo
test
out
gs
push
insl
lahf
popf
lret
adc
fisttps
xchg
es
jne
sub
fisttpl
push
jmp
ds
fstpl
stos
pop
xor
mov
add
or
adc
or
jbe
push
popf
aaa
xchg
xchg
outsl
or
xchg
les
ss
dec
mov
sub
xchg
out
sbb
cmp
push
mov
fdivrp
sub
jmp
cmp
fcomps
std
dec
dec
xor
outsb
dec
sbb
jo
das
jecxz
aaa
icebp
dec
test
or
jg
les
mov
or
pushf
sarl
popf
mov
mov
out
push
mov
add
or
test
cmp
push
mov
pop
sahf
add
cmpsl
pop
out
cmp
xchg
mov
outsb
and
fsubl
out
jmp
gs
fadd
xchg
in
je
lret
adc
icebp
es
adc
nop
mov
insb
testl
sti
and
hlt
aam
mov
in
and
icebp
mov
shr
inc
mov
das
divb
mov
or
pop
push
jmp
lret
filds
push
and
shl
je
stc
xor
adc
and
and
and
ljmp
gs
aam
jl
inc
ret
adc
leave
pusha
pop
jbe
xlat
outsl
jge
pop
pusha
inc
sub
inc
and
push
mulb
cltd
xor
jge
es
jmp
je
mov
out
in
and
mov
adc
enter
aam
pop
lds
in
loopne
pop
fstps
add
dec
mov
push
shr
jg
pusha
xchg
xchg
pop
in
mov
addr16
ds
fcmovb
jnp
push
lods
cmp
mov
fnstcw
sub
or
mov
lahf
add
adc
cltd
cld
dec
fistpll
in
push
pop
mov
add
xor
leave
mov
movsb
sbb
dec
popf
popf
addb
cmp
mov
leave
insb
pop
ds
sub
insl
cmp
add
mov
cwtl
nop
pop
add
sbb
xor
shrb
add
pop
pop
stos
addl
call
lds
lcall
cmp
enter
arpl
or
jg
inc
lock
sub
mov
xor
jb
sub
test
jb
insb
movb
jecxz
adcb
pop
push
lds
pop
lret
and
push
outsb
jmp
fnsave
adc
dec
mov
lods
je
stos
fs
adc
inc
gs
push
mov
mov
rcrl
les
pop
mov
fisubrl
or
or
sub
negl
inc
movsl
bound
divb
xchg
mov
xchg
jmp
js
shlb
dec
sahf
mov
out
test
jl
mov
andb
jno
sahf
dec
cltd
ja
dec
jp
fdivr
xor
fdivrp
xchg
adc
loopne
out
jmp
xorb
popa
add
sbb
pop
push
and
es
aad
pop
mov
ret
stc
int
sbb
mov
loope
mov
push
imull
sbb
dec
sahf
or
inc
adc
xchg
cmp
mov
jl
and
sarl
fstpl
into
fnstenv
fidivl
lret
popl
cwtl
pushf
jne
mov
jnp
fimull
gs
mov
pop
arpl
jnp
adc
das
cmp
pushf
rcll
fsub
or
pop
xchg
mov
out
rorl
repnz
add
adc
add
sbb
or
push
sahf
lret
loope
mov
mov
jmp
push
sbb
cmp
aad
or
fiaddl
fwait
je
dec
cmp
outsb
adc
ljmp
cmp
dec
cmpl
das
movsl
dec
aaa
into
jg
mov
clc
mov
aad
dec
bnd
and
repz
rclb
icebp
cwtl
scas
inc
lret
movl
dec
in
ds
jo
insb
add
xchg
or
cmp
daa
mov
nop
xor
pop
jecxz
arpl
mov
flds
fwait
mov
ss
stos
and
jno
shlb
push
jnp
test
test
mov
loope
mov
or
push
les
lahf
cmc
daa
and
xchg
sahf
xor
stc
sub
lret
bound
mov
fiadds
or
push
scas
popf
popf
scas
inc
iret
mov
int
and
push
jmp
inc
jmp
jmp
or
mov
fs
test
mov
addr16
cwtl
mov
sbb
es
in
cmp
pop
je
stc
insl
add
scas
push
jmp
jnp
jo
jnp
jmp
gs
push
pop
sahf
xchg
in
sbbl
and
loope
testb
daa
or
inc
fnstsw
lock
movsb
scas
adcb
testb
jbe
cli
xchg
shrl
pushf
loop
out
sub
dec
out
dec
jbe
and
insl
fmul
aam
std
stc
dec
out
push
push
mov
fisubs
and
push
outsb
loop
cmp
mov
das
scas
shrl
and
lock
sbb
ljmp
nop
addr16
mov
inc
movsl
out
test
mov
ss
stos
addb
vmovq
xchg
push
inc
xor
out
push
cmpsl
pop
outsb
jmp
cmp
hlt
inc
sub
inc
test
imulb
fdiv
lcall
hlt
dec
outsb
or
stos
sahf
jns
add
cmp
mov
pop
inc
movsb
inc
sbb
dec
dec
xor
jge
das
iret
cmc
les
adc
lret
sbb
mov
inc
mov
cmc
xchg
inc
aad
jg
dec
push
cmp
jae
sub
jp
popa
sub
incb
int
mov
ss
cmpsb
cmp
sahf
stos
ja
cwtl
jae
xor
test
pop
loop
and
lock
push
decl
lahf
mov
pushf
lods
je
mov
imul
rcr
adc
sti
mov
pop
int3
imul
daa
scas
cmp
and
dec
es
xor
push
jp
xor
push
xchg
cmp
sbb
fwait
add
xchg
aas
sbb
nop
sbb
roll
fsts
lock
shrl
aam
in
or
xchg
addb
pop
xor
jl
push
sub
add
mov
rolb
lods
or
testb
or
imul
jbe
mov
lods
aas
dec
or
mov
mov
clc
nop
inc
popa
mull
es
adc
gs
mov
inc
mov
adc
sub
lods
fisubl
adc
sbb
sub
or
aas
xor
mov
or
ja
and
shrl
aaa
dec
add
clc
adc
insb
xchg
or
pop
nop
mov
ds
jg
enter
out
mov
mov
xchg
or
ret
cmc
and
pop
sub
dec
jecxz
or
icebp
icebp
push
sub
inc
insb
adc
iret
call
lock
out
mov
jle
xchg
call
mov
cmp
sbb
dec
adc
inc
pop
dec
in
loope
sub
fidivs
gs
shlb
sahf
ja
pushf
xor
and
stc
xchg
sub
pushf
mov
test
inc
fldcw
dec
dec
jecxz
fiadds
xchg
iret
loop
icebp
rcl
fidivl
into
rclb
inc
fcmovne
fisttps
movsl
rcl
xchg
sub
rcr
bswap
filds
cltd
rcl
jb
ret
iret
clc
pop
fisubrs
loopne
popf
adc
mov
and
and
fs
test
xchg
inc
adc
shrl
stos
in
or
pop
not
imul
dec
les
add
imul
pop
enter
lock
xchg
data16
mov
in
push
aad
mov
pop
nop
popf
cmpsb
push
decl
les
jns
add
cli
addr16
sar
out
pop
mov
jmp
pop
aam
mov
xchg
pushf
daa
xlat
jg
lds
idivl
popf
scas
adc
and
loope
or
xchg
bnd
out
les
leave
add
mov
xchg
into
push
cli
jae
mov
pop
cli
xlat
or
pushf
jmp
negb
popf
inc
inc
mov
scas
cltd
enter
leave
xor
negl
mov
ffree
insl
repz
xchg
ret
jp
add
nop
sar
arpl
mov
insb
hlt
dec
mov
decl
fists
mov
pop
stos
das
cmpsl
inc
xor
mov
mov
jmp
pop
cmp
mov
xor
sub
or
sarb
sbb
adc
mov
cmp
sub
mov
mov
popf
mov
stos
pusha
ljmp
adc
xlat
sub
mov
cmp
mov
mov
lods
pusha
ljmp
xchg
cmp
xor
rorb
ljmp
scas
push
fs
mov
or
test
inc
or
pop
pop
add
pushf
cmp
jl
inc
aaa
popa
or
pop
sbb
xchg
adc
push
pop
shll
or
sbb
cmp
sbb
dec
adc
mov
scas
add
movsb
adc
mov
addl
sub
ja
nop
cmp
popa
pop
add
aaa
js
sub
and
popf
xchg
filds
js
fwait
inc
push
xorb
push
add
shrb
pop
mov
sbb
dec
mov
sub
nop
aas
int
sahf
cmp
movsl
dec
call
sbb
imul
mov
lret
xor
sub
xchg
stos
sub
mov
sbb
jg
jle
mov
clc
pop
inc
stos
cmp
cmp
cmp
enter
jp
test
clc
fs
mov
jnp
inc
test
lods
sub
push
test
sbb
mov
mov
adc
xchg
push
pop
push
scas
xchg
pop
mov
xor
cmp
jb
lods
shrb
sarl
cmpsb
xchg
aam
mov
push
adc
mov
mov
out
jg
mov
cmc
cmp
dec
or
xchg
lds
push
mov
push
clc
cs
cltd
bound
rcl
jp
mov
push
xchg
cmp
cli
pop
cmp
and
ss
enter
or
mov
mov
dec
pop
ret
push
cs
out
lods
daa
das
cld
roll
push
nop
inc
or
dec
or
push
mov
insb
fdivl
or
xor
mov
arpl
pop
sti
aad
add
cmp
pop
mov
out
mov
xchg
xorl
scas
sub
fdivrs
jl
or
adcl
add
imul
mov
imul
push
fwait
cmp
popa
dec
or
out
mov
ljmp
inc
sub
cwtl
mov
or
hlt
fmul
mov
in
dec
or
out
mov
aad
or
cmp
out
push
cmpl
or
dec
or
pushw
mov
int
mov
adc
sub
xorl
test
cvtpi2ps
pop
xor
adc
jg
push
adc
jne
dec
push
add
daa
sbb
cmp
adc
push
cmp
mov
push
add
mov
mov
xchg
inc
mov
mov
xor
sbb
jbe
lret
mov
gs
aas
mov
jbe
mov
jp
pusha
mov
inc
pop
popf
cmp
loopne
inc
push
cmp
and
mov
jbe
xor
xor
popf
xor
sbb
js
sbb
xchg
sahf
fiadds
and
scas
sbb
fidivl
or
add
inc
or
push
sub
push
pop
lods
xor
cmp
jo
pop
into
daa
bound
mov
cmp
test
pop
arpl
test
or
push
aad
dec
sub
jmp
sub
sarl
pop
add
mov
pushf
inc
and
ja
xor
shll
nop
cmp
add
ja
push
push
clc
nop
and
pop
jno
jae
and
mov
jae
mov
or
mov
adc
or
or
aas
stc
pop
repz
and
and
cs
outsl
inc
cmp
adc
lret
cmp
and
iret
xchg
xor
scas
ret
iret
mov
fs
xchg
push
mov
pop
nop
pop
cmp
stos
xor
mov
stc
imul
push
sbb
xchg
cmp
sbb
lret
push
rorl
or
fs
call
ljmp
sub
xchg
sbb
test
test
jecxz
loopne
mov
insl
mov
scas
add
mov
pop
add
jg
sbb
into
xchg
adc
mov
imul
outsb
adc
inc
push
sti
cs
clc
fs
pop
aaa
cltd
out
cmc
pop
jns
hlt
pop
sub
cmp
jp
int
bound
pushf
in
cmp
subl
insl
push
cli
out
dec
gs
sub
popf
cmp
xor
stos
sub
sbbl
pop
out
insl
push
adc
cmp
mov
sbb
popf
popa
and
dec
jl
movsl
jno
mov
in
push
pop
fstpt
mov
daa
cmpsl
xor
pop
cld
pop
or
cmp
and
mov
xor
in
insl
and
inc
sub
ficoms
std
pop
sub
cld
pop
and
xor
scas
jne
sub
lods
lods
fildl
mov
into
mov
cmp
fistpll
nop
jl
sbb
inc
in
mov
movsb
cmp
mov
aad
xchg
test
call
and
test
popa
hlt
pop
mov
sahf
xchg
iret
or
lds
pop
xchg
subl
jl
sbb
and
mov
ror
ret
or
pushf
adc
pop
aad
call
outsb
jp
mov
xchg
lods
sub
clc
pop
fnsave
pop
dec
add
xchg
movsl
xchg
mov
out
insl
inc
in
push
jae
fs
out
icebp
push
jecxz
negl
push
mov
frstor
sub
fdivrs
movsl
mov
mov
repz
das
negb
push
sub
adc
jo
push
inc
int3
popl
ss
and
lds
cmp
into
stos
int3
and
adc
inc
mov
enter
push
in
cmpb
mov
mov
inc
adc
mov
into
mov
xlat
cld
pop
andb
popa
fstpl
mov
mov
inc
fdivrl
loopne
outsb
push
popf
cmp
mov
jo
mov
mov
aaa
dec
add
lahf
and
lea
xchg
xchg
sbb
xchg
cmp
pop
clc
sub
cmpsb
fdivrs
pushf
cmp
rcrb
icebp
imul
insl
cmp
adcb
stos
hlt
mov
aaa
scas
cmp
add
jecxz
xchg
cmp
hlt
xchg
cmp
sub
inc
inc
push
mov
add
jmp
push
clc
in
mov
adc
and
sbb
pop
add
dec
and
pop
lock
lea
popf
sub
xor
ret
out
xchg
xchg
aam
stos
cltd
and
into
cli
push
es
push
test
jnp
xlat
adc
addr16
lods
loopne
lahf
cmp
pushaw
bound
push
adc
sub
cmp
and
xor
xchg
or
push
push
sbb
mov
push
inc
xchg
inc
out
pop
dec
push
jbe
fdivrl
insl
cmpsl
xor
loop
sbb
jbe
jle
adc
adc
adc
dec
cmpsb
xor
jo
subl
leave
mov
bswap
add
and
ret
jne
and
cmp
lods
mov
ds
stc
pop
mov
cmpsb
mov
push
sub
xor
mov
mov
push
inc
sub
popf
add
out
mov
cmovns
cmpsb
pusha
mov
mov
hlt
sbb
dec
pop
mov
loopne
dec
adc
icebp
pop
add
or
sarb
popa
push
sbb
fiadds
xchg
adc
xchg
jge
cs
jl
cmp
dec
mov
nop
xor
and
shrl
or
repz
in
dec
or
inc
cmovl
add
shr
insb
fldenv
push
leave
outsl
add
fnstenv
add
fistpll
pop
sub
stos
cmp
loope
arpl
push
lret
repz
pop
jns
inc
hlt
lods
daa
leave
fwait
adc
imul
shlb
pop
pop
icebp
mov
fidivl
jge
imul
in
shlb
mov
mov
xchg
outsb
push
ret
push
push
mov
inc
scas
xor
repz
xchg
das
scas
mov
es
mov
add
xchg
dec
or
mov
outsb
orb
and
xchg
addr16
push
rclb
ret
int
mov
pop
sbb
mov
pop
mov
xchg
inc
ficoms
mov
or
push
test
mov
out
push
fldt
pop
repnz
in
je
add
das
xor
scas
xchg
dec
adc
fnstenv
xor
fisubs
popf
inc
and
dec
adc
xor
pop
jp
push
leave
adc
addr16
push
leave
pop
add
bnd
addr16
push
cmpb
jmp
mov
inc
in
mov
lahf
jle
insl
scas
pusha
icebp
fwait
jne
inc
mov
mov
xchg
stos
inc
bswap
lret
pop
mov
mov
ret
xchg
subl
adc
shrl
add
nop
xor
rorl
mov
dec
mov
sarl
mov
xchg
cmp
adc
test
push
dec
mov
mov
mov
popf
cmp
loope
js
cmp
test
jns
jb
mov
shlb
sti
cmp
mov
mov
stos
adc
push
mov
inc
or
push
push
push
je
iret
lea
outsl
ljmp
data16
rolb
mov
out
out
scas
push
add
hlt
lcall
clc
cmpsb
xor
push
mull
out
pop
mov
test
fwait
cmp
fnstenv
jl
hlt
add
cmpsl
xor
sub
lahf
cmp
mov
xchg
inc
lret
pop
cltd
ds
push
dec
or
in
scas
cmp
cmpsl
ficomps
jp
push
test
out
push
loope
scas
daa
jbe
mov
test
je
enter
imul
js
xor
xor
push
divl
cmpsb
cltd
inc
and
aaa
imul
jne
cwtl
push
gs
add
mov
mov
js
shrl
enter
sarb
stos
mov
adc
fistpll
jp
imul
jge
xchg
adc
leave
dec
into
stos
daa
or
pop
ret
stc
push
add
mov
sub
mull
pop
mov
add
sahf
cmp
mov
push
pop
orl
leave
mov
shlb
mov
test
pop
stc
push
cmp
jae
pop
jmp
jno
or
jo
out
mov
fwait
cmp
push
and
scas
mov
lods
test
dec
loope
lret
mov
std
pop
or
pop
out
in
call
cli
fiaddl
cmp
mov
std
je
sahf
inc
and
sbb
mov
mov
cmp
inc
or
hlt
sub
mov
imul
pushf
fdivrl
jg
data16
or
int
push
cli
pop
cmp
pop
mov
jecxz,pn
pusha
xor
pop
or
mov
xor
popa
add
mov
mov
ret
mov
pop
inc
pop
decl
fs
cld
in
sub
sub
cmp
inc
xor
subl
sbb
test
xchg
cmp
add
ret
mov
rclb
pop
hlt
mov
in
pop
or
aaa
mov
nop
cmp
pop
dec
adc
mov
mov
cmp
jecxz
jmp
shrb
or
cmc
cmp
shlb
stos
sub
je
mov
cmc
lods
mov
test
sub
aam
imul
insl
arpl
jo
pop
je
in
push
insb
int
lahf
scas
icebp
mov
shrb
and
adc
movsl
xor
cmp
pmullw
das
loopne
mov
lods
arpl
mov
pushf
inc
cltd
mov
insl
mulb
lret
jae
xlat
and
cmp
mov
test
je
les
jmp
in
shrd
cmpsb
daa
adc
adc
inc
add
jmp
cmc
push
in
decl
sti
cli
std
pop
mov
int
pop
fbstp
in
cs
mov
sub
cmp
pop
add
xchg
fsin
pop
xor
mov
inc
sub
sub
push
cld
pop
insb
ja
mov
and
pop
in
jge
sub
or
mov
mov
push
icebp
dec
dec
btr
add
fdivr
pop
pop
mov
pop
jmp
sbb
xor
int3
adc
mov
and
outsl
mov
scas
and
and
xor
jl
lret
insb
in
lds
dec
pop
and
push
rolb
ljmp
jbe
jecxz
js
daa
push
mov
clc
pop
cmc
popa
dec
call
rcll
imul
jle
mov
add
rcrl
sub
subl
xchg
bound
pop
pushl
cwtl
lret
out
and
lods
loopne
rorb
xchg
pop
leave
arpl
xchg
ja
sub
mov
in
or
aas
pushf
mov
mov
test
mov
pusha
daa
scas
popa
inc
inc
fdivl
push
jmp
dec
rcl
js
lcall
jo
les
pop
cmp
mov
nop
cmp
cmp
hlt
pop
ja
dec
adc
sahf
mov
add
or
lds
lahf
mov
test
lret
lcall
push
mov
lret
or
pusha
sbb
mov
or
test
mov
pop
mulb
cmp
pop
and
daa
test
aas
ja
adc
adc
add
fucomp
insb
mov
cmpsb
outsl
out
or
mov
fxch
sub
ds
mov
loopne
jmp
xchg
aaa
mov
sub
mov
stos
adc
aam
jecxz
adc
dec
fs
push
xchg
cmc
gs
call
inc
jmp
insl
call
imul
les
pushf
cwtl
xchg
inc
push
ret
jp
pop
nop
adcb
sbb
dec
in
pop
lahf
fwait
pop
add
into
loope
mov
scas
fadds
in
cmpsl
shr
fadds
and
aam
daa
sbb
and
daa
loop
ret
xchg
jno
pop
clc
clc
imul
adc
mov
xlat
sbb
xchg
fildl
xchg
add
mov
fstps
iret
pop
mov
dec
repz
popf
push
in
mov
pop
loope
mov
loopne
cmp
push
clc
pusha
out
adc
aad
std
fwait
inc
mov
jge
xor
push
in
dec
add
jg
lahf
fadds
loop
push
stc
sub
push
sti
leave
cmp
xchg
sbb
sarl
int3
xchg
aaa
enter
and
mov
mov
sub
fcomps
mov
mov
mov
xchg
mov
mov
jmp
sbbl
cmp
rorl
fcoml
mov
push
repz
adc
fisubrs
mov
jg
mov
cmpsb
pop
add
pushf
inc
xor
jno
enter
push
add
fisttpl
jecxz
int
lret
add
fstl
into
jo
mov
mov
mov
cmp
lock
sbb
imul
add
divb
inc
jecxz
adc
jecxz
mov
test
enter
rcrb
ss
xchg
sahf
loope
and
scas
fdivrs
data16
cmp
pop
mov
add
sbb
push
pop
cmp
mov
jge
mov
xchg
shrb
enter
int
out
push
jle
repz
mov
cld
popa
je
fsubs
call
xchg
out
dec
or
add
mov
movsb
mulb
sbb
clc
adc
mov
popf
fdivl
lds
std
mov
fnsave
lods
divb
scas
jo
ja
inc
adc
enter
in
ss
sub
pop
cmp
jl
lea
movsl
mov
sbb
fs
mov
pop
jp
gs
insb
pmullw
je
and
test
add
pop
add
sti
fadds
dec
adc
loop
jp
and
mov
imul
nop
cmp
ficomps
dec
addb
xchg
rcrb
xchg
lods
fsubl
inc
rcl
dec
xchg
mov
lods
xchg
mov
das
mov
or
lds
mov
dec
sub
pushf
aas
jecxz
movsb
daa
pop
clc
in
mov
stos
mov
sub
lea
loopne
fidivl
popf
adc
adc
cmc
pop
mov
test
mov
movl
imul
and
psllq
int3
nop
in
mov
popf
adc
lret
add
pop
incl
adc
and
insl
repnz
xor
jno
xchg
jmp
add
lock
addr16
mov
jns
and
sbb
dec
pop
mov
pop
loope
sub
fdivrs
adc
add
imul
pop
imul
jmp
mov
adc
inc
insl
ljmp
test
mov
imul
mov
int3
cmp
loope
pop
and
inc
or
inc
fmull
lods
pop
mov
sbb
rorb
inc
jo
shlb
out
insb
adc
sub
jle
cmp
xchg
stos
push
and
sbb
dec
aad
iret
shlb
icebp
and
mov
out
jge
push
arpl
iret
xchg
aas
dec
jecxz
cmp
repnz
mov
mov
cmpsl
add
xor
int
fadds
xor
dec
jb
add
xchg
addb
sub
xchg
in
push
aad
adc
xchg
lods
lret
addb
test
stc
cmp
js
pop
shll
or
and
aas
mov
add
ljmp
outsb
lock
testl
pusha
mov
loopne
pushf
inc
leave
dec
fs
cs
fsubs
std
iret
mov
stos
orl
mov
dec
cmpsb
jmp
jno
and
jp
dec
std
jmp
orl
mov
iret
mov
mov
in
jnp
push
inc
decb
mov
sbb
cltd
int3
dec
fwait
cmp
adc
ds
test
mov
push
dec
sub
push
popa
adc
roll
jae
jecxz
mov
cld
mov
push
sbb
mov
xchg
jg
test
mov
sbb
adc
and
jmp
pop
imul
xchg
adc
jmp
xor
dec
hlt
pop
adc
push
cli
pop
inc
dec
adc
mov
jno
pop
add
push
stc
in
fwait
sbb
xchg
stc
cltd
inc
fadd
jnp
jb
mov
movsl
pushw
rolb
or
cltd
push
xchg
iret
stos
sub
fmul
mov
mov
sarl
sub
lret
mov
pop
sti
gs
insb
jmp
repz
mov
xchg
push
ds
out
insl
fnstsw
hlt
mov
mov
sub
out
jle
push
mov
ret
mov
mov
jecxz
add
sub
ret
mov
popf
sub
adc
scas
cmc
pop
adc
in
adc
dec
loopne
stc
sub
ja
loope
push
in
out
push
sub
outsl
fidivs
dec
mov
mov
inc
push
lds
test
sbb
mov
sub
rclb
push
arpl
cmp
iret
xchg
daa
je
xchg
adc
xchg
inc
mov
iret
xor
push
cld
dec
pop
test
out
imul
aam
jecxz
adc
loop
mov
cmpsb
sub
mov
cmp
dec
in
outsl
les
iret
fstl
adc
pop
or
lea
cmp
ss
or
cmp
sub
or
pop
jns
fistpll
jo
sti
pop
mov
fnstsw
pop
stc
or
testb
daa
add
inc
adc
xor
scas
adc
mov
inc
adc
ja
or
jecxz
mov
mov
push
add
sbb
sub
mov
lods
sub
jno
nop
mov
hlt
pop
scas
and
ss
scas
ret
out
adc
pop
mov
mov
cmc
lcall
sbb
or
sbb
in
sbb
push
sti
inc
out
out
rcll
loopne
loopne
ss
out
lret
je
and
loope
jl
jmp
sub
cmp
aad
mov
fildll
mov
push
test
dec
outsl
xor
inc
cmc
mov
ja
xor
sub
adcb
das
mov
lcall
pop
icebp
maskmovdqu
imull
and
and
aas
push
imull
dec
test
jecxz
add
sub
bswap
mov
inc
adc
mov
gs
and
inc
xchg
aas
mov
sarl
mov
push
jecxz
arpl
repz
jno
push
push
stc
outsb
mov
or
and
cmp
xchg
pop
add
xchg
push
addr16
pop
push
mov
mov
mov
cmp
in
lahf
aaa
xor
pop
subl
mov
fidivs
adc
fsubrs
rcll
add
push
stc
in
arpl
shrl
mov
jnp
or
dec
mov
lock
int
mov
adc
mov
dec
ret
xchg
fwait
mov
sbb
jae
fldt
and
pop
xchg
cmp
dec
push
jo
sub
dec
data16
push
sbb
lahf
jge
aas
addr16
push
sti
test
mov
and
cmpsl
lahf
xchg
sub
sub
orl
les
ror
arpl
imul
int3
jecxz
dec
icebp
xchg
inc
adc
dec
or
ret
jae
insl
jmp
inc
mov
int3
push
cltd
and
cltd
mov
sub
mov
sub
aas
cmpsb
push
and
test
int
push
cld
or
test
int
pop
data16
pop
fwait
jno
dec
out
jns
mov
mov
xchg
ljmp
lret
fistpll
test
mov
shrl
mov
sbb
data16
jns
mov
inc
psubq
and
cmp
mov
in
pushf
fistpll
or
repnz
jnp
outsb
hlt
and
sbb
xor
mov
cmp
pop
inc
dec
adc
mov
xor
subb
fidivrs
mov
jle
jb
mov
popa
add
js
jnp
mov
imul
in
or
jno
in
xchg
popa
mov
das
mov
ds
insl
sbb
jo
jl
es
imul
inc
or
sub
into
aaa
ds
inc
pop
and
xchg
xchg
dec
inc
adc
es
sub
push
mov
mov
or
inc
arpl
jle
mov
sub
in
daa
rcrb
and
cmp
cltd
mov
cmc
pop
mov
cmp
shll
incb
loopne
push
aam
lahf
aaa
lcall
test
push
pop
jns
jmp
dec
push
test
in
aas
push
cld
stc
das
das
mov
out
push
clc
lret
repz
and
xor
adc
dec
fdivs
inc
clc
push
mov
and
lock
xor
in
jmp
ret
and
nop
inc
iret
sbb
scas
add
nop
cmp
push
lret
pop
test
and
call
scas
sub
aad
pop
imul
dec
mov
push
es
jecxz
cli
pop
inc
stc
hlt
data16
lcall
xchg
jge
pusha
repz
inc
push
aas
jmp
gs
and
mov
adc
bswap
cmp
daa
ret
repz
push
pop
ret
into
mov
cld
add
arpl
movsb
add
mov
mov
or
mov
jns
rcrb
popa
hlt
inc
adcl
sbb
xor
jb
gs
jo
inc
sbbb
fbld
call
fucomi
inc
loopne
jae
arpl
cmp
push
std
lods
sub
xchg
leave
add
bound
out
jb
je
xchg
mov
mov
mov
pushf
cld
sbb
pop
stos
mov
fiadds
mov
and
sar
pop
test
inc
adc
mov
loopne
in
fsub
cli
pop
not
push
les
xchg
popf
scas
scas
sub
lcall
mov
cmp
fbstp
movsl
inc
cmc
sub
and
lods
hlt
dec
or
mov
aam
mov
out
push
or
mov
sbb
xchg
out
insl
jmp
jo
aam
xor
in
movsl
inc
or
adc
inc
sbb
adc
scas
xor
pop
mov
jns
nop
mov
add
loop
dec
adc
pop
xor
dec
stos
and
adcb
sti
mov
xlat
sbb
push
icebp
pop
addb
jge,pn
rorb
pop
mov
pop
add
mov
scas
mov
jno
push
stc
data16
out
popf
je
loope
leave
test
int
adc
dec
sahf
inc
push
adc
jge
test
mul
outsb
xlat
adc
ja
add
pop
mov
movsl
cwtl
aaa
repz
jbe
in
jecxz
test
outsb
in
data16
idivl
jg
jle
daa
les
cmp
add
or
push
into
and
pop
aam
ds
inc
xchg
mov
outsb
in
sar
ret
mov
sbb
shrb
imul
mov
xchg
and
out
addr16
jne
cmp
test
sub
mov
mov
xchg
inc
cs
data16
push
aaa
mov
ficompl
insb
out
xchg
inc
jp
roll
xchg
fwait
or
int3
mov
adc
addl
imul
std
dec
jb
push
daa
pushf
xor
scas
andl
cmc
and
lods
xor
ljmp
faddl
push
adc
shlb
mov
adc
or
mov
insb
jmp
pop
repz
out
and
aam
mov
xchg
cmp
add
lock
and
ja
out
inc
or
push
and
test
pop
sub
lds
int3
mov
push
push
dec
adc
xchg
xor
jae
and
dec
cmpsb
insb
out
xchg
xchg
inc
insb
jl
aad
jno
mov
int3
push
sarl
cli
std
nopl
sbb
inc
fldt
mov
popf
subb
in
mov
lea
cmpsl
in
jbe
xchg
orb
fldl
iret
push
fwait
inc
in
or
icebp
sub
and
call
inc
mov
mov
inc
inc
and
fwait
adc
orl
shll
lods
adc
scas
loope
lcall
imul
or
mov
cmp
mov
cwtl
and
lods
push
imul
push
out
imul
push
repz
clc
test
push
testl
push
aaa
cltd
es
xor
fs
push
cld
push
jg
cmp
js
mov
test
cwtl
xor
dec
or
fwait
xor
nop
daa
dec
xorl
sbb
fsubl
or
mov
sub
les
push
cs
push
popf
aaa
mov
adc
jp
mov
mov
fwait
inc
filds
and
lcall
mov
mov
adcl
mov
out
repnz
push
jae
dec
push
insb
push
dec
add
inc
adc
pop
jp
enter
push
adc
and
ret
xor
pop
nop
fistps
jmp
popf
jmp
mov
mov
pop
stc
cmpsl
inc
lea
mov
fs
xchg
push
cmpsl
jle
sub
sarl
jp
into
xchg
gs
push
daa
push
adc
ljmp
inc
xor
call
jb
scas
xchg
sub
pop
call
scas
pop
xchg
cmp
mov
pushf
cmp
push
adc
orb
loopne
outsb
aas
movsl
dec
enter
mov
or
js
or
movb
rol
add
add
test
pop
adc
fistps
leave
pusha
dec
add
xor
out
call
cmpsb
lock
je
mov
xchg
repz
sti
push
in
ficomps
int3
shll
push
inc
or
aas
inc
cmp
notl
pop
int
call
mov
nop
xor
orb
mov
ljmp
and
rorl
mov
insb
mov
into
pop
jecxz
sbb
out
cmp
sub
lret
xchg
lods
cltd
out
mov
inc
or
pop
repz
or
jmp
pop
push
clc
das
push
test
cmp
test
jl
pop
cmp
nop
or
pop
add
cld
bound
fmull
cs
add
cs
mov
out
ret
or
jns
fistps
sbb
inc
or
ds
out
cs
mov
cmpsl
or
cmp
out
mov
lea
sahf
inc
orb
inc
jbe
mov
jns
clc
bound
jg
mov
mov
push
jb
push
mov
push
mov
fsub
jb
cmp
push
fs
aaa
vcvtsd2ss
pop
sbbb
sbb
jns
stos
mov
xchg
pushf
mov
mov
push
fdivl
adc
xchg
bound
xchg
negl
scas
sub
ss
or
jmp
pop
mov
in
jb
pop
scas
aam
loope
nop
daa
jb
repz
scas
inc
lds
test
out
arpl
test
fnstcw
ljmp
lea
lahf
mov
fbld
mov
shlb
inc
cmpsl
ds
inc
lds
adcb
lcall
pop
in
add
scas
aas
pop
mov
rcr
jno
xchg
cmp
push
in
repnz
ss
push
mov
ljmp
jno
mov
rorl
mov
scas
inc
inc
aad
cmpsb
push
push
sub
sub
push
or
std
pusha
daa
mov
push
mov
fsub
jno
cmp
xor
push
sbbb
pop
jecxz
dec
test
add
cs
fdivl
aad
mov
pop
repz
cmc
sbb
out
ss
pop
cltd
xor
cltd
push
jmp
pop
mov
mov
jb
sbb
ds
daa
jo
hlt
mov
xchg
scas
inc
ret
push
adc
push
cmpsl
xor
fdivs
ljmp
mov
lahf
mov
frstor
mov
shrl
inc
test
and
stc
mov
pop
ja
adcb
cltd
in
lret
daa
sahf
xor
sbb
and
add
clc
push
jecxz
repz
push
lods
cmpsb
xor
xor
clc
mov
ljmp
jno
sahf
cs
pusha
mov
repnz
aam
cmpsl
add
es
ljmp
or
mov
cld
pop
daa
mov
dec
mov
fsub
jo
mov
ret
lds
sbbb
push
in
dec
cmpsl
mov
cltd
lcall
mov
dec
fdivl
push
aas
aas
mov
pop
hlt
xchg
repz
in
ss
push
lcall
pop
mov
or
lods
insl
fistpll
daa
outsb
add
mov
scas
inc
rcll
test
int3
arpl
xor
xlat
xor
dec
out
mov
lahf
mov
mov
shrb
test
stc
mov
pop
jbe
adcb
cwtl
in
lret
xor
sbb
mov
mov
decb
stc
nop
push
loope
hlt
adc
scas
movsb
xor
lds
xor
fnstenv
or
nop
daa
out
jg
mov
rclb
test
fs
xchg
and
push
mov
sub
dec
in
or
mov
cli
pop
sub
dec
scas
inc
fstp
outsb
test
mov
rol
repz
sbbl
adc
jl
movsl
mov
lcall
and
jge
inc
xlat
cmp
pop
pop
cmc
icebp
sbb
jecxz
aaa
into
je
fwait
xor
xchg
push
in
push
mov
or
stos
xlat
outsb
fnstsw
xchg
sub
mov
mov
stos
and
adc
andb
out
mov
mov
jp
daa
mov
into
sub
fcompl
test
cli
mov
pop
je
sbbl
enter
push
jmp
mov
mov
std
lea
mov
fistps
adc
scas
mov
les
int
test
in
inc
xlat
mov
or
or
mov
repz
rclb
test
arpl
gs
and
push
mov
sub
dec
in
or
mov
clc
pop
sub
mov
mov
dec
lods
inc
insb
test
sahf
jmp
xor
pop
repnz
sbbl
adc
jl
movsb
mov
lcall
and
jl
inc
xlat
cmp
sti
xchg
iret
pop
pop
cmc
mov
sbb
loop
aaa
into
jae
fwait
xor
push
mov
or
stos
xlat
outsb
fdivrl
xchg
sub
cmc
mov
lea
stos
and
xor
aam
jmp
gs
dec
out
xchg
mov
jns
daa
mov
int
inc
fcompl
inc
and
cli
scas
inc
pop
jae
sbbl
and
lcall
and
cld
mov
mov
ficomps
sbb
sbbl
inc
mov
or
or
mov
repz
iret
adc
xchg
and
push
mov
and
dec
in
or
mov
negl
rorb
inc
imul
das
mov
sbbl
adc
jl
mov
add
sub
fnsave
inc
xlat
cmp
cmc
out
sbb
loope
aaa
into
jb
fwait
xor
push
in
les
push
xchg
jae
pop
test
xchg
sub
cmc
mov
mov
stos
sbb
adc
jmp
fs
dec
out
xchg
mov
js
daa
mov
int3
sub
pop
in
test
cli
scas
inc
pop
jb
sbbl
and
lcall
and
sti
mov
mov
fstpl
push
jo
scas
mov
ret
repz
inc
aad
dec
pop
addr16
cltd
sub
insb
pop
mov
repz
into
adc
xchg
and
push
mov
and
dec
in
push
or
negb
rorb
inc
push
inc
pushf
cld
gs
sub
dec
sbbl
adc
jge
mov
add
xchg
hlt
mov
mov
jns
inc
fdivrs
lcall
mov
sbb
loopne
aaa
into
jo
pushf
xor
xchg
push
in
ret
push
xchg
jae
adc
ss
sub
testb
dec
adc
jg
int
pop
xor
shlb
jmp
push
out
test
mov
ja
daa
mov
lret
sub
pop
in
stos
inc
push
jnp
cli
lods
aas
enter
sbbl
les
mov
fwait
push
je
push
cmpsb
aaa
and
stc
mov
mov
fistpl
or
sbb
pop
shlb
icebp
sbbb
inc
sarl
or
mov
hlt
mov
int3
adc
nop
push
xor
dec
mov
test
jo
out
add
mov
hlt
push
sub
xchg
dec
push
data16
sub
sbb
out
inc
lahf
mov
pushf
xchg
repnz
and
ja
inc
fnstcw
cwtl
cld
xchg
lret
testl
cmp
pushf
xor
nop
push
in
rcll
test
je
adc
fsubrs
xor
testb
dec
adc
jge
into
gs
lahf
xor
shrb
in
andl
out
orl
mov
outsb
add
push
xchg
mov
leave
daa
inc
fstpl
stos
inc
sbb
fs
stos
cmp
sbbb
nop
out
ret
cmp
add
adc
mov
mov
clc
xchg
mov
fstps
or
mov
sub
mov
lcall
sarl
or
and
insl
push
mov
sub
ja
mov
lret
sti
pop
shlb
sbb
enter
test
outsb
dec
out
add
add
push
sub
xchg
mov
inc
cmpsl
dec
loopne
data16
inc
cwtl
stc
addr16
sub
test
sahf
mov
pushf
xchg
icebp
rcrl
and
jbe
inc
fnstenv
xchg
std
xchg
leave
push
pusha
testl
cmp
shrb
pushf
xor
push
out
rclb
and
or
movsb
fsubrs
xor
sub
testb
dec
adc
jnp
iret
or
leave
into
cs
test
push
out
orb
mov
outsb
add
add
es
ficoms
stos
inc
sbb
cld
stos
cmp
pop
insl
lret
sbbl
mov
jge
push
mov
fwait
adc
push
movsb
xor
mov
testl
pop
cmc
or
popf
sub
mov
lcall
iret
mov
or
push
mov
sub
jne
mov
enter
pop
shrl
sbb
enter
xchg
insb
dec
out
add
movsl
xor
sub
test
mov
inc
cmpsb
dec
loope
fs
inc
xchg
clc
push
pop
ljmp
jle
popf
movsb
cmp
pop
add
pop
and
loopne
jne
inc
fnstenv
xchg
enter
xchg
sbb
sbb
cmp
insb
sti
pushf
xor
dec
mov
or
aam
xchg
sub
testb
dec
adc
jns
shlb
fwait
xor
int3
sub
push
out
orl
jno
sub
add
mov
lds
stos
inc
sbb
std
test
lret
cld
mov
jge
sbb
add
adc
pop
mov
fbstp
addl
pop
xchg
dec
aad
cmc
push
imul
daa
jl
pop
mov
lcall
int
dec
jmp
push
xchg
and
outsb
push
mov
sub
jae
mov
adc
mov
xor
dec
lods
lock
push
out
add
cmpsb
xor
les
movsb
dec
loop
bound
add
mov
pusha
call
or
jg
pushf
movsl
cmp
pop
push
popf
out
ret
pop
and
loope
je
inc
fidivl
xchg
call
test
sbb
push
fdivrs
cmp
imul
xor
lea
mov
fbstp
adc
xchg
sub
repz
ja
shrl
cltd
xor
lret
xchg
push
call
mov
outsl
push
outsl
shrb
ret
lea
and
loopne
in
inc
push
ja
test
leave
pusha
imul
out
mov
fldl
pop
mov
ret
loopne
cmc
addl
dec
rcrl
add
sbb
adc
mov
fwait
xor
lret
mov
setb
fsubrs
mov
sub
mov
les
cmc
pop
shrl
push
xor
inc
lods
icebp
mov
push
xor
sub
and
aam
lods
inc
xchg
cmc
imul
out
xchg
jp
jmp
cmp
pop
pop
sahf
mov
ret
pop
and
loope
jae
inc
xchg
call
and
mov
movsl
adcb
cmp
shrb
sahf
xor
mov
fidivs
adc
xchg
sub
repnz
and
mov
mov
push
lods
jbe
shrl
cwtl
xor
leave
sub
xchg
push
jmp
mov
jo
outsb
shrl
ret
mov
push
jecxz
inc
adc
ss
enter
mov
jg
sbb
or
cs
pop
ret
hlt
addb
adc
pusha
testl
and
adc
in
ja
xor
lret
cld
pop
js
xchg
sbb
xchg
sub
mov
ret
adc
push
adc
icebp
mov
addr16
jmp
das
mov
sub
es
mov
lods
inc
xchg
hlt
imul
out
xchg
jns
ljmp
pop
or
pop
lods
es
jb
inc
xchg
call
and
mov
movsb
adcb
cmp
shrb
sahf
xor
mov
fidivs
adc
xchg
sub
icebp
clc
and
push
lods
jne
shrl
xchg
xor
enter
pop
jmp
or
pop
insl
shrl
ret
mov
push
loop
inc
adc
addr16
cmpsl
xor
test
mov
jg
sbb
or
ret
sub
loopne
hlt
jg
fnstenv
shll
add
mov
and
push
mov
pushf
xor
leave
mov
setno
jo
mov
sub
mov
ret
repz
shrl
adc
lret
inc
stos
icebp
mov
push
jmp
das
mov
sub
es
lods
inc
xchg
hlt
imul
in
xchg
jns
ljmp
pop
or
pop
lods
es
jb
inc
fldt
xchg
call
and
adcb
cmp
shrb
sahf
xor
mov
fidivs
adc
xchg
sub
lock
and
push
lods
je
shrl
xchg
xor
sub
xchg
push
jmp
mov
jo
insb
shrl
ret
mov
push
loope
inc
adc
cmpsl
xor
popa
enterw
xchg
jg
sbb
or
pop
mov
ret
hlt
jle
fldcw
shlb
add
mov
and
push
mov
pushf
xor
enter
pop
js
xchg
sbb
jo
mov
sub
mov
rcll
mov
xor
inc
stos
icebp
mov
gs
jmp
das
mov
sub
es
pop
lods
inc
nop
hlt
imul
in
xchg
jns
ljmp
pop
or
pop
stos
es
jb
inc
fldt
xchg
call
and
mov
mov
cmp
push
sahf
xor
mov
fidivs
adc
sub
out
clc
and
push
lods
jae
shrl
xchg
xor
sub
xchg
push
jmp
mov
jo
imul
ret
mov
push
loopne
inc
adc
cmpsl
xor
popa
gs
xchg
jg
sbb
or
pop
mov
ret
hlt
jge
fldcw
iret
pusha
testl
and
push
mov
pushf
xor
mov
setno
fnstenv
mov
sub
lahf
add
adc
push
adc
inc
stos
icebp
mov
fs
jmp
das
mov
pop
jmp
or
loop
pop
lods
inc
hlt
imul
jecxz
xchg
jns
ljmp
push
or
pop
stos
es
jb
inc
fldt
dec
stc
jg
sbb
pop
sarl
cmp
push
sahf
xor
mov
fidivs
adc
xchg
sub
out
clc
and
push
lods
jb
shrl
xchg
xor
lds
out
xchg
push
jmp
mov
jo
push
sub
add
loopne
fildll
cmpsl
xor
popa
fs
test
jg
sbb
or
pop
mov
ret
hlt
jl
fldcw
into
pusha
idiv
push
jg
push
mov
popf
xor
or
icebp
cmp
pop
js
nop
sbb
jno
mov
sub
sahf
add
dec
ss
shrl
adc
mov
arpl
xchg
std
cs
or
dec
sub
daa
cmp
scas
inc
mov
imul
loop
xchg
js
jmp
xor
push
or
push
test
loope
jno
inc
fsubrl
call
jle
sbb
sbb
cmp
shrb
lahf
ss
inc
mov
push
setp
jb
xor
nop
pop
test
scas
jno
shrl
xchg
xor
xchg
ljmp
jno
imul
es
fisubrs
cmpsb
xor
bound
test
test
xorb
pop
sahf
or
pop
mov
shl
repz
fisubrl
popa
clc
addr16
pop
push
mov
sahf
xor
cmp
mov
jg
mov
sub
popf
add
scas
out
push
shrl
adc
int
test
push
jmp
cld
sub
dec
sub
sub
mov
scas
inc
repnz
loope
xchg
ja
in
xorl
cmp
push
or
sbb
loope,pt
jo
inc
xchg
call
jge
sbb
sbb
aaa
cmp
push
mov
mov
fdivl
push
cltd
fdivl
das
xchg
sub
in
cli
xchg
push
xorl
jo
shrl
xchg
ss
sub
xchg
push
jmp
jge
movsb
scas
ss
push
mov
loopne
movsl
xor
arpl
test
sub
mov
movsb
cmp
or
lahf
sub
mov
bnd
fldt
int3
stc
std
sbb
push
sbbl
jb
push
add
xchg
fs
add
pop
or
cmp
iret
addr16
icebp
jb
test
cmpsb
mov
sbb
and
mov
cmp
mov
repz
sti
adc
add
psubw
xchg
pop
in
dec
mov
or
in
or
lret
imulb
jl
inc
jge
ss
mov
call
or
jbe
inc
into
pop
in
cltd
cmp
mov
mov
int
sub
and
push
jl
fists
ja
std
mov
mov
aas
mov
dec
jmp
scas
add
sbb
xor
xor
adc
fisubrs
dec
lods
mov
mov
sbb
fmul
push
in
mov
imul
jle
pop
mov
dec
xor
out
cmpsb
xlat
mov
push
add
xlat
mov
inc
pop
mov
testb
in
mov
jp
inc
mov
pusha
sbb
pop
inc
jecxz
sbb
test
dec
lret
mov
arpl
loopne
outsl
repnz
sbb
and
aam
mov
mov
mov
xor
bound
xor
pusha
add
inc
cmp
mov
int3
dec
addr16
pop
cmpl
jno
je
adc
pop
jge
cmpsb
xor
negb
inc
mov
js
dec
mov
add
mov
sbb
popf
popa
inc
xchg
xchg
or
repz
cli
xchg
push
stos
mov
push
ss
push
into
inc
fwait
in
not
cmpsb
sub
or
mov
dec
mov
test
testb
cmp
inc
add
jne
fcmovb
and
fdivp
stos
add
mov
jne
in
rcrb
pop
dec
jecxz
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
dec
sub
fs
adc
mov
lock
lds
sub
adc
jb
lret
mov
pop
cmp
sbb
call
mov
ljmp
fnstenv
iret
outsb
mov
mov
fimull
js
bound
js
in
int
ret
xor
ja
inc
rcll
mov
rcrb
mov
popa
and
mov
xchg
ret
ja
cwtl
insb
inc
adc
movw
jne
inc
mov
jecxz
inc
lods
mov
iret
and
fistpll
inc
mov
xor
inc
js
rcrb
mov
pop
cmpsl
ja
jmp
icebp
es
push
rep
xchg
xor
rcll
sbb
negl
sub
sub
mov
mov
cmpsl
arpl
xchg
cli
and
add
jae
repz
cwtl
fs
testb
fwait
xchg
push
add
lock
fwait
jmp
out
cs
and
rol
fildl
test
mov
loope
or
test
rolb
xchg
mov
mov
sbb
pop
push
imul
sbb
cmp
into
lods
cwtl
insl
push
xor
pop
cmc
mov
mov
mov
and
push
fiaddl
sbb
dec
cs
add
ss
sub
js
call
outsb
out
lcall
add
cli
leave
nop
insl
out
pusha
sbb
fwait
icebp
jge
mov
fildl
scas
push
stos
movsb
cld
inc
addr16
and
shlb
js
mov
out
popf
inc
mov
mov
inc
adc
das
repnz
cli
push
test
mov
lods
ficoms
or
jne
outsb
and
mov
add
push
push
add
inc
push
sub
mov
mov
call
inc
mov
fimull
ret
mov
aas
lods
mov
outsl
gs
loop
xor
fidivl
or
lock
lods
movsb
rcrl
mov
fisubl
mov
insb
cwtl
mov
pop
addr16
icebp
mov
subb
cmp
dec
push
cmp
inc
lds
mov
push
xor
adc
push
in
scas
lods
mov
negb
emms
rclb
adc
and
scas
cli
mov
loope
movsb
xchg
mov
imul
push
cmp
mov
xchg
jae
fstp
les
lcall
insb
adc
jmp
xchg
mov
test
push
cmp
dec
bound
out
lods
xchg
icebp
aam
sbb
and
ficoms
aas
lods
ljmp
lds
cmpsl
inc
jae
movsb
popa
jg
int
jae
pop
out
mov
es
outsl
sahf
dec
loop
jbe
pusha
lea
adc
adc
lods
pop
mov
or
movsl
adcb
aad
mov
idivb
mov
cmp
or
jl
or
adc
push
jmp
pop
movsl
out
stos
scas
insb
push
jle
icebp
xchg
push
scas
ret
fcomi
xchg
test
mov
mov
and
jecxz
in
subb
adc
mov
push
cmp
lret
in
xchg
insb
xor
xor
add
dec
mov
fisubl
inc
mov
sub
rolb
inc
scas
pop
xchg
push
mov
aam
and
xchg
movsb
sub
jg
cld
jg
xchg
jbe
ret
addr16
movsb
lods
or
mov
repnz
rcrb
shl
lea
jnp
das
rcr
or
imul
mov
out
sub
imul
outsl
xchg
mov
in
mov
jo
mov
rcll
jp
xor
xor
das
int3
daa
xor
loope
adc
adc
push
outsl
loop
rorb
mov
sub
cmp
cmp
add
repz
inc
lea
sarl
daa
dec
push
mov
sbb
add
pusha
mov
cli
add
leave
adc
out
push
xor
pop
sbb
aaa
dec
inc
cmp
sub
imul
and
out
imul
fbstp
cltd
xchg
orl
pusha
and
cmp
mov
dec
sbb
rolb
dec
sti
mov
xchg
hlt
sbb
cmp
repz
icebp
push
mov
ret
jmp
jb
pop
cmp
pop
stc
dec
jno
or
push
idivb
lea
jle
jmp
xlat
jnp
mov
push
popf
lods
sub
dec
popf
das
sti
xor
je
movsl
out
sub
add
enter
mov
pop
stos
push
jne
arpl
mov
popa
mov
inc
or
jmp
inc
push
push
in
push
jge
sbb
cmp
jae
mov
cli
repz
mov
je
add
in
arpl
gs
jmp
mov
inc
mov
or
push
mov
cs
jo
push
mov
fs
inc
dec
sub
arpl
or
push
mov
mov
lods
mov
fs
lret
add
xor
jg
push
jns
adcb
jg
xchg
outsl
mov
daa
lret
lcall
xor
xchg
mov
daa
pop
push
dec
stos
cmp
adc
fwait
repz
popf
jmp
fidivl
xor
push
repnz
testl
sub
mov
push
dec
mov
push
sbb
jo
add
outsl
xchg
cld
jnp
cmp
and
sub
ds
and
ret
cmpsb
out
and
scas
jbe
xchg
lock
dec
adc
out
jmp
fs
cmp
cwtl
push
cmp
loopne
and
and
cmp
push
ja
xchg
lods
sub
inc
add
add
lods
pop
mov
push
arpl
data16
popf
mov
daa
xchg
sub
add
jnp
adc
out
adc
in
adc
pop
imul
xchg
loopne
add
imul
add
mov
aad
out
or
mov
and
mov
pushf
stos
fmull
cli
jp
aad
push
cmpsb
and
push
mov
mov
jne
