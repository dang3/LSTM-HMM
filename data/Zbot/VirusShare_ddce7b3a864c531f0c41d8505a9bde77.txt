jmp
inc
repz
call
jp
xor
and
loopne
sbb
mov
pushf
push
jle
out
and
fdivrl
repz
sub
mov
cmp
or
pop
cmp
decl
mov
aaa
addr16
rclb
int3
jbe
mov
pop
decl
sbb
and
jle
leave
mov
ret
outsl
in
and
sbb
int3
adc
mov
push
sbb
xchg
sbb
bound
dec
fcmovnbe
or
ja
shll
xchg
dec
setae
cltd
ja
xlat
rolb
sarl
adc
rolb
or
xchg
xor
or
adc
jp
xchg
incl
and
sarb
ja
pop
ss
in
push
mov
xchg
and
incl
xor
hlt
insb
pop
mov
lock
into
pop
es
ret
dec
insb
xlat
and
repnz
jmp
push
leave
and
bound
mov
int3
popl
mov
jbe
ds
decl
xor
xchg
loope
lock
icebp
sub
xchg
hlt
aas
gs
gs
jmp
mov
out
outsl
out
push
fsubrl
adc
or
stos
repnz
dec
pushf
pop
pop
jp
mov
sbb
mov
mov
stos
sbb
out
inc
ret
mov
fsubr
je
call
dec
nop
call
call
cmp
ds
loopne
xor
xchg
dec
out
in
hlt
jl
loope
loope
inc
std
pop
stc
pop
in
clc
lcall
sbb
jmp
test
pop
cmp
adc
cmpsb
mov
adc
sub
ljmp
insb
test
mov
call
outsl
test
xchg
cmp
mov
incl
mov
test
pushf
sub
aaa
hlt
cmp
jno
out
in
and
jmp
or
mov
in
lret
pop
test
mov
jg
xchg
es
lcall
decb
pop
ds
xchg
add
sbb
lods
add
loopne
sub
mov
decl
pop
gs
movsl
or
imul
dec
insl
cmc
mov
insl
int
jecxz
mov
jno
loope
mov
pushl
daa
in
dec
push
xlat
sbb
jae
js
cwtl
add
sti
sbb
test
xchg
sahf
pop
jmp
ljmp
cmpl
xor
xchg
adc
lcall
jns
mov
pop
insl
sarl
stos
dec
cs
lret
int
push
ficompl
sbb
div
mov
mov
xchg
gs
ss
test
call
mov
ss
xor
mov
and
int
test
leave
sti
or
gs
decl
adc
inc
cmpsb
cmpsb
sbb
jb
cs
sub
fwait
jne
cmpsl
cmc
jbe
push
push
rcrl
decl
aaa
jbe
jp
adc
xchg
mov
lods
decb
dec
in
cli
jbe
inc
call
decl
pop
dec
or
into
fcmove
into
sti
push
cwtl
adc
push
test
ja
sbb
idiv
jg
incl
divb
movsb
inc
outsl
mov
les
lock
inc
jns
add
filds
and
mov
jae
stos
cwtl
in
mov
test
sbb
cmc
movsl
jmp
pop
inc
mov
fadd
lods
icebp
es
inc
jae
mov
jae
ljmp
in
inc
sarl
push
sbb
mov
xchg
popa
mov
lcall
in
cmp
fsubs
jecxz
dec
xchg
add
and
lret
jae
in
in
push
mov
pushl
add
je
nop
es
jp
xchg
loopne
adc
in
jb
or
jae
and
dec
cltd
sbb
lea
arpl
addl
push
ret
je
lock
call
cmp
aas
movsl
lret
mov
mov
in
and
xor
iret
mov
cld
sbb
xlat
call
cli
roll
cmpsl
mov
nop
vmovups
inc
in
jmp
lcall
notl
sarb
in
jns
dec
cld
shl
pop
enter
xorb
jp
adc
mov
mov
xor
mov
pop
jno
rolb
in
fs
iret
fmuls
mov
mov
aad
sub
cwtl
jmp
mov
clc
shlb
and
test
incl
push
adc
aaa
test
mov
or
ja
cwtl
addr16
in
cmpsb
mov
inc
mov
inc
jno
dec
adc
loope
push
push
stc
das
mov
push
mov
mov
sbb
shll
shll
sub
xchg
incl
addr16
adc
iret
jg
mov
gs
call
fsubl
stos
addr16
sub
add
pop
sbb
shr
mov
icebp
adc
jmp
xor
xor
jge
add
mov
pop
dec
push
mov
lcall
sti
notl
sub
bound
out
cmp
cli
stc
inc
scas
test
decl
mov
dec
or
cmp
push
cmp
jg
movsl
fildll
jmp
and
inc
int
rcrb
adc
int
addr16
pop
jb
jnp
pop
push
lret
jge
jmp
add
mov
adc
aas
fisttpl
jecxz
loope
xchg
mov
inc
jnp
push
xor
out
insl
ret
sbb
inc
or
sub
jo
js
cmp
xor
icebp
push
jmp
mov
cmp
mov
pop
pop
jp
and
ret
call
mov
lcall
and
lea
lcall
sahf
ficompl
out
adc
int3
sub
dec
ljmp
arpl
and
std
call
add
shll
dec
ljmp
or
fcomip
lret
sahf
ljmp
mov
pop
int3
pop
fisubs
jmp
xor
out
cmpsb
int
xlat
lahf
bswap
mov
daa
scas
je,pt
lods
mov
sbb
imul
decl
sbb
xor
testb
dec
test
movsb
inc
jne
out
dec
sub
lcall
lcall
rol
ret
je
outsl
ja
push
out
call
stc
ja
ss
ror
scas
aaa
and
push
push
call
int
mov
xor
lock
insb
inc
orl
cmp
jmp
pusha
imul
lods
jbe
data16
sbb
shrl
pop
push
dec
cmpsb
call
sbb
jle
push
test
leave
add
insb
or
loope
aad
or
rol
decl
stos
loop
xor
xor
stos
push
jecxz
imul
jg
jge
mov
push
jno
add
add
adc
and
in
mov
pop
sub
jg
in
call
xor
in
in
imul
hlt
jbe
clc
cli
imul
stc
std
stos
imul
mulb
pop
xor
jae
and
ljmp
stc
jmp
cmc
out
mov
into
pop
iret
insl
enter
xchg
loope
push
adc
cmp
xorl
into
xchg
or
mov
stos
xchg
xor
aaa
cld
dec
xor
jnp
push
inc
fnstsw
adc
xorl
inc
andb
pushl
xchg
adc
pushf
jb
insb
xchg
dec
daa
data16
pop
or
clc
test
or
decl
push
cmp
aas
out
mov
jge
push
inc
pop
hlt
inc
dec
sbb
icebp
incl
and
jbe
cwtl
or
xor
fsubrl
cmc
push
jmp
bound
repz
mov
jg
fmull
aaa
mov
xor
and
fdivs
cli
add
cmp
out
adc
xor
lock
mov
adc
enter
dec
sti
xor
lcall
dec
int3
lret
jne
repnz
imull
push
or
cmp
mull
gs
lcall
adc
mov
push
pop
ja
data16
aas
pop
fldenv
mov
pop
cltd
fidivl
mov
idivl
inc
repz
roll
shl
sbb
dec
decl
mov
fsubrs
aas
aad
jecxz
into
mov
xor
mov
decl
repnz
xor
push
rcrb
inc
inc
mov
xlat
jno
mov
xlat
lcall
push
daa
add
push
pop
or
call
adc
sbb
sub
je
inc
cmpsl
add
cmp
xchg
call
test
xchg
loop
sub
imul
xchg
jb
cli
scas
and
sub
repnz
lock
cmp
inc
xchg
jae
mov
outsl
int
dec
stc
test
add
push
loope
ffree
xchg
dec
cmp
sub
ss
sti
std
mov
add
fldt
ret
mov
mov
or
mov
mov
sub
call
mov
loop
pop
mov
into
mov
aaa
mov
mov
pop
mov
ja
insl
in
mov
mov
mov
pop
sub
xor
test
das
imul
add
mov
pop
inc
js
mov
bound
cmp
mov
push
jno
repz
mov
or
addl
mov
add
jno
neg
scas
lea
xorb
fistps
negb
das
imul
lahf
cmc
dec
in
fstpl
cmp
add
xor
rcr
dec
and
aad
out
jo
pop
andl
inc
loopne
ret
push
push
xor
clc
sub
mov
add
xor
loope
mov
andb
jmp
out
jmp
popa
mov
cmp
add
adc
xor
push
sti
scas
mov
and
mov
xchg
lcall
pushf
repnz
add
aas
add
push
pop
addb
mov
xor
xor
adc
addr16
sub
cli
mov
divl
cmp
xlat
test
or
mov
jbe
mov
insl
sub
jmp
adc
cs
mov
xor
adc
and
xor
or
adc
dec
mov
std
mov
sub
int3
sti
mov
cmp
stos
xchg
rolb
adc
and
roll
cld
repz
inc
inc
popa
loopne
dec
lcall
decl
push
aaa
push
mov
or
leave
dec
fiaddl
xchg
leave
add
jmp
xchg
mov
lea
loope
sub
add
dec
push
xchg
aad
call
xor
pop
add
xchg
repz
dec
shll
pusha
jae
mov
jnp
loop
inc
inc
adc
dec
xchg
lea
je
sbb
in
inc
loop
cmc
fnsave
adc
jbe
aas
movsl
inc
cmp
jmp
out
inc
mov
inc
lret
add
pop
xorb
mov
push
inc
xchg
jns
lcall
in
aad
pusha
je
inc
cld
bswap
dec
lods
addl
jb
cli
push
dec
rcrl
outsb
das
shll
xor
and
inc
clc
and
out
cmpsb
ljmp
aas
sub
inc
and
fs
in
inc
and
lock
mov
fmulp
or
pop
pop
adc
outsl
xchg
test
movsl
lret
ret
cmp
xchg
mov
cmp
jnp
notl
xor
mov
add
mov
insl
fwait
jne
adc
xor
lock
adcb
xchg
or
dec
mov
subb
addr16
fnsave
das
or
cmp
in
adc
xor
pop
lret
cs
adc
imul
jae
cmp
mov
xor
dec
xor
mov
jne
jnp
leave
fwait
pop
lock
int
adc
decl
call
add
push
ret
andb
mov
mov
imul
lcall
jmp
sub
movsb
lret
xchg
adc
mov
push
adc
inc
and
add
add
add
add
test
stos
jmp
push
repnz
add
add
add
mov
add
subb
nop
inc
push
leave
incl
jmp
mov
fs
nop
mov
add
sub
inc
add
fs
incl
xchg
and
add
xchg
adc
add
nop
push
add
add
xorl
int3
mov
push
repz
and
loopne
add
cmp
repz
dec
and
sub
dec
push
repz
repz
mov
iret
mov
shlb
or
cmp
repz
cmp
push
cmp
repz
lcall
out
outsb
mov
cmp
repz
pusha
jo
cwtl
iret
repz
mov
fsubr
cld
or
out
lcall
jns
out
mov
xor
out
ljmp
cmp
cmp
jo
nop
cmp
repz
mov
fdiv
jns
cmpsl
stc
or
and
dec
pop
out
sahf
out
test
sahf
add
push
es
repz
fs
pushf
repz
rep
mov
jns
out
les
sub
dec
sahf
out
sahf
pop
push
mov
jns
push
lds
cmp
repz
pop
jb
iret
repz
cwtl
test
into
in
repz
ds
push
sub
iret
repz
insb
jl
stos
rcl
out
cmp
decb
and
jns
out
push
bound
lcall
shl
cli
iret
repz
or
and
inc
push
data16
repz
xchg
iret
repz
push
leave
push
cs
sahf
out
push
insb
sbbb
rcl
cld
adc
cmp
repz
cmp
jb
cmp
xrelease
jns
iret
hlt
or
and
dec
sahf
out
sahf
fs
pushf
mov
cmp
out
or
sbb
repz
repz
data16
iret
repz
cmpsb
mov
sahf
out
lcall
jns
out
xchg
lods
aam
repz
out
adc
sub
dec
iret
repz
pusha
jo
nop
mov
cmp
out
push
iret
jns
out
push
xor
push
insb
out
sahf
out
mov
ret
aam
iretw
iret
rolb
cmp
repz
pusha
jo
nop
repz
rcl
rcl
cmp
repz
roll
ss
fs
cmp
repz
stos
mov
lcall
cmp
pusha
jo
cwtl
mov
fsubp
jns
fsubr
ror
rcl
sahf
out
fiadds
cs
pop
outsb
jns
out
xchg
popf
div
rcl
aam
cs
push
jns
out
data16
mov
out
add
push
iret
repz
cs
push
outsb
test
ret
out
sahf
lock
adc
xor
out
sahf
push
data16
sahf
scas
jl
out
mov
xlat
repz
rcrl
inc
pop
insb
iret
repz
jl
movsb
mov
stc
cmp
add
sbb
inc
jns
out
push
outsb
xchg
out
aam
cli
or
iret
repz
and
push
push
repz
mov
sahf
cmpsl
stc
add
sbb
inc
push
out
sahf
out
jo
sahf
mov
out
sahf
aam
hlt
or
sbb
iret
repz
inc
push
bound
cmp
repz
jns
iret
repnz
sbb
inc
sahf
out
sahf
push
push
jns
out
out
fstpl
sub
pop
insb
test
jns
movsb
mov
mov
fiadds
xor
iret
repz
push
fs
mov
cmp
fsubr
decb
fistpll
out
push
ss
push
out
sahf
out
mov
sahf
add
sbb
dec
cmp
repz
jo
mov
repz
fdivp
or
and
jns
out
dec
pop
jo
sahf
out
sahf
nop
mov
cmp
repz
push
loop
xor
repz
repz
jb
xchg
stos
out
repz
mov
jecxz
repz
repz
ss
data16
iret
repz
pushf
mov
fsubr
clc
sahf
out
ds
sbb
dec
pop
jns
out
jbe
pushf
mov
repz
out
hlt
add
adc
iret
repz
cmp
pop
je
lcall
fdiv
out
sahf
es
adc
xor
out
sahf
push
outsb
xchg
out
aam
cld
or
sbb
cmp
repz
jo
iret
repz
nop
mov
repz
ds
pushw
sub
push
iret
repz
bound
cmpsb
mov
cmp
repz
out
pushw
jmp
iret
cmp
insb
jl
movsb
cmp
repz
lret
or
repz
sbb
cmp
repz
repz
sahf
mov
out
ds
in
adc
and
sahf
out
sahf
dec
fs
mov
jns
fsubr
cld
or
repz
shll
cmp
outsb
iret
repz
xchg
repz
in
into
push
xor
iret
repz
pop
jo
xchg
lods
mov
shr
jo
sbb
jns
out
inc
push
push
sahf
nop
mov
cmp
sarl
push
cs
push
repz
repz
xchg
cmpsb
out
cmp
mov
lock
out
sahf
and
push
fs
jl
out
test
aam
add
repz
rcll
and
push
iret
repz
js
sahf
mov
fidivrl
jmp
lock
push
sbb
out
sahf
out
dec
pop
je
lahf
out
sahf
pushf
mov
loop
or
cmp
repz
ss
bound
cmp
xrelease
jns
iret
out
push
hlt
push
cs
out
sahf
push
data16
movsb
mov
lahf
out
or
sbb
cmp
repz
pop
insb
test
repz
pushf
mov
loop
add
adc
xor
jns
out
jo
cwtl
mov
sarl
shl
lock
adc
repz
and
inc
push
pusha
js
iret
repz
cwtl
scas
aam
sahf
out
in
add
adc
xor
jns
out
push
push
lcall
in
add
sbb
iret
repz
inc
push
push
repz
repz
lods
mov
cmp
hlt
stc
into
cli
push
sub
repz
repz
jo
xchg
cmpsb
out
cmp
mov
sti
sahf
out
sahf
es
fs
jl
out
pushf
mov
sti
repz
cmp
cld
push
and
dec
iret
repz
pusha
jbe
pushf
mov
lcall
push
std
and
sahf
out
cmp
push
mov
jns
out
mov
out
repz
cld
or
and
push
push
jle
cmpsb
mov
repz
add
sbb
out
sahf
out
pop
je
pushf
sahf
out
sahf
lods
mov
cmp
add
jb
push
cmp
repz
repz
xchg
movsb
out
cmp
mov
loopne
push
add
ss
pop
je
jns
out
lcall
fucom
testb
pushw
ss
pop
jns
out
je
xchg
stos
rcl
sahf
out
out
or
and
repz
cmp
push
nop
cmp
repz
mov
jns
loopne
push
adc
ss
out
sahf
inc
pop
jbe
sahf
mov
lahf
out
into
out
adc
jns
xor
push
out
mov
repz
repz
and
dec
fs
repz
jl
pushf
lods
mov
cmp
hlt
add
sbb
jns
out
cmp
jp
out
sahf
out
mov
shr
iret
repz
add
adc
cmp
cmp
repz
mov
iret
repz
or
into
push
xor
iret
repz
js
cmpsb
mov
ds
repz
out
push
or
out
sahf
out
ss
pop
je
out
sahf
mov
repz
jnp
or
push
sahf
out
testb
lcall
lret
push
or
repz
repz
pop
insb
or
cmp
lcall
out
lcall
jns
out
jo
cwtl
mov
push
fs
out
out
cmpsb
push
cmp
repz
jl
repz
repz
out
lcall
dec
sahf
out
sahf
pop
jo
xchg
cmpsb
mov
sahf
out
into
fsubrp
adc
repz
shll
push
bound
repz
sbbb
mov
adc
xor
iret
repz
pop
push
mov
cmp
shl
lock
sahf
out
push
push
es
sahf
out
sahf
pop
insb
jl
mov
jns
loopne
add
adc
cmp
repz
data16
repz
mov
out
add
cs
push
jns
out
insb
jl
pushf
lods
fidivrs
out
shr
adc
adc
out
cmp
jbe
out
sahf
out
mov
repz
or
and
inc
pop
push
iret
repz
mov
iret
repz
decb
pop
push
out
sahf
out
inc
push
data16
out
sahf
mov
cmp
sarl
adc
cmp
repz
repz
cmpsb
mov
stc
cmp
int3
in
or
and
dec
pop
jo
nop
jns
out
test
into
in
sahf
out
testl
bound
sahf
out
sbbb
int
in
add
adc
inc
iret
repz
push
outsb
jle
cmpsb
mov
into
fdivp
or
jns
out
xor
push
out
sahf
out
mov
shl
iret
repz
clc
adc
cmp
repz
test
repz
cld
adc
sub
jns
out
push
push
xchg
lahf
out
sahf
scas
mov
pop
cmp
repz
xor
push
push
cmp
repz
test
enter
iret
loopne
or
sbb
sahf
out
sahf
inc
push
outsb
xchg
jns
out
push
and
repz
repz
fs
repz
test
sahf
out
ds
sbb
cmp
jns
out
bound
mov
out
loop
adc
and
repz
xor
outsb
test
stos
mov
jns
out
and
es
bound
sahf
out
sbbb
testl
out
cld
iret
repz
or
push
cmp
repz
insb
jp
xchg
repz
rep
mov
into
fsub
imul
es
or
jns
xor
dec
pop
sahf
out
outsl
je
test
xchg
movsb
mov
ja
out
aam
hlt
add
xchg
sahf
out
sahf
and
inc
push
fs
sahf
out
test
sahf
out
in
add
add
add
adc
dec
mov
mov
inc
add
mov
pop
cld
jmp
jmp
adc
sbb
ds
fsubr
sub
in
loop
sbb
mov
int3
pop
cmp
call
mov
xlat
cmc
das
hlt
mov
push
stos
pop
loopne
sub
subb
ficomps
xchg
call
jne
lahf
popa
adc
pop
in
pop
dec
jmp
mov
mov
lods
mov
pop
sub
mov
out
sub
out
mov
xor
mov
rcl
cmp
lcall
push
inc
outsb
leave
lret
rclb
pusha
rol
pop
scas
lds
fldl
mov
mov
push
pop
jp
xor
sahf
rorb
cmpsb
test
push
in
xchg
js
add
addr16
lea
jne
dec
xor
push
or
cmp
mov
pushf
or
or
adc
or
in
aas
mov
xchg
mulb
jno
dec
test
and
lret
int3
adc
push
shll
aam
icebp
gs
decl
mov
xchg
fldt
in
or
pusha
into
pop
jmp
cmpsl
popf
push
mov
incl
sbb
inc
xlat
mov
xchg
fld
jno
inc
pop
fs
aas
idiv
pushl
pop
insb
sti
jae
movsl
clc
notl
pop
ret
push
pop
xor
dec
mov
or
incl
adc
dec
mov
and
mov
cmpsb
jb
push
cwtl
push
and
cmp
in
adc
imul
aaa
xlat
push
mov
inc
test
fimuls
pop
into
and
incl
stos
mov
inc
in
pop
call
or
push
add
jae
ljmp
icebp
cmpsb
pop
cmpsl
fcmovne
test
jno
enter
imul
pop
in
iret
and
insl
xlat
mov
in
repz
inc
les
in
addr16
mov
mov
sarb
dec
test
lret
movsl
pop
std
dec
add
and
pop
jb
push
sub
adc
std
inc
sahf
pop
daa
lret
jae
call
call
hlt
cmp
scas
outsl
ret
mov
xor
les
jb
mov
mov
call
push
iret
xchg
pop
adc
mov
adc
inc
add
or
mov
imul
mov
jecxz
mov
int
push
in
ret
adc
jg
loopne
ljmp
push
ret
out
add
push
dec
mov
push
and
in
or
and
stos
sub
push
push
pushl
adc
enter
adc
push
pop
ljmp
repnz
fdivl
scas
int3
pop
test
mov
std
mov
movsb
xlat
add
movsl
and
mov
iret
add
lock
mov
jns
ds
and
xor
add
xlat
movsb
iret
icebp
jg
jg
xor
fcoms
call
movsb
and
mov
sub
jmp
icebp
fimuls
push
sub
movsl
in
jle
lds
jp
aaa
and
andb
test
mov
movsb
dec
loop
mov
ror
inc
mov
dec
mov
and
dec
inc
test
aam
push
mov
lret
inc
mov
mov
aaa
pop
clc
mov
aad
xlat
push
aam
cld
ljmp
mov
rorl
mov
push
sub
lods
mov
ljmp
int3
aad
dec
movsb
fmulp
push
stos
roll
pushf
in
das
lret
inc
je
add
mov
inc
jge
mov
daa
ret
dec
mov
dec
aaa
dec
repz
mov
ljmp
incl
jae,pt
daa
mov
pop
lds
aad
dec
lock
lock
into
fsubs
aaa
cmp
sub
jno
and
fisttps
dec
scas
aad
ja
iret
cs
fadd
dec
in
out
call
jns
sub
aas
cmpsb
dec
leave
mov
or
out
xlat
fxch
jae
call
and
lock
imul
enter
jg
lcall
push
repnz
dec
hlt
aad
push
hlt
stc
lock
call
out
cmp
and
inc
loope
ss
inc
clc
leave
int
loope
lret
push
fwait
out
mov
push
shll
leave
testl
mov
mov
jp
decl
and
inc
pop
and
xchg
xor
pop
fdivrs
push
incb
push
dec
call
iret
inc
or
lock
outsb
push
stc
test
adc
push
or
std
xchg
dec
pop
push
adc
fsubs
mov
mov
mov
fdiv
inc
fstpl
push
data16
inc
or
cld
lcall
inc
sbb
rol
jae
inc
icebp
sub
cmp
fcoms
sub
and
inc
daa
lsl
imul
mov
rcr
sahf
outsl
cmp
and
ss
daa
pop
shll
dec
cmp
fiadds
mov
xor
push
test
mov
dec
jne
sbb
ficomps
sub
scas
mov
insl
fisttpl
fcomp
int
mov
ss
mov
outsl
dec
mov
fcomp
mov
leave
mov
int
mov
inc
mov
dec
inc
inc
loopne
int
ja
mov
jge
pop
xchg
dec
les
sub
mov
lds
sub
lea
enter
cmp
and
dec
push
int3
mov
incl
iret
pop
jns
jnp
das
sub
es
sub
cmpsl
daa
xchg
repnz
std
mov
stos
push
mov
adc
xchg
push
cmpsb
mov
cmpsl
adc
push
dec
mov
icebp
mov
hlt
fucomi
and
mov
fchs
inc
xchg
jmp
mov
std
aam
loop
pusha
cs
fisttpl
sbb
pop
std
movsb
lods
xchg
adc
ljmp
scas
push
dec
push
lcall
lods
push
xor
movsb
in
daa
loopne
bound
mov
enter
scas
int
scas
dec
mov
cmpb
stc
mov
lock
jecxz
push
cmp
filds
call
inc
addr16
addr16
xor
out
push
xlat
scas
jle
sbb
lods
test
test
lods
mov
icebp
jo
mov
lods
mov
pop
or
loop
push
das
aaa
icebp
rcr
jmp
loope
jge
jmp
xchg
mov
out
xor
out
push
shlb
hlt
pop
testb
das
jecxz
push
jmp
iret
out
rcl
cmp
xchg
es
xchg
xor
dec
and
ljmp
ret
push
mov
xor
out
int3
data16
jmp
es
pop
cld
mov
shrb
fldenv
mov
lcall
jp
ja
xchg
xchg
mov
cmpsl
mov
outsl
lahf
movsl
stos
sub
pop
xor
scas
test
in
ljmp
test
add
cmp
enter
dec
movsl
aam
pop
or
dec
ljmp
into
lods
movsl
add
pusha
lods
lret
cmp
mov
cld
out
aaa
mov
push
ja
stc
sbb
mov
xor
das
xor
or
testb
mov
shrb
xor
dec
and
jmp
jg
inc
je
loop
sub
and
stc
and
daa
in
push
cmp
daa
test
or
cld
sub
loope
mov
outsl
mov
leave
mov
mov
mov
fistpl
cld
lcall
adc
mov
movsl
lock
jl
dec
lahf
in
mov
out
lods
cmpsl
call
cmc
push
aaa
mov
cwtl
sbb
xchg
aas
arpl
js
into
cmp
cmpsb
das
clc
cmp
fsubrs
hlt
jno
jmp
es
into
addr16
ljmp
fdivs
xchg
out
push
fdivs
sub
add
mov
mov
or
bound
dec
aad
cmp
jl
dec
ret
lcall
xor
icebp
stos
lret
xchg
mov
cmp
fdivr
aaa
jge
test
mov
inc
xor
jne
sub
loope
mov
push
daa
mov
daa
inc
test
jae
arpl
ljmp
mov
jp
mov
addr16
xor
adc
rcll
out
jecxz
test
in
lcall
outsl
cmpsl
jge
mov
in
mov
dec
movsl
ljmp
ds
lds
out
test
lahf
jne
stc
ret
jae
dec
dec
cmp
dec
push
bound
ja
push
outsb
xor
jp
jmp
push
push
push
jns
insb
inc
arpl
dec
js
xor
dec
je
jns
jo
ja
cmp
pop
je
push
jne
dec
push
inc
pop
dec
dec
cmp
jns
dec
push
bound
inc
ss
inc
imul
dec
push
xor
xor
jae
inc
inc
jo
js
jne
bound
inc
pop
inc
jb
push
pop
in
mov
les
jns
imul
incb
inc
inc
push
popa
dec
push
jmp
dec
dec
jp
popa
pop
xor
inc
dec
addr16
bound
dec
dec
pop
push
outsb
inc
dec
aaa
bound
fs
pushl
xor
dec
aaa
jbe
ja
popa
push
jne
insb
push
js
bound
outsl
cmp
xor
xor
loopne
pushl
xor
jbe
jns
arpl
xor
inc
jns
ja
xor
push
push
ss
pushl
outsb
insb
pop
insl
inc
inc
je
dec
pop
inc
xor
and
aaa
push
dec
dec
inc
data16
mov
push
xor
imul
outsb
inc
pop
inc
dec
push
jo
pop
fs
jg
push
outsl
inc
jb
gs
popa
cmp
xor
dec
imul
pop
jne
cmp
call
inc
outsl
xor
je
jbe
arpl
dec
imul
outsl
push
cmp
dec
lock
decl
inc
inc
popa
jno
gs
bound
jns
dec
inc
inc
dec
popa
lock
jae
inc
inc
insb
dec
out
pop
js
ljmp
push
dec
jb
dec
bound
dec
popa
push
push
insl
insl
inc
jbe
inc
push
jo
xor
inc
add
sti
pop
mov
cltd
add
je
mov
adc
push
cwtl
xchg
push
cmp
aaa
push
adc
push
push
cmpsb
sbb
push
dec
fcom
dec
repz
push
loop
roll
daa
lock
int3
sahf
or
xlat
loopne
lock
enter
add
or
inc
sahf
or
dec
and
daa
fs
add
push
push
mov
fiadds
mov
mov
shlb
int
pop
cmc
inc
mov
jo
mov
fbstp
sub
outsb
sbb
jbe
push
or
push
mov
ss
int
adc
and
adc
adc
cmp
sub
cli
sbb
jbe
dec
lahf
xor
sti
xor
mov
lods
aad
rorb
int
cwtl
xor
loop
loopne
inc
xorb
idiv
divl
jbe
xchg
dec
dec
mov
push
mov
sti
pop
subl
cmpsb
xchg
push
xchg
adc
sti
decl
ja
fisttpl
push
std
adc
jp
daa
out
dec
mov
jbe
dec
push
popf
inc
faddl
ds
ja
js
rolb
aas
mov
sub
jbe
adc
or
adc
aas
sub
in
cld
aas
lds
inc
fstl
mov
push
inc
push
sbb
adc
add
dec
lock
push
ucomiss
popa
xchg
jbe
pop
sub
rcll
inc
add
idivl
xbegin
jbe
pop
insb
sti
mov
test
outsl
outsb
push
cmp
es
fadds
inc
adc
es
jb
cmp
loope
push
pop
xor
cmp
aas
add
int
aas
pop
scas
leave
les
push
push
push
mov
mov
data16
xchg
jo
out
icebp
sarl
add
data16
insb
mov
nop
mov
cmpsl
stc
int
pop
jmp
lds
jns
test
psubq
pop
sti
fiaddl
in
int
das
jge
insb
les
out
or
lahf
loope
out
dec
or
into
loope
ja
push
jae
pop
mov
arpl
out
pop
inc
icebp
dec
push
scas
imul
rol
push
in
ja
push
shrl
aaa
or
jne
out
pop
imul
gs
xor
cs
insb
pop
inc
sbb
gs
jb
stos
std
insl
pushl
popa
insb
push
arpl
outsl
outsb
cs
gs
jbe
insl
imull
add
pop
jb
dec
outsb
and
imul
push
imul
gs
mov
mov
outsl
arpl
or
pop
xor
fstps
inc
xor
inc
outsl
jne
pop
push
jne
data16
insl
jns
push
outsw
jb
popa
outsb
arpl
sbb
push
insl
mov
xlat
adc
sbb
jb
cmp
popa
shlb
loopne
dec
fs
push
mov
fs
mov
insl
ds
adc
mov
mov
dec
jmp
loop
popa
jb
popf
sub
jne
mov
jns
sub
insl
mov
cwtl
sub
sub
movsb
mov
pop
in
add
jns
mov
jb
jns
dec
mov
inc
js
push
dec
cmc
lods
inc
lock
and
popa
divb
rolb
mov
fucomi
push
jb
inc
fs
jae
imul
hlt
gs
outsb
sbb
or
inc
imul
insb
lret
sub
push
add
mov
pop
outsl
insl
shl
sbb
xor
sbb
lods
xor
fs
jb
scas
cmp
and
jae
mov
push
adc
xor
call
repz
push
jo
xor
mov
out
fwait
push
outsl
xchg
and
insl
fwait
inc
pop
dec
data16
push
je
xorb
neg
rcll
das
popa
imul
xchg
pop
adc
pop
mov
adc
push
jns
inc
mov
adc
shl
xchg
xchg
adc
jb
push
gs
pop
jb
shrb
jae
int3
mov
pop
cld
inc
dec
fsubl
gs
outsl
mov
dec
gs
mov
inc
jbe
jo
jae
fimuls
push
cld
jg
add
es
ffreep
xlat
movsb
outsb
mov
add
js
add
jg
jns
sbb
ss
sub
pop
aas
and
mov
daa
lret
push
fs
adc
rorb
inc
mov
push
shl
mov
sub
push
cmpsl
pop
inc
adc
adc
push
lcall
sbb
bound
repz
inc
pop
jg
jo
cmpsb
sub
cs
scas
jae
into
scas
mov
jbe
xlat
jbe
insb
jne
lret
out
mov
in
mov
inc
imul
inc
in
mov
loopne
xchg
arpl
scas
dec
add
inc
push
fnstsw
repz
sti
ss
jo
lods
popl
insb
push
pop
lds
adc
push
jae
mov
aad
jae
inc
rorb
loopne
xchg
sub
mov
in
imull
daa
push
sub
sbb
pop
inc
sbb
ret
or
pop
frstor
push
mov
mov
ret
xor
jno
xchg
das
les
inc
jo
test
cwtl
xor
adc
sbb
dec
dec
push
loope
jmp
add
addb
push
jecxz
out
call
and
es
jae
xor
add
lock
addr16
adc
jnp
popa
xor
loopne
sbb
notb
push
xor
inc
imul
mov
rcrb
and
cmpsb
insl
movsl
jecxz
int3
js
mov
push
push
in
imul
orl
xor
and
in
sbb
gs
js
jo
adc
jae
lock
into
rcl
loopne
fildll
inc
inc
xor
push
xchg
adc
nop
sub
daa
sub
fmuls
pop
je
incl
jne
push
shl
push
lock
cmpsl
xor
jmp
in
pop
sub
cmp
pop
sbb
ret
pusha
mov
fcomps
inc
add
pop
inc
lret
mov
outsb
incl
dec
add
pop
add
add
adc
enter
nop
inc
add
push
mov
incl
fs
add
enter
nop
inc
add
add
subl
inc
add
pusha
adc
pop
inc
xor
adc
enter
nop
inc
add
inc
push
add
add
add
nop
inc
add
add
subl
inc
add
fs
push
fnop
ljmp
push
and
add
add
test
adc
subl
inc
add
fs
add
nop
or
adc
nop
inc
add
add
or
sub
jmp
add
push
xor
orb
push
add
nop
inc
add
add
sub
inc
push
adc
mov
sub
subl
push
and
test
pop
add
xorl
and
adc
and
add
push
sbb
push
and
add
subl
adc
mov
bound
shll
fildl
sub
mov
add
mov
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
adc
mov
pushl
add
xor
pop
xor
xor
inc
mov
add
add
fnstenv
incl
add
hlt
add
add
add
mov
mov
jg
mov
addb
addl
incb
pop
mov
in
in
push
add
cmp
sbbl
sub
sbb
cwtl
add
cmp
xchg
fcmovnb
push
roll
adcl
test
mov
and
jnp
cwtl
mov
call
push
xchg
sbb
je
gs
sbbb
imul
cmp
sub
pusha
jo
call
nop
fs
je
rorb
and
ds
add
roll
add
push
sub
ds
gs
rclb
shrb
and
fdivrp
fistpll
loop
or
push
incl
jg
pop
les
call
add
stc
and
sbb
mov
outsl
push
push
pop
add
sbb
xor
lcall
lahf
sbbl
push
inc
das
adc
imul
add
push
aad
ret
stos
xchg
dec
sti
sahf
test
xchg
xor
mov
sti
push
fmul
fld
or
loope
pavgb
mov
rcr
stos
xor
dec
add
ja
popl
mov
lcall
pop
push
fucomip
push
addr16
push
fiadds
aad
imul
jnp
add
rcrl
fstpl
in
jns
loopne
aaa
addl
or
into
add
test
shrb
cmpsb
arpl
aas
push
sub
sbb
imul
test
fcmovne
add
dec
test
imul
out
cmp
mov
dec
pop
mov
shlb
dec
shrl
xchg
insl
pop
movsl
pusha
or
int3
shrb
xorb
rcrl
in
ret
rcrl
cld
or
jg
arpl
xchg
inc
mov
movsb
adc
rolb
test
imul
popf
bound
mov
xchg
stc
lods
jecxz
dec
sahf
dec
rep
xadd
adc
out
shlb
insl
mov
jno
imul
push
dec
sbb
cmp
dec
push
jge
out
mulb
xchg
test
mov
sub
sbb
loopne
mov
push
into
pop
lret
cld
aaa
insl
stos
push
pop
jl
imul
out
add
add
lds
inc
sbbl
pop
mov
int
imul
leave
and
xor
loopne
loope
inc
aas
cmp
clc
and
stc
xorb
ficompl
adc
dec
pusha
mov
inc
add
lods
mov
fcmovbe
push
mov
mov
cmp
loopne
sbb
cmp
push
cli
pusha
rcrl
fidivs
or
arpl
add
mov
sub
sti
shl
aam
pop
push
lgs
bnd
imul
cmp
rcrl
loope
and
xchg
ds
xor
std
xlat
jmp
push
filds
lret
push
mov
mov
cmpsb
xor
mov
or
or
add
fdivrs
dec
shll
dec
dec
mov
repz
xchg
mov
sbb
movsl
sbb
sub
cmpsl
imul
or
shl
int
mov
mov
je
stos
sbb
loopne
outsl
dec
rorl
loopne
imul
stc
jo
stos
pop
fbstp
dec
hlt
cmp
outsb
data16
add
in
dec
shll
inc
push
mov
popf
out
jnp
xor
ja
push
iret
pop
fmul
dec
sti
jmp
and
push
mov
pop
xor
pop
push
jae
xor
mov
sbb
iret
pop
lock
sbb
out
sbb
inc
jns
xchg
in
std
iret
cmpb
mov
sub
test
jo
add
ljmp
adc
fidivs
sti
and
mov
xor
jo
jmp
outsl
lcall
sub
push
in
sar
out
aaa
xor
in
fbstp
sub
addb
call
xor
jnp
jno
pop
push
sbb
in
loope
cmp
push
lahf
jo
xor
imul
jge
mov
dec
pop
mov
sar
jle
xor
leave
jnp
add
dec
push
add
mov
ds
push
add
popl
cmc
scas
call
adc
jb
xchg
and
push
lods
dec
add
cmp
dec
inc
jno
cld
or
xorb
inc
add
inc
lock
ljmp
enter
cli
mov
adc
sub
pop
cmp
xchg
dec
pop
ja
das
adc
testl
add
xor
in
fiaddl
sbb
sbb
cmp
or
mov
lahf
jbe
out
add
jle
mov
add
inc
imul
adc
pushf
aam
outsb
jbe
xchg
lds
pop
jo
and
in
je
lea
jo
mov
mov
jg
fbstp
mov
xchg
je
insl
lcall
fdivr
nop
or
or
or
lock
addb
jg
addl
add
test
test
add
in
pop
mov
or
sub
add
scas
push
adc
cltd
outsb
and
iret
push
push
mov
and
adc
mov
sti
aaa
push
push
clc
js
cld
xor
jo
bound
fwait
adc
inc
and
add
or
add
lock
inc
add
add
adc
out
repnz
add
add
fdivrl
mov
add
mov
adc
add
xchg
add
jbe
insb
add
mov
push
loop
movsb
dec
add
ja
dec
imul
add
shlb
xor
mov
push
xor
jl
inc
jp
pusha
add
shll
xor
xor
or
das
je
cs
adc
add
mov
subb
mov
cmpsb
imul
mov
es
jge
add
loopne
add
and
dec
pop
shll
insb
pop
loopne
pop
bound
pop
dec
or
jg
xor
xchg
or
add
pop
or
lods
jmp
push
xor
mov
lock
push
aad
jo
jne
mov
incb
add
mov
cld
add
lret
add
jno
add
add
les
xor
sti
add
xor
pop
push
sti
pushl
add
add
inc
add
cld
add
xor
sbb
add
outsl
mov
cli
push
add
xlat
lock
pop
xor
jg
test
and
and
sub
sub
xor
lret
xor
xchg
add
cmp
mov
loop
addr16
imul
decl
jne
jbe
xchg
mov
pop
pop
lahf
incl
testb
jge
incl
cld
pop
aas
mov
mov
mov
aas
add
cmp
sbb
aas
sbb
idiv
add
add
xor
rorb
or
push
add
add
fiaddl
mov
add
lock
mov
sub
jbe
sub
mov
pop
xchg
mov
dec
inc
add
out
sub
loopne
sub
mov
and
fucomi
jl
mov
and
sbb
xor
dec
inc
in
or
nop
inc
sahf
mov
rcrb
lock
dec
jp
stos
sbb
cld
lret
xchg
stos
gs
imul
in
jns
das
mov
mov
xor
add
mov
jg
scas
clc
push
int
pop
inc
mov
nop
pop
sbb
dec
ss
mov
lods
in
scas
cli
aaa
mov
in
scas
mov
or
out
lods
mov
adc
hlt
cmp
push
lock
out
lret
add
lret
or
push
cmpsb
into
add
cmp
sbb
pop
jecxz
pop
jl
mov
fld
pop
and
pop
movq
mov
xor
xchg
or
mov
lret
jno
decl
add
mov
xchg
push
int
mov
sbb
int
outsl
incl
mov
pop
xchg
xor
es
mov
neg
out
mov
add
adc
std
sub
inc
shlb
std
xchg
or
lcall
jmp
decb
mov
sbb
sub
mov
cltd
cmp
loopne
bound
mov
jg
adc
sbb
mov
call
addb
pop
jae
or
adc
imul
stos
mov
sbb
add
inc
sub
sbb
call
push
or
and
adc
rolb
sarb
fwait
call
add
add
add
test
push
cmp
adc
fldt
mov
add
repz
outsb
add
les
fimull
scas
push
push
add
cmp
sub
lods
sbb
aaa
push
xor
lods
ret
ficoms
inc
or
push
mov
pop
inc
push
cmp
add
add
mov
mov
cmp
add
sbb
mov
cmpsb
mov
daa
push
add
pop
push
rcrl
call
rcr
mov
xor
xor
pusha
testl
push
adc
and
faddl
add
push
lock
out
add
xchg
or
enter
add
mov
or
cmp
insb
jmp
sar
xor
addr16
inc
dec
shlb
push
jg
fwait
mov
add
push
and
add
mov
aas
xor
push
dec
jo
add
or
int
insb
mov
sbb
outsl
cmp
fisubs
cwtl
pop
mov
dec
mov
lahf
push
dec
mov
add
fdivrp
mov
add
inc
sbb
sarb
add
add
xchg
sets
pop
adc
xor
mov
adc
or
pop
aaa
add
inc
dec
sbb
fcmovnb
inc
dec
lea
pushf
cmp
adc
shr
add
movl
mov
rcr
sub
push
loopne
das
sbb
add
push
test
dec
pusha
aaa
push
in
loopne
and
push
cmpsb
cli
shl
or
sub
mov
ljmp
xor
mov
mov
out
cmp
or
add
ret
loopne
cmpsb
std
jle
loop
push
pop
jbe
loopne
lods
iret
add
mov
repz
loopne
mov
dec
add
lods
shlb
sub
add
push
rorl
mov
stos
add
loopne
out
nop
sbb
inc
sti
loopne
and
in
xor
push
push
into
push
rcrl
lods
sub
cli
daa
call
loopne
and
jo
imul
lcall
add
fneni(8087
sbb
add
iret
cmp
dec
xchg
test
cmp
loopne
outsb
inc
jnp
fisubl
xor
push
js
xor
imul
or
inc
and
loopne
sbb
xlat
push
pop
ret
dec
mov
adc
shl
roll
push
outsb
fistl
addl
sti
jp
cmovp
filds
stos
mov
gs
or
fidivs
mov
push
ljmp
int3
xlat
loopne
stos
xor
push
xor
or
cmp
lods
add
loopne
cmpsl
or
loopne
stos
imul
insb
loopne
stos
lret
addb
adc
cmp
push
jmp
jp
xor
stos
repz
push
add
sbb
or
add
ret
mov
scas
add
sbb
push
push
shll
addr16
loopne
jae
push
outsb
push
or
pop
fwait
sbb
scas
mov
rorb
sbb
cmp
adc
xchg
inc
add
mov
push
popf
mov
xlat
out
push
push
fimull
pop
or
jo
loop
lods
cmp
mov
pop
dec
push
aam
jge
lcall
dec
and
sub
js
adc
or
cmp
loopne
movl
sub
jbe
pushf
xchg
sbb
mov
testl
dec
lods
loope
fsubrl
pop
fmuls
ficompl
lods
mov
jb
mov
int
or
mov
or
mov
out
pop
inc
sti
ret
loopne
or
adc
out
loope
jg
mov
fidivrs
sahf
cmp
xchg
sub
and
or
fldt
add
jo
lods
push
roll
or
or
jo
loopne
orb
or
add
inc
pop
mov
fwait
jno
and
arpl
jo
mov
dec
test
xorb
push
lock
or
lods
mov
scas
sbb
mov
lock
jns
jo
rcrl
adc
out
lock
inc
sti
jp
lock
mov
mov
jg
mov
dec
cmp
jo
inc
sbb
lock
cmp
lcall
cwtl
lock
imul
sbb
stos
push
ret
and
mov
mov
jecxz
or
ds
inc
loopne
pop
inc
inc
shlb
push
movsb
jmp
xor
das
or
push
nop
inc
imul
push
xor
lock
jo
mov
jns
jbe
jnp
test
pusha
and
xor
cmovae
adc
inc
and
xchg
xor
sbb
push
pop
je
push
adc
add
push
cmp
mov
adcb
mov
out
lock
xor
ds
inc
test
add
jbe
and
dec
cmpsb
shl
sbb
outsl
imul
sbb
add
sbb
lock
mov
and
lcall
test
jl
and
sbb
jbe
add
jno
test
xchg
lock
icebp
popf
adc
add
xor
pushf
cwtl
adc
cmpsl
push
sahf
cmpsb
incb
repz
std
cli
fildl
lock
xor
test
loope
mov
fildll
mov
add
les
inc
and
fisubrl
es
pop
mov
cld
mov
pop
add
add
cmp
and
add
mov
testb
add
add
add
jge
push
add
dec
jg
aaa
jg
add
fildl
dec
inc
add
add
add
movl
outsl
nop
popa
add
pop
add
inc
add
add
bound
in
add
push
jl
add
push
add
add
add
adc
adc
insb
add
aaa
fs
xor
sbb
in
or
push
add
add
ss
add
fadds
daa
add
std
incl
cmp
pushf
and
bound
nop
or
add
add
lock
add
add
add
sbb
lods
pop
cmp
add
movb
add
nop
or
adc
outsl
mov
aas
adc
or
add
add
mov
or
mov
push
add
xor
add
dec
add
jp
adc
pop
js
xor
add
push
adc
aaa
jnp
or
add
add
adc
and
insb
adc
adc
add
add
or
add
loope
mov
enter
add
add
xchg
insl
mov
add
add
add
adc
aaa
sbb
add
dec
add
push
sub
cmp
pop
add
mov
lcall
lcall
jo
add
add
xor
add
add
fwait
mov
add
sub
add
add
adc
push
and
mov
inc
or
adc
adc
sub
aaa
sub
nop
add
or
push
add
decl
add
imul
add
add
pop
add
fisttps
popa
pop
add
xor
xor
adc
sti
xor
int
repnz
add
xor
mov
push
add
push
sbb
add
xor
jecxz
add
xor
out
ret
xor
add
adc
mov
pop
cmpsb
xor
test
cld
int
adc
stos
xor
stos
dec
add
xor
scas
inc
add
xor
int
mov
add
xor
mov
add
xor
mov
cld
add
xor
add
ds
xor
xor
add
int
mov
cmp
adc
add
xor
add
ss
int
cld
add
xor
shlb
xor
xor
int
xor
xor
add
cs
xor
loop
sub
pop
cld
int
in
add
xor
add
shrb
add
xor
add
jg
aaa
jg
add
xor
in
xor
add
and
xor
add
sti
aaa
xor
and
add
sbb
inc
add
aaa
jg
add
and
and
add
es
jg
aaa
cmp
sub
add
sub
repz
xor
push
xor
das
add
xor
cs
xor
xor
add
repz
sub
int3
add
cmp
and
repz
pop
add
inc
sbb
add
repz
jg
push
sbb
push
sbb
push
push
add
jg
add
dec
adc
dec
adc
insl
add
add
adc
outsb
sub
pop
push
push
add
and
push
stos
pop
push
sub
pop
push
into
pop
push
push
adc
repnz
push
cmp
push
push
push
push
push
pop
adc
cmp
pop
imul
add
pop
adc
and
add
dec
movsb
add
add
dec
push
add
incb
adc
adc
pop
adc
or
rcr
pop
or
inc
push
or
push
or
inc
push
or
mov
or
pop
nop
adc
add
movups
push
pop
xchg
jo
cmp
cmp
sbb
mov
adc
js
cmp
xchg
dec
cmp
cwtl
mov
dec
push
xor
cmp
in
adc
xor
pusha
mov
adcl
push
xor
sbb
jp
push
dec
adc
xchg
sub
out
push
fadds
inc
adc
mov
movsb
xor
and
sub
adc
push
test
es
dec
adc
push
dec
adc
pop
sub
adc
and
dec
adc
ds
data16
js
sbb
adc
adc
sbb
data16
sbb
dec
sbb
sbb
add
notb
adc
mov
sub
adc
adc
bound
lods
push
add
bound
pcmpeqb
fdivrs
or
adc
push
push
insb
sbb
mov
or
adc
pop
inc
inc
pop
add
push
sub
add
xor
adc
xor
and
inc
xor
out
fists
pop
pop
xchg
pop
pop
mov
add
add
mov
stos
add
mov
outsl
mov
mov
stos
adc
add
test
cli
outsl
push
pop
adc
dec
pop
lods
add
aas
dec
pop
scas
jle
scas
mov
pushl
pop
lret
pop
nop
add
int3
add
int
pop
lret
shrb
add
add
pop
xchg
add
xchg
xlat
add
das
cmp
xchg
add
pop
xchg
add
pop
xchg
insb
pop
xchg
pop
mov
pop
cltd
add
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
sahf
cli
add
pop
lahf
lret
sub
mov
sub
add
rolb
movsb
xor
movsl
xchg
pop
cmpsb
incl
rolb
cmpsl
add
pop
test
es
test
add
pop
mov
sbb
add
incl
mov
sbb
mov
sbb
mov
sbb
mov
pop
mov
movsb
pop
mov
add
mov
adc
mov
incl
mov
add
pop
rolb
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
jg
incl
movb
pop
movl
pop
leave
add
mov
pop
or
lcall
and
pop
or
and
add
push
or
and
cmpsb
and
and
call
popf
and
sahf
and
mov
and
lods
and
and
pusha
and
gs
mov
incl
sub
aas
or
or
and
shlb
aaa
or
or
xor
call
and
or
and
or
sub
sbb
and
or
and
or
and
or
and
or
and
mulb
or
xchg
add
nop
and
mov
add
and
or
pop
or
and
sbb
or
in
decl
sbb
or
and
sbb
push
or
and
or
and
adc
mov
adc
adc
adc
cmp
adc
mov
and
xchg
and
or
inc
imul
mov
and
xor
or
std
pop
ficomps
add
pop
or
and
pop
or
imul
pop
push
and
or
push
or
push
or
and
ljmp
push
or
and
and
mov
push
and
push
and
and
outsl
decl
push
and
pop
and
pop
and
pop
and
and
and
sub
inc
or
jg
mov
sub
cmp
pop
and
or
or
cmp
pop
and
or
fisttps
hlt
xor
shll
or
and
das
or
and
or
and
or
and
or
and
or
and
push
daa
and
ret
das
clc
ljmp
and
mov
and
iret
sbb
scas
and
fcomi
jmp
stos
or
and
sbb
jg
jg
sbb
stos
and
push
or
sahf
adc
arpl
adc
sbb
adc
gs
push
and
mov
or
daa
or
pop
daa
in
outsl
es
inc
popa
ljmp
cld
or
es
ss
sbb
pop
or
and
or
and
mov
cmp
mov
xchg
jle
push
or
or
cmp
or
cmp
xor
lcall
and
or
and
or
sub
or
sub
out
push
adcl
sub
mov
mov
pop
or
add
sbb
or
add
sbb
call
add
sbb
add
push
or
add
adc
fildl
adc
fldl
adc
add
push
or
add
or
jecxz
or
cmc
inc
cmp
insb
or
add
out
pop
or
ss
mov
add
or
add
pop
or
in
push
in
pop
or
pop
jo
push
or
or
push
push
push
or
push
push
or
or
push
or
adc
dec
or
adc
dec
or
adc
decl
adc
push
dec
or
sbb
inc
or
sbb
inc
or
sbb
sar
incl
sbb
push
inc
or
and
ds
and
cmp
inc
pop
icebp
jg
cmp
cmp
sbb
or
decl
sub
xor
sub
xor
sub
push
xor
xor
cs
decl
xor
sub
xor
sub
xor
push
sub
cmp
or
push
and
push
pop
or
inc
push
push
or
inc
push
sbb
inc
push
sbb
inc
push
sbb
inc
push
pop
or
dec
push
push
or
dec
push
adc
dec
push
adc
dec
push
prefetchwt1
in
clc
or
or
push
or
sarl
push
or
push
push
or
sub
mov
xor
xor
pop
push
pop
insl
xor
aaa
xor
xor
xor
cmp
jp
xor
xor
mov
aas
xor
xor
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
mov
roll
dec
xor
xor
push
sub
push
xor
xor
xor
addb
xor
push
xor
dec
xor
xor
push
repnz
xor
xchg
adc
and
xor
popa
pop
xor
xor
xor
xor
xor
pop
pusha
push
xchg
pop
xor
pusha
xor
xor
pop
mov
ret
arpl
loop
adc
test
adc
stos
adc
lods
adc
lods
adc
mov
lds
bound
sub
pop
xorb
mov
mov
adc
mov
mov
loop
adc
fdivs
mov
and
xor
push
mov
mov
rclb
rcll
ret
insl
xor
jno
push
js
push
jg
rcrb
xlat
cmpsb
adcl
add
sub
jmp
xor
adc
out
pop
add
adc
cs
adc
int
cld
call
push
add
js
pop
and
mov
mov
fwait
mov
and
pop
mov
test
outsb
push
and
xchg
and
mov
add
push
cmp
repz
repz
repz
in
in
add
jns
out
add
out
sahf
lods
fldcw
out
stos
fisubrs
sahf
out
lahf
pushf
sahf
push
rcrl
aam
rclb
js
xchg
cld
jg
fbstp
out
out
jb
repnz
push
insl
push
mov
cmp
rep
lea
push
repz
fldt
push
repz
data16
arpl
cmp
repz
fisubs
jns
out
popa
push
shlb
push
out
sahf
out
push
xchg
push
xchg
lahf
out
sahf
push
xchg
push
xchg
push
nop
add
repz
lahf
dec
push
sahf
dec
out
sahf
out
dec
pushf
dec
fwait
sahf
out
sahf
dec
lcall
out
inc
xchg
inc
xchg
inc
dec
dec
dec
cs
inc
aas
ds
push
mov
cmp
cmp
cmp
repz
test
test
xorl
or
xorb
xor
iret
repz
jge
jl
repz
repz
jp
jns
repz
sub
pop
sbb
cmp
pop
sbb
jns
out
pop
adc
jl
out
adc
mov
pop
pop
idiv
aas
mul
pop
jae
push
inc
mov
ds
cmp
insl
jle
cmp
mov
and
push
cmp
sbb
xor
movsb
add
push
lahf
pop
jle
fs
imul
cmp
xlat
push
and
outsb
jp
pop
add
or
std
nop
inc
std
daa
mov
in
inc
ljmp
je
fldl
adc
scas
aaa
imul
mov
cmp
bound
jmp
push
xchg
mov
ret
and
sub
mov
or
lcall
cmp
and
and
sub
orb
mov
aas
popw
sbb
mov
in
test
or
mov
push
out
jns
sub
adc
cmpsb
add
dec
sub
push
dec
add
add
outsl
mov
stc
mov
sbb
subb
rorl
mov
pop
adc
pop
outsl
dec
data16
outsb
dec
xorb
inc
jge
mov
lret
xchg
ss
and
xchg
mov
mov
push
mov
jge
decl
lret
xchg
xchg
dec
mov
cmp
mov
bound
pushl
push
xchg
xor
xor
mov
xor
xor
cs
jmp
mov
test
lret
sahf
aas
sti
rorl
adc
mov
push
gs
inc
jge
push
call
xchg
movsl
jg
xor
mov
sub
mov
jl
sbb
mov
pushl
xor
xor
xor
pop
xor
popa
ret
imul
and
jl
fistpll
lds
xor
xor
xor
xor
xor
xor
decl
xor
xor
imull
scas
dec
sarb
or
outsl
and
push
int3
pop
or
dec
xor
xor
xor
xor
xor
xor
xor
xor
jne
rolb
in
pop
insb
jno
fs
idiv
push
ret
outsl
out
pop
jb
movsl
inc
mov
mov
pop
xor
mov
dec
jo
dec
jo
ljmp
mov
ds
fldt
dec
pop
pop
adc
lret
ss
mov
decl
ss
ss
ss
inc
rcrb
jl
in
sahf
sub
std
sbb
lods
xor
clc
sub
shl
push
jmp
incl
xor
xor
ja
mov
xor
ljmp
arpl
out
adc
cmp
fidivrl
push
cmp
cmp
cmp
cmp
cmp
cmp
rorl
mov
mov
and
imul
pop
repz
cltd
lret
jo
dec
cmp
aas
aas
sarl
lcall
add
and
in
mov
pusha
mov
jg
loope
and
cmp
mov
xor
mov
or
xor
xor
xor
xor
pop
xor
mov
cwtd
clc
ud0
pushl
xor
xchg
xlat
xor
mov
dec
scas
inc
scas
pushl
and
lahf
pushl
jl
jge
xchg
inc
push
sub
cmpsl
or
or
fdivl
dec
ret
loop
add
ss
pop
shll
mov
mov
jg
mov
out
push
data16
inc
adc
ret
mov
fwait
push
sub
pushl
push
aaa
mov
inc
aaa
shlb
cmp
outsb
cmp
xorb
cmc
insb
push
sbb
decl
clc
filds
adc
sbb
cmp
cmp
cmp
cmp
xor
jmp
mov
stos
lds
ret
and
icebp
cli
add
add
sti
push
call
cmp
cmp
fidivrl
inc
push
cmp
jge
cs
loop
lcall
movsb
cltd
add
pusha
or
loope
test
jb
xchg
ds
ds
ds
mov
or
sub
lret
push
mov
add
js
nop
data16
call
jmp
xor
xor
xor
xor
xor
xor
xor
aas
inc
cmp
push
sub
lcall
mov
dec
push
jge
add
cmp
enter
icebp
cmp
cmp
mov
cmp
mov
es
mov
std
pushw
sbb
jmp
xlat
cmp
cmp
cmp
cmp
cmp
out
pop
jle
repz
lahf
cmp
inc
test
pop
fs
fldcw
sahf
out
pop
adc
fdivrs
sub
sahf
cmp
aas
add
out
aaa
push
or
sub
sbb
js
sbb
bound
cmpsb
jns
and
pop
je
lahf
xor
xor
xor
and
pop
scas
or
push
mov
inc
cs
push
pxor
adc
jmp
push
pop
lock
jmp
sbb
sbb
sbb
sub
sub
cmp
ss
ret
cmp
cmp
mov
fsubs
cmp
pop
mov
and
aas
jnp
jg
addl
xchg
mov
outsl
xchg
xchg
xchg
imul
fwait
arpl
mov
lcall
cmpsb
cmpsl
push
test
scas
scas
dec
mov
mov
mov
mov
mov
mov
ret
cmp
mov
leave
lret
int
iret
das
rcl
shrl
aad
xlat
daa
fstp
fistps
loope
jecxz
lcall
in
out
jmp
out
out
psllw
repz
div
pop
stc
cli
sti
add
lcall
addb
mov
pop
xchg
movl
inc
inc
mov
mov
lock
decl
mov
dec
dec
add
push
push
push
add
ret
xor
adc
adc
ret
xor
add
add
add
add
add
xor
and
and
ret
xor
add
add
add
add
std
pop
and
loop
sbb
incl
sbb
add
adc
add
sbb
mov
out
fistps
sbbb
xchg
and
addl
or
add
nop
clc
incl
scas
js
pop
sbbl
pusha
add
inc
mov
rclb
rorl
addb
sbb
ret
add
in
in
ret
into
add
sbb
add
in
adc
jg
fildl
and
sti
bswap
sbb
daa
rcr
sbb
dec
out
add
dec
rolb
add
sbb
popf
rolb
imul
fwait
insb
insb
sub
pop
dec
cld
lea
je
lcall
imul
add
call
mov
inc
lcall
rclb
inc
add
orl
lret
sar
outsb
push
xlat
inc
xchg
cld
mov
cmpsl
rolb
rclb
outsb
push
pushf
je
loop
icebp
pushl
xor
inc
xor
aaa
lock
push
roll
add
or
inc
push
dec
jae
jb
lret
add
add
ja
xchg
rorb
or
or
add
sbbb
lds
mov
ja
lock
sahf
inc
loop
insl
ret
sub
or
cltd
rorb
fiaddl
jo
push
ficompl
rorl
rolb
pop
mov
or
add
or
add
xchg
lret
jg
loop
inc
inc
xor
sub
add
jle
sub
add
aad
add
inc
adc
xor
push
loop
arpl
push
je
inc
hlt
dec
push
add
adc
pop
and
setge
lods
in
dec
nop
stos
add
add
jb
outsb
rcr
lds
mov
push
push
pop
or
nop
push
add
add
pusha
push
gs
jg
mov
mov
pusha
and
insb
inc
jl
adc
pusha
xor
cmpb
sbb
push
std
mov
je
jo
das
das
ja
jo
bound
fdivr
in
lcall
push
call
insb
lcall
gs
push
out
inc
jbe
outsl
lcall
stos
loopne
mov
mov
setae
push
test
or
lcall
outsl
adc
jl
and
iret
xor
cs
xor
or
cmp
xor
loop
outsb
inc
add
clc
mov
cmp
insb
mov
push
mov
xchg
xorl
mov
mov
or
jne
mov
ja
fwait
andl
xor
pop
add
sbb
pop
jecxz
add
jg
test
push
pop
test
pop
addl
lods
sub
repnz
xor
adc
push
add
cs
notl
std
jmp
incl
sti
xor
jmp
add
sub
add
in
call
lods
lods
inc
hlt
popa
adc
and
ret
cld
enter
mov
xor
fidivl
and
call
mov
cmp
cmp
sub
sbb
sub
add
jmp
dec
sub
sbb
sbb
pop
shlb
in
std
push
out
push
cmc
aaa
and
jmp
ljmp
mov
rep
pop
movsb
xor
inc
mov
movsl
add
popa
or
pop
cmc
push
insl
testb
add
mov
out
mov
aad
add
in
hlt
jo
mov
mov
dec
stos
mov
fcomip
mov
sub
adc
ds
sub
cmpsl
fdivl
pushf
rcrl
icebp
movsb
fdivrs
test
gs
ja
jg
sahf
jo
cmpsl
mov
jbe
div
sbb
in
lcall
sti
jmp
jns
add
insb
test
inc
fmuls
cmpsl
dec
and
ja
add
mov
outsl
jae
mov
imul
mov
adcb
sub
rol
adc
rcr
add
sti
movsb
push
in
mov
push
jecxz
clc
add
mov
je
add
inc
ljmp
gs
xchg
ja
ret
fwait
insl
cwtl
jo
popa
adcb
sbb
jle
pushf
gs
arpl
loope
into
jg
jmp
and
js
sub
add
mov
test
test
pop
std
stos
mov
mov
mov
xchg
jl
stos
mov
addl
out
pusha
xchg
pop
mov
andb
nop
xor
icebp
mov
jg
out
dec
and
mov
popl
push
jno
add
push
out
xor
push
pop
hlt
lcall
outsl
in
sbb
inc
add
stc
add
shrb
mov
jbe
and
in
outsl
jg
jne
xchg
xorl
sarb
test
nop
jg
inc
mov
push
decl
sbb
call
add
sbb
mov
nop
pop
pop
pop
cmpsl
inc
pop
mov
xor
or
mov
push
xor
ret
jg
inc
or
or
scas
adc
sbb
push
test
scas
inc
movsl
ss
push
push
ret
or
sbb
sbb
pop
cmc
das
ficompl
add
push
out
adc
loope
sbb
push
inc
or
jmp
mov
inc
jp
movsl
add
push
out
add
fstpt
fdivl
dec
divl
mov
cwtl
cmp
ja
lock
pop
add
clc
dec
push
mov
mov
decb
dec
add
adc
pop
sbb
sbb
mov
push
icebp
add
push
shrb
insb
loop
ja
cld
pop
imul
or
inc
std
jmp
clc
mov
sbb
hlt
mov
add
popf
and
xlat
int3
filds
ffreep
lock
scas
add
movsb
mov
mov
dec
stos
cli
push
dec
mov
das
cli
outsl
pop
mov
pop
mov
xor
cld
lock
in
icebp
add
dec
dec
dec
es
mov
cmpsl
pop
dec
pop
mov
dec
mov
inc
jo
decl
inc
orb
arpl
mov
or
cmc
fistpl
xchg
sbb
loop
add
testb
jbe
fwait
fbstp
sbbb
mov
scas
adcl
sbb
xchg
mov
inc
xchg
cmpsb
add
jmp
pop
pop
inc
je
dec
dec
mov
cmpsb
jae
std
pushl
scas
inc
mov
scas
pop
add
aas
rol
adc
add
ss
loopne
and
cld
mov
scas
mov
mov
mov
mov
mov
inc
aaa
ss
pop
ret
push
push
mov
xchg
push
push
inc
mov
ss
fisttps
jmp
in
sbb
add
loopne
in
adc
test
add
push
pop
decl
or
popa
mov
jae
xchg
pop
mov
bound
xchg
pop
mov
test
lcall
mov
popf
mov
lahf
jno
fwait
mov
test
xor
mov
jp
xchg
mov
mov
sbb
cli
scas
add
pop
add
call
andb
mov
out
cli
clc
mov
das
out
and
rol
aad
add
and
jecxz
xor
roll
xor
ret
push
inc
imul
mov
sub
add
out
lds
or
sbb
std
outsl
add
jecxz
sub
or
mov
jae
mov
loop
push
lret
mov
add
int3
loope
or
push
clc
out
cmc
add
and
and
add
adc
lret
or
out
push
rorl
data16
xchg
xor
add
inc
jecxz
sbb
sbb
push
or
mov
cmp
sub
or
jae
sahf
mov
xchg
mov
and
sbb
push
clc
std
mov
hlt
out
sbb
sbb
jmp
cltd
mov
jno
mov
outsl
cli
mov
cmpsb
inc
nop
lods
mov
sbb
jmp
lock
xchg
xchg
cltd
mov
lahf
addb
adc
lsl
jno
call
sbb
sbb
pop
out
push
es
decl
mov
mov
je
addr16
adcl
ljmp
xor
gs
push
push
add
addr16
pop
cmpsl
push
mov
push
mov
inc
pop
andb
and
mov
leave
adc
xchg
xchg
or
mov
jb
or
ja
jg
pop
mov
dec
pop
inc
jb
test
aas
jo
pop
inc
push
mov
push
adc
add
jb
and
dec
mov
add
shlb
incl
lret
lret
and
loop
in
fs
add
in
jmp
or
call
mov
data16
xorb
mov
dec
dec
dec
mov
dec
dec
add
xlat
pop
mov
sarb
ja
in
sub
add
scas
sbb
jg
push
aam
push
es
das
cmp
push
shrb
ss
les
movb
push
or
fidivs
add
jg
sub
std
adc
add
sbb
icebp
add
scas
push
push
je
mov
mov
jns
lahf
jg
jmp
cltd
jnp
test
xchg
test
xchg
push
mov
cld
dec
cli
jg
sbb
cbtw
inc
mov
mov
xchg
jnp
lcall
fs
mov
mov
dec
xchg
call
cld
jmp
ret
xor
lret
sub
adc
pop
ja
lahf
add
xchg
mov
loop
inc
lods
mov
stos
mov
scas
dec
mov
add
mov
mov
dec
mov
mov
stos
xchg
lea
mov
inc
test
nop
dec
xchg
ds
jmp
add
or
xor
bsr
inc
mov
loop
cli
and
mov
sub
test
repz
pop
test
mov
repnz
mov
repz
cld
call
repnz
xor
js
pusha
mov
fldl
mov
xor
stc
sahf
adc
push
push
mov
adc
in
cli
adc
fadd
sarb
aam
xor
fmuls
fcmovu
xor
add
xchg
xchg
je
insl
outsl
fistl
mov
arpl
or
roll
mov
subb
hlt
add
add
loope
mov
dec
mov
sar
or
or
jnp
ja
fbstp
push
data16
mov
add
ja
jns
jp
add
xor
sbb
pop
inc
stos
mov
pop
add
pop
in
out
adc
mov
xchg
outsb
and
popf
popa
adcb
aas
clc
jg
les
sub
adc
or
or
adc
psrad
pop
cmp
sbbb
or
cmp
loop
add
cwtl
cltd
sbbl
cmpsb
mov
cli
test
pop
stos
movsb
dec
inc
adc
hlt
repnz
pop
jg
sti
mov
incb
cltd
test
add
mov
and
ret
sbb
cld
jmp
mov
jecxz
ror
les
push
mov
cmpsb
pop
add
inc
jne
cmc
ja
mov
mov
mov
dec
mov
bound
inc
push
fdivrp
pop
sub
mov
test
and
adc
incl
mov
pop
add
inc
push
add
scas
adc
ltr
jge
jae
ja,pt
add
jns
jl
jae
add
push
cs
aaa
jle
in
cmp
xor
push
adc
fs
cli
out
push
add
call
into
push
add
scas
xchg
shr
pop
lock
cli
add
add
or
push
ljmp
pushl
mov
aam
loope
xchg
lods
inc
mov
add
imul
int
mov
daa
fst
inc
ret
imul
mov
or
mov
add
rol
in
mov
hlt
aaa
dec
sub
iret
iret
add
out
movl
pop
fs
ss
mulb
sbb
adc
add
incb
and
sbb
sub
sub
jecxz
mul
sub
mov
ja
stos
in
push
jmp
mov
scas
cli
adc
jecxz
out
fwait
les
add
pushl
or
rolb
shll
rcr
outsb
mov
incl
fxsave
aaa
adc
cmpsb
pop
sbb
ljmp
insb
and
call
idiv
push
dec
dec
mov
int
add
cmc
clc
add
jg
jl
lret
aam
mul
hlt
add
mov
dec
inc
cmpsl
inc
push
sbb
pop
jno
or
inc
add
xor
fmuls
sub
jo,pn
cltd
push
mov
sarb
and
xchg
cwtl
jecxz
dec
dec
inc
call
sahf
dec
inc
inc
inc
incl
js
jmp
xor
clc
imul
add
int3
aam
daa
pushf
in
shll
les
std
add
inc
add
into
or
clc
sub
call
enter
fldl
loope
mov
sbb
rol
data16
cmp
jbe
ss
xor
push
dec
cmp
xor
xor
aaa
sbb
push
shrb
and
ret
out
mov
push
int
xor
aas
fnstsw
and
mov
ja
aaa
lds
ds
shll
cld
mov
dec
lea
dec
mov
filds
rcrb
add
pushf
pop
push
push
mov
xchg
pop
outsl
mov
pusha
pop
push
mov
out
les
and
ja
adc
aaa
orl
cmp
ljmp
mov
mov
scas
scas
dec
adc
stos
mov
mov
decl
mov
mov
xor
add
add
adcl
lcall
fistpll
in
jmp
add
cmc
daa
and
cmp
mov
icebp
or
xchg
add
dec
pop
and
mov
lock
outsl
xchg
movsl
add
pop
movsb
pop
inc
jne
jl
incl
dec
push
pop
pop
or
adcb
push
push
scas
clc
incl
jle
cwtl
subb
xor
lret
ss
pop
rorb
add
inc
movsb
pop
push
push
scas
pop
xchg
push
inc
das
jp
dec
push
incl
inc
mov
add
mov
mov
inc
mov
mov
clc
or
lea
jb
sbbb
xchg
xchg
xorl
imul
std
int3
sbb
lret
arpl
aaa
cltd
es
aas
push
lret
daa
xor
jnp
data16
inc
lcall
popa
subl
addl
cltd
bound
loop
sbb
outsl
mov
stos
insb
xchg
pushf
xchg
jle
test
mov
mov
mov
stos
dec
cmpsb
mov
jg
sub
stos
cld
mov
lods
mov
mov
mov
mov
mov
rcll
outsl
in
inc
dec
dec
pop
push
inc
push
add
adc
mov
enter
cmp
lcall
mov
dec
cmpsb
add
mov
pushf
sahf
push
xor
cmp
sbbb
jae
xchg
push
pop
push
mov
dec
pop
xchg
jge
push
cld
xchg
mov
pop
arpl
or
add
push
push
popf
js
jl
cs
push
jle
xorb
mul
sbb
stos
and
outsb
push
rorb
mov
add
das
int3
ror
daa
pusha
hlt
sub
pop
mov
ror
insb
push
std
jmp
jmp
mov
dec
pop
dec
pushf
dec
dec
pop
test
mov
pop
add
cmpsl
dec
pop
pop
aam
rcrl
or
mov
push
inc
jle
cmp
cmp
cmp
pushf
add
sub
pop
arpl
push
jnp
push
loopne
inc
jo
mov
jne
or
sbb
or
movd
lcall
add
adc
push
pop
push
cmpsb
adc
cwtd
rclb
xchg
nop
xchg
jg
inc
xorl
fadds
xchg
pusha
sahf
cltd
lcall
xchg
xchg
sahf
cli
jns
scas
add
adc
out
add
push
repnz
movsl
jo
mov
out
add
push
mov
mov
les
ret
std
add
and
into
les
mov
and
es
xor
or
scas
add
cld
or
push
call
pusha
in
in
mov
sbb
sti
mov
sbb
test
push
cmp
add
mov
dec
or
adc
push
sbb
or
hlt
inc
decl
fisubl
aaa
xor
cmp
add
cmp
cli
mov
cmp
cmp
cld
xor
daa
ret
sub
dec
inc
inc
fcomip
icebp
add
add
inc
pop
dec
loop
cmp
cmp
popa
and
mov
data16
xchg
nop
jnp
test
test
jg
xchg
lcall
fildl
push
cmp
mov
out
jmp
sub
mov
fst
test
subl
xchg
jo
mov
push
test
mov
pop
mov
add
stos
mov
and
repz
call
pushf
push
stos
ljmp
add
loope
jle
je
mov
push
dec
cld
jmp
pop
dec
loop
xchg
fwait
insb
adc
sub
test
push
fs
ljmp
add
sbb
test
and
jp
stos
mov
mov
mov
mov
sbb
popa
add
cmc
div
je
roll
mov
outsb
arpl
fbld
mov
mov
sbb
or
push
hlt
aaa
fidivrs
mov
in
cwtl
test
mov
mov
movsl
xchg
arpl
ja
push
pop
push
cwtl
ja
jae
ficoml
dec
add
clc
mov
mov
mov
inc
add
mov
pop
pop
pop
out
add
sbb
inc
loope
stos
mov
out
inc
test
int3
popa
add
mov
mov
loopne
jge
mov
pop
loopne
mov
imul
cmp
add
fs
aas
es
and
cmp
loope
cli
sub
xor
sub
sub
sub
xor
aaa
loop
and
jg
jb
mov
mov
push
std
imul
dec
inc
add
scas
pusha
or
les
jne
pusha
sti
incl
mov
aaa
and
les
into
cmp
add
xor
cmp
jnp
add
or
xor
or
and
pusha
add
lcall
and
add
and
les
decl
inc
xor
movl
jnp
leave
cmp
aas
lret
das
clc
cmp
sub
fsubrs
inc
push
jg
push
dec
repnz
or
cli
bnd
adc
call
out
loop
mov
xchg
jmp
jmp
sbb
or
stos
ja
dec
dec
dec
ret
clc
imul
jl
adcb
sbb
mov
js
push
outsl
arpl
cmp
scas
push
and
test
pop
inc
push
notb
pop
adc
sbb
mov
and
xchg
subl
mov
decl
xchg
jb
mov
or
arpl
adc
jae
decl
popf
xchg
add
xchg
int
mov
mov
mov
in
xlat
fildll
mov
aam
or
jle
pop
pop
or
out
out
in
jg
and
mov
and
and
and
fcom
mov
xor
mov
pop
push
add
out
mov
pop
pusha
sbb
pop
sub
in
inc
or
nop
sbb
fcomip
dec
sbb
int3
pop
sbb
add
ss
subb
lods
fbstp
loope
in
fcmovnu
xor
ffreep
inc
xor
or
stos
call
xor
cli
add
cmpb
in
cs
add
test
or
inc
fildl
test
mov
ljmp
in
pop
pop
push
scas
pop
outsl
pop
sbb
sbb
imul
les
std
mov
loop
clts
out
sbb
jmp
psubb
arpl
sahf
mov
dec
inc
hlt
decl
scas
stos
mov
add
nop
mov
jg
cmp
lods
popa
je
pusha
js
enter
add
clc
ljmp
cmpsb
lock
mov
pop
fsubs
or
mov
pop
mov
mov
or
mov
adc
loopne
dec
aaa
adc
cmp
push
ja
stos
decl
cwtl
gs
outsl
xchg
jo
inc
cmpsl
add
push
mov
jmp
mov
add
out
enter
mov
cli
sbb
lcall
xchg
cwtl
jbe
jg
cs
test
jnp
sbb
or
outsl
clc
fcomip
mov
dec
add
dec
push
scas
push
push
ss
push
push
pop
fs
push
insb
insl
outsb
nop
jo
add
je
jbe
js
rorb
sub
pop
xchg
call
mov
nop
jae
mov
addb
xchg
fildl
lock
and
lock
inc
inc
add
mov
add
or
std
xchg
add
repz
push
pop
pop
pop
mov
addr16
popf
arpl
outsl
and
mov
lcall
sub
orb
mov
test
mov
rorl
push
scas
push
test
shlb
mov
inc
xchg
mov
outsl
cli
dec
push
xorb
test
add
xchg
ret
xchg
imul
add
insb
inc
mov
push
xor
inc
push
mov
popa
lock
jae
pop
fdivl
aaa
testb
cmpsb
leave
cmpb
hlt
nop
jmp
jbe
dec
pop
add
mov
sub
adc
push
insb
mov
add
je
push
jo
add
mov
es
popa
fs
bound
jb
jb
inc
mov
mov
inc
jb
popa
je
mov
push
mov
hlt
xor
jg
cltd
push
pop
lcall
mov
dec
xchg
outsw
jb
ljmp
xchg
sbb
push
jb
arpl
lods
clc
data16
loope
insb
push
or
jp
fwait
push
je
shll
dec
nop
rolb
xor
out
mov
je
xor
outsb
fwait
insb
cli
adc
clc
aaa
lds
fs
mov
or
pushl
decb
ret
insb
clc
fcmovnu
js
push
in
and
mov
mov
inc
inc
imul
inc
push
adc
mov
push
bound
ja
sub
push
inc
dec
mov
mov
add
inc
mov
mov
or
push
xor
dec
inc
inc
stos
adc
dec
stos
xchg
lods
inc
push
lods
or
jg
ljmp
dec
dec
dec
mov
push
xchg
scas
inc
push
or
mov
adc
decl
adc
add
inc
mov
inc
dec
mov
lock
inc
dec
icebp
add
fisttpl
nop
jno
add
and
mov
dec
dec
mov
lret
inc
xor
sub
popa
mov
in
inc
pushf
outsl
outsb
outsb
mov
jo
lcall
int3
sub
daa
pop
outsb
arpl
mov
bnd
outsb
je
and
outsb
addr16
cmp
shlb
inc
outsb
arpl
cmp
and
sbb
ret
sarb
push
ds
add
jo
jecxz
call
popa
insb
imul
xor
mov
bound
outsl
xchg
mov
and
adc
xor
inc
mov
mov
sahf
gs
mov
or
cli
jns
add
inc
add
das
sub
push
pushf
jno
or
pushl
mov
xor
rcll
bound
push
jae
into
inc
addr16
push
inc
outsb
outsl
pop
jno
jae
dec
xor
add
xor
dec
jge
inc
fcoml
sbb
jno
xchg
imul
ss
xor
fimull
rclb
rcrb
enter
orb
mov
loop
cmp
pop
cmc
adc
insl
push
orb
mov
imul
enter
mov
outsb
jae
pushf
mov
xor
sub
xchg
mov
xchg
sub
add
mov
push
jo
xor
in
jne
mov
outsb
repnz
clc
in
adc
gs
imul
inc
mov
push
mov
push
add
nop
jae
loopne
pop
xor
icebp
add
sbb
cld
jo
add
add
jo
lods
imul
mov
lods
shlb
jle
lcall
push
cld
pop
push
or
mov
sub
mov
sub
hlt
scas
add
pop
dec
jp
mov
pushf
imul
add
popa
mov
add
js
push
nop
xor
jg
pop
mov
je
lods
lock
lcall
repz
pop
mov
inc
sub
addr16
jg
hlt
jle
dec
into
adc
adc
jle
dec
fcomps
and
inc
sti
jmp
std
jnp
push
mov
or
cmp
test
jns
inc
cmp
mov
sub
push
xchg
or
xchg
rcll
test
lock
add
lcall
xchg
jo
xchg
mov
lea
push
aas
xchg
sub
mov
jae
outsl
mov
xor
dec
xor
frstor
add
and
and
add
call
ret
jmp
es
jb
xor
inc
outsb
mov
adcb
rorb
mov
lea
mov
mov
xor
add
je
mov
push
push
imul
fs
add
pop
add
and
data16
imul
and
fbstp
xchg
adcb
int3
or
and
add
push
mov
inc
lcall
mov
push
inc
pop
fs
shlb
cs
cmpsb
fidivl
push
icebp
sbb
xor
fdivs
push
pushf
push
sbb
xchg
inc
repnz
add
dec
pop
jge
add
mov
call
test
jne
inc
adc
call
lock
push
push
cs
adc
ljmp
hlt
in
inc
nop
ja
adc
fisttps
inc
add
sub
add
jmp
pop
and
aaa
sar
mov
mov
add
movsb
push
call
aas
pop
ret
push
ret
pop
nop
in
jle
test
add
add
add
pop
stc
dec
jbe
decl
jp
jne
push
mov
push
sub
xchg
add
add
call
dec
pop
popa
pop
fcomps
and
cmp
scas
iret
std
ds
lock
leave
call
mov
push
call
cmp
adc
mov
jo
addb
pop
fmull
dec
test
je
push
lea
jne
mov
add
sti
andb
push
clc
dec
enter
hlt
or
test
js
inc
inc
add
fcmovu
add
push
cld
lea
std
repnz
sar
sbb
jb
inc
call
mov
loope
inc
cli
sbb
add
outsb
je
cmp
jne
call
ljmp
ret
push
test
cmp
ljmp
pop
pop
icebp
add
mov
add
pushf
add
int
push
jecxz
jmp
sbb
test
pop
nop
pop
sbb
outsb
mov
rolb
push
inc
cmp
or
add
xchg
sbbb
and
sbb
and
jb
mov
mov
xor
mov
xor
dec
cwtl
push
push
pop
mov
faddl
push
shl
or
jae
and
mov
scas
push
mov
add
out
inc
dec
or
jne
pop
loope
or
lea
loopne
add
das
adc
push
mov
inc
jg
divb
xor
inc
cmp
add
leave
ret
dec
add
imull
push
lea
push
cmp
add
orb
mov
mov
xor
add
sahf
incb
mov
xchg
sbb
cld
or
jl
imulb
js
xchg
test
mov
jge
add
jge
add
call
or
out
mov
jmp
mov
jmp
mov
ret
inc
cmpb
mov
adc
add
je
cmp
jbe
std
mov
outsb
jne
push
or
and
test
je
sub
mov
sahf
sbb
add
push
pop
fbld
rcrb
push
enter
ret
popf
cli
push
stos
adc
sbbl
push
push
jg
sbb
push
pop
rorb
test
fcomi
lea
cld
orb
xor
shlb
pop
pop
ret
clc
add
pop
incl
mov
andl
test
or
arpl
or
adc
rcrb
jl
sbb
inc
or
leave
scas
push
shlb
add
mov
and
adc
xchg
add
cli
outsl
mov
out
jb
cld
mov
push
add
push
rorb
fwait
mov
push
mov
jb
ret
xchg
mov
cld
jo
out
rolb
mov
call
pop
pop
mov
mov
inc
inc
add
ss
adc
addl
push
lds
or
pop
adc
xor
dec
jb
push
mov
mov
push
ret
fistpll
shll
sarb
mov
add
mov
add
sbb
mov
xor
push
rolb
shll
rolb
add
dec
div
ljmp
hlt
jbe
add
cmp
adc
mov
outsl
scas
pop
cli
ds
fs
pop
sub
leave
add
push
push
in
pop
je
jl
fisttpll
data16
shll
push
mull
frstpm(287
fndisi(8087
pop
or
ret
or
movsb
push
ret
sub
push
jbe
pop
mov
adc
jmp
cmp
add
xchg
add
adc
sbb
dec
dec
je
push
xor
shrl
xor
mov
push
in
adc
cmp
loope
sub
push
loopne
clc
pusha
mov
mov
add
outsl
or
outsl
sbbb
test
sub
push
jne
and
ljmp
and
inc
jl
movsb
inc
repz
cmp
or
cmp
add
je
or
std
mov
inc
sub
lods
add
hlt
push
shll
dec
sub
loopne
pop
pusha
jge
call
jecxz,pt
popa
inc
loope
clc
mov
pop
loopne
in
sbb
inc
mov
push
push
or
sbb
jg
sub
daa
loop
clc
fs
faddl
adc
pop
push
test
add
adc
jb
push
xchg
pusha
andb
adc
pop
jge
loopne
add
pusha
add
xlat
call
push
mov
sbb
push
add
add
loop
add
or
pop
out
sbb
xchg
ret
mov
sti
push
lret
inc
pusha
daa
dec
mov
ret
jl
and
xor
fucomip
pop
cltd
jle
jbe
mov
inc
or
ljmp
lds
or
in
loopne
adcl
jecxz
mov
fildl
dec
dec
mov
or
pop
mov
jb
rclb
es
jmp
add
repz
ds
dec
pusha
inc
xlat
mov
xlat
je
add
xor
push
pop
dec
adc
mov
lcall
jmp
xchg
add
pop
imulb
pop
jmp
sub
sub
or
add
inc
sub
adc
aas
inc
push
loopne
and
push
and
push
push
popa
push
ljmp
loopne
mov
addl
outsb
adc
mulps
test
inc
movsb
pusha
pusha
add
clc
call
xor
add
push
adc
loopne
loopne
pop
xchg
push
faddl
push
push
pusha
mov
jl
je
cli
sub
pusha
in
aam
add
mov
jg
hlt
outsl
pop
mov
shl
jp
call
sahf
cs
or
or
cmp
push
mov
clc
sub
insb
loopne
stos
jne
add
js
push
sbb
push
or
inc
jae
jmp
pusha
jg
outsl
sbb
call
xchg
add
ja
movb
incb
lea
xor
add
verr
jne
pusha
inc
add
nop
call
test
jmp
pusha
pop
loope
pusha
dec
or
in
or
lea
add
mov
mov
mov
xchg
movsl
add
or
shll
sbb
in
inc
loop
lcall
incb
and
jge
xchg
push
loopne
sbb
push
pusha
test
mov
lret
pusha
and
inc
cli
push
jg
mov
pop
add
mov
test
je
add
mov
mov
sbb
or
push
inc
adc
shr
or
das
mov
mov
je
and
mov
push
and
or
in
lock
inc
movsb
cmpb
pop
outsl
mov
rorb
int3
ret
sahf
lock
mov
mov
std
fwait
or
adcb
mov
dec
jne
adc
pop
aaa
ljmp
add
cltd
push
test
rol
mov
mov
popa
add
dec
pusha
add
cmp
mov
jbe
adc
data16
cs
lea
jno
call
mov
mov
jno
add
les
icebp
pop
notb
push
push
pushl
sbb
mov
mov
sub
push
cmp
in
cmpsb
push
je
jge
aas
std
push
shrl
push
add
inc
sub
incb
inc
xchg
cmc
or
mov
xchg
divb
jp
jg
add
mov
sbb
push
bnd
pop
mov
fmull
push
sarl
pop
add
inc
and
jl
adc
test
incl
lods
jp
xor
pop
xchg
push
les
jae
mov
or
fdivs
jne
mov
push
pop
or
sbb
les
jmp
out
clc
inc
mov
addb
mov
repnz
fstpt
data16
aam
repnz
jne
push
call
cmpl
xor
decl
xor
cmp
add
test
adcl
aas
jno
test
add
cmp
sbbb
call
lods
xor
push
decl
outsl
jg
les
test
push
adc
icebp
inc
cmp
sbb
pushl
add
test
mov
jno
and
xor
mov
sbb
add
je
push
in
sub
lock
inc
lock
pop
pop
jno
cmp
and
jmp
inc
jo
lock
add
mov
pop
ret
push
enter
jno
lret
adc
lock
lods
aam
add
inc
xor
ret
pop
inc
sbb
push
push
xor
add
jo
xorb
or
adc
lea
andb
add
out
dec
push
fs
jg
pop
adc
jb
inc
jo
push
push
cmp
hlt
adc
lock
push
add
icebp
dec
jg
dec
inc
mov
leave
inc
push
loop
fnstsw
mov
and
push
jb
xor
push
push
inc
pop
loop
sbbb
enter
daa
push
call
pop
test
adc
sub
cs
xor
dec
arpl
arpl
fldt
ljmp
arpl
sub
inc
out
fdivl
insb
dec
lea
push
mov
xor
pop
fs
inc
xor
jbe
lock
adc
or
push
push
pop
ljmp
add
mov
dec
in
dec
push
and
mov
mov
sub
jg
lahf
mov
xor
mov
cmp
jge
add
mov
cld
lea
call
sahf
jp
jge
sbb
inc
into
pop
push
shlb
mov
lret
fwait
mov
push
fs
cmc
test
jmp
mov
call
ss
cmp
enter
jb
ss
call
mov
push
sub
or
fs
mov
push
add
add
push
mov
sub
mov
mov
fs
xor
int3
adc
inc
mov
push
faddp
dec
jb
call
pop
cmc
jg
pop
mov
push
push
lea
jno
lods
mov
call
add
ficompl
inc
or
mov
lea
clc
xor
ljmp
cmc
lock
cld
sar
add
mov
jo
jne
adc
adc
and
push
pop
cld
or
inc
lar
mov
jne
add
adc
int3
add
mov
addl
add
xor
push
add
mov
push
push
mov
call
jne
hlt
jbe
mov
dec
xchg
xchg
scas
push
inc
iret
jmp
xor
cmp
icebp
sbb
xor
sub
inc
pop
subb
cmp
mov
decl
in
add
add
add
cmpl
push
rorl
dec
jne
mov
icebp
decl
jle
add
sbb
dec
add
ret
add
jne
xchg
adc
push
jge
rdtsc
mov
jae
cmp
scas
or
ret
rolb
dec
loopne
sar
dec
je
andl
mov
orl
or
fdivrs
xor
ljmp
mov
test
add
push
xor
pop
pop
jp
data16
andl
push
lret
and
cs
xor
fdivl
ret
mov
movsb
sbb
in
or
push
loop
mov
mov
jp
je
xchg
mov
loop
push
lcall
clc
mov
lock
je
call
mov
add
shr
jb
addb
cmp
jne
mov
aam
sbb
pushl
jne
adc
pop
cmp
cld
add
mov
ja
push
icebp
scas
add
ss
lcall
push
jl
jmp
xor
mov
fcomps
add
inc
mov
je,pn
xor
add
pop
mov
jmp
hlt
pushl
rolb
loop
cs
xor
xchg
pshufw
cmp
lea
loope
push
dec
add
cld
sub
hlt
and
mov
jb
dec
test
std
adc
mov
or
sahf
jno
adc
push
jne
push
std
ja
jae
loope
mov
push
push
push
add
or
mov
enter
adc
aas
jmp
or
or
icebp
ja
push
inc
rorb
mov
jb
je
pop
icebp
cmpsl
xchg
xor
sbb
cmpsb
push
lcall
push
mov
adc
add
fstpt
call
mov
ret
add
xchg
or
jp
or
mov
mov
je
or
inc
cmpl
hlt
mov
jg
push
push
je
and
or
test
clc
les
jmp
sti
add
cmp
test
sub
or
call
xlat
cli
shll
or
hlt
fistpll
add
sub
repnz
mov
and
sub
inc
jecxz
mov
ljmp
je
jno
incl
je
imul
add
xor
push
xchg
jmp
mov
mov
push
dec
sbb
jbe
loopne
mov
xor
adc
pop
sbb
inc
sub
pop
pop
pop
xor
lock
xor
lock
ljmp
xor
jg
pop
and
push
in
loopne
mov
push
xor
adc
sub
out
inc
adc
lods
jbe
cwtl
test
or
push
decb
mov
inc
mov
enter
lea
pop
loopne
add
jmp
les
ljmp
jb
call
xor
push
imull
xor
add
xchg
leave
stos
add
jae
in
ds
or
pmuludq
jle
adc
dec
mov
clc
call
sub
je
or
pop
fisubl
lds
fimuls
push
std
mov
je
jl
outsb
inc
mov
jl
xchg
lcall
push
add
dec
mov
or
rclb
fcmovnu
sub
test
mov
paddd
adc
nop
call
mov
int
jp
je
mov
or
add
xchg
repnz
fisubrl
cmp
imul
jnp
pop
add
test
out
call
jne
ss
repz
pop
push
pop
add
cmp
pushf
push
stos
mov
or
jnp
adc
fnstsw
clc
xor
jmp
outsl
loopne
cli
andb
mov
sub
fwait
in
cmp
stos
push
push
mov
orl
lock
adc
cli
push
int3
sarb
rclb
ja
loop
add
jnp
sbb
lcall
in
push
repz
sbb
rorb
call
scas
pop
lahf
sbb
and
pop
in
pop
adc
mov
mov
push
push
sahf
sbb
cli
push
pop
aad
call
add
sbb
add
rclb
lock
in
in
dec
and
cmp
mov
enter
cmp
fcoml
stc
mov
jecxz
inc
mov
push
leave
insb
add
inc
or
pop
push
add
enter
add
inc
and
in
add
and
push
cli
jmp
push
xchg
add
mov
aad
fsubrs
in
dec
call
sub
or
inc
add
push
rclb
shl
add
mov
in
out
or
fistps
push
push
inc
mov
fcomps
out
clc
rol
push
push
xchg
add
cmp
jp
je
adc
fisubrl
sub
test
pop
test
addr16
pop
ret
jg
imul
js
jge
mov
mov
inc
cmpb
mov
pop
lock
or
mov
xor
sbb
roll
xchg
js
insb
push
ljmp
sarl
ljmp
push
inc
in
push
sub
jl
or
cmp
icebp
das
pop
mov
jbe
je
data16
xchg
xor
je
push
fimull
adc
sbb
adc
lea
push
sub
stos
pop
adc
add
out
mov
inc
scas
push
mov
call
aas
mov
jnp
inc
les
add
mov
add
in
rorb
or
outsb
out
test
push
or
inc
xchg
data16
faddl
fildll
jo
push
xor
push
mov
je
call
in
add
push
sbbl
int3
jo
push
jo
push
xor
pop
js
cmp
mov
jne
push
into
aam
shlb
pop
inc
sahf
mov
loop
jl
pop
lods
push
push
add
fildl
push
test
stos
pop
loopne
mov
cs
mov
in
je
mov
xchg
loopne
in
mov
sbb
mov
jne
out
test
pusha
sbb
lcall
imul
nop
jbe
jo
or
rolb
inc
inc
mov
outsl
sbbb
rcrb
mov
or
inc
or
mov
push
inc
hlt
pop
add
adc
in
fists
inc
mov
mov
dec
insb
sahf
mov
lods
fbstp
movsb
push
pop
jb
add
cmpsl
ss
call
cmpsb
pusha
jle
push
aad
test
out
pop
mov
and
and
jge
or
mov
add
sbb
insb
bound
insb
inc
es
push
test
push
call
add
add
mov
ds
add
lock
jo
mov
loopne
js
pop
fistpll
testl
or
callw
in
pop
add
call
inc
sbb
xor
xor
push
hlt
addl
mov
inc
call
inc
lock
sbb
cmp
jg
inc
push
xor
loopne
pop
divb
rclb
jp
cmovb
pop
icebp
test
xor
inc
lea
lret
lcall
push
fadds
add
adc
dec
add
or
or
and
test
push
divb
xor
jbe
lock
or
fists
sahf
add
loope
jl
add
test
loopne
addb
lock
clc
push
fisttps
mov
jp
test
jg
cld
add
sbb
push
mov
lret
pop
or
bound
inc
and
lods
dec
cmp
push
lea
mov
jb
pop
jl
sub
add
call
ret
add
fiaddl
xchg
and
cmp
add
into
out
inc
or
mov
clc
pop
addl
sub
or
mov
arpl
push
sbb
jbe
flds
mov
fdivr
jmp
or
arpl
aam
inc
dec
repnz
in
sbb
mov
cs
mov
pusha
insl
ret
sti
sbb
jns
or
or
push
lea
jbe
clc
inc
aaa
cld
adc
adc
jb
repnz
jge
and
fisttpl
imulb
je
jb
dec
movsb
pop
clc
sbb
fs
or
ss
scas
jl
out
pop
lock
mov
ja
xor
and
xor
inc
mov
adc
or
lock
or
add
add
int3
repnz
inc
int
lods
or
pop
push
add
mov
sbb
push
sub
pop
adc
add
decl
loopne
and
adc
xor
loopne
xchg
dec
lea
mov
adc
insb
mov
loopne
push
adc
pop
jb
add
cmc
mov
push
adc
add
mov
or
pop
nop
dec
lea
loopne
mov
or
fadds
test
mov
and
in
inc
sbb
outsl
mov
cmp
jnp
fs
fistl
push
add
inc
mov
push
pusha
or
pop
andb
sbb
loopne
nop
out
fimull
sbb
scas
out
aaa
xsave
not
add
or
and
loopne
fidivs
inc
and
popa
xchg
je
pop
add
pop
lods
pop
push
loop
in
lods
push
push
pop
cld
push
and
push
call
sub
cmpsb
fcomps
push
cmovne
cmp
clc
xchg
mov
loopne
dec
jb
hlt
mov
syscall
cmpb
xchg
add
decl
fiadds
add
lret
out
les
adc
call
data16
xchg
dec
push
sub
fiaddl
cmp
xchg
add
ljmp
or
mov
push
out
cli
imulb
mov
jbe
hlt
test
stos
bound
repz
pop
push
xor
out
ja
scas
movb
bound
jmp
add
add
in
inc
adc
xchg
sti
push
mov
dec
add
push
push
sbb
decl
adc
push
adc
aam
push
insb
dec
data16
out
sbb
ljmp
jne
fs
cmp
push
mov
or
inc
jno
aad
add
jmp
mov
cmpsb
in
daa
cli
outsl
scas
inc
sub
pop
gs
jo
dec
hlt
pop
mov
shl
andb
sti
or
pop
xor
scas
cli
mov
add
das
xor
cmp
in
mov
jl
add
hlt
adc
sbb
push
push
js
pop
mov
testb
clc
rolb
sub
jg
ss
xor
xor
inc
cmp
lock
jo
in
jle
add
je
ljmp
add
or
and
mov
jmp
xchg
icebp
stos
sbb
sbbl
dec
jo
ljmp
add
inc
icebp
gs
lock
dec
lock
pop
or
mov
pushf
and
shrb
enter
mov
mov
mov
es
lock
lock
mov
icebp
pop
andl
test
xchg
jo
movsb
mov
mov
nop
jo
and
lock
xchg
pop
mov
xchg
arpl
sahf
je
aaa
outsb
incl
push
inc
scas
call
pop
sub
out
mov
pop
mov
adc
fisttpl
cmp
pop
pusha
ljmp
inc
mov
call
dec
sarb
and
mov
cmp
je
add
pop
mov
xchg
add
push
push
rolb
test
or
daa
and
mov
xor
les
mov
push
movb
mov
jecxz
add
add
xor
sbb
cmp
outsl
xor
adc
movl
jge,pn
jle
sbb
pusha
in
mov
sti
stos
dec
in
xor
testb
sbb
in
lock
xor
and
sbb
inc
rolb
mov
sub
push
outsb
inc
insb
iret
mov
jo
push
sar
xor
jbe
sbb
mov
or
mov
jb
call
hlt
add
and
adcb
sbb
cmp
cmovb
cmpl
adc
add
push
jno
call
andl
cmpsb
push
fcomps
cmp
ds
cmp
mov
fs
dec
pop
jo
xorb
testb
bound
mov
jnp
fidivs
andl
in
ror
hlt
decl
dec
ljmp
ss
push
push
test
xchg
div
xchg
movl
sbb
jo
jp
xor
ret
inc
notl
je
loopne
sti
add
sbb
adc
dec
mov
shr
test
inc
lcall
dec
repz
andl
sbb
push
and
adc
shrb
int
mov
push
cmp
jbe
xchg
sub
sbb
jb
cmc
jo
push
jmp
test
lock
add
xorb
inc
push
adc
inc
cmp
cmp
cmp
cmpsb
jl
jl
cltd
mov
adc
cmp
jg
pop
push
jbe
addb
cld
sti
jne
mov
mov
test
add
adc
mov
ret
mov
mov
ja
or
shr
or
cwtl
push
mov
sbb
push
lcall
sbb
mov
test
pushl
pop
add
sub
push
and
lock
push
iret
jmp
or
add
xor
mov
out
jmp
jg
lock
or
shll
and
clc
add
sub
scas
add
jno
addr16
lock
pop
roll
pusha
sbbb
cs
cmpb
scas
or
push
sbb
stos
mov
adc
push
dec
xor
mov
test
add
mov
and
jg
mov
push
insl
mov
pop
push
and
xor
imul
addb
mov
cltd
das
add
xor
orb
jg
push
or
sbb
test
cld
add
out
clc
lcall
inc
mov
push
add
jl
add
dec
fstpt
mov
sti
dec
inc
jo
inc
jb
leave
pop
lock
push
in
sub
xor
push
jp
popa
inc
push
outsb
jmp
repnz
jb
movsb
repz
jo
pusha
lea
add
pop
pop
scas
cli
in
sbb
cmpsl
call
mov
stos
loop
xchg
loopne
pop
fadd
jo
in
test
ljmp
push
add
cmp
ljmp
pushl
push
push
ret
add
cmpsb
pusha
push
mov
push
lock
jno
jbe
add
push
xorl
outsl
pop
adcb
pop
push
icebp
test
cmp
lock
xor
push
adc
decl
call
jno
dec
push
sub
add
mov
xor
mov
sbb
fwait
ljmp
push
adc
pop
adc
aam
insb
pop
mov
mov
adc
sbb
in
lods
push
divb
test
pop
shrl
out
jl
mov
mov
outsb
clc
inc
adc
cmp
sahf
mov
lock
mov
add
test
inc
fwait
sbb
adc
adc
dec
push
jle
test
adc
mov
or
call
dec
and
mov
imul
jl
ss
test
stc
sbb
xor
ljmp
adc
pop
fnstenv
jl
mov
xor
or
icebp
js
add
arpl
incb
xor
cmp
add
mov
repz
add
or
outsb
loopne
orb
adc
ret
or
xor
xor
add
scas
ljmp
adc
push
pop
pop
fisubl
aaa
add
adc
jbe
pop
or
pop
or
add
add
xchg
lods
fisttps
fidivl
or
sbb
mov
cmc
mov
xor
add
or
inc
sbb
mov
push
test
movsb
sub
add
xor
mov
and
jg
das
int3
add
shl
pushf
jne
push
add
arpl
mov
ss
xor
or
les
or
je
adc
push
xchg
mov
and
mov
add
clc
sbb
jo
push
pop
aad
jbe
adc
and
sbb
pop
call
imul
xor
sbb
fisttpl
jmp
push
sub
pushf
jmp
dec
lea
ljmp
pop
test
add
jl
clc
movsb
les
imulb
sbb
jne
divb
mov
or
ss
push
mov
test
or
dec
pusha
or
sub
sbb
sub
dec
mov
add
xor
xor
ljmp
out
je
mov
mov
push
fdivrp
shr
or
mov
push
in
adc
and
or
sub
sbb
sti
mov
xor
daa
push
jb
xchg
cmpb
jle
push
rcl
js
mov
in
jmp
push
mov
pop
adc
add
pop
sub
dec
and
loop
leave
movsl
lods
mov
jle
add
cli
call
or
or
pop
ret
out
add
sub
or
pop
sub
add
sarb
or
and
enter
push
icebp
cs
inc
adc
add
push
xchg
adc
mov
xadd
pop
dec
testl
andb
sbbl
sub
and
fimull
or
clc
pop
incl
mov
je
test
aas
add
pop
push
test
adc
lock
sbb
mov
add
adc
or
cmpb
push
aam
rclb
int3
or
cli
pushl
ss
ljmp
pop
push
pop
inc
push
inc
test
es
lret
subb
push
add
sbb
push
cmpsb
imul
add
xlat
clc
or
addl
jl
add
mov
pusha
roll
or
xchg
add
lea
addl
sbb
ret
inc
call
and
rorb
cmpsl
push
add
or
cmp
stos
jg
call
jne
repnz
mov
adc
call
add
jle
pop
decl
add
stc
dec
aas
inc
fimull
inc
sbb
lahf
ljmp
xorl
push
je
ret
mov
pop
data16
push
adc
xchg
add
mov
mov
ret
jp
rolb
or
insl
rclb
stos
xorb
sar
sub
add
inc
push
xchg
mov
push
ljmp
mov
fdivr
xor
loope
ret
jbe
cmpb
add
dec
or
out
xchg
fdivs
cmp
and
and
push
mov
lds
xor
ret
sub
je
push
enter
lock
test
xor
mov
or
dec
add
call
push
adc
push
inc
cmp
das
cmp
push
push
mov
rorl
repz
mov
rcrb
mulb
fadd
lods
or
or
or
jmp
mov
mov
and
mov
shlb
add
or
fisttpl
push
add
ret
fidivl
imul
xadd
into
jecxz
outsb
pusha
out
int3
scas
mov
mov
cld
aaa
add
push
jg
sbb
repnz
repz
mov
and
xchg
sbb
test
scas
sarb
inc
cmp
push
sub
mov
push
mov
test
jne
mov
out
mov
shlb
mov
add
jmp
hlt
or
inc
xor
fwait
aaa
add
loopne
jae
cmp
ja
or
sub
dec
jmp
out
dec
add
jecxz
jle
in
xor
inc
test
hlt
jmp
test
loopne
call
push
adcb
mov
ja
xor
mov
clc
ret
call
add
ret
test
fsubrs
mov
rcr
outsb
cwtl
jl
or
mov
loopne
mov
call
test
push
lea
sar
sahf
inc
dec
or
cli
pop
cli
pusha
sub
fwait
loope
cli
pusha
inc
jl
mov
loopne
pop
inc
adc
movb
sar
inc
inc
add
loope
sbb
loopne
mov
mov
loope
ret
movsb
rorb
mov
jb
loopne
xchg
mov
lea
inc
and
inc
in
mov
test
cmp
sti
cs
jb
clc
mov
call
mov
andb
add
push
push
test
test
popa
fwait
ror
pusha
xchg
add
inc
and
push
fmull
or
jne
or
pusha
pop
dec
sub
cmc
push
scas
jne
mov
mov
jb
add
lds
test
mov
data16
or
mov
je
mov
sub
push
pusha
cmp
fcomip
aaa
mov
adc
mov
inc
clc
call
mov
pusha
sub
xchg
fmuls
cmc
jno
out
pop
les
fs
les
jmp
mov
cmp
int
loopne
in
jl
inc
cmpsb
inc
or
movsb
cmpsb
cld
pop
fcomps
and
xor
ds
cli
lcall
or
and
testl
fs
push
xor
loopne
mov
cmp
stc
loopne
mov
mov
mov
push
or
cmp
inc
mov
sbb
shll
or
loop
or
pop
sub
arpl
out
rclb
addb
push
push
subb
test
sti
loopne
mov
pop
pop
add
lock
inc
int3
cs
pop
push
inc
pxor
das
clc
or
mov
sti
ja
lea
addl
jl
jg
lea
push
mov
and
jp
je
add
push
push
push
jb
adc
je
add
xor
mov
leave
cmp
loopne
iret
lock
jl
jne
push
andb
mov
adc
add
aaa
sbb
loopne,pt
or
jp
add
es
testl
jo
cmpb
adc
adcb
scas
mov
pop
negl
sarb
rolb
aam
adc
add
or
divb
test
dec
jns
in
push
and
bound
ja
inc
sbb
jmp
push
add
popf
pusha
sub
pop
lea
loopne
lock
loopne
rcrb
pop
leave
popa
sbb
hlt
dec
or
movl
add
clc
in
sub
imul
imul
add
and
and
aas
into
pusha
ja
xor
mov
and
in
pop
int3
loopne
pushl
jo
sahf
je
data16
pop
and
push
jg
lock
lea
or
out
mov
inc
lock
xlat
out
clc
inc
and
shl
cltd
or
mov
decl
cmp
je
jecxz
push
lods
rolb
pop
aam
ljmp
call
push
dec
mov
xor
data16
incb
rcrl
or
rorb
add
or
mov
mov
repz
insb
add
pop
or
xor
sub
lock
xor
pop
mov
mov
mov
adc
cli
push
aaa
sbb
jne
mov
push
repz
inc
decl
ljmp
int
inc
cmp
inc
leave
xor
in
mov
das
mov
pop
jecxz
sar
pushl
jle
mov
cs
lock
lock
cmp
mov
push
mov
add
jle
inc
cmp
push
aas
call
or
or
cmpb
pushl
push
push
call
push
adc
ret
xor
inc
movl
sub
mov
or
andb
and
mov
pop
adc
xchg
cmp
mov
mov
out
nop
mov
aad
push
out
add
jae
jecxz
dec
jecxz
divb
mov
and
jmp
pop
lea
mov
rolb
or
mov
sub
es
xchg
add
adc
cld
mov
mov
add
aas
sub
mov
ficompl
aas
repnz
push
or
xor
std
jg
or
nop
lock
lea
sub
xchg
repnz
push
sbb
adc
and
mov
mov
pop
inc
lock
inc
test
sub
inc
jmp
sbb
ret
sub
dec
mov
mov
inc
filds
rcrb
lods
xor
fs
inc
push
push
test
mov
cmp
dec
cs
dec
in
mov
jg
out
out
or
add
int3
push
xorb
sbb
lock
mov
or
push
push
push
je
rcrl
orl
xor
stos
or
jl
and
xchg
add
pop
dec
mov
xor
pop
cmc
loop
pop
add
mov
lcall
mov
and
or
mov
and
add
add
dec
ret
call
nop
jo
jecxz
sbb
push
lea
fidivs
xor
testb
sbb
adc
cmp
or
lcall
sub
icebp
jne
jbe
mov
jbe
je
jl
test
call
mov
pop
or
and
rorb
ljmp
mov
pop
mov
lock
rol
lock
shr
add
xor
dec
push
sbb
call
inc
aam
add
pop
cmp
mov
in
sub
and
jnp
add
sub
mov
add
test
mov
pop
sbb
adc
push
fadd
push
les
dec
lock
xchg
mov
cmpb
cmp
js
mov
aam
call
inc
sub
dec
add
dec
je
cmc
sbb
xor
xor
adc
and
fucomi
dec
cmp
mov
adc
add
mov
lea
or
int3
test
pushl
inc
mov
mov
cmp
push
sub
clc
cmp
xor
in
sub
push
push
cwtl
mov
pusha
push
loopne
jns
cld
cmp
scas
mov
scas
pop
enter
idivb
jne
add
incl
jne
push
pop
pushl
push
call
jne
insb
sti
gs
das
cwtl
call
xor
jmp
and
fisttpl
add
add
mov
cmp
addb
jmp
push
pop
fidivl
pop
cmc
add
mov
cmp
and
in
xchg
fstpt
mov
and
and
add
std
jg
push
orb
fiadds
adc
jge
cld
jge
jg
in
ja
mov
mov
cmp
into
daa
mov
push
lea
mov
adc
mov
or
dec
xor
inc
clc
je
fldt
adc
inc
adc
orb
in
and
in
jg
mov
jo
cmpl
inc
jb
jb
inc
fsubr
rorl
pop
hlt
pop
stos
mov
and
cli
or
fdivr
push
push
inc
idivb
xchg
add
cmp
pop
sub
jne
ljmp
popl
mov
daa
incl
call
lock
push
lock
je
call
sub
aaa
cld
adc
xorl
xor
and
std
mov
icebp
add
clc
loopne
add
enter
inc
mov
js
jmp
aad
add
xchg
cmp
mov
cmp
jb
inc
mov
xor
mov
incb
sbb
and
or
sbb
les
pop
add
je
call
xorl
mov
mov
adc
lea
call
test
dec
pop
es
jo
ret
xor
jp
jne
jl
sbb
xchg
les
enter
mov
xor
outsb
and
jecxz
or
aas
add
outsb
int
stos
mov
loope
mov
add
cmpsb
inc
and
pop
je
xor
add
vmwrite
or
jo
inc
ror
jg
adc
ficoml
call
or
ja
jb
and
call
sub
or
mov
outsl
test
sbb
test
add
push
loopne
aaa
mov
jb
push
xchg
lock
gs
iret
mov
pop
aam
adc
xor
jl
rol
cmp
inc
sbb
jno
mov
add
test
cmp
mov
push
mov
push
inc
mov
scas
jo
bsf
jbe
xor
lods
fdiv
stos
xchg
addb
call
xchg
cmpb
fimuls
test
out
jo
cmp
or
in
hlt
adcb
add
sub
daa
orb
shlb
dec
adc
dec
je
cmp
cmpsl
mov
mov
jg
inc
pusha
lock
jnp
sbb
test
mov
call
jb
mov
push
push
push
hlt
or
cmp
inc
adc
xor
mov
aad
pusha
add
andb
push
lds
hlt
lock
mov
pop
push
jl
lock
add
pop
fdivs
xor
xor
bnd
add
mov
andl
adcl
add
mov
pop
jbe
and
sbb
adc
negb
push
add
sbb
fwait
add
mov
mov
js
je
inc
out
mov
lock
lcall
jmp
adc
js
xor
call
lock
aas
xchg
outsl
outsl
inc
loopne
inc
bound
add
inc
clc
loop
pop
repz
incb
js
add
aam
int
scas
push
fbstp
and
cmp
in
mov
orl
mov
inc
sti
jl
setle
inc
subb
add
xchg
pop
and
je
leave
mov
jmp
sarb
jl
xor
hlt
sbb
pop
adc
movsb
pushl
push
stos
push
pop
pop
nop
cli
test
push
push
xor
cli
mov
mov
aam
fildl
jl
mov
pop
stos
or
sub
cli
insb
inc
repnz
dec
fwait
cmp
pusha
cs
push
shlb
out
adc
push
jmp
mov
xor
jp
xor
dec
pop
call
pop
mov
dec
je
xchg
jle
fwait
cmp
jbe
loopne
mov
mov
push
loop
lcallw
add
fsubl
inc
fsubl
aad
pop
add
enter
and
inc
mov
outsb
lcall
or
jge
cmp
cmp
pop
ret
ss
dec
or
add
cmp
wrmsr
shlb
jb
and
cmc
mov
hlt
addl
add
repz
xchg
cmp
ljmp
mov
test
or
cmp
std
hlt
imul
or
rcll
test
mov
jle
ds
add
and
dec
add
sbb
stos
inc
push
fildl
out
mov
mov
or
test
xor
out
xor
jle
je
adc
push
into
fmulp
mov
clc
cmpsb
fstps
sub
push
cs
fimuls
sbbl
jo
les
pop
je
sub
lock
inc
lods
mov
mov
jl
fiaddl
ljmp
push
adc
jb
or
int3
pushl
pop
adc
adc
fcmovb
mov
sub
stc
sub
cld
or
pop
lock
addl
scas
fdivl
cs
clc
and
bound
rclb
mov
mov
jle
push
rol
notl
inc
pop
int
jmp
push
add
push
inc
test
pop
dec
cld
stos
fiadds
out
add
addb
notl
lock
sbb
push
mov
stc
or
ljmp
pop
sbb
push
mov
sub
mov
and
loopne
pop
adc
xlat
mov
lcall
mov
mov
xchg
xchg
pop
or
leave
ds
outsb
push
test
sbb
in
pop
push
cltd
insl
xchg
push
jb
add
add
loopne
jl
std
pop
data16
push
loopne
mov
add
fldcw
mov
mov
jl
pushf
fisttps
push
add
fldl
dec
js
daa
dec
add
jge
jmp
mov
test
cmpsl
emms
movb
div
dec
out
xor
jle
je
cmp
stc
pop
push
aaa
cmc
sub
in
aas
jge
jne
lea
mov
and
outsb
dec
jbe
jb
jl
jo
fnstsw
call
out
cmpsl
punpcklbw
and
ds
cld
fs
or
loopne
sbb
jge
sbb
and
lods
xchg
aam
cmp
call
add
call
jb
subl
xor
add
pop
mov
lea
scas
stos
xor
decl
outsb
subb
in
sub
in
out
lea
testl
das
lea
cmp
dec
ds
mov
lret
push
ljmp
sbb
cmpl
test
out
push
or
dec
sarb
aaa
sahf
jmp
arpl
add
jbe
daa
jmp
hlt
scas
subl
mov
inc
lea
mov
sbb
mov
mov
dec
out
fdivr
jg
fwait
inc
jo
adc
jb
cmp
ja
testb
jne
sub
add
addl
out
or
inc
cli
lds
outsl
pushl
leave
dec
sti
punpckhdq
mov
jmp
push
aam
adc
cmp
in
xor
sub
jmp
xor
scas
cmpsb
and
xchg
jne
cmp
hlt
jne
vroundss
call
or
add
or
mov
ja
call
mov
ret
mov
imul
add
mov
ss
cmpsl
adc
pop
inc
insl
shll
test
add
fcompl
push
mov
dec
mov
call
fnsave
fdivl
fwait
in
cmp
imul
add
jmp
sti
or
clc
pop
mov
mov
push
decl
jge
ret
call
data16
int3
call
mov
sbb
mull
pop
clc
add
in
adc
fucomip
iret
push
aad
sbb
testb
sub
xor
cmpsl
fidivrs
push
inc
ret
loopne
cmpsb
call
aam
fwait
or
cmp
add
int3
mov
shr
lahf
pop
test
xor
cltd
xorl
pop
mov
jnp
add
and
xorl
inc
add
out
hlt
outsb
es
aad
xor
jle
in
push
rolb
mov
adc
push
nop
je
call
shlb
adc
lock
mov
out
cmp
es
add
push
outsb
fcomi
adc
fwait
lock
jecxz
inc
inc
loopne
or
iret
sub
std
and
or
call
mov
popa
or
inc
push
call
cmpsb
mov
or
fs
jne
in
int3
adc
cmp
inc
add
and
das
add
mov
int3
push
or
cmp
adc
pop
add
push
ss
xchg
adc
jmp
je
cmp
mov
push
cmp
and
mov
daa
icebp
mov
jl
test
add
je
lcall
mov
es
lods
mov
adc
push
push
mov
pop
loopne
or
mov
cmpb
add
into
fsubrs
push
ds
neg
mov
push
paddd
cmp
es
popf
mov
add
insb
xor
mov
adc
ret
jbe
pushf
call
dec
addl
xor
lcall
test
call
cli
xor
jmp
xchg
fsubl
pop
hlt
xchg
pusha
mov
lock
dec
push
pop
xchg
imul
add
call
or
and
fwait
data16
pop
push
test
pop
adcl
fmul
sarb
inc
daa
xchg
xchg
add
andl
push
push
xor
pop
mov
mov
sbb
mov
cmp
aaa
dec
emms
xor
xchg
scas
mov
or
test
shlb
jae
outsb
push
pop
ss
add
push
ss
mov
sub
jbe
or
in
jae
push
jo
mov
repnz
lret
jne
mov
and
pop
xchg
movsl
into
push
in
sbb
lods
mov
mov
mov
call
shlb
or
cs
push
add
dec
add
movsl
pop
push
clc
dec
pop
dec
ljmp
jmp
push
fcom
sub
pop
mov
jb
into
testb
fidivl
frstor
adc
jbe
call
pop
insb
and
push
in
push
jo
mov
sarb
or
jo
mov
test
sahf
jmp
and
fists
cmp
je
cmp
je
cmp
je
xor
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
add
xchg
mov
notl
shlb
mov
call
movsbl
mov
cmp
call
fimuls
test
pop
test
test
pop
adc
cmp
jne
into
or
pop
pop
repz
pop
test
ja
or
call
jl
xchg
testb
pop
je
or
jae
outsl
or
jmp
and
add
shrl
adc
subb
push
mov
mov
call
xchg
fmuls
cmp
ffreep
xchg
in
clc
out
mov
int3
leave
mov
cmp
xchg
cmpsb
fisubs
or
inc
mov
push
jb
in
add
add
mov
or
ljmp
or
std
into
out
jmp
mov
push
pushf
cmpb
or
mov
jmp
movsb
cs
sahf
jbe
push
inc
shll
test
push
sub
adc
idiv
pop
js
pop
clc
test
vmwrite
pop
outsl
push
push
stos
or
testb
test
pop
lock
cmp
mov
sbb
fsubrs
mov
xor
roll
mov
sbb
mov
add
add
push
call
or
cmpsb
or
add
cmp
mov
xor
inc
out
dec
pop
sbb
sub
cmpsl
div
ss
add
addb
adc
idivb
test
pop
add
jg
sbb
inc
rcll
sub
hlt
inc
clc
inc
jp
adc
xchg
mov
push
ret
in
sbb
or
cmp
fldt
xchg
dec
push
xchg
cmp
es
test
jbe
push
ljmp
or
es
movb
xchg
cmp
jne
std
and
cmp
jb
adc
add
or
mov
shlb
xchg
adc
out
xchg
or
adcl
or
sbbl
xor
xchg
test
sbb
hlt
inc
mov
adc
push
xchg
sub
push
testl
push
inc
test
je
cmpw
lcall
and
adc
dec
adc
cmp
icebp
xor
push
inc
or
sbb
es
push
lods
sub
push
lods
hlt
pop
test
push
lcall
pop
add
push
cld
push
mov
mov
jbe
jne
push
clc
mov
xchg
lea
sub
adcl
dec
out
test
test
div
mov
inc
inc
cmove
push
rol
add
pop
push
xor
xchg
xchg
push
push
push
push
mov
sbb
testb
mov
xchg
es
or
imul
sub
fbld
pop
and
lock
sbb
or
mov
mov
sbb
into
into
push
call
jle
movl
sbb
jne
mov
cmp
call
scas
pop
iret
add
add
xor
add
clc
sbb
push
or
call
call
mov
test
jl
xchg
push
lock
fidivl
cli
iret
jb
adc
xchg
sbb
mov
jmp
jg
and
aaa
jbe
testb
arpl
push
fsubrp
fimull
pop
ja
cld
mov
jmp
ja
outsb
clc
dec
jae
js
push
or
sbb
push
add
je
leave
jbe
jle
sti
sub
add
sub
xchg
mov
mov
pop
cmp
sub
mov
test
add
push
in
push
pop
jb
inc
sahf
sbb
cmpsb
enter
add
cld
aaa
cld
sub
mov
jne
jb
add
lahf
jecxz
mov
and
imul
add
sbbb
sbb
lahf
or
stos
sbb
ds
jbe
sahf
daa
jmp
call
mov
and
clc
push
pop
xlat
cmp
outsb
mov
dec
sbb
cmp
out
fdivs
decl
subb
fmull
mov
int3
mov
pushl
fimuls
push
loop
pop
arpl
repnz
push
call
ds
je
pop
mov
bnd
je
cmp
lea
cmp
ja
inc
jo
cmc
je
adc
jne
sub
incl
mov
jae
dec
push
mov
sub
jl
fnsave
hlt
cmp
outsb
dec
push
add
insb
jae
dec
mov
test
popf
sahf
add
enter
mov
xor
add
enter
add
divl
cmp
inc
or
test
hlt
movb
outsb
lock
mov
fiadds
clc
xchg
outsb
cmp
cltd
push
cli
shll
repnz
pop
sub
jne
inc
mov
add
clc
pop
push
call
xchg
jb
cmp
rcrl
ja
add
add
icebp
add
xchg
enter
add
test
cld
enter
jl
add
add
shlb
pop
add
mov
and
dec
add
push
test
push
pop
lds
jg
out
add
mov
add
enter
jae
mov
fcmovu
aaa
insb
pop
das
add
inc
xchg
jbe
adc
jmp
add
cmp
aaa
fmuls
add
mov
sub
test
hlt
adcb
jl
push
dec
insb
cmp
xchg
xchg
sbb
dec
fdivrl
sbb
mov
sub
push
add
sbb
cld
add
int
es
add
loop
cmp
cmpb
mov
or
inc
mov
xchg
ret
test
mov
and
inc
orb
lcall
faddl
lock
subb
cld
jge
mov
and
ja
je
inc
push
push
mov
inc
iret
out
xorl
push
roll
ret
dec
push
adc
inc
out
xorl
add
mov
incl
adc
pop
push
cmp
or
sbbb
cmpb
andb
dec
add
rcll
jnp
in
add
mov
lock
leave
mull
sbb
addl
call
leave
fimuls
addb
pop
jno
jbe
pusha
sar
mov
adc
inc
mov
jb
dec
dec
fstpt
add
in
jne
add
mov
mov
add
jp
test
icebp
dec
cmc
incl
inc
mov
push
test
cmp
push
sub
mov
add
push
adc
aam
adc
mov
push
pushl
sbb
sub
jge
jmp
call
repnz
sub
mov
fsubs
cld
push
cmpb
js
sbb
jbe
orb
add
add
xchg
or
pop
and
out
rolb
call
cmp
call
sbb
call
pop
adc
and
add
sbb
sub
and
mov
jmp
lcall
inc
pop
cmp
mov
mov
mov
push
rol
and
rolb
test
add
mov
adc
inc
pushl
ja
pop
ja
ret
fidivrs
sub
jle
roll
scas
call
adc
pop
pop
add
and
mov
add
daa
add
add
jae
fwait
xchg
jo
or
sbb
inc
call
orb
decb
popa
js
les
daa
sbb
jbe
jbe
stos
push
or
sbb
sahf
aad
es
and
add
or
imul
push
int
or
add
jbe
xor
or
call
inc
je
ret
in
jo
fiaddl
cmp
xor
push
ret
aam
cwtl
mov
stos
or
mov
repz
sbb
into
mov
in
movsl
clc
cbtw
mov
pop
std
in
orb
cmpsb
or
in
or
pushl
jb
and
addb
pop
add
add
add
add
mov
js
fdivrl
movsbl
push
or
push
push
mov
xor
lock
and
rolb
insb
cli
dec
faddp
pop
and
sbb
adc
or
pusha
cmpsb
js
xchg
dec
push
push
inc
pusha
add
inc
mov
push
jo
clc
mov
int3
xchg
mov
add
dec
mov
cmpb
push
loopne
add
push
ret
leave
cmp
test
xor
pop
test
sahf
stos
push
fadds
inc
mov
repnz
movl
call
add
xchg
add
xor
call
xchg
xor
inc
cld
or
adc
loope
adc
mov
push
xchg
dec
cmpsl
call
popf
js
cld
outsl
rolb
add
jo
add
les
andb
mov
mov
inc
repz
push
and
or
xchg
loopne
loopne
and
lds
lods
adc
call
inc
icebp
mov
outsl
je
mov
nop
std
call
push
sub
or
sbb
test
clc
push
mov
ret
mov
mov
or
pop
jp
jle
popl
sub
hlt
jo
xor
loopne
dec
pusha
pop
pusha
addr16
or
push
call
or
push
push
pusha
xor
jge
jbe
pop
dec
jb
call
or
mov
jb
loopne
loopne
sbb
xor
loopne
or
sbb
inc
ljmp
std
and
subb
gs
sbb
pop
fsubl
popa
cli
push
les
out
fdivrl
or
cli
sub
or
add
sub
pop
sub
addr16
sbb
lea
jno
push
sub
jp
push
sbb
pop
push
push
orb
xor
mov
and
and
push
pop
loopne
jp
jno
pushl
js
xor
cmp
sub
pop
xor
mov
adc
jne
push
dec
dec
dec
and
mov
and
inc
clc
jb
jl
pop
icebp
idivb
loopne
fisttps
popa
sub
inc
or
push
test
mov
sti
jne
add
movsb
push
push
mov
int3
adc
aaa
sub
jno
jo
sbb
mov
inc
add
call
push
test
push
or
or
jae
mov
fwait
outsb
dec
mov
mov
scas
lcall
push
mov
mov
divb
jmp
mov
cmp
lea
decl
into
pop
jae
in
mov
inc
pusha
add
out
jne
dec
movb
sbb
ret
push
xchg
mov
std
mov
xchg
inc
les
lret
clc
addl
bound
out
in
les
and
jmp
jne
push
or
rcrl
or
pcmpeqb
sub
push
xchg
rolb
jmp
jmp
jb
fildl
test
loope
mov
aas
or
or
popa
enter
jno
lock
mov
pop
or
xchg
pop
cld
test
push
push
push
or
push
popa
jno
mov
mov
add
jno
add
lods
pusha
dec
cmpsl
add
shr
dec
into
mov
pop
ret
cmp
pop
daa
rcl
or
icebp
pop
or
scas
jns
repnz
adc
and
inc
push
fsubrl
xchg
push
adc
xor
das
jl
adc
mov
mov
movsl
mov
xor
dec
jb
je
movsb
mov
fbld
out
xor
xor
jge
test
xlat
negb
jo
shlb
mov
call
lret
lock
jb
mov
mov
movl
or
mov
inc
jmp
and
cmc
sbb
iret
vmwrite
cmp
or
mov
incl
cmp
adc
hlt
cmp
adcb
popa
add
push
cld
mov
jb
cmp
or
xor
dec
xor
adc
test
xor
cld
dec
xor
aam
xor
test
mov
pop
jecxz
push
clc
add
sub
roll
int
cli
outsl
xor
adc
incl
aaa
mov
sbb
adc
jne
scas
push
add
inc
add
cld
inc
js
inc
ficoml
adc
xor
xlat
mov
inc
mov
fnstenv
push
pop
mov
aaa
ljmp
pop
incl
pushl
inc
in
mov
xchg
incl
xor
pop
dec
jb
sti
add
push
call
dec
and
stos
nop
decb
pop
dec
ss
adc
mov
push
cmp
and
jo
stos
hlt
call
mov
push
lcall
or
push
add
mov
fstl
pop
test
or
pop
inc
add
add
push
lea
clc
mov
inc
xor
mov
pop
dec
dec
clc
mov
inc
add
leave
cmp
mov
cmc
lcall
jb
add
add
leave
mov
test
adc
mov
outsb
or
push
call
divb
jg
sub
cmpb
enter
mov
jmp
lea
cmpsb
mov
jnp
scas
jg
sarb
jg
jne
mov
adc
cli
cmp
adc
dec
mov
shr
mov
push
je,pn
xor
jmp
int3
leave
or
les
data16
cmpb
cmc
cmpb
outsl
push
jl
jl
push
push
lret
add
lcall
or
in
clc
adcl
mov
testl
aad
jmp
into
mov
mov
je
push
out
data16
jg
mov
data16
aas
xchg
add
pop
data16
mov
mov
dec
add
roll
fistpll
cltd
or
mov
sbb
sbb
push
mov
addb
out
add
out
pop
cmp
rolb
mov
mov
cld
mov
dec
sbb
scas
call
imul
lock
subb
decb
fs
or
incl
je
jl
add
add
clc
mov
push
jno
and
push
mov
pop
and
fildll
mov
add
mov
add
mov
loope
dec
add
stos
adc
pop
fistl
call
lds
jl
xor
add
lock
pop
scas
xor
fisttps
add
mov
mov
scas
and
push
and
xor
push
sub
loopne
je
add
and
jmp
es
mov
add
inc
insb
call
test
xchg
jo
push
xchg
pop
dec
aaa
call
or
loopne
mov
addl
and
sub
pop
pop
jmp
and
xor
push
popf
xchg
fwait
or
xchg
rdpmc
fcmovnb
pop
lock
std
ljmp
je
sub
call
mov
mov
push
lods
push
cld
incl
xor
add
lea
mov
icebp
adc
ds
icebp
pop
adcb
jp
add
pop
test
dec
push
sbb
push
add
mov
lock
mov
ss
sbb
push
push
test
ret
push
jbe
and
sbb
incl
mov
mov
fldcw
xor
adc
dec
and
sbb
xor
adcb
mov
and
sub
xchg
add
pop
ljmp
pop
push
xor
mov
fistpl
push
test
mov
cld
xor
mov
xor
and
dec
xchg
inc
int3
in
scas
pop
inc
sbb
inc
and
or
cwtl
jb
dec
stos
sub
hlt
cmp
filds
push
icebp
add
pop
sub
paddb
adc
xchg
adc
stos
mov
icebp
jp
call
add
call
pusha
insb
cli
stos
aad
das
pop
mov
shl
jl
sub
add
or
test
jecxz
fisttps
mov
adc
fistpll
add
movaps
mov
sbb
pop
mov
incl
add
add
rolb
push
push
mov
andb
lock
cmpsb
dec
adc
push
add
xor
loopne
popa
dec
loope
outsb
push
clc
inc
cmp
popf
sbbb
push
xor
mov
into
lods
shr
ja
mov
je
push
sub
add
mov
dec
cld
push
push
sub
fs
sub
ja
inc
inc
ss
pop
lock
loop
jge
in
cmp
mov
add
add
sub
pop
int
add
mov
add
push
push
adc
sarb
push
ljmp
mov
daa
mov
xchg
jne
mov
lock
call
cld
add
incb
fcomip
add
adc
mov
adc
mov
mov
or
xorl
add
sbb
js
stos
push
cmp
fs
or
test
xor
inc
push
cltd
addl
mov
fcomip
add
stos
cltd
push
adc
sar
xor
int3
adc
or
cmp
and
jbe
push
out
add
je
lods
std
add
mov
sub
shll
test
jno
add
aam
xor
adc
stos
or
scas
icebp
lock
jmp
mov
je
aas
lods
mov
xor
jne
or
inc
mov
xor
add
cmp
loopne
aaa
pop
mov
pushl
xchg
ds
call
negl
nop
mov
xor
sarl
jae
in
add
hlt
lea
cmpsl
jne
out
xchg
mov
gs
aam
push
add
mov
mov
out
add
push
int
adc
cld
jo
mov
out
ret
test
xor
ret
call
jb
dec
sbb
add
sub
cmp
fdivrl
rcrb
jg
add
push
inc
adc
scas
clc
pop
sbb
mov
sub
pusha
add
push
incl
shrb
xorl
mov
loopne
mov
add
xor
movsb
xchg
movsl
sub
test
ret
add
mov
nop
aaa
mov
loop
push
xor
sub
push
jle
fs
add
push
mov
pop
mov
lea
push
add
push
inc
or
data16
jg
add
pushl
push
je
inc
cmpb
pop
or
push
jecxz
push
sbb
xchg
aas
mov
and
xor
popl
adc
dec
ja
add
pop
mov
cmp
push
sbb
sarb
scas
jp
push
push
sub
push
pop
xor
jg
cmp
sub
cmpsb
stc
inc
jmp
add
push
pushf
push
mov
test
add
pop
ficomps
add
fsubrs
rorl
or
cmp
adc
movsb
xchg
mov
stos
aad
scas
lret
push
pop
int
loope
mov
cmpsb
incl
jg
sub
or
jne
dec
dec
cwtl
orl
je
andb
jne
outsb
adc
das
cmp
push
cmpsb
ret
sbb
pop
shl
cli
add
or
pusha
xorl
jnp
add
xchg
jmp
rcrb
mov
add
ds
adc
jmp
mov
lock
xor
jle
pop
fucomi
inc
or
jp
or
mov
repz
ror
stc
mov
aam
sbb
iret
call
aad
test
sbb
lock
push
push
push
inc
je
sbb
repz
fcomi
add
cmp
andb
push
orb
fldl
add
nop
push
mov
jne
lods
or
sbb
iret
push
andl
add
mov
ret
adc
sbb
sbb
pop
lock
int3
roll
test
and
ja
fisttpll
in
mov
lea
xchg
shrb
call
je
incl
outsl
rclb
mov
sub
cmp
fisttps
clc
call
or
sarb
cld
jl
sbb
jp
icebp
dec
je
xor
ss
rclb
sub
cmpsb
mov
cltd
jb
les
jne
or
inc
std
cmp
adc
adc
cmp
dec
sub
int3
mov
cld
adc
inc
pusha
and
mov
ror
cwtl
adc
add
shl
add
jae
mov
xadd
ljmp
jmp
call
fcoms
arpl
mov
fcomip
icebp
and
or
addb
jbe
dec
push
mov
rorl
adc
out
clc
adc
add
xor
jbe
mov
pop
push
push
lea
add
and
cmp
cmovno
add
loope
add
test
fbld
jl
cs
xchg
sti
add
mov
roll
adc
or
mov
inc
adc
mov
test
mov
mov
xchg
or
add
add
fdiv
scas
xor
push
jne
test
leave
mov
jg
sub
ljmp
sbb
js
inc
test
stc
cmp
mov
cmc
out
mov
call
stos
imul
ss
jge
test
rclb
movzwl
subb
aaa
lret
push
push
divps
int3
rclb
inc
mov
mov
lea
mov
jmp
pop
mov
loop
ret
roll
loopne
outsl
add
decl
or
jb
cltd
aam
rcll
push
mov
aaa
es
call
add
cli
loopne
mov
aam
mov
mov
lret
aam
push
add
inc
pop
fucomip
cmp
and
xchg
shlb
cmp
mov
mov
lcall
add
aas
cmp
sub
inc
lretw
scas
fsubs
cmp
into
call
mov
inc
and
adc
loopne
je
mov
rol
adc
inc
add
mov
inc
adc
sub
inc
out
xorb
jecxz,pn
and
nop
mov
push
cltd
loopne
dec
adc
loopne
aaa
cld
add
data16
enter
mov
fs
push
clc
or
lea
pusha
jb
or
fs
push
pop
xchg
xchg
sti
lea
movsb
push
adc
fstps
loopne
or
sbb
jmp
jg
mov
hlt
es
inc
jbe
dec
shlb
cmc
or
mov
testb
or
cld
loopne
std
fwait
mov
push
jle
sbb
add
inc
and
or
push
add
pusha
add
xorb
push
aaa
jl
add
jb,pt
xorl
ret
mov
mov
add
xor
push
mov
cld
mov
rcl
add
add
or
mov
call
loopne
hlt
jmp
mov
lock
mov
xchg
leave
sbb
sarl
mov
inc
int3
dec
ret
mov
adc
fcomip
mov
ja
sub
xor
es
call
pop
aam
adc
mov
ljmp
out
jle
mov
or
fiaddl
call
inc
sub
mov
jle
mov
adc
sub
fdivl
shrb
add
test
jmp
xchg
sarb
cmp
jne
inc
pop
leave
iret
lea
jmp
int3
add
mov
jg
cmp
add
aam
mov
stos
mov
add
sti
cld
sub
pop
cmp
xlat
mov
out
rclb
sbb
add
mov
mov
movb
sub
add
out
fildll
mov
aas
xor
and
mov
push
add
test
int3
je
mov
fiaddl
push
cmpsb
jg
mov
or
imul
cs
loope
mov
es
fucomip
push
or
xlat
call
ret
stos
addl
cli
jg
pusha
push
xchg
jmp
daa
add
cmp
pushl
mov
das
call
ja
call
rcr
mov
loopne
call
in
subb
outsl
adc
call
outsb
mov
add
mov
lock
hlt
mov
decl
or
loope
mov
jecxz
adc
imul
aaa
cld
cmp
or
jne
js
je
test
mov
sub
and
pop
and
cmp
in
push
mov
imul
loope
mov
jmp
inc
int
shrb
push
fadds
in
lods
push
push
ffree
xchg
xor
cmpsl
call
add
cld
rcrb
scas
push
jecxz
lcall
loopne
mov
adc
dec
pusha
pop
add
jp
sub
call
and
push
call
jb
mov
enter
nop
xor
xchg
into
xor
stc
xor
ds
test
dec
push
jle
lock
test
sbb
jg
sub
xorl
push
jb
enter
mov
mov
xorb
or
adc
xor
shrb
stos
push
sbb
or
or
jo
fsubr
jle
cli
sbbb
jg
inc
mov
jo
lock
jmp
inc
mov
je
sub
xchg
addl
ljmp
mov
push
insb
std
jo
xor
push
xchg
stos
inc
push
stos
sbb
dec
inc
iret
xor
lcall
imul
data16
dec
insb
jo
je
data16
cmp
mov
pop
pop
adc
or
rorb
aas
add
iret
outsb
sbb
mov
and
push
adc
stos
shlb
std
outsl
adc
in
inc
xor
cmpsb
insl
mov
je
sbb
jle
mov
jmp
or
into
push
cmp
jo
test
rorb
stos
push
aam
psubb
incb
movsb
and
add
pop
lock
fiadds
in
mov
add
inc
or
outsl
inc
jnp
cwtl
xchg
jae
mov
inc
xorb
push
fdivp
std
push
push
pop
nop
add
pop
xor
clc
ljmp
push
mov
inc
pop
int
call
push
je
les
add
and
push
mov
jb
test
lock
jo
pop
xor
jge
rolb
lods
inc
je
add
jo
sbb
jb
inc
clc
push
test
xor
scas
add
sub
stc
movsb
lcall
lret
mov
ljmp
incl
lock
mov
xor
call
pop
mov
dec
add
xor
push
cld
ret
or
inc
cltd
mov
aas
xchg
xor
push
jo
lret
xor
ja
sti
scas
inc
xor
cmp
jle
cmpl
js
inc
in
mov
les
test
shll
call
mov
xlat
ret
jge
in
mov
jle
add
mov
mov
lret
ja
mov
cmp
andb
inc
xlat
int3
hlt
add
lock
hlt
add
and
shl
lahf
ret
call
cmp
sbb
or
adc
call
pop
jg
mov
lock
add
clc
or
and
mov
dec
push
add
clc
xor
aam
mulb
fimull
int3
mov
movsb
dec
out
mov
add
mov
mov
arpl
jg
pop
jbe
lods
inc
xor
call
or
sub
pop
cld
push
mov
jge
das
jno
int
mov
add
xor
push
sub
xor
hlt
dec
dec
push
addl
mov
ret
addr16
pop
inc
cmp
loopne
push
add
mov
repnz
cmp
inc
es
mov
pop
cmp
adc
xchg
test
push
repnz
ja
adc
mov
add
xchg
in
mov
adc
sub
lret
sub
aad
ss
mov
pop
hlt
ret
call
test
mov
xor
jmp
faddl
and
dec
sub
pushl
cwtl
jne
shr
or
inc
pushf
xchg
jo
mov
push
pop
sub
test
xor
std
and
jmp
pop
add
mov
jge
sahf
int3
icebp
add
inc
int3
cmpsb
stos
sbb
lock
sub
xor
add
sti
lods
fstps
ret
scas
add
icebp
lcall
data16
pop
dec
pusha
jl
lods
xchg
es
mov
fs
lea
shr
stos
call
cmp
clc
mov
sbb
lret
mov
mov
push
jecxz
lea
inc
add
mov
pop
inc
stos
ljmp
scas
cmp
sbb
in
add
mov
adc
sbbl
sub
sub
je
clc
cld
sbb
inc
adcb
mov
mov
sti
push
loop
dec
out
sbb
pop
insb
mov
fisubrl
mov
sub
test
jg
mov
fsubrl
outsl
aaa
cld
pop
jb
call
jne
xchg
or
int3
jnp
mov
lea
and
cli
call
inc
testl
fs
or
dec
loopne
xor
mov
pop
cld
xchg
loope
add
push
jbe
lret
lds
adc
jle
inc
or
mov
cmpb
mov
inc
test
adc
scas
cmp
or
dec
or
xchg
add
push
and
aaa
xchg
push
cmp
xor
pop
mov
cld
and
xchg
and
mov
and
jb
adc
mov
push
inc
call
jp
jae
mov
int3
mov
cmp
repz
mov
cs
cmp
push
push
icebp
imul
setb
jo
xor
movsb
aam
in
scas
in
shlb
dec
mov
test
jno
lcall
mov
inc
out
push
xchg
mov
jb
incl
pushl
mov
enter
mov
xchg
sub
movsb
inc
cld
xchg
xor
lock
push
inc
out
or
add
jno
lock
sub
jbe
int3
inc
das
mov
mov
push
sub
sub
push
out
lock
cmp
push
push
call
and
sub
call
jmp
sub
hlt
push
jmp
add
mov
leave
cmp
push
mov
lret
cmp
je
push
decb
sbb
int3
ret
mov
fs
sarb
lods
repnz
fnstcw
fadd
cmpsb
xor
fs
scas
push
outsb
or
jo
add
bound
jg
xor
push
mov
jo
adc
adc
sub
add
cwtl
add
fcoms
aam
or
das
sbbb
lock
cmp
lea
push
scas
cli
call
push
lea
cmp
faddp
lods
leave
sub
sub
imulb
and
cld
add
push
test
call
or
rol
jmp
dec
jno
or
fisubrs
iret
movsb
sub
and
jno
mov
jo
adcl
andl
push
rcll
or
sbb
cmpsb
xor
xor
add
push
or
and
cltd
jo
inc
lret
nop
clc
sub
sti
rcrl
inc
sub
inc
pop
or
bound
insb
push
mov
cmp
push
xchg
mov
aam
mov
xchg
je
pop
sahf
lods
push
nop
mov
inc
fisttpl
movsb
add
loopne
mov
jne
jp
xorb
xor
fisttps
shr
mov
movsb
mov
push
add
xor
push
lock
push
adc
or
fidivl
mov
mov
movsb
ret
notb
je
js
cmp
add
cmovge
js
push
add
xchg
testb
inc
jp
cmp
js
or
xor
cmp
sbb
add
pop
mov
mov
mov
jmp
int
cmpsb
mov
ss
cmp
rorb
push
dec
fs
mov
mov
or
pop
dec
fisubl
xor
add
inc
lea
mov
cmp
or
jne
ret
pop
ljmp
stos
adcl
push
call
mov
faddp
push
push
out
cwtl
cmpb
sub
add
mov
inc
and
addb
lea
scas
lcall
pop
aad
inc
nop
out
xor
shlb
test
inc
or
ret
jl
sub
pop
sub
insl
mov
jbe
xor
xchg
or
cs
push
mulb
sbb
push
fists
add
xchg
mov
shrb
add
pop
mov
xchg
mov
stc
outsl
sbb
test
jbe
das
aam
add
xor
fwait
push
xor
jg
xor
flds
cld
scas
out
cmp
and
push
call
insl
inc
cmpsl
mov
push
je
jb
pusha
pusha
scas
mov
mov
or
mov
sbb
xor
ret
or
xchg
pushf
ss
adc
jo
into
xor
int3
add
jp
push
lcall
jp
sub
sub
sarb
pop
push
and
mov
test
fildl
add
xrelease
pusha
push
out
mov
mov
add
push
sbb
aaa
bound
ds
and
mov
orb
mov
aam
add
add
sbb
add
push
add
movsb
add
insb
ds
mov
cmp
rorl
aas
xchg
les
and
call
je
sarb
cmp
outsl
sbb
mov
pop
push
jmp
adc
sbb
inc
mov
aas
shlb
pop
sbb
lock
addl
shlb
cli
ja
push
jne
jbe
lcall
sub
je
iret
add
pop
adc
push
clc
sarb
pop
cmp
inc
dec
mov
rcll
enter
sbb
addb
shrb
adc
push
jb
aam
and
mov
mov
add
sbb
aaa
in
ret
rorb
aam
cld
push
mov
test
pusha
insl
cmp
scas
sbb
cltd
shrl
outsb
mov
popa
or
lds
test
adc
rclb
in
and
jne
call
outsl
test
cld
jo
dec
xchg
mov
mov
insl
clc
call
add
inc
ret
push
pop
roll
add
and
rcll
cld
push
sar
cmpsb
mov
add
or
cmp
movb
jmp
jmp
aas
loopne
push
mov
test
popf
clc
and
test
push
push
xchg
jo
fdivl
in
xchg
mov
ljmp
repz
pop
xchg
add
movsb
scas
enter
sbb
push
dec
das
xchg
call
ud0
jmp
or
loop
xchg
lods
loopne
or
pop
sarl
pop
and
jg
xor
inc
sbb
ret
sub
test
dec
cmp
xchg
fisubs
into
dec
push
scas
lea
scas
sub
insl
pop
scas
mov
cmp
or
or
push
add
or
popa
add
pop
mov
mov
pusha
std
add
mov
inc
and
ret
filds
loopne
push
js
cmpl
call
dec
pusha
adc
daa
fisttps
dec
xor
js
xor
fs
sbb
xchg
int3
add
xor
stos
mov
pop
inc
cld
jp
push
loopne
jl
xchg
aad
test
mov
push
in
fdivl
imul
push
or
out
inc
rcrl
lea
int3
pop
punpcklbw
loopne
add
je
fdivs
pop
xchg
push
ret
add
cmp
decl
call
sbb
sbb
push
sarb
mov
fneni(8087
add
mov
inc
sbb
loopne
or
mov
loop
ror
or
test
loopne
push
push
push
je
jno
add
pop
dec
mov
jb
jg
sbb
jne
push
loopne
xor
js
push
xchg
call
rcr
in
add
push
aaa
cwtl
je
add
ss
movsb
popf
inc
sbb
adc
idiv
out
add
subl
mov
inc
cmpl
test
lock
dec
push
mov
push
and
mov
cmp
call
pop
dec
sub
jge
enter
std
pushl
adc
je
sbb
push
inc
enter
cmp
mov
pop
mov
add
inc
sti
mov
andb
insb
push
adc
shl
mov
push
add
adc
mov
shr
cmp
mov
pusha
push
mov
add
imul
jge
pop
add
in
mov
pop
dec
scas
clc
pop
stc
popa
es
push
add
cmp
dec
push
lods
call
stos
loope
call
jbe
clc
loop
aad
xchg
aam
pop
mov
add
js
mov
sub
adc
loop
xchg
xor
ret
push
mov
in
loope
fsub
lahf
or
call
pop
lock
inc
or
addb
test
jbe
push
repnz
or
incb
std
cld
popa
adc
push
pusha
das
push
push
add
inc
mov
mov
test
xor
mov
pop
out
xor
insb
mov
mov
inc
out
jecxz
jg
es
inc
sub
and
mov
bound
add
mov
in
inc
pusha
addr16
andb
jmp
fistpl
mov
loopne
push
inc
pushf
push
scas
call
push
aaa
std
je
popa
sbb
call
mov
sbb
lock
pusha
out
pusha
mov
outsl
mov
add
loopne
test
rolb
jge
popa
insb
fadds
push
add
pusha
mov
mov
popa
in
sbb
leave
xorb
cld
into
call
xchg
pusha
sbb
in
in
jg
pusha
mov
fs
jbe
push
loopne
lea
rolb
sahf
pop
pusha
adc
lcall
mov
or
cwtl
sub
in
clc
cmp
je
sbb
add
je
mov
mov
jnp
add
pop
imul
sbb
ljmp
mov
mov
dec
iret
mov
icebp
adc
sbbb
je
call
outsb
mov
pop
dec
add
add
mov
lock
push
sbb
mov
mov
les
sbb
xchg
sarb
adc
icebp
pop
cmp
sbb
xor
dec
jg
sbbb
jns
mov
nop
add
arpl
xchg
jo
hlt
jne
dec
add
clc
and
mov
call
jo
mov
sub
or
or
jo
mov
adc
adc
mov
in
cmp
jge
or
xchg
mov
inc
hlt
add
incl
arpl
xchg
push
cmp
and
ljmp
mov
push
lock
adcb
call
push
fs
jg
dec
mov
lret
sbb
cmp
gs
popa
push
xchg
xchg
adc
mov
adc
cmpsb
or
jo
adc
xchg
dec
cmpsb
inc
dec
js
jbe
fldt
mov
lock
or
jo
ret
push
cld
adc
js
adc
adc
out
imul
sub
adc
mov
xchg
std
mov
ss
shlb
clc
sbb
xchg
mov
xchg
pop
add
pushl
mov
cmp
cmp
push
sub
push
cli
mov
es
sub
mov
sahf
and
xor
mov
test
ret
je
push
stos
ljmp
push
cwtl
js
mov
add
movsb
sub
xor
push
push
lock
pop
cld
adc
jo
mov
push
inc
pop
stos
mov
adc
stos
mov
leave
jmp
clc
lcall
push
fdivr
adc
cmpsb
pop
arpl
stc
cmp
pop
fs
outsb
xchg
subb
pop
cwtl
mov
mov
decl
xor
inc
jecxz
add
fiadds
lahf
lock
shlb
jle
adc
push
push
push
fists
inc
cmp
adc
sub
fdivrs
add
adc
xchg
add
fwait
mov
call
xchg
cmp
add
mov
lock
std
or
test
or
ljmp
or
pop
push
pop
pop
je
pop
ret
aas
dec
cmp
and
jle
mov
daa
aam
cmp
adc
xchg
xor
sub
mov
es
dec
add
icebp
inc
jge
scas
sbb
mov
je
jecxz
imul
push
xor
cmp
repz
dec
push
push
shrl
loope
incb
mov
adc
mov
push
xchg
divb
xor
adc
jbe
lock
mov
mov
mov
and
jbe
mov
jno
iret
aam
inc
mov
sub
add
mov
cld
and
lock
clc
dec
add
mov
jl
rclb
call
call
mov
jmp
push
or
mov
and
js
inc
data16
and
inc
decl
popf
and
test
je
pushf
hlt
lods
and
mov
mov
daa
push
cmp
add
clc
mov
shr
test
add
mov
fsubrp
cmp
jmp
ljmp
jl
je
mov
inc
ljmp
jns
and
jge
add
push
sub
xchg
shlb
pop
cld
js
aas
incb
cmpsb
jl
in
repz
add
ljmp
and
xchg
mov
xor
pop
dec
mov
or
lret
mov
mov
jbe
test
dec
loope
push
mov
or
add
mov
adc
cmp
jbe
outsl
cli
das
or
cld
add
iret
jbe
push
jmp
adcb
inc
jno
aam
push
jg
xor
xor
sub
js
jmp
call
movsb
inc
jo
dec
call
pop
hlt
ja
lret
mov
jo
rcrb
push
std
or
mov
je
ds
loopne
mov
pop
dec
frstor
incb
jo
mov
push
or
inc
push
or
jecxz
fsubs
add
decl
jl
fistpl
pop
call
movl
ljmp
arpl
mov
and
pop
cmpsl
call
add
push
jmp
call
fsubrs
add
lock
fistpl
sti
je
adc
add
push
ljmp
sbb
or
or
test
add
sub
scas
adc
inc
clc
fwait
lock
jno
add
push
mov
mov
inc
mov
xor
repz
xor
inc
les
pushf
out
dec
and
clc
adc
outsl
adc
cmp
je
sbb
out
mov
jo
mov
adc
lock
cli
and
jo
cmc
addb
or
ljmp
andl
lcall
and
cld
pushl
loopne
std
xor
sahf
jo
add
cltd
addl
stos
add
in
mov
cmc
inc
dec
insb
mov
ljmp
sub
jle
call
xor
cld
ljmp
je
test
cmp
or
inc
testb
incb
xor
pop
xchg
out
pusha
xchg
shlb
ja
pop
stos
jle
add
mov
lock
loope
decl
mov
out
xor
cli
notb
lock
decl
or
mov
jns
cmp
push
pop
add
clc
adc
data16
sti
push
push
mov
test
leave
je
test
test
addb
jne
add
fcomip
outsl
stos
adc
mov
jmp
jg
test
in
imul
jnp
pop
hlt
lock
inc
jne
fwait
jmp
mov
jl
xorl
test
push
fidivs
pop
ret
ljmpw
push
pop
ret
idivb
mov
mov
stc
mov
push
pop
imul
cmpsb
or
mov
shlb
add
or
xor
push
add
add
call
jg
icebp
inc
push
push
pop
sbb
and
adc
fnsave
add
into
dec
or
adc
mov
push
test
inc
ficomps
jo
push
xchg
or
and
cmp
pop
mulb
pop
notb
mov
ret
push
push
lret
cmp
js
sub
add
adc
mov
xlat
push
inc
jnp
sub
fdivl
pop
add
cmp
push
mov
push
mov
bound
inc
adc
gs
loopne
popf
jb
pop
roll
mov
in
je
and
fdivrs
inc
out
pop
adc
rolb
es
call
inc
jmp
pop
mov
rcl
std
pop
sub
adc
dec
fnstenv
imul
stos
mov
mov
adc
mov
dec
jmp
in
pop
or
call
out
push
pop
ja
or
fucomi
test
pusha
sbb
mov
push
lret
fidivl
mov
mov
dec
adc
cmpb
andb
jmp
inc
or
cmpb
push
dec
pop
subl
icebp
ljmp
fmuls
sar
incl
cmp
jo
and
jmp
xor
xchg
ror
add
sbb
pop
cwtl
lock
jbe
test
clc
cmp
xchg
or
lret
clc
or
cmc
outsl
movsb
sti
push
je
mov
call
rcr
fisubl
pop
add
cmp
cmovns
sti
push
scas
cld
arpl
inc
pop
push
rol
dec
lods
push
ljmp
incl
pushf
add
cmp
jne
loop
imul
mov
inc
pop
inc
mov
cmovs
mov
in
shll
test
fistps
inc
jp
es
sbb
jmp
loopne
sub
xchg
cld
mov
rorl
fildll
mov
mov
sbb
dec
add
push
dec
cmp
les
testb
and
lds
mov
inc
mov
mov
pop
cld
das
mov
add
sub
rorb
dec
in
lret
jns
fsubrs
mov
dec
push
clc
ja
mov
jge
or
jp
rol
jge
aas
push
xor
cmove
fists
roll
mov
aaa
adc
rclb
pop
cmpsb
repnz
jecxz
add
mov
or
jmp
ret
das
dec
or
and
cmp
loopne
push
pop
imulb
pop
jmp
call
push
loop
daa
testb
or
adc
cmpb
push
jp
rcrl
dec
jo
aaa
or
mov
adc
inc
mov
rclb
add
mov
call
and
lea
je
cmp
sbb
add
hlt
add
cmp
add
filds
mov
or
xor
inc
out
push
sbb
sub
mov
or
pusha
testl
pop
mov
xlat
jbe
sbb
iret
ret
xchg
dec
outsb
jns
inc
rcll
push
dec
push
int3
aas
push
mov
scas
adc
sbb
in
dec
mov
push
mov
lahf
icebp
fcmovne
mov
mov
mov
enter
out
fdivrs
call
je
in
test
sub
hlt
or
jl
mov
push
and
leave
dec
shlb
jb
std
rorb
mov
mov
xor
jbe
or
pop
and
mov
sbb
mov
pushf
mov
ret
das
repnz
pusha
sub
pop
pop
loopne
and
push
bound
pusha
pop
pop
and
push
jns
adc
sti
mov
add
or
inc
sub
pusha
cmp
int3
jp
loopne
jg
and
push
mov
lea
add
jp
rclb
ss
xchg
adc
or
push
iret
sub
inc
jnp
popa
inc
or
or
jne
xor
repnz
loopne
xchg
mov
lods
leave
add
cmp
cmc
push
sbb
push
mov
in
and
jl
and
loopne
xor
add
and
cmp
loopne
loope
mov
scas
xor
test
jmp
jl
or
inc
pusha
add
movsl
mov
mov
push
push
sub
pop
js
bound
push
or
pusha
sbb
incl
sub
punpcklwd
jecxz
mov
jle
pusha
gs
pop
adc
push
fsub
pop
mov
mov
cmp
lock
stc
jb
or
add
lcall
popa
add
incl
and
mov
jp
xor
and
sbb
pop
adc
in
fs
or
sbb
and
scas
dec
xor
push
jecxz
das
fmuls
jg
repnz
jg
in
stos
pusha
adc
add
mov
das
mov
ss
loope
loopne
imul
pop
jbe
lods
add
addl
lret
lods
std
ret
pop
and
xchg
test
ss
sub
imul
push
inc
ret
pusha
mov
cld
or
aaa
hlt
inc
dec
xorb
js
cmp
jle
pop
icebp
je
push
pop
fs
pusha
adc
dec
sub
fwait
mov
and
subb
add
pusha
push
push
in
sub
mov
mov
lea
hlt
gs
cli
scas
xor
mov
push
lea
mov
sarl
in
add
lea
movsl
pop
pop
int3
push
scas
push
xor
fs
mov
in
sub
xchg
ror
testb
jb
das
sbbb
jb
data16
inc
pop
pusha
xor
dec
lock
orl
call
and
call
and
iret
loopne
rcr
xor
lcall
add
outsb
fwait
add
push
add
jp
bound
mov
and
outsl
inc
dec
mov
cmc
mov
call
negl
push
add
add
orl
test
daa
je
or
push
in
mov
push
sarl
outsl
or
pusha
add
loopne
mov
adc
or
mov
data16
popa
add
faddl
xchg
inc
push
jg
divb
mov
and
fimuls
xchg
aas
dec
and
in
adc
cmp
cmp
lods
xor
das
lock
and
mov
cmp
push
add
mov
xchg
and
loopne
addl
fdivrl
les
push
popa
cld
test
mov
stos
lods
outsl
mov
inc
loopne
ljmp
mov
fisubrs
sub
jg
movzwl
mov
adc
dec
mov
mov
jo
add
mov
push
roll
mov
cld
inc
mov
push
pushl
pop
lret
jo
inc
adc
xor
jne
jo
lea
scas
lea
scas
call
add
add
push
pop
add
outsl
dec
jmp
es
mov
cld
xor
mov
scas
shlb
add
and
and
leave
test
aaa
in
nop
mov
xchg
std
mov
hlt
adc
and
jp
mov
das
mov
xor
push
add
push
mov
mov
call
ljmp
scas
mov
sbb
xor
jmp
push
inc
sbb
sti
push
call
dec
jmp
cli
sbbb
push
add
xor
mov
add
bnd
mov
scas
ficomps
jo
adc
rcrb
ds
mov
aam
cli
push
data16
lock
inc
hlt
adc
js
lock
cmp
or
mov
push
pop
inc
jo
stos
dec
dec
in
scas
shlb
push
mov
je
push
or
es
decl
jl
add
lods
push
xor
mov
daa
dec
add
or
insb
jno
adc
neg
mov
inc
pop
inc
sbb
mov
dec
je
and
call
mov
jo
repnz
call
icebp
push
adc
pop
fcomps
mov
lock
pop
inc
data16
xor
es
imul
icebp
add
xchg
les
call
mov
decl
mov
stc
xor
loopne
scas
push
mov
mov
or
in
das
or
push
icebp
add
xorb
or
xchg
inc
mov
jl
je
or
sub
testb
sub
insl
bound
in
or
push
adc
mov
fdivs
or
lds
sbb
out
adc
mov
clc
jo
out
push
cmc
mov
dec
mov
cmc
pop
or
mov
testl
mov
jo
lods
lret
push
push
call
outsl
pushl
push
jb
push
je
sti
and
sbb
xor
mov
xor
push
cmpsb
lock
incl
mov
adc
xchg
pop
sti
mov
pusha
jne
jmp
fwait
test
xor
mov
xor
adc
ret
roll
call
push
add
loope
add
and
loop,pt
dec
or
std
jo
pop
cmp
test
add
push
lods
test
call
js
xchg
jne
pop
test
xor
add
xorl
add
mov
push
push
jb
icebp
add
adcb
je
ret
pop
mov
por
addl
mov
adc
shrl
mov
repnz
jg
out
push
pop
inc
mov
aas
repz
cmp
je
jo
in
jg
jmp
sub
pop
out
loopne
rclb
pop
jb
test
mov
in
aam
mov
jmp
and
das
call
jbe
inc
fdivp
idivb
in
push
movsl
push
pop
fidivs
jb
or
xchg
call
les
inc
mov
lock
test
fsubs
push
pop
or
pop
popf
adc
subl
push
mov
cltd
aaa
orl
enter
pop
shl
push
test
not
test
jo
and
mov
call
and
pop
mov
mov
fdivs
inc
lods
ret
shl
cli
xor
sti
xor
mov
lea
xlat
xor
cmp
add
stc
xor
out
inc
xchg
pop
pop
pop
xchg
sbb
in
jo
push
test
add
adc
xor
push
and
std
pop
jmp
lock
jb
and
add
pushf
inc
jg
add
pop
cmp
xchg
mov
jne
notl
lock
push
sar
xchg
aas
jmp
jo
sub
mov
dec
movups
add
mov
push
test
cltd
data16
cwtl
mov
stc
mov
xchg
pop
lea
add
jmp
pop
stos
js
jbe
xor
mov
lods
out
das
push
shlb
or
jl
clc
mov
mov
add
inc
sti
incb
or
shll
or
xchg
push
jp
addb
push
cld
pushl
dec
or
lea
lock
sbb
push
decl
dec
lret
inc
ja
adc
in
lods
xor
into
push
jmp
movb
cmp
or
filds
push
push
movzbl
xor
add
into
test
mov
ret
call
repnz
js
ret
cmp
bound
scas
jo
js
imulb
outsb
add
dec
int
insl
jnp
adc
push
int3
rorb
jbe
add
add
lcall
lcall
je
push
and
arpl
xor
sarl
cmp
pop
adc
mov
lret
push
shr
push
ret
decl
js
add
je
inc
fildl
inc
pop
jae
jno
mov
ljmp
inc
mov
pop
xorb
loop
pusha
pusha
je
push
add
mov
xchg
inc
sbb
and
and
shl
jo
insb
cmp
lret
xchg
pop
push
sub
push
ret
cwtl
jmp
lods
push
pop
pop
mov
ja
inc
pop
je
incb
xor
imul
mov
or
adc
inc
daa
lock
jb
push
add
add
push
mov
aaa
cmpl
adc
adc
cmpsl
icebp
das
xor
cmp
mov
push
add
sbb
lock
sbb
dec
push
mov
add
sbb
jne
test
jo
lock
jg
rolb
push
dec
rorl
adc
xor
cmp
add
jmp
xor
in
fiadds
ret
jmp
dec
lock
je
jmp
loop
pop
mov
jae
mov
sbb
int
scas
je
mov
ret
jle
jbe
int3
lcall
shlb
or
and
cld
addl
lock
clc
mov
xchg
nop
jg
dec
dec
insb
lods
mov
push
add
testb
movl
hlt
jmp
mov
daa
add
adc
xor
insb
pop
insl
inc
add
insb
nop
pushf
jo
cli
push
stos
sbb
xchg
sub
inc
mov
je
pop
mov
add
sub
sub
shll
pop
adc
mov
stc
or
push
fdivs
es
sbb
mov
shlb
es
cs
les
out
cltd
sub
cs
jnp
jmp
mov
insb
mov
push
dec
pop
dec
cwtl
mov
and
ljmp
popf
add
hlt
ja
sub
movl
insl
mov
aam
or
es
push
cmc
xchg
aam
jmp
lret
sbb
push
fs
jl
hlt
inc
test
incl
adc
mov
add
pop
jmp
test
push
fildl
mov
mov
mov
stos
inc
mov
call
dec
lods
mov
pop
sbb
fcompl
orb
adc
test
filds
adc
loop
lock
inc
orl
shl
inc
cld
sarb
out
jge
hlt
jge
push
test
pop
lea
lds
hlt
adc
xor
popa
sahf
lock
or
push
push
hlt
or
adc
jp
and
push
push
shlb
imul
pop
ret
je
add
adc
push
or
add
and
addb
icebp
mov
addb
std
fisubs
xlat
jbe
mov
sub
fcoms
jl
add
adc
or
mov
sbb
pop
add
sub
mov
mov
mov
repnz
push
or
cmp
sbb
or
sahf
xchg
or
std
pop
add
ja
scas
cmpb
andb
daa
jbe
push
sub
inc
inc
cld
inc
and
or
sar
add
ljmp
int
idiv
sbbb
add
mov
cmpb
mov
xorl
pop
adc
jl
adc
dec
jmp
and
rorb
add
or
mov
jne
jg
push
invd
jp
mov
shll
andb
push
insl
in
aad
ret
gs
ret
xlat
inc
out
xchg
cs
mov
fisubrl
clc
fstps
jmp
lret
clc
pop
std
mov
inc
data16
rcrb
add
sbb
add
les
add
test
scas
push
shlb
hlt
ljmp
push
cmpb
call
adc
dec
or
add
loope
pusha
sbb
mov
out
ds
insb
or
mov
les
and
loop
shlb
adc
xor
xor
push
in
jbe
mov
arpl
push
cmpl
inc
xor
mul
or
pop
mulb
sbb
dec
mov
add
mov
ret
sub
jle
fadds
sbb
add
mov
mov
clc
sub
jmp
bound
mov
inc
add
andb
push
adc
je
xchg
shrb
fdivp
int
inc
sti
data16
aas
inc
and
cltd
mov
mov
jo
outsb
or
inc
loopne
test
pop
dec
jmp
clc
mov
test
stos
ret
test
inc
cmp
incb
shlb
dec
or
sbb
xchg
cmpsb
push
adc
rorb
outsb
shrl
sar
sbb
mov
cmpsl
cmp
std
add
inc
shlb
add
imul
int3
leave
cmp
fwait
outsb
xchg
lock
nop
test
lock
lock
pusha
cmp
mov
mov
add
pushl
add
pusha
sub
jbe
aas
adc
sbb
sbb
xor
mov
cmp
jl
add
loope
inc
das
push
push
and
mov
pusha
adcb
xchg
dec
inc
loopne
push
pop
lahf
add
incl
je
sarl
and
loopne
push
js
mov
add
ret
fwait
or
pop
push
mov
orb
and
jbe
sbb
mov
mov
sti
ja
pop
je
jg
sbb
add
adc
jmp
mov
es
in
lea
pusha
pusha
call
loopne
bound
loopne
ret
loope
test
lock
pop
insb
jp
xor
or
insl
adc
jmp
jmp
mov
loopne
bound
add
pusha
push
adc
in
sbb
int3
js
cmp
and
pushl
outsl
aam
inc
cmp
jb
mov
pop
js
or
add
cmp
inc
inc
loope
mov
mov
mulb
bound
or
inc
xchg
inc
inc
mov
lea
add
add
sub
jbe
je
xchg
lea
sti
out
pop
add
add
inc
mov
andb
or
push
sbb
dec
add
loop
xor
lods
push
push
insl
sbb
pop
sar
sar
pop
faddl
sub
pusha
jns
lea
aad
push
jl
jp
add
xchg
dec
testb
adc
cmpsb
add
mov
in
sar
add
loopne
movl
dec
jge
push
fwait
xor
test
ds
cltd
in
mov
push
mov
mov
loope
sub
divl
cmp
xchg
add
sub
mov
mov
xchg
and
pop
mov
jg
lock
pusha
cltd
loopne
cmp
pop
pcmpgtd
lea
pushl
test
mov
mov
pusha
xor
and
add
pusha
xchg
call
mov
aas
push
je
mov
add
outsb
add
ss
imul
push
loopne
repnz
ljmp
inc
call
aad
loop
inc
inc
mov
sub
loope,pn
sbb
popa
dec
adc
adc
lret
inc
daa
xchg
lret
repz
loope
in
adc
mov
pop
dec
loopne
push
sbb
hlt
lret
cmp
mov
mov
lea
or
fs
testl
pop
pusha
outsl
cmpsb
jbe
or
sub
mulb
dec
popa
aas
cmp
adc
ror
push
dec
mov
cmp
je
pusha
or
add
pushl
or
movsb
jecxz
adc
je
jno
jo
loopne
dec
sbb
add
push
or
and
pop
adc
jo
cmp
cs
sbb
sti
insl
pop
xchg
scas
addb
adc
and
stc
pop
dec
cmp
dec
arpl
popf
lcall
mov
orb
inc
add
icebp
dec
enter
mov
add
icebp
and
testb
mov
dec
add
push
out
push
call
test
or
mov
mov
jno
ret
aam
mov
jl
fisubrl
add
cmp
sub
xor
sbb
sbb
cmp
cmp
push
outsl
ljmp
and
push
inc
xchg
mov
mov
mov
sti
push
loopne
das
shlb
orb
dec
mov
inc
and
lcall
fsubrp
jbe
dec
sbb
pop
xor
jecxz
subb
cmp
sbbl
mov
jo
das
js
mov
and
sbb
adc
sbb
dec
mov
xchg
cmpb
dec
icebp
add
adc
and
cmpl
or
mov
cmp
movsl
xchg
sbb
outsl
cli
dec
dec
xchg
add
fnstenv
insb
lock
out
add
fildll
vmwrite
subb
int3
xor
sbbb
add
loop
test
icebp
dec
push
out
fistpll
cld
shlb
cld
enter
add
pop
xor
enter
lds
sub
jo
out
or
inc
mov
and
ljmp
jo
les
jmp
pop
sub
mov
add
mov
jmp
stos
jle
loopne
add
add
fnstenv
push
sbb
aas
je
inc
hlt
and
cmpsb
fwait
repnz
cmc
add
data16
sub
mov
in
and
dec
inc
or
jo
cmp
push
dec
mov
mov
addb
fdivrl
xor
in
mov
lock
mov
loope
fisttpl
pop
pop
and
jae
ret
add
and
sub
mov
xor
or
sub
add
or
outsl
push
push
mov
mov
je
jne
add
mov
imul
jp
addb
push
jmp
push
mov
push
cld
push
jg
ret
xor
ret
mov
jb
and
push
jae
mov
add
jp
mov
mov
out
pushf
jo
fisttpl
dec
and
ja
mov
mov
xchg
sub
loopne
push
lds
lcall
ljmp
lock
adc
add
xor
leave
push
xor
xchg
js
push
lea
inc
out
inc
fnstenv
push
test
inc
xorb
add
lea
into
add
icebp
incl
lcall
dec
lock
cmp
adc
add
mov
add
call
mov
addb
cmp
xchg
call
inc
inc
clc
outsb
cmp
setne
inc
je
mov
test
repz
loope
lock
dec
xor
add
lods
or
jle
push
inc
sbb
outsl
cli
or
inc
lock
stos
mov
jmp
cmc
or
repz
adc
or
or
mov
push
mov
mov
and
jl
add
test
test
icebp
or
decl
sbb
scas
inc
jbe
pop
xor
add
int
mov
pop
jmp
fnsave
mov
or
sti
xor
sbb
adc
push
or
add
lock
push
pusha
add
shlb
dec
mov
shl
add
adc
lcall
jo
sbb
lret
inc
testb
jmp
mov
aaa
add
adc
pusha
mov
sbb
jae
addb
or
mov
sub
mov
jbe
andb
pusha
mov
je
ret
push
xchg
mov
fmull
add
in
jo
xchg
inc
pusha
sbb
fs
mov
fdivl
adc
aas
cmp
ss
add
cwtl
inc
push
lds
or
cld
mov
cmp
ja
mov
rcll
pusha
andl
or
nop
stos
mov
cmp
pushf
xor
cmp
jbe
test
xchg
mov
aam
xorb
and
cmc
aad
jg
adc
mov
jnp
jo
pop
and
addb
dec
xor
push
mov
cmp
bound
adc
rol
inc
shrb
lock
or
sub
sbb
mov
sbb
ret
jns
outsl
adc
xor
sub
xor
add
repz
repz
pop
or
cmp
es
mov
adc
cmp
push
xor
pop
push
cmp
pop
mov
add
mov
lock
xchg
jo
jb
adc
adc
clc
incl
sub
add
jmp
test
insb
test
jo
mov
outsl
scas
or
or
jbe
jb
or
in
or
jns
icebp
add
xchg
xor
ret
or
jae
shl
ret
fcoml
mov
pushf
add
or
scas
add
rcll
xor
clc
push
dec
jne
push
dec
roll
ljmp
ret
inc
or
dec
mov
inc
ret
dec
ja
mov
add
dec
xorl
stos
rorl
xor
mov
ret
cmp
rcr
dec
jo
or
and
pop
rclb
add
add
inc
mov
loop
lock
stos
mov
push
es
mov
xor
jo
add
loope
idivl
iret
sub
decl
pop
lret
push
adc
cmp
push
or
fstl
lock
lret
pop
push
out
mov
jnp
xchg
out
cli
jo
add
data16
jle
mov
shrb
jmp
adc
jmp
xor
cmp
jno
and
xchg
jmp
jne,pt
mov
pop
pushl
add
add
outsl
aaa
xor
jmp
add
lds
cld
mov
mov
cmp
gs
xor
lock
cli
cmp
add
ret
imul
mov
push
enter
shl
or
ret
mov
or
pop
cmpsb
repnz
addl
or
orb
push
fsts
lock
mov
ds
aad
das
mov
xor
cmp
jl
or
fldenv
shl
orl
xor
jge
mov
shl
insb
roll
cld
mov
enter
pop
cli
mov
adc
add
mov
jle
int
mov
and
int
jp
in
jle
sbb
adc
lret
ss
fidivs
jbe
hlt
push
xchg
loopne
cs
and
mov
push
jae
adc
inc
fstpt
add
dec
or
jbe
add
xchg
xor
cmp
mov
mov
inc
sub
insb
test
filds
jne
add
into
loop
xchg
fimuls
ljmp
add
xor
add
pusha
xor
dec
mov
or
andl
or
imul
dec
cld
jb
adc
dec
test
jne
mov
fists
jle
dec
lock
repnz
int3
cmp
push
adc
lock
jmp
add
add
add
movsbl
es
pop
push
addb
add
xchg
sbb
inc
mov
jo
dec
xor
outsl
xor
sub
hlt
orb
pop
les
mov
mov
sub
push
adcb
inc
dec
lock
stc
mov
sbb
loop
imul
ficomps
add
jg
cld
fstpt
cwtl
adc
rclb
in
add
mov
push
or
jl
lods
sbb
lcall
pop
divl
adcb
pop
jo
rclb
jmp
dec
adc
cld
or
or
adc
gs
pop
xlat
dec
mov
xor
imul
fists
sar
stos
add
add
xor
and
rorl
and
cmp
jl
sub
stc
mov
test
mov
ret
xor
test
or
xor
in
sbb
sbbl
nop
jl
adc
decb
xorb
fiaddl
inc
aaa
sbb
outsb
sub
cmpsl
pusha
adc
inc
jl
inc
les
pusha
mov
jbe
cmpsl
mov
sbb
iret
inc
movups
xchg
jge
inc
cltd
movsb
xlat
test
roll
and
mov
push
xchg
sbb
outsb
cmp
add
or
add
je
dec
ljmp
xchg
aas
jp
lahf
rorb
add
hlt
inc
testb
stos
sbb
outsl
add
mov
or
cmp
or
lock
sub
cmpsb
push
inc
push
sub
cld
adc
rcr
or
lock
rorb
xor
xchg
or
xor
std
cmp
in
add
fcmovb
cwtl
cmp
popa
in
and
inc
adc
scas
shrb
mov
or
sbb
lds
les
movl
rclb
adc
sbbl
popa
adcb
popa
cmpb
push
subb
jbe
dec
leave
outsl
jp
daa
adcb
jg,pn
xor
call
adc
loope
mov
or
or
repz
add
inc
cld
lret
sub
loope
in
inc
loop
cmp
in
jecxz
or
pop
jae
mov
push
mul
and
adc
cmpb
jmp
aad
jnp
addr16
stos
or
mov
jb
cmp
xor
pusha
or
sbb
pop
or
cmpb
sbb
jecxz
mov
and
out
add
mov
dec
jg
adc
mull
lock
pop
test
into
loopne
aad
add
mov
loopne
push
inc
lds
adc
pop
xlat
nop
or
cld
jne
add
dec
lahf
dec
xchg
les
ljmp
in
pusha
mov
add
or
push
nop
ss
push
and
lods
loope
loop
loopne
sbb
test
jmp
or
ljmp
or
and
xor
adc
pop
loopne
or
adc
lcall
outsb
imul
imul
pop
sub
and
jb
loopne
dec
xor
add
popf
and
or
ljmp
cli
or
mov
rcrl
push
mov
lahf
push
std
loope
lret
or
dec
pop
ret
cmpb
pusha
cltd
pop
imul
push
dec
scas
adc
pusha
mov
fs
int3
in
stos
mov
push
jecxz
dec
loopne
xor
aas
es
dec
mov
lock
mov
push
push
push
fiadds
mov
insb
cmp
roll
push
fs
bound
push
int
test
leave
mov
or
fisttpl
add
or
add
ret
cli
and
vmread
adc
and
adc
push
lock
leave
cld
loope
cmp
push
pusha
scas
xchg
int3
dec
in
jb
dec
jo
daa
and
add
nop
jbe
lea
cmp
es
jne
or
inc
fadds
and
pop
call
ja
dec
sub
in
fidivrl
fcomi
ds
add
dec
sub
sub
lods
cs
ljmp
add
adcl
sub
cmp
xor
dec
add
jmp
inc
pusha
adc
mov
mov
adc
incl
add
lock
jle
imul
and
cli
bound
jle
pusha
or
out
cli
scas
js
xchg
add
mov
nop
or
inc
sbbl
cmp
popa
jl
mov
in
pushl
cmpsl
add
inc
fsts
mov
lea
and
or
sbb
sbb
add
or
sub
bound
jmp
add
in
jo
lock
add
mov
cli
les
je
inc
hlt
add
insb
jmp
cltd
lock
add
sarb
testb
adcl
std
cmove
test
mov
fucompp
arpl
push
add
jae
add
and
mov
inc
cmpsb
jle
or
add
inc
in
cmp
xor
ret
mov
icebp
inc
ret
jo
aaa
inc
add
or
inc
jmp
out
inc
and
je
or
mov
mov
add
jmp
push
testb
and
push
ja
shlb
fistpl
cmc
or
jnp
or
dec
xchg
push
popa
dec
imul
call
add
inc
xchg
jo
xor
jl
aaa
jg
add
data16
mov
dec
mov
adc
icebp
mov
lock
jle
push
adc
outsb
mov
jl
sub
add
mov
and
loop
xchg
pop
ljmp
in
jg
pop
jnp
lock
mov
jle
mov
xor
xchg
in
fdiv
pushl
push
jno
xchg
or
or
nopl
stos
or
xchg
mov
push
mov
adc
cmpb
sarb
jae
test
jle
sbb
fstl
push
jecxz
add
mov
inc
loop
sbb
sbb
fcoms
mov
lds
inc
mov
pop
fisttps
mov
cmp
mov
inc
xor
scas
jl
testb
hlt
call
sub
mov
aam
cmp
push
jle
xor
icebp
lock
jnp
in
inc
or
jo
test
clc
fbld
cmp
push
adc
xor
push
icebp
xor
sbb
mov
jge
je
fdivrp
mov
jae
jo
jo
or
adc
inc
xchg
xor
fucomi
and
jno
sbb
mov
mov
cmp
mov
cmp
add
jb
and
jmp
xor
or
clc
cmp
mov
repnz
pop
hlt
data16
mov
pop
incl
shr
sub
lock
shlb
stos
aad
insb
jo
adc
adc
repz
pop
outsb
mov
inc
push
jl,pt
sbb
jo
mov
mov
and
mov
jmp
lods
lock
repz
add
test
lock
in
outsl
inc
mov
jmp
imul
add
sbb
inc
fucompp
addb
inc
repnz
xor
mov
mov
adc
xor
fcompp
jo
jb
push
mov
push
inc
mov
outsb
push
mov
adc
inc
pop
sahf
jne
and
negb
jbe
dec
into
lea
outsb
call
mov
out
add
cmc
pushl
and
sbb
lock
adc
das
cld
ret
lock
push
aaa
sbb
aaa
push
nop
adc
xor
mov
sti
jae
xor
mov
fwait
mov
insl
lods
std
loopne
sbb
inc
ss
push
mov
lock
ficomps
push
repnz
add
popf
add
and
popf
pop
adc
xor
mov
ficomps
cmp
jae
add
pop
adc
leave
les
adc
jae
xor
popa
orl
movl
add
fldt
and
and
jmp
xor
push
add
mov
or
mov
nop
add
sub
stos
mov
xor
lea
inc
pusha
pop
lock
cmpsl
xchg
pop
mov
rolb
jbe
xor
jb
pop
jmp
add
add
data16
push
mov
shlb
cmpsb
cld
lcall
xor
test
add
sbbb
add
cmp
fs
decl
and
stos
adc
xchg
push
scas
hlt
xchg
pop
clc
xchg
xor
repz
xorb
and
js
or
stc
cmp
add
mov
cmp
mov
jo
and
jmp
dec
fistpl
incb
incl
nop
and
jbe
push
fcomip
lea
pmulhuw
addb
inc
jo
or
adc
shl
mov
pop
orl
sahf
loop
js
insb
mov
xor
push
pop
jo
mov
xor
or
inc
jmp
mov
xor
or
xchg
jmp
mov
push
add
mov
push
into
nop
dec
adc
clc
fbstp
rolb
jno
jno
mov
sbb
lods
int3
xchg
add
mov
jae
or
mov
add
or
cmp
cwtl
mov
in
mov
adc
rclb
mov
xor
les
xor
push
pop
xor
pop
or
std
add
loopne
inc
and
push
add
mov
jno
das
inc
in
cmp
sbb
sbb
lcall
lock
lock
add
call
outsb
or
and
out
and
pop
loope
adc
out
jo
mov
sbb
jecxz
shr
inc
lds
sbb
add
cs
test
dec
mov
out
add
and
xchg
or
jno
inc
cmc
or
mov
and
in
push
dec
add
loopne
mov
mov
shll
loop
cwtl
adc
add
repz
loope
mov
pop
jp
or
or
lods
dec
add
aaa
pusha
adc
inc
jle
and
sbb
cmp
loopne
cmp
out
int3
inc
les
rorb
adc
add
nop
fiadds
push
xchg
sbb
inc
push
add
cmp
loope
mov
xorb
mov
sti
mov
aam
add
mov
mov
fldl
mov
or
or
add
or
loopne
stos
cmp
fsubr
and
andl
icebp
inc
xchg
addb
inc
orb
outsl
lea
or
jne
gs
fld
mov
out
andl
mov
cmpsb
je
xor
out
push
ljmp
jo
std
and
out
inc
orb
cmp
ljmp
movsl
cli
mov
addl
mov
or
dec
or
mov
cli
ret
mov
cmp
mov
arpl
jbe
pushf
scas
inc
rclb
mov
jg
mov
nop
test
xlat
adc
or
orl
incl
daa
push
push
add
and
hlt
lcall
push
or
rclb
xchg
call
or
out
mov
add
pop
or
sbb
add
rorb
shlb
mov
jl
mov
stc
test
dec
or
add
mov
shll
adc
mov
incl
add
enter
xchg
pop
inc
inc
rorb
mov
add
adc
js
sbb
push
jg
push
lea
lea
jmp
pop
push
in
sbb
enter
or
outsl
xchg
push
push
add
push
sarl
mov
jbe
faddl
mov
mov
sbb
mov
sbb
pop
add
sbb
popa
xor
ljmp
sub
pop
rclb
cld
push
and
inc
push
dec
adc
shll
and
sbb
test
clc
adc
mov
dec
xchg
pop
ret
sbbb
xor
cmp
shll
scas
incl
pusha
inc
arpl
adc
jg
jbe
fwait
clc
sbb
xor
mov
stos
out
cli
or
mov
and
pop
lea
mov
shlb
nop
in
ret
sarb
mov
out
dec
fadd
push
je
ret
add
sub
iret
pextrw
or
or
ret
fsqrt
add
ffreep
into
xor
inc
shrb
adc
add
je
inc
add
jg
lock
xor
jb
out
pavgb
adcl
mov
dec
call
and
add
mov
cs
mov
and
loopne
jecxz
push
xlat
loopne
xor
in
mov
jmp
je
mov
adc
loopne
pop
cld
pusha
outsb
adc
enter
xchg
incl
dec
ja
pushf
fisubl
je
cld
pop
and
sub
rclb
ret
mov
jl
rorb
loopne
sbb
jbe
ljmp
hlt
hlt
test
popl
jo
sbb
lret
and
and
mov
mov
jecxz
lret
loopne
call
loope
data16
inc
mov
mov
fidivl
fdivrp
in
dec
addl
invd
jnp
in
sub
add
les
test
xchg
or
es
mov
cmp
enter
or
ss
cmp
movsb
in
pop
adc
int3
loopne
popa
ja
add
pop
test
mov
push
mov
and
jnp
and
hlt
sbb
mov
pusha
dec
push
xchg
and
outsb
adc
popa
xchg
lods
mov
adc
roll
enter
or
add
psllw
lock
xchg
loope
stos
shrl
sbb
mov
mov
cld
cmp
cmp
mov
shlb
xchg
sbb
sbb
addr16
push
fists
lods
sbb
mov
movsb
loope
dec
sub
jecxz
pusha
adc
sub
dec
das
xor
push
jecxz
pusha
mov
test
adc
out
clc
add
and
add
mov
rclb
cmp
repnz
add
jmp
sbb
xor
push
xor
shl
inc
xchg
popa
subl
sbbl
xor
sti
inc
pusha
cmpb
inc
lods
daa
popa
dec
data16
pop
shl
inc
cmp
add
cmp
adc
xchg
pop
mov
cmp
pushf
lea
cmp
push
cmpsl
push
dec
ret
or
mov
fisttps
jp
push
fsubs
inc
jmp
ljmp
push
jmp
je
inc
arpl
jecxz
cmp
pusha
pop
popa
cmp
das
sub
ds
cmp
ret
jecxz
popa
call
mov
xlat
popa
pop
lret
push
xor
jl
enter
or
mov
jne
and
in
and
loopne
ret
and
dec
inc
xchg
or
mov
mov
fs
xor
es
clc
pushl
ftst
repnz
xlat
bound
add
cmp
and
mov
fildl
pop
add
pusha
loop
clc
and
xlat
and
add
and
sub
inc
push
icebp
and
sahf
pop
pop
loopne
ret
call
xchg
test
test
sbb
and
rolb
mov
add
fimuls
fcom
sbb
inc
rclb
popa
and
and
xor
sar
cmp
lock
jae
adc
and
ja
addb
aad
mov
pop
mov
inc
lret
insl
or
inc
decl
test
mov
push
mov
pusha
xchg
jge
push
lods
or
jo
subb
add
inc
test
xchg
mov
andb
pop
movsb
push
jo
cmp
adc
add
add
mov
ret
add
xor
mov
lea
ss
insb
mov
jp
push
dec
sbb
sti
sub
pop
or
adc
fcoml
bound
add
lds
add
or
mov
or
adc
add
pushl
or
jmp
xor
or
jmp
or
iret
dec
loope
ret
jb
test
add
add
xchg
sti
pop
roll
nop
or
pop
inc
mov
pop
adc
pop
out
sbb
push
mov
add
push
push
xorb
andb
sbb
call
adc
dec
push
leave
sbb
insl
fcomip
sub
push
push
imul
adc
out
add
push
imul
in
insb
or
and
pop
int3
push
jl
lcall
ror
movsl
out
fildll
or
push
xor
adc
fcoml
lock
test
test
pop
or
sar
xor
repz
push
fcompl
xchg
lods
and
fwait
insl
test
cmp
add
add
mov
inc
xchg
push
loope
and
push
sbb
or
mov
cmpsb
mov
jecxz
inc
cli
dec
xchg
xor
add
into
xchg
icebp
jecxz
mov
dec
repnz
push
out
dec
outsl
or
inc
add
sbb
add
in
sbb
aaa
lcall
add
and
and
and
jg
mov
in
add
or
sub
sub
mov
add
das
add
out
push
xor
xchg
adc
cmp
mov
jno
mov
sbb
aas
mov
shrl
dec
nop
mov
imul
adc
push
insb
or
movsl
push
fiaddl
push
sbb
mov
test
cld
inc
or
push
test
dec
xor
mov
je
pop
jo
or
adc
lock
or
or
or
xchg
inc
mov
xor
out
inc
jns
push
pop
movsb
fisubs
stos
cmp
ss
mov
mov
cltd
jg
addl
or
outsb
enter
add
je
adc
sbb
sbb
leave
cld
ret
mov
mov
dec
add
mov
jae
ss
cmp
pop
nopl
mov
roll
pushf
stc
aam
jno
sar
push
dec
and
cmp
dec
out
or
mov
stos
lcall
icebp
sbb
dec
cmpsb
movb
sbb
clc
push
jmp
out
sar
mov
sbb
mov
jbe
inc
add
push
in
mov
sbb
inc
adc
cs
add
pushf
sub
lock
add
test
dec
lods
mov
stos
test
mov
aas
inc
lods
inc
push
xor
lea
inc
js
js
lock
mov
add
pop
cld
js
popf
cld
push
and
pop
pusha
jp
ds
call
mov
outsb
jp
in
dec
push
xor
sbb
lret
fbld
and
jb
lods
dec
rolb
cld
out
jle
subb
mov
pop
test
inc
ja
fildl
or
mov
repz
ds
pop
jo
or
xor
shr
jno
loopne
fwait
shlb
mov
sbb
push
testl
cmp
fsubr
test
clc
xor
mov
mov
adc
or
pusha
add
ret
lcall
jo
insl
cmp
cmp
xor
testb
ret
cmp
push
insb
test
sub
adc
sbb
lcall
mov
sbb
mov
xor
outsl
xchg
xor
rorl
mov
pop
cmpsb
jbe
mov
sbb
ds
decl
jo
add
push
sbb
scas
mov
std
jg
mov
or
add
pop
lock
inc
jg
or
andb
test
mov
xchg
es
mov
jmp
je
push
rorl
pop
rcr
xor
cmp
and
push
sub
dec
mov
icebp
push
aad
sahf
cmp
loope
sub
mov
push
jle
cmp
out
js
shrb
aaa
sarl
test
push
sub
mov
and
push
sbb
mov
mov
push
or
mov
add
hlt
pop
and
jp
xor
cld
decl
je
pop
xchg
repz
fidivrs
call
add
lock
pushw
pop
test
stc
jo
in
add
mov
es
ret
incl
movsb
idiv
cmp
jl
and
mov
shll
testb
jbe
cmpsb
test
lea
bound
or
mov
sbb
inc
sub
add
mov
xor
es
xor
shrb
or
add
pop
les
mov
call
cld
mov
jge
jl
mov
je
or
insb
into
repz
sarb
insb
add
mov
xchg
jmp
jl
xchg
cli
ljmp
jmp
testb
inc
or
mov
lock
js
mov
jo
jle
arpl
testl
fsubs
je
je
push
mov
lret
push
cmp
outsl
in
mov
push
inc
push
xor
push
cs
mov
es
cmovns
scas
jl
cmp
aaa
loopne
ja
and
jle
in
lock
inc
add
or
inc
frstor
sbb
push
clc
xor
cmp
add
cmp
jae
sub
dec
add
jmp
jo
in
repz
std
jg
pusha
pusha
pop
push
mov
mov
cld
mov
pop
pop
xor
or
xor
add
stos
jo
aas
mov
fmull
jmp
push
mov
aad
loope
cmp
jne
addl
pushl
add
dec
je
inc
les
jb
mov
mov
or
jp
push
aad
fists
out
inc
or
je
jmp
fisubl
jge
push
or
aam
subl
mov
loop
cmp
cmc
mov
les
sti
lret
push
scas
popl
and
jge
inc
mov
pop
cmp
xchg
push
cmp
jae
rolb
inc
rorl
daa
cmp
pop
inc
xor
stos
push
mov
pop
jbe
aaa
pop
push
jle
push
add
sub
ja
add
enter
xchg
mov
shrl
adc
mov
je
and
outsb
cmp
clc
call
dec
or
cmpb
jne
cmp
or
cmp
cmp
add
mov
push
mov
or
stos
in
jne
push
pushf
jne
adc
pop
clc
cmp
sbbl
call
popa
jge
inc
ss
popf
aas
add
faddp
test
in
int3
jbe
inc
les
jl
add
or
aaa
je
cmp
jb
jmp
aaa
mov
and
je
xor
int3
je
out
stos
test
rolb
sbb
fidivs
mov
lret
call
outsl
add
jbe
loopne
xor
xchg
add
sbbb
mov
sahf
push
mov
fisubl
loopne
adc
mov
sub
xchg
mov
popa
pop
std
jle
out
mov
cmp
mov
mov
lea
cmpsb
cmpsl
inc
das
je
cmp
sbb
out
jbe,pt
mov
call
das
loop
lret
cmp
divb
adc
dec
out
lretw
test
loopne
jmp
jne
pushf
daa
inc
or
mov
loopne
lcall
jge
mov
jge
ja
mov
fcomip
in
or
mov
cmpb
and
jne
outsb
cmp
pop
std
dec
pop
shl
adc
jl
mov
addl
jbe
sbb
lcall
fists
insl
lock
or
mov
stos
or
mov
push
pop
pop
add
pop
pop
shlb
jecxz
push
inc
in
and
jecxz
jle
aam
ss
sbb
xor
sub
dec
sti
jmp
mov
xorb
sub
inc
jl
add
fisttpll
mov
mov
fsubrl
add
aam
outsb
adc
mov
xchg
pusha
or
rorl
ffree
pop
pusha
idivb
xor
in
pop
dec
cmp
rorl
mov
sbb
nop
sub
movb
cmp
adc
jbe
add
cld
push
pop
xor
aad
enter
add
or
push
dec
clc
adc
andl
inc
add
or
dec
xor
mov
mov
cmp
cmp
xchg
add
and
sbb
test
mov
mov
cmpsb
xor
jmp
push
dec
loop
into
add
mov
mov
fdivs
mov
push
mov
cli
movsb
jp
cmc
cmpsb
adc
push
movl
std
es
jle
rorb
in
fisubrs
divb
or
jle
xor
lock
and
add
sahf
mov
push
pop
rorb
cmp
add
adc
push
lea
jecxz
add
jle
jb
sbb
incb
loopne
nop
add
jbe
cltd
inc
push
ret
pmaddwd
and
daa
add
inc
das
dec
push
into
repnz
mov
push
jl
jbe
int
call
fst
movsl
mov
es
pop
insl
push
cltd
push
mov
jle
push
sbb
shrl
xor
movsb
std
mov
ds
pop
xchg
addr16
outsb
lret
and
push
fldt
lcall
pushf
daa
jecxz
fld
push
lods
or
in
sahf
lldt
push
aam
jb
pop
les
pop
daa
jle
mov
mov
xchg
shll
cmp
lret
add
sub
hlt
test
or
push
push
fsubrs
adc
jbe
mov
jl
push
push
sub
out
sbb
ret
loopne
jge
jge
adc
mov
dec
xchg
add
loopne
and
add
inc
dec
xchg
dec
pop
push
inc
jge
test
ret
or
mov
test
inc
mov
or
add
dec
inc
sbb
dec
ret
mov
and
adc
loopne
pop
jne
adc
scas
jmp
xor
incl
jecxz
sbb
mov
push
xchg
hlt
rcrl
in
push
std
or
fldt
push
data16
hlt
sti
sbb
loopne
test
incl
sbb
mov
sahf
pusha
orl
pop
fwait
jo
outsl
scas
jbe
in
cld
jg
in
mov
mov
mov
add
fildll
mov
push
jno
test
sarb
mov
or
mov
mov
outsl
in
mov
dec
pop
sub
jno
ljmp
repz
fldt
aas
push
pop
addb
dec
out
jecxz
dec
pop
dec
and
push
popf
pop
int
incl
add
jmp
int
push
mov
lods
jbe
movsl
dec
outsb
mov
outsb
xchg
scas
mov
dec
or
scas
add
mov
jl
mov
scas
mov
xor
or
xor
clc
inc
ret
xor
xchg
push
mov
fisubs
sti
ud2
arpl
out
push
push
push
popf
push
or
cmp
jp
daa
subb
and
or
dec
jo
jg
adc
add
cmp
lods
push
push
test
sbb
adc
sbb
jp
call
cli
sti
add
fwait
test
in
ret
cltd
stos
inc
int3
fdivrs
pop
or
add
test
ds
aam
push
movsb
xchg
mov
pop
hlt
addr16
popa
shll
jp
rclb
fdivrl
inc
pop
pop
and
roll
stos
stos
pop
sbb
aas
loopne
push
rcll
ficoms
lea
cmc
push
add
loopne
mov
adc
adc
sub
add
cmp
insl
je
inc
push
sbb
adc
sti
je
or
and
xchg
add
add
push
add
cmc
js
mov
fcomip
jmp
xchg
or
xchg
or
int3
mov
inc
int3
imul
outsb
cli
or
nop
pop
divb
mov
adc
adc
ljmp
leave
lock
add
and
sub
and
faddl
jae
mov
or
xchg
push
jmp
jbe
pop
je
jb
lahf
mov
pop
sub
cmpb
shlb
push
in
fildl
lea
adc
or
dec
rclb
push
add
daa
pop
lret
dec
lret
orb
inc
inc
ret
or
xor
shl
scas
push
push
mov
cmp
test
dec
push
xchg
inc
push
or
incl
pop
add
repnz
mov
mov
dec
push
sbb
es
sti
push
lea
push
cmp
mov
orl
les
or
icebp
data16
cld
ret
pop
call
jo,pt
sbb
loopne
mov
push
outsb
jns
ds
mov
add
out
push
cmp
mov
sub
mov
jns
fistps
add
mov
mov
cld
or
push
mov
xor
mov
add
ret
out
sub
das
push
jp
push
popw
inc
pusha
js
aad
xor
or
shr
or
adc
push
lea
add
push
insb
and
jne
cs
lods
lea
scas
fldcw
loopne
nop
xchg
js
add
pop
sahf
bound
ljmp
cmp
je
movzwl
cltd
cmp
je
pop
adc
aam
push
dec
std
cld
js
mull
cmpsl
jne
ss
add
lods
inc
jb
shlb
sti
or
mov
inc
icebp
shr
fisttps
sti
add
jle
mov
mov
data16
ja
add
lea
ret
clc
jg
adc
pop
data16
jl
add
negl
aas
sbb
scas
push
mov
pop
test
xor
or
mov
mov
lcall
mov
mov
data16
push
je
adcb
fiadds
pop
rclb
xchg
test
aaa
hlt
adc
add
adc
mov
lcall
shlb
int3
cld
mov
jns
lds
xor
rclb
adc
inc
lsl
call
cwtl
adc
push
in
es
scas
dec
jmp
pop
jp
pusha
pusha
jne
add
cmp
jmp
pop
je
mov
xor
call
push
mov
nop
out
pop
or
iret
test
out
cmpsl
add
flds
enter
add
ds
sbb
pushf
push
add
and
jl
imul
cmpsb
je
sbb
add
fstpt
cmp
sub
inc
into
call
js
sbb
pusha
scas
sub
add
mov
rcll
ss
mov
cli
popf
js
pop
enter
adc
arpl
inc
inc
sbbl
pushf
mov
outsl
ds
shrd
add
sbb
xchg
lods
push
pushf
adc
push
cmova
dec
push
inc
xchg
xchg
mov
scas
push
mov
inc
js
adc
xchg
out
mov
jl
inc
push
dec
pushf
sub
outsb
shll
sub
jbe
dec
fdivl
sbb
or
cli
std
inc
inc
and
jne
mov
xchg
mov
mov
movb
imul
std
jp
xchg
outsb
cmovs
inc
dec
scas
invd
movsl
stos
push
inc
lods
scas
sahf
js
xchg
test
mov
shr
popf
std
ja
mov
inc
mov
xor
popl
nop
pop
dec
lods
xor
cs
pop
or
push
mov
ja
dec
cmp
je
lea
mov
or
dec
jle
shrb
lock
or
dec
or
mov
outsl
inc
les
push
mov
jns
cld
out
sbb
add
pop
pop
adc
mov
aad
mov
dec
mov
cld
jg
loopne
add
mov
aad
faddl
mov
inc
inc
dec
mov
jg
dec
inc
jp
pop
jg
add
push
adc
mov
jbe
xor
pop
lea
xchg
nop
int3
fisttpl
cli
or
orb
dec
insl
xchg
mov
cltd
test
das
mov
jl
add
dec
jne
mov
add
push
xchg
cmp
lret
clc
push
or
push
xchg
les
subb
jg
fstl
jbe
mov
or
subb
das
outsl
fcoms
mov
neg
in
and
lea
out
add
pop
mov
push
fsubl
pop
and
pop
ret
xchg
or
js
je
xchg
addr16
mov
shrb
bound
jbe
leave
arpl
insl
push
call
push
lock
addr16
and
sahf
mov
lods
mov
mov
fs
bound
mov
push
fsubl
add
adc
cmpsb
push
or
les
cmp
lea
cmp
je
jne
cmc
fs
cs
les
or
or
mov
fildl
push
test
fsubrs
sbb
fisttpl
insb
loopne
xchg
push
push
outsb
mov
inc
into
mov
push
pushf
or
andb
or
out
scas
dec
adc
push
add
lcall
mov
mov
jmp
push
sti
push
repnz
xor
jbe
push
add
inc
xor
mov
or
mov
scas
xor
sahf
inc
lock
mov
testb
je
push
movsb
mov
jle
push
cmp
inc
mov
add
lock
adc
pop
pusha
lods
orl
sbb
xchg
mov
push
add
push
es
test
test
mov
add
mov
lcall
push
ret
pop
les
in
or
adc
pop
lods
loopne
sbbb
clc
mov
pop
add
or
mov
add
test
mov
mov
pop
scas
sub
push
les
addb
push
addb
int
fcomi
push
add
ret
jbe
negb
adcb
add
push
add
pusha
in
pop
mov
xchg
andb
ficoml
push
dec
adc
adc
and
and
xorb
add
addb
or
push
cld
or
movsl
cmpb
dec
ret
clc
lcall
mov
cmp
lcall
jecxz
push
cmp
lea
cmp
mov
mov
push
addb
sub
or
icebp
popf
push
incb
adc
jb
cmpl
subl
jg
adc
add
sarb
mov
int3
or
mov
pop
ds
pop
mov
ja
sub
mov
shlb
outsl
cli
adc
lar
rolb
lock
movsb
jne
pop
jne
mov
int3
add
or
out
push
popw
loopne
or
jne
mov
data16
cmpsb
pop
mov
xchg
stc
rol
sub
mov
hlt
cmp
ret
lods
or
test
in
push
std
push
inc
add
adc
loop
cld
aam
and
rcrb
vshufps
pop
adc
rol
add
inc
mov
aaa
in
out
scas
cmpsb
mov
inc
div
je
call
aas
jg
mov
insl
adcb
jb
aam
test
add
sub
cmpsb
mov
test
push
inc
push
add
es
or
outsb
push
fcoml
cwtl
push
mov
add
fadd
xchg
adc
movsb
rolb
stos
in
mov
xchg
js
pop
inc
call
push
pop
mov
sub
adc
mov
adc
mov
mov
sbb
dec
shr
jmp
jno
mov
mov
dec
mov
inc
mov
out
dec
in
rolb
rorl
lock
dec
push
roll
es
dec
and
out
pop
out
insb
shlb
ljmp
scas
dec
pop
xor
push
adc
adc
adc
adc
or
xchg
ret
ret
loopne
ja
fs
inc
cmp
insb
fildl
jbe
stos
xor
fisttps
loopne
lock
hlt
mov
loop
push
push
sbb
ljmp
mov
cs
and
pop
cmpb
or
or
xchg
stos
inc
hlt
bound
test
pop
pcmpgtd
or
inc
cmpsb
mov
mov
jmp
dec
push
xchg
fldt
jb
sti
fdivr
push
xor
aam
push
mov
inc
and
dec
call
mov
add
incl
ret
or
push
push
je
imul
stos
lods
cmp
std
in
loopne
xor
fnstsw
adc
scas
pushf
xor
pusha
gs
mov
testb
sbb
loopne
out
je
lea
mov
call
or
sbb
fcom
pusha
or
add
loopne
pop
pusha
arpl
sbb
cmp
xor
xchg
inc
loop
xchg
movsb
pusha
nop
inc
dec
add
and
xor
mov
and
mov
incl
jno
loopne
call
add
mov
mov
ret
lock
pusha
lahf
push
mov
mov
xor
sbb
or
testb
add
gs
adcb
cmp
loopne
or
lock
daa
xor
cmp
les
pusha
push
jg
test
pusha
adc
shl
ja
pusha
and
shlb
xor
andl
idivb
jne
testb
je
test
jbe
cmpb
adcl
loopne
or
inc
push
jecxz
or
mov
in
sbb
sarl
cld
or
jge
cwtl
add
push
ljmp
negb
push
or
pusha
das
push
add
adc
xchg
mov
or
addl
cmpb
mov
and
pusha
lcall
bound
sub
aad
pop
bound
or
adc
cwtl
js
mov
andb
lahf
loopne
pusha
jle
cwtl
sbb
mov
cld
jg
mov
por
jl
clc
nop
add
pusha
sbbb
and
pusha
and
xlat
add
mov
push
nop
scas
ret
clc
mov
loopne
mov
loope
add
testl
pop
clc
xor
call
xchg
adcl
idivb
add
sbb
inc
sbb
pop
addb
inc
mov
add
cld
enter
mov
sub
or
adc
mov
dec
mov
sub
mov
pop
mov
icebp
add
loopne
loope
jecxz
cmpsb
clc
adc
popa
outsb
aas
jmp
dec
sub
data16
dec
push
add
inc
es
scas
mov
lds
enter
mov
mov
mov
test
fbld
cmp
cmpl
sub
decl
loopne
jne
add
push
jmp
cmp
add
or
sbb
add
and
popa
push
outsl
outsl
cmp
pop
mov
sub
xchg
and
dec
lea
inc
sarb
incl
jmp
movl
jge
cld
jne
arpl
test
add
add
mov
js
push
and
add
cld
clc
fwait
inc
je
pop
jl
cmp
leave
popa
pop
mov
push
sub
push
nop
push
pop
cld
pop
mov
or
mov
sbb
or
call
outsb
adc
dec
jb
inc
fdivl
or
cmpl
adc
mov
push
call
mov
cmp
jg
adc
ja
test
mov
test
xor
mov
cmp
shlb
push
je
frstor
or
add
add
mov
and
and
mov
call
dec
shlb
mov
mov
or
push
xor
pushw
inc
adc
leave
jle
push
push
push
jp
rcrb
sarb
lods
push
mov
call
adc
sub
je
faddl
insb
movsl
lock
push
lock
xor
in
sub
dec
lea
and
shlb
or
out
sub
jno
pop
mov
leave
push
sbb
xchg
inc
adc
lcall
pusha
ret
sbb
idiv
xlat
adc
cmp
push
jne
push
xor
mov
call
xor
imul
mov
jmp
je
and
add
push
jp
outsb
test
jl
ret
inc
or
incl
shll
adc
xor
ret
add
clc
mov
or
mov
adc
xchg
clc
sbbb
mov
cli
mov
add
pop
push
movsl
test
inc
or
pop
mov
je
mov
add
adc
imul
lock
out
cmpsb
dec
lods
in
or
stos
add
or
decl
iret
repz
push
mov
pop
pop
ljmp
cmp
andb
xor
jo
mov
sub
pop
lcall
call
inc
mov
adc
ret
xor
lods
jno
js
adc
mov
adc
std
lock
mov
idiv
mov
test
push
lea
jo
or
jmp
lea
add
xchg
mov
xor
inc
clc
bound
sub
cmp
outsl
scas
fdiv
mov
adc
push
orb
fiaddl
ret
out
and
shll
shll
push
icebp
push
add
sub
pop
or
jle
jl
xchg
pop
pop
push
ljmp
mov
add
jmp
cmp
addl
fdivr
jg
adcl
pop
pusha
adc
aas
xchg
adc
pop
mov
pop
jo
mov
pop
lock
imul
out
lcall
xchg
out
pop
sub
or
cmp
iret
xor
or
jb
push
push
xchg
xor
rolb
xchg
pop
bound
pop
push
mov
mov
ja
jo
imul
mov
add
jbe
xor
ret
lcall
dec
push
and
mov
jle
bound
fildl
push
inc
or
mov
decl
lods
sbb
orl
lcall
add
insl
or
stc
jb
or
movsb
shrb
xor
and
arpl
and
sub
lret
or
adc
jle
pop
pop
dec
orl
icebp
push
adc
sbb
ret
xor
lock
add
jo
fucomip
sub
clc
push
sbb
jno
cmpb
cmpsb
dec
shlb
mov
sbb
and
cmp
call
xor
dec
jg
loopne
add
cmp
adc
fists
out
jb
jbe
jmp
dec
mov
add
push
lock
ljmp
fildl
sub
mov
and
sbb
or
lock
mov
and
mov
jecxz
pop
adc
lock
sbb
push
push
push
push
jae
pop
pop
lock
mov
adc
sub
dec
xor
nop
dec
inc
loop
or
jo
sbb
rorb
xor
adcb
cmpsb
popa
scas
cs
call
lock
xor
cwtl
leave
xor
mov
dec
and
icebp
dec
je
fisttps
mov
mov
fbstp
mov
or
inc
cmpb
ja
sub
and
adc
lcall
add
xor
clc
xor
inc
les
mov
cmp
mov
cmp
es
mov
lock
xor
xor
loope
add
cmp
mov
test
add
aaa
add
mov
push
hlt
jbe
clc
mov
sbb
mov
xor
les
loope
pop
lock
and
ss
mov
insl
jge
dec
dec
stos
addb
jo
sub
sbb
es
shlb
mov
mov
leave
ret
or
in
jb
mov
or
les
incl
pushf
in
add
pop
jmp
outsb
add
pusha
scas
dec
ljmp
hlt
mov
add
cmp
clc
add
pop
mov
add
sub
push
rcll
out
insb
xchg
jecxz
pop
mov
lea
aaa
xchg
mov
adc
jo
call
mov
lock
sub
jo
inc
add
mov
aam
push
pop
push
cltd
pop
cmpsl
int
jecxz
outsb
or
jmp
xor
stc
push
hlt
mov
push
push
decl
mov
jae
test
in
pop
jo
hlt
mov
jo
sahf
cmp
pop
adc
xor
cwtl
or
add
aaa
ret
call
pop
pop
lods
jb
lock
daa
push
sbb
and
add
sbb
mov
cwtl
push
mov
jo
je
insb
loope
hlt
jo
adc
mov
cld
or
xor
mov
add
lock
fidivs
add
and
inc
sbb
aaa
stos
dec
or
je
xor
jmp
mov
mov
dec
push
mov
and
lock
jb
pop
jle
popf
pop
pusha
mov
push
pop
decb
jle
adc
cld
pop
pop
pop
jae
push
xchg
and
jne
mov
inc
mov
xchg
jle
test
jmp
jnp
sub
mov
pop
push
test
inc
xor
jle
loop
fimuls
add
mov
es
cmp
mov
cmp
and
test
dec
push
add
dec
or
add
pop
lods
or
xor
cmp
jl
mov
ja
je
adc
inc
jb
outsl
pop
add
inc
fstl
addb
cli
or
inc
rcll
or
mov
rcll
cmp
aam
sarl
mov
mov
inc
lea
pusha
adc
fwait
cmp
adc
add
leave
mov
pop
shlb
cli
arpl
mov
pusha
push
cs
pusha
jl
adcb
mov
das
push
dec
add
xchg
jo
pop
cmpl
mov
decb
add
rcrl
adc
xor
adc
add
jo
mov
loop
repz
fcoml
add
xchg
adc
testb
jg
and
push
pop
orb
in
cmpsb
add
incb
fstps
mov
sbb
jae
pop
jno
adc
push
jb
cli
out
outsl
lahf
xchg
and
mov
call
dec
add
jno
pusha
adc
cli
or
add
xchg
dec
sub
mov
outsb
cmpxchg
test
adc
ftst
mov
pushf
pop
mov
mov
fldt
js
pop
js
int3
fs
lock
enter
popa
loopne
in
decl
andb
mov
movsl
pop
sub
jo
cmp
jmp
pop
subl
sbb
sbb
mov
sbb
sub
push
dec
sub
data16
adc
clc
ljmp
cmp
nop
sbb
ljmp
pushf
rcl
dec
enter
loope
mov
or
fs
xorb
cmp
test
xchg
in
adc
inc
push
add
inc
xor
roll
jle
xchg
cli
and
test
xchg
aam
push
push
xchg
xor
dec
fcomi
mov
inc
subl
shrb
mov
xchg
adc
sarb
std
outsl
loop
push
call
pop
lea
test
pop
xchg
out
push
push
inc
lods
daa
sbb
les
lock
xor
jmp
add
nop
jp
adc
fcmovnb
or
push
cmp
adc
pop
mov
ljmp
cmp
fcoms
in
pushf
cmc
and
add
lods
jl
incl
aas
push
call
repnz
and
and
inc
leave
sbb
inc
fisubl
jg
hlt
mov
add
fs
cmpsb
jbe
in
mov
xchg
out
push
xor
and
sbb
pop
movsl
cld
push
test
adc
mov
add
cmp
rcl
jmp
mov
dec
ffree
lcall
jle
shlb
in
xor
jns
outsl
sti
ljmp
adc
es
pop
rcrl
inc
aas
jecxz
cmpsb
mov
andb
outsl
add
cmp
jnp
dec
imul
mov
push
hlt
dec
add
nop
insb
inc
mov
adc
add
mov
icebp
out
lds
repnz
mov
lds
jl
cmpsl
sahf
fs
mov
ss
cld
mov
or
add
add
cmp
insb
push
adc
int3
fistl
push
aaa
sbb
mov
jmp
lods
shl
add
adc
cmp
or
arpl
sarl
test
jb
lods
shlb
mov
fists
jmp
or
adc
sbb
dec
pop
push
adc
aad
lea
scas
mov
ror
lods
mov
add
jp
xor
and
repnz
loop
ljmp
mov
std
loopne
adc
jne
or
ficompl
or
push
out
fwait
adc
cli
or
inc
bound
jbe
arpl
xchg
shlb
incl
aas
fsub
loopne
ret
cwtl
std
shl
jmp
push
icebp
and
mov
inc
inc
and
jp
xchg
add
aaa
mov
incb
adc
push
mov
add
mov
push
add
cmp
adc
and
pop
fiadds
enter
sbb
lock
mov
xor
push
dec
jb
dec
scas
push
dec
jb
or
daa
fs
xchg
mov
addb
loopne
lock
or
xor
cwtl
and
adc
arpl
add
lret
add
mov
push
jb
popf
adc
push
mov
ret
mov
cmp
mov
push
stc
imul
mov
xchg
adc
pop
cmpsb
xchg
sub
push
test
and
jge
bound
push
xor
stc
loopne
pusha
sahf
das
push
push
inc
push
adc
cmp
aas
or
mov
cmp
cld
pusha
sbb
adcb
pop
push
inc
incl
sub
loopne
push
adc
pop
pop
jmp
in
loopne
push
lcall
or
add
out
or
cmpsb
subb
sub
cmp
orl
lds
scas
jo
pcmpeqw
add
adc
mov
and
cld
rol
lods
add
mov
pop
xchg
adc
add
lea
xor
mov
add
inc
push
dec
jecxz
sub
xor
repnz
test
ljmp
mov
mull
xchg
mov
mov
sub
sar
loopne
push
lea
adc
pusha
push
aad
addb
and
loop
adc
lock
push
jnp
and
adc
loopne,pn
mov
or
addb
sbb
push
cld
fists
push
pusha
and
loopne
mov
dec
mov
call
xchg
out
adc
push
mov
test
out
enter
pop
loope
sti
loopne
mov
inc
repnz
ds
or
stos
loopne
or
enter
stos
sbbb
and
fsubrs
fimuls
inc
das
cld
pusha
cmp
outsb
adc
mov
pushf
pop
pop
test
and
or
mov
call
aad
loopne
mov
pusha
jb
mov
les
loopw
sarb
sub
jg
adc
bound
sub
pusha
je
loopne
ljmp
xchg
ljmp
fbstp
insb
es
or
loopne
pop
cmp
imul
clc
add
mov
bnd
adc
daa
mov
fisttpl
mov
test
mov
adc
int
xchg
cmpb
pop
add
gs
inc
xchg
mov
sbb
push
xor
add
loop
into
das
clc
aad
push
mov
cmp
sub
xor
fbld
pusha
or
sub
pop
adc
dec
jg
lock
pop
hlt
jmp
shlb
out
test
push
adc
pop
call
sbb
mov
loop
mov
adc
sub
mov
push
jl,pn
xor
jp
mov
jmp
call
stc
sub
push
je
mov
jl
or
push
mov
fistps
jo
adc
push
jno
fisttps
dec
test
les
mov
adc
adc
or
add
out
stos
mov
inc
adc
adc
je
mov
xor
cmc
sub
fcomip
scas
sahf
add
pop
lock
cs
xchg
inc
add
je,pt
testb
mov
imulb
rorl
loope
fisubrs
or
or
xor
inc
jmp
cmp
mov
adc
in
negb
add
add
add
test
xor
les
mov
data16
sbb
dec
ss
push
clc
shl
cmp
xorb
add
mov
inc
movsl
mov
cmp
mov
pop
dec
jecxz
data16
jnp
clc
xchg
out
bswap
clc
cmp
or
jns
sub
fsubrs
lret
in
loopne
sbb
mov
nop
or
nop
sbb
mov
mov
loop
mov
pop
mov
lock
push
and
cmp
mov
cmpl
mov
push
pop
push
addl
pop
xor
push
xchg
clc
fbstp
jo
add
dec
adc
xchg
xor
add
cmp
add
add
push
push
xor
int3
adc
mov
or
cld
std
mov
xor
pshufw
sahf
add
in
dec
pop
adc
add
mov
push
adc
cmp
frstor
fmuls
and
call
data16
jge
sar
outsl
push
mov
push
jge
adc
pop
jle
sbb
push
rcr
mov
xor
adc
xor
aaa
inc
push
mov
sbb
xor
call
jbe
sbb
cli
decl
out
mov
lock
mov
or
sti
sub
sub
aaa
sbb
ja
sti
add
icebp
pop
cmp
jl
add
cmp
ret
lcall
cmp
insl
mov
xlat
cmp
fs
mov
pop
jecxz
test
xchg
and
lock
and
push
push
call
pop
add
nop
and
mov
hlt
jg
pop
bound
dec
or
jp
call
add
add
or
aas
ljmp
mov
add
jo
adc
pop
jo
dec
out
inc
aaa
adc
add
mov
idivb
inc
mov
cmp
aam
lock
imull
add
jmp
sbb
jo
jmp
fs
mov
testl
test
icebp
data16
call
mov
in
adcb
call
cli
stos
jg
hlt
push
or
jne
mov
and
xor
jmp
adc
dec
pop
jmp
outsb
test
push
mov
pushl
xor
mov
data16
cmp
stos
mov
fsub
shlb
iret
lock
mov
arpl
cmc
shr
adc
test
sbb
data16
incl
or
push
les
shll
sbb
pop
mov
sbb
jo
push
out
jo
mov
lcall
outsb
dec
add
stos
push
jp
hlt
cltd
cmp
aad
pop
cmpsl
inc
and
pop
repz
and
and
call
gs
mov
sahf
test
pop
or
mov
and
lock
jne
add
out
push
xor
hlt
es
call
xchg
dec
dec
orb
inc
or
pushl
mov
adc
fbld
push
sbb
pushf
inc
pop
lock
fwait
test
push
jmp
stc
test
or
idivb
push
mov
decb
jo
subl
mov
sti
mov
mov
add
sbbl
and
imul
sar
push
incl
add
and
call
push
cmpsb
call
jle
lea
aas
divb
mov
shrb
xor
mov
mov
pop
or
das
and
cmp
je
aaa
loopne
xchg
or
subl
or
inc
jl
subb
adc
inc
je
add
mov
ljmp
dec
xor
add
call
dec
cmp
jmp
fdiv
push
in
fstpt
sub
add
je
sbb
lcall
mov
clc
je
mov
mov
jmp
cmpl
cld
fwait
hlt
mov
fucomi
push
lock
add
dec
mov
lea
test
or
push
mov
or
xor
out
xor
fwait
or
pop
repz
hlt
fmuls
xor
test
rcrb
inc
jne
insb
test
add
adc
dec
jo
outsb
out
sub
xor
movb
adc
inc
shl
or
push
dec
and
out
push
cld
mov
lods
push
push
ficoms
push
and
aaa
std
xchg
jne
clc
icebp
pop
jo
test
mov
jae
mov
pop
int3
pop
push
test
cmpsl
add
shrb
jmp
xor
and
mov
push
or
push
inc
mov
mov
jo
data16
xchg
movsb
popf
mov
add
call
and
stc
int
push
lock
add
je
push
xor
or
loop
mov
lock
xchg
xor
xor
clc
jb
inc
icebp
jno
mov
xor
sub
xchg
cmp
adc
xchg
pop
cmp
mov
push
inc
loope
pop
insb
out
or
push
xchg
or
mov
jb
insb
lock
add
inc
andb
call
xor
pusha
ja
mov
xorl
mov
jmp
sbb
insl
add
and
scas
clc
cmp
and
inc
pusha
pushl
shll
add
sbb
push
push
insb
daa
jno
mov
ljmp
and
fidivl
das
in
sti
je
call
and
mov
fsub
adc
mov
fidivrl
xorl
mov
es
call
xor
cmp
adc
or
out
insl
outsl
cmp
push
decb
cmp
mov
dec
lods
lock
mull
jl
js
pop
cmp
dec
pop
mov
push
mov
addb
push
jmp
or
ffree
jmp
pop
or
rolb
hlt
inc
call
pop
inc
fistpll
outsl
fwait
cmp
adc
cmp
add
aas
insb
inc
adc
inc
push
xor
stos
divb
test
inc
pop
ret
xchg
add
loopne
adc
sahf
lahf
test
insb
sbb
sub
add
mov
movb
push
adc
xor
and
add
daa
inc
pusha
push
push
ljmp
rcrb
add
ret
pop
push
pop
push
rclb
es
lret
inc
cmp
mov
je
pop
cld
imul
pop
ss
int
mov
pop
ret
adc
out
sbbb
inc
out
push
mov
push
mov
pop
mov
sbb
or
dec
jb
rorl
lea
int
push
mov
adc
mov
mov
sbb
out
and
inc
dec
push
cmp
xchg
pop
fs
fs
mov
push
jne
lods
cmp
pop
aad
xchg
xchg
test
add
dec
xchg
add
pop
add
mov
adc
mov
dec
adc
dec
add
sbb
dec
push
fsubrl
pop
cltd
cmp
jae
mov
cld
repnz
jno
imulb
out
mov
or
gs
rcrl
inc
loop
in
stc
gs
push
dec
sub
push
in
push
mov
lock
or
inc
loope
mov
add
pushf
or
and
pop
mov
add
pop
repz
rcr
fstps
or
fistl
or
or
or
out
loopne
cmp
push
mov
cmp
jb
xchg
shr
jbe
adc
fildll
xor
stos
push
or
inc
sti
int
and
add
cld
sarl
push
push
push
jbe
pop
sub
add
das
ja
jle
cmp
jbe
mov
xor
outsl
scas
inc
in
lds
pop
sti
jmp
xchg
or
test
or
adc
cwtl
ret
dec
ret
out
sbb
cmc
ljmp
mov
cmp
jl
push
mov
push
push
inc
adcb
outsl
push
and
dec
test
mov
push
pop
push
sub
fdivrl
cmc
and
push
loop
loopne
fidivrl
in
jl
pop
jbe
test
iret
xor
test
ja
out
call
out
adc
add
inc
inc
ret
in
pop
pop
ss
adc
push
shlb
pop
adc
push
bound
push
push
push
pop
std
ja
out
cmp
movl
add
adc
movsb
add
mov
xchg
or
mov
add
push
or
dec
push
mov
add
shll
popf
inc
add
loop
xchg
and
nop
jmp
sub
push
jg
clc
es
push
push
fisttpll
in
add
mov
out
neg
dec
jmp
aas
dec
add
shufps
sbb
out
ret
lret
or
pushl
push
out
xchg
or
push
addl
dec
sub
add
or
fdivs
adc
lea
int3
rolb
or
pop
out
cmp
je
or
adc
push
lock
mov
rcl
lods
push
push
fmulp
imull
add
mov
inc
subb
mov
dec
arpl
sahf
in
in
mov
jp
std
xorl
mov
xor
ret
pop
xor
pop
adc
cmp
jmp
ss
js
aad
sbb
decb
and
mov
shrb
call
jmp
xchg
outsb
ds
sub
lea
fldt
or
jge
pop
aas
inc
cld
adc
outsl
mov
call
sub
sbb
out
filds
pop
outsl
pop
sti
aas
push
movd
adc
pop
outsb
mov
jbe
ds
xor
daa
push
or
mov
pop
fiadds
pushf
push
aas
push
mov
pop
or
es
je
call
add
insl
xchg
mov
sti
ds
pop
aad
nop
cmp
mov
lea
cwtl
int3
movsl
pop
shlb
clc
ret
jle
xor
fiadds
add
sti
and
test
dec
cli
cmc
mov
sbbl
sbbb
adc
add
and
and
ljmp
imul
inc
les
insl
and
pop
arpl
mov
xchg
call
jmp
inc
mov
ljmp
das
loop
push
mov
jbe
push
push
inc
ss
sbb
xchg
ja
or
roll
xor
jo
mov
das
mov
lods
call
cld
mov
jno
shlb
cmpl
je
mov
inc
test
adc
or
mov
inc
xchg
mov
icebp
inc
push
and
dec
mov
insb
sti
jg
sub
or
jne
push
push
push
inc
pop
pusha
adc
and
jp
dec
inc
fimull
or
sarl
outsb
movsb
sub
dec
sarl
lock
adc
or
xchg
gs
jne
rorb
xor
mov
mov
je
jl
or
pop
mov
sahf
xor
out
dec
loope
fs
dec
je
imulb
xchg
call
stc
jne
add
pop
cmp
sarb
and
add
jmp
pop
pop
sub
push
xchg
test
enter
push
movsl
es
inc
or
mov
rol
sub
push
call
or
popf
xor
fiaddl
loop
out
mov
mov
lea
in
adc
xchg
cld
dec
out
xor
cmp
inc
inc
xlat
in
jbe
push
push
sti
mov
js
or
mov
lret
mov
test
jne,pn
pop
jl
jmp
lods
mov
mov
jbe
cwtl
inc
mov
pop
mov
je
imul
bound
pop
cmp
mov
push
adc
mov
cmp
add
scas
call
inc
xor
push
push
pop
ja
xor
js
push
dec
incl
push
or
push
push
xor
cmpsb
add
or
xor
and
jg
sub
jl
inc
jb
push
pop
je
push
mov
popf
mov
pushf
adc
outsl
push
jl
inc
cmp
jb
xchg
jbe
mov
je
addb
int
mov
data16
leave
mov
jmp
push
lret
and
xor
inc
mov
mov
inc
int3
idivb
bound
pop
mov
out
scas
movzwl
push
sub
iret
push
adc
push
fisubrs
ljmp
in
mov
add
add
inc
xor
into
movswl
mov
js
notb
adc
xor
movsb
jl
fsubl
and
inc
sub
mov
hlt
mov
pop
pop
mov
inc
add
or
iret
or
cmp
mov
or
sbb
jne
std
lcall
push
jne
mov
mov
imul
sub
add
and
in
inc
mov
jb
jmp
outsb
jp
mov
insb
sub
adc
ja
notb
in
adc
mov
mov
xor
add
aam
data16
mov
mov
fcomps
mov
pop
dec
xor
dec
adc
add
xor
loopne
fs
or
ja
cmp
clc
shll
cli
pop
jo
ss
lock
jge
shll
lods
in
xchg
hlt
adc
cmp
mov
ffreep
pop
adc
aam
sbb
lods
xchg
clc
mov
jl
dec
fiadds
dec
call
jo
add
cmpl
jle
les
cld
inc
jmp
jl
loopne
cld
insb
in
push
xor
adc
scas
push
in
call
pop
sahf
sub
inc
and
sub
clc
test
sub
push
flds
mov
sbb
les
pop
in
jmp
push
shrb
jecxz
aam
loopne
andb
push
jb
add
lock
ss
dec
incl
cmpb
or
in
std
testb
dec
add
clc
aas
loope
or
push
jne
test
rcrb
push
decl
xor
aaa
add
ja
push
divb
sarb
cmp
inc
sahf
mov
loope
loopne
pop
add
push
aam
and
fcoml
push
push
andl
pushl
pop
out
sahf
mov
xor
dec
aam
cmp
xchg
sahf
add
outsb
or
dec
rolb
mov
in
sahf
sbb
xchg
enter
add
movsb
mov
js
orl
mov
outsl
mov
loope
int
cld
or
jo
dec
sbb
lcall
adc
mov
icebp
aaa
loopne
add
add
inc
add
clc
bound
ret
mov
inc
sti
push
aam
push
es
in
push
adc
mov
cmp
je
mov
psubsw
jle
inc
shrb
pop
sahf
or
inc
sub
mov
idivb
roll
lock
call
adc
xchg
jne
push
pop
lock
lds
mov
adc
sub
or
in
fwait
ret
fsubp
decl
push
inc
mov
mov
lods
xchg
incl
pop
aam
cld
incb
cmpsb
add
aaa
push
jne
mov
mov
cmp
push
and
push
in
add
dec
mov
mov
add
in
dec
fadds
fsubs
mov
aam
in
ss
mov
imul
pop
inc
test
cmpsb
pop
mov
add
std
inc
mov
ss
ds
lock
outsl
iret
pusha
pop
sub
mov
push
add
pusha
stos
sti
je
xchg
repz
pop
ja
push
jle
mov
inc
jmp
or
xchg
lods
add
mov
rol
nop
sub
mov
xchg
pop
mov
aam
pop
sub
sub
or
lock
scas
idivb
xor
ja
call
je
mov
cmpsb
mov
inc
cmp
addl
mov
jl
rclb
jbe
cmpsl
popf
mov
push
jnp
call
cmpsl
jns
dec
pop
and
lock
ret
jl
lods
xor
inc
int3
xchg
push
pop
adc
cli
sub
push
jmp
cmpsl
or
mov
mov
cld
fimuls
xchg
sub
add
leave
xor
inc
inc
roll
add
xchg
push
cmpsb
popf
pop
pop
mov
in
push
insl
sahf
pop
lock
xchg
fmuls
cmp
hlt
mov
lods
shrl
and
mov
mov
adc
cmp
stc
mov
push
push
shll
push
push
movsb
stos
cwtl
divl
mov
into
divb
sbbb
jl
xchg
call
aam
ljmp
sub
pushf
call
scas
es
repnz
je
fsubs
movsl
dec
mov
test
lods
stos
push
jecxz
dec
std
cmpsb
add
add
fcomp
inc
out
sarb
pop
subb
aas
mov
mov
stos
aam
enter
incb
push
data16
pop
lods
enter
dec
aas
lods
lea
cld
dec
enter
or
sbb
adcb
stos
mov
addb
lods
cld
cld
push
daa
xchg
add
clc
jecxz
adc
test
stos
push
push
data16
sarb
mov
outsb
fadds
pop
and
clc
and
loop
sahf
inc
add
cmp
mov
sar
aas
cmp
add
add
add
sub
mov
fdivl
push
inc
or
cmc
inc
scas
mov
sbb
test
push
orl
push
pop
cltd
push
mov
add
dec
dec
mov
mov
aaa
push
es
jmp
push
push
or
shr
inc
insb
pop
mov
ljmp
inc
adc
push
or
add
jp
sti
inc
xor
mov
push
xchg
push
test
insb
sub
xchg
lods
fwait
sbb
call
clc
dec
dec
test
cs
mov
loop
call
cmp
cmpsb
test
mov
popa
stos
stos
pop
add
pop
add
pop
push
inc
test
out
push
push
fdiv
mov
fdivl
inc
call
es
rolb
mov
push
xorb
cmp
inc
or
sbb
and
aam
lcall
das
in
cmp
dec
aad
and
mov
or
loopne
scas
jg
ljmp
stc
xchg
outsl
inc
sarb
call
nop
cmpsl
ljmp
ljmp
das
xor
or
std
std
cltd
cmp
mov
mov
or
ja
mov
shlb
xchg
mov
fneni(8087
xor
into
cmp
dec
adc
jo
add
push
lahf
dec
fsubs
lcall
fmuls
fiadds
je
xchg
sbb
sbb
jge
mov
lret
out
add
adc
cmp
dec
xlat
enter
lock
xlat
pop
cmp
adc
dec
paddsb
sbb
sbbb
loope
mov
or
dec
or
adc
loope
pop
lea
testb
dec
sbbb
jge
je
std
clc
cmp
jne
push
cld
je
pop
out
jge
lret
inc
jne
pop
jne
add
or
and
in
pop
data16
addr16
push
incl
xchg
push
es
add
pop
ret
adc
mov
push
in
xchg
xchg
jmp
fwait
in
stos
cld
mov
sub
fcom
adc
call
and
fwait
push
shl
lods
mov
mov
sub
pop
or
mov
push
mov
ret
push
movsb
imul
or
cld
sbb
imul
pop
xchg
pop
mov
push
jmp
sbb
xorb
testl
lret
xchg
inc
cmp
lock
push
mov
das
inc
decl
mov
cmp
pop
push
imul
shlb
sbb
xchg
imul
adc
int3
and
pop
subb
push
lds
cmp
adc
movl
je
mov
inc
cli
data16
out
data16
push
adc
or
add
jbe
adc
fs
pop
push
push
adc
sub
push
test
add
xchg
movsl
ret
cs
push
or
mov
push
fdivrp
hlt
dec
enter
movsb
add
jbe
xor
cmp
push
pop
call
pop
div
dec
jne
mov
daa
add
and
xchg
enter
mov
scas
ret
mov
cwtl
sub
ror
adc
mov
or
loopne
mov
cmp
call
daa
lret
xchg
sub
mov
dec
pop
popa
gs
sbb
ret
aaa
ret
fs
cmp
fcoms
dec
out
push
orb
stos
fiadds
sub
call
ljmp
add
mov
inc
loope
sahf
cmpsb
stos
add
push
sti
adc
aaa
add
fwait
inc
rcrb
mov
mov
je
and
in
cmp
mov
pop
enter
sbb
add
dec
push
add
jl
add
call
jb
push
pop
gs
mov
scas
cmp
and
xchg
call
rcrl
clc
adc
loope
call
xlat
xchg
lret
and
dec
pop
xor
jae
pop
mov
loope
ja
mov
mov
add
int3
fstpt
pop
jmp
and
out
pop
add
push
mov
loop
data16
and
loop
add
cmc
push
fidivrs
jb,pt
mov
cld
xchg
lods
add
sub
bnd
jne
mov
mov
movsb
lret
jg
call
fwait
int
loopne
out
xor
add
push
iret
int
mov
ja
lret
mov
or
xor
std
dec
jecxz
je
pop
pop
sub
incl
data16
or
dec
push
add
lea
cmp
neg
scas
popa
or
dec
mov
cmp
lret
add
das
and
fmulp
push
mov
add
sbb
fsubrl
in
mov
inc
sbb
enter
rclb
lahf
pop
lock
cmovbe
cmovb
shlb
jg
data16
fadds
stos
lock
cmp
shrb
mov
mov
fildl
pusha
pop
cltd
pop
jae
xchg
adc
push
push
outsl
cmpsl
ss
jne
lock
data16
in
add
sbb
push
or
push
into
mov
jb
xor
push
jle
add
rorl
cmp
inc
js
pop
clc
push
movb
jnp
out
add
xchg
cld
mov
cmp
mov
fcmovb
outsb
mov
sbb
je
sbb
pusha
cld
enter
push
cs
jae
mov
aam
add
jne
add
mov
jb
shlb
das
rclb
jb
repz
push
test
out
mov
enter
insb
sarl
sar
cmp
mov
push
and
je
adc
push
sbb
pop
sbb
sbb
in
cmp
lret
mov
jmp
xor
jg
cli
add
add
xchg
decb
cld
roll
je
adc
lsl
mov
inc
fs
mov
add
ljmp
decl
imul
cs
dec
push
or
lods
push
push
push
sub
cmc
test
sbb
inc
add
adc
hlt
adc
shrb
cmp
pop
xchg
and
jle
push
fmull
loopne
ds
jbe
lock
retw
cmp
push
lock
lcall
scas
mov
push
sbb
jl
add
pop
pop
insl
aam
lods
push
mov
jmp
into
inc
mov
add
test
lcall
push
pop
outsb
jle
data16
lds
adc
cli
push
inc
dec
test
into
mov
imul
xor
push
push
push
push
push
push
sub
mov
test
xchg
in
add
stos
mov
add
mov
inc
int3
rcll
add
cmpsb
inc
es
inc
in
mov
clc
out
push
mov
jmp
mov
cmp
test
push
jg
mov
lahf
xorb
or
jle
mov
jecxz
lahf
rcll
es
mov
or
lea
xor
adc
and
popa
or
loop
cli
add
jg
pushl
leave
push
sti
shr
ds
je
test
xchg
add
or
shr
or
sbbb
add
fwait
rolb
sub
xchg
addl
clc
jbe
mov
loope
push
out
xchg
push
cmc
push
inc
decb
push
scas
hlt
lahf
pop
sub
sub
cmp
push
test
xor
std
or
jl
js
clc
cwtl
mov
mov
rclb
mov
pop
push
push
dec
push
data16
cld
ja
adc
das
inc
repz
je
and
outsb
pop
outsl
imull
mov
pop
and
push
inc
and
inc
and
cltd
lcallw
push
xchg
shlb
or
pop
xchg
fdivr
inc
push
inc
jne
cmp
or
mov
pop
inc
mov
and
rcrl
pushf
push
rolb
insl
sub
aam
jle
dec
push
sub
clc
pop
les
loop
repz
pop
mov
adc
xor
scas
daa
sub
incb
cld
andb
inc
or
mov
imul
fidivl
jbe
push
add
mov
adc
lods
xor
push
outsl
adc
fcom
or
popa
js
out
push
inc
ret
adc
in
push
call
cs
pcmpeqd
rclb
pusha
dec
sbb
out
sbb
mov
call
push
pop
jecxz
dec
je
fs
push
stc
shlb
mov
shr
hlt
rorl
loop,pt
or
jbe
or
sbb
cld
lock
push
dec
inc
or
adc
es
mov
mov
mov
nop
call
lea
repz
add
dec
sahf
ret
fstl
ja
scas
xchg
sbb
push
push
sbb
es
in
ficomps
jb
enter
bound
fildl
dec
inc
xor
js
jno
jb
inc
int3
call
fs
in
call
sub
rcrl
pop
arpl
and
std
add
push
into
data16
xchg
pop
mov
call
inc
push
in
clc
cmpsb
jo
mov
enter
push
out
adc
mov
mov
dec
and
lahf
inc
aaa
dec
test
lret
shll
xor
cld
aad
adc
adc
int
dec
or
and
add
add
fidivrs
adcl
jb
lret
adc
push
cwtl
or
scas
push
lods
xchg
fdivs
stc
das
rcrb
lea
mov
add
jo
fiaddl
lods
pop
sub
call
cmpsl
or
outsl
pop
clc
and
roll
dec
or
mov
inc
out
mov
loopne
or
and
test
sbb
dec
dec
or
pop
add
cltd
and
inc
sahf
mov
sub
pop
xor
adc
sub
push
adc
ss
mov
inc
mov
out
lea
push
mov
scas
call
movsb
nop
ds
cmpsb
xchg
push
mov
imull
pushf
call
adc
push
push
repnz
repnz
lahf
ret
loope
fidivrl
inc
lret
or
and
outsb
dec
mov
les
add
xor
and
jb
mov
push
dec
ret
push
popa
pusha
das
adc
outsl
in
cmc
push
mov
lret
clc
inc
je
adc
ret
cmp
mov
push
add
fcoms
dec
xor
mov
push
sbb
adc
mov
sub
or
or
sbb
mov
cmpw
insb
mov
jb
cltd
or
jbe
orl
mov
and
and
sbb
xor
ljmp
mov
outsb
clc
jne
push
xor
insb
jl
divb
lea
sub
mulb
lcall
out
scas
loopne
inc
idivb
sub
nop
aam
push
sbb
adc
push
pop
insb
mov
sbb
mov
daa
xor
add
add
shll
lahf
sbb
dec
out
pusha
lret
sub
inc
sti
cs
mov
mov
dec
xchg
mov
sub
mov
out
or
mov
inc
dec
lcall
mov
and
or
rol
ljmp
adc
mov
into
add
shrl
sbb
enter
pop
sub
aad
lock
add
inc
dec
mov
int3
cmp
jno
jmp
ss
in
movsb
scas
or
mov
loop
inc
jmp
push
roll
add
inc
push
or
repz
sub
push
sbb
push
pop
inc
mov
cltd
cmp
mov
hlt
dec
nop
inc
les
repz
inc
add
aas
movb
dec
lock
and
jg
add
xor
aaa
leave
lods
adc
cmp
fwait
in
ljmp
dec
jl
push
cmpl
jmp
int3
leave
and
movzbl
loope
jl
or
mov
sar
and
out
fnstcw
inc
cli
or
lock
mov
fwait
int
adc
dec
or
dec
pcmpgtb
fildl
sub
in
scas
cmp
xor
data16
adc
jg
pop
add
hlt
lock
or
or
incl
sbb
out
push
xchg
icebp
subl
pop
xchg
add
hlt
cs
call
out
push
push
xor
scas
lock
adc
rorb
sbb
ret
lcall
dec
add
stos
jecxz
cli
xchg
adc
push
push
xchg
dec
stos
aad
fidivs
push
cs
xchg
mov
sub
or
ljmp
sbb
jmp
stos
xchg
and
add
or
cwtl
loopne
xchg
iret
rcl
testl
sbb
cmp
stos
cmc
push
cmpl
mov
jne
push
fdivs
inc
lock
in
push
add
in
xchg
cmp
leave
jle
mov
mull
lahf
add
mov
mov
enter
out
test
mov
xchg
jmp
xchg
xchg
add
das
pop
shrb
or
sbb
les
mov
sbbb
arpl
cmp
xchg
rcl
rcll
lock
dec
cltd
jbe
pop
cmpb
add
sbbl
push
loopne
or
or
leave
mov
pop
cmpsl
popa
sbb
xor
push
mov
rclb
aad
mov
add
shll
jp
and
or
jns
shl
es
and
or
mov
mov
or
jne
stos
push
add
or
les
std
std
dec
dec
jb
jmp
scas
je
dec
mov
and
imul
hlt
into
sahf
out
jp
xchg
push
mov
and
or
out
jne
rol
push
jecxz
jnp
movsb
or
push
pop
inc
loope
divl
xchg
into
adc
push
test
mov
push
sbb
fnstenv
shlb
orl
adc
or
ficoms
enter
push
or
rorb
push
idivb
or
jp
mov
lea
bound
push
inc
mov
pop
add
inc
mov
je
mov
cli
sarl
push
call
pop
pop
idivl
imul
in
call
push
inc
pop
push
dec
mov
cli
push
scas
je
mov
mov
andb
push
cmp
pop
pop
clc
incl
add
sub
xor
xor
call
mov
jmp
rcl
cs
dec
pop
mov
pop
out
add
add
sub
adc
bnd
push
das
test
movsl
cmpsl
xchg
push
test
push
je
pushl
sub
push
or
stc
or
mov
cmpb
jne
shl
add
mov
popa
outsl
mov
cmp
jle
andl
daa
fdivl
sbb
fsubs
sbbl
sahf
adc
sub
and
dec
add
inc
adc
inc
push
mov
dec
ja
ss
adc
or
nop
bnd
std
sub
daa
aas
fwait
in
repz
cmpl
test
daa
and
ljmp
push
add
xor
outsb
add
es
mov
cmp
sbb
lods
pusha
mov
or
std
xchg
stos
add
push
push
test
orb
inc
add
or
or
fistpl
mov
xchg
mov
inc
inc
inc
jnp
pop
das
sub
jo
aas
pop
inc
push
xchg
subb
out
pusha
and
call
push
inc
inc
and
cwtl
stos
pop
outsb
loope
or
inc
adc
sub
push
lea
in
jo
cmpb
enter
xchg
rolb
jl
push
mov
jge
je
mov
ret
aam
or
je
pushl
cmp
mov
setl
mov
pop
out
lea
or
ss
inc
es
or
cmpsb
enter
mov
aas
pop
mov
in
inc
jecxz
pop
xor
mov
jle
shlb
mov
fstpt
std
lock
ljmp
mov
pop
pop
loopne
pop
xchg
aam
add
icebp
xor
fwait
or
test
push
xor
adc
mov
lods
mov
cs
fcomps
push
mov
pop
ret
mov
icebp
jnp
fdivs
mov
ja
push
lea
fs
mov
test
or
insb
subl
jp
hlt
or
icebp
add
popf
or
xchg
lock
scas
pop
and
push
and
pop
mov
call
pcmpeqd
sub
mov
test
into
add
push
jo
push
xlat
and
incb
push
xchg
mov
lea
test
aam
sub
push
inc
sti
push
sbb
push
cs
rorl
dec
je
mov
dec
push
jbe
out
xchg
mov
mov
fcomps
jne
call
xor
add
repz
pop
dec
ret
dec
int
push
int3
jle
pushf
ljmp
call
cwtl
inc
add
iret
outsb
inc
and
xor
cmp
std
jge
mov
push
hlt
imull
jp
sti
jb
and
mov
pop
xor
xorl
xorb
mov
adc
xor
pop
mov
sbbl
fidivs
push
pop
je
jbe
mov
inc
sti
mov
pop
ret
dec
mov
xchg
dec
test
ja
mov
inc
sbb
sub
dec
imul
test
add
cli
inc
fnsave
repnz
cmp
shll
xchg
std
jle
cmp
add
jecxz
push
je
mov
out
or
cwtl
insl
cld
mov
push
xor
push
pop
mov
hlt
cmp
into
in
pop
test
jae
vmwrite
lods
lds
lret
mov
xchg
inc
divl
mov
sub
xor
movsb
mov
icebp
pop
call
loopne
mov
movsl
xor
andb
or
les
out
lea
adc
push
inc
movsl
pop
movsl
out
jne
inc
lcall
popa
inc
jg
inc
adc
push
adc
iret
push
je
pop
add
jbe
jl
testb
roll
pop
mov
sub
sub
test
push
push
or
cmp
dec
inc
add
nop
rcrl
call
pop
jle
notl
cmp
cmp
fwait
loop
icebp
cmp
push
daa
cmp
sbb
addb
ficompl
mov
add
add
lock
mov
insb
adc
inc
push
add
ljmp
movsb
fwait
mov
jmp
ljmp
cmp
push
fisttpl
dec
sbb
push
hlt
mov
lret
cmp
subb
or
ss
and
out
xor
push
or
insl
sbb
cmp
loope
push
pop
fldcw
jg
ret
ficompl
inc
sbb
aaa
test
movsb
fwait
testb
stos
repz
inc
js
pop
mov
lret
inc
jecxz
adc
sub
in
and
cmp
into
shlb
je,pn
adc
and
idivb
push
and
xchg
adc
movsb
test
or
imul
or
fildll
cmp
mov
das
add
push
jb
jmp
mov
into
lret
loope
lahf
shl
or
dec
dec
push
xchg
push
cs
inc
cmp
cmp
xchg
and
cmpsb
sbb
call
test
or
xchg
mov
sarb
mov
jbe
test
lea
lods
insb
ret
nop
sbbb
sbb
inc
mov
cmp
jmp
test
mov
leave
mov
inc
push
lea
insb
cmp
sub
xchg
inc
add
xchg
push
adcb
push
jnp
mov
pop
lahf
call
push
lods
push
adc
sbb
ljmp
pop
nop
in
xlat
and
fcmovnu
mov
pop
lret
xor
mov
stos
pop
add
jb
push
push
inc
ja
jle
mov
xchg
rclb
lea
sub
fs
test
add
rol
mov
pop
loop,pn
pop
xor
lea
mov
lock
decb
call
push
pop
add
dec
outsb
dec
jne
cmp
sbb
rolb
add
adcl
xor
pop
adc
pop
mov
push
adc
jle
adc
dec
ljmp
add
scas
movsb
aaa
fs
sar
lea
pop
sahf
pop
call
insb
mov
andb
mov
push
pop
pop
clc
jle
cmp
insl
das
dec
pop
mov
mov
lret
push
mov
sarb
adc
and
add
js
addb
mov
orl
or
inc
xchg
mov
clc
in
xor
mov
sbb
adc
in
and
mov
inc
or
mov
jl
add
hlt
add
movb
inc
inc
rorl
mov
mov
inc
cmp
je
mov
shrl
popl
sbb
das
mov
mov
xor
dec
pop
idivb
xchg
xchg
je
inc
fidivrl
jae
push
pop
pop
rorb
enter
out
cmp
xchg
cmp
mov
ss
xlat
xchg
or
icebp
cwtl
shlb
mov
ret
adc
pop
xchg
add
lahf
mov
xlat
mov
add
sub
divb
inc
mov
fmulp
es
bound
cs
xlat
cmp
mov
or
push
out
xchg
adc
stos
or
fisubrl
pop
pop
or
insb
sub
cld
inc
out
push
xor
push
fisttps
push
outsb
sbb
sub
xor
xchg
pop
xchg
mov
insl
or
jecxz
incb
mov
jne
ret
cmp
push
or
loopne
fcomps
ret
adc
push
jb
inc
fwait
mov
cmpsb
ja
cmpsb
jb
ja
mov
push
stc
add
inc
mov
add
cli
call
lahf
nop
pop
xchg
aaa
in
lcall
into
lods
jp
aas
mov
imul
cld
push
cmpb
jge
sub
or
push
call
adc
add
mov
mov
mov
frstor
outsb
mov
add
fbstp
outsl
je
jl
add
andb
ds
pop
sbbb
in
fnstcw
or
movsl
jmp
testb
ss
push
repz
add
mov
mov
hlt
mov
push
mov
add
fs
stc
jno
popa
xchg
pop
test
lods
int3
adcb
ljmp
enter
ffreep
rorb
mov
xchg
cmpsl
jg
jecxz
cmp
hlt
push
push
jb
shr
js
or
dec
data16
adc
mov
dec
ret
xchg
inc
pop
inc
aas
hlt
ds
add
mov
or
adc
jle
jl
aaa
mov
xor
xor
pusha
dec
inc
cmp
push
inc
fs
push
add
ljmp
ret
dec
push
lea
pusha
cmp
jmp
dec
cmp
ucomiss
ljmp
mov
lods
or
mov
xchg
data16
add
inc
rol
idivb
lock
cli
push
out
imul
cmp
ret
add
push
cmp
pop
cmp
stos
add
pop
mov
ss
insl
hlt
lcall
outsb
clc
jno
test
and
subb
adc
jp
icebp
addl
jecxz
jb
mov
incl
pushw
scas
inc
lds
adc
mov
imul
scas
mov
popa
push
adc
cli
loopne
sti
cmp
das
subb
jle
cmp
inc
jb
clc
add
mov
out
xchg
hlt
inc
cmp
es
mov
mov
inc
pusha
lock
dec
cmp
negl
jnp
ss
pop
sub
pop
sub
mov
sarb
sub
insb
ret
mov
inc
add
hlt
and
cwtl
mov
fists
movsb
lock
addb
push
xor
bound
and
push
jl
mov
push
push
mov
mov
push
cmc
push
rorb
cmp
or
xchg
leave
out
cmpsb
cmp
je
fcoms
xlat
test
rorl
rorb
test
outsl
rorl
xor
orb
lock
pop
popf
add
testb
bswap
call
cmp
mov
aas
js,pn
mov
push
rclb
push
rolb
mov
pop
cwtl
jne
mov
and
ds
and
sbb
fisttps
mov
mov
jne
rorb
xlat
or
aas
xchg
add
lock
mov
mov
adc
mov
jp
add
pop
sub
cmp
sbb
jecxz
pop
cmp
sbb
pop
les
enter
and
xchg
adc
sbb
pop
pusha
mov
or
mov
mov
push
lods
or
xchg
add
adc
sti
jb
jmp
push
add
mov
scas
jp
insb
fs
adc
cmp
pushw
les
sbb
cwtl
mov
testb
sahf
jno
push
adcb
movsb
xchg
shlb
sub
fs
or
adc
std
mov
and
add
xlat
cmovo
fdivs
xor
add
mov
mov
push
add
xchg
inc
in
les
push
inc
rorb
push
call
sub
push
and
mov
adc
sub
sbb
ljmp
pushl
div
call
or
idivb
or
je
xchg
ja
cmpl
xchg
loopne
lock
or
loope
and
mov
push
jb
add
movsb
stos
or
ss
and
lods
or
loope
sub
add
ret
hlt
loopne
loopne
mov
jp
pusha
sub
or
sub
mov
faddl
and
cmp
pushf
push
hlt
outsl
xor
scas
cmpb
mov
and
and
loopne
and
sbbb
call
push
call
sbb
adc
call
cmp
jbe
pop
imul
xchg
sar
pusha
push
and
pusha
add
es
adc
or
icebp
mov
and
jmp
divb
dec
inc
add
das
call
addb
push
test
pop
or
sbb
inc
es
cmc
cs
aaa
push
and
jg
cwtl
in
add
adc
inc
lds
enter
and
and
pop
adc
gs
sbb
repz
ljmp
pop
data16
cmp
call
je
dec
shlb
xor
mov
scas
call
incl
leave
cs
xor
adc
in
or
mov
cltd
add
ja
lea
mov
movsb
or
loope
loop
cli
add
jecxz
add
shlb
cli
clc
mov
sub
lods
xor
push
loopne
rclb
loopne
test
loope
adc
pop
inc
adc
lock
mov
mov
pop
pop
add
repz
jo
daa
push
test
fwait
sbb
fs
pop
push
loopne
jne
xor
and
jg
test
pop
addb
pop
pusha
xor
dec
and
repz
push
scas
mov
and
js
add
jmp
or
cmp
dec
or
and
adc
jg
dec
insb
ljmp
rorb
sbb
ljmp
out
out
add
add
xor
add
pop
adc
mov
daa
stos
addl
or
cs
and
data16
mul
sbb
pop
cs
mov
and
sbb
sbb
add
cld
push
push
sbb
icebp
jecxz
pop
xchg
les
sbb
xchg
cld
jle
outsl
sbb
add
aam
add
sahf
subl
in
mov
or
je
jl
push
pusha
adc
in
mov
mov
enter
sahf
add
sub
roll
add
jne
and
je
popa
dec
jnp
fcmovb
nop
or
mov
les
add
or
inc
sarl
pop
pavgw
fildl
pop
xor
lahf
or
popa
out
xor
pop
or
mov
sti
add
in
push
mov
sarb
jg
xchg
test
inc
rolb
or
bnd
pop
lock
idivb
cmp
jg
icebp
push
rclb
sarb
add
jg
roll
xor
mov
loopne
adc
jmp
add
jb
add
cmpb
jne
sbb
sbb
ds
or
decl
mov
push
lock
push
test
sbb
movb
lock
addb
or
and
sahf
or
mov
lea
es
mov
fdivrs
rorb
or
mov
fisttpl
jbe
imul
jle
cmc
jne
add
adc
push
decl
push
push
in
pusha
or
pop
or
push
sub
popf
mov
sub
icebp
push
cmpsb
mov
in
sbb
addl
rcrb
xchg
repz
xchg
xchg
adc
jo
dec
rolb
pop
push
mov
cs
pop
or
or
sbb
add
fsub
or
cld
push
cmp
dec
xlat
mov
jo
js
pushf
in
mov
dec
movsb
pop
call
hlt
adc
loopne
sbb
inc
std
xchg
sub
decl
rolb
pop
outsb
shrb
fidivrs
cmp
cmpl
or
sti
ja
mov
push
jl
sub
jmp
lods
dec
push
rcr
add
jmp
sub
incl
mov
ljmp
mov
or
xchg
push
lods
ljmp
jb
add
lock
push
lea
add
sbb
loope
push
stos
das
cli
mov
mov
add
icebp
pusha
push
lahf
repnz
inc
outsl
xor
test
jl
incb
sbb
shl
mov
mov
push
and
jne
and
movsl
add
push
fistps
aaa
sbb
add
or
aam
xor
jne
cmp
push
pusha
clc
icebp
add
add
sbb
lock
mov
mov
jmp
inc
mov
jl
mov
icebp
pop
inc
add
je
je
cmp
mov
dec
or
pop
movsl
mov
xor
jge
jg
movsl
inc
ret
clc
lock
pop
add
xor
mov
call
nopl
inc
jo
mov
push
xor
sbb
decl
or
or
add
xor
lea
idivb
fs
je
add
pop
mov
jg
xor
test
jle
xor
jb
mov
dec
incl
push
mov
aaa
add
or
jo
inc
xor
hlt
mov
sub
ret
xor
aad
jle
js
mov
sbb
je
sub
adc
pushl
jns
adc
jbe
jo
testl
and
mov
add
mov
xor
lock
add
adc
xchg
out
and
sub
or
add
rcr
jo
xchg
in
sbbb
repnz
call
imul
sbb
adc
mov
or
addb
jl
inc
out
jg
inc
lock
add
sbb
sbbb
jl,pt
xchg
cwtl
lea
mov
add
jne
mov
xlat
pop
jp
lret
mov
cmpb
fs
fnsave
add
addb
ljmp
add
cmp
jne
push
loop
fcomip
add
add
je
idivb
add
jnp
cli
jb
push
jne
and
adc
push
je
sub
stos
mov
andb
adc
xchg
lock
adc
int3
shrb
and
add
xchg
adc
xor
cld
push
push
lock
rorb
and
pusha
mov
dec
inc
aaa
mov
push
aaa
in
and
clc
inc
call
cmpsl
mov
call
rcrb
pushf
adc
sbb
and
andb
sbb
test
pop
xlat
pop
mov
jo
cmovs
mov
or
inc
xorl
cmc
aaa
or
stos
cmpb
cmp
dec
sar
in
add
add
daa
xor
fnsave
mov
mov
nop
lock
adc
divb
cli
mov
cld
orb
add
out
adc
cmp
push
cmpsb
inc
jmp
inc
sub
inc
jo
push
divb
je
xchg
mov
xchg
cld
add
add
je
or
dec
sar
cwtl
add
pop
ret
test
inc
fcompl
mov
andl
mov
stos
clc
repnz
je
add
add
push
pop
lock
mov
and
jmp
jo
je
add
test
xchg
adc
int3
push
mov
icebp
jns
jmp
insb
dec
mov
xor
mov
lock
inc
jbe
mov
sbb
mov
xor
ljmp
inc
sbb
aad
adc
push
stc
or
add
mov
jbe
pusha
and
mov
xchg
pop
jecxz
xor
je
lods
cmpsb
pushf
xor
imul
xor
push
push
movsl
scas
mov
lock
lret
and
mov
push
or
push
cmpsl
dec
add
inc
rolb
sbb
dec
add
inc
push
jle
shrb
add
call
mov
lock
inc
cltd
shlb
sbb
bound
repz
or
sbb
pop
loopne
subb
jo
mov
push
fldenv
inc
fildll
mov
enter
inc
call
lea
xor
push
jp
roll
jmp
jne
mov
outsl
sahf
jmp
sbb
mov
jmp
mov
add
adc
push
cs
icebp
fcomip
cmp
mov
inc
xor
add
test
iret
add
or
pop
les
sbb
inc
mov
lods
mov
dec
add
movsb
push
jo
shll
jbe
cmp
cmp
test
pop
cli
jg
adc
add
sub
and
adc
ljmp
int3
leave
xchg
div
lahf
rorl
aas
pop
xor
and
mov
pop
pop
xor
xor
dec
sbb
mov
adc
ret
inc
out
mov
push
rclb
sbb
sbb
xchg
jg
adc
addr16
movsl
in
mov
sub
sub
or
xor
sub
lret
cmp
mov
jmp
push
scas
xor
adc
or
push
xchg
xchg
outsl
push
cld
orb
and
jo
sbb
xor
cmc
sbb
mov
push
pop
js
push
movsb
jo
enter
dec
mov
fimull
jl
push
pop
push
imul
sub
pop
lea
fs
sbb
jmp
cmp
repnz
mov
jnp
xor
addb
insb
imull
mov
enter
test
cltd
mov
mov
xor
aas
mov
loopne
dec
or
mov
test
add
bound
lea
ss
cld
inc
inc
inc
push
in
pusha
cmp
jp
repz
in
pop
fs
cmp
hlt
repz
push
lods
xchg
sub
mov
mov
push
bound
test
jle
pop
mov
ds
notb
push
mov
out
jmp
ret
movsb
or
pop
jp
and
call
icebp
mov
mov
cld
mov
add
xchg
into
pop
cmp
call
or
repnz
cli
scas
pop
fidivrs
lea
call
ss
outsb
or
jbe
daa
adc
push
call
xchg
or
jns
xor
out
outsb
int3
dec
mov
add
mov
inc
jp
movsb
xchg
movsb
sub
lret
or
popw
in
cmp
jl
or
xchg
mov
mov
inc
and
test
jb
ret
lret
adc
sbb
push
xor
or
cmp
shrb
sub
fmuls
dec
cld
push
mov
loop
mov
adc
sbb
negb
add
or
pop
je
lods
fsubl
or
cmpl
and
sahf
sbb
lret
aam
ret
lea
faddl
or
or
or
aad
loope
jb
lcall
lea
mov
cmp
add
jne
je
inc
mov
out
loopne
pop
xor
testb
mov
test
nop
pop
mov
popa
adc
mov
hlt
lds
add
lods
sub
lea
adc
mov
dec
cmc
incl
adcl
adc
mov
sbb
roll
les
sub
push
mov
jo
mov
xchg
add
mov
sbb
cmp
jne
cmp
int
nop
inc
xor
movsl
dec
movsb
mov
mov
es
fwait
ss
mov
adc
je
sbb
stos
lcall
pop
adc
je
notb
jb
mov
add
movsb
hlt
test
lea
add
push
adc
loop
ret
hlt
pushf
or
fldt
mov
daa
push
clc
sbbb
inc
clc
add
fidivl
sbb
je
addb
fisubs
cli
or
adc
jl
loope
mov
dec
or
pop
cmp
jo
shrb
mov
adc
pop
ss
cs
in
scas
adc
dec
inc
inc
pop
dec
sti
cmp
cs
rolb
inc
inc
add
lods
inc
jmp
jb
push
or
js
dec
sbb
mov
lods
movsb
push
push
xlat
pop
or
sub
jae
cmp
int3
mov
jmp
xchg
out
call
inc
aam
mov
xor
push
dec
fstpl
or
je
xchg
decb
loopne
jbe
sbb
loope
fistpll
inc
les
or
out
inc
jmp
ljmp
ret
rol
dec
aam
gs
lret
push
fimuls
inc
sti
push
cmpl
pusha
in
adcb
push
scas
call
popa
xlat
daa
popf
sub
lods
xchg
xlat
jl
adc
lods
adc
jl
push
push
cli
adc
jl
std
inc
pop
xchg
dec
arpl
sbb
and
cmp
ror
adcl
xchg
jmp
pop
test
cmpsl
lea
sbb
stos
test
icebp
incl
or
testb
int3
xorl
pop
gs
add
add
add
push
insl
lods
inc
dec
xchg
movsl
adc
inc
clc
dec
mov
filds
int3
std
and
outsb
sub
and
and
or
mov
add
pusha
push
js
add
sub
hlt
xchg
aam
idivb
shrb
push
sub
int3
sub
daa
rclb
and
ret
push
ljmp
mov
loopne
add
and
cli
adc
sahf
out
les
pop
pushf
es
mov
dec
xor
sub
lea
insb
das
xor
ds
jle
into
faddp
test
std
test
adc
mov
les
xchg
jne
aaa
stc
xor
data16
cmp
call
fs
or
push
or
push
mov
sbb
or
mov
push
or
out
js
notl
or
and
pop
cmpb
ds
fiaddl
les
xchg
jnp
mov
pop
daa
xchg
adc
xchg
cmp
test
int3
dec
add
sbb
mov
mov
and
fs
jne
push
cmp
mov
pop
int3
lcall
mov
sbb
sbb
push
push
dec
loop
sub
aaa
push
sti
lds
push
pop
shlb
cmp
ljmp
scas
add
test
icebp
mov
xor
adc
roll
jmp
mov
jb
es
jmp
std
movb
ret
add
nop
test
jg
dec
cltd
cmp
mov
push
mov
jbe
ss
xor
cli
in
scas
add
cmp
sti
mov
mov
notb
pop
movsb
pop
inc
ret
xlat
xor
jne
mov
rorb
jg
or
dec
jle
iret
push
into
mov
mov
mov
stc
add
mov
in
add
sub
stc
push
fldt
je
cld
lret
loope
mov
add
out
ljmp
jle
sub
pop
pop
mov
adc
pop
fs
mov
andl
cmpl
fistl
sub
test
push
or
clc
mov
vmread
push
loope
dec
repz
adc
add
test
jne
loope
adc
fidivrs
ljmp
jg
xchg
stos
stc
and
mov
rcrl
shr
or
lret
movl
jg
ja
cmc
jbe
inc
dec
add
loop
rcll
or
jne
outsl
jmp
dec
lods
dec
dec
cmp
scas
cli
jl
aas
mov
or
outsl
sub
ret
add
add
into
jne
mov
in
addl
add
dec
push
dec
push
cmp
ss
call
jmp
push
add
cmpsl
jno
loope
cmp
xor
xor
mov
test
cmp
dec
lods
adc
mov
mov
test
mov
jmp
js
sub
xor
test
jne
cmp
or
mov
je
cmp
jmp
lea
ret
dec
ja
mov
rorl
pusha
fdecstp
sub
cmp
jb
shrb
dec
js
lds
ret
sar
pop
addb
mov
inc
cmp
jl
outsb
dec
idivb
movsl
jg
mov
mov
aas
mov
add
shl
fldt
cld
mov
push
push
or
call
ret
imul
push
loopne
ret
jle
mov
jne
or
jbe
test
jmp
sub
jmp
fadd
lock
or
pusha
negl
out
mov
gs
jbe
lea
rorb
cmp
xor
frstor
pop
cmp
adc
and
lock
loopne
call
jne
lods
iret
or
dec
mov
push
leave
test
addb
sub
lods
fmull
adc
ficoms
dec
imul
inc
dec
nop
into
add
data16
pop
mov
negl
mov
push
and
cvtps2pd
add
testl
add
push
add
or
add
mov
or
inc
rclb
mov
rclb
fildl
rcll
hlt
test
stos
and
push
daa
cld
adc
adc
push
mov
ficoml
decl
push
dec
mov
jne
je
mov
incb
mov
push
push
push
push
adc
cmpsb
cmp
retw
jle
sub
xchg
popa
jge
das
jl
jg
dec
sub
fdivs
cmp
fwait
enter
or
shl
sbb
mov
push
insb
add
xchg
orb
cld
sbbb
adc
int
jg
dec
mov
push
test
shrl
outsb
jmp
pop
div
int3
rcrb
xor
dec
add
sbb
add
call
sbb
adc
pop
pop
insb
push
pushf
push
cwtl
mov
mov
push
adc
rcll
cmpsb
push
adc
xor
xlat
call
rorb
gs
push
push
cmp
aas
adc
sub
ret
scas
hlt
fmulp
pop
ret
sti
sub
dec
cld
dec
lret
adc
push
loopne
and
loop
or
add
xchg
push
popf
push
adc
push
call
push
push
shlb
mov
push
or
das
ss
cmp
lock
rorb
push
ret
sub
jbe
or
dec
cmp
add
pusha
scas
ja
add
add
inc
push
mov
and
testl
mov
pop
or
pop
hlt
pop
xor
sub
adc
test
imul
dec
jbe
sbb
push
push
jg
test
testb
add
inc
cld
mov
ret
jbe
rorb
lock
xchg
add
adc
xchg
jne
inc
mov
add
or
xor
push
fists
cmp
mov
or
jbe
cwtl
ss
push
add
pop
add
loope
mov
js
mov
pushf
movb
and
push
mov
fisttpl
shll
mov
orb
jbe
cmp
int
fildl
or
faddl
into
aaa
or
push
jmp
lea
lods
loope
add
pop
test
jbe
in
jp
cmp
sub
pop
cld
adc
dec
imul
adc
test
fs
jle
fs
insb
xchg
cmp
scas
loopne
cli
cmp
mov
sti
mov
sbb
rolb
sub
inc
fwait
outsb
xchg
and
ror
lds
enter
mov
and
or
sbbb
inc
push
popa
fs
xor
xchg
mov
nop
mov
push
xchg
mov
xchg
and
mov
mov
push
pop
mov
xchg
clc
sbb
test
jle
sbb
cmp
adc
call
or
mov
cmp
scas
mov
and
addb
stos
push
jecxz
pop
cmp
shrb
imul
aam
sub
stos
jge
jo
lods
add
pop
mov
aam
scas
pushf
inc
mov
inc
sub
movsb
push
mov
xchg
icebp
pop
js
movl
push
adc
lods
sub
shr
fs
decb
cmp
xchg
into
sbb
cld
mov
push
and
or
lcall
push
icebp
mov
outsb
fdivs
pop
sbb
or
mov
ja
pushf
ljmp
cmp
mov
cmpsb
test
inc
push
fwait
dec
sbb
call
test
inc
in
push
add
into
test
lea
cmpsb
call
in
adc
mov
cs
cmp
xchg
adc
xchg
in
call
xlat
int
push
sub
cltd
notb
iret
xchg
push
sub
adc
mov
in
je
or
out
lock
sahf
daa
je
int
rorl
push
mov
push
push
xchg
inc
sub
cwtl
adc
or
in
mov
call
push
xor
mov
fwait
pop
adc
mulb
mov
call
cs
lock
stc
mov
adc
adc
push
push
add
call
mov
jo
inc
cmpb
sti
loop
ficompl
push
sub
mov
popl
dec
pop
mov
or
hlt
or
xchg
add
std
add
imul
push
xchg
add
shl
int3
leave
xchg
jnp
mov
jmp
mov
mov
arpl
jl
mov
les
sbb
mov
test
pushl
mov
pusha
mov
shr
mov
inc
xchg
jle
mov
sub
clc
pusha
push
sbb
jbe
add
adc
nop
or
pop
cmp
repnz
pop
enter
and
push
in
les
fdivl
dec
mov
in
outsl
hlt
movsb
cmc
push
ljmp
aad
xchg
pop
or
mov
add
orl
roll
adc
stos
insl
fcoms
nop
mov
je
pop
sbb
adc
xchg
xchg
enter
push
sub
scas
mov
lock
adc
fbld
and
adc
bound
add
sbbb
fisubrl
stc
inc
xchg
ficompl
or
in
mov
and
jecxz
test
xchg
in
das
ret
call
sbb
or
pop
and
testl
and
adc
sbb
pop
repz
enter
mov
push
es
subb
lahf
mov
insb
add
adc
jecxz
movsb
mov
rcl
subb
popa
insl
mov
pop
xchg
sbb
sbb
test
jo
push
shrb
add
and
pop
call
push
push
pop
jecxz
std
add
jb
or
outsl
call
push
leavew
sbb
in
cs
stos
cmp
dec
lret
ss
mov
adc
repz
push
push
or
mov
shr
jbe
mov
repnz
mov
cmp
push
loopne
xlat
dec
fadd
lea
push
insl
pusha
jmp
add
pop
stos
mov
jg
dec
jle
int
sarb
inc
cmp
pop
test
push
adc
scas
mov
sub
imul
push
addr16
push
sahf
add
mov
mov
jbe
mov
or
mov
cli
inc
mov
shlb
rorb
jbe
rcrb
cli
rcrb
into
xchg
lods
jne
pop
push
push
add
and
sarb
or
enter
leave
and
dec
addl
shlb
ret
add
add
shrl
shlb
jl
rolb
arpl
orb
mov
mov
aas
mov
xchg
xor
leave
call
test
inc
cmpsl
add
push
fildll
lock
jp
mov
sub
repz
mov
pop
mov
mov
adc
add
jae
inc
push
pop
sbbl
int3
sbb
push
cmp
adc
push
xchg
push
cli
loop
and
int
leave
push
adc
or
ss
adc
sbbb
adc
jae
aas
sbb
call
insl
add
pop
call
in
add
aaa
mov
push
jmp
sbbb
xor
loopne
stos
call
pop
xor
mov
xchg
popa
add
mov
add
mov
orb
test
fs
mov
das
adc
jge
jecxz
add
ljmp
sbb
sub
pusha
push
mov
add
push
xlat
rorb
pop
adc
mov
sub
icebp
inc
jp
test
and
dec
inc
call
sub
xchg
and
daa
roll
data16
or
loopne
call
mov
xchg
je
jo
lret
dec
push
pop
mov
add
into
lea
add
push
daa
cwtl
out
call
cmpb
dec
and
addb
push
orl
jmp
and
andb
dec
pusha
mov
xchg
dec
insb
push
dec
adc
mov
rolb
dec
daa
add
adc
sbb
jmp
mov
or
and
inc
in
out
cli
ljmp
call
mov
test
adc
je
pop
ret
std
inc
mov
xor
cmpsb
adc
jmp
push
inc
scas
pushf
in
sub
cmp
xchg
push
jae
jmp
mov
xor
and
xor
jg
add
sbb
loope
loope
jne
bound
call
add
sub
push
or
loopne
mov
ljmp
adc
in
push
xchg
call
add
adc
aaa
icebp
call
add
add
cli
popa
int
mov
es
fimuls
cmp
rcrb
mov
add
adc
bound
shrb
add
add
idivl
ds
je
lea
test
je
add
testl
mov
push
clc
or
je
adc
xchg
loope
add
jmp
sbb
sub
loopne
jl
arpl
lods
pusha
clc
add
or
test
xchg
xchg
push
addb
fwait
xchg
mov
and
jg
add
sti
pop
ljmp
cltd
mov
xchg
bound
nop
pusha
mov
or
pop
jmp
cmp
cli
mov
or
and
ret
loopne
lcall
xchg
ret
mov
ljmp
loopne
into
and
sub
idiv
dec
in
sbb
xchg
loopne
mov
loop
insl
jp
pusha
or
adc
inc
je
adc
and
fsqrt
into
pop
mov
jecxz
imul
js
loop
in
loopne
fidivl
in
ret
ret
push
push
pop
sub
cmp
lods
cli
mov
inc
pop
push
fs
push
xor
xchg
mov
call
cltd
ja
call
test
adc
mov
fldt
faddl
lock
mov
adc
mov
adc
push
adc
and
or
inc
mov
pop
pusha
inc
and
js
call
ret
inc
loopne
ret
jnp
mov
cmp
lock
cwtl
pop
or
adc
dec
mov
sub
push
push
xor
mov
mov
cmp
or
in
push
shrb
sbb
push
xor
inc
dec
xor
adc
cmp
sbb
xor
pop
jo
mov
sub
jg
sub
mov
or
pop
and
test
inc
inc
shll
add
dec
aaa
sbb
xor
lock
dec
inc
push
add
mov
hlt
and
fbstp
mov
mov
shlb
jecxz
jnp
lock
mov
add
pop
hlt
lret
ret
push
inc
push
cltd
add
ja
cmp
nop
sbb
push
adc
lock
and
xor
shr
xor
cmp
add
sub
lea
fldl
push
in
fwait
add
push
jno
pop
cmp
mov
jo
call
sbb
into
lock
arpl
push
push
xchg
push
lock
lock
or
hlt
filds
pushl
or
push
adc
sub
xor
mov
ja
fcompl
mov
adc
mov
lock
mov
or
mov
mov
shlb
mov
or
inc
fidivl
dec
and
aam
jae
jl
push
data16
clc
filds
icebp
pop
call
add
xor
bound
jne
xchg
pop
xor
push
and
lock
add
filds
push
add
js
or
movsb
mov
repz
inc
sti
in
push
mov
ljmp
andl
mov
xor
adc
push
push
std
mov
xor
sbb
xor
or
orb
je
enter
inc
adc
xor
pop
mov
fdiv
cli
fbstp
or
add
xor
sti
jb
test
push
subb
movsl
ljmp
mov
test
pop
cmc
pushl
and
mov
add
adc
cmpsb
and
inc
js
pop
inc
mov
dec
and
and
subl
mov
adc
cmp
mov
test
or
pop
jno
imulb
gs
pop
ret
adc
lret
and
inc
lods
std
andb
mov
mov
mov
xchg
mov
or
insb
mov
push
mov
add
pusha
mov
fisubrs
push
add
mov
cli
mov
or
and
and
mov
adc
test
mov
scas
sub
fbstp
in
xor
repz
gs
pushl
ds
push
lea
push
xchg
add
lods
lock
aam
xchg
lcall
fistpl
ret
xor
call
push
cwtl
inc
les
pop
pop
xor
and
sub
decl
and
push
adc
jne
popf
sti
add
add
dec
add
push
inc
test
push
dec
dec
cli
sub
add
outsl
insb
sti
add
add
stos
lods
loopne
not
push
sub
mov
adc
xlat
mov
je
fwait
add
xor
jo
mov
sbb
lea
xchg
scas
pop
sub
push
and
sbb
add
inc
mov
push
add
add
or
push
nop
ds
rcrb
xor
incl
cmpsb
icebp
dec
add
cmp
mov
add
mov
or
pop
call
or
and
cs
or
mov
adc
sahf
mov
mov
mov
xor
push
pop
movsb
sbb
es
xor
dec
add
nop
mov
mov
sub
cli
ja
arpl
xchg
js
jae
ret
sub
cmp
jo
fs
cmpsb
incl
adc
dec
add
outsb
xor
push
cld
nop
in
inc
inc
mov
jle
push
push
add
stos
push
xchg
push
test
lea
cmp
push
pop
bound
mov
and
mov
sti
mov
sub
push
xor
add
xor
fdivrs
sar
mov
jo
pop
xor
add
mov
adc
pop
push
xor
pop
aaa
mov
adcb
nop
mov
testb
xor
popf
adc
les
inc
ffreep
clc
add
xlat
jno
ja
or
mov
dec
mov
xchg
stos
mov
ret
inc
pop
inc
adc
lock
or
nop
and
xchg
idivl
dec
addb
or
mov
bound
add
inc
or
xor
add
mov
das
sarl
or
adc
mov
rorb
push
shrb
mov
lcall
in
pop
xchg
inc
pusha
sbb
std
in
aaa
mov
inc
adc
pop
mov
xchg
and
scas
jbe
cwtl
testl
mov
push
xor
push
xchg
fdivs
cmp
incb
xor
mov
jmp
pop
xor
in
sbb
leave
or
adc
jg
shlb
orb
xor
push
pop
sub
and
xlat
xor
jnp
fisttpl
test
jb
out
xor
in
jo
inc
xchg
jo
push
push
call
jmp
add
aaa
xchg
adc
ficoml
jge
cwtl
xor
out
mov
not
xorb
icebp
mov
sbb
cmp
mov
mov
jae
inc
add
push
jmp
and
outsl
xor
cli
aaa
add
movsl
hlt
xor
push
pop
rcr
mov
int3
or
sub
sbb
faddl
add
adc
mov
bound
inc
and
lds
pop
sbbb
popf
in
mov
adc
add
xor
mov
mov
add
cmp
pop
lock
mov
or
xor
add
mov
inc
insl
shrb
call
pop
inc
push
shll
add
addb
cmpsb
pop
add
xchg
ss
adc
jp
add
scas
out
loopne
cmp
daa
pop
adc
mov
jmp
or
xchg
sbb
sbb
subl
test
rol
xchg
push
pop
stos
sti
sarb
or
cmp
add
push
xor
add
bound
jle
xchg
mov
fisubs
xchg
xlat
xchg
push
test
fstpt
mov
and
mov
loopne
arpl
je
add
jg
addb
xorb
repz
and
ds
add
hlt
mov
sub
fsubrp
add
push
sbb
xor
cli
ja
inc
push
cmp
mov
sbbb
add
shlb
adc
push
sbb
sub
imul
adc
inc
mov
cmp
sar
add
mov
mov
cmp
xorb
add
out
or
sub
jg
and
adc
xchg
je
add
addl
xchg
rorl
or
pop
arpl
loopne
xor
xchg
sub
fcoms
and
loopne
mov
pop
jne
mov
push
rclb
inc
ret
jnp
sarl
pop
or
mov
xchg
sub
pop
fcmove
mov
aad
pop
push
fnsave
dec
mov
str
fadd
mov
xchg
or
rcrl
push
xor
int3
call
add
repnz
loopne
or
add
push
dec
or
mov
xchg
les
push
adc
jmp
sarb
jg
fisttpl
or
call
sarb
es
xor
sarb
shrb
adc
inc
sub
adc
adc
imul
sub
decb
sub
hlt
shll
outsl
mov
push
jo
call
jo
push
add
js
add
ds
add
add
nop
push
sti
inc
dec
or
push
add
add
in
sub
sub
fcomip
mov
scas
push
adc
ret
inc
in
les
rolb
rolb
loopne
dec
dec
movsb
inc
or
xor
add
mov
sub
movsl
add
push
sbb
push
movsl
ljmp
rcll
cld
je
mov
mov
scas
or
hlt
leave
cmp
fistpll
or
mov
pop
dec
insb
mov
aaa
leave
push
push
add
pop
rclb
enter
rcrb
sbb
lods
fst
inc
and
hlt
push
jl
adc
push
add
in
movsl
add
add
mov
adc
inc
push
int3
add
dec
and
xor
loopne
jg
xor
bound
push
pop
jecxz
cmp
push
mov
popa
sbb
movsb
add
ds
add
popa
jae
push
xor
sbb
push
adc
mov
push
inc
inc
pop
sbb
dec
add
add
and
push
xchg
test
add
mov
fldenv
or
and
or
mov
dec
insb
pop
fimull
push
mov
sti
cmp
sub
or
daa
inc
aad
in
pop
sub
fiadds
fistl
or
push
int3
nop
or
mov
adc
pusha
inc
out
push
popa
addr16
or
dec
sub
pop
mov
ljmp
push
bound
push
mov
fucomip
data16
push
loopne
loope
fldt
std
dec
pop
pop
pop
adc
ljmp
push
insl
je
push
jp
sub
jle
lods
mov
add
add
and
iret
repnz
jno
ret
stos
bound
mov
fstps
jecxz
and
xchg
or
imul
addl
and
rcr
cmpsb
or
add
inc
ret
add
mov
jmp
push
mov
sub
rcll
adc
fidivrs
stos
or
push
and
inc
and
lret
icebp
cs
cmpsb
adcb
push
cmp
dec
das
mov
imul
xor
aas
lcall
push
xor
xchg
popa
pop
xor
repz
xchg
loop
test
dec
icebp
lods
or
cmp
mov
cld
adc
xchg
push
hlt
shl
fbld
cwtl
pop
adc
push
pusha
add
mov
add
arpl
loop
or
bound
and
or
add
out
loopne
cmp
cmp
sbb
out
data16
fiaddl
or
fcoms
and
push
loopne
sbb
cli
fisttps
jae
pop
jl
loope
mov
mov
pop
icebp
loopne
mov
mov
insb
mov
pop
loopne
js
aas
pop
ret
enter
inc
sbbb
cmp
add
sti
sbb
es
dec
arpl
xchg
out
mov
sub
jmp
mov
cmpl
jae
jle
cmp
add
add
cmpsb
jg
sub
loopne
mov
es
hlt
add
into
loopne
mov
inc
movsb
mov
pusha
fisubl
loope
xor
cld
pusha
add
push
mov
jle
in
movl
ret
and
jle
or
adc
dec
jb
push
cmp
mov
data16
in
or
aad
ja
pusha
pushf
popa
popa
lods
mov
jg
cmp
loopne
pop
cmpsb
movsl
scas
clc
jg
stos
stos
cmp
push
add
jmp
inc
lea
popa
xchg
mov
jecxz
daa
sbb
es
cmp
pop
das
loopne
add
dec
les
sub
sbb
pop
loopne
add
xchg
mov
je
nop
sbb
push
enter
dec
fists
add
inc
cmp
mov
dec
mov
loopne
gs
jne
add
loope
pushf
jl
inc
mov
in
cmpsb
push
dec
push
sti
fwait
pusha
clc
cmp
aas
add
xor
outsb
loope
cmp
stos
jb
jmp
mov
or
jg
sbb
pop
xor
loopne
cmpsb
pop
cmc
outsb
xor
or
int3
loop
jg
outsb
clc
pop
lock
mov
adc
add
sub
nop
xor
xchg
sar
push
push
jmp
xorb
xchg
pop
pushf
lcall
mov
divl
add
jp
dec
loope
sub
jbe
or
jb
mov
ljmp
sub
adc
lea
xor
subb
andl
mov
call
mov
jo
fcomp
cmp
inc
lock
push
add
ret
lock
xor
jg
jo
push
je
lock
call
sub
push
add
push
inc
cmp
inc
add
std
aaa
loop
mov
repnz
xor
push
sub
sbb
inc
inc
cld
push
frstor
cmpxchg
inc
adc
jb
push
inc
add
dec
ss
call
sti
popa
xchg
aam
xor
clc
rcll
pop
es
mov
jp
arpl
leave
and
pushl
loop
in
or
or
outsb
xchg
jbe
cld
push
call
pop
jmp
dec
incl
fidivrs
or
push
sarl
lcall
and
add
xor
push
repnz
call
pusha
and
scas
xchg
addl
pop
or
push
lock
mov
pop
mov
stc
inc
sarl
pop
adc
pop
js
mov
daa
push
or
push
inc
mov
mov
mov
loopne
ljmp
mov
inc
or
decb
pop
cli
adc
or
call
js
pop
mov
repnz
dec
mov
mov
push
inc
jge
mov
inc
iret
icebp
sbb
mov
test
push
adc
insb
loope
xor
jbe
dec
lock
adc
sub
cs
sbb
sar
das
add
push
xor
and
sub
inc
adc
sbb
cwtl
adcb
and
cmp
pop
cld
pop
mov
repnz
lock
lock
test
nop
adc
pusha
insl
cli
data16
mov
nop
push
mov
icebp
pusha
mov
xchg
mov
dec
in
aaa
cld
inc
test
add
les
cmp
sarb
pop
icebp
push
out
add
mov
into
xor
push
dec
jo
lock
inc
je
xor
fs
mov
call
jge
push
inc
jg
hlt
push
adc
jo
divb
aaa
sub
mov
inc
mov
mov
dec
mov
cmp
rolb
lods
xor
push
mov
stos
inc
out
sar
ja
sub
jp
pop
lea
cmp
lds
fiaddl
inc
call
sbb
call
sub
and
cmpb
mov
mov
jl
lock
push
adc
xor
ret
dec
push
hlt
mov
and
add
sbb
adc
jg
xor
xor
adcl
ret
psubd
incb
add
dec
sbb
push
clc
and
stos
xor
push
jae
xor
inc
mov
repz
insb
popa
mov
jb
icebp
push
mov
mov
dec
cmp
push
add
push
in
sbb
jg
mov
mov
mov
je
adc
adc
stos
popa
pop
add
mov
push
mov
imul
pop
adc
jo
push
fldl
and
push
cli
inc
or
push
mov
cmpl
cmp
mov
pop
adc
inc
repz
inc
xor
jnp
mov
outsb
add
es
sbb
scas
push
mov
ret
sbb
clc
repnz
add
xchg
pop
and
es
loopne
xchg
scas
or
icebp
dec
jne
xchg
mov
push
inc
xor
xor
mov
mov
call
adc
add
cmp
xchg
mov
sub
lods
scas
lods
pushl
mov
xor
mov
xchg
or
dec
clc
or
dec
sub
ret
test
sbb
mov
ja
dec
loopne
pushf
adc
lock
stos
fwait
push
rclb
xor
out
inc
lock
or
stc
push
lcall
nop
je
and
xor
sub
dec
jb
add
rcrb
adc
jo
sub
jbe
cwtl
adc
nop
mov
add
hlt
sub
test
jnp
sub
jg
mov
mov
inc
mov
xor
loopne
push
mov
cmp
jmp
cmpsb
std
add
mov
mov
icebp
add
add
jo
xchg
test
pushf
xor
mov
stos
mov
jne
mov
jne
ljmp
inc
lock
in
xor
jo
mov
jge
call
add
inc
add
sbb
xchg
mov
jge
pop
mov
mov
subb
mov
mov
lahf
and
loopne
divl
test
fadds
cmp
mov
xchg
fwait
clc
sbb
and
adc
pop
movsl
neg
add
lea
cmpsl
call
lcall
add
fmull
mov
cmp
call
pop
add
fs
inc
mov
lock
and
ljmp
and
push
inc
or
xor
inc
test
mov
adc
add
xor
cmp
pop
cld
mov
jo
test
xor
adc
iret
scas
and
negl
movsl
inc
add
inc
push
loopne
xor
call
loope
mov
loope
decb
cmp
xor
inc
jo
outsl
and
and
add
imul
int3
test
test
push
ljmp
mov
sub
jmp
dec
movsl
test
dec
and
stos
aam
adc
mov
push
incl
add
divl
push
and
insl
or
call
push
lea
testb
call
add
inc
daa
mov
fnstcw
je
push
cwtl
xor
xor
push
mov
es
call
fdivl
cld
call
push
mov
cmp
loop
lcall
add
loopne
icebp
scas
xchg
mov
bound
je
jge
and
dec
or
and
iret
nop
outsb
in
inc
orb
mov
inc
jg
push
lea
enter
push
or
cmp
rorb
push
stos
or
in
rcl
mov
insb
mov
and
add
push
dec
pop
sti
ds
bound
lea
aad
mov
and
sub
add
dec
mov
dec
call
jo
test
dec
mov
cmc
sbb
inc
cmp
sub
push
loopne
mov
test
rclb
mov
inc
add
js
loop
add
cmpsb
insb
iret
push
add
sbb
pop
lock
in
cmp
test
mov
mov
mov
push
jle
movsl
dec
out
sub
mov
or
clc
outsl
and
repnz
aas
orb
xor
mov
rcrl
mov
test
xor
rorb
outsb
jl
hlt
push
roll
sub
cmp
sub
je
pop
and
arpl
pop
jno
xor
and
testb
fwait
pop
aam
data16
addb
adcb
lods
insb
push
xor
cs
sbb
bound
or
lret
push
add
pop
or
mov
out
lods
dec
push
adc
int3
jbe
andb
pop
sahf
push
in
test
test
js
push
or
insb
cli
sbb
lcall
push
je
inc
mov
mov
adc
push
pop
scas
sbb
mov
mov
sbb
xor
inc
pop
int3
stos
adc
divl
push
fmuls
sbb
mov
call
add
sbbb
xchg
mov
rorb
andl
or
mov
das
rclb
fisubl
adc
je
in
mov
mov
sbbb
imul
cmpsb
push
test
push
mov
sub
cmp
dec
and
call
lret
movsl
and
stos
sub
or
mov
add
lods
add
outsl
scas
movsb
mov
cld
xor
aaa
cltd
push
jo
inc
pop
ret
das
call
dec
xor
mov
clc
subb
sub
testl
push
mulb
inc
pop
adc
push
adc
addr16
mov
add
shlb
call
or
inc
fstl
test
inc
pop
jo
add
es
xor
push
lret
cld
adc
jmp
dec
cmp
jle
mov
mov
add
add
lcall
xor
rol
mov
lods
outsl
rol
aaa
ret
add
xor
lock
push
das
jmp
lea
sub
mov
inc
adc
shrl
mov
imul
dec
mov
lock
xchg
outsb
or
gs
add
mov
test
out
jle
fistl
stos
sub
and
add
and
ficoml
adcb
shrb
xor
sub
sbb
jge
jbe
push
call
pusha
adc
add
mov
cmc
or
insb
cli
jge
adc
shrb
rorb
push
add
test
and
ljmp
scas
push
dec
lret
cs
test
pushf
je
xor
mov
nop
push
and
push
std
adcb
movsb
rolb
inc
xor
mov
sbbl
dec
shl
jbe
mov
ss
sub
mov
cmpsb
or
mov
les
scas
cs
lea
jl
call
out
push
sbb
call
fs
adc
or
subb
adc
push
sub
pop
lock
push
xchg
lcall
xlat
pop
lods
iret
test
xchg
add
jae
adc
stos
bound
xchg
or
xchg
loopne
cmp
adc
leave
add
sar
fidivrl
fbstp
enter
cmp
test
loopne
push
push
jne
cli
jbe
call
in
mov
lea
push
add
cmc
loopne
mov
jne
loopne
inc
ret
xor
dec
rorb
mov
ret
mov
push
pushl
ljmp
push
add
mov
sub
pushl
std
lds
loopne
fs
leave
sbb
xchg
and
arpl
call
ret
sbb
and
adc
cli
incl
lcall
je
push
dec
fwait
xor
mov
sbb
jne
loopne
imul
xchg
xchg
cli
mov
push
cmpsb
imul
cmp
pusha
push
jne
mov
jbe
add
scas
fisubrl
call
push
lea
cmc
inc
jnp
subb
add
jp
nop
loopne
xchg
pop
lods
scas
inc
or
cmp
fisubrl
add
ljmp
mov
xchg
inc
pusha
pushf
icebp
js
mov
push
aaa
lds
cmpb
dec
inc
pop
hlt
je
jmp
sbb
fisttpl
loopne
stos
xor
dec
in
dec
push
mov
mov
call
pop
sub
push
nop
push
add
outsb
sbb
adc
mov
cmp
mov
lea
or
je
sbb
xchg
sub
or
push
push
loop
lea
lods
lods
xchg
push
push
add
pusha
add
or
mov
cmp
pop
lock
push
test
std
loopne
call
incl
inc
outsl
pop
or
mov
shlb
cld
push
imulb
pop
das
loopne
loope
push
nop
inc
sub
and
ljmp
adc
fwait
mov
push
or
hlt
loopne
lcall
dec
push
popa
inc
ret
add
into
sub
je
or
jle
or
push
or
push
push
pop
call
add
and
jl
mov
mov
sub
pop
ja
rolb
mov
fldl
cmp
push
aad
push
int3
xor
and
loope
mov
test
adc
push
scas
add
pusha
dec
pop
xor
fcomi
testb
les
sub
jl
clc
cmp
lahf
scas
ljmp
je
mov
inc
jmp
sub
jmp
sub
or
je
adcl
push
and
pop
inc
mov
adc
add
and
pusha
inc
jl
mov
je
loopne
mov
mov
lds
lret
push
push
in
lods
inc
ret
sub
mov
sbb
jle
lock
pusha
mov
cmpb
frstor
fadds
sub
mov
aas
es
push
push
mov
ds
push
and
add
rorl
scas
push
ret
scas
call
pusha
jb
jnp
je
arpl
enter
sar
repz
loope
js
pop
fwait
push
cbtw
adc
int3
je
or
xor
mov
adc
jg
sub
push
pop
mov
push
pop
fidivl
push
std
les
lea
sarb
add
add
xor
adc
xor
aam
add
add
dec
lcall
jmp
mov
cmp
outsl
push
scas
mov
pop
call
lock
jae
cmpsb
les
push
clc
scas
push
jo
pop
add
cmp
xor
inc
jg
mov
inc
clc
test
clc
dec
mov
cltd
and
add
inc
pop
add
pushl
cli
outsb
or
jle
cmp
je
or
add
orb
jg
sub
jne
mov
sub
mov
sub
mov
mov
mov
mov
adc
outsb
pop
ret
jb
mov
js
nop
ja
lds
add
push
jo
lea
or
cli
fcomip
sub
jne
sbb
xor
or
out
jno
mov
fsubrs
sub
jp
pop
and
je
call
jo
pop
fsubr
add
jno
jne
mov
mov
and
call
cld
popf
ret
mov
or
and
mov
gs
ficompl
call
push
jecxz
dec
or
and
dec
std
incl
jo
sub
mov
xchg
pop
push
sbb
lret
inc
sub
lock
mov
mov
inc
out
jne
or
pop
lcall
add
add
cmp
dec
pusha
aas
icebp
lcall
stos
mov
mov
jo
ret
xor
dec
jo
pop
push
scas
add
dec
sub
call
lret
mov
xor
pop
mov
cmp
add
push
out
mov
push
cmp
sbb
incb
push
or
ss
or
dec
dec
sbb
je
test
jb
das
cmp
call
inc
jl
adc
cmp
stos
sbb
inc
test
inc
call
call
mov
dec
insl
and
ljmp
inc
shrb
dec
sub
scas
xor
lock
mov
bound
repnz
hlt
add
std
dec
mov
and
ja
add
pop
and
push
mov
push
sbb
test
mov
push
jl
push
data16
idivb
pusha
adc
adc
lock
and
push
sub
divb
or
aas
pusha
std
dec
les
cld
movsbl
pushw
pop
or
cmpsb
cmovno
sub
lock
jl
stc
jg
xor
push
push
xchg
nop
push
int3
mov
jle
mov
les
out
pop
loopne
inc
xor
jp
loop
xchg
push
in
and
lret
cmp
jbe
mov
pop
cmp
orps
add
mov
cmp
jb
outsl
decl
dec
cmp
inc
repz
icebp
or
ds
jmp
in
je
sub
iret
enter
sarb
sbb
popf
xchg
aas
inc
mov
jo
rcrl
adc
cmp
stos
or
hlt
rorl
jbe
and
lea
cmp
jp
stc
dec
rclb
cld
cmp
jb
cmp
lret
inc
lea
fadds
cld
aam
cmp
jb
js
mov
dec
pop
movsb
ret
repnz
jo
je
push
sub
pop
inc
cld
jmp
sub
inc
pop
popa
sbb
andb
in
adc
mov
mov
xor
dec
scas
sub
gs
or
cld
inc
add
mov
jne
pop
xchg
addl
imul
xor
cmp
lea
out
push
loope
aam
pushl
xor
aaa
ljmp
ret
xor
xchg
jo
cmpsb
adc
decl
and
mov
jo
loope
push
loopne
xor
orb
ret
dec
outsb
subb
mov
pusha
es
pushl
adc
mov
jo
sarb
cmp
scas
iret
cmp
pop
cmpsb
push
inc
loop
lods
inc
push
dec
jg
mov
mov
jae
lock
add
xor
lock
jo
faddl
cld
mov
mov
rorl
jl
inc
jp
ret
or
adc
add
pop
out
mov
rcll
xor
les
leave
icebp
inc
add
pop
xor
add
les
lods
add
adcb
and
pop
dec
fisttpll
rep
mov
adc
sbb
mov
movsl
notb
lahf
lock
adc
lock
push
adc
imull
and
rorb
mov
cmp
pop
add
xchg
push
jle
cmp
add
push
lcall
add
or
or
sbb
or
out
xor
or
mov
or
add
xor
cmpsl
xor
add
adc
cwtl
adc
pop
mov
or
adc
out
clc
add
jo
mov
jbe
mov
call
and
push
jb
sub
and
test
fisttps
xor
adc
push
or
mov
or
cwtl
xor
lcall
pop
movl
or
inc
push
call
ds
xor
data16
jo
dec
hlt
pushl
push
clc
adc
cs
and
mov
lock
jge
cmpsb
mov
dec
inc
push
adc
push
mov
mov
or
lcall
cld
je
into
call
mov
mov
sub
les
gs
cli
shl
incl
mov
add
push
add
xor
cli
imul
and
mov
call
pop
std
dec
loope
pop
xor
sarb
sar
in
pop
es
test
mov
mov
lock
inc
loop
lock
adc
scas
push
lods
mov
inc
or
test
lock
push
mov
cmp
push
and
mov
add
jne
cmp
mov
mov
pop
cld
xor
xor
loopne
loopne
sahf
cmp
xorl
fcmovnb
sbb
loop
mov
cli
mov
mov
fldl
push
jbe
mov
aad
mov
ret
in
jle
push
or
mov
mov
sbb
clc
add
icebp
lret
push
and
and
fsubp
adc
pop
mov
cmpw
add
xchg
xchg
jne
xchg
jne
pushl
sbb
add
loopne,pn
cmp
pop
inc
shll
lods
das
xor
jo
jg
jno
aaa
sti
fildl
add
xorl
push
lcall
add
xor
add
std
sbb
popa
add
mov
jge
or
push
push
push
and
pop
mov
jle
add
js
pushf
xchg
xchg
nop
inc
mov
push
mov
sti
cmp
jne
pop
ret
push
inc
adc
pusha
ficompl
add
mov
test
xchg
iret
call
jo
pop
jp
sub
mov
dec
or
push
push
aad
jle
push
je
not
push
push
xchg
mov
rorb
scas
rclb
push
adc
js
push
mov
mov
pop
cmp
pop
pop
mov
neg
add
sub
add
int3
call
add
imul
pop
repz
or
sub
xor
or
adc
or
pop
add
or
xor
add
or
cmp
xchg
sub
xchg
shrb
xchg
cmp
loope
testb
ljmp
flds
lock
push
aam
mov
pop
mov
mov
cmp
add
ljmp
xor
out
push
sub
lcall
mov
mov
push
adc
pop
mov
push
xchg
add
ret
add
lret
lods
add
js
pop
cmp
jmp
imul
adc
or
pop
or
popf
cmp
mov
and
add
fistpll
sbb
mov
xorb
sub
je
imul
add
mov
movl
loope
ret
pop
dec
add
dec
jp
test
dec
mov
add
ret
adc
pop
call
setb
sbb
cs
push
xor
xchg
dec
inc
jp
cmpsb
sub
int3
push
cmp
nop
jle
test
adc
push
add
xchg
scas
rcrw
and
fdivrs
add
push
pop
mov
add
mov
dec
or
cld
mov
xor
call
fmuls
mov
bound
test
shlb
rorb
mov
add
sub
into
mov
and
pusha
inc
and
jge
faddl
mov
roll
scas
nop
lods
ja
jb
and
add
test
das
enter
mov
xor
mov
mov
insb
pop
jmp
and
ret
and
decb
mov
mov
lret
je
or
lretw
in
ret
mov
push
aaa
movsb
icebp
cmp
or
inc
nop
sarl
shll
shll
lea
lods
add
jl
subl
leave
adc
sub
cmpl
shlb
shlb
mov
xor
push
js
or
xor
call
outsb
addb
mov
adc
hlt
stos
sbb
iret
xorl
lcall
mov
jmp
shrb
stos
pop
mov
pop
jo
cli
adc
pop
std
add
adc
adc
add
adc
pop
out
mov
mov
xor
pop
add
push
pop
mov
adc
divl
rol
insb
and
add
cmp
jne
data16
shrb
xor
push
cmp
dec
scas
push
sarl
stc
mov
loope
and
sahf
fidivs
mov
cmovns
pop
rclb
mov
add
inc
dec
mov
inc
jge
push
sbbb
and
sbb
add
push
jb
sbb
iret
xor
adc
mov
jp
jo
rcl
test
lea
test
or
mov
in
in
enter
xchg
mov
test
dec
cltd
inc
pusha
fdivrp
dec
mov
jp
mov
pop
movsb
ds
cs
je
pusha
add
add
dec
pop
push
call
mov
sbb
add
sbb
inc
rcrb
jo
es
pusha
jo
add
loopne
loopne
xor
pushf
clc
xlat
add
jecxz
out
hlt
pop
leave
test
jle
and
inc
sbb
je
pop
jecxz
loop
sub
shl
sbb
pushf
jbe
push
lcall
xor
addl
sub
call
jp
sbb
push
add
sbbb
push
aad
adc
and
ret
imul
xorb
add
pop
loop
and
and
jns
mov
dec
enter
inc
push
enter
call
mov
shll
out
outsb
mov
mov
cmp
pusha
add
mov
dec
jecxz
loopne
or
jne
push
pop
inc
mov
xor
scas
clc
mov
adc
std
je
dec
outsl
or
je
loopne
mov
pop
jno
mov
aam
xchg
inc
adc
pusha
pop
inc
and
push
dec
add
push
inc
xor
or
ss
cmp
or
xor
loope
pusha
inc
loopne
and
stos
and
loope
fwait
loope
mov
jg
sbb
adc
loopne
add
popa
add
rorl
fs
inc
mov
int3
cmp
dec
or
mov
add
ljmp
sub
jb
inc
std
or
cs
pusha
sbb
faddl
pop
loopne
sub
mov
and
test
xchg
sub
inc
loop
fadds
popa
adc
add
loope
dec
push
sub
jb
rcrb
lods
sub
dec
xorb
push
xor
stos
negl
cmpsb
mov
je
adcl
jne
adc
adc
push
loope
sbb
cltd
ds
mov
add
sar
or
mov
aaa
push
fcomp
sbb
loop
sub
and
add
push
stos
lods
pop
mov
adc
es
les
decb
jb
adc
stos
and
xor
nop
inc
pusha
jl
pusha
mov
cmc
in
add
adc
fcmovbe
pop
imul
jl
add
dec
inc
mov
pop
or
aad
add
xchg
addl
jne
pop
loopne
cmp
fdivp
rol
je
into
ljmp
shr
jp
adc
call
orb
pusha
pop
adc
add
je
int
cmpsb
hlt
inc
enter
popa
sub
mov
mov
sbb
mov
pop
in
out
loopne
mov
shlb
es
add
movsl
js
cmpsb
sub
mov
ljmp
jg
jl
adc
sbbl
push
xor
js
jmp
push
xchg
sub
mov
add
pop
pushf
dec
add
ja
xchg
dec
fisttpl
add
je
push
or
rcrb
test
xorl
stc
inc
dec
mov
rolb
subl
mov
push
mov
rclb
imul
pop
push
lods
les
push
test
loope
cld
nop
fwait
adcb
xchg
sahf
sti
scas
xor
add
or
or
push
out
push
mov
jl
xchg
ficompl
jg
idivb
mov
test
lret
adc
mov
pop
cmpb
mov
jp
inc
mov
add
push
or
mov
stos
dec
lea
sti
add
mov
outsl
sbb
add
nop
jg
jb
shlb
adc
add
cmp
add
ja
lock
data16
xor
inc
push
add
xor
jne
xor
add
and
cmc
cmp
lock
cltd
imul
or
shl
data16
or
cld
xchg
cmp
add
fmuls
jmp
sbb
aam
jmp
sub
and
jmp
push
or
pop
setne
mulb
mov
or
adc
mov
mov
push
lock
lea
ret
or
sbb
or
cltd
orl
mov
fsts
icebp
add
xor
and
ljmp
fwait
or
add
sbb
std
cs
jg
adc
imul
or
ds
mov
jmp
jo
pop
cmc
pop
aad
je
insb
or
pusha
jp
lds
or
jmp
or
sub
mov
jb
repnz
cmp
mov
lcall
stc
xor
pop
xorb
incb
adc
or
test
mov
cwtl
fptan
dec
idiv
push
test
jl
pop
jg
xor
or
mov
and
sub
jg
mov
je
clc
inc
je
or
add
mov
lcall
xchg
test
adc
adc
mov
addr16
mov
push
xor
or
add
adc
jge,pt
add
add
adc
imul
sub
push
rorb
ficoml
xlat
add
sbb
adc
insl
xchg
xor
push
jmp
mov
pop
sti
push
aaa
jae
lock
or
jmp
jecxz
les
xchg
add
jo
cld
filds
enter
adc
testb
and
loop
nop
cmp
fisttpl
xor
in
add
icebp
cmp
mov
out
cmp
add
jb
jg
hlt
cmp
mov
jne
addl
sbb
mov
adc
xor
adc
repz
jl
jne
aam
ljmp
pop
pushf
test
es
jg
pop
push
es
mov
adc
imul
out
cmp
mov
pusha
jno
xor
cmp
add
jmp
in
repnz
divb
or
mov
sub
add
insb
aaa
push
rcr
push
or
push
lahf
lock
imul
mov
aaa
fadds
inc
cwtl
push
push
out
jmp
cs
sub
rolb
lods
and
outsb
xorb
or
pushf
and
les
xor
cld
popa
pop
push
xor
pusha
jle
mov
mov
add
jne
ret
push
insl
or
add
sub
lret
movsl
movsb
out
ljmp
add
subb
jbe
mov
ds
lcall
insb
pop
ljmp
icebp
dec
call
icebp
dec
fistl
aad
movsb
xor
or
mov
das
cmp
or
or
dec
clc
xor
lret
fcomip
cmp
dec
jo
mov
adc
or
inc
jecxz
sbb
aaa
mov
ret
repz
cmp
jp
mov
inc
cli
xlat
push
lock
outsb
mov
stos
je
pop
xor
add
and
iret
sub
in
add
jo
jmp
mov
test
or
xor
scas
subb
push
rclb
cmc
jle
fistpll
ret
or
xchg
jl
idivl
psllw
jno
add
dec
push
hlt
fildl
mov
jmp
inc
inc
jle
shl
add
xchg
test
and
cmp
push
and
xchg
lock
push
xor
and
jo
push
mov
icebp
or
mov
add
and
or
jnp
je
andb
jp
add
dec
mov
sbb
unpcklps
push
ret
cmpb
insl
jb
fnstsw
mov
xchg
loope
mov
push
push
ret
sar
xor
stos
in
pop
aas
or
or
xor
nop
xor
lock
pop
xor
adc
lock
mov
inc
js
test
fwait
push
ss
xor
js
and
test
dec
mov
mov
out
add
imul
fs
xor
clc
ljmp
mov
push
lock
out
pop
lods
mov
vmovdqu
das
mov
je
inc
mov
push
or
jo
jno
dec
or
or
fwait
fs
inc
loop
inc
and
push
outsl
es
xchg
jae
outsb
enter
pop
pusha
push
fs
sub
cmp
je
xor
ret
or
aas
mov
jmp
incl
lcall
inc
sub
repz
add
push
loope
or
insb
cli
adc
push
pop
mov
push
jns
sub
mov
cld
add
sbb
xchg
pop
sbb
mov
or
xchg
jo
shlb
pop
ror
inc
xchg
mov
rolb
xchg
outsb
hlt
pop
xor
sbb
aaa
or
push
hlt
add
icebp
add
push
fldt
lods
xchg
cmp
icebp
sbb
inc
stos
ja
pop
or
mov
gs
nop
or
xchg
test
pop
adc
repz
icebp
add
xchg
icebp
pop
jge
sahf
xor
mov
sbb
mov
sub
stc
add
nop
or
and
or
pushf
mov
push
shrl
add
fcmovnbe
sub
in
and
pop
mov
cmpsb
pop
push
or
jmp
scas
add
add
or
push
jmp
outsl
pop
xchg
mov
repz
sbb
jmp
pop
dec
sbb
out
insl
mov
roll
insb
mov
cmp
aaa
sbb
lret
mov
decl
push
add
push
add
mov
loopne
dec
push
hlt
mov
movsl
sbb
xchg
test
add
andl
addl
hlt
int3
sar
push
aaa
xchg
nop
mov
loopne
adc
and
push
jg
imul
filds
ja
insl
add
outsb
call
mov
jmp
add
and
pop
addb
outsb
je
stc
je
push
lahf
add
fwait
push
add
inc
push
add
and
push
pop
adc
and
lock
nop
call
nop
add
or
or
mov
mov
mov
add
orb
dec
jno
cmpl
js
and
add
sbb
and
inc
dec
fildll
xchg
xorb
lock
test
adcb
sbb
xchg
push
movsb
or
xorl
repnz
jns
jg
lret
test
or
ret
incb
mov
outsl
jg
jmp
subl
sub
and
sub
ret
xchg
sub
adc
lock
xchg
pop
ret
add
xor
stc
rolb
or
adc
adc
sarb
push
dec
shlb
push
jmp
pop
dec
jg
jne
xor
adc
sub
fs
rclb
mov
xor
mov
jbe
sarb
inc
mov
rclb
rorb
jne
rclb
cli
mov
and
mov
sub
push
fcmovbe
jp
jnp
inc
fmuls
jle
adc
cmp
sbb
push
js
pushl
and
and
sbb
lds
jmp
mov
inc
or
lret
mov
les
mov
shll
sub
and
js
rolb
outsb
fisubrl
pop
mov
xchg
lret
out
in
xlat
lds
repnz
sbbb
adcb
inc
aam
add
ror
mov
mov
pop
sub
jne
rorl
pop
add
sub
adc
or
inc
je
dec
mov
dec
rcrb
out
imul
orb
add
inc
arpl
arpl
shl
add
mov
push
add
cmp
jp
cmc
jmp
push
mov
mov
hlt
test
nop
cmp
jge
mov
push
push
test
cmc
or
ja
jg
push
adc
adc
repz
or
adc
popa
sbb
lock
dec
sbb
jp
dec
je
loop
lock
hlt
loop
sbb
imulb
cld
ljmp
cs
sbb
cmp
inc
test
xchg
scas
mov
je
add
xor
and
js
repnz
or
mov
mov
mov
xor
clc
mov
xor
jnp
pusha
jbe
call
nop
add
repz
push
aam
lock
rorb
sbb
and
mov
add
dec
mov
subb
fstpt
dec
mov
jp
iret
jmp
mov
xchg
scas
call
lods
pushf
xchg
lea
sbb
xchg
sti
mov
addl
test
dec
cmp
call
loop
or
add
pusha
jnp
incl
mov
add
mov
loope
ljmp
subl
pusha
inc
je
orl
sbb
add
mov
std
pusha
and
push
inc
imul
nop
scas
sub
subb
ja
mov
or
bound
jne
fimuls
cwtl
mov
add
inc
jae
lods
roll
xor
adc
xor
or
cli
out
fcomi
inc
gs
insb
leave
add
or
or
sub
rorl
sbb
add
pusha
or
pop
repz
and
xor
adc
loopne
or
push
mov
inc
shrb
insb
adc
adc
or
inc
xchg
or
adc
or
and
movb
repnz
push
mov
data16
je
ljmp
pusha
xlat
popa
jo
repnz
insb
nop
mov
bound
loopne
ljmp
and
xchg
xor
les
pusha
mov
ret
adc
mov
mov
loopne
fldt
shl
inc
sub
incl
jle
add
and
add
mov
and
out
test
jmp
call
mov
pop
add
push
mov
and
popf
nop
ss
cmp
js
lods
jge
cmc
adcl
add
loope
adc
lret
cmpsl
add
mov
jb
pop
mov
arpl
shll
or
push
push
popa
or
sbb
les
sarl
sbb
push
push
add
pop
mov
push
stc
push
dec
das
movsb
mov
out
daa
and
pop
bound
sub
loopne
int3
push
dec
cmp
adc
pop
adc
sarb
sbb
dec
out
mov
or
mov
jle
hlt
ds
cmpsl
pusha
push
pop
test
pop
pusha
stos
and
push
mov
jl
lret
inc
add
in
cltd
lret
jae
pusha
add
add
pcmpgtb
sbb
or
jb
lods
loopne
das
loopne
movsb
inc
pusha
push
pusha
push
xchg
out
xor
mov
cmpb
dec
mov
sub
xchg
es
mov
cs
es
xchg
xchg
dec
xchg
repnz
or
add
insl
sub
cld
ret
mov
js
outsb
cmp
ss
sbb
mov
mov
das
jno
adc
mov
or
loope
xor
ret
pop
sti
mov
xchg
or
jbe
inc
cltd
xchg
inc
mov
mov
lret
mov
or
clc
stos
push
pushf
popa
jp
mov
jno
mov
xlat
or
add
jg
xchg
rcrb
jmp
lcall
aad
mov
or
sub
or
xchg
rclb
cmp
mov
rcr
je
mov
and
mov
je
fistpl
pop
ljmp
out
cmp
arpl
xor
fdivr
pushl
mov
xor
aam
sbb
xor
or
jmp
rclb
lock
adc
pushl
pop
movaps
rclb
or
push
mov
les
nop
xor
adc
adc
cmp
data16
cmp
mov
into
jo
insb
xlat
lds
jo
std
das
fmuls
xor
pop
icebp
add
sahf
icebp
add
mov
mov
mov
sti
mov
cli
sbb
inc
incb
jo
or
dec
cli
jg
jne
aas
ja
inc
add
and
into
and
inc
xchg
add
cld
les
stos
ret
test
in
sbb
xchg
or
insl
fwait
cmpsb
add
mov
lds
sub
popa
shr
inc
add
rcr
sub
outsl
enter
call
decb
leave
sbb
in
sbb
sahf
jns
lret
mov
inc
cmc
mov
xor
and
add
pop
push
jno
xchg
xchg
shlb
movsb
mov
dec
mov
sbb
inc
push
rclb
in
sarl
mov
inc
adc
rclb
cmpsb
dec
sub
inc
push
jge
sti
fisubrs
adc
mov
popa
or
movsl
add
int
or
ficoml
push
stos
add
push
into
inc
jp
add
push
add
jbe
adc
mov
not
mov
sbb
xchg
rolb
adc
sbb
data16
mov
add
push
dec
xor
adc
push
push
insl
adc
push
xor
icebp
fimull
xchg
pop
jb
ljmp
push
and
lock
push
mov
push
jmp
inc
inc
and
call
test
or
loop
loop
scas
dec
adc
push
hlt
mov
cs
mov
test
je
bound
jb
popa
fmuls
stos
pop
adc
cwtl
insb
cmp
decl
adc
pop
jne
movsl
loopne
les
mov
mov
jge
lock
mov
sbb
add
push
dec
insl
fiadds
daa
xor
mov
push
call
aaa
pusha
cmp
pop
or
sbb
mov
push
das
aaa
loop
sbbb
or
int
outsb
jmp
mov
xor
or
pop
jle
add
inc
and
cmp
adc
cmpsb
mov
push
fsubr
ss
jge
cmpsl
call
or
inc
divb
call
mov
aas
repnz
pop
mov
insl
je
adcb
call
call
mov
mov
jl
push
adc
add
rorb
sub
or
je
loope
or
push
subb
or
les
pop
mov
dec
dec
cli
pop
adc
out
pop
jmp
out
lock
xchg
add
cld
mov
pop
scas
mov
pop
jo
add
or
fsts
mov
xor
mov
jns
xchg
add
cmp
xor
fdivrl
adcb
ss
mov
rorb
inc
sub
fisttpl
je
cmpl
inc
mov
data16
lock
inc
cmp
jb
scas
mov
dec
mov
adc
add
aas
push
jo
or
adc
mov
fadds
mov
push
lock
jp
adc
add
xor
xchg
or
loope
ds
test
int3
or
adc
dec
inc
add
mov
in
lret
das
push
mov
les
adc
hlt
testb
or
data16
sbb
fdivp
call
adc
pop
inc
in
jb
pusha
adc
ret
jmp
xchg
arpl
clc
or
jle
mov
mov
cs
lea
jae
shlb
rol
xor
add
pusha
adc
add
fistl
mov
mov
xchg
lock
push
adc
sbb
pop
mov
xchg
clc
ljmp
mov
jl
lea
movsb
xor
adc
adc
add
adc
mov
in
sbb
push
movsb
lock
push
cli
imul
add
sub
jnp
mov
jl
aas
push
adc
push
push
dec
mov
icebp
adc
mov
test
or
push
cmp
mov
daa
push
push
ret
pop
pusha
lds
roll
push
push
xor
mov
lea
call
push
add
into
add
xor
sbb
adc
icebp
add
push
push
add
jb
lcall
inc
cmp
jb
addl
je
xor
push
shrb
xchg
sbb
sbb
push
and
jb
or
adc
mov
adc
sbb
cmp
in
xchg
push
aam
pop
mov
dec
test
inc
jb
jle
push
push
lock
jo
inc
push
push
rcr
cmpsl
sbb
lods
jno
scas
and
sub
test
mov
push
sbb
xor
inc
jb
mov
es
xor
cmp
sbb
jecxz
push
xchg
sub
push
sahf
mov
or
xchg
test
pop
inc
mov
mov
leave
test
xor
inc
xchg
mov
jle
ret
aam
push
push
or
fistl
inc
nop
xor
sub
enter
or
dec
mov
push
jl
add
fdiv
and
mov
or
mov
push
enter
lods
inc
ret
inc
add
cltd
dec
sbb
pop
add
ds
hlt
enter
mov
sti
je
or
hlt
add
aaa
call
das
push
adc
sub
sub
mov
sti
je
jmp
ret
insl
pop
inc
sbb
or
ljmp
cld
mov
rcrb
xor
cmpsb
mov
mov
addb
out
add
int3
repnz
insb
cld
icebp
mov
add
xchg
icebp
add
cmp
loope
or
fcoms
aam
adc
test
ja
and
inc
shl
xor
rolb
cmpb
dec
mov
faddl
xor
add
fcoms
shr
es
and
xor
fdivrs
cs
mov
movsl
mov
xor
clc
inc
jbe
fadds
fwait
stc
addl
jmp
jle
xor
add
inc
add
cmp
mov
jle
jl
nop
mov
ja
subl
xor
out
cmpl
or
add
stc
imul
aam
ss
incl
pop
pop
or
jae
rorl
aaa
rcll
ljmp
mov
add
mov
aam
in
sarb
ja
pop
aam
lcall
pop
or
enter
subb
pop
add
rol
add
or
add
cmp
push
add
cwtl
push
or
ss
adc
jecxz
sbb
adc
or
fdivl
lcall
clts
mov
movsl
sbb
adc
push
ret
sbb
xorb
jb
jnp
jb
sbb
mov
test
jne
call
add
sbb
sub
mov
add
sbb
in
push
mov
mov
xlat
pop
movsb
inc
test
sub
mov
adc
mov
fadds
ja
call
push
xor
mov
aas
sbb
notl
lea
testb
and
ret
or
add
push
jbe
mov
jo
mov
cli
sbbb
pop
adc
inc
cmp
sub
mov
push
enter
movsb
or
pop
add
sar
andb
adc
aam
rol
inc
in
sbb
ja
pop
adc
test
icebp
adc
addl
int3
fildl
add
mov
inc
add
sbb
adcb
out
mov
incb
jne
pop
loope
xor
jle
out
in
rorl
mov
mov
xor
adc
xchg
lods
and
daa
ret
into
ja
je
sub
inc
popa
jg
cmp
adc
add
mov
add
adc
repnz
fistpll
pop
rcrb
push
jne
push
xchg
out
adc
inc
inc
or
popa
add
cli
mov
push
dec
outsb
inc
and
pop
call
jmp
rcll
add
mov
adc
cmpsb
jmp
mov
adc
mov
loope
jge
add
sarl
push
dec
sub
in
cmpsb
icebp
add
cli
jo,pn
adc
add
outsb
clc
jne
adc
lods
and
or
xchg
fldt
hlt
adc
sub
push
mov
or
rorb
test
cs
popa
mov
rcrb
test
sarb
sar
mov
mov
push
adc
mov
ret
mov
cld
rcrl
jo
and
fbstp
loop
add
jmp
and
test
enter
adc
repnz
xchg
icebp
mov
movzwl
stc
popa
adc
jo
jp
or
push
fs
sbb
and
xchg
je
dec
js
jo
xor
test
dec
cmp
jae
push
test
jecxz
rorb
and
ss
rorb
add
jl
sbbl
jmp
add
push
in
addb
popa
add
push
mov
inc
push
inc
push
mov
mulb
or
pusha
dec
xchg
loopne
push
andl
adc
arpl
lcall
enter
xor
mov
mov
inc
test
mov
dec
test
popa
adc
nop
add
ss
bound
ret
xchg
pusha
adc
pop
call
cmp
lea
and
fwait
dec
pop
dec
jbe
shrb
adc
std
push
jl
popa
push
scas
push
mov
and
fildll
pusha
and
aaa
mov
dec
add
adc
lea
push
shll
sbb
add
add
push
xchg
cmp
dec
push
cmp
xor
or
add
loopne
push
dec
or
lea
loopne
push
jp
add
xor
add
shll
pushf
nop
popa
add
adc
movsb
les
addb
call
xchg
pusha
out
enter
jae
aaa
rcrl
jle
xor
jl
pop
sub
add
popa
and
sbb
xor
arpl
repnz
jne
shrl
outsl
or
mov
int
jo
or
jle
add
and
push
mov
add
sbb
and
loopne
je
std
outsl
push
sub
loop
clc
scas
les
cmp
pusha
jl
cmp
cmp
mov
pop
mov
add
sbb
insl
dec
cmpl
push
cmpsl
mov
push
in
sti
rorb
cmp
ljmp
ljmp
loope
xor
or
ja
fwait
add
adc
jne
popa
sbb
jg
add
add
push
mov
mov
add
jno
jmp
addl
adc
mov
loopne
pop
xorb
mov
inc
mov
imul
cwtl
das
push
pop
jnp
shlb
pop
je
popf
inc
clc
dec
jecxz
stc
addb
cmp
fwait
js
movsb
enter
pusha
add
or
and
mov
bound
mov
sbb
mov
push
lea
or
mov
jecxz
dec
add
or
xor
jl
jmp
decl
pusha
adc
push
jecxz
sbb
dec
pop
std
cmpl
and
push
inc
mov
sub
cmp
test
jl
add
add
xchg
pop
mov
loope
jecxz
push
push
popl
and
outsb
cmp
adc
sbb
add
jbe
or
pushf
popa
ss
pop
pop
pop
shrl
ds
ret
scas
call
cmp
inc
and
mov
sbb
cwtl
out
pusha
insl
cmpb
xor
pusha
sub
push
call
cli
or
push
jmp
jo
pusha
or
adc
add
mov
std
mov
inc
imul
sbbb
inc
fwait
sub
and
orb
add
in
inc
repnz
cmp
mov
add
inc
adc
outsb
add
repz
ljmp
inc
sti
mov
insb
call
add
jmp
dec
add
dec
xchg
push
out
shlb
arpl
push
inc
xchg
fisubs
xchg
xchg
repnz
pop
push
or
lock
add
rorb
cmp
loop
aaa
orb
sbb
cmpl
pop
bound
es
sub
jl
call
or
add
cmp
in
movsb
push
outsb
inc
jmp
sub
pop
and
ret
out
rcl
shll
inc
in
out
ret
push
mov
cs
call
add
clc
loopne
std
mov
mov
jns
and
imul
and
jle
adc
or
rolb
in
pop
dec
pop
aam
test
mov
add
or
jle
cmp
insl
jl
add
xor
mov
cltd
mov
mov
inc
test
xorb
mov
shlb
cmc
out
xchg
sub
jno
cmpsb
int
scas
clc
mov
lock
rclb
lahf
call
push
mov
mov
jp
stc
mov
mov
mov
cmc
add
add
and
adcb
lret
lods
mov
cmp
lcall
mov
inc
cmpl
push
jb
idivl
adc
cmp
pusha
rcpps
test
sub
jo
jo
gs
or
jle
inc
pop
mov
cli
in
xchg
xchg
cmc
fwait
call
loopne
fdivs
add
in
jmp
mov
js
push
test
stos
and
shlb
mov
jo
jmp
dec
adc
and
mov
ret
mov
iret
dec
out
xorl
gs
ja
das
adc
add
add
push
push
ds
lods
xor
outsb
mov
and
mov
cmpsb
push
xor
hlt
pusha
adc
lahf
mov
loopne
pop
push
xor
loope
enter
dec
cs
push
inc
mov
mov
icebp
stos
movsb
and
cmpsl
call
or
push
jl
and
enter
add
testb
popf
xchg
cld
inc
or
pop
adc
sub
push
push
lcall
xor
xor
test
mov
xor
sub
sahf
loop
pop
sar
ja
ret
scas
add
or
or
xchg
cwtl
add
xchg
jb
clc
pop
push
add
ficompl
add
sbb
pop
mov
sbb
sbb
cmp
inc
inc
cmpsb
push
mov
or
xor
xchg
add
pop
mov
add
orb
into
call
and
movsb
movsl
dec
pop
rorb
icebp
jl
xor
cmp
test
jb
lea
mov
shll
sbb
inc
testb
sbb
jb
in
mov
mov
adc
jb
clc
pop
sub
add
aaa
cld
jle
clc
rolb
loope
or
cmpsb
adc
in
lock
out
jno
call
sbb
lcall
lock
mov
xor
push
loope
mov
jg
stos
sub
cld
and
lods
mov
xor
lock
test
mov
dec
pop
pusha
mov
repz
cmpsb
mov
jbe
jmp
pop
test
ljmp
or
repnz
ss
loop
cmp
jg
and
jb
scas
jne
lock
push
xor
mov
push
pop
mov
mov
sbb
sahf
push
lret
mov
and
stos
jg
add
icebp
adc
sub
dec
loope
xor
inc
jle
incb
je
sbb
lods
push
jo
dec
daa
inc
mov
jge
adc
pop
shll
out
loopne
xor
inc
ja
aaa
adc
fistpl
mull
pop
push
add
jmp
cmp
jmp
andl
xor
adc
cwtl
mov
movsb
adc
adc
adc
mov
aaa
and
or
add
std
je
inc
test
icebp
mov
mov
dec
xor
jmp
or
or
outsl
scas
push
jmp
cmp
pusha
inc
or
jmp
push
std
xor
xchg
dec
out
enter
and
sahf
cmp
or
das
jmp
cs
sahf
xchg
push
or
add
mov
xchg
inc
cmp
xchg
std
xchg
inc
pop
leave
cmp
data16
pop
shll
xchg
movsb
mov
mov
rcll
sub
sarl
dec
decl
lahf
add
and
mov
call
jo
mov
push
add
xor
xchg
sbb
push
in
add
cwtl
xchg
dec
xor
int
cmpsb
or
cmp
loopne
sub
movl
loopne
push
lcall
mov
dec
andb
ljmp
lods
jo
repz
add
pusha
inc
mov
fimull
push
in
loopne
add
mov
cwtl
pop
pop
mov
jo
jno
pop
and
cmpb
int3
add
ret
out
push
add
inc
mov
mov
call
push
jno
ret
loop
scas
hlt
imul
loopne
ljmp
xor
dec
test
dec
mov
jl
test
pop
popa
add
mov
pop
dec
call
push
push
mov
das
mov
adcb
mov
add
pop
inc
loope
push
jno
dec
or
cli
or
inc
movsb
fs
jmp
mov
jo
add
adc
cmp
js
fisubrl
sbb
sbb
jb
testb
adc
xor
sbb
push
inc
sar
lds
adc
icebp
add
jo
pusha
lret
inc
add
inc
dec
mov
dec
inc
push
add
cmp
adc
cli
sub
mov
adcl
cmp
add
jo
mov
outsl
test
jge
mov
adc
movsl
mov
adc
sar
sub
and
hlt
lock
bound
mov
lock
push
dec
in
push
aad
jge
xchg
adc
push
cld
loopne
ficoms
sbb
pop
sub
in
jg
or
add
enter
mov
adc
loopne
cld
shlb
push
push
jo
jno
stos
fildll
repz
sbb
jae
push
insb
std
pop
adc
and
addb
ja
icebp
fldl
jge
cmp
loope
mov
push
mov
add
incl
mov
je
adc
inc
roll
push
call
adc
push
cld
int
cmp
rolb
rolb
pop
and
insb
pusha
push
test
stos
inc
and
ljmp
das
pop
movsb
out
pop
mov
jb
add
jge
mov
xchg
sub
mov
adc
rol
inc
les
repnz
jo
in
mov
jbe
xor
add
call
mov
testb
push
pop
cmp
rolb
rclb
mov
ss
lcall
mov
call
and
add
xchg
loop
xor
les
xor
ja
mov
movups
test
xchg
lods
xor
push
xor
into
add
cwtl
xchg
push
es
inc
inc
mov
fdivr
add
jne
lods
scas
add
mov
mov
shlb
mov
xchg
mov
add
xor
xchg
cmp
jb
inc
cld
out
pop
les
jb
inc
or
addl
cmpsl
lea
push
test
mov
and
add
xchg
xor
sub
jbe
lods
andb
xchg
push
sbb
inc
dec
cmp
inc
and
mov
jp
popa
add
mov
fisubrl
inc
sbb
bound
inc
dec
sti
push
rcr
shlb
add
test
clc
dec
in
rolb
add
push
jo
das
add
fimull
mov
sub
jbe
xor
dec
movb
je
out
data16
mov
jne
push
pusha
inc
mov
call
cmp
fsubs
scas
push
pop
in
pop
sub
push
inc
sbb
push
aaa
jno
cli
scas
cld
into
rclb
pushf
lcall
js
sbb
cmp
loopne
test
jnp
pusha
xchg
push
inc
xor
imul
adc
mov
je
push
loopne
sub
pusha
jle
mov
in
popf
cmp
call
sbb
add
shrb
jo
push
xchg
pop
mov
push
inc
add
cld
add
and
rclb
jbe
in
fidivrl
mov
adc
add
inc
xor
sbb
cld
out
sub
ret
inc
je
call
pop
cld
cli
shlb
push
shrb
push
sub
adc
das
rclb
adc
sub
out
aas
sbb
or
and
mov
pop
and
ret
pop
mov
inc
or
lds
shrl
mov
mov
mov
outsl
adc
shlb
sbb
rol
outsl
pop
mov
or
push
push
mov
push
es
movl
cmp
push
fsubrs
pop
mov
or
jae
or
sbbl
xchg
xchg
add
xor
data16
sub
pop
pop
scas
incl
cs
xor
cmpps
cmp
mov
lods
icebp
add
popl
sbb
sub
mov
adc
push
call
filds
dec
jl
outsl
xchg
pop
inc
rorb
shll
icebp
in
lock
pop
inc
in
push
push
stos
fcoms
insb
cltd
cmpb
sarb
sub
sbb
in
push
sub
clc
jp
icebp
mov
jbe
aam
cld
add
loopne
lcall
jle
mov
pop
cmp
test
mov
mul
sbb
jecxz
test
push
xchg
mov
adc
add
fs
push
and
aam
nop
pusha
xor
push
mov
in
out
jl
sub
pop
mov
push
push
xchg
loopne
dec
add
cmp
adc
aam
and
aam
add
movsb
cwtl
push
vmread
scas
cmp
and
sub
stc
call
mov
ret
aam
add
mov
add
xor
popa
popa
and
hlt
lcall
adc
loop
lea
cli
mov
and
push
loopne
decl
rclb
iret
loopne
loopne
add
je
and
mov
jle
cmp
aad
jb
popa
push
and
out
adc
or
loopne
loopne
and
pop
mov
mov
sbbb
movb
bound
mov
loopne
inc
mov
addr16
inc
add
in
xchg
sbb
test
push
vcmpsd
cmp
jl
lods
mov
lock
test
je
test
add
dec
sbb
and
cmpsb
test
and
push
ljmp
push
push
sbb
sub
xchg
xchg
fmul
ret
fiaddl
je
push
xchg
es
xorb
push
dec
mov
xlat
adc
fiadds
inc
ret
cmp
lret
adcb
loopne
loope
adc
int3
cmp
fbstp
ds
popa
pusha
sub
jl
or
jne
mov
mov
mov
adc
sbbb
lock
dec
sbb
ret
adc
adc
cmp
add
cmp
ja
test
insb
loopne
or
decl
inc
ss
ss
nop
sub
xchg
mov
add
push
or
push
xorb
cltd
push
mov
adc
loopne
loopne
test
ds
loopne
push
test
sbb
jg
add
mov
push
sub
scas
pop
sub
sbb
mov
inc
add
test
jae
outsl
push
call
mov
lret
pusha
pop
cmpsl
mov
mov
adc
sub
shl
sar
mov
pusha
dec
push
and
movsb
loopne
je
stos
lods
fcomip
jae
nop
cmp
pusha
pop
loopne
push
inc
add
xchg
ds
leave
call
push
add
pop
and
push
in
sar
mulb
mov
add
mov
idivb
or
sub
or
shrb
outsl
shr
iret
loop
pop
and
je
popa
inc
lock
lock
mov
mov
xchg
sub
and
mov
loope
bound
pusha
adc
outsb
test
ljmp
and
lock
js
jecxz
loope
movsb
xlat
loopne
add
loopne
cmp
mov
dec
add
push
dec
fimull
mov
pusha
push
in
loope
push
in
pop
std
add
ret
push
loopne
cs
in
ss
xor
xor
push
push
and
out
mov
pusha
and
aam
and
cmp
sub
mov
lods
pusha
dec
test
loopne
jle
out
jle
mov
scas
les
or
dec
fcompl
adc
mov
adc
lcall
call
sbb
sub
push
lock
sbb
dec
push
mov
decl
loopne
inc
add
ss
and
xor
mov
sub
hlt
enter
les
mov
mov
adc
pushl
aam
dec
and
pop
push
add
adc
jbe
sbb
cmp
dec
shlb
lods
add
push
dec
inc
jbe
dec
inc
inc
push
jle
sub
fisubs
outsb
shlb
push
cli
pop
cmpsb
and
add
xor
call
mov
sbb
or
sbb
jo
pop
shrb
loop
jnp
lret
or
insb
scas
jo
out
inc
mov
incl
dec
je
cmp
mov
add
dec
repz
adc
lea
leave
mov
scas
daa
jb
sub
cmc
xor
clc
sub
push
mov
mov
or
jne
fmulp
add
jo
and
xchg
outsb
add
adc
mov
or
inc
loopne
aaa
and
mov
or
test
hlt
scas
or
push
sub
or
pop
shl
xchg
push
or
imul
dec
mov
push
ljmp
in
mov
cmp
add
movsl
and
cmpsb
push
pop
fsubrs
sti
mov
out
push
add
mov
adc
pop
lock
ljmp
cld
mov
movb
jg
and
enter
jo
push
jo
add
add
jmp
inc
add
mov
out
xor
dec
dec
dec
push
push
sbb
sub
lods
and
jo
test
adc
movsb
mov
jg
mov
push
push
call
or
inc
call
test
jo
mov
rolb
jge
nop
icebp
arpl
jo
push
movsb
mov
and
jge
sub
in
mov
push
push
inc
mov
mov
mov
xchg
data16
cmpb
daa
jg
xchg
clc
jg
pop
add
push
call
push
pop
fldpi
or
lcall
loop
cs
xchg
or
incb
mov
sbb
sbb
xchg
bound
mov
ficoml
mov
add
lock
repz
xor
jge
add
xchg
add
dec
jl
or
xchg
xor
movb
nop
mov
mov
imul
jle
jb
sbbb
add
data16
mov
scas
push
mov
ja
shrb
add
adc
stos
sbb
lock
lret
push
jl
adc
lods
or
cmp
nop
aam
filds
jo
and
and
and
jo
xor
ljmp
push
lock
cmp
inc
jo
sbb
xor
repnz
js
ffree
mov
inc
jg
pop
hlt
and
std
mov
shlb
nop
dec
int
mov
push
pop
adc
dec
inc
pop
and
pop
lock
scas
and
pop
xor
pop
stos
jo
add
pop
add
mov
pop
and
and
jp
scas
test
ljmp
adc
and
enter
push
mov
jbe
call
inc
push
call
xchg
mov
inc
sti
stos
push
aas
pop
add
test
push
ficoms
je
mov
es
fisttpll
jbe
movsb
adc
add
sub
xor
inc
add
adc
jl
lock
mov
push
bound
scas
xor
mov
test
lock
test
idiv
ljmp
andb
jmp
cmp
add
inc
pop
push
push
inc
loope
add
les
rolb
push
add
push
mov
xor
pop
pop
adcb
inc
sti
pop
xchg
adcb
adc
add
sbb
nop
jge
test
sbb
mov
loop
mov
out
or
jo
jg
add
mov
jno
inc
test
test
repnz
test
and
pop
pop
sub
mov
cli
scas
dec
mov
inc
sbb
adc
pop
adc
testb
push
outsl
add
or
sbb
jg
add
lock
je
call
xchg
fadds
mov
sarb
adc
inc
mov
xor
adcl
ss
xchg
mov
push
jo
decl
fcoms
add
jo
movsb
icebp
pushf
xor
fildll
in
add
push
xchg
pop
jae
or
mov
push
push
xor
xor
cld
aaa
pop
pusha
sbb
outsb
sar
mov
sbb
add
sub
aaa
fmuls
add
daa
test
call
adc
ret
mov
add
push
adcl
stos
out
or
test
je
mov
jbe
test
ret
ljmp
rorl
mov
dec
mov
mov
int
jo
cmpb
push
mov
shl
or
int
sub
stos
es
jb
ss
es
mov
and
inc
or
jne
jge
sar
sbb
and
dec
and
push
pop
mov
loopne
rorb
jge
adc
lods
add
adc
call
xchg
pop
or
js
mov
xchg
or
mov
mov
aam
fsubp
mov
add
hlt
testb
loop
fldl
fs
or
clc
sbb
jo
test
pop
and
mov
lds
or
or
pop
mov
pusha
in
je
inc
das
add
inc
call
dec
in
ss
pusha
ret
push
add
jne
xor
fwait
mov
or
adc
call
xor
or
jmp
sbb
cld
add
bnd
xchg
ss
pop
add
int
and
jecxz
ds
lock
mov
xor
push
pop
and
fidivs
adc
std
call
dec
inc
mov
call
jo
jl
nop
pusha
jg
loopne
and
or
pop
push
icebp
ret
adc
sbb
add
inc
xor
mov
faddl
and
adc
cltd
push
repz
push
or
and
add
or
push
push
mov
cli
adc
rolb
lock
mov
adc
pusha
inc
fs
aad
test
movsb
add
aam
cld
mov
or
sbb
xlat
stos
lea
push
push
inc
leave
push
outsb
sub
stc
add
sti
push
cwtl
pop
cld
or
fimull
push
mov
push
dec
popl
repz
xor
pop
or
scas
in
ljmp
sbb
ljmp
mov
or
cmc
jbe
fsubl
add
pusha
les
nop
std
int3
mov
adc
dec
in
ljmp
add
outsl
sbb
xor
mov
nop
pop
clc
test
pop
insb
pop
and
lods
or
pop
or
mov
jmp
and
push
push
and
adc
adc
mov
cld
ret
inc
xor
aas
faddl
lods
cmp
imul
adc
mov
mov
mov
push
xlat
loopne
out
pop
mov
push
shrl
dec
ss
mov
sub
jmp
or
xchg
andb
push
and
inc
test
aam
call
je
mov
test
enter
les
mov
ret
dec
pusha
add
cmc
addl
scas
addb
inc
push
cld
aam
ret
dec
rcl
call
xor
insb
xchg
dec
push
sbbb
or
jge
insb
adcl
sub
adcl
inc
outsl
xchg
xchg
and
cwtl
sbbb
sub
jecxz
inc
or
cmp
mov
xchg
andl
stc
sub
jo
mov
mov
pop
inc
andb
push
adcb
filds
lods
or
mov
ret
and
rolb
and
cmc
jg
sbb
jge
pusha
jne
aas
rolb
dec
sbb
lods
jb
shlb
gs
jg
fs
nop
rolb
shlb
pop
xchg
outsb
push
or
pop
push
add
in
cmpl
ja
jmp
lods
xor
scas
test
inc
mov
loop
lcall
sbb
or
push
icebp
add
in
bound
insb
cmp
adc
or
mov
test
mov
adc
pop
shrl
andl
movsl
sub
xchg
mov
test
std
addl
daa
outsb
adc
es
lods
ja
aaa
mov
push
jae
clc
push
mov
into
xchg
es
rorb
ret
cmpsb
xchg
cmpb
add
popa
leave
pop
outsb
cli
pop
inc
xchg
push
add
push
pop
and
js
mov
pop
pusha
add
jne
repnz
fs
test
jae
pop
mov
pop
cli
push
jg
jl
jmp
cmp
rolb
push
pop
int
test
loop
lock
add
mov
inc
dec
es
adc
xor
adc
arpl
gs
add
add
outsb
jg
loope
or
cmpsb
xchg
xor
add
bound
sbb
cmp
inc
mov
scas
xchg
loop
rol
scas
clc
sbb
cmp
sub
rclb
fildl
mov
pop
or
add
dec
jbe
ret
mov
or
fildl
sbb
mov
pop
jo
pushl
cmp
dec
xchg
shl
sbb
jmp
imul
push
jmp
dec
or
push
mov
popa
push
shr
or
outsl
dec
and
dec
jl
xor
stos
pop
insl
push
push
push
in
hlt
fdivrp
dec
adc
push
loope
xchg
loopne
dec
cld
mov
dec
outsb
pop
sbb
addr16
mov
into
stos
mov
add
and
imul
sti
and
data16
dec
fists
cmp
push
rcr
mov
jmp
into
or
loopne
mov
push
or
jl
loopne
adc
jb
out
mov
or
cmc
pushw
call
ja
mov
loopne
outsb
rcrb
leave
add
ss
jle
jle
jl
add
add
test
in
fwait
jmp
jle
stos
adc
call
adc
mov
inc
sarl
bound
adc
jge
add
call
pop
inc
daa
inc
adc
dec
add
add
add
fsts
add
jg
dec
push
inc
mov
push
or
pop
cmp
dec
sub
or
xorb
xorb
sbb
pop
test
sbb
push
xor
cltd
push
push
sbb
xor
sarb
pop
mov
pop
loop
ret
loopne
inc
or
mov
sbb
rclb
ljmp
pusha
jp
pop
or
cmc
jecxz
popa
outsl
push
jmp
dec
sub
ds
and
xor
push
and
loope
sbb
adc
clc
mov
inc
cli
pop
cmpsb
adc
call
movsb
mov
pusha
pop
stos
add
mov
adc
daa
fsubrs
pushf
bound
out
push
push
adc
mov
mov
add
xchg
pop
xchg
js
call
mov
outsb
adcb
fstpl
std
pop
pop
or
mov
and
leave
adc
mov
xchg
mov
loopne
lods
or
push
push
scas
loop
push
subb
pop
push
mov
f2xm1
loopne
pusha
scas
or
and
jl
fs
jbe
fdiv
loope
jmp
pusha
lret
fidivrl
test
hlt
dec
lods
or
andl
lds
dec
add
dec
jge
pop
push
push
jb
push
dec
push
push
inc
mov
ljmp
incl
ss
cmp
pop
mov
push
adc
inc
mov
loopne
mov
je,pt
sub
loopne
and
repz
clc
test
sbb
adc
int3
sbb
mov
daa
push
jmp
mov
les
sub
adc
mov
push
hlt
lock
jle
je
loope
pusha
dec
add
sub
cld
mov
lcall
fisttpl
lock
jl
pop
mov
add
popa
xchg
dec
pusha
dec
hlt
adc
add
inc
aam
loopne
js
inc
psadbw
daa
pushl
adc
inc
ret
ja
or
std
inc
insb
jecxz
addb
push
pop
loopne
jecxz
lock
adc
loopne
inc
outsl
lea
push
fmull
xor
add
test
fldt
test
fs
xor
dec
xchg
add
lock
call
call
daa
add
dec
std
add
pop
loopne
push
mov
lock
cmp
cld
les
adc
mov
and
js
pop
lods
inc
xorb
mov
pop
sbb
xor
push
nop
lock
xchg
subb
rol
rcl
adc
dec
rcrl
and
sbbb
cmp
jo
pop
orb
lock
incl
cmp
sbb
lock
or
add
sti
inc
add
mov
add
insb
pop
adc
nop
clc
aam
push
or
in
loop
jg
fdivr
sub
ja
or
mov
adcl
pop
lock
test
ss
push
mov
dec
add
cmp
mov
test
mov
outsb
js
and
mov
je
cmp
mov
mov
negb
jb
test
jbe
sti
lcall
pop
out
addl
je
jl
mov
mov
mov
adc
push
enter
imul
add
push
sar
mov
aam
dec
push
repnz
or
push
push
mov
and
add
add
lock
dec
lods
insl
std
or
aaa
test
add
mov
lcall
insb
add
xor
adc
pop
push
adc
es
test
cld
or
mov
out
push
into
clc
mov
xor
push
ret
fwait
mov
repz
cmp
loope
mov
jo
add
push
push
lret
and
jo
adc
inc
xor
jp
fnstenv
test
rolb
push
jne
ret
testb
sub
shlb
lcall
mov
add
pop
or
psubusb
mov
mov
xchg
sub
clc
jo
sbb
fisubs
mov
dec
test
sub
mov
test
pop
int3
jmp
mov
xor
mov
dec
add
cmp
lock
int3
add
mov
mov
add
pop
ret
and
dec
push
or
insl
jg
xor
adc
or
xor
in
mov
mov
sub
cmp
jecxz
out
pop
test
ja
adc
adc
lea
mov
or
loopne
cmp
add
jno
call
jp
lcall
out
loopne
data16
jb
mov
mov
push
clc
jg
ficomps
pop
xor
imul
xor
sub
sbb
jne
jo
jmp
jno
inc
ss
aad
js
dec
sub
imul
push
lods
inc
mov
sbb
mov
mov
mov
ljmp
inc
mov
jo
icebp
movsb
call
repnz
push
or
pushf
sbb
pusha
or
jl
lods
jbe
mov
pop
xchg
add
or
hlt
push
and
mov
movb
lea
mov
adcb
push
cmpsb
ljmp
ljmp
call
inc
decl
icebp
inc
sub
or
out
mov
subb
cwtl
xor
and
jo
jmp
in
call
aam
dec
mov
mov
adc
pop
dec
push
xchg
jle
mov
xchg
adc
mov
adc
outsl
or
je
mov
pushl
xor
xor
add
sbb
mov
xor
rcrb
scas
andb
mov
je
push
call
test
and
call
cmp
fiadds
clc
jmp
xor
jbe
pushf
out
lock
push
data16
mov
cmp
lea
loop
xchg
push
or
test
orb
push
into
aaa
adc
ret
shr
ds
dec
and
outsb
shl
lret
xor
inc
icebp
sub
outsb
mov
xor
push
add
lods
mov
push
add
les
lock
or
push
mov
movsb
jmp
mov
jg
jne
xor
and
add
pop
xchg
cld
loope
je
and
jmp
push
pop
lcall
shlb
adc
or
aam
stos
add
incb
jnp
inc
decb
fstps
xor
int3
inc
mov
jb
shll
sub
movsl
jg
je
inc
adcb
inc
mov
push
cld
scas
add
fadds
clc
adc
je
xor
xor
xor
lret
and
call
push
int3
data16
and
ss
jp
mov
pop
pop
and
fwait
xchg
mov
lock
std
or
aas
pop
pop
xor
sub
dec
sbb
xor
aad
enter
pop
sbb
adc
aam
jmp
sbb
or
push
push
movsl
icebp
xchg
add
sub
fidivs
adc
pop
aaa
dec
adc
cmp
out
and
js
xor
xor
push
cmp
aam
or
mov
cwtl
repz
test
rorb
or
ror
jmp
mov
cmpsb
clc
inc
mov
mov
je
jg
popa
daa
sbb
sahf
jo
pop
push
hlt
add
cmpb
cmp
movsl
and
jo
mov
fidivrl
rclb
je
and
sub
test
lock
adc
loope
dec
sbb
jo
jmp
mov
xor
push
jl
sarb
jno
cmp
jo
lret
fmuls
push
xor
incb
add
nop
sub
cld
mov
sbb
add
push
je
scas
movb
das
mov
push
xchg
or
push
and
xchg
clc
mov
or
ljmp
adc
xor
inc
push
push
into
and
mov
push
mov
rcrb
xor
mov
lcall
stos
xor
push
mov
test
icebp
aaa
lods
mov
mov
inc
mov
pop
cmp
adc
nopl
into
pusha
mov
loop
adc
jne
lcall
test
xchg
and
xchg
cli
push
incb
fdivr
push
push
mov
push
xchg
rclb
push
pop
dec
sub
dec
sahf
adc
push
jo
xor
cmpsb
sub
mov
sub
int
push
dec
add
test
mov
lea
mov
lret
sarb
lock
inc
or
in
and
lret
int
add
mov
or
add
or
mov
adc
pop
cltd
nop
or
cwtl
jbe
movsl
shrb
mov
js
add
push
lods
stc
push
and
shll
mov
aaa
popa
xor
fsubrs
mov
add
inc
push
scas
cmp
pop
outsl
xor
leave
cli
les
fdivs
stos
adc
add
mov
and
add
xor
and
or
jno
jbe
loopne
insb
push
jae
sub
dec
xor
lods
in
adc
push
add
shrl
stos
push
std
push
cmp
call
adc
lret
lcall
fildl
mov
and
adc
add
lock
dec
push
pop
leave
cmp
adc
in
push
adc
sub
jg
pusha
push
mov
popf
add
cmpsl
orb
cmpsb
add
fiaddl
pop
pop
jns
and
aaa
mov
adcl
in
test
mov
and
or
loope
fstpt
jb
rclb
add
sbb
cmp
push
xchg
shlb
mov
test
dec
xor
mov
adcb
push
xchg
mov
jae
lds
push
push
testb
mov
jg
cmp
mov
and
jae
in
mov
mov
shrl
sbb
fisubs
inc
cwtl
pop
add
les
rorb
rorb
dec
sbb
sbb
sbb
pop
sbb
jge
pop
ret
mov
out
cmp
ret
push
rolb
lock
inc
and
add
jmp
add
rolb
xchg
fistpl
xor
rcrl
mov
push
cld
add
mulb
inc
test
jl
hlt
xchg
add
insb
push
fisttpll
ret
add
orb
or
jecxz
and
test
or
and
xchg
xchg
lret
je
cmp
jmp
outsb
inc
fisttps
fsubrs
push
and
pop
test
enter
mov
lahf
call
mov
mov
sub
rcll
call
ds
arpl
or
pop
or
cmp
fadds
add
jnp
shlb
rorb
mov
out
mov
pop
orb
sar
or
int
aas
push
jb
jp
test
loop
rclb
mov
push
pop
rorb
cmpsb
xor
pop
test
dec
jbe
sahf
or
lcall
roll
mov
pop
test
ja
loope
loopne
int3
mov
xor
xor
daa
jg
push
add
lods
jo
std
ljmp
mov
pop
pusha
inc
scas
loopne
pusha
sub
inc
pop
add
mov
outsb
inc
push
pop
and
mov
movsb
pop
add
loopne
sar
mov
cmpsl
pop
mov
or
xor
jnp
outsb
outsb
adc
pushf
adc
and
sub
call
pop
push
lcall
pop
sarb
pusha
orb
test
pop
cmp
cli
sbb
push
push
dec
dec
ljmp
iret
lcall
xchg
loope
xchg
ss
imul
add
ret
in
add
and
pop
std
pusha
sub
pop
or
xor
test
jne
roll
andb
bound
mov
dec
cltd
inc
rcl
insb
sbb
rol
test
add
outsb
push
inc
test
repnz
mov
push
scas
lods
pop
int
or
jle
sbb
hlt
cltd
add
pop
push
cmp
or
loopne
cmp
cmpl
adc
xchg
aaa
and
push
xor
jmp
cli
cs
push
jp
loop
adc
gs
mov
test
and
fs
adc
and
jmp
ljmp
pusha
dec
sbb
push
es
loopne
out
mov
inc
fisttpl
pop
mov
inc
cmp
pusha
pop
jo
inc
loop
inc
call
inc
jl
loopne
cli
add
inc
cld
into
cvttps2pi
test
xor
aaa
out
bound
fwait
popa
cmp
jae
rclb
cmpsb
fistpl
cmp
cmp
fisubrl
and
enter
adc
adc
xor
scas
adc
pusha
push
pusha
or
pop
mov
xor
outsb
es
scas
xor
daa
cmp
pop
mov
ret
or
popa
inc
loope
pushf
ss
ljmp
pop
or
adc
test
ss
lock
outsl
clc
xchg
add
loopne
pushf
aam
call
add
pop
pushf
repz
adc
mov
vpmacsdqh
jb
sbb
loop
outsb
sub
loopne
fadds
subb
sbb
insb
push
jbe
in
pop
lock
add
inc
adc
vmwrite
pusha
lahf
ret
shl
pop
fsubl
loope
pop
mov
mov
adc
loopne
inc
and
arpl
push
stos
sbb
mov
fdiv
inc
and
in
add
inc
jp
cmp
xchg
loopne
ret
shr
ret
rolb
push
loope
mov
cli
xchg
loopne
add
jmp
and
call
mov
and
decl
int3
add
test
mov
js
mov
cmpb
adc
ret
add
xor
pop
sbb
push
testb
or
add
lret
add
inc
scas
add
push
jge
jo
add
or
ret
xchg
or
push
mov
cmp
shrb
shlb
mov
push
mov
sbb
cwtl
xor
inc
pop
cli
add
clc
push
sub
jg
in
add
daa
notl
cmp
add
sar
mov
sub
push
xor
aaa
or
xor
cs
inc
add
outsb
mov
jo
add
push
daa
add
xor
ja
imul
lods
and
pop
lret
dec
cmc
add
pop
insl
jmp
push
mov
push
mov
sub
es
pushl
addb
jo
dec
and
lods
call
sti
mov
ja
aam
mov
add
std
mov
pop
push
out
jno
push
add
push
jb
cmp
in
mov
pop
or
rolb
nop
icebp
stos
add
out
inc
add
int3
xor
jp
in
push
int3
call
std
or
xor
leave
jl
bound
cmp
push
adc
dec
icebp
mov
call
les
pop
and
addr16
out
int3
sbb
xor
pop
sub
outsb
sub
push
sbb
lret
jbe
push
js
jno
shrb
xorb
and
rolb
mov
sbb
pop
mov
jb
cmpsl
lret
std
pop
scas
push
leave
jo
jno
in
test
or
sub
pop
mov
sbb
push
and
popa
shl
mov
push
jo
pop
mov
push
pop
mov
inc
inc
jo
sbb
ficoml
mov
lock
dec
adc
sub
mov
or
jo
push
adc
inc
inc
test
mov
cld
inc
call
jl
btr
inc
jmp
adcl
lock
rcll
mov
les
repz
xor
adc
cld
adc
nop
mov
scas
stos
and
mov
jne
loopne
mov
push
arpl
pop
divb
lock
dec
jle
pop
push
pushf
xor
push
arpl
and
sbb
pop
mov
fldt
test
and
adc
adc
icebp
jo
aam
jg
xchg
data16
jno
cmp
jl
and
inc
pop
fs
ja
jmp
xor
mov
or
push
outsl
adc
and
and
jo
clc
and
lods
add
ret
clc
das
pop
jecxz
adc
cmp
adc
out
aam
nop
push
repnz
orb
adc
jg
jo
test
lahf
jo
adc
cli
xor
xor
movsb
cmc
and
ss
ja
xor
jl
daa
mov
cmp
lock
adc
mov
pop
cmp
mov
xchg
jo
inc
mov
orl
pop
add
xchg
lock
test
jge
mov
lock
xor
lret
call
inc
mov
add
mov
subl
inc
clc
dec
push
cwtl
mov
lock
notl
call
xor
jp
inc
mov
sbb
or
cmp
push
cmpsl
mov
xor
xor
xchg
orb
mov
cmpb
sub
lock
es
or
dec
call
jmp
fs
mov
aaa
cmp
icebp
mov
scas
mov
iret
xor
lock
add
mov
adc
mov
xchg
lret
pop
push
mov
push
jo
and
ja
pop
and
arpl
add
lock
lock
cmpb
add
jle
incl
ss
push
test
jg
push
lea
mov
xchg
cli
add
icebp
mov
imul
push
xor
xor
xor
ljmp
cld
xor
adc
enter
out
or
adc
adc
out
roll
ljmp
mov
push
push
cwtl
mov
mov
loope
sbb
or
xor
aaa
xor
xor
sub
mov
sub
dec
shl
lock
shl
daa
jo
sub
jg
jo
gs
jmp
lock
cmp
mov
push
push
cli
and
adc
sub
aad
in
push
jbe
pop
push
jp
push
dec
js
sub
sub
fbstp
fwait
or
sub
xor
and
addb
mov
pushl
jns
test
dec
int3
add
mov
pop
ljmp
add
icebp
mov
cmpsl
dec
xor
into
dec
pushf
ljmp
cmp
fildl
cmp
insb
mov
call
insl
xor
and
push
mov
mov
cmp
divb
pop
fucomip
push
mov
lds
gs
or
push
xor
and
push
stc
and
test
mov
lock
stos
outsb
lock
or
addb
add
outsl
clc
test
mov
cmp
cmp
in
loopne
push
sub
aad
pop
pushl
push
aas
push
mov
sbb
fwait
mov
sub
xor
repz
stos
push
xor
and
call
jmp
lock
and
pop
sbb
pop
pmuludq
or
dec
sbb
into
pusha
xor
mov
mov
lock
adc
sub
jae
xor
fistpl
mov
inc
loop
pop
addb
add
bnd
inc
or
add
jg
loop
ljmp
enter
cmp
fdivs
adc
popa
jnp
lock
les
mov
adc
test
adc
xor
incl
lds
je
lods
lea
fdivrl
xor
int
sub
cmc
inc
mov
add
cwtl
adc
add
cmp
inc
je
pop
dec
fucomi
xchg
gs
subb
jecxz
je
in
jmp
cltd
stos
repnz
jg
sbb
fdivs
shll
push
adc
and
push
dec
test
mov
vcomiss
lea
jbe
pop
call
popa
xchg
test
pop
and
testb
hlt
arpl
arpl
inc
jo
cmp
adc
test
mov
inc
mull
shrb
dec
mov
les
insb
xchg
inc
and
mull
pop
cmp
cld
push
xor
xor
add
je
aam
sbb
ret
adc
bound
loope
int3
and
arpl
mov
gs
ds
add
mov
enter
test
dec
test
mov
sahf
adc
add
or
push
lcall
jne
rolb
xor
mov
insb
fdivrp
push
or
lds
outsl
push
add
inc
pop
rcl
pop
mov
add
and
and
xor
or
add
mov
imul
enter
mov
add
movsb
je
lcall
je
and
or
pushf
gs
add
push
jmp
push
push
loop
inc
add
enter
outsl
jg
jbe
add
or
cwtl
in
pop
add
adcb
sbb
add
jne
add
mov
adc
ret
nop
cmp
lret
or
movsb
pop
clc
xchg
add
sahf
lcall
sarb
push
push
jnp
subb
mov
and
push
or
std
sbb
rorb
pop
dec
pop
xor
jecxz
inc
repz
adc
or
pop
sbbl
pop
inc
push
xchg
ret
cmp
jb
andb
add
pop
xchg
inc
ja
mov
dec
nop
dec
add
cmp
add
jmp
enter
and
sbb
push
xor
aam
testb
fmuls
imulb
adc
push
call
lret
sbbb
sbbl
std
sub
sti
je
mov
xor
cmp
aaa
mov
repnz
push
add
cmp
add
and
jmp
fiadds
inc
sub
or
testl
inc
je
je
xor
jnp
mov
sti
add
add
mov
ja
out
push
and
sub
lea
clc
test
xchg
cmp
je
in
nop
movsb
cmp
in
loopne
push
mov
jmp
mov
dec
sbb
clc
fwait
add
pusha
add
pop
rorl
add
lret
rol
fcomi
ja
ret
or
pop
cmp
mov
adc
test
sbb
xchg
cli
or
cmpb
push
popa
push
cmp
aaa
fwait
rol
jno
inc
pop
mov
or
roll
add
mov
lea
jb
xorb
aaa
ds
push
push
push
push
jle
ret
add
icebp
aaa
jmp
pop
addl
jne
adc
and
ret
shlb
inc
push
dec
jo
xchg
jg
inc
jl
pop
ret
pop
add
dec
inc
addr16
xchg
rolb
adc
rolb
shll
filds
and
adc
sbb
inc
in
add
icebp
mov
and
inc
sub
inc
adc
aam
lcall
mov
scas
pop
rclb
ret
add
mov
add
mov
cltd
push
data16
xchg
nop
pop
or
pusha
les
dec
imul
add
xor
aam
sub
call
cmp
dec
add
xor
call
arpl
jle
call
mov
jmp
ret
inc
repz
sub
test
push
jl
add
pop
lret
rclb
dec
adc
dec
push
pop
pop
sub
pop
push
sbb
les
jbe
shll
je
and
pop
outsl
mov
gs
hlt
mov
in
lods
loopne
sbb
lock
add
test
jmp
xchg
cmp
lar
je
in
arpl
cld
add
sbbl
mov
or
inc
movsb
sub
and
inc
scas
cmp
add
or
loop
mov
call
loope
cmp
sbb
and
sahf
lret
push
call
adc
push
xchg
xchg
adc
popa
sub
mov
nop
pusha
test
addb
into
movsl
add
sbbb
ret
jnp
sub
cs
dec
add
pop
or
push
sub
sub
lods
rorl
add
sti
mov
sub
mov
pop
sub
loopne
push
mov
mov
sbb
data16
mov
loopne
call
adc
mov
push
test
loopne
push
fs
sar
pop
in
cli
decl
mov
sti
jmp
loope
and
mov
or
out
cwtl
sbb
inc
cmpsb
test
adc
dec
jae
sub
cmp
lcall
lods
sahf
jle
scas
js
lods
divb
dec
addl
jns
sahf
std
ja
in
pusha
dec
scas
fadd
mov
loopne
popa
xor
movsb
in
bound
jb
jl
jg
loopne
mov
add
jge
sbb
mov
ret
loopne
adc
add
cmp
loop
cmp
ret
insl
call
dec
loope
adc
aam
adc
sbb
jmp
inc
pop
pop
out
xor
aaa
inc
pusha
push
pusha
pop
mov
popa
adc
xor
dec
es
pusha
inc
add
adc
xor
or
cmpsb
loop
ss
cmp
push
lcall
cmp
inc
mov
nop
dec
mov
xchg
mov
pusha
mov
or
push
loopne
adc
fs
and
cmp
inc
sub
add
add
pusha
sub
mov
xor
lahf
mov
mov
incl
mov
call
or
add
inc
inc
jbe
adc
xor
jp
fwait
or
in
push
push
cwtl
loopne
test
push
xor
mov
arpl
enter
imul
bound
pusha
jecxz
addr16
pusha
xor
loop
jmp
and
jg
pop
sti
pusha
daa
or
push
pusha
xor
push
dec
loopne
test
mov
int
mov
mov
shrb
loopne
push
adc
in
inc
loopne
mov
pushf
pop
xor
popa
add
pop
pop
test
add
scas
lea
dec
fsubrs
test
and
les
cmpsl
inc
mov
mov
adc
cmp
mov
adc
mov
in
add
dec
cli
fistpll
sbb
xchg
inc
adcb
loopne
pushl
adc
incl
xor
hlt
movsb
and
mov
adc
insb
in
inc
xor
push
ds
add
fdivr
hlt
je
pop
add
or
add
push
movsb
sbb
test
adc
jne
or
aam
jb
in
jo
jp
call
fmull
je
sarb
fdivrl
push
push
inc
inc
imul
rcpps
outsl
loope
sub
or
xchg
adc
cmp
mov
int3
cmp
inc
mov
add
aam
push
adc
mov
rol
sbb
mov
inc
adc
les
fildll
or
inc
fdiv
add
inc
add
adc
sub
es
sbb
cmpsb
fsubrl
enter
sbb
pop
sub
xchg
stos
test
mov
es
or
jmp
lods
adc
fadds
lock
add
shl
jo
call
rcrb
adc
add
push
pusha
inc
lods
jo
xchg
jp
sub
add
movsl
mov
lret
scas
faddl
clc
mov
sub
add
pop
xchg
pop
loopne
mov
je
and
or
or
jo
sub
lcall
push
xor
pop
out
es
push
jno
push
inc
test
cs
jb
pop
or
arpl
xor
sub
adc
add
add
adc
add
or
jmp
cmpsb
add
add
lock
jmp
or
ret
sub
call
dec
pushf
push
popa
jo
or
lock
hlt
stos
jo
aam
push
int3
add
xor
adc
iret
dec
dec
dec
or
in
out
dec
mov
fs
mov
lret
stos
push
stos
xor
faddl
mov
mov
cmp
adc
loopne
shlb
and
movsl
mov
stos
sub
xor
xchg
jle
lock
push
test
cmp
add
sbb
inc
adc
or
test
scas
mov
out
add
add
push
icebp
das
subb
nop
sbb
outsl
cmp
add
fbld
insb
add
je
and
fs
jg
push
push
jb
jo
icebp
or
cmp
jb
or
or
add
cmp
lcall
hlt
jl
sbb
icebp
xor
mov
adc
mov
leave
repz
push
test
fists
pop
jae
push
add
xchg
xor
push
mov
mov
divl
pop
mov
fiaddl
mov
mov
pop
movsb
movsb
jne
inc
push
pushf
push
xorb
mov
out
pop
mov
ljmp
sahf
push
jmp
lret
add
cmp
mov
dec
jg
jmp
mov
aaa
mov
je
add
dec
insb
test
cld
ds
or
adc
popa
lret
andb
xchg
lret
mov
sbb
and
mov
ret
pop
sbb
and
dec
adc
push
jno
rolb
mov
loopne
pop
cld
dec
mov
jge
cmp
cmp
jge
push
bound
mov
inc
inc
call
rcr
call
jo
jo
pop
jmp
stos
movsl
jg
lock
adc
push
push
xchg
rclb
cmp
hlt
hlt
jb
add
lcall
xchg
push
push
push
inc
sub
push
fidivrl
xchg
push
cs
dec
cmp
xor
mov
adc
clc
push
jo
jne
cld
je
mov
xchg
adc
or
mov
in
add
arpl
scas
xor
ja
pop
fdiv
mov
fnstcw
jecxz
adc
data16
bound
mov
dec
test
push
fs
sbb
mov
cmp
and
adc
ss
adc
popa
jmp
xor
mov
or
or
xor
add
mov
mov
xchg
jo
clc
out
pushf
das
jne
jg
add
je
mov
mov
addb
dec
cld
and
jg
repz
je
and
cmp
adc
clc
mov
jne
test
dec
jo
mov
sub
ljmp
call
jo
lock
add
xchg
xor
icebp
fcmovnb
mov
jo
or
add
adc
adc
ret
rcrb
or
ret
or
je
add
test
lea
in
or
int3
leave
mov
nop
or
ja
or
fwait
or
inc
inc
ljmp
push
repnz
cmpb
jg
pop
ds
or
or
clc
fwait
xchg
add
jb
lods
mov
xchg
lock
scas
fs
jp
repnz
inc
aam
adc
inc
outsl
mov
add
pop
lcall
rcr
bound
shll
pop
push
cmc
pop
xchg
adc
call
xor
movsb
or
pushw
mov
in
divl
cs
ficoml
xor
fists
into
dec
inc
jo
mov
cmp
pushf
mov
pushl
push
add
inc
jmp
test
add
in
sbb
mov
aas
mov
shr
pop
orb
adc
les
jo
dec
pop
jne
pop
fmull
lock
repnz
cli
loop,pn
inc
cmp
cmp
fnstenv
cmp
mov
jl
add
add
pop
add
jo
inc
call
mov
aam
subl
insl
mov
out
or
dec
and
adc
mov
add
add
adc
adc
jge
add
lock
es
xchg
sbb
ss
cli
mov
jo
push
xchg
push
rcl
jp
stos
cld
and
addr16
add
and
jne
outsl
fsubs
inc
mov
ja
lea
cli
ja
push
add
jne
in
sub
mov
jp
mov
mov
add
loope
cs
sahf
jne
dec
cli
ret
xor
jecxz
ret
xchg
and
fs
and
push
xor
and
xor
mov
lods
outsb
adc
mov
inc
inc
adc
ret
inc
lret
lret
pop
pop
dec
push
movsb
js
jmp
imul
inc
or
push
das
push
call
lock
je
icebp
pop
xor
cmp
or
or
mov
xchg
cmc
icebp
lcall
push
inc
inc
sbb
ds
cwtl
repnz
xchg
inc
or
idivb
and
push
inc
testl
add
jae
push
lea
ljmp
sub
add
or
pop
in
jne
or
pop
rolb
insl
adc
incl
je
les
jbe
push
cld
and
cmp
adc
mov
shrb
repnz
rol
je
enter
cmp
mov
or
adc
fsubrs
cs
inc
clc
pushf
adc
test
sub
cs
pop
and
repz
mov
mov
mov
rclb
push
bnd
rcrl
add
xchg
hlt
add
in
push
loopne
cli
or
jb
add
fs
and
cld
data16
enter
mov
mov
dec
xchg
mov
add
mov
stos
jbe
aad
mov
pop
rolb
mov
cmp
mov
sbb
cwtl
cmp
push
cld
push
out
movsl
xchg
orl
xor
imul
xchg
and
add
aas
les
lahf
inc
mov
xor
jecxz
fbstp
cmp
jae
ficoml
les
adc
sub
fadds
call
or
cmp
xor
jns
xchg
add
and
lret
rol
cmp
dec
cwtl
lret
add
sbb
mov
imulb
add
cwtl
cmp
xchg
and
pop
cld
fidivs
pop
or
call
imull
test
inc
cmp
or
subb
mov
mov
insb
jbe
movsb
sbb
insb
popa
and
mov
mov
int3
mov
andl
mov
lret
or
rcr
jecxz
add
and
push
jbe
mov
dec
popa
add
inc
cmp
jne
xchg
scas
lret
mov
sub
sub
sub
xor
lock
outsl
cmpsb
jbe
push
jb
sbb
test
jecxz
sub
cld
ret
jb
dec
or
dec
test
push
repnz
pop
and
and
shrb
inc
inc
rorb
hlt
aaa
imul
or
repnz
lock
loopne
cltd
cltd
inc
xchg
ficoml
mov
fisttpll
shll
add
xorb
test
gs
add
pop
frstor
pop
shlb
and
pop
jb
incl
inc
inc
call
sarb
aad
push
cmp
call
push
sbb
xchg
pop
add
sar
add
cmp
cmp
rcrb
neg
in
and
std
or
nop
dec
inc
mov
rcrb
outsb
fdivr
jmp
decl
mov
and
movb
mov
je
pop
pop
or
cli
insb
add
mov
sti
push
add
and
addr16
shll
test
xor
jne
dec
push
add
mov
int
pop
andb
sub
shrb
jbe
mov
or
rcrb
pop
jmp
dec
cmp
mov
subb
push
inc
push
mov
sub
mov
hlt
mov
inc
push
jl
scas
pusha
push
mov
fiadds
push
lods
call
test
movsb
in
add
pop
call
push
add
dec
pop
aam
int3
data16
int3
shrb
add
cmp
bound
add
out
sbb
mov
add
push
and
outsl
xor
adc
rolb
cwtl
or
inc
stos
inc
jmp
push
test
leave
lret
test
aad
bound
mov
adcb
out
adc
mov
in
pop
and
pop
ffree
jmp
into
and
shrl
dec
or
test
push
icebp
mov
xchg
pop
and
in
aam
jl
aam
out
add
data16
insl
cwtl
sub
test
sbb
mov
sbb
std
cmp
push
std
rcrl
add
mov
pusha
adc
testb
or
or
jmp
std
imul
dec
shlb
pusha
push
cwtl
add
loopne
rolb
pusha
and
and
mov
cld
xor
outsb
fadds
push
cmp
cld
add
mov
pop
mov
sub
mov
loop
sti
loopne
and
sti
loopne
loopne
insb
sub
push
or
add
sti
sbb
xchg
mov
add
in
neg
or
inc
xchg
mov
mov
mov
jbe
test
adc
mov
add
sbbl
jb
push
or
and
loop
adc
jne
and
cltd
loopne
mov
stos
mov
cmp
or
lock
inc
jbe
xchg
aas
pusha
jl
inc
xchg
xor
lret
pushf
inc
push
sbb
adc
jne
jge
mov
loopne
or
cmc
and
mov
xchg
je
mov
dec
outsb
adc
in
sbb
cmp
aam
add
cmpb
aam
add
int3
dec
pop
ret
imul
loopne
je
ret
pusha
pop
shl
jg
aas
ret
loope
push
je
inc
xor
dec
add
loop
lock
arpl
lea
nop
loopne
push
loopne
push
cmp
mov
adc
popa
insb
loope
sbb
jg
bound
xchg
push
mov
ljmp
subb
adc
or
push
iret
repz
sbb
sub
adcb
pusha
add
fadds
repnz
filds
imul
mov
hlt
jecxz
add
push
push
xchg
add
je
lcall
push
cld
ljmp
ret
pop
lea
cmp
jb
push
jnp
adc
mov
mov
dec
inc
data16
shlb
adc
adc
dec
or
pop
push
fdivp
call
sbb
xor
pusha
iret
adc
popa
ret
mov
and
and
xor
push
dec
add
rcrb
push
and
lods
test
cwtl
in
pop
add
std
fwait
and
notl
les
or
shll
or
dec
xchg
and
push
dec
xor
daa
push
xchg
mov
xchg
pop
dec
loopne
and
popf
aam
repnz
out
movsb
fisttpl
jmp
adc
inc
adc
jg
cmp
or
inc
adc
pop
dec
cmpsb
inc
xor
push
inc
cld
insl
ror
xor
push
push
and
push
sub
hlt
add
push
add
and
adc
aas
xor
loopne
push
scas
push
fnstsw
iret
push
movsb
pop
aam
push
cli
add
sbb
add
xchg
push
pusha
xor
inc
sbb
push
adc
nop
call
fs
rorb
add
dec
pop
popa
ljmp
or
dec
loope
lods
add
test
loop
dec
in
add
pop
lcall
loope
or
push
pop
mov
mov
jl
xor
xor
xor
cmp
fs
scas
testb
inc
and
jno
add
jmp
jo
xor
ljmp
mov
fwait
mov
pop
xchg
sub
or
adc
loopne
aaa
lret
fwait
dec
add
or
bound
cmp
and
ljmp
call
jbe
fimull
pop
out
jo
idiv
adc
je
inc
es
inc
enter
xchg
testb
sbb
add
sub
dec
shlb
je
lea
adc
ja
ret
mov
xchg
or
mov
inc
pop
add
orl
movsb
aas
mov
mov
mov
mov
push
jne
adc
mov
cmp
xchg
jl
or
adc
xor
jg
pop
ljmp
inc
add
lock
jl
sbb
int3
mov
pusha
add
mov
sub
push
daa
xor
pop
xor
push
call
jne
mov
push
or
test
loop
dec
push
sub
insb
jecxz
imul
sub
pop
and
sbb
out
cmp
xchg
es
or
popf
rolb
pop
inc
shrb
push
jne
sar
lea
pop
jmp
inc
subb
cli
mov
cmp
lock
call
inc
insb
adc
ss
mov
movlps
mov
adc
mov
rcll
add
sub
aaa
lods
daa
jmp
test
pop
add
rcll
dec
cli
or
gs
mov
add
inc
aam
inc
push
xchg
pop
inc
pop
out
or
lods
adc
xchg
push
sbb
nop
pop
push
push
ja
fiadds
jmp
add
push
jp
lock
pop
testb
daa
mov
mov
dec
jo
xor
mov
repz
inc
push
je
and
dec
adc
xor
mov
faddp
sub
jo
fisttps
scas
add
rcr
mov
adc
mov
mov
mov
les
std
cmp
inc
cmp
and
add
cmp
lock
push
mov
or
dec
push
or
sub
dec
add
pop
ljmp
inc
pop
push
xchg
jo
add
sbb
mov
leave
fmul
je
pop
mov
adc
or
or
adc
add
hlt
pop
sub
cmc
shlb
push
dec
mov
insb
adc
sbb
cmp
or
dec
test
cs
pop
jo
push
data16
in
mov
mov
dec
push
repnz
mov
das
or
mov
fiadds
adc
mov
mov
push
and
shlb
les
fcom
push
call
int
orb
mov
dec
inc
or
cld
jo
loopne
pop
icebp
pop
add
dec
lret
stos
shrb
sub
mov
push
shlb
lock
jns
pop
xor
cld
mov
jbe
pop
mov
mov
call
in
ss
dec
xor
cld
fistps
push
call
xchg
repz
sub
ficoms
push
ret
xor
add
mov
cmp
rclb
leave
mov
adc
inc
shll
xor
push
sbb
sti
test
sbb
xor
subl
call
add
clc
fidivrl
sti
push
pop
jo
and
leave
ret
add
adc
call
lock
push
pop
pop
sbbb
mov
mov
jmp
mov
insb
lea
test
out
fdivs
xchg
xchg
stos
push
inc
in
add
fwait
and
xchg
or
dec
ss
imulb
scas
sbb
in
mov
mov
lret
unpcklps
dec
xor
push
ljmp
dec
les
pusha
sub
xchg
sub
test
mov
mov
cli
lock
dec
cmp
das
es
divl
inc
mov
faddl
mov
cmp
pop
test
mov
and
mov
mov
jae
sbb
cmpsl
push
sbb
jo
adc
sbb
push
mov
add
mov
dec
outsl
clc
incl
jno
js
lods
jo
mov
nop
inc
xor
mov
push
imul
push
hlt
jo
add
mov
and
inc
ret
and
data16
add
sub
mov
or
adc
call
insl
mov
or
inc
data16
sbb
hlt
add
cmp
and
ds
adc
stos
ficoms
in
ret
inc
jo
jno
sti
cmpsb
dec
add
scas
pop
mov
ret
fldt
aas
mov
js
push
pushf
inc
out
mov
jg
dec
sbb
push
pushl
das
nop
inc
adc
mov
mov
cmp
or
mov
pop
add
call
add
push
xor
repz
or
mov
int3
test
enter
in
push
inc
push
je
jmp
or
and
push
mov
call
inc
and
add
les
or
dec
jne
mov
mov
fcoms
adc
sarb
mov
lds
out
mov
mov
sub
cld
lods
adc
shr
adc
pop
or
ja
stos
testl
pop
andl
jmp
sbb
and
or
mov
lock
dec
inc
or
add
pop
push
mov
cmpsl
mov
test
push
sbb
add
loope
ret
sub
add
jl
out
je
sbb
call
aam
push
incb
scas
hlt
xor
or
push
sbb
mov
cmp
test
ds
mov
inc
mov
mov
mov
int
add
dec
cmp
loopne
pop
cmpsb
test
aad
push
sahf
jo
jle
addb
jo
jae
loop
add
cmp
call
jo
sub
adc
lods
idiv
cli
outsl
cli
dec
fnsave
add
xchg
ret
mov
movsb
or
jb
inc
add
inc
add
add
ss
xorl
xor
mov
data16
inc
pop
pusha
loopne
and
xchg
jl
mov
and
and
out
or
push
lock
and
dec
data16
inc
jo
push
pusha
sbb
sarb
mov
test
jo
es
inc
enter
pusha
dec
or
ss
and
adc
mov
sti
data16
fidivs
jmp
mov
add
add
xor
mov
rolb
push
sbbl
jp
sub
ret
add
sub
movsb
push
jb
stc
out
mov
push
lea
add
sbb
push
mov
jmp
les
add
test
icebp
adc
sbbb
and
addr16
mov
jbe
xchg
test
adc
lods
inc
jmp
add
mov
mov
dec
pushf
fbld
jb
dec
sahf
pop
dec
or
leave
je
lds
test
movsb
pusha
xor
scas
sub
add
outsb
jp
pop
lods
outsb
lea
mov
inc
lret
sbb
xchg
not
orb
push
stos
jmp
out
shlb
and
or
adc
mov
lods
call
pop
divb
movl
push
test
pop
push
scas
ss
les
stos
mov
fnstenv
fsubrp
push
dec
sbb
or
mov
xor
notl
inc
and
cltd
pusha
pop
inc
insl
hlt
call
xchg
adc
jl
pusha
pop
mov
mov
xor
or
push
ss
or
fstl
add
push
movl
aaa
xchg
xchg
inc
lock
daa
inc
cmpsb
add
addl
sub
pop
data16
cwtl
outsb
lcall
xorb
decl
jecxz
int3
andb
mov
xchg
inc
subb
fwait
mov
and
sbb
add
outsb
push
and
xor
mov
pop
push
imul
data16
incl
orb
add
adc
mov
inc
adc
inc
jl
shlb
xor
dec
bound
gs
lahf
scas
roll
pop
jle
and
mov
fdivl
in
cmp
or
cmp
push
rclb
sub
iret
jmp
test
sub
inc
cmp
inc
iret
subb
outsb
sbb
lods
lods
xchg
mov
cltd
mov
scas
inc
sub
cwtl
pop
mull
rclb
fcoms
jbe
fs
cmp
inc
mov
je
add
sbb
add
inc
jecxz
pushf
out
test
ret
mov
pushf
imul
jg
push
call
rclb
add
jmp
sub
rorb
push
sub
cmp
add
xchg
add
les
shlb
push
push
pushf
push
mov
push
mov
lea
test
in
out
mov
les
jns
ret
sbb
ljmp
pusha
mov
movzbl
lock
nop
clc
push
cmp
daa
sub
lea
push
inc
mov
rcrb
pop
jl
or
add
insl
push
fadd
faddl
lock
add
rcrl
lahf
add
lea
in
imul
enter
add
rcrb
mov
dec
scas
jb
xchg
and
leave
cmp
add
inc
pusha
mov
imul
mov
inc
nop
nop
xchg
fs
mov
roll
addl
jb
dec
int
inc
shrb
add
rolb
nop
push
rolb
je
inc
mov
mov
add
jb
push
imul
and
decb
or
push
sahf
push
push
add
sub
lahf
adc
xchg
lcall
pop
mov
lds
mov
and
xor
add
mov
roll
mov
enter
push
pop
or
loopne
adc
push
sub
cs
and
mov
mov
decb
je
xor
add
subl
cli
out
xor
pop
mov
cmpsb
outsl
ljmp
pusha
add
pop
pusha
in
xor
mov
movb
mov
push
push
add
int
lcall
jg
imul
pop
sbb
in
imul
mov
push
lock
push
inc
dec
adc
fistpll
hlt
loopne
lock
filds
loope
jp
pusha
mov
dec
cwtl
fxtract
adc
and
pushf
lret
repz
push
test
pop
fsubl
popa
pop
stos
lock
jnp
repz
sub
test
mov
shlb
popa
or
stos
hlt
loope
fcmovu
pop
mov
sbb
or
in
xlat
stos
in
mov
aad
mov
out
addr16
cmpsb
test
rcl
neg
lahf
jns
rcl
loop
test
sub
push
ficomps
mov
pop
fists
mov
rcrb
adc
cmpsb
insl
iret
ljmp
lods
rcrb
adc
push
je
je
int3
clc
jp
and
cmp
ret
push
pusha
push
sub
add
loop
lods
cmpsb
mov
pop
pop
pop
push
pop
mov
pop
jbe
lods
out
ss
xchg
mov
mov
lcall
xor
outsl
stos
add
mov
mov
mov
fdivr
call
pusha
add
popa
push
xor
test
bound
addr16
add
jmp
mov
adc
mov
les
jne
jb
lea
call
xorb
mov
adc
or
test
aas
inc
xchg
inc
cs
or
stos
inc
jp
sbb
in
aam
adc
fdivs
call
sub
cmp
fidivrs
icebp
jb
lea
lret
loopne
or
outsl
das
nop
mov
pop
sbb
sbb
xor
sbb
or
and
inc
and
add
add
orl
or
ret
sub
outsb
test
or
or
test
mov
push
incb
pop
in
inc
push
add
loopne
jbe
mov
add
and
mov
sub
add
or
loopne
roll
mov
ficompl
pop
sub
int3
fisttpll
jo
divl
pusha
fisubrl
call
js
fdivs
fistpll
push
jbe
xor
pop
jbe
mov
ficomps
ja
in
pusha
cmp
adc
lea
mov
je
add
pop
push
and
stos
and
fcompl
cmp
test
fbstp
jb
mov
lea
rorb
or
pushf
push
sub
mov
or
jnp
or
incl
data16
or
inc
adc
int3
lock
incl
xor
cmp
xor
scas
data16
or
jmp
adc
pop
cli
push
fldenv
outsl
add
mov
inc
mov
jo
lea
dec
add
xor
mov
testl
jo
mov
cs
fdivr
lret
ret
cmp
push
and
xlat
fwait
or
push
adc
repz
add
mov
sub
data16
add
mov
mov
add
jl
jle
xchg
inc
push
dec
add
jo
jnp
popa
dec
in
rol
fcompl
rorb
inc
inc
fdivl
nopl
cmp
pop
sbb
adc
dec
add
js
cmp
add
test
lock
shlb
pop
sbb
xor
jae
in
or
or
rcrl
mov
mov
sbb
add
and
sahf
icebp
and
mov
dec
incb
inc
inc
pop
cmp
mov
cmp
ljmp
jl
lret
pusha
inc
pop
push
sub
or
das
and
sub
push
loopne
stc
ja
add
inc
mov
mov
mov
sbb
aam
xchg
mov
add
mov
ret
pushl
nop
andl
adc
sub
jno
dec
and
jo
pop
add
rol
fwait
loopne
sub
call
dec
or
call
incl
push
cmp
add
daa
xor
pop
add
mov
test
jmp
xchg
mov
mov
loopne
lahf
shr
push
andb
mov
inc
sbb
mov
movsl
push
inc
nop
xchg
push
mov
fstp
inc
sub
cmp
pop
xchg
ss
adc
and
into
jb
add
push
push
pop
dec
push
xchg
and
pop
mov
adc
ja
data16
pop
fisubl
cs
mov
push
jo
aas
mulb
mov
nop
xor
cmp
cltd
mov
lret
nop
in
or
incl
sub
jo
clc
fisttps
add
or
mov
or
or
add
inc
inc
sub
add
cwtl
sarb
movsl
aaa
outsb
mov
sub
push
ss
ret
call
add
xchg
xor
jle
push
adc
mov
rorb
push
mov
jo
push
aaa
test
pop
fsubl
xchg
xor
mov
sub
or
das
pop
jo
add
sahf
aad
jne
scas
push
mov
or
bound
pop
cmp
push
pop
jo
lods
mov
jo
fs
in
mov
inc
addb
cmpsb
test
dec
cmp
sbb
add
or
and
mov
adc
lea
call
adc
mov
push
adcl
or
mulb
jbe
mov
or
je
add
in
in
lret
or
lock
test
or
mov
pop
dec
test
data16
xor
push
xor
ret
jmp
pushl
call
add
call
lock
scas
xor
shr
jo
cmp
xor
scas
std
pop
sbb
jo
call
add
mov
sbb
aam
into
aam
test
cmp
mov
fnstsw
fucomi
lods
jns
or
cli
pop
mov
cs
call
roll
lret
test
cmc
call
jmp
test
je
push
mov
mov
push
adcl
loop
adc
jo
fs
sbbb
add
mov
les
push
insl
add
lock
pop
push
pop
lcall
jae
aad
outsb
push
test
add
loop
xor
xor
sbb
imul
inc
shrb
dec
inc
add
dec
jne
mov
call
jnp
lret
mov
cs
and
cmp
lea
add
lock
scas
cmp
adc
xor
sub
fnstenv
pop
pop
mov
push
lods
push
cltd
fnstenv
push
mov
out
jb
inc
and
sub
filds
loop
push
push
jg
notb
pop
call
call
sbb
lea
add
push
add
and
mov
xchg
cli
sub
call
add
xor
push
adc
mov
add
add
and
and
mov
dec
scas
and
shl
fisubrl
push
push
scas
mov
push
mov
and
incb
jne
add
pushl
mov
jmp
inc
mov
or
fsubs
sub
cmp
cmp
xor
adc
push
popf
push
or
xor
and
dec
mov
or
scas
sbb
xor
ds
loopne
adc
add
scas
lds
js
mov
movsb
mov
xorb
scas
push
or
xor
jl
std
movsb
mov
and
out
sbb
jg
add
xor
or
test
push
sbb
jo
dec
call
std
xor
mov
jp
jae
lea
dec
cld
arpl
jl
fisttpl
adc
outsb
outsb
or
stos
inc
jo
mov
or
shl
dec
jbe
add
xlat
mov
jl
adc
hlt
flds
sbb
mov
sub
stc
cmpb
test
aad
mov
lock
and
outsb
adc
sbb
lcall
in
adc
cmpsb
cltd
idiv
nop
xchg
rcrb
xor
test
cmpsl
mov
fildl
adc
pop
or
sbb
lock
call
and
jns
gs
mov
sub
scas
je
mov
icebp
wrmsr
ss
pop
out
dec
add
jne
lock
bound
xor
xchg
add
push
dec
dec
rcll
adc
lret
shll
pusha
and
out
data16
push
add
mov
data16
push
xor
ja
adc
and
or
mov
nop
pop
call
insb
ret
stc
dec
fistl
pusha
lret
fadd
push
je
addr16
inc
push
sub
adc
popa
mov
xchg
mov
sbb
add
add
pop
xchg
ljmp
lahf
addr16
mov
je
xchg
insl
test
test
stc
add
nop
and
xchg
jle
mov
fucomip
cmpsl
ds
jecxz
pop
sbb
xchg
lock
fsubrs
add
mov
loope
jne
mov
add
push
push
loop
add
and
shll
repnz
test
or
lods
add
or
pop
leave
adc
or
es
daa
call
pusha
add
xchg
xchg
arpl
cmp
xchg
das
xor
mov
mov
push
mov
dec
cmp
push
dec
adc
mov
sbbl
adc
xchg
push
xchg
inc
mov
and
dec
clc
addb
addb
cld
ds
inc
leave
adc
orb
mov
adc
in
adc
xor
adc
inc
or
mov
test
and
jbe
js
js
aam
mov
and
xchg
xchg
mov
mov
stc
cmc
mov
push
or
inc
inc
mov
jb
inc
xor
add
adc
adc
dec
dec
std
cmp
jae
aam
mov
jle
jl
push
std
add
inc
cwtl
sbbb
incl
lea
pop
and
dec
pop
loop
iret
add
loope
xor
call
mov
push
sub
or
and
or
je
lds
xor
fcoml
sbb
pusha
cmp
add
movl
push
push
add
outsb
pop
call
jb
sahf
xor
adc
sub
rolb
rorb
add
mov
push
inc
mov
or
cmpsl
icebp
sub
push
add
cmp
test
das
orb
adc
xchg
je
xchg
or
push
jb
call
loope
fwait
and
inc
inc
jbe
cmovno
std
adc
js
pop
mov
add
dec
nop
xor
in
loope
out
sbb
add
mov
or
push
adc
std
enter
mov
push
mov
sub
shll
add
enter
pop
or
xchg
idivb
jl
xor
cltd
push
jne
add
adcb
repnz
stos
and
jle
je
or
adc
pushl
rorb
lock
xor
dec
loop
add
cltd
ret
jns
xchg
sbb
nop
in
push
mov
dec
bound
mov
icebp
push
xchg
out
push
inc
push
aas
rorl
mov
or
pushf
jp
and
insb
cld
dec
mov
ljmp
xor
insl
dec
std
add
adc
xchg
sub
loope
jo
daa
and
aaa
push
jbe
shlb
je
mov
adc
or
pop
add
iret
push
mov
add
int
stos
js
mov
data16
or
gs
call
push
adcl
push
call
imul
lock
adc
jg
rclb
test
xchg
icebp
push
dec
dec
mov
es
cmp
inc
or
out
push
add
cmp
cmp
dec
mov
fs
sub
test
cmp
and
stos
jl
push
sbb
sub
pop
or
cmp
fmull
add
push
push
fs
fdivp
and
cmp
pop
mov
and
iret
es
cld
add
mov
loopne
dec
clc
ljmp
push
push
and
add
push
insb
or
add
inc
sbb
jp,pn
clc
push
push
pop
sub
ret
in
imul
cld
lock
adc
lea
xchg
xor
xor
dec
repnz
lea
pusha
push
jo
push
jb
xchg
sub
or
adc
inc
ss
xor
movsb
push
jle
lahf
jnp
and
nop
mov
add
xor
scas
imul
jmp
mov
push
inc
test
pusha
xor
pop
xor
ret
adc
push
add
mov
adc
sbb
hlt
test
into
call
lret
adc
xchg
xor
mov
adc
and
call
sbb
jmp
sub
pop
push
inc
and
or
cmp
adc
inc
or
shl
add
sub
and
jmp
and
cmp
jne
xchg
loope
stos
pusha
enter
pusha
pop
cs
mov
jne
es
loope
lcall
testl
test
in
add
dec
and
dec
je
push
clc
or
jmp
jbe
call
jo
cmpsb
xlat
scas
inc
loope
fists
cmp
and
mov
lret
cmc
add
add
pusha
jb
jo
sub
sub
dec
or
sub
popa
aaa
loopne
movsb
and
mov
movsl
rorb
cli
xor
js
lods
push
loopne
sbb
xor
pop
and
call
lea
int3
jmp
pusha
sbb
outsl
mov
dec
xor
iret
pusha
sub
cmp
loopne
sbb
pop
inc
aam
add
enter
mov
cmc
dec
loopne
in
enter
and
fisubl
and
lret
icebp
callw
loopne
pusha
fwait
or
lds
int
leave
ret
loope
adc
mov
or
add
aam
mov
hlt
je
push
addl
test
push
jl
push
loope
fstpl
sub
jmp
hlt
aaa
cmpsb
jno
test
xchg
loopnew
je
adc
add
testl
add
xor
bound
ja
add
cmp
cmp
int3
lods
add
es
add
ss
in
dec
loopne
aaa
push
ss
popw
pusha
lods
clc
loopne
aas
push
outsb
add
sub
pushl
mov
fcoml
xchg
inc
push
inc
shrb
nop
nop
push
and
mov
fcoms
cmp
pop
jb
pop
dec
loope
push
add
loope
push
call
push
sub
or
cli
dec
loop
add
mov
sbb
push
push
sar
call
sbb
mov
loopne
nop
pop
sub
cmp
or
and
movb
cmpsb
mov
inc
add
insb
pop
push
fs
les
sbb
xchg
inc
sbb
dec
adc
cmp
adc
or
pusha
cmp
and
rorb
cmpsb
pusha
adc
sbb
xchg
lods
data16
in
push
shrb
and
push
add
dec
or
sbb
outsb
xor
add
lock
mov
aam
nop
icebp
dec
xchg
lock
push
mov
pusha
mov
or
xchg
in
bound
adc
or
sub
scas
push
movsl
inc
push
stos
mov
mov
out
adc
mov
dec
mov
and
mov
inc
mov
jp
fnstsw
lock
sbb
dec
idivb
mov
test
push
add
xchg
or
sub
fistl
aam
enter
add
push
sbb
cmp
adc
daa
push
shrb
pop
sub
dec
mov
jl
xor
jb
jb
rcrl
or
add
sbb
push
lcall
loopne
rclb
jp
or
or
addl
fstpt
loopne
jo
adc
mov
stos
lret
cli
jg
testb
adc
add
push
icebp
dec
mov
xchg
sbb
je
mov
adc
sub
push
push
adc
adc
jb
faddl
adc
lcall
shrb
stos
xor
add
aaa
dec
aad
push
clc
inc
pushaw
jnp
add
and
nop
push
call
add
jo
push
out
add
aas
jo
push
sub
dec
dec
pop
sarb
push
lock
dec
pop
pop
or
xor
mov
push
mov
cld
jno
mov
jnp
jae
mov
and
mov
mov
pusha
mov
orb
clc
dec
add
xchg
ljmp
stos
inc
std
jg
sub
push
orl
jo
decl
xchg
lock
call
fs
call
jne
pop
repz
jb
pop
sub
loopne
fisubl
loope
mov
mov
push
fidivl
cld
cs
hlt
pop
shrl
jo
and
xor
jmp
sbb
jo
hlt
jno
push
cmp
jmp
cmp
pop
test
jo
mov
jg
xor
xorb
cld
xor
mov
push
mov
popa
ljmp
sbb
lock
pop
xchg
incb
sub
xor
je
icebp
or
sub
and
jno
xchg
push
lods
jno
sahf
sbb
or
test
out
ss
and
xor
lock
das
cmp
sti
outsb
pop
adc
pop
cmp
jmp
mov
insb
enter
cmp
je
add
add
lea
mov
sahf
aam
es
push
sub
call
decl
lock
daa
add
or
rcr
add
vmrun
stos
sbb
inc
hlt
add
inc
lods
jp
add
lcall
fdivp
add
xor
or
sahf
adc
in
ja
mov
lods
add
sbb
pop
inc
lock
dec
divb
jb
rclb
push
dec
fsubs
push
push
jb
adc
lsl
and
outsl
call
xchg
cmc
add
inc
in
push
add
nop
adc
pusha
mov
or
xor
or
je
cmp
test
inc
and
aam
fcoml
jp
or
add
xor
sub
fucomi
push
cld
sub
mov
lea
pop
nop
mov
test
enter
hlt
rcl
sub
shlb
add
ljmp
in
mov
icebp
push
xor
dec
ss
clc
xchg
int3
lock
push
stos
add
xor
ja
cmp
call
decb
sub
inc
je
cwtl
test
sub
inc
repnz
sarb
xor
add
fcoms
xchg
xchg
add
lock
or
insl
ret
and
jmp
rcrb
sbb
xor
lock
jmp
fsubs
lea
or
pop
adcb
in
in
adc
mov
aam
sbb
fcoms
adc
pop
push
inc
subb
sub
aam
cltd
xor
sbb
imul
movsb
das
or
adcl
xchg
fsubl
pop
mov
inc
es
pop
push
in
pop
sbb
enter
push
inc
add
pop
call
mov
mov
repnz
xlat
push
mov
adc
sub
lock
or
and
mov
xchg
push
cmpsb
pop
push
pop
dec
movsb
xor
push
cmc
jg
mov
ljmp
cmp
ja
icebp
mov
mov
addl
ljmp
leave
add
inc
jne
sub
rcll
mov
mov
shrb
mov
inc
jo
add
inc
das
repnz
xor
mov
stos
je
mov
enter
inc
loopne
xor
adc
sbb
ret
push
les
xchg
inc
jg
mov
xor
outsl
adc
dec
cmp
adc
or
inc
and
lcall
sub
cmp
pusha
mov
inc
xchg
add
das
fcmove
lock
enter
lds
push
jo
inc
add
faddl
lcall
cmp
push
push
pop
mov
mov
jo
hlt
scas
daa
and
rclb
mov
inc
xlat
mov
cli
movsl
movb
fsubr
mov
adc
lea
mov
mov
mov
inc
sub
or
dec
xor
test
pop
cmc
jg
call
jb
loopne
adc
inc
mov
xor
sti
inc
mov
clc
adc
into
jo
xor
ja
or
call
ja
and
hlt
hlt
lods
adc
inc
mov
icebp
pop
icebp
adc
jne
cld
sub
mov
or
xchg
mov
test
sbb
pop
or
and
mul
ret
call
cmp
test
add
call
mov
repz
repnz
jb
fcoml
sbb
jo
xchg
pusha
jecxz
mov
jg
xchg
or
in
or
es
loop
jg
lock
rclb
jo
mov
and
or
or
mov
cli
das
inc
std
sbbb
lea
movsb
mov
lock
add
idivl
mov
adc
inc
clc
cmove
xor
cltd
loope
mov
jo
cli
add
push
add
inc
mov
addl
xor
lret
sub
xor
hlt
call
add
xchg
jg
and
insl
sarl
add
pop
sbb
call
xor
add
inc
sti
push
push
lock
jno
test
sub
xchg
push
jl
or
push
sbb
es
mov
lcall
addb
or
add
xchg
sbb
dec
pop
sub
add
cmp
fidivl
in
xor
cmp
sbb
out
je
xor
movsb
xor
xchg
xchg
mov
pop
jo
add
data16
pop
jbe
or
mov
aad
add
or
xchg
sbb
icebp
push
inc
mov
test
cmp
scas
push
pop
add
cmc
and
adc
jb
push
in
pop
ja
sub
mov
hlt
add
imul
popa
add
repnz
push
mov
test
je
add
xlat
jbe
fcoml
shlb
andb
mov
sub
dec
dec
pop
lret
rclb
add
sti
add
in
jb
mov
mov
push
and
test
ss
inc
adc
dec
mov
sahf
enter
mov
push
clc
push
sub
adc
and
orl
in
mov
add
orb
mov
je
cmp
mov
insb
mov
dec
push
mov
push
jg
mov
cmpb
add
mov
dec
shlb
sub
testb
push
pop
xchg
pop
addb
into
jmp
jl
adc
rolb
push
xchg
mov
mov
and
adc
mov
push
add
fs
jle
lock
adc
sub
adc
push
test
test
test
mov
add
jg
loopne
jl
push
push
int3
push
mov
scas
roll
movl
call
rolb
push
push
push
shlb
lcall
cmp
in
mov
addr16
loop
popf
push
add
ret
rcll
inc
push
addr16
mov
jp
or
add
jo
call
lock
dec
and
push
andb
xor
ficompl
aaa
pop
cmp
push
cmpsb
out
jo
add
mov
lds
cmp
pushf
in
mov
push
jg
inc
inc
cmp
jbe
in
and
add
push
add
push
and
testb
jmp
je
mov
push
xchg
sbb
loopne
inc
movsl
cld
and
add
pop
jb
push
xor
add
in
mov
mov
mov
pop
adc
test
xchg
nop
inc
jp
scas
jl
pop
in
pop
mov
movsb
outsl
mov
or
cmpsb
mov
fsubrs
lahf
mov
or
jb
nop
add
pushf
cmp
adcb
rorb
dec
mov
add
rorb
push
faddl
inc
cmp
add
xchg
std
scas
push
call
mov
ret
or
dec
dec
sarb
and
ss
mov
and
lods
adc
movb
mov
add
push
mov
shll
jbe
mull
jl,pt
ret
leave
cmp
pop
and
add
xchg
mov
push
pop
xor
rolb
or
mov
xchg
dec
add
pop
add
in
add
mov
imul
xor
xor
and
jne
js
and
cmp
pusha
daa
push
test
push
and
cmp
adc
jbe
cmp
pusha
or
inc
and
add
dec
dec
enter
ds
add
push
xchg
sbb
loope
lock
push
adc
es
sub
push
xor
or
add
inc
fs
in
cmpsb
loopne
jno
xchg
or
imul
jp
inc
inc
pop
cs
or
decl
push
pop
loopne
incl
dec
pusha
and
mov
mull
mov
orb
sub
lea
push
adc
push
or
inc
push
pop
icebp
test
or
mov
fmulp
arpl
cli
call
lcall
push
orl
jmp
jp
js
inc
push
ret
jp
pop
xchg
mov
cmp
scas
xor
add
sbb
in
in
clc
loop
out
test
push
test
cmpsb
fsubrl
sbbl
inc
cld
loopne
or
or
push
pusha
add
out
xor
imul
cmp
cmpl
inc
clc
jb
jo
cli
add
pop
xor
adc
push
jne
pusha
add
loopne
mov
test
call
adcb
lahf
and
dec
loopne
icebp
fbstp
mov
psubsb
adc
inc
popa
lcall
xchg
test
jo
orb
pop
loop
dec
xor
pop
mov
mov
sub
or
add
sub
push
je
out
clc
sarl
jge
mov
pop
or
pusha
adc
loope
test
ret
mov
idivb
pusha
cmp
xorl
cmp
jne
xor
mov
dec
loop
add
cmpsb
add
ret
dec
sub
enter
mov
clc
cmp
mov
call
adc
sub
add
je
lods
jno
fcomip
and
jne
xor
call
loop
push
js
std
or
and
pop
dec
pusha
lods
loopne
lea
mov
mov
cmp
push
nop
add
push
add
inc
jg
inc
or
sbbl
mov
jnp
mov
lea
ja
push
inc
sub
pop
loopne
clc
xchg
loopne
out
in
pop
idiv
aas
add
jnp
loopne
adc
and
pusha
mov
loopne
push
add
pop
test
mov
pop
and
add
dec
xor
pop
dec
enter
fwait
inc
cld
fisubrs
mov
es
inc
lcall
pushf
enter
dec
add
iret
xchg
or
or
imul
shlb
add
mov
test
push
aaa
or
outsb
adc
nop
cld
jl
pop
lock
addr16
xor
inc
add
sbb
addl
dec
fstl
loope
mov
fistps
mov
or
sbb
xchg
mov
shll
and
xchg
mov
adc
adc
inc
or
and
loope
je
mov
nop
and
pop
test
push
push
push
data16
pusha
rcl
cli
ljmp
pusha
pop
mov
popa
pop
push
dec
mov
sbb
xor
dec
cmp
loop
js
jo
lea
mov
aas
nop
mov
jb
je
sbb
bound
fbld
or
xor
push
cmpsb
xor
lock
add
jle
xchg
jo
jbe
jnp
adc
inc
es
and
mov
adc
inc
pop
cli
jmp
call
add
in
push
or
pop
mov
push
pop
jp
add
inc
and
or
call
or
xor
or
sbb
mov
pop
dec
sbb
cmp
or
jne
mov
pop
aam
sub
mov
xor
add
or
mov
push
jnp
mov
xor
lock
out
xor
shrb
int3
nop
std
aas
mov
add
xchg
jl
call
fistl
loop
mov
jno
popa
stos
pop
nop
push
mov
xchg
adc
adcb
pop
scas
cmc
decl
ret
mov
push
lea
sti
mov
mov
adc
lret
add
scas
cmp
shll
sbbl
fdivl
adc
sbb
inc
outsl
mulb
xchg
stos
xor
lea
mov
pop
dec
loopne
mov
or
push
dec
jg
jle
aas
jne
test
cltd
push
adc
popf
jo
std
jno
hlt
loop
adc
rcrl
inc
and
jo
jbe
and
push
rcrb
adc
xor
sub
aas
inc
incl
daa
out
icebp
inc
add
push
outsb
or
daa
inc
jge
test
jg
rorb
sbb
xor
inc
jl
add
push
idivb
inc
cmp
aaa
andl
out
ljmp
jl
test
or
inc
les
sti
stos
enter
adcb
or
mov
add
mov
inc
fadds
jl
xchg
add
push
mov
inc
shlb
jp
jb
dec
nop
dec
icebp
imul
and
sbb
adc
scas
push
lods
aaa
sbb
inc
push
xchg
arpl
push
ror
add
clc
dec
loopew
lds
inc
repnz
pushf
xor
cmp
shlb
sub
sbb
adc
clc
xor
je
addb
xchg
push
adc
push
lock
imul
adc
dec
sub
fbstp
loope
push
shrb
inc
mov
adc
sub
cmp
cmpsb
aaa
jb
cmp
adc
add
push
test
inc
out
clc
ljmp
jne
cmp
mov
lea
mov
mov
dec
pop
jg
test
mov
jne
mov
loop
bound
mov
jne
inc
test
jmp
push
mov
clc
adc
test
jb
mov
sbb
out
bound
les
xchg
xchg
push
rorb
mov
mov
adc
aaa
jp
adc
movsl
pop
mov
movsb
mov
xor
repnz
jg
pop
mov
pushf
test
lock
cli
lock
jno
dec
adc
mov
sub
xor
xchg
cmpsb
call
inc
in
and
push
inc
pop
add
xor
cmp
jo
jns
je
lcall
push
clc
cmp
xor
aam
es
call
loopne
add
rolb
inc
push
xor
pop
or
rolb
icebp
aaa
call
icebp
in
or
xor
repnz
xchg
jg
mov
es
lds
testb
mov
divl
pushf
pop
leave
inc
push
sbb
mov
add
gs
mov
cmp
xor
lock
rorb
jb
adc
int
push
icebp
add
cwtl
mov
ss
push
jno
test
cli
cmp
loopne
cmp
xor
sbb
push
aas
cmp
or
and
scas
outsb
adc
and
cwtl
jge
mov
inc
jb
push
negb
loopne
xchg
mov
sbb
or
push
cli
in
dec
inc
mov
jne
cltd
add
jno
fidivrl
inc
mov
insb
mov
jg
mov
inc
and
add
and
in
sbb
push
repnz
sbb
mov
adc
in
incl
jo
iret
test
lret
aas
jl
and
jne
mov
pusha
enter
loopne
xor
jno
test
and
scas
push
out
add
mov
push
or
mov
in
jb
mov
aaa
jbe
sbb
add
sub
mov
rclb
xchg
inc
ret
lock
fcomi
or
xchg
test
sbb
push
jno
test
lea
add
mov
ss
bound
daa
mov
mov
lock
jo
push
je
xor
in
dec
mov
mov
cld
loop
adc
add
insb
andl
xchg
mov
movsl
mov
lret
lock
mov
sbb
inc
pop
call
repnz
jae
sbb
in
mov
dec
inc
out
mov
es
jl
test
hlt
push
cmpsb
aam
dec
ljmp
js
xor
je
mov
xor
jno
adc
or
xchg
jno
divl
mov
in
ja
xor
or
fsubrp
cwtl
jo
sbb
jbe
loopne
xor
addb
test
or
lcall
adc
mov
pop
pop
inc
mov
jle
mov
jg
adc
mov
mov
mov
inc
mov
ret
mov
js
mov
outsb
adc
push
hlt
arpl
pop
push
mov
pusha
xchg
sbb
cld
xor
push
cwtl
or
push
xor
js
fcomps
cmp
inc
dec
jne
jnp
jmp
mov
push
adc
andl
aam
push
add
dec
loope
adc
mov
jle
jmp
add
cmp
mov
add
je
add
and
clc
and
and
lahf
test
jle
adc
mov
jae
mov
enter
pop
imul
ret
enter
mov
xor
pop
add
mov
pop
mov
jns
xchg
shrl
mov
jmp
add
cltd
sbb
addb
pop
and
test
or
outsl
xor
out
pop
sbb
add
bound
sub
lods
or
call
mov
shll
test
notl
jl
push
fsubl
lds
xchg
sbb
mulb
mov
in
add
dec
push
inc
mov
rclb
addb
jecxz
add
lock
mov
adc
popa
and
pop
xchg
mov
adc
push
test
call
std
incl
push
mov
gs
mov
cli
roll
cmpb
pop
mov
xor
outsb
add
pop
adc
or
fistl
xorl
xchg
or
push
and
cmp
and
data16
jb
cmp
ret
or
pop
push
xchg
rolb
lret
loop
loopne
test
call
rolb
sbb
bound
pusha
clc
add
push
jb
and
shl
dec
or
movsb
xchg
add
mov
insb
enter
out
je
shrb
mov
adc
jo
jno
or
lea
add
fsubrs
xchg
add
les
outsl
mov
push
inc
xor
push
into
push
lret
or
inc
push
mov
ljmp
push
ds
clc
adc
push
pop
jb
adc
jo
cli
nop
nop
rcrb
rcrb
js
adc
pop
repz
aas
adcl
es
rcrl
pushf
je
sti
mov
jle
sub
shrb
rorb
xchg
inc
adc
pop
enter
add
js
je
add
pushl
rolb
fucomi
jle
dec
pusha
inc
lds
movsb
iret
not
lods
cs
aam
testb
push
xor
lret
xor
enter
insb
sub
imulb
inc
lcall
add
push
push
jb
cmp
push
cli
add
call
dec
call
xchg
incb
mov
xchg
adc
sub
lret
and
shlb
ljmp
xlat
call
add
xor
xor
adc
sbbb
xchg
sub
je
push
enter
cmp
test
cmpsb
add
xor
les
xchg
add
cmp
je
mov
in
mov
cmp
insb
stos
sbb
jmp
cmpl
jmp
orb
sub
cmpsb
mov
xor
rclb
mov
push
outsb
cli
loopne
sbb
mov
sbb
sbb
mov
inc
jle
pop
pusha
inc
ret
add
add
call
mov
pop
dec
adc
xor
aam
jne
sub
call
call
incl
add
pusha
or
bound
adc
nop
cmp
and
cmp
test
ds
push
xor
pop
pop
rclb
jecxz
out
lods
adc
scas
mov
cmp
push
mov
mov
adc
push
jecxz
cld
sub
mov
test
addr16
in
mov
rorb
and
ljmp
mov
lar
into
add
mov
xor
push
push
push
add
add
jp
daa
outsb
or
hlt
cmpl
add
xor
loopne
call
add
mov
je
fbstp
or
mov
sbb
inc
aas
jmp
adc
push
xchg
mov
jmp
add
sbb
lcall
int3
fisubrl
xchg
jo
rclb
rolb
pop
testb
xchg
sub
shlb
fdivs
cs
scas
pop
dec
cld
rcrb
mov
push
jnp
jne
mov
inc
cwtl
inc
leave
inc
nop
xor
add
adc
call
push
mov
stos
clc
ljmp
in
cmp
js
fnsave
mov
add
cli
outsl
and
mov
loopne
lods
pop
pushf
jp
add
pushf
loop
mov
and
push
cwtl
mov
pop
enter
std
es
mov
push
mov
inc
sbb
push
mov
push
mov
mov
adc
popa
mov
loopne
hlt
or
lock
aam
out
sbb
orb
test
push
hlt
and
popa
arpl
ja
pushl
xor
cld
loopne
mov
pop
in
lods
jmp
add
in
inc
popa
ret
adc
sub
inc
addr16
sub
and
je
out
les
jp
jns
loopne
pop
call
add
lods
adc
pusha
lock
mov
jnp
mov
xchg
mov
push
ja
loopne
shr
fwait
out
mov
les
mov
pusha
aad
cmpsb
movsb
adcl
adc
push
js
test
je
adc
add
push
xchg
in
test
sarb
add
push
jmp
mov
in
adc
jbe
mov
jge
pop
pusha
or
jle
push
xor
or
cmpsb
fs
pop
call
in
mov
je
aam
push
cli
sbb
push
or
out
pusha
add
add
and
stc
sbbb
lods
sbb
add
pop
ds
pop
inc
or
enter
xchg
mov
mov
add
pusha
sub
adc
int
cmp
es
xchg
dec
jp
fldenv
inc
mov
mov
cmpb
repnz
mov
das
and
mov
rolb
fsubrl
lock
push
call
push
fdivl
call
pop
sbb
jno
stos
pop
mov
add
push
mov
in
xor
incb
inc
lock
jmp
mov
out
pop
jo
test
rcll
mov
repnz
pop
call
adc
mov
pop
stos
call
sub
ret
mov
hlt
push
or
sub
add
das
dec
call
ja
sar
es
push
je
cmpb
pop
cld
add
xchg
ret
int3
rolb
pushl
or
mov
push
inc
pop
das
jl
popf
add
dec
movb
mov
inc
lcall
mov
jecxz
xorl
and
inc
xchg
xchg
mov
push
in
insb
add
add
incb
add
out
inc
mov
movsl
xor
insb
xchg
sub
hlt
jg
or
clc
lds
mov
pop
test
andb
lcall
mov
inc
cmpsl
icebp
add
test
jg
xor
or
mov
or
push
punpckhwd
andl
test
icebp
xor
push
xor
pop
jbe
pop
inc
push
or
jg
movsl
jo
vmread
jae
jo
repnz
insl
pop
cmp
out
aam
xor
iret
jo
adc
jo
fistps
or
xchg
out
add
jne
xchg
ss
rorb
dec
jl
adc
and
arpl
jge
cli
cmp
jl
and
mov
lret
inc
sbb
cmp
mov
or
add
push
dec
aaa
cltd
mov
imul
mov
jns
orb
stos
sbb
xchg
pop
and
repnz
add
pop
pop
insl
mov
mov
fsubrs
cmp
adc
xor
popa
rolb
adc
push
adc
in
call
in
jo
or
push
fidivs
cmp
cld
push
aaa
adc
adc
inc
test
incb
adc
dec
sbb
mov
jge
sbb
or
out
je
push
cmp
pop
cmp
add
jbe
fsubp
and
lret
mov
mov
nop
pop
mov
hlt
mov
pop
xor
in
pop
add
inc
ljmp
push
mov
cmp
mov
sar
popf
xchg
adc
cmpsl
fiadds
push
mov
movsl
sub
add
mov
incl
xor
call
fwait
jo
notb
stc
adc
inc
inc
stos
adc
mov
or
push
std
lahf
mov
jb
xchg
pop
mov
pushf
add
add
and
xor
pop
push
jmp
pop
sub
jo
test
jo
push
xor
inc
pop
cli
mov
mov
xor
or
outsb
or
jns
add
add
loopne
sub
mov
repnz
jp
sbb
sti
fbstp
and
jl
and
inc
lods
icebp
or
jl
mov
push
jl
call
xchg
mov
push
mov
ret
sub
mov
push
push
sub
sub
rol
test
ja
push
test
jo
sbb
movsl
out
adc
inc
xor
je
pusha
push
xor
add
mov
pop
inc
push
mov
mov
jmp
jo
push
andb
xor
xchg
call
mov
sub
xchg
clc
sub
xor
dec
cmp
cmp
and
and
sbb
add
shlb
mov
sbb
cmpl
or
jl
and
sbb
add
xchg
cmp
in
or
mov
xor
inc
lahf
cld
out
and
je
aad
loop
add
mov
and
add
mov
stc
or
jbe
cli
sbb
add
js
ret
pop
ja
out
les
cltd
push
add
lea
andb
mov
xchg
push
lods
xor
jno
or
xor
cmpsb
adcl
fldt
fimuls
je
mov
shrb
cmp
pushf
cmp
jle
ficompl
addb
je
or
incl
dec
sbb
cmp
add
cmc
mov
inc
push
lock
or
fildll
je
xchg
mov
mov
lods
xor
jg
pop
movsl
test
inc
loop
nop
cmp
mov
cmp
mov
xlat
cmp
loope
and
or
call
or
add
adc
inc
jo
add
mov
lods
mov
xor
es
es
inc
push
bound
rolb
leave
add
icebp
mov
div
jns
cli
fistps
lret
or
sbb
and
data16
mov
push
std
lock
jecxz
call
pop
mov
push
push
add
aam
cmp
push
mov
or
pop
jae
popf
jb
push
sar
inc
cmp
mov
mov
clc
mov
mov
daa
mov
call
loopne
adc
jo
sub
or
ljmp
pop
push
and
addr16
add
out
dec
test
xor
cli
push
xor
pusha
in
add
cli
aaa
test
lret
mov
sub
in
decl
sysret
icebp
pop
enter
or
inc
mov
pusha
pushl
shrb
mov
add
push
and
lret
fs
ret
test
inc
mov
cltd
or
add
or
cmp
dec
scas
xchg
hlt
pop
and
lock
inc
push
fdiv
push
add
mov
out
hlt
add
lock
loopne
mov
mov
add
xor
jne
xchg
or
push
stos
icebp
pop
inc
push
ftst
lock
mov
sub
lock
mov
push
cltd
xor
xor
xchg
out
mov
pop
fcoml
aam
les
ret
std
push
pop
jbe
push
mov
or
push
jne
jb
outsb
push
adc
mov
lods
add
out
enter
loop
call
sbb
outsl
fs
jb
subl
outsb
clc
mov
negl
lods
push
and
mov
add
xor
add
mov
cmp
shlb
cmp
push
sbb
add
inc
inc
orb
add
outsl
int
bound
cmp
into
dec
sub
inc
mov
sub
sub
add
add
sub
insb
dec
mov
in
jbe
rcr
lods
adc
call
inc
mov
call
jb
or
lock
add
pop
xor
push
jmp
hlt
es
test
mov
xor
pop
insb
jmp
mov
mov
in
in
dec
mov
fisttpl
and
inc
or
mov
nop
inc
inc
loopne
adc
xchg
testb
loop
push
aaa
fstl
or
cld
or
mov
mov
incb
inc
push
push
mov
pop
or
mov
fwait
outsl
test
cmpsb
mov
test
sub
in
imul
pop
jmp
mov
mov
rcrl
and
mov
les
mov
mov
mov
mov
or
mov
add
xchg
cmp
les
pop
and
mov
push
mov
outsl
mov
sub
into
mov
inc
jg
sub
xor
aam
push
fcoms
insb
dec
fcmovnu
or
and
out
xadd
mov
cli
inc
push
aam
inc
xlat
outsl
sbb
jl
in
std
mov
out
dec
mov
pop
xchg
outsl
mov
lret
mov
rolb
inc
popl
mov
imul
mov
shrw
call
aam
mov
add
mov
int
cmp
std
mov
lods
fnstenv
or
imul
sar
testl
push
mov
inc
xchg
ret
jge
fcomip
mov
stos
adc
sahf
inc
push
xchg
shlb
div
inc
cmp
or
stos
sbb
dec
push
mov
mov
add
in
mov
or
dec
and
clc
mov
push
dec
and
rol
fisubl
outsl
loopne
fnstcw
mov
sub
outsb
inc
imull
ret
mov
dec
adc
mov
xor
andb
mov
pop
call
lock
sarl
ret
or
cmpsl
dec
dec
xor
adc
mov
inc
inc
pusha
and
mov
js
add
pop
loopne
sbb
mov
dec
inc
inc
inc
mov
incl
or
adc
jmp
bound
push
call
mov
lods
mov
or
or
push
outsl
lods
push
cmpsb
push
pop
inc
cmp
movsl
mov
or
inc
dec
pusha
or
pop
mov
inc
push
hlt
or
outsl
outsl
sbb
clc
bound
stc
push
or
mov
mov
or
ljmp
pop
and
jo
sbb
clc
adc
mov
or
pusha
sub
movl
mov
add
push
jbe
mov
mov
add
es
addl
jnp
dec
jb
mov
pop
pop
gs
dec
shl
pop
stos
stos
or
daa
adc
pop
scas
rorl
pop
fdiv
ljmpw
sbb
adc
ret
loope
es
add
sbb
stos
or
cltd
ret
mov
or
shr
movsb
and
xchg
pop
push
jmp
jg
sbb
stos
inc
add
or
insb
mov
dec
sbb
fisubrl
int3
dec
fsub
jmp
push
pop
sbb
mov
cmp
lahf
mov
sbb
mov
repnz
adc
xor
fld1
push
popa
scas
loop
ret
fdiv
xor
inc
loopne
dec
add
lea
pusha
shr
addb
mov
call
cwtl
popa
push
js
aam
dec
loop
cmp
adc
loopne
mov
ret
xor
loopne
jp
dec
sbb
push
mov
loopne
pusha
ret
mov
push
jecxz
cli
fwait
mov
addb
mov
pusha
ss
je
mov
fwait
and
push
mov
inc
mov
xchg
cwtl
jo
pusha
shll
lcall
loopne
mov
push
push
add
outsb
roll
repnz
bound
inc
xor
out
push
jne
insb
call
mov
push
fcoms
push
pop
cs
in
mov
adc
or
in
push
repz
sub
pop
loopne
adc
inc
fisttpl
in
fildll
call
sbb
lods
mov
das
and
dec
xchg
aam
or
dec
pusha
enter
add
dec
dec
lock
push
push
pop
outsb
mov
mov
cmp
loop
loopne
cmp
or
cmp
sub
aaa
inc
aaa
or
pop
insb
stc
sbb
jle
add
add
mov
lcall
jp
inc
int
xor
xor
dec
xchg
mov
jno
cmp
pop
adc
push
or
jmp
sahf
pop
jne
dec
scas
push
loopne
pop
add
loopne
add
cli
xor
cwtl
and
jg
loop
sub
lock
cld
outsb
inc
mov
loopne
pushl
adc
fs
inc
lods
xor
pop
jo
lods
mov
mov
and
add
call
inc
fists
call
cmovne
add
push
inc
mov
mov
pop
insb
mov
push
dec
sbb
js
sub
or
daa
aaa
mov
lods
nop
sbb
sub
adc
leave
or
or
add
lock
popl
inc
and
jo
xor
jp
sbb
and
mov
lea
jb
and
inc
push
movsb
mov
jg
sub
and
add
mov
jb
push
and
js
rolb
mov
push
ljmp
insb
xchg
push
and
aaa
or
dec
outsb
loopne
in
fisubrl
adc
and
enter
jle
call
and
cld
jne
ret
cld
sbb
mov
mov
lret
test
inc
pop
or
jo
call
mov
push
je
and
inc
clc
cltd
or
call
mov
xor
call
out
xchg
cmp
sahf
out
dec
std
mov
mov
jne
sbb
mov
adc
pop
pop
cmpsl
icebp
mov
nop
and
push
mov
sti
lea
loop
mov
mov
lock
xchg
inc
inc
or
add
and
outsl
pop
mov
add
data16
push
add
ret
ss
cmp
mov
repz
push
sbb
mov
je
sbb
std
jle
or
insl
dec
sub
pusha
cmp
mov
adc
mov
sbb
inc
inc
in
insb
add
inc
or
das
sub
pusha
addl
adc
adc
add
scas
pop
cs
or
dec
sbb
push
add
loopne
in
sub
dec
push
sbb
and
pop
xor
lods
inc
add
push
jle
pop
lods
ret
test
pop
cmp
adc
dec
je
pop
ret
jl
shll
cmp
xor
sub
cmc
lods
jns
cmp
ds
mov
jae
ret
xor
mov
ja
add
leave
xor
add
or
xchg
or
sbb
in
add
test
les
xor
neg
jmp
sub
mov
pop
enter
jo
mov
sbb
testb
call
mov
add
clc
cmp
push
push
inc
jb
pusha
pop
lods
clc
ja
sbb
lock
push
sti
divb
mov
leave
sub
add
mov
inc
xor
es
rclb
or
jmp
sub
mov
repz
cld
mulb
push
shrl
push
cmp
add
fistl
mov
cld
jl
icebp
add
mov
pushl
push
add
ds
jmp
mov
stos
addb
setp
sbb
lret
add
mov
inc
clc
movsb
xor
sub
ss
and
call
add
and
dec
nop
xchg
mov
sbb
and
call
mov
pop
or
test
push
add
dec
cli
adc
jmp
cmp
mov
inc
das
pop
mov
lock
sbb
cmp
sti
or
or
add
notb
pop
and
imul
pop
cld
xor
sbb
lock
jo
lock
test
cmc
sub
push
cmp
sahf
or
stc
pop
dec
inc
out
add
push
pop
xor
sbb
pusha
aaa
or
jb
enter
xchg
pop
dec
lahf
fs
push
or
loop
loopne
sub
mov
mov
push
push
adc
aas
inc
xchg
mulb
js
movsb
ss
add
loop
xchg
adc
sbb
push
or
mov
ljmp
add
lock
jb
cwtl
jp
adc
lock
inc
int
das
fcoms
push
cmpsl
test
mov
inc
orb
add
xorl
adc
mov
dec
sarl
mov
shrb
clc
das
and
lock
or
mov
and
mov
or
lods
dec
bound
inc
push
mov
jno
and
mov
dec
jg
add
lock
add
data16
test
mov
pusha
xchg
ss
xor
mov
xchg
sahf
or
inc
mov
cmc
cmp
sbb
push
scas
push
push
sahf
divl
sub
push
pusha
xor
dec
xor
add
out
add
bound
icebp
adc
adc
dec
push
xlat
and
jb
inc
or
mov
or
addr16
cwtl
or
add
shlb
mov
outsb
enter
add
sbb
pop
sub
mov
lret
js
movsl
testb
cli
cmp
mov
addb
mov
or
pop
pop
fidivl
movsb
mov
aaa
lret
cmp
add
adc
insb
push
add
push
jbe
std
fwait
or
cmc
std
test
mov
sbb
xchg
cwtl
push
mov
fs
or
adc
inc
jg
orb
icebp
pop
lods
pop
adc
push
adc
shlb
or
add
lcall
decb
or
adc
mov
andb
test
add
imulb
or
add
sub
or
push
sub
inc
aaa
movsb
push
int3
push
jo
adc
mov
lock
adc
aad
adc
xor
adc
dec
hlt
sub
push
cs
stos
xor
mov
pop
or
inc
lcall
repz
cld
and
adc
call
add
hlt
jmp
cli
cli
and
outsb
push
add
xchg
ss
rorb
add
aas
add
incl
aaa
fsubl
or
call
xor
adc
jl
push
xor
fisubs
push
jmp
nop
test
mov
inc
pop
rol
pushl
inc
xor
push
add
push
add
mov
lock
xorb
sub
pop
mov
push
addb
loope
push
push
xor
or
mov
or
add
mov
jge
cmp
adc
and
push
or
stc
pop
push
push
inc
loope
jg
das
xor
repnz
push
test
mov
or
sub
xchg
sub
inc
cmpsb
lret
je
dec
loop
add
in
push
fmuls
fdivl
push
adc
popa
addl
and
add
andb
fwait
mov
cmp
dec
adc
add
and
adc
loopne
repz
pop
adc
pop
cmp
xor
mov
xor
adc
sub
orb
shlb
cli
lret
add
aam
popf
lea
cli
push
frstor
mov
js
add
push
pop
dec
mov
insb
shr
addb
nop
movsb
stos
push
jg
inc
add
xor
inc
mov
aaa
rol
jmp
lret
push
sub
add
ror
hlt
cs
repz
or
xchg
add
lea
or
mov
jle
dec
adcb
inc
mov
js
mov
cld
call
add
or
mov
xchg
adc
loopne
ret
mov
mov
cmp
adcb
lods
jp
std
sbbb
add
mov
jae
add
icebp
hlt
mov
add
cli
cld
addb
clc
jg
or
xor
pop
mov
out
imul
mov
mov
sar
loope
or
xchg
imul
int3
dec
or
orb
inc
and
lcall
push
add
sbb
cmpsl
in
push
push
sbb
mov
mov
add
test
dec
js
push
inc
jle
mov
testb
sub
testl
pop
test
and
or
push
push
adc
adc
pop
adc
les
ljmp
mov
add
inc
addb
loopne
mov
or
or
shlb
add
jmp
jbe
ror
decb
arpl
clc
cmp
testl
inc
xchg
xor
add
dec
pop
push
inc
mov
pop
ds
push
xor
shlb
movl
clc
shlb
mov
movsb
cmpl
xor
push
push
mov
rolb
sbbl
sbb
dec
ds
xor
pop
mov
push
sete
add
notl
and
pusha
jmp
rorb
jp
mov
sub
dec
add
xchg
shlb
jne
mov
pop
lds
rcrb
cld
leave
sbb
adc
dec
push
push
xchg
push
push
nop
adc
dec
sbb
hlt
arpl
call
adc
add
lock
cwtl
sbb
sbb
cmp
sub
sarb
test
lock
in
mov
or
shl
and
mov
mov
sbbb
add
js
rorb
lock
pusha
inc
inc
jmp
rcl
add
lods
push
nop
cli
add
jbe
dec
sbb
lmsw
scas
xor
lods
push
push
jne
jl
add
push
push
nop
js
bound
ret
pop
inc
mov
testl
shrl
rcrb
push
xchg
lock
add
call
call
loop
inc
fdivs
das
mov
jbe
add
mov
xor
xchg
scas
ljmp
loope
jne
dec
push
fidivs
scas
sub
jle
imul
es
or
push
push
and
jns
xor
adc
loope
pusha
sbb
orb
addb
or
out
fisttpl
jb
adc
xor
or
or
das
decb
mov
sahf
xchg
pop
fstpt
out
insb
and
jle
nop
adc
clc
aad
pusha
or
push
cmc
pop
andb
cmp
movsl
lock
add
movsb
testb
pusha
adc
xchg
mov
mov
or
and
lea
push
loopne
loope
and
sub
mov
mov
push
push
pushf
loope
sub
insb
in
loopne
and
jne
push
xor
push
add
jo
jp
loopne
jb
lods
jl
push
jbe
inc
cld
pop
hlt
sub
lea
push
loop
add
bound
loopne
insl
hlt
or
orb
in
lds
add
pusha
lods
nop
push
call
and
stc
inc
mov
cmp
xor
add
push
or
xchg
div
movb
pop
inc
or
cld
push
bound
or
shlb
or
adc
addl
js,pn
mov
cld
adc
out
std
inc
shlb
arpl
push
and
shll
jne
lcall
loopne
loopne
xor
dec
daa
mov
into
ss
cs
jae
insl
andl
adc
pusha
lea
cmp
dec
orb
inc
dec
jb
jmp
sub
insl
push
dec
mov
aam
loopne
adc
adc
sub
and
cs
adc
repz
or
jg
xchg
loopne
pop
jbe
and
ret
add
fisubl
aas
mov
pavgb
ret
or
push
xchg
adc
jg
push
pop
jecxz
pop
sbbl
push
xchg
aad
es
loopne
pop
loope
loopne
push
iret
ljmp
ljmp
add
cs
shrb
mov
mov
mov
or
stc
push
loopne
pusha
dec
cmc
push
lock
fmuls
sbbl
lahf
mov
loope
push
xorl
lds
test
adc
in
pop
mov
or
jle
inc
pusha
sub
or
and
xchg
scas
dec
cmp
push
jecxz
jne
xchg
xor
sub
push
adc
ss
and
adc
jecxz
and
lret
std
xor
pusha
je
push
adc
cmp
and
adcl
les
jle
add
dec
pusha
cmp
push
leave
nop
push
add
inc
test
push
call
pusha
fsubl
call
lods
pusha
flds
into
shlb
or
mov
mov
push
pop
and
mov
add
out
or
mov
loopne
or
mov
xchg
push
inc
loopne
or
pusha
add
lods
bound
mov
call
cmovp
cli
out
add
push
jg
push
add
pop
add
add
loope
push
push
ds
dec
jmp
push
hlt
sub
adc
sbb
cli
mov
push
adc
push
sbb
clc
add
jp
loopne
jmp
mov
rolb
inc
pop
daa
add
jne
inc
mov
xor
or
std
dec
and
xor
sub
stos
add
push
fisttps
packssdw
mov
sub
ljmp
sub
jl
sbb
in
dec
inc
add
neg
in
push
mov
aad
ret
pop
stc
in
sub
sub
jg
xor
sub
call
inc
add
push
andb
das
push
xchg
sbb
nop
adc
or
push
nop
dec
mov
inc
in
test
lea
clc
paddb
out
and
jl
push
add
push
and
test
push
jo
push
adc
or
add
lock
test
xor
pusha
aas
je
out
inc
bound
add
vshufpd
and
leave
jno
or
push
lcall
mov
lea
mov
inc
bound
sub
sub
aam
add
and
into
addl
jb
xor
add
and
adc
push
jl
or
cmpl
hlt
and
mull
add
leave
lods
in
ljmp
andb
push
call
adc
mov
adc
xor
call
push
mov
jmp
ret
mov
clc
jmp
outsb
sub
inc
nop
xor
push
ss
pop
push
dec
test
pushf
jge
xchg
call
hlt
xor
shlb
enter
mov
jle
adc
fisubrl
loopne
call
cld
ljmp
inc
push
add
push
xor
movb
stos
xchg
push
fisubrs
clc
and
mov
push
and
and
mov
add
jb
ret
mov
add
pop
fs
test
dec
pushf
addl
aas
rclb
add
add
ljmp
dec
add
add
nop
popa
mov
mov
test
jmp
imulb
bound
adc
xchg
xchg
sbb
lcall
or
out
add
adcb
das
and
jne
mov
cmp
jbe
push
xchg
loope
fstpl
inc
jmp
loop
mov
push
dec
mov
hlt
jo
ds
and
call
ret
dec
mov
add
add
sub
orl
dec
mov
loopne
std
jo
jne
insb
test
mov
dec
xor
push
gs
cwtl
and
rcl
std
pop
pop
push
fcoms
lret
outsl
ds
add
testb
mov
mov
cwtl
dec
xor
xor
pop
push
or
mov
jle
push
push
decl
and
xor
ljmp
and
jb
xor
cmp
movsl
fisubs
adc
mov
inc
in
mov
es
and
adc
mov
add
push
fdivrs
je
lock
push
add
push
ffree
inc
jmp
jo
fimull
stos
or
cli
bound
jb
aaa
add
call
addr16
pop
shlb
and
fwait
ljmp
test
jl
lock
pop
insl
loopne
push
xchg
mov
call
clc
iret
add
dec
push
pop
adc
lods
pop
and
hlt
dec
cmc
add
xor
je
out
andb
pop
aaa
call
test
packssdw
adc
mov
xor
pop
mov
mov
mov
push
dec
and
sar
add
testl
nop
shl
jo
dec
mov
adc
pusha
adc
mov
rcl
cmp
push
aad
mov
sbb
jle
add
loopne
adc
ljmp
jg
jbe
fdivs
mov
rorb
mov
mov
data16
jmp
nop
or
mov
movsl
shlb
filds
lods
mov
jp
and
xchg
mov
xchg
cli
push
cwtl
inc
sti
movl
mov
repnz
push
les
test
jo
push
or
ljmp
cld
int3
int
adc
pop
cmp
jmp
xor
add
add
xor
mov
jbe
jmp
shlb
test
pop
or
movsb
in
push
mov
ja
dec
mov
inc
test
scas
nop
pop
or
pop
mov
add
je
test
add
add
xchg
cmp
jbe
xor
or
push
jmp
xchg
shrl
jb
fcoms
movsb
mov
divl
lea
and
inc
les
and
test
jle
ficoms
fisubs
inc
jbe
filds
mov
push
pusha
mov
hlt
add
mov
sbb
sub
mov
sbb
xchg
push
mov
mov
mov
andb
es
insl
xor
stc
out
movsb
mov
mov
or
or
xor
xchg
lea
test
or
clc
jne
xor
cmp
push
fcmovb
pop
push
call
sub
mov
push
stos
movsb
push
lret
or
adcb
add
mov
adc
out
adc
mov
orb
mov
cmp
jb
dec
lock
incb
add
hlt
xor
cli
test
push
jbe
adc
dec
loope
mov
idivb
loope
mov
pop
and
push
cmp
ret
push
shll
shr
sahf
mov
je
push
loope
add
shr
xchg
add
push
lods
push
sbb
test
ljmp
mov
dec
inc
sbb
mov
or
mov
add
jno
inc
jns
loop
lods
lret
adc
and
pop
jbe
cld
pop
pop
mov
adc
push
mov
or
inc
cli
jmp
mov
sbb
pop
bound
cmp
repnz
jge
xorb
jle
mov
push
scas
add
ja
mov
adc
pop
and
xor
add
jmp
xor
clc
mov
outsb
adc
push
add
mov
testl
pushl
je
jmp
cld
xor
add
push
mov
je
ss
aam
dec
push
pop
cmc
add
push
push
pusha
imul
rclb
adc
fsubp
mov
mov
scas
adc
aam
sub
mov
jae
and
lea
lods
bound
sub
jb
inc
mov
cmp
jae
fiadds
sbb
lock
add
insb
jmp
jb
or
test
ret
push
and
lret
jmp
inc
out
adc
add
or
cli
decl
mov
dec
xchg
test
xchg
pusha
lret
les
or
ficoml
push
scas
imul
add
or
jg
insl
xor
adc
push
adc
cld
adcb
xchg
pushf
inc
jmp
or
xchg
push
dec
xchg
xor
insl
xor
xor
fs
and
mov
adc
xor
push
add
or
xor
xchg
and
addl
cs
mov
pop
lea
or
rorl
mov
add
mov
ret
adc
sbb
or
mov
cli
push
xchg
sbb
dec
inc
mov
faddl
ss
or
daa
mov
or
enter
mov
push
sbb
adc
sarb
decl
and
dec
add
dec
pop
sub
lods
fbstp
jno
mov
sbb
add
sub
ljmp
adc
xor
movsb
sub
push
dec
mov
or
mov
jle
cmpl
orb
out
lea
add
sub
loopne
cmpb
push
push
call
and
pushf
outsb
cmp
notl
and
dec
mov
jl
aad
int3
xor
enter
xchg
sub
pop
ficompl
je
adc
iret
pusha
cmp
addb
cmp
push
xchg
xchg
pushf
or
notb
add
int3
or
xor
in
or
cld
iret
xor
hlt
pop
adc
add
sets
call
dec
testb
dec
movsl
stos
lea
pop
add
outsb
adc
je
adc
dec
test
jb
push
scas
cli
adc
mov
xchg
adc
and
test
or
mov
repnz
cli
mov
cmpl
mov
mov
rcll
or
into
test
je
frstor
hlt
sarb
adc
inc
movsl
sub
in
pop
dec
cmpl
dec
stos
mov
pop
sbb
adc
adc
add
rcrl
adc
inc
mov
test
add
adc
scas
add
pop
dec
addb
repz
mov
fildll
enter
adcb
mov
inc
add
add
inc
movl
or
or
roll
loop
mov
sub
rclb
movsb
push
push
lret
call
adc
mov
lret
pop
adc
adc
rolb
ret
push
push
roll
cmp
rorb
sub
mov
dec
call
clc
cmp
or
jnp
xor
cltd
fdivp
decl
add
or
add
js
decl
mov
add
and
rolb
pushf
pop
mov
add
inc
pop
xchg
ret
cwtl
ja
orb
pop
movsb
rol
and
add
loopne
insb
inc
add
outsl
adc
mov
sub
inc
add
movl
lock
and
mov
jp
cld
mov
aam
sahf
push
add
dec
mov
int3
test
push
pop
push
rorb
rorl
jo
push
jo
test
out
add
shl
js
or
add
testb
lock
mull
mov
mov
mov
jg
in
or
add
push
sar
xchg
mov
fmuls
ss
inc
test
adcb
ss
mul
add
push
add
divl
cmp
mov
dec
sub
xor
aam
insb
mov
mov
fcmovb
fdivrs
incl
or
roll
and
jmp
popa
mov
push
mov
hlt
push
push
or
out
dec
sbb
ds
adc
mov
push
push
adcb
pop
pop
movsb
ret
or
ret
data16
or
cltd
xchg
loopne
pop
cs
orb
mov
test
push
rcr
cld
lret
sub
push
mov
sete
push
cmpb
out
fiadds
inc
adc
into
add
aaa
pushf
or
dec
jno
push
push
test
xor
sbb
jge
cmp
xor
add
aaa
add
je
or
es
cmc
inc
mov
xlat
cmp
sbb
xchg
cli
sub
shrb
imul
inc
ja
call
popa
loopne
pop
adc
lcall
pop
cmp
cmp
outsl
lcall
out
shr
or
inc
push
sub
push
adc
lret
xor
imul
xchg
mov
adc
cmc
or
in
call
jecxz
xorb
sub
adc
or
aad
lock
cli
or
mov
push
mul
je
pushf
dec
add
add
sub
shll
xor
fisttps
sbb
jbe
insb
and
jb
add
loopne
test
ret
jo
xchg
or
aas
push
lds
gs
scas
xchg
push
pusha
andl
dec
mov
pop
cmpl
or
rorb
add
dec
mov
jmp
sub
cwtl
aas
push
inc
jle
and
pop
popa
pop
insl
push
loopne
mov
ret
and
aam
nop
xchg
cwtl
loope
mov
jb
js
sbb
rcrb
cld
loopne
hlt
jo
lods
cmp
fdivr
fdivs
mov
push
hlt
nop
sub
pop
loopne
popa
mov
inc
mov
add
sbb
push
loope
lret
or
scas
or
rcll
cld
aam
push
inc
inc
fcomps
dec
push
or
jmp
hlt
leave
adc
mov
or
lock
jp
inc
sub
loopne
adc
cld
shll
loopne
mov
pop
jmp
cld
jo
add
mov
xor
and
pusha
add
fsubp
add
mov
dec
add
pusha
cmp
sbbl
mov
icebp
in
sbb
pop
adc
call
lock
inc
or
xor
mov
push
mov
cmpsb
sbb
imul
mov
addr16
xor
pop
lret
pop
pop
mov
out
cld
ja
clc
cltd
pusha
adc
add
in
sub
test
push
adc
pop
inc
pop
insl
adc
push
push
fs
mov
cmpsl
imul
add
adc
push
shrl
sbb
fnsave
sbb
icebp
add
iret
mov
mov
add
cld
jo
clc
and
insl
cs
sub
loopne
add
fadds
sub
fucom
pop
pop
cmpsb
lock
in
push
aad
pusha
mov
pop
mov
push
xchg
mov
xlat
or
movsb
data16
xor
mov
nop
js
mov
sub
pop
fcmovnb
cli
or
or
push
std
or
add
or
xchg
fcomps
add
dec
stos
sub
sbb
movsl
sub
sbb
adc
fldlg2
sbb
add
out
cld
outsl
lcall
in
push
lock
aam
mov
insl
mov
scas
stos
sbb
add
push
xlat
insb
movsb
mov
int3
push
das
jo
cmpb
xor
mov
sbb
shrl
sbb
cwtl
nop
sbb
xchg
subb
lods
gs
aaa
out
add
dec
adcl
test
push
cld
add
dec
stos
xor
stc
mov
and
mov
ret
mov
add
testl
stos
lock
cmp
mov
add
push
icebp
add
loop
pushw
mov
mov
xchg
cwtl
jbe
add
shr
dec
mov
fldt
mov
or
andb
out
mov
insb
mov
jo
jp
push
pop
jle
loope
aad
jo
daa
mov
clc
outsb
mov
push
sbb
xchg
mov
push
or
push
xor
xor
or
ret
sbb
push
jl
jne
push
pop
in
add
jno
mov
or
push
add
sub
push
push
sub
lock
push
mov
push
xchg
sub
movsb
loop
cmpsl
imul
mov
rcrl
mov
jb
hlt
rorb
mov
xchg
mov
enter
push
ja
adc
scas
loopne
sbb
or
push
jmp
lods
jae
lock
lock
jne
ds
xchg
imul
push
pop
std
in
add
mov
das
xor
adc
add
add
jnp
sbb
fidivl
cmpsl
pusha
mov
pop
sbb
jp
int3
pop
jp
push
ja
and
sbb
push
ja
push
cwtl
dec
add
sti
adcl
dec
imul
push
adc
push
jno
sbb
sbb
push
add
mov
repz
sbb
lock
lock
xchg
stos
out
sbb
and
inc
shll
cmp
jo
test
add
jl
cwtl
inc
faddl
lock
je
pop
shll
push
out
or
loopne
adcb
lods
add
push
push
dec
lock
getsec
mov
or
rclb
sbb
jo
sub
lods
stos
adc
movsb
jo
and
push
arpl
sub
sub
test
outsb
xor
int
sarl
push
pop
cmp
dec
imul
push
add
stc
xor
xchg
pusha
test
or
or
stos
fmull
imul
push
cmp
lods
jae
and
cs
cmpl
sbb
lret
lea
pop
adc
fwait
or
stos
dec
push
dec
xor
cmp
mov
sub
add
xor
sahf
or
lcall
push
xchg
add
dec
mov
stos
xchg
addb
decl
push
stos
jbe
push
sbb
xchg
adc
bound
stos
push
enter
stc
xlat
mov
xor
cmc
adc
add
jmp
rcll
cmp
xor
out
imul
add
sbb
add
stos
sbb
mov
fidivl
movsl
push
testb
popf
add
stos
cltd
adc
cmpsb
cmp
xchg
lea
jns
cmpl
ret
in
int
mov
mov
scas
push
sbb
mov
repz
repz
repz
jp
jb
push
xor
repz
pop
pop
push
push
repz
repz
dec
inc
inc
ds
repz
cmp
xor
sub
xor
repz
push
sbb
adc
xor
repz
or
add
cmpb
div
out
push
ljmp
loop
fcmovbe
ror
popa
sahf
cmpsb
imul
add
mov
sahf
push
sbb
mov
jns
cmpsb
jns
mov
lcall
lcall
pop
push
push
jns
cmpsb
jns
dec
inc
inc
cmpsb
jns
cmpsb
cmp
xor
sub
and
sbb
adc
cmpsb
jns
or
add
shlb
fcmovbe
xor
repnz
push
ljmp
loop
fcmovbe
ror
xor
xor
mov
xchg
lock
lahf
mov
sub
sub
pusha
movsb
mov
stos
add
and
mov
shll
stos
mov
mov
inc
xor
imul
pop
push
sbb
jbe
inc
test
sbb
xchg
xlat
xor
repz
aaa
xor
outsb
push
lcall
pop
push
push
mov
scas
imul
loopne
or
lcall
add
sbb
es
lcall
add
jbe
test
or
inc
add
push
decl
cmpsl
imul
dec
roll
add
mov
sbb
pusha
xor
loopne
xor
call
push
shll
rcrl
cmpsb
mov
jo
dec
xchg
movsb
add
lcall
pop
or
cmp
fnstenv
in
loopne
pop
add
add
add
dec
cmpsl
sbb
push
sbb
or
cmpsl
loopne
mov
cmp
stos
movsl
mov
int3
shll
mov
sbb
loopne
mov
add
and
adc
pusha
mov
lcall
sbb
dec
push
jb
imul
mov
aas
andb
jp
adc
sbb
insb
and
push
push
mov
jno
add
stc
cmpsb
mov
xor
inc
stos
in
push
jmp
imul
fisubl
das
sbb
mov
or
test
lcall
fadd
inc
and
add
sub
bound
addb
divb
inc
jne
sub
add
mov
shrl
jno
xor
mov
xchg
push
aam
sbb
jmp
cs
das
pop
movsl
pop
adc
pop
pop
sbb
mov
and
dec
adc
xor
notl
or
movlps
sti
addl
dec
gs
repnz
in
mov
ds
popa
pop
add
out
pop
dec
push
or
rcrb
pop
ja
sar
ret
add
popa
push
ret
lods
pop
loopne
add
popa
lret
pop
jb
ret
ret
xor
add
mov
sbb
add
push
data16
adc
test
sbb
jae
mov
mov
fadds
mov
ret
call
subb
aam
and
call
cmp
add
lcall
jne
call
pop
insb
dec
add
cmp
add
dec
or
xor
push
ret
pop
das
add
push
fidivrs
loopne
and
and
xchg
add
cmp
xor
cmp
adc
cld
outsl
or
jne
inc
mov
add
call
sbb
sub
and
outsb
loopne
mov
xor
mov
mov
pushl
add
bound
icebp
push
and
pop
mov
fisttpll
fucomi
pushl
or
push
add
jp
jg
add
push
ljmp
mov
pop
mov
lock
or
sbb
pop
lock
mov
add
add
or
adc
mov
call
add
or
or
xchg
inc
or
jl
je
jno
pop
cld
inc
xor
stc
adc
sub
xor
xor
push
cmp
push
nop
xor
cltd
xor
fwait
std
mov
cmp
call
addb
xor
cmp
mov
push
xchg
repnz
call
cmc
or
sub
add
jno
adc
je
fisubrs
sub
es
testb
and
push
inc
jo
lock
and
mov
add
loope
mov
addb
cmp
insb
call
clc
add
mov
jno
std
xchg
mov
sbb
add
sbb
cltd
es
loopne
insb
mov
cwtl
inc
pop
mov
mov
pop
cmp
and
jo
and
jo
mov
andl
test
imul
add
popa
pushf
pop
inc
roll
jno
call
pop
outsb
mov
loop
mov
in
and
and
or
pop
hlt
pop
lock
pop
jo
jbe
add
xchg
jnp
clc
insl
lds
push
sbb
push
sbb
cld
push
add
ja
call
jge
lret
outsl
push
or
jae
adcb
pop
cmp
xor
outsb
or
xor
cltd
push
aam
push
adc
lock
jbe
add
mov
in
or
cltd
mov
and
lock
sti
cmp
es
clc
fcomip
fneni(8087
lock
andb
add
and
ss
add
mov
mov
mov
cmp
xor
addl
add
jno
mov
std
inc
pop
mov
mov
add
xor
xorb
xchg
sbb
repz
xchg
jno
in
jmp
xor
inc
jne
mov
movsl
call
test
jno
dec
adc
push
mov
jo
ret
mov
hlt
add
call
jne
repnz
repnz
test
call
sbb
cs
xor
idivb
add
cmp
sbb
call
adc
xor
pop
add
mov
cmp
mov
inc
mov
pop
sti
or
jno
imul
jo
push
mov
test
popa
insb
xor
push
mov
lahf
inc
push
adc
outsb
xor
jne
mov
add
push
call
jo
add
ds
xchg
div
ds
mov
inc
push
jo
sbb
push
dec
xorb
out
call
mov
je
jp
xor
sbb
push
shll
fcmovbe
in
push
xor
sub
aad
add
sub
lahf
jae
lods
pop
aam
jno
inc
mov
aaa
in
scas
and
movsb
or
pop
cmpsb
fwait
lock
xor
mov
aaa
popl
adc
jl
xor
or
xchg
sub
jb
push
mov
test
mov
and
and
cs
mov
ljmp
in
fbstp
xor
hlt
add
cmp
mov
out
or
jbe
push
mov
lcall
and
bound
mov
cmp
push
push
scas
lock
jno
or
call
cmp
pop
and
arpl
les
clc
jbe
and
mov
add
mov
aad
or
pop
inc
add
xchg
clc
cmp
mov
mov
inc
jge
pop
or
clc
adc
inc
ds
or
test
insl
int
pop
mov
js
jbe
cmp
sahf
inc
mov
jl
lock
cmp
adc
mov
push
add
call
xor
lods
call
or
into
add
outsb
incl
sbb
out
cmpsb
jae
xor
sbbb
outsl
xorb
pop
or
sub
call
adc
or
pop
jle
sbb
add
movsb
sbb
out
leave
test
mov
rorb
add
or
xchg
mov
push
cmp
mov
and
xor
call
cld
cmp
inc
add
xchg
subl
pop
addl
mov
mov
or
addb
add
xor
int3
or
add
xchg
mov
pop
sub
xchg
add
xor
inc
and
and
add
adcb
lock
rcll
mov
je
mov
add
sub
push
mov
xorl
int
mov
add
andl
or
je
cmp
je
adc
fidivs
pcmpeqb
jb
mov
push
orb
xchg
mov
inc
sar
insl
xor
nop
ret
rolb
sti
fwait
mov
inc
nop
je
ret
movsb
push
cmp
movsl
je
ret
cmpsb
adc
ret
xchg
cs
stos
adc
ret
stos
je
ret
lods
inc
cld
in
mov
lods
je
ret
scas
adc
ret
mov
adc
insl
je
ret
outsb
add
jbe
or
outsl
hlt
ret
movups
addb
dec
incb
add
cmp
jo
inc
jmp
dec
fstl
and
mov
push
mov
mov
adc
or
push
add
lret
mov
jmp
push
ret
inc
test
pop
les
inc
arpl
sub
rolb
mov
add
sub
pop
les
mov
hlt
lcall
mov
data16
or
rol
jle
es
rorl
and
mov
dec
loopne
mov
adc
ret
sarb
call
push
call
in
imul
adc
rclb
mov
push
cmpb
add
out
mov
push
jne
push
add
imul
loopne
loopne
add
test
cmp
lcall
loop
fists
pop
inc
rolb
shll
dec
or
mov
push
hlt
jae
shlb
push
inc
and
cmp
ret
repnz
xadd
unpcklps
jbe
ljmp
sbbl
cli
js
addl
je
mov
push
shll
xor
sbb
loope
movsb
sbb
sbb
loop
cmp
incl
loop
add
ljmp
addr16
inc
jg
outsb
popf
mov
out
xor
adc
and
aad
push
add
adcb
add
call
cli
paddd
data16
or
inc
loope
pop
cmp
inc
sbb
xor
pop
mov
and
add
xor
bound
and
mov
ret
test
ljmp
pop
mov
out
jle
ret
adc
add
mov
das
test
nop
pushf
mov
pusha
dec
ret
sub
mov
add
add
lock
scas
lcall
jo
sub
popa
cmp
add
lds
repz
mov
push
loope
sub
adc
out
add
xor
push
sbb
ljmp
jle
dec
pusha
punpcklbw
clc
jle
in
add
fs
imul
pop
lds
pop
popa
add
add
das
xor
mov
xchg
inc
cmpsb
push
mov
dec
insb
clc
adc
jle
pop
aam
movsb
call
inc
loopne
loop
push
mov
add
arpl
add
std
mov
and
adc
add
arpl
scas
in
mov
insb
ret
pop
sbb
ja
out
outsl
in
and
adc
push
xlat
pusha
add
jg
shll
out
inc
or
lret
jbe
push
in
push
fisttps
dec
pusha
or
enter
js
adc
cs
inc
xor
loope
outsl
fidivs
loope
adc
fwait
push
call
or
stos
lcall
sti
scas
push
sbb
call
adc
add
ret
xor
add
add
test
adc
cmp
inc
in
adc
sbb
or
push
negl
sbb
adc
out
jge
xor
sbb
inc
adc
icebp
add
adc
loopne
enter
add
dec
jmp
and
pop
push
jo
jmp
push
cmpsl
sbb
xor
cmp
xchg
push
clc
into
adc
push
sar
pop
xor
jle
mov
test
repnz
stos
aas
add
dec
roll
dec
iret
fucomi
sbb
cltd
sbb
pop
push
fdivrs
push
pop
add
cmc
xchg
fdiv
sarb
lods
cld
shll
insl
pop
movsl
mov
out
mov
or
and
fsubrp
mov
mov
jg
push
inc
adc
sbb
jo
out
sarl
scas
popl
pop
mov
mov
stc
lods
and
stos
jmp
mov
int
adc
cmp
dec
shll
rcrb
sbb
orl
ss
loopne
ficomps
push
dec
push
push
stos
pop
sbb
popf
mov
shll
rcrb
ja
mov
aaa
cs
pop
push
xor
xchg
mov
sarl
mov
cs
xor
dec
pop
imul
aad
icebp
andb
xor
xor
mov
and
jno
adc
cli
cli
push
in
fbld
cmpsb
add
mov
and
xor
out
adc
cmp
cmpsb
int
aam
xchg
leave
sbb
jecxz
jg
jo
sbb
cmp
out
in
icebp
jne
jnp
fwait
push
mov
shll
cmp
inc
pop
jmp
pop
aad
jns
push
pop
xor
sbb
xchg
lahf
stos
mov
mov
mov
inc
jo
cld
cli
xor
xchg
orl
stos
lock
push
loop
sub
es
mov
inc
adc
pop
ljmp
cli
jo
les
xor
sbb
jo
add
ja
call
push
imul
insb
gs
popf
push
add
dec
or
mov
push
or
cmp
xchg
je
push
addl
lods
inc
popl
dec
add
sbb
jmp
cltd
add
loop
pop
rcrl
jb
nop
add
je
push
mov
add
js
and
mov
aam
adc
pop
push
push
jae
or
and
or
mov
mov
and
jb
add
mulb
xchg
inc
mov
sar
outsl
mov
outsl
inc
outsl
mov
inc
popa
je
push
sbb
bound
add
jo
adcb
pop
add
push
fisubl
push
mov
bound
sarb
dec
add
lcall
outsl
or
fldl
cmp
fiaddl
gs
mov
test
gs
je
push
int
mov
inc
cmp
shlb
or
inc
fadds
push
jbe
xchg
add
or
xlat
and
stos
imulb
out
test
je
fiadds
pop
sub
jle
pop
inc
jae
add
add
jb
fbstp
inc
and
gs
sahf
outsb
fs
mov
andb
inc
pushf
popa
mov
pop
imul
int3
test
insb
mov
insl
popa
and
cmpsb
cli
adc
jns
jo
scas
or
push
inc
dec
xor
push
das
xor
loope
inc
mov
adc
mov
imul
adc
gs
mov
imul
sbb
fdivs
loopne
jle
jbe
mov
bound
xor
mov
push
out
icebp
add
pop
out
add
mov
add
add
lods
gs
das
cmpsb
fdivp
inc
jbe
pop
lcall
sbb
sub
or
adc
icebp
das
push
imul
mov
jb
adc
add
mov
aaa
jl
add
mov
mov
dec
xor
ret
ret
ret
arpl
icebp
mov
movb
xchg
jb
lea
insb
push
stos
inc
cmp
jne
add
or
roll
cltd
gs
sub
jb
sub
lds
xchg
jae
ss
add
mov
js
and
xchg
or
cmpsb
inc
push
inc
add
jne
rolb
movsb
mov
and
fdivs
out
mov
inc
mov
xor
adc
test
ss
xor
and
pusha
fs
jg
dec
jo
add
mov
push
lock
in
add
sbb
mov
push
push
mov
and
mov
int
mov
je
add
sub
xor
lcall
mov
nop
insb
push
subb
mov
orb
adcl
push
mov
xorb
or
lea
xor
and
and
fsts
ljmp
in
xor
jne
mov
ret
pushf
inc
stos
push
and
or
call
pop
cld
mov
adc
mov
jo
sbb
jo
int3
js
sbbb
outsl
insl
adcb
fsubrl
rolb
sbb
aaa
mov
ja
cltd
andl
jp
cmp
mov
cmpw
cs
jns
mov
mov
aam
jo
add
insb
stos
mov
pushl
adc
jne
xchg
xchg
inc
int
sbbb
inc
sub
jl
cmp
ret
sbb
clc
loopne
inc
js
add
mov
clc
mov
leave
popa
inc
fs
ljmp
bound
icebp
lds
xchg
or
push
cld
fisttpl
push
outsl
mov
gs
adc
lds
dec
sub
out
xor
mov
xchg
popa
lds
push
test
xchg
xchg
jbe
push
xchg
movsb
lret
popa
fbstp
outsb
dec
add
dec
insl
add
jb
movsl
push
and
mov
rorb
inc
jp
dec
or
push
lods
inc
mov
inc
dec
les
and
jmp
cltd
pop
mov
mov
sahf
mov
imul
cmp
imul
jmp
dec
adc
lods
cli
add
adc
or
popa
mov
loop
inc
stos
add
add
fwait
scas
jg
ljmp
rol
shll
fmull
mov
ljmp
cmp
mov
jb
xorb
enter
xchg
arpl
push
cmp
rorl
ds
loopne
add
lcall
loope
test
sub
add
test
loop
fisubrl
xchg
sahf
sarb
lods
shrb
outsb
into
out
jbe
push
insb
imul
outsb
adc
inc
jns
inc
sbb
and
fs
ss
aam
xchg
xchg
jb
inc
loopne
mov
clc
punpckldq
outsl
popa
dec
push
imul
popa
cmp
lcall
ljmp
or
fbstp
ja
inc
bound
jg
loope
insb
add
sbb
decl
add
sbb
in
std
rolb
push
popa
xchg
jne
aaa
add
insb
mov
mov
stos
gs
pop
xchg
xchg
mov
and
jb
mov
xor
sahf
loopne
clc
dec
mov
add
ja
dec
lds
popa
add
cmpsl
jg
loope
outsb
jb
jb
outsl
fwait
adc
imul
cmp
mov
sub
aaa
jmp
sbb
mov
pusha
popa
imul
out
push
out
add
es
push
jne
mov
xor
inc
sbb
mov
inc
add
dec
dec
in
outsl
xorb
imulb
js
sbb
inc
push
scas
mov
loope
in
and
xor
inc
and
aaa
mov
add
pop
add
clc
int
cmp
push
or
int3
add
pushf
loopne
mov
decl
sbb
loop
mov
pop
xchg
or
xor
jo
je
loopne
pusha
and
cmp
mov
or
outsb
scas
repnz
push
mov
filds
push
loopne
ret
int3
loopne
add
aaa
or
insb
mov
loope
outsl
scas
jo
push
popa
push
push
jae
adc
sahf
fisubrl
ljmp
cmpsb
cwtl
loopne
mov
das
mov
mov
inc
xchg
loopne
mov
sbb
ds
shll
outsb
sahf
and
jb
flds
fsubrl
lea
or
xchg
pusha
ds
popa
bound
cwtl
cmp
sbb
incl
mov
int3
add
out
dec
gs
mov
and
orb
push
jl
pop
sbb
add
loopne
sahf
lock
mov
movsb
jb
stos
sub
js
addb
pop
stos
dec
or
dec
xchg
int3
cmp
outsl
jp
mov
or
loopne
sub
dec
jae
lods
loopne
mov
shlb
movsb
popa
adc
stos
push
push
xor
popa
jle
or
add
pusha
leave
pusha
push
push
adc
add
bound
in
or
add
dec
push
dec
pusha
in
fimull
cmp
cmp
popa
jae
inc
xor
stos
gs
adc
mov
push
loopne
outsl
ja
pop
stos
sub
jnp
je
in
and
shrb
inc
add
int
in
pusha
or
add
decb
gs
jmp
add
inc
subb
je
add
bound
adc
mov
in
imull
imulb
loope
inc
xchg
add
jae
mov
dec
mov
add
adc
cmpsb
and
mov
and
je
xchg
mov
mov
xor
mov
push
push
icebp
add
push
ja
pusha
loop
push
cmpsb
push
fcoms
outsb
or
stos
fs
into
mov
repnz
insb
add
bound
mov
mov
nop
mov
jb
push
add
add
cmc
outsl
jb
sahf
outsb
jae
lock
ljmp
lcall
aam
push
sub
test
inc
xor
ficoms
call
je
xor
push
sti
mov
jb
mov
aaa
sbb
xor
add
icebp
push
or
test
or
jae
inc
add
xor
loopne
inc
mov
push
fs
jb
push
adc
and
imul
inc
cmp
pop
sub
inc
xor
xor
pushl
hlt
sub
jno
or
push
xor
cmp
outsb
cmpsb
adc
fdivr
push
sahf
sub
jns
pushl
mov
push
xchg
gs
data16
xchg
nop
ja
xor
or
inc
insb
mov
incl
seta
cmovbe
andb
push
push
stos
sub
popa
cmc
add
jno
cmp
inc
sbb
in
das
cld
outsb
mov
sbb
ds
outsl
mov
fs
cmp
push
mov
push
mov
stos
add
sbb
mov
dec
sbb
xor
jns
dec
inc
rorb
jge
fbstp
fwait
jno
xor
and
inc
insb
addr16
push
mov
jecxz
xchg
outsb
push
jo
add
call
adcb
movsb
ljmp
fmuls
dec
inc
push
cmp
fwait
jo
sbb
add
jno
xor
in
icebp
enter
sub
mov
xchg
jo
adc
jae
scas
cs
outsl
addb
orb
outsl
sub
mov
fucomi
pop
arpl
jo
jo
test
into
icebp
dec
stos
mov
dec
mov
xor
sbb
mov
jo
mov
mov
dec
push
loopne
dec
mov
into
xor
mov
outsl
add
dec
xor
jge
sbb
jo
inc
mov
lock
adc
icebp
mov
adc
inc
jp
add
add
xor
jns
dec
inc
in
inc
mov
ss
pushf
jbe
mov
int
push
dec
pop
js
cmp
add
nop
repz
mov
scas
add
stos
outsl
out
adc
arpl
sbb
mov
jae
push
push
std
inc
xchg
jne
je
jo
dec
inc
bound
jo
out
xor
dec
dec
pushf
mov
and
ja
hlt
xor
dec
sarb
repnz
or
mov
xor
cwtl
inc
add
pusha
jb
xchg
fldt
jmp
in
xor
mov
notb
cli
add
icebp
ljmp
sahf
mov
add
ja
mov
sar
push
jo
stos
mov
jg
lock
mov
imul
jo
cld
aad
push
or
add
xchg
imul
bound
mov
es
out
add
mov
push
andb
jb
pusha
jae
cwtl
mov
add
cmp
or
shl
sbb
lret
jg
mov
jno
outsb
jno
xor
lea
sbb
or
xor
xor
push
xchg
outsl
mov
pop
add
mov
mov
add
or
imul
outsb
xor
mov
aaa
test
pop
ljmp
gs
jbe
inc
jns
jp
test
jo
mov
push
cli
add
scas
js
lock
pushf
jb
jbe
jb
sahf
arpl
push
sub
add
jne
add
sbb
repz
scas
jbe
mov
mov
jne
stos
jns
es
arpl
jo
loopne
add
ljmp
xor
mov
jg
mov
mov
cmp
mov
test
shrb
dec
rcrb
jno
lock
push
pop
fimuls
add
xchg
gs
cmpsb
or
mov
mov
pop
dec
mov
movsb
xor
push
ljmp
mov
ljmp
dec
ja
cli
pop
lods
cwtl
je
push
xchg
lock
stos
lods
add
and
push
mov
ljmp
jb
push
imul
gs
inc
insb
dec
outsb
dec
outsb
jb
sub
add
xor
les
cmp
jo
out
inc
add
push
mov
enter
test
mov
incl
mov
or
mov
and
sbb
push
mov
nop
movsb
mov
and
and
daa
repnz
xor
mov
add
imul
cmp
jne
inc
mov
dec
outsl
and
and
push
rep
ds
jb
add
pop
xor
ss
ds
push
lea
push
jb
xlat
inc
jae
xchg
roll
outsb
jl
outsl
mov
jo
xchg
jbe
addr16
add
inc
xor
push
mov
enter
mov
jl
inc
test
inc
lods
test
and
pusha
and
push
jne
mov
popa
arpl
dec
push
dec
inc
gs
dec
mov
popa
arpl
add
sub
sbb
mov
outsl
mov
mov
mov
mov
lods
gs
add
sub
jo
lea
add
inc
insl
jo
test
aaa
sbb
lds
imul
sti
push
movsb
xchg
adc
insb
bound
push
outsl
and
fdiv
es
pusha
add
push
sbb
incl
jp
sub
xorb
subb
pop
sar
and
sbb
fiadds
ja
jbe
insl
scas
stos
xchg
aam
test
mov
jae
outsl
xor
cmpsl
jb
data16
andb
test
les
fisubrs
mov
push
and
orb
outsl
add
shrb
inc
adc
xchg
subb
orb
fs
add
jp
fldenv
jae
adc
int
or
lcall
adcb
pop
add
or
arpl
movsb
and
xchg
lock
fmull
adcb
or
inc
dec
test
xor
outsl
fdivs
mov
or
mov
insb
xchg
add
popa
lds
call
inc
outsl
insb
fwait
inc
jl
sahf
mov
orb
mov
dec
cmc
cmpsb
pushl
inc
jb
addr16
daa
rclb
insb
inc
inc
xchg
jne
shlb
sbb
mov
bound
adc
add
add
xchg
loope
xchg
loop
lcall
in
cli
out
xor
ret
pushf
dec
push
dec
mov
inc
ret
sbb
addr16
shrl
add
pop
add
mov
loopne
sbbb
sbb
mov
pop
and
mul
cli
insb
rolb
imul
or
mov
mov
add
jns
mov
mov
sub
bound
cli
ja
aam
fcmovb
mov
push
rorb
loope
in
xchg
adc
sbb
add
loop
les
inc
inc
add
fwait
inc
lock
mov
add
adc
add
mov
sbb
pop
dec
adc
rcrl
add
xor
lods
rcll
les
test
jo
xchg
sbb
pushl
sub
shrl
into
adc
mov
xchg
xchg
mov
and
insl
cld
or
dec
inc
inc
xchg
movsb
lret
xchg
in
inc
mov
jg
sub
fidivs
test
add
xchg
in
into
xchg
inc
outsl
rolb
or
inc
mov
cmp
push
inc
adc
outsl
mov
dec
mov
fs
mov
test
inc
mov
xchg
insl
clc
or
shlb
pusha
and
cwtl
fstl
jbe
inc
mov
sarl
daa
lods
daa
popa
cmp
xchg
jne
dec
lcall
xchg
imul
adc
ret
ss
dec
xchg
popa
push
mov
push
jnp
adc
pusha
xchg
push
int
fldl
lds
and
sti
add
sub
je
mov
loopne
arpl
add
cmpsb
jl
mov
push
jns
mov
popa
xor
dec
push
cmp
in
add
add
mulb
loopne
aam
add
pop
add
inc
insb
out
cmp
pop
shl
add
mov
insl
call
loop
les
and
insb
loop
loope
dec
aam
push
add
pusha
fisubs
xor
scas
clc
push
xor
add
inc
cmpsl
repnz
ss
lcall
or
sub
push
xlat
jecxz
xchg
jo
and
mov
push
and
push
in
add
mov
je
push
mov
xchg
jne
sub
jb
dec
arpl
add
std
sub
push
push
pusha
jo
out
add
sbb
jb
lcall
add
mov
aad
sahf
mov
mov
mov
lcall
testb
inc
jbe
xchg
in
aam
pop
lods
bound
pop
push
or
call
dec
mov
push
lods
loopne
popa
movsb
inc
movsl
incb
data16
dec
jp
pusha
adc
bound
xchg
fs
cli
xor
mov
mov
insb
mov
shrb
les
idivb
adc
jge
sbb
jle
clc
outsl
mul
imul
lods
bound
lcall
add
je
pusha
adc
jae
sbb
and
add
adc
inc
cld
push
fcomps
add
psrad
test
pop
mov
and
outsb
cld
adc
pusha
sbb
ja
pushf
js
test
adc
in
loopne
push
loop
pushl
and
add
xor
outsl
outsl
xchg
imul
loop
pop
lcall
mov
adcb
dec
dec
inc
stos
loop
dec
cmp
decb
push
push
gs
dec
xor
add
cwtl
fsubrl
mov
inc
vpshaw
jg
add
pusha
pusha
pop
push
std
popa
add
popa
push
inc
push
call
inc
scas
dec
gs
add
xchg
pusha
ja
add
xchg
arpl
jo
dec
mov
test
jae
fisttpll
mov
std
sbb
je
popa
cld
inc
pop
jo
lcall
out
xchg
loope
insl
outsl
mov
add
ljmp
pop
ja
outsl
lahf
stos
scas
mov
and
xchg
jae
clc
shll
data16
jbe
dec
jne
jne
pusha
mov
jne
jecxz
lock
add
mov
ja
add
push
mov
je
add
cmp
addl
xchg
fwait
mov
dec
jo
pop
mov
movsl
add
or
xor
dec
adc
and
call
cmpsl
add
pop
gs
jo
add
add
mov
scas
aas
add
pushl
adc
inc
inc
mov
dec
sbb
add
mov
or
lret
add
fsubrl
inc
xor
adcb
out
or
mov
fisttps
mov
sbb
enter
adc
pushf
and
scas
ret
jp
hlt
inc
adc
outsl
mov
inc
imul
pop
mov
xor
scas
mov
adc
into
sbb
cmp
lock
cmp
sub
mov
cmpsb
ljmp
pop
std
and
add
jmp
inc
mov
mov
scas
sahf
xor
mov
adc
fcmovnu
mov
cmp
cmpsb
xor
dec
pop
xchg
shll
loopne
push
or
call
or
imul
cmp
inc
cli
ljmp
fisttpll
jmp
subl
repnz
jnp
es
fistpll
pop
scas
adc
cmp
cli
inc
adc
aam
add
jmp
dec
das
clc
or
test
xchg
icebp
cmpsb
scas
mov
xacquire
enter
mov
dec
dec
loopne
mov
cmpsl
insb
cmp
inc
mov
push
mov
add
cmc
push
or
lds
sub
bound
lock
and
push
add
aaa
popa
cs
mov
je
and
addr16
xchg
call
clc
repz
fldl
xchg
jle
add
les
out
adc
int3
int
adc
lods
jmp
cld
sti
aas
mov
or
mov
fs
pushl
add
sub
out
loop
pop
dec
shl
aas
das
add
and
lock
cld
add
cmpsb
mov
xchg
ljmp
int3
incl
test
aad
xor
out
cmp
add
aas
pop
jmp
pop
loope
les
aas
insl
les
mov
adc
lcall
xchg
movb
dec
add
xchg
aas
loop
add
jp
mov
pop
roll
pop
aas
sub
das
stc
add
jg
out
mov
dec
shlb
ljmp
mov
outsl
push
jl
das
fstl
pushf
add
int3
fcoml
mov
cmp
test
arpl
cmp
add
xchg
mov
push
std
xlat
cmp
mov
in
call
loope
mov
mov
jne
fldt
cmp
jno
mov
fcoml
xor
mov
pop
cmp
xchg
andb
mov
add
and
in
leave
xor
push
push
add
pop
cmc
aaa
std
imul
faddp
jge
call
mov
xchg
scas
mov
push
and
mov
gs
les
cli
scas
stc
xchg
jge
add
enter
pop
insl
cld
fmuls
imulb
jns
outsb
andb
cmp
jp
add
fs
scas
cld
inc
jl
add
push
push
adc
jge
add
imul
fcmovnb
add
xchg
daa
sti
or
das
xor
push
add
sub
lret
popa
pop
fstpt
add
fwait
sti
add
or
jno
sub
pushf
scas
fnstenv
push
push
sbb
repnz
fbstp
scas
mov
push
scas
test
mov
cmpsb
imul
push
dec
scas
cmp
insl
jl
push
xor
add
fildll
add
clc
outsl
pushl
dec
or
scas
cmp
or
pop
or
xor
lds
jle
pop
inc
or
in
mov
mov
mov
or
mov
ret
sbb
clc
movl
cmpsl
fisubrs
sbb
aas
or
addl
push
xor
insl
fistpll
iret
add
push
push
filds
out
imul
push
pop
push
adc
pop
cmpsb
fnstenv
inc
aad
ljmp
push
arpl
or
add
cmp
imul
fwait
cmpsb
cmp
add
xchg
test
and
mov
aaa
add
aaa
jmp
sbb
jg
sbb
dec
sub
lret
cmp
mov
cmp
aaa
jg
aaa
insb
cmp
mov
imul
cmp
cmp
xor
mov
jae
call
mov
sbb
fstpt
add
ret
ds
ds
push
mov
adcb
aaa
jg
mov
adc
push
mov
inc
les
xor
ds
sbb
ds
add
add
xrelease
jecxz
and
shll
xor
ret
aas
fidivl
aas
fs
xchg
jbe
inc
test
push
test
jae
repz
dec
pop
arpl
fcoml
mov
inc
aas
les
xor
dec
inc
aam
adc
or
inc
mov
shlb
popa
mov
xor
dec
inc
pop
hlt
sbb
in
push
incb
mov
pop
xor
sbb
xor
imul
xor
lods
mov
mov
aas
inc
aam
xor
xor
sub
or
mov
sbb
aaa
jg
mov
adc
xor
mov
pop
xor
jl
inc
jl
xor
mov
pushf
xor
repz
aaa
mov
mov
mov
fdivl
sbb
in
xor
aaa
jg
cld
xor
xor
xor
mov
cmp
out
out
xor
pop
xor
jl
jnp
mov
outsl
imul
xor
lods
dec
xor
shl
outsl
xor
xor
xor
xor
cld
xor
xor
xor
cld
lods
ret
adc
xor
mov
pop
xor
loop
and
mov
imul
dec
xor
xor
xor
xor
push
test
xor
pusha
xor
pop
inc
adc
add
loop
add
insb
adc
lcall
pushf
xor
xor
dec
test
xor
adc
push
push
jge
int
jle
jg
xor
sub
lret
xor
dec
stos
inc
sub
xor
inc
adc
add
mov
adc
outsl
cld
xor
in
or
xor
mov
sbb
inc
fdivs
sub
xchg
add
adc
sbb
xchg
cmp
pop
ds
jg
pusha
dec
cmp
loopne
mov
add
push
xchg
sti
pop
adc
jl
loopne
loopne
pusha
add
rcrl
dec
das
pop
push
cmp
lea
insb
adc
les
add
inc
xchg
add
and
cmp
cmp
ds
and
ds
ss
aas
adc
fwait
mov
adc
lods
mov
push
ja
pop
inc
mov
loop
jmp
xor
xor
andb
xchg
adc
adc
jg
xor
xor
xor
add
sub
xor
inc
xor
mov
push
xor
and
and
int3
xchg
xor
pop
add
es
xor
leave
and
xor
divb
dec
popf
and
adc
andb
and
sub
fidivl
and
in
push
les
ss
fdivs
cmpsb
aaa
push
add
adc
add
jg
cmp
push
cmp
add
cmp
mov
bound
xchg
cmp
adc
in
mov
sub
scas
mov
in
ljmp
mov
xchg
cmp
push
cmp
adc
cmp
cmp
cmp
mov
scas
call
cmp
cmp
add
add
cmp
mov
cmp
pop
or
cmp
ret
push
push
les
ds
and
pusha
ja
es
frstor
inc
xchg
jp
push
add
ss
mov
push
add
xor
xor
add
and
dec
adc
roll
cmpsb
jle
movsb
hlt
push
ss
sbb
aaa
cld
or
ret
cmp
cmp
cmp
cmp
add
add
les
mov
cltd
cmp
out
bnd
cmp
push
lock
sbb
cmp
push
cmp
jbe
mov
add
andb
aad
xlat
idivl
loope
add
ds
xor
xchg
inc
loopne
xor
aad
adc
test
add
mov
js
adc
xor
sub
add
lods
xor
outsl
jg
or
xchg
xor
xor
adc
fnsave
fdivs
dec
xor
mov
cwtl
lock
add
aaa
mov
push
cmp
sub
mov
test
outsl
push
cmp
cmp
cmp
pop
cmp
aam
xor
adc
out
adcb
or
fmull
push
xor
xchg
xor
sbb
xor
xor
push
aaa
divb
or
test
lock
test
cmp
cmp
cmp
mov
xchg
cmp
cmp
add
filds
aas
xor
je
mov
pop
aas
pushf
jmp
hlt
mulb
popa
push
mov
movsl
hlt
pop
xor
mov
lea
dec
push
fidivl
rdtsc
cli
mov
add
xor
jecxz
adc
and
aaa
scas
divb
push
ds
xor
std
fbstp
inc
ss
or
xor
xor
call
add
pop
cmp
mov
and
sbbb
cmp
test
cli
dec
pusha
dec
or
fnstsw
push
cmp
pop
cmp
or
cmp
cmp
mov
je
nop
cmp
cmp
cmp
clc
cmp
repnz
pop
mov
push
outsb
jo
sbb
out
outsl
adc
sbb
cltd
add
dec
outsb
jecxz
rclb
xor
xor
rcrb
popf
xor
je
outsl
pushl
scas
xor
ljmp
xor
xor
shrl
xchg
rclb
sbb
insl
ss
outsl
jg
add
divl
push
aaa
jmp
aaa
cs
aaa
inc
sti
ljmp
scas
aaa
pop
aaa
xchg
aaa
jne
aaa
nop
aaa
pop
aaa
test
mov
inc
nop
add
jg
cmp
or
cmp
cmp
cmp
cmp
jl
stc
fstpt
adc
jae
lret
cmp
scas
cmc
cmp
movsl
mov
ds
ds
adc
outsl
lock
incl
adc
mov
insb
xor
push
inc
nop
push
cwtl
xor
jl
add
enter
xor
inc
mov
ret
xor
xor
cmp
cmpsl
adcl
mov
clc
sub
ss
mov
testl
ljmp
push
aaa
adcl
pushl
cli
adc
cmp
rclb
cmp
jmp
ljmp
inc
cmp
pop
adc
jecxz
insb
and
adc
pop
cmp
cmp
ljmp
lea
hlt
adc
dec
aas
jb
sbb
es
icebp
scas
clc
incl
je
or
divb
mov
adc
xor
or
lcall
fidivl
ss
jg
and
jo
cmp
sub
pop
cmp
sub
ds
aas
and
add
add
fcmovb
mov
shll
xor
cld
les
cmp
cmp
jl
cmp
jl
repz
adc
ljmp
xorl
add
sub
cmp
sarl
imul
in
repnz
cwtl
jnp
inc
cmp
cmp
daa
mov
mov
xor
adc
jo
add
push
lcall
xor
addr16
xor
xor
xor
nop
pop
xchg
out
pushl
pusha
and
adc
cmp
xor
xor
dec
nop
xlat
xor
arpl
out
dec
out
adc
dec
mov
jg
ss
ss
ss
or
ss
rorb
fsubrl
daa
ss
das
ss
in
or
les
aas
ss
dec
lods
ss
int
sbb
movsb
ss
ss
adc
mov
ja
outsl
mov
adc
cld
aaa
pop
aaa
repz
std
hlt
aaa
getsec
add
mov
adc
aaa
daa
aaa
aam
das
ljmp
aaa
add
aaa
aas
aaa
add
aaa
lods
aaa
or
movsb
push
sbb
jge
call
ja
sbb
sarb
je
aaa
insb
aaa
xchg
aaa
ljmp
xchg
aaa
pop
aaa
cmpsl
mov
scas
dec
dec
aaa
insl
cmp
or
icebp
add
jecxz
aas
notb
sti
xor
aad
inc
adc
xor
push
lcall
pop
nop
push
in
xor
cmpsl
xor
scas
xor
xor
xor
add
fdiv
test
xor
xor
xor
or
push
mov
hlt
xor
mov
pop
nop
or
add
xchg
add
xchg
pusha
xchg
fbld
das
hlt
cmp
xor
cmp
fidivrl
jne
lods
cmp
pop
icebp
mov
adc
cmp
cmp
cmp
push
mov
cmp
mov
sub
icebp
cmp
cmp
js
mov
cmp
sub
rclb
loopne
xchg
jl
inc
shll
loopne
pop
nop
and
mulb
fbstp
cmp
add
jle
jo
xor
adc
xor
push
push
xor
xor
xor
rorb
inc
jo
sbb
jle
or
je
xor
pop
xor
enter
and
ss
hlt
sti
adc
adc
aaa
mov
aaa
orb
cld
decl
xor
cmp
xchg
adc
cmp
jnp
cmpb
scas
cmp
xor
adc
cmp
call
mov
add
cmp
cmp
cmp
push
cmp
cmp
imul
adc
cmp
mov
loop
call
clc
cmp
pop
push
cmp
fidivrs
cmp
or
ds
adc
mov
ds
bound
fadd
xor
jae
std
xor
xor
jp
fisttps
xor
xor
mov
push
inc
xor
ss
mov
dec
add
and
rorl
dec
add
add
jp
xor
fistps
or
jns
ja
sahf
adc
pop
rclb
xor
loope
mov
cmp
or
mov
mov
jg
jp
push
cmp
cmp
cmp
and
cmp
push
scas
pop
cmc
cmp
cmp
into
ret
mov
xor
idivb
movsb
cmp
and
cmp
cmp
cmp
inc
cmp
inc
cmp
pop
in
fistps
dec
cmp
mov
stos
xchg
aas
rclb
push
clc
inc
aas
loop
mov
or
movsb
xor
jbe
xor
jg
xchg
test
pop
xor
imul
jecxz
push
xor
xor
xor
xor
repz
cli
stos
pop
jle
adc
cli
jge
outsl
xor
xor
loop
jmp
push
xor
fcomip
lock
xor
add
xor
xor
xor
xor
imul
dec
xor
dec
push
es
lock
xchg
xor
ss
into
sbb
adc
or
in
cmp
dec
cmp
cmp
cmp
ja
cmp
cmp
and
loope
pusha
fs
dec
js
out
clc
imul
xor
sbb
push
adc
sub
divb
jbe
lock
jo
pusha
test
cmp
mov
cmp
jg
mov
cmpb
aam
sti
cmp
jle
mov
jp
xor
call
cmp
nop
cwtl
or
dec
mov
test
cmp
lock
outsb
aas
and
clc
call
push
mov
mov
xor
shlb
dec
aaa
std
add
scas
inc
xor
xor
outsl
outsl
pop
lock
xor
lcall
in
fisubl
cmp
std
mov
data16
cmp
cmp
cmp
insl
cmp
div
push
adc
cwtl
pop
mov
jecxz
xor
lret
mov
mov
ret
mov
push
clc
xor
test
add
xor
xor
fisubrl
xor
mov
mov
sarb
adc
fnsave
movsl
inc
push
sbbb
jno
divb
mov
stc
cmp
sbb
fnstcw
cmp
jnp
fldl
inc
xchg
cmp
jecxz
add
std
incl
xchg
cmp
test
pop
in
xchg
add
inc
xlat
pop
call
cmp
cmp
jo
mov
inc
cmp
xchg
es
incl
push
sahf
repnz
cmp
cmp
cmp
fbld
cmp
xlat
adc
ds
les
ds
icebp
lcall
mov
xor
add
jo
aas
test
les
xor
add
call
xchg
les
xor
leave
xor
scas
xor
add
movsb
jecxz
cld
mov
xor
and
and
clc
mov
mov
lds
in
mov
rol
popa
xor
mov
and
xor
enter
incl
repnz
popf
xor
test
xor
xor
or
fidivs
dec
ss
xchg
mov
add
insb
inc
cmp
test
jle
aaa
shlb
or
sbb
add
int3
lock
adc
cmp
cmp
loope
cmp
cmp
cmp
outsl
call
cmp
cmp
cmp
adc
cmp
cmpsb
cmp
cmp
adc
sbb
cmp
cmp
pushf
cmp
cmp
mov
adc
adc
fnstsw
lret
jle
mov
loop
adc
cmp
cmp
call
push
insb
loop
cmp
cmp
mov
test
mov
ds
bound
pop
mov
or
repnz
aas
mov
popa
xchg
mov
lret
js
add
dec
loopne
and
in
pop
cmc
xor
or
xor
adc
xor
add
fidivl
pop
adc
xor
push
or
xor
xor
sbb
sarb
xor
adc
xor
xor
xchg
adc
ljmp
xor
jl
pop
ret
fwait
add
sbb
repnz
std
mov
sti
mov
push
xor
xor
mov
es
adc
clc
fadds
adc
push
adc
cld
ljmp
xor
xor
xor
xor
mov
add
sbb
neg
sbbl
xor
cld
lods
dec
addb
add
divb
adc
filds
shll
jbe,pt
pop
test
mov
nop
imul
pop
test
scas
les
adc
in
add
push
push
jge
dec
clc
sub
aaa
imul
aaa
sub
jmp
cli
jb
sbb
cmp
out
adc
cmp
repz
cmp
pop
sahf
pop
cmp
lret
cmp
popf
cmp
cmp
adc
jg
cmp
xor
pop
cmp
cmp
mov
sub
jmp
cmp
pop
pop
jg
push
xchg
and
and
mov
dec
push
data16
sbb
cmc
aas
add
add
inc
sub
clc
add
popf
call
aas
add
jb
fidivl
pop
orb
dec
xor
xchg
xor
xor
xor
xor
xor
sub
xor
xor
mov
and
push
aad
xor
jp
outsb
inc
push
sub
or
sbb
push
mov
mov
xor
in
mov
mov
xor
add
pop
cmp
movl
cmp
add
cmp
insb
ds
lcall
cmpsl
shlb
inc
test
pop
movsl
les
shll
daa
and
in
sbb
mov
repnz
jp
xchg
xor
ret
notb
cmp
xor
xor
xor
lahf
xor
pop
push
cmp
cmp
cmp
cmp
dec
mov
inc
mov
pop
cmp
into
aas
gs
outsl
xor
mov
mov
das
rcr
xor
xor
hlt
ret
xor
xor
sub
mov
dec
adc
xor
aaa
leave
xor
sub
xor
mov
xor
or
xor
or
add
sarb
mov
sbb
loop
and
rclb
xor
lret
jg
cmp
ret
mov
push
ss
ss
mov
jecxz
inc
jle
xchg
ss
mov
jns
xorb
adc
scas
fiaddl
jb
xchg
adc
bound
mov
test
out
clc
push
ss
jge
mov
dec
cmp
cmp
or
mov
jae
fisttpl
int
daa
adc
cmp
cmp
imul
int3
cmp
cmp
mov
cmp
adc
nop
cmp
push
mov
pop
lods
add
dec
mov
pop
mov
shll
repz
cmp
jle
ljmp
test
cmp
push
testl
pop
ds
ds
aas
xchg
aas
leave
test
loopne
loopne
push
xor
xor
hlt
push
fstl
adc
cmc
xor
xor
pusha
fstpt
imul
and
mov
inc
adc
xor
pop
loopne
sub
cld
cmp
xor
cmp
std
cmp
cmp
and
in
push
cmp
adc
cmp
cmp
cmp
cmp
mov
pop
cld
or
cmp
fdivrs
mov
adc
ret
ja
bound
mov
pusha
lea
cld
cmp
call
and
mov
pusha
sbb
mov
adc
lcall
cs
cmp
sbb
xchg
fcmovu
or
adc
cmpb
pusha
cmp
fnstcw
jne
outsb
aas
add
lock
mov
popa
xor
ror
aas
xor
dec
mov
xor
jecxz
dec
xor
ljmp
or
sub
mov
pusha
cmp
ss
test
loope
sub
sub
test
mov
mov
loope
sub
cmp
loopne
mov
cmp
stos
mov
mov
cmpb
mov
arpl
mov
adc
mov
ljmp
or
xor
pushl
xchg
xor
xor
xor
adc
xor
mov
cmpsb
and
filds
or
xor
cmc
into
xor
pusha
dec
adc
fildl
mov
call
add
xchg
aaa
pusha
aaa
mov
stos
cmp
mov
cmp
fcomip
cmp
cmp
cmp
adc
cmp
cmp
cmp
add
or
push
pusha
inc
adc
or
xchg
and
mov
in
cmp
adc
cmp
push
fists
clc
jg
jl
mov
inc
cmp
cmp
cmp
and
xor
mov
fwait
cmp
mov
adc
fiadds
mov
ds
ds
mov
push
ds
outsl
mov
add
add
sub
xor
andl
lods
loopne
out
xor
xor
mov
inc
jp
xchg
loopne
in
aad
je
int
cwtl
xor
push
push
lea
pusha
mov
es
push
in
adc
push
orb
adc
cwtl
cmp
imulb
cmpsb
cmp
cmp
push
cmpl
fsubp
push
ds
aas
cmpsl
aas
test
fwait
or
clc
aas
pop
loope
and
xor
xor
xor
or
xor
xor
add
incl
mov
xor
or
cli
ljmp
xor
xor
loopne
cmpb
outsb
pusha
adc
in
cmc
mov
stos
clc
adc
xor
xor
mov
mov
inc
les
xor
mov
adc
sub
add
aaa
out
jb
push
stos
sbb
and
mov
movsb
mov
test
cmp
cmp
stos
xor
sub
loopne
push
loopne
mov
clc
add
pusha
test
xor
pop
clc
pop
loopne
xor
xor
test
lret
bound
int
out
push
cmp
xor
adcb
pushf
aaa
jge
test
les
sbb
cmp
jmp
cmp
decw
push
ds
and
dec
jl
cmp
loop
or
pop
pop
sbb
inc
loopne
pusha
fwait
aad
xor
aas
xor
movb
loopne
les
xor
mov
and
test
mov
imul
dec
mov
xor
mov
cmp
cmp
push
inc
and
xor
stos
push
adc
repz
ss
ss
jle
xor
xor
filds
cld
repz
xor
and
xor
xor
xor
sti
sbb
add
xor
js
cld
mov
xor
fcmovnu
stos
jno
xor
jg
jnp
mov
repnz
addr16
jge
jg
xor
cmpsl
xor
or
mov
xor
in
outsl
lea
gs
xor
xor
loope
pushl
add
stc
xor
xor
adc
sub
or
xor
jo
cmp
mov
xor
test
lahf
xor
jl
jo
jnp
jbe
mov
imul
xor
adc
add
xor
xor
xor
adc
inc
ret
outsl
shll
xor
xor
adc
fwait
cmpsb
outsb
lcall
insl
xchg
cmpsb
aaa
add
add
push
filds
call
or
cmp
push
sbb
push
cmp
cmp
cmp
push
dec
cmp
ds
ds
shl
push
incl
loopne
stos
lock
add
cmp
or
loop
sbbb
in
push
jno
add
sbb
ljmp
inc
xor
xor
pusha
cwtl
aaa
sub
leave
aaa
pop
cmp
cli
fbstp
cmp
add
jo
push
cmp
pop
outsb
cld
add
into
lock
mov
cld
sub
outsl
add
fdivs
dec
xchg
decl
pop
cmp
xchg
xor
fdivs
xor
xor
xor
andb
incl
adc
outsb
ss
add
lcall
dec
aaa
lret
aaa
lds
loopne
lcall
stc
fwait
ss
test
cmp
cmp
loopne
gs
lock
sarl
cmp
mov
sub
or
and
int
xor
stos
sub
xor
popa
nop
push
xor
xor
xor
and
dec
jl
xor
add
icebp
sbb
shrb
fstpt
bound
cmp
mov
imul
call
cwtl
imul
adc
jg
test
pop
jp
aaa
fs
mov
mov
xor
cmp
orb
cmp
cmp
adc
cmp
pushl
in
out
dec
mov
cmp
add
cmp
stos
scas
xchg
test
cmp
cmp
mov
add
dec
das
out
cmp
cmp
cmp
add
push
nop
sbb
fisttps
pop
outsl
cmp
cltd
ds
jg
ds
add
icebp
aas
cmp
js
aas
loopne
mov
add
or
adc
jg
call
nop
addl
mov
sub
add
mov
xor
mov
xor
xor
jmp
add
cmp
jl
in
jg
lock
xor
lock
in
adc
mov
ja
adc
out
aas
pop
lock
mov
aas
pop
aas
sahf
fistl
mov
aas
jnp
jle
imul
aas
push
adc
addl
mov
xchg
mov
je
push
das
cmp
push
rolb
cmpsl
lcall
ljmp
addr16
mov
scas
xor
mov
xor
cmpsl
mov
outsl
mov
or
adc
insl
aad
xor
lock
pusha
adc
inc
sub
push
and
add
jo
cmpb
aam
subl
adcb
inc
loopne
add
sbbb
lea
dec
mov
aam
push
hlt
pop
adc
je
mov
and
push
adc
fidivrl
pop
xor
aam
sbb
lock
sti
or
addr16
stos
push
in
add
ss
test
or
mov
pop
in
sub
mov
pop
in
lcall
mov
aaa
push
test
adc
out
sbb
add
cld
aaa
fbstp
and
xlat
sub
iret
aaa
xor
or
add
sub
mov
fmull
aaa
mov
xorl
xorb
jno
inc
rcr
cli
jg
ud0
add
and
dec
je
dec
mov
std
decl
mov
lock
insl
inc
add
sbb
dec
call
pop
sbb
imul
add
stos
push
push
dec
sub
pop
pop
insb
fcoml
pusha
dec
shrb
ret
cmc
scas
lea
aaa
loop
fcomip
cwtl
pop
xchg
and
sbb
out
jae
enter
push
cltd
cmp
sub
and
stos
jg
pop
fisttps
pop
adc
test
test
ljmp
pop
and
sti
loopne
mov
mov
mov
jmp
pop
loopne
jge
test
fsts
push
nop
or
pop
dec
sub
sbb
xchg
mov
test
jl
incl
outsb
add
pop
jge
add
fstps
add
pushf
jns
or
out
sar
sbb
mov
iret
lock
cmp
in
add
in
add
adc
rolb
cmc
jle
sub
scas
ljmp
add
sbb
imul
mov
pushl
push
les
xchg
outsb
inc
loope
add
outsb
loope
mov
hlt
jg
cmpb
loope
jle
iret
shlb
jl
xchg
test
fdivrp
fldt
das
nop
add
shrb
popa
or
sbb
push
pop
xchg
outsl
pop
rol
lahf
pop
add
out
hlt
add
cwtl
adc
add
ss
sub
idiv
aad
addl
popf
das
fiaddl
jp
push
inc
push
pop
cmp
sbb
clc
jge
jp
jmp
sbb
xor
jg
cmc
or
pusha
ret
sbb
call
xor
mov
out
add
adc
mov
pushl
cwtl
loope
mov
int3
mov
inc
xor
adc
pop
mov
cmp
pop
icebp
push
std
mov
mov
cmp
pop
loopne
mov
rcrb
mov
jmp
mov
ds
lock
outsl
out
lcall
dec
cli
mov
lods
xchg
cmpsb
inc
movb
lds
jb
inc
jp
xor
lods
push
out
or
sub
mov
scas
aam
pop
mov
add
pop
mov
and
pusha
rclb
sub
addr16
mov
pop
mov
addr16
repz
call
xor
and
loopne
sbb
jg
mov
loop
and
fdivrl
repz
sub
mov
cmp
or
decl
pop
js
lea
xchg
pop
sbb
cli
pop
rclb
decl
dec
jbe
mov
pop
bndldx
push
adc
leave
mov
ret
lcall
rcrb
int3
adc
mov
sbb
bound
dec
fcmovnbe
or
ja
sar
pushl
into
xchg
dec
setae
cltd
ja
xlat
rolb
sarl
push
or
mov
rorb
adc
jp
xchg
pop
and
sarb
ja
jg
pop
ss
in
push
mov
xchg
and
subb
insb
pop
mov
lcall
in
into
pop
es
ret
dec
insb
xlat
and
repnz
push
leave
and
decl
mov
int3
popl
mov
jbe
mov
xor
xchg
loope
push
mov
icebp
sub
xchg
hlt
aas
gs
gs
mov
out
outsl
out
push
fsubrl
adc
or
stos
repnz
dec
pushf
pop
pop
jp
mov
sbb
mov
sbb
out
inc
ret
decl
sbb
sarb
mov
iret
call
dec
mov
loopne
xor
jmp
xchg
dec
out
in
hlt
jl
loope
loope
inc
std
pop
stc
pop
in
pop
leave
sbb
jmp
test
pop
cmp
jg
call
scas
push
arpl
cmpsb
mov
adc
sub
test
mov
call
outsl
test
xchg
cmp
mov
mov
xchg
cmp
test
ljmp
aaa
hlt
cmp
jno
out
in
and
or
mov
in
incl
test
mov
jg
xchg
es
ds
xchg
decl
add
sbb
lods
add
loopne
sub
mov
dec
mov
movsl
or
imul
inc
jg
insl
cmc
mov
insl
int
jecxz
mov
jno
loope
mov
in
dec
push
xlat
sbb
jae
xchg
cmp
js
cwtl
add
sti
sbb
ljmp
cwtl
xor
pop
mov
ljmp
cmpl
jmp
xchg
adc
mov
pop
insl
sarl
stos
dec
or
cs
lret
int
push
ficompl
mov
mov
xchg
clc
ljmp
gs
ss
test
mov
ss
xor
mov
or
and
int
test
leave
sti
or
gs
lret
xchg
sub
incl
cmpsb
sbb
jb
cs
sub
fwait
jne
cmpsl
cmc
jbe
push
push
rcrl
jbe
jp
adc
mov
mov
in
cwtl
dec
lods
decb
dec
in
cli
jbe
inc
call
or
pushl
push
or
into
fcmove
into
sti
push
cwtl
adc
push
test
ja
sbb
testb
xor
pop
divb
movsb
inc
outsl
mov
les
lock
inc
jns
add
rorl
xchg
daa
dec
add
int3
jae
stos
cwtl
in
mov
test
sbb
cmc
movsl
jge
cmpsb
outsl
adc
mov
fadd
lods
icebp
es
outsl
cli
call
inc
jae
mov
jae
in
inc
sarl
push
sbb
mov
inc
loopne
xchg
popa
mov
cwtl
pop
and
cmp
daa
jecxz
dec
xchg
add
and
lret
pushl
in
in
push
mov
mov
mov
sbb
add
je
nop
es
jp
xchg
loopne
adc
in
jb
decl
jae
and
stos
lea
arpl
addl
push
ret
je
push
xchg
call
cmp
movsl
lret
mov
mov
in
and
xor
iret
decl
cld
sbb
nop
sub
roll
cmpsl
mov
nop
vmovups
lcall
incl
daa
jmp
notl
sarb
in
jns
dec
cld
shl
pop
enter
add
xorb
jp
adc
mov
mov
xor
sub
jno
in
fs
iret
fmuls
mov
mov
aad
sub
cwtl
jmp
mov
clc
shlb
and
test
incl
push
adc
aaa
test
mov
or
ja
cwtl
addr16
in
cmpsb
mov
inc
mov
inc
jno
dec
adc
loope
push
push
stc
das
mov
push
mov
mov
sbb
shll
shll
sub
xchg
incl
addr16
adc
iret
jg
mov
subb
orb
movsb
stos
addr16
sub
add
pop
sbb
jg
dec
mov
icebp
adc
xor
xor
jge
add
lcall
pushl
int3
mov
sti
notl
sub
push
or
insb
cmp
cli
stc
inc
scas
test
or
push
inc
movsl
nop
mov
cmp
or
push
push
cmp
jg
movsl
fildll
jmp
and
inc
int
rcrb
adc
int
addr16
pop
jb
jnp
pop
push
lret
jge
jmp
add
mov
adc
aas
fisttpl
jecxz
loope
xchg
mov
inc
lret
sar
jnp
push
xor
out
insl
ret
sbb
inc
or
sub
mov
jne
inc
in
xor
icebp
push
gs
cmp
mov
pop
lcall
inc
and
ret
call
mov
or
js
push
lea
lcall
sahf
ficompl
jmp
je
pushf
pusha
mov
sub
dec
sub
and
std
call
add
shll
cmp
popf
pop
dec
ljmp
lret
sahf
ljmp
mov
lcall
je
int3
pop
fisubs
xor
out
cmpsb
int
xlat
lahf
bswap
mov
daa
scas
je,pt
ljmp
sahf
xor
scas
or
sahf
adc
testb
dec
test
movsb
inc
jne
pushl
movsb
popf
jp
lcall
pop
ret
je
outsl
ja
push
out
call
decl
mov
ror
scas
aaa
and
lock
call
int
mov
xor
dec
xchg
add
push
mov
lds
pusha
imul
adc
jbe
data16
sbb
shrl
pop
push
dec
cmpsb
call
call
test
test
leave
add
insb
or
loope
aad
or
rorb
sub
jmp
xorl
sub
xchg
pop
xor
stos
push
jecxz
imul
jge
inc
mov
push
jno
add
add
adc
and
in
mov
pop
sub
push
add
xor
in
in
imul
pushl
inc
xor
cli
imul
stc
std
stos
imul
xlat
sahf
adcl
xor
and
jmp
cmc
out
mov
into
pop
iret
push
ljmp
sub
jle
loope
push
adc
cmp
xorl
pushl
fidivl
out
into
xor
jnp
push
mov
adc
xorl
inc
andb
xchg
adc
pushf
jb
insb
xchg
dec
daa
data16
call
cmpsb
xchg
or
or
inc
sti
push
or
out
mov
jge
lcall
xor
pop
hlt
inc
dec
test
frstor
cwtl
or
xor
fcomip
jbe
fsubrl
cmc
push
bound
jp
pusha
mov
jg
fmull
aaa
mov
jne
sbb
xor
fdivs
jle
fucomip
adc
xor
lock
mov
call
iret
enter
dec
sti
xor
push
dec
int3
lret
jne
repnz
imull
push
or
cmp
ljmp
mov
gs
lcall
sub
mov
fwait
aas
pop
fldenv
mov
pop
cltd
fidivl
pop
adc
mov
inc
repz
pushl
add
jnp
mov
or
test
out
sub
outsb
sbb
aad
jecxz
into
decl
push
mov
fisttpl
repnz
xor
push
rcrb
inc
incl
loop
jno
mov
xlat
lcall
xlat
aaa
rcll
loop
push
out
enter
fsubl
fdivr
push
inc
jns
dec
shl
adc
push
cli
negb
push
call
les
push
mov
push
nop
jb
push
fisttpll
adc
pusha
mov
fists
in
jp
mov
ds
mov
mov
xor
call
cmp
cmpsb
fmull
inc
inc
sti
stos
mov
aam
out
push
push
jb
daa
inc
rolb
inc
and
out
das
xchg
sarb
or
and
dec
xchg
mov
ja
loope
fbld
add
mov
scas
sbb
mov
or
mov
cmpsl
and
in
movb
dec
pop
ficoms
das
push
jno
sar
jns
stc
cmpl
xchg
sahf
xchg
pop
jae
sbb
push
fwait
mov
pushl
sub
and
jecxz
xorb
inc
gs
adc
jnp,pn
jmp
jle
in
adc
push
xor
fstps
in
jp
adcl
out
fbstp
mov
std
aam
mov
les
push
pop
dec
cli
std
addr16
pop
outsb
mov
cmp
jmp
sbb
jno
imulb
inc
xor
int3
loope
in
fldl
daa
xchg
scas
inc
ret
je
inc
into
mov
dec
test
in
test
pop
out
pop
xlat
mov
daa
sti
ficompl
cmpsl
stc
sar
lcall
inc
or
xchg
sbb
mov
int
lea
jmp
pushl
cmp
movsl
cmp
push
scas
mov
popf
cmpsl
xchg
mov
xlat
dec
in
nop
mov
decl
icebp
mov
push
out
lock
jl
mov
stos
xorl
sbb
mov
cmp
xor
adc
jl
xchg
xor
dec
push
cmpsl
ret
test
dec
loopne
add
mov
das
js
data16
jbe
mov
movsl
call
repnz
cmp
sbb
arpl
inc
test
cld
lcall
fcmovbe
pop
in
mov
adc
sub
lcall
aam
pop
xchg
or
jmp
sub
lret
inc
mov
jmp
jmp
aam
xor
pop
push
ss
sub
ss
mov
dec
mov
rclb
pushl
mov
push
pop
andb
adc
cmpl
push
push
js
outsl
push
jnp
inc
pop
xor
fstps
push
pop
decl
cmp
fstpl
mov
mov
cs
mov
mov
out
movsb
call
mov
movsl
mov
fimuls
jle
pop
ss
es
inc
sub
roll
ds
dec
inc
test
cmp
sub
jb
call
pop
popf
xchg
int3
imul
xchg
aam
pop
rorl
push
or
adc
adc
call
pusha
or
adc
mov
xor
pop
daa
mov
mov
in
stos
ljmp
jne
sbb
stos
sbb
mov
push
bound
sbb
jle
jl
loop
fucom
adc
test
lds
ret
push
push
xor
push
in
inc
jg
je
mov
loope
xor
daa
cli
jg
cmovg
inc
mov
xor
mov
sbbb
sub
ficoms
inc
jecxz
into
sbb
adc
pushl
setne
xor
adc
lret
dec
icebp
movb
cmp
sti
push
sub
jmp
ret
xor
jp
mov
inc
adc
adc
repz
enter
sub
decl
mov
adc
loope
or
inc
hlt
aas
test
cmc
add
je
mov
out
cmc
subl
fs
fs
sub
mov
ljmp
sub
jmp
pop
lods
cmp
mov
out
call
movb
xor
pushl
jbe
sar
pop
sub
lea
ljmp
pop
call
pop
iret
cmc
das
xor
pop
int
xchg
repnz
divl
push
jnp
in
xchg
call
push
push
lock
jmp
sub
int
xor
mov
pop
orl
cli
rolb
mov
mov
cmp
push
mov
jp
stos
jnp
jb
lahf
ljmp
cli
jns
cmpsl
jo
push
mov
jg
pop
inc
mov
lea
ss
decl
xchg
inc
nop
or
movsl
out
repnz
lret
pop
inc
in
repz
int
mov
movsb
and
iret
lret
addr16
xchg
test
mov
mov
lcall
shrb
jp
sub
cmp
jmp
cmp
test
push
test
pop
lods
movaps
out
pushl
fstps
xor
or
xor
iret
insb
or
or
sahf
imul
pop
and
mov
sti
int
loopne
ljmp
fimull
push
mov
push
cld
push
jmp
dec
jecxz
jnp
jmp
aaa
fsubl
adc
pusha
stc
mov
out
mov
arpl
and
pushl
lret
sub
xor
cmp
xlat
leave
sbb
loop
sub
mov
cmp
call
xchg
and
test
test
fcoml
shrl
adc
push
pop
out
add
jmp
shlb
dec
adc
rolb
jae
test
xchg
fnstsw
scas
ss
mov
outsl
adc
mov
movsl
arpl
outsl
inc
lea
and
jg
lea
out
js
inc
sbb
dec
jg
std
xor
repz
lds
les
or
decl
aaa
aas
cmpsl
add
js
mov
mov
sub
out
mov
pop
cmpsl
icebp
lods
mov
push
mov
adc
lahf
out
shl
jl
scas
add
xor
int
lcall
jno
loop
int
xchg
popf
cltd
dec
lock
xchg
test
inc
sarl
adc
ret
ljmp
lcall
xlat
pop
sub
sarl
push
call
dec
stc
fildll
popa
mov
iret
fcoms
call
imul
bound
cmp
aaa
mov
inc
mov
xchg
out
lds
or
call
sarl
adc
dec
pushf
sbb
ret
sbb
jae
cmovle
ret
sahf
cmp
jl
stos
int3
jmp
ja
or
mov
jo
js
cmpsl
lcall
das
push
jo
xchg
adc
jmp
mov
arpl
add
adc
adc
orb
inc
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
xchg
inc
sub
push
and
popf
subl
push
cmp
stos
sub
jmp
inc
push
cwtl
cwtl
xchg
add
lret
mov
popa
fs
xchg
sub
addr16
or
push
mov
imul
fwait
xchg
cltd
sub
push
jne
push
fs
insb
sbb
pusha
lret
mov
outsb
popaw
je
jae
push
and
push
mov
adc
push
data16
insb
or
jne
lahf
insl
inc
fsubrs
inc
sbb
inc
imul
inc
outsl
push
loop
jb
mov
insl
les
pop
inc
and
shrb
mov
fs
fldt
imul
inc
jns
push
imul
mov
inc
js
jns
mov
jae
fisubrl
insl
js
sbb
xor
xor
mov
fcomps
add
xchg
push
mov
data16
test
addb
mov
loopne
sti
push
mov
push
inc
shlb
arpl
test
scas
cli
pop
inc
jbe
bound
push
lret
ljmp
fildl
push
lahf
push
popa
ja
add
pusha
stos
adc
add
nop
mov
js
popa
mov
xchg
push
inc
pop
add
lds
out
mov
arpl
mov
push
adc
test
adc
gs
jne
push
or
mov
adc
push
rclb
daa
std
inc
add
push
movsb
fisubl
mov
mov
cmpsb
inc
or
add
pusha
test
test
pop
add
pusha
xchg
pushf
in
roll
test
or
bound
mov
or
test
mov
loope
sbb
mov
rorl
push
sbb
push
add
popa
loopne
lds
mov
and
test
pusha
les
sbbb
add
jns
push
and
nop
inc
lea
fcompl
testl
push
addb
push
bound
inc
dec
xor
sti
inc
xor
stos
fldl
xchg
andb
test
dec
sbb
sbb
arpl
pop
sbb
sub
sbb
test
or
pop
sbb
or
or
add
xor
stos
push
arpl
xchg
stos
or
sub
or
sub
das
imul
push
and
adc
push
xor
inc
lret
push
sub
mov
adc
inc
push
imul
push
add
mov
mov
pop
shll
push
or
inc
aam
inc
insb
popa
jae
mov
insb
insb
xor
and
push
fwait
fwait
inc
or
inc
test
aaa
imul
cmc
test
test
mov
add
pusha
adc
and
aas
ja
inc
or
xchg
jo
mov
ja
mov
in
sub
jecxz
pop
adc
push
and
adc
xchg
add
mov
and
add
inc
or
test
and
xchg
or
cmp
adc
int
aam
inc
popa
sbb
movsl
adc
add
mov
push
push
inc
ja
mov
out
sbb
sub
test
push
push
jg
xor
dec
sti
mov
or
pop
lcall
lcall
add
orl
stos
mov
loopne
mov
xor
add
add
mov
add
inc
mov
das
or
add
aam
mov
or
or
rcll
jecxz
dec
mov
test
mov
xor
sbb
pop
adc
mov
xlat
cmp
cltd
popf
and
push
pop
cmpsl
mov
push
fwait
lods
mov
add
adc
and
lods
xlat
pop
adc
mov
add
mov
cltd
inc
add
addb
in
and
add
test
sub
add
push
lods
and
mov
add
test
push
pop
stos
inc
sub
add
adcl
and
dec
fldt
sub
or
adc
stos
or
cmpsl
daa
mov
or
in
push
ret
add
and
cmp
mov
pop
adc
and
pusha
adc
xor
adc
pop
adc
mov
adc
std
mov
push
imul
sub
dec
movsb
and
outsl
add
inc
inc
imul
sbb
xor
inc
and
push
adc
cmc
add
push
les
mov
inc
sbb
test
adc
mov
pop
add
xchg
xchg
xchg
mov
lahf
cmp
aam
add
mov
inc
and
aaa
sbb
add
adc
int
mov
aam
mov
mov
jnp
push
push
andb
mov
inc
sti
sbb
movsl
adc
add
dec
and
adc
movsl
shrl
push
mov
mov
add
mov
mov
sub
mov
adc
inc
mov
inc
or
loop
push
lods
addl
mov
aam
and
pop
rep
pop
rorl
pop
outsb
sub
inc
int
inc
and
mov
and
xlat
lret
sub
mov
sbb
dec
sub
sbb
mov
add
push
sub
mov
adc
or
inc
stos
cs
push
mov
adc
or
cmpsl
pop
fwait
pop
aam
sub
or
and
add
mov
add
mov
aad
and
add
int
lea
pop
test
inc
push
fisttpl
or
sbb
inc
inc
add
adc
mov
pop
and
inc
aad
adc
sub
incl
pop
or
int3
out
inc
and
nop
andb
or
rorl
lea
mov
outsb
testl
adc
aaa
lahf
or
and
add
and
ffree
inc
mov
pop
inc
or
cmpb
mov
mov
or
jnp
sbbl
jo
inc
adc
cmp
les
xor
sub
fmull
jmp
out
push
xchg
addb
adc
push
sub
jns
add
add
or
jmp
add
push
inc
push
dec
add
add
xor
out
and
loopne
popl
add
in
daa
repnz
in
incb
inc
pop
and
fnstenv
inc
sbb
mov
add
lea
nop
push
cwtl
and
dec
pop
and
add
loop
or
sbb
pop
add
add
nop
bound
push
add
and
dec
mov
add
je
jbe
inc
push
cmpsb
mov
into
ds
inc
outsb
dec
push
xor
add
sbb
rorb
adcb
mov
dec
dec
xor
or
cld
dec
lcall
push
lock
scas
stos
xor
dec
adc
mov
inc
add
push
xchg
and
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
movsl
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
cmpsl
inc
add
add
add
add
add
add
add
add
add
add
or
add
shrb
add
in
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
mov
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
mov
add
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
movb
in
add
add
add
and
cmp
loop
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
add
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
loopne
cmp
loop
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
shrb
add
in
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
mov
in
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
xorb
add
in
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
pusha
xor
add
in
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
inc
cmp
loop
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
and
cmp
loop
lock
insl
inc
add
data16
in
fnsave
iret
xchg
xchg
fstp
dec
jae
push
push
mov
mov
push
sbb
xchg
push
int
dec
adc
cmc
cmp
aaa
cwtl
movsb
xchg
and
sbb
jae
jp
push
push
data16
cmp
jge
dec
mov
adc
or
mov
cmpsl
and
loopne
pop
xchg
arpl
mov
push
jmp
add
pop
push
ret
ljmp
in
nop
or
sub
sbb
xchg
inc
mov
les
fldl
dec
mov
cld
add
andb
sbb
jge
fisubs
pushf
or
xchg
dec
pushf
jns
ucomiss
fsubs
notb
aas
iret
lock
cmp
outsl
cli
xor
pushf
cmp
mov
into
std
pop
shl
subl
adc
and
imul
inc
xchg
pop
std
cmpsl
movsb
gs
outsb
mov
push
xchg
mov
mov
hlt
lods
lahf
inc
inc
xchg
mul
das
subl
aam
xor
jnp
fdivrp
mov
shrb
popa
or
sbb
push
inc
xchg
outsl
pop
sarl
lahf
pop
pop
jnp
movsl
test
adc
jle
ss
sub
int
das
fiaddl
test
inc
jo
xchg
mov
cmp
cmp
ret
clc
jge
in
test
xor
jg
cmc
jns
lcall
sti
popf
inc
shrb
in
or
mov
jo
sbb
inc
int3
sub
nop
shl
pop
pop
sbb
cmp
shlb
js
loopne
mov
shlb
or
sbb
test
push
nop
mov
mov
sti
lods
xchg
cmpsb
mov
arpl
jb
inc
jp
into
ret
lods
push
or
mov
sbb
dec
and
or
dec
sbb
dec
jnp
popl
dec
xor
xor
lods
pop
sub
mov
cs
icebp
in
lret
or
xor
and
xchg
fwait
test
neg
jl
mov
push
adc
cs
dec
push
jo
xchg
mov
imul
nop
sbbl
xchg
add
sub
and
push
adc
xor
jecxz
cmp
div
and
movsl
loopne
out
xchg
movsb
call
mov
push
lock
mov
jnp
jge
or
jle
sbb
pop
cmp
mov
cwtl
bound
fucomip
test
rcll
sti
lock
fmull
ret
insb
adc
ficoms
stos
gs
xor
mov
mov
add
leave
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
add
add
mov
add
dec
mov
add
pop
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
arpl
xor
add
outsb
jae
popa
jb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
jb
outsb
jae
popa
je
dec
popa
insl
gs
add
addr16
jb
push
inc
popa
jb
push
xor
imul
