in
inc
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
roll
add
inc
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
aam
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
add
int3
add
sbb
add
jl
nop
xor
mov
xor
insb
add
test
add
mov
pop
aaa
and
push
pop
sti
js
es
mov
aaa
lods
sti
std
aaa
jmp
and
fpatan
lods
cmp
movsl
cmp
cmp
sarl
aaa
notl
cmp
lock
adc
add
lock
cmp
scas
lock
arpl
stos
cmp
aaa
icebp
aad
out
icebp
cmp
adc
and
dec
repnz
ds
pop
repnz
ds
icebp
icebp
ds
repz
push
repz
aad
aas
aas
inc
repz
aas
inc
repz
aas
sub
pop
aas
sbb
jb
clc
bnd
xor
aas
add
repnz
insb
repnz
add
and
add
out
sti
cmp
enter
sahf
sti
jae
test
sti
xchg
xor
mov
pop
sti
enter
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
test
arpl
test
gs
mov
popa
fs
bound
mov
add
inc
mov
bound
mov
add
aas
test
jne
sbb
lahf
gs
add
add
ret
mov
inc
imul
mov
je
add
add
test
push
add
mov
arpl
jns
add
add
test
dec
xchg
cmpsl
jne
test
pop
mov
add
cld
into
inc
add
into
inc
add
inc
add
inc
add
iret
inc
add
add
iret
inc
add
iret
inc
add
test
arpl
test
adc
popa
fs
movsb
bound
mov
add
add
mov
add
test
outsb
in
xor
es
insb
add
add
aad
jbe
mov
cs
lahf
add
popf
test
jae
mov
add
mov
fs
lahf
add
xchg
test
arpl
add
dec
mov
insb
inc
push
mov
add
sub
lcall
sub
jb
xor
xor
add
dec
cmpsl
popa
jo
mov
add
jmp
jb
fstpl
insb
insb
add
add
cmpsb
je
shlb
dec
gs
add
add
cwtl
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
int3
jmp
add
int3
jmp
add
add
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
int3
add
rclb
add
add
add
add
cld
leave
add
add
add
dec
enter
int3
add
add
add
cmpsb
leave
add
repz
add
and
add
add
mov
jmp
std
lret
add
add
add
add
add
insb
lret
imul
add
pop
cs
ljmp
lret
sub
add
sbb
add
sub
adc
sub
add
sbb
add
sub
add
jmp
leave
add
sbb
leave
add
jmp
leave
add
fxch
add
fxch
add
add
leave
add
cltd
pop
add
dec
jmp
add
leave
add
cltd
leave
add
cltd
leave
add
imul
add
add
add
add
add
add
mov
add
and
add
and
add
and
add
filds
add
and
add
and
add
and
add
and
add
and
add
and
add
aad
add
add
add
add
add
dec
add
and
add
and
add
dec
and
add
and
add
and
add
add
add
add
add
add
add
and
add
or
add
push
add
int3
jmp
add
int3
jmp
add
or
jb
lahf
into
bound
int3
sub
add
jmp
aaa
add
jmp
add
add
jmp
add
int3
jmp
add
mov
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
add
int3
jmp
jmp
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
test
into
add
cltd
into
add
imul
add
pop
into
add
pop
into
add
imul
add
pop
into
add
pop
into
add
sub
add
sub
add
sbb
add
sbb
add
sub
add
sub
add
sbb
add
sbb
add
jmp
int
add
int
add
int
add
int
add
jmp
int
add
int
add
int
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
jne
add
repz
add
jmp
add
add
push
add
xor
add
push
add
xlat
push
add
in
push
add
fstl
add
push
add
pop
push
add
sbb
add
add
int3
sti
push
add
lds
lret
fists
int3
sub
lret
sbb
push
cld
lret
notl
int3
pop
push
cld
lret
lea
int3
xchg
push
cld
lret
sub
int3
xor
push
add
mov
add
cld
lret
xchg
push
add
jge
cld
lret
rcll
int3
stc
push
cld
lret
pop
push
add
jmp
dec
add
rorl
lret
movsl
dec
add
test
lret
test
dec
cld
lret
rorl
orl
add
int3
inc
dec
cld
lret
add
dec
rolb
adc
ja
rolb
cmpl
add
dec
rolb
sub
mov
cmp
add
add
iret
add
lret
iret
add
iret
add
iret
add
mov
iret
add
add
add
mov
add
add
add
enter
mov
iret
add
enter
mov
iret
add
rolb
aas
dec
rolb
test
aas
rolb
roll
sarl
rolb
add
xchg
add
mov
sbb
add
setb
and
xchg
add
leave
xchg
add
push
xchg
add
mov
add
pop
xchg
add
imul
add
cltd
xchg
add
imul
add
adcl
loope
add
in
add
setae
sub
add
xlat
loope
add
sbb
call
cmp
add
add
cltd
cmp
test
add
dec
cmp
fwait
cmp
pop
cmp
push
cmp
inc
cmp
xor
add
add
add
adc
add
cmp
add
cmp
arpl
add
cmp
cmp
test
add
aas
cmp
cmpsl
cmp
ret
cmp
in
add
xor
adc
add
adc
cmp
add
lahf
cmp
add
int3
lea
cld
lret
xchg
cmp
notl
lret
jmp
add
xchg
fwait
inc
add
int
cld
lret
mov
add
out
inc
cld
lret
sti
inc
add
roll
inc
add
sub
lret
sbb
int3
or
lret
sti
inc
add
out
cld
lret
jnp
add
mov
lret
cltd
inc
add
das
inc
cld
lret
dec
inc
add
inc
inc
cld
lret
xor
int3
out
inc
cld
lret
sti
inc
add
testl
int3
mov
cld
lret
popf
inc
add
add
push
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
inc
enter
enter
enter
movl
or
movl
gs
jge
movl
jnp
movl
adc
movl
icebp
mov
movl
movsl
mov
add
ja
add
mov
add
add
lea
add
xchg
xchg
add
add
xchg
add
ret
xchg
add
mov
add
int
add
cltd
into
add
adc
xchg
add
pop
xchg
add
cltd
into
add
xchg
into
add
pusha
into
add
pop
into
add
cmpl
add
into
add
outsl
js
add
add
dec
into
add
pop
js
add
sub
add
push
add
add
push
add
icebp
push
add
fstl
add
push
add
mov
add
mov
add
jns
add
ja
add
xchg
push
add
mov
push
add
push
add
sub
add
add
jno
add
inc
push
add
jne
add
xchg
add
push
add
xor
add
adcl
icebp
push
add
icebp
push
add
add
add
add
and
ds
lret
aaa
ds
and
cld
lret
inc
ds
inc
ds
lret
push
ds
popa
ds
lret
pop
cmp
dec
cmp
lret
adc
add
add
cld
lret
loope
add
in
cld
lret
push
cmp
cmpl
lret
lods
cmp
mov
cmp
fnstsw
cld
lret
out
add
mov
add
cld
lret
sub
add
jnp
cld
lret
pop
cmp
sarl
cld
lret
fistpll
add
gs
lret
pop
cmp
pop
cmp
lret
add
jmp
add
fcmovnb
add
movl
xchg
lods
movl
xchg
dec
enter
enter
enter
enter
enter
enter
enter
enter
enter
push
enter
enter
enter
enter
movl
and
cmp
add
das
enter
enter
enter
enter
enter
add
lahf
jp
add
add
aas
jnp
add
add
popf
add
adc
add
scas
add
mov
add
ret
add
add
add
rcl
add
add
loopne
add
loopne
add
add
dec
loope
add
loopne
add
loopne
add
loopne
add
ja
add
jp
add
add
inc
jp
add
in
add
loope
add
imul
iret
cmp
add
idivl
add
xor
add
ds
add
cmp
imul
add
add
xor
add
jnp
add
jge
add
mov
add
xor
add
loope
add
mov
add
pop
dec
add
sub
pop
dec
add
or
add
dec
add
jae
add
dec
add
cltd
dec
add
movsl
dec
add
xor
add
pop
dec
add
add
add
int3
fldl
add
dec
stc
add
dec
jmp
add
add
cld
lret
mov
dec
cld
lret
imul
xchg
dec
cld
lret
mov
add
stos
dec
cld
lret
hlt
add
dec
mov
add
dec
rorl
lret
in
add
jecxz
cld
lret
ljmp
dec
hlt
add
dec
call
add
dec
cmp
dec
in
add
dec
cmc
add
add
add
add
cld
lret
in
add
add
add
lret
movl
jmp
mov
add
mov
movl
out
movl
mov
inc
rolb
xchg
aas
rolb
jmp
cmp
add
rolb
popl
add
rolb
jmp
add
int3
add
inc
rolb
dec
aas
rolb
sti
rolb
iret
dec
rolb
testl
add
rolb
cmp
imul
add
push
sub
inc
fcmove
ficoms
cld
and
dec
mov
shrb
jecxz
inc
popf
lahf
cmp
or
pop
inc
xorl
xor
imul
add
int
dec
fldt
mov
sbbb
imul
push
jae
pop
scas
push
pop
jno
sub
movsl
rclb
cmp
mov
stos
lahf
pop
cmc
clc
pop
rcll
adc
add
loop
add
push
ljmp
test
dec
pusha
test
into
ja
aam
xchg
dec
ja
mov
lock
add
mov
nop
adc
xor
aas
movsl
or
sub
lahf
xchg
adc
jge
data16
push
fadds
sub
int3
jnp
push
lods
aam
dec
aas
mov
outsl
mov
pusha
sbb
xor
call
jbe
cmp
adc
outsl
out
mov
jae
xor
mov
or
scas
js
call
jo
mov
jmp
popf
adc
int
inc
mov
jmp
roll
pop
cmp
mov
gs
sarl
scas
lret
in
testl
or
mov
cmc
addb
mov
cs
add
add
add
scas
lcall
lret
adc
sub
std
je
mov
dec
dec
test
xor
insl
mov
adc
imul
sbb
adc
mov
xor
pop
mov
pop
cld
adc
int3
adc
add
sbb
out
cmp
adc
shrb
pop
insl
mov
cli
adc
push
and
mov
adc
xor
cltd
xchg
and
rcrl
sbb
add
inc
lret
addl
mov
adc
lret
push
pop
pop
lods
inc
in
rclb
jns
add
xchg
xor
jae
pop
mov
push
movsb
jae
sbb
movsb
dec
add
add
add
jg
rclb
decl
cmpb
push
into
adc
rolb
add
lret
xor
xchg
xor
test
inc
movl
mov
add
pop
and
cs
push
sahf
mov
cmpsl
mov
addl
rclb
sbbb
in
std
pop
pop
test
rolb
icebp
inc
pusha
add
cltd
mov
inc
jecxz
sub
lret
add
cltd
mov
jb
xor
icebp
jle
add
cltd
mov
cmpsb
stos
adc
inc
push
iret
adc
dec
cs
ret
repnz
xchg
cld
pop
cmp
sub
jl
fucomp
add
ja
jmp
add
int3
pop
jne
inc
int3
in
add
loope
cld
lret
sub
lret
in
add
lret
flds
or
sub
lret
in
push
int3
or
int3
test
add
lret
stc
add
int3
mov
add
lret
or
lret
mov
add
lret
imul
inc
int3
loope
and
imul
inc
int3
add
add
add
add
dec
mov
or
add
add
cld
lret
adc
mov
jmp
add
add
lret
add
sti
jnp
jmp
or
add
sti
fwait
add
sti
fildl
jmp
inc
add
sti
stos
add
sti
jmp
jmp
or
add
sti
dec
add
sti
mov
jmp
dec
add
sti
jae
jmp
or
add
add
add
sti
xchg
add
fld
cmp
jmp
lret
fld
push
add
or
cltd
mov
cltd
dec
add
lret
cltd
push
add
jecxz
jp
sub
pop
je
pop
xor
imul
or
add
and
sub
test
sub
add
add
movl
cmp
or
sbb
pop
add
sbb
jmp
adc
push
add
or
and
add
insb
add
or
add
or
or
add
add
add
or
add
or
add
and
or
add
add
add
or
add
or
add
or
and
add
add
jmp
or
jmp
or
int3
jmp
add
lret
jmp
or
lret
jmp
or
lret
jmp
or
dec
int3
jmp
add
int3
jmp
or
int3
sub
int3
cli
add
int3
jmp
or
int3
jmp
add
lret
jmp
or
lret
jmp
or
int3
jmp
or
lret
jmp
flds
add
sti
jno
jmp
or
add
add
add
sti
xchg
add
or
add
add
lock
fiaddl
add
or
add
add
add
sti
roll
sti
inc
add
or
add
int3
add
sti
jp
jmp
or
sti
add
add
or
add
add
add
add
add
sti
stos
add
or
add
add
add
sti
lret
sti
dec
add
sub
inc
add
mov
add
add
int
add
les
jmp
rclb
fld
jns
jmp
rcl
test
adc
fld
imul
test
ret
or
cltd
ret
mov
test
shl
test
ret
push
add
adc
add
sub
pop
ret
jne
imul
lret
lret
add
add
ret
and
add
and
or
add
add
add
or
add
add
and
or
add
add
add
or
add
or
add
incl
add
and
or
add
add
add
or
add
decl
add
jmp
or
jmp
or
lret
jmp
add
lret
jmp
or
int3
jmp
add
jmp
or
int3
jmp
add
lret
jmp
or
jmp
jmp
or
lret
jmp
or
jmp
add
lret
jmp
or
int3
sub
int3
cli
add
int3
jmp
or
int3
jmp
fadds
mov
add
or
add
cli
pop
add
sti
les
jmp
or
add
add
add
or
jmp
add
sub
add
or
add
cli
in
fiaddl
mov
jmp
or
add
cld
dec
add
sti
mov
add
or
jmp
xchg
jmp
or
sti
lods
add
or
add
roll
or
pusha
add
shlb
sbb
add
add
rolb
sub
addb
rolb
mov
add
add
xlat
sbb
xchg
add
or
add
xlat
js
jmp
fcom
add
xlat
push
add
xlat
or
test
xlat
dec
add
or
add
push
add
adc
je
jecxz
add
sub
add
or
or
cmc
or
add
or
cmc
or
or
cmc
or
add
or
cmc
or
add
or
or
cmc
or
add
or
or
cmc
or
add
push
add
or
or
cmc
or
add
or
add
or
or
add
or
int3
jmp
or
int3
jmp
or
int3
jmp
cld
or
jmp
or
lret
jmp
or
int3
jmp
or
lret
jmp
cld
push
int3
jmp
or
int3
jmp
cld
inc
int3
jmp
or
or
jmp
cld
adc
jmp
or
lret
jmp
or
int3
jmp
or
int3
jmp
fnstcw
jmp
sti
loope
sub
lret
add
pop
mov
add
sti
roll
cli
push
add
cmp
add
or
jmp
cli
ss
or
add
or
jmp
add
idiv
fdivr
roll
jmp
sti
jmp
add
fsubrl
jmp
sti
leave
add
cli
es
mov
jp
jmp
movsb
inc
add
fwait
add
fwait
push
add
cltd
add
add
aam
add
push
add
adc
insb
add
add
pop
add
jo
pop
add
add
ret
pop
aad
add
add
add
add
add
pop
mov
add
add
add
add
add
pop
loop
push
add
add
flds
sbb
xchg
add
sarb
add
add
flds
cmp
rolb
fcom
adc
test
add
add
cmc
cli
or
cmc
cli
mov
cmc
cli
dec
add
sti
repnz
cmc
cli
push
add
cli
adc
add
or
add
cli
je
cmc
cli
xor
cmc
sti
lret
or
add
cli
and
cmc
sti
stos
add
cli
add
cmc
cli
test
cmc
cli
inc
add
sti
ljmp
cli
pop
add
cli
sbb
cmc
sti
lcall
cli
jl
cmc
cli
cmp
cmc
sti
fiaddl
and
pop
add
cli
insb
add
int3
jmp
cli
pop
lret
jmp
sti
jl
jmp
cli
jp
add
jmp
sti
adc
hlt
sti
inc
lret
cli
or
int3
jmp
sti
adc
jmp
or
int3
jmp
sti
loop
jmp
sti
add
jmp
sti
ret
cli
out
dec
jmp
sti
add
int3
jmp
or
jmp
sti
or
jmp
fisttpl
flds
jmp
stos
mov
jmp
fwait
rolb
jmp
mov
fmuls
iret
add
imul
sub
cli
or
add
dec
mov
add
or
add
sub
jmp
add
ss
sbb
add
or
jmp
cli
cmc
fmuls
roll
jmp
jmp
add
fisubl
std
or
jmp
flds
add
rcrl
add
add
add
add
add
add
imul
add
push
roll
add
adc
add
add
add
add
add
roll
pop
roll
inc
pop
roll
add
add
and
roll
and
rorl
add
roll
or
roll
add
aam
add
aam
add
aam
add
aad
sbb
add
pop
add
pop
add
pop
or
and
add
and
or
add
or
add
or
rolb
or
add
incl
add
and
roll
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
int3
call
add
add
jmp
add
jmp
add
jmp
add
jmp
add
ljmp
int3
ljmp
int3
in
add
int3
in
add
in
add
int3
in
add
in
add
int3
in
add
in
add
int3
in
add
jmp
repnz
loope
stc
leave
jecxz
sti
cmc
add
int3
jmp
add
int3
jmp
add
add
jmp
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
int3
add
fxch
add
fxch
add
jmp
int3
add
fxch
add
fxch
add
test
int3
add
cltd
int3
add
cltd
int3
add
stos
int3
add
stos
int3
add
sahf
int3
add
cltd
int3
add
jne
or
in
or
add
or
xor
or
add
or
and
or
adc
or
in
or
jne
or
add
add
add
add
add
or
xor
or
mov
or
adc
or
xchg
add
add
or
roll
add
add
add
add
add
jecxz
or
jecxz
or
arpl
or
mov
add
add
add
add
or
stos
add
add
add
add
add
add
add
add
or
jmp
or
imul
add
add
add
or
int3
and
int3
mov
add
lret
push
add
int3
out
add
int3
addr16
lret
scas
add
lret
daa
add
or
iret
add
int3
inc
add
lret
popl
clc
lret
pop
add
int3
filds
or
push
add
lret
lahf
add
lret
pop
add
int3
pop
add
int3
xchg
add
lret
pop
add
lret
xlat
add
int3
testl
clc
lret
daa
add
lret
lahf
add
int3
xlat
add
int3
dec
add
lret
pop
add
lret
jg
or
out
or
pop
add
lret
add
cld
roll
popl
add
add
roll
lahf
add
add
add
add
aam
call
add
add
add
add
add
add
aam
mov
aam
or
add
add
add
aam
cwtl
add
add
add
add
cld
roll
cwtl
add
add
roll
fadds
aam
lock
add
aam
and
roll
mov
add
add
add
add
cld
roll
addb
add
and
or
mov
enter
leave
or
loopne
or
pusha
leave
or
xor
or
push
leave
or
in
or
fs
or
xchg
enter
leave
or
enter
leave
or
je
or
add
or
aam
or
push
leave
or
test
or
hlt
enter
or
je
or
add
or
push
or
insb
enter
or
sbb
or
jl
or
sub
or
mov
enter
addb
call
add
add
add
add
or
test
or
pusha
add
add
add
add
add
add
add
add
add
or
ss
add
mov
or
add
add
add
add
add
or
xchg
add
or
push
add
add
add
add
add
add
or
outsb
add
add
xor
lret
xor
or
mov
add
lret
rolb
lret
inc
add
int3
inc
add
int3
rolb
stc
lret
rolb
lret
inc
add
int3
inc
add
or
loop
stc
lret
loop
stc
lret
push
add
int3
push
add
int3
ret
lret
ret
lret
xor
or
xor
int3
ret
lret
ret
lret
xor
or
xor
int3
bound
lret
bound
stc
lret
rolb
int3
rolb
or
out
add
lret
out
stc
lret
add
lds
add
add
add
add
add
add
add
add
add
lds
movb
add
lds
inc
add
add
add
add
add
add
ret
add
ret
add
add
add
add
add
ret
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
ret
add
add
add
add
add
jbe
or
add
or
out
or
mov
or
push
rorb
add
int
add
or
xchg
into
or
push
int
add
into
or
int3
or
int
add
int
add
into
or
inc
int
add
into
or
out
or
int
add
int
add
or
int3
or
xchg
or
test
add
int
add
int3
or
data16
add
int3
or
out
or
rorb
add
iret
or
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
pop
add
add
add
pop
add
add
add
pop
add
add
add
or
and
or
mov
or
lret
mov
or
dec
add
int3
lret
lret
jmp
add
lret
roll
add
lret
cmc
add
lret
in
add
lret
fildl
add
lret
roll
add
lret
testl
std
lret
out
add
lret
fadds
add
lret
rolb
add
lret
hlt
add
lret
in
add
lret
fiaddl
add
roll
rolb
roll
out
add
add
add
add
add
add
pop
roll
out
iret
pop
loope
les
loope
ret
or
add
les
lock
or
add
rorl
cmc
rorl
or
ret
or
cld
ret
hlt
ret
or
or
pop
enter
or
test
or
pop
enter
or
test
or
push
or
add
or
or
mov
or
add
insb
or
push
dec
fisttpl
push
outsl
fisttpl
push
outsl
fisttpl
push
pop
fisttpl
push
das
fisttpl
push
dec
fisttpl
push
das
fisttpl
push
pop
fisttpl
push
dec
fisttpl
push
das
fisttpl
push
das
fisttpl
push
pop
fisttpl
push
das
fisttpl
push
pand
push
out
fimull
push
bswap
fisttpl
pmaxsw
pmaxsw
pmaxub
fisttpl
bswap
fisttpl
fisttpl
sldt
out
ud0
sysret
out
ud0
or
sysret
jecxz
adc
icebp
adc
adc
pop
adc
pop
sbb
negb
pop
pop
adc
sbb
sti
sbb
or
sbb
clc
ljmp
jmp
lret
sbb
sbb
lcall
sbb
or
sbb
or
sbb
cli
out
sbb
cli
push
sbb
ljmp
sbb
add
sbb
repnz
xlat
repnz
xlat
loop
sti
loop
sti
rcrb
jmp
rcrb
jmp
add
sbb
add
sbb
cmc
pop
or
in
pop
add
in
cld
iret
fstpl
hlt
iret
aad
in
iret
int
in
add
pop
adc
cmc
pop
or
in
pop
add
in
cld
iret
fstpl
hlt
iret
aad
in
iret
int
in
add
pop
adc
hlt
and
shl
and
rcr
and
rolb
aam
rcrl
add
rcrb
hlt
loopne
sbb
in
rcrb
aam
rcrb
add
rcrl
jmp
dec
pop
icebp
add
lds
repz
or
mov
or
out
add
psubw
fcoml
stc
adc
adc
repnz
fdiv
fcoml
fcomi
fstl
fcomi
fstl
cli
adc
adc
adc
adc
pop
fcoms
mov
fsts
lods
ficoml
adc
lods
ficoml
push
scas
xlat
push
push
mov
scas
xlat
push
push
scas
fcoms
pop
scas
fcoms
pop
jle
pop
pop
outsb
fcoms
pop
jno
sbb
jno
sbb
popa
aad
sbb
sbb
xor
sbb
xor
sbb
add
sbb
add
sbb
xor
sbb
xor
sbb
and
sbb
and
sbb
xor
sbb
xor
sbb
add
sbb
add
sbb
add
sbb
or
sbb
cli
in
sbb
cli
in
sbb
add
sbb
sbb
sbb
sbb
int
sbb
int
sbb
pop
sbb
pop
sbb
in
pop
sbb
in
pop
sbb
sbb
sbb
sbb
pop
sbb
into
pop
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
int3
std
add
int3
or
int3
add
int3
stc
add
int3
add
int3
test
add
int3
mov
add
cltd
add
int3
imul
int3
sub
int3
or
int3
jmp
add
int3
jmp
add
int3
jmp
add
ljmp
int3
out
add
loope
add
fldl
add
int3
stc
add
int3
add
int3
leave
add
int3
flds
add
sub
int3
or
int3
add
int3
add
cld
lret
add
int3
add
std
lret
add
push
int3
add
xlat
out
jmp
sti
lret
add
pop
int3
add
adc
add
or
add
mov
out
jmp
jecxz
add
add
add
lds
add
mov
cltd
lock
pusha
pop
pop
nop
popa
jo
mov
jmp
sti
jnp
push
test
loopne
dec
sbb
dec
fdivrs
add
in
out
mov
sbb
mov
mov
test
std
fstps
inc
sub
insl
js
aam
es
roll
jmp
xor
add
add
pop
xchg
add
mov
or
loope
insb
cmp
mov
lret
mov
add
sbb
dec
cmp
or
movsl
xchg
popa
mov
std
dec
mov
ja
mov
lods
add
fcom
xlat
pop
fistpll
lods
not
pop
xchg
fsubs
cmp
ficoms
push
xlat
mov
cmpsl
dec
scas
mov
ret
cs
mov
mov
add
movb
or
aaa
outsl
out
repz
push
shrl
gs
xchg
inc
fdiv
in
fildl
daa
in
mov
adc
push
imul
aas
mov
mov
mov
int3
ja
stc
push
add
stos
insb
mov
sub
jl
imul
fs
push
scas
add
inc
xchg
push
js
pusha
add
sub
mul
fnsave
cltd
lods
outsl
mov
popf
mov
xor
call
mov
test
out
and
cltd
pop
push
lods
cmpsb
pop
add
das
lret
rep
add
popa
aas
xchg
mov
add
test
ret
incl
jne
lods
push
jp
das
jl
lods
mov
sub
inc
test
into
xor
mov
fcomp
mov
rcll
cmp
daa
stc
adc
mov
or
je
lcall
mov
out
or
les
lret
mov
scas
push
sbb
cwtl
sbb
cs
add
add
sub
leave
andb
aaa
repnz
adcl
adc
pushf
add
fiaddl
jae
shll
popf
in
xchg
daa
mov
or
and
push
in
and
xchg
jo,pt
or
inc
pop
jge
cmp
lock
imul
rcrl
add
inc
push
push
imul
push
add
ljmp
dec
repz
aad
frstor
add
mov
mov
in
push
mov
add
out
shll
sub
fisttps
add
mov
cmpsb
xor
mov
sahf
out
mov
cmp
or
sbb
pop
dec
dec
add
sarb
add
xor
aad
pop
inc
test
lret
jbe
add
jo
lret
cld
jg
lods
push
shrl
shll
cmc
cmp
mov
add
fcmovu
add
popa
clc
mov
jb
pop
mov
out
sub
ret
rclb
xchg
pop
gs
mov
mov
pop
lret
test
pop
repz
in
int
or
dec
push
cli
std
hlt
imul
pop
ficompl
iret
imul
ja
aad
push
fs
push
xlat
jb
xor
cmp
rcr
rcrl
cmpsb
aam
pusha
ja
je
xchg
dec
mov
mov
inc
cmp
les
or
jmp
xor
std
insl
mov
xchg
sbb
in
mov
insl
movsb
ret
add
shlb
add
push
cmp
lret
push
cmpsl
jmp
je
mov
push
std
lods
lea
push
inc
cltd
pushl
cmp
and
push
inc
sbb
mov
xor
lods
sub
sbb
and
fsts
mov
adc
push
push
jle
add
pop
out
mov
in
insb
jmp
divb
jne
jne
ficoms
shll
mov
sub
sub
cwtl
fistps
sbb
lods
xor
or
ja
xlat
je
push
inc
inc
dec
and
enter
shll
adc
jecxz
mov
mov
push
sbbb
mov
xlat
push
sub
add
add
out
popa
xchg
add
cs
mov
out
cwtl
sbb
push
addl
addb
inc
ss
test
cmpsb
negl
insb
xchg
add
xchg
call
lahf
je
dec
mov
xchg
cmp
push
push
shl
pop
xlat
test
inc
nop
jbe
pop
dec
popa
pop
int
nop
inc
mov
mov
add
add
gs
sub
stc
push
or
in
sbb
stc
inc
iret
mov
push
jo
ret
int3
test
mov
fisubs
nop
cltd
outsl
lahf
pop
pop
jle
test
shrl
loope
push
cmpsl
push
sub
jno
or
mov
inc
jmp
repnz
loope
or
jns
cmc
aas
sub
push
push
jecxz
stos
int
and
enter
mov
jbe
scas
xchg
test
and
mov
cli
jb
push
loope
sbb
pop
mov
push
jbe
insl
cmp
clc
pop
mov
sbb
mov
outsb
jb
pop
imul
inc
jle
xchg
pop
mov
rcll
lock
add
add
movsb
and
mov
loope
pop
mov
push
push
inc
adc
lods
cmp
lret
jbe
sbb
inc
sub
dec
jno
sub
push
mov
lahf
or
daa
mov
sub
rcl
inc
sti
adc
imul
sub
sbb
pop
pop
jg
lcall
add
add
gs
inc
jle
negl
std
gs
rcl
mov
lret
int3
repz
lcall
cmpsl
test
push
cmpl
jg
and
and
adc
xchg
out
pop
daa
ret
je
xlat
insl
movsl
loope
je
mov
aas
ljmp
ja
fdivrp
xor
mov
add
add
sbb
jae
push
inc
adc
cmp
or
fistps
fistpll
add
pusha
arpl
scas
mov
hlt
movsl
sbb
ret
xchg
fnstenv
jo
xchg
mov
xchg
jle
xor
sub
pop
cmp
jp
pop
cmp
fiaddl
and
lds
adc
repz
xchg
test
xor
arpl
fcompl
lret
and
sar
loope
fcoms
xchg
sbb
inc
pop
sti
xchg
sbb
jns
or
fildl
rcrl
adc
cmpb
cmpsl
aam
push
fisubs
inc
loop
xorb
and
outsb
xor
out
sbb
inc
imul
jecxz
out
fadd
lods
jmp
lcall
mov
ljmp
jns
mov
shlb
arpl
mov
jb
stos
repnz
mov
mov
pusha
fisubrs
and
into
fsubrp
in
dec
xchg
add
loope
jl
idivb
clc
punpckldq
add
xor
pop
sbb
pop
pop
cmp
imul
in
jne
push
mov
and
cmpsl
or
loope
adc
aam
xchg
test
pop
sysret
cmp
mov
dec
js
ljmp
inc
out
sub
mov
or
add
inc
mov
scas
pop
xchg
aas
jo
into
jo
mov
out
ret
cltd
std
pop
and
gs
nop
jle
mov
push
out
ja
inc
imull
test
mov
mov
xor
pop
lret
xchg
rol
scas
sti
addl
jno
add
add
lea
mov
adc
mov
pop
xchg
or
add
push
or
shrl
fmuls
popf
cli
pop
inc
pop
sti
loop
es
movsl
mov
mov
out
std
sbb
in
sbb
outsl
imul
lods
mov
repz
mov
arpl
jae
fimuls
adc
std
or
jns
push
xor
dec
sbb
xchg
leave
or
or
or
jle
test
mov
in
adc
popf
daa
pushf
iret
lret
ffreep
sub
insl
push
lea
pushf
add
cltd
pop
sahf
imul
repnz
and
or
fsubrl
into
leave
pop
mov
and
sbb
add
icebp
scas
sub
mov
arpl
das
lods
sub
pop
negb
out
pop
xor
pop
cmc
loopne
push
add
rcll
mov
pop
and
dec
push
add
dec
push
jle
cmpsb
nop
jg
or
jge
loope
jl
xor
decb
jp
stos
adc
mov
insb
inc
pop
insl
inc
lcall
lds
arpl
push
popf
push
loope
sub
lock
popa
mov
dec
xor
jmp
scas
data16
add
add
fadd
dec
aaa
pop
jg
pusha
adc
dec
mov
lret
imul
mov
les
push
push
inc
outsl
mov
addb
inc
sbb
add
add
cmp
les
inc
stc
mov
push
dec
xor
fs
rorb
mov
and
je
push
cmp
jl
or
mov
pop
push
jle
pop
pop
xor
pop
sub
pop
pop
aas
jmp
push
sub
outsl
pop
je
lods
pop
jmp
mov
mov
inc
jp
jecxz
mov
lret
daa
sbb
add
fdivrl
es
stc
loop
push
lcall
in
inc
mov
in
fstps
stos
fistpl
insb
adc
xor
ror
push
sbb
mov
fisubrs
fsubrs
and
cwtl
sub
ret
out
nop
aam
inc
jno
inc
or
lret
lea
movsl
dec
add
inc
js
inc
in
mov
inc
negb
mov
mov
popa
test
lcall
notl
sbb
pop
add
sub
cld
fnstenv
fdivrp
sbb
and
fsubs
insb
movntq
out
test
adc
out
or
adc
or
add
inc
add
das
sub
add
push
xchg
jecxz
inc
or
push
or
test
cmpsl
xchg
pop
mov
jecxz
jne
cs
sub
xchg
mov
test
xchg
mov
pop
lahf
sahf
xchg
pop
sahf
jg
mov
pushf
int
and
xor
fwait
cld
xchg
fistpl
out
inc
orl
pop
popl
dec
mov
mov
mov
mov
xor
cvttps2pi
cmpb
jl
add
adc
xchg
pop
loop
mov
and
and
jmp
loop
daa
scas
dec
outsl
lods
add
lods
lods
xor
cmpsl
push
xor
add
xchg
jne
sub
mov
movsl
out
mov
push
sub
mov
jns
les
lahf
popa
inc
mov
cld
xorl
mov
mov
aad
jle
adc
mov
add
fisubrs
inc
pop
lahf
xlat
xchg
xchg
in
add
push
sub
push
jno
adc
xchg
fsubrp
xor
in
jne
in
mov
push
or
in
add
jnp
cmp
mov
fnstsw
mov
cmp
xor
movsb
fcom
jg
mov
stos
les
pop
imul
adc
adc
lods
jne
sti
adc
lret
and
xchg
jg
add
dec
into
stos
aas
mov
nop
repz
inc
sbb
dec
fcmovb
mov
adc
lret
jbe
pushf
sub
sarl
mov
cmp
data16
xchg
cwtl
mov
testb
add
jmp
pop
outsl
repz
mov
dec
jp
mov
xor
inc
fwait
sbb
movsb
subb
aam
jno
cmp
cmp
or
jmp
ret
xchg
data16
sub
lahf
dec
and
mov
pop
jo
psadbw
rcrb
mov
xor
aas
pop
adc
fwait
add
fmull
push
fwait
hlt
sub
cmpxchg
inc
pop
and
dec
insb
cmpsl
push
rorl
add
imul
push
jnp
inc
pop
ret
dec
inc
lret
cmpsb
adc
jae
enter
adc
pop
sub
inc
jns
sti
add
lahf
data16
mov
ljmp
das
and
sbb
jg
xorl
shrb
dec
shrb
cmp
cmp
lcall
xchg
xchg
sub
cmpsl
inc
mov
lret
clc
or
addr16
push
addl
cmpsb
inc
adc
inc
push
fistpl
in
push
xchg
jno
loope
leave
cltd
dec
stc
fucomi
sub
xor
or
rcr
mov
scas
pop
pushf
push
xor
cmp
sahf
push
inc
enter
adc
lods
aaa
push
lods
inc
cmp
out
lods
add
call
jns
mov
add
push
push
pop
push
inc
mov
aad
push
push
mov
mov
cmp
add
mov
push
fwait
push
nop
mov
in
in
rcll
or
fcmovb
xchg
jg
inc
test
cld
add
mov
pop
push
loop
ja
jge
rcrl
fdivrl
add
mov
insl
enter
jne
inc
shll
mov
fisubrl
sbbl
and
jmp
fidivrl
sbb
mov
jno
mov
or
mov
loop
cld
ret
inc
pop
xor
into
lods
in
pop
ss
movsl
enter
adc
or
mov
push
add
movsb
clc
jge
mov
bound
push
xchg
cmpl
cmpb
pusha
daa
in
jb
cmp
xchg
daa
push
cmpsb
aad
out
push
cmp
std
sub
xchg
jle
mov
mov
rol
shll
add
cmp
push
jle
xor
mov
add
or
or
sbb
sbb
mov
mov
cmpsb
test
xchg
push
xchg
xchg
jmp
jno
es
mov
fbstp
loope
test
fs
cmpl
cmp
jmp
icebp
cmp
subb
aam
add
jle
mov
mov
shrl
add
add
and
sbb
loope
aad
repz
scas
test
data16
ja
cmp
or
add
gs
test
sbb
rcrb
jbe
icebp
xchg
adc
idivb
pop
rorl
mov
or
jmp
ret
iret
cmp
mov
add
add
je
rcl
imul
jo
mov
es
add
push
add
mov
or
dec
or
frstor
hlt
xchg
and
aad
and
xor
scas
fldcw
loopne
dec
mov
mov
pop
pop
in
aam
adc
push
loopne
pop
pop
xor
add
inc
out
repnz
pushf
loope
mov
jnp
mov
add
lds
or
imul
add
add
or
mov
loopne
popf
sub
outsb
mov
and
sti
and
sub
fwait
push
test
orl
and
sub
insb
ret
dec
dec
sarl
fildl
fwait
pop
jecxz
cltd
outsl
jne
xchg
mov
pop
iret
jp
lods
sbb
cmp
jo
sbbb
fdivs
sub
daa
sgdtl
adc
mov
or
pop
repz
hlt
loop
sub
mov
adcb
and
cmp
call
jb
mov
pop
mov
mov
add
push
pop
add
outsl
aam
xor
leave
mov
outsl
fldcw
sbb
cmc
or
sub
insb
xchg
jg
pop
add
testl
sbb
xor
dec
out
add
leave
xchg
in
xchg
shlb
ror
les
pop
fadd
pop
sbb
push
repnz
jl
test
dec
test
add
jle
repz
fs
push
into
jp
add
xor
add
mov
rcl
xchg
aaa
pop
mov
xchg
lods
hlt
sti
cmc
sub
push
and
in
pop
pop
mov
and
push
cmpsb
add
daa
push
pushl
xchg
add
jb
adc
cld
add
mov
aam
test
sbb
add
cli
and
lahf
bound
mov
cwtl
and
scas
test
jnp
cmp
orl
push
insb
insl
iret
pop
and
push
mov
lret
ljmp
gs
add
mov
jp
mov
push
dec
lret
and
ficoms
sub
es
or
sub
je
push
aad
or
repnz
cld
add
adc
arpl
sar
ror
and
daa
push
daa
into
cmp
sub
mov
mov
inc
popa
mov
lods
clc
mov
lret
pop
aaa
cmp
pop
ret
fisttps
mov
lahf
add
insw
jmp
and
cs
mov
lock
rcr
xor
dec
xchg
add
hlt
fidivrl
in
filds
push
imull
add
mov
mov
push
mov
jmp
js
loop
lea
fstpl
aaa
and
clc
adc
or
loop
xchg
jle
sub
jnp
aam
shlb
xor
cmpsb
push
xchg
cwtl
xor
sub
jle
sbb
add
jmp
xchg
or
int
aas
lret
aam
test
lret
push
adc
cmpb
sub
pop
jle
fwait
test
out
mov
jbe
and
jg
aam
test
inc
sarl
sahf
jns
outsb
sub
pop
int
sbb
pop
scas
sbb
popa
and
loope
pop
out
lret
push
add
cmp
pop
rorb
pop
add
sub
fsts
call
push
iret
mov
rcll
decl
xorl
mov
cld
sbb
and
dec
mov
cmp
hlt
mov
data16
stos
cmp
or
xor
sahf
mov
test
test
imul
push
xchg
add
rcrb
pop
pop
mov
add
push
stos
addr16
sub
icebp
and
test
les
sti
leave
shll
sub
decb
insb
mov
add
add
shr
lock
fisubl
mov
iret
dec
sbb
push
cmpsl
dec
das
inc
mov
cwtl
stos
adc
cwtl
add
fcoms
pop
test
push
insb
adc
and
adc
sbb
adc
push
bound
loopne
imul
add
pop
pop
push
cld
jb
pop
aas
ret
ficoml
xchg
fwait
psubsw
pop
push
and
sbb
sub
aad
pop
js
mov
mov
cmp
fadds
imul
stos
mov
and
adc
jbe
and
std
xchg
sub
in
push
leave
movsl
and
repnz
sub
cmpsl
cld
imul
int3
mov
repz
jo
hlt
xor
mov
mov
lock
jne
shll
sti
inc
dec
mov
xor
pop
js
add
lea
jge
jp
cmp
rorb
add
jle
imul
inc
add
add
out
jbe
fld
icebp
das
les
sarl
cmpsb
fimull
adc
jnp
dec
pop
push
arpl
repz
pop
push
cmp
insl
adc
sbb
seta
sti
mov
xor
shrb
adc
movsb
cli
push
clc
mov
xchg
xchg
xlat
les
ss
mov
test
cld
adc
xchg
lret
and
mov
imul
pop
add
cmp
js
loop
addr16
and
push
std
pusha
dec
out
xchg
cmp
iret
out
dec
lock
cmp
test
adc
add
push
sub
mov
js
jp
inc
push
lret
add
cli
aaa
in
fprem
mov
cmp
cmp
or
jae
cs
inc
cmpb
mov
jb
pop
xchg
dec
int3
inc
push
movsw
add
orb
lock
sbb
popf
movsl
adc
cwtl
insb
rclb
xor
add
dec
mov
inc
and
test
push
mov
adc
scas
or
movsl
lret
insl
xchg
orl
inc
push
sbb
ljmp
ret
out
mov
pop
fstl
pop
push
imul
lret
adc
mov
xchg
jnp
sbb
xor
xchg
and
inc
imul
add
std
jg
adc
test
lahf
push
sub
in
mov
es
enter
dec
xchg
stc
fildll
enter
pop
bound
es
xor
movsl
add
nop
shrb
mov
mov
xlat
pop
int
fisubs
sbb
push
lock
sti
das
or
xchg
dec
cmp
mov
add
add
icebp
jmp
ja
mov
jecxz
cmc
addl
ss
mov
loop
dec
sti
insl
out
and
test
xchg
inc
and
pop
sub
cmovo
mov
push
mov
lds
inc
iret
xor
shl
lret
xorl
add
ss
sti
cmpsb
insl
pop
lock
movsb
adc
add
adc
xor
frstor
bound
insb
movsl
dec
mull
scas
imul
mov
cltd
jo
shlb
fsts
or
sub
and
sbb
mov
call
mov
lret
sbb
arpl
sbb
dec
je
jmp
pop
jge
out
mov
test
into
sub
inc
mov
mov
push
jne
cmp
sarl
add
and
js
or
notb
cmp
ss
cld
insl
jl
cmc
xchg
mov
pop
fbld
call
lds
sub
add
add
out
cli
cmpsl
mov
in
jbe
jp
cmp
inc
add
aam
mov
hlt
push
inc
xlat
in
push
lods
loopne
lods
les
imul
sbb
or
filds
aad
push
int3
ja
inc
push
es
daa
repnz
shrb
int3
pushf
ret
loopne
ja
fisttpl
leave
fidivl
clc
mov
cmpsb
stc
in
seto
add
adc
fistpll
cmpsl
dec
mov
add
aad
dec
pop
and
scas
cmp
add
push
gs
adc
outsl
lods
outsb
ret
mov
add
sti
mov
mov
ja
ljmp
jecxz
mov
bound
call
dec
add
sub
jnp
imul
sub
push
fistps
xor
xor
sbb
jne
ja
push
dec
leave
lcall
mov
cwtl
lock
stos
movsl
pop
scas
stos
jae
cltd
add
jb
adc
xor
sbb
in
lock
mov
inc
add
ljmp
out
fdivs
je
fldl
add
into
mov
cs
mov
lret
mov
xchg
mov
in
lret
pushf
aad
add
jg
xchg
adc
fiadds
roll
xlat
dec
push
push
mov
push
mov
lret
loopne
icebp
mov
out
xor
xor
push
call
add
jo
sarb
fildll
inc
ss
in
sub
push
aas
sub
mov
sbb
add
mov
dec
push
les
leave
cltd
jbe
pop
or
cltd
inc
fisubs
xchg
jecxz
lcall
xchg
xchg
ljmp
push
mov
out
sub
or
aad
or
mov
mov
out
lret
fmul
enter
xchg
xor
or
add
mov
cmp
bound
mov
mov
in
xchg
inc
rclb
sti
pop
mov
insl
push
sahf
addr16
shlb
push
pushf
sbb
popl
sub
cmp
cld
mov
jle
xor
sbb
and
sbb
imul
xchg
cli
pop
add
int
pop
pusha
icebp
add
mov
ret
cmp
sbb
sarb
dec
in
rorl
ja
addr16
test
mov
mov
movsb
add
sub
xor
cwtl
sbb
out
adc
xor
jle
movsl
ds
sub
push
int3
sbb
cmp
mov
and
scas
test
inc
les
lock
icebp
add
cmp
insl
ret
add
sar
call
push
xchg
rclb
cld
xor
inc
xor
aaa
stos
mov
jmp
ljmp
rol
pop
add
add
cmp
popa
cmp
cli
add
sub
dec
sub
adc
sbb
pop
ds
fisubs
test
dec
cmp
dec
cmpb
fs
fisttpll
jo
imul
and
pop
sub
clc
icebp
gs
xchg
enter
insb
inc
and
pop
xchg
jmp
add
xchg
outsb
push
add
mov
lock
test
dec
clc
push
ds
mov
dec
lcall
cmp
or
scas
sahf
ret
cmpsb
jne
test
lcall
bnd
push
sub
frstor
add
jmp
pop
popa
push
rolb
add
mov
pop
lods
addb
fstpt
jnp
jmp
add
add
inc
cs
or
data16
push
push
bound
pop
cmp
mov
mov
in
sub
add
push
jg
gs
dec
add
dec
jne
fwait
xchg
popf
fmull
popf
lds
jmp
sahf
sbbl
adc
add
add
add
leave
mov
mov
outsb
lods
fs
inc
ficompl
adc
sahf
xlat
rcrb
mov
add
lods
adc
lods
xor
pop
repz
fwait
inc
add
push
mov
pop
or
xchg
out
loop
sub
xchg
je
loopne
jbe
dec
pop
push
ljmp
aas
subl
add
xchg
ja
jmp
cltd
mov
mov
inc
out
xor
lret
push
dec
add
jbe
jae
shll
mov
shlb
dec
cwtl
sbb
sbb
or
jbe
jb
lret
sbb
pop
lds
pop
nop
scas
cmp
not
mov
into
pop
xor
add
dec
incb
loope
inc
pusha
test
movsb
jo
mov
pop
ja
lods
mov
in
jae
out
int3
jg
into
dec
das
push
data16
adc
bound
enter
inc
mov
mov
push
out
xor
mov
shl
mov
mov
vmread
pop
jo
shl
ss
push
add
mov
and
nop
sub
aaa
inc
adc
inc
sbb
jnp
std
in
lahf
xchg
xchg
mov
cmpsl
lahf
es
cmp
movntps
cmp
iret
out
xchg
mov
leave
cmpsb
sbb
add
imul
sub
ret
pusha
stc
leave
lods
in
scas
mov
mov
aaa
add
push
and
jp
jb
mulb
stc
pop
in
ljmp
cmp
inc
jb
lcall
and
cmp
das
mov
jo
rorl
jmp
mov
or
mov
mov
addl
push
aad
shll
jecxz
cld
cmp
ret
sub
mov
or
cmc
cmpsb
insl
add
xchg
movsb
xor
das
jle
dec
dec
or
jbe
jecxz
adc
stc
push
fcomps
jmp
xor
rclb
pop
sbb
jecxz
jns
push
xchg
xchg
add
out
repnz
movsb
sbb
stos
rorl
fwait
lds
aaa
xor
inc
fldcw
and
mov
push
clc
popa
andl
cmpsb
pop
add
sarl
or
xor
dec
sub
stc
test
mov
adc
dec
int3
mov
test
sbb
and
data16
clc
add
push
dec
scas
cs
lock
icebp
loop
sbb
pop
adc
xor
in
push
iret
jb
add
shll
pushf
sub
in
push
or
and
xchg
jl
test
int3
add
dec
enter
sahf
xor
and
xchg
pop
xchg
imul
into
iret
mov
mov
f2xm1
fsts
gs
aaa
xorl
leave
jmp
or
fs
ss
xlat
sub
leave
mov
shl
push
test
mov
bound
pop
jg
sti
inc
hlt
jge
push
adc
jp
dec
xchg
xor
mov
leave
movsb
xchg
sarl
dec
dec
add
dec
and
mov
inc
insl
pop
call
insb
lods
add
arpl
or
sbb
outsl
popa
fsubs
adc
add
je
loopne
dec
icebp
cwtl
fwait
movsl
xchg
mov
add
loop
fstpl
stos
aad
dec
xor
adc
into
mov
mov
push
fs
xchg
jge
dec
sub
pop
add
out
ljmp
add
add
add
add
add
add
add
stos
leave
adc
add
enter
leave
cmp
fcmovb
push
add
jno
add
enter
enter
lret
cltd
leave
add
pop
leave
adc
pop
leave
adc
imul
adc
pop
leave
ltr
verw
leave
adc
sub
adc
pop
leave
adc
pop
leave
adc
sub
leave
adc
sbb
adc
or
adc
sub
leave
add
add
enter
enter
enter
enter
mov
sbb
add
add
add
add
add
roll
add
add
add
adc
clc
mov
ret
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
call
arpl
int3
push
in
sub
pop
and
sub
or
push
in
sub
and
sub
inc
and
and
jecxz
xor
out
add
aaa
fiadds
inc
fiadds
out
add
in
addl
out
add
jle
dec
cld
add
adc
add
add
divl
cmp
test
aam
sub
jecxz
into
cmpsl
lret
out
xlat
fcmovnbe
rol
push
call
cmpl
add
int3
add
fcmovnbe
or
jmp
jno
aam
or
add
or
sti
lret
add
xor
cld
lret
add
pop
add
add
add
add
movl
int3
add
add
add
add
faddl
mov
and
jmp
cld
lret
add
add
add
add
add
or
mov
aad
add
enter
lret
or
add
or
into
aas
stos
incb
addb
cwtl
decl
int
add
arpl
xor
shrb
rolb
add
mov
sti
mov
add
add
mov
cmc
stos
inc
imul
mov
pusha
imul
mov
add
jb
dec
cmpsb
call
incl
lea
inc
add
push
inc
add
incl
ja
inc
add
inc
add
xchg
add
add
add
add
add
add
imul
insb
add
fnsave
add
icebp
dec
cs
pushl
mov
inc
add
inc
add
adc
jno
add
inc
add
jo
add
jno
add
inc
add
insl
inc
add
add
add
add
add
add
add
int3
call
mov
lret
in
add
int3
jg
add
mov
add
int3
iret
add
int3
xchg
add
incl
add
imul
loopne
add
filds
add
pop
jge
int3
in
add
jecxz
add
lock
int3
jmp
add
fbstp
int3
filds
add
lock
int3
lock
int3
loop
add
fildl
add
hlt
jb
add
in
add
int3
cli
jb
int3
cli
add
int3
loop
add
loop
add
add
mov
add
cld
lret
add
cld
lret
add
cld
lret
add
cld
lret
add
cld
lret
add
std
lret
add
int3
add
std
lret
add
xor
add
std
lret
add
xor
add
std
lret
add
adc
add
add
int3
add
adc
add
repz
add
add
add
repz
add
lret
add
cld
lret
add
ror
add
cld
lret
add
test
rolb
add
lret
xchg
sbb
add
add
mov
add
imul
add
js
add
dec
sbb
add
add
pop
sbb
add
rolb
add
dec
sbb
add
iret
add
pop
sbb
add
iret
add
dec
sbb
add
iret
add
sbbl
add
adc
add
ror
add
sbb
add
add
rcrl
add
cmp
add
sbbb
add
rolb
add
and
add
jo
add
add
add
outsl
add
movsl
add
add
outsl
add
cmp
add
or
add
dec
add
add
outsl
add
push
add
add
jo
add
add
add
add
add
out
add
and
add
add
add
adc
add
add
add
add
add
jno
add
add
add
jo
add
add
add
jo
add
add
add
popf
jo
int3
lds
add
sahf
jo
int3
movb
add
jg
add
iret
add
int3
jo
add
rolb
int3
gs
int3
xchg
add
int3
push
jo
int3
cwtl
add
int3
daa
jo
int3
jns
add
sub
int3
jp
add
test
add
int3
stos
outsl
add
push
add
int3
stos
outsl
add
xor
outsl
add
ss
int3
lods
outsl
add
pop
add
int3
scas
outsl
add
adc
int3
scas
outsl
add
int3
add
int3
add
add
add
out
add
add
add
xlat
lret
add
add
add
add
add
lret
add
cmpsl
lret
add
int3
add
xchg
lret
add
int3
add
addr16
add
int3
add
push
int3
add
int3
add
add
add
add
add
add
int3
add
int3
add
add
add
add
add
mov
add
mov
xor
add
movl
add
xor
add
add
into
add
mov
into
add
xchg
add
dec
into
add
mov
enter
enter
enter
aaa
enter
enter
int
add
add
ja
aas
int
add
int
add
int
add
int
add
pop
add
add
movl
or
add
xlat
add
lock
add
jle
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
inc
add
add
mov
add
popa
add
xchg
add
xchg
add
add
add
add
add
add
xchg
add
lret
test
cwtl
add
je
ror
outsl
add
out
bound
ror
pop
add
lret
pop
int
add
lret
in
nop
add
lret
dec
jnp
int3
lret
out
push
add
lret
xor
push
add
int
add
int3
sub
add
int
push
in
int3
mov
push
pop
int
push
or
int
stc
int3
mov
loope
add
xor
cmpsl
add
add
dec
jmp
decl
idiv
inc
push
decl
jecxz
push
mov
cmp
and
call
pop
loopne
xchg
mov
jl
add
add
adc
sub
int3
jmp
pop
mov
sbb
pop
or
sbb
ltr
pop
decl
lcall
add
push
xor
mov
add
xor
leave
push
int
call
lds
add
inc
add
dec
add
xor
add
imul
mov
sahf
or
lret
xor
add
jl
sti
xor
sahf
mov
xor
sahf
cmpsl
xor
sahf
jecxz
mov
in
add
out
ss
ret
xor
popf
cli
xor
popf
mov
xor
popf
movsb
xor
test
insb
int3
stos
xor
cmp
add
lock
add
rcrb
add
sar
add
xor
add
xor
adc
les
jb
adc
add
adc
add
lock
add
add
in
int3
lock
int
fildl
into
shr
add
shr
add
rcl
add
shr
add
xor
add
xor
add
xor
add
adc
add
adc
add
adc
mov
jmp
lcall
fistl
lcall
mov
lcall
mov
push
sti
lds
cli
lds
test
and
sub
and
sub
loop
sub
jecxz
and
in
sub
out
pop
ffreep
and
fadd
xor
fld
xor
sub
and
sub
sbb
sbb
xor
rolb
sbb
jmp
sbb
faddl
mov
add
push
mov
add
push
lahf
add
loop
xchg
add
push
xchg
add
push
nop
add
push
ret
add
push
mov
or
mov
or
pop
mov
sysret
test
adc
mov
adc
xchg
adc
dec
add
pop
push
add
inc
add
pop
push
add
pop
dec
add
pop
inc
add
pop
aas
add
pop
push
add
pop
sbb
cld
push
sbb
std
push
sbb
incb
add
lcall
add
push
add
lcall
je
push
add
cwtl
push
add
cwtl
push
add
cwtl
push
add
cwtl
pop
add
cwtl
pop
add
cwtl
pop
add
cltd
pop
add
cltd
xchg
add
cwtl
pop
add
cwtl
pop
add
cwtl
adc
sub
add
cltd
add
cwtl
add
add
cwtl
pop
add
cwtl
push
add
cwtl
or
cwtl
or
xchg
cwtl
or
cwtl
mov
xchg
or
add
cld
push
add
sti
dec
cld
jecxz
das
add
sti
xor
in
inc
add
sti
xor
pushl
add
incl
imul
inc
cld
pop
pushl
add
cmp
insl
cmp
cmp
pop
cmp
cmp
jno
cmp
cld
xor
dec
add
aas
cld
xor
add
add
incl
xlat
incb
loope
xor
add
decb
jmp
dec
add
ss
mov
decb
inc
decb
cmp
cmp
pop
adc
rorb
lock
or
and
iret
int3
std
adc
vpavgw
into
std
adc
mov
std
test
ret
iret
mov
add
ljmp
std
adc
xchg
or
sarb
sarb
test
jae
and
pop
std
loop
push
std
or
rorb
fcmovne
inc
std
ljmp
xor
out
and
in
pop
cmc
out
add
in
in
dec
in
add
dec
add
inc
add
inc
add
add
add
dec
add
sti
bound
cmp
add
or
and
add
push
add
add
addl
or
add
sti
addb
sti
pop
add
or
add
sti
cmp
add
ret
fadd
xchg
add
ret
faddp
xchg
add
ret
cwtl
add
xor
xchg
add
ret
lcall
ret
pushf
add
fwait
add
ret
sahf
add
ret
jns
mov
add
mov
add
add
cmpsb
add
movsl
add
test
inc
shll
jnp
mov
jp
mov
shll
shll
rol
mov
add
add
or
add
or
ud2
mov
add
or
add
or
add
or
add
or
add
or
add
jecxz
or
add
dec
or
and
dec
or
mov
and
add
and
or
fwait
and
or
sahf
and
or
jecxz
xchg
or
jmp
xchg
or
jmp
test
jmp
sub
ljmp
and
and
ljmp
mov
es
ljmp
sub
or
jmp
add
add
jmp
sahf
or
jmp
mov
xchg
lret
nop
ljmp
xchg
ljmp
and
xchg
inc
out
add
or
and
or
and
cli
and
cli
shll
lock
or
and
cli
mov
inc
cli
mov
and
mov
and
cli
push
and
or
clc
add
int3
and
stc
dec
and
stc
push
and
or
and
std
xlat
and
cmc
fbld
rorl
iret
and
cli
and
or
and
ret
and
les
inc
or
and
mov
adc
mov
adc
mov
lds
and
push
and
push
and
xchg
lds
test
pop
and
push
and
pop
and
add
push
adc
dec
daa
and
add
sub
sbb
pop
and
lds
les
les
pusha
les
and
adc
dec
les
and
sahf
les
and
push
or
push
or
and
or
add
xor
xor
cmp
sbb
in
pop
rcr
pop
mov
loop
iret
fucomp
pop
scas
in
or
fldl
or
sbb
movl
push
es
pop
and
ret
and
int3
pop
mov
fidivrs
push
out
or
xchg
data16
or
push
or
out
or
loopne
or
add
push
or
pop
int3
fwait
or
jmp
popf
or
jmp
jg
shr
or
jmp
jb
por
call
in
push
or
jmp
or
lret
lea
into
lret
orb
out
daa
or
in
sub
sbb
sub
or
and
or
in
sub
insl
in
and
or
lret
out
or
in
mov
scas
or
in
mov
or
add
pop
jl
mov
jp
mov
jge
mov
jge
test
js
mov
jbe
xchg
jns
mov
jns
addl
jb
push
divl
inc
pcmpeqw
ljmp
dec
divl
inc
movq
pop
lods
add
add
lods
add
imull
add
pop
test
cld
test
div
movsl
add
push
cmpsl
add
push
movsb
add
clc
movsb
add
clc
mov
push
mov
lret
jp
add
jge
add
mov
add
jg
push
push
mov
les
push
rol
push
ret
les
push
mov
or
mov
or
les
push
test
or
add
mov
adc
js
femms
jnp
adc
mov
adc
les
jl
adc
outsl
lds
push
dec
lds
push
xor
pop
push
xor
sbb
inc
lds
push
add
les
push
out
push
push
retw
sbb
push
add
push
arpl
and
popa
or
imulb
and
pusha
or
pop
or
negb
add
insb
or
push
imul
pop
or
mulb
sub
push
or
aad
das
not
or
push
aam
xor
rorl
xor
mov
xor
mov
or
dec
or
testb
cmp
fmull
cmp
cmp
in
imulb
or
les
inc
dec
leave
pop
inc
mov
lret
pop
add
les
inc
mov
movb
mov
rolb
mov
xchg
pop
lret
mov
jl
mov
mov
jns
sarb
pop
pop
int3
mov
pop
pop
scas
mov
aas
pop
test
inc
pop
pop
mov
mov
xor
dec
or
fildl
adc
dec
or
push
fisttpl
pand
clc
fiaddl
inc
or
das
inc
cli
shrl
xchg
stc
shrb
lea
shrb
test
iret
das
jg
int
xchg
stc
int3
das
jns
or
js
or
jnp
or
pop
stc
or
push
or
xor
xor
add
xor
add
xor
add
xor
add
mov
or
xor
std
das
xchg
stc
cld
das
sub
sbb
sub
sbb
xor
stc
push
xor
or
xor
stc
and
add
aad
xor
aam
xor
aam
xor
aam
xor
pop
xor
pop
xor
xor
pop
xor
pop
xor
rcrb
mov
bound
stos
shlb
xchg
shrb
adc
shrb
add
popa
shrb
xchg
shrb
adc
shll
adc
shll
adc
mov
dec
shlb
adc
shll
adc
fadds
mov
icebp
flds
mov
adc
push
mov
adc
add
icebp
popl
icebp
dec
add
icebp
mov
add
add
inc
add
xor
jg
data16
adc
test
push
add
adc
add
icebp
dec
add
adc
add
adc
add
adc
add
loopne
repz
add
push
add
ja
push
and
and
mov
mov
lods
dec
and
lods
dec
and
dec
and
inc
and
pop
lods
inc
and
xchg
and
lods
mov
lods
les
dec
stc
add
cmpsb
aam
adc
stc
mov
xchg
pop
dec
adc
stc
test
adc
or
adcl
stc
adcl
stc
adcb
fstl
or
adcl
xorl
clc
adcl
clc
xchg
adc
movsl
jno
dec
lret
add
add
push
dec
mov
jns
fadds
dec
cs
jle
mov
dec
dec
lcall
dec
adc
push
dec
mov
push
dec
dec
cltd
pop
dec
cmc
lods
pop
dec
dec
mov
dec
scas
and
dec
dec
jns
dec
adc
ret
imul
or
dec
jecxz
push
dec
or
dec
mov
rorl
cmp
jmp
add
add
add
int3
add
add
add
add
add
add
add
jmp
lret
add
fldcw
es
jmp
scas
add
ss
shl
add
push
arpl
xor
inc
insl
insb
outsl
sub
je
rcrl
pop
mov
je
addr16
test
imul
add
add
mov
je
add
jle
sbb
add
sbb
add
sub
add
sub
add
add
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
add
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
push
jmp
cmc
push
lcall
lret
push
pop
xchg
jbe
dec
push
incl
aas
push
out
test
push
out
das
push
filds
pop
push
iret
test
add
add
jecxz
push
int
cld
mov
call
test
cld
cli
xlat
faddl
jne
fists
test
push
xchg
push
ja
mov
cli
xlat
faddl
jne
lahf
push
dec
test
push
aas
test
push
das
test
jmp
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
enter
enter
enter
enter
enter
enter
iret
add
jmp
iret
add
fxch
call
into
incl
fmul
incl
fmul
incl
test
incl
test
incl
cwtl
into
lcall
into
incl
test
incl
cwtl
enter
enter
enter
enter
pop
enter
enter
enter
enter
enter
je
add
je
add
je
add
je
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
add
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
call
add
int3
jmp
add
int3
call
add
int3
jmp
add
int3
out
add
or
aaa
jle
int3
push
add
lret
sbb
int3
das
add
fbstp
int3
gs
lret
xlat
jae
int3
pop
add
jae
int3
xor
lret
pop
je
int3
lock
int3
and
ja
adc
adc
add
leave
add
or
sbb
into
add
int3
or
movb
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
dec
or
mov
dec
or
repz
add
sub
add
add
add
xor
js
leave
add
adc
inc
add
add
adc
testl
or
add
add
add
or
gs
inc
add
pushf
int3
add
adc
inc
add
push
add
cld
inc
add
pop
add
cld
inc
add
cld
inc
add
or
and
inc
add
lret
add
add
add
add
lret
or
sub
lret
cmp
inc
add
cli
inc
add
or
inc
add
adc
stc
stc
inc
add
enter
mov
inc
add
inc
add
inc
add
adc
insl
je
add
adc
xorl
movsl
je
add
inc
add
inc
add
adc
xchg
je
add
adc
cmc
jbe
add
inc
add
ja
add
add
add
ja
add
ljmp
add
jbe
add
add
inc
add
mov
jbe
lret
stos
add
int3
pushl
lret
pop
add
int3
sti
jbe
lret
jo
out
lret
adc
lret
ljmp
lret
outsb
add
lret
arpl
lret
sbb
lret
aas
jbe
lret
fldl
or
cmpsl
jbe
lret
xor
cli
lret
sub
int3
xor
add
int3
das
jbe
int3
roll
dec
jmp
inc
int3
mov
outsl
inc
int3
popl
in
lret
ret
outsl
inc
int3
std
add
int3
lret
outsl
inc
int3
xchg
add
stos
outsl
inc
int3
add
add
add
cld
movl
repnz
add
or
lcall
add
or
inc
cld
les
imul
mov
add
add
add
or
lods
cld
movl
iret
add
add
or
fwait
cld
mov
add
movb
push
or
mov
push
or
add
cs
xor
movb
push
or
add
enter
in
inc
add
in
inc
add
push
add
in
inc
add
in
inc
add
xor
add
mov
inc
add
add
enter
in
inc
add
enter
in
inc
add
in
inc
add
push
add
inc
add
ljmp
inc
ljmp
sbb
inc
add
ljmp
lods
std
inc
add
inc
add
xorl
add
xchg
jo
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
push
add
insb
inc
add
add
inc
add
dec
add
inc
add
movsl
add
pop
insb
inc
int3
outsl
add
lret
out
inc
int3
mov
push
int3
jmp
inc
int3
xchg
add
lret
shrl
cwtl
add
lret
pushf
add
int3
and
lret
mov
add
sub
lret
es
lret
pop
insl
ror
add
int3
ror
add
int3
ror
add
lret
insb
ror
add
out
lret
dec
insb
ror
add
int3
lahf
insb
inc
int3
sbb
insb
inc
int3
add
int3
adc
add
push
or
mov
test
add
loope
stc
sbb
mov
sub
push
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
or
scas
add
add
pop
or
add
jecxz
add
push
add
jecxz
add
iret
das
add
inc
add
rolb
add
inc
add
inc
add
jecxz
add
cmc
int3
add
add
jecxz
add
jecxz
add
int3
add
imul
add
inc
jecxz
add
push
add
inc
add
jecxz
add
int3
add
xchg
jecxz
add
inc
add
cmc
add
add
push
ltr
push
push
add
inc
add
and
add
add
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
mov
or
add
mov
or
add
add
inc
add
sub
inc
int3
flds
or
dec
mov
pop
int3
shll
hlt
lret
add
add
shll
sti
lret
mov
add
xchg
mov
lock
xchg
adc
push
mov
test
mov
icebp
lret
pop
mov
test
mov
adc
pop
mov
add
int3
mov
ror
add
lret
andl
filds
insl
mov
fldl
cmc
mov
fiaddl
std
mov
aam
test
cld
rolb
lea
add
popa
or
xchg
add
add
roll
and
add
add
mov
int3
add
mov
int3
add
add
xlat
add
add
add
pusha
or
jne
roll
pusha
or
jae
pop
add
pusha
or
add
shlb
add
sub
or
add
inc
add
iret
add
sbb
iret
adc
adc
rclb
xor
inc
add
rcrb
add
rcrb
add
shlb
add
inc
add
mov
call
add
sbb
inc
add
or
inc
call
aaa
add
inc
add
sub
stc
call
add
add
call
add
add
popa
inc
add
or
jg
inc
add
add
add
bound
addb
add
bound
xor
or
std
bound
inc
add
add
inc
add
bound
mov
adc
leave
bound
movsl
add
add
bound
mov
fs
add
fs
add
add
add
bound
or
inc
add
bound
jp
adc
add
pop
add
lret
sbb
lret
dec
add
lret
pop
ror
add
lret
inc
bound
ror
add
int3
cmp
int3
lods
add
lret
sub
int3
pop
add
lret
das
bound
lret
add
lret
dec
bound
mov
adc
sub
int3
add
lret
mull
int3
push
add
int3
bound
in
stc
lret
lret
bound
stos
add
int3
scas
ror
add
int3
and
lret
xchg
add
int3
pop
arpl
lret
out
add
out
add
add
in
dec
dec
ret
lock
mov
scas
ja
xlat
lock
je
out
dec
push
inc
inc
xor
out
fcmovu
dec
mov
inc
mov
push
cli
xchg
mov
xchg
jle
inc
xor
xchg
out
cmpsb
cmpl
pop
aaa
mov
dec
test
mov
and
out
sahf
enter
fisttpll
sbb
icebp
sbb
cli
or
add
adc
rorb
dec
add
inc
das
test
mov
shr
lcall
f2xm1
adc
sub
mov
ds
cmpsb
cld
push
sti
jmp
cwtl
ljmp
std
xchg
pop
sbb
push
aad
push
pop
scas
leave
movsl
test
and
push
and
xchg
jecxz
adc
dec
push
out
dec
mov
pop
cmp
es
into
adc
xchg
repnz
xor
es
lods
sub
lcall
inc
lcall
xor
jg
dec
adc
idivb
movsl
jg
popa
aas
lods
sub
sub
add
jecxz
incl
addb
add
add
enter
mov
or
add
stos
add
add
incl
enter
or
add
in
incl
addb
add
incl
mov
add
xlat
add
add
or
add
or
int3
out
add
call
add
int
add
int
add
lret
ljmp
int
add
add
lret
add
jmp
add
add
jmp
add
add
jmp
incl
lret
add
call
add
lods
out
add
ljmp
lret
ljmp
lret
add
call
push
add
add
dec
jmp
push
int
jmp
add
add
add
add
or
clc
mov
adc
adc
adc
int
into
sbb
lds
test
shll
mov
or
xor
hlt
mov
lods
call
jmp
lds
jecxz
mov
mov
jno
jo
jne
je
pop
enter
pop
jmp
test
andl
add
pop
fildll
or
jo
cmc
cmp
das
js
fnsave
jl
and
xchg
lods
inc
vprotq
rcll
fwait
mov
call
cmpsl
cmpsl
shl
stos
int
scas
scas
leave
clc
mov
xor
icebp
mov
mov
and
add
lret
in
add
iret
add
sbb
rcll
adc
adc
test
jecxz
int
out
lret
sub
fwait
outsb
daa
out
xchg
jb
bnd
das
imulb
cmp
imul
bound
add
incl
ljmp
or
mov
push
notl
movhps
fwait
sbb
or
push
pop
and
jecxz
fbld
fldt
out
xlat
xor
xor
xor
out
xor
sub
idivl
arpl
stos
imul
mov
xor
scas
jne
sbb
xlat
pop
inc
int3
xchg
inc
shld
pop
pushf
xor
xchg
into
int
nop
fcmove
out
mov
ljmp
jle
pusha
lea
pop
mov
pop
xchg
xchg
aas
push
xchg
add
inc
dec
cltd
xchg
bound
inc
popa
pop
xor
pop
aaa
cmp
push
cmp
jne
push
xor
scas
and
jge
es
cmpsb
sub
inc
ret
inc
mov
xchg
sbb
mov
sbb
jle
push
into
addb
dec
xchg
or
in
loop
loope
out
fnsave
std
fdivrs
stc
xor
repnz
xor
icebp
add
cli
in
sub
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
cld
lret
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
add
test
int
add
cltd
int
add
int
add
mov
add
imul
add
pop
int
add
add
imul
add
pop
int
add
lahf
std
pop
sub
add
sub
add
sbb
add
sbb
add
sub
add
sub
std
add
std
xchg
std
pop
jmp
int3
add
fxch
add
fxch
add
add
int3
add
aaa
lahf
std
incl
add
sbb
aas
jae
add
jae
add
jae
add
jae
add
jae
add
lret
pop
xor
xchg
xor
pushl
add
jae
add
jae
add
jae
add
jae
add
mov
add
add
mov
jae
add
jae
add
jae
add
xor
add
pop
jb
add
jae
add
jae
add
jne
add
jne
add
jne
add
int3
add
int3
out
add
out
add
call
add
int3
out
add
out
add
out
add
call
add
int3
addl
or
pop
adc
fistl
or
rcll
add
out
add
cli
roll
add
mov
stc
adc
adc
fsts
cmpb
ljmp
adc
adc
add
or
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
leave
add
fxch
add
jmp
outsl
add
inc
mov
add
add
mov
add
loopne
inc
add
mov
add
mov
inc
add
inc
add
jmp
mov
add
cmp
inc
add
incl
inc
add
pushl
inc
add
mov
inc
add
outsl
pushl
inc
add
ret
inc
add
jo
add
sbb
inc
add
pop
in
out
sub
add
add
cmp
inc
add
add
or
inc
add
add
add
lods
adc
and
add
add
or
inc
add
add
pushf
adc
test
add
lods
adc
xchg
add
mov
out
add
add
arpl
inc
add
add
add
adc
add
add
add
negl
ret
lret
hlt
adc
int3
negl
inc
int3
in
add
xlat
sbb
in
int3
nop
adc
int3
pop
out
int3
inc
adc
int3
or
add
xor
int3
or
add
and
int3
or
add
adc
int3
lret
adc
int3
negl
inc
int3
int3
adc
int3
negl
ret
lret
int
add
xlat
sbb
ret
lret
into
adc
int3
xlat
sbb
lret
psrad
int3
rclb
lret
add
add
mov
ret
lret
adc
add
mov
add
int3
add
and
add
repz
add
loope
add
loope
add
loope
add
loop
incb
push
add
mov
mwaitx
mov
monitorx
add
push
add
mov
push
add
popa
xor
invlpg
or
lret
add
in
push
add
cmc
lret
add
in
push
add
adc
sgdtl
add
inc
add
mov
add
mov
add
or
add
stc
mov
add
mov
inc
add
mov
imul
inc
mov
add
lock
add
loopne
inc
add
add
lock
add
inc
mov
add
xor
add
and
add
lock
add
inc
mov
loop
add
inc
add
adc
scas
loop
add
inc
add
xchg
loop
add
add
sbb
inc
add
adc
stos
loop
add
inc
add
loopne
add
inc
add
add
pushf
cmovae
inc
loopne
add
add
mov
loopne
add
inc
add
loopne
add
add
lods
cmovae
inc
loopne
add
loop
add
rclb
lret
xor
add
mov
ret
lret
and
add
mov
loop
int3
nop
adc
lret
inc
loop
int3
rclb
int3
xor
add
mov
inc
int3
and
adc
push
loop
int3
nop
adc
loope
int3
inc
adc
enter
xor
inc
int3
leave
loope
int3
and
inc
int3
lret
int3
adc
inc
int3
mov
add
inc
adc
ret
lret
mov
add
xor
ret
lret
loope
int3
and
ret
lret
add
lock
push
pop
int3
add
pop
or
inc
push
int3
add
push
int3
add
push
int3
add
push
int3
add
pop
or
add
lret
add
fmulp
add
fmulp
add
into
lret
aas
pop
or
fadds
scas
lret
ljmp
pop
or
mov
testl
decl
testl
add
or
pushf
pop
lret
add
pop
or
add
push
inc
add
push
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
mov
add
mov
add
jo
inc
add
push
add
inc
add
pop
push
add
mov
add
pop
push
add
mov
add
pop
push
add
mov
add
mov
add
lock
verw
mov
in
str
ltr
inc
add
fldln2
verw
inc
add
in
cmp
inc
add
in
str
ltr
inc
add
in
verw
inc
add
in
cmp
inc
add
out
add
inc
add
out
add
add
lods
adc
add
add
mov
jnp
add
inc
adc
add
xor
add
int3
and
add
adc
add
rclb
jo
add
mov
ret
lret
popa
in
int3
mov
in
int3
nop
adc
lret
and
int3
rclb
je
add
mov
inc
int3
gs
int3
mov
in
int3
nop
adc
int3
xchg
mov
int3
mov
scas
pop
xor
int3
mov
lahf
pop
and
inc
int3
add
in
push
add
int3
aas
or
add
add
or
add
lret
add
icebp
push
add
lret
add
icebp
push
add
adc
add
adc
add
repz
add
repz
add
lret
mov
loop
add
loop
add
add
lret
add
mov
lidtl
adc
add
sbb
add
mov
add
lock
add
sarb
add
mov
add
and
add
lock
add
cmp
inc
add
enter
pop
add
pusha
mov
add
add
inc
add
add
sarb
add
imul
mov
imul
jo
inc
add
push
add
inc
add
movsb
filds
add
add
lods
adc
cmpsb
filds
add
add
or
inc
add
adc
test
adc
stos
filds
add
add
add
jecxz
aaa
mov
inc
add
jmp
sbb
inc
add
adc
jecxz,pn
pop
cmp
inc
add
jecxz
testl
adc
and
call
sub
inc
add
jecxz
cmp
inc
add
aaa
adc
int3
testl
inc
int3
sbb
add
and
inc
int3
sbb
add
adc
ret
lret
cmp
add
int3
inc
adc
lret
cmp
add
xor
ret
lret
sbb
adc
lret
push
loop
int3
adc
ret
lret
mov
adc
lret
mov
add
mov
ret
lret
mov
adc
lret
xchg
loope
int3
nop
adc
ret
loope
int3
rclb
int3
mov
add
mov
inc
int3
movsl
loope
int3
mov
xchg
loope
add
mov
adc
add
int3
add
lock
dec
mov
or
dec
mov
or
or
adc
add
int3
add
lock
punpcklwd
add
lock
push
popa
int3
add
adc
add
push
int3
add
aaa
or
rcrb
add
push
int3
add
push
int3
add
fmulp
add
testl
add
add
lret
add
outsl
insl
add
mov
insl
add
nop
pop
inc
add
ljmp
outsb
add
rcrb
add
insl
add
loopne
inc
add
insl
add
adc
add
pop
inc
add
add
adc
add
add
and
add
add
adc
add
jo
add
inc
add
add
add
inc
add
add
pusha
pop
inc
add
add
nop
pop
inc
add
pop
inc
add
inc
in
add
inc
add
add
sub
inc
add
hlt
mov
arpl
add
arpl
add
arpl
add
push
out
xchg
arpl
add
je
incl
je
pushl
add
add
arpl
add
push
out
add
add
add
inc
arpl
add
je
pushl
arpl
add
push
out
daa
add
add
add
add
add
add
add
add
add
int3
call
add
lret
call
add
lret
call
add
lret
call
add
lret
call
add
lret
jmp
add
in
cld
iret
jmp
add
in
cld
iret
jmp
add
in
cld
iret
jmp
add
in
cld
iret
jmp
add
in
cld
iret
jmp
add
in
cld
iret
jmp
add
in
cld
iret
jmp
add
in
cld
iret
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
movsl
int3
add
mov
add
movsl
int3
add
mov
add
gs
add
insb
push
add
gs
add
push
add
gs
xor
in
ss
and
out
xor
adc
add
xor
inc
xor
add
and
add
adc
add
inc
add
jecxz
add
nop
pop
inc
add
insb
add
rcrb
in
call
jae
jmp
push
call
push
incl
pop
inc
add
pop
inc
add
pop
inc
add
add
adc
add
add
rcrb
pop
insb
call
pop
inc
add
jmp
pop
inc
add
incl
adc
add
push
incl
inc
add
pop
loopne
add
inc
add
add
inc
add
add
cmp
inc
add
loop
add
call
sbb
inc
add
inc
sub
inc
add
pushl
lret
cmpsl
or
inc
add
loop
add
add
lods
repnz
add
loop
add
add
add
repz
add
call
repnz
add
repnz
add
cmc
inc
add
push
repz
push
shl
lret
jmp
add
mov
ret
loop
int3
mov
loop
int3
nop
icebp
inc
int3
shl
add
shl
int3
ret
loope
push
mov
inc
int3
aam
push
mov
repnz
pushf
clc
inc
int3
push
repz
add
add
int3
pop
loop
int3
xor
inc
int3
clc
loope
int3
and
ret
loope
int3
adc
ret
loope
int3
inc
icebp
ret
loope
push
xor
ret
inc
push
and
ret
mov
sub
inc
adc
add
and
add
loope
add
loope
add
add
or
aad
dec
mov
or
les
or
mov
dec
popf
mov
add
mov
incb
or
test
nop
or
test
dec
and
add
jo
add
push
or
lods
push
dec
xor
add
xchg
pop
jmp
pop
inc
add
call
pop
inc
add
pop
incl
inc
add
loope
call
inc
add
pop
jmp
pop
call
pop
inc
push
inc
add
push
inc
add
jmp
inc
add
pop
call
push
incl
inc
add
call
push
inc
add
jmp
push
inc
add
push
inc
add
push
inc
add
adc
incl
dec
fwait
cmc
inc
add
cmc
aas
stos
cmc
inc
add
cmc
ljmp
mov
repz
mov
inc
add
testl
sub
inc
add
testl
mov
inc
add
testl
sub
inc
add
testl
or
inc
add
testb
test
jg
testb
in
add
in
int3
inc
test
mov
dec
dec
sbb
ret
hlt
aas
dec
sub
ret
hlt
das
dec
sahf
icebp
ret
repz
dec
inc
bnd
iret
cmovge
ret
mov
out
dec
xchg
cmc
inc
int3
adc
add
shl
int3
add
iret
dec
mov
inc
int3
adc
add
int3
add
cmc
inc
int3
repnz
dec
inc
cmc
inc
int3
xlat
in
lret
jmp
in
int3
jmp
mov
push
or
lcall
add
push
or
jl
mov
add
mov
add
mov
add
mov
add
fildl
jmp
out
add
out
add
mov
and
fildl
jmp
mov
adc
mov
add
fildl
jmp
mov
mull
mov
out
fildl
jmp
mov
imul
add
inc
inc
add
xor
call
inc
inc
add
pop
add
sarb
add
xor
add
inc
inc
add
inc
add
lahf
xor
add
inc
inc
add
aas
inc
add
aas
inc
add
add
mov
add
nop
ds
add
add
sarb
add
add
nop
ds
add
add
pusha
ds
add
add
nop
ds
add
add
inc
aas
inc
add
xchg
icebp
inc
add
inc
add
add
add
icebp
inc
add
repz
icebp
inc
add
repz
icebp
inc
add
icebp
inc
add
icebp
inc
add
hlt
call
or
inc
add
repz
add
inc
add
repz
add
call
or
inc
add
repz
add
repz
add
repz
add
int3
xchg
xchg
dec
inc
repnz
int3
xchg
xchg
xor
ret
shlb
and
ret
shlb
adc
ret
rclb
inc
bnd
hlt
inc
dec
xor
ret
hlt
aaa
dec
and
ret
hlt
daa
dec
adc
ret
repz
dec
shl
lret
jg
pop
dec
mov
inc
int3
nop
iret
testl
repz
xchg
icebp
inc
int3
push
repz
add
add
dec
shl
int3
inc
repz
dec
mov
inc
int3
push
repz
mov
inc
mov
nop
xchg
lea
xchg
xchg
dec
incb
lea
cltd
mov
lea
js
dec
and
add
dec
adc
add
dec
incb
lea
pop
bound
xor
lea
cmp
dec
and
lea
aas
and
adc
lea
sahf
and
rolb
add
add
lea
xchg
ss
jle
lock
add
mov
mov
nop
rorb
inc
rorb
mov
mov
add
jmp
inc
add
adc
inc
add
incl
inc
add
sbb
add
cmp
add
sbb
add
cmp
add
sbb
push
cmp
sub
inc
cmp
add
cmp
in
add
loopne
inc
add
sbb
add
cmp
data16
add
aas
inc
add
pushl
inc
jmp
push
decb
jo
inc
add
ds
add
jno
decl
jl
inc
add
testb
hlt
decl
pop
testb
repz
decl
out
add
cld
cmc
inc
add
out
add
cmc
inc
add
out
add
cmc
inc
add
out
add
aas
sti
cmc
inc
add
out
das
jmp
inc
add
repz
and
inc
add
testl
jl
inc
add
add
add
add
pop
testl
int3
shl
int3
mov
add
mov
add
movsb
in
int3
mov
in
int3
nop
testb
in
int3
inc
testb
in
mov
test
dec
in
mov
test
dec
in
mov
test
or
dec
jmp
in
inc
xor
ret
in
inc
and
ret
in
inc
adc
ret
out
inc
shl
lret
mov
cmc
inc
int3
rcl
add
lret
mov
ret
cltd
inc
push
nop
int
add
into
mov
test
mov
xchg
mov
mov
xchg
inc
nop
lea
incb
mov
pop
jae
sbb
jae
fldcw
add
push
inc
sbb
push
inc
sub
xor
sub
inc
and
sub
int3
add
int3
add
repnz
mov
mov
add
ds
jmp
ds
pushl
inc
add
cmp
xchg
ds
pushl
inc
add
inc
add
sub
add
inc
add
iret
add
ds
inc
add
add
imul
add
stc
or
add
add
add
pop
iret
add
sub
ljmp
add
pop
pop
lcall
mov
adc
cmp
add
movsb
xlat
das
xchg
mov
daa
pop
jb
push
mov
inc
test
jb
scas
or
mov
mov
fidivs
les
loopne
pop
popa
sbb
jbe
pop
daa
iret
or
cs
add
aaa
iret
sbb
lods
add
add
add
lods
or
pop
jge
cmp
mov
push
add
pop
outsb
cmp
mov
lcall
aas
jl
subb
push
adc
push
xchg
call
inc
mov
cmpsl
leave
rcll
mov
pop
mov
gs
xchg
pushf
clc
repnz
jp
stos
sbb
stc
and
int
mov
pop
or
push
enter
pop
jmp
popl
mov
lea
sbb
dec
pop
and
or
and
xor
imul
lods
adc
xchg
in
ljmp
dec
push
sbb
leave
sar
ret
pop
les
je
lea
ds
mov
xor
pusha
adcb
data16
cmpsl
cld
xchg
stc
sbb
scas
or
fdivrs
fimull
aam
sbb
sbb
int3
popa
gs
lret
add
leave
fistpll
add
hlt
fnstenv
ds
cltd
pop
inc
jg
xchg
add
sahf
sbb
fiadds
adc
pop
pop
imulb
mov
fwait
inc
das
lret
int
add
and
or
add
dec
clc
popa
es
sbb
jle
js
pop
xchg
std
daa
outsl
insl
es
ret
dec
out
sbb
xchg
jnp
add
pop
ffree
pop
dec
jo
xlat
int
ret
dec
repz
jge
cmp
push
add
dec
push
mov
add
xchg
enter
mov
fstpt
mov
cmp
mov
orb
jo
pop
sub
and
in
lods
adc
js
rorb
cmp
adc
cmp
ror
jmp
fmul
sti
call
sbb
daa
push
popf
pop
pop
out
out
mov
sbb
ds
push
sub
lret
fwait
sbb
stos
or
int3
int3
aad
push
int3
in
jmp
xor
add
adc
inc
call
jns
cmp
jo
dec
cmp
pop
cmp
int3
imul
int3
jnp
mov
test
sub
jge
rcrl
mov
ja
jp
aam
sti
or
add
repz
cld
fcmovnbe
jecxz
ret
aam
cld
xor
es
out
iret
pop
mov
add
roll
popa
ret
sti
adc
sti
imul
sti
mov
sar
mov
push
pushf
addr16
cs
scas
aaa
out
int3
or
data16
out
stc
mov
aad
stc
lret
aad
cli
jae
jae
pop
aad
in
rep
movl
push
movsl
dec
fdivl
in
das
sbbl
fnstenv
jmp
xor
aad
mov
push
lret
lea
adc
lock
lods
or
mov
sbb
mov
aad
xor
xchg
cmp
imul
cwtl
pop
nop
addr16
dec
and
jle
loop
mov
int
dec
xor
xor
mov
mov
xor
lcall
push
dec
stos
mov
push
and
push
orb
push
or
push
xor
inc
or
test
das
push
dec
lock
jbe
jge
add
movsb
add
push
adc
outsl
jne
loop
test
repnz
xchg
sbb
and
add
adc
sub
add
push
and
outsb
sbb
outsl
mov
xchg
push
cltd
iret
mov
push
test
rcl
out
js
jmp
jns
div
shr
pop
inc
scas
sub
jmp
mov
cli
inc
aaa
add
push
das
stc
int
aaa
xchg
int
das
mov
adcl
dec
imul
cmpsl
xor
add
add
xor
pop
fs
rclb
ret
xchg
out
dec
into
add
inc
lret
sbb
and
adc
xor
push
mov
mov
in
insb
pop
cmp
mov
add
mov
roll
inc
repz
push
repz
sbb
sbb
sub
or
inc
adc
arpl
cs
mov
test
sub
push
stos
repz
pop
negb
imul
leave
mov
pop
leave
jnp
or
div
mov
jb
lret
bswap
int3
pop
and
into
sahf
es
fdivrp
mov
hlt
ret
lret
add
dec
test
mov
mov
fwait
jmp
call
mov
inc
and
cmp
cmp
add
cmp
cmp
cmp
aas
pop
cmp
and
aas
or
add
pop
dec
push
ljmp
enter
enter
mov
je
movsl
enter
out
into
outsb
jge
out
cld
cmp
jnp
mov
add
and
loope
jmp
dec
sti
adc
cmp
mov
pop
cmp
add
push
inc
adc
adc
scas
sub
sub
lcall
out
movd
add
repz
mov
and
in
dec
mov
pop
jp
and
jge
inc
mov
outsb
and
les
imul
add
add
lahf
dec
inc
add
add
push
mov
add
add
jg
add
jle
add
jl
add
add
sub
inc
add
add
inc
add
add
movsb
addl
popf
addl
xchg
add
in
inc
add
jnp
add
jge
add
add
pop
mov
push
add
add
add
inc
add
lea
mov
add
push
test
int3
pop
add
int3
lcall
int3
lcall
int3
int3
test
ds
int3
mov
ret
add
int3
fs
lret
nop
add
int3
jne
ret
add
int3
xchg
add
lods
xchg
lret
arpl
int3
popa
xchg
lret
push
add
int3
and
add
lret
jp
cwtl
lret
test
xchg
lret
addl
int3
mov
add
int3
dec
add
int3
cmp
push
dec
movsw
jb,pt
movsl
dec
push
and
int3
add
std
lret
add
jecxz
add
add
add
mov
jecxz
mov
cmp
add
add
add
mov
pop
push
mov
outsl
add
mov
orl
add
add
testb
fidivs
add
lds
add
mov
iret
dec
mov
lcall
add
stos
add
movsl
add
lret
add
cli
iret
xor
lret
enter
enter
enter
iret
insl
add
iret
jno
push
shrb
iret
push
add
iret
outsb
add
std
iret
insl
add
inc
add
pop
add
jno
pop
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
iret
outsb
add
add
sub
ja
dec
enter
mov
add
add
add
add
add
aaa
add
add
dec
pop
cmp
add
add
testb
or
add
add
add
xlat
add
add
add
add
add
add
push
add
add
add
inc
add
std
inc
add
std
inc
add
std
inc
add
inc
add
pusha
inc
add
inc
add
inc
add
inc
add
pusha
inc
add
sbb
add
cmp
in
pop
xor
loop
xor
out
add
sbb
in
out
add
ret
lret
dec
adc
adc
inc
lret
mov
stos
inc
int3
and
lret
xchg
stos
ror
stos
ror
stos
ror
int3
xlat
fistpl
int3
xchg
pop
int3
sbb
ror
add
lret
mov
mov
add
lret
out
add
int3
icebp
add
int3
jecxz
add
faddl
add
ja
ror
lds
add
mov
icebp
add
add
add
mov
add
mov
and
cld
lret
add
add
add
cld
mov
add
cld
addl
or
lret
add
add
int3
add
mov
add
mov
lcall
add
sbb
jp
mov
mov
icebp
add
mov
add
and
xchg
jno
test
addr16
mov
jb
xor
add
push
movsb
addr16
mov
je
out
mov
add
mov
add
add
mov
inc
imul
mov
inc
push
sbb
push
add
movsb
addr16
movsl
jno
dec
mov
gs
int3
add
xchg
test
jo
test
gs
popa
outsl
jne
jb
pop
movsl
jp
add
add
add
imul
pusha
insb
arpl
addr16
and
push
add
push
repnz
jbe
in
insl
popa
pop
sbbb
stc
jb
and
in
add
mov
pop
push
hlt
add
aas
add
aas
add
add
pop
testb
testl
popf
lock
add
lock
add
pop
inc
add
inc
add
lret
fcmovnu
lret
pop
aam
lret
imul
add
lret
filds
add
lock
int3
icebp
add
int3
loop
add
fildl
add
hlt
add
int3
ljmp
int3
in
add
in
add
int3
out
add
mov
mov
inc
int3
inc
lret
sub
inc
int3
adc
and
aas
int3
sub
ret
adc
lret
jo
ret
inc
int3
mov
inc
mov
lahf
inc
add
xchg
add
int3
xchg
dec
rcll
add
lret
movsb
mov
xchg
inc
sahf
mov
mov
add
add
add
add
add
add
mov
cld
lret
add
xchg
inc
jmp
push
jge
daa
xor
int3
add
jge,pn
cmp
inc
and
lret
add
add
mov
lret
add
jg
sub
fwait
dec
mov
mov
xchg
inc
add
addl
sbb
add
push
mov
pop
leave
add
fs
inc
pop
xchg
inc
dec
jmp
adcl
fwait
inc
push
sub
add
or
push
push
sbb
inc
add
sbb
add
or
inc
in
movl
outsb
cld
cmpsb
je
xchg
insl
js
in
outsl
pop
mov
insl
outsb
imul
outsb
je
add
adc
outsb
push
add
popa
sahf
jno
gs
pop
outsb
mov
inc
add
add
addr16
inc
pop
add
jne
ds
add
dec
pop
gs
arpl
pop
add
xchg
push
add
mov
aas
add
sarl
add
fdivrl
add
sarl
add
inc
add
loopne
add
inc
inc
add
inc
inc
add
inc
inc
add
add
add
out
add
or
add
lret
out
add
enter
mov
add
leave
add
add
add
xchg
data16
fwait
cwtl
jne
lahf
popf
jo
movsl
stos
add
mov
jb
movsl
add
addl
int3
mov
add
int3
cmp
int3
pop
add
int3
cmp
add
int3
xor
int3
inc
add
int3
out
add
inc
add
int3
adc
int3
add
int3
push
add
lret
adc
lret
add
mov
mov
incb
add
add
cld
fildl
adc
add
add
rorl
add
xchg
sahf
je
xchg
mov
and
pop
lock
pminsw
movsl
inc
xchg
inc
xor
dec
sub
sub
adcb
out
and
loopne
push
adc
pop
getsec
lods
pop
or
and
add
mov
outsl
add
add
pop
int
add
mov
and
inc
dec
nop
xchg
dec
dec
pushf
dec
push
mov
push
je
push
pop
pusha
sbbl
mov
ss
push
mov
outsb
outsb
popf
outsl
jb
mov
ja
xor
mov
ss
shl
das
fxch
add
jp
arpl
adc
cmp
push
add
shlb
push
shlb
dec
shlb
inc
shlb
cltd
int3
add
lahf
int3
arpl
loope
arpl
cltd
int3
add
add
add
add
add
add
add
add
add
add
outsl
inc
add
inc
add
jp
add
aas
add
fdivrl
add
jle
add
jge
add
add
jp
push
loopne
add
add
arpl
push
adc
jo
add
outsl
add
mov
imul
lea
add
lea
add
jge
add
jge
add
lea
add
jmp
sbb
mov
jo
int3
add
add
int3
icebp
or
jmp
or
shl
or
shr
add
lret
add
jmp
test
ror
add
int3
out
add
call
push
mov
sti
xor
fsub
add
int3
dec
jle
dec
ss
inc
jns
mull
pop
lods
cwtl
jbe
add
int3
adc
shll
in
jmp
ret
sbb
out
es
lock
push
call
loope
out
cmp
fsub
pop
out
out
jmp
and
add
add
add
mov
pop
out
cmpsl
jbe
in
fwait
add
aaa
stc
ret
je
cli
fdivrs
dec
std
iret
es
lret
add
pop
fisubrs
xor
lret
add
add
add
and
push
mov
fs
cld
lret
add
les
call
lret
add
or
fs
cld
lret
add
add
jle
inc
cmp
xchg
pop
decl
mov
push
lea
das
leave
add
popa
mov
add
imul
cli
mull
wbinvd
sub
add
cmp
jge
outsb
stos
add
nop
insb
cmpsl
mov
sbb
add
add
add
add
roll
add
fidivrl
pop
push
adc
rolb
add
jno
add
gs
out
push
sub
fs
and
push
add
adc
push
or
subb
mov
mov
outsl
cmp
add
sub
mov
inc
popf
cmpsl
fwait
js
mov
cmp
add
outsl
dec
dec
enter
mov
nop
pop
je
cmpsl
xor
add
pop
add
in
aaa
sub
xor
sbb
sbb
adc
add
idiv
xlat
repnz
cmp
xor
pop
pop
dec
stos
out
add
mov
push
cmp
jp
addr16
mov
dec
add
int3
cmp
jns
sahf
adc
jnp
pusha
and
mov
inc
int3
les
add
in
jmp
mov
sbb
add
inc
pop
inc
stc
adc
push
add
int3
bswap
inc
or
mov
and
lods
les
pop
int3
jle
cmp
jl
xchg
pop
jge
xor
add
xchg
dec
inc
push
js
inc
push
mov
inc
mov
add
add
out
aaa
int3
add
in
daa
stc
fstp
xor
aaa
fcoml
jmp
rclb
or
mov
lods
lret
add
add
pop
jge
lret
pop
dec
cld
aad
push
std
loope
inc
and
cmc
icebp
sbb
in
rorl
push
ret
int
push
icebp
add
add
mov
sarl
or
add
gs
or
int
add
xor
testl
mov
lock
sbb
jb
repz
gs
inc
push
in
dec
inc
inc
xchg
push
pop
sarl
pop
notb
test
lahf
adcb
inc
lea
scas
push
xchg
xchg
mov
lcall
das
std
clc
pushl
out
out
or
mov
or
ret
rcr
cmc
sub
dec
and
cld
add
mul
hlt
jecxz
lret
jecxz
aad
in
xor
add
and
into
scas
ror
mov
outsb
call
les
popf
mov
lahf
push
jp
mov
arpl
jmp
repnz
dec
addr16
pop
push
jmp
decl
ror
cmpsb
int3
fisubrl
rol
dec
lock
push
ljmp
pop
data16
pop
pop
inc
movsl
or
mov
mov
cltd
shrl
cmpsl
add
int3
dec
testl
push
cmp
fstpl
iret
fsubrs
cmp
lods
xor
leave
lret
mov
add
pop
push
sbb
lret
roll
lret
push
mov
int3
mov
test
js
dec
imul
mov
stos
outsb
xchg
mov
push
mov
data16
dec
outsl
add
imul
jo
inc
mov
inc
xchg
sbb
in
in
enter
lret
add
dec
mov
orb
add
add
add
out
ds
ja
and
mov
fisttps
jg
jmp
xlat
in
cmp
xor
cmp
adc
add
lock
pop
jmp
mov
int3
add
mov
sub
fwait
jae
mov
add
mov
fs
xrelease
mov
int3
in
sub
add
add
leave
add
mov
cmp
add
or
inc
adc
loope
arpl
jne
jg
leave
add
jae
ret
movsb
lcall
leave
test
cli
xchg
lahf
pop
rcr
sbb
in
xor
mov
add
imull
jns
test
add
ret
jmp
dec
add
add
call
add
adc
ds
jb
pusha
dec
pop
daa
and
or
sbb
dec
je
add
nop
imul
lret
jmp
sub
or
add
je
ss
add
xchg
lods
mov
sbb
std
sbb
loopne
pop
or
sbb
adc
mov
clc
pop
icebp
int3
add
add
popf
mov
insb
mov
das
sbb
lret
daa
add
int3
add
ljmp
pop
scas
in
hlt
daa
pop
out
fsubrs
pop
repz
pop
inc
int3
mov
rcr
dec
inc
jge
negl
jl
add
sar
or
jo
inc
xchg
out
pop
pop
ja
dec
sbbb
nop
cmp
insb
push
lods
inc
fldt
add
pop
xlat
aaa
push
or
int3
or
pop
daa
call
imul
fistps
add
pop
push
hlt
pop
adc
int3
add
call
add
popa
sub
test
sbb
jo
push
scas
inc
mov
arpl
stos
push
mov
push
nop
and
add
add
fistpll
sbb
fsubrs
popa
out
cmp
add
add
mov
xchg
sbb
add
mov
sbb
add
int3
add
int3
add
add
add
xor
cmp
mov
and
mov
pop
and
jbe
sub
mov
es
push
push
pop
mov
push
inc
nop
sarl
add
rorb
sbb
fcmovnbe
inc
pop
fistl
xor
jns
jb
inc
jg
lods
jbe
and
pop
bound
stos
and
or
outsl
into
xchg
dec
call
jl
sbb
dec
dec
sub
inc
pop
add
stc
push
aam
jge
xlat
test
test
xchg
call
mov
add
out
movb
mov
pop
lods
rcr
jl
xchg
fnstenv
mov
je
jns
jg
or
push
icebp
call
fsubrs
scas
inc
scas
addb
out
repz
imul
mov
gs
pop
pop
ret
push
lret
test
dec
sbb
add
dec
or
ja
push
lds
sbb
jp
sbb
loopne
adc
xlat
or
out
add
fbld
or
cli
mov
adc
out
aam
add
shrl
std
shr
add
cld
add
xchg
imul
aam
add
daa
mov
sar
mov
mov
mov
mov
mov
mov
lahf
movl
sbb
mov
movsl
popa
movsb
jne
sub
mov
negb
xor
sub
xchg
mov
push
cmpl
cmp
cmp
add
add
out
out
add
daa
hlt
out
and
sbb
sub
adc
aam
aam
icebp
jo
add
lock
sti
sbb
add
add
add
add
jl
daa
int
push
add
adcl
sub
jns
push
aam
push
sbb
pop
inc
repz
jns
divl
jo
mov
cmp
fcmovnu
jmp
or
rcl
pusha
shl
test
add
add
imul
xchg
pushf
jb
mov
fwait
jl
jo
pop
xor
cmpsl
pop
jl
aad
pop
dec
ja
inc
cwtl
addb
leave
add
inc
cmpb
aad
jne
jge
jb
and
add
and
xor
xor
stc
xor
push
pop
sub
push
push
pop
or
std
push
pop
or
pop
cmp
add
sub
and
or
daa
testb
repnz
adc
into
mov
dec
ss
and
add
js
xchg
xchg
and
add
pop
dec
dec
cmp
add
add
stos
mov
outsb
negl
cmc
outsl
add
notl
aaa
icebp
lret
sbb
in
or
shr
inc
adc
rorl
and
loop
insb
add
call
int
ret
cltd
inc
das
add
xchg
mov
add
outsb
fsubrs
int3
ds
cmp
out
ret
sub
out
sub
lret
shl
adc
or
fcmovne
fildl
icebp
leave
fisttpll
sbb
int3
add
int3
xchg
imul
into
add
int3
jo
mov
and
inc
xchg
jb
add
mov
jmp
mov
neg
cmpsb
sbb
fcompl
idivl
mov
es
mov
incb
hlt
ret
add
sub
add
ret
sub
mov
add
jle
and
jg
jmp
jmp
lret
add
mov
add
repnz
or
fxch
jmp
icebp
mov
or
int3
into
sbb
add
jne
in
adc
fdivrl
sbb
rcr
sub
shlb
out
stc
cmc
sti
lods
outsl
cs
xchg
out
and
in
add
xor
and
and
and
call
add
rcrl
rcl
pushf
sahf
lahf
nop
xchg
add
fsts
int
add
aad
or
fucomp
push
int
sbb
add
or
push
or
fmul
add
rclb
xor
add
stc
inc
sbb
push
jns
dec
pop
imul
xchg
sbb
andl
jne
daa
cmp
data16
aas
push
shlb
add
add
test
lcall
mov
add
push
pop
and
test
jg
xor
add
loopne
std
adc
mov
in
cld
nop
scas
cld
in
mov
add
ds
addr16
int3
lcall
movsb
fwait
outsb
add
in
push
in
das
cmc
mov
loopne,pn
out
add
leave
and
in
adc
cli
mov
add
add
aam
sti
cld
mov
lock
gs
sahf
mov
cli
stos
jae
std
nop
mov
cmp
jg
imul
orl
mov
fs
cmp
jb
arpl
test
cmpsl
dec
push
xchg
sbb
xor
lcall
adc
or
sub
add
mov
lret
add
scas
int3
sub
add
add
sbb
int3
add
pop
adc
push
cmp
call
mov
cltd
std
shll
int3
add
insl
cmpsb
jmp
out
mov
jmp
arpl
jmp
or
add
pop
paddd
and
or
fbld
fadd
fxch
add
jbe
outsb
outsl
jmp
or
rorb
out
adc
inc
and
lcall
adc
xchg
into
push
pop
ljmp
imul
add
xchg
and
jg
add
fucom
outsl
es
lcall
rcrb
pop
lret
add
pop
push
sbb
add
add
fs
jo
jle
lret
cmp
insb
jno
pop
popa
arpl
and
add
jnp
loopne
scas
fdiv
fbld
add
add
cmp
inc
inc
cmp
dec
inc
inc
xor
add
add
mov
mov
bound
jno
fmuls
cmp
add
add
jbe
xchg
mov
add
add
jmp
pop
out
scas
dec
jae
faddl
add
insl
jae
shll
lret
mov
push
mov
push
gs
int3
das
mov
xor
ss
or
xchg
xchg
mov
mov
xchg
bound
xchg
dec
pop
add
int3
repz
mov
cld
mul
repnz
sbb
fdivr
cld
shr
add
mov
adc
mov
scas
repz
andl
xor
jns
jg
test
mov
int3
mov
das
and
js
sub
add
fwait
sbb
jae
movsb
mov
add
aaa
addb
push
mov
add
int3
add
mov
cmp
push
xchg
pop
mov
inc
test
movsl
hlt
cltd
pop
jnp
xchg
pop
pushf
in
xchg
ror
add
or
or
jmp
add
jbe
add
add
add
ljmp
fsubs
lods
and
and
add
stos
inc
or
dec
add
leave
push
pop
sbb
add
jecxz
pop
dec
add
lea
jb
push
push
iret
add
mov
rcll
push
pop
xchg
mov
dec
dec
mov
xor
lods
sub
and
cmp
into
add
pop
fldenv
ss
stos
sub
in
jmp
sub
popa
ljmp
dec
loopne
jae
in
and
jp
add
das
sub
add
cmp
jae
add
scas
or
lcall
add
sbb
push
ret
inc
pop
das
inc
inc
inc
sub
inc
popa
cmc
inc
push
cmp
inc
inc
and
add
jmp
adc
or
push
cmc
sti
sbb
push
out
dec
adc
cmp
add
lock
adc
in
jb
add
stc
paddsb
negl
das
adc
and
inc
or
hlt
add
repnz
add
lret
cs
aad
pop
les
movsl
xlat
cmp
and
inc
adc
pushl
sbb
int
clc
push
jmp
xor
and
roll
cmpsl
movsb
dec
or
adc
int3
sbb
mov
mov
push
sub
add
mov
imul
icebp
bound
addr16
add
int3
jne
sub
push
sbb
in
repz
ja
mov
xchg
pop
int3
fldcw
dec
shll
out
into
dec
cli
xchg
popf
sub
mov
ds
sbb
pop
push
aad
pop
pop
xchg
pop
inc
pop
xchg
xor
and
outsl
cmp
cmpsb
and
mov
push
rolb
or
js
mov
add
add
scas
xor
sub
insl
mov
ss
jns
test
std
inc
int3
add
in
stos
xor
add
push
mov
das
insl
mov
sub
inc
iret
add
sbb
fstpt
add
xor
add
xor
sbb
add
mov
add
clc
mov
and
inc
pop
mov
mov
add
sbbl
jbe
xchg
xor
test
fxch
add
xor
push
sub
clc
mov
test
pop
lea
jp
mov
outsl
das
incl
and
fildll
rolb
add
adc
scas
lret
mov
shrb
add
rcll
mov
inc
sub
ficompl
jge
in
setne
out
repz
add
add
add
cmp
push
adc
je
push
inc
inc
inc
pop
or
add
cmp
push
arpl
cmp
add
add
aas
push
pop
aas
gs
inc
cmc
subb
sub
ss
aas
xchg
hlt
es
jne
inc
mov
ss
xchg
aaa
mov
repz
aad
push
enter
jb
inc
lret
jecxz
add
xchg
xor
jle
push
xchg
lret
lods
mov
add
shrb
jp
push
js
popa
add
and
fcoml
add
add
imul
pop
je
mov
push
sub
sahf
cmp
xchg
mov
inc
add
lahf
jmp
sti
loopne
cmp
outsb
xchg
xchg
mov
mov
xchg
andb
lea
scas
jae
test
pop
arpl
mov
int3
add
rcrl
addl
pushf
and
sub
or
pop
adc
mov
or
cmpsl
cmp
arpl
add
mov
xchg
add
lret
int
add
push
adc
pop
add
lods
and
sbb
xor
and
pop
iret
add
test
in
cwtl
cmc
repz
cmc
ror
jge
ffreep
test
out
ss
ficompl
testl
cmp
out
sbb
add
inc
xchg
popa
gs
js
shrb
add
mov
jbe
mov
test
fxch
add
hlt
pop
popf
out
adc
add
outsl
cmpsb
push
ret
add
je
jnp
jne
add
int
popa
pop
shl
insb
ss
outsb
or
ljmp
add
cli
sbb
sbb
sti
sub
out
syscall
pop
add
pop
loop
negl
idiv
add
sbb
sbb
inc
and
or
add
cmc
incl
inc
inc
call
add
or
imul
inc
xor
aaa
inc
inc
sub
daa
int3
mov
add
add
sub
mov
repz
in
testl
stc
rcll
and
in
mov
int3
in
add
into
stc
jmp
cmpsb
out
hlt
lret
dec
cmp
sahf
and
rcrb
aaa
sub
fwait
xor
cmp
movsb
sub
cmpsb
lret
rclb
jecxz
les
mov
add
int3
in
jno
mov
add
inc
sahf
les
dec
xchg
mov
xor
int3
adc
sbb
add
add
push
icebp
clc
fisttps
lock
add
mov
sub
lock
adc
out
adc
subb
jl
sbb
jg
jmp
dec
sti
loope
xchg
sbb
jmp
adc
jge
cmp
lret
add
xor
sbb
les
or
jle
test
fldl
pop
inc
les
add
add
cld
lret
add
cli
mov
add
jmp
lret
add
fxch
jmp
push
inc
add
push
inc
add
add
push
inc
add
add
add
xor
aad
inc
add
das
add
inc
add
xor
push
inc
add
addr16
or
jb
sbb
pop
fs
bound
cltd
ja
sub
add
inc
lret
fs
je
sbb
add
mov
lret
add
add
inc
add
sub
dec
add
arpl
inc
add
inc
add
dec
add
add
dec
add
dec
add
add
jae
adc
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
rolb
fs
les
cmp
les
popa
int3
movb
int3
xchg
add
popa
int3
mov
pop
int3
out
add
out
mul
call
lds
test
fisubrl
aad
and
int3
les
adc
lret
out
add
aaa
ss
leave
ror
leave
ror
leave
ror
ss
leave
ror
ss
mov
test
pop
popf
xchg
std
popa
scas
jns
mov
pop
add
addb
popf
insl
fs
pusha
xchg
add
add
dec
addr16
mov
pop
js
into
sub
fs
cld
mov
xlat
add
mov
les
xchg
insl
jbe
mov
jnp
imul
cld
cmpsb
add
stos
add
add
add
add
add
cld
test
add
add
lret
add
jne
add
into
pop
adc
pop
mov
arpl
xchg
cltd
add
movsl
lcall
mov
xchg
imul
inc
insb
mov
fwait
or
lds
jno
pushf
stc
push
imul
and
xchg
add
mov
pop
add
iret
add
sbb
insl
movw
sbb
or
and
pop
mov
and
sub
add
ds
popa
add
add
add
pop
add
add
add
add
add
push
add
add
add
in
add
call
in
add
and
and
je
cmp
cmp
pop
dec
add
add
arpl
inc
and
add
add
stos
aas
add
inc
add
inc
add
lods
aas
add
aas
add
adc
cmpsl
mov
or
mov
int3
decl
jnp
push
out
decb
insl
adc
test
out
add
setle
das
int3
cmpsl
popf
daa
int3
jge
inc
int3
or
inc
int3
or
inc
int3
or
inc
int3
adc
int3
cmp
inc
int3
cli
inc
inc
int3
pop
cmp
mov
inc
int3
lret
int3
lret
int3
lret
int3
xchg
xor
lret
lret
lret
inc
es
mov
lret
ds
lret
sbb
ret
lret
icebp
add
int3
add
sbb
imul
shrb
push
xchg
mov
xchg
in
ficompl
adc
clc
mov
pushf
pop
dec
cld
addr16
imul
shrb
mov
add
cmpsb
mov
sti
gs
adc
clc
sbb
or
or
push
pop
xchg
mov
icebp
in
cmp
adc
clc
mov
cmp
andl
add
push
sub
add
sub
loope
push
push
push
xor
int3
add
call
fwait
sub
gs
xchg
arpl
leave
lret
add
sub
je
mov
cmp
stos
lahf
insl
jae
incb
add
cs
je
nop
mov
aas
mov
add
outsb
jle
add
push
arpl
lcall
add
iret
outsb
add
mov
jb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
xor
add
out
add
out
add
cmp
popf
imull
lcall
add
aas
add
int3
daa
pop
jnp
sahf
sbb
fldenv
add
sti
push
push
jg
mov
adc
pop
mov
aaa
push
cltd
pop
dec
and
mov
jae
pop
pop
ss
cld
sti
icebp
mov
mov
sahf
sbb
fisubl
aaa
pop
inc
aaa
lods
push
xchg
jmp
ret
lds
int3
pushf
mov
pushf
add
push
popf
push
sbb
add
sbbl
ret
lret
xchg
hlt
dec
stc
mov
add
jnp
and
pushf
push
scas
or
rcll
cwtl
mov
inc
inc
in
js
je
mov
push
mov
cmc
mov
pusha
or
aad
popf
mov
pushf
std
mov
adc
js
jb
clc
cmp
add
pop
add
addb
xchg
std
add
add
add
xor
cltd
enter
or
xor
ret
add
cmp
push
ret
iret
std
ss
fdivl
jmp
enter
mov
jmp
adc
insl
rcll
sub
insb
dec
out
sti
ds
testb
iret
mov
fisttpl
imul
add
add
xor
data16
push
mov
add
jbe
inc
in
test
sar
loopne
add
push
stos
add
inc
int
notl
inc
mov
or
rcrb
out
cmp
shl
outsb
add
jge
and
in
push
iret
add
add
add
add
push
inc
adc
add
add
imul
movl
les
mov
rcll
inc
add
lods
out
dec
int3
jb
sbb
pop
add
xchg
fwait
xchg
sub
out
mov
notb
mov
int3
push
push
adc
mov
push
fcomps
ss
add
ror
mov
lock
mov
add
pushf
pop
or
out
inc
xlat
push
push
ja
nop
test
jl
negb
mov
mov
out
xchg
js
sub
cltd
dec
sbb
fisubs
dec
add
fdivrs
sti
ret
xchg
pop
xor
and
adc
insb
mov
mov
jae
push
cmp
and
imul
and
mov
xor
inc
sahf
push
pop
xlat
inc
clc
push
xor
fcoml
inc
jmp
push
mov
out
mov
adcl
and
inc
jmp
pusha
std
lock
fwait
icebp
jae
xor
inc
add
fs
in
insl
les
mov
les
repnz
mov
add
pop
mov
xchg
rcll
and
dec
ljmp
aaa
push
push
rcrb
lea
call
test
jo
popf
jecxz
add
int3
push
fucom
or
fsubrs
jmp
pushl
mov
pushl
mov
push
push
push
lea
call
add
jge
cmp
mov
call
adc
out
sub
test
ljmp
mov
add
decl
pusha
les
mov
add
add
add
inc
add
add
add
inc
or
mov
mov
jae
lock
jnp
mov
add
jo
inc
add
push
add
or
out
add
dec
push
add
sub
xor
inc
push
mov
arpl
adc
inc
add
fwait
out
inc
in
rcrl
cmpsl
add
sub
inc
jo
pop
pop
inc
and
sti
jae
ret
sub
push
add
mov
add
xchg
scas
xor
mov
or
ror
mov
add
push
add
mov
mov
add
aad
out
je
in
in
je
adc
std
jp
enter
subl
cld
mov
lret
inc
push
daa
add
add
decl
push
fisttpl
push
jae
lods
arpl
nop
jne
roll
dec
out
and
insl
stc
loopne
jl
jmp
insl
std
lock
jmp
cmp
inc
xchg
mov
xchg
fcoml
cmc
mov
add
rolb
stos
add
mov
cmp
sbb
pop
sub
sub
arpl
call
xchg
rorl
push
or
push
jbe
lock
inc
idiv
je
push
incl
rclb
call
xor
stos
xchg
xchg
pop
ret
push
mov
rolb
xchg
roll
xor
push
mov
lds
rolb
adc
dec
pop
add
jge
xor
push
ret
push
call
add
fcmovnb
push
das
pop
mov
je
out
mov
call
outsb
mov
dec
hlt
jle
or
lods
adc
dec
or
and
imul
pop
into
mov
push
into
dec
clc
mov
mov
loope
sub
out
add
lds
ss
dec
out
or
mov
in
lret
xor
add
out
ss
rcr
add
arpl
jae
jb
jge
mov
push
pop
in
sub
hlt
int
add
xchg
add
int
les
mov
push
xorb
jmp
xor
mov
mov
push
sbb
xchg
add
jg
push
sbb
mov
cs
and
in
add
int3
cs
and
out
add
int3
insb
rolb
int
out
outsb
add
cli
sbb
movsl
cmpsb
and
mull
out
std
cmpsb
inc
add
lds
aad
or
adc
fidivl
stos
adc
add
stc
adc
mov
aam
xchg
dec
shlb
mov
cmp
loop
int
mov
add
xchg
lds
mov
mov
adc
sub
shll
jl
sbb
jmp
jle
and
in
jno
adc
aam
pop
push
pop
mov
inc
sub
jl
cmc
add
sbb
arpl
cmp
mov
add
aam
add
add
xchg
or
ret
int3
call
cmp
outsl
rolb
push
outsl
xor
fcomps
pop
mov
push
push
scas
mov
mov
ficompl
jns
lea
aam
add
inc
push
inc
mov
scas
ljmp
sbb
xchg
cwtl
test
pop
xor
pop
or
aas
xor
fisttpl
mov
mov
add
dec
jnp
jge
or
test
repnz
pop
pop
mov
push
push
pop
sub
aas
dec
mov
std
mov
pop
mov
adc
or
sub
testl
dec
or
mov
adc
hlt
lret
pushf
incl
out
dec
pop
push
add
test
add
add
das
jmp
push
lcall
repz
jl
adc
jnp
out
sti
sbb
push
sarl
aad
outsb
cmp
jp
mov
rorl
int
sbb
into
int3
out
out
test
ss
sbb
mov
clc
jb
push
add
out
or
mov
pop
jo
mov
jb
mov
mov
fldenv
or
das
pushl
es
inc
pop
ljmp
mov
icebp
cmp
push
jmp
cli
jno
std
pop
pmulhw
pop
iret
aam
or
jmp
mov
add
call
add
clc
je
push
xchg
and
push
add
xorl
sbb
ror
add
test
aad
mov
mov
fcmovu
mov
movsl
lret
mov
inc
inc
std
dec
sbb
push
jl
repz
decl
mov
jns
pop
rclb
and
gs
mov
or
add
and
ljmp
leave
or
mov
addr16
and
cmc
cld
bndldx
ljmp
movsb
adc
mov
cmp
lcall
add
add
cmc
out
dec
cmp
cmpsb
cmp
xchg
out
xchg
add
jae
and
mov
cmp
sub
xor
pushl
pop
repnz
je
inc
cmp
mov
jne
es
inc
bound
aaa
sub
stos
cmc
ret
add
pushf
mov
jg
jne
add
add
and
insl
shrb
scas
lea
xchg
pop
loope
push
mov
mov
out
add
jge
hlt
sub
add
jb
mov
pusha
pop
js
mov
xor
cmc
clc
mov
jecxz
aas
in
bound
ret
jb
mov
popl
into
int3
out
loop
add
cmp
lret
push
idivl
pop
das
jbe
jge
push
lods
out
xchg
jbe
hlt
shrl
in
push
add
call
add
inc
lds
jecxz
jmp
adc
call
sbb
cmp
enter
pop
push
and
orb
add
fdivp
push
roll
divb
mov
add
into
aaa
roll
pop
add
add
push
fldenv
test
mov
pop
cmp
and
push
push
and
xor
fisubs
push
je
ds
pop
cmpsl
aaa
sub
mov
addr16
mov
roll
lret
pop
div
jb
fs
cmp
dec
and
div
jne
dec
out
add
mov
add
inc
inc
push
aam
int
ror
sbb
xlat
xor
sub
dec
sub
jmp
add
out
add
or
inc
and
lcall
iret
push
cmp
adc
add
mov
jae
mov
mov
jnp
out
jnp
out
mov
xchg
test
or
and
sbb
test
inc
scas
lret
mov
push
in
js
fmul
ja
sbb
add
add
sub
js
mov
dec
pop
subl
ret
sub
mov
push
xor
push
xor
add
mov
mov
or
sar
mov
int3
out
sub
dec
fdivrl
add
adc
mov
push
mov
lods
ja
out
sub
pushf
incb
xchg
int
xchg
push
lods
out
int3
out
negl
mov
js
push
and
adc
fisttpll
out
mov
or
and
add
pop
lods
das
es
push
inc
sbbb
add
sbb
test
cmovnp
jne
cmp
add
adc
inc
test
flds
add
lahf
mov
and
lds
jne
xlat
cmpsl
sbb
iret
cmpsl
sbb
orl
pop
push
into
shll
adc
jle
call
mov
call
int3
sarl
andl
lea
jmp
fcompl
mov
add
leave
push
mov
jmp
push
and
cmp
xor
lock
test
pop
jne
add
shlb
loop
xor
loop
ret
jb
add
inc
pop
pop
in
andl
cmp
mov
push
pushl
aad
pusha
xor
repz
test
aad
sbb
int
rolb
xchg
or
je
out
jb
sub
scas
inc
cmp
cli
mov
shlb
neg
stc
scas
and
push
dec
ret
push
mov
ja
adc
stos
stos
call
xor
add
inc
xor
push
jnp
ficoms
scas
imul
add
adc
mov
xor
or
and
cmp
add
adc
jge
mov
jo
pop
int3
pop
lock
cmpsl
cltd
xor
out
dec
ffreep
pop
push
inc
int3
jb
addb
push
mov
int3
jb
addb
jg
pusha
or
pusha
in
mov
and
ljmp
add
sub
pushf
clc
adcb
test
into
test
popf
add
fs
mov
mov
mov
in
inc
scas
dec
lret
jp
dec
cmp
scas
fisttpl
push
incl
mov
jne
and
jbe
sbb
push
int3
push
xchg
push
insb
push
sub
dec
vorpd
push
push
imul
add
add
inc
dec
pop
pop
dec
stc
push
out
les
push
pop
adc
dec
jo
in
jp
mov
push
push
jb
scas
adc
fcompp
jge
jl
adc
mov
lret
add
inc
jmp
shrb
into
icebp
add
add
iret
movb
xorb
adc
jmp
fstl
add
jmp
jnp
in
call
xchg
jne
fmulp
lea
pop
dec
xor
mov
dec
hlt
jns
push
dec
cld
xor
push
mov
add
stos
jl
mov
or
sbb
add
mov
push
lret
call
mov
cmp
add
xor
jge
xor
jnp
cltd
or
jecxz
and
js
jge
jecxz
add
lcall
test
ret
push
mov
mov
fs
repz
pushl
jp
cmc
lahf
cmpl
jnp
cmpsb
out
mov
add
jp
or
cld
jns
jp
fwait
ret
mov
or
add
roll
add
cmpsl
adc
clc
inc
add
lret
cmp
stos
sbb
das
or
daa
add
mov
xchg
imul
out
fsubs
adc
or
jle
pusha
fcoms
pop
jecxz
adc
flds
inc
daa
cld
pop
int
add
or
subb
add
add
inc
cmp
mov
adc
imul
int
movsb
fisttps
jl
sub
out
jecxz
fistl
push
xlat
sub
add
add
scas
and
out
mov
and
fwait
mov
je
dec
fs
sarl
cmp
adc
fldenv
rolb
lret
jmp
add
mov
lock
inc
loope
push
int3
out
add
add
sub
jb
xchg
jle
xchg
dec
icebp
jmp
or
xchg
jg
or
jecxz
pop
adc
add
cmp
add
add
inc
mov
je
sub
push
inc
or
movb
pushl
inc
sbb
mov
inc
cmp
mov
addb
add
add
mov
ss
ret
push
cmovle
aam
adc
mov
push
mov
jecxz
call
mov
inc
cltd
inc
dec
and
inc
into
cmp
mov
mulb
decl
and
push
stc
or
push
mov
cmpl
incl
push
or
aaa
fiaddl
mull
aas
dec
inc
add
or
mov
daa
out
mov
test
std
mov
jae
pop
inc
add
mov
add
outsl
fwait
std
out
inc
inc
mov
inc
inc
jns
call
jne
adc
inc
mov
add
jns
stc
jae
mov
cmp
rcll
xchg
shrl
xor
addl
mov
add
fistps
lret
lcall
nop
mov
aad
bound
loop
mov
int
lods
out
jl
mov
mov
scas
pop
mov
repz
inc
and
and
hlt
sbb
pop
push
sbb
jo
and
in
rcll
add
inc
ss
orl
shlb
inc
xchg
in
repz
add
add
add
sahf
rcrl
mov
bound
jecxz
roll
int3
jb
or
mov
add
add
les
push
rolb
inc
js
or
nop
scas
call
pop
lcall
adc
jmp
int3
mov
inc
pop
stc
cld
hlt
mov
jp
and
jp
and
faddl
add
jge
mov
add
dec
xchg
jmp
int3
mov
stc
ret
add
add
dec
icebp
into
pop
push
and
push
or
mov
lock
xchg
jmp
decl
cmp
mov
cmp
mov
or
add
jae
ljmp
mov
or
pop
repnz
je
repnz
add
test
repz
es
cmp
sbb
cmp
es
sbb
jmp
enter
outsl
call
jo
int
mov
inc
fisttpl
pop
xlat
flds
call
sub
mov
shr
aam
add
add
or
push
roll
add
mov
out
mov
inc
and
xchg
data16
add
data16
add
out
dec
mov
cmpb
sbb
subb
mov
mov
jae
mov
movd
loop
mov
add
and
xchg
add
add
jecxz
cmpl
sub
pop
sbb
pop
fisttps
fninit
add
dec
test
push
out
mov
mov
jmp
faddp
negb
mov
add
int3
pushf
add
sub
mov
add
push
cld
shrb
int3
out
std
dec
fsubr
int3
push
cmp
push
loop
pusha
test
cmp
dec
xlat
add
int3
popa
inc
cld
popl
sbb
lock
cld
in
sbb
add
out
add
mov
out
inc
mov
add
mov
or
jp
and
hlt
inc
in
add
add
test
xchg
gs
mov
add
out
mov
or
movsb
pop
dec
or
sub
cmpsl
cmp
stos
aad
call
add
inc
inc
add
mov
into
std
jmp
inc
int3
subl
jle
add
leave
add
and
mov
gs
jmp
inc
or
and
shlb
negl
movsb
std
lea
data16
call
or
xchg
sub
add
cmp
add
fdivrl
push
add
sub
add
xchg
out
pop
add
andb
add
leave
xor
pushf
mov
into
mov
and
or
mov
leave
lahf
add
cltd
call
andl
std
cld
mov
pop
inc
and
or
lahf
dec
or
enter
jnp
fimuls
daa
adc
les
add
add
add
xlat
das
mov
scas
movsl
out
out
repnz
mov
push
add
imul
popf
pushl
add
aas
loopne
add
loop
testl
jecxz
ret
ret
mov
mov
or
dec
add
out
add
cltd
mov
inc
push
aaa
lea
inc
pop
ja
int3
out
add
sub
add
xchg
out
adc
cli
inc
add
jae
int3
out
cmp
inc
xor
push
call
cld
pop
adc
add
inc
sub
jnp
out
xchg
lahf
jo
int3
out
xor
or
stos
dec
out
add
in
std
out
popl
push
int3
add
mov
xor
lret
imulb
adc
mov
add
push
iret
add
shlb
std
aad
xlat
mov
adc
std
cwtl
push
push
lock
aas
sbb
adc
lock
or
pop
cmp
movsl
add
add
aam
add
imul
call
in
add
out
push
in
push
xlat
mov
stc
push
push
jb
std
push
mov
add
fcompl
sub
mov
decb
inc
insl
std
jne
std
mov
adc
daa
fsubl
cltd
clc
add
pushf
rorb
ja
dec
add
mov
std
jne
push
lret
decl
jne
arpl
sub
add
int
sti
ficompl
andb
jae
add
jno
test
dec
testl
cltd
add
push
add
xchg
mov
jmp
dec
jmp
mov
jmp
cmp
jnp
mov
loopne
pop
ds
xchg
jae
xor
add
add
out
loopne
xor
mov
int3
add
xchg
ja
lds
test
add
add
mov
lds
mov
pushl
mov
mov
xchg
inc
xor
fcoml
jmp
lds
add
xor
mov
lock
out
enter
dec
call
loopne
dec
jno
iret
enter
dec
movsb
add
int3
fs
add
push
sbb
or
inc
shll
aaa
fsub
push
xchg
jg
add
mov
or
test
fdivs
enter
and
pop
add
arpl
shrl
inc
sbb
insb
aas
in
mov
push
pop
jmp
fistpll
testl
push
dec
and
push
pop
cmp
in
jno
leave
or
out
inc
or
and
shrl
sahf
scas
and
sub
push
push
lds
adc
pusha
int3
jecxz
sbbl
loope
hlt
repz
dec
mov
jmp
and
and
mov
and
movsl
das
out
push
xchg
out
je
lcall
aas
mov
and
add
out
push
add
test
sub
dec
dec
add
xchg
addb
push
lods
inc
jmp
lods
inc
call
js
frstpm(287
in
sub
add
pop
andl
sbb
sbb
xchg
mov
jne
pop
je
push
or
sahf
sti
dec
std
ret
dec
jmp
jmp
add
push
and
leave
xchg
aad
pop
xor
mov
inc
add
in
add
mov
testb
push
cmpl
add
add
dec
push
jle
push
loop
out
fiadds
jmp
mov
jbe
jnp
stos
cmc
push
add
inc
fsubr
jg
in
xor
loop
cmp
js
adc
out
mov
mov
mov
rorb
in
int3
mov
into
shr
mov
xchg
aaa
adc
xor
dec
jne
stos
out
sbb
out
into
out
add
pushf
sub
clc
daa
popf
cli
lret
mov
jne
and
cmp
and
aas
xor
or
out
cmp
call
enter
add
cltd
sub
adc
fmull
cmp
lret
out
sbb
push
xor
in
lret
out
cmp
stos
cmp
cltd
insb
ret
push
adc
xor
call
shlb
jmp
add
push
add
inc
lods
push
lods
pop
cld
xor
js
or
int
push
dec
lds
add
add
xor
lods
xchg
or
jmp
imul
adc
and
pop
or
adc
add
lds
push
je
inc
sbb
std
cmpsl
out
xchg
cmpsl
pop
mov
addr16
xor
ret
je
xor
push
mov
aas
and
push
mov
iret
mov
fdivl
and
mov
in
add
sbb
mov
in
add
cmp
in
lahf
int
mov
dec
shll
mov
and
dec
jmp
push
incl
jne
inc
fcos
or
mov
jne
pop
je
clc
pop
adc
push
pop
mov
sbb
je
sbb
add
add
add
add
shl
or
add
cltd
loope
mov
mov
dec
les
mov
fidivs
aas
add
add
in
jns
fsubl
lret
mov
add
jns
add
mov
jp
fmuls
inc
cs
add
xor
add
inc
stc
jns
mov
add
call
int3
out
inc
mov
enter
mov
add
dec
xor
out
lds
call
adc
shl
repz
lcall
repz
and
jns
adcl
and
aas
or
fwait
add
pop
or
inc
dec
and
jmp
inc
add
pop
add
sub
aaa
pushf
sub
xchg
mov
cli
sbb
int3
out
sub
insb
inc
in
add
ja
or
sub
aaa
or
icebp
push
sar
out
out
cli
lcall
jmp
add
add
add
add
add
mov
jmp
add
mov
add
int
jge
lret
add
push
and
jmp
in
xor
fcom
mov
sbb
call
jb
dec
std
sbb
stc
rolb
idiv
mov
lret
and
add
jb
iret
call
sti
xchg
arpl
ja
jb
stc
inc
repz
dec
mov
add
cmpsl
sbb
add
arpl
mov
lret
add
mov
inc
add
in
push
adc
sbb
jmp
lret
mov
call
sti
fsts
movb
inc
mov
test
add
add
xchg
shlb
add
sub
mov
inc
and
xor
jge
fcmovbe
orl
ret
mov
lea
shr
mov
add
mov
into
daa
push
lcallw
mov
xor
add
stc
sub
add
jle
popf
js
add
insb
lods
js
push
sub
and
cltd
add
add
loop
int3
test
cmpsl
pushl
in
dec
jg
out
add
mov
jle
call
fistpll
out
jle
jo
jp
add
cmp
dec
lea
out
aad
jb
sbb
bound
fbld
mov
jb
in
jb
cld
push
fistpll
out
rcll
adc
jl
js
movsl
daa
add
lret
les
fs
jae
cmp
xchg
bound
add
loopne
inc
add
push
mov
call
and
inc
in
or
call
pop
dec
shl
mov
in
int3
dec
mov
jl
adc
or
addb
mov
inc
adc
pushf
sub
mov
mov
add
add
mov
jecxz
lods
fistpll
adc
add
leave
std
aaa
push
mov
call
lcall
fnstcw
ret
pop
out
pop
ret
push
mov
dec
push
xor
and
add
mov
jae
inc
adc
stos
sidtl
stos
iret
add
add
sar
test
lea
dec
push
cld
lds
int3
add
sub
dec
lgdtl
pop
adc
lods
pop
je
mov
xchg
add
xchg
clc
sbb
into
nop
add
bound
and
cmp
pop
add
add
xchg
or
fdivs
mov
cmp
enter
clc
xchg
rcll
add
sbb
test
addr16
mov
jne
xchg
hlt
mov
es
sub
and
sub
push
jbe
add
add
push
and
das
ss
ds
lods
shl
mov
ret
jae
insb
or
lea
fnstsw
mov
ds
push
xor
out
mov
insb
pop
mov
in
inc
add
sub
js
or
jge
xor
mov
or
mov
aam
xor
jo
add
sarl
lock
loopne
and
jnp
movsb
xchg
mov
xor
inc
les
sbb
xor
xchg
pop
mov
mov
fcomip
dec
xor
mov
add
mov
into
lea
inc
mov
or
fistpl
ljmp
sahf
add
lock
lock
xor
sbb
push
add
pop
adc
lock
lret
mov
inc
enter
push
jb
out
inc
pusha
jl
add
add
mov
aaa
lock
sar
clc
cmp
cmp
push
mov
push
dec
add
out
cmp
push
mov
hlt
std
mov
dec
hlt
push
es
fdivrs
ljmp
add
mov
add
ja
fnstenv
mov
and
push
jno
or
and
push
jno
stc
push
jno
or
and
push
fs
and
and
in
push
xchg
jmp
test
cmc
cwtl
test
add
movb
es
add
clc
jo
pop
lret
add
add
inc
add
pushf
repz
roll
pushl
sub
incl
aad
incl
pop
fnsave
mov
js
sbb
xchg
out
cmp
add
es
dec
push
sub
clc
movsb
cs
and
push
cmp
adc
push
cmp
outsl
sub
add
mov
incl
or
ja
movsl
jge
adc
dec
push
sbb
in
push
ja
cmc
aad
lcall
mov
fstl
test
unpcklps
cmc
out
pop
push
add
fmul
negl
in
pop
incb
dec
and
xorb
out
cmp
addb
add
add
iret
add
and
aas
in
mov
roll
mov
out
movb
mov
aas
in
mov
lds
jecxz
out
and
repz
mov
pop
lea
les
ja
int3
xor
les
addr16
or
ljmp
btr
arpl
repz
cmpl
aaa
insb
mov
call
add
inc
mov
adc
jmp
or
lahf
cltd
adc
add
stc
fdivr
je
mov
in
aas
or
repz
call
cmp
flds
cmp
mov
jo
enter
sbb
or
sbb
mov
pop
stos
test
jae
movsb
and
and
cmpb
outsb
add
std
fmull
mov
sbb
adcb
cmc
add
mov
aad
je
mov
je
mov
jl
std
jne
dec
insl
inc
add
push
stos
mov
in
push
testb
hlt
jo
sub
and
iret
test
sub
std
jne
dec
je
jbe
or
push
frstor
and
add
inc
dec
and
jp
mov
imul
fdivl
adc
or
xchg
mov
inc
and
mov
loope
shlb
call
fdivrl
xor
int
push
dec
mov
mov
test
out
mov
mov
cmp
sbb
inc
rcll
aad
clc
add
add
cmp
adc
add
lcall
lret
test
add
add
and
aam
je
and
movzwl
mov
jp
mov
dec
movups
mov
jno
jecxz
cmp
bndstx
pop
ret
sbbl
xchg
iret
add
bswap
adc
jmp
daa
and
inc
push
dec
lret
out
jns
or
jnp
mov
jle
call
sti
sarb
add
xor
sub
fcompl
aaa
inc
inc
call
out
aad
xchg
adc
loopne
hlt
xlat
add
rcll
or
jbe
add
mov
and
mov
mov
and
fldenv
cmp
stc
sub
mov
mov
stc
add
push
mov
int3
inc
mov
cwtl
fldpi
xor
mov
inc
inc
add
pop
jo
jmp
faddl
cs
je
push
ds
xchg
scas
std
xchg
jp
and
add
pop
mov
add
dec
or
int3
add
inc
outsl
std
pop
pop
int3
push
mov
jo
add
test
gs
add
sbb
add
dec
mov
and
shlb
xor
ja
add
decb
fxch
add
mov
adc
add
mov
decl
test
mov
jno
mov
iret
add
mov
fucomi
fld
adc
imul
inc
cmp
and
lds
popa
and
push
mov
push
addl
nop
test
inc
lock
and
pop
fsubrl
in
push
cmpl
add
jne
or
dec
outsb
xchg
imul
rclb
out
sbb
add
sbb
fmuls
ljmp
ficomps
lahf
mov
jne
lret
cmp
mul
idivl
mov
out
imul
out
jns
les
jl
sti
or
hlt
add
inc
stos
daa
in
dec
daa
or
dec
out
add
mov
imul
call
add
sbb
out
mov
cld
imul
call
add
aas
fwait
daa
sbb
testl
enter
movsb
fiadds
push
fisubrs
mov
cmp
scas
lods
arpl
add
jmp
push
je
jmp
or
leave
jmp
incb
and
add
add
js
jmp
dec
rcl
and
push
adc
test
dec
adc
jmp
jg
or
xor
imul
and
fs
mov
shll
jmp
sti
mov
test
and
sbb
or
stos
mov
cmp
mov
add
inc
inc
and
cwtl
push
push
add
and
enter
cmp
add
loop
and
and
rorb
test
push
insb
cmc
lea
rcll
sub
add
andb
add
jmp
roll
push
push
js
dec
and
and
sbb
mov
arpl
out
push
rolb
mov
aaa
lods
mov
je
add
sub
add
add
or
aad
push
mov
xchg
mov
roll
js
loopne
in
sbb
jns
daa
inc
loope
add
enter
pop
in
adc
adc
push
enter
imul
fnstcw
call
test
in
sub
sbbl
dec
pop
imul
dec
add
inc
sbb
dec
push
cs
out
shll
add
add
push
adc
pop
and
lods
in
add
jnp
stos
cmp
je
add
int3
bound
pop
addl
int3
clc
dec
int3
out
ret
out
idivl
and
mov
mov
xor
int3
jb
and
xor
int3
call
add
add
fucomp
stos
rcrl
rclb
stos
out
mov
jg,pn
and
add
push
imul
add
shufps
out
push
lock
dec
sbb
and
cmp
aaa
sbb
and
shll
call
mov
add
add
leave
shr
adc
push
mov
mov
sbb
and
or
jmp
push
pop
inc
or
xchg
sbb
mov
iret
or
int
test
popa
lock
adc
int3
jae
lds
jb
mov
inc
and
jl
inc
jne
sub
sub
std
push
push
push
inc
push
and
add
add
lahf
inc
cmp
ljmp
int3
add
cli
push
std
ljmp
push
and
push
inc
jo
loop
inc
inc
in
inc
inc
rorb
cmc
out
mov
mov
mov
xchg
push
lea
mov
call
lcall
add
mov
inc
jo
mov
add
add
rorb
inc
jbe
and
aam
mov
xor
mov
mov
add
jle
add
cmp
push
mov
adc
rorl
aaa
data16
sub
jmp
sbb
and
add
add
add
push
addb
jnp
xchg
js
add
mov
dec
fucomi
add
xor
out
lret
mov
shl
shlb
sti
push
xor
out
jle
add
pop
cmp
daa
lock
jg
pop
jmp
sub
sbb
mov
mov
add
lock
lock
lock
lock
out
xor
out
cmp
outsb
pop
iret
rclb
imul
jle
add
dec
mov
add
sbb
push
out
jecxz
dec
out
jecxz
inc
out
jecxz
xchg
je
out
add
bound
push
mov
lods
dec
sbb
cmpsb
ret
movsl
je
adc
rolb
jmp
jge
lahf
jns
or
out
jmp
push
rorl
std
into
ds
cwtl
jmp
je
add
sti
push
sbb
sbb
and
jmp
test
movsl
ret
movsl
je
repz
outsb
dec
jmp
adc
out
lahf
flds
add
lahf
push
push
mov
stc
call
or
ljmp
cwtl
push
outsl
fmul
mov
es
test
movsb
xor
xchg
push
add
mov
testb
in
add
test
add
sbb
jb
and
add
addl
and
sar
jne
cmp
and
pushf
add
aaa
cwtl
add
add
vmulss
cld
mov
mov
faddl
idiv
adc
incl
ljmp
jb
clc
mov
fdivrp
rol
in
mov
mov
lcall
add
adc
xor
xchg
hlt
pop
xor
xchg
int
hlt
mov
mov
pop
push
into
daa
jnp
leave
out
push
add
mov
add
add
out
mov
lods
xor
jge
aam
repnz
add
out
call
mov
arpl
int3
fs
sbb
xchg
jo
push
lods
aaa
jge
xchg
arpl
xlat
fildl
and
out
cmp
xchg
fmul
jle
lret
daa
clc
xor
inc
pop
xor
mov
jp
loopne
inc
adc
and
mov
add
push
and
add
or
xchg
push
adc
test
add
jecxz
add
push
mov
inc
inc
shl
sbb
dec
nop
xor
je
mov
push
out
call
fsubs
test
add
push
jo
push
pop
clc
call
call
mov
std
sbb
pop
dec
insb
cmp
test
pop
mov
add
add
dec
push
ror
ljmp
adc
xor
mov
insl
sbb
fmull
pushf
in
add
int3
xchg
loope
divb
rorl
pop
dec
add
sahf
xor
pushf
sub
rcll
sub
jns
rcll
mov
ljmp
dec
push
lock
fmul
mov
stc
ja
cli
push
inc
pop
or
test
xor
incl
in
mov
decl
into
std
mov
push
mov
decl
xor
adc
pop
call
fcoml
insl
rorb
cltd
test
push
sub
jmp
dec
sub
inc
sbb
push
sub
addr16
incb
add
cltd
adcb
push
loopne
add
out
loop
inc
push
xor
test
xlat
cmp
lea
aad
add
cmpsb
dec
mov
xchg
lahf
mov
cmp
mov
add
out
mov
sarb
cmpsl
jnp
pop
out
xchg
cmpsl
pushl
add
push
leave
repz
lret
call
add
mov
add
out
int
sbb
test
call
not
xor
xor
push
negl
call
js
mov
pop
sahf
jb
fcmove
jb
jl
out
cmp
out
mov
lret
cmpsb
idivb
jns
mov
outsb
xchg
sahf
imul
pop
add
add
add
jl
add
jg
or
jmp
popf
out
mov
xchg
lahf
loope
jmp
fistps
or
insl
fidivrl
inc
loopew
jmp
mov
std
jmp
mov
fldl
adc
add
jle
or
jmp
loope
sub
fldl
add
mov
add
jle
or
jmp
pop
fnstsw
add
dec
mov
ljmp
jmp
mov
orl
or
popa
inc
mov
sbb
mov
or
popa
dec
mov
mov
cmp
sbb
cltd
inc
jmp
add
push
bound
sar
cmp
add
dec
mov
or
bound
xchg
clc
cmp
add
inc
jmp
mov
add
cmpb
sub
aas
add
xor
mov
mov
or
mov
lock
mov
add
daa
inc
jae
sti
xor
jae
add
push
mov
xor
mov
pop
pop
mov
rol
js
push
pop
movsb
add
add
leave
jl
in
or
mov
add
in
pop
dec
int3
mov
push
add
rorl
add
seto
pop
add
int3
cli
dec
mov
jb
add
add
nopl
add
dec
cmpsl
add
mov
jae
cmp
add
fcoml
sar
iret
add
shl
push
cmove
pop
fwait
out
mov
ljmp
mov
lret
out
out
lahf
adc
jl
xchg
pop
int3
pcmpeqw
add
int3
add
fwait
push
flds
push
fiadds
push
dec
add
add
add
roll
adc
inc
call
rorl
mov
fiaddl
scas
xchg
and
jmp
test
dec
call
add
aam
mov
ret
add
test
pop
into
mov
movsb
iret
call
lahf
push
cltd
pop
mov
int
mov
add
mov
inc
mov
stc
pop
sbb
or
pop
stc
push
push
iret
push
mov
xchg
push
dec
dec
cmc
add
cmpl
fwait
stc
mov
xor
inc
insl
jge
inc
jno
addr16
jle
pop
test
push
mov
lods
add
pop
leave
jmp
std
xor
hlt
hlt
addb
add
add
adc
fnstcw
push
mov
mov
gs
pop
jmp
adc
divb
std
sbb
jp
and
jmp
and
mov
mov
lea
or
and
push
ja
pop
add
addr16
cmpb
lahf
in
dec
dec
lahf
xchg
adc
shlb
push
outsb
jno
dec
in
add
out
add
loop
add
dec
mov
add
and
daa
inc
jae
sub
jae
mov
push
push
int3
mov
std
xor
mov
imul
fidivrl
lock
pop
push
mov
or
push
ret
inc
sub
in
fidivrl
jns
inc
mov
sarl
out
add
inc
sub
sub
mov
mov
jg
pop
xchg
xchg
mov
xchg
pop
push
js
add
push
aam
shll
lret
insb
inc
xchg
mov
inc
gs
fidivl
cmc
lods
jb
test
push
or
jecxz
repnz
gs
sub
ret
pop
pushl
incb
ljmp
in
sar
insb
inc
into
fidivs
into
jb
mov
mov
add
in
add
loope
test
xchg
ljmp
ror
aaa
leave
fwait
push
jb
into
mov
add
insb
das
xchg
std
jmp
add
aam
dec
enter
mov
in
adc
and
adc
xchg
add
add
dec
rcll
push
mov
xchg
movsl
leave
mov
jno
xor
mov
xor
mov
adc
in
test
or
mov
mov
add
jnp
pop
jge
push
rorb
mov
inc
adc
sub
pop
or
mov
mov
pop
add
sbb
pop
pop
jmp
add
decb
push
push
movsb
add
pop
fwait
add
sub
and
cmp
lock
sbb
mov
nop
add
xor
scas
add
mov
or
mov
lea
scas
imul
jnp
sub
mov
jae
push
sbb
pop
inc
inc
add
xchg
mov
test
adc
sub
mov
push
mov
jb
mov
rorl
iret
pop
mov
in
push
fbstp
arpl
sub
out
lea
int3
sti
inc
inc
imul
fs
xor
push
jecxz
jmp
sti
cmpsb
pop
ret
daa
add
out
add
pop
push
add
testl
cmp
jbe
add
int3
out
mov
es
inc
dec
pop
lret
movl
out
jmp
add
mov
add
add
negb
jmp
mov
dec
jno
popa
xchg
xor
jg
and
jmp
inc
mov
out
pop
push
add
ret
add
add
mov
jns
jge
cli
lret
xor
adc
jno
add
ljmp
mov
jmp
jno
add
ljmp
add
push
orl
add
add
out
adc
je
pop
add
inc
add
adc
sahf
cmp
jne
sub
mov
add
add
mov
jne
cli
or
rol
int
in
add
and
pop
push
push
xchg
pop
mov
push
lea
sub
mov
and
inc
testl
mov
add
inc
push
xor
jnp
ja
mov
and
jnp
call
icebp
jno
dec
dec
rolb
jecxz
daa
add
mov
cmp
sbb
mov
mov
bt
fdivrl
sbb
sbb
rcrb
out
push
and
jae
movl
jg
mov
lret
mov
imul
sub
sbb
daa
pop
sbb
in
rcrb
xchg
sub
insb
pop
jae
sbb
add
jecxz
daa
jnp
clc
jg
mov
clc
dec
nop
sahf
push
inc
stos
xchg
sub
in
out
int3
out
sar
nop
repz
int3
dec
sub
shlb
test
dec
in
add
cltd
imul
ds
jns
imul
mov
insl
inc
push
push
dec
lahf
pop
mov
inc
stos
daa
add
cld
jb
lahf
sbb
pop
sahf
dec
imul
int3
pop
clc
sbb
insb
enter
pop
repz
pop
or
ffree
outsl
dec
mov
or
mov
xchg
inc
call
pop
xor
int3
push
jb
dec
in
fldl
int3
add
push
notb
sarl
mov
std
push
cmp
add
mov
jmp
add
rcrl
out
push
add
add
and
and
cmpsb
sti
push
push
std
faddl
inc
jmp
mov
int3
add
lcall
jmp
std
add
aas
dec
cld
push
inc
and
imul
hlt
or
jne
inc
push
or
pop
mov
and
incb
push
cmpb
add
add
insl
cmc
ljmp
icebp
push
push
jbe
in
aad
inc
flds
jmp
ds
hlt
jns
dec
lea
test
jne
lcall
cmp
decl
fwait
cmp
or
scas
push
nopl
incl
jbe
add
ret
push
add
insl
add
arpl
add
mov
and
mov
mov
mov
and
sub
icebp
ljmp
inc
shlb
fsubl
leave
and
adc
push
fistpl
mov
mov
or
imul
pop
jae
jae
adc
jo
decl
xchg
mov
test
sub
and
bndstx
adc
xor
jp
jns
clc
lret
pop
add
shl
mov
or
cmp
jecxz
clc
inc
sbb
jnp
jo
and
scas
mov
sti
shlb
and
inc
cmp
adc
mov
test
int3
stc
jl
repz
xchg
push
adc
adc
inc
pop
outsb
mov
push
jbe
mov
lcall
sbb
mov
xlat
dec
sbb
push
or
xchg
pushl
out
mov
jecxz
add
pop
test
mov
jo
iret
xchg
or
inc
add
add
fcmovnu
inc
jmp
mov
lea
mov
push
jb
and
cld
rcr
inc
jmp
add
and
das
neg
mov
loopne
lds
into
sub
add
out
mov
push
inc
pop
fstpl
aam
loopne
jmp
inc
incl
jno
and
and
sbb
add
or
adc
mov
push
movzbl
cmp
imul
addr16
lcall
cmpsb
ds
adc
stos
lret
add
cmp
adc
fiadds
ret
loop
add
negl
push
mov
rorb
scas
mov
addr16
test
lcall
push
and
cltd
sbb
int
inc
add
sar
je
xchg
icebp
dec
scas
xorb
or
mov
mov
imul
mov
inc
add
or
or
leave
add
pop
jbe
cmp
les
push
jne
or
xchg
sbb
xadd
or
mov
ljmp
or
cmpsl
nop
aas
add
mov
cld
fnsave
push
clc
popf
das
or
dec
add
ret
xor
lret
sub
imul
mov
inc
mov
add
dec
push
clc
ds
cld
in
imul
call
inc
add
jb
and
rclb
out
mov
xor
add
push
stos
andb
cmp
repz
ficoml
adc
mov
scas
fildl
add
out
pop
and
add
jne
add
int3
xchg
add
int3
daa
push
dec
out
add
or
add
dec
mov
imul
add
or
subl
call
add
enter
int3
je
pop
int3
add
add
test
add
inc
add
push
add
ljmp
add
in
add
add
dec
mov
xor
cld
xchg
roll
daa
call
sub
lock
sbb
stos
sbb
cmp
test
int3
add
cld
roll
add
lret
jmp
repz
fnsave
fdivl
adc
test
fwait
add
xchg
pop
jmp
pop
or
jmp
dec
loop
and
mov
and
add
std
pop
imul
jge
add
push
push
xor
mov
xchg
movsb
sbb
sbb
mov
jmp
push
jns
xor
pop
adc
mov
push
cmp
add
add
add
int
mov
add
repnz
pop
lea
add
fcoml
imull
jae
icebp
aad
add
mov
add
mov
shlb
outsl
daa
sub
mov
add
mov
aam
add
adc
cld
or
insl
jle
fsubrl
mov
scas
jb
add
jb
mov
lret
mov
jle
dec
pop
fdivs
dec
dec
push
push
adc
push
push
push
add
roll
sub
xchg
add
push
in
jle
aam
add
sbb
scas
cmc
lret
fs
repz
fnstcw
jecxz
inc
jo
jg
xlat
fs
rcr
xabort
fldenv
add
int
add
fmull
aaa
sbb
lahf
push
and
sbb
sub
sbb
test
xorb
add
add
or
sub
or
fwait
decl
xor
cmp
pop
push
imul
jbe
or
jo
adc
sti
cmpsb
int
gs
call
add
icebp
mov
lods
add
dec
enter
jne
bound
xlat
cmpl
faddl
lret
fdivrl
push
cmpsb
add
add
add
mov
ret
iret
push
mov
and
jb
mov
cmp
push
and
sbb
into
mov
xor
lret
call
mov
dec
iret
je
adc
push
cltd
into
add
cmp
cmp
add
push
pop
cltd
add
add
aad
jb
dec
cltd
adc
fcoml
std
decl
sbb
ret
mov
adc
add
lcall
je
pop
cmp
mov
mov
icebp
mov
call
ret
sbb
and
in
mov
add
and
std
mov
std
mov
stc
mov
add
incb
lahf
push
and
or
mull
or
ret
dec
ja
mov
pop
mov
add
jae
test
dec
mov
xlat
pop
pop
sbb
add
out
jae
int3
je
aaa
jg
dec
pop
jne
add
dec
cmpsl
fadds
mov
scas
dec
cmp
out
push
pop
mov
fsubs
fdivs
in
cmp
add
lds
mov
adc
jmp
jb
jecxz
jmp
pop
add
in
jp
aam
add
jns
enter
pop
cmp
call
sub
sbb
test
sbb
repnz
mov
or
shll
adc
rorl
int
vunpckhps
lods
int
out
add
mov
add
add
dec
shll
add
sbb
js
repz
dec
cwtl
xchg
push
push
xchg
mov
fcoml
inc
jmp
js
jle
addl
push
add
or
inc
add
das
pop
movl
cmpsb
inc
jg
out
outsl
and
sub
shrb
inc
ret
shrb
and
fcoms
push
add
pop
lret
shll
mov
xor
push
mov
add
sbb
cmp
in
outsl
xor
out
cmp
jne
and
jbe
mov
push
adc
inc
adc
bound
push
sbb
ja
adc
jg
push
roll
int3
call
sbb
jmp
std
inc
clc
pop
std
inc
fsubrs
adc
test
sub
inc
popa
pcmpeqw
adc
decl
mov
jp
cmpl
jp
hlt
int3
adc
fdivr
or
je
add
movsl
scas
pop
cmp
mov
in
hlt
pop
pop
add
push
jnp
cwtl
adc
mov
push
imul
cli
dec
mov
inc
je
ljmp
add
mov
incl
inc
dec
je
repnz
mov
int3
js
jae
or
xor
push
jg
xchg
clc
lret
push
or
hlt
jmp
pop
int3
xor
ret
inc
dec
cmpsl
shll
mov
andb
popl
lret
out
mov
pop
dec
or
xchg
push
push
ja
out
fldenv
add
test
xchg
rcl
push
dec
push
into
adc
mov
cmp
push
imul
jle
dec
mov
jle
shlb
jle
dec
dec
dec
sub
cld
lret
out
ljmp
sub
add
lret
mov
jl
filds
add
jmp
inc
jl
fadd
fiaddl
lods
lds
add
sub
jmp
adc
jge
sarl
add
add
sub
inc
inc
loope
cmp
inc
xor
sti
or
cmp
std
pop
inc
or
rorl
or
xor
add
jb
shrl
pop
mov
std
cmp
gs
scas
std
mov
mov
mov
pop
clc
dec
or
add
push
or
mov
or
add
sbb
add
divb
add
mov
add
mov
into
loopne
pop
adc
push
mov
mov
jns
add
into
push
mov
add
test
mov
xor
push
stc
add
add
add
jno
shr
add
jnp
pop
cmp
add
insb
mov
addr16
mov
out
mov
xor
add
mov
push
add
inc
clc
xchg
cmp
add
mov
aas
add
imul
imul
jno
add
arpl
add
sub
incl
add
mov
dec
push
arpl
mov
imul
jno
add
lods
sti
add
out
add
out
mov
adc
fldl
in
mov
pop
int3
out
data16
mov
and
pop
shl
add
lret
dec
in
and
fildl
outsb
daa
add
orl
cmp
or
fildl
jl
daa
add
das
popf
div
push
es
int3
pop
mov
pop
int3
mov
xor
bound
jns
jb
pop
mov
add
xor
pop
popl
add
xchg
adc
dec
call
inc
rolb
adc
fldl2e
push
or
ret
dec
in
in
xchg
pop
push
ds
cld
and
lret
arpl
faddl
push
fiaddl
mov
or
inc
je
adc
lds
dec
notl
xchg
jmp
ds
and
orb
cmp
jmp
push
rcr
push
aad
mov
sbb
test
jmp
xchg
adc
and
test
data16
push
push
mov
jno
add
loope
adc
push
hlt
inc
or
or
cmp
xlat
mov
xchg
add
in
cmp
inc
sbb
push
push
icebp
jae
inc
sbb
cs
ja
leave
cmc
mov
in
ja
iret
subl
call
add
mov
add
aas
pop
add
jmp
jnp
cmc
mov
sub
arpl
add
shll
jg
in
dec
add
mov
hlt
pop
jbe
pop
insl
inc
mov
mov
mov
mov
push
std
aas
lea
lods
popa
inc
inc
clc
jno
pop
cmp
stc
call
and
roll
das
mov
stos
xor
fprem
mov
stc
js
add
xor
cmp
xchg
pop
out
das
fisubs
jbe
pushf
jo
lahf
fs
inc
scas
jne
inc
xor
cwtl
lods
mov
cmp
ja
inc
orl
les
fwait
mov
int3
pusha
mov
pop
fists
ror
leave
push
dec
cmpsl
mov
jne
mov
aaa
jne
or
mov
add
dec
inc
in
sub
push
pushf
mov
addr16
into
es
int3
add
inc
movsl
std
sbb
dec
stc
mov
jmp
int3
lds
inc
dec
sbb
ret
inc
inc
inc
sbb
pop
int3
mov
int3
adcl
cmp
test
mov
int3
push
jb
daa
dec
in
xchg
mov
loope
jmp
aas
test
sarl
lcall
mov
inc
inc
imul
or
add
adc
aam
adc
inc
mov
and
je
push
andl
push
add
inc
data16
test
inc
dec
and
mov
mov
and
jb
add
pushf
adc
inc
call
in
jb
push
les
iret
add
mov
cmc
fs
imul
lods
add
iret
xchg
push
or
std
aam
jne
xchg
jne
or
mov
call
adc
insl
jge
push
and
mov
jl
mov
add
mov
add
mov
add
gs
push
pop
mov
fadds
add
add
js
in
jg
jmp
pushl
inc
mov
cltd
add
add
and
add
inc
push
in
add
ljmp
add
gs
mov
nop
add
add
jne
in
lret
ljmp
js
add
add
out
int
add
ret
adc
int3
out
xor
inc
push
adc
out
add
out
int
add
shrl
jno
xchg
jno
xchg
jno
inc
int
cld
pop
adc
xchg
jno
mov
cmp
add
pusha
and
insb
inc
incb
add
int3
bound
stos
lret
bound
add
add
pop
mov
call
pop
hlt
mov
cmp
and
repz
lds
and
lods
and
add
add
fwait
adc
cld
inc
rcr
inc
test
mov
jo
stc
cmc
push
mov
xor
jmp
mov
xor
lods
aam
add
lds
add
add
cld
lret
std
fdivl
xor
fwait
jo
jmp
ja
sbb
sub
fiaddl
data16
sbb
pusha
adc
jmp
adc
int3
add
pop
adc
jmp
mov
add
and
pop
push
add
pop
pop
pop
add
dec
jmp
push
add
std
push
inc
cs
add
int
add
xchg
paddusw
je
fdivrl
popa
paddusb
lcall
cltd
and
leave
add
add
incl
shr
mov
in
incl
in
enter
adc
test
test
fdiv
push
mov
mov
test
mov
nop
ja
add
push
xchg
add
out
es
push
rorb
mov
and
xchg
push
aaa
das
cmp
fcoml
mov
mov
shr
xor
cmpb
stc
jmp
adc
jb
loopne
and
arpl
inc
add
rcrb
daa
aaa
add
add
out
add
sti
add
int3
cmp
add
int3
xchg
push
mov
and
int
add
bound
movlps
add
mov
push
xor
cmpsl
add
jg
add
out
dec
stc
mov
out
sub
or
mov
lcall
int3
push
jmp
add
add
or
ficoms
adc
cld
bound
jmp
lock
push
jle
jmp
stc
pusha
pop
cli
inc
jmp
add
jbe
outsb
jge
jmp
add
or
ss
jno
add
mov
cmpsl
subl
jb
fbstp
add
mov
mov
push
call
add
sbb
add
ret
aas
adc
mov
test
aad
push
mov
dec
jb
pop
inc
add
stc
out
jae
mov
lcall
ds
fimull
call
pop
cmp
ret
out
jae
rclb
imul
mov
pop
jb
fnstcw
adc
bnd
gs
call
test
add
inc
test
cmp
mov
popa
enter
add
lret
inc
add
adc
xor
ret
iret
push
mov
inc
add
aaa
adc
addr16
push
mov
test
in
mov
lock
jae
popa
jo
call
div
inc
jae
mov
pop
mov
jne
decb
pop
sub
stc
or
std
mov
inc
sti
or
call
dec
xlat
pop
cmp
and
or
out
int
pushf
or
push
adc
add
je
xor
int3
imul
add
int3
push
add
fldt
das
push
jl
fisubrs
add
push
xor
or
mov
pop
lock
inc
push
push
jns
add
push
cmp
int3
out
add
inc
dec
xlat
imul
mov
add
mov
sub
loope
add
insb
cmp
repnz
iret
jecxz
add
imul
call
adc
enter
call
add
es
add
push
jo
test
xchg
or
jo
add
shrb
out
xchg
dec
pop
inc
lods
dec
sbb
lret
add
lret
add
xor
scas
aaa
push
movsl
adc
test
stos
lret
add
mov
jmp
jb
add
sbb
cld
std
aam
mov
jg
mov
add
add
addr16
rcrb
add
pop
sub
dec
ljmp
mov
imul
mov
jl
mov
pop
int3
add
ss
inc
sub
jle
dec
cmc
add
rolb
or
mov
jg
inc
cmpb
jb
pop
enter
inc
adc
adc
sti
incl
push
cltd
adc
idivb
mov
add
cltd
mov
or
dec
push
adc
xor
mov
jne
mov
jg
cmp
icebp
cmp
jne
std
add
sbbl
add
addr16
je
inc
into
in
aam
inc
add
pop
test
pushf
dec
mov
sub
add
ja,pn
add
jnp
loopne
sbb
add
leave
mov
dec
out
je
add
and
mov
sub
or
add
scas
ret
scas
outsb
shll
cmpsb
bound
fiaddl
xchg
add
sets
cmp
xor
call
daa
adc
fmuls
iret
out
ret
scas
jmp
add
cmpsl
mov
and
ljmp
mov
cli
scas
push
cmp
repz
pop
std
aaa
rcll
sahf
push
hlt
mov
or
sbb
out
orl
jbe
loopne
mov
test
rclb
add
cld
add
mov
roll
cwtl
push
pop
gs
mov
add
mov
std
bound
push
std
mov
rclb
push
push
jb
insb
pop
add
mov
mov
adc
push
push
pop
hlt
add
sarl
cmp
jmp
cmc
js
je
pop
mov
pop
pop
in
xchg
mov
and
jge
mov
inc
in
test
ss
mov
movl
ror
shlb
push
incl
adc
push
mov
cmp
adc
jl
inc
xchg
and
iret
shll
xchg
sti
je
jne
and
sbb
xor
add
pusha
xor
pop
imul
andb
iret
std
je
rorb
inc
add
mov
xor
mov
idivb
jne
repnz
sti
add
mov
jge
fsubrl
push
adc
mov
mov
xor
inc
sbb
mov
outsl
xchg
add
mov
and
mov
jnp
into
pop
cmpsl
aaa
int3
rorl
fmuls
cltd
outsl
jg
mov
add
cld
jae
add
test
in
je
inc
add
inc
push
jl
add
add
push
ja
sub
shll
int3
out
imul
cld
fsubs
cli
mov
pop
pop
xor
or
xchg
fisttpl
jecxz
lret
push
jnp
out
ja
mov
andl
out
mov
stos
repnz
call
add
imul
sub
fdivrs
xchg
mov
cli
inc
enter
lret
jmp
into
dec
filds
lods
add
and
jbe
lock
jecxz
add
add
arpl
and
mov
sbb
add
jecxz
sub
jl
push
cld
fistl
popa
insb
or
pop
daa
jecxz
lods
add
jmp
add
add
add
push
or
xorb
roll
fdivs
add
mov
out
inc
jmp
xlat
fldl
bound
jmp
movsb
loop
movsl
add
and
aaa
je
add
adc
rclb
je
in
xchg
je
enter
xchg
std
ljmp
std
mov
push
dec
mov
inc
add
mov
sub
add
jmp
shrb
jp
mov
push
jno
incb
cltd
jns
or
loope
jl
popf
int3
mov
push
ret
pusha
push
test
pop
mov
negb
inc
sub
jae
out
jne
ffree
push
ljmp
cmovo
jae
add
cmc
mov
add
add
xor
adc
cmc
int3
addl
dec
cmovo
cmpsl
fs
test
or
cmc
push
imul
add
pusha
xor
inc
jne
add
icebp
sbb
call
jl
mov
adcl
orb
sar
cmc
mov
popa
jnp
mov
add
int
sbb
or
cwtl
cmp
add
pop
fdivl
icebp
or
xor
test
movsb
sub
or
pop
call
addb
aad
mov
or
fwait
orl
add
int3
fs
adc
call
adc
ror
inc
repz
mov
or
fwait
push
sti
fidivs
jnp
inc
sti
testb
xor
or
out
push
fadds
les
mov
xchg
rcrl
or
rcrl
fsts
or
je
insl
call
mov
mov
mov
or
adc
cld
push
dec
jno
sub
std
roll
dec
mov
roll
dec
lret
aad
push
push
jl
add
cmp
add
aas
test
out
cs
pop
dec
test
icebp
xchg
add
in
pop
jmp
add
mov
dec
subl
xchg
lds
mov
arpl
add
or
sbb
stc
add
pop
cmpb
add
add
push
jb
mov
or
mov
mov
add
mov
mov
loope
or
push
xor
add
sub
outsl
jbe
fisttpll
cs
in
int3
movb
sbb
inc
add
add
test
push
add
test
cmp
mov
shl
add
mov
mov
jge
or
adcl
mov
add
dec
lret
je
dec
fisubs
pop
ret
mov
sbb
xor
stc
mov
fidivrs
add
and
add
xlat
inc
rorl
fadds
add
jne
fldl
add
jle
inc
jae
mov
lret
out
add
bound
add
int3
bound
jecxz
mull
test
andb
add
push
repz
imul
mov
inc
adc
inc
inc
aam
iret
jp
push
cmovge
mov
mov
mov
in
andb
cld
add
sahf
add
pop
push
pop
xchg
or
ffreep
jnp
pinsrw
rorl
ds
imul
add
add
in
movsb
cltd
lret
out
jle
push
add
dec
add
dec
ret
movsb
lret
add
push
and
call
pushf
call
push
cmp
call
add
test
add
add
into
add
mov
add
add
or
or
lret
add
inc
dec
int
jno
sar
lret
test
add
or
addl
inc
dec
shlb
adc
sbb
subb
dec
add
rolb
xorb
mov
lock
std
ljmp
mov
iret
add
push
fldenv
push
sub
add
data16
std
out
js
call
addr16
test
jnp
lcall
fadds
icebp
rolb
add
jl
dec
std
jae
inc
std
jae
mov
shr
popa
repnz
add
rorl
add
and
outsb
mov
sub
sarb
add
mov
jp
add
or
stos
in
fcmovnbe
pushl
in
roll
pop
fnstenv
bound
sbb
jl
and
js
sbb
rorl
mov
and
mov
cmpsb
loopne
or
sar
jp
incl
ljmp
adc
mov
add
movsl
and
gs
push
ds
sar
or
dec
adc
movsl
add
add
div
popa
std
lahf
int3
data16
xor
mov
js
ret
dec
arpl
lret
add
scas
filds
into
imul
xchg
imul
sub
aas
cli
jb
jecxz
xchg
jp
sahf
jp
inc
stos
lret
mov
shl
mov
dec
add
mov
jmp
or
loopne
jg
aad
jns
pushf
shlb
xchg
fidivrs
mov
mov
ficoml
movsl
lcall
add
sub
mov
pop
adc
aam
lret
out
sbb
pop
scas
dec
mov
andb
add
push
pushf
xor
add
jmp
dec
inc
insb
int
inc
xlat
sarb
push
stos
add
xor
lods
inc
lcall
and
mov
repnz
call
mov
or
jmp
add
int3
add
pop
dec
and
add
add
test
mov
lds
inc
and
rcrl
or
rolb
add
frstor
inc
push
leave
or
and
shll
add
rclb
push
dec
divl
fsubr
xor
leave
or
inc
sbb
inc
add
out
add
push
repz
add
add
add
inc
dec
and
mov
add
pusha
test
adc
test
rolb
add
ljmp
cmp
mov
mov
movsl
mov
mov
jp
inc
sbb
inc
mov
xchg
mov
out
sarb
jae
cs
mov
iret
add
jns
in
div
movl
clc
fistl
add
popf
iret
push
inc
orl
cmp
test
mov
into
inc
sar
fadd
and
addl
add
xlat
int3
out
xchg
add
inc
arpl
mov
out
test
int3
mov
cmpsl
push
out
xor
jbe
fmul
out
add
or
dec
and
mov
or
jge
ljmp
ret
add
out
dec
jmp
xchg
push
adcl
loope
sbb
fcomp
adc
jmp
inc
and
repnz
add
in
add
out
andl
mov
mov
sub
call
and
and
add
int3
add
add
std
xor
add
loope
xor
ret
xchg
mov
jmp
add
push
inc
and
fs
lods
add
add
and
sub
jmp
inc
mov
push
loop
add
add
dec
ds
add
add
inc
fnstsw
sahf
nop
idivb
add
add
or
add
inc
jge
fcmovne
add
push
sbb
inc
mov
imul
repz
out
addb
js
or
push
pushl
stos
xor
inc
loop
sbb
and
aas
imul
aas
inc
and
ja
cmp
push
lea
movl
inc
inc
xor
movl
add
cmp
inc
push
and
inc
aas
add
adc
rorb
rolb
mov
push
mov
push
mov
fs
loopne
outsb
dec
add
pop
lea
cmp
inc
pop
mov
jl
xchg
lock
add
jae
jb
push
call
xchg
ljmp
enter
mov
pop
nop
mov
add
arpl
enter
sbb
add
fmul
and
out
add
adc
adc
pop
sar
sub
add
arpl
mov
lret
notb
lret
pop
ret
lahf
add
xchg
pop
out
int
add
jb
or
push
and
testl
int
add
mov
int3
jmp
add
out
lcall
add
dec
dec
push
adc
movsb
or
fisttps
xor
out
dec
and
inc
int3
out
test
data16
dec
out
mov
out
xchg
int3
add
add
lds
dec
testl
int3
adcl
inc
jo
stos
sub
stos
and
add
inc
call
push
ret
mov
enter
pop
ljmp
jl
mov
and
js
and
jns
and
add
cmp
cld
lret
add
xchg
push
add
subl
dec
mov
and
mov
test
adc
add
push
mov
mov
fimuls
loop
mov
adc
add
mov
adc
addl
leave
mov
cmp
cmp
mov
test
and
mov
add
jge
sub
sbb
mov
lret
push
push
mov
leave
push
pop
in
jne
loop
and
add
decl
xlat
addb
add
or
cmp
test
enter
sti
stos
ret
xchg
je
fld
and
enter
mov
fldl
pop
push
push
xchg
lahf
add
mov
push
enter
mov
adc
add
jnp
jb
jne
loop
pushl
outsb
jge
in
add
add
popa
add
pop
sub
mov
or
add
lea
mov
int3
sti
faddp
mov
push
repz
or
mov
sub
add
call
pop
add
addr16
sbb
pop
filds
out
pop
pop
xchg
add
int3
pop
lds
xor
jb
add
cmp
jg
ljmp
jge
aad
add
add
push
jnp
add
jb
pop
or
aam
addr16
repz
mov
ret
push
push
add
dec
and
add
add
out
inc
push
xchg
fwait
call
add
or
gs
fwait
call
std
xor
add
loopne
out
push
dec
std
jb
out
pop
call
shr
sbb
cmpsb
call
jo
mov
outsl
lret
add
clc
jle
sbb
jge
call
sbb
mov
sub
dec
std
aad
dec
rolb
xlat
cmp
adc
int3
push
add
mov
sub
mov
sub
add
add
inc
mov
push
inc
and
negl
std
sldt
fprem
add
mov
jp
test
sub
lcall
and
int
cvttps2pi
mov
cwtl
aam
inc
fwait
mov
or
std
push
clc
mov
lock
int
jmp
add
add
add
mov
push
inc
mov
add
je
mov
add
sbb
add
sbb
incb
xchg
inc
cmp
test
add
sub
sub
and
xchg
sbb
jns
jae
das
idiv
mov
nop
xor
cmp
sub
add
xor
orps
add
dec
out
add
popa
lret
out
or
push
test
lret
mov
loopne
lret
out
mov
out
mov
fimuls
int
and
sbb
add
mov
lahf
add
int3
out
xorb
add
lock
jge
add
shrl
fiaddl
cs
sbb
cmpsb
pop
xchg
into
push
ds
lcall
mov
xlat
adcb
push
popl
jmp
ret
push
mov
push
add
add
mov
cld
push
test
mov
cwtl
jmp
addr16
jmp
inc
pop
add
add
mov
jmp
add
arpl
jmp
inc
mov
add
or
add
inc
ljmp
mov
push
mov
cld
jge
in
sub
loop
push
test
lret
lret
add
test
out
test
push
xchg
sub
xchg
iret
add
rclb
mov
lea
add
lret
inc
xchg
std
lcall
fists
sub
mov
add
iret
mov
and
add
out
loopne
mov
pop
add
leave
inc
mov
sub
mov
fidivs
add
call
pop
add
cmpsl
fstpl
xor
decl
add
xor
idivb
ror
add
jmp
inc
jae
fcomip
sti
pop
xchg
add
jno
add
mov
mov
or
sub
xor
and
xor
add
movsl
mov
stos
insl
and
add
jmp
jle
and
add
add
cwtl
pop
adc
add
test
movl
add
adc
sbb
out
adc
addr16
xchg
lahf
jb
bswap
out
jnp
sti
jl
out
pop
add
xor
adc
test
hlt
push
push
add
push
inc
je
add
out
dec
lock
mov
ficomps
iret
push
jecxz
call
xchg
fwait
call
call
rorb
push
pushf
fimuls
push
inc
xchg
out
dec
int
add
js
mov
int3
out
into
js
mov
int3
add
adc
or
das
sbb
mov
push
xchg
repnz
rcr
jge
jmp
push
mov
stos
int3
add
adc
sbb
add
mov
cld
shlb
loope
or
push
add
xchg
outsl
ss
adc
bound
pop
call
jae
std
pop
add
cmpsl
call
mov
pop
call
push
out
pop
call
fsubs
mov
icebp
inc
rolb
dec
dec
sbb
into
or
mov
leave
mov
add
arpl
jmp
fadd
imul
or
sarb
jge
popf
pop
jmp
add
fnsave
pop
add
inc
push
outsl
add
xor
sbb
mov
pop
add
movsb
and
add
cmp
int
into
int3
fdivr
test
cmp
add
fistpl
dec
lock
inc
xor
cmp
cltd
mov
call
sbb
iret
push
adc
pop
cltd
mov
add
incl
movl
dec
scas
sub
mov
adc
loope
mov
mov
dec
add
mov
and
xor
add
jle
add
fiadds
cmp
xor
cmp
xor
cmp
and
add
out
adc
fiadds
add
xor
sti
lods
out
outsb
lret
out
jns
add
ret
repz
cli
mov
inc
out
add
mov
adc
scas
mov
das
xor
bound
adc
jb
adcl
jp
hlt
sahf
fwait
cltd
lret
jo
push
insb
or
mov
call
addb
mov
and
pop
push
xchg
and
mov
and
pushf
add
ret
push
ljmp
pop
add
add
fnstcw
add
mov
std
hlt
outsl
flds
sbb
or
mov
push
test
mov
mov
in
and
fmull
mov
idivb
std
inc
lret
flds
mov
dec
and
cld
lret
add
xchg
push
push
add
daa
into
test
xchg
sar
ljmp
pusha
push
xor
cmp
push
add
lret
add
sub
add
ret
mov
lret
add
sbb
sbb
lret
pop
mov
add
lds
mov
shlb
add
mov
add
add
lret
mov
incb
push
lret
movsl
xor
sub
adc
inc
stos
sbb
lret
xor
lret
add
jae
sbb
add
adc
add
xchg
imul
cmp
xchg
adc
add
jnp
in
test
imul
cmp
es
xor
push
add
lock
xor
add
test
xorl
js
adc
add
addl
fmul
mov
inc
sbb
xchg
inc
jae
iret
lods
es
add
les
lret
insb
arpl
lret
out
sub
or
add
in
cmp
sbb
testb
inc
pop
add
int3
ljmp
addr16
pop
ficoms
jge
out
add
mov
add
mov
sbb
rcll
sbb
divb
fwait
jb
addr16
push
add
push
or
ret
add
xchg
incb
add
int
out
fiadds
repz
mov
add
std
or
test
add
mov
push
sti
add
or
out
int3
aaa
jbe
shrb
cmpsl
cmp
jmp
out
cmp
pop
out
fcomp
jle
push
jmp
test
push
out
xor
dec
subl
int3
mov
cwtl
sub
sub
dec
and
jmp
dec
lret
imul
aaa
call
add
mov
adc
test
pop
arpl
add
out
cld
out
cmp
push
adcb
std
incl
mov
push
test
bound
test
xor
ja
iret
add
jne
push
sbb
lcall
push
test
das
std
call
dec
sbb
int
fadds
cmpsb
dec
dec
and
mov
inc
or
paddusb
add
mov
or
adc
cmp
push
push
jge
loope
aas
mov
int3
xlat
jmp
sbb
mov
mov
shl
jnp
ror
cmp
nop
add
inc
mov
jl
adc
dec
adc
inc
rcr
shll
fisubs
add
xor
test
and
aas
add
add
mov
mov
jg
add
add
dec
or
das
stc
xor
sbb
ror
cmp
out
js
or
or
aam
repnz
ds
pusha
daa
sbb
std
daa
int3
cmp
push
inc
test
jle
in
out
sbb
sbb
push
inc
mov
test
add
add
cltd
mov
pushf
out
imul
in
mov
add
in
out
repz
jnp
mov
mov
movsb
cmp
testb
jae
lret
rsqrtps
mov
inc
add
cwtl
leave
mov
fs
roll
xchg
out
fs
bound
cmc
fdivrs
add
mov
scas
dec
mov
or
jmp
inc
out
gs
xlat
add
sbb
sub
repnz
test
dec
jae
push
andl
aad
jmp
adc
add
shlb
add
xchg
pop
and
mov
inc
lahf
xchg
add
fnstsw
std
add
pop
insb
push
push
mov
bound
add
gs
adc
jae
ds
mov
xor
or
out
cmp
jb
push
mov
mov
or
cmp
mov
mov
sbb
mul
leave
adc
and
call
jno
cvtpi2ps
ljmp
mov
and
inc
add
decl
jb
cmp
inc
adcb
decb
lahf
incl
dec
cli
push
test
or
addr16
add
subl
aas
and
adc
das
and
add
pop
cmpsb
in
add
jle
pop
and
jmp
sub
push
cmpl
or
pop
test
sti
iret
push
shr
pop
add
sti
in
push
sbbl
scas
es
add
jmp
rorl
adcl
add
dec
cli
push
push
mov
or
lds
add
int3
out
pop
push
movsl
in
xor
out
cmpl
add
pop
or
xor
out
sbb
icebp
jecxz
sysexit
out
jge
out
cmp
lds
or
in
out
imul
adc
out
ret
jo
dec
add
jb
sbb
int3
add
fisttps
jne
repnz
iret
mov
cmc
movb
jmp
insl
inc
xor
jle
imul
add
test
test
add
add
push
add
add
cld
lret
or
jmp
add
xchg
ss
in
jmp
jmp
add
cmp
xchg
add
add
std
and
or
adc
sub
or
mov
pop
sti
data16
cmp
fiadds
cmp
xchg
dec
fcomps
add
cmp
dec
iret
add
fisttps
and
xchg
std
idiv
cmpsb
icebp
pop
insb
es
lods
std
int
mov
mov
xor
andb
fisttpl
xchg
xor
jmp
add
jmp
into
xor
fcomp
out
inc
cmp
fiadds
jmp
je
add
sub
add
add
sti
jl
movl
leave
and
jl
dec
incl
icebp
adc
call
sub
imul
mov
mov
push
mov
or
ret
and
mov
and
andb
add
int3
jge
inc
les
test
and
add
cltd
dec
incl
xor
test
dec
or
or
mov
or
sub
mov
adc
jecxz
inc
call
xlat
adc
aas
addl
pop
inc
sbb
and
mov
inc
sub
hlt
shlb
std
jno
movsl
mov
out
inc
shrl
in
jo
add
jecxz
outsl
in
insb
aad
dec
aas
out
or
inc
mov
jg
xor
push
lret
out
jns
ret
pop
xor
and
std
iret
subl
int3
mov
fsubr
mov
inc
dec
inc
or
mov
inc
int
repnz
jmp
ja
jl
pop
int3
or
jmp
add
lret
add
pop
lock
add
mov
aam
std
jmp
sbb
in
inc
daa
dec
shr
rclb
jmp
fsubrs
arpl
mov
mov
jns
add
jae
test
cmp
fimuls
add
lret
cmp
daa
xchg
hlt
lret
sbb
dec
pushf
std
push
xor
mov
xchg
mov
add
or
shrl
inc
rcl
xchg
and
ljmp
and
inc
insb
and
out
push
jns
xor
pop
dec
mov
insl
out
jg
lret
or
jmp
add
xchg
sub
xlat
xor
add
add
and
rolb
pop
and
test
adc
dec
shll
lock
aaa
mov
adcl
mov
inc
shll
push
and
fs
mov
mov
xchg
inc
xchg
enter
sub
dec
sbb
sti
orl
add
add
lret
imul
mov
add
cmpsl
ljmp
mov
mov
sub
or
ds
add
lret
out
mov
out
lahf
popf
mov
jo
sbb
roll
or
out
add
mov
xlat
or
jg
mov
fldt
cmp
fucomi
xchg
out
fcmove
lidtl
mov
add
cmp
lret
ret
leave
sub
clc
rclb
dec
dec
and
sub
xchg
push
sub
mov
fcmovb
dec
jl
adc
mov
add
shlb
and
scas
cli
shrb
std
mov
pusha
inc
call
xor
test
std
mov
gs
shrb
add
insl
nop
cmpl
inc
loopne
lret
inc
fs
cmp
mov
add
ljmp
enter
int3
adc
pop
int3
and
pop
call
push
xor
and
pop
add
push
jl
adc
and
mov
inc
mov
jmp
cmp
das
cmp
divb
add
xchg
pop
decl
cmpsb
pop
add
and
dec
push
in
and
fdivr
adc
pop
pop
inc
and
popl
rcll
lret
push
jmp
and
add
add
mov
mov
and
fimuls
mov
add
lret
pop
gs
add
scas
add
xor
add
sbb
aaa
cmp
and
jbe
cmp
fadds
xor
inc
in
cmpl
or
xchg
int
or
add
add
rcrb
std
lods
adc
pop
xor
rcll
and
add
loopne
pop
add
out
xor
sub
push
jns
aas
add
sub
inc
dec
orl
jle
add
add
out
cmp
sarl
lock
je
xor
sbb
int3
push
push
int3
jb
and
call
cmp
rorb
cmc
pop
push
stc
popf
sub
lods
cwtl
sub
add
int3
shrb
cmpsb
xor
mov
and
ror
in
rcrb
fsubrs
add
int
sub
nop
and
or
add
lret
mov
out
sub
inc
stos
faddl
inc
xlat
test
sbb
std
push
out
and
or
clc
add
mov
jp
and
and
or
jmp
test
mov
cli
and
xor
inc
sub
adc
and
add
lock
or
sub
decb
ja
cmp
decl
add
mov
mov
call
and
and
mov
test
lcall
cltd
sti
mov
cmp
sub
mov
pop
iret
add
push
aaa
sti
jmp
pop
or
fsts
and
rolb
add
and
ret
adc
in
add
lahf
add
cltd
lret
je
adc
jbe
cli
cmovo
int
mov
push
sti
jmp
repnz
and
pop
lret
add
add
cmc
std
pop
cli
push
insb
pop
mov
cmc
dec
cmpsb
push
mov
iret
inc
ret
stos
cmp
and
xor
add
stos
dec
add
incl
add
push
test
aam
std
out
stos
inc
add
sbb
adc
mov
call
sysexit
add
outsb
testl
rorb
cli
jb
dec
movl
mov
push
fisubl
xor
push
sub
and
fwait
xor
jp
outsb
cmc
add
nop
push
inc
icebp
or
xor
jb
jns
push
jmp
pop
pushf
add
or
mov
iret
add
vphsubwd
or
add
mov
jb
and
out
nop
xor
inc
add
and
aam
mov
dec
mov
je
xchg
add
popl
jmp
int3
and
jmp
add
dec
dec
lds
dec
push
int
dec
inc
lds
dec
insb
int
test
int3
fildl
lahf
das
aad
mov
les
sub
dec
inc
or
shl
pop
lds
mov
add
or
or
dec
notl
inc
lds
xlat
test
int3
add
out
sub
sub
xlat
fs
out
adc
add
dec
jl
std
iret
or
loop
test
aaa
lret
mov
pop
push
leave
jg
pop
enter
int
jl
mov
xchg
testl
cmc
lret
movsb
mov
iret
add
bound
sub
into
subl
adc
adcb
iret
add
fxch
inc
mov
xor
push
mov
inc
leave
add
xor
mov
rcll
xchg
xor
push
incl
mov
jge
pop
js
std
addr16
or
push
scas
jge
shlb
add
sub
pop
dec
and
es
outsl
and
add
test
add
add
xor
lret
jbe
roll
dec
aaa
aas
jno
mov
repnz
std
fildll
add
fnstcw
std
roll
and
and
lret
inc
pusha
cmc
dec
imul
int3
out
add
testb
xchg
sbb
push
and
adc
test
inc
out
add
or
add
testb
push
pusha
dec
fdivrl
xchg
add
int3
and
shrb
add
out
push
into
add
jmp
or
repnz
and
call
daa
lock
xchg
daa
sub
fiadds
or
test
mov
jmp
aas
and
jmp
fdivrs
dec
call
mov
nop
pop
and
add
add
jno
and
add
add
add
dec
bound
subl
int3
mov
mov
call
call
mov
adc
add
lds
push
mov
outsl
push
cmp
imul
mov
sbbl
mov
sub
int3
in
sahf
xor
ja
xchg
add
lret
pop
or
ljmp
mov
int3
in
pop
int3
add
xchg
std
rorb
or
xor
fwait
and
jmp
pop
out
or
inc
mov
sahf
inc
and
jo
mov
ffree
inc
jb
out
add
or
movsl
out
mov
add
xor
mov
or
loopne
jl
in
mov
xor
inc
in
jp
fwait
lahf
addb
roll
in
std
mov
add
stos
subb
add
cmpsl
rorl
jmp
dec
add
stos
push
and
fwait
inc
and
pushf
pop
and
mov
or
add
add
add
decb
jle
add
mov
add
cmc
inc
cmp
and
add
mov
push
cli
lret
out
inc
out
push
push
xchg
or
scas
jge
mov
add
std
adcb
sub
xor
lret
in
mov
sti
jbe
or
cmpsl
inc
pop
xchg
cld
xorl
add
add
xchg
cld
adcl
sub
sub
out
sub
jl
adc
out
jns
mov
std
test
cmp
cmc
leave
add
lret
std
add
add
shrb
cld
or
mov
add
sbb
testb
mov
inc
dec
clc
jecxz
call
add
add
and
push
hlt
dec
clc
fmull
out
insb
add
add
jle
adc
add
jne
gs
add
mov
out
rolb
mov
jmp
dec
dec
cmp
scas
daa
inc
push
and
shrb
sti
or
movsl
leave
add
jmp
dec
mov
mov
mov
rcrb
sbbl
add
enter
call
add
les
add
enter
in
inc
adc
leave
rcl
add
mov
add
or
xchg
insb
pminsw
mov
sbb
or
mov
clc
dec
lods
pop
cmp
es
inc
adc
enter
mov
adc
add
icebp
push
sbb
add
add
roll
sbb
mov
and
add
adc
andl
std
iret
xor
or
test
add
and
add
pop
call
inc
in
inc
xchg
adc
inc
xchg
mov
test
add
xor
xchg
jne
add
stc
addb
add
add
xor
std
pand
inc
orl
jl
adc
add
repnz
push
popf
adc
int3
bound
and
cmpsl
jl
lock
ret
faddl
out
adc
jl
lock
arpl
sbb
cs
test
xchg
popa
loop
cmp
int
add
int3
bound
mov
add
add
out
fldt
cltd
lahf
int
add
or
jnp
out
sti
sub
lret
dec
sbb
sub
cmpsl
fiadds
add
cmpsb
iret
inc
pop
movl
mov
jle
add
add
shrb
cld
or
int3
add
adc
aas
sarb
test
push
sbb
push
add
loopne
in
add
test
out
mov
jmp
lock
stos
jmp
int3
add
inc
mov
mov
add
xor
cmp
mov
pop
mov
xchg
add
pop
push
cmp
test
add
mov
xchg
inc
and
out
jle
adc
xor
lea
rcrb
adc
xorps
mov
mov
adc
test
mov
ret
out
sbb
inc
mov
mov
or
dec
popw
mov
fdivrl
mov
daa
add
adc
jl
adc
add
add
and
data16
cmpsb
and
and
cmp
or
out
mov
testb
in
xchg
or
test
add
arpl
mov
push
sub
cpuid
stos
add
and
insl
sbb
or
out
or
cltd
mov
jge
jo
add
int3
add
int3
int
popa
add
mov
inc
testl
mov
jl
out
imull
lods
out
pop
push
inc
int
add
insb
icebp
loopne
sub
sti
testb
imul
int
add
stos
pop
hlt
jnp
out
out
xchg
add
int3
rolb
xchg
pop
or
push
out
test
dec
jg
out
lods
out
and
add
sbb
and
cld
arpl
std
and
or
jmp
add
add
out
xor
out
adc
pop
cs
out
int3
sub
loopne
call
lret
sahf
xchg
mov
fldl
in
dec
jecxz
in
out
fcoml
std
jb
or
and
test
and
or
and
leave
mov
mov
pop
mov
fnstenv
pop
push
mov
adcb
adc
or
jmp
repnz
andl
pusha
shrd
incl
mov
pop
cmp
ss
add
inc
add
clc
jnp
inc
das
incl
dec
and
repnz
das
sti
pushl
adc
cli
cs
ljmp
and
nopl
incl
out
mov
test
cs
ljmp
aaa
shll
sub
mov
out
sub
imul
pop
fcompl
loope
xchg
and
orb
or
add
mov
ret
jl
cmp
pop
popf
lea
out
cmp
or
loop
ljmp
xchg
add
push
out
fmull
pop
jb
xlat
loop
clc
cld
sbb
cmpl
lahf
add
add
test
sbb
inc
inc
pop
mov
dec
int3
rorb
adc
mov
out
out
add
xlat
jo,pn
dec
mov
gs
cltd
add
or
stc
xchg
cld
xchg
adc
adcb
or
add
int3
testb
lea
or
movsl
lahf
out
xchg
push
loop
pop
loop
inc
fdivrs
mov
adc
loop
mov
aaa
and
mov
loop
mov
add
lods
adc
cltd
stc
inc
cmpsb
pop
xchg
movl
and
aad
add
mov
jno
idivb
mov
test
add
jle
sti
sahf
and
or
and
cmp
nop
rolb
imul
add
add
std
stos
inc
rcll
sbb
fstl
adc
insb
fiadds
mov
mov
or
add
sub
inc
ret
and
sub
cmp
pushf
outsl
sbb
es
add
sbb
cli
ljmp
mov
push
add
lcall
mov
sti
mov
call
in
add
add
xlat
mov
adc
out
out
xor
fidivs
inc
add
or
xor
in
pushf
int3
push
je
dec
roll
jno
adc
inc
insb
and
mov
add
jns
and
out
and
add
and
and
mov
xchg
and
and
add
add
add
sub
add
add
and
push
jnp
sub
idivl
or
add
and
xchg
xor
dec
cmp
mov
leave
pop
out
and
push
outsb
cwtl
and
and
add
cmp
pop
add
inc
call
and
fldl
mov
or
in
cmp
push
fcomip
push
mov
or
sub
add
add
inc
jmp
cmp
filds
add
daa
enter
add
mov
jns
add
movntq
je
push
push
mov
mov
stc
add
in
call
sub
cwtl
in
mov
add
int3
cmpsl
mov
sti
xor
push
movsb
add
jnp
cmp
out
add
mov
add
add
int3
add
js
std
pop
out
call
ja
pop
call
out
call
pop
adc
testl
mov
add
mov
add
or
inc
out
pop
repnz
int3
out
lea
add
mov
daa
sbb
cmc
dec
push
icebp
add
int3
or
lahf
test
insb
test
push
pushf
and
push
aaa
inc
ffree
subb
out
cli
ljmp
iret
pop
pop
sbb
add
inc
test
fldcw
jno
sti
mov
mov
ljmp
sar
in
add
push
fucom
pop
add
xchg
xchg
xor
add
fucom
pop
add
sub
call
jmp
mov
jne
mov
push
es
movl
icebp
jae
mov
add
jmp
mov
add
add
add
jns
addl
in
add
add
push
lods
dec
jo
mov
pop
xchg
or
push
or
jg
add
mov
jecxz
push
push
xchg
and
add
mov
cmp
lahf
sub
and
and
xchg
lcall
jns
push
xchg
xlat
in
mov
out
jns
or
cs
add
int3
ds
and
call
pop
sbb
es
fdivl
xor
add
into
call
pop
in
imul
int
add
or
fwait
xor
add
pop
inc
or
push
or
mov
mov
call
pop
aam
out
sub
or
jmp
es
orl
daa
xor
xchg
pop
test
xchg
setl
call
add
lahf
push
jb
repz
and
loope
xchg
pop
mov
lods
pop
mov
inc
inc
push
inc
int
les
xchg
adc
dec
jge
add
jb
push
push
add
mov
pop
adc
xchg
mov
clc
dec
popa
loopne
int3
mov
cmpsl
call
loopne
push
aaa
cmp
and
add
into
add
xchg
cmp
mov
ret
jmp
pop
and
fmul
add
test
mov
std
fprem1
repnz
and
fisubs
daa
pop
inc
mov
aaa
pop
vmovdqa
cltd
push
jnp
cltd
aam
add
add
mov
aad
add
test
push
cmc
cli
incl
fisubl
in
sub
out
mov
and
and
and
add
test
or
add
mov
push
shl
inc
outsb
lret
and
jge
and
mov
add
std
or
outsl
xchg
or
repz
ret
adc
xor
cmpsb
sbb
mov
loope
and
hlt
add
mov
xor
add
xchg
xlat
mov
push
add
add
and
repz
pop
mov
std
pop
outsl
les
inc
sti
dec
dec
mov
sbb
mov
lret
sbb
std
inc
cli
adc
mov
mov
push
xor
call
iret
loope
xor
and
mov
sbb
call
repz
adcb
dec
call
int
add
xlat
cli
ret
inc
push
scas
aaa
testl
stos
pop
in
imul
jl
xchg
add
int3
cmpsl
mov
xchg
pop
int3
out
mov
into
sbb
call
cs
inc
add
dec
inc
and
add
mov
call
pop
or
insb
inc
flds
bound
mov
and
sbb
out
out
std
push
mov
ficoms
add
out
inc
xor
jmp
test
cld
push
jp
and
add
add
out
jecxz
xchg
out
or
jmp
adcb
dec
fdivs
sub
cmp
inc
and
rolb
mov
sbb
inc
mov
stos
sbb
mov
mov
mov
sar
int
pop
add
leave
xchg
push
pop
mov
add
and
call
lods
pop
add
leave
call
test
fwait
xchg
jmp
xor
cwtl
leave
add
fiaddl
dec
mov
or
pushl
cli
cli
jmp
mov
add
loope
and
roll
adcl
add
sbb
aas
mov
cs
je
xor
rcrl
cmpsl
sbb
mov
out
mov
out
add
jle
and
hlt
add
out
sbb
repz
xchg
aam
jge
dec
cltd
fldenv
jge
pop
hlt
add
inc
mov
mov
cmp
or
lea
insb
pushl
sti
xchg
cmp
ret
and
and
lods
out
xchg
int
add
add
inc
jg
add
lcall
or
and
add
jle
pushf
mov
add
out
cmc
cmp
das
out
add
sbb
orl
add
fsts
int
imul
int
add
clc
jle
test
push
cmp
incl
jnp
in
add
mov
add
add
cltd
add
add
jg
push
jmp
xor
std
jmp
dec
ret
push
aaa
xor
and
std
lret
add
add
scas
adc
cmpsb
add
std
pop
fistps
add
add
add
fistpl
jbe
dec
shl
jmp
arpl
add
mov
push
test
inc
jmp
call
cmp
xor
add
push
xchg
insb
shlb
inc
mov
mov
ljmp
sbb
push
mov
lock
lea
cld
dec
push
loop
call
test
cltd
int3
subl
mov
jmp
loope
sbb
xor
cmp
cltd
sbb
pop
xchg
dec
in
add
lods
int3
test
aam
add
ja
jg
xor
subl
incl
int
stc
mov
test
test
jno
add
repz
xor
add
push
sbb
repz
sbb
add
add
repz
icebp
subl
in
incl
ret
pop
insb
add
repz
and
cmp
out
add
cmpl
jns
imul
push
jbe
and
mull
addl
or
subl
dec
and
xor
std
hlt
dec
jne
add
push
or
xorb
add
cmc
imul
aad
push
int3
rorb
into
jnp
mov
or
int3
rcrb
mov
aad
lret
call
iret
mov
call
sbb
call
iret
cmc
push
sbb
test
repz
inc
and
mov
call
cmp
cmpsl
xor
jb
push
int
jmp
mov
mov
iret
add
mov
and
add
add
add
call
insb
inc
roll
xchg
add
into
lret
jb
cmpsl
sub
aaa
dec
mov
add
mov
into
jo
cmpsl
cmp
push
xchg
xchg
add
je
and
push
sub
inc
jb
jo
push
mov
insb
call
aaa
test
add
mov
inc
jmp
test
xchg
dec
push
out
and
test
add
das
xchg
add
sub
lret
fldcw
sti
mov
scas
std
incl
imul
pop
add
xchg
arpl
sub
add
add
mov
jge
pop
sbb
in
loop
inc
cmp
movl
add
push
inc
add
lret
in
in
push
jne
test
pushl
sbb
xlat
lea
mov
ja
fsubr
jge
jnp
xchg
mov
std
mov
or
iret
and
add
mov
xchg
cmp
int3
out
ja
and
add
add
add
add
inc
sbb
cmc
das
ss
fmul
add
add
and
repz
rol
mov
repnz
mov
sub
mov
adc
add
and
int3
call
xor
int
or
cld
out
leave
xchg
inc
xchg
fcompl
mov
ret
or
cld
outsl
xchg
insb
lret
out
lahf
jbe
int3
jge
imul
lret
rcrb
add
int
inc
add
xchg
and
addr16
mov
lret
sbb
add
call
and
cltd
out
add
iret
xchg
jg
in
mov
sti
jmp
mov
pusha
inc
mov
and
idiv
pop
xor
std
fidivs
lahf
std
hlt
push
loop
jmp
push
movl
jmp
inc
mov
shlb
add
add
cmp
stc
cld
jo
pop
add
add
loop
dec
stc
mov
xchg
call
ja
pop
call
add
int3
or
jne
cwtl
call
jecxz
inc
jmp
add
mov
jmp
mov
fnstcw
sar
pop
dec
rorb
push
ljmp
inc
sbb
dec
push
in
test
add
cltd
into
inc
push
out
dec
and
test
add
aaa
mov
jmp
into
or
add
scas
insb
inc
pop
add
add
push
push
pushl
pop
add
sti
mov
mov
xchg
push
ret
sar
outsb
jp
sete
cld
pop
add
pop
sbb
add
add
add
push
jp
and
in
add
sarl
add
add
inc
jecxz
mov
add
add
out
push
cmpsl
ja
pop
add
add
mov
nop
and
in
add
outsb
mov
std
jge
testl
pop
outsb
andb
add
shlb
add
sbb
and
jecxz
add
js
and
lret
daa
psubw
add
mov
call
pop
dec
lret
out
add
inc
mov
enter
jle
pop
enter
mov
dec
enter
add
inc
arpl
inc
lret
out
or
pushf
es
in
call
ds
push
pop
aam
out
std
inc
addr16
mov
enter
add
int3
ljmp
lret
add
nop
fcoml
jb
sbb
add
add
subb
testb
mov
cld
mov
stc
mov
cwtl
call
jo
pop
call
inc
int3
std
popf
loopne
call
in
inc
jmp
add
add
push
mov
call
daa
idiv
jmp
cwtl
sbb
incb
add
out
add
cld
out
inc
test
mov
int3
mov
pop
sbb
hlt
pushw
xchg
mov
sbb
pop
add
lret
sbb
sti
mov
scas
std
fscale
mov
leave
sahf
inc
add
and
fmul
add
sbb
sti
mov
movsb
std
ljmp
xlat
pop
add
adc
out
add
add
or
push
cld
push
push
mov
ja
pushf
pop
lret
lods
xor
jge
sti
call
push
add
inc
add
and
or
xor
xor
leave
sub
jns
fdivl
cmp
negl
cld
or
insb
cmp
jp
xchg
add
add
cmp
inc
xchg
add
add
cs
xchg
subl
jecxz
xchg
xor
mov
int3
inc
cmp
dec
sbb
jle
aad
push
cli
imul
jb
sbb
test
add
out
lret
frstor
add
push
add
pop
cmc
out
movsb
scas
daa
jnp
scas
pop
jp
lret
push
add
nop
bound
or
add
or
and
call
aas
and
jo
sbb
mov
sub
or
fcoml
jge
loopne
cmpsl
add
lret
out
add
push
sbb
call
les
add
daa
pop
std
out
decl
jo
scas
sub
inc
movb
cld
lret
add
push
cltd
jmp
fmul
cmp
dec
idiv
sbb
inc
inc
lds
test
lret
add
test
test
into
push
jle
test
jbe
sar
das
fiaddl
repnz
adc
inc
jmp
adc
loop
int
push
rorb
fsubs
mov
inc
icebp
cld
shlb
add
add
iret
add
adc
test
pop
push
sti
pushl
pop
inc
pop
inc
inc
and
and
repnz
push
xchg
xchg
test
pushf
dec
and
sbb
add
push
fiadds
hlt
sahf
pop
inc
fstps
sar
jle
xchg
xchg
test
dec
dec
and
test
mov
pop
inc
add
in
int3
or
jge
fimuls
repnz
fidivrl
shl
add
in
add
in
add
in
add
in
push
shl
push
shl
push
shl
push
shl
add
shl
push
shl
add
shl
add
jecxz
add
inc
jecxz
or
fisttpll
add
or
inc
jecxz
add
jecxz
sti
inc
jecxz
add
ljmp
jecxz
or
les
inc
jecxz
or
mov
inc
jecxz
or
out
or
out
or
out
stc
mov
mov
mov
sbb
cmc
mov
popa
or
mov
xor
mov
lcall
out
add
mov
pop
repnz
sub
mov
xor
mov
cmp
mov
cmp
mov
pop
decl
out
mov
fldl
mov
mov
jmp
mov
cmpsl
mov
mov
cwtl
movsl
mov
fs
mov
mov
mov
jmp
dec
lret
aas
jmp
or
aas
jmp
ja
aas
jmp
add
aas
jmp
cltd
test
aas
jmp
push
mov
jmp
inc
pop
repz
or
dec
mov
dec
cli
pand
fdivrp
sbb
cli
aam
shr
iret
sbb
in
and
mov
lods
and
cwtl
stos
es
xchg
cmpsb
daa
add
loopne
sub
loope
sub
fisubrs
dec
add
dec
dec
mov
dec
xor
sub
xor
sahf
repz
cmp
test
ds
cmp
inc
faddp
dec
dec
test
std
adc
mov
adc
push
adc
out
inc
jmp
lods
cmovno
lods
cmovno
adc
inc
jmp
mov
cmovno
test
mov
insl
adc
in
sbb
push
pop
inc
in
pop
inc
in
pop
inc
in
pop
shl
pop
shl
push
shl
adc
shl
and
in
and
in
adc
shl
sbb
in
sbb
in
sbb
in
and
in
and
in
and
in
and
in
and
dec
and
inc
jecxz
and
pop
and
pop
and
xlat
and
xlat
and
xor
inc
jecxz
pop
inc
int3
out
pop
mov
scas
jnp
out
lods
mov
add
inc
arpl
iret
lret
jns
add
in
out
les
lret
repz
fwait
out
in
cltd
push
scas
inc
xor
mov
out
adc
ljmp
in
jno
add
nop
add
nop
or
jle
add
xchg
add
ljmp
clc
lret
out
fnstsw
xchg
mov
add
mov
and
add
add
pusha
cmpsl
pusha
call
xchg
jmp
out
or
add
in
xchg
ljmp
add
add
inc
inc
lds
mov
inc
lds
mov
pushf
lds
add
mov
insb
sub
inc
ss
cmp
jo
cmpsl
insb
add
xchg
test
mov
call
jmp
rolb
add
call
mov
insb
and
dec
jmp
jmp
add
cmp
pop
cwtl
iret
add
bound
mov
add
mov
pop
pop
inc
or
cmp
orb
test
mov
push
adc
adc
jmp
jbe
push
or
sbb
test
pop
test
roll
add
and
add
add
mov
iret
add
cmc
add
hlt
add
mov
cmc
add
je
je
add
lea
mov
add
test
jge
cwtl
hlt
add
mov
or
jns
frstor
mov
mov
cmc
add
in
ret
adc
inc
clc
xor
in
add
add
mov
add
icebp
jecxz
jns
loopne
add
add
clc
lods
cmpsb
mov
add
int3
xchg
hlt
lock
push
arpl
imul
add
lods
mov
into
pop
repz
les
fisttps
into
xchg
or
sbb
mov
add
jo
sbb
out
add
push
inc
loopne
int3
out
add
lret
lahf
add
out
je
ret
add
int3
jo
fsubl
lds
out
pop
scas
test
out
cmpsb
out
or
cmp
add
jo
sbb
int3
add
mov
xor
jmp
push
aam
test
fdivs
xchg
ret
stos
movsb
or
jmp
mov
xchg
add
add
add
int3
sbbl
int
lods
sti
repnz
stos
mov
jmp
push
call
aaa
mov
int3
xor
out
cmp
add
jmp
ljmp
pusha
add
jmp
ss
or
mov
push
cmp
push
jmp
lret
add
fidivs
or
incl
add
rolb
add
xchg
call
pop
popa
add
pop
jno
movsl
pop
jb
out
es
and
rolb
add
dec
and
xor
loopne
pop
test
lret
add
mov
lret
add
inc
into
mov
add
mov
mov
sub
lds
fwait
pop
add
das
cli
fs
mov
mov
filds
dec
adc
add
test
and
jae
sti
mov
xchg
out
add
mov
fstpl
xor
daa
add
add
add
insb
and
cmp
cmp
push
push
mov
add
add
orl
cld
mov
aas
mov
mov
mov
xchg
nop
jmp
sbb
call
mov
add
out
lcall
pop
clc
mov
out
add
add
jecxz
adc
rclb
mov
in
jb
fdivrl
dec
and
push
sbb
out
daa
fisubs
add
xchg
mov
add
cld
daa
lods
clc
dec
pop
add
ret
ja
pop
or
shrb
jo
scas
adc
ret
push
das
fdivs
mov
repz
push
in
and
loopne
xchg
push
aam
call
loopne
jg
filds
add
scas
push
xchg
or
mov
cmc
add
icebp
jae
js
and
add
add
add
add
add
in
jo
push
leave
aas
bound
sbb
mov
push
mov
add
add
enter
mov
cld
jae
fs
cmp
dec
test
hlt
and
sub
mov
iret
xchg
add
add
scas
add
lds
add
hlt
pusha
mov
add
mov
movsb
push
addl
push
repz
std
cmp
xchg
aaa
cli
mov
insb
inc
jnp
xchg
add
dec
decl
xchg
imull
add
cmc
jge
faddl
mov
test
in
push
fdivl
add
jnp
add
add
pop
inc
and
bnd
add
lds
add
pushf
ret
add
divl
add
cmc
inc
cmp
hlt
add
subl
jmp
cmc
add
pop
jno
add
cmc
jge
fsubl
add
test
repz
sub
out
add
xor
sbb
push
out
lret
out
add
cmpsl
fs
in
xchg
mov
cmpsl
lahf
add
int3
jb
mov
mov
jl
cmpsl
inc
xchg
push
stc
pushf
sub
call
jns
lret
daa
add
loop
push
ficompl
sti
pusha
push
or
push
mov
in
inc
lret
mov
fcoml
push
inc
movsl
push
ss
push
jnp
sub
out
jns
or
bound
incl
repnz
push
loope
in
jecxz
pushf
pop
movsb
cmc
lcall
inc
bound
cmpsl
sbb
dec
pop
jae
xchg
test
jmp
popf
ja
sub
ja
lea
sub
add
cli
mov
iret
fwait
test
adc
xor
jge
and
add
rolb
add
cmpsl
cmp
add
loope
mov
push
and
leave
push
sbb
push
pop
lock
call
pop
ljmp
or
lods
shlb
lret
stos
sbb
add
nop
std
lcall
dec
and
pop
xchg
and
int3
add
jp
push
push
mov
mov
adc
xchg
and
fld
add
fs
mov
aam
jmp
daa
add
fldenv
and
inc
inc
sub
cmpsb
das
xchg
loopne
and
fxch
add
inc
and
push
rorb
push
and
cltd
lret
add
es
pushl
filds
add
xchg
sub
add
je
jp
add
add
fildll
inc
incb
jmp
push
fidivs
add
lea
mov
js
add
icebp
cld
cmp
xchg
je
jmp
je
adc
push
jnp
jp
fsub
fiadds
add
or
add
and
push
and
lret
out
add
adc
test
jp
mov
ljmp
mov
subb
xchg
lret
out
add
cmpsl
pushf
incb
push
cld
jmp
cmpsl
mov
addb
add
push
mov
std
jl
out
add
sti
pop
call
jnp
icebp
ss
push
sub
add
push
sti
sbb
adc
and
or
and
cld
add
test
cld
lret
add
cmpsl
push
push
jl
cld
pop
add
loope
push
mov
std
loopne
mov
sub
cld
jmp
pop
xchg
adcl
or
push
fisttps
mov
aam
bound
int3
subl
addb
jb
cmpsl
sub
int3
aaa
push
filds
jmp
das
iret
dec
cmpsl
dec
dec
and
add
int3
add
in
xor
add
inc
popa
mov
in
subl
xchg
mov
enter
inc
sti
je
repz
je
arpl
jmp
arpl
inc
shlb
mov
add
scas
pop
sub
in
add
enter
test
lcall
std
cwtl
and
movb
add
test
cmp
mov
out
bound
jmp
adc
clc
pop
sub
jge
jmp
jle
fmull
and
in
add
in
xchg
pop
js
inc
in
add
jns
scas
add
add
fisubl
dec
jg
icebp
add
add
dec
xor
pushl
add
pop
mov
xlat
mov
push
std
in
hlt
adc
inc
imul
mov
sub
inc
in
sbb
addl
stos
repz
inc
add
sbb
pop
ds
xlat
cmp
push
lahf
add
int3
cs
mov
sbb
add
cmpsl
add
mov
or
fcmovnu
inc
add
data16
sbb
adc
lret
roll
shlb
testb
ss
lret
lods
push
orl
lret
sbb
cmpsl
add
lret
insb
les
out
std
mov
insb
std
movsb
gs
pop
add
adc
jmp
inc
dec
rcrb
mov
add
add
add
iret
insb
les
outsb
shrb
sbb
add
cld
jmp
add
inc
xor
push
test
popa
fdivs
sti
adc
mov
pop
add
sbb
lock
sbb
int3
xor
add
lahf
mov
adc
inc
jecxz
sbb
pop
xor
or
push
mov
or
push
mov
cmc
push
fimull
in
xlat
bound
fisubrs
xor
cltd
int3
xchg
xchg
pop
sti
add
fscale
lcall
int3
add
push
mov
add
imul
add
faddl
or
adc
add
pushf
adc
je
xchg
fsubrs
sub
add
jp
sti
adc
lcall
fcoms
movsl
add
mov
in
add
or
and
dec
mov
mov
push
pop
pop
jmp
sbb
push
in
cmc
xchg
cmp
add
and
cmc
pop
add
add
repnz
jae
or
adc
incb
mov
fstpl
mov
pop
add
sub
in
pop
stos
sub
jns
add
add
add
mov
dec
std
cmc
lret
inc
push
ror
mov
fdivrs
rolb
xor
inc
cmp
dec
ret
jae
or
add
pop
mov
int
jnp
int3
sti
add
inc
lods
inc
ret
mov
add
int3
xchg
add
cmpsl
sbb
fsubrl
ror
mov
ljmp
jnp
lret
es
jecxz
or
imul
iret
fld
into
or
cmp
call
add
inc
inc
jl
jb
jg
das
dec
inc
jl
adc
je
or
pop
adc
pop
sub
dec
xchg
inc
inc
jmp
add
or
in
adc
push
xchg
xchg
dec
jle
push
mov
add
add
or
call
out
test
xlat
sbb
add
xlat
loop
xchg
mov
jle
sbb
lea
sti
pop
pop
addl
dec
mov
sbb
jno
xor
sbb
leave
add
xor
ret
inc
cmp
add
add
das
je
int
dec
push
mov
pusha
sbb
jmp
daa
fcomps
sar
push
sahf
movsb
and
and
call
push
sub
push
cmpsl
adc
inc
cltd
xor
cwtl
enter
enter
aad
lcall
pop
sbb
cld
push
rcrb
call
mulb
xlat
xchg
adc
add
jecxz
movb
add
add
mov
mov
into
ds
add
xorl
movsb
movsl
add
ret
nop
in
adcl
push
dec
pop
pop
or
in
dec
andl
dec
push
sub
add
add
jnp
mov
pop
inc
add
test
xchg
add
jns
push
add
add
fadds
je
push
mov
sbb
lock
jmp
int3
pushf
pop
repnz
push
jo
mov
inc
push
jecxz
roll
xchg
xchg
mov
ret
lcall
je
and
jae
int3
out
inc
fisubrs
push
int3
cmp
nop
int3
rorb
xlat
shl
mov
mov
add
push
inc
movsl
stos
inc
or
add
sbb
add
sub
pop
decl
cld
dec
jl
add
jb
and
ljmp
shlb
xchg
add
int3
jb
mov
add
repnz
nop
jmp
sti
rolb
push
push
lcall
pop
ffreep
lret
andl
aas
mov
and
mov
jg
add
add
inc
mov
pop
pop
insb
push
js
shrl
pop
jnp
stc
mov
je
pusha
pop
pop
outsb
ljmp
gs
arpl
je
es
int
jmp
inc
inc
add
jae
mov
or
mov
push
decl
add
pop
fs
add
int
push
cmp
cmp
call
sub
sub
jle
pop
stos
push
add
lods
inc
and
push
insl
sbb
inc
pop
add
inc
testb
adc
lcall
out
not
push
and
and
outsl
sub
std
add
push
jo
nop
add
add
inc
mov
incb
jp
or
pop
adc
jns
stc
jae
cld
cmp
add
push
or
ror
dec
in
add
cmp
dec
jne
inc
or
pop
push
mov
add
in
mov
mov
pop
ret
push
mov
adc
in
testb
xor
mov
test
dec
call
loope
push
jnp
mov
adc
cs
pop
inc
cmpsl
add
movsb
add
inc
pop
je
int3
out
outsl
sarl
lods
ja
sub
mov
lret
mov
mov
fwait
out
jbe
cli
sbb
out
mov
in
lcall
fs
js
cmp
lret
mov
dec
mov
out
rclb
adc
inc
add
sbb
or
sahf
pop
in
ds
into
lret
sub
jecxz
xchg
push
ret
out
and
scas
andl
imul
adc
andl
dec
sub
push
inc
jns
push
in
lret
data16
into
cld
push
mov
push
mov
fiaddl
jmp
or
lret
loope
jbe
clc
sub
push
mov
inc
int3
std
cld
pop
mov
jmp
mov
fucom
fldl
int3
add
cmpxchg8b
call
ret
add
inc
in
orl
mov
mov
sbbl
je
xor
mov
mov
cmpl
pop
sub
add
or
and
and
mov
xor
push
mov
mov
cltd
push
push
or
push
je
inc
flds
js
inc
inc
cld
or
fimull
xchg
push
bound
push
jmp
inc
iret
mov
adc
scas
or
xchg
fwait
adc
inc
add
xchg
or
mov
in
cmpl
pop
fisubrs
push
iret
jne
or
mov
lcall
mov
cmc
aas
add
xorl
test
push
das
or
push
call
mov
push
pop
add
add
repnz
cmc
hlt
add
rorb
xor
sahf
cmp
mov
int3
in
adc
sub
popf
mov
int3
icebp
xor
mov
fldl
lret
xchg
int3
out
stc
lcall
push
adc
mov
lcall
iret
xchg
mov
sbb
cmp
sub
sub
add
iret
mov
mov
sub
or
and
inc
sbb
insl
inc
jmp
sub
add
push
lods
stos
xor
add
add
xor
test
cmpsb
add
out
aad
mov
and
sbb
lret
rol
addr16
cltd
jmp
fs
ds
mov
add
xchg
int
sub
xchg
shlb
or
jmp
xchg
enter
or
insb
mov
dec
lret
xor
push
push
xchg
add
xlat
inc
sub
push
inc
cmc
xor
das
inc
xchg
mov
call
add
xchg
adc
jg
or
xor
add
mov
xor
mov
xchg
jne
adc
jl
mov
int
cli
popa
fcos
jg
pop
jo
loop
jmp
jmp
pop
shr
sub
add
add
enter
push
or
inc
mov
or
leave
xor
repnz
icebp
sar
push
add
lahf
movsb
pop
pop
inc
xchg
or
sub
in
addl
cwtl
and
fwait
mov
add
cltd
std
add
cltd
or
into
popa
roll
std
add
aas
cmp
loopne
add
jl
add
cwtl
xchg
or
or
fcoml
fidivrs
cmp
sbb
cmp
jp
add
fadds
or
add
ds
xchg
dec
decl
imul
insb
int3
jmp
xchg
add
int3
outsb
fcomps
cmp
mov
push
add
int3
call
add
shlb
sbb
add
int
jg
inc
ret
push
sub
xchg
or
ljmp
mov
pop
mov
jmp
sub
pop
mov
adc
int3
insl
les
lds
xchg
aam
call
lret
out
xlat
lret
add
jmp
bound
int3
jg
outsb
mov
rorl
add
mov
add
mov
pop
add
xchg
add
pop
mov
cmp
xor
push
loop
add
mov
and
jmp
push
mov
sub
add
push
xchg
lock
pop
or
scas
cld
jmp
add
sbb
pop
int
bound
xchg
clc
inc
mov
jno
jae
leave
mov
pusha
frstor
pop
pop
jne
push
add
fiadds
add
leave
push
pushl
adc
or
cmp
jo
cld
ljmp
call
pusha
js
imul
loopne
leave
xchg
dec
addl
add
add
pop
mov
jmp
mov
dec
fidivl
jne
sub
lods
add
sub
stos
movsl
cmp
jnp
lods
mov
mov
mov
mov
lret
out
push
out
add
xor
add
jl
comiss
add
mov
add
mov
add
loopne
test
or
add
adc
add
cltd
mov
add
fcmovnbe
jb
mov
add
loope
push
sbb
mov
push
aaa
shlb
pop
sbb
or
push
arpl
int
lret
aaa
gs
les
fsub
incb
rorb
repz
inc
call
fisttps
cmp
add
sbb
sti
pop
push
adc
add
add
sarl
into
jmp
xchg
repz
add
std
or
or
jle
dec
scas
sbb
xor
xor
jo
or
add
into
jmp
fwait
xor
out
test
inc
jle
mov
scas
mov
call
das
push
jae
mov
insb
sbb
add
add
ret
cltd
leave
add
or
cld
out
daa
pop
cmp
or
jmp
push
dec
sbb
lret
sar
add
orb
int
xchg
or
add
shlb
xchg
in
add
cmc
cs
push
push
push
and
addb
jnp
cld
lret
das
push
imul
mov
inc
stos
adc
insl
mov
adc
and
xchg
sub
lea
decl
push
inc
jmp
std
push
mov
gs
fxch
xchg
notl
or
pusha
movsl
pop
fxch
xchg
std
je
ret
std
je
mov
dec
in
mov
push
std
call
sbbl
clc
data16
jg
imul
add
add
int
test
test
jge
jge
add
cwtl
jo
shlb
jae
xchg
add
sbb
pop
push
pop
push
xchg
xor
ss
add
lahf
or
inc
mov
clc
test
xor
inc
mov
adc
or
icebp
or
pop
jge
add
push
ljmp
adc
bound
sbb
xor
cmp
inc
je
mov
hlt
cwtl
sub
mov
lret
lahf
mov
or
dec
add
loope
pop
hlt
sub
pop
cld
jnp
pushf
adc
fwait
inc
push
jmp
aas
jp
jmp
cs
sbb
subl
add
add
int3
jmp
stc
or
ret
int
jl
call
in
cmpsl
xor
add
xor
inc
add
stc
out
fisubrl
add
cs
add
orl
add
mov
into
cld
lret
add
call
and
inc
ljmp
inc
xchg
test
fsub
and
stc
sbb
add
pop
out
jmp
add
xchg
add
in
inc
cld
mov
inc
int3
jg
jecxz
insb
jb
push
push
or
mov
add
ss
push
leave
ret
ret
add
push
or
push
xchg
push
in
add
lds
or
lcall
rol
mov
add
in
test
jecxz
lea
xor
cmpsb
sbb
sbb
add
and
out
dec
mov
in
cld
dec
decb
xor
and
mov
es
inc
rorl
lahf
std
dec
cmp
jg
cwtl
leave
mov
adc
jne
and
and
and
jne
adc
add
loopne
jmp
fwait
sbb
rcrb
rolb
mov
les
dec
and
cltd
lret
sbb
add
pushf
pop
sub
mov
mov
lcall
shll
jae
add
or
addb
out
adc
mov
sbb
push
push
pop
es
sub
add
xor
jne
call
and
int3
xchg
in
mov
es
adc
inc
sbb
insl
ret
rcr
mov
ret
out
mov
sub
pusha
stos
sub
iret
leave
js
pushf
xchg
cmc
mov
jle
out
fwait
add
jmp
testb
add
add
in
and
jae
mov
into
or
lock
push
adc
or
ret
adc
sub
push
call
mov
sbb
lcall
push
shr
mov
sub
pop
bound
xchg
pop
and
call
xor
add
add
xchg
fistpl
pop
xchg
xchg
push
jb
dec
in
jg
jge
xor
xor
imul
mov
and
cld
jb
dec
repz
inc
add
dec
add
std
repz
in
mov
xlat
rcll
and
cmp
mov
stos
adc
sbb
mov
pop
add
add
push
test
xchg
xor
mov
repnz
mov
test
adcw
add
mov
jmp
inc
iret
cmp
int
jg
fxch
add
adc
add
lods
addb
mov
int3
mov
or
xor
add
add
inc
and
rcrl
lds
cmp
cmp
xor
in
imul
add
les
call
cmp
adc
shlb
inc
in
roll
add
mov
mov
jne
mov
pushf
dec
inc
movsb
add
push
xchg
mov
in
insb
xchg
cmp
dec
es
cmp
int3
cbtw
or
loopne
dec
ror
clts
cmc
scas
movsl
idivb
aad
xor
or
lock
inc
lock
inc
dec
test
jp
out
leave
jp
out
in
aaa
enter
mov
add
lret
mov
jl
mov
pusha
stos
jns
push
mov
int3
out
add
jp
ret
sub
shr
xor
es
jl
jbe
adc
cmp
sub
idivl
add
pop
pop
mov
add
sbb
fisttps
ds
jbe
in
dec
out
push
lea
testl
mov
out
add
in
dec
out
add
enter
int
out
cltd
inc
inc
inc
push
fsubs
add
dec
adc
inc
std
rclb
sbb
mov
adc
xchg
fdivs
shll
push
bound
sub
aas
push
adc
adc
adc
mov
ror
or
sub
mov
add
mov
fdivs
cld
cmp
test
iret
mov
xchg
addr16
outsb
add
and
mov
in
shll
aam
data16
cltd
ret
push
xor
clc
push
xor
lcall
dec
xchg
pop
test
xor
inc
mov
add
mov
loop
push
jnp
sar
or
or
sub
add
add
std
test
cld
xchg
inc
add
mov
push
jmp
or
cld
push
mov
clc
ljmp
or
add
orl
andb
mov
xor
fwait
addb
adc
xchg
inc
add
mov
out
lcall
adc
dec
int
add
sub
sti
push
push
out
out
test
mov
dec
inc
fnstcw
les
cmp
add
xor
test
fcmovnu
inc
add
add
rorl
jne
xchg
out
pop
fsubrl
add
mov
jns
sbb
cmp
movsb
mov
retw
mov
pop
les
xor
add
clc
push
lret
or
ret
add
inc
aas
or
test
in
or
adc
inc
inc
in
iret
mov
sahf
adc
push
in
repz
add
cmp
lret
sti
push
sbb
fld
mov
mov
aad
sub
in
popf
cmp
cmp
jb
les
pop
clc
cmc
das
test
mov
jmp
add
jae
icebp
push
rolb
pop
pop
or
cltd
std
adc
and
in
add
dec
or
aas
jmp
inc
add
je
mov
add
and
mov
pop
mov
jns
into
je
or
inc
aad
std
jne
mov
std
adc
or
cmp
push
int3
dec
jne
mov
xchg
ret
rclb
add
test
or
push
into
dec
mov
xchg
dec
in
mov
shrl
dec
hlt
add
stc
or
xchg
or
cmp
in
adc
or
cld
ljmp
fisubl
je
jae
jle
mov
loope
add
jne,pn
dec
mov
push
mov
xor
jmp
aaa
add
mov
sub
add
or
add
or
addl
int
notl
pop
xor
sbb
adc
add
xor
jo
jecxz
cmpsl
fnstcw
loop
xor
repz
sub
sbb
dec
into
daa
add
lret
callw
jmp
sar
push
sub
fdivrl
fimull
push
shlb
mov
or
jmp
push
mov
aaa
or
inc
call
sbb
int3
shrl
xchg
inc
fcmove
popa
leave
and
aaa
ds
mov
add
in
adc
add
or
mov
idivl
cld
cmpsl
and
movl
addr16
lret
add
sub
in
scas
sti
mov
sbb
fcmovnb
scas
mov
leave
add
mov
cld
out
aad
jmp
dec
scas
pop
stos
mov
jne
lock
repnz
js
or
add
mov
out
add
jmp
rolb
add
addl
inc
sub
sub
mov
outsl
or
in
call
xlat
andl
sbb
inc
cmp
mov
inc
in
mov
jmp
mov
out
or
call
je
imul
pop
imul
add
add
jecxz
push
and
repz
test
or
sub
mov
lret
sbb
pushl
jg
inc
and
mov
int3
mov
rolb
or
stos
mov
aaa
andl
add
add
movsl
ficomps
test
push
push
fdivp
and
cmp
je
adc
add
add
notb
jbe
sbb
adc
push
mov
sub
jge
sbb
adc
aas
sub
ret
push
aaa
outsb
stc
and
sub
hlt
sbb
in
lret
int
pop
popf
or
add
xchg
jne
in
add
lret
mov
push
xor
int3
jmp
mov
lods
insl
jbe
xchg
mov
loope
cmp
lods
xchg
mov
mov
mov
inc
hlt
lret
mov
cmp
fst
mov
jmp
addb
jmp
insb
push
scas
fstpt
pop
pop
addl
out
add
add
push
inc
into
xchg
dec
mov
and
jmp
add
int3
add
lods
mov
jne
pop
inc
into
or
scas
mov
add
add
mov
xchg
enter
ja
sub
bound
add
add
test
mov
add
mov
sbb
fiaddl
jmp
sub
dec
out
out
adc
call
add
loope
incl
add
mov
testb
pop
jne
dec
mov
push
call
in
pcmpeqw
imul
pop
iret
cmp
out
dec
fisubs
xchg
outsl
pop
into
call
pop
and
iret
push
jne
or
ss
call
cmp
fmul
push
cmp
jmp
lret
sbb
add
sti
call
and
jne
lods
ss
outsl
add
add
push
xor
jmp
add
inc
add
outsl
adc
dec
dec
icebp
or
or
cs
jl
int3
nop
xor
ja
add
daa
jg
mov
add
daa
cmp
hlt
add
mov
push
ds
push
push
fs
dec
push
xor
imul
push
dec
sub
mov
sub
std
into
ss
jnp
flds
xchg
and
imul
add
test
inc
add
loop
outsl
mov
mov
push
int3
jmp
xlat
inc
ljmp
mov
add
add
imul
mov
add
mov
insl
pop
xchg
divb
test
stos
add
sbb
daa
int3
mov
mov
mov
int3
test
inc
dec
mov
add
adc
adc
mov
xchg
rclb
bound
mov
in
push
add
push
pop
push
xor
add
add
das
ret
push
ss
and
fdivrs
lods
jmp
add
int3
jg
test
add
mov
int3
dec
fs
in
and
fwait
add
call
sbb
sti
aam
rolb
adc
fs
and
fiaddl
push
pop
mov
rcll
test
xchg
push
push
add
mov
dec
mov
push
scas
mov
addl
shll
mov
idivl
xchg
into
xchg
add
inc
and
jnp
push
jle
and
sbb
addl
shll
mov
imul
sub
sbb
incl
push
shll
lods
adc
adc
test
rcrl
push
pop
mov
cld
in
jl
inc
add
inc
or
scas
sub
add
add
aas
popf
jae
aam
sar
jl
jmp
xor
ja
xchg
pusha
test
jmp
push
and
mov
cmp
ljmp
fs
scas
nop
sar
adc
cmp
mulb
add
mov
xchg
call
or
xor
inc
xchg
and
cld
ret
fbstp
ljmp
add
call
pop
sbb
pop
std
sub
sub
or
addl
jl
stos
add
imul
loope
and
jmp
add
jnp
out
add
jmp
lea
movsl
gs
inc
sbb
add
movsl
gs
dec
ljmp
int3
outsb
test
lret
add
popf
stos
mov
jmp
push
int3
add
or
sbb
xchg
add
and
cltd
jle
push
cmp
cmp
add
or
add
je
loope
inc
inc
or
pop
dec
insl
sub
lock
pusha
int3
sub
jmp
mov
xor
jbe
fists
insb
lods
pop
inc
mov
mov
mov
movsl
cld
add
and
je
fadd
inc
mov
dec
sti
adc
push
xchg
add
imulb
add
test
mov
fiaddl
cs
sti
ljmp
xchg
mov
xchg
es
pop
call
iret
rcll
dec
push
rcrb
push
xor
add
jbe
sbb
pop
call
inc
sub
or
and
pusha
dec
cld
jae
push
jae
mov
cmpb
outsl
je
adc
add
jg
adc
inc
mov
jle
mov
add
pop
adc
mov
out
cmp
cld
push
movsl
outsl
adc
sar
mov
je
mov
repnz
add
in
mov
sub
std
in
mov
mov
add
push
adc
mov
xchg
mov
add
hlt
add
imul
mov
sub
pop
lds
inc
test
incl
jp
loopne
daa
mov
rclb
mov
mov
and
mov
aad
inc
int3
hlt
add
psubw
jnp
mov
test
push
je
mov
ljmp
add
inc
xor
outsb
repz
stc
push
jno
dec
ljmp
dec
inc
sub
int3
ljmp
xchg
or
pop
insb
sbb
iret
movsl
dec
cli
or
mov
imul
push
jne
pushf
xchg
jmp
test
cmovb
fwait
mov
lret
add
push
jmp
cmp
mov
ja
lret
add
mov
xchg
mov
jmp
and
mov
add
inc
pop
call
cwtl
test
pop
add
int
daa
or
add
mov
add
movl
mov
movl
cmpl
std
adc
pop
sbb
rclb
lea
mov
cs
push
ret
leave
push
pushl
add
add
inc
shll
cld
lahf
xchg
inc
push
push
push
nop
inc
push
inc
aaa
rolb
xor
cwtl
lret
xchg
orl
scas
add
cwtl
lret
jg
aam
mov
xor
xor
jmp
pop
jne
ljmp
jmp
lods
xor
mov
pop
out
inc
insb
pop
cmp
add
in
roll
xchg
mov
aas
add
mov
and
mov
lds
jns
add
addl
add
mov
jne
pushf
xchg
jne
outsl
pop
dec
jns
pop
call
sub
add
push
adc
add
add
add
inc
loopne
mov
inc
out
lret
cltd
pop
dec
sahf
mov
add
add
cmp
das
sahf
ljmp
sahf
ljmp
sahf
pop
mov
in
je
fnstsw
cmc
outsb
cmp
add
xchg
inc
add
inc
mov
lret
js
addr16
add
jmp
add
mov
test
and
or
xor
dec
ljmp
add
mov
jge
jmp
popa
add
add
sub
xor
lea
fwait
add
add
test
add
sti
cld
out
inc
jmp
inc
push
inc
add
xchg
add
add
or
add
call
insb
js
sub
int3
push
mov
add
enter
lods
cld
jg
jne
push
or
imul
xchg
jmp
fs
pop
data16
xchg
pop
push
aam
and
std
adc
fiaddl
add
enter
pusha
xchg
push
inc
push
cli
fcmove
lea
enter
mov
movsb
and
add
add
add
mov
adc
test
mov
and
add
je
fists
push
push
or
adc
addb
push
jae
shll
and
add
add
andl
imul
and
sub
sbb
shl
add
les
add
enter
arpl
lds
jne
fs
inc
leave
sub
push
fs
inc
leave
sub
xor
inc
mov
dec
xor
push
mov
add
jns
in
add
add
jle
aaa
dec
lret
mov
inc
into
xchg
push
sbb
pop
dec
add
and
add
add
push
jmp
push
adcl
mov
adc
sub
fwait
gs
push
cld
add
int3
data16
mov
inc
cmovo
data16
mov
loope
rcrb
jle
lock
xlat
int
add
add
adc
test
adc
add
fwait
shlb
add
mov
mull
cwtl
jg
cmp
pop
or
add
add
add
xor
add
in
adc
xchg
or
aaa
lcall
add
push
jle
lock
cld
push
inc
lds
inc
inc
or
adc
pop
push
pop
enter
inc
inc
or
add
push
lahf
mov
push
inc
add
or
push
lcall
xor
and
add
add
test
pop
pop
and
jg
incl
inc
and
sbb
pmulhw
add
inc
and
adcb
and
sbb
xchg
orb
jnp
je
call
push
call
rclb
add
imull
jmp
xchg
xor
inc
mov
push
pushl
stc
call
pop
rcll
sti
incl
movsl
sar
adc
mov
stc
mov
sub
and
jne
mov
rcrb
add
shll
fs
adc
and
mov
dec
mov
or
js
and
je
incl
aas
cmp
cld
in
sub
inc
add
hlt
adc
add
aad
fiadds
push
adc
repz
xor
pop
mov
lret
movsb
rorl
out
cmpsl
fsubrs
movsl
cld
jae
or
jl
dec
int3
int
mov
dec
mov
jnp
xchg
add
cmovns
adc
cltd
repz
std
ret
jg
jmp
add
mov
push
cld
fs
ror
inc
add
mov
add
pop
repz
xor
mov
lock
inc
cld
lret
andb
mov
xchg
and
mov
jae
aad
call
push
sub
psrlw
andl
lock
xchg
add
add
adc
mov
add
add
xchg
jbe
mov
jbe
es
pop
xchg
inc
mov
repz
pop
and
ja
xchg
and
call
mov
sub
addb
jne
fcompl
adc
sub
lods
push
xchg
movsl
xchg
call
xchg
lds
daa
int
fsubr
mov
mov
dec
leavew
push
mov
push
jmp
add
dec
fs
test
les
or
mov
adc
or
std
jne
xchg
jne
das
adc
jp
cld
pop
xor
adc
sub
in
negb
inc
imul
add
shll
adcb
cld
je
das
jo
mov
aam
in
xchg
das
jmp
das
jo
xchg
movsl
or
data16
adc
pop
ret
push
mov
insl
add
mov
jae
pop
pop
call
jl
jmp
jmp
andb
jmp
lahf
adc
mov
int3
jp
xchg
cld
cld
in
cwtl
mov
jae
cmp
pop
add
sub
icebp
inc
add
aam
sbb
je
lea
subb
ficoml
jnp
clc
mov
icebp
imul
arpl
mov
aad
xor
sbb
lret
ffree
lock
int3
mov
jmp
or
pop
dec
inc
xchg
unpcklps
adc
int3
jmp
add
rclb
push
rorl
jg
cli
incl
or
sahf
iret
bound
fisubl
mov
fdivr
stc
mov
call
ljmp
inc
xchg
and
pop
into
sbb
sbb
test
jl
inc
jmp
out
inc
push
stc
mov
cld
ds
mov
add
add
nop
jbe
jns
jbe
and
pop
mov
mov
repz
stos
and
xchg
and
incl
jmp
or
xchg
jne
loopne
sbb
mov
fs
mov
fisubl
mov
sti
sbb
mov
stc
push
roll
add
push
ret
pop
mov
xchg
push
add
and
jns
je
pop
push
mov
int3
test
mov
cmp
xchg
pushf
std
jne
aas
push
adc
orl
call
xchg
std
jne
sub
push
sub
js
pushl
push
ret
cmp
aam
mov
ret
sub
enter
cwtl
push
inc
pop
pop
cmp
add
mov
ret
inc
cmp
or
adc
mov
in
and
mov
add
jnp
or
dec
xchg
movsl
test
push
enter
les
std
mov
add
cwtl
out
daa
dec
sub
xlat
xor
push
add
ret
xlat
xor
push
jg
pop
adc
movsb
mov
add
inc
test
sub
ja
push
mov
fiaddl
int3
insb
jge
movsb
add
xchg
push
and
mov
mov
mov
clc
cltd
jecxz
xchg
mov
loopne
add
inc
xchg
inc
je
push
clc
push
stc
mov
sub
add
outsb
jo
lahf
cli
push
add
mov
mov
adc
cwtl
fldenv
add
fsubr
dec
cld
xlat
in
mov
into
pop
movsb
in
pop
jne
insl
inc
hlt
mov
and
xor
jno
aaa
inc
and
call
das
into
add
mov
push
fcomi
in
and
pop
testb
arpl
jg
jne
jns
jne
or
faddl
and
dec
loope
pusha
sti
inc
cs
shll
add
cwtl
sub
inc
inc
nop
or
mov
cwtl
test
sub
lret
dec
pushf
mov
out
xchg
nop
push
lock
dec
stc
out
or
mov
xchg
movsb
sub
rcll
cmp
js
test
dec
testl
imul
std
add
das
mov
enter
xor
not
sbb
cmp
shlb
push
push
rcll
sbb
xor
push
rorl
lods
xor
xor
stos
jbe
xor
and
xchg
push
xchg
and
mov
xor
lods
xor
xchg
testl
divb
add
push
in
push
notl
mov
inc
cmp
mov
cmp
rclb
or
fadds
mov
ds
je
out
inc
sub
notb
jb
ret
push
or
stc
rclb
jne
xor
cmc
xor
mov
jmp
cmp
addr16
sub
cmpsb
inc
pop
aaa
ds
sbbl
add
add
xor
lret
aas
push
xor
xlat
jns
xor
and
push
cs
mov
add
and
xor
lahf
insb
fisttpll
out
orb
add
into
push
orb
scas
jmp
test
xchg
ljmp
int3
jmp
add
int3
push
imul
or
add
add
xorb
cmp
rcrl
cs
adc
xchg
push
sub
add
mov
mov
inc
scas
push
bound
push
leave
shr
sbb
jmp
xchg
stos
push
push
add
xchg
test
cld
pusha
push
inc
jmp
or
les
jg
xchg
push
ret
sbb
mov
add
add
jmp
dec
mov
push
in
push
pop
cltd
daa
call
dec
mov
jmp
push
movsl
mov
pop
and
cmc
test
and
add
lods
std
jle
push
mov
inc
pop
andl
mov
ljmp
cli
ret
int3
push
mov
cld
test
jp
add
cmp
adc
movsb
pcmpeqw
push
inc
cld
jmp
push
inc
add
and
sbb
jg
inc
xor
inc
xchg
inc
std
jne
push
pop
clc
js
adc
jg
jne
std
jne
and
cwtl
in
push
add
jmp
lock
add
sti
mov
xchg
ja
push
std
adc
add
inc
std
test
add
add
jle
sti
mov
rcl
mov
in
ror
mov
lds
imul
int3
call
clc
cmovo
shrb
adc
in
fnsave
cli
ret
lods
lret
sub
dec
daa
inc
cli
dec
xorl
scas
cld
xor
int3
mov
add
repz
ret
xchg
push
sub
add
insb
call
imul
xchg
mov
inc
fsubr
dec
les
fnstcw
push
fcompl
inc
sti
in
imul
adc
add
pop
sub
add
sbb
or
or
mov
imul
idiv
xchg
int3
dec
add
mov
or
add
iret
xchg
adc
int3
jmp
or
jo
push
jb
outsl
xchg
jmp
out
filds
xchg
cli
dec
jge
jnp
or
add
mov
add
push
stos
sub
decb
jmp
pop
xchg
add
add
sbb
and
stc
push
dec
int
dec
adc
leave
xchg
outsb
popl
jmp
jnp
add
jns
and
mov
add
jge
lret
stc
pop
fs
xor
push
lea
inc
push
and
push
lods
push
stc
lea
jg
jo
adc
inc
fisubl
ljmp
leave
xchg
std
mov
xchg
add
pop
push
lret
ret
test
pop
in
add
jbe
xor
pop
pop
les
les
roll
add
add
call
enter
movsl
xor
jb
pop
inc
mov
pop
add
xor
and
daa
add
inc
in
inc
push
mov
mov
ficoml
sub
jae
es
add
aad
push
in
dec
jo
add
pop
lods
xor
push
inc
scas
test
pushf
add
incl
jae
mov
cmp
xchg
jb
adc
mov
jmp
and
push
mov
dec
out
add
int
add
push
lock
push
cld
dec
imul
lods
add
push
mov
pop
loopne
cld
mov
loopne
lods
sti
push
in
push
stos
call
movsl
sbb
cmpsl
leave
jle
shll
pop
sub
lods
cmpsl
add
add
and
fdivrs
or
pop
ror
jmp
add
int3
jo
add
jmp
add
into
dec
add
jmp
add
sti
std
addb
add
add
shrl
add
add
movsl
daa
mov
fs
push
aam
add
loope
mov
ds
call
call
mov
jmp
mov
adc
scas
and
dec
daa
movsl
daa
in
xor
adc
push
sbb
call
gs
mull
pop
rolb
in
imul
inc
std
lret
or
cmc
add
and
xor
add
mov
call
or
mulb
and
es
test
fimuls
add
dec
dec
and
push
jo
out
mov
jmp
and
imul
test
pop
int
push
loop
addl
add
add
add
imul
add
loopne
and
call
mov
xor
mov
cmp
jnp
inc
xchg
mov
add
cld
push
imul
sub
es
mov
jae
inc
add
roll
add
out
lods
add
test
out
mov
std
add
jae
addl
xchg
xchg
inc
ficompl
add
pop
mov
inc
or
mov
jge
mov
sub
adc
add
sub
pop
add
test
mov
lock
les
or
mov
add
lcall
add
fcoml
test
mov
jg,pt
cmpsl
icebp
or
pop
push
sbb
ret
scas
jb
mov
enter
add
ret
das
add
mov
add
fs
stos
insb
xor
and
jmp
daa
cld
sbb
dec
repz
ret
inc
jb
mov
jle
add
or
pop
adc
notl
dec
add
dec
mov
lahf
sti
xchg
or
add
dec
lret
dec
iret
std
fimuls
jl
dec
clc
and
xchg
or
inc
jmp
dec
jne
repnz
adcb
daa
repz
xor
enter
mov
or
je
or
int
add
mov
lret
loopne
push
in
push
jg
lret
push
add
add
xor
je
dec
inc
clc
stc
xor
push
into
push
adc
cld
mov
test
adc
dec
jmp
les
mov
fmul
mov
pop
pop
jne
and
lock
inc
movsb
hlt
push
ror
push
dec
leave
cmovo
add
call
stos
pop
pop
mov
das
ret
ret
add
fcmovnu
call
loop
xor
fimuls
jmp
add
test
xchg
fstps
iret
mov
adc
sar
cmp
or
pop
test
pop
cmpsl
daa
mov
pop
lret
and
jae
into
call
lods
stos
mov
test
dec
adc
sar
push
jp
fcomps
std
out
jae
cmp
sar
test
adc
inc
push
inc
andl
jns
xlat
out
and
sub
push
xor
add
lock
mov
mov
lret
cld
aas
in
or
js
inc
rcl
nopl
jp
push
and
jl
or
or
js
inc
stos
cld
adcl
jge
pop
adc
ljmp
fs
add
jnp
inc
push
imull
fcompl
mov
ss
xchg
ljmp
jnp
mov
and
fildll
push
adc
xchg
fisttpl
pop
mov
jl
lods
divl
int3
pop
push
addl
lock
int3
add
inc
jnp
mov
lret
insl
mov
ficomps
jnp
test
add
int
call
pop
mov
or
scas
adc
add
sub
cld
xchg
jns
jle
mov
sub
sbb
dec
lea
inc
mov
mov
push
cld
jmp
jno
mov
bound
pop
dec
mov
add
in
add
push
push
jg
mov
sti
lcall
xchg
add
incl
jae
add
xchg
pop
add
in
sbb
jnp
aad
push
inc
aam
push
fbstp
push
repz
or
or
mov
mov
lret
in
or
add
int
cmp
rolb
call
mov
jmp
pop
bound
in
or
cwtl
int
push
ja
pushf
and
rolb
add
cmp
sbb
jmp
scas
mov
or
into
pushw
rcrb
mov
mov
mov
mov
add
stc
das
sub
pop
add
lock
cmp
add
mov
add
imul
test
arpl
and
push
and
arpl
sbbl
sbb
cwtl
adc
add
mov
add
arpl
add
cmp
test
push
scas
addb
add
add
int3
xchg
scas
mov
out
add
outsl
push
stc
sahf
pop
rorl
js
sub
in
xchg
scas
out
add
pop
add
mov
add
add
out
add
and
pop
mov
fcoms
jbe
mov
fldl
sbb
mov
lods
push
xchg
mov
jmp
push
inc
or
inc
in
out
add
lods
out
rcll
roll
int
ja
jmp
lret
sbb
sarl
cli
xor
sub
loopne
call
add
push
push
xor
inc
bnd
inc
inc
std
inc
jge
sbb
scas
int3
ret
cmpsl
push
xor
cld
xor
push
inc
lret
pusha
shrb
jmp
xchg
in
push
xchg
ja
icebp
mov
add
cmp
fs
add
add
insb
and
test
mov
and
jg
shr
add
add
popf
and
fwait
hlt
enter
xlat
lea
xchg
and
std
adc
mov
and
jbe
mov
fistl
push
lret
cltd
sti
push
sub
ret
repz
mov
push
mov
int
je
fcmovb
pushaw
ja
pop
xchg
jne
add
xlat
add
add
mov
leave
xchg
mov
fcmovbe
repnz
mov
push
scas
out
ret
add
sar
mov
mov
sbb
negl
mov
jp
push
pushl
repz
and
aas
xchg
ret
decl
add
xchg
xchg
ret
and
std
mov
inc
fmul
jns
and
add
pop
push
push
xchg
lock
or
add
out
mov
inc
sbb
jns
adc
out
icebp
je
inc
xor
pop
fsub
fistpl
jecxz
outsb
mov
hlt
mov
sub
les
ss
scas
pop
or
and
lods
push
fiaddl
pop
inc
mov
clc
mov
shrl
inc
xchg
sbb
pop
adc
and
es
inc
and
jp
sbb
scas
flds
add
sub
lret
lret
lret
leave
xor
and
shrb
xchg
sub
jmp
int
mov
xor
dec
add
cmp
inc
inc
add
sbb
and
stc
fs
mov
adc
stos
lea
push
scas
sbb
sub
icebp
add
add
add
lea
push
popf
inc
mov
sub
mov
sub
cmp
leave
jb
jmp
out
mov
fsubrs
and
maxps
sti
flds
and
inc
add
adc
add
test
leave
add
cmp
std
mov
adc
gs
add
cltd
into
add
mov
push
mov
inc
inc
and
jbe
adc
xchg
mov
xchg
adc
and
loope
sti
je
mov
int
mov
inc
cmp
xor
in
and
aad
adc
or
fimuls
xchg
and
add
and
cmp
mov
and
outsl
or
cmp
adc
add
cmp
mov
mov
sub
pop
in
mov
sbb
dec
and
rol
lret
and
sub
mov
in
jnp
in
testl
inc
jle
std
shlb
or
adc
int3
and
mov
loopne
je
add
adc
add
mov
stos
adc
fs
ror
jmp
sti
dec
lock
inc
push
call
cmp
testb
mov
or
scas
out
jno
inc
cmpsl
xor
pop
enter
rcrb
mov
mov
cmpsl
mov
out
mov
mov
sbb
out
int3
cmpsl
mov
les
sbb
dec
mov
call
test
and
cmp
testl
icebp
aam
and
adc
cmpsl
add
lds
inc
inc
or
addb
nop
inc
pop
add
pop
inc
dec
add
scas
aaa
add
add
add
inc
dec
pop
shlb
pop
lahf
aas
ljmp
and
stos
xor
stos
and
and
cli
filds
sbb
std
outsl
test
xchg
add
add
lret
repnz
mov
push
push
bound
pop
out
inc
mov
push
and
inc
std
ja
inc
movsl
leave
jecxz
add
push
inc
and
lret
std
iret
ret
mov
dec
mov
mov
add
loopne
and
sbb
es
mov
jmp
sub
int3
lret
or
or
rcl
into
cld
insb
lock
cld
mov
enter
in
xchg
cmp
faddl
push
out
cmp
mov
ret
and
stc
dec
cli
shll
cld
jmp
and
popa
pop
xchg
xor
enter
repnz
mov
mov
pushf
ret
and
inc
inc
and
add
jge
fistpll
jae
jmp
pop
inc
mov
outsb
enter
mov
add
add
dec
inc
call
movb
movsb
testl
cmp
test
mov
cmp
test
roll
cmpsb
sub
xchg
call
jecxz
and
jecxz
roll
mov
pusha
dec
sub
adc
clc
jecxz
ret
cmpsl
stc
mov
inc
xchg
out
dec
out
add
repz
les
repz
mov
lods
cmpsl
mov
mov
mov
add
ret
sbbb
add
clc
and
test
jmp
call
rorb
scas
mov
sbb
xchg
inc
int
lret
mov
cld
fbld
ja
cmp
scas
sub
scas
and
dec
scas
cmp
addr16
inc
add
add
ret
xchg
pop
mov
xchg
addr16
cld
popf
pop
sbb
ljmp
mov
push
mov
and
call
xchg
jnp
cmp
addb
jmp
into
add
bound
bound
orl
push
lds
std
pushl
xchg
and
add
add
xor
inc
sbb
adc
add
orb
bound
add
fidivl
or
ljmp
push
mov
xor
inc
cmp
fmuls
cwtl
call
xchg
loopne
mov
call
or
lcall
cmp
mov
add
xor
ret
and
push
sbb
mov
xchg
outsl
aad
or
mov
mov
lea
mov
fdivrl
and
jae
add
out
dec
cmp
int3
jp
frstor
and
xchg
std
jae
lret
jmp
sub
in
push
loopne
add
into
test
lret
jge
jns
out
jle
push
in
adc
adc
nop
fcmovnb
cmovge
pop
int3
jo
and
pop
mov
sub
into
jecxz
rcrb
incl
or
cmp
mov
gs
femms
in
out
adc
lea
mov
fldlg2
inc
or
sub
and
int
sti
push
dec
lds
xlat
stos
es
sub
je
and
movsl
push
lods
xchg
jnp
and
stc
and
xor
pop
lret
lea
push
inc
or
loopne
add
sbb
add
sbb
and
cmp
fcmovnu
or
stos
cmp
mov
jg
std
push
mov
sub
mov
sub
stos
adc
mov
add
enter
inc
and
rol
mov
roll
sti
loopne
and
xor
js
mov
and
mov
and
mov
adc
std
mov
cmp
mov
sahf
je
inc
int3
and
pop
xor
cmp
cmc
mov
inc
mov
mov
stc
jl
push
jne
mov
push
insl
and
push
dec
and
popa
xchg
ret
pop
test
xor
add
fsubs
and
shlb
in
enter
aam
enter
ss
mov
push
ficompl
xor
shl
out
mov
add
cmpb
fcmove
and
xchg
lret
mov
ljmp
sbb
call
jns
loopne
jnp
sbb
fldenv
cs
cmp
add
jns
loopne
mov
int3
jo
jecxz
jo
jecxz
push
cmp
push
movsl
add
int3
outsb
inc
mov
push
fadds
add
fsubrs
lea
and
mov
push
mov
add
mov
out
add
jmp
test
aad
inc
leave
mov
das
stc
fisubrl
repnz
sar
pop
xor
xor
and
mov
sub
sub
add
xor
cld
xor
sub
mov
mov
adc
js
and
test
add
xchg
sub
and
jmp
jp
and
lds
mov
imul
dec
movsb
jp
cmpsb
mov
add
add
test
out
pushf
data16
sbb
inc
or
loopne
out
and
pop
jb
mov
fwait
arpl
sarb
adc
mov
std
inc
add
pop
mov
std
dec
lds
shrl
jge
inc
movb
mov
subl
push
inc
and
push
dec
and
mov
mov
adcl
adcl
cs
psadbw
jne
mov
fs
and
and
adc
or
and
jecxz
and
push
inc
and
mov
movl
push
add
jg
jae
add
push
mov
jne
orb
cmpb
mov
popa
stc
jg
mov
add
jnp
in
stos
cmp
in
jae
xorb
inc
in
jnp
in
hlt
jo
add
pop
js
divb
inc
sbb
add
pop
add
dec
inc
in
add
add
jne
dec
pop
add
das
jnp
call
aaa
push
call
std
out
jbe
add
enter
loopne
inc
int3
int
int3
fadd
idivl
int
mov
int
xor
sbb
xchg
ljmp
push
xor
dec
testb
or
movsb
sar
out
shlb
sbb
out
add
add
xlat
js
into
testl
pop
mov
das
sbb
out
dec
lock
rclb
or
clc
cmp
add
das
in
pusha
sbb
pop
int
lds
and
add
lods
add
int3
std
push
mov
mov
dec
push
lds
les
add
pop
dec
pop
add
inc
iret
mov
std
lret
add
lods
dec
cli
sbb
jo
lods
sub
sbb
mov
jg
or
out
pusha
cld
jmp
pushf
xchg
pusha
dec
lods
and
ret
into
test
mov
iret
mov
sbb
je
add
lret
add
adc
in
jae
jmp
loopne
and
jb
xchg
lods
xchg
mov
ret
adc
and
iret
test
mov
lds
mov
or
popf
addr16
lods
adc
adc
sbb
dec
call
mov
movsb
jp
inc
xchg
and
mov
mov
pop
test
inc
sbb
rol
jnp
jmp
enter
mov
hlt
leave
ds
mov
call
sub
test
ud0
enter
shlb
gs
int
xor
pop
fwait
outsb
ja
and
ja
mov
pop
jns
in
andb
push
add
stos
add
jno
jle
fisubl
or
add
cmp
push
jnp
add
std
les
enter
gs
inc
test
jl
popf
pop
and
jno
sbb
popf
popa
or
push
test
mov
enter
test
sub
sahf
xchg
loopne
mov
adc
and
add
fsubp
pop
push
dec
jl
les
xchg
jp
cmpsl
sarl
cmpsl
std
jp
cmpsl
int
int3
cmpsl
mov
out
push
cmpsb
out
push
xor
shll
add
fst
or
jo
dec
cmp
imul
and
repnz
iret
bound
test
jb
test
shrb
sub
cltd
jns
insl
les
jbe
adc
dec
add
add
mov
addr16
lds
aaa
popf
adc
gs
pop
cld
cs
mull
mov
pop
mov
xchg
xor
ret
std
pop
mov
mov
xchg
sbb
pop
jo
and
bound
jl
sbb
in
aam
and
int
add
or
addr16
and
test
inc
and
cvttss2si
inc
and
inc
and
aad
and
jl
pop
add
xchg
and
repnz
and
dec
and
aam
mov
jae
shrd
inc
in
fld
jns
in
stos
je
imul
lock
cmp
bound
push
jb
jmp
mov
jge
and
jl
sbb
jge
and
jge
sbb
jge
in
sbb
mov
sub
push
test
daa
adc
add
cmp
xchg
mov
sarb
and
mov
and
out
shlb
stos
sar
and
in
arpl
sbb
lea
pop
out
sti
insb
cmp
jg
int
mov
lds
jecxz
je
data16
xchg
add
rcrl
adc
mov
repz
es
pop
es
dec
stos
incl
fldenv
loopne
int3
into
mov
out
add
rcrb
jns
fwait
add
fmuls
out
lret
scas
or
add
mov
add
mov
lods
and
adc
mov
stc
lret
aas
mov
xorb
add
andb
jmp
sti
fdivrs
lret
xchg
fistpll
test
push
jmp
loopne
je
iret
int3
mov
add
adc
subl
mov
cld
inc
inc
iret
std
inc
push
pop
add
pop
jg
add
fstl
xchg
inc
add
int3
std
je
ret
xchg
jge
je
je
dec
cmp
pop
std
je
fs
add
shlb
je
cmp
movsl
je
add
movsl
je
xor
inc
add
movsb
je
dec
fldcw
xchg
int
in
cwtl
movsb
std
mov
imul
jnp
dec
push
adc
push
push
jno
adc
cltd
shr
mov
ja
mov
test
sbbl
ja
sbb
in
imul
mov
cmpsb
sub
mov
fcompl
xor
inc
add
push
ja
in
in
testl
pop
pop
cmpsl
jmp
mov
push
push
ljmp
or
dec
cmp
or
add
lret
pop
ja
faddl
shrb
clc
xor
adc
mov
sbb
or
aam
or
insl
rcrl
add
jg
add
dec
mov
add
in
add
js
into
outsl
ret
test
call
add
icebp
out
loope
sbb
inc
in
ud2
lods
ljmp
in
jnp
or
jmp
fcmovu
sbb
inc
in
fisttps
jmp
fidivl
iret
and
cmpsl
jecxz
ljmp
testl
add
adc
cmp
cmpsl
testl
inc
dec
or
inc
lret
test
movsb
add
add
mov
dec
out
test
dec
dec
and
pop
je
jmp
ss
pusha
addr16
pop
lcall
mov
movsl
fbld
mov
and
push
sbb
mov
add
hlt
add
add
cmp
lcall
push
in
inc
inc
int
mov
sbb
and
ret
mov
and
sub
xor
and
andl
lock
inc
loopne
and
mov
and
mov
push
pop
fstpl
test
pop
orb
add
xlat
adc
pusha
movzbl
or
add
fcom
inc
and
roll
je
setbe
arpl
and
insb
sub
mov
les
inc
je
mov
iret
add
xchg
or
add
out
xchg
and
ffree
and
popa
insl
jle
out
mov
setp
add
jns
and
cmc
lods
inc
push
jl
popa
add
add
cmc
mov
inc
push
fmuls
shlb
cmp
lcall
add
lock
add
call
inc
sbb
repz
and
inc
sbb
fcmovnb
push
les
add
fcmovne
and
out
or
cli
arpl
orl
es
jecxz
pop
cs
cmc
mov
mov
rolb
add
add
mov
out
and
dec
or
or
loopne
adc
scas
ret
or
test
jecxz
jo
jecxz
pusha
mov
jecxz
repnz
fistl
and
int
add
or
enter
pop
shl
ret
gs
rorl
std
sbb
pusha
ja
inc
pusha
add
lods
dec
jo
lods
and
mov
and
mov
dec
fdiv
xchg
stos
or
lds
dec
inc
add
inc
lods
insb
mov
xlat
sti
aam
mov
jmp
jg
add
call
daa
inc
aam
mov
rol
int3
test
repnz
imul
add
das
cld
mov
add
and
fmull
sbb
sti
add
stos
mov
inc
or
sub
or
cmp
or
inc
popf
pop
mov
and
and
cmp
jl
mov
add
inc
ss
outsl
shll
movsl
fdivrp
push
stos
cmp
mov
std
mov
outsb
stc
sldt
add
add
ds
sbb
sub
fadds
xchg
jo
jae
inc
inc
adc
or
ret
and
add
sbb
jnp
call
cmp
jno
bound
cmp
mov
out
aaa
and
pop
test
adc
and
test
addr16
add
popa
lods
inc
add
add
add
lea
add
xchg
lret
and
or
or
gs
imul
sar
pop
mov
push
fmull
mov
pop
mov
gs
sub
inc
or
pusha
enter
mov
cmpsb
xchg
add
push
inc
es
clc
in
enter
movb
add
add
and
add
into
out
pop
rorb
or
or
decb
out
inc
cmp
lea
pop
pop
cld
repnz
mov
add
or
negl
jl
pop
sbb
mov
jle
rorl
out
dec
add
mov
cmc
loope
dec
call
icebp
push
pop
mov
add
out
xlat
and
out
and
pop
fsubs
fistps
cmpsb
jp
mov
mov
and
push
mov
mov
fsubs
mov
lret
push
cmpsb
pusha
cld
pop
mov
pop
mov
inc
out
mov
pop
mov
mov
lds
std
push
out
inc
jge
add
inc
into
call
bound
pop
inc
mov
add
or
jmp
cltd
jecxz
push
mov
inc
add
inc
sbb
ret
add
push
push
add
pop
push
jle
and
and
mov
adc
repnz
imulb
mov
imul
inc
add
inc
inc
or
idivl
add
jp
sbbl
add
inc
or
inc
pop
add
arpl
push
push
ret
sub
sar
cmc
cwtl
sbb
call
je
dec
mov
add
push
and
mov
fcoms
add
shrb
fidivs
add
mov
call
or
testl
or
add
mov
lods
int
outsb
hlt
add
push
cld
xor
xchg
mov
mov
mov
mov
sarl
cmpsb
add
or
inc
push
movsb
loopne
pop
jmp
les
loopne
add
pop
loopne
jmp
lock
lret
jmp
sbb
rcl
add
mov
add
stos
add
adc
loopne
dec
ljmp
lock
mov
fisttpll
mov
cmc
sbb
pop
dec
pop
mov
icebp
pop
dec
pop
test
push
scas
fists
pop
add
sbb
stos
daa
sti
dec
mov
push
cltd
lea
push
dec
cld
out
push
lcall
add
mov
mov
inc
sbb
add
cmp
push
rcrl
add
test
sbb
cli
stc
ret
dec
or
dec
roll
push
inc
in
mov
pop
jmp
gs
sti
hlt
adc
inc
jmp
cmc
dec
cld
add
fisttpl
pop
fcmovnbe
add
jbe
sub
stc
adc
out
adc
cmp
adc
hlt
mov
dec
shl
fwait
or
int3
mov
clc
xchg
or
int3
mov
pop
cmc
mov
test
dec
push
sbb
push
and
dec
mov
jo
inc
test
dec
out
cltd
jecxz
mov
push
rolb
pop
push
lret
ljmp
mov
jne
add
or
inc
in
aas
loop
hlt
sub
shrb
fcompl
pop
inc
fcoml
add
repnz
or
call
int3
out
mov
add
add
inc
pop
or
in
jo
add
push
call
sar
out
fcoms
or
inc
xor
add
add
mov
or
mov
test
negl
add
loope
aas
mov
xor
sbb
jmp
jg
aam
add
adcl
jecxz
inc
out
inc
and
xlat
fs
clc
lret
jmp
xchg
mov
mov
sub
lahf
or
out
loop
add
xlat
xchg
enter
dec
cmp
rcrl
clc
adc
dec
pop
shlb
add
jmp
jle
shr
add
addr16
leave
add
mov
push
insb
nop
ljmp
add
add
lret
dec
loop
sbb
ret
add
repnz
add
jmp
add
repnz
loope
sarb
push
and
out
or
cmp
mov
cld
mov
cwtl
and
adcb
push
rorb
sub
dec
dec
add
pop
sub
add
add
stos
add
add
je
push
loop
call
test
into
test
leavew
add
mov
jmp
push
or
inc
cld
jmp
roll
sbb
push
xor
cmp
in
dec
rorl
ret
add
mov
lods
jmp
iret
add
bound
std
mov
and
fbstp
fimuls
insb
fwait
or
adc
verr
pop
or
cmp
data16
add
add
loopne
fisubrs
leave
or
repz
or
cmp
mov
xchg
aas
call
and
add
add
xor
test
mov
in
adc
pop
push
lods
shlb
mov
pop
or
iret
or
mov
andb
add
xor
add
xchg
aas
inc
in
or
add
shl
mov
add
jmp
mov
test
popa
add
int3
icebp
mov
inc
xchg
subb
jle
lret
cmpl
out
js
add
sub
std
jmp
jg
lret
jns
leave
in
imul
sub
std
lret
jmp
fisttps
push
cmpsb
fbstp
popf
fs
and
ljmp
add
adc
inc
sarl
icebp
or
mov
pop
scas
inc
ljmp
in
mov
cwtl
fimull
sub
add
xchg
outsb
call
xchg
add
add
cld
jmp
sbb
das
jmp
add
call
xor
inc
jmp
add
xchg
and
add
test
stc
lret
add
call
add
mov
decb
mov
add
sti
aam
faddl
dec
xchg
add
mov
xchg
test
das
add
dec
and
push
iret
cvtps2pi
add
test
shr
jae
je
inc
out
push
bound
aaa
shll
decl
dec
pop
pop
jb
mov
int
add
aam
shrd
sub
popf
push
lcall
dec
stc
add
inc
std
outsl
mov
cmp
fsubs
dec
push
add
or
dec
and
in
add
cmpl
rorb
std
adc
add
call
sbb
jnp
je
fiaddl
inc
jns
call
add
lret
fs
and
xchg
jle
call
andl
push
std
dec
test
add
aas
aas
cld
push
shlb
push
in
aad
sbb
push
std
pop
lods
nop
and
or
je
xor
sbb
daa
xor
test
cld
xor
or
adc
ffree
dec
insl
les
int3
jmp
add
add
fiaddl
jl
out
add
add
iret
insl
push
add
jmp
pop
add
dec
ret
hlt
loop
mov
and
ljmp
out
jmp
xchg
jmp
stos
mov
push
sub
lock
jmp
xchg
jmp
mov
add
lret
jmp
jl
or
or
mov
add
cmp
out
inc
sub
loop
inc
push
add
js
or
ror
jmp
add
insb
out
rolb
cmp
pop
jmp
jmp
mov
add
fiadds
push
push
add
insl
aas
push
in
add
ds
push
clc
cmp
jae
add
sub
xor
movl
dec
testl
sub
and
ret
mov
mov
mov
into
inc
inc
adc
jg
xor
mov
and
lret
bound
pusha
add
mov
mov
add
and
ret
enter
add
movsl
pushl
lret
pop
test
cmp
jmp
test
or
xchg
add
and
das
lret
cmp
cmp
jmp
pop
daa
test
sub
ret
mov
adcb
jg
xor
int
pop
lcall
test
les
fcompl
add
add
or
ret
imull
mov
add
xor
pop
push
jo
jae
leave
jl
ds
incl
lcall
cmpsl
enter
sbb
data16
lods
test
add
mov
repnz
inc
lock
int3
mov
jmp
subb
add
inc
scas
out
inc
cmpsb
out
and
push
mov
xlat
jmp
out
int3
jmp
mov
lret
jmp
aas
add
jmp
add
int3
jmp
add
int3
bnd
lret
xor
inc
cltd
js
or
ljmp
or
dec
add
inc
lods
add
add
add
sub
loop
cmp
sbb
inc
sahf
fdivrs
push
data16
jmp
insl
inc
leave
test
add
nop
and
mov
push
or
mov
nop
and
fwait
mov
sub
js
cmp
jp
inc
lds
leave
insb
rclb
inc
out
sbb
shlb
fwait
cmp
mov
dec
nop
jg
cmp
cmc
out
fcompl
mov
add
cmp
lea
iret
add
int
mov
aaa
add
push
push
or
cmp
jnp
arpl
rolb
jmp
sbb
mov
push
fstpt
cld
ljmp
rolb
add
pop
add
mov
and
sarl
fisttpll
add
inc
and
xor
enter
roll
dec
data16
inc
data16
dec
out
inc
mov
inc
sbb
push
incl
scas
aas
or
add
jnp
fcomp
fbld
add
add
mov
push
lret
inc
dec
xchg
mov
add
cmp
stc
mov
mov
mov
jle
roll
mov
iret
add
add
std
test
and
inc
pop
std
or
mov
add
dec
mov
rclb
push
jae
lods
lds
lret
lret
int3
test
xlat
dec
jns
or
inc
add
ljmp
inc
sub
inc
les
jge
or
repnz
ret
stc
lods
mov
mov
xor
mov
inc
inc
loopne
lret
mov
and
stos
aaa
lret
fwait
add
jmp
mov
add
test
stos
out
neg
sub
mov
jle
insl
inc
add
jmp
or
int
call
sub
leave
jo
shr
std
cmp
roll
add
add
pop
jmp
fsubs
lods
adc
test
or
jmp
nop
roll
xchg
repz
push
fs
ljmp
add
test
jg
xchg
into
cmp
xchg
cmp
nop
mov
push
mov
mov
sub
or
inc
add
inc
in
test
ljmp
add
ret
sub
add
inc
and
fsubs
inc
add
mov
inc
ror
dec
dec
mov
add
inc
push
incl
leave
std
adc
adc
sti
add
mov
call
push
je
sbb
push
sti
add
rorl
into
into
jmp
sub
call
add
push
into
std
pop
out
bound
push
mov
adc
ss
test
and
rcl
scas
xor
aad
icebp
or
xchg
add
and
jb
lcall
jp
dec
or
mov
shlb
inc
mov
fs
cmp
jp
scas
xor
xor
out
sti
repnz
adc
ja
add
es
stos
ljmp
and
lods
out
push
add
or
rolb
add
sti
orb
or
cmp
xor
cmpl
add
push
stos
nop
cld
inc
fstpt
xor
cld
xorb
nop
cld
inc
and
and
iret
add
cmp
add
jmp
push
jae
xlat
inc
inc
movzwl
mov
fwait
fwait
jmp
test
cmp
inc
ret
lcall
and
outsb
xchg
xor
std
pop
cmpsl
jg
mov
callw
cld
stc
jmp
cltd
xchg
xchg
push
sbb
add
add
fnstenv
repz
dec
cld
aam
inc
adc
add
dec
adc
gs
jb
mov
cmp
int3
add
sbb
add
ret
xor
xlat
xchg
xchg
sbb
out
inc
xchg
jmp
addr16
addr16
cwtl
into
add
mov
adc
add
mov
push
cltd
mov
push
jbe
pusha
push
sub
add
or
pop
pop
pusha
or
insb
mov
sbb
je
inc
dec
add
lds
imul
add
jmp
mov
call
jb
movsb
adc
mov
out
pop
cwtl
push
fxch
push
decl
scas
shll
pop
inc
cmp
dec
movl
jecxz
andb
add
mov
or
rorl
adc
xchg
lea
sbb
xchg
sbb
xor
out
ds
mov
ret
ja
push
jnp
adc
add
sbb
add
add
adc
add
xor
lret
js
iret
and
add
test
and
cld
ljmp
and
xor
rclb
cmc
cwtl
aam
pop
and
aas
add
inc
popf
in
xor
gs
ror
pop
iret
pop
mov
add
inc
sti
pop
cmpl
xchg
lret
mov
jmp
hlt
add
and
wrmsr
outsl
in
sbbb
push
push
xchg
add
in
dec
add
std
jnp
mov
mov
dec
sbb
pop
inc
cmpsb
daa
lock
in
cmp
inc
add
mov
repz
fiadds
mov
add
xchg
in
jp
or
adc
roll
jl
jmp
jb
lea
add
fcoml
add
add
test
int3
call
fs
mov
adc
jb
mov
out
je
jmp
bound
lea
pop
cmp
add
mov
xchg
jne
dec
mov
sub
xor
inc
add
cmp
xor
fmuls
add
and
sbbl
add
es
push
add
jge
call
in
jo
loop
or
inc
lret
ljmp
inc
sarb
jnp
sub
add
loop
inc
jne
aas
jne
push
mov
sbb
flds
call
cmp
pop
pop
add
push
ret
jb
mov
rorl
jge
test
jae
stos
or
in
add
jnp
call
mov
sub
fnstcw
or
dec
sbb
pop
add
xchg
pop
and
add
mov
or
pop
push
add
jnp
sbb
adc
lret
add
add
out
sbb
add
jne
pop
stos
loope
mov
mov
add
add
stc
sti
push
test
sti
jmp
lret
outsb
dec
lock
mov
xor
bnd
ss
mov
inc
mov
iret
movsb
sub
inc
orl
push
out
sub
sbb
jmp
lock
jmp
or
int3
jmp
xor
inc
xchg
mov
mov
mov
cmpsb
jo
add
shr
add
and
add
cmp
addr16
push
sub
cmp
mov
ljmp
in
add
xchg
add
add
cmc
or
ret
call
pop
sub
shrb
jmp
jle
add
add
add
stos
fistl
movsl
mov
into
iret
ljmpw
add
inc
std
add
add
xchg
imul
popa
subl
jmp
call
jl
jbe
and
sub
dec
shl
mov
mov
andb
int3
movsb
fmul
add
push
dec
inc
or
outsl
adc
andl
xor
jmp
into
xchg
jmp
jne
pop
nop
and
into
add
add
xor
ljmp
into
xchg
cmp
mov
in
and
push
and
into
add
lock
fmull
or
jne
loope
data16
and
sub
add
les
and
into
add
add
imul
mov
jnp
push
test
push
jge
sbb
xor
in
dec
add
jl
add
add
mov
ja
dec
cwtl
adc
outsb
add
ss
xchg
and
shll
xchg
mov
and
ret
push
shlb
add
jns
and
cltd
xor
add
push
sbb
ss
notl
fadds
inc
add
jno
jge
and
xchg
and
lret
mov
add
mov
popw
jo
jmp
pop
and
fisttpll
mov
subb
movsl
outsl
and
and
xor
test
jo
jecxz
or
adc
cmp
out
fadd
scas
lret
adc
je
jecxz
ljmp
call
add
int3
imul
add
and
into
jmp
and
call
lret
call
mov
xlat
add
jl
cli
outsb
sbb
lcall
jge
pop
push
add
add
in
int3
dec
pushf
push
subl
jmp
xlat
push
lcall
pop
add
lds
add
jmp
movsl
add
or
daa
cld
jmp
sbb
cld
jmp
add
fdivrl
add
jne
jo
add
adc
add
dec
jle
cld
lcall
add
je
mov
add
adcl
sbb
lret
jg
and
sub
sbb
cmp
add
add
insb
dec
and
fcmove
add
jae
cld
jmp
in
test
std
push
jge
add
imul
sbb
add
xor
add
xchg
push
dec
and
jg
push
lret
adc
in
jle
call
or
xchg
mov
mov
inc
pushl
mov
rorb
call
mov
stc
add
hlt
add
add
incl
divl
call
mov
out
mov
adc
outsl
sbb
xor
add
test
fwait
cld
scas
mov
or
repz
pushf
jnp
lock
add
add
and
xor
add
inc
inc
in
pop
xchg
or
test
sub
mov
and
and
je
add
mov
and
orl
xlat
in
or
mov
xor
pop
cmc
and
aas
and
iret
jp
or
mov
int3
mov
add
int3
add
xlat
xor
add
int3
orl
repnz
inc
add
das
addl
add
or
add
or
mov
sbb
jmp
ror
push
out
addr16
jle
icebp
cwtl
popl
jb
fcmovnbe
jbe
sbb
sub
xor
adc
fucom
mov
jg
or
push
ss
in
je
sbbb
lahf
adc
cwtl
cmp
call
adc
movsl
add
incb
add
test
adc
sti
pop
arpl
addr16
jmp
and
add
and
add
mov
add
bound
inc
xor
add
ficoml
or
mov
imul
std
adc
pushf
add
es
mov
xorb
dec
mov
into
push
mov
mov
incl
jmp
xor
xchg
aad
je
lds
je
imul
or
lret
jmp
add
inc
push
sbb
mov
jp
xor
mov
mov
jl
jns
incl
je
enter
lods
sub
jae
mov
push
add
pop
mov
clc
dec
dec
add
clc
out
ds
inc
out
addr16
add
or
cpuid
dec
and
xor
add
push
orl
xor
add
sbb
call
int3
out
leave
cmp
out
add
sub
ja
into
add
clc
xor
or
sbbb
mov
and
add
movsb
cmpl
add
cmpsl
pop
add
sub
dec
mov
mov
sbb
movsb
fnstsw
inc
arpl
jl
out
add
lods
push
add
fs
int3
jmp
nop
fisubs
ljmp
dec
pop
add
int3
fmulp
or
pop
add
int3
pop
dec
test
je
clc
jnp
and
call
cld
jmp
add
and
jmp
shll
fsubr
add
test
add
dec
je
rcll
push
push
lret
cmpl
or
xlat
and
jmp
adc
jae
aam
inc
push
out
roll
jmp
pop
pop
cld
jmp
push
push
shrb
call
gs
rolb
insb
dec
call
pop
inc
out
int3
add
cltd
mov
gs
mov
call
mov
repz
test
lret
add
mov
sbb
pop
adc
jb
mov
outsb
and
or
xchg
mov
adc
sub
sbb
cli
daa
cwtl
loop
sbb
roll
jmp
mov
mov
add
movsl
out
and
fmul
mov
out
test
xchg
add
xchg
out
jmp
lahf
rorb
or
lock
sbb
xor
and
xchg
xor
mov
or
dec
cltd
dec
and
lods
inc
and
lods
dec
and
mov
jb
cltd
dec
and
lods
dec
and
stos
dec
and
fwait
dec
and
cmp
mov
adc
mov
add
add
adc
cmp
mov
and
xor
dec
in
ja
fmul
ja
and
mov
jne
mov
insl
sbb
jo
jmp
mulb
je
inc
dec
mov
call
jl
subb
out
sbbl
jmp
test
inc
or
and
out
js
ret
sbb
add
add
push
lods
fcmovnb
and
sub
sub
push
adc
xchg
ljmp
and
xchg
insb
cmp
sbb
push
in
cmc
adc
mov
mov
jmp
pop
xor
ljmp
add
fcmovb
scas
xor
in
mov
add
add
xchg
mov
cli
jb
out
arpl
pop
add
icebp
dec
cli
in
push
dec
and
add
xchg
andb
testb
jmp
jmp
cwtl
pop
and
fdivrs
cld
jmp
add
insl
rcrb
cld
jmp
aad
mov
sldt
add
add
cld
fsts
add
xchg
add
pop
repz
pop
repz
sbb
xlat
dec
je
dec
in
or
mov
or
add
imul
jnp
pop
iret
jg
es
stos
add
iret
scas
add
mov
ret
jne
xchg
rorb
sub
add
sbb
push
adc
mov
adc
and
or
mov
jae
movsl
insb
add
cmp
cmc
shll
add
das
mov
jns
or
ljmp
lcall
adc
push
rcl
push
mov
and
std
hlt
mov
movsl
fstpt
shlb
add
sub
ss
and
cmp
or
dec
out
pop
mov
jb
pop
inc
and
pop
add
fcmovne
cmpsb
jge
jns
dec
dec
jae
pop
call
test
clc
xor
inc
xor
mov
ljmp
int3
call
inc
iret
js
cli
andb
add
dec
imul
leave
insl
fldl
ja
ljmp
int3
fiaddl
push
dec
stos
cli
cmp
add
jmp
clc
mov
jmp
icebp
or
push
add
int3
outsb
cmp
and
mov
lret
dec
fdiv
ja
add
add
xchg
ljmp
jmp
stos
lods
adc
popf
and
leave
loopne
ljmp
push
shl
jg
add
push
xor
pushf
or
xor
mov
insb
push
dec
in
lret
fisttpl
push
imul
shlb
inc
add
popf
cmc
shrb
or
xchg
push
ljmp
ds
add
cmpsb
add
add
fs
decl
loope
inc
and
add
fwait
loopne
mov
clc
add
jmp
adc
add
cmpl
push
repnz
adc
add
lret
add
sahf
inc
lock
push
or
aad
push
clc
cwtl
dec
or
and
add
add
mov
call
and
stc
andl
add
pmaxub
ficoms
mov
int3
and
jne
lock
call
dec
les
and
xor
test
scas
cld
mov
cmp
cwtl
mov
rorb
and
push
adc
jae
jo
cwtl
scas
ja
js
and
pop
popf
add
imul
add
add
xchg
jecxz
mov
inc
cld
shlb
lock
shlb
xor
xor
or
xorb
fnsave
inc
aam
cld
jne
pop
cmp
inc
in
ss
dec
inc
dec
sub
sbb
push
pop
cld
mov
inc
add
jmp
addb
cmpb
jmp
inc
add
and
xor
inc
in
cmpb
cmp
out
pop
cmc
adcb
adc
lret
mov
call
sub
loopne
sbb
test
pop
adc
cld
jmp
mov
or
fistps
add
push
mov
jno
in
mov
dec
inc
add
add
fcompl
and
jnp
lahf
incl
adc
lret
sbb
lods
out
mov
cmp
jecxz
cld
jmp
sbb
out
jnp
jmp
std
mov
std
mov
call
xor
movsb
pop
addl
sti
je
pushf
aas
and
js
jb
xchg
adc
add
xchg
repz
sbbb
iret
add
or
inc
addl
or
daa
sub
jne
jmp
jne
pop
jg
pop
inc
imul
loopne
mov
cmp
insl
mov
pop
add
add
add
imul
add
and
mov
and
and
fimull
adc
aaa
bound
test
subl
add
and
test
cs
lahf
mov
mov
dec
jl
add
jnp
pushf
and
add
cli
pop
push
jge
sbb
xor
add
mov
in
inc
test
or
xor
incl
add
push
outsl
lret
outsl
push
rolb
sub
jp
in
mov
mov
aad
ret
or
popl
push
sub
dec
mov
ret
or
mov
mov
dec
inc
jnp
lds
push
mov
lret
insb
dec
and
loop
ret
dec
and
mov
xor
cmp
sub
xchg
cltd
jmp
aas
jmp
mov
and
add
add
call
fcomi
xchg
adc
in
adc
xchg
int3
jmp
shrl
jmp
add
roll
pop
add
mov
jmp
cs
stos
push
xchg
aad
int3
add
jg
push
jb
roll
jmp
clc
dec
lret
and
jmp
mov
gs
cld
jmp
add
inc
shr
add
xchg
pop
fmulp
je
loope
xchg
out
aaa
cmp
dec
mov
jb
jo
call
push
arpl
dec
cli
add
in
outsl
add
pop
cmpl
lret
and
mov
mov
repnz
daa
je
ds
dec
stos
cmpsl
or
inc
test
enter
add
scas
lds
sar
je
inc
adc
je
in
std
adc
push
or
or
loope
cmp
ja
mov
jl
loop,pt
pop
data16
mov
loopne
push
xchg
adc
sub
sub
scas
sub
dec
jnp
add
inc
xor
out
faddl
jnp
push
call
mov
sub
add
push
adc
mov
lds
and
sarb
test
pushf
shll
push
scas
mov
outsb
add
dec
sub
jnp
xchg
mov
inc
add
sbb
push
push
shrb
repz
cmp
inc
in
jmp
add
jmp
add
cmc
mov
or
add
mov
out
xchg
insl
ficompl
ljmp
push
lret
pop
mov
sub
sub
rolb
inc
push
sub
and
fistps
push
les
out
xor
int
push
aas
sub
fs
and
call
push
and
jnp
or
sub
inc
into
daa
sbb
scas
daa
add
inc
jmp
flds
ss
and
jp
add
and
push
test
add
jg
shll
inc
dec
int
inc
leave
add
dec
jbe
mov
and
sbbb
jb
out
jb
out
bound
jecxz
add
xlat
out
fs
out
pop
mov
dec
add
cld
jnp
sub
sarl
mov
jmp
inc
call
and
cltd
in
outsl
and
in
push
pop
iret
mov
sbb
mov
push
adc
push
mov
aas
outsl
add
ds
imul
test
mov
cld
mov
enter
push
pop
pop
adc
add
dec
fisttpl
add
std
fisttps
in
sub
je
push
xchg
mov
mov
jecxz
mov
jecxz
add
iret
cmpb
fdivrs
fmul
add
stc
fdivrs
add
incl
loope
incl
jbe
and
cmc
mov
insb
dec
and
jge
mov
pop
and
adc
sbb
out
push
inc
and
pushl
add
movb
lds
mov
shlb
dec
or
shl
ret
or
or
sbb
das
lods
lock
sub
mov
and
push
fsubl
movb
add
lret
push
add
jnp
xor
add
jmp
sub
dec
sahf
add
int3
pop
aaa
in
outsb
pop
lret
leave
add
daa
aam
inc
add
enter
add
jmp
out
adc
fmull
dec
add
int3
outsb
mov
sbb
std
cli
int3
jmp
xchg
out
xchg
push
and
and
xchg
ret
lret
jmp
mov
sbb
jns
add
and
dec
add
xchg
adc
mov
lea
or
ret
fisubrs
int3
jg
clc
push
jne
mov
push
cs
movsl
adc
jle
jmp
shrb
movsl
bsf
ljmp
or
pop
cld
jae
pop
das
stc
mov
adc
adc
sbb
ljmp
in
leave
add
and
into
pushf
push
popl
mov
leave
jmp
repz
add
mov
call
and
jne
sub
lcall
sarb
sbb
int3
xor
loop
xchg
mov
sbb
fucomp
inc
je
dec
mov
ljmp
add
add
add
push
push
pop
and
push
cmp
mov
push
js
inc
push
inc
and
mov
je
or
dec
sbb
in
jo
xchg
mov
mov
cmp
in
sbb
add
decl
inc
fprem
mov
push
jne
sbb
xor
jae
cmp
cld
xchg
and
les
or
addr16
incl
jp
and
leave
add
xorl
clc
cmc
jp
add
ljmp
cmpsl
sub
stos
in
fs
fdivr
mov
mov
add
adc
dec
xchg
fimull
xchg
mov
lds
jno
out
ljmp
into
call
fstps
nop
push
incl
nop
add
add
add
jno
in
mov
jns
or
jmp
inc
ljmp
sub
add
push
cmpsb
pop
cmp
or
mov
icebp
pop
int3
loop
and
cmp
sub
cs
dec
cmpsb
or
scas
add
rcrl
dec
add
ret
dec
mov
in
mov
add
add
mov
sbb
sub
mov
mov
imull
dec
and
sbb
adc
int
lods
pop
nop
mov
push
mov
add
jp
bound
jae
sub
cmc
or
adc
in
add
mov
xchg
stc
add
bound
push
jne
enter
std
xchg
mov
add
push
int
loope
sti
lcall
add
push
in
mov
push
mov
dec
rorb
movb
mov
pop
lds
add
push
dec
add
iret
mov
inc
cmp
add
testl
push
stos
inc
sbb
push
mov
pop
pop
and
out
dec
jbe
mov
leave
add
mov
loop
inc
add
push
int
scas
roll
std
scas
ljmp
daa
outsb
les
sar
add
adc
and
add
and
cmc
mov
jbe
add
out
mov
and
or
cmpsl
add
add
add
add
lea
ret
mov
lcall
push
and
add
incl
or
jp
add
ljmp
sub
add
xor
add
lret
lcall
jne
mov
cmpsl
adc
and
push
pop
pop
rolb
add
and
mov
outsb
inc
add
and
mov
add
xchg
testl
adc
add
ja
inc
xor
push
aam
inc
sub
mov
outsb
inc
in
inc
mov
popl
cmpsl
push
mov
cmp
pop
xor
scas
push
mov
add
add
add
pushf
mov
or
add
cs
dec
out
ja
jmp
or
push
add
insb
dec
sti
xchg
pop
mov
icebp
xchg
add
jle
sti
jle
dec
jge
out
xchg
daa
les
inc
cwtl
or
add
jae
test
std
jmp
rolb
mov
mov
int
sbb
popf
fbld
add
add
and
out
int
dec
inc
lods
call
notb
je
add
or
idiv
jecxz
outsl
push
std
mov
mov
mov
mov
inc
stos
pop
adc
in
sub
rorb
bound
pop
cmp
and
pop
pop
or
ret
xchg
or
div
sti
jmp
mov
call
adc
sti
jmp
mov
push
repz
push
mov
call
add
mov
inc
xor
jmp
out
lret
into
cld
jnp
xor
cmp
and
aaa
insl
dec
dec
test
pop
push
jnp
fstl
repz
add
jl
mov
and
add
incl
ss
and
insb
cmp
jnp
and
jae
cld
mov
push
or
add
jp
and
fnstcw
in
adc
daa
call
push
sahf
daa
lock
scas
daa
in
repz
pop
ljmp
mov
insb
repnz
pushl
inc
ljmp
push
push
sub
fs
add
jge
add
data16
jecxz
ljmp
leave
jmp
aas
add
sbb
int3
data16
sti
dec
stos
add
popf
insb
xchg
inc
ljmp
or
add
push
add
add
jmp
int3
xchg
dec
add
add
fidivrs
call
pop
loopne
addl
dec
lds
int3
mov
das
dec
aas
jmp
int3
cmp
add
jecxz
gs
add
aam
inc
add
sub
push
insb
inc
test
xorl
cmp
add
dec
andl
pop
lret
lea
lock
cmp
adc
add
enter
mov
push
lea
outsb
cli
in
pop
jo
add
dec
and
std
jg
sub
add
pop
enter
sbb
push
stc
mov
and
inc
adc
mov
jmp
dec
dec
and
and
jmp
push
xchg
add
enter
int3
or
add
lea
add
call
aaa
add
repz
pop
or
pop
add
xchg
mov
jmp
inc
lea
add
dec
fisubrl
add
jbe
jns
and
repz
jnp
jp
sbb
pop
jns
and
pushl
icebp
rclb
clc
sub
inc
in
inc
and
add
sbb
push
add
repz
jnp
sub
add
in
push
push
int3
mov
inc
add
add
add
sti
xchg
je
fmull
mov
xchg
pop
mov
push
ljmp
scas
mov
push
push
inc
add
scas
fldl
imul
fisubrs
pop
fsubrs
xchg
and
mov
push
push
mov
cli
jmp
sub
fs
sbb
xorl
subl
insb
ret
jle
bound
int3
mov
add
into
popf
push
popf
or
or
insl
add
add
and
testb
int
jecxz
jo
int3
test
scas
iret
xchg
sub
xchg
mov
out
push
cmp
dec
jle
sub
ds
jo
nop
jmp
mov
sub
jg
and
xor
je
pop
divl
pushw
xor
mov
adc
bound
in
mov
add
cltd
int
iret
inc
mov
mov
pop
outsl
movsb
pop
adc
mov
cmp
lret
loopne
add
mov
adc
xchg
inc
je
xchg
int
call
inc
sub
fistps
jmp
std
test
or
sbb
lds
cmp
add
add
aas
add
push
testl
test
lea
push
sbb
add
pop
testb
push
testl
sbb
and
in
cmpb
jnp
sbb
sbbb
or
add
flds
pop
pop
add
aas
sbb
test
aas
add
push
or
adc
mov
sbb
into
or
xchg
incl
int3
outsb
inc
and
jo
jns
int
add
xor
faddl
les
mov
pop
inc
jo
clc
inc
ficomps
and
mull
aad
mov
outsb
cmp
xchg
pop
mov
pop
jecxz
je
xor
or
mov
add
int3
insb
leave
int
fs
hlt
dec
lret
int3
dec
add
outsb
out
add
stos
aas
cmc
mov
add
add
imull
roll
inc
cld
divl
xor
iret
push
ret
rolb
mov
jp
push
mov
enter
out
fwait
and
ljmp
fldl
jo
or
mov
int3
mov
or
push
scas
push
scas
and
and
push
mov
xchg
dec
mov
jmp
rcl
jmp
loopne
or
scas
insb
pusha
xlat
je
adc
aas
and
js
and
and
ret
dec
mov
sbb
push
jbe
mov
or
jno
push
pushl
inc
and
push
mov
std
adc
jbe
imul
cld
incl
push
push
std
jmp
cmp
std
decl
mov
add
push
popa
xchg
add
iret
cld
xor
icebp
out
icebp
add
jne
je
dec
dec
push
sbb
out
add
ja
scas
or
std
in
sbb
aas
add
call
jns
hlt
mov
pop
ja
call
xor
pop
fsubs
addl
les
ret
shlb
push
push
jp
and
jp
sbbb
push
inc
add
sti
xor
fwait
jg
xchg
jmp
add
sub
std
or
dec
inc
imul
mov
cmp
jecxz
sbb
lret
sub
jg
jg
jle
adcb
ret
push
sti
dec
cmp
add
js
vdivps
in
repz
in
inc
add
sub
jns
adc
mov
cmp
mov
sub
lds
shlb
gs
imul
lds
add
mov
mov
mov
dec
daa
in
sbb
push
dec
inc
sbb
and
add
subb
jo
add
add
int3
push
jb
inc
push
in
and
cmp
cwtl
xchg
cmp
or
repnz
jmp
dec
in
add
loopne
cmp
in
push
rclb
inc
dec
mov
call
jmp
pop
repz
jmp
xchg
dec
xchg
add
jg
xchg
inc
dec
icebp
sub
push
sarl
call
fs
jge
je
push
rorb
add
test
mov
jns
lock
push
add
sub
dec
lea
aam
dec
in
daa
in
lcall
je
inc
outsl
or
ss
cli
push
xor
inc
ret
xchg
enter
orl
or
dec
fwait
loopne
jb
sti
jmp
jo
and
add
add
clc
ret
xchg
push
push
and
in
cltd
int
jmp
idivl
ret
push
push
cmpsl
xchg
mov
mov
add
jge
insl
push
and
jge
out
out
cld
mov
call
mov
sub
mov
mov
mov
ret
call
imul
mov
fbstp
fucomip
inc
dec
add
mov
jnp
inc
add
jge
cld
xor
int
call
jl
cmp
lahf
cmpsl
add
and
add
stos
pop
mov
and
cmp
pop
add
xchg
mov
pop
jns
scas
out
pushf
outsb
pusha
adc
pop
mov
jno
mov
out
add
roll
add
add
lret
ds
add
inc
sbb
js
pop
push
xor
addr16
out
insl
les
pop
inc
aam
mov
inc
mov
arpl
js
xchg
js
leave
add
outsb
rcrl
inc
mov
js
stc
pop
mov
add
sub
jmp
iret
mov
xchg
mov
inc
inc
cmc
mov
dec
stc
and
out
test
add
jl
cmp
pusha
mov
in
inc
push
or
xchg
call
gs
shufps
js
sub
int3
adc
dec
xchg
push
filds
mov
arpl
add
test
into
popl
add
test
xor
fmull
jo
jo
add
xchg
cmp
mov
andl
dec
sbb
lds
shrb
mov
jg
lods
add
or
and
mov
dec
std
or
fidivrl
stc
ds
outsl
add
add
pop
das
or
mov
jb
and
pop
loop
cmpl
icebp
outsl
pop
and
shll
or
inc
dec
call
or
test
inc
fs
adc
mov
dec
cmp
ret
inc
xor
ljmp
lret
fmull
aas
int
add
push
mov
dec
xchg
and
sar
ja
add
pop
fdivr
maxps
cld
jmp
jg
sbb
pushl
or
or
sbb
inc
fildll
sbb
call
pop
out
mov
xchg
pusha
inc
js
or
inc
and
ss
outsb
mov
jg
or
test
sub
xchg
je
cld
enter
mov
xor
fwait
pop
push
clc
jecxz
loopne
in
push
add
or
ret
rcr
or
inc
pushf
or
jecxz
filds
daa
in
mov
jmp
clc
mov
lcall
add
out
jmp
or
sbbb
push
sub
mov
out
add
int3
addl
ja
in
jmp
sbbb
je
mov
in
inc
pop
and
mov
mov
ret
lret
jg
adc
loope
mov
pop
mov
js
or
pop
or
shr
rorb
sti
mov
iret
mov
add
inc
in
lods
or
cmp
dec
iret
push
or
inc
icebp
mov
push
loope
lret
xchg
or
inc
icebp
fcomps
jo
jns
ds
xor
test
stos
mov
addl
mov
add
adc
mov
sbb
sti
jae
fdivrl
add
jg
nop
xlat
mov
mov
icebp
jo
add
hlt
jmp
fstpt
sbbb
add
insl
idiv
jae
cmp
lods
sbb
ljmp
push
cmp
xor
xchg
xor
addl
adc
push
jnp
incl
aam
adc
repz
insb
ss
std
mov
pop
lret
mov
add
test
xchg
ja
jae
pop
add
testl
push
ja
push
push
shl
ret
hlt
repz
dec
cld
mov
mov
ds
xor
mov
mov
pushl
sarb
add
hlt
stos
add
mov
pop
mov
jge
push
add
jmp
add
jo
jae
jbe
add
repnz
inc
psubq
push
int3
int3
orl
jmp
or
call
call
ret
adcb
scas
mov
push
lds
xor
mov
mov
add
addl
jp
gs
sarl
ret
add
loop
xor
jbe
pop
jg
int
sub
imul
adc
hlt
jnp
or
jns
jb
sub
aam
push
adc
testl
cli
jge
xchg
int3
xchg
jne
and
pop
daa
mov
test
add
push
dec
shr
add
xchg
add
testb
insl
add
and
adcb
or
bound
lret
push
add
pop
inc
xchg
sub
push
bound
sub
inc
pop
mov
out
negl
push
add
fs
lock
cmp
popf
out
cltd
mov
adcl
hlt
fldcw
xor
sldt
add
add
sbb
pop
repnz
pop
ret
mov
movsl
in
scas
mov
push
push
loopne
cmp
or
gs
hlt
pop
mov
cmc
inc
adc
sti
lcall
mov
sub
decl
push
pop
push
or
push
mov
out
cmc
fdivrs
add
add
jb
sbb
xlat
xrelease
fisttpl
inc
mov
mov
adc
aas
add
repz
ljmp
adc
nop
xor
pusha
out
xor
addl
push
inc
dec
push
cmpsb
adc
icebp
xor
addl
mov
lods
ja
and
and
push
jmp
sub
add
add
decl
int3
shrb
add
jb
mov
loopne
les
and
ss
scas
add
pop
daa
and
out
xor
sub
add
mov
cmpsb
stos
sbb
fcomip
mov
mov
mov
loopne
push
es
repnz
add
pop
pop
dec
daa
add
push
cmpsb
fisttps
jl
das
sbb
iret
mov
insb
ret
add
movsl
pop
aas
and
into
mov
ret
scas
cld
jnp
mov
int
pop
dec
sub
pmulhw
jge
movsb
xchg
xlat
ja
jmp
call
iret
lea
sbb
sti
xchg
pop
and
xchg
xchg
inc
test
cmp
rcll
loopne
in
adc
push
stos
mov
js
dec
leave
push
add
loop
pop
shlb
aaa
xchg
xchg
fsubr
add
xchg
inc
iret
add
lret
add
add
mov
pop
and
mov
add
sub
dec
fadds
sub
jnp
test
dec
int3
add
into
jg
push
mov
cmp
ror
test
add
cmpsb
mov
add
add
into
add
and
jo
idivl
les
add
sahf
jo
add
aam
fcomps
add
std
xor
mov
into
mov
in
jo
loop
in
mov
pop
add
add
div
cld
test
sub
ret
cmpsb
imul
add
incl
lcall
jge
cmp
jnp
sbb
movlps
jl
jmp
mov
push
lret
add
decl
dec
cmp
pusha
push
mov
cmpl
pop
push
clc
dec
push
inc
repz
std
fisttpl
outsl
fmuls
shl
ret
or
outsl
xor
push
pop
stos
jae
pop
add
jmp
push
add
push
add
mov
jmp
jl
mov
dec
jge
mov
push
les
ljmp
dec
xor
pop
xor
aam
out
mov
idivb
jo
sub
daa
sbb
fmull
mov
sbb
sbb
sbb
add
out
jle
lds
add
mov
insl
mov
test
paddq
mov
jmp
sarb
popa
in
lret
add
pop
les
jmp
pop
lods
add
add
jb
dec
cld
pop
cs
cld
into
sub
mov
mov
std
lret
add
test
jo
test
fisubrl
inc
lds
adc
xchg
mov
sbb
lea
mov
int3
add
cli
jb
sbb
lret
jg
ror
and
lret
push
push
insb
sbb
fsubrl
add
sbb
fadds
flds
bsr
jmp
pop
je
jnp
and
loop
push
jb
dec
push
cs
icebp
mov
aas
adc
add
xchg
sar
cmpsb
mov
dec
xchg
sbb
test
or
xchg
call
leave
pop
movb
imul
jo
mov
out
inc
imul
xchg
rolb
add
into
adc
add
dec
jmp
out
andl
cmp
dec
or
lcall
push
add
xor
addl
push
jmp
fists
out
xchg
ja
inc
xor
shll
push
sub
out
xor
mov
dec
movd
int3
adc
mov
or
pop
cmp
outsl
mov
shll
add
int3
fdivr
mov
jp
ret
inc
pop
push
int3
jmp
adc
sarb
add
push
pushf
adc
rcrl
mov
ss
sbb
aaa
push
xchg
out
jbe
sbb
mov
add
pop
fdivrl
gs
add
es
in
fcompl
addb
adc
push
scas
and
sbb
stos
scas
mov
outsb
mov
add
fwait
mov
jmp
dec
cmp
add
dec
jb
fdivp
callw
adc
bound
mov
gs
mov
mov
cwtl
aad
sti
cld
arpl
jbe
or
push
push
clc
mov
test
cld
ficoms
bound
roll
fsts
push
fadds
push
add
push
add
inc
inc
xchg
dec
mov
add
pushf
and
and
out
ret
test
stos
jl
ficompl
out
jbe
push
aas
mov
subb
iret
add
sub
dec
push
mov
and
push
ret
fcoml
stos
sub
jnp
out
and
mov
push
pop
inc
and
add
into
add
mov
ret
add
outsl
cs
mov
pop
shlb
dec
push
hlt
pop
aas
and
jle
movl
in
decl
mov
iret
adc
in
testl
pop
dec
jg
in
add
add
pushl
jecxz
call
insl
cmpsb
mov
jecxz
testb
add
add
jmp
call
push
incl
shll
decl
pop
adc
jl
and
jl
sbb
sbb
and
mov
dec
in
pushf
mov
and
adc
test
jo
scas
call
loopne
jnp
gs
int3
jmp
cmovo
filds
sti
lods
sub
mov
mov
cmp
xor
sub
pcmpgtb
adc
shrl
mov
cs
push
fldl2t
data16
cld
pop
cld
jle
and
and
roll
fcom
jg
pop
loope
sbb
xchg
jle
in
popf
push
inc
in
inc
std
jne
or
xlat
sti
push
imul
cmc
sbb
push
cmpsb
inc
rolb
dec
mov
adc
push
xlat
je
cmc
int
inc
lock
fsubl
mov
push
mov
std
inc
cli
mov
pop
add
mov
adc
jb
dec
sti
imulb
lods
bound
push
mov
push
ds
adc
add
pop
mov
add
or
and
and
mov
adcl
pop
ret
out
pop
ljmp
mov
cwtl
cmpsl
add
shrb
mov
pop
push
add
scas
pop
ljmp
pop
cmp
fcoml
jo
ror
dec
ljmp
andb
std
jbe
and
push
sub
jecxz
lods
and
push
dec
jge
testb
add
add
push
push
jge
push
andl
mov
and
add
add
push
addl
push
mov
add
inc
in
movl
repz
jae
in
test
xor
aas
add
cmp
push
xlat
insl
dec
or
movsl
dec
pop
mov
in
dec
and
dec
push
add
xor
sar
jl
xlat
pop
scas
cld
rcr
push
std
cmc
sbb
jb
or
lock
mov
shlb
push
dec
add
cli
in
add
push
inc
int3
les
or
cld
dec
aad
cld
test
popa
inc
clc
sbb
lcall
lods
adc
insb
andb
cmc
iret
or
or
and
jmp
add
lret
fstl
int
add
inc
out
xchg
mov
jb
or
inc
add
xchg
add
iret
xchg
cli
jp
add
or
sbb
mov
inc
add
jmp
xor
inc
loopne
das
test
xor
or
sub
insb
fwait
xlat
push
sub
fiadds
shrb
int3
je
pop
or
bound
sbb
lahf
outsl
or
ret
lret
or
ret
lret
bound
pushf
int3
jnp
mov
mov
and
or
xlat
je
pop
inc
shll
in
or
xlat
xchg
push
hlt
adc
aaa
aaa
push
push
out
ret
push
adc
cltd
iret
jg
inc
rorb
test
pop
mov
and
pop
pushf
or
jmp
pop
cli
mov
adc
fdivrs
enter
lcall
fdivrs
ret
and
imul
std
adc
mov
sbb
mov
call
sbb
lock
rcll
mov
add
ret
push
inc
adc
mov
adc
in
jmp
cmp
add
inc
pop
cmp
clc
call
or
rolb
in
mov
hlt
push
jnp
adc
and
xor
or
cmp
adc
mov
call
add
push
add
cwtl
data16
jecxz
addb
add
add
xor
inc
fildl
sahf
add
pop
mov
aaa
insl
scas
xorb
sti
imul
inc
cmpsb
filds
jnp
movsb
xchg
mov
cmc
movsb
jb
cli
cs
add
shr
ja
inc
jecxz
pop
inc
lods
lods
outsb
add
add
lret
push
into
jo
mov
sbb
inc
int
ret
mov
mov
add
add
jmp
test
or
lods
pop
or
xor
mov
pop
push
add
out
jecxz
mov
rorb
sub
add
add
xchg
add
aam
inc
ja
add
insb
sar
incb
call
jo
les
xchg
xor
xchg
add
call
mov
add
add
mov
mov
dec
xchg
jb
adc
icebp
sahf
or
mov
ret
jne
adc
fiaddl
jmp
mov
ret
mov
adc
inc
adc
loope
or
add
les
sarl
inc
adc
jne
push
mov
jmp
or
jg
inc
push
add
jne
sbb
mov
sar
or
jg
inc
sbb
je
sbb
mov
sarl
inc
sbb
pushf
and
and
mov
rorl
inc
sbb
pop
jo
repnz
adc
push
mov
inc
stc
repz
paddd
mov
add
ss
cld
add
mov
mov
pop
in
inc
mov
cmp
mov
cmpsl
addl
ja
and
push
out
adc
pop
out
test
test
jo
sbbl
out
addr16
in
std
adc
aas
add
cmp
in
dec
idivb
add
add
add
or
std
hlt
add
std
icebp
in
mov
or
repnz
jg
add
xchg
mov
into
pop
leave
mov
inc
push
test
mov
pop
push
or
inc
clc
aas
movsl
xchg
aas
aas
lods
jecxz
int
decl
add
sub
push
int
mov
jmp
ljmp
add
add
dec
stos
mov
add
aas
and
aaa
rorb
addb
sti
inc
add
inc
inc
aad
lea
jb
stos
pop
mov
or
mov
ljmp
sahf
js
je
imul
jmp
mov
jne
ljmp
sti
decb
mov
add
add
pop
pop
aas
ja
adc
mov
sti
push
mov
int3
add
ja
pop
jnp
jmp
jb
inc
icebp
xchg
or
add
pop
xchg
sub
inc
ret
add
sub
dec
adc
add
pop
aas
xchg
ret
ret
dec
mov
movsb
imul
jg
gs
call
add
movsb
enter
mov
push
mov
mov
add
dec
add
push
adc
cld
jne
push
cld
jne
add
push
aad
mov
push
scas
jecxz
lea
push
cli
ljmp
add
ljmp
int3
mov
pop
dec
cltd
iret
call
add
enter
mov
add
fidivrl
pop
add
hlt
pushl
aam
stos
jo
out
cmp
mov
mov
add
pop
jle
lcall
imul
jg
push
push
cld
mov
imul
adc
test
pop
std
mov
push
dec
add
fxtract
cld
adc
hlt
cld
or
int
add
mov
jmp
add
pop
sbb
jb
and
addl
outsb
das
iret
inc
add
cmp
push
hlt
xor
push
hlt
sub
push
hlt
pop
mov
pushf
sbb
mov
test
adc
pop
add
xchg
xor
dec
in
into
or
adc
fwait
aam
cmp
fisttpl
sub
xor
cmp
mov
insb
fwait
cld
dec
pop
add
rorl
add
js
xchg
add
jmp
push
rolb
rcrl
lods
popl
std
mov
push
leave
sti
jmp
inc
int
jmp
sti
dec
xlat
jmp
mov
lds
xchg
enter
or
add
add
call
jb
dec
bnd
dec
repnz
jge
jmp
fwait
stos
ljmp
adc
add
gs
pusha
lret
mov
sti
test
test
mov
call
imul
cld
jle
pop
pop
mov
int
push
xorl
sub
pusha
ja
add
into
fisttpl
or
test
fcomps
jns
add
sub
addb
js
or
mov
dec
cmc
je
push
int
loope
cld
ljmp
int
mov
pop
xorb
cmp
mov
aaa
call
clc
mov
adc
jp
or
mov
xor
add
add
add
pop
or
outsb
ds
repnz
or
inc
add
xchg
cmp
cld
lea
imul
mov
mov
int
repnz
xor
xor
mov
mov
sub
xor
je
mov
outsl
leave
cmpsl
sub
add
xlat
xchg
fwait
jbe
ret
add
mov
add
add
fistps
add
fs
push
sbb
lea
jo
dec
push
test
add
pop
lods
scas
mov
outsl
leave
daa
jo
add
push
pop
jle
insl
dec
daa
jmp
lcall
jmp
push
int3
leave
cmp
ror
sub
add
lret
add
add
mov
and
push
or
and
das
cmp
cmp
add
fidivrs
xchg
movsb
add
outsl
xor
add
cmovnp
dec
mov
push
cmp
lahf
out
test
in
icebp
stos
mov
dec
mov
add
int3
xchg
mov
adc
out
pop
add
add
add
push
das
mov
cmp
push
data16
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
jg
push
adc
jbe
push
or
push
pop
pop
or
push
icebp
xchg
movsl
das
std
adc
ss
push
add
mov
sub
mov
aas
out
xchg
xchg
cld
cmp
cld
mov
or
je
sarl
addb
add
add
pop
pop
push
add
mov
sbbl
push
scas
sub
out
inc
sub
add
stos
jnp
add
es
add
incl
lret
add
fdivrs
mov
adc
xchg
mov
mov
shrb
mov
push
sub
insl
push
pop
inc
add
pushf
jle
mov
inc
shr
sub
mov
nop
rorb
lret
ret
rcr
cmpl
mov
mov
lret
jmp
add
push
call
stos
daa
and
add
gs
iret
test
add
add
daa
push
inc
jp
xor
cwtl
mov
jp
cmp
pushf
mov
rclb
xor
xchg
mov
cmp
pop
sbb
mov
inc
adc
arpl
inc
jmp
adc
add
rolb
add
push
fldl
test
fwait
call
add
add
dec
rcr
push
add
sub
mov
lcall
cmpsb
bound
add
lock
outsb
jl
lret
imul
inc
cmp
mov
dec
test
jg
dec
ljmp
sbb
rcrb
add
insb
or
lcall
imul
inc
dec
add
pop
mov
dec
push
stos
mov
stos
pusha
pop
lea
mov
add
add
push
inc
lcall
das
shlb
add
mov
mov
jne
inc
add
and
and
cmp
jl
sub
movsb
jge
mov
mov
ret
int
clc
mov
cmpsl
adc
mov
inc
std
or
inc
add
jb
dec
add
adc
lods
jl
clc
sub
imul
jno
sub
jne
dec
cmp
ret
mov
xor
daa
lds
int3
lret
lret
in
jle
leave
pusha
inc
hlt
cli
sub
inc
dec
enter
test
lods
mov
cmp
cmp
mov
stc
jl
enter
mov
leave
add
mov
ja
and
fwait
pop
test
stos
add
dec
inc
or
dec
dec
cld
cmpsl
and
test
call
sbb
mov
pusha
fwait
jp
jmp
fwait
cltd
aad
nop
mov
push
adc
out
in
lods
aaa
out
cmp
and
rolb
aad
sbb
bound
push
call
stos
add
or
shll
mov
xchg
dec
mov
cmpsb
das
and
pop
cmp
int3
add
mov
in
adc
add
pop
push
ja
xchg
push
cmp
ret
cmpsb
push
call
xor
sti
jmp
jmp
push
mov
faddl
add
mov
cli
mov
add
dec
mov
sub
add
xor
std
xchg
sub
add
mov
movsl
adc
or
push
cs
rclb
mov
add
inc
jmp
aas
inc
and
cltd
mov
sbb
inc
and
pop
leave
rcrb
mov
sub
inc
add
dec
dec
outsl
and
add
xor
xchg
add
add
and
loop
pop
dec
jecxz
cld
int3
mov
cld
adc
cmp
orl
stos
stos
daa
std
mov
dec
data16
jecxz
pop
lahf
cmp
inc
movsl
jl
sbb
mov
out
jbe
add
xor
lock
out
mov
xor
lock
add
lea
jnp
jnp
in
das
std
in
aam
aas
add
xchg
jb
or
jb
int3
test
inc
cmpsb
sub
inc
call
outsl
mov
jp
jbe
add
and
sub
xor
ret
jp
mov
xor
inc
movsb
movsl
test
aaa
mov
jmp
add
push
inc
sbb
stos
adc
fsubl
je
jecxz
cli
mov
sbb
add
outsl
je
add
int3
xchg
stos
add
or
pop
std
add
add
sbb
mov
icebp
add
data16
jnp
or
add
jb
and
xchg
or
add
xchg
xchg
mov
aad
push
pushf
add
add
dec
jge
add
pop
mov
enter
insb
or
add
mov
imul
jb
cmp
or
int3
add
lods
push
test
inc
mov
es
jmp
jae
inc
jmp
scas
xchg
out
pushf
cmp
sub
inc
xchg
add
pop
cmp
lock
add
inc
imul
inc
ss
in
movsb
dec
sbb
cmpsb
inc
dec
ljmp
jg
mov
cld
imul
imul
pop
pop
dec
push
bound
or
fxam
pop
leave
sbb
mov
push
or
std
and
imul
fisttps
sbb
xor
push
xchg
push
inc
adc
lock
shll
add
movsb
xchg
mov
mov
xchg
gs
add
out
xchg
mov
mov
stos
cmp
incl
out
or
push
lret
repnz
mov
mov
sbb
dec
adc
xchg
aam
mov
jp
cld
scas
dec
into
cmp
testb
gs
cli
out
jecxz
incl
or
jge
or
mov
or
aam
int3
dec
sub
xor
int3
jmp
insb
xchg
jmp
repz
aam
iret
add
mov
inc
test
add
and
aas
mov
fcmovne
jmp
xor
call
inc
in
mov
cmp
add
add
fsubrl
icebp
aaa
int3
pusha
inc
and
insb
les
insb
cmp
mov
fbld
jne
lds
add
mov
dec
in
mov
sub
inc
int3
xchg
sarl
add
out
add
imulb
pushf
xchg
mov
adc
and
je
lock
add
mov
lea
out
fs
aaa
sti
hlt
ja
inc
jmp
jl
and
add
pop
movsb
sbb
mov
data16
and
call
push
mov
pop
mov
inc
and
incl
in
inc
push
inc
dec
cld
adc
in
outsb
add
loop
call
inc
repnz
add
mov
push
and
dec
bound
jmp
scas
mov
add
add
lret
xchg
xor
jmp
sti
jmp
jle
test
ret
xor
rolb
cmp
jns
add
cmc
push
adc
adc
adc
add
invd
push
sub
enter
out
loop
mov
clc
gs
loopne
out
aas
push
fidivrs
cmp
sub
jge
lock
dec
inc
cld
repnz
sub
push
movsl
dec
inc
add
xchg
loope
cmpb
std
xchg
into
call
mov
mov
ret
hlt
push
repnz
mov
inc
push
loop
addb
add
add
fstps
jp
jmp
mov
lods
mov
pop
aas
fsubr
inc
es
cmp
rclb
shrb
jmp
jns
mov
add
incl
leave
add
iret
dec
sub
test
mov
in
orb
add
mov
addb
add
add
in
and
inc
add
imul
call
cmp
add
adc
add
push
in
push
dec
or
lods
add
adc
mull
mov
idivb
sub
test
push
mov
in
push
add
add
push
int3
add
lret
bound
std
cmp
jmp
imul
xchg
xor
ret
lret
bound
les
inc
sbb
clc
push
add
orl
adc
pusha
icebp
and
insb
lea
mov
int
push
call
add
dec
sub
icebp
add
pushf
mov
inc
test
scas
mov
xor
jg
loope
add
sbb
sti
decl
push
push
add
fwait
pop
xor
adc
enter
flds
ljmp
popf
cld
adc
mov
jns
inc
sub
add
aam
in
ljmp
push
dec
dec
out
mov
incl
adc
xchg
inc
and
dec
inc
add
add
inc
jg
and
mov
xor
lods
aad
aas
mov
filds
es
jg
addb
adc
callw
andl
pop
leave
lea
adcl
les
add
xchg
sub
shlb
jae
lret
mov
repz
or
ret
out
or
jmp
in
adc
ds
or
sbb
jl
outsb
add
lods
daa
out
int3
xlat
inc
icebp
xchg
insl
inc
add
cmp
add
orl
sub
add
int3
cmp
and
ljmp
sbb
pop
rcr
sub
mov
mov
int3
mov
push
jmp
pop
add
xlat
sub
sub
int
lret
outsb
popl
and
pop
orl
sub
jmp
ret
mov
jne
xchg
add
std
out
call
or
adc
jge
idivl
movsb
shll
adc
inc
cmp
and
pop
inc
ljmp
add
test
sub
incb
aas
inc
inc
out
je
and
add
orl
push
lret
xor
outsl
push
cltd
jnp
dec
leave
mov
cli
movsb
inc
ja
dec
cld
sbb
inc
mov
inc
dec
cmp
mov
decl
inc
lds
mov
add
rclb
add
add
sbb
out
ficoml
pop
sbb
xchg
call
mov
rclb
aas
sti
call
stos
pop
and
pop
or
add
sub
and
cmp
and
mov
add
add
mov
cmpsb
lds
js
idivl
insl
xor
cmp
and
jb
add
add
inc
mov
incl
mov
incl
and
inc
add
jmp
cwtl
mov
icebp
push
outsl
fdivrl
add
fldl
aad
cmp
enter
inc
lret
jmp
add
clc
adc
jecxz
jbe
pop
inc
repz
adc
add
inc
xor
mov
ss
in
cmc
aam
mov
push
cmp
jl
mov
jmp
and
mov
sub
pop
xor
addl
adc
cmp
mov
or
insb
enter
jge
or
ret
ja
lods
adc
xacquire
mov
lret
add
add
cmp
jnp
and
sub
jns
inc
jno
out
xor
popf
cmpsl
add
fisubrl
cmp
fstp
loopne
loopne
push
inc
or
xor
out
cmp
xchg
and
jmp
pop
stos
inc
vandps
xchg
sti
testb
mov
roll
inc
pushf
add
mov
xchg
push
in
jle
pop
jge
ljmp
pop
fmull
jo
repz
je
fiadds
lods
lahf
into
add
push
inc
lcall
mov
xor
data16
sbb
jmp
jg
call
jp
push
cmpsl
incl
add
push
add
fldenv
mov
and
pop
inc
and
aaa
pop
xchg
pop
add
mov
jp
cmp
out
mov
jle
add
and
mov
mov
orb
mov
mov
daa
mov
add
push
push
dec
out
ds
add
outsb
mov
inc
not
mov
xor
into
imul
bound
and
or
pushl
incl
mov
sub
mov
mov
lcall
mov
test
jp
into
pusha
rclb
ss
ljmp
ret
jnp
adc
and
sarb
mov
out
jp
test
ret
jno
add
xchg
scas
cwtl
jmp
popa
out
insb
shr
gs
add
inc
int3
jmp
rorb
int3
jmp
ret
cmpsl
xor
add
xor
loop
sbb
mov
stc
orb
add
aaa
mov
jno
lea
ds
mov
clc
sub
pop
inc
lret
mov
test
in
xorl
mov
dec
jmp
push
xchg
and
mov
pop
loopne
lods
pmulhuw
popf
decl
mov
out
adc
mov
lahf
cmpsl
sti
pop
nop
ljmp
add
iret
add
out
pop
push
adc
jg
pop
lock
pusha
inc
fiadds
pop
dec
and
lret
adcb
ljmp
movsl
in
lret
xor
jp
dec
inc
and
xchg
std
subl
adc
xchg
jp
dec
cmc
xchg
movsb
inc
and
test
aam
cmp
leave
add
movsl
lds
mov
movsl
lds
xchg
lds
lea
dec
mov
ja
and
outsl
sbb
ja
sbb
lea
add
mov
incl
adc
and
add
add
jge
icebp
adc
push
xchg
add
dec
repz
pop
cmp
test
add
xor
call
sbb
and
and
add
add
xor
sbb
and
and
or
push
dec
inc
jb
xor
leave
and
mov
ror
lret
mov
adc
sbb
dec
mov
jae
int3
insb
enter
mov
lock
adc
int3
jmp
subb
push
add
and
push
mov
stc
pop
iret
add
and
shll
adc
aam
dec
test
mul
sbb
lock
push
and
out
lock
outsb
mov
in
mov
inc
jbe
or
hlt
inc
mov
inc
jmp
rcll
int3
lret
xchg
mov
loope
dec
ret
pop
and
out
or
and
fiaddl
out
push
rcrl
and
mov
push
dec
add
pop
je
sub
dec
pop
int
mov
add
test
loopne
lea
xor
cld
mov
or
cmp
or
mov
call
add
int
setl
xchg
call
mov
gs
test
cmp
test
push
sub
add
or
and
add
mov
xor
fwait
cli
mov
jp
inc
imul
inc
loope
add
mov
mov
cld
je
xacquire
cld
es
add
fisubl
dec
push
push
prefetch
add
jbe
dec
idivl
rolb
ljmp
jne
sbb
test
pop
std
mov
les
in
lret
cmpsb
rolb
out
sahf
mov
out
jns
mov
fiadds
int3
mov
inc
mov
sub
or
and
mov
add
arpl
incl
fldt
mov
mov
incb
xor
sbb
sub
int3
loope
inc
int3
fs
jae
data16
int3
and
inc
sbb
xlat
mov
add
stc
pop
jne
loope
neg
push
mov
mov
test
clc
add
mov
jb
mov
mov
mov
lcall
sub
add
mov
jg
push
dec
add
testl
mov
insb
jns
or
hlt
add
adc
pop
adc
sbb
jmp
js
mov
orl
xor
shr
packuswb
jb
and
push
cld
lret
test
enter
cmp
add
pop
cld
mov
jb
cmpsl
mov
sub
add
xchg
xchg
add
fld
add
lahf
sti
jb
dec
repnz
pop
xchg
inc
add
dec
xor
ret
jmp
call
push
xlat
push
cmp
dec
mov
int3
test
imul
add
cmp
jmp
pop
xchg
movl
ret
dec
mov
pop
cmpsl
out
add
repz
sbb
in
push
sbb
imul
scas
out
mov
inc
gs
aas
or
jecxz
jne
and
loop
data16
and
xor
add
dec
adc
lret
fcompl
call
mov
pop
pop
add
aaa
rorl
add
cmpsb
incl
xchg
pop
push
call
mov
xor
mov
call
add
aam
pop
in
adc
cmpl
mov
push
mov
sub
addr16
cld
in
jle
inc
add
add
adc
mov
xor
add
jmp
adc
shlb
pop
jnp
pop
adc
mov
xor
inc
int
add
int3
push
add
hlt
subl
cmp
sbbb
mov
fsubl
adc
mov
arpl
divl
lret
jmp
stc
std
or
iret
pushf
jmp
sub
icebp
and
pushf
fs
out
add
mov
lret
mov
add
add
lret
scas
and
ficoml
dec
and
mov
ret
mov
add
repnz
je
adcb
popf
adc
orb
cmc
xor
or
daa
xchg
add
add
sub
shrb
pop
sbb
mov
mov
ljmp
cltd
call
add
inc
sbb
xchg
hlt
jmp
call
inc
test
negl
adc
jb
mov
stc
add
test
aam
pop
cmp
mull
sub
mov
xlat
sti
ljmp
cmp
inc
pushf
aas
add
iret
add
sbb
pop
jmp
add
stos
sbb
add
inc
rolb
add
in
add
into
push
lea
dec
call
mov
das
sub
ljmp
fs
call
dec
push
pop
pop
xchg
dec
mov
ret
dec
push
das
adc
call
gs
dec
mov
inc
into
shll
add
iret
dec
sarb
add
shll
add
repz
test
add
arpl
shlb
mov
jmp
movmskps
xlat
mov
rorb
mov
jmp
decl
add
js
insb
mov
lea
xor
ja
into
mov
lret
adc
lock
addb
add
add
lret
jmp
adc
das
cld
aas
add
mov
jno
pop
cltd
cld
lret
pop
or
orb
mov
push
jns
hlt
sti
push
negl
ljmp
je
dec
int3
mov
cmp
ret
mov
fisubrs
xchg
in
adc
inc
xor
pop
lret
andb
mov
inc
xchg
out
sti
or
lar
mov
test
cld
and
mov
stos
scas
push
xchg
lcall
hlt
dec
jl
jecxz
mov
loopne
je
xchg
and
in
xchg
call
repz
push
jbe
cld
cmpsl
movl
add
cmp
add
and
cs
bound
adc
out
sbb
adc
sbb
shl
cmp
loop
fwait
out
je
out
jae
sbb
pop
push
adc
inc
xchg
mov
addb
or
andl
repnz
pop
add
sbb
cmp
or
jmp
and
and
mov
mov
add
add
pop
push
mov
dec
les
or
cmp
icebp
add
idivl
cmp
pop
adcl
out
test
jl
repnz
push
pop
into
mov
cmp
sbb
popf
mov
xor
les
add
jl
mov
inc
sbb
lahf
jnp
mov
jle
add
imul
dec
shll
push
jl
mov
xor
push
incl
push
or
rcrb
mov
rorl
lea
inc
push
fimuls
jo
arpl
add
repnz
movsl
pop
icebp
dec
sub
jmp
shrl
imul
out
jl
ret
out
jns
push
out
jp
loope
jnp
dec
leave
add
push
mov
add
int3
jmp
xor
sub
and
dec
mov
icebp
mov
lret
jmp
and
lods
pop
adc
pop
adc
test
nop
xchg
pop
adc
lock
inc
add
dec
add
add
roll
test
daa
cmpsl
xchg
dec
inc
int
inc
test
adcl
sub
jge
or
mov
and
and
and
pop
xchg
cli
aam
mov
and
fbstp
xchg
adc
bound
and
xchg
rclb
std
clc
inc
inc
jo
add
nop
adc
pusha
out
sub
adc
lahf
sub
int3
pop
pop
xchg
dec
mov
ret
bound
cmpsb
adc
inc
cmp
xchg
cmpb
add
mov
push
rorb
pop
sub
add
inc
or
fildll
inc
std
xlat
inc
mov
jmp
in
jmp
push
add
jl
ffree
xorl
pop
int
cld
adc
mov
pop
adc
adc
inc
std
jecxz
lea
popa
sbb
xor
or
adc
incl
scas
outsl
cmp
inc
movsl
jbe
in
jnp
or
scas
fcos
cs
int
adc
push
jmp
mov
mov
sti
push
jno
imul
add
add
jl
aas
movsb
lret
enter
outsl
sti
adc
movsb
jg
in
add
pop
mov
add
add
adc
mov
and
xor
cld
fstpl
hlt
stc
pop
push
mov
les
jecxz
outsb
xlat
jecxz
add
jecxz
loop
jno
jmp
and
pop
out
orb
int
add
sbb
jnp
out
int
mov
adc
lret
imul
ret
out
xlat
and
add
out
mov
out
lret
aas
add
clc
add
rcrl
xchg
lcall
nop
hlt
pop
adc
pop
iret
nop
cmc
daa
or
add
sub
cld
dec
roll
adc
sti
add
adc
add
je
in
je
fdivr
sti
fcoml
inc
jmp
movsl
mov
pop
push
mov
adc
int
nop
je
pop
int3
push
subl
adc
cmp
and
ja
call
push
cld
mov
mov
hlt
adc
add
repnz
pop
sbb
nop
sbb
or
add
enter
sub
lods
leave
mov
mov
jecxz
push
cmp
and
and
add
mov
push
inc
xchg
push
inc
test
mov
inc
sbb
pop
cmp
and
inc
ja
add
scas
inc
out
push
inc
cld
je
mov
cld
adc
loop
pop
adc
movl
add
push
push
clc
ljmp
aas
and
mov
pcmpgtb
roll
xor
add
push
insl
lods
xor
cld
insb
andl
cmovo
hlt
aas
add
inc
out
jmp
scas
lahf
out
inc
movsl
add
cmp
or
mov
nop
rcll
ja
incl
daa
bound
lds
jl
push
add
add
sub
dec
lock
scas
test
das
ljmp
in
mov
pushf
xchg
fiadds
addl
hlt
jp
out
mov
push
loop
out
cmp
add
or
call
popa
repnz
ret
xlat
out
ret
mov
add
mov
call
and
cmpsl
lea
add
mov
push
adc
scas
add
lret
insb
inc
repz
add
in
adc
or
or
sbb
movzbl
mov
js
fisttpl
test
es
cmc
sbb
sbb
loopne
int3
test
das
es
jmp
ret
mov
in
push
add
flds
or
mov
mov
or
push
out
push
sbb
inc
leave
rclb
and
mov
add
stc
and
add
push
bound
or
add
test
dec
mov
mov
mov
pop
clc
inc
mov
or
or
fnstcw
push
xor
mov
pop
imul
testb
add
add
addr16
sbb
push
mov
imul
or
iret
test
in
int3
std
xor
data16
cltd
iret
jg
lods
fdivrl
jo
movsb
add
test
testb
adcl
iret
pop
ret
repnz
popf
inc
mov
je
add
add
pop
push
mov
jl
xchg
sti
sub
or
push
mov
add
push
in
or
sub
inc
mov
or
xchg
fsubs
hlt
dec
repz
mov
pop
inc
insl
call
popa
push
add
mov
ret
fcomp
or
out
inc
jae
add
imul
pop
cmpb
rorb
or
sub
jmp
push
test
or
cs
incl
add
push
ja
pop
std
adc
pop
cld
xlat
insb
mov
ljmp
testb
sarb
sbb
mov
out
idivb
fldt
add
mov
sub
mov
add
out
mov
fistps
mov
push
push
lea
hlt
add
mov
aam
xlat
push
je
add
mov
add
icebp
dec
push
sub
lods
add
lret
pop
pop
orb
aaa
mov
pop
in
fisttpl
aam
mov
fildll
repz
int3
add
flds
jne
and
pop
hlt
xchg
inc
cld
xchg
jle
data16
adc
mov
stos
decl
sub
sbb
sub
sub
add
add
push
sti
hlt
roll
adc
movb
in
inc
add
add
xchg
xchg
mov
jmp
push
sbb
cld
xchg
fildl
sbb
add
add
test
add
add
in
pop
ja
imul
cmp
pop
push
xchg
roll
add
inc
add
push
mov
mov
insb
hlt
repnz
sub
jg
rcll
pop
and
aas
dec
xor
and
inc
stos
faddp
data16
clc
mov
pop
push
aas
and
pop
and
cmpsl
insb
gs
xchg
repz
into
and
scas
cld
mov
xor
insl
addb
pushf
in
add
mov
test
adc
js
mov
mov
xchg
mov
ja
call
cmp
inc
mov
scas
mov
shlb
inc
jne
ret
add
rorl
jge
and
xchg
ret
xchg
stos
cld
cmc
shr
aas
add
shll
inc
addb
scas
xor
xor
mov
add
add
jae
add
pushf
pushl
mov
adc
and
mov
add
hlt
adc
sti
xchg
out
lock
jle
push
scas
xor
shr
iret
fsubrl
add
xchg
rcll
ror
insb
dec
cmp
mov
pop
iret
jmp
xorb
fucomi
ss
out
fdiv
lock
mov
hlt
add
int3
push
jl
lods
add
lret
push
cmp
xor
outsl
mov
pop
repz
scas
test
mov
bound
leave
adc
add
push
inc
cmp
inc
jmp
scas
push
or
jno
test
xor
adc
push
inc
mov
inc
add
add
inc
jmp
push
cli
mov
imulb
push
jb
and
push
add
push
mov
push
push
lret
idiv
dec
rolb
mov
adc
into
or
add
pop
adc
jnp
add
pshufw
xor
push
push
inc
push
jns
aas
and
cmp
je
jl
dec
add
mull
dec
std
mov
mov
enter
icebp
add
bound
and
enter
shrl
inc
pop
adc
pushf
inc
decl
aam
adc
push
inc
or
push
or
lret
test
cmpl
push
adc
pop
ss
dec
in
xor
add
out
imul
jmp
add
je
mov
addr16
int3
push
jmp
mov
add
call
pushf
sub
hlt
xchg
jmp
icebp
mov
push
stos
inc
push
je
cmp
cld
adc
call
insb
add
jne
je
dec
jmp
repz
add
out
mov
movsl
jg
in
call
clc
add
jecxz,pt
cmp
add
int3
iret
add
ljmp
jge
add
sbb
and
jmp
scas
orb
and
or
xchg
cmpsl
add
add
int3
jmp
lock
lret
insb
mov
lcall
add
xor
xchg
add
and
cmp
jg
sub
sbb
jne
test
in
add
pop
push
inc
std
js
ret
jmp
sub
adc
xor
mov
ret
addl
pop
js
int
int3
add
push
je
jb
dec
ret
int
shlb
int3
adc
sbb
sub
add
icebp
adc
cld
dec
shr
inc
test
clc
dec
sar
jg
or
rolb
cmp
push
lret
add
add
xchg
pop
sbb
sbb
jo
mov
test
int3
pop
push
lret
adc
cmpsb
jnp
xor
push
mov
js
mov
in
inc
imul
add
push
add
lea
xor
decl
add
pop
pop
cmp
mov
inc
mov
movsb
jmp
or
jp
pop
adc
enter
aaa
push
push
sub
je
xchg
pop
push
push
inc
clc
repz
mov
lock
jge
pop
mov
ljmp
lock
jae
inc
mov
xor
jae
in
mov
cltd
mov
push
adc
je
lds
and
in
imul
push
inc
aas
call
jns
jl
add
roll
jo
mov
int
inc
pop
add
sub
sub
mov
jbe
cmpb
or
push
jae
int3
cmc
jl
jae
push
in
xor
int3
xor
nopl
add
jle
ret
ret
jle
add
push
roll
inc
stc
inc
mov
mov
adc
mov
ljmp
xchg
add
aaa
outsl
les
mov
jp
stos
pusha
mov
push
inc
sbb
test
hlt
and
cld
cmp
or
jle
scas
outsb
cmp
jmp
addb
add
add
jge
pusha
fsubrs
inc
std
add
add
push
mov
popf
mov
xor
jmp
call
push
lret
sub
jmp
dec
push
cwtl
dec
push
icebp
xchg
in
jle
mov
fists
jmp
test
push
bound
faddl
jb
inc
jg
dec
jge
leave
mov
or
xchg
clc
lret
jecxz
sti
fwait
enter
mov
add
jo
fldl
sbb
jb
inc
fcmove
mov
and
jmp
popf
sahf
add
test
jle
lcall
push
test
dec
or
test
sbb
sti
out
xor
jmp
push
xor
xchg
pop
nop
das
rclb
add
add
jmp
push
xchg
jl
add
loop
sbbl
jae
cltd
enter
js
pusha
sbb
enter
add
add
enter
shrl
jne
or
push
sub
jae
adc
jmp
jge
rcll
jnp
or
fs
add
mov
cwtl
adc
add
cmpsb
jle
sub
mov
dec
fmull
out
push
add
jnp
mov
imul
pop
gs
add
cli
and
push
and
add
aas
mov
dec
mov
dec
and
mov
out
add
dec
lods
add
xchg
outsb
shlb
pop
aaa
fildll
dec
in
lret
jp
mov
test
add
dec
std
daa
call
jp
add
jb
cld
add
push
inc
add
mov
loopne
test
outsb
push
or
lret
jmp
scas
adc
js
mov
add
int3
cmpl
xlat
dec
or
or
jmp
mov
jp
ret
sti
push
add
ds
add
add
in
js
inc
idivb
test
dec
jbe
jmp
xorb
in
les
jle
js
std
ret
and
add
xchg
xchg
xor
and
xor
fstpt
les
cmp
lret
xchg
fmuls
xchg
add
int
rolb
jle
xchg
sahf
pushf
add
loop
ja
inc
imul
std
jmp
add
jle
add
sbb
push
lds
xor
jl
cli
mov
xchg
mov
stc
inc
or
stc
inc
xchg
sbb
addb
cwtl
sbb
lea
dec
fcomps
call
jnp
pop
pop
jl
add
push
add
jae
push
jmp
adc
add
inc
xchg
cmpsb
andl
adc
jns
das
cmp
decl
ds
jns
sub
add
jp
or
mov
sbbl
xorb
jnp
xchg
mov
fiaddl
add
int
xor
in
shl
jo
push
inc
add
add
jg
cld
int3
in
push
or
mov
ljmp
aas
jb
lret
outsb
sarb
lods
andb
and
hlt
sbb
iret
jl
outsb
mov
inc
lods
sti
pop
push
inc
add
push
sub
fldl
mov
arpl
jbe
add
or
pop
add
jmp
add
mov
bound
inc
outsl
aad
js
scas
sar
or
xlat
inc
adc
sahf
jecxz
dec
lods
mov
iret
decl
inc
pushf
cmp
pop
in
or
decb
jbe
inc
aas
mov
pop
dec
add
loope
jmp
mov
jmp
pusha
stos
add
mov
push
sahf
enter
mov
mov
and
jmp
xchg
data16
add
add
add
test
add
cs
jl
sbb
cmp
dec
add
jmp
ds
add
int
inc
inc
shr
js
push
ja
sub
int3
outsb
add
repnz
in
push
fdivp
sti
incl
pop
cmp
sbb
enter
xchg
gs
call
mov
jg
lods
push
mov
xchg
mov
pusha
flds
nop
cmp
mov
aas
dec
lea
pop
cld
jmp
jle
cld
arpl
call
test
mov
shlb
xor
or
inc
add
jae
dec
add
call
std
jg
ja
mov
mov
add
jl
rclb
jge
sbb
pop
pop
aas
out
or
popl
das
leave
xor
enter
lret
push
test
pop
incl
movsl
mov
cmpb
push
dec
fimull
fnstenv
mov
add
xor
sti
add
jg
fldenv
xor
dec
jbe
scas
nop
mov
out
or
inc
adc
mov
xor
out
sub
or
jp
dec
cmp
push
sbb
lock
mov
out
push
mov
add
or
out
test
pop
mov
pop
mov
jecxz
loop
negl
shrb
add
jae
jp
dec
mov
out
sub
sub
jb
std
dec
jae
jecxz
or
jle
imul
or
sbb
jecxz
or
movsb
push
adc
dec
adc
push
push
sbb
cld
pop
ret
inc
jmp
icebp
mov
cmp
je
mov
push
mov
fidivl
hlt
test
add
add
dec
clc
in
inc
jg
add
add
fcmovnb
or
jae
ret
sbb
rcrl
cvtdq2ps
and
lea
repnz
inc
in
outsb
pop
sbb
jmp
mov
adc
lds
shlb
call
int
add
mov
mulb
lahf
cmp
sbb
jo
mov
add
adc
push
loop
and
pop
int
push
xchg
outsb
or
dec
jge
sub
inc
and
xorb
lods
add
leave
int3
jne
test
sbb
sbb
add
pop
jge
ss
sti
mov
push
lea
lahf
push
shl
mov
add
dec
add
testl
std
outsl
push
or
test
mov
cmp
jb
xor
inc
fsubrl
out
add
imul
and
push
fiadds
and
xor
pushl
sub
scas
add
mov
lds
push
mov
lahf
mov
incl
add
mov
sbb
scas
in
out
add
or
test
shll
inc
sti
inc
sub
add
mov
ret
enter
jge
iret
and
pop
leave
jmp
xor
jp
in
push
or
cli
out
sarl
mov
ss
jmp
inc
orl
add
ret
jle
mov
dec
jmp
or
inc
cmp
or
mov
xchg
movsb
orb
add
dec
xor
inc
xor
test
add
outsl
rolb
mov
mov
das
push
jne
test
test
cmpsb
lea
sar
or
add
cltd
test
push
mov
je
pop
psubsw
int3
sti
jge
fiaddl
lret
xchg
cmp
in
xor
dec
push
sub
push
mov
shlb
mov
enter
test
sub
leave
add
cmpsb
adc
mov
fiadds
ljmp
xchg
mov
std
aaa
xor
std
and
add
add
inc
push
add
inc
dec
add
jg
jbe
inc
add
xor
loopne
pop
sbb
test
adc
test
sbb
test
sbb
ds
and
cltd
cld
aad
or
add
add
add
sbbl
add
or
arpl
out
call
mov
pandn
xlat
add
add
cld
dec
xchg
std
rcll
lds
or
clc
mov
xor
xor
outsl
add
inc
arpl
addb
jae
mov
pop
xchg
cmpsb
cmc
int3
mov
add
nop
inc
and
iret
out
out
add
mov
adc
mov
sub
jle
add
call
jmp
add
ret
cmpsl
add
xor
xlat
push
imul
adc
imul
inc
mov
mov
imul
cmp
push
adc
and
lahf
pop
sub
and
jmp
stos
mov
mov
movl
int3
outsb
and
pop
mov
imull
pop
add
adc
sti
js
into
sbb
sti
into
pop
add
into
fisubs
lds
and
loope
addr16
icebp
js
out
mov
push
sbb
addr16
aad
push
and
test
orl
in
xorl
lret
mov
fimuls
imul
add
add
shlb
dec
jno
jmp
xchg
and
sub
cs
lret
lea
xchg
and
add
ss
push
dec
mov
or
cmp
imul
push
xor
dec
out
insb
xchg
pop
inc
stc
addl
je
xchg
xorb
imul
pop
and
pop
aas
and
xor
push
in
jae
call
in
jo
loop
pop
sbb
cwtl
pop
adc
dec
stc
add
inc
and
je
mov
adc
call
movsl
hlt
xor
daa
adcb
subb
adc
pop
mov
test
mov
cmp
add
mov
xor
adc
mov
add
adc
xor
stc
and
mov
dec
in
daa
sub
leave
pop
cmp
and
repz
jb
push
xor
rclb
inc
loopne
push
jae
push
jnp
mov
iret
lea
lret
lea
mov
int3
add
mov
scas
lods
mov
scas
mov
addb
add
add
cmp
add
dec
jmp
xchg
cmp
xlat
fs
addr16
add
int3
sbb
mov
push
loopne
rorl
cmp
cmp
push
jns
mov
jmp
mov
or
aam
push
sbb
mov
and
push
xchg
inc
int3
jmp
fistpll
jmp
add
add
add
js
and
std
lret
add
push
push
dec
lds
outsl
add
add
jg
sbb
jbe
push
add
int
addr16
jmp
mov
loop
sbb
lret
xchg
and
bound
cmp
mov
and
call
enter
push
mov
jmp
add
and
fistl
pop
push
roll
add
pop
dec
data16
add
dec
aas
and
jp
adc
stos
or
mov
dec
std
add
dec
dec
dec
push
jl
push
xchg
adc
mov
dec
packuswb
mov
inc
or
jge
push
pop
adc
add
ror
add
xor
lcall
iret
add
adc
cmpb
repz
outsl
xor
sub
xor
jl
sbb
lock
das
fstpt
mov
scas
adc
test
addl
inc
xorl
mov
pop
xor
mov
or
mov
xor
add
jae
or
aaa
add
and
leave
and
loopne
adc
inc
pushf
dec
testb
adc
cmp
testl
inc
pop
mov
inc
subl
sbb
pop
xchg
xlat
mov
lret
icebp
int
pop
push
call
pop
cmpsl
sub
pop
jg
call
sub
xchg
add
add
add
push
movsl
jae
dec
pop
fs
inc
add
mov
add
dec
add
insl
fildll
sahf
gs
fadds
call
fbld
sub
int3
jmp
loopne
or
mov
call
aad
arpl
push
push
sub
add
pop
js
inc
test
sub
add
dec
mov
add
nop
inc
call
push
push
shr
add
sti
lods
das
lahf
call
cli
int3
dec
shlb
and
nop
and
jns
int3
add
scas
cmp
push
pusha
aas
scas
inc
out
subps
sub
push
inc
add
xchg
aam
and
mov
jae
jnp
and
rcll
add
scas
adc
js
and
add
std
aaa
shlb
jo
and
outsl
add
or
and
add
cld
je
and
mov
into
add
mov
cmp
pop
loope
jns
xor
push
fcoml
roll
sbb
xchg
jecxz
loopne
add
imul
jmp
sar
test
xor
inc
insb
push
mov
jg
repnz
int
rolb
dec
cmc
outsl
jecxz
xchg
int
jmp
imul
sub
jae
mov
pop
mov
iret
mov
lret
mov
fildl
sub
xchg
into
aam
hlt
sarb
int3
into
in
or
cld
inc
cli
dec
mov
mov
pop
mov
sub
xchg
jae
mov
adc
add
mov
xchg
add
inc
sbb
jge
and
addb
aad
jp
ret
lret
das
jae
iret
jge
sbb
das
jae
pop
jl
fmul
inc
dec
inc
test
add
add
sbb
shll
mov
jg
cmpsl
mov
add
push
lock
or
xchg
ret
cmpsl
fcomi
add
scas
lcall
inc
mov
jmp
lcall
stos
sarl
leave
jmp
fmuls
dec
aad
push
stc
xor
js
rcrb
in
sub
or
or
sub
add
push
add
or
lds
repz
xor
sti
ret
add
insb
rcr
adc
cld
icebp
add
addr16
xor
sub
pop
cmp
es
sti
insl
ret
fsts
jb
lret
push
cs
add
add
cmc
push
or
insb
ret
ficompl
add
popf
shrb
mov
mov
push
pop
sti
jb
dec
sti
pop
ds
sti
fidivrs
fxch
xchg
test
add
lret
mov
lret
jmp
sti
lcall
jo
sbb
and
ffreep
mov
sbb
inc
inc
sti
call
bound
add
cmc
call
sarb
mov
add
jnp
cltd
insl
add
mov
add
inc
and
lcall
rcrb
add
add
rcrl
fxch
mov
ror
xchg
add
jae
addb
daa
cld
pop
outsl
jp
sbb
addr16
xchg
in
mov
add
xor
enter
cld
cmp
incb
push
push
pushl
ret
and
jae
add
jae
xor
aas
imul
bound
xchg
add
add
mov
jl
add
add
out
cmp
pop
jae
add
lods
jbe
sbb
jp
clc
lret
shr
leave
lret
jmp
fmuls
lret
jmp
repz
enter
jle
pop
jmp
add
dec
call
lret
mov
mov
loop
add
repz
or
add
mov
shll
or
add
inc
sub
adc
jl
cmpsl
imul
push
ficoml
push
jmp
in
js
paddd
mov
add
or
mov
add
pop
sti
bound
inc
je
call
pop
cli
mov
pop
and
fiaddl
ret
xchg
pop
subl
mov
mov
addr16
mov
push
pop
sti
jb
iret
data16
jae
insb
add
or
ret
in
mov
hlt
fiadds
out
jb
cmp
int3
jg
pop
sahf
jge
sbb
lock
or
add
adc
jne
and
pop
jnp
mov
jb
es
add
data16
rorb
ljmp
mov
imul
ret
fxch
addl
setno
int3
call
repnz
mov
push
dec
call
inc
pop
roll
mov
xchg
add
into
call
xor
out
jne
into
cmc
icebp
add
ds
add
rcll
adc
and
add
adcb
push
call
add
iret
cld
in
mov
inc
add
and
sarb
pop
add
arpl
push
dec
fisubs
xor
enter
jb
ret
add
call
ja
lock
sti
out
add
je
lock
sub
add
mov
andb
arpl
call
or
inc
add
jmp
inc
xchg
mov
jmp
sub
arpl
insb
negl
inc
push
int3
jmp
dec
fistps
mov
inc
jmp
fsubp
cmc
xchg
add
int3
jo
or
in
cmp
repnz
pop
inc
and
lahf
test
test
fwait
add
sub
inc
jecxz
inc
lret
jmp
add
push
sub
aam
mov
add
int3
push
pop
pop
lret
add
scas
sbb
int3
lea
lock
jmp
mov
sti
insl
inc
insb
subl
cld
aam
mov
test
mov
or
push
sti
jmp
add
push
sarb
mov
fwait
adc
dec
repnz
int
add
decb
sti
arpl
inc
rorl
hlt
leave
sub
push
jb
add
xor
lods
mov
jecxz
lret
lret
push
mov
xchg
sub
repnz
cmp
pop
mov
daa
add
aaa
mov
xchg
jmp
pop
test
add
loop
mov
push
mov
in
push
out
or
xor
and
pop
and
mov
inc
stos
or
inc
mov
iret
lds
add
sbb
insb
pop
mov
imul
mov
sti
ljmp
jge
add
test
call
fnstcw
out
test
jnp
add
nop
pop
loope
and
mov
xlat
xchg
gs
stos
dec
jnp
repz
or
push
lea
fsubs
std
ljmp
jbe
jmp
in
mov
mov
dec
xor
mov
loopne
mov
enter
and
cmp
dec
sbb
pop
pop
add
call
jbe
scas
std
sarl
push
call
xor
sub
inc
cmp
add
inc
lods
decl
int3
jmp
clc
cmp
sub
inc
lods
fisttps
and
scas
push
inc
movsl
fcomip
inc
fisttps
adc
push
xchg
rcrl
dec
mov
sub
insb
shl
mov
jge
mov
sbb
ss
add
mov
adc
dec
fcompl
call
loope
fucom
lock
es
mov
jnp
sti
inc
jl
or
add
xchg
outsl
scas
mov
adc
stos
add
mov
and
jmp
and
dec
cmp
dec
lcall
out
add
iret
je
imul
and
adc
sub
dec
or
add
pop
inc
leave
hlt
xchg
pushf
xlat
cmp
pop
xchg
cli
mov
ficompl
jg
cmp
jle
jecxz
ror
test
sbb
test
mov
fisubrs
iret
mov
movsb
mov
jmp
pushl
addb
js
or
or
jmp
iret
imul
mov
movq
push
pop
jecxz
dec
enter
scas
mov
xor
cld
test
add
iret
std
adc
adc
lcall
inc
push
mov
jg
pushf
fs
dec
in
das
sbbb
sbbl
repz
pop
and
add
jae
fdivs
push
daa
cltd
and
cmp
and
addb
cmpl
arpl
mov
sub
out
sar
cmc
and
imul
fwait
and
imul
adc
jne
and
test
lahf
int3
fists
sub
and
sti
pop
mov
add
xchg
fidivrl
jmp
data16
push
in
mov
inc
push
push
rorl
pop
repz
leave
pop
add
aas
insb
leave
sbb
sub
lods
xor
push
incb
push
pop
mov
in
mov
or
or
not
fdiv
dec
inc
shl
inc
push
testl
mov
lds
mov
jmp
leave
lds
jo
or
cmp
or
or
sbb
mov
add
jne
adc
jno
fdivl
push
das
and
inc
shll
fs
in
add
dec
xchg
pop
inc
icebp
mov
fistl
leave
int
rclb
cld
inc
push
int
inc
dec
lds
pop
sti
fidivrs
or
int
jmp
into
inc
mov
add
pop
xchg
ds
push
repz
fisttpll
or
add
aas
and
sahf
or
iret
jg
lret
add
mov
push
adc
lock
or
add
out
and
jle
sbb
xchg
and
adc
adc
ret
test
enter
outsl
ja
lds
adc
fxch
xchg
gs
fwait
dec
aad
push
sti
or
call
dec
xchg
ret
cmc
and
test
test
incl
pop
adc
gs
add
dec
inc
sbb
clc
aas
xchg
and
jns
jecxz
aas
sub
pop
mull
pop
xlat
enter
jmp
repnz
xor
ljmp
sub
or
adc
incl
sub
jae
sub
cmpl
add
sti
aaa
xchg
test
add
int3
pop
push
cmpsl
cmc
jp
movsb
dec
test
add
loop
scas
add
dec
fsubr
orb
and
xchg
mov
cmpsl
roll
addr16
jmp
repz
mov
pop
int3
jmp
or
scas
call
add
add
push
dec
dec
sub
push
dec
jmp
xchg
dec
jmp
inc
dec
cld
add
or
add
xchg
add
mov
pop
dec
shl
lret
add
das
mov
inc
add
dec
add
push
cmp
lea
rolb
cld
mov
mov
inc
jmp
test
mov
add
das
xor
clc
test
mov
inc
gs
xchg
inc
in
outsl
stos
xchg
out
dec
mov
add
sbb
outsb
aaa
stos
iret
pop
arpl
pop
add
cmp
add
add
mov
push
inc
sbb
jnp
add
xor
test
not
push
xchg
cmpsb
shlb
pop
pop
inc
sbb
adc
ljmp
xchg
mov
jno
mov
into
push
mov
push
ljmp
add
push
xrelease
arpl
mov
push
push
and
notb
push
xchg
ja
add
mov
dec
scas
mov
scas
out
sar
adc
scas
imul
adc
mov
sub
int3
cwtl
lds
pop
ds
or
add
incb
xor
fisubrs
add
add
push
inc
and
int3
or
fiadds
add
in
or
dec
and
addb
push
push
xor
decl
js
dec
jge
jecxz
mov
je
and
test
inc
hlt
dec
rolb
int3
insb
enter
mov
int3
cmp
test
in
push
add
int3
dec
cmc
and
movsb
dec
fildl
inc
xchg
cli
cld
test
add
int3
pusha
and
xchg
jmp
ret
out
mov
xchg
jmp
add
mov
sbb
repz
daa
dec
sbb
daa
dec
dec
xchg
or
call
fimull
add
add
push
int
sti
sarb
clc
inc
sti
push
dec
or
add
adcb
add
jmp
xor
in
cld
jmp
mov
in
or
add
push
insb
sub
call
jne
and
lea
mov
jl
frndint
lret
add
sbb
out
sti
add
add
and
ror
add
in
test
pop
adc
sub
add
loop
fdivrl
mov
add
cmp
lret
lds
jnp
cltd
lret
call
test
test
sbb
xchg
insb
cmp
mov
add
dec
cmp
adc
and
sbb
sahf
add
sub
push
es
mov
add
lret
mov
xorb
pushl
lods
add
fcmovb
insl
cmp
add
sbb
gs
nop
sbb
mov
jne
shl
add
add
jge
or
addb
add
mov
add
add
stos
incl
mov
add
xor
mov
test
loopne
mov
andb
xor
call
lret
push
jnp
lret
jmp
add
int3
jmp
loopne
leave
jmp
add
int3
jmp
mov
shrl
push
push
movsl
fildll
add
aaa
fisubrs
add
adc
lret
add
loop
add
dec
push
push
icebp
test
out
xchg
fidivrl
lret
jmp
shl
arpl
inc
jmp
xchg
iret
cmp
cmp
lret
jmp
xor
lret
jne
sti
add
cs
dec
shl
push
add
add
mov
jle
add
inc
jmp
add
add
add
add
xchg
lea
dec
call
mov
dec
push
inc
lds
fmuls
je
call
jg
add
xor
inc
fiaddl
addb
mov
sub
nop
fisttpl
push
ret
add
xchg
inc
gs
adc
xor
std
ret
add
out
testb
enter
js
inc
add
push
aas
and
js
jg
enter
pop
pop
push
pusha
dec
pop
sub
add
push
and
jmp
inc
and
imulb
dec
sub
or
iret
data16
jne
mov
sub
pop
inc
int3
bound
cmp
add
push
aas
and
add
mov
das
lods
ljmp
imul
inc
mov
dec
mov
and
mov
nop
pop
shl
cmpsl
jg
xor
fildl
call
lahf
adc
inc
or
mov
xor
jle
cld
scas
andl
ss
decl
or
shlb
mov
cld
add
test
jnp
cmp
push
psubsw
mov
lret
int
orb
mov
out
mov
rcl
xchg
xchg
stos
push
mov
iret
mov
push
jecxz
je
jecxz
mov
xor
inc
mov
xlat
in
mov
mov
add
jg
int3
jmp
sbb
inc
jmp
add
mov
inc
gs
hlt
inc
cmp
enter
mov
inc
call
cmp
jmp
xchg
repz
adc
fiadds
inc
xchg
add
dec
lds
mov
mov
push
inc
jmp
cmpsl
cmp
dec
test
inc
sub
in
xor
add
mov
push
fs
mov
mov
cltd
int3
pop
mov
xchg
push
inc
in
xchg
sub
add
data16
nop
lea
mov
aas
ljmp
cld
lret
lea
sbb
int3
std
je
and
test
addb
sub
cld
adc
rorb
pop
and
mov
rolb
push
mov
int3
xor
pop
ja
ret
pop
add
int3
add
insl
xor
add
lret
dec
lea
incl
fxch
push
push
pusha
movsb
pop
adc
lret
add
lods
sti
push
inc
fsts
es
jmp
mov
cmp
mov
cld
adc
loope
pop
add
sarb
pop
mov
addr16
int3
push
xor
incl
cmpb
pop
iret
jge
add
cmpsb
ss
and
imul
test
adc
jmp
aas
xchg
sub
fadds
push
cld
out
ret
and
mov
cld
pop
test
push
jae
adc
push
stos
das
mov
int3
loopne
scas
lret
loop
lahf
dec
faddl
adc
std
mov
das
cmc
jle
call
mov
mov
xchg
fs
lcall
mov
fistl
in
push
aas
ds
dec
das
outsb
enter
cwtl
jecxz
mov
mov
or
sbb
aaa
xor
jle
add
add
addb
push
xor
int
inc
push
aam
pop
aas
out
ss
push
out
xor
loopne
xchg
and
or
fiadds
dec
push
lock
jg
add
clc
shlb
insl
sti
scas
in
and
movsb
adc
pop
int
xor
bound
and
das
test
mov
push
add
inc
jg
add
lret
outsb
sti
inc
in
jg
adc
pop
add
inc
push
clc
jb
and
xchg
jmp
test
fxch
cmp
push
sbb
and
cld
je
cmp
into
shll
mov
test
ljmp
jmp
push
repnz
cmp
jle
inc
mulb
inc
and
or
pop
enter
or
push
pushf
or
push
or
push
cmp
or
test
arpl
dec
lods
adc
push
mov
fists
lret
xlat
psubq
inc
mov
call
push
add
jle
enter
pop
mov
imull
lods
leave
repnz
mov
inc
and
cld
add
enter
cmpsb
pop
pop
insl
out
rcr
rorl
test
xor
call
divl
jae
or
lock
and
add
test
je
dec
ja
sub
pop
cld
pop
test
daa
inc
sbb
jg
and
pushl
ud0
pusha
jecxz
jnp
xor
add
push
orl
add
add
add
or
lods
sub
jmp
out
jnp
jnp
lock
inc
test
lahf
fldt
cmp
add
sbb
and
mov
hlt
clc
or
and
or
cld
or
xor
dec
cmp
cld
jl
jmp
lcall
pop
ds
jb
or
pusha
inc
lods
out
inc
movsl
iret
add
dec
sub
hlt
int3
add
add
leave
je
in
sbb
xchg
mov
pusha
shr
push
mov
adc
jge
imul
int
inc
add
inc
mov
je
clc
mov
fs
hlt
ret
inc
rorl
pushf
lea
xor
jmp
add
adc
insb
cld
mov
sbb
add
add
adc
add
cltd
push
pusha
iret
or
push
outsl
adc
xor
xchg
pop
push
pop
pop
xor
int3
add
xor
inc
int
pop
jmp
and
pop
xor
mov
jecxz
inc
sub
xorl
and
cli
imul
repnz
jecxz
mov
cld
mov
jle
inc
cmp
xor
data16
cld
mov
sub
mov
les
mov
fistl
stos
mov
and
dec
out
stos
shlb
stos
nop
and
cmp
xor
mov
enter
int
clc
sub
jnp
sbb
push
es
mov
sbb
cmp
jnp,pn
xchg
push
cmp
jnp
add
cmp
and
fsubl
icebp
loopne
jnp
loopne
jne
loopne
mov
loopne
sub
pop
cld
das
stos
pop
andb
testb
inc
sub
insb
je
add
dec
and
outsb
cmp
push
ret
ljmp
add
rol
jle
inc
xor
and
lds
shl
inc
lock
test
mov
js
add
push
ss
mov
cli
or
lock
and
outsb
cmp
mov
fs
test
inc
pop
adc
add
xor
push
jmp
mov
add
jle
sti
bound
ret
in
add
inc
in
push
aaa
adc
jb
dec
sti
mov
dec
repnz
add
es
inc
ret
mov
add
jmp
dec
mov
sti
fcoml
fildl
and
add
and
jmp
ja
inc
jmp
fnsave
and
add
fiaddl
cltd
or
bound
pop
addr16
xor
cmp
lcall
mov
sti
ljmp
leave
add
jp
mov
cmc
cmp
mov
mov
mov
call
and
fxch
call
mov
add
test
mov
call
and
jecxz
sub
add
add
xchg
sbbl
popa
push
call
inc
pop
mov
sbb
std
les
lds
lret
pop
ja
add
cmp
int
xchg
jle
and
xchg
in
mov
mov
add
imul
ljmp
into
fmuls
push
loope
inc
xor
add
nop
psubw
nop
or
imul
add
inc
inc
cmpsb
inc
add
out
in
mov
and
addl
idiv
outsl
lahf
cld
cld
sub
lock
lret
sub
cmp
or
add
pop
mov
iret
repnz
outsb
out
mov
add
int3
hlt
sbb
int3
jmp
xlat
add
int3
jmp
ret
gs
mov
sbb
lret
jmp
mov
sti
lcall
sbb
sbb
dec
sub
mov
and
inc
loopne
inc
sub
roll
jnp
and
test
insb
inc
repz
jno
pop
int
dec
addb
xor
push
xor
fimuls
dec
ljmp
add
xor
fs
into
cs
or
add
lods
lds
jb
inc
dec
add
pop
dec
sub
add
xchg
popf
xor
cmpb
pushf
iret
inc
mov
mov
mov
jmp
add
test
xchg
mov
cld
inc
lret
shrl
jmp
add
sti
ljmp
pop
pop
hlt
bound
xor
shll
pusha
jle
jbe
mov
sbb
mov
and
pusha
mov
push
mov
cmc
je
push
cmp
add
xor
subl
cmp
pop
jecxz
ljmp
jns
mov
icebp
xchg
mov
sub
int3
add
not
dec
mov
cmpsl
int3
mov
add
int
xchg
lods
push
ret
call
push
xchg
cmpb
out
adc
int
mov
imul
aas
lahf
les
lods
mov
and
test
ss
sbbb
jns
psubq
xchg
jg
jle
pop
push
mov
incl
fbstp
xchg
call
lret
fsubrs
jle
add
decl
or
rclb
in
and
push
jnp
rcrb
inc
dec
sub
cld
repz
mov
insl
add
cmp
add
out
jmp
xor
add
inc
pop
add
int3
imul
mov
nop
mov
in
add
sldt
add
add
int3
jmp
or
icebp
pop
add
pop
push
sbb
fs
inc
pop
add
int3
outsb
outsl
and
loop
xchg
je
add
sti
mov
mov
mov
dec
add
jmp
ds
mov
fsubp
insl
sub
add
ljmp
inc
jmp
test
or
cli
pushf
ljmp
mov
inc
jmp
add
aad
lret
adc
push
mov
xor
jle
or
leave
sti
mov
outsl
push
mov
inc
int3
jg
adc
add
sbb
push
add
and
test
push
call
sti
cld
stos
mov
pop
add
roll
push
adc
jge
lret
mov
test
cltd
leave
add
lods
adc
dec
faddl
adc
cli
push
in
add
imul
mov
test
cs
mov
sub
divl
jle
add
sbb
jb
sahf
mov
call
xorb
jb
nop
adc
enter
xchg
sbbl
shll
jae
fnstenv
adc
imul
cli
xor
pop
sti
sti
lahf
cmpsl
mov
or
mov
lea
or
add
jmp
cld
mov
clc
and
mov
pop
add
lods
jge
inc
jecxz
add
and
xchg
xor
addb
push
daa
movntq
shlb
pop
mov
mov
xchg
insl
cli
adc
add
cli
je
and
adc
xchg
idiv
xlat
scas
hlt
test
popa
cmp
int3
and
test
pop
add
mov
cltd
popf
sub
imul
int3
jmp
push
out
roll
out
stc
mov
sub
add
push
xor
inc
add
xor
and
cmp
add
sub
jno
stos
flds
mov
fimull
aad
push
sub
repz
jmp
int
mov
xor
xchg
js
je
mov
insb
jl
or
add
adc
xor
insb
jl
or
add
adc
inc
cmc
add
xchg
clc
push
lret
in
iret
jmpw
or
dec
es
pop
inc
shr
ret
lret
push
ds
mov
jge
aaa
sbb
sub
idivb
stos
cmp
jmp
sub
xlat
mov
cmp
sti
hlt
imul
add
push
lock
movsb
sbb
mov
ja
mov
adc
sbb
push
inc
add
roll
adc
mov
jb
out
je
xor
test
int
bound
xchg
rorl
cmp
sbb
notb
mov
add
xchg
ret
dec
int
test
add
dec
loope
add
push
leave
pop
pop
add
xor
call
add
adc
add
jb
test
or
test
incl
cmp
mov
sbb
sahf
icebp
xchg
and
push
mov
cs
std
push
push
outsl
daa
mov
push
fs
cmc
add
xor
add
mov
stos
jno
lret
sub
les
inc
in
push
adc
add
dec
in
insb
push
int3
sti
jge
aam
data16
add
add
in
movsl
fucomi
add
mov
jg
out
mov
nop
jmp
cmp
aam
push
jg
in
mov
scas
add
test
inc
or
sahf
stc
imul
or
cmpl
andb
pop
lods
shrb
add
sti
cli
in
arpl
add
xchg
add
js
add
les
in
jnp
rorb
add
mov
call
pop
data16
mov
lock
add
popl
xchg
mov
lock
mov
add
test
sbb
dec
addr16
inc
shlb
ror
cmpsb
dec
sbb
cld
jb
sub
lock
push
sahf
pushl
push
sub
cmpl
push
jge
dec
push
push
icebp
pop
andl
jmp
add
mov
not
push
mov
test
mov
xor
xor
add
sub
hlt
pop
adc
hlt
pop
and
sub
cli
mov
cmpsb
shlb
lea
add
fsub
hlt
push
dec
fwait
sub
xchg
push
ds
in
je
mov
lea
sub
test
add
pop
hlt
not
add
test
adc
aas
pop
xor
mov
dec
sti
outsb
mov
add
add
xor
and
daa
movsl
add
addb
clc
jb
cmc
rorb
ljmp
insl
push
lea
pop
test
lcall
push
jo
jg
xchg
mov
or
pop
lea
push
add
jge
hlt
push
inc
in
sti
push
stos
cmp
lret
test
testl
sub
xor
aas
outsl
jmp
push
or
test
nop
rolb
call
je
lods
add
gs
xchg
insl
push
mov
nop
rcrb
std
out
lods
xchg
ret
leave
push
in
add
jp
lret
jmp
mov
push
shl
mov
push
dec
scas
outsl
add
pop
mov
add
and
lret
add
xchg
sbb
jmp
push
daa
je
pop
dec
or
adc
xor
jno
int3
call
mov
stos
xor
out
dec
bound
call
adc
jp
and
dec
dec
cmp
cmpsl
fstpl
xor
inc
mov
jne
test
sbb
add
sbb
xor
cmp
test
cltd
mov
adcl
add
mov
xchg
and
mov
and
xchg
mov
and
ja
je
xchg
mov
mov
enter
fucomp
ret
add
mov
mov
dec
add
call
push
xchg
jo
incl
pop
dec
inc
push
xchg
push
xor
mov
xor
pop
mov
push
pop
xchg
dec
les
mov
dec
mov
orb
and
jl
imul
in
test
inc
mov
push
data16
jmpw
dec
in
add
add
sub
insl
add
add
testl
incl
pop
hlt
jno
std
add
jnp
cli
mov
loop
pusha
mov
hlt
out
ret
popa
xchg
push
or
lret
and
xchg
out
add
mov
iret
lret
into
push
imul
add
xchg
fstpl
jnp
xchg
sbb
jg
pop
loopne
push
xor
test
sbb
add
dec
test
fdiv
and
inc
xchg
push
pop
cmp
incl
data16
mov
stc
add
pop
in
jge
aad
lret
cltd
fnstcw
aas
into
inc
add
mov
add
int3
mov
add
jl
dec
lcall
add
add
mov
add
call
fistpll
push
inc
lock
pop
rclb
inc
addr16
leave
and
xchg
or
mov
push
cmp
inc
xor
push
ja
and
insb
cwtl
and
js
or
lret
add
mov
or
lret
add
stos
inc
sub
add
out
sahf
add
add
jns
scas
jg
xchg
push
inc
int
and
add
test
decl
add
dec
and
addb
cmc
and
dec
gs
adc
pop
je
rol
lea
inc
cmp
sbb
jg
xchg
xor
in
or
or
or
nop
xchg
out
push
jb
divl
notl
add
adc
movsb
and
mov
inc
fnstcw
ljmp
jnp
lods
mov
add
and
xor
incl
aas
and
push
lock
xor
dec
pop
inc
daa
cli
hlt
push
sti
cli
in
into
add
aam
add
and
out
sti
inc
fdivrs
xor
push
xlat
cltd
in
xchg
or
imull
outsb
jg
scas
mov
addb
xor
test
mov
data16
push
in
pop
cmp
add
pop
sti
push
scas
adc
adc
mov
nop
inc
sti
iret
cmpsl
mov
incl
stc
push
data16
xor
andl
or
int3
outsb
repz
popf
adc
mov
jmp
inc
add
pop
addr16
mov
jge
xacquire
jg
rorl
sbb
mov
insl
xchg
add
jmp
add
jmp
or
dec
jp
mov
jl
aas
push
dec
add
lock
insb
les
data16
dec
mov
xchg
push
jmp
add
icebp
add
les
data16
dec
stos
sub
add
inc
int3
call
insb
les
lea
add
popa
sub
inc
int3
call
fs
sub
enter
popa
mov
ror
shlb
add
adc
lods
call
je
cmp
lret
add
xor
push
aaa
addr16
loopne
add
mov
jb
push
adc
ret
fstl
push
mov
sub
notl
lret
add
add
int3
pop
add
leave
test
insl
popf
pop
mov
rolb
mov
sbb
inc
inc
idiv
sbb
push
jb
dec
inc
and
jle
inc
xchg
enter
sub
test
jg
inc
std
mov
dec
push
shrl
notl
sub
add
pop
inc
inc
lcall
cmp
sbb
idiv
int3
leave
adc
push
shll
fadd
mov
xchg
inc
and
push
add
cmp
pop
jno
push
sub
mov
shrl
jmp
mov
push
xor
das
jnp
pop
les
js
cmp
je
stos
dec
cld
js
jg
lock
mov
decb
jno
pop
add
and
add
add
add
xor
call
mov
sti
or
sahf
out
pop
mov
popa
inc
add
in
jb
cmp
xchg
out
mov
jne
add
popa
jnp
shlb
call
aas
adc
call
into
stos
sbb
xor
js
shlb
inc
add
pusha
cmp
dec
xlat
adc
jmp
add
mov
insl
jno
lret
mov
mov
cmpsb
js
sub
inc
add
addr16
mov
cmpsb
pop
lods
and
inc
add
addr16
lret
dec
add
mov
cmpsb
enter
mov
imul
pop
nop
add
rolb
and
movsl
add
cld
inc
int3
lahf
push
daa
nop
add
les
add
aad
int3
lahf
add
nop
add
rolb
in
movsl
add
ffree
lret
lahf
ror
add
rolb
test
insb
js
ret
lret
lahf
xor
popl
mov
rolb
movsb
fs
ret
lret
lahf
xor
rolb
inc
fs
inc
int3
lahf
add
inc
add
out
adc
add
add
add
mov
mov
js
adc
fs
aam
add
mov
adc
test
lret
test
inc
add
data16
pop
insl
or
lret
xor
ja
add
adc
pop
outsl
sub
iret
mov
mov
js
adc
sub
add
add
add
iret
mov
mov
add
push
pop
clc
add
inc
je
inc
and
adc
add
pop
inc
add
cmpsl
fimuls
xor
insb
fcoml
push
push
jnp
stc
mov
and
mov
push
add
adc
push
aad
cmp
or
xlat
jp
sbb
xor
mov
add
xor
je
sub
cli
inc
lret
aad
lock
and
push
iret
decl
call
adc
mov
xchg
or
rcrb
jl
lock
jge
lock
das
or
jp
lock
lock
xor
xchg
xchg
adcb
add
add
insb
xchg
add
jmp
add
int3
ja
jle
jg
xchg
push
cld
inc
ljmp
pop
hlt
mov
mov
in
mov
mov
out
pop
shlb
rorl
into
lods
adc
out
jp
sbb
pop
jne
mov
out
test
cmp
mov
fsubrs
stos
lods
out
add
mov
sub
pop
out
sub
lea
jl
hlt
mov
or
mov
int
jmp
jo
inc
mov
or
sarb
bound
push
pop
andl
dec
mov
and
in
pop
mov
xchg
or
int
inc
add
bound
les
mov
xor
xor
int
cmp
and
je
mov
push
inc
xchg
idiv
inc
xchg
shlb
inc
jbe
pop
mov
test
icebp
dec
xchg
dec
or
fadds
inc
sahf
add
fisttpll
jne
ljmp
and
into
je
rcl
or
gs
mov
das
shlb
adc
push
or
add
cmp
ja
clc
xchg
cmp
jns
cld
pop
pop
add
dec
scas
out
xchg
testb
int
sbb
jo
add
sbb
add
and
push
test
sbb
push
outsb
add
jle
sub
lock
or
jns
cwtl
fstl
add
mov
and
sub
clc
xchg
cmc
mov
movsl
mov
push
add
cmpsl
aas
dec
lds
lret
jmp
jns
call
pop
repnz
sbb
mov
add
int3
and
rclb
inc
add
jmp
push
jge
or
push
mov
int3
pop
fldt
cmovb
movsl
in
add
in
fildl
ljmp
rcrl
outsb
add
inc
add
out
jg
add
mov
add
repnz
jg
add
add
inc
icebp
std
xchg
and
cmp
xchg
add
xchg
adc
inc
push
int
inc
add
sub
push
icebp
js
jne
mov
das
xchg
lea
mov
add
stos
rcrl
mov
scas
mov
insl
call
jl
aaa
xchg
in
sti
push
arpl
insb
mov
dec
push
int
add
repz
mov
lea
adc
push
sub
stos
repnz
jae
and
ds
inc
xor
je
lods
xchg
stc
ds
call
add
or
mov
addb
shl
push
icebp
inc
shlb
inc
and
ficoml
mov
or
inc
rorb
sbb
decl
or
repnz
clc
add
adc
lock
jne
jae
pop
sbbl
push
inc
add
cmp
adc
das
ficoms
mov
ds
lods
cmp
add
sub
xchg
add
shl
adc
rorb
hlt
movl
popa
or
xorl
stc
insl
pop
adc
inc
in
lods
adc
dec
cmp
and
addr16
jae
in
pop
xchg
fbstp
xchg
lock
xor
incl
lret
lcall
in
and
in
lock
jge
lock
xchg
mov
xchg
or
int3
adc
add
movb
xor
jbe
lea
inc
sarb
jo
xrelease
out
add
inc
sahf
mov
and
sarl
loop
jno
jmp
xchg
mov
jmp
add
push
mov
pop
into
cwtl
ss
fwait
inc
push
xchg
in
ljmp
sub
add
movsb
xchg
inc
lahf
pusha
xchg
and
or
adc
push
mov
xchg
pop
and
test
divl
sub
sarl
inc
call
test
das
xchg
add
cmpsl
adc
cld
mov
cmc
ljmp
stos
fcmovnu
xchg
jbe
pop
jb
mov
ljmp
lret
enter
xlat
sbb
cltd
push
dec
and
testl
add
in
insb
popf
iret
notl
lcall
in
testl
out
ret
add
pop
add
popf
push
pop
test
rcll
stos
outsb
sub
jb
mov
addl
push
and
nop
sub
fs
and
bound
mov
mov
call
push
add
and
inc
nop
inc
in
das
lea
call
jge
push
adc
mov
fimull
add
imul
inc
adc
lods
sbb
cld
sub
xorb
addb
std
js
sub
jl
and
pushf
add
add
mov
in
in
ss
gs
pushf
mov
mov
mov
sub
xlat
sub
sub
pop
and
aad
and
cld
adc
int3
insb
les
mov
add
add
lret
jmp
add
add
xor
shll
and
pop
pop
sbb
pop
dec
and
je
sbb
mov
mov
jmp
sub
pushf
fs
fmull
cmp
add
cmpsl
add
cmp
cmp
fstps
xchg
sbb
sub
call
add
test
add
jg
add
add
or
imull
xchg
jmp
push
insb
inc
mov
cltd
jbe
and
imul
xchg
daa
ret
pop
int
sbbb
cmp
and
xchg
or
mov
es
add
push
hlt
push
je
mov
lret
xchg
and
add
sahf
push
adc
cwtl
and
in
pop
call
sbb
lds
fldl
dec
mov
jmp
push
dec
and
clc
mov
test
test
aam
sbb
aam
out
add
cli
imul
subl
out
push
testl
mov
push
add
imul
mov
dec
add
pop
dec
fs
popf
lret
divl
lea
call
test
cmp
jbe
push
push
jo
shrl
shrb
mov
adc
orl
xor
xor
and
shl
into
pushl
mov
hlt
incl
mov
add
jne
cmpsl
inc
and
pushf
jle
add
add
pop
sti
add
in
adc
aam
aas
das
cmp
inc
sbb
das
les
daa
push
fsubs
jmp
pop
mov
roll
add
cmc
xlat
adc
orl
jns
and
outsl
aas
pushf
cmp
int3
sbb
xchg
push
add
dec
cmpsl
add
int3
femms
jge
lds
sub
cmpsl
outsl
add
pop
inc
fsubrl
add
add
xor
mov
pusha
cmp
mov
sub
jmp
push
out
push
xchg
pop
adc
mov
xor
add
jno
or
sbb
add
dec
repnz
or
les
jmp
xchg
sbb
push
test
outsb
das
add
fildll
jmp
add
dec
iret
addl
and
adc
int
fwait
lea
fwait
inc
dec
call
mov
mov
push
stc
add
aas
fmull
bound
inc
jmp
mov
push
pop
int
push
pop
pop
int
push
dec
pusha
cmpsl
add
xchg
popf
lret
add
scas
js
add
xchg
and
imul
shr
inc
enter
lds
jl
mov
in
or
mov
out
mov
icebp
and
dec
add
pop
add
test
ret
pop
daa
push
mov
mov
push
inc
clc
cltd
mov
jge
adc
dec
add
rolb
add
lret
test
pushf
daa
lea
jne
mov
inc
add
xchg
mov
pop
mov
sbb
lea
jl
hlt
sbb
sti
mov
cmp
dec
cmp
fdivl
push
repz
jno
jne
dec
movsb
dec
mov
add
jp
sub
add
sti
add
fldlg2
movsb
xchg
repz
jle
and
outsw
ja
mov
pop
add
lds
out
jmp
incb
add
add
inc
push
xor
add
ret
push
out
add
popl
mov
inc
add
jg
js
xchg
add
jmp
cld
fucomip
add
dec
xor
sub
int3
pop
inc
fsub
mov
jns
jo
cld
push
lret
or
fsubl
hlt
hlt
out
lea
push
xor
pop
or
lcall
push
mov
clc
lods
xchg
mov
shl
cmpsl
add
fildl
test
scas
or
push
out
rorb
sarl
into
lock
iret
cwtl
mov
add
add
add
jae
sbb
push
sahf
out
movsb
adc
cld
add
js
call
jb
movsl
mov
pop
fldl
call
mov
pusha
testl
dec
in
mov
add
test
je
dec
add
add
xchg
imul
add
sub
mov
add
ret
sbb
nop
sbb
add
fists
fnsave
add
or
mov
mov
add
inc
sbb
leave
push
inc
inc
roll
add
push
or
leave
mov
adc
cmpb
lret
add
inc
lods
add
scas
lock
jle
inc
fdiv
psubsb
stos
add
outsb
rorb
cmpl
add
add
ljmp
dec
mov
xchg
ljmp
pop
add
cmc
negl
xor
lock
xor
mov
jne
add
jp
les
cmc
incb
add
push
addb
mov
decb
push
push
incb
cmc
decb
add
jg
hlt
pushl
xchg
mov
mov
icebp
decl
hlt
lea
int3
mov
add
clc
jne
jmp
addb
pop
mov
add
clc
add
jmp
repz
call
roll
int3
sub
ljmp
adc
add
inc
lcall
faddl
add
out
leave
mov
add
int3
pop
mov
jmp
fiadds
int3
jmp
xchg
rclb
push
rolb
mov
nop
dec
add
mov
mov
subl
push
subb
add
add
int3
push
into
dec
je
out
int3
lea
int3
add
xor
xchg
add
add
mov
jg
jmp
mov
int3
add
add
add
xlat
fiaddl
int3
xchg
mov
adc
in
int3
add
add
add
cltd
mov
sarb
leave
data16
cmp
jge
cmp
enter
pop
jb
or
jg
scas
sub
add
sbb
add
sub
add
leave
or
pop
js
lea
fs
fxch
call
test
rolb
add
rorb
sbb
rclb
aad
pop
mov
shlb
dec
push
je
add
or
add
in
add
jnp
aas
mov
add
in
cmp
ljmp
pushl
in
dec
aas
sbb
adc
in
cld
outsl
jp
add
decb
sbb
xchg
mov
push
add
in
dec
push
push
decb
and
mov
push
add
leave
data16
aas
loopne
cmp
add
pushl
movsl
ja
lcall
out
dec
jmp
sar
mov
insb
dec
push
sti
add
jmp
into
imul
test
jmp
lret
dec
cli
adc
push
shr
mov
fdivr
push
cld
dec
fs
sub
jmp
push
fmul
jmp
ss
gs
add
int3
jmp
sbbb
add
in
roll
pushw
jmp
add
int3
sbb
mov
add
add
add
push
je
mov
push
out
mov
jmp
inc
mov
clc
xacquire
repnz
cmp
push
call
or
adc
repz
jae
fisttps
add
add
std
or
outsl
icebp
mov
out
inc
orb
cmp
jge
test
add
cmc
jae
in
addl
ficomps
int3
xchg
insl
lret
orb
pop
add
std
jnp
push
pop
loop
or
or
dec
mov
je
and
jns
mov
int3
add
push
jmp
or
dec
jp
dec
push
push
add
add
mov
notl
in
jbe
xor
jns
push
mov
mov
bound
mov
mov
call
push
inc
sbb
and
jns
into
call
hlt
stos
add
into
sub
push
mov
dec
push
pop
popa
lret
in
xchg
out
adc
test
xor
sub
xor
sbb
and
xor
adc
test
add
hlt
cld
cmp
cld
out
mov
imul
shrb
inc
in
sbb
or
add
test
push
inc
add
fs
xchg
lret
test
loopne
int
packsswb
add
jle
push
jge
add
gs
or
add
test
movl
jno
pop
jg
cmpsb
xorl
jmp
movl
sti
sub
push
clc
add
int3
iret
repnz
or
mov
in
clc
xchg
es
leave
pop
loope
in
pop
mov
icebp
subl
test
xor
dec
cli
dec
out
sbb
insb
add
add
jmp
jle
enter
jp
pop
jbe
mov
xor
dec
ljmp
mov
je
test
sub
aaa
push
test
movl
rcrl
popf
mov
in
fstpl
test
das
mov
leave
fiadds
mov
mov
adcb
roll
sbb
or
lock
out
cmp
pop
jp
out
jl
or
outsb
sbb
add
nop
add
out
adc
cmpsb
add
push
mov
cmpb
test
mov
mov
out
pop
aaa
jne
pop
lock
cmpb
cmp
add
add
sti
cmpsl
mov
test
add
jmp
pop
in
imul
cmpb
repz
mov
test
add
ljmp
push
idiv
es
inc
add
jns
add
add
add
add
and
add
and
add
and
add
add
add
add
add
add
and
add
and
add
and
add
and
add
adc
push
xor
mov
xchg
les
lods
or
mov
out
jae
ss
incl
js
xchg
js
test
int
fiadds
loope
shl
adc
sbb
aam
ret
push
sbb
mov
sbb
add
cmp
add
sahf
das
lds
les
repz
out
add
add
pop
or
push
sti
xchg
les
stc
test
pusha
daa
and
aad
push
pop
xchg
sub
int3
cmpsl
sarl
add
and
in
add
cmp
call
cmp
add
sti
dec
sbb
in
testb
jbe
jmp
dec
icebp
psubsw
lds
xchg
inc
addl
cli
xchg
inc
adc
inc
int3
xorb
test
add
add
lret
add
cli
jmp
ss
sti
push
sar
add
mull
add
and
stos
fimull
call
aaa
movb
add
shld
sbb
ds
adc
test
cli
lcall
add
push
clc
stc
jmp
int3
mov
adcb
test
sbb
rolw
jae
push
push
and
add
xchg
repnz
rolb
repz
or
mov
add
add
mov
and
pop
adc
cmp
idivl
add
lcall
stc
jp
add
inc
mov
loope
sti
sub
or
imul
fsub
data16
pop
adc
add
enter
data16
push
jmp
jp
fbstp
add
and
push
and
shlb
pop
xchg
mov
or
mov
push
sub
adc
adc
in
or
jnp
adc
rclb
test
adc
lret
leave
out
out
fsubrl
xchg
bswap
sbb
sahf
scas
lret
add
loope
aaa
sbb
insb
mov
mov
test
dec
mov
in
ja
hlt
imulb
mov
lea
mov
faddp
jg
int
or
add
int3
data16
in
jmp
adc
mov
clc
jle
or
dec
sbb
add
mov
sub
popf
add
dec
or
jnp
adc
fiaddl
adc
iret
cmpsl
cmp
in
call
call
cwtl
and
jl
and
add
insb
add
shl
daa
add
test
xchg
movl
adc
add
jno
flds
out
jnp
and
adc
repnz
add
add
int3
xchg
shlb
std
push
or
leave
filds
je
inc
mov
push
mov
pop
je
xchg
orl
xchg
out
inc
decb
add
bound
sbb
test
insb
add
xchg
or
jb
pop
mov
cwtl
or
pop
test
add
in
or
inc
ds
jae
test
cltd
enter
aam
dec
std
filds
xchg
out
xlat
aam
ret
sub
sti
xor
je
jns
adc
pusha
or
xchg
repnz
jo
add
jp
and
pop
je
imul
jge
cmp
jnp
out
add
push
xchg
adc
test
mov
jecxz
hlt
xacquire
dec
inc
adc
cli
xchg
hlt
incb
ds
jg
adc
or
bnd
jp
aam
ror
xchg
gs
std
lret
jmp
mov
fildl
lea
jmp
subb
xchg
out
scas
repz
or
or
xchg
mov
lock
adc
mov
not
rol
ljmp
lods
cltd
jmp
out
fstps
mov
lret
adc
add
mov
into
pop
rolb
fdiv
mov
dec
add
add
lret
or
in
pop
sbb
push
add
test
popf
out
mov
movswl
xchg
xchg
add
cmp
mov
push
dec
test
push
out
lods
daa
ret
notb
faddl
int3
and
mov
dec
add
aam
stos
sub
sti
aas
lock
mov
movsb
push
out
xor
add
xchg
test
fimull
add
xchg
sldt
add
add
iret
or
and
repnz
int
outsb
pop
push
insb
and
push
push
or
jnp
adc
sub
add
into
outsl
and
test
mov
push
addb
orb
test
sub
jmp
or
dec
push
ds
xor
add
je
pop
and
add
add
cli
push
es
decl
out
pop
or
stc
testb
cmovae
inc
sbb
pushf
test
pushl
push
and
jae
add
inc
jecxz
pop
js
std
dec
test
cmpsb
insl
cmp
cmc
mov
jae
push
scas
xchg
or
inc
cld
mov
jne
push
and
dec
push
pop
add
lods
mov
add
sti
pop
in
dec
pop
cmc
jle
fstps
add
scas
add
add
das
ds
lret
nop
loop
out
mov
int3
les
jnp
jne
pop
push
mov
jle
daa
or
mov
scas
cmc
mov
int3
pop
inc
clc
push
sub
jl
call
mov
test
add
cmp
adc
dec
in
add
adc
push
or
push
sbb
insl
lret
jmp
mov
rcl
pop
hlt
lret
jmp
push
jle
or
add
addb
jle
or
add
subl
scas
inc
out
cmpsl
inc
int
nop
jno
cli
jle
test
sti
push
xlat
sti
imul
scas
int
gs
cli
push
sbb
cwtl
cld
inc
mov
mov
push
mov
add
ret
shr
loop
loop
imul
add
inc
mov
out
pop
cmp
dec
dec
negl
add
ret
leave
jmp
imul
or
add
xor
cld
jbe
cmp
aam
jne
leave
add
mov
mov
xor
inc
imul
add
imul
mov
mov
and
add
jae
pop
mov
or
xor
jmp
in
and
rorl
repnz
pop
fadds
add
inc
adc
leave
or
iret
enter
and
aas
push
inc
adc
add
mov
aaa
mov
repnz
sbb
cmp
cmc
jg
or
popa
pop
xchg
les
mov
pop
mov
imul
imul
add
movsl
jge
xchg
mov
or
add
jae
cmp
xchg
xchg
call
add
add
and
inc
push
in
dec
fsubr
and
test
iret
cmp
lret
pop
push
fwait
ret
bound
and
in
hlt
cmc
mov
loopne
gs
lds
dec
jmp
or
stos
add
dec
add
stos
bswap
add
push
dec
and
xchg
lahf
push
jecxz
sbb
add
fstpl
sub
or
testb
mov
push
sbb
mov
dec
decb
jne
add
ss
add
fiaddl
mov
mov
mov
jg
or
arpl
mov
jmp
imul
cli
mov
pop
cmp
jle
dec
and
adcb
data16
or
pop
imul
rcl
add
push
pop
or
aam
jmp
cmc
mov
ljmp
xchg
jnp
out
mov
xor
icebp
int
and
loope
or
lock
daa
rolb
jmp
mov
pop
popa
mov
ds
add
roll
jmp
and
push
cltd
xor
out
add
push
xchg
xor
xorl
xor
pushf
sub
pushf
pop
dec
jne
dec
je
xchg
pop
test
aam
add
mov
mov
push
out
push
push
ret
inc
push
mov
push
add
lret
mov
rol
adc
push
int3
mov
test
add
add
jmp
jp
or
adc
cmp
inc
add
and
mov
fisubrl
fimuls
add
push
cmpsb
sub
testb
mov
adc
repz
add
repz
sbbb
stc
mov
adc
jnp
add
repz
add
jp
stc
repnz
jg
inc
add
or
incl
inc
sub
add
int3
imul
xchg
mov
or
mov
add
int3
imul
roll
add
dec
les
in
loopne
inc
mov
pushf
push
int3
jmp
add
loope
add
sti
dec
cmp
jg
push
adc
pop
cmp
add
add
aad
imul
dec
mov
mov
xchg
filds
out
imul
xchg
sub
mov
jmp
push
je
or
pop
out
imul
mov
icebp
outsb
xchg
imul
cmp
or
xlat
hlt
out
imul
insb
shlb
adc
sbb
or
imul
out
imul
in
fidivrs
add
add
add
out
add
ret
sar
add
bound
shlb
repz
imul
cmp
xchg
mov
adc
add
lret
fcomps
call
add
add
int3
test
sbb
mov
ret
movsl
lret
jmp
xorb
out
sub
or
and
and
int
das
add
repz
cmp
sbb
add
mov
push
in
inc
orb
mov
add
xchg
inc
out
xchg
repz
or
dec
add
test
jecxz
mov
mov
je
push
sti
std
jg
sbb
inc
imul
adc
or
push
iret
sbb
fdivr
test
mov
and
outsb
xchg
xrelease
test
repnz
repz
je
mov
or
push
or
scas
dec
fsubrl
dec
add
cmpsl
inc
sub
das
ja
xchg
xor
sub
mov
dec
push
push
sti
inc
inc
scas
or
and
mov
pop
repz
xor
loop
mov
jmp
fucomi
nop
shrb
add
fiaddl
and
jnp
and
and
lock
mov
fldt
fcmove
fs
jbe
add
adc
pushl
dec
aas
cltd
push
les
outsb
dec
int
jmp
push
mov
add
pop
insl
mov
push
xlat
jg
add
das
mov
fdivrp
push
jl
add
push
cmpsl
in
std
sahf
jg
jmp
cli
jae
mov
jmp
fidivs
shll
jmp
jge
add
sahf
sbb
jmp
pop
clc
repnz
xchg
push
cli
lds
shl
inc
pop
dec
stc
outsl
pop
xor
mov
int3
add
scas
nop
sti
jg
mov
enter
faddl
sbb
testb
stc
outsb
push
fnstcw
jne
xchg
shr
and
add
jmp
cmp
add
out
daa
testb
dec
add
add
inc
clc
ljmp
push
cmp
jmp
daa
idiv
xor
cmp
push
and
fadds
mov
test
lods
sti
jbe
add
adc
addl
lods
or
addr16
add
lock
mov
fdiv
jle
lcall
and
or
sub
or
cwtl
les
xor
xchg
cli
adcl
shrl
xchg
add
jo
not
icebp
js
and
jle
cmc
insl
push
and
cli
cmpl
jo
lods
sti
sahf
mov
xchg
int3
out
icebp
jae
sar
push
mov
jnp
fnstenv
xchg
jno
jge
jmp
lods
add
sbb
adc
dec
shlb
lds
xor
int3
pop
push
pop
pop
das
add
push
dec
mov
fsubr
jne
xchg
popa
orl
cli
stos
jmp
lods
out
dec
out
add
add
or
mov
xlat
mov
ljmp
xorl
pushl
add
in
pushf
pop
sarl
xchg
pusha
push
scas
ret
push
mov
jmp
fwait
roll
cmc
dec
dec
push
or
jl,pt
daa
imul
sub
int
scas
adc
inc
ficomps
push
mov
fmuls
stos
rolb
in
andb
in
fldl
lcall
scas
inc
int
ret
testl
lcall
sub
out
popa
and
mov
fadds
push
jae
sti
dec
sarl
int
imull
xorb
push
push
xor
std
ret
test
ss
mov
outsl
iret
xor
pop
int
and
jae
add
ds
leave
test
push
pop
hlt
push
and
je
push
push
and
push
mov
mov
push
ds
data16
add
adc
pop
imul
repz
xchg
test
jg
push
add
pop
imulb
push
aad
rolb
pushf
cmpsl
pushl
jns
test
add
popa
pushf
or
sub
jp
fisttpl
inc
and
jns
adc
xchg
loope
mov
clc
xchg
ror
and
mov
pop
xchg
dec
mulb
test
sarb
inc
mov
cld
js
in
lcall
cmp
push
cli
loop
mov
aam
stos
add
les
add
clc
jg
out
cmp
jno
adc
clc
test
pusha
test
les
add
dec
inc
adc
ljmp
cltd
fsubs
test
popa
fists
test
ret
dec
filds
test
xlat
out
clc
test
add
lahf
xlat
jle
iret
shl
das
testl
jmp
add
in
nop
pushf
pop
adc
in
in
add
test
pop
xlat
icebp
stos
add
pop
lahf
lahf
xlat
cmpsl
call
std
mov
cli
bound
les
fnsave
mov
in
adc
fnsave
ds
xlat
jg
add
bound
shr
int3
test
rol
ret
xchg
jmp
bound
fcmove
add
aam
testl
call
mov
mov
jmp
dec
mov
ljmp
dec
shlb
cmp
outsb
push
pop
add
pop
mov
jno
dec
or
nop
add
push
ljmp
iret
rolb
out
fldt
testl
or
add
add
and
repz
dec
jecxz
jmp
in
call
jnp
testl
sarb
in
pminub
inc
add
jecxz
or
cwtl
cld
or
outsb
mov
sti
negl
add
jecxz
dec
or
pop
add
or
add
cltd
addl
lods
sti
aas
pop
cmp
addl
cli
sub
je
stos
sti
pop
mov
xchg
icebp
pop
int3
and
les
pop
or
aas
and
jo
into
inc
fwait
notl
std
jno
gs
enter
cmc
insl
pop
in
fs
or
mov
cmpsl
fsubrs
mov
in
pop
or
add
js
loope
xor
idivb
mov
int
sti
inc
outsb
mov
shrb
xchg
push
shlb
push
mov
popa
movsb
mov
push
stos
add
shlb
rolb
mov
fs
bound
test
int
inc
lret
incl
hlt
cmpsl
xor
inc
inc
pop
adcb
mov
cmpsl
mov
cli
fiadds
push
aaa
mov
push
ret
test
fcmovb
add
xchg
mov
testb
add
add
mov
jmp
jae
mov
and
adc
add
xchg
orl
jmp
mov
insb
mov
and
add
lock
cmp
or
repnz
addb
orl
rcrb
lea
std
out
cwtl
lret
imul
adc
xchg
jmp
cmc
mov
adc
test
mov
rolb
sti
sub
shlb
fwait
sti
cmpsb
sub
add
cs
or
fiadds
negl
test
or
mov
xchg
int3
mov
pop
dec
adc
mov
or
cmp
cmp
add
add
lock
add
jmp
cmp
add
jmp
add
cmp
add
shl
cmp
add
cmp
add
icebp
cmp
cmc
lret
push
shr
lret
push
shl
lret
push
rcr
lret
not
aad
not
int
not
sarb
int3
shrb
int3
movsl
rcrb
int3
movsl
rorb
int3
movsl
sar
lret
movsl
shl
lret
mov
in
lret
rcl
in
into
rcr
lret
hlt
aad
lret
fcmovbe
int
sub
cmp
int3
push
sub
int3
inc
aad
int3
mov
adc
int3
add
mov
fwait
push
mov
cwtl
pop
mov
xor
mov
mov
cmp
add
sub
add
fmuls
add
fisttpl
add
or
int3
add
or
xor
or
pop
lods
or
or
rorl
add
or
lcall
add
or
add
or
or
or
add
or
cmp
push
lock
mov
or
fists
rclb
out
out
dec
stc
add
iret
add
xchg
jne
lcall
sbb
add
jbe
cmc
fisubrl
add
push
inc
or
sbb
add
jmp
mov
rolb
pop
cmp
jo
xlat
iret
adc
mov
je
jbe
mov
mov
call
push
jge
std
cmc
or
add
call
add
jge
call
inc
in
xlat
out
ss
add
movsl
xchg
sub
fwait
xchg
xor
sbb
jmp
aaa
icebp
jg
jle
adc
or
jg
mov
divl
ss
pop
dec
addl
add
cmp
adc
dec
pop
stc
inc
or
dec
je
cli
sbb
add
or
add
data16
lret
mov
out
mov
fmulp
xor
lret
out
jmp
add
orl
mov
jle
mov
cld
cld
daa
inc
mov
xor
movsb
mov
add
mov
or
or
xor
popf
sti
push
stos
stos
outsl
in
jbe
jmp
push
clc
ficoml
lea
iret
mov
xor
fstl
add
or
cmpb
adc
cmpsl
fsts
lret
inc
mov
popf
mov
inc
mov
add
inc
and
or
and
cwtl
addb
not
stc
pop
lock
xor
vmovshdup
cli
gs
aas
ss
xor
std
stc
aam
fadds
orb
add
inc
and
sbb
call
xlat
ret
call
test
add
scas
lcall
hlt
lret
push
bound
push
push
xlat
add
pop
or
add
add
sbb
push
push
bound
jbe
adc
rolb
jge
lret
jae
mov
xlat
cli
xor
loop
into
mov
ret
pop
cld
sub
push
pop
and
movsl
shlb
mov
and
cld
adc
jmp
fildl
sbb
lea
push
idivl
lret
fldl
mov
mov
mov
jmp
cmc
adc
xchg
jne
loop
sti
in
mov
adc
add
xchg
repz
ret
call
jp
aaa
pop
fstp
ret
aas
add
cmpl
lods
in
cs
scas
adc
icebp
std
movsb
addl
push
call
aaa
mov
adc
mov
jle
mov
mov
adc
push
ret
push
repz
fldcw
xor
push
insb
add
adc
mov
imul
add
pop
pop
adc
cwtl
adc
dec
movsb
or
lahf
hlt
daa
int3
inc
aam
psubsb
clc
aaa
and
dec
fildll
pop
int3
jo
sti
cmp
mov
mov
lret
jo
mov
jmp
iret
ret
cmp
inc
int3
pusha
iret
daa
cmp
cmp
push
add
mov
dec
add
les
cs
mov
cwtl
adc
int3
mov
aad
lret
add
mov
xchg
xchg
imul
arpl
int3
mov
cli
scas
xor
cli
cld
jecxz
inc
jmp
lahf
xlat
dec
xor
popf
push
jb
hlt
jmp
mov
and
and
call
stos
inc
cmp
add
fwait
sub
jmp
imul
jmp
clc
dec
push
add
jge
push
xlat
sbbl
mov
jmp
add
je
add
shl
mov
lret
test
iret
add
sbbl
imul
inc
pop
ja
jle
lcall
enter
mov
and
orl
pop
xor
push
push
test
enter
xor
inc
sbb
add
into
xorl
fldcw
add
into
xorl
inc
mov
mov
in
aam
aas
add
call
stos
add
out
aas
add
sbb
lods
lcall
mov
mov
mov
lcall
xchg
sti
addr16
jp
add
inc
add
mov
je
sub
mov
add
xchg
lahf
pop
lea
add
mov
add
xchg
sti
mov
xor
add
out
rcll
test
shr
fldenv
inc
add
add
add
out
inc
add
into
rolb
lret
xchg
jge
push
call
mov
or
push
mov
in
iret
pminub
add
ret
aaa
inc
add
repnz
add
outsb
inc
data16
push
xchg
mov
push
sbb
inc
int3
out
inc
aaa
cmc
mov
int3
fists
aas
add
add
and
es
leave
push
test
es
mov
xchg
repnz
add
int
add
incb
outsl
lods
incb
ja
incb
jg
incb
int3
push
incb
jmp
push
incb
rorl
into
xor
add
sub
add
xor
leave
sti
xchg
push
jbe
mov
sub
cld
mov
xor
pop
leave
push
push
push
test
test
cmpsl
mov
add
add
out
add
scas
loop
test
cmp
icebp
push
mov
loop
pop
lret
sub
sbb
push
xchg
imul
and
iret
add
fstpt
pop
testb
xor
add
mov
mov
pop
idiv
loop
test
push
mov
fldt
pop
divb
pop
push
out
setge
jne
add
mov
jne
xchg
xor
out
inc
add
inc
pop
les
add
repz
add
xchg
call
test
sbb
mov
cmp
cmp
push
lahf
mov
add
add
mov
adc
xlat
aam
les
add
mov
cmp
lea
jp
xor
add
sti
adc
cmp
jl
adc
mov
hlt
shrl
mov
cmc
sub
or
mov
int
out
cmc
scas
push
mov
call
movb
add
add
mov
call
xchg
in
sti
mov
mov
call
not
lret
cmp
xor
shrb
or
out
sar
mov
add
sbb
cmp
jl
shll
and
insl
jg
mov
xchg
xchg
cmp
sbb
xor
filds
jb
insl
mov
cli
push
add
dec
xchg
inc
sarl
cs
lret
and
mov
insl
lods
add
adc
aam
add
xchg
aam
push
sarl
and
roll
mov
sbb
or
out
out
jb
shll
rcll
mov
pop
out
movb
push
ffree
xchg
or
add
add
add
add
jle
push
lea
rolb
jmp
pop
testb
xor
inc
addl
into
mov
add
push
mov
mov
cmp
adc
jmp
je
cmp
lea
shr
mov
pusha
test
aad
push
incl
push
or
dec
inc
or
aaa
adc
sti
mov
push
mov
movsl
sub
cld
movsb
dec
add
inc
dec
loop
imul
sub
jle
in
les
adc
inc
and
jge
sbb
jge
and
jge
sbb
jne
add
dec
and
sub
inc
add
and
sub
or
loop
inc
test
add
add
xchg
ja
push
ret
test
sbb
xchg
sbb
adc
call
adc
jne
sti
outsl
dec
push
adc
movsl
dec
mov
fxch
in
add
sbb
fcomps
aas
sub
cmp
repz
out
jae
pop
test
mov
dec
shl
add
fistpl
xchg
movsb
out
mov
add
add
or
add
arpl
and
in
add
pop
jmp
iret
out
test
pop
mov
add
xchg
inc
mov
add
insl
xchg
cmc
adc
ret
pop
addr16
add
or
add
repz
icebp
pusha
mov
add
cwtl
iret
mov
cld
lret
add
sbb
add
sahf
xchg
daa
loope
mov
add
dec
ljmp
jmp
call
insb
js
sahf
jmp
cmp
lret
adc
add
sbb
gs
fldl
jb
push
inc
cmc
cli
push
add
push
push
add
add
ret
adc
add
pop
arpl
pop
int3
add
sub
cmc
adc
lcall
push
add
push
mov
mov
push
in
add
inc
add
jmp
mov
fxch
mov
icebp
stc
or
sub
add
add
or
sbb
pop
ret
mov
push
and
or
adc
mov
inc
test
rolb
adc
enter
lds
or
or
int
add
decl
movsb
jge
mov
jne
inc
push
mov
in
jmp
movsl
jnp
test
adc
pop
mov
xchg
sbb
movsl
incb
mov
repnz
or
aas
add
sub
add
mov
push
mov
xor
jle
stc
jge
xchg
or
jge
add
roll
add
ucomiss
lret
adc
cmp
add
inc
and
add
sti
sbb
popa
addl
out
jbe
call
xchg
or
sub
pop
outsl
xchg
xchg
add
add
fcoms
mov
outsb
mov
aas
in
js
lock
pushf
mov
mov
mov
adc
add
pop
inc
fdivr
push
xor
testb
adc
xchg
cmc
add
xor
or
adc
dec
out
dec
add
add
xor
mov
adc
enter
lret
add
add
rorb
pop
shr
xchg
shll
xchg
enter
test
add
aas
dec
dec
fildl
jmp
bswap
add
aas
cmp
movsl
sti
push
push
rorb
and
add
xor
add
aaa
call
sarl
dec
push
add
movsl
push
push
sbb
sub
ljmp
adc
movsl
loop
sbb
sub
xchg
xor
and
enter
lds
sbbb
je
ss
and
aaa
call
push
mov
dec
add
inc
testb
iret
or
fnstcw
dec
and
push
xor
ret
add
push
jnp
and
add
movsb
das
xchg
push
pop
repz
je
cld
cmp
pop
xlat
jmp
jge
in
out
cmp
mov
add
movsl
sub
sarb
ljmp
xor
sar
out
in
add
jbe
or
and
sbb
and
add
out
incb
add
push
test
sbb
int3
xlat
adc
int3
incl
mov
out
decl
add
mov
cmpsl
push
cmp
or
out
es
aaa
call
fdivrl
or
aam
lret
nop
sbb
mov
mov
pop
aaa
sbb
or
out
mov
pop
stos
jg
nop
xchg
ror
jns
push
adc
sti
pop
sbb
pushf
push
aas
fstp
push
mov
xchg
testb
jp
call
add
cmc
int3
ret
ret
mov
add
inc
aam
addr16
int3
add
pop
or
in
mov
mov
fnsave
push
adc
dec
fiadds
adc
jo
add
lret
add
push
dec
sti
jmp
add
xchg
sbb
add
add
cli
fmull
inc
jmp
ret
lret
test
pop
int3
add
jmp
rclb
out
adc
addl
sahf
test
mov
sahf
cmp
xor
and
sbb
mov
push
bswap
out
or
jne
pop
add
insl
or
lea
mov
mov
shl
and
xor
add
ret
mov
jbe
pop
int3
push
push
mov
inc
push
xchg
mov
add
or
arpl
and
je
add
add
cmp
inc
mov
mov
mov
inc
and
sbb
add
ja
add
add
add
mov
incb
push
sub
add
cmp
add
clc
movsb
xchg
sbb
inc
sbb
das
dec
loop
push
jnp
insl
xchg
pop
movsl
decb
cmc
mov
inc
add
ficompl
bound
add
sub
into
bswap
sti
mov
je
stos
mov
add
in
adc
cmpsl
add
jl
aam
xchg
push
mov
aaa
add
adc
rclb
xchg
lds
sbb
in
mov
xor
jmp
cmpsb
sub
adc
xchg
inc
mov
ret
and
add
test
addr16
scas
call
in
xor
add
lret
cmc
pop
dec
fcomps
ror
jae
mov
xchg
int3
out
jg
imul
lret
mov
mov
jnp
test
call
adcb
push
adc
call
jo
and
jmp
sbb
insl
int
movsb
pop
xchg
add
test
xchg
faddl
lods
leave
push
je
jmp
and
push
mov
jmp
add
je
mov
cmp
add
or
xchg
add
int
inc
inc
push
add
test
push
inc
movsl
add
leave
mov
pop
mov
imul
jl
bound
push
js
dec
adc
mov
cli
mov
aam
adc
mov
mov
cltd
enter
aam
cli
decl
and
call
pop
jae
and
cwtl
pop
mov
in
push
pop
jae
and
xchg
lea
cwtl
lea
cwtl
lea
dec
lea
mov
insb
shrb
addb
and
mov
or
and
pop
push
push
xlat
out
fucomp
std
call
fcoml
mov
je
rorb
push
xchg
call
fwait
mov
aam
xchg
mov
test
inc
fistl
rcr
mov
lods
test
insb
mov
pushl
lret
lock
jns
test
mov
arpl
add
out
lds
repnz
lock
out
jge
jecxz
or
out
daa
mov
push
sti
push
pop
add
int3
adc
add
arpl
int3
out
inc
inc
call
xchg
bswap
sbb
cmc
adc
or
nop
je
dec
add
int3
inc
mov
mov
inc
sub
mov
jmp
stos
gs
and
call
orb
mov
mov
aad
and
jbe
and
int
sti
mov
sar
call
fists
mov
aam
rcl
movsl
jle
and
iret
cmp
int
sub
sub
jmp
mov
cli
rolb
adc
jns
adc
orl
fnsave
lea
mov
add
adc
add
stos
adc
xlat
imul
rorb
mov
cmc
je
mov
cld
pop
andl
mov
pop
bound
push
mov
mov
mov
fs
test
jno
cli
mov
int
shrl
insb
add
push
add
and
jl
loopne
pushf
je
sarb
je
testl
add
cs
sti
scas
sbb
enter
xchg
mov
cmp
xchg
dec
lret
mov
add
add
aaa
push
bound
cld
inc
add
or
sub
inc
add
filds
mov
jnp
xor
imul
jl
pop
mov
sub
shll
shrb
add
fisubl
pop
cmpsl
shll
inc
push
jecxz
inc
shrb
int3
dec
and
mov
fs
das
out
add
fnsetpm(287
out
xchg
psubsb
xchg
xchg
aaa
or
fsub
inc
int3
mov
fsubs
roll
lea
mov
fcom
testb
or
inc
mov
mov
xchg
dec
inc
push
sub
mov
add
movb
aad
sti
push
add
pop
or
lock
movaps
inc
shll
adc
adc
and
scas
adc
leave
xchg
push
dec
dec
xchg
stos
inc
sti
mov
xor
fcoml
lcall
mov
test
inc
jmp
jge
add
arpl
inc
jmp
test
jne
add
movsl
add
lret
movsb
andb
dec
call
inc
pop
push
dec
call
and
call
adcb
jnp
repnz
xor
test
movb
xor
or
mov
int3
or
push
xchg
push
repz
push
call
add
ds
adc
pop
pop
and
data16
enter
addr16
ficoms
cs
jb
iret
fistpl
js
or
xor
aad
icebp
mov
sbb
enter
ror
mov
into
or
jno
jns
jnp
data16
lea
add
inc
in
outsb
shlb
shlb
adc
sbb
mov
sbb
sub
das
rol
mov
sub
cmp
and
add
pop
adc
fldl
jne
lret
cvtps2pd
int
add
and
ror
mov
ror
adc
or
push
or
push
push
sub
adc
add
cltd
popa
lock
mov
pop
test
mov
in
out
outsb
jbe
mov
out
shl
icebp
divb
ret
add
mov
ljmp
out
xchg
add
push
dec
mov
dec
shll
cmpsl
cmp
dec
iret
jl
sub
mov
add
xchg
jmp
ficoms
xchg
incl
ret
jne
jmp
add
sub
mov
add
inc
cltd
cmp
xchg
movsb
cli
sahf
xor
sub
xchg
lock
test
adcl
sub
lods
mov
aam
cli
pop
mov
add
test
loopne
test
cbtw
popa
pop
add
xchg
push
sub
popa
push
and
mov
adc
lea
fbld
loopne
jbe
addb
test
mov
test
pushf
push
lea
arpl
movsb
shll
iret
in
jne
dec
call
xor
mov
test
in
rolb
clc
clc
popf
push
addl
loope
pusha
popa
cli
mov
sahf
jbe
pop
push
adc
fxch
jns
add
push
cs
addl
mov
sbb
jnp
in
add
cli
sbb
and
rorl
cmc
jb
jle
mov
or
outsb
cmc
pushl
jmp
push
mov
xor
test
jnp
mov
xchg
jne
in
incl
cs
roll
add
add
mov
into
addr16
cltd
mov
inc
and
call
loope
mov
les
jne,pt
int3
je
and
mov
inc
call
add
push
lahf
cli
je
cmp
ret
scas
dec
xor
sub
ret
push
add
xchg
outsl
in
call
mov
adc
gs
hlt
mov
mov
aaa
add
cmp
mov
lods
in
test
out
inc
mov
fidivrl
idivl
mov
and
push
sub
mov
and
add
out
inc
pop
addb
ret
sub
jns
add
jb
pusha
xlat
ret
sahf
jg
add
mov
and
add
add
je
cs
jmp
bound
mov
sbb
xchg
or
cmp
jo
inc
sahf
outsb
lock
decb
sub
test
mov
mov
int
or
aaa
mov
out
aad
push
jae
push
or
adc
repz
jo
movb
ds
stos
into
pop
jle
add
inc
and
sbb
pusha
mov
call
inc
flds
add
add
mov
sarl
jo
outsb
setp
jo
out
ret
adc
pop
leave
add
enter
lea
xor
insl
add
mov
sbbl
and
sbb
push
rcrb
arpl
fcompl
inc
and
incl
repnz
and
test
push
outsb
mov
adc
movl
in
mov
add
add
cmp
jbe
mov
dec
fadd
pop
outsb
sub
test
jle
data16
das
ret
sub
cli
mov
inc
je
js
lea
pop
pop
dec
mov
outsl
test
add
sub
cli
ja
inc
jne
cmp
data16
mov
inc
push
loop
inc
hlt
loop
adc
add
xchg
sub
jno
push
scas
lret
insl
dec
xchg
xchg
add
int3
out
repz
jp
js
jg
xlat
fwait
imul
mov
daa
lock
adc
jnp
into
outsl
leave
scas
cltd
test
fildl
mov
jmp
jo
lock
jle
shlb
lcall
je
add
movsb
jmp
pop
push
cld
je
idiv
ficoml
in
fdecstp
movsl
cld
aaa
inc
sbb
add
cmpsl
jge
inc
add
or
loope
insb
ret
inc
pop
movswl
movb
enter
add
vpmovm2w
push
aas
icebp
dec
or
lcall
into
xchg
push
and
add
push
and
inc
add
add
inc
les
mov
pop
push
insl
lds
std
and
clc
adc
cli
jmp
adc
add
aaa
out
sbb
mov
mov
inc
sbb
or
mov
jne
pop
push
add
adc
les
dec
mov
test
adc
add
int
ror
sub
xor
decb
jmp
add
mov
clc
cmp
jo
and
lea
test
insl
xchg
out
dec
sbb
xor
adc
xor
imul
or
push
pop
fwait
les
mov
out
add
jecxz
jb
xchg
ds
sbb
or
add
ja
jnp
push
jge
mov
add
clc
lock
dec
dec
push
xor
imul
call
jp
mov
dec
pop
scas
sub
jle
cli
xor
add
ret
add
daa
inc
je
cmp
cli
hlt
xchg
xchg
aaa
mov
shrl
sbb
insl
rorb
scas
push
add
add
add
loop
jg
cmp
jge
out
jle
aaa
xchg
out
ret
lret
iret
inc
sub
mov
lea
clc
insb
lcall
push
scas
mull
sahf
and
pop
mov
mov
adc
xchg
aad
xchg
fldcw
xchg
push
lods
xchg
xor
testb
add
insl
lock
lret
mov
sar
pusha
and
psubusb
sti
jp
out
add
jg
or
int3
add
stos
cltd
insl
fisubrs
ret
add
add
jmp
jb
jmp
bound
jmp
bound
jmp
push
int3
jae
subl
aaa
fcomip
add
jbe
sti
aaa
push
hlt
pop
dec
insb
aaa
and
add
xchg
jne
loopne
jmp
jo
ljmp
enter
mov
addr16
or
jmp
xor
mov
mov
call
xor
loope
mov
push
pop
and
jp
push
stc
jle
je
fdiv
push
add
ljmp
add
push
xor
push
sub
jge
sub
adc
and
jp
push
pop
movsl
push
xor
and
adc
push
jge
stos
leave
xchg
je
xor
dec
dec
shll
jne
faddp
jmp
push
pop
incl
aaa
sbb
push
sar
in
xchg
xchg
addr16
pop
addr16
pop
fdivr
pop
mov
aas
and
and
mov
add
add
pop
pop
sti
daa
sbb
and
mov
pop
mov
mov
into
xchg
dec
xor
out
inc
push
sti
push
jae
jne
push
ljmp
or
and
xchg
mov
scas
das
inc
je
xor
cmp
pop
sbb
imul
sub
mulb
add
add
pushf
roll
lret
lcall
jae
dec
mov
iret
hlt
sahf
xchg
sarl
pop
jl
out
adc
out
psrlw
mov
push
insb
call
mov
add
inc
js
and
pop
sbb
cld
pop
sbb
mov
imul
sti
push
add
or
inc
add
jne
sub
mov
call
call
pop
out
sub
sub
jne
out
xchg
jne
idiv
stc
jne
scas
ficomps
movsb
rol
lahf
xchg
pop
jb
cmc
pop
and
scas
add
xor
test
repz
inc
jmp
pop
xchg
xchg
dec
mov
addr16
shl
and
int
dec
insl
stc
fstpl
call
jne
loopne
jne
loopne
call
add
sbb
push
and
sbb
sub
cmp
mov
je
mov
rclb
test
int
call
test
pushf
adc
out
jl
je
out
enter
and
cltd
scas
call
shlb
add
add
dec
ljmp
pop
pop
stos
roll
adc
jnp
mov
adc
mov
enter
push
shlb
ret
mov
pop
sbb
add
or
ja
movsb
push
add
sub
cmp
lahf
and
mov
inc
add
js
sbb
mov
call
js
incb
and
mov
movsb
add
mov
or
mov
xchg
fs
ja
and
sbb
jp
ucomiss
mov
aaa
push
jg
or
mov
leave
pop
repnz
int
inc
int3
pop
hlt
inc
es
call
cmp
shlb
add
out
mov
cld
jge
push
jne
mov
pop
pop
out
jns
jecxz
xchg
pop
aas
xchg
add
add
and
or
xchg
iret
jecxz
outsb
inc
inc
mov
pop
stos
xor
add
lods
in
js
lea
mov
mov
fwait
mov
sub
mov
adc
add
cmc
ret
subb
add
mov
push
lods
mov
test
fimuls
jmp
lds
jg
psraw
stc
inc
shll
out
mov
adcb
ret
mov
xor
mov
test
mov
or
mov
sbb
jle
or
repnz
cmp
int3
mov
push
inc
dec
ljmp
subl
mov
pushf
pop
bound
pop
add
push
or
pop
sbb
push
bound
add
push
mov
cmp
testl
xor
scas
jmp
test
jne
sbbb
je
fiaddl
sti
ljmp
inc
ja
mov
dec
mov
loope
sbb
test
aad
jnp
add
xchg
cli
mov
push
push
mov
dec
clc
and
xchg
and
inc
leave
cmp
jne
inc
popl
mov
out
cmp
popf
and
cmp
lret
sub
and
sub
outsl
sti
add
mov
sub
and
sbb
mov
inc
shlb
push
sbb
xchg
adc
mov
mov
add
sub
add
ret
sbb
inc
rcrl
xor
push
or
sbb
testb
dec
or
fwait
incb
inc
or
lret
call
add
popf
xor
sub
lds
into
dec
cwtl
adc
int3
adc
jecxz
push
push
sub
mov
mov
add
or
test
mov
and
add
fucomi
adc
mov
add
lahf
fdivl
mov
cmp
test
repz
jmp
add
pop
inc
xchg
add
int3
out
push
int3
and
cmp
sti
arpl
push
jne
not
mov
jne
xor
scas
and
cmp
mov
xchg
sti
stos
shrb
popa
or
adc
mov
or
lock
dec
mov
mov
iret
add
loopne
and
xchg
pop
xlat
inc
mov
cmovp
jmp
jae
jne
lock
lcall
add
sbb
clc
add
jne
jb
push
add
xchg
decb
sub
loope
push
inc
push
or
mov
mov
push
cmpl
in
mov
fimuls
mov
shrb
rol
orl
shr
pop
sub
jmp
sub
push
mov
cmc
jne
push
shr
add
jmp
incl
orl
or
out
xor
clc
cwtl
pop
sti
push
jae
mov
in
jmp
xor
imul
or
rcrb
add
mov
jae
mov
int
dec
mov
push
cmpsb
sub
flds
sub
lock
rolb
cs
sti
jg
xchg
add
pop
outsb
clc
std
rolb
add
mov
sub
pop
sti
pop
mov
mov
dec
into
lret
das
int3
loop
cmp
mov
push
mov
xchg
sbb
xchg
xor
xor
and
sarl
dec
shrl
sti
cmc
out
mov
insl
lds
mov
add
cwtl
adc
add
xchg
mov
daa
call
mov
pop
test
add
test
outsb
inc
rcrb
push
mov
adc
pop
add
push
add
lret
je
xor
sbb
mov
icebp
mov
push
jns
or
cs
cwtl
imul
push
outsl
and
add
dec
dec
icebp
cmp
or
xchg
sub
out
jbe
add
jbe
roll
inc
cmp
mov
mov
bound
jp
in
mov
xchg
mov
jne
cmp
sub
aaa
fimull
push
pcmpeqb
rclb
std
ljmp
out
aaa
push
add
bound
mov
or
add
xlat
dec
call
mov
sahf
add
in
push
adc
clc
out
cli
sahf
and
adc
add
leave
cmp
lret
pushl
adc
or
cmp
stc
adc
inc
jne
mov
add
repnz
test
mov
push
pushl
add
mov
idiv
add
clc
inc
je
jmp
sar
mov
ret
mov
sbb
inc
pop
mov
enter
dec
out
std
pop
je
test
dec
push
sti
dec
jecxz
push
pop
repz
cld
fadds
rcr
add
dec
push
push
test
xchg
data16
xor
push
push
scas
mov
add
xor
jae
xor
decb
orb
cmp
jge
daa
or
syscall
mov
mov
js
mov
xchg
inc
mov
pop
enter
jno
test
lea
dec
fcmovbe
mov
mov
daa
add
mov
jg
movsb
xchg
paddb
xor
lret
dec
lods
or
js
pop
xor
jae
cltd
add
outsb
pushl
sub
mov
int3
cmp
jnp
add
arpl
inc
jmp
add
push
mov
out
mov
cld
lret
add
test
add
push
add
xchg
and
test
lret
push
pop
or
add
dec
out
ja
call
movsb
inc
jmp
xor
cmp
sub
sub
push
inc
int
adc
icebp
push
push
int
inc
call
lods
call
call
fs
scas
xor
dec
xchg
add
testb
pop
iret
add
add
cli
jmp
inc
push
inc
mov
not
ficompl
icebp
mov
lods
loop
setge
add
sbb
in
shrd
add
sub
popf
push
add
sbb
aaa
jne
add
int3
lcall
movsb
sbb
push
sbb
aad
aam
addr16
mov
xchg
mov
dec
sub
pop
xor
push
std
scas
add
mov
clc
test
sbb
add
mov
and
enter
dec
je
cmc
pop
add
jle
adc
popf
xor
shlb
call
nop
repnz
jb
sti
mov
cmp
movsb
ror
jnp
and
mov
and
cmp
mov
or
rol
sub
dec
popf
fmull
scas
ret
add
ja
std
scas
add
in
add
iret
xor
lret
sub
scas
jae
inc
add
cli
sbb
mov
adc
clc
movsl
lods
add
adc
stos
cmpsl
cmp
xchg
imul
inc
lea
inc
loop
stos
dec
adc
lods
or
lock
cmp
xchg
in
les
jecxz
shrb
jno
add
fdiv
repz
push
add
loop
sbb
pop
sbb
mov
xchg
loop
mov
mov
xchg
call
sub
adc
or
jbe
loop
mov
pop
dec
xchg
adc
mov
mov
push
dec
mov
add
dec
push
rcll
aaa
or
ret
push
std
scas
ficompl
sub
and
mov
jp
mov
mov
jb
add
pop
or
fcmovb
es
fst
dec
ss
pop
icebp
jp,pn
icebp
xor
pop
mov
dec
and
sbb
popf
into
dec
dec
inc
outsl
aam
fdivs
add
add
rol
mov
in
dec
jg
decl
lret
add
jae
jo
cmc
adc
lcall
mov
sbb
inc
js
stc
xchg
cli
out
loop
add
mov
leave
mov
pop
mov
add
rcrb
ficoml
test
es
xor
xchg
xchg
dec
adc
test
inc
ss
jle
adc
adc
lds
jl
mull
jne
or
jne
rolb
mov
xchg
test
cmpsl
add
jge
dec
sti
dec
adc
iret
dec
test
add
in
add
pop
pop
mov
cmpl
sub
lods
push
pop
pop
pop
pop
xorl
mov
mov
mov
call
mov
xlat
daa
cmc
pop
int3
outsb
push
test
xchg
lret
lea
push
mov
out
sbb
xchg
add
dec
lods
xchg
mov
jmp
ja
daa
add
mov
paddq
add
jl
dec
inc
and
add
add
add
inc
mov
cmp
andl
cmpsl
int
jmp
pop
inc
test
xchg
in
push
test
mov
test
out
inc
test
ss
sub
test
pop
inc
inc
sbb
roll
je,pt
scas
sub
shlb
mov
pop
adcl
add
add
and
iret
jns
movsl
iret
mov
aas
lea
aas
lea
aas
call
push
add
bound
add
cmc
adc
xor
test
popf
jnp
incl
push
filds
cltd
iret
orl
or
add
out
cmp
lods
and
xchg
into
add
mov
repnz
jae
divl
cwtl
cli
cmp
or
push
rorl
repz
sbb
dec
clc
lods
mov
test
cmp
lea
pop
xchg
incb
jge
inc
sti
fucomip
ja
aad
dec
push
jnp
pop
arpl
fsubrs
sti
scas
pop
lods
inc
cmpsb
stc
mov
add
jg
js
dec
sti
xor
add
fdivrs
add
js
insl
adc
cmp
ror
jl
insb
stc
inc
add
icebp
inc
je
mov
stc
pop
xorl
das
lret
fisttpll
jp
dec
sti
fbld
repz
int3
pop
shr
fdiv
leave
gs
mov
add
fbld
repz
push
add
push
mov
jns
mov
orl
call
addl
std
add
lret
fs
cmc
mov
dec
dec
rcrb
cltd
lret
out
call
dec
push
mov
cmp
cmp
inc
lods
aad
add
pusha
dec
sub
cmp
cmp
pop
add
or
add
dec
rcll
or
push
mov
cs
and
stos
andl
add
mov
addb
add
push
aas
and
mov
int
jp
jmp
add
adcl
mov
dec
inc
dec
add
mov
push
lcall
das
iret
or
inc
aaa
shll
add
aaa
stos
sub
lods
and
lds
or
add
add
sub
idiv
xchg
or
xchg
test
fadd
pushaw
dec
and
lea
or
jmp
inc
or
testb
in
iret
add
lea
push
push
sbb
and
push
dec
cmp
add
or
inc
ret
dec
lahf
add
adc
and
adc
dec
movsl
jnp
inc
add
cwtl
add
lcall
call
cmp
rorb
andl
lock
add
dec
out
jg
cmovo
or
add
adc
push
mov
sti
in
xchg
repz
add
outsl
add
sti
cmpsl
aam
adc
lahf
in
aad
pop
jns
clc
gs
ljmp
mov
and
popa
lcall
mov
and
lcall
xor
inc
mov
scas
shll
leave
out
mov
xchg
dec
xor
lret
mov
ret
mov
pop
or
add
adc
mov
add
int3
andb
out
mov
adc
or
je
test
out
jge
out
clc
lret
out
mov
jp
jge
jecxz
rclb
std
mov
add
or
out
test
cwtl
fildl
int3
out
pop
filds
mov
mov
lock
adc
lds
lret
jae
test
add
lret
push
jb
insb
xchg
scas
lock
int3
push
pop
xchg
push
fidivs
inc
xchg
or
jp
add
add
cld
lret
mov
jl
call
loopne
add
add
insl
loopne
call
loopne
add
add
insl
loopne
add
add
insl
and
je
add
push
inc
ljmp
add
dec
lds
emms
or
repz
enter
inc
add
stos
int3
sub
pop
enter
aas
notl
rclb
add
std
test
leave
add
jno
cmp
add
mov
push
sbbl
cmp
out
popl
mov
enter
scas
sub
xchg
bound
fld
xchg
add
repz
add
cli
dec
push
bound
inc
std
sar
incl
decb
fadd
adc
inc
push
add
push
lea
sbb
rcr
mov
lock
jge
clc
test
arpl
ljmp
jmp
mov
inc
gs
jge
repnz
call
lock
lock
add
call
test
lds
gs
push
sub
ljmp
gs
push
cmpsl
ja
adc
fcompl
jns
fsubl
mov
jg
cld
fwait
or
call
js
cmpsl
sti
mov
fdivrs
lock
int3
fs
aad
pusha
enter
adc
inc
push
inc
lods
pop
adc
fnsave
jecxz
xchg
inc
xchg
cmpsl
add
fmuls
hlt
aas
int3
outsb
push
jge
push
push
pop
shl
rcr
daa
add
or
jge
xor
lods
out
inc
sbb
mov
clc
lret
sbb
sbb
ret
lahf
dec
test
fiaddl
hlt
inc
add
and
addr16
ljmp
lods
cmp
fwait
push
or
cltd
mov
cli
aam
lahf
fadds
insb
jbe
dec
int
push
jmp
jb
je
cli
fildl
lods
jne
mov
inc
xlat
int3
stc
ret
jo
into
out
test
sub
dec
inc
add
mov
and
scas
xor
sub
dec
ret
lods
and
cmp
and
cld
dec
inc
add
jle
add
jne
out
fwait
push
sub
fidivs
cmc
adc
loop
push
pop
pushf
and
cltd
or
push
sub
dec
push
ja
lea
repz
dec
and
mov
stos
test
jmp
jp
mov
lods
sbb
inc
test
add
test
fsubrp
jae
fxch
dec
push
pop
mull
test
lds
add
jno
shlb
ljmp
xor
test
jge
gs
mov
and
mov
scas
dec
mov
ljmp
das
adc
pop
mov
clc
or
sbb
cmp
dec
mov
pusha
scas
mov
push
mov
je
gs
out
iret
inc
sti
jge
push
xchg
shr
jne
cli
roll
call
decb
fs
cli
adc
int3
je
jecxz
push
fmuls
icebp
into
lahf
outsb
xlat
inc
inc
inc
and
incb
rep
cld
out
sbb
enter
nop
les
inc
dec
insl
dec
xchg
data16
mov
out
les
int3
mov
outsb
call
pop
add
int3
lcall
inc
insl
add
add
out
addr16
call
ds
add
mov
and
in
add
sbb
add
jl
push
jno
or
nop
sti
ret
insl
jg
sar
push
test
and
call
ret
cmpb
mov
dec
sbb
cld
pop
mov
add
add
pop
and
or
push
test
cmp
insl
push
push
clc
jmp
test
testb
idivl
int
enter
fcomps
roll
pop
and
add
enter
pop
and
mov
mov
push
pop
rorb
jo
enter
popf
enter
mov
push
push
aam
and
mov
repnz
pushl
add
dec
cld
add
cmp
test
jno
fs
fwait
push
cmp
cwtl
lea
cwtl
dec
push
push
aad
adc
add
popa
pusha
cmp
push
stc
adc
jbe
leave
add
xchg
mov
aam
add
loope
add
out
push
inc
sti
jge
adc
or
loope
add
mov
into
cli
adc
fidivs
shlb
ljmp
out
sbb
incl
mov
ljmp
push
inc
sti
cmpl
test
lea
incl
int3
je
sbb
in
add
call
fsub
scas
ds
push
test
test
call
call
push
pop
fs
xor
out
std
or
mov
push
xchg
int3
out
out
pop
or
imul
xchg
shl
add
int
add
add
add
out
add
xchg
sub
test
out
test
call
test
add
and
add
add
push
pop
shrb
add
xchg
jmp
lods
pop
dec
add
sbb
add
test
add
test
cli
int
dec
mov
adc
add
lret
add
mov
jg
add
mov
jmp
add
mov
jno
aad
int3
test
js
jne
js
js
imul
inc
jmp
repnz
push
insb
cltd
push
and
aad
add
shlb
dec
lea
mov
jmp
cmpsb
cmc
mov
push
xor
in
stos
add
je
mov
cmc
adc
sub
jle
jge
cmpsb
int3
je
in
cmp
call
aam
jae
in
jnp
sbb
or
and
roll
add
mov
push
test
test
or
add
lods
ds
add
push
call
dec
outsb
adc
add
add
mov
out
ljmp
jne
loope
add
xchg
mov
je
ljmp
les
push
add
xor
push
mov
xchg
or
outsb
mov
fidivl
adc
jne
call
mov
mov
add
jne
pop
inc
jns
sbbb
incl
int3
mov
mov
sbb
add
jmp
mov
psrlq
mov
sub
xchg
ljmp
rcrb
add
fucomip
int
add
loopne
and
cmpsb
out
lret
pop
mov
int
add
int3
pop
fsub
fwait
pusha
shl
jo
and
jo
and
pop
jns
or
test
or
add
sti
iret
or
int3
out
cmp
jmp
ret
lea
data16
jmp
inc
test
push
mov
push
scas
int
fmull
mov
insb
cmp
add
sbb
and
jg
jmp
jb
test
jmp
gs
fistps
fiaddl
aaa
and
adc
add
add
lret
bound
mov
jno
test
add
xchg
mov
xor
jg
add
jecxz
test
jge
adcl
pop
mov
mov
jecxz
sub
sub
pushf
mov
test
jge
xor
mov
mov
push
push
mov
sub
mov
cmc
imul
dec
adc
pop
or
push
mov
mov
cs
imul
ds
aaa
sarl
enter
xor
add
sbb
add
sub
lret
jb
addl
jle
orb
pop
flds
inc
aas
add
pop
bound
lock
mov
jl
jle
add
out
sub
incl
jp
xorb
cmp
or
jb
pushf
in
std
incl
or
mov
mov
roll
enter
fcoml
shll
pop
out
mov
and
lret
jo
jle
add
loope
lods
out
ljmp
nop
int3
out
add
cmpsl
cwtl
rcrb
cld
iret
jle
fptan
test
arpl
or
outsb
add
lcall
repnz
add
or
fstps
adc
pop
mul
fidivrl
fcompl
rcrl
jmp
aaa
mov
aam
pop
les
or
out
xchg
flds
orb
adc
js
and
add
cld
lret
cmpb
dec
add
add
stc
mov
decb
int
dec
insl
inc
int
loope
lds
cld
sub
aam
cmp
loopne
xchg
mov
fs
fs
or
cmpsb
stc
sbb
or
shlb
dec
jb
inc
add
add
pusha
std
stos
ljmp
mov
add
jle
imul
add
add
jg
sub
add
sbb
testb
popa
push
lea
push
incb
inc
cmp
jmp
dec
test
out
fistpll
add
jmp
xchg
jne
pop
mov
push
in
ss
sbb
push
pusha
or
cli
andb
push
lds
pop
push
xlat
enter
adc
add
pop
mov
jb
incl
mov
adc
ljmp
inc
xor
decl
jae
rolb
add
add
mov
add
jg
adc
mov
push
dec
ds
sub
and
jne
jnp
add
inc
in
xchg
jns
loopne
jne
icebp
add
jne
cli
in
lret
xchg
adc
es
xor
add
fidivrl
int
add
int3
test
mov
xor
sti
inc
mov
add
add
pop
dec
sub
xor
dec
sub
lcall
mov
xchg
jno
jecxz
pop
scas
lret
stos
fs
add
ljmp
jae
cmc
xlat
pop
insl
inc
sti
inc
ret
add
int3
loop
dec
mov
outsb
cli
xchg
lods
in
pop
add
hlt
sti
stc
pop
in
inc
rcrl
push
dec
int
adc
addr16
xchg
pushf
adc
cld
and
into
add
xor
jmp
imul
jmp
adc
mov
add
jge
cli
rolb
in
iret
je
xchg
and
push
enter
or
lret
push
cli
out
adc
pop
call
ror
inc
jmp
add
fsubs
int
push
and
filds
fwait
rorb
lret
lcallw
jae
ljmp
jae
adc
or
jb
jmp
ret
xor
cltd
leave
loope
in
pop
add
sub
cli
incl
cmp
movl
daa
sub
jae
xchg
sbb
adc
cltd
out
push
lcall
add
fs
pop
gs
sub
push
and
mov
pop
addl
mov
mov
mov
cwtl
mov
sti
cmpsl
flds
jle
dec
add
mov
push
int
add
jle
inc
xor
jnp
sbb
mov
incl
and
adc
ficoms
push
andl
push
add
xor
jge
mov
addb
jae
icebp
inc
pop
decl
jl
add
add
sbb
popf
jns
sbb
ljmp
int3
push
dec
lret
rcl
inc
int3
push
xchg
pop
int
add
dec
mov
add
outsb
mov
dec
xchg
fs
insb
inc
in
cltd
pop
filds
notl
mov
cs
mov
icebp
lret
jns
add
mov
cld
pop
enter
push
pushf
shll
inc
loope
jl
scas
sti
jge
scas
sti
jmp
iret
fwait
cld
ss
imul
mov
mov
fsts
test
push
cli
jb
scas
adc
rolb
pop
add
loope
jmp
jmp
ret
pop
xchg
hlt
scas
lea
std
lret
add
inc
add
test
call
cld
lret
add
push
push
lret
sbbl
or
push
sub
rcr
push
inc
lock
test
fsubrl
test
int3
add
orb
cltd
jmp
addr16
xlat
dec
rcll
lret
add
fxch
test
push
push
dec
mov
mov
add
add
int
pop
cmp
pop
pop
imul
xor
sarb
sbb
das
push
testl
push
and
cmp
inc
divb
cmp
sub
add
imul
adc
aas
pop
add
popa
shlb
leave
adc
sub
xor
cli
push
xchg
cmpsl
sub
inc
mov
add
add
rcll
test
in
mov
arpl
mov
pop
push
data16
sbbb
arpl
dec
xor
data16
andl
arpl
dec
push
mov
mov
mov
fsubs
lcall
mov
sbb
xchg
loopne
cmp
arpl
dec
push
cmp
fsubs
pushl
add
mov
in
mov
cli
ss
and
jmp
pushf
add
mov
inc
add
int3
mov
fwait
dec
jmp
mov
int3
out
jnp
jmp
addb
out
imul
add
xchg
add
out
mov
add
push
lcall
shl
aad
pop
rclb
int3
out
les
add
add
into
pop
cmp
add
int
shl
shlb
iret
mov
add
int3
scas
js
push
and
add
addb
mov
sbb
jb
jns
push
call
pop
push
enter
inc
pop
and
inc
mov
hlt
call
test
dec
adcl
add
jp
ja
lret
add
sti
inc
push
jmp
std
lret
add
add
sub
pusha
sti
inc
push
lea
lret
add
xor
insb
subb
jmp
movl
ret
add
cmp
pop
add
dec
push
xchg
and
or
mov
call
test
sbb
mov
add
add
aaa
add
mov
shlb
cld
mov
mov
cmp
movl
call
sbb
or
sbbb
cmp
sbb
mov
jg
and
add
mov
or
and
call
aam
je
sub
enter
add
jns
je
out
push
add
xchg
arpl
insb
mov
add
daa
adc
mov
lds
add
inc
add
loope
pushf
roll
arpl
sbbb
ljmp
arpl
in
lcall
or
repnz
adc
fisttps
add
fcmovb
and
leave
push
jnp
hlt
enter
inc
add
out
adc
arpl
or
lret
push
aam
mov
sub
cltd
dec
jmp
repz
jl
call
imul
les
je
push
sub
divl
mov
roll
mov
data16
add
test
adc
int3
out
or
rclb
push
mov
add
cmp
add
pop
jmp
shrb
inc
add
int3
adc
add
push
jnp
adcb
outsb
push
fs
add
pop
mov
daa
push
jg
and
push
lahf
xchg
fs
jo
scas
sbb
add
test
cmpsb
int
sub
cmp
jge
jmp
pop
in
inc
or
jl
into
aas
dec
lds
fs
fists
pop
mov
int
jmp
ficoms
mov
or
xchg
push
fsubs
add
cli
adc
jno
xor
and
dec
shll
and
js
or
stos
cmc
mov
push
xor
pop
mov
imul
pcmpgtb
dec
add
test
inc
jne
aad
call
push
lcall
xchg
jno
pop
popl
adc
jl
in
call
add
sub
add
mov
mov
push
dec
xor
lock
incl
cmp
aam
and
fadd
divl
jo
adc
out
enter
add
shrl
or
add
mov
mov
mov
mov
cmp
fs
ljmp
jg
cmc
cs
and
sar
xor
and
and
push
mov
xchg
dec
xor
mov
and
inc
lock
adc
cmpsl
cmp
or
or
jns
ret
addps
test
add
out
jne
lret
or
lret
out
xchg
add
insl
mov
sbb
inc
xlat
in
popf
into
lea
lods
out
shlb
cmpb
fstpl
bound
aas
fs
out
rorl
or
adc
fimull
add
add
mov
mov
sbb
add
add
add
push
pop
mov
and
jmp
dec
cli
insb
ret
shll
imul
mov
jmp
sbb
dec
jmp
incl
inc
jne
add
fwait
pop
and
call
sbb
jmp
adc
adc
add
add
jmp
imul
dec
outsb
ljmp
push
jmp
out
out
dec
test
add
xchg
inc
sbb
inc
stos
mov
sbb
cli
mov
daa
add
imul
dec
add
sarl
icebp
imul
mov
dec
push
mov
pop
lret
loope
xor
stos
or
loop
cli
pushl
push
adc
inc
imul
or
mov
sbbl
add
xor
call
mov
sbb
je
outsb
cmpl
xchg
dec
data16
dec
call
pop
out
sub
xchg
mov
mov
add
mov
mov
push
push
shlb
pushf
arpl
dec
xchg
add
mov
fcmove
and
push
addr16
pop
add
jge
push
push
fadds
mov
cmp
incl
dec
ret
and
cltd
or
fiaddl
cs
je
add
out
inc
test
push
or
add
int3
dec
faddl
je
add
sar
mov
hlt
mov
notb
add
inc
xchg
and
xchg
pop
push
out
xor
popl
pop
add
orb
lods
psrad
mov
cmp
add
sub
cmpsl
add
ret
jecxz
orl
mov
dec
outsl
sbb
test
jo
push
mov
shrb
shrb
and
jbe
test
push
cmp
call
and
ljmp
pop
add
popf
xchg
clc
xor
xor
lret
in
mov
push
sbb
aam
jmp
add
mov
pop
pop
mov
add
add
and
aaa
xchg
add
add
push
test
add
add
jp
sti
push
and
int
inc
adc
aad
add
sahf
or
mov
xchg
gs
or
or
mov
rolb
add
iret
in
fcoms
cmpsl
or
add
jns
mov
in
or
add
orb
and
notb
stos
jae
sbb
dec
gs
cmp
mov
lea
xchg
inc
and
push
xchg
push
jp
call
incl
add
jle
cltd
int
movsb
incl
xor
jle
pcmpeqd
add
decb
xor
pushl
loope
add
decb
mov
xchg
add
out
repz
push
mov
add
pop
ss
incl
jne
loope
add
add
sbb
jge
loope
add
jle
aaa
lea
xor
jge
loope
add
decb
add
mov
jge
loop
jns
loop
mov
jae
xchg
inc
sti
out
or
gs
push
add
int3
out
mov
lret
stos
mov
add
fs
jecxz
pusha
addb
add
add
dec
pusha
add
int3
pop
enter
mov
out
or
int3
out
negl
mov
mov
out
sub
iret
paddusb
movzbl
mov
and
mov
add
daa
enter
push
lods
out
push
mov
int3
add
js
jmp
xchg
or
add
add
inc
adc
roll
add
add
test
fadds
test
add
add
xor
loop
inc
test
sub
shll
cmpsb
leave
add
add
lods
cmp
add
push
adc
push
jle
dec
adc
add
clc
outsb
fnstcw
jmp
int3
add
or
mov
add
int3
add
sub
add
push
ret
jmp
test
lret
das
incl
add
test
xchg
pop
sub
add
and
nop
lcall
lret
pop
pop
or
mov
push
repz
loope
jnp
mov
pop
mov
push
test
in
je
pusha
jp
je
in
mov
in
push
addb
add
sbb
scas
shll
add
add
pushl
loopne
add
decb
jge
sti
jbe
pop
adc
test
add
call
mov
lret
add
incb
xor
fldl
add
jno
jl
add
ljmp
xor
lcall
xor
test
and
incl
jecxz
jmp
jle
test
or
mov
scas
out
movsb
std
pushl
fincstp
add
decb
jne
pop
in
xor
xchg
mov
jne
int3
pop
jg
pop
call
jg
int3
out
jg
or
add
out
sti
pop
sub
aam
js
int3
out
add
xchg
in
add
add
add
lret
call
dec
stos
filds
test
mov
out
lret
add
int3
iret
shll
mov
hlt
test
sbb
push
lea
add
in
insb
inc
int3
rcrb
sbb
mov
xor
arpl
call
xchg
gs
lret
add
jmp
sahf
test
and
out
add
add
add
dec
lret
inc
pop
dec
cli
cs
and
jmp
inc
cmp
jmp
pop
add
add
or
shl
push
sti
out
clc
inc
jne
nop
dec
shll
or
and
inc
cli
rorb
inc
cli
mov
fmul
add
sub
aam
add
jl
outsl
inc
xchg
mov
int
add
dec
jge
add
je
scas
push
push
pusha
sahf
cld
mov
loop
hlt
movl
inc
jmp
jle
xlat
pop
or
jo
rol
lcall
dec
lea
iret
add
add
ret
decl
dec
test
iret
add
mov
int
sub
int
je
je
sbb
and
push
dec
repnz
enter
xchg
or
add
or
pop
push
lea
lea
add
int
xor
cmp
rorb
or
mov
sbb
das
scas
push
dec
bound
incl
or
incl
xor
jl
xor
add
jp
add
decb
jmp
incb
add
cmp
add
cs
aam
and
clc
dec
fisubl
mov
mov
push
jb
aas
repnz
daa
add
or
jg
int3
out
mov
mov
filds
lods
ret
jecxz
mov
out
push
stos
sti
filds
or
cs
xlat
cmp
in
mov
pusha
and
out
mov
hlt
lcall
pop
lret
and
lcall
lret
jp
and
adc
sub
int3
out
shlb
mov
dec
xor
ja
sub
bswap
ljmp
sarb
or
inc
cli
sahf
in
lea
xorb
mov
lret
js
and
pop
inc
dec
sbb
adc
cli
insl
les
add
add
inc
adc
repz
fs
inc
mov
aad
lcall
push
mov
stc
fists
cmp
aas
xchg
fcoml
jmp
mov
or
aas
dec
aaa
push
test
xor
orl
jb
sub
xor
fcmove
cmc
adcl
cmc
addl
add
add
shl
cmp
cli
cmp
cli
mov
inc
jecxz
pop
roll
shlb
loop
push
fdiv
test
dec
add
jb
call
jmp
push
mov
push
push
out
in
add
cld
jp
dec
push
push
dec
or
push
dec
call
and
cmp
shrl
shlb
pushf
std
add
add
pop
bound
or
out
mov
add
test
mov
in
cs
mov
in
dec
mov
or
or
or
mov
test
jg
jle
and
jne
or
mov
pusha
or
push
fidivs
test
pop
ljmp
scas
jge
inc
xor
pop
sbbl
xchg
gs
cli
cmc
lret
addr16
lret
into
jmp
and
adc
das
pop
inc
imul
add
mov
aas
add
mov
add
adc
divl
xchg
pop
xchg
pop
push
or
es
int
jne
add
dec
mov
cmpb
mov
cmc
inc
clc
add
fisubl
push
rolb
add
jecxz
sub
sti
push
in
mov
pop
dec
cmpsb
or
out
mov
int
or
and
add
and
sbb
add
iret
push
pop
inc
lret
push
cld
mov
pop
rolb
jg
je
ss
inc
xchg
xchg
jge
cmp
sub
add
icebp
stos
rcll
add
mov
hlt
daa
push
sbb
push
jb
mov
or
movl
sub
mov
push
int3
dec
cwtl
dec
pop
jmp
gs
rclb
lret
and
add
add
and
sbb
push
test
and
fs
pop
inc
xchg
adc
shl
or
addl
cmp
aas
bound
and
mov
stos
push
sub
orl
je
fxch
loope
mov
iret
add
fnstcw
pop
ret
or
dec
in
or
mov
and
adcl
bound
clc
push
int3
test
imul
ja
and
jnp
add
add
add
adc
addl
jnp
lds
push
sbb
int
ljmp
enter
addl
add
xchg
add
lock
cli
cmc
in
aas
add
nop
and
daa
cltd
aas
mov
pop
xor
xchg
cs
and
jl
sbb
iret
enter
adc
add
and
or
sbb
lret
jecxz
sahf
shl
mov
xchg
out
inc
add
mov
xchg
jae
stos
xchg
cmpsl
scas
fsts
movsl
sti
addr16
sub
test
or
dec
mov
jo
pop
inc
or
mov
mov
jle
addr16
lock
adc
inc
sub
out
xchg
fildl
add
adc
dec
xchg
jmp
mov
cmp
ret
orb
lods
pop
pushf
stc
xlat
push
filds
ret
cmp
test
iret
jae
sbb
xchg
add
sbb
mov
push
add
or
inc
push
mov
add
sbb
add
pushf
data16
scas
mov
cmp
std
stc
fmull
inc
jmp
xorb
pop
or
mov
test
add
rolb
fs
ret
outsl
mov
adc
je
push
push
notl
sub
cli
addr16
ds
adc
add
iret
sub
add
xchg
leave
lret
insl
lret
jns
gs
push
add
mov
and
jnp
or
jle
and
shr
stos
lret
cltd
pop
outsl
mov
dec
add
push
push
push
adc
push
decl
sbb
add
arpl
push
mov
call
add
sub
ret
rol
test
loop
add
adc
add
cmpsl
pusha
loop
lahf
pop
mov
inc
and
xchg
or
xor
add
add
cmp
push
mov
and
or
inc
pop
scas
fildll
push
mov
dec
in
mov
das
and
jp
and
or
ss
cli
in
repnz
add
inc
push
jnp
test
dec
data16
int3
aam
addr16
pop
add
mov
add
add
ss
std
mov
jl
call
aad
lahf
fmuls
divl
mov
fbld
inc
cld
inc
and
int3
out
mov
inc
inc
cld
lret
xor
je
jecxz
pop
lahf
ret
frstor
add
lea
xchg
pusha
ret
sub
aaa
aad
add
or
xor
outsb
adc
adc
call
testl
out
xorl
push
xchg
in
hlt
jg
inc
jmp
inc
rolb
sahf
inc
xor
popf
popf
lcall
ret
mov
ret
xor
cmpsb
push
mov
in
mov
xor
inc
xor
lds
inc
in
int3
add
ror
outsb
add
dec
push
xor
scas
mov
mov
ds
inc
shr
add
xchg
mov
mov
mov
cwtl
mov
add
dec
add
mov
inc
add
leave
add
pusha
xchg
add
leave
add
cwtl
mov
fwait
iret
add
cli
xchg
addl
inc
add
mov
adc
cmp
push
loop
mov
cmpsb
int
sbb
call
fisttps
add
xlat
push
sbb
mov
add
ret
jae
nop
pop
fwait
stc
pop
mov
mov
inc
and
inc
decb
add
add
stc
incl
push
scas
mov
daa
push
jp
mov
rcr
jp
or
jge
aam
jnp
int
hlt
add
repnz
test
xor
pushl
adc
enter
or
mov
add
int3
aad
daa
cmp
jnp
repz
add
cmpsl
scas
jl
cld
jmp
inc
mov
add
pop
mov
rcrb
cs
imulb
dec
sub
das
or
adc
or
movsl
xchg
enter
and
lock
int3
divb
jge
pushf
fnstcw
inc
mov
push
aam
out
jg
mov
add
scas
cs
cmp
sbb
add
xor
add
lret
sbb
or
cmpsl
jp
add
sbb
push
scas
decb
scas
add
and
pop
add
add
in
add
add
outsb
sti
push
and
or
sbb
dec
dec
add
add
mov
or
addb
sub
xor
mov
jo
test
jmp
add
add
jge
ja
cmp
mov
adc
fs
add
addr16
loope
xchg
or
and
mov
cmp
pushf
xchg
cmp
add
mov
mov
push
call
pop
push
cli
ljmp
or
enter
or
lods
inc
or
test
push
cli
dec
adc
cltd
enter
cwtl
or
test
ds
xor
gs
pop
sub
add
or
jnp
pop
enter
xor
jne
xor
mov
cmc
int3
jg
add
ja
in
mov
mov
add
int
addl
add
push
into
ja
mov
jns
insb
aaa
mov
or
push
aad
xlat
jge
test
outsl
adc
enter
push
aas
inc
push
push
je
je
cmp
in
jns
fdivrl
movsb
sub
mov
xlat
test
xor
jns
loop
imul
push
mov
pop
xchg
lret
aad
add
pop
in
bound
lcall
jg
outsl
cmc
xchg
out
pop
je
add
or
js
inc
mov
xor
adc
adc
dec
and
add
pop
lret
push
les
mov
ret
dec
rep
daa
or
add
jle
fucom
adc
cmpsl
inc
iret
xchg
or
sbb
in
or
adc
ret
out
cmp
cwtl
test
mov
push
sub
outsb
or
mov
fldl
push
adc
stc
cmp
or
in
mov
out
mov
test
or
test
sbb
xor
cmp
je
outsb
push
mov
jmp
shlb
pop
clc
ret
jge
add
jae
cmp
imul
add
shl
adc
test
test
test
mov
xor
insb
inc
imul
or
and
enter
addl
outsb
aam
adc
push
ret
mov
and
xchg
fwait
and
xlat
outsb
and
cmp
mov
aaa
mov
jle
iret
push
jne
and
ret
xchg
pop
out
cwtl
pop
inc
or
clc
lea
cmp
add
or
add
sub
call
add
or
add
dec
mov
push
mov
push
push
jns
sub
sbb
xor
mov
cmp
cld
add
dec
sti
adc
mov
or
xor
lcall
push
addr16
pop
pushf
inc
and
mov
sbb
mov
inc
adc
mov
xor
fldenv
decl
mov
hlt
or
and
scas
ret
jecxz
xor
jns
ret
daa
hlt
push
aas
ja
push
adc
mov
fidivl
and
outsb
dec
sbb
jge
out
or
push
shrb
std
addr16
addb
sarl
sub
push
int3
out
mov
ss
add
aad
pushl
int3
out
pop
and
notb
dec
add
negl
pushl
mov
insb
mov
push
add
or
popf
incb
or
add
aad
shll
mov
inc
add
lock
ja
add
add
add
stc
aad
movsl
daa
shr
add
add
add
test
sub
add
fdivrs
mov
mov
std
repnz
pmulhuw
or
inc
and
or
lds
jl
pusha
inc
rorl
data16
xchg
test
andb
xlat
inc
jnp
add
popl
add
decl
loop
pusha
sub
popf
sahf
imul
out
add
adc
pop
rclb
out
loopne
pushl
mov
push
cltd
int3
jns
push
push
mov
adc
xchg
and
pop
mov
je
push
rorb
sbb
mov
or
jbe
ds
push
ds
pop
inc
and
xor
push
jmp
out
loope
stos
or
les
incl
add
push
mov
das
fstpt
mov
add
pop
fdivr
in
icebp
xor
xchg
cmp
or
out
test
fs
sub
push
sbb
hlt
add
cmp
cmpl
add
add
jns
sub
fildl
sub
incl
add
cmp
jb
mov
imul
ret
push
mov
add
push
icebp
lret
es
call
jg
repz
int3
cmpsl
hlt
fadds
add
mov
xor
lcall
sub
mov
dec
and
scas
dec
add
mov
xchg
mov
out
pushl
das
jle
dec
and
pop
push
sbb
pusha
pop
add
jmp
scas
pop
int3
out
daa
push
lds
jl
call
and
push
xchg
ret
out
out
addb
xchg
and
sar
jae
add
js
or
fcmovnb
incl
jge
clc
dec
rcr
mov
add
negb
out
andl
daa
inc
aam
sahf
sti
and
aam
mov
call
add
int3
std
repz
outsl
shll
push
jmp
jno
call
in
daa
cli
movb
dec
pusha
scas
out
sbb
or
pop
icebp
cmpsl
mov
push
int
dec
int3
adcl
rorb
outsb
and
push
in
add
xchg
dec
mov
in
cwtl
jg
dec
add
xor
setns
add
and
add
or
hlt
out
dec
jge
gs
and
mov
push
xchg
and
jns
dec
add
enter
movsb
out
jne
faddp
jmp
push
dec
and
jns
je
testl
pop
and
jl
sbb
jge
jno
jge
or
add
les
inc
shll
add
out
sbb
decl
sub
xchg
mov
loope
repnz
inc
sbb
inc
test
cmp
cli
test
dec
cmc
repz
pop
adc
cli
pop
scas
ret
pop
mov
pop
jg
xor
pop
add
dec
push
iret
popf
jnp
jnp
icebp
arpl
add
not
hlt
xchg
int3
addr16
cli
aaa
sub
adc
xlat
cli
and
test
fcomi
call
and
add
or
lret
mov
push
aaa
mov
xor
add
fs
sub
push
outsb
in
push
lods
add
push
jo
add
out
shll
fmuls
and
or
pop
aam
adc
imul
dec
and
test
out
add
jmp
add
jo
push
xor
pop
jb
add
mov
inc
in
mov
add
daa
and
pop
sub
bound
ljmp
dec
vhaddps
loope
lret
add
push
jge
or
cli
imulb
pop
call
lock
in
ficoms
cs
call
add
dec
int3
adc
and
push
lea
or
pop
cli
jmp
mov
add
dec
dec
add
add
test
push
mov
sbbl
adc
loopne
pop
out
ja
adc
lcall
inc
push
int3
xor
jmp
xor
and
jl
mov
push
add
decb
fistpl
testl
std
mov
lea
loope
sbb
sysret
test
pop
sub
outsb
xor
rolb
xor
sbb
add
add
in
mov
cmpsl
or
sbb
jge
push
cmpsb
sub
and
add
and
ss
jp
add
mov
add
xchg
jnp
sbb
loop
cmp
fsubrp
ss
and
in
add
xor
jns
sbb
test
inc
sub
repz
ficomps
mov
adc
mov
inc
and
int3
into
sub
in
cmp
dec
adc
add
int3
cmp
aas
fsubr
inc
mov
in
lods
leave
loope
ret
das
aam
or
push
and
mov
inc
call
xor
cs
aad
repnz
add
pop
cmp
hlt
imul
int3
loop
ja
pop
xchg
imul
add
inc
fdiv
mov
cmp
and
add
push
movsb
pop
add
push
mov
and
add
cmpsb
ljmp
sbb
jmp
cld
lret
push
rorl
jne
adc
popf
dec
add
cwtl
add
stos
movsl
sub
dec
call
and
xchg
sbb
add
xchg
int
pop
and
jb
jmp
push
std
dec
xchg
add
add
push
in
pop
or
cli
jmp
pop
cltd
and
sub
cmp
int3
test
sbb
mov
in
mov
sahf
call
lods
fsubl
mov
mov
lcall
inc
mov
in
pop
push
jmp
mov
andl
dec
push
aad
pop
xchg
lahf
sti
incl
jmp
add
fxch
mov
add
add
enter
mov
and
in
mov
and
popf
insl
and
pop
insl
int
jle
adc
aad
pop
adc
inc
and
loope
sti
adc
mov
or
sub
push
push
pop
testl
add
xor
and
cmp
add
and
add
add
out
mov
cli
mov
sub
call
scas
inc
and
jl
repnz
sub
lret
clc
cli
cmpsl
pop
mov
cmpl
outsb
loopne
sub
pop
shll
mov
into
pop
test
ret
lret
lcall
hlt
stos
roll
dec
lods
pushl
addr16
add
mov
add
dec
insl
lds
mov
pop
dec
stos
lock
mov
add
outsb
rcr
inc
add
push
test
aas
cmpsb
fstpt
hlt
sbb
push
icebp
hlt
adc
inc
add
jno
mov
push
cmp
adc
outsb
adc
lret
test
add
add
and
enter
movsb
dec
mov
add
sti
push
xchg
push
inc
dec
sarl
xchg
jmp
add
mov
cli
into
movsb
ret
cltd
and
dec
lret
push
mov
mov
xorl
int3
add
int3
pop
stos
dec
jmp
jle
cld
lret
frstor
jle
add
mov
hlt
mov
inc
jmp
cmp
lcall
or
sub
test
xchg
or
imul
add
lea
pop
jno
jnp
imul
ljmp
or
inc
mov
call
mov
roll
add
or
sub
add
cld
jnp
fxch
dec
mov
xor
rorl
add
add
sub
imulb
jae
add
cmpl
add
incb
xlat
icebp
sbb
adc
pop
fisubl
dec
push
lret
pop
roll
fsubs
dec
sub
xchg
mov
stc
jns
add
or
mov
out
xchg
ljmp
scas
cmp
sbb
mov
mov
in
je
adc
in
jg
and
in
cmp
xor
push
mov
push
andl
push
xor
lret
mov
lahf
jg
call
add
int3
lcall
add
jg
out
jecxz
jg
insb
andb
call
in
cmp
outsl
jbe
push
shlb
dec
sub
add
aas
inc
lahf
out
add
out
or
xor
ror
lret
adc
jle
addr16
out
sub
add
int3
pop
jg
lock
and
inc
dec
lds
dec
push
and
cli
pop
adcb
add
jb
add
pop
push
jo
lock
cwtl
jl
cltd
push
mov
aam
inc
push
lret
call
popa
mov
lcall
pop
adc
incl
int3
add
pusha
call
add
pop
and
int3
sub
ficoms
dec
rcr
lods
out
rolb
fistpl
add
aad
cmp
push
mov
pop
sub
jne
xchg
cmp
push
sbb
sbb
mov
leave
call
mov
dec
divl
ffreep
jmp
xchg
insl
and
xchg
cmp
decl
and
in
dec
fdivrp
fdiv
inc
add
leave
dec
push
mov
mov
add
leave
sbb
dec
xchg
cmp
add
add
lods
and
ljmp
adc
jbe
xor
ds
mov
push
mov
dec
sbb
jge
in
out
pop
adc
add
data16
js
and
xor
in
ja
fdivr
aad
out
incb
jo
add
mov
cmp
xchg
pop
test
pusha
jg
les
push
add
push
dec
push
xlat
cmpsl
js
les
incl
and
std
mov
out
gs
out
call
adc
jle
lret
jns
test
dec
add
and
int
add
sbb
push
and
shrb
mov
fs
sub
mov
jo
inc
neg
add
sub
jge
les
int3
out
pop
adc
shrl
es
xchg
cltd
xor
jp
dec
sub
iret
fisubrs
adc
jle
cwtl
testb
clc
jl
and
out
cmc
adc
or
sub
cwtl
fcoms
mov
pop
xor
push
jne
and
outsl
add
sbb
cld
pop
in
jl
or
shl
jns
es
fcompl
cltd
sbb
push
mov
in
faddl
pop
push
adc
pop
xor
test
add
push
jb
sub
xchg
fimuls
add
ds
sbb
jns
in
test
add
orl
pop
loop
push
enter
xor
xchg
add
sbb
adc
sbb
pop
leave
fidivl
push
pop
andb
jl
fistl
pop
dec
push
mov
jns
push
xchg
dec
and
jae
pop
adc
idiv
notb
mov
sbb
lds
mov
inc
sbb
or
mov
loop
add
loop
push
and
pop
lods
pushf
mov
xchg
mov
test
xlat
icebp
push
xor
movl
ss
jmp
jns
int3
mov
add
insl
sti
and
test
pop
cli
sub
dec
outsl
dec
mov
test
loop
popf
cmp
jp
aad
jo
loop
inc
cmp
rcll
pop
dec
data16
add
add
dec
xchg
push
dec
out
pop
adc
and
or
push
cld
stos
dec
dec
call
sub
adc
in
js
ud0
cli
mov
andps
hlt
js
and
hlt
fimull
pop
add
outsb
cs
inc
and
jle
cwtl
ficompl
jl
aas
int3
jl
cmove
in
add
mov
add
stc
int
fldenv
inc
jmp
out
and
outsl
incb
pop
daa
je
pop
push
je
sbbl
add
bound
inc
pop
or
lahf
pop
add
add
add
sbb
test
add
test
fdivrl
push
lds
inc
leave
pusha
pop
call
add
add
mov
xchg
adc
insl
ret
xchg
add
inc
pushf
adc
movsl
out
xchg
pop
call
xchg
xlat
loope
sub
mov
out
ret
rcrl
fisttps
inc
add
sbb
or
jp
adc
xchg
pop
outsb
xor
or
ds
mov
add
ss
cmc
push
insb
jl
sub
popa
or
sahf
inc
mov
and
ds
and
ds
and
and
sti
jle
test
sub
and
sbb
inc
and
and
stc
sub
sbb
ret
sbb
push
xchg
roll
and
pop
idiv
push
sub
and
mov
mov
pop
cli
add
mov
adc
jge
and
jns
sub
sub
cli
pop
lahf
mov
incl
cwtl
xor
lcall
jnp
sub
pop
xchg
sti
mov
pop
lea
repz
dec
out
adc
cmpb
push
js
and
lahf
pop
push
inc
and
mov
and
jae
xor
add
and
pop
jnp
xchg
daa
and
rcrb
je
add
daa
and
dec
and
ret
mov
xchg
nop
mov
out
jl
pop
or
lret
lea
in
add
push
mov
ljmp
mov
lret
xchg
mov
mov
mov
hlt
in
add
cwtl
or
lods
cmc
loopne
pop
movsb
daa
call
or
fisubrl
add
sub
push
mov
test
test
xchg
js
push
pop
adc
xor
push
cli
jbe
mov
lret
rcrl
cli
fiadds
adc
scas
and
mov
cli
mov
leave
popa
das
mov
pusha
add
mov
jo
mov
jo
mov
adcl
stc
cmc
fbstp
call
jb
push
lret
push
cmp
stc
push
xchg
clc
jbe
and
pop
divb
lock
add
lcall
negb
pop
xchg
leave
push
sub
mov
cmp
rorl
loopne
push
add
and
mov
lret
clc
inc
push
mov
fnstenv
lea
sub
sbbl
testl
and
jmp
push
ljmp
jecxz
jae
sarb
test
sbb
repz
xchg
cld
cs
outsb
shl
js
or
jge
add
add
xor
mov
sub
inc
jge
testb
pushf
clc
cli
mov
xor
in
mov
aas
add
or
pop
dec
jnp
sub
mov
mov
xchg
cmp
mov
in
cmpsb
in
xchg
sub
repz
gs
aaa
lea
sbb
push
mov
add
push
movsb
daa
fdiv
sahf
lock
insl
ret
in
movsl
outsb
dec
and
aas
lds
sub
aaa
repnz
int3
insl
dec
and
pop
inc
sbb
rolb
mov
into
add
dec
mov
sbb
jl
mov
lods
push
mov
cmpsl
cld
mov
fstl
flds
dec
movsb
adc
in
sub
mov
sub
mov
jmp
dec
pop
mov
xchg
ret
sti
cmpsb
loop
bound
add
sbb
jmp
bound
mov
mov
jmp
cmp
pop
jmp
fs
and
imul
push
mov
lahf
out
sahf
jge
loopne
push
cwtl
shlb
adc
jg
and
push
add
add
hlt
aad
aam
xchg
dec
enter
fsubl
icebp
adc
rep
xchg
jg
pop
out
mov
repz
je
jmp
rcll
xchg
outsb
push
inc
cltd
dec
mov
or
movlps
mov
pop
add
sub
inc
sarl
movsb
adc
add
jecxz
cs
repnz
mov
and
cmp
call
jb
test
rcll
ljmp
ja
xor
leave
call
cli
pop
mov
mov
push
cld
pop
pushf
add
add
mov
jge
push
adc
add
add
jg
in
jmp
dec
pop
inc
cli
mov
xchg
fistpl
out
ficoms
repnz
pop
dec
mov
push
xlat
jns
test
xchg
addr16
push
mov
sbb
aad
lcall
es
jnp
popf
cwtl
add
std
out
cmp
cli
mov
mov
mov
sahf
in
lret
repz
call
roll
stos
add
mov
or
xor
push
push
mov
pop
xchg
jge
add
jmp
cld
cmp
jle
insb
rcl
loop
inc
push
mov
out
push
cli
insb
mov
rcl
dec
xor
jmp
add
lock
repz
in
sbb
sarl
or
xor
js
jg
js
imul
jmp
lahf
add
push
out
mov
js
fildl
mov
xchg
sti
std
stc
jle
push
xchg
mov
mov
mov
imul
dec
pop
dec
fldenv
cmp
test
popf
push
xchg
test
mov
add
call
bound
jge
dec
inc
std
xchg
ret
sub
add
add
add
pop
and
ljmp
jp
in
mov
cli
in
cli
add
sbb
mov
push
out
clc
mov
stc
lea
pop
call
and
test
lods
sti
addb
xor
jnp
in
icebp
sbb
jne
loopne
cld
jb
push
ljmp
idiv
push
push
mov
jl
out
mov
mov
outsb
lods
sbb
sub
div
jmp
lods
and
pop
aas
jecxz
iret
jne
mov
call
cli
mov
xlat
fdivrs
cli
out
add
lea
mov
in
sbb
sub
test
mov
jle
in
std
jae
jge
or
sub
addb
add
add
hlt
std
jae
xor
dec
sbb
dec
ljmp
sahf
in
pop
ljmp
or
fstpt
repz
add
mov
pop
int
push
and
ficompl
test
dec
add
mov
inc
mov
cmp
incl
pop
inc
cld
dec
pop
add
adc
sbb
sub
mov
sub
enter
add
lods
pop
aaa
push
jmp
jmp
repz
push
lods
out
dec
enter
adc
and
lret
fisttpl
xlat
xor
push
int3
pop
cld
cltd
lcall
ja
mov
cmpsl
repz
jae
add
int3
pop
enter
add
push
clc
mov
cli
je
jp
and
cltd
fcoml
ret
jno
sbb
mov
out
pusha
inc
test
insb
mov
or
sbb
out
fildl
int3
test
int
je
add
mov
mov
push
jne
xchg
dec
repz
inc
cltd
jmp
ds
jb
inc
inc
add
push
dec
in
fmulp
mov
call
cmp
frndint
jge
call
add
int3
test
or
call
movsb
pop
pop
mov
lret
loopne
and
push
ficoms
mov
lret
out
jle
add
lret
add
cmp
lcall
push
int
rclb
idiv
and
push
test
test
test
pop
idiv
adc
pop
test
fwait
add
add
lret
shl
lcall
ds
push
inc
and
push
cmp
add
and
imul
xor
call
shl
int3
jae
sbb
data16
jnp
and
and
mov
iret
adc
and
add
mov
xor
repz
mov
call
repz
lea
aas
or
inc
fmul
xor
ss
notl
inc
pop
repnz
sub
add
std
jae
mov
sti
cmc
adc
aas
add
jo
stc
mov
mov
add
or
lret
out
pmulhw
pop
std
imul
dec
rcrb
fists
jmp
mov
jle
test
fildl
or
mov
xchg
rolb
pushf
cmp
dec
dec
lods
rep
out
aaa
xchg
sbb
xchg
insl
pop
cld
xchg
jb
lahf
fldenv
add
and
xor
int
ret
ret
repz
inc
dec
adc
adc
sbb
ds
mov
inc
les
xchg
and
std
lea
ret
pop
loope
mov
hlt
pop
into
inc
jmp
and
jmp
add
fstpt
jo
mov
and
outsb
scas
int
xchg
inc
pop
in
pop
cwtl
or
mov
inc
add
pop
mov
sahf
scas
xchg
adc
add
fisttpll
push
sub
xchg
pop
adc
cmp
mov
lret
dec
mov
lahf
test
and
hlt
pop
leave
inc
add
ja
outsb
jbe
and
jbe
and
stc
sbb
lock
data16
inc
mov
sbb
adcl
cmpb
jl
add
in
ffreep
mov
movsb
adc
in
cwtl
or
test
dec
ljmp
mov
inc
xor
and
jbe
add
adc
cmp
testl
add
adc
cmp
add
rolb
push
add
lret
add
mov
in
jbe
cld
lea
jg
cld
std
scas
add
and
inc
and
sbb
in
inc
jg
and
in
or
xchg
push
testl
sub
insl
mov
mov
fsubl
testl
dec
jle
jg
bound
test
std
decl
mov
mov
push
sbb
addb
pop
xor
int
stc
xchg
cmpsl
add
xor
dec
lret
ljmp
push
adc
ret
daa
or
sbb
pop
fisubs
mov
jp
stos
fs
sar
dec
sbb
inc
sub
popl
clc
add
sbb
out
lret
iret
hlt
jecxz
inc
add
push
xchg
pushf
outsb
mov
add
push
out
gs
xchg
nop
imul
add
mov
and
cli
ret
pushl
rcll
in
cmp
cmc
mov
addb
or
in
stc
es
pushf
stc
push
ds
add
add
clc
out
in
xchg
pop
mov
mov
out
int
shrb
dec
clc
fs
out
sub
dec
jb
dec
fdiv
stc
std
cmpsl
call
adc
dec
adc
dec
jb
popf
je
call
add
push
addr16
ds
push
add
je
or
pop
test
pop
add
dec
out
push
roll
adc
pushf
sub
add
mov
or
test
xchg
insb
lea
lea
sub
aaa
out
call
test
push
testb
adc
inc
mov
and
rcl
add
lret
add
cmp
hlt
pop
add
mov
lea
mov
cli
jne
and
inc
xor
adc
inc
add
lock
sarb
dec
test
movsb
sub
int
jg
pop
jecxz
incl
std
xchg
add
in
cli
lea
xor
push
and
call
jns
or
jns
add
std
call
add
xor
das
mov
mov
out
xchg
lret
sbb
mov
fdivrl
nop
ret
pop
jns
int3
ret
jg
out
ret
scas
scas
xor
lret
out
lahf
andb
mov
jecxz
push
add
lret
cmp
daa
cmc
out
lret
scas
lahf
fldt
out
test
in
add
cmp
out
test
insb
pop
test
out
call
inc
insb
pop
nop
lret
out
xor
add
sbb
cwtl
hlt
stc
fs
test
xchg
mov
mov
sbb
add
in
icebp
stc
insb
das
mov
cs
mov
aad
mov
push
push
fildl
jmp
add
stc
push
add
call
test
pop
iret
add
test
add
xchg
push
add
add
add
add
in
in
add
cmp
imul
addl
mov
add
sbbb
loop
loop
add
test
rcrl
dec
rcrl
mov
jno
call
rorb
pop
mov
movl
and
add
add
sarb
xchg
decl
iret
push
mov
jo
call
bound
test
dec
pushf
addl
add
or
sbb
dec
pop
ss
mov
lret
sbb
add
jae
add
imulb
data16
mov
incl
hlt
icebp
jae
sarb
push
jge
out
jle
out
cwtl
enter
mov
imul
sar
aas
push
adc
incl
frstor
in
daa
rcll
ret
insl
clc
out
ret
enter
aad
and
roll
loop
dec
add
movl
mov
mov
jge
lret
out
fcoms
cmpsl
xorl
or
push
dec
lods
mov
lret
out
pop
int3
cmp
sub
inc
and
hlt
jecxz
and
int3
pop
pop
sbb
pop
jns
mov
or
icebp
inc
add
clc
jl
aam
sbb
icebp
out
jb
shrl
test
pushf
bound
orl
mov
call
xchg
add
sbb
pop
icebp
outsb
aam
stc
add
dec
ret
test
and
jne
insb
and
fdivl
dec
lret
aaa
sbb
mov
sbb
xlat
incl
jge
xchg
inc
rcrl
mov
stos
mov
lds
add
mov
dec
lret
push
popf
adc
pop
push
cmp
add
add
dec
dec
hlt
inc
sbb
add
jae
mov
loope
push
lock
jb
inc
repz
or
cmp
cmpb
sbb
dec
mov
or
out
call
push
inc
jmp
or
push
dec
mov
aad
ss
mov
test
mov
call
add
out
dec
lret
ljmp
cmp
sahf
mov
arpl
cltd
je
mov
mov
xor
mov
sub
jae
and
jb
and
jbe
and
mov
out
cs
adc
mov
fldenv
hlt
push
aaa
push
jmp
out
movsb
add
xor
sbb
add
sbb
loopne
mov
pop
push
xor
jns
and
pop
mov
icebp
fs
sub
mov
and
pop
dec
jns
sbb
add
lea
add
cmp
dec
in
js
fdivr
jbe
add
mov
hlt
daa
das
cmp
sbb
ja
mov
push
add
add
js
aas
inc
in
jae
cmp
sub
xor
mov
pop
dec
add
call
leave
inc
call
add
and
inc
sub
jecxz
jo
add
sub
testl
cmp
push
and
add
ret
scas
add
stos
adc
cmp
bound
or
adc
xchg
aaa
push
add
adc
inc
dec
repz
js,pn
jne
mov
data16
mov
sbb
push
sbb
test
inc
mov
call
int
test
ret
mov
push
add
adc
dec
jge
mov
dec
push
sub
inc
rcrl
mov
sbbl
xchg
add
test
in
inc
inc
icebp
test
icebp
test
cmpsb
add
and
xchg
cmpb
cmp
cmpb
mov
inc
dec
xchg
dec
decl
or
inc
mov
cmp
mov
insl
adc
fsubrs
and
or
or
int
add
fdivl
iret
loope
mov
aam
addl
add
add
dec
push
fists
and
pop
stos
add
in
mov
andl
push
pop
test
add
in
cmp
jmp
or
dec
pop
popl
add
sbb
call
std
jnp
inc
test
adc
cmc
std
mov
mov
cmc
inc
sbb
xor
sbb
or
add
add
jne
sub
jo
dec
hlt
mov
pop
dec
jbe
inc
cmc
movsl
xor
rcrl
test
loope
hlt
add
std
sub
repnz
xchg
jg
test
loop
dec
pop
mov
push
ljmp
js
add
daa
jno
dec
fadd
insb
push
add
sbb
addr16
movsb
out
fistpl
add
dec
cmp
lret
fidivrl
movsl
das
cmp
push
lods
out
jle
pcmpeqw
addl
ljmp
jg
add
nop
or
mov
mov
pop
push
add
mov
dec
in
pop
test
shl
inc
jle
ret
adc
lea
addr16
out
push
add
pusha
and
cmpsb
push
ret
scas
mov
sub
jmp
add
lock
sbb
movsl
out
and
ja
outsb
add
push
ljmp
inc
jmp
or
dec
add
adc
sub
push
aaa
jnp
test
add
push
jge
inc
les
in
addl
xor
mov
inc
fldenv
sub
dec
stc
sub
jmp
imul
sub
daa
push
jne
dec
stc
jp
mov
aas
vpsraw
sub
inc
mov
mov
push
ds
mov
cmp
insb
lcall
xor
pop
pop
adc
dec
push
adc
cmp
sbb
add
je,pt
dec
dec
fdivl
mov
test
or
imul
sti
push
outsb
xchg
pop
repz
imul
add
cmp
pop
pop
lret
xchg
mov
pop
add
xchg
mov
mov
inc
mov
add
cmpsb
mov
cli
dec
jmp
adc
sub
ret
cwtl
inc
incl
push
test
int3
out
xlat
or
sti
lods
adc
fnstsw
adc
add
pmaxub
mov
mov
lods
loop
lods
rol
ror
or
cmp
dec
ret
pop
mov
loopne
aam
mov
xor
jle
push
pusha
mov
in
sub
test
inc
or
cltd
dec
adc
outsb
test
pop
outsb
fmulp
sbb
jnp
inc
inc
jl
dec
lea
adc
add
in
jle
insb
jmp
xlat
xchg
lea
int
mov
xchg
repz
sbb
mov
out
xchg
jmpw
adc
sarl
or
push
rolb
jmp
adc
jg
adc
add
dec
jg
aaa
and
add
xor
or
lock
add
or
add
cmpsl
or
test
jge
xor
data16
cmp
and
loop
loop
mov
or
mov
data16
inc
data16
loope
mov
xchg
pushf
std
jecxz
add
mov
push
jp
xor
dec
push
ljmp
aaa
pop
mov
push
int
mov
lahf
xchg
loope
push
sbb
je
loop
lret
arpl
scas
jno
jae
pop
inc
jo
mov
xchg
imul
add
cli
adc
mov
addl
add
outsb
mov
or
std
decl
mov
jae
push
jge
add
std
or
mov
add
movsb
pop
mov
int
bound
mov
lock
sbb
inc
call
lret
outsb
xchg
movsb
call
or
inc
add
and
test
push
adc
inc
mov
mov
ret
or
mov
and
insb
ret
repz
sub
loop
push
repnz
test
inc
iret
outsb
aas
in
insb
ret
mov
mov
dec
shl
aam
repnz
test
pop
jg
mov
add
jecxz
fildll
lret
out
test
mov
add
insl
aam
vaddpd
add
cli
out
sbb
add
mov
orl
lret
call
and
stc
jb
mov
add
add
jge
cld
iret
mov
and
adc
sbb
add
mov
data16
jg
test
sbb
or
ds
mov
pop
or
add
add
xchg
or
adc
iret
add
testl
movsl
add
inc
and
push
inc
push
add
xor
push
aad
or
inc
data16
sti
jae
fnstsw
mov
out
loope
jl
imul
pop
fldlg2
testl
and
mov
push
push
sbb
mov
movsb
or
adc
mov
cltd
sub
add
add
sbb
inc
cmc
std
out
scas
add
sub
add
sub
xor
or
mov
xchg
lahf
mov
test
cmp
out
loop
mov
xchg
sub
stos
jae
push
dec
in
mov
dec
sbb
dec
push
les
add
fyl2xp1
scas
add
xchg
adc
inc
add
jae
push
mov
add
add
xchg
mov
inc
dec
pop
leave
inc
int3
mov
push
fwait
adc
dec
test
fsubs
sub
das
jb
mov
dec
jmp
jle
insl
fdivrs
ror
inc
nop
jle
into
jae
sahf
mov
mov
stos
xlat
cmp
add
stos
out
fucom
xor
pop
sbbb
sub
ja
dec
fisubs
shrl
popf
lahf
mov
push
xchg
sub
imul
iret
dec
add
push
jne
xchg
lret
mov
push
icebp
sbb
dec
mov
jns
adc
adc
lock
dec
pop
jno
jmp
push
lods
repnz
mov
inc
int3
test
add
push
jmp
jb
dec
cli
adc
mov
and
mov
xchg
fadd
lret
jge
std
push
pop
bound
fs
xchg
loop
test
frstor
roll
jne
idiv
xor
mov
pop
call
je
and
mov
mov
test
movsb
pop
mov
aam
call
add
sbbb
inc
pop
fsubs
sbb
call
shll
pop
call
in
sbb
pop
jp
sbbl
push
mov
mov
add
je
and
pushf
and
cmpl
dec
and
iret
jns
pushf
mov
test
push
sbb
sti
stc
add
lods
xor
mov
les
and
push
and
sbb
call
aas
scas
mov
cli
xchg
repnz
test
cmp
push
leave
call
cli
stos
out
mov
jnp
call
pop
push
mov
cmp
pop
inc
jle
std
jnp
add
inc
incb
aad
outsl
dec
ljmp
xor
inc
jge
scas
repz
jge
or
jns
add
repnz
dec
sbb
insb
dec
and
mov
mov
fisubrl
or
add
int3
xchg
push
pop
mov
push
call
incl
add
cld
movsl
cli
or
add
or
in
rclb
scas
lods
cmc
add
mov
lcall
scas
testl
mov
in
push
inc
lds
xchg
dec
jo
scas
adc
inc
lds
in
movsb
sub
ss
aam
out
adc
sbb
enter
add
subb
lock
leave
outsl
add
test
je
mov
lret
subb
cmp
test
hlt
bound
sbb
stc
push
jae
lahf
mov
je
inc
int3
imul
xchg
lea
cmp
iret
gs
int
push
iretw
pop
outsl
dec
int
add
fmuls
xchg
cmp
xchg
lcall
in
popf
dec
push
and
jae
push
jb
loop
add
add
roll
add
popf
add
sahf
mov
adc
iret
call
mov
out
mov
hlt
inc
divl
sub
jmp
xor
add
add
add
jecxz
cmp
xor
std
xchg
mov
int3
push
fimuls
push
loop
sbb
stos
cli
daa
and
add
add
orl
mov
xor
dec
sbb
xchg
out
out
push
mov
mov
xorl
add
hlt
push
xchg
xchg
add
xchg
call
pop
inc
in
mov
imul
xor
jmp
pop
push
add
or
jl
xchg
add
add
loopne
and
lret
cmc
iret
cli
push
in
mov
push
add
rcrb
add
jne
push
rol
lcall
inc
push
xlat
iret
xor
movsl
mov
xor
in
repz
adc
push
in
out
cmpsl
add
das
es
pop
xor
pop
add
es
ss
xchg
fdivl
jp
add
ja
cli
mov
xchg
push
stos
dec
in
push
fidivrs
jae
add
lret
in
aad
call
push
mov
jbe
mov
pop
sub
cld
ret
lret
push
bound
add
decb
jg
add
jae
dec
adc
inc
int3
push
push
push
fmull
test
orl
add
add
punpckhwd
lret
shl
push
inc
jmp
xor
adc
mov
inc
add
push
cmp
add
dec
pusha
or
aas
or
mov
loope
or
pop
jnp
icebp
sahf
lret
jmp
leave
add
pop
cmc
add
dec
lret
sarl
push
mov
push
xchg
xor
add
mov
add
push
lock
push
lret
cltd
enter
dec
ds
fwait
cs
outsb
and
negb
jae
rol
cmc
incl
jns
or
jge
shlb
add
add
andb
push
outsl
xlat
xchg
or
or
ja
js
cmpsl
cli
mov
add
add
adc
add
aaa
loop
mov
jecxz
dec
pop
dec
cld
pop
xlat
icebp
adc
loop
mov
jge
cmpsl
cli
decl
decb
clc
sbb
ret
hlt
gs
add
cmp
jg
shll
rcr
and
insl
aas
or
inc
shr
mov
shrl
add
data16
lret
jo
add
sub
fiaddl
dec
add
push
in
add
ret
incl
pop
inc
clc
dec
add
sub
test
out
sarb
testb
and
mov
push
jecxz
jae
ja
pop
pand
sarl
add
daa
popf
sub
dec
mov
push
movsl
sbb
scas
jne
mov
int3
add
add
stc
hlt
jg
inc
jmp
pop
inc
inc
in
mov
rcrl
adc
mov
jp
add
jb
mov
or
jmp
or
ret
lret
xchg
cmp
sar
dec
jge
aaa
jge
data16
stc
hlt
add
je
mov
add
or
xor
stc
fdivl
imul
in
adc
add
int
mov
iret
je
loope
cli
aaa
shl
adc
sahf
pushf
add
movsb
in
cmovo
dec
js
cltd
mov
notb
ljmp
mov
push
lock
sub
jle
aam
sbb
add
shrl
rolb
mov
jbe
into
mov
jmp
sub
cmp
mov
divl
push
inc
mov
mov
bound
add
out
jmp
das
mov
sub
in
inc
mov
das
add
mov
adc
mov
inc
add
subb
loop
xchg
ja
jecxz
mov
lds
dec
lea
mov
add
loop
addr16
popa
std
call
mov
std
call
iret
icebp
adc
loop
mov
aam
mov
incl
lods
mov
ret
sub
dec
ret
iret
lcall
and
test
cs
das
cmpsl
popf
cmpsl
shrl
je
or
insl
inc
rcrb
add
cmpl
das
or
sbb
cmpsb
sbb
je
cmc
mov
das
cmp
mov
out
or
pop
test
push
adc
or
jns
in
movsl
sub
mov
add
aam
mov
icebp
inc
add
clc
mov
add
movsb
pop
add
testl
pop
and
lret
dec
jecxz
lahf
add
fsubr
pop
pop
sar
cltd
or
stc
je
inc
inc
in
mov
testl
inc
int
shll
movsb
pop
add
push
xchg
adc
add
fcom
inc
mov
inc
lret
daa
test
xchg
adc
stc
sbb
rcll
test
mov
jbe
mov
sub
add
mov
call
insl
inc
pop
cmp
adc
add
std
incl
ss
mov
and
fsubrs
je
mov
pop
add
sub
add
addl
add
ljmp
int
adc
sub
jne
jns
loope
int3
sub
mov
cmovo
loop
mov
push
add
add
jbe
push
decl
mov
pop
inc
negb
add
mov
jmp
push
xor
and
fnstenv
mov
inc
movsb
andl
jbe
and
imul
sbb
loop
test
push
mov
and
loop
mov
iret
sarb
in
mov
sub
dec
push
gs
bound
inc
nop
cli
sti
cmc
cmpl
ja
cmpb
sbb
push
mov
bound
test
or
inc
enter
dec
testl
das
int
sti
or
int3
insb
ret
mov
fdiv
or
hlt
cli
inc
in
mov
add
sbb
jnp
scas
test
call
stos
int
or
adc
aad
sub
mov
stos
dec
rorl
es
gs
push
ss
daa
into
int3
out
mov
mov
lahf
pop
lret
mov
inc
xorb
inc
clc
xor
inc
mov
and
mov
add
outsb
popa
and
jg
js
stc
jmp
sub
push
and
adc
inc
cmc
add
adc
enter
sti
jae
add
inc
lods
in
add
fsts
mov
fwait
pop
popa
lds
inc
ret
mov
inc
mov
add
push
mov
mov
lds
xor
inc
jmp
add
daa
pop
mov
stc
lcall
adc
inc
icebp
scas
inc
add
hlt
xor
cmp
sub
add
or
pop
push
int
adc
add
push
inc
mov
lcall
mov
xchg
pop
inc
cld
ficoms
mov
ljmp
shl
adc
and
lcall
add
scas
ret
stc
adc
pop
imul
inc
in
inc
imul
jno
repz
add
out
test
pop
stos
xchg
xchg
sbb
xchg
cli
daa
aaa
lds
cs
out
xor
das
divb
xchg
mov
into
sub
out
gs
insl
daa
decb
clc
shl
jb
push
xlat
fstl
inc
mov
sti
in
cmpsb
repz
add
int3
mov
cmpsl
inc
loop
lahf
loop,pt
xchg
and
sti
cmc
xchg
aas
add
add
aad
stos
jle
fisubrs
push
jnp
or
cmp
cmp
xchg
sbb
daa
mov
pop
aam
aam
adc
loopne
lock
lea
movsb
mov
sti
faddl
add
in
xchg
dec
jns
int3
out
cmpsl
inc
icebp
xchg
inc
mov
lods
scas
push
in
dec
lods
int
add
add
jb
add
es
int3
pop
fsub
sahf
or
into
or
xor
jg
lret
fisubs
add
mov
movsb
int3
push
add
adc
mov
mov
rolb
ret
icebp
ret
test
jbe
iret
stc
aam
flds
cmp
stc
fucom
sar
aad
sar
mov
add
ret
adc
or
jge
rclb
and
int
dec
xlat
mov
add
add
js
test
mov
push
push
jb
rorl
xchg
add
and
add
imul
pop
scas
stc
decl
divb
mov
divb
or
icebp
cli
out
lret
add
and
cmp
adc
dec
out
jg
sbb
pop
cmpsl
push
push
sbbl
insl
and
push
add
sbb
mov
push
add
sub
lods
adc
sbb
cmc
adc
ljmp
rolb
or
int
test
xchg
sar
add
ret
add
adc
loopne
mov
xchg
pushl
mov
sbb
incl
cmp
je
cmp
aam
cmpsl
add
mov
in
xchg
je
sub
cli
jne
xchg
je
add
adc
ret
cli
dec
pop
xchg
adc
les
jmp
push
bound
push
lahf
inc
push
xchg
mov
int3
out
lcall
daa
add
mov
out
xchg
ret
lret
out
xchg
loopne
mov
jp
addb
xchg
les
jle
mov
roll
pushf
mov
sbb
add
adcb
sti
lcall
dec
lcall
movsb
pop
sbb
scas
add
out
cltd
add
jmp
iret
out
cmpsl
sarb
inc
jecxz
out
cltd
into
add
add
or
push
enter
fiadds
out
andb
xlat
inc
mov
adc
adc
push
add
inc
jne
pop
inc
dec
adcl
push
shrl
and
adc
out
mov
adc
add
int3
cwtl
mov
add
add
das
mov
shll
adc
test
shrb
dec
in
mov
or
cld
jns
dec
push
std
xchg
arpl
xchg
add
inc
mov
out
add
pop
notl
notb
jne
and
andb
or
sub
stos
add
add
loope
movsb
arpl
test
jo
sbb
mov
add
cmp
mov
adc
jmp
add
push
xorb
lret
sub
lcall
mov
lret
sub
sbb
xchg
jle
ret
cmpl
xchg
shr
aas
add
xchg
roll
iret
cltd
stos
test
xor
jne
mov
ss
std
int3
lods
into
mov
idivl
lds
sbb
hlt
mov
stos
sub
add
cwtl
sbb
shlb
push
inc
jae
sub
adc
add
andb
push
pusha
sub
jmp
xor
pop
xchg
adc
lret
cmc
inc
add
call
add
xor
rolb
pop
aaa
flds
add
and
mov
jl
add
sar
std
or
rclb
add
shlb
pop
int3
outsb
fwait
mov
cld
cmpsl
stos
mov
in
or
call
loopne
sbb
xor
mov
pusha
daa
and
dec
mov
les
pop
mov
add
test
and
add
xor
call
sub
xchg
cmp
fists
mov
and
lds
fiaddl
jmp
out
jle
loopne
xchg
call
jb
sbb
fsubl
inc
jmp
notl
jle
sub
dec
cmp
sbb
push
xchg
call
add
ret
loopne
adc
test
inc
call
sbb
cmpsb
frstor
roll
sub
and
outsb
hlt
add
in
cmc
adc
and
es
adc
ljmp
push
mov
rclb
pop
into
pop
mov
push
sub
das
pop
adc
cmp
add
add
add
in
push
in
lahf
mov
call
push
jmp
nop
int
push
ret
inc
sub
cmc
adc
mov
pushl
into
repz
xchg
add
out
jg
repz
add
add
out
out
jae
push
jge
xchg
dec
dec
dec
std
xchg
out
cmp
shlb
add
add
arpl
adc
sub
jae
or
sti
cmc
jp
aas
add
mov
pop
cmpsb
imul
mov
repnz
jb
inc
add
clc
xchg
mov
mov
xor
mov
clc
out
repnz
add
int3
call
xchg
ljmp
add
dec
mov
movl
inc
or
mov
or
ss
lret
scas
cmpb
cmp
int3
outsb
ret
ret
rorl
mov
xchg
iret
adc
clc
pop
daa
add
mov
fildll
xchg
push
ret
clc
dec
fldenv
add
mov
xor
cmp
add
ss
adc
lea
inc
inc
add
add
lods
push
sub
add
add
jge
add
or
call
gs
aas
adc
mov
add
shr
cmp
jo
ds
mov
add
fists
test
xchg
or
add
pushl
cmpl
or
inc
aas
and
adc
sbb
add
push
mov
out
stc
lcall
add
add
lret
jge
add
rolb
std
pop
pop
loopne
dec
push
out
cmp
push
sub
decl
loop
in
out
test
jp
mov
inc
lock
adc
push
ret
into
dec
pushl
mov
dec
jl
push
sub
insl
add
mov
xor
decb
adc
add
xchg
add
add
syscall
add
data16
adc
insl
add
jbe
mov
shll
pop
mov
aad
push
mov
add
add
shll
andl
fidivrl
fmuls
in
mov
aas
add
xchg
ljmp
rcr
add
add
inc
and
cmp
jbe
fdivl
inc
and
daa
bound
out
pop
jge
sbb
ljmp
mov
sbb
into
aam
ror
cmp
lds
add
in
add
xacquire
mov
clc
jle
call
add
inc
push
jnp
lock
add
hlt
lcall
mov
out
sbb
push
or
sbb
out
insb
les
dec
roll
int3
stc
inc
in
call
add
repz
cmp
insb
cld
add
out
add
sti
pop
mov
pop
or
add
jl
add
adc
push
add
stos
add
cli
js
je
lcall
add
sub
dec
push
leave
sbb
add
xchg
int3
add
xor
or
jmp
in
rol
scas
add
test
ss
lock
shlb
adc
mov
push
xchg
cmp
push
sahf
cli
test
cltd
incl
pop
push
shlb
rclb
adc
dec
testl
add
add
push
add
test
frstor
cmp
jae
mov
test
cmc
jne
dec
adc
fmull
add
cmpb
jne
dec
jne
int3
leave
je
inc
aam
push
lcall
adc
int3
ljmp
scas
and
add
inc
idiv
loopne
and
add
fs
ret
add
jns
add
in
lods
enter
cmp
and
mov
sarl
dec
fbld
mov
xchg
movsl
xor
in
xor
add
inc
and
sub
and
push
ret
jle
mov
push
mov
icebp
jns
loope
or
or
mov
incl
push
rcl
push
cmp
mov
sbb
mov
add
push
das
mov
jg
movsb
test
add
pop
inc
sbb
sbb
iret
mov
into
xor
cld
ss
out
idivl
out
repz
inc
sub
push
mov
out
mov
mov
mov
fiaddl
add
clc
test
sub
dec
ds
inc
dec
es
push
and
mov
fisttps
inc
stos
fcomip
inc
mov
repz
rcl
jnp
out
inc
fistps
inc
add
dec
fdivs
push
mov
pop
push
les
icebp
repnz
mull
lods
and
add
add
test
sbb
xchg
add
add
adc
jmp
add
shrb
push
mov
cmp
dec
add
push
or
incl
imul
pop
push
loopew
lret
stc
aam
xor
cltd
inc
adc
pop
sidtl
pusha
dec
pop
add
add
xor
sub
in
insl
and
jne
ds
add
popl
ljmp
mov
push
xchg
mov
jmp
xor
jmp
xor
call
mov
ja
push
pop
std
xor
jmp
mov
leave
mov
test
test
iret
call
and
testb
add
repnz
dec
mov
repz
xchg
add
xchg
mov
jp
push
int
gs
mov
jbe
std
ljmp
mov
dec
cmpsb
pop
cmpsb
lds
cmp
sub
repz
lods
inc
cli
pop
push
std
cmp
nop
jns
cmp
pop
cmp
wbinvd
jnp
in
sub
or
inc
es
add
inc
nop
pushf
pop
cs
jl
sub
cmc
call
cmpsl
cs
push
das
xchg
int3
jmp
out
sbb
jle
mov
cmp
rcll
in
daa
rol
jnp
or
call
int3
lret
cmp
addr16
mov
adc
sub
or
insl
aas
hlt
sbb
add
daa
mov
adc
insl
aas
sbb
pop
mov
push
push
ljmp
fwait
std
daa
inc
sub
add
inc
stos
filds
inc
scas
jle
add
mov
jo
add
jmpw
ret
stos
add
cmp
or
stc
mov
add
dec
push
add
dec
sbb
add
pusha
enter
mov
insb
hlt
ret
call
imul
mov
roll
in
dec
pop
lds
sbb
ljmp
daa
test
dec
mov
add
test
les
stc
mov
or
daa
cmp
enter
and
dec
xor
add
cltd
in
test
enter
xor
or
mulb
loop
jp
popa
aad
add
iret
push
inc
pop
dec
mov
jbe
repz
fmull
mov
loopne
cmp
stos
adc
or
jbe
mov
add
jo
leave
mov
push
push
or
push
out
add
int3
out
inc
add
inc
and
cmp
and
or
add
mov
mov
pop
mov
adc
sub
pop
mov
push
mov
pop
dec
inc
cli
addr16
std
pop
mov
mov
push
xchg
lret
add
movsl
cwtl
mov
clc
loopne
add
sub
adc
cld
out
mov
push
mov
aad
test
add
mov
sub
ss
jmp
pop
lcall
lret
ret
xor
das
sbb
hlt
cmpsl
sub
inc
test
in
iret
lret
mov
call
add
lahf
mov
sbb
stc
cld
jne
out
fadd
inc
rolb
inc
push
sub
inc
add
adc
in
adc
sub
add
and
in
sbb
sub
call
enter
sub
add
in
enter
sbb
sub
xchg
test
mov
lock
in
add
sbb
fldt
xchg
pop
inc
inc
int
add
add
add
adc
xchg
stc
bound
push
push
hlt
mov
jb
movsb
repz
fistl
mov
inc
in
stos
cmc
xchg
orb
sbb
inc
add
rcl
imul
push
mov
pop
sbb
add
test
jne
adc
mul
add
insl
repz
add
adc
inc
pop
jne
mov
xchg
sbb
std
mov
mov
test
xor
cmovo
mov
sub
pop
inc
and
and
cmp
mov
jne
movsl
dec
je
repz
incl
test
adc
test
add
std
or
sti
and
or
xorb
inc
add
inc
std
rcrb
adc
lock
and
loop
divb
mov
jg
xchg
adc
push
jns
ja
inc
or
mov
jne
mov
pop
out
hlt
add
inc
mov
cmpsb
lret
xor
out
mov
or
filds
jge
fstpt
fwait
outsb
iret
and
outsb
leave
add
incb
int
cmp
sbb
lods
push
sbbb
mov
stos
sbb
mov
sarb
imul
jmp
pushl
outsl
mull
or
mov
out
lahf
mov
fwait
daa
and
cld
sub
dec
sub
push
mov
add
dec
add
in
add
add
xchg
jecxz
in
add
jne
and
mov
shl
imul
and
push
clc
jae
aam
call
rcrb
cmc
bound
lock
jb
in
adc
xorps
sti
mov
jmp
sub
in
push
add
add
sub
jne
sub
out
add
mov
stos
sti
lret
test
dec
push
testl
sbb
push
incb
sbb
sbb
cld
scas
cmovo
dec
mov
adc
dec
mov
jnp
dec
sar
mov
add
adc
add
add
lods
cmp
movsb
jmp
subb
push
add
adcb
jp
dec
xchg
rcrb
rol
and
addl
push
test
daa
fcmove
sbb
cmp
lods
test
fcomi
leave
je
or
and
mov
dec
pop
mov
or
inc
fdivp
repz
add
add
mov
mov
mov
sub
cmpsl
loope
inc
mov
ret
or
fistpl
dec
daa
ret
push
jnp
jle
pushf
mov
incl
in
iret
push
cwtl
xchg
sar
jg
pop
roll
lret
idiv
addr16
addb
popf
jl
push
jg
or
inc
sti
insb
xchg
cmpsb
sarb
sbb
daa
enter
or
add
lret
imul
cmp
jge
cmpsb
aaa
dec
mov
mov
push
push
sub
out
repz
push
cmpsl
imul
xor
jmp
and
pop
xchg
cmp
cmp
cmpsl
add
nop
iret
xor
inc
sahf
jge
bound
add
int3
pop
mov
cmpsb
add
out
lds
add
add
mov
in
stos
es
jmp
jp
jg
add
stc
fdivl
iret
fsubrs
movsl
add
mov
cmpsb
mov
jge
dec
daa
inc
jmp
jle
add
mov
adc
mov
jge
add
rorl
dec
out
inc
outsb
mov
stc
fadd
mov
or
xor
shrb
test
stc
data16
mov
adc
test
jmp
pusha
add
stc
mov
cmovo
cmp
mov
inc
shrl
mov
js
rcrl
dec
mov
pmulhw
pop
mov
nop
inc
je
dec
loope
adc
arpl
dec
lea
push
insb
mov
mov
lret
daa
lret
pop
roll
add
add
xlat
jns
lods
lods
add
push
inc
xor
jmp
std
dec
sub
adc
mov
add
rorl
jns
add
mov
push
pop
mov
dec
sbb
add
xchg
inc
add
pusha
icebp
std
dec
addb
ljmp
mov
mov
jge
mov
mov
add
mov
js
test
orl
jg
mov
sbb
ss
sub
call
sbb
jmp
decl
pop
add
jns
jmp
les
sbb
pop
mov
loop
mov
int
int3
movsl
aas
xor
jmp
inc
sub
enter
push
xor
sahf
sub
push
int
insb
add
cmpsl
ret
mov
sete
pop
test
lret
out
pop
sar
fucomi
pop
call
add
daa
pop
add
lret
out
std
fsubl
ret
pop
push
les
inc
add
mov
adc
jmp
add
les
ds
call
add
add
aam
sub
inc
movsb
es
xor
in
cmp
add
ret
inc
int3
ret
fwait
cs
call
icebp
movsb
push
aas
mov
pop
test
push
fsubr
pop
dec
mov
jge
dec
cmpsb
in
repnz
mov
jmp
movsb
add
and
sbb
negb
pop
test
enter
mov
test
push
mov
insb
lods
cmovo
mov
test
gs
andl
mov
mov
popa
decl
and
pushf
mov
push
inc
movsb
pusha
pop
adc
add
addl
inc
or
addb
mov
rcr
xchg
iret
fiaddl
inc
int
inc
shrb
mov
test
add
inc
int3
or
or
pop
ret
add
adc
stos
cwtl
in
sbb
add
jns
std
incl
mov
xor
sub
add
mov
das
inc
cmc
aas
xchg
out
pop
sbb
jecxz
out
cli
fsubrs
add
push
in
jmp
in
std
incl
popf
sbb
call
inc
fisttps
pusha
fdivrl
dec
xorl
jmp
jmp
ret
stos
add
lahf
add
mov
lahf
cli
out
add
sahf
jl
dec
fdivr
dec
add
out
ja
jecxz
mov
int
jae
shl
inc
xlat
mov
daa
xor
js
les
shll
add
pop
xorb
int3
ljmp
int
mov
add
icebp
js
sbb
and
add
lods
or
mov
stc
add
add
add
or
xchg
cli
es
lret
add
add
pop
adc
jl
mov
arpl
push
jb
sbb
jl
add
je
pop
adc
dec
add
push
jb
dec
push
stc
outsb
fstl
push
movsl
mov
push
mov
aaa
mov
sbb
lea
fstps
outsl
or
outsb
punpckhwd
ret
pushl
testl
cmpsb
les
add
xchg
sbb
incl
pop
add
imul
pop
outsl
lea
add
dec
push
dec
mov
rorl
push
pop
pop
cld
xor
mov
cld
add
xchg
add
fisttps
test
ds
mov
inc
or
push
shlb
add
push
je
cs
outsb
cld
xchg
cmp
das
fwait
lods
jp
or
ds
jp
jnp
sbb
into
sub
or
xchg
repz
repnz
mov
add
cmp
pop
cs
test
fldcw
xchg
incb
add
out
sub
les
insb
shll
ficompl
hlt
arpl
mov
sarb
out
jne
pop
rcll
mov
push
inc
shll
cld
inc
inc
jge
enter
mov
addr16
jge
sti
mov
test
into
add
in
add
inc
mov
shlb
dec
inc
incl
lret
out
sti
sub
lock
loop
adc
lcall
jecxz
insb
jecxz
add
aad
jno
je
call
jb
push
lock
sti
int
and
shll
add
punpckldq
mov
pushf
xor
pop
mov
lret
in
or
adc
test
jl
ss
inc
int3
std
call
aas
lcall
xor
push
sahf
rcrb
jge
mov
neg
xchg
cli
out
push
clc
fs
sbb
ds
xchg
call
add
lret
or
ret
orl
adc
adc
push
add
push
int3
dec
push
out
fsubr
imulb
int3
call
pop
outsb
jnp
cmc
insb
cmp
xchg
pop
mov
shr
cltd
int3
or
dec
xchg
jmp
test
add
mov
push
loop
xor
insb
roll
pop
pushf
xor
mov
int3
add
sbb
or
mov
cli
pop
mov
add
jbe
sub
movsl
cmc
pushl
jl
fldt
push
inc
mov
std
js
roll
mov
pop
stc
xchg
mov
sbb
inc
movsl
push
sbb
jl
faddl
add
add
std
incl
sbb
push
mov
mov
or
add
icebp
push
mov
testb
mov
or
sub
insl
or
sub
dec
cmpsl
std
addl
sbb
int3
outsb
lds
inc
sub
jg
loopne
inc
les
dec
outsb
lds
inc
sub
xor
push
pop
dec
stos
adc
test
xor
call
fimull
xchg
sub
push
and
xchg
inc
mov
mov
jnp
jle
fistl
mov
popf
xchg
test
cmp
lods
push
popf
xchg
jge
call
sbb
aaa
cmpsb
jmp
add
push
ds
dec
dec
lds
movsb
outsl
push
xchg
stc
xor
add
inc
dec
insb
or
sub
adcl
push
mov
add
ds
dec
mov
call
ret
test
mov
in
scas
cmp
or
add
leave
mov
push
jae
incb
jns
sub
fcos
adc
or
push
ljmp
shl
add
sbb
add
xor
cwtl
divb
outsb
mov
xchg
push
adc
data16
or
mov
adc
loope
adc
loope
jp
testl
lahf
test
in
cmp
jp
icebp
xchg
adc
cmc
cmpl
dec
cmp
xchg
xchg
push
cmpsb
ljmp
mov
add
add
and
xchg
movsl
push
push
jge
xchg
das
jo
jl
std
incl
es
cli
jne
andb
jns
cmp
adc
dec
jmp
mov
fidivrl
cmpsl
loop
out
repnz
movsl
std
test
sbb
jle
out
and
jnp
or
aas
int3
pushf
mov
add
mov
roll
pop
cmp
inc
mov
jge
jge
enter
fcom
sbb
inc
sti
dec
cmpsl
out
in
in
sar
fmuls
test
mov
push
mov
lcall
out
aad
cmpsl
jg
pop
in
pop
cmpsl
hlt
jle
sbb
jl
mov
mov
dec
repnz
jl
or
pop
shl
mov
outsb
je
cltd
mov
faddp
add
add
add
unpcklps
test
dec
adc
jmp
mov
loop
sub
xchg
stc
sbb
hlt
mov
loope
add
shr
stc
jl
call
bound
xchg
stc
inc
inc
int
aaa
push
pushf
call
add
add
add
scas
into
test
sbb
int
mov
sub
add
lcall
fcomip
mov
add
dec
xor
lods
xchg
jp
insl
jge
popf
mulb
testl
cltd
imul
adc
xchg
or
add
cmp
ja
mov
push
int3
orl
add
lcall
pop
dec
icebp
pop
sub
cwtl
test
push
test
and
outsb
xor
mov
addb
int3
sub
decl
je
outsb
test
mov
ret
ljmp
push
ret
jle
or
xor
jae
and
add
mov
jbe
cmpl
and
adc
imul
adc
jae
dec
adc
adc
nop
mov
or
jle
hlt
ljmp
insl
jns
sbb
mov
add
data16
add
les
std
jae
mov
jnp
loop
add
add
pop
ds
lret
jmp
xor
in
call
add
inc
and
andl
add
negl
imul
inc
lods
dec
mov
adc
fcmovb
aaa
inc
lods
sti
scas
xchg
cmpb
out
add
mov
dec
popf
mov
movsb
pop
pop
jbe
xchg
fdivrs
lods
fs
mov
out
repz
xchg
lock
inc
mov
mov
mov
jle
mov
cmp
add
cmpsb
in
sbb
in
lahf
jb
aad
dec
rcr
dec
stc
aad
inc
mov
notb
fldenv
cli
stc
fwait
push
or
mov
test
test
pop
stc
push
mov
pop
stc
imulb
pop
stc
out
mov
cmp
test
cli
stc
xor
bound
pop
inc
in
pop
xchg
movsl
xchg
jae
sub
pop
xchg
pop
dec
rclb
push
dec
hlt
xchg
pop
or
cs
hlt
and
sahf
or
adc
jne
rcrl
mov
icebp
enter
orl
shrb
or
sbb
dec
mov
mov
dec
adc
sub
mov
jns
cs
or
push
popl
sub
cmp
add
outsb
and
pop
notb
pop
add
mov
fisttpll
or
mov
xchg
sub
pop
sub
sub
sarb
or
cmpsb
sbb
repnz
lods
mov
mov
pop
out
xchg
cmp
add
inc
cs
cli
mov
dec
xor
mov
pop
pop
into
loopne
add
and
xor
pop
fwait
push
and
mov
cld
je
or
cld
inc
add
adc
mov
sbb
xchg
pop
fistl
fistl
add
insb
xor
dec
repnz
cmp
add
out
add
inc
bound
rcl
mov
aaa
int3
testb
enter
ficomps
sub
jle
push
adc
mov
test
xchg
push
inc
je
and
int3
and
jmp
in
add
pop
and
add
lea
push
push
push
jg
add
mov
mov
jmp
cld
lret
add
imul
add
push
into
out
push
add
add
jnp
jl
adc
icebp
xchg
popf
mov
or
ret
mov
outsl
sbb
cmp
test
add
test
shll
jae
movsb
jecxz
repnz
push
cmpsb
xor
ds
clc
or
subb
add
std
repnz
xor
insb
add
push
add
or
fcomps
add
xchg
bound
aas
jmp
rorb
xorb
dec
test
test
rcr
andl
dec
cld
es
call
fcmovnu
add
jne
sbb
int
mov
push
dec
fsubr
jno
add
xchg
xor
mov
fisubrs
imul
push
notb
mov
push
out
je
push
push
loopne
out
dec
out
pop
pop
cli
jns
inc
test
mov
add
fadds
cli
std
test
fcoms
sub
je
jmp
pop
adc
mov
push
jmp
push
js
bound
ja
mov
add
test
jmp
jb
add
je
mov
std
cs
sti
xlat
roll
mov
or
mov
mov
int
pop
cs
lret
add
out
popf
out
fcompl
adc
imul
call
mov
dec
inc
pusha
fists
and
mov
dec
int3
out
jge
adc
ds
imul
int3
repz
pop
mov
add
jns
mov
mov
ret
sbb
xor
jo
pop
push
and
push
jmp
repz
arpl
arpl
fs
shrl
daa
push
dec
daa
add
mov
mov
push
xor
loop
add
lret
clc
dec
dec
mov
clc
dec
push
mov
data16
pusha
xorb
add
sub
inc
pop
push
dec
movsl
and
ret
inc
lret
add
lods
out
test
mov
int3
add
dec
out
mov
cld
dec
dec
sbb
cld
lret
add
dec
push
mov
adc
ds
pusha
xchg
sahf
test
jle
je
mov
das
bound
std
push
jnp
fldl
mov
flds
add
je
mov
pop
add
in
rolb
jp
xor
clc
sub
popa
mov
orl
call
imul
push
and
incl
daa
adc
test
or
movsl
aam
pushl
inc
imul
mov
sbb
ds
mov
fucomi
push
add
test
pushl
push
push
xchg
lret
add
icebp
aas
add
dec
jle
je
daa
mov
inc
sbb
std
jle
hlt
or
sbb
lods
cli
adc
add
and
push
adc
cmpsb
mov
push
sub
ret
push
adc
xchg
lret
scas
xchg
movsb
mov
pop
add
xor
pop
inc
inc
jmp
fbstp
lldt
lock
adc
std
test
or
cmpsl
fisttpll
inc
lret
aad
jle
mov
jle
mov
jle,pt
mov
outsb
fsubs
shl
push
sarl
sbb
cmc
in
cli
not
push
rclb
imul
pop
test
cld
pop
mov
inc
mov
add
and
test
das
or
xlat
mov
je
xchg
adc
sbb
or
int3
mov
outsl
cmc
out
ret
cmpsl
jecxz
xchg
pop
shll
data16
xlat
mov
inc
addl
iret
mov
pop
mov
xchg
mov
addl
fsubs
add
push
cmp
push
out
ds
mov
push
mov
mov
movsl
mov
int3
add
test
mov
outsb
sarl
add
add
cmp
test
and
ljmp
mov
add
dec
or
inc
push
ret
outsl
dec
lock
add
add
add
push
inc
or
movsl
inc
stc
add
mull
sub
insb
pop
into
call
mov
pop
or
pop
ret
pop
sbb
add
inc
jmp
int
aam
and
cmp
xchg
in
fcomp
add
cmp
inc
cltd
add
adc
and
add
adc
inc
imul
cli
jno
pop
lea
add
mov
xchg
pop
add
icebp
inc
je
and
loope
add
sub
stc
das
out
cmp
enter
imul
push
add
addr16
jae
jge
pop
cld
out
mov
add
add
mov
xchg
lds
push
out
cmp
jge
popf
cmpsl
sbb
add
lea
dec
mov
add
ljmp
shll
mov
out
add
filds
call
add
int3
testb
rorl
dec
push
in
andb
pop
xchg
sbb
inc
mulps
xorb
push
fwait
mov
pslld
push
in
out
ret
decl
shrb
push
fs
jg
mov
outsl
dec
add
jbe
push
lret
iret
bnd
stos
sub
call
push
stos
sbb
lock
daa
add
mov
or
xchg
mov
mov
in
push
or
cmc
xchg
gs
pop
or
inc
push
sub
aad
jg
call
dec
add
outsb
das
mov
lahf
dec
in
mov
sbb
add
or
notb
dec
push
test
cmp
ret
dec
cmp
out
repnz
and
mov
add
out
sub
rorl
add
xchg
scas
call
sub
push
add
mov
sbb
int
sbb
dec
push
fisubrs
adc
ficompl
lods
cmp
icebp
adc
fisubrs
leave
add
push
inc
inc
adc
lods
outsb
gs
loope
idiv
add
lfs
jle
test
sub
xchg
enter
mov
pop
sar
into
sbb
cli
xor
inc
flds
enter
push
pop
outsb
movsl
adc
sub
add
out
sub
incl
notb
inc
test
stc
add
jle
push
push
adc
cmpb
push
aas
and
sub
inc
inc
push
mov
inc
stos
cli
adc
lock
push
pop
mov
gs
je
xchg
fwait
popa
lret
xchg
add
test
jmp
mov
bswap
incl
jae
push
add
outsb
sub
dec
dec
mov
pop
lock
fs
mov
loopnew
lret
fs
or
add
int3
push
push
jl
fdiv
mov
hlt
addl
mov
and
xchg
aaa
push
das
pop
sub
sbb
into
loopnew
lret
mov
pop
sub
push
or
iret
imul
jle
fs
add
jnp
inc
cli
dec
in
add
int3
pop
inc
ffreep
mov
lret
add
call
call
jp
jmp
ret
jnp
mov
xor
out
jg
add
add
hlt
push
pop
push
roll
test
aas
jnp
cld
mov
inc
jmp
inc
jnp
mov
ljmp
enter
jge
insl
movsl
add
sti
push
mov
pop
insb
xchg
inc
jnp
sub
push
movsl
jmp
push
loopne
stc
ret
jp
pop
loopne
add
mov
inc
je
xor
cwtl
sti
pop
roll
data16
ret
sbb
lcall
xorb
mov
inc
push
loop
jne
sbb
sbb
test
xchg
push
sub
insb
mov
imul
xor
stos
mov
push
repz
into
mov
xor
int
cmp
insb
pop
into
mov
pop
jge
sbb
xor
call
xlat
out
cmp
std
push
jb
dec
mov
jbe
aas
test
add
rol
push
add
pop
adcb
lock
imull
push
xchg
add
mov
or
dec
adc
pop
fs
ljmp
mov
mov
ret
nop
es
out
or
incl
call
dec
roll
mov
cmpl
imul
int3
lret
and
daa
add
jnp
push
xor
mov
xchg
daa
add
inc
out
add
lock
fiadds
repnz
lret
push
xchg
outsl
pusha
andb
add
adc
iret
jne
dec
xchg
hlt
push
js
addb
sti
xchg
mov
ret
lret
pusha
dec
xchg
psubsb
and
and
int3
pushf
jp
sbb
push
sbb
fs
jb
je
pop
push
sbb
sbb
add
enter
cld
push
shlb
je
scas
sub
scas
push
test
bound
adc
sub
adc
jno
sub
outsb
dec
int
add
dec
mov
jns
xor
lods
push
lahf
mov
stc
add
add
add
cmp
test
xor
or
add
mov
push
or
add
scas
sbb
cld
xor
dec
sbb
and
inc
popa
insb
and
insb
cmp
push
jle
test
hlt
leave
test
xchg
std
mov
mov
sbb
inc
cltd
rorl
jl
cmp
test
dec
incl
xchg
dec
mov
incl
imul
and
lret
mov
clc
incb
jne
or
inc
sbb
dec
and
xchg
and
xchg
int3
mov
pop
int
mov
jl
fcoms
arpl
out
dec
jae
lret
mov
in
cmp
aas
add
inc
out
stc
shll
fsubs
mov
add
xlat
jmp
arpl
jno
call
sub
insb
outsl
incl
sarb
and
lods
mov
inc
inc
sbb
adc
adc
xchg
mov
or
paddd
add
pavgw
sbb
mov
fsubr
add
pop
mov
test
dec
out
je
mov
aaa
jne
xchg
insb
andb
out
add
cwtl
and
add
jne
add
or
subb
mov
dec
lret
inc
lahf
je
pop
or
out
add
pop
and
call
dec
push
dec
stos
clc
jl
ret
addr16
mov
lret
out
push
inc
mov
sbb
inc
add
int3
dec
pop
dec
je
ss
inc
xchg
int
arpl
mov
inc
push
fucomip
add
xchg
sub
pop
shrb
insb
push
scas
test
add
mov
add
sbbb
inc
je
adc
dec
or
loopne
adc
mov
fs
clc
pop
fs
scas
adc
push
inc
push
int
inc
dec
lds
fs
add
test
pop
fsub
ljmp
add
add
jne
lock
hlt
xchg
sbb
dec
and
and
xlat
cmp
shll
arpl
sbb
add
movsb
mov
jmp
clc
fxch
add
xchg
sti
mov
push
pop
mov
cmp
push
push
lret
std
cmpsl
push
call
adc
sbb
adc
jbe
sbb
and
arpl
adc
hlt
add
les
cmp
pop
ljmp
into
mov
push
int3
aaa
mov
addb
add
cli
call
cmp
insb
cmpl
cmp
pop
xchg
mov
outsl
inc
arpl
sbbb
es
std
stc
xor
popa
mov
add
dec
lcall
cmpl
test
mov
cmc
mov
fs
std
decl
cmpl
pop
mov
bnd
jge
inc
stc
loopw
xchg
dec
xchg
fidivl
inc
add
in
add
iret
out
je
cmp
mov
inc
pop
jbe
je
dec
sbb
sbb
inc
xchg
rcrb
aas
cmova
cli
jo
add
mov
es
xchg
pop
dec
out
jge
iret
inc
lret
scas
xchg
dec
inc
addl
int3
jo
and
std
mov
inc
mov
jnp
inc
lcall
mov
call
call
jne
xor
test
lods
inc
jp
mov
mov
add
add
outsb
sub
enter
cmpb
pop
push
mov
fdivr
call
fisubrl
xor
daa
or
xor
mov
sbb
mov
cs
xchg
loopne
adc
inc
dec
lds
jb
add
sbb
cmp
add
cmp
loopew
cmc
push
testl
cmp
jmp
fidivl
ja
and
xchg
mov
loope
mov
testl
repz
and
adc
out
or
gs
dec
lds
lahf
adc
cmc
inc
and
adc
notb
cmp
dec
add
pop
push
jmp
repz
addl
gs
andb
outsl
shrl
aas
add
and
out
sub
adc
xrelease
imull
mov
out
loop
sbb
and
incl
fs
or
arpl
or
test
std
pop
add
xor
incl
or
inc
add
sub
lret
add
outsb
cmp
popa
in
inc
inc
hlt
out
or
js
fs
imul
fwait
div
icebp
jbe
cmpsl
out
pop
jbe
push
inc
pusha
in
mov
add
mov
mov
jg
ret
lret
mov
add
test
insb
dec
fldt
call
lods
pop
sarb
mov
addb
pop
mov
sub
movl
or
inc
decl
out
movsl
mov
sbb
enter
fdivrl
or
add
xor
jle
add
imul
pusha
loope
inc
cmp
add
popf
shlb
test
adc
inc
movsl
in
movsl
add
test
pop
call
insl
scas
clc
sub
jbe
sbb
enter
movsb
imul
jmp
push
bnd
push
lret
out
add
jle
pop
inc
jge
movsb
in
add
out
bound
add
mov
add
sub
mov
mov
orb
pop
jmp
mov
adc
test
and
mov
xor
fwait
inc
pop
cmp
hlt
aam
notl
mov
int3
les
mov
test
or
decl
dec
movsb
pop
iret
adc
imul
jp
and
lea
jmp
jg
adc
add
lock
push
lds
adc
xchg
cli
fldt
xlat
mov
adc
add
out
inc
push
cmp
push
icebp
pop
loope
mov
pop
cmp
inc
cld
pshufw
insl
add
inc
mov
daa
lock
jae
mov
cli
in
hlt
adc
fimuls
mov
jmp
je
or
mov
push
cmp
out
enter
ds
loopne
push
inc
xchg
mov
shl
xchg
das
pop
std
adc
mov
jns
sbb
loopne
ret
xchg
pushf
addr16
popl
push
sbb
cmp
push
cmpsl
mov
push
jecxz
shrl
daa
add
lret
outsl
je
cmp
imul
sub
inc
lods
sarb
inc
lahf
fs
mov
jne
jae
or
das
jle
mov
out
roll
add
add
add
push
or
fsubrs
ror
sti
js
je
mov
add
jne
and
xchg
aaa
push
je
or
mov
add
dec
stc
insb
xor
sahf
into
addr16
push
hlt
push
je
sbb
jl
sbb
cli
aas
add
mov
call
xchg
stc
js,pn
or
data16
jmp
nop
sti
and
insb
mov
add
loope
cmpsb
testb
xor
adc
mov
test
into
dec
add
cmp
stc
lcall
les
sub
sub
loop
test
dec
dec
inc
add
call
test
pop
incb
pop
mov
stc
ljmp
mov
stos
mov
xchg
mov
mov
cli
fisubs
xor
jmp
xchg
nop
andl
adc
clc
leave
and
sbb
jae
add
inc
sbb
aam
adc
jb
mov
out
popa
cmp
std
cmp
sub
jg
std
icebp
add
gs
fdivs
cmpb
inc
add
mov
shll
mov
out
sub
cmp
test
loope
rol
inc
dec
lcall
decl
xchg
xchg
cli
in
lret
xlat
adc
mov
or
cmc
ret
out
push
push
sub
popa
add
xor
mov
dec
lret
out
aas
testw
jp
mov
mov
lcall
in
mov
xchg
lret
out
test
imul
out
iret
out
das
jp
inc
mov
xor
fnstsw
das
mov
scas
pop
cmp
daa
mov
inc
mov
add
test
stc
jmp
scas
scas
stc
fidivrs
jl
mov
push
lods
sti
shlb
stc
pop
outsl
test
jmp
mov
je
out
int3
in
in
fsincos
mov
andb
jmp
add
call
jno
in
and
cld
jae
add
bound
jmp
or
lods
pop
mov
mov
add
mov
sbb
dec
push
or
mov
mov
xor
iret
add
cmp
mov
sbb
push
fs
adc
inc
ret
mov
cmc
cmpsb
cmpsb
mov
add
add
daa
dec
xor
dec
push
mov
subl
xchg
fmull
jne
sub
adc
push
stc
ljmp
sbb
sub
adc
dec
jne
add
xorl
xchg
rcrb
mov
dec
push
pop
mov
and
aaa
add
jne
in
or
adc
movsb
push
aaa
test
pop
push
mov
inc
push
jnp
int
ss
cs
stos
sub
xchg
sbb
add
mov
add
pop
adc
je
inc
movsb
repz
pop
jg
adc
je
cli
cmc
aam
inc
add
push
test
out
and
sub
sbb
add
push
fs
xchg
cmpsl
leave
test
mov
sbb
sbb
scas
or
aam
lret
je
ficomps
aam
dec
pop
jne
test
pusha
jae
xor
or
xor
push
or
jmp
add
lret
mov
call
lahf
mov
add
dec
dec
cmpsl
or
pop
cltd
fucomip
and
add
cmc
inc
and
stos
ret
lret
add
in
mov
push
std
pop
int
in
xchg
sarb
xlat
lods
aas
push
jmp
insl
push
movsl
gs
hlt
mov
pop
dec
bound
adc
scas
iret
idivl
jmp
mov
mov
jmp
adc
cmc
mov
je
es
sub
add
mov
int3
push
or
pop
inc
cs
push
adc
stc
cld
scas
mov
or
rorb
and
in
fs
enter
adc
divb
notb
stos
or
test
sbb
push
test
jbe
fnstenv
pop
scas
test
sbb
add
lahf
loop
jp
push
mov
push
jg
push
xorb
cmp
sahf
push
mov
mov
std
pushl
imul
and
sub
push
cvttps2pi
or
pop
sahf
orb
test
decb
inc
pop
std
dec
jnp
loopne
aad
leave
xchg
fisubrl
dec
js
test
xor
test
and
mov
mov
sub
cwtl
lods
xor
and
in
je
jne
xchg
mov
cli
test
movsb
cwtl
insl
xor
out
inc
std
out
or
mov
mov
sub
ret
or
out
int
push
add
insl
inc
lret
fldenv
ret
pop
shlb
push
iret
mov
outsb
mov
pushf
sbb
add
in
mov
mov
fs
lods
sarl
test
mov
pushf
test
and
lret
pop
fcom
jg
ljmp
fucomip
sti
lcall
mov
arpl
dec
jg
fdiv
mov
pop
add
lret
inc
mov
inc
adc
add
fcomps
add
add
mov
stos
dec
push
bound
fidivrs
add
or
pop
into
inc
jmp
andb
pop
imul
push
test
sub
int3
add
mov
sbb
call
dec
push
pop
cmp
add
push
push
sahf
stc
mov
in
inc
jmp
daa
mov
add
add
jp
test
std
insb
add
add
ljmp
jne
cltd
xor
cmp
test
pusha
stc
incl
pusha
divb
mov
adc
movl
mov
cli
or
mov
mov
addl
loope
add
lahf
pop
sub
fxch
mov
jmp
sahf
addb
aas
cmp
test
mov
dec
cmpsb
sahf
loope
push
lahf
negb
xchg
loope
add
add
add
mov
test
roll
mov
test
cli
cld
fs
call
mov
cs
pop
jmp
test
add
mov
lcall
pusha
add
and
jle
jns
das
clc
fs
push
pop
and
sti
adc
out
or
push
repnz
call
shrl
xchg
jp
test
cwtl
cli
mov
inc
out
lret
or
add
ret
subl
sbb
dec
insb
shlb
mov
cmp
xor
pop
punpckhbw
out
add
xor
out
dec
rolb
ror
dec
or
mov
addr16
push
rorl
inc
daa
rorb
mov
fwait
das
mov
add
xchg
or
add
dec
outsb
out
pop
add
sysenter
aam
mov
mov
hlt
jmp
ret
movl
insl
sbb
add
mov
aaa
pop
dec
shll
jb
sub
jmp
imul
cld
cld
stc
aam
leave
inc
jmp
out
add
call
insb
ret
filds
bound
subl
jge
mov
in
cli
cld
outsl
movl
add
jmp
jecxz
or
pop
stc
jmp
add
jmpw
sub
pop
cli
cld
stos
movb
imul
add
inc
or
add
ss
imul
mov
leave
test
cmp
sbb
inc
add
add
mov
xchg
idiv
outsb
orb
xchg
idiv
jle
inc
imul
or
ret
mov
loope
insb
test
mov
divl
test
sub
mov
mov
stc
push
stc
push
xchg
std
jae
rclb
xchg
loope
ljmp
wrmsr
pop
sub
pop
pop
push
and
outsb
add
sbb
lea
cmpl
sub
push
mov
std
xor
std
mov
lock
xchg
test
jmp
in
fwait
out
jge
stos
xchg
xchg
rolb
int3
sbb
push
mov
push
es
or
and
xchg
push
pop
aam
xchg
outsb
and
int3
frstor
dec
mov
xor
es
jl
adc
jecxz
sub
sbb
push
inc
inc
and
mov
pop
fdivrl
mov
jae
mov
lock
pushf
add
int3
call
hlt
aas
scas
pop
push
push
mov
adc
inc
cld
out
in
mov
sub
cmp
and
je
cs
xor
sahf
popa
add
and
add
scas
sarb
movsb
push
mov
fadds
imul
dec
fwait
add
jne
adc
add
js
pop
add
add
push
test
daa
insb
jl
adc
js
daa
mov
pop
mov
xchg
movsb
ficoms
sbb
das
mov
testl
das
jg
insl
rclb
rorb
mov
push
clc
or
int3
mov
add
enter
ret
add
jle
push
aad
and
mov
enter
enter
mov
jl
insb
notb
sbb
and
add
int3
add
mov
xor
inc
decl
inc
pop
aad
mov
sbb
push
repz
bound
add
dec
decl
inc
sub
cmp
jne
roll
dec
mov
sti
cmpsb
mov
add
add
lret
testb
jnp
pop
sub
push
subl
pusha
aas
add
std
mov
dec
gs
sbb
int
inc
add
ret
or
inc
je
dec
mov
inc
xor
sbb
gs
dec
fmul
add
and
pop
cmpsb
jge
loopne
shr
mov
push
ljmp
add
mov
jns
pushf
gs
call
scas
cmp
ljmp
gs
je
incl
pop
sub
push
fcmovnu
jmp
fists
fs
jae
xor
sarb
int
sub
jmp
hlt
jmp
ret
mov
adc
xor
mov
sbb
int
add
stc
cmp
add
jbe
jl
cmpsl
fidivrs
mov
mov
mov
jg
lret
out
push
or
add
int3
imull
cmp
repz
roll
std
dec
lock
push
stc
fs
xlat
insb
rcr
pop
adc
lods
adc
add
sbb
jne
sub
fs
ds
add
sub
sarb
push
test
jo
push
bound
inc
dec
or
out
test
pusha
mov
stc
insb
mov
sbb
push
test
sbb
cmp
shrb
lock
add
int
cmpl
push
push
push
sar
mov
push
stc
jns
add
int3
mov
icebp
int3
add
or
push
cs
test
cmp
xchg
push
push
mov
dec
lea
dec
lea
call
mov
jp
iret
aas
cmp
adc
push
test
inc
es
dec
sbb
int3
addl
sbb
xchg
add
adc
jg
add
add
mov
cmpl
loope
jle
push
js
xor
lcall
adc
std
call
dec
mov
arpl
pushl
lock
add
dec
jge
dec
add
gs
test
push
sbb
gs
gs
mov
sub
pop
adc
addl
stos
add
mov
add
add
cltd
pop
std
ljmp
mov
dec
dec
fs
cli
inc
jl
add
incl
int3
out
mov
int
add
dec
cld
sub
or
repnz
out
shlb
dec
mov
add
sarl
notl
inc
imul
int3
out
jns
mov
inc
lret
inc
add
out
je
out
add
dec
stos
clc
dec
pop
call
loopne
xchg
add
add
sub
pop
jmp
add
add
add
mov
movl
cmc
inc
dec
stc
sbbl
inc
sti
out
int3
xchg
les
jmp
adc
add
adc
or
dec
mov
mov
pop
call
add
or
xchg
xchg
ret
popf
dec
rclb
push
jge
lods
fmuls
imul
push
pop
push
xchg
add
add
pop
add
xor
xchg
push
outsb
or
stc
loop
aam
mov
push
mov
push
xchg
loop
xchg
push
xchg
push
mov
push
fcomi
add
stc
jp
jmp
les
lahf
push
pop
lods
lret
jns
fcom
mov
ret
push
stc
imul
shl
addl
jle
mov
aam
xor
jle
adc
sbb
test
push
xchg
add
push
cld
outsl
jns
call
test
xchg
arpl
arpl
add
push
das
sbb
pushl
out
xchg
sub
ja
push
shlb
sbb
and
mov
test
dec
jne
adc
filds
mov
in
int3
repnz
add
add
test
sbb
mov
mov
adc
mov
push
out
sub
pop
or
and
add
andb
push
cmpsl
cwtl
or
cwtl
cld
dec
mov
hlt
and
out
hlt
lahf
clc
ret
inc
dec
cmpsb
sub
dec
xchg
and
or
jo
and
into
adc
or
dec
xor
mov
outsb
sbb
push
in
imul
nop
push
lock
mov
fldt
lea
and
daa
and
xchg
and
outsb
mov
jecxz
xchg
add
out
push
cmpsl
cmp
and
push
add
jmp
mov
loope
inc
jb
out
sbb
out
adc
das
xor
pop
and
xor
sub
test
xor
add
push
jb
push
lret
ss
mov
je
loopne
and
mov
rolb
jbe
test
sub
mov
dec
mov
add
shrl
in
lahf
test
pushf
dec
xchg
mov
and
dec
mov
mov
adc
pop
int
jne
push
mov
or
orl
cmc
faddl
pop
int
fcoms
jns
sahf
push
bnd
bound
in
add
jl
sub
test
xor
pop
jae
push
jb
shr
pushf
jg
push
sub
sbb
loop
stos
dec
repz
int3
add
push
mov
mov
push
repz
iret
jae
push
fwait
loope
pop
ljmp
xor
movsl
add
xor
push
aaa
dec
repz
test
mov
test
push
lods
cmp
cli
lock
add
std
push
mov
jge
cld
loopne
inc
inc
add
mov
rolb
mov
iret
sti
pop
pop
mov
shlb
mov
clc
sbb
lea
mov
cmp
cltd
sub
add
dec
cli
cmp
jne
cmp
repz
int3
out
xor
outsb
inc
pop
adc
mov
inc
lock
add
repnz
jecxz
dec
mov
rcr
daa
add
fs
cli
popl
testl
mov
or
lret
cmp
sub
fs
stos
and
int
add
inc
push
mov
cmpsl
add
sar
je
dec
cwtl
sti
lcall
add
add
push
add
adc
and
mov
adc
inc
sahf
sub
pushf
push
pop
mov
cmp
ficomps
popf
test
int
xchg
xchg
inc
jmp
mov
jae
js
in
jbe
add
lret
mov
stc
jbe
xorl
add
add
mov
adc
and
lcall
add
cmp
pop
nop
je
bound
adc
and
pop
xor
idiv
lret
pop
mov
xchg
jb
mov
sbb
leave
cmc
adc
xchg
jge
mov
sbb
mov
je
roll
add
xchg
jge
add
mov
mov
sbb
sbb
stc
xlat
sub
popf
mov
xchg
pop
push
inc
ljmp
int
mov
xlat
or
or
inc
add
jb
jge
sbb
cld
xor
cli
push
inc
ror
test
or
shll
pop
xchg
mov
scas
cli
xor
ror
test
xchg
add
ret
cli
inc
ss
xchg
loop
cs
scas
inc
or
xchg
jno
xchg
push
add
call
adc
add
lds
jno
shlb
pop
clc
test
out
pop
push
int3
cmpsl
add
adc
add
fildl
xchg
mov
mov
nop
subb
out
or
or
inc
or
pop
ret
add
and
fistps
lds
inc
and
inc
jbe
out
mov
int3
stos
rclb
mov
sar
and
out
mov
mov
inc
add
xchg
mov
jle
mov
sub
mov
andl
inc
xchg
add
dec
shrb
je
cmpl
mov
call
aas
push
inc
dec
aas
into
test
orb
mov
jae
mov
orl
dec
repnz
jne
jge
insb
sub
or
stos
hlt
lret
mov
push
inc
je
test
add
das
mov
push
jb
shl
jne
sbb
call
in
push
jno
dec
mov
mov
stc
aam
divb
in
or
cmp
clc
ds
std
xor
out
push
notl
xchg
xchg
aas
jp
vpmaddwd
cmp
sbb
push
push
call
cmp
push
mov
adc
jb
in
sub
inc
xor
xor
xor
sbb
add
int3
sub
inc
cmp
inc
clc
mov
addl
mov
std
push
jnp
test
hlt
cmpsl
mov
add
ljmp
pop
stc
sub
xor
stos
or
cld
mov
std
cli
sub
add
rorb
and
lock
iret
cli
in
out
aas
add
ss
inc
and
push
add
dec
push
decl
sti
aad
adc
inc
pop
mov
dec
xor
dec
sub
pop
mov
or
mov
adc
aaa
add
call
mov
les
out
lcall
mov
addr16
mov
add
imul
push
in
filds
ja
shlb
mov
in
xor
ret
mov
out
mov
daa
add
fldenv
daa
int3
insb
inc
rcr
aas
pop
mov
flds
mov
inc
jmp
push
jg
clc
pop
out
sbb
inc
inc
sarb
aad
jbe
mov
add
add
int3
push
push
roll
in
push
roll
out
fmul
lea
lcall
cltd
jns
mov
cmp
push
cmp
daa
mov
pusha
mov
push
cmp
xor
inc
jmp
jno
add
fiadds
insb
cmpsb
test
cmp
cli
add
or
mov
aad
add
push
ljmp
or
stos
sbb
lret
sub
jb
arpl
xchg
adc
xlat
das
lcall
iret
rcrl
mov
adcl
or
idivb
loope
cli
aam
cmp
pop
pop
push
adc
rcll
push
ret
idiv
sbb
mov
subb
and
add
add
cmovo
add
lahf
add
call
or
or
pop
mov
lds
cli
lods
cs
subl
xchg
inc
std
jae
loope
inc
sbb
adc
sub
mov
mov
sub
mov
in
xchg
in
lods
cli
dec
das
adc
or
sar
or
mov
jae
nop
cmpsl
or
scas
adc
add
ljmp
es
add
dec
mov
add
push
lret
mov
xchg
pop
adc
hlt
call
ret
inc
dec
mov
sarl
data16
or
popf
add
cmpl
rcl
mov
pop
mov
dec
mov
pop
adc
ficoml
cwtl
or
movntq
adc
jl
push
add
jge
adc
add
pop
and
xor
xchg
lret
xchg
mov
nop
xor
clc
adc
cmp
lea
or
lea
rcl
stc
jg
je
xchg
pop
xlat
inc
cmp
test
stc
adc
dec
inc
int
adc
or
jo
add
add
mov
sub
adc
outsl
lds
repnz
and
mov
or
mov
mov
fsts
or
push
push
leave
add
test
jle
push
push
divb
fnsave
adc
adc
ss
rolb
add
add
out
pop
shl
pop
ret
dec
mov
jns
sbb
dec
jmp
or
je
adc
jbe
adc
xchg
push
ret
adc
in
jge
jp
pop
fisttpl
cmpsb
push
jns
jmp
shrb
fxch
adcb
cmc
mov
xlat
enter
sub
and
adc
push
sub
cmc
call
scas
inc
jae
sub
repz
jl
mov
subb
lahf
add
cwtl
push
sbb
cwtl
add
jbe
cld
sbb
adc
aaa
xorb
arpl
repz
mov
lea
adc
xor
jl
xchg
or
aaa
or
fldt
jl
call
scas
mov
cli
mov
add
add
ss
pushf
lods
ret
int3
mov
jl
les
add
outsb
or
jl
ret
call
ljmp
pushf
dec
add
dec
mov
insb
inc
or
test
int3
or
xchg
mov
mov
mov
inc
nop
lcall
jmp
add
or
jg
jecxz
add
cld
data16
add
movsb
pminub
leave
lret
pushf
int
push
aaa
mov
mov
add
fs
inc
mov
xchg
test
data16
loope
mov
clc
push
fildl
bound
mov
je
fisttpl
fnstenv
ja
push
aad
inc
hlt
cmp
das
add
sbb
cmp
loopne
stc
inc
aaa
mov
xor
rclb
or
cld
mov
jbe
inc
add
add
add
fwait
inc
inc
sbb
xchg
adc
gs
cmp
xor
sub
pop
sar
mov
orb
idiv
testb
fimuls
sbb
add
add
add
addb
cmp
and
jp
inc
or
ret
orl
xlat
fimull
lret
xor
pop
dec
in
cs
je
jno
adcb
push
jmp
mov
daa
fxch
dec
fcompl
push
push
add
call
mov
int
inc
and
cmp
add
add
pusha
icebp
push
pop
in
or
and
addl
cmp
or
clc
and
add
fdivp
add
out
add
cmpsb
cli
adc
xchg
stos
mov
hlt
test
jbe
mov
mov
scas
divb
test
in
decl
mov
in
ds
add
ja
or
or
push
sub
mov
popf
aas
push
pop
int
jg
jmp
ss
out
aas
loopne
xchg
das
lds
inc
sysexit
adc
enter
js
insb
mov
addr16
fwait
out
lcall
bswap
insb
inc
int3
stc
lret
frstor
add
das
out
add
imul
in
out
mov
mov
add
jecxz
out
es
dec
xchg
add
int3
mov
call
add
add
in
mov
sbb
shr
inc
and
add
out
sub
nop
out
xor
lret
add
add
imul
mov
shlb
in
push
adc
lret
add
out
sbb
out
and
xchg
out
sbb
outsl
out
adc
addl
add
add
and
sbb
push
pop
add
add
in
jecxz
stc
pop
fxch
jne
pop
scas
cltd
add
into
add
fstps
adc
sub
sbb
iret
inc
pop
dec
add
sar
imul
mov
and
je
jbe
dec
loopne
dec
cmpsl
add
imul
dec
pop
pusha
aas
daa
sub
loope
mov
sub
fld
cmc
xlat
sub
cli
ljmp
inc
inc
call
pop
push
sbb
push
add
lock
jl
adc
rdpmc
insb
jne
xor
cli
adc
std
jg
repz
sub
jl
cwtl
mov
mov
stc
xchg
mov
pop
cli
sbb
or
scas
mov
adc
and
pop
inc
sub
dec
mov
jnp
sbb
jns
ljmp
out
out
cli
pop
cli
mov
jp
lret
jmp
dec
and
std
add
idivb
out
add
daa
add
cmp
mov
and
data16
inc
mov
in
mov
jbe
enter
les
sti
xor
xchg
lock
popf
add
out
xchg
pushf
repz
hlt
pop
adc
jl
and
cmp
push
sbb
call
inc
pop
int3
sbb
or
lret
add
add
subb
jmp
mov
call
push
out
add
cld
scas
lds
inc
ret
or
and
add
lret
out
int3
das
stc
mov
and
sub
pushf
shlb
push
bound
xorl
cld
jge
pop
mov
adc
push
fdiv
sti
inc
das
push
xchg
add
add
add
hlt
add
cmpsb
inc
lock
daa
push
sub
faddp
insb
or
es
ljmp
mov
jo
add
jl
aaa
xor
lds
lcall
lea
cmp
dec
fimull
inc
fsts
push
aas
sbb
mov
xchg
cmp
lret
sub
je
sub
sbb
pop
das
cmp
sbb
cs
sldt
add
add
push
out
sbb
mov
sbb
popa
mov
adc
ljmp
dec
aam
lea
int3
push
decl
inc
add
out
aas
add
ja
lret
sbb
cs
aad
mov
mov
icebp
ljmp
mov
nop
ds
shlb
or
into
fists
or
inc
add
lods
cli
dec
call
jae
push
adc
test
ja
xchg
add
fmull
jb
add
mov
xchg
test
aas
add
mov
inc
dec
cmpsb
mov
sbb
push
mov
outsb
and
xor
pop
int3
push
scas
scas
scas
or
daa
mov
sbb
hlt
xchg
mov
xchg
add
fists
push
mov
jmp
out
addl
mov
lods
fidivl
aaa
add
int3
pop
jecxz
mov
add
call
cmp
cld
pop
adc
inc
sub
in
xchg
fildll
xchg
adc
and
add
and
add
xchg
sub
sahf
call
mov
add
add
push
aas
xchg
repnz
add
add
aad
mov
lret
add
les
mov
sub
mov
cltd
stc
std
pop
in
dec
subl
xor
dec
adc
jmp
pop
push
pop
or
pop
iret
xor
pop
sbbl
mov
add
add
add
xor
cmp
notl
aam
je
rcl
push
mov
cld
sar
lcall
mov
addl
dec
and
loop
mov
pop
aas
push
jb
and
pusha
rolb
cmovne
jecxz
push
stos
and
cld
out
pop
int
sbb
sbb
aad
dec
pushl
add
add
int
and
into
jae
add
jae
add
notl
push
pop
add
mov
fdivrs
or
xor
nop
inc
xor
dec
stc
adc
mov
cld
add
mov
xchg
xor
dec
int3
mov
push
mov
add
jne
mov
mov
or
sub
sbb
xor
cld
lds
mov
jge
xchg
mov
mov
sub
sbb
ljmp
testb
ret
out
js
call
and
js
call
bnd
dec
jo
and
repz
ljmp
aas
inc
mov
add
add
jecxz
xchg
lret
add
and
ret
inc
or
fsubr
jl
testb
outsl
xchg
lahf
or
jne
out
add
daa
cld
jnp
and
mov
add
inc
int3
test
xchg
pop
mov
dec
adc
in
popl
push
jecxz
xchg
add
lret
add
push
sub
aam
mov
decb
add
sbb
add
lret
add
movsl
call
into
sbb
dec
rclb
fildll
cld
push
inc
in
js
je
or
outsb
icebp
cli
adc
addr16
cld
subb
roll
imul
rolb
add
add
xor
dec
shll
jbe
pop
add
adcl
stc
adcb
sub
mov
repz
push
out
dec
mov
add
mov
mov
inc
and
add
push
mov
pandn
notl
push
or
sbb
jp
in
xor
inc
jmp
push
xor
add
add
xchg
and
fidivrl
xor
mov
and
xor
inc
or
dec
push
jg
dec
push
shlb
jns
xor
xor
into
lahf
add
xor
or
xor
jge
std
aaa
mov
add
xor
std
rsm
xor
mov
xor
inc
out
add
sub
inc
xor
and
leave
and
dec
adc
icebp
repnz
shrb
cmpsb
add
std
ss
or
out
push
in
push
iret
push
loop
mov
dec
adc
daa
lock
sub
inc
icebp
pop
add
mov
adc
xchg
daa
adc
out
mov
add
mov
cmpsl
add
cltd
mov
pop
add
add
test
push
cmc
lods
xor
pop
mov
cld
or
jo
lret
test
leave
jo
cld
push
hlt
aas
pop
nop
out
data16
add
data16
add
jo
or
mov
aaa
sbb
in
outsb
imul
sbb
mov
int3
jmp
cmp
stc
aam
mov
or
add
flds
pop
lods
mov
jns
jb
lods
inc
addl
icebp
xchg
subb
jmp
mov
mov
inc
xlat
xchg
aam
jp
stos
cmpl
xchg
xchg
aaa
and
inc
push
mov
adc
push
call
test
sbb
push
popf
or
add
jnp
movsb
xor
cmp
popf
pop
jle
sti
out
cmpsb
dec
testl
repnz
xor
add
int
iret
add
jle
notb
popl
push
roll
or
test
pushl
inc
mov
add
cmp
enter
add
lods
xor
add
adc
scas
xor
jmp
cmp
imul
std
lahf
pop
notb
or
repnz
cmp
dec
ja
adc
add
inc
cmp
aam
mov
lock
push
inc
inc
dec
push
jnp
xor
aad
sub
jge
and
lods
aas
adc
jns
or
dec
hlt
cs
psubusw
stc
in
sub
inc
add
add
int3
repnz
mov
jg
fisubl
mov
test
outsb
dec
and
mov
push
add
sbb
and
test
pop
jne
int3
insb
stc
adc
cmp
and
ret
jl
xor
sub
insb
repnz
stos
pop
jg
mov
add
lret
jo
rcrb
jne
rcl
cs
clc
adc
testb
in
movsl
xchg
outsl
push
fs
adc
int3
add
and
jmp
inc
int3
add
fsubs
out
add
add
inc
xor
dec
mov
push
cmc
xor
psubq
dec
stc
clc
pop
aas
pop
xor
aas
or
jb
mov
add
inc
int3
test
faddl
in
je
cmp
and
call
cmpsl
repz
mov
mov
scas
movlps
push
cmp
add
add
adc
push
test
fldt
fnstcw
jmp
lahf
xchg
add
lret
sbbl
mov
add
pop
outsl
add
mov
cwtl
lret
stc
incl
rclb
imul
xorl
je,pn
loop
and
imul
insl
sbb
lea
cmp
lcall
lret
lret
and
sub
add
xchg
jecxz
loop
or
or
adc
es
inc
into
xor
or
pop
outsb
and
out
or
add
xor
cmp
in
jno
lods
andl
inc
xchg
stos
sub
out
scas
repnz
repnz
lahf
jne
in
icebp
je
test
int3
insl
inc
add
inc
mov
or
mov
decb
add
adc
add
or
sub
xchg
add
das
lret
cld
out
testl
idivl
xchg
out
jmp
pop
mov
mov
push
lcall
push
fs
push
pop
pusha
daa
sbb
jge
leave
push
mov
pop
sbbl
hlt
adc
inc
add
mov
xor
jnp
sbb
mov
fnstcw
daa
xor
cmpsl
jo
mov
cwtl
stos
add
pop
aaa
add
int3
adcl
pusha
shl
and
out
sbb
mov
adc
add
push
subl
test
call
inc
int3
subl
int3
xorl
and
test
dec
jp
mov
push
inc
cmp
add
sbb
inc
mov
add
sbb
sbb
stc
es
and
sbb
jae
sbb
dec
lcall
stc
ljmp
xor
sbb
xchg
add
adc
or
popf
fmuls
bound
loope
call
clc
stc
sahf
pop
addl
add
add
pop
arpl
push
stc
dec
add
iret
adc
adc
mov
jecxz
mov
add
repz
je
lret
cmpl
add
cmp
inc
and
adc
sbb
jns
and
mov
cmp
out
test
sti
test
jae
add
sub
or
insl
cmp
push
and
movsl
sub
sbb
dec
dec
mov
sub
xor
sub
decl
or
ret
sbb
add
mov
sbb
popf
push
and
int3
pop
and
pop
add
jnp
and
lret
mov
lock
xchg
daa
hlt
in
jnp
inc
fwait
daa
add
jl
cmp
dec
daa
and
jnp
pop
int3
shll
popf
por
rol
or
test
pop
jne
int3
out
insb
lock
pop
pop
jns
pop
pop
inc
sbb
jo
cld
enter
int
jg
ljmp
in
insl
dec
fsub
sub
cmpsl
inc
mov
sub
dec
popf
fcomps
jl
shrl
adc
add
jge
add
int
jl
test
out
stc
aam
lret
xchg
mov
mov
test
xchg
lahf
and
mov
inc
pop
mov
lret
test
lock
aad
stc
dec
lds
push
js
lds
fs
aas
int3
test
add
out
std
out
xchg
movsb
dec
inc
or
sbb
test
stos
rcrb
pop
xchg
adc
xor
jnp
pop
inc
dec
les
sbb
push
loop
mov
add
add
pushl
adc
int
pop
xchg
pop
call
mov
mov
in
push
clc
add
dec
push
add
sub
arpl
dec
mov
cwtl
jl
rcrl
inc
or
popl
adc
xchg
add
orl
add
sub
stc
jg
dec
and
mov
jae
stos
dec
and
adc
sbb
inc
jge
or
jl
in
and
pop
into
stos
mov
add
jnp
dec
mov
test
push
jge
sub
push
cli
mov
lds
leave
loopne
or
fs
mov
sbb
ljmp
jge
outsl
pop
cli
mov
in
cmp
std
mov
repz
add
movsl
ror
jp
lock
mov
int
push
jns
rorb
daa
add
and
mov
and
jg
dec
push
mov
and
movsl
cmp
outsb
ja
mov
ljmp
jl
in
xchg
mov
aaa
jg
lock
fcomi
fs
pop
adc
fisubl
push
and
imul
lret
fidivl
fadds
jnp
lock
lret
shr
outsl
lods
inc
dec
or
add
or
lahf
popf
test
insl
adc
mov
pop
mov
cli
es
or
adc
aaa
xchg
adc
inc
mov
push
or
js
idivb
dec
jae
mov
xchg
dec
jae
push
andl
mov
in
add
pop
pushl
inc
rol
mov
mov
add
addb
and
add
push
mov
mov
or
and
rorl
pop
enter
dec
jae
imul
jmp
or
or
or
or
and
decl
loop
inc
icebp
cmp
shll
lcall
add
loope
inc
and
xchg
add
jno
and
ficomps
mov
js
jmp
das
pop
add
adc
jp
in
jnp
add
add
daa
jo
jp
and
aam
jo
inc
jle
cmp
sub
sub
hlt
enter
rcrb
inc
cmovo
sahf
inc
and
cmpsb
rorb
add
add
lods
pop
and
xor
push
das
cltd
sbb
jnp
fadd
add
jl
sbb
jp
fadd
jns
and
out
push
and
aas
je
jp
adc
icebp
add
sbb
test
fs
call
jne
cld
lret
push
push
jge
lret
rdtsc
inc
jmp
in
jns
ljmp
pop
jmp
add
repnz
inc
js,pn
or
ror
inc
push
cmpb
lods
or
pop
outsl
fdivl
call
pop
hlt
inc
cmpsb
testl
dec
adc
jae
pop
inc
sti
or
or
out
add
hlt
or
ljmp
in
inc
into
and
mov
mov
add
test
add
inc
cmp
jmp
inc
adc
mov
inc
xlat
bound
call
and
in
sub
add
or
add
enter
mov
adc
les
out
mov
sbb
decb
and
push
xor
aad
je
repz
loope
sbb
adcl
loop
cli
fxch
add
xchg
idivl
jmp
and
and
mov
dec
idiv
movsl
adc
cli
mov
addl
add
pop
int3
add
aas
xchg
adc
ljmp
jg
adc
stc
add
int3
add
mov
add
mov
push
or
lret
je
mov
and
loope
and
jbe
fdivrs
stc
fildll
stos
jp
ja
mov
test
incl
loope
add
inc
push
ret
rolb
std
incl
dec
insl
cli
cmpsb
mov
incl
mov
ja
dec
test
adc
and
add
push
pop
icebp
jb
fnstsw
clc
dec
repnz
inc
pusha
loope
adc
mov
int3
aad
aas
push
std
sarb
out
ret
sbb
fdivl
adc
out
or
add
sarl
mov
daa
add
cld
cwtl
idivb
mov
hlt
cmc
inc
add
in
popf
mov
lds
pop
and
add
mov
push
add
imull
outsb
xlat
mov
xchg
jp
mov
call
sub
cwtl
std
pop
clc
iret
imull
shr
outsl
clc
iret
outsl
cld
iret
iret
jo
inc
add
sub
test
add
in
js
xchg
inc
adc
jbe
clc
sbb
shll
push
call
mov
stos
aaa
cld
sahf
movsl
jb
stos
mov
in
sbb
pop
add
jmp
push
sbb
insl
ror
jmp
sarb
testb
xchg
dec
and
mov
test
iret
add
out
test
int3
add
ret
jge
xor
movl
sub
mov
mov
push
jg
and
jmp
pusha
xchg
cmp
pushf
jnp
fpatan
push
jmp
pop
mov
mov
mov
fistpl
jmp
or
add
push
imul
in
dec
push
pushl
out
inc
popf
or
push
scas
pop
cmp
xor
jnp
fdivp
setbe
mov
pop
repz
mov
add
hlt
sbb
addr16
insb
inc
pop
repz
mov
add
rcr
adc
jne
or
mov
lods
aas
add
aad
add
xchg
mov
in
lahf
add
ret
orb
and
jne
inc
add
or
jae
inc
add
inc
add
sub
movsl
and
stos
sub
bound
inc
add
add
add
inc
add
cld
cld
inc
add
sub
mov
push
and
js
je
bound
mov
addb
mov
mov
loop
lock
loope
push
pop
lea
sbb
and
adcb
adc
iret
movsb
xchg
call
sub
lret
mov
insl
mov
sbb
es
add
add
int3
lret
test
mov
inc
or
rcl
rcr
cmpsb
mov
add
or
inc
add
outsb
sub
add
scas
adc
dec
aad
aas
dec
repnz
cmp
jae
and
sub
aam
mov
mov
test
sbb
out
out
and
add
int
mov
add
jne,pn
pop
and
rolb
adc
clc
dec
pop
jge
enter
call
jae
push
aad
incl
jae
je
or
add
sbb
add
cld
xchg
add
fldenv
sar
aaa
test
xorl
int3
call
add
adc
adc
insb
pop
in
push
outsl
pop
sub
call
push
mov
insb
adc
mov
add
add
test
lea
jle
pop
fincstp
jne
push
dec
or
adc
imul
sti
mov
call
push
pop
hlt
adc
add
push
in
push
clc
lds
fsubr
dec
push
mov
notl
sbb
je
and
idiv
repnz
testb
incl
daa
add
add
imul
fyl2xp1
add
sbb
aas
add
jae
jle
call
repz
repnz
repnz
pop
mov
mov
addl
dec
push
or
test
push
testl
fdivs
stc
sbb
call
in
cmc
cld
pushl
cmc
in
jmp
mov
inc
pushf
in
stc
cmc
clc
out
aas
add
jo
jae
int3
mov
inc
add
aas
lret
ret
mov
push
andl
dec
fwait
cltd
ss
push
xor
loope
repnz
lret
mov
adc
add
pop
repnz
movsb
fbstp
pop
aam
adc
adc
repnz
adc
popf
sub
jg
lret
movb
add
int3
stos
clc
add
or
and
clc
xor
jnp
inc
add
test
repz
jmp
inc
aam
ss
jp
dec
pop
cmpsb
push
test
or
push
in
cwtl
hlt
cwtl
mov
add
xor
fs
ret
lret
subl
push
xchg
jmp
daa
fwait
dec
lcall
add
add
add
add
lds
insb
mov
push
push
sub
xchg
inc
aaa
js
and
dec
xor
xor
stc
jb
dec
repnz
aam
jae
jge
bound
push
popf
clc
jmp
shlb
pushl
inc
pop
dec
shlb
test
movsb
sub
xlat
cmovs
fdivp
adc
movsb
pcmpeqb
add
leave
imul
jecxz
test
add
sbb
adc
pushf
sti
mov
clc
sbb
push
call
adc
arpl
leave
stos
mov
pop
cld
fnstenv
dec
jmp
sti
cmp
and
je
add
or
inc
repz
in
xchg
out
aas
add
je
outsl
dec
cld
ror
push
ja
jae
loope
movl
inc
jno
cld
add
jb
dec
mov
in
test
xor
inc
add
push
mov
or
les
sub
aas
add
or
sub
and
and
push
jo
mov
or
leave
push
mov
cld
push
sub
cld
cld
lret
cmp
push
dec
lcall
cltd
xlat
lret
insb
les
shlb
sti
cmc
in
pop
inc
sbb
mov
hlt
cmpsl
fucomip
mov
dec
push
sbb
outsb
adc
frstor
push
in
sub
and
ret
leave
mov
and
call
jnp
repz
fdivs
in
inc
add
xchg
iret
mov
add
inc
popf
dec
and
pop
add
add
movsl
mov
shlb
add
jbe
cld
xchg
xor
stc
adc
hlt
sbb
test
lock
pop
xor
add
lahf
dec
mov
add
or
push
push
test
jbe
test
add
ret
ret
cs
jmp
add
add
jo
cmpsl
adc
cmp
shlb
inc
inc
add
pop
sub
jmp
sbbl
push
push
xchg
and
call
and
notl
mov
xor
inc
data16
sub
mov
cmp
fimull
or
lods
loope
push
mov
and
imul
add
and
mov
pushl
mov
add
dec
push
xchg
mov
push
ret
pop
enter
mov
push
inc
fxch
add
xlat
notl
repz
dec
sbb
je
push
mov
and
fdivs
xlat
rorb
into
and
clc
or
jmp
add
push
in
adc
mov
or
jmp
jge
out
cld
jae
rorl
pop
pop
push
shl
cmp
pop
add
pop
repnz
gs
std
push
nopl
shl
les
les
add
mov
jecxz
pop
int3
ficoml
lcall
decb
jmp
mov
test
in
rclb
call
add
je
test
jns
rcrb
add
dec
arpl
imul
mov
fs
incl
aam
out
shl
outsl
cmp
rclb
push
cmc
push
insb
je
call
in
add
out
test
call
xor
cs
and
lcall
add
mov
stc
and
mov
jb
repz
jae
add
test
add
mov
clc
sahf
rcll
pop
mov
fisubrl
cmpsl
clc
jbe
lcall
ret
lret
push
push
imul
pop
adc
add
insl
cltd
lret
add
mov
mov
add
adc
loop
sti
push
mov
mov
ss
add
roll
leavew
add
pop
dec
mov
ficoms
push
push
insb
jge
cli
scas
pop
push
push
mov
mov
jle
les
sub
idivl
jo
add
adc
int3
movsl
fld
notl
xor
cli
add
outsl
inc
add
push
imul
or
sbb
test
mov
add
insb
nop
cli
ficoms
test
add
inc
sub
incl
repz
out
sar
out
mov
jne
sti
fistps
aam
shrb
lods
repnz
incl
cmp
push
imul
mov
add
addr16
out
repnz
incl
insl
in
addr16
lds
add
jae
dec
adc
inc
cld
pop
mov
add
int3
mov
test
out
inc
dec
test
mov
cld
push
je
insb
ds
fs
in
in
mov
sti
push
push
xchg
outsb
push
aam
cmpsl
or
add
push
std
inc
jns
add
int3
daa
push
push
pushf
pop
xor
mov
roll
sti
mov
rolb
inc
je
pop
ret
pop
nop
or
imul
ret
out
add
dec
pop
sti
cmp
add
jmp
add
add
and
rolb
jo
enter
push
in
push
add
jp
add
test
mov
clc
mov
sarb
xchg
add
push
push
add
add
in
mov
cmp
fwait
push
xchg
xchg
adc
jle
in
call
push
hlt
clc
das
add
inc
mov
add
aad
mov
add
scas
mov
or
popf
sub
mov
call
xchg
mov
test
mov
idiv
push
or
xchg
stos
rol
int
mov
dec
in
sbb
int
xor
add
idiv
xor
test
adc
test
adc
call
test
inc
push
jp
fadds
sbb
dec
xor
add
sarb
xor
mov
hlt
gs
adc
adc
sahf
jnp
inc
dec
jo
fcom
jl
push
loop
lret
icebp
stc
punpckhbw
or
mov
jne
xor
push
mov
jecxz
decl
sbb
inc
lods
push
idivb
xor
cmp
push
mov
test
add
jecxz
dec
mov
cmp
hlt
outsl
lods
je
add
data16
sti
outsl
addl
jle
scas
dec
les
dec
sarl
inc
mov
pop
adc
push
pushf
inc
lcall
int3
out
jnp
lret
repz
popf
xor
imull
sbb
arpl
je
fs
add
pusha
push
and
iret
cmp
rolb
jno
mov
inc
dec
iret
test
mov
push
mov
add
mov
add
out
jl
inc
add
add
in
lret
ret
fdivr
pop
test
adc
in
dec
dec
cmc
mov
std
lret
add
sbb
cld
lret
inc
mov
add
xchg
push
jb
xchg
mov
std
sub
push
mov
xchg
ss
testl
pop
add
pop
insl
hlt
clc
jb
dec
repnz
fdivr
call
lods
dec
je
mov
mov
test
add
mov
pop
icebp
clc
pop
scas
and
adc
or
nop
movsl
out
dec
rorb
in
add
pop
dec
dec
and
adc
shrb
roll
lret
cmc
repz
test
testl
jl
call
or
test
add
pop
mov
adc
pop
sahf
fidivs
test
movsb
adc
xchg
mov
in
outsb
pop
or
sub
test
testl
outsb
idivl
jecxz
decl
jge
cli
outsl
jp
andl
clc
aam
in
push
mov
pop
test
fwait
xchg
mov
lret
test
mov
lret
daa
and
repnz
lcall
stc
mull
je
push
xchg
cmpsl
fsubp
ja
jge
push
sub
sahf
sub
add
mov
outsl
mov
fs
movsl
call
test
adc
push
jg
mov
jb
test
out
or
insb
dec
or
out
or
int3
push
mov
rolb
daa
cld
inc
stos
daa
adc
dec
pop
hlt
out
xor
and
test
psllq
adc
lock
adc
subl
add
daa
or
daa
clc
jecxz
insb
push
stc
inc
and
cmp
xlat
mov
jge
test
add
add
lret
js
aad
andb
push
call
bound
test
arpl
andl
int3
test
out
stos
call
shlb
add
cmp
lret
sub
orb
xor
push
mov
aam
movsl
push
mov
sbb
jmp
inc
test
cmp
jecxz
or
subl
into
add
mov
insl
adc
or
repz
or
mov
rorb
pop
add
add
shll
dec
push
jae
call
fisttpll
pop
test
into
add
stos
orl
dec
div
jne
mov
push
xor
mov
jmp
shlb
xor
push
adc
push
push
test
bound
adc
jmp
jb
je
je
and
movl
cmpsb
jns
and
cmp
add
mov
test
inc
push
add
insl
lods
mov
in
jge
and
jecxz
roll
cmp
add
and
xor
stc
pop
outsb
mul
fadd
stc
jnp
fcompl
xchg
movl
das
mov
sbb
arpl
pop
cmc
mov
pop
inc
idiv
push
jnp
sub
push
xor
jp
sub
add
adc
push
adc
jae
int3
outsb
rorb
add
push
stc
mov
shlb
jo
hlt
jecxz
bound
stc
xor
test
je
hlt
lcall
sarb
orb
xchg
xor
fistps
xchg
jg
dec
lock
jge
inc
sub
push
push
enter
aad
and
xlat
popf
test
mov
xchg
xor
jbe
jbe
hlt
arpl
hlt
in
repz
out
imul
enter
addb
push
hlt
and
jno
aad
jo
aad
push
cmp
cmp
clc
jb
out
test
dec
aad
xchg
hlt
jb
sti
lcall
insb
hlt
jb
dec
outsb
sti
jle
inc
fsubs
loopne
or
in
clc
jae
cltd
sub
dec
in
push
fmull
fimuls
cwtl
test
hlt
jb
sahf
aad
addr16
stc
orb
jnp,pt
fs
hlt
jb
out
mov
push
push
les
pop
icebp
cmc
dec
jno
hlt
arpl
call
pop
pushl
pop
pusha
or
add
jb
or
jae
lock
add
push
push
add
add
repnz
icebp
pop
and
adc
xor
in
add
outsl
pop
fmull
std
fiadds
popf
inc
sub
lock
and
pop
lret
push
ret
test
rcr
fisubrs
je
mov
enter
mov
mov
enter
dec
sbb
dec
stc
push
jge
out
cmp
mov
sbb
stc
scas
imul
cmp
jg
incl
mov
push
xlat
jns
call
xor
push
std
enter
push
dec
add
push
dec
cli
gs
cltd
add
jb
in
xrstors
out
stc
pop
jo
push
loop
sub
lret
add
test
xor
inc
fwait
pop
mov
cld
fwait
je
and
xchg
js
mov
in
les
imul
enter
mov
xor
loopne
mov
sub
mov
repnz
rorl
arpl
mov
addb
mov
inc
scas
fistpl
jo
test
pop
or
add
es
inc
pop
les
adc
hlt
inc
add
js
cmp
call
inc
ucomiss
stc
cld
inc
jmp
idivl
push
xor
js
jmp
inc
int3
cmp
add
add
xchg
pop
push
out
bound
shl
das
inc
jmp
xchg
callw
repnz
or
bound
jae
add
test
jle
pop
sbb
mov
mov
inc
outsb
aaa
adc
ljmp
arpl
and
pop
out
pop
repz
inc
hlt
idiv
jb
out
rorl
jb
pop
data16
add
pop
jecxz
pop
adc
mov
lea
dec
ljmp
add
add
xchg
and
and
and
cmpsb
ret
call
dec
cmp
xchg
dec
je
push
call
rolb
sbbb
into
add
xor
add
sbb
cmc
cld
test
push
adc
inc
nop
jno
pop
or
loope
push
and
rolb
incl
fisttps
inc
and
outsl
mov
in
pop
or
mov
push
and
pop
dec
and
cli
in
mov
sub
add
xor
mov
repz
jns
std
incl
loop
lock
push
dec
out
adc
and
aas
int3
insl
dec
fcompl
enterw
add
int3
xchg
push
add
jmp
lret
sbb
sub
ja
adc
bound
and
mov
fbstp
mov
mov
xor
testl
in
inc
sti
neg
sub
aaa
jge
push
std
or
push
cmpsb
int3
xchg
mov
xchg
aaa
lahf
push
xor
sti
subl
add
test
push
in
push
push
call
adc
add
scas
and
data16
sub
add
add
mov
pusha
aas
mov
pop
inc
mov
lcall
adc
clc
iret
jge
adc
les
in
inc
popf
add
push
dec
loope
stos
sahf
scas
add
push
mov
sub
push
add
xchg
dec
push
inc
and
pop
inc
and
xor
lea
call
movsb
vmread
test
pop
out
sbb
pop
dec
idiv
push
cmp
je
lods
lds
stc
rorl
es
icebp
push
dec
push
push
and
push
lret
das
adc
add
cmp
dec
mov
sub
jmp
mov
andl
adc
add
call
out
mov
jge
clc
jl
add
add
stc
or
add
cwtl
dec
stc
in
xor
inc
add
xchg
jno
or
insb
add
push
shlb
add
or
mov
dec
stc
in
adc
dec
xchg
jb
or
inc
mov
push
lods
sbb
mov
mov
test
mov
jb
les
jmp
leave
cmp
mov
pop
outsb
jo
decb
out
les
dec
or
mov
in
out
add
push
mov
sti
mov
aam
ret
lahf
lock
insl
lock
nop
xor
mov
jg
repz
jnp
cld
jnp
add
and
leave
push
testl
test
iret
lret
rorl
push
add
mov
cwtl
roll
adc
aam
pop
inc
orl
call
add
xchg
test
xchg
pushf
outsb
fnstenv
adc
or
aaa
ret
out
das
divl
dec
mov
iret
enter
pop
adc
xchg
test
jecxz
jmp
lods
jmp
or
xchg
jmp
cld
decb
int3
push
bound
in
mov
int3
add
ja
or
fildl
add
pushf
add
sbb
insb
jg
into
inc
mov
jmp
pop
stc
ljmp
add
sbb
push
push
mov
jnp
push
dec
rorb
stc
lcall
mov
mov
xorb
fs
pop
iret
jnp
in
rorb
hlt
stc
fsts
decb
stc
jmp
mov
push
add
call
test
test
add
push
cmp
mov
xor
cmp
jnp
andl
xorl
jge
jmp
ss
addb
push
mov
popa
mov
jl
mov
sub
add
jo
jmp
hlt
jl
pop
hlt
add
lcall
jne
leave
push
mov
mov
test
mov
out
mov
lret
xlat
rolb
mov
mov
sub
mov
add
cld
test
jbe
fs
dec
in
gs
inc
in
pop
pop
push
in
push
pop
and
fmull
out
sbb
int3
out
sarb
or
int3
jg
shl
subl
add
inc
dec
add
int3
mov
mov
sarb
add
outsb
or
pusha
xchg
mul
out
inc
and
mov
push
repz
mov
das
pop
push
xchg
or
sar
in
test
loopne
jmp
pop
loop
pop
xchg
dec
loop
jb
repz
pusha
add
mov
clc
sahf
stos
push
xchg
cwtl
inc
rclb
hlt
lahf
inc
ret
lret
test
loopne
jmp
out
test
mov
inc
push
or
aas
call
push
hlt
push
leave
mov
push
add
ss
in
push
in
add
xchg
bound
xchg
lret
call
mov
xor
test
divl
mov
jg
scas
push
push
test
decb
pop
push
inc
add
mov
or
sar
sahf
pop
or
mov
dec
and
xor
sbb
pop
sub
pop
push
fstpl
int3
add
add
xor
add
push
xor
lret
addl
xor
add
push
push
mov
add
add
adc
push
add
cld
cld
jae
das
jle
add
xor
dec
psubsb
xor
add
add
test
cmpl
inc
data16
stc
sub
adc
mov
test
or
test
mov
sbb
add
subps
mov
push
test
mov
not
xor
add
cmc
add
sub
punpckhbw
call
jge
sub
jnp
test
pop
int3
call
pop
sub
mov
pop
inc
lock
push
jbe
ficoml
add
or
loopne
hlt
nop
pop
cltd
fnstsw
xchg
je
and
pop
test
mov
cmpsl
fcomi
dec
push
scas
lods
add
pop
xchg
mov
fsubl
int3
jle
xor
scas
outsb
inc
add
dec
rcr
mov
inc
bound
fisttpll
lret
fcomi
test
mov
hlt
jno
clc
fadd
cmp
add
data16
in
mov
in
jle
sub
xchg
into
mov
inc
dec
jmp
add
add
insb
xchg
adc
dec
inc
lret
push
stc
stc
into
js
pop
daa
xlat
jbe
movsl
lcall
sbb
mov
test
lock
inc
loope
push
inc
test
ret
lret
push
adc
fsubl
leave
push
dec
or
dec
loop
call
daa
mov
add
and
jnp
or
inc
jae
push
inc
fadds
insl
sti
xor
movsb
iret
dec
call
add
pushl
pop
jnp
test
inc
mov
xorl
out
jne
pop
out
jmp
push
mov
pushl
adc
sub
adc
jmp
movsbl
jge
test
and
add
and
mov
es
mov
xor
sub
incb
cmpb
sub
add
in
push
jnp
loope
jnp
std
mov
mov
jl
and
add
repnz
mov
add
xor
in
sub
inc
scas
xor
gs
add
in
rorb
jle
call
jne
and
jae
idivb
mov
test
adc
add
add
jns
sbb
test
daa
insl
mov
fidivrs
sbb
dec
daa
sti
dec
in
or
fsts
add
sub
and
outsb
shr
insl
mov
push
daa
cmp
inc
sbb
callw
popf
daa
sahf
scas
inc
sub
jns
lds
cmp
movsb
jnp
add
sbbl
sarl
aas
or
jle
ret
xlat
push
pushf
fildl
mov
or
cmc
jl
fwait
xchg
ret
orb
arpl
popa
lret
fwait
rolb
ljmp
pusha
pop
push
mov
jb
xchg
test
mov
cltd
xchg
push
rcl
dec
lret
jle
negb
pop
xchg
stos
sbb
jmp
aas
fadds
pop
add
in
add
int
shrb
add
add
add
mov
adcl
push
stc
jg
or
or
int3
jl
jb
cmpsb
repnz
in
mov
insb
inc
pop
add
nop
pop
or
sar
mov
pop
pushl
mov
pushf
andb
cwtl
and
mov
cli
lcall
push
lock
sahf
adc
mov
pop
inc
and
dec
cmp
add
les
cmc
add
divl
test
divl
adc
pop
ret
call
adc
jecxz
and
je
push
lret
add
or
adc
or
mov
and
pop
flds
add
xchg
mov
cmp
dec
test
repz
sub
mov
jg
add
les
in
xchg
push
add
cld
test
outsl
mov
cmp
jae
int3
xor
sbb
test
sub
push
push
imul
jl
fcomi
inc
rep
add
inc
faddl
stos
je
cld
jne
xor
call
jnp
xchg
pop
test
and
mov
push
push
mov
mov
add
push
adc
add
dec
insb
scas
mov
shll
jns
mov
pop
mov
fucomp
sbb
add
cmp
inc
mov
repnz
dec
adc
aaa
aas
dec
xor
add
cmp
add
xor
lcall
jns
repnz
roll
les
xchg
push
in
call
add
aaa
add
cltd
add
movb
add
add
add
xchg
pop
or
fs
add
fs
pusha
std
scas
add
jb
fldl
xchg
dec
cmpsl
mov
add
subb
rcrb
push
adc
dec
repnz
pushf
dec
int
adc
scas
inc
int3
or
inc
mov
bound
into
jl
push
icebp
out
addl
js
mov
rcrb
inc
jbe
sarl
add
adcb
sarb
cmp
add
jge
and
xor
out
int
push
mov
sbb
sar
add
xchg
les
lahf
mov
or
test
pushf
add
test
cmp
addl
jb
adc
bound
add
push
je
js
call
and
push
dec
xor
sub
sbb
shrb
push
test
or
sub
jge
and
insb
ljmp
mov
add
push
shlb
loop
inc
loope
test
or
dec
add
sub
dec
push
pop
pop
movsl
stc
xchg
insl
lods
leave
lret
xor
andl
mov
jl
cmp
jg
push
jmp
fyl2xp1
jns
cltd
js
inc
pop
stos
fbld
ljmp
rcrb
xchg
cmp
mov
sti
push
xchg
fisubrl
mov
out
in
add
jmp
pop
mulb
inc
add
das
dec
inc
in
clc
lret
ret
cmp
sti
mov
mov
push
out
in
push
push
fcmovnb
pslld
das
incb
or
mov
fdivrl
mulb
shrb
dec
stos
xchg
jle
mov
into
lods
xor
cli
jge
fidivrl
pop
out
jnp
mov
add
inc
push
add
cld
mov
dec
into
pop
add
add
sar
bound
les
clc
leave
or
pop
int
cmpb
cmpsl
adc
roll
imull
adc
nop
lahf
or
xchg
in
loop
dec
daa
push
rolb
cmp
ja
cmp
leave
jge
incb
cmp
lods
insl
xchg
dec
andb
or
mov
push
bound
mov
mov
call
adc
jge
pop
xchg
ret
adc
dec
test
adc
push
call
mov
cld
andl
rorb
mov
mov
push
not
testl
add
dec
add
dec
jge
aam
jge
aam
jns
ds
jg
leave
add
or
shlb
inc
add
mov
xor
jmp
dec
std
add
mov
mov
inc
or
mov
je
ror
bound
mov
add
mov
add
add
clc
mov
int3
push
stc
lods
rclb
das
mov
xchg
add
dec
mov
in
jnp
clc
mov
fsts
imul
or
cmp
test
or
jbe,pn
jnp
jnp
sbb
testl
cmpsl
aaa
out
add
fcomip
jne
mov
into
icebp
jp
dec
icebp
sub
adc
add
add
and
mov
push
test
call
cmpsb
dec
into
sub
decb
mov
js
xchg
pop
aaa
fdivrl
jns
mov
xlat
jg
push
mov
mov
rcr
and
dec
test
aas
sbb
int
jp
dec
cmp
add
add
roll
or
or
cmpsb
insb
pop
or
cmp
sub
addl
andb
mov
scas
leave
jno
cmp
or
insb
int
mov
jnp
divb
test
insb
ja
push
jno
lret
add
cmp
jmp
sti
jns
cs
sar
jb
dec
repnz
dec
in
adc
xchg
add
dec
repnz
sarb
push
daa
idivl
shlb
insl
in
or
xor
test
call
mov
or
in
sbb
out
es
or
adc
adc
testl
fs
jl
sub
movsb
and
xchg
outsb
jge
or
sbbl
inc
addr16
cs
or
xor
xchg
push
mov
subl
dec
and
lods
jns
sbb
outsl
inc
and
push
stc
dec
rorl
dec
add
and
xor
aaa
cmp
test
pop
lahf
rcrb
jnp
fdivs
jns
fadds
subl
call
jnp
call
add
imul
adc
jne
ja
mov
jge
nop
or
sbb
pop
add
mov
jmp
test
fld1
sbb
jae
and
int3
jmp
add
inc
testl
fnstenv
daa
idivl
sti
xor
adc
pop
inc
cwtl
nop
imul
add
add
inc
mov
xchg
inc
data16
pop
shrl
cmovno
dec
sub
inc
out
pop
push
push
call
jl
jmp
aas
divl
fnstsw
dec
in
jb
out
inc
push
add
mov
push
lock
notl
scas
mov
push
int3
add
addl
out
add
add
add
cmc
fiadds
dec
mov
les
add
xchg
add
cmp
push
add
add
add
pop
insb
repz
add
dec
or
sub
int3
mov
shr
inc
jne
inc
leave
insl
cli
cltd
leave
add
dec
cld
out
daa
mov
mov
inc
add
addb
jo
add
add
adc
add
nop
xorb
repz
push
or
push
cmp
je
mov
cmp
sbb
cld
jge
add
sub
push
push
shll
inc
and
push
mov
and
adc
add
jge
cmc
mov
sub
decb
or
add
add
int3
sbb
and
out
test
jge
add
test
or
mov
scas
add
mov
jl
sar
lret
cmp
mov
inc
push
mov
adc
dec
sbb
push
cltd
hlt
test
and
mov
mov
mov
loop
cmp
sub
sub
cmp
add
mov
inc
sbb
stos
or
leave
jmp
jns
or
movhps
lahf
sub
ret
lret
bound
in
push
aaa
jge
notl
add
pop
and
xor
aad
sub
aad
and
iret
push
or
fldl
mov
push
cld
jmp
push
hlt
aam
pop
add
fcoms
fistpl
dec
int
jnp
test
mov
inc
add
clc
inc
jg
jo
add
fimuls
out
add
adc
adc
and
jo
clc
push
add
adc
mov
clc
cmpsb
cmc
push
bnd
xlat
jge
mul
notl
push
ret
clc
fs
cmp
mov
cmp
or
push
add
push
dec
loope
and
push
inc
sbb
jg,pt
insl
push
push
lds
dec
adcl
sbb
jmp
popf
jmp
gs
sarl
int3
add
xchg
jp
js
sbb
into
jne
stc
add
adc
lcall
enter
cmc
jmp
add
notl
bound
incl
add
jge
mov
mov
add
mov
push
inc
mov
stc
je
mov
push
dec
add
inc
cltd
lret
insb
and
dec
mov
inc
sbb
jnp
outsb
insl
and
mov
and
mov
add
push
add
add
add
stos
push
ljmp
out
push
xorl
or
das
test
test
jne
mov
pop
mov
add
or
les
stc
test
cmp
push
mov
inc
clc
test
cmp
int
std
inc
mov
or
pop
xor
adc
rorb
or
ss
push
test
rdtsc
rorb
add
cwtl
cmpsb
in
clc
xchg
ds
mov
inc
cld
add
pop
cmp
stos
or
sbb
xor
lret
push
add
das
mov
lahf
cmp
pop
les
shlb
or
and
inc
add
and
stos
xchg
lods
or
dec
jle
push
push
push
loopne
sbb
les
jmp
iret
push
sahf
fcomip
mov
lahf
add
ret
or
add
int3
bound
out
stos
ffreep
pop
fwait
test
fcmovnb
cmpsl
ljmpw
call
push
add
pop
ret
cmp
cmp
bound
call
or
test
add
aas
loope
xchg
push
xchg
pop
clc
sahf
lahf
mov
xchg
sbb
jae
rorl
add
mov
xchg
aad
add
adc
push
add
rolb
mov
inc
inc
in
ror
or
jle
or
mov
mov
add
ret
pop
mov
add
pop
popa
dec
shlb
call
inc
lret
adc
pop
pop
fimull
ja
add
add
int3
or
push
fdiv
push
call
xchg
push
test
out
inc
mov
jl
mov
call
rorl
push
dec
sarl
xor
incb
sub
add
jg
dec
cmpsl
outsl
adc
adc
rolb
add
rorb
mov
cltd
add
add
outsb
arpl
cmp
add
into
mov
orb
inc
in
std
incl
mov
cltd
push
jb
test
das
xchg
je
push
pop
mov
test
jge
or
icebp
loopne
sub
push
mov
std
fdivs
les
sub
test
mov
mov
mov
in
scas
mov
xchg
add
mov
xor
pusha
stos
fwait
int3
jmp
cwtl
jge
out
mov
jmp
dec
imul
sub
add
int3
stos
or
sbb
inc
call
clc
and
xchg
shl
push
add
lea
aad
push
or
mov
mov
dec
jo
jl
ljmp
add
mov
pop
int
xor
aaa
jmp
lds
add
int3
ss
outsl
fildl
test
daa
insb
add
add
dec
mov
outsb
fidivrl
sub
inc
sub
int3
push
out
jo
adc
add
outsl
icebp
mov
jmp
push
dec
shll
mov
shlb
or
add
or
inc
ja
mov
loopne
pop
jo
rolb
ds
enter
push
test
rol
imul
add
dec
mov
jg
leave
dec
in
je
push
je
out
sbb
test
and
int3
sbb
dec
out
stc
je
popf
stc
adc
loop
test
in
mov
jge
xor
incl
ss
stc
adc
mov
pop
pop
adc
push
ret
push
mov
inc
adc
jle
or
sbb
lret
call
bound
inc
add
lods
nop
std
ss
dec
add
out
negb
sahf
jb
pop
test
cmp
add
int3
je
or
add
sarl
add
sub
add
fcoms
jp
fmuls
jnp
ja
aam
fcoml
sbb
ss
cmpsb
or
shlb
add
insb
adc
repz
pop
lret
jo
add
loopne
test
mov
adc
mov
xor
insl
test
or
popf
sub
paddb
sub
mov
add
add
dec
sahf
add
lret
pop
ret
adc
push
push
lock
xor
mov
jae
add
out
test
xchg
mov
mov
fistps
std
inc
test
or
ret
push
test
fiaddl
roll
xchg
sbb
xor
in
xchg
pminsw
inc
aam
mov
add
mov
add
add
or
arpl
arpl
hlt
rol
add
or
shr
dec
cmp
jmp
cmp
mov
xchg
jb
call
sub
mov
ds
das
or
andl
xchg
xchg
or
popa
bound
pop
jae
mov
test
add
sub
ret
add
jmp
arpl
adc
mov
lea
adc
jg
add
call
pusha
je
outsb
lds
fdecstp
stc
adc
mov
inc
cltd
adc
and
sub
add
rol
add
out
test
in
add
or
mov
add
or
adc
sub
pop
in
clc
lcall
int
sub
add
mov
jbe
sbb
xor
in
push
dec
sahf
sub
mov
push
add
test
lret
sti
call
bound
clc
mov
adc
jge
add
stc
ret
and
int
stos
cmp
data16
adc
roll
add
mov
ficoms
mov
jmp
push
mov
xchg
sub
mov
sub
test
cs
push
rcl
jle
lret
sahf
nop
orl
add
adc
sbb
dec
sbb
jge
andb
int3
jmp
add
nop
int
mov
add
jmp
fwait
mov
aas
nop
jo
sub
int3
lods
jmp
inc
sti
or
lcall
fildl
nop
orl
mov
sub
pop
mov
add
jmp
fwait
mov
jo
stos
cmp
sbb
rorl
nop
rolb
mov
add
daa
add
jbe
mov
push
xchg
sbb
jge
aam
jb
mov
test
sbb
add
push
add
add
rclb
mov
sbb
dec
mov
pop
repnz
mov
mov
add
mov
sbb
clc
ret
idiv
pop
fiaddl
add
sbb
xor
mov
add
jb
pop
idivl
or
add
cmp
mov
push
push
in
adc
push
push
jb
cli
adc
or
inc
imul
pop
inc
jp
ret
and
out
mov
add
jbe
movsl
cli
push
mov
std
jge
adc
mov
loop
adc
imul
fiaddl
pop
leave
and
mov
or
and
add
add
dec
mov
mov
add
add
jns
cld
repnz
cmp
out
sbb
mov
mov
and
and
enter
mov
sub
cmp
jle
std
incl
mov
test
push
cmpsb
jns
lock
in
and
add
hlt
or
add
add
mov
rcll
dec
jmp
add
add
int3
xor
add
int3
repnz
jns
out
out
sarb
xor
add
sub
outsl
cli
mov
xchg
cmp
cmp
xchg
cmp
add
cmp
fwait
add
out
cmp
fdivl
test
ljmp
movsb
and
add
push
mov
jmp
js
daa
jae
loopne
andb
dec
add
jmp
push
cmp
test
ja
mov
arpl
out
push
out
jmp
add
hlt
jl
icebp
ljmp
add
aas
add
add
jge
add
insb
adc
test
add
cmp
push
xor
mov
jmp
mov
mov
insl
add
add
lret
je,pt
inc
les
mov
push
int3
add
adc
call
add
push
xor
add
jae
shlb
xor
add
pusha
cmpb
add
enter
popa
jle
sub
sbb
sub
inc
or
mov
jl
mov
je
inc
je
cli
imul
adc
lcall
inc
xor
add
pop
shll
fidivl
mov
in
pop
add
insb
pop
ret
push
mov
dec
in
mov
fdivl
rol
adc
hlt
test
sub
pusha
inc
int
clc
adc
lahf
jmp
leave
sub
aaa
lea
mov
rclb
and
mov
and
cmp
mov
jnp
xchg
outsl
inc
dec
mov
out
mov
inc
add
and
lret
sbb
mov
orb
jnp
jb
cmp
cld
xchg
jne
cld
lret
jo
jl
popf
mov
xchg
push
insl
cmp
insl
das
xor
jae
ret
inc
add
add
push
mov
fwait
stc
mov
xor
mov
lahf
out
xor
sbb
jge
cmpxchg
add
jmp
adc
xchg
js
or
add
inc
movups
int3
jmp
jbe
cmp
pop
js
jmp
mov
mov
add
js
rcr
stos
add
add
mov
jmp
sbb
scas
divl
push
je
sub
repz
mov
inc
inc
cmp
add
pop
sub
insb
shl
cmp
mov
push
movsl
pop
sbb
sub
jmp
orb
loopne
pop
xorl
push
insb
inc
call
sbb
xchg
push
xchg
adc
push
orl
jle
xor
fsin
xor
test
fistpl
es
data16
push
mov
add
icebp
das
imul
lea
push
fwait
or
inc
jle
stc
shl
imul
lret
xchg
lods
clc
call
loope
sbb
call
lea
nop
dec
lea
clc
fsts
or
mov
jno
add
fprem
jge
and
add
icebp
jno
add
push
inc
movsb
add
pushf
jns
in
jle
cs
sub
lahf
ret
dec
cmp
add
mov
sarb
pop
jp
jge
pop
das
dec
sub
add
cli
aaa
daa
mov
movsb
add
xchg
cmp
insl
jle
lock
xor
addl
jle
std
incl
negb
push
add
idivl
adcl
mov
es
xchg
cld
incl
sub
push
test
dec
mov
inc
xor
int3
sbb
mov
jmp
adc
pop
and
iret
inc
xor
insl
bound
int3
jmp
andb
add
test
out
bound
jg
js
jo
and
sub
movsb
jg
ret
movsl
and
mov
sbb
call
sbb
pop
and
or
add
push
hlt
push
add
ss
rcrb
add
push
pop
stos
jmp
std
add
out
xchg
push
xchg
sub
sbb
push
inc
or
push
rcll
sti
push
insb
push
pushf
push
fs
lods
jmp
insl
mov
movsb
xchg
cld
push
jo
icebp
sbb
loope
mov
pop
popf
jmp
int3
mov
filds
imul
aad
jge
mov
mov
jmp
inc
call
mov
fnsave
and
add
dec
bnd
cmc
xlat
sub
cmp
adc
ret
sbb
add
jg
mov
add
add
rorb
push
push
mov
push
mov
jg
inc
sbb
insb
or
iret
add
mov
cmp
sahf
dec
jge
adc
pop
add
dec
insb
test
add
add
call
jp
inc
shlb
cs
nop
add
inc
jmp
cli
push
lea
rorb
inc
insb
mov
mov
add
add
mov
dec
sub
xchg
add
stos
xchg
add
fwait
add
mov
sti
scas
int
jmp
incl
and
sbb
cmp
and
and
and
outsl
int3
adc
out
xchg
sub
push
push
sub
sti
jb
int
rorl
push
push
sub
sti
bound
push
popa
subl
cld
dec
ret
pop
aam
xchg
test
orl
test
mov
jle
in
in
add
ret
pop
pop
fidivrl
int
int3
out
mov
addb
add
add
and
icebp
ljmp
paddd
xchg
jno
add
int3
jmp
test
add
pop
jge
add
ret
push
std
rorl
int3
test
lock
cmp
jmp
add
add
mov
cmp
inc
add
add
push
cwtl
push
cli
dec
xchg
test
add
add
inc
stc
sti
pop
add
add
mov
dec
jmp
add
clc
out
jge
jns
jp
sbb
test
add
add
sbb
cltd
add
lret
notb
add
jmp
repz
lods
xchg
inc
fsts
and
dec
mov
xchg
loop
je
cli
add
add
inc
test
cltd
lret
jp
inc
jmp
pop
pop
xchg
add
sbb
add
fstl
push
push
cmp
add
add
fneni(8087
inc
cltd
add
lret
add
sar
aad
addl
js
repz
xchg
add
add
inc
jae
mov
add
add
add
mov
cwtl
add
mov
into
inc
orl
add
mov
call
mov
sub
mov
add
sbb
clc
dec
sub
add
roll
mov
mov
lcall
and
addr16
test
adc
mov
incl
cmp
add
sub
pushf
add
outsb
cwtl
add
jmp
roll
dec
sbb
jge
push
mov
xchg
and
cmp
xchg
ret
not
out
lcall
add
int3
jb
mov
push
dec
add
int3
in
xchg
add
jo
pusha
lret
jmp
and
jmp
jg
movsb
das
mov
and
call
int3
jmp
fbld
mov
add
add
movsl
jl
popf
out
out
movsb
add
mov
cmp
or
xor
out
div
das
mov
cltd
jmp
sub
sub
add
mov
mov
jmp
testl
jmp
mov
add
add
or
jge
add
add
add
sub
mov
add
fisttps
shr
sbb
cs
jecxz
int
sbb
fs
adc
movsb
inc
add
add
add
outsl
xchg
add
iret
jge
inc
jmp
or
cli
ds
push
into
test
rolb
stc
je
sarb
rol
lcall
into
mov
lsl
mov
out
int3
stc
push
adc
add
stc
add
push
push
cmp
test
adc
or
xchg
push
mov
dec
mov
out
dec
add
imul
add
jns
lea
add
add
fcomi
lock
and
add
mov
jbe
add
add
movsb
add
mov
test
sarl
or
loope
out
call
inc
mov
add
insb
jmp
and
mov
mov
enter
mov
ss
adc
clc
mov
add
xor
sub
jp
mov
cltd
imul
mov
out
jp
lret
ror
inc
sar
bound
add
add
dec
pop
add
int3
call
loopne
into
sbb
bound
int3
jmp
add
lock
cli
dec
jnp
call
into
xor
insb
dec
int3
jmp
out
push
lods
insb
push
out
jns
mov
mov
addb
test
sub
icebp
mull
lret
mov
xchg
adc
push
ror
addr16
add
std
sbb
push
sbb
xchg
mulb
pop
xor
add
push
mov
add
iret
dec
test
add
sub
je
das
jmp
jns
add
mov
push
xlat
notl
jl
push
jmp
ja
add
shl
stos
sti
lret
mov
add
lret
xor
sbb
dec
bound
sbb
or
mov
ja
push
icebp
lret
imul
pop
ret
jge
cmp
push
cmp
push
jb
mov
imul
pop
mov
sub
enter
sbb
je
jb
or
mov
stc
jne
fwait
add
cmp
cli
pushl
call
add
mov
or
orl
clc
mov
xchg
loopne
popf
adc
add
test
dec
mov
add
push
ja
add
jbe
add
or
xchg
std
incl
mov
add
sub
mov
mov
pop
inc
pushf
add
and
rcll
cmp
mov
andl
add
push
mov
roll
add
in
xchg
js
add
js
add
icebp
and
mov
aad
ss
outsl
stc
out
and
mov
push
inc
add
cmp
and
add
fnstenv
jmp
and
pop
sbb
imul
add
testl
sbb
pushf
pop
mov
out
int
mov
push
adc
out
inc
int
cs
popf
ljmp
pop
lock
call
popf
mov
xchg
push
or
add
int3
adc
jnp
lds
das
mov
loope
pushf
insl
shl
bswap
aas
popf
add
mov
add
dec
add
add
add
pop
add
and
pop
call
add
sbb
call
gs
sarb
lret
add
inc
jo
jp
and
add
int
mov
mov
mov
or
lret
add
js
sbb
imul
adc
pop
in
mov
jmp
sbb
std
flds
jle
add
sarb
or
add
adc
mov
sub
jg
add
mov
push
call
loop
add
stc
inc
add
pop
out
add
inc
pop
or
aaa
test
decb
and
inc
shll
and
adcb
sar
incl
adc
repnz
bound
ljmp
cld
pop
add
inc
call
sti
adc
shll
dec
adc
stos
cwtl
jae
add
shll
add
add
pop
shlb
pop
lds
add
scas
sbb
aam
in
sub
inc
add
xchg
sbb
add
cld
test
ds
aas
push
mov
outsb
sub
icebp
sbb
movsb
stc
adc
ljmp
cld
mov
xor
push
inc
add
cmp
outsl
cld
ret
cli
das
inc
push
add
mov
out
fsubrs
int3
push
pop
int3
in
fiaddl
dec
fstpl
leave
add
lods
add
adc
outsl
lcall
add
lret
pop
inc
sarl
into
stos
dec
mov
leave
add
stos
add
bound
push
inc
fimuls
jae
inc
scas
in
jle
shlb
call
clc
and
call
or
push
push
cmp
dec
repnz
loop
dec
xchg
pop
pushf
adc
cld
out
rcl
insl
add
negl
add
push
std
jae
dec
std
call
aaa
xchg
clc
gs
cs
cmp
pop
in
sbb
pop
in
sbb
sarb
adc
negl
dec
pop
clc
jge
fldt
cmp
clc
out
pop
adc
cld
dec
rcrl
jns
or
add
jne
adc
sbb
pusha
mov
iret
or
add
call
out
stc
adc
pop
xchg
repnz
jge
popf
je
cmp
sbb
jl
or
pusha
clc
ljmp
mov
je
adc
test
push
out
call
rcrb
cmp
xchg
sbb
push
mov
adc
cmp
loop
or
fs
or
sub
inc
push
int3
xor
rcrb
stos
loope
clc
in
xor
inc
add
mov
dec
inc
sbb
adc
cld
pop
inc
sbb
test
cs
in
incl
mov
test
mov
test
test
sub
mov
movsl
jnp
into
dec
xor
daa
xor
mov
nop
shl
lret
nop
outsb
or
es
into
mov
and
add
sub
stc
sbb
incb
inc
cmp
sbb
and
or
loope
add
in
std
xchg
adc
pop
xchg
sbb
orb
add
rcrl
inc
fprem1
lods
lret
add
add
xchg
sub
add
xchg
ljmp
adc
mov
dec
xchg
cvtpi2ps
das
jns
out
xchg
test
push
add
out
insb
cmpsb
mov
dec
je
lock
jmp
xor
pushf
jle
fistl
adc
pop
jmp
dec
and
loope
int3
test
add
mov
sbb
mov
scas
cmp
imul
and
adc
mov
pop
fnstsw
mov
xchg
dec
loopne
fnsave
leave
clc
add
loopne
add
add
dec
push
das
les
add
sar
lcall
dec
shll
shr
iret
add
lcall
jne
adc
or
aam
jae
mov
decl
jne
lea
jnp
decl
and
sub
and
push
cltd
add
adc
cld
ljmp
and
adc
clc
ljmp
stc
test
mov
jns
inc
and
testl
lcall
adc
or
cs
jge
and
ror
out
sldt
add
add
sbb
out
dec
gs
jnp
pop
or
movsl
add
dec
leave
or
daa
subl
gs
or
fdivrs
mov
jecxz
addr16
pushl
pop
jg
test
incl
rclb
daa
xor
fs
pop
mov
fdivrs
jo
cmp
cld
cltd
aas
ja
loop
int
icebp
das
jne
lods
push
lea
call
add
in
pop
jnp
mov
test
push
pop
gs
push
imul
iret
sbb
idivb
popa
rorl
gs
sti
xchg
xlat
rorl
inc
enter
mov
rcrb
jle
nop
ret
xchg
cmpsl
jle
cwtl
jae
test
fsubrl
frstor
mov
test
mov
pusha
add
icebp
adc
pop
push
jo
ret
ja
sub
rolb
cli
ret
push
or
aaa
ficoml
test
mov
mov
stc
mov
inc
int3
add
imul
int
jle
stc
or
fldenv
inc
xchg
add
inc
xor
cltd
pop
pop
mov
inc
mov
mov
sbb
xchg
or
push
psubw
cmpsb
sbb
lret
add
insb
ljmp
mov
enter
cwtl
roll
int3
add
dec
or
jmp
inc
stc
or
jne
and
cltd
je
xor
add
sub
cli
lcall
cmove
scas
lret
cmc
jmp
dec
or
mov
ds
shlb
dec
rcl
gs
sub
and
or
mov
pop
ret
push
mov
orl
jne
dec
stc
or
jno
jl
jo
add
in
mov
rolb
add
add
sarb
call
add
mov
jl
std
adc
jge
add
xchg
outsl
not
aaa
mov
or
rolb
add
add
test
xor
sub
mov
test
aaa
add
movsl
add
stos
xchg
sub
mov
jg
ss
jae
jb
inc
mov
clc
xchg
push
inc
inc
cs
jnp
push
int3
dec
rolb
add
add
call
pop
iret
fdivrl
addr16
cwtl
inc
add
xchg
jp
inc
cwtl
sti
inc
lds
ror
cmp
mov
mov
add
cwtl
pop
push
cmpsl
in
data16
not
dec
cmc
jb
jne
repnz
add
and
loopne
int3
pop
stos
pusha
mov
add
dec
xlat
ret
movsl
movsb
pop
mov
xchg
push
daa
test
add
add
cld
pop
addr16
mov
inc
adc
add
xchg
jle
outsl
lods
mov
clc
clc
hlt
mov
ljmp
jb
xchg
or
ret
push
cs
lds
icebp
stos
or
mov
mov
pushf
or
adc
dec
dec
bound
divps
cld
inc
or
push
cmp
dec
bound
xchg
nop
xor
push
mov
and
inc
ret
cli
mov
pusha
lods
mov
fstl
sbb
mulb
insl
and
daa
adc
stos
mov
mov
or
je
adc
push
mov
dec
and
pop
je
ds
cmp
push
ja
dec
cmp
pop
je
out
fwait
and
mov
push
ljmp
add
xchg
jge
or
incl
jns
add
nop
jge
addr16
push
or
fwait
add
pop
das
push
adc
sbb
jge
mov
stc
decl
add
cmp
je
mov
inc
in
jns
test
call
mov
sub
scas
and
out
addl
lds
jnp
clc
add
movsl
ja
mov
jns
stos
mov
clc
rolb
iret
in
jae
mov
xor
jge
hlt
xchg
inc
fidivrs
sub
out
sub
mov
jge
fiaddl
adc
gs
dec
fs
mull
sbb
or
int3
sahf
mov
push
out
jl
mov
push
nop
adc
enter
sldt
add
add
movsbl
fsubrs
mov
hlt
addr16
arpl
ja
push
add
jb
mov
cmp
in
mov
sbb
ficoms
sub
insb
xor
idivb
mov
out
rolb
bound
gs
xchg
fcos
int
int3
jmp
dec
leave
mov
bound
sarb
ljmp
cmc
iret
and
std
call
pop
cmp
call
add
insl
jmp
cmp
dec
shr
dec
add
add
dec
inc
stos
enter
movsb
mov
test
pop
int3
fldenv
std
or
push
jo
push
adc
cmp
mov
jmp
pop
inc
add
add
int3
or
outsl
and
jecxz
enter
int3
jne
ret
imulb
jae
push
cltd
hlt
call
xchg
sbb
add
pop
inc
call
ret
adc
inc
lock
lock
lock
xchg
inc
mov
test
rclb
std
ljmp
int3
divl
and
xor
inc
push
push
adcl
push
ljmp
pop
inc
sbb
test
lahf
sbb
out
add
in
adc
mov
test
xor
popa
adc
mov
out
pop
adc
scas
test
sub
sub
test
cmp
push
dec
mov
stos
pop
add
inc
cmp
test
dec
cli
push
call
jge
iret
add
mov
in
addb
scas
test
pop
clc
and
out
lea
and
into
xchg
out
lea
sub
in
jmp
fmul
sub
and
je
xchg
mov
incl
sbbl
mov
push
int3
jle
decb
jnp
lds
add
inc
cmp
aad
add
jmp
inc
les
jmp
add
int3
jmp
pop
jge
movsl
inc
mov
dec
test
add
pop
pop
pop
cmp
pop
pop
jl
mov
mov
popa
sbb
decl
push
add
add
test
sbb
jno
push
inc
or
add
push
dec
inc
das
out
add
sbb
push
sbb
fs
sarl
add
add
push
inc
int
push
imul
mov
jge
push
dec
cmpsb
jmp
pop
loopne
mov
lods
mov
xchg
out
and
dec
adc
add
mov
jmp
add
cmc
mov
add
sbb
sub
push
cli
je
jb
push
fidivrs
sbb
add
jecxz
add
jle
ljmp
mov
dec
cli
je
push
inc
and
jb
mov
dec
push
jl
jge
cmc
jg
dec
vdivps
inc
cmp
inc
imul
jle
subl
lds
lcall
add
lods
sbb
stc
cmp
imul
push
dec
clc
jmp
lods
adc
jp
and
pop
push
push
dec
lock
or
shlb
lock
std
push
in
test
adc
loope
call
mov
jge
iret
popa
fldcw
add
das
dec
int
add
add
jnp
and
jnp
xchg
mov
add
int
mov
mov
jge
into
sbb
cmp
cmp
out
push
das
cmp
cmp
int3
das
imul
adc
shll
push
subl
pop
out
mov
dec
sub
cmpsl
adcb
push
jmp
fcomps
and
mov
pop
jae
add
jo
add
bound
ljmp
int3
sbbl
nop
dec
js
test
add
mov
data16
cli
sbb
inc
shr
bound
jnp
push
mov
cmc
jmp
cmp
into
addb
cltd
lea
mov
inc
and
fiaddl
clc
xchg
in
push
ds
pop
cmp
add
mov
dec
std
clc
jb
inc
enter
cmp
fs
xchg
mov
cltd
divb
dec
sbb
jb
jns
jb
adcl
into
dec
mov
call
mov
enter
sub
sub
int3
pop
xchg
adc
stos
sbbb
addb
dec
idiv
sub
push
push
mov
and
push
bound
add
int
lea
int
ljmp
int3
jge
push
add
mov
lcall
add
repz
push
jb
lea
cwtl
add
int3
and
std
jbe
jmp
test
sti
idiv
test
xor
lcall
add
je
dec
pop
cmp
in
sbb
pop
int3
add
add
lock
xchg
mov
jle
add
or
je
add
jae
push
das
and
inc
call
push
lcall
incl
inc
dec
call
jnp
test
jne
sbb
xor
and
jb
add
xchg
mov
jnp
and
repz
mov
inc
mov
and
and
ret
pop
mov
fcoml
push
lock
addl
lds
and
int3
js
add
push
xlat
mov
dec
xchg
jmp
pop
sub
pop
pop
lret
jmp
ret
pop
dec
pop
mov
movsb
inc
mov
sub
into
movsb
inc
jne
mov
inc
jnp
mov
mov
idiv
testl
xorb
mov
scas
insb
shl
sbb
jle
shl
or
mov
je
mov
in
popf
insb
adc
xchg
out
jg
mov
jae
push
adc
and
dec
add
add
sbb
jl
jne
add
push
pushf
sbb
jo
sub
jmp
scas
dec
stc
jo
stos
and
add
add
int3
add
in
mov
shrb
jge
decb
jmp
int3
mov
js
sbb
push
dec
sbb
fs
sarl
add
add
test
adc
or
jge
push
dec
out
push
push
cmp
and
push
or
push
dec
cmp
or
test
add
add
movsb
and
cs
mov
inc
cmc
ja
add
leave
add
popf
enter
jno
add
jp
lcall
jge
out
add
push
inc
lea
enter
adc
mov
cli
mov
push
inc
and
jo
add
dec
sbb
push
icebp
pop
divb
xchg
cmp
push
add
shl
mov
add
movsl
outsl
out
jo
nop
jae
add
sub
dec
jno
dec
test
out
mov
mov
jae
in
roll
repz
jmp
xchg
inc
add
pop
dec
shlb
dec
sarb
test
call
lods
test
call
lods
dec
test
dec
adc
decl
mov
lret
add
add
dec
jge
popf
mov
mov
sahf
push
test
icebp
adc
dec
adcb
mov
movsb
xchg
jmp
push
cmp
pop
adc
pop
adc
rorb
push
fsubr
das
iret
push
icebp
lahf
sub
jecxz
add
adcl
mov
imul
notl
jge
sti
cmpsl
iret
insl
push
mov
push
adc
push
ljmp
jp
mov
jecxz
sbb
mov
add
dec
leave
push
adc
push
movsl
outsl
inc
inc
int
jb
jge
je
sub
das
roll
cld
lret
add
or
dec
mov
sbb
aad
repnz
ljmp
add
add
fildll
pushl
es
sub
div
lock
jmp
bound
lods
adc
dec
idivl
les
or
lods
push
or
or
push
int
rorl
gs
jmp
je
mov
cmp
add
jno
jge
pop
int
mov
out
pop
pop
inc
sub
and
xor
test
test
sbb
push
push
mov
jle
mov
adc
bound
cli
lea
push
fs
insl
incl
push
pop
sub
sbb
mov
stc
add
push
xchg
stc
incl
mov
js
add
shrb
out
pop
xchg
sub
add
and
add
arpl
and
bound
mov
addr16
add
jnp
jne
jns
and
lahf
push
stc
aaa
in
inc
push
jnp
jne
mov
and
sub
sub
add
jge
push
out
into
push
test
pop
insl
add
gs
mov
push
inc
iret
int3
ficoms
jge
push
js
int3
jmp
sub
arpl
push
test
xchg
fbstp
inc
push
sub
dec
stos
add
add
mov
push
sub
inc
mulb
or
xlat
or
sub
inc
xchg
pop
fcmovnb
jmp
jmp
testl
jge
int3
jmp
push
mov
pop
or
divl
push
loop
mov
push
mov
repz
mov
int
outsb
xor
add
push
out
out
sub
fsub
jg
add
add
clc
call
test
jp
dec
test
sbbb
rclb
dec
lret
lret
int3
mov
dec
cmp
fldl
arpl
add
shlb
dec
mov
push
xchg
push
sbb
jge
xchg
add
add
int
sbb
stc
pop
adc
enter
test
adc
addr16
jmp
cli
je
jnp
adc
and
and
mov
inc
mov
test
add
lds
add
and
add
add
dec
and
dec
loope
sub
jge
in
or
cmp
aam
or
cmp
mulb
leave
add
fs
call
sub
lods
insb
jmp
sub
xchg
lods
inc
push
add
or
aas
add
out
push
push
stc
andl
and
insl
jp
in
jns
dec
jb
call
das
stc
add
clc
clc
mov
inc
rclb
pop
mov
scas
clc
enter
cmpsb
pop
fninit
dec
mov
hlt
bound
add
arpl
mov
sub
jbe
dec
fdivrl
mov
pop
sub
cmpsl
inc
addl
xchg
into
jmp
sub
sbb
add
add
rclb
cmp
js
test
xchg
ret
gs
mov
inc
push
sub
sbb
dec
nop
cmp
add
dec
stos
cld
andb
add
sub
inc
sub
repnz
jb
lock
int
push
sub
addl
cmp
fistpll
cmpsl
or
dec
sbb
std
sti
add
ds
fldt
push
pop
adc
add
out
jg
add
add
sbb
jmp
iret
push
sahf
xor
mov
loopne
mov
jne
dec
add
adc
dec
sarl
add
mov
into
ret
xor
and
dec
insb
nop
scas
dec
xor
lret
lret
add
stos
jo
lretw
dec
cmp
or
test
sbb
mov
dec
shll
inc
and
adc
fiadds
lret
push
mov
int
mov
movsbl
push
jle
mov
inc
loope
jmp
je
sarb
mov
inc
add
leave
jge
and
test
add
add
inc
fst
mov
pop
int
lea
addl
loop
cli
je
pusha
stc
adc
add
dec
adc
jne
call
mov
dec
or
out
add
arpl
sbb
test
dec
push
dec
stc
mov
sbb
sbb
xor
and
bswap
pop
add
mov
sti
scas
cltd
push
negl
aas
test
cli
inc
mov
sti
add
arpl
sub
mov
into
and
jne
and
mov
dec
cmc
push
icebp
add
fs
mov
jns
jbe
add
push
dec
mov
cmpsl
stc
mov
testl
dec
or
inc
je
pop
inc
add
stc
test
repz
outsl
push
mov
fs
mov
out
out
pop
adc
jecxz
cmp
outsb
cmp
xorb
test
pop
dec
xor
pop
adc
xchg
inc
or
xor
fs
xchg
outsl
ljmp
xchg
out
outsb
xchg
push
emms
jae
add
je
and
imul
add
int3
add
add
dec
xchg
sbb
sbbb
inc
ss
jne
mov
js
clc
jmp
mov
clc
push
push
test
lahf
push
jne
insb
inc
lds
int3
add
jne
gs
int3
add
adc
xor
aaa
mov
add
mov
sub
jne
and
sbb
movsl
inc
jle
je
cmp
xchg
inc
jbe
clc
add
push
adc
enter
jl
inc
mov
push
lea
dec
int
lods
xchg
into
push
fiadds
stos
scas
stc
mov
clc
into
pushf
or
repz
hlt
xchg
cmp
adc
pop
or
lea
add
clc
xor
lcall
mov
inc
shrb
imul
gs
inc
call
add
mov
lea
sti
decl
mov
scas
inc
fsubs
add
leave
add
add
add
sub
cmp
aad
cmovb
rorb
cli
add
add
mov
pop
mov
testl
and
push
mov
push
mov
push
call
fbstp
nop
bound
xor
adc
add
clc
cmpsl
and
add
add
pop
pop
xchg
pop
jge,pt
gs
addl
add
out
sbb
add
test
and
xchg
jns
mov
or
cmc
subl
ja
cmpsl
sub
inc
dec
ds
sbb
ret
das
inc
sub
subl
add
mov
mov
jp
std
adc
fistpl
imul
inc
mov
jbe
mov
js
push
mov
or
mov
or
jle
fistpl
imul
inc
mov
jbe
mov
jns
push
scas
jecxz
sbb
mov
jecxz
add
mov
aam
sbb
int3
add
scas
cmp
dec
dec
push
call
add
pushf
test
jno
add
jecxz
push
pop
jb
jge
adc
inc
call
out
stos
test
mov
push
cs
jge
hlt
dec
sbb
add
mov
divl
clc
jne
sti
push
divb
jle
lods
dec
add
add
mov
mov
xor
repnz
jmp
mov
pop
push
and
add
mov
add
push
pop
gs
xor
je
mov
sub
sub
xor
jae
push
mov
jne
or
clc
test
and
insb
pop
call
inc
std
es
je
push
ret
xchg
adc
xchg
jge
roll
jmp
mov
add
je
aaa
stc
mov
and
pop
sub
cmp
inc
mov
test
and
shl
cmpsb
test
lock
and
dec
inc
inc
dec
push
xchg
jg
in
adc
sti
scas
sti
pop
jns
loopne
jnp
loopne
pmaddwd
clc
pop
sbb
je
jbe
or
int3
pop
mov
loopne
add
loopne
inc
testb
ss
sbb
jle
rolb
jnp
loopne
mov
aas
mov
loopne
push
int3
jb
push
imul
in
push
loop
aas
aam
enter
lea
imul
pop
imul
cmp
ret
enter
lock
mov
inc
rcrl
scas
mov
jae
add
lret
inc
inc
sbb
dec
pop
push
mov
popf
faddl
int3
sub
jl
imul
scas
cmp
ret
mov
mov
ret
iret
outsl
clc
push
lret
addr16
sbbl
jg
add
add
ja
into
jg
rcrl
psubb
xchg
call
jmp
rclb
inc
outsl
push
pop
jg,pt
fcmovb
stc
mov
sbb
push
in
mov
fs
data16
jmp
rclb
jbe
jge
adc
call
pop
fs
push
lcall
mov
mov
pop
add
jb
fs
stc
xchg
add
jl
cmc
add
mov
mov
mov
cltd
lret
mov
and
inc
push
jmp
andl
aad
ret
sub
stc
push
fcoml
jle
pop
xor
mov
dec
mov
push
sarl
inc
hlt
lods
test
push
xor
mov
dec
jge
xchg
sub
in
fs
jnp
ljmp
popa
pop
inc
add
mov
into
aaa
push
mov
jae
shrb
clc
jge
outsb
xchg
dec
cwtl
jnp
ds
jle
rclb
decb
pop
inc
add
shl
push
mov
jge
test
std
jb
cmp
pop
sbb
aaa
stc
mov
aaa
dec
clc
jmp
or
mov
mov
and
addl
add
add
adcb
movsl
test
mov
inc
mov
out
mov
ds
mov
dec
fdivr
or
mov
mov
cmp
cmpsl
fnsave
jle
cmp
jns
hlt
sub
pop
scas
cmp
imul
add
xchg
cmp
test
mov
add
aam
add
dec
jb
mov
out
je
leave
push
cwtl
orb
int
pop
xlat
insl
cmp
add
add
arpl
lret
and
dec
lret
aam
call
lods
std
dec
mov
idiv
xor
fdivrp
popa
ljmp
jmp
mov
xchg
push
in
cli
pop
loopne
add
or
scas
test
xor
not
bound
mov
dec
rcll
xchg
mov
add
cmp
jo
add
add
sti
add
decb
sahf
push
call
add
and
ljmp
pop
icebp
in
cld
fsts
push
mov
je
jb
jmp
mov
pushf
adc
adc
call
cmp
sbb
inc
push
in
subl
push
inc
add
cmpsl
xor
aas
movsl
adc
iret
cmp
push
jnp
ljmp
subb
outsl
movsl
adc
bound
test
or
add
jae
mov
dec
ds
add
xchg
call
idivb
stc
dec
cmp
pusha
add
orb
sbbb
je
jno
clc
cmc
push
adc
mul
ljmp
idivb
stc
out
pop
cmp
mov
or
in
clc
jae
add
cmpsb
xchg
mov
jnp
daa
jg
or
xor
add
int3
in
pop
fcomp
test
lret
jmp
cmp
pusha
cmp
or
add
lret
xchg
add
hlt
mov
inc
int3
push
outsl
sbb
call
xchg
xchg
out
pusha
or
cmp
add
int3
mov
or
cmp
enter
mov
add
or
jle
out
cmpsl
jb
add
int3
xor
add
dec
es
cli
add
mov
push
loopne
lret
jmp
outsl
adc
jmp
flds
xchg
pop
or
pushf
add
add
sub
jge
cmp
mov
push
cmp
movsl
mov
stos
sbb
add
add
not
adc
pop
pop
clc
jmp
iret
pop
stos
pop
stos
adc
add
fs
cmp
mov
adc
xor
adc
add
inc
pop
dec
sahf
decl
sub
dec
cmp
add
xor
pushl
pop
inc
sub
and
mov
or
inc
add
sar
xlat
pop
xlat
sbb
fmul
add
xchg
rcll
jg
add
lret
add
mov
jne
cwtl
sub
push
push
xorl
aaa
sar
xlat
sbb
lods
and
leave
add
scas
fistpl
pop
lret
imul
adc
add
xor
mov
mov
sub
lret
cs
daa
and
into
fstpt
int3
std
incl
mov
add
and
rcll
pop
fcoms
test
std
or
xchg
adc
gs
dec
add
mov
jae
cld
cmp
add
ljmp
cld
clc
cmc
ljmp
jg
js
add
jge
fdivr
repz
paddw
ljmp
lock
mov
add
mov
int
add
mov
push
scas
pop
in
jnp
or
add
mov
add
out
add
mov
xor
int3
mov
fcomps
ss
pop
jbe
or
add
xchg
rcrl
int3
jb
jecxz
push
hlt
lret
gs
arpl
cmp
xor
imul
add
or
inc
pop
xchg
mov
das
dec
negl
clc
lret
orl
push
imul
packssdw
pop
pop
clc
jmp
in
push
inc
or
adc
bound
imulb
std
dec
mov
xchg
add
roll
adc
add
push
stc
insb
aad
jns
mov
inc
mov
push
insl
or
adc
add
idiv
pop
sub
sub
sbb
icebp
iret
adc
pop
mov
jo
mov
clc
test
cs
imul
imul
cld
add
out
add
jl
dec
or
mov
adc
pop
adc
add
and
rcrb
and
insl
inc
fimuls
lahf
adc
test
lret
enter
mov
adc
xchg
int
nop
flds
mov
xor
mov
ds
shlb
nop
add
push
mov
and
push
testl
jg
dec
incl
xor
in
add
sub
emms
loopne
aaa
stc
mov
stc
insl
imul
out
cmp
cli
cmp
jae
out
inc
stc
push
iret
iret
dec
xor
sub
mov
cmp
add
adc
mull
test
sbb
test
aaa
rcl
subb
xor
add
mov
bound
sbbl
add
or
popa
sbb
sub
adc
or
lret
jmp
fisttpl
sti
ret
incl
mov
fcomip
jp
push
adc
add
popf
xlat
inc
xchg
jmp
xor
in
pop
mov
add
idivl
push
add
sbb
add
sar
dec
out
notl
adc
add
dec
mov
stos
dec
dec
in
push
xlat
pop
sar
dec
jb
shrb
or
sbb
or
cmp
dec
sahf
pop
mov
sub
dec
rcll
push
pop
push
or
push
loope
mov
add
sub
call
jb
dec
out
fst
icebp
add
push
lahf
test
push
test
xchg
lds
xchg
add
push
adc
push
jmp
sub
jmp
lcall
pop
mov
jns
ret
inc
xor
clc
push
xor
push
mov
mov
jge
sahf
pop
and
fmull
pusha
lcall
mov
add
cs
adc
stos
mov
inc
and
push
cmp
test
add
dec
pushf
jge
fs
insb
inc
insb
mov
push
jp
stc
adc
sub
and
push
pop
and
jns
pusha
incl
mov
push
rorb
scas
or
test
call
ret
jnp
pop
rcrl
stc
addr16
inc
pop
mov
insb
add
jnp
into
dec
scas
xchg
int
pop
xchg
xchg
jne
fs
add
inc
sbb
adc
je,pn
mov
sarl
adc
xchg
mov
insb
sub
add
call
roll
jnp
ret
xor
push
iret
adcb
int3
jmp
mov
scas
push
scas
cs
fcmovb
lahf
negb
and
add
int3
imul
jnp
into
sbb
sub
rclb
or
inc
stos
lret
fiadds
add
int3
cmp
ja
aaa
repz
adc
or
mov
jb
and
mov
gs
ficoms
cmp
add
fistps
div
shufps
mov
mov
sbb
sbb
insl
mov
jmp
dec
push
pop
gs
int3
add
jo
jle
test
cmp
test
jl
cld
lret
add
pop
pop
jae
in
cmpsb
in
dec
cmp
out
jae
jmp
pop
out
add
cld
iret
add
fdivrl
mov
push
or
int3
add
outsb
clc
sbb
imul
add
add
push
ljmp
into
cvtps2pi
add
test
or
mov
je
mov
or
add
mov
je
aam
insb
lds
push
push
inc
or
incl
shll
je
xor
inc
and
rorb
xchg
pusha
add
and
dec
shll
and
cld
mov
add
mov
je
add
je
in
jge
dec
add
in
iret
or
stc
fisttps
jns
sbb
icebp
int
sarb
jl,pt
hlt
inc
lret
and
mov
adc
lahf
leave
js
fsubrl
jnp
loopne
jnp
fists
xlat
imul
mov
rcr
int
adc
repnz
cld
addb
rorl
sub
add
enter
dec
movsb
or
fistpll
daa
inc
js
sub
shlb
mov
inc
dec
add
jmp
rolb
in
jle
push
aad
add
mov
jmp
add
int3
jb
incl
testl
jle
mov
aad
jle
fiaddl
add
fidivs
decb
ljmp
lret
fs
int3
mov
cmpsl
and
adc
push
ljmp
mov
add
lret
add
sub
icebp
jb
mov
add
add
in
std
dec
mov
sbb
or
sub
or
jb
shl
incl
loope
lret
add
xor
call
add
int3
div
mov
inc
jmp
mov
neg
pop
mov
or
lret
add
popf
dec
pop
dec
imul
test
sbb
aam
add
add
add
xchg
lods
adc
ja
or
lods
sbb
ja
adc
pusha
inc
mov
add
adc
pop
sbb
sub
pop
addl
pop
dec
add
adc
ds
sbb
adc
jne
iret
pop
sub
imul
and
sbb
sbb
sbb
insb
jge
lds
inc
je
mov
and
loopne
and
push
push
jg
add
imul
mov
push
pushl
adc
pop
into
shlb
call
adc
add
gs
xchg
push
xchg
std
test
sub
xorb
dec
lret
cld
clc
or
fidivl
and
mov
pop
add
test
and
roll
sbb
pop
mov
fcomps
sbb
clc
or
push
lret
loop
adc
push
jne
and
rolb
push
jnp
adc
add
ret
add
mov
add
je
int3
rolb
rolb
outsb
add
int3
inc
std
adc
lret
data16
jmp
add
dec
ljmp
int3
inc
clc
cwtl
es
int3
jmp
adc
adc
mov
jne
lret
jmp
add
adc
rcll
jmp
jge
lret
cmp
add
sbb
popa
sti
adc
add
les
pusha
mov
inc
jg
add
filds
jmp
incl
int
inc
dec
cmpsl
add
out
jmp
cld
lret
add
repz
lods
lret
in
add
std
push
xchg
mov
insl
or
cmp
daa
add
clc
jmp
sahf
dec
clc
jmp
dec
clc
jmp
dec
push
push
adc
jb
xchg
xchg
pop
add
add
inc
cmp
add
push
mov
es
push
or
adc
nop
inc
push
adc
lcall
adc
int
je
dec
jne
add
lret
lret
add
and
fldl
sbb
iret
add
jmp
inc
mov
mov
adc
test
mov
xchg
das
push
fistpll
inc
and
arpl
pop
sub
sbb
sbb
lock
adc
rcll
and
call
mov
sbb
add
sub
add
jp
and
mov
sbb
cmc
or
insl
and
xor
add
add
pop
add
xor
lods
jl
aaa
test
test
jge
xor
add
xor
popa
add
xor
pusha
add
xor
arpl
add
push
add
xor
add
add
add
add
push
add
pop
mov
sub
divl
call
testl
push
mov
lods
sbb
or
repz
add
add
dec
xorl
dec
mov
int3
int3
in
lods
pop
add
dec
into
out
fnstenv
xor
and
cwtl
int
add
mov
adc
int3
jmp
add
dec
clc
fs
add
and
imul
and
testb
enter
int3
add
xchg
add
add
testb
mov
scas
xchg
in
and
push
dec
dec
sahf
sbb
or
bound
inc
in
push
test
jmp
aad
clc
data16
add
add
sbb
sti
mov
add
aad
test
cmp
int3
jmp
push
shrl
push
sub
and
insb
out
xchg
push
add
ljmp
dec
push
call
cmpb
add
out
ljmp
pop
int3
or
inc
xor
lcall
stc
lcall
int3
ja
add
iret
add
hlt
cmp
inc
inc
jge
xor
lret
or
lret
add
fsub
fcomps
sub
call
xor
rolb
cmovbe
mov
test
jmp
bound
add
and
sbb
jge
and
jg
nop
and
cmpsb
je
frstor
stc
addr16
push
mov
mov
add
mov
test
mov
repz
aaa
xor
jmp
je
mov
xchg
sbb
adc
cli
xor
cld
dec
pop
add
mov
sarb
and
mov
addr16
loopne
fcmovnbe
test
jge
mov
jns
loopne
fwait
lret
clc
mov
sbb
test
ss
add
pop
testl
jge
js
call
hlt
jle
out
add
pop
cmp
dec
mov
add
jb
mov
in
mov
out
rcll
add
stos
or
bound
adc
and
pusha
enter
pop
pop
lret
push
pop
rorb
stos
xchg
cld
mov
push
add
pop
sub
xchg
push
cmp
and
push
add
pop
inc
jmp
cmc
xchg
xchg
or
enter
testb
mov
insb
mov
iret
add
add
jmp
test
call
bound
jmp
mov
push
scas
lock
pop
fnstcw
cld
inc
inc
test
sbb
ret
lret
mov
add
push
cmp
xlat
test
hlt
negl
inc
jmp
repz
out
aad
dec
movl
divb
repz
jb
push
out
sbb
imul
pop
add
lret
out
call
sub
decl
inc
imul
je
and
je
fidivrs
pop
iret
insb
or
mov
roll
lcall
enter
loop
jg
enter
leave
pop
add
shlb
or
loope
test
jl
fmul
add
add
loopne
xor
jl
add
add
loopne
cpuid
and
cmp
mov
jecxz
sub
hlt
in
test
add
pop
push
xor
addr16
fdivl
mov
movsb
in
scas
mov
and
cmp
mov
call
aaa
inc
adc
or
or
sub
mov
mov
cmpl
mov
mov
xor
add
int3
push
repnz
ficoms
gs
jmp
add
inc
scas
out
push
cmpsb
out
out
fwait
bound
mov
orb
add
lea
fmul
jmp
add
into
adc
mov
dec
loopne
mov
add
int3
inc
or
inc
ljmp
out
mov
sbb
sub
sbb
dec
push
loopne
lret
adc
loopne
mov
add
int3
adc
out
inc
add
push
fsubr
stos
add
mov
sbb
fwait
outsb
add
add
mov
iret
stc
push
jne
clc
es
xchg
movsb
sahf
negl
pop
cmc
push
xchg
add
jmp
mov
push
jb
xor
inc
lock
add
add
jmp
jmp
scas
sbb
add
pushf
rorl
movl
add
or
flds
mov
mul
je
inc
flds
and
decl
shlb
mov
cmp
es
std
add
int
lcall
xchg
inc
imul
clc
add
sbb
sahf
xchg
stc
test
sbb
pop
pop
mov
mov
add
sbb
jg
js
pusha
inc
sub
add
int3
add
add
ds
and
inc
fdiv
adc
cld
icebp
std
int3
test
add
mov
call
test
incl
cmp
add
add
inc
xor
mov
add
hlt
mov
and
lods
imul
out
mov
stc
test
inc
sbbl
sub
fbstp
js
lock
out
ja
stc
mov
inc
inc
add
xchg
out
out
fisubrl
add
xor
insb
call
int
adc
mov
aas
fcomip
push
cmp
cli
sub
aam
mov
jecxz
ret
scas
cmp
stos
sbb
inc
push
and
pop
jg
mov
sbb
jecxz
ret
jg
aad
filds
call
aam
fwait
cltd
mov
sbb
sub
ss
pop
in
or
inc
sahf
enter
fldcw
add
or
stos
imul
clc
aad
ds
in
pop
mov
jmp
sub
pop
mov
cmovs
std
ret
inc
push
loope
std
add
inc
push
cld
hlt
jle
add
add
cmpsl
dec
scas
loope
int3
add
push
lahf
push
fsts
sub
push
cltd
push
lock
cmpsb
cmp
fistl
push
pop
out
shrb
mov
inc
jmp
lds
insl
sbb
leave
push
add
in
sub
push
mov
dec
sbb
mov
dec
add
sbb
jg
std
cmpsl
mov
enter
movl
pop
stos
jnp
in
out
aam
adc
pop
or
lods
stc
jne
aad
push
lods
or
mov
call
mov
jbe
ret
push
mov
outsb
stc
jne
aad
adc
pop
or
in
sar
adc
add
sub
add
lods
stc
call
std
pop
pop
add
dec
test
hlt
clc
lods
push
or
or
testl
add
mov
call
mov
icebp
pushl
sub
inc
cld
clc
push
cmp
or
xchg
lock
add
mov
add
scas
ss
sub
mov
sub
clc
and
sub
data16
push
mov
or
int3
cmp
sahf
fs
jecxz
shll
jg
shlb
adc
mov
jmp
adc
aad
xchg
fsubrl
xchg
clc
lret
jb
and
bound
dec
roll
sub
and
sti
mov
pop
fists
xchg
add
sahf
cld
adc
enter
jle
mov
aam
add
mov
mov
mov
popf
aaa
fisttpl
sbb
xor
push
push
adc
repz
dec
in
mov
cli
add
push
stc
xchg
cmpsl
movsb
cmc
sahf
jg
jle
cwtl
fidivrl
mov
jge
mov
dec
jb
dec
mov
in
pmaddwd
and
icebp
xor
in
fnstsw
inc
and
out
adc
mov
cld
nop
pushl
int3
mull
push
ja
mov
jg
sbb
pop
dec
lret
add
aaa
cmpsb
add
push
stc
decl
divb
sbb
add
add
dec
and
and
pop
call
push
iret
shrb
call
and
pusha
jg
add
xlat
mov
add
and
call
stos
rolb
orl
mov
and
roll
add
out
mov
push
cld
add
int3
jge
movsl
bound
or
imul
clc
outsl
adc
jge
and
cmpl
add
push
call
call
jl
add
call
cli
pop
cmpsb
cmp
popf
lods
shlb
pop
ljmp
push
cltd
push
jge
jmp
call
jge
cltd
inc
adc
dec
xor
in
or
shlb
in
cwtl
and
stos
enter
jnp
in
jnp
faddl
mov
out
test
int3
xchg
clc
js
rclb
call
js
adc
adc
out
fstps
cs
adc
aaa
iret
jle
out
in
int3
add
or
aaa
ljmp
mov
sti
ret
testl
add
add
ss
mov
jnp
lret
leave
out
bnd
pop
jle
les
out
dec
jl
push
push
xchg
lock
sahf
out
fwait
add
mov
add
in
pop
jle
dec
fcompl
test
mov
mov
rcr
js
mov
push
fldl
xchg
push
xor
js
push
add
jbe
call
pushl
call
orl
sub
dec
icebp
insb
idivb
adc
add
push
ljmp
test
push
pushf
div
sbb
inc
add
mov
test
push
in
outsl
lcall
imul
add
insb
and
insl
sbb
call
pop
leave
stc
je
les
call
pop
int
push
xchg
aam
in
or
add
movsb
dec
xlat
sti
push
movb
mov
call
andl
call
int
cltd
inc
inc
push
dec
dec
fdivrs
push
push
jp
adc
add
jl
test
es
mov
add
push
xchg
and
jmp
xchg
addr16
mov
dec
sar
xchg
xor
pop
int
xchg
xchg
aaa
push
addl
sarb
repz
stc
das
pop
pop
jmp
and
and
push
stc
mov
les
js
lret
arpl
cld
mov
cmc
add
incl
pop
jns
cld
lret
add
clc
in
xor
aas
add
jb
add
sub
xor
in
aas
sbb
inc
gs
xor
sbb
mov
or
mov
jmp
sub
idiv
mov
insb
push
dec
xor
and
add
xor
xchg
lock
int
add
push
insl
mov
push
xor
add
inc
xchg
bound
pop
push
out
call
jnp
inc
cld
lret
subl
or
add
inc
add
mov
add
sub
or
int3
add
mov
cmp
add
add
mov
adc
test
xor
dec
sbb
outsl
add
dec
shll
lcall
add
add
idiv
mov
inc
jmp
nop
fisttpll
cmc
ret
pop
cmpsl
mov
scas
std
lret
popf
sub
add
ffreep
jo
leave
jge
jmp
roll
jg
add
int
or
int3
pop
ljmp
hlt
call
adc
jae
ret
and
xchg
adc
adc
or
repz
cld
scas
pop
or
gs
xchg
xor
add
in
decl
inc
adc
lret
sbb
repz
pop
mov
ret
push
mov
fadds
icebp
movl
add
inc
and
xchg
adc
clc
ss
jl
sub
test
mov
add
add
sbb
test
sub
in
sbb
and
add
scas
mov
test
or
add
add
scas
add
lcall
sbb
mov
mov
loopne
jnp
hlt
out
repnz
jl
xchg
add
adc
pop
pop
stos
pop
pop
ret
add
xchg
add
shrb
lret
cmp
xlat
mov
push
cld
xor
jb
xchg
fsub
cwtl
mov
jbe
cmp
xor
mov
bound
ret
das
jae
jae
lahf
sti
iret
lcall
fistpl
inc
movsl
cld
test
add
xor
ret
or
stos
add
jb
mov
lcall
or
adcb
add
movb
pop
dec
add
add
sarl
jbe
mov
sub
dec
icebp
insb
adc
mov
jmp
rol
push
cld
lret
mov
testl
dec
out
xchg
mov
jne
add
jne
jo
outsb
loop
mov
arpl
jmp
jb
xor
xchg
xchg
cld
xor
jmp
lcall
dec
loope
push
cld
shll
jmp
out
gs
add
jg
shll
cli
ljmp
insb
or
lds
pusha
stos
or
scas
cwtl
sar
mov
les
xor
fldenv
rorb
inc
pushaw
enter
dec
jne
pop
cltd
test
push
dec
push
jp
push
mov
sub
rclb
mul
cmp
jne
mov
add
wrmsr
fdivrl
call
js
jl
mov
jnp
sbb
dec
dec
incl
push
mov
jnp
add
add
bound
ss
push
test
sbb
cmp
inc
lret
outsl
cld
insl
xchg
mov
pop
ficomps
jecxz
loopne
call
mov
add
add
push
mov
jp
add
inc
or
add
stos
mov
int
lret
mov
cmpl
add
cld
jl
push
mov
leave
sbb
mov
into
mov
cmpsb
iret
daa
dec
es
shll
pop
int3
bound
and
in
xchg
in
add
clc
jle
fnstcw
aam
ja
int3
pop
mov
add
in
js
push
cmp
jnp
das
mov
mov
stos
rorb
imul
or
sub
mov
sbb
lea
push
add
add
xor
jmp
ja
push
fisubrs
mov
sub
pop
add
or
push
add
mov
sahf
jg
stos
out
sub
pop
fsubl
add
push
aaa
dec
lahf
or
dec
add
inc
xor
jmp
add
add
and
cld
mov
adc
and
or
add
flds
out
sbb
xchg
and
sub
sti
push
lea
xor
pop
mov
xchg
mov
and
pop
data16
sub
mov
stc
add
add
pop
pushaw
shlb
fstpt
shlb
jae
stos
or
push
and
push
call
lea
adc
int
lea
or
ljmp
add
int
add
int
push
shrl
push
push
les
wbinvd
test
outsl
add
dec
mov
sbb
and
cli
dec
and
xor
add
decb
jecxz
cmp
ret
and
in
imul
xor
add
xchg
dec
add
in
fnsave
add
icebp
push
test
fnstcw
adc
cld
mov
or
mov
shll
push
jnp
xchg
mov
jae
sahf
cld
gs
adc
cs
mov
icebp
mov
repz
call
or
mov
test
outsl
in
add
push
data16
pop
int
add
add
stos
add
sub
add
daa
filds
add
pop
xor
daa
ljmp
jl
nop
and
add
in
arpl
je
jge
imul
mov
jmp
add
jle
cli
cmpb
xchg
fisubl
inc
and
out
or
testb
cmp
add
out
push
xor
insb
and
fs
jns
jle
sbb
rclb
jb
das
xor
pop
and
sub
add
jl
add
add
inc
cli
add
scas
cmpsb
jbe
sbb
imul
jmp
add
int
scas
divl
push
dec
int
xor
xchg
cmpsb
and
pop
lea
dec
test
mov
add
add
mov
imul
push
andl
sbb
add
rol
jge
cmp
mov
sti
incb
pop
dec
and
dec
mov
pop
push
dec
and
push
xor
or
stc
incl
or
jge
cmp
pop
adc
movsb
sbb
bound
and
add
fcmovne
add
dec
data16
test
inc
mov
pop
ret
and
push
shr
add
add
xchg
or
int
enter
add
or
pop
test
pop
mov
xor
adc
test
mov
stos
movsb
cmpsb
mov
pop
inc
xchg
inc
sub
notl
mov
inc
add
push
test
cli
fwait
add
mull
mov
add
add
icebp
lahf
push
call
iret
mov
jae
jp
mov
cmp
xor
mov
add
aam
pop
gs
xchg
inc
jmp
int3
ds
loope
sub
adc
mov
lahf
cld
push
xchg
lret
xchg
lahf
hlt
adcb
adc
pop
test
ja
dec
add
mov
add
lret
jmp
or
push
in
pop
inc
js
fiaddl
pop
jmp
je
decb
mov
dec
mov
mov
into
push
dec
cwtl
faddl
push
enter
jns
pop
sbb
push
ficoms
scas
mov
andl
or
mov
sub
je
fs
add
or
add
test
mov
pushf
adc
iret
test
insb
adc
jle
push
mov
dec
sarb
dec
adc
inc
lock
mov
pop
jns
push
jns
jle
outsl
addl
test
xor
cmc
insl
in
and
xchg
leave
jne
rcrb
push
push
pop
sbb
cmp
dec
mov
push
or
pop
push
mull
or
mov
jne
pop
push
mov
cld
or
fs
jl
mov
and
mov
xchg
les
push
cmp
fistpl
push
inc
cld
or
add
jns
call
push
add
jmp
jge
inc
add
cmpl
push
les
sbb
data16
dec
sub
xchg
stos
mov
arpl
add
dec
ja
add
cmc
fdivrp
adc
add
repz
push
inc
or
cmc
pop
adc
add
or
or
outsb
insb
mov
jno
pop
clc
dec
adc
xor
add
lds
insb
movl
in
sti
dec
ss
das
aad
int3
cmp
jge
hlt
enter
inc
int3
pop
ret
xor
adc
mov
pop
jle
ret
xchg
mov
cmp
and
inc
add
stos
push
das
push
pop
mov
push
ror
ret
rorl
addb
add
add
and
addr16
pop
xchg
pop
rorb
stos
sbb
out
sbb
pop
les
or
xchg
fldt
push
jnp
add
repnz
insb
les
mov
sahf
in
add
add
push
cmpsb
adc
xchg
pushf
arpl
rcrl
add
out
sub
pop
clc
mov
lock
arpl
rorb
stc
pop
mov
test
add
cmp
mov
cmp
mov
test
cmp
or
jl
sbb
imul
inc
adc
xor
jae
insb
or
scas
pop
mov
add
fldl
add
mov
mov
loopne
adc
fldl
adc
add
add
inc
std
mov
decl
inc
pop
sbbl
jne
adc
int3
int3
adc
pop
int3
int3
jl
in
push
outsl
jnp
jge
xlat
int
add
sub
pop
stc
fwait
push
arpl
lods
dec
adc
out
add
add
mov
adc
add
add
or
inc
lret
test
sub
jp
ds
sbb
lock
sub
jl
fcoml
shll
ds
push
jge
xor
push
mov
call
jns
xor
mov
add
sub
pop
cmpsb
add
push
add
xlat
insb
mov
push
add
lock
dec
cmp
mov
lret
jb
inc
xor
mov
fisubs
or
add
int3
call
adc
mov
scas
mov
mov
das
push
cwtl
inc
or
push
sti
jne
mov
adc
jb
adcb
mov
iret
scas
push
mov
int3
call
add
or
mov
sub
mov
lcall
push
mov
cmp
es
dec
lidtl
sarl
std
inc
ret
jmp
sbb
fisubrs
add
add
inc
add
subl
xchg
insb
lret
adcb
setns
push
xor
push
add
mov
clc
lea
sub
int3
mov
push
push
inc
or
mov
shrb
rorl
lods
pop
insl
in
mov
sub
aad
jge
cmp
pcmpeqb
xchg
fsubrs
push
fdivrp
je
loope
push
sbb
lea
test
in
push
mov
call
add
add
les
push
mov
out
jge
lds
push
push
jne
cwtl
iret
xchg
shr
inc
sbb
into
add
mov
xorl
pop
sbb
clc
lret
sub
fdivr
push
loop
sub
stc
movsb
pop
jae
add
ret
pop
inc
or
mov
mov
push
call
jnp
adc
add
int3
jg
or
in
insb
sbb
xor
dec
dec
fcoms
pop
add
and
call
jne
adc
in
xor
ja
lock
cwtl
jmp
add
pushf
dec
xor
pop
std
jns
scas
lret
pop
ret
aaa
ror
ffreep
lret
dec
out
lret
inc
scas
dec
sub
cmp
test
data16
mov
inc
or
mov
lret
jb
add
inc
scas
cld
cmp
fcmovnb
cmpsb
jmp
add
int3
fs
int3
sub
push
dec
ljmp
inc
push
add
int3
jo
mov
jmp
mov
mov
jl
cmp
add
leave
dec
xchg
jno
sub
push
in
add
int3
jo
adc
sub
xchg
add
mov
jg
sarl
pusha
dec
fadds
cmp
enter
add
jae
mov
or
rclb
mov
sahf
mov
out
pop
push
push
imul
adc
lock
test
push
add
jmp
push
mov
xor
cmc
sbb
insb
add
add
imulb
sbb
stos
push
shrb
stos
mov
xor
push
das
mov
add
out
imulb
sbb
add
sahf
cld
sub
stc
cmc
xor
bound
sbb
add
popf
pop
clc
lcall
cwtl
pop
je
jl
mov
rcrb
mov
sbb
add
xchg
jge
dec
cltd
mov
out
lret
add
les
ljmp
pop
rcll
or
icebp
add
cmovg
add
inc
std
xchg
inc
dec
sbb
je
and
inc
and
mov
jns
jge
add
loope
xor
dec
push
mov
xchg
insb
push
cld
arpl
insb
mov
test
push
icebp
mov
push
testb
mov
jne
mov
mov
outsb
cld
scas
mov
je
and
push
pop
jnp
orl
stc
data16
rclb
xor
das
mov
mov
test
and
add
adc
ljmp
lret
jmp
add
inc
ljmp
lret
jmp
ret
in
add
int3
rol
xchg
out
ret
or
sarb
jge
arpl
cmp
mov
inc
and
pop
add
push
dec
mov
icebp
lret
jmp
push
lea
adc
jnp
les
add
stos
ljmp
ljmp
cltd
ljmp
inc
sbb
bound
fwait
adc
sub
pop
pop
adc
xchg
add
push
bound
or
popf
add
add
or
popf
fwait
in
out
shlb
lahf
mov
decb
mov
add
jmp
add
or
cmp
cmp
int3
mov
pusha
dec
aaa
push
ret
mov
add
and
mov
adc
incl
mov
std
sbb
sub
cwtl
iret
add
imul
stc
test
mov
cmc
rol
and
push
ja
in
pop
iret
jge
cmp
mov
dec
cmp
and
lcall
and
flds
jge
add
dec
mov
mov
into
add
fxch
add
push
rcll
cmpsb
add
ret
shlb
fs
mov
push
add
dec
call
mov
pusha
test
movsl
mov
call
mov
xor
sub
testl
roll
ret
cmpsl
shll
lcall
fdivr
bnd
add
out
dec
scas
mov
jns
xchg
lods
and
push
push
sti
lahf
cmc
out
bnd
cmpl
xcrypt-ctr
cmpsl
pop
stc
xlat
or
and
es
loope
ret
das
mov
mov
mov
jge
jg
les
scas
mov
ljmp
into
filds
int3
fisubl
add
adc
rcll
jbe
dec
mov
inc
ret
ds
xorb
inc
cs
xchg
int
push
test
jb
pushf
inc
js
xor
shrl
pop
into
sbb
or
sub
out
test
jge
test
add
add
lahf
and
lock
dec
sub
daa
orl
mov
sub
jge
pop
mov
daa
fadds
mov
add
clc
jmp
mov
call
push
enter
mov
push
ret
addb
xchg
xchg
jno
psubsw
dec
aas
mov
int3
pop
ds
dec
popl
lcall
add
add
add
add
addr16
mov
cmpsb
pop
mov
add
xchg
cwtl
popf
lret
add
test
and
idiv
imul
mov
stc
mov
add
push
or
push
pop
jbe
xrelease
data16
mov
lret
add
sbb
mov
mov
add
lret
add
fdivs
jge
insl
loopne
sbb
add
dec
out
add
jae
dec
mov
pop
ljmp
lcall
ds
dec
mov
popa
sbb
xor
fidivs
dec
sub
pop
test
notl
sub
cmp
mov
bound
add
dec
add
add
add
add
insb
jnp
sub
int
jne
mov
and
std
xchg
int
pushl
in
inc
push
int3
jo
cmp
xor
sbb
add
int3
jb
arpl
inc
jge
xorl
test
jb
add
popa
add
lret
add
lret
jmp
add
add
jb
mov
push
xor
loope
sub
add
lods
jp
lret
mov
jg
movntq
addb
jp
shr
in
add
dec
int3
sub
cmpsb
jae
jmp
and
mov
mov
clc
mov
ret
xorl
int3
pop
insb
xchg
adc
sahf
inc
jb
test
int
mov
add
jmp
ja
mov
mov
mov
dec
inc
inc
add
push
in
jmp
add
add
push
xchg
dec
stos
push
jmp
lcall
lods
sub
add
and
das
dec
add
xchg
or
sbb
pop
ret
push
cwtl
push
jmp
test
push
push
jo
xor
cmp
arpl
add
pop
mov
pop
add
mov
les
mov
add
aad
stc
mov
xchg
pop
ret
in
inc
int3
int3
or
inc
int3
int3
xchg
test
push
add
xor
ljmp
iret
jge
add
je
fdiv
incb
cmc
jo
mov
fcompl
add
test
addl
jp
cmc
in
sbbl
add
in
adc
add
repz
testb
cmp
cmp
insb
mov
xor
mov
lret
add
sbb
call
ljmp
into
xor
inc
enter
rcrl
add
insl
sub
test
xor
mov
jns,pn
mov
lret
jb
lods
jno
daa
mov
mov
ljmp
jo
gs
dec
sub
lds
fisttps
ljmp
lcall
mov
cmp
imul
pop
push
and
in
ljmp
push
or
fisubl
fdivl
repz
or
push
jg
leave
mov
subl
fisubrl
aas
or
sbb
imul
jp
add
add
mov
lahf
dec
aas
test
insb
xchg
push
mov
fiaddl
jmp
jge
js
mov
mov
fiaddl
jmp
add
add
testl
fildl
jmp
lods
shrl
jmp
cltd
or
out
pop
and
inc
int3
pop
call
add
test
pusha
std
call
bound
clc
mov
fnstcw
scas
add
fnsave
add
fisttpl
mov
adc
pop
push
bound
xor
add
sbb
add
jmp
call
add
test
lds
mov
push
je
adc
mov
cmpsl
jg
mov
aas
add
jl
xlat
test
dec
pop
and
dec
cmp
dec
adc
mov
pop
les
sbb
fs
or
push
add
add
add
cmp
mov
and
inc
cmpsb
imul
imul
add
scas
push
js
mov
push
or
push
insb
ss
add
cmc
add
inc
push
incl
cmc
adc
mov
or
stos
repnz
sub
and
push
in
call
mov
mov
call
add
cmc
adc
or
aam
roll
stc
dec
jnp
add
bound
push
mov
jle
icebp
loopne
pop
mov
daa
push
arpl
in
orb
fucomp
add
add
dec
mov
xchg
sbb
add
add
pop
mov
ljmp
adc
jmp
movsb
adc
jmp
inc
adcl
pop
test
jmp
inc
push
sbb
lret
shlb
iret
push
jmp
mov
andl
lahf
in
dec
pop
push
pop
call
xlat
xchg
add
dec
cs
add
cmpsl
add
jl
push
push
addl
xchg
add
aas
mov
mov
out
mov
incl
int3
mov
fiaddl
jmp
pop
mov
jmp
add
mov
xchg
add
clc
out
jne
pop
call
add
test
in
xchg
add
jg
add
insb
loop
jne
imul
add
imul
push
mov
sub
jae
mov
push
test
or
cmc
leave
repnz
dec
mov
push
dec
mov
add
pop
or
mov
and
mov
fadd
cmp
clc
pop
cmove
pop
pop
sub
negb
mov
add
fistpll
or
push
dec
cmp
es
add
ret
loop
or
mov
subl
xchg
mov
pop
adc
and
pop
into
jge
push
lds
ror
inc
mov
ror
xor
mov
push
cmp
mov
outsb
push
je
icebp
add
xlat
hlt
dec
and
and
dec
int
aad
ds
cmp
hlt
add
aaa
incl
test
jge
sahf
or
sbb
add
or
fs
jmp
or
sub
sub
or
xchg
jmp
add
rclb
fdivl
xor
shlb
pop
lds
push
xchg
rclb
push
dec
sub
int
xchg
imul
out
xchg
push
lret
test
or
movsb
call
push
add
cmp
inc
lds
cmp
roll
xor
sub
push
outsb
into
or
pop
call
xchg
aam
xor
aam
aas
sub
cmp
ss
mov
outsl
lods
ret
add
add
mov
add
cmp
ror
mov
mov
lret
add
xchg
mov
xchg
add
pusha
bound
mov
jb
push
mov
rolb
clc
bound
psubsw
push
std
repnz
mov
xchg
jae
scas
add
lods
sbb
fwait
das
test
add
add
call
mov
pushw
mov
add
imul
shlb
push
cwtl
push
pop
int3
roll
add
add
add
sub
mov
adc
jge
ret
dec
push
push
inc
cmp
pusha
adc
jmp
xlat
inc
mov
adc
cwtl
mov
shl
popf
jns
idiv
pop
enter
outsl
xchg
mov
add
jge
jb
add
add
xchg
lret
mov
hlt
add
xchg
xor
dec
add
repz
or
cmpsl
cmp
lods
std
mov
mov
pusha
data16
mov
rcrb
in
enter
or
xchg
or
cmp
push
jb
adc
push
ja
out
vaddpd
mov
pop
ret
jno
or
movsl
xorb
int3
jmp
dec
push
dec
mov
add
add
sbb
or
add
and
add
mov
std
mov
dec
sahf
xrelease
jbe
test
mov
cmp
pop
sub
dec
nop
mov
mov
jb
les
pop
add
sbb
or
xchg
jno
sub
lcall
add
add
add
add
push
rcpps
scas
pmuludq
testl
add
cwtl
push
stos
mov
adc
sbb
icebp
dec
push
js
sbb
dec
notl
addl
jmp
call
pop
mov
scas
jecxz
add
add
loopne
push
popf
testl
inc
xor
add
mov
filds
int3
mov
fiaddl
jmp
lea
call
test
fxch
bound
insl
outsb
xchg
add
enter
push
dec
je
jge
xchg
test
jne
add
aaa
das
xchg
mov
idiv
aam
jge
std
dec
js
push
dec
cmp
fldl
pop
divps
inc
or
pop
lock
enter
std
push
cmp
cmp
adc
adc
dec
dec
ds
mov
ret
mov
rolb
xchg
iret
add
add
add
mov
push
xor
std
adc
add
test
and
insb
jnp
add
test
add
in
inc
adc
jmp
add
data16
aam
mov
addr16
ja
outsb
cmp
movsb
jmp
push
movsb
push
add
push
aaa
xor
sbb
ss
mov
add
sbb
movsl
in
cli
jb
jne
stc
add
dec
mov
call
int3
jmp
mov
mov
add
add
mov
aam
repz
bound
in
rcrl
lcall
mov
pop
cmpsb
dec
pop
xor
sub
pop
lret
or
jmp
int
dec
adc
inc
add
push
clc
push
add
int3
push
or
out
out
ret
add
add
jmp
add
stc
push
fs
add
js
cld
lret
imul
addl
les
lret
stc
imull
faddl
pop
mov
addl
xor
into
shl
push
jb
xchg
ret
dec
dec
add
push
aaa
pusha
leave
testl
xchg
push
ret
jge
dec
add
int3
add
add
sbb
js
add
add
roll
jb
push
add
xchg
add
lods
mov
outsl
cmc
roll
negb
jp
adc
mov
in
cld
jl
mov
jge
in
jns
or
les
or
mov
jl
lods
ja
or
test
int
add
mov
mov
jns
adc
mov
popf
hlt
testl
lods
jns
or
mov
add
add
hlt
jl
popa
add
imul
or
out
test
pop
cmp
int3
add
sub
pop
add
gs
xchg
jecxz
incb
add
add
add
jnp
cld
xchg
std
pop
in
jns
adc
das
cld
sar
idiv
pop
stc
enter
cld
incl
or
incb
cmpsl
in
dec
in
xor
sub
int
add
lock
jecxz
into
mov
mov
into
mov
mov
into
cmpl
add
xchg
loope
adc
call
idivl
add
in
mov
popa
add
int
idivl
add
loopne
inc
add
inc
sti
cwtl
int
cmp
ficomps
adc
cmp
jg
stc
add
bound
add
xor
jl
icebp
jnp
ret
call
xchg
jmp
lret
push
and
add
push
jg
jmp
loopne
incb
in
pop
test
std
call
sub
testl
rcl
cmpsl
pop
push
dec
in
pushf
or
lds
out
push
aas
std
test
jmp
and
fstl
jno
lds
xchg
iret
push
inc
int
mov
aaa
lods
dec
add
mov
nop
js
or
les
aas
mov
pop
jmp
mov
jmp
cmpsb
mov
inc
add
add
movsb
iret
add
mov
divl
add
leave
add
xchg
ja
ljmp
pushf
and
sbb
mov
xlat
dec
lock
pushf
int3
jge
adc
and
pop
or
andps
mov
adc
xor
psubusb
loop
jne
cmp
cmp
mov
out
sbb
pop
pop
mov
pavgb
or
add
add
mov
les
pop
enter
dec
xbegin
int3
adc
mov
xor
mov
ja
or
insl
cltd
xabort
loop
add
loop
xchg
xor
addb
add
cmc
add
test
mov
hlt
insl
xor
ss
add
cmp
add
sti
sub
jb
jge
sbb
outsl
and
sub
or
xor
or
and
dec
rcl
xor
cld
decl
dec
xchg
int
inc
sub
test
aas
or
jb
in
and
test
jb
clc
inc
out
jl
loope
push
repz
add
stos
jb
in
jbe
adc
lahf
and
push
jae
or
movsb
pop
add
js
fcom
ret
rol
aas
inc
mov
cmp
mov
jmp
jns
shlb
loopne
sub
adc
cmpsb
inc
loopne
jmp
das
or
jbe
sub
jge
add
add
rolb
insl
into
repnz
enter
daa
add
jb
in
iret
and
int3
insb
lock
outsl
hlt
cwtl
xorl
inc
orb
xor
cltd
nop
add
mov
mov
mov
cmp
andl
adc
les
aaa
in
inc
icebp
sub
or
inc
fdivrs
xor
in
add
jge
push
dec
jo
imul
add
add
sti
jl
popa
shlb
push
mov
add
mov
fwait
decb
sbb
dec
jp
push
testb
pop
jmp
or
mov
add
or
lahf
clc
jb
push
mov
addl
mov
int3
jno
xor
or
fucomip
hlt
roll
mov
call
jns
or
icebp
sbb
clc
mov
inc
or
add
and
sbb
mov
idivb
jns
sbb
mov
jnp
or
adc
pop
push
cmpsl
sbb
xchg
daa
loop
test
idivb
in
inc
sbb
and
xor
cmp
test
push
mov
push
adc
sub
add
add
push
add
pop
clc
pusha
add
add
loope
jae
push
sbb
int3
popa
sbb
js
jge
fsubrs
xchg
mov
clc
adc
shll
out
mov
rcl
xor
mov
clc
lock
sub
xchg
loope
mov
push
add
int3
jmp
inc
adc
movlps
sar
add
mov
lahf
adc
inc
xchg
push
add
jmp
dec
sbb
mov
dec
adc
mov
roll
sub
jge
xchg
lds
int3
add
enter
dec
ds
pop
test
lahf
ret
xchg
test
fildl
into
mov
or
cmpsl
sar
mov
push
ret
or
ficoml
pop
outsl
clc
in
rcrl
add
rcl
das
lret
push
xor
outsb
les
mov
stc
jae
int3
add
js
xchg
rorb
jnp
negl
enter
push
cs
test
fnstcw
cmpl
add
outsb
mov
and
dec
out
lcall
clc
lcall
leave
add
ljmp
negl
adc
andl
repz
jle
les
fidivrs
movl
mov
leave
push
or
dec
lock
inc
in
cmc
jmp
fwait
idiv
add
insb
imul
jecxz
mov
jecxz
add
mov
add
add
ja
push
cwtl
push
add
bound
testl
aad
jmp
inc
adc
xor
sahf
adc
out
aaa
inc
inc
jns
dec
mov
dec
rorb
push
add
add
bound
sub
imul
xchg
push
lea
add
out
mov
jmp
mov
enter
sub
sub
jmp
add
push
push
cwtl
jmp
ds
push
stos
inc
add
mov
fimull
jmp
orb
add
lock
popa
add
int3
daa
lock
and
adc
shll
pop
int
lock
add
add
and
js
shll
pop
int
out
clc
and
js
aam
popa
lock
xlat
shrl
cmc
pop
xchg
or
rolb
scas
xlat
shrl
aad
xchg
or
rolb
xchg
shrl
cmc
sbb
add
nop
shrl
aad
xchg
or
rolb
pshufw
testb
add
add
lds
or
call
xchg
dec
in
divl
mov
fs
fs
pop
imul
icebp
or
scas
pop
jg
ficoms
or
icebp
int
jg
int
test
inc
mov
inc
mov
stc
push
mov
pop
ret
roll
dec
inc
cltd
mov
xchg
or
pop
ret
add
add
pop
in
push
and
inc
cld
push
adc
test
add
or
fimull
in
sub
push
mov
jge
cmp
sbb
push
je
loopne
sbb
add
jnp
pop
lcall
and
jle
cld
mov
or
add
add
daa
adc
add
xlat
mov
hlt
pop
imul
incl
repz
lock
pusha
adc
mov
inc
cmp
or
cld
incl
jbe
adc
cli
mov
repz
pop
loop
insl
add
add
or
adc
xchg
std
incl
jbe
sbb
repnz
repz
lret
icebp
cmp
push
movsl
pop
test
arpl
fadds
jmp
roll
xor
test
movsl
pop
test
pusha
popa
lock
add
int3
sbb
iretw
pusha
push
xor
sarl
jl
out
add
dec
test
dec
mov
and
mov
in
lret
jmp
lock
add
add
mov
pop
loopne
add
int3
xchg
negl
lret
scas
sbb
or
in
mov
inc
push
aas
lods
jl
sub
lods
push
xor
sbb
nop
subl
and
jmp
out
mov
jmp
mov
add
mov
movsb
xchg
mov
xchg
xchg
idivl
add
int3
andl
push
or
jmp
test
fs
jmp
call
mov
roll
into
dec
add
push
dec
or
inc
movsb
push
jmp
test
popa
ret
add
pusha
cmp
push
leave
add
daa
xchg
sbb
add
decl
imul
cs
ret
add
add
inc
idiv
test
in
dec
inc
cltd
xor
in
and
stc
test
or
sbb
adc
ljmp
imul
add
mov
pop
add
ror
cmp
ror
xor
mov
mov
add
roll
ds
mov
sbb
and
xchg
test
or
or
mov
std
xchg
add
add
pop
sub
jns
jecxz
xor
test
lods
cmp
add
add
xor
int3
sub
add
outsl
repnz
xorb
add
ss
push
lret
fcmovb
test
and
mov
jbe
jmp
iret
cmp
adc
add
sub
or
stc
and
xchg
shll
mov
pusha
push
sub
out
xchg
dec
jecxz
mov
cwtl
loop
mov
add
mov
stos
push
xchg
or
xor
xor
sbbl
dec
jp
cmp
fdivrs
add
fisttps
xor
into
push
clc
dec
add
add
std
imul
in
xlat
and
jmp
cmp
adc
aam
insb
mov
inc
adc
sbb
inc
adc
mov
int3
add
adc
jecxz
sub
mov
scas
push
and
jmp
rclb
lds
nop
xor
add
loop
jmp
andl
push
repnz
or
lcall
pop
add
mov
pop
in
and
aad
mov
loop
mov
sbb
sub
scas
les
sub
pop
add
enter
les
and
cmpsb
jg
cld
inc
and
pop
test
or
bound
push
pusha
lahf
adc
push
subb
fldenv
stc
jmp
add
jge
rcll
mov
shrl
or
pop
roll
cltd
int
pop
adc
dec
pop
add
mov
mov
dec
xor
add
push
pop
add
add
shlb
aas
enter
add
leave
lret
dec
rolb
in
jne
xor
sbb
add
jne
xchg
outsb
dec
and
pushf
test
incl
mov
xchg
testl
add
mov
ss
or
or
add
jmp
mov
fwait
pusha
inc
and
xor
and
in
mov
dec
add
adc
mov
repz
push
add
bound
call
mov
pop
inc
mov
notb
bound
rclb
mov
pop
fadds
jg
inc
mov
push
mov
jge
in
push
xor
stos
xchg
jl
add
adc
mov
cld
push
mov
push
mov
push
dec
hlt
add
int3
add
mov
lods
clc
inc
ja
flds
add
add
mov
das
push
xchg
ds
es
daa
push
fcomip
jmp
cmp
je
cld
push
mov
sbb
sbb
adc
sbb
repz
pusha
in
mov
shr
and
jns
outsb
in
insl
insl
rolb
jmp
or
fiaddl
int3
and
pop
or
movl
jmp
add
movb
test
mov
inc
adc
mov
push
loop
cmp
mov
push
rcrb
jg
xchg
push
dec
loopne
popf
fadds
sub
add
jns
add
jle
subb
add
adc
roll
lret
push
push
push
add
dec
cli
adc
out
jge
leave
or
shlb
cmc
insb
adc
ss
jg
add
adc
fnsave
or
push
stc
jle
testb
jns
gs
pop
dec
add
test
mov
mov
push
mov
ret
push
call
jnp
mov
pop
pop
aaa
sbb
cmp
add
repz
sbb
or
and
aas
scas
or
add
add
inc
ret
scas
clc
divl
inc
clc
repz
andnps
mov
rorl
shll
jmp
cmpl
loope
das
push
push
movsl
or
ret
mov
lods
pop
int3
jmp
stos
add
cmpb
push
add
or
orl
cli
jle
lds
fsubr
add
lret
add
je
stos
lea
loope
mov
test
call
cmp
incb
xchg
and
shl
test
add
add
mov
aam
js
int3
add
les
test
insb
push
adc
add
mov
add
add
push
insl
push
lret
add
cld
sbb
mov
sahf
rorl
push
lret
jb
jnp
adc
roll
fs
pop
sbb
mov
lret
insb
testb
aam
lret
jmp
jb
lods
jge
xor
mov
ret
icebp
or
adc
int3
add
rorb
add
dec
pop
in
and
add
into
jge
add
sbb
and
cmc
ljmp
fldl
sti
dec
jnp
pop
iret
jl
cmp
add
iret
int3
stc
dec
xchg
inc
lret
mov
xor
clc
sub
je
cmp
rcrb
inc
adc
int3
add
or
inc
mov
add
cmp
fisttps
add
data16
ss
mov
lahf
xchg
outsb
cmp
push
adc
lea
add
or
fsubrs
stos
hlt
cld
xchg
jecxz
in
lods
movlps
add
cmp
clc
mov
js
xor
aas
jge
out
jl
repz
addb
test
cmp
add
add
loopne
mov
ds
popa
dec
adc
int3
jmp
add
jnp
call
jmp
xor
jno
jmp
lahf
or
jl
int3
jmp
dec
sbb
out
add
jmp
pop
add
insl
and
fcmovu
ss
gs
jg
gs
or
jmp
inc
add
aas
lea
incl
lods
dec
add
negl
jle
stos
jo
rorb
sub
nop
stc
add
fsubr
aaa
cli
inc
adc
loope
flds
jbe
sbb
add
mov
add
outsb
lds
mov
or
add
mov
int3
out
cmpsb
add
lret
cld
call
add
add
mov
frstor
outsl
in
adc
rcr
push
dec
or
lea
pusha
jge
clc
lahf
mov
and
dec
std
inc
test
mov
mov
int3
and
movl
fmull
mov
fcoml
xor
dec
jmp
adc
add
notl
lret
xor
mov
dec
mov
push
push
add
inc
add
test
mov
inc
insl
iret
shrb
es
jg
popa
dec
jns
pop
lret
adcl
es
add
pop
lret
push
lret
jbe
adc
xor
add
movsl
inc
clc
incl
in
jp
in
test
fiadds
add
shll
inc
add
jns
adc
dec
and
mov
test
jp
lods
push
inc
inc
or
in
punpckhdq
mov
mov
inc
inc
push
clc
orl
adc
je
xchg
or
cld
adc
std
incl
ja
test
push
sbb
cltd
cld
jnp
movsb
xchg
mov
int3
dec
cld
add
mov
jl
rcr
mov
jmp
inc
loopne
stos
cmp
or
jmp
add
int3
jmp
add
fstpl
add
dec
jb
add
push
mov
jmp
sub
lret
fidivs
mov
jb
loopne
movsl
cmpsl
orb
in
test
fs
rclb
pop
sub
and
scas
rorb
sub
aam
icebp
stos
mov
loop
xlat
jb
push
mov
jmp
testb
mov
bound
push
sbb
mov
int3
mov
mov
add
add
adcb
inc
jle
out
into
add
add
add
push
jb
lods
jge
out
int3
mov
jmp
add
add
cmp
int3
insb
lods
adc
pop
dec
inc
pushf
jmp
das
rolb
fidivrs
add
mov
and
mov
dec
ret
jp
add
cli
adc
add
mov
mov
in
sti
xchg
and
inc
leave
dec
mov
add
out
push
dec
adc
daa
incl
aad
push
and
mov
add
into
add
mov
push
adc
into
jge
mov
push
clc
and
rolb
into
add
lock
add
imul
jge
into
or
ljmp
ds
cld
xchg
sbb
fadds
pop
mov
add
inc
and
add
add
jnp
ret
out
and
push
out
test
out
xchg
jp
adc
cld
add
aas
out
or
ljmp
cmp
add
mov
cld
xchg
jp
rcrb
clc
inc
loop
pushl
cmpb
in
xor
add
add
clc
add
pop
add
jmp
das
adc
mov
lahf
in
cmpsb
add
int3
jmp
add
dec
mov
popf
movsl
xchg
add
ljmp
lret
jg
jmp
stos
dec
shlb
jmp
xchg
ret
jo
enter
mov
add
lahf
test
movsl
cmpsb
dec
or
xchg
add
add
cmpsl
fs
inc
mov
les
cs
add
add
ljmp
rol
fcomi
into
xchg
out
inc
lret
adc
add
insl
add
mov
call
test
into
mov
jmp
xor
add
jle
or
inc
int3
mov
jmp
jns
call
add
int
divl
push
loope
roll
aad
mov
add
jl
popf
iret
mul
adc
negb
sub
andl
jle
jno
fadds
repnz
ss
and
cs
mov
or
jle
and
jge
int
inc
push
sub
add
movsl
pop
std
lcall
or
sldt
add
add
lret
add
jne
mov
rolb
cld
and
jb
bound
jg
xor
or
xor
jg
cmc
dec
mov
and
dec
dec
hlt
adc
mov
and
cmp
add
js
aaa
cld
sbb
mov
mov
popa
mov
sub
add
addl
insb
add
pop
pop
and
bound
cld
add
ja
cli
in
or
test
adc
mov
sar
inc
clc
add
jge
push
ror
test
jp
jle
in
add
push
xchg
add
in
pop
mov
mov
and
add
xchg
add
dec
mov
xchg
int
jp
push
out
int
addl
add
add
fiadds
inc
test
add
jmp
add
inc
pop
sbb
jge
xor
loopne
js
lret
push
sub
or
adcl
add
mov
test
stc
mov
push
bnd
aam
lret
insb
into
ljmp
adc
test
movsl
add
cmp
ss
sub
cmpsb
add
or
add
outsl
jb
and
add
add
jmp
clc
sub
bound
jns
or
lret
xor
adc
aas
inc
push
mov
sahf
inc
cmp
int3
add
mov
movsb
mov
faddl
jmp
mov
push
cmpsb
add
add
add
adc
ss
add
jmp
add
cld
lret
mov
push
fldcw
jge
lret
lret
testl
sahf
fldl
add
or
outsb
out
orl
add
and
dec
mov
sbb
dec
movsl
pop
push
ret
loop
jbe
sbb
mov
scas
mov
jge
rorb
test
idiv
es
in
jl
mov
dec
add
or
fdivrs
dec
jo
dec
xor
lods
mov
in
jl
cwtl
decl
jle
sub
hlt
jns
rorl
mov
or
or
shl
jmp
jns
sub
inc
aas
gs
inc
sbb
cmp
jg
imul
hlt
add
add
add
add
pop
cld
add
add
outsb
mov
dec
sub
scas
int3
and
mov
add
std
js
movsb
xor
aas
fucomi
mov
cbtw
and
xor
or
out
cmp
sarb
dec
add
into
jo
movsb
push
movsb
scas
and
jmp
int3
jmp
lods
add
fcoms
jle
es
sub
leave
push
fs
jg
shr
add
sub
mov
lods
bound
push
imul
int3
mov
cmp
add
xchg
push
dec
mov
lea
test
cld
cmpb
xchg
inc
jnp
add
mov
cmc
jmp
add
pop
lahf
add
ret
xchg
rorl
adc
or
imul
mov
fidivrl
pop
dec
ret
push
inc
test
sqrtps
inc
ret
div
push
mov
stc
mov
add
add
mov
adc
mov
cs
enter
add
add
mov
inc
adc
ljmp
clc
sbb
cwtl
sub
jno
es
jne
gs
jae
bound
pop
add
fidivl
das
push
orl
or
dec
mov
add
lret
mov
sbb
mov
inc
dec
in
inc
call
mov
sti
inc
imul
mov
lcall
inc
inc
dec
add
sub
sbb
fldl
mov
sti
mov
push
push
push
add
jp
add
xor
push
cmp
mov
mov
inc
pop
test
data16
jl
sbb
fadds
or
add
ret
add
add
ljmp
xor
cld
incb
jg
std
push
mov
arpl
add
mov
test
sub
call
jns
in
test
lret
in
xchg
loop
nop
pop
addb
jmp
xor
push
xor
jl
mov
push
or
call
shrb
decl
or
push
les
lods
aad
outsl
add
int3
jmp
add
lds
mov
add
bound
sub
add
sbb
addr16
add
mov
mov
pop
jae
js
mov
push
ds
and
hlt
xchg
das
inc
jge
add
movl
call
data16
into
xchg
loopne
inc
and
int3
add
add
xchg
loopne
inc
sbb
sub
andl
jp
jo
sarb
jne
shr
int3
test
decl
jmp
inc
lods
or
lahf
pop
aas
cmp
jns
ljmp
add
add
ror
jp
frstor
and
in
add
pop
add
mov
add
mov
push
inc
hlt
pop
jo
push
pop
hlt
rcl
jno
xchg
leave
mov
push
hlt
add
iret
or
dec
push
dec
faddl
cmc
inc
lcall
in
sbb
lcall
sbb
subl
jg
adc
push
ret
or
mov
xor
mov
jle
add
sbb
xor
sbb
jbe
mov
mov
orl
jnp
ret
out
mov
movb
leave
adc
mov
in
inc
mov
cmp
mov
sub
push
add
add
push
xor
adc
mov
clc
lahf
stc
mov
add
add
inc
or
je
fstpt
test
add
add
jl
mov
cmpsb
add
lret
jmp
xchg
pop
fstps
adc
add
push
adc
xchg
jmp
pushf
dec
shlb
lods
sub
call
adc
mov
into
shr
mov
adc
add
sub
inc
or
test
push
and
dec
inc
push
pop
lret
in
lret
jmp
add
push
cmpsb
cmp
popf
or
lea
jl
lcall
sub
cld
jge
jo
mov
scas
adc
push
rolb
scas
xchg
add
add
scas
jmp
push
cmc
bound
loopne
mov
leave
add
pop
ret
add
loopne
cmp
sbb
or
int3
andl
jge
jo
mov
test
or
jmp
mov
cwtl
pop
jg
dec
inc
inc
sti
jge
ljmp
add
add
rorl
jg
fldl
mov
mov
icebp
push
dec
hlt
sub
add
push
mov
add
aad
dec
jne
inc
hlt
add
decl
cmpsl
mov
rolb
jno
stos
jecxz
add
inc
aaa
add
int3
or
mov
fdivrl
cmc
inc
fiaddl
inc
in
sbb
idiv
fxch
adc
and
jg
push
adc
ret
or
mov
test
shlb
push
mov
xchg
or
mov
xor
push
or
scas
js
test
mov
add
jnp
ret
out
scas
push
movb
rcll
lods
in
orl
pop
sub
or
hlt
mov
add
jae
jae
jmp
add
add
jbe
xor
aam
xor
jge
lods
mov
test
getsec
clc
inc
stc
test
mov
aas
jge
lret
icebp
mov
ret
ljmp
push
xchg
dec
test
jmp
in
adc
les
sahf
mov
int3
outsb
mov
add
jmp
xchg
daa
int
dec
push
mov
add
push
push
inc
int
pop
dec
and
add
call
cmpsl
loope
add
int
push
add
mov
mov
push
int
ret
test
pusha
ds
and
xchg
ljmp
inc
inc
adc
lahf
cmp
adc
mov
pushf
rorl
jb
or
adc
mov
leave
mov
cmp
inc
fnstcw
aad
dec
dec
cmp
bound
mov
inc
inc
mov
mov
mov
cld
inc
cmp
jle
mov
in
out
or
testb
cld
add
add
mov
jp
test
enter
jo
dec
test
adc
mov
add
lock
ljmp
js
pop
lds
pop
enter
test
movsb
fcompl
lcall
add
enter
push
dec
cld
mov
dec
rorl
cld
clc
add
dec
stc
and
cmpb
inc
lock
add
add
mov
inc
loopne
jae
xor
mov
inc
sub
in
cmpb
sub
adc
stos
popf
movsb
add
add
movsl
mov
or
xor
mov
xchg
xchg
cmpb
mov
cmp
loopne
out
sbb
inc
cs
mov
mov
out
and
and
ret
out
movsl
ret
pushf
pop
or
out
roll
dec
inc
movsl
test
xor
icebp
test
cmpb
cld
xorl
add
mov
pop
subb
sbb
ds
push
jb
add
fimuls
mov
cmp
and
add
pop
in
cltd
ret
aas
mov
call
xchg
out
aaa
mov
shl
clc
push
or
sbb
arpl
test
repnz
jo
add
inc
sbb
jle
bound
faddl
hlt
jle
fimuls
jnp
cmp
pop
mov
jmp
idivb
jmp
pop
int3
adc
add
mov
jmp
ds
cmc
mov
add
add
fisttpl
roll
push
and
push
inc
leave
add
adc
push
cmp
imul
jbe
pop
inc
and
dec
lods
mov
mov
test
fistpll
fsqrt
dec
mov
push
cmp
pop
jmp
testl
and
loopne
pop
mov
pop
adc
std
adc
scas
mov
mov
jae
fcmovu
adc
add
mov
les
push
in
cmp
int3
fisttpll
mov
add
lret
call
iret
add
or
add
cmpsb
add
add
lret
add
add
or
movsb
add
mov
or
test
and
or
jp
fldl
hlt
push
add
and
rolb
cmp
sub
test
jle
add
sbb
jnp
stos
addb
mov
mov
mov
test
mov
fcom
or
test
pop
xchg
clc
pop
xchg
test
push
cmp
scas
pusha
cmp
or
add
stc
push
sub
pop
push
and
ljmp
int3
or
or
in
add
pop
push
cld
lret
ja
hlt
lret
hlt
push
in
lret
adc
lret
inc
pop
fmul
pushf
push
aam
mov
int3
lret
jle
lret
or
int3
cmp
int3
addr16
sub
gs
and
outsl
dec
sbb
adc
int3
xchg
dec
or
dec
dec
add
adcb
push
push
hlt
lret
sub
in
lret
rclb
lret
aad
fmul
adc
aam
insb
push
int3
lret
push
push
add
lret
add
clc
add
add
cmp
mov
jge
div
mov
rorb
std
fsts
lds
insb
push
sub
cmp
mov
jo
subl
sbb
leave
out
push
fwait
nop
test
std
add
add
xor
push
lods
cmp
mov
adc
ret
in
add
mov
sbb
inc
add
cmp
mov
mov
out
ret
pop
add
stc
shrb
pop
andl
inc
jmp
or
jl
mov
out
mov
inc
lcall
push
pop
ret
pop
xor
push
pop
push
mov
inc
cld
adc
lods
inc
idiv
add
call
mov
mov
cmp
push
test
inc
inc
je
sub
xor
mov
or
push
or
jb
xchg
stc
jnp
lods
popa
jp
clc
aad
roll
add
add
jnp
dec
data16
mov
mov
int3
lock
xor
cs
jnp
addb
lea
loopne
pushl
inc
sub
jl
mov
sbb
jge
xchg
mov
clc
jg
inc
cld
sub
test
mov
mov
push
jne
adc
xchg
in
ud2
fmull
jg
scas
cmp
xchg
xchg
js
scas
jb
or
test
cs
inc
jns
loop
stos
jns
les
cs
add
int3
and
adc
jns
dec
jne
cmp
inc
pushf
popl
jmp
push
mov
movsb
mov
or
dec
xor
or
pop
mov
push
add
jns
scas
add
outsb
ret
sbb
or
add
sbb
test
js
mov
pop
pop
test
rorl
je
loopne
fcomps
test
add
sbb
int
mov
lods
insl
ret
push
stc
sub
or
jle
insl
fisttps
push
cmc
cwtl
imul
mov
mov
movsb
jg
or
inc
dec
adc
add
movsb
sbb
jl
addl
leave
jge
mov
cmc
cltd
call
inc
or
mov
inc
cmp
inc
clc
andl
enter
cltd
test
pop
or
or
cltd
mov
imul
loope
inc
clc
mov
outsl
jb
push
or
cltd
xor
inc
mov
xchg
sbb
cwtl
pop
mov
jl
add
jecxz
fidivl
inc
or
int3
add
es
lcall
add
add
lret
cmp
mov
lret
dec
fidivrs
jmp
scas
xlat
dec
jnp
stc
push
mov
or
rcll
das
push
aas
fists
xchg
je
in
adc
fcoms
mov
add
add
push
test
dec
push
inc
add
sti
test
cwtl
mov
insl
clc
and
insl
or
hlt
jns
mov
int3
jmp
mov
and
testl
jb
add
int3
and
add
bound
adc
in
aaa
mov
add
add
scas
jmp
daa
int3
inc
sub
jl
mov
mov
and
dec
mov
inc
scas
push
mov
aaa
out
mov
mov
fistpll
mov
pushf
mov
insb
inc
xor
cli
mov
mov
sahf
pop
sub
negl
add
jmp
pop
xchg
mov
das
inc
inc
loope
int3
dec
xchg
repz
call
push
fidivrl
push
mov
inc
cmp
jb
les
in
mov
push
mov
xchg
xchg
cmpxchg
test
dec
xor
repz
imul
roll
add
add
insb
out
insl
ja
and
or
add
in
fmull
sbb
push
call
and
sbb
or
cmc
in
cmp
adcb
jmp
stc
adc
mov
dec
je
icebp
in
pop
jb
pop
ret
or
in
andl
push
push
push
ret
add
outsl
shl
push
paddusw
in
pop
clc
ljmp
das
jae
add
fucomi
call
sub
add
xor
sub
rorl
lods
inc
add
movsl
xchg
pop
mov
repnz
sti
jle
lds
aaa
xor
xchg
scas
je
sub
xchg
addr16
add
stos
mov
sbb
mov
inc
cld
jge
pop
mov
insb
dec
add
mov
xor
add
mov
add
or
jl
mov
add
cs
jnp
mov
pushf
jb
xchg
dec
sub
cld
lret
jmp
mov
fldcw
sti
jle
ss
fwait
adc
jle
push
jl
fwait
bound
pusha
push
pushf
mov
and
xor
stos
fwait
ret
xchg
pop
ret
lods
mov
add
add
stos
push
std
dec
rcr
add
mov
fcomp
push
sbb
test
loop
add
adc
mov
inc
add
push
repz
test
mov
jb
clc
push
add
cwtl
dec
push
in
movsb
shrb
fidivrl
sub
incb
iret
dec
dec
inc
inc
xor
xor
xor
push
imul
andb
dec
sub
add
insb
out
push
and
rcrl
pusha
out
or
fwait
std
call
loope
or
test
mov
adc
movsb
mull
fmuls
jmp
inc
int3
mov
push
inc
add
movsl
cld
rcrb
push
jl
xchg
ret
add
clc
push
call
add
push
xorb
lea
lret
push
clc
fisubrl
test
mov
clc
lea
mov
and
call
stos
push
addl
cmp
dec
or
insb
sbb
jb
jge
ror
ljmp
adc
test
xor
sti
add
dec
test
cmp
cmc
scas
sub
or
xor
mov
test
test
inc
into
dec
xlat
inc
imul
add
jle
mov
dec
leave
xchg
push
inc
fs
mov
xor
roll
mov
pop
mov
movl
add
jns
pop
add
enter
enter
enter
int3
jb
sti
jb
jl
fisubrs
jbe
push
adc
test
push
push
jno
notl
or
js
or
scas
mov
add
lea
xchg
into
mov
movsb
xacquire
pusha
lds
push
sub
fs
in
add
rcll
jno
dec
or
lods
incb
push
jno
add
fcompl
xchg
push
lret
xchg
lods
push
mov
xchg
add
pop
dec
jge,pt
xor
mov
test
xchg
add
jge
push
stos
jne
pop
ljmp
inc
mov
cld
xor
jmp
inc
jmp
xchg
in
jl
testl
dec
fnstcw
test
enter
cmp
xorl
scas
push
push
add
mul
orb
ja
test
lea
testl
cltd
popf
hlt
andb
push
nop
or
call
sub
hlt
xorb
inc
dec
jns
inc
add
leave
call
sbb
hlt
andb
jl
sbb
cwtl
mov
call
ljmp
adcb
jl
sub
pushf
jnp
leave
call
lcall
and
jl
lds
fists
add
sub
inc
push
int
mov
gs
cmp
add
add
dec
clc
jnp
sub
sub
dec
sti
divl
cmp
clc
mov
orb
sbb
xchg
dec
fs
js
js
inc
mov
mov
pop
sub
sti
test
dec
jnp
xor
mov
mov
pop
mov
or
dec
popf
mov
pop
shlb
add
mov
jle
dec
movsl
pop
orl
inc
fsubl
bound
jne
jle
dec
movsl
pop
orl
inc
mov
mov
jb
lahf
cmp
movsl
pop
orl
inc
fsubl
std
bound
and
and
add
xchg
cs
fistl
jb
add
push
jle
dec
and
add
lahf
cltd
mov
fildl
lds
subl
and
mov
mov
inc
lds
aam
insb
add
add
sarb
mov
fyl2xp1
sbb
push
adc
jp
cmc
xchg
add
jne
mov
insb
add
std
hlt
jb
dec
repnz
bound
push
bound
push
fwait
in
andl
lahf
andb
out
and
fstps
add
rcll
pop
add
into
insb
and
fcomps
jo
inc
push
aaa
xor
fxch
jne
mov
mov
in
inc
cld
ret
lret
sahf
dec
jp
test
or
add
push
push
sbb
xchg
mov
jmp
push
and
push
call
mov
jae
sbb
sub
lret
mov
adc
iret
push
push
push
mov
jmp
int3
xor
das
mov
mov
pop
mov
inc
adc
xlat
repz
xchg
push
jecxz
inc
xor
shl
add
outsb
adc
popa
cmpl
cmpsl
cmp
jg
js
or
jnp
sub
dec
and
test
dec
pop
repnz
xor
jae
push
pop
test
fs
pop
fidivs
pop
xor
lock
jp
jg
push
lret
call
cmpsl
mov
push
pop
lret
mov
add
dec
aam
or
jb
mov
test
cmp
push
addb
mov
shrl
and
inc
push
lahf
imul
jp
mov
cmpb
mov
in
pusha
xor
push
lahf
int3
hlt
adc
test
mov
lahf
push
add
out
jne
cs
mov
sub
dec
roll
test
cli
mov
add
pop
lret
jmp
mov
stc
jb
out
push
sbb
cmpsl
ffree
add
andl
dec
xlat
bound
mov
push
cmp
testl
fidivrs
test
push
inc
add
add
jbe
cld
pop
jb
mov
mov
fdivr
sbb
dec
dec
leave
inc
lret
psubsw
std
inc
cmp
jmp
divl
mov
and
ret
adc
pop
je
ficoml
stc
test
pushf
sub
push
dec
jp
mov
fidivrl
and
sahf
inc
push
push
stc
je
sub
shll
lret
cmpl
loop
lcall
or
lods
or
add
scas
push
fxch
add
xor
test
cld
mov
sub
jno
pop
mov
lret
pop
pop
and
dec
mov
int3
xor
add
test
jnp
pop
test
rolb
inc
call
inc
test
arpl
add
inc
clc
lret
pop
jl
loopne
cmp
jmp
scas
sub
pop
test
test
lcall
in
test
jmp
imul
aam
add
xchg
add
jge
cmpsl
mov
test
sbb
decl
mov
incl
int3
jmp
ja
xchg
sbb
or
outsb
push
lahf
jecxz
cmc
lds
add
int3
sub
dec
cmp
lock
cltd
test
push
lahf
jecxz
adc
std
push
jne
call
shr
mov
aam
mov
push
add
pop
jbe
mov
daa
shrb
call
inc
adc
ret
push
mov
push
cmc
push
stos
jg
mov
mov
imul
add
jmp
stos
fwait
imul
imul
pop
ret
add
add
testl
addl
add
incl
je
addl
add
xchg
fwait
imul
rorl
rcll
mov
xor
dec
les
in
dec
dec
jns
push
or
iret
add
add
xchg
cmp
cmpsb
mov
push
inc
add
fdivr
mov
inc
or
xlat
jg
gs
mov
rolb
add
pop
dec
adc
repz
pop
inc
dec
xor
inc
push
xchg
es
sub
jne
xor
dec
mov
pop
ljmp
push
mov
and
andl
je
add
and
orl
add
mov
cld
sbb
xor
pavgb
add
add
add
push
mov
daa
mov
out
adc
testl
adc
sti
mov
ds
aam
clc
and
addb
jl
repnz
sbb
cmp
pop
mov
incb
or
or
test
out
jns
inc
in
ja
adc
inc
out
push
jae
subl
rcl
jl
imul
stos
cld
cmp
mov
arpl
dec
movsl
or
mov
push
dec
data16
adc
outsl
xor
insl
add
int3
aad
push
mov
clc
add
pop
pusha
jae
cwtl
fs
dec
sti
lret
pop
pop
rcrl
mov
in
dec
cwtl
add
cwtl
insl
and
mov
add
and
push
ret
jmp
in
jbe
mov
jl
add
addb
sbb
test
in
xor
lret
jge
xchg
lret
adc
add
add
xchg
addl
sbb
mov
int3
add
imul
lea
int3
add
push
popf
ret
icebp
dec
lret
rclb
test
clc
icebp
push
mov
push
adc
sbb
imul
xchg
insl
in
xor
in
mov
neg
jno
cmp
and
pop
mov
pop
loopne
into
add
push
ret
add
adc
or
jge
cltd
fistpll
lcall
lret
stos
mov
adc
loope
dec
or
int
add
cs
ret
adc
pop
in
xor
jge
xor
mov
ret
mov
sbb
pop
fcmovne
add
pop
xlat
add
jmp
xchg
scas
lcall
pop
ret
add
out
incl
mov
sbb
ret
dec
mov
or
lret
push
repz
or
sub
xchg
jg
xchg
test
clc
pop
sub
jmp
stc
push
sbb
out
push
jnp
test
inc
mov
je
add
xchg
inc
test
mov
out
xor
sbb
jns
jno
mov
je
sub
ja
mov
push
adc
out
scas
lret
push
push
loop
stc
dec
bound
int3
jb
cmp
in
orb
xchg
jmp
add
dec
test
sub
adc
or
add
add
int3
jb
cmpsl
lret
jmp
jp
mov
insl
add
int3
ret
add
sti
fwait
addb
adc
xlat
lret
jmp
inc
clc
dec
pushf
add
int3
jb
test
add
xchg
jmp
pop
inc
add
add
push
into
xor
mov
fs
imul
cmp
inc
jo
int
mov
pushf
ret
cmc
adc
mov
xchg
imul
mov
insl
sti
xchg
imul
adcb
add
add
outsb
adc
in
dec
loope
add
mov
pop
xchg
test
mov
inc
stc
lret
add
push
scas
dec
cmp
faddl
fwait
add
movsb
xchg
cli
out
and
rcr
rorb
push
rorb
call
xchg
jle
mov
pop
push
sbb
pop
add
add
pop
dec
idiv
test
mov
pop
inc
idiv
cltd
mov
hlt
repnz
add
jne
pop
lcall
xor
inc
or
pop
jae
loop
outsl
or
mov
cmc
mov
fadd
test
xchg
adc
sub
aas
add
add
iret
add
adc
or
shll
inc
adc
mov
dec
mov
pop
sti
int3
dec
icebp
fsub
out
int3
cld
lcall
dec
cmp
mov
test
es
sbb
mov
or
or
es
add
gs
push
lds
pop
pop
inc
lahf
add
mov
pop
add
mov
sbb
pop
mov
mov
xor
sub
aas
dec
xorb
ret
mov
cli
pop
aas
stos
mov
pop
add
jb
mov
cltd
push
jp
je
sub
sbb
add
jb
aaa
int3
jmp
add
int3
adc
xlat
xor
incl
add
add
sbb
push
mov
dec
jg
incb
add
mov
faddp
lret
push
pop
dec
xlat
mov
add
jmp
dec
mov
add
imul
lea
or
push
enter
jo
jmp
add
mov
mov
add
pop
add
jae
cmpl
add
std
dec
jb
push
or
add
test
mull
xchg
sub
aaa
or
in
sbb
leave
ljmp
jmp
push
inc
jge
jmp
notl
ret
ret
jl
dec
add
cltd
adc
hlt
mull
stc
push
rcr
call
or
ret
or
aad
inc
std
xchg
adcl
scas
stc
incl
idivb
mov
xor
and
push
scas
dec
fildl
jmp
fiadds
add
adc
imul
stc
incl
push
adc
hlt
jbe
loopne
test
sbbl
sarb
lret
notb
andl
stc
lea
inc
aam
cli
pushl
imulb
cmp
jbe
mov
jl
aaa
pop
mov
add
shrb
js
daa
lea
dec
jmp
mov
ret
cld
daa
cmp
clc
mov
and
out
xchg
outsb
dec
lock
mov
movsl
push
clc
iret
and
add
out
sbbb
jge
imul
push
lock
repz
pushw
inc
push
add
std
jl
inc
outsb
inc
insb
mov
andb
clc
add
addr16
pop
int3
pop
pop
xor
xchg
jle
sbb
test
jle
mov
push
sub
pop
push
or
sub
cld
dec
xor
inc
mov
into
out
stc
push
jbe
fisubs
fcmovb
addr16
orl
jnp
xchg
add
xor
add
add
mov
jo
shr
outsl
pop
in
mov
int
xchg
negl
clc
data16
test
notl
cmpsb
in
cmpsl
bsr
orb
xchg
andl
mov
negl
mov
pop
lahf
xchg
call
push
iret
jge
lock
mov
test
rolb
jb
imul
dec
push
sbb
pop
test
nop
jg
push
sbb
leave
dec
test
bound
push
enter
or
add
int3
xchg
or
mov
orl
mov
stc
out
sahf
jle
lea
adc
iret
jne
push
dec
mov
pop
dec
mov
mov
lahf
mov
ror
fimuls
add
movsb
push
je
lcall
incb
push
lock
mov
out
lock
call
push
add
cltd
jnp
andb
jl
add
add
outsb
lock
ret
andl
shl
jne
add
andb
clc
test
jo
add
imul
jl
js
mov
add
sti
lea
pop
dec
mov
and
das
leave
outsl
mov
pop
clc
mov
sbb
pop
mov
mov
sbb
pop
clc
push
inc
add
lock
cmpb
sbb
sbb
xlat
jb
or
mov
jno
std
lret
fucomip
xor
test
cmpsl
inc
pop
test
int3
insb
mov
sbb
xchg
mov
add
addl
movsl
incl
xchg
outsb
js
xchg
sbb
jle
mov
jp
push
cmp
ds
sub
addb
inc
xchg
int3
push
or
test
fs
mov
mov
arpl
jge
fmuls
fbld
push
xchg
aam
mov
insb
cmc
jne
arpl
xor
in
outsl
ljmp
cmc
imull
and
xchg
jecxz
lret
xlat
jge
jecxz
test
dec
insb
outsl
in
dec
jb
notb
mov
testl
adcl
pop
or
mov
and
ret
pop
mov
inc
mov
das
sahf
mov
negl
push
add
sub
out
push
stc
add
add
pop
mov
not
mov
into
and
jmp
mov
push
ljmp
shr
push
mov
ret
or
lds
shl
add
mov
xlat
jmp
in
mov
repz
inc
jl
fs
int3
int3
cmc
push
int3
int3
add
push
int3
int3
jl
jmp
aad
push
mov
shlb
je
mov
lret
or
and
aad
inc
or
idiv
fxch
mov
idivl
add
rcrb
mov
clc
je
dec
or
xchg
xchg
je
sub
xchg
ret
add
test
aad
add
cmp
push
lret
xor
push
lret
add
jmp
jmp
rolb
jne
jne
fnsave
pop
ljmp
je
je
pop
imul
test
mov
pusha
int
dec
add
or
repnz
rdpmc
mov
pop
ret
int3
out
lret
mov
cwtl
movsl
dec
lret
cwtl
xor
stos
dec
mov
push
mov
sub
rolb
add
add
inc
repz
aaa
lea
aam
pop
repz
xlat
rcrb
call
lea
test
mov
add
loopne
daa
out
pusha
cmp
sti
mov
push
pushf
pop
iret
jae
push
sbb
sub
cli
and
push
sarb
adc
lcall
lret
add
add
test
and
clc
inc
inc
cld
or
jmp
test
dec
inc
mov
mov
dec
push
xor
enter
jl
pop
jo
and
add
xchg
mov
stc
sbb
sub
add
int3
pop
scas
mov
and
mov
add
add
add
add
int3
mov
xor
test
mov
fcmovnb
add
iret
add
bound
add
iret
jne
xlat
dec
filds
push
xchg
fwait
or
push
enter
iret
fisttpll
enterw
iret
fldl
push
enter
iret
jge
cmc
into
add
loopne
mov
jo
jnp
push
xor
loop
mov
pop
iret
jg
mov
mov
daa
mov
push
rorl
pusha
cld
ljmp
iret
in
mov
push
clc
jmp
cmpsb
push
xchg
add
add
ficoml
mov
xchg
xlat
je
idiv
mul
xor
pop
jmp
cmpl
add
add
test
dec
or
add
jns
loopne
js
std
incl
cld
mov
add
test
inc
sti
mov
adc
add
xor
inc
je
pop
je
add
jmp
pop
jns
ret
xchg
je
add
int3
jmp
mov
adc
push
push
bound
mov
dec
mov
repz
repz
xor
mov
and
ljmp
xchg
push
push
dec
push
inc
xor
pusha
fadds
je
dec
mov
or
jge
loop
sub
loop
add
nop
mov
xorl
in
ljmp
and
imull
xchg
adc
dec
dec
nop
and
pushf
js
mov
out
xchg
add
add
add
icebp
add
les
add
add
add
scas
add
add
add
pop
mov
call
das
cmpb
mov
lret
add
orl
scas
add
les
int3
insb
ffreep
xor
jmp
push
testl
add
movb
sub
add
int3
add
je
int3
int3
xor
adc
int3
lret
decl
pushf
sbb
outsl
jno
xor
insl
notb
jl
imul
jge
sub
or
jl
adc
jge
idivl
mov
test
mov
mov
int3
int3
movsl
pop
int3
int3
sub
jmp
sub
je
cmp
add
add
dec
lea
inc
int
dec
cld
sbb
loopne
and
mov
sub
jl
imul
jae
jmp
xchg
inc
xchg
xor
lock
adc
into
clc
xlat
jge
pop
jnp
mov
lret
int3
cmp
les
dec
lret
mov
mov
jb
addb
inc
ja
add
test
jge
shlb
mov
pop
dec
jnp
in
dec
rol
pop
adc
mov
cmovg
jl
out
aam
in
jo
add
push
leave
push
cmp
pop
sub
dec
cmp
nop
mov
fiaddl
pop
push
jg
clc
fmuls
push
xchg
out
inc
dec
pushf
push
aas
push
movsb
repz
add
add
sti
ret
mov
test
jae
or
test
mov
add
pop
sub
mov
nop
lods
inc
dec
nop
movsl
inc
cmp
jne
mov
hlt
pop
mov
jbe
inc
jge
push
cmpl
dec
or
push
jle
lods
iret
or
mov
cs
jmp
add
insl
leave
test
nop
sti
ret
jl
ds
cmp
xor
add
testb
cmp
jbe,pt
fnsave
xchg
les
dec
xchg
les
jnp
dec
bound
xor
mov
inc
inc
icebp
andb
push
insb
je,pt
jb
adc
add
sub
mov
add
enter
leave
and
es
push
dec
adc
clc
adc
push
stc
jne
and
nop
jmp
testl
lcall
int3
fs
jmp
xchg
inc
jp
sub
stc
test
mov
xchg
dec
mov
mov
jle
add
and
insb
ret
andb
add
add
mov
or
push
add
mov
cld
filds
dec
pop
aas
lret
inc
sarl
cmp
aas
lret
xor
mov
mov
or
add
ret
add
ffreep
inc
and
jo
and
inc
fiaddl
ss
lock
sub
adc
ret
and
mov
inc
sar
incl
gs
mov
add
fs
lret
int3
pop
dec
lret
les
lret
mov
out
adcb
int3
call
loopne
int3
fimull
inc
flds
push
dec
imul
jmp
mov
dec
sub
mov
mul
add
xor
fs
lret
cli
dec
popa
inc
stc
xorb
call
mov
pop
pusha
fldl
add
iret
add
inc
imul
testl
adc
jmp
inc
lret
mov
inc
mov
gs
or
jb
rorl
jmp
jp
cmc
ret
xchg
int3
add
push
dec
lods
jno
rolb
jmp
or
add
add
xchg
call
loopne
push
cmc
and
jno
iret
add
stc
pop
mov
js
jle
mov
or
add
in
add
or
add
adc
lcall
bound
mov
and
int3
cs
outsl
and
add
sub
jmp
stc
xchg
int3
add
add
sarb
lret
jl
movsl
testb
sub
push
adc
or
xchg
mov
idiv
xchg
mul
pop
sub
fwait
mov
jbe
jmp
push
int3
int3
cmc
or
int3
adc
or
int3
pushf
imul
xorl
jl
xor
decl
icebp
jmp
fstpt
or
jns
pop
test
insb
mov
jns
push
lds
repz
in
jnp
sti
add
aas
in
jnp
or
xchg
idiv
daa
cld
jnp
or
xchg
cld
jnp
sti
add
imul
jnp
adc
add
add
pop
in
mov
add
jnp
in
add
add
jmp
sti
jns
push
dec
es
push
add
fidivrs
int
add
jno
cld
lret
jmp
pcmpeqd
sbb
lret
shlb
mov
push
inc
clc
add
ds
inc
mov
inc
aam
mov
mov
pop
cwtl
push
arpl
and
mov
mov
add
add
clc
jecxz
frstor
jb
xchg
lds
test
pop
add
fsubrp
add
mov
cmp
jbe
out
pusha
pushf
add
fildl
jmp
scas
jge
and
enter
stc
test
jl
add
add
xor
add
mov
or
xor
fs
or
loop
add
insl
clc
cmpsb
sub
add
add
jbe
movl
or
add
cs
jne
popl
pusha
dec
fstp
je
bound
bound
add
mov
ds
test
popf
push
sbb
or
and
je
and
pop
or
enter
xor
jne
add
jb
bound
mov
loop
mov
sub
fiaddl
jl
mov
lret
jge
mov
divl
inc
notl
decl
jge
divl
add
bound
mov
xchg
add
movsl
push
jnp
mov
mov
inc
lret
int3
mov
jp
xorl
dec
mov
testb
add
add
addr16
test
clc
xchg
addb
roll
test
add
add
sar
pop
inc
decl
jne
arpl
std
jae
aaa
gs
cmpsb
jne
and
rolb
mov
dec
test
and
dec
outsb
shll
pushl
xor
xor
pop
stc
popa
add
jne
pop
jmp
add
frstor
ror
iret
div
in
inc
pop
iret
std
lret
jmp
stc
cmpsl
jb
negl
repz
jmp
jmp
dec
addb
jnp
jae
sub
lds
pop
jb
jle
into
xor
or
mov
jmp
dec
sbb
xor
xchg
jo
sbb
push
mov
add
mov
inc
lret
addb
push
add
xor
scas
mov
dec
jp
movsb
daa
je
push
dec
dec
push
cmc
ss
add
jns
call
mov
mov
scas
jns
jmp
jl
sub
scas
add
dec
jne
mov
jmp
ds
pop
push
add
inc
insl
jge
jg
hlt
lahf
dec
jne
stos
sbb
or
mov
jl
dec
add
push
jns
pop
pop
jno
add
icebp
mov
add
push
mov
call
mov
adc
int3
add
push
les
mov
cmp
cltd
data16
jg
aad
shrl
or
inc
adc
cltd
jne
cwtl
jno
idiv
add
aaa
adc
dec
jne
cwtl
lock
call
das
adc
dec
icebp
xchg
inc
idiv
sub
notl
into
mov
dec
jecxz
bound
add
jb
or
lea
add
add
push
nop
std
repnz
fbld
es
outsl
add
mul
jecxz
mov
cld
add
add
xor
push
add
decl
scas
push
imul
mov
fiaddl
mov
xchg
add
sbb
leave
addr16
push
push
add
pop
popa
push
inc
jbe
or
shl
imul
add
xchg
xor
add
inc
in
jl
ds
fdivs
adc
sti
add
outsb
popa
out
or
xchg
lret
jmp
stos
repz
sbb
jl
add
ret
ja
iret
add
inc
xor
and
mov
lret
jmp
mov
out
popa
test
repnz
aas
sti
xchg
xor
add
lret
and
xchg
repnz
outsb
ret
sbb
jo
aaa
das
outsb
add
add
imul
cld
jbe
mov
inc
mov
leave
hlt
pop
ficoms
int3
mov
add
pop
lock
xor
push
std
inc
in
mov
in
mov
cmp
bound
nop
mov
lahf
les
jmp
stos
fnstenv
lcall
add
add
sbb
cltd
fidivrl
testl
ljmp
sub
push
data16
mov
roll
jnp
lcall
ss
mov
out
jg
xlat
enter
push
jne
filds
or
aas
or
jecxz
loopne
scas
push
test
out
ja
xlat
enter
jns
inc
add
adc
adc
cltd
icebp
aas
or
jnp
mov
inc
adc
pop
icebp
jp
pop
and
mov
sarb
ret
xchg
jmp
mov
arpl
out
pusha
add
sahf
push
bound
adc
mov
pop
bound
add
jge
pop
out
mov
je
add
jmp
add
add
mov
add
leave
ds
out
mov
mov
ljmp
bound
sbb
add
lock
push
jnp
pusha
dec
mov
hlt
in
mov
mov
lret
jmp
jae
ret
jge
lea
mov
pop
xor
push
adc
mov
hlt
push
xchg
add
pop
imul
icebp
pusha
mov
stos
mov
add
repnz
push
pop
in
iret
push
cld
and
add
iret
xchg
dec
jle
cmp
jnp
shr
sbb
fcomps
xchg
fidivs
sbb
loope
pop
mov
int3
jmp
arpl
cld
test
mov
add
add
push
nop
push
es
jb
rorb
xor
aas
jbe
rcrl
adc
lret
inc
andl
push
jmp
je
add
cmp
rorl
scas
rclb
push
push
add
jl
mov
lock
stc
bound
pop
movsl
aam
jns
iret
add
add
std
in
mov
push
decb
rcrb
mov
push
adc
sub
add
mov
pop
jl
dec
in
or
int
adc
in
mov
aam
notl
cmp
out
jb
out
lea
out
cmp
add
jecxz
cld
jg
scas
mov
leave
xchg
frstor
jg
loopne
and
add
lds
add
jmp
adc
jae
xchg
cmp
rcll
xor
push
xchg
fcmovne
jecxz
imul
rolb
add
mov
test
fnsave
add
inc
or
sbb
jnp
adcl
add
jne
jp
je
adc
mov
test
push
in
je
push
jne
in
dec
dec
frstor
insb
xchg
mov
je
jge
int3
out
jg
out
add
push
sbb
and
pusha
mov
stc
and
add
int3
cmpsb
enter
add
jae
push
loope
jl
int3
jmp
push
add
jmp
add
add
cmpsb
enter
add
dec
movsb
xor
mov
sub
push
sub
loope
push
inc
loopne
xchg
and
mov
cld
enter
jg
lret
jmp
inc
mov
int3
jmp
fldenv
push
add
imul
or
mov
or
push
push
jmp
add
or
add
jp
push
jmp
je
or
bound
dec
or
add
and
pop
lcall
mov
add
pop
jo
sbb
adc
push
test
jns
push
jmp
mov
xlat
add
mov
int3
add
leave
jmp
add
xor
loop
jp
mov
or
aaa
call
push
or
push
scas
push
imul
pop
adc
inc
scas
push
imul
dec
or
sti
mov
jge
ffree
add
sub
mov
ja
data16
xchg
mov
mov
leave
fstl
call
data16
scas
push
fxch
jne
aam
mov
mov
add
add
cld
and
jp
add
iret
mov
mov
dec
or
jnp
or
add
or
add
push
add
fidivl
test
jmp
add
fstpl
pminsw
sahf
int3
sbb
inc
repz
adcl
jle
push
add
dec
adc
adc
add
xchg
cmp
adc
jne
clc
sbb
adc
xchg
cld
incl
out
xchg
cmp
rcll
cmp
gs
sbb
jmp
cmpsb
mov
jmp
jmp
jnp
int3
jmp
pop
packsswb
sbb
sbb
icebp
lret
jmp
aad
push
cmc
adc
jge
dec
adc
ficoms
call
dec
stos
xor
int3
jmp
add
ja
lss
loop
int3
mov
mov
lret
add
xor
push
jmp
jl
mov
add
add
lcall
test
inc
loope
push
mov
int3
add
push
roll
sub
or
jmp
or
sub
inc
rcll
cmp
jbe
jge
adc
sub
lret
add
jg
add
add
imul
mov
mov
mov
xchg
push
cmpsl
cwtl
scas
int
cmovg
xor
adc
cltd
push
push
cld
add
or
cmpsb
fdivrs
fwait
jecxz
add
push
jp
data16
mov
push
shll
stos
jl
push
daa
decb
data16
mov
stc
ret
mov
mov
mov
rol
jge
adc
adc
int
inc
std
push
pop
or
xchg
push
jmp
add
jae
out
jb
in
nop
mov
xchg
mov
es
xchg
mov
jae
std
mov
jae
test
out
xchg
add
push
enter
or
ja
test
adc
add
inc
test
dec
jb
mov
jb
aas
rolb
test
cli
adc
add
xchg
add
add
jnp
adc
adc
out
jno
and
mov
mov
mov
jmp
je
mov
mov
in
pop
mov
xchg
testl
push
mov
add
add
sub
ret
into
xchg
lods
fldl
add
stc
add
int3
add
stc
rorl
leave
in
fidivs
and
aas
pop
jo
daa
out
and
cmp
add
out
jno
and
add
push
add
lock
adc
cmp
mov
mov
mov
adc
and
jmp
or
lret
push
dec
jecxz
inc
nop
dec
icebp
lret
add
add
jmp
add
mov
jg
add
mov
cmp
sbb
inc
mov
call
pop
mov
inc
push
cltd
mov
insb
and
sahf
add
and
add
lret
sbb
add
xchg
pusha
enter
jl
xbegin
bound
xchg
loopne
add
aam
cwtl
cmpl
clc
inc
add
aam
cwtl
and
decl
mov
leave
add
pop
int
adc
adc
jg
dec
lock
test
out
push
cmpsl
mov
cmp
shlb
add
leave
add
sti
andl
lods
push
pmaddwd
jmp
flds
sbb
mov
xchg
in
add
fidivrl
scas
add
mov
lock
add
mov
inc
jns
ljmp
ficoml
rcl
test
inc
or
call
test
jbe
sbb
mov
lcall
add
dec
or
sbb
jnp
jns
add
aas
adc
or
dec
lret
pop
push
add
push
and
jp
jecxz
xchg
inc
push
add
jb
or
jo
dec
mov
add
mov
bnd
popf
repnz
popa
lds
icebp
lret
jmp
js
lret
jmp
loop
lret
fcos
push
push
pop
test
aaa
test
cmc
jo
test
add
cmp
adc
int3
jmp
pop
mov
fdivl
push
loope
mov
ret
aas
or
add
outsl
fwait
pop
add
add
aad
mov
cmpsb
inc
mov
push
jmp
mov
or
lds
jmp
adc
pop
jo
and
jmp
or
push
icebp
jl
mov
add
jmp
mov
in
add
pop
cmp
in
or
sbb
push
cmpsl
jl
mov
add
pop
bound
test
mov
xchg
lods
mov
sbb
ficoml
test
xlat
cmp
lcall
add
divl
cmp
sub
lcall
pop
pop
cmpsb
popa
add
idiv
sbb
jae
cmovnp
add
arpl
xchg
clc
jmp
jno
idiv
fsts
adc
int
nop
iret
dec
add
sbb
cmp
cwtl
int
jl
pop
mov
xor
add
cltd
or
int3
aad
int3
int3
mov
dec
loope
jb
cmp
test
adc
int
cmp
aas
lret
xor
aas
lret
dec
out
mov
subl
out
imul
mov
add
add
fld
adc
cltd
fwait
mov
arpl
test
push
mov
fimull
pandn
pop
sub
mov
add
outsl
adc
arpl
mov
out
roll
jnp
pop
xchg
add
push
lcall
add
shlb
mov
add
push
adc
add
cmc
stos
inc
dec
xchg
inc
add
xchg
jl
shr
mov
lods
out
ja
testl
test
bnd
mov
and
jge
loope
mov
mov
adc
test
adc
aas
shlb
mov
fdivs
idivl
jno
adc
jmp
add
repz
mov
inc
add
add
jge
fisttpl
dec
neg
adc
jne
add
inc
bound
dec
adc
repnz
or
push
iret
dec
bound
mov
pop
mov
js
mov
or
pop
shll
mov
js
outsb
pop
or
pop
shrl
cld
into
mov
cli
push
inc
cmc
mov
fstpt
add
add
jnp
mov
stos
push
push
jno
mov
dec
fildl
add
pop
pop
pushf
or
jmp
xchg
push
mov
in
aad
or
jg
push
push
idiv
rcl
and
sub
and
or
lret
cmp
ljmp
sub
dec
sub
sbb
or
aad
jg
mov
dec
das
or
fxch
sub
leave
bound
jmp
leave
add
por
decb
int3
int3
xchg
fsubr
sub
push
lea
add
add
sarl
mov
popa
xor
push
add
mov
data16
adc
aam
into
add
push
lahf
sbb
outsl
cmpsl
iret
fistpll
ret
popa
add
iret
fildll
adc
clc
pop
lds
push
lods
in
xchg
roll
mov
jmp
sti
test
stos
jne
or
rorl
jnp
jl
push
inc
xchg
jnp
mov
mov
arpl
add
int3
jmp
pop
add
int3
add
or
jmp
rcll
int3
jmp
add
add
xchg
mov
push
movb
and
add
jmp
repnz
leave
sub
ret
cmp
jmp
mov
addb
leave
sub
addr16
scas
push
pop
aam
int3
jmp
add
inc
gs
sub
jmp
add
ljmp
push
hlt
or
add
divl
mov
add
add
sbb
push
stos
jle
push
int3
add
add
cmp
add
mov
or
cmp
lret
add
adc
ret
adc
stos
mov
mov
push
divl
orl
xchg
pop
jmp
subb
jmp
test
or
outsl
iret
movl
loop
add
dec
pusha
jge
or
add
or
mov
jmp
aad
pusha
xchg
into
add
dec
mov
push
adc
into
jg
out
cld
lcall
xchg
push
pop
into
add
pop
aad
mov
aam
xchg
adc
data16
rcrl
into
jle
pop
xchg
add
sbb
add
decb
mov
sbb
push
das
std
jl
jno
mov
pop
push
dec
adc
int
mov
xchg
sahf
xchg
add
das
test
mov
pushf
add
arpl
gs
xchg
adc
movsb
mov
jl
pop
cmpb
pop
jbe
ja
and
jle
sldt
out
jle
hlt
bound
test
cli
decl
mov
jns
jge
add
arpl
test
jnp
jmp
sbb
and
lea
or
call
scas
popf
jns
movsl
and
aaa
lret
les
aaa
lret
mov
call
jmp
add
cli
inc
pop
fsts
js
mov
addr16
int3
jmp
sub
ds
lret
jmp
sub
dec
sbb
add
add
jle
lret
fidivs
dec
ret
pop
out
push
add
push
popf
clc
sbb
sbb
ljmp
int3
jmp
jno
add
push
jns
jecxz
add
or
or
pop
mov
insb
adc
pop
lcall
push
lret
pop
shll
call
add
ret
mov
sub
inc
fdivr
inc
test
add
push
sub
add
adc
or
push
jmp
adc
test
les
mov
add
pop
add
bound
test
int3
add
shll
std
mov
jmp
loop
dec
pop
loopne
pop
push
jmp
popa
jecxz
add
int
adc
popa
movl
push
jmp
int
adc
jnp
xchg
mov
adc
cli
mov
dec
cltd
inc
mov
adc
mov
push
pop
sub
mov
mov
pop
add
push
in
ljmp
ret
add
or
adc
cmp
add
lret
dec
sub
mov
add
add
mov
sti
outsb
movsb
je
add
mov
les
cmp
mov
mov
jmp
test
pop
jmp
lahf
cmp
mov
je
mov
sti
test
dec
incl
arpl
mov
es
xchg
mov
bound
jge
jo
dec
pop
lea
shrb
inc
or
or
add
repz
xchg
dec
push
add
inc
adc
roll
mov
test
fs
mov
adc
dec
int3
pop
add
xor
push
in
inc
jns
adc
jmp
adc
int3
push
sbb
jg
popf
adc
int3
jb
mov
mov
xchg
ja
jmp
test
dec
mov
add
test
in
jl
les
bswap
cltd
wbinvd
push
popa
push
int3
jmp
roll
inc
lds
push
fdiv
jp
pxor
add
stc
repnz
push
xor
push
jge
mov
push
int3
add
icebp
jmp
push
int3
push
pusha
je
push
jmp
mov
pop
les
or
les
add
pop
les
cmpsb
adc
push
dec
add
add
dec
roll
add
jbe
or
insb
loope
pop
clc
push
daa
push
aas
int
dec
sbb
add
push
add
mul
enter
add
push
rcrl
into
orb
add
repnz
mov
mov
inc
je
add
fldl
test
hlt
mov
sub
out
dec
faddl
xchg
mov
xor
and
or
ficoml
mov
fbstp
in
dec
test
add
cltd
dec
or
add
test
into
add
repnz
sub
testb
or
ret
push
filds
mov
adc
mov
in
mov
mov
mov
js
add
mov
pushf
push
add
scas
mov
jnp
cmc
xchg
js
pushf
sub
add
icebp
adc
mov
cmpl
jns
adc
xor
or
out
popa
or
cmpb
xor
test
sbb
add
jnp
or
shll
pop
int3
xor
jge
shr
add
push
push
das
dec
jmp
je
dec
scas
addb
jns
dec
jmp
add
push
or
mov
call
popa
push
cltd
popf
int3
sub
loopne
xchg
loope
add
xorl
push
aam
pop
decl
sldt
add
add
adcl
dec
loopne
int
push
std
adc
push
or
adc
flds
sbb
in
cli
jns
xchg
filds
int3
pop
pusha
int
push
jmp
imull
pop
loopne
orb
add
shr
push
mov
add
push
inc
sbb
inc
jmp
push
inc
imull
iret
mov
and
cmc
add
push
mov
outsb
ret
movsl
pop
jb
mov
les
cwtl
mov
xor
push
add
sti
call
pmullw
adc
popa
add
imul
clc
add
add
sub
sarl
pop
or
pop
ret
push
mov
aam
xor
aad
inc
sbb
or
push
pop
jae
push
int3
je
pop
mov
add
movsb
add
mov
arpl
andl
pusha
add
cltd
mov
lock
clc
or
mov
hlt
mov
jle
mov
add
or
add
jb
mov
faddl
add
in
aas
add
push
mov
pop
adc
imul
scas
xor
testb
adc
add
mov
xor
testb
adc
add
mov
cmp
testb
adc
add
adc
add
adc
add
adc
add
int3
lock
leave
xor
mov
jecxz
ja
and
mov
repnz
leave
xor
xchg
sahf
fldl
leave
and
xchg
sahf
in
add
leave
mov
jb
filds
leave
mov
add
leave
mov
cmovns
cwtl
or
pop
outsb
dec
fiadds
clc
mov
adc
inc
jle
movb
sub
aam
and
mov
fcomp
xchg
inc
inc
and
lret
jmp
f2xm1
lds
sub
sub
imul
add
adc
call
lock
jmp
cmp
dec
ljmp
dec
in
add
dec
in
add
dec
out
add
dec
out
add
add
add
jle
loope
cmp
mov
add
add
add
add
add
add
pop
jle
in
cmp
and
jge
add
mov
cmpsl
into
out
add
shlb
add
dec
fcoml
pop
loopne
imul
clc
faddl
je
cwtd
add
and
hlt
clc
repnz
add
mov
inc
jo
movaps
clc
add
data16
lock
cmc
or
roll
call
xorb
and
lret
int3
out
push
in
imul
and
into
add
add
push
mov
inc
xor
add
add
sub
shrl
js
sub
push
and
adc
add
divl
mov
inc
rorl
test
cld
test
repz
mov
in
mov
clc
add
cld
incl
mov
ret
call
and
int
cld
test
je
pop
xor
jbe
sbb
xor
add
pop
jle
sbb
cld
sub
das
mov
mov
push
fldl
jge
sub
add
dec
dec
sbb
add
lret
bound
mov
pop
stc
out
das
int3
push
add
mov
rorb
aam
xor
mov
add
int3
push
add
mov
shl
pop
lret
bound
mov
pop
stc
out
das
int3
les
inc
jmp
fiaddl
pop
int3
mov
stos
inc
sub
les
imul
mov
jge
rolb
add
sub
jmp
push
shrl
sub
fnstenv
in
not
and
push
add
add
pop
pop
adc
inc
inc
xor
sbb
mov
ret
push
add
jl
icebp
inc
jmp
add
xor
add
inc
fsubrs
js
and
jmp
or
add
enter
dec
mov
cmpl
add
pop
lret
jge
fsubr
incl
test
sbb
add
mov
push
push
add
fsub
clc
add
and
inc
imul
addl
add
add
daa
jl
mov
mov
or
lret
jge
xchg
cmp
inc
sub
lcall
lret
add
and
enter
in
rdpmc
cmc
ret
pop
sub
fbstp
add
and
sub
mov
repz
sub
test
xchg
sbb
xor
add
sarb
add
stos
xor
add
mov
clc
add
repz
jge
psubb
mov
add
sbb
test
loope
jge
sub
daa
jge
incl
stos
fdivrs
mov
roll
push
add
mov
mov
add
ljmp
add
mov
lcall
mov
test
mov
mov
in
pop
ficoms
stc
sbb
add
adc
mov
ret
push
adc
sahf
sub
adc
adcl
add
or
sti
lret
bound
sub
mov
pop
add
add
int3
jge
add
mov
inc
cmp
stc
mov
add
mov
jg
sbb
xor
fldl
inc
cmp
das
add
inc
mov
inc
adc
sub
mov
push
push
jmp
mov
jnp
lcall
inc
inc
mov
xchg
je
add
jmp
inc
jge
stc
cli
and
add
inc
inc
cmpb
add
mov
cmc
mov
pop
and
inc
cmp
and
imul
sub
mov
iret
jg
mov
and
add
int
in
xor
outsl
mov
sbb
cmp
and
shlb
adc
pop
cmp
dec
pop
and
inc
insl
inc
repnz
jmp
push
inc
add
or
push
mov
ja
sub
idiv
ss
roll
sbb
or
fidivrl
loopne
test
loopne
insl
pop
test
and
xchg
cld
mov
or
cmp
out
enter
jne
fildl
add
or
scas
and
add
aad
ss
shlb
rolb
sub
jae
lea
outsl
and
jae
movsl
inc
std
inc
int3
repz
cmpsb
xor
jl
flds
jg
pushl
and
dec
jnp
xor
loopne
imulb
loopne
inc
inc
les
pop
test
add
adc
jle
mov
fsts
add
add
in
rolb
filds
leave
ss
out
inc
mov
fbld
inc
lods
adc
add
inc
mov
fildl
fdivs
mov
sbb
mov
or
add
jle
add
xchg
add
xchg
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
lret
add
cmp
data16
cmp
pop
je
notl
cmp
dec
hlt
cmp
inc
in
aaa
idivl
adc
add
or
add
adc
add
or
add
hlt
mov
push
in
xor
push
hlt
xor
add
add
ds
pop
cs
nop
clc
pop
push
fdivr
aas
ds
jg
fdivr
call
jne
push
popf
push
jmp
mov
mov
sbb
jb
mov
into
rolb
lds
jle
lds
jl
mov
jl
fnstenv
lock
rolb
add
sbb
insb
add
aas
jl
lods
mov
push
add
add
or
or
or
rolb
add
dec
push
add
sbb
jns
fbstp
mov
int3
and
inc
in
jbe
fdivrs
fadds
mov
enter
int
pop
xor
and
mov
or
inc
jo
mov
dec
or
and
xchg
sbb
pop
test
jno
in
add
and
and
cltd
jmp
mov
and
sub
mov
jle
or
and
mov
test
lret
clc
test
add
xchg
mov
pushf
fwait
outsl
jl
lds
lret
jl
mov
mov
add
ror
mov
dec
shlb
dec
mov
add
xor
add
fisubs
and
test
mov
jmp
sbb
or
ret
aas
nop
jmp
sbb
or
jmp
lods
into
nop
add
cmc
ret
outsl
hlt
xor
pop
dec
jo
loop
dec
or
mov
sbb
ret
xlat
pop
in
add
mov
stos
adc
adc
jns
cld
call
clc
mov
add
fs
enter
jl
add
add
les
sbb
xor
xorl
jecxz
call
jmp
dec
out
flds
or
jle
std
daa
ja
inc
push
or
sub
mov
adc
adc
jmp
and
je
or
std
jl
enter
add
jge
repz
in
xchg
negl
add
enter
pop
bound
mov
pop
mov
fs
subb
jge
xor
add
fsin
xlat
dec
shl
adc
lcall
je
adc
add
sub
lea
addb
mov
incl
scas
shlb
mov
adc
add
cld
test
mov
add
adc
sub
or
lods
ffreep
jnp
fcompl
and
scas
jl
es
add
add
and
movsl
or
add
add
and
dec
cld
sarl
jge
incb
ret
or
add
int3
xchg
add
int3
jmp
dec
je
jb
and
bound
out
rorb
pop
xor
jl
mov
xchg
and
rolb
dec
pop
add
int3
ljmp
mov
ficompl
fnstcw
out
leave
dec
mov
jge
add
in
sbb
test
cmp
inc
scas
fldln2
and
fxch
mov
int
mov
js
mov
cmc
add
icebp
insb
mov
lahf
stc
mov
outsb
shrl
sub
insl
mov
pop
pop
jmp
add
cmp
mov
dec
jb
icebp
cmp
inc
leave
cmp
sbb
or
inc
mov
sbb
mul
mov
data16
daa
pop
push
sub
pop
pop
loope
inc
sbb
pop
dec
sbb
out
js
sbb
or
xchg
xor
lods
jecxz
adc
jne
pop
movsbl
imulb
roll
add
das
jns
sahf
aas
fisttpl
int
imul
movsb
and
jl,pn
cmp
xchg
dec
lret
jo
and
sbb
imul
mov
mov
adc
cmp
test
int
add
das
mov
call
cs
add
pop
ja
xor
ficoms
adcl
ret
into
rorb
jp
or
dec
sti
js
mov
cmp
enter
jmp
sti
imul
inc
cld
incl
mov
cli
int3
inc
ss
ljmp
and
ret
mov
mov
and
jbe
sbb
daa
sti
loope
jge
and
ja
jle
add
sar
idiv
jl
and
add
in
movsb
mov
lahf
and
or
clc
xlat
lret
sahf
js
int3
push
mov
int3
cmp
rorl
push
movsb
inc
es
inc
lret
push
add
xchg
jle
call
inc
or
ret
clc
dec
pop
add
int3
push
or
sub
sti
dec
dec
or
ljmp
sub
push
ret
clc
dec
aas
add
int3
push
add
mov
test
sti
dec
mov
cmp
shlb
ljmp
sub
mull
dec
cmp
mov
jmp
orb
add
in
scas
je
shrl
add
insl
shrl
pop
sbb
xchg
sbb
and
test
inc
add
add
add
sbb
cld
cmp
sbb
cmp
xchg
out
sbb
cmc
mov
jb
sub
and
jmp
add
sub
std
insl
add
shufps
scas
lock
scas
jae
mov
pop
and
shll
xchg
ret
scas
cwtl
xchg
idivl
xchg
adc
and
enter
enter
xor
idivl
sarb
jl
std
adc
mov
repnz
pusha
or
jg
xor
faddl
lcall
je
scas
fimull
push
mov
sbb
je
cld
sub
xchg
je
sbb
cmp
sub
out
in
std
adc
sbb
test
and
xor
mov
xor
mov
inc
add
nop
pop
pop
out
or
imul
jo
jle
sbb
sbb
jl
push
je
add
cli
and
ret
inc
push
je
cld
popf
test
lock
push
jno
push
push
jle
int3
call
stos
getsec
add
and
add
push
inc
hlt
pop
adc
imul
lods
aaa
mov
pop
xor
stos
dec
jne
test
cmp
test
xchg
jo
stos
push
movsb
push
jle
lea
jo
stos
push
pushf
inc
sub
xchg
jp
xlat
pop
xor
lds
std
jp
jmp
dec
or
add
add
cwtl
inc
js
cwtl
cmp
jnp
dec
insl
rorl
bound
jmp
andl
add
repnz
cmp
in
mov
jb
dec
rclb
cmp
and
jmp
inc
fstps
iret
sub
push
adc
test
in
pop
or
out
int3
add
mov
push
add
add
int3
add
dec
push
je
scas
sub
loopne
fwait
adc
lret
lcall
testl
lods
imul
push
cwtl
jae
vshufps
push
adc
or
mov
jns
push
xlat
jae
push
divb
jae
andl
mov
imul
lcall
mov
add
test
mov
hlt
dec
xchg
mov
inc
jle
fs
clc
pop
cmp
mov
jae
inc
dec
cmp
pop
pop
and
pusha
dec
test
scas
xchg
cmpsb
stos
testl
sub
pop
jge
scas
add
mov
sub
mov
out
push
add
fnstsw
lock
add
cld
mov
inc
xor
sub
adc
cmp
fnsave
std
incl
pushf
dec
aam
lds
add
std
add
xor
cld
incl
jp
mov
out
dec
fcoml
xor
jecxz
lods
or
cmp
sub
movsb
rorl
int3
jmp
pop
sub
xchg
enter
add
lods
xchg
int3
dec
or
xor
xchg
leave
xor
adc
xlat
push
add
jmp
pop
mov
fists
mov
cwtl
jns
sub
or
icebp
cs
adc
shl
rcrl
dec
adc
mov
lds
push
outsb
add
or
fldl
sti
push
inc
stc
mov
decl
cmc
fcmove
das
enter
test
lret
push
jne
mov
stc
loope
aas
cmp
mov
inc
adc
cmc
outsb
int3
add
add
clc
pop
lock
jmp
shl
ret
mov
je
sbb
add
jg
insb
hlt
add
int3
add
pop
cmpsl
rcl
cmpsl
rolb
aad
push
push
out
roll
jmp
shlb
add
push
xor
lcall
leave
push
add
xchg
jne
call
lret
add
leave
mov
mov
cld
push
mov
push
cmp
or
push
sahf
mov
jne
out
shlb
xchg
lret
test
dec
shlb
push
cmp
mov
xor
lea
push
mov
pusha
add
add
add
push
loope
cmp
pop
dec
pushf
jo
mov
sarb
std
add
dec
in
leave
test
cltd
dec
fmuls
xor
add
int
into
mov
cmp
add
add
add
or
sbbl
push
arpl
xchg
movsb
mov
jp
add
popf
push
call
add
push
nop
into
push
bound
dec
mov
les
popa
fistps
data16
fisttpl
adc
adc
imul
in
bound
push
in
mov
int3
jmp
add
push
pushf
sbb
jo
xor
mov
subb
add
pop
mov
unpcklps
mov
fs
and
jb
adc
and
sub
xor
addl
pusha
ret
push
add
push
dec
fst
push
dec
add
aad
shrb
push
sub
dec
pop
les
aas
pop
les
push
inc
stc
mov
insb
add
sbb
mov
bound
mov
push
cwtl
push
sti
andb
mov
insl
in
sub
enter
mov
jge
sbb
jl
and
jl
sub
jge
mov
rorl
popf
mov
les
add
mov
int3
in
fmull
jns
mov
push
push
sbb
jnp
or
xchg
stc
dec
mov
insb
or
inc
cmc
push
rolb
ficomps
lret
or
shrb
pushl
cmp
outsb
xor
movsl
int3
xor
jo
in
mov
dec
push
jge
int3
pop
out
mov
add
add
pop
out
mov
lods
int3
mov
out
data16
hlt
pop
test
pop
test
div
jg
nop
jge
cmpsl
hlt
mul
scas
sahf
shlb
pop
mov
xchg
xchg
lods
ds
mov
xchg
and
xor
mov
cmc
testl
cwtl
add
add
notl
stos
dec
hlt
adc
push
add
sti
dec
jnp
pop
jmp
int3
sahf
and
sub
adc
or
stos
sbb
add
xor
sti
into
push
jnp
inc
cwtl
testb
pop
arpl
mov
dec
das
jno
orl
add
enter
enter
enter
sti
int
cmc
push
mov
push
jnp
ret
lods
bound
push
fisttpll
ds
mov
int3
bound
push
mov
out
pop
mov
add
int3
add
rclb
dec
pop
dec
stc
xchg
fs
xchg
add
lret
outsb
mov
add
xor
mov
pop
cmp
add
mov
xor
ret
push
pop
nop
arpl
push
or
mov
inc
fs
mov
enter
or
stc
loop
scas
pushf
mov
mov
pop
les
aas
pop
les
mov
subl
call
dec
aam
bound
jge
addr16
jge
pushf
adc
lods
addl
push
scas
add
cltd
scas
add
cltd
mov
incb
test
jl
ret
push
loop
adc
fs
jne
and
push
scas
add
scas
add
or
push
sub
add
lods
and
lcall
orb
sub
out
add
or
add
in
mov
fwait
add
enter
stos
shrb
ror
bnd
clc
aad
mov
addl
push
dec
push
lcall
subl
jbe
add
jnp
adc
cwtl
sub
test
into
rorl
push
jl
hlt
cmpsl
ret
jbe
stos
inc
adc
push
stc
testl
push
test
scas
ret
jbe
cltd
inc
adc
mov
test
sub
testl
xor
notl
jnp
add
ret
jbe
lret
jb
adc
mov
sbb
repz
mov
pop
lock
xchg
jae
inc
adc
inc
jg
idivl
push
test
outsl
in
into
and
lret
js
outsl
cmc
inc
sbb
into
jle
test
push
sub
daa
ljmp
lock
inc
outsb
lock
lods
sbb
mov
sub
xlat
outsl
jmp
adc
mov
popa
int
mov
adc
int
lahf
push
mov
mov
insb
enter
insb
push
and
mov
scas
and
ljmp
jmp
mov
popl
sbb
mov
ja
or
mov
jge
fbld
pop
icebp
ret
mov
movsb
push
clc
mov
int
push
ss
andl
inc
cmp
bound
out
ret
lock
insb
sub
pop
jae
bound
ficomps
mov
lea
jae
add
clc
xor
jmp
cmp
fwait
add
pushf
sbb
out
jle
test
sub
hlt
mov
jae
loop
in
mov
jge
and
scas
push
mov
inc
xor
mov
xchg
pop
out
jmp
push
out
mov
ret
mov
mov
add
mov
mov
push
scas
call
xor
cmpsl
mov
push
lock
add
add
rcrb
sbb
cld
mov
loop
cmp
or
add
add
jbe
sti
and
mov
add
and
add
pop
out
mov
dec
sbb
cmc
jecxz
adc
mov
add
scas
add
out
add
int3
jmp
outsb
clc
inc
lods
pop
pop
sahf
aad
xchg
mov
faddl
add
sti
jnp
popa
sarl
push
or
ret
or
sub
decb
jnp
push
fwait
jp
shrb
adc
jb
mov
sbb
adc
out
ja
adc
flds
add
xchg
filds
push
out
movb
mov
jnp
mov
sbb
pop
jbe
fildl
sub
call
xchg
stc
jge
fldcw
and
sub
inc
add
notl
mov
sbb
dec
enter
pop
insl
icebp
fldt
idivb
outsl
pinsrw
dec
xchg
and
fdivs
push
adc
mov
sub
dec
mov
pop
mov
sbb
add
add
add
xchg
cmp
add
push
cmp
sahf
cmp
repz
add
and
je
lea
cwtl
dec
or
cmpsb
hlt
incl
cmp
push
mov
sbb
stos
add
xor
add
ret
lods
leave
add
test
jns
ret
and
add
pop
leave
add
insl
loopne
inc
or
loopne
call
inc
pusha
je
sbb
adc
mov
fidivl
daa
out
addl
add
adc
add
mov
or
lock
es
fbstp
call
andl
ret
dec
push
mov
mov
adc
xor
mov
xor
xor
and
incl
and
xor
les
cmp
xor
jmp
push
jl
add
fcmove
rcr
pop
in
add
dec
aad
xchg
jl
out
loope
mov
xchg
daa
add
dec
icebp
pop
adc
cld
jbe
sti
incl
sub
mov
xor
mov
dec
or
push
cld
jns
jae
ficomps
push
mov
cmpsl
dec
scas
int3
sahf
dec
pushf
int
add
inc
xor
adc
js
inc
daa
or
add
incl
iret
adc
mov
ljmp
addl
pushl
fs
add
orb
mov
stos
rcrb
pusha
mov
mov
fwait
jmp
call
mov
mov
adc
and
mov
ficoms
cld
nop
rorb
add
add
lcall
adcb
cmp
dec
jne
add
clc
lahf
pop
mov
clc
into
fidivrl
testl
pop
xchg
inc
or
xor
and
rolb
mov
mov
add
sub
mov
cmp
popf
pop
loopne
scas
cmpl
lcall
add
add
add
dec
mov
fs
adc
js
adc
pop
add
mov
call
mov
mov
pop
popf
cltd
adc
and
mov
jno
out
ljmp
xor
clc
mov
add
hlt
sbb
mov
or
in
add
ss
pop
sti
add
mov
cmp
pop
testl
add
popf
int
mov
loope
notl
sub
add
cmpsb
dec
testl
push
dec
mov
mov
ficompl
out
in
and
sub
push
mov
dec
push
repz
fsubr
idivl
dec
mov
leave
cmpl
in
jp
call
in
mov
aad
jnp
mov
add
push
repz
xor
jp
call
add
xchg
icebp
js
out
xor
cmp
inc
movsl
daa
lock
js
and
js
inc
movsl
daa
call
inc
popf
daa
adc
adc
leave
std
adc
enter
in
pop
clc
ja
pop
inc
and
inc
mov
add
icebp
repnz
mov
and
xchg
icebp
jne
rolb
sub
add
mov
shlb
xchg
xchg
repnz
mov
repnz
lret
flds
inc
notl
daa
addl
add
lods
loop
add
test
add
lods
mov
mov
add
in
mov
shrb
lret
pop
gs
jp
movsl
add
in
outsl
cmp
popa
dec
std
mov
add
xor
int3
pop
insl
call
cmp
add
jle
inc
test
adcb
xchg
xor
inc
imul
push
inc
pop
movl
addr16
into
add
pop
jp
inc
sub
sti
jmp
into
add
sbb
add
mov
out
mov
mov
incl
outsl
add
int3
jmp
xor
test
mov
add
adc
lcall
adc
add
push
pusha
adc
cld
enter
int3
lods
jne
fdiv
repz
fcoml
je
and
sub
outsl
xor
fdivrs
and
outsl
xchg
jne
mov
pop
sbb
jae
jnp
icebp
pop
add
cld
shrb
pop
je
mov
adc
pop
add
addr16
or
mov
mov
fdivr
lss
idivl
pop
or
ljmp
add
add
sub
or
and
cmp
xchg
psllq
adc
mov
imul
mov
sarb
add
dec
inc
cmpsl
dec
inc
mov
sbb
jnp
inc
add
loop
mov
sbb
jb
in
jo
or
decl
jnp
dec
int
mov
roll
adc
inc
ljmp
cmp
and
les
call
inc
aam
ss
int3
jmp
jge
mov
inc
and
push
leave
add
add
repz
add
mov
dec
adc
mov
adc
lods
mov
cltd
mov
enter
rolb
push
cmp
mov
pop
ss
xor
mov
cmp
or
jne
stos
xchg
add
adc
roll
adc
push
jb
rorl
ficompl
jb
xor
mov
mov
add
add
jb
add
lret
xor
insl
in
add
rolb
inc
fstps
out
pop
and
fs
push
sahf
inc
call
lock
jne
aad
mov
psubsb
xchg
push
and
dec
xor
call
test
mov
leave
cmp
dec
pop
rorl
dec
xor
incl
sub
call
ret
mov
ret
adc
dec
lds
or
outsb
aaa
sbb
loop
ret
push
out
loope
lret
mov
sti
out
fs
add
and
add
mov
pop
repz
not
repnz
add
sbb
imul
jg
sbb
push
jecxz
into
leave
mov
xor
mov
push
call
lds
cmp
aas
jl
clc
test
repz
arpl
add
add
jp
add
add
test
lret
jb
push
fwait
sub
sahf
fdiv
jle
in
fdivr
outsb
add
insb
sti
pop
mov
aas
add
add
shll
or
xorb
mov
jns
inc
int3
jb
ret
pop
push
mov
clc
lret
jmp
aas
sbb
jo
adc
pop
push
or
ret
mov
jo
push
adc
dec
or
mov
les
inc
push
lods
repz
int3
add
mov
lcall
scas
adc
mov
sti
rol
jl
push
inc
lds
push
cmp
add
mov
fdivs
call
rol
inc
push
enter
or
fsub
adc
call
fistpl
dec
jns
xchg
dec
push
lock
fsub
sbb
push
cmp
push
neg
ljmp
adc
sti
jns
and
out
xlat
cld
lea
cmp
push
mov
faddl
add
sbb
push
sbb
and
and
push
mov
fstps
out
call
adc
push
adc
push
rorb
add
cmc
call
push
fxch
mov
int3
jmp
add
jno
out
lcall
jmp
cmp
mov
cmp
pop
lret
xchg
out
ljmp
inc
add
inc
add
add
add
sub
add
mov
add
mov
notl
sbb
inc
add
call
add
scas
loop
negl
rolb
repz
add
loop
xlat
mov
rolb
repz
add
loopne
mov
roll
mov
inc
add
add
add
loope
xchg
add
inc
add
add
add
loope
add
rolb
rcl
add
add
add
notl
roll
sbb
inc
add
add
add
pop
loope
add
inc
iret
ret
add
int3
loope,pt
add
scas
into
ret
add
int3
push
loope
add
mov
inc
int3
jmp
loopne
add
mov
inc
int3
jmp
loopne
add
mov
add
iret
mov
add
mov
mov
inc
int3
jmp
loopne
add
mov
ret
add
int3
jle
dec
add
rol
lret
add
xor
add
cld
divb
dec
mov
jmp
and
test
mov
iret
cli
mov
jmp
add
add
add
add
jl
push
pusha
out
push
lahf
jmp
adc
add
add
adc
add
adc
add
jmp
add
adc
add
adc
add
adc
add
jmp
imul
and
pop
iret
or
sub
sbb
sub
add
sbb
adc
sbb
dec
adc
sub
dec
adc
iret
xor
sbb
add
sbb
in
adc
into
clc
adc
into
in
fxch
hlt
adc
into
sub
jmp
into
adc
fxch
loopne
fxch
int3
adc
into
les
cltd
into
aam
cltd
into
or
test
into
hlt
adc
into
lods
adc
mov
adc
mov
add
add
lock
add
icebp
hlt
add
lock
add
adc
add
adc
add
hlt
add
hlt
add
hlt
add
add
repz
add
add
repnz
repnz
repz
adc
add
adc
add
adc
add
lock
lock
add
repnz
repz
fsubr
add
jmp
add
fsubr
add
fucomi
add
fucomi
add
jmp
add
fucomi
add
fucomi
add
fucomi
add
fucomi
add
jmp
add
shr
add
fsubr
add
shr
add
shr
add
shr
add
rcl
jmp
add
fucompp
add
jmp
add
jmp
add
fiadds
jmp
add
pop
jmp
add
jmp
add
add
pop
jmp
add
jmp
add
jmp
add
jmp
add
add
jmp
add
pop
pop
jmp
add
add
pop
jmp
add
jmp
add
adc
add
pop
jmp
add
pop
add
lret
inc
punpckhwd
sub
imul
and
pop
lret
xor
imul
sub
pop
lret
adc
xor
sub
sbb
add
lret
sub
sbb
adc
sbb
and
sub
or
sub
sbb
sbb
add
sbb
adc
jmp
lret
fxch
hlt
push
fxch
add
jmp
lret
fxch
in
fxch
xor
test
lret
cltd
lret
cltd
lret
add
add
push
cmc
add
hlt
add
div
add
push
cmc
add
cmc
add
add
hlt
add
cmc
add
hlt
add
cmc
add
hlt
add
push
cmc
add
hlt
add
push
repz
push
repz
repnz
div
add
push
repz
push
repz
repnz
repz
push
repz
add
add
int
add
into
jmp
add
int3
jmp
add
jmp
add
int
add
int
add
int
add
jmp
add
jmp
add
int
add
int3
jmp
add
int
add
int
add
aam
add
jmp
add
sub
jmp
add
loop
add
add
add
add
add
add
add
add
jmp
add
jmp
add
pop
jmp
add
jmp
add
add
jmp
add
or
add
add
add
add
jmp
add
add
jmp
add
jmp
add
adc
fxch
mov
test
iret
out
adc
iret
inc
or
test
iret
pop
or
imul
cmp
pop
iret
xchg
mulps
xor
imul
sbb
add
cmp
sub
and
sbb
sbb
sub
adc
sbb
or
jmp
into
in
or
into
clc
or
into
in
jmp
in
in
in
call
or
add
push
in
sbb
in
and
in
adc
in
ss
in
cmp
in
add
add
add
in
xor
in
rolb
mov
or
add
cld
in
test
in
pushf
or
add
cld
in
test
in
pushf
or
add
cld
in
out
mul
add
push
jecxz
mov
jecxz
ljmp
jmp
add
lret
mov
jmp
add
ror
jmp
add
add
jmp
add
enter
enter
enter
enter
jmp
add
enter
enter
enter
enter
enter
enter
jmp
add
enter
enter
jmp
add
jmp
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
or
add
or
add
jmp
add
jmp
add
push
adc
add
adc
add
jmp
add
jmp
jmp
lret
orb
lret
insb
or
lret
or
jmp
lret
pop
or
lret
push
or
lret
pushf
or
lret
jne
test
lret
insl
or
lret
cwtl
or
test
imul
jl
add
mov
imul
orb
lret
insb
or
js
sub
or
lret
and
sbb
or
sbb
sbb
sub
add
sub
adc
add
add
in
or
in
cld
or
add
sti
in
hlt
cli
in
clc
or
add
or
add
cli
in
in
in
call
or
add
cli
in
in
in
call
add
in
int3
or
add
in
cli
in
cs
in
sar
in
cli
in
enter
lods
or
add
sti
in
movsb
cli
in
push
or
add
cli
in
cwtl
or
jmp
add
jmp
add
ret
add
add
add
jmp
add
fs
push
ret
pop
ret
sub
jmp
add
ret
dec
ret
cmp
jmp
add
ret
cmp
jmp
add
jmp
add
jmp
add
shr
or
jmp
add
shr
loopne
add
add
or
add
or
add
or
add
fmull
jmp
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
xor
jmp
sub
xchg
or
enter
enter
enter
enter
enter
enter
iret
mov
jmp
iret
orb
iret
insb
or
iret
js
jmp
iret
jo
fxch
pop
or
iret
rorb
cltd
iret
pusha
or
iret
pop
or
iret
push
or
imul
xor
pop
iret
inc
or
sub
imul
and
pop
iret
mov
add
add
or
add
stc
in
mov
in
jle
in
cmp
add
stc
in
sbb
or
add
sti
in
push
in
pop
or
add
in
lock
in
in
in
call
add
in
push
sti
in
stc
clc
in
in
or
add
or
add
clc
in
jmp
or
add
or
add
sti
in
fprem
in
int
in
rorl
int3
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
xchg
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
add
dec
or
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
or
add
or
add
or
add
or
add
or
pop
int3
xor
pop
int3
push
or
imul
push
or
and
pop
int3
push
or
int3
sbb
sub
push
or
int3
adc
sbb
decb
sub
or
sub
testb
int3
add
sbb
out
or
lret
cli
or
lret
out
fxch
repnz
lret
fimuls
jmp
lret
or
lret
loop
fxch
into
or
lret
or
lret
mov
or
test
lret
ret
lret
scas
or
in
mov
stc
in
mov
in
cmpsb
or
add
stc
in
mov
or
add
stc
in
xchg
stc
in
xchg
in
mov
in
jle
in
cmp
add
in
jp
in
outsb
stc
in
jb
in
or
add
in
pop
add
in
stc
in
push
or
add
in
dec
stc
in
push
stc
in
inc
or
add
in
ds
lret
jmp
add
cmp
jmp
add
es
sub
jmp
add
push
sbb
jmp
add
push
or
jmp
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
jmp
add
push
or
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
or
cltd
enter
enter
enter
enter
enter
enter
imul
or
xor
imul
sub
pop
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
iret
out
pop
jmp
iret
out
fxch
repnz
jmp
iret
ljmp
iret
loop
test
cmc
add
add
cmc
add
push
add
pop
cmc
add
push
add
pop
cmc
add
pop
cmc
add
pop
cmc
add
pop
cmc
add
hlt
add
cmc
add
hlt
add
cmc
add
hlt
add
cmc
add
hlt
add
hlt
add
push
add
std
hlt
add
add
std
hlt
add
add
hlt
add
cmc
add
lret
jmp
add
jmp
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
repnz
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
rolb
jmp
add
call
add
call
add
call
add
call
add
call
add
call
add
call
add
xor
call
add
call
add
call
add
call
add
call
add
call
add
call
add
jmp
int3
pop
push
fxch
push
fxch
push
push
test
int3
dec
push
cltd
int3
pop
push
cltd
int3
inc
push
test
int3
or
cltd
int3
testl
imul
cs
pop
int3
cmp
pop
int3
es
imul
push
push
pop
int3
sub
pop
int3
push
push
sub
and
sub
push
push
sbb
sbb
sbb
push
push
sub
adc
sub
incb
sbb
testb
lret
out
add
std
hlt
add
add
hlt
add
add
std
hlt
add
add
hlt
add
add
hlt
add
add
hlt
add
add
hlt
add
std
hlt
add
std
hlt
add
std
hlt
add
std
hlt
add
std
hlt
add
std
hlt
add
std
hlt
add
std
hlt
add
add
shr
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
shr
add
loop
jmp
add
shr
add
shr
add
shr
add
roll
jmp
add
sti
call
add
sti
call
add
sti
call
add
sti
call
add
cld
call
add
sti
call
add
cld
call
add
cld
call
add
cld
call
add
push
cld
call
add
cld
call
add
cld
call
add
call
add
cld
call
add
ljmp
leave
xchg
add
leave
jle
sbb
mov
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
cltd
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
repz
add
add
cld
repnz
add
add
cld
repnz
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
int3
jmp
add
sub
jmp
add
int3
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
lret
jmp
add
jmp
add
jmp
add
jmp
add
jecxz
out
xchg
jmp
add
int3
cmpsb
dec
pop
ret
add
repz
add
add
pop
faddp
add
int3
add
scas
pop
pop
sti
dec
cld
outsb
add
subl
fisubrl
jp
and
mov
dec
mov
jmp
add
add
lods
pop
xchg
inc
lret
sbb
addb
jmp
test
insl
in
lahf
sbb
and
xchg
decl
pop
push
dec
out
add
neg
add
test
xchg
int
push
loopne
mov
add
dec
loopne
cwtl
xor
mov
mov
negb
in
addl
shlb
pop
nop
mov
addl
je
dec
insl
or
cltd
hlt
sbbb
pop
mov
addl
ret
add
adc
dec
xor
add
stos
or
out
out
mov
inc
mov
or
inc
lret
inc
mov
lret
adc
xor
jmp
ret
call
lcall
or
mov
dec
or
and
jecxz
add
mov
insl
push
cmp
add
repz
adcl
ds
xor
mov
add
jne
inc
insl
add
mov
jne
aad
std
subb
cld
ret
and
mov
cmpb
roll
movsl
add
add
xchg
sub
mov
add
clc
outsl
incl
cld
in
sarl
addr16
push
mov
movl
ficomps
out
pusha
or
movsl
vpacksswb
add
jmp
or
pop
add
jmp
aam
dec
sbb
add
outsb
inc
and
sbb
outsl
popa
or
push
push
cmp
int3
jmp
or
lret
rol
aam
dec
movsb
add
xchg
fstl
inc
repz
jecxz
sub
xor
fisubs
add
and
inc
dec
cmp
and
ffreep
push
fwait
inc
xor
hlt
and
add
ret
shrl
lahf
pop
adcb
insl
out
xor
xchg
call
stos
jle
and
dec
jne
inc
outsl
std
imul
and
dec
jne
rep
std
imul
decb
icebp
fiadds
push
inc
test
add
rcr
fiadds
ja
out
ljmp
xor
sbb
add
xor
and
subb
ds
cmp
adc
xor
pop
and
call
push
insl
xor
lods
mul
xchg
movl
add
lods
cmc
andb
ret
and
jmp
adc
inc
pushf
in
ds
xor
andl
inc
lods
in
fimuls
sbb
out
ret
das
xor
add
sub
jno
add
pusha
testb
scas
inc
cli
xor
div
and
idivl
xor
ret
subl
cmp
xchg
lock
add
xor
out
xorb
insl
push
dec
lcall
in
add
cmp
mov
insl
push
jge
divl
test
testl
lods
lea
dec
movsb
in
push
adc
insl
fucomi
subl
fnsave
dec
fldt
dec
dec
or
jnp
jecxz
std
scas
push
jecxz
stos
xorl
inc
mov
fldt
inc
jecxz
sbb
add
push
add
mov
jecxz
mov
push
int3
int3
or
scas
push
and
sub
mov
inc
jbe
imulb
jnp
sbb
inc
scas
andl
testb
xor
push
add
imul
movsb
bound
or
jae
out
fwait
xchg
test
sbb
cmp
jmp
jecxz
lods
outsb
loop
addps
imulb
leave
add
push
repnz
inc
mov
and
dec
cmp
and
lret
aad
hlt
push
xchg
loope
inc
xchg
aad
add
xor
add
test
and
inc
sub
adc
mulb
cmpl
outsb
push
add
out
incl
push
mov
shlb
add
and
call
xorl
or
shlb
sub
add
insl
add
sub
ret
xor
add
dec
insl
or
iret
jne
jmp
hlt
into
add
inc
dec
add
jmp
pop
ret
addl
add
jne
out
jl
jecxz
add
movsl
xorl
aaa
or
adc
leave
lods
ret
orl
in
out
jne
in
dec
pop
sub
jne
out
and
testl
and
add
sub
mov
jg
cli
in
sbb
loope
jne
in
add
icebp
lods
mul
and
mov
inc
pushf
sbb
xchg
or
test
inc
mov
in
mov
test
std
cmpsl
icebp
sbb
int3
movsb
loopne
xchg
lret
in
mov
imul
jg
mov
add
add
movsb
mov
xlat
test
cmp
nop
mov
xlat
test
cmp
out
jl
das
xlat
test
cmp
out
dec
mov
xlat
test
cmp
out
push
mov
test
out
xor
fisubs
fdivp
sub
sbb
cmp
ret
inc
sub
pusha
push
jmp
jo
imulb
xchg
call
add
aad
mov
imulb
jg
push
jmp
mov
imulb
ret
int
dec
in
xchg
faddp
push
movb
cli
jecxz
aam
faddp
push
or
fiadds
jnp
cmc
cmpsb
push
or
out
imul
add
mov
je
xor
stc
outsb
sbb
or
into
in
incl
cs
call
ret
and
inc
cli
int3
ret
call
sub
loope
sbb
ret
sbb
aad
sbb
ret
ficompl
call
sbb
add
scas
cld
cs
or
add
xor
sub
hlt
je
xor
jge
shlb
add
hlt
incl
xorl
insb
push
cmp
sbbl
insl
icebp
jp
stc
iret
jne
jne
loope
add
cli
cmpsb
divl
xchg
mov
jnp
add
cmp
arpl
sbb
cmc
in
lcall
push
sbb
in
in
dec
pop
in
ret
subl
aad
lcall
mov
mov
incl
sti
fcomip
daa
sbb
sti
insb
cmc
lret
push
add
mov
dec
add
add
pushf
adc
jne
ret
in
scas
xlat
shrl
ss
jmp
scas
iret
shrl
test
jmp
lods
mov
sub
jecxz
stos
shrl
cli
into
ficompl
punpckhdq
add
lret
je
adcl
aad
add
pop
shl
or
ljmp
shrl
scas
inc
inc
and
add
add
inc
in
mov
fildl
hlt
imul
scas
dec
jne
add
jge
add
add
ret
dec
jne
cld
pusha
or
pop
sbbl
mov
int3
call
add
pop
sub
shr
imul
push
lds
out
js
add
add
pop
adc
ret
or
cmp
insb
pop
int
cmp
ficoms
shrb
fwait
mov
ret
and
cmc
je
ss
and
xor
sti
call
adc
dec
insl
or
xchg
sbb
loope
out
lcall
dec
insl
push
fisubs
out
incl
call
ret
xor
inc
or
ret
call
sbb
rorb
and
addl
cli
push
pop
ret
and
add
xor
cmpl
ljmp
insl
cli
das
or
andl
add
add
or
pop
and
and
subl
push
out
adc
push
lods
mul
gs
or
shl
out
pop
movsl
test
jno
mov
add
add
aas
add
loop
add
add
inc
cli
jg
rorl
push
or
add
sarb
add
lret
jmp
scas
std
lods
imul
sbb
jb
push
sti
mov
inc
jecxz
push
sti
jl
add
dec
test
dec
out
cld
xchg
stos
lods
sbb
dec
in
push
pop
out
add
push
lods
ret
inc
movsb
loopne
adc
fucomi
xchg
out
gs
jecxz
pop
pop
fucomip
add
pop
jmp
test
pushf
add
inc
movsb
loopne
adc
ljmp
push
add
stos
imulb
dec
jne
cmp
shlb
cmp
std
jae
ss
mov
cmp
mov
pop
xor
bound
aad
pusha
sub
dec
pusha
push
lds
and
cmp
lods
sub
and
add
pop
adc
sbb
or
stos
bound
push
add
cmp
or
inc
add
xchg
cld
adc
add
testl
dec
dec
insl
and
mul
mov
dec
xor
lea
lret
lcall
inc
or
xor
pmulhuw
call
add
mov
mov
xorps
jnp
outsl
leave
or
jmp
int
rcrb
mov
sbb
std
je
xor
clc
ds
mov
mov
push
je
test
leave
add
and
ret
mov
add
jecxz
add
fiadds
scas
and
xor
jecxz
add
repz
int3
pushl
sti
push
add
aaa
idivb
jnp
push
add
sarl
loopne
mov
add
jae
and
jo
add
add
jecxz
psubusb
neg
popa
pop
push
add
sbb
arpl
clc
mov
loop
add
add
sbbl
add
stos
fwait
loop
adc
cli
add
xchg
push
add
fwait
mov
cmc
test
dec
lock
lds
inc
dec
int3
ffree
adc
cs
lods
aaa
int3
test
add
lcall
pop
push
fistps
ret
mov
scas
out
lret
arpl
or
sbb
adcb
add
add
out
jnp
lret
clc
xchg
or
out
int3
out
das
fnstsw
out
lret
inc
test
sub
mov
mov
lret
add
cmpsb
mov
jmp
inc
jmp
cli
mov
fists
xlat
addl
cwtl
mov
sti
ficoms
lret
outsl
ret
imulb
addr16
cmp
cld
or
push
out
add
add
add
out
add
pop
cld
lret
add
pop
mov
xchg
lahf
ret
add
enter
inc
pxor
aam
in
cmc
lret
lcall
sub
inc
sub
ljmp
cmp
sti
add
ljmp
add
jno
ret
ljmp
or
enter
jno
ret
push
mov
call
xor
sbb
and
add
sbb
sbb
add
sub
sub
call
jb
jge
lret
jno
out
push
mov
fxch
add
ret
rcll
roll
popf
pop
sbbl
out
xchg
or
call
jnp
or
lds
ret
mov
add
fs
add
mov
sbb
cmpsb
idivl
ss
push
std
push
cmc
subb
repz
mov
add
ret
cmp
and
cmp
jmp
cmpsl
not
jne
cli
inc
hlt
out
inc
pushf
test
enter
in
jecxz,pt
popf
loopne
lea
aas
cli
lret
out
add
loopne
incb
call
fwait
mov
inc
out
cld
aad
sqrtps
test
add
jp
mov
decl
dec
shl
xchg
aam
stos
or
fwait
rol
mov
inc
mov
mov
enter
int
loope
adc
add
and
add
or
out
int3
add
add
adc
add
mov
in
jmp
sub
inc
cmp
rorl
dec
je
sti
cmc
es
fimuls
sahf
mov
add
pop
scas
int3
cld
mov
into
imul
lds
jne
dec
clc
icebp
loopne
call
stos
jg
push
push
cmovnp
icebp
test
imulb
mov
std
or
push
jmp
stos
rorb
testb
lret
fxch
add
add
ret
mov
add
cltd
lret
rcll
idiv
jns
cli
lcall
lret
leave
add
call
test
ljmp
add
imul
cmc
lcall
idiv
push
stos
cli
ljmp
lret
add
lret
mov
mov
cli
lcall
lret
sbb
add
addl
idiv
pop
lods
cli
incl
mov
add
mov
add
mov
cld
iret
push
out
inc
jecxz
cld
mov
mov
add
gs
cmpsl
push
clc
lcall
mov
add
mov
add
dec
cmp
jg
repnz
jecxz
outsl
mov
add
add
xor
decl
aam
inc
mov
add
mov
add
sub
cld
das
cmp
jmp
jmp
sti
pop
mov
add
mov
add
sbb
pop
pop
out
jle
sti
test
out
add
adc
cmc
xlat
les
add
out
add
das
cmp
scas
les
add
add
out
add
sbb
hlt
xchg
call
add
int3
out
add
mov
les
pop
call
add
int3
sub
les
call
add
int3
out
add
out
add
out
add
sub
add
add
xor
notb
sub
shl
add
shl
push
shl
cmc
mov
divb
cmc
mov
notb
mov
testb
mov
notb
xor
negb
adc
testb
idivb
or
negb
in
mov
testb
testb
mov
add
add
sti
hlt
incl
hlt
jmp
add
call
add
call
push
cmc
ljmp
add
incl
add
ljmp
push
cmc
jmp
push
cmc
pushl
add
jmp
add
call
cmc
ljmp
push
cmc
call
cmc
incl
add
jmp
cmc
sti
cli
hlt
jmp
sti
hlt
incl
adc
hlt
ljmp
into
add
pop
add
add
add
inc
cld
pop
loop
cld
pmaxsw
pop
or
incl
dec
cld
imul
inc
cld
out
cmp
out
dec
cld
fisttps
dec
cld
xlat
jae
cld
iret
pop
dec
cld
pop
dec
cld
mov
mov
ds
cmpsl
in
cld
lahf
cmpl
xchg
popl
cmp
add
cmp
ja
cmp
outsl
idivl
cld
addr16
cld
pop
fnstsw
cld
push
mov
cld
dec
mov
aas
cld
aas
test
cld
aaa
jae
cld
das
int3
aaa
inc
and
push
inc
sbb
push
inc
or
nop
inc
add
mov
cld
rorb
sar
in
testb
fmuls
rcrb
rcrb
rolb
shl
add
jle
movsb
rclb
xchg
shlb
mov
dec
dec
test
cmp
ljmp
ror
fs
pop
shrb
dec
rcrb
cmp
add
mov
mulb
lret
lret
out
mov
testb
shl
dec
shl
add
shl
cmp
negb
dec
shl
cmp
idivb
cmp
neg
mov
imulb
inc
shl
inc
shl
inc
shl
inc
shl
inc
shl
inc
shl
ret
mov
imulb
ret
mov
mov
testb
or
dec
or
stc
or
jmp
or
incl
cmp
cmc
decl
cmc
pushl
or
jmp
or
ljmp
or
fisttps
cmc
sti
or
decl
push
cmc
cmp
add
cmc
decl
cmc
incl
push
cmc
pushl
push
cmc
decl
cmc
push
add
cmc
in
add
cmc
ljmp
push
cmc
cmp
add
cmc
pushl
cmc
lcall
lods
add
aas
cld
dec
pop
aas
cld
inc
xor
cld
aas
sbb
cld
aaa
adc
cld
das
add
cld
daa
jp
cld
pop
mov
cld
pop
mov
ss
pop
cmpsb
ss
pushl
inc
cld
out
iret
inc
cld
out
inc
cld
fbld
ss
iret
pushl
cld
mov
dec
ss
scas
cmp
cld
cmpsl
mov
inc
cld
add
daa
aaa
cld
xchg
cld
jg
aaa
cld
ja
add
add
jmp
add
dec
out
add
add
pop
xor
jle
sub
call
xor
fiadds
add
add
fidivs
cld
mov
lods
das
in
mov
scas
das
fdivrl
das
add
mov
outsb
das
mov
mov
hlt
movsb
mov
lods
cs
mov
in
test
xor
pop
xor
negb
xor
imulb
adc
testb
divb
shl
push
shl
add
add
icebp
mov
mulb
repnz
imul
add
add
mov
mov
mov
mulb
ds
idivb
mov
notb
aas
mov
test
mov
not
ds
testb
mov
testb
add
cmc
jmp
cmc
pushl
add
cmp
jmp
cmc
call
cmc
incl
xchg
add
ljmp
add
dec
add
incl
adc
pushl
cmc
jmp
cmc
lcall
cmc
lcall
cmc
ljmp
adc
lcall
add
call
add
pushl
push
pushl
push
incl
push
fcos
hlt
jmp
hlt
incl
pop
sub
cld
jg
sub
add
ja
ds
outsl
data16
addr16
cmp
pop
push
cmp
push
cmpb
dec
fmuls
inc
les
aas
dec
cld
aaa
clc
dec
cld
das
or
cld
daa
and
pop
sub
cld
pop
and
cld
pop
add
cld
negl
dec
cld
out
fisttpl
out
dec
cld
fildll
ds
iret
mov
ds
mov
insl
dec
cld
add
sti
dec
cld
lahf
int3
xchg
dec
xchg
mov
js
test
mov
dec
insb
mov
out
xor
xor
xor
mov
push
inc
cmp
inc
xor
mov
sub
scas
dec
and
ret
mov
ljmp
mov
xchg
inc
hlt
mov
inc
xor
in
call
cmp
mov
push
add
int3
sbb
mov
mov
lods
mov
not
fdivs
notb
mov
cmp
cmp
mulb
mov
imul
add
add
adc
idiv
add
cmp
int3
adcb
int3
sub
int3
sbb
int3
xorb
fdivl
subb
imulb
mov
cmp
cmp
neg
add
cmp
mov
addb
mov
notb
cmp
hlt
lcall
lret
add
test
add
test
lret
add
addr16
add
div
hlt
incl
gs
add
sub
push
pushl
push
lcall
push
jmp
push
pushl
cld
hlt
push
sti
hlt
jmp
sti
hlt
decl
cld
hlt
pushl
cld
hlt
decl
cld
hlt
cmp
hlt
lcall
cld
hlt
jmp
sti
hlt
incl
sub
cld
mov
cmp
scas
movsb
add
add
cmp
lahf
lock
xchg
sahf
cmp
add
mov
cmp
ja
cmp
outsl
sub
cld
addr16
cmp
pop
movsb
add
add
in
dec
pop
int3
push
and
add
lods
inc
or
leave
sub
pop
sbb
cltd
add
push
pop
jae
std
imul
sub
push
sbb
cmp
and
add
sbb
or
sub
add
add
lret
sub
std
and
push
adc
dec
push
or
inc
sbb
sbb
sbb
cmp
dec
sbb
lds
add
sbb
and
cs
sbb
cs
pop
out
mov
add
dec
or
sub
jge,pn
xor
xchg
adc
cltd
daa
test
leave
sahf
sub
dec
sbb
insb
das
pop
cmp
int3
pop
or
dec
sub
and
inc
daa
int3
add
and
pop
daa
jmp
pop
ds
add
fbld
dec
or
cmp
or
and
jmp
fbld
aas
shr
push
push
shl
push
cmp
add
mov
cmp
and
inc
int
sub
add
out
sub
test
imul
out
xchg
add
mull
out
insl
mov
push
add
out
insl
daa
jmp
pop
ds
add
and
jb
cmp
pop
outsb
cmp
lret
or
push
gs
bound
jmp
push
test
mov
xor
jb
xchg
rclb
lods
clc
fs
in
push
jae
iret
or
mov
fs
push
ljmp
inc
fsubs
ljmp
xchg
in
popa
popa
test
cmp
jno
pop
jo
rcrl
iret
dec
add
pop
jo
fstl
sbb
jg
add
daa
insb
inc
repnz
add
pop
aaa
movsl
add
in
push
imul
inc
xor
sbb
les
push
and
pop
ret
cld
dec
add
daa
popa
adc
daa
jae
xchg
pop
jns
bound
dec
in
adc
xchg
push
push
insb
int3
adcl
mov
movsb
add
std
jne
insb
int3
inc
adc
adc
movsb
add
mov
pop
arpl
dec
push
jb
lret
pop
adc
int3
cmc
add
daa
cmp
fs
sub
pop
cmp
popa
and
sub
arpl
inc
pop
pop
int3
cs
xor
add
pop
xor
or
dec
sbb
and
stos
add
and
inc
and
std
aaa
sbb
lds
pop
or
pop
fstl
shll
lret
testl
add
rolb
jecxz
mov
add
cmp
mov
mov
int
push
mov
hlt
sub
dec
jmp
sbb
pop
cmp
or
sub
push
and
dec
inc
testl
jb
repnz
and
lret
add
std
daa
jb
adc
add
add
pop
std
iret
and
jecxz
inc
in
pop
loope
int3
add
lcall
aad
and
int3
and
inc
into
std
pop
pop
mov
lret
add
pop
add
out
push
pusha
lds
add
icebp
pop
add
jmp
add
pop
lret
xor
insb
sub
lret
adc
es
push
push
in
imul
lret
stos
add
out
jbe
or
imul
rcrl
cltd
lret
xor
bound
in
inc
outsb
shlb
add
shll
or
imul
push
arpl
lret
lret
add
lcall
jne
dec
push
imul
flds
inc
xchg
inc
push
imul
sub
cmp
test
ficomps
insb
ds
imul
pop
gs
pop
and
ret
pop
shll
pop
add
rclb
es
dec
add
call
mov
pop
sub
rcrl
sbb
and
add
es
jg
data16
or
loope
adc
imul
cmpsb
and
mov
movsl
sub
add
leave
cmpsb
and
jge
cltd
and
dec
enter
cmp
sbb
jb
inc
sbb
cmp
daa
insb
int3
clts
pop
daa
xor
pop
cmp
and
xor
xor
or
dec
sub
add
lret
adc
cmc
adc
inc
and
and
sub
add
mov
adc
repnz
add
sub
mov
and
jmp
fdivrl
dec
addb
add
add
sbb
xchg
and
add
xchg
stc
es
jns
and
or
add
add
pop
pop
das
push
pop
aas
adc
add
and
pop
das
jmp
pop
sbb
cmp
adc
or
add
push
punpcklbw
cli
pop
dec
jmp
call
and
jmp
aas
fisttpl
monitorx
add
sub
popf
popa
insl
cltd
sarl
add
popa
insl
cltd
roll
fsubrs
popa
movsl
clc
jb
popf
int
je
enter
int
gs
push
dec
pop
mov
incl
sbb
push
popa
dec
lret
inc
push
jmp
jb
or
pop
push
sbb
jb
add
repnz
push
gs
jmp
jb
div
push
jae
loop
insl
push
ret
lret
test
arpl
fbstp
add
or
add
dec
jmp
nop
inc
fs
sbb
cli
std
popa
or
mov
xor
push
pop
jae
pop
pop
cmpsl
or
add
add
popf
and
pop
stc
adc
ljmp
inc
out
outsb
add
add
lret
add
pop
insb
push
in
adc
inc
pop
es
fs
xor
adc
add
movsb
add
sbb
lret
shlb
loope
pushf
adc
and
adc
int3
sbb
pop
xor
rcrl
xchg
sbb
xor
and
test
mov
int3
fdivr
add
cmp
add
sub
aaa
cmp
popa
cmp
or
gs
int3
add
das
sub
xor
sbb
xor
adc
xor
push
sub
int3
stos
add
cs
xor
ds
pop
int3
xor
lret
js
add
add
out
ss
pop
movb
add
add
cs
mov
xor
add
cld
mov
add
mov
sbb
mov
sbb
lock
add
sbb
xor
insl
aas
and
insb
inc
add
cld
cmp
push
fs
imulb
insl
dec
or
dec
out
sbb
jmp
pop
sbb
pop
movups
add
loopne
push
jb
or
inc
outsb
add
jb
dec
jmp
gs
in
arpl
pop
gs
fadds
add
inc
outsb
xchg
leave
jb
ds
gs
call
pop
gs
add
dec
test
jne
mov
push
outsl
mov
pop
outsb
jp
inc
outsl
je
fs
rcrb
and
addr16
mov
jno
push
cmpsb
inc
push
ljmp
imul
bsr
add
push
jae
ret
cs
and
add
add
sbb
adc
int3
sbb
lahf
adc
fldl
testl
adc
jnp
imul
xchg
push
imul
outsb
or
insb
test
push
sbb
and
add
dec
add
push
adc
hlt
lock
pop
adc
mov
xor
repnz
in
inc
gs
inc
idiv
ds
int3
adc
es
xlat
pop
sbb
add
and
cld
out
and
jmp
jmp
iret
icebp
outsl
cmpsb
loop
mov
stc
mov
cmc
dec
cmpsb
faddl
mov
and
sub
mov
add
fwait
adc
repnz
int3
sahf
call
outsl
pop
insb
call
dec
std
out
dec
cmp
imul
in
std
out
aam
es
and
add
or
imul
xor
or
add
add
add
cltd
xor
jne
pop
ljmp
jae
data16
xor
add
add
jae
pop
xor
cs
les
dec
jmp
sub
insb
xchg
sbb
imul
adc
pop
scas
sbb
pop
movsb
or
add
push
stc
pop
jne
cs
ss
addr16
fbld
push
lret
add
pop
imul
cmpsl
idiv
aad
push
gs
subl
rolb
add
lods
push
lock
push
push
lock
add
xor
jne
push
lahf
mov
gs
enter
lods
push
inc
mov
dec
aaa
mov
jb
test
inc
jns
test
idiv
or
outsb
jnp
push
imul
imul
push
imul
imul
repz
fs
popa
add
fsubrl
decl
out
insb
and
shrl
stc
jmp
sarl
adc
out
and
jmp
add
sti
dec
out
fbstp
jns
push
mov
jno
addr16
fcoms
add
mov
lret
gs
in
insb
mov
jne
bound
jb
imul
add
add
dec
lock
and
dec
popa
int3
pop
in
pusha
cs
jmp
aas
sbb
out
aas
push
dec
jecxz
pop
cmp
leave
adc
xor
dec
call
xor
or
or
in
adc
or
rcr
sub
add
int
repnz
in
call
fildll
repz
mov
jmp
pop
call
call
add
pop
mov
in
lret
pop
add
sbb
mov
call
pusha
sub
jmp
icebp
sub
repz
xor
xor
pop
fcoms
add
clc
sti
jb
jecxz
jb
repz
mov
dec
jmp
cltd
xor
fs
sub
add
sub
xchg
sub
data16
add
push
pop
daa
insl
mov
dec
loopne
sbb
ljmp
cld
or
enter
mov
add
add
and
pop
mov
repz
insl
mov
bound
cmpsl
push
fxch
pop
add
test
pusha
outsl
dec
sahf
pop
push
xor
int3
cmp
adc
fwait
popa
je
inc
xchg
push
jae
lods
push
gs
test
push
add
mov
fs
jae
clc
cmpsb
push
push
push
mov
outsl
xor
inc
add
push
gs
scas
addr16
dec
scas
push
push
sub
mov
gs
push
inc
push
mov
add
imul
data16
inc
int
mull
aas
sbb
add
add
decl
psubsw
out
repnz
in
push
add
jecxz
sbb
in
daa
or
jmp
mov
jmp
incl
cwtl
shll
enter
sahf
fisubs
mov
jl
arpl
pop
jmp
jno
pusha
shll
aas
ret
add
popf
pusha
int
sahf
mov
outsb
int3
lret
icebp
add
mov
xchg
sbb
add
jle
jno
jge
aas
sbb
ss
mov
sub
shrl
inc
jmp
cld
pop
jmp
mul
add
int3
sub
and
pop
in
and
sbb
out
int3
nop
add
sub
or
in
das
paddsw
daa
push
mov
lret
mov
filds
mov
es
add
mov
add
push
xor
and
push
data16
stc
pop
mov
sbb
in
or
negb
dec
jmp
in
sub
loope
pop
inc
rcll
fs
pop
inc
leave
loope
sub
data16
popf
negb
sti
sbb
nop
adc
mov
sbb
arpl
dec
jmp
popa
cmp
bound
add
add
pop
aad
add
jl
push
inc
xchg
inc
lods
idiv
inc
push
ja
lods
arpl
lods
jae
insl
mov
add
xchg
cmp
mov
insb
jge
jo
jp
idiv
mov
xor
aas
jnp
outsb
cmp
sub
pop
add
jl
dec
cmp
gs
in
test
gs
jl
inc
add
test
gs
enter
mov
inc
popa
imul
jae
mov
outsl
add
add
pusha
mov
push
repnz
movsl
test
cmp
mov
imul
xlat
imul
call
fs
add
call
push
jmp
je
in
inc
push
inc
in
jb
sub
add
gs
mov
aas
add
aad
sub
jmp
adc
push
add
in
pop
push
jmp
out
xlat
movsb
add
ljmp
in
mov
shr
ficomps
call
fisubs
xor
add
sahf
cs
faddp
loopne
sbb
cmp
iret
xor
gs
add
int
ficomps
test
popa
sub
in
xor
add
es
or
loope
add
es
add
cmp
add
xor
adc
es
add
cmp
fisubs
out
aam
paddsw
in
add
push
subps
push
sub
inc
lcall
push
sbb
gs
roll
add
jno
and
xor
pop
sub
push
xor
add
dec
xchg
icebp
clc
pop
lea
xor
add
add
fdivs
jb
sar
inc
mov
jno
add
add
mov
lahf
cs
cmp
xor
nop
sub
add
or
push
push
cmpsl
pop
fs
test
je
pushf
imul
int
insb
ds
push
push
inc
scas
pop
outsl
jbe
push
jne
pop
outsb
sbb
jmp
push
jnp
arpl
sahf
inc
imul
popa
je
mov
add
inc
jb
scas
push
add
scas
push
fxch
cmpsl
add
jns
push
push
fwait
push
dec
xchg
push
je
movsb
arpl
int3
pop
add
scas
jae
int3
js
jae
jbe
push
add
loope
into
mov
call
lcall
add
fnsave
pusha
sarl
shlb
dec
scas
nop
aaa
into
cld
inc
cwtl
xor
mov
xlat
jno
mov
add
add
pop
icebp
push
movsl
inc
out
xchg
xor
js
xor
push
jb
fsubrl
cmp
pop
push
push
add
add
insb
popa
add
pop
arpl
std
sub
inc
loop
ja
addb
push
loope
jno
or
imul
loopne
add
pop
add
xor
pop
xor
lock
cld
loopne
lret
in
add
xor
ljmp
call
icebp
add
push
popf
fbld
int
fisubrs
es
lret
mov
ljmp
call
fisubrs
and
daa
ja
inc
int3
jp
daa
xor
sbb
xor
add
int3
push
jmp
and
cmp
add
cld
add
xor
add
add
lods
sub
add
xchg
negb
std
pop
std
inc
divl
pop
cmc
pop
sbb
add
stc
pop
aad
sub
sub
cmp
jmp
sbb
inc
mov
sbb
xor
add
sbb
jb
ljmp
cltd
fdivr
imul
test
cmp
and
into
sbb
add
jb,pn
add
push
cmp
idiv
and
push
gs
mov
in
xchg
jo
imul
push
cld
pushf
jae
mov
inc
push
xchg
movsb
pop
push
pop
leave
inc
add
push
dec
stos
pop
dec
push
mov
xor
dec
xchg
dec
arpl
idiv
scas
enter
cltd
popa
je
jo
add
add
add
jno
decl
jno
imul
bound
bound
out
fisubrs
add
jb
test
cmp
sub
mov
inc
and
fildll
xchg
xchg
add
add
jmp
jmp
mov
fildll
jnp
pop
scas
jne
data16
add
add
imul
fstpl
loope
add
add
movsl
ss
inc
outsl
dec
jmp
aas
gs
pusha
jb
loopne
add
add
pop
sbb
push
push
cmp
sub
xor
hlt
std
sbb
out
dec
loopne
xchg
mov
inc
push
xor
sub
cmp
fdivl
sub
test
ret
sbb
or
add
and
out
and
divl
inc
add
sbb
sub
out
and
test
int3
stos
cmc
cwtl
sbb
movsb
add
add
xchg
repz
or
ljmp
notb
add
jae
int3
es
dec
mov
cmp
ds
sub
add
sbb
dec
mov
popw
cld
dec
add
pop
and
pop
cs
or
push
cli
bound
stc
push
sub
add
push
int3
and
jae
aaa
adc
rclb
es
bound
sub
icebp
and
addr16
lock
add
je
mov
add
jb
push
jge,pn
arpl
je
test
cmp
jo
test
mov
gs
xchg
jns
add
arpl
cwtl
push
or
arpl
mov
gs
xchg
jns
xor
arpl
popf
push
pop
jle
arpl
add
jns
push
ja
jb
cmpsl
jns
add
pop
popa
gs
jo
mov
ret
add
data16
aaa
mov
js
inc
lock
mov
lock
out
mov
imul
ljmp
or
imul
adc
ljmp
loopne
insb
loope
iret
push
add
out
dec
fnsave
jmp
mov
call
aas
add
outsb
mov
scas
mov
rorl
das
jge
inc
xchg
js
pop
xchg
push
shrl
cs
xchg
push
lret
mov
add
mov
out
sbb
jmp
int3
push
add
sub
push
sub
dec
sub
push
aad
popa
add
inc
mov
xor
and
add
sub
roll
add
add
push
sbb
lret
add
lret
cli
add
int
add
mov
lock
fiaddl
mov
sbb
loopne
sbb
xlat
cmpsb
and
add
sub
push
sub
data16
js
add
data16
sbb
mov
add
fisubrs
add
mov
pop
cmp
mov
pop
int
js
lret
pop
addr16
mov
pop
cmp
lahf
out
jno
inc
sbb
sbb
jmp
dec
and
jb
push
and
arpl
dec
or
pop
pop
mov
push
and
ficompl
add
and
push
add
imul
xchg
add
imul
jae
add
push
pop
jae
js
leave
aas
inc
outsl
mov
mov
push
fs
je
incl
jo
imul
outsl
ss
inc
add
push
popa
int
inc
outsb
enter
or
popaw
or
ja
push
lcall
dec
stos
inc
add
gs
xchg
data16
jae
pushw
add
push
cwtl
fs
movsb
pop
aad
popf
pop
frstor
add
xor
imul
cmp
loope
je
in
js
mov
xor
fs
or
loope
xor
fmull
mov
dec
and
aam
sbb
mov
adc
fimull
mov
mov
pushl
std
dec
loope
aam
fisttpll
add
add
loopne
jmp
into
pusha
ror
iret
incl
add
lret
ret
ret
or
rcll
fcmovb
movsb
sbb
add
sbb
out
jno
test
inc
adc
mov
repz
int3
lcall
int3
push
add
pop
lds
sbb
add
in
xor
add
lock
adc
xor
out
std
ss
lret
aaa
jecxz
repz
fdivrp
cld
aam
in
or
shlb
call
sbb
push
lods
sub
pop
iret
xor
gs
push
mov
pop
add
mov
sub
pop
lods
sbb
pop
mov
rorb
pusha
popf
lret
punpcklbw
mov
dec
jmp
add
lcall
fdivrp
popa
dec
lods
daa
inc
jmp
fs
pop
cmp
popf
out
imul
jno
push
dec
and
popa
adc
notb
cld
sbb
cmp
jb
hlt
popf
inc
push
pop
into
and
jmp
imul
insl
imul
jae
data16
push
dec
jge
inc
push
push
loopne
insb
cmp
push
aaa
gs
pop
insb
test
js
pop
push
fxch
idiv
stos
mov
pop
dec
jo
push
push
jle
jo
aaa
lcall
inc
movsb
bound
imul
imul
inc
xor
cs
int
gs
inc
popa
insl
add
mov
adc
mov
arpl
jle
push
fst
out
jno
test
mov
add
add
loope
xchg
fwait
repnz
repz
xchg
loope
pop
cmpsb
add
jo
mov
pop
pop
jae
push
gs
icebp
jno
inc
or
pop
push
add
ss
dec
and
fildl
mov
and
mov
inc
adc
loop
sbb
adc
bound
mov
dec
add
lret
adc
fdivr
adc
jecxz
adc
pop
mov
add
clc
xor
fdivr
adc
jecxz
icebp
out
or
mov
shr
das
mov
aad
inc
loop
repnz
add
add
stos
shll
lahf
ljmp
xchg
add
stos
icebp
xor
jae
xor
jp
pusha
stc
sahf
aad
pcmpeqb
and
dec
add
add
sub
adc
xor
sub
push
cs
insb
add
add
cmp
pop
daa
jb
arpl
aas
adc
fildl
out
fs
mov
add
xchg
outsl
add
sub
sub
add
add
jae
and
pop
stos
xor
jo
daa
hlt
aad
or
jo
add
pusha
popf
into
or
add
jmp
and
pop
movsl
rolb
lea
hlt
pop
mov
enter
repnz
cmpsb
hlt
pop
dec
mov
iret
xor
xor
idiv
fcmove
push
or
add
int
popa
out
je
inc
pop
lret
ljmp
push
jns
ljmp
xchg
bound
cmp
pushl
inc
imul
lcall
lret
jb
jo
lods
mov
fcmove
inc
imul
ljmp
shlb
add
popf
push
popa
add
call
pop
and
jecxz
push
jae
aas
les
icebp
arpl
or
pop
repnz
out
in
into
push
add
int3
icebp
decl
add
jle
pop
movsb
and
sahf
test
xor
inc
scas
inc
mov
xchg
int3
arpl
pusha
jmp
ljmp
add
xor
pop
pop
push
add
ds
inc
xor
insl
add
add
xor
imul
pop
push
dec
mov
jb
int3
ss
int3
cs
or
out
pop
aad
cmp
sbb
adc
inc
jmp
sbb
vpmaxsw
fadd
push
push
out
jmp
add
int3
cs
push
mul
sbb
mov
test
add
inc
sarl
pushf
fldcw
fildl
dec
pop
test
out
pushl
ljmp
scas
mov
adc
add
add
out
pop
int3
add
mov
pop
sub
and
add
push
sbb
mov
fs
dec
sbb
dec
ljmp
lods
mull
addr16
add
pop
sbb
pop
adc
daa
std
insb
add
hlt
popa
or
aas
call
pop
jmp
es
insb
mov
and
add
std
insb
int3
out
insl
mov
add
add
out
jno
xchg
mulb
dec
push
dec
into
inc
cmp
inc
gs
movsb
imul
lahf
dec
outsb
lret
jb
enter
jne
je
movsl
data16
shrb
hlt
mov
cmc
jo
imul
jae
je
lahf
push
pop
push
inc
add
xchg
outsb
jo
pushf
push
xor
push
xor
cmpsb
idiv
jb
sahf
push
iret
popf
jo
mov
arpl
push
fxch
inc
push
sarb
pop
pop
incl
popl
cmp
imul
shlb
dec
mov
outsb
add
xlat
pop
adc
gs
sbb
out
out
add
pop
flds
fsub
pop
jecxz
mov
dec
out
iret
fcoms
shr
cmp
das
add
sahf
jmp
push
popf
sahf
outsl
xchg
mov
shll
add
into
imul
pop
pop
gs
shrb
call
xlat
pop
cld
test
sub
test
sub
jp
aas
out
out
jp
add
clc
dec
aam
out
call
and
xor
jg
jne
leave
icebp
xor
icebp
icebp
cmp
mov
lret
data16
icebp
adc
shl
cld
xlat
ret
rcr
adc
out
fucomi
add
inc
lret
and
fwait
out
in
mov
std
ror
lahf
test
add
cmpsb
lret
add
add
inc
lods
add
adc
icebp
movsl
pop
test
jg
adc
add
pop
jnp
and
popf
and
add
aas
pop
stos
or
jae
mov
pop
jmp
pop
repz
cmp
cmp
dec
call
inc
cmp
xor
addr16
jmp
daa
repz
add
push
cli
aas
add
xor
jb
add
adc
inc
mov
mov
idiv
stos
pushf
pop
outsl
fxch
ljmp
mov
pop
gs
pushf
push
je
lret
test
arpl
dec
jo
xchg
push
arpl
bound
les
int3
movl
add
jno
sti
fwait
pop
jne
enter
push
popf
bound
idiv
xchg
lret
pop
gs
pop
jb
lret
negb
jo
inc
mov
lods
std
push
mov
call
outsl
add
fdivl
inc
iret
insl
arpl
and
iret
imul
pop
push
shrb
mov
xor
in
push
sub
pop
pop
push
add
add
loopne
or
add
add
outsb
add
fnsave
mov
repnz
out
mov
jecxz
in
cld
dec
mov
mov
pop
movsb
into
cld
lds
shlb
jl
push
or
mov
out
sbb
aad
jl
incl
mov
push
clc
fwait
loopne
testl
add
lods
jmp
add
jmp
fbld
out
shlb
test
sbb
jbe
dec
shlb
out
xor
cmp
sbb
ss
loopne
inc
call
loop
aaa
rcr
in
xor
lret
aas
add
sti
or
mov
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
iret
add
sbb
add
sub
add
sub
add
sbb
add
sbb
add
jmp
into
add
fxch
add
fxch
add
jmp
into
add
fxch
add
rcr
add
mov
add
int
add
cmpsl
inc
add
inc
add
into
add
pop
into
add
imul
inc
add
pop
into
add
cmp
add
data16
add
pop
into
add
add
add
push
inc
jnp
repz
add
add
add
add
add
add
add
jmp
idivl
add
jle
add
and
add
stos
add
add
cld
incl
in
test
imul
add
add
add
add
add
add
arpl
add
arpl
add
arpl
aaa
arpl
add
arpl
add
arpl
shlb
add
out
add
daa
js
or
add
int3
out
add
pop
inc
pop
or
add
int3
out
add
mov
add
int3
out
add
push
or
add
int3
out
add
add
int3
out
add
or
add
sub
inc
aam
xor
or
push
xchg
js,pt
pop
es
mov
test
add
or
dec
pop
sub
jne
adc
mov
fldl
callw
scas
lods
add
adc
pushf
inc
cmc
imul
mov
inc
xor
cli
dec
out
flds
mov
push
xlat
push
ja
ljmp
out
sub
adc
add
stos
and
jb
add
insl
dec
sbbl
cmp
aas
aaa
nop
out
mov
hlt
scas
movb
imulb
lret
add
xchg
sahf
add
sarl
xor
and
aam
fs
cmp
add
add
ds
lock
mov
push
mov
mov
pop
mov
in
repz
pusha
mov
outsb
movsl
add
push
mov
lret
and
mov
int3
adc
fisttpll
xlat
dec
fwait
sub
aas
arpl
xchg
dec
in
ljmp
pop
outsb
shr
add
xor
in
pushf
daa
stos
out
movsl
stos
scas
jmp
jge
jmp
xchg
adc
sbb
push
cmc
ds
mov
scas
sub
pop
and
dec
mov
imull
repnz
push
cmp
cmpsl
das
lods
jmp
movsb
repz
mov
iret
sbb
cmp
inc
ja
incl
pop
add
inc
lea
xchg
xchg
frstor
lea
xchg
jge
inc
cmp
lret
add
arpl
test
sub
jl
repz
dec
iret
push
orl
je
mov
dec
cli
rclb
out
or
inc
fs
imul
inc
mov
jnp
ret
add
add
fistps
add
mov
aam
cltd
or
adc
jae
mov
mov
dec
inc
movsl
gs
inc
mov
pop
lcall
and
testl
outsb
stos
jo
test
int3
xor
pop
push
sarl
sbb
lea
arpl
decb
lea
sahf
xchg
lahf
testb
add
pop
xchg
or
add
add
or
dec
imul
add
mov
int3
add
add
add
add
add
or
jmp
add
add
add
add
jp
add
add
add
add
add
cltd
iret
add
mov
inc
add
iret
add
cltd
iret
add
ret
xor
add
add
pop
iret
add
pop
iret
add
add
iret
add
pop
iret
add
pop
iret
add
xchg
add
iret
add
sbb
add
sbb
add
dec
daa
inc
add
iret
add
sbb
add
sbb
add
loope
inc
add
into
add
fxch
add
fxch
add
pop
daa
inc
add
into
add
fxch
add
fxch
add
movsl
and
add
add
add
add
add
stos
inc
add
add
add
add
add
add
inc
add
add
add
add
add
xchg
test
add
add
add
add
add
fisubrs
add
add
add
add
mov
inc
add
add
add
add
add
mov
add
arpl
add
arpl
add
shlb
inc
add
add
add
add
int3
out
add
hlt
sub
out
add
out
add
out
add
jg
inc
int3
out
add
out
add
out
add
mov
ror
add
int3
out
add
out
add
lods
sub
lret
out
add
out
add
out
add
int
ror
add
int3
out
add
out
add
mov
ror
add
int3
out
add
int3
out
add
cs
inc
int3
out
add
out
add
out
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
inc
or
add
add
add
add
add
inc
or
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
add
add
add
add
add
jmp
addb
lret
add
fxch
add
test
push
inc
add
lret
add
test
or
add
cltd
lret
add
imul
add
add
inc
add
add
pop
lret
add
and
leave
dec
inc
add
dec
inc
add
dec
inc
add
out
inc
add
out
inc
add
out
inc
add
out
inc
add
lods
jne
add
jne
add
jbe
add
ja
add
inc
add
jno
inc
add
ja
add
ja
add
add
mov
jns
add
jns
add
jns
add
jns
add
jns
add
jp
add
inc
add
inc
add
jp
add
jp
add
add
add
add
add
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
sbb
add
jmp
iret
add
fxch
add
fxch
add
jmp
iret
add
fxch
add
fxch
add
test
iret
add
cltd
iret
add
cltd
iret
add
test
iret
add
add
iret
add
imul
add
pop
iret
add
pop
iret
add
imul
add
pop
iret
add
pop
iret
add
sub
add
sub
add
sbb
add
add
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
add
add
jne
add
jne
add
jne
add
jne
lcall
or
or
leave
int3
or
cmp
add
int
sbb
jne
jmp
cld
incl
mov
inc
push
cltd
jmp
push
cltd
out
push
sub
idiv
cmp
push
lret
cmp
mov
stos
sti
push
nop
stos
or
cwtl
stos
aaa
pop
pop
stos
aas
pop
dec
stos
cmpsl
pop
add
aaa
pop
mov
test
out
xlat
imul
adc
fwait
pop
adc
fwait
out
mov
and
lods
sahf
jecxz
add
jmp
in
pushf
ret
adc
pushf
stos
adc
pushf
mov
adc
pushf
inc
adc
pushf
dec
adc
pushf
arpl
test
adcl
popf
imul
popf
add
add
xorb
adc
xchg
adc
in
sub
pop
shrb
lahf
sub
adc
sub
int
out
sub
neg
sub
sub
ljmp
sub
sub
pop
subb
negl
in
lock
sub
lock
sub
adc
sub
adc
sub
add
out
sub
fildll
insl
sub
pop
inc
sub
jge
pushf
xor
insl
fdivrs
jge
fdivl
sub
or
cmp
sub
sub
dec
ss
fldcw
jl
dec
mov
jge
pushf
ss
lods
ss
aad
ss
aad
add
add
add
fdivr
ss
fmuls
mov
fsubrs
lods
fdivrs
fmuls
fcomps
fsubrs
stc
add
psraw
pop
pop
add
mov
cmp
aam
pop
add
hlt
xlat
js
add
pusha
or
cwtl
or
and
xor
mov
add
sub
or
add
add
stc
or
pop
or
mov
or
call
rorb
fdivrs
add
pusha
or
cwtl
or
and
xor
cmp
inc
cmp
push
sub
inc
std
jecxz
dec
std
shll
std
jae
cmp
movsb
imul
movsb
mov
std
push
movsb
cmp
movsb
mov
adc
add
add
ret
std
jecxz
stos
std
xor
or
push
mov
lret
std
push
mov
imul
mov
call
pop
add
add
lret
pushf
or
fwait
pushf
adc
fwait
pushf
fcomi
or
lret
hlt
fistpl
add
je
xor
icebp
das
pop
push
loope
gs
push
xor
push
inc
xor
xor
xor
xor
xor
adc
xor
or
shll
or
mov
xor
in
lock
aad
xor
push
xor
inc
xor
mov
xor
mov
xor
xchg
pusha
xor
mov
xor
xchg
shlb
add
pop
cmp
popf
pop
dec
xor
pop
xor
pop
push
mov
pop
mov
fstpl
xor
stos
xor
pop
lret
pop
fidivl
lea
xor
cli
xor
pop
sbb
pop
cmp
arpl
int
push
mov
mov
fs
xor
cmp
arpl
xor
arpl
xor
fs
imul
sbb
js
sub
sub
dec
xor
stc
in
imul
out
mov
cmp
stos
cmc
loopne
mov
cmc
push
out
fucomi
cmp
jmp
inc
out
sti
int
clc
or
jo
sbb
js
sub
and
cmp
cs
cli
pop
jns,pn
imul
clc
jnp
jmp
negl
mul
idivl
not
neg
out
lret
or
stos
cltd
adc
fwait
cltd
sti
lcall
sub
fwait
clc
mov
lcall
fistpl
arpl
imul
idivl
fwait
testl
cmp
mov
sub
sti
mov
lret
sti
sub
cld
cmp
sti
imul
jnp
arpl
imul
jnp
add
movsl
insl
cmp
cltd
int
std
mov
cmp
jns
cmp
add
cmp
fnstsw
gs
dec
cmp
cmp
cmp
sbb
cmp
sub
popf
sbb
in
int
std
or
cmp
sti
or
sbb
jmp
cmp
fcmovu
cmp
dec
cmp
cmp
test
sub
add
gs
data16
cmp
std
repnz
pusha
adc
pusha
xor
pusha
push
cmp
pusha
bound
lret
jl
int
mov
lret
lods
cmp
lret
mov
cmp
lret
fdivrl
popa
add
cmp
pop
xor
or
pop
bound
add
cmpb
dec
mulb
cmc
test
ret
in
shl
in
mul
ffree
cmc
repz
hlt
add
pusha
hlt
adc
mov
and
and
xor
sub
inc
cs
hlt
push
es
hlt
arpl
add
jae
jmp
repz
push
dec
hlt
mov
imulb
hlt
ret
out
inc
hlt
shl
mov
jecxz
inc
hlt
repz
push
add
add
pusha
cmc
adc
mov
and
and
xor
test
repz
daa
leave
repz
int3
sar
push
lahf
pop
cld
sbbl
cld
arpl
sbb
ret
sahf
adc
rcrl
adc
xchg
sahf
out
add
jae
add
fcomi
add
repz
repz
fwait
xor
mov
cmp
jecxz
push
hlt
add
fwait
pop
hlt
sbbl
hlt
arpl
fwait
hlt
inc
fwait
mov
xor
xchg
hlt
adc
shl
adc
add
aad
xor
aam
das
fldcw
gs
xor
cmp
test
sbb
and
lea
push
xchg
sbb
sub
add
cs
jb
cs
imul
aad
mov
cmp
inc
or
xor
xor
cmp
sub
cmp
sbb
cmp
sti
push
ljmp
pop
cli
cmp
pop
add
fstps
cmp
pusha
out
cmp
idivb
add
pop
push
cmp
pop
cmp
pop
cmp
cmp
inc
cmp
pop
push
cmp
pop
jle
mov
pop
mov
inc
pop
fidivrs
cmp
pop
out
cmp
pop
cmp
mov
cmp
sarb
jns
fidivrl
add
jecxz
xor
hlt
repz
add
add
gs
das
and
out
aaa
sbb
out
aas
adc
out
inc
or
out
dec
add
out
fwait
std
dec
out
mov
in
dec
out
mov
movsb
in
mov
aad
in
outsl
into
adc
dec
sbb
push
aas
inc
stc
pop
aaa
cmp
clc
fbld
bound
add
cld
incl
stc
jmp
adc
jmp
adc
in
xchg
clc
in
repz
in
xchg
repz
in
lahf
add
dec
in
cmpsl
rorl
out
int3
lret
inc
out
addr16
push
mov
out
repz
out
jmp
jnp
fbld
shl
pop
mov
repz
out
add
push
mov
ret
icebp
daa
mov
mov
pop
mov
arpl
xchg
jae
xchg
mov
inc
icebp
cmpsl
mov
push
add
lret
sti
or
xchg
mov
xchg
xchg
stos
cld
sub
add
mov
xchg
add
cmp
or
cmp
cli
xchg
cmp
dec
cmp
and
scas
fcmovnb
xor
iret
out
call
enter
mov
int3
add
add
add
xor
inc
sub
add
nop
xchg
sub
xchg
ja
cld
insl
mov
shrb
test
cld
cmp
pop
jecxz
jp
shll
dec
inc
xor
je
sub
add
popa
add
push
push
popa
cmp
xor
aas
xor
idiv
jmp
int3
add
fstpl
xor
pop
aaa
xor
add
imul
jecxz
fnstsw
iret
push
push
cmp
lock
test
int3
add
lea
lea
sbb
xor
pop
jae
rcrb
xor
push
inc
xor
pop
icebp
ja
div
lahf
hlt
lock
aam
icebp
sbb
aad
out
add
xor
jecxz
cmp
neg
sub
nop
clc
sub
sub
in
mov
sub
inc
idivl
jbe
mov
jmp
imul
aaa
rcl
in
test
xor
repnz
or
xor
out
fcoms
ret
adc
pop
adc
push
lock
xchg
out
add
lahf
out
cmp
mov
repnz
lret
out
pop
mov
in
fistps
in
xor
xor
aaa
sahf
pop
out
test
mov
in
adc
cmp
sti
xchg
fwait
sti
and
sti
std
xchg
clc
xchg
cli
push
xchg
call
stc
xor
js
add
xchg
sar
xchg
std
notl
add
dec
leave
xor
push
mov
xor
xor
xor
xor
xor
xor
mov
adc
movsb
adc
cmc
lock
xor
icebp
divl
dec
icebp
xor
sarl
jecxz
lds
xlat
rorl
aaa
fcom
xor
mov
shll
add
out
xor
jmp
add
add
mov
das
xlat
insb
add
mov
jbe
insl
xor
pop
mov
lret
pop
mov
sbb
mov
test
xor
in
dec
pusha
cmc
xor
pop
or
negb
xor
pop
cmp
in
inc
xor
pop
bound
jmp
outsb
xor
pop
jge
ja
lea
cmp
xor
cmp
pop
shll
jae
loope
xchg
xor
pop
xor
pop
sub
scas
pop
inc
xor
inc
xor
push
xor
pop
xor
ja
divps
xor
popa
out
in
xor
clc
or
push
sub
insb
push
in
negl
push
sbb
jmp
pop
ljmp
loope
xchg
js
ljmp
add
add
and
call
bound
add
xchg
add
lock
sarl
mov
icebp
cmp
cmp
lock
daa
jmp
fbld
add
jno
add
or
out
mov
repz
sti
fs
add
add
add
repz
mov
sbb
jg
lods
aam
out
pusha
int
pop
testl
push
lea
push
in
inc
xchg
cld
jmp
add
aam
lock
hlt
ljmp
add
fcoms
ljmp
and
mov
xchg
xor
pop
xchg
xor
pusha
xchg
add
pop
xchg
hlt
ljmp
hlt
ljmp
push
ljmp
je
pusha
xchg
test
pop
xchg
je
jo
je
pop
xchg
je
rclb
add
jnp
cmp
jae
cmp
imul
pop
arpl
cld
pop
pop
cmp
imul
in
pop
ret
cmp
push
mov
cmp
sub
cmp
sbb
je
adc
je
mov
movsb
sbb
cmp
insb
cmp
pop
cmp
cmp
cmp
add
les
hlt
stos
mov
cmp
lcall
add
xor
mov
cmp
dec
cmp
pop
cmp
enter
add
aad
add
mov
pop
je
mov
pop
test
xor
pop
lds
pop
xlat
xor
pop
stc
xor
push
cld
xor
push
or
add
int
sbb
int3
push
pop
xor
icebp
push
and
repnz
mov
dec
push
mov
aaa
pop
pop
shll
mov
sbb
cmpsb
pop
and
pop
ljmp
and
xor
push
lret
sti
ljmp
insb
out
xor
in
sub
arpl
add
xlat
add
add
repnz
sub
cld
adc
in
push
icebp
div
jp
icebp
nop
icebp
xlat
icebp
fdiv
mov
repnz
shl
out
xchg
movsb
in
dec
int
in
push
aaa
jmp
das
jmp
aaa
in
mov
shr
mov
and
prefetchnta
in
or
cli
lret
or
inc
xchg
pop
ljmp
leave
out
adc
sub
ret
xchg
xor
ljmp
in
jg
dec
out
add
mov
in
xor
out
add
jmp
add
jmp
enter
cwtl
fwait
push
pop
pushf
xchg
repz
pushf
lret
repz
mov
out
icebp
icebp
dec
lcall
cld
lcall
xlat
lcall
sub
sub
mov
sub
scas
jp
arpl
scas
mov
sub
xchg
jg
inc
mov
jne
cs
insl
or
mov
insl
es
pop
push
test
sbb
das
repnz
mov
dec
sti
sub
jle
das
mov
xor
cmp
sub
cmp
and
cmp
cmp
jl
mov
nop
in
push
cmp
in
aaa
and
aad
cmp
in
cmp
inc
pop
popf
cmp
pop
leave
cmp
pop
pusha
cmp
pop
stos
cmp
pop
hlt
cmp
sub
imul
arpl
cmp
bound
les
ljmp
add
inc
leave
add
in
push
xlat
xor
push
adc
xor
fnsave
push
push
aas
xor
push
lods
xor
xor
xor
pop
sub
pop
dec
sbbl
add
xchg
add
sub
in
sub
dec
or
fst
cld
std
hlt
stos
out
in
cmp
mov
fcomip
ljmp
mov
add
adc
mov
jg
pusha
xor
in
scas
xor
jmp
repnz
rdrand
add
or
and
sbb
inc
clc
aaa
ljmp
loope
xchg
inc
in
fdiv
jmp
or
xor
mov
cmp
fildll
int3
sbb
out
or
call
or
jmp
cltd
or
pop
or
jmp
add
or
int3
test
lea
in
add
add
and
jmp
add
jmp
add
dec
in
scas
pop
outsb
out
or
arpl
int3
aas
add
int3
adc
inc
std
adc
mov
add
push
test
pop
add
jno
subl
cmp
sarl
ror
sub
adc
pushl
add
lea
ret
cltd
mov
xor
push
ss
es
cwtl
inc
ss
add
add
jae
xor
jae
xor
push
cmp
notl
xor
xor
fidivl
add
ljmp
adc
xor
adc
sub
insb
cmp
xor
cmp
xor
cmp
xor
add
addr16
dec
cmp
xor
out
cmp
ss
adc
adc
aaa
test
xorl
cmp
cmp
lods
cmp
ss
mov
aad
mov
xor
in
pop
xor
cmp
xor
cmp
xor
cmp
dec
das
cli
ds
xor
sahf
xor
add
daa
xor
lcall
incl
arpl
add
fsubr
inc
shr
in
arpl
add
jge
movsb
icebp
lahf
xor
mov
xor
in
adc
paddsw
sub
out
lret
repnz
lock
or
iret
lock
in
or
xchg
or
outsl
int
lock
aad
lock
into
mov
xchg
cmpsl
jecxz
cs
xor
add
mov
pop
pop
push
out
cmpxchg
pop
test
out
idiv
out
out
inc
in
call
add
in
mov
add
ljmp
or
jbe
push
call
jnp
in
in
push
inc
push
push
out
push
cltd
out
pop
push
in
inc
call
add
int3
scas
repz
repz
add
add
cld
repz
cld
dec
repz
std
jmp
icebp
and
mov
repnz
icebp
lock
iret
lock
mov
jbe
push
icebp
mov
aam
jecxz
add
pop
sub
mov
jo,pn
xchg
and
xor
pop
adc
mov
cmpsb
fsubl
cs
fucomi
cmp
mov
add
add
dec
cmp
push
cmp
or
aaa
mov
xchg
aaa
or
lcall
ss
cmp
dec
lcall
imul
cmp
cmpl
imul
cmp
pop
xlat
cmp
das
xor
cmp
xor
cmp
aam
dec
add
ljmp
dec
cmp
sub
cmp
sub
cmp
push
sub
cmp
jg
repnz
mov
sub
shrb
ds
xor
adc
loope
dec
aas
iret
sub
aas
into
sub
lcall
leave
add
pop
and
xor
and
xor
xor
mov
mov
add
push
int3
data16
mov
sahf
into
ret
repnz
iret
js
mov
iret
jbe
sbb
and
std
into
fcomp
sub
lock
add
push
sub
aas
sub
rcll
xchg
aam
sbb
pushf
or
sbb
loope,pt
cmc
icebp
loop
out
jle
jmp
lar
add
int3
mov
sarb
add
add
jno
pop
xor
into
mov
add
add
aad
adc
std
fnstenv
push
fnstcw
std
neg
or
scas
ficompl
add
ficompl
add
sub
push
fstpl
pop
loopne
add
and
pop
loop
add
add
int3
imul
sbb
js
xchg
dec
incb
add
incl
cmp
xlat
jo
jne
outsl
stc
adc
stc
jns
mov
stc
add
sti
cmpsb
dec
jae
pop
cmp
das
stos
cmp
aaa
fsubrs
cmpsb
aaa
push
pop
xchg
cmp
inc
repnz
cmp
mov
cmp
fucomip
xor
loopne
xor
add
cmp
std
mov
call
xor
cmpsb
movsl
xor
mov
and
jge
mov
jmp
add
add
mov
xor
fstpl
mov
and
sbb
cmpsl
xor
push
lock
push
or
cwtl
sbb
xor
sbb
xor
sbb
xor
gs
cmp
xor
mov
xor
divb
sbb
or
sbb
xor
sbb
cli
and
xor
sbb
xor
sbb
xor
and
xor
and
xor
and
xor
and
adc
xor
sbb
xchg
sbb
xor
and
xor
mov
fldcw
sub
fnstenv
sub
fcom
add
or
fcomp
adc
fsubr
or
fdivr
hlt
leave
fdivr
in
cmp
add
in
psubusw
aad
xlat
and
jecxz
sub
int
xlat
dec
xor
in
xlat
push
xor
lahf
fadd
adc
push
and
vmread
in
cs
stc
rcl
test
and
inc
ljmp
fildl
and
or
incb
add
test
ja
lods
add
outsl
inc
call
add
int3
jns
stos
sti
jno
xor
lret
std
push
shlb
call
or
xchg
xlat
xchg
inc
fsubrs
pop
fcomps
testb
add
adc
iret
stc
add
aas
mulb
aas
mulb
aas
notb
dec
testb
aas
divb
aad
add
add
jmp
roll
int3
pop
add
int3
push
shrb
add
shlb
xor
scas
jno
push
mov
aaa
std
stos
xlat
aaa
in
pop
fbstp
or
dec
out
aaa
std
dec
divl
in
cmp
aaa
lods
cmp
aaa
mov
pop
lahf
aaa
lea
aaa
lea
aaa
jge
mov
insl
cmp
cmp
dec
cmp
sub
insl
ficompl
fisubl
lret
jge
jbe
insl
mov
push
cmp
stos
push
cmp
test
fidivrs
jge
out
and
and
cmp
and
cmp
and
cmp
and
cmp
xchg
cmp
and
cmp
inc
cmp
push
les
pop
aam
add
sbb
or
cmp
fsubl
cmp
lds
cmp
dec
and
inc
and
cmp
out
add
mov
and
dec
inc
fisubrl
aas
fdivrs
cmpsl
fimull
fiadds
fcmovbe
into
test
add
sub
fistl
add
aam
sub
int
sub
pop
imul
pop
ret
pop
xchg
fstps
testl
fnstenv
fnstsw
fabs
xlat
push
iret
xor
add
lar
add
rolb
xor
mov
adc
test
fdivr
call
aam
sti
or
aam
sar
xchg
xchg
cli
rcl
cli
and
aad
clc
push
sti
testb
aad
inc
rorl
cmc
cli
rol
hlt
cmpsb
shlb
hlt
cmp
add
add
add
fcompl
add
fiadds
add
xchg
add
jne
outsb
fnstsw
mull
fldl
out
add
mov
xor
scas
hlt
xor
test
xor
test
xor
fcoms
insl
fsubrs
push
enter
enter
mov
cmp
ljmp
xor
push
out
xchg
dec
xorb
adc
dec
lret
sarl
in
ss
mov
adc
cmp
jmp
add
add
dec
push
xor
xor
xor
sub
xor
xor
xor
outsb
xor
shlb
pop
int
xor
lds
xor
pop
sbb
aaa
lret
sbb
aaa
dec
pop
push
cmp
sbb
cmp
cmp
and
cmp
pop
adc
ds
and
jnp
aas
iret
adc
aas
imul
add
adc
outsb
push
push
xor
push
test
add
push
ljmp
sbb
mov
xor
and
xor
jle
int3
pop
out
xor
sbb
xor
sbb
xor
loopne
dec
sub
shr
xor
iret
xchg
jb
int
sbb
or
or
cmp
mov
addr16
mov
test
ret
adc
sub
push
xlat
or
sub
add
add
xor
sub
dec
aad
cmp
mov
pop
aam
sbb
add
daa
fldt
dec
ficoml
cld
mov
shl
fdivs
out
popa
iret
mov
and
add
insl
rclb
cli
jae
jmp
mov
shll
add
xchg
ljmp
ljmp
int
mov
into
push
hlt
mov
mov
mov
fcompl
test
adc
cmc
int
sti
hlt
push
fiaddl
mov
fsubrs
cli
cwtl
aad
stc
cmp
popf
clc
out
add
pop
add
int3
mov
rcrl
sti
push
aam
std
add
xor
xor
mov
lock
add
add
mov
shlb
sub
into
loop
push
gs
mov
comiss
int3
fldcw
push
mov
mov
cs
imul
shld
push
push
lret
dec
into
aaa
loopne
in
aaa
pop
cmp
aaa
sti
cmp
cmp
cmp
pop
popa
cmp
add
aaa
sbb
aaa
testb
mov
add
pop
adc
dec
sbb
xor
sbb
sbb
and
jb
push
mov
pop
sbb
ret
sbb
xor
sbb
xor
sbb
xor
sbb
ss
nop
pop
xor
inc
pop
or
sub
jle
add
adc
cmp
and
aas
imul
cmp
jae
dec
xor
pop
rorb
lock
rorl
dec
shrl
repz
inc
shlb
pop
iret
sbb
xor
flds
xor
xor
bound
mov
les
or
stc
xor
inc
cli
mov
xchg
ljmp
add
jmp
sub
aam
shr
int3
adc
int3
lds
shlb
mov
jecxz
cmc
sar
push
and
or
adc
rorl
int3
mov
rorb
push
add
filds
int3
jmp
lock
mov
rcll
pop
aam
cld
push
aad
stc
lcall
stc
adc
aas
stc
sbb
add
xlat
push
stc
mov
lcall
movsl
clc
mov
lods
clc
jecxz
std
jmp
xlat
loopne
iret
xlat
inc
add
fcoms
add
xchg
dec
xlat
decw
xlat
pusha
call
push
fmuls
fmuls
loopne
and
add
sub
das
mov
sub
and
cmp
cmp
cmp
add
cmp
cmp
cmp
xor
cld
cmp
mov
cmp
or
bswap
cmpb
lds
mov
mov
xor
rcrb
xor
sbb
mov
xor
iret
jp
cwtl
sbb
mov
ss
push
mov
lret
push
mov
ss
push
inc
aaa
add
sbb
mov
add
sbb
xchg
aas
mov
sbb
aas
add
clc
aas
sub
add
xor
and
inc
pop
xor
xor
push
xor
push
xor
push
test
sbbb
xor
into
xor
push
icebp
xor
cmp
adc
xchg
xor
fidivs
pop
push
das
xor
sbb
add
aas
xor
sbb
xor
add
fsts
fcoms
sbb
int3
sbb
lret
inc
or
xchg
or
sar
lds
lret
in
sub
sbb
inc
aam
dec
int3
push
push
cmp
rcrl
xor
ror
dec
and
test
les
push
mov
movl
call
xor
add
shl
rol
rcrl
int3
add
xor
in
adc
outsb
fnstenv
xor
testb
stc
jbe
test
hlt
mov
cmp
fxch
popa
repz
leave
mov
mulb
lret
das
cmc
ret
iret
fsubrp
iret
out
xchg
iret
mov
js
sub
test
out
rcl
out
jo
add
jg
cwtl
out
test
mov
lret
rorb
repnz
or
repnz
int
icebp
insb
int
icebp
ror
icebp
jle
pushf
icebp
fcmovne
adc
leave
into
out
int
jmp
and
or
add
mov
ss
add
add
push
les
add
xor
xor
xor
jns
inc
push
sub
push
add
xor
push
xor
divb
das
lret
sub
das
stos
xor
das
fwait
sub
das
xchg
mov
jae
inc
xor
ror
xor
sar
xor
mov
xor
dec
xor
mov
xor
rorb
or
mov
xor
inc
sbb
add
pop
scas
xor
push
ja
in
push
xchg
xor
add
adc
pop
aaa
das
sbb
sbb
aaa
in
shll
or
ljmp
add
cmp
add
cmp
push
cmp
fdivrs
repz
cmp
add
push
add
cmp
xchg
cmp
mov
cmp
add
inc
add
xchg
cmp
jecxz
add
or
fcompl
movb
rcrb
les
fistpll
xor
jl
dec
sub
jecxz
ret
sbb
les
mov
in
and
add
lea
add
and
or
adc
inc
rorb
aad
xor
inc
rcrl
jg
popf
rcrb
xor
int3
add
ret
into
sub
jle
mov
inc
iret
jmp
add
push
iret
adc
lret
int
adc
stc
repz
and
lret
and
sbb
mov
rcrb
cmc
mov
int3
sbb
pop
int3
scas
hlt
test
cmc
repnz
int
icebp
jne
pushf
repnz
into
adc
iret
into
into
lock
mov
pop
enter
enter
enter
enter
enter
leave
sub
shr
mov
leave
out
jbe
fs
lret
pop
leave
jl
jne
jae
jl
mov
in
mov
mov
lret
hlt
mov
jmp
xor
pusha
mov
leave
add
push
int
lcall
das
sub
xor
sub
xchg
xor
add
ds
dec
into
sub
inc
loop
push
dec
sub
push
jo
and
cmp
xor
sub
xor
cs
xchg
cs
das
push
rcll
add
sub
jge
sub
loope
mov
mov
cmp
sbb
dec
sbb
cmp
sbb
cmp
or
add
ljmp
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
adc
cmp
dec
adc
mov
adc
cmp
popa
adc
loopne
icebp
adc
inc
aas
xchg
adc
dec
adc
xchg
aas
add
mov
pop
leave
dec
xor
add
jns
add
rorb
add
pop
rclb
icebp
add
test
mov
shr
roll
pop
shl
lret
scas
shll
xor
out
sub
rolb
jecxz,pn
sub
mov
in
bswap
les
or
lret
into
les
clc
jne
ds
insl
lret
gs
or
lret
ror
xor
test
enter
les
inc
les
sub
pop
lret
insb
lret
mov
lret
fcmovne
in
sbb
push
in
lret
xchg
in
lret
ja
test
mov
out
enter
enter
enter
enter
leave
xchg
out
leave
push
out
leave
insl
out
pop
mov
cmpsb
lds
es
ss
xlat
call
mov
add
int3
test
int3
ficoml
sub
add
iret
loop
add
and
loopne
sarl
or
loop
test
bound
stc
leave
pop
cmp
mov
lods
xor
enter
mov
js
push
lds
aaa
mov
mov
add
push
aas
xor
push
jb
xchg
aaa
sbb
add
xor
cmp
or
lds
xor
cmp
test
aaa
pop
inc
int3
xor
movsb
inc
xchg
xor
aas
stc
adc
jmp
lret
add
and
inc
xor
add
adc
popa
xor
xor
add
pop
add
xor
repz
add
cmpsb
cli
add
add
cli
jp
and
jle
jg
dec
cmp
adc
mov
push
mov
mov
idiv
pop
pop
add
jns
add
test
inc
xor
add
xor
cli
aas
xor
cmp
cltd
rcll
rol
xor
shr
xor
rcrl
xor
cmp
adc
ja
dec
les
add
rol
pmaxub
cwtl
mul
leave
cmp
lret
dec
lret
movsl
jmp
fcmovnb
sub
add
out
lds
arpl
and
imul
mov
jmp
mov
add
sbb
jne
mov
rcll
repz
cltd
in
dec
shl
xchg
vpaddsw
mov
xchg
fstp
int3
fisubrs
lret
add
jecxz
leave
mov
aas
leave
adc
rol
call
jg
lahf
call
aam
jmp
out
inc
and
inc
pop
out
inc
mov
out
inc
adc
out
inc
lods
out
inc
in
pop
inc
mov
inc
inc
inc
in
inc
outsl
in
jae
int3
and
int3
divl
outsb
fdivl
mov
sub
dec
fsubl
xor
fildl
div
xchg
das
mov
aad
xor
int
xor
int
xor
dec
xor
jae
adc
pop
xor
jns,pn
pop
pop
dec
xor
xor
ret
or
sub
clc
ds
scas
testl
sub
sub
fadds
sub
leave
cltd
cs
leave
xlat
sub
lret
add
cltd
cmp
sub
nop
and
test
xor
add
loop
xor
cmp
bound
les
mov
cmp
adc
aaa
movsl
lea
orb
jge,pt
ret
mov
ds
mov
dec
add
std
movl
xor
xor
in
mov
inc
xor
fstps
cld
fnstenv
push
xor
fsts
xor
fistpl
stos
data16
xor
add
test
test
cmp
out
xor
mov
cld
xor
int3
cmp
hlt
inc
cmp
inc
in
xor
aaa
sbb
and
xor
cld
incl
mov
xor
in
jge
ret
call
dec
ss
xor
add
adc
xor
int
das
dec
sbb
sbb
ss
sub
aaa
cwtl
es
inc
inc
pop
int3
out
add
incl
add
pusha
aaa
xor
movsl
cmp
loopne
inc
xchg
loop
ret
add
popl
add
int3
lret
xor
fmul
xor
fmul
xor
fcompl
xor
mov
dec
fisttpl
xor
dec
xor
dec
fisttpl
sbb
xor
nop
fisttpl
mov
dec
xor
push
fisttpl
add
jmp
popa
fiaddl
add
out
add
das
add
int3
add
sbb
aaa
cli
add
idivb
mov
or
cmp
sti
push
xor
cmpsb
sarb
shrl
shll
aad
ss
into
pop
aaa
add
sub
pop
ds
aaa
in
ss
fldt
int3
add
jecxz
add
add
add
xor
jp
jmp
xor
inc
pushf
ss
add
mov
add
lret
add
aam
das
aas
int
sub
add
lock
enter
cmp
cmp
push
in
cmp
in
cmp
xchg
jo
mov
insl
in
cmp
in
cmp
mov
cmp
mov
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
loopne
cmp
filds
cmp
mov
add
lret
hlt
jmp
enter
fcoms
add
sbb
in
xor
xlat
shll
jecxz
cmp
in
cmp
sbb
cmp
inc
and
add
cld
incl
insb
sub
clc
adc
das
lcall
cs
in
pop
cs
cmp
aam
cmp
add
cmp
sub
cmp
xor
cmp
sub
or
sub
int3
or
sub
xchg
sub
testl
mov
je
fmul
mov
mov
xchg
pushf
jecxz
cmp
cmp
in
cmp
mov
adc
daa
cmp
cmp
in
cmp
add
add
cmp
ja
push
in
cmp
aaa
cmp
pop
cmp
pop
cmp
int3
out
hlt
sbb
out
in
shll
clc
aaa
xor
inc
aaa
dec
fstps
xchg
fnstenv
insb
fldcw
aaa
lods
flds
in
mov
std
out
sub
shlb
or
xor
sub
mov
xor
sub
xor
sub
mov
adc
int
cwtl
sub
aaa
sub
icebp
addr16
icebp
outsl
sub
icebp
push
sub
rcrl
and
pop
sub
rorl
sub
shl
sub
xor
sub
xor
sub
xor
sub
xor
sub
adc
sub
adc
add
mov
cs
out
sbb
out
add
fisubrl
add
fnstenv
loope
add
test
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
iret
add
jmp
iret
add
fxch
add
add
iret
add
jmp
iret
add
fxch
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fxch
add
jmp
int3
add
fxch
add
fxch
add
add
int3
add
cltd
int3
add
cltd
int3
add
test
int3
add
cltd
int3
add
cltd
int3
add
imul
add
pop
int3
add
pop
int3
add
imul
add
pop
int3
add
pop
int3
add
sub
add
sub
add
sbb
add
sbb
add
sub
add
sub
add
sbb
add
sbb
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
sbb
add
sbb
add
jmp
enter
enter
enter
enter
jmp
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
add
and
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
pop
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int3
add
jmp
fxch
add
fxch
add
jmp
int3
add
fxch
add
fxch
add
test
int3
add
cltd
int3
add
cltd
int3
add
test
int3
add
cltd
int3
add
cltd
int3
add
imul
add
pop
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cltd
leave
add
cltd
leave
add
imul
add
pop
leave
add
pop
leave
add
imul
add
pop
leave
add
pop
leave
add
sub
add
sub
add
sbb
add
sbb
add
sub
add
sub
add
sbb
add
add
leave
add
jmp
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
fxch
add
test
int
add
int
add
int
add
int
add
add
imul
add
pop
int
add
add
imul
add
pop
int
add
int
add
int
add
int
add
int
add
sub
add
sub
add
sbb
add
sbb
add
jmp
int3
add
fxch
add
fxch
add
jmp
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
jmp
leave
add
fxch
add
jmp
leave
add
fxch
add
fxch
add
test
leave
add
cltd
leave
add
cltd
leave
add
test
leave
add
cltd
leave
add
cltd
leave
add
imul
add
pop
leave
add
pop
leave
add
imul
add
pop
leave
add
pop
leave
add
sub
add
add
leave
add
sbb
add
sbb
add
sub
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
sbb
add
sub
add
add
into
add
sbb
add
sbb
add
jmp
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
add
imul
add
pop
int
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lret
pop
lret
imul
add
pop
lret
pop
lret
sub
add
sub
add
add
lret
sbb
add
sub
add
sub
add
sbb
add
sbb
add
jmp
leave
add
fxch
add
fxch
add
jmp
leave
add
fxch
add
fxch
add
test
leave
add
cltd
leave
add
cltd
leave
add
test
leave
add
cltd
leave
add
cltd
leave
add
add
add
add
add
add
add
add
repz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cltd
into
add
test
into
add
cltd
into
add
cltd
into
add
imul
add
pop
into
add
pop
into
add
imul
add
pop
into
add
add
add
sub
add
sub
add
sbb
add
sbb
add
sub
add
sub
add
sbb
add
sbb
add
jmp
int
add
int
add
int
add
int
add
int
add
int
add
int
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
lret
fxch
add
fxch
add
test
lret
cltd
lret
cltd
lret
test
lret
cltd
lret
cltd
lret
imul
add
pop
lret
pop
lret
add
add
imul
add
pop
lret
sub
add
sub
add
sbb
add
sbb
add
sub
add
sub
add
sbb
add
sbb
add
jmp
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
int3
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
sbb
add
jmp
into
add
fxch
add
fxch
add
jmp
into
add
fxch
add
fxch
add
test
into
add
cltd
into
add
cltd
into
add
test
into
add
cltd
into
add
cltd
into
add
imul
add
add
add
pop
into
add
pop
into
add
imul
add
pop
into
add
pop
into
add
sub
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jecxz
add
mov
pop
lret
pop
cmp
lret
rcrb
mov
iret
stos
mov
push
push
int3
dec
or
xchg
aad
repz
out
sbb
int3
pop
push
inc
out
jnp
es
add
mov
add
das
popa
mov
in
jmp
xor
incl
inc
dec
push
lcall
add
imul
inc
pop
mov
dec
xchg
sahf
jns
daa
mov
xchg
outsl
push
mov
xor
mov
fdiv
or
or
push
lea
and
std
sub
shll
sub
xchg
orl
or
inc
jns
icebp
push
mov
int3
jmp
adc
movsb
fidivs
fdivrs
test
add
cwtl
xor
repz
jns
pop
shrb
sti
push
mov
mov
aad
out
popf
or
dec
movsl
bound
mov
or
or
fcmovnb
js
in
out
daa
cmp
pop
pop
clc
or
je
in
jmp
cmpsl
inc
xor
adc
in
adc
push
add
mov
push
outsl
icebp
and
push
aad
sub
push
jecxz
sub
adc
push
mov
xchg
aas
mov
in
inc
sbb
or
inc
pop
imul
cmp
insb
mov
jns
push
sti
dec
dec
mov
fimull
jo
clc
shll
xor
dec
xchg
xor
fisubrs
rol
add
pusha
sub
dec
mov
call
mov
add
bound
adc
push
and
cmp
clc
adc
loopne
mov
mov
dec
inc
les
dec
sbb
xchg
pop
movb
scas
mov
inc
push
and
cli
adc
dec
fisubs
stos
es
mov
sbbb
notb
add
les
add
int3
mov
inc
in
mov
inc
jnp
push
ret
mov
in
scas
xchg
xor
in
jo
jnp
add
mov
mov
inc
cmp
jnp
and
xchg
les
jmp
lea
sbb
push
inc
in
in
mov
inc
cmp
jnp
loopne
xor
inc
dec
in
xchg
mov
je
dec
or
clc
mov
add
inc
cmp
mov
mov
lods
add
inc
dec
lock
clc
mov
iret
add
inc
inc
cld
inc
xchg
add
int3
add
or
hlt
orl
mov
inc
inc
hlt
sti
sbbl
add
inc
dec
lock
add
inc
cmp
stos
mov
add
mov
add
adcl
test
popa
sbb
fcomp
lods
or
push
inc
in
mov
mov
iret
cmp
stos
add
cltd
lock
lahf
rorb
sbb
int3
mov
sbb
int3
aad
in
fs
call
add
outsl
jmp
mov
jl
sub
cmc
addl
nop
nop
add
iret
inc
add
ror
mov
nop
add
jbe
push
pop
rcr
inc
int3
xchg
adc
add
add
fcmovnbe
mov
dec
ret
add
call
cmp
mov
jnp
add
push
add
int3
mov
push
std
mov
mov
fisttpll
pop
pop
pop
push
in
and
cmp
xor
or
mov
pop
pop
push
in
mov
rorl
in
pushl
int3
les
sbb
int3
mov
xor
aam
add
push
call
push
cmp
sbb
add
push
cmp
xor
mov
clc
push
cmp
jnp
adc
jg
push
mov
hlt
mov
ror
push
in
aas
hlt
add
int3
add
stc
push
cmp
orl
mov
movsl
inc
adc
int
cld
add
and
mov
fldcw
pop
mov
cmc
cld
ljmp
ror
pop
pop
pop
vandnps
mov
and
or
add
pop
pop
push
in
fs
jns
add
jl
add
add
add
xchg
push
cmp
orl
mov
fstpt
add
cmc
pop
mov
out
roll
inc
cld
jnp
hlt
cmp
jno
mov
add
cli
or
sti
add
mov
push
inc
lock
or
str
xchg
push
cmp
jnp
add
or
clc
mov
lsl
mov
clc
push
dec
or
mov
std
or
mov
push
cmp
add
out
dec
out
mov
ror
push
in
and
mov
push
cmp
jnp
fmull
aam
dec
call
js
add
add
lock
decl
add
int3
mov
lret
dec
lock
cmpl
movsl
lret
add
sub
push
jnp
loopne
dec
aam
push
or
cmc
adc
jns
hlt
mov
pusha
pop
mov
jmp
push
clc
lret
int
mov
push
inc
or
xchg
adc
jnp
loopne
inc
adc
hlt
jnp
loopne
int
add
mov
add
add
mov
dec
jns
add
mov
inc
in
cmpl
cmp
int3
mov
dec
cmp
push
imul
mov
pusha
adc
push
loopne
add
in
lcall
jl
dec
xchg
jnp
mov
in
cmpl
mov
fisttps
int3
roll
push
mov
hlt
decl
mov
mov
testl
add
sar
cmp
mov
xchg
icebp
lea
adc
dec
loopne
aad
out
push
fcompl
pop
push
in
in
push
in
jmp
inc
add
clc
sub
add
push
cmp
push
hlt
ss
lahf
in
les
push
cmp
jnp
adc
jle
push
mov
hlt
mov
ror
xor
push
in
sbb
cmp
mov
fwait
scas
inc
add
add
mov
xchg
int3
xor
push
in
and
lahf
sub
popl
mov
cwtl
mov
jnp,pt
add
rclb
hlt
mov
xchg
push
dec
clc
jns
hlt
mov
jge
insl
inc
andl
sub
stos
mov
push
sbb
js
jne
push
cmp
mov
mov
push
cmp
jns
sbb
imul
dec
dec
push
adc
cmp
xor
sbb
jmp
in
push
adc
int3
cmp
adc
int3
push
push
in
cmp
pop
std
mov
into
mov
add
ror
pextrw
pextrw
push
in
movsb
scas
mov
add
push
cmp
mov
mov
into
dec
cmp
js
mov
jmp
mov
mov
push
pusha
push
cmp
call
add
sbb
shl
aas
dec
mov
push
jae
xor
int3
push
push
jecxz
lock
add
add
fmull
push
jl
dec
or
push
in
call
add
mov
add
cmc
pop
mov
push
cmp
mov
cmp
jno
mov
add
inc
call
hlt
lahf
mov
push
inc
adc
loopne
rcrl
mov
popf
shl
rcrl
add
add
movsl
inc
cld
jnp
inc
sub
or
xchg
or
jnp
call
inc
add
call
cmpl
dec
call
mov
jmp
push
dec
in
hlt
cld
fnstsw
add
inc
int3
lahf
sbb
xchg
stc
pushl
xchg
and
scas
inc
add
imul
into
add
inc
int3
dec
ljmp
adc
cmp
push
jae
xor
int3
mov
jge
inc
pusha
push
dec
xor
loopne
lock
cmc
or
jae
xor
int3
mov
jge
add
jbe
mov
sbbl
jne
jb
push
jnp
hlt
push
pop
int3
cmc
push
shrb
in
mov
int3
mov
push
inc
fdivrs
fmuls
add
push
cmp
jnp
loopne
push
jl
mov
push
mov
jge
push
test
cmc
addl
pusha
dec
mov
add
movsb
mov
push
inc
fadds
push
mov
dec
push
push
dec
loopne
fdivs
xor
lods
scas
inc
add
and
add
mov
push
mov
jecxz
incl
cmp
sbb
mov
fwait
scas
inc
add
adc
xchg
add
xchg
push
jnp
xor
cmc
iret
scas
inc
add
xor
mov
xchg
push
push
dec
mov
and
mov
mov
jge
adc
cmc
addl
dec
push
or
jo
add
jnp
loopne
or
lret
dec
sub
xchg
push
call
dec
mov
inc
add
mov
cmp
in
push
jb
mov
jp
push
aam
mov
add
int3
add
add
adc
int3
aad
in
mov
jg
int3
xor
mov
in
scas
je
cmp
jnp
or
cmp
pop
inc
adc
int3
mov
in
test
cld
aas
add
sbb
insb
jecxz
incl
loopne
dec
clc
jp
add
int3
push
pushl
or
int3
push
push
in
movsb
cmpsl
mov
add
add
add
add
int3
add
cmp
int3
mov
add
push
inc
or
add
lret
call
mov
sbb
pop
add
std
mov
inc
add
add
add
or
add
lret
add
add
or
xchg
add
mov
add
int3
add
sbbl
jne
data16
add
jmp
inc
add
add
or
jns
call
inc
add
call
inc
in
dec
cwtl
inc
add
mov
add
iret
inc
add
loopne
mov
nop
add
std
mov
cld
aas
add
ror
adc
shl
cmp
fildl
mov
lret
cmc
adc
add
scas
inc
add
push
call
orl
mov
mov
jl
aad
cmpl
mov
push
push
sub
push
call
orl
mov
inc
dec
cld
cmp
cmp
rolb
jecxz
sti
pop
fiaddl
mov
lret
mov
add
sub
mov
lret
add
jnp
or
add
sti
decl
dec
mov
add
add
inc
dec
in
hlt
add
inc
inc
loopne
adc
inc
int3
xchg
in
movl
jmp
add
xchg
inc
cmp
fisttpl
add
push
nop
add
int
mov
add
jg
mov
add
inc
clc
orl
mov
add
xor
sub
mov
lret
add
inc
or
push
inc
and
push
nop
add
add
mov
add
scas
inc
add
push
clc
mov
xor
add
fdivrs
xor
movsl
mov
add
cmp
sbb
scas
inc
add
insb
or
mov
add
and
in
std
ja
mov
rorb
rorb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
xchg
mov
out
jno
dec
mov
imul
jmp
mov
xor
mov
aad
lock
mov
cld
jbe
xor
je
outsl
dec
das
mov
add
lahf
jecxz
sub
loop
jecxz
pop
insl
pop
stos
xchg
shrb
test
femms
adc
cmp
jnp
jp
insl
and
cmp
push
sbbl
inc
aam
jl
into
adc
inc
cmp
out
or
jb
cmp
xchg
pop
jnp
test
push
xor
push
sahf
dec
sub
popf
iret
mov
jg
or
lret
leave
or
jns
cmc
cwtl
lea
pop
jl
xor
dec
pop
mov
stc
cmp
in
pop
sbb
fisubrl
addl
push
call
jb
lcall
mov
jmp
shlb
dec
int
test
sahf
dec
xor
jge
or
lods
cmp
leave
ja
loopne
stos
lea
mov
pop
movsb
out
test
sub
xchg
in
fwait
push
xor
jp
clc
mov
fstl
mov
inc
in
add
inc
sub
jmp
add
aas
stos
mov
addr16
adc
insb
sbb
filds
xchg
mov
aam
xchg
imul
iret
push
and
fwait
sbb
shlb
xor
in
cmpsl
enter
leave
enter
xchg
fiadds
fadd
mov
xchg
call
add
mov
daa
roll
popa
jae
jge
cld
lcall
mov
adc
test
add
loope
pop
in
mov
mov
mov
mov
lret
cwtl
pop
outsl
jnp
xlat
lods
mov
and
testb
xchg
or
out
hlt
shl
fldt
in
das
jae
into
mov
lcall
lods
lret
orl
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
pop
pop
ret
push
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
mov
lea
mov
mov
mov
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
cmpl
je
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
mov
movl
movl
movl
mov
mov
movl
movl
mov
mov
lea
push
push
push
call
test
jne
push
call
xor
jmp
lea
push
mov
push
push
call
test
je
push
call
xor
jmp
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
add
mov
movl
mov
add
ret
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
shr
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
mov
add
mov
movl
mov
add
mov
movl
movl
movl
mov
mov
mov
mov
movl
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
movl
mov
xor
mov
movl
movl
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
lea
push
push
call
cmpl
jne
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
add
push
add
add
pop
add
jne
jb
jb
add
je
inc
add
outsb
add
add
insb
add
add
add
outsl
add
je
jb
outsl
add
add
jb
bound
imul
jb
jae
pop
add
insb
add
add
popa
add
add
outsb
add
jb
add
jb
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
in
rolb
add
faddl
add
roll
add
rolb
add
add
aad
add
rolb
add
add
aad
add
roll
add
xlat
push
add
push
add
push
add
push
add
push
add
push
add
add
add
xlat
push
add
xlat
push
add
push
add
xlat
push
add
fadds
add
fadds
add
fadds
add
fadds
add
push
add
push
add
add
push
add
fadds
add
fadds
add
fadds
add
fadds
add
push
add
flds
add
flds
add
add
push
add
push
add
push
add
flds
add
flds
add
flds
add
fiaddl
add
fiaddl
add
fiaddl
add
push
add
push
add
add
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fildl
add
push
add
push
add
push
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
faddl
add
push
add
add
add
push
add
push
add
push
add
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
push
add
push
add
push
add
push
add
fldl
add
push
add
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
fiadds
add
push
add
push
add
push
add
push
add
push
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
push
add
add
add
push
add
push
add
push
add
push
add
push
add
add
filds
add
push
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
push
add
push
add
push
add
push
add
push
add
push
add
add
loopne
add
loopne
add
push
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
push
add
push
add
push
add
push
add
loope
add
loope
add
push
add
add
add
push
add
push
add
push
add
add
push
add
loope
add
loope
add
loope
add
loope
add
loope
add
push
add
loop
add
loop
add
loop
add
push
add
push
add
push
add
add
add
push
add
add
add
push
add
push
add
push
add
push
add
push
add
add
add
xlat
push
add
xlat
push
add
push
add
xlat
push
add
fadds
add
fadds
add
fadds
add
fadds
add
push
add
push
add
add
push
add
fadds
add
fadds
add
fadds
add
fadds
add
push
add
flds
add
flds
add
add
push
add
push
add
push
add
flds
add
flds
add
flds
add
fiaddl
add
fiaddl
add
fiaddl
add
push
add
push
add
add
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fildl
add
push
add
push
add
push
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
faddl
add
push
add
add
add
push
add
push
add
push
add
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
push
add
push
add
push
add
push
add
fldl
add
push
add
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
fiadds
add
push
add
push
add
push
add
push
add
push
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
push
add
add
add
push
add
push
add
push
add
push
add
push
add
add
filds
add
push
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
push
add
push
add
push
add
push
add
push
add
push
add
add
loopne
add
loopne
add
push
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
push
add
push
add
push
add
push
add
loope
add
loope
add
push
add
add
add
push
add
push
add
push
add
add
push
add
loope
add
loope
add
loope
add
loope
add
loope
add
push
add
loop
add
loop
add
loop
add
push
add
push
add
push
add
add
add
push
add
add
add
add
imul
outsl
jne
arpl
add
inc
gs
gs
imul
hlt
add
fs
imul
add
and
inc
gs
jb
arpl
fs
jae
add
dec
add
gs
imul
rolb
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
jb
insl
jo
add
mov
insb
jae
jb
jo
push
add
sbb
dec
jne
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
inc
jne
jb
outsb
je
push
dec
add
flds
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
out
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
test
inc
jne
jb
outsb
je
jb
arpl
jae
inc
add
jne
push
jb
arpl
outsb
inc
popa
arpl
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
std
add
popa
insb
inc
jb
add
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
jb
outsb
push
add
filds
push
gs
imul
gs
add
addr16
jb
popa
imul
stc
add
popa
insb
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
jo
imul
insb
gs
js
jl
inc
jb
popa
je
inc
imul
outsb
addr16
add
pop
add
je
jb
jbe
je
push
jb
imul
push
add
push
jb
jbe
je
push
jb
imul
imul
add
je
outsb
fs
inc
imul
jne
jo
je
bound
push
je
imul
add
je
js
je
outsl
fs
push
add
gs
jbe
outsb
je
add
inc
gs
outsl
insb
jne
gs
popa
insl
gs
outsl
jb
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
popa
imul
je
jo
gs
bound
arpl
add
add
jae
push
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
add
push
gs
fs
imul
jns
push
jae
add
inc
gs
jbe
jb
popa
jo
gs
gs
insb
je
xor
push
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
test
inc
jb
popa
je
dec
outsl
inc
outsl
insl
jo
gs
outsl
outsb
push
outsl
jb
add
mov
inc
gs
imul
push
jo
arpl
add
add
je
imul
js
loopne
push
gs
imul
gs
js
add
imul
insb
insb
outsl
arpl
add
push
imul
jb
gs
add
fs
imul
add
popf
add
popa
jo
insb
insb
outsl
arpl
and
inc
gs
jb
arpl
jae
gs
jo
add
jo
jb
add
je
inc
gs
gs
imul
dec
gs
jo
gs
jb
jns
lret
add
inc
popa
fs
jb
je
push
je
add
push
imul
push
inc
gs
imul
popa
je
add
mov
inc
gs
popa
je
inc
outsl
jb
popa
je
add
sub
jns
je
insl
push
imul
push
jo
arpl
imul
push
imul
imul
outsl
push
jns
je
insl
push
imul
inc
insb
outsl
bound
push
imul
inc
gs
imul
bound
gs
js
add
fiaddl
push
gs
imul
bound
gs
add
addb
gs
outsl
jbe
inc
imul
jns
add
push
fs
imul
gs
push
inc
js
arpl
imul
add
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
enter
inc
popa
fs
gs
fs
je
add
pop
add
je
push
dec
outsl
arpl
add
popa
je
push
push
add
dec
add
je
jns
je
insl
push
imul
insb
gs
imul
gs
push
dec
outsb
outsw
add
inc
jb
popa
je
inc
imul
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
sbb
inc
js
insb
jne
gs
insb
imul
mov
inc
gs
dec
inc
imul
je
bound
arpl
add
je
jne
push
add
cmp
jns
outsl
outsb
add
add
insl
bound
gs
outsb
add
xchg
push
gs
arpl
outsb
add
dec
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
je
insb
imul
xchg
add
outsl
dec
push
add
aam
inc
gs
popa
jns
jne
add
inc
jb
popa
je
push
arpl
outsb
add
gs
push
add
gs
arpl
imul
add
je
gs
dec
jne
push
add
push
arpl
insb
add
push
imul
dec
jb
inc
js
add
push
dec
push
xor
fldl
inc
gs
gs
jb
jae
inc
outsl
insb
outsl
jb
dec
add
gs
je
push
outsb
add
add
gs
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
push
add
jae
outsl
jb
inc
inc
add
gs
outsl
add
sbb
dec
push
je
inc
push
add
xchg
add
je
imul
addr16
js
add
push
gs
popa
jo
outsl
fs
push
add
jbe
inc
inc
add
and
dec
outsl
jbe
push
outsl
inc
js
add
push
gs
dec
gs
imul
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
add
gs
je
push
outsl
insb
imul
add
add
je
je
arpl
bound
arpl
mov
inc
gs
gs
arpl
popa
jo
add
add
gs
je
inc
dec
inc
push
arpl
outsb
add
sub
popa
je
inc
outsl
insl
jo
je
bound
imul
add
je
jb
jae
dec
jb
inc
js
add
gs
je
inc
outsl
outsb
je
outsb
imul
data16
je
imul
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
adc
inc
imul
add
gs
je
inc
imul
add
gs
je
push
popa
je
gs
inc
jb
jae
add
pop
add
insb
arpl
push
arpl
sub
inc
insb
je
add
add
gs
inc
inc
add
rolb
inc
gs
gs
dec
bound
arpl
in
inc
gs
bound
arpl
add
push
gs
imul
outsl
jb
add
push
gs
inc
outsl
insb
outsl
jb
add
dec
xor
cs
insb
add
add
je
insb
add
insb
insb
outsl
arpl
je
insl
popa
insb
insb
outsl
arpl
add
data16
add
les
ja
jae
insl
jo
add
pop
jo
jb
arpl
insb
add
insl
gs
insl
outsl
jbe
add
add
jae
je
add
enter
arpl
arpl
add
mov
pop
jae
ja
jb
outsb
je
add
into
add
jae
arpl
add
add
data16
insb
jo
je
add
push
jae
popa
arpl
add
add
je
imul
imul
jae
popa
je
add
add
jae
arpl
add
add
outsw
jo
outsb
add
add
insb
outsl
jae
add
xor
data16
add
data16
popa
add
data16
insb
insb
add
data16
imul
add
jo
imul
je
outsb
arpl
add
outsl
ja
jb
rolb
jbe
outsb
ja
jb
outsb
je
add
imul
add
adc
pop
ja
outsl
insb
add
imul
add
add
jae
arpl
add
jb
imul
jbe
ja
jb
outsb
je
add
imul
je
add
add
jae
arpl
add
add
arpl
imul
jae
jo
imul
add
jae
jo
add
leave
add
jae
outsb
add
xchg
add
outsb
fs
jb
popa
fs
add
add
insb
insb
outsl
arpl
add
pop
bound
imul
fs
add
outsb
add
add
xchg
jno
outsl
jb
add
add
jae
push
add
arpl
gs
xchg
add
jb
outsb
je
add
add
jae
bound
add
add
popf
add
je
imul
add
imul
ja
arpl
data16
pop
arpl
js
je
movsb
add
js
je
sbb
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
sbb
pop
pop
arpl
inc
imul
pop
arpl
imul
imul
outsl
outsb
je
outsl
insb
data16
add
pop
outsl
outsb
gs
je
and
insb
insb
outsl
outsb
gs
je
fwait
add
js
gs
pop
push
gs
add
push
add
jae
je
popa
jo
pop
je
jo
add
aas
add
jo
pop
insw
outsl
fs
cmp
pop
pop
jo
pop
arpl
insl
outsl
fs
insl
add
fs
jae
pop
imul
add
jae
je
jae
jb
popa
je
gs
add
out
pop
imul
insl
add
add
addr16
popa
imul
pop
add
arpl
insb
outsb
add
jbe
jb
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
add
adc
push
add
add
add
add
sbb
add
sbb
add
adc
push
add
add
add
add
add
add
xor
add
adc
push
add
add
add
add
pop
or
add
add
pop
lock
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
and
and
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
and
and
and
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
and
and
and
cmp
arpl
imul
and
and
and
and
and
and
gs
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
and
cmp
jae
arpl
imul
and
and
and
and
je
jne
je
outsb
outsw
ds
and
and
popa
jae
gs
bound
add
add
addb
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
add
dec
xor
je
mov
xor
dec
cmp
insb
cmp
cmp
cmp
rolb
lock
add
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xchg
xor
shll
out
xor
adc
push
ss
divl
dec
aaa
test
test
mov
xchg
cmp
cmp
and
dec
cmp
cmp
data16
cmp
jle
test
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
cmp
xor
cmp
cmp
cmp
push
cmp
cmp
outsb
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
sub
cmp
inc
cmp
push
cmp
cmp
jb
js
jle
test
xchg
cmp
test
scas
cmp
sarb
cmp
in
ljmp
cmp
push
ds
sbb
and
es
xor
cmp
ds
ds
ds
ds
ds
bound
push
jp,pt
cmpb
mov
xchg
ds
ds
movsb
ds
ds
mov
mov
ds
add
